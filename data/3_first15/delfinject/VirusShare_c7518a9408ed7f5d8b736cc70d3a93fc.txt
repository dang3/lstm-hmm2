add
inc
add
add
jns
add
add
add
add
add
or
push
je
imul
insb
adc
add
add
add
add
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
push
dec
bound
arpl
or
inc
add
rolb
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
push
call
cmpl
je
call
mov
mov
mov
call
mov
xor
mov
jmp
xor
mov
mov
pop
ret
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
push
push
call
cmpl
pop
pop
pop
jne
ret
xor
jmp
ret
lea
push
mov
call
mov
pop
ret
call
call
ret
nop
push
call
mov
call
xor
mov
mov
pop
ret
lea
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
push
push
push
add
mov
mov
mov
lea
jmp
mov
push
call
mov
mov
mov
test
je
cmp
jbe
mov
cmpb
jne
mov
cmpb
jne
addl
jmp
xor
mov
mov
jmp
mov
cmpb
jne
mov
push
call
mov
jmp
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
test
je
cmp
jne
mov
cmpb
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
sub
add
mov
mov
mov
cmpb
ja
mov
mov
call
mov
mov
mov
mov
mov
xor
jmp
mov
cmpb
jne
mov
push
call
mov
jmp
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
incl
inc
mov
cmp
jb
mov
mov
test
je
cmp
jne
mov
cmpb
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
incl
inc
mov
cmp
jb
mov
cmpb
ja
mov
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
lea
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
ret
lea
cmp
jb
cmp
ja
sub
ret
nop
cmpl
je
call
mov
jmp
ret
mov
push
push
mov
mov
mov
cmp
jb
cmp
jbe
mov
jmp
cmp
je
mov
call
mov
cmpb
jne
cmpl
jne
movl
mov
call
mov
test
je
mov
call
mov
pop
pop
ret
mov
call
ret
mov
push
mov
xor
mov
xor
mov
push
lea
push
mov
push
mov
push
mov
push
call
test
jne
call
cmp
jne
xor
pop
ret
xor
pop
ret
lea
xor
ret
nop
push
push
push
mov
mov
test
jne
xor
jmp
push
lea
push
push
mov
push
mov
push
call
test
jne
call
jmp
xor
xor
mov
pop
pop
pop
ret
mov
push
mov
push
call
dec
sete
pop
ret
nop
push
mov
movw
mov
call
test
jne
call
pop
ret
xor
pop
ret
nop
push
mov
xor
mov
mov
mov
sub
je
dec
je
dec
je
jmp
mov
mov
mov
movl
jmp
mov
mov
mov
jmp
mov
mov
mov
movl
movl
movl
cmpb
je
push
push
push
push
push
push
lea
push
call
cmp
je
mov
cmpw
jne
decw
push
pushl
call
inc
je
sub
jae
xor
push
push
push
pushl
call
inc
je
push
mov
push
push
push
lea
push
pushl
call
pop
dec
jne
xor
cmp
jae
cmpb
je
inc
jmp
push
push
sub
push
pushl
call
inc
je
pushl
call
dec
jne
jmp
lea
movl
movl
mov
cmpw
je
push
jmp
cmp
jne
push
jmp
push
call
cmp
je
mov
cmpw
je
pushl
call
test
je
cmp
jne
movl
xor
pop
ret
pushl
call
movw
mov
jmp
movw
call
jmp
ret
push
push
mov
mov
mov
xor
mov
call
lea
mov
movw
xor
mov
mov
movl
movl
mov
call
push
mov
call
lea
pop
call
mov
call
movb
xor
pop
pop
ret
lea
push
mov
sub
je
dec
sub
jae
mov
call
mov
jmp
xor
jmp
cmp
je
cmp
jne
xor
jmp
mov
test
je
mov
call
mov
pop
ret
lea
mov
call
ret
lea
mov
call
ret
lea
jmp
mov
jmp
mov
push
mov
push
push
push
push
mov
mov
mov
mov
movzwl
and
cmp
jne
push
lea
push
mov
imul
push
push
mov
push
call
test
jne
call
call
xor
mov
jmp
mov
xor
divl
mov
mov
test
je
mov
mov
mov
jmp
cmp
je
mov
call
xor
mov
jmp
mov
call
xor
mov
mov
pop
pop
pop
pop
pop
ret
push
mov
push
mov
push
push
push
push
call
pop
pop
ret
mov
push
mov
push
mov
push
push
push
push
call
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
mov
xor
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
inc
add
rep
pop
pop
ret
mov
sub
jbe
mov
jmp
ret
xor
mov
inc
xchg
call
ret
push
push
mov
mov
call
mov
mov
call
cmp
setge
pop
pop
ret
push
push
mov
mov
cmp
jbe
cmp
ja
push
push
push
mov
push
call
mov
cmp
jne
call
jmp
mov
xor
divl
mov
jmp
mov
call
or
mov
pop
pop
ret
lea
push
push
mov
or
mov
cmp
jbe
cmp
ja
push
mov
push
call
mov
cmp
jne
call
jmp
mov
xor
divl
mov
jmp
mov
call
mov
pop
pop
ret
lea
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
mov
movw
xor
mov
call
test
jne
call
mov
mov
pop
pop
ret
mov
push
push
push
mov
mov
xor
mov
mov
sub
je
cmp
ja
call
test
je
call
movw
mov
movl
movl
cmpb
je
mov
mov
and
shr
mov
mov
sub
je
mov
inc
je
mov
inc
movw
je
mov
movw
push
push
push
push
push
push
lea
push
call
cmp
je
mov
jmp
movl
cmp
je
push
jmp
push
call
jmp
mov
jmp
movw
call
call
pop
pop
pop
ret
lea
mov
and
cmp
jbe
mov
and
call
ret
mov
call
ret
nop
mov
movzwl
sub
cmp
ja
push
mov
mul
push
push
pushl
call
inc
je
ret
mov
jmp
ret
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
mov
cmp
je
cmp
jne
xor
mov
mov
mov
call
cmpw
sete
mov
test
jne
mov
call
mov
pop
ret
mov
push
push
mov
cmpw
je
push
push
push
call
test
pop
pop
pop
je
mov
add
mov
sub
cmp
jg
add
sub
push
push
mov
rep
call
test
jne
pop
pop
jmp
call
pop
pop
pop
pop
ret
add
rep
pop
pop
ret
nop
mov
mov
cmp
jle
sub
push
push
mov
call
call
cmpl
jne
pop
pop
jmp
pop
pop
ret
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
test
jg
ret
lea
push
add
mov
testb
je
movb
movb
lea
mov
mov
call
mov
jmp
movb
lea
mov
mov
call
mov
mov
call
mov
pop
pop
pop
ret
lea
push
push
cmp
jbe
mov
mov
inc
test
je
inc
mov
dec
jne
pop
sub
mov
pop
ret
nop
push
push
mov
mov
and
repz
pop
pop
ret
lea
jmp
ret
mov
push
xor
test
jl
je
cmp
jge
mov
and
lea
fldt
fmulp
shr
je
mov
and
je
lea
fldt
fmulp
shr
je
lea
fldt
fmulp
jmp
neg
cmp
jge
mov
and
lea
fldt
fdivrp
shr
je
mov
and
je
lea
fldt
fdivrp
shr
je
lea
fldt
fdivrp
jmp
fstp
fldt
jmp
fstp
fldz
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
sub
sbb
add
add
add
add
add
inc
mov
mov
add
adc
add
add
sub
test
add
sub
mov
xor
add
add
leave
sbb
add
cs
add
inc
jbe
imul
cmp
add
mov
mov
inc
add
bound
inc
add
xlat
fadds
nop
lods
outsb
xor
xchg
add
test
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
roll
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fsubs
addr16
repz
mov
subb
and
and
outsb
bound
xor
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
push
mov
mov
mov
pop
ret
nop
push
push
mov
mov
xor
mov
inc
rep
pop
pop
ret
lea
mov
test
je
mov
ret
mov
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
test
je
add
call
test
je
call
popl
add
ret
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
call
test
jne
xor
pop
pop
ret
mov
pop
pop
ret
lea
push
xchg
jmp
mov
mov
test
je
movzwl
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
nop
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
movl
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
or
jne
mov
call
pop
push
push
push
push
push
push
push
push
push
push
push
push
jmp
ret
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
xor
push
push
mov
lea
mov
mov
mov
add
call
add
dec
jne
pop
pop
pop
ret
lea
push
xor
push
push
mov
lea
mov
mov
mov
add
mov
add
dec
jne
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
push
mov
call
push
xor
push
mov
push
mov
mov
mov
mov
push
push
call
pop
pop
call
xor
pop
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
movb
mov
push
mov
push
push
mov
push
push
push
call
pop
pop
pop
pop
ret
mov
push
call
ret
nop
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
mov
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
xor
test
je
mov
shr
jmp
ret
lea
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
push
push
mov
mov
mov
xor
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
xor
test
je
mov
sub
push
call
pop
mov
pop
jmp
ret
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
mov
jmp
ret
nop
test
je
ret
nop
add
mov
ret
mov
test
je
mov
shr
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
shr
shr
cmp
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
mov
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
nop
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
pop
pop
pop
ret
nop
test
je
push
push
push
mov
mov
mov
xor
mov
mov
xor
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
jmp
mov
add
dec
jg
jmp
mov
mov
mov
mov
add
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
pop
pop
pop
ret
nop
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
push
push
push
push
add
mov
mov
mov
xor
movl
movl
test
jne
mov
mov
jmp
inc
cmpb
je
movb
mov
cmp
jne
movb
inc
jmp
cmp
jne
inc
mov
cmpb
je
mov
call
cmp
je
cmpb
jne
mov
call
cmp
jne
cmpb
jne
inc
inc
mov
mov
add
sub
jb
add
sub
jb
add
sub
jb
jmp
mov
and
sub
jmp
mov
and
sub
jmp
mov
and
sub
cmpl
jne
cmpl
jb
jmp
jl
cmpl
jne
cmpl
jbe
jmp
jg
mov
cltd
push
push
mov
mov
shld
shl
add
adc
add
mov
mov
inc
xor
jmp
cmpb
je
mov
mov
neg
adc
neg
mov
mov
jmp
mov
add
sub
jae
movzbl
sub
cmpl
jne
cmpl
jb
jmp
jl
cmpl
jne
cmpl
jbe
jmp
jg
push
push
mov
mov
call
push
push
mov
cltd
add
adc
add
mov
mov
inc
xor
jmp
cmpb
je
mov
mov
neg
adc
neg
mov
mov
cmpl
jne
cmpl
je
cmpl
jne
cmpl
setb
jmp
setl
cmp
je
dec
cmpb
setne
or
je
mov
mov
jmp
mov
xor
mov
mov
mov
add
pop
pop
pop
pop
ret
mov
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
push
add
mov
cmpl
jne
push
lea
push
mov
push
call
mov
mov
call
mov
mov
test
jne
mov
mov
mov
add
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmpl
je
mov
cmp
je
mov
cmp
je
mov
cmp
jne
mov
call
mov
jmp
mov
mov
mov
cmpl
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
lea
mov
jmp
mov
push
call
mov
mov
mov
test
je
cmp
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
push
call
mov
test
je
push
push
call
mov
cmpl
je
push
lea
push
mov
push
call
test
je
mov
push
lea
push
mov
push
call
jmp
mov
cmpb
jne
mov
cmpb
jne
mov
add
call
mov
mov
cmpb
je
mov
inc
call
mov
mov
cmpb
je
jmp
mov
add
mov
mov
sub
lea
push
mov
push
lea
push
call
jmp
mov
inc
call
mov
mov
sub
mov
add
inc
cmp
jg
inc
push
mov
push
lea
add
push
call
lea
push
lea
push
call
mov
cmp
je
push
call
lea
push
call
lea
add
inc
cmp
jg
movb
mov
sub
dec
push
lea
push
lea
add
inc
push
call
lea
push
call
inc
add
mov
mov
mov
cmpb
jne
mov
push
lea
push
mov
push
call
mov
pop
pop
pop
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
mov
add
push
mov
push
lea
push
push
call
movb
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
mov
call
lea
push
lea
push
push
push
lea
push
mov
push
call
test
je
lea
push
lea
push
push
push
push
mov
push
call
test
je
movb
movb
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
push
mov
push
lea
push
call
push
lea
push
push
call
push
call
xor
cmpb
je
cmpb
jne
cmpb
je
lea
push
call
lea
add
mov
jmp
decl
mov
cmpb
je
lea
cmp
jne
lea
cmp
je
incl
cmpb
je
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
cmpb
je
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
movb
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
mov
pop
mov
pop
ret
add
push
outsl
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
dec
outsl
arpl
gs
add
add
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
jae
add
add
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
push
push
add
push
mov
mov
test
je
cmpl
jge
push
lea
push
mov
push
mov
mov
call
push
call
mov
mov
mov
call
jmp
mov
mov
call
add
pop
pop
ret
nop
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
mov
mov
push
push
push
call
mov
cmpl
je
xor
push
push
pushl
mov
push
push
mov
push
call
mov
cmpb
je
xor
mov
lea
push
push
push
call
jmp
lea
push
push
push
call
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
pop
mov
pop
ret
nop
push
mov
add
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
xor
mov
movl
lea
push
lea
push
push
push
push
push
push
push
push
call
lea
mov
call
mov
call
inc
push
push
push
push
push
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
test
je
xor
mov
mov
call
xor
mov
lea
push
lea
push
push
push
push
push
push
push
push
call
movl
lea
mov
call
lea
push
lea
push
push
push
mov
push
mov
push
call
mov
lea
mov
call
mov
push
call
pop
pop
pop
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
cmpl
jne
push
call
mov
cmpl
je
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
je
cmpl
jne
xor
pop
ret
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
dec
gs
jo
xor
je
imul
popa
jo
xor
je
gs
add
dec
gs
jo
xor
jb
je
dec
gs
jo
xor
js
add
push
outsl
outsl
insb
push
xor
popa
fs
jb
arpl
jae
gs
outsl
jb
add
outsl
arpl
jae
xor
jb
je
add
outsl
arpl
jae
xor
js
add
add
outsl
arpl
jae
xor
jb
je
add
outsl
arpl
jae
xor
js
push
add
push
push
xor
inc
imul
push
push
xor
dec
gs
add
add
dec
outsl
fs
xor
inc
imul
dec
outsl
fs
xor
dec
gs
add
add
dec
outsl
fs
xor
inc
imul
dec
outsl
fs
xor
dec
gs
push
add
add
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
push
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
push
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
push
mov
mov
call
test
je
push
push
call
pop
pop
ret
xor
pop
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
clc
gs
add
or
insb
gs
popa
insl
gs
or
add
or
popa
jb
push
add
add
add
add
gs
add
add
push
push
push
push
mov
mov
mov
call
mov
mov
jmp
inc
cmp
jl
cmpb
jbe
cmp
jge
mov
call
jmp
dec
cmpb
jbe
push
mov
sub
inc
mov
mov
call
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
call
push
mov
call
mov
mov
pop
call
mov
mov
pop
pop
pop
ret
mov
or
jne
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
push
mov
sub
xor
push
xor
call
mov
pop
call
add
pop
ret
lea
or
jne
mov
testl
je
pushl
pushl
mov
negl
adcl
negl
call
movb
dec
inc
add
ret
push
sub
fnstcw
fnstcw
orw
fldcw
mov
fld1
testl
je
pushl
pushl
andl
push
push
fildll
fildll
fadd
faddp
add
jmp
fildll
filds
fld
dec
fprem
fistps
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
sub
jbe
sub
mov
add
jmp
mov
dec
jne
mov
ret
nop
push
mov
push
mov
sub
xor
push
xor
lea
call
mov
pop
call
add
pop
pop
ret
mov
push
mov
call
pop
ret
mov
add
lea
call
mov
mov
mov
mov
add
ret
mov
cmp
jbe
xor
push
mov
sub
push
mov
call
mov
pop
call
add
pop
ret
lea
push
mov
add
push
mov
lea
push
mov
call
push
call
cmp
je
push
call
testb
jne
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
test
jne
movl
mov
pop
mov
pop
ret
push
mov
mov
call
inc
setne
pop
ret
push
mov
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
dec
cmp
jge
push
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
ret
nop
push
mov
mov
call
push
call
cmp
sbb
inc
pop
ret
push
push
mov
mov
mov
call
push
mov
call
push
call
cmp
sbb
inc
pop
pop
ret
push
push
add
mov
jmp
lea
push
mov
push
call
test
jne
call
mov
jmp
mov
and
jne
push
lea
push
call
push
lea
push
lea
push
call
mov
mov
mov
mov
lea
lea
mov
call
xor
mov
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
not
and
mov
lea
push
mov
call
push
call
mov
mov
cmp
je
mov
call
mov
test
je
mov
call
jmp
call
mov
mov
pop
pop
pop
ret
lea
push
mov
mov
cmp
je
push
call
movl
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
jne
cmpl
setne
and
je
mov
push
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
subl
jae
movl
push
call
cmpl
jne
cmpl
jb
cmpl
jne
push
call
mov
movb
cmpl
jne
push
call
mov
movb
cmpl
je
push
mov
push
call
mov
push
mov
push
call
mov
mov
mov
push
mov
push
call
mov
push
mov
push
call
mov
mov
mov
jmp
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
ret
add
jbe
jo
xor
cs
insb
add
add
push
jne
jb
push
gs
imul
imul
add
gs
push
gs
imul
imul
add
popa
outsb
addr16
gs
imul
imul
inc
push
push
gs
imul
imul
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
call
xor
push
push
pushl
mov
xor
push
push
pushl
mov
xor
mov
push
push
push
call
mov
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
mov
call
push
push
call
mov
mov
cmpl
je
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
inc
call
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
call
mov
push
push
push
mov
mov
call
xor
pop
pop
pop
mov
push
mov
mov
call
mov
call
ret
jmp
jmp
mov
xor
pop
pop
pop
mov
jmp
jmp
xor
call
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
add
push
mov
push
push
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
push
push
pushl
mov
xor
push
push
push
call
mov
test
je
push
mov
call
push
push
call
mov
test
je
push
call
mov
push
call
push
call
test
jle
mov
jmp
xor
xor
pop
pop
pop
mov
jmp
jmp
xor
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
add
add
add
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
cmp
add
or
je
imul
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
adc
inc
add
add
add
inc
add
add
adc
inc
add
add
add
rclb
outsl
inc
add
mov
incl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
call
mov
test
jbe
mov
movzwl
mov
movzbl
mov
lea
mov
xor
call
mov
mov
call
inc
dec
jne
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
add
mov
push
mov
call
push
call
cmp
je
mov
push
call
jmp
xor
mov
add
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
call
test
jne
lea
xor
call
mov
call
push
call
mov
test
je
push
push
push
call
mov
test
je
push
push
call
mov
cmpl
je
push
push
call
mov
test
je
push
call
mov
cmpl
je
mov
dec
lea
call
lea
call
mov
mov
call
lea
mov
call
mov
lea
call
push
call
mov
mov
call
push
call
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
inc
dec
dec
inc
dec
inc
add
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
mov
call
mov
test
jle
mov
lea
push
mov
mov
mov
call
mov
mov
call
jne
inc
cmp
jne
mov
mov
call
jmp
lea
call
jmp
lea
push
mov
mov
mov
call
mov
lea
call
inc
dec
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
push
lea
push
call
mov
lea
mov
call
lea
push
mov
call
mov
mov
mov
call
mov
mov
call
je
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
mov
pop
ret
incl
add
add
add
push
add
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
test
je
mov
mov
cmp
jb
cmp
ja
sub
mov
mov
incl
incl
dec
test
jne
pop
pop
pop
pop
pop
ret
push
push
push
add
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
test
je
mov
mov
cmp
jb
cmp
ja
add
mov
mov
incl
incl
dec
test
jne
pop
pop
pop
pop
pop
ret
push
mov
test
je
mov
mov
call
pop
ret
mov
mov
call
pop
ret
add
incl
add
add
jae
incl
add
add
add
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
and
add
add
and
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
enter
lods
js
add
js
add
je
rolb
add
xorb
and
add
and
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
or
add
push
push
push
dec
imul
loopne
inc
add
add
add
adc
mov
jle
add
cmp
sarb
inc
add
cmp
push
cmp
sbb
add
inc
add
push
push
push
xor
inc
add
add
add
and
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
add
add
sub
add
inc
add
push
push
je
gs
insl
mov
add
add
add
add
jne
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
add
add
addb
sub
add
addl
addb
push
inc
jne
je
insl
dec
gs
outsl
jb
push
je
gs
insl
sbb
add
inc
add
add
push
jbe
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sub
inc
add
addl
sub
add
addb
addl
push
dec
gs
outsl
jb
push
je
gs
insl
mov
nop
ja
add
add
add
add
add
jne
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
add
inc
add
inc
add
add
add
add
add
add
inc
add
add
or
imul
popa
insl
push
push
call
mov
mov
mov
mov
call
test
jle
mov
call
pop
pop
ret
push
push
push
mov
mov
mov
cmp
jne
mov
mov
call
mov
mov
incl
test
je
xor
mov
mov
mov
call
mov
pop
pop
pop
ret
nop
push
mov
xor
mov
call
xor
mov
call
pop
ret
nop
push
push
push
mov
mov
test
jl
cmp
jge
mov
mov
call
mov
decl
mov
cmp
jge
sub
mov
shl
mov
lea
mov
lea
call
cmpl
je
mov
mov
mov
mov
call
pop
pop
pop
ret
lea
push
xor
mov
test
jl
cmp
jge
mov
mov
mov
mov
pop
ret
lea
mov
cmp
jle
mov
test
jns
add
sar
jmp
cmp
jle
mov
jmp
mov
add
mov
call
ret
lea
push
xor
jmp
inc
cmp
jge
mov
cmp
jne
cmp
jne
or
mov
pop
ret
nop
push
push
mov
mov
call
mov
test
jl
mov
mov
call
mov
pop
pop
ret
nop
push
push
mov
mov
cmp
jl
cmp
jg
cmp
je
mov
shl
lea
call
mov
pop
pop
ret
nop
push
push
push
push
mov
mov
test
jl
cmp
jg
cmp
jle
mov
mov
call
mov
cmp
jle
mov
lea
mov
sub
mov
shl
xor
xchg
call
jmp
mov
dec
mov
sub
jg
dec
mov
mov
call
dec
inc
jne
mov
pop
pop
pop
pop
ret
lea
ret
lea
push
push
test
je
add
call
mov
mov
xor
mov
call
lea
push
call
mov
mov
call
mov
movb
mov
test
je
call
popl
add
mov
pop
pop
ret
lea
push
mov
add
call
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
and
mov
call
xor
pop
pop
pop
mov
push
mov
call
mov
add
push
call
ret
jmp
jmp
cmpb
jle
mov
call
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
cmpb
je
mov
mov
mov
call
inc
jne
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
lea
push
call
mov
pop
ret
lea
push
mov
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
pop
pop
pop
ret
mov
add
push
call
ret
mov
push
mov
push
call
xor
push
push
pushl
mov
cmpl
jne
cmpl
jne
mov
mov
call
mov
incl
xor
pop
pop
pop
mov
push
push
call
ret
jmp
jmp
pop
ret
lea
push
mov
push
call
xor
push
push
pushl
mov
decl
xor
pop
pop
pop
mov
push
push
call
ret
jmp
jmp
pop
ret
mov
push
mov
add
push
push
push
movb
call
mov
cmp
jne
cmpb
je
push
call
xor
push
push
pushl
mov
cmpl
je
mov
cmpl
jg
xor
jmp
mov
mov
cmpb
je
jmp
xor
mov
call
mov
xor
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
call
mov
mov
push
call
mov
cmpl
jg
movb
xor
pop
pop
pop
mov
push
push
call
ret
jmp
jmp
movb
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
xor
push
push
pushl
mov
mov
cmpb
jne
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
call
xor
pop
pop
pop
mov
push
mov
mov
mov
mov
mov
movb
mov
mov
call
test
je
mov
call
mov
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
test
je
add
call
mov
mov
mov
xor
mov
call
call
mov
mov
push
push
lea
push
mov
xor
xor
call
mov
mov
cmpb
je
call
popl
add
mov
pop
pop
pop
pop
ret
nop
push
push
call
mov
mov
cmpl
je
cmpb
jne
mov
call
cmpb
je
mov
call
mov
call
mov
test
je
push
call
mov
and
mov
call
mov
call
call
test
jle
mov
call
pop
pop
ret
mov
cmpb
jne
call
ret
ret
lea
push
mov
test
jne
call
mov
mov
call
pop
ret
nop
push
cmpw
je
mov
mov
mov
call
pop
ret
cmpw
je
push
push
call
ret
nop
push
mov
add
mov
push
push
push
push
call
mov
xor
push
push
pushl
mov
push
call
xor
push
push
pushl
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
movb
cmpw
je
mov
mov
call
push
call
xor
push
push
pushl
mov
push
mov
push
call
xor
pop
pop
pop
mov
push
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
mov
test
je
mov
call
mov
pop
ret
nop
cmp
je
test
je
call
jmp
call
ret
mov
push
mov
movb
mov
push
call
test
setge
mov
call
pop
ret
mov
push
push
mov
mov
push
call
mov
test
setge
mov
call
dec
jne
movb
pop
pop
ret
lea
movb
ret
lea
push
add
mov
mov
mov
call
mov
cmp
jne
xor
cmp
jne
push
push
push
push
lea
push
call
push
call
call
push
push
push
lea
push
push
call
test
jne
jmp
push
mov
push
call
push
mov
push
call
cmp
sbb
inc
mov
call
mov
add
pop
ret
lea
add
push
push
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
nop
push
mov
pushl
pushl
xor
mov
call
pop
ret
push
add
mov
push
push
mov
mov
mov
call
mov
mov
push
push
mov
mov
mov
call
mov
mov
pushl
pushl
xor
mov
mov
call
mov
mov
add
pop
ret
ret
lea
push
mov
mov
cmpl
jne
cmpl
jb
jmp
jl
cmpl
jne
cmpl
jbe
jmp
jg
mov
mov
mov
mov
call
pop
ret
mov
ret
lea
push
mov
add
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
jmp
mov
call
mov
cmpl
je
mov
cmp
jne
cmpl
jne
call
mov
mov
mov
mov
mov
cmp
jne
call
mov
cltd
push
push
mov
mov
mov
call
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
mov
mov
movl
movl
cmpl
jne
cmpl
jb
jmp
jl
cmpl
jne
cmpl
jbe
jmp
jg
mov
mov
xor
mov
mov
mov
call
cltd
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
test
je
mov
mov
mov
mov
call
cmp
pop
pop
pop
ret
mov
push
push
push
mov
mov
mov
test
je
mov
mov
mov
mov
call
cmp
pop
pop
pop
ret
mov
mov
mov
ret
nop
push
push
push
mov
mov
test
jl
test
jl
mov
sub
test
jle
cmp
jge
mov
mov
add
mov
call
add
jmp
xor
mov
pop
pop
pop
ret
sub
jb
je
dec
je
jmp
mov
jmp
add
jmp
add
mov
mov
ret
nop
push
push
call
mov
mov
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
mov
xor
mov
call
xor
mov
xor
mov
pop
ret
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
call
mov
cmp
jge
mov
xor
mov
mov
call
pop
pop
pop
ret
nop
push
push
mov
cmpl
jle
mov
cmp
je
mov
add
and
mov
mov
mov
mov
mov
cmp
je
cmpl
jne
mov
call
xor
mov
jmp
test
jne
mov
call
mov
jmp
mov
mov
call
mov
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
test
jl
test
jl
mov
add
test
jle
cmp
jle
cmp
jle
mov
mov
call
mov
mov
add
mov
mov
call
mov
mov
jmp
xor
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
xor
mov
call
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
call
mov
sub
cmp
jge
mov
lea
call
mov
add
mov
mov
call
add
mov
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
add
lea
call
lea
call
mov
lea
mov
mov
call
add
mov
pop
pop
pop
ret
mov
push
push
mov
mov
sub
jb
je
dec
je
jmp
mov
jmp
add
jmp
mov
call
sub
mov
mov
call
cmp
jge
mov
call
mov
jmp
cmpl
jge
xor
mov
mov
pop
pop
ret
nop
push
push
mov
mov
lea
mov
call
cmp
jge
mov
pop
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
jne
push
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
jae
push
call
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
in
inc
add
xchg
sbb
add
and
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
lods
mov
or
outsb
je
outsl
arpl
je
rclb
add
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
call
mov
push
push
push
call
mov
movw
push
call
mov
mov
push
call
mov
mov
inc
jne
mov
push
call
mov
cmpl
je
mov
mov
mov
mov
mov
push
lea
push
mov
push
call
test
jge
movb
jmp
movb
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
lea
push
mov
push
mov
push
call
mov
push
call
movb
pop
ret
lea
push
push
push
push
mov
mov
mov
cmp
jne
push
push
mov
push
call
inc
jne
movl
mov
call
jmp
push
push
push
mov
push
call
mov
cmpl
jne
mov
call
cmpl
jne
call
mov
cmpl
jne
xor
mov
jmp
mov
call
mov
pop
pop
pop
pop
ret
nop
push
push
mov
push
push
push
mov
push
call
mov
cmp
jne
call
cmp
jne
or
jmp
mov
call
mov
pop
pop
ret
lea
push
push
mov
mov
mov
call
mov
mov
mov
call
pop
pop
ret
nop
push
push
call
mov
mov
mov
and
mov
call
mov
call
test
jle
mov
call
pop
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
subl
jae
push
push
call
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
lea
push
lea
mov
mov
call
mov
call
push
call
mov
cmp
je
lea
lea
mov
call
testb
jne
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
call
mov
cmpl
ja
xor
pop
pop
pop
mov
jmp
cmpl
je
push
mov
push
call
mov
pushl
push
pushl
push
call
mov
lea
call
pushl
push
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
mov
push
call
call
jmp
call
mov
push
call
lea
push
push
call
cmp
sbb
inc
test
jne
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
sub
dec
outsb
outsw
inc
insb
insb
add
incl
add
add
add
add
incl
add
add
incl
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
call
movl
movl
mov
call
mov
push
push
call
push
call
jmp
lea
xor
mov
call
lea
xor
mov
call
movl
movl
movl
movl
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
lea
lea
mov
call
cmpl
jne
push
push
mov
lea
mov
rep
movsb
pop
pop
push
lea
push
lea
push
push
call
mov
mov
add
adc
mov
mov
pushl
lea
mov
call
pushl
push
lea
lea
mov
call
pushl
push
pushl
pushl
lea
call
pushl
push
pushl
pushl
lea
call
pushl
push
lea
lea
mov
call
pushl
push
push
call
lea
call
pushl
push
mov
mov
call
add
cmpb
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
add
incl
add
add
add
in
mov
push
push
dec
jne
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
lea
push
lea
mov
mov
call
mov
call
push
call
mov
cmp
je
lea
lea
mov
call
testb
je
lea
push
mov
mov
mov
call
mov
mov
call
je
pushl
push
pushl
push
lea
mov
mov
call
pushl
push
lea
mov
mov
call
pushl
push
lea
mov
call
jmp
push
push
lea
push
push
lea
mov
mov
call
mov
call
push
call
lea
lea
mov
call
pushl
pushl
push
lea
mov
mov
call
pushl
push
pushl
push
lea
mov
mov
call
pushl
push
lea
mov
mov
call
pushl
push
lea
mov
call
mov
mov
mov
call
lea
push
push
call
cmp
sbb
inc
test
jne
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
incl
add
add
sub
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
in
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
movb
mov
call
test
je
xor
push
push
pushl
mov
mov
call
mov
push
call
mov
and
and
and
xor
mov
push
push
call
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
jmp
jmp
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
push
push
pushl
mov
lea
xor
mov
call
lea
xor
mov
call
lea
mov
call
xor
mov
lea
mov
movl
movw
orw
orw
lea
push
call
test
sete
xor
pop
pop
pop
mov
jmp
jmp
xor
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
mov
call
push
mov
mov
mov
call
cmpl
jne
mov
mov
call
pop
ret
add
push
imul
outsl
jb
add
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
incl
add
inc
push
inc
push
add
add
push
mov
add
push
xor
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
call
movl
lea
push
call
mov
dec
je
dec
jne
mov
sub
je
dec
je
dec
je
jmp
mov
mov
call
jmp
mov
sub
jb
je
dec
je
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
sub
jb
je
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
sub
jb
sub
je
sub
je
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
lea
lea
mov
call
cmpl
je
pushl
push
lea
lea
mov
call
pushl
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
decl
add
add
mov
stos
iret
mov
mov
add
add
decl
add
add
outsb
outsl
ja
and
and
xor
add
decl
add
push
imul
xor
xor
add
add
decl
add
add
outsb
outsl
ja
and
add
call
add
add
outsb
outsl
ja
and
jb
gs
xor
xor
add
decl
imul
push
imul
decl
add
add
outsb
outsl
ja
and
add
add
decl
add
add
outsb
outsl
ja
and
xor
decl
add
add
outsb
outsl
ja
and
cmp
add
decl
add
add
outsb
outsl
ja
and
add
incl
add
add
add
add
fmuls
call
test
inc
add
mov
call
pop
ret
add
add
outsl
arpl
jae
jb
popa
insl
gs
je
imul
inc
push
inc
push
inc
pop
inc
inc
push
inc
push
dec
push
push
dec
dec
dec
pop
push
jns
je
insl
pop
inc
outsb
je
popa
insb
push
jb
arpl
jae
jb
xor
add
in
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
movl
lea
push
call
mov
cmp
jae
lea
mov
shr
shr
call
mov
lea
mov
call
mov
cmp
jbe
lea
mov
shr
shr
call
mov
lea
mov
call
mov
cmp
jae
lea
mov
shr
shr
call
mov
lea
mov
call
mov
cmp
jbe
lea
mov
shr
shr
call
mov
lea
mov
call
cmp
jne
mov
mov
call
cmp
jne
pushl
push
pushl
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
dec
inc
add
incl
add
add
inc
inc
add
incl
add
add
das
and
push
mov
xor
push
push
push
push
push
push
push
mov
xor
push
push
pushl
mov
call
mov
mov
mov
xor
div
mov
imul
sub
mov
mov
xor
div
mov
imul
sub
mov
mov
xor
div
mov
lea
mov
call
pushl
push
lea
mov
call
pushl
push
lea
mov
call
pushl
push
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
push
mov
mov
push
push
dec
jne
push
push
push
push
mov
xor
push
push
pushl
mov
mov
call
movl
lea
push
call
cmp
sbb
inc
test
je
call
sub
mov
xor
div
mov
mov
mov
cltd
idiv
mov
mov
mov
cltd
idiv
mov
mov
mov
cltd
idiv
mov
mov
mov
cltd
idiv
mov
cmpl
jge
pushl
push
lea
mov
call
pushl
mov
mov
call
jmp
lea
mov
call
mov
mov
call
cmp
jge
pushl
push
lea
mov
call
pushl
mov
mov
call
jmp
pushl
push
lea
mov
call
pushl
mov
mov
call
cmp
jge
pushl
push
lea
mov
call
pushl
mov
mov
call
jmp
pushl
push
lea
mov
call
pushl
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
incl
add
add
add
add
incl
add
add
xor
add
incl
add
add
add
add
decl
add
add
sub
cmp
cmp
sub
push
push
add
mov
mov
movl
lea
mov
call
test
jne
push
lea
push
call
test
jne
push
lea
push
call
jmp
push
lea
push
call
test
jne
push
lea
push
call
mov
lea
mov
call
add
pop
pop
ret
push
mov
push
push
push
mov
xor
push
push
pushl
mov
push
call
lea
call
pushl
push
push
call
lea
call
pushl
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
incl
add
add
add
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
lea
lea
call
pushl
pushl
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
decl
add
add
gs
gs
add
decl
add
add
gs
imul
decl
add
add
gs
jbe
add
add
decl
add
add
gs
bound
add
add
decl
add
add
gs
imul
incl
add
add
gs
popa
add
decl
add
gs
outsb
jb
xor
outsl
outsb
add
add
decl
add
add
gs
insb
arpl
add
decl
add
add
gs
add
decl
js
cs
jb
arpl
imul
decl
add
gs
cs
imul
add
decl
add
gs
jae,pn
jb
data16
jo
add
add
decl
add
add
gs
outsl
insl
insb
popa
add
add
decl
add
add
gs
popa
arpl
add
decl
add
gs
outsb
outsl
insl
je
arpl
add
add
decl
add
add
gs
insl
jae
data16
decl
add
gs
je,pn
popa
je
jbe
imul
add
decl
add
add
gs
add
decl
add
add
gs
outsl
insl
jbe
jb
decl
add
add
gs
jbe
jae
imul
decl
add
add
gs
gs
bound
incl
add
add
je
push
imul
sldt
add
popa
jae
and
je
jbe
jb
jae
decl
push
inc
and
je
jbe
jb
jae
add
decl
add
add
je
gs
fs
incl
add
add
push
bound
add
call
add
add
jae
gs
imul
outsb
je
jbe
jb
jae
call
add
add
xor
and
je
jbe
jb
jae
xor
js
incl
add
add
jb
popa
outsb
add
call
add
inc
jne
push
jne
and
je
jbe
jb
jae
add
add
call
add
inc
ja
outsl
and
arpl
imul
add
add
call
add
add
inc
data16
jb
jae
arpl
add
add
lcall
add
add
outsb
fs
and
je
jbe
jb
jae
inc
imul
add
add
incl
add
add
jo
outsl
jae
add
decl
add
add
insl
popa
outsb
je
arpl
dec
outsl
jb
outsl
outsb
add
call
add
add
sub
imul
jbe
jb
jae
decl
add
add
push
arpl
add
add
lcall
add
add
outsb
addr16
data16
dec
outsb
je
jb
gs
push
arpl
imul
call
add
add
inc
xor
and
je
jbe
jb
jae
xor
js
call
add
add
jae
outsb
and
je
jbe
jb
jae
add
add
call
add
add
popa
outsb
insl
imul
jbe
jb
jae
add
decl
xor
inc
outsb
je
jbe
jb
jae
add
decl
add
add
gs
jae
add
add
decl
add
add
gs
outsl
insl
jae
add
add
incl
add
add
gs
add
incl
add
add
gs
arpl
add
decl
add
add
gs
imul
decl
add
add
gs
jb
jae
jo
add
decl
add
add
gs
data16
add
decl
add
add
gs
outsl
jo
jne
add
decl
add
add
gs
jae
je
add
decl
add
gs
jae,pn
jb
data16
jo
add
add
decl
add
add
gs
xor
jo
add
decl
add
add
gs
jae
gs
add
decl
add
add
gs
gs
jbe
add
incl
add
add
gs
add
incl
add
add
gs
jo
decl
add
add
gs
jae
data16
add
decl
add
add
gs
popa
imul
decl
add
add
gs
ja
jo
add
lcall
add
add
jb
outsl
outsb
and
jb
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
add
decl
add
add
outsb
gs
insb
popa
jb
add
add
decl
add
add
insl
outsl
outsl
and
jb
ja
insb
insb
add
call
add
add
jb
jae
and
and
jb
ja
insb
insb
add
lcall
add
add
push
arpl
and
je
jb
gs
push
arpl
imul
lcall
add
add
inc
data16
jb
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
add
lcall
add
add
jb
popa
outsb
and
jb
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
add
lcall
add
add
je
outsl
jae
and
jb
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
add
lcall
popa
outsb
fs
and
je
jb
gs
push
arpl
jne
jns
push
jne
je
add
add
lcall
add
add
outsb
fs
and
je
sub
jae
inc
imul
add
add
call
add
add
jb
outsl
and
jb
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
call
add
add
jns
push
gs
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
jmp
add
add
je
gs
fs
das
and
insb
insb
and
popa
jb
and
je
jbe
jb
jae
add
lcall
add
add
addr16
je
and
jb
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
add
call
add
inc
je
outsb
popa
and
xor
and
jb
ja
insb
insb
add
add
decl
add
add
jae
outsb
and
jb
ja
insb
insb
add
decl
add
add
xor
data16
je
inc
jb
add
lcall
add
add
outsb
addr16
data16
push
gs
outsl
outsb
popa
insb
and
jb
ja
insb
insb
add
call
add
add
gs
jb
jae
jb
ja
jbe
add
decl
add
add
gs
jae
jbe
add
decl
add
add
gs
imul
decl
add
add
gs
jb
xor
xor
decl
add
add
gs
jb
js
bound
popa
jae
call
add
add
ja
jb
and
jb
jae
popa
je
outsl
outsb
add
decl
add
add
jb
jne
insb
push
inc
add
add
call
add
add
jae
outsb
and
je
push
jo
ja
jb
add
incl
add
add
xor
data16
decl
add
add
xor
bound
add
push
push
push
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
cmp
jl
mov
mov
mov
addl
dec
test
jne
pop
pop
pop
ret
lea
push
mov
mov
push
push
dec
jne
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
mov
call
xor
mov
call
mov
movl
lea
mov
call
cmp
sbb
inc
mov
jmp
cmpl
jne
mov
mov
movl
lea
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
lea
mov
call
mov
lea
call
mov
pop
call
jne
mov
mov
mov
call
jne
mov
mov
mov
call
jmp
mov
pushl
push
mov
pushl
mov
mov
call
addl
add
dec
jne
cmpl
jne
mov
mov
movl
lea
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
lea
mov
call
mov
lea
call
mov
pop
call
jne
mov
mov
mov
call
jne
mov
mov
mov
call
jmp
mov
pushl
push
mov
pushl
mov
mov
call
addl
add
dec
jne
cmpl
jne
mov
movl
movl
lea
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
lea
mov
mov
call
mov
lea
call
mov
pop
call
jne
mov
mov
mov
call
jne
mov
mov
mov
call
jmp
mov
pushl
push
mov
pushl
mov
mov
call
addl
addl
dec
jne
lea
mov
call
cmp
sbb
inc
mov
cmpb
jne
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
inc
add
incl
add
add
pop
and
push
mov
mov
mov
call
pop
ret
lea
push
mov
mov
mov
call
pop
ret
lea
push
mov
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
call
xor
mov
call
mov
movl
lea
mov
call
lea
mov
call
mov
mov
call
mov
movl
lea
mov
call
lea
lea
mov
call
push
call
pushl
lea
lea
mov
call
pushl
push
lea
mov
call
pushl
push
lea
mov
call
pushl
push
mov
mov
call
lea
mov
call
test
jne
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
add
in
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
push
push
push
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
mov
jmp
mov
push
mov
add
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
mov
call
push
push
push
call
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
push
mov
call
push
push
mov
push
call
test
jbe
mov
call
mov
lea
call
mov
call
mov
mov
call
jmp
mov
mov
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
add
incl
add
add
add
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
sbb
inc
add
add
dec
lods
inc
add
add
add
adc
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
add
add
add
adc
add
add
adc
inc
add
add
adc
inc
add
add
add
inc
add
add
adc
inc
add
add
add
push
push
push
dec
outsb
outsw
mov
push
mov
push
push
push
test
je
add
call
mov
mov
mov
mov
call
mov
call
mov
call
mov
call
xor
push
push
pushl
mov
lea
mov
call
mov
mov
lea
mov
call
lea
mov
call
lea
mov
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
push
push
mov
mov
lea
xor
push
push
pushl
mov
movb
cmpb
je
mov
mov
mov
call
lea
mov
call
mov
mov
call
cmpb
jne
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
xor
push
push
push
push
push
push
push
push
xor
push
push
pushl
mov
mov
xor
push
push
pushl
mov
mov
mov
call
mov
mov
mov
mov
call
cmpb
je
push
pushl
push
lea
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
je
pushl
push
pushl
push
lea
mov
call
pushl
push
lea
mov
call
mov
mov
call
mov
cltd
push
push
mov
mov
call
jmp
pushl
push
pushl
push
lea
mov
call
mov
mov
call
lea
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
push
dec
dec
jl
add
add
incl
add
add
add
add
incl
add
add
xor
add
incl
add
add
add
in
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
xor
push
push
pushl
mov
mov
call
not
test
jg
mov
movb
mov
lea
call
mov
lea
call
call
mov
mov
lea
call
call
jmp
lea
push
lea
mov
lea
call
call
lea
mov
mov
call
lea
call
call
test
jne
cmpb
jne
lea
call
call
xor
pop
pop
pop
mov
jmp
jmp
lea
call
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
xor
push
push
pushl
mov
movb
mov
lea
call
mov
lea
call
call
xor
cmp
jle
lea
mov
mov
call
mov
add
lea
push
lea
mov
lea
call
call
mov
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
movb
lea
call
call
mov
cmpb
je
mov
call
mov
call
call
cmpb
jne
lea
call
call
mov
cmpb
je
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
add
mov
mov
call
lea
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
test
jne
mov
xor
mov
xor
push
push
mov
xor
add
adc
add
mov
mov
jmp
movl
movl
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
mov
mov
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
loopne
inc
add
mov
add
add
add
adc
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
adc
inc
add
mov
add
push
inc
popa
outsb
jbe
jae
mov
add
mov
add
add
and
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
nop
mov
inc
imul
lea
xchg
mov
add
add
add
adc
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
jl
inc
add
inc
add
push
inc
imul
push
cmp
je
push
call
ret
nop
push
push
test
je
add
call
mov
mov
xor
mov
call
lea
push
call
mov
mov
mov
mov
call
mov
test
je
call
popl
add
mov
pop
pop
ret
add
add
add
push
push
call
mov
mov
mov
mov
call
xor
mov
call
lea
push
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
nop
push
mov
push
call
incl
push
call
lea
push
call
pop
ret
lea
push
mov
lea
push
call
push
call
decl
push
call
pop
ret
lea
push
mov
mov
mov
call
mov
pop
ret
add
add
add
add
mov
mov
test
je
mov
not
and
mov
cmp
je
mov
push
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
not
and
mov
pop
pop
ret
add
push
add
add
lea
push
push
mov
mov
mov
cmp
je
test
je
mov
call
xor
mov
andb
test
je
orb
mov
pop
pop
ret
nop
push
push
push
mov
mov
mov
not
and
mov
cmp
je
test
je
mov
mov
call
or
mov
pop
pop
pop
ret
add
add
add
dec
imul
add
not
and
test
jns
add
sar
ret
push
mov
add
mov
mov
lea
push
call
mov
mov
dec
js
lea
cmpw
je
mov
bswap
shr
mov
dec
jns
jmp
push
xor
mov
mov
mov
shr
shl
mov
mov
dec
jns
pop
mov
pop
ret
lea
push
mov
add
push
movw
movw
lea
mov
call
push
call
mov
xor
push
push
pushl
mov
push
mov
push
call
mov
cmp
jl
lea
push
push
push
mov
push
call
cmpl
jne
lea
push
push
mov
sub
push
mov
push
call
movzwl
lea
push
push
sub
push
mov
push
call
lea
push
push
push
mov
push
call
jmp
movzwl
lea
push
push
sub
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
push
call
ret
jmp
jmp
lea
push
call
pop
mov
pop
ret
lea
push
push
push
push
mov
mov
mov
xor
mov
test
je
push
push
push
call
test
je
cmpl
je
lea
cmp
jge
mov
push
mov
push
push
push
call
mov
mov
call
mov
pop
pop
pop
pop
ret
lea
push
push
push
add
mov
mov
xor
mov
push
push
push
call
test
je
cmp
jl
cmpl
jb
push
mov
lea
mov
rep
pop
jmp
mov
xor
mov
call
movl
mov
mov
mov
mov
mov
sub
je
dec
sub
jb
sub
jb
jmp
movw
jmp
movw
mov
jmp
movw
mov
jmp
mov
imulw
mov
movw
mov
cmp
jae
mov
cmpl
jne
movzwl
mov
mov
call
mov
mov
cltd
xor
sub
imul
mov
add
pop
pop
pop
ret
lea
push
mov
add
push
push
mov
mov
lea
mov
call
mov
cmp
jbe
movl
testb
je
addl
jmp
mov
test
jne
mov
mov
shl
shl
add
mov
jmp
mov
shl
add
mov
mov
mov
pop
pop
mov
pop
ret
nop
hlt
mov
add
clc
mov
add
xchg
mov
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
insl
popa
jo
popa
outsb
jbe
jae
rclb
push
push
push
mov
cmpl
je
mov
call
mov
xor
push
push
pushl
mov
mov
dec
cmp
jl
mov
mov
call
mov
test
je
mov
mov
cmp
jne
call
dec
cmp
jne
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
xor
mov
call
mov
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
push
push
call
mov
mov
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
mov
push
push
mov
mov
cmpl
je
mov
call
xor
push
push
pushl
mov
mov
mov
test
je
push
mov
mov
push
call
mov
mov
test
je
push
push
mov
mov
push
call
mov
mov
xor
mov
call
push
call
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
cmpl
je
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
mov
mov
call
push
call
mov
mov
mov
mov
mov
test
je
push
push
call
mov
mov
jmp
mov
xor
mov
mov
mov
mov
mov
test
je
push
push
push
call
mov
mov
push
call
jmp
mov
xor
mov
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
incl
ret
push
mov
test
je
decl
cmpl
jne
mov
call
mov
call
pop
ret
push
push
call
mov
mov
mov
test
je
call
mov
push
call
xor
mov
mov
call
mov
test
je
push
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
nop
push
mov
mov
test
je
cmp
je
call
mov
push
call
mov
test
je
call
mov
push
call
xor
mov
mov
call
xor
mov
xor
mov
pop
ret
nop
testb
je
cmpl
jne
mov
cmp
jne
movl
movl
movl
jmp
cmp
jne
movl
movl
movl
ret
lea
push
mov
add
push
push
push
mov
mov
mov
xor
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
je
mov
cmpl
je
mov
call
xor
mov
cmpl
je
lea
push
push
mov
push
call
push
call
mov
mov
push
call
mov
xor
push
push
pushl
mov
mov
cmpl
jae
mov
mov
mov
or
cmp
jne
push
push
push
mov
mov
push
mov
mov
push
call
mov
jmp
mov
mov
push
mov
mov
push
mov
push
call
mov
jmp
mov
call
mov
xor
push
push
pushl
mov
mov
movl
mov
movw
mov
cmpw
jne
push
mov
push
call
mov
push
mov
push
call
imul
mov
mov
mov
mov
lea
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpw
ja
mov
cmpw
jne
cmpl
je
cmpl
jne
mov
xor
mov
mov
add
add
movl
jmp
cmpl
je
mov
lea
mov
mov
call
jmp
cmpl
je
mov
push
mov
push
call
mov
cmpl
jbe
cmpl
je
mov
add
push
push
push
mov
push
call
mov
mov
jmp
push
mov
push
push
mov
mov
cltd
xor
sub
push
push
mov
push
mov
push
call
mov
push
mov
push
call
jmp
mov
mov
cmp
je
mov
cmp
jne
mov
testb
je
mov
call
mov
lea
mov
add
mov
call
push
push
lea
push
push
mov
push
mov
push
call
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
cmpw
jbe
push
mov
push
mov
push
mov
mov
cltd
xor
sub
push
push
mov
push
mov
push
call
call
call
jmp
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
mov
push
mov
push
call
mov
xor
push
push
pushl
mov
xor
push
push
pushl
mov
xor
mov
xor
cmpl
je
push
mov
push
mov
push
call
mov
mov
push
call
xor
push
push
pushl
mov
cmpl
je
mov
cmpw
jne
mov
cmpl
je
lea
push
push
push
mov
push
call
jmp
push
mov
mov
push
mov
mov
push
push
push
mov
push
call
cmpl
je
mov
push
call
mov
xor
push
push
pushl
mov
mov
push
mov
push
call
mov
cmpl
je
push
mov
push
mov
push
call
mov
mov
push
call
push
push
push
mov
push
mov
mov
push
mov
mov
push
push
push
mov
push
call
cmpl
je
push
push
mov
push
call
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
cmpl
je
push
mov
push
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
mov
push
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
jmp
jmp
mov
push
call
call
call
xor
pop
pop
pop
mov
push
mov
push
call
mov
push
push
call
cmpl
je
mov
push
push
mov
push
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
push
push
add
mov
xor
test
je
xor
mov
push
push
push
call
test
je
cmpl
je
movw
mov
mov
lea
push
mov
push
push
push
call
lea
push
call
mov
mov
add
pop
pop
ret
lea
push
push
push
test
je
add
call
mov
mov
xor
mov
call
mov
mov
call
mov
mov
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
nop
push
push
call
mov
mov
mov
call
mov
call
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
mov
add
push
push
push
mov
lea
push
mov
rep
pop
mov
mov
mov
mov
call
xor
mov
xor
mov
xor
push
push
pushl
mov
cmp
jne
mov
jmp
mov
call
mov
lea
push
mov
push
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
mov
call
cmpl
je
mov
push
call
call
call
pop
pop
pop
mov
pop
ret
lea
push
mov
cmpl
jne
mov
call
cmpl
jne
mov
mov
mov
call
mov
mov
pop
ret
push
mov
mov
call
mov
call
mov
mov
pop
ret
lea
mov
mov
test
je
cmp
jne
cmpl
jne
cmpl
jne
mov
jmp
xor
jmp
xor
ret
mov
ret
lea
mov
mov
mov
cltd
xor
sub
ret
mov
push
mov
mov
call
mov
mov
pop
ret
mov
push
push
mov
mov
mov
call
cmp
jne
xor
jmp
mov
lea
lea
movzwl
cmp
jg
je
dec
je
sub
je
sub
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
sub
jb
sub
je
jmp
mov
jmp
cmpl
jne
mov
jmp
mov
jmp
cmpl
jne
mov
mov
pop
pop
ret
lea
push
push
push
push
mov
mov
add
mov
lea
call
call
mov
test
jle
sub
dec
mov
movzwl
mov
mov
call
imul
mov
add
mov
mov
pop
pop
pop
pop
ret
mov
mov
mov
ret
nop
push
push
mov
mov
test
je
cmpl
jne
cmpl
jne
lea
push
push
push
call
lea
mov
add
movl
mov
mov
mov
mov
movw
mov
imul
mov
lea
push
push
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
test
je
mov
call
ret
nop
mov
cmpl
jne
mov
mov
ret
push
push
mov
cmpb
je
cmpb
jne
mov
mov
test
je
call
mov
push
call
xor
mov
mov
call
mov
call
movb
movb
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
call
mov
xor
push
push
pushl
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
rep
mov
cmpl
je
mov
mov
mov
mov
xor
pop
pop
pop
mov
jmp
jmp
mov
call
call
call
push
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
push
call
ret
jmp
jmp
mov
movb
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
add
mov
mov
mov
call
cmp
je
mov
cmpl
jne
cmpl
jne
cmp
jne
xor
mov
jmp
movl
jmp
test
jne
mov
test
je
cmp
je
mov
call
mov
call
lea
push
mov
mov
mov
call
jmp
mov
test
je
cmp
jne
mov
call
push
push
lea
lea
mov
rep
pop
pop
xor
mov
cmpb
je
mov
jmp
mov
call
mov
lea
push
push
mov
mov
mov
call
cmpb
je
mov
jmp
lea
push
mov
mov
mov
call
add
pop
pop
pop
ret
mov
push
push
push
add
mov
mov
mov
cmp
je
mov
call
push
push
lea
lea
mov
rep
pop
pop
mov
mov
push
mov
mov
mov
call
add
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
call
cmp
je
mov
sub
jae
mov
mov
mov
call
jmp
lea
xor
mov
call
mov
push
lea
lea
mov
rep
pop
movb
xor
mov
movl
mov
mov
mov
mov
movw
xor
mov
movzbl
mov
mov
mov
sub
je
dec
je
sub
je
jmp
mov
mov
jmp
push
call
mov
push
call
mov
movb
push
push
call
jmp
movl
movl
movl
movl
xor
push
push
pushl
mov
lea
push
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
cmpb
je
mov
push
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
push
push
add
mov
mov
mov
cmp
je
mov
call
push
push
lea
lea
mov
rep
pop
pop
mov
mov
push
mov
mov
mov
call
add
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
call
mov
xor
mov
mov
test
je
mov
push
lea
lea
call
mov
add
add
lea
xor
mov
call
movw
mov
call
mov
call
mov
push
mov
mov
push
call
mov
lea
push
push
push
mov
mov
push
call
mov
mov
push
mov
mov
push
call
mov
test
jbe
cmp
jbe
mov
test
jne
cmpl
je
cmpb
jne
lea
mov
mov
call
mov
cmpw
jbe
mov
shl
add
add
mov
mov
mov
add
mov
cmpb
je
lea
mov
mov
call
cmpl
je
lea
call
test
je
mov
test
je
cmp
je
mov
lea
mov
mov
call
lea
mov
mov
call
cmpw
jbe
testb
je
lea
mov
mov
call
xor
mov
imul
lea
mov
call
mov
mov
mov
call
add
pop
pop
pop
pop
ret
add
add
add
leave
call
ret
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
call
mov
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
push
call
push
call
push
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
call
push
call
push
call
push
call
mov
push
call
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
ret
lea
pusha
movb
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
movb
incl
add
inc
add
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
or
inc
add
rolb
sbb
inc
add
add
and
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
add
add
add
add
add
inc
add
add
or
arpl
je
outsl
outsb
jo
inc
add
inc
add
add
add
inc
add
cmp
int3
cmp
sarb
inc
add
cmp
push
lock
add
cmp
push
inc
dec
gs
jo
js
gs
imul
add
rolb
adc
add
and
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
lock
add
cmp
or
dec
jne
dec
dec
gs
outsl
jb
lea
sub
inc
add
roll
adc
add
mov
cmp
enter
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
dec
outsb
dec
jne
inc
jb
outsl
jb
roll
adc
add
add
add
inc
add
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
inc
js
gs
popa
insb
mov
fcom
inc
add
roll
adc
add
xor
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
inc
js
gs
popa
insb
inc
js
gs
imul
add
rolb
adc
add
xor
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
dec
outsb
je
jb
outsl
jb
rclb
add
nop
rolb
adc
add
in
roll
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
inc
imul
outsl
nop
call
add
add
rolb
adc
add
in
roll
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
push
popa
outsb
addr16
jb
outsl
jb
roll
inc
roll
adc
add
in
roll
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
jbe
jb
insb
outsl
ja
inc
add
add
pushf
roll
adc
add
xor
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
dec
popa
je
inc
jb
outsl
jb
hlt
roll
hlt
roll
adc
add
push
roll
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
dec
outsb
jbe
insb
imul
add
add
add
add
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
pop
gs
inc
imul
inc
add
add
push
roll
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
dec
jbe
jb
insb
outsl
ja
sar
inc
add
aam
add
add
add
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
push
outsb
fs
insb
outsl
ja
push
aad
add
add
add
add
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
lock
add
cmp
cmovne
jbe
insb
imul
jb
aad
add
add
add
inc
add
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
insb
imul
add
inc
add
inc
add
add
mov
cmp
enter
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
jbe
jb
inc
jb
outsl
jb
shrb
add
inc
add
add
add
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
inc
arpl
jae
push
imul
outsb
lea
enter
enter
adc
add
xor
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
push
jb
jbe
insb
gs
and
inc
add
xlat
inc
add
add
add
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
push
je
arpl
jbe
jb
insb
outsl
ja
jl
inc
add
add
add
add
inc
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
inc
outsl
outsb
je
outsl
insb
inc
mov
aam
inc
add
xlat
inc
add
add
mov
cmp
enter
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
imul
outsl
jb
shlb
inc
add
fadds
or
add
mov
cmp
enter
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
inc
jae
gs
imul
gs
nop
fadds
nop
fadds
or
add
mov
cmp
enter
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
inc
bound
jb
arpl
jb
jb
in
fadds
in
fadds
or
add
mov
cmp
enter
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
dec
outsb
je
inc
popa
jae
inc
jb
outsl
jb
dec
flds
dec
flds
or
add
mov
cmp
enter
int3
cmp
sarb
inc
add
cmp
push
cmp
sarb
add
inc
push
popa
data16
insb
inc
js
gs
imul
add
add
aaa
xor
add
add
inc
add
add
adc
inc
add
push
jns
push
je
insb
jae
rolb
cmp
add
add
inc
add
add
adc
inc
add
push
jns
push
je
insb
jae
sar
incl
add
add
add
push
push
push
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
mov
or
jne
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
or
jne
mov
testl
je
pushl
pushl
mov
negl
adcl
negl
call
movb
dec
inc
add
ret
push
sub
fnstcw
fnstcw
orw
fldcw
mov
fld1
testl
je
pushl
pushl
andl
push
push
fildll
fildll
fadd
faddp
add
jmp
fildll
filds
fld
dec
fprem
fistps
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
sub
jbe
sub
mov
add
jmp
mov
dec
jne
mov
ret
nop
push
push
mov
mov
call
cmpl
je
mov
pop
pop
ret
mov
incl
add
add
add
add
incl
add
add
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
test
je
mov
mov
call
test
je
mov
mov
call
cmp
jne
dec
dec
test
jg
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
push
lea
mov
mov
call
pop
pop
pop
ret
add
add
incl
add
add
add
in
add
push
mov
test
je
mov
jmp
xor
mov
lea
push
lea
push
lea
push
lea
push
mov
push
call
mov
mov
imull
xor
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
mov
mov
mov
mov
xor
repnz
mov
sub
mov
ret
nop
push
mov
xchg
call
mov
pop
ret
nop
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
xor
or
je
repnz
sub
mov
mov
xor
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
sub
je
pop
pop
pop
ret
mov
push
mov
mov
jmp
test
jne
xor
mov
jmp
incl
mov
mov
cmp
jne
mov
pop
ret
nop
push
push
push
add
mov
mov
mov
cmp
jbe
mov
mov
dec
mov
call
cmp
jne
dec
mov
mov
mov
call
movb
mov
mov
movb
lea
mov
xor
call
add
pop
pop
pop
ret
push
mov
cmpl
je
mov
mov
call
pop
ret
mov
call
pop
ret
lea
push
mov
mov
call
pop
ret
push
mov
add
push
xor
mov
push
push
push
mov
mov
xor
mov
add
mov
xor
mov
mov
mov
or
je
cmp
je
lods
cmp
je
stos
dec
jne
mov
sub
jmp
cmp
je
lods
cmp
je
lea
mov
mov
cmp
jne
cmp
je
lods
call
cmp
jne
mov
cmp
je
lods
jmp
mov
mov
cmp
jne
cmp
je
lods
call
mov
mov
push
push
call
pop
mov
sub
jae
xor
cmpb
jne
sub
jae
add
xor
rep
xchg
sub
jae
add
xor
mov
rep
xchg
sub
jae
add
xor
rep
cmpl
je
push
lea
call
pop
pop
mov
jmp
xor
cmp
je
cmp
jb
cmp
ja
imul
sub
movzbl
add
cmp
je
lods
jmp
pop
jmp
mov
cmp
jg
incl
mov
cmpb
mov
je
xor
cmp
je
lods
ret
and
mov
mov
mov
cmp
jg
incl
mov
lea
mov
movzbl
jmp
dec
filds
add
inc
add
loopne
add
loopne
add
loopne
add
filds
add
inc
add
filds
enter
repz
dec
loopne
add
filds
iret
filds
sbb
inc
add
shr
add
add
fsubrs
rorl
std
decl
faddl
xor
mov
sub
je
mov
cmp
je
mov
cmp
je
jmp
lea
mov
mov
cmp
jbe
xor
sub
je
mov
cmp
je
mov
cmp
je
jmp
cmp
jne
mov
ret
cmp
jne
cmpw
jbe
mov
lea
call
mov
jmp
xor
ret
cmp
jne
mov
lods
movzbl
jmp
mov
jmp
mov
add
cmp
jne
mov
lea
push
mov
call
pop
mov
mov
jmp
cmp
jne
mov
or
je
mov
cmp
ja
ret
mov
ret
cmp
jne
mov
push
mov
xor
mov
jecxz
repnz
jne
dec
mov
sub
pop
ret
cmp
jne
mov
mov
lea
jmp
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jbe
mov
cmp
jne
movzbl
jmp
mov
mov
cmp
jbe
mov
push
push
push
lea
mov
movzbl
mov
call
mov
lea
ret
push
push
lea
mov
call
pop
pop
ret
call
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
test
je
test
je
mov
call
push
mov
push
mov
push
mov
mov
mov
call
movb
mov
jmp
xor
mov
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
push
mov
xchg
xchg
call
pop
ret
nop
push
mov
add
push
add
push
push
push
mov
mov
mov
mov
mov
call
cmp
jge
mov
call
push
mov
push
mov
push
mov
lea
mov
call
mov
jmp
mov
call
mov
mov
mov
dec
cmp
jl
jmp
add
mov
call
mov
mov
call
mov
call
push
mov
push
mov
push
mov
mov
dec
mov
call
mov
mov
dec
cmp
jge
mov
mov
call
jmp
lea
mov
mov
call
pop
pop
pop
mov
pop
ret
lea
push
xor
stos
or
jne
xor
jmp
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
xor
divl
add
mov
inc
dec
or
jne
or
jg
dec
mov
stos
cmp
jne
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
cmp
jne
mov
cmp
jge
mov
cmp
jle
mov
mov
push
mov
cmpb
jb
mov
push
lea
call
mov
movzwl
sub
cmp
jae
mov
call
lea
add
mov
rep
jmp
lea
movzbl
cmp
je
cmp
ja
movswl
cmp
jle
mov
lea
add
mov
add
call
mov
sub
pop
pop
pop
jmp
pop
jecxz
add
jecxz
add
jecxz
add
inc
add
inc
dec
inc
dec
lods
or
jne
mov
dec
ret
cmpb
je
mov
stos
ret
call
movswl
xor
cmp
jg
cmp
jl
or
jg
mov
stos
cmpb
je
mov
stos
neg
mov
rep
jmp
mov
inc
lods
or
je
stos
loop
lods
or
je
mov
mov
stos
lods
or
je
stos
jmp
mov
rep
or
je
xor
jmp
ret
call
call
mov
stos
mov
dec
call
stos
loop
mov
mov
cmp
jbe
xor
mov
mov
movswl
dec
call
ret
call
mov
cmp
jb
mov
movswl
or
jg
mov
stos
jmp
xor
cmpb
je
mov
dec
mov
div
mov
inc
call
stos
dec
je
dec
jne
mov
test
je
stos
mov
jmp
or
je
mov
test
je
stos
jecxz
mov
stos
dec
je
inc
jne
call
stos
dec
jne
ret
xor
mov
mov
cmpb
je
mov
mov
cmp
jbe
mov
add
lea
add
mov
mov
cmp
je
push
push
cmp
je
cmp
je
stos
jmp
call
jmp
call
pop
pop
inc
loop
ret
push
mov
test
je
mov
rep
pop
ret
and
inc
inc
inc
sub
inc
inc
and
sub
sub
and
inc
sub
sub
and
inc
inc
and
sub
and
sub
and
inc
sub
sub
and
inc
inc
sub
sub
sub
and
inc
and
sub
sub
sub
and
sub
sub
and
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
movl
cmp
je
call
jmp
call
jmp
mov
mov
and
je
cmp
jne
testw
je
cmpl
jne
cmpl
je
inc
xor
movb
jmp
fldt
sub
imul
sar
inc
mov
mov
sub
fabs
push
mov
call
pop
frndint
mov
fldt
fcomp
fstsw
fwait
testw
je
fidivl
incl
fbstp
lea
mov
fwait
mov
mov
shr
and
add
stos
dec
jne
xor
stos
mov
add
jns
xor
jmp
cmp
jb
mov
cmp
jae
cmpb
jb
movb
dec
js
incb
cmpb
ja
jmp
movw
incl
jmp
mov
movb
dec
js
cmpb
je
mov
mov
shr
mov
mov
ret
xor
jmp
or
add
add
add
add
add
daa
add
mov
mov
mov
or
je
or
jns
neg
neg
sbb
xor
mov
or
jge
xor
cmp
jl
mov
inc
sub
sbb
jae
dec
add
adc
mov
mov
fildll
mov
mov
sub
je
mov
fidivl
fbstp
lea
fwait
or
jne
mov
mov
mov
shr
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
mov
mov
mov
shr
add
stos
mov
and
add
stos
dec
jne
mov
lea
sub
movb
dec
cmpb
je
mov
shr
jmp
xor
xor
mov
mov
mov
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
push
lea
push
push
push
call
test
jle
mov
dec
lea
mov
call
jmp
mov
mov
call
pop
pop
mov
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
call
test
jle
mov
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
mov
mov
push
mov
mov
xor
mov
call
cmpl
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
xor
push
push
pushl
mov
call
mov
mov
mov
mov
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
inc
add
add
cmp
jne
mov
mov
mov
lea
mov
cltd
idiv
mov
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
inc
add
add
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
xor
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
push
push
xor
push
push
pushl
mov
lea
push
call
mov
mov
call
mov
mov
call
mov
mov
add
sub
jae
push
push
call
push
push
call
mov
mov
movl
add
dec
jne
push
push
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
incl
add
add
add
add
in
xor
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
mov
call
lea
push
call
mov
mov
call
mov
mov
call
add
sub
jb
mov
sub
je
add
sub
jb
xor
jmp
mov
test
je
jmp
mov
sub
je
sub
je
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
jmp
mov
mov
call
jmp
mov
and
bt
jae
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
lea
mov
call
test
jne
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
sub
je
sub
jne
mov
mov
call
jmp
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
add
add
add
incl
add
add
add
jns
add
add
incl
add
gs
add
jns
add
incl
add
add
add
incl
add
add
add
test
je
sub
ret
mov
push
mov
add
push
push
push
mov
mov
mov
push
lea
push
push
call
cmpl
jne
push
lea
push
mov
push
call
test
jne
push
lea
push
mov
push
call
mov
call
mov
jmp
sub
mov
lea
mov
call
mov
inc
lea
mov
call
mov
mov
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
call
test
je
mov
cmpb
je
mov
mov
push
lea
push
mov
mov
push
mov
call
push
call
lea
mov
call
lea
mov
movb
lea
mov
movb
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
add
add
add
add
ljmp
add
add
push
jmp
cmpb
je
mov
call
call
lea
push
lea
push
call
push
lea
push
lea
call
push
lea
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
jmp
push
lea
push
mov
mov
push
mov
call
push
call
push
lea
push
lea
push
push
call
add
ret
add
add
incl
add
add
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
lea
mov
call
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
pop
ret
nop
cmpb
je
call
ret
mov
or
jb
jb
arpl
add
add
add
add
inc
add
add
nop
push
push
add
xor
call
mov
jmp
inc
cmp
jg
cmp
jne
cmp
jg
mov
mov
mov
call
jmp
mov
movb
push
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
mov
cmp
inc
add
or
arpl
je
arpl
add
add
add
add
inc
add
add
push
mov
mov
dec
je
dec
je
dec
sub
jb
jmp
mov
jmp
mov
jmp
and
lea
mov
mov
mov
call
mov
jmp
call
mov
push
mov
jmp
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
test
je
lea
mov
call
jmp
lea
mov
call
mov
mov
movb
mov
movb
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
jmp
ret
mov
push
mov
call
lea
add
mov
call
pop
ret
mov
mov
mov
mov
call
call
ret
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
nop
push
mov
mov
call
and
mov
pop
ret
push
mov
add
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
cmpl
jne
lea
mov
call
jmp
lea
mov
call
mov
mov
push
lea
push
mov
push
call
cmpl
jne
push
lea
push
mov
push
call
test
je
mov
mov
movb
lea
lea
mov
call
mov
lea
call
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
jmp
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
mov
call
and
mov
add
sub
jb
je
dec
sub
jae
lea
mov
mov
mov
call
mov
jmp
push
call
pop
mov
jmp
mov
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
call
mov
call
ret
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movl
mov
movl
mov
mov
mov
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
ret
mov
cmpl
je
mov
movb
mov
mov
call
xor
mov
cmpl
je
mov
movb
mov
call
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
lea
add
movl
push
call
test
je
mov
mov
mov
mov
mov
mov
cmpl
jne
mov
and
mov
jmp
mov
mov
mov
lea
mov
call
add
ret
mov
push
push
mov
xor
test
je
cmpb
je
test
jne
mov
and
bt
jae
mov
jmp
mov
dec
jmp
dec
test
jl
mov
and
bt
jb
mov
sub
and
jns
dec
or
inc
test
jne
mov
jmp
mov
and
bt
jae
mov
mov
pop
pop
ret
lea
push
push
mov
mov
xor
cmpb
je
mov
call
mov
dec
call
pop
pop
ret
nop
xor
cmpb
je
call
mov
mov
ret
lea
push
mov
cmpb
je
push
call
sub
pop
ret
mov
pop
ret
lea
push
push
mov
mov
mov
cmpb
je
mov
and
bt
jae
mov
call
add
dec
call
pop
pop
ret
lea
push
push
add
mov
mov
mov
mov
mov
call
mov
mov
mov
test
je
cmpl
je
mov
mov
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
mov
call
mov
cmpl
je
mov
sub
mov
call
sub
jb
je
jmp
incl
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
push
call
mov
pop
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
add
push
mov
call
push
call
xor
jmp
mov
mov
sub
jb
inc
mov
mov
and
bts
incb
dec
jne
add
cmp
jge
mov
or
jne
pop
pop
pop
pop
pop
ret
mov
cmp
ja
bt
setb
ret
lea
push
mov
add
push
push
push
movl
movl
movl
call
test
je
mov
test
je
mov
and
movzwl
mov
movzwl
shr
mov
mov
mov
mov
rep
cmpl
jne
call
test
je
movb
movb
jmp
push
call
pop
mov
mov
mov
call
setne
mov
test
je
movb
jmp
mov
lea
mov
inc
inc
cmp
jne
lea
mov
lea
push
push
mov
push
push
mov
push
call
mov
lea
cmpw
sete
mov
test
jne
add
dec
jne
jmp
push
call
test
setne
mov
push
call
test
setne
mov
test
je
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
push
push
dec
jne
push
xor
push
push
pushl
mov
call
call
cmpb
je
call
call
mov
lea
push
xor
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
lea
call
lea
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
pushl
pushl
push
pushl
mov
mov
call
pushl
pushl
push
pushl
mov
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
incl
add
add
add
add
incl
add
add
fs
jns
add
decl
add
insl
insl
insl
insl
and
jns
jns
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
inc
dec
push
dec
add
add
incl
dec
push
dec
and
add
incl
add
add
insl
insl
add
incl
add
add
insl
insl
cmp
add
push
push
push
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
cmpl
jne
pop
pop
pop
ret
nop
push
push
call
mov
test
je
push
push
call
mov
cmpl
jne
mov
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
imul
push
jo
arpl
js
add
or
inc
mov
sbb
movsb
inc
add
inc
add
add
mov
add
add
mov
add
add
mov
add
add
inc
add
add
add
add
movsb
inc
add
scas
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
movsb
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
inc
add
add
add
inc
add
add
add
add
mov
add
add
add
inc
add
add
add
add
add
mov
add
add
add
inc
add
mov
add
add
add
add
mov
add
add
add
inc
add
mov
add
add
add
add
add
add
inc
add
add
dec
mov
inc
add
add
add
inc
add
inc
add
add
add
add
mov
add
add
add
inc
add
inc
add
add
add
inc
add
mov
add
add
add
mov
inc
add
add
add
inc
add
mov
add
add
add
mov
inc
add
add
add
inc
add
inc
add
add
add
mov
inc
add
add
add
inc
add
add
add
add
mov
inc
add
add
add
inc
add
mov
add
add
add
mov
inc
add
add
add
inc
add
mov
add
add
add
mov
inc
add
add
add
inc
add
add
or
inc
add
add
add
inc
add
scas
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
xor
push
push
pushl
mov
subl
jae
mov
call
mov
call
cmpb
je
mov
mov
call
call
call
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
add
incl
add
add
js
add
sarb
mov
ret
nop
cmp
jl
mov
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
outsb
gs
je
outsl
outsb
popa
jb
add
jb
popa
insl
and
add
add
add
imul
jb
jb
add
jb
popa
insl
and
jb
jb
add
add
popa
and
jb
jb
add
jae
data16
je
insl
gs
outsl
jb
add
data16
gs
outsl
jb
add
add
arpl
jo
je
bound
jbe
jb
imul
mov
imul
call
ret
mov
mov
call
ret
push
mov
xor
mov
mov
mov
call
pop
ret
lea
push
mov
mov
mov
mov
call
pop
ret
nop
push
mov
call
ret
add
add
xor
xor
add
ret
lea
push
push
push
push
mov
add
push
dec
jne
mov
add
mov
mov
mov
lea
mov
xor
mov
call
xor
mov
movsbl
mov
call
call
lea
mov
mov
mov
call
mov
cmpl
jle
lea
mov
mov
mov
lea
mov
movl
mov
xor
call
call
mov
sub
lea
mov
mov
mov
call
cmpl
jne
cmpl
jle
lea
mov
mov
mov
call
mov
cmpl
jg
lea
mov
movl
mov
mov
call
call
mov
mov
sub
lea
mov
mov
mov
call
cmpl
jne
cmpl
jle
mov
call
call
add
pop
pop
pop
ret
mov
push
push
mov
push
mov
push
shr
mov
and
and
cmp
mov
jne
xor
mov
add
cmp
jb
sub
add
cmp
jb
sub
mov
shl
or
jmp
test
jne
mov
jmp
cmp
jae
jmp
xor
mov
add
inc
add
mov
add
test
jne
cmp
jb
sub
mov
mov
xor
div
mov
mov
shl
or
jmp
cmp
jb
sub
mov
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
add
dec
jne
mov
mov
xor
div
mov
mov
mov
xor
div
mov
cmp
jae
test
je
cmp
jb
sub
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
add
cmp
jae
jmp
xor
mov
add
inc
add
mov
add
test
jne
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
shl
or
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
mov
xor
mov
div
mov
mov
and
mov
imul
mov
xor
mov
div
mov
mov
shr
mov
shr
and
and
and
add
add
add
dec
sub
add
add
cmp
jbe
sub
cmp
jbe
sub
cmp
jbe
sub
cmp
jbe
sub
mov
shl
or
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
push
mov
call
pop
ret
push
mov
add
push
push
mov
mov
mov
mov
movl
test
je
mov
cmp
jne
cmpl
je
mov
jmp
test
jne
mov
jmp
xor
mov
cmpl
jne
movl
xor
mov
cmpl
jne
movl
cmpl
jne
movl
cmpl
jge
xor
mov
negl
cmpl
jl
cmpl
jg
cmpl
jne
cmpl
jl
cmpl
jg
cmpl
jl
cmpl
jg
cmpl
jl
cmpl
jle
mov
jmp
cmpl
jne
movl
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
dec
mov
mov
mov
add
mov
mov
shl
mov
dec
mov
xor
mov
mov
add
dec
div
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
add
mov
shl
mov
mov
mov
mov
call
mov
mov
shl
mov
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
movl
mov
mov
mov
call
mov
jmp
mov
shr
add
add
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
mov
mov
test
je
cmpl
je
test
je
mov
cmpl
je
mov
cmpl
jne
cmpl
je
mov
jmp
mov
cmpl
je
mov
mov
mov
call
mov
cmp
jae
xor
jmp
mov
sub
cmp
jbe
mov
mov
sub
add
push
push
mov
push
call
mov
mov
mov
xor
add
mov
mov
mov
mov
shl
movzbl
xor
and
mov
xor
jmp
mov
mov
shl
mov
movzbl
xor
and
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
inc
mov
sub
cmp
jbe
xor
pop
pop
pop
pop
pop
ret
nop
nop
push
push
mov
test
je
cmpl
je
cmpl
je
cmpl
jne
mov
pop
pop
ret
xor
xor
mov
mov
mov
xor
movl
mov
mov
mov
mov
mov
test
jge
neg
mov
cmpl
je
mov
jmp
mov
mov
xor
xor
xor
call
mov
xor
mov
mov
call
mov
call
xor
pop
pop
ret
nop
push
push
mov
test
je
cmpl
jne
mov
pop
pop
ret
mov
mov
mov
mov
shl
add
and
xor
mov
pop
pop
ret
push
push
push
push
push
mov
mov
xor
test
je
cmpl
jne
mov
jmp
mov
cmp
jne
mov
test
jl
cmp
jg
test
jl
cmp
jle
mov
jmp
mov
lea
lea
mov
mov
mov
cmp
je
cmpl
je
mov
call
mov
cmp
je
mov
movzwl
mov
movzwl
mov
movzwl
mov
movzwl
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
push
mov
test
je
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
xor
pop
ret
nop
nop
nop
push
lea
shr
lea
shr
add
add
add
test
je
cmpl
jne
mov
pop
ret
mov
cmpl
jne
cmpl
je
mov
pop
ret
mov
call
pop
ret
nop
nop
push
mov
incl
mov
lea
push
mov
shr
pop
mov
mov
incl
mov
and
mov
pop
ret
nop
push
mov
push
mov
mov
mov
cmp
jbe
mov
test
je
push
mov
push
mov
push
call
add
mov
add
mov
add
add
sub
mov
sub
mov
cmpl
jne
mov
mov
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
test
je
cmpl
je
cmp
jg
test
jge
mov
jmp
cmpl
mov
je
cmpl
jne
cmpl
jne
cmpl
jne
cmp
je
mov
mov
mov
jmp
cmpl
jne
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
mov
sub
shl
add
shl
cmpl
jge
cmpl
jge
xor
jmp
mov
cmp
jge
mov
jmp
cmp
jne
mov
jmp
mov
shl
or
cmpl
je
or
mov
push
xor
mov
div
mov
pop
sub
add
mov
movl
mov
call
cmpl
je
mov
mov
shr
call
mov
mov
and
call
xor
xor
xor
call
mov
cmpl
je
mov
call
cmpl
jne
movl
xor
jmp
jmp
cmpl
jne
cmp
jl
cmp
je
mov
mov
mov
jmp
cmpl
jne
cmpl
je
mov
mov
mov
jmp
cmpl
jne
cmpl
jne
test
je
cmpl
je
mov
mov
lea
mov
mov
call
mov
cmpl
je
cmpl
jne
movl
cmpl
je
cmpl
jne
cmpl
jne
movl
xor
jmp
cmpl
jne
cmp
jne
mov
call
jmp
push
xor
xor
mov
call
cmp
jne
mov
mov
movw
mov
dec
add
push
push
mov
push
call
add
mov
call
cmpl
jne
movl
xor
jmp
cmp
je
xor
jmp
cmpl
jg
mov
jmp
mov
mov
shr
call
mov
mov
and
call
mov
call
mov
test
jle
neg
mov
cmpl
je
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
test
je
cmpl
jne
mov
pop
pop
ret
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
ret
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
mov
call
xor
cmp
mov
jne
mov
jmp
xor
pop
pop
ret
nop
nop
nop
push
push
push
push
push
mov
mov
cmpl
je
test
je
mov
cmpl
jne
mov
jmp
mov
mov
push
mov
push
push
call
add
mov
mov
mov
call
mov
test
jne
mov
jmp
mov
push
push
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
cmpl
je
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
jmp
mov
add
push
mov
push
mov
push
call
add
mov
add
push
mov
push
mov
push
call
add
mov
add
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
mov
add
sub
add
mov
lea
mov
shr
add
add
lea
mov
mov
lea
add
mov
mov
lea
mov
mov
xor
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
push
mov
mov
cmp
jae
mov
test
jne
xor
jmp
sub
mov
cmpl
jne
mov
mov
mov
call
mov
push
mov
push
push
call
add
mov
add
add
pop
pop
pop
ret
nop
push
mov
mov
add
mov
mov
mov
movw
mov
dec
add
push
push
mov
push
call
mov
add
lea
movzwl
mov
mov
lea
movzwl
mov
mov
lea
movzwl
mov
xor
mov
lea
movzwl
mov
mov
xor
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
pop
ret
nop
nop
nop
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
cmp
jbe
mov
sub
mov
sub
jmp
xor
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
cmp
jb
shrl
mov
cmp
jae
mov
mov
add
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
inc
mov
cmp
jne
add
inc
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
cmp
ja
mov
sub
push
mov
pop
sub
lea
cmp
jge
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
and
mov
movzwl
mov
cmp
jbe
decl
jne
mov
mov
cmp
jb
mov
jmp
mov
add
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
mov
add
add
mov
mov
mov
add
cmp
jne
mov
cmp
je
mov
jmp
add
add
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
inc
inc
mov
cmp
jne
cmp
ja
sub
mov
sub
cmp
jge
mov
jmp
mov
mov
cmp
jae
mov
mov
pop
pop
pop
ret
nop
push
push
push
mov
push
push
mov
mov
sub
sub
jmp
test
jne
cmpl
jne
cmpl
jne
mov
jmp
cmp
jne
dec
mov
sub
add
cmp
ja
push
mov
mov
mov
add
push
push
call
add
sub
sub
sub
mov
mov
add
add
sub
movzwl
mov
cmp
ja
mov
sub
jmp
xor
mov
dec
jne
mov
mov
add
add
sub
movzwl
mov
cmp
ja
mov
sub
jmp
xor
mov
dec
jne
add
mov
cmpl
je
mov
mov
add
mov
add
call
add
cmpl
jb
mov
mov
movzbl
mov
mov
shl
mov
mov
movzbl
xor
and
mov
cmpl
jae
mov
cmpl
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
sub
cmp
jbe
mov
cmpl
ja
mov
call
mov
test
jne
cmpl
jne
xor
jmp
test
je
mov
xor
add
mov
mov
mov
add
test
je
cmp
ja
sub
mov
mov
push
mov
sub
cmpl
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
sub
mov
sub
cmp
jb
push
mov
sub
test
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmpl
jne
xor
jmp
jmp
cmpl
sete
and
push
mov
sub
cmpl
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmpl
jne
cmpl
jne
mov
jmp
xor
jmp
cmpl
jne
mov
jmp
mov
pop
pop
pop
ret
push
push
push
push
mov
mov
xor
cmpl
jae
mov
call
mov
cmp
jae
cmpl
jne
xor
jmp
test
je
cmpl
jb
mov
mov
shl
mov
mov
movzbl
xor
and
mov
mov
mov
and
mov
mov
movzwl
mov
mov
mov
mov
mov
test
je
mov
mov
sub
sub
cmp
ja
mov
cmp
je
cmp
je
mov
mov
call
mov
jmp
cmpl
jne
mov
sub
cmp
jne
mov
mov
call
mov
cmpl
jb
mov
mov
sub
mov
mov
mov
sub
mov
dec
incl
mov
mov
and
xor
mov
movzwl
incw
cmp
jge
movzwl
mov
jmp
movzwl
sar
mov
xor
mov
incw
mov
dec
cmp
sete
and
mov
sub
mov
cmp
ja
cmpl
jb
decl
incl
mov
mov
shl
mov
mov
movzbl
xor
and
mov
mov
mov
mov
and
mov
mov
movzwl
mov
mov
mov
mov
decl
jne
incl
jmp
mov
xor
add
mov
mov
mov
movzbl
mov
mov
mov
shl
mov
movzbl
xor
and
mov
jmp
mov
mov
mov
mov
mov
movw
mov
incl
mov
mov
and
incw
mov
dec
cmp
sete
and
decl
incl
test
je
push
mov
sub
cmpl
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmpl
jne
xor
jmp
jmp
cmpl
sete
and
push
mov
sub
cmpl
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmpl
jne
cmpl
jne
mov
jmp
xor
jmp
cmpl
jne
mov
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
add
xor
mov
mov
cmpl
jae
mov
call
mov
cmp
jae
cmpl
jne
xor
jmp
test
je
cmpl
jb
mov
mov
shl
mov
mov
movzbl
xor
and
mov
mov
mov
and
mov
mov
movzwl
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
test
je
mov
cmp
jae
mov
mov
sub
sub
cmp
ja
mov
cmp
je
cmp
je
mov
mov
call
mov
jmp
cmpl
jne
mov
sub
cmp
jne
mov
mov
call
mov
cmpl
ja
cmpl
je
cmpl
jne
mov
sub
cmp
jbe
movl
mov
cmp
jb
cmp
jb
mov
add
sub
mov
mov
mov
dec
mov
sub
mov
mov
sub
mov
dec
incl
mov
mov
and
xor
mov
movzwl
incw
cmp
jge
movzwl
mov
jmp
movzwl
sar
mov
xor
mov
incw
mov
dec
cmp
sete
and
mov
dec
sub
subl
incl
mov
cmp
ja
mov
mov
shl
mov
mov
movzbl
xor
and
mov
mov
mov
mov
and
mov
mov
movzwl
mov
mov
mov
mov
mov
decl
jne
xor
mov
movl
incl
test
je
push
mov
sub
cmpl
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmpl
jne
xor
jmp
jmp
cmpl
je
mov
mov
mov
mov
mov
movw
mov
incl
mov
mov
and
incw
mov
dec
cmp
sete
and
test
je
push
mov
sub
cmpl
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
incl
decl
mov
cmpl
jne
xor
jmp
jmp
movl
incl
decl
jmp
cmpl
je
mov
mov
mov
mov
mov
movw
mov
incl
mov
mov
and
incw
mov
dec
cmp
sete
and
xor
mov
cmpl
sete
and
push
mov
sub
cmpl
jl
mov
add
jmp
xor
mov
call
mov
mov
mov
call
mov
cmpl
jne
cmpl
jne
mov
jmp
xor
jmp
cmpl
jne
mov
jmp
mov
pop
pop
pop
pop
pop
ret
mov
ret
nop
nop
nop
push
mov
call
lea
lea
mov
lea
movl
mov
xor
movl
mov
movl
movw
mov
mov
movl
call
pop
ret
nop
nop
xor
lea
movw
inc
add
cmp
jl
xor
lea
movw
inc
add
cmp
jl
xor
lea
movw
inc
add
cmp
jl
movw
xor
xor
mov
mov
mov
mov
ret
nop
push
push
push
add
mov
mov
mov
mov
mov
mov
add
lea
mov
mov
lea
jmp
cmp
jge
mov
mov
mov
cmp
jb
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
ja
inc
mov
mov
cmp
ja
mov
mov
cmp
jne
mov
mov
cmp
jbe
mov
mov
mov
mov
add
cmp
jle
mov
mov
mov
add
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
movw
inc
add
cmp
jle
mov
mov
mov
mov
movw
mov
mov
inc
mov
cmpl
mov
mov
lea
jge
mov
movzwl
movzwl
inc
cmp
jge
mov
incl
mov
cmp
jg
mov
incw
xor
mov
cmp
jl
mov
sub
mov
mov
mov
mov
mov
movzwl
add
imul
mov
add
cmpl
je
mov
movzwl
add
movzwl
imul
mov
add
incl
add
cmpl
jl
cmpl
je
lea
mov
lea
jmp
dec
add
cmpw
je
mov
decw
mov
addw
mov
decw
subl
cmpl
jg
mov
mov
test
lea
mov
je
mov
movzwl
mov
mov
lea
test
je
decl
add
mov
cmp
jg
movzwl
cmp
je
movzwl
mov
sub
movzwl
imul
mov
add
mov
dec
test
jne
dec
addl
test
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
xor
mov
lea
mov
mov
add
add
mov
mov
inc
add
add
cmp
jle
xor
lea
cmp
jg
movzwl
test
je
mov
incw
movzwl
mov
call
mov
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
nop
push
push
push
push
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
movl
mov
mov
movl
cmp
jge
cmpw
je
mov
incl
mov
mov
movb
jmp
movw
inc
inc
add
cmp
jl
jmp
cmpl
jge
incl
mov
jmp
xor
incl
mov
mov
mov
movw
movb
decl
cmpl
je
mov
movzwl
sub
cmpl
jl
mov
mov
mov
mov
sar
jns
adc
cmp
jl
mov
mov
mov
call
dec
cmp
jge
mov
mov
mov
addl
mov
mov
mov
mov
mov
call
mov
decl
mov
mov
decl
mov
mov
mov
add
push
pop
mov
mov
cmp
ja
mov
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
call
cmpl
jge
decl
mov
mov
mov
mov
mov
call
lea
mov
mov
call
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
movl
movzwl
xor
mov
mov
test
jne
mov
mov
mov
movw
xor
add
mov
mov
mov
cmp
jg
mov
mov
inc
movzwl
cmp
jle
cmp
jne
jmp
jmp
cmp
jle
mov
add
jmp
test
je
cmp
je
mov
incw
mov
incw
jmp
cmp
jg
mov
incw
jmp
mov
incw
xor
mov
test
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
incl
addl
mov
cmp
jle
add
pop
pop
pop
ret
nop
nop
push
push
push
push
add
xor
mov
mov
mov
mov
movl
mov
movzwl
test
jne
mov
mov
xor
mov
mov
add
mov
mov
cmp
jg
mov
mov
inc
movzwl
cmp
jle
cmp
jne
jmp
jmp
cmp
jle
movzwl
mov
sub
cmp
jge
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
dec
jne
jmp
test
je
cmp
je
movzwl
mov
sub
cmp
jge
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
dec
movzwl
mov
sub
cmp
jge
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
add
mov
shl
or
add
jmp
cmp
jg
movzwl
mov
sub
cmp
jge
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
add
mov
shl
or
add
jmp
movzwl
mov
sub
cmp
jge
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
mov
mov
sub
cmp
jge
add
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
add
mov
shl
or
add
xor
mov
test
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
incl
addl
mov
cmp
jle
add
pop
pop
pop
pop
ret
nop
push
mov
lea
mov
mov
call
lea
mov
mov
call
lea
mov
call
mov
mov
xor
mov
cmpw
jne
dec
dec
cmp
jge
lea
add
add
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
sub
mov
cmp
jge
mov
add
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
sub
mov
cmp
jge
mov
dec
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
sub
mov
cmp
jge
mov
add
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
add
shl
or
add
xor
mov
cmp
jge
mov
mov
sub
cmp
jge
xor
mov
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
movzbl
mov
mov
shl
or
add
inc
inc
cmp
jl
mov
dec
lea
mov
call
mov
dec
lea
mov
call
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
shl
or
add
push
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
sub
mov
cmp
jge
mov
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
mov
mov
mov
movzwl
sub
cmp
jge
mov
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
mov
shl
or
add
mov
call
mov
add
mov
sub
cmp
jge
mov
mov
sub
cmp
jle
mov
mov
mov
mov
shl
or
mov
incl
mov
lea
push
mov
pop
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
mov
mov
mov
movzwl
sub
cmp
jge
mov
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
mov
shl
or
add
mov
call
movl
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
xor
mov
mov
cmpl
mov
jle
test
jbe
mov
cmpl
jne
mov
call
lea
mov
call
lea
mov
call
mov
call
mov
mov
mov
add
add
shr
shr
cmp
jb
mov
jmp
lea
mov
lea
cmp
jb
cmpl
je
push
mov
mov
mov
call
jmp
cmpl
je
cmp
jne
mov
mov
sub
cmp
jge
lea
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
add
shl
or
add
mov
mov
mov
call
jmp
mov
mov
sub
cmp
jge
lea
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
add
shl
or
add
mov
inc
push
mov
mov
mov
inc
inc
call
lea
lea
mov
call
mov
call
test
je
mov
call
pop
pop
pop
pop
pop
pop
ret
nop
push
push
mov
mov
mov
mov
incl
mov
test
lea
push
pop
mov
jne
incw
jmp
incl
dec
movzbl
incw
cmp
jae
mov
jmp
shr
mov
xor
mov
incw
mov
dec
cmp
sete
and
pop
pop
ret
nop
nop
push
push
push
push
add
mov
xor
mov
cmpl
je
mov
mov
movzwl
mov
mov
movzbl
incl
test
jne
movzwl
mov
sub
cmp
jge
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
jmp
xor
mov
movzwl
mov
mov
sub
cmp
jge
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
mov
sub
add
mov
jmp
mov
mov
shl
or
mov
add
mov
test
je
sub
mov
mov
sub
cmp
jge
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
shl
or
add
dec
cmp
jae
mov
jmp
mov
shr
mov
and
mov
movzwl
mov
sub
cmp
jge
mov
movzwl
mov
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
mov
shl
or
add
mov
test
je
sub
mov
mov
sub
mov
cmp
jge
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
shl
or
add
mov
cmp
jb
movzwl
mov
sub
mov
cmp
jge
movzwl
mov
mov
shl
or
mov
incl
mov
lea
push
pop
mov
and
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
sub
movzwl
sar
mov
sub
add
mov
jmp
mov
mov
shl
or
add
movzwl
mov
add
pop
pop
pop
pop
ret
nop
xor
lea
cmpw
jne
inc
add
cmp
jl
cmp
jne
mov
lea
cmpw
jne
inc
add
cmp
jl
cmp
jne
mov
jmp
xor
mov
mov
ret
nop
nop
push
xor
mov
and
shr
or
add
dec
test
jg
mov
shr
pop
ret
nop
nop
nop
push
cmpl
jne
mov
incl
mov
mov
and
mov
mov
incl
mov
movzwl
sar
mov
movw
xor
mov
pop
ret
cmpl
jl
mov
incl
mov
mov
mov
shrw
subl
pop
ret
push
cmpl
jle
mov
incl
mov
mov
and
mov
mov
incl
mov
movzwl
sar
mov
jmp
cmpl
jle
mov
incl
mov
mov
mov
movw
xor
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
mov
call
movl
cmpl
je
mov
incl
mov
lea
push
mov
mov
and
pop
mov
mov
incl
mov
lea
push
movzwl
sar
pop
mov
mov
incl
mov
not
lea
and
push
pop
mov
mov
incl
mov
mov
not
movzwl
sar
mov
jmp
mov
incl
mov
mov
mov
inc
mov
add
test
jne
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
jmp
xor
mov
xor
mov
xor
mov
push
mov
lea
mov
call
mov
test
je
mov
jmp
lea
mov
call
mov
cmp
je
lea
call
test
jne
mov
jmp
mov
jmp
mov
lea
mov
call
mov
mov
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
push
push
call
pop
pop
ret
mov
shr
add
shr
add
add
mov
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
mov
add
add
add
add
add
adc
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
rolb
push
add
add
add
add
add
inc
add
add
inc
add
add
push
push
arpl
outsb
push
jo
lea
push
mov
push
push
push
test
je
add
call
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
xor
mov
xor
mov
movb
movb
movb
mov
mov
call
lea
mov
call
mov
mov
lea
mov
call
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
ret
push
push
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
test
jle
mov
call
pop
pop
ret
lea
xor
mov
test
je
mov
mov
ret
nop
push
mov
push
push
push
push
mov
movb
xor
push
push
pushl
mov
mov
mov
mov
call
mov
mov
mov
xor
pop
pop
pop
mov
jmp
jmp
call
mov
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
mov
cmpb
je
mov
call
mov
call
test
je
mov
call
jmp
mov
call
pop
ret
mov
cmp
je
mov
mov
dec
je
sub
je
sub
je
sub
je
jmp
movb
movb
jmp
movb
movb
jmp
movb
movb
jmp
movb
movb
jmp
movb
movb
movb
xor
mov
ret
lea
push
push
push
mov
xor
push
call
mov
push
call
cmp
jne
cmp
je
mov
mov
mov
call
call
mov
call
call
mov
call
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
call
mov
call
call
mov
call
call
xor
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
xor
push
call
mov
mov
call
call
push
push
push
mov
push
mov
push
mov
push
push
push
mov
call
call
push
call
mov
call
call
mov
push
push
call
mov
push
mov
push
push
push
lea
push
call
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
test
je
mov
call
test
je
mov
call
mov
mov
pop
pop
ret
lea
push
mov
add
push
push
mov
lea
movsl
movsl
movsl
movsl
mov
mov
mov
call
call
mov
mov
call
call
xor
push
push
pushl
mov
mov
sub
mov
mov
call
mov
sub
mov
mov
call
push
mov
push
mov
push
mov
mov
push
mov
mov
call
push
mov
mov
call
push
mov
push
mov
push
mov
mov
call
call
push
call
push
mov
push
mov
push
mov
mov
call
call
push
mov
mov
call
push
mov
mov
call
push
push
push
mov
mov
call
call
push
call
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
mov
call
call
mov
mov
call
call
ret
jmp
jmp
pop
pop
mov
pop
ret
push
push
push
push
add
mov
movb
mov
call
push
call
mov
mov
jmp
mov
call
call
push
push
push
mov
push
push
mov
push
push
push
mov
call
call
push
call
mov
call
call
mov
mov
call
mov
xor
mov
call
mov
lea
push
push
mov
sub
push
push
lea
push
call
xor
jmp
mov
mov
mov
cmp
je
cmpl
jge
mov
sub
mov
lea
mov
addl
addl
xor
mov
add
cmp
jl
cmpl
jle
lea
mov
xor
call
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
lea
mov
call
add
add
cmp
jl
mov
push
push
call
mov
add
mov
cltd
idiv
mov
mov
call
cmp
jne
cmp
jbe
jmp
jle
mov
call
test
je
mov
call
mov
push
call
mov
add
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
movb
xor
push
push
pushl
mov
mov
call
push
push
mov
call
mov
mov
mov
call
push
push
mov
call
movb
xor
pop
pop
pop
mov
jmp
jmp
call
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
xor
push
push
pushl
mov
xor
push
push
pushl
mov
movb
xor
mov
mov
mov
mov
mov
push
pushl
push
lea
mov
call
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
xor
pop
pop
pop
mov
jmp
jmp
xor
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
add
incl
add
push
dec
dec
jl
add
add
incl
add
add
add
add
incl
xor
jl
add
add
in
add
push
push
push
xor
mov
mov
xor
push
push
pushl
mov
xor
push
push
pushl
mov
movb
mov
call
mov
push
pushl
push
lea
mov
call
mov
mov
call
mov
mov
call
lea
mov
mov
call
movl
xor
jmp
mov
call
push
push
mov
cltd
sub
sbb
pop
pop
push
push
mov
cltd
cmp
jne
cmp
pop
pop
ja
jmp
pop
pop
jg
mov
jmp
mov
call
mov
sub
lea
mov
mov
call
lea
mov
mov
call
add
mov
call
push
push
mov
cltd
cmp
jne
cmp
pop
pop
jae
jmp
pop
pop
jge
mov
cmpb
jne
mov
xor
pop
pop
pop
mov
jmp
jmp
xor
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
incl
add
push
dec
dec
jl
add
add
incl
add
add
add
add
incl
xor
jl
add
add
in
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
and
inc
add
inc
add
dec
inc
add
add
add
adc
mov
cmp
int3
cmp
sarb
inc
add
cmp
push
cmp
aam
inc
add
add
add
add
add
add
inc
add
add
adc
inc
add
add
or
push
bound
insl
jmp
mov
jmp
mov
push
mov
add
push
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
xor
mov
call
push
lea
push
push
lea
push
push
call
cmp
sbb
inc
test
je
pushl
lea
lea
mov
call
pushl
push
lea
lea
mov
call
pushl
push
mov
mov
call
inc
test
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
sub
incl
add
add
add
jns
add
sar
shl
ret
lea
push
push
push
push
add
mov
mov
xor
xor
lea
push
push
mov
push
call
test
je
test
mov
cmp
je
mov
mov
shl
mov
shl
jmp
xor
movzwl
imull
call
imull
mov
lea
call
mov
test
je
mov
movl
mov
mov
mov
mov
movw
mov
xor
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
lea
mov
movw
movw
mov
add
mov
movw
mov
push
push
call
mov
test
je
push
call
mov
push
call
mov
push
push
mov
push
mov
push
push
mov
push
mov
push
call
test
je
lea
mov
mov
call
lea
mov
mov
call
mov
mov
mov
call
mov
mov
push
push
call
push
call
push
call
lea
mov
call
mov
push
call
mov
add
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
test
je
add
call
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
mov
call
mov
cmpl
je
push
push
push
mov
push
call
xor
mov
lea
mov
call
mov
mov
lea
mov
call
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
ret
push
push
call
mov
mov
cmpl
je
push
push
push
mov
push
call
xor
mov
mov
call
mov
call
mov
call
test
jle
mov
call
pop
pop
ret
mov
xor
mov
test
je
mov
mov
ret
nop
push
mov
push
push
push
push
mov
movb
xor
push
push
pushl
mov
mov
mov
mov
call
mov
mov
mov
xor
pop
pop
pop
mov
jmp
jmp
call
mov
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
xor
mov
cmpb
je
cmpl
jne
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
push
push
mov
push
call
test
je
push
push
push
mov
push
call
dec
je
push
push
push
mov
push
call
xor
mov
cmpl
je
mov
call
push
push
push
mov
push
call
push
push
push
mov
push
call
push
call
push
call
mov
mov
mov
call
call
call
push
push
mov
call
mov
call
mov
mov
mov
call
push
push
mov
call
mov
call
mov
mov
pop
pop
pop
ret
add
inc
popa
jo
jne
gs
imul
add
in
add
push
push
push
xor
mov
mov
xor
push
push
pushl
mov
xor
push
push
pushl
mov
movb
mov
call
mov
push
pushl
push
lea
mov
call
mov
mov
call
mov
mov
call
lea
mov
mov
call
movl
xor
jmp
mov
call
push
push
mov
cltd
sub
sbb
pop
pop
push
push
mov
cltd
cmp
jne
cmp
pop
pop
ja
jmp
pop
pop
jg
mov
jmp
mov
call
mov
sub
lea
mov
mov
call
lea
mov
mov
call
add
mov
call
push
push
mov
cltd
cmp
jne
cmp
pop
pop
jae
jmp
pop
pop
jge
mov
cmpb
jne
mov
xor
pop
pop
pop
mov
jmp
jmp
xor
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
incl
add
push
dec
dec
jl
add
add
incl
add
add
add
add
incl
xor
or
add
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
in
inc
add
push
inc
add
push
inc
add
add
mov
add
inc
add
cmp
sarb
inc
add
cmp
push
cmp
pushf
pop
inc
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
add
push
inc
outsl
ja
inc
imul
fs
push
mov
push
push
call
push
call
push
call
mov
push
mov
push
call
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
jne
gs
xor
fs
insb
add
jne
insb
insl
outsl
outsb
cs
insb
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
in
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
jmp
mov
mov
call
mov
lea
mov
call
mov
mov
call
test
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
incl
add
add
add
add
in
push
mov
push
push
dec
jne
xchg
push
push
push
test
je
add
call
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
xor
mov
call
lea
push
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
je
mov
mov
call
jne
mov
mov
call
jne
mov
movb
mov
add
mov
call
lea
push
mov
call
mov
sub
mov
mov
call
lea
xor
call
mov
lea
call
mov
mov
add
call
push
lea
mov
call
pushl
push
pushl
mov
add
mov
call
inc
mov
mov
mov
mov
lea
call
mov
call
test
jne
mov
movb
xor
mov
call
mov
mov
call
je
mov
mov
call
jne
xor
push
push
pushl
mov
mov
mov
mov
call
jne
push
push
lea
xor
call
mov
lea
call
pushl
push
lea
mov
call
pushl
lea
mov
call
mov
call
push
mov
call
push
push
call
test
jne
mov
mov
call
jne
push
push
lea
xor
call
mov
lea
call
lea
mov
call
mov
call
push
mov
call
push
push
call
test
jne
dec
jne
xor
pop
pop
pop
mov
jmp
jmp
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
cmpb
je
call
popl
add
mov
pop
pop
pop
mov
pop
ret
add
incl
add
add
add
add
incl
add
add
add
add
incl
outsl
ja
sub
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
push
inc
push
pop
add
add
decl
add
push
jns
je
insl
ss
gs
add
add
push
mov
push
push
push
push
mov
xor
push
push
pushl
mov
xor
push
push
pushl
mov
push
push
mov
mov
lea
call
mov
call
push
mov
call
push
push
call
test
je
mov
xor
pop
pop
pop
mov
jmp
jmp
xor
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
xor
push
push
pushl
mov
xor
push
push
pushl
mov
mov
mov
call
test
je
cmpb
je
push
push
push
mov
mov
lea
call
mov
call
push
push
push
call
jmp
dec
jne
xor
pop
pop
pop
mov
jmp
jmp
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
add
add
outsb
add
add
push
push
call
mov
mov
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
mov
mov
mov
push
push
push
push
push
call
mov
cmpl
je
xor
push
push
pushl
mov
push
push
push
push
mov
call
push
mov
push
call
mov
xor
mov
mov
call
mov
xor
mov
movl
lea
push
lea
push
lea
push
push
mov
push
call
test
je
lea
mov
mov
mov
call
cmpl
je
xor
push
push
pushl
mov
xor
push
push
pushl
mov
jmp
lea
mov
mov
mov
call
lea
push
mov
push
lea
push
mov
push
call
test
je
cmpl
ja
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
je
jb
gs
inc
js
insb
outsl
jb
jb
ss
add
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
call
mov
call
mov
push
call
mov
push
push
push
call
mov
cmpl
jne
xor
pop
ret
mov
push
call
test
jne
xor
pop
ret
push
push
push
push
call
mov
cmpl
jne
mov
push
call
mov
push
call
xor
pop
ret
mov
push
call
cmp
sbb
inc
pop
ret
add
add
outsb
push
je
xor
inc
gs
jne
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
cmpl
je
mov
push
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
jne
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
subl
jae
call
ret
nop
insb
pop
inc
add
add
xor
add
add
add
add
add
add
adc
or
imul
jb
jmp
mov
push
mov
push
push
push
xor
push
push
pushl
mov
push
push
call
xor
pop
pop
pop
mov
jmp
jmp
call
pop
pop
pop
pop
ret
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
inc
arpl
and
je
jo
dec
outsb
jae
popa
insb
insb
gs
insl
jo
outsb
outsb
je
pop
jnp
cmp
xor
xor
sub
sub
sub
sub
arpl
xor
cmp
in
push
mov
add
push
dec
jne
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
movl
lea
push
call
cmpl
jne
movl
xor
mov
movl
push
lea
push
lea
push
lea
push
call
jmp
push
push
lea
push
lea
push
call
xor
push
push
pushl
mov
lea
xor
mov
call
movl
movw
movl
orl
mov
mov
mov
mov
lea
mov
call
lea
push
lea
push
push
push
push
push
push
push
lea
push
push
call
test
je
xor
mov
cmpl
jne
push
mov
push
call
mov
push
push
lea
push
push
lea
push
mov
push
call
test
je
cmpl
jbe
xor
push
push
pushl
mov
lea
xor
mov
call
push
lea
push
mov
push
lea
push
mov
push
call
lea
push
lea
lea
mov
call
mov
dec
mov
xor
call
lea
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
cmpl
je
movl
cmpl
je
lea
push
mov
push
call
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
cmpl
jne
lea
mov
call
mov
mov
call
mov
push
call
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
dec
push
dec
dec
add
add
add
push
push
call
push
call
lea
push
push
push
call
movl
movl
mov
mov
mov
mov
lea
push
lea
push
push
lea
push
push
mov
push
call
add
ret
add
push
push
ja
push
jb
jbe
insb
gs
push
push
call
push
call
test
je
lea
push
push
push
call
movl
movl
lea
push
push
push
lea
push
push
mov
push
call
add
ret
push
gs
bound
push
jb
jbe
insb
gs
add
push
mov
add
push
push
push
mov
mov
mov
mov
mov
call
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
mov
call
mov
test
je
test
jne
mov
call
jmp
mov
call
add
movzwl
movzwl
sub
jne
mov
call
jmp
push
movzwl
movzwl
sub
movzwl
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
mov
push
push
dec
jne
push
push
mov
mov
xor
push
push
pushl
mov
lea
xor
call
mov
mov
call
cmpl
je
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
jne
mov
mov
call
mov
mov
call
jne
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
test
jbe
lea
push
mov
mov
mov
call
mov
lea
xor
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
mov
mov
call
test
jne
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
lea
push
mov
mov
mov
call
mov
call
mov
jmp
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
lea
push
mov
mov
mov
call
mov
call
mov
lea
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
movb
lea
mov
call
movb
movb
movb
lea
push
mov
mov
mov
call
mov
lea
call
lea
push
mov
mov
mov
call
mov
lea
call
lea
push
mov
mov
mov
call
mov
mov
call
mov
mov
call
jne
lea
mov
call
mov
mov
mov
mov
mov
lea
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
je
jbe
add
incl
add
add
add
add
incl
add
add
je
cmp
das
add
incl
das
dec
push
add
add
incl
add
cmp
push
add
add
incl
add
add
add
add
incl
xor
xor
add
add
incl
add
add
out
aad
out
add
decl
add
push
jns
je
insl
ss
gs
add
add
xor
xor
push
mov
push
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
mov
mov
cmpb
je
call
xor
push
push
mov
cltd
sub
sbb
pop
pop
cmp
jne
cmp
jae
jmp
jl
cmpb
jne
cmpb
je
cmpb
jne
mov
call
jmp
movb
jmp
mov
call
movb
movb
ret
incl
add
xor
xor
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
mov
lea
xor
push
push
pushl
mov
lea
call
movb
mov
mov
mov
call
jmp
lea
mov
call
mov
lea
call
xor
push
push
pushl
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
lea
call
mov
mov
mov
call
call
jmp
call
mov
cmp
je
cmp
je
mov
cmpb
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
mov
push
push
dec
jne
push
push
push
xor
push
push
pushl
mov
xor
push
push
pushl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
call
jne
call
jmp
lea
mov
call
mov
lea
call
lea
push
mov
mov
mov
call
lea
mov
mov
call
movb
mov
mov
call
jne
lea
push
mov
mov
mov
call
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
jne
movb
lea
call
mov
call
cmp
jle
lea
mov
call
lea
call
pushl
push
lea
call
pushl
push
lea
call
pushl
push
lea
mov
call
pushl
push
lea
mov
mov
call
pushl
push
pushl
push
lea
mov
call
push
pushl
push
lea
mov
call
mov
call
mov
mov
call
jne
mov
call
mov
mov
call
jne
movb
mov
mov
call
jne
mov
mov
call
jne
movb
mov
mov
call
jne
cmpb
je
lea
call
pushl
push
lea
call
pushl
push
lea
mov
call
pushl
push
lea
call
pushl
push
lea
call
pushl
push
lea
call
pushl
push
lea
call
pushl
push
lea
call
pushl
push
lea
mov
call
pushl
push
lea
xor
call
pushl
push
lea
call
pushl
push
lea
call
pushl
push
lea
mov
call
push
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
mov
mov
call
lea
lea
call
mov
lea
mov
call
lea
lea
call
pushl
mov
pushl
push
mov
pushl
push
mov
pushl
push
lea
mov
mov
call
pushl
push
push
lea
mov
mov
call
pushl
push
mov
pushl
push
mov
pushl
push
lea
mov
mov
call
pushl
push
lea
mov
mov
call
pushl
push
lea
mov
mov
call
pushl
push
mov
pushl
push
lea
xor
call
pushl
push
lea
mov
call
push
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
push
lea
call
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
call
lea
call
push
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
push
lea
xor
call
mov
lea
call
lea
mov
call
mov
call
mov
lea
call
mov
lea
call
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
push
lea
lea
call
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
mov
call
push
mov
call
lea
call
pushl
push
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
push
lea
mov
call
mov
call
push
push
mov
call
push
push
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
push
lea
mov
call
mov
call
push
push
mov
call
push
push
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
mov
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
push
mov
call
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
mov
call
mov
lea
call
mov
mov
push
lea
mov
call
mov
push
mov
push
push
push
mov
mov
mov
mov
call
mov
push
push
lea
push
mov
xor
xor
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
mov
call
mov
lea
call
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
mov
mov
push
lea
mov
call
mov
push
mov
push
push
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
call
cltd
mov
mov
push
push
lea
push
mov
xor
xor
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
mov
call
mov
lea
call
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
lea
mov
call
mov
lea
call
mov
mov
push
lea
mov
call
mov
push
mov
push
push
mov
call
push
mov
mov
mov
mov
call
mov
push
push
lea
push
mov
xor
xor
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
xor
push
push
pushl
mov
mov
call
mov
xor
pop
pop
pop
mov
jmp
jmp
mov
cmpl
je
mov
mov
movzbl
jmp
mov
call
xor
push
push
pushl
mov
mov
cmpl
je
mov
mov
mov
call
jmp
mov
mov
push
mov
mov
push
mov
call
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
test
je
mov
mov
mov
call
mov
mov
call
test
jne
mov
mov
call
mov
xor
mov
xor
pop
pop
pop
mov
jmp
jmp
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
xor
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
xor
push
push
pushl
mov
mov
cmpl
je
mov
call
mov
mov
mov
call
jmp
mov
mov
push
mov
mov
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
mov
call
mov
mov
call
test
jne
mov
mov
call
mov
xor
mov
xor
pop
pop
pop
mov
jmp
jmp
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
xor
call
mov
lea
call
pushl
push
pushl
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
push
call
mov
mov
mov
cmpl
je
mov
mov
push
call
xor
pop
pop
pop
mov
jmp
jmp
call
xor
push
push
pushl
mov
mov
mov
call
push
call
mov
mov
mov
cmpl
ja
xor
pop
pop
pop
mov
xor
pop
pop
pop
mov
jmp
mov
cmpl
je
push
mov
mov
push
call
mov
mov
push
mov
mov
push
call
mov
mov
push
mov
mov
push
call
mov
mov
xor
pop
pop
pop
mov
jmp
jmp
mov
mov
push
call
call
xor
pop
pop
pop
mov
jmp
call
mov
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
xor
call
mov
lea
call
pushl
push
pushl
mov
mov
call
mov
mov
call
push
call
mov
mov
mov
cmpl
je
mov
mov
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
mov
mov
mov
call
mov
mov
call
push
call
mov
mov
mov
cmpl
je
mov
mov
push
call
mov
mov
call
mov
lea
call
mov
call
mov
mov
call
mov
lea
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
xor
push
push
pushl
mov
lea
mov
call
xor
pop
pop
pop
mov
jmp
jmp
lea
mov
call
call
push
lea
mov
call
mov
call
lea
call
pushl
push
pushl
push
lea
mov
call
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
mov
call
push
mov
mov
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
call
push
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
call
push
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
mov
mov
mov
call
jne
push
push
call
mov
mov
mov
call
jne
mov
mov
call
lea
call
lea
mov
call
mov
call
mov
lea
call
mov
call
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
push
push
push
mov
call
push
push
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
xor
mov
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
mov
call
push
mov
call
push
call
jmp
mov
call
mov
mov
call
jne
push
push
push
push
push
call
mov
mov
call
jne
push
push
push
push
push
call
mov
mov
call
jne
push
push
push
push
push
call
mov
mov
call
jne
push
push
push
push
push
call
mov
mov
call
jne
cmpb
je
lea
push
mov
mov
call
mov
dec
mov
mov
call
push
push
push
mov
mov
xor
mov
push
call
push
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
push
mov
mov
call
mov
dec
mov
mov
call
push
push
push
mov
movzbl
push
call
push
mov
mov
push
call
jmp
mov
call
mov
mov
call
jne
cmpb
je
lea
push
mov
mov
call
mov
dec
mov
mov
call
mov
mov
call
mov
lea
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
jmp
mov
call
call
mov
movb
lea
call
lea
call
mov
mov
mov
call
jne
call
mov
cmpb
jne
xor
pop
pop
pop
mov
jmp
jmp
cmpl
je
mov
cmpb
je
mov
call
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
add
add
incl
add
add
xor
add
incl
add
add
add
incl
add
add
ds
incl
add
xor
xor
add
incl
add
add
add
add
incl
add
add
xor
add
incl
add
xor
xor
add
add
incl
add
add
xor
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
xor
xor
add
incl
add
xor
cmp
add
add
incl
add
add
xor
add
jl
add
incl
add
add
add
incl
add
xor
xor
add
incl
add
add
xor
incl
add
xor
xor
add
add
incl
add
add
xor
incl
add
xor
xor
add
incl
add
add
xor
add
incl
add
xor
ss
add
add
incl
push
inc
push
pop
add
add
incl
add
add
xor
add
incl
add
xor
xor
add
incl
add
add
xor
add
incl
add
xor
xor
add
incl
add
add
xor
add
add
add
outsb
add
add
incl
add
add
xor
add
incl
add
add
xor
incl
add
add
xor
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
incl
add
add
xor
add
popa
jb
inc
insb
insb
add
add
push
je
jo
insb
insb
add
outsw
inc
insb
insb
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
das
inc
push
inc
push
das
add
incl
add
add
xor
incl
add
add
xor
incl
add
add
xor
lcall
add
add
sub
arpl
jb
and
jle
popa
outsb
and
imul
incl
add
xor
add
incl
add
add
xor
outsb
pop
jo
gs
outsl
jb
add
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
incl
add
add
xor
incl
add
add
xor
incl
add
add
xor
inc
push
push
inc
push
inc
pop
dec
imul
je
inc
arpl
and
je
jo
dec
outsb
jae
popa
insb
insb
gs
insl
jo
outsb
outsb
je
pop
jnp
cmp
xor
xor
sub
sub
sub
sub
arpl
xor
cmp
incl
add
add
add
add
decl
add
push
jns
je
insl
ss
gs
add
add
incl
add
add
xor
incl
add
add
xor
incl
add
add
xor
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
incl
add
add
xor
add
sbb
push
push
push
push
call
call
mov
mov
call
jne
call
call
imul
push
call
mov
mov
call
jne
call
jmp
pop
ret
add
add
incl
add
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
push
lea
movzwl
add
mov
mov
pop
ret
mov
shr
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
lea
xor
mov
call
lea
xor
mov
call
movl
movw
lea
push
lea
push
push
push
push
push
push
push
push
mov
call
push
call
movl
lea
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
push
mov
push
call
cmpl
je
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
mov
call
mov
mov
movzwl
dec
test
jb
inc
xor
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
call
lea
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
call
inc
dec
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
mov
add
mov
lea
push
mov
push
call
test
jne
push
mov
push
call
jmp
mov
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
nop
push
push
push
push
add
mov
mov
xor
xor
mov
call
mov
movl
mov
mov
call
lea
push
push
call
test
jne
mov
jmp
mov
mov
call
test
jne
push
call
mov
add
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
xor
xor
push
push
pushl
mov
push
push
push
call
mov
push
push
call
test
je
mov
xor
pop
pop
pop
mov
jmp
jmp
xor
call
mov
pop
pop
pop
pop
ret
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
call
mov
lea
mov
call
mov
lea
call
lea
call
call
push
lea
xor
call
pushl
push
lea
mov
call
mov
lea
call
call
call
mov
lea
call
call
call
lea
call
call
lea
xor
mov
call
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
push
call
test
jae
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
ret
incl
add
add
gs
add
incl
gs
and
add
add
incl
add
add
add
add
incl
add
add
and
mov
push
xor
push
push
pushl
mov
lea
mov
call
lea
mov
call
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
add
incl
add
add
out
aad
out
add
in
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
add
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
bound
in
gs
add
inc
add
imul
push
add
inc
add
outsb
inc
add
outsl
inc
add
inc
add
jno
add
je
add
inc
add
xchg
pusha
xchg
adc
inc
add
add
inc
add
mov
lock
rorb
add
add
inc
add
test
inc
add
lods
inc
add
mov
add
add
int3
inc
add
inc
add
add
js
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
push
inc
add
inc
add
pop
inc
add
pop
inc
add
add
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
add
add
inc
add
cmp
jae
xor
pop
mov
jmp
pop
pop
shl
push
pushf
jmp
pop
pop
not
not
and
push
pushf
jmp
mov
push
jmp
pop
pop
mov
jmp
mov
push
jmp
pop
pop
mov
jmp
pop
popl
jmp
pop
popl
jmp
pop
movzbw
push
jmp
pop
popw
jmp
pop
pushw
jmp
pop
pushl
jmp
pop
jmp
pop
not
notl
and
pushf
jmp
notl
pop
and
pushf
jmp
pop
pushl
jmp
pop
pushw
jmp
pop
pop
shl
push
pushf
jmp
xor
inc
add
xchg
inc
add
mov
xor
inc
add
xchg
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
xor
inc
add
xchg
inc
add
nop
inc
add
inc
add
xchg
inc
add
add
inc
add
xchg
inc
add
mov
xor
inc
add
inc
add
mov
xor
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
mov
xor
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
nop
inc
add
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
mov
xor
inc
add
nop
inc
add
mov
xor
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
mov
cld
nop
inc
add
inc
add
mov
dec
xchg
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
inc
add
mov
sub
mov
daa
mov
test
inc
add
mov
mov
inc
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
mov
or
xchg
inc
add
nop
inc
add
xchg
inc
add
inc
add
nop
inc
add
mov
enter
fsts
inc
add
inc
add
mov
push
xchg
inc
add
inc
add
mov
push
mov
pop
mov
sahf
mov
outsl
adc
dec
xchg
inc
add
mov
cmpsb
xchg
inc
add
mov
enter
test
inc
add
xchg
inc
add
xchg
inc
add
mov
dec
xchg
inc
add
nop
inc
add
mov
push
mov
adc
inc
add
inc
add
nop
inc
add
xchg
inc
add
mov
in
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
mov
fisttpll
inc
add
nop
inc
add
mov
outsl
adc
daa
mov
or
mov
mov
mov
mov
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
mov
test
inc
add
xchg
inc
add
mov
xor
inc
add
xchg
inc
add
xchg
inc
add
mov
pop
mov
stc
mov
lds
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
inc
add
mov
test
inc
add
mov
push
xchg
inc
add
mov
cwtl
xchg
inc
add
xchg
inc
add
xchg
inc
add
mov
or
xchg
inc
add
mov
fsts
inc
add
nop
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
mov
push
inc
add
xchg
inc
add
xchg
inc
add
inc
add
mov
fsts
inc
add
mov
aas
xchg
inc
add
mov
jb
inc
add
nop
inc
add
mov
clc
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
mov
xor
inc
add
mov
sbb
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
mov
sbb
inc
add
mov
sbb
inc
add
inc
add
dec
rol
neg
add
sub
mov
push
jmp
mov
sub
xor
ror
bswap
inc
sub
lea
push
jmp
movzbl
sub
dec
lea
rol
neg
add
sub
pop
mov
jmp
pop
add
pushf
jmp
pop
popw
jmp
pop
popw
jmp
pop
add
pushf
jmp
mov
sub
dec
xor
inc
xor
inc
not
sub
push
jmp
pop
pop
shl
push
pushf
jmp
pop
pop
pop
shld
push
pushf
jmp
pop
pop
shr
push
pushf
jmp
pop
pop
shr
push
pushf
jmp
and
pushl
jmp
pop
mov
sub
push
jmp
pop
pop
mov
jmp
mov
sub
dec
xor
inc
xor
not
sub
cbtw
cwtl
add
push
jmp
pop
pop
pop
shrd
push
pushf
jmp
and
popl
jmp
pop
movzbw
push
jmp
pop
pop
shr
push
pushf
jmp
pop
add
pushf
jmp
pop
pushw
jmp
movzwl
add
rol
add
add
xchg
xor
add
cwtl
push
jmp
movzbl
sub
not
add
xor
sub
not
sub
popw
jmp
mov
sub
not
xor
sub
not
inc
sub
pushw
jmp
pop
popl
jmp
pop
jmp
movl
pop
pop
pop
pop
popf
pop
pop
pop
pop
pop
ret
pop
pushl
jmp
push
jmp
aas
not
incl
add
add
add
incl
add
add
add
add
decl
add
push
push
inc
push
dec
dec
dec
push
cs
pop
inc
add
add
decl
add
push
jns
je
insl
ss
gs
add
add
push
imul
outsl
jb
add
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
inc
arpl
and
je
jo
dec
outsb
jae
popa
insb
insb
gs
insl
jo
outsb
outsb
je
pop
jnp
mov
xor
xor
sub
sub
sub
sub
arpl
xor
cmp
jne
push
popa
je
outsl
jo
outsb
add
add
incl
add
add
add
add
gs
imul
add
add
decl
add
jne
gs
outsb
imul
add
add
add
add
xor
mov
add
inc
add
lea
add
add
add
add
test
inc
add
and
add
inc
add
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
add
add
add
add
add
add
add
add
add
add
inc
jb
outsl
jb
mov
push
jne
je
insl
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
incl
add
add
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
inc
add
inc
add
popf
inc
add
inc
add
popf
inc
add
popf
inc
add
inc
add
sahf
inc
add
inc
add
inc
add
add
add
add
inc
add
sahf
inc
add
sahf
inc
add
lahf
inc
add
lahf
inc
add
inc
add
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
mov
inc
add
inc
add
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
inc
add
add
add
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
add
mov
inc
add
mov
inc
add
inc
add
add
mov
inc
add
mov
inc
add
movsb
inc
add
add
inc
add
add
inc
add
inc
add
movsb
inc
add
add
add
add
adc
sbb
nop
add
mov
add
add
addb
add
addb
addb
add
addb
rol
add
add
add
incl
add
incl
add
add
add
add
add
incl
incl
lods
flds
add
add
or
inc
add
fildl
int3
int
add
int
add
add
cmp
fidivrs
inc
mov
or
add
push
into
inc
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
nop
rolb
add
add
call
add
add
inc
add
add
add
roll
add
add
dec
aam
add
add
add
add
cld
aam
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
xlat
inc
add
add
add
xlat
inc
add
add
add
xlat
inc
add
add
add
xlat
inc
add
add
add
xlat
inc
add
add
add
xlat
inc
add
add
add
xlat
inc
add
add
add
fadds
add
add
fcom
inc
add
add
add
fadds
add
add
dec
flds
add
add
rcrl
and
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
decl
nop
sbb
add
add
or
add
in
sbb
add
add
add
sbb
add
push
add
add
add
sbb
add
add
adc
adc
hlt
sbb
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
add
adc
sbb
add
xor
xor
and
insb
popa
je
and
xor
xor
inc
outsl
jo
jb
addr16
cmp
xor
outsb
sub
and
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fldl
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
testl
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outsl
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
incl
or
incl
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
movsl
inc
add
add
add
add
add
add
add
stos
inc
add
movsl
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
add
add
add
adc
add
add
add
and
add
add
add
inc
add
add
add
inc
add
add
add
int
add
inc
add
inc
add
add
inc
add
mov
inc
add
inc
add
add
rolb
iret
inc
add
inc
add
add
inc
add
add
inc
add
add
rolb
int
add
int
add
inc
add
add
int
add
add
add
inc
add
into
inc
add
mov
inc
add
inc
add
inc
add
into
inc
add
inc
add
rolb
iret
inc
add
inc
add
inc
add
inc
add
int
add
int
add
inc
add
into
inc
add
inc
add
into
inc
add
into
inc
add
inc
add
add
inc
add
inc
add
into
inc
add
inc
add
add
inc
add
rolb
into
inc
add
int
add
inc
add
inc
add
into
inc
add
inc
add
add
inc
add
int
add
add
mov
inc
add
inc
add
inc
add
add
inc
add
inc
add
add
add
inc
add
inc
add
add
mov
inc
add
inc
add
rolb
int
add
add
inc
add
lock
add
add
push
push
push
push
push
pushf
push
push
push
push
mov
mov
call
mov
mov
mov
pushf
cld
repnz
je
mov
xchg
mov
repnz
mov
mov
sub
shl
lea
popf
mov
add
mov
inc
add
not
ror
sub
ror
neg
not
ror
add
movzbl
pushl
ret
movzwl
add
add
rol
add
xchg
xor
add
push
jmp
cs
out
shlb
adc
fists
cmpsl
int
aaa
push
aaa
enter
mov
jo
gs
and
or
scas
leave
call
inc
push
cmp
inc
and
or
mov
mov
inc
enter
xchg
pslld
xor
js
and
loop
mov
insb
inc
xchg
leave
cltd
jg
push
cmp
divl
inc
daa
aam
addr16
mov
insl
push
fsubrs
imul
xchg
pop
add
leave
mov
xor
sbb
jl
gs
sub
mov
ds
clc
call
push
fsubrs
or
pop
cmp
addl
int3
popf
push
sub
xchg
ret
push
xchg
sti
call
pop
ljmp
dec
aam
jae
or
test
lea
xchg
pop
add
test
dec
sbb
ja
imul
ljmp
pavgb
pop
fcmovnu
aas
mov
cmp
ret
out
fbld
ret
lods
shrl
int3
jle
mov
scas
insb
push
pusha
xchg
pop
insb
jge
rclb
ret
lods
pop
les
push
xor
jmp
push
fcompl
inc
pop
xchg
cs
sbbb
and
aas
dec
pop
in
into
aad
ljmp
jmp
jmp
sti
lret
and
cli
lea
sub
pop
mov
dec
movsl
ss
pop
sub
cld
sarl
dec
mov
in
sub
mov
xlat
in
popa
jp
jb
in
in
in
add
xchg
int
push
and
leave
jae
xchg
sbb
testb
or
dec
xchg
inc
dec
cmp
mov
addr16
or
push
cmc
dec
jecxz
in
mov
lock
mov
subb
cld
xor
pop
testb
jmpw
cli
pop
repnz
adc
inc
push
xchg
jae
push
xorb
push
shll
mov
sub
test
std
leave
mov
adc
stos
movsb
xchg
test
insb
je
pop
movsb
sub
jo
popa
adc
movsb
sbb
fstpt
and
sti
aas
push
pop
add
addl
xchg
fisttpl
loope
ja
fnsave
adc
lods
mov
dec
xchg
dec
cmp
xchg
ficompl
xor
push
adc
in
add
jg
xchg
adc
mov
or
lahf
pop
pop
jp
ja
xor
cmp
cmc
jae
mov
test
das
out
xchg
sub
outsl
sti
xchg
adc
inc
push
lret
cmp
hlt
add
fisubrs
call
jne
es
imul
adc
jl
sahf
dec
lahf
push
inc
jbe
lods
adc
and
arpl
cld
push
dec
mov
mov
je
clc
jmp
adc
adc
and
daa
iret
arpl
mov
insb
into
mov
sti
sbb
xor
out
in
scas
mov
xlat
imul
lods
clc
lds
xlat
mov
add
mov
rorl
bound
add
jne
cmpsl
test
sub
and
mov
xchg
add
aam
mov
bound
lods
frstor
aam
icebp
and
outsb
fbstp
fiaddl
in
mov
clc
in
sar
push
push
xchg
sbb
xchg
pop
mov
push
popa
aaa
arpl
cmpsb
xchg
cs
mov
jbe
dec
xor
hlt
sbb
push
nop
out
scas
imul
push
xor
inc
mov
fdivs
movsb
sti
shlb
sub
dec
test
inc
roll
aad
icebp
cmp
jae
pusha
icebp
fisubs
aam
mov
js
test
mov
lahf
cli
pop
test
cli
stc
pusha
mov
mov
pop
mov
jnp
aaa
loope
jp
xor
aad
pop
rcrl
xchg
adc
enter
lock
shlb
in
loop
subb
xchg
dec
cmpsl
mov
fucomp
push
add
data16
shlb
mov
inc
sbb
fs
xchg
sbb
mov
cmp
cmp
call
jmp
movsb
neg
adc
xor
mov
pushf
push
movsb
mov
test
add
sahf
js
pop
cmp
push
int
jns
jbe
mov
adc
xor
sub
das
add
or
mov
add
fsubs
cwtl
pop
out
pop
lods
fisttpll
mov
mov
xor
in
into
mov
rcrl
xchg
dec
pop
push
ffreep
shlb
call
lret
out
dec
call
push
mov
xor
cld
shrl
les
mov
test
fistl
xor
enter
or
stc
xchg
push
test
ret
xorb
rcrl
push
and
inc
or
pop
inc
lods
xchg
mov
pop
push
cmpl
xor
xchg
fsubl
pop
test
fisttpl
mov
das
outsl
and
cwtl
xlat
mov
repnz
shrb
mov
pusha
mov
dec
cmp
pop
lock
rcrl
sbb
mov
inc
sbb
jl
mov
mov
dec
into
push
cli
sar
das
shl
or
iret
mov
push
add
mov
mov
lahf
imul
pop
outsb
jb
push
push
js
pushf
mov
push
call
push
pop
pop
aam
arpl
or
pop
testb
in
mov
jb
mov
dec
test
arpl
mov
inc
test
imul
std
jb
sbb
mov
cmp
ss
jmp
es
movsl
lret
inc
test
jl
scas
xchg
xchg
cmc
out
pop
or
fsubrs
jno
lahf
jns
fidivrs
push
call
sbb
inc
mov
js
imul
imul
push
outsl
or
xchg
mov
dec
or
decl
imul
xlat
lods
add
cmp
mov
sarl
sahf
push
out
fstps
mov
imulb
dec
jp
ds
popf
repz
sub
jo
sahf
mov
cmc
aaa
outsb
pop
pop
shll
rol
stc
sub
cltd
loop
pop
sbb
push
or
orl
scas
sbb
add
inc
into
inc
andb
mov
ficoms
rsqrtps
sub
lcall
sbb
add
mov
pusha
xor
loopne
mov
xor
pop
or
sub
mov
aam
adc
aas
xlat
adc
push
or
sbbl
push
mov
dec
test
imul
imul
sarb
inc
or
stc
pop
les
lret
sbb
cmpsl
inc
in
mov
dec
rcrl
repz
pop
sbb
jecxz
adc
adc
pop
mov
mov
or
aam
jo
mov
movsb
fisubs
fisubs
and
adc
cmpsb
subb
inc
push
in
inc
inc
and
andb
dec
test
int
mov
add
pop
sar
jg,pn
addr16
sbb
push
mov
jg
jae
fwait
insb
xlat
or
out
movsl
mov
pop
push
sbb
xchg
pop
inc
sahf
aad
cmp
insb
ret
in
dec
stos
pop
in
xor
pusha
in
clc
out
stc
adc
mov
cmpsb
std
jecxz
add
sub
lods
mov
inc
and
int3
scas
xchg
jo
fdivs
mov
or
in
fdiv
or
bound
xor
mov
and
addr16
ficompl
sarb
xor
fisubs
andl
jecxz
xor
xor
push
popl
in
lahf
jl
lock
out
jne
pop
xlat
in
test
fwait
mov
mov
sti
fs
jno
jmp
in
out
xchg
cltd
dec
lods
push
das
xchg
add
push
jnp
jmp
add
xchg
dec
loopne
push
adc
adc
ucomiss
pusha
pop
lret
outsb
rolb
jge
sbb
repz
hlt
mov
pop
mov
pop
sub
rclb
mov
in
orb
filds
and
paddusw
adc
movl
out
sbb
and
gs
sti
jle
fdivs
xorb
idivl
mov
add
js
lret
sbb
cmpsb
jecxz
jle
fdivl
lods
pop
divl
popa
ss
push
cltd
sub
mov
testl
loope
mov
andl
pushf
lret
or
mov
les
cmc
mov
mov
xor
or
mov
xlat
lock
jp
lds
addl
push
out
adc
mov
cmpsl
repz
xchg
bound
lods
in
das
mov
xchg
in
mov
xchg
inc
push
and
stos
mov
jno
mov
dec
push
sub
ret
stc
xor
popl
jnp
cwtl
lret
repnz
push
mov
push
stc
stc
ljmp
lock
push
jnp
mov
dec
push
xchg
inc
loop
jae
mov
adc
push
pushf
mov
xor
into
sbb
fists
xor
stos
mov
fwait
xchg
push
pop
jg
ds
xor
ljmp
out
popa
xor
outsl
mov
fsubrl
loopne
sbb
cmp
push
sahf
popf
gs
sub
dec
add
jmp
xor
es
cmc
and
aad
fs
mov
aam
call
mov
ret
std
je
aas
cmp
cmpl
les
xchg
sar
xchg
mov
data16
lods
stos
push
loop
or
ljmp
cmp
lcall
pop
in
push
and
add
lahf
dec
stos
sbb
test
aad
arpl
xor
sub
ds
mov
scas
daa
jbe
and
test
ljmp
jnp
fisubl
cli
mov
or
fmulp
sbb
add
adc
pop
mov
or
cmp
mov
dec
movsl
xchg
jne
xor
jecxz
xchg
scas
icebp
pop
lcall
push
das
ret
ja
cmc
inc
push
cltd
dec
sbb
fcomps
ret
rorb
mov
fst
xchg
push
aaa
inc
sahf
sti
fisttpll
popw
sbb
popf
xchg
repnz
clc
int
jo
adcb
roll
adc
pop
dec
and
std
lea
test
inc
int
jg
mov
cld
shll
inc
por
push
pop
lret
rclb
add
add
lcall
and
hlt
ret
fistl
lds
or
leave
add
push
and
lret
adc
mov
je
sub
push
sub
inc
jg
mov
mov
out
jecxz
stos
xchg
out
push
ret
sbb
xlat
push
ljmp
fwait
push
mov
sbb
fwait
ja
in
or
adc
add
in
lcall
mov
jo
xor
aaa
bswap
inc
ljmp
movsl
pop
xor
inc
stos
add
jo
imul
push
ljmp
lea
push
leave
xor
push
or
dec
sbb
lock
aad
negb
aaa
arpl
scas
mov
es
out
lods
adc
filds
mov
sub
xor
cs
popf
adc
xchg
cmp
pop
jnp
out
fs
lods
add
jb
jbe
or
sbb
scas
mov
jl
adc
xor
xchg
and
and
lahf
addr16
lahf
shlb
mov
or
lods
arpl
jns
pop
clc
push
into
sahf
imul
jp
ss
or
daa
push
out
leave
out
mov
daa
mov
hlt
mov
cmp
sbb
dec
ret
xor
and
test
mov
test
out
inc
nop
lahf
test
or
pusha
mov
push
ror
lock
xlat
call
ret
addr16
push
mov
mov
sahf
lock
jp
push
xor
xor
lods
cmpb
and
mov
test
xchg
jo
cmp
sbb
adc
cmpsb
mov
test
pop
fidivrs
movsb
xchg
sbb
in
and
fnstcw
cwtl
loopne
jge
inc
xchg
loop
bound
clc
jle
das
andb
xchg
push
cmp
in
or
fs
mov
cmp
cmp
push
and
or
into
or
mov
and
insb
cmp
repnz
ss
or
movsl
sbb
fs
pop
ret
icebp
sbb
xchg
clc
fldcw
cmpb
add
jmp
test
popf
inc
mov
jl
adc
sub
std
sbb
or
das
pop
mov
sahf
shlb
mov
mov
icebp
int3
sub
jecxz
xor
gs
pop
dec
popf
lret
cmp
je
mov
jge
push
bound
dec
mov
es
lds
shll
into
adc
mov
sbb
pop
xor
mov
and
loope
cltd
lea
popf
inc
les
and
adc
sbb
unpcklps
mov
test
int3
cltd
ror
fisubl
xchg
call
or
sbb
faddl
or
movsl
int
call
pop
aaa
push
stc
in
shlb
insb
lret
ret
jne
dec
repnz
mov
mov
cmp
add
cmc
lret
repz
test
out
sbb
pop
sti
xor
testb
into
fsubrs
std
int
sbb
xchg
je
jecxz
addr16
call
mov
mov
jne
and
ja
sbb
fs
call
push
sub
mov
imul
or
idivb
test
and
cmc
pop
ja
je
push
jo
mov
sbb
add
mov
test
aam
cmc
dec
mov
sbb
inc
gs
xchg
outsb
jle
mov
push
push
dec
scas
mov
xor
fldt
xor
sbb
icebp
rcll
push
nop
je
sub
or
adc
jno
mov
mov
jne
inc
pop
sti
or
sub
int
xor
xor
fists
ja
xor
pop
lret
sbb
mov
inc
pop
into
lods
mov
add
push
mov
call
enter
bound
cmp
int3
inc
lcall
or
mov
faddp
fistl
andl
add
push
sbb
fadds
pushf
jno
clc
data16
stc
aad
lcall
inc
aas
cmpsb
inc
mov
xor
push
cwtl
pop
add
push
shll
push
lret
loop
test
imul
jnp
aad
jge
jmp
pop
mov
inc
cmpl
cmp
loop
lds
mov
jno
dec
dec
cwtl
xor
xchg
hlt
stos
cmp
mov
jnp
jne
push
pop
adc
inc
mov
jbe
daa
testl
cmpsb
dec
loopne
sbb
and
jnp
xchg
icebp
fs
sub
outsb
sbb
adc
mov
xor
and
rcrl
cs
outsb
aas
mov
xorb
out
xchg
inc
adc
cmp
mov
ret
orb
inc
rcrb
aaa
mov
mov
pop
das
push
or
mov
jb
cmc
dec
test
notl
faddl
popa
and
int3
call
xchg
dec
mov
fcoml
shrl
out
ret
test
test
add
add
xchg
xchg
frndint
adc
pop
mov
mov
ja
pop
xchg
repz
add
fwait
leave
mov
repnz
adc
mov
cld
inc
and
mov
lods
in
adc
lahf
jo
mov
add
ret
fcmovnu
loop
int
pop
push
cld
jecxz
jmp
inc
sub
jmp
mov
test
aad
cmc
inc
mov
shll
jae
pop
jmp
int
enter
fmuls
out
lds
pop
xchg
ja
sar
dec
mov
jb
addr16
outsl
pop
nop
inc
mov
adcb
inc
adcl
bound
mov
xchg
adc
lock
ret
scas
pushf
jl
adc
in
sbb
inc
std
mov
mov
jmp
lock
jns
pusha
mov
mov
pop
aad
ss
pushf
inc
in
cmpsl
out
sub
jbe
inc
leave
data16
das
mov
out
pop
mov
push
lods
adc
pop
mov
xor
ficomps
test
loope
scas
mov
ljmp
sub
and
xor
xor
mov
adc
jl
sbb
neg
imul
sub
lcall
clc
daa
out
dec
mov
dec
inc
sbb
xchg
inc
xchg
stc
fcoms
mov
lods
daa
and
push
cs
aas
xchg
rolb
jg
sbb
nop
mov
cmpsb
mov
stos
sub
sbbl
and
loope
xchg
loop
cmp
insb
fistpll
pop
ret
pop
push
cmp
cltd
xor
icebp
fcomps
xchg
arpl
sbb
cmc
xlat
stos
adcl
adc
and
mov
xchg
xlat
sbb
pop
popf
imul
mov
adc
add
jo
shl
stos
pop
fistl
lea
pop
stos
inc
push
or
mov
iret
pop
lock
mov
ljmp
outsl
push
pop
mov
fmulp
mov
repnz
pop
adc
iret
popf
gs
sub
add
inc
add
out
andl
jb
shlb
and
dec
add
aam
dec
pop
xor
mov
dec
adc
rclb
addr16
or
fcmovne
mov
fistpl
scas
pop
cld
mov
clc
shlb
rcll
pop
add
lock
mov
mov
sahf
popf
or
pop
das
subl
xchg
mov
or
mov
push
mov
sbb
mov
and
jle
sub
and
xorl
lret
stos
xchg
sbbl
dec
test
xchg
mov
sub
repnz
into
xor
pop
add
ret
aaa
sbb
ret
lea
add
popf
jb
sbb
mov
push
popa
insl
push
mov
into
ss
pop
push
fstpt
test
sub
outsb
inc
gs
das
out
scas
cmpsl
clc
cmp
shll
js
push
fbstp
rclb
mov
hlt
scas
jno
mov
mov
xchg
stc
xchg
cmp
add
xchg
push
and
pushf
and
aad
cs
jns
adc
cltd
inc
jge
jl
faddl
rol
push
je
and
mov
loop
and
add
lods
mov
ret
ljmp
mov
jmp
mov
pop
in
faddl
sbb
add
das
xchg
ret
jbe
mov
lcall
jecxz
push
call
sub
lock
mov
lcall
mov
cmpsl
lahf
sub
lods
adc
mov
push
idivb
and
out
mov
or
rcll
hlt
decl
jb
or
or
and
adc
add
lods
push
in
daa
incl
cs
lcall
mov
xchg
sarl
pop
xor
mov
inc
inc
dec
adc
xchg
sbb
push
cmp
add
cmp
inc
dec
add
and
dec
scas
cmp
dec
out
add
add
sub
test
or
jg
mov
mov
add
test
cmp
lods
dec
lret
hlt
push
add
cli
test
arpl
addr16
add
xor
cmp
pop
sbb
jnp
sti
mov
mov
out
pop
and
sahf
stos
cmp
xor
shl
loope
and
es
pop
jne
lds
rcrl
hlt
loop
jmp
cmp
inc
sub
mov
or
add
push
ret
dec
je
sub
xor
mov
sub
xor
xchg
dec
into
icebp
inc
aad
ja
adcb
enter
mov
inc
push
gs
cmpsb
sub
adc
pop
add
ret
or
mov
jo
mov
xchg
stc
iret
mov
int
repnz
les
cli
mov
or
xor
subb
cmp
inc
mov
cmp
sbb
adc
push
dec
int
mov
ljmp
sub
xor
insl
add
out
fisttps
adc
xchg
dec
push
dec
popa
movsb
push
mov
cmpsl
fstpt
out
jo
and
mov
sbb
bound
sub
xor
sub
jo
hlt
lds
lahf
inc
sub
xlat
xor
repnz
fildl
or
cmp
jle
xchg
mov
in
fs
mov
lock
out
and
aaa
in
and
das
jnp
andl
js
js
ret
mov
ret
push
ret
pop
xchg
arpl
insb
test
popf
lds
imul
pop
les
mov
inc
and
pop
xor
outsb
jne
add
inc
iret
cli
jmp
mov
xor
push
hlt
cmc
add
addr16
xchg
js
in
fs
sub
ja
dec
adc
and
mov
sub
ljmp
test
inc
sbb
xor
lret
adc
pop
adc
cmpsl
jecxz
andb
je
or
in
fnstenv
frstor
roll
adcb
xchg
inc
xchg
lret
aam
mov
jle
das
ss
and
aas
loopne
fmuls
popf
and
int
dec
sbb
jae
cmp
gs
mov
orl
push
sub
push
pushf
sbb
and
dec
sub
test
adc
xor
hlt
je
repz
aam
sbb
loopne
adc
push
mov
scas
inc
fldenv
adc
xor
jp
aas
xchg
gs
sub
mov
int
into
cmp
test
pop
fidivs
bound
ficoml
xor
jecxz
dec
pop
mov
stc
ljmp
mov
xchg
pop
test
cmp
hlt
in
sub
out
std
flds
sub
push
js
loopne
cmp
mov
sub
pop
stc
repz
loope
lahf
jno
and
fnstenv
das
fildll
push
fdivrl
push
lock
push
jmp
xchg
add
add
add
add
push
add
add
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
fadds
add
lock
cmp
add
or
add
and
add
add
add
add
add
add
add
push
add
cmpb
add
push
add
subb
push
add
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
je
add
fadds
add
in
add
add
add
dec
xor
add
add
in
add
add
add
lods
add
jl
add
in
add
add
add
sub
add
mov
add
add
add
add
cmp
add
add
in
add
add
add
adc
add
in
add
add
add
and
add
in
add
add
add
hlt
add
mov
add
in
add
add
add
jl
add
jnp
add
in
add
add
add
push
add
dec
add
inc
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
add
add
dec
add
insb
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
pop
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
js
je
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
add
outsb
add
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
sub
inc
add
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
je
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
imul
cmp
es
je
xor
cmp
je
jle
pusha
addr16
je
jle
pusha
addr16
je
jle
pusha
addr16
lds
stc
mov
cmp
pop
insl
jo
je
add
inc
es
aaa
mov
pop
fwait
cmp
add
add
add
add
lods
push
gs
gs
adc
push
gs
imul
je
jo
adc
jns
jns
jne
imul
outsb
outsl
ja
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
adc
outsb
imul
imul
adc
dec
jns
insb
popa
jae
gs
sbb
push
imul
adc
inc
outsl
ja
dec
je
jo
outsb
imul
je
popa
jb
popa
bound
add
push
push
push
dec
add
cmc
push
outsb
imul
add
pop
push
outsl
arpl
je
outsb
imul
gs
outsb
imul
bound
add
cmpsl
dec
jns
jb
jo
imul
gs
popa
addr16
adc
push
arpl
outsb
push
jo
add
push
dec
popa
je
add
popf
push
jns
inc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
jb
outsb
jae
gs
adc
push
jb
arpl
jae
or
push
insb
dec
gs
jo
xor
adc
outsb
imul
push
outsb
imul
outsb
gs
adc
outsb
imul
dec
outsb
outsw
add
stos
push
outsb
imul
outsb
popa
addr16
add
inc
jne
push
outsb
imul
push
jbe
add
repz
outsb
imul
push
imul
add
rorl
imul
jb
add
jb
imul
outsb
imul
jb
gs
add
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
les
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
inc
add
add
add
outsl
add
insl
add
outsb
add
add
add
je
je
jo
cmp
das
add
add
ja
ja
add
add
add
add
popa
add
add
add
outsl
add
add
add
sub
add
add
arpl
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
pop
dec
xchg
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
add
push
jmp
movq
insl
out
dec
or
push
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
and
xor
sub
and
xor
xor
xor
aaa
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
popa
add
jb
dec
add
popa
add
add
add
push
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
jb
addr16
bound
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
dec
xchg
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
jo
popa
add
jb
dec
add
popa
add
add
pop
add
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
inc
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jo
popa
add
jb
dec
add
popa
add
and
xchg
pop
sub
jp
pop
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
and
xor
sub
and
xor
xor
xor
aaa
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
and
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
or
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
and
and
arpl
imul
and
and
and
gs
gs
gs
jb
jbe
insb
gs
and
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
das
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
and
and
jae
arpl
imul
das
je
jne
je
outsb
outsw
and
jae
gs
bound
.byte
push
mov
es
xchg
test
jns
mov
daa
push
lock
mov
mov
mov
imul
in
mov
pop
xchg
mov
sbb
jb
fldenv
out
jno
out
and
xor
int
cmp
mov
test
ja
jo
push
popa
lahf
icebp
add
cmp
xchg
sbb
nop
maskmovq
negl
jae
xchg
sub
gs
push
cmpsb
mov
imul
mov
repnz
sbb
stos
insb
mov
pop
pop
sub
out
pop
add
aas
shlb
mov
mov
rorl
daa
cmp
cmp
fwait
xlat
lds
call
loopne
add
sbb
in
push
fcoms
in
repnz
clc
mov
iret
xchg
bound
sbb
int3
pop
clc
mov
jmp
jbe
imulb
xchg
das
pop
dec
outsb
es
push
ret
insl
fwait
lods
sbb
pop
mov
add
and
inc
sub
pop
mov
movsb
push
imul
mov
jno
push
gs
adcl
push
mov
sbb
pop
sub
cwtl
and
call
into
mov
xlat
fidivl
divb
and
in
mov
loopne
aaa
int3
gs
sub
and
and
repz
cs
push
les
sub
xor
push
sti
fcomps
adc
mov
movb
movsl
cld
clc
add
leave
mov
out
mov
nop
cmpsl
lret
pop
push
mov
xchg
jecxz
aaa
mov
jb
sub
pop
cmpsb
push
enter
outsb
inc
std
push
ret
insb
ljmp
fcoml
dec
stos
or
sbb
mov
outsb
xchg
les
stos
pusha
adc
imul
jle
dec
dec
lods
mov
stos
jl
mov
pop
vpaddusw
adc
cmp
repnz
pop
ret
lods
pop
inc
jg
jg
mov
pop
dec
mov
shrb
test
jns
scas
mov
and
mov
cmp
bound
je
popa
ds
outsl
mov
into
push
stos
mov
mov
or
test
or
mov
xor
push
les
repz
aad
sarb
movsl
out
inc
movsl
test
sarb
pop
cmp
ja
loop
push
cmp
scas
movsb
jmp
lods
repnz
sub
jg
mov
adc
push
mov
rorl
inc
nop
push
les
mov
ret
xchg
pusha
pushf
jge
in
cmpsb
popf
cli
ficoms
cltd
fists
clc
scas
mov
add
insl
push
pop
inc
loope
inc
in
xlat
mov
es
cmp
inc
xor
sbb
pop
cmc
into
clc
push
lahf
sub
popa
push
call
sahf
imul
imul
inc
loope
mov
cmp
push
pop
jge
in
and
insb
push
dec
cmp
fisubl
shlb
into
and
iret
call
mov
xor
out
push
xchg
jne
dec
mov
lahf
push
lea
xlat
pop
cwtl
daa
mov
sub
adc
test
mov
popa
inc
mov
xchg
js
xor
fidivrs
mov
out
jne
sub
outsl
push
aam
dec
or
fiadds
inc
pop
sbb
lret
adc
mov
in
insl
in
inc
mov
or
sbb
pushf
dec
mov
gs
cs
daa
jb
les
sahf
lock
add
push
imul
cwtl
nop
push
bound
leave
repnz
sbb
jnp
imul
pop
adc
push
push
pushf
out
cmpb
imul
dec
jb
mov
cs
movsb
aas
and
gs
aam
add
call
test
dec
enter
adc
shrl
push
sub
lret
addr16
daa
jo
xchg
fisubs
jge
adc
scas
or
and
sub
cld
cltd
dec
les
imul
pop
sub
sbb
mov
sahf
and
mov
jne
jl
mov
lcall
sbb
jno
push
arpl
xlat
dec
dec
mov
xchg
add
jg
movsb
lea
enter
and
jl
dec
into
or
dec
lret
dec
cmp
test
or
into
jo
out
mov
fidivl
or
bound
push
aad
and
imul
lods
jns
inc
sub
scas
std
mov
lret
add
xorl
or
pop
or
sti
test
cmp
pusha
cmp
pop
add
dec
mov
imul
sub
rclb
orb
cmpsl
jno
cmpsb
mov
pop
lret
adc
mov
popa
es
in
ss
mov
cmp
xchg
mov
pop
jl
imul
pop
push
jo
pop
loop
sub
adc
in
flds
pop
dec
hlt
cmpsb
and
dec
test
rcrb
sub
dec
lods
sbb
mov
pop
test
enter
mov
cmp
mov
not
and
aam
jg
adc
push
pop
arpl
sti
les
mov
push
push
add
or
jl
or
xor
sub
jmp
dec
adc
daa
imul
aas
sbb
mov
pushf
imul
movsb
xor
and
lret
and
mov
roll
roll
in
push
xchg
push
adc
sti
frstor
sbbl
xor
arpl
shl
sbb
mov
aaa
add
sbb
sub
adc
mov
les
add
in
in
adc
mov
dec
pop
or
lret
test
dec
lcall
lods
int3
dec
in
mov
insl
push
mov
add
push
pop
xchg
xor
jne
xchg
mov
jb
lahf
add
leave
bound
mov
loope
jnp
scas
inc
mov
ja
xchg
ds
out
cmp
xlat
pop
das
xchg
mov
je
push
mov
out
out
stos
jbe
inc
inc
fucom
stc
push
mov
jmp
dec
pop
fsts
dec
ja
cli
loopne
jae
and
adc
sti
and
add
loop
adc
jnp
sbb
in
lahf
sbbl
jmp
hlt
sbb
in
xor
loop
mov
pop
pop
pop
dec
js
sub
and
pop
mov
sbbl
loope
inc
cmp
adc
loope
jo
arpl
bound
xchg
repz
popl
mov
call
sbb
cli
xchg
or
and
push
push
aaa
sbb
loopne
lods
andb
hlt
fadd
adc
ljmp
push
and
pop
mov
enter
cmp
push
pop
int
es
fs
pop
xor
mov
pushf
in
clc
fcomps
mov
inc
ss
adc
jnp
dec
cmc
jne
jl
jno
roll
sbb
cld
leave
xchg
insl
sti
pusha
xchg
sbb
adc
xor
push
or
shrl
dec
popa
arpl
xor
loop
lock
mov
add
scas
out
imull
pop
jecxz
in
sarl
les
or
movsl
arpl
mov
dec
adc
cwtl
push
sbb
dec
lods
push
clc
lods
push
cltd
icebp
xor
push
jo
pop
mov
or
pop
shrb
xor
sti
lret
xor
into
xchg
or
movsl
je
xchg
pop
sbb
stos
lods
xchg
push
sub
jne
cmp
sub
sarl
sbb
push
stc
aam
jmp
insb
mov
lods
adcb
push
pop
ds
inc
xchg
call
in
pop
dec
mov
fdivrl
stc
xlat
mov
das
add
mov
pop
inc
sub
mov
xchg
cmp
ja
xchg
loope
sbb
add
adc
xor
push
mov
add
mov
add
repz
xchg
insb
cmp
push
add
cld
cmp
movsl
mov
rclb
rorb
fistpll
scas
cwtl
xchg
xor
cmp
fdiv
lods
xlat
xchg
enter
dec
fwait
and
push
pop
add
leave
lret
filds
mov
test
fbstp
mov
insl
in
xor
and
mov
shlb
sbb
push
mov
lock
rorb
xor
repz
aas
ja
orb
dec
icebp
cmp
shrb
gs
cmp
cmp
int3
pop
cmpl
sub
negl
pop
and
add
sbb
popa
sbbb
data16
fstpl
pop
push
das
cmpsb
xchg
mov
mov
mov
sbb
pop
dec
pop
mov
je
mov
hlt
je
rolb
repnz
lods
sbbl
rorl
jnp
arpl
test
jb
lea
pop
jno
outsl
mov
push
int
fdivrs
mov
cmp
sub
aad
mov
sti
pop
roll
and
sti
imul
mov
pop
or
mov
sub
xchg
dec
jl
mov
and
rcrl
aas
push
push
dec
sbbl
cltd
mov
inc
xor
xor
cltd
daa
repnz
push
fdivs
mov
aas
into
cmc
hlt
hlt
movsb
dec
daa
cmp
gs
stos
stc
fnstsw
repnz
xor
js
dec
mov
aaa
into
rcrl
mov
jp
popa
add
in
fistpl
mov
adc
dec
or
inc
jno
inc
pop
and
inc
jp
dec
cmp
xor
imul
xchg
push
xchg
jo
jle
mov
shll
or
pusha
ret
leave
test
jo
les
xchg
inc
repz
add
imul
cwtl
pop
mov
lret
dec
imul
and
dec
cwtl
pusha
nop
imul
and
ret
dec
cmp
sub
dec
mull
call
mov
call
leave
sub
sub
cmp
sbb
jecxz
ljmp
pop
lcall
dec
fiaddl
sub
sub
out
ds
stos
xchg
cwtl
lcall
sub
xchg
loop
inc
test
sub
and
xchg
fadd
push
out
sbb
roll
jns
out
pop
in
mov
test
outsl
outsl
hlt
pop
loope
jl
jbe
jbe
aam
incl
ret
adc
sti
stos
outsl
imul
dec
roll
pop
insl
call
jmp
mov
gs
stos
add
repnz
arpl
xchg
xor
cltd
mov
repz
xor
subb
dec
xchg
jae
inc
sub
clc
adc
dec
jmp
test
cmp
cld
icebp
call
arpl
ficoms
xor
xchg
mov
sbb
js
inc
dec
jmp
out
aas
xchg
fnstenv
pop
pop
mov
and
in
aaa
test
or
push
pop
call
pop
dec
and
bnd
xchg
add
xchg
jge
loope
imul
nop
aam
xor
jae
les
pop
movsl
filds
push
sub
fsubp
ret
push
inc
sbb
int3
mov
jb
mov
add
push
pop
data16
or
mov
xchg
pusha
sub
push
cwtl
mov
addr16
xchg
cmpsl
jbe
cwtl
insl
ss
lahf
into
mov
cs
leave
jmp
lahf
jne
pusha
mov
mov
push
cltd
mov
mov
xchg
loopne
sbb
shl
and
aaa
xchg
lock
xor
sub
lds
paddusw
cmpsl
ja
push
dec
sbb
ret
outsb
bound
aaa
fisttps
nop
push
sub
lods
lea
adc
or
fsubrl
xchg
aaa
hlt
leave
push
mov
repnz
lret
ljmp
mov
sub
fsubrl
loope
sub
dec
xchg
cmpsb
sub
pushf
jae
mov
jae
arpl
mov
scas
add
ss
lods
int
out
sbb
xchg
sub
push
movsb
sbb
push
scas
adc
insb
es
sbb
mov
cmp
jo
dec
rorl
push
mov
ds
iret
sbb
jns
dec
lea
add
cld
cmp
lock
stos
out
ret
sbb
and
pop
fdivl
sbbl
dec
out
mov
mov
imul
xchg
sub
pop
cld
arpl
lahf
aad
sub
sti
rcrb
daa
in
stos
jecxz
lds
sbb
cli
stos
mov
outsb
push
cltd
mov
mov
mov
pop
and
bound
xor
xor
inc
cwtl
ficoml
pop
stos
jo
mov
jnp
rcr
and
std
fsubrs
popa
pusha
jo
outsl
mov
lods
xchg
xchg
jne
jae
lea
out
mov
mov
or
imul
arpl
in
add
mov
mov
or
icebp
pop
mov
sub
test
push
mov
fists
or
dec
mov
jno
xor
mov
dec
les
jae
vandnpd
dec
dec
push
mov
nop
pop
in
push
jb
xor
jno
test
les
add
xchg
subl
sub
inc
xchg
sbb
and
int3
insl
xchg
out
or
mov
jle
jg
std
inc
cmpsb
cmp
sub
fbld
sbb
mov
mov
loop
xchg
in
inc
xchg
pop
lds
mov
jb
or
gs
xor
std
mov
xor
fstpt
in
mov
out
cwtl
dec
and
adcl
fs
xchg
imul
pcmpeqw
adc
dec
stc
pop
adc
jl
or
lock
or
or
xchg
jb
aam
or
ss
mov
bound
popf
imul
movsb
out
mov
add
xor
sub
push
dec
daa
shld
jne
xchg
push
push
lds
out
cwtl
dec
aas
cs
lock
sub
xchg
mov
add
ret
test
cmc
xor
shll
push
hlt
imulb
test
sub
sub
dec
adc
pop
test
dec
psllw
mov
imul
fidivrs
jp
push
lea
inc
xchg
fdivl
daa
lea
xlat
mov
notb
or
pop
fs
jecxz
push
fld
negl
xor
jge
filds
scas
cmc
push
fstpl
jp
cmovnp
or
xor
sub
out
xor
nop
mov
jp
mov
pop
imul
or
fidivs
shlb
lea
jg
repnz
sbb
jbe
les
popa
es
in
es
or
out
sbb
negl
in
test
fisttps
rorl
cmp
jb
sub
loopne
enter
pushf
mov
add
lret
cwtl
insb
aad
jnp
sti
jbe
int3
shll
movsl
movsb
shrl
lods
push
push
mov
fnstcw
mov
movsl
mov
outsl
sub
js
jge
mov
and
jge
repz
jmp
out
adc
xor
ss
or
mov
add
sub
daa
adc
psubw
xchg
shll
sarb
xchg
pop
push
mov
fwait
push
lods
and
sub
and
shlb
mov
popf
push
insb
xor
push
jae
jb
push
mov
int3
dec
mov
ds
xchg
orb
je
lds
add
jo
and
loopne
imul
inc
add
sahf
arpl
jbe
test
adc
pop
mov
test
out
adc
fimuls
jmp
fs
fsub
ret
dec
sbb
imul
sub
dec
inc
pushf
out
sahf
insb
or
mov
pop
cmp
rcll
jge
xor
xlat
mov
xchg
sbbl
push
fiaddl
push
lods
nop
out
cmpsl
fnstsw
test
adc
fbstp
jg
and
pop
lods
ret
add
or
mov
xchg
jae
mov
ja
stos
xor
lret
icebp
fnstenv
sub
pop
xchg
xorl
fwait
into
sbb
call
push
sub
cli
out
sbb
out
int3
shrb
fldenv
mov
xchg
push
dec
cmpsl
repnz
jmp
push
push
jmp
loopne
xor
sbb
add
sbb
imull
je
call
push
mov
mov
bound
in
sbb
dec
pop
int3
cmpsl
subb
and
shr
mov
lds
jb
mov
ja
outsb
mov
mov
xlat
rcll
sti
out
mov
or
xchg
mov
pop
shlb
and
js
aaa
push
cmp
fs
popl
sbb
insl
jae
mov
loope
push
jp
lret
sub
adc
loop
bound
and
or
test
test
pusha
rclb
mov
jb
xchg
dec
enter
mov
pusha
rclb
jnp
out
dec
fstl
sub
fldl2e
shll
sub
into
dec
imul
jnp
mov
push
xchg
pop
imul
sub
sub
shrl
movsb
jecxz
pusha
enter
jmp
into
testb
out
jecxz
pop
push
push
inc
sbbb
sarb
adc
scas
xchg
pop
xor
rorb
cmp
clc
stos
push
fstpt
pusha
gs
mov
jae
push
cmp
loop
add
js
ds
neg
xor
jp
pop
sub
shlb
movsl
and
fbld
mov
stos
iret
xchg
rcpps
xchg
xor
in
push
fnstsw
enter
add
packuswb
ss
adc
xor
loope
mov
sahf
incl
jle
fiaddl
mov
mov
dec
sbb
dec
sub
outsl
mov
mov
dec
sub
call
jl
scas
cmp
cmp
mov
cmc
mov
sbb
xchg
jo
sub
xchg
in
popa
outsl
imul
aaa
roll
leave
and
mov
cwtl
xchg
push
jns
sar
push
cmp
lock
or
push
movsl
push
pop
test
push
xor
nop
imul
fidivrl
out
xor
stos
pop
pop
mov
sub
cmc
hlt
popa
push
xchg
mov
hlt
push
dec
push
lods
push
loop
insb
push
xor
repnz
sbb
les
test
jnp
adc
iret
fs
icebp
xor
push
bound
xor
cmpsl
and
pop
fnstsw
out
les
mov
sub
pop
popf
cli
ret
lds
mov
inc
adc
popf
imul
xor
das
nop
cmp
dec
and
in
sub
bound
aad
in
insl
push
sub
add
popf
or
aad
mov
mov
test
in
or
aaa
pushl
fsub
out
call
fistl
inc
and
pop
rorl
js
loop
pusha
or
test
push
sub
inc
in
mov
sub
aad
cmc
sbb
andb
aam
icebp
dec
mov
xchg
mov
pop
mov
scas
in
add
and
dec
fidivrs
sbb
xchg
cmc
out
sbb
or
mov
fdivl
ret
ljmp
mov
mov
push
pushf
hlt
pop
lods
jbe
jg
mov
sti
loopne
mov
jmp
out
cmp
hlt
sub
iret
sub
xor
addb
jne
dec
fwait
repz
hlt
into
xchg
dec
cmp
push
add
shl
jle
lods
adc
decl
movsl
mov
jbe
stos
jmp
fildl
jmp
ret
mov
int
fs
adc
pop
mov
ud0
clc
sub
jp
ret
inc
lahf
imul
pop
adc
and
push
aaa
sbb
or
xchg
xor
ja
daa
adc
adc
aad
lret
andl
jb
sbb
ret
push
mov
mov
loopne
into
lods
nop
xchg
int3
fwait
lcall
loop
mov
fs
pushf
ficoms
mov
rcrb
or
mov
lahf
in
pop
divl
mov
leave
cmpsb
mov
imul
push
or
hlt
mov
push
pushf
push
call
rorl
mov
mov
push
jne
cmp
sub
pop
pop
cs
jb
cmp
insb
xor
push
xchg
inc
pop
cld
mov
not
lcall
stc
sbb
cmp
icebp
cmp
jmp
or
lea
jp
testb
bound
pop
movsb
and
and
sub
repnz
push
mov
pop
popf
sbb
mov
ss
sbb
add
cmpsl
addr16
enter
movsl
mov
lret
loopne
jae
mov
orb
in
push
jmp
and
mov
fs
pushf
addr16
lock
jmp
xor
mov
pop
dec
inc
pop
inc
loopne
mov
mov
and
mov
adc
mov
es
pop
push
lods
inc
xor
popl
ja
insb
testl
negb
lret
push
xchg
in
inc
mov
stc
icebp
mov
mov
or
std
fnsave
movb
popa
jle
insb
push
adc
xor
cli
pop
inc
loope
xor
es
jae
xchg
test
cmc
popa
mov
fwait
and
shlb
cltd
jp
movsb
clc
push
push
addb
cbtw
mov
lods
popa
push
fwait
mov
test
ss
gs
aas
xor
ds
xchg
into
cli
out
je
push
push
fs
pop
add
sahf
jns
mov
gs
pushf
test
test
les
sub
and
in
scas
enter
popa
push
pop
aam
jl
jmp
cld
rcrl
aad
repnz
shlb
mov
aaa
dec
cmpsl
ds
notl
ds
mov
sbb
cwtl
jl
mov
pop
je
and
mov
mov
jbe
adc
sbb
icebp
loopne
cmp
test
pusha
test
fcomip
mov
add
mov
mov
test
iret
outsl
movsl
add
adc
sahf
lods
xchg
jae
xchg
xor
lods
push
cli
rolb
xor
mov
mov
clc
cld
cmc
pop
pop
xchg
push
lahf
fs
xchg
pop
dec
jp
pop
jp
sub
jb
out
clc
repnz
or
iret
and
out
push
cmpsl
hlt
pop
xchg
icebp
pop
mov
aad
or
icebp
ds
les
push
in
jmp
cmp
push
and
pop
not
inc
call
mov
add
icebp
adc
sub
stos
inc
mov
adc
mov
and
clc
aad
jns
sbb
aas
imul
cltd
jbe
mov
out
add
stc
pop
aam
xor
das
inc
pop
mov
addr16
in
adc
or
adc
mov
lds
shl
and
cmp
lds
add
iret
or
jb
das
lcall
mov
mov
mov
lock
rclb
aad
scas
xchg
ja
pop
dec
mov
out
int3
sub
aam
push
mov
jp
out
repz
add
cmp
adc
sbb
inc
fisubl
daa
jl
in
or
lret
and
inc
js
sub
or
les
xchg
pop
enter
adc
pop
and
inc
aad
inc
fs
popf
imul
bound
js
jecxz
fwait
jb
les
mov
inc
dec
cltd
lret
cli
out
fisttpl
sahf
dec
jge
ss
leave
inc
aam
int3
inc
xor
mov
adc
xchg
lret
pop
es
in
xchg
sbb
inc
cmpsb
mov
push
int
movsb
mov
dec
push
aam
cwtl
jb
shlb
sti
jmp
scas
jae
and
dec
xor
mov
dec
cmpsb
cmc
pop
sti
test
js
push
das
mov
ret
fistpl
int
rcrl
insl
push
rcl
and
sub
test
decb
dec
or
int3
mov
outsb
out
and
xchg
add
sti
loope
dec
jne
pop
dec
add
or
dec
les
or
mov
mov
xor
lea
lds
xor
dec
pop
pushf
xor
orb
cld
or
daa
mov
sbb
and
lret
xchg
xchg
jp
loope
lahf
test
mov
pop
inc
or
dec
mov
and
fbld
dec
neg
mov
sub
fs
out
jge,pn
pop
decl
mov
test
xorb
cmpsb
sti
fbld
icebp
les
fdivrp
add
out
ret
inc
and
loopne
pushf
negl
pop
sti
jmp
scas
jae
and
or
stc
out
sbb
fisttpll
mov
xor
lret
inc
cmp
cmp
sahf
sbbb
fwait
mov
xchg
cld
ds
popa
and
inc
jp
mov
mov
lods
scas
scas
xchg
roll
xchg
push
mov
inc
scas
addr16
push
shrl
es
fldt
fadd
movsl
movsb
loopne
xor
ds
scas
and
fs
sbb
outsl
popa
inc
daa
or
ror
lahf
subl
icebp
fldcw
jns
push
sti
sub
xor
mov
push
push
rorb
clc
fwait
push
ds
enter
adcl
enter
cltd
dec
adc
push
icebp
sbb
jo
aas
inc
jmp
iret
pop
imul
inc
push
outsl
shrb
fcompl
fistps
out
cli
cmpsb
insl
leave
leave
fstpl
lahf
cmc
add
xchg
pop
bswap
adc
incb
jb
push
shlb
imulb
mov
inc
adc
mov
push
pusha
mov
ljmp
inc
rcll
test
outsl
adc
incl
jle
test
inc
add
fwait
inc
fwait
insb
mov
sbb
std
or
jmp
test
or
pop
hlt
fsubs
popf
add
cmpl
ljmp
and
cmp
jo
fmuls
cld
xor
mov
pop
xor
movsl
popf
je
lods
mov
xchg
idivb
sbb
ss
push
ffreep
pop
or
call
lret
inc
adc
arpl
cltd
jbe
icebp
imul
lods
lock
loop
or
iret
cwtl
pop
sub
push
lock
mov
push
pop
bound
int
repnz
lea
subb
mov
mov
jo
nop
out
mov
sbb
jle
ret
shl
dec
testb
xchg
dec
push
mov
xor
sbb
iret
flds
arpl
sbb
dec
jb
bswap
xor
adc
jae
push
in
cwtl
dec
jg
fwait
xchg
lds
add
pop
add
mov
adcl
fnstenv
cmp
xchg
cs
cmova
cld
data16
imul
jns
xlat
hlt
mov
in
mov
dec
les
jno
dec
mov
inc
push
fsts
dec
and
sbb
fsubs
xchg
neg
push
inc
sahf
lock
aaa
insb
nop
sarb
fwait
scas
inc
shlb
sbb
out
sub
out
mov
cwtl
fisubrl
sbbb
adcb
cs
cmp
jmp
jmp
or
cs
xor
jns
adc
add
test
adc
mov
into
pop
mov
enter
add
loopne
es
jle
pop
stos
ss
dec
push
cwtl
out
pop
push
xchg
lods
test
jp
inc
xor
push
fstps
ret
jb
imul
mov
mov
mov
or
cmp
jecxz
jge
lahf
imul
push
and
sbb
lods
addl
test
stc
sahf
mov
loope
sbb
lret
mov
jb
fwait
rorb
loope
ret
mov
adc
push
ret
and
in
adc
pop
xor
or
adc
xorl
jmp
test
and
and
hlt
lock
faddp
pop
cmp
cli
jmp
add
and
dec
push
fucomip
sub
in
movhps
insb
mov
push
aaa
and
leave
leave
mov
inc
and
push
cmc
or
fbstp
gs
scas
mov
xor
sahf
imul
lcall
jmp
inc
adc
aam
mov
push
pop
push
cmp
add
fwait
outsl
daa
or
inc
dec
jo
pop
cmp
adc
mov
inc
push
es
ja
pop
iret
push
push
dec
or
roll
adc
xorl
or
in
cltd
sub
cmp
rorb
out
jns
jmp
pop
fwait
pop
ret
adc
sub
mov
fs
xor
into
xchg
add
xchg
push
lea
bound
pop
pop
dec
cltd
mov
je
leave
xor
ja
jmp
ljmp
dec
add
inc
cmpb
cmc
fsubrl
jns,pn
mov
mov
enter
fbstp
and
inc
scas
push
imul
adc
nop
fisubrs
jmp
or
pushf
sub
lret
faddl
jg
test
inc
scas
adc
mov
out
nop
aaa
ret
mov
inc
and
push
lahf
dec
filds
jmp
repnz
sbb
in
pop
xchg
sub
jb
adc
inc
xchg
mov
roll
popa
fs
push
test
mov
aam
inc
or
mov
mov
pop
or
test
and
xchg
insb
cli
xchg
dec
imul
mov
insb
add
xor
mov
cltd
pop
lcall
js
mov
lock
mov
jle
cmpsb
lds
sahf
scas
lds
in
sub
push
cld
shr
bound
jge
data16
es
das
push
mov
xchg
loopne
adc
cltd
adcl
sub
jne
outsl
int
push
fwait
and
fisubrs
or
sub
add
adc
sar
and
cltd
aas
sbbb
jnp
mov
cli
movsl
cmp
imul
dec
xchg
cmpsb
pusha
stc
and
xor
xor
push
cmpsl
in
hlt
stc
aam
clc
push
mov
mov
fistps
dec
ret
insb
out
mov
repnz
into
pop
push
add
cmpsb
cld
outsb
test
jne
adc
xchg
cmp
fsubrs
stos
es
mov
push
mov
push
push
lods
popf
cld
adc
xor
scas
ja
xchg
adc
loope
inc
adcb
jl
insl
test
push
icebp
repnz
lock
pop
nop
cli
pinsrw
ret
adc
dec
mov
movsb
xchg
xchg
insb
mov
mov
inc
loope
sahf
ja
mov
outsl
jmp
daa
ret
jbe
pop
test
sub
jl
imul
das
mov
imul
xchg
mov
fdivrl
or
repnz
cmpb
xor
nop
fnstcw
mov
cli
sti
into
inc
leave
inc
ficoms
fisttps
aad
and
mov
and
repnz
cltd
push
jnp
jne
das
addr16
repz
cmpsb
out
adc
loop
out
inc
cli
ljmp
add
sub
push
scas
adcb
lea
xor
mov
mov
dec
jbe
das
lcall
imul
popf
push
dec
in
or
in
sub
or
xor
cltd
jge
push
cmp
fadds
or
lods
mov
push
clc
inc
mov
in
pop
fs
xchg
rolb
jecxz
pop
aas
fcomp
add
dec
stc
mov
fldl
xor
push
mov
sbb
fisubrl
fisttpl
inc
loope
fldt
xchg
rcrl
cs
scas
lcall
cmpsl
inc
lahf
std
push
pop
adc
aam
pop
mov
xor
push
addr16
mov
xor
aam
mov
dec
sbb
call
push
cmp
scas
enter
xor
loop
mov
loop
add
cmp
ja
sub
in
test
lret
xchg
cld
dec
std
jecxz
shll
rol
jmp
inc
outsb
mov
enter
pop
xchg
adc
mov
mov
cmp
adc
and
pop
imull
xchg
sbb
mov
or
das
cmp
outsb
xor
aam
call
arpl
ds
inc
xchg
jo
not
and
xchg
sti
mov
pop
in
sub
je
cld
push
test
rcr
inc
rclb
scas
push
cmc
xchg
inc
ret
cmpsb
rclb
jl
in
jmp
lods
cwtl
push
test
outsl
int
cli
inc
dec
or
outsl
adc
xchg
push
jae
xchg
aam
push
fs
ss
cli
xlat
sub
sti
xadd
jns
into
mov
outsb
lods
push
pop
adc
add
andb
dec
mov
xchg
cmpsl
int3
inc
scas
addb
push
adc
jbe
lcall
mov
imul
js
xor
jg
std
daa
lcall
lcall
cli
fistpll
mov
mov
inc
sahf
xchg
push
sbb
pushf
dec
lods
push
je
shl
test
push
lods
xchg
lahf
lods
test
pop
into
push
inc
clc
xor
movsl
cmp
lods
mov
mov
in
sub
movsb
mov
imul
test
lea
push
push
jnp
aad
cmp
dec
mov
inc
icebp
dec
jmp
fdivrs
repnz
loopne
add
add
xor
jnp
mov
pop
flds
clc
icebp
roll
stc
add
push
mov
push
std
or
mov
lock
call
fldlg2
or
scas
push
mov
ja
in
mov
adc
cli
dec
enter
xchg
loop
adc
or
xchg
xchg
lods
sub
sbb
addr16
add
in
lahf
outsb
xor
les
or
cmp
gs
cmpsl
sub
arpl
add
into
sub
add
mov
sbb
dec
es
dec
in
pop
cwtl
pop
pushf
shll
mov
xor
inc
xchg
addr16
test
dec
and
sahf
jne
dec
mov
push
add
pusha
cs
psubb
push
std
test
sbb
lock
sbb
mov
in
loopne
scas
add
in
jp
jo
sub
dec
dec
lds
cmp
dec
mov
xor
gs
cltd
jl
adc
sub
sbb
cmp
mov
inc
pop
test
push
in
and
jno
xor
hlt
dec
lret
sbb
aas
mov
cmp
mov
jb
xor
mov
mov
mov
push
xchg
or
push
sbb
sub
push
xor
push
jmp
popf
push
aad
daa
into
adc
or
les
inc
aad
imulb
cld
xchg
cmp
jp
rol
scas
cmpsb
ret
pop
loopne
and
cmp
pop
or
inc
test
xchg
aad
js
mov
ss
aas
jmp
in
xor
lret
shrl
hlt
bound
adc
inc
aaa
pop
icebp
mov
jl
xchg
cltd
in
sub
mov
push
mov
mov
aad
int3
or
mov
cmc
cmpsl
pop
cmpsl
adc
mov
or
sub
inc
xchg
popa
push
std
pop
pushf
sub
mov
push
outsb
dec
mov
inc
ss
mov
jne
dec
sub
mov
or
in
lret
loop
jp
and
mov
sub
xor
or
pop
insb
je
scas
xor
xchg
jmp
sbbl
repz
std
je
and
lds
xchg
push
movsb
call
repz
outsb
in
cli
dec
sbb
mov
sbb
push
test
pop
xor
aad
jmp
add
js
jl
xor
sub
idivl
pop
push
or
sahf
inc
cmp
in
dec
fst
test
fstl
nop
xlat
inc
popf
xchg
popa
andl
adc
cmpsb
dec
xchg
fnstcw
fcompp
cmp
pop
mov
outsl
jmp
and
shll
loopne
scas
mov
dec
int
test
dec
or
jne
pop
sbb
int
pop
xchg
dec
mov
shll
dec
xchg
outsb
cmp
aas
movsl
out
cmp
pop
int
lods
fcoms
cld
inc
daa
mov
int
orl
scas
sbb
inc
xor
fnstcw
sbb
push
cltd
addl
jp
sbb
mov
mov
inc
cmp
loope
or
cli
mov
push
test
push
and
shrl
push
lret
mov
cmp
idivl
adc
mov
adc
jl
lret
sub
fnstcw
repnz
cmpsl
dec
adc
mov
dec
je
cmc
fdivrl
xchg
int
mov
push
inc
mov
or
cs
in
mov
mov
xlat
pop
sbb
mov
adc
aaa
mov
push
cmpsb
faddl
inc
mov
fs
xor
cmp
arpl
push
daa
cli
out
rcrl
push
arpl
cmp
and
add
xchg
addb
mov
dec
cli
xchg
and
stc
stos
mov
jbe
add
and
jns
arpl
lods
jo
pop
pop
ret
mov
dec
and
out
in
mov
xchg
std
fadds
cmp
dec
ds
jg
popa
popf
jp
jp
sbb
stos
jno
lahf
push
fwait
jmp
lcall
out
rol
push
movsl
inc
sub
out
sti
sub
cmp
mov
enter
mov
bound
inc
pminub
bound
movsl
adc
mov
pop
dec
adc
stos
xor
sbb
sbb
inc
ss
mov
and
jg
inc
dec
shrl
pop
push
sahf
repz
lcall
mov
jl
mov
push
pop
or
mov
jl
dec
xor
cmp
das
out
test
pop
or
mov
inc
push
xor
push
cmp
push
cmp
push
inc
sbb
and
mov
lods
or
jne
in
mov
push
dec
gs
ficomps
aam
xor
scas
or
sub
jbe
dec
test
scas
xor
mov
xorl
or
out
or
cmpsl
xlat
dec
push
testb
call
mov
out
push
not
cmp
in
int
mov
dec
popa
dec
lods
and
cltd
pop
mov
imul
insl
test
pop
into
out
sub
xchg
dec
xchg
pop
mov
add
mov
ja
fs
and
xor
lret
jb
hlt
mov
jnp
pop
sti
sti
mov
push
mov
mov
out
cmc
mov
xor
out
lea
add
nop
push
lret
jg
gs
sbb
jb
mov
das
sub
movsl
jbe
mov
xchg
lret
lods
adc
push
repnz
sti
clc
add
call
mov
cmp
cmp
call
div
daa
sbb
lds
inc
pop
hlt
inc
loop
fs
mov
pop
push
and
stc
sbb
push
push
sbb
inc
sahf
and
movsl
push
add
add
xchg
js
cmp
sbb
les
in
movsb
jmp
jl
sar
negl
xchg
dec
loop
testl
sahf
rclb
or
push
jo
pop
insl
jb
add
cmpsl
xchg
jmp
addr16
movsb
jno
mov
mov
cmpl
outsb
inc
jle
cwtl
jg
imul
mov
gs
inc
sub
loop
lods
subb
into
xadd
aas
jecxz
jae,pn
test
pop
inc
addr16
lret
cmp
add
mov
mov
adc
cld
add
push
pushf
cmp
ret
jg
mov
xor
or
mov
add
cmc
and
sbb
push
je
mov
jge
ret
sti
or
icebp
push
mov
sub
enter
push
or
cmc
testl
lock
mov
jo
dec
push
xlat
fisttps
mov
movsb
test
mov
fs
test
sti
hlt
lods
cmp
mov
fidivl
lods
adcl
xchg
lods
jae
inc
iret
dec
hlt
inc
jg
in
and
sbb
pop
and
or
pushf
inc
imull
cwtl
xchg
push
cmp
mov
addr16
idivl
out
mov
push
addr16
clc
dec
cs
daa
xor
xor
ret
mov
mov
and
lret
or
shll
sbb
cs
cmpsb
xor
mov
xchg
push
in
push
mov
popa
int3
or
mov
fldcw
add
lahf
jo
push
stos
xor
in
add
mov
lcall
mov
push
and
sbb
loope
shlb
addl
xor
sbb
stos
out
addb
push
movsl
jge
adc
in
mov
push
fisubrl
in
lds
sar
addr16
mov
js
test
sbb
push
es
cmpsl
mov
les
outsl
mov
sbb
ljmp
push
in
pop
lret
cmp
stos
add
adc
mov
mov
sub
pop
sti
faddl
pcmpeqb
add
mov
jge
adc
mov
mov
pop
scas
and
xor
sti
into
mov
sub
das
pop
icebp
int3
push
fstpt
dec
pop
stos
mov
lcall
jp
fstpl
je
fildll
mov
in
loopne
imul
cmp
out
mov
lods
push
mov
fildll
jno
sbb
mov
stc
andl
stos
sbb
in
subb
pminsw
cmc
adc
mov
test
mov
insb
bound
sbb
inc
and
xchg
mov
inc
xor
mov
xchg
sbb
xor
fidivrl
push
lea
cwtl
jnp
dec
and
addb
mov
ljmp
xchg
fadd
push
roll
dec
cmpsl
in
aas
ret
stos
xchg
in
push
cs
mov
sbb
out
lcall
movsb
mov
loop
scas
lcall
repz
clc
loop
imul
addr16
sarb
jp
mov
gs
pusha
mov
mov
sbb
les
out
dec
pushf
imul
xor
pusha
xor
scas
fwait
push
das
lret
cmp
pop
iret
dec
movsl
adc
cmp
cmp
iret
xor
jl
inc
xchg
jbe
test
mov
add
add
aam
xor
outsl
inc
cmpsb
pop
add
cmpb
pop
mov
inc
jl
lcall
add
in
cmp
das
aam
mov
rorl
mov
sarb
and
std
dec
mov
mov
in
lret
bound
sub
jno
and
lds
mov
movsl
lret
cmpsl
fisubrl
xor
out
aad
jge
and
testb
dec
ret
mov
adc
repnz
loop
xchg
out
push
ret
and
cmp
mov
sub
int3
sub
sbb
push
addb
lcall
jns
sbb
or
mov
loop
xchg
js
and
out
shlb
dec
sub
in
pusha
stos
rcl
aad
adc
lods
adc
repz
adc
out
mov
add
fdivr
sbb
and
mov
addr16
add
or
inc
adc
pop
pushf
adc
bound
sub
fsubrs
add
add
pop
clc
pop
cmp
addl
fwait
cmp
adc
lock
movsl
adc
add
xchg
xor
ret
mov
mov
inc
mov
out
ret
mov
mov
xchg
outsb
jb
xchg
out
aad
std
test
aam
xor
int
mov
dec
and
xchg
pop
ljmp
xorb
lods
jnp
jns
ds
aas
jno
pop
in
jbe
or
ja
mov
add
mov
cs
add
fisubs
xor
testl
xchg
les
xlat
call
ja
pop
mov
ret
mov
xlat
sahf
adcl
imul
jae
and
rcrb
jg
sub
dec
adc
cltd
out
bound
sub
lret
out
jmp
ret
sub
or
cmp
cmc
shl
sbb
js
cmp
mov
and
adc
sbb
jl
scas
insl
fsubl
stc
fldenv
mov
test
dec
sbb
jecxz
pop
subl
or
testl
pop
xchg
lock
sub
loope
and
sbb
in
xlat
test
inc
outsl
in
adcl
outsb
rclb
outsl
loop
js
testl
icebp
inc
repnz
pushf
popa
pop
popf
je
jnp
pushw
pop
hlt
push
mov
cmc
and
outsb
scas
xor
stos
stc
pop
xchg
jnp
xor
dec
dec
inc
repz
jecxz
cmp
aam
insl
add
push
movsb
fs
inc
loope
aam
pop
mov
push
and
shrb
inc
xchg
adc
bnd
inc
and
scas
inc
and
inc
cs
or
pop
aaa
mov
sbb
in
mov
xor
xor
add
sub
pop
frstor
inc
lods
add
lock
dec
adc
and
xchg
jns
call
cmpsl
mov
stc
inc
ret
sbb
pop
sbb
lock
or
push
fcmovnu
pop
sarb
loope
or
mov
imul
sbb
enter
jo
push
lods
pop
and
pop
dec
rcll
andb
lods
sti
push
scas
cmp
hlt
and
dec
inc
call
mov
sbb
test
aas
mov
mov
lret
mov
xor
repz
sbb
push
es
cli
inc
movsl
lahf
mov
and
mov
jbe
roll
sti
shl
add
xor
test
jmp
dec
mov
jecxz
jne
mov
das
loop
mov
roll
sti
les
inc
mov
popa
mov
ss
inc
data16
jge
aam
outsl
add
imul
imul
ret
int3
popf
jp
mov
shll
ret
daa
inc
adc
jnp
bound
push
nop
adc
add
fsub
jae
lret
in
xlat
ret
and
mov
shll
push
and
aaa
ja
xor
cs
sti
mov
push
sub
int
mov
xor
mov
lock
fwait
jp
in
sub
dec
repnz
arpl
and
aas
call
cmpsl
mov
es
ret
insb
pusha
dec
xor
repnz
mov
fidivs
pushf
pop
cmp
cmp
cmp
aaa
push
mov
subb
adc
icebp
lock
mov
push
dec
sub
imul
jnp
rcrb
ret
mov
pushf
mov
mov
pop
xor
mov
ret
push
imul
inc
filds
orl
insb
out
lcall
fidivrl
sbbb
js
fsubs
mov
aas
add
push
jp
dec
stos
icebp
aas
jno
jnp
jo
sub
jb
frstor
mov
iret
jmp
dec
sub
shrl
dec
jecxz
addr16
repnz
sti
dec
jnp
dec
sub
jns
es
fstps
out
lea
cmp
insb
cmpsl
push
sarl
pushf
mov
ljmp
cli
cmp
xlat
popf
outsb
ret
aam
pop
rcrb
in
xorb
fiaddl
out
mov
jnp
insb
scas
push
sub
stos
pop
cld
jmp
sbb
loop
push
sbb
data16
sub
cmpsb
jge
add
pop
push
sub
in
ret
pop
lods
add
add
aaa
inc
mov
lods
add
cmp
pop
mov
or
loop
jnp
cmp
mov
sti
test
sub
es
sbb
sbb
cs
mov
shll
and
sti
push
addr16
aam
stos
cmc
insb
in
mov
leave
movsl
dec
sub
imul
mov
orb
aaa
rcrl
inc
mov
in
mov
aaa
add
pusha
adc
push
shll
mov
cmp
call
imul
icebp
aam
out
int
and
jae
adc
bound
cs
ret
inc
gs
dec
jp
aam
adc
cli
outsb
lret
mov
mov
ljmp
jmp
or
mov
dec
cli
xor
inc
cltd
xor
test
lahf
pop
mov
push
and
mov
sbb
imul
mov
les
sub
dec
or
cs
int3
cmp
lods
push
into
sbb
ret
push
imul
mov
in
leave
aam
xchg
mov
jmp
mov
xlat
cwtl
pop
xor
xor
lea
sahf
out
push
in
aam
xchg
je
testl
mov
push
add
mov
xchg
pop
jne
sahf
fiaddl
in
fcomps
jp
xor
sbb
je
jl
or
adc
stos
imul
jle
push
jb
shl
fimull
daa
pop
insl
fildl
clc
imull
dec
lea
cmc
pop
sub
jg
std
or
cmp
inc
movsl
sbb
aam
push
xchg
ret
dec
ret
xchg
lcall
xor
jg
mov
add
push
sub
inc
mov
jl
sub
push
movsb
jno
and
xor
inc
aam
mov
pusha
push
mov
xlat
push
stos
gs
ss
pop
test
mov
add
mov
and
dec
or
mov
ret
pushf
mov
out
add
push
cmp
inc
xor
cmpsb
fiaddl
cmc
fadd
sbb
loopne
pop
lods
insl
mov
orb
xchg
cmp
pushf
out
add
out
push
pop
push
sbb
mov
ret
aaa
or
fiadds
pop
dec
sub
ljmp
and
gs
mov
bound
pop
mov
sub
popa
dec
cmp
das
adc
jecxz
mov
add
lock
pushf
add
cmp
iret
out
pop
or
stc
cmpb
push
leave
mov
lea
jmp
add
xchg
out
add
jbe
mov
inc
xchg
xlat
bound
jnp
jl
aaa
mov
and
movsl
out
das
sti
inc
xchg
add
dec
sbb
sub
mov
jb
or
adc
adc
mov
wrmsr
pop
mov
xchg
sbb
lds
or
testl
pusha
add
xchg
pop
mov
aad
push
icebp
lahf
add
cmp
jmp
call
roll
or
sub
orl
repz
jbe
jbe
jne
jo
mov
xlat
out
call
flds
adc
ficomps
xor
add
test
rclb
push
enter
sub
mov
xchg
out
inc
jle
sub
lock
nop
push
adc
ljmp
cld
jg
add
repz
sub
lock
or
pop
mov
xor
je
jnp
mov
sbb
stc
test
sarl
pop
pop
mov
mov
add
lret
fs
mov
loope
scas
popf
inc
jne
push
pop
test
sarb
or
stos
pop
mov
dec
std
ret
clc
dec
repz
sub
cmpl
addl
jecxz
int
test
call
fidivrs
shl
jae
push
or
lock
out
push
mov
mov
and
sbb
call
scas
inc
mov
in
mov
ja
mov
ljmp
imul
mov
cmpb
icebp
sbb
jb
sub
jns
rcrl
push
ret
pop
lea
or
lds
cwtl
hlt
push
mov
fsubrl
sbb
cmc
sbb
cmp
gs
jmp
arpl
jmp
fstpt
movsb
popa
push
test
clc
loop
jl
std
rclb
cmovo
xor
test
fists
mov
sbb
clc
int
mov
js
lods
cmp
inc
stc
mov
push
lds
pop
add
and
cli
inc
ret
outsl
pop
mov
and
ja
cmp
scas
or
add
lret
imul
mov
jae
inc
lret
adc
mov
mov
mov
int3
xor
stos
push
test
mov
push
lds
sub
std
sub
add
push
ja
sbb
inc
xor
mov
std
dec
test
push
jae
in
adc
sub
mov
shll
repz
test
insb
pushf
push
divl
in
and
or
push
cmpl
shrl
push
mov
out
xchg
add
and
clc
int
mov
cmp
jnp
popa
push
xor
fwait
jmp
xchg
lret
pop
adc
xchg
and
mov
loope
enter
push
adc
and
dec
or
adc
repnz
gs
insb
ja
jno
mov
scas
xchg
test
xor
call
ficompl
fildl
add
cmp
xorl
cld
mov
testb
mov
bound
cmp
movsl
sub
sub
inc
add
mov
pop
mov
addr16
cs
outsb
movsl
jb
imul
repz
jno
inc
cmp
aas
push
xlat
leave
mov
pop
inc
cs
mov
leave
mov
outsl
popa
shlb
movsl
inc
andl
in
pop
and
cmc
in
inc
imul
xor
fcompl
adc
out
lods
adc
mov
fisubrs
in
je
outsb
push
lods
cmc
pop
fst
jnp
mov
pop
inc
pop
jne
lods
unpcklps
pop
jnp
lahf
in
inc
mov
mov
inc
inc
and
cmp
aas
jl
movsb
out
lods
addr16
mov
cs
or
scas
or
mov
mov
cmp
lods
xor
xchg
call
cmp
fwait
outsl
and
push
daa
imul
int3
test
cmp
jge
mov
sahf
jae
cmp
mov
outsb
inc
and
arpl
call
aaa
pop
addb
in
test
in
push
shlw
cs
shlb
lcall
imul
jl
aas
push
jnp
ds
dec
sbb
gs
in
and
ja
leave
movsb
sbb
std
ret
cltd
mov
in
in
mov
push
scas
xlat
cmp
aad
out
scas
jl
stos
push
jl
outsb
mov
sub
xor
inc
mov
stos
jo
mov
inc
jbe
xchg
in
movl
sahf
fldt
in
insb
push
call
dec
mov
dec
add
pop
mov
and
mov
dec
adc
fcoms
add
in
mov
loopne
xor
pop
sub
dec
cmp
xor
inc
mov
push
sub
loope
cli
mov
mov
add
into
mov
cmp
mov
pop
pop
loop
cmp
test
push
jmp
stos
lahf
repz
adc
mov
mov
push
push
add
xchg
fnstenv
outsb
jge
inc
pop
adc
js
dec
bound
flds
outsl
ret
sub
js
and
fwait
dec
xchg
into
fldenv
enter
or
movsl
push
adc
adc
pop
test
cltd
stos
xor
add
repnz
mov
data16
popa
push
pop
xor
fs
mov
test
push
outsl
sub
or
fwait
ja
mov
mov
jge
mov
dec
out
mov
mov
stos
add
aam
cmp
mulb
bound
imul
jl
gs
cmp
pop
pop
fildll
lret
cmp
repz
out
xor
enter
jb
push
xor
or
pop
mov
je
inc
sahf
ror
mov
mov
and
inc
or
jecxz
mov
loopne
in
jg
xor
hlt
push
shll
sbb
add
insl
mov
inc
pop
adc
stos
xlat
xlat
inc
ffree
sbb
dec
fwait
in
push
inc
lock
in
push
scas
and
imul
jne
fistps
pop
mov
xchg
xor
and
sub
sub
out
pop
mov
flds
inc
out
shll
ja
imulb
mull
cmp
xlat
test
cwtl
jl
into
xor
loopne
xor
cli
fwait
adc
xchg
pop
sti
lock
pop
mov
sub
mov
fstpt
xchg
mov
jbe
inc
add
jnp
pop
loopne
int
or
addr16
ss
dec
stos
in
sub
add
out
inc
dec
inc
adc
lods
lcall
arpl
test
mov
gs
mov
mov
test
jae
addr16
cmp
sbb
out
movsb
dec
xchg
push
sub
push
push
sub
mov
xchg
add
out
xchg
push
stos
icebp
fnstsw
jmp
mov
adc
imul
inc
sbb
mov
daa
dec
cs
push
adc
aam
dec
lods
inc
xchg
jmp
mov
in
mov
or
fmull
mov
xchg
les
jbe
pusha
iret
repnz
xchg
fs
cmp
inc
xor
jmp
mov
cli
mov
mov
fcomi
adc
push
lock
jp
add
call
int
xlat
or
ljmp
xor
mov
xchg
sbb
sub
test
push
sub
xchg
cmp
imul
stos
call
jne
mov
cld
jecxz
mov
adc
fdivp
loopne
pop
or
push
or
loope
ficomps
int
or
mov
push
lock
inc
push
adc
call
add
mov
xchg
cli
push
push
mov
dec
das
cmp
inc
repz
jno
add
out
sub
scas
test
pop
pop
xchg
dec
sub
mov
mov
fstpt
dec
inc
out
jp
inc
push
std
adc
sub
flds
jmp
pop
in
jmp
sbb
dec
inc
or
inc
lahf
push
push
pop
mov
mov
sbb
and
dec
addl
je
sbb
popf
sub
xchg
lds
or
add
mov
pop
test
dec
and
rcrl
or
dec
adc
xchg
dec
xor
jmp
aam
out
fimull
cltd
int
loopne
ret
push
loopne
testl
push
xor
mov
test
mov
fidivrs
and
xchg
adc
xor
mov
cmp
mov
xchg
sar
aas
stos
cmp
inc
test
imul
cmp
xlat
repnz
xchg
lret
sbb
xchg
into
xor
leave
fs
je
mov
shrb
test
loopne
add
mov
xchg
pop
push
jg
imul
push
xor
shlb
popl
sti
push
xorl
fidivs
sarb
cs
push
fbstp
gs
aas
shrl
adc
rcrl
push
jb
outsl
je
in
stc
adc
inc
pop
mov
push
insb
rcll
clc
jl
iret
push
inc
and
in
adcb
push
notb
dec
inc
das
xchg
in
into
inc
into
idivl
mov
imul
into
jnp
mov
sbb
into
shl
add
or
and
dec
lods
imulb
add
add
neg
dec
roll
mov
aam
ds
int3
push
sbb
cli
sub
sbb
aad
sub
jle
and
out
mov
mov
inc
pop
repz
pop
outsb
jge
mov
add
shll
ds
push
mov
insb
idivl
mov
mov
xchg
ss
adc
or
mov
xor
push
mov
xchg
jbe
adc
fcomps
outsb
xor
stc
pop
jb
lock
ret
subb
cmpl
stc
rcll
cmpsl
dec
mov
adc
inc
pop
leave
ja
aad
jne
mov
and
stos
ret
add
addl
xchg
loopne
inc
push
push
dec
and
mov
dec
xchg
jbe
cmp
xor
pushf
xchg
pop
add
daa
repnz
out
call
inc
ds
ss
xchg
sbb
lds
push
cmp
sbb
and
xor
clc
xor
inc
jmp
rclb
mov
xchg
push
sub
mov
lret
lret
ljmp
xchg
and
icebp
aam
mov
cmpsb
in
loopne
jp
push
sub
push
inc
xor
fistpl
sub
outsb
sbb
es
push
add
aas
repz
jmp
or
mov
dec
iret
cmp
add
xor
ret
push
add
cwtl
jecxz
mov
stos
pop
into
je
das
push
ret
inc
lahf
cmpl
das
addr16
ss
cmp
ficomps
push
mov
dec
andb
shrl
cli
or
hlt
jecxz
ljmp
mov
push
setge
or
test
dec
rolb
jmp
sub
pop
or
jbe
inc
mov
addl
pop
dec
mov
cmp
jnp
lret
int
push
push
mov
imul
lds
test
rol
mov
ret
xlat
mov
and
notb
inc
inc
jge
cmp
and
inc
or
push
stos
jge
sbb
cmp
bound
into
sbb
sbbl
repz
inc
xchg
js
in
lds
add
sbb
adc
xor
sub
push
dec
scas
dec
int3
mov
es
push
xchg
ja
mov
fwait
and
leave
divl
sub
cmpsl
fnsave
push
and
push
cmp
pushf
addr16
xor
inc
or
aaa
mov
push
sub
das
mov
cmc
outsb
cmp
or
sub
outsb
xor
leave
sub
lods
mov
test
ffreep
xchg
fnstcw
xor
push
mov
inc
adc
and
lds
cmp
out
not
adc
movsl
jo
out
mov
inc
shrb
xor
shrb
push
push
sub
pop
sub
stc
clc
clc
pop
mov
imul
aas
cmpsl
movsb
add
lahf
out
mov
imul
cmp
scas
shll
xor
cmp
movl
pushf
setg
jnp
repnz
jb
cmp
ret
pop
aas
pushf
or
push
cmp
jns
push
sarb
popf
inc
push
lds
xor
xchg
icebp
pop
lods
or
mov
push
call
loopne
add
mov
mov
call
cmp
das
adc
lcall
dec
cmp
out
pop
add
cwtl
std
cmc
in
in
jbe
lock
sti
inc
into
and
fildl
sbb
inc
xor
sarl
sbb
push
mov
insl
test
jb
ficoml
sbb
sahf
xchg
xor
fisubrl
mov
add
mov
cmp
ss
cmc
into
fnstsw
movsl
pop
xchg
add
xchg
jecxz
mov
jo,pn
shrl
ds
mov
mov
addr16
mov
push
adc
lds
fbstp
out
jecxz
call
and
xchg
xchg
adc
mov
cmp
cmc
inc
jbe
cmp
or
mov
jo
dec
mov
lods
lock
rcll
jns
subb
les
cmp
dec
cli
inc
ss
mov
cmp
lods
insb
sub
mov
add
cli
push
and
jne
or
lds
scas
sub
sub
and
lcall
ds
cmc
jae
mov
mov
dec
mov
xlat
lret
push
inc
cwtl
jl
sub
sbb
jnp
je
or
ret
stos
mov
icebp
jbe
divl
or
sbb
or
mov
daa
inc
cltd
push
xor
mov
inc
adc
inc
dec
jo
sbb
icebp
and
sub
mov
ret
clc
mov
in
stos
insl
jo
gs
int
xchg
insl
mov
ja
mov
je
and
pop
enter
xchg
arpl
jmp
add
xor
fldcw
rcll
push
aam
ljmp
repnz
aaa
inc
mov
push
sub
dec
loopne
jbe
inc
pop
cmp
cwtl
cltd
mov
fwait
divl
sbb
pop
shrb
sbb
sub
rcr
add
xchg
lret
xor
stos
inc
repz
jo
or
movsb
xor
mov
pusha
cltd
pop
adc
pushf
xchg
sub
out
pop
aad
sub
pop
loope
sub
repnz
ret
sbb
cmpsb
jb
aas
fdivl
mov
sub
xor
fstpl
outsb
mov
mov
in
pop
xor
cltd
or
push
adc
cmp
shr
add
jno
popa
inc
push
popa
rcrb
cwtl
sbb
test
sub
push
dec
mov
xor
pop
xlat
xchg
mov
mov
imul
sbb
mov
inc
jp
popf
jb
xor
inc
xchg
ret
das
insl
cli
mov
daa
clc
pushf
shrb
call
add
xor
jbe
mov
jg
out
dec
sbb
out
scas
pop
pop
xchg
jo
xor
sbb
push
add
cmp
inc
loop
arpl
dec
mov
push
rcll
xchg
ret
add
or
aas
in
sub
mov
loop
mov
dec
push
fbstp
lock
inc
aad
mov
leave
fimull
mov
push
jnp
sarl
ret
xlat
mov
fcompl
gs
outsb
xchg
push
xchg
roll
fs
test
std
jns
arpl
or
rcrb
loopne
inc
xchg
loope
out
mov
fsubs
in
jnp
test
jle
lret
mov
int
jno
sub
and
das
popf
addb
lret
arpl
fsubrs
nop
cmc
ljmp
bound
int3
pushf
cmp
xcrypt-ecb
cmpsl
setg
jp
lahf
adc
add
jge
jbe
jle
bound
addr16
test
mov
testb
lods
mull
push
sub
pushl
lahf
lock
addb
mov
dec
adc
stc
lods
xor
daa
sbb
scas
cli
fiadds
dec
mov
fisubl
aam
movsb
pop
xchg
imul
xchg
xchg
leave
dec
leave
lret
out
and
mov
mov
bound
js
jmp
adc
jg
test
xchg
stos
mov
jbe
cmpsl
popf
test
pop
repz
xor
adc
mov
idivb
adc
pop
jmp
mov
shll
jnp
mov
aam
outsl
mov
iret
sub
pop
lcall
push
out
es
push
dec
xchg
fildl
call
cmp
pop
lods
mov
adc
out
xchg
jo
inc
and
fsubl
and
ffree
xchg
insl
dec
mov
jne
fisubrs
push
inc
lea
outsb
in
jb
je
scas
mov
test
insb
fucomip
pop
outsl
push
cli
push
sbb
cwtl
mov
mov
pop
xchg
push
hlt
cmp
mov
sbb
dec
jae
in
loopne
push
pop
movsl
cmp
inc
outsb
xabort
xchg
stos
shll
imul
mov
dec
in
int3
adc
xchg
jb
ds
shl
test
sub
stc
mov
loope
push
test
mov
es
jbe
imul
mov
cmpsl
lock
mov
shll
mov
xor
push
mov
or
imul
pop
imul
mov
sub
lock
fldcw
pop
jp
stc
out
mov
sub
popf
and
jecxz
movl
mov
fcmovbe
test
js
popf
xchg
insb
adc
aad
mov
daa
arpl
push
rorl
pop
shll
dec
sarl
push
push
pop
test
sahf
pop
sub
cmp
gs
call
rcll
outsl
sarb
fsts
pop
mov
inc
lret
push
mov
sub
ljmp
mov
and
or
adcl
pop
adc
sbb
call
mov
iret
mov
mov
fbstp
test
cltd
sub
sahf
dec
inc
jo
jge
inc
enter
mov
lret
sahf
mov
pop
or
push
js
mov
loope
xor
out
mov
mov
cld
rol
stos
ja
or
mov
loope
outsl
push
mov
add
xchg
lahf
pop
mov
enter
mul
mov
jmp
shlb
adc
pop
cmpb
or
ja
fldl
fwait
scas
xor
stos
and
sub
mov
or
adc
enter
or
lods
inc
dec
and
call
movsl
pusha
cmpsb
std
mov
lods
lahf
xchg
stc
fnsave
cmp
pop
inc
test
inc
jbe
pop
sti
cmp
mov
jne
xor
jbe
cmpsl
hlt
and
ja
jle
sub
out
aaa
gs
pusha
pmuludq
scas
sub
out
lods
mov
in
bound
ret
xor
and
cmc
push
popf
mov
loopne
mov
sbb
mov
ret
jge
and
jo
lret
pop
insl
les
andb
fisttpll
lahf
add
push
call
mov
xor
popa
sub
fldl
xor
fs
xchg
test
in
leave
or
iret
int3
cmp
cmpb
pop
cmp
lahf
rcr
jg
mov
enter
and
sbb
add
movb
fisttpl
aad
cmpl
iret
xchg
sbb
mov
jnp
pop
add
fcom
iret
mov
inc
mov
inc
lcall
cmpsl
lcall
outsl
inc
lret
into
adc
sub
nop
ja
push
sub
aaa
xchg
ror
and
pop
or
mov
xor
imul
sbb
sub
inc
push
sub
out
mov
sub
sbb
in
aaa
cwtl
clc
or
lods
ss
lret
lret
jns
add
out
adc
ljmp
js
ffree
mov
sbb
adc
mov
sbb
mov
cs
repnz
pop
out
lea
pop
adc
cmpsl
aad
or
jo
jne
mov
stos
xor
cwtl
mov
call
mov
in
lock
and
adc
jle
into
stos
ja
jle
stos
sbb
gs
push
mov
cwtl
lret
cmp
dec
loop
pop
sahf
inc
jle
lods
add
cli
push
push
fistps
nop
int3
push
ret
dec
and
jmp
imul
add
jecxz
adcl
pop
nop
xorb
or
out
mov
push
std
in
jge
cmp
or
lds
dec
or
dec
and
dec
aam
jo
frstor
aaa
shlb
jnp
test
clc
xlat
add
pop
filds
dec
sbb
jg
bound
lret
jo
fcmovne
jecxz
xchg
addr16
inc
insl
add
xchg
lahf
mov
test
lcall
test
fwait
mov
aaa
jge
jo
xchg
imul
xor
std
loope
sbb
dec
and
fildll
rcrb
or
push
stc
ret
xchg
pusha
mov
mov
ret
cmc
cs
sbb
pop
mov
dec
sti
xorb
mov
pop
pushf
inc
nop
push
ret
push
test
fnstenv
out
push
jp
mov
imul
mov
mov
mov
mov
testb
out
dec
mov
xorb
inc
xchg
shll
iret
and
inc
adc
xchg
jge
in
sbb
movsb
and
stos
pop
fisttpl
outsb
movsl
add
mov
dec
and
test
in
imul
enter
pushf
jl
dec
jg
sti
sub
hlt
in
insb
loop
pop
divb
push
rclb
popa
cmp
test
jnp
out
lcall
inc
or
inc
sub
ljmp
jle
sub
mov
loope
je
xchg
adc
pushf
and
movsl
outsl
aaa
and
loopne
add
cmp
mov
aam
filds
aaa
loop
push
test
pusha
nop
js
lcall
lret
out
fmuls
insl
mov
add
lds
mov
or
rol
jp
lahf
div
mov
jnp
dec
orb
inc
int
shr
fidivs
mov
in
rcl
lods
imul
cmpsb
dec
sbb
and
xchg
pop
sbb
xchg
fadds
outsb
xor
push
dec
adc
rcrb
insl
les
xor
jne
pop
mov
mov
sbb
jp
mov
test
stc
fwait
sub
add
pop
loope
movsb
cli
sti
sbb
or
or
inc
mov
adc
leave
and
inc
xor
push
push
and
xchg
mov
pop
cmp
xchg
pop
mov
mov
cmp
lahf
insb
mov
and
sti
imul
lock
jns
scas
rep
sbb
sbb
in
adcb
jo
or
data16
mov
push
jmp
and
push
mov
sbb
loop
aad
hlt
imulb
imul
inc
jbe
cmp
arpl
mov
pop
mov
or
sbb
enter
out
pop
dec
xor
inc
aam
or
mov
xchg
push
sub
movsb
fimull
pop
mov
or
jo
jmp
sub
sarl
loope
loope
pop
scas
adc
test
sahf
push
int3
test
jg
xchg
rcpps
orl
dec
fbld
loopne
and
mov
in
sub
lods
dec
adcb
jl
lods
fiadds
jge
mov
cmpsb
scas
jne
stos
mov
inc
imul
mov
outsb
push
cmpsl
jl
xchg
stos
mov
mov
add
sbb
jae
push
adc
pop
imul
adc
in
in
cmp
pop
cmp
mov
icebp
add
mov
dec
int
add
pop
lods
hlt
popf
cmp
cmp
loop
mov
xor
aam
xchg
jbe
dec
xor
or
jns
add
les
repnz
xor
sub
cmpl
pop
and
in
das
imul
sub
jp
test
incl
jmp
cwtl
inc
and
pop
sahf
in
adc
and
clc
sti
hlt
ss
insb
bound
es
shlb
into
mov
mov
or
mov
fucomip
jle
fs
pop
jae
inc
movsl
mov
lock
jmp
cmp
mov
mov
movsb
xor
jecxz
and
aad
xlat
mov
cmp
lods
jb
xchg
das
push
mov
xlat
mov
push
jb
lds
scas
js
mov
jle
loop
jne
test
repz
scas
dec
arpl
add
sahf
jge
cmpsb
push
insb
inc
cmc
jns
ret
int
jae
push
xchg
adc
icebp
shrl
lcall
mov
mov
ja
imul
jp
mov
mov
bound
inc
popa
js
in
mov
push
xchg
imul
cli
pop
cwtl
sub
lret
jnp
test
ds
pop
outsl
in
sub
pusha
inc
add
and
insb
jno
jmp
sar
movsb
loopne
jb
xchg
xor
lcall
dec
pop
int3
mov
stos
and
xchg
repnz
sub
push
out
push
in
cmp
outsl
stos
nop
ss
cmpsl
jno
addr16
mov
or
jl
xor
pop
fwait
xlat
and
call
mov
jp
sbb
cltd
cld
in
inc
nop
xchg
dec
jge
xchg
mov
or
xchg
add
mov
lods
ror
call
in
mov
negb
push
addr16
and
movsb
in
mov
fsubs
or
mov
dec
ret
xchg
mov
and
jb
ret
insb
in
mov
pusha
lock
cmp
lahf
xchg
jle
sub
in
pop
and
ljmp
addr16
mov
cmpsl
pop
lock
outsl
mov
loopne
pop
cmp
andl
lods
xor
xor
in
pop
mov
sbb
rolb
in
andb
movsl
jo
add
xchg
adc
test
jg
sarl
pop
lcall
xchg
ret
pop
ret
inc
xchg
in
jp
movsb
jno
pop
and
xchg
sub
mov
pop
int
sbb
dec
cs
shrb
call
fs
jge
arpl
mov
xchg
adcb
jmp
daa
mov
aas
mov
fadds
or
les
push
insl
sahf
fsubrs
out
maskmovq
divl
adc
sub
ficoms
and
lret
fimull
jecxz
adc
push
scas
push
imul
xchg
mov
cmp
out
mov
scas
cmpsl
or
or
xor
add
or
dec
das
addb
jae
mov
pop
jecxz
and
add
or
inc
mov
dec
cmp
in
gs
or
pop
inc
lds
in
in
push
adc
in
cmp
mov
daa
psubq
mov
cs
mov
fisubrs
xchg
push
pop
add
fldt
loop
push
test
sub
sub
dec
mov
fisubrl
les
and
push
pop
xor
loop
mov
daa
jge
imul
cs
insb
insb
mov
xor
cmc
aas
sbb
push
push
aaa
sbb
dec
daa
andl
jns
daa
jns
cmpsl
mov
negl
add
mov
inc
sahf
insb
lock
mov
mov
jp
es
rcrb
jne
fnstcw
cmp
or
pop
add
mov
and
adc
jno
outsl
insb
cmp
add
test
es
mov
push
and
int
cmp
aas
andl
cmp
mov
mov
jns
dec
pop
rcrb
cmp
loopne
jae
cwtl
jecxz
sub
jo
int3
xchg
inc
and
sub
sbb
and
xor
push
jle
rcrl
cmc
mov
lods
xchg
aad
xchg
dec
and
xchg
xor
fldt
mov
mov
cltd
jb
xor
push
es
sbb
push
ret
sbb
mov
loop
jb
mov
in
cli
mov
xor
dec
xchg
pusha
pop
out
outsb
sahf
dec
movl
shll
cltd
jmp
sub
xchg
dec
loop
pusha
xor
dec
sbb
xchg
sahf
push
movzwl
inc
int
loop
cltd
pop
out
cltd
movsb
es
push
das
test
fsts
sub
sbb
cwtl
fwait
jo
pop
call
imul
jp
and
nopl
inc
fsubp
repnz
loopne
pop
aas
faddl
mov
repz
jg
fidivrs
mov
sbb
push
insl
in
cltd
add
or
cli
shll
dec
sub
sbb
fidivrs
mov
dec
xor
jns
jbe
jl
out
push
imul
je
add
dec
or
dec
cmp
add
in
xlat
loopne
jle
fstps
and
fdivs
push
icebp
cmp
inc
sbb
mov
scas
ret
xor
inc
pop
fistpll
inc
mov
lret
hlt
cmp
leave
fistpl
int3
jae
repnz
js
addr16
mov
inc
cmpsb
add
add
adc
out
jmp
nop
lods
je
xor
xrelease
js
add
lods
pop
jg
popa
xor
rcrb
nop
out
and
and
cmc
push
mov
lret
add
push
stos
mov
mov
int3
incb
enter
sbb
in
pop
mov
mov
inc
jb
aas
mov
inc
sarl
xchg
cmp
cmp
gs
es
stos
imul
insb
aaa
jg
pop
scas
hlt
and
loope
out
out
xor
stos
pop
inc
sub
fdivrs
adc
sbb
cmp
pop
lcall
jne
enter
lea
jg
jns
mov
lods
out
popa
orb
test
fsubs
jl
pop
fstl
in
loopne
cwtl
stc
ljmp
scas
cld
loopne
sbb
clc
int3
mov
sub
sub
gs
jae
mov
outsb
lret
pop
mov
mov
vmread
push
inc
xchg
pop
xor
rorb
mov
pop
mov
repnz
mov
in
stos
mov
adc
scas
xchg
xchg
push
jg
jl
call
js
aaa
mov
aaa
dec
push
xor
lock
mov
jne
mov
dec
sbb
pusha
dec
xchg
and
loopne
add
fadd
pop
fcoms
xchg
mov
add
and
mov
dec
outsb
cmpsl
popa
inc
mov
fs
fldcw
icebp
fld
es
shl
add
sub
and
dec
pop
adc
adc
not
cwtl
push
add
cmp
add
outsl
cmp
xchg
ja
jp
dec
fistpll
aas
jmp
add
push
and
pop
sahf
xor
arpl
adcl
lea
orl
ss
lds
into
dec
cs
mov
push
les
je
pushf
popf
and
int3
fwait
jb
cmp
lock
and
arpl
out
enter
pusha
cmp
sbb
aad
add
loop
cmovs
cmp
xchg
fdivs
add
int
xor
imul
inc
pop
enter
or
mov
idivl
mov
ficompl
sbb
rcrb
add
ret
pop
pop
sbb
int
stos
mov
jb,pt
frstor
lahf
or
fucom
xor
add
mov
pop
xor
xor
mov
add
fdiv
stos
push
out
shll
repz
stc
jge
sahf
and
gs
mov
push
jb
loop
ljmp
clc
xchg
and
push
pop
inc
pop
cmp
enter
add
ljmp
mov
shlb
inc
les
push
int
in
cli
fwait
scas
mov
imul
pop
adc
push
sar
or
mov
dec
pop
clc
ret
rorl
out
ja
pop
test
xor
and
jns
mov
or
stos
sbb
test
mov
bound
pop
sbb
dec
and
gs
sarl
divl
push
loopne
loopne
inc
sbb
adc
int3
or
adc
insb
mov
out
lods
or
jle
or
inc
inc
sti
leave
pop
rclb
sub
call
test
add
jo
mov
cmp
push
inc
sub
sbb
adc
sbb
int3
loope
pop
mov
or
push
mov
mov
fidivrl
sbb
sti
mov
mov
fwait
dec
or
cli
push
sarb
ds
fisttps
rolb
sub
lahf
out
cmpsb
movsb
fstpl
cmpsb
ljmp
jecxz
lahf
cs
add
or
adc
push
stos
jnp
bound
add
cmpsl
mov
sbb
xchg
fmuls
fstpl
lret
inc
sar
es
mov
push
test
aad
lds
cmp
rcrl
lods
dec
xchg
xchg
mov
push
test
jb
xchg
lahf
bound
push
gs
dec
les
test
icebp
add
xor
jne
lock
push
or
and
xchg
pop
and
daa
jnp
pop
aam
xchg
cld
jb
and
pop
lret
fistpll
sub
or
cmp
shlb
data16
sbb
cmp
push
movsb
popa
fdivs
stos
aam
sbb
add
mov
xlat
in
pop
jle
sub
stos
repz
mov
dec
loopne
imul
dec
xchg
pop
pop
jne
scas
push
ret
scas
sub
lock
xchg
add
subb
leave
push
outsl
lret
cmpsb
out
jle
add
xchg
pop
mov
testb
adc
adc
es
xlat
lcall
inc
scas
push
ret
in
cltd
pop
nop
add
inc
xchg
push
inc
pop
mov
js
decl
or
div
lcall
jmp
outsl
out
cli
inc
arpl
mov
in
adc
sub
add
cmp
scas
adcl
loop
out
stos
cmpsb
push
lock
adc
les
popa
inc
lahf
loope
pop
mov
scas
push
mov
scas
jns
jp
sub
pop
in
push
xor
call
cwtl
xor
es
jge
cmp
ficoms
jecxz
ror
sub
popa
movsl
adc
mov
pop
inc
addr16
movsb
js
push
mov
ljmp
stos
jo
test
xcrypt-ctr
xor
mov
lret
xchg
imul
out
pop
mov
pop
push
dec
jle
or
rol
mov
xchg
test
sbb
add
dec
xor
pop
pusha
pop
and
dec
stos
push
loop
lahf
mov
pop
mov
xchg
lods
inc
pushf
xchg
dec
pusha
mov
loope
or
pop
push
mov
push
sti
pop
das
cmpsl
sub
fldenv
loop
out
push
cli
and
dec
and
arpl
mov
and
repz
or
dec
xchg
fbstp
fstps
ljmp
insb
mov
and
stos
hlt
jne
inc
and
mov
jg
ss
push
and
mov
loope
scas
mov
imul
imul
fidivl
and
ret
pop
xor
mov
es
out
loope
lahf
std
aaa
cmpsb
inc
stos
test
push
into
shlb
xchg
leave
push
mov
arpl
dec
inc
jle
sahf
orl
or
sbb
fldt
adc
fadd
mov
data16
aam
and
or
call
stc
add
pop
sbb
cmp
fstpt
xchg
dec
inc
add
fwait
bound
fnstcw
popa
sbb
insb
das
add
mov
js
cmp
cmp
js
test
fisubs
stc
fsubs
jae
and
cmpsb
outsl
mov
sbb
out
sub
call
add
test
movl
enter
jnp
pop
insb
sar
and
stos
or
cmp
popf
sub
test
cmpsl
and
ss
shrl
pop
mov
inc
dec
popa
cmp
adc
jle
push
sbb
fisttpll
shll
and
jge
xchg
out
stc
mov
xchg
mov
ret
mov
add
jp
aam
in
mov
neg
add
nop
stos
addl
mov
subl
add
pop
inc
xor
shrl
sbb
sbb
mov
aam
dec
cwtl
jge
mov
mov
sbb
mov
and
es
outsl
out
fwait
adc
lea
shll
xchg
jns
cmc
cli
push
push
jo
cmp
call
jne
mov
enter
mov
aaa
mov
push
sbb
out
enter
sub
xor
mov
stos
lcall
adc
lock
sub
add
xchg
pop
sbb
in
mov
jb
mov
lods
dec
int3
lret
out
cmc
inc
mov
xchg
xor
lods
cmp
loop
fdivr
adc
sub
leave
mov
out
push
xchg
and
scas
ljmp
faddl
enter
pop
adc
rclb
inc
xor
pop
xor
inc
dec
fwait
pop
inc
stos
sbb
cvtps2pd
out
mov
pop
je
std
jmp
aaa
pandn
mov
lds
dec
mov
dec
ret
cli
repnz
out
inc
or
push
divb
jle
int
imul
insl
add
insb
in
outsb
in
pop
data16
push
subl
insl
pop
mov
and
iret
mov
mov
push
jae
push
pop
not
mov
mov
pusha
cmp
cltd
xor
mov
or
mov
in
mov
xchg
xor
dec
lock
sub
pop
pop
inc
and
xchg
sbb
jno
in
ja
xlat
pop
ja
decl
cmpsl
mov
inc
or
jg
inc
dec
cmp
dec
push
inc
dec
mov
int
lods
add
nop
add
cmp
cmpsb
mov
xchg
clc
into
mov
or
shlb
or
xlat
leave
xchg
jne
sbb
loope
push
lea
call
mov
xchg
pop
dec
mov
scas
xor
ficoml
add
push
cmp
movsl
pop
int
sbb
xor
into
sti
pop
mov
or
hlt
cmp
xchg
push
int
or
jno
shlb
jbe
sahf
adc
adc
shrl
and
jmp
inc
fmul
movsb
jbe
inc
push
fsubrl
bound
sub
adc
in
xchg
add
inc
mov
lock
repnz
test
jmp
and
test
scas
lods
test
fnstenv
jns
mov
push
aam
mov
into
jecxz
fwait
and
jnp
sub
dec
andb
loope
out
scas
loope
imul
mov
shll
dec
adc
into
movsl
call
repnz
adc
icebp
sbb
jg
mov
push
ljmp
jb
sbbb
fs
xlat
adc
push
sbb
divb
testl
jmp
pusha
jnp
in
les
pop
dec
ret
lock
adc
sbb
std
fs
and
and
dec
in
iret
hlt
xor
inc
push
xchg
in
xchg
xlat
or
clc
int
ja
pop
jnp
adc
sub
add
aad
cmc
xor
rorb
fs
push
sub
out
cmp
or
mov
and
or
aam
push
push
lods
cmovno
cmp
mov
dec
add
sub
mov
mov
test
cmp
push
xchg
adc
out
aad
or
cwtl
jmp
sub
xor
xor
pop
lahf
mov
call
push
lock
xchg
test
pop
test
push
cmpsl
push
inc
jp
inc
aaa
les
test
rcr
sbb
cmp
push
xorb
jecxz
and
xchg
jns
mov
pop
inc
ss
stc
dec
or
loope
mov
adc
loopne
sti
out
mov
repnz
and
out
ljmp
add
ss
push
lods
adc
sub
jl
shrb
icebp
inc
int
pop
add
fstps
jae
cmpl
and
mov
insl
scas
cmc
push
movsb
cwtl
aam
daa
daa
mov
mov
mov
push
loopne
out
and
adc
jno
or
repz
push
insb
scas
jb
nop
add
pop
mov
sbb
stc
cmp
adc
push
sub
addr16
push
jns
cmp
jp
les
jns
sbb
adc
cld
inc
mov
mov
and
inc
jle
jnp
icebp
jmp
loopne
mov
inc
jnp
stc
ficoml
push
daa
insl
mov
data16
out
jecxz
mov
sbb
cmp
xor
mov
cs
sub
stos
dec
jle
mov
xchg
popa
mov
hlt
add
lock
xor
notb
clc
leave
xchg
pusha
mov
adc
cmc
xchg
mov
dec
push
mov
mov
js
sarl
mov
out
test
mov
loopne
enter
mov
and
imul
xchg
add
sub
ljmp
sbb
scas
rorb
int
cmc
mov
lds
pop
xor
loop
xchg
bound
clc
enter
pusha
adc
or
shlb
repz
jae
jns
xchg
insl
add
pop
pop
mov
shll
out
imul
sbb
outsb
add
xchg
cmp
outsb
incb
fisttpll
and
scas
and
je
lahf
faddl
dec
jmp
sti
adc
into
jns
sbb
sub
push
in
xchg
mov
cltd
xlat
pushf
aam
inc
jne
xorb
mov
mov
bound
jg
test
enter
pop
stc
lret
sub
shl
pop
in
push
mov
xchg
cmp
int3
xor
stc
fstpl
lahf
inc
jmp
jne
sbb
xor
push
push
and
lods
xor
cmp
rclb
clc
jl
loop
lods
ficomps
int3
stc
iret
sub
fsubrp
cmc
out
sub
loop
mov
iret
dec
mov
loop
jge
add
lret
inc
insl
hlt
out
bound
jp
xchg
sahf
mov
mov
popf
sbb
or
js
xchg
test
push
test
mov
push
outsl
xchg
mov
xchg
push
sbb
pop
adc
xchg
in
in
and
and
test
stos
sbb
cmp
and
rcl
pop
sub
jmp
sbb
aaa
sub
loop
test
sub
in
and
dec
and
lcall
add
mov
mov
lret
inc
jns
icebp
das
test
jns
in
enter
arpl
das
fmuls
aas
scas
sub
or
int3
xchg
xlat
shlb
adc
sbb
sbb
lahf
and
sbb
ds
mov
shlb
test
icebp
xchg
movsb
fdivs
push
cltd
lret
mov
fisttps
lds
lods
mov
mov
xchg
sti
pop
shr
pop
loopne
out
jp
mov
leave
and
or
or
pop
ret
push
mov
movsb
pop
xchg
jb
mov
jb
adc
xchg
dec
or
xchg
mov
pop
jno
mov
in
dec
cmp
scas
sub
pop
lahf
roll
pop
outsb
je
dec
rorb
scas
cmpl
fnstcw
xchg
test
and
adc
scas
loope
xchg
pop
inc
popf
sub
outsb
pop
xchg
push
sbb
and
inc
aas
xlat
and
icebp
aaa
mov
jle
lret
inc
lea
mov
aad
out
inc
xchg
fsubrs
or
pop
pop
pop
hlt
push
dec
sub
xor
scas
cmp
hlt
ss
jb
pop
jo
mov
pop
movsl
jo
imul
hlt
adc
xlat
daa
stos
or
mov
inc
or
lods
mov
push
cmc
leave
sbb
loop
cmp
push
repz
xchg
loopne
add
push
popa
mov
mov
gs
aad
pop
test
jo
mov
hlt
aaa
aam
adcb
jb
or
sti
dec
lods
sub
mov
and
mov
ds
aad
out
notl
mov
jmp
mov
ret
xchg
loop
mov
js
jb
jne
pop
cmp
xorb
jg
imul
sub
pop
mov
xlat
sub
xlat
cmp
stos
jns
inc
and
adc
adc
clc
in
add
es
inc
leave
cmp
and
jno
fwait
or
shlb
mov
out
add
jl
sbb
pop
or
sub
jl
mov
fcmovb
lds
lret
ja
movsb
imul
dec
push
mov
add
push
loope
ficompl
mov
jno
push
hlt
aam
or
sahf
inc
lds
mull
out
jns
fldcw
or
jne
cltd
jae
and
rcrl
push
dec
xchg
stc
clc
call
sbb
out
jmp
in
cmp
andl
mov
rcrl
stc
hlt
sbb
inc
jno
add
sub
stos
andb
or
movsl
test
cmpl
fidivl
xor
mov
loopne
add
repnz
push
or
jno
lret
stos
pop
stos
xchg
sub
lahf
push
xorb
mov
insl
arpl
mov
inc
rclb
mov
popf
xor
cmc
adc
fldl
or
mov
dec
mov
ss
adc
out
jp
int
sbb
in
outsb
lock
cmp
mov
hlt
cmp
xor
sbb
into
ja
or
cmp
hlt
mov
popf
cmp
xchg
shll
dec
lds
jp
cmc
rcrb
mov
push
add
pop
mov
out
and
mov
adc
in
xchg
shrl
ret
xor
jbe
test
xchg
out
jno
rcrb
shld
pop
push
pusha
fisubrs
inc
or
jecxz
lods
cwtl
dec
int
xor
jb
repz
adcb
fildll
into
mov
sbb
int3
sbb
cmp
sarl
test
mov
sti
loop
add
push
jb
adc
xor
les
mov
cmp
js
dec
je
cmp
adc
add
rorl
lods
aad
aad
cmp
test
mov
lea
mov
lret
stos
mov
dec
addr16
dec
xchg
dec
pop
mov
shll
in
lods
daa
mov
ds
ret
jl
or
test
cmp
out
mov
xor
jae
dec
stc
mov
repnz
and
aam
in
cwtl
sahf
imull
sahf
sbb
cmpsl
xchg
dec
fwait
cmpb
outsb
inc
add
rclb
fwait
xchg
lds
iret
cmpsl
subb
ret
mov
es
xchg
dec
neg
push
mov
movsl
jp
mov
mov
idivb
aas
jb
test
cs
mov
xchg
jle
cmp
push
dec
xchg
jg
out
adc
pop
fwait
or
js
pop
dec
and
lds
adc
push
sti
pop
stos
arpl
adc
cmpsb
xchg
fdivrs
dec
test
daa
fldt
sbb
push
ret
dec
cwtl
mov
repnz
or
mov
lods
testl
sub
aaa
addr16
mov
cltd
xchg
std
or
ret
mov
iret
inc
xorl
and
insb
pushf
sbb
cli
or
xchg
lods
pop
aad
loope
test
fs
pop
or
and
jmp
xor
xor
xchg
movsl
pop
clc
xchg
sahf
jns
xor
sbb
mov
sbb
rorb
cmp
clc
xor
cltd
sub
scas
test
dec
notb
mov
mov
add
ljmp
rorl
mov
lods
out
inc
mov
call
enter
cmp
jnp
lods
xchg
lock
dec
lods
dec
orb
fs
inc
mov
mov
dec
mull
jle
jns
daa
jnp
movsb
jne
stos
clc
or
inc
dec
out
push
or
subl
and
sbb
xchg
scas
pop
xor
and
sarb
sub
popf
push
enter
and
dec
scas
or
in
fldt
int
cmp
loope
mov
or
dec
or
es
scas
movsbl
lea
flds
in
fs
pusha
cli
mov
aaa
outsl
sub
pop
mov
loop
test
arpl
cltd
addr16
cmp
aam
lahf
pop
ds
in
dec
scas
idivb
inc
adc
sahf
sahf
fimull
xor
incb
loop
pop
andps
or
stos
push
push
push
ds
pop
leave
dec
pop
cmp
andl
lahf
dec
out
xchg
mov
iret
fs
and
sahf
std
int3
sbb
mov
out
mov
mov
lock
sub
sbb
or
rol
mov
mov
repz
xchg
jg
mov
pop
daa
add
fs
out
ljmp
cmpsl
push
clc
mov
pusha
lock
ljmp
stos
sbb
push
dec
loope
int3
shl
lds
adc
mov
dec
addr16
jnp
jp
jl
jecxz
cld
mov
imul
push
jo
int3
mov
push
jle
push
pushw
cmp
sub
add
lcall
dec
pop
xchg
test
stos
inc
fucomi
es
xchg
imul
ja
dec
or
adc
test
mov
mov
sbb
and
push
mov
mov
cmpsl
inc
sub
mov
sbb
aaa
mov
xor
imul
and
fildl
dec
inc
ja
sbb
push
and
popf
mov
push
xchg
jg
xor
push
pop
jae
inc
lret
scas
pop
or
adc
cmc
loope
xchg
imul
scas
pop
sti
jle
nop
nop
pop
insb
rcrl
mov
jne
aas
pop
add
shlb
xchg
dec
cwtl
xlat
shll
movsl
dec
lahf
mov
cld
inc
add
pop
call
je
pmulhw
arpl
cwtl
or
mov
pop
mov
jnp
sbb
pusha
inc
mov
sbb
rcll
mov
fadds
leave
cmpb
and
sbb
xchg
push
jne
or
das
xor
sub
fisubrs
push
ds
push
cli
or
push
popf
and
fisubl
jbe
push
cmp
mov
push
push
sbb
cli
xor
icebp
or
in
outsb
adcb
mov
sbb
add
test
or
das
add
int
adc
stc
push
lea
mov
jg
push
std
xor
or
jg
push
sbb
in
mov
inc
xchg
scas
repnz
shl
inc
dec
fwait
jecxz
adcb
adc
sub
lea
xor
mov
cmp
or
add
xchg
push
sahf
pop
and
popl
mov
hlt
cmp
add
mov
dec
mov
decb
push
daa
loopne
adcl
xor
sub
int
fisubl
sbb
arpl
dec
fmul
insb
and
inc
sub
sub
outsb
xchg
adcl
mov
gs
xor
xchg
cli
jmp
das
enter
pop
push
cmp
enter
sbb
xor
ss
fs
addl
xor
sub
or
jb
mov
jbe
mov
lods
or
sub
cmpsl
rep
not
sbb
outsb
cmpsl
das
xorl
inc
inc
mov
data16
rcrl
out
add
push
mov
dec
insb
mov
jne
mov
repz
or
jb
lds
xchg
dec
das
es
adc
mov
loope
decl
inc
mov
jmp
fsubrl
movl
lods
dec
xorl
mov
cli
jb
xchg
pop
cmpsl
jmp
enter
loope
movsl
aad
or
xchg
mov
add
sti
push
dec
sub
rol
lods
mov
cmp
bound
pop
enter
and
lods
push
inc
sar
push
mov
stc
leave
pop
lds
stos
xor
movsb
jno
ds
push
nop
jp
ljmp
shlb
jno
pop
mov
mov
daa
cltd
xlat
nop
or
adc
mov
sub
add
scas
movsb
mov
jns
das
jecxz
lea
clc
inc
pop
nop
sbb
jecxz
lods
icebp
fwait
out
jle
sub
mov
shrb
jecxz
adc
dec
sbb
daa
call
aam
and
xchg
inc
xor
insb
mov
add
lock
jecxz
jnp
lret
rolb
xor
call
xchg
lcall
out
ss
xor
nop
pop
fmull
push
loopne
push
inc
inc
shrb
shrb
imul
lea
leave
inc
jg
es
into
add
adc
xor
or
adc
cmp
xor
xor
mov
push
stos
push
fisubl
and
xor
push
cmp
fwait
adc
mov
out
mov
test
xchg
das
loope
cmp
sbb
scas
xchg
lcall
lds
sub
stc
fdivrs
popa
lods
xchg
enter
xchg
xor
pop
out
fsts
push
lret
mov
lret
pop
mov
jo
cmp
in
and
enter
push
and
add
sbb
jecxz
jae
leave
cmpsl
mov
aam
mov
adc
out
ljmp
xor
push
dec
xchg
outsb
mov
or
fistpl
push
lret
nop
dec
lcall
cmpsb
popf
push
popf
mov
aad
inc
push
push
insb
inc
nop
mov
lea
jns
jne
mov
call
jnp
inc
sub
lret
dec
hlt
cmp
xchg
sub
push
mov
push
daa
mov
aas
sbb
mov
roll
mov
dec
jmp
mov
int3
fdivp
pusha
les
adc
mov
iret
rolb
push
das
in
rol
lea
cmp
repz
jo
mov
mov
shlb
push
scas
dec
push
rcrb
out
dec
ja
mov
cmp
dec
sub
jno
aad
cmp
sbb
add
sbb
pop
xchg
rcrl
cwtl
sbb
outsb
lods
or
rcll
inc
dec
not
cmpsl
jg
mov
mov
popa
bt
jno
loop
fwait
mov
stc
dec
xor
inc
jae
mov
adc
push
and
pop
mov
das
mov
jbe
cmc
out
sbb
imul
aas
adc
lock
push
arpl
or
xor
and
into
movsb
jnp
enter
pop
por
int
mov
packsswb
cmp
loopne
outsb
sub
test
stos
ds
mov
lock
mov
mov
jecxz
repnz
out
bound
jmp
pop
xchg
pop
xchg
out
dec
je
lods
add
and
leave
lcall
inc
pop
sahf
repnz
mov
lods
idivl
faddl
add
cli
mov
mov
push
jno
cmc
and
mov
or
nop
int
lcall
andl
mov
jno
dec
pop
lods
push
cmpsb
inc
daa
jmp
mov
movsb
jmp
dec
sbb
aam
in
jg
ficompl
sub
and
hlt
lret
xor
cmp
dec
iret
mov
shll
lea
mov
insb
push
pop
add
xor
stos
pop
inc
sub
int3
movsl
hlt
arpl
push
push
sbb
leavew
lcall
mov
cli
leave
stc
cmp
popa
mov
lret
add
or
push
das
outsl
xchg
mov
dec
cmp
mov
std
cmp
sub
mov
inc
or
movsb
add
js
out
shrl
add
repz
and
scas
popf
repz
cmp
ja
and
outsb
xchg
mov
pop
pushf
daa
imul
xor
mov
repnz
xor
add
lcall
jecxz
adc
int3
or
aad
mov
loop
stc
shrb
xchg
push
jae
pusha
mov
adc
inc
rclb
cmp
adc
loopne
outsb
dec
xchg
lcall
xchg
pop
cld
xor
jns
scas
dec
push
imulb
lea
es
ds
add
shll
pop
mov
mov
xlat
fsubrl
adc
aam
out
out
sbb
ss
insb
sub
arpl
movsl
pop
testl
jecxz
aam
movsb
and
mov
inc
mov
into
ret
jle
aam
and
lcall
and
push
pop
rcll
jmp
loop
pop
and
mov
pop
into
adc
cmpsb
dec
lcall
mov
pop
dec
mov
das
inc
inc
in
ds
int
inc
lea
sub
push
and
or
mov
lock
icebp
mov
out
push
leave
xor
daa
xchg
adc
fists
mov
inc
shlb
shlb
cld
sub
pop
fcomps
negb
pop
popf
push
cmpsl
enter
sbb
jmp
sub
fsts
add
pop
rcrb
dec
movsl
popa
mov
in
fcmovne
popf
xorl
adc
fidivrs
push
decb
jnp
popf
int3
or
sub
sub
jmp
jl
xor
orb
fldl
inc
sub
push
xchg
push
loop
jnp
push
dec
sub
mov
ss
jg
in
stos
xchg
outsb
dec
sbb
add
mov
add
repz
repnz
sub
or
insb
mov
sub
aam
mov
xor
add
das
popf
sbb
test
test
xchg
dec
or
repnz
mov
pop
or
insb
push
sbb
popf
je
cwtl
popf
and
mov
xor
jg
cmpsb
repnz
xchg
push
das
shr
in
cmc
sub
in
mov
sahf
in
fmull
leave
imul
jns
hlt
mov
fxch
sub
repnz
in
mov
in
inc
mov
adcl
xchg
xor
cmp
xor
mov
xchg
shl
outsl
xor
pop
xchg
cmp
pop
sub
out
mov
inc
fwait
pop
mov
in
cmp
push
xchg
or
lods
testb
pextrw
push
fld
jne
loop
xchg
lcall
jmp
lret
mov
cld
aaa
sti
mov
lds
mov
andl
jnp
and
sub
cwtl
jae
add
addr16
and
inc
les
nop
mov
ret
jmp
and
cmp
repnz
insb
push
push
push
daa
cmp
fsubrs
jmp
xor
andb
nop
lock
dec
iret
mov
shll
cmc
sbb
sbb
popa
ds
faddl
or
in
xchg
ss
movsl
fcoml
jo
pop
add
or
jbe
fsubl
push
mov
adc
movsb
imul
jl
sub
aas
adc
stos
rolb
jp
jno
and
push
lcall
lcall
test
mov
rcrl
int3
jle
js
lahf
mov
loope
or
jle
xor
add
movsb
repnz
jp
inc
enter
cmpsl
push
cmp
sbb
clts
roll
cmp
js
imul
pop
inc
sub
inc
xlat
add
jge
jns
fwait
nop
icebp
jmp
icebp
xchg
jge
dec
aam
jmp
pop
xor
cmp
scas
cli
dec
sahf
sbbb
jp
push
clc
mov
xor
xchg
decl
xor
mov
pop
cmpsb
out
cmp
inc
mov
outsb
adc
dec
fwait
pop
outsl
subl
sbb
out
incl
mov
nop
repnz
sub
mov
test
jge
inc
jge
test
push
cmpsl
dec
jmp
fbld
xlat
movsb
or
push
sub
daa
icebp
and
cmpsb
push
inc
es
neg
pop
pushf
jae
cmc
scas
or
test
pop
adc
dec
fwait
jmp
mov
add
or
pop
xchg
fwait
adc
inc
popf
mov
pop
cmpsb
add
out
and
xchg
push
fstpt
test
sub
out
xchg
inc
sub
ss
enter
dec
sbb
pop
xchg
ljmp
int3
adc
push
mov
insb
mov
sahf
shlb
adc
jae
out
hlt
push
dec
sbb
jg
xor
add
icebp
adc
inc
cwtl
imul
mov
shlb
fildll
dec
sub
push
add
ret
dec
and
add
cmp
and
int3
mov
cld
push
mov
sbb
addr16
mov
mov
xchg
jp
mov
and
sarb
in
fsubrs
cmp
jbe
jae
add
jb
sub
mov
js
mov
jnp
popa
cs
cmp
fists
lret
push
push
cwtl
jae
addl
xchg
mov
pusha
push
mov
test
scas
xor
mov
lahf
push
or
xchg
push
cmp
in
jnp
sub
xor
insb
scas
ljmp
xlat
sbbl
xchg
mov
pop
cltd
insb
sub
push
enter
sub
mov
sub
mov
lret
nop
nop
mov
call
pop
into
xchg
sbb
mov
and
inc
xlat
push
outsb
aas
push
in
outsl
lds
sbb
popa
pop
aaa
jecxz
fidivrs
dec
xchg
jne
adc
movzwl
adcl
and
divb
test
jge
inc
in
outsb
push
mov
aas
imul
lds
rcrb
in
inc
xchg
push
test
push
hlt
push
mov
lahf
jmp
scas
xchg
pusha
aaa
sahf
mov
cld
jno
mov
pusha
add
jns
das
imul
pop
dec
cld
loopne
mov
mov
jmp
and
movsb
sbb
aad
sti
call
lock
and
dec
add
fwait
aas
dec
aaa
es
pop
inc
mov
in
push
testl
lods
xchg
pusha
cs
out
mov
xchg
jb
jne
xor
xchg
or
in
mov
push
cmp
push
and
mov
ss
push
icebp
test
push
gs
add
in
outsb
movsb
adc
lcall
jmp
repz
clc
inc
imul
inc
in
mov
push
jge
mov
and
and
addr16
push
cmpsl
push
jmp
adc
pop
sub
jp
cmp
and
pop
rclb
xchg
out
inc
lahf
jmp
jecxz
xchg
hlt
cld
jne
in
insb
into
js
jg
test
jmp
dec
dec
fst
pop
and
cmp
inc
dec
cmpsl
xor
push
hlt
aad
out
lret
pop
sti
das
in
push
mov
das
sub
cli
repnz
sub
push
xchg
pop
js,pn
sbb
mov
ficomps
pop
ss
dec
sbb
in
les
mov
inc
sub
aas
mov
testl
addr16
xchg
rcll
popa
fucomp
inc
adc
popa
enter
ret
hlt
dec
inc
outsl
ret
sbb
push
pushf
stc
ljmp
pop
sbb
xchg
jne
rcrb
repz
dec
add
lds
dec
cli
das
stos
imul
push
adc
inc
jbe
sti
pop
xcrypt-ecb
cmpsl
dec
iret
or
xor
insl
mov
loopne
or
xor
sbb
mov
lods
ss
outsl
pop
test
addr16
dec
orb
out
fiadds
xchg
jle
loopne
fisubl
fsubrl
jle
adc
std
add
push
popf
cmp
jno
xor
enter
pop
adc
ja
mov
ljmp
pop
test
lcall
mov
jae
or
jns
es
ret
ret
std
in
out
mov
cmp
lret
adc
fcmovbe
ret
pop
push
mov
jb
or
sub
mov
int
ficompl
xchg
test
mov
jno
dec
shr
sbb
xchg
enter
in
int
stos
pop
dec
ja
push
out
sarb
and
ja
sub
enter
xchg
das
cltd
das
aas
popf
pusha
sahf
sub
cmp
or
outsl
or
neg
repnz
scas
lcall
xchg
push
shll
fwait
xor
outsb
addr16
jg
andb
xlat
rorb
faddl
cmp
dec
stos
add
bound
out
stos
imul
mov
outsl
aad
push
lahf
ret
stos
sbb
dec
push
loop
ds
pop
jno
lcall
gs
mov
sub
mov
xor
addb
loope
jecxz
push
xor
push
sub
xor
add
jbe
xor
jo
pop
inc
inc
mov
stos
inc
cmp
out
dec
fcompl
cs
or
or
data16
pop
roll
xor
in
pop
add
lods
jl
cmp
popf
mov
adc
imul
das
insl
cs
mov
stc
in
or
push
push
mov
push
lods
orl
cmp
enter
sub
insb
cmp
dec
das
xchg
mov
icebp
fidivs
cmpsl
jg
test
push
gs
sbb
mov
add
jo
popa
dec
into
pop
pop
nop
stc
adc
cmc
test
push
or
cmp
cli
dec
lahf
pop
sbb
sbb
fstpl
cmp
loop,pn
push
sub
pusha
movsb
shr
adc
rcr
roll
xchg
pop
nop
xchg
mov
mov
add
inc
das
mov
scas
mov
aaa
push
in
add
sarb
fnsave
jle
setno
cmp
orl
scas
xchg
add
fsubl
push
or
bound
add
leave
cltd
inc
and
gs
sub
push
xchg
dec
lret
jge,pt
ds
sahf
out
push
jnp
cmpsb
cli
fidivrs
xor
ja
fidivs
inc
adc
push
add
add
push
sbb
ror
adc
xor
and
lods
or
jnp
sub
jmp
push
sbb
jbe
movsb
outsb
les
inc
mov
cltd
hlt
pop
mov
mov
xor
sub
insb
sbb
testb
je
and
cmp
out
xchg
inc
test
add
into
push
js
test
inc
popf
jno
sub
mov
add
lret
sahf
sbb
mov
cmp
add
cmp
in
sbb
shl
mov
mov
jge
cltd
repnz
fsubl
js
and
das
aam
lea
push
push
xorl
ljmp
orb
pop
jo,pt
stos
xchg
in
push
mov
ss
addr16
push
ja
pop
mov
add
sahf
ja
mov
cmp
iret
fwait
ljmp
mov
fdivl
inc
fidivrl
ss
repnz
xor
push
xlat
sub
pop
cmp
jne
adc
stos
push
cmp
jl
arpl
subl
cwtl
in
push
mov
mov
das
loop
orl
data16
aad
mov
sub
stc
insb
out
ljmp
lock
stos
cli
dec
dec
mov
jl
loope
rorb
iret
arpl
ljmp
mov
je
cltd
out
lods
gs
adc
xor
mov
jo
pop
insb
xchg
test
xchg
xlat
jne
push
les
enter
or
sar
pop
mov
sbb
add
push
js
jg
movl
cs
inc
inc
xchg
add
xchg
aam
hlt
fdivl
mov
sbb
adc
push
jp
xchg
jecxz
fs
test
inc
rorb
mov
mov
push
push
fcoml
arpl
and
mov
or
repnz
pop
or
inc
mov
ror
fbstp
push
sub
icebp
and
mov
pop
das
push
add
mov
lret
mov
mov
ljmp
addr16
in
or
pop
mov
mov
lods
pop
test
push
push
xchg
sub
arpl
cld
pusha
ds
incl
mov
add
popf
pop
sarb
mov
xchg
cmp
cmc
pop
mov
jbe
je
repz
icebp
pusha
mov
mov
bound
js
sbb
jecxz
int
xchg
das
add
dec
ss
and
cli
test
testl
inc
test
insb
pop
adc
push
and
jne
dec
fs
sbb
cmc
cmp
push
sbb
fs
dec
ds
add
push
push
mov
sti
and
mov
push
dec
cmpsl
in
mov
xchg
lds
inc
cmp
xchg
xchg
mov
push
cli
cmpsl
fstl
adc
cs
inc
xor
cli
push
jnp
cwtl
pop
loop
mov
cmpsb
pop
sub
cmc
int3
insb
mov
rclb
sub
jp
ljmp
sbb
repz
or
mov
pop
out
pop
jno
mov
mov
inc
xorl
mov
mov
andb
ret
es
jbe
sub
jns
sbb
pusha
mov
sti
mov
stc
or
fistps
add
mov
push
mov
xor
inc
cltd
notl
lret
hlt
fdivs
call
enter
adc
out
jo
test
sbbb
fidivs
mov
cmp
lahf
inc
test
mov
mov
or
ret
aas
lock
jb
push
jnp
orb
mov
cs
push
aad
add
hlt
xchg
fwait
sbb
cmp
and
push
cld
mov
sbb
fdivs
sbb
stc
mov
dec
in
bndldx
test
jl
mov
pop
jmp
jmp
jle
out
jp
scas
in
or
repnz
and
std
inc
scas
pop
push
out
pop
inc
sar
or
popf
push
mov
jae
add
enter
insb
and
or
and
jbe
pusha
lcall
iret
ret
movsb
sahf
jp
cmp
loopne
mov
adc
cmpb
pushl
cmc
dec
push
out
negl
int3
push
jmp
out
xor
stos
cltd
ja
and
xchg
xchg
jno
dec
dec
xor
fcmovnb
cmpsl
jge
push
cmp
test
out
inc
add
sbb
mov
dec
mov
pusha
jnp
or
stc
inc
mov
add
jns
fdivl
lret
in
adc
lock
and
dec
xchg
pop
int
pop
xchg
inc
sbb
jae
imul
test
cwtl
cmove
insb
xchg
xor
xor
mov
icebp
scas
mov
mov
mov
sub
je
lods
loope
pop
mov
shlb
sbb
lds
cmp
lods
sbb
lcall
xor
aad
xchg
stos
insl
mov
sub
bound
stc
push
lea
fisubs
or
mov
sub
cmc
adcb
inc
mov
nop
push
jmp
add
xor
ret
cmp
cmp
jnp
xor
iret
add
jb
add
adc
leave
xchg
jp
test
int3
mov
mov
bound
sbb
inc
xor
ds
in
mov
pop
cmpsl
dec
cmp
lret
dec
cli
or
jno
call
das
out
pop
inc
lret
shrl
cmc
arpl
fwait
imul
hlt
xchg
mov
in
shr
add
fcompl
inc
int3
pop
pop
mov
shrl
adc
aad
lret
and
push
not
fwait
outsb
xor
por
sub
jnp
sbb
out
movsl
inc
imull
jne
out
push
call
test
add
mov
pop
mov
dec
pop
xor
sub
enter
push
fisubl
pop
data16
pop
bound
ja
out
mov
lods
mov
pop
les
in
cmpl
cmp
les
jno
xcrypt-cbc
cmpsl
xchg
les
or
sub
pop
mov
insl
push
jmp
jb
push
inc
lock
xor
aas
nop
xlat
xor
pop
cmpsl
ljmp
mov
leave
xor
mov
cmp
jecxz
sbb
adc
lret
or
add
cmp
icebp
sub
add
push
sbb
ja
mov
cmp
popa
mov
rolb
std
pop
cltd
enter
mov
int
je
jg
mov
hlt
aas
loope
nop
xor
loopne
or
mov
into
pop
frstor
repz
xor
dec
mov
jl
jo
jp
sbb
stos
jg
push
stos
out
xchg
xchg
xchg
cmc
sub
adc
mov
push
push
sbb
sbb
leave
mov
dec
or
adc
dec
mov
loopne
daa
clc
in
adcb
inc
shlb
lods
xor
dec
jnp
loopne
jecxz
add
push
fisubs
cwtl
hlt
add
movsl
jo
es
xchg
cwtl
mov
out
rcll
repz
cmpsb
je
adc
adc
iret
loope
and
jle
shll
lods
dec
in
jmp
jmp
lock
sub
je
jae
in
imul
adc
sub
ss
es
cmp
push
jbe
ds
mov
out
ror
mov
pop
push
aaa
or
fidivrl
push
sbb
jl
xchg
rcll
js
inc
lretw
lea
fnstcw
xchg
shlb
std
into
sbb
leave
and
sub
or
into
mov
test
xor
pop
test
sub
fucomi
mov
rcrb
adc
add
rolb
mov
and
inc
cli
xchg
loopne
mov
sbb
jns
push
call
pop
rcl
jne
int3
mov
push
inc
xor
inc
mov
popf
dec
xor
sub
loop
cwtl
dec
or
push
sahf
inc
cs
dec
pcmpgtw
out
jne
sbb
cld
pop
fiaddl
and
jns
and
push
mov
scas
mov
arpl
add
mov
jmp
fucomip
test
add
fbld
pop
sbb
popf
xor
lods
mov
pand
mov
stc
jb
sbbb
frstor
repz
jecxz
dec
xchg
mov
aas
lea
es
inc
loope
imul
and
repnz
sub
dec
jns,pt
test
push
popa
addr16
sub
cmc
fdivl
xor
scas
in
clc
jg
adc
outsb
mov
insb
inc
cwtl
cltd
pop
inc
icebp
xor
dec
test
adc
gs
xor
push
call
mov
pop
xlat
push
sbb
loop
fcompl
sub
nop
push
mov
jl
mov
cld
faddp
jmp
mov
jae
cmp
mov
add
into
test
dec
test
add
xor
sub
cmp
push
shlb
or
sub
addr16
adc
iret
sahf
lods
sbbb
insb
stos
inc
and
and
lea
rolb
fcoms
lock
xor
push
scas
cld
les
mov
mov
sbb
inc
shl
scas
adc
sahf
jge
ja
push
push
stos
stos
test
cmp
mov
sti
into
xchg
fsubl
sub
sbb
out
or
lret
ss
jmp
and
roll
jp
xchg
cmp
mov
sbb
mov
loopne
fisubrs
mov
das
xchg
pop
rorb
inc
out
cmpsb
jns
and
cmp
repnz
inc
add
jecxz
nop
sub
push
lea
rcll
aaa
add
sbb
enter
dec
movsb
ds
pop
stos
in
mov
jns
ret
sti
pop
sbb
mov
push
pushf
jae
loopne
pop
mov
xlat
xchg
clc
cmpb
out
dec
scas
xchg
ljmp
icebp
jb
insl
and
mov
testb
lods
aam
scas
jbe
movsl
cld
lds
mov
or
inc
jnp
mov
pop
data16
push
lods
popa
jl
mov
repnz
fistps
repz
jge
xor
dec
lret
jmp
and
sub
jecxz
mov
lea
jecxz,pn
imul
mov
add
sbb
dec
jmp
lea
pop
subb
mov
or
inc
mov
inc
xchg
pop
shl
mov
and
subl
inc
jno
test
scas
push
jle
jmp
xchg
hlt
arpl
jbe
jne
out
pop
pop
sub
add
fsubrl
mov
xchg
sub
js
jmp
jge
cltd
jl
scas
push
xchg
outsb
in
movb
cmp
arpl
lods
add
popf
mull
pop
adc
pushf
nop
jmp
jmp
int
xlat
mov
aaa
xor
cmp
negb
jne
bound
pop
push
aas
sub
xchg
imul
scas
mov
aas
adc
rcll
xlat
jo
mov
icebp
lcall
xchg
xchg
rol
dec
test
int
int
add
cld
mov
popf
arpl
dec
cmp
inc
xchg
push
sub
add
fld
xchg
gs
sbb
out
sub
add
shlb
stos
mov
fwait
xchg
jbe
xchg
jno
mov
lahf
out
and
inc
add
into
adc
lret
stos
ja
cmp
popf
xchg
bound
cs
out
xchg
add
stos
mov
lahf
xchg
cli
sub
dec
push
lds
aaa
into
adc
jae
ja
pop
shr
leave
adc
andb
dec
es
repz
iret
sbb
mov
push
repz
sub
sbb
jl
sub
rclb
dec
xor
test
sbb
sbb
pop
rclb
cli
and
push
cmpsb
mov
xor
add
mov
paddq
mov
jmp
lods
pop
mov
pop
inc
fcmovnu
cs
inc
shlb
inc
pushf
rclb
lds
jnp
in
xchg
jle
jecxz
pop
faddp
and
iret
jne
movsl
call
loope
pushf
adcl
fbld
push
add
mov
cmp
xor
xchg
pop
pop
sub
xchg
stos
roll
jo
hlt
mov
jno
xor
ss
mov
les
les
int
test
adc
lods
lods
xchg
popf
pop
aam
je
mov
push
in
sbb
repz
sub
sbb
scas
insl
pop
push
mov
cmp
int
pop
xchg
cwtl
dec
xor
loope
iret
lods
jp
fmull
inc
dec
inc
adc
mov
dec
sbb
movsl
incl
mov
lret
sbb
icebp
or
aad
roll
fcomps
xchg
xor
jnp
lea
aam
xchg
sbb
sbb
outsb
mov
mov
sub
daa
hlt
mov
bound
dec
fucomp
xor
xchg
lret
mov
jg
arpl
call
sbb
push
xor
cmp
pop
jo
inc
daa
shrb
imul
pop
bound
ljmp
lahf
gs
mov
das
test
clc
push
xchg
hlt
cld
enter
mov
in
mov
call
fiadds
jecxz
outsl
pop
jp
jno
inc
mov
stc
sbb
out
jp
sbb
insb
in
cmpl
fcomps
xchg
xor
xlat
or
inc
aaa
cwtl
jmp
xchg
cmp
imul
mov
pop
mov
outsl
jge
test
movsb
jge
add
xor
xchg
push
inc
add
pop
cmp
sbb
hlt
push
mov
lock
cmc
xchg
es
cmpb
stos
fbstp
fnstsw
pop
mov
cli
fbstp
pop
inc
cwtl
ds
lahf
cmp
icebp
repnz
mov
in
insb
fadds
mov
enter
and
jl
cwtl
xchg
insb
cmp
pushf
push
lcall
dec
xchg
mov
test
xchg
fldt
dec
push
pusha
sub
xchg
repnz
inc
iret
adc
arpl
mov
xor
and
add
inc
and
xchg
daa
push
dec
ja
mov
fldl
ror
add
fistps
imul
xchg
cmp
sub
add
mov
add
jnp
ret
sbb
nop
pop
push
add
jae
and
lcall
int
sbb
cld
jl
mov
pop
shlb
mov
inc
ja
les
xor
shlb
test
in
in
repz
cs
mov
fs
add
mov
lock
and
push
jg
add
sbb
adc
fdivs
add
adc
mov
xchg
dec
pop
stc
mov
popa
xchg
dec
mov
scas
sbb
pop
dec
lock
inc
js
imul
outsl
jne
lods
push
scas
push
add
cmp
test
push
push
sahf
mov
fcoms
call
xchg
mov
mov
cmpsl
jle
adc
mov
xor
sbb
enter
pop
dec
xor
in
cmp
mov
sbb
into
jmp
jno
shll
adc
cmpsl
cmp
fwait
je
mov
testl
lret
sar
aad
add
pop
ret
sbb
add
test
test
repz
jmp
add
nop
mov
jno
stos
cltd
stc
mov
dec
jne
jbe
xchg
sub
mov
addb
mov
pop
push
adc
xchg
frstor
je
jmp
inc
out
cwtl
aaa
iret
bound
arpl
cwtl
insl
xor
or
lds
jo
or
add
pop
xor
lret
jg
add
incl
cmp
pop
xchg
mov
push
or
neg
push
out
mov
jecxz
push
adc
xor
aaa
dec
mov
sub
test
push
fucomi
subl
daa
push
fsub
sarb
daa
test
sub
mov
fldl
test
mov
jnp
jle
or
mov
addr16
cmp
lods
popf
cmpsb
sbb
ret
lods
mov
int3
sbb
lods
cmp
stos
insb
mov
js
mov
inc
push
gs
push
pop
int
adc
nop
jae
adc
adcb
mov
xchg
sbb
add
dec
adc
pop
rcrb
popa
cmp
jb
or
adc
jae
and
xchg
xchg
outsb
cmp
lret
iret
add
xor
sti
dec
insl
mov
mov
idiv
xchg
push
inc
push
notl
test
jns
mov
pop
movsb
mov
cltd
outsb
stos
mov
loop
leave
scas
stos
or
icebp
rcl
movsb
hlt
fsubs
cmp
rcr
mov
add
sahf
pop
roll
hlt
call
adc
xchg
mov
sub
call
loop
pop
mov
mov
mov
push
mov
out
jne
test
lea
pop
or
mov
mov
jecxz
addl
bound
loope
scas
movsb
fwait
testl
outsl
inc
sbb
pushf
repnz
add
lea
mov
or
mov
pop
push
fisubrs
std
pop
push
and
add
inc
test
cmpb
or
inc
pop
cmp
adc
adc
dec
mov
and
clc
dec
or
add
les
rorl
fwait
leave
pop
mov
out
add
push
jmp
xchg
fmulp
mov
push
pop
ret
pop
test
pop
and
mov
rcrb
xchg
rcll
jno
cltd
divl
cld
sub
push
cmp
cmpsb
mov
mov
add
rcll
clc
xchg
addr16
pop
sbb
repz
in
icebp
push
jl
mov
lar
fcmovnu
inc
ss
clc
mov
mov
pop
sub
adc
addl
sbb
test
sub
cmp
mov
in
rcrb
cmpsl
jno
inc
sub
add
scas
xchg
loopne
cmpsl
jg
cmp
icebp
xlat
mov
sti
rorb
xchg
out
mov
shrb
cmp
jo
push
xchg
adc
mov
and
add
test
mov
sbb
mov
cld
int3
pop
jle
notb
js
js
pop
dec
xchg
loop
lea
cmpsb
push
outsb
scas
adc
sbb
inc
dec
aaa
xchg
lods
xchg
pop
pop
ret
fwait
mov
insb
pop
cmpsl
mov
inc
push
das
cmc
lret
inc
sbb
mov
repnz
xchg
pop
sub
dec
xor
js
jne
cwtl
xor
add
ret
lcall
inc
lahf
and
imul
add
mov
and
mov
jle
cld
iret
icebp
test
es
xor
in
inc
add
jle
or
jle
push
enter
stc
sbb
cwtl
xlat
jmp
xor
je
inc
pop
or
mov
pushf
je
sub
scas
push
xor
and
iret
xchg
cmp
js
int3
ss
and
fisttpl
ss
sbb
push
xor
xor
ljmp
inc
cmpb
rcrb
xorb
cmp
mov
out
in
popa
adc
adc
mov
ret
fildll
sbb
and
test
movsl
adcb
addl
cmp
test
mov
jne
hlt
addl
in
enter
jle
test
scas
ret
call
cltd
dec
loopne
or
mov
add
cli
xchg
outsb
push
mov
jg
xlat
push
push
mov
jns
repnz
mov
lds
aam
jbe
cmpsb
jno
mov
pop
sub
decl
or
lcall
subl
mov
sti
into
xchg
jnp
sub
adc
xchg
insl
mov
outsb
mov
test
aam
jae
cmp
pop
jb
dec
rclb
sbb
inc
and
in
bound
aaa
and
int3
xchg
push
and
rcrl
ret
cmp
xchg
xchg
push
out
iret
dec
dec
rcrb
popl
add
rol
pop
fcmovne
add
in
gs
push
push
pushf
xchg
mov
mov
sub
push
dec
int
push
adc
add
sbb
jle
mov
insb
add
loop
ljmp
shl
es
out
xchg
iret
xor
sbb
xlat
xor
pop
repz
add
jmp
mov
hlt
scas
pop
adc
dec
cmp
mov
gs
ljmp
push
dec
mov
cmpsb
fcmove
cltd
loope
addl
add
sub
test
lcall
mov
push
test
out
add
or
and
xorb
push
xchg
adc
mov
push
jg
mov
int
out
shll
call
cmpsb
jp
aad
inc
xchg
lds
pop
lods
sbb
xchg
outsl
lea
push
jne
sub
mov
in
sbb
pop
in
jne
inc
aaa
xor
or
mov
sbb
mov
jb
xor
pop
dec
mov
cmpsb
rclb
pusha
nop
fdivr
inc
adc
cmpl
mov
ljmp
adc
mov
mov
out
lds
mov
sbb
xchg
leave
call
arpl
cmp
push
mov
add
ficoml
cmp
je
or
mov
ds
mov
mov
inc
loop
stos
adc
test
push
xchg
pop
insb
ja
pop
push
sub
cmp
jne
stc
dec
fiadds
ja
shl
mov
add
enter
mov
mov
popa
cmp
and
inc
or
sbb
outsb
sarb
clc
pop
mov
and
or
mov
mov
mov
int3
or
imulb
pop
mov
test
mov
decl
lock
out
pop
inc
push
xor
int
mov
loopne
mov
pop
pop
test
stc
lret
pop
cmp
mov
jle
mov
push
popa
sbb
dec
or
fstps
psubusb
jmp
mov
lds
cmp
in
fisubrl
jnp
mov
insl
mov
push
mov
test
fidivl
adc
mov
bnd
and
xor
pop
jmp
xor
cs
pop
negb
mov
ljmp
push
aad
mov
shrl
add
xchg
imul
sbb
cmp
rcl
and
dec
fcompl
xor
xchg
jg
xchg
iret
cmp
add
into
pop
push
fidivs
bound
mov
dec
mov
mov
jb
inc
shlb
add
popa
xor
jl
inc
les
xchg
leave
mov
ljmp
ja
test
adc
cmp
cmpsb
push
aam
jb
cmc
sbb
outsb
test
ds
pusha
ret
sbb
xchg
cmp
mov
sbb
cld
push
test
pop
popa
imul
jne
addl
xor
dec
mov
jbe
and
sahf
dec
mov
or
ret
divb
das
insl
adc
mov
inc
push
push
iret
scas
add
arpl
arpl
rorb
shll
xor
arpl
repz
dec
gs
push
lods
sbb
data16
xchg
add
and
sti
push
lock
mov
pop
mov
push
movsl
repz
nop
aam
or
lods
psllq
mov
push
pop
ss
adc
stos
aas
cmpsl
xchg
xchg
xlat
add
test
inc
cmp
shlb
sbb
inc
sub
mov
push
inc
and
add
jle
das
xchg
iret
xchg
mov
ret
pushf
cmpl
dec
clc
xchg
push
jb
nop
lret
cmp
insl
in
dec
nop
fldenv
mov
adc
gs
clc
mov
mov
into
mov
jno
lea
push
xchg
jp
pop
call
adc
adc
pop
xor
stos
jge
lret
xor
and
pop
test
xor
push
lahf
pop
sbb
sti
cmc
sub
bound
mov
xchg
jae
sub
rcrl
xor
mov
int
or
add
enter
out
add
sbb
inc
shrb
stos
add
ljmp
test
cli
adc
jle
mov
fwait
sti
cmp
sub
jne
sbb
paddw
cmp
ds
icebp
cmp
or
fcmovu
mov
cli
lret
dec
and
lret
cmp
mov
sarb
hlt
push
mov
sar
sbb
decb
test
pop
ret
mov
jns
push
stos
jae
iret
xor
repnz
fldenv
mov
das
add
lods
add
aas
in
xor
xchg
push
push
push
data16
into
xchg
dec
scas
push
insl
ret
in
cli
int
notl
pop
sub
inc
test
cld
stc
bswap
pop
les
adcl
loop
lcall
xchg
addr16
cmp
push
aaa
sbb
out
loope
movsl
jge
lahf
test
rolb
repz
add
out
and
loopne
inc
cs
adc
sub
pop
fnstenv
jb
push
notl
lret
daa
in
in
hlt
inc
ficoms
leave
out
adc
and
jnp
outsl
ret
sahf
cmp
rcpps
push
aad
inc
pop
xor
iret
sahf
insl
sub
or
sub
test
dec
shrb
ss
sbb
and
lcall
inc
popf
jmp
lcall
call
mov
jl
and
jne
loop
cmp
in
mov
add
aam
ror
push
and
xchg
push
cvtdq2ps
outsl
dec
pop
js
xchg
gs
mov
cld
xchg
popa
inc
fisttps
addr16
jno
pop
adc
lret
cwtl
aas
shl
call
jl
test
lcall
xor
fcoms
dec
shrl
nop
push
stos
push
xchg
fs
xor
mov
imul
jge
in
push
add
adc
aad
arpl
cmp
add
jp
mov
les
test
js
adc
je
divb
dec
das
sbb
aam
adc
sub
xor
sub
mov
mov
hlt
lret
popf
lock
push
adc
mov
repnz
push
xchg
or
inc
adc
fs
fyl2xp1
mov
dec
push
xchg
daa
pop
sti
dec
movsb
clc
lahf
cmpb
pushf
pop
fs
adcb
xchg
fisubrl
dec
cmpsl
insb
stc
dec
mov
xor
xchg
stc
frstor
jmp
add
repnz
mov
cmpsb
lock
push
hlt
lret
insl
xchg
stos
je
sbb
mov
jle
xchg
cmpsb
js
or
stc
lret
xchg
insl
shlb
push
stc
push
jne
sahf
data16
dec
or
xchg
sub
sub
pop
lea
mov
inc
and
mov
jl
xchg
cwtl
mov
or
adc
adc
pop
mov
cmpl
fwait
mov
test
xchg
push
inc
xchg
int
pop
call
cmc
aaa
pop
xchg
fisttpll
xlat
sub
mov
out
aam
nop
popf
ja
das
and
imul
dec
jle
mov
push
push
fs
ja
dec
test
out
xor
lock
fdivrs
mov
cwtl
cmp
sbb
or
xchg
loope
sub
aaa
xchg
ja
push
out
test
add
or
loop
cmp
arpl
dec
mov
dec
sub
xchg
adcl
inc
mov
fbld
adc
call
inc
xchg
stos
inc
mov
sahf
add
jl
out
or
outsb
psubd
sub
mov
sub
int
and
mov
xchg
mov
push
je
out
jl
je
les
rcrb
inc
jno
and
shl
out
jb
cwtl
aam
push
rcr
aad
lret
xor
push
ret
orb
push
inc
cmp
lock
jnp
fldt
leave
pop
incb
fistpll
and
movl
popa
adcl
fldcw
or
dec
sub
dec
jns
ss
hlt
cld
pop
out
loope
mov
cli
add
sbb
xchg
aam
pusha
xchg
push
dec
sub
mov
testb
jne
mov
iret
es
inc
mov
push
imul
mov
dec
xchg
mov
stos
xlat
push
jno
mov
or
xchg
dec
not
and
notb
or
dec
orb
sbb
or
cli
out
jecxz
and
loopne
cmpsb
mov
adc
xor
out
shrl
lcall
addb
loope
rcr
jecxz
mov
enter
or
xchg
cmp
lods
push
ljmp
cmp
adc
cmp
xor
fsubrs
movsb
xchg
ljmp
dec
out
jp
and
pop
nop
mov
or
popf
dec
in
cmpsl
push
pop
repz
loopne
or
cmp
scas
mov
xor
jmp
leave
lods
xchg
jae
daa
nop
mov
jmp
cmpsl
fwait
xchg
test
loope
ja
outsb
test
xor
in
movsb
scas
lea
pop
dec
jno
test
mov
sbb
pop
cltd
out
popf
jb
inc
out
stos
gs
xchg
ja
iret
dec
sarb
push
pushf
cmc
mov
pop
sbb
push
jl
jno
cli
clc
insb
sbb
out
jne
jge
mov
jmp
xchg
jno
test
push
or
mov
arpl
pop
dec
jnp
loope
jmp
lret
lahf
test
xchg
rolb
lea
jno
ss
xchg
jmp
lahf
out
adc
sbb
inc
dec
out
add
jp
fstl
call
pop
inc
bound
lds
push
fldl
in
jge
jno
pop
cltd
clc
mov
xor
pop
scas
jl
hlt
mov
push
inc
dec
pusha
ret
rcll
fcomps
xor
fsubs
push
stos
mov
or
adc
lds
add
mov
into
int
pop
pop
mov
pop
sahf
out
pop
adc
pop
sub
pop
adc
cmp
out
pop
xor
push
cmp
fisttpll
pusha
adc
sub
pop
test
call
subl
call
and
shrl
push
addr16
mov
out
sbb
cmp
push
shll
popf
pop
push
push
xchg
sarl
cmovno
mov
xchg
push
or
pushf
les
push
cvtps2pd
popf
adc
stc
and
xchg
dec
adc
idivb
dec
jns
hlt
cmp
cmpsb
js
xchg
mov
cmp
pop
fsubrs
jo
cmc
or
xor
ficoms
push
sbb
adc
pop
inc
shlb
movsb
testl
or
sub
add
jns
inc
out
pop
mov
mov
jp
lds
jo
aas
leave
or
sahf
push
int3
cmpsb
inc
shlb
sub
sub
dec
das
addb
pop
std
dec
cmpsb
and
sbb
out
push
mov
cmpsb
adc
or
sub
leave
xchg
adc
in
ss
arpl
stc
clc
and
hlt
call
cs
stos
mov
pop
enter
mov
add
fidivl
mov
out
pop
ljmp
pop
mov
repz
sbb
nop
pop
inc
cltd
js
jmp
fwait
insb
mov
pushf
xchg
push
pushf
lods
popf
lret
call
xor
pop
or
cmp
and
push
add
mov
sub
mov
not
ret
mov
cmp
xchg
add
jb
aam
push
xor
sahf
xchg
in
in
add
daa
fsubrs
mov
addr16
jecxz
fldcw
mov
inc
add
lea
adc
enter
popa
push
mov
insl
test
push
xchg
arpl
cmp
repnz
push
sbb
arpl
mov
or
es
sub
cli
sub
dec
stos
imul
cmp
popf
and
cld
pop
decb
xlat
xchg
mov
mov
shrb
jmp
sub
sub
lea
xor
icebp
in
lds
repz
mov
lahf
pop
fwait
pop
cld
inc
jb
call
inc
popf
loope
dec
es
mov
ja
mov
jge
dec
jbe
repnz
sbb
inc
imul
or
loop
shlb
lock
and
ss
movsb
outsb
xlat
cmp
cltd
jae
hlt
into
xor
lods
sub
jl
repnz
xor
mov
sbb
mov
jl
aam
inc
clc
imul
cmpb
pop
dec
xchg
xchg
aad
in
push
insl
xchg
arpl
lds
cmp
mov
sbb
add
imul
mov
inc
push
mov
cmpsl
jl
jge
imul
pop
pop
lcall
scas
push
repnz
dec
mov
in
and
adc
pop
cmp
into
add
pop
shlb
hlt
mov
test
loope
mov
addr16
and
mov
jmp
xor
jno
rolb
mov
mov
add
rorl
cmpsl
jl
adc
adc
in
and
jg
mov
pusha
or
lahf
jbe
mov
add
movsb
pop
fnstsw
pop
lds
insl
inc
add
add
cmp
sub
andb
add
hlt
push
ja
push
ret
cmp
pop
xor
arpl
jmp
pop
ja
lea
cld
add
jg
mov
adc
das
movsl
xchg
pop
xor
pop
cltd
lahf
pusha
in
push
fiadds
shl
and
and
jp
cmp
in
test
fistpl
push
mov
xchg
push
rcll
ret
popf
lods
pop
mov
fbld
sbb
aaa
leave
es
jbe
mov
pop
das
mov
or
cwtl
or
sbb
cmp
mov
rcrb
ret
lock
gs
xchg
jbe
movsb
adc
and
sbb
test
cmp
cmp
stos
faddp
mov
mov
scas
xchg
popa
inc
lcall
orb
mov
popa
aam
adcl
mov
into
ss
dec
dec
mov
mov
roll
and
inc
jns
into
in
adc
push
or
ftst
add
xor
hlt
push
cmpsb
pop
shrl
stc
inc
adc
gs
dec
xchg
jno
fildll
and
xchg
outsl
into
and
and
cmp
repnz
test
enter
and
dec
or
dec
mov
dec
xorl
sub
sti
cli
push
outsl
orl
scas
xchg
mov
inc
hlt
inc
xchg
push
cli
fildll
rclb
jno
or
cmp
mov
das
insl
stos
mov
adc
inc
clc
lds
js
add
cs
lcall
lods
ds
mov
daa
pop
or
xor
push
psubw
not
dec
loopne
cmp
cmp
push
pop
clc
ljmp
jecxz
out
mov
pop
test
ficompl
scas
inc
repz
mov
mov
adc
push
loope
inc
mov
dec
rorb
sub
adc
into
fwait
popa
dec
outsl
or
xor
mov
adc
aaa
xchg
sbb
mov
int3
ret
mov
shlb
cmove
inc
arpl
test
sub
mov
and
xchg
cmpsl
pop
and
sarb
movsl
or
je
into
jo
rorl
ret
sub
int3
sub
scas
mov
loop
loope
mov
cltd
subl
lds
push
scas
sbbl
pusha
push
shrb
call
imul
mov
fbstp
rorl
sub
out
inc
fwait
jne
or
shrb
hlt
dec
mov
sbb
jmp
scas
popf
cli
sub
call
cltd
aaa
leave
int3
dec
push
dec
xchg
xor
out
js
arpl
mov
sub
rol
adc
pop
daa
inc
pop
push
sahf
and
loope
pop
add
xlat
and
xchg
outsl
pop
jb
push
fcomip
call
or
pop
andb
hlt
mov
cltd
ja
jbe
cmp
xorl
les
prefetch
xchg
in
shlb
ds
inc
fsubp
inc
mov
movsb
inc
div
add
in
stc
subb
lret
clc
push
or
add
insb
inc
mov
sbb
mov
popf
in
xor
push
inc
aas
rcrb
pop
pop
sbb
inc
pusha
aad
jl
jnp
xchg
cmpsl
repz
bound
jns
pushf
cmp
addb
cmpsl
mov
xchg
push
fisubs
mov
lock
pop
int
iret
shrb
sub
in
mov
data16
into
cmp
ds
lods
stos
shll
lods
stos
test
dec
int
jae
push
in
jge
test
in
adc
inc
jno
dec
jne
aad
outsl
sbb
push
inc
sbb
jmp
mov
push
adc
xchg
inc
decb
mov
pop
ss
push
mov
adc
test
clc
dec
mov
insl
xor
adc
xor
add
cmp
lret
popa
adc
pop
fwait
sbb
add
sbb
push
addl
xchg
dec
xor
cmp
std
loope
inc
cltd
icebp
cmp
in
xchg
rcll
lea
push
mov
stos
and
jecxz
aam
jmp
sub
dec
xor
adc
pusha
sub
or
mov
jmp
insb
stos
lret
mov
test
in
mov
or
fucomi
hlt
aad
xchg
fiadds
pop
and
jnp
cmc
dec
es
xchg
jo
popf
fwait
movsb
mov
nop
gs
mov
into
and
adc
lea
leave
imul
xlat
mov
add
imul
pop
adc
aaa
sbb
or
xor
aas
sbb
pop
mov
test
test
mov
dec
insb
or
xchg
inc
or
push
icebp
mov
or
mov
xor
mov
xor
icebp
push
int
ret
mov
lock
add
pop
test
in
leave
and
fwait
outsb
mov
movsb
xorl
test
ja
rcll
popf
out
push
mov
pop
mov
push
sub
popf
fisubrl
jns
jp
inc
inc
jbe
mov
hlt
dec
test
int3
adc
test
mov
lahf
dec
adc
xchg
jbe
mov
into
push
jae
adc
gs
ljmp
repnz
jle
loop
pop
xorl
mov
shl
out
insb
xchg
dec
popf
inc
stc
push
lahf
cmp
sub
rorl
daa
or
imul
nop
fs
jnp
jns
out
addr16
mov
push
dec
incl
movl
bound
inc
adc
insb
imull
cmp
jmp
mov
cmc
test
out
dec
out
loop
shlb
xchg
pop
inc
movsb
subb
cmpsl
add
mov
into
mov
subb
add
mov
jg
aas
and
inc
pand
mov
out
mov
mov
cld
sahf
xchg
mull
std
popf
inc
fwait
fs
jns
pop
dec
pop
scas
dec
sub
ret
dec
inc
adc
sub
add
fistpll
adc
ret
loopne
xlat
fistps
jnp
and
shrl
iret
pusha
xchg
mov
aam
or
pop
jns
sbb
jg
or
sti
rorb
movlps
inc
mov
jb
xor
mov
loope
test
mov
pop
pushf
push
adc
roll
sahf
push
in
xor
mov
pusha
push
movsl
ret
stos
rol
lock
loope
jge
mov
arpl
stc
or
jp
roll
dec
fstp
scas
jno
push
dec
and
aas
movsb
mov
repnz
sahf
xchg
cld
mov
insb
dec
sub
push
adcb
fmuls
std
mov
add
mov
leave
pop
loop
adc
mov
jno
fs
push
daa
xchg
cmp
inc
and
or
inc
pop
jae
mov
imul
sub
push
arpl
out
pop
mov
test
inc
and
hlt
lahf
dec
mov
mov
insl
out
jo
movsl
insl
clts
subl
mov
pusha
jo
mov
rorb
mov
je
stos
adc
xor
aad
inc
es
pop
sbb
ja
jae
mov
or
cmp
push
mov
fbstp
in
call
int3
and
cmpsb
lcall
or
insl
lds
jne
popa
cltd
repnz
scas
mov
cld
fs
xor
add
xor
or
jae
test
int3
ret
fsub
mov
or
xor
push
mov
inc
xorl
cwtl
cli
dec
jp
std
jno
loope
dec
stos
lock
sub
insl
shll
lds
cltd
popa
mov
addl
ss
cmpsb
push
inc
cs
dec
loopne
popf
je
cwtl
hlt
pop
popf
imul
insb
sub
xor
rcrb
rcrl
xchg
pop
mov
nop
in
push
mov
push
pop
bound
mov
lds
cmp
outsl
mov
jnp
mov
pop
sbb
and
or
ret
mov
aad
shlb
and
lret
mov
add
adc
sbb
sti
ljmp
adc
mov
xchg
ja
inc
jno
pop
insl
insb
dec
mov
dec
xchg
cltd
pop
cmpsb
mov
cmpsb
clc
cmp
pop
les
push
and
and
jecxz
popf
sbb
sub
xchg
test
lret
or
xor
pop
sbb
clc
inc
icebp
jecxz
add
ja
pop
fwait
inc
jo
pop
mov
or
pop
jnp
sbb
or
mov
cmp
sub
rolb
sub
or
aas
lret
call
xchg
fmull
jne
mov
into
aaa
mov
dec
and
fdivs
pop
mov
int
lock
jne
pop
lret
inc
sub
jbe
cmp
dec
rorb
cli
js
test
xor
mov
dec
das
ja
shrb
mov
lock
pop
dec
mov
mov
hlt
cltd
or
sbb
int
adc
pop
push
sbb
adc
mov
pop
cmpsb
push
std
loope
adc
fidivrs
cwtl
sbbl
pop
sbb
xchg
cmpsb
push
mov
mov
shll
sub
in
xorl
adc
ret
aaa
dec
xor
dec
nop
xor
mov
jnp
xchg
sbb
les
sbb
aam
jbe
popf
inc
mov
mov
add
pop
jae
or
stos
ficoml
fwait
mov
outsl
and
push
xor
adc
sarl
adc
nop
jb
sub
add
sahf
mov
pop
jge
into
inc
push
rorb
jo
rcrl
adc
sub
les
nop
pop
cmc
jl
in
push
popa
bound
aaa
mov
mov
adc
push
sbb
lret
nop
cld
push
adc
inc
adc
scas
jne
mov
mov
leave
in
ficoml
mov
out
and
ja
jae
pop
mov
or
pop
test
lea
jae
imul
sbb
les
out
out
dec
mov
sbb
movsb
repnz
sub
adc
in
imul
pop
aad
dec
mov
push
daa
push
pavgb
mov
in
fnstsw
aad
stos
pop
mov
mov
aam
push
shll
lock
aaa
jge
adc
mov
ss
shll
aad
inc
mov
sbb
push
dec
and
mov
jne
xor
mov
mov
outsl
xor
ss
jp
bound
push
lds
dec
cmp
cwtl
or
push
mov
or
push
pop
adc
sbb
stos
mov
out
xchg
xor
in
or
or
dec
daa
out
inc
rolb
xor
lahf
cmp
add
push
push
call
imul
xor
sub
daa
icebp
sub
xchg
inc
add
lcall
mov
cmp
xor
jmp
cmc
sub
sub
push
inc
out
jae
fwait
int
in
push
or
fidivl
rclb
pop
xchg
orb
mov
loop
pop
and
sub
sub
inc
push
je
xor
ret
sbb
not
or
lret
mov
ljmp
xor
jbe
mov
mulb
inc
sbb
sar
icebp
mov
mov
pop
mov
push
jo
dec
popa
push
fwait
mov
push
pop
sub
daa
std
sbb
int3
test
leave
push
mov
in
leave
adc
mov
fdivrp
sub
into
mov
outsb
insb
adc
pop
mov
shlb
push
jge
mov
add
adc
sbb
cs
cmp
cmp
popf
cmp
and
mov
test
or
cltd
pop
inc
lcall
nop
in
or
test
jae
inc
mov
mov
mov
popa
cmpsl
pop
inc
xor
imul
pop
pop
mov
das
inc
lds
icebp
jge
icebp
inc
aas
aad
or
xor
dec
outsl
or
ds
inc
js
or
in
pop
and
dec
ret
js
and
dec
orl
es
mov
test
scas
sub
add
scas
cmc
xor
pop
and
daa
out
sbb
inc
rolb
xchg
jae
mov
sub
roll
out
jnp
fsubl
mov
pop
add
add
mov
test
outsb
leave
sbb
jge
xchg
jle
mov
les
xchg
ss
mov
xchg
xchg
dec
gs
addr16
jecxz
jge
adc
adc
lock
and
call
push
pop
mov
in
pop
mov
sbb
inc
lds
cmpsb
mov
sarb
pop
inc
ret
adc
ja
fcoms
push
add
shlb
push
loop
mov
loopne
jl
push
ds
inc
test
sbb
mov
dec
xchg
pop
fwait
outsb
cltd
clc
enter
jne
out
sbb
je
pop
xchg
sub
das
test
lds
or
hlt
enter
insb
push
ret
sub
psubusw
mov
sub
cmp
mov
push
mov
xchg
inc
mov
shrb
mov
lods
jecxz
call
xor
dec
outsl
mov
test
in
xchg
push
dec
imul
ljmp
mov
sbbb
mov
sahf
lods
mov
xor
int3
in
nop
les
adc
pop
stos
in
idivl
xorb
lretw
mov
repnz
scas
pushf
inc
jecxz
xlat
inc
stos
pop
in
sahf
mov
add
sub
mov
push
ja
sbb
fwait
pop
jns
dec
sbb
les
in
pop
gs
orl
xor
sub
aad
mov
cmpsl
xorl
shr
icebp
cmp
add
and
sbbb
stos
ret
movsl
mov
pop
jae
or
sbb
ret
das
sbb
mov
inc
pushf
adc
jp
insb
dec
sbb
in
or
inc
nop
out
hlt
cmp
roll
aam
shrb
jle
inc
addl
or
mov
dec
xchg
jp
xchg
aaa
jne
sub
lods
aaa
sub
xchg
cmp
cmpsl
xchg
mov
aaa
xchg
ds
lret
les
cli
mov
addb
mov
add
shll
and
mov
and
ret
pop
and
mov
add
or
jg
movsb
cltd
push
sbb
sbb
add
cmpsl
dec
sbb
ds
stos
mov
xchg
pusha
and
hlt
cmp
fwait
outsl
pop
shlb
loop
adc
rorb
mov
pop
enter
pusha
adc
loop
sub
scas
mov
xchg
and
mov
jae
pop
sub
roll
xchg
icebp
loopne
add
and
pop
xor
into
cld
sub
xchg
jge
mov
adc
xchg
call
push
push
andl
add
mov
sbb
xor
out
in
jae
mov
pop
mov
shlb
enter
xchg
cwtl
pop
es
and
fidivrs
xchg
test
and
jge
add
or
and
dec
sbb
mov
incb
fmulp
mov
outsb
inc
mov
das
jnp
lret
scas
mov
sub
hlt
or
daa
and
std
idiv
mov
mov
in
push
test
xor
mov
int
mov
dec
pop
aam
adc
sahf
popa
mov
aam
lods
aad
mov
inc
mov
lock
push
scas
inc
popf
nop
dec
ret
push
sbb
mov
inc
lock
sbb
scas
ja
mov
out
push
rcrb
insl
mov
and
mov
mov
xchg
shrb
stos
lcall
inc
enter
xor
push
gs
insb
test
subb
xlat
stc
sbb
scas
cmp
loop
adc
mov
call
push
xor
std
call
bound
push
call
ljmp
adc
faddl
sahf
or
repz
lea
pop
int3
pop
cmp
push
outsl
add
mov
fcomps
dec
and
xor
test
cltd
xchg
sub
xlat
pop
mov
mov
lds
in
insb
xor
mov
sarb
jne
and
jmp
popl
and
push
cwtl
and
xchg
das
int
bound
jb
pushf
loope
push
std
push
mov
dec
leave
inc
sti
mov
sbb
gs
fbstp
add
inc
in
pop
pop
sarb
sbb
inc
pop
xchg
push
mov
mov
mov
dec
mov
into
dec
mov
jnp
jle
or
mov
out
adcb
xchg
dec
cmp
xor
test
jg
jae
cmp
or
adc
leave
sbb
mov
test
nop
pop
in
cmpl
xor
xor
jns
dec
daa
hlt
mov
push
push
or
mov
jge
push
scas
pop
test
imul
dec
or
test
dec
and
shll
pop
push
push
cwtl
pop
pop
or
out
stos
cmp
hlt
stc
in
shll
decb
insl
add
scas
or
sub
fcmovnu
add
xor
test
lods
mov
xchg
add
cmp
mov
inc
xchg
push
sub
mov
movsl
sti
stos
xchg
dec
or
or
loop
mov
mov
sbb
pop
xchg
mov
clc
lods
repnz
mov
xchg
std
shlb
fninit
adc
gs
xchg
out
call
ficompl
es
adc
lret
nop
rcll
pop
push
fisubs
or
cmpl
push
push
pop
adc
xchg
hlt
dec
mov
clc
mov
and
test
jp
mov
es
and
push
sub
sti
cmp
push
xchg
addr16
jo
adc
popf
shlb
ja
loope
sbb
push
push
rorb
inc
imul
cmp
lret
and
scas
mov
inc
mov
push
bound
fdivl
sarb
fdivs
jl
imul
mov
test
bound
dec
leave
jo
faddl
pop
ja
pop
fsubrl
inc
pop
inc
out
fcomps
mov
in
mov
cmp
mov
je
xchg
lret
push
in
es
cmpsl
sbb
xchg
xchg
pop
or
jle
mov
xor
mov
mov
popa
lcall
in
test
leave
test
push
ret
cwtl
xchg
gs
fwait
insb
ret
test
inc
in
cmpsb
repz
adc
mov
sbb
out
sbb
adc
pop
cmp
call
not
mov
and
fmulp
mov
add
or
or
xchg
jge
mov
popf
in
pop
pop
in
xchg
push
cmp
mov
and
xchg
or
lea
sbb
jae
sbb
ds
or
aam
jp
outsb
imul
clc
add
mov
lock
out
ljmp
data16
add
push
push
and
xchg
inc
bswap
stos
xchg
jns
cmp
lahf
push
cmpsb
mov
es
jmp
xchg
ss
or
popa
sar
xchg
mov
cltd
mov
into
cmp
ds
loope
push
adc
push
xchg
mov
dec
xor
dec
adc
fcomps
hlt
ljmp
mov
test
xor
mov
xor
mov
cmp
je
fwait
inc
or
pop
jmp
pop
mov
pop
icebp
adc
clc
pop
sub
jmp
fwait
xchg
lcall
or
pop
std
xor
pop
shr
ss
inc
sub
mov
mov
and
cmp
negl
cmpsb
xchg
pushf
mov
sbb
jne
popf
jnp
pushf
into
jmp
pop
stos
in
adc
cmp
test
jnp
inc
ljmp
fsin
inc
sbb
shlb
push
es
push
lods
daa
ret
mov
xchg
movsl
outsb
inc
adc
rorb
hlt
mov
xorl
ror
inc
xlat
mov
fcompl
dec
arpl
jns
shll
mov
push
arpl
jle
jne
mov
cmp
or
ss
xchg
lods
fs
lret
push
test
fcomps
shll
xor
test
movsb
lods
bound
mov
lcall
adc
xchg
push
pushf
push
lock
inc
push
pop
cld
add
mov
call
mov
and
cmp
mov
pop
jecxz
inc
shll
adc
lds
roll
xor
xchg
ret
in
cli
dec
fs
cmp
mov
fadd
rcr
stos
mov
pop
ficoml
push
and
es
icebp
xchg
fsts
or
sbbb
sub
sbb
xchg
mov
repz
xor
adc
loopne
test
in
xor
loopne
test
ds
rcll
xor
ffreep
outsb
mov
cs
shrl
int3
adc
movsl
cwtl
xchg
push
ret
clc
stos
filds
push
mov
jl
scas
add
mov
pop
lea
scas
adc
lahf
std
in
loope
les
or
and
mov
sti
pop
lret
and
movsb
jne
mov
int
popf
mov
inc
lea
push
cmp
jae
clc
out
xchg
fdivs
xchg
hlt
or
imul
and
jb
sub
mov
xchg
inc
cmp
pop
std
or
sahf
icebp
jne
shll
or
jbe
push
enter
fsubrs
sub
lret
adc
cld
dec
je
jbe
std
stos
pop
inc
outsb
mov
cld
loopne
push
mov
pop
jae
sub
inc
popf
xchg
incl
jl
push
cmpsb
add
mov
roll
insl
jl
mov
dec
int
popa
out
aam
shr
inc
call
xchg
pop
push
mov
mov
pusha
dec
lcall
imul
sbb
inc
addr16
or
fwait
icebp
aad
icebp
shll
jecxz
jle
push
jbe
xor
cmp
lods
shlb
mov
in
or
cmp
shll
dec
mov
aaa
add
daa
jne
fsts
and
dec
test
push
pop
mov
mov
bound
and
push
rclb
lret
xchg
mov
cmpsl
aad
pop
and
cltd
jae
or
mov
mov
test
imul
push
mov
inc
sub
xor
arpl
sarl
mull
xchg
xor
arpl
repnz
je
insl
lcall
jbe
mov
xchg
ds
cmovge
cmp
fstpl
pop
jb
mov
and
push
int
scas
repnz
pop
fiaddl
pop
stos
add
push
mov
jg
iret
rcl
sbb
add
mov
pmullw
icebp
rcrl
insl
push
aam
negb
out
jae
mov
nop
sub
jecxz
fdivrs
push
adc
cmp
sarb
js
cmp
cmc
out
inc
or
repnz
inc
add
iret
aam
scas
xor
in
sub
pop
call
addr16
clc
je
cmp
dec
leave
jo
out
rol
addr16
jb
in
jge
jmp
and
add
inc
sbb
fisttpl
shll
sub
lcall
fstpt
mov
lea
invd
pop
cmp
idivl
lock
rclb
ret
stos
xchg
pop
sub
xchg
jnp
inc
lods
dec
jbe
push
sbb
cmp
sbb
adc
push
jns
bound
psubsb
enter
stos
popf
mov
pushf
ds
aam
pop
xchg
add
aaa
lea
scas
pop
add
pushf
stos
shll
fs
and
repz
mov
push
mov
out
adc
dec
addl
sub
loope
ret
pop
in
push
pop
mov
shrb
and
jae
mov
addl
jnp
jg
push
sbb
sub
adc
es
push
and
and
mov
cmp
xchg
jle
cmp
pop
faddl
lods
mov
lods
scas
lret
lret
inc
sbb
mov
mov
cld
frstor
loopne
jg
mov
movsb
mov
aas
shr
sub
mov
fistl
sub
and
sbb
pop
cmp
cmp
cli
dec
lahf
icebp
mov
aad
or
pop
stos
sbb
mul
test
arpl
pop
lcall
shlb
cltd
out
sar
sti
outsb
arpl
clc
dec
lock
cmp
movsl
in
aas
movsb
in
mov
mov
movsb
in
jmp
shl
out
xor
roll
sub
mov
lahf
cmp
sahf
xchg
push
daa
outsb
pop
dec
inc
push
shll
adc
mov
dec
stos
js
daa
cwtl
fcomps
add
dec
pusha
call
jno
pop
mov
sub
test
fcoms
sti
dec
push
loope
aaa
adc
leave
mov
lock
jge
xchg
and
mov
rorl
sub
or
or
mov
sbb
dec
scas
mov
dec
sbb
sbb
pop
pop
cmpsl
jecxz
adc
stos
jle
insb
or
rcrb
pusha
aas
inc
mov
fdivrs
fs
xchg
mov
inc
test
sbb
ds
xchg
insl
mov
test
pusha
mov
ljmp
mov
and
je
xor
dec
xchg
adc
lods
add
call
or
fcmovne
mov
mov
cmpb
fisubrs
adc
dec
cmpsb
ja
into
adc
pop
mov
mov
add
pop
je
test
add
ja
sub
cld
or
test
pop
filds
add
xor
in
rcll
or
xor
jb
cmp
data16
loop
shr
or
or
ret
stos
add
sbb
mov
xchg
bound
sub
into
pushf
test
cmpsb
std
mov
jl
imul
and
inc
popa
sahf
cmp
and
push
pop
leave
aaa
mov
js
out
dec
movsb
sub
mov
je
jno
adc
fsubrs
push
in
faddp
lods
vmwrite
icebp
fnstenv
and
imul
adc
gs
fists
adc
cmp
push
push
mov
adc
rclb
inc
ficompl
cltd
icebp
mov
inc
adc
sbb
cld
out
int
les
leave
lcall
cwtl
lahf
cmc
xchg
jp
lds
lret
and
popa
mov
ja
mov
pop
mov
data16
into
fs
outsb
push
sub
dec
enter
mov
mov
mov
cltd
cwtl
or
insb
popf
mov
mov
sarb
sbb
sub
xchg
and
jb
add
pop
call
jae
fwait
cmp
in
mov
jl
ret
or
mov
outsl
pop
add
jp
sti
in
lods
xor
and
cmp
jecxz
mov
in
adc
repz
mov
ret
jo
inc
sbb
ds
fdivrl
push
mov
sbb
sti
fimull
lret
or
sbb
dec
in
mov
sbb
dec
xor
bound
dec
cs
dec
lods
dec
popa
xor
out
jmp
cmp
loope
aad
jl
push
jns
push
aaa
loope
lcall
inc
es
adc
fiaddl
mov
gs
hlt
jo
lret
xchg
push
int3
movsl
pop
adc
fcoml
daa
orl
dec
imul
icebp
cmpsb
scas
fs
testl
lods
inc
xchg
jecxz
cmc
aaa
ret
adc
in
aam
cltd
or
add
push
stos
loopne
jle
addb
adc
and
ret
mov
sbb
test
leave
lods
xchg
dec
call
pop
mov
mov
cld
es
repnz
push
sbb
pop
scas
cmpsl
nop
neg
sbb
and
in
popa
stos
test
pop
sub
adc
xor
jmp
int3
and
dec
stc
mov
dec
popa
mov
or
push
adc
mov
or
push
or
push
jne
mov
les
mov
roll
or
or
push
or
cltd
flds
sbb
sbb
push
push
push
les
xor
xacquire
loope
sbb
std
cmp
jp
ret
shll
pop
outsl
mov
jae
maxps
cmpsb
sbb
mov
shll
daa
clc
dec
pop
lds
xor
jo
imul
push
mov
shrb
imul
call
mov
dec
jle
gs
aas
mov
xor
out
dec
xor
pop
mov
inc
cmp
sbb
xchg
jnp
pop
dec
and
push
addr16
or
xor
shl
and
xlat
sub
call
adc
aas
loopne
cli
mov
and
or
push
stos
jge
stc
xchg
mov
ret
mov
and
dec
mov
pop
add
subb
pusha
push
lods
mov
lret
insl
or
cmp
inc
pop
mov
cld
or
mov
dec
mov
add
enter
aad
sbbl
mov
imul
shll
data16
jno
icebp
out
fldl
jno
adc
icebp
pop
or
aad
cmpsl
in
sbb
and
jmp
fidivrs
outsl
pop
stc
add
mov
dec
sbb
jp
mov
sbb
ljmp
mov
mov
loopne
in
sbb
dec
sbb
jb
xor
adc
push
imul
push
push
cli
sar
inc
dec
les
sub
xor
outsb
das
dec
pusha
pop
inc
mov
stos
cmc
inc
xchg
or
push
fdivs
clc
sub
mov
mov
repz
shlb
add
cmpsb
xchg
out
call
and
fidivrs
into
aad
into
ret
jbe
dec
in
sbbb
mov
lahf
shlb
and
and
in
mov
sti
call
pop
arpl
cld
jbe
jne
push
sarl
mov
dec
and
loop
aas
popf
add
pop
mov
sbb
jns
test
ljmp
movsl
sub
adc
and
cmc
outsb
xchg
inc
mov
outsl
mov
and
mov
gs
les
sbb
and
xchg
arpl
outsl
pop
shll
push
das
loope
and
aaa
fnstsw
fadds
or
xor
xor
addr16
jo
adc
or
aad
pop
test
fisubrs
adc
fnstenv
stc
xchg
inc
sub
sbb
call
xor
inc
pop
push
dec
pusha
mov
out
add
loopne
mov
pop
orb
pop
insl
loope
lret
pop
daa
mov
push
mov
aad
cmpsb
fs
cmp
xrelease
mov
loop
xchg
cmp
lods
cmpsl
jecxz
adc
in
int3
cmc
cmp
fdivl
xor
leave
sbb
inc
rolb
pusha
scas
jno
imul
fldt
cmp
into
xchg
dec
sbb
loope
and
mov
jge
dec
mov
imul
das
cld
rorl
adc
pushf
xor
daa
pop
add
test
fs
jmp
xor
mov
push
scas
pop
sub
add
out
jnp
sub
sub
jp
xchg
shll
cmpsl
xchg
in
stos
imul
mov
lods
cld
call
outsl
push
lods
and
xor
movsl
push
dec
scas
filds
inc
test
clc
sbb
hlt
cmpsb
inc
jl
lods
lea
mov
or
enter
scas
jl
push
daa
fnstcw
and
divl
shr
roll
insl
sub
adc
rorl
jecxz
add
mov
icebp
and
fmuls
popl
out
ss
xchg
push
adc
bound
xchg
ja
lret
sbbb
mov
mov
dec
and
shr
mull
arpl
sub
enter
scas
insl
inc
sub
jge
adc
inc
mov
push
mov
fbld
mov
xor
inc
mov
imul
cld
xor
mov
sub
orl
out
es
push
jnp
add
and
mov
pop
and
les
cmc
dec
negl
push
xor
push
sahf
lcall
fsubl
test
cmpb
imul
cmpsl
sub
lcall
mov
inc
dec
jle
add
push
cld
push
movsl
jo
scas
dec
out
jle
sub
gs
sub
push
sub
dec
fldenv
adc
test
int3
cmp
xchg
dec
lcall
jne
push
ja
sbb
inc
mov
mov
and
dec
stc
int
pop
clc
or
push
xor
cmp
cmp
cmp
push
movsl
mov
or
stos
push
and
nop
jo
push
inc
sub
jg
pop
imul
adc
mov
lea
sbb
icebp
mov
dec
pop
outsb
xchg
xor
ja
leave
xchg
pusha
fstpl
jl
push
stos
lret
rorb
popf
push
push
mov
dec
fs
sbb
or
in
fmuls
xlat
out
lahf
cmpl
scas
add
push
add
cld
or
and
xor
dec
lds
dec
js
inc
inc
aas
call
jns
xor
and
jnp
mov
adc
in
stos
cmpsl
jcxz
lahf
aas
pop
cmpsl
sbb
fimuls
add
jae
mov
dec
xor
sar
add
cltd
mov
flds
sbb
fdiv
mov
fadd
test
out
mov
jp
jae
sbb
jg
daa
or
cmp
ret
movsl
lcall
stc
inc
jb
lods
subb
arpl
popf
outsb
out
icebp
fs
xchg
roll
lds
xlat
mov
adc
pop
add
or
push
cltd
outsl
push
dec
aaa
adc
push
inc
and
lret
lds
sub
loopne
mov
jecxz
stc
push
fs
push
faddp
xchg
mov
ret
fmull
mov
xor
popf
add
mov
out
lahf
pusha
push
inc
mov
sub
pop
nop
sahf
pop
hlt
ror
sbb
push
pusha
data16
xor
inc
ss
jo
jp
stc
mov
push
shr
xor
ss
adc
or
shll
scas
fwait
xchg
shrl
push
jecxz
loopne
repz
mov
in
and
xor
clc
add
or
xlat
pop
lret
inc
xor
les
les
jmp
movsb
cltd
imul
and
and
std
shll
mov
xchg
sbb
push
xchg
js
aad
dec
jle
sub
pop
repnz
and
adc
and
xchg
test
and
int
fadd
mov
add
or
sub
xchg
or
in
cmp
jecxz
xor
and
adc
xor
aad
pop
cmp
dec
inc
mov
sbb
scas
stos
xadd
sub
cld
lods
inc
and
jl
sbb
sbb
pop
movsl
push
xlat
push
push
push
jbe
xor
push
adc
outsl
mov
dec
sbb
fnstenv
push
aas
mov
push
insb
xor
mov
pop
lock
arpl
mov
add
pop
sahf
gs
shl
mov
mov
jp
xchg
aam
popa
leave
cmc
dec
add
addl
or
mov
lods
mov
inc
nop
gs
sub
ss
push
in
mov
hlt
inc
mov
cmp
xchg
jno
out
mov
imul
sti
dec
xor
ds
loopne
xor
iret
fstp
addb
or
inc
push
enter
sbb
xchg
jbe
pop
repz
js
push
movsb
jne
and
xor
ljmp
add
add
sbb
inc
imul
and
push
mov
cmp
lds
mov
clc
adc
pop
sub
jge
jae
psllq
push
scas
adc
nop
leave
imul
adc
sbb
data16
cs
sbb
mov
jbe
cmpsb
dec
jno
push
push
cmp
repz
mov
mov
rolb
cli
in
xchg
pop
xchg
cmp
popa
mov
mov
cmp
rcrb
nop
aaa
mov
arpl
xchg
adcl
movsl
jo
hlt
and
pop
in
cld
ret
daa
adc
call
mov
xor
xchg
in
add
shrl
xor
cmp
out
stc
shlb
insb
pop
pop
xor
shll
xor
call
inc
cmp
out
inc
shr
sbb
sbb
or
cltd
imul
jae
xchg
push
int3
cmp
pop
addr16
cmp
sub
ja
dec
imul
dec
movsl
es
js
inc
sbb
jae
cwtl
sub
sub
cmpsb
jecxz
in
cmp
dec
mov
outsb
bound
xor
fdivrl
enter
dec
sbb
fsubl
mov
pushf
ds
nop
loop
leave
xlat
out
mov
push
aas
repnz
cli
js
and
or
cmp
lret
sbb
out
adc
mov
daa
xchg
aam
fadds
and
cmp
jae
or
fimuls
aam
adc
loope
mov
push
pop
jno
xlat
pop
jns
neg
xchg
xor
loop
push
int
push
in
xchg
pop
arpl
ss
mov
cmp
or
in
in
push
aad
decl
pop
notb
sub
movsb
sub
sbb
test
movsl
mov
xchg
push
pop
insl
or
rorb
sbb
test
mov
and
arpl
gs
popa
and
add
push
mov
add
sahf
cmp
fdivl
add
xor
sbbb
dec
in
xchg
sbb
sarb
or
lcall
lahf
test
xor
pop
inc
incb
add
dec
dec
hlt
loop
or
jo
data16
popf
xor
lret
pop
rcl
sbb
adc
lods
fadd
pop
add
sahf
in
add
ds
lret
mov
xorl
xchg
mov
insl
pop
jb
pop
dec
outsl
movsl
and
repz
shll
cwtl
add
jbe
outsb
in
adc
push
pop
push
xchg
int3
mov
je
cmp
and
push
loope
mov
push
scas
lock
dec
test
aaa
lahf
loop
test
mov
sub
cmp
int3
jb
in
cmp
and
test
iret
movsl
cmp
dec
test
insl
int
sbb
sub
mov
fsubr
fcoms
inc
and
pusha
cmpsb
cmp
sbb
dec
xchg
mov
xchg
push
test
js
fwait
in
les
xchg
imul
pop
push
outsb
icebp
fistps
inc
movsl
cmp
sahf
or
cmp
es
sbb
test
and
mov
fs
inc
in
subb
cmpsl
mov
mov
std
dec
sbb
jp
scas
addl
mov
push
popf
pop
xchg
jne
mov
popf
pop
mov
sub
jmp
xchg
push
lods
and
or
cmpsb
or
adc
inc
mov
and
test
ret
das
jb
or
mov
jmp
jge
pop
scas
add
int3
sub
mov
icebp
cli
jmp
or
jbe
mov
xchg
fs
mov
xchg
fmul
add
outsl
mov
mov
jecxz
jb
call
mov
cltd
add
movsl
js
lds
imul
inc
punpcklwd
mov
lods
in
add
shl
push
not
push
ret
mov
popl
inc
mov
sbb
mov
int
add
and
xchg
movsb
andl
cmp
or
js
iret
out
cmp
rcrl
push
data16
cmp
dec
movl
push
out
out
pop
stos
into
enter
cli
aas
mov
shlb
repnz
out
das
lahf
xchg
dec
in
sti
out
rcll
mov
xchg
gs
cli
sub
lcall
pop
dec
or
dec
das
mov
dec
xchg
cwtl
pop
cmp
in
scas
pop
jns
xor
imul
xor
or
les
sahf
aam
xchg
test
mov
sub
and
outsb
pushf
add
stc
mov
pop
fwait
pop
mov
in
sbb
pushl
arpl
clc
jne
jmp
lock
fsts
test
lahf
call
push
xor
ljmp
dec
sbb
inc
stos
cmp
scas
xchg
das
call
jmp
icebp
popa
movsl
pop
out
mov
aam
lret
scas
cwtl
insb
dec
sub
out
pushf
jle
daa
test
mov
jno
push
xor
dec
push
xchg
testb
add
push
inc
cli
rolb
ficoml
sub
inc
xor
push
movsb
xchg
cmpsl
mov
xor
rorl
icebp
push
insl
cld
push
mov
add
push
scas
and
xchg
lods
aas
int
fsubrs
mov
cli
hlt
jp
or
lret
push
sbb
in
push
mov
sbb
jne
jg
add
dec
jbe
mov
sub
fbstp
out
lret
jp
xor
cld
fsubl
shrl
sti
fbstp
mov
dec
push
aaa
imul
scas
test
sbb
hlt
inc
sbb
mov
jno
leave
adc
out
sti
mov
mov
push
test
mov
arpl
movsl
lods
cwtl
dec
stc
mov
sahf
out
outsb
dec
in
ljmp
cmp
jmp
loope
xor
mov
fxch
testb
ret
test
shr
test
dec
or
scas
adc
out
dec
cmpsl
pop
imul
mov
fstpt
or
fwait
adcb
push
cmpsb
jmp
fs
out
loop
mov
rorb
lock
ficoml
inc
fwait
xchg
popa
push
hlt
out
inc
js
add
add
and
inc
push
sbb
lcall
push
xchg
jno
sub
rcrl
out
hlt
jnp
xor
loopne
push
push
or
or
bound
push
sbb
test
dec
and
xchg
jmp
jl
cmp
je
adc
xor
pop
jmp
lcall
xchg
fnsave
test
test
rorb
fwait
icebp
stos
jns
push
and
pop
xchg
int3
xchg
pushf
iret
jg
sub
mov
mov
mov
fcomps
or
xchg
fwait
jb
sbb
bound
repnz
lds
cltd
jmp
ja
not
xchg
mov
mov
adcb
sarb
rcll
xchg
pop
in
add
sbb
cli
shlb
aam
nop
lds
or
mov
dec
cs
in
enter
mov
push
pop
repz
call
cmc
sar
fwait
ja
mov
mov
push
popf
adc
adc
or
imul
sub
inc
mov
xor
inc
roll
xchg
arpl
jl
cmpsl
sti
cli
push
rorb
pop
test
adc
push
into
aaa
test
cmpsl
cmpsl
pop
push
push
outsl
inc
sub
shrb
rcrb
jae
sbb
iret
mov
cmc
das
push
xchg
jae
inc
pop
jnp
xchg
lods
xchg
call
cli
scas
dec
and
bswap
push
and
add
and
or
enter
ret
shl
jmp
fnstcw
pop
xchg
inc
fdivs
sbb
xor
loopne
cmp
pop
sarb
outsb
and
iret
aaa
enter
out
cwtl
pop
pushf
pop
jo
rcrb
xchg
jne
in
cmp
mov
jle
xchg
xor
outsb
mov
repz
sub
fdivp
fiadds
outsl
out
call
dec
push
lods
inc
dec
pop
imul
repnz
or
cld
outsb
int
les
in
mov
imul
add
jno
xor
int
arpl
test
in
mov
dec
call
in
pushf
mov
adc
test
xor
lahf
add
pop
jg
shrl
sub
jecxz
or
inc
aad
dec
sarb
jmp
movaps
les
cs
cmp
daa
roll
leave
cmp
arpl
aaa
pop
inc
das
sti
add
bound
lret
mov
je
mov
adc
stos
dec
loop
stc
mov
lock
sbb
inc
lea
and
fnstcw
pop
sbb
test
cld
loop
pop
and
out
add
das
xchg
into
push
cmp
out
dec
lods
nop
or
in
sbb
pop
mov
jg
sub
jb
int
adc
adc
sbb
mov
aaa
lret
and
inc
loop
out
xor
fwait
div
test
lea
add
aad
push
aad
lods
add
lods
lea
jo
popa
add
clc
mov
ss
fcmove
in
shll
fsubrl
and
aam
fwait
hlt
fldenv
in
jl
or
xchg
add
cmp
aas
stos
cmpsb
stos
xchg
and
daa
pop
mov
fdivrs
sbb
xlat
stos
push
pop
mov
sub
popf
cmp
or
jno
addr16
int
cmp
pop
test
mov
shrb
insl
and
sbb
into
pushf
les
out
sbb
std
aas
jne
sub
outsl
push
nop
int3
pop
js
je
movsb
pop
mov
or
mov
mov
inc
imul
rorb
cmp
notb
or
add
adc
xchg
dec
loope
mov
pop
mov
in
xor
in
shrb
aad
rorb
mov
push
insl
sub
rol
sub
das
enter
inc
lahf
and
pop
and
or
shll
mov
lock
in
call
jnp
or
push
cs
call
inc
daa
imul
sbb
in
push
cmp
out
insl
mov
sbb
jnp
lods
mov
sub
fstpt
mov
dec
xor
outsl
push
andb
mov
aas
bound
mov
cld
fldt
or
imul
push
lods
out
stos
push
inc
mov
js
lods
sbb
data16
movsb
sub
test
push
test
inc
lods
cmp
adc
push
jmp
or
mov
mov
jp
push
cs
shll
inc
das
test
push
mov
popf
pop
mov
mov
in
sar
sbb
incl
dec
adcl
xor
outsb
pop
mov
mov
adc
pop
mov
xchg
jbe
inc
push
hlt
fsubrs
jge
scas
clc
xor
ja
test
mov
cli
insl
pop
ja
shlb
aam
pop
nop
std
out
mov
roll
jp
dec
mov
push
jne
push
push
fwait
inc
into
pop
sub
jb
bt
aaa
movsb
aas
lock
xchg
push
xchg
or
int
xchg
xchg
jnp
aas
movsb
push
dec
push
neg
mov
nop
xchg
divb
gs
jo
into
imul
test
jp
aam
jle
xor
inc
jb
lods
or
xor
mov
mov
test
lock
insl
push
xchg
or
cmpsb
ds
cmp
cmc
daa
out
and
dec
icebp
xor
fwait
jl
iret
mov
jg
into
ret
sub
jnp
dec
das
out
sub
xchg
xchg
daa
shl
xchg
insl
pop
mov
roll
enter
nop
test
nop
enter
and
push
int
jb
mov
push
cmp
fidivrs
out
paddsb
jno
out
mov
pop
mov
push
sub
and
insl
adcl
and
lret
fidivrl
xor
fmul
sbb
and
rorl
mov
jbe
ja
jp
outsl
jge
dec
shl
xchg
es
popa
cs
inc
jno
rcrb
sbb
jge
icebp
xchg
or
or
ds
or
sbb
mov
pusha
movsl
or
repz
xlat
je
leave
int3
xor
pop
adc
fs
add
mov
push
aas
xchg
out
mov
stos
pop
sub
or
push
and
sbb
adc
and
inc
xlat
pmuludq
xor
in
sub
call
loop
lcall
fiadds
mov
pop
push
mov
sbb
dec
or
sbb
mov
mov
push
test
outsb
cmp
ja
mov
je
sbb
sbb
leave
jmp
adc
dec
inc
fwait
sub
lock
xor
loopne
js
cwtl
adc
push
mov
xor
insl
stc
jae
cmc
inc
xchg
pusha
sub
fidivs
and
push
shlb
jg
mov
adc
incb
sub
push
mov
mov
add
outsl
cmp
lret
xor
mov
cmp
push
mov
aam
daa
jae
xchg
push
pop
lcall
int
lret
out
cmp
js
jne
sub
test
adc
orl
clc
inc
mov
in
leave
adc
push
std
dec
mov
or
jl
lcall
mov
movsl
aad
call
fs
cmc
cmp
out
ljmp
adc
cli
adc
pop
mov
mov
xchg
aam
fdivr
xor
stc
jg
jae
mov
cmc
leave
cmc
pop
sub
mov
mov
fs
sbb
sbb
xchg
out
shrb
pop
scas
sub
sub
mov
mov
imul
xor
mov
dec
negl
adc
adc
dec
sbb
sub
cmp
sbb
adc
inc
or
pop
mov
jge
xchg
push
aad
mov
and
inc
outsb
mov
orl
jo
mulb
mov
mov
dec
addb
lret
ja
fldl
adc
lea
sbb
dec
mov
and
in
and
std
sub
cmp
cmc
mov
rcrl
xor
bound
jne
hlt
stos
push
cmp
xchg
mov
sub
or
mov
subb
lock
mov
jae
lods
test
int
or
cli
and
mov
negl
and
sbb
pop
xor
push
pusha
inc
cmp
cmpsb
mov
stos
daa
fwait
pop
adc
or
mov
lcall
sub
cmpsb
jmp
add
jne
test
xchg
push
lahf
push
inc
lahf
repnz
xor
faddl
imul
pop
or
imul
jbe
mov
xchg
inc
sub
push
dec
popa
stos
inc
push
rclb
and
or
dec
enter
xlat
movsl
cld
sbb
das
lods
enter
push
add
mov
mov
out
mov
sbb
xor
lret
testl
mov
jge
mov
xlat
xchg
pushf
clc
cmp
jb
insl
or
xchg
mov
fisubs
out
scas
mov
fistpl
ss
pop
fildl
jne
cmove
movsl
sbb
inc
lods
in
test
jo
vpsubusb
mulb
add
mov
sbb
movsb
inc
fidivrs
mov
pushf
push
pop
test
push
xchg
ret
push
xor
les
or
pop
jg
lea
jmp
dec
out
xor
xor
and
mov
das
inc
push
sbb
ljmp
and
sbb
xchg
sub
inc
jge
sbb
xor
mov
movb
sbb
lret
or
int
pushf
les
cmp
cli
mov
repnz
xchg
dec
inc
add
addl
cmpsl
jmp
lods
or
arpl
inc
in
xchg
xor
aad
push
mov
out
adc
addl
inc
std
lret
popf
jo
jmp
call
fsubp
xor
jge
mov
xchg
jmp
int
mov
xor
imul
dec
dec
mov
dec
push
pop
fildl
push
fnsave
xchg
xchg
ss
dec
add
adc
and
pop
dec
pop
push
xlat
sahf
les
or
cld
xchg
dec
xor
push
insl
cmpsb
insl
and
pop
divb
js
lahf
lcall
movsl
pop
scas
mov
mov
je
or
jge
adc
lcall
cwtl
stc
inc
sarl
fldcw
jecxz
test
cmp
mov
int3
pop
mov
push
arpl
xor
inc
mov
fimuls
das
movb
dec
jae
xchg
cs
jae
js
fwait
sbb
mov
xlat
ss
xor
sbb
mov
pop
mov
fbstp
adc
mov
inc
add
mov
sub
mov
xchg
xlat
push
test
repz
add
cli
mov
fs
and
xchg
jle
mov
in
sbb
and
imul
aam
in
dec
and
dec
cltd
jl
je
adc
add
daa
outsl
xchg
mov
enter
outsb
or
xchg
pop
xor
loop
mov
jmp
scas
jle
pop
loop
xchg
pop
sbb
mov
adc
dec
scas
or
push
adc
and
fsts
push
cmp
dec
xchg
cwtl
pop
mov
and
mov
shll
or
icebp
adc
xchg
pop
dec
xchg
gs
dec
cltd
daa
xchg
push
or
int3
inc
xor
imul
ret
insl
mov
test
push
push
cld
sub
jg
cmp
jbe
das
adc
cmpl
addr16
add
int3
fdivs
das
jno
mov
in
push
or
or
sbbb
jmp
clc
pop
mov
pop
es
icebp
xor
push
ja
imul
addr16
pop
fdivs
add
sahf
xchg
add
dec
pop
icebp
aaa
mov
jno
pop
rcll
mov
jecxz
cmp
scas
mov
jbe
or
loop
fbld
into
sti
add
mov
mov
or
pop
pop
jae
pushf
imul
pop
inc
cmp
or
enter
int3
cmp
aad
mov
xor
mov
jmp
cmc
adc
pop
adc
pop
aas
sbb
sahf
fs
mov
sbbl
test
dec
sub
dec
sbb
loop
lods
mov
es
in
sub
mov
jmp
push
int
xchg
inc
mov
sbb
movsl
sbb
fcmove
mov
mov
daa
fwait
int3
add
into
cltd
jge
sarb
shr
adc
cmp
pop
pop
aam
inc
sbb
mov
pop
cmp
lods
repnz
push
sub
lods
inc
add
stos
cmpsl
push
addr16
lret
cli
dec
test
xor
scas
loop
xchg
cmpsb
push
jb
adc
into
cltd
movsb
mov
aaa
sti
mov
scas
pop
and
fldcw
ret
and
notb
cmp
ds
jp
inc
sbb
or
xlat
pop
sub
cli
jmp
jl
dec
cld
fldcw
outsb
jnp
mov
outsl
in
imul
jg
jle
sub
js
sub
outsl
inc
or
stc
out
cmc
mov
pop
pop
add
and
cmp
dec
pushf
movsl
mov
cltd
jnp
stos
out
stos
push
mov
sbb
in
div
add
inc
dec
fucom
lds
lods
push
bound
inc
mul
mov
daa
xlat
sbb
pop
in
mov
xchg
ds
add
inc
pop
pop
pop
mov
sti
cltd
paddb
sarb
mov
dec
inc
lods
push
mov
jge
not
sbb
repnz
dec
and
adc
insb
outsl
hlt
iret
addb
push
adc
loop
jl
cmp
mov
push
aas
jecxz
lea
and
sub
ficomps
outsl
jle
push
into
outsl
sub
or
in
jp
gs
jno
xlat
xchg
cmp
enter
mov
ljmp
out
aad
adc
mov
or
ds
xor
mov
sub
int
and
and
aam
insl
fucomi
cmp
mov
mov
call
cmp
leave
add
rclb
lcall
xchg
test
das
pop
rclb
shll
cli
jo
push
int3
mov
fiadds
lock
in
icebp
insl
pop
jo
xchg
out
out
enter
outsl
cwtl
jo
inc
sub
adc
insl
pushf
fdivs
nop
je
lods
push
pop
aad
mov
btsl
inc
pop
mov
dec
pushf
pop
dec
in
mov
fists
stos
fwait
aad
fwait
pop
mov
fidivs
xchg
push
jge
or
es
daa
les
inc
outsb
jl
nop
add
push
outsl
mov
and
leave
pop
sbb
imul
sub
movsb
push
and
sub
fbstp
into
cmpsl
lahf
add
jo
imul
ds
pop
add
push
mov
sub
loopne
sbb
js
fstpt
mov
or
sub
scas
outsb
sbb
or
or
mov
shlb
jle
cmpsb
sarl
jl
add
push
lds
fbld
push
xchg
fidivl
mov
cmp
pop
inc
mov
jb
jle
mov
mov
cltd
add
lea
lcall
or
pop
icebp
loope
mov
mov
imul
xchg
loopne
nop
or
and
and
xchg
mov
outsb
pop
mov
sbb
aas
mov
cmp
mov
xor
mov
lds
cmp
out
xchg
ja
cmp
mov
push
jle
pop
ds
cmp
arpl
inc
pushf
add
aam
or
dec
inc
test
pop
fsubrl
push
mov
rcrb
mov
les
sbb
sti
ffreep
fwait
jne
daa
paddw
stos
push
push
das
or
jmp
fwait
ja
cmp
sti
jae
push
ljmp
dec
sub
out
fnstcw
das
or
mov
sub
sbb
daa
mov
in
jl
clc
jmp
push
enter
jno
test
lock
out
lea
or
pushf
imul
inc
leave
ljmp
pop
rol
cli
cltd
imul
mov
or
and
insb
xor
xchg
jno
xchg
bound
rep
cmp
jns
sbb
add
xor
push
cld
movsl
addb
mov
outsl
push
jmp
pop
mov
push
inc
cmp
cltd
ljmp
fistpll
fisttpl
adc
mov
jb
adc
jns
popf
inc
pop
arpl
mov
add
data16
mov
jmp
in
repnz
mov
mov
mov
std
fcomps
arpl
jne
mov
imul
jo
stos
mov
cmp
out
test
jge
orl
sbb
fsubr
adc
mov
popa
rcl
jg
mov
ds
out
mov
in
push
ljmp
push
rolb
mov
repz
addr16
add
inc
jb
mov
push
dec
sbb
rcll
inc
decb
adc
mov
pop
push
cmp
fidivrl
mov
add
jmp
fdivrl
jns
sub
sbb
push
xor
dec
les
sub
lret
lcall
jnp
lret
sub
lret
mov
xchg
loope
pop
jb
mov
sbb
cltd
mov
into
test
inc
mov
xchg
sub
jns
pop
jl
inc
push
dec
xor
iret
mov
dec
xchg
addr16
test
sahf
outsl
dec
cwtl
stc
ljmp
stc
mov
inc
subl
sub
mov
test
lods
test
adcl
or
adc
pop
dec
sahf
cld
cli
dec
push
inc
push
test
jl
adc
insb
inc
jb
mov
sbb
cmc
lret
jmp
sbb
js
std
fists
or
lret
ret
push
int
decb
or
lea
lock
sbb
jo
sub
jp
push
jb
cmp
mov
lods
sbb
jb
sbb
addr16
xchg
dec
fs
and
xchg
daa
inc
bound
pop
mov
loope
push
rolb
loopne
movl
das
jnp
das
fsubl
aas
aad
jecxz
addr16
jbe
ret
imul
rolb
add
mov
add
adc
mov
lods
xchg
cmp
and
sub
js
cmpsl
dec
lods
fdivrl
fadd
popa
dec
je
or
sub
xchg
cmp
xchg
xchg
outsl
mov
out
lods
cli
sbb
jl
ja
inc
mov
loopne
mov
mov
test
dec
cltd
jno
jno
out
inc
sbb
sbb
lods
in
ret
jg
xchg
rcrb
rolb
xchg
and
sti
push
loopne
cmpsb
nop
push
inc
es
loopne
mov
push
push
icebp
outsb
pop
stos
nop
jmp
cmp
sbb
or
inc
cwtl
jo
sti
push
mov
xor
mov
rorb
call
and
or
repz
xchg
out
dec
dec
in
stos
test
add
push
xor
in
cs
int
scas
subl
or
aad
push
xchg
ss
cmpsb
insb
push
xor
push
adcb
jp
mov
jecxz
andl
sar
fists
push
aaa
rorb
and
fnstenv
pop
sub
mov
fbstp
icebp
cmp
sub
andb
push
ja
sub
std
outsb
movsl
adcl
out
pop
push
pushf
arpl
pop
insl
movl
ret
adc
loopne
data16
daa
push
add
mov
outsb
and
mov
add
imul
mov
aas
adc
mov
pusha
clc
and
repz
adc
pop
mov
pop
cli
sahf
ret
mov
sub
out
shll
xchg
shlb
pop
and
push
sbb
movsb
fwait
mov
dec
pop
mov
inc
xor
pop
out
dec
outsl
sbb
aad
jecxz
and
subb
rol
sti
push
sbb
xchg
rcpps
in
sub
fdivrl
mov
push
and
fstpl
jmp
cmp
test
add
cmovnp
lea
sahf
hlt
aaa
aam
ror
pop
daa
pop
pop
dec
dec
pushf
iret
xchg
ljmp
sbb
shrb
shlb
sti
int
xchg
jno
xor
aam
lahf
rorb
js
stos
mov
pop
xor
push
test
pop
xchg
xchg
adc
mov
jp
push
aam
inc
jns
jb
cmpsl
pop
mov
cs
add
jbe
pop
cltd
rorl
aas
cmpb
push
mov
mov
roll
cwtl
imul
rcll
pop
adc
xor
sub
or
and
hlt
cmp
mull
cld
negl
inc
pop
cmp
arpl
xchg
imul
push
icebp
sti
inc
sti
inc
dec
dec
mov
int3
sbb
xor
xchg
call
sub
loopne
ret
push
dec
cmp
pop
inc
sbb
push
inc
sub
fimuls
dec
mov
mov
cmp
sbb
xor
mov
imul
pop
cmp
or
shlb
add
iret
and
add
lods
lods
jl
and
out
push
gs
push
popa
xorl
mov
mov
push
jb
stc
insl
lret
out
leave
mov
out
jmp
xor
and
mov
adc
jo
sbbl
in
repnz
fidivrl
jl
movsb
add
rcll
mov
mov
jle
pusha
clc
popf
aad
jge
daa
and
adc
test
sbb
push
fnstsw
cmp
jnp
or
out
xor
lds
out
adc
je
xor
ss
test
mov
cltd
push
insb
andb
pop
int
cmp
and
fiaddl
cli
sti
or
dec
add
and
pop
mov
mov
sbb
jae
mov
dec
arpl
mov
xor
loopne
sub
jp
adc
test
jle
lret
push
sti
test
jmp
xor
stos
imul
popa
sub
pop
out
scas
popl
jmp
dec
adc
out
rcrl
icebp
lret
lahf
jmp
ret
and
xor
dec
mov
push
inc
cld
adc
call
stos
aad
push
repnz
mov
lods
pop
test
push
mov
cmp
jle
test
mov
mov
icebp
pop
aad
mov
frstor
xor
daa
out
fldt
fisubrs
mov
push
pop
pop
lea
jne
and
mov
scas
jle
inc
and
outsb
pusha
inc
adc
mov
push
ss
andb
stos
cmpsb
xchg
outsb
adc
sbb
adc
inc
divb
test
fs
jae
lods
and
mov
adc
lahf
cmp
lahf
jecxz
jecxz
mov
clc
call
js
push
pusha
push
jae
mov
mov
push
outsb
aaa
cli
cwtl
inc
jle
hlt
pop
neg
pop
fbstp
adc
int
sub
addr16
and
data16
cmp
mov
add
pop
mov
xor
xchg
inc
sahf
sub
cmp
icebp
add
adc
jnp
repnz
mov
xor
fcomps
lods
gs
popa
and
dec
addr16
sti
sahf
mov
sbb
mov
xchg
movzbl
stos
push
lock
shl
mov
int
pop
ret
shl
lock
adc
fsubs
ret
jbe
mov
xchg
dec
inc
not
fwait
push
icebp
test
dec
inc
in
inc
std
adc
outsb
adc
cmpb
dec
outsl
lock
stos
sbb
repnz
je
test
shrb
xchg
push
fistps
jle
sbb
xchg
push
jecxz
lea
inc
mov
dec
outsb
movsb
xchg
xor
data16
hlt
pop
leave
sti
mov
clc
xlat
out
stc
mov
dec
icebp
je
das
gs
xor
jo
sbb
loop
out
add
and
std
rolb
negb
int3
inc
daa
or
or
cli
clc
sti
lret
enter
and
cmp
cmp
mov
cmp
pop
out
repnz
cwtl
and
repz
clc
cmp
sub
data16
add
sti
sbb
in
repz
mov
das
ljmp
out
mov
inc
cs
fbld
add
in
test
adc
push
mov
xlat
outsb
adc
xchg
mov
jle
jl
or
jno
push
rolb
push
loopne
jnp
add
outsl
cltd
lahf
push
movsl
repz
mov
mov
jno
popf
push
incl
mov
mov
sbb
adc
dec
add
movsb
jne
xchg
out
in
cmp
insl
sarl
sub
sbb
push
out
add
push
cwtl
push
popf
xchg
inc
mov
repnz
inc
xchg
out
cmpsl
sarl
sbb
mov
cltd
pop
shr
sub
jns
fisttpl
daa
call
dec
mov
dec
sub
xor
addb
and
aam
loope
or
test
lea
push
or
cmp
jge
xchg
jns
add
cwtl
add
nop
mov
dec
leave
add
push
mov
data16
or
daa
inc
les
pop
cmp
cmp
sar
sub
sti
stos
pop
xor
add
test
es
add
mov
inc
xor
or
jns
jb
mov
dec
mov
test
mov
sub
cli
jbe
ljmp
shrb
cld
inc
push
insb
mov
test
aad
fstpt
fcomi
shrl
icebp
in
mov
cli
mov
out
repnz
pop
or
aas
movsb
movsl
dec
into
xor
insb
shlb
enter
jg
add
mov
ret
jle
push
aaa
repnz
int3
ds
in
int3
mov
push
and
jo
xor
adc
lahf
jb
repnz
ljmp
fwait
cld
push
xor
inc
xchg
xor
rcr
and
pop
adc
push
popf
pop
jno
jle
mov
sub
push
lret
into
bound
jnp
in
lahf
into
test
sub
iret
pushf
bound
jne
icebp
adc
jge
stos
ja
das
jno
cmpsb
addr16
inc
adc
stos
xchg
jg
cmp
lcall
stos
jge
imul
sbb
shrb
roll
les
orl
lret
aaa
and
or
adc
hlt
cmp
push
mov
and
imull
cli
clc
push
out
repnz
lret
iret
test
and
push
xchg
dec
sub
int3
insb
add
or
or
fnstsw
add
fildll
outsb
push
xor
fadd
xchg
push
inc
mov
dec
dec
adc
arpl
repz
mov
xchg
cs
sub
push
movsb
out
pop
xor
push
insl
std
pop
pusha
ja
xor
mov
in
mov
sarb
in
outsb
fs
and
ror
mov
and
push
sbb
loop
xchg
mov
sbb
test
dec
mov
std
into
jg
cmp
leave
aaa
mov
or
inc
imul
xchg
outsb
ss
pop
mov
dec
mov
cmp
mov
je
andb
cmp
lret
xchg
or
sti
icebp
lret
cltd
jno
sbb
jne
push
dec
sub
jno
test
insl
mov
sbb
mov
int
pusha
and
int
idivb
aas
popf
imul
add
and
fidivrs
pop
arpl
and
popl
sbb
movsl
aas
sbb
lods
pop
push
ljmp
dec
movsl
dec
mov
iret
cli
jbe
cmp
lret
dec
mov
sbb
xor
mov
aam
das
xchg
pop
inc
test
imul
add
cmp
sbb
inc
fsubs
add
mov
arpl
fcoml
call
jge
sbb
pop
movsb
adc
mov
sbb
sbb
adc
mov
std
cmp
push
iret
inc
dec
sub
ja
out
pop
jle
jbe
daa
out
inc
sub
leave
imul
aaa
jle
mov
lcall
andb
jnp
mov
cmp
addl
scas
adc
jo
jg
mov
inc
mov
sub
loope
adc
subl
movsl
cwtl
and
jns
cmc
ret
push
fidivs
inc
sub
pusha
or
jl
xor
icebp
add
jne
mov
je
sbb
lret
push
inc
loop
imul
lock
mov
loop
push
leave
jle
pop
fs
inc
and
inc
xchg
jnp
cltd
icebp
jnp
pop
xchg
mov
jg
fldcw
mov
cmc
and
pop
jne
jne
jbe
dec
cs
notb
insl
sub
stos
imul
mov
ds
test
or
mov
cmp
jmp
fnsave
jo
jge
cmp
add
mov
pushf
mov
fiaddl
into
push
loop
pop
arpl
in
lcall
dec
enter
imul
xchg
dec
aad
xchg
dec
loopne
ret
and
pop
std
outsl
bound
lcall
adc
int3
out
nop
mov
pusha
mov
lods
adc
cmpsl
jmp
pop
jg
fwait
pop
outsl
test
loop
mov
adc
cmpsb
imul
addl
loope
sub
fcomp
loope
in
cltd
imul
mov
mov
rorl
popf
jae
stos
in
ss
les
nop
test
xor
inc
jo
arpl
pop
loopne
or
and
xchg
repz
fisubs
add
sub
cmp
adc
push
rorb
testb
bound
push
sbb
aas
in
cld
dec
sbb
cmp
mov
cmp
loope
and
jno
shlb
and
gs
push
sbb
popa
stos
dec
lret
push
outsl
bound
pop
sti
ds
push
sahf
jl
mov
dec
pop
pop
stos
test
push
push
inc
add
in
aam
in
ss
add
inc
scas
sub
cmp
sub
mov
jg
and
push
jmp
pusha
sub
pop
dec
pop
lret
pusha
or
sub
cli
dec
pop
das
ret
call
adc
pop
jbe
sbb
loope
sbbb
dec
mov
in
ljmp
push
sbb
mov
insb
out
adc
sub
push
frstor
fnstcw
stos
cld
into
adc
call
movsl
leave
dec
jge
and
cmpsl
xlat
push
push
divb
test
add
xchg
mov
repz
bound
push
in
fcmovnb
sbb
sbb
xchg
xchg
xor
jne
xchg
lret
in
lea
inc
jae
scas
addr16
or
lods
push
lcall
cs
xchg
sub
bnd
adc
push
and
cmp
dec
lds
mov
loope
and
xchg
fs
dec
repnz
mov
pop
xor
push
add
repnz
mov
mov
inc
adc
loop
jl
jae
mov
hlt
pushf
xchg
jno
lahf
jmp
rclb
push
enter
mov
sti
je
xor
push
pop
imul
push
fwait
jp
xor
fisubrs
addr16
sub
enter
movsb
dec
push
add
dec
sub
loopne
in
std
das
cwtl
push
sbb
or
adc
mov
dec
pop
sbbl
adc
fsubrp
inc
jmp
cmp
xchg
jge
mov
mov
or
int
or
jb
jne
movsl
daa
mov
cmp
lret
test
xchg
je
mov
pop
test
add
push
push
movsb
mulb
mov
dec
out
mov
ret
dec
adc
mov
add
enter
xchg
ljmp
sbb
test
es
jbe
mov
push
xor
mov
divb
ds
fistpll
scas
cmpsl
imul
xor
mov
inc
int
hlt
mov
pop
xchg
add
fdivp
in
js
pop
inc
cmpl
or
fs
cli
xor
loope
stos
adc
jo
pop
pop
sub
rcrb
mov
lea
movsb
popa
sub
stos
stc
dec
push
push
or
jecxz
les
push
popl
aaa
pushf
idiv
cmp
jle
inc
aas
cmovo
inc
sbb
sub
addl
out
cs
dec
mov
push
nop
push
xor
sarl
test
loop
xor
cmp
or
dec
aad
cli
xchg
insb
pop
sub
push
addb
cmp
fwait
ret
into
dec
lds
cmpsl
cmp
push
adc
hlt
aam
fsts
sub
mov
test
cli
jle
in
mov
jbe
ffree
push
fisttpl
jno
add
xchg
lods
mov
jp
cmpb
cmp
insl
dec
fstsw
sbb
test
aam
sbbl
xor
push
dec
pusha
je
sbb
fiadds
xchg
sub
ss
mov
push
cmp
dec
xchg
ja
sbb
repnz
jmp
pop
lock
jmp
add
sub
scas
add
loopne
fwait
enter
das
push
fdivs
fadd
or
aas
xchg
add
lods
cmc
pop
lods
test
shll
mov
js
xchg
or
test
stc
rcrb
mov
pop
jne
or
test
rcll
call
sub
pop
xorb
mov
mov
fldt
pop
mov
das
push
inc
xrelease
and
push
push
movsl
arpl
pop
inc
ja
jp
sbb
pushf
pop
aas
leave
or
popf
add
add
int3
xor
mov
icebp
out
fisttps
in
fdivs
inc
mov
pushf
mov
and
fisubrl
mov
xor
sbb
imul
cmpsl
jg
icebp
push
cltd
aad
outsb
cmp
add
mov
pop
or
cmp
xchg
addr16
or
les
xchg
cli
jmp
dec
or
sbbl
cmc
fistpll
mov
adc
pop
mov
out
mov
mov
mov
test
mov
and
xchg
imul
adc
jo
or
inc
nop
and
cltd
rcrl
pop
movsl
data16
movb
rolb
mov
fidivs
mov
mov
and
out
lret
lahf
mov
cmp
add
ds
repnz
fadd
dec
dec
popf
pop
xchg
and
push
cltd
sub
out
stc
inc
xor
cmc
xchg
scas
mov
push
sub
jp
sbb
fdivl
pop
inc
adc
leave
aaa
imul
sbb
cmp
mov
sarb
test
or
lea
xorb
xchg
decb
mov
repz
push
mov
inc
cmp
adcl
cwtl
je
int
bound
inc
sahf
jbe
xlat
mov
repz
lea
cmp
sbb
int3
ljmp
pop
stc
xor
or
pop
mov
rcrb
out
nop
test
cmp
cmp
cs
cmc
test
nop
insl
xor
ss
pop
mov
mov
mov
mov
in
ret
stc
mov
fimull
loopne
adcb
out
and
arpl
inc
jle
jae
cmpb
xor
mov
ljmp
xor
fmull
or
inc
inc
sahf
ret
test
cmp
scas
fs
dec
mov
sub
aad
repz
pushf
arpl
popa
inc
sbb
adc
mov
call
adc
push
xor
push
xchg
sti
jae
push
dec
jmp
icebp
aam
aaa
sub
mov
mov
mov
add
sbb
jle
ja
cltd
dec
inc
and
inc
cwtl
sub
or
xchg
dec
es
and
sbb
mov
xchg
jae
or
push
sub
aad
pusha
mov
dec
shrl
push
out
pop
or
fmul
cltd
jns
pop
call
xor
inc
adc
mov
jbe
test
inc
daa
or
call
mov
std
cmp
into
stos
xor
int3
cwtl
push
cmpsb
push
sub
mov
outsb
shll
stos
sbb
cmc
enter
loopne
scas
loop
insl
test
mov
nop
jo
cmc
inc
leave
xor
ja
test
push
jae
mov
pusha
int3
cmp
hlt
iret
ljmp
addr16
cltd
iret
lods
cmp
xor
jns
repz
lods
xor
out
pop
jmp
inc
xchg
shll
je
mov
cmpl
sti
push
enter
addr16
push
push
enter
in
ret
imul
mov
add
gs
jmp
mov
fdivl
mov
push
push
aas
andb
xchg
sahf
lret
out
bound
sub
cmp
xor
ficompl
out
push
out
lock
pop
push
add
jnp
roll
pop
sbbl
adc
cli
mov
cmpsl
jbe
movsb
push
js
jge
pop
cwtl
enter
lret
out
cmc
xor
jmp
dec
mov
sub
jl
inc
dec
movsb
mov
adc
sahf
scas
lea
dec
and
adc
popa
in
push
cmp
bound
nop
in
xor
aaa
mov
mov
sub
add
adcb
inc
mov
fsts
andb
fisubl
fcmovb
or
outsl
inc
inc
dec
test
pop
sub
into
push
jmp
arpl
pop
subb
ja
popa
mov
in
sbb
jb
lcall
pop
mov
fstpt
or
dec
sub
mov
enter
add
mov
cmpsl
sti
pop
jns
mov
jnp
pop
popf
int
cltd
out
and
inc
stos
aas
mov
cmp
add
adcl
popa
jbe
mov
add
in
cli
push
aad
xchg
loopne
insl
add
addr16
out
cmp
dec
mov
int
jbe
popf
inc
movsl
adc
testb
rorl
inc
outsb
inc
push
in
lret
push
pop
cmpsl
xchg
cmp
loopne
subb
dec
xor
movsl
jne
push
aas
sub
gs
jmp
or
insl
ds
sbb
cmp
cmp
sbb
lahf
pop
push
push
xchg
out
or
cmp
test
xchg
xor
jl
cmc
inc
rorl
pusha
pop
inc
jns
push
scas
ss
popa
out
mov
jmp
jns
inc
or
cmc
int3
popa
call
out
pop
popl
pop
mov
fistpll
fadds
pusha
pop
push
faddl
data16
dec
sbb
inc
in
in
lret
add
push
cs
inc
sub
jge
jbe
mov
pop
sbb
mov
cltd
pop
sub
int3
aas
lret
jnp
lret
nop
pop
or
jp
push
fldl
xor
xor
inc
clc
jb
mov
rcll
add
enter
je
insb
aas
loope
ds
es
push
dec
mov
push
out
movsl
mov
inc
test
cmp
or
xchg
add
and
stos
outsl
xor
std
mov
xchg
cmp
rol
mov
out
ret
nop
aaa
cs
rcl
or
loopne
dec
icebp
mov
hlt
iret
fs
decl
push
xchg
in
mov
inc
pop
rcl
ljmp
js
dec
cltd
mov
aas
loope
cmp
mov
inc
cli
pop
pusha
mov
and
cmp
add
dec
ficomps
jg
orl
sbb
nop
or
jne
idivb
insb
lahf
sahf
gs
xchg
sbb
xor
pop
xchg
inc
sbb
cltd
inc
and
scas
add
out
cmp
sbb
xchg
dec
adc
xchg
ljmp
out
xchg
mov
scas
or
test
jb
pop
inc
mov
enter
and
leave
dec
int
mov
cli
mov
out
rorl
ja
and
push
or
in
dec
cmpl
sbb
iret
es
dec
add
inc
push
adc
sub
xor
ret
add
je
add
stos
je
jg
fcomps
mov
daa
out
pop
sub
mov
les
pop
and
adc
pusha
xor
enter
xor
xor
dec
sub
cwtl
mov
mov
scas
inc
xchg
jbe
mov
inc
pop
add
cmp
mov
sub
push
fwait
push
mov
scas
mov
cmp
dec
sub
pop
adc
pop
xchg
movsl
push
out
int3
gs
or
decl
inc
aad
repz
pop
sbb
and
mov
inc
dec
mov
in
rcll
dec
stos
in
mov
lret
and
subl
mov
shll
int
std
push
xchg
push
mov
mov
jnp
aad
mov
mov
pop
lahf
insb
ret
cwtl
cld
loopne
fistl
gs
call
fwait
mov
or
xor
push
push
fwait
pop
outsl
fwait
lods
sbb
insl
inc
mov
jg
cmp
pop
mov
and
scas
or
or
mov
ja
popl
stos
pushf
repnz
idiv
and
cmpsb
hlt
add
fisubrl
es
sub
cltd
xchg
pop
inc
xchg
pop
imul
dec
movsb
mov
test
pusha
xchg
subb
test
jo
mov
sub
sub
jp,pt
pop
in
push
into
aas
xchg
xlat
mov
sbb
repnz
cmpsb
sub
jp
cmp
add
mov
cld
out
cmp
es
ret
pop
insl
pop
mov
mov
fistps
xchg
fnsave
sbb
out
mov
or
sub
enter
arpl
mov
mov
jle
lock
push
or
or
dec
call
cltd
dec
mov
cmp
pop
call
scas
cwtl
pop
add
es
jmp
push
stos
sbbl
and
jmp
addr16
xor
inc
lods
xchg
ja
sahf
insl
xor
psubsb
xchg
add
aam
jns
mov
stos
push
out
ja
sub
sbb
imul
fmul
ret
insl
mov
ret
mov
inc
pop
fisubs
push
cmpsb
pop
sub
push
jg
xlat
lods
xlat
dec
add
adc
sbb
or
lret
jl
and
ret
mov
outsb
cs
fdivrs
sub
push
inc
or
mov
out
scas
cmp
push
xchg
or
outsb
push
insl
mov
outsl
inc
les
push
jb
sbb
sbb
bound
std
sbb
mov
fisubrs
adc
jmp
dec
loopne
jle
cs
into
lcall
xlat
scas
adc
mov
movsl
jno
rcrl
inc
cmp
jae,pn
or
mov
inc
jnp
jae
nop
pop
mov
cmp
and
scas
jns
fnsave
xchg
pop
data16
out
inc
or
mov
dec
xchg
sahf
jne
inc
pop
mov
add
imul
icebp
pop
bound
rorl
push
fwait
xchg
pop
pop
jl
int
push
mov
sub
pop
fistps
pop
cmc
sar
xchg
pop
test
lea
sbb
test
sti
enter
inc
mov
sbb
mov
push
inc
pop
cmp
dec
inc
fldcw
iret
out
dec
mov
mov
jo
push
in
push
ror
push
pmaddwd
jmp
sub
dec
dec
inc
xchg
pause
lret
sub
out
jbe
pop
push
aam
subb
push
fldt
push
neg
mov
cs
fmul
mov
ret
fwait
shrl
cs
sahf
jne
insl
pusha
mov
push
jmp
jecxz
adc
inc
add
shlb
nop
into
mov
fdivr
or
fcoml
xor
cwtl
mov
cltd
in
ret
scas
mov
or
mov
xor
into
lcall
inc
or
push
xchg
mov
or
mov
pushf
pop
cmp
lahf
popf
push
arpl
hlt
scas
movsl
lea
call
jl
dec
jle
pop
loop
test
sub
and
sbb
rorb
pop
sarb
or
mov
pop
mov
push
mov
xor
cmpsl
add
fnstenv
adc
repnz
pushf
jle
xchg
ja
lcall
push
in
popf
xchg
xchg
sbb
ja
pusha
mov
stos
cmpsl
loope
and
das
push
in
mov
popf
sub
sbb
pop
sub
xchg
dec
dec
xchg
nop
shl
in
dec
loop
pop
in
mov
mov
mov
xor
clc
mov
sti
xchg
aam
popa
mov
pop
mov
sub
sbb
jne
mov
rol
sub
icebp
into
mov
aam
adc
rorb
gs
pop
test
or
iret
cli
ljmp
mov
imul
mov
sub
or
push
cmp
and
pop
das
xchg
mov
mov
repnz
xor
mov
test
aaa
jns
jle
loop
and
xchg
pop
cmp
out
aam
and
inc
insb
mov
push
cmp
mov
popf
js
leave
pusha
mov
hlt
scas
pop
xor
mov
sbbb
mov
daa
lea
xchg
aam
fmull
mov
sti
cmc
dec
stos
mov
adc
pusha
mov
mov
adc
inc
mov
pop
cmp
leave
adc
mov
mov
xor
or
push
int
popl
cmc
inc
push
lds
sti
dec
adc
and
mov
idivb
cmp
popf
rcll
adc
push
mov
adc
addr16
imul
shll
leave
in
lahf
cmp
les
jg
repnz
or
jb
outsl
aam
rcll
in
push
cmpsb
inc
imul
dec
sbb
out
into
jne
out
icebp
mov
add
jp
xchg
pop
sbb
out
and
jno
mov
mov
mov
add
mov
jns
pop
test
xchg
adc
push
cli
in
or
mov
hlt
rcrb
imul
fstps
call
and
jmp
mov
insb
mov
insl
mov
lock
std
push
test
scas
mov
cwtl
dec
or
mov
fld1
sbb
imul
lea
sub
shrl
daa
call
cwtl
jns
lahf
jno
jb
jb
movsl
test
mov
cmp
fbld
cwtl
push
xchg
jmp
lea
and
rclb
add
xor
std
lahf
js
and
and
push
sub
addr16
aaa
mov
test
cmpsl
cmp
push
movsb
inc
outsl
das
push
push
add
sbb
xor
and
aad
data16
pop
and
jg
pop
cltd
adc
outsb
sbb
jle
xchg
ret
cltd
cmp
call
jp
sub
testl
cmp
insb
mov
into
popa
pop
mov
ss
in
ds
aam
sub
rcrb
xor
rol
aam
jmp
mov
push
push
shll
movsl
pextrw
lods
and
mov
cs
je
pop
inc
outsb
mov
sarl
jo
add
cltd
movsb
cmpsb
addr16
cs
jle
pop
dec
aaa
imul
push
pop
imul
lds
fcoml
dec
mov
add
icebp
mov
test
add
and
mov
aad
cmp
inc
mov
adc
add
das
leave
scas
fwait
sbb
and
dec
mov
and
mov
sub
outsb
or
mov
loope
push
lret
js
imul
inc
and
test
sub
cmpsl
pop
std
dec
sbb
mov
mov
jecxz
xlat
les
cli
inc
test
cmp
or
test
or
adc
pop
mov
stos
push
bound
call
negl
mov
popf
add
clc
jb
add
sahf
jnp
jnp
in
icebp
xor
stos
gs
pop
mov
and
mov
pop
and
insb
and
insl
adc
or
lods
loop
sbb
add
lret
in
andb
imulb
pop
shlb
and
fs
cs
ds
insb
mov
push
std
pop
sti
dec
xchg
fisubs
add
testb
bound
je
pop
fwait
iret
inc
sbbl
cltd
daa
fnstcw
add
pusha
insl
les
mov
movsl
aad
adc
push
mov
push
loope
stc
sub
xchg
sbb
scas
push
shlb
insb
xchg
push
mov
lock
pusha
push
call
xor
sbb
bound
fstpt
xchg
repz
xchg
sub
sbb
loop
pop
nop
jle
imul
inc
stos
dec
lods
rol
and
sbb
repnz
mov
and
and
push
cmp
jns
aaa
or
xor
ss
xchg
xchg
cwtl
and
nop
mov
adc
mov
loopne
and
es
push
dec
jle
vsubps
jl
sti
daa
ret
call
ljmp
mov
adc
insb
add
dec
push
imul
dec
test
xchg
je
ds
pop
xor
fnsave
les
xchg
dec
adc
loop
cld
sub
jns
ret
data16
push
iret
aaa
mov
xchg
rcl
cmc
cld
mov
les
in
add
xchg
loope
mov
bnd
cld
pop
lods
jo
mov
mov
push
push
add
leave
and
mov
jp
push
inc
stos
cmp
xor
xor
es
sbb
sbb
fs
jns
jae
leave
adc
sarl
sub
movsb
mov
ds
fldcw
jae
jns
cli
bound
pusha
mov
test
sub
leave
push
and
into
mov
out
mov
enter
xor
call
jb
sarb
push
ficoms
add
and
hlt
cli
cwtl
into
mov
add
mov
push
pop
sbb
nop
pop
add
fildll
adc
mov
rcrl
data16
xchg
inc
scas
push
adc
sbb
cld
negl
dec
push
sub
mov
cs
xor
push
sbb
mov
aam
test
scas
gs
insl
mov
sub
inc
jb
in
outsb
adcl
mov
loope
cmp
mov
imul
dec
arpl
dec
mov
cli
aaa
add
imul
mov
sbb
sbb
mov
addr16
xchg
xlat
sub
or
mov
jno
dec
push
sub
fdivrs
inc
mov
fidivs
mov
inc
lcall
inc
push
pop
sarb
hlt
mov
add
lods
xlat
lret
or
xchg
mov
xchg
push
xchg
repz
pop
jns
inc
subb
push
or
xor
arpl
inc
pushf
je
insl
call
int3
cltd
cs
inc
lcall
sti
aad
movsb
loop
data16
orl
lds
pop
pop
ds
enterw
test
outsl
aam
jbe
movsl
sub
lahf
cmp
inc
xchg
pop
cmp
pop
bound
mov
pop
cmp
fbld
cmp
imulb
daa
dec
in
imul
cld
cmpsl
jmp
das
push
into
dec
call
fldt
icebp
dec
shll
sub
fnstsw
fnstenv
aad
and
fsubrp
rolb
pop
cmp
jecxz
pop
pop
loop
xchg
adc
push
mov
inc
push
lret
add
stos
in
and
sahf
dec
xor
xorb
fcoml
daa
sbbl
xor
ret
div
lcall
add
dec
daa
lret
push
mov
lds
rcr
cmc
enter
outsl
mov
mov
pop
xor
iret
outsl
pop
dec
adcl
xor
clc
xchg
sub
in
add
xchg
push
xor
cmp
js
jg
shlb
lcall
test
add
ret
test
test
dec
sbb
mov
add
mov
mov
mov
mov
push
dec
cmp
add
pop
xchg
mov
loope
pusha
out
movsl
jmp
push
out
int
mov
sub
pop
adc
vdivps
sbb
or
xchg
inc
mov
daa
mov
test
jl
xchg
bound
shrb
leave
and
jae
sbb
nop
mov
xlat
mov
jl
outsb
mov
aas
stc
stos
dec
orl
cmp
popa
imull
stos
sahf
stos
cmpsb
mov
ror
xor
cli
leave
daa
or
push
xchg
adc
std
sbb
inc
xchg
pop
sub
rorl
cmp
pusha
and
xor
out
pop
mov
stos
add
adc
pusha
icebp
sar
add
cmp
mov
add
movsb
aam
in
inc
add
dec
je
mov
fistpl
add
sbb
push
movsb
jno
idivb
cld
idivb
pop
ja
iret
adc
cmp
outsb
push
insl
or
sub
test
fs
inc
adc
xor
inc
aas
rcll
pop
mov
insb
aad
or
test
ljmp
loope
adc
cmp
push
xor
sahf
lock
push
xor
push
dec
mov
xor
jg
mov
xchg
shll
insb
sbb
cld
lock
cmp
mov
jl
stos
mov
jns
ss
lds
sbb
jbe
mov
inc
mov
adc
mov
pop
ss
je
in
or
lahf
jne
das
adc
fnstsw
es
cmpb
pop
test
push
adc
or
hlt
fisubl
test
and
sub
push
cmp
inc
mov
out
sbb
clc
adc
xchg
inc
jae
push
ss
je
fsubrs
mov
and
push
aaa
push
add
aam
mov
inc
es
fidivl
mov
sub
into
mov
xchg
push
jb
lcall
cmp
int
and
mov
sbb
movb
movsl
xor
es
push
stos
divb
jge
sahf
fldcw
in
call
sbb
inc
ret
xor
sub
cmp
and
mov
lods
fs
enterw
xchg
xor
xchg
cltd
insb
aas
cld
xchg
cmp
flds
les
mov
lahf
xchg
add
mov
fldt
mov
ljmp
insl
xor
pop
sbb
dec
jge
cld
jne
out
jns
push
mov
mov
loope
add
rolb
fnsave
insb
fs
dec
stos
adc
or
jns
inc
popa
aam
ja
mov
xchg
shlb
jbe
adc
std
adc
test
int
aad
scas
mov
sub
out
divb
xchg
pop
push
inc
cmp
pop
lahf
mov
jecxz
fs
sub
add
adc
push
addl
aad
add
dec
stc
aam
imul
or
mov
mov
pop
sbb
sahf
lea
ret
cmp
sub
adc
xchg
xchg
outsb
jle
cmp
pop
cmpl
inc
push
dec
mov
ja
insl
daa
or
cli
stos
dec
xchg
in
mov
es
push
inc
and
imul
xchg
rolb
lds
ret
dec
addr16
push
je
push
repnz
dec
xchg
xor
sbb
jb
ret
shll
xchg
mov
mov
push
push
jnp
push
xchg
insb
add
movsl
rorl
sub
in
scas
imul
dec
jecxz
inc
push
insb
cli
add
outsb
lea
and
mov
hlt
in
adc
ret
cs
addr16
addr16
xor
hlt
rcrl
mov
sbb
jl
and
cmp
cmp
imul
leave
jo,pn
sub
cmp
mov
test
jnp
and
das
in
cmp
pop
lods
lret
cmp
fnstenv
pop
aam
mov
fsts
add
mov
idivb
orl
mov
cmpsl
js
mov
fs
and
popf
in
sbb
out
sbb
lahf
loope
aaa
add
xlat
sbb
fisttps
cmp
sbb
pop
sahf
mov
addr16
xor
pop
add
mov
sbb
and
dec
repz
rcll
or
sub
pop
int
lret
push
cmp
test
push
pusha
mov
rolb
ret
addr16
add
jmp
cmp
mov
mov
rcr
test
andb
pop
xchg
fs
xor
jle
push
aas
and
icebp
jmp
lahf
xchg
pop
stos
push
mov
clc
out
xor
inc
cltd
cmc
pop
mov
lret
popa
mov
lahf
rorl
push
jns
xchg
cmpsb
jge
sbb
dec
aam
mov
mov
push
imul
jbe
mov
loopne
icebp
xchg
mov
sbb
fcmovnb
mov
mov
sti
mov
loopne
mov
xor
sub
cmp
inc
push
pop
inc
sub
mov
push
imul
jp
inc
mov
mov
pop
jne
and
dec
cmpsl
sbb
jecxz,pn
cltd
xor
xor
xor
add
push
or
and
pop
xchg
adc
or
pushf
push
lods
ret
sub
xchg
pop
mov
mov
pop
mov
js
mov
and
nop
mov
mov
pusha
iret
xchg
stos
shll
cmp
inc
push
mov
cmc
adc
out
add
mov
sub
xchg
inc
cmc
jae
mov
mov
inc
xor
ljmp
aad
stc
rorb
xor
fdivr
mov
mov
or
mov
pop
mov
int3
lcall
stos
js
xchg
rcll
popl
adc
ret
mov
int3
and
int
push
stos
sbb
cld
xor
mov
mov
int3
push
std
test
iret
inc
xchg
dec
jnp
jbe
dec
dec
jmp
jne
jnp
dec
ds
pop
or
pop
push
and
push
in
mov
mov
mov
in
loop
jg
outsl
lcall
ja
jge
in
fwait
xchg
or
mov
jecxz
mov
sub
add
pop
dec
sub
adc
push
pop
cli
enter
into
mov
loope
push
fisubl
push
mov
mov
or
loopne
jno
daa
pop
call
in
mov
into
scas
push
mulb
mov
test
xor
dec
nop
inc
stos
into
in
jo
lods
mov
pop
jmp
adc
cmpsl
jmp
xor
in
cli
test
hlt
in
sbb
into
lock
and
cmpb
dec
jle
xchg
in
div
js
adc
lods
popf
pushf
pushf
jbe
mov
cmpsb
mov
cld
ror
xor
add
repz
idivb
or
pop
mov
aas
xchg
mov
pop
mov
insl
mov
dec
jb
sub
inc
mov
popa
mov
xchg
fdivrs
sbb
cmp
das
jns
cltd
push
jmp
aas
iret
sbb
adc
jbe
lods
xchg
and
cmp
jge
outsb
inc
xchg
and
xchg
inc
mov
testl
jge
cmpsl
pop
mov
mov
xorl
test
mov
sbb
ror
xor
and
jo
mov
mov
out
stc
pop
int
push
lock
cmpb
leave
lcall
jp
push
test
jae
pop
nop
test
sub
or
mov
cmpsb
sti
xor
add
fbstp
aam
adc
ror
movsb
jp
dec
cs
faddp
std
push
and
mov
jge
mov
call
lods
popf
dec
movsb
addr16
or
pop
mov
jle
addr16
pop
xchg
push
out
addr16
jae
ret
pop
inc
sub
js
fst
cmp
sbb
jnp
aaa
adc
in
inc
xchg
add
fidivrl
push
cmp
sub
out
sbb
fisttpll
adc
jl
push
push
shlb
repz
arpl
or
xchg
mov
push
in
dec
sbb
or
and
in
xchg
mov
or
stos
addl
ljmp
push
pop
outsb
in
add
mov
adc
sarl
mov
push
push
sti
das
fisttpll
aaa
loopne
mov
inc
js
inc
aas
inc
pushf
dec
js
pop
mov
test
sbb
and
jmp
add
and
movsb
leave
xor
adcl
insw
add
mov
adc
dec
and
sahf
insl
pop
shl
mov
sbb
mov
mov
add
fldenv
lahf
pop
aad
pusha
aaa
sbb
or
rcrb
test
mov
sbb
cltd
sahf
or
sbb
pop
insb
sti
and
and
in
outsb
adc
xchg
adc
sub
cli
mov
cmpsl
inc
repnz
nop
add
add
mov
testb
push
les
sti
insl
out
xlat
dec
sub
rcl
cmp
xchg
sub
call
mov
adc
ret
jne
adc
es
lahf
stos
or
arpl
inc
push
in
cmp
bnd
xor
mov
andb
mov
sub
lods
fldl
ds
in
push
jl
outsb
jl
ficompl
and
arpl
gs
loop
pusha
mov
and
cmpl
adc
jg
jb
pop
jno
or
mov
stos
in
leave
shlb
out
push
sbb
fdivrl
sub
in
movsl
ds
jb
pushf
gs
pop
mov
inc
adc
lret
sti
push
sahf
sub
das
out
pop
push
vphaddubw
cmp
loope
lcall
emms
in
mov
loopne
ret
mov
decl
pop
divl
es
inc
mov
notb
sti
call
out
repnz
sbb
lahf
dec
scas
xor
int3
mov
shrl
stos
push
fcoms
sub
cmp
es
dec
test
int
and
pop
xor
cmp
js
xchg
fcmovbe
cmp
push
or
xchg
push
loopne
inc
scas
test
and
mov
js
fsub
adc
dec
mov
mov
mov
jge
xorl
das
and
push
das
adc
sbb
mov
test
test
xchg
in
xor
xor
fsubl
loopne
and
xchg
aaa
mov
addr16
test
cmp
push
inc
js
leave
roll
pop
inc
sar
adc
push
int
inc
aam
sbb
push
lds
scas
adc
outsb
aaa
add
in
loope
xlat
jge
ret
inc
sub
push
push
jne
int3
mov
aas
fildll
movsl
jg
jbe
in
rol
stc
sbb
mov
xchg
rclb
popf
pop
xchg
sub
cmp
ret
xchg
js
popf
orb
push
out
xchg
sahf
jne
xor
cmp
dec
or
push
sarb
and
push
mov
sti
inc
fs
hlt
lds
or
clc
jb
in
mov
jns
int
ss
dec
mov
cmp
jae
sbb
xor
pop
jmp
sub
mov
dec
jl
adcl
iret
mov
ret
xchg
addr16
and
in
mov
shrl
push
mov
mov
aad
cld
nop
add
std
clc
shrl
aam
bnd
mov
mov
push
pop
mov
in
mov
loopne
pop
pop
lods
adcb
xor
call
inc
sbb
int3
xor
add
scas
mov
adc
movsl
adc
daa
cmp
loopne
jae
mov
mov
scas
and
mov
adc
sbb
inc
xchg
aad
and
loop
xchg
dec
into
and
fisubrl
sbb
pop
inc
sbb
insb
push
outsb
fnstcw
insb
mov
call
add
je
sub
mov
cvttps2pi
inc
and
mov
mov
adc
or
jb
sbb
push
js
mov
loope
inc
stos
add
test
mov
push
inc
loope
ss
imul
rcrb
test
shlb
xor
pop
mov
cmpsb
push
push
pop
jmp
jmp
ja
loope
add
int3
movsl
jl
movsl
jbe
pushf
icebp
xor
xchg
pop
cltd
and
ljmp
scas
pop
and
ljmp
push
cmp
jae
mov
movsb
pop
pop
cs
mov
dec
cmp
clc
int3
or
lcall
in
or
and
in
shrl
loop
ljmp
js
adc
mov
stc
pop
cmpsb
mov
lahf
jge
sti
lods
pop
lea
pop
lahf
mov
fildll
jp
push
dec
arpl
int
paddusb
addr16
inc
pop
pushl
inc
dec
ss
sub
lds
inc
aas
aam
mov
mov
dec
dec
mov
mov
jle
clc
mov
push
adc
xchg
pop
pop
dec
cmp
insl
xor
loop
add
jnp
add
pop
inc
andps
xchg
mov
sub
sbb
ror
mulb
xchg
je
add
dec
ja
int
flds
adc
mov
and
scas
jle
jnp
test
mov
xchg
fdiv
mov
adc
rcrl
jae
nop
push
and
outsl
mov
aas
test
pop
push
jmp
inc
clc
mov
inc
dec
lahf
repz
pushf
clc
or
add
xchg
push
divl
adc
sti
aam
xor
dec
ss
mov
push
test
dec
daa
ret
test
js
cmp
mov
test
cmp
ficompl
inc
in
std
loope
adc
mov
data16
ljmp
jmp
or
les
leave
pop
push
pop
mov
dec
stos
pop
out
pop
mov
push
insb
inc
movsb
out
popa
mov
lods
xchg
stos
jne
sarl
scas
jae
inc
popf
fs
stc
dec
fwait
call
hlt
xor
push
imul
imul
or
je
shrl
sbb
cmp
shlb
mov
pop
testb
sbb
adc
iret
pop
pop
jmp
je,pn
testl
in
inc
or
mov
mov
push
call
jae
ret
out
mov
out
pushw
int
pop
inc
imulb
dec
aas
xchg
fs
mov
inc
das
cli
push
sub
out
xchg
cmp
jl
lcall
cmp
insb
ss
fisttpl
and
inc
push
jge
jle
xchg
aam
in
cli
out
stos
jp
inc
and
mov
xor
mov
mov
cli
dec
divb
xchg
dec
ljmp
push
std
testb
adc
mov
or
sbb
mov
cmp
loopne
shlb
adc
fwait
sbb
cs
jmp
rorb
into
xchg
pop
lock
mov
ja
mov
push
gs
add
lahf
push
adc
push
pop
and
mov
test
hlt
lock
adc
push
idivb
sub
xchg
ss
pop
inc
jne
cmp
mov
and
and
add
cltd
outsb
xor
inc
scas
mov
icebp
mov
int
add
sbb
mov
outsb
pop
cmp
lret
lds
sbb
lahf
xor
adc
push
xor
pop
jge
inc
or
adc
add
push
cmc
loopne
fmull
cmp
xor
xchg
arpl
push
sub
or
xchg
sahf
mov
push
roll
mov
pop
hlt
mov
jg
mov
inc
sub
movsl
imul
push
cli
mov
cmp
into
fsubr
es
jnp
in
push
push
aad
int3
out
pop
mov
in
lock
mov
dec
test
adc
je
aaa
js
fwait
lret
xchg
and
stc
fs
imul
sbb
pop
xchg
in
out
imul
shll
in
lds
stc
sbb
xchg
leavew
pop
add
mov
insl
pop
sub
das
xor
mov
mov
gs
adc
shll
ret
loope
shl
sub
push
push
in
je
and
mov
cmp
cli
mov
mov
xchg
cs
mov
call
mov
incl
xor
push
mov
xor
xor
inc
add
dec
jmp
and
dec
pusha
mov
push
xchg
xor
push
scas
lods
mov
dec
cs
jns
hlt
or
add
mov
out
int
std
cmp
test
xor
and
pop
sbb
pusha
jge
jns
pushf
out
popf
lea
lock
pop
sahf
and
jge
popa
mov
sub
pop
inc
cwtl
push
mov
scas
xchg
lea
cmp
sbb
push
arpl
pushf
cmpl
adc
inc
test
add
ljmp
mov
les
out
jp
mov
dec
inc
popa
aam
insl
push
ds
jge
test
nop
sbb
data16
les
xor
sub
in
pop
xlat
jns
mov
popf
inc
icebp
mov
adc
dec
bound
es
aam
and
jb
xchg
sub
sbb
adc
and
add
in
lea
ljmp
test
ss
stos
jbe
inc
xchg
sbb
dec
dec
inc
test
lea
mov
inc
push
popf
aad
mov
jmp
push
sub
subb
sbb
inc
and
push
sub
pop
mov
lock
test
cmp
inc
lea
std
dec
scas
mov
xorb
push
cmpsl
xchg
aas
fdiv
push
enter
nop
push
inc
xor
add
xchg
fs
or
cmp
sbb
push
mov
or
pop
inc
sbb
outsl
out
loop
cmpsb
xchg
mov
pop
jns
sub
lods
cmpsb
std
dec
xchg
pop
sbb
add
adc
adc
in
cmp
test
mov
lahf
mov
mov
xor
dec
jmp
mov
dec
test
jmp
and
xlat
aas
cmpl
pavgw
xchg
repz
push
dec
xchg
insb
adc
adc
aas
jno
sub
mov
out
mov
cmc
in
bndstx
push
bound
and
push
repnz
int3
xchg
xchg
sbb
xchg
mov
lret
outsl
ss
movsb
stc
enter
adc
addl
xchg
fsub
dec
into
movb
mov
jecxz
and
mov
sbb
and
aaa
mov
dec
das
adc
fidivrl
cmp
repnz
mov
out
mov
loop
add
dec
pop
xor
pop
jmp
fmulp
and
mov
movb
and
les
enter
dec
scas
cld
cli
repnz
mov
jb
sub
or
into
aas
lods
insl
xchg
out
sub
and
fs
pop
gs
pop
adc
push
scas
cmp
popf
adc
cli
cmp
mov
rcrb
jb
push
add
not
fs
or
xchg
test
cltd
mov
push
clc
rcrl
mov
out
cmc
cmp
mov
dec
add
shrl
or
mov
jp
and
dec
mov
js
testb
adcl
cmpb
jl
aas
jo
leave
aam
test
dec
adc
arpl
and
insb
in
jge
mov
cmp
mov
cmp
xor
clc
aas
adc
xchg
not
push
xchg
clc
ret
ss
dec
pop
das
ret
xlat
dec
push
cmp
sahf
sbb
out
xchg
cmp
dec
cltd
push
pop
xor
out
jno
add
xor
mov
xchg
fcomps
or
sub
xchg
push
pop
shll
repnz
aam
fisubrs
dec
adc
js
ljmp
repz
sti
pop
cmpsl
mov
into
les
rolb
in
test
icebp
ss
push
js
nop
popf
outsb
iret
sahf
xchg
jo
pop
lret
add
in
rolb
addr16
push
insl
lret
jp
cmp
or
push
sbb
loop
pusha
sub
adc
icebp
push
lahf
dec
lock
in
jmp
pop
xchg
aaa
adc
js
xor
int
loopne
xchg
ss
sahf
pop
negl
mov
popa
addr16
in
sbb
xchg
jmp
cs
xchg
fisubrs
andl
fldl
out
inc
push
lret
xchg
loope
rep
jge
sub
sarl
jg
dec
mov
test
push
jno
sbb
cs
iret
fdivrl
xor
xor
rcrb
mov
fistpl
outsl
mov
jne
inc
xchg
ljmp
shrl
je
lods
mov
sub
pop
sbb
iret
dec
pop
cmpsb
mov
xor
adc
dec
imul
dec
jne
inc
subl
cld
aad
push
jmp
pop
lcall
sub
ja
or
mov
cli
dec
xchg
adc
stc
jmp
ds
mov
sub
mov
pop
dec
adcl
insl
xchg
push
mov
fdiv
or
mov
and
xchg
pushf
arpl
push
dec
pushl
in
mov
push
mov
jl
xchg
rorb
jb
fabs
cmp
and
xchg
stos
pop
in
inc
fmull
insb
pushf
sub
daa
mov
out
rorl
push
data16
mov
xor
sub
aas
ljmp
sbb
cltd
es
xlat
stos
xor
out
rorb
les
xlat
sbb
jns
stc
mov
hlt
mov
rorb
out
into
xchg
and
push
lea
xchg
xchg
sbbb
mov
and
in
sub
les
push
ss
shlb
push
fbld
jnp
cltd
sbb
add
lahf
mov
aad
outsl
mov
sbb
jae
mov
cmp
fnstcw
enter
imul
lock
mov
js
sbb
inc
mov
xlat
test
or
sub
filds
inc
mov
int
lds
add
dec
inc
fdivl
jecxz
push
xor
daa
or
lods
imul
ds
xchg
push
mov
xor
loopne
jge
jle
cld
out
add
mov
test
jbe
pop
shll
xchg
pop
xlat
ret
sbb
test
sub
pop
insl
fmuls
call
test
outsb
inc
and
repnz
loopne
stos
sahf
xchg
out
shrb
jb
pusha
pop
fldcw
dec
or
xor
daa
push
mov
jge
movsb
cld
add
out
shll
test
xchg
daa
xor
adc
clc
jno
call
or
jle
mov
cmc
sub
loop
test
and
data16
leave
sbb
jmp
popa
adcb
addr16
push
sbb
dec
frstor
mov
jmp
outsl
enter
pushf
repz
pop
imul
and
and
std
lds
fmuls
adc
lret
lahf
xchg
jnp
sub
in
xchg
jg
stc
adc
xchg
rep
xlat
or
xchg
loope
stc
xchg
sbb
jb
jmp
jae
xor
pop
adc
sub
sbb
ljmp
add
mov
loopne
leave
test
or
cltd
lods
popa
pop
ja
push
leave
fisttps
out
mov
mov
ja
mov
and
mov
dec
xchg
gs
push
rolb
outsl
jecxz
cwtl
jo
and
test
add
rcrb
mov
adc
icebp
mov
jg
lret
xor
jle
lods
aas
and
pushf
push
dec
mov
jb
test
pop
fisttpll
inc
sub
jle
mov
sti
cmp
clc
sti
xchg
das
add
test
lock
lock
sbb
pop
cmc
jae
xor
pushf
or
inc
mov
pop
mov
cmpb
and
paddsw
cwtl
push
xchg
mov
cmpsl
or
adc
int3
cmp
sub
icebp
cmp
scas
test
js
pop
jbe,pn
sub
inc
sbb
insl
jne
das
sbb
lahf
cmc
arpl
jmp
rorl
movsb
mov
inc
xlat
ret
in
cmpsl
lcall
pop
mov
add
cmc
push
mov
imul
push
push
clc
pop
pop
pop
mov
jge
ljmp
imul
xor
lds
test
lds
mov
mov
pop
push
test
lods
fistpl
cli
mov
adc
testl
cmc
sbb
inc
xlat
movsb
pop
mov
fsubrs
ficoms
cmp
adc
add
test
es
shlb
xchg
xchg
jle
dec
mov
shll
jg
sub
lahf
pop
adc
in
inc
test
add
push
les
int
mov
ljmp
repz
into
jns
test
mov
or
sbb
cmp
js
fisubrs
push
inc
les
xor
aas
mov
fsubs
xchg
xor
lcall
cmp
cmpsl
stc
cmp
push
xchg
mov
andb
mov
cmp
cltd
fsubr
lea
push
les
jae
jmp
or
out
shlb
stos
das
out
inc
pushf
xchg
push
sbb
sbbl
outsb
pop
scas
std
push
insb
pushf
jae
nop
pop
dec
sbb
cmp
jmp
aam
test
dec
lahf
andl
call
dec
iret
jg
ljmp
mov
pop
arpl
jns
popa
sbbb
mov
stc
mov
add
inc
pop
push
mov
add
scas
sbb
int3
push
test
data16
shrl
sub
mov
pop
push
in
lea
fisubrl
add
insl
popf
je
imul
int3
loopne
push
pop
xchg
jle
xchg
mov
cwtl
loopne
mov
dec
and
movsl
pop
push
fnstsw
dec
lds
xchg
dec
aaa
rorb
pop
popa
fwait
shlb
ficompl
lock
fwait
call
push
mov
or
test
cmp
sub
andb
pop
cmp
pusha
andb
lahf
lret
lahf
data16
or
sbb
div
fnsave
movsl
lea
inc
pop
in
rcrl
mov
jae
push
xor
jecxz
jecxz
jl
mov
push
or
sub
and
stos
sbbb
imul
sbb
jbe
roll
out
pop
aad
mov
push
mov
ss
test
cmc
mov
ror
cmpsb
gs
shll
iret
mov
jmp
addr16
ja
jb
jl
inc
pop
dec
xchg
xor
mov
aam
js
bnd
loopne
cld
sub
out
add
ret
cmp
pop
ficompl
lods
jl
adc
xchg
cld
push
stos
outsl
sbb
dec
loop
pop
lds
pop
jno
mov
inc
cmp
test
xchg
or
out
lds
pop
int
cmp
cmpsl
pop
mov
lcall
bound
std
sub
pusha
iret
pushf
mov
push
sbb
rcrl
mov
leave
shrb
sbb
mov
ljmp
sub
mov
popf
mov
lret
push
xor
fwait
sti
fnstenv
arpl
add
imul
shrb
rcl
push
sahf
sub
loop
pop
cmp
fs
gs
adcb
mov
cmp
lods
cld
mov
imul
jb
test
int3
mov
lods
movsl
mov
call
fldl
push
cmp
mov
push
cltd
jmp
pop
inc
inc
sbb
inc
movsl
inc
aam
lods
arpl
add
loopne
test
scas
mov
js
push
and
call
push
in
iret
addb
sarl
ljmp
push
add
mov
inc
lods
mov
xor
outsl
xchg
call
dec
insb
mov
cwtl
jb
adc
nop
ret
xchg
xchg
inc
imull
mov
call
js
inc
out
sbb
dec
mov
inc
jp
inc
pop
lret
movb
in
aas
mov
pop
inc
fstpl
inc
dec
mov
or
cwtl
insb
les
lea
pop
xchg
sarb
adc
mov
inc
nop
repnz
mov
cwtl
loop
fimuls
add
jecxz
jb
dec
stos
adc
dec
es
mov
xor
pop
mov
push
sub
pop
outsl
sti
stos
aam
enter
popf
sub
scas
cld
push
fmuls
loope
std
lret
sti
ret
push
ret
and
jnp
gs
mov
call
pushl
lcall
push
pop
mov
xor
xchg
jo
icebp
fcmovbe
test
roll
inc
scas
out
push
btsl
jno
lods
adc
std
pop
stos
and
int
inc
sub
jmp
pop
inc
push
push
int3
aaa
lcall
es
shll
ss
push
shlb
cmpsb
push
sub
inc
cmp
or
dec
imul
incl
arpl
ja
icebp
fs
xchg
ljmp
dec
or
push
mov
scas
je
xchg
push
outsl
add
xchg
ja
int3
pop
sub
dec
push
stc
cmp
xor
lods
cmp
imul
ss
mov
mov
loop
jbe
out
jecxz
xchg
dec
jmp
and
lock
mov
out
enter
scas
gs
or
add
ret
or
add
xor
dec
hlt
push
inc
pop
adc
cmc
dec
cltd
lret
repnz
xor
shrl
je,pn
add
push
in
jo
and
int
add
lods
gs
adc
or
lahf
std
mov
in
adc
fdivs
push
lods
fisubs
js
stos
jo
dec
cmpsl
jmp
xor
ss
js
jg
mov
push
lods
lock
pop
mov
insl
std
cmpb
ret
and
push
lret
test
mov
jo
dec
mov
mov
xchg
or
stc
dec
push
fldenv
pop
roll
push
mov
ds
inc
xor
scas
and
fs
out
shll
mov
adc
and
neg
mov
addr16
adc
pop
or
dec
stos
paddsw
les
cmp
pushf
out
pop
popf
je
call
dec
stos
push
mov
sbb
arpl
mov
jmp
outsb
inc
test
movsl
aam
push
cwtl
cmp
sub
or
mov
cs
ljmp
jo
xor
add
and
push
aad
jl
xor
addr16
shlb
cmpb
push
lret
stc
and
mov
push
hlt
dec
jno
stos
or
fistl
icebp
jbe
dec
stc
fidivl
adc
mov
push
fisubs
cmpsl
fs
mov
adc
sbb
jmp
insl
outsb
repz
jmp
arpl
push
sub
sub
loop
or
movsb
xorl
cld
xchg
adc
xchg
stos
rcl
add
mov
pop
xor
pusha
adc
pop
aad
xor
jl
pop
lds
pop
arpl
repnz
movsl
lret
in
or
rcll
test
mov
call
cwtl
movsl
adc
push
xchg
int
xchg
sbb
daa
roll
sbb
scas
mov
in
push
or
insb
outsl
jl
jnp
jae
push
xor
ja
jecxz
jb,pn
jae
lret
mov
into
inc
test
mov
addr16
shlb
pop
cs
add
sahf
imul
sbb
xor
xchg
push
clc
push
in
or
push
push
xor
jne
mov
cmp
dec
jecxz
call
cld
out
mov
rcl
into
sbb
mov
call
push
out
sahf
lock
push
daa
mov
dec
inc
sbb
mov
adc
push
dec
push
cmpl
jns
sub
and
push
outsl
mov
mov
mov
repnz
cmp
mov
mov
nop
scas
cld
int3
inc
jg
fdivs
subl
insl
dec
push
leave
pop
dec
sbb
or
inc
lds
ds
cltd
pop
sub
mov
lret
mov
stos
add
pop
lock
pop
mov
inc
movb
insl
orb
insb
inc
test
sub
fs
in
jns
pop
shld
cltd
dec
lcall
aad
in
mov
and
dec
lahf
inc
jb
repnz
call
or
xor
and
bound
xchg
ja
cmpsb
push
outsl
mov
popf
shrb
sbb
add
dec
and
and
test
dec
cmpsl
or
clc
scas
jnp
or
stc
sbb
or
xchg
cmpsl
pop
mov
mov
jb
xchg
ds
jo
icebp
cltd
cmpsb
add
pusha
inc
gs
or
jno
test
ret
sbb
pop
cmpsb
call
popf
leave
xchg
aaa
js
xchg
cltd
sysenter
jae
and
lods
test
pop
aaa
mov
cltd
push
test
inc
jb
es
mov
fidivl
imul
mov
jecxz
xchg
lcall
loope
lds
lret
add
dec
sahf
outsl
dec
nop
add
lea
cs
adc
js
sub
stos
xorb
inc
scas
pop
pop
mov
cld
int
jo
paddsb
js
stc
inc
ja
push
nop
jne
sahf
imull
insl
inc
call
lods
iret
test
hlt
mov
das
inc
inc
sbb
lret
ds
xchg
mov
and
loopne
stos
lcall
insl
enter
or
repz
xor
loope
movsb
jl
push
cmp
in
insb
push
mov
sub
jle
leave
cmpl
adc
cltd
jbe
sbb
fidivl
sbb
dec
sub
out
xchg
insb
push
cmp
mov
and
int3
jg
jbe
jnp
sub
testl
pop
pop
rorb
repnz
dec
xor
jae
gs
inc
popf
jge
mov
stc
shlb
xchg
call
jnp
inc
mov
les
aaa
inc
loopne,pn
adc
packuswb
pop
imul
andb
ret
dec
lods
pop
ret
pop
fstpl
jb
dec
mov
mov
test
addr16
loopne
xor
lods
xchg
jg
js
push
pop
sbb
enter
gs
jmp
nop
adc
xor
or
xor
adc
mov
sbb
and
in
mov
add
sbb
orl
pop
mov
ja
call
mov
rorb
lods
xchg
jne
jle
lret
cld
loop
stos
out
cmpb
clc
add
das
adc
out
jb
loope
xorb
adc
mov
mov
sahf
daa
roll
mov
dec
popa
jnp
inc
scas
dec
adc
dec
movsb
in
mov
fwait
adc
xor
stc
pop
sbb
aaa
ja
aad
sub
lock
mov
pushf
xor
mov
mov
ss
pop
mov
jnp
mov
clc
jecxz
push
insb
push
xchg
arpl
and
adc
je
daa
aad
xchg
sub
jp
push
fs
jo
mov
je
fists
mov
push
or
movsb
jp
adc
scas
sub
stos
add
and
jl
inc
sbb
inc
in
sub
std
movb
mov
mov
mov
lods
sbb
insb
nop
xchg
sbb
and
dec
jmp
sub
sub
mov
xchg
push
mov
imul
or
xchg
and
mov
inc
and
xchg
fdiv
mov
dec
stos
dec
push
ljmp
test
and
rorb
pushl
sub
jno
push
mov
lods
pusha
ds
test
mov
lods
fs
stc
inc
add
pusha
and
mov
push
mov
pushf
repz
add
dec
or
sub
dec
xchg
stc
mov
xor
test
inc
movsb
bnd
or
mov
mov
cmp
subb
cs
add
sti
xor
je
xchg
fs
jbe
jns
lods
add
adc
jmp
gs
je
cmp
lock
xchg
cmp
fistps
stc
pop
lahf
insb
sahf
xor
inc
in
bound
xchg
jmp
push
fwait
shr
and
hlt
mov
int
dec
out
mov
sbb
scas
add
mov
cltd
shrb
imul
push
mov
dec
jp
aas
iret
data16
test
imul
lret
adc
inc
ret
movsb
test
inc
xorb
push
test
mov
out
add
aaa
mov
dec
shlb
std
stc
mov
or
inc
inc
aaa
jecxz
mov
dec
aam
imul
inc
sar
xor
jp
daa
out
fistl
lahf
test
pop
loop
lods
jno
mov
dec
push
das
mov
xlat
and
call
daa
movsb
shll
jns
mov
inc
adc
scas
test
mov
add
pushf
repnz
sbb
repz
arpl
add
in
xlat
push
or
push
mov
jo
jo
mov
cld
jo
inc
sbb
call
push
add
in
add
adc
repnz
addr16
push
andb
loop
mov
loope
mov
lods
jmp
sbb
mov
xchg
rcrb
std
fisubrl
mov
xchg
add
nop
popf
aaa
sbb
add
xor
and
fsubl
in
dec
add
mov
dec
mov
pop
jmp
shl
fwait
sub
or
xchg
shr
repnz
or
or
punpcklwd
adc
lcall
test
fisttpll
adc
dec
in
xor
ret
mov
mov
cmp
push
loope
in
hlt
push
call
call
arpl
xchg
jp
test
cmp
jbe
jnp
pop
xor
jo
jae
mov
inc
mov
insl
scas
nop
popa
scas
mov
mov
inc
cmp
ja
mov
test
mov
sahf
pop
and
jno
add
loope
dec
pop
mov
sub
lcall
mov
cmc
test
pop
fbstp
or
mov
xchg
jno
es
adc
cmp
stc
dec
lahf
incb
sbb
ds
ljmp
jne
movsl
roll
pop
push
scas
stc
cld
int
sbb
jp
push
ret
push
iret
xor
fnstsw
icebp
xlat
stos
mov
daa
xchg
not
mov
bound
mov
ret
adc
mov
pop
dec
bound
add
std
add
cwtl
pmullw
or
mov
dec
out
aam
or
cmp
leave
imul
lcall
xor
or
dec
out
mov
push
or
add
andb
mov
das
das
rcr
or
jo
lds
or
jno
sub
pop
xchg
loop
xchg
pop
xchg
jae
or
in
out
mov
clc
mov
mov
pusha
jp
mov
inc
mov
popa
dec
out
mov
pop
iret
and
repnz
xchg
mov
pop
int3
xorl
ret
fisubs
push
cmp
fs
fcmovbe
pushf
in
lea
fdivrs
or
dec
out
enter
repnz
cwtl
in
sbb
test
sarl
popf
mov
outsb
mov
cmp
and
push
cmpsb
mov
and
icebp
mov
insl
xor
clc
scas
inc
lret
pop
stos
repnz
lods
stos
dec
ss
scas
out
lahf
mov
sti
std
scas
pop
int3
sbb
fnsave
xchg
mov
in
into
dec
jo
sub
sar
ds
jno
mov
pop
pop
bound
test
es
gs
lcall
rcll
sbb
dec
jle
movsb
push
xchg
dec
add
cli
push
loopne
jb
jbe
dec
icebp
popa
in
push
mov
insl
sahf
mov
out
iret
call
es
xchg
push
mov
in
sbb
sub
das
bound
mov
frstor
dec
mov
lcall
sbb
pcmpgtd
rcll
push
lods
ss
mov
xchg
imul
fwait
xlat
xor
icebp
xchg
add
inc
jo
jmp
mov
std
cmpsb
ret
add
rcrl
cmp
imul
inc
loopne
or
sbb
xor
stc
and
xor
cmp
mov
xchg
push
clc
sbb
lock
fsts
push
out
enter
ljmp
xchg
and
mov
inc
xchg
ret
aas
mov
shrb
lcall
fists
pusha
inc
mov
mov
or
sbb
push
cmp
mov
bnd
xchg
and
fidivl
cmpsl
pop
popa
lahf
pusha
adc
ret
hlt
push
jl
mov
in
lcall
mov
imul
mov
adc
sbb
sub
lret
and
dec
mov
das
jne
dec
mov
cli
sub
cs
dec
and
mov
pop
sti
or
jo
lcall
mov
test
jl
sarl
adc
dec
popl
dec
cmp
psllw
movsl
test
cwtl
ret
push
and
or
insb
insl
aad
data16
xchg
push
inc
stos
fsubl
into
cmpsl
fstpl
iret
adc
pop
mov
pop
xchg
repz
adc
xchg
mov
pop
mov
jae
dec
xor
sar
inc
mov
mov
pop
out
sarl
fdivrp
loop
scas
mov
lock
xchg
xor
sub
xor
cmpsb
lret
adc
lret
ret
vpsrad
jmp
daa
push
jmp
sahf
test
insb
jns
in
repz
test
mov
mov
jnp
push
in
mov
aam
pop
mov
jecxz
cmpsl
gs
cmpl
callw
addr16
inc
hlt
dec
pop
pop
imul
sti
jecxz
cltd
add
stos
sbb
loopne
add
shlb
adc
rcrb
pop
or
jmp
mov
sti
adc
jae
dec
int
jb
mov
mov
pop
lret
test
add
and
fisubrl
nop
pop
jge
mov
inc
xorb
movsl
sub
addb
push
adc
aas
inc
dec
xchg
cmp
pop
and
ja
jo
mov
jg
cmp
cmp
dec
mov
pop
pop
mov
xchg
aas
sbb
mov
jle
mov
cmp
push
iret
cmp
cli
jge
ds
jo
push
call
insb
push
lfs
stos
add
lock
pop
adc
orl
or
out
xor
stos
sub
shll
andb
out
lds
pop
nop
xor
imul
orl
add
jge
leave
mov
sahf
inc
lret
mov
push
sahf
mov
scas
outsl
sahf
arpl
jmp
scas
adc
adc
push
jae
jle
sti
insl
push
mov
fsubr
add
mov
enter
inc
loop
push
push
popa
inc
jl
movsb
jnp
notl
xchg
cld
aad
pop
fcos
sbb
insl
cmp
in
ret
je
add
shll
jg
xchg
les
mov
rcrl
dec
pop
dec
xchg
sub
lock
mov
pop
xchg
xor
and
xchg
push
and
xchg
add
cmp
mov
sub
stc
xor
cmpl
xor
pop
sub
and
pop
or
clc
sbb
aas
sbb
scas
jg
fs
test
xchg
inc
cmp
cmc
out
push
xchg
dec
sbb
pop
add
mov
pop
scas
mov
mov
xchg
xlat
sub
push
mov
ret
jmp
pop
mov
cmc
adc
ljmp
pushl
add
cwtl
jge
mov
pusha
inc
mov
push
xchg
jno
push
call
xchg
push
mov
jecxz
out
test
and
out
ljmp
inc
jmp
stos
cmc
imul
mov
std
dec
xor
push
mov
arpl
pop
enter
push
jge
cmpsb
cmp
jmp
pop
test
jnp
enter
outsb
aam
aas
cmp
adc
stc
sbb
out
leave
pop
mov
and
dec
push
ret
mov
paddb
stc
and
dec
mov
sbb
or
inc
xor
jnp
or
xlat
cwtl
cmpsb
cmpps
lahf
xchg
push
out
inc
add
push
xchg
pop
stos
add
ret
inc
popf
push
aad
add
xor
cmp
add
fidivrs
dec
lret
ret
lcall
pop
mov
test
imul
xchg
and
sbb
daa
stos
adc
scas
and
jne
sbb
nop
shlb
leave
sbb
mov
in
sbb
ljmp
inc
sub
addr16
push
add
in
aad
jp
push
cld
fmulp
mov
lahf
call
pusha
xor
lret
mov
test
stc
mov
in
mov
sbb
sub
stc
dec
dec
xchg
ret
out
les
mov
jge
jae
push
aad
xchg
pop
pop
hlt
pop
push
ficoms
ds
out
dec
rorl
loop
enter
add
mov
mov
jo
lea
insl
arpl
pop
pusha
pushf
or
out
sub
fcmovne
cmpsb
mov
sbb
out
enter
push
xorl
lods
xchg
popa
inc
and
or
or
repz
pop
test
faddp
lahf
loope
xchg
or
imul
out
shrl
sub
test
jle
inc
sub
out
cli
fsubs
lcall
adc
ret
push
cmc
push
dec
sub
repnz
cmpb
adc
popa
mov
mov
imul
cmpsb
imul
std
leave
adc
jg
push
mov
fsubl
cs
aad
andb
cmc
in
add
lds
into
add
or
dec
push
jb
add
cwtl
insb
dec
iret
sti
add
cmpsb
and
mov
inc
loop
pop
pop
jne
stc
inc
xchg
ret
icebp
inc
fsubr
orb
in
jp
jbe
mov
fldl
ljmp
das
mov
cs
push
push
dec
js
in
in
loopne
xlat
jecxz
scas
mov
sub
mov
push
sbb
cmpsl
sahf
mov
and
push
adc
adc
incl
ja
out
pop
lea
fldenv
movsb
add
repz
mov
cmp
stos
mov
cwtl
pop
xchg
popf
mov
mov
inc
pop
clc
nop
sub
ret
in
cmp
pop
sbb
aad
sbb
adc
movsl
jg
cli
pop
ficoml
push
adc
insl
ret
pushf
inc
jnp
or
jo
jo
mov
insb
sub
pop
mov
xor
addb
sahf
adc
std
out
cmp
mov
jp
sub
push
dec
adcb
rcrl
or
cmp
in
dec
fwait
mov
cmc
jne
sbb
fidivl
inc
jle
subb
pop
cmp
xchg
lcall
mov
repnz
mulb
aas
adc
mov
xorl
lods
pop
sbb
fnstsw
xchg
jno
jmp
sub
frstpm(287
xchg
jnp
jge
push
cmp
mov
popf
jmp
orl
lret
xor
sbb
mov
mov
sub
popa
les
dec
mov
xchg
lahf
sub
negb
negl
scas
jp
fadds
sbb
out
xchg
ja
es
pop
jne
cld
pop
int
sbb
fisubl
out
popa
scas
sub
jecxz
xor
lahf
lahf
jecxz
dec
ja
stc
push
mov
adcb
std
loop
in
jo
aam
sub
inc
push
sub
xor
pop
sub
mov
push
adc
aaa
cmpsb
jmp
into
xor
adc
inc
xor
sbb
add
lret
sbb
push
mov
insl
dec
jl
sbb
int3
xchg
repz
pop
bound
pop
mov
fwait
xlat
mov
andb
movsl
fbstp
cmp
jae
mov
mov
mov
arpl
mov
test
das
out
fiaddl
das
xlat
adc
pop
aas
arpl
movsb
je
sbb
mov
push
sbb
stc
ret
cli
push
and
cmpsb
rcrl
in
mov
sti
cli
iret
adc
mov
xchg
xchg
movb
pop
xchg
jno
xor
dec
xor
add
ret
fisubs
sbb
ror
es
dec
inc
add
add
cmpsb
jmp
pop
dec
push
in
add
or
sti
push
cld
aam
cltd
xchg
inc
sub
xchg
outsl
push
scas
cmpsl
adcl
jne
pop
mov
lock
pop
shrb
stc
insb
xchg
xchg
cs
in
iret
adc
insb
xchg
cltd
push
ss
cmpsb
inc
loop
loopne
test
or
mov
mov
mov
mov
inc
aad
jns
sbb
adc
movsl
loopne
stos
mov
nop
jns
inc
fbld
lods
jbe
in
data16
lret
xchg
mov
and
ficoms
popf
arpl
dec
in
add
sti
xlat
in
aas
dec
int3
push
sub
jecxz
dec
mov
mov
sbb
pushf
jae
push
adc
xchg
pushf
out
mov
in
xchg
js
inc
push
lock
mov
jl
and
dec
aad
jns
xor
lahf
xchg
sub
ret
pop
mov
push
jle
inc
fidivl
and
sbb
pop
adc
lret
sbb
leave
mov
and
stc
in
jp
sub
sub
add
test
test
xor
in
push
mov
xchg
mov
lret
jnp
xor
std
shrl
cmpl
aad
fwait
xchg
jnp
pushf
jae
in
cmpl
das
or
xchg
mov
mov
xorb
rcr
adc
fmul
push
roll
ss
add
scas
ja
lcall
addr16
cmc
mov
xorb
popf
lods
cmc
mov
or
mov
inc
adc
mov
mov
inc
mov
rcl
dec
ss
test
add
ss
jl
ljmp
test
pop
arpl
xchg
xor
scas
fsts
jno
fsubl
rclb
mov
mov
shr
jae
call
test
xchg
jno
and
and
div
mov
sbb
int3
fs
jle
arpl
testb
or
fsubrl
clc
mov
sub
cmc
cld
outsl
or
add
aad
das
loopne
mov
mov
outsb
sahf
in
mov
add
mov
pop
repnz
call
push
imul
fdiv
movsl
aaa
or
lret
cs
sub
pop
mov
insl
iret
push
jecxz
jbe
fcmovnbe
inc
pop
jo
push
sbb
dec
std
inc
and
sbb
xlat
lods
cmpb
dec
sbb
push
jo
and
dec
popa
insb
dec
stos
sub
scas
or
pop
jle
ror
cwtl
mov
outsl
xchg
pop
xchg
jns
xchg
aam
or
pop
adcb
sar
pop
iret
addr16
cltd
daa
or
mov
sbb
cmp
mov
lret
cmpsl
xor
dec
sti
movsb
mov
dec
xor
fs
push
mov
ret
aaa
push
mov
dec
adc
mov
insl
xor
dec
sub
jno
pop
pop
lcall
push
mov
or
hlt
jmp
decl
addr16
ss
loopne
pminub
sbb
xor
add
repz
mov
cwtl
push
out
jg
cld
leave
xchg
fdivs
cmp
mov
pop
sbb
push
mov
imul
andb
add
lahf
lret
mov
rcll
in
jg
jns
or
subl
add
aam
pushf
push
das
sub
loope
ja
mov
mov
xchg
pop
in
shrl
daa
add
cmp
inc
xor
jne
cli
mov
xchg
ficompl
sub
lods
addl
mov
test
lcall
and
dec
je
mov
in
mov
xchg
pop
mov
pop
sti
xor
pop
cwtl
push
push
xor
in
ret
daa
xchg
mov
aas
fwait
add
iret
adc
pop
mov
rcll
jnp
aad
icebp
inc
inc
cmp
push
loope
mov
je
je
ds
imul
neg
xor
pop
icebp
clc
add
mov
push
mov
and
dec
mov
loop
mov
xchg
sbb
inc
pushf
imul
sub
sub
mov
imul
ljmp
repnz
loope
and
imull
in
cmp
out
loop
mov
sbbb
adc
cld
adcl
jno
lahf
daa
fldt
lea
mov
jne
in
or
mov
aas
pop
sti
fnstsw
shlb
mov
icebp
lods
insl
cmp
cmp
dec
lods
popf
imul
ret
jge
and
out
xchg
lea
pop
sub
push
cmp
fisubs
repnz
ds
mull
imul
xchg
in
inc
add
adc
xor
insl
test
cmc
xor
popa
out
pop
cmpsb
subb
in
inc
daa
or
adc
cmp
cmpsb
mov
xor
add
mov
fcmovb
mov
insb
cmp
pop
addr16
idiv
mov
jle
sti
jg
xchg
jae
pop
adc
push
stc
cmp
sub
mov
jg
xchg
push
sbb
and
mov
xchg
xor
popa
lock
sarb
and
dec
push
divb
jae
int3
subl
nop
sbb
repz
adc
cmp
adc
addb
incb
stos
int3
jb
jb
inc
lock
or
inc
out
jb
or
push
shlb
add
add
pop
hlt
es
je
mov
push
scas
imul
mov
jno
and
mov
cmp
jbe
pop
int3
mov
pop
or
lods
push
jne
sti
mov
mov
stos
int3
mov
in
push
sbb
outsb
mov
dec
sahf
lahf
jbe
mov
mov
jo
es
add
icebp
rcll
pop
test
inc
rorb
fistps
sub
fisubrs
push
jle
ret
adc
mov
out
pop
dec
or
sahf
not
lods
jge
add
pop
mov
push
fwait
cmp
push
or
in
int3
lods
insl
inc
cmpsl
mov
mov
movl
sbb
fistl
pop
movsl
fcmovne
call
rcrl
sub
mov
repz
dec
cltd
push
xchg
bound
cld
adc
sub
xor
in
insb
pop
adc
xor
pop
pushf
xor
jno
cs
hlt
pop
cs
les
dec
mov
push
popf
out
pop
repnz
js
lds
mov
test
add
pop
or
enter
and
and
cmp
aas
xchg
add
cmp
xchg
in
inc
adc
das
add
pop
jno
in
cs
lahf
add
sbb
adc
push
sbb
cmp
lret
mov
jae
mov
cmp
mov
inc
int3
pop
xor
lods
xchg
gs
push
xchg
mov
loope
pop
add
scas
or
or
scas
roll
clc
xor
pop
jecxz
clc
out
or
or
out
sbb
mulb
jae
lret
rorb
jmp
aaa
out
cmp
in
mov
cltd
push
mov
rcl
push
fcompl
sub
sub
pop
adc
xor
jbe
mov
sbb
int
push
mov
mov
push
movsl
and
add
mov
jnp
or
mov
lds
nop
cld
adc
std
loop
ss
mov
and
div
out
fldl
inc
adc
mov
ja
shlb
inc
dec
insb
aaa
push
pusha
mov
enter
sbb
inc
sub
dec
int3
sbb
aaa
xchg
mov
loop
movsl
jb
cs
es
push
cmc
leave
sbb
repnz
nop
test
fnstsw
jae
je
fs
cltd
add
sbb
popa
sub
mov
je
dec
sahf
push
fcompl
ficompl
lods
adc
jp
pop
hlt
cmp
add
mov
jo
sub
lret
pusha
mov
loopne
ret
addr16
lods
in
stos
mov
inc
xchg
pop
lods
adc
mov
cmc
add
test
scas
adc
mov
outsl
leave
xchg
scas
pushf
and
in
scas
fimuls
adc
jbe
cs
aam
test
push
cmp
outsb
inc
cs
fsubrs
sub
addr16
bound
popa
lods
sbb
jno
loope
test
fidivrl
or
dec
jg
adc
mov
andb
int
ds
dec
or
sahf
outsl
pop
sub
imul
xor
xor
pop
addb
out
adc
loope
add
in
stc
pop
imul
leave
xchg
cmpb
sbb
mov
push
in
repz
movsb
adc
sbb
adc
loop
jecxz
dec
lods
mov
imul
popa
push
mov
je
movsb
das
inc
mov
enter
out
sbbb
shlb
sub
jbe
mov
lret
cmp
adc
cmp
cmp
adc
call
and
xchg
aas
test
mov
aam
lret
ret
lods
ja
cmc
or
xchg
mov
adc
sub
lds
push
loope
add
inc
rol
xchg
pop
gs
adc
and
and
lock
in
shr
push
out
lods
mov
pop
divb
les
rcrb
pop
lcall
sub
fs
ljmp
sahf
dec
je
test
jecxz
mov
fcmovnu
mov
pop
cwtl
push
mov
lret
movsl
adc
fisttpl
xchg
push
mov
sti
sbb
mov
mov
mov
adc
xchg
mov
test
adc
nop
enter
jne
mov
imul
xchg
sbb
xor
mov
scas
sub
mov
xchg
push
cld
dec
push
sbb
pop
shl
push
and
xor
iret
popf
pop
movsl
outsb
mov
or
shr
inc
jecxz
and
out
cmp
mov
mov
pop
test
scas
xchg
jl
inc
or
sub
jne
lods
mov
into
xor
dec
inc
sahf
imul
push
les
mov
stos
lock
stos
xor
js
cmc
mov
push
insl
inc
mov
push
mov
cwtl
mov
incb
and
adc
xor
loop
fcoms
daa
cld
jo
leave
mov
pop
mov
inc
ret
test
shl
pop
mov
mov
add
xchg
int
out
push
mov
jno
ljmp
cmp
inc
xor
or
cmp
in
mov
sbb
das
fldl
out
push
sbb
popa
xor
pushf
aas
fsts
and
push
out
or
xor
cmp
sbb
lret
por
and
fildl
int3
xor
sar
xor
push
cmpb
pop
mov
sub
push
lock
sbb
pop
mov
push
sub
js
fcmovu
cmp
test
add
rcr
lret
cmpsb
insl
mov
or
mov
sbb
jne
inc
xchg
mov
ljmp
lods
jge
loopne
pop
leave
sbb
mov
loop
sbb
out
pop
push
cmp
mov
out
sub
fcomps
push
mov
in
lcall
shrl
stos
xorb
cld
loop
adc
and
pusha
cltd
lods
je
and
cwtl
push
xchg
in
rclb
cmp
imul
fimuls
cmpl
xchg
push
es
fidivl
aas
test
repz
mov
fisttpll
sub
frstor
xchg
je
cs
rol
scas
mov
xchg
les
mov
rcll
jle
xor
dec
ss
in
mov
xchg
jp
or
js
aaa
cli
mov
add
pop
in
xlat
xor
cwtl
push
addr16
orl
lret
push
fwait
outsb
pop
inc
dec
lret
mull
popa
jae
inc
shrb
aas
lods
pop
movsb
and
in
sub
xchg
cmp
stc
rorb
jae
ret
push
rorl
movsl
in
rclb
jb
test
jle
scas
inc
test
ds
sbb
cwtl
or
loop
pop
fdiv
xchg
aas
sbb
mov
jno
arpl
mov
subb
fs
pop
insl
mov
dec
fnstsw
push
jge
cltd
lret
inc
neg
xchg
xchg
lea
xchg
imul
jg
aam
push
add
insb
inc
adc
inc
xchg
jg
xchg
data16
lds
sub
adc
in
and
add
mov
cmp
sti
int3
sbb
jecxz
push
jle
push
imul
and
or
jno
inc
inc
push
je
push
sub
ja
dec
cli
jle
hlt
add
aad
xchg
mov
adc
rcl
int3
xor
aas
in
loope
rorl
pusha
out
mov
cmp
cbtw
push
sbb
push
sbb
aam
xchg
mov
mov
out
ljmp
shrl
sahf
sbb
or
clc
inc
daa
add
movsb
ret
xchg
mov
jp
push
inc
imul
lock
add
mov
stos
stc
sub
imul
in
fs
fwait
rcr
int
mov
push
aas
insb
sbb
popa
xchg
ljmp
xchg
dec
jns
sbb
cmc
lods
push
test
icebp
loopne
loope
jb
jge
add
dec
push
jmp
sub
xor
mov
push
mov
cmc
aas
adc
sahf
bound
ret
push
push
inc
inc
jnp
aad
pop
adc
push
jp
xchg
loop
scas
cs
out
xlat
in
stc
and
subb
sbbb
test
xor
cwtl
adcl
fyl2x
icebp
int3
fistpl
out
icebp
mov
xchg
mov
mov
fs
cli
dec
jp
popf
lds
clc
pop
pusha
clc
mov
lea
push
adc
inc
stos
mov
push
xor
and
fstpl
lock
xor
adc
adc
vunpcklps
xor
jno
fdivrl
mov
adcb
cmpsb
out
or
mov
xchg
dec
loop
xchg
add
inc
cwtl
pop
cmpb
mov
stos
or
add
xorb
jnp
push
cmp
push
sub
cs
fcoml
xor
pop
fsubl
xchg
hlt
out
inc
sti
push
xchg
sahf
imul
add
xor
mov
pusha
inc
and
js
pushf
lds
fbstp
push
dec
idivl
mov
xchg
sti
mov
dec
mov
enter
nop
adc
ficompl
lock
add
or
push
aaa
nop
mov
out
cmp
sarb
sti
fcoml
adc
mov
push
lahf
idiv
int3
or
push
popf
loop
cmp
js
xor
rorl
daa
xchg
icebp
repnz
xor
imul
jge
adc
scas
xchg
jno
inc
daa
icebp
in
roll
jge
mov
ret
out
clts
pop
or
push
jo
popa
mov
sti
sbb
or
insl
ret
cmpsl
jno
add
xor
int
pop
stc
mov
mov
aad
pushf
pop
mov
inc
add
add
inc
and
test
addr16
inc
sbb
lahf
imul
and
int3
test
jle
dec
mov
mov
das
loop
shlb
lahf
xlat
popa
loope
lcall
pop
int3
adc
stos
insl
inc
xor
xchg
in
sbb
xlat
cmc
jno
dec
sbb
aad
cmp
out
int3
mov
mov
mov
js
stos
aas
rcll
pop
mov
clc
xor
xchg
stos
div
mov
test
mov
sub
sbb
cmpsb
hlt
dec
or
dec
xor
outsb
pop
imul
stos
mov
or
popa
xchg
in
outsb
jge
jecxz
inc
sub
cmp
cwtl
sbb
popa
ds
xor
cmpsb
mov
je
sbb
scas
dec
xchg
cmpsb
mov
push
ret
lods
loope
push
js
into
popf
das
mov
sub
clc
push
movsl
pusha
mov
add
cltd
js
adc
and
lods
add
mov
dec
adc
and
shrb
mov
stos
push
and
lea
push
mov
push
add
pop
cmp
das
dec
loop
outsb
aaa
sbb
pop
sbb
int3
mov
test
mov
sub
mov
lcall
loope
push
fwait
cltd
aad
dec
or
xor
pusha
mov
jae
jbe
mov
imul
jns
movsb
call
jmp
and
push
push
jecxz
ja
xor
ficompl
xorl
and
jne
push
mov
dec
loop
imull
in
rcrb
push
ss
aas
outsl
insb
dec
inc
sbb
in
ja
shlb
mov
data16
jno
add
adc
jecxz
sti
adc
rcll
mov
mov
fsubl
dec
mov
xor
lret
adc
inc
fdivl
insb
cli
pushf
js
jae
add
loopne
sbb
mov
shr
sub
pop
mov
inc
test
popf
fwait
jecxz
jns
cmpsb
fs
push
pop
cmpsl
testb
cmp
cmc
leave
adc
test
dec
inc
add
nop
cmpsl
lea
idivl
jmp
icebp
xchg
push
mov
pop
scas
or
pop
ds
xor
and
insl
lret
mov
addr16
pushf
mov
lods
jb
stos
and
out
sbb
dec
cmpsl
or
sbb
icebp
dec
fwait
addr16
cmpsb
cltd
pop
loope
mov
cmc
jns
lea
push
pop
rclb
subl
shl
xor
add
pop
mov
in
sub
push
sbb
inc
es
sub
jb
lret
fnstcw
test
pop
inc
mov
push
in
cmp
sub
frstor
and
mov
mov
nop
shlb
xchg
outsb
jl
xor
add
shrb
and
in
sbb
mov
cwtl
dec
out
mov
arpl
sbb
bound
or
push
les
cmp
enter
cld
pop
test
das
sub
mov
in
dec
or
sahf
nop
fdivrl
cmp
xor
or
cmpsl
adc
mov
xchg
fs
stc
stos
les
jecxz
cld
int
mov
pop
test
mov
icebp
cmp
fwait
pusha
dec
sbbb
mov
loopne
mov
xchg
mov
fdivp
fnstsw
pop
inc
xor
and
sub
sbb
cmpsb
loop
sbb
test
ds
es
jo
sbb
outsl
cli
jb
xchg
rclw
pop
loopne
mov
cmp
insl
loopew
popf
fs
pop
push
xchg
les
pop
inc
jg
xor
data16
cwtl
subb
sub
arpl
sbb
or
into
insb
pop
addr16
loopne
mov
push
hlt
loopne
cmp
std
jecxz
mov
lea
inc
cmpsb
lret
inc
or
idiv
mov
movsb
and
sarl
rcll
outsb
xchg
shl
jbe
pop
addb
insl
sbb
adc
daa
stos
xchg
hlt
mov
stos
cld
lahf
addb
in
adc
sub
imul
ret
sub
xor
push
shrb
sub
sub
pop
dec
bound
mov
adc
and
xor
push
jmp
lods
jle
cs
push
repnz
loopne
in
mov
int3
dec
cld
andl
inc
xchg
inc
out
rcl
mov
imul
mov
and
shl
cmp
and
lret
sti
rol
mov
or
mov
lds
out
jp
mov
pop
lahf
push
sub
and
mov
dec
cltd
ja
cmpsb
pop
aaa
inc
sarb
pop
lock
xor
mov
mov
loope
aam
jnp
or
adc
sahf
mov
or
or
jae
mov
in
sbb
or
hlt
shr
xorl
sahf
lds
mov
das
pmaxsw
ret
adc
sbb
mov
push
scas
add
mov
sub
mov
nop
popa
negl
aas
fwait
add
mov
pusha
jge
sbb
cmp
mov
jns
hlt
mov
and
xlat
mov
cmp
movsl
mov
lret
mov
mov
gs
dec
sbb
mov
pop
cmp
je
scas
mov
stc
mov
or
outsl
int
movsb
hlt
sub
sub
scas
in
add
jle
xchg
dec
iret
jb
loopne
ficomps
pushf
or
into
loopne,pn
inc
xchg
aad
pop
test
push
add
sbb
mov
adc
test
rclb
pop
movsb
movsl
jno
pop
cmp
mov
cld
rcrb
inc
mov
and
and
neg
xor
mov
dec
rcll
sbb
fcomps
jae
daa
or
das
adc
iret
push
ficompl
aad
and
xchg
sub
in
xor
add
jmp
xor
mov
mov
xchg
mov
sbb
adc
cmpsl
or
movsl
ss
in
add
mov
mov
out
nop
loope
out
cmp
mov
in
rolb
cmp
rorl
iret
leave
add
cmp
xor
cs
pop
imul
outsl
xchg
lcall
pop
gs
loopne
repz
rclb
gs
repnz
sub
addb
sub
cmp
xchg
ljmp
xor
subb
xor
pop
rcrl
xor
pop
jmp
xchg
ljmp
bound
xor
fsubrl
shrb
jo
add
jb
inc
cmp
stos
jae
sbb
pushf
andb
adc
aam
and
dec
lea
adc
add
cld
outsl
adc
mov
and
test
pop
jnp
ret
mov
cltd
or
xor
fsts
adc
push
pop
mov
movsb
mov
xor
into
lds
mov
xorb
add
xchg
jbe
fmul
mov
xchg
add
lcall
test
push
cmp
mov
add
push
and
cwtl
adc
cmp
sub
ss
aam
sub
xchg
xor
stc
popl
mov
pop
jns
ds
stc
aad
jns
push
sub
in
jecxz
cmp
sub
cmp
hlt
inc
out
sbb
jge
pop
mov
cmp
adc
les
roll
xchg
or
jo
jp
je
push
mov
scas
mov
ljmp
dec
mov
mov
pop
push
jecxz
add
inc
lods
iret
shrb
outsl
mov
loop
andb
cmp
and
xchg
test
xor
sub
aaa
sbb
xchg
xchg
cmpsb
jle
ja
in
call
pop
addb
mov
mov
out
push
adc
neg
sub
out
hlt
inc
ret
xchg
inc
out
dec
stos
arpl
es
adc
call
pop
int3
arpl
inc
lock
jmp
jecxz
out
sbb
adc
pop
das
lock
lods
aaa
popa
pop
cs
xor
pop
mov
dec
dec
dec
dec
cs
sub
imul
sub
dec
xchg
jb
and
and
sub
or
lea
into
dec
movsb
ja
sub
testl
adc
xchg
xorb
jge
stc
int3
fucomip
xchg
cmpsl
sub
mov
cmp
out
sahf
fwait
jb
notb
sti
xchg
cld
pop
adc
push
mov
popa
rorl
cmp
cmp
inc
and
inc
add
loopne
push
leave
mov
es
xchg
mov
scas
lods
enter
aam
fistl
xor
and
pop
lods
pop
push
mov
fdivrl
shl
in
aad
daa
xchg
xlat
insb
lds
xchg
movsl
popf
jbe
movsb
push
out
ja
sbb
cmp
scas
out
loope
jne
scas
jns
add
xchg
mov
cwtl
aam
mov
loop
adc
sbb
lcall
fcmovnbe
mov
add
fcompl
jle
jl
repnz
dec
push
sti
int
divb
xor
ficoms
sbb
sarl
faddl
sbb
imul
inc
mov
enter
mov
sub
in
rclb
mov
sbb
mov
out
dec
aas
out
fucom
cmp
inc
push
test
mov
repz
cmpsb
jge
lods
mov
sub
cs
mov
scas
cwtl
xor
pop
movsb
jne
insb
aad
lret
jne
adc
shlb
cmpsb
clc
adc
out
rclb
inc
mov
xchg
push
mov
sbb
call
hlt
rorb
cltd
arpl
sti
lret
jne
gs
loope
xlat
xor
cmpsb
cltd
jge
insl
iret
jp
inc
cmp
sub
pop
test
push
xchg
sub
pop
inc
pop
push
mov
pop
popf
js
scas
xor
aad
aad
or
lret
dec
arpl
jmp
call
fsubs
pushf
mov
xor
dec
imulb
sub
adc
push
std
pop
aas
or
test
iret
shlb
and
xor
jno
pop
push
sub
dec
jnp
iret
or
jmp
dec
pop
jne
lds
into
adc
xor
xor
add
popf
xor
mov
mov
add
or
inc
sub
int
pop
mov
adc
rorl
ljmp
ret
pop
mov
ds
lcall
xchg
filds
aaa
clc
mov
shrl
ja
dec
mov
mov
mov
nop
cmp
cmp
out
sub
dec
cmpsb
rcpps
xor
sbb
jge
lods
sti
dec
and
mov
stos
out
sbb
and
cwtl
jl
xor
cld
mov
outsb
push
dec
mov
xor
ljmp
test
js
pop
xchg
mov
and
push
aaa
mov
in
mov
pop
cld
hlt
pop
cmpsb
sbb
add
dec
sub
int
fwait
ja
inc
sbb
xor
loopne
pushf
cwtl
jp
push
out
add
lods
add
sbb
pop
bound
ret
in
jge
jmp
sahf
jns
push
pop
cwtl
fs
fidivrl
dec
je
adc
mov
fistps
les
mov
sbbl
repnz
sarb
lret
xlat
or
jae
shrb
sti
outsl
shl
sbb
sbb
inc
cmc
int3
xchg
pop
xchg
loope
xchg
and
cmp
scas
jp
and
in
xchg
jbe
sub
lcall
js
scas
or
fisubl
xchg
push
gs
xchg
icebp
shlb
daa
lidtl
je
std
aas
jno
test
mov
pop
ficompl
fidivs
mov
sbbl
lret
xchg
push
xor
jp
lret
mov
dec
int
sbb
aas
adc
mov
cmp
pop
insb
scas
xchg
aaa
mov
mov
cmp
xchg
fdivs
push
loop
and
mov
sbb
lods
pop
repz
outsb
pop
adc
jbe
sbb
movsl
js
adc
dec
call
mov
xchg
or
xor
pop
sarb
mov
ss
or
push
adc
mov
loopne
xlat
aaa
mov
xchg
aam
jmp
test
ss
bound
cmpsb
xchg
mov
adc
xchg
jnp
int
push
dec
and
xchg
jle
arpl
loope
and
mov
xchg
mov
shlb
and
xor
xchg
sub
dec
sahf
imul
sbb
stc
pop
pushf
jno
sbb
mov
lcall
dec
cltd
lea
sub
iret
lea
testl
arpl
mov
xchg
sub
lea
push
mov
push
dec
xchg
mov
fs
lock
adc
inc
adcl
push
fstl
addr16
sbb
xchg
jg
push
and
dec
mov
mov
mov
shlb
mov
shl
ljmp
xchg
or
mov
push
clc
ret
sub
lods
sahf
orb
jecxz
lock
mov
call
ja
ret
nop
sbb
xor
ss
aaa
mov
cmp
bound
push
jnp
pop
insl
lea
dec
jmp
in
and
aaa
cld
out
loope
mov
mov
fwait
xlat
test
movntq
enter
cmp
fistpl
test
ds
sub
inc
mov
ret
sbb
pushf
inc
adc
sbb
mov
shl
out
dec
xor
and
pop
fldenv
dec
push
cmp
stc
xchg
lret
shlb
cmp
pusha
sbb
test
push
cltd
cmpsb
sbb
pcmpgtw
lcall
ja
roll
cmp
jbe
add
enter
pop
pop
push
stos
add
mov
add
push
mov
data16
inc
sub
popa
out
inc
cld
fidivrs
mov
ljmp
cmp
jg
fwait
adc
lcall
pop
inc
cld
rcrl
repz
xchg
es
pop
shll
and
mov
pop
ret
add
nop
mov
adc
cmp
mov
aad
or
mov
arpl
rolb
and
nop
pop
sbb
or
inc
scas
xor
jne
lahf
jbe
es
xor
aad
pusha
cld
repz
pushf
ficoml
cmpsl
xchg
js
and
rol
mov
outsb
inc
and
mov
arpl
js
cmc
and
test
fistpll
out
icebp
rcll
sarb
xchg
mov
push
pop
in
inc
and
adc
dec
add
mov
or
jne
lds
mov
stos
push
ret
xchg
fadd
iret
out
addr16
cwtl
sub
pop
bnd
add
test
ret
and
ljmp
shll
addb
adc
lock
aam
jo
clc
jmp
ds
loopne
sbb
scas
push
mov
ljmp
in
push
std
ja
repnz
rorl
loop
or
subb
popa
lahf
ficompl
in
int
jo
mov
lods
addr16
inc
mov
jmp
mov
push
es
in
sbb
add
mov
jns
sbb
or
js
loope
int
xor
aaa
mov
inc
and
fdivrl
mov
dec
cs
enter
dec
xor
cmp
gs
adc
movsb
dec
test
xchg
mov
sbb
mov
sub
stos
or
mov
push
xor
xor
pusha
xchg
scas
jle
push
jo
notl
sbb
mov
jnp
int3
cltd
repz
es
inc
in
loop
mov
in
jae
xchg
neg
mov
xor
repnz
lret
test
adc
out
hlt
ss
sub
xchg
fadds
cmp
sbb
sar
push
scas
mov
popf
lcall
fwait
add
mov
inc
daa
or
pop
push
mov
inc
lcall
insb
cld
mov
fimull
cmpsl
push
iret
das
repz
fcoms
jno
outsl
cmc
repnz
mov
imul
imul
loop
xor
cld
push
xchg
jnp
dec
jp
test
fisttpl
repnz
lods
or
xor
mov
iret
pushf
xor
lds
fstl
dec
std
filds
push
or
pop
lret
das
mov
fs
icebp
push
adc
in
mov
add
cmp
cmpl
inc
sub
or
mov
push
sbb
daa
push
or
push
or
sub
retw
fwait
ret
push
lret
in
jmp
lods
and
fsubr
ja
mov
adc
rcll
cmpl
repnz
or
cltd
and
mov
or
pop
cmp
adc
popa
mov
fisubl
mulb
mov
and
mov
idivb
stc
sbb
lods
cmc
adc
stos
inc
mov
mov
mov
les
mov
pop
and
aaa
xchg
and
testl
sub
les
push
fistl
mov
xor
movsb
pushl
in
test
xchg
cmp
ficomps
int
cmp
aas
and
dec
sbb
addr16
mov
cmpsl
inc
jb
aaa
jne
pop
adc
outsb
inc
psubusb
ds
dec
adc
push
nop
jnp
daa
xchg
sub
nop
mov
testb
mov
scas
movsb
xchg
mov
aam
icebp
mov
jge
or
cs
jne
aad
roll
sbb
fcoms
add
in
dec
pop
sub
or
push
mov
pop
cmpsl
testl
jns
jo
scas
pop
scas
stos
dec
insb
test
ja
pusha
push
jbe
inc
dec
push
scas
push
ljmp
push
inc
mov
dec
popf
std
test
testl
mov
cmc
add
pop
mov
ja
test
mov
call
pop
pusha
les
xor
sbb
test
pop
out
inc
sub
pop
movsl
jbe
shrl
imul
adc
or
imul
or
jb
mov
negl
scas
or
inc
adc
andb
out
mulb
or
push
pop
sub
stos
sbb
xor
jg
and
rclb
mov
or
xchg
or
pop
ret
add
data16
roll
fnstsw
out
test
jbe
jbe
ret
les
jno
sbb
cmp
xor
out
test
pushf
lret
inc
test
adc
xlat
or
insb
dec
xchg
or
loopne
fildll
mov
mov
xchg
bound
lcall
mov
in
add
dec
jg
lods
fbstp
xchg
popa
mov
mov
add
lods
inc
enter
mov
je
test
sub
fs
lcall
cmova
sti
sti
cmp
nop
push
rorb
mov
popa
stos
test
sub
ja
push
dec
xor
xor
loope
not
iret
cmp
pop
push
loopne
movsb
sbb
aas
aaa
ja
movq
adc
out
jno
cmp
fidivrl
sbb
dec
sahf
loopne
test
dec
cmp
insl
fsubr
mov
data16
ljmp
mov
cwtl
mov
push
popf
and
push
popw
out
imulb
push
pop
xchg
push
rorl
xor
mov
rorl
mov
pop
popf
push
rorl
xchg
cmp
mov
mov
out
out
mov
daa
mov
nop
gs
and
repnz
filds
mov
push
in
addr16
cmpsb
test
adc
mov
outsb
aas
mov
ret
fstpt
pop
bound
sbb
inc
call
test
mov
xchg
out
pop
iret
push
cmp
jb
cmp
sub
xchg
sbb
lods
and
add
es
int3
div
mov
mov
shl
mov
jae
jbe
push
fsts
jo
cli
xchg
sbb
repz
xchg
cmp
push
sub
or
jmp
dec
repnz
mov
mov
xor
data16
shll
shll
mov
pop
dec
js
push
xor
pop
sbb
xchg
pop
mov
and
mov
mov
fs
je
jl
sub
daa
fwait
or
cwtl
cmp
or
mov
aam
add
push
jmp
es
sbb
push
sahf
inc
adc
mov
pop
or
popf
xchg
pop
dec
outsl
nop
repnz
int3
jecxz
push
rorl
mov
shrl
adc
cmpsb
sbb
data16
or
pushf
sub
outsb
and
push
xor
fisubrs
mulb
push
sub
jno
inc
mov
push
xchg
adc
pop
and
mov
jno
push
stc
jg
dec
mov
in
scas
dec
stos
fxch
mov
scas
test
dec
bound
stos
inc
mov
sbb
lds
inc
push
jae
je
js
mov
jle
mov
daa
gs
leave
subb
add
push
mov
incl
lcall
mov
push
and
call
push
mov
fnstcw
cs
dec
inc
test
sub
loopne
adc
jns
dec
dec
rorb
adc
ret
mov
add
push
repz
mov
in
or
xor
insb
ja
inc
cmp
leave
into
dec
add
call
stos
inc
mov
fwait
sahf
gs
jecxz
enter
aaa
xor
mov
fs
dec
sub
out
dec
jno
test
cli
punpcklbw
sti
sub
sub
xor
xchg
adc
jmp
cmp
hlt
gs
test
sub
inc
rorl
call
pop
out
fisttpl
or
sbb
dec
sahf
inc
mov
mov
dec
adc
mov
fldl
aas
push
jge
int
mov
mov
fucomip
idivl
mov
xchg
fdivrl
push
inc
cmp
push
rolb
and
aaa
insl
aaa
jle
mov
and
jecxz
roll
adc
sbb
stos
popa
scas
inc
iret
adc
mov
mov
push
call
mov
inc
sub
movsb
adc
xor
outsb
mov
ficomps
xchg
shll
jp
fucomp
mov
bound
dec
mov
or
adc
rcrb
jecxz
lea
xchg
pushf
push
cmpsl
aad
cltd
hlt
stos
jns
mov
std
cld
cli
cmpsb
push
mov
lock
inc
xor
fmulp
mov
dec
sub
popa
lcall
adc
jmp
mov
insb
inc
mov
sbb
out
xor
pop
jg
mov
mov
jecxz
inc
js
sub
sub
add
jmp
iret
mov
cmc
inc
lds
cmp
mov
xchg
ja
inc
xor
pop
xor
mov
sub
out
test
cltd
jb
je
lret
push
mov
mov
negl
jle
out
sbb
loope
inc
push
es
jb
js
mov
pop
pop
sbb
pushf
xchg
aad
and
jecxz
bound
xor
xor
aad
jb
das
adc
loop
mov
mov
addr16
out
push
in
inc
xchg
push
in
enter
and
mov
jnp
mov
cwtl
pop
push
pop
or
xor
ss
mov
add
pop
fstpl
arpl
or
adc
cmp
pop
pop
sub
pop
mov
adc
push
jge
mov
and
mov
addr16
add
jb
xchg
dec
inc
dec
cmp
sbb
add
xchg
mov
call
xor
lret
int
inc
adc
xor
dec
push
pop
sahf
int
int3
push
dec
mov
mov
pop
mov
imul
xchg
enter
mov
fninit
test
nop
dec
mov
inc
ja
inc
nop
adc
sub
xorb
lret
ljmp
push
into
mov
fidivs
mov
adc
movsb
dec
mov
jb
cli
fimull
outsl
call
jl
dec
imul
daa
test
mov
sub
mov
ficompl
ret
ja
pop
push
test
pop
cmp
mov
lods
mov
sbb
shlb
fldt
mov
roll
mov
cmp
jge
pop
rcl
sub
xor
pop
sub
mov
mov
loop
fldt
jno
cli
inc
adc
push
sub
aad
and
xor
adc
inc
jnp
dec
push
mov
jge
lahf
scas
sarl
mov
fidivl
arpl
push
mov
pop
scas
stos
inc
jno
popf
sbb
hlt
mov
push
out
into
adc
push
ljmp
add
adc
lss
scas
inc
pop
xchg
add
repz
inc
push
and
orb
loope
in
mov
adc
out
jl
mov
fcompl
xchg
xor
mov
andl
imul
jmp
mov
cmc
push
movsl
insb
push
add
push
mov
jno
or
aaa
xor
mov
push
lret
lods
notb
mov
shll
lods
dec
je
add
out
stc
lock
mov
subl
mov
push
mov
fstps
mov
or
xchg
ja
jnp
mov
xchg
xor
xor
mov
out
je
sahf
js
mov
mov
add
pop
push
cmpsl
pop
sbb
imul
mov
pop
mov
fwait
shll
loope
les
ss
and
fwait
enter
lock
pushf
imul
and
nop
jl
push
movsb
push
js
jno
inc
xchg
stos
sbb
cmpb
clc
aaa
and
xchg
test
add
sub
and
leave
scas
shll
push
xor
add
rclb
sbb
mov
mov
aas
xchg
add
pusha
mov
push
das
jp
mov
mov
pop
jecxz
and
xchg
addr16
dec
cmovp
push
lds
cmc
add
hlt
cmp
dec
imul
sbb
addr16
sub
loop
sti
xor
inc
cmp
add
pop
stos
fiaddl
inc
popf
xor
adc
cli
or
jns
mov
das
inc
cwtl
pop
or
rolb
pop
mov
dec
lahf
push
insb
lods
ds
xor
add
sbb
int3
push
mov
sbb
icebp
mov
daa
cmpsl
jnp
test
mov
xchg
fadds
inc
cltd
add
push
adc
sub
push
xor
push
sbb
add
fucom
cli
or
pop
cmp
sahf
sub
add
out
sub
popf
icebp
push
and
push
lock
cmp
push
fisubrs
call
pop
dec
xor
wbinvd
mov
jo
or
lret
mov
mov
std
jp
jnp
cld
lret
mov
ja
gs
ret
icebp
out
ret
adc
sub
or
mov
cmpsl
and
push
xor
xchg
inc
dec
mov
insl
sbb
lock
ds
or
lcall
mov
das
mov
adc
rep
adc
mov
push
pop
pushf
push
adc
xchg
inc
imul
push
push
jnp
outsb
mov
inc
dec
test
cmp
sbb
ret
jmp
fsts
testl
jecxz
icebp
lahf
sub
push
cmp
fsubs
test
cmp
ret
lods
cwtl
insb
cmp
int3
xor
imul
mov
jae
jo
push
cmc
lock
les
mov
fcmovbe
stc
mov
pushf
or
push
inc
repnz
jnp
mov
int3
clc
xchg
shll
inc
and
fdivrs
addr16
es
adc
mov
jne
subl
aas
data16
mov
nop
pop
repnz
or
hlt
mov
pop
jg
dec
adc
add
insl
and
shlb
repnz
xchg
add
push
lea
add
push
jbe
pop
cmc
lret
out
xor
cmp
or
dec
aas
mov
lcall
and
mov
fstl
cmc
aad
arpl
in
inc
mov
push
dec
mov
mov
dec
mov
cmc
dec
cltd
pop
imul
daa
xchg
inc
sub
mov
outsl
push
push
pop
jg
jecxz
sub
lods
mov
mov
insb
lock
and
inc
jmp
out
xor
jge
arpl
lods
in
sub
imul
xchg
shlb
inc
xchg
sbb
cmp
sbb
xchg
mov
mov
cmp
jg
pop
mov
push
xchg
dec
arpl
les
dec
xchg
pop
int3
mov
push
popa
inc
andps
daa
lock
adc
mov
cmp
lods
repnz
mov
cmp
pop
jle
dec
shrl
lea
mov
mov
lds
adc
mov
mov
ljmp
mov
ljmp
fistpll
and
cli
xchg
testl
aad
and
and
jmp
cli
xlat
and
dec
aad
fnstsw
mov
addr16
adc
ljmp
neg
sbb
fnsave
pop
in
lahf
imul
fwait
jg
pop
imul
dec
mov
cmc
nop
into
cmc
cmp
lds
pop
jns
dec
arpl
cmp
mov
xor
test
cmc
push
data16
sbb
outsl
pop
mov
ret
les
adc
push
daa
repz
cmp
std
icebp
fnsave
jecxz
unpckhps
or
daa
cltd
mov
cmpb
or
inc
iret
mov
mov
test
jle
mov
adc
adc
fldt
jbe
cmp
cmp
popf
inc
cmpsb
xor
jns
xlat
add
lds
fisubl
add
mov
pushf
jl
adc
std
push
and
adc
sub
imul
pusha
daa
lds
daa
dec
repz
int
and
hlt
or
and
lock
jno
xor
iret
dec
insl
jno
insb
jge
mov
or
xchg
loope
outsl
pop
lea
cmpb
mov
cmpsb
jge
mov
negb
ss
sti
push
inc
xor
xlat
aaa
jp
dec
cmp
test
mov
leave
clc
cmp
aaa
jp
push
sub
in
or
xor
adc
dec
call
jecxz
push
mov
xlat
jge
fstl
imul
shrl
aam
out
dec
mov
mov
lret
rolb
mov
lods
test
or
mov
enter
mov
popl
push
movsl
cwtl
dec
icebp
jne
fisubrl
adcl
loopne
xchg
dec
cmp
or
data16
sbbl
lcall
sub
je
clc
mov
mov
pushf
mov
aam
cs
imul
or
divl
mov
out
dec
push
cmp
ret
pushf
leavew
xchg
jmp
dec
or
add
inc
adc
in
cs
pop
rcrl
in
pop
dec
and
sarb
das
and
orl
daa
jb
xor
shll
or
rorb
jo
add
xchg
lock
cmp
mov
imul
pop
pushf
outsb
xor
push
int
in
stos
xchg
scas
xchg
lret
sahf
jmp
jecxz
js
ja
mov
in
mov
mov
adcl
add
imul
daa
ret
shll
ljmp
stos
mov
mov
pusha
mov
sbb
jge
xchg
outsb
mov
cltd
iret
cltd
aam
xlat
adc
lahf
cmc
aas
mov
lods
mov
fwait
jnp
sub
and
lds
mov
pop
mov
scas
dec
mov
mov
lea
push
xchg
and
lret
sub
sti
sub
jae
xchg
lds
je
add
cmp
insl
jle
sbb
test
test
insl
ret
hlt
push
inc
repz
add
xlat
rcrl
rcrl
inc
loope
or
or
mov
adc
push
mov
push
stos
or
push
mov
xchg
pop
mov
pop
mov
inc
sub
mov
mov
xor
mov
test
mul
leave
movsl
test
mul
ror
leave
mov
or
lret
dec
ss
je
and
or
pop
bound
int3
mov
adc
sti
push
test
pop
repnz
sbb
fdivrs
or
jae
addl
lret
dec
cld
insl
xchg
outsb
cmp
pushf
lret
ds
mov
stos
adc
add
push
mov
mov
mov
jb
mov
or
inc
pop
rcl
dec
cmp
add
cmp
xor
insl
jp
adc
or
mov
sti
iret
or
xchg
cmpsb
dec
xchg
sub
jle
cli
test
js
fimuls
cmp
xchg
and
jl
enter
aad
addr16
int
andl
jg
inc
sub
jmp
inc
and
add
add
cmp
lods
data16
jae
iret
or
cwtl
dec
lret
and
ficoms
xchg
push
or
loopne
mov
inc
jle
adc
fisubl
pop
jge
int3
pop
mov
jnp
or
pop
dec
sub
negb
shlb
push
mov
pop
cmc
icebp
dec
lret
scas
insb
inc
jnp
loopne
pop
or
imul
in
outsb
mov
cmpsl
repz
fcoms
lret
or
fs
mov
out
ret
or
outsl
adc
std
mov
dec
cmpsb
js
inc
sbb
mov
inc
mov
jo
out
jge
inc
cltd
sbb
pop
cmp
add
hlt
cmp
lret
popf
adcb
ljmp
push
out
adc
dec
jmp
fs
mov
movsl
and
jge
sub
das
pop
jecxz
cmpsb
sub
sti
pop
pop
jecxz
lods
xchg
das
xlat
sbb
hlt
in
leave
xchg
push
xchg
addb
xchg
xchg
and
mov
and
mov
daa
or
cwtl
fdivl
cltd
gs
add
jb
inc
pop
or
mov
mov
iret
inc
ds
inc
and
xchg
insb
scas
hlt
jo
ret
lahf
and
push
out
lcall
out
jo
dec
in
or
or
nop
and
addr16
frstor
std
in
popf
ret
push
notl
mov
out
jo
push
ss
test
and
mov
sub
loop
pushf
stos
test
xor
popa
mov
daa
and
inc
xchg
cmp
lods
xchg
or
cmp
insl
scas
das
add
sub
sbb
mov
imul
insb
push
ret
fistpll
dec
xchg
pop
cmp
dec
outsb
xchg
lahf
xor
ret
mov
es
aad
and
mov
mov
testb
adc
pop
cmpsl
sti
pop
jmp
loop
pop
icebp
aas
jmp
ret
xchg
popa
sbb
les
andl
cld
in
sti
test
inc
mov
xor
inc
jne
es
daa
xchg
push
negl
push
pop
idivl
outsl
mov
xchg
dec
lcall
call
adc
mov
push
lods
sbb
mov
outsl
cmpsl
dec
shlb
jle
jmp
jne
push
insl
pop
add
mov
push
les
cld
roll
jbe
out
in
pop
sarl
fs
test
or
test
ficompl
dec
and
test
hlt
scas
mov
pop
cli
out
push
pushf
repz
add
sub
cld
or
add
and
mov
xor
push
add
inc
push
sti
fldt
sbb
rcrb
mov
jl
jno
jo
push
pop
xchg
mov
lock
insb
imul
xor
data16
xchg
push
dec
fwait
inc
and
data16
xor
or
pop
inc
sbb
loop
nop
jbe
cs
cmc
jae
sub
mov
fcomp
lea
jecxz
jb
push
adc
pop
mov
sub
lret
push
or
loopne
sbb
js
stc
inc
push
sub
and
mov
add
push
lahf
sbb
mov
mov
pmulhuw
push
sub
mov
stos
out
jmp
je
gs
xor
jl
mov
imul
jo
pop
lret
in
sarb
movsl
sti
mov
mov
addr16
les
roll
push
xchg
insb
and
fwait
dec
inc
xor
cs
mov
mov
scas
sbb
in
jo
or
pop
push
les
cmp
add
cmp
mov
and
fs
xchg
cmp
ljmp
jne
mov
sbb
pmaxsw
sbb
shlb
arpl
test
das
mov
add
cld
or
test
les
shrl
inc
sahf
push
inc
sub
mov
int3
xor
xor
and
inc
cltd
push
into
outsb
jle
xchg
fcoml
stos
pop
mov
push
or
rorl
push
mov
outsb
fildl
push
aad
push
push
sbb
push
lods
push
mov
popf
stos
pop
push
cli
mov
pop
inc
push
loopne
mov
or
mov
push
push
sbb
xor
cmp
adc
jnp
nop
ljmp
jno
dec
popl
outsl
or
xchg
psubusw
mov
sub
lds
push
inc
dec
fs
push
mov
or
mov
scas
imul
das
pop
out
mov
push
mov
cmpsl
dec
pusha
iret
mov
dec
ss
mov
sbb
mov
repnz
xor
xor
jecxz
out
outsb
imul
popa
test
daa
es
sub
jae
shrl
cli
cli
pop
rcrb
insl
loop
cs
movsl
sti
sbb
inc
cmp
mov
mov
xor
and
push
inc
pushf
pop
mov
mov
call
sub
out
xor
stos
mov
pop
popf
push
push
fs
xchg
lretw
out
in
gs
repz
inc
xchg
and
mov
popf
push
clc
mov
jg
sahf
jp
pusha
xchg
jae
fidivrs
jmp
int
pop
into
cmp
mov
cmp
nop
pop
stos
adc
push
ret
loopne
dec
int
ljmp
pop
xchg
push
out
mov
mov
cmp
stos
fs
mov
jmp
xor
sub
push
mov
mov
cmp
push
aaa
iret
in
xor
push
imul
into
and
mov
xchg
cmp
clc
push
inc
test
imul
dec
xor
xchg
inc
iret
popf
dec
push
negl
jne
stc
sub
outsb
pop
jle
scas
orb
sahf
jp
mov
ja
fcmovnu
ss
mov
pop
out
iret
sti
cmp
mov
jno
jg
int
jne
mov
movsb
mov
mov
mov
mov
push
lods
and
fdivrl
in
cwtl
pusha
mov
mov
push
lret
mov
jnp
add
enter
mov
in
ss
in
xchg
pop
cwtl
sub
js
popf
fcmovu
jecxz
in
addr16
push
stos
push
dec
mov
pop
dec
mov
mov
sub
xchg
testb
movsl
sub
xor
test
sbb
jecxz
mov
sbb
loop
shlb
es
xor
sub
dec
sti
popf
ret
bound
inc
jge
cmp
fwait
jmp
cltd
push
pop
cltd
mov
sahf
mov
std
in
scas
scas
add
sbb
adc
push
data16
xor
inc
lcall
mov
pop
or
jle
pop
scas
add
stos
mov
mov
dec
lods
aaa
clc
mov
xor
dec
sub
pop
sub
in
dec
sub
jne
sub
xor
adc
fnsave
mov
xchg
frstor
push
loopne
das
xlat
out
sub
sub
lods
mov
test
mov
dec
mov
adc
xchg
cmp
push
sbb
cmp
cmp
mov
xchg
xor
les
xchg
mov
jmp
stos
xchg
or
loop
ja
repz
adc
xor
sbb
mov
loope
mov
inc
ret
mov
or
cli
jns
lea
jns
mov
adcl
inc
pop
fisubl
loope
dec
pop
fadd
test
or
jae
push
data16
std
pop
mov
pop
xchg
cmpsl
mov
enter
cmpb
or
jns
stc
xchg
mov
push
push
inc
xchg
push
je
push
xchg
mov
mov
arpl
xor
push
stos
xchg
push
xor
mov
dec
jno
shrl
insb
push
sarb
clc
insl
in
js
insl
and
add
mov
mov
leave
in
cmp
fisubrl
in
test
adc
rcrl
aam
inc
ret
mov
test
push
scas
xchg
push
outsl
xor
stos
loop
inc
cmp
mov
mov
outsb
xlat
xor
jl
jl,pn
jno
push
xchg
rcll
sbb
out
fsts
sbb
inc
mov
test
fcoml
add
imul
test
jp
dec
cmp
dec
inc
mov
dec
xor
cmp
insb
scas
xchg
sbb
push
fwait
or
jo
adc
fnsave
movsl
movsb
movsb
add
nop
nop
mov
aas
pushf
outsl
push
sahf
into
sub
shlb
rcrb
lods
lock
lahf
xchg
icebp
aad
or
adc
movsb
sub
test
popa
test
lea
xlat
ret
and
xchg
in
or
inc
jle
lods
adc
push
mov
cmp
jmp
outsb
pusha
cmp
cmp
lods
out
fxch
lcall
jg
sbb
outsl
outsl
push
push
fnstsw
dec
sub
pop
test
into
cld
inc
and
out
push
or
in
scas
cld
pop
push
adc
shlb
push
mov
xor
xor
int
stos
lds
jg
inc
cmp
icebp
push
loope
lock
outsb
inc
xor
dec
out
cld
aad
sbb
pusha
cmpsl
and
in
cmc
push
sbb
sub
aad
push
cs
cmp
adc
add
rcll
clc
movsb
xchg
int3
inc
or
pop
aad
nop
outsl
dec
ss
loopne
add
pop
das
in
mov
adc
and
int3
cwtl
push
int3
mov
dec
test
ds
add
dec
or
dec
xchg
aad
outsb
inc
cmp
mov
popa
popf
loope
out
mov
stc
mov
pop
std
out
mov
cmc
fildl
xchg
jl
ss
stos
jb
xor
jle
sti
jb
xchg
sbbl
mov
push
and
mov
jle
pop
dec
xchg
sub
adc
push
adc
cmp
push
sub
xchg
out
ljmp
fstps
daa
frstor
cmp
pop
pop
mov
popa
cs
mov
insl
jmp
inc
jge
dec
jl
push
or
add
fists
add
aaa
jmp
cs
subl
xchg
insb
inc
stc
mov
jb
or
jnp
pop
add
mov
ret
cwtl
push
xchg
pop
ss
push
ret
mov
inc
sti
sbb
mov
pop
nop
orb
std
scas
sub
fs
push
inc
insb
xchg
mov
imul
xor
fwait
mov
cmp
adc
jecxz
cmp
dec
fldl
xchg
mov
sets
pop
add
mov
test
aas
sub
insl
mov
push
mov
xchg
popa
push
es
mov
mov
subb
rorl
jecxz
xor
lcall
sbb
cmp
jmp
aas
jl
cs
cmpsb
sahf
push
js
sub
pop
sbb
insl
mov
cmp
jge
pop
xor
mov
pop
popa
inc
test
jmp
ret
stc
mov
testl
les
sbb
xor
or
data16
add
outsb
rolb
pushf
push
push
jbe
adcl
into
mov
xlat
pop
das
push
ret
addb
push
test
imul
repnz
test
iret
jp
shl
jle
fiaddl
inc
test
repz
mov
in
lods
adcl
push
inc
lods
fs
jo
fwait
ljmp
sbb
add
or
xor
jge
loope
sbb
mov
rcrb
jmp
mov
mov
arpl
cld
insl
adc
push
sub
or
movsl
and
pushf
loope
out
outsl
cmp
movsl
sub
arpl
imul
pop
mov
or
push
jle
enter
arpl
sub
shr
es
add
add
je
in
lods
lock
nop
sub
or
daa
adc
add
jmp
mov
jb
test
dec
cmc
jle
ljmp
int
xchg
insl
inc
jle
cmpsb
jne
cmp
sbb
jle
add
jmp
mov
fdivrp
into
xchg
dec
mov
jne
rcrl
dec
jae
mov
mov
movsb
out
jae
xchg
out
mov
jp
hlt
jb
pop
fcoms
xchg
pushf
adc
imul
inc
adc
sub
leave
sbb
or
insb
loope
decl
dec
or
loop
ret
nop
jl
xor
incb
ja
mov
dec
xchg
inc
push
inc
ret
sahf
cld
stc
sarb
add
imul
xor
sub
les
cmp
sbb
dec
and
in
or
jbe
push
gs
iret
sbb
pop
mov
xchg
adc
test
lods
jmp
rclb
out
fs
je
je
into
dec
cmc
pusha
mov
add
dec
jecxz
adc
fildll
add
cmp
imul
dec
pop
mov
mov
std
push
push
lar
adc
xchg
divb
and
xor
bound
push
call
out
cmpsl
out
mov
and
shl
nop
lahf
pop
int
repnz
sbb
adc
cmp
mov
addb
fsts
adc
sbb
sbb
arpl
pushf
push
pop
dec
jo
fldenv
xchg
xor
mov
mov
push
add
mov
ret
fsubrs
jg
push
pop
pushf
add
mov
aad
push
xchg
pop
jecxz
jecxz
mov
popa
dec
sub
out
mov
inc
test
adc
jecxz
popl
bound
sbb
adc
stc
dec
jle
insl
adc
xchg
xor
push
ss
xchg
fnsave
ljmp
mov
mov
pop
test
mov
inc
jmp
push
fidivrs
cmp
push
jae
xchg
sbb
call
icebp
int
push
jecxz
lea
cmp
add
aam
testb
mov
fimuls
popa
stos
test
loope
mov
dec
cmp
sti
jno
lcall
jns
test
xlat
movsl
mov
cld
xchg
popa
mov
xlat
and
lods
insl
push
out
xchg
or
xor
sbb
xlat
push
push
mov
push
xchg
sahf
pop
push
ds
mov
scas
cltd
or
pop
mov
repnz
sahf
inc
pop
stc
cmp
scas
outsb
sbb
leave
dec
mov
loope
push
rol
jb
dec
daa
and
cltd
push
adc
sbb
sub
jg
or
mov
std
pop
xchg
push
lods
push
push
dec
and
pop
mov
sbb
scas
fildl
xor
aas
sub
xchg
dec
inc
xor
pop
dec
in
lds
mov
adc
xchg
in
xchg
test
cmp
jge
push
sbb
addr16
pop
inc
or
sbb
rcl
call
push
into
jge
fsubp
in
sub
xor
xor
cmp
hlt
lret
insl
mov
push
cmp
movsl
inc
fsubrs
or
sbb
mov
sub
sub
shl
pop
adc
cmpsl
rcll
cmp
test
cmp
cltd
nop
cmp
imul
aaa
lret
mov
xlat
push
sbb
in
mov
jmp
sub
sbb
and
jp
iret
xchg
insl
inc
add
sahf
push
test
sbb
or
aas
dec
adc
test
sub
sub
jnp
mov
mov
xor
mov
std
adc
mov
dec
int3
std
std
in
push
sub
pop
jp
cld
dec
out
cwtl
add
call
sub
pop
and
mov
cmp
jne
insl
sub
or
icebp
mov
jo
roll
sub
dec
ret
lcall
xor
and
sarb
ret
push
ficompl
js
out
pop
daa
scas
push
cmp
ret
pushf
stc
fisttpll
and
and
jge
mov
sar
pop
adc
int3
addr16
addps
movsb
or
add
mov
mov
pop
sahf
out
repnz
pop
xchg
mov
aad
lret
jmp
out
fdivr
das
inc
push
push
stos
xchg
pop
cmpsb
repz
add
add
pop
pop
lock
into
jae
adc
daa
imul
std
push
pop
test
enter
in
icebp
push
test
scas
pop
dec
xor
pop
ss
insb
rcll
sbb
jne
imul
fs
fisubrl
les
sbb
lods
xchg
ja
push
inc
daa
stc
lds
push
es
xorl
sbb
cs
mov
movsl
mov
add
jge
andb
cmpsb
add
aam
out
jmp
lahf
add
gs
fdivrs
xchg
and
pop
lret
call
push
jmp
cmp
test
sbb
test
gs
cmp
sbb
mov
pop
xor
cmp
je
insb
jne
imul
pushf
xor
dec
cli
in
into
mov
jnp
sub
push
jmp
scas
fwait
mov
stos
stc
sarl
scas
loopne
push
pop
das
shrb
lock
pop
push
jg
dec
in
jle
sbb
sbb
loope
in
stc
dec
les
fldt
push
pusha
dec
loope
ss
ds
je
cld
iret
xchg
push
mov
xlat
jg
subb
out
push
jl
mov
fbstp
push
push
sub
jns
das
arpl
pop
sarl
in
fucom
es
mov
inc
bound
daa
in
fmulp
cmp
test
push
out
hlt
movsl
adc
dec
test
or
mov
loope
sbbb
aam
jne
xchg
in
in
cmpsb
jg
bound
iret
test
clc
js
ljmp
loopne
sti
imul
xchg
mov
cmp
xor
or
sti
lods
inc
gs
xchg
dec
mov
fld
dec
push
lahf
data16
fists
inc
or
or
push
sbb
cmp
cmp
sub
and
pop
dec
insb
ss
and
mov
push
pop
pop
xchg
pusha
in
jle
mov
test
outsb
incl
pop
out
in
push
imul
ret
loopne
scas
into
les
lds
jle
sub
mov
add
ret
push
or
inc
add
adc
or
lock
insb
inc
push
fnstsw
pop
push
sbb
xchg
ss
mov
arpl
jns
mov
pop
mov
or
dec
mov
dec
es
mov
popf
cmp
add
mov
cmc
mov
push
inc
pop
cltd
pusha
ret
out
cld
jg
inc
out
pop
stc
push
jmp
inc
pop
lcall
fnstcw
pop
xor
adc
cmp
in
andl
js
into
aaa
inc
and
test
sbb
jb
jg
or
in
add
jae
xor
sahf
jb
pop
inc
sbb
lds
and
insb
cmp
push
shll
mov
mov
test
add
inc
sbb
and
pusha
xchg
cmpb
test
mov
fiaddl
lret
add
icebp
rclb
rclb
es
xchg
mov
inc
iret
inc
xor
sub
icebp
jnp
cmpl
testl
mov
pusha
lret
test
sub
out
imul
mov
cwtl
jbe
mov
aad
mov
cwtl
aam
jne
add
pop
jne
pop
inc
imul
jb
ret
jg
cs
mov
pop
std
cmpsb
add
pusha
lods
out
sub
imul
jmp
sahf
iret
out
in
xor
cli
in
xchg
push
sbb
test
jg
and
leave
mov
add
shlb
bound
lahf
aad
inc
sbb
mov
inc
icebp
out
or
dec
inc
jl
enter
aas
clc
loopne
sbb
jno
ljmp
pop
xor
jecxz
aam
ja
cmpsb
xor
ja
xchg
lcall
cmp
jle
cltd
xchg
mov
pusha
xor
push
mov
push
pop
in
scas
insl
mov
xchg
in
idivl
cmc
mov
mov
shrl
lods
insl
dec
xor
pop
stc
cmc
in
fistpll
fidivrl
rclb
dec
push
or
aas
test
orl
mov
mov
pop
push
cli
cli
dec
or
mov
fsubrl
js
repnz
dec
fcoml
dec
inc
bnd
lret
repz
lcall
bound
ds
out
lcall
mov
movq
jmp
add
fs
or
and
insl
aad
fidivrs
in
mov
fwait
cmp
and
sbb
xchg
cld
push
cli
test
pop
shl
fdivs
js
fdivrs
add
adc
sub
movsb
jmp
mov
inc
addr16
or
ljmp
imul
adc
xchg
or
inc
pop
mov
addr16
inc
fadd
int3
ret
cmpb
adc
jb
mov
push
shll
jge
pop
lahf
dec
es
sbb
jno
repnz
arpl
aam
dec
and
cmc
and
sbb
jae
or
ret
sub
cmp
loope
daa
adc
xchg
ffreep
sarl
dec
outsb
push
aaa
outsb
repz
and
test
fs
mov
ss
inc
cmpsl
std
loopne
sub
dec
or
imul
xchg
fsubrl
xchg
data16
lret
sub
jp
out
xlat
out
fwait
clc
mov
sbb
fldcw
mov
addl
add
mov
std
sbb
ficompl
gs
push
inc
xor
iret
xor
and
std
mull
shlb
ret
sti
push
sub
cmpb
or
xor
push
pop
mov
shrb
push
loop
mov
cwtl
push
push
insb
insl
shll
adc
mov
and
ss
sbb
push
inc
cld
andl
fnstenv
fildl
inc
adc
cltd
mov
roll
psllq
sub
popa
jnp
hlt
bound
and
lret
movb
outsl
cltd
jl
test
in
cmp
mov
xchg
mov
adc
pop
cmp
push
inc
xchg
push
jno
sbb
addr16
movsb
ja
cs
enter
jno
insb
insb
mov
hlt
adc
sub
cmpsb
add
std
repz
pop
insb
push
sub
lods
js
es
jmp
icebp
xor
push
call
aad
js
push
pushf
push
loopne
ja
adc
pop
dec
es
repnz
sub
hlt
jecxz
hlt
push
lods
adc
dec
outsb
push
fs
mov
add
dec
stos
push
fimull
cltd
or
jmp
andl
insl
std
mov
sbb
pop
fsubrl
fmul
mov
mov
push
cltd
ret
add
xchg
out
fwait
stos
shrl
xor
call
rclb
in
mov
or
mov
mov
mov
movsl
je
loop
push
push
cmp
add
pushl
idivb
aam
test
insb
shlb
xor
insl
inc
cmc
mov
aad
or
inc
jl
jo
pushf
push
loope
loop
push
lds
lea
or
mov
jno
mov
enter
xlat
and
xchg
fdivrl
xchg
test
les
lcall
in
or
lret
jp
mov
inc
sub
push
pop
out
test
sbb
push
pop
mov
popa
rclb
sbb
ss
pop
das
push
pop
xchg
cwtl
pop
xor
call
ret
inc
aad
outsl
pop
mov
aad
sub
inc
scas
fwait
mov
fstpl
scas
push
mov
jmp
sbb
pop
jge,pn
or
inc
push
jnp
mov
inc
sbb
ret
jns
jb
lahf
pop
mov
fidivl
lret
ret
xorb
mov
or
cmp
add
sub
fs
jp
sub
xorl
mov
mov
lock
inc
and
sbb
mov
mul
dec
aam
addr16
add
addr16
xor
div
in
mov
in
fstps
or
adc
ds
hlt
sar
out
divb
xor
call
jp
xchg
ljmp
sbb
pusha
sub
cmp
mov
sub
cld
stos
sbb
sbb
leave
pop
cmp
shr
lahf
stos
cmpsl
int3
fstpl
sub
mov
addr16
xor
mov
push
dec
cmp
cld
hlt
fisubrl
sbb
jns
popf
into
jb
sbb
jo
dec
pop
adc
mov
lahf
push
inc
in
add
adc
aas
scas
jl
jp
dec
arpl
pop
lds
inc
call
inc
jecxz
jne
mov
ss
cmpsb
xor
cmc
ret
insb
test
nop
cmp
cmc
adc
adc
or
mov
jl
lcall
and
andb
and
or
in
sbb
int
arpl
stc
mov
pop
rorb
cs
aam
outsb
dec
or
in
sub
dec
cmp
aaa
jb
inc
aad
enter
lods
jle
add
dec
andl
pop
sar
je
or
mov
sub
xchg
ja
push
push
cwtl
lods
and
clc
push
sub
stos
lea
loop
xchg
sbb
pop
sub
or
cmc
stos
mov
jnp
mov
stos
icebp
xchg
push
negl
not
sbb
push
scas
lock
push
mov
inc
inc
cmpsl
insb
and
mov
mov
outsb
cmpsl
inc
into
outsl
xor
jno
vpcmpeqb
fdivr
fnstcw
push
sub
test
aad
jbe
lods
or
add
dec
mov
adc
bound
sub
pop
inc
fcomps
push
aas
xchg
icebp
bound
aas
push
sti
movsb
dec
cltd
or
pop
arpl
fs
xor
out
mov
shl
out
add
dec
test
sub
fisttpll
das
jmp
pop
movsb
inc
xlat
jmp
in
arpl
xchg
cmp
int3
popf
or
sbb
filds
out
dec
lods
jmp
jl
mov
stc
ja
out
sub
xchg
je
test
mov
jecxz
cmpsl
cmpsb
std
push
into
push
mov
sbb
mov
sub
mov
inc
fscale
dec
jmp
cwtl
insl
jmp
adc
sbb
pop
push
insb
pop
mov
mov
ja
lock
adcb
dec
mov
jl
mov
pop
data16
aaa
fmulp
inc
jl
pop
cwtl
and
xlat
mov
adc
mov
add
xor
les
and
aam
shll
lods
in
lea
pushf
popa
dec
push
add
mov
cwtl
cld
fistpll
xchg
movsl
and
sub
mov
and
lcall
mov
jle
inc
mov
mov
addr16
sub
sub
push
mov
insb
cmp
add
mov
ret
and
call
xor
jge
icebp
in
sbb
xor
or
add
in
or
xlat
repnz
or
mov
rclb
arpl
jae
sub
ja
aad
es
adc
mov
mov
hlt
je
jge
mov
and
dec
sub
inc
addr16
loopne
ljmp
sarb
shll
lods
fisubs
push
in
dec
pop
add
decb
mov
psadbw
lds
pop
popa
gs
lods
cltd
cmp
mov
add
or
adcl
int3
cmpsl
jge
lods
gs
sahf
das
jb
ret
rcrb
stos
add
adc
add
scas
jecxz
sbb
push
inc
xor
loope
xor
mov
lock
inc
in
cli
adc
imul
add
xor
shlb
cld
add
adc
insl
les
xor
mov
adc
rcrb
inc
adc
repnz
or
cltd
subl
loope
icebp
inc
xchg
mull
in
and
mov
loopne
jno
dec
sti
mov
lret
adc
mov
jb
xchg
mov
test
lock
mov
push
loope
lea
ret
xlat
and
mov
pusha
or
or
mov
pop
es
pop
fadd
arpl
rcll
incb
mov
loopne
ljmp
dec
jle
fwait
cld
dec
push
sti
addr16
jecxz
out
inc
dec
dec
or
and
mov
mov
cltd
xor
sub
pop
jmp
xor
push
jecxz
and
push
adc
or
sub
inc
lods
and
mov
rolb
lcall
test
or
inc
data16
aad
inc
leave
fwait
mov
aam
cld
mov
xchg
scas
stc
jbe
lea
and
lcall
cmp
jnp
or
mov
fwait
push
mov
push
test
fwait
push
xorb
mov
jbe
xlat
cmp
loop
and
dec
mov
xor
xlat
adc
cmp
mov
fmull
bound
daa
mov
popa
sub
fsub
push
sub
inc
and
pop
in
ret
mov
test
cwtl
hlt
and
jecxz
lods
ja
dec
xor
add
out
or
add
aam
ja
and
adcb
lcall
lods
int3
negl
sbb
out
cltd
cmpsl
mov
ficomps
fcmovnb
mov
jge
ss
cmpsb
ljmp
fnstsw
daa
pop
ss
sbb
movsb
nop
dec
iret
pop
cli
dec
pop
addr16
inc
jg
es
lods
cld
out
fidivrl
sub
xor
cmpsl
in
rolb
push
sub
shrl
iret
cmp
mov
cs
int
xor
jl,pt
scas
xchg
out
aas
and
inc
mov
scas
mov
ret
insl
scas
outsl
lods
jge
movsb
call
xchg
inc
sbb
and
cs
push
jnp
sub
xchg
pop
shll
jl
loopne
push
mov
rcrl
push
and
sbb
addl
xor
push
bound
enter
dec
jmp
push
lea
or
xor
insl
jbe
out
pop
ret
rclb
cmp
in
out
cmp
fldenv
outsb
mov
xorl
pop
dec
aas
mov
clc
inc
push
push
sahf
fwait
pop
test
jmp
je
repz
sub
sti
cmpsl
pop
pop
sbb
mov
cmp
notl
rcpps
mov
mov
cmpsb
roll
add
push
mov
aas
js
or
pop
les
cs
mov
sbb
lock
mov
mov
jl
or
mov
dec
scas
not
mov
insl
scas
cli
icebp
xor
addr16
lcall
add
movsl
in
fisubrs
call
jle
movsl
cmp
mov
outsl
xor
dec
fwait
outsl
add
push
dec
ss
into
les
inc
pop
xor
imul
xchg
or
loop
push
aam
pinsrw
gs
fldcw
add
iret
test
inc
mov
xchg
mov
stos
fldl
adc
std
xchg
cmp
or
repnz
pop
dec
and
mov
pop
aas
aaa
and
aad
mov
add
popf
ja
pop
daa
out
and
add
in
mov
jge
sbb
repz
fsts
imul
mov
adc
test
popf
repz
test
cwtl
jne
cld
lret
jns
out
mov
fdivrl
pop
sbb
mov
or
cltd
mov
sti
out
popf
xor
jmp
call
xchg
add
pop
ror
jae
out
ja
pop
or
out
inc
add
adc
iret
in
mov
test
xchg
push
mov
dec
aaa
mov
inc
xchg
call
movsl
mov
pop
add
inc
xchg
lahf
cmp
idiv
pop
push
insb
int
or
cmp
pop
and
xor
or
iret
daa
adc
xchg
sbb
decb
enter
inc
adc
jp
fidivrs
cwtl
into
and
jbe
ret
sbb
lock
cltd
xchg
jne
cld
iret
xchg
dec
and
jle
test
cmp
mov
add
dec
paddusw
in
push
das
ja
lock
adc
mov
sbb
xor
sub
dec
cmpsb
mov
pmaxub
scas
mov
cld
insb
xchg
and
xchg
shr
sarb
and
shlb
jns
imul
xchg
push
insl
sub
xor
outsl
push
jne
mov
mov
mov
cmc
loop
popf
pcmpeqd
mov
aas
adc
jecxz
vpmacsww
test
pop
movsl
pop
push
mov
clc
inc
mov
repnz
mov
into
leave
sbb
subl
in
xchg
pop
adcl
and
aas
scas
lock
sarb
mov
in
lock
mov
sbb
ds
dec
out
adc
rcrl
jbe
ret
jae
jae
aad
idivb
pop
insl
sti
fldt
mov
movsl
inc
xor
jo
jg
mov
and
fnsave
sub
in
inc
mov
xchg
repnz
cmpsl
pushf
xor
xchg
pusha
inc
sbb
aaa
iret
ljmp
roll
movsl
stc
or
loope
mov
mov
push
icebp
push
pop
pushf
jg
ja
adc
add
ds
push
scas
addl
lret
cwtl
mov
sub
mov
push
jmp
xlat
int
arpl
mov
jo
enter
or
mov
aaa
nop
push
fsubrl
mov
stos
into
jp
jno
sub
mov
mov
subb
arpl
sub
pushf
test
sbb
ret
inc
jo
mov
loop
mov
iret
pop
in
lret
jb
adc
inc
or
pop
mov
fs
sub
iret
xor
mov
int
or
jnp
mov
mov
shll
loopne
push
lods
jecxz
dec
test
mov
lret
cli
sbb
loop
in
push
ret
inc
pop
mov
pop
pop
test
lods
xor
gs
aas
xchg
jp
out
or
stos
jl
nop
fwait
repz
shrl
lds
adc
sbb
call
pop
cmpsb
xchg
hlt
jnp
lds
add
sbb
xor
mov
xor
in
or
push
sbbb
push
push
cmp
xchg
popa
cmp
test
sarl
sarb
and
inc
cmpsb
sub
in
loopne
adc
inc
pop
dec
inc
xor
int3
nop
mov
and
shlb
pop
xchg
addl
fisttpll
into
test
sbb
xchg
arpl
dec
mov
sub
fbstp
repnz
adc
sbb
cwtl
cld
push
and
pop
das
push
les
sub
into
pop
mov
adc
mov
mov
jle
movsl
xchg
pop
xchg
int3
add
scas
fidivl
xchg
push
jecxz
or
fwait
jb
and
test
push
lds
cmpsl
popf
mov
repz
popa
mov
aas
stos
or
aaa
sbb
mov
mov
movsl
and
pop
hlt
inc
mov
hlt
dec
dec
scas
add
int3
mov
push
xlat
cmp
dec
icebp
xor
call
fnstcw
jg
dec
inc
mov
pop
scas
pop
cs
sbb
addr16
xchg
jecxz
push
divl
pusha
pusha
nop
and
outsb
lcall
or
inc
into
jle
ret
mov
notb
inc
sbb
sub
faddp
add
mov
mov
loopne
add
test
leave
pop
sbb
mov
xchg
push
adc
and
xor
mov
jge
addr16
sub
inc
mov
and
lahf
mov
mov
repnz
stos
pop
fwait
mov
cs
bound
mov
nop
cmp
mov
cmp
hlt
in
mov
jp
mov
dec
ss
enter
mov
frstor
gs
inc
fmull
adc
sbb
jno
push
mov
or
pushf
arpl
in
mov
in
add
imul
xchg
push
and
xor
loopne
mov
fcoml
rol
inc
sub
jmp
fs
xor
push
not
ds
push
lea
cwtl
imul
mov
idivb
xchg
fld
cmp
push
movsl
add
fwait
ret
mov
xor
sbb
icebp
fnstenv
adc
repz
lds
or
std
fnsave
push
adc
jns
hlt
imul
lods
imul
popa
pop
pop
add
adc
xchg
call
stc
into
scas
insl
xor
adc
fildll
in
jmp
lods
inc
cmp
stos
and
jns
roll
fwait
repz
aaa
xchg
hlt
pusha
xchg
scas
xor
lock
mov
decl
and
insb
gs
push
push
dec
mov
rclb
loopne
aad
sub
or
cmp
dec
sbb
sbbl
push
rcl
fldenv
add
fsubl
movsl
mov
push
test
cwtl
dec
inc
add
mov
fcomi
push
pop
jb
gs
push
sti
inc
pushf
iret
mov
popa
cmpsl
imul
mov
insl
inc
mov
fiadds
fidivrl
mov
push
fistps
mov
sbb
push
repnz
std
and
dec
cwtl
loop
dec
xchg
repnz
leave
mov
inc
imul
int3
test
jns
decb
mov
sub
mov
out
in
dec
xlat
lea
roll
add
outsb
or
fsubs
dec
les
xchg
jle
ss
cli
xor
notrack
hlt
or
cli
mov
in
rcrl
push
lret
push
je
cmp
stos
push
adc
adc
icebp
inc
flds
dec
jge
xorb
sub
loope
pop
dec
cmp
mov
pop
xor
mov
or
lahf
cmp
or
sbb
insl
pushfw
jns
jb
test
or
and
addr16
icebp
cmp
loop
outsl
xor
mov
aad
jp
test
out
addl
sbb
stos
in
jns
lea
fsubl
cmp
in
sbb
xorl
push
in
rclb
push
mov
mov
xlat
loopne
fisttpl
cmp
jno
scas
pop
stos
cmp
and
in
dec
adc
mov
ror
sub
insb
sub
dec
pop
xor
popl
xor
sbb
add
or
cmc
aas
mov
pop
std
mov
mov
pop
mov
data16
out
cwtl
jmp
es
cmp
scas
xor
rclb
test
sub
cld
push
or
hlt
ss
pop
xchg
pushf
cmp
add
lret
fsubl
push
mov
cmp
lock
xchg
call
mov
adc
stc
mov
imul
std
push
rorb
fisttpl
cmp
in
mov
dec
into
mov
pop
adcl
add
in
fistpll
xchg
stos
je
fstl
jecxz
pop
ja
lods
sbbl
mov
and
xlat
and
pushf
pop
jo
pop
mov
sahf
inc
insl
cwtl
pop
or
cltd
jb
xor
dec
int3
std
jecxz
cli
test
and
mov
jbe
jbe
shrl
inc
xchg
in
add
sbb
aad
out
aaa
inc
cmp
addr16
xchg
pop
cmp
xchg
xchg
daa
or
test
bound
adc
adc
ret
mov
adc
pusha
shll
sbbl
adc
cmp
es
aas
xor
add
call
pop
cmp
inc
pop
ss
mov
sbb
xor
mov
adc
arpl
addb
xor
cmp
xor
ds
stos
mov
repz
push
xor
lcall
sbb
ja
std
xchg
outsb
into
sti
jb
mov
ret
cmc
mov
in
insb
arpl
inc
in
adc
das
cli
insb
jg
loopne
sbb
ss
fildl
jmp
inc
mov
fmul
xchg
aam
vpsllq
sbb
pop
call
pop
jns
cmpsb
mov
je
adc
aad
inc
mov
out
call
es
push
cli
repnz
push
add
cltd
movl
cwtl
push
cmp
sbb
out
add
add
imulb
inc
emms
fisttpl
mov
adc
lods
mov
sahf
mov
dec
mov
add
mov
rcrb
cmp
stos
mov
mov
pop
fistpll
sbb
pushf
pop
mov
nop
pop
pop
outsb
movsl
cmp
jg
and
inc
adcb
xlat
jo
cltd
mov
test
and
les
out
push
leave
movsl
mov
jo
out
leave
mov
inc
fwait
loop
sbb
sbb
mov
jno
pop
mov
add
xchg
movd
aad
out
lret
or
int3
sub
cmpsl
cmp
leave
or
in
popa
lock
insl
cmp
ds
cmpsb
jae
cmp
fsub
leave
fimull
lds
mov
mov
outsl
push
test
popf
insl
lcall
inc
nop
xlat
mov
mov
add
sbb
out
mov
inc
jmp
push
inc
sub
push
cmovbe
jns
insb
cmp
ret
dec
lods
sbb
jo
out
stc
aaa
cld
mov
cmp
jl
test
jo
outsl
div
add
lret
and
mov
and
xlat
test
call
dec
jl
jecxz
and
sahf
and
call
pop
ret
mov
cmp
mov
pop
les
jmp
shll
mov
push
int3
mov
xchg
fwait
pop
cmp
jge
pop
cmpsl
adc
cmp
pop
mov
sbb
mov
adc
sbb
rcll
dec
xchg
lock
dec
lock
jnp
dec
int
std
adc
inc
sahf
add
xchg
dec
jecxz
sub
or
add
mov
sub
pop
dec
stos
pop
sbb
jns
xchg
roll
fldcw
rolb
js
inc
and
cltd
xlat
hlt
lret
xchg
test
out
cli
pop
mov
sub
mov
jle
pop
dec
mov
or
cli
jg
mov
rsqrtps
movsl
imull
adc
fnsave
push
dec
adc
ret
push
push
add
inc
mov
pop
stos
fs
jo
pop
fisubrs
jmp
mov
out
jg
iret
lahf
out
mov
mov
add
in
scas
faddl
ret
jmp
xor
add
xchg
mov
dec
mov
jae
xor
test
mov
pop
adc
iret
mov
dec
test
pop
dec
insb
sbbl
lea
sbb
cwtl
inc
in
and
push
xchg
pop
cmp
sub
insl
lock
sub
cmc
pop
sub
xlat
ret
es
data16
or
mov
or
iret
shll
out
orb
pop
ds
push
xor
loop
int
leave
and
lahf
andb
pop
ljmp
outsl
test
daa
divb
mov
lods
dec
outsl
movsl
dec
or
push
inc
and
movsl
push
mov
out
out
outsb
push
xorl
xchg
cwtl
mov
mov
mov
rclb
loop
or
lods
imul
lds
mov
js
repz
sbb
or
inc
aam
andl
rclb
jecxz
lds
subb
out
adc
rcll
aaa
add
movsl
sbb
cmpsb
adc
adcb
insb
push
and
xchg
sbb
imul
sub
dec
xchg
xchg
mov
cmp
sub
lea
inc
in
xor
stos
xor
mov
inc
lds
push
pushf
pop
jae
ds
xchg
push
cmp
mov
repz
call
insl
leave
adc
sahf
std
cmp
pop
icebp
cmp
jecxz
and
push
in
and
and
xlat
call
in
cmpsl
xchg
mov
std
and
xlat
mov
inc
out
dec
inc
hlt
and
outsl
jp
mov
insl
dec
cmp
gs
jecxz
scas
dec
or
ret
decb
jnp
jno
push
add
push
std
lock
xor
loopne
dec
cwtl
adc
mov
in
enter
cmp
lcall
mov
add
cmp
rcrb
pusha
mov
push
mov
cmc
inc
mov
xlat
scas
movsb
pop
dec
data16
es
push
mov
dec
sbb
fwait
ja
mov
stc
les
loopne
mov
mov
push
je
add
in
mov
sub
iret
loopne
mov
or
add
dec
or
sub
or
push
test
mov
addr16
mov
pop
imul
int3
test
jl
jae
xchg
xchg
frstor
push
out
inc
and
jns
jge
mov
push
dec
mov
shlb
jo
xchg
mov
xor
mov
pop
sub
leave
std
cs
aas
inc
cmp
aas
int
jl
inc
push
cmp
jne
jno
mov
add
cli
testb
push
jmp
daa
clc
mov
outsl
cli
fidivl
scas
push
jbe
or
push
and
push
in
xlat
daa
in
jb
sbb
push
pop
movsb
ja
adc
and
cmp
xchg
fstps
lock
inc
push
pushf
out
mov
mov
dec
in
xchg
mov
ja
mov
mov
or
stos
mov
pop
inc
pop
loopw
dec
push
cmc
in
fildll
mov
andb
xlat
mov
mov
dec
test
adc
push
add
movsb
xor
add
fldenv
jp
cwtl
jne
testl
sub
test
dec
sub
add
in
ret
into
es
cmc
dec
shrl
imul
sub
sarb
push
lock
shlb
cmpsl
jne
cmp
jg
inc
sub
ret
hlt
jp
xchg
enter
xchg
and
xchg
int3
or
rcll
sub
daa
ljmp
jmp
in
xchg
arpl
sub
xchg
cltd
xchg
adc
xlat
int
mov
or
ret
xchg
addr16
loopne
stos
adc
sbb
mov
scas
inc
repz
cmp
repz
lock
les
sbb
inc
lret
add
cli
sbb
les
std
xchg
arpl
inc
push
int
aam
pop
jle
cli
decl
push
sbbb
inc
xchg
inc
or
shl
lret
movsb
and
or
xchg
mov
cltd
push
scas
loopne
stos
rcl
dec
leave
adcb
or
mov
cmc
repz
add
jecxz
mov
xchg
ss
out
jbe
xlat
sbb
fs
pop
jae
inc
mov
cmp
cmp
out
pop
std
fidivl
scas
mov
and
or
lret
sbbb
mov
adc
mov
mov
xor
dec
lods
and
negl
sbb
push
xchg
cmp
and
es
lds
mov
loop
aam
xorl
test
jmp
fcoms
mov
inc
jle
out
enter
cmp
jg
lock
pop
int
pop
fidivl
or
mov
push
sbb
pop
les
std
cmpsb
outsl
xor
fwait
adcb
or
xchg
or
or
and
ljmp
xchg
rcrl
std
xchg
inc
notl
shll
sbb
ja
jns
mov
xor
sub
test
ret
lock
fstps
out
repz
cmp
xchg
pop
add
lahf
out
add
fisttpll
mov
popf
pop
adc
and
mov
out
xor
dec
xor
mov
js
rorl
pop
add
pop
push
pop
cmp
inc
inc
xchg
jns
lret
mov
dec
jp
mov
lret
xchg
mov
ljmp
insb
lea
fildl
mov
fcomps
in
outsb
mov
movsl
shll
inc
out
ss
xchg
fdivl
ljmp
sub
cwtl
adc
movsb
and
int3
push
bound
std
cmp
fs
scas
push
mov
inc
add
icebp
xor
inc
cwtl
cmc
fdivrl
adc
pushl
push
or
mov
sub
mov
sbb
mov
addr16
stos
fs
in
or
sti
xchg
fcomps
test
sbb
loopne
int
fldcw
and
imul
cmp
sbb
inc
sti
push
sub
sbb
cwtl
cmp
fisubrl
add
fstl
insb
or
scas
adcb
cmpsb
stos
xchg
lock
adc
xchg
sbb
shl
gs
xchg
jo
xchg
dec
leave
pop
sub
cwtl
js
push
icebp
inc
ss
sub
push
xchg
jo
lcall
adc
roll
mulb
push
xchg
test
scas
pop
adc
sbb
or
fs
xchg
insb
ds
out
xchg
jl
push
push
push
aad
pop
test
push
popf
in
xor
dec
xlat
push
test
into
push
adc
push
int
jle
pop
neg
movsl
push
call
loope
sbb
inc
sub
clc
push
lahf
jbe
dec
mov
mov
js
popa
inc
addr16
std
loop
push
sub
fcoms
bound
in
dec
xchg
jbe
mov
mov
cmp
add
fcmovb
lcall
das
repnz
mov
cli
lret
sbb
mov
jno
dec
mov
das
adc
mov
imul
test
xor
xchg
je
xor
or
pop
pop
nop
sbb
jne
xchg
xchg
divb
test
mov
add
mov
lods
fisubs
xchg
mov
rclb
fiadds
sbb
push
cmp
cmp
jne
adcb
frstor
ja
add
testb
dec
jnp
or
jmp
out
aam
pop
dec
push
call
mov
lds
lods
xor
xchg
mov
push
daa
fwait
inc
mov
sub
mov
loopne
push
jecxz
ret
xor
js
or
imul
insb
sbb
dec
dec
jl
mov
scas
in
mov
adc
lret
dec
cmp
jne
test
mov
dec
pop
imul
mov
push
out
mov
icebp
outsl
mov
movsb
in
mov
add
adc
mov
mov
in
je
xor
adc
movsb
mov
push
xchg
orl
rclb
nop
js
xor
jbe
pusha
data16
pusha
cmc
inc
movsl
insb
pop
fs
push
lret
xchg
sbb
cs
int
cmp
mov
sub
pop
cmp
loopne
aaa
mov
mov
cmc
mov
push
dec
pop
std
mov
push
scas
aam
jle
mov
loope
mov
mov
outsl
cltd
cmc
stc
mov
popa
shlb
add
sub
mov
fldl
jne
xor
xchg
inc
nop
pushf
inc
or
scas
rorb
pop
cli
in
cmpsl
js
sub
and
into
lahf
sbb
and
inc
mov
rol
fsubrs
or
sub
jae
mov
inc
mov
call
mov
adc
jo
inc
shrb
out
cmp
aas
cltd
repnz
into
or
insl
mov
ss
in
inc
pop
and
pop
add
movsb
les
mov
ret
add
adc
xor
or
bound
fidivl
dec
jno
jle
mul
iret
or
jle
jnp
mov
test
les
inc
jb
scas
inc
xorb
pop
xchg
scas
adc
add
arpl
mov
sbb
or
sbb
out
xchg
fs
xor
mov
dec
or
jmp
xchg
jle
nop
lahf
dec
xchg
pop
sbb
sub
fstpl
into
sub
inc
scas
sbb
or
adc
rorl
push
rcl
shrb
stos
std
push
cmc
and
pop
test
push
xchg
jns
call
scas
js
test
add
clc
repz
out
into
sbb
dec
imull
pmaxub
fldt
or
push
pop
push
xchg
icebp
jne
frstor
fs
mov
mov
push
push
fwait
push
lds
bound
push
adc
jg
hlt
sbb
out
mov
xchg
in
inc
mov
dec
sahf
pop
test
ja
or
jg
dec
inc
lahf
out
xchg
fcompl
scas
xchg
outsl
mov
stc
cli
cmp
divb
or
and
pushf
addr16
sub
cltd
cmp
cmp
lret
sarl
loop
lock
pop
cmc
pop
pop
mov
fwait
test
xor
in
aaa
lahf
fldcw
out
push
or
cmp
inc
inc
sbb
xor
sbbl
faddp
stos
mov
cmp
pop
inc
lretw
sub
aaa
add
int
mov
hlt
fistpll
mov
es
sbbb
sbb
jo
mov
jnp
add
xchg
aas
jmp
into
imul
mov
xor
out
lods
lcall
addr16
and
or
arpl
xchg
add
arpl
into
mov
mov
int
cs
loope
out
sbb
pop
loopne
test
repnz
jns
push
stos
pop
push
call
rorb
roll
outsb
loop
jne
jl
adc
sbb
mov
mov
sub
inc
loopne
mov
or
inc
and
mov
sbb
jmp
push
xchg
cmpl
add
stos
data16
mov
mov
ret
mov
popa
mov
cmpsl
iret
xorl
test
xor
outsb
inc
sbb
rclb
cmpsl
insb
fcompl
mov
repnz
aas
cmp
adc
xchg
jl
mov
rcl
mov
cmp
xchg
pop
test
into
sahf
pop
mov
or
cwtl
mov
fldenv
xor
jno
fsubrs
aas
cmp
mov
out
ja
fldl
cmp
fwait
nop
pusha
sbb
and
int
test
mov
inc
pop
sub
cli
les
in
jae
jae
popf
mov
jb
outsb
mov
dec
jge
xor
pop
sbb
jns
jp
mov
stos
imul
mov
inc
push
push
nop
insl
lea
into
dec
cmp
xchg
jmp
xchg
out
mov
fwait
insl
push
cmp
loop
add
and
movsl
push
push
lods
hlt
repnz
pop
cmpsb
and
ljmp
jno
icebp
pop
orb
loop
aaa
mov
das
mov
in
cmpb
stos
or
sbb
mov
les
push
pushf
sbb
cs
jge
addb
test
cld
sub
lret
es
adcl
cmpsb
xchg
imulb
inc
test
fcomip
jge
sbb
mov
insb
pusha
push
sub
aam
ret
jb
xchg
mov
out
ljmp
jecxz
sbb
lahf
bnd
nop
xor
out
iret
jg
jnp
stc
push
mov
and
hlt
lds
ss
test
repnz
mov
sbb
fdivr
fcomps
cmpsb
insl
mov
adc
clc
bound
sbb
xor
dec
jae
sbb
clc
iret
cmpsl
loopne
adcl
and
dec
xorl
adc
jg
sub
mov
dec
push
icebp
pop
jp
call
push
dec
mov
pop
stos
jge
jp
push
arpl
cmp
shll
out
xor
loopne
sub
sbbb
rolb
adc
cmp
jge
aam
jns
mov
dec
xchg
imul
add
in
ds
jo
sbb
xchg
stc
pusha
dec
jb
jb
enter
dec
cmpsb
and
sub
cmpb
clc
rcrb
cld
lods
and
push
sub
ja
lods
add
or
fistpl
fnstsw
int
jecxz
testl
dec
mov
daa
inc
ds
sub
sbb
call
fildll
or
loope
shll
es
cmp
jmp
and
shlb
xchg
ret
pop
or
push
lods
inc
jle
insb
enter
clc
push
mov
push
adc
mov
bound
es
push
mov
mov
pop
std
mov
mov
jp
jge
sbb
jbe
mov
xchg
in
stos
pop
add
rorl
adc
sub
pop
scas
or
push
mov
decb
cmpl
mov
push
daa
js
mov
mov
clc
int
test
nop
push
xchg
insb
push
ds
sbb
fwait
ja
cmp
pop
jae
stos
cmp
mov
jg
xchg
sub
jae
and
jecxz
insl
xchg
push
insl
and
adcb
movsb
popa
jle
aaa
imul
enter
fldt
lahf
jnp
xchg
fwait
lret
cs
push
cmpl
jle
test
mov
clc
pop
aaa
cmc
hlt
out
xchg
into
add
jne
xor
je
push
out
cltd
fbld
or
jle
lret
js
xor
mov
push
clc
push
scas
push
push
nop
dec
movsb
ds
add
test
ljmp
adc
in
jo
jl
or
xchg
movsb
mov
inc
fnstenv
and
push
sbb
inc
jo
add
inc
stos
sub
lods
subb
test
mov
sub
push
or
neg
imul
out
gs
add
mov
xchg
insl
mov
pop
pop
pop
pop
lock
mov
or
add
xchg
mov
cltd
xchg
xchg
adc
or
fwait
jmp
add
sahf
xor
sub
push
mov
stos
jo
outsl
lods
ficomps
paddd
xchg
mov
xchg
outsl
lahf
repz
cmpb
xchg
sti
push
psllq
lds
imul
pop
mov
xchg
mov
lea
sbb
mull
ficoms
jl
mov
jne
or
inc
cmp
adc
rcrl
jo
sub
rolb
xchg
xchg
insb
and
and
pop
xor
pop
pop
xor
jns
ss
scas
cvtdq2ps
pop
push
inc
or
scas
pop
outsb
mov
push
outsb
ffreep
sbb
mov
cli
inc
cli
in
jns
push
pop
inc
mov
test
arpl
es
in
ficoml
decb
in
lds
mov
inc
cmpsl
fsubrs
inc
nop
loope
fisttpl
popl
roll
cmpsb
dec
lods
inc
in
clc
ds
dec
rclb
xchg
popa
jmp
xlat
cli
jb
fstl
push
movl
stc
push
xchg
loopne
cwtl
jbe
jmp
push
out
jns
and
mov
inc
mov
iret
mov
lret
decb
pop
decl
popl
mov
jbe
dec
es
sub
mov
pushf
and
negl
leave
cltd
loop
and
or
push
sbb
in
push
pop
xchg
lods
push
in
inc
and
adcl
mov
dec
xchg
pop
imul
jno
mov
pop
iret
sub
mov
mov
enter
fs
fstpl
popa
scas
icebp
cmpsl
push
jnp
xor
pusha
lcall
dec
xchg
cmc
arpl
iret
pop
out
cmp
es
add
sub
aam
mov
hlt
and
add
jb
data16
or
addr16
jno
add
notb
insb
push
lods
pop
sbb
dec
jne
push
dec
das
xchg
xchg
xor
add
frstor
add
movsb
push
jnp
adc
add
sbb
data16
sub
mov
sub
popa
into
adc
cs
jns
mov
xchg
add
out
and
bound
out
sbb
int3
pushf
jae
jl
or
add
sub
repnz
xor
or
mov
sti
fcomps
pop
mov
or
lods
push
pop
shrl
ss
dec
xchg
je
fdivrl
dec
sbb
iret
ret
shrl
add
mov
xchg
pop
inc
in
xor
and
add
imulb
aad
pop
fistpll
rorb
scas
dec
test
loope
pop
jno
and
xor
xor
lret
or
lods
les
sbb
xor
ret
fdivl
into
pop
insl
jae
push
push
jle
mov
mov
and
mov
pop
test
lods
rorl
subb
int3
mov
cwtl
call
inc
loope
roll
xchg
fwait
inc
pop
outsl
or
xor
fisubl
pop
fst
mov
adc
mov
and
filds
mov
mov
out
adc
mov
sbbl
cld
imulb
or
mov
adc
aaa
jae
add
or
xchg
cmp
sysret
pop
fcomps
loope
ret
mov
jg
sarl
sarb
shlb
and
pusha
or
scas
out
hlt
arpl
fcompl
rcl
leave
add
jno
aam
xchg
push
pop
outsl
fcomps
sahf
push
repnz
fdivrs
or
cmp
xchg
or
out
adc
inc
lahf
std
dec
jo
xchg
xor
xor
stos
mov
fs
add
imul
sbb
sbb
shlb
xor
pop
and
xor
bound
in
es
and
push
test
in
das
in
inc
fldcw
cmc
or
int3
add
sub
sahf
cmp
lret
pop
jne
and
out
adc
mov
xchg
push
andb
sbb
ficompl
and
std
int3
cmpsb
popa
push
out
je
lods
pop
dec
ret
cmp
fnstenv
repz
push
mov
xor
xchg
or
mov
rol
adc
in
aam
mov
adc
loope
test
pop
push
dec
push
fsubrl
sub
ficoml
and
sub
outsb
imul
pop
jbe
incb
or
pop
mov
or
loop
insb
inc
add
cmpsl
jbe
jl
iret
sbb
loopne
cmp
mov
ret
and
or
mov
sahf
cmpsl
cmpsl
xor
dec
mov
dec
sub
and
insl
pop
mov
xchg
hlt
fsubrs
clc
pop
mov
adcl
lret
sbb
testb
loop
cld
inc
in
ljmp
shlb
ljmp
cmp
mov
pop
lods
or
adc
jg
ja
mov
mov
xor
dec
popa
push
cli
jmp
subb
out
scas
adc
pop
outsb
enter
push
and
das
jno
sti
ljmp
mov
and
xor
ficompl
jp
jmp
imul
sbb
test
mov
cmpsb
inc
mov
push
cmc
mov
ret
dec
mov
lahf
idivb
popa
xchg
pop
mov
aam
sbb
xor
cmc
out
inc
adc
dec
int
jp
daa
out
mov
jae
jae
scas
dec
js
xor
xchg
movsl
into
out
or
inc
rolb
xor
lahf
fidivrl
mov
inc
cmp
out
int3
add
inc
and
lahf
adc
enter
cmp
fildll
cmp
dec
jl
js
fmul
mov
out
pop
add
or
sub
push
sti
inc
popa
pop
popf
push
xor
mov
ret
shlb
fwait
std
loope
sub
in
sbb
cmp
mov
clc
xor
aad
cmp
les
dec
xchg
rcrl
std
ljmp
stos
xchg
sub
inc
add
jnp
cmp
call
pop
xchg
les
sbb
repnz
xchg
fsubrs
aam
cli
lods
add
inc
push
bound
cmp
addr16
push
in
add
xor
push
pop
aaa
xor
jae
adc
out
cmpsb
nop
outsb
inc
and
add
lret
into
enter
dec
and
mov
jle
test
sti
and
inc
pop
ja
jg
in
push
xor
rcll
xor
rorb
mov
inc
jnp
dec
jmp
mov
push
and
fsubrl
icebp
rol
stos
hlt
ja
cmp
sbb
xchg
lret
mov
inc
stos
and
jnp
shll
fsubs
ret
mov
push
mov
or
or
sahf
or
pop
xor
jge
repnz
lcall
loopne
sub
ljmp
xor
outsb
cmpsl
xchg
jmp
cmp
flds
int3
cmp
adc
mov
mov
pop
jae
mov
or
dec
cwtl
jnp
mov
jno
orl
in
ret
adc
je
jae
dec
xor
lret
inc
and
xchg
bound
sbb
or
dec
inc
adc
adc
cltd
add
adc
iret
sub
mov
cwtl
outsb
fdivl
cmp
pop
into
dec
cmp
ja
jecxz
push
push
stc
aas
pop
pusha
cmp
repnz
sahf
sub
out
outsl
sub
xlat
fwait
orb
adc
mov
popa
stos
and
fisubs
mov
sub
jnp
mov
push
jp
sbb
pop
xor
push
mov
sbbl
cltd
and
inc
bound
jnp
int
pop
in
xor
testl
in
mov
pushf
push
loopne
mov
movsl
push
or
jle
aad
mov
and
xchg
mov
pushf
leavew
xchg
and
test
xor
insl
push
mov
addb
push
xor
out
push
lea
cld
int3
rolb
les
sbb
xchg
push
jnp
mov
sbb
and
imul
popf
inc
les
aad
cmp
and
int3
lods
jb
and
bound
in
cmp
ljmp
cmp
mov
and
cmp
rorl
inc
sbb
or
int3
pusha
lret
xorl
mov
mov
int3
pop
orb
neg
les
xchg
fldenv
rcll
push
outsl
lret
das
jno
icebp
sub
out
mov
sbb
mov
or
push
add
dec
or
dec
inc
jns
xor
fstps
and
lret
xchg
xchg
fcmovnbe
mov
aas
mov
push
out
jbe
imul
pop
jle
das
jle
bound
js
xchg
stos
cmc
pop
cmp
xor
fidivrl
fldt
push
pop
mov
dec
je
sbb
loope
out
dec
mov
cmp
inc
xchg
hlt
rcll
fmull
sub
rorl
cmc
js
xchg
cld
sub
enter
lret
into
mov
dec
shlb
sar
add
pop
shrd
nop
jns
and
rolb
mov
rclb
cltd
mov
insl
lods
nop
frstor
xchg
lods
outsl
rcll
xor
pop
and
pushf
addb
sub
les
stos
pop
fs
movsb
add
adc
lock
push
or
or
cmpsl
push
push
pop
outsl
lods
or
xor
test
in
inc
hlt
js
test
add
dec
inc
gs
pop
scas
mov
xchg
jnp
sub
mov
push
popa
stos
mov
and
sub
xor
js
stos
and
sub
jmp
dec
aas
sub
fwait
push
loope
mov
stc
xlat
cmpsl
xchg
jecxz
sub
xchg
mov
hlt
inc
shlb
pop
aad
xchg
into
ljmp
and
and
mov
cmpsl
into
sub
test
fwait
pop
int3
loopne
lahf
fs
sub
sbb
fadds
mov
fisubs
push
push
sbb
adc
popa
cmpsl
sbb
pop
mov
xchg
push
aas
dec
mov
psubusw
mov
mov
rorb
adc
outsb
mov
jae
aaa
call
push
cmp
pop
rorl
stc
mov
sub
jle
lahf
mov
es
push
pop
xchg
sti
das
cs
mov
mov
rcrl
sub
rclb
enter
roll
push
mov
pop
lcall
gs
or
lods
es
dec
out
adc
xor
shrb
int3
addb
lock
xchg
push
in
and
ret
pusha
lock
or
dec
in
pop
pop
jne
pop
xchg
pop
nop
jne
subl
fs
mov
jno
sub
mov
aad
push
cli
ret
jl
xchg
lahf
xchg
adc
in
dec
and
ds
jno
add
jmp
int3
push
dec
xchg
aam
fsubl
mov
lods
movsl
dec
inc
aas
mov
insl
in
inc
jle
or
mov
push
lds
dec
sub
sbb
mov
std
scas
pop
mov
mov
cmp
mov
xor
mov
push
and
fsubrs
ret
shl
sub
sub
rcrb
divb
add
mov
inc
fisttps
xchg
in
mov
sahf
js
fwait
adc
mov
cmpl
inc
and
jecxz
pop
loop
insl
gs
mov
cmpsl
jb
jbe
push
jb
jae
jle
push
lods
jae
or
lcall
repz
xor
cmpsl
sbb
lea
mov
add
in
inc
gs
into
mov
dec
xchg
add
add
fdivrs
pop
test
sub
adcl
xor
mov
pop
cli
movsb
or
xor
data16
dec
pop
imul
jo
movsl
sub
mov
xor
jecxz
fildl
xlat
outsl
fcoms
cs
dec
pop
lea
or
mov
test
insl
ds
mov
push
stos
imul
jge
cs
add
mov
and
mov
jb
add
lcall
and
mov
adc
outsb
mov
xchg
out
cmpsl
ljmp
sub
and
push
push
pop
les
cli
xlat
pop
stc
push
mov
test
pusha
shlb
mov
jl
and
cmp
sub
pop
stos
dec
lret
loop
je
push
xor
ret
mov
je
fwait
lcall
xchg
repnz
fisttps
je
add
xor
cmp
out
das
movsb
and
or
push
inc
sub
add
dec
je
sbb
or
pop
push
int
lret
hlt
in
cmpsl
xlat
xchg
stos
fists
mov
push
mov
dec
pop
aas
cwtl
inc
xchg
mov
jp
std
repnz
bound
ret
jo
add
jp
popa
and
loopne
fwait
xchg
xchg
aam
lret
dec
xchg
mov
cmpsl
dec
out
sti
jle
cmpsl
lds
mov
mov
dec
mov
cltd
pop
mov
and
mov
cld
lcall
mov
out
mov
insb
dec
sub
ret
jmp
fwait
insb
dec
jns
xchg
loop
sub
es
cli
int
leave
lods
add
inc
lahf
dec
ret
sub
mul
lds
out
shll
dec
xor
sbb
fadd
mov
insl
rcll
je
jp,pn
jo
adcl
cmpb
and
jge
int
arpl
push
xchg
rcrl
xor
inc
dec
in
cltd
push
mov
rclb
pop
iret
fcmove
sar
aam
popa
inc
fldcw
mov
loope
adc
hlt
inc
shrl
pop
mov
cld
ja
dec
repnz
jg
xchg
dec
out
adcl
dec
insl
inc
sbb
pop
imul
jmp
cli
mov
popf
jbe
cmp
xor
js
xor
sub
jmp
inc
test
in
imul
sbb
sbb
frstor
lret
and
push
out
jb
dec
jmp
dec
dec
stos
iret
adc
jge
pusha
or
xchg
mov
leave
xchg
addl
or
mov
and
and
mov
dec
xchg
iret
push
dec
push
rcrl
fisubrl
ds
mov
ret
ret
ror
xor
iret
nop
mov
mov
jle
lret
inc
lret
mov
pushf
cmp
stos
dec
pop
jg
inc
jb
je
mov
pop
add
push
leave
lods
aam
push
jae
test
xor
hlt
jns
jno
xchg
push
pop
jge
shr
cli
std
or
ss
mov
sub
mov
arpl
loopne
xlat
adc
int
imul
shl
out
mov
jmp
dec
fs
mov
jbe
out
add
jl
jns
pop
repz
and
pop
mov
dec
cmp
xor
adc
xchg
addl
sbb
xchg
outsb
fisttpl
inc
push
mov
dec
or
push
lret
nop
sahf
xchg
jnp
push
pop
inc
mov
daa
loope
out
gs
mov
jl
ja
mov
inc
ret
jbe
cs
adc
cld
int
fidivrl
popf
mov
xchg
sbb
mov
pop
jnp
add
mov
and
lea
mov
cmc
dec
icebp
sub
push
jmp
and
and
lea
repnz
ljmp
pop
loopne
and
xchg
sarb
mov
jbe
test
scas
cmp
jmp
xor
add
cld
stc
out
and
jg
test
iret
sub
xlat
addb
movb
xchg
dec
pusha
dec
scas
adc
fisttps
cmpsl
ljmp
mov
bound
cmpsl
mov
jmp
sbb
mov
or
les
repz
jp
xchg
lds
leave
ja
sbb
test
sbb
adc
sub
shll
lods
adc
and
lahf
cltd
dec
loope
or
mov
cmp
stc
jle
and
pop
jecxz
jb
jno
sbb
cmp
stc
test
xchg
push
xchg
les
shl
mov
fwait
aas
mov
pop
rol
xor
xor
add
dec
push
pop
outsl
jmp
add
jmp
stos
in
push
cld
lea
dec
xchg
push
daa
sbb
add
cs
push
adc
or
dec
and
mov
rol
cwtl
imul
aas
cmp
mov
push
movsb
bound
add
pop
and
mov
mov
aaa
pop
mov
scas
xchg
ja
cmc
cmp
sbb
push
mov
or
push
pop
ret
dec
divb
sub
xchg
cmp
cli
jo
lahf
js
fstpl
aas
mov
dec
fcomps
mov
xor
stc
enter
and
out
enter
pop
mov
mov
outsb
mov
push
adc
sahf
add
dec
cmovo
cmp
movsl
cli
in
jmp
aad
in
jne
jmp
pop
cmp
dec
rcrb
or
int
lea
ds
inc
xor
aam
andb
jmp
jge
mov
roll
mov
xlat
jecxz
hlt
sub
out
mov
adc
cmpsb
mov
lret
out
das
xchg
mov
add
lods
pop
divb
xorb
lahf
rorl
arpl
rcrl
push
jb
jl
scas
icebp
in
push
jnp
mov
pop
cs
lcall
inc
and
jle
jne
pop
cltd
mov
xlat
bound
cwtl
jns
aaa
testl
add
mov
xor
dec
or
push
and
mov
cs
aas
cld
lret
push
fcmovne
jns
pop
lahf
or
pop
adc
and
loop
mov
data16
std
sub
push
xlat
loope
pop
cmp
cmp
arpl
or
int3
mov
add
leave
push
jb
repnz
fmull
psrlw
cmpb
push
mov
insb
push
lret
xchg
popa
cs
inc
xchg
add
iret
inc
xor
shlb
rclb
sub
cmp
mov
mov
xchg
stos
sub
xor
lret
sti
insb
and
sub
in
cmp
sub
pop
push
pop
shl
mov
inc
mov
repz
or
scas
mov
scas
lea
test
stos
inc
test
sub
fwait
in
notl
mov
xchg
jnp
jmp
sbb
orl
dec
pminsw
add
test
push
fs
aaa
push
out
sbb
stos
movsb
stc
dec
movsl
out
insb
lock
xbegin
jbe
mov
mov
stc
sbb
movsb
sbb
loop
adc
xchg
jp
add
adc
add
bnd
nop
fcomps
push
jno
out
ja
add
xlat
ret
and
mov
mov
mov
or
jnp
cwtl
jl
movsb
lock
mov
subb
jp
sub
mov
lcall
jnp
mov
les
scas
test
cmp
insb
cmp
lret
dec
mov
pop
mov
lds
repnz
sub
cmp
repnz
incb
test
dec
sub
rcrl
imul
mov
inc
adc
or
lods
lret
jne
test
sbb
fstps
movsl
inc
push
pushf
stc
icebp
push
cmpl
xor
into
xor
xchg
and
dec
or
cld
sub
insl
or
loop
in
cs
popf
dec
test
or
fstpt
insl
jl
dec
xchg
sbb
dec
popf
pushf
pop
or
xchg
jecxz
movsb
cmpsl
out
dec
mov
cmc
push
pop
push
dec
sub
pop
inc
or
incl
fwait
hlt
out
sbb
or
xor
jmp
push
movsl
jp,pt
sub
push
loope
repz
cmpb
movsl
call
jmp
cmp
cmp
pop
in
mov
repz
cmc
adc
jmp
test
int
call
add
and
imul
add
sbb
ss
jmp
dec
fcoml
sub
add
std
cmpsl
std
inc
mov
sub
jmp
push
jmp
outsb
test
popl
jmp
scas
gs
jmp
adc
loope
nop
push
jmp
lret
lahf
mov
fcomps
cmpsl
std
jmp
clc
test
lcall
incl
sub
push
jmp
mov
mov
cmpsl
std
ljmp
inc
add
js
std
push
push
jmp
push
sub
push
jmp
lea
push
jmp
xlat
push
jmp
test
push
jmp
cmc
bound
out
lahf
mov
cmpsl
std
pushl
inc
add
sbb
imul
inc
add
std
call
cltd
inc
jge
mov
inc
add
add
fistps
inc
add
repnz
std
push
dec
pop
push
jmp
and
aad
inc
add
xlat
cmpsb
std
pushl
xchg
mov
inc
add
enter
insb
and
push
jmp
mov
pop
loope
add
lods
cmpsb
std
dec
mov
inc
add
lahf
cmpsb
std
inc
push
jmp
lcall
add
xchg
adc
in
inc
add
jp
std
inc
xlat
push
jmp
subl
arpl
inc
sbb
stc
inc
add
push
cmpsb
std
incl
std
inc
add
inc
cmpsb
std
std
icebp
mov
pop
push
jmp
rclb
mov
inc
add
sub
orb
push
pop
inc
add
sbb
sub
push
jmp
insl
mov
push
inc
add
add
lcall
jmp
ljmp
jmp
rol
je
inc
push
jmp
inc
call
sub
inc
add
movsl
std
incl
dec
push
jmp
push
cmp
inc
add
lods
movsl
std
decl
push
jmp
adc
ss
jmp
jp
sub
cs
add
test
adc
push
jmp
mov
add
push
std
decl
popa
cmp
jmp
ret
pusha
push
jmp
js
cmp
nop
inc
inc
add
movsl
std
decl
mov
ds
inc
add
xor
push
push
jmp
mov
inc
push
jmp
jbe
mov
push
jmp
jecxz
adc
add
jmp
fsubrs
pop
inc
add
icebp
movsb
std
decl
cmc
mov
push
jmp
mov
add
fsubs
bound
jmp
lret
push
mov
mov
inc
add
mov
push
jmp
pushw
inc
add
test
std
pushl
mov
popf
movsb
std
call
dec
jb
add
xchg
movsb
std
lcall
push
jmp
aaa
outsl
xlat
xchg
jg
fdivrs
add
jae
std
ljmp
push
jmp
les
jl
add
pop
movsb
std
cld
jo
push
jmp
jno
stc
pusha
push
jmp
addl
xor
xchg
xchg
jmp
cld
sbb
mov
jmp
pop
leave
push
jmp
sub
add
add
std
call
push
push
jmp
addr16
push
jmp
sbb
inc
popf
inc
add
frstor
sahf
mov
push
jmp
adc
movsl
inc
add
shll
enter
jmp
ja
icebp
lods
inc
add
stos
mov
shlb
mov
lahf
inc
add
xchg
mov
cmp
jp
inc
add
test
outsl
push
jmp
inc
mov
add
imul
ret
jmp
cld
les
movb
push
mov
push
jmp
lds
lret
inc
add
cmp
push
jmp
ss
push
jmp
mov
push
jmp
mov
push
jmp
es
hlt
sbb
push
jmp
fs
jmp
lds
xor
inc
push
jmp
sub
mov
in
add
iret
mov
or
push
jmp
jno
push
jmp
adc
push
jmp
rorb
inc
icebp
inc
add
popf
mov
sub
fsubrs
cmc
inc
add
mov
push
jmp
stos
jg
mov
push
jmp
imul
jae
inc
add
addr16
jmp
in
mov
inc
add
pop
mov
push
jmp
pop
int
and
inc
add
aas
mov
push
jmp
add
adc
sub
pop
in
mov
add
sbb
dec
push
jmp
lea
push
jmp
cmpb
test
and
lock
push
jmp
inc
imul
fsubs
push
jmp
inc
lcall
inc
add
mov
movsb
fisubrl
ss
add
mov
std
jmp
insb
add
adc
inc
add
mov
pop
stos
push
pop
push
jmp
and
fldcw
aas
inc
add
xchg
les
inc
inc
add
jp
std
ljmp
jmp
mov
push
jmp
lock
push
jmp
dec
lea
push
inc
add
dec
mov
shrl
inc
add
cmp
std
decl
push
pop
inc
add
mov
lret
add
and
push
jmp
push
jge
nop
push
jmp
je
push
jmp
adc
sub
xor
lea
neg
rol
ror
inc
inc
xor
neg
inc
xor
bswap
bswap
not
neg
rol
lea
bswap
xorl
rol
rol
neg
bswap
inc
inc
inc
rol
not
inc
xor
neg
popf
ret
movsl
test
inc
push
jmp
test
enter
jmp
loopne
cli
rol
xor
dec
lea
bswap
rol
neg
lea
ror
add
inc
bswap
bswap
xor
rol
rol
inc
ror
not
not
add
dec
not
bswap
rol
xorl
neg
inc
bswap
dec
add
bswap
add
rol
xor
not
bswap
add
bswap
dec
ror
inc
not
add
bswap
inc
popf
ret
aam
mov
addl
jmp
subl
push
xor
lea
add
xorl
xor
inc
bswap
xor
bswap
rol
dec
bswap
add
not
neg
neg
not
neg
lea
rol
rol
rol
neg
not
inc
neg
xor
rol
add
dec
xor
popf
ret
rorl
pop
jmp
sub
mov
xorl
dec
xor
ror
lea
xor
dec
dec
neg
not
not
not
rol
not
xor
lea
bswap
inc
inc
bswap
ror
xor
add
inc
xor
rol
not
neg
dec
ror
sub
rol
xor
popf
ret
xor
jp
push
jmp
push
rcrb
adc
enter
fsubrs
neg
bswap
not
lea
ror
rol
inc
xor
xorl
dec
bswap
inc
bswap
xor
lea
bswap
neg
dec
xor
dec
add
rol
bswap
lea
ror
neg
sub
rol
neg
xor
lea
rol
popf
ret
jno
xchg
push
jmp
and
cmp
mov
add
repnz
bswap
xor
rol
not
xor
sub
bswap
dec
bswap
dec
ror
neg
bswap
not
sub
dec
rol
lea
xor
dec
xor
rol
ror
inc
xorl
add
ror
neg
not
not
inc
bswap
rol
inc
ror
add
neg
xor
bswap
ror
add
inc
sub
xor
bswap
dec
rol
popf
ret
pop
fstl
push
jmp
movsl
ds
mov
fistpl
dec
rol
ror
bswap
xor
not
ror
neg
not
not
add
neg
lea
bswap
bswap
add
inc
neg
neg
inc
not
bswap
not
not
dec
ror
lea
ror
inc
not
rol
inc
xorl
dec
ror
lea
rol
popf
ret
push
stc
jnp
dec
push
jmp
rep
out
adc
neg
rol
ror
lea
bswap
xorl
not
xor
bswap
add
lea
inc
not
dec
rol
lea
not
xor
bswap
rol
rol
bswap
rol
add
lea
neg
neg
rol
bswap
xor
add
xor
rol
lea
rol
popf
ret
or
pushf
push
jmp
adc
into
ficomps
fmull
ss
mov
lea
inc
not
rol
add
not
lea
inc
rol
xor
inc
not
inc
add
neg
dec
bswap
ror
sub
neg
xor
rol
xor
xorl
ror
rol
neg
dec
lea
popf
ret
cltd
mov
mov
hlt
jmp
add
pushf
xor
bswap
xor
ror
rol
dec
bswap
ror
xorl
dec
sub
rol
rol
xor
bswap
lea
rol
ror
not
add
add
not
dec
ror
not
rol
sub
ror
sub
sub
neg
lea
neg
ror
lea
popf
ret
xor
push
jmp
in
pushf
inc
bswap
ror
dec
bswap
inc
xor
bswap
ror
xor
sub
rol
lea
bswap
sub
bswap
lea
not
dec
not
not
not
neg
inc
bswap
rol
ror
ror
ror
xorl
inc
xor
bswap
dec
inc
popf
ret
lods
xor
lahf
inc
push
jmp
push
leave
inc
inc
bswap
xor
ror
sub
sub
add
neg
bswap
xor
ror
neg
xor
not
xorl
not
dec
neg
sub
neg
bswap
not
add
ror
lea
not
not
ror
dec
lea
not
xor
lea
not
popf
ret
xchg
pusha
push
jmp
cmp
jmp
fincstp
fcomip
fadds
add
inc
rol
bswap
add
neg
not
lea
dec
not
neg
bswap
dec
xor
not
rol
rol
bswap
not
ror
xor
xor
neg
neg
bswap
bswap
inc
xor
rol
sub
ror
xor
dec
ror
not
add
xor
popf
ret
imul
test
inc
popa
in
setl
fmuls
ss
xor
ror
not
dec
inc
bswap
sub
xorl
rol
lea
ror
bswap
ror
ror
lea
not
neg
neg
not
xor
neg
lea
not
not
bswap
bswap
inc
ror
bswap
ror
not
popf
ret
mov
gs
insl
jmp
jno
ror
bswap
xor
neg
inc
ror
inc
ror
ror
neg
inc
xor
not
neg
bswap
ror
neg
rol
dec
sub
inc
add
neg
rol
neg
xorl
dec
rol
inc
dec
xor
rol
not
inc
neg
popf
ret
call
mov
add
jmp
loope
push
and
pushf
xor
rol
neg
ror
xor
xor
not
sub
xor
xorl
inc
neg
xor
inc
inc
rol
ror
not
xor
neg
dec
lea
add
xor
ror
neg
bswap
add
rol
xor
dec
not
add
rol
xor
lea
dec
rol
bswap
popf
ret
mov
mov
psubsw
idiv
jmp
push
adc
enter
dec
neg
rol
bswap
not
neg
xor
inc
neg
xor
xorl
lea
ror
neg
lea
rol
bswap
ror
add
inc
neg
lea
neg
bswap
bswap
dec
not
lea
rol
xor
add
neg
dec
not
lea
popf
ret
jge
push
das
es
jmp
cmp
roll
add
xor
dec
neg
rol
bswap
dec
inc
bswap
bswap
not
rol
xor
ror
not
add
inc
ror
inc
xor
neg
xor
not
dec
ror
dec
lea
xor
sub
xor
not
xor
rol
inc
not
dec
bswap
not
popf
ret
mov
test
xor
mov
mov
rol
ror
neg
lea
dec
not
not
inc
lea
sub
rol
bswap
not
add
dec
rol
add
ror
inc
rol
ror
neg
dec
bswap
neg
xorl
not
xor
ror
dec
rol
popf
ret
out
test
cmp
fisubrs
jmp
imul
rolb
mov
ror
xorl
xor
neg
dec
add
dec
xor
neg
dec
ror
xor
rol
rol
inc
bswap
bswap
neg
dec
ror
lea
bswap
neg
dec
neg
not
rol
neg
rol
rol
popf
ret
popf
dec
lea
push
or
stc
pushf
rol
lea
sub
bswap
neg
xorl
neg
inc
not
lea
not
ror
not
xor
neg
bswap
lea
lea
bswap
inc
inc
lea
rol
inc
not
bswap
inc
rol
dec
not
neg
inc
neg
xor
lea
popf
ret
pop
add
sti
push
jmp
jge
pushf
ror
sub
dec
bswap
not
dec
sub
bswap
ror
rol
dec
neg
bswap
inc
rol
sub
bswap
lea
not
lea
neg
ror
inc
not
xor
bswap
bswap
ror
add
add
lea
xor
inc
neg
xorl
dec
neg
bswap
popf
ret
aas
push
jmp
adc
lods
pushf
bswap
rol
lea
rol
inc
xor
bswap
bswap
dec
rol
ror
neg
xor
ror
dec
sub
xorl
inc
ror
not
xor
dec
bswap
rol
dec
bswap
ror
not
neg
dec
ror
ror
dec
xor
rol
lea
not
rol
inc
lea
neg
xor
bswap
neg
popf
ret
xor
dec
jmp
push
push
movsb
leave
arpl
xchg
neg
ror
xor
rol
add
neg
add
ror
xor
not
dec
rol
add
xor
ror
xor
neg
dec
lea
xorl
ror
dec
not
sub
xor
bswap
bswap
lea
lea
dec
dec
xor
xor
not
ror
inc
popf
ret
mov
pop
jbe
pop
jmp
jnp
or
inc
not
dec
neg
lea
not
bswap
bswap
neg
inc
bswap
xorl
rol
add
dec
not
neg
rol
add
ror
dec
sub
inc
xor
ror
lea
sub
xor
not
lea
sub
rol
xor
popf
ret
push
push
push
jmp
mov
xorl
ror
ror
not
xor
inc
inc
ror
inc
bswap
bswap
xor
ror
not
not
dec
xor
ror
rol
lea
rol
inc
xor
ror
rol
lea
inc
dec
ror
not
rol
not
neg
add
not
xor
bswap
sub
popf
ret
jae
push
jmp
call
add
push
jmp
jo
pushf
neg
ror
xor
not
bswap
add
ror
xor
inc
ror
xorl
ror
dec
neg
bswap
sub
rol
ror
not
ror
neg
ror
xor
inc
neg
xor
neg
ror
sub
neg
xor
ror
lea
inc
inc
not
xor
neg
popf
ret
mov
loopne
mov
adcl
arpl
bswap
ror
lea
inc
xorl
sub
ror
add
xor
not
ror
ror
inc
bswap
not
lea
xor
ror
inc
not
sub
xor
xor
inc
neg
rol
dec
xor
not
neg
xor
neg
not
rol
bswap
popf
ret
cmp
inc
mov
shr
adc
jmp
inc
inc
pushf
neg
ror
neg
dec
bswap
inc
xorl
inc
neg
add
inc
neg
not
ror
rol
inc
neg
sub
bswap
not
rol
dec
rol
inc
dec
bswap
xor
dec
rol
xor
dec
neg
neg
lea
popf
ret
mov
push
jmp
adc
lods
pushf
xor
rol
lea
neg
xor
rol
not
neg
rol
not
inc
dec
ror
neg
xorl
add
not
neg
dec
lea
rol
bswap
not
rol
bswap
bswap
bswap
not
add
rol
inc
not
sub
not
dec
bswap
popf
ret
mov
jb
pop
push
ljmp
cmp
ljmp
pushf
rol
bswap
neg
bswap
inc
xor
not
neg
xor
neg
dec
bswap
bswap
not
bswap
ror
inc
dec
inc
lea
rol
neg
not
dec
ror
rol
xor
xor
ror
bswap
xorl
sub
add
bswap
bswap
popf
ret
loop
js
mov
sbb
sbb
into
pushf
ror
bswap
rol
bswap
neg
not
rol
not
xor
lea
rol
inc
dec
bswap
rol
neg
lea
rol
not
ror
ror
neg
lea
sub
not
xor
neg
inc
neg
ror
ror
not
ror
xorl
bswap
neg
ror
popf
ret
push
into
push
jmp
mov
enter
inc
neg
xor
dec
xor
ror
xor
xorl
ror
ror
dec
bswap
not
rol
inc
bswap
not
bswap
dec
rol
ror
rol
xor
dec
not
inc
xor
neg
lea
popf
ret
aaa
jecxz
mov
push
jmp
aad
pushf
dec
xorl
bswap
bswap
add
rol
bswap
neg
not
ror
xor
rol
not
ror
sub
lea
add
ror
neg
bswap
rol
bswap
add
dec
not
neg
inc
ror
ror
lea
sub
not
not
dec
popf
ret
out
fs
jmp
aaa
test
out
div
fmuls
enter
sub
mov
lea
adc
or
stos
neg
dec
lea
ror
rol
bswap
sub
rol
xor
lea
sub
xor
not
xorl
neg
xor
not
dec
neg
neg
sub
neg
xor
ror
lea
rol
popf
ret
xchg
lds
dec
sub
call
dec
dec
bswap
neg
sub
xor
lea
lea
rol
sub
xor
xorl
not
neg
xor
ror
dec
sub
xor
neg
ror
neg
neg
inc
lea
inc
ror
dec
lea
not
rol
rol
dec
rol
ror
bswap
popf
ret
bound
cmpsl
dec
mov
call
into
push
inc
neg
inc
inc
rol
neg
ror
bswap
rol
ror
add
ror
dec
neg
xor
inc
lea
rol
lea
xor
bswap
not
not
neg
dec
inc
rol
neg
dec
not
xorl
add
bswap
xor
not
inc
popf
ret
pop
mov
push
jmp
mov
add
inc
neg
not
dec
not
ror
rol
bswap
ror
xorl
dec
xor
dec
xor
lea
neg
ror
not
neg
ror
dec
bswap
xor
bswap
neg
neg
lea
xor
inc
rol
neg
lea
popf
ret
fnstsw
inc
ficoml
call
fisttpl
enter
hlt
and
fadd
enter
xor
neg
add
dec
not
neg
xor
xorl
lea
rol
xor
bswap
lea
dec
ror
lea
ror
ror
inc
dec
dec
ror
bswap
not
rol
neg
not
bswap
rol
lea
xor
neg
not
popf
ret
xor
push
jmp
test
pop
pushf
not
neg
rol
rol
lea
neg
xor
bswap
neg
xorl
not
dec
xor
xor
rol
inc
neg
neg
rol
rol
dec
xor
rol
lea
lea
lea
xor
rol
inc
neg
not
inc
xor
ror
dec
xor
popf
ret
sbb
xor
jmp
lret
mov
not
not
add
bswap
ror
bswap
inc
bswap
inc
dec
rol
inc
lea
xor
bswap
not
sub
xorl
xor
neg
bswap
inc
neg
xor
inc
not
bswap
ror
not
xor
add
neg
neg
ror
bswap
popf
ret
xor
shrb
pop
pop
mov
jmp
xchg
pushf
bswap
add
neg
lea
dec
bswap
ror
rol
neg
sub
neg
bswap
not
inc
add
neg
inc
rol
not
neg
not
inc
lea
neg
rol
xor
inc
xorl
dec
not
inc
lea
xor
xor
xor
lea
sub
popf
ret
inc
push
jmp
sub
enter
lea
xor
dec
xor
dec
not
rol
bswap
inc
neg
ror
lea
lea
neg
add
bswap
not
xor
xorl
inc
rol
add
not
ror
add
lea
lea
not
inc
not
dec
popf
ret
xchg
jmp
push
jmp
pop
gs
xor
bswap
inc
not
not
rol
inc
dec
rol
xor
xorl
rol
neg
bswap
rol
lea
bswap
inc
bswap
bswap
neg
lea
inc
add
ror
sub
rol
neg
rol
lea
xor
bswap
xor
add
neg
popf
ret
xchg
in
adc
jb
orl
inc
out
ljmp
dec
sub
ror
xor
neg
add
bswap
neg
bswap
xor
bswap
not
inc
inc
neg
neg
rol
add
xorl
not
not
rol
xor
rol
lea
bswap
neg
rol
sub
add
popf
ret
mov
push
jmp
push
inc
jge
inc
not
inc
rol
bswap
ror
xor
bswap
neg
rol
neg
bswap
ror
not
sub
ror
add
dec
lea
xorl
bswap
xor
add
neg
not
neg
ror
neg
dec
not
bswap
add
popf
ret
jp,pt
mov
push
jmp
bound
scas
adc
rol
ror
lea
dec
add
rol
not
bswap
neg
rol
dec
lea
bswap
xor
xor
neg
rol
not
rol
inc
xor
sub
xorl
lea
xor
dec
rol
dec
not
dec
popf
ret
dec
lcall
adc
jmp
cli
test
inc
neg
xor
ror
inc
bswap
dec
rol
xor
lea
xor
neg
neg
lea
rol
not
lea
lea
bswap
neg
xor
bswap
rol
xor
not
xorl
bswap
bswap
lea
xor
inc
neg
xor
sub
ror
lea
popf
ret
push
cmp
loopne,pt
dec
in
jae
jmp
fbstp
and
inc
ror
not
neg
ror
neg
add
lea
not
neg
add
bswap
not
rol
sub
xor
xor
not
rol
sub
bswap
bswap
sub
sub
xor
not
bswap
rol
neg
xor
xor
bswap
dec
inc
inc
dec
ror
popf
ret
push
pushf
lret
pop
sub
decl
mov
leave
or
xorl
xor
not
neg
bswap
not
inc
rol
not
lea
neg
add
xor
rol
xor
not
ror
bswap
rol
add
xor
not
neg
lea
bswap
neg
bswap
ror
ror
inc
xor
lea
bswap
inc
popf
ret
mov
mov
jmp
test
rol
add
add
neg
rol
bswap
neg
bswap
xor
rol
rol
dec
ror
not
rol
bswap
lea
dec
rol
neg
ror
rol
lea
neg
neg
xor
xor
inc
rol
xorl
rol
not
bswap
dec
neg
lea
xor
not
dec
popf
ret
jbe
xor
pop
mov
call
ror
ror
lea
inc
neg
add
dec
bswap
xor
lea
sub
rol
xor
xorl
rol
inc
bswap
neg
bswap
rol
add
ror
dec
bswap
rol
inc
not
inc
neg
neg
add
inc
xor
dec
inc
not
popf
ret
insb
push
jmp
mov
bswap
inc
sub
not
sub
ror
dec
rol
rol
not
neg
lea
lea
ror
ror
dec
neg
sub
neg
bswap
add
rol
dec
add
neg
dec
xorl
rol
inc
neg
neg
ror
popf
ret
and
push
jmp
idivl
bswap
neg
xor
xor
ror
sub
xorl
inc
neg
add
neg
add
not
not
not
bswap
inc
xor
neg
rol
inc
sub
add
not
inc
rol
inc
rol
neg
neg
not
not
popf
ret
cmp
add
sbb
data16
ljmp
enter
ror
inc
rol
sub
lea
neg
ror
bswap
not
add
not
xor
lea
ror
dec
xor
neg
xor
not
bswap
inc
xorl
add
bswap
ror
rol
bswap
add
inc
rol
dec
rol
popf
ret
int
lcall
ljmp
lcall
in
lret
ror
not
not
bswap
bswap
neg
add
ror
bswap
dec
add
rol
ror
ror
ror
xor
inc
xorl
dec
neg
not
sub
bswap
add
bswap
lea
rol
neg
neg
ror
lea
sub
xor
popf
ret
or
and
pop
rclb
jmp
cmpsl
jo
aas
xchg
add
sbb
rcrb
cmc
popf
mov
xor
fld
leave
adc
lcall
not
neg
dec
not
neg
bswap
dec
sub
rol
neg
bswap
lea
xor
dec
ror
bswap
lea
not
add
not
rol
rol
xorl
neg
not
popf
ret
or
push
jmp
movsl
lcall
add
neg
xor
bswap
ror
lea
dec
inc
xorl
not
not
xor
ror
bswap
lea
neg
ror
lea
rol
xor
not
rol
inc
bswap
not
not
bswap
inc
rol
add
xor
neg
not
inc
add
inc
xor
bswap
popf
ret
mov
insl
push
jmp
add
xorl
not
ror
xor
neg
rol
rol
inc
bswap
ror
xor
inc
neg
xor
bswap
bswap
not
xor
not
xor
inc
bswap
xor
rol
sub
lea
inc
rol
not
add
not
dec
xor
ror
rol
lea
neg
not
lea
xor
popf
ret
push
js
ret
xor
jge
aas
jmp
repnz
ror
not
dec
inc
lea
not
dec
rol
not
inc
bswap
neg
xor
rol
xorl
dec
lea
xor
lea
bswap
lea
ror
rol
ror
bswap
inc
neg
not
add
not
bswap
lea
dec
neg
ror
rol
lea
inc
neg
rol
popf
ret
pop
fstpl
push
jmp
cmp
pushf
not
xor
inc
rol
dec
ror
dec
bswap
dec
xor
inc
xor
xor
lea
rol
ror
neg
lea
not
xor
bswap
rol
inc
xor
inc
xorl
not
not
inc
not
popf
ret
mov
cltd
into
cmp
inc
decl
inc
not
sub
neg
inc
xor
dec
neg
neg
ror
lea
dec
inc
ror
dec
not
xorl
add
bswap
rol
xor
neg
not
bswap
lea
lea
rol
rol
not
bswap
inc
xor
neg
xor
dec
bswap
popf
ret
ror
xchg
push
jmp
dec
ror
neg
not
xor
rol
xor
not
sub
ror
not
sub
lea
neg
inc
ror
not
xor
lea
ror
ror
dec
rol
rol
not
rol
ror
xorl
not
xor
ror
add
xor
sub
add
bswap
popf
ret
mov
fwait
jmp
repnz
or
lea
neg
lea
neg
bswap
xor
neg
dec
sub
inc
ror
xorl
xor
bswap
bswap
dec
inc
neg
not
rol
ror
dec
xor
inc
neg
bswap
rol
dec
bswap
add
xor
popf
ret
xchg
aam
imulb
xchg
test
jmp
repz
add
bswap
ror
dec
ror
rol
neg
rol
lea
neg
bswap
neg
dec
not
sub
neg
xorl
neg
rol
lea
sub
neg
sub
neg
rol
lea
bswap
add
rol
bswap
not
lea
not
xor
sub
xor
rol
neg
rol
popf
ret
cmpsb
lret
lahf
in
jmp
sbb
rol
bswap
not
ror
xor
not
rol
xor
not
xor
add
dec
xor
ror
not
ror
neg
inc
not
xor
not
bswap
inc
inc
xorl
xor
dec
add
not
rol
dec
ror
neg
not
popf
ret
or
or
decl
cmpsl
imul
rol
lret
sbb
rol
rclb
rol
dec
ror
inc
not
not
inc
inc
xor
neg
xorl
lea
rol
xor
inc
not
bswap
ror
bswap
inc
rol
dec
not
rol
sub
dec
ror
inc
neg
bswap
xor
bswap
popf
ret
jmp
movsl
sub
jmp
stc
push
aam
rol
xor
add
dec
rol
xor
rol
ror
inc
bswap
ror
bswap
not
neg
ror
dec
add
ror
lea
dec
ror
not
sub
inc
not
neg
ror
xorl
neg
ror
xor
dec
inc
add
not
inc
dec
bswap
bswap
neg
bswap
popf
ret
lahf
push
jmp
jg
jnp
sub
add
bswap
xor
neg
inc
ror
inc
not
not
xor
bswap
dec
rol
not
add
neg
not
rol
lea
lea
xor
inc
xor
inc
bswap
rol
xor
dec
not
rol
neg
xor
dec
neg
not
xorl
sub
popf
ret
mov
push
jmp
outsl
loope
push
or
clc
fnstsw
ror
dec
rol
dec
not
sub
bswap
not
bswap
inc
ror
rol
neg
rol
xor
not
lea
lea
neg
ror
sub
ror
xor
ror
sub
ror
xor
inc
xorl
xor
bswap
xor
lea
add
rol
bswap
xor
neg
not
dec
popf
ret
and
jbe
jmp
call
pushf
sub
xor
xor
dec
inc
not
xor
rol
add
bswap
xorl
sub
dec
not
ror
neg
inc
dec
rol
ror
sub
dec
bswap
neg
dec
lea
rol
lea
rol
neg
xor
ror
neg
popf
ret
mov
sti
ljmp
lods
cmp
mov
add
std
fucomp
add
dec
pushf
bswap
inc
lea
rol
bswap
neg
bswap
not
not
neg
neg
neg
rol
bswap
ror
add
ror
add
not
neg
bswap
neg
bswap
not
add
xor
bswap
add
ror
rol
rol
bswap
inc
not
xorl
inc
inc
popf
ret
cltd
adc
push
jmp
call
lea
xorl
neg
dec
add
bswap
bswap
not
neg
bswap
rol
not
ror
bswap
lea
bswap
xor
rol
inc
ror
not
xor
ror
dec
bswap
xor
inc
ror
bswap
bswap
xor
sub
popf
ret
cmpsl
push
jmp
cmp
pushf
xor
add
ror
bswap
lea
dec
xor
add
dec
xor
not
lea
add
xor
ror
xor
inc
not
sub
bswap
dec
bswap
lea
xorl
add
not
lea
not
add
neg
not
dec
neg
popf
ret
test
add
jmp
test
sub
popa
sbb
xor
rol
sub
dec
rol
sub
dec
ror
lea
neg
ror
lea
ror
xor
neg
xorl
dec
bswap
xor
not
inc
rol
bswap
sub
neg
sub
rol
sub
dec
xor
inc
not
popf
ret
popf
pop
sbb
ret
jmp
rcr
bswap
xor
sub
dec
rol
xor
xor
not
sub
ror
bswap
ror
rol
lea
neg
not
xorl
inc
bswap
rol
ror
neg
xor
dec
bswap
neg
inc
neg
bswap
inc
neg
xor
inc
bswap
xor
ror
dec
ror
not
neg
lea
popf
ret
xor
jecxz
punpckhbw
sub
decl
pushf
not
lea
inc
bswap
lea
lea
ror
ror
neg
lea
ror
bswap
inc
bswap
xorl
xor
inc
neg
ror
neg
ror
bswap
add
inc
bswap
not
rol
neg
not
xor
inc
neg
ror
neg
inc
sub
rol
popf
ret
push
jmp
mov
dec
hlt
pushf
lea
add
rol
ror
xor
xor
neg
rol
rol
bswap
rol
lea
sub
xor
xor
ror
ror
xor
xor
xorl
lea
ror
ror
bswap
dec
dec
dec
not
xor
dec
not
dec
neg
ror
xor
sub
inc
xor
not
lea
popf
ret
mov
orb
lret
sbb
enter
dec
lea
neg
lea
xor
neg
not
xorl
neg
add
not
not
ror
lea
rol
ror
sub
neg
not
dec
add
rol
xor
lea
sub
dec
add
ror
xor
neg
xor
dec
xor
popf
ret
out
push
add
jmp
cmpsb
jp
jecxz
pushf
bswap
xor
inc
xor
sub
dec
ror
ror
ror
bswap
xor
dec
xor
sub
rol
bswap
rol
inc
lea
bswap
neg
bswap
dec
dec
not
bswap
not
neg
bswap
rol
xorl
not
popf
ret
sub
sbb
inc
sar
call
lea
sub
dec
bswap
xor
ror
dec
not
neg
xorl
neg
bswap
xor
lea
rol
not
rol
add
neg
ror
xor
bswap
inc
inc
dec
xor
neg
xor
inc
neg
dec
ror
add
popf
ret
add
js
mov
dec
movsb
inc
pushf
lea
rol
rol
neg
rol
xor
dec
inc
bswap
not
not
xor
not
lea
rol
bswap
lea
xorl
lea
lea
bswap
xor
rol
dec
dec
not
rol
not
lea
bswap
bswap
not
ror
ror
lea
popf
ret
mov
sub
jae
call
rcl
pushf
sub
sub
xor
xorl
not
neg
rol
inc
bswap
add
inc
not
not
xor
add
lea
ror
bswap
neg
dec
lea
dec
dec
not
xor
ror
bswap
xor
bswap
ror
neg
neg
xor
ror
not
xor
lea
sub
rol
bswap
inc
rol
inc
popf
ret
lods
and
cmp
push
mov
inc
xchg
pop
das
mov
neg
dec
rol
dec
neg
not
not
dec
xor
dec
rol
xor
not
bswap
add
dec
bswap
xorl
inc
rol
dec
bswap
ror
neg
ror
rol
neg
not
bswap
dec
rol
bswap
popf
ret
xor
push
jmp
lcall
not
xor
rol
not
add
not
bswap
bswap
rol
dec
neg
sub
not
bswap
neg
not
sub
xor
inc
xor
xor
inc
not
ror
neg
dec
inc
not
rol
inc
neg
xor
xorl
dec
ror
popf
ret
mov
out
ret
shrb
dec
xchg
jecxz
not
add
bswap
lea
not
bswap
rol
lea
not
lea
neg
rol
ror
not
not
not
lea
neg
rol
add
neg
xor
add
lea
xor
ror
not
dec
xor
xorl
lea
popf
ret
aaa
sbb
push
jmp
add
imul
pushf
inc
bswap
ror
rol
bswap
neg
ror
rol
lea
bswap
neg
bswap
not
dec
ror
neg
ror
rol
dec
dec
neg
bswap
neg
xorl
neg
xor
not
neg
bswap
dec
rol
dec
xor
ror
inc
popf
ret
sub
push
jmp
pop
sbb
out
pushf
rol
xorl
ror
neg
not
inc
rol
sub
xor
rol
not
not
ror
add
inc
rol
rol
lea
sub
neg
lea
xor
neg
lea
not
not
add
rol
xor
not
popf
ret
test
adc
mov
pushf
xor
dec
neg
sub
bswap
rol
dec
inc
not
not
neg
rol
bswap
sub
neg
neg
bswap
neg
dec
xor
rol
xorl
rol
neg
ror
sub
not
bswap
lea
sub
add
ror
popf
ret
jne
ficoms
lret
jecxz
xchg
jmp
sub
xchg
rol
ror
inc
bswap
rol
bswap
bswap
inc
rol
not
sub
not
inc
neg
rol
dec
ror
inc
rol
xor
ror
lea
add
xor
dec
rol
xorl
not
inc
inc
popf
ret
lcall
pop
fsubl
xchg
incl
pushf
ror
neg
lea
bswap
sub
ror
neg
neg
xor
rol
add
xorl
not
dec
xor
bswap
bswap
neg
add
rol
sub
add
sub
not
ror
rol
rol
sub
inc
not
neg
ror
xor
xor
neg
xor
neg
add
popf
ret
inc
push
jmp
jecxz
sub
xor
neg
lea
not
neg
xor
inc
inc
ror
ror
sub
xor
neg
bswap
xorl
ror
sub
dec
lea
ror
inc
neg
add
neg
not
rol
sub
not
rol
sub
not
rol
neg
rol
dec
bswap
xor
rol
popf
ret
xor
shl
jmp
pushf
inc
iret
fisubs
pushf
xor
ror
not
ror
not
neg
rol
dec
bswap
rol
not
xor
not
xor
bswap
not
rol
lea
neg
neg
xorl
sub
not
bswap
dec
rol
rol
neg
dec
not
inc
xor
neg
bswap
sub
neg
inc
ror
not
bswap
dec
popf
ret
stc
shrl
iret
inc
mov
xchg
int3
ljmp
repz
not
lea
neg
lea
lea
xor
dec
not
inc
xor
not
rol
lea
xor
dec
lea
inc
neg
not
xor
xor
ror
lea
neg
not
dec
rol
not
dec
not
xor
lea
lea
xorl
bswap
add
not
dec
not
popf
ret
sbb
mov
int3
incl
adc
pushf
bswap
sub
xor
ror
rol
not
neg
sub
inc
not
bswap
not
bswap
ror
bswap
dec
ror
xorl
neg
xor
ror
dec
sub
neg
bswap
neg
add
neg
bswap
not
sub
bswap
neg
xor
xor
inc
not
popf
ret
and
shr
pop
decl
rcrl
bswap
xorl
not
xor
inc
add
rol
neg
inc
dec
neg
inc
ror
not
neg
bswap
inc
neg
sub
inc
xor
ror
not
sub
lea
xor
rol
lea
sub
xor
inc
popf
ret
xor
jnp
adc
cwtl
mov
lock
pushf
bswap
rol
inc
bswap
inc
dec
bswap
sub
rol
xor
xor
lea
bswap
dec
bswap
xor
xorl
xor
inc
ror
ror
sub
dec
dec
lea
ror
inc
rol
bswap
ror
rol
inc
xor
neg
inc
popf
ret
xchg
ss
jmp
sub
push
ffree
lret
sbb
rolb
neg
inc
rol
not
bswap
inc
neg
bswap
sub
not
xor
bswap
lea
inc
ror
inc
neg
xor
rol
inc
not
xor
xorl
rol
not
inc
not
neg
bswap
inc
bswap
ror
popf
ret
sub
pusha
cmp
push
jmp
aaa
mov
pushf
add
ror
inc
rol
xor
xor
dec
bswap
xor
xor
neg
bswap
xor
xor
ror
rol
neg
dec
dec
add
rol
bswap
dec
not
ror
inc
ror
xorl
inc
xor
add
ror
popf
ret
dec
push
jmp
sbb
xchg
rclb
mov
fadd
roll
mov
leave
or
add
xor
rol
add
inc
not
lea
dec
dec
bswap
bswap
neg
rol
add
ror
not
lea
xor
rol
neg
neg
not
xor
xor
inc
add
neg
add
bswap
add
neg
inc
rol
popf
ret
push
xchg
mov
lods
fs
jmp
les
pop
inc
pushf
xor
rol
inc
bswap
sub
not
lea
ror
not
inc
rol
bswap
add
lea
xor
rol
dec
dec
ror
xor
bswap
rol
xorl
rol
neg
bswap
ror
dec
rol
lea
rol
xor
sub
popf
ret
lods
jns
lret
xor
shr
jae
jp
aas
mov
neg
xor
not
not
xor
lea
inc
not
bswap
rol
bswap
lea
rol
dec
xor
neg
add
not
not
rol
neg
bswap
xor
inc
rol
xor
xor
add
ror
add
neg
sub
inc
xorl
not
neg
bswap
not
dec
neg
ror
popf
ret
push
push
cld
lock
jmp
test
neg
sub
ror
ror
neg
ror
lea
bswap
not
xor
bswap
lea
add
bswap
xor
bswap
neg
not
ror
ror
bswap
neg
dec
inc
add
bswap
not
add
neg
xor
neg
ror
xorl
popf
ret
fs
mov
jge
daa
cmp
jmp
xor
and
pushf
ror
neg
neg
not
inc
not
bswap
ror
rol
ror
inc
xorl
neg
inc
xor
neg
sub
rol
dec
neg
ror
dec
neg
inc
not
ror
add
add
not
dec
xor
bswap
ror
not
add
ror
popf
ret
jno
push
fsubrl
fadds
jmp
sarb
pushf
not
xorl
sub
rol
bswap
not
inc
not
neg
rol
lea
lea
not
neg
neg
bswap
add
bswap
rol
not
add
rol
inc
bswap
bswap
inc
sub
lea
rol
neg
rol
lea
xor
dec
ror
popf
ret
jg
cld
dec
pop
dec
jmp
adc
notl
cmp
and
dec
rol
neg
xor
xor
not
lea
add
neg
inc
rol
dec
not
ror
not
inc
rol
dec
xor
xor
inc
ror
ror
dec
ror
bswap
ror
inc
dec
neg
popf
ret
sub
xchg
push
jmp
das
jne
dec
xor
sub
ror
rol
lea
rol
add
add
xor
not
lea
not
lea
bswap
inc
xor
neg
add
dec
ror
lea
ror
ror
not
rol
xorl
bswap
dec
lea
not
rol
popf
ret
aad
push
jmp
mov
pushf
dec
bswap
not
not
rol
ror
lea
neg
xor
lea
not
add
not
bswap
sub
xor
not
xor
sub
rol
xorl
rol
inc
inc
not
sub
not
neg
rol
neg
dec
xor
rol
rol
lea
dec
popf
ret
push
jge
xchg
in
push
jmp
inc
lcall
xor
inc
neg
inc
lea
not
not
neg
inc
ror
xor
not
ror
bswap
not
neg
lea
neg
bswap
inc
bswap
dec
lea
neg
bswap
lea
ror
dec
bswap
popf
ret
cmp
and
int
imul
pushf
rol
lea
dec
bswap
xorl
inc
not
add
neg
rol
bswap
not
bswap
not
inc
ror
inc
xor
lea
bswap
bswap
inc
rol
xor
inc
lea
rol
lea
dec
ror
not
lea
bswap
ror
inc
xor
popf
ret
cmp
xor
jmp
gs
bswap
not
ror
xor
xor
rol
xor
bswap
bswap
sub
bswap
dec
bswap
inc
neg
ror
lea
xor
lea
lea
rol
not
lea
xorl
neg
inc
not
dec
rol
neg
neg
inc
add
popf
ret
iret
loopne
push
jmp
sti
pushf
rol
xorl
xor
neg
dec
bswap
dec
inc
ror
rol
not
add
xor
bswap
sub
ror
neg
lea
ror
ror
add
lea
xor
neg
inc
bswap
rol
neg
dec
ror
add
xor
lea
popf
ret
push
push
jmp
xchg
jg
repz
lea
ror
sub
ror
xorl
xor
not
not
xor
dec
xor
xor
ror
inc
ror
lea
inc
rol
not
dec
rol
bswap
not
sub
lea
lea
rol
rol
bswap
ror
lea
bswap
not
ror
add
lea
xor
lea
not
neg
popf
ret
sbb
cld
movsb
pop
mov
or
rol
lea
bswap
neg
dec
rol
bswap
dec
ror
not
inc
rol
bswap
sub
dec
sub
bswap
neg
xorl
ror
ror
dec
bswap
neg
xor
xor
dec
ror
bswap
dec
xor
dec
not
dec
popf
ret
icebp
mov
dec
cmc
jmp
jl
pop
xlat
sbb
rol
add
ror
ror
lea
lea
bswap
xor
bswap
dec
lea
xor
bswap
neg
neg
sub
bswap
add
xor
xor
sub
dec
add
not
neg
xor
xorl
xor
not
neg
lea
rol
popf
ret
arpl
loopne
push
jmp
daa
cs
dec
bswap
inc
not
add
lea
rol
inc
neg
xor
neg
dec
not
ror
rol
add
bswap
not
lea
bswap
dec
bswap
rol
ror
xor
neg
not
ror
xor
lea
xorl
rol
ror
xor
ror
ror
not
popf
ret
jg
fs
xchg
mov
jmp
pusha
adc
pushf
neg
bswap
lea
ror
neg
bswap
lea
lea
dec
lea
ror
rol
xor
xorl
dec
ror
lea
bswap
not
xor
not
ror
inc
dec
xor
lea
inc
neg
xor
ror
lea
xor
dec
neg
xor
ror
not
rol
not
xor
neg
lea
rol
xor
popf
ret
pop
pop
push
jmp
test
pushf
dec
neg
ror
inc
lea
bswap
not
neg
inc
inc
xor
xor
not
lea
bswap
sub
add
rol
xor
xor
rol
lea
xorl
lea
not
ror
dec
bswap
not
xor
not
xor
ror
neg
dec
popf
ret
pushf
push
jmp
outsb
icebp
sbb
pop
inc
neg
bswap
ror
not
ror
xor
add
neg
dec
ror
not
dec
ror
ror
bswap
xor
rol
inc
lea
xorl
lea
neg
sub
rol
not
lea
neg
not
neg
sub
inc
xor
bswap
xor
dec
neg
ror
popf
ret
mov
pop
fisubs
add
add
pop
aad
sub
gs
mov
out
mov
adc
mov
and
jae
sub
inc
cmp
in
outsb
fwait
add
sbb
add
jae
shll
sbb
rorb
mov
insb
std
aas
xchg
mov
sarb
stos
lea
enter
sub
jnp
mov
loope
xor
scas
sub
pushf
xor
push
test
mov
jg
daa
lcall
mov
aas
add
push
cmpsl
push
mov
int3
repnz
repz
fidivrl
mov
xor
sub
hlt
out
push
cs
lahf
mov
out
push
add
gs
push
jno
repz
fwait
shll
loop
push
mov
js
push
sbb
into
vphsubwd
adc
inc
xor
push
test
dec
mov
fsubl
rcll
xor
popf
leave
cmp
jmp
arpl
jne
or
insl
xchg
pop
xor
popfw
loope
jno
repz
add
dec
sarl
xor
sbb
movsl
cmc
or
outsl
pop
dec
lahf
std
iret
sbb
mov
pusha
mov
ret
test
out
outsl
push
out
insb
push
mov
stos
pop
mov
scas
add
popa
push
xchg
pop
push
mov
stos
pop
pop
mov
mov
mov
cwtl
dec
xor
gs
sarb
push
clc
shll
xlat
xchg
jmp
lds
mov
mov
jno
idivb
mov
sbbb
insb
push
pop
lcall
inc
daa
jp
rolb
dec
lahf
loope
pusha
mov
adc
cmpsl
aad
loope
or
shrl
add
push
inc
add
popf
popf
cmpsb
leave
dec
sbb
dec
pop
mov
pop
negl
dec
inc
jecxz
fs
pcmpgtd
cwtl
loope
sub
adc
xchg
inc
popa
cmpl
out
cmp
subl
int
and
cmp
std
sarb
gs
orl
adc
dec
jae
xor
call
adc
cs
add
inc
xchg
int3
int
pop
jnp
ret
pop
call
mov
push
mov
cmp
sub
dec
inc
push
arpl
fs
push
mov
data16
outsb
mov
mov
mov
xchg
negl
or
mov
cmp
dec
mov
adc
lahf
mov
sarb
fsubrl
sub
js
mov
imul
and
xchg
repz
shrl
mov
fnsave
data16
in
int3
jmp
mov
jg
es
ljmp
pop
xlat
test
pop
cmp
mov
xor
ds
xchg
or
aaa
shrl
and
push
gs
jns
das
mov
mov
ja
out
ss
sbb
sub
pop
repz
dec
fdivs
int
add
stos
pop
ss
mov
adc
ret
mov
cs
add
cmc
fisubl
scas
mov
cmp
mov
cmp
popf
lret
adc
mov
mov
test
lret
dec
flds
cltd
and
push
addb
xor
jb
lret
in
scas
lret
pop
mov
inc
arpl
scas
dec
mov
mov
mov
and
push
das
fcoml
and
or
lods
xor
test
dec
mov
pop
jo
sub
sbb
jb
lea
orl
cs
jg
les
mov
and
cmp
nop
pop
pop
lret
xor
pop
call
rcrl
cltd
hlt
jbe
mov
mov
ja
and
shlb
xchg
pusha
sahf
or
or
jbe
ficomps
cld
fnstsw
rol
call
xor
jge
mov
hlt
xor
std
sub
sbb
in
sbb
mov
ljmp
mov
push
scas
cs
xor
mov
loope
jg
icebp
inc
out
out
ret
dec
and
push
push
dec
movsl
into
ret
jne
or
xchg
jge
inc
push
jge
enter
push
les
in
jmp
imul
test
or
sti
pop
repnz
pop
lock
jmp
xor
arpl
dec
testb
test
fcompl
sub
mov
inc
or
cwtl
xor
and
pop
pop
das
arpl
pop
push
inc
lds
pop
sub
mov
or
jl
cmp
xor
lds
and
push
iret
cmc
xor
test
sahf
pop
cmp
push
enter
adc
jmp
sbb
inc
sbb
mov
push
dec
mov
mov
inc
or
fwait
xchg
xor
inc
bound
cltd
loopne
out
aaa
push
xchg
mov
pop
adcb
xchg
int3
js
xor
ret
in
cmpsl
test
aam
sarb
test
or
xor
test
in
fisttps
and
push
or
mov
pop
cmp
std
scas
sub
test
int3
loope
test
je
cld
push
mov
pushf
dec
lods
push
mov
pop
in
xchg
lahf
mov
inc
fiaddl
xchg
fstps
xchg
pop
cmp
insb
jle
fdivrl
xor
sbb
int
add
clc
fldenv
mov
popa
mov
dec
in
jl
sub
nop
mov
iret
lock
add
addr16
clc
js
mov
add
lods
dec
xlat
hlt
adc
popf
sbb
nop
mov
fmuls
addr16
push
int3
add
test
jno
aas
and
inc
adc
insl
and
test
jno
ja
push
push
jbe
stos
mov
loopne
push
cmpsb
mov
push
sarl
aam
cmp
dec
and
rclb
add
aaa
push
and
fildl
jae
push
sbb
cld
pop
aaa
sub
jmp
dec
jnp
jp
shlb
out
or
adc
fistpl
imul
fisttpll
inc
cmp
ds
xchg
sbb
fs
popl
inc
ljmp
dec
jmp
rcrl
mov
pop
mov
out
fldcw
shll
sub
mov
cmp
push
frstor
mov
movsb
addr16
pop
leave
sub
xchg
data16
push
insb
adc
mov
into
das
vpmulhw
mov
cmp
or
aas
test
fdivl
mov
pop
mov
xchg
xorl
mov
xchg
outsb
pop
repnz
dec
add
ljmp
inc
mov
and
stos
mov
jno
adc
mov
pop
push
add
sbb
pop
sub
add
cwtl
test
loope
cwtl
push
cwtl
pop
xchg
sbb
push
adc
iret
ds
aam
pop
mov
mov
or
mov
pop
pushf
dec
mov
sub
jl
or
sbb
or
js
addr16
stos
fcomp
lods
push
inc
jo
add
stos
sbb
call
add
push
inc
aas
dec
test
adc
pop
es
ss
or
and
in
inc
add
je
mov
out
sbb
gs
jp
imul
or
add
mov
xor
scas
jle
movsb
xor
inc
aaa
ds
sub
cmpsb
add
sub
jmp
sbb
dec
mov
ret
mov
pushf
and
inc
add
mov
inc
or
movsb
pop
jo
call
mov
stos
add
test
inc
loop
add
lahf
aad
shr
inc
rcrl
iret
pop
cltd
ljmp
fs
jae
int3
lahf
in
adc
pop
rorb
jmp
push
cmc
jbe
sahf
push
jecxz
das
mov
outsb
fimull
gs
aad
ret
fcoms
icebp
outsb
or
adc
push
jns
jge
loope
or
add
fsubs
add
mov
in
ret
cmp
xor
lods
mov
ljmp
xor
or
mov
dec
mov
fsubrp
inc
hlt
jg
pop
inc
popa
push
adc
xchg
pop
xchg
and
mov
cmc
insb
rcl
fldl
lcall
shl
vandnpd
repnz
adc
test
pusha
test
xchg
jne
push
pop
lods
ss
xchg
or
pop
rcr
pop
das
dec
push
aad
jae
inc
and
mov
lret
mov
push
mov
lods
jbe
or
jg
xchg
es
sub
test
add
pop
or
push
cmp
mov
rorb
cmpsl
insl
out
into
mov
sbb
add
jnp
pop
repnz
cltd
rcll
ret
dec
fwait
jnp
out
lea
push
inc
xchg
fsub
lret
dec
mov
xor
mov
jne
test
push
xor
sbb
and
je
lahf
adc
mov
adc
push
jl
push
jge
xchg
loopne
adc
inc
rcl
scas
addl
mov
aaa
or
fadd
fwait
pop
lock
arpl
push
pop
test
movsl
pop
mov
rorb
push
insl
push
dec
ljmp
mov
inc
cmp
xchg
xor
repnz
loopne
lcall
or
in
adc
mov
pop
int
sti
dec
cmpb
pop
bound
push
fs
data16
cmp
and
pop
jl
dec
cmc
adc
jg
mov
push
push
cli
rclb
aad
xchg
xchg
shll
clc
jns
pop
xchg
lcall
push
xchg
addb
jbe
xor
jecxz
sbb
mov
fistpl
aaa
test
cmpsl
shlb
je
inc
sbb
call
cltd
movsb
jecxz
jg
push
fldenv
bound
adc
xchg
mulb
or
dec
mov
and
lods
sbb
push
lahf
inc
aas
sbb
lods
outsb
out
test
pop
int
dec
fcompl
push
pop
or
inc
leave
mov
fstps
lret
pushaw
mov
je
push
jae
cmp
xchg
lds
pop
cmp
xor
stos
sbb
int
hlt
loop
cmpsb
imull
add
push
push
mov
aas
dec
cmp
adc
sub
dec
hlt
cmp
es
mov
sub
fsubs
stos
jae
add
sbb
aas
sub
mov
jo
test
push
pop
test
jae
aas
mov
pop
popa
jne
pop
daa
les
std
push
dec
mov
fisubrl
ss
mov
cmp
xchg
movsb
mov
push
mov
push
adc
sbb
sbb
or
es
movsb
shlb
icebp
dec
push
inc
mov
es
xor
sub
mov
xchg
mov
and
inc
scas
adc
jecxz
and
outsl
push
sbb
js
xchg
outsl
fwait
jb
pop
cs
pop
adc
mov
lcall
xor
adc
into
jmp
loopne
insl
stos
add
add
ss
in
iret
jno
or
mov
mov
xchg
xchg
sub
or
out
add
je
pop
dec
inc
or
sahf
out
fiadds
test
pop
mov
lods
jmp
stos
subl
sbb
sub
repz
jg
cmpsb
sub
scas
cli
enter
xor
pusha
mov
mov
pop
cmp
cwtl
xor
lods
push
loope
sarl
or
roll
shlb
mov
inc
scas
or
push
add
std
pop
cmc
mov
loop
xor
lcall
outsl
jb
jecxz
rclb
outsl
test
in
fwait
mov
sti
mov
mov
fnstcw
gs
pop
loope
or
pop
fsubs
loopnew
and
adc
lock
imul
lock
les
mov
push
cwtl
ss
std
repnz
jbe
pop
push
leave
rcll
loop
inc
dec
or
mov
mov
dec
cli
xchg
mov
push
pop
cld
sarl
sub
in
jo
adc
xchg
mov
enter
jno
sahf
insl
xchg
mov
cmpsl
ret
cmp
mov
dec
jbe
sbb
mov
aaa
sbb
aas
push
popf
ss
rolb
call
jg
jg
imul
push
lahf
stos
adc
lret
out
xchg
cmpsb
adc
fiadds
mov
fwait
repnz
aas
xchg
imul
aad
and
add
out
mov
xor
sub
add
xor
data16
sub
addr16
jl
mov
bound
faddl
test
mov
adc
and
fs
push
jno
jno
test
inc
inc
push
popa
lcall
decl
lods
xchg
in
or
pop
mov
std
push
lcall
inc
dec
je
mov
xchg
sbb
pop
fisubl
jae
lcall
ffree
bound
xchg
jnp
or
imul
imul
sub
xchg
arpl
pushf
in
mov
test
xchg
into
inc
fstps
pop
mov
adc
int
mov
push
enter
in
pusha
shll
xchg
in
repz
mov
dec
jecxz
cmpsb
call
push
push
and
cli
ja
pop
sub
xor
mov
cmpsl
fcoms
movsb
dec
cmp
mov
aad
dec
jo
cmp
mov
fdivl
pop
or
mov
add
mov
scas
arpl
inc
sub
cmpb
sbb
fcomi
scas
ret
push
and
cltd
js
in
repnz
mov
add
xor
ret
jl
push
imul
and
fdivrl
inc
mov
and
mov
jp
outsb
outsl
cld
aaa
cmc
xor
mov
cld
notb
je
inc
xchg
mov
push
scas
pop
mov
inc
lods
adc
inc
jl
jns
dec
pop
shl
mov
mov
or
jp
sbb
pop
xor
and
mov
mov
cmp
mov
lock
add
test
pop
fiaddl
pop
lods
mov
call
sub
inc
cmc
pusha
hlt
inc
pusha
push
icebp
test
jns
or
pop
cwtl
ja
and
daa
fdivrs
cmp
fdiv
sub
fdiv
adc
inc
insl
adcl
cli
test
sbb
inc
lods
xchg
outsl
shr
adcl
xor
adc
mov
adc
out
fmuls
int
aad
adc
sub
push
jl
nop
pop
or
pop
push
sub
lret
out
pop
std
jbe
ret
ror
mov
lgs
mov
dec
cmp
icebp
lret
mov
xchg
aas
pop
xor
adc
inc
fildll
cmp
stos
mov
pop
jne
fdivs
fs
loope
xchg
mov
cmp
jno
scas
cmpsb
xchg
pusha
mov
jge
pop
movsl
cmpsb
cmc
push
xchg
xchg
push
add
push
jle
nop
sub
or
push
fwait
cld
dec
or
push
cmpb
dec
sbb
int3
mov
out
jmp
aam
sbb
mov
push
shrb
scas
imul
testb
movsl
push
imul
or
lret
jge
and
les
sbb
icebp
decb
adc
lret
call
aaa
sbb
mov
ret
cmp
jecxz
xchg
pop
jno
xchg
and
mov
jo
shr
mov
add
jno
mov
mov
push
lret
rclb
imull
rcrl
jle
sub
or
sbb
jl
enter
mov
cmpsb
outsb
popa
in
ret
je
fldenv
leave
xor
cmp
repz
fimuls
jecxz
movsb
sbb
hlt
jmp
push
fsubs
loop
jl
pusha
movsb
inc
pop
push
fists
sub
movsl
mov
jns
cmp
adc
and
pop
negl
mov
adc
pop
loop
das
mov
jp
lds
das
inc
in
pop
or
into
shll
stc
fimuls
mov
cmp
jge
fdivrs
sbb
xchg
push
movsb
mov
clc
or
pop
mov
std
sub
and
fiaddl
xchg
cld
ss
sbb
xchg
cmpsb
inc
xchg
push
rol
push
push
jmp
pop
sti
push
scas
sti
pop
ret
ss
cli
pop
ret
jl
mov
std
xchg
add
test
out
cmp
test
pop
lods
sub
out
addb
push
jl
xchg
lds
lahf
addr16
and
movb
push
pop
inc
adc
into
neg
push
xor
pop
mov
mov
leave
int
sub
push
push
gs
fistpll
cmpb
sub
xor
jbe
ret
ret
jg
leave
mov
mov
or
and
sbb
test
arpl
roll
repnz
test
push
mov
or
ss
push
add
stc
inc
imul
xchg
inc
jge
push
push
jle
shl
imul
rorb
jnp
jl
arpl
popa
int3
jmp
pop
ret
shl
jg
sbb
sub
shrl
pop
pusha
es
cmp
sbb
fstpl
pop
sarl
mov
loope
xlat
mov
iret
sub
cmp
xor
aam
inc
cmc
and
loopne
imul
cmpsb
cmp
jb
and
adc
jns,pn
clc
mov
imul
insb
jecxz
jb
mov
aad
dec
negl
orl
xor
cmp
aad
ljmp
fcompl
push
mov
push
in
shl
fmul
xchg
imul
hlt
xchg
adc
xor
test
add
hlt
pop
xchg
dec
lcall
into
push
sub
loop
ss
push
pop
test
xchg
fcomps
pslld
stc
mov
popf
filds
jno
insl
cmpsl
fnstsw
les
les
popa
scas
xchg
sub
out
pop
mov
xor
mov
adc
sub
push
cmp
icebp
mov
add
leave
cwtl
push
sbb
imulw
cmp
fcomps
dec
inc
jecxz
adc
xchg
mov
mov
xchg
std
sub
jns
out
insl
mov
dec
aaa
cmp
repnz
iret
nop
or
jns
ss
in
xor
sbb
fmulp
daa
push
shrl
mov
test
jne
sub
add
cmp
clc
mov
das
hlt
jno
je
adc
mov
jg
dec
push
mov
xchg
or
cmp
pop
lods
sub
cmpsl
add
iret
sbb
cmp
push
ret
outsb
jp
or
jb
js
bound
push
mov
lock
xor
aad
jo
in
sub
rclb
call
out
jb
push
mov
or
mov
pop
daa
imul
jg
imul
and
mov
dec
ret
xchg
inc
sbb
arpl
psubsw
pop
xchg
fs
test
ret
out
xorb
jg
test
shll
pop
pop
repz
mov
dec
xor
dec
sbb
adc
ror
add
push
rol
jg
popa
mov
dec
push
andb
mov
ljmp
std
ret
add
cmc
xchg
mov
aas
aam
mov
addl
popa
push
loopne
fwait
movsb
and
cmp
mov
sbb
or
in
xchg
repz
xor
xor
call
scas
xor
imul
xchg
setno
subb
push
cmp
mov
cs
iret
les
pop
push
aaa
cld
sbb
out
adc
jne
lahf
mov
test
or
enter
loopne
popf
mov
push
sbb
push
inc
out
mov
jp
in
sub
out
push
jae
jbe
shll
movsl
jl
push
xor
in
dec
lock
sbb
popf
scas
dec
in
dec
mov
shl
stos
jo
lods
adc
movsb
cmp
dec
je
loop
sar
stos
fimull
push
addl
pop
pop
scas
mov
mov
inc
adc
jns
int
xchg
mov
jmp
dec
negl
test
out
arpl
scas
test
fdiv
add
add
enter
fildl
inc
outsl
movsb
ss
pop
push
sub
push
rorl
sub
push
mov
xor
adc
or
sahf
repnz
inc
imul
mov
lcall
in
pop
sub
mov
notb
inc
cltd
lea
loope
xor
jecxz
sub
test
push
and
rcrl
or
pop
mov
movsb
mov
clc
inc
mov
pop
add
inc
insb
mov
movb
push
sub
xchg
cmp
pop
xchg
jns
in
arpl
cwtl
cmp
and
xchg
aaa
push
imul
outsb
mov
mov
or
lods
imul
adc
shr
call
push
sub
jns
mov
or
xor
fists
movsb
mov
call
push
adc
cmp
and
mov
adc
push
jle
xor
mov
jecxz
inc
pop
sahf
stos
psrld
sub
nop
xor
add
cld
mov
icebp
jecxz
out
mov
je
sbb
xor
insl
and
sbb
popa
mov
cli
enter
int3
inc
loope
xor
and
mov
stc
outsl
adc
sbb
jbe
mov
cmpsl
mov
imul
pop
mov
scas
je
dec
xor
add
bswap
xor
push
adc
sti
push
arpl
into
lock
lock
cmp
out
inc
pop
movsb
out
fisubl
arpl
push
mov
inc
push
addr16
cli
stc
dec
jle
frstor
sub
outsl
in
sbb
mov
test
add
int
sahf
cmpsl
sub
rcrb
jae
mov
mov
addb
ss
std
insb
jge
xchg
cmp
ss
mov
xchg
mov
mov
call
sub
js
add
cld
cld
dec
cltd
cli
mov
andl
add
mov
shl
div
lret
cmp
loopne
sub
fldl
cmp
add
movsl
add
push
dec
xchg
pop
ja
mov
jae
jle
jae
mov
dec
and
sub
in
add
jl
push
push
out
xor
fisubrl
roll
sub
cmp
orb
cmc
mov
mov
sbb
fs
fucomip
lret
test
sub
mov
rorl
lods
xchg
int
jo
negl
mov
rorb
jnp
or
lds
jae
neg
fistpl
movsb
or
add
jae
pop
js
loop
xchg
jge
mov
jb
jbe
mov
in
xor
adc
outsb
dec
cs
adc
jecxz
sarb
or
pop
mov
sbb
adc
xor
int3
xchg
pop
out
jmp
sub
mov
shll
out
scas
call
fwait
pop
dec
lods
sub
jg
jno
out
fsubl
add
adc
add
xchg
hlt
mov
add
push
stc
mov
push
jecxz
adc
xor
xchg
lods
or
lea
icebp
adcl
fstpt
js
xchg
mov
clc
enter
mov
add
sti
add
cli
inc
mov
popf
arpl
outsl
cmc
xchg
inc
cmp
call
mov
mov
mov
mov
sbb
jnp
mov
sbb
fmulp
popf
imulb
adc
test
add
push
sar
mov
xchg
push
fistps
add
and
in
stos
lods
call
dec
cwtl
lcall
fldt
dec
lea
cmp
lea
test
push
lock
dec
adc
sti
jo,pn
cmp
lret
or
inc
sub
mov
movsb
repnz
cs
jo
xor
or
mov
loop
jb
insb
cmp
push
loop
mov
imul
ss
fcoms
frndint
insb
mov
call
pop
xor
scas
fnstsw
sbb
imul
stos
leave
cltd
hlt
pop
pop
sub
adcb
insl
in
xchg
incl
call
xchg
push
insl
cmpsb
add
pop
jmp
sarb
lret
loope
div
movsl
sbb
outsb
sub
adc
ljmp
jge
adcl
push
test
test
push
dec
cmpsl
cli
mov
mov
xchg
adc
sub
push
faddl
repz
daa
mov
fisubrs
lock
gs
xchg
rcl
jb
out
and
lds
or
xchg
fcomps
dec
inc
add
mov
jno
jecxz
iret
pop
pop
pop
insb
lcall
sti
loope
add
dec
push
hlt
loope
cli
sbb
and
adc
adc
cltd
push
into
sub
std
and
adc
mov
sbb
and
rclb
aaa
sub
xor
dec
sbb
js
pop
sbb
orl
pop
and
dec
test
fdivrs
lret
fiaddl
loopne
cli
jno
inc
push
mov
mov
cltd
int
xor
sub
repz
xchg
imull
push
ja
lock
shll
and
movsl
movsl
mov
inc
arpl
add
and
cmc
fimull
scas
call
push
xlat
mov
push
mov
adc
or
push
cmp
sbb
movsb
sub
scas
mov
out
mov
jbe
add
shrb
mov
push
push
test
repz
subb
lcall
mov
pop
pushf
mov
addr16
ret
prefetch
xor
lret
mov
dec
mov
imul
mov
push
aam
push
stos
mov
pop
xor
add
add
push
cmc
sub
je
dec
add
cmp
je
mov
fimuls
jb
jo
xchg
jo
xlat
inc
cmp
loop
xor
arpl
ja
insb
jb
mov
in
push
sarl
add
cwtl
and
push
es
pop
aad
sti
sti
jmp
jmp
jl
mov
inc
sub
push
inc
inc
pusha
loope
adc
inc
rolb
jnp
test
push
xchg
jnp
es
scas
mov
pop
mov
mov
and
cmp
jns
aad
xchg
in
rorl
xor
and
lahf
popa
and
jp
push
xchg
mov
add
imul
shl
cmc
jl
adc
add
sarl
and
xchg
repz
inc
sub
xor
mov
jmp
jb
test
movsb
leave
ss
lahf
adc
dec
lods
inc
jo
mov
ss
scas
lods
fwait
std
imull
sbb
rcl
daa
add
inc
jo
add
insl
adc
cmp
adc
int3
mov
cld
stos
lock
sahf
lea
aaa
lret
xchg
aam
lcall
mov
lods
xchg
adc
imul
inc
jo
mov
mov
push
jp
nop
inc
push
xor
or
out
xor
nop
adc
movl
mov
ret
and
pusha
es
cmpsl
orb
cmp
scas
sarb
jo
adc
cli
xchg
and
dec
fisubrl
lret
andb
mov
test
push
repnz
mov
xchg
and
mov
or
leave
leave
movsb
dec
push
pop
iret
mov
cld
insl
pop
and
sbb
jmp
movsb
cmp
out
stos
sbb
icebp
push
test
insb
mov
fistpll
lcall
sbb
fldl
call
imul
les
jge
addr16
aaa
ret
test
aas
jnp
jl
insb
rorl
xchg
pop
test
adcb
vpxor
sub
lret
icebp
lods
popa
lahf
out
enter
pusha
repnz
push
stc
ret
mov
fmuls
jbe
dec
xchg
je
add
and
cmpsl
add
cltd
xchg
out
mov
xor
in
adc
sub
loope
sbb
sub
dec
bound
cmp
dec
inc
lahf
jg
cwtl
xchg
mov
and
or
jnp
sbb
push
repz
fwait
std
data16
inc
sub
cmp
test
fs
stc
mov
xchg
or
test
cmp
stc
xchg
push
mov
aaa
inc
fcoms
pop
and
gs
test
loopne
push
lret
cmp
xchg
int
mov
push
aas
mov
mov
dec
add
sub
inc
or
fiaddl
mov
lods
add
insb
inc
mov
mov
fists
jb
mov
jo,pn
sbb
jb
jp
add
jne
fmull
sbb
jo
gs
repz
xor
pop
aas
mov
rorb
loop
lahf
bound
push
cltd
in
add
sub
adc
jecxz
sbb
mov
movsb
aas
cmp
push
xchg
sub
decl
jl
mov
insb
inc
nop
sub
cmpsl
daa
sub
insb
out
dec
push
xor
jle
fcomps
xor
xchg
rcr
stos
int3
push
pop
sbb
sbb
add
pop
popf
or
scas
insl
ljmp
lock
pop
mov
dec
sub
push
stos
and
insl
or
js
cmpl
push
mov
push
xchg
mov
out
sub
aaa
mov
mov
loope
lock
jo
jl
or
outsb
pop
jno
inc
jmp
pop
fbld
and
and
sbb
repnz
mov
imul
mov
jne
ror
ret
sahf
and
or
jp
leave
int3
xchg
sub
push
mov
cmp
hlt
and
xlat
das
mov
jns
enter
xchg
dec
pop
inc
pop
jge
sti
inc
sbb
mov
ja
sbb
dec
mov
cmp
mov
or
inc
pop
mov
insl
cmp
fdiv
mov
sbb
push
imul
hlt
mov
lds
mov
sub
jmp
sub
imul
push
adc
push
aas
insl
insl
outsb
rclb
xchg
mov
leave
jmp
mov
xchg
mov
mov
push
je
loopne
sbb
fisttpl
pushf
sub
enter
int3
add
mov
ret
cmp
stos
ficomps
and
sarb
adc
ds
mov
ljmp
adc
or
gs
jecxz
xor
outsb
call
or
mov
dec
jb
jbe
inc
add
dec
xor
sar
pop
mov
dec
jl
fnstcw
dec
out
inc
popf
xchg
test
sub
test
push
xchg
mov
leave
mov
imul
and
sahf
pop
stc
inc
mov
jae
dec
adcb
push
mov
cs
push
push
jb
push
cmc
xor
rcrb
xor
mov
bound
push
fadds
popa
inc
lret
or
fwait
fildll
loopne
rorl
xchg
or
or
mov
enter
popf
sbb
data16
xorb
cltd
test
clc
ret
into
in
inc
stos
popl
jmp
inc
cmp
ds
adc
int
sbb
xor
add
stc
mov
scas
scas
dec
outsb
rolb
ja
faddl
mov
add
mov
sbb
mov
pop
or
int
aaa
jae
sahf
push
shl
xor
call
inc
mov
inc
call
rorb
mov
lcall
icebp
data16
in
roll
or
dec
bound
ja
int3
arpl
push
lcall
xlat
test
add
jle
mov
ret
cs
mov
addl
rclb
jb
sbb
leave
and
lock
adc
aaa
mov
push
outsb
out
loope
into
and
mov
jb
aaa
mov
imul
stc
mov
mov
pop
or
mov
pop
jle
movsl
mov
rolb
adc
imul
cmp
cld
sti
or
ficomps
stc
cwtl
sbb
sbbb
mov
sbb
add
mov
sub
add
shlb
gs
xor
enter
gs
cmp
mov
into
and
ja
push
sbb
fwait
in
xchg
leave
jae
xchg
test
out
arpl
clc
out
rcrl
push
lds
lods
xchg
push
lods
fidivrl
pop
xchg
pop
and
mov
scas
repz
dec
and
and
adc
mov
aaa
jmp
and
xlat
mov
insl
mov
aas
je
jbe
loopne
pop
xor
repz
js
je
push
daa
jl
add
inc
sbb
lcall
inc
cmpsb
mov
vphsubdq
in
push
add
push
xor
add
loopne
push
aam
test
fcom
push
add
pop
lret
insl
lahf
hlt
dec
lea
out
gs
mov
push
xchg
or
push
cmp
mov
enter
cs
je
dec
cmp
xchg
or
sub
mov
fsubrl
and
bnd
scas
icebp
fistpll
ss
cmp
dec
pop
scas
jbe
dec
mov
fnstsw
jb
fwait
push
daa
ds
aam
daa
xor
rol
shll
stc
mov
jle
stos
pop
test
pop
jae
mov
jg
pop
push
dec
sbb
ljmp
fstp
test
push
cmp
sbb
out
es
pop
into
jp
dec
lret
test
pop
ss
sahf
inc
inc
cmp
pop
test
jmp
cmp
dec
xchg
cmpsb
push
and
repz
mov
push
movsl
jmp
xor
out
mov
mov
mov
adc
insl
int
ret
xchg
xor
pop
sub
xor
ret
pop
sub
mov
rorb
fidivl
or
shrl
andl
fdivl
cmp
fisubrl
out
inc
pop
fbstp
mov
push
arpl
insl
icebp
je
rolb
pop
or
xor
scas
jb
xchg
mov
bound
inc
add
imul
out
pop
mov
jo
and
push
adc
push
lret
faddp
xchg
addr16
sti
dec
shlb
ficoms
or
in
setg
and
and
xor
cmp
pop
sbb
lds
dec
lahf
fldl
roll
sbb
lret
adc
push
addb
mov
mulb
outsb
lods
test
jl
jns,pn
mov
lea
mov
push
xlat
xchg
ds
jl
iret
aas
mov
arpl
std
adcl
dec
inc
testb
mov
dec
mov
in
sbb
add
icebp
movsl
pop
or
loop
arpl
mov
pop
add
jo
scas
fisubl
dec
xcrypt-ctr
cmpsl
sbb
shlb
cltd
loopne
clc
data16
inc
push
and
adcl
out
xchg
xorb
mov
mov
fidivs
daa
mov
jecxz
add
mov
lret
sub
jmp
imul
aam
cmp
sub
and
pop
out
clc
add
or
push
push
ds
cmp
fincstp
pop
sub
rorl
dec
lods
push
addb
cmp
scas
adc
sti
mov
add
test
jo
sbb
test
sub
jecxz
lret
fpatan
fstpt
cld
xchg
lods
cld
pushf
lock
xchg
inc
lret
lret
pop
vmovaps
cwtl
shll
dec
aam
sbb
inc
dec
pop
fsts
loop
pop
mov
dec
leave
jns
inc
mov
mov
loopne
fs
mov
sub
mov
bound
push
push
ja
cmp
scas
scas
mov
xlat
mov
inc
pop
sub
loop
cmp
das
lods
cmpsb
mov
cmp
pop
pop
dec
adc
ljmp
outsl
add
mov
adc
xchg
arpl
enter
adc
ffreep
dec
adc
shrl
or
sbb
xlat
fcomi
mov
pop
les
push
outsb
and
popf
dec
sub
or
jl
mov
test
ret
aam
jnp
sub
and
repz
out
loopne
aam
iret
js
cmp
mov
das
jnp
jle
imul
in
cmp
sahf
cmp
rclb
or
cli
or
or
sbb
cmp
add
cli
test
and
loop
xchg
sbb
dec
dec
or
push
add
and
mov
jp
out
jb
inc
inc
mov
daa
shll
movsb
adc
movsb
out
push
out
sub
sbb
xchg
fsubrs
iret
or
fidivrs
ss
subl
cmpsl
jl
sub
insl
mov
lods
fmulp
cli
mov
ret
mov
pop
int3
mov
or
jecxz
lods
mov
xor
mov
loopne
sti
aas
mov
lea
cmp
inc
inc
test
push
mov
pop
lock
fildll
scas
movsb
jno
cmp
mov
enter
cwtl
inc
jo
xchg
or
inc
rolb
lds
push
xor
pop
lahf
aaa
int
push
jp
xchg
lcall
mov
repnz
jle
out
ljmp
pop
fbstp
sub
mov
sub
das
idiv
pop
pop
push
jmpw
test
decl
mov
pop
stos
imull
int3
sub
lahf
fwait
jge
push
in
outsb
lock
fildl
sub
loop
lods
inc
fwait
sbb
pop
mov
jo
xchg
mov
xor
scas
aam
lds
mov
out
inc
in
cmpsl
pushf
movsb
cmp
test
fsubrs
stos
roll
int
stos
xchg
sub
mov
xor
out
sbb
adc
jns
inc
test
xor
or
mov
inc
xor
xor
jmp
jne
idivl
mov
shr
push
inc
xchg
stos
fiadds
and
ljmp
inc
and
inc
arpl
and
insl
lea
hlt
dec
insl
shrb
push
repnz
es
add
xor
or
and
mov
jg
ja
cmp
pop
mov
mov
leave
fisubrs
notl
dec
repz
rolb
shrl
and
test
stc
out
push
jno
xchg
inc
fdivrs
inc
adc
xlat
mov
dec
push
icebp
sub
or
lds
lods
jns
lahf
push
inc
adc
push
xchg
mov
mov
leave
sub
adc
in
dec
xor
push
jp
dec
mov
out
xor
push
in
call
push
mov
add
pushf
xchg
or
and
dec
das
cs
push
dec
adc
mov
mov
and
shll
and
fnsave
xchg
mov
xor
in
and
adc
mov
iret
ret
xchg
cmp
add
xor
stos
xchg
cmp
adc
mov
pop
inc
enter
jnp
mov
and
jle
pop
lods
pop
dec
sub
fists
out
mov
cmc
xchg
sub
lods
inc
xor
jmp
inc
ss
in
dec
cmpsb
mov
clc
mov
push
testb
std
imul
ja
loop
sub
push
loope
out
mov
cmpsl
sbb
mov
pop
fildll
mov
or
pop
cmpsb
aaa
or
mov
mov
cmpsb
into
mov
jns
cmp
sbb
mov
mov
je
add
sub
jno
fisubl
roll
mov
fiaddl
xchg
insb
mov
rolb
or
seta
jg
inc
outsb
mov
stc
push
push
aaa
std
or
shlb
popf
lods
js
jbe
lcall
out
adc
or
jp
add
push
nop
push
sub
outsb
das
push
int
sbb
roll
or
xchg
ret
pop
fadd
lock
adc
jge
aam
and
push
cmp
les
in
in
mov
and
xchg
mov
loope
movsl
jg
aaa
push
aas
mov
sub
mov
pop
mov
pop
stos
hlt
fwait
jns,pn
or
add
mov
mov
cli
pop
add
add
mov
vpmadcswd
cld
and
xor
out
jl
jecxz
adc
mulb
decb
in
arpl
push
jmp
adc
cld
repnz
push
jg
rolb
jns
cmp
cli
jbe
addr16
xor
cmp
pop
xchg
and
inc
outsb
or
push
pop
andl
sbb
insb
out
push
js
mov
fcoms
sub
cld
fisubrl
mov
hlt
loop
int
push
inc
mov
hlt
sbb
popa
and
shl
shll
out
mov
je
xor
or
lcall
adc
stos
orb
or
jge
ret
pop
nop
push
xorb
les
cmpb
add
imul
aam
xor
sbb
mov
jmp
adc
stos
xchg
movsl
gs
dec
stos
test
cmp
stos
xchg
addr16
xor
das
mov
or
push
and
or
int
jne
mov
repz
pop
testb
std
dec
push
sbb
xchg
sti
lods
jns
fcompl
push
jecxz
cmp
insl
je
fimuls
int
aad
mov
daa
pop
sub
sub
jo
clc
cmp
mov
adc
pop
les
sbb
or
pusha
pop
sub
jg
xchg
aaa
xor
imul
dec
push
add
mov
jbe
pop
xchg
rcll
dec
cmp
sbb
lock
inc
movsl
mov
jg
rclb
pop
test
push
popf
ljmp
rcrl
jg
shlb
lock
push
clc
mov
enter
pop
add
push
fldl
xchg
add
cmp
xchg
jg
and
xchg
scas
cmp
shrb
mov
add
popf
mov
sub
pop
adc
lcall
add
mov
adc
lcall
mov
push
fsub
and
outsl
dec
adc
mov
int3
ficoms
mov
xchg
mov
and
mov
sub
popf
mov
mov
push
and
pop
cmp
movsb
rol
ljmp
xchg
fs
pop
and
outsl
popa
sub
and
repz
dec
mov
dec
cmovnp
js
pop
mov
mov
stc
xlat
pop
orb
inc
div
arpl
ljmp
adc
lods
push
call
sbb
sub
add
mov
outsb
pop
test
ds
lock
sbb
push
xchg
push
imul
adc
ret
js
jge
adc
jb
test
lret
jecxz
ljmp
jo
mov
shl
xlat
xor
sbb
xchg
xchg
call
xor
js
hlt
negl
jbe
ret
and
xchg
imul
mov
pop
and
sub
popa
ss
xchg
loop
mov
push
and
mov
aad
fldl
int3
push
mov
lret
pop
mov
pop
sub
inc
xchg
dec
cmp
jmp
jnp
std
int3
cmp
cmp
push
lahf
xchg
sbb
negl
jns
insl
add
dec
sbbl
adc
test
jecxz
xchg
mov
xchg
out
inc
add
fdivs
negl
push
sub
cmp
add
xor
pop
loop
or
push
xor
or
aas
roll
loopne
std
xchg
int
pop
add
testl
les
cmp
adc
fisttps
pop
outsb
lret
mov
lds
cmp
jle
jb
cli
sbb
xchg
lds
call
gs
cmp
cmp
adc
mov
insb
popf
scas
or
push
pop
sub
pop
aas
xchg
sbb
mov
adc
pop
and
aas
jecxz
fldcw
ret
push
xchg
sub
cmp
je
cmp
fldl
lret
adcl
jmp
add
pop
xor
add
outsb
mov
fidivs
xor
rcrb
pop
inc
sbb
inc
xchg
rorl
sbb
dec
lcall
lds
push
jle
frstor
rcrb
jge
cld
bound
std
movsl
adc
mov
in
cli
aam
mov
mov
inc
inc
clc
out
in
inc
or
mov
ljmp
cmp
sti
xchg
hlt
popw
push
mov
repz
mov
aas
push
dec
in
dec
xor
dec
repz
push
faddl
out
sbb
push
pop
data16
mov
mov
mov
xchg
add
cmp
shll
mov
cld
mov
int3
sbb
inc
and
pop
mov
popf
icebp
pop
dec
inc
cmp
sbb
in
subb
int
pop
and
aaa
add
pop
mov
push
pop
mov
pop
push
jnp
pop
lds
push
aam
leave
push
push
push
dec
cli
cmpsb
ds
cmpsb
pop
scas
jnp
mov
mov
sbb
cmp
push
insl
jns
or
push
mov
insl
xor
sbb
movsb
cmpsb
push
mov
sbb
dec
cld
jp
lcall
shrl
mov
cmp
sbb
mov
xchg
dec
sbb
out
dec
push
mov
ljmp
jns
push
ja
cmp
sub
movsb
add
repnz
add
dec
mov
insb
xor
pop
push
stos
pop
into
retw
or
cmpl
xor
out
jnp
ljmp
xchg
xchg
jno
in
cmpsb
imul
fldt
xchg
mov
xor
and
adc
sahf
adc
jp
in
iret
xchg
cld
inc
fldcw
out
ror
add
jl
or
or
inc
mov
sub
xor
sbbl
loopne
cmp
cmp
rorb
aam
outsb
add
int3
ficomps
rcr
jmp
xor
rorb
stos
pop
fcompl
test
lods
pushf
out
mov
dec
xor
adc
movsl
lods
dec
xorb
testl
nop
test
clc
mov
dec
ss
daa
int
out
out
sub
xor
hlt
dec
push
push
lea
xchg
dec
xchg
add
cli
fists
daa
mov
ficoms
clc
pop
jno
daa
sbb
cmp
and
jp
xlat
nop
stc
testl
mov
jl
add
scas
imul
mov
sbb
mov
dec
outsl
outsb
popf
jl
mov
rclb
in
mov
sub
mov
daa
fcompl
push
fwait
out
das
stos
insb
or
dec
push
into
out
xor
orb
jmp
mov
sbb
dec
sub
adc
enter
dec
jb
jmp
mov
insb
gs
jmp
imul
inc
pop
sub
dec
in
adc
mov
add
out
xor
xchg
push
js
xor
adc
inc
aad
out
or
sub
mov
push
int
shrb
hlt
in
fists
clc
les
outsl
loopne
pushf
lds
loop
cltd
das
js
or
xchg
fwait
push
cmc
xchg
loope
leave
movsl
popf
push
sti
subb
add
pop
pop
jecxz
and
dec
xchg
scas
cltd
ds
daa
jbe
incb
sbb
dec
fldl
add
shr
jl
fisttpl
out
arpl
mov
push
xchg
jmp
dec
dec
add
lahf
out
sbb
jae
mov
cmpsb
js
mov
add
and
mov
push
or
lods
mov
sub
add
test
xchg
jp
jnp
aas
enter
mov
aam
popf
mov
mov
fmuls
push
fildl
fidivl
cmp
lea
fcoms
and
push
inc
or
subb
rclb
lds
je
dec
push
adc
add
mov
enter
ss
enter
repnz
ud0
movd
or
sbb
xchg
ja
fwait
lahf
xor
fs
clc
mov
sti
in
ljmp
xchg
aam
adc
ret
dec
adc
jle
insl
xchg
cmp
xchg
adc
and
add
ljmp
mov
mov
and
cs
mov
shrl
mov
xchg
cli
les
inc
addr16
cmp
and
orl
movsl
and
gs
iret
movsb
mov
in
es
out
mov
push
dec
in
or
dec
adc
test
dec
cltd
daa
loope
push
adc
stos
or
imul
pop
sub
ss
repnz
cld
es
cmc
sbb
push
jbe
jne
cwtl
cmp
leave
add
mov
gs
mov
sbb
mov
push
cmp
aam
loope
out
shr
mov
enter
mov
jae
imul
into
lods
xor
mov
inc
sarw
ja
aaa
cmp
fisttpl
adc
adc
dec
and
cltd
jbe
dec
xchg
fldl
push
ret
repnz
pslld
mov
cmp
push
add
add
add
in
in
mov
jo
out
and
fcomps
push
and
adc
clc
sub
adc
shlb
mov
jo
test
sbb
sub
clc
dec
xchg
add
cmpsb
je
jo
xchg
jecxz
ds
xchg
sbb
fsubr
xor
xchg
scas
xchg
insl
pop
lret
dec
xor
dec
aas
loopne
loop
mov
xchg
push
ds
sahf
rep
jp
outsb
ficoms
cltd
cmp
enter
fwait
fwait
mov
sbb
lock
sub
es
pop
shlb
xabort
jle
aaa
subb
cmp
mov
sahf
dec
aas
popa
xor
xor
aad
sbb
ljmp
push
sti
adc
lret
mov
xchg
mov
sub
mov
or
pop
jle
ret
insl
or
cs
push
lods
cmp
mov
mov
sbb
jae
test
fwait
pop
inc
mov
rcrl
insb
dec
sbb
xchg
mov
test
or
mov
into
mov
push
and
push
cwtl
add
mov
inc
pop
pushf
add
or
lds
jo
jnp
fwait
pop
gs
push
jne
pop
sub
imul
int
in
pushf
xchg
in
aad
sbb
nop
lds
daa
int
sbb
and
xchg
sub
mov
xchg
sti
cmpsl
in
push
xchg
daa
sub
imul
imul
push
add
mov
xchg
mov
xor
push
jecxz
add
mov
adcl
mov
cltd
lods
daa
cmpsb
add
cmpsl
xchg
lret
mov
dec
pop
imul
enter
cli
js
mov
out
insb
jmp
cmpsb
ret
jns
out
ret
test
cmp
and
outsl
dec
inc
cmp
sbb
aas
dec
cmp
test
lahf
push
mov
cmpsl
lock
xor
cmp
mov
int3
pop
dec
mov
shlb
push
test
inc
or
xor
xchg
lods
push
mov
std
cli
call
xchg
push
mov
js
inc
in
rcrl
std
ljmp
pop
jmp
fwait
outsl
arpl
sbb
icebp
push
pop
push
cmovge
push
dec
ds
add
stc
icebp
push
dec
aas
ljmp
fisttpl
adc
je
clc
imul
iret
mov
push
sti
fs
cmp
test
sub
rorb
xchg
adc
adc
cmpsl
movsb
sub
fcompl
movsl
insb
test
enter
mov
jne
cmp
xor
fldl
cmc
pop
jbe
cs
sbbl
pop
jne
xchg
jnp
push
and
sub
jge
pusha
imul
test
jns
push
sub
ret
test
and
icebp
inc
sub
sub
cs
lret
sub
out
loop
ds
jl
faddl
or
cs
lret
inc
insl
ja
dec
out
enter
jp
pusha
and
adc
fidivs
dec
lcall
mov
mov
and
repnz
adc
xor
outsb
pop
mov
or
xlat
out
cmpsb
leave
xor
and
cmpsb
pop
idivl
leave
sbb
jne
or
test
mov
ljmp
mov
insl
cmpsl
out
in
xchg
pushf
cld
xchg
push
cmp
and
fcmovne
mov
in
xchg
sub
mov
ljmp
sbb
mov
lahf
sar
sahf
push
dec
inc
inc
fdivl
add
rcrb
jbe
fadds
arpl
xor
xchg
mov
je
test
xor
xchg
push
push
negl
xor
fucomp
and
or
inc
fs
call
or
popa
pop
fs
call
xlat
cmpsl
xorb
sbb
add
add
push
orl
sbbb
push
fs
add
mov
sarb
fldenv
inc
cmc
pop
imul
int
loope
push
movsb
pop
or
adc
pop
dec
repz
cmpsl
add
in
xor
mov
pusha
decb
cs
mov
insb
in
xor
inc
mov
add
jecxz
fbstp
mov
lret
mov
movsl
mov
jo
pusha
fldt
fmulp
cmpsl
xchg
or
call
sub
push
je
xchg
lea
test
xchg
imul
enter
pop
rorb
test
mov
dec
push
decb
jle
jle
int3
add
mov
ret
imul
je
mov
ljmp
fs
inc
dec
and
lods
into
fimull
and
cld
mov
jb
or
mov
mov
push
add
jne
or
fldt
lret
insl
fwait
out
dec
xchg
mov
jae
testb
ljmp
aad
sub
pop
jmp
xchg
or
push
adc
stos
pop
pop
pop
mov
xchg
out
push
aad
movsb
xchg
cwtl
sbb
fnstsw
sub
inc
xor
jmp
and
lahf
adc
mov
out
jp
push
jno
fmulp
pop
lahf
out
repz
push
cmpsl
sub
sub
loope
push
jp
dec
pop
and
add
fnsave
lock
adc
aas
add
adc
mov
sahf
std
and
loopne
in
cmpsl
xor
popf
dec
mov
adcl
sub
mov
jecxz
push
mov
call
pop
int3
sbb
jno
dec
into
insl
jno
lods
xchg
jmp
push
xor
loope
sbb
sub
xor
cmc
mov
xchg
int
mov
mov
dec
fiadds
sbb
xlat
cmp
xchg
push
call
or
fsubrl
sbb
or
daa
int
jae
xchg
outsb
outsb
cmpb
daa
imul
movsb
cli
pop
inc
repz
adc
.byte
.byte
xchg
iret
