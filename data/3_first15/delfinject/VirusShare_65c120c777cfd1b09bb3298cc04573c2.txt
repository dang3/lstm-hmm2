dec
inc
cwtl
push
add
adc
shll
adc
sub
jmp
push
xorb
movsb
sbb
and
sub
xchg
pop
ret
dec
cmc
mov
jge
aas
fnsave
and
jl
adc
testb
mov
aam
mov
jae
call
adc
fs
adc
or
inc
xor
dec
js
or
repz
fsubr
xchg
inc
in
adc
and
outsl
aas
sub
lds
xor
ret
pop
push
sub
or
xor
mov
insl
or
inc
fidivrl
inc
imul
nop
sub
adc
push
jns
in
iret
sub
aaa
dec
sbb
jno
inc
jo
xor
pop
sub
inc
sbb
mov
or
push
cmpb
push
sti
or
cmp
test
sbbl
xchg
pop
adc
int3
push
mov
pop
mov
test
adc
or
mov
pop
adc
inc
push
or
and
pop
inc
popf
mov
inc
mov
lods
jp
and
icebp
pop
inc
mov
lods
jmp
and
cmc
imul
and
cmpsl
push
dec
lds
adc
mov
loope
dec
adc
xor
nop
addb
movsb
sbb
or
fidivl
into
out
adc
les
sub
loop
imul
insb
push
ret
fdivs
test
mov
inc
push
jo
nop
fcmovbe
adc
int
adc
shll
add
inc
mov
xor
nop
pop
repz
mov
aaa
and
pop
iret
pop
sub
test
rolb
adc
xor
xchg
push
cld
inc
das
pop
loope
lret
test
mov
cmp
add
rcrb
das
xchg
sar
and
sub
sti
pusha
fisttps
mov
push
mov
add
mov
xorb
pop
stos
xor
xor
jle
sub
les
test
cmp
inc
popa
es
data16
add
adc
and
jp
mov
fbstp
call
loopne
sub
push
stos
lret
fwait
mov
mov
xchg
shlb
daa
and
ja
fldcw
int
adc
push
dec
or
jecxz
or
aas
inc
test
xor
loop
jns
orl
test
daa
or
push
dec
push
sbbl
jmp
cmp
push
adcb
mov
add
out
inc
jecxz
lods
push
add
jp
fldenv
adc
in
mov
nop
loop
xor
mov
bound
or
shll
in
and
loopne
ja
pop
xor
insb
nop
subb
push
orb
inc
xchg
xchg
mov
scas
push
notl
mov
cmp
rolb
push
push
and
loope
mov
cltd
mov
sbb
push
adc
mov
cs
fs
mov
les
add
sub
add
inc
aas
cmc
xchg
test
xor
xor
sarb
cltd
movsb
dec
mov
ret
movsl
out
and
jecxz
les
dec
gs
shrb
pusha
pushf
or
push
leave
push
fimull
js
into
and
push
inc
jecxz
gs
adc
sbb
mov
cmp
sbb
mov
push
cmp
inc
xlat
das
ret
mov
repnz
mov
and
xchg
pop
push
aas
jnp
cmpsl
or
dec
pop
mov
rcrl
addr16
jns
divl
cmp
or
in
add
addl
and
sbb
loop
sbb
mov
add
dec
push
sub
aam
dec
xchg
inc
in
stos
add
insl
stos
mov
mov
mov
sub
mov
adc
cmp
push
xor
mov
movsl
sti
cmp
shll
push
lret
leave
and
cmp
lret
call
movaps
icebp
xlat
outsb
pop
or
sbb
sub
call
pop
add
pusha
fcoms
add
mov
call
scas
pop
adcb
out
in
in
or
mov
sbb
push
xor
cmpb
sti
into
mov
jmp
scas
loope
fxch
add
inc
shlb
inc
pop
mov
xchg
cmp
bound
add
adc
arpl
push
lods
xchg
and
out
lds
shrl
inc
lds
dec
rorb
mov
outsb
cmp
pop
mov
mov
dec
test
arpl
and
ror
jo
data16
cmp
xor
out
std
adc
sub
imul
sbbb
int
repnz
xor
push
dec
jecxz
inc
jo
pcmpeqd
push
inc
int
xor
pop
js
pop
sbb
std
lock
mov
and
ret
xor
mov
insl
test
xor
int3
jp
sub
setne
out
cltd
lcall
mov
out
lret
mov
daa
push
xchg
mov
sub
jmp
pushf
pop
outsl
popf
pop
xlat
mov
mov
push
mov
mov
sub
push
xchg
movsb
mov
xchg
and
dec
add
add
or
push
dec
mov
lret
pop
adc
jo
fwait
mov
bswap
add
dec
sub
push
push
insl
pop
dec
pop
mov
icebp
test
or
aas
loop
fwait
xchg
in
pop
cmp
cwtl
or
jno
inc
out
inc
test
rolb
int3
andl
hlt
rcrb
pop
aam
inc
insb
or
nop
arpl
test
pop
mov
jb
rol
nop
das
inc
pusha
repnz
test
adc
pop
sbb
or
mov
adc
pop
xchg
add
lds
mov
or
and
test
inc
push
push
ds
or
inc
pop
push
and
and
pop
or
dec
xabort
mov
pushf
adc
and
dec
push
adc
cmp
mov
repnz
fiadds
push
sbbl
lock
inc
or
mov
jge
mov
inc
aam
aaa
pushl
xchg
rorb
push
in
pop
imul
outsb
add
or
jb
movzwl
inc
hlt
xchg
pusha
dec
mov
or
jno
fbld
std
cmc
jecxz
mov
adc
aas
cli
cmpb
push
xor
test
inc
inc
push
jecxz
pop
nop
or
sahf
es
pop
es
lcall
loop
jp
dec
xchg
popf
shlb
pushf
insb
lods
jo
push
cmp
mov
push
inc
adc
xorb
jecxz
sub
dec
mov
dec
dec
int3
jo
sbb
xor
xchg
jmp
outsl
addb
call
das
pop
popl
in
je
mov
sar
movsl
push
or
dec
push
push
hlt
inc
xchg
mov
mull
or
mov
sbb
popa
iret
adc
sub
and
adc
pop
and
roll
mov
lods
xor
xor
add
loop
nop
fstps
xchg
in
shl
movl
push
inc
fadds
test
xchg
mov
and
push
inc
xchg
je
sbb
filds
adc
or
add
adc
mov
pop
lods
adcb
arpl
inc
inc
in
pop
mov
jb
loop
adc
bound
inc
loopne
push
lods
pop
mov
xor
add
dec
add
jl
loop
xchg
aas
push
push
xchg
sub
adc
ljmp
in
test
inc
xor
addr16
dec
fdivrp
mov
adc
cmp
cltd
mov
fldcw
jl
mov
inc
jo
bound
lods
mov
imul
lods
mov
lods
pushf
aad
push
insl
std
das
adc
pop
pop
shll
adc
fstps
push
inc
dec
rcrb
push
jge
nop
rolb
xor
sbb
mov
sub
dec
add
repz
push
adc
je
or
push
jns
jo
cli
shr
push
inc
das
push
adc
dec
jmp
push
add
push
lock
jae
push
adc
pop
bound
pushf
jge
mov
pop
adcl
imul
sub
adc
push
aad
mov
repnz
and
movsb
dec
sbb
out
and
cmpsl
pop
inc
fcomi
popa
mov
jo
jecxz
arpl
mov
scas
ss
pop
mov
movsl
bound
jmp
xchg
test
cmp
jp
out
xchg
push
cwtl
test
dec
insl
mov
jb
mov
cmpl
aaa
jns
mov
push
sub
sub
and
movsl
jg
into
lds
xchg
sub
push
push
xor
mov
dec
aad
sbb
fadds
push
ljmp
add
imul
mov
ret
call
fwait
inc
ret
out
push
adc
jmp
xor
push
repz
out
push
sub
jo
nop
and
cmp
adc
xor
jb
add
loop
je
push
mov
fdivp
rorb
and
or
test
adc
adc
popa
sbb
in
xor
hlt
mov
popf
xchg
inc
push
sub
fstps
ja
and
adc
xchg
adc
adc
inc
pop
rorb
rcrb
mov
or
lds
sub
pop
call
fbld
xchg
xchg
orb
out
fldcw
xor
les
and
fildl
shl
jb
push
or
roll
les
xor
jmp
shll
inc
popl
add
stc
cmpsb
cmp
pop
adc
push
in
mov
mov
jne
pusha
jno
fisttps
xor
pop
jmp
mov
jge
xchg
xlat
cmp
cmc
xchg
insl
sbb
add
add
mov
mov
inc
push
fs
mov
cli
sti
sbb
fmul
pusha
and
aam
bound
mov
pop
sub
jmp
test
pop
loope
sub
les
andl
roll
lock
fbstp
movsl
jmp
add
mov
dec
in
add
data16
jo
pop
or
mov
ret
and
xchg
fstpl
push
leave
or
ret
pop
dec
daa
fbld
jne
jge
mov
mov
sti
outsb
movsl
xor
movsl
sub
pshufw
dec
push
push
cmp
dec
mov
leave
and
xor
in
push
inc
cmp
psraw
lods
ljmp
das
xchg
sbb
cs
inc
mov
out
xor
les
popa
jp
xlat
jnp
out
jge
sbb
inc
mov
and
dec
mov
xchg
mov
mov
push
data16
imul
pop
push
mov
int
cld
sbb
mov
sbb
and
clc
cmp
mov
adc
in
mov
aaa
lahf
clc
clc
testl
mov
fmull
test
pop
js
mov
cld
and
add
andl
iret
dec
pop
adc
movsb
or
push
sbb
and
pop
sub
test
ret
dec
jp
xor
or
add
and
in
pop
pop
pop
or
into
sub
bound
dec
or
sbb
cmp
inc
mov
xlat
jo
out
js
mov
and
jg
push
jo
jecxz
fnstcw
sbb
or
insb
and
jo
lea
pop
push
xchg
mov
push
lock
push
inc
nop
add
push
jl
popa
or
les
jle
lods
pop
rcrb
into
and
cmp
imul
adc
xor
ret
pop
ret
lods
adc
int
adc
add
scas
mov
movsb
inc
je
test
cltd
mov
loope
lret
lods
scas
out
pop
movb
int3
cs
pop
jne
add
popa
clc
push
mov
int3
jle
xchg
adc
and
xlat
fists
loop
movsl
incl
imul
out
xor
mov
or
ljmp
adc
push
mov
orb
bound
cmp
xchg
push
inc
push
sbb
pop
xor
add
adc
push
push
dec
push
aad
adc
and
push
inc
mov
inc
push
add
pusha
bound
mov
clc
js
push
rcll
add
out
movsb
xchg
nop
outsb
jae
aad
test
cli
lds
movsb
js
xchg
jecxz
in
adc
jg
aaa
addr16
mov
adc
jmp
cs
push
adc
mov
jo
repnz
leave
ret
aad
lret
or
add
fs
stc
lahf
sahf
gs
negl
out
or
mov
rorb
dec
sub
xchg
adc
rol
xchg
stc
cmpl
scas
pop
fs
jmp
sbb
das
lcall
or
mov
les
les
cli
push
outsb
lods
cmpsb
out
and
insl
and
push
push
shrb
jp
add
orb
bound
call
mov
std
jo
sti
cmc
frstor
jg
mov
mov
aas
mov
cld
fmuls
inc
push
xchg
mov
sbb
sub
mov
fdivl
loope
lret
cwtl
mov
push
lods
or
aad
jae
mov
fisttpl
cltd
jge
clc
stc
sub
or
iret
sub
ret
sub
ficoml
mov
dec
out
je
xchg
mov
push
push
lods
mov
jl
adc
loope
shl
dec
push
cmp
call
xchg
insb
or
xchg
add
mov
fnstcw
test
add
clc
inc
std
adc
or
std
ljmp
jmp
jle
daa
cmpsb
inc
sub
push
out
movsl
xor
jecxz
xlat
outsl
les
or
pushf
in
test
clc
loopne
sub
mov
movsb
cltd
cwtl
fwait
xchg
and
icebp
xchg
cmp
bound
arpl
dec
cmpsl
pop
test
cmp
xor
clc
mov
mov
inc
adc
lret
jl
cmp
lods
mov
inc
enter
jmp
or
add
cld
aam
add
inc
dec
push
push
mov
pop
sbb
sbb
lcall
imul
and
mov
push
test
insl
dec
pop
push
sub
mov
lds
jbe
mov
je
push
jbe
cmpsl
sbb
lods
or
fmulp
dec
mov
xchg
adc
add
xchg
cmp
xchg
loop
icebp
lock
cli
pop
fildl
inc
dec
mov
inc
dec
lock
aaa
mov
mov
fistpll
jnp
loopne
lods
pop
mov
xchg
inc
mov
in
adcl
push
push
and
xor
hlt
push
mov
loop
sahf
push
add
xor
sbb
out
mov
add
gs
dec
rolb
movsl
sbb
fldcw
xchg
aad
movsb
dec
movsb
lods
push
mov
leave
ret
fdivl
icebp
cmp
adc
push
out
mov
xor
mov
xor
lock
movsl
mov
jle
cld
shlb
roll
loope
sub
mov
push
ja
cmp
shr
lock
movsb
hlt
das
ficoml
mov
in
and
out
in
or
and
xor
and
jbe
and
xor
pop
sbb
sub
movsl
int3
test
outsb
jnp
insb
mov
pop
or
xchg
ds
movsb
fstpt
xchg
push
es
or
sarb
call
adc
sbb
roll
pop
das
or
std
in
and
sbbb
fstpt
pushf
push
sbb
adc
xchg
dec
js
inc
push
dec
xchg
push
shrl
adc
cmc
xchg
sub
mov
or
xchg
ljmp
shll
in
xlat
push
sbb
and
xchg
adc
sub
and
repz
push
pop
je
or
scas
mov
mov
lods
or
int3
loope
lods
arpl
dec
mov
xor
sub
arpl
sub
in
cmovno
adc
mov
push
sbb
jnp
mov
sub
mov
adc
loopne
cld
fcoms
mov
dec
cmp
or
push
cmp
outsl
test
es
sub
repnz
sub
sub
rcrl
add
mov
mov
pop
jno
rcrl
rcrl
pop
leave
pop
es
in
iret
push
sub
and
mov
insl
pop
sbb
sar
xchg
js
pusha
cmpsb
adc
jb
rclb
test
fcmovnu
dec
mov
xchg
cs
sub
mov
jnp
popa
or
mov
cmp
inc
fcom
jp
call
mov
mov
ret
push
in
xchg
cmpsb
fcomps
cs
mov
sarl
pushf
mov
outsl
shrb
cmp
add
loopne
cmpsb
out
jns
dec
loopne
sbb
shll
rorl
roll
or
xlat
or
outsl
mov
sbb
inc
add
mov
outsb
movsl
jp
push
test
fucomip
add
add
pop
out
jmp
push
pop
out
push
jmp
testb
outsb
mov
or
xor
pop
lret
mov
orl
sub
in
incb
xor
outsb
inc
inc
pusha
jo
data16
ljmp
rorl
or
mov
sub
popf
repnz
add
mov
cld
pop
int
mov
sub
jns
repnz
lods
repz
pop
and
dec
fwait
cmp
ret
outsl
cmp
or
ljmp
mov
jo
sbb
mov
add
and
jle
fstl
sub
int
cmp
inc
jae
jbe
paddsw
pop
addb
sub
jnp
add
add
fcoms
adc
mov
mov
mov
leave
push
xor
adc
and
and
fdivl
xor
add
mov
sbb
jbe
outsb
add
sbb
or
mov
add
push
push
push
cmp
cli
sbb
lret
neg
add
enter
xchg
dec
fsubrl
fisubrs
jo
sbb
inc
add
or
jmp
push
cld
sti
pop
flds
sub
ja
dec
mov
es
repz
shrl
push
sub
inc
jle
mov
mov
cli
cwtl
loope
jp
mov
add
and
add
xor
push
and
push
sub
push
push
bound
aam
mov
inc
insl
test
ljmp
movsl
jbe
test
test
lods
sbb
pusha
pop
arpl
call
lret
mov
pop
inc
stos
popa
mov
push
int3
dec
add
push
lods
push
pop
mov
mov
and
mov
mov
rorb
orb
mov
cmp
sub
sbb
inc
mov
pop
mov
jns
pop
clc
mov
imul
pop
insb
sbb
arpl
ss
add
xchg
mov
iret
pop
sub
std
pop
roll
sub
icebp
inc
sub
into
popa
outsb
addb
sub
adc
add
push
fwait
jg
add
sbbb
loopne
xchg
inc
xor
and
loope
xor
push
xor
push
daa
or
iret
aas
push
cli
dec
mov
clc
and
je
les
cmp
vmovaps
adc
leave
sbb
jne
or
or
orb
movsb
add
clts
inc
sub
cmc
call
and
inc
sahf
cmp
aam
jl
mov
xchg
loopne
mov
jno
scas
add
faddl
jle
inc
and
push
adc
pop
pop
or
lahf
ja
aas
and
data16
test
rol
xor
daa
lahf
out
pop
mov
stos
or
orb
or
ja
incb
sbb
les
cmp
pop
cmpsb
mov
in
push
fisttpl
mov
out
pusha
jmp
and
clc
sbb
dec
and
dec
fadds
add
lock
loopne
pop
sub
outsl
add
add
mov
inc
pop
inc
lret
or
rclb
adc
jb
and
or
mov
cmpb
and
lds
imul
jecxz
sbb
hlt
jmp
in
jle
sahf
push
mov
leave
mov
lret
aad
cs
clc
pusha
insb
jmp
cmp
test
imull
arpl
fs
ja
mov
pop
cmp
cmp
imul
xor
sbb
add
inc
ret
inc
lret
and
xchg
sbbb
jae
pushf
mov
leave
es
jg
stc
sub
mov
dec
stc
jge
jno
add
fwait
leave
xor
pop
mov
sub
adc
loop
dec
pop
push
push
arpl
dec
pop
pop
divps
js
pop
movsl
bound
xor
xor
mov
ja
pusha
inc
add
xchg
jge
xor
add
cmpsb
lds
mov
call
nop
or
in
or
cld
js
shlb
rolb
out
xor
lock
mov
sbbl
xchg
je
jmp
les
jae
shll
dec
dec
clc
repz
shlb
mov
push
hlt
push
out
pop
outsb
or
ret
stos
add
insl
daa
mov
aam
sub
aam
xor
test
inc
movsb
jmp
adc
mov
out
mov
and
sub
sub
push
inc
or
push
faddl
xchg
push
cmpl
push
push
xchg
repz
sub
adc
scas
inc
sahf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
bound
rep
in
lret
sbb
adc
push
sub
inc
pop
jbe
push
mov
inc
jmp
ret
adc
dec
cmpl
inc
and
mov
scas
jmp
push
pop
cmp
push
pop
jo
mov
das
xchg
push
inc
pop
inc
xlat
arpl
or
xchg
outsl
inc
add
inc
lods
test
add
push
rclb
inc
pop
mov
push
sub
std
gs
out
pop
adc
xlat
lods
ljmp
test
adc
dec
push
adc
pop
adc
xor
jle
daa
xlat
sub
or
fnstenv
add
sub
mov
push
mov
lods
dec
movsb
dec
idivl
scas
dec
js
mov
and
sub
lds
in
outsl
clc
std
lods
mov
lret
dec
jge
push
nop
mov
jl
and
pop
movsl
scas
push
jae
push
cmp
sarl
and
dec
scas
in
xor
loopne
pop
shll
jmp
dec
xchg
add
xchg
inc
movsb
add
sub
jns
test
fisubrs
enter
lahf
cltd
stc
gs
or
roll
dec
xchg
pop
out
aas
mov
add
cmp
lahf
xchg
in
sbb
jno
mov
jecxz
icebp
leave
mov
jo
and
add
push
inc
mov
jo
daa
mov
daa
xchg
scas
loop
jns
sbb
fdivl
push
add
lods
cmc
pop
adc
lds
sub
pop
jne
les
in
jecxz
mov
adcb
pusha
mov
in
rolb
test
repnz
test
cmp
pop
clc
mov
scas
ficompl
subb
lea
mov
jg
std
cld
addl
jmp
add
imul
sub
lock
adc
pop
shll
pop
push
cmp
pop
mov
xchg
xchg
aam
push
cmp
mov
sbb
mov
fwait
and
into
fsub
inc
js
lahf
sub
addl
loop
xchg
add
dec
mov
mov
inc
mov
cmp
fldenv
ficompl
add
xchg
jp
ret
xchg
xor
scas
add
xor
adc
mov
push
inc
xor
inc
fwait
jle
push
dec
mov
or
pusha
mov
mov
adc
cmp
inc
loop
mov
or
add
fisubl
pop
pop
dec
mov
mov
or
mov
inc
jg
adc
push
lret
pop
mov
fsubs
pop
js
xor
mov
scas
add
pop
pop
out
sub
gs
or
addr16
sbb
rcrl
adc
fwait
xchg
dec
loopne
imul
pop
dec
lock
sub
xchg
jo
mov
jo,pn
xor
adcb
push
or
xchg
ret
mov
push
in
and
ficomps
sbb
mov
pop
xchg
and
jp
out
mov
enter
pop
cmp
sbb
ret
lret
pop
sub
jnp
fcmove
cmp
cwtl
loopne
jle
adc
shrb
and
loope
dec
adc
pusha
xchg
adc
jne
or
jmp
jmp
sarl
xchg
call
dec
push
sbb
or
js
movb
and
mov
enter
cmp
dec
mov
js
mov
cmpsl
leave
loop
out
lds
movsb
stc
lea
mov
aam
and
jne
push
dec
mov
adc
mov
cmp
mov
jle
adc
mov
insl
leave
call
fnstcw
pop
push
sbb
sbb
imul
mov
add
das
or
scas
sti
add
mov
cltd
divl
fisubrl
mov
es
mov
addr16
testb
jno
ljmp
mov
insl
aaa
inc
cmp
in
xchg
fdivrs
mov
dec
pop
xlat
sub
loop
rorb
or
mov
mov
sahf
sbb
xchg
jbe
out
pop
sub
sbbl
pop
and
mov
push
cmpl
jnp
or
fisttpll
mov
scas
xor
jno
push
call
iret
sbb
cmpsl
sub
or
leave
cltd
xchg
mov
subb
loopne
push
dec
sub
push
pop
shl
xchg
fdivl
sbb
add
inc
roll
into
add
add
call
repnz
stc
sbb
sub
add
lret
adc
cmpsl
lahf
push
sbb
popf
inc
mov
cmpsl
or
popf
add
bound
xchg
lods
cmc
lret
mov
leave
jp
cltd
inc
loope
lock
out
and
mov
xor
cltd
add
adc
pop
inc
mov
and
and
out
xchg
dec
jge
and
loopne
shrb
es
jns
cmp
dec
add
push
rcll
xchg
dec
int3
pusha
mov
pop
rcr
xor
mov
and
scas
lahf
cmp
push
movsl
dec
pusha
data16
inc
dec
and
jo
aam
dec
test
notb
adc
and
dec
and
popa
cmp
lcall
add
inc
mov
add
shl
pushf
jge
movsb
mov
push
sahf
mov
repz
orb
dec
out
sub
aaa
push
out
ljmp
fisubrl
cmpsl
lock
std
cmp
push
out
lea
iret
mov
adc
adc
jo
kmovw
jno
setge
xchg
loop
cmp
orl
sub
stos
mov
ds
mov
push
jmp
and
addr16
mov
cmp
push
xchg
in
inc
or
cmp
and
sbb
in
lcall
inc
cmp
imul
dec
pop
ret
or
pushf
and
cmpsl
cmp
mov
add
add
add
inc
stos
sahf
ljmp
pop
jmp
les
inc
rcr
pop
push
sub
pop
mov
pop
adc
mov
xchg
lds
push
ja
call
stos
clc
mov
push
mov
xchg
ljmp
xor
adc
mov
test
xor
jg
les
call
inc
cmpsl
inc
flds
fsubrl
or
adc
scas
ss
rclb
and
cmpsb
sub
mul
mov
mov
in
mov
pop
adc
les
xor
test
mov
inc
inc
fwait
test
mov
mov
pop
mulb
daa
xchg
xchg
push
in
jbe
mov
adc
les
ret
lea
jp
fdivs
mov
add
cmp
push
into
test
cltd
mov
cmp
mov
mov
loope
mov
std
or
or
inc
mov
sbb
mov
sub
inc
push
leave
int
inc
sbb
inc
addb
repz
test
pop
jb
jbe
pop
test
imul
test
inc
jo
or
clc
jmp
inc
sti
and
mov
add
rcrb
sbb
scas
enter
roll
add
test
shlb
mov
sbb
enter
cwtl
in
neg
scas
shl
and
xchg
jg
mov
jo
inc
mov
imul
mov
aaa
mov
les
mov
sarb
inc
ds
dec
outsb
jl
and
outsl
adc
xchg
push
loope
test
loopne
sbb
xlat
movsl
and
and
lahf
dec
lret
push
pop
add
jnp
nop
dec
xchg
xor
sub
or
jne
mov
xchg
fbstp
in
pop
sub
cltd
and
cli
pop
pop
rcl
xor
lahf
mov
adc
insl
ret
mov
pop
pop
cmp
mov
cmp
imulb
and
aaa
adc
bt
nop
lahf
repz
test
lcall
scas
dec
mov
xchg
and
imul
adc
outsl
popa
mov
movsb
inc
aam
int3
jne
nop
dec
cmpsb
leave
push
cmp
cltd
add
mov
pop
cmp
pop
leave
fdivl
lds
lods
fidivs
ret
adc
sbb
insb
in
and
dec
imul
dec
xor
int3
ret
push
adc
test
hlt
aas
lods
mov
adc
dec
mov
mov
or
mov
mov
lea
int
add
cli
jmp
push
push
sub
test
mov
adc
mov
insb
adc
jae
arpl
jmp
dec
cmp
mov
mov
or
pop
pop
push
lds
adc
out
in
or
pop
aas
sbb
adc
lds
jge
sti
pop
cmp
jns
mov
and
push
pop
inc
mul
call
inc
jno
sub
jmp
mov
popa
dec
loop
jo
nop
add
push
inc
push
stos
dec
imul
cmp
loopne
jmp
adc
rol
enter
or
inc
add
mov
leave
or
or
cs
sbb
push
xor
cltd
stc
adc
pop
jnp
daa
xchg
mov
push
adc
outsb
adc
xor
pop
push
test
cmpl
jmp
ret
clc
xchg
fadds
jne
jae
imul
test
adc
pop
dec
adc
arpl
inc
daa
sbb
xchg
cmpsb
or
add
adc
add
add
adc
loopne
aam
push
xchg
das
xor
mov
sbb
std
push
inc
stc
loope
popf
sub
and
adc
or
js
out
push
lds
add
ds
mov
mov
in
cs
dec
mov
icebp
mov
and
mov
adc
call
jmp
xchg
sti
xor
jne
sub
cmc
enter
lcall
and
mov
mov
jae
das
and
inc
andnps
call
adc
pop
push
or
fsubl
ret
jge
adc
dec
push
daa
inc
mov
cwtl
mov
lret
inc
xor
scas
fidivs
push
pushf
rclb
loope
jnp
ds
mov
aad
jle
push
mov
xchg
jle
cmp
dec
mov
stos
inc
push
or
xor
jbe
and
and
sbb
lds
mov
adc
test
xchg
inc
repz
fsts
mov
adc
pop
insb
dec
pop
cmp
lods
adc
aas
sar
inc
sbb
leave
rcrl
adc
test
jbe
cli
insl
int3
mov
ja
jge
in
imul
pop
out
add
gs
and
data16
add
dec
addb
icebp
inc
cltd
imul
sub
icebp
dec
push
dec
nop
sub
call
cmpsl
lret
adc
pop
outsl
pop
inc
xchg
mov
sub
push
add
adc
push
and
outsb
test
stos
andl
frstor
mov
rcll
sti
lock
out
adc
sbb
and
les
adc
and
jb
and
out
outsl
mov
adc
negb
cmpsl
and
xor
insb
and
dec
xor
pusha
imul
add
das
scas
xlat
jge
mov
sub
jno
lods
test
jb
sbb
sbb
xor
mov
les
imul
sbb
cltd
clc
mov
sub
push
insl
pop
popf
in
jnp
mov
insl
insl
sub
ds
and
adc
imul
xor
push
cmpsb
dec
inc
push
mov
fcmovnb
enter
inc
test
fs
and
out
mov
js
dec
and
popf
clc
arpl
test
and
and
cli
repz
insl
inc
nop
cmp
adc
daa
mov
jbe
sbb
out
push
adc
movsl
mov
push
mov
dec
lods
xchg
testb
sbb
jle
mov
sbb
adc
icebp
jg
add
and
cmp
addr16
std
out
leave
push
xor
adc
push
in
cmpsl
push
lcall
adc
imul
inc
fisttpl
test
adc
push
push
mov
pop
ret
insl
inc
mov
mov
xchg
leave
adc
call
shr
mov
popa
mov
imul
push
out
iret
push
sub
inc
mov
fs
push
fs
enter
js
jp
mov
mov
or
mov
push
and
call
movsb
dec
popaw
and
push
mov
dec
movsb
add
and
mov
or
and
test
in
xchg
popf
cmp
int3
in
andl
hlt
push
imul
dec
xchg
popa
dec
lods
xchg
and
lods
insb
adc
push
adc
daa
std
sbbb
gs
jmp
mov
repnz
nop
sub
xor
push
adc
jecxz
sbb
sbb
bnd
loop
sub
imul
jp
pop
and
adc
repz
jle
sub
mov
and
test
iret
fsubrl
add
test
sub
add
inc
pop
lcall
xchg
xchg
pop
and
xchg
inc
dec
jp
or
inc
xchg
or
orb
mov
dec
stc
xor
mov
and
adc
jns
cli
mov
in
enter
mov
xor
clc
sub
ja
sub
add
xchg
xchg
push
and
shl
ljmp
jp
adc
icebp
popa
or
push
sub
fistps
ja
jno
add
imul
shlb
or
push
inc
push
add
push
inc
sahf
pop
mov
pop
sbb
addr16
push
daa
callw
movsl
testl
jmp
cmp
lds
add
in
mov
jl
stos
jno
adc
pop
xchg
jbe
or
clc
shll
mov
sbb
loop
clc
dec
adc
fdivr
add
clc
xchg
cmp
inc
sbb
adc
push
mov
pop
nop
mov
jle
cmp
mov
push
inc
pop
push
sub
mov
fisttpll
nop
sub
sbb
pop
aas
cltd
popa
or
inc
sub
xor
sub
inc
andb
scas
or
decl
push
leave
jmp
test
test
fadds
sbb
adc
popa
or
aaa
mov
xchg
andl
stos
push
rclb
stc
lcall
xlat
inc
pop
sub
xchg
push
xor
test
stos
add
dec
mov
mov
xchg
scas
pop
mov
xor
jge
repz
insb
movsb
in
push
adc
push
mov
pop
cmc
icebp
sub
jb,pt
pop
popf
cmp
jecxz
sbb
inc
xor
dec
push
divl
mov
inc
mov
adc
int3
jle
mov
adc
sahf
lret
icebp
xorb
and
pushf
add
cli
loopne
mov
addl
push
iret
push
mov
push
push
les
lahf
test
je
fs
jb
jns
and
je
or
xchg
xor
sub
test
adc
ret
sbb
mov
adc
jp
sub
and
roll
mov
cwtl
mov
dec
and
or
push
inc
adc
add
les
xchg
or
pusha
lock
call
cmp
adc
mov
sahf
and
fists
mov
testb
cmp
cli
add
in
lea
adcl
add
movsb
xor
xchg
lds
pop
repnz
loope
jmp
add
pusha
cmpsl
insb
pop
xor
fbld
pushf
dec
cs
fimull
and
push
adc
repnz
xor
scas
push
cwtl
mov
pop
into
lods
sar
sub
jo
push
popl
sbb
adc
push
xor
sub
xchg
rcrb
cld
jp
stos
ljmp
lods
inc
or
mov
shrl
push
ljmp
xchg
lcall
orb
or
jae
cwtl
rcr
bound
subl
addl
in
dec
adc
shl
add
insb
loopne
sbb
cmp
stc
loopne
xchg
dec
fbstp
inc
icebp
jmp
cmc
jp
stc
push
sub
dec
rcll
cmp
jl
xchg
jb
cs
movl
test
pushl
int3
xchg
sub
and
je
mov
sub
pushf
push
or
mov
ret
rcrb
jb
nop
adc
cs
sbb
icebp
mov
inc
jne
cmp
mov
sub
inc
xchg
and
lea
inc
lahf
or
add
adc
cmp
cmc
popa
pusha
adc
push
pop
roll
cli
cmp
imul
inc
push
inc
orb
loop
les
jae
cld
mov
cwtl
adc
push
push
add
push
fcoml
lahf
and
jl
hlt
fdivl
mov
das
cs
loop
push
mov
pop
dec
aas
or
mov
adc
mov
push
push
push
mov
in
call
out
sbb
pop
movb
sti
adcl
or
cltd
dec
rorb
sbb
jns
iret
pop
or
stos
cmpl
fists
pop
push
sbb
push
jb
add
ja
mov
daa
dec
sub
mov
ljmp
jg
cmp
add
out
test
adc
xor
and
push
pop
data16
cmp
sbb
sub
daa
call
push
fisubrs
pop
rcrb
popf
dec
lods
jecxz
jnp
movzbl
lea
jmp
int
lea
cmpsb
test
lcall
lods
sub
dec
inc
scas
lret
dec
gs
cmp
mov
mov
inc
pop
pop
cmp
push
mov
jae
paddusb
lock
pop
repnz
jno
lret
movsb
jp
addl
or
mov
mov
cmp
int3
faddl
xchg
fsubrs
fs
sub
jmp
and
testb
jg
cmp
dec
inc
mov
pop
imul
jno
and
mov
cmp
clc
roll
xchg
xchg
sbb
push
pusha
sub
mov
and
jb
inc
inc
cmp
mov
push
in
pusha
out
lds
scas
pop
ds
fisubs
imul
inc
mov
sub
fidivl
dec
cmp
xor
jmp
into
cs
int3
xchg
ja
mov
fwait
cmpsl
and
jge
jmp
nop
and
sbb
cmp
xchg
push
pop
pop
adc
loop
push
cltd
popl
imul
out
or
mov
adc
pop
jnp
adc
push
out
push
sbb
or
sbb
inc
push
lcall
cmpsb
xchg
shll
push
repnz
xchg
stc
mov
lods
lcall
sbb
bound
ds
sbb
aaa
repnz
lret
arpl
outsl
les
ja
call
cmp
fisubs
mov
scas
add
je
ja
or
sti
lret
mov
cmp
je
imul
mov
test
out
les
adc
shrl
push
inc
xchg
or
dec
fucomip
and
insl
cmpsl
or
fdivl
mov
add
sub
jno
and
adc
push
and
or
loop
popa
jmp
iret
popf
xchg
pop
mov
adc
mov
mov
jecxz
jecxz
cli
jmp
pop
mov
cmpsb
mov
aaa
fldenv
gs
jo
push
inc
je
push
xor
shlb
in
test
xchg
or
jbe
xchg
lods
pop
push
push
orb
jg
dec
orl
jnp
add
int3
push
adcb
or
jmp
push
pusha
jns
insb
add
add
sbb
push
jge
xchg
insl
pop
inc
xor
xchg
push
or
mov
ror
mov
popf
imul
hlt
popf
inc
shlb
cs
mov
movsl
lahf
sbb
push
repz
dec
push
andb
fldl
shrb
sahf
lds
int
mov
inc
jle
adc
pop
push
rclb
xor
inc
mov
adc
js
push
mov
push
js
adc
outsb
das
fdivr
int3
mov
fistpll
in
mov
jno
daa
jo
ret
inc
dec
cs
push
imul
scas
push
movsl
scas
push
icebp
andl
pusha
adc
shl
sarb
lcall
dec
test
cld
adcl
xchg
cmpsl
fdiv
sbb
pop
lahf
adc
pop
nop
or
sbb
push
mov
gs
adc
push
add
cltd
inc
sahf
outsb
shll
mov
scas
gs
fmull
std
cmp
mov
mov
add
in
stos
loope
mov
stos
dec
jb
dec
scas
loop
cwtl
xor
sbb
call
adc
push
rolb
pusha
fidivrs
xor
movl
shlb
flds
mov
lds
pusha
xchg
pop
mov
pop
sbb
jae
push
fdivrl
scas
cmp
adc
pusha
sub
shlb
inc
cmp
adc
aad
fiaddl
push
inc
leave
cmp
add
or
adc
and
addl
mov
in
xchg
or
add
ror
dec
push
sahf
mov
add
repnz
icebp
rorb
and
scas
pusha
mov
sbb
fimull
xor
cwtl
bound
sbb
pop
das
loope
rcrb
sub
pusha
inc
jae
pop
pop
pop
mov
js
jmp
cmpsb
or
shrd
out
fcompl
dec
inc
cmpsl
pop
dec
test
stc
pushw
fidivs
std
jo
mov
inc
sar
das
stos
dec
add
aaa
rolb
mov
gs
push
add
cli
out
inc
jl
pop
push
stos
movsl
imul
ljmp
lods
repnz
add
add
sub
movsb
inc
lcall
in
jmp
or
pop
xor
jmp
imul
inc
out
and
cmp
jp
movsb
leave
sbb
dec
push
push
sub
in
in
test
add
sub
cld
adc
or
xorb
mov
sbb
in
inc
call
dec
mov
dec
add
popa
mov
fcmove
push
in
movsl
les
lock
aas
add
inc
sbb
dec
add
sbb
dec
fcoml
mov
sbb
cmp
out
xlat
test
add
pop
lods
push
insl
lods
xchg
jge
enter
jl
xchg
dec
les
cs
ds
adc
sub
push
hlt
jp
sti
cld
stos
jnp
xor
xchg
add
push
cmp
push
sbb
push
inc
movsl
and
data16
sbb
in
out
fisttps
xchg
in
pushf
or
mov
mov
cmp
dec
inc
out
add
add
add
add
xor
mov
add
mov
add
inc
add
lea
rcrb
add
inc
add
and
add
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
inc
jb
outsl
jb
mov
push
jne
je
insl
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
incl
add
add
ja
repnz
add
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movsb
jb
mov
xchg
es
test
jno
xor
sbb
and
daa
mov
or
pop
mov
sub
das
test
add
and
mov
push
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
cmp
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
orl
inc
out
mov
fneni(8087
xor
or
and
ret
bound
enter
aad
test
gs
or
cmpsb
mov
call
mov
mov
dec
add
push
popa
xor
sbb
adc
mov
push
sub
mov
inc
push
mov
mov
aad
movsl
cmp
repz
sti
jl
cmp
xor
inc
inc
fsubrp
lret
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
mov
pop
mov
and
xchg
push
aam
pop
int3
pop
gs
insb
jo
push
std
in
mov
push
cmpsl
lea
add
pop
add
shrb
add
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
sarb
lcall
hlt
pop
xor
sub
pusha
push
jg
sbb
jp
xchg
leave
pushf
out
mov
sub
mov
jmp
cmp
push
cltd
popa
pop
sub
mov
imul
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
arpl
clc
jl
test
ja
cltd
idivb
push
repnz
fisubrs
mov
vandpd
xor
add
add
addr16
out
sbb
stos
stos
out
jbe
lcall
sbbb
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
aam
pop
mov
scas
ljmp
movsb
mul
jb
xchg
fwait
rol
jne
mov
loope
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
add
xor
pop
push
movsl
movsl
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
mov
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
lcall
and
adc
sbb
loop
int
jmp
dec
daa
daa
imul
jne
adc
or
sbb
sub
je
sbb
cs
sub
mov
pop
out
pop
mov
push
divb
cmp
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
mov
add
add
in
in
sub
and
pusha
jecxz
cld
pop
jns
mov
mov
pop
in
aam
push
lret
lret
inc
addr16
cmp
dec
dec
ficomps
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
xor
push
adc
inc
iret
jmp
add
push
jg
andl
lahf
lahf
mov
mov
mov
inc
rolb
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
adc
xor
lcall
std
repz
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
mov
cs
pop
cmp
cmpsl
cmpsl
repnz
jle
cmpb
inc
enter
mov
sbb
sub
jae
xchg
shlb
sbb
dec
shll
and
push
sub
jle
nop
nop
stos
or
inc
lret
out
sub
mov
cmp
jns
pop
pop
loop
or
sbb
fneni(8087
loopne
xor
push
je
cmp
or
push
xchg
dec
dec
fisttpl
push
or
and
mov
ret
mov
lods
lods
out
les
cmpsb
cmp
xchg
movsb
shl
in
bnd
mov
out
xor
aaa
aaa
pop
fisubrl
mov
lea
fs
dec
dec
rorb
test
mov
push
push
cli
repz
hlt
pop
iret
ljmp
hlt
jp
mov
scas
jmp
outsl
mov
js
dec
and
jb,pn
sbb
and
cmpsb
cmpsb
icebp
jae
mov
xchg
mov
lret
call
fnstsw
je
ds
pop
and
mov
mov
loopne
jo
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadds
add
add
sbb
push
adc
popa
popa
mov
scas
push
push
stc
imul
rcrl
sbb
mov
jmp
clc
adc
cwtl
cwtl
mov
adc
xor
imul
pop
mov
cmpsl
sub
push
push
and
jmp
into
dec
stos
push
push
call
sub
jp
mov
or
or
fcmovbe
out
xor
push
ret
sub
sub
adc
mov
test
push
cld
insl
mov
push
cmp
clc
jl
cltd
out
ja
idivb
or
imul
outsl
outsl
push
xchg
pusha
xor
add
add
test
push
sub
sbb
bound
stos
stos
lcall
lret
addb
cli
jge
adc
mov
pop
leave
mov
or
lock
inc
lods
lods
addr16
aam
pop
mov
scas
mov
push
movsb
movsb
xchg
in
jb
fwait
rol
jne
mov
loope
std
scas
cmp
es
insb
ss
jle
aas
add
div
dec
or
pop
push
movsl
movsl
xor
in
or
icebp
icebp
xchg
loop
jno
stos
fcomp
push
bound
xor
sub
add
xchg
mov
pop
popf
ret
ret
sub
sbb
mov
or
lcall
adc
fwait
sbb
loop
int
jmp
dec
daa
daa
int
mov
lahf
ljmp
sahf
sbb
sub
cs
sbb
fsubrl
out
mov
pop
sti
pop
mov
push
dec
jbe
cmp
into
jge
mov
push
sub
ds
jecxz
pop
das
das
xchg
adc
push
add
add
in
in
pusha
inc
and
pop
jecxz
cld
enter
in
mov
pop
mov
lret
lret
fldenv
mov
ficoms
dec
call
test
iret
imul
out
in
stos
stos
push
in
sti
sti
lds
dec
dec
push
xor
xchg
adc
inc
adc
stc
stc
push
add
add
mov
cmp
mov
dec
test
repz
mov
inc
mov
xchg
xchg
mov
jo
cmp
cmc
cmc
fbld
mov
jne
fcmovu
arpl
and
and
adc
in
decl
std
repz
mov
int
adc
or
xor
ret
in
in
loope
pop
pop
mov
mov
cs
pop
push
xchg
repnz
cmpsl
cmpsl
cmp
jle
jp
cmp
out
pop
pop
sub
sbb
xchg
out
jae
shlb
sbb
dec
jg
inc
and
jle
sub
stos
cmp
mov
mov
sub
out
out
shrl
mov
jns
loop
pop
pop
sbb
lods
fcmovnu
cmp
loopne
push
xor
dec
je
cmp
adc
or
xchg
dec
dec
or
push
insb
dec
and
in
pop
pop
pop
lahf
ret
mov
lods
lods
cmpsb
les
test
xchg
xchg
movsb
xor
in
bnd
xor
out
inc
mov
enter
aaa
mov
insl
insl
mov
lea
rcrb
test
cli
lods
push
push
pop
repz
hlt
and
lret
mov
jp
jmp
adc
or
outsl
mov
js
dec
and
cs
sbb
icebp
push
cmpsb
cmpsb
jae
mov
xchg
mov
lret
call
fstpl
pop
pop
fstl
mov
mov
loopne
jo
jl
les
mov
int3
data16
add
add
div
adc
push
mov
push
xor
shrb
mov
pop
cltd
rol
cmp
sahf
cmp
loope
adc
clc
clc
mov
cwtl
cwtl
xor
adc
mov
test
mov
mov
fwait
fwait
and
push
xchg
adc
jmp
into
ljmp
sub
jp
popl
mov
or
or
xor
out
movb
ret
addb
sub
sub
lret
jnp
mov
test
push
insl
mov
push
arpl
clc
jl
cltd
out
ja
idivb
or
imul
outsl
lds
xor
xor
add
add
into
sub
sub
sbb
xlat
bound
stos
jbe
in
jbe
inc
pop
or
mov
jge
cli
jge
adc
mov
inc
leave
mov
or
lock
in
inc
lods
aam
mov
mov
ljmp
movsb
notl
jb
in
rcrb
mov
jne
std
sbb
std
xchg
scas
cmp
es
insb
ss
inc
jle
testl
or
pop
push
movsl
in
shl
icebp
or
icebp
jno
loop
fdivs
fdivs
push
bound
adc
or
add
push
xchg
and
and
pop
popf
ret
sbb
xor
xchg
mov
or
pop
or
pop
adc
and
sbbb
loop
es
daa
imul
jne
ljmp
sahf
sbb
sub
cs
sbb
fsubrl
out
mov
mov
mulb
popa
mov
mov
jge
sub
sub
ds
das
jno
das
test
cmpsb
push
shrl
roll
add
add
sub
in
and
and
pop
jecxz
mov
jns
pop
in
mov
push
aam
lret
inc
lret
mov
dec
jb
dec
ficoms
pop
call
test
shrb
shr
sub
out
stos
in
stos
sti
push
in
sti
inc
lds
dec
xor
xor
iret
mov
adc
stc
add
add
jg
jg
lock
cmp
mov
dec
test
repz
mov
xchg
lods
aas
xchg
popf
mov
jo
cmc
add
cmc
mov
shll
jne
fisubl
arpl
adc
and
lcall
in
repz
std
repz
ror
dec
or
adc
ret
in
pop
loope
pop
xchg
mov
mov
cs
les
les
cmp
cmp
lods
enter
mov
sbb
out
pusha
mov
sbb
fdivrl
fsubl
inc
and
jle
sub
orl
inc
lret
out
sub
out
mov
cmp
adc
jns
ficomps
mov
or
jbe
fneni(8087
cmp
loopne
push
xor
dec
je
or
adc
dec
fistl
push
and
dec
and
in
pop
ret
ret
mov
lods
bound
cmp
in
shl
jns
bnd
xor
out
inc
mov
aaa
pop
outsb
aaa
insl
mov
insl
lea
aad
rcrb
insb
mov
insb
push
cli
lods
push
hlt
pop
repz
ljmp
gs
hlt
jp
jmp
adc
mov
mov
js
outsl
dec
and
sbb
cmp
icebp
push
cmpsb
mov
jae
push
xchg
call
jl
fnsave
je
and
pop
dec
fstl
mov
mov
loopne
ds
jl
mov
jno
data16
int3
dec
fcoms
add
add
testb
sbb
popa
mov
push
push
stc
scas
push
mov
xchg
pop
xchg
pop
cltd
rcrl
daa
sahf
loope
fabs
clc
adc
clc
cwtl
mov
cwtl
adc
and
imul
pop
mov
sub
push
xchg
leave
jmp
push
ljmp
sub
jp
fisttps
pop
mov
or
fisubl
out
xlat
out
movb
ret
addb
sub
movups
cmpxchg
jnp
push
cld
test
mov
cmp
arpl
jl
test
ja
cltd
out
jnp
div
repnz
outsl
outsl
mov
vandpd
add
add
addr16
push
sbb
xlat
xlat
bound
jbe
lcall
sbbb
jge
xchg
cli
cli
adc
mov
inc
leave
mov
lock
lods
lods
in
inc
aam
addr16
mov
ljmp
movsb
notl
jb
in
rcrb
mov
jne
std
sbb
xchg
xchg
scas
cmp
ss
insb
aas
aas
inc
jle
testl
xorl
push
in
xor
icebp
icebp
or
jno
xchg
loop
fdivs
xor
push
bound
add
or
push
xchg
and
gs
ret
ret
pop
popf
sbb
sub
xchg
xchg
mov
or
pop
or
adc
ss
sbbb
jmp
es
daa
imul
jne
ljmp
sahf
sbb
sbb
cs
sbb
fcompl
out
mov
mov
mulb
popa
mov
mov
jge
sub
jecxz
das
jno
test
cmpsb
rcl
push
add
in
sub
and
pusha
inc
cld
cld
pop
jecxz
mov
jns
pop
in
mov
push
aam
lret
inc
lea
cmp
dec
dec
ficoms
pop
call
test
shrb
out
out
sub
stos
stos
in
sti
sti
push
in
inc
inc
lds
xor
push
test
iret
mov
stc
adc
add
push
add
jg
push
push
lock
lahf
lahf
mov
dec
push
push
repz
inc
inc
rolb
xchg
lods
aas
popf
popf
mov
jo
cmc
add
mov
mov
ja
fidivl
and
arpl
adc
and
lcall
in
repz
std
rcl
insl
mov
or
adc
adc
xor
ret
pop
pop
loope
xchg
xchg
mov
mov
pop
cmp
les
cmpsl
cmpsl
repnz
jle
cmp
cmp
lods
enter
mov
jae
xchg
out
pusha
mov
sbb
rcrl
and
inc
sub
jle
nop
nop
stos
cmp
inc
lret
out
sub
mov
adc
sub
fidivrs
pop
pop
loop
or
sbb
lods
loopne
cmp
xor
push
cmp
dec
je
or
adc
dec
fistl
and
insb
dec
pop
pop
in
ret
lahf
rcl
outsb
mov
bound
les
xchg
movsb
xor
in
sarl
mov
out
xor
enter
aaa
aaa
pop
outsb
insl
insl
mov
lea
fs
dec
rcrb
insb
mov
push
push
cli
lods
hlt
hlt
pop
repz
lret
mov
scas
scas
jmp
adc
js
lock
jb,pn
sbb
and
cmpsb
cmpsb
icebp
push
mov
jae
push
xchg
call
fnstsw
je
call
dec
dec
fstl
mov
test
jo
nop
loopne
ds
jl
mov
jno
data16
int3
dec
dec
fcoms
div
add
push
push
adc
popa
mov
push
push
stc
scas
mov
xchg
cltd
sbb
sahf
mov
fprem
clc
adc
cwtl
cwtl
mov
adc
xor
imul
test
xchg
xchg
cmpsl
xor
push
and
xchg
leave
into
into
dec
xchg
ljmp
jp
mov
pop
mov
pop
sbb
out
xlat
inc
inc
movb
ret
sbbb
ja
movups
mov
lret
jnp
push
cld
test
mov
cmp
add
add
or
push
adc
pop
sbb
ss
cmp
aas
and
jo
push
push
insb
pop
jb
bound
inc
dec
insb
pop
je
gs
jg
jle
bound
dec
imul
cltd
fnstsw
repnz
lods
fdivs
xchg
les
repz
lret
add
cmc
test
mov
cmpsb
cmc
or
mov
cmp
jo
sub
data16
push
in
push
sbbb
inc
icebp
add
dec
stos
jae
and
popa
leave
xor
xchg
push
out
popf
pop
ljmp
dec
lock
stos
imul
mov
jno
sub
pop
out
xchg
pop
popf
inc
icebp
adc
xchg
inc
ljmp
pop
clc
adc
jae
aaa
mov
outsl
aad
test
lods
jbe
mulb
fs
mov
push
pop
ficompl
inc
inc
int3
xchg
fnstsw
add
movsl
shrl
iret
and
xor
stc
or
xchg
testl
mov
dec
push
hlt
cmpsl
push
pop
std
stos
pop
jne
mov
lret
test
rclb
ja
scas
aad
xor
iret
or
mov
add
sub
sbb
imulb
jbe
lea
fildl
fs
rcll
pusha
out
stos
push
jnp
mov
jb
mov
or
ficomps
pop
movsb
ret
adc
test
stc
xor
xchg
and
nop
out
sub
popf
in
fldl
cmp
mov
sbb
test
adc
scas
stc
xor
mov
jmp
pop
mov
xchg
outsb
gs
xchg
mov
fidivs
push
inc
ret
pop
int3
stos
dec
push
inc
in
dec
in
cld
pop
inc
loope
test
jecxz
gs
int
sar
xor
movsb
sub
mov
xchg
adc
fwait
xchg
sahf
mov
jne
dec
mov
addr16
imul
and
mov
jbe
xor
pop
fistpll
js
ret
das
jne
jmp
sbb
cmc
add
or
lcall
xchg
int3
jbe
mov
cli
pop
stos
mov
call
or
in
add
testb
leave
sarb
xor
into
test
sub
jp
mov
je
mov
sub
cmpsb
and
test
dec
push
sbb
lahf
push
push
js
or
add
aam
push
sbb
into
jns
sub
dec
cmp
loopne
cs
pop
and
cli
push
in
lcall
lock
sbb
mov
mov
enter
movsl
xchg
xor
rclb
rol
mov
enter
jmp
stos
jmp
jle
in
arpl
or
add
push
adc
jge
push
adc
xor
push
popf
cmp
pop
xchg
sub
mov
xor
psubsw
add
pusha
push
adc
hlt
inc
cmp
dec
outsl
ss
pop
je
rcll
sub
aaa
mov
add
mov
insb
and
test
push
add
inc
sbb
jmp
imul
push
bnd
jg
push
push
jno
pop
add
insl
inc
adc
xor
lret
rol
lret
and
fadd
sub
xlat
out
adc
in
repz
repnz
push
sti
cmpsl
jns
xchg
test
imul
lahf
pop
cmpb
dec
lcall
add
add
push
or
sbb
cmp
daa
ss
xor
aas
and
dec
push
dec
insb
pop
jb
bound
je
insb
pop
jg
gs
bound
imul
sarb
cld
or
repnz
pushf
fdivs
mov
cmpsb
incb
nop
fdivrs
decb
scas
les
cmc
adc
mov
cmp
insl
sub
push
jecxz
pop
in
push
addb
xchg
dec
icebp
add
and
jp
xor
mov
push
out
popf
pop
ljmp
dec
lock
cmp
frstors
mov
jl
add
push
icebp
pop
popf
inc
cli
adc
cwtl
inc
ljmp
pop
clc
adc
jae
aaa
mov
into
cmp
popa
fsubl
imulb
jg
loopne
fs
mov
push
pop
rcrl
inc
inc
movl
aaa
or
iret
and
xor
stc
or
lahf
testl
mov
push
push
hlt
cmpsl
pop
pop
std
stos
push
ret
jnp
test
xchg
ja
fstps
adc
and
xor
sub
sbb
testb
inc
fistpl
fs
shll
pusha
out
mov
jnp
mov
push
add
mov
sbb
movsb
enter
stc
and
out
and
nop
in
cmp
ss
aam
sub
adc
scas
stc
xor
mov
jmp
or
loop
gs
outsb
outsb
call
xchg
mov
fidivs
push
pop
ret
push
int3
stos
dec
testl
xlat
loope
inc
ljmp
out
shlb
jecxz
gs
imul
scas
xor
mov
and
xchg
adc
fwait
xchg
inc
mov
jne
push
mov
addr16
pusha
xchg
push
xor
dec
and
mov
pop
shll
adc
cmp
js
ret
das
jne
jmp
sbb
cmc
add
or
lcall
lcall
jbe
mov
cli
pop
mov
loope
mov
ljmp
ret
adc
clc
test
clc
sarb
xor
into
test
sub
inc
mov
je
mov
and
cmpsb
adc
test
dec
push
push
pop
jno
or
or
fldcw
push
aam
push
sbb
into
dec
xor
in
inc
cmp
loopne
cs
push
and
cli
add
lcall
lock
sub
fidivl
cltd
xor
movsl
xchg
pop
pushf
rcr
push
xchg
fcmovnbe
dec
add
inc
mov
enter
jmp
stos
jmp
arpl
in
cld
mov
or
add
push
adc
jge
push
adc
xor
push
xchg
cmp
pop
mov
cmp
andb
inc
jmp
jb
add
pusha
push
adc
lds
into
dec
outsl
rcrl
and
push
jge
jp
mov
add
push
addr16
test
pop
add
dec
sbb
jmp
imul
bnd
jg
push
add
arpl
dec
adc
inc
lret
fadd
fnstcw
rcr
lret
and
xlat
lds
lret
out
adc
in
repz
repnz
std
push
call
test
imul
lahf
pop
xorb
dec
lcall
add
or
push
sbb
pop
sbb
cmp
daa
ss
and
sub
push
push
jle
jb
insb
pop
jg
bound
je
insb
push
jg
gs
bound
imul
fnstsw
cld
add
repnz
pushf
fdivs
mov
cmpsb
repz
fdivs
decb
mov
test
or
mov
fstcw
cmp
insl
sub
jecxz
sbbb
inc
decl
shll
stos
jae
sub
popa
les
mov
push
ljmp
inc
lock
stos
data16
jl
sub
push
in
or
popf
dec
cli
adc
cwtl
inc
ljmp
pop
clc
aaa
mov
jge
sub
mov
lods
jbe
std
mov
fs
mov
push
push
rcrl
inc
dec
movl
aaa
pop
mov
iret
and
cmp
jmp
sub
add
dec
inc
out
cmpsl
push
push
hlt
stos
pop
pop
std
mov
ret
jnp
xchg
jl
rcrb
push
cmp
cmpsl
iret
or
mov
loope
add
cmp
sbb
lea
fildl
push
rcll
imul
mov
jnp
mov
push
add
movsb
ret
sbb
test
stc
and
out
and
popf
in
cmp
cmp
cwtl
aam
sub
xor
scas
stc
aas
sbb
jmp
or
loop
gs
arpl
pushf
je
cli
xchg
hlt
mov
fidivs
inc
pop
ret
push
int3
stos
inc
in
xlat
cld
dec
in
loope
dec
ljmp
jecxz
ja
hlt
int
imul
scas
xor
mov
and
mov
adc
fwait
or
jl
dec
scas
jne
push
mov
imul
xchg
push
and
test
jbe
inc
bound
shll
adc
cmp
jne
ret
das
push
xor
adc
out
dec
and
sti
or
lcall
lcall
push
mov
lods
cli
dec
mov
loope
mov
ljmp
ret
push
leave
clc
test
repz
sub
shlb
aaa
je
stos
sub
cmpsb
and
test
inc
arpl
push
pop
jno
or
or
aam
add
ret
jb
sbb
in
dec
xor
loopne
cmp
negl
cmp
push
and
mov
in
lcall
lock
sub
fidivl
xchg
xor
movsl
fistps
rcl
push
xchg
fcmovnb
dec
add
inc
mov
jmp
movsb
mul
jle
push
arpl
in
addr16
or
add
jge
adc
jo
push
adc
xor
pop
xchg
cmp
dec
mov
cmp
andb
psubsw
loop
dec
adc
hlt
outsb
pop
cmp
inc
data16
dec
outsl
and
pop
je
fcoms
or
aaa
mov
push
insb
sub
cmp
test
inc
adc
and
imul
pop
sti
jae
push
repnz
push
jg
pop
add
arpl
inc
adc
fmul
xlat
xor
rcr
fmul
and
xlat
lds
call
in
loope
repnz
sti
std
push
mov
cmpsl
jns
cltd
test
imul
lahf
pop
lea
orl
lea
add
add
or
push
sbb
pop
sbb
cmp
cmp
and
sub
pop
jo
gs
jle
jb
insb
push
jg
bound
dec
gs
jg
jle
bound
imul
fnstsw
cld
mov
lods
repnz
pushf
fdivrs
decb
lret
call
sahf
lret
mov
scas
cmc
cmp
les
out
xchg
shlb
mov
jo
sub
leavew
pop
push
jecxz
sbbb
inc
incl
dec
icebp
jae
and
popa
leave
xor
mov
pop
ljmp
dec
lock
mov
jno
daa
mov
sub
push
in
or
xchg
dec
cli
adc
add
inc
icebp
sbb
pop
aaa
mov
jge
sub
mov
lods
jg
std
mov
insl
jp
mov
pop
push
rcrl
dec
dec
movl
sub
mov
iret
sbb
and
cmp
jmp
sub
out
inc
dec
out
mov
inc
hlt
cmpsl
push
push
std
stos
pop
pop
ret
jne
test
rclb
ja
scas
aad
cmp
mov
ret
mov
xor
cwtl
sti
and
xchg
imulb
pop
dec
lea
fildl
push
rcll
pusha
out
stos
inc
jnp
mov
jb
mov
push
or
fimuls
pop
movsb
ret
sbb
test
stc
sub
out
and
popf
in
fldl
cmp
cwtl
iret
sbb
mov
adc
test
xor
scas
lock
sbb
loop
or
xchg
outsb
gs
arpl
xchg
mov
hlt
mov
dec
fidivrs
inc
pop
ret
push
int3
in
inc
in
cld
dec
inc
loope
test
fstpt
jecxz
ja
hlt
int
sar
imul
aas
mov
mov
and
mov
adc
jl
inc
mov
outsb
adc
addr16
imul
and
test
jbe
xor
pop
sarl
js
int
jne
ret
adc
jmp
add
or
sti
xlat
popa
mov
lds
xchg
jbe
mov
push
mov
lods
loope
mov
call
or
ljmp
ret
push
leave
clc
mov
xor
fsubrl
sub
rolb
jp
mov
sub
cmpsb
and
test
inc
push
sbb
push
pop
js
or
or
aam
add
ret
jb
adc
jns
sub
dec
xor
loopne
cmp
negl
xor
push
and
mov
pop
lock
fisubrl
xor
rcr
pop
pushf
fcmovnbe
push
xchg
rol
or
inc
mov
jmp
movsb
jmp
jle
in
arpl
or
or
push
add
jge
adc
jo
push
cs
popf
xor
pop
xchg
cmp
mov
xor
psubsw
loop
push
adc
hlt
outsb
cmp
inc
outsl
ss
dec
je
rcrl
sub
push
mov
add
mov
insb
sub
cmp
mov
inc
adc
and
imul
pop
bnd
push
int
push
jg
pop
add
arpl
inc
adc
fmul
xlat
cmp
rcr
fmul
sub
xlat
lds
in
loope
repnz
sti
std
jns
xchg
cmpsl
jo
cltd
test
bound
mov
xchg
dec
lcall
addb
add
inc
push
add
mov
cli
fsubp
iret
or
lahf
push
mov
add
addr16
fisttpll
push
push
inc
fucom
fwait
mov
stos
dec
or
mov
adc
inc
dec
inc
inc
add
add
adc
and
movb
add
add
jp
xchg
or
sbb
jmp
inc
insb
sti
les
rcll
add
mov
mov
pop
jp
mov
adc
and
sub
xchg
dec
lods
les
lds
pop
leave
mov
mov
pusha
pop
sub
int
mov
iret
or
sbb
jb
and
enter
push
sub
add
insb
arpl
xor
outsb
aam
inc
and
pop
cmp
pop
mov
pop
mov
aam
mov
ss
adc
ret
or
aam
jge
jae
mov
sahf
push
lea
jb
adc
pop
pop
rclb
pop
sbb
push
xchg
fwait
xchg
subb
rcl
insl
pop
mov
sub
inc
lds
subl
ret
xchg
rcrl
dec
sbb
notb
loope
dec
jmp
dec
mov
cmp
sub
dec
push
pop
cmpsb
cmp
push
or
fisubrl
stc
push
xchg
push
out
adc
enter
rorb
add
aaa
push
lods
jo
iret
pop
fwait
mov
add
xchg
mov
xchg
sbb
cwtl
ret
lods
jge
dec
cmp
push
rol
add
adc
xchg
pop
xor
sub
ret
testb
insl
js
sub
movsl
in
jle
lods
xchg
cmpsb
dec
stc
dec
inc
sbb
sbb
nop
pop
or
lret
mov
push
push
sbb
jae
lcall
hlt
outsb
mov
push
mov
insb
and
jnp
cwtl
pop
cwtl
push
mov
hlt
jecxz
push
ret
pop
sub
push
push
rorb
pop
or
pop
sub
add
push
xchg
pop
cmp
sub
xor
fsubp
inc
cmp
inc
popa
mov
inc
add
inc
add
rolb
jo
add
rolb
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
call
add
xor
add
add
add
sbb
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
xor
add
and
add
in
add
add
add
push
lret
add
adc
add
in
add
add
add
pusha
lret
add
rolb
add
add
add
add
add
int3
add
ja
add
in
add
add
add
push
add
add
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
push
add
add
inc
add
add
mov
icebp
cmp
js
jae
dec
cwtl
aas
aaa
inc
enter
arpl
call
jp
xchg
sub
imul
add
dec
pop
sarb
dec
xor
adc
subb
mov
and
pushf
scas
scas
loop
sbb
divb
xchg
mov
lods
pop
xor
outsb
pop
add
and
pop
movsb
dec
add
enter
pop
mov
push
movsb
test
cmp
lahf
into
add
dec
dec
aam
outsl
mov
push
adc
call
xchg
push
aaa
jle
cmp
inc
subl
insb
cmp
xchg
adc
out
adc
popa
in
and
mov
jno
bound
cmpsl
pop
jg
sbb
out
hlt
scas
jg
pop
sub
imul
xchg
xor
in
pop
mov
fsubl
dec
mov
pusha
or
or
je
ret
cmpsb
xchg
out
gs
inc
stos
xchg
jo
xchg
test
sbb
push
ss
lds
inc
lock
fbld
dec
out
outsl
imul
mull
jge
xchg
mov
mov
add
dec
dec
sbb
mov
shrb
int
insb
cmovle
push
mov
sbb
inc
test
iret
sarb
xor
push
testb
in
jle
jp
call
pusha
ss
imul
rcrl
lods
and
scas
mov
mov
cmp
cmp
push
mov
cmp
mov
cmp
cs
stc
sbb
push
pop
cmp
jb
sbb
pop
gs
movsl
push
jno
mov
xor
movsb
jo
cmp
inc
shrl
into
push
cmp
cmp
jge
push
and
sbb
add
test
sub
add
sahf
arpl
shlb
gs
xchg
fbld
movsl
rcrl
xchg
int3
mov
mov
add
fldl
bound
xor
in
mov
outsb
mov
cld
sbb
lock
mov
inc
pop
insb
push
ret
js
cmovb
jne
ret
popa
jno
mov
stc
out
stos
mov
mov
add
xor
scas
loopne
gs
jns
and
jecxz
xor
mov
cmp
push
mov
cmpsl
add
cmp
inc
add
and
clc
jne
movsb
sbb
and
xchg
test
imul
lahf
sbb
cmp
xchg
push
jae
popa
movsb
pop
pushf
pushf
mov
repnz
jns
add
jbe
test
dec
jnp
mov
rcll
cmp
pusha
add
lds
mov
xlat
cmpsb
shrb
xor
xchg
pop
es
xchg
jae
out
push
xchg
xchg
adcb
xchg
cwtl
or
out
xchg
cmp
xchg
cltd
fists
sbb
aad
push
stos
dec
mov
xor
mov
mov
push
gs
pop
jb
push
mov
xor
cmp
or
inc
jg
rorl
in
shr
int
pop
out
jle
adc
dec
and
mov
out
sbb
jno
xchg
inc
stos
cmp
imul
inc
xchg
out
jecxz
push
ljmp
push
fwait
push
xchg
movsl
xchg
arpl
inc
fwait
shrb
cmpsb
mov
mov
xor
psadbw
lea
mov
sbb
js
daa
pusha
daa
cmpsl
fidivs
cmp
and
pop
or
xor
pop
add
xor
or
fadds
and
mov
out
mov
fldt
inc
pop
cmp
daa
popf
mov
fsubrl
jb
xchg
sub
add
ficompl
sbb
and
and
jbe
cwtl
leave
bndstx
aas
jmp
jle
sub
cmpsb
int3
xor
leave
arpl
jne
fninit
mov
nop
push
loope
js
movq
clc
fsubrs
sahf
add
pusha
jns
mov
fbld
negb
pop
pop
ss
xor
sarl
nop
jns
fbld
mov
scas
and
add
aam
lods
mov
fmull
sub
jge
xor
loopne
push
out
clc
out
push
pop
lods
cltd
sbb
aad
arpl
cmpsl
add
sbb
test
repz
pushf
cmp
xor
xchg
scas
jne
inc
test
dec
iret
subb
insb
pop
scas
pop
std
xchg
es
fwait
mov
jb
cs
mov
jno
push
xchg
lods
mov
xlat
sub
adc
fwait
add
pop
and
cs
in
mov
rorb
cmpsl
push
rolb
jmp
adc
nop
push
or
mov
fdivrs
mov
rcrb
sub
mov
jecxz
pop
dec
mov
mov
inc
jae
xor
std
test
gs
xor
xor
sahf
mov
or
mov
jl
xlat
cmpb
ljmp
sbb
pop
in
les
and
ds
daa
and
adc
adc
aad
dec
sbb
add
in
js
scas
mov
arpl
mov
test
sub
ja
cmp
add
outsb
cmpsb
out
jmp
push
mov
mov
sub
add
push
out
imul
or
ljmp
outsl
adc
or
and
into
mov
sbb
xor
adc
sbb
repz
ret
sti
and
loop
adc
push
mov
xchg
cmp
mov
sub
inc
inc
or
push
sti
ucomiss
rcll
rcll
lods
dec
sbb
pop
xchg
inc
jbe
popa
int3
in
pop
daa
cmp
test
loope
dec
sub
inc
xor
stos
into
jnp
or
or
jg
pop
pop
aaa
or
fimuls
in
dec
into
incl
xor
cmc
pusha
push
arpl
sbb
xchg
sub
xchg
sub
add
ret
fs
cmp
xor
add
rorl
lods
or
ss
aas
out
fldl
adcb
scas
inc
xlat
inc
in
mov
frstor
dec
cs
addr16
push
xchg
jnp
pop
push
sub
cmp
push
sbb
ds
xchg
ja
inc
icebp
pop
mov
mov
fadds
jmp
loop
divl
nop
inc
mov
cmp
jp
pop
test
mov
je
std
adc
adc
add
inc
rcrl
jbe
fwait
aam
adc
add
cmpsb
sub
adc
xchg
and
fistl
add
outsl
imull
push
out
movsb
xchg
inc
jne
data16
cmpsl
push
std
jg
sub
rorb
shrb
gs
daa
jns
jne
repz
pop
repz
jmp
lods
sti
or
lret
cmp
pop
test
pop
add
jp
imul
movsl
out
insb
dec
scas
xor
lock
pop
mov
sahf
enter
pop
out
mov
aad
xor
push
test
push
lret
dec
sbb
sbb
insb
mov
sbb
pop
out
and
xor
mov
clc
pop
xchg
rorl
sar
jne
pop
shlb
shl
fldenv
fcomps
clc
test
flds
in
or
jb
inc
push
jnp
adc
and
pop
xor
push
jmp
jp
push
loopne
or
jle
cmp
cli
pop
loopne
fwait
sbb
xor
outsb
adc
insb
xchg
rolb
cmp
test
mov
pushf
sbb
lret
je
pop
cmp
mov
and
sub
out
mov
jnp
repnz
push
add
jnp
pop
mov
inc
int3
sbb
loope
pop
and
shrl
push
pop
inc
sbb
push
fs
outsb
adc
xchg
pop
leave
inc
cwtl
jbe
mov
jnp
sbb
cmpl
lret
xor
jge
jmp
pusha
lods
xor
xor
pop
xchg
cld
xor
cmp
add
fnsave
mov
adc
push
and
ja
stos
pop
pop
adc
adc
sub
sub
jmp
mov
fs
xchg
mov
popf
xchg
or
lods
iret
fdivrs
ret
mov
dec
jae
repz
dec
aam
sbb
mov
negl
subb
imulb
push
lret
mov
rorb
js
jge
ror
xchg
popf
cwtl
jl
push
xchg
movsl
push
and
shll
lea
xchg
mov
inc
adc
ds
addr16
inc
outsl
imul
mov
mov
xor
test
xlat
leave
sub
sub
pop
bound
add
std
add
cmp
and
fdivs
out
jmp
loopne
imul
mov
adc
push
aad
aam
or
and
lret
inc
ror
lods
shrb
imul
jnp
dec
fcomip
push
xchg
stos
cmc
or
sahf
mov
lret
sbb
div
push
cmp
sti
gs
std
aad
ficompl
xchg
popf
dec
cmp
mov
dec
hlt
sarl
sbb
lret
imul
add
pop
adc
mov
push
sbb
leave
mov
mov
aas
push
idivl
push
jecxz
mov
addr16
insl
dec
jmp
lods
lods
movsl
cmp
and
pop
push
fisubrl
jae
xchg
ds
jge
outsb
int3
xchg
and
movsl
jnp
je
push
enter
sti
xchg
out
add
fwait
push
cmp
divb
push
inc
addr16
push
xchg
adc
gs
mov
inc
shrb
pop
xchg
out
cmpb
aam
adc
xchg
aas
lahf
nop
adc
imul
das
sbb
sbb
add
imul
xchg
rol
mov
push
xchg
repz
test
cmp
dec
mov
adc
adc
sarl
inc
mov
push
or
push
lcall
cld
sti
dec
mov
divb
cmp
pop
cmpsl
insl
cmp
fsubl
std
pop
push
repnz
mov
icebp
outsb
mov
cwtl
xchg
lds
popf
pop
pop
sti
arpl
pop
nop
mov
mov
push
insb
clc
mov
repnz
xchg
pop
push
ret
mov
jg
mov
bound
or
inc
mov
out
pushf
out
in
andl
mov
test
jge
mov
outsb
ficoml
xchg
cmp
test
jbe
sbb
test
ss
lock
nop
inc
cli
sub
inc
imulb
mov
inc
in
mov
jl
iret
xor
lcall
es
push
push
or
ljmp
sub
ror
pop
adc
add
push
xchg
or
loope
mov
pop
mov
or
ss
pop
and
sub
insb
mov
jmp
into
pop
das
aaa
inc
call
nop
inc
cmc
sti
mov
pop
inc
jb
outsb
shlb
popf
aad
mov
mov
aam
and
push
mov
ja
adc
sub
cmp
and
icebp
and
mov
lea
icebp
xchg
add
pop
fcmove
clc
sbbl
and
js
sti
mov
popf
inc
sbb
loop
xchg
sbb
pop
mov
lret
lcall
and
ret
cmp
pop
xor
cmp
dec
insb
pop
jle
mov
xor
je
shll
fldenv
jnp
mov
arpl
mov
adc
lahf
sub
clc
xchg
push
pop
sub
or
sbb
fucomip
push
xor
inc
ljmp
es
fisttps
jne
inc
repnz
adc
jnp
cmp
nop
xor
jbe
cmp
and
sahf
inc
ret
out
xchg
dec
sub
fbstp
cmp
sub
jnp
js
mov
pop
add
fbld
and
pop
test
aad
repz
mov
mov
inc
mov
popf
push
mov
cld
out
mov
mov
sub
or
push
xchg
fsubrl
mov
out
xor
scas
enter
das
mov
into
icebp
std
mov
or
pop
jg
xchg
int
add
cmp
xchg
faddl
fidivrl
mov
jle
pop
sbb
or
outsl
mov
js
scas
jns
test
jge
jnp
push
add
out
adc
pushl
in
xchg
cmp
xchg
cmpsl
lock
push
lods
fwait
sti
fidivrs
fcmovu
pop
mov
in
aam
and
adc
mov
and
es
popa
jle
cmp
loopne
insl
leave
mov
lods
and
test
xlat
lahf
sbb
xchg
inc
inc
add
fdivrs
iret
or
arpl
xor
cld
lea
sub
imul
scas
popf
inc
je
fdivs
lahf
inc
aas
or
hlt
ret
loopne
xor
outsl
ja
hlt
into
push
sub
mov
jp
or
jl
and
or
xor
sbb
inc
jl
in
sub
jecxz
pop
add
mov
dec
mull
js
add
repz
movsl
divl
mov
popa
ljmp
repnz
stos
sub
cltd
sbb
leave
iret
lods
ret
imul
fstp
pushf
sub
push
jo
mov
jno
nop
lahf
shr
fimuls
cmp
rcrb
pushf
cmp
movsb
sbb
mov
dec
adc
or
or
notl
test
sub
mov
and
push
je
enter
lock
xchg
inc
mov
mov
out
sbb
arpl
sbb
sahf
mov
call
xor
ja
pop
in
mov
pop
sbb
jae
and
cmp
rorl
jle
icebp
add
adc
lret
notb
sub
dec
enter
movsb
mov
mov
push
les
push
nop
dec
leave
push
in
lods
cli
mov
mov
xchg
lods
stos
add
bound
or
and
inc
xchg
lea
jne
push
fs
sahf
dec
pop
mov
sahf
adc
insl
pusha
sub
jo
testb
lret
pop
xchg
jmp
iret
pop
prefetch
dec
mov
scas
and
dec
mov
adc
iret
jae
xorb
repnz
dec
mov
sub
mov
jne
push
das
gs
movsb
in
xlat
jecxz
nop
cmpsb
rcrl
divb
leave
ret
dec
les
clc
lret
fidivs
adc
mov
fsubr
mov
xchg
sub
ret
jge
idiv
fwait
sbb
test
pop
push
mov
push
int
sub
rorl
sbb
and
push
test
mov
xor
repz
add
and
arpl
loopne
push
mov
imul
sbb
xchg
aad
xor
aam
xor
stc
cmp
push
les
mov
orb
out
fcoms
add
and
or
add
sti
cmp
mov
inc
cwtl
ljmp
lds
jge
mov
clc
mov
cmp
jg
adc
adc
ret
push
in
loopne
pop
mov
push
movsb
inc
imul
leave
add
xchg
mov
cmpsl
pop
sarb
dec
mov
pop
lahf
or
call
mov
and
cmp
sbb
dec
loope
es
or
cli
es
lock
ret
jl
inc
ss
lcall
jp
fcom
shlb
rcrl
push
ss
popf
scas
pop
sub
arpl
dec
popf
pop
and
xchg
ja
shll
sbb
out
mov
mov
mov
inc
repnz
dec
aad
rcrb
or
or
jae
ja
cmp
shlb
sub
pop
fucom
mov
addb
inc
jp
mov
mov
mov
popf
cmp
ss
sub
mov
xchg
xchg
popa
mov
sahf
inc
inc
inc
pop
jge
lahf
jo
sub
jno
lds
pop
insb
mov
addr16
mov
ja
hlt
push
or
fldl
push
and
xchg
cmp
adc
push
shrb
and
pop
mov
leave
lods
inc
testb
loope
sbb
sbb
inc
add
out
fldcw
xchg
jl
or
mov
gs
xchg
jmp
mov
mov
insb
sbb
repz
dec
push
xchg
cld
cmp
leave
iret
mov
bound
cwtl
pusha
aas
jno
mov
mov
mov
add
add
xchg
sahf
jecxz
roll
add
inc
or
pop
xlat
push
mov
pusha
cld
inc
movsb
das
pop
mov
mov
out
pop
jmp
movsl
jge
push
add
pop
inc
jb,pn
mov
dec
pop
outsl
rcll
mov
fildl
sarl
or
push
push
call
xor
mov
sbbl
popf
nop
outsl
pop
insb
insb
loope
adc
sub
mov
inc
mov
jg
inc
pop
cmpsl
push
leave
pop
ds
cli
mov
enter
test
insl
jmp
lods
or
in
test
or
scas
push
and
bound
arpl
mov
and
imul
lret
xor
xchg
aam
pop
mov
cwtl
dec
jle
sub
mov
sub
pop
and
out
xchg
mov
add
cltd
dec
out
aad
imul
rolb
leave
adc
xchg
stc
push
mov
inc
xlat
add
mov
xor
rorl
loopne
negb
call
aas
lds
fdiv
es
jnp
sub
fs
cmp
jb
xchg
pop
in
push
scas
lea
pop
popl
jno
push
sub
or
xchg
cwtl
fdivs
inc
and
test
pusha
popf
icebp
add
aam
xchg
push
cld
add
push
or
xchg
inc
rep
out
int
imull
daa
and
xchg
xchg
lret
cmc
pusha
sbb
ss
shlb
ffree
xchg
mov
pushf
out
hlt
cmp
and
dec
jg
xchg
test
in
lock
testb
clc
negb
push
pop
xor
xor
addr16
fcoml
out
das
lods
sbb
sub
inc
andb
hlt
push
lret
jge
mov
ljmp
adc
ljmp
or
jl
inc
ret
aaa
xchg
mov
js
jo
mov
and
mov
adc
cs
add
pop
std
dec
jbe
pop
mov
adc
adc
jmp
aas
mov
dec
jg
cwtl
shl
push
mov
dec
pop
push
xchg
xchg
out
and
jno
in
mov
scas
adc
outsl
or
cmc
jmp
xchg
in
jnp
ljmp
mov
xchg
cmp
lods
sti
dec
aam
xor
insb
xchg
jne
daa
xchg
mov
pushf
xor
xor
icebp
xlat
scas
xor
push
aad
inc
cmp
sub
stos
pop
jp
push
mov
jecxz
dec
xor
mov
jo
add
mov
sarb
pop
sub
je
loope
dec
imul
pusha
mov
scas
or
idivb
mov
cltd
dec
cmp
sbb
test
push
push
and
push
push
xchg
movsb
add
jp
inc
loopne
out
addb
xor
push
stc
push
clc
pop
call
lds
mov
mov
or
pop
loopne
data16
pop
fnstenv
les
and
mov
into
enter
cli
mov
jns
or
gs
push
movsl
pop
adc
and
orb
push
out
push
inc
andb
mov
cs
jge
and
fisubrs
aad
lock
mov
adc
test
mov
lock
inc
testb
cmc
ss
inc
adc
scas
mov
test
sbb
xchg
adc
inc
xchg
pop
addb
mov
imul
rol
add
aam
lods
mov
push
mov
xchg
cli
hlt
xchg
gs
leave
mov
sub
lret
fsts
loopne
push
test
cmp
scas
cld
adc
pop
mov
jo
cmp
aam
push
jl
add
cmp
adc
adc
mov
adc
jl
or
mov
pop
mov
dec
mov
ret
push
xor
hlt
mov
cmp
push
scas
mov
pop
or
sbb
cmp
stc
daa
lcall
mov
movsl
mov
insl
lret
cltd
sub
jno
push
inc
ret
icebp
push
out
jl
and
xchg
sub
xchg
push
sbb
mov
xchg
cmp
out
jp
mov
cmpsl
dec
jge
cld
mov
int3
lds
out
mov
jns
lea
jl
sub
mov
int3
call
pop
aam
adc
leave
inc
or
rcll
mov
jmp
lea
mov
lea
push
xor
fwait
dec
out
movl
sarl
cs
sbbl
pop
mov
insb
into
mov
in
or
push
xor
pop
shrb
cmp
jecxz
adc
sub
push
out
dec
jae
sbb
sub
xor
xchg
call
ret
pop
lret
insb
cltd
xchg
add
popf
paddb
test
js
cltd
pop
push
sub
sub
xchg
aaa
push
test
mov
fcmove
in
test
inc
daa
popf
dec
cli
inc
push
mov
mov
push
icebp
or
mov
data16
out
push
mov
dec
xchg
and
movl
icebp
ja
fs
cmp
fwait
aas
gs
mov
call
pop
jno
test
out
dec
lahf
cmp
or
lcall
test
mov
xor
out
imul
jb
nop
das
sahf
ljmp
jno
xchg
pop
mov
rcll
repz
mov
sub
lret
xor
lret
cli
xchg
push
inc
data16
push
sub
ficoml
mov
pushf
mov
pusha
adc
sbb
mov
jne
enter
cmp
mov
jp
movsb
adc
mov
and
dec
aam
add
sbb
arpl
push
sbb
pop
inc
cli
ja
mov
pop
mov
popf
outsb
mov
inc
ljmp
pop
adc
push
dec
cmp
xor
outsb
rorb
pop
test
jmp
jo
add
xor
inc
fcoml
fisttps
aas
cmc
imul
mov
test
iret
mov
push
lahf
and
pusha
je
lret
inc
pop
add
xlat
or
xor
shll
pop
sub
push
xor
push
dec
ljmp
xor
insb
push
xchg
inc
pop
xchg
addr16
insl
push
cmp
out
mov
jb
mov
jo
jl
sub
xchg
cs
jmp
dec
nop
popf
in
dec
cmp
mov
push
xor
xchg
xor
inc
xor
out
or
dec
add
inc
jmp
or
in
mov
stc
sahf
mov
insl
xchg
push
scas
or
in
adc
jp
das
sub
jb
iret
jne
jbe
daa
or
mov
or
rol
sub
iret
pop
cmp
and
sub
daa
cmp
inc
fldt
data16
and
ret
xchg
dec
adc
andb
mov
xor
jecxz
popa
aas
jb
adc
repz
jbe
mov
outsb
cltd
jae
xchg
mov
mov
mov
out
mov
call
mov
ja
aad
sbb
push
push
push
scas
lret
xchg
popa
xchg
imul
aad
jl
lods
push
ss
fdivs
dec
xchg
jo
lods
mov
xchg
call
mulb
stc
popf
mov
testb
repz
je
xchg
jb
movsl
bound
inc
andb
out
mov
pop
adc
and
add
inc
rcll
mov
jns
movsb
cmp
lea
cld
test
fsubrs
adc
idiv
lea
mov
xor
ret
dec
mov
cmp
iret
and
hlt
dec
ficoml
popa
xchg
nop
mov
mov
dec
sub
add
push
loope
mov
bound
xor
sbb
idivl
insl
ja
inc
scas
lods
mov
leave
cld
enter
push
xchg
mov
gs
pop
cmp
push
fsts
add
dec
subl
cmpsl
int3
or
mov
push
je
inc
dec
inc
xchg
sbb
or
adc
inc
and
daa
inc
leave
dec
fidivs
push
dec
aaa
xchg
xor
mov
sub
sub
cli
mov
pop
sti
mov
inc
clc
mov
int
push
mov
push
sbb
jno
outsb
xlat
imul
and
dec
aas
andl
adc
inc
std
pop
call
popa
dec
dec
setne
test
dec
icebp
in
xor
jnp
and
daa
adc
mov
mov
nop
sahf
add
push
pop
cmp
mov
jb
push
mov
pslld
int
lods
dec
mov
xor
lret
mov
cmp
xchg
jbe
int3
push
sahf
leave
add
movsl
inc
cmpsb
addr16
inc
fbstp
sub
jo
mov
or
jecxz
sarl
repz
mov
into
or
in
popa
adc
daa
lea
xchg
sbb
mov
sarl
clc
lds
or
cmp
bound
cmp
cmpsb
pop
imul
push
mov
jmp
fistps
fsts
test
lock
test
sbb
je
rcll
adc
add
loope
cmpsb
add
push
je
enter
aad
or
imul
les
pop
xchg
mov
dec
sbb
inc
push
and
rcll
xchg
loop
push
out
add
push
push
cmpsb
and
inc
rolb
jnp
outsb
push
dec
jno
jge
sti
dec
mov
fcmovb
test
pop
nop
insb
pop
or
mov
int3
or
pop
iret
push
movsl
movsb
ret
out
dec
push
lcall
iret
push
outsl
imul
sbb
movsb
dec
lock
mov
orl
sbb
jp
fwait
xchg
cmp
dec
imul
mov
mov
dec
inc
les
dec
inc
mov
or
inc
push
push
jmp
mov
jno
or
xchg
orb
or
adc
pusha
arpl
sub
and
shrb
scas
xor
das
fsubrl
and
mov
adc
push
pop
jmp
fstps
daa
jnp
out
daa
and
add
and
and
outsl
pop
dec
dec
shrl
push
daa
mov
xchg
xor
scas
cwtl
sbb
sbb
inc
cmc
rolb
das
push
sub
cmp
mov
mov
add
adc
xor
add
sub
adc
jb
jbe
and
pop
fisubl
fldl
andb
testl
ret
add
sub
jmp
insb
sbb
andl
pop
outsl
mov
and
out
add
je
aam
cmc
negl
cmp
subl
mov
push
mov
popa
sub
pop
xchg
jbe
or
fsub
jae
test
sbb
and
shlb
push
shll
dec
pop
dec
in
popf
fwait
mov
adcl
and
cs
repnz
cmc
outsb
cmp
loop
jp
icebp
sbb
xchg
ja
int
pushf
mov
mov
pusha
adc
xchg
int3
xor
lds
aad
mul
bound
mov
pop
loop
push
adc
test
dec
gs
pushf
sbb
inc
test
and
pop
and
xchg
test
dec
sbb
movsb
dec
das
mov
adc
in
stos
or
xor
cld
ret
mov
pop
in
sbb
sub
int3
mov
cld
repnz
shlb
sub
shl
jns
inc
push
xor
xor
nop
inc
or
lock
jno
xchg
push
int3
js
jge
cmpsl
adc
outsb
stos
adc
fldln2
pop
das
je
fdivrs
mov
pop
inc
ljmp
jl
cmp
push
mov
aaa
sti
push
mov
adc
inc
push
adc
scas
subl
cmp
mov
pop
sarl
jae
int3
lods
nop
std
cmpsl
fdivrs
jne
das
popf
mov
fstps
repnz
sub
popf
ret
cld
hlt
leave
push
inc
lret
pop
dec
bound
bnd
mov
jecxz
push
es
xchg
xchg
xor
jbe
inc
outsb
and
adc
and
push
jbe
mov
repnz
add
dec
lcall
inc
jp
mov
loopne
insl
test
or
mov
mov
lret
lods
rcpps
fs
pop
aam
inc
xchg
pop
sbb
js
ds
or
fldl
inc
inc
add
push
and
loopne
jp
fwait
cmp
call
push
shr
adc
add
inc
popf
andl
mov
enter
fildl
add
idivb
aaa
test
xchg
dec
pop
pusha
inc
icebp
es
in
inc
mov
or
sbb
push
inc
cmp
add
xor
mov
lret
imul
xchg
subb
shr
push
stos
jno
or
sbb
cmp
dec
mov
sbb
xchg
loope
push
shrl
sbbl
adc
sbb
and
inc
inc
xchg
test
or
movsb
jns
les
dec
mov
movzwl
aas
outsl
stc
pop
call
mov
adc
int3
push
out
lret
jno
pop
mov
dec
lcall
sbb
subl
addl
ret
in
jb
and
aam
mov
push
pop
std
ficoml
or
push
shl
outsl
dec
pop
mov
jg
and
mov
jmp
add
shrb
mov
or
pop
mulb
mov
add
test
scas
mov
aam
cmpl
pop
int
popl
sbb
xchg
jo
xor
shl
ss
xor
and
cmpsb
fcoms
mov
pushf
popf
sbb
mov
jno
inc
lods
outsl
leave
aad
loop
rclb
into
sub
xor
sub
push
push
xor
shl
cmp
dec
add
inc
mov
pxor
jl
mov
scas
adc
cmp
mov
inc
std
sub
cmp
mov
and
jns
enter
into
mov
jnp
xchg
sarl
mov
mov
and
data16
movsl
jge
mov
movsl
and
mov
mov
or
fnsetpm(287
loop
jnp
lret
fdiv
adc
mov
jge
pop
int
dec
and
or
sbb
hlt
fs
pusha
lret
jo
cmp
xchg
cld
das
mov
das
sbb
xchg
stos
xchg
mov
or
xor
mov
adc
mov
inc
inc
sbb
js
cmpsl
jb
ret
jecxz
int3
pop
and
outsl
in
xor
pushf
aad
add
mov
xchg
fmuls
xchg
jo
call
xor
jne
dec
mov
mov
adc
push
dec
icebp
xor
mov
jl
fstps
cmp
and
ret
add
pop
sub
and
xchg
dec
adc
xlat
aad
sbb
rorb
aas
inc
andl
scas
ficoml
pop
imul
and
mov
push
std
fildl
xor
push
idivb
inc
dec
fcoms
push
mov
or
mov
sbb
fists
stos
mov
ja
cmpsl
cmp
and
jns
bound
push
popa
jecxz
mov
cmpsl
sub
jg
cmc
bound
movsl
xchg
cmpl
dec
in
pop
pop
or
cmp
jnp
subl
mov
shlb
gs
mov
jns
cmp
jbe
loop
ljmp
in
adc
bound
lock
in
add
mov
movsl
hlt
rol
mov
or
push
ret
mov
les
les
xchg
jb
jae
fidivl
testb
pop
xor
mov
sbb
shlb
rolb
out
mov
pop
and
sub
add
sahf
inc
test
outsl
jge
and
mov
fisubl
daa
fstpt
shl
sub
popf
add
and
adc
fists
bound
push
int
inc
mov
shlb
pminsw
movb
mov
aaa
mov
outsl
fmul
xor
or
pop
ja
adc
sub
pop
jbe
and
inc
inc
push
sbb
jb
std
clc
out
jmp
cmpsl
jne
lods
in
jge
cltd
and
push
clc
add
push
ss
push
aaa
stos
les
lea
fmul
lahf
mov
jns
jp
aad
cltd
mov
or
sub
sub
jo
sahf
push
cmp
xor
daa
jne
sahf
fadds
jmp
loop
add
sbb
dec
xchg
xor
into
cmp
pop
daa
mov
insb
mov
fisttpl
inc
sbb
xchg
mov
mov
mov
inc
call
and
jb
scas
mov
leave
adc
sub
jo
xchg
push
push
cltd
jle
adc
int
mov
faddp
add
adc
add
mov
dec
or
inc
cmpsb
pushl
lahf
push
adc
imul
mov
xor
jno
ret
cmp
xor
push
xor
sub
mov
faddl
push
fucomi
into
push
repnz
xchg
lret
and
mov
outsb
aas
ljmp
fsubrl
stos
cmp
test
push
push
insl
pop
push
dec
mov
popf
sbb
inc
les
mov
xchg
xchg
mov
cli
repz
sarb
clc
aam
sahf
pop
or
and
ljmp
mov
lahf
leave
inc
nop
repz
cmp
std
ljmp
in
jnp
push
xchg
roll
addb
rclb
jb
insl
jl
lds
in
ds
data16
fcmovu
gs
adc
das
sub
std
loop
insb
xlat
pop
hlt
dec
xor
mov
pop
xchg
mov
inc
and
mov
adc
aas
mov
mov
cmp
or
pop
nop
stos
xchg
mov
push
and
pop
lahf
rorb
mov
sbb
mov
test
mov
xor
jge
xchg
add
lods
mov
mov
dec
xchg
cmp
adc
call
shl
pop
mov
jo
adc
dec
lret
or
jb
out
shlb
sahf
scas
fsts
xchg
dec
mov
cmp
mov
subl
jl
stc
lret
push
in
ret
std
out
sbbb
sahf
pusha
sub
mov
inc
sahf
jno
outsl
jg
aas
xchg
cmp
hlt
daa
arpl
add
gs
ret
sub
xor
adc
mov
das
sbb
mov
rcrl
jo
imul
cltd
pop
test
and
push
push
mov
add
mov
out
xchg
clc
mov
ljmp
lahf
xor
mov
int
push
mov
aaa
and
inc
and
std
sbb
loope
add
push
test
xlat
jno
insb
shlb
cltd
mov
xor
popf
stc
mov
inc
mov
add
sub
xchg
sub
mov
mov
cmovnp
insl
out
loop
imul
push
js
test
or
mov
andl
ljmp
cld
shll
mov
sub
push
jns
mov
mov
out
push
cmpb
iret
fimuls
je
push
imul
cld
and
pop
cmp
push
test
sbbl
xorl
int3
sub
sub
dec
jp
test
inc
adc
int
in
pop
mov
je
sub
jp
scas
push
dec
lret
mov
xor
cmc
mov
in
jne
sub
loop
xchg
imul
xor
imul
popa
test
dec
ds
imul
jmp
jmp
add
add
rolb
mov
ficomps
jne
sbb
mov
ja
inc
jmp
daa
mov
and
xchg
sti
cmpb
mov
pop
jnp
dec
mov
and
dec
imul
and
cmp
sub
cmpsl
xchg
sub
push
jmp
cmpsl
adc
shlb
mov
mov
mov
sbb
stc
mov
sti
cltd
into
dec
sbb
jae
scas
mov
imul
mov
dec
xor
jo
ljmp
popf
mov
mov
icebp
dec
outsl
cmc
cmp
dec
xchg
mov
lret
daa
sub
xlat
subb
cld
fadds
cmp
sbb
jnp
inc
pop
or
test
addr16
adc
xchg
inc
adc
cmp
ret
jb
sarb
je
cwtl
jmp
or
add
lret
ret
imul
test
into
sbb
add
fmuls
clc
lock
jle
pop
push
push
cmc
mov
leave
mov
ds
dec
paddb
jb
and
xor
fistpl
jae
int3
stos
xor
or
mov
xchg
cli
or
les
mov
dec
dec
push
jle
mov
addr16
push
hlt
xor
jmp
das
pop
gs
and
cmp
enter
ret
insb
and
pop
pop
adc
enter
dec
mov
cld
insb
das
jae
xor
or
js
imul
or
cs
iret
add
int
bound
ljmp
push
cmp
and
and
popa
out
in
mov
jns
test
lcall
out
cmp
fildll
fisttpl
sub
inc
scas
test
lods
sbb
add
sbb
les
jnp
bound
pusha
nop
ret
jl
ljmp
out
outsb
pop
in
inc
inc
aad
sbb
hlt
out
lea
and
or
xlat
out
stos
cmp
ret
test
je
rcl
lret
cmp
decb
push
cmp
mov
mov
out
xor
xor
sbb
test
sbb
cld
outsl
cmpsb
add
dec
inc
push
jns
jno
loop
add
imul
add
mov
mov
outsl
fdivs
mov
inc
pop
out
sub
repnz
cmp
jp
bound
dec
push
mov
and
xor
mov
divl
mov
jns
dec
and
pop
mov
xor
leave
pop
repnz
fs
lret
mov
inc
sub
imul
jbe
pop
pop
or
orb
sbb
push
in
ss
mov
or
mov
cmc
pushf
inc
mov
lret
imul
cmpsl
pusha
jno
orl
es
rolb
cmp
hlt
pop
pop
dec
cmpsb
pop
loopne
adc
sbb
add
mov
roll
adc
faddl
mov
mov
mov
jl
lods
lea
push
pop
js
sub
adc
or
es
aam
adc
je
sbb
push
les
inc
jmp
xor
testl
aad
dec
test
inc
xor
vpunpckhbw
add
xchg
mov
pop
popa
push
test
sahf
sub
sbb
icebp
sahf
idivl
cmp
jmp
sbb
pop
fsubl
ja
mov
mov
stos
mov
inc
or
in
lock
mov
and
call
xchg
xchg
loope
sbb
cmp
adc
cmp
mov
repnz
xchg
jmp
xlat
cmpsl
pop
shll
pop
fcompl
jle
outsb
cmpsb
fstl
xchg
loop
mov
movsb
jp
jb
push
cmp
add
adc
add
cmpsl
aam
cmp
add
shl
sub
add
mov
cmpsl
jnp
shr
inc
jg
outsb
jbe
mov
cli
ret
and
push
push
imul
and
cs
frstor
sarl
add
scas
xor
cltd
fidivl
es
shlb
lcall
push
inc
in
push
xlat
jg
pop
lods
xor
adc
push
adc
sbb
pop
push
sub
test
cmp
dec
pop
stc
pushf
idivb
dec
push
mov
sbb
lock
mov
outsb
sub
aam
insl
andb
or
mov
test
aas
jp
jno
call
mov
in
mov
addr16
or
sbb
test
jle
sub
sbb
mov
nop
pop
fisubrl
loope
adc
aaa
or
aas
icebp
inc
cmpsl
add
dec
or
aaa
cmpsb
adc
inc
push
or
dec
sbb
mov
aaa
nop
fsubr
mov
xchg
loop
jl
pop
shlb
aad
movsb
mov
in
jnp
pop
mov
inc
jmp
repz
out
push
xchg
test
pop
fiaddl
or
addr16
pop
inc
xchg
fdivrp
jo
pop
dec
mov
jbe
pop
into
jne
stc
mov
iret
jg
mov
add
cmp
adc
aam
inc
int3
xchg
mov
dec
les
inc
add
jecxz
into
pop
mov
mov
in
dec
and
xchg
cwtl
or
xor
enter
mov
push
inc
stos
mov
repnz
and
cmpb
mov
jns
das
pop
mov
fidivrl
or
jl
ja
cmc
sahf
sub
adc
pop
jecxz
and
xlat
lods
pop
xlat
jns
mov
cmc
dec
lret
sbb
or
repz
in
pop
test
dec
inc
int3
or
push
inc
cmovno
push
inc
cmp
test
stc
icebp
pop
inc
mov
inc
push
dec
iret
xchg
in
bound
jp
push
push
ja
cmc
or
xchg
in
sub
xor
scas
mov
sub
mov
xor
out
cmpsb
arpl
xchg
movsl
add
mov
dec
sbb
stc
adc
int3
jle
cs
mov
mov
sbb
add
scas
loope
lea
ret
cmp
call
lret
dec
sbb
movsl
ljmp
lcall
sbb
stos
pushf
add
sbb
ljmp
in
repnz
nop
aas
loop
imul
iret
fld
enter
js
dec
bound
shll
cmp
dec
aad
adc
imul
cmc
dec
sbb
mov
call
mov
aaa
cltd
adc
and
and
pop
sbb
fstps
cwtl
in
jnp
rcrl
call
push
push
sbb
xchg
inc
pushf
sub
insb
movb
pop
pop
jle
or
ret
add
jns
cltd
cwtl
jecxz
dec
jbe
mov
pop
pop
dec
in
inc
or
sub
xchg
mov
inc
dec
rcrl
mov
aas
arpl
test
lods
js
in
mov
test
inc
pop
dec
sub
xor
imul
cmp
sub
outsb
mov
inc
mov
adc
data16
cld
imul
push
mov
fcomi
sub
xchg
std
loope
pop
jl
mov
push
test
sub
mov
gs
and
pop
sahf
lret
add
aam
in
jno
pop
jge
imul
mov
stos
xchg
loopne
icebp
push
js
sub
inc
addr16
cltd
and
jb
pop
sub
sbb
jl
or
push
rcrl
nop
fimull
lds
xor
push
cmp
or
pusha
and
in
lret
mov
inc
add
rol
das
dec
add
ja
jmp
add
add
decb
icebp
lods
push
insl
rorb
pop
stos
xchg
cld
sub
loopne
repz
pop
add
nop
int3
jecxz
sbb
sub
enter
call
and
push
fwait
ret
lahf
movsl
insl
test
pop
imul
xchg
or
jb
and
iret
jmp
add
call
mov
sbb
dec
pop
loopne
mov
das
dec
xchg
pop
pop
push
push
and
mov
add
ret
scas
mov
pop
mov
aad
pop
iret
add
xchg
in
inc
pop
out
xchg
push
loop
adc
rclb
add
loopne
dec
sbb
repz
add
andb
or
je
xor
sub
vpcmpgtw
ja
pop
mov
les
rolb
jmp
xchg
mov
nop
fistpll
inc
adc
adc
or
inc
out
shr
ret
data16
popf
lahf
jg
mov
mov
fdivrp
xor
mov
mov
popw
jne
adc
sbb
adc
fdivs
lds
jns
or
push
popf
ret
push
mov
lock
cmp
or
push
or
hlt
not
xchg
adc
sahf
lds
popa
push
adc
cmpsl
jmp
icebp
mov
cmp
add
dec
mov
scas
inc
jg
mov
mov
icebp
lods
ss
xchg
sbbb
movsb
pop
adc
fwait
enter
add
adc
dec
or
add
pop
fistps
je
push
push
icebp
loope
jecxz
or
adc
add
sbb
movsl
mov
test
xchg
adc
loop
push
pop
or
sbb
shlb
mov
test
pop
fs
cltd
or
inc
pop
lods
test
add
inc
in
jae
xchg
pusha
std
adc
fwait
in
pop
or
add
outsl
outsb
scas
or
dec
mov
loope
into
xor
popa
imul
lea
fs
sub
mov
add
fbstp
jae
sbb
popa
arpl
adc
dec
mov
jmp
sahf
pop
ret
mov
pop
jp
lret
push
enter
and
arpl
cmp
inc
adc
ret
dec
fwait
xor
pop
pushf
das
push
mov
mov
inc
movsb
jns
push
scas
push
insb
sahf
ret
enter
or
jne
out
aas
outsb
and
dec
popa
dec
outsb
xchg
pop
aas
dec
loope
xor
inc
in
imul
push
sbb
cmp
add
fcomps
mov
dec
popa
ret
aas
dec
push
add
push
jb
rorb
daa
jle
testb
or
add
lods
std
push
jge
or
pop
and
and
mov
and
sarb
xor
jbe
dec
lods
das
stos
gs
mov
add
or
cli
push
lods
push
xlat
mov
mov
or
nop
mov
pop
scas
fmuls
das
imull
fadds
cltd
ljmp
int3
xor
sahf
xchg
push
xchg
daa
xchg
aas
imull
mov
adc
adc
fst
pop
jo
add
mov
dec
test
sub
and
pushf
adcb
jmp
lret
adc
clc
int3
lods
and
shll
mov
sbb
lds
fcmovb
adcl
cmp
add
xlat
mov
cli
xchg
xor
roll
pushf
sbb
jno
mov
movsl
and
jb
mov
dec
out
rorb
test
xlat
sbb
pop
shr
subb
push
mov
mov
lahf
jg
scas
popa
mov
push
repnz
and
push
lret
daa
mov
mov
scas
lock
xor
pop
int3
pop
les
mov
xlat
push
insl
mov
aaa
mov
xchg
cmp
jecxz
scas
xchg
mov
xor
xor
inc
lock
lds
xor
cs
std
mov
mov
in
mov
pushf
loope
mov
or
loope
outsl
add
sbb
xor
divl
shl
lds
imul
cli
adc
dec
pop
push
xor
xlat
insb
pusha
pop
push
or
aaa
lahf
adcl
mov
inc
scas
pushf
mov
push
push
xor
test
int
sub
pushf
mov
adc
daa
repnz
idiv
xchg
inc
ljmp
mov
insb
jb
or
fmuls
test
sti
mov
ljmp
push
dec
imul
imul
repnz
mov
mov
iret
mov
cmp
das
aam
jp
push
pop
mov
dec
push
jp
push
out
scas
aam
scas
inc
push
incl
or
sahf
outsb
mov
inc
in
lds
movsb
sbb
pushf
push
cltd
fnstsw
outsl
push
repz
inc
pop
mov
mov
sbb
fwait
mov
decl
popa
ljmp
fcompl
rcll
push
and
imull
inc
call
out
movq
xchg
cs
inc
insb
push
dec
mov
loop
cmpsl
movsb
and
nop
enter
outsl
psadbw
loop
ret
and
aas
sahf
adcl
xorl
jnp
cmpsb
cmp
fnstcw
scas
fnstcw
push
push
popa
jecxz
mov
aaa
fistl
mov
mov
add
inc
ds
mov
adc
mov
dec
mov
pop
in
loop
sub
push
sub
jmp
fwait
mov
imul
or
pop
aam
jp
negl
mov
xor
lds
arpl
sub
lods
shll
andb
mov
fs
fldl
dec
xchg
nop
xor
in
out
jle
sti
add
insl
inc
aam
test
fs
xchg
ljmp
jl
das
sub
push
push
and
imul
outsb
and
in
sub
fbstp
lcall
fcompl
cs
mov
jp
or
push
cltd
lods
sbb
dec
jle
mov
out
xchg
mov
xchg
add
sub
cmc
fcompl
xchg
jg
sub
hlt
pushf
enter
mov
lret
das
push
cmpsl
insb
xor
jp
fldl2t
mov
mov
sbb
sub
in
mov
iret
jmp
aaa
test
mov
mov
mov
sahf
or
push
adc
bound
movl
mov
xchg
mov
cmp
lahf
xchg
in
xchg
jg
lahf
into
js
and
ljmp
in
out
cmp
call
pop
negl
ljmp
adc
fmuls
jae
cltd
rcrb
pop
jo
push
loop
ljmp
filds
mov
jo
fistl
adc
fwait
imul
mov
test
pop
xchg
mov
push
data16
or
and
jp
jne
mov
inc
and
int
fmul
xchg
bound
lods
jmp
movsb
sub
je
mov
es
mov
sbbl
cmp
cmovns
movsl
movsl
das
push
shl
in
decl
pop
lock
fbstp
push
nop
push
sub
stos
push
or
in
pop
shlb
pop
inc
in
fwait
or
sub
into
xchg
fsubl
push
daa
xorl
imul
stc
jle
push
addr16
sub
sub
push
js
cmp
cld
cmp
add
cmp
lock
lds
push
iret
shll
push
scas
cli
mov
sbb
int3
xor
decl
jbe
or
pop
out
inc
loopne
icebp
jge
or
out
cltd
loope
mov
movsb
test
xor
scas
fstpt
stos
jb
mov
mov
out
mov
dec
int
add
int3
je
lcall
pop
movsb
push
movsl
push
jg
out
cwtl
xor
mov
dec
cmp
aaa
inc
mov
sub
or
push
cmp
aad
mov
jle
and
loop
stos
enter
inc
pop
pusha
mov
fildl
mov
push
jp
mov
les
lock
or
adc
xor
pop
call
stos
lds
popa
popa
pop
sbb
push
xor
gs
stos
push
aas
mov
out
mov
out
sub
frstor
cmp
leave
and
pop
jle
pop
repz
jne
pop
rcll
push
mov
sarl
dec
adc
push
mov
and
jns
mov
jecxz
and
cli
cli
fimuls
mov
pusha
nop
imul
push
jne
stos
cld
and
lods
out
dec
fisubl
push
movb
mov
popf
dec
int
aaa
jbe
in
xchg
inc
stos
pop
orb
pop
dec
xor
in
jl
and
fsub
inc
cli
mov
mov
pusha
pop
test
and
cmp
xlat
je
mov
in
mov
sbb
pusha
lret
adc
pop
imul
sbb
shl
xlat
mov
pushf
and
ss
push
call
push
pop
add
sbb
jmp
fisubs
sbb
sub
gs
dec
push
loop
clc
fdivr
mov
jmp
outsl
addr16
lahf
jmp
pop
rclb
cmp
adc
mov
les
ds
lods
sti
pop
and
sbbb
add
sahf
dec
adc
dec
out
ret
pop
push
lahf
pop
repnz
rep
xchg
sub
cmp
fildll
and
lock
rclb
imul
and
jns
cmp
js
or
ret
mov
pop
out
cmp
push
and
dec
clc
or
stos
mov
xchg
dec
div
ljmp
jno
pop
mov
daa
in
ja
test
inc
jmp
jno
xchg
gs
out
push
xor
inc
xchg
and
dec
mov
in
dec
jge
lea
sbb
cmpsb
cmp
subl
fimuls
repnz
mov
push
cmp
mov
fsts
data16
and
in
ljmp
out
inc
xchg
cmpsl
in
xchg
cmp
cmc
in
and
jbe
enter
loop
push
loop
popa
push
arpl
sub
mov
lcall
adc
mov
cmpsb
push
xor
xor
jns
rclb
nop
or
cs
mov
mov
xor
in
testl
cmp
fcmovnbe
arpl
scas
inc
adc
loopne
ss
xor
stos
mov
mov
or
xorl
roll
shrb
je
sbb
mov
sbb
pop
sbb
xor
iret
add
dec
sbb
inc
and
in
push
sbb
xor
jnp
sub
or
test
sub
xchg
dec
inc
mov
arpl
decb
mov
jnp
testl
aam
jl
rolb
mov
jmp
pop
xchg
arpl
add
sub
jecxz
leave
pop
push
cs
inc
cmpsb
bound
xor
imul
sub
leave
clc
das
inc
xchg
lret
add
jg
push
in
xor
mov
mov
pusha
push
mov
jp
test
pop
cmpsb
adc
xchg
or
sub
jle
test
xorl
jl
mov
loope
dec
movsl
mov
sbb
mov
push
sub
or
jmp
cmpsl
sarb
dec
and
xchg
das
inc
scas
js
mov
jb
jae
ret
jns
fcoml
push
lcall
imul
aaa
mov
inc
lahf
pushf
jg
inc
cld
rcrb
mov
stos
xchg
repnz
xor
lret
or
add
xchg
jl
cs
sbb
out
inc
fwait
xchg
lret
dec
cld
cwtl
call
or
or
push
mov
pop
jno
ds
mov
mov
into
movsl
inc
push
xor
popa
popf
xchg
mov
xor
push
test
mov
movsb
arpl
mov
addl
xchg
es
or
ret
dec
imul
sub
adc
mov
bound
ret
rcll
loop
in
fmull
sahf
xlat
int
pop
xchg
mov
pop
pop
push
adc
test
sub
or
pop
popf
bound
testb
xchg
mov
dec
dec
pop
jp
adc
rcrb
pop
sbb
mov
fwait
mov
fistps
jbe
push
xchg
mov
adc
out
or
ljmp
stos
out
jnp
mov
or
popa
dec
iret
sbb
call
stc
outsb
add
cmpsl
cmp
leave
mov
clc
sub
fdivrs
pushf
cli
stc
push
jecxz
arpl
mov
fists
pushf
inc
push
xchg
clc
loope
xor
lahf
enter
add
fbld
push
lcall
mov
xchg
cli
lret
sbb
push
ret
sbb
jle
push
lods
pop
lahf
push
jmp
inc
adc
jmp
push
sbb
popa
shl
es
xor
inc
or
call
test
xchg
pop
mov
test
scas
adc
popa
xchg
stos
inc
jecxz
inc
jp
jge
lods
pop
arpl
imulb
xchg
and
stos
inc
out
mov
sub
in
jno
outsl
popa
lcall
adc
dec
and
cmp
sbb
push
lahf
pop
push
adc
andl
jns
pop
or
inc
orl
cld
cmpsb
idivb
dec
stc
xor
repnz
call
push
std
dec
or
sar
idivl
and
dec
rorl
cmp
cmc
adc
push
mov
das
xchg
insl
out
pop
mov
sub
sbb
das
inc
jmp
cmc
scas
lret
mov
dec
mov
xor
pop
cmpsb
lock
sub
out
cmp
inc
mov
std
xchg
mov
xchg
mov
insl
pop
inc
pop
pcmpeqw
sbb
cmp
test
imul
fsts
into
jmp
insb
and
jne
mov
sbb
xchg
mul
lea
pop
inc
or
xchg
jl
in
lahf
or
xchg
add
lock
mov
mov
data16
cmpsl
shlb
cmp
jmp
xor
push
test
mov
popa
pop
inc
call
fiaddl
lret
push
adc
jge
inc
jle
fsub
icebp
mov
xor
xor
shll
pop
and
ja
in
pushf
cmp
loope,pt
pop
sub
sub
in
movups
fnsave
mov
int3
andl
mov
test
daa
out
push
inc
hlt
jns
inc
test
cs
test
mov
pop
leave
mov
and
xchg
xor
jae
sahf
push
es
aas
jp
cmp
dec
adc
pop
mov
jno
cmp
pop
les
fnstsw
addr16
push
push
adc
jbe
call
repz
loopne
loope
xchg
iret
ss
leave
push
xchg
adc
in
mov
mov
nop
int3
nop
scas
in
push
fwait
imull
jnp
add
jnp
cli
das
out
into
cmp
movsl
pop
in
pop
add
jg
andb
xchg
lods
addr16
sbb
jbe
push
push
not
ret
sbb
mov
dec
mov
imul
jbe
rorb
adc
add
mov
pushf
js
xchg
push
adc
ret
outsb
outsl
mov
inc
adc
jae
jbe
and
out
out
pop
clc
daa
or
mov
testb
jae
push
scas
push
mov
paddw
je
loopne
sub
movsb
mov
mov
insl
dec
mov
xlat
cltd
mov
jmp
push
cltd
ret
mov
sbb
daa
lds
loope
xorl
div
jne
push
arpl
pushf
add
xor
filds
mov
int
pushf
sbb
mov
gs
hlt
pop
cmp
cltd
and
daa
or
sti
adcl
sar
push
fs
stos
inc
fs
cmp
imul
jp
loope
sub
adcl
jmp
leave
push
enter
iret
jmp
mov
adc
scas
out
ret
clc
in
jo
dec
out
pop
xchg
sbbl
sti
imull
xchg
cld
jmp
xor
sbb
and
arpl
sahf
in
andb
rorl
mov
mov
cmp
push
imul
xchg
sti
pop
popa
jne
push
mov
mov
dec
xorl
inc
ret
mov
ret
cmpsb
in
sbb
jbe
adc
sbb
jecxz
xor
push
std
or
pop
push
rolb
dec
in
pusha
add
aam
cmp
ret
dec
inc
hlt
mov
ljmp
arpl
fldl
adc
out
and
mov
push
pop
sbbb
sahf
mov
test
pop
das
pop
mov
push
or
or
lods
or
pop
dec
cltd
sub
dec
mov
dec
sti
add
movsb
ret
gs
xchg
pop
pop
mov
clc
icebp
and
push
outsb
ss
sahf
jmp
cld
inc
pop
mov
scas
enter
mov
sbb
shlb
fisubs
orl
pop
and
cli
xchg
xchg
cmpsb
test
in
or
jno
push
inc
mov
sbb
pop
fwait
hlt
std
lret
pop
jnp
mov
push
pusha
or
dec
push
pop
sbb
loopne
dec
inc
xor
jecxz
fnsave
js
push
push
arpl
addl
icebp
es
imul
int
mov
test
xchg
push
insb
mov
dec
es
loopne
je
push
ret
in
aam
repz
or
inc
lcall
loopne
dec
push
pushf
jecxz
inc
dec
das
xchg
clc
or
scas
jne
pushf
loop
jecxz
jp
loope
mov
inc
leave
fists
mov
adc
mov
sbb
pop
mov
jno
in
jae
push
or
dec
aam
jbe
and
sahf
push
and
hlt
pushf
jg
adc
sbb
test
fmuls
xchg
inc
jle
jp
mov
fisubs
xchg
jns
scas
or
sarl
jge
xor
int
nop
cwtl
mov
vunpcklps
pop
in
out
hlt
add
adc
movsb
adc
add
mov
add
aad
fistl
das
or
subl
jl
push
into
mov
shl
fwait
mov
aas
mov
dec
dec
or
dec
sbb
mov
push
sub
mov
clc
xchg
repz
iret
cmc
or
push
outsl
mov
clc
inc
aad
add
inc
adc
in
mov
scas
aad
adcl
dec
hlt
or
or
adcb
repz
or
dec
out
mov
scas
xchg
rcrb
stc
lods
cmp
scas
inc
pop
dec
call
rcr
mov
fistps
les
cmc
jmp
in
into
cwtl
call
sub
mov
push
mov
jge
addl
dec
push
fisubl
outsb
jmp
jne
loope
xor
dec
fs
cmpsb
into
dec
adc
xor
test
cltd
add
sub
inc
xchg
popf
and
xor
les
add
push
push
sarb
bound
or
test
loopne
stc
lcall
out
into
out
and
or
lds
add
dec
test
andb
jns
mov
push
jb
fmuls
or
lea
jmp
mov
lret
mov
or
sub
les
jle
jo
xor
ret
les
out
incl
in
ljmp
add
into
sahf
fucomi
adc
jnp
push
lret
lods
sub
cmpsl
insl
jo
xchg
call
lds
aas
pop
aas
mov
mov
scas
and
mov
push
repz
mov
mov
or
scas
jne
pop
ret
mov
arpl
testl
pop
inc
and
iret
outsl
xchg
lahf
fists
mov
xchg
mov
push
jb
idiv
fnsave
mov
add
lret
nop
mov
inc
sub
push
cmp
sbb
sti
mov
jg
in
mulb
lcall
fnstcw
inc
out
lret
scas
loope
cld
pop
daa
dec
pop
inc
jmp
sub
dec
xchg
inc
cmpsb
in
sub
pop
loop
arpl
dec
add
mov
cmpsl
jb
pop
cltd
sbb
lahf
lods
pop
mov
sub
and
jl
mov
rcl
mov
mov
jmp
inc
xor
jnp
insb
stos
dec
cmp
mov
pop
push
bound
jnp
cli
test
popa
rcrl
jl
sub
or
cmp
mov
stos
orb
aam
dec
cmp
loopne
aas
mov
ds
push
xor
ds
inc
pop
ss
stos
inc
pop
jge
add
push
fisttps
insb
push
nop
cltd
divb
in
inc
pop
adc
or
movsb
jb
lahf
pop
bound
gs
scas
jge
out
dec
and
mov
mov
fidivrs
sbb
jle
call
mov
andl
lret
ds
cs
dec
adc
daa
loopne
cltd
and
sbb
fstl
mov
pop
cmpsl
mov
xor
arpl
lret
pop
add
sbb
je
and
xchg
pop
outsl
aam
cmp
aaa
cmp
dec
fs
jno
aaa
xorl
sub
jne
add
test
into
out
lcall
sbb
test
ficoms
cs
ja
push
xchg
xor
or
stos
cltd
idiv
lods
adc
push
mov
mov
pop
mov
cmp
pop
cltd
sbb
aas
fisttps
addr16
adc
outsl
dec
xor
scas
inc
push
mov
ret
nop
mov
fs
shlb
or
test
mov
mov
mov
xor
mov
fwait
push
inc
push
sarl
xchg
mov
mov
mov
jno
mov
daa
aaa
test
scas
inc
adc
mov
call
mov
call
sub
mov
loope
add
sbb
cwtl
jge
testl
cmp
sbb
mov
je
popf
inc
mov
sahf
sub
ds
out
and
xor
andl
repnz
sub
cld
jmp
or
in
mov
out
ret
mov
popa
xor
les
imul
mov
sub
daa
jmp
ffree
sahf
ljmp
daa
mov
int
jecxz
or
pop
dec
adc
xchg
fisubrs
iret
rol
dec
mov
enter
mov
jecxz
call
mov
inc
enter
loope
outsb
fldt
push
ljmp
adc
push
cmpsb
test
rcrl
inc
clc
rcll
ljmp
dec
shrl
xchg
int
fisttpll
aam
gs
aam
call
lahf
pop
push
lds
shl
add
cmc
enter
cmp
imul
dec
inc
jle
inc
cwtl
adc
cmpsl
mov
or
movsl
mov
fwait
lods
test
jbe
inc
add
adc
out
sub
mov
arpl
sub
jg
cmpl
xor
push
out
ret
cmp
dec
ds
js
adc
sarl
dec
and
and
sahf
cmp
addb
inc
aam
cmp
or
faddl
loope
scas
les
clc
clc
and
std
cmc
lea
sbb
fwait
adc
mov
mov
movsl
lahf
in
cmp
sub
movsb
fsub
inc
sub
addl
loope
jle
mov
push
xchg
outsl
into
jbe
and
adcl
fistl
lahf
sub
adc
push
pop
gs
xor
adc
inc
add
xor
sbb
notl
out
adc
cwtl
aam
outsb
cmp
dec
fnstenv
andb
inc
mov
push
cmpsb
call
mov
loop
xchg
jnp
fwait
jae
sub
and
rcrl
fcmovnu
rep
loop
int
mov
dec
mov
sbb
dec
lret
cmpsb
fdivs
maxps
adc
push
mov
jne
aas
sub
add
sbb
sub
lcall
xchg
inc
lock
in
push
inc
xchg
je
add
cli
or
mov
inc
gs
dec
nop
jb
mov
sub
pop
push
test
aad
mov
enter
loope
sbb
lcall
sbb
int3
mov
insb
jae
cmp
in
mov
in
inc
push
aad
mov
and
mov
and
lods
mov
push
lods
arpl
and
jnp
test
sbb
adc
cmp
subl
lret
adc
int
mov
jmp
idiv
sbb
sbb
mov
lahf
fs
xchg
or
scas
jg
ret
dec
mov
mov
fdivs
sub
fstl
dec
outsb
popa
jns
mov
and
adc
add
out
in
mov
pusha
add
pop
or
cmp
in
pop
out
shll
xchg
or
punpckhbw
outsl
daa
es
insl
jnp
cmc
lret
mov
enter
or
mov
orb
stc
mov
cwtl
lods
pop
pop
sbb
mov
jae
testl
adc
mov
iret
popf
push
jle
push
loop
lahf
arpl
dec
push
test
icebp
push
inc
push
push
sub
popf
movsl
xchg
mov
into
pop
or
adc
sub
repnz
xchg
xor
pop
jg
addr16
mov
ss
stos
rcll
aad
fs
dec
in
push
mov
jb
mov
jmp
fstpl
push
fiaddl
jne
xchg
insl
int
cmc
inc
dec
imul
scas
cld
inc
and
mov
stos
in
mov
or
lods
mov
rclb
mov
fisubs
xchg
dec
mov
mov
fisubrl
fimull
xchg
xor
xor
hlt
das
scas
out
mov
adc
lea
mov
and
inc
in
push
test
push
xor
movsl
popa
jb
mov
push
xlat
test
insl
push
mov
jg
fnstcw
lds
xchg
insl
pop
ret
add
inc
adc
dec
test
xchg
dec
loop
cmp
add
aad
push
xchg
out
or
gs
sub
jecxz
fsubl
push
clc
sbb
dec
mov
in
test
xlat
pushf
mov
cmp
and
sti
mov
mov
shlb
addr16
imul
lods
push
fsubrp
aad
hlt
dec
dec
jp
iret
mov
out
repz
or
arpl
cmp
movsb
xor
adc
push
rcll
push
jge
inc
pcmpgtd
cmp
or
pop
mov
adc
push
add
add
lret
sub
dec
add
pop
push
xor
pop
pop
mov
mov
fstpt
stc
push
or
jo
mov
loopne
rorl
sub
fsubl
idivb
loop
adc
mov
ret
pusha
inc
insl
cwtl
mov
cmp
fdivs
push
mov
xor
jnp
inc
fcompl
or
sub
push
jmp
movsb
ret
popa
or
icebp
jmp
sub
and
push
sbb
dec
mov
sbb
mov
jae
jo
dec
outsb
mov
out
or
mov
mov
and
add
and
adc
loope
jno
jge
shl
ds
xor
sahf
aam
popa
and
xchg
fcmovbe
sbb
cmp
inc
push
and
sbb
add
out
xchg
mov
stc
je
aad
inc
sbb
imul
fisubrl
add
inc
out
out
ret
out
mov
std
sub
jecxz
shlb
pop
xchg
mov
xchg
in
rorb
mov
push
jmp
sbb
push
cmp
in
mov
loope
cmc
ja
jmp
sbb
nop
push
cmp
sarl
mov
sahf
sbb
mov
int
push
jp
cmp
ss
lds
les
insb
push
dec
cmp
lds
addr16
jmp
adc
dec
insb
dec
mov
xor
add
xor
push
push
xchg
adc
gs
sbbb
loope
mov
cmp
cmp
xchg
mov
ret
call
leave
xchg
xor
xor
lret
xlat
push
mov
gs
xchg
and
in
sbb
stos
fsub
or
mov
outsl
or
jb
pop
xor
inc
xor
lcall
int
sub
xchg
sbb
mov
insb
lods
add
xchg
cld
in
popa
push
mov
lret
cld
jo
adc
je
xchg
dec
adc
popa
jge
dec
xchg
mov
gs
outsb
adc
add
mov
hlt
insb
test
loopne
inc
pop
push
mov
rcrl
cli
insb
sub
adc
mov
add
adc
add
lret
aaa
dec
adc
mov
and
xor
push
jmp
cs
fwait
sub
cmp
rcr
mov
xchg
and
push
sub
xchg
ficompl
fidivs
and
dec
mov
sbb
inc
les
adc
pusha
sbb
pop
ficoml
inc
mov
mov
sbb
insl
hlt
hlt
push
scas
das
and
shll
outsl
and
mov
fdivrs
mov
mov
add
fdecstp
push
dec
xchg
int
pop
xor
enter
inc
sti
in
mov
pusha
leave
mov
adc
mov
inc
xchg
hlt
dec
cmp
loopne
je
enter
rcl
out
cmpsb
xlat
xchg
dec
mov
ljmp
cwtl
movsb
inc
or
aas
inc
add
xchg
divb
sbb
pop
dec
bound
xor
adc
cmpsl
andl
lock
out
adc
cmpsl
repnz
fldl
mov
pop
loop
rcr
jnp
cmpb
dec
aam
test
cmp
aam
xchg
push
xlat
call
xor
push
andl
lea
test
mov
ret
add
mov
arpl
sub
loope
cmp
idiv
sbb
clc
mov
iret
dec
add
inc
mov
je
sbb
rcrb
imul
mov
cwtl
out
jmp
fadds
sbb
lret
sub
test
std
scas
jmp
inc
sub
adcb
lcall
adc
mov
cmp
adcb
ret
or
out
lea
mov
sbb
pushf
mov
bound
stos
and
pop
fidivs
cmc
push
in
int3
mov
fsubrl
or
imull
out
push
xchg
test
aas
xor
adc
xchg
xchg
ds
cmp
pushf
sbbl
ret
stc
lcall
pusha
jecxz
mov
sbbl
sbb
cs
sub
xor
and
jns,pn
pop
sbb
add
rorb
fdivs
cmc
push
test
sbb
jmp
rorb
mov
cmp
jne
popa
lret
xchg
lods
cmp
sbb
lods
xlat
sbb
ss
fsubrl
jae
cld
cmpb
add
dec
je
inc
mov
pop
jmp
arpl
js
pushf
cmpsl
fsubrs
xor
xchg
xchg
pop
rcrl
fldcw
mov
test
imull
ss
loope
adc
push
add
mov
fucomip
es
jecxz
push
daa
leave
push
dec
and
les
lahf
mov
cli
xchg
jmp
cmp
adc
ljmp
aad
scas
mov
pop
push
mov
mov
popa
inc
cmp
xchg
add
sbb
xor
mov
cmp
mov
adcl
xor
call
jecxz,pn
add
xor
adc
les
shll
cmpsl
nop
pop
jp
adc
jle
push
out
lea
pop
sbb
cmp
mov
outsb
jge
push
fmull
subl
mov
lea
je
cltd
mov
lea
dec
dec
int
inc
push
das
mov
cmp
out
xor
ljmp
pop
jg
push
test
pusha
push
push
fsubrs
cmp
icebp
cmp
lea
sbb
xchg
inc
dec
sti
sbb
xor
cmc
loope
test
mov
mov
pop
jns
cmpsl
daa
adc
and
inc
dec
lock
fidivrl
sbb
shlb
add
push
aas
sub
dec
jno
daa
and
mov
sub
mov
xchg
pop
enter
jge
dec
stos
test
sub
pop
mov
pop
jae
mov
stos
xor
fsubrs
jecxz
dec
sti
jne
test
jbe
sub
sub
push
shll
iret
pop
pop
xlat
loop
cmp
jno,pn
jle
lcall
jecxz
mov
mov
pop
push
push
sub
lret
push
mov
aam
ds
jmp
les
ret
sub
fsub
leave
xor
mov
ja
jl
in
pop
andl
shlb
push
nop
mov
mov
das
pop
popa
fdivrl
mov
inc
lahf
in
call
leave
cmp
sub
and
push
cli
lret
jae
xchg
cmp
test
mov
fdivrs
loopne
mov
mov
mov
dec
cmc
stos
xor
jne
in
xchg
add
sbb
inc
cmp
pop
lret
in
mov
push
rorb
daa
inc
push
lds
dec
aaa
popa
push
das
or
xor
jne
adcb
inc
add
loop
vandps
int
xchg
pop
sub
pop
and
mov
bound
jo
test
and
ret
stos
inc
inc
and
mov
in
test
mov
mov
push
and
lahf
mov
push
pop
and
adc
in
pop
lea
imul
mov
push
xchg
fs
pop
xor
in
push
push
pop
push
dec
or
cmp
fwait
sarl
je
out
subl
or
xchg
ljmp
pop
xlat
sbb
or
mov
or
in
jl
cli
das
mov
gs
sub
cmp
jns
pop
cmp
fldt
xchg
sub
push
push
pusha
sti
out
push
pop
imul
mov
test
shlb
mov
imul
add
dec
lods
add
push
sub
pushf
mov
xchg
xchg
push
jnp
repz
inc
xor
in
push
mov
xlat
sub
jecxz
mov
ljmp
mov
aaa
ljmp
mov
in
lahf
push
mov
or
test
cltd
shrb
cmp
xchg
cmp
mov
mulb
movsl
sbb
jecxz
mov
mov
mov
or
ja
push
xor
mov
enter
cwtl
rcll
mov
inc
jge
ficoml
push
jbe
mov
add
mov
cli
scas
jnp
cmp
ja
pop
shrb
stos
adcl
cmp
stos
les
and
sbb
mov
imul
pop
popf
mov
ret
daa
fwait
xchg
int3
jmp
rorl
pop
xor
push
insl
xlat
pop
sbbl
mov
lea
insl
scas
sbb
xchg
test
pop
mov
das
pop
push
cmc
mov
in
adc
pop
xchg
xor
mov
daa
movsb
mov
enter
xchg
orb
mov
and
scas
int3
cmpsl
clc
xor
xchg
mov
dec
xor
mov
dec
mov
stos
mov
mov
mov
or
fs
add
or
cmpsl
aas
shll
xor
mov
push
nop
sbb
jo
jae
sbb
jecxz
stos
xor
jp
inc
push
test
cmc
mov
in
insb
mov
outsb
mov
test
jb
bound
sarb
push
adc
shlb
stos
ja
or
mov
aaa
inc
inc
hlt
fistpl
fbstp
repnz
dec
push
mov
push
mov
push
aaa
jne
in
xchg
mov
inc
clc
sub
mov
jmp
sbb
xlat
jmp
mov
aam
jne
dec
or
sti
test
and
stos
imul
sbb
cli
jne
mov
dec
sub
outsb
mov
jno
mov
sub
das
nop
jge
repnz
movb
test
cmp
int
pop
fsincos
mov
fcomip
lods
inc
bound
add
movsl
mov
and
ja
and
mul
or
jns,pn
mov
ret
ljmp
pop
and
push
jecxz
ficomps
int
jecxz
ds
push
imul
in
xchg
cmpb
fcmovnb
fsubrp
mov
fmuls
add
cmp
mov
and
in
iret
jle
push
dec
mov
int3
imul
push
cld
rol
fcmove
mull
out
ret
pop
jge
and
sti
fdivrl
sbb
out
mov
mov
flds
out
iret
aam
push
mov
dec
addr16
mov
xor
and
mov
xor
push
mulb
jle
out
dec
movsb
dec
pop
in
pop
popf
pushf
xor
pop
xor
jg
js
jbe
push
sbb
pop
xor
hlt
and
push
mov
orps
adcl
push
cmpsb
popf
lret
mov
inc
daa
out
and
inc
push
js
sub
pop
cmp
mov
ret
cmp
push
mov
push
movsl
mov
insl
ljmp
xchg
paddw
add
sahf
je
pcmpeqb
xchg
imull
int3
ss
and
mov
lcall
fsubl
out
into
ja,pt
xchg
fistps
add
test
sbb
cmpsl
sarl
scas
xchg
dec
sbb
jae
std
test
fldt
push
lahf
scas
sub
pop
jl
cmp
cltd
inc
sbb
stos
push
pop
mov
test
adc
test
lock
push
push
repnz
push
stos
daa
sub
lds
addl
shl
add
cwtl
ss
in
or
loope
push
rcll
mov
mov
movsb
pop
lcallw
in
xchg
out
fildll
fadds
pop
sarl
insb
pop
jp
mov
movsb
and
jp
pop
dec
les
xor
scas
jmp
popa
stos
in
test
push
mov
jnp
lcall
dec
out
jnp
push
hlt
lds
test
and
inc
or
dec
sub
mov
enter
repz
lea
or
stc
adc
xchg
mov
xor
popf
ret
xor
imul
xor
or
inc
pop
jmp
push
push
mov
mov
addr16
mov
ja
notl
stos
fstps
mov
mov
loop
push
lcall
push
test
cmp
cmc
sbb
mov
aam
mov
lahf
mov
out
fnsave
cwtl
popa
loope
cld
lahf
arpl
adc
fwait
xchg
cltd
je
repnz
dec
cmp
out
aad
pop
add
pop
aas
fistl
push
je
xor
std
xor
push
ret
jne
test
shrl
out
add
andl
mov
xchg
mov
ret
inc
dec
incb
icebp
popf
push
cmpb
stos
dec
dec
cmc
mov
test
insl
xchg
xlat
mov
pushf
dec
inc
jp
scas
mov
xor
in
or
adc
addb
jae
loop
add
cs
jns
cmp
inc
aad
stos
movsb
out
mov
aam
xorl
cwtl
xor
ja
dec
jo
cmp
xchg
inc
arpl
sti
daa
or
cmp
imul
jmp
aas
mov
mov
or
pop
aas
outsl
stos
frstor
lock
jle
lock
stc
dec
aad
in
push
incb
push
cmpsb
and
hlt
push
mov
ret
sti
imul
push
add
cltd
and
insb
negb
pop
aad
icebp
in
adc
testl
bound
push
jns
insl
stos
push
mov
jb
cmp
xchg
clc
pop
outsb
pop
and
aas
cld
sub
xor
ret
daa
push
test
pop
repnz
sub
xchg
std
and
repnz
xchg
pop
mull
fsubl
adc
push
and
int3
outsb
push
and
out
loope
mov
data16
or
mov
xor
mov
fmuls
pop
outsl
pushw
outsl
pop
and
push
xchg
test
cmp
ret
dec
xchg
or
mov
add
inc
fbld
stos
imul
mov
adc
mov
in
pop
outsl
push
mov
or
lret
icebp
push
pop
add
and
inc
ljmp
push
loope
pop
mov
mov
add
out
stos
lcall
aad
notl
rclb
lahf
mov
in
or
jno
dec
sbb
imul
or
and
gs
daa
rcrl
scas
mov
subl
mov
lret
sub
roll
ud0
mov
dec
push
mov
fnsave
push
xchg
push
or
enter
mov
lods
out
push
inc
xchg
and
add
jge
ds
xchg
stc
call
leave
cmp
outsb
sbb
sub
push
in
mov
movsb
lahf
lret
fisubs
rclw
dec
sbb
arpl
or
subl
fidivrl
add
scas
pop
test
fwait
add
mov
fistpll
adc
int3
fldt
loopne
add
sahf
cmp
aas
icebp
sub
insb
push
inc
xor
cwtl
cmp
xchg
xor
cmc
jb
outsl
imul
mov
pusha
pop
lcall
sub
shlb
mov
dec
mov
push
sub
cli
daa
mov
aaa
sub
cmpsl
sbb
add
push
int
xchg
jno
js
xchg
leave
movsb
pop
stos
inc
xchg
sti
fidivrl
add
mov
lds
inc
fs
mov
inc
dec
mov
outsl
xchg
into
add
movsl
les
jp
push
loope
cmp
xor
and
mov
clc
mov
inc
jg
cld
inc
adc
cmp
mov
test
jle
cmp
add
in
mov
scas
push
inc
push
cmp
mov
or
push
clc
push
int
roll
adc
mov
cltd
popf
push
fwait
lret
push
in
rorl
lahf
push
sub
hlt
jo
dec
arpl
aas
cltd
jae
push
inc
adc
mov
sbb
add
ja
lock
es
add
inc
or
mov
cmp
push
jo
jl
push
sahf
pop
add
ficomps
fucom
xor
ds
jp
add
test
fwait
xchg
sub
push
jno
cmc
jae
dec
mov
aam
jnp
jae
lds
mov
popf
xchg
adcl
adc
pusha
jo
mov
popf
daa
cwtl
nop
pop
in
mov
inc
mov
and
push
cmp
xchg
ret
and
in
jmp
sbb
jns
jae
shll
mov
jle
add
cli
or
jp
dec
push
mov
push
sub
mov
into
or
pop
aam
decl
fildll
cltd
out
ret
in
pop
mov
pop
sti
imul
lret
inc
or
fdivrs
pop
sbb
mov
jg
inc
fiaddl
imul
add
dec
mov
inc
jl
loope
pop
pop
hlt
sub
ss
sar
or
sub
mov
movl
scas
or
stc
or
insb
ret
sbb
stos
sub
stos
fmuls
mov
data16
add
jnp
dec
push
fcompl
pop
das
ljmp
sbb
jle
mov
push
call
sahf
or
cmp
and
lret
xor
loope
push
cld
out
cld
jge
pop
mov
out
test
out
out
jo
xor
out
mov
cltd
xchg
cmp
pop
loope
sbb
jl
mov
pop
hlt
and
push
lcall
sub
and
sti
inc
test
sub
dec
addr16
push
sub
xor
bound
je
jp
or
test
scas
into
lcall
xor
fadd
notb
adc
insb
push
mov
and
cmp
les
ss
sbb
ficomps
je
inc
ljmp
cmp
in
dec
push
movsb
adc
mov
mov
repnz
inc
stos
mov
dec
lahf
mov
sbb
mov
je
sbb
call
icebp
subb
testl
repnz
out
ror
inc
das
mov
enter
repnz
insb
arpl
xchg
in
sahf
xchg
pop
inc
inc
pushf
mov
sbb
jb
adc
pop
imul
ljmp
imul
iret
iret
cmc
je
cli
hlt
repz
mov
push
dec
and
ret
push
and
popa
cmp
inc
xchg
cmpsb
inc
sbbl
mov
lods
inc
rcrl
or
mov
out
dec
shrl
movsb
cmp
inc
aas
outsl
dec
mov
into
or
inc
and
dec
cmpsb
sbb
pop
push
das
sbb
test
and
mov
jp
mov
mov
les
or
out
in
mov
fsts
ret
cwtl
sub
or
mov
outsb
push
and
xchg
or
lret
sub
push
lds
jo
inc
jmp
add
shlb
adc
xchg
dec
clc
lods
mov
add
ja
add
fisttpl
adc
pop
loopne
cmp
fcos
mov
sbb
sub
jmp
push
nop
inc
loopne
inc
pop
dec
cmp
xor
add
xor
and
insb
in
imull
dec
xchg
rolb
adc
or
icebp
jns
es
out
scas
dec
add
cmpsl
sar
mov
cmpsb
scas
outsl
xchg
cmpl
daa
jbe
stc
bound
outsb
ret
f2xm1
js
aad
loop
push
or
mov
bound
int3
imul
pop
mov
lret
int3
adc
ret
aad
push
mov
lret
aas
cli
and
loopne
test
sub
or
sbb
in
xchg
in
fidivs
mov
fs
sbb
xor
arpl
mov
mov
sahf
and
push
mov
aad
adc
pop
ljmp
arpl
in
or
pop
inc
fidivs
push
pop
shl
inc
dec
loop
pop
shlb
das
mov
add
jmpw
popf
mov
mov
mov
into
adc
push
sbb
jae
jnp
push
inc
jle
and
push
adc
test
in
push
je
ret
push
cltd
stc
call
cli
adc
add
or
xlat
dec
int
fisubl
std
jmp
cwtl
imul
fs
sub
cwtl
push
cmp
mov
sbb
call
pusha
lock
add
movsb
aas
lret
jns
mov
dec
mov
test
loopne
and
outsl
lahf
movsb
sti
mov
mov
add
addr16
sbb
loope
cmp
jge
and
out
lcall
dec
rcrl
orb
fsub
icebp
push
xor
out
mov
cmp
xchg
in
arpl
xchg
ss
xchg
cmpsb
repz
fmuls
in
fucom
push
jne
repnz
mov
mov
cmpsl
lcall
xchg
fdivl
int3
popa
call
mov
xor
cld
xchg
push
add
cs
cs
js
push
adc
jb
pop
xor
nop
jno
dec
leave
orb
fsubrp
xchg
frstor
orb
mov
xor
jecxz
int3
xchg
mov
hlt
rclb
dec
xchg
pop
lahf
push
cmp
es
xor
and
test
test
add
pusha
aad
shl
xchg
mov
adc
jmp
inc
push
mov
jmp
loope
int3
push
mov
imulb
aad
push
ret
cmc
out
mov
roll
cmp
aas
call
insl
lcall
iret
out
test
adc
clc
push
cmp
sub
lret
push
repz
lock
push
loope
rolb
xor
pop
xchg
mov
add
test
movsb
adc
xor
jbe
sbb
loop
pop
xchg
jecxz
test
imul
inc
clc
call
arpl
std
dec
pop
and
les
ja
jae
lds
movsb
decb
clc
popf
xchg
fisubrl
out
in
inc
pop
aas
or
inc
cmpsl
jmp
addl
ror
cli
clc
ja
jmp
in
lahf
inc
cltd
mov
jo
adc
cs
aad
sti
sbb
adc
cld
cmpsb
pop
and
in
pop
sub
mov
mov
and
inc
or
or
rorl
jmp
scas
adc
outsl
rcr
dec
imul
bound
in
icebp
xor
inc
inc
popf
xor
addr16
stos
mov
jno
leave
in
sbb
sbb
jbe
xor
pop
pusha
or
or
xchg
inc
and
push
sarl
cmp
cs
call
shlb
lock
gs
dec
nop
push
dec
sbb
xchg
sbb
xor
mov
dec
fstps
lcall
lahf
mov
testb
fs
mov
out
leave
mov
loope
mov
outsl
sti
inc
pop
inc
loop
outsl
mov
adc
xchg
jmp
ret
cmpsl
pop
lea
and
sub
mov
or
pop
or
sbb
jnp
jno
cmc
gs
imul
or
mov
mov
push
data16
loope
dec
fwait
adc
shl
sahf
cld
dec
jne
imul
movsl
and
test
cmp
shlb
mov
dec
pop
and
into
dec
ljmp
imul
test
adc
rorb
aad
test
cmpsl
pop
inc
push
jle
pop
ds
xchg
sub
outsl
push
dec
adc
movsb
xchg
fcmovu
xchg
inc
scas
in
mov
into
fildll
mov
dec
das
dec
loopne
sarb
lods
lea
push
pushf
aaa
sti
pop
scas
pop
in
push
push
loop
and
inc
mov
scas
jg
mov
push
scas
out
hlt
out
sub
fdivr
fidivl
pop
inc
pop
test
imul
xchg
push
lds
xchg
mov
js
cmp
cld
xor
ret
loope
push
mov
ss
push
or
cmp
aas
pop
cmp
pusha
ret
lret
sbb
sub
push
sub
in
mov
clc
pcmpgtd
inc
pop
cmpsb
in
test
imul
jmp
rorl
fistl
sbb
jo
hlt
xchg
imul
lcall
bnd
adc
jns
aas
xor
inc
jmp
add
or
sbbl
jle
add
fwait
cmp
sub
insb
movsb
test
mov
sub
add
dec
and
js
in
add
inc
es
sbb
jae
fistpl
push
mov
push
xchg
lds
sarl
rolb
pop
sbb
pop
ja
add
xchg
pop
ds
mov
cmp
push
xchg
cmp
jmp
ljmp
jle
mov
jmp
test
adc
sbb
jl
sub
orb
fwait
aam
jbe
clc
dec
int
cmp
repnz
xchg
ja
xor
hlt
inc
pop
in
push
scas
lret
dec
push
loopne
les
sahf
inc
and
addl
lods
outsb
popf
enter
mov
push
sti
pop
push
sbb
mov
push
and
mov
nop
fwait
mov
cmp
test
or
sbb
pop
bound
cmpsl
scas
jns
jle
into
push
add
push
call
mov
loop
icebp
rorl
pop
xlat
pop
dec
fisttpl
mov
lea
adc
cmp
mov
insl
imul
dec
mov
adc
addl
fldl
and
add
mov
push
ret
xchg
dec
test
push
test
pop
ljmp
xor
mov
shlb
mov
push
kunpckbw
add
inc
jg
sbb
mov
hlt
mov
ret
xorl
mov
rcr
xchg
mov
ss
rclb
call
movsb
lret
cmp
loope
out
nop
jg
mov
je
or
imulb
fcomi
pusha
sbb
sbb
data16
sub
pop
ret
xor
pop
rol
outsl
cmp
rol
rcl
lock
add
sarb
fwait
movsl
jp
lea
pop
nop
dec
test
or
les
xor
add
sub
aaa
mov
mov
xor
xchg
jb,pt
mov
pop
sbb
jno
rcll
xor
out
mov
sti
sti
sbb
int
sbb
dec
cwtl
mov
js
inc
jecxz
cmp
dec
mov
lcall
icebp
mov
mov
les
sub
dec
jle
add
les
mov
push
or
divl
scas
sbb
cmp
sbb
mov
loopne
shll
mov
cltd
mov
push
inc
imul
repnz
xor
leave
out
push
dec
mov
fstps
sbb
ret
out
and
in
test
xlat
repz
fmull
cltd
scas
xor
lds
dec
maxps
push
inc
loopne
jp
into
adc
adc
push
aad
fadds
cmp
add
adc
sub
idivb
add
das
or
mov
call
in
mov
in
fidivl
cmpsb
loop
add
pop
ja
adc
cmc
sbb
fucomip
inc
adc
imul
ret
repnz
pop
cmp
mov
dec
xor
test
lahf
and
aas
xchg
jo
xor
add
or
xchg
mov
sbb
roll
cmp
mov
loope
mov
jno
mov
fnstcw
dec
and
sub
xchg
mov
out
add
int
push
mov
xchg
fisttpl
aaa
jo
repz
inc
and
sub
ds
jmp
pop
inc
dec
cmpsb
push
add
or
scas
push
ds
hlt
sarl
xchg
clc
stc
adc
mov
ret
push
pop
mov
xor
push
sarl
jp
add
aad
iret
not
fwait
sbb
aas
sub
out
scas
stc
bound
pop
and
xorl
and
adc
adc
jb
movsl
fisubs
arpl
and
jne
jns
and
popl
xchg
ds
lods
inc
clc
adc
bound
adc
cmpl
push
test
lods
stc
stc
pop
test
aaa
pop
inc
loope
ret
mov
icebp
out
xchg
push
dec
fiadds
movsb
movsb
or
mov
scas
sqrtps
mov
cwtl
add
les
insl
cmpsl
push
sub
adc
aaa
lea
xlat
push
sbb
xlat
jle
andb
ficompl
dec
call
in
jp
mov
adc
pop
or
lods
pop
in
pop
and
out
insl
scas
mov
push
outsb
fisubl
push
enter
test
jbe
adc
jp
xchg
daa
mov
das
ret
das
add
pop
vpmulhuw
inc
lret
test
or
jmp
push
popa
loopne
popa
call
out
mov
cmpsb
inc
test
jns
bound
aas
fnstcw
jge
jo
lcall
cs
roll
inc
xchg
mov
js
inc
xor
shr
cmp
jb
cmp
lds
out
rcrl
cmpb
xchg
scas
lods
sbb
push
inc
loop
jge
pop
mov
dec
push
aad
xlat
and
jp
jmp
daa
outsl
das
sbb
movsb
push
hlt
jecxz
insb
sti
inc
dec
test
mov
adc
stc
loopne
add
ret
adc
ficoms
adc
lret
std
pop
mov
dec
insb
inc
add
xlat
inc
mov
add
lods
inc
addb
sbb
notb
mov
js
nop
loope
lret
test
scas
and
ljmp
inc
daa
repz
xor
sbbl
mov
inc
and
pop
mov
lock
push
in
lahf
jae
xor
int3
outsb
dec
xor
cmp
insl
adc
sti
out
dec
jle
jne
stos
push
in
cs
hlt
mov
in
mov
nop
mov
es
push
inc
fnstsw
inc
lret
pop
push
aaa
js
cld
jl
enter
popa
adc
and
xor
dec
outsb
je
mov
imul
dec
mov
repnz
mov
and
es
sub
rcrb
add
aam
rcrl
xlat
push
xchg
movsb
sub
push
ljmp
mov
stc
negl
lret
lods
cld
int
pop
xchg
mov
inc
mov
xchg
pop
jl
ret
mov
js
movsl
xchg
loopne
push
ftst
jbe
sahf
mov
or
jmp
jo
mov
pop
sub
repz
aas
ds
dec
and
in
repnz
push
mov
mov
in
lret
or
insb
lock
lea
inc
je
jnp
mov
mov
or
std
jp
mov
jle
icebp
out
sub
push
adc
ss
xchg
sub
dec
adc
jg,pn
stos
mov
in
jnp
or
shl
in
mov
mov
add
sar
leave
mov
mov
test
mov
cmpsl
pop
dec
orb
outsl
call
cmp
xchg
movsl
loope
and
mov
sub
cli
shll
xor
cmpsb
mov
pop
hlt
mov
nop
lods
jge
push
adc
fldt
fcompl
sahf
mov
dec
movsb
xchg
dec
lea
add
daa
add
daa
add
rcr
cmpsb
mov
adc
or
inc
jns
or
mov
jae
jno
sbb
adc
test
mov
dec
lods
insl
arpl
adc
das
out
les
test
add
icebp
and
adc
cmp
dec
jbe
pop
repz
and
mov
mov
jmp
mov
jecxz
mov
test
stos
xchg
in
xchg
test
out
in
and
jmp
repnz
pop
out
out
test
out
adc
xchg
sbb
jge
push
xor
dec
rcrl
fnstsw
or
test
mov
sub
push
test
sbb
xor
mov
lret
mov
xchg
mov
jbe
and
inc
xorb
mov
jp
stos
push
dec
loop
dec
mov
mov
xor
mov
and
test
mov
add
add
test
int3
and
sub
mov
or
jle
nop
insl
in
mov
sbb
insl
or
pop
loopne
test
sbb
sbb
lock
jmp
add
ljmp
aas
pop
or
test
aad
iret
arpl
inc
stc
push
mov
pop
add
pop
test
lock
cmp
bound
scas
pusha
push
jbe
repz
popf
lret
mov
mov
xor
int
test
adc
mov
movsl
add
inc
mov
in
pop
mov
or
stos
imul
dec
jae
ljmp
adc
mov
sub
cwtl
push
and
stos
mov
mov
add
lahf
int
mov
shlb
pushf
pop
stos
lahf
es
jb
lahf
jle
inc
repz
or
mov
push
xlat
ffree
xchg
add
fnstenv
lds
gs
sbb
std
push
push
cmp
shlb
test
xor
jg
push
inc
cltd
out
sub
loope
or
push
fisubl
rclb
addr16
loop
iret
jecxz,pn
inc
pop
int
mov
mov
outsl
jg
dec
cmp
pusha
negb
jne
mov
dec
in
pop
and
sub
aas
jnp
cltd
fs
int
mov
in
clc
push
fcmovnbe
leave
inc
push
push
gs
test
ds
jb
pusha
out
data16
and
push
notb
xor
sahf
in
pop
out
test
pushf
lds
xchg
and
lcall
hlt
lock
mov
mov
mov
sbb
data16
mov
pop
lds
repnz
jl
cwtl
iret
and
and
lds
out
rorb
xor
sbbl
and
imul
test
xchg
sub
mov
into
imul
sar
das
fildll
dec
or
xchg
mov
sahf
push
adc
mov
lods
popf
inc
dec
sbb
aad
pushf
icebp
sbb
fwait
jnp
or
mov
aam
cmp
and
cld
fdivl
cmp
mov
inc
sub
ds
and
add
add
and
and
dec
test
adc
mov
fidivrs
push
mov
mov
cmp
lock
and
test
pop
sub
add
cmp
scas
jbe
mov
adc
xchg
paddusw
xor
inc
inc
sbb
push
lret
push
std
cmp
xor
sub
lret
fisubrl
push
push
add
inc
cmp
gs
or
mov
xchg
iret
icebp
cmpsl
ret
inc
jmp
nop
adc
pushf
pop
mov
sbb
cltd
push
inc
xor
std
out
lods
pop
mov
push
sbb
dec
sbbb
mov
cmp
xchg
pop
jl
dec
xchg
push
ljmp
pop
aaa
std
mov
outsl
dec
repnz
xchg
filds
or
push
daa
ja
insl
push
mov
nop
sbb
jnp
ficoms
mov
in
and
shrl
test
je
jmp
stos
push
clc
xchg
push
mov
cmp
cmp
add
pop
pop
dec
cltd
subl
stos
dec
push
dec
jb
jbe
push
hlt
dec
fisubl
fcoml
inc
lea
jb
dec
imul
jae
fbld
imull
adc
mov
pop
pop
jns
mov
in
jno
and
or
or
out
xchg
lret
sbb
xchg
dec
sub
int3
xchg
int
icebp
and
dec
inc
call
lods
sbb
into
jae
lods
mov
dec
sub
loop
xchg
push
pop
add
inc
lcall
mov
lea
jmp
shrb
aaa
xchg
mov
call
cmp
sub
adc
mov
nop
sbb
cmpsl
cmp
mov
sbb
mov
pop
adc
int3
cmp
outsb
and
lahf
xchg
jecxz
pusha
leave
ret
xor
push
into
xchg
dec
fimull
xchg
das
or
lods
movd
jl
mov
cmc
inc
stos
arpl
shll
sub
mov
add
out
fs
dec
int3
push
scas
dec
aas
aad
jne
jb
xchg
pushf
aad
mov
adc
xchg
push
or
movsb
loop
cld
sahf
pop
cld
sub
xchg
rsm
mov
into
pop
jo
sbb
fcomi
sbb
jne
repnz
outsl
popa
xor
dec
push
mov
mov
insl
adc
sub
lods
mov
mov
mov
outsl
dec
mov
push
cmpsb
dec
mov
mov
cmp
xchg
add
mov
mov
scas
push
test
imul
daa
movsl
stos
sub
aad
mov
sub
mov
out
ret
call
bound
xchg
adc
or
or
movsb
stos
sub
les
xlat
popf
fwait
enter
shl
fldenv
jle
mov
dec
jl
jae
push
pop
jmp
subl
mov
lods
mov
data16
push
push
repnz
push
lods
int3
decl
test
les
add
sbb
mov
mov
lahf
lahf
jecxz
in
mov
xchg
cmp
rclb
push
jnp
sbb
dec
popa
pop
sbb
mul
jl
in
cmp
add
adc
cld
subl
rcll
lret
add
sub
xabort
stc
push
out
cmpsl
inc
jle
pop
shlb
or
data16
lds
rcrl
mov
and
mov
and
mov
outsb
mov
repnz
mov
ror
jae
dec
mov
jle
out
and
test
dec
pusha
test
fdivrp
outsb
mov
mov
cmpsb
fldenv
adc
dec
jecxz
cs
aam
stos
pusha
pop
outsb
movsb
nop
in
and
dec
inc
and
fnstcw
pusha
outsl
iret
lea
repz
sub
in
adc
fwait
cmp
sbb
pop
xchg
jnp
les
stos
pop
add
sbb
fsts
sarl
and
add
sahf
sarb
mov
jbe
loopne
push
dec
cli
fsts
or
clc
jge
sub
cltd
mov
jl
jmp
xchg
phaddd
cmp
jnp
lea
mov
fsubs
sub
mov
jecxz
push
fisttpll
mov
and
outsl
int3
jp
sbb
cli
lds
mov
out
fcoml
jecxz
mov
xchg
wbinvd
mov
jp
jle
dec
fcompl
sub
dec
out
and
jl
xlat
gs
sub
sub
pop
sahf
in
daa
xchg
js
lods
stc
add
movsl
push
data16
ja
push
mov
inc
sub
roll
pop
push
push
and
sarb
xchg
push
mov
jecxz
clc
movsl
stc
mov
pop
push
cmp
mov
mov
jecxz
dec
mov
cli
hlt
inc
movsb
lcall
cmp
push
and
xchg
mov
dec
movsl
inc
pop
cmpl
fimull
decb
sbb
insl
fidivl
and
dec
scas
into
fstpt
pop
mov
sbb
hlt
cmp
inc
xor
pop
lcall
fistpl
in
lods
xor
outsl
movsb
sbb
stos
fs
enter
inc
mov
loopne
out
xchg
mov
inc
mov
std
push
faddl
and
subb
adc
mov
or
or
daa
xchg
scas
jo
push
outsl
fsubrl
loope
leave
mov
sti
jo
arpl
lcall
test
pop
fwait
cmp
adc
imul
pop
or
adc
jge
data16
pop
inc
xor
sbb
sub
test
push
mov
xchg
repnz
mov
adc
jb
call
js
pop
lods
xchg
in
sbb
mov
aas
insl
add
mov
movsl
push
sbb
out
shl
xchg
stos
push
pop
ret
aaa
mov
fsubp
xor
and
scas
gs
cwtl
add
in
fisttps
push
aam
lret
mov
or
mov
dec
test
es
jge
jmp
std
push
adc
insb
mov
sbb
or
sahf
add
clc
hlt
mov
inc
and
jne
or
cltd
jns
mov
jle
mov
dec
push
inc
push
mov
pop
xchg
mov
xchg
mov
inc
pop
dec
std
sub
nop
xor
fistps
xchg
push
add
xorl
mov
xchg
xor
loop
aam
xchg
mov
xor
stos
and
jnp
nop
imul
sub
xchg
inc
mov
mov
pushf
xchg
adc
jb
mov
stos
add
mov
les
pop
test
lret
jns
xor
cld
inc
cmp
clc
pop
pop
decb
xor
nop
jae
push
pop
sarl
aam
xchg
ds
leave
test
fsubl
mov
sbb
pop
dec
in
nop
daa
into
leave
popf
cmp
cwtl
mov
sub
fists
dec
test
dec
mov
inc
faddl
dec
adc
pop
cmpsl
int3
mov
mov
cmp
icebp
bnd
mov
dec
mov
add
fs
push
sahf
inc
hlt
mov
test
shl
stos
popa
pop
ja
jb
test
lcall
mov
add
jmp
je
cs
int3
and
arpl
xchg
sbb
cmp
push
add
pop
and
sti
push
mov
cmp
push
cmp
or
ja
cmp
jle
ret
mov
dec
shrl
jmp
mov
mov
cmc
jp
sbb
lret
and
fstpt
outsb
mov
push
out
inc
mov
imul
mov
arpl
cmp
in
decl
das
lods
call
lds
cmpsl
arpl
sbb
into
ljmp
das
cmp
jnp
xchg
sbb
adc
insb
scas
fisttpl
cltd
and
in
dec
sarb
out
pop
mov
xor
in
or
lahf
in
push
addr16
mov
pop
jmp
adc
mov
mov
outsb
sub
cmp
jl
fwait
add
call
mov
pop
mov
jbe
xor
xchg
mov
cmp
push
fisttpll
das
sub
xchg
bound
daa
ss
inc
dec
adc
pop
bound
daa
dec
gs
int
jp
aam
sbb
push
cli
xchg
fcmovne
std
push
movsb
insb
and
sbb
stos
mov
scas
jnp
stos
push
mov
adc
adc
bound
dec
filds
cmp
std
in
test
cmpb
sub
aaa
pop
mov
jae,pn
mov
shrb
pop
int
lahf
push
test
jle
pusha
aaa
push
xor
mov
add
inc
je
push
lock
out
adc
mov
test
or
lods
pop
lret
xchg
fisttpl
push
inc
inc
into
ret
sti
fsubrp
pop
and
insl
iret
cmp
push
lret
mov
mov
movsl
aaa
out
shrl
xchg
sub
adc
mov
stos
movsl
mov
les
dec
out
add
pop
movsl
add
mul
push
sbb
sbb
mov
add
mov
add
fnclex
fidivs
sub
sahf
cmp
adc
in
shll
add
cmpsb
mov
push
out
jae
jmp
cmp
ja
mov
bound
jl
add
sbb
in
xor
jb
xchg
sub
idivl
addl
addb
int3
push
cwtl
mov
mov
ljmp
out
sbb
pusha
aam
lcall
jg
pop
pusha
ficompl
movsl
inc
fnstenv
movsl
jb
mov
lahf
aam
repz
adc
push
roll
fnsave
cmp
iret
mov
xor
shl
jg
dec
xlat
mov
sarb
in
and
xchg
pusha
aaa
dec
fwait
lret
scas
xchg
aam
adc
cltd
addr16
lock
insl
xchg
out
sbb
xor
xor
in
scas
dec
outsb
sub
outsl
lods
adc
lcall
xor
je
push
lret
sbb
mov
add
sarb
cltd
fiaddl
js
fsubs
scas
mov
and
adc
cmpsl
ljmp
jno
jle
popa
sbb
arpl
and
mov
jo
and
int
sarb
popf
push
cmc
int
test
push
or
insl
mov
arpl
adc
sub
mov
jge
jge
scas
sbb
cld
fcompl
add
push
nop
test
orl
inc
pop
cmp
shll
shrl
xor
sar
and
out
dec
sar
add
pop
or
push
add
and
inc
idiv
xchg
push
mov
dec
insb
sbb
push
fcmovnb
shlb
pop
ss
popf
and
fs
sahf
mov
dec
sbb
ja
repnz
ror
jb
and
jecxz
icebp
sahf
cmp
call
loopne
jnp
je
sti
push
leave
dec
and
and
push
lret
xchg
mov
test
sbb
imul
arpl
out
les
insl
jne
mov
mov
jno
dec
jl
scas
pop
in
jecxz
insl
aam
imul
push
ljmp
out
popa
pop
add
jns
xchg
xor
cld
cmpsl
movl
pop
fnstenv
das
jle
push
fadds
pop
inc
mov
mov
daa
xor
lock
popa
jae
bound
adc
jno,pt
sub
sub
cmp
lret
rcrb
aaa
nop
dec
popa
inc
add
or
cmpsb
dec
and
ljmp
adc
and
xchg
fwait
loopne
es
pop
jo
xor
inc
mov
jae
jmp
mov
dec
inc
rorb
adc
jno
scas
jl
mov
scas
sti
shrl
fisubrs
or
xor
lea
call
movsb
lods
lock
inc
insb
ljmp
adc
scas
pop
cmp
xor
popa
loope
cwtl
mov
sub
leave
push
cmp
push
stos
adc
mov
cltd
flds
xchg
adc
jae
pop
bnd
push
pusha
xor
mov
scas
mov
ss
mov
pop
ljmp
mov
lahf
ljmp
push
repnz
stc
or
dec
and
nop
fdivl
dec
xor
or
xchg
xor
mov
out
jl
jecxz
mov
pop
gs
je
aam
add
cli
xchg
dec
dec
test
cmp
xor
divb
xchg
mov
lods
jmp
fists
push
das
int3
jl
or
addr16
insl
xchg
jb
imul
cmpb
ja
movsb
in
add
repz
push
xchg
push
daa
shr
and
pop
jbe
pushf
push
pop
push
ret
sub
test
sahf
lcall
aam
pop
lods
inc
orb
sarl
cmc
out
push
push
jae
push
or
add
scas
push
adc
xor
sbb
and
shll
adc
or
ds
mov
mov
loop
mov
jecxz
arpl
xor
ljmp
imul
gs
or
xchg
cmc
adc
jnp
sub
out
inc
fs
mov
dec
lea
sbb
cmp
mov
sahf
and
or
sti
mov
push
gs
mov
push
roll
js
xorb
ret
or
pop
cwtl
add
or
sub
add
andl
sbb
cmp
mov
leave
xchg
mov
fisubrl
mov
int
and
lcall
add
call
mov
xor
push
sub
aas
push
adc
jae
push
sub
ss
sub
push
mov
outsl
xchg
xor
into
inc
mov
das
test
mov
out
cltd
mov
insb
int3
andl
jae
xchg
lods
imul
xor
rcrl
mov
xor
stc
dec
mov
pop
cmp
cmpsb
xchg
jo
stos
loop
adc
imul
sub
cwtl
or
jno
push
add
adc
hlt
aam
loop
fidivrl
and
pop
les
jle
notb
gs
inc
or
cmp
das
test
orl
dec
ret
fdivs
ss
add
xor
outsb
rcrb
xchg
cmpl
out
and
jl
push
cmp
cld
repnz
and
scas
fwait
clc
jbe
enter
insb
pop
sahf
fildll
insl
sbb
test
or
arpl
je
dec
jns
nop
or
stos
push
pop
leave
les
adc
mov
rcll
jae
xchg
push
test
iret
rorl
sub
movsl
int3
push
cmp
jle
adc
aam
xor
movsl
inc
jo
addl
ret
arpl
dec
sub
lahf
and
std
jae
insb
pop
test
push
stc
xor
inc
icebp
mov
popa
push
adc
in
out
movsb
xchg
and
out
xchg
insl
pop
in
outsb
fidivrl
push
sub
cmp
sub
js
add
pop
xlat
pop
push
popa
xchg
or
les
fsubrp
xorl
jp
pop
aad
jge
fistl
sbb
hlt
xor
jecxz
xchg
lods
push
lds
test
mov
jecxz
lock
push
sub
mov
mov
out
mov
mov
push
dec
scas
push
pop
into
xchg
lahf
push
bound
daa
cmc
arpl
popa
gs
ret
nop
dec
aad
xchg
filds
cld
mov
outsb
mov
pop
bound
les
into
mov
jp
ret
pop
xor
daa
and
lods
out
sbb
loope
sub
hlt
lea
add
adc
jg
out
xor
jle
mov
dec
sti
je
sub
popf
pop
jle
jns
xchg
xor
jge
sbb
les
jmp
xor
pop
insb
inc
cmp
mov
faddl
ja
mov
loope
pop
sbb
xor
and
pop
fcmovne
dec
mov
cs
mov
jp
push
enter
pop
jno
loop
mov
mov
aad
test
sarl
iret
cmp
push
mov
cs
mov
mov
adc
and
inc
imul
mov
pop
aaa
sbb
cmpsb
out
mov
lds
xchg
mov
jp
arpl
push
inc
sub
dec
xchg
and
fbstp
mov
mov
fsts
jbe
add
ss
dec
rcrl
lahf
hlt
sub
out
mov
inc
mov
push
scas
loope
out
lods
movl
int
ja
out
jmp
imul
sbb
jno
inc
pop
cmp
repnz
stos
aas
leave
dec
adc
add
jmp
adc
sahf
mov
pop
std
sub
adc
lahf
in
jno,pt
lahf
xchg
jg
adc
addr16
js
sub
movsl
push
push
into
inc
adc
into
xchg
fs
lods
hlt
test
arpl
sub
cmp
jo
fistpl
push
rorl
jae
jge
jo
pop
xchg
sbb
mov
fcmovbe
test
fstpl
and
sbb
into
lods
cmp
mov
loopne
jp
das
lods
or
out
jb
cmpb
mov
inc
push
repz
or
mov
mov
xchg
mov
test
adc
or
test
push
ss
xchg
fisubs
movsl
mov
and
in
mov
dec
fimull
jl
leave
arpl
imulb
fwait
jle
leave
inc
cmp
push
sub
jle
and
hlt
inc
dec
jbe
addb
dec
xor
adc
inc
insl
sbb
lcall
sbb
ds
and
pop
cmp
mov
mov
xlat
push
xchg
xor
or
adc
mov
adc
mov
or
xchg
test
and
fs
pop
xchg
push
jg
push
sub
and
push
movsb
mov
je
popf
repnz
mov
jo
sub
es
mov
loop
mov
push
inc
repnz
push
push
pop
fistl
inc
ds
jnp
shlb
inc
cli
push
add
mov
mov
inc
movsb
jmp
or
inc
mov
popa
lods
jb
mov
jmp
jnp
pop
xor
pop
jmp
add
outsb
jp
fisttpll
orl
cmp
andb
xchg
xor
mov
mov
mov
addr16
push
mov
stc
jnp
ds
pushf
iret
loop
inc
xor
ret
cld
inc
or
and
jl
jb
xorl
inc
mov
jae
sarl
jns
fcmovnu
sbb
xchg
xor
xor
mov
sbb
xchg
ljmp
push
ficoms
pop
ret
mov
mov
or
rcll
mov
dec
jle
dec
dec
jbe
es
rcrl
inc
lock
aad
lahf
xchg
mov
fildl
out
pop
push
test
jge
lcall
adc
loope
sbb
mov
cltd
std
mov
sbb
cmp
ljmp
clc
addl
xor
stos
jmp
int3
dec
insl
cmp
arpl
and
and
mov
pop
in
icebp
stos
std
or
add
loop
xchg
aad
xchg
or
popl
pop
cmc
xchg
xchg
xor
movsb
and
xor
and
insb
in
mov
pop
jns
mov
std
lcall
cli
andl
addr16
mov
test
sbb
jl
inc
mov
idivb
sub
ja
jo
lcall
sti
rorl
and
or
dec
add
jne
inc
aas
jnp
xor
add
bound
inc
int3
mov
mov
inc
mov
mov
cmp
mov
jns
dec
repnz
mov
sub
sub
test
add
and
repz
lret
outsb
cltd
mov
pop
mov
lret
popa
inc
fisubs
loope
shl
loop
sbb
push
pop
loop
fstl
jns,pn
cwtl
je
sub
mov
mov
cmpsb
fildll
jo
lods
mov
cmp
pushl
mov
add
outsl
or
and
mov
jb
mov
fistpl
sbb
mov
stc
push
test
mov
popf
arpl
rorl
mov
out
das
pop
mov
jge
mov
pop
jo
fwait
xchg
pop
xchg
pop
mov
clc
insb
mov
arpl
hlt
xor
sbb
jno
insb
jmp
pop
sbb
mov
and
out
adc
out
mov
jl
lock
aam
lock
adc
pop
sahf
pop
ret
sahf
jmp
ljmp
xor
inc
inc
lds
mov
dec
sarl
adc
jnp
mov
sbb
sbb
std
mov
int
loope
adc
div
mov
mov
or
xlat
xchg
sub
ss
bound
sub
add
cmp
push
pmaxsw
outsl
aad
movsb
pop
mov
rolb
add
mov
push
loopne
pop
add
xchg
lahf
test
xchg
push
mov
into
loope
sub
dec
gs
in
mov
push
pop
inc
std
sub
mov
out
mov
and
dec
xchg
mov
scas
ror
or
std
jae
mov
dec
in
mov
std
fnsave
pop
mov
add
dec
int3
jns
lcall
mov
sbb
fmull
sub
fldcw
bound
mov
inc
pop
ret
xor
inc
hlt
and
add
fwait
pop
mov
xchg
lret
mov
daa
pop
imul
test
ljmp
add
inc
inc
cwtl
xrelease
xor
xor
or
mov
or
shll
jp
xor
int3
pusha
cwtl
rcr
push
fwait
cwtl
and
daa
xlat
mov
add
sbb
fstps
mov
fisubs
nop
fsts
push
daa
jmp
cmp
inc
icebp
loop
lret
das
ror
and
fucomi
js
cmp
xchg
mov
push
sahf
push
and
mov
mov
iret
push
add
mov
sahf
push
mov
xchg
dec
mov
mov
das
lahf
mov
iret
adc
movsb
pop
add
fadds
add
push
fcmovb
mov
adc
iret
push
cld
xchg
dec
inc
adc
xchg
popf
sbb
dec
xchg
or
cmp
insb
pop
push
fcompl
jne
push
cli
push
ffreep
xor
jbe
xlat
or
mov
cmp
shlb
popa
pop
mov
rclb
roll
shl
fadds
jns
popf
inc
nop
push
mov
sbb
pop
inc
push
pop
stc
sbbl
dec
js
or
dec
ficoml
pusha
mov
jno
scas
loope
pop
mov
xor
insl
xchg
int
dec
pop
jno
sbb
aam
cld
adc
movsb
into
sub
imul
outsb
ja
test
mov
push
push
cmpl
jle
lcall
jae
ja
push
or
shlb
xchg
inc
and
jb
and
inc
inc
inc
fcomip
gs
clc
loop
out
test
push
adc
mov
les
or
and
add
js
cmp
imul
mov
dec
loopw
or
jbe
lcall
pop
je
sbb
xlat
imul
bound
add
jp
test
cmpsl
imul
push
jb
add
mov
aaa
jle
in
lods
scas
sub
lret
popa
test
rclb
mov
push
push
and
push
jg
icebp
test
scas
scas
xchg
mov
push
add
inc
inc
mov
pop
sub
bound
je
and
lods
int3
cmp
out
pusha
mov
inc
faddl
pusha
mov
mov
or
pop
mov
repnz
int
lret
imul
sbb
push
push
add
sbbb
xor
pop
aaa
inc
cltd
push
fcmovnu
aam
aam
and
mov
mov
mov
pop
pop
cmpsb
cltd
mov
insb
test
je
cmp
pop
xchg
call
xchg
jl
ror
inc
fwait
lds
pop
imul
testl
inc
jnp
into
lods
and
js
loopne
jmp
cli
loopne
inc
shl
stos
movsl
add
fistpl
mov
inc
xchg
pushf
ds
mov
sub
inc
sub
icebp
clc
cs
nop
mov
sub
shl
sbb
lahf
les
mov
test
outsl
sub
add
scas
fwait
pop
xchg
in
addl
sahf
jb
cld
cmc
test
idivb
into
and
sbb
pop
pop
lcall
insb
sbb
push
daa
into
mov
push
les
mov
divl
pop
sbb
and
imul
insl
adc
push
jae
or
dec
rorb
pop
ds
pop
push
vpmulhuw
fdivrp
pop
pop
shrb
clc
je
push
fs
nop
cmp
xchg
stc
les
sbb
jbe
aad
mov
push
xorb
jmp
scas
pusha
sub
in
pop
add
out
lds
jmp
inc
dec
fmul
bsf
scas
outsb
cmp
jbe
loop
fcmove
dec
aad
shrl
mov
cmp
dec
lock
or
loop
dec
dec
and
xchg
inc
add
addr16
fistpll
xlat
aam
sub
mov
pop
gs
jb
in
xchg
dec
shl
pop
in
lret
cmpb
in
pop
sub
inc
out
fnstsw
push
arpl
sbb
incb
outsb
inc
xchg
pusha
pop
mov
out
enter
add
jae
jle
je
push
pop
ds
std
or
test
xchg
add
loopne
sub
fwait
jnp
cmp
adc
cmp
xorl
xor
mov
mov
imul
pop
and
jmp
lock
or
jae
lods
pop
mov
cmpsl
mov
cltd
subb
jmp
push
das
popf
cmp
mov
ds
sub
xchg
ror
xchg
addr16
jns
pop
sbb
ds
or
mov
pop
adc
cmp
jmp
jbe
ds
mov
cmp
and
push
lret
sbb
inc
and
lods
pop
addb
sarl
dec
sbb
ret
stos
or
inc
jae
lods
inc
fst
enter
inc
adc
xor
mov
je
cwtl
cmp
lock
fs
sbb
dec
inc
icebp
mov
xor
mov
or
lods
fcmovnu
jne
cmp
repnz
aas
daa
cmp
or
lcall
and
adc
pushf
lret
rclb
sbb
push
dec
das
pop
stos
out
push
test
lret
lods
jp
daa
int
dec
ret
insb
aam
cmc
leave
jmp
stos
xchg
cli
loope
jmp
std
mov
pop
xorl
dec
push
xor
pop
insl
push
arpl
ret
dec
in
lods
stc
scas
inc
enter
pop
or
cmpl
sarb
lods
hlt
imul
inc
fiaddl
sub
in
movsb
cli
dec
xor
pop
fst
notl
adc
push
sub
loop
insb
and
icebp
aas
cmpsb
pop
ja
sbb
cmp
jmp
and
push
into
ret
out
fdivrl
sub
add
xchg
push
pop
pushf
mov
dec
push
cmpsl
ret
stos
repnz
loopne
mov
xchg
inc
fstp
cmp
fistps
mov
mov
data16
mov
mov
es
jle
in
push
jmp
push
sub
inc
inc
out
pusha
xor
ror
adc
push
jb
leave
or
mov
pusha
movsl
out
inc
push
mov
jne
sbb
jge,pt
fucomp
shrb
nop
jmp
push
dec
in
mov
leave
cmc
xchg
pslld
in
test
imul
test
ss
cmpsb
addl
sub
testl
adc
sbb
sbb
out
fcmovnbe
xchg
icebp
mov
mov
mov
sbb
mov
js
adc
mov
add
aam
push
mov
push
push
and
mov
negl
pop
jbe
push
sub
adc
xchg
xor
jne
stos
adc
icebp
jne
lret
ss
sub
mov
and
inc
mov
cltd
add
aas
inc
jb
cmp
jno
subb
jne
std
cmc
adc
adc
mov
movsb
clc
ret
sub
inc
push
fwait
mov
add
in
pushf
and
jl
jo
dec
dec
push
addl
mov
movsb
push
sub
xor
clc
ljmp
adc
test
cmp
stos
pop
add
ret
ljmp
inc
fwait
cmp
xchg
rcrl
ja
lock
dec
mov
inc
aad
rorb
sub
jg
dec
mov
add
inc
jnp
jg
into
pushf
pop
clc
fwait
xchg
gs
cld
in
scas
mov
push
pop
adc
inc
sub
into
jnp
jge
push
cmpb
dec
mov
or
jbe
dec
push
dec
dec
jecxz
pop
push
inc
or
mov
gs
or
popa
orb
cmp
sbb
aad
roll
jge
clc
daa
xchg
push
insb
mov
outsl
dec
xchg
notl
jmp
daa
pop
dec
andb
mov
cltd
call
pop
xor
xchg
das
cs
sbb
loop
inc
cmpb
lods
and
mov
data16
into
add
add
push
sti
push
cmp
dec
pop
fbstp
mov
rcll
push
mov
clc
dec
mov
dec
outsb
shlb
idivb
sbb
push
sbb
lds
mov
or
push
mov
add
lret
and
mov
xor
outsl
movsl
cmp
xor
xor
ficomps
cld
dec
push
clc
ljmp
popf
push
and
mov
aaa
and
testl
cld
jle
pop
xchg
mov
adc
mov
in
stc
inc
jb
notb
xor
mov
add
scas
cmpsb
and
aam
nop
add
aam
cmp
xchg
inc
stos
dec
inc
pinsrw
pop
xor
cmp
cmp
adc
and
add
cmc
in
fdivs
mov
fdiv
mov
leave
jecxz
ja
xchg
in
inc
xor
addr16
push
sub
in
mov
xchg
cmpsb
jcxz
dec
adc
jae
mov
movl
cwtl
in
jp
push
jp
push
lods
push
lods
pop
movsb
jno
ret
enter
iret
imul
push
add
ja
mov
shl
mov
lods
pop
inc
xor
dec
adc
mov
lea
lods
mov
push
cmp
sub
mov
mov
dec
int3
adc
pop
gs
rcrb
insb
and
repz
jo
or
adc
aas
divl
xchg
ficoms
jmp
push
test
das
xlat
jl
sub
adc
cmp
movsl
xchg
sub
icebp
mov
rcll
mov
jbe
std
sbb
sbb
xchg
icebp
cmp
cwtl
dec
adc
movsl
add
xor
aas
shrb
sarl
dec
bswap
adc
aas
add
cld
mov
jl
or
mov
adcb
push
daa
data16
shll
push
push
leave
sub
mov
sti
rorb
add
pop
xchg
inc
sbb
pop
jne
add
dec
pop
jl
cmp
mov
nop
mov
xor
inc
je
ljmp
sbb
cmp
pop
stos
mov
mov
inc
int3
xor
jg
cmpsb
out
fdiv
sbb
add
ja
sub
pop
jb
lret
outsb
push
add
outsb
add
adc
sbb
push
arpl
mov
stc
aam
cmc
idivl
iret
loope
aam
dec
mov
dec
repnz
push
pop
sub
mov
movswl
dec
and
gs
les
out
xor
dec
cmpsb
repz
xor
addr16
xchg
loopne
fsubrl
das
push
sub
mov
inc
lret
insb
jecxz
pop
test
shll
cmpsb
and
jecxz
imul
push
mov
je
mov
xor
cmc
cmp
lods
or
daa
lret
ljmp
pop
lds
mov
sti
cmc
adc
adc
loope
repnz
mov
lcall
add
outsw
pop
xchg
clc
sbb
cmp
in
push
xchg
mov
cmpl
push
pop
dec
mov
daa
dec
les
inc
push
sub
dec
scas
xor
push
add
dec
mulb
adc
jo
mov
fimuls
std
push
bound
lods
fucomp
or
mov
mov
add
lcall
test
pop
xor
sarl
xchg
repnz
mov
pop
dec
lods
and
add
mov
sub
lods
mov
sub
add
push
out
aad
cmpsb
jnp
add
inc
loopne
ret
xchg
test
stos
add
mov
sahf
out
ja
adc
loope
mov
insl
adc
cmpsb
xchg
sahf
jb
je
jmp
data16
inc
dec
hlt
pop
xor
aad
es
inc
rorb
mov
mov
les
insb
ds
jo
fs
pop
push
sub
stc
popf
sti
mov
push
cmp
dec
inc
inc
ror
cli
mov
call
aaa
and
fwait
or
cmp
ss
sti
aaa
pop
xchg
jmp
sbb
in
pop
shrl
jno
sub
cmp
add
std
cwtl
sbb
push
push
jg
jno
cmp
jge
stos
jmp
push
je
cmpsl
inc
mov
mov
rep
or
push
adc
test
je
pushf
mov
pop
xchg
fistpl
mov
push
fcoms
popa
rorb
push
dec
cmp
inc
adc
sbb
xchg
outsb
orb
lea
and
adc
popf
ja
loopne
or
out
dec
xor
loope
fnstsw
mov
cwtl
sarb
jae
ds
push
jne
mov
pop
dec
ret
jno
lods
es
jne,pn
into
call
pusha
xlat
inc
jnp
rolb
pop
push
sub
push
lods
test
push
inc
add
add
mov
fildll
xor
fdivrl
sbb
jle
or
je
shrd
and
or
fildl
data16
mov
inc
stc
pop
into
ret
pop
and
repnz
pop
int
icebp
pop
insl
xlat
mov
add
fwait
mov
filds
scas
mov
push
mov
pop
cmpsl
cmp
cmp
inc
push
sub
lea
xor
or
fdivr
add
arpl
popa
mov
sbb
sbb
xorb
pop
adc
adc
push
fisubs
push
aaa
jmp
movsl
pop
mov
lods
fstp
fisubrs
mov
or
lcall
pop
fwait
out
pinsrw
ret
add
out
xor
popa
add
and
lea
push
sub
sub
inc
inc
movsb
insl
xor
daa
jnp
push
popa
jmp
sbb
jno
hlt
push
jne
lcall
shlb
or
popa
xor
sub
lods
imull
loopew
test
xchg
sbb
mov
xor
dec
addl
jmp
mov
ret
es
sbb
xorl
mov
sbb
push
pusha
cmp
mov
ds
pop
outsb
stos
inc
lret
mov
lods
inc
or
xchg
pop
cmp
cltd
jecxz
das
ss
jnp
div
mov
clc
stos
aad
push
shl
jb
mov
push
notb
and
shll
mul
dec
adc
jmp
popa
sub
jb
aad
push
leave
pop
inc
leave
cmp
inc
inc
ret
je
test
adc
cmp
adcl
mov
or
cld
fildll
push
pop
clc
ja
mov
in
cmp
mov
xchg
imul
cltd
mov
shr
push
sahf
and
push
mov
add
mov
jnp
test
cmc
add
lahf
idiv
ret
adc
insl
xchg
push
mov
xor
pusha
push
xchg
xchg
or
or
sub
sti
andl
push
aaa
sub
xor
loopne
mov
cli
mov
xorl
outsb
xchg
enter
stc
cli
sahf
shlb
cwtl
pop
dec
sbb
out
push
shll
in
mov
push
jg
cmp
sub
and
push
in
sti
jne
popf
push
lret
xchg
cmp
int3
call
inc
std
adc
push
mov
data16
bound
pop
loopne
cltd
je
mov
xadd
jne
inc
test
aaa
cmc
test
dec
icebp
dec
mov
test
push
pop
inc
mov
fsubl
sbbb
cmp
bound
lret
lret
subb
push
push
mov
or
data16
pop
sarl
call
and
jecxz
mov
sub
pop
xor
fsubs
fstl
lahf
leave
cmpsb
mov
fisubs
sub
cmp
and
dec
and
stos
movsb
int
gs
mov
jno
popf
add
dec
or
sub
cltd
pop
sahf
dec
pusha
add
repz
dec
and
or
mov
icebp
jl
sbb
mov
add
push
pop
mov
mov
fs
sbb
lret
xlat
push
inc
adc
mov
mov
jle
inc
fucom
in
jmp
jecxz
addr16
and
cmpsb
mov
inc
jnp
adc
jae
sar
call
dec
sub
xchg
jge
ror
int
inc
and
pop
mov
mov
xchg
pop
test
inc
mov
dec
xchg
mov
push
adc
and
xrelease
sub
mov
xor
stc
sub
scas
je
sahf
mov
xchg
and
out
push
xlat
loop
push
pusha
pushf
lock
sbb
dec
ljmp
jbe
fidivl
mov
nop
push
sbb
dec
sub
sub
jl
add
jne
inc
xor
js
sbbl
into
rclb
pushf
fwait
push
jp
iret
ret
notb
adc
push
xor
ljmp
xchg
push
lods
stos
xchg
mov
popa
cmp
mov
int3
ret
outsl
mov
fisttpll
jnp
jge
clc
fisubrl
push
mov
mov
aam
hlt
push
stos
sub
ljmp
mov
fisttpl
subl
cmp
push
push
dec
cmp
mov
clc
loop
inc
daa
jmp
addr16
lds
adc
or
fcmovbe
rcrb
icebp
std
daa
stos
mov
xor
cmc
sub
mov
or
repz
fistpll
sbb
fmuls
in
test
mov
jo
popa
rcr
push
test
mov
or
push
andb
pop
aad
jbe
cmp
pop
mov
lret
packssdw
mov
hlt
andb
out
movsl
sti
mov
fiadds
out
push
xchg
scas
adc
ret
scas
or
cwtl
mov
xor
dec
insb
cmp
subl
or
dec
or
and
mov
ds
inc
and
xor
data16
in
mov
mov
mov
add
push
sbb
out
movsl
cmc
dec
push
push
xchg
rorl
outsb
mov
fcmove
mov
jo
shll
mov
mov
movsl
inc
test
and
in
ss
jecxz
mov
in
imul
orb
xchg
sbb
stc
enter
nop
xchg
lods
daa
icebp
and
mov
stos
mov
and
roll
outsl
stos
push
xor
jbe
and
cmpsb
sub
aad
hlt
adc
ljmp
xchg
jp
rcll
push
rolb
hlt
sub
cltd
mov
xchg
stc
ja
cmp
ljmp
lret
pop
dec
test
cld
push
cmp
xor
fisubs
mov
xchg
xor
ja
mull
mov
arpl
push
jecxz
imul
mov
bound
pop
cs
data16
ss
test
aas
icebp
insl
mov
aaa
cld
mov
inc
data16
sub
shrl
mov
out
pop
xor
mov
ret
popa
inc
jle
aas
sbb
loope
push
daa
retw
test
and
pop
ret
sub
mov
xor
and
inc
sub
cmc
pop
data16
ds
mov
dec
sbb
stos
mov
adc
es
rcll
and
jae
mov
cmp
xchg
sarb
pop
cmc
jecxz
xchg
int3
mov
dec
clc
outsl
fcoml
add
scas
cmpsl
fs
ret
cmc
jecxz
mov
cmpsl
lea
sbbl
mov
adc
xchg
xlat
push
xchg
cmp
mov
js
lret
sub
popa
sbb
xor
scas
les
cmp
jmp
jl
jle
lock
outsl
std
adc
out
sub
lret
ja
stc
xchg
in
push
mov
pop
enter
test
push
cmp
jbe
mov
xchg
push
rorb
xor
stos
pop
fcomps
mov
adc
lcall
push
fs
mov
mov
in
popa
cltd
filds
push
fisubrs
mov
push
pop
lods
push
pushf
jb
pop
push
jbe
pop
jp
push
sbb
fmuls
push
cmc
ficompl
sub
push
repz
std
mov
jae
add
add
xchg
out
popa
pop
push
sub
das
or
jb
adcb
pop
sub
inc
mov
out
ljmp
repz
xor
lods
mov
les
pop
adcb
call
mov
cmp
pop
or
cli
fmul
sbbb
mov
sub
push
ljmp
dec
into
jge
sbb
add
xor
jp
in
pop
mov
ljmp
dec
fidivl
jg
jmp
dec
out
nop
ds
jo
mov
sbb
jae
pop
lret
or
jmp
or
inc
jb
cld
roll
adc
out
rcll
jecxz
xor
add
les
pop
iret
test
neg
xchg
cli
push
dec
iret
ret
mov
hlt
mov
scas
dec
xlat
loop
mov
in
movsb
out
and
fsin
loopne
mov
push
shr
pop
loope
push
cwtl
adc
adcl
push
sub
jecxz
pop
adc
sub
test
fldcw
rolb
cld
mov
lahf
mov
dec
nop
pop
int3
aas
mov
jae
call
hlt
sbb
cmp
stos
add
or
jg
das
popa
mov
or
mov
in
lea
pop
jae
push
repnz
fnsave
gs
xchg
dec
cltd
sbb
cmp
mov
cmp
push
push
mov
roll
addr16
or
or
lret
hlt
test
lds
pushf
gs
flds
outsb
jbe
in
insl
out
loope
jae
stos
add
cmc
clc
aaa
jo
arpl
sbb
and
push
dec
test
mov
mov
xchg
or
icebp
cltd
mov
repz
pop
insl
xor
popa
jmp
mov
inc
adc
inc
sbb
arpl
stc
jne
inc
pushf
add
addr16
ja
mov
sub
test
ja
xor
push
mov
cld
leave
fldl
pusha
jp
pop
lea
jbe
aam
sub
out
addr16
das
cmc
lods
insb
pop
or
and
push
sub
sub
adc
popa
ret
inc
ret
mov
lret
mov
loope
push
test
and
or
enter
mov
mov
loop
add
add
mov
mov
ljmp
push
dec
out
clc
ret
and
in
movsl
adc
cmpsb
in
test
sbb
mov
and
push
test
fwait
ja
xchg
fsubrl
jge
or
or
adc
sbb
and
daa
sbb
or
sbb
dec
out
loopne
push
mov
les
push
out
imul
push
adc
pop
push
xlat
mov
mov
outsl
xchg
dec
push
mov
pop
or
incb
cltd
pop
inc
cmpsl
iret
clc
adc
push
mov
out
outsl
jb
add
lret
insl
int
and
cltd
mov
js
sarl
xchg
sub
dec
pop
and
push
in
outsl
mov
sarb
inc
in
jp
adc
mov
and
daa
sbb
scas
sbb
jbe
cvtdq2ps
inc
inc
mov
out
or
mov
fisttpll
into
cmp
lret
xchg
mov
stos
cmp
dec
into
cli
stc
pop
enter
subb
out
adc
or
inc
push
cmc
and
pop
ret
push
in
cmp
sarb
xchg
dec
xchg
push
jmp
pushf
mov
repnz
and
stos
repnz
out
repnz
lret
pushf
cld
cmp
sub
dec
pop
adc
inc
adc
repz
cltd
xchg
mov
mov
test
xor
xchg
das
outsl
dec
push
addr16
push
insb
iret
int3
mov
mov
stos
inc
or
mov
push
je
xchg
out
fld
lret
push
popf
pop
add
cmc
jo
or
mov
das
or
fdivrs
and
pop
loope
movsl
or
mov
mov
lcall
lock
mov
sarl
jg
adc
pop
dec
mov
xchg
lret
pop
mov
add
xor
add
std
ret
cli
ljmp
fistps
lods
mov
and
rcrb
lret
mov
mov
mov
mov
neg
loopne
jae
dec
xor
jmp
mov
add
mov
sbb
mov
add
or
popf
push
rorb
push
fcompl
lock
cmp
jns
les
push
jmp
fwait
test
lock
sub
and
mov
sub
stos
movsl
jne
hlt
cmp
fs
std
scas
shlb
stos
inc
testl
bound
pop
test
shll
mov
popl
and
ljmp
insb
add
popf
dec
jae
popa
mov
in
adc
jne
repnz
pop
or
pop
jmp
insl
pop
call
out
fstpt
sahf
and
mov
mov
push
pop
in
scas
es
pop
fsubrl
test
fdivr
fiaddl
adc
sub
inc
mov
jmp
call
jle
pop
in
cli
push
sub
jns
mov
clc
orb
imul
lret
or
out
xor
fcompl
sbb
stc
mov
jmp
push
in
clc
loopne
lds
mov
xchg
pop
hlt
cmp
js
inc
xchg
cltd
fadds
adc
jb
pop
leave
add
pop
cmp
lods
rcll
mov
mov
shll
xchg
adc
mov
and
mov
add
push
cmp
adc
pop
dec
aaa
lods
movsb
pop
mov
out
or
adc
data16
xchg
mov
ljmp
fdivrs
dec
or
mov
jnp
outsl
fisttpl
dec
cmp
lods
mov
or
cmpsb
mov
int
ja
gs
pop
sbb
clc
imul
shlb
pushl
xor
inc
jns
sub
xchg
rcr
push
mov
add
call
and
int
fwait
inc
dec
jns
fists
fwait
imul
subb
ljmp
fistpl
xchg
push
mov
inc
loopne
jge
cmpsl
jae
and
cltd
xchg
jge
dec
sub
jno
roll
jo
mov
cmpsl
dec
pop
xchg
push
mov
pop
test
or
lahf
xchg
or
mov
popf
cltd
scas
mov
fs
lods
jnp
push
pop
add
stos
dec
pusha
sbb
mov
scas
outsb
and
and
cmpsb
cmp
lods
jo
push
inc
jecxz
fstps
cmp
jp
mov
jne
inc
dec
xor
lcall
sbb
mov
ljmp
mov
add
xchg
xchg
push
insb
pop
movl
mov
jo
mov
push
inc
sbb
test
adc
ret
add
out
int
popf
and
orb
iret
cmpsb
dec
jp
add
or
les
add
inc
pop
es
mov
xor
subl
sbb
into
imul
into
shll
mov
and
add
lea
mov
arpl
subb
ds
enter
dec
test
loope
pop
push
pop
out
cmp
stc
xchg
mov
int3
adc
dec
mov
fdivrl
fcmovnb
xor
mov
pop
pop
and
and
rol
js
test
in
addr16
xlat
je
hlt
inc
inc
pop
or
xchg
aad
sub
jmp
repz
andb
dec
mov
dec
fwait
repz
in
xchg
sub
movsb
or
jnp
mov
into
sbb
js
mov
into
in
ror
sbb
mov
rol
sub
pop
in
nop
push
adcl
dec
mov
incb
push
jle
addr16
prefetcht2
push
fimuls
sbb
xlat
arpl
inc
jg
xchg
sahf
xchg
lret
daa
cmpsl
push
xor
dec
inc
inc
jbe
scas
push
sbbl
dec
das
ret
imul
add
adc
aaa
push
dec
pop
lret
xlat
mov
movsl
mov
pop
ret
movsl
push
jae
or
xor
enter
push
xchg
sbb
je
cmp
cmpsl
adc
push
orl
inc
fidivs
push
jb
out
lcall
mov
imul
inc
xchg
stos
lock
inc
aam
jle
add
lds
xchg
fiadds
adc
leave
pusha
xchg
js
jae
dec
in
mov
inc
dec
dec
xchg
cmp
mov
xor
leave
out
or
pop
ret
out
inc
aad
mov
jp
xor
adc
adc
aaa
pusha
rol
sti
out
mov
mov
mov
stos
and
pop
movsl
jne
adc
les
mov
lahf
jae
or
push
jp
jmp
outsb
mov
jge
cs
push
repnz
sarl
and
dec
aaa
push
mov
dec
xor
fstl
mov
test
dec
adc
sub
pop
dec
lods
ret
notb
in
ror
imul
cmp
pop
mov
loopne
cmpb
imul
out
shrb
xchg
mov
dec
mov
add
jbe
sub
fndisi(8087
popf
mull
inc
test
jmp
cmp
xchg
sbb
int
push
in
insl
ja
mov
cmp
pop
sbb
push
cs
or
repnz
je
cld
and
add
mov
sbb
xor
test
outsb
divl
inc
jns
sub
test
or
test
mov
rclb
xor
adc
inc
into
adc
aaa
mov
loop
ret
loopne
in
in
mov
and
add
arpl
inc
adc
lock
mov
test
stc
and
pop
scas
cs
movsl
subl
or
mov
push
daa
les
push
push
out
fadd
jo
clc
js
into
adc
fisubs
data16
cmp
mov
lahf
mov
arpl
mov
iret
and
int3
pop
popf
jnp
loopne
lea
in
mov
hlt
mov
lock
jnp
jl
xchg
jbe
fwait
push
adcl
dec
nop
jnp
add
int
xor
push
pop
dec
ja
mov
mov
dec
mov
jb
push
pop
bound
clc
outsb
les
jg
gs
jl
and
dec
iret
outsl
jl
imul
ret
sub
pop
cmp
imul
xor
and
dec
pusha
add
jno
rolb
andb
and
andb
daa
aas
xor
push
add
ss
sbb
fs
push
in
xchg
hlt
pushf
repnz
pop
nop
ja
and
out
jo
fimull
mov
xor
xor
and
lret
fcoms
cli
xchg
sub
aas
mov
aaa
sub
mov
arpl
adc
jle
xchg
cmc
ror
cs
jp
cmpsl
shl
push
mov
sti
push
xchg
sbb
add
push
add
xchg
pushf
and
in
xor
rcrl
mov
sahf
outsl
sbb
sbb
out
mov
or
inc
push
mov
pusha
pop
jbe
test
fistpl
bound
adc
jae
xchg
jp
sub
inc
hlt
stos
adc
ret
mov
loopne
xchg
push
xchg
js
in
xchg
xor
and
mov
fbld
inc
in
xchg
cmpb
dec
lcall
mov
jns
aaa
cs
pop
or
loop
mov
and
jo
sub
fdiv
dec
sbb
mov
mov
inc
adc
pushf
jp
fdiv
mov
push
jne
adc
dec
gs
cmp
push
stc
push
xor
cmp
test
jb
es
push
dec
dec
or
xchg
inc
roll
cli
lock
mov
xor
negb
mov
inc
jno
repnz
sub
jae
jp
leave
ss
adc
jne
cmp
mov
stos
dec
xchg
jbe
mov
push
mov
out
push
mov
addr16
add
arpl
and
test
movsl
xchg
ror
inc
int3
jnp
cltd
loope
or
nop
pushf
inc
sti
mov
aam
and
add
sbb
sbb
jbe
addr16
loop
les
pop
roll
jo
imul
push
ficomps
hlt
in
ss
mov
ficoms
aaa
out
andb
mov
repz
aad
lret
lret
mov
cs
cltd
cmp
xor
ds
ss
jae
pop
push
xchg
add
pop
mov
pop
insl
loope
insb
xchg
mov
into
inc
pop
xlat
add
pop
push
fidivl
xchg
adc
movsl
pop
xchg
subb
int3
fwait
pop
lahf
push
stos
pop
cmpsb
cli
mov
leave
fnstcw
enter
mov
push
jo
mov
mov
rcr
es
movsb
cmpsb
outsl
movsb
fwait
dec
push
pusha
sbb
xlat
and
cli
inc
jg
mov
in
icebp
cwtl
and
pop
lea
sub
in
popa
xchg
pop
sub
inc
lea
mov
fsubl
in
mov
adc
mov
lret
pop
stos
cmpsb
pusha
jmp
mov
sbb
test
pop
outsb
mov
loop
addb
add
clc
cld
push
das
fcomip
mov
or
cmp
pop
das
xor
sbb
ja
fmuls
fstps
jg
cli
inc
jl
mov
mov
cmp
outsl
sub
cmp
add
ficoml
xchg
pop
ja
mov
insb
dec
mov
pop
or
shll
push
push
and
out
push
and
dec
xor
mov
pop
cmp
loope
xchg
test
dec
pop
loopne
mov
dec
xor
rcrl
dec
push
push
add
loope
insb
lock
mov
aam
and
cmp
push
mov
cmp
fwait
cmc
hlt
cmp
xchg
push
mov
testl
loopne
orb
in
cmp
outsl
dec
and
adc
outsl
or
inc
xchg
popf
push
aad
leave
enter
sti
mov
xchg
je
scas
xchg
fstpt
dec
mov
mov
mov
ss
lock
adc
inc
and
movsl
movsl
jbe
fnstcw
sahf
xchg
pop
ja
push
loope
aam
lret
dec
push
xor
out
pop
dec
mov
std
sarl
outsl
push
iret
sub
fidivl
add
repnz
cmp
or
inc
mov
dec
pop
mov
mov
scas
scas
orb
pop
ja
cmp
lcall
adc
addb
pop
inc
and
shll
out
out
jg
adc
jecxz
xchg
jnp
jmp
xchg
lds
into
adc
cmc
call
add
jbe
push
sub
lock
mov
imul
clc
sub
push
cwtl
mov
xchg
push
fidivl
das
jle
inc
pop
rorl
pop
jle
mov
scas
and
xlat
jge
cmp
mov
xchg
daa
and
adcl
js
sub
xchg
pushf
pop
or
sbb
lret
fbld
ljmp
xlat
dec
add
scas
dec
stc
out
or
push
jbe
or
test
cwtl
lret
jg
sti
xlat
rcrl
ja
fbstp
or
add
jae
mov
xchg
add
into
push
addr16
imul
mov
out
rcrb
sbb
aad
adc
test
jp
mov
mov
mov
cmpsb
mov
aaa
sbb
add
addl
mov
or
ret
in
clc
clc
xchg
sarb
test
push
dec
test
ret
cmp
pop
push
pop
mov
add
addb
add
mov
rep
inc
mov
inc
out
gs
sub
add
or
or
dec
and
adc
xor
fstps
mov
je
lcall
push
xor
xchg
lahf
mov
dec
push
push
cld
cmpb
ds
mov
push
cmp
pop
imul
xchg
mov
cwtl
push
xchg
cli
cmp
pusha
sub
inc
movb
iret
test
pop
and
push
jle
arpl
pop
pop
test
movsb
adc
push
imul
xlat
dec
adc
je
popa
push
lea
movsb
pushl
mov
out
sub
sbb
or
cmp
jmp
aad
mov
outsb
xor
mov
adc
cmp
xchg
jne
enter
cs
push
sbb
enter
stos
xchg
int3
add
sti
enter
adc
hlt
int3
in
es
adc
pop
pushf
mov
jge
cld
jl
xchg
pop
jle
sub
jge
add
insb
sbb
cmpsl
lea
sahf
push
xchg
mov
rcrb
neg
jmp
rcll
addr16
mov
lds
cmp
gs
fldcw
rcll
js
stos
or
lods
mov
jle
and
sahf
push
cli
mov
and
in
fpatan
test
imul
push
or
call
cmc
xor
mov
popf
mov
jb
gs
pop
leave
jns
xor
sub
mov
bound
xor
movsl
xchg
jno
mov
cmp
xchg
jno
lahf
jp
aad
popa
mov
mov
push
mov
in
push
mov
inc
jl
dec
xor
pushf
push
push
jmp
shlb
out
movsb
and
call
fiadds
shrl
add
jns
popa
je
sahf
icebp
jo
cwtl
aas
pop
adcl
adc
insl
test
in
pop
mov
ja
lret
cmpsl
test
lea
pusha
shr
fisttpll
mov
out
into
enter
xchg
adc
and
test
jg
mov
adc
sarl
jbe
mov
cwtl
pop
out
icebp
cli
sub
push
inc
sub
pop
test
repnz
shlb
repnz
adc
push
lods
mov
push
rcrb
cmp
test
and
push
test
test
mov
sub
aaa
mov
sbb
fnstcw
mov
mov
mov
jae
xchg
or
jbe
pushf
jnp
dec
mov
and
jnp
jae
mov
dec
add
sahf
push
mov
pushl
movsb
ficoms
or
mov
rorb
or
push
xchg
pop
xor
mov
addr16
jecxz
inc
in
dec
and
ljmp
out
jno
inc
fs
inc
fistps
pop
jmp
and
mov
mov
xchg
cmp
dec
aad
cmp
dec
sti
mov
in
fstpl
xor
loope
sbb
pop
stos
sbb
fninit
fnstcw
inc
loopne
repz
inc
jo
cmp
mov
sub
cmp
pop
or
ljmp
dec
or
lret
test
pop
pusha
cmp
mov
ja
xchg
ds
mov
out
jmp
aam
push
insb
cmp
xor
stos
pushf
jo
xchg
cmc
and
add
sub
loope
daa
repnz
inc
fiaddl
es
stos
insb
and
xchg
test
adc
xchg
inc
xchg
mov
lods
jl
ds
and
mov
pop
sahf
push
xchg
pushf
pop
pop
mov
add
arpl
ret
rcrb
push
lcall
cmpsl
mov
mov
push
xchg
leave
popa
xchg
clc
sub
cltd
xchg
loope
jns
mov
mov
test
push
push
jnp
sub
mov
sub
jbe
mov
or
mov
je
incl
lock
ja
and
cmp
aaa
int
mov
das
repz
xor
inc
clc
mov
sti
aas
pop
jne
jb
push
xlat
test
push
xor
clc
decb
clc
xchg
insb
jle
mov
fidivl
inc
mov
mov
xor
inc
int
mov
adc
jae
lret
out
jo
xchg
test
mov
and
roll
daa
mov
or
adc
pushf
xchg
or
out
mov
adc
mov
sbb
ds
test
stos
ds
xchg
imul
mov
push
lea
scas
pop
addr16
mov
cmp
in
jecxz
push
jle
pop
fnstcw
jge
or
repz
sar
mov
testb
andl
rcr
daa
mov
push
lret
mov
loope
lods
mov
scas
cmp
lock
mov
mov
cld
js
push
push
shl
mov
push
sbb
push
lret
lods
add
add
fcoml
data16
into
ss
xchg
and
push
inc
pop
andl
std
cltd
insl
cs
arpl
pop
aaa
mov
repnz
fs
add
gs
dec
adc
pop
xor
stos
rcl
sbb
fstl
jecxz
xor
pushf
lret
js
add
mov
cmp
call
mov
cwtl
dec
out
mov
stos
js
lock
jb
enter
pop
in
nop
lods
xchg
out
jne
jmp
lods
sbb
loope
xor
sbb
ror
loopne
in
shl
rcl
push
clc
mov
mov
fmul
enter
hlt
in
xchg
jbe
outsl
sub
sahf
xor
orb
jbe
fs
xlat
pop
shlb
dec
shlb
xchg
push
test
xor
jl
je
punpckhdq
lcall
in
xchg
repz
fcmovbe
arpl
adc
dec
mov
inc
mov
inc
xchg
loopne
es
cmp
mov
and
inc
mov
loopne
lea
sub
fidivrl
cmp
les
out
pop
adc
and
sub
insl
mov
insl
dec
fistpl
fdivr
es
cmp
pop
add
push
subb
mov
xorb
lret
popf
dec
mov
push
out
pop
mov
sti
inc
sahf
mov
data16
into
je
sarl
loop
mov
sub
daa
notb
mov
in
jmp
pop
aam
push
cltd
js
cmpl
mov
scas
and
cmp
shl
aam
add
pop
pop
lret
test
popf
aaa
sahf
jle
xchg
xor
jno
leave
lahf
mov
stos
stos
push
add
mov
xor
and
icebp
pop
push
cld
add
fildl
addr16
xchg
xchg
dec
pop
int3
sbb
stc
aas
push
mov
ficoml
xor
stos
add
mov
sbb
cld
notb
and
and
dec
shrb
setns
pop
adc
add
sbb
jnp
test
subps
jg
inc
add
dec
mov
loop
xchg
ja
mov
push
cltd
add
sub
cmp
lret
and
lahf
loopne
pop
pop
fsubl
ss
or
icebp
push
shll
sub
pop
add
scas
movsl
sub
cmpsl
push
inc
mov
add
out
mov
fcmovu
cli
cli
movsl
sbb
sbb
sbbl
push
dec
sahf
jmp
push
jp
jnp
clc
pop
jno
lret
or
pop
push
int
add
cmp
shrl
insb
sahf
repnz
mov
mov
shll
loop
imul
xor
sub
jecxz
aas
fdivp
xchg
imul
in
mov
cmp
js
loopne
out
dec
and
dec
psubq
loop
pop
outsl
or
arpl
pop
add
add
push
lret
flds
gs
sub
scas
fisubs
loop
push
pavgw
sarl
and
iret
sbb
dec
mov
mov
cmp
and
dec
cmp
imul
outsb
imul
aam
mov
adc
pop
dec
je
pop
cmp
inc
sahf
addps
xor
xchg
push
cmp
sub
xchg
ljmp
icebp
jno
mov
jl
lds
inc
add
imul
mov
mov
lcall
jmp
mov
aad
adc
xorb
cmp
in
and
mov
mov
leave
xor
mov
scas
aas
pusha
mov
push
out
lds
and
dec
pop
xor
nop
pop
mov
mov
or
subb
mov
push
jg
or
pop
mul
lret
mov
arpl
mov
in
inc
xchg
std
adc
dec
shll
arpl
outsl
cmp
mov
pusha
rcr
ja
mov
pop
pop
push
inc
orb
and
scas
or
inc
dec
leave
subl
adc
leave
stos
push
popa
jno
imul
xor
in
popa
pop
movsb
cmp
outsb
out
outsl
mov
push
cli
popa
adc
mov
ret
je
lods
add
xchg
mov
mov
jne
movsb
inc
jbe
sub
inc
sbb
test
dec
test
imul
rol
push
xchg
cld
lds
inc
out
xor
test
lahf
xchg
ds
or
pop
mov
or
jmp
sub
sarl
mov
in
out
mov
push
pop
js
mov
push
add
xchg
mov
adc
in
dec
add
pop
fsts
mov
int3
lods
repnz
inc
pop
xlat
fisttpl
ret
repnz
subl
xor
pop
add
hlt
or
cmc
xor
dec
fldt
mov
and
jle
xchg
sub
xor
fstl
adc
fwait
add
divl
cmpsb
and
in
and
or
dec
xlat
ljmp
xchg
and
inc
xchg
dec
xchg
or
xchg
add
sub
in
cmc
mov
je
mov
xor
mov
pop
call
mov
rclb
shll
in
mov
xchg
sarb
inc
jbe
dec
sub
pop
out
mov
mov
push
push
scas
pop
stos
cmc
cwtl
sub
and
addr16
adc
mov
and
xchg
jbe
lcall
sbb
mov
push
popa
jg
pop
push
sbb
enter
push
and
mov
mov
mov
std
stc
xchg
nop
and
cmp
gs
shlb
js
xchg
push
or
jne
call
fcomip
add
icebp
jge
xchg
pusha
or
mov
fiaddl
out
sbb
clc
dec
adc
pushf
sahf
fisubl
and
mov
int
push
mov
in
lods
ja
fsubrl
jle
fsubr
xchg
stos
and
xchg
cmp
dec
mov
out
mov
mov
pop
fstpl
cs
subl
jmp
mov
pushf
push
sub
lret
sbb
mov
sti
xchg
mov
cmp
ret
ljmp
dec
xchg
xchg
arpl
mov
jecxz
add
inc
subl
in
sub
jbe
aas
or
jb
call
inc
rolb
dec
lcall
pop
popa
mov
gs
jmp
mov
fistpl
bnd
sar
sub
pop
addr16
push
mov
cltd
jl
dec
inc
add
mulb
mov
push
insb
xor
insb
sbb
pop
jno
loop
jl
inc
jmp
inc
arpl
jge
in
inc
ds
ret
or
xlat
dec
and
test
nop
rorl
mov
pop
fnstenv
popa
lds
mov
lea
das
or
push
dec
in
xor
jl
xor
add
ss
ss
pop
mov
int
ljmp
and
lret
mov
int3
pop
mull
ja
mov
inc
outsb
push
xchg
out
and
jnp
inc
mov
mov
mov
mov
inc
mov
gs
fistpll
dec
xchg
in
inc
pop
rcrb
jne
sbb
aad
js
mov
rorl
hlt
mul
das
push
cmp
mov
mov
xchg
push
sub
testb
popa
imulb
and
out
ret
ja
test
jg
inc
bound
sbb
xchg
das
cmp
sti
cld
daa
lds
loop
mov
sahf
inc
inc
loop
or
pop
out
cmp
fdivrl
add
lret
out
or
dec
mov
jmp
adc
xchg
lcall
mov
mov
out
cmp
push
push
popa
cmp
mov
ficomps
mov
roll
outsb
adc
ss
aam
inc
jb
jp
mov
outsl
shl
repnz
mov
pop
insb
fstl
mov
xchg
aad
dec
in
popa
pop
cmp
mov
and
test
add
mov
ret
rolb
sub
mov
mov
lock
aaa
xor
add
push
cwtl
std
add
test
push
sub
push
lods
sbb
filds
add
imulb
push
outsl
mov
leave
ret
outsb
dec
push
sub
pop
cmp
push
lahf
loop
pop
pop
mov
clc
mov
repnz
mov
xchg
sbb
lret
pop
and
movsb
and
imul
push
stos
pop
jl
into
adc
push
mov
push
out
repz
aad
dec
push
push
shlb
pop
xchg
or
nop
fidivl
inc
jne
pop
mov
ljmp
fistl
xor
jb
cmp
leave
xchg
daa
xchg
imul
cld
incl
fdivl
xor
bound
dec
ret
mov
fsubs
insl
cli
xchg
adc
sbb
mov
xchg
xor
ror
or
pop
scas
pop
adc
xor
jbe
mov
in
adc
movsl
dec
lcall
daa
or
hlt
ffreep
gs
push
push
popa
lods
in
daa
lret
and
mov
dec
inc
cltd
cmp
imul
xchg
test
fsubrl
push
jae
sub
sarl
cmp
shl
enter
cmpsl
ljmp
sbb
cmp
mov
cmc
leave
xchg
scas
lahf
lea
cmp
add
xchg
loope
sbb
std
mov
xchg
xchg
test
sbb
mov
sub
popa
push
jecxz
sbbb
in
adc
jmp
dec
add
inc
clc
sub
scas
dec
outsb
jecxz
jecxz
xor
subl
mov
sbb
add
mov
jecxz
roll
xor
fisttps
into
or
stos
jge
es
les
out
sbb
imul
push
mov
mov
and
push
sub
sti
out
movsb
mov
es
jo
sub
movsb
cmpsb
and
and
ret
adc
mov
xor
dec
loopne
inc
mov
push
leave
test
or
cmp
cld
inc
dec
cmc
int
cwtl
lods
movsb
xchg
leave
es
cmpsl
adc
call
adc
mov
jbe
inc
cmp
js
mov
push
push
mov
int3
scas
das
pop
xchg
inc
sbb
scas
push
dec
jg
out
cmp
shlb
jmp
out
push
adc
cmp
mov
xchg
inc
pop
cs
mov
movsl
call
je
add
enter
pop
test
push
ljmp
lcall
mov
lret
mov
and
rsqrtps
xchg
out
lods
adc
adc
lock
hlt
out
mov
scas
jbe
das
xchg
aas
inc
lahf
cmpb
adc
and
rclb
or
ss
daa
fsubrl
sbb
pop
cmp
pop
lahf
ret
pop
pop
sub
repnz
imul
push
jp
jo
stos
sbb
dec
mov
gs
xchg
in
adc
inc
adc
sbbb
inc
ja
int3
in
mov
enter
or
dec
test
inc
ss
push
test
jecxz
push
shr
mov
les
mov
push
ss
bound
pop
mov
inc
inc
in
lods
sarb
xor
mov
pusha
test
loop
xlat
lods
mov
push
push
fsubl
xor
nop
jg
pop
push
stos
dec
jbe
mov
pusha
mov
dec
mov
mov
push
push
stc
xor
push
pop
pop
jmp
lock
xchg
fs
xchg
arpl
mov
inc
movsb
mov
mov
sarl
leave
stos
jmp
or
in
lahf
mov
xchg
lcall
add
ffree
lods
rolb
fisubs
mov
mov
xchg
stc
mov
and
addr16
lcall
outsl
dec
ret
mov
jb
std
mov
push
ja
mov
fmull
mov
or
repnz
mov
mov
lds
mov
call
cwtl
movsb
mov
jmp
pop
int3
pop
pop
pop
int3
lods
sbb
bound
push
pop
and
or
test
jno
and
push
inc
mov
addr16
fidivs
jp
lahf
in
sbb
sub
xchg
mov
in
outsb
loope
in
pop
mov
mov
ffreep
mov
mov
inc
loope
jg
int
xchg
testb
out
dec
ja
add
push
outsl
mov
mov
xor
mov
hlt
cmc
call
or
cld
out
es
dec
icebp
push
bound
jge
sub
mov
or
imul
jnp
inc
cmp
fstps
cltd
ret
dec
mov
dec
jo
jno
aas
lret
or
les
push
add
cmpsl
sarl
rcrl
or
xor
les
mov
and
out
addr16
sbb
pop
dec
aaa
rcll
mov
fidivl
arpl
imul
pop
sbb
xchg
dec
pop
jo
cmp
xor
sub
dec
add
mov
cmp
cmc
mov
jns
pop
push
stc
add
stc
movsl
sahf
subl
xor
std
nop
rcr
jp
adc
inc
loop
movsb
jae
cmpsb
mov
mov
fwait
in
inc
in
movsb
push
push
mov
jle
cmp
mov
fistl
outsb
fcompl
je
lods
add
shl
sbb
xchg
xchg
cmp
pusha
in
and
xor
push
mov
sub
je
das
lods
jmp
data16
lods
inc
push
push
fstl
add
cmc
enter
repnz
stos
dec
insb
loope
fisttps
push
mov
sbb
push
imul
into
stos
arpl
jno
stos
lds
rcrb
arpl
xchg
popf
pop
mov
dec
lods
ret
push
ja
sub
fwait
push
inc
xchg
iret
sbb
pusha
ds
jno
std
push
cmp
pop
add
rolb
leave
and
outsl
cmpsb
pop
adc
arpl
or
or
pop
xor
pop
xchg
out
je
mov
or
mov
loopne
icebp
adc
mov
fwait
test
jmp
sub
addr16
dec
sub
es
push
mov
pop
inc
repz
mov
stos
bound
not
lea
fisttpl
ds
lret
push
and
dec
xchg
nop
je
or
and
jg
dec
sub
loopne
push
decl
test
mov
aaa
xchg
cmpsb
dec
int
int3
xor
jg
pop
inc
dec
ret
mov
adc
hlt
mov
lret
or
jge
dec
aaa
dec
dec
cmp
push
neg
pop
ja
add
int3
mov
xchg
es
xor
cli
loopne
lods
sahf
and
popf
xchg
decl
xchg
xor
push
js
inc
inc
fdivs
retw
mov
inc
fwait
lods
rorb
pop
adc
aas
std
push
push
mov
jbe
jg
cmp
stc
loopne
dec
into
inc
push
xchg
push
pop
mov
xchg
cmp
adc
mov
leave
fsubrp
mov
aaa
lret
bound
ret
movsb
repz
and
rol
jl
or
scas
add
xor
sahf
mov
ds
xor
sbb
mov
int
cmp
push
or
mov
jecxz
lea
push
sahf
or
push
ror
and
cmc
in
loope
and
cmp
jae
lcall
icebp
cmp
subl
insl
and
adc
ljmp
js
das
andb
rcr
test
test
jecxz
and
sbb
icebp
or
clc
pop
mov
int3
cmpsl
imul
adc
jo
xor
jbe
adc
adc
pushf
movsb
daa
lock
aaa
push
jbe
push
rcrb
xchg
popa
mov
and
sahf
stos
enter
pushf
push
mov
inc
or
stos
mov
stos
jmp
shl
cmp
inc
aaa
frstor
add
push
fldenv
xor
fsubrl
cs
adcl
ljmp
sbb
fstl
sti
xchg
iret
mov
scas
push
shll
popa
push
addr16
add
insl
pop
test
or
stos
imul
fisubrs
inc
xor
xor
jae
aas
ljmp
ret
in
out
fidivrs
data16
inc
xchg
inc
sub
pop
and
scas
mov
adc
in
cmpsl
es
lds
shll
or
pop
divl
rcl
in
bound
sub
inc
aaa
mov
jb
test
stos
mov
xor
jg
push
das
adc
bound
popf
push
stos
xor
and
mov
add
jecxz
mov
adc
aaa
out
shrb
fsts
sub
adc
out
and
in
xor
inc
mov
stos
ja
les
mov
aaa
mov
push
cmp
adc
cs
add
xlat
xchg
nop
aam
xor
inc
add
adcb
scas
bound
xchg
imul
sbbb
mov
add
cmpsl
sahf
jnp
lret
pop
push
push
in
pop
dec
mov
js
loopne
test
push
cmp
stc
fisubs
sbb
mov
cmp
or
cltd
push
mov
jle
lahf
call
inc
fidivrs
les
out
push
sbb
mov
in
fwait
outsl
and
cld
ljmp
orl
pop
aad
jae
cmp
aam
push
push
mov
sub
arpl
lods
aam
cltd
sub
dec
push
mulb
mov
test
lahf
addl
cmc
cmp
adc
dec
pop
inc
int
add
and
dec
inc
fcomp
inc
aam
jle
aaa
mov
push
adc
outsl
ja
movsl
mov
push
cmp
ret
icebp
cmp
in
mov
xor
dec
pop
popa
shll
fxch
xor
std
xchg
call
dec
dec
imul
cmp
orb
movsb
cs
jge
inc
fildll
adc
dec
and
mov
sbb
flds
or
stos
push
aaa
ljmp
lds
clc
lods
dec
mov
lods
pop
out
in
push
test
lock
scas
dec
loope
inc
cs
idivl
jle
add
loope
pop
or
cmp
mov
adc
jge
mov
sub
jae
pop
out
jb
cltd
inc
negb
daa
in
xlat
loope
jo
jle
mov
lea
sarl
pop
xchg
je
mov
pop
iret
fisubrl
inc
stos
mov
arpl
and
mov
fstps
aaa
xchg
out
adc
aaa
and
js
pop
lods
sub
inc
xor
push
inc
testb
jle
subl
mov
cmpsb
rcll
dec
and
mov
ror
add
jl
mov
call
cmp
jbe
ret
hlt
or
mov
leave
lcall
sahf
mov
pop
xlat
or
and
push
mov
out
inc
cmp
adc
iret
xchg
xchg
fisttpll
lcall
lods
cli
data16
adc
gs
jl
shlb
push
pop
push
ljmp
cld
pushf
rol
push
add
jnp
in
or
pop
fsubp
arpl
scas
ret
fwait
fwait
out
pop
cld
pop
es
in
xor
ja
xor
xor
or
add
cmp
and
insl
add
or
sbb
adcb
or
add
adc
je
mov
imul
adc
pushf
loope
mov
rcrl
sub
xchg
fsubrs
add
orb
or
into
daa
divl
sahf
cmpsb
mov
lock
or
aam
int3
xchg
mov
scas
mov
xor
adc
js
or
leave
out
into
mov
mov
xlat
test
mov
fadd
jl
mov
rcr
out
and
xor
loopne
ret
and
cmp
adc
pop
and
push
inc
popf
outsl
pop
mov
movsl
add
add
aas
xor
sub
filds
addl
jns
stc
js
dec
repz
cmp
iret
mov
scas
jne
add
and
call
repnz
in
xchg
scas
ret
shr
lock
sub
out
sti
mov
mov
dec
icebp
pop
in
int
jmp
jbe
xor
adc
or
and
in
jb
icebp
xor
inc
clc
popa
scas
sahf
movsl
jne
xlat
jne
dec
outsb
movsb
jnp
push
js
xor
sbb
lret
push
mov
sbb
pop
imul
mov
cmp
lea
mov
ret
cmp
or
pop
mov
add
or
lret
popf
icebp
out
adc
fsubl
daa
pop
das
mov
mov
and
inc
lock
or
pop
mov
pop
mov
sub
lea
rolb
add
insl
jb
pop
xchg
lea
jo
adc
sbb
add
int
je
push
je
mov
cltd
inc
ja
push
push
in
mov
stc
ret
fldcw
push
mov
notb
cmp
mov
sbbl
fwait
orl
rorb
jl
mov
cli
pop
movsb
jns
dec
pushf
jmp
jp
je
mov
outsl
push
xchg
mov
fs
shl
mov
in
stc
popf
decl
adc
outsb
pop
lahf
fcomps
sbb
cmp
in
lds
pop
mov
faddl
lea
push
int
xchg
andl
jo
out
lods
add
sbb
mov
inc
xor
test
xchg
aas
outsb
xchg
cs
test
mov
add
shrb
adc
icebp
inc
or
sahf
sub
jno
cwtl
sahf
les
sbb
mov
or
cmp
and
lret
or
jle
sbb
add
pop
pusha
jmp
hlt
xchg
lods
push
sub
in
and
mov
inc
xor
addr16
cmp
and
in
mov
loopne
add
je
daa
add
sahf
jmp
mov
adc
dec
arpl
xor
rcll
popa
dec
lds
push
jo
push
push
test
inc
out
xor
jnp
mov
lds
stc
mov
inc
or
or
addr16
dec
fisubl
or
xor
out
mov
xchg
push
add
je
in
mov
mov
xchg
or
mov
sti
ss
aam
mov
cmp
mov
cli
nop
movsb
stos
sbbb
mov
dec
outsb
dec
arpl
mov
data16
cmp
insb
bound
push
push
pushl
ljmp
xorb
adc
jb
inc
imul
add
dec
divl
jae
or
fdivrs
hlt
add
leave
fs
sarb
and
mov
pop
pop
fsubs
mov
push
mov
dec
inc
pop
inc
mov
xchg
inc
pop
dec
mov
dec
ljmp
inc
gs
add
ja
negl
and
fcoml
cmp
outsl
out
cmp
inc
cmc
out
jae
mov
arpl
sti
mov
push
pop
sub
sbb
data16
sti
cs
flds
loop
lods
repnz
fldl
jmp
inc
mov
add
mov
inc
loope
push
and
popa
out
mov
cmp
fiaddl
test
inc
jmp
scas
aam
xor
sub
cmc
ljmp
addb
stos
ds
and
les
lock
sbb
sbb
call
sub
repnz
ja
sbb
xlat
and
xchg
sbbb
mov
and
insb
and
sar
jle
lock
in
inc
aam
jmp
sub
les
xchg
jl
adc
jle
leave
jne
or
sbb
push
scas
mov
pop
movsb
fsubl
dec
hlt
jge
jae
inc
jecxz
push
xor
pop
test
pop
jae
js
lret
push
cwtl
notb
dec
dec
nop
lds
in
xor
dec
insl
test
cmpsb
mov
or
mov
scas
sarl
mov
sbb
sbb
push
lahf
cmpsb
xor
inc
sub
flds
push
sub
jbe
test
cmp
popa
and
mov
inc
lret
xchg
movsb
mov
jp
push
mov
adc
pop
mov
cmc
sahf
test
sbb
push
in
cmp
xchg
aad
addr16
mov
ss
dec
fsubs
cmp
data16
sahf
test
loopne
fstpl
lcall
push
neg
not
js
movsl
mov
jp
in
or
xor
jbe
adc
rcr
and
pop
stos
imul
fstp
cltd
add
fldt
ficoml
aad
addb
mov
lods
insl
cmp
leave
add
aas
in
push
add
mov
mov
fwait
sbb
add
sahf
iret
and
clc
sub
and
cs
pusha
cmpsb
xlat
push
jo
mov
push
mov
stc
xchg
mov
stc
mov
sbb
adcl
fbld
mov
push
mov
mov
rclb
pop
mov
fistps
jge
jl
movsl
push
push
inc
and
daa
add
sub
mov
das
xchg
and
pop
mov
pop
fstps
push
add
mov
fld
lea
or
mov
mov
icebp
jp
jnp
xor
hlt
out
dec
je
loopne
js
pushf
add
mov
or
mov
fcoml
inc
aaa
arpl
sbb
cld
mov
out
lret
test
adc
inc
jmp
es
jp
jecxz
rcrb
outsl
fists
adc
or
cmp
cmp
dec
fadds
mov
popf
add
outsb
pop
iret
mov
push
sub
jg
inc
testb
sbb
dec
inc
push
push
add
adc
or
pop
sbb
imul
ficompl
mov
rcrl
repnz
scas
fbstp
aam
sub
jle
or
ja
fcomps
mov
popl
loope
aam
stos
es
jg
mov
mov
scas
mov
mov
insl
fisttpll
stos
push
inc
adc
inc
js
push
inc
mov
jg
sub
dec
int3
or
scas
jnp
int
cmpsb
inc
add
jl
pop
out
pusha
add
jmp
or
jno
jno
decb
lret
pop
imul
fsubrl
xchg
clts
arpl
cmp
xchg
or
lods
fsubp
loope
outsl
pop
pop
aaa
out
clc
dec
pop
lss
cmpsl
sbb
lock
adc
rolb
inc
sbb
scas
xchg
jbe
xchg
sub
outsb
pop
jno
int
ret
cmc
andb
push
in
ret
mov
fadd
xor
cmp
mov
and
inc
pushf
clc
jno
fs
push
xlat
in
sub
addr16
scas
mov
movsl
fdivrl
pop
fsts
lea
call
fwait
psubb
cmc
xorl
and
xchg
ss
ficompl
mov
test
sbb
mov
xchg
cmc
iret
adc
fwait
pushf
cmpsl
dec
sbb
pop
xlat
or
inc
out
jnp
mov
insb
rorb
dec
xchg
add
cli
inc
inc
and
hlt
add
dec
movsl
fwait
pop
add
sti
imul
fs
ret
pop
push
and
dec
or
mov
pop
inc
call
ds
lret
out
xchg
das
stos
pop
imul
shr
je
adc
sbb
adc
in
push
sbb
ret
push
inc
sbb
pop
pop
mov
mov
lcall
adc
pop
pop
daa
jg
outsb
das
mov
adc
mov
mov
xor
into
pop
mov
inc
imul
jge
dec
call
jge
andl
cld
cmp
and
fimuls
xchg
fistpll
clc
inc
xchg
xchg
pushf
or
mov
or
dec
sbb
divl
mov
ficompl
in
enter
or
fnsave
int3
pop
jns
jb
fcomps
pop
or
push
lods
dec
cmp
ret
lea
sahf
pop
jmp
test
cmpsb
pop
in
fdivl
and
repz
fcmovnb
daa
in
call
mov
mov
or
test
sti
loopne
ret
mov
and
jns
pop
inc
loopne
cmp
insl
pushf
lds
repnz
mov
or
mov
push
push
mov
test
mov
imul
addr16
mov
fcomps
out
mov
int3
mov
insl
or
xor
cwtl
ud0
xlat
loope
adc
inc
sbb
mov
push
push
jle
add
nop
push
sub
mov
or
jb
nop
int3
daa
xor
or
adc
cmp
repz
cmpsl
lret
scas
xlat
rcr
out
outsl
and
aam
or
rorb
cmp
add
out
push
push
shl
outsl
add
stos
fwait
roll
pop
mov
dec
idiv
xchg
loopne
lea
div
out
sbb
cmpl
cld
dec
test
xchg
test
addl
int3
push
int3
mov
clc
xchg
xchg
ret
es
sub
dec
push
push
mov
inc
push
aam
aad
mov
or
jo
inc
inc
push
inc
add
cmp
jg
xor
in
jne
xchg
in
cli
scas
int3
rcll
sub
mov
stos
sbb
mov
or
aam
sub
xchg
outsl
inc
icebp
repnz
cmc
mov
movsl
dec
loop
add
arpl
das
jnp
fwait
mov
cli
stos
rol
xchg
push
mov
ficoms
cld
dec
xchg
sbb
test
mov
fisubl
aam
and
sbb
lcall
aas
xor
orl
mov
popw
sarb
insb
lret
movsl
xor
and
and
cmpsl
and
mov
pop
enter
out
lcall
aad
pop
mov
in
xor
imul
cmp
lea
dec
std
loop
enter
dec
shlb
icebp
dec
mov
jno
gs
dec
lock
sbb
stc
mov
fxtract
in
jae
into
xor
or
xor
dec
sbb
pop
mov
outsb
push
fldcw
xor
repz
xor
jbe
in
sbb
xor
xchg
jl
pop
cmp
call
mov
push
xchg
pusha
shl
mov
in
dec
dec
int
sub
bound
sub
das
push
ret
std
jno
mov
pop
aas
jbe
cmp
gs
shlb
test
imul
ja
mov
mov
and
fsubrs
push
push
out
lret
test
add
or
jns
jne
jo
movsb
out
stos
lds
xor
lahf
nop
jge
cmp
lcall
push
lahf
into
xor
stos
int
repz
das
pop
mov
push
dec
sub
xchg
or
or
scas
leave
in
into
or
sti
jae
or
imul
ficomps
adc
push
push
mov
fstl
mov
xor
int3
test
adc
ret
adc
imul
inc
mov
movl
negl
xchg
mov
inc
cmp
pop
xchg
les
test
adcl
xor
adcb
sbb
daa
pop
lods
js
xor
icebp
rcrl
push
or
jbe
xor
and
inc
add
int3
adc
sub
outsb
xor
jecxz
add
xchg
mov
lods
sub
xchg
pop
xchg
notb
cmp
xor
rcll
int
cmp
pop
xchg
movsb
jle
cltd
icebp
inc
out
cs
push
cmc
in
pop
add
sti
add
xchg
add
outsb
int
and
push
repnz
xor
inc
sub
icebp
imul
xor
stos
mov
fisubl
arpl
xchg
xor
xor
js
das
into
xchg
and
jecxz
jno
pop
cmp
mov
sarl
repnz
popf
push
jg
mov
sbb
out
push
push
pop
mov
mov
dec
xchg
orl
xchg
mov
fmuls
push
bndldx
jg
mov
lahf
mov
fucom
jge
scas
popa
inc
mov
pop
xorl
lds
in
jp
adcl
mov
aam
dec
fnsave
aas
pop
push
or
shrl
ret
lea
and
xlat
in
test
xchg
inc
jmpw
push
movsb
sar
push
jge
mov
imul
ds
sbb
mov
cs
jmp
clc
xor
dec
jmp
pop
mov
iret
sub
jp
mov
test
adc
enter
jno
dec
in
andb
in
add
repz
test
lock
stc
shl
or
adc
dec
gs
ljmp
lcallw
add
aaa
lcall
pop
or
cli
divl
add
and
mov
imul
lock
push
cmp
ret
inc
cli
add
push
testl
adc
push
ret
pop
sub
jge
out
movsl
xor
movsb
out
cmp
and
test
jmp
cwtl
out
inc
notb
lret
xor
or
xor
pop
cli
or
pop
popa
adcb
pop
es
dec
sub
pop
jae
fstpl
push
add
mov
pop
cli
cmp
mul
push
pop
ss
or
sahf
mov
mov
ret
out
rorb
ljmp
pop
jle
add
cmp
out
xchg
filds
insl
and
int
sub
xor
cmp
gs
popf
stos
popf
push
jle
and
push
add
xor
xor
jge
out
lock
js
add
scas
sbbb
pop
inc
leave
ss
cmpsl
movsl
xchg
sub
test
jecxz
mov
rorl
hlt
sub
xchg
les
sbb
fwait
mov
je
or
cmc
push
dec
inc
sarl
sbbl
inc
aad
mov
mov
or
jp
push
testb
jo
lret
jb
push
aad
inc
pop
adc
imul
pop
mov
fbstp
mov
lods
sub
push
jecxz
and
dec
mov
push
cmp
pop
add
dec
push
sub
mov
aaa
das
xor
out
ds
rolb
out
jecxz
jnp
xchg
pop
shrl
mov
fsubrs
push
daa
sbb
div
mov
add
sub
add
xor
pop
repnz
xchg
cmp
adcl
into
pushf
nop
stos
testb
jae
xchg
lret
and
push
mov
into
xor
mov
imul
mov
push
jae
or
ss
xchg
or
in
jl
lods
mov
daa
es
movsb
xchg
test
inc
mov
hlt
jb
mov
shll
pushf
mov
fbld
inc
sbb
andb
xor
mov
inc
sbb
in
sti
cmc
movsl
lock
lret
push
or
jnp
push
inc
sti
jns
pushf
sbb
int
pop
sbb
lds
popf
outsl
fldt
das
bound
imul
mov
cmpsb
lock
mov
xor
jae
aaa
adc
mov
mov
inc
mov
scas
sub
or
jle
adc
mov
jno
sbb
test
sbb
xchg
add
jns
add
es
push
insl
outsl
xor
mov
and
push
sub
clc
pop
shrl
or
mov
cmp
add
jne
jno
push
jecxz
scas
cmp
loope
out
repnz
sbb
xor
mov
mov
imul
mov
mov
addb
rolb
test
push
jo
push
iret
cld
mov
out
and
ljmp
dec
testl
sbb
out
stos
and
inc
jb
pop
cwtl
pusha
dec
sbb
outsl
sahf
mov
sbb
inc
jge
mov
adc
xchg
inc
ret
mov
dec
stos
andl
mov
sbb
push
pop
fadds
jno
call
adc
addr16
push
or
ret
push
mov
fs
mov
movsbl
pop
enter
push
dec
in
fs
in
and
outsb
push
sbb
sbb
and
lds
xor
mov
clc
int
inc
flds
enter
mov
enter
adc
and
out
shrb
fptan
push
jmp
fucomip
fstp
add
pop
add
and
stos
pusha
lret
mov
push
pop
pop
fwait
pop
jb
mov
xor
in
cld
jl
pop
fsubl
cmp
jne
fisubl
mov
add
jg
fadd
insl
std
xor
mov
mov
cmp
sbb
scas
scas
cwtl
addl
leave
repnz
push
lahf
fidivrl
sub
dec
jns
sti
pop
and
lods
sbb
add
push
xchg
hlt
adc
xchg
mov
xlat
insl
mov
inc
xchg
adc
fdivrs
cltd
aad
adc
cmc
shlb
dec
gs
or
stos
mov
jle
in
mov
mov
and
lcall
je
jno
insb
adc
into
dec
adc
ret
dec
test
daa
pop
loopne
mov
sbb
push
orb
es
das
or
out
stc
fs
xchg
cs
je
sub
pop
inc
popf
pop
loopne
insl
xor
enter
je
sub
mov
xchg
jo
sti
es
lret
test
cltd
and
cltd
xor
popf
js
pop
xor
leave
out
in
bound
push
jno
xor
pop
aam
pop
decb
hlt
push
rolb
inc
test
push
pusha
or
in
pop
push
mov
div
enter
das
in
mov
subl
mov
fisubrs
std
lcall
into
mov
jmp
sahf
jo
loop
aam
fwait
mov
xor
mov
stos
cmp
call
sbb
outsl
push
mov
dec
scas
jns
bound
push
cmpsb
mov
push
sbb
and
adc
bound
outsb
xlat
test
test
or
jge
sbb
pop
les
mov
insb
xchg
pop
sub
insl
cli
pop
lahf
stos
cmp
nop
push
addr16
jb
mov
in
ss
inc
mov
jge
mov
and
sbb
sbb
push
out
cmp
lret
shl
xor
out
jnp
sbb
and
mov
into
out
orl
xor
cmp
or
das
sbb
push
push
mov
nop
dec
imul
add
xor
iret
sbb
sbb
adc
xchg
mov
xor
sub
cltd
push
and
lret
cmp
jg
stc
mov
xor
add
jl
xor
std
ljmp
dec
fiadds
mov
push
dec
imul
shrl
xor
fcomp
mov
js
subb
sub
iret
cmp
mov
in
rcrb
into
je
mov
in
ficoms
and
je
cltd
xchg
push
adc
divb
sbbl
adc
dec
shlb
loope
js
and
int
xchg
sbb
lods
data16
or
mov
xchg
cmp
mov
movb
jnp
sbb
ret
jae
push
in
pushf
movsb
push
jp
adc
add
push
push
clc
lret
jecxz
fwait
sbb
lahf
ja
ljmp
jge
add
neg
fdivrs
fbld
cli
sub
leave
inc
add
mov
mov
stc
mov
sti
and
ret
ja
paddd
add
sbb
jecxz
push
ja
sub
cli
fidivrl
push
pusha
and
mov
pop
test
adc
mov
sub
jmp
add
sub
cld
loop
inc
dec
pop
out
aas
jge
jecxz
cwtl
inc
mov
imul
in
dec
leave
int
sub
lahf
mov
imul
shrl
xchg
and
cmc
ffreep
repz
mov
test
or
and
push
sub
test
fstps
test
xchg
mov
shrl
dec
inc
xlat
fsubrp
mov
xlat
push
fsubl
ret
gs
mov
pop
bound
pop
xchg
adc
ljmp
mov
in
fs
icebp
ret
inc
jb
mov
loopne
xchg
sbbb
into
sbb
mov
call
clc
fistpll
sbb
xchg
dec
in
inc
mov
sti
mov
lcall
bound
xor
xor
xchg
js
neg
outsl
or
cld
push
cmpsl
mov
jae
fidivl
roll
test
lret
flds
scas
push
cmpsb
shrl
sub
out
xchg
mov
daa
xchg
and
sarb
bound
fnstenv
imul
in
xchg
push
fwait
sbb
dec
mov
pop
dec
adc
fisubrl
mov
ret
in
jo
add
sbbb
push
mov
lea
push
adc
pop
enter
cmp
push
leave
pushf
pop
rcrl
sub
jne
and
mov
push
sti
mov
mov
pushf
mov
jge
test
lods
rcr
xchg
out
pop
stos
in
stos
cmc
push
adc
std
xchg
out
ffree
jnp
pop
mov
add
std
push
aaa
out
jl
repz
test
mov
lahf
jne
popa
imul
jp
psubsb
cmp
adc
cwtl
subl
and
xchg
adc
std
or
shrb
mov
adc
mov
stos
mov
sarb
push
push
loopne
mov
outsl
out
inc
mov
pop
adc
mov
fimuls
fistpl
call
xchg
out
rclb
aam
ret
cmp
or
or
mov
lcall
pop
icebp
cmp
sbb
xchg
jg
mov
push
std
mov
clc
jmp
imul
sub
pop
inc
jne
aad
into
imul
mov
shlb
or
out
mov
aad
in
enter
mov
and
inc
and
jae
leave
test
mov
cli
pop
sub
fidivs
xor
sbbb
repnz
subb
aaa
aas
outsb
dec
push
or
mov
pushf
mov
shlb
imul
fcom
repnz
insb
ret
insl
push
bound
loop
out
outsl
cmpl
lods
cmp
fstpl
out
pop
out
popf
lret
push
outsl
pop
arpl
mov
lds
inc
sub
sub
jo
aas
rcll
add
loope
test
jge
sarb
mov
dec
adcb
sbbb
or
stos
jmp
cmpsl
push
ds
or
sbb
outsl
xchg
mov
cmp
pop
ja
fdivrs
pop
mov
push
scas
sarb
sub
mov
popf
jb
push
data16
insb
pusha
repnz
movsb
ja
fimull
pandn
cmp
mov
xchg
pop
cltd
pusha
pop
dec
repz
adc
xchg
xchg
in
and
jno
out
sahf
imul
cltd
movsb
fldcw
mov
push
sbb
cmpsl
shlb
mov
addl
add
push
mov
lret
push
dec
dec
mov
xchg
sub
sub
iret
dec
insb
repz
or
mov
outsl
mov
push
push
loopne
in
clc
jmp
leave
adc
ret
cmpsl
pop
sahf
push
cwtl
sbb
sbb
mov
mov
jecxz
repz
mov
fsubl
test
dec
hlt
rcll
sbb
andl
jecxz
popf
inc
jmp
jg
imul
orl
rolb
add
xor
mov
adc
jb
adc
pop
movsb
jmp
push
cwtl
cmp
push
mov
dec
push
inc
pop
sbbl
mov
pop
cmp
add
xlat
fsubrl
mov
cmp
in
dec
mov
xor
scas
push
jg
sbb
sub
stc
data16
dec
jecxz
push
sub
xor
test
and
mov
cmp
pop
jae
test
mov
lock
and
xor
lods
mov
ljmp
and
movsb
outsb
xchg
das
mov
shll
push
and
orl
stc
test
sbb
or
mov
insb
jno
cmpb
fs
jge
cmp
mov
in
dec
push
xchg
inc
jnp
mov
daa
add
xchg
minps
add
hlt
jnp
les
cli
outsb
push
ljmp
push
pushf
gs
xor
lock
xchg
inc
scas
mov
stos
mov
cmc
in
sbb
andb
and
push
ja
mov
or
aas
fmuls
xchg
and
in
or
es
fcom
clc
pop
iret
cwtl
push
jno
sub
xchg
add
mov
roll
dec
and
push
pop
stos
test
ss
in
mov
push
jno
cwtl
movsl
call
and
pushf
jecxz
mov
sahf
lret
lahf
std
mov
cmc
ja
xchg
mov
data16
aad
out
gs
cmpl
fsubr
mov
dec
aas
jge
pop
jge
pop
mov
outsb
stc
sbb
inc
test
dec
xchg
xchg
xchg
pop
adc
mov
push
pop
xchg
lea
aaa
pop
inc
mov
jl
loope
lret
mov
dec
clc
xor
mov
or
xlat
std
dec
mov
xlat
loopne
jmp
inc
push
dec
jns
mov
adc
sub
or
push
mov
cwtl
pop
int3
fs
cld
daa
js
std
addr16
stos
xor
test
lods
arpl
ds
pop
das
pop
xchg
fildll
dec
push
fcomps
daa
lahf
xchg
mov
out
rolb
jb
push
sbb
pop
jae
mov
addb
push
mov
insb
sub
mov
pop
mov
incb
cmpsb
sub
jl
and
and
push
adc
push
mov
push
mov
cmpsb
out
leave
or
movsb
sahf
je
fsubs
pop
fwait
not
pop
xor
dec
jl
add
fucomip
push
stos
mov
and
mov
jmp
popf
addl
sbb
pop
push
js
jmp
cmp
mov
push
and
subb
arpl
hlt
mov
cmp
inc
mov
pop
pop
pop
add
sub
lahf
cmp
mov
in
xor
add
mov
lahf
dec
dec
push
jns
bound
ljmp
sbb
mov
orl
sub
jo
gs
enter
cmp
hlt
lret
mov
testl
and
cmc
ds
adc
push
loop
mov
xchg
enter
lcall
add
cs
inc
xorb
mov
pop
and
add
decb
inc
jb
mov
push
or
sahf
rcrl
aam
int
dec
dec
int
cwtl
xor
mov
jge
cltd
xchg
incb
mov
jge
fs
push
mov
pop
cmpsl
inc
push
pop
jb
adc
inc
nop
mov
inc
pop
stos
gs
lret
mov
mov
lock
test
fistpll
add
fs
push
test
lea
pop
dec
fldl
mov
pop
jmp
push
insb
push
lods
loope
push
cmp
xchg
fcmovnb
enter
and
adc
int3
call
call
xchg
adc
loope
add
stos
sub
ret
aas
mov
stc
pop
dec
cmp
adc
pop
lret
mov
cmpsb
mov
jb
jge
jne,pn
data16
lods
lcall
pushf
fsubrs
adc
sahf
jne
das
addl
dec
scas
push
lea
fstpl
xor
xchg
or
push
lea
icebp
mov
jecxz
data16
push
hlt
xchg
push
movsl
pusha
add
and
cmpsl
sbb
popa
es
pop
dec
icebp
cwtl
bound
dec
and
aad
push
aaa
flds
dec
aam
iret
and
jmp
cmp
push
iret
lret
cwtl
ror
pop
in
jecxz
pop
xchg
xor
sub
les
stos
cmpb
add
loopne
test
adc
ljmp
fs
jle
out
popa
cmp
xchg
scas
adc
xchg
xchg
mov
jns
shll
cmp
dec
into
sbb
xchg
pushf
inc
mov
into
xchg
prefetcht1
ds
push
mov
dec
mov
push
jmp
push
outsl
sbbl
mov
testl
push
shlb
test
mov
mov
scas
sub
cmc
xor
out
sub
push
lea
pop
mov
xor
leave
ret
push
in
out
mov
and
dec
add
jmp
cwtl
mov
je
mov
cmc
dec
je
push
stos
xor
callw
int
mov
dec
mov
push
lahf
push
lahf
cmp
xchg
pop
stos
pusha
pop
fsts
inc
mov
ffree
aas
sub
xchg
leave
fs
and
pop
cmpb
inc
mov
nop
sbb
xchg
repnz
xor
scas
fsts
enter
cmc
jbe
loope
int
xor
xchg
pop
or
add
inc
add
in
inc
ljmp
pusha
pop
rcll
dec
jnp
push
icebp
shr
inc
imul
in
sub
arpl
sub
add
xchg
pop
movsl
xchg
insl
fnstcw
cmp
iret
nop
aas
mov
push
mov
popa
cmp
inc
test
mov
or
add
adc
addb
xchg
leave
test
inc
out
dec
inc
push
mov
iret
cli
adc
adc
pop
iret
ret
jne
jle
push
out
out
loopne
repnz
sub
dec
lret
push
divb
pop
arpl
xlat
in
in
pop
cwtl
mov
test
adc
inc
mov
scas
xchg
in
mov
stos
ud2
and
fs
clc
daa
loope
cmp
test
xor
shr
pop
shll
out
xor
jno
push
jnp
push
jno
loopne
push
add
or
repnz
sbb
pushf
scas
sbb
pop
xor
and
adc
mov
arpl
mov
lock
xchg
pop
xchg
sti
sarl
push
cmc
push
and
push
loop
sarl
mov
cmpsb
movsb
es
and
inc
sahf
sbb
sbb
push
adc
outsl
jl
xchg
out
xchg
mov
pop
jge
lods
cmp
mov
in
add
fmull
loopne
test
pop
in
in
xchg
lock
xlat
xor
sub
mov
sbb
xor
in
lods
push
faddl
pushf
mov
stc
cmp
nop
jno
push
test
adc
adc
xchg
lock
js
jno
in
adc
rcrl
add
sbb
cmp
inc
fs
and
int3
movsb
mov
mov
xchg
mov
mov
xchg
sbb
sti
pop
xor
add
and
inc
and
in
bound
ret
sarl
scas
xchg
lret
dec
jmp
popa
pusha
sub
out
inc
cmp
sbb
in
loopne
into
shlb
dec
ljmpw
test
dec
mov
xor
xchg
add
xchg
jbe
in
mov
adc
mov
addl
testl
call
cmp
test
stos
adc
adc
pop
imul
cs
cmp
sti
sbb
lods
dec
cld
imull
dec
fdivrp
addr16
sub
andb
sbb
pop
adc
lds
mov
cwtl
cltd
ficoms
in
sbb
int
jnp
or
movsl
and
xchg
adc
outsb
sti
int
int
push
xor
repz
mov
push
mov
aas
sub
fidivs
fsubrs
cmp
xchg
xchg
mov
das
xchg
clts
add
sahf
mov
out
stos
loopne
xlat
cmp
movsl
sbb
adc
ljmp
cli
fs
sbb
sti
cmp
mov
int
pop
add
pop
xchg
push
ret
nop
fcmovu
jp
jb
pop
add
cmp
nop
stos
dec
xchg
dec
popf
jecxz
das
stc
out
xchg
and
mov
pop
jecxz
mov
and
sub
imulb
dec
and
mov
xchg
cli
xchg
add
mov
push
push
inc
leave
cs
fmul
in
insb
pop
loopne
imul
mov
add
dec
dec
xchg
lods
mov
dec
sbb
cli
fisttps
sub
cmp
sub
ja
cmp
xchg
out
dec
shll
stc
repz
adc
inc
aas
mov
pop
ret
or
xor
popa
sbb
mov
hlt
negb
int3
and
jg
lock
xor
hlt
or
push
lret
mov
add
add
pop
xchg
cmp
loope
in
scas
sbb
push
outsb
enter
lahf
or
int
loopne
ficoml
jmp
jns
dec
xchg
xor
aam
lcall
in
sub
lcall
push
sub
aaa
sarb
lret
orl
aad
cmpsl
and
sbb
xchg
push
sbb
mov
sub
hlt
stos
cwtl
xor
xlat
test
or
out
jmp
sub
dec
mov
mov
push
fwait
test
ficomps
aam
rolb
aam
stc
dec
mov
fptan
lcall
jo
cmp
add
imul
enter
mov
shl
inc
xchg
fs
test
adc
adc
push
add
das
mov
je
mov
and
cmpsl
orl
push
lret
shlb
sahf
push
mov
es
cmc
cmpsb
sub
xchg
mov
cltd
cmp
push
and
in
movsl
pop
int3
insl
or
push
adc
push
gs
push
xchg
test
xchg
dec
mov
ret
sub
xchg
xchg
push
out
cli
mov
sbb
sub
inc
dec
and
shrl
fmuls
push
daa
rolb
test
and
or
sub
insb
and
repz
add
lahf
or
lahf
or
mov
and
push
loope
push
mov
pushf
insl
stc
bound
mov
or
cmp
sbb
pop
cmp
je
in
push
mov
out
imull
movsl
fcoml
sbb
cs
push
mov
push
test
pop
out
pop
mov
push
es
dec
jno
adcl
popa
out
xorl
ret
insb
push
jb
xchg
test
xor
icebp
cmpsb
cmp
and
insl
mov
shl
inc
shll
pop
push
sahf
pop
into
fsub
shll
adcb
sbb
push
sarb
xchg
outsb
sbb
xchg
fists
jle
pop
ds
repz
nop
or
pop
stos
std
bound
je
mov
lods
jbe
cwtl
dec
push
jb
pop
jmp
mov
mov
dec
sub
pop
jp
test
loopne
lret
shll
aad
and
fwait
or
sarl
rorl
fwait
gs
fsubl
incl
cmc
and
pop
into
jnp
test
cmpsb
lret
test
imul
in
clc
sbb
mov
setne
icebp
dec
cmpsb
add
sub
mov
mov
repz
mov
popf
adcb
leave
hlt
into
ljmp
and
pop
lods
and
stos
js
movsl
loope
lea
and
mov
inc
xor
cwtl
mov
decl
xchg
mov
mov
mov
sbb
push
int
mov
or
mov
jae
fwait
inc
mov
jmp
fidivrs
stos
mov
dec
jbe
mov
push
mov
and
dec
pop
jae
std
sbb
cmpsl
jb
mov
lahf
jae
loop
pushf
pop
stos
test
imul
cwtl
mov
pop
and
ss
xchg
push
lea
aas
or
data16
mov
adc
insl
push
sub
inc
mov
loope
out
mov
push
mov
aad
push
xchg
pop
mov
das
lock
mov
pop
out
imull
cmp
daa
sahf
mov
mov
inc
mov
insl
dec
sahf
pop
sub
loopne
pop
inc
sub
pop
or
xchg
scas
jecxz
jo
push
iret
lret
and
dec
jl
cmp
xor
adc
in
push
jmp
test
imulb
test
sarb
push
sbb
lahf
jo
or
inc
out
pop
pop
xor
inc
jns
mov
cltd
lret
cmp
adc
dec
fdiv
pop
add
jno
aas
mov
xor
mov
shrl
adc
push
mov
pusha
sbb
loope
out
jb
ret
sti
sbb
in
adc
mov
xchg
sub
mov
mov
pop
adc
and
ja
mov
mov
in
sarl
add
stos
cmpsl
iret
and
jnp
mov
das
xchg
xchg
mov
ret
repnz
in
addr16
jae
push
xchg
pop
jmp
arpl
jns
xchg
or
loop
jl
lret
imul
icebp
mov
push
movsl
mov
and
sub
cmp
jp
xor
jl
fcoms
mov
outsl
sub
cmp
or
arpl
loope
out
mov
ret
pop
sbb
sub
test
push
xor
sti
jmp
es
pushf
push
fiadds
int3
mov
xor
popa
xchg
add
mov
push
les
add
cmp
cmp
clc
and
insb
push
divl
fbld
adcl
ds
mov
jns
ret
adc
daa
and
int
mov
push
shlb
bound
inc
stos
pusha
pop
loop
pop
inc
adc
in
fisubl
into
push
fcoms
mov
xchg
cs
add
xor
in
lods
fcomps
xor
pushf
mov
jmp
xor
mov
imul
je
dec
lock
inc
sub
lret
nop
adc
add
mov
dec
loopne
dec
cmp
adc
scas
lds
test
loopne
push
lahf
sti
es
jp
jne
aad
xor
lahf
add
adc
jb
or
lock
xor
js
pushf
mov
repz
inc
cmp
inc
subb
xor
push
cmp
fidivrs
pop
mov
lods
lea
cwtl
xchg
and
andl
push
mov
arpl
jno
mov
scas
xlat
cs
dec
movsb
rcr
scas
imul
mov
test
rcrb
and
clc
or
mov
negb
aam
fmull
add
inc
xchg
std
enter
inc
mulb
mov
in
roll
adc
les
pop
cmp
jge
push
insl
shll
cmpsl
xchg
das
xchg
in
loopne
adcb
les
daa
and
and
cmp
popa
mov
lea
jns
xor
cwtl
or
pop
rclb
xor
add
sub
popf
leave
imul
push
gs
movsl
xor
and
jp
xor
mov
sbb
shll
pop
dec
cmp
mov
hlt
insl
pushf
sub
fbld
ret
xor
popa
out
cltd
sub
xorb
pop
movsl
fs
xchg
inc
jb
lock
movsl
mov
test
nop
stc
xchg
mov
call
clc
lret
mov
mov
dec
icebp
enter
mov
jmp
aas
xor
sbb
inc
xor
push
sbb
xchg
adc
pop
jmp
test
push
es
pusha
sbb
call
xchg
and
cmp
push
xchg
push
scas
test
popf
sbb
sub
xlat
ljmp
fwait
lods
cmp
cmp
out
jge
adc
xchg
adc
subb
inc
mull
fbstp
xchg
mov
sbb
sub
jne
xchg
aam
mov
popf
and
dec
mov
cmp
or
std
leave
clc
sub
adc
ss
and
fwait
fwait
cmpsb
repnz
movsb
adc
testb
fmul
pop
fnsave
sub
dec
ret
mov
enter
ds
iret
sub
insb
jge
rcrl
mov
mov
lds
mov
or
sbb
xchg
cltd
mov
cmp
inc
cmp
std
push
and
stos
xor
cltd
fwait
mov
adc
and
gs
jmp
mov
shrb
enter
push
mov
int3
shll
pop
rep
mov
rcrb
sti
or
or
test
add
stos
aaa
js
sub
xor
aam
inc
mov
adc
mov
ret
pop
adc
orb
inc
aas
fwait
cli
iret
xlat
loope
jnp
aad
iret
inc
stc
imul
addr16
sub
inc
mov
test
sbb
fnstenv
jnp
xor
push
add
add
sub
imul
xor
or
loopne
ljmp
jne
nop
mov
inc
clc
add
cmc
movsl
mov
dec
fldcw
repz
inc
or
dec
sahf
mov
aas
push
rclb
mov
inc
outsl
xor
dec
dec
int
mov
push
test
scas
pop
pop
add
rcr
dec
data16
jl
fdivs
mov
inc
pop
sub
mov
cwtl
mov
shlb
lret
leave
xchg
insl
imul
pop
lds
icebp
or
lods
les
mulb
sbb
pop
icebp
imul
dec
mov
imul
sahf
push
aam
inc
mov
jecxz
inc
fdivl
out
dec
jo
cmpsl
xor
pop
sub
inc
jecxz
or
and
inc
xor
jbe
sub
mov
dec
sub
fsts
or
inc
jecxz
mov
std
xchg
stos
pop
or
push
mov
hlt
sbb
aas
loopne
push
ds
cwtl
ficompl
adc
es
or
iret
sub
int3
push
add
mov
movsb
inc
jno
dec
adc
push
cmp
in
jp
dec
fstcw
imul
dec
fwait
cmp
daa
aad
in
jb
insl
and
jns
xor
scas
movsl
cld
loope
or
dec
jle
ret
jmp
jne
mov
lcall
stc
jns
shrb
lds
mov
loope
test
incl
dec
xor
sbb
out
aas
xchg
insl
js
xchg
imul
mov
sbb
cmc
incb
jne
add
enter
or
xor
jne
pop
or
fcoms
inc
xchg
test
xor
sbb
mov
idivb
xchg
sub
inc
mov
pusha
jecxz
pop
add
popl
dec
cld
sub
add
fldcw
sub
iret
addl
mov
sbb
xchg
push
push
stos
inc
jne
orb
sub
imul
or
loop
mov
cmp
pop
dec
mull
mov
mov
repnz
jns,pt
fwait
or
lret
xor
xor
and
adc
aas
inc
mov
test
pop
shlw
divps
movsb
jmp
push
push
jno
add
sbb
mov
cwtl
movsl
xchg
lahf
imul
pop
jo
pop
inc
mov
mov
arpl
push
lock
cmp
divb
jle
dec
mov
sub
fistpll
push
mov
insl
xchg
mov
dec
lds
dec
xchg
aam
push
jmp
cli
mov
gs
push
sub
in
in
inc
cmp
shlb
shlb
sub
cmc
jl
and
xor
or
sarb
xor
cmpsb
xor
popa
sahf
cli
enter
ljmp
cmp
gs
cmp
mov
out
mov
fildll
push
inc
jno
filds
imul
cmp
mov
repnz
jecxz
inc
stos
call
jmp
add
jno
mov
xchg
fcos
push
cmp
xchg
scas
and
leave
xchg
mov
and
mov
pop
fst
int3
fiadds
insb
movsl
pop
fldcw
xchg
fimuls
lcall
dec
dec
shll
jl
adc
mov
in
mov
repnz
sbb
mov
ret
pop
jno
adcl
je
inc
sbb
test
aad
adc
xor
pop
repnz
push
and
push
je
adc
lock
incl
sbb
jecxz
lock
inc
sti
adc
mov
mov
add
aad
pop
iret
test
jo
mov
lods
mov
shlb
movsb
jns
pop
and
mov
aad
pop
popa
in
push
mov
and
pop
xlat
dec
and
sub
addb
lock
std
pushf
push
sbb
push
stos
and
pop
xlat
dec
les
mov
dec
in
clc
mov
add
add
add
dec
mov
pop
mov
movsb
mov
push
jmp
sahf
cltd
mov
orb
pop
enter
icebp
jp
xlat
ret
cli
in
push
jne
in
les
stos
test
jbe
mov
and
mov
sbb
jo
test
or
scas
sbb
jne,pt
jae
add
and
push
loope
add
cwtl
push
jle
std
into
stos
les
iret
cmp
call
ficompl
fstps
mov
jg
xlat
adc
pop
pusha
fiadds
jp
inc
pop
cmpsl
aaa
mov
cmpsl
push
cmp
add
mul
lret
pop
stos
mov
dec
push
xor
je
cmp
js
fildl
inc
adc
push
mov
or
mov
and
jl
lds
test
or
cmp
xor
xchg
mov
dec
add
jge
popa
fucomp
int3
mov
fcmovnu
mov
and
jmp
fwait
hlt
int
ljmp
lea
mov
fdiv
xchg
and
ss
dec
pop
sub
ljmp
sbb
or
inc
fcoms
ds
out
test
lret
adc
sub
loopne
shrb
into
xchg
mov
sbb
push
daa
pop
movb
sahf
int
mov
clc
ss
lods
das
out
pop
ljmp
incl
mov
cmp
shrb
pop
push
add
andl
shlb
outsl
sub
pop
sbb
sub
sbbb
adc
dec
rclb
xchg
or
pushf
xor
cmp
mov
sbb
xchg
popf
movsl
inc
das
add
pop
mov
mov
pushf
jl
push
in
lods
sub
bound
push
push
inc
xor
lock
shrb
mov
jns
cmp
ret
mov
fcompl
out
fbstp
lock
jo
or
aaa
dec
dec
add
test
sub
std
mov
div
jb
dec
adc
mov
lods
sub
sbb
jg
insl
adc
xor
fmuls
mov
lods
jmp
imul
inc
pop
mov
cmp
fadds
mov
std
ret
push
mov
out
popf
mov
jge
inc
sbb
test
test
cmp
subb
and
jg
shrl
mov
sbb
xchg
or
add
cmp
lret
lcall
inc
repnz
fcompl
sbb
xchg
xorb
lret
add
stos
jle
movsb
sub
add
xchg
hlt
ds
je
mov
dec
push
dec
add
cmp
shll
aaa
pushf
aaa
xor
subb
dec
or
adc
sbb
icebp
add
pushf
sub
xchg
fwait
clc
push
push
leave
imul
push
ja
mov
pop
sbb
pop
cmc
fsubrs
test
ret
loopne
or
cmp
adc
imul
dec
les
cli
aaa
out
rcr
dec
add
push
out
into
push
or
test
loop
sub
mov
mov
cld
sbb
rcrl
movsb
sbb
and
push
stos
jmp
adc
cmp
push
lods
test
cmp
or
adc
cmp
call
fcompl
or
scas
in
mov
or
mov
std
or
data16
pop
movsl
data16
in
idivb
xor
push
xchg
cmp
jecxz
std
push
and
fs
sub
sbb
sbb
jo
mov
xchg
mov
movsl
sub
aam
pop
ret
sub
jecxz
dec
imul
mov
in
lock
dec
mov
cmp
ret
mov
pop
fcoms
icebp
ljmp
cld
in
aad
push
jge
add
xor
sahf
mov
das
mov
mov
jl
daa
lcall
jbe
std
xlat
cmc
jl
popa
loop
fsts
or
pop
inc
inc
imul
adc
jae
dec
pop
and
leave
mov
mov
test
ret
lock
dec
icebp
lods
gs
and
pop
ss
pop
and
xor
xor
dec
shr
out
packssdw
jae
test
jae
loope
daa
pop
xchg
push
xchg
pop
fbstp
popa
xchg
sahf
or
cld
pop
fsubl
stos
in
icebp
sahf
jge
xchg
and
inc
test
in
lds
push
aaa
out
fnsave
dec
in
cmp
jl
out
test
mov
pop
xorl
fadds
mov
outsb
outsb
pop
push
and
push
loopne
lods
sub
stos
inc
jg
push
fistl
jg
icebp
je
pop
in
ret
cmp
movl
mov
fmull
iret
sub
gs
sahf
cmp
ljmp
adc
jno
in
pop
inc
jo
jmp
push
mov
jl
add
jp
insl
inc
cli
xchg
sub
lcall
or
popf
jge
mov
adc
lahf
push
shr
jbe
pop
scas
mov
push
xchg
icebp
pop
push
or
add
pusha
mov
mov
testb
or
sbb
inc
inc
push
roll
aas
inc
ficompl
pushf
pop
je
sbb
lcall
out
pop
movsl
or
jg
dec
addr16
fcomps
sub
mov
shl
inc
fisttps
gs
xchg
pop
insl
leave
xor
adc
insb
or
shlb
call
pop
fcompl
addr16
dec
out
jne
mov
gs
out
test
push
mov
call
and
xor
or
pop
in
mov
scas
imul
cmpsl
dec
negb
daa
push
lea
ljmp
in
mov
push
push
out
sbb
dec
xchg
idivb
popa
push
jl
pop
ss
loope
fisttpll
pop
dec
push
fldl
cmp
and
jo
sub
xor
fstps
or
pop
xrelease
popa
mov
push
pop
das
pop
lret
mov
hlt
jg
jne
je
push
xor
cltd
cmp
jo
sbb
inc
data16
popa
lods
mov
into
dec
xor
sbb
xor
pop
fcoml
inc
es
cs
jne
dec
imul
in
data16
mov
scas
aam
cmp
add
jno
pop
ljmp
push
out
push
leave
jmp
sub
ret
pop
xchg
adc
aad
mov
scas
mov
cmc
sub
adc
loop
std
sti
aaa
jae
jo
push
xchg
xchg
fnsave
cmp
mulb
popa
fcmovu
popf
push
subl
mov
hlt
inc
jae
sbb
orl
imul
aas
sub
inc
popa
gs
popf
lods
ret
jno
push
add
mov
jmp
gs
pop
lock
or
fnstenv
mov
mov
sti
out
push
jecxz
xor
fwait
daa
jo
sbb
mov
dec
out
or
mov
jg
mov
dec
cmp
xorl
shrb
ss
mov
gs
lods
lds
jp
dec
sahf
imul
and
mov
and
sbb
xor
mov
arpl
in
call
flds
lret
shlb
in
pusha
jmp
loopne
imul
inc
fiadds
push
bound
movsb
out
es
mov
adc
push
push
out
xchg
repz
movsl
push
push
jns
repz
xor
xor
push
or
pop
cwtl
lret
out
mov
push
dec
iret
ss
mov
ja
push
jbe
aaa
cmpsb
rol
sbb
jle
sub
xchg
and
into
mov
jno
adc
mov
xchg
loope
and
xor
mov
mov
and
fnsetpm(287
xor
mov
sub
jae
push
jne
xchg
fsubrs
sti
inc
stos
jmp
push
iret
push
inc
sub
int3
mov
xchg
ucomiss
jno
out
pop
pop
cmp
push
mov
icebp
idiv
jno
xchg
mov
pop
pop
pop
shrl
mov
mov
and
in
and
inc
outsl
fidivrl
shl
inc
mov
adc
push
jge
cmc
sub
push
jmp
fwait
mov
jnp
cmp
cld
pop
mov
push
lods
add
lahf
setle
aas
or
xchg
vpmadcsswd
out
inc
fcompl
push
pushf
dec
sbb
out
fildll
roll
lahf
incl
adc
lcall
push
ret
loop
xchg
hlt
push
lods
addr16
daa
test
jle
fidivs
bound
clc
mov
icebp
fmull
mov
add
outsb
push
repnz
outsb
cmp
push
pop
clc
inc
shl
dec
jecxz
out
fcomip
int
and
outsb
jmp
mov
add
insl
sti
or
lahf
push
push
cli
push
das
jns
mov
mov
lret
loope
leave
inc
leave
mov
rcr
mov
inc
das
push
push
jno
add
imul
and
test
movd
add
rorl
icebp
rolb
pop
mov
ljmp
dec
adc
pop
lret
sti
pop
cmp
add
insb
mov
test
imul
in
stos
add
int3
pop
mov
aam
and
sbbl
stos
bound
in
cmpl
xchg
roll
das
push
push
movsl
jp
or
mov
inc
imul
dec
sub
xor
mov
jns
stos
push
ljmp
aad
stos
in
push
add
fwait
or
xor
push
dec
incb
shlb
test
cmpsb
out
mov
loop
mov
movsl
mov
test
push
mov
xlat
sub
xchg
pushf
stos
push
push
stos
mov
inc
enter
mul
outsl
sub
ja
test
pop
pop
into
aas
sub
in
call
jge
in
pop
rorb
addl
sbb
push
xor
xchg
int
jmp
inc
push
inc
mov
cwtl
por
push
adc
out
cmp
les
cs
xchg
mov
in
cmp
mov
stos
mov
or
xchg
and
jne
fsincos
xchg
jbe
ja
lock
orps
and
gs
fadd
or
mov
add
sbb
cli
fmuls
mov
sub
std
mov
inc
mov
push
shl
int
das
xor
popl
insl
adc
test
sbb
out
aaa
cmp
inc
jo
out
jb
adc
xchg
leave
and
jno
xor
das
stc
fsubs
rcr
popa
ss
fcomps
out
sbb
xchg
or
cwtl
cmp
lods
das
pushf
mov
mov
je
mov
jae
int3
pop
fisttpl
test
aas
lods
cmp
mov
and
dec
mov
mov
pop
mov
lret
shlb
daa
enter
push
mov
int3
mov
call
cmpb
mov
adc
and
dec
cs
add
inc
in
es
xor
test
hlt
ret
out
mov
arpl
daa
jb
repz
cmc
jno
pop
pop
mov
xor
sbb
clc
stos
jg
scas
inc
mov
and
inc
sbb
add
push
push
xchg
jnp
enter
out
push
push
mov
das
sbb
loop
out
addr16
mov
roll
mov
add
mov
out
and
xchg
fwait
pop
popa
out
lret
xor
xlat
bound
cmp
or
mov
adc
nop
xor
icebp
movsb
pop
xor
andl
xorl
lods
or
adc
adc
insl
lea
push
sbb
stc
ret
push
call
add
jecxz
insl
sbb
stc
stos
pop
mov
or
sub
sti
mov
jns
or
negb
pop
adc
adc
inc
jne
pop
xchg
mov
out
ja
or
add
sbb
sub
call
sub
mul
fs
mov
pop
pop
xchg
mov
nop
daa
mov
insl
aaa
shlb
lods
cmpsb
icebp
inc
inc
push
push
cwtl
insb
or
add
xor
pop
pusha
lds
fsubrs
mov
push
fildl
push
jne
pop
cwtl
repnz
xchg
rclb
movsb
xchg
cmp
jle
or
lret
or
cld
cmp
ja
mov
das
add
push
mov
xor
sub
mov
pushf
and
xchg
test
cmpsb
pop
push
mov
imul
add
lock
stos
orl
in
push
xchg
inc
sbb
aam
popa
pop
cmp
inc
rclb
jge
jp
or
test
or
test
cwtl
aam
xchg
loope
insb
pop
inc
xchg
test
leave
mov
stc
mov
fwait
mov
inc
mov
in
mov
mov
in
jp
inc
scas
jnp
or
xor
sub
repz
jns
dec
fnstcw
xor
push
cltd
cmc
and
pop
xchg
pop
sbb
stos
dec
push
cmp
jmp
faddl
jne
mov
movsb
push
pop
ljmp
pop
pop
insb
xchg
mov
jns
xchg
cmp
stc
jae
movsl
jo
xlat
mov
cmc
sbb
das
fidivrs
inc
pushf
sbb
adc
imul
out
sbb
or
add
mov
mov
and
aam
inc
xchg
push
jmp
js
in
dec
mov
lods
out
test
mov
xor
imull
adc
jae
push
sbb
mov
arpl
jae
fmuls
xchg
dec
xchg
sti
aad
lds
imul
or
or
in
sbb
push
pop
pop
pusha
lods
jmp
or
bound
xor
push
loopne
adc
push
mov
sub
lods
loopne
pop
scas
jecxz
mov
pop
xchg
jb
lock
push
bsf
loop
xor
cmp
jle
fwait
sbb
add
stos
xchg
outsl
mov
neg
call
xchg
inc
mov
inc
cld
sbb
dec
incb
std
outsl
lock
mov
pop
outsb
addr16
scas
mov
movzbl
jno
jle
push
xor
sbb
mov
mov
in
addl
adc
mov
sub
or
pop
xlat
mov
pop
add
stos
mov
jmp
in
or
lret
jns
adc
pop
xor
mov
jns
aaa
mov
stc
cmp
pop
xchg
cmp
and
idivl
inc
shlb
insb
cld
xchg
sub
sahf
dec
xchg
loopne
mov
je
inc
mov
xchg
xor
jns
push
adc
sbb
loopne
push
xor
jb
dec
aad
ret
sub
aam
pop
adc
mov
inc
fs
cmp
in
stc
pop
add
adc
inc
and
movsl
xchg
lock
and
divb
xchg
mov
out
inc
in
dec
sub
repz
adc
fnsave
outsb
lret
ds
aam
mov
ja
sbb
mov
loopne
lcall
xchg
ficompl
mov
xchg
adc
mov
xor
mov
jns
ljmp
imul
sarb
mov
sbb
ret
je
enter
push
mov
add
shlb
out
jae
popf
push
rep
hlt
pusha
mov
mov
out
xor
stos
inc
or
mov
cmp
jg
jb
movsb
in
jns
adc
shlb
int3
fdivrs
out
mov
xchg
lret
popf
sbb
ds
in
aam
std
loopew
push
cltd
sub
inc
adc
icebp
outsl
loopne
pop
repnz
nop
lcall
fwait
or
mov
cmp
push
xorb
mov
push
cmp
mov
aaa
sub
push
cs
or
hlt
subl
je
push
fdivl
inc
data16
scas
pop
or
dec
jns
out
inc
cmpsb
lods
and
test
cmp
aad
adc
ja
or
ret
xor
aas
leave
ret
push
and
mov
dec
sub
aam
or
add
mov
lock
fistpll
mov
inc
jbe
xchg
xor
ret
aam
pop
addr16
cmpsl
cmpsb
aas
jns
inc
and
std
aaa
push
int3
xchg
push
inc
addl
cmpsb
rcr
sar
movl
inc
xchg
xlat
sarl
shll
mov
adc
dec
es
cmp
aam
into
sbb
es
jl
mov
fisubl
out
push
lods
cld
mov
mov
push
repz
divl
push
mov
out
rol
movsl
sub
aam
hlt
push
ljmp
bnd
or
sbb
pop
lds
pushf
cmp
cmp
add
ljmp
jg
mov
imul
ret
jp
lret
and
mov
jle
xor
lret
repz
sub
xchg
sbbb
mov
mov
pop
outsb
push
ss
jmp
gs
stos
mov
add
pushf
fwait
and
cmpl
aad
dec
mov
sub
cmpsb
rcrl
cmc
jne
repnz
xchg
push
notb
lea
and
cmp
add
xchg
xor
push
mov
sbbb
lcall
enter
inc
and
rolb
ja
jo
mov
add
pop
aaa
cmp
dec
imul
dec
popa
pop
push
sub
cmp
or
jmp
push
add
mov
jnp
sbb
fs
or
pusha
cmp
jg
adc
xchg
sbbl
mov
std
int3
inc
pop
sub
dec
cmpsb
cmp
mov
lahf
aaa
cmc
popf
pop
xchg
nop
sbb
xchg
adc
inc
mov
test
mov
mov
or
sub
mov
adc
pop
mov
cmp
sbbb
cmp
inc
xlat
scas
in
jmp
mov
adc
adc
js
xchg
in
mov
cmc
cld
mov
setns
jne
jecxz
aam
repz
add
push
push
pop
in
xchg
enter
jmp
push
in
and
adc
jp
add
icebp
ret
jno
mov
xchg
mov
cltd
enter
or
mov
mov
push
cld
call
mov
call
jecxz
sbb
cmpb
enter
pause
jo
aam
test
outsb
je
ret
mov
test
jnp
or
jl
add
jg
mov
pop
stc
addr16
nop
xor
cmpb
roll
mov
cmp
add
mov
pop
jne
xor
cltd
and
sub
jbe
mov
addr16
imul
cmp
xchg
cmc
lock
xchg
into
or
dec
sbb
arpl
jno
cli
fiaddl
lock
cmpsl
cmc
mov
adc
es
jecxz
out
lods
cwtl
out
pop
push
and
mov
adc
add
sub
sar
mov
rcrl
push
inc
pop
dec
pop
ljmp
jecxz
leave
dec
jp
int3
lods
dec
repnz
test
fwait
pop
mov
test
jns
dec
nop
aas
lock
test
cld
mov
pushw
aaa
movsb
dec
lret
xchg
sub
pop
or
notb
outsl
cmp
arpl
fisubrs
push
bound
js
mov
dec
and
cld
push
push
test
fdiv
cmp
les
fisubrs
loop
in
mov
inc
mov
xchg
jnp
js
xlat
js
push
add
aaa
add
pop
mov
ror
sbb
xchg
movsb
fcmove
sub
daa
and
cld
xchg
sub
pusha
jl
out
jo
leave
pop
sbb
or
stos
and
shlb
fistl
icebp
mov
lods
mov
mov
push
out
push
or
addb
jo
lods
pop
cmp
cltd
pop
sbb
test
inc
sub
sub
addl
pop
sub
mov
xchg
xlat
inc
cmpsl
or
sarb
and
xchg
lods
add
mov
xor
lds
xchg
add
mov
out
jae
sbb
cmpsl
xchg
pop
mov
movsl
loope
repnz
inc
out
push
popf
loopne
add
test
lock
add
lret
les
adc
fwait
pop
pushf
add
rclb
scas
sbbl
and
nop
and
adc
push
imul
or
subb
pop
loopne
sub
xchg
and
shrb
sbb
sub
ds
mov
fiaddl
mov
dec
xor
outsl
add
hlt
mov
jle
mov
dec
mov
popf
insl
mov
ficompl
ss
cltd
xor
sbb
popa
fsubrl
xchg
xchg
sbb
xchg
xchg
xchg
jns
or
xor
pop
mov
inc
sub
pop
dec
and
ja
xlat
outsl
xor
out
notl
push
imul
jmp
rcrb
jg
mov
or
mov
rcll
mov
push
popa
sbb
xor
dec
cmp
andb
jg
mov
sub
add
add
inc
pop
push
pop
mov
pop
out
mov
mov
test
imul
negl
hlt
jge
imul
repz
pop
fistpl
push
je
aam
int3
cmp
jo
fmul
popa
mov
jns
ret
cwtl
inc
fmul
mov
scas
test
rcrb
jecxz
test
insb
gs
shr
cmp
xchg
jl
and
mov
shlb
pop
jne
push
loop
mov
icebp
sub
xchg
mov
jg
lock
mov
or
mov
into
test
sahf
dec
pop
jmp
lods
jl
sub
and
and
ja
lret
cli
js
mov
inc
cmp
xchg
fsubs
pop
or
mov
lret
push
pop
stos
aaa
in
cs
sbb
call
inc
fildll
fs
scas
xchg
lret
fstpt
cmp
repnz
xor
add
inc
mov
pushf
or
scas
and
inc
sbb
sti
dec
into
xchg
divl
mov
lods
cmp
test
out
adc
and
mov
lret
test
or
xor
dec
dec
int3
ss
xchg
pop
pop
fwait
rcrb
arpl
movd
ret
cmp
xlat
lcall
lods
push
mov
xchg
imull
sub
pusha
insl
push
in
xor
inc
xchg
loopne
fbstp
cli
insl
pop
sbb
and
push
stos
sarl
cltd
sub
lock
sub
jle
push
mov
add
cmp
lds
stos
cli
jmp
mov
sub
mov
sub
fmuls
movsb
scas
or
mov
xor
out
icebp
fcmovbe
shl
cmpsb
dec
repnz
movsl
xchg
fdivrl
in
fdivl
mov
shll
in
out
sub
lret
js
movsb
inc
push
push
subl
add
movsl
jle
aad
cwtl
ja
mov
rcrl
and
pop
lods
loopne
rolb
fwait
adc
jo
cmp
repz
add
ja
add
cltd
xlat
sahf
fwait
hlt
lds
push
pop
rol
push
fimuls
sub
push
les
cld
nop
xchg
cmc
adc
imul
test
icebp
or
fidivrl
add
mov
shlb
mov
dec
push
rcrl
aaa
aaa
mov
aad
clc
jl
or
enter
dec
sbb
ficoms
leave
jnp
insb
stos
lock
xchg
mov
xorl
lds
xchg
jmp
add
je
call
in
adc
mov
push
push
mov
mov
add
sub
cli
push
add
cmpsb
and
bound
dec
mov
adc
and
mov
aas
int
dec
mov
out
inc
mov
lea
xchg
rcrl
in
in
cmc
mov
fildl
mov
fcomps
lret
es
out
push
imul
fwait
sub
pop
xlat
mov
movl
jecxz
pop
adc
xchg
jle
les
mov
cltd
ss
cli
aaa
sbb
mov
mov
add
rorl
jp
inc
push
push
and
jg
mov
and
pop
cmp
hlt
into
sub
push
sub
inc
cmp
out
sub
xchg
push
mov
pop
aaa
out
data16
sub
push
push
rorl
inc
in
xlat
in
out
lcall
mov
pop
lds
icebp
ret
xchg
inc
ljmp
jge
lods
adc
lcall
xor
push
add
pop
push
xchg
pop
call
mov
cltd
clc
enter
insl
outsl
in
leave
call
push
or
cmp
cs
outsl
fdivrl
inc
ja
inc
cmpsl
nop
sysret
in
pop
ja
push
mov
das
popf
mov
leave
xor
sub
mov
dec
clc
jnp
pusha
les
pop
jmp
cli
and
add
xchg
cli
dec
repnz
push
push
cmpsb
dec
mov
xlat
cmp
xor
mov
xchg
and
in
pusha
mov
call
loope
mull
sub
pushf
or
mov
lds
dec
ljmp
fmuls
insb
or
stos
out
stos
mov
and
pusha
stc
adc
pop
dec
cs
push
push
ds
leave
je
and
mov
popf
xchg
aad
lret
popf
lahf
dec
xorpd
dec
ds
mov
fwait
and
mov
xchg
mov
repz
ror
mov
pop
js
mov
xor
mov
pop
rcrb
add
push
push
insl
adc
or
pushf
mov
xchg
outsb
mulb
dec
mov
xchg
push
lock
mov
pop
push
shll
or
imul
das
mov
sub
mov
adc
in
sub
jns
or
mov
jge
jmp
cmp
mov
frstpm(287
mov
or
movsl
aam
or
ljmp
icebp
lea
pop
insb
arpl
fisubrs
inc
mov
ret
adc
test
inc
aaa
xor
push
in
sbb
scas
es
das
enter
mov
xor
daa
in
lods
cmp
pop
cmpsb
scas
push
cmp
fcoms
dec
jl
lea
fmuls
xor
pop
mov
sub
outsl
cli
mov
add
outsb
mov
lods
jp
inc
fcompl
push
jp
cmpsl
add
icebp
pushf
jo
cld
lds
or
jbe
les
mov
push
fnstcw
sbb
insl
mov
push
cmc
mov
data16
jae
cmpsb
xor
jge
adc
lock
or
outsl
mov
popf
sbb
les
or
inc
sbb
xchg
push
cli
add
dec
test
xor
stc
insl
inc
xchg
mov
outsl
scas
iret
push
jnp
je
arpl
jne
and
sbb
xchg
xchg
nop
sub
addl
stc
inc
adc
arpl
bt
push
div
mov
xchg
mov
inc
inc
sbb
mov
and
push
dec
inc
inc
or
aad
jno
xor
aam
push
and
push
out
mov
pop
sbb
int3
clc
arpl
sahf
push
mov
mov
js
ret
test
inc
mov
xor
test
aaa
hlt
loope
shrl
xlat
and
test
int3
cltd
sbb
add
hlt
xchg
dec
ja
ja
mov
shll
push
xor
popf
popa
cmp
and
repz
fdivr
sub
ds
and
dec
rcll
fcoms
pusha
jmp
and
decb
fiadds
add
das
mov
cli
addr16
fsubr
push
pop
inc
push
ret
jge
sbb
into
fmull
mov
jp
mov
pop
outsb
iret
push
or
pop
inc
inc
icebp
pop
push
push
sti
xchg
dec
outsb
pop
aaa
mov
dec
in
out
call
pop
xor
and
add
rol
mov
rorb
clc
popf
inc
shlb
pop
data16
pop
or
lahf
sub
mov
fsubs
xor
sub
shr
je
adc
push
cmp
mov
loopne
repnz
lret
jecxz
mov
push
push
push
enter
out
push
and
cld
pop
adc
mov
aas
shrl
sbb
sub
imul
push
jae
jg
ja
push
pop
adc
add
subb
mov
movsb
inc
push
sub
xchg
xor
leave
and
mov
gs
lret
js
cmp
or
inc
popf
movsb
mov
jg
movsl
icebp
aam
xor
mov
mov
xchg
aas
stc
ss
popa
lcall
mov
cs
mov
gs
pop
and
xchg
gs
or
cmp
pop
inc
lcall
xchg
pop
fwait
jmp
lret
and
mov
xor
adc
call
mov
in
cmp
mov
xor
imul
sub
dec
faddl
jns
fwait
and
cltd
mov
add
iret
pop
lods
add
pushl
rorl
nop
and
dec
jmp
hlt
and
call
cmp
push
inc
add
enter
push
adc
push
mov
mov
mov
lret
fcomps
pop
int
dec
xor
mov
clc
movsb
and
sbb
sub
les
js
lods
xor
adc
out
push
xchg
push
inc
and
mov
fistpl
fdivr
hlt
add
mov
in
addr16
clc
cltd
cli
mov
out
cmp
arpl
sti
sub
mov
outsb
inc
mov
xchg
das
mov
mov
xchg
jp
jnp
lock
imul
test
cmp
jo
xchg
pop
pushf
in
mov
popf
xchg
js
jno
pop
sub
adc
addr16
cmp
test
push
sub
mov
and
and
adc
in
outsb
adc
push
les
in
aad
or
pop
dec
not
dec
sub
in
sbb
rol
push
cmovle
in
sub
pop
adc
inc
rorl
fidivrs
dec
jae
mov
cmp
and
shr
adc
jnp
cmp
negl
rclb
das
cli
jge
or
pop
inc
std
xchg
push
cltd
fcmove
and
bound
or
pop
pause
out
out
cwtl
jmp
lods
mov
xchg
gs
hlt
popf
cmp
mov
fstpt
in
in
std
push
inc
push
test
inc
jl
loop
push
lock
jbe
lock
ret
fisubl
mov
int3
or
push
stos
xrelease
mov
add
xor
fwait
jg
cli
lret
xorl
inc
adc
jns
ljmp
cmp
or
test
mov
add
les
jb
je
pop
mov
mov
inc
pop
adc
inc
data16
and
pop
xor
fisubl
arpl
dec
loope
xor
sub
add
push
or
sarl
mov
lret
js
in
jl
push
xchg
ljmp
mov
adc
inc
sub
cmp
dec
int3
jle
xor
push
xchg
repz
push
inc
pop
inc
add
xor
fildl
inc
scas
pop
addr16
mov
testl
jo
out
pop
lea
xchg
xchg
bound
rol
dec
mov
add
mov
mov
movsb
call
test
test
dec
ja
pusha
adc
lret
sub
loop
add
jmp
in
movsb
call
push
pop
ds
and
cmp
mov
sahf
sub
jbe
das
mov
lea
xchg
xor
shl
pop
fbstp
les
add
fiadds
or
jle
xchg
xchg
and
sub
push
adc
jne
scas
cwtl
dec
and
jp
mov
xor
fcmovu
and
int
cmp
mov
test
pop
push
xchg
lahf
sahf
fmulp
xchg
fisttpl
outsl
daa
push
notb
arpl
adcb
mov
out
cmp
push
mov
inc
jmp
cwtl
outsl
clc
pop
je
repz
test
dec
int
leave
dec
push
aaa
lcall
addr16
pusha
dec
addr16
jmp
idivb
cmpb
jb
adc
and
or
sbb
pop
dec
lea
jo
clc
mov
push
lahf
xor
xor
mov
or
iret
xor
int3
jp,pn
xor
sbb
jge
mov
add
mov
pop
mov
inc
sbb
rcl
lods
adcl
aas
mov
add
jno
idivl
pop
mov
pop
push
gs
add
psraw
pop
xor
fmull
pusha
arpl
jno
inc
xor
loop
push
loope
shl
or
sbb
ljmp
lcall
call
clc
sti
jnp
and
xchg
sahf
shrl
jmp
sbb
in
sbb
fiaddl
add
sub
shl
outsb
xchg
cmp
or
xchg
cld
nop
sub
clc
xor
mov
outsb
and
das
dec
fldenv
pop
aas
and
cwtl
mov
sbbb
dec
es
mov
test
mov
xchg
fwait
inc
add
pushf
push
nop
push
es
jae
scas
orl
push
dec
fsubs
mov
out
in
mov
add
sbb
jmp
xchg
sbb
xchg
mov
decb
lea
call
jle
sti
sbb
jne
mov
pop
ror
dec
aam
sbb
or
jle
sub
negb
fwait
xchg
mov
adc
movsb
orl
dec
jge,pt
mov
in
xchg
popa
sub
jb
jmp
or
sbbb
sbb
jae
cmp
test
fiadds
pop
xor
sti
cmp
cmp
xchg
loop
mov
xchg
xchg
jmp
pop
popa
mov
jg
scas
ja
fldt
pop
dec
and
jo
jno
cmp
push
rcl
sbb
mov
cmpsl
add
adc
in
dec
xor
addr16
and
je
scas
xor
or
dec
mov
aaa
arpl
xchg
push
pause
fs
cwtl
lret
in
mov
in
inc
dec
lods
mov
inc
push
mov
into
andl
jecxz
mov
push
pop
mov
sbb
push
cmpsl
repnz
push
in
jg
sahf
sbb
mov
xor
pop
mov
cmpl
popa
jbe
jge
mov
aaa
cmpsb
fisubrl
xlat
mov
sbb
imul
jnp
leave
mov
push
popa
xchg
inc
xchg
or
sbb
shlb
cmpsb
int3
loope
xchg
sub
xchg
mov
push
stos
mov
movsb
cmpsl
sbb
pop
aad
lods
inc
sarb
bound
movsb
xchg
jno
mov
jl
scas
leave
add
pop
std
arpl
fwait
mov
inc
inc
jge
rcr
insl
cmp
sti
pop
les
sbb
inc
rclb
lds
sub
xor
cwtl
les
lret
sbb
sub
fprem1
mov
addr16
pop
std
pop
mov
dec
fwait
mov
sbbl
mov
insl
cld
jae
std
mov
cmp
test
ret
sub
daa
int
and
adc
daa
adc
fs
xor
cltd
scas
jb
xor
test
inc
pop
in
pop
icebp
insb
sti
adc
adc
frstor
and
add
xchg
mov
mov
or
lcall
or
adc
dec
add
int
and
mull
push
aas
push
mov
push
inc
sbb
out
adc
mov
ljmp
xor
mov
push
sbb
push
sbb
jb
jle
xchg
xor
or
ds
or
ss
pop
fldcw
cwtl
dec
push
push
stos
cmp
pop
shlb
or
push
pcmpeqb
ja
mov
xchg
nop
fisubl
mov
inc
and
sub
out
repnz
aad
movups
push
pop
fwait
sti
jne
pop
mov
inc
jo
adc
int
and
jg
shll
inc
loopne
mov
cmp
mov
cmpsb
pop
xchg
cmp
imul
or
adc
mov
xorl
jbe
mov
jns
xlat
shlb
test
mov
cli
xor
daa
add
pop
fisttpll
and
xchg
lahf
neg
sub
out
clc
or
lods
push
bound
xchg
outsl
inc
and
push
dec
push
into
and
lods
cld
sub
sub
orl
mov
test
pushf
cld
test
fstl
loopne
stc
jns
shlb
mov
outsb
xor
psubsb
lock
movsb
iret
movsl
sbb
mov
lret
cmp
fsubrs
mov
clc
push
adc
mov
inc
ret
cmp
mov
adc
xchg
push
insl
add
cmpsl
mov
aam
xor
xor
jecxz
mov
cmp
lods
test
push
push
sbb
add
sub
aaa
lods
sub
sbbb
push
mov
mov
jae
dec
cmp
inc
subb
jns
in
or
movsl
mov
je
std
mov
add
dec
in
xor
push
insl
and
pop
mov
stc
in
and
imul
dec
sub
aam
and
nop
mov
push
test
lds
xchg
arpl
call
mov
insb
lea
ds
push
insl
jae
insl
sub
lret
sahf
iret
inc
mov
mov
mov
and
psubusw
push
imul
bound
and
mov
hlt
jle
xchg
inc
push
mov
mov
int
sbb
push
fiadds
and
bound
inc
xlat
gs
xor
inc
out
cltd
into
mov
add
mov
adc
sub
imul
loope
shrl
clc
and
pop
popf
cmp
inc
mov
push
add
pop
adc
pop
cmp
inc
pop
or
mov
mov
mov
add
movsl
ljmp
or
and
xchg
pop
cmp
mov
iret
mov
insb
and
flds
inc
loope
push
sbb
or
dec
pcmpgtw
and
lcall
fsub
mov
jge
mov
sbb
jo
adc
sbb
outsb
inc
add
addr16
and
xlat
jp
xchg
jnp
sub
lret
sti
fldenv
cmpsb
sbb
sbb
mov
popa
out
mov
inc
xchg
mov
int
lcall
push
mull
mov
xor
jbe
mov
jns
dec
jnp
out
es
neg
into
adc
inc
push
mov
in
popa
mov
push
arpl
mov
imul
add
dec
out
insl
out
pop
cld
and
lret
mov
loopne
fisubs
mov
lret
cld
and
and
sbb
adc
aas
mov
sub
xchg
inc
xchg
rol
sbb
and
mov
test
arpl
mov
outsb
dec
adc
push
adc
add
mov
jge
cmpsl
push
or
push
mov
fs
cld
fcmovb
cltd
jle
sub
insb
mov
dec
mov
aas
int3
cmp
bnd
push
add
es
inc
xchg
fnstcw
dec
js
inc
xchg
or
lret
in
pop
mov
aaa
out
repnz
dec
ss
pop
adc
xor
imul
mov
and
std
xchg
outsb
inc
jns
inc
sbb
adc
jne
iret
mov
arpl
inc
sbb
mov
popf
cs
push
xchg
imul
mov
and
in
ds
xor
and
mov
in
in
out
arpl
push
lds
insb
jo
stos
es
sbb
in
inc
xchg
adc
push
call
mov
push
lods
les
mov
xlat
mov
fisttpll
bound
mov
xchg
test
cmc
in
sub
js
test
cmp
addr16
imul
into
xor
out
jo
xchg
pop
rcrb
ljmp
xchg
cmpsl
bound
lcall
out
cmp
fidivl
ja
push
sbb
fwait
mov
stos
arpl
cltd
mov
ficoms
jbe
pusha
jmp
aas
sub
lock
xor
mov
lods
xchg
pop
dec
add
je
mov
xchg
shrb
inc
dec
lret
fsubrl
sbb
notb
xchg
inc
add
or
loope
shll
jle
pop
push
les
loop
sbb
jle
add
ljmp
mov
test
dec
jbe
ss
loope
or
xchg
ja
xor
dec
mov
pop
dec
arpl
and
outsb
xchg
clc
sbb
sti
scas
push
pop
cmpsb
cld
sbb
dec
jns
aas
hlt
js
dec
cld
push
mov
xor
outsb
int
jle
test
movsb
nop
sub
adc
movsl
cwtl
clc
adc
out
sahf
fldt
lea
sarl
and
mov
dec
call
and
imul
pop
icebp
add
aas
fsubrl
es
bound
mov
in
adc
xchg
inc
inc
pop
xor
out
and
xor
testb
jge
cli
pop
sub
rcrb
mov
sbb
test
pop
out
fmul
adc
inc
sbb
cmc
arpl
inc
sub
popa
or
mov
fisubl
test
add
out
int
stos
std
lods
mov
fcoml
inc
fsubl
ss
std
adc
push
mov
and
pusha
jecxz
repz
js
sub
add
dec
xchg
xor
push
dec
jge
or
adc
push
mov
dec
jg
scas
icebp
popf
lahf
je
out
xor
dec
push
push
push
xchg
mov
push
sub
cld
push
push
aad
fdivr
jb
inc
fcmove
jno
lcall
cmp
rcr
add
testb
test
add
add
sti
push
call
idivb
dec
int3
jecxz
mov
or
repz
mov
fsubrs
js
fisubrl
and
mov
mov
sbb
mov
sti
bound
rcrl
jno
imul
stos
int3
mov
mov
and
pusha
rcrb
jle
push
clc
arpl
sbb
loopne
lret
xchg
test
jecxz
mov
popa
add
leave
xchg
jmp
pop
jecxz
cltd
jmp
aaa
rclb
pop
pop
jecxz
mov
mov
or
pop
arpl
inc
nop
pop
inc
outsl
inc
xor
jp
icebp
loop
xchg
out
lea
hlt
jp
xchg
adc
call
xchg
aas
movsl
push
out
mov
adcb
jne
and
jns
pop
in
orb
icebp
dec
push
ret
mov
out
mov
xlat
xor
push
aad
in
test
mov
flds
bound
mov
push
dec
hlt
inc
xchg
incl
pop
pop
sub
outsb
adc
xchg
push
dec
icebp
mov
push
jb
and
in
mov
subl
lahf
lea
mov
shll
xlat
xor
push
pop
andb
xor
cli
cmp
push
jo
jl
mov
imul
mov
or
in
mov
cmp
inc
pop
jo
shr
or
lahf
mov
and
sbb
int
push
std
ljmp
movsl
ds
xchg
xor
and
movsl
push
in
sbb
lds
divl
adc
movd
cmp
lret
cmpsb
hlt
sbb
negl
xor
mov
mov
das
or
adc
sbb
jecxz
jg
inc
fmull
leave
cmp
cmp
dec
je
pop
adc
int
add
in
xchg
inc
jno
push
es
addr16
pop
mov
clc
mov
ja
mov
sub
or
lock
jno
pop
lods
cwtl
fldl
mov
push
test
sbb
std
cmpsb
push
repz
mov
movsl
out
jl
and
xchg
xchg
stos
cs
fdivs
pop
cli
jnp
mov
sbb
push
aam
shlb
lea
sbb
sbb
mov
out
sub
push
rcrb
cmp
fistl
or
mov
push
cltd
lea
fwait
cld
mov
mov
insb
cmp
add
loop
xchg
xor
adc
jmp
int
fstpl
sub
xchg
stos
dec
pop
cmpsl
jecxz
lods
push
call
jle
jl
mov
das
test
insl
xchg
fists
shlb
insl
in
pop
outsb
xchg
loopne
cmp
add
mov
dec
call
xchg
jns
mov
mov
cmp
jns
icebp
xor
mov
lods
mov
mov
lea
clc
popf
repz
or
stc
fwait
inc
lds
popa
jge
mov
call
int3
mov
adc
mov
sbb
dec
test
add
popa
stos
mov
dec
push
jecxz
inc
pop
inc
jp
mov
das
jg
cmp
push
mov
add
outsl
insl
std
xor
inc
es
out
and
mov
xchg
inc
jl
bound
pop
inc
filds
stos
adc
iret
xor
aam
dec
clc
sub
jns
jbe
sbb
out
mov
cs
stos
orb
push
jecxz
aaa
or
pop
push
jmp
xlat
xor
push
lods
mov
mov
xchg
movsl
imul
or
xchg
bound
enter
or
sub
add
add
push
mov
or
lahf
inc
arpl
inc
mov
iret
adc
mov
inc
in
inc
mov
fs
shlb
pop
xor
aam
aam
testb
or
pop
push
ja
jae
mov
cli
mov
jmp
push
andb
xor
ja
addr16
pop
push
out
iret
mov
push
and
fwait
fwait
push
pop
jbe
inc
hlt
xor
insb
lret
adc
push
mov
or
wrmsr
and
repnz
out
xor
mov
jns
lds
sub
mov
mov
mov
and
xor
push
jmp
fiaddl
flds
xor
pop
test
jge
mov
inc
mov
fsubp
xchg
repz
addl
fsubr
mov
inc
sub
xor
sbb
stos
repnz
fsubl
dec
imul
or
test
loopne
data16
imul
imul
rorl
inc
clc
xlat
mov
pop
dec
data16
jbe
push
dec
jnp
push
mov
or
xlat
push
dec
fs
mov
adc
xor
xchg
push
jmp
push
in
mov
push
sbb
out
inc
enter
xchg
mov
call
pushf
adc
out
xor
mov
test
xchg
xchg
movsl
insb
lret
out
pop
out
mov
sbb
pop
cmp
fildl
call
lret
adcb
iret
push
dec
popa
mov
ljmp
mov
lret
sahf
aam
fldl
cmp
xchg
insl
enter
sbbb
add
cwtl
or
ret
add
fucomi
xlat
dec
cmp
ds
push
pop
cmp
outsb
mov
cmp
mov
jle
add
jb
lods
pop
mov
adcl
das
in
cmp
dec
cmp
mov
inc
inc
mov
jp
add
movsl
lock
std
std
idivl
cmpsb
sub
dec
add
int
stos
mov
adc
insb
sub
jno
add
jae,pn
std
sti
dec
nop
adc
add
jle
mov
inc
pop
icebp
xchg
iret
movsl
mov
negb
sbb
shrl
cmp
stos
xchg
dec
cltd
dec
push
push
xchg
inc
fstpl
mov
data16
test
andb
and
in
jne
push
jb
enter
cmpsl
jle
insb
ja
imul
cld
loopne
xchg
ja
aaa
jmp
mov
or
inc
push
data16
mov
or
shl
ret
jo
sub
cmp
test
testb
pushf
fdivrs
pop
fnsave
sub
cmpsb
mov
inc
outsb
adc
push
jmp
xor
lds
dec
daa
push
cmpb
or
in
inc
in
pop
in
or
lods
mov
adc
and
xchg
les
xor
pop
push
xchg
addl
mov
jo
pop
addr16
repz
jo
mov
insl
ljmp
sahf
mov
mov
push
xchg
jno
stc
or
pop
jle
push
sti
sub
mov
mov
mov
inc
sbbl
pop
test
enter
aad
xor
and
imul
add
pop
in
es
nop
arpl
imul
or
xor
inc
xor
loopne
rorl
cmpsl
adc
into
jp
das
sbb
movsl
int
ret
jle
xorb
vmovupd
sub
ss
cli
sub
aaa
pop
sub
ret
sub
mov
aas
js
xlat
stos
aad
sub
enter
or
je
cmp
push
cwtl
and
push
add
subl
jl
adc
repz
es
jp
mov
push
add
or
and
inc
sbb
dec
testb
xor
pop
iret
hlt
testb
and
ret
push
ds
push
add
sub
add
bound
pushf
aam
andl
leave
xor
into
adc
in
push
dec
mov
bound
or
leave
mov
pop
pushf
or
fwait
hlt
stc
cmpsl
pop
es
add
jo
fiaddl
pop
mov
jne
xchg
mov
dec
mov
in
pusha
sub
jne
and
pop
xchg
add
in
xor
bound
shll
rcrb
leave
repnz
std
xor
fisttps
insl
xor
fwait
imul
loop
xchg
ja
leave
and
adc
or
es
push
jmp
rcll
pusha
pop
or
addb
aaa
sub
dec
lcall
scas
sbb
adc
insb
out
mov
push
fdivrl
xor
mov
inc
bound
pop
pop
xchg
add
imul
loop
sbb
mov
aad
stc
mov
dec
dec
fwait
in
lea
pop
cltd
fstps
fs
iret
hlt
dec
cmpsb
push
adc
cmp
pop
je
cmc
mov
je
dec
sbb
pop
repz
movsl
mov
jbe
andl
cmp
and
fiadds
shrl
or
roll
pop
xchg
mov
nop
cmp
fadds
jns
push
push
adc
fs
iret
mov
sahf
adc
mov
inc
or
lcall
fwait
add
cmpsb
ret
xchg
xchg
popa
sti
lods
or
call
sub
insb
nop
test
push
fadds
mov
sub
push
mov
je
push
movsb
das
pusha
mov
inc
inc
inc
xorl
aaa
xchg
pop
int
adcl
sbb
loop
rclb
xchg
mov
imul
je
push
jmp
sub
in
cld
xchg
add
push
jb
pop
cmpsl
dec
cmc
call
inc
clc
push
xchg
sbb
dec
inc
lret
add
stos
sbb
ror
and
or
and
lods
adc
mov
daa
stos
mov
cmp
push
sub
ljmp
in
fcmovnu
cmp
mov
mov
in
add
and
mov
jae
fbld
icebp
movsl
xor
or
jmp
mov
out
fwait
sub
mov
and
jae
add
je
push
scas
sub
sbb
popa
push
xchg
jne
fdivl
mov
xor
pop
jle
test
fwait
bound
addr16
mov
jecxz
imul
subb
mov
cmp
inc
enter
push
mov
cmp
dec
inc
data16
sub
cwtl
sub
sub
xchg
fcmovnb
pop
js
mov
or
in
nop
arpl
xor
call
daa
and
sbbl
imul
jp
enter
fs
xchg
sub
int
mov
out
and
test
jmp
mov
inc
test
out
ret
mov
repz
inc
out
add
inc
std
mov
aaa
int
inc
ds
xor
pop
loopne
fnstsw
shlb
xchg
jmp
inc
mov
hlt
or
dec
lret
fildl
xchg
jle
fbstp
mov
stos
and
push
xchg
and
push
mov
loope
fbld
divb
dec
dec
cwtl
adc
lods
xchg
push
inc
sbb
jp
out
jne
rorl
sahf
sub
wbinvd
mov
fisubl
enter
sbb
clc
sub
add
aad
sub
test
sbb
mov
inc
add
sti
mov
jecxz
lods
int3
into
push
addr16
add
dec
stos
mov
in
hlt
out
stos
mov
cmpsl
into
cmp
int3
lret
out
sbb
cmp
js
jg
push
and
aad
into
push
xor
jmp
hlt
mov
sbb
std
nop
shr
aaa
pop
insb
out
movsb
out
out
dec
cld
xor
dec
pop
pop
scas
xorl
or
jp
sub
mull
rol
lods
in
xchg
cmp
jp
pop
cmpsb
pop
scas
adc
orb
lods
fwait
aad
cltd
scas
pusha
insl
cld
sbb
fisubl
loope
push
sub
repnz
pop
xchg
mov
imul
lret
cltd
xor
fsubs
mov
scas
jae
aas
dec
sbb
loope
push
inc
roll
adc
decb
fsubrp
aad
js
out
lcall
jae
cmp
inc
jge
sbb
test
add
mov
outsb
lret
out
inc
stos
loop
rcrl
add
push
mov
cs
xchg
jns
dec
push
outsl
orl
xchg
jbe,pn
mov
push
pop
pusha
repz
mov
popa
out
leave
pushf
jnp
xchg
repz
xor
mov
imull
js
pop
pop
aad
mov
fisubrl
mov
cmp
lret
jmp
or
loop
je
cmp
xor
mov
nop
jno
cli
aam
addr16
incb
pop
xchg
fwait
scas
sub
xchg
add
jl
cmp
jmp
pop
ds
fwait
mov
jmp
loopne
sti
hlt
lods
daa
dec
pop
mov
sti
sub
jae
shrl
dec
ds
mov
sbb
or
popa
pop
dec
inc
pop
push
out
fsubl
add
test
xor
or
mov
inc
scas
mov
repz
xor
lock
adc
mov
mov
rcrl
popa
fisubl
loope
inc
sbb
mov
test
and
shll
sub
adc
xchg
daa
addr16
fcomi
btr
push
mov
addr16
daa
mov
jmp
lcall
xchg
push
inc
lret
and
pop
int3
mov
xor
mov
imul
out
mov
mov
outsb
mov
mov
jge
sbb
inc
test
push
push
xchg
xchg
testl
in
repz
orb
jno
pusha
dec
ret
pop
mov
pushf
mov
clc
cmpsb
fwait
add
lds
xor
pop
cmp
icebp
out
inc
fisubl
cmp
pop
movsb
jne
jnp,pt
jecxz
adc
int
lods
or
outsl
out
lea
mov
mov
stc
sub
popl
push
outsb
movsb
add
and
std
shll
out
sbb
jae
mov
add
xchg
adc
test
or
ret
jnp
mov
sbbb
int
int
pop
mov
mov
call
and
out
lods
movl
mov
lea
cmc
mov
push
dec
cmp
lock
test
mov
adc
dec
or
and
sub
lahf
dec
jg
mov
fistpl
inc
cs
xchg
je
mov
addl
cmp
push
xor
test
shl
and
fmul
xor
sbb
das
ss
sbb
push
push
xchg
sbb
out
or
insl
jae
add
inc
fsubl
sbb
xor
and
and
stc
jae
and
push
icebp
test
push
sbb
out
xchg
call
test
pop
out
cmpl
loop
daa
and
xchg
aas
les
jb
out
test
fwait
push
int
fimull
mov
mov
out
push
push
out
shl
nop
gs
rcrl
call
or
nop
sarl
mov
aad
out
aas
in
sbb
movsb
mov
popf
sahf
int3
xor
loope
dec
and
ss
xchg
inc
cmp
das
add
xor
rclb
int3
adc
pop
jp
or
mov
lods
dec
adc
lcall
nop
add
and
inc
dec
arpl
fisubrs
dec
mull
sbb
xchg
adc
mov
cwtl
or
adc
push
pop
iret
jbe
popa
inc
stos
mov
stc
lahf
cs
hlt
mov
adc
sbb
movnti
adc
test
aaa
stc
loopne
mov
push
test
sub
pop
stos
test
add
cmpsl
dec
stos
push
mov
xchg
pop
out
push
repz
cmpsl
ds
out
cli
fisubs
xor
movq
or
inc
sub
mov
or
dec
flds
push
sti
mov
cmp
sbb
jmp
mov
outsb
inc
xchg
xlat
leave
push
add
adcl
dec
scas
sar
iret
lock
jne
mov
popf
inc
outsl
pop
adc
addr16
aas
adc
das
xor
push
cwtl
xor
lock
outsb
inc
shll
and
int
stc
adc
jg
sub
inc
sbb
xor
rcll
cwtl
xchg
std
and
jg
out
pop
mov
inc
lahf
adc
dec
adc
in
mov
into
mov
mov
push
lahf
sub
xor
out
mov
dec
mov
cwtl
sti
stos
iret
mov
xchg
pusha
mov
cltd
roll
das
xchg
shl
dec
mov
xorb
cmp
icebp
add
ss
dec
pop
je
mov
xchg
jae
push
lds
mov
int
sbb
cli
push
repnz
js
addr16
shlb
inc
js
shlb
adc
lret
movsl
inc
cltd
xor
dec
xchg
andl
mov
ljmp
jns
xor
mov
mov
push
test
fstl
movsb
loop
bound
jg
frndint
stos
mov
mov
inc
cli
loope
int3
icebp
mov
mov
pop
testb
mov
xchg
inc
dec
mov
mov
out
adc
push
dec
mov
dec
pop
xchg
sub
ja
sub
pop
push
lahf
inc
ret
and
clc
mov
adc
divl
lea
mov
mov
xlat
jbe
jge
in
nop
push
loopne
sub
movsl
test
push
insb
add
jp
das
fmuls
sub
and
and
pop
hlt
dec
pop
rol
jl
out
stos
loope
fsubrs
dec
and
mov
xchg
pop
lea
lahf
das
xchg
mov
data16
mov
popf
arpl
sbb
push
mov
div
pop
jo
jle
and
clc
push
pop
sub
fcmovu
mov
adcb
je
dec
dec
fildll
inc
mov
das
xor
stos
lock
pop
popa
std
das
cmpb
test
lock
fucomp
push
mov
in
sbb
sbb
int3
jb
jge
insb
lret
xlat
fs
cmp
mov
jbe
jns
xchg
aam
out
andl
xchg
aad
dec
lcall
mov
jae
sub
icebp
sub
stos
movsl
xchg
mov
mov
jecxz
jb
cmpsl
orl
stos
sti
xlat
mov
push
int
in
jp
jp
aad
mov
mov
cmp
into
xor
daa
push
cmpsb
mov
xchg
mov
pop
ret
ret
xor
iret
pop
iret
inc
cmp
mov
inc
mov
repz
push
movsb
dec
movsl
jp
jl
cmpsl
fnstcw
cld
push
xchg
imul
call
sahf
or
or
ss
xchg
sbb
sahf
sbb
lahf
fdiv
repnz
stos
pop
sub
cmp
mov
int
sbbb
stos
push
pminsw
adc
loope
jns
jmp
std
sbb
xchg
fwait
mov
push
mov
jns
lea
push
dec
mov
adc
scas
lea
pushf
push
jnp
xchg
ljmp
mov
movsb
jg
les
push
xor
in
xor
cltd
andb
push
add
fisttpl
add
flds
cmp
bnd
fadds
cmp
lods
lcall
sar
lea
sar
imul
call
hlt
cwtl
add
lock
in
ss
imul
inc
shll
hlt
push
pop
in
add
and
sarl
mov
in
add
sub
jecxz
jae
rolb
imul
push
jecxz
cmp
iret
mov
jno
xchg
ret
mov
sar
pop
push
or
push
std
test
push
je
je
jmp
icebp
imul
and
lds
lcall
jp
jmp
icebp
mov
sub
inc
fisubrs
pop
popf
mov
out
jae
xor
dec
jecxz
add
std
cwtl
or
xchg
mov
scas
mov
adc
je,pt
pop
call
or
or
cltd
jge
test
push
pop
mov
pop
sub
xor
mull
iret
adc
xlat
fs
out
aas
call
test
js
jle
pop
dec
repz
xchg
sub
test
call
rcr
and
xor
xchg
xchg
repz
push
lods
jl
jl
mov
or
ds
or
out
and
jge
cwtl
cmp
nop
sub
test
mov
xor
and
jmp
lea
sbb
lret
inc
xor
push
xor
lock
jecxz
dec
push
push
fdivr
mov
rolb
mov
lods
arpl
add
mov
iret
pop
push
pop
popa
ret
jb
mov
stos
mov
inc
mov
inc
xor
push
sahf
jmp
jecxz
cmc
sbb
fldcw
push
sbbl
outsl
jo
push
inc
sbb
scas
sub
pop
pop
ja
filds
ljmp
scas
mov
out
dec
sub
pop
cmp
sub
dec
or
in
add
ret
or
lahf
int
lahf
pop
jns
push
cmpsb
xchg
adcl
pop
or
jbe
jmp
js
jbe
mov
ret
movsb
iret
cmpsl
mov
cmp
imul
scas
icebp
or
shlb
dec
lcall
jne
les
dec
mov
mov
imul
push
add
loopne
xchg
mov
stos
mov
cltd
flds
popf
push
mov
pop
inc
and
or
pop
daa
test
imul
add
fstpt
daa
cmp
mov
repnz
push
int
pushl
inc
inc
pop
testl
xchg
adc
movb
or
addr16
xor
mov
sub
mov
cmp
sahf
pop
stos
fsubr
aaa
jbe
cmc
movsl
dec
jb
pop
cmp
jbe
inc
imul
cmp
ljmp
cs
in
in
fistpll
pop
in
adcb
in
push
fcoms
mov
jp
inc
mov
add
scas
das
in
inc
scas
ret
lret
sub
stc
pop
mov
inc
je
out
loop
decl
clc
mov
in
xchg
sbb
push
bound
imul
xor
inc
packuswb
jb
inc
cmp
repz
inc
pop
mov
pop
jnp
fsubr
xor
pop
jno
js
clc
dec
xchg
out
inc
mov
pushf
and
jp
sbb
sub
jle
and
mov
push
aas
pushf
xchg
cmc
cmpsl
push
mov
shlb
cmpsl
incl
adc
push
sbb
inc
xchg
xlat
es
insb
pop
fucomi
in
jecxz
sub
push
ja
fsts
push
es
adc
mov
lcall
sahf
roll
jbe
inc
out
cltd
jns
cmp
vpmacsdd
into
xchg
push
xchg
pop
push
mov
add
push
and
in
sub
dec
scas
sub
jne
or
jle
nop
jmp
add
fmull
pop
out
sbbb
pop
add
cltd
cmp
add
cmp
std
scas
pushf
pop
bound
inc
cld
jmp
sub
lcall
xchg
in
arpl
jae
test
icebp
fisubrl
pop
push
sahf
dec
icebp
mov
mov
test
adc
fcomps
shll
jae
in
mov
mov
add
push
pop
sbb
push
aam
xchg
xor
mov
arpl
add
orb
aaa
adc
out
push
in
adc
mov
aad
test
xchg
pop
mov
mov
roll
add
jge
dec
or
pop
sub
lret
xor
je
sub
fistl
scas
push
jb
push
enter
insb
and
dec
outsb
xchg
inc
test
mov
lcall
cmp
pop
stos
std
mov
sahf
and
mov
xchg
sbb
cmp
pop
cmp
ja
stos
es
sub
mov
mov
xor
xchg
sbb
sbb
mov
ljmp
cmpb
push
loope
sub
idivb
lcall
stc
add
xor
inc
orl
mov
push
dec
xchg
outsl
jae
inc
dec
sti
notl
fs
mov
push
or
arpl
cmp
mov
jl
sbb
loop
sbb
and
push
adc
pusha
mov
lret
in
in
jl
lret
decb
arpl
xchg
js
fisubl
fs
add
adc
mov
loope
ficompl
mov
xchg
lock
fldt
jno
daa
cwtl
adc
push
mov
sbb
mov
ret
rorb
mov
cmp
jl
inc
loopne
xor
je
adc
hlt
mov
push
push
outsl
ds
insl
lock
push
popf
fst
notb
hlt
dec
imul
xchg
es
push
movsl
setbe
xchg
mov
sub
in
fbld
ffreep
rcr
mov
mov
das
insb
inc
jg
xchg
or
daa
nop
xchg
xchg
push
scas
lea
iret
jbe
mov
sarl
mov
fisttpl
adc
mov
shl
dec
je
aaa
push
inc
imul
jo
pop
insl
mov
or
mov
cmp
mov
pusha
or
shl
shrb
cld
add
add
mov
jno
aam
mov
lret
cmp
cld
mov
insb
xchg
xor
out
xchg
call
enter
loopne
and
rcr
push
test
xchg
push
test
mov
in
das
repz
stc
mov
inc
inc
push
jns
pop
adc
mov
sbb
push
jg
call
mov
adc
inc
jb
leave
popf
rcrb
jno
xchg
data16
repnz
in
or
jne
lcall
shll
xchg
push
cmpsb
mov
fsub
mov
sub
fistpl
xor
cmp
popf
jns
inc
inc
push
mov
adc
jnp
add
mov
mov
or
inc
add
dec
push
leave
lcall
and
or
sbb
jmp
aam
mov
push
into
mov
ljmp
mov
sbb
shl
dec
inc
pop
pavgb
iret
adc
dec
movsl
clc
loop
sar
adc
jnp
aaa
repnz
inc
mov
cmp
pop
inc
stos
xor
mov
jnp
mov
push
adc
sbb
push
xorb
cmp
loope
mov
sbb
mov
and
mov
mov
popa
popf
lret
aaa
mov
pop
fistps
xor
fldenv
pop
and
sub
mov
ss
repz
outsb
push
pop
fisttps
fistl
xor
adc
mov
cmp
stos
mov
sahf
negl
test
imul
jno
test
into
sbb
test
into
fnstsw
sub
xchg
test
adc
inc
push
aam
loope
in
repnz
xor
aad
add
push
sbb
sbb
iret
jmp
cmc
add
xchg
sarl
jns
cli
cmp
inc
outsb
and
mov
fisttps
iret
add
adc
shr
fcmovnbe
inc
pop
or
xchg
adc
xchg
mov
push
dec
stos
cmpsl
scas
and
pop
xor
sub
mov
lcall
push
push
mov
pushf
jb
sbb
mov
loope
sarb
mov
movsl
cwtl
ljmp
lock
add
test
pop
xor
stos
lea
push
cli
add
repnz
xor
pop
mov
mov
xchg
jle
push
sbb
dec
cs
pop
ja
lcall
enter
insb
pop
cli
enter
or
cld
fst
lret
movsb
cmpsl
decl
mov
test
sbb
movsb
dec
arpl
cltd
push
loopne
xchg
mov
lea
lds
call
aad
fdiv
pop
add
xchg
mov
clc
in
add
jle
es
add
sub
mov
daa
xor
outsl
jo
jp
jecxz
mov
je
stc
cltd
lods
sbb
and
test
xor
les
sub
scas
mov
xchg
mov
xlat
push
sub
nop
mov
or
aad
pop
push
jge
jae
sub
inc
popa
imul
mov
xchg
pop
movsl
mov
push
sub
push
lds
lods
mov
scas
fldenv
xchg
cmc
aas
and
push
push
imul
mov
xchg
jo
adc
aad
movsl
mov
inc
fisttpll
mov
fisttps
add
sti
or
push
add
cmp
push
in
xor
leave
xorb
js
xlat
repnz
iret
jnp
aaa
nop
int3
sub
out
push
mov
fistpl
pop
xlat
insl
jmp
push
in
push
xor
jmp
jmp
inc
and
sbb
mov
mov
xor
cld
ret
ljmp
repz
faddl
in
xor
mov
outsl
push
sub
xchg
loopne
cmpsb
cmpsl
or
enter
xor
fwait
push
out
addl
mov
xchg
daa
loop
mov
xor
xchg
cltd
shr
or
xchg
lock
pop
divb
pushf
add
movsl
push
add
push
mov
loopne
test
arpl
das
xor
mov
outsb
stos
addr16
push
movsl
jle
fnstenv
push
and
or
test
cmpsl
decl
adc
jg
enter
dec
dec
sub
adc
outsb
inc
mov
mov
aas
shl
inc
orl
xchg
inc
sub
pop
lock
jns
xchg
sbb
cmpsl
inc
sti
xor
hlt
dec
aaa
scas
loope
jl
push
or
mov
je
xchg
inc
sbb
jnp
dec
push
test
pop
or
int3
insb
test
fsubrs
sbb
push
mov
mov
jne
ds
push
inc
call
lret
jns
rcrb
xchg
jle
xchg
sub
dec
inc
push
add
data16
and
stc
xchg
hlt
std
rclb
cltd
or
cwtl
push
in
cmpsl
shrb
stc
jl
jp
mov
leave
fldt
cltd
sar
movsb
outsb
inc
adc
or
add
push
inc
mov
or
xlat
jb
ret
and
pop
faddl
sub
imul
cmp
fmuls
push
xlat
push
push
jcxz
dec
imull
out
mov
lock
xchg
js
aad
pop
or
add
mov
pop
addr16
mov
ss
mov
add
aad
mov
fdivs
jb
mov
inc
cmp
dec
sahf
inc
out
lcall
pop
cli
insl
es
ljmp
fsubs
inc
data16
mov
or
clc
nop
es
mov
mov
cli
xor
scas
jecxz
push
xor
stos
sti
xchg
int3
xchg
nop
mov
push
test
and
cmp
cmpsb
das
adc
outsb
mov
aas
fsubrs
mov
and
ljmp
aam
xchg
add
jg
testb
xchg
rcll
jmp
ss
dec
sbb
push
xor
call
cld
push
and
mov
adc
mov
loopne
ljmp
lahf
push
cld
frstor
fldcw
push
out
or
mov
adc
pop
in
lock
fstpl
push
out
arpl
dec
int
push
dec
push
les
sbb
push
mov
xor
xor
xchg
pop
shlb
pop
jmp
cmc
mov
nop
inc
fprem1
out
dec
push
and
das
mov
mov
xchg
lods
pop
fdivrp
and
inc
or
test
fists
rsqrtps
popa
pushf
adc
out
xchg
pop
jbe
insb
lahf
stc
std
and
ds
mov
adc
or
das
loopne
pop
clc
shld
lret
jb
fists
add
ret
lret
or
enter
std
incb
in
scas
pop
es
inc
pop
aam
xor
xchg
dec
mov
call
inc
gs
xchg
les
mov
cmpsl
xchg
aad
aas
out
sub
pop
lret
mov
fsubl
jle
int3
movsb
pop
mov
jbe
imul
xor
xchg
cmp
sti
mov
xchg
pop
int
cmp
ret
xor
xchg
xchg
insl
mov
mul
push
ljmp
jne
add
imul
scas
js
xchg
push
pop
std
xor
mov
and
xor
xchg
scas
stos
mov
repnz
dec
mov
mov
cmpsb
xchg
mov
lret
popa
mov
sbb
mov
addb
sbb
loopne
inc
and
outsl
adc
dec
mov
in
push
das
push
xor
xchg
push
sahf
cmpb
loop
mov
fiaddl
cmp
enter
dec
mov
adcl
and
mov
test
or
mov
rcpps
push
imul
sarb
lods
cwtl
enter
jg
pop
test
shlb
sub
loop
pop
shr
sti
xor
iret
adc
out
in
and
or
inc
inc
aam
in
sub
fistl
sub
gs
xor
insl
dec
dec
mov
add
push
push
jbe
pop
dec
cld
insb
movsl
mov
cmp
cmp
jge
lea
xchg
and
js
test
cs
xchg
movsb
and
and
push
jno
pop
mov
int3
pop
pop
hlt
xchg
xchg
les
ljmp
sub
shl
stos
inc
xor
cmpsl
jnp
mov
jne
rorb
or
mov
jae
sub
hlt
fidivrl
add
mov
push
es
sub
imul
cmp
jb
les
lret
sbb
mov
dec
enter
push
pop
xchg
orl
or
inc
xchg
call
in
xor
add
jge
fwait
pop
mov
push
jb
add
pop
arpl
fisttps
clc
movsb
out
pushf
xchg
sbb
cmp
dec
or
add
test
mov
inc
sbb
std
or
mov
mov
xor
movsl
fbld
int3
fbstp
inc
lret
xchg
push
pop
ds
cld
pop
jp
sarb
adc
dec
cmp
push
add
xchg
mov
push
inc
and
gs
mov
inc
call
sbb
push
leave
jb
pop
xchg
xchg
sub
notb
push
out
sbb
sti
ljmp
push
xor
xor
rcrl
dec
mov
push
movhps
or
mov
adc
push
mov
pusha
sbb
dec
loop
inc
cmpsl
cmp
pusha
adc
sub
mov
pop
jp
lock
push
out
or
loop
push
cmc
repnz
cmp
repz
inc
mov
jecxz
mov
in
pop
sahf
outsl
dec
or
sbbb
ss
and
sahf
xor
sbbl
fnstenv
or
icebp
push
push
jbe
test
popf
push
lea
jg
cmp
into
pop
and
subl
sbb
clc
cmp
ja
les
cmp
pop
mov
cld
add
cltd
adc
inc
xor
sbb
test
aam
shrl
adc
test
scas
stos
xor
adc
mov
fcoms
aam
mov
dec
gs
jbe
push
jb
sub
outsl
mov
mov
xchg
jbe
jp
push
punpcklwd
xor
ret
repnz
sub
mov
cwtl
addr16
cmp
leave
es
adc
roll
lret
out
add
lea
jno
pop
xchg
and
inc
pop
rorl
sub
push
ret
lcall
push
and
into
js
adc
adc
mov
stos
popa
inc
mov
ret
pop
rcll
pop
or
lcall
xor
dec
xorb
pop
aas
push
mov
outsl
sub
mov
or
adc
add
sub
inc
scas
xchg
add
mov
insl
out
inc
cmp
or
dec
shr
fdivl
mov
sbb
jbe
mov
ret
adc
cld
ljmp
push
sbb
mov
push
nop
push
std
int
jl
mov
dec
cs
jl
push
jecxz
lods
popa
out
popf
xrelease
repnz
movsl
cmp
rcrl
and
ds
push
cmp
cmp
fs
rorl
mov
lcall
ljmp
and
xchg
adc
push
adc
dec
in
cltd
pop
jle
pop
mov
pop
or
in
mov
jne
inc
jno
aad
daa
test
scas
push
pop
mov
repz
xchg
cltd
add
xor
cltd
lock
jl
sbb
push
shrb
cmp
xor
mov
out
push
repz
fcmovnu
pushf
in
lret
pushf
jns
popa
mov
xchg
int3
push
jae
xor
and
and
fbld
ss
jle
imul
int
sbb
or
stos
push
outsb
hlt
cs
scas
shll
in
dec
pop
fucomp
fstpl
cwtl
cs
fs
mov
clc
xchg
lcall
fwait
gs
out
xor
cmp
clc
or
icebp
add
fsubl
int
jmp
sbb
jp
ljmp
lret
dec
mov
fwait
pushf
mov
or
fs
mov
ja
mov
or
inc
addr16
jno
sub
stos
push
pop
andl
xor
and
jmp
push
decb
dec
sar
jnp
nop
imul
xor
rcll
dec
dec
xchg
mov
mov
jl
xor
fnstcw
in
mov
inc
aam
data16
in
lret
push
sub
sub
mov
fs
sbb
leave
outsb
mov
mov
sub
lcall
mov
inc
inc
mov
mov
push
fimull
addl
inc
insl
cmpsb
cmpsb
shll
stc
xor
mov
enter
jno
lds
int3
popf
out
mov
pop
mov
dec
pop
repnz
fwait
aaa
movl
rcrb
sbb
inc
mov
xor
fldenv
cmp
lahf
xchg
sbb
outsl
pop
fs
sbb
mov
jae
imul
mov
pop
add
cmpsb
push
in
aas
fcoml
into
mov
dec
data16
or
gs
jecxz
inc
mov
sub
mov
mov
xor
shrl
jb
lods
adc
or
xor
or
ds
test
mov
iret
and
or
insl
insb
mov
popa
jmp
inc
push
jg
pusha
mov
or
pop
fmuls
aad
or
ljmp
jnp
sub
fdiv
aas
mov
mov
and
test
outsl
in
js
fildll
cwtl
call
pop
sbb
mov
int3
pop
std
mov
push
popa
pop
xchg
sub
out
imul
daa
test
lock
lock
inc
mov
mov
mov
mov
and
ret
test
sub
aam
pop
ja
jl
ss
ja
fcmovnb
sub
and
cwtl
aad
push
in
adc
faddp
fnstsw
mov
jne
or
cld
sar
icebp
jl
stos
cmp
movsb
cmc
push
rcr
andl
xchg
push
cmpxchg
push
fists
out
pop
mov
sub
sub
push
sub
lcall
pop
and
in
and
inc
out
add
scas
mov
cltd
dec
nop
jb
stos
mov
cmpsb
jae
push
mov
mov
and
xchg
ljmp
int
or
cmc
enter
scas
cmpl
sub
xchg
jno
add
push
out
and
sahf
cmp
pushf
cmp
sahf
add
cmp
sbb
push
out
sarb
and
sbb
int
lcall
inc
outsb
mov
mov
dec
pop
sub
or
xor
inc
inc
pusha
push
stc
pop
mov
shrl
mov
jmp
in
imul
ljmp
scas
jb
loop
jbe
adc
lds
pop
stos
cmp
add
dec
shr
loopne
sbb
mov
test
dec
push
and
inc
scas
out
vaesdec
hlt
sbb
mov
adc
mov
fcomps
push
xchg
mov
les
xor
popa
sub
fidivrl
cltd
hlt
cmp
adc
clc
jne
push
mov
stos
mov
xor
fdivr
mulb
push
adc
adc
mov
cli
xchg
xor
xchg
mov
pop
mov
lock
scas
ror
xchg
sbb
out
mov
jl
cmp
dec
es
data16
fisttpll
into
std
pop
jl
andl
lcall
loope
pop
mov
sbb
repnz
inc
loop
lds
movsl
rcrl
cs
pop
out
aad
sub
cmp
adc
cmc
cltd
mov
sub
xchg
leave
mov
xchg
xor
sbb
mov
push
inc
sub
mov
pop
sbb
or
push
daa
push
and
out
dec
mov
or
sti
push
mov
push
cmpsl
int
aaa
iret
or
push
aaa
push
mov
in
sub
sub
loope
add
cld
mov
or
jo
sbb
loopne
xchg
push
jno
dec
jle
mov
mov
fmuls
testb
pop
scas
inc
fsubrs
ss
dec
and
fmull
jno
mov
xchg
cmp
add
mov
inc
xchg
inc
out
xor
mov
or
cmp
fmull
inc
mov
or
pop
ja
aaa
mov
cmp
lret
sbb
icebp
jg
cmc
jb
mov
jae
outsb
aaa
daa
not
rclb
jb
notl
inc
pop
cs
and
outsl
imul
cwtl
shrl
dec
shl
fists
cld
mov
aam
jns
in
jnp
mov
outsb
aas
cs
inc
lds
pop
mov
popf
sahf
push
std
je
mov
ret
mov
fsubl
jecxz
adc
lods
jae
jns
add
stc
or
adc
pop
jne
fwait
cwtl
cld
mov
stos
dec
push
mov
xchg
sti
int
xchg
jmp
push
outsb
mov
subb
sub
int3
and
jnp
je
jecxz
call
inc
xor
inc
add
popf
imul
insl
push
and
push
sbb
divb
movsb
mov
sub
stc
adc
xchg
dec
mov
jno
xor
and
movsb
icebp
xchg
in
hlt
ljmp
shlb
adc
repz
dec
cmp
cmp
pop
movsl
adc
das
int3
mov
add
cmpsl
xchg
enter
in
sub
mov
icebp
int
cld
push
mov
loop
je
jnp
imul
mov
out
adc
mov
outsl
icebp
fwait
jns
fsubrp
xor
enter
out
inc
js
pop
cmc
adc
dec
lods
scas
into
mov
cwtl
or
xor
jg
xchg
ret
mov
dec
mov
out
xlat
dec
movsb
lods
addb
data16
loopne
test
cmp
push
or
push
test
out
push
aad
clc
sbb
and
bound
jge
push
loopne
dec
lea
loop
mov
sti
lods
inc
sub
mov
gs
imul
push
mov
fidivl
mov
lcall
int3
dec
std
sbb
idivb
jo
cltd
daa
dec
je
cmp
sub
fidivl
add
cltd
jb
in
xorb
repnz
and
pop
wbinvd
mov
xchg
shlb
fwait
mov
nop
sub
lds
fsubs
sbb
lods
xchg
mov
out
mull
dec
inc
mov
add
mov
or
push
jmp
pop
cld
out
xor
fcmovu
push
stos
jns
loop
mov
add
mov
das
mov
into
mov
in
xchg
sbb
jmp
push
outsl
int
lret
sbb
stc
enter
lock
pop
ss
inc
cltd
lock
imul
scas
xchg
aas
sub
add
icebp
mov
scas
adc
mov
js
dec
push
jb
jns
pop
jp
or
or
pop
aam
inc
sub
lahf
xor
mov
mov
pushf
pop
aad
push
outsb
icebp
in
cmpsl
jmp
idiv
out
push
es
or
lods
cmc
mov
test
cmp
xchg
pop
lds
push
imulb
mov
daa
cmp
loop
sub
mov
test
xchg
aad
std
imul
adc
ret
sbb
jbe
jle
xchg
adc
dec
idivl
mov
mov
gs
std
jge
fwait
imul
insb
repz
pop
xor
insb
xchg
lret
leave
data16
imul
pop
add
sub
mov
ja
mov
or
cmp
xchg
xor
push
sub
orb
lahf
and
pop
aam
in
sahf
lods
stos
fwait
imul
loopne
add
sbb
subb
fcompl
aam
sbb
inc
pop
int3
jno
jmp
xchg
ja
ja
pop
or
ret
aas
push
arpl
xchg
addb
sbb
add
jmp
loope
pop
imul
jp
push
dec
jp
imul
fstpl
test
stos
sahf
mov
movsl
addb
movsl
or
outsl
xor
std
mov
iret
ds
sub
orb
add
cltd
inc
jo
call
iret
inc
pop
cld
sbb
sub
mov
push
inc
add
xchg
or
jnp
and
inc
adc
imul
inc
sub
ds
fwait
imul
inc
fucomp
clc
sbb
dec
fldl
pushl
aas
xchg
mov
stos
mov
lahf
inc
xchg
and
std
ret
mov
pop
lahf
movsl
pop
repnz
push
test
cmpsb
int
iret
insl
js
ficomps
push
daa
rolb
inc
cmp
fildl
pusha
push
jo
mov
lds
out
movsl
pop
jp
jl
jge
mov
mov
or
int
inc
push
sarb
mov
push
xchg
jne
adc
cmp
cmp
out
pop
and
iret
std
and
scas
jmp
or
es
and
bound
ljmp
inc
sbb
ss
aaa
loop
inc
dec
cwtl
push
push
sbb
pop
in
inc
pop
ljmp
jb
jbe
ret
adc
inc
in
pop
push
addb
test
jo
cmp
xor
xor
iret
imul
test
pop
js
movsb
test
lret
xchg
xor
aad
pop
mov
mov
outsb
jno
adc
jle
fistl
dec
repz
clc
push
js
mov
cmp
inc
aam
xor
push
add
fisubl
stos
cmp
rcrb
sahf
mov
and
cmpsb
dec
in
xor
and
cmpsb
lret
test
ss
nop
inc
sub
and
sub
sarb
movl
sbb
cmp
call
imul
sahf
inc
orl
lret
mov
xchg
push
pop
mov
mov
out
dec
xchg
xchg
sbb
mov
mov
std
mov
dec
push
sti
sub
mov
fsts
add
aaa
rorl
pop
rol
insb
lret
scas
inc
leave
cli
stc
inc
push
in
push
ret
pop
lods
dec
lahf
fwait
push
push
cmp
sub
lods
mov
xlat
cld
jne
in
nop
into
data16
cmpsl
push
call
test
jne
push
dec
dec
gs
xor
xchg
loope
push
cmp
into
loop
mov
mov
in
mov
pop
pusha
pop
add
pushf
lret
in
push
fildll
rclb
or
pop
mov
xor
loopne
mov
iret
add
cmp
or
mov
les
loopne
clc
lret
out
sub
ffreep
stos
in
add
test
hlt
cmp
mov
xor
fisttps
jnp
aad
inc
arpl
fdivrs
scas
sbb
jle
sbb
sbb
sbb
jmp
gs
and
andb
stos
sbb
test
mov
fdivrl
mov
pop
mov
cld
out
cltd
scas
mov
out
outsb
dec
divb
jl
into
repnz
ljmp
add
loopne
imul
imul
mov
addr16
or
ds
pop
adc
andl
jecxz
inc
push
int
outsl
xchg
insb
popa
fcomps
xchg
push
lock
fldt
jne
movsb
inc
scas
jns
sbb
pop
xchg
popf
pop
es
add
shlb
aaa
lcall
je
jmp
adc
insl
fmull
jp
sub
mov
adc
cmp
es
push
nop
dec
fs
cmpsl
inc
pop
shll
pop
cltd
outsb
mov
jmp
data16
stos
mov
mov
inc
cmpsb
les
daa
xchg
pop
add
and
shl
pop
sbb
mov
lret
add
add
push
inc
adc
pop
call
mov
sbb
mov
xchg
daa
push
negb
adc
add
mov
and
mov
sbb
call
xchg
jle
dec
add
std
cmp
mov
sbb
push
xor
pop
ljmp
push
arpl
xor
jno
cwtl
scas
mov
cmpsl
xchg
scas
push
cmp
cmpsb
adc
mov
pop
out
fwait
jmp
mov
testl
fcmovnb
out
add
fisttpl
outsl
fdivl
loope
pop
aad
pusha
rorb
cld
testl
fildl
int
pop
out
mov
cmp
rcll
out
repz
mov
loopne
push
push
ror
mov
pop
lock
jbe
out
cmp
xlat
imul
dec
xor
outsl
fidivrl
or
stos
xor
pop
mov
in
enter
out
dec
call
sti
stos
mov
in
stos
imul
xor
jge
iret
and
test
add
imul
jo
pushf
lahf
sub
or
adc
pop
int
sub
loopne
mov
sahf
repnz
sub
add
inc
ss
jl
xor
out
pop
xchg
jp
mov
push
jo,pn
pop
inc
clc
subb
cwtl
dec
cmpsb
fdivrs
sub
mov
xchg
mov
and
mov
arpl
add
mov
into
xchg
jmp
add
jnp
xchg
xlat
jae
les
sbb
pusha
push
cmp
sub
bound
pop
adc
mov
shl
mov
jg
rorl
out
sub
pop
ljmp
hlt
notb
cmp
jo
int
sbb
and
pop
pop
cld
pop
and
pop
out
cltd
enter
sub
inc
sti
rcl
dec
push
mov
das
mov
in
pushf
inc
fdivrl
inc
sahf
sbb
and
xchg
ja
lock
dec
inc
hlt
push
mov
inc
sbb
inc
mov
rorl
push
lds
xor
repnz
aam
repnz
in
das
enter
mov
inc
inc
xchg
rorl
mov
mov
push
jmp
cli
inc
mov
add
daa
sahf
outsl
pop
in
ret
mov
ds
stos
pop
sbb
xchg
push
mov
jp
jns
or
call
insb
sub
xchg
add
pop
adc
lods
shr
ret
add
mov
dec
mov
cmp
outsl
out
sub
cld
test
dec
in
ds
movsb
iret
dec
inc
aad
sahf
ret
cli
dec
and
popf
ficompl
push
xchg
push
cli
sub
cld
xor
data16
popa
and
add
ja
mov
nop
xchg
xchg
adc
pusha
mov
and
in
test
shll
or
loopne
mov
sbb
inc
popa
mov
addl
xor
adc
push
call
into
sub
dec
call
jns
mov
xchg
lcall
aaa
dec
fdivl
stos
push
or
xchg
ret
mov
out
repnz
cld
lcall
or
pop
pop
and
subl
mov
mov
mov
lock
insb
fisttpl
fdivs
lods
sub
aad
jmp
mov
sar
aaa
xor
sub
leave
mov
jnp
loopne
cwtl
push
or
cmp
mov
jbe
scas
clc
call
dec
mov
scas
jb
cld
test
inc
adc
sub
movsl
dec
cmc
inc
movsl
lea
cltd
add
cltd
add
adc
imul
outsb
sarl
ss
push
js
jnp
jge
addr16
icebp
mov
pusha
ds
xchg
dec
out
or
sub
jb
mov
and
sub
fstpt
mov
cmpsb
or
ret
pushf
fidivrs
mov
pushf
incl
or
fadds
pop
push
test
imul
in
pop
push
sbb
mul
jb
dec
int3
jge
push
pop
pop
push
sub
jg
mov
jmp
and
imul
fmuls
fisubrl
mov
fisubrs
pop
cmp
xchg
xchg
arpl
dec
and
mov
int3
cli
or
xchg
dec
adc
jp
mov
in
adc
in
fmull
repz
imul
test
dec
test
push
test
dec
scas
ficomps
xor
repz
aad
mov
push
pop
jbe
ret
in
arpl
lock
out
stos
test
pushl
mov
pop
pop
mov
loop
mov
aas
push
push
jbe
cmp
sbb
stc
insb
mov
cmp
sbb
and
jno
add
nop
push
outsl
sbb
stos
pop
fdivl
int3
loopne
mov
outsb
mov
pop
pop
and
and
sub
pop
scas
inc
xor
gs
mov
xchg
lea
mov
and
xor
sbb
cmpsb
fcmovnu
push
in
add
mov
pop
aam
cmp
cmpsb
mov
sub
sti
push
pop
daa
jo
mov
mov
sahf
xor
stos
andl
int3
pop
and
gs
rcr
or
mov
pop
xor
sbb
mov
shlb
inc
inc
sbb
popf
icebp
std
sub
loop
jne
dec
adc
push
xor
je
cltd
jg
xor
xor
cmovns
adc
add
adc
iret
scas
int
pushf
cmc
or
mov
dec
xor
mov
into
add
mov
out
pop
lret
aaa
adc
adcl
mov
es
pop
sbb
out
test
pop
nop
fimull
pop
jns
dec
sub
ss
popf
in
push
push
filds
out
and
mov
jno
in
xchg
dec
dec
sub
inc
and
in
adc
call
mov
and
xlat
add
iret
into
divl
and
sbb
pop
adc
rcrl
mov
cmpsl
adc
insb
shlb
pop
test
cmpsl
mov
adc
push
aam
inc
xor
sbb
fldt
nop
push
push
adc
dec
ret
or
mov
mov
inc
xor
dec
xchg
xchg
xor
notb
cmp
fstpt
int3
fcomps
ss
test
cs
jnp
enter
rcrl
mov
or
enter
nop
mov
pop
iret
dec
push
sahf
cmp
mov
push
in
data16
inc
sbb
cli
jo
fwait
sub
cmc
cmpsb
insb
cmp
popa
jl
xchg
gs
out
loope
loopne
xlat
add
std
jnp
jbe
sub
scas
sbb
mov
lods
sti
inc
aaa
mov
jg
mov
and
xlat
ja
sbb
cmc
movb
lcall
add
cmp
lods
addr16
and
mov
push
in
lahf
jns
insb
mov
test
orl
out
lret
mov
loopne
pop
aaa
push
dec
sbb
negl
pop
inc
mov
movsb
popa
clc
xchg
xchg
lea
sbb
mov
mov
pminub
das
loop
pop
jp
inc
and
xchg
mov
mov
xor
cmp
daa
insl
pop
pop
xor
push
adc
aas
jb
mov
lods
imul
roll
pop
iret
cld
inc
and
test
cmpsb
dec
int3
in
sbb
test
data16
or
mov
movsb
sbb
hlt
push
mov
movsl
and
jb
cmpsl
int3
pop
sbb
stos
xor
stos
in
pop
cltd
or
mov
mov
lods
xchg
scas
add
jg
or
pop
jp
divb
mov
mov
jbe
gs
push
pushf
cwtl
mov
lock
pop
icebp
or
lods
repz
and
hlt
and
cmc
faddl
addr16
ret
sbb
push
push
repnz
daa
inc
movsl
mov
xor
imulb
pop
mov
sub
scas
jae
add
xchg
les
pop
add
adc
stc
mov
scas
out
rorl
fwait
push
jge
cmp
cmc
insl
dec
jbe
push
sbb
pop
fldt
jge
cmp
movsb
push
sub
xlat
fbld
jo
aaa
dec
ljmp
out
sbb
sbb
or
jae
sbb
xor
dec
jge
js
aad
icebp
inc
imul
and
mov
ss
inc
cmc
xchg
dec
adc
sbb
mov
jb
popf
push
aam
dec
fdivrl
add
inc
xchg
adc
dec
mov
cld
mov
outsb
gs
dec
nop
inc
movnti
push
cmp
add
in
insb
stc
push
sti
add
loopne
imul
cmp
bound
aas
pop
or
in
iret
imul
jecxz
mov
mov
inc
adc
mov
xchg
sbb
xchg
js
xchg
mov
outsb
or
xor
xchg
jns
jp
mov
icebp
decl
clc
cmp
pusha
mov
test
adc
jbe
mov
mov
sbb
mov
daa
sub
testb
and
outsb
sub
aad
cld
jne
mov
push
lahf
insb
sub
repnz
pop
mov
mov
fimuls
push
icebp
xlat
cmc
je
icebp
cltd
test
cwtl
mov
xor
dec
stos
insb
push
adc
jb
and
aad
call
sarb
out
inc
push
fs
jnp
or
xchg
lods
test
add
or
mov
pop
lret
push
xor
adc
sub
cli
pop
lods
inc
dec
out
pop
int3
int3
pop
call
xchg
mov
andl
sub
inc
and
outsl
inc
or
sub
rcll
repnz
push
add
loopne
jmp
inc
jb
es
sub
addr16
mov
nop
enter
das
sbb
push
sbb
arpl
ret
dec
sub
inc
xchg
pop
xchg
mov
in
or
int3
sub
jmp
fcmovu
mov
push
mov
bnd
push
jo
jne
cmp
mov
pop
ret
mov
stos
inc
jp
out
in
out
rolb
arpl
adc
mov
mov
pop
sub
xchg
sbb
mov
cmp
ret
jge
sbb
mov
insb
or
leave
into
xchg
mov
stc
xor
popf
jne
aaa
or
add
sub
jmp
decb
xor
mulb
push
testb
loop
out
lods
jno
sbb
jg
subl
notb
aad
and
cmp
mov
inc
xchg
loopne
clc
sbb
sbb
std
jl
cmp
adc
out
movsl
push
lds
fldl
mov
ss
lcall
add
out
jae
sub
xor
xor
pmaxsw
cs
pop
repnz
aam
add
and
scas
push
mov
add
ds
pop
bswap
sub
push
dec
pusha
out
and
int3
sahf
sbb
xchg
scas
xchg
leave
inc
outsb
and
mov
push
push
xor
jg
pop
push
push
clc
push
adc
jle
lcall
cld
mov
push
out
mov
je
movsb
std
lods
inc
rclb
jp
sahf
adc
int3
rcrb
cmp
les
ja
jg
jp
xor
jb
out
pop
xchg
lods
pusha
inc
dec
outsb
in
fsubl
rcll
push
dec
and
sub
or
and
jnp
cli
mov
repnz
push
test
push
inc
push
cltd
arpl
ret
xlat
mov
push
push
mov
insl
push
cs
sub
out
push
inc
jno
pop
cmp
test
nop
inc
jle
mov
dec
fwait
xchg
inc
icebp
xchg
mov
sub
xor
cmp
add
andb
rorl
shlb
xchg
xchg
in
xchg
mov
adc
push
in
mov
sbb
lds
lret
stos
das
rcl
loopne
loop
pop
je
pushf
pushf
jo
sub
aam
outsl
in
test
ret
jg
stc
scas
repnz
test
outsb
rclb
rcrb
jo
dec
sti
xor
aaa
xchg
inc
std
pop
stc
lret
adc
shlb
sub
push
jnp
out
mov
jne
nop
and
clc
popf
loop
js
xor
jno
inc
mov
dec
leave
data16
adc
push
push
das
jns
or
push
hlt
add
out
mov
das
in
dec
int3
adc
and
add
fwait
insb
rol
es
fwait
cmp
inc
mov
and
add
hlt
ja
cmp
xchg
mov
inc
push
notl
lock
push
adc
loope
and
cmp
push
mov
dec
and
mov
mov
mov
jp
loopne
dec
pop
sub
daa
mov
push
mov
sub
mov
nop
lock
les
inc
inc
sbb
repz
pusha
test
rcl
xchg
stc
pop
push
dec
dec
push
mov
sbb
mov
in
test
cltd
xchg
lret
mov
push
call
dec
add
sub
jb
decl
sub
aaa
jg
gs
pusha
icebp
push
int
test
jb
roll
or
pop
or
or
add
arpl
ret
pop
cmc
fstpt
pushf
fsubrl
test
xchg
ret
nop
mov
push
jmp
xchg
mov
cmp
xchg
cld
cli
outsl
adc
ss
movsb
jecxz
pop
addb
sub
jp
sub
aad
sti
inc
insb
mov
sbb
mov
jl
xchg
mov
sub
clc
push
out
pop
repz
cmc
ficoms
xor
lret
fs
roll
xchg
mov
pusha
pop
insb
pop
popf
int
cmpsl
mov
xchg
xchg
adc
jl
rcll
aam
push
out
sar
popa
sbbb
sbbl
adc
ret
dec
iret
jp
lahf
cmc
sbb
push
ljmp
insb
push
aad
mov
outsl
xchg
sub
imul
lods
ja
fs
and
loop
ss
adc
nop
pop
pop
out
cmp
push
inc
sub
fistpll
sub
jb
push
cld
mov
lahf
jns
pop
and
fildl
xchg
clc
dec
ljmp
mov
cmp
loope
push
sub
adc
mov
mov
not
pop
hlt
into
dec
sbb
aad
pushw
xor
das
inc
nop
std
pslld
jge
push
mov
sub
push
jl
xlat
jns
inc
add
sbb
pop
lea
mov
sbb
jle
fsubs
stos
push
cltd
cmp
notb
cmp
loopne
sub
jns
jne
inc
sub
mov
jne
icebp
dec
loopne
push
mov
cmp
insb
jle
dec
mov
cmpsl
sub
or
aaa
ss
xchg
push
jnp
repz
add
out
test
in
sub
xchg
inc
arpl
add
inc
cltd
addl
and
add
mov
and
gs
loop
lret
rcll
imul
push
pop
repnz
pop
pop
jnp
pop
imul
dec
xor
scas
cwtl
xor
and
xchg
out
addr16
sti
leave
jne
outsl
mov
imul
insl
std
test
mov
imul
outsb
mov
cmp
add
addl
rolb
xchg
mov
icebp
daa
push
lock
jnp
cmp
pop
sahf
adc
lds
push
xchg
mov
lea
add
mov
inc
dec
incl
arpl
push
testl
add
pop
in
std
mov
lods
out
lock
je
mov
pop
fildl
outsb
pop
fisttpll
out
in
shrl
mov
out
pop
inc
lds
xor
mov
pusha
loop
repz
lcall
inc
sub
pop
in
or
pushf
cmp
aaa
fs
mov
ja
or
fadds
fcoml
xchg
mov
adc
push
js
dec
and
ds
mov
das
and
mov
clc
ds
mov
sbb
ja
pop
lret
aaa
add
mov
sti
cwtl
adc
mulb
xchg
dec
inc
jle
ds
lds
int3
lret
bound
jno
jp
scas
out
stos
sbb
and
idivb
jle
dec
jle
mov
dec
outsl
int3
sbb
sbb
shl
xchg
adc
mov
cmp
out
ss
in
xchg
in
inc
push
mov
or
int3
or
imul
call
addr16
pusha
inc
xchg
orl
ljmp
mov
jle
jecxz
dec
int3
in
addr16
xchg
lahf
xor
add
cld
in
cmpb
shlb
insb
dec
sarb
ret
fists
ljmp
out
add
loop
push
int
push
pusha
jnp
cltd
enter
fwait
adc
mov
cmp
or
and
cmp
xchg
fmull
jmp
xchg
mov
lock
fimuls
or
jns
xor
push
imul
cmpsb
inc
leave
ret
mov
inc
jnp
inc
and
adc
inc
ja
lods
mov
sbb
pop
clc
cmp
sub
sub
push
xor
and
inc
mov
data16
jb
fwait
int
cmp
inc
xchg
fsts
mov
jmp
fsubrl
push
andb
mov
mov
fcomps
push
pop
push
inc
and
cmpsb
daa
dec
aaa
mov
repnz
mov
or
daa
inc
mov
mov
sarl
jne
push
sbb
fcoml
and
push
aam
ror
rclb
sbb
fcomip
or
int3
and
insb
movb
repnz
mov
repnz
adc
pusha
cltd
insl
fistl
cmpsb
clc
jecxz
mov
movsl
outsl
mov
jo
inc
and
ljmp
pop
sub
cwtl
es
cmp
jecxz
push
adc
rolb
cmp
stos
jae
pusha
lock
pop
pop
fdivl
repnz
addr16
jl
pop
cld
icebp
addr16
arpl
lods
cmpl
stc
xor
nop
scas
or
push
or
xor
hlt
lret
js
jbe
cmpsl
popa
je
cmp
and
sti
popa
push
inc
ret
xor
push
dec
adc
jge
push
loope
jecxz
lret
imul
sbb
jae
nop
inc
jp
sbb
xchg
add
mov
sub
mov
into
stos
dec
bound
outsl
push
out
int
je
mov
out
lds
and
mov
cltd
mov
push
out
add
adc
push
adc
andl
mov
mov
aaa
and
xor
pusha
push
add
push
imul
jno
adc
pop
mov
ljmp
int
mov
pop
stos
cmpsb
addl
mov
cltd
fwait
mov
rolb
mov
xor
jmp
inc
insl
mov
xchg
inc
mov
lahf
loopne
mov
out
popl
mov
jmp
les
dec
inc
cwtl
lahf
mov
push
mov
cmc
aad
mov
push
dec
scas
lea
enter
jne
movsb
jg
or
pop
cmp
push
lods
aad
xor
adc
mov
mov
das
xor
push
add
xor
je
jne
shlb
jnp
jbe
xor
or
add
mov
in
test
push
pop
mov
leave
fisttpl
aam
mov
vmptrld
or
js
xchg
cmp
pop
mov
pop
or
stos
inc
push
sarl
adc
and
mov
xor
lahf
out
pop
cltd
ljmp
ljmp
pusha
and
mov
mov
fbstp
cmp
aad
dec
sbb
cmpsb
xor
ds
ss
jne
inc
mov
daa
pop
popa
cmp
inc
push
hlt
mov
push
cld
filds
mov
sbb
out
xchg
repnz
xchg
xchg
imul
insl
add
aas
cld
push
sub
ret
repnz
add
push
jle
push
mov
lock
outsb
and
andb
cwtl
out
inc
ret
cmpsb
pop
or
ds
mov
in
fstps
adc
inc
jecxz
insb
jp
sarb
adc
mov
cmp
movsl
stos
add
arpl
xor
or
and
sti
cmp
jecxz
xor
xlat
test
leave
xor
imul
adcl
fsubrl
cwtl
into
mov
sub
dec
jg
out
inc
ja
mov
pusha
mov
loop
xchg
or
xor
cmpsl
aad
xor
lcall
jge
icebp
and
rorl
jmp
lret
pop
mov
mulb
xor
movsb
mov
jg
sbb
fwait
ljmp
pushl
cmpsb
jge
mov
sbb
add
loop
mov
shll
push
es
pop
ret
add
mov
pop
xchg
sbb
and
out
imul
mov
xchg
pushf
inc
mov
imul
sub
push
lret
push
mov
jb
dec
lret
push
pop
sub
shrl
push
js
fisttpll
mov
mov
jb
push
das
shlb
sub
inc
dec
outsb
int3
cltd
add
mov
fmulp
dec
repz
xor
stos
cltd
mov
sbb
xorl
xor
roll
dec
fmull
into
xchg
xor
dec
inc
push
xchg
subb
loope
cli
out
mov
fildl
cmpsb
fists
push
and
out
jl
jmp
cmp
push
repz
lock
lret
lds
push
jg
imul
mov
in
adc
notl
jmp
sub
mov
cwtl
push
in
leave
push
mov
popf
je
jl
daa
mov
pop
or
dec
jbe
xlat
mov
cmp
je
in
das
jle
push
jns
mov
adc
jbe
xchg
pop
lock
push
mov
ffreep
cmpsb
cli
lods
mov
sub
std
xchg
outsl
loopne
lods
inc
je
pop
push
popf
dec
xor
test
fstp
cmc
inc
aas
ficoml
ljmp
cmp
clc
out
nop
es
jmp
mov
lea
stos
cmc
mov
mov
insl
cmp
popf
iret
adc
es
adc
pushf
call
inc
test
ficompl
dec
xchg
mov
jge
or
jge
pop
xor
sbb
out
imul
inc
movsb
js
or
jmp
dec
sub
xchg
push
mov
push
loop
and
push
fistl
adc
xor
and
mov
push
imul
xor
mov
dec
mov
cmp
out
jg
sub
mov
ss
pop
sub
stos
xor
xor
addb
jmp
mov
pop
dec
aad
adc
mov
cmp
pop
divb
insl
ljmp
inc
push
jae
insb
cli
call
mov
stc
sbb
mov
arpl
cmp
mov
rcr
and
rorl
out
das
or
int3
test
mov
sbb
push
jmp
loop
or
sbb
iret
out
cmp
fstpt
sarb
je
mov
inc
loop
daa
jns
loop
push
stos
adc
sbb
lock
mov
push
iret
push
add
add
or
or
or
pandn
ss
sub
mov
pushf
aaa
sub
mov
mov
int
repnz
adc
sbb
scas
fcompl
test
rol
clc
xchg
adc
mov
lock
pop
mov
mov
mov
push
sahf
sti
enter
mov
dec
fdiv
ret
cmp
bound
or
out
iret
xlat
stc
pop
shll
push
clc
xchg
xchg
in
xchg
es
jnp
cmp
pop
ret
or
mov
mov
aas
mov
lret
push
lock
adc
add
imul
sub
psubq
cli
fidivrs
add
add
xchg
mov
push
cmpsl
inc
push
mov
imul
mov
sub
aam
xor
add
jnp
sbb
dec
dec
dec
scas
add
daa
jge
mov
leave
mov
mov
lret
popa
adc
aaa
inc
js
jae
shl
cmp
add
ds
lret
scas
push
and
or
xchg
push
mov
inc
arpl
stos
mov
jae
cltd
sbb
push
pop
mov
jmp
loope
ljmp
jge
pushf
pusha
add
loop
int
pop
repnz
adc
gs
pop
pop
repz
mov
arpl
shr
mov
dec
xor
int3
lret
inc
add
das
int
mov
sbb
mov
jnp
mov
movsb
hlt
pop
cwtl
dec
dec
es
bound
xlat
or
popl
arpl
cli
xchg
pusha
sahf
push
xchg
and
fcmovnb
in
leave
arpl
inc
or
or
sbb
xchg
sub
outsl
rcrl
adc
and
mov
xchg
int
xor
and
lods
push
je
jne
repz
xchg
mov
pop
dec
adc
jmp
jg
test
in
sub
cwtl
jbe
sbb
push
cltd
movsl
mov
cld
js
jg
pop
pop
imull
or
sub
movsl
pop
or
adc
cmp
sbb
mov
cmpsl
enter
insl
and
stos
mov
or
pop
fiaddl
popa
cld
cmp
or
push
cmp
cmp
jp
shll
jne
mov
movq
nop
popf
jo
push
xor
mov
cli
xchg
gs
scas
lods
pop
in
fcoml
sub
push
nop
xor
push
push
lds
dec
adc
cmp
enter
mov
sbb
push
fnsave
push
enter
movsl
outsb
mov
fcmovnbe
mov
push
push
insb
out
mov
and
mov
aad
hlt
mov
repnz
mov
push
rclb
xchg
jnp
add
lcall
lcall
add
insb
ret
sbb
fsubl
add
scas
mov
in
or
test
daa
cwtl
add
ror
dec
pop
sub
push
mov
jae
jmp
dec
clc
cmp
xor
cmp
mov
sub
sbb
pop
lods
leave
pop
int
add
adc
xchg
enter
rorl
imul
sbb
jp
pop
nop
jmp
dec
fimuls
pmulhuw
add
sub
adc
pop
ss
mov
pop
andb
push
cs
outsl
jl
lcall
adc
call
aam
cmp
hlt
add
inc
pop
adc
jae
mov
mov
mov
mov
and
inc
sahf
push
test
je
add
or
stos
cwtl
lcall
mov
arpl
call
negl
in
mov
movsb
lea
pop
and
mov
mov
mov
aaa
mov
jmp
test
mov
pop
arpl
mov
dec
adc
add
adc
int3
addr16
jle
out
ja
icebp
push
xchg
mov
negb
shll
cmp
inc
mov
cltd
sbb
cmp
cmpb
mov
xchg
xlat
jno
je
jns
into
mov
push
sbb
divl
fisubrs
arpl
pop
sub
cli
icebp
fdiv
pop
sbb
rep
mov
testl
and
push
xchg
imul
push
inc
lahf
aaa
jle
pop
push
out
out
sub
repz
gs
jge
daa
push
inc
cmp
addl
bound
jl
imul
pop
mov
xorl
cmpsb
orl
inc
les
sub
inc
push
sti
cmp
ret
and
or
arpl
rorl
cld
in
fistpl
add
in
mov
push
fistps
pop
pop
or
fistps
stc
movsl
adc
lcall
ficomps
xor
adc
incl
xchg
stos
adc
mov
ret
movsb
dec
push
imul
add
rcrl
mov
cmp
subb
shlb
mov
rorb
les
nop
fs
push
adc
dec
or
das
mov
mov
sub
mov
inc
ds
add
xchg
adc
rcll
in
mov
pushf
lahf
mov
orl
call
jl
test
pcmpgtw
mov
pop
andl
imul
mov
mov
je
into
dec
inc
mov
ret
or
pop
jp
shlb
mov
mov
jns
or
jp
and
mov
mov
xlat
scas
xchg
shll
push
xor
jmp
adc
mov
inc
lret
rolb
push
xor
out
push
pop
fdivrl
add
fwait
xchg
pop
sbb
and
fldt
pop
xor
or
sub
imul
mov
inc
jl
pop
cmp
sahf
shll
hlt
xchg
dec
rol
and
inc
jb
fidivrl
push
leave
sbb
movsl
aam
cld
jbe
repnz
push
or
and
or
test
push
shl
jecxz
outsb
or
sahf
xor
test
lock
mov
jle
hlt
xor
lret
dec
movsb
mov
mov
movsl
sbb
sub
mov
test
push
out
inc
lahf
adc
dec
dec
pop
xor
push
clc
ret
je
push
dec
fisubs
shlb
dec
pop
js
mov
jb
in
movsl
and
es
lret
push
mov
jb
ljmp
mov
xchg
jmp
xor
pop
ret
dec
js
sbb
cmpsl
sub
sbb
or
xor
test
sub
jg
in
sbb
inc
sub
call
sbbb
sbb
or
adc
out
cmp
push
dec
or
shll
xchg
fidivrl
dec
dec
inc
mov
push
inc
add
push
jne
shll
out
mov
not
mov
mov
dec
pop
xchg
pop
add
nop
outsb
sti
fidivs
imul
cwtl
mov
or
jno
cli
aas
loope
pop
js
test
lds
mov
jl
loop
xchg
jno
repz
mov
lods
mov
fidivrl
jo
or
aam
jbe
xchg
inc
stos
or
loopne
add
add
mov
push
xor
mov
dec
pop
iret
int3
ret
add
mov
test
mov
pop
rcll
jb
fwait
lock
cwtl
dec
xchg
ret
add
mov
dec
fadds
and
loop
iret
orl
and
or
gs
push
add
shll
mov
insb
inc
pushf
mov
fwait
shr
fldl
jle
das
add
ret
mov
push
int
rclb
out
daa
dec
pop
cld
aad
mov
xor
mov
cltd
movsb
hlt
lcall
push
call
xchg
pop
pop
outsl
jno
mov
imul
xorb
mov
mov
pop
mov
je
cmp
xchg
pusha
xchg
cs
and
dec
int
cli
and
aas
jne
mov
and
sbb
aaa
test
test
xor
jmp
inc
popa
jo
xchg
int
fidivs
jge
xor
push
mov
mov
in
mov
outsl
test
out
fsubrl
loop
xor
and
lods
lcall
test
rcl
sbbb
imul
iret
xchg
fsubs
xor
jge
add
sbb
call
mov
dec
mov
clc
add
in
jno
xchg
fiadds
arpl
inc
jne
fs
aam
fdivl
fcmovnbe
stos
lods
mov
outsb
ja
xchg
and
jecxz
out
cltd
pop
faddl
in
bound
jge
pop
mov
dec
mov
push
jle
push
lea
lret
aam
pop
adc
sarb
sahf
insl
call
xor
mov
js
test
cmp
and
jne
push
sub
cmp
jecxz
pop
push
fildl
in
and
jbe
repz
adc
ret
mov
sub
xor
or
rep
add
xor
sbb
cmpb
arpl
jle
lock
nop
add
xor
rorb
lahf
mov
mov
sbb
inc
jnp
pop
es
int
aam
out
dec
out
daa
pushf
cmp
pop
cmpsb
sub
das
movsb
cmc
clc
mov
in
stc
jo
push
adc
paddusb
sbb
xor
stos
loope,pn
or
xor
sub
sbb
outsl
pushf
inc
mov
adc
add
or
pop
popa
stos
mov
ret
divl
cmp
iret
std
pusha
lock
pop
or
adc
mov
jbe
inc
jecxz
push
add
ljmp
or
mov
sub
push
xorb
add
dec
push
jne
dec
push
mov
pop
popa
rclb
add
ss
xlat
mov
push
test
imul
test
push
ret
pop
xlat
test
xchg
pop
sub
mov
and
add
cmpsl
inc
fbld
outsb
rcll
jp
jle
or
int
jbe
mov
jge
jb
add
push
aaa
loopne
rcll
xor
decl
leave
jno
es
fcmovu
dec
xor
xor
sarl
and
popf
ret
pop
mov
xor
inc
aaa
movb
adc
cmpsb
jae
sub
call
mov
int
es
mov
jbe
stc
xrelease
xchg
imulb
imul
xchg
fsubs
lods
cmc
lcall
inc
js
fidivrl
daa
push
sahf
or
aas
jbe
pop
popf
mov
push
clc
icebp
aas
repz
imul
sub
scas
push
jge
or
sbb
mov
call
jnp
xchg
pusha
aad
push
pushf
sub
add
out
fwait
aad
adc
scas
dec
push
jmp
jne
inc
push
lret
shll
adc
fwait
adc
pop
aam
leave
xchg
lock
sub
mov
out
mov
mov
div
pop
stos
sbb
test
inc
push
loope
ss
imul
popa
sbb
gs
xchg
cmc
jnp
add
cmpsb
hlt
scas
dec
and
pand
lcall
and
dec
inc
addr16
repz
mov
fiaddl
jns
push
enter
cmp
xchg
jmp
dec
adc
fcom
push
mov
fsubl
pop
lcall
or
add
push
xchg
aas
ja
cwtl
jecxz
call
ljmp
mov
sub
add
std
xchg
dec
jmp
repnz
shll
aaa
sub
arpl
rcr
xchg
jmp
sbb
sbb
sbb
cmp
adc
mov
mov
stc
push
dec
out
pop
outsl
cmp
mov
iret
mov
pop
call
and
scas
lds
pop
dec
icebp
push
fadds
mov
clc
mov
fnsave
pop
movsb
cmpsl
fimuls
mov
into
push
in
cmp
insb
cmp
sbb
insb
ja
movsb
les
pop
push
and
outsl
mov
pop
adc
jb
movsl
mov
aam
push
xchg
inc
mov
jno
fiaddl
mov
out
or
push
pop
stos
out
pop
int
stos
das
lret
les
je
fildll
or
add
lahf
lods
ds
in
xchg
lods
jg
pusha
push
and
ficoml
test
push
call
and
and
dec
mov
inc
lock
jbe
xchg
push
sub
xor
adc
push
mov
je
sbb
jmp
pop
stos
mov
lock
add
xor
mov
aad
or
sub
add
and
dec
loop
push
inc
inc
cmp
xor
mov
imul
stc
icebp
std
sbbb
dec
imul
lret
dec
notl
jmp
cmp
jbe
test
shr
ljmp
mov
mov
or
xor
mov
je
inc
pop
cmpl
dec
and
out
mov
lea
mov
pop
mov
daa
sbb
sbb
out
scas
stc
mov
mov
in
push
faddp
out
adc
xchg
fdivrs
pop
push
adc
inc
mov
add
sar
xchg
sarl
mov
faddp
push
lods
jmp
lods
and
outsb
or
mov
jns
push
cltd
jg
cli
push
je
nop
fisubs
pop
or
xor
mov
jg
cld
aad
cmp
dec
add
add
xor
ss
popf
popa
sbb
adc
add
push
or
sahf
push
xchg
cltd
mov
xchg
lcall
outsl
push
sbb
dec
add
push
test
arpl
and
iret
inc
xor
movsl
cld
and
sub
mov
imul
or
ret
lahf
jmp
xchg
adc
xchg
movsl
mov
mov
xchg
in
adc
ret
pop
jp
iret
pop
das
jns
lahf
out
fwait
push
in
hlt
fdivrs
pop
incl
add
outsb
shlb
push
loop
mov
pop
jmp
sub
push
fisttpll
test
dec
jne
inc
inc
push
xchg
popf
fdivrs
in
mov
or
dec
int3
lcall
jge
jnp
xor
mov
sbb
lret
rcl
dec
cmp
push
dec
cmpsb
mov
ret
push
iret
cwtl
js
xchg
leave
popf
mov
xchg
xchg
mov
fstps
popf
ret
push
movsb
jge
cmp
mov
jbe
mov
pushf
mov
jae
jg
cmp
mov
pop
cmpsb
fcomp
inc
mov
add
mov
jb
bound
int
aaa
fstpt
faddl
fdivl
xchg
xor
or
lret
mov
xchg
xor
call
mov
pop
lret
sub
adc
inc
mov
push
fsts
jge
fwait
test
outsb
loope
loope
lods
inc
or
data16
stos
mov
sbb
lea
cmp
lcall
push
jo
sti
cmpl
dec
cwtl
or
jge
mov
inc
ficoms
xchg
pop
sahf
mov
xor
call
mov
pop
movsb
pop
dec
add
or
pop
cld
mov
xor
ss
ljmp
pop
sub
inc
out
jg
mov
scas
jo
mov
lea
aas
xchg
cli
and
cmpsl
inc
dec
in
inc
jle
sbb
popf
jge
mov
mov
lret
les
mov
das
push
fstps
sbb
in
adc
imul
mov
sub
insl
test
mov
orl
lods
sub
add
popa
push
mov
jno
mov
xchg
pop
adc
mov
sub
sub
inc
rcrb
push
sub
daa
sti
inc
mov
gs
lret
loope
jmp
stc
jns
push
sub
cmp
movb
into
inc
data16
lea
lcall
orb
push
push
dec
dec
xchg
nop
or
nop
xor
lret
shlb
es
sbb
loopne
loope
mov
pop
cli
adc
fisubs
pusha
or
jnp
ljmp
cmp
pop
fwait
int3
xchg
and
cmp
sbb
or
in
adc
xor
in
icebp
push
fwait
mov
xchg
out
lock
add
aaa
jl
jl
sbb
mov
push
add
add
dec
ja
test
sub
adc
outsb
enter
inc
cltd
lds
daa
test
jecxz
push
pop
in
push
addl
das
cmp
lea
loop
adc
sbb
xchg
das
sub
push
add
movsb
or
fisttps
loop
test
stos
jmp
leave
adc
cmp
movsb
ds
cltd
sub
sub
iret
hlt
push
sub
sub
push
push
imul
inc
inc
outsb
adc
xchg
jmp
jae
out
sahf
mov
lahf
int
xchg
icebp
sbb
jns
xchg
mov
sub
sahf
ljmp
fmulp
mov
add
sub
ret
fucompp
jb
push
jl
enter
inc
xor
sahf
xor
cltd
mov
xchg
and
add
xchg
lods
fwait
subb
and
mov
idiv
dec
std
xor
mov
loope
dec
dec
std
data16
pop
inc
mov
leave
push
std
sbb
into
dec
sti
add
lds
bnd
xlat
das
outsl
dec
pop
insb
xor
int
push
jl
and
ja
aas
pushf
jg
push
sub
sbb
gs
pop
inc
in
test
pusha
xor
lcall
in
out
ljmp
sub
das
xlat
mov
das
or
bound
lds
sti
or
mov
inc
sub
loope
ja
push
rcll
sbbb
call
jecxz
insl
or
repz
imul
xor
movsb
and
cld
ret
mov
movsl
adcb
rorl
jbe
lret
mov
inc
rolb
pop
lods
rorb
xor
ficoms
ljmp
fs
call
mov
out
inc
cmpsl
or
or
adc
mov
push
dec
stc
dec
fs
and
xor
out
divl
mov
dec
data16
cmp
jecxz
cmp
dec
dec
cmp
les
or
inc
test
cmovp
fcmovb
push
and
add
sbb
sbb
pop
and
leave
push
arpl
mov
mov
cmc
mov
loope
rclb
into
fsubl
push
mov
ljmp
push
mov
outsb
or
mov
add
push
mov
add
pop
fistl
iret
jnp
ss
ja
sub
outsb
jge
sbb
movsl
sarb
sub
xor
fcoms
outsl
rorb
xor
pop
lret
ljmp
pop
lret
scas
or
les
push
cmp
mov
arpl
cmp
call
pop
sub
out
rcl
lcall
push
adc
jp
and
aad
push
mov
ljmp
xorb
xor
push
mov
or
adc
pop
test
jecxz
js
sbb
int3
sahf
mov
and
cmpsl
cmc
insl
imul
lds
and
rcll
xor
insb
dec
fildll
hlt
imul
mov
and
shll
cwtl
mov
mov
or
push
pop
insb
jp
lahf
mov
aaa
jp
xchg
mov
mov
js
inc
cmp
push
outsb
dec
jge
leave
jnp
insb
sbb
sti
test
pop
or
adc
test
dec
test
fwait
stos
int
mov
jecxz
ds
and
mov
movsl
test
or
and
lea
cmc
sub
pop
sbb
cld
adc
cmp
cmp
loop
rorb
rorl
aam
pop
ret
scas
mov
add
daa
xchg
lret
out
shlb
nop
sbb
mov
gs
xchg
jae
inc
and
pop
add
jbe
pop
or
jnp
insb
dec
or
shrl
movzwl
mov
out
cmpsb
jae
push
sub
mov
out
sbb
cmc
test
into
mov
inc
stc
fucomp
push
into
fistpll
out
fdivl
mov
nop
push
mov
sub
push
mov
repnz
xchg
adc
xor
inc
sahf
inc
mov
in
roll
out
ljmp
mov
add
push
pop
shlb
xor
std
enter
xlat
add
test
out
lret
mov
scas
jl
xor
sbb
pop
or
jg
mov
fildl
adc
fstps
rolb
ret
insl
push
loop
mov
outsb
cltd
mov
xor
cmp
add
in
add
das
add
dec
jecxz
mov
sbb
xor
and
loop
loop
outsl
push
jle
es
xor
add
dec
sub
xor
std
lret
xchg
movups
cmp
mov
imul
mov
pop
call
shll
lea
fnstcw
cmpsb
pop
or
inc
jle
in
inc
add
xchg
jne
sbb
push
xor
add
inc
ficoms
popa
and
mov
add
mov
mov
iret
lea
push
pop
sbb
ret
sahf
ret
out
or
daa
inc
popf
pop
aas
faddl
repz
fwait
inc
or
iret
stos
xchg
dec
or
ja
setp
icebp
fwait
dec
in
je
mov
xchg
cmp
stos
sub
test
inc
sub
test
add
loopne
stc
sbb
test
clc
lret
js
inc
xchg
dec
dec
mov
and
and
mov
lahf
in
test
push
cmp
add
mov
xlat
jne
lods
mov
loopne
adc
dec
mov
mov
inc
leave
scas
roll
pop
sarb
cltd
fcmovnbe
adc
gs
dec
lock
pop
xor
and
xchg
push
jmp
push
sbb
mov
mov
out
data16
das
rcl
cltd
jne
dec
mov
arpl
stos
pop
mov
cs
lcall
inc
mov
mov
mov
dec
xor
rclb
lahf
mov
sbb
out
lea
xchg
and
bound
lahf
sub
cmp
mov
mov
mov
int
stos
jmp
incl
popf
out
sub
add
mov
sbb
lcall
cs
pop
sahf
insb
je
adc
out
jne
cltd
movsb
or
les
in
aad
add
sti
in
int
or
sarl
scas
out
adc
jno
push
cmp
cwtl
sbb
rcll
cmp
and
dec
and
lahf
xor
stos
orb
xchg
dec
insl
sbb
xchg
jnp
mov
jge
lret
out
adc
test
aam
out
shll
mov
or
and
cmp
cmp
les
and
fmuls
movsb
icebp
in
sbb
outsl
pop
sbb
movsl
pop
mov
mov
aas
add
imul
nop
pop
pop
and
add
adc
pop
hlt
xor
clc
test
rcl
push
scas
in
jae
scas
ja
sbb
lcall
xchg
sbb
aam
or
cmpsl
nop
scas
imull
int3
flds
popa
lods
je
enter
xor
sti
jecxz
cmp
int
cmp
imul
fistps
add
mov
inc
cmpb
sbb
test
fcmovnb
pop
push
mov
rcr
xchg
add
xchg
out
shlb
sub
js
mov
adc
or
pop
std
mov
and
addr16
add
cmovae
dec
lea
jecxz
loop
mov
lods
popf
filds
dec
iret
add
push
out
xor
fdiv
lods
das
mov
add
imul
mov
fs
push
les
pop
aam
outsb
pop
js
and
inc
lahf
xor
cmpl
andb
or
dec
push
pusha
xchg
push
nop
pop
jmp
loop
popa
push
and
or
jb
rorb
outsb
addl
dec
fistpll
cmc
stc
popa
inc
xchg
dec
cmp
jecxz
ret
cmpsb
orb
mov
adc
inc
stos
mov
fistl
insl
mov
cmc
jecxz
insb
and
nop
stos
arpl
jbe
insl
popf
sub
add
cs
loop
jne
push
push
and
lods
icebp
mov
mov
ja
xor
subb
jle
mov
dec
inc
js
jbe
ficomps
fsts
sub
roll
sti
lds
imul
lret
mov
jne
pop
lods
dec
push
inc
inc
mov
out
popa
sbb
mov
leave
loope
push
gs
push
xlat
jnp
cs
fsin
dec
cmc
push
cmp
jne
add
xchg
push
pop
lcall
sbb
pop
inc
cmp
and
and
popf
shlb
inc
inc
cwtl
fldl
dec
test
inc
scas
inc
leave
pop
mov
repz
loope
lea
stos
mov
pop
add
jbe
mov
push
push
mov
ret
or
test
sub
ds
cmpb
push
xchg
adc
int3
aad
outsl
or
pop
pop
call
leave
lret
sub
pop
mov
in
add
inc
mov
jne
mov
ret
mov
pop
mov
adc
jb
push
xor
loope
and
mov
cltd
xchg
daa
aad
lock
or
dec
cmp
js
ret
ds
repnz
xchg
xchg
mov
into
cmpsl
popa
cmc
xor
ret
insb
cld
fsubrp
das
sbb
push
hlt
inc
xchg
sbb
stos
int
inc
mov
in
or
and
stc
and
mov
ss
arpl
test
add
movsb
mov
sub
inc
aas
or
cwtl
push
sub
mov
cmpsb
jnp
xor
popf
mov
push
and
mov
sub
pusha
lret
stc
jg
sub
int
mov
scas
loop
or
movsl
push
push
mov
fcompl
mov
push
loop
mov
xchg
fsubrs
mov
push
iret
scas
sub
dec
fsubl
mov
jg
ja
or
and
dec
push
mov
insl
into
inc
or
shl
dec
pop
scas
das
aad
sti
mov
out
enter
fwait
xchg
adc
cld
in
es
xchg
mov
ss
fcomps
inc
xor
jmp
push
push
sub
push
cmpsb
hlt
fildl
cld
fadds
sub
loop
mov
out
sub
lods
mov
fsubrl
jl
adc
push
dec
insl
cmp
dec
test
fwait
rolb
pop
adc
imul
xchg
addr16
push
lods
cmp
jno
addr16
inc
jecxz
jbe
dec
pop
push
mov
arpl
aaa
fimuls
lret
push
or
pop
mov
jg
mov
push
fdivs
or
pop
movsl
add
cwtl
arpl
pushf
ret
movb
mov
test
jecxz
and
je
fs
mov
pop
out
mov
jge
stos
add
lahf
mov
jge
repnz
adcb
cmpb
mov
xchg
dec
ror
repz
xchg
sub
leave
loop
in
clc
add
ret
and
pusha
ljmp
inc
mov
fadd
fstl
sub
ret
shl
out
lea
aad
xchg
insb
pusha
mov
lret
inc
scas
push
cmpsb
lds
xor
insb
inc
loope
inc
fldenv
pop
fstpt
mov
mov
int3
out
push
adc
or
mov
lret
movsb
jl
jmp
out
add
ret
add
std
xchg
xor
mov
and
xchg
ljmp
outsl
dec
aas
lret
push
inc
test
inc
dec
dec
aam
mov
mov
dec
int3
pop
inc
das
cmp
adc
leave
dec
cmp
outsl
dec
movsb
and
mov
cwtl
sahf
pop
shlb
xor
nop
push
add
popa
pop
mov
mov
inc
js
fsubs
dec
jo
or
pop
or
fwait
mov
out
addb
rcl
adc
mov
mov
outsl
and
popf
test
shll
iret
and
test
rorl
mov
rcr
pop
jp
outsb
pusha
popf
mov
xchg
into
adc
push
and
jno
add
or
aad
pop
dec
jg
incb
xor
xor
sbb
sub
popl
popl
daa
sub
xor
pop
out
adc
inc
mov
jle
loopne
jno
cmc
gs
and
jnp
mov
lahf
mov
shl
dec
pushf
cmp
rorb
rcrb
cmp
insl
aam
sub
cmpsl
and
xchg
inc
pop
sbb
jno
push
fcomp
and
aad
fnstcw
and
fadd
lret
test
push
outsb
ret
xor
and
rcll
mov
push
in
pop
pop
add
hlt
xor
int3
ljmp
popa
lret
insb
aas
cmp
jbe
popa
pusha
pop
cmp
push
jle
ficoms
cmpsl
push
mov
andl
mov
xor
rcr
sbb
mov
rcll
filds
pop
shl
pop
iret
lahf
cmpsl
insl
pop
pop
cld
cmp
fwait
xchg
dec
shll
jle
xchg
cli
mov
and
mov
pop
cwtl
xchg
dec
push
xchg
int
cltd
cwtl
xor
cld
data16
leave
dec
push
fidivrl
xchg
jecxz,pn
sbb
int
and
and
aas
jecxz
inc
aaa
or
push
lret
or
push
cmc
and
negb
cmp
cmp
shl
iret
push
test
ds
daa
and
das
sbb
sbb
inc
sarl
push
mov
data16
arpl
lret
scas
sahf
repz
xchg
mov
cmpl
or
aas
aad
les
add
ret
mov
mov
lds
xor
sub
pop
loope
lock
xor
mov
pop
sbb
dec
lods
jge
nop
or
adc
adc
nop
mov
ljmp
and
pop
mov
hlt
lret
push
dec
mov
dec
inc
in
js
les
cmpsb
nop
mov
jp
ljmp
jg
decl
pop
out
or
cld
rorl
popa
stos
into
or
in
mov
inc
push
mov
push
mov
jne
and
adc
xor
push
jno
mov
push
xchg
inc
push
lock
adc
cli
or
movsl
push
push
jle
imull
and
jg
pop
inc
cmpsl
insb
fsts
fisubrl
out
aam
or
pop
mov
jno
adcl
sarb
pop
enter
sub
lret
mov
mov
mov
lea
sbb
in
addr16
pop
loope
inc
ret
aad
inc
sub
mov
out
sar
in
push
jge
inc
or
int3
mov
pop
inc
mov
and
jo
mov
mov
insl
test
icebp
out
mov
mov
icebp
xchg
dec
xor
mov
xor
inc
or
mov
pop
fcmovne
mov
and
mov
inc
mov
dec
rclb
lret
std
aas
push
pop
push
test
adc
sub
test
xchg
cmp
fnstenv
push
mov
inc
cltd
push
xor
mov
jl
push
mov
ret
shll
pop
mov
jb
dec
call
push
test
out
popa
jmp
xlat
insl
dec
cmpsl
aas
int
adcl
mov
daa
out
cwtl
daa
add
push
pop
mov
aaa
js
pusha
mov
jecxz
add
jmp
and
push
arpl
inc
repz
inc
mov
out
insl
gs
in
sbb
gs
fidivrs
sub
sbb
xor
shll
push
shr
mov
sbb
pop
push
dec
test
lds
loop
enter
xchg
xchg
repz
jnp
or
jle
mov
out
ret
std
pop
jbe
sub
add
sahf
push
icebp
lret
pop
mov
pushf
pop
mov
dec
sbb
sub
push
int
psadbw
test
fldl
sarb
mov
ds
shrb
dec
and
sbb
push
lods
insb
pop
push
xchg
nop
es
es
fwait
dec
mov
push
comiss
test
pop
mov
cltd
icebp
and
sbb
jp
or
cmc
pop
cmp
in
sbb
cmp
fadds
outsl
mov
lds
push
xlat
cmp
loop
push
into
aam
icebp
shll
lcall
rorl
mov
cs
outsl
mov
add
pop
mov
push
xchg
es
xor
iret
ja
andl
push
push
out
mov
movsb
sub
jb
arpl
jg
mov
scas
jle
aas
movsl
lcall
mov
xlat
xchg
and
dec
shrl
sbb
dec
call
mov
fwait
xchg
sarb
mov
sbb
insb
pop
fcomip
data16
mov
dec
sub
sub
shrb
daa
scas
in
dec
in
mov
in
push
jno
add
sub
outsb
cmp
mov
pop
jbe
mov
cmp
xchg
call
lods
cmpsb
lret
add
cld
es
sub
xor
lods
bswap
cmp
lock
fstp
dec
inc
xor
and
je
add
in
popa
xor
and
repnz
cmp
lock
mov
repz
sbb
push
rolb
sub
and
sub
popa
sbb
pusha
push
scas
or
js
lahf
ret
insl
push
movaps
xchg
xor
pusha
stos
lock
xchg
add
mov
test
ret
adc
lock
fucom
push
jb
mov
lock
push
mov
adc
nop
mov
pop
imul
in
jno
jne
dec
in
in
jg
mov
testb
add
filds
dec
inc
inc
dec
dec
push
mov
xchg
push
jge
ss
inc
push
test
xor
ss
loop
mov
lock
mov
pop
cltd
mov
mov
stos
push
enter
adc
jbe
mov
sti
cmc
scas
shrl
sbb
cwtl
xchg
xchg
sbb
and
cmp
jae
fisubl
jno
mov
xor
rcll
or
cmpsl
shll
mov
mov
dec
stos
xlat
xchg
xor
fwait
sbbl
mov
pop
or
daa
cwtl
xor
imul
sbb
ljmp
dec
xor
adcb
and
sub
xchg
cmp
and
mov
or
lret
mov
jl
lock
adc
mov
out
ljmp
pop
inc
movsl
xchg
jnp
faddl
lcall
fbstp
testb
jmp
cmp
mov
lock
testb
push
sub
dec
mov
mov
cmp
push
imul
sbbl
dec
cmp
lret
aas
cld
pushf
sbb
pop
nop
xchg
mov
cmp
popa
leave
mov
inc
test
loope
xor
stos
test
shlb
gs
mov
push
pop
pop
and
inc
adc
add
cltd
jp
adc
subl
dec
pushf
adc
pop
dec
lods
loope
ds
fnstenv
mov
shlb
je
xchg
push
lock
loop
stc
call
and
mov
bound
data16
jbe
add
fdivrs
sbb
leave
fistpl
push
scas
cmp
fcom
js
mov
jb
jge
inc
dec
or
out
inc
cltd
dec
mov
jmp
or
dec
mov
movsb
dec
sbb
rcl
inc
mov
nop
leave
and
cmpsb
mov
iret
bound
xorb
in
dec
cltd
and
xor
loope
inc
push
mov
dec
and
testb
sub
mov
xchg
scas
out
jo
adc
std
sub
repnz
push
loope
push
xchg
mov
pushf
push
jae
fistl
sti
inc
out
xor
mov
xchg
adc
mov
add
adc
andl
mov
jo
adc
mov
mov
mov
dec
lahf
ret
rorb
dec
outsl
out
loop
aas
rol
mov
pop
push
adc
nop
cmpsb
or
insl
xchg
jmp
test
or
test
popa
pop
insb
mov
popa
into
jg
adc
adc
cmp
adc
lods
mov
cmp
jns
push
insb
jecxz
in
cmp
test
mov
cwtl
or
and
into
es
in
adc
into
inc
sarl
cli
lcall
sub
push
call
or
mov
push
push
push
inc
mov
and
std
loope
add
jg
jge
inc
mov
xchg
dec
insl
mov
mov
scas
pop
lret
mov
das
daa
out
bound
xor
push
fwait
cmpsl
ja
lret
xchg
push
daa
arpl
add
sub
jne
lods
pop
ja
aaa
nop
jge
rolb
mov
push
jae
sbb
cmp
stos
fcoms
lods
rorl
mov
clc
lret
inc
push
icebp
cmp
cld
pop
out
out
jle
and
xor
dec
push
jae
push
mov
add
jecxz
sbb
and
mov
lods
jns
arpl
xor
push
push
inc
iret
xchg
lret
int3
scas
xor
xor
pop
xor
and
fildll
pushf
std
dec
xchg
ljmp
stos
jae
or
test
call
xchg
cmpsb
jo
mov
mov
dec
xchg
xchg
cmp
ficoms
adc
scas
es
xchg
repnz
pusha
lods
push
outsl
mov
mov
adcl
loop
sahf
push
add
aam
mov
jecxz
xchg
adc
and
xlat
add
pusha
scas
xchg
push
test
ret
inc
data16
sub
cld
pop
pop
ljmp
dec
loop
pop
mov
inc
arpl
pop
cmpsb
jb
fcomps
mov
mov
and
add
push
ret
data16
adc
inc
push
push
sarl
in
xor
mov
xlat
out
gs
loope
add
sub
pop
fmuls
cmp
or
push
push
sub
xor
sub
out
jl
push
push
fstl
addr16
in
test
xor
jb
mov
add
xchg
sahf
xchg
push
mov
aad
int
dec
jb
dec
inc
inc
sub
cmp
shl
jo
mov
adc
insb
push
cmc
rcl
pop
es
dec
jae
repnz
xor
or
dec
add
add
loopne
mov
clc
lret
xor
adc
mov
sbb
insb
dec
mov
rcrl
cs
and
jp
jle
lods
xlat
mov
mov
nop
sub
daa
mov
sbb
nop
sarl
pushf
mov
imul
xchg
outsb
mov
ljmp
add
xor
cs
jecxz
int
inc
in
inc
movsb
jae
cmc
sub
enter
fisubrl
inc
ret
outsb
rolb
in
fstpl
ljmp
mov
and
push
inc
mov
int3
adc
jne
add
jl
adc
mov
mov
fcomi
pop
iret
jmp
in
pop
in
lcall
adc
sub
lods
shrb
mov
xor
adc
jo
dec
scas
cs
adc
pusha
xchg
sub
sub
jle
or
adc
gs
imull
sbb
orl
fwait
pop
push
pop
add
lods
addr16
push
call
out
pop
sub
inc
mov
jno
bound
roll
incb
sti
data16
mov
push
xor
into
enter
xlat
adc
jbe
sub
adc
adc
sub
lea
jp
mov
clc
mov
and
ja
add
push
dec
cmp
movsb
jo
mov
pop
adc
fmull
sub
ret
xor
data16
sti
mov
stos
mov
cmp
and
mov
loopne
movb
fs
inc
mov
xchg
outsb
push
mov
xchg
push
bswap
mov
push
loopne
sbb
mov
jne
fstl
mov
jno
cmp
cs
xchg
inc
sbb
pop
xchg
push
adc
push
outsb
push
js
sub
xor
faddl
insb
mov
inc
out
inc
movsb
sub
movsl
ret
adc
pop
add
rcrb
jecxz
mov
in
aaa
in
pushf
or
mov
and
pop
repz
cmp
xrelease
push
fcmovb
inc
mov
ljmp
sbbb
push
mov
push
sub
in
sub
xchg
sub
shll
xchg
inc
enter
cmp
pop
jbe
fsubs
imul
enter
xchg
cmc
xor
mov
push
push
mov
fisttpl
sahf
dec
xchg
mov
xchg
adc
xor
enter
mov
xchg
clc
mov
sub
mov
addb
ljmp
ds
jl
jl
fidivl
mov
arpl
inc
dec
movsb
jecxz
fidivrs
sbb
mov
and
pop
mov
cmp
add
jge
aad
xchg
inc
dec
or
adc
loope
cmovnp
repnz
xor
sbb
or
int
hlt
mov
dec
sub
into
ja
aas
daa
push
out
adc
cmp
es
xor
push
icebp
xchg
inc
sbb
mov
jp
xchg
jno
repnz
mov
shlb
subl
int3
add
lea
rorb
fs
sbb
loop
rolb
sarl
and
sahf
adc
push
into
pop
aaa
enter
pusha
mov
sub
fs
mov
bound
sbbl
inc
pop
xchg
jmp
mov
xchg
pop
in
mov
pop
movsl
dec
and
mov
xor
loope
xor
cmc
cmpsl
xchg
jo
mov
push
pop
mov
push
ds
scas
push
lret
cmpsl
incb
scas
movsl
lahf
addr16
sbb
aad
sub
test
adc
loope
imul
call
rcrb
rol
xchg
out
sub
mov
adc
lods
test
arpl
pop
aaa
flds
add
stc
fisubrl
jne
out
test
dec
icebp
gs
sub
jae
mov
pop
sbb
inc
iret
in
hlt
xor
leave
testl
inc
xchg
into
ss
mov
and
ljmp
cs
add
icebp
mov
das
or
jo
jl
fwait
jns
out
xchg
aaa
jno
pop
pop
in
xchg
loop
ficoml
ret
lock
xchg
mov
inc
enter
aam
clc
dec
lock
insl
test
roll
push
out
leave
fisttpl
popa
pop
sub
pusha
push
sub
cld
popa
ljmp
shrl
inc
stc
aas
inc
pop
stos
fisttps
mov
xor
fsub
pop
push
dec
and
or
sbb
jae
mov
inc
out
dec
mov
push
mov
cld
pop
negl
scas
lods
dec
mov
call
addr16
insb
jae
push
or
loop,pn
iret
test
push
mov
inc
cmp
sbb
pushf
lahf
aam
jecxz
mov
dec
push
mov
xchg
or
dec
int
and
inc
push
xor
aas
push
orb
mov
jb
fwait
pop
out
mov
inc
movb
xor
test
sub
test
mov
push
pop
mov
cmc
pop
jle
xor
fiadds
icebp
pop
cmp
sbb
jmp
adc
xchg
inc
sbb
inc
lock
mov
mov
mov
test
jge
jbe
jmp
nop
idivl
je
rorl
mov
ljmp
jl
lret
fidivs
jne
nop
add
push
popa
imul
mov
dec
jmp
ljmp
stc
adc
jmp
jmp
movl
or
in
out
stc
sti
lret
jns
fisubrs
shlb
lea
out
sbb
iret
gs
mov
add
inc
mov
sbb
mov
test
mov
pop
sbb
outsl
mov
pusha
dec
icebp
fadds
mov
jl
xlat
iret
pop
data16
into
hlt
jmp
jae
mov
inc
xchg
sbb
mov
hlt
lods
xchg
ss
mov
nop
xchg
insb
icebp
in
loopne
inc
inc
div
sub
push
outsl
adc
cmp
leave
sub
inc
jno
add
push
int3
sahf
push
sbb
dec
push
in
and
sarb
data16
xchg
ss
adc
icebp
ss
jbe
movsb
pop
or
fwait
push
les
xchg
loop
hlt
pop
sbb
push
daa
movsl
test
lds
xor
mov
adc
aaa
test
jb
stos
out
ret
popf
jmp
push
dec
xor
cli
sbb
mov
leave
xchg
lahf
rclb
and
dec
nop
sti
fiaddl
stos
xchg
xor
mov
push
dec
jmp
xchg
dec
ss
lods
hlt
add
pop
adc
sub
lea
jmp
xchg
sub
mov
fdivs
jo
sub
mov
xor
leave
cs
dec
mov
pop
mov
clc
mov
xlat
orb
shlb
mov
mov
mov
movsb
es
and
add
push
test
mov
cltd
lret
or
jno
mov
ljmp
mov
sbb
push
mov
fstpl
inc
ret
cmpsl
push
out
dec
sub
adc
mov
lahf
je
xchg
jp
xchg
xchg
sub
test
aaa
iret
push
mov
add
out
orl
sub
test
or
mov
mov
sbb
dec
pusha
movsb
pop
cwtl
insl
jnp
in
fsubl
dec
jns
dec
adc
push
jbe
cmpsb
push
add
sbbl
jg
xchg
push
and
mov
cmpsl
push
or
fsts
jbe
sub
icebp
arpl
cmp
ds
dec
xchg
jl
or
sub
fidivrl
mull
push
in
das
aaa
loopne
ljmp
cmp
out
cmpsl
mov
call
int
xor
mov
daa
subb
push
and
fdivr
sub
jp
push
mov
mov
and
jg
aas
push
test
mov
jmp
add
imul
inc
or
sbb
aaa
or
mov
imul
pop
pop
loop
insl
lret
jg
xor
leave
mov
test
dec
mov
mov
mov
mov
in
push
lock
ja
pusha
mov
sarb
push
in
aaa
es
fwait
inc
int
int
push
pop
pop
cltd
xchg
adc
decl
pop
movsl
add
push
lea
xchg
add
bound
rep
add
cli
add
imul
ret
iret
scas
jmp
ss
inc
jl
mov
cmp
adc
jae
and
mov
dec
icebp
sub
ret
fwait
push
mov
inc
cld
and
aam
xchg
jae
mov
or
std
mov
dec
or
ja
icebp
push
jg
or
pop
jbe
fwait
inc
aaa
fcomps
or
gs
xorl
test
pop
lods
cmc
mov
add
mov
mov
test
push
fnstcw
int
or
add
sbb
js
pop
and
aaa
inc
es
xchg
insl
mov
movsb
push
lea
inc
pop
loop
pop
scas
jle
scas
mov
jge
jle
adc
inc
cltd
fnstsw
lock
data16
jno
cld
adc
nop
mov
data16
cmc
fisubs
clc
jbe
jmp
aad
cmp
icebp
repz
ret
dec
imul
inc
jmp
cli
and
js
lock
jp
subb
leave
cmp
fdivs
push
xchg
xlat
ret
test
mov
test
and
lods
cmp
inc
dec
ljmp
sti
fsubl
mov
lret
mov
icebp
lods
inc
sbb
push
jae
dec
push
inc
inc
and
sub
int
insl
push
icebp
pop
xchg
cmp
cmp
inc
pop
cmpb
jne
jne
push
pop
mov
out
test
int
inc
cmpsl
mov
cld
push
mov
hlt
divl
lds
aas
leave
jbe
inc
lds
mov
inc
xchg
mov
sbb
jb
mov
addr16
cmp
xchg
pop
mov
sbb
xchg
fnsetpm(287
adc
in
cmp
dec
pusha
pop
mov
jg,pt
int
sub
pop
jb
sbbl
shrl
pusha
loopne
mov
clc
inc
mov
nop
and
aas
dec
scas
jnp
loope
mov
push
les
xchg
sahf
cmp
xchg
or
out
cmp
push
sub
scas
push
xor
arpl
int3
shlb
cmpsb
mov
call
lds
lock
movsl
movsb
dec
jl
clc
add
mov
sbbb
jg
pop
jecxz
inc
mov
out
fwait
mov
mov
xor
push
lret
dec
loopne
add
arpl
stos
xchg
pop
xchg
push
xchg
int
adc
mov
add
xchg
xchg
push
dec
sti
lds
pop
add
adc
ret
sub
push
push
mov
out
das
popa
ret
jg
mov
loop
jae
out
push
xchg
clc
andb
jle
xchg
lret
xchg
xchg
movsb
aaa
mov
and
mov
ljmp
jae
dec
outsl
push
push
divb
pop
xchg
pop
fstpt
add
insl
mov
popf
stc
or
fs
xor
pop
jg
xor
jno
pop
mov
xlat
push
repnz
mov
add
xorb
stos
jo
mov
int
test
mov
data16
adc
push
sahf
mov
mov
cmc
dec
daa
jno
mov
adc
rcll
lret
sbb
or
or
adc
jmp
aas
xor
jno
iret
into
xchg
jb
and
incl
nop
xor
pop
or
mov
gs
pop
xchg
fs
pop
ret
mov
ss
add
mov
cmp
lret
mul
in
mov
sbb
les
xor
inc
jbe
inc
faddp
ficoms
mov
int
fildl
xor
jae
out
add
mov
dec
xor
add
xor
std
sahf
sti
cltd
push
pop
int3
aam
or
cmp
push
mov
in
or
cld
jo
cmp
lods
fmull
addr16
out
loopew
dec
imul
dec
insb
sub
in
inc
adc
arpl
mov
xor
fsub
faddl
xchg
ret
pop
cmp
inc
rorb
hlt
sbb
dec
sbb
ret
fcomi
arpl
hlt
adc
aam
push
stos
xchg
test
adc
push
push
ja
test
fmull
push
lret
scas
divb
cli
cmp
fiaddl
icebp
movsb
mul
xchg
mov
lods
movsl
xchg
cltd
lds
push
cmp
mov
xor
add
mov
xchg
or
pop
mov
ja
pop
out
or
addr16
iret
cmpsb
xchg
xor
outsl
arpl
movsb
shl
jnp
pop
xchg
and
adc
cmpb
sub
or
inc
test
test
scas
ja
lahf
or
stc
push
jg
add
jg
shr
fwait
push
test
jae
mov
outsb
outsl
lret
push
das
and
in
jmp
rcrl
aaa
mov
push
xor
xchg
add
movsl
inc
cwtl
push
scas
jle
rcll
sbb
pop
ror
les
jmp
push
addr16
sti
daa
push
cmp
adcl
dec
pop
aam
fadds
adc
repz
insb
or
pop
cmp
fsub
xchg
icebp
mov
xchg
aas
mov
jbe
inc
sub
cwtl
pop
fdivl
in
test
jns
fbstp
and
pop
push
dec
adc
add
jno
cmp
add
jecxz
adc
int3
leave
lret
es
xor
xor
mov
dec
mov
fnstsw
pusha
sar
mov
xchg
xor
les
mov
cld
mov
dec
dec
fcoml
push
xor
and
adc
repz
idivb
js
add
push
scas
mov
push
insl
mov
jecxz
leave
int
jp
jb
mov
int
mov
mov
clc
sub
ja
sub
xchg
inc
pop
xlat
fnsave
cmp
xchg
ds
out
or
sub
mov
mov
inc
in
out
sbb
pop
lods
stc
arpl
xchg
push
int
test
and
movsl
shrb
sbb
xchg
pop
fs
pop
daa
cmp
mov
shlb
out
pop
jge
xchg
ds
cld
mov
iret
xchg
pop
jp
xchg
test
xchg
ljmp
lock
cmp
into
jge
add
les
into
js
xchg
sbb
loop
xchg
test
arpl
repnz
jae
dec
inc
push
add
sbb
jne
pop
out
fcomip
or
scas
fcomps
movsl
test
sub
xor
push
lds
or
aam
mov
aad
inc
xor
and
adc
xchg
mov
mov
insb
mov
jo
mov
mov
in
and
fs
arpl
in
jae
repz
add
jmp
fmul
lret
inc
cmc
repz
and
xchg
enter
pop
jns,pn
xchg
lods
data16
mov
out
xor
sbbl
mov
pop
ljmp
jg
jge
outsl
xlat
in
adc
dec
mov
mov
nop
cwtl
xorl
divl
xchg
in
sub
mov
iret
xchg
iret
cs
mov
sub
sbb
popf
rep
mov
push
dec
mov
jmp
sbb
rolb
loope
dec
lds
in
pop
fistpl
mov
sub
or
push
rcrb
xchg
or
sbb
scas
pop
mov
popf
sbb
mov
push
test
xchg
lahf
jb
mov
fidivl
mov
test
cmp
xchg
dec
out
xchg
dec
and
pop
xchg
shr
mov
sub
fadd
mov
jno
xchg
out
push
jb
fbstp
mov
stos
jmp
aad
mov
iret
mov
nop
daa
cvtpi2ps
sbb
gs
ds
les
mov
or
mov
inc
data16
cwtl
ficomps
pushl
and
adc
movsl
mov
ret
stos
xor
adc
adc
xchg
movsb
es
sub
cli
push
mov
scas
sub
mov
jmp
mul
sub
out
cmc
gs
mov
ret
outsl
or
aas
push
push
in
daa
add
push
mov
inc
push
scas
cmp
mov
rclb
xchg
xchg
out
cmp
insb
push
lds
mov
pushl
xchg
test
jns
pushf
jno
jle
les
in
or
ljmp
fdivl
mov
sub
sbb
jp
sbb
cmp
inc
dec
add
ret
xorl
outsb
sub
jl
mulb
dec
or
mov
sub
jb
rcll
aam
stos
xor
or
add
hlt
movsl
jl
cwtl
cmp
mov
or
adc
sbb
mov
ret
mov
mov
ret
jno
lods
daa
or
into
xchg
mov
or
inc
cmp
ret
lret
jb
mov
gs
gs
and
adc
add
aas
repnz
pop
mov
mov
dec
fmull
mov
outsl
aas
cmpsb
pop
push
outsl
jno
jns
movsl
aad
cmp
loop
loopne
cmp
out
movsl
jle
mov
fldl
fadds
push
insl
aam
or
xchg
mov
mov
cltd
clc
repz
add
out
arpl
icebp
bound
lret
test
cltd
cmp
sarb
xor
dec
xchg
pop
out
push
pop
push
pop
cmpsb
and
in
jecxz
setle
lret
js
iret
fistpll
xorb
je
or
int3
ds
push
and
mov
adc
rol
notb
mov
pop
jge
mov
pop
into
sbb
xchg
shl
xchg
lret
outsl
inc
sbb
sbb
into
jl
fistpll
and
add
out
in
push
mov
sbb
in
roll
sti
xor
adc
adc
pushf
adc
fldenv
lods
movsb
xchg
pusha
scas
loopne
stos
outsb
add
cli
cmpsl
mov
imul
jns
sbbl
inc
js
inc
xor
pop
lahf
mov
jp
into
cmp
stc
je
jo
add
mov
test
xchg
inc
lds
insl
lock
imull
mov
dec
punpcklwd
sbbl
stos
mov
notb
jecxz
jns
out
in
sbb
std
sarb
cmp
stos
adc
xchg
pop
icebp
aaa
aam
pop
push
and
push
or
pop
push
add
xor
mov
inc
addb
adc
repz
mov
xor
aad
ret
fwait
push
cmpsb
add
pop
lods
dec
in
or
add
or
mov
int3
add
xor
fiaddl
sbb
mov
jns
push
xor
loop
lea
rolb
or
aas
movsb
push
and
divb
sub
scas
dec
sbb
add
out
mov
inc
test
dec
int
mov
and
imul
mov
sahf
xchg
sbb
ds
add
xor
pop
inc
sub
add
mov
mov
mov
aaa
sbb
sbb
lret
loopne
xchg
or
test
stos
in
ds
data16
jnp
test
stos
mov
xor
add
lds
aas
dec
shl
xor
clc
call
jnp
cli
mov
dec
int
test
jns
test
mov
popf
jle
lods
data16
xor
insb
sti
rolb
cltd
pop
jle
nop
jo
jbe
mul
stc
xchg
int3
scas
push
sub
inc
xchg
lods
pop
movsl
sub
add
sahf
lods
movsl
sbb
cld
shll
inc
cmp
pop
cmp
fisubl
inc
js
fdivs
pop
test
adc
iret
test
mov
or
jg
inc
lds
enter
shrl
and
icebp
or
xlat
jp
or
in
jns
inc
add
int3
sub
daa
push
dec
mov
inc
pop
push
in
shll
roll
pop
out
cmp
repnz
add
aas
push
mov
imull
mov
fmull
jle
lahf
sub
scas
push
add
ror
mov
icebp
mov
jns
into
stos
xchg
es
in
mov
xchg
out
lds
mov
xchg
fadds
mov
leave
pcmpeqb
hlt
mov
add
add
out
sub
mov
pop
mov
outsl
dec
sar
ret
bound
cmpsb
cmc
cwtl
gs
ja
shl
inc
add
stos
push
xchg
repnz
sub
iret
and
ds
test
mov
push
sbb
jo
mov
or
mov
sbb
add
pop
jmp
sub
jns
aaa
or
dec
das
pop
test
in
jecxz
mov
aad
out
pop
push
js
jge
sub
in
mov
pop
inc
inc
dec
cmp
jl
inc
and
lds
xchg
push
xchg
nop
and
mov
or
imul
xor
jnp
pop
movsl
pop
std
fnstenv
sbb
lods
push
mov
inc
pop
imul
lods
test
sbb
dec
stos
mov
inc
lcall
and
xchg
lret
sub
mov
xor
push
daa
insl
pop
jecxz
iret
out
fiaddl
sub
and
outsl
ljmp
movsb
adc
push
dec
xchg
mov
sbbb
sahf
cmp
fldenv
fadds
imul
sbb
pop
add
add
mov
xchg
insl
add
cld
inc
ror
and
push
andl
dec
mov
outsb
jae
mov
test
mov
imulb
jge
inc
fisubl
cmpsl
push
cmpsl
push
cmp
lret
cmp
jns
sbbb
xor
scas
pop
xor
push
ret
je
pop
inc
out
and
adc
movsb
or
sahf
aaa
sub
adc
pushf
and
mov
arpl
sub
cld
test
sbb
in
popa
lock
in
inc
in
rcrl
pop
mov
mov
inc
push
pop
jns
sub
cmp
sub
jmp
arpl
dec
push
inc
out
pushf
pusha
out
inc
xor
xchg
movsl
test
adc
mov
dec
xchg
incl
cmpsl
insb
pop
or
repnz
cs
cmp
cmp
cwtl
icebp
popf
gs
out
inc
lcall
add
push
ss
push
out
aaa
cmpsb
jl
stos
sub
adc
dec
jmp
sbb
pop
outsb
jmp
rclb
dec
or
test
cmp
mov
add
outsl
test
sbb
mov
mov
adcb
and
mov
outsb
mov
fcmove
mov
out
dec
adc
mov
fstp
mov
out
stos
or
pop
pop
ss
or
ljmp
out
push
push
aam
fbstp
insb
or
add
jb
cltd
and
test
fwait
adc
out
mov
push
and
cmp
jnp
adc
iret
sti
add
ja
ljmp
mov
aam
repz
sub
add
leave
cli
imul
mov
js
mov
jae
inc
or
sub
scas
fdiv
jge
test
push
imulb
ja
inc
inc
pushl
dec
dec
inc
mov
enter
and
cwtl
xchg
or
rcll
jge
xor
pusha
mov
insb
dec
adc
xchg
jne
jge
bound
pop
in
push
mov
add
hlt
loopne
aas
sbb
push
cli
xor
adc
mov
cmp
add
mov
imul
push
pop
and
dec
fcoml
call
jb
push
rorl
aad
add
inc
add
jge
bndldx
sti
loop
ljmp
repnz
rcr
insb
setl
cmp
lods
mov
mov
in
sti
imul
sbb
xor
sub
scas
push
sub
js
dec
push
xor
outsl
mov
mov
xor
lds
add
pop
movsl
dec
mov
add
dec
out
mov
cmp
xlat
int3
ret
mov
xchg
jae
and
imul
cmp
inc
into
sarl
mov
sub
lcall
loope
ret
add
mov
xor
push
xchg
loope
inc
cmp
cmpb
cs
dec
push
or
add
std
cmp
fwait
rorb
test
test
fcomip
das
into
popf
cli
ret
and
and
jb
cmpsb
jns
cmp
pop
jp
fistps
lods
sbb
adc
mov
out
xchg
jns
dec
sub
dec
push
cmp
sarl
cmp
test
test
and
inc
add
ret
inc
and
add
test
push
lcall
xor
fs
icebp
movaps
lcall
loop
jnp
and
fsubs
add
push
sbb
test
xor
inc
insb
jle
add
bound
iret
orb
aas
dec
bound
in
fisttps
adc
sub
aam
jmp
xor
xor
in
movsb
dec
mov
mov
jns
mov
dec
mov
mov
push
leave
arpl
dec
and
rcll
cmp
or
out
xchg
push
adc
mov
sbb
gs
imul
push
testl
rolb
sbb
pop
push
data16
jg
insl
cmp
inc
cmp
xchg
pop
adc
xor
add
mov
or
sbb
xchg
imul
ficomps
cs
add
dec
jnp
mov
lcall
in
jno
pop
mov
leave
dec
and
mov
loope
cld
sub
mov
jnp
cmc
xchg
ds
pop
jne
jae
test
leave
rclb
imul
jp
addr16
cmp
cltd
xchg
mov
sbb
adc
lret
setl
divb
sub
xchg
or
subl
rclb
repnz
mov
testl
pop
mov
cmp
pop
jg
push
inc
lock
mov
mov
into
jge
hlt
or
mov
hlt
mov
xor
addr16
add
mov
inc
pop
stos
add
adc
pop
lret
fldenv
pop
cmp
ja
insb
arpl
in
int3
mov
xchg
addb
fwait
and
orl
and
in
sub
jne
xchg
push
lods
popa
inc
ja
rolb
bound
pop
adcl
rorl
xor
dec
xorb
js
mov
ret
or
add
mov
lahf
cmpsb
ss
sub
jae
dec
aas
adc
jns
push
out
sti
inc
js
loopne
in
or
out
sahf
cmpsl
jno
out
pushfw
xchg
adc
sbb
jo
dec
lcall
orb
inc
inc
jle
in
dec
mov
jg
arpl
lods
dec
jp
add
ss
pop
jb
jo
lret
in
push
and
add
fcomps
je
mov
sub
push
cmp
nop
xchg
lds
push
fistl
mov
push
in
push
mov
ret
mov
mov
pop
jb
jbe
xor
outsb
je
mov
mov
daa
cmp
repnz
out
add
mov
and
cmp
inc
clc
xchg
xchg
dec
out
ret
xlat
lods
jo
mov
mov
push
cmp
loopne
push
insl
push
push
mov
sbb
add
testl
dec
dec
shrb
repz
jecxz
cmpsb
pop
inc
mov
fsubrl
fisttpl
enter
lahf
hlt
mov
sbb
test
je
gs
pop
and
push
cld
shrb
xchg
aaa
data16
mov
cmp
add
mov
pop
inc
imul
shll
push
lods
and
mov
fdivrs
cltd
out
mov
popf
out
xor
cmp
test
popf
inc
mov
std
cmp
into
jno
jb
fisttps
ret
aam
jns
ret
stos
xchg
push
mov
pop
adc
rcrb
push
incb
pop
je
xor
arpl
sub
popf
sbb
sbb
jp
ret
xchg
push
mov
mov
mov
arpl
cld
fwait
lock
or
mov
ret
rorb
lret
mov
jbe
pop
movsl
mov
sub
and
decb
and
push
cmc
and
and
rcrb
xor
push
xchg
cmpsl
aad
and
adc
stos
inc
data16
or
xchg
in
in
sbb
jbe
cwtl
push
popf
shl
hlt
scas
sti
lret
mov
inc
fneni(8087
cwtl
inc
ja
bound
push
mov
inc
xorb
xchg
insb
mov
cmpsb
mov
adc
int
xor
es
loopne
in
and
cmpb
out
in
mov
out
sti
icebp
xchg
mov
xor
loope
mov
test
pop
mov
cltd
inc
mov
scas
clc
or
sub
shlb
shrl
nop
jnp
jno
lret
xchg
sbb
aam
jnp
pop
in
into
cs
mov
xchg
push
hlt
adc
ds
pop
rcl
and
or
jmp
sbb
stos
push
popf
inc
gs
not
mull
setbe
mov
mov
nop
or
mov
nop
jae
fsubl
lea
lret
jb
cmc
pop
std
cs
sbb
or
pushf
xor
adc
adc
je
daa
sbb
pop
outsl
mov
cmpsl
and
jmp
adc
insl
mov
push
roll
push
fildll
mov
adc
in
mov
dec
in
xchg
insl
xchg
inc
push
adc
jo
mov
mov
imul
fs
push
inc
adc
sbb
add
cmpsb
push
add
fistl
pop
fiaddl
push
in
inc
push
fmull
push
inc
xchg
rolb
ret
mov
mov
fstpl
mov
clc
add
test
stc
xchg
sbb
or
sub
and
mov
std
cltd
mov
es
lret
lea
loope
or
cltd
icebp
sub
jno
jne
cs
ljmp
cmp
mov
pop
push
ret
rorl
sub
inc
jle
or
dec
test
outsb
inc
push
nop
or
fsub
jbe,pt
jle
clc
popf
inc
into
or
cmc
jb
sub
test
xor
ret
mov
loopne
rorb
and
dec
outsb
or
inc
jl
lret
sbb
fwait
ds
insb
xchg
pop
push
mov
ja
in
cwtl
xor
mov
lret
xor
sub
roll
lods
in
xchg
lcall
mov
inc
in
adc
xchg
or
fisttps
loop
mov
pop
test
adc
sub
mov
cmp
lds
scas
mov
lea
loop
push
inc
mov
or
jl
leave
popf
push
xchg
out
insb
addb
aas
into
mov
mov
out
sbb
xor
stos
or
aam
cmp
pushf
cwtl
inc
dec
mov
cli
iret
adc
mov
out
mov
xchg
sbb
fs
fcoms
or
push
sbbb
mov
or
mov
in
mov
add
cld
into
xlat
mov
mov
or
nop
aad
pop
popa
or
in
push
pmaxub
push
push
out
push
add
scas
jnp
test
enter
and
dec
sub
aad
stos
dec
xor
shll
pop
std
fs
mov
into
mov
shlb
dec
add
jge
lcall
jl
mov
mov
stc
mov
mov
lods
push
jecxz
and
fsubl
mov
popa
test
sub
enter
xor
or
cwtl
xchg
sbb
mov
sub
imul
std
data16
adcl
or
cli
sar
pop
cltd
es
ror
das
stos
sbb
mov
mov
ds
jecxz
inc
lea
lods
add
mov
shlb
mov
push
push
in
dec
mov
pusha
cmpsb
push
aad
das
xlat
repz
cwtl
rcl
daa
aad
add
dec
lahf
sbb
loop
inc
mov
imul
cld
int
test
xchg
mov
in
inc
jbe
xor
dec
shrl
cmpsb
mov
pop
sub
lods
push
bound
mov
push
into
scas
mov
inc
dec
and
jo
pop
push
imul
xchg
movsb
lods
cmp
and
sub
or
cmp
add
leave
jbe
mov
push
xor
test
xchg
lahf
cmp
inc
xor
pushf
shrl
jno
lahf
stc
cltd
push
aas
sbb
loop
mov
push
jno
pop
addr16
xor
mov
out
cmpsl
addr16
pop
outsl
enter
or
mov
iret
loop
add
cmp
lods
scas
shlb
cmpsl
sbb
push
aad
xchg
dec
jnp
push
out
adc
mov
into
dec
gs
imulb
mov
sub
mov
aad
stc
mov
sub
test
sbb
pop
and
insb
lock
stos
mov
lret
and
mov
repz
dec
fs
insb
fwait
imul
sahf
mov
imul
cli
cmp
test
outsb
stc
xor
cmpsb
cmpsl
xor
das
out
mov
mov
das
add
jo
cmp
in
or
jl
and
movsl
mov
push
pop
xchg
fdivrl
ret
mov
sbb
dec
divb
sarb
cmpsb
lock
and
xchg
sub
dec
mov
cmp
lcall
dec
mov
push
mov
cmpsl
mov
mov
test
pop
push
cs
jle,pt
adc
cmp
mov
add
add
inc
push
or
jo
mov
dec
push
addr16
cmp
andl
cmpsl
and
lods
scas
dec
mov
inc
leave
ss
mov
stc
and
das
ret
mov
jg
rol
jo
ljmp
stos
sub
cmp
xor
jp
mov
ja
jnp
es
xorl
adc
xor
xchg
fcompp
and
mov
mov
aaa
stos
sbbl
movsb
je
arpl
jge
dec
sub
in
jl
sub
gs
inc
mov
aas
sbb
xchg
js
cltd
mov
cmp
loope
lahf
lret
sub
xor
mov
out
pop
leave
call
jp
xor
lret
xchg
insb
sbb
imul
sub
in
jl
cmpsl
in
lcall
jge
rorl
leave
sahf
sahf
in
mov
push
lret
sub
sub
sbb
repz
xor
inc
mull
cmpsl
mov
cmovno
jl
mov
repz
or
cmp
xchg
stos
inc
mov
ficoml
loopne
push
sti
pop
adc
sub
outsl
ds
adc
out
cmc
cli
add
aam
and
fwait
pop
adc
fsubrs
push
mov
outsb
daa
jo
mov
aad
cwtl
jl
mov
jecxz
adc
sub
shlb
orl
lea
mov
jecxz
mov
int3
or
das
inc
orl
sbb
in
mov
mov
add
cmp
mov
jmp
xchg
into
jecxz
mull
xlat
ja
ss
sub
fmull
movsb
inc
adc
pop
lock
pop
ljmp
and
stc
mov
pop
cs
aam
jg
inc
movsl
and
or
xor
dec
mov
cli
nop
push
stc
in
or
jne
pop
data16
pop
add
iret
cmc
push
cmpsl
pop
mov
divl
mov
imul
and
push
stos
sahf
adc
frstor
lds
sbb
leave
xchg
xchg
sub
add
adc
icebp
call
xlat
adc
mov
add
test
mov
lahf
daa
test
pop
cwtl
jnp
lret
les
dec
das
orl
adc
jle
js
push
xorl
into
push
and
push
adc
pop
fstpt
iret
cmp
inc
test
subl
push
push
repz
sbb
mov
shll
adc
mov
mov
cmp
push
xchg
scas
test
mov
orl
mov
lods
shlb
pop
mov
rorb
mov
mov
push
mov
inc
mov
xchg
or
ljmp
or
aas
pop
fisubs
and
and
jecxz
mov
jecxz
mov
and
lea
dec
mov
fisubl
shrb
cmpsl
popf
jb
inc
and
xor
lods
ret
xchg
pop
mulb
xor
test
js
bound
mov
std
lods
ret
ret
dec
ret
adc
dec
sti
pop
sub
and
movl
jae
add
sub
iret
adc
push
or
pusha
xchg
mov
in
out
or
test
sub
mov
ljmp
pop
pop
mov
hlt
sahf
idivb
hlt
call
mov
inc
es
into
lock
into
lods
ss
push
icebp
cmp
jecxz
clc
lret
dec
pop
mov
mov
fists
inc
pop
sub
pop
lret
pop
or
in
andl
mov
mov
push
jecxz
stos
mov
enter
inc
jo
cmpb
sbb
dec
sub
ljmp
outsb
aad
xlat
push
mov
cmp
or
loop
insb
sahf
xor
inc
jmp
mov
lret
jo
mov
clc
sub
xor
lcall
jne
inc
pop
and
inc
xorl
mov
fimull
mov
inc
icebp
push
pop
pop
jp
inc
fcompl
test
push
sub
int3
cmp
fwait
xlat
lods
in
out
repz
add
push
scas
aaa
lahf
adcb
mov
jg
repnz
push
cmp
push
scas
out
aam
movl
leave
push
mov
mov
push
dec
dec
stc
std
inc
out
cwtl
dec
mov
pop
sti
call
out
lret
mov
test
das
pop
sahf
mov
mov
mov
ret
xor
aad
mov
lret
mov
mov
inc
sbb
xor
bound
xorl
clc
or
int
mov
insb
stos
movsb
outsl
xor
dec
push
loope
cmp
mov
mov
dec
push
stc
ficoms
aad
inc
inc
imul
xchg
cmp
dec
pusha
fwait
and
adc
pop
das
inc
fnstsw
scas
or
insb
sahf
xorl
movups
nop
les
add
xor
sbb
test
sti
test
insl
mov
mov
or
push
jnp
loop
inc
call
adc
lahf
insl
aam
cmp
js
cltd
popf
scas
gs
sub
insb
in
cmp
jb
push
push
repnz
push
and
jne
and
hlt
sub
mov
mov
pop
mov
xorb
cmp
ffree
das
xchg
scas
in
jl
in
out
lods
cmp
or
sub
insb
jnp
dec
gs
push
xchg
mov
movsl
jge
dec
push
int3
pop
inc
push
je
mov
fs
popa
dec
jo
sub
or
imul
lods
cmpsl
adc
sub
mov
arpl
into
adc
fwait
inc
dec
adc
xchg
lods
jne
or
mov
and
sti
loopne
gs
xor
add
mov
loopne
mov
and
dec
enter
out
scas
in
rclb
jge
test
cmpsb
mov
or
insl
insl
push
das
xor
ret
in
faddl
popa
cmp
adc
pop
movsl
xor
mov
outsb
out
ret
xchg
jle
xchg
push
in
and
dec
jle
cmpl
add
fisubrl
adc
imul
and
add
jae
xchg
cmp
and
test
aad
imulb
cmp
rcrl
adc
cmpsl
jp
cmp
push
sub
xchg
sub
int
mov
fwait
sti
in
lahf
jge
movsb
mov
insl
hlt
aam
iret
enter
xchg
insl
out
stos
xchg
jb
and
scas
jns
jns
sub
mov
test
jne
lds
loope
fwait
xchg
insb
jns
orb
sahf
cmp
xchg
and
pop
pop
pusha
test
clc
xor
sbb
insb
inc
je
inc
in
mov
xchg
xchg
repnz
and
pop
out
insl
mov
lret
inc
push
fcomip
xor
sub
sbb
pop
mov
int
cmpl
jp
jecxz
pop
sti
xor
sbb
imul
push
decb
js
lahf
jbe
nop
jns
or
jecxz
xchg
lret
les
leave
dec
scas
bsf
mov
mov
test
inc
std
xor
lcall
lret
testb
push
leave
pop
out
icebp
jg
cmp
xchg
dec
lock
cwtl
aas
shr
jge
adc
push
adc
in
cltd
divb
add
sub
sub
push
cmp
push
mov
cwtl
cmp
hlt
fwait
or
int3
pop
cmc
je
lock
dec
push
mov
fcompl
adc
loop
xchg
iret
pushf
arpl
mov
clc
and
cmpsl
or
adc
sub
sub
jl
adcl
mov
mov
je
fwait
addr16
inc
dec
fdivs
cmpsl
xor
jno
in
or
fidivrs
scas
lahf
clc
and
js
imul
ficompl
popa
push
insb
sbb
shl
enter
popf
push
mov
pop
cmp
jmp
cmpsb
enter
fistl
fisubrl
fs
xchg
inc
cmp
mov
push
jg
xor
stos
sbb
push
push
addb
adc
pop
and
cmp
ss
leave
insl
cmp
je
push
and
push
mov
in
jg
pop
mov
inc
pop
cmp
adcl
mov
jl
icebp
inc
pop
test
arpl
inc
adc
fisubrs
bound
lret
and
cmp
cmp
and
out
or
scas
insl
pop
or
inc
or
add
testb
adc
jae
aad
pop
inc
loope
scas
add
jecxz
icebp
sub
sub
mov
cmp
mov
cmp
mov
pop
loope
inc
or
out
mov
pop
mov
xchg
loopne
in
cwtl
push
insl
hlt
lock
xchg
inc
rcrl
and
xchg
pop
jp
fisubs
or
std
fs
xchg
sbb
inc
pop
cmp
or
dec
xchg
jno
add
mov
push
jbe
ret
std
mov
scas
shrl
in
sub
sar
sub
cmp
dec
sub
jno
repnz
mov
test
xchg
out
xchg
ret
or
loop
std
test
pop
mov
leave
xlat
lcall
jo
add
xor
insb
ret
out
rcll
push
cmc
iret
and
in
xchg
std
in
xor
loopne
cmp
cmp
cmp
fiaddl
inc
hlt
mov
push
jns
dec
mov
mov
inc
sarl
sub
mov
orl
sub
adc
sub
out
cld
mov
mov
sub
out
mov
int
lahf
sbb
inc
fidivrs
jg
xchg
or
outsl
bound
mov
insl
xchg
add
scas
push
lahf
ss
and
push
sub
add
pop
rorb
rcrl
cltd
int3
mov
dec
pop
pop
xor
hlt
ret
push
js
dec
xchg
lea
pop
clc
and
xchg
out
pop
into
inc
mov
cli
xchg
pop
hlt
jno
mov
jbe
repz
mov
and
inc
inc
jo
nop
data16
pop
and
mov
out
orb
push
fnsave
out
mov
sub
mov
movsb
ss
sbb
cmpsb
ds
cld
std
aam
jnp
fld
movsb
pop
lea
xor
jl
rorb
pusha
lahf
xor
jnp
jbe
repnz
shl
mov
lea
aaa
cmp
mov
cld
fs
in
sbb
cmp
push
fnstcw
ja
out
addr16
xchg
stos
xchg
pop
add
test
dec
pop
dec
add
cwtl
frstor
mov
push
cmp
lds
pop
xchg
sbb
mov
pushf
push
repnz
popf
pop
mov
jg
lds
cmp
fcmovu
test
icebp
pop
fs
imul
mov
mov
cmp
push
imul
fcmovb
mov
jp
loop
jno
mov
ljmp
lcall
leave
fwait
aas
mov
xchg
into
add
and
popf
int
add
pop
addr16
jno
jb
lret
or
pushf
or
cmp
ret
enter
mov
pop
inc
rorb
rclb
dec
jnp
or
imul
out
sbb
jle
insb
cltd
imul
mov
xchg
mov
adc
rorb
mov
jmp
xor
dec
xchg
call
sbb
cmc
mov
fildl
mov
cld
push
rclb
fwait
xlat
dec
sbbl
mov
push
add
sbb
aaa
inc
lea
mull
es
add
addr16
dec
lahf
adc
cltd
pop
push
sub
in
sbb
int3
mov
out
cli
adc
push
mov
add
xor
add
mov
daa
xchg
fcomps
loope
xorl
lods
lods
roll
add
in
inc
xor
pop
jne
rorb
pop
int
dec
cld
sti
mov
lds
test
outsl
lods
mov
std
xor
push
lahf
testl
or
sub
or
or
stc
mov
int3
dec
sbb
xorb
loopne
xor
sarb
stos
lds
cmp
dec
cmovl
fmull
adc
pop
adc
jge
das
ss
leave
or
hlt
clc
xor
push
cmp
sub
push
or
jl
push
rcrb
pop
fisttpl
lret
and
or
pop
xor
push
mov
xor
mov
adc
inc
cli
mov
add
mov
or
adc
inc
clc
daa
or
cltd
rclb
in
or
mov
jno
jne
fwait
jg
test
fcmovnbe
jmp
sbb
filds
xor
push
fistpl
inc
fnsave
leave
inc
add
movsl
in
lret
fwait
hlt
add
insl
sub
xor
jg
push
call
insb
inc
and
popf
pushl
fs
add
jb
icebp
jo
aam
sbb
sahf
pop
out
push
xor
xor
inc
aam
or
sub
aaa
mov
lret
xor
fdivl
sbb
hlt
fwait
pop
mov
inc
jae
cli
pushf
out
movsb
dec
fisttpl
hlt
popf
push
call
movsb
pusha
mov
je
test
es
pop
pop
ret
or
inc
imul
add
addr16
push
cmc
pushf
dec
andl
jecxz
mov
mov
or
dec
movsb
jbe
fs
push
or
and
ss
lds
movsl
mov
mov
shlb
jmp
and
or
outsb
pusha
jl
movsl
jae
jne
sub
loop
push
push
cmp
bound
data16
jb
movsb
cmp
jns
dec
lock
int
cmp
jp
jnp
lock
mov
aam
out
xor
ret
nop
gs
push
in
adc
dec
sbb
sub
lods
xor
mov
popa
xor
das
dec
mov
lcall
cmp
add
and
jp
xor
loope
fdiv
pop
mov
add
xor
mov
and
rclb
and
stos
or
dec
std
xlat
mov
inc
out
jbe,pn
pop
leave
lods
xchg
jl
ret
jns
cmpsb
pop
hlt
rsqrtps
shll
out
outsb
jle
stos
jno
add
dec
idivl
xchg
hlt
lret
cltd
aam
jge
mov
and
fistl
out
jecxz
sbb
jno
iret
pop
sbb
cld
arpl
mov
mov
lods
adc
lds
jg
int3
lea
push
push
inc
hlt
adc
mov
dec
adc
out
aad
sbb
mov
aad
sbb
jg
add
test
xchg
jge
mov
jne
cmp
xchg
cld
jno
mov
jns
ret
or
sub
iret
iret
pop
jmp
pop
inc
jg
mov
rcrb
aas
xor
ja
roll
add
popf
iret
sbb
out
or
sbb
test
mov
ds
in
into
xchg
pop
dec
jge
sarb
or
mov
mov
jl
push
in
in
mov
add
pop
subb
sub
inc
sub
aas
ret
stos
pusha
rorb
jae
movsb
ss
mov
cvtpi2ps
add
shl
daa
imul
sub
aad
mov
xchg
pop
cli
push
mov
aad
ljmp
jnp
mov
shlb
jle
sub
inc
rcll
jo
ret
fmul
push
data16
mov
call
pop
push
clc
mov
ret
sbb
sahf
int3
mov
pop
loope
sbb
jno
dec
mov
xchg
rcll
push
in
jecxz
jns
fadds
stos
lcall
dec
xchg
inc
mov
insb
or
sub
mov
cmp
outsb
cmp
ja
adc
pop
dec
mov
cmp
jmp
int
mov
mov
and
insb
jmp
out
pop
rcrb
test
or
pop
pushf
lahf
jns
push
xchg
cmp
xchg
xchg
cld
dec
stc
and
or
or
jmp
and
stos
mov
fwait
push
mov
cld
mov
fcmovu
inc
cmpsb
outsl
add
adc
cmp
push
jb
mov
pop
mov
fsubrl
push
push
push
or
push
lret
dec
ja
cmp
test
mov
or
dec
or
pop
jns
scas
insl
inc
sbb
add
pop
or
or
dec
out
out
mov
xor
mov
aaa
pop
jbe
mov
test
pop
adc
nop
fistps
add
andb
pop
iret
in
ds
and
test
jnp
cwtl
repnz
sbb
xor
push
rorl
sub
divl
mov
movsb
xchg
dec
and
dec
jnp
mov
mov
jae
inc
call
xchg
cwtl
enter
sbb
and
add
pop
sub
push
fcmovbe
loopne
and
testl
pop
cmp
test
pop
mov
mov
xchg
insl
test
jl
out
jb
jecxz
inc
add
test
mov
push
rol
and
jg
mov
test
les
or
sti
adc
sub
mov
push
sub
test
loopne
movsb
lock
loope
push
push
les
fsubl
packsswb
xchg
jl
int
insb
ss
pushf
pusha
in
mov
lods
add
xor
push
and
ljmp
sbb
or
xor
aaa
push
test
rcr
xor
push
mov
in
adc
mov
lahf
out
adc
ljmp
loop
int3
sub
add
imul
rorl
sbbb
test
cmpsb
scas
inc
adc
sub
int
mov
pop
arpl
xchg
add
or
and
mov
outsb
mov
and
subl
cmp
shrb
vphadduwd
jo
jb
dec
inc
jge
leave
mov
pusha
outsb
sbb
inc
cmpsb
pop
cmp
fwait
inc
cwtl
in
or
mov
ljmp
jns
sbbb
lea
rorl
mov
jge
cs
mov
outsl
xchg
lock
mov
inc
psrad
in
js
jp
in
pop
dec
push
les
sti
push
mov
ja
push
jecxz
sti
jmp
sub
pop
mov
bound
inc
dec
rcll
mov
mov
xchg
mov
enter
inc
or
enter
movsl
nop
inc
sahf
sbb
mov
sti
inc
lods
cmp
mov
push
outsl
or
jns
sub
pop
stos
jmp
imul
test
pop
push
mov
push
aas
lret
insb
dec
inc
pop
jbe
push
and
sbb
push
sub
jecxz
push
push
inc
cmpsl
fildl
enter
xchg
mov
or
sub
dec
jo
clc
inc
popf
cmp
adc
js
out
ret
cltd
xchg
push
or
cmpb
xchg
cmp
add
mov
push
dec
shll
out
sub
not
jge
fucomi
cmp
popf
sbb
inc
sbb
hlt
pop
inc
xor
enter
pop
outsb
mov
imul
aad
repnz
cs
fwait
loopne
pop
out
shll
mov
push
pop
jns
cmpsl
xor
incl
pop
and
scas
or
fistpl
adc
cs
arpl
mov
and
adc
dec
int
xchg
repnz
maskmovq
testl
rolb
in
jle,pn
push
mov
dec
cltd
push
out
mov
adc
fdivrl
inc
adc
xor
or
sbb
ret
fucom
inc
xchg
sub
enter
pop
pop
xchg
ret
dec
cmp
shlb
xchg
and
cmp
sub
xchg
sub
xchg
fwait
pusha
andb
xor
fnstcw
mov
dec
mov
inc
dec
testb
sti
fcmovbe
je
stc
es
push
in
inc
xchg
mov
xchg
mov
sbb
or
cmpsb
and
cmp
mov
dec
faddl
xchg
mov
adc
sti
pushl
aas
lret
test
jg
lret
pop
xchg
jmp
out
sti
jp
cmp
test
cld
adc
dec
les
mov
outsl
sti
pop
lret
inc
mov
xchg
rcrl
minps
cld
jno
cwtl
rcll
pop
push
dec
xor
add
je
in
je
shll
ss
dec
hlt
pop
int3
xor
push
mov
jns
sbb
mul
sbb
scas
ja
bnd
lcall
xchg
adc
sbb
jae
dec
mov
fcompl
in
loope
in
jnp
inc
in
sub
sbb
mov
les
mov
cmc
add
xchg
adc
insb
not
inc
mov
sub
jmp
xchg
enter
mov
sbb
fnstenv
insb
jo
adc
pushf
test
sbb
jo
pop
fiadds
les
push
sbbb
pop
xchg
insl
cmp
shlb
jns
mov
wrmsr
and
and
daa
imul
int
mov
jbe
push
and
dec
jns
es
out
in
jb
enter
pop
inc
jmp
jmp
stos
call
push
inc
mov
adc
fcoml
repnz
bound
popa
or
sub
leave
push
sub
pop
cmp
mov
test
loopne
cs
or
call
cmp
add
out
mov
inc
adc
mov
popa
stos
out
cwtl
add
inc
mov
shlb
popl
jae
inc
movsb
int3
enter
out
inc
cltd
sub
pusha
shll
movsb
lret
inc
lcall
adc
fwait
adc
ja
push
arpl
pop
out
ljmp
or
roll
mov
enter
push
mov
add
cmp
mov
push
dec
mov
andb
mov
int
into
out
mov
xchg
jb
jp
popf
dec
mov
add
pop
paddd
mov
enter
insb
lods
push
int3
pop
pop
sub
push
add
movsl
inc
dec
or
xchg
mov
push
ja
mov
dec
mov
loop
arpl
push
jp
clc
xor
mov
mov
or
idiv
cld
xor
es
and
sbb
lea
pusha
and
sbb
lods
pop
shr
outsl
push
mov
xor
cmc
cs
dec
push
mov
imul
dec
add
sti
push
popf
push
movsb
mov
mov
mov
sbb
mov
bound
mov
out
push
cmpsb
mov
jge,pt
pusha
data16
cltd
push
andb
mov
cmpsb
cmp
xlat
insl
sbb
and
pusha
rcr
into
pop
jno
aad
pop
or
aaa
pop
inc
and
sub
test
es
cltd
mov
std
mov
xor
cmpsl
xor
adc
rcrb
and
cmp
sti
scas
imul
jne
mov
adc
add
xchg
lret
xlat
outsl
loop
mov
inc
insl
cmp
dec
push
mov
idiv
ljmp
xchg
mov
jg
test
adc
pop
pusha
test
jle
cmpsl
sub
cmp
add
stos
iret
dec
jns
sbb
sbb
xchg
out
mov
in
or
inc
mov
stos
out
xor
or
jl
cltd
lcall
adc
push
jmp
rolb
icebp
gs
fstl
nop
or
jl
sbb
push
sbb
cli
mov
sub
test
into
dec
or
lcall
xor
cmp
pop
push
adc
mov
jb
mov
and
call
mov
scas
xchg
push
ljmp
dec
inc
loop
shrb
or
dec
in
call
and
mov
push
std
mov
lds
loopw
shlb
cmc
pop
add
push
repz
pop
iret
mov
jl
xor
stc
cmp
cmp
jg
ret
push
sub
pop
sbb
ljmp
dec
pop
sbb
in
inc
aas
das
pop
cmp
dec
or
stos
and
lea
xchg
lds
dec
jge
cmp
mov
and
scas
xor
sbb
add
push
jbe
mov
xchg
xor
add
lock
adc
push
ficomps
mov
out
mov
iret
cwtl
ljmp
cltd
lahf
pushf
jmp
xor
pop
shll
ljmp
mov
ret
sub
mov
mov
call
mov
or
inc
or
popa
cmp
pop
inc
add
out
cltd
mov
aaa
sti
outsb
or
push
add
lret
jbe
lock
or
pop
daa
aam
test
jne
cmpsl
loope
cmp
inc
pop
daa
repnz
enter
sarl
mov
jb
jg
test
jns
cmc
into
imulb
add
fbld
rol
or
jb
pop
iret
and
add
ret
icebp
mov
pop
fsubr
lods
mov
adc
scas
push
mov
jnp
add
xor
popa
xchg
jne
lea
dec
mov
pop
iret
lods
sbb
out
pop
shll
test
mov
and
call
pop
mov
pop
xchg
add
fld
roll
test
sti
and
in
or
cmc
movsb
cmp
test
sbb
fisubs
pop
inc
les
bswap
push
dec
daa
rcrl
dec
xorl
jnp
xchg
xlat
cmp
jnp
neg
scas
sub
cmp
mov
sahf
sub
add
sbb
inc
mov
test
sub
ljmp
gs
call
and
cltd
rcr
sbb
push
or
mov
ja
mov
cli
or
xlat
filds
cmp
popa
xor
movsb
mov
or
and
pop
pop
push
adc
cmc
lods
jmp
cmp
cmp
cmpsl
dec
aad
mov
push
int
and
cmp
ds
and
and
not
mov
mov
arpl
cmp
mov
and
xchg
xchg
mov
cmp
cmpsb
adc
movsb
mov
cmovp
pop
jp
aad
push
aaa
and
js
xor
cmp
or
cmp
mov
lds
dec
push
or
jb
adc
enter
push
iret
iret
repnz
adc
mov
pop
in
fmulp
mov
mov
mov
xchg
push
xor
mov
loope
and
dec
adc
decl
lods
mov
jg
and
std
cmpsl
mov
dec
xchg
in
add
xchg
repz
outsb
bnd
cmp
clc
mov
mov
vhaddps
xor
outsb
adc
push
inc
or
dec
push
push
mov
clc
xor
aad
cli
testl
test
sbb
orl
loope
inc
jbe
jg
vucomisd
inc
out
mov
int
adc
mov
inc
pop
adc
iret
nop
daa
mov
mov
in
rcl
add
pop
out
jbe
ds
xor
movsl
mov
test
subb
movsb
jecxz
xor
xor
out
addr16
inc
fs
fsubl
test
xchg
cs
in
aaa
fisubrs
dec
popf
jecxz
out
pop
mov
xor
filds
bound
lret
outsl
mov
int
bound
mov
stc
sub
and
sub
int
movsb
movsl
jmp
push
movsb
mov
xchg
popa
inc
in
fsubr
pushf
add
pop
test
out
inc
pop
pop
roll
int3
loope
mov
dec
std
call
sbb
loopne
mov
xor
lret
jl
push
mov
inc
iret
sbb
push
divb
sub
addl
sub
call
inc
xlat
sahf
lods
jmp
or
push
stos
subb
mov
and
jecxz
es
mov
xor
popa
mov
ds
pop
mov
cmp
xchg
jnp
outsl
mov
mov
pop
pushf
insb
mov
jge
add
xchg
test
scas
or
inc
lea
jne
xor
mov
and
psubw
lret
fstp
pop
dec
xchg
lret
loope
push
ljmp
xchg
pop
iret
scas
test
adc
gs
push
aad
dec
push
sub
out
or
js
mov
jp
fcmovbe
adc
push
cmp
add
xor
loope
movsl
cmp
iret
pop
ss
rcrl
std
xor
jmp
adcb
add
xchg
int
dec
mov
sti
mov
and
inc
pop
adc
mov
xorb
mov
fmul
stos
dec
fsubl
jo
repnz
mov
in
mov
mov
aam
xor
aas
idivl
repnz
clc
scas
loope
and
cmpsb
push
dec
mov
sub
nop
inc
bound
pop
inc
pop
sarl
movsl
test
adc
mov
inc
mov
sbb
or
jo
mov
call
inc
jmp
push
pop
jmp
testb
repnz
lahf
and
xlat
sbb
sahf
or
aas
sub
push
repnz
stos
add
sbb
xchg
icebp
les
out
into
andb
xchg
aaa
ret
inc
add
pop
fimuls
data16
por
inc
mov
insl
scas
dec
popf
and
xchg
andb
loopne
cmp
fiaddl
push
mov
out
call
in
dec
sbb
stc
into
mov
dec
cmp
add
mov
sbb
out
repnz
mov
gs
mov
and
jg
outsb
fyl2x
cmc
out
pop
test
icebp
lods
xchg
idivb
sub
jns
and
inc
mov
pop
decl
jg
aam
insl
jg
cwtl
push
push
push
es
inc
sti
js
push
paddd
in
pmaxub
cmp
cmp
sub
stc
hlt
les
dec
xchg
scas
fidivrl
es
js
gs
mov
push
add
jae
cmp
pusha
or
push
jnp
mov
aam
push
pop
in
xor
mov
int3
cld
xorb
clc
xchg
movsl
scas
dec
pop
leave
and
xor
sbb
dec
jne
inc
xor
xlat
add
popa
adc
popa
fwait
int3
xor
mov
ds
cli
mov
cmp
lahf
in
fmull
mov
jns
out
fsubrp
jge
push
into
jns
pusha
ficoml
push
xchg
push
test
in
lret
or
push
jge
clc
in
xchg
sbb
inc
push
out
ljmp
icebp
out
xchg
lcall
inc
lods
popf
aad
mov
cltd
jb
scas
leave
and
xchg
scas
cmc
mov
enter
pop
pop
cwtl
stc
iret
fdivrl
imul
iret
cmp
shll
loop
mov
cmp
aas
cltd
adc
into
xor
aad
test
shlb
fiaddl
addl
cmp
out
jmp
inc
test
cmp
test
add
cmp
jb
gs
jno
test
repz
into
dec
inc
cmc
jbe
iret
add
dec
test
dec
stos
sub
dec
sbb
std
fimull
xor
mov
add
xor
cmp
pop
xor
push
mov
mov
mov
ret
enter
sbb
out
adc
orl
mov
testl
mov
imul
in
jl
cmp
rcl
jle
fnstenv
test
xor
xchg
out
mov
imul
fcoml
js
jno
or
mov
insb
dec
cmp
push
fidivl
mov
push
jnp
inc
dec
or
imul
inc
pop
rcrl
rol
std
scas
sti
adcb
icebp
pop
xor
push
jl
and
sarb
mov
fisubl
dec
sub
mov
hlt
lea
and
pop
and
incb
xchg
jg
pusha
ficoms
jno
push
inc
mov
lret
or
call
call
inc
and
fsubs
push
jnp
lcall
xor
add
jp
daa
mov
pop
or
push
call
repnz
or
mov
push
shl
xchg
repnz
fcomps
push
jae,pt
int3
ds
adc
lahf
mov
shlb
inc
xchg
adc
xchg
adc
in
xor
mov
nop
cld
test
xor
std
fldenv
je
dec
enterw
jb
add
mov
inc
cmp
dec
repz
shl
jne
xchg
pop
test
add
insl
inc
push
cmc
test
adc
movsb
mov
je
loope
popl
mov
mov
stc
mov
out
jb
aam
inc
mov
ds
mov
cmp
add
aas
xchg
sub
add
jbe
mov
and
inc
fs
add
cli
fisubl
out
cld
xor
pushl
cmp
push
nop
outsb
push
xchg
lods
xor
inc
mov
shll
push
mov
mov
das
sbb
or
test
aam
loopne
in
xchg
fstpl
cmpsl
iret
push
mov
lret
and
xor
push
stos
sahf
outsb
add
add
pushf
aad
xor
jns
mov
dec
popa
inc
shll
iret
test
dec
sub
aad
out
sti
cmpsb
mov
or
pop
rep
int
in
das
xor
sub
pop
and
jmp
out
fwait
sub
add
push
repz
inc
test
jno
inc
aam
shll
dec
push
sub
int3
pushf
xchg
and
mov
rcrl
outsl
or
fldt
dec
dec
lcall
mov
lea
aad
int
sub
jae
cmp
rep
ds
jne
jle
lods
in
sub
in
cmp
xchg
jmp
or
push
pop
scas
fs
mov
inc
insl
sub
pop
call
ljmp
mov
xor
out
fidivl
push
call
out
jp
loop
xchg
lret
lret
iret
movsl
mov
pusha
jmp
pop
lock
xchg
or
cld
lahf
fisubrl
lcall
in
fstpt
push
push
rolb
loopne
in
bnd
push
mov
in
mov
repz
pop
jne
mov
xchg
mov
jnp
inc
dec
sbb
xor
mov
cmp
cmp
sbbb
or
popa
lret
and
jg
jge
mov
ljmp
std
sbb
push
test
adc
sub
or
xchg
mov
adc
sub
and
push
fisubrs
das
push
jg
cmpb
jmp
xchg
addr16
outsl
popf
xor
adc
bound
repnz
or
stos
test
sbb
or
lds
mov
es
sbb
or
push
jb
xor
cmpsb
sahf
push
loope
aas
out
jno
fldenv
pop
test
or
bound
mov
push
pusha
imul
lcall
int3
xchg
sub
mov
fisttpl
lret
and
cmp
cltd
stc
inc
mov
sarb
xchg
xlat
movl
xchg
hlt
ja
sub
mov
or
inc
std
jae
xchg
lods
cmp
adc
outsl
push
inc
mov
jb
push
pop
pushf
and
dec
call
stos
add
sbb
push
sub
int
adc
sbb
or
ss
cld
mov
filds
xchg
in
jb
add
notl
mull
pop
push
roll
rorl
std
js
mov
mov
push
xchg
push
into
or
pop
jb
jne
fildl
push
shll
sbb
imul
loopne
jb
outsl
or
pop
push
and
mov
shlb
xchg
dec
mov
andb
add
sbb
xor
cmp
jb
mov
mov
into
lahf
fildll
cmpsl
gs
outsb
aam
push
push
jo
lods
push
push
jne
xchg
ds
dec
and
cmp
sbb
xchg
xor
or
xlat
jbe,pt
lret
call
lods
rcrl
xchg
lcall
add
lea
mov
loop
test
lds
bound
in
xchg
lcall
mov
push
sub
adc
mov
adc
mov
lahf
jno
mov
pop
jp
or
repnz
and
mov
test
mov
test
push
imul
push
sub
or
sbb
xor
out
adc
insl
cltd
dec
test
out
ja
mov
dec
cmp
inc
imul
pop
mov
roll
dec
loop
pop
inc
dec
push
js
push
xor
pushf
mov
adc
add
or
out
lods
jnp
adcb
cmpsl
jo
loop
pop
test
mov
sahf
sahf
mov
aam
pushf
clc
inc
lods
pop
xor
mov
dec
jbe
jl
cmpsl
ret
fnstcw
or
popf
mov
jbe
popw
in
out
imul
push
rcrb
and
cmpsb
lea
testl
daa
ret
mov
outsl
lea
rcl
dec
idivb
cmp
mov
icebp
aaa
ret
js
popa
fwait
xchg
fstpl
outsb
cli
cmp
pop
xchg
fisubrl
dec
adc
mov
fistl
xchg
aaa
cmp
pop
pop
mov
aam
dec
bound
jle
shll
iret
insl
jl
popa
add
add
mov
jecxz
mov
mov
lret
es
dec
sub
repnz
inc
aad
jns
leave
mov
gs
jge
xchg
addl
dec
xchg
inc
or
sub
xlat
aad
mov
sbb
xchg
std
cmp
loopne
mov
sbb
in
insl
cmp
inc
inc
xor
push
filds
pop
fsts
roll
xchg
stos
imul
addb
and
fisttps
enter
into
dec
push
push
fcoms
outsb
cmp
mov
inc
inc
daa
xchg
sarl
and
inc
aad
push
lods
xchg
inc
cmp
ret
push
mov
mov
outsb
shrl
mov
jmp
in
jecxz
mov
pop
hlt
ret
rorb
out
sbb
shlb
push
sub
inc
jb
jl
fstpt
std
sarl
push
add
adc
xor
jle
mov
cmp
cmp
sub
xchg
jg
aaa
xchg
jp
xchg
xchg
mov
adc
popf
sub
jmp
arpl
fdivrs
jbe
jne
push
arpl
mov
inc
adc
popa
push
sbbl
jns
mov
stos
leave
es
mov
add
xchg
or
ret
sub
les
gs
inc
lds
dec
pop
pop
fwait
or
mov
fcmovnbe
dec
out
dec
and
int
sub
or
cmp
addl
add
js
int
test
loop
ficoms
or
pop
jl
rcrl
cmp
xchg
xor
scas
push
pop
pop
or
adc
xchg
sub
loope
xchg
test
mov
arpl
jb
in
in
daa
dec
lock
xlat
lahf
mov
adc
sbb
xorl
pop
dec
outsl
xlat
sti
or
mov
jo
sub
push
pop
pop
push
ret
popf
or
lcall
ljmp
or
add
sbb
xor
lahf
pop
scas
int3
push
sbb
add
jbe
xor
sbb
cwtl
cmpsb
jg
xchg
mov
nop
into
sub
push
dec
cmp
mov
or
ret
inc
adc
xchg
jle
mov
or
pop
mov
loopne
popf
cs
jp
dec
ja
mov
je
pop
fsubl
insb
pusha
in
iret
sub
addr16
test
pop
dec
sub
jle
lds
imul
mov
mov
adc
into
xchg
push
mov
mov
pop
mov
add
xor
mov
mull
repz
mov
pusha
mov
mov
pusha
stos
push
shrb
pop
cmc
mov
ret
sub
or
ss
popl
mov
jp
test
push
pop
shll
fadds
dec
add
test
int3
in
inc
lock
std
inc
dec
and
jp
loop
xor
lock
push
aad
and
mov
adcb
add
mov
sub
ljmp
jecxz
mov
scas
dec
aaa
std
pop
push
ret
cmp
mov
sti
nop
test
jg
mov
cmpsb
mov
jmp
lea
fwait
jecxz,pn
mov
cmpsb
in
cltd
std
aad
sbbl
push
ss
xor
cld
negl
or
dec
sarb
sbb
ds
lock
dec
lods
orb
xor
test
fwait
lret
leave
pop
or
inc
scas
jnp
push
adc
pushf
in
ficompl
sbb
and
adc
jbe
mov
mov
or
icebp
pushf
out
jp
lods
popa
andl
mov
push
aam
sbb
aaa
xchg
cltd
xchg
mov
lea
int
out
add
int3
stos
imulb
xchg
add
int
testl
inc
mov
pop
add
jmp
pusha
cmc
mov
xchg
push
sub
in
sub
cmpl
dec
dec
enter
pop
movsl
dec
test
adc
sbb
add
sub
xchg
in
fnstenv
fmull
adc
jae
rcl
pop
jl
fildl
scas
into
shlb
jno
inc
addr16
arpl
push
in
stos
sub
add
mov
sbb
inc
inc
sbb
inc
cmp
sub
in
stc
inc
adc
xchg
into
aam
and
imul
mov
clc
clc
rcrb
dec
adc
pop
lret
aam
lret
bound
stos
insb
leave
pop
jne
loop
mov
loopne
or
jl
jnp
and
lock
mov
sub
cli
mov
sub
fwait
push
push
cmp
sub
rcrl
jge
adc
or
pop
mov
mov
imul
loope
and
shr
lods
cs
xor
xchg
int
cs
dec
xor
or
fwait
lret
jb
push
pop
cmpsb
mov
sbb
stos
mov
lahf
sbb
mov
pusha
sub
pop
aaa
cwtl
and
fwait
int3
in
pop
test
outsl
in
xchg
test
rcl
in
push
mov
les
mov
popa
ja
xchg
cmp
dec
or
aam
lods
fdivrs
add
jp
or
pop
rol
pusha
push
cmp
sti
mov
lds
pop
cmp
pop
and
addb
adc
add
dec
ja
in
push
repnz
dec
mov
sahf
and
xchg
jmp
in
lock
fs
mov
loope
ja
mov
popa
cmpsb
test
loop
nop
push
jne
mov
push
xchg
sub
out
inc
aad
mov
jae
mov
es
ljmp
or
mov
fiaddl
stos
fdivs
push
push
test
inc
aas
sub
outsl
sub
jl
cmp
or
mov
push
or
dec
cltd
fsubp
ret
leave
inc
cmp
ret
mov
jae
push
loopne
rorl
les
repz
ficompl
sbb
stc
jo
movsl
sti
jp
mov
rol
aaa
out
and
xor
nop
std
push
popf
imul
stos
out
jne
jns
xchg
and
push
out
mov
cmp
add
inc
and
stos
or
out
scas
in
pushf
jge
shlb
sub
sbb
dec
lock
add
stc
cmpsl
dec
inc
add
add
nop
sti
adc
test
mov
sbb
fs
cmp
pushf
add
roll
mov
mov
sbb
and
cmc
xchg
adc
mov
dec
jmp
mov
cwtl
jp
jae
adcb
jne
pop
and
fmull
je
loopne
adcb
and
cs
cli
popf
jno
or
push
jg
dec
cmp
out
pop
pop
test
adc
sbb
jp
mov
imull
mov
inc
pop
sub
imul
sarl
xchg
cmp
jne
push
adc
jl
lock
sub
xchg
push
mov
out
add
jmp
sbb
repnz
and
cmpsb
je
add
aam
add
push
xor
adc
mov
sub
in
xor
sub
testb
stos
lahf
ret
dec
or
jg
fldlg2
mov
inc
ret
insb
jb
jp
cmp
mov
jbe
movsl
cmpl
or
adc
pop
stos
in
lret
inc
xchg
lods
sub
xor
divb
cld
push
jne
lret
push
jg
dec
sbb
lods
sbb
xchg
adc
fninit
inc
mov
sbb
or
xor
clc
cmpb
mov
pop
xorb
xchg
and
or
push
mov
and
sub
mov
movsl
test
push
xchg
loope
cmpsl
pop
ret
lcall
mov
adc
jmp
mov
ss
xchg
loop
lret
adc
jmp
in
sbb
jno
les
in
adc
ret
cmc
fs
inc
out
jnp
jmp
push
rorl
fptan
and
bound
jne
sarl
movsb
ss
sbb
movsl
cmp
mov
cmpsb
xlat
jnp
pop
outsl
push
cltd
jb
jnp
sbb
stc
fistl
fidivrl
push
lods
adc
pop
adc
in
add
inc
clc
xor
shlb
es
mov
bnd
loopne
mov
or
cld
data16
inc
jg
push
add
mov
cs
xchg
dec
rclb
adc
loopne
mov
js
loopne
sti
jbe
repnz
dec
mov
stos
dec
iret
imul
imul
insl
shll
test
lcall
lret
jbe
mov
leave
hlt
ljmp
dec
jp
jnp
mov
or
ret
movsb
pop
fs
mov
xchg
jae
adc
call
or
lods
test
or
jle
sub
bound
mov
mov
adc
mov
je
rol
mov
hlt
repnz
push
ljmp
sbb
pushf
scas
push
mov
pop
sti
ss
fcoml
mull
mov
push
call
adc
xchg
jbe
mov
loope
outsb
cld
jb
inc
jecxz
aas
push
add
addr16
pop
xchg
adc
sbb
loopne
lret
sub
push
jnp
lds
das
add
sub
mov
les
out
daa
sahf
inc
in
mov
icebp
jae
jno
cld
push
shlb
inc
jne
add
cmp
popa
inc
and
jge
orb
pop
lcall
sub
lcall
mov
imul
scas
push
push
add
shl
cmp
sarb
iret
daa
cmc
insl
adc
adc
neg
xor
testl
xchg
pop
mov
push
or
dec
icebp
addr16
or
fmul
push
pop
ljmp
outsb
icebp
adc
push
jb
adc
lret
dec
fs
or
lock
push
mov
popa
outsb
and
or
cld
pop
mov
push
out
jge
cmp
xor
movsb
push
sub
dec
pusha
insl
pop
daa
fidivl
mov
adc
jl
daa
ret
cmp
shl
inc
shl
sub
sbb
aaa
mov
sar
sub
pop
cmp
test
xor
cmp
add
jecxz
ds
xchg
rcll
into
mov
xor
insl
shll
xor
or
dec
aas
cmp
pop
xchg
add
adc
cmpsl
cmp
fnsave
mov
cltd
das
pop
mov
int3
mov
sbb
cmp
aas
pushf
dec
insb
mov
inc
xchg
pop
int3
bound
les
and
adc
xor
outsb
and
pop
pop
adc
fdiv
frstor
fcom
loopne
into
insl
adc
enter
hlt
push
xchg
xchg
mov
dec
outsb
into
icebp
sahf
lret
sbb
fists
jmp
int
out
sar
sub
daa
mov
shrb
cs
push
shr
pushf
xor
mov
iret
dec
loopne
adc
movsb
xchg
jl
push
or
test
iret
hlt
sti
ret
int3
jmp
push
push
aaa
dec
dec
jo
mov
inc
pop
nop
out
dec
inc
mov
mov
adc
sbb
roll
mov
cmpsl
mov
daa
mov
fwait
subb
jecxz
nop
or
std
xchg
cmc
subl
mov
repz
in
jno
and
push
jnp
out
dec
jnp
pop
es
push
rcll
and
add
mov
push
xchg
sbb
sub
mov
in
mov
cld
mull
shl
in
in
pop
xchg
cmp
xor
jnp
cltd
mov
lret
inc
popa
dec
mov
sbb
fs
mov
ljmp
fxtract
mov
sub
inc
mov
rcrl
and
jns
and
mov
cli
xchg
mov
or
cltd
or
sbb
adc
addl
cmpsl
movl
jmp
sbb
cmp
lret
pop
xchg
decl
xchg
and
scas
inc
nop
scas
shrb
add
mov
int
insb
lahf
cld
into
dec
cmp
stos
pop
and
jo
je
sub
aam
imul
pop
sub
and
mov
inc
mov
or
mov
jmp
lock
sbb
xchg
cmp
adc
js
aas
out
ret
mov
mov
add
jo
inc
sbb
lret
adc
scas
xor
cli
int3
push
cmpsb
xor
test
in
add
movsb
ja
inc
pop
fwait
hlt
mov
rcll
inc
xor
mov
aaa
repz
pop
cli
es
sbb
sbb
int
add
xchg
fimuls
stc
cmp
mov
xchg
lret
mov
push
inc
mov
push
xchg
test
and
movsl
into
das
leave
cmc
bswap
test
test
addr16
out
in
mov
xchg
sar
addr16
sbb
bound
das
daa
xchg
mov
popa
test
pop
pop
fs
cmp
jbe
pop
out
mov
dec
dec
ss
or
incl
mov
cmc
mov
jns
into
sub
lock
loop
lods
jae
test
mov
movsb
pop
cltd
xchg
and
sub
xchg
jnp
dec
jae
mov
cmpsl
pop
and
sbb
idivl
xchg
mov
adc
jno
call
ret
dec
dec
ss
icebp
ret
pop
bound
pop
xor
mov
movsb
aam
out
and
cltd
pop
dec
push
mull
mov
inc
xor
and
dec
sub
sub
inc
out
enter
xor
dec
push
rorb
sub
push
ds
pop
je
mov
sarl
dec
int
cld
lret
add
xchg
inc
push
call
loopne
jnp
in
mov
lock
fbld
mov
in
push
lahf
in
push
dec
in
cwtl
pushf
lods
in
add
mov
cmpsl
mov
call
push
adc
outsb
inc
jl
rcll
aas
mov
inc
fs
xchg
and
or
xor
push
cmp
repz
push
ljmp
mov
jmp
ret
in
mov
aaa
xor
adc
out
mov
add
shlb
cmp
and
jge
mov
loope
imul
push
pop
les
add
stos
ret
popa
dec
movsb
int
out
xchg
stc
lret
movsb
das
or
jmp
push
xchg
push
sbb
lods
jl
movsb
push
inc
movsb
or
test
xchg
fcoms
aaa
jg
xor
push
jo
test
test
add
adc
add
mov
dec
je
xor
adc
dec
out
in
aas
push
push
imul
gs
mov
idivb
fdivrl
xor
jecxz
mov
push
jle
loop
outsl
sub
sti
xchg
ret
in
out
loop
fidivl
sahf
or
decl
sbb
jl
std
sub
xchg
sbb
pop
lahf
ljmp
cwtl
jle
xlat
sbb
loopne
insl
jns
out
sbb
push
aas
fst
push
sub
imul
movsb
mov
loopne
ljmp
cltd
push
scas
and
jae
out
xor
test
xchg
iret
in
or
dec
mov
xchg
pop
add
pop
mov
jb
lds
jge
sbb
arpl
insb
push
mov
jl
sbb
ss
push
sbb
pop
pop
add
mov
mov
cmp
scas
outsl
icebp
jnp
inc
lods
faddp
outsl
call
sub
jae
rorb
popa
mov
cmp
into
popf
mov
ja
inc
cli
mov
mov
in
dec
pushf
cwtl
jge
sarl
mov
sbb
xchg
fwait
xchg
or
jb
sub
div
sub
adc
pop
aaa
sbbb
jae
aas
cmovle
or
lods
stc
pop
mov
hlt
mov
out
js
adc
shll
push
mov
dec
add
mov
xchg
cli
stc
into
js
loopne
mov
mov
dec
mov
adc
jge
lret
push
in
not
mov
adc
jo
or
ljmp
jl
jp
hlt
pop
mov
sbb
ror
mov
insl
jp
lret
ljmp
sbb
aas
lret
mov
push
xchg
in
sarl
mov
in
fmuls
adc
iret
insb
data16
cmp
pop
lret
fiadds
cmc
push
adc
call
je
dec
mov
cmp
pop
pop
pushf
nop
sbb
pop
pop
cmpsb
fstl
mov
push
cmc
insl
das
imul
mov
sbb
rolb
ljmp
roll
mov
outsb
repz
es
jmp
cs
jnp
lods
in
and
ret
and
or
xor
jns
sbb
xor
cmp
mov
jl
dec
popf
int3
outsb
xor
or
xchg
add
add
aam
adc
mov
fmull
outsb
outsb
adc
clc
lds
out
sar
sub
mov
dec
pop
cwtl
push
jb
pop
iret
aas
out
test
js
or
sbb
mov
cmp
mov
adc
dec
jnp
adc
sahf
add
lds
mov
clc
gs
xor
add
xchg
mov
shlb
add
mov
out
dec
lods
xchg
jne
out
mov
xchg
sub
dec
sub
or
cmovae
movsl
jnp
and
pop
push
repz
push
or
and
fildll
int
rorb
mov
pop
and
cmpsb
lods
ret
add
mov
fdivs
mov
popf
fwait
jle
pop
push
mov
dec
loopne
rorl
cmp
mov
lods
sarb
pop
sub
test
cld
xchg
popa
xor
xlat
xchg
mov
inc
ficompl
mov
mov
or
orb
mov
push
adc
push
jl
jmp
dec
out
lods
dec
sub
sti
mov
les
push
aam
xor
add
repz
imul
mov
xchg
mov
mov
inc
cmc
add
jae
mov
and
mov
pop
aad
jne
cmpsl
sbb
add
mov
xchg
mov
pop
sub
hlt
lcall
outsb
out
mov
inc
mov
pop
sbb
aas
hlt
imul
addr16
push
test
in
jno
fiaddl
add
inc
or
push
pushf
ja
pop
repnz
mov
inc
gs
sub
js
xlat
and
push
cmc
je
add
gs
mov
and
push
jmp
add
xchg
and
mov
jg
fdivs
mov
decl
cli
dec
fst
insl
out
aad
aas
push
ret
fnsave
psrlq
gs
xchg
pop
jg
andb
add
cmpsb
dec
lds
xchg
sbb
mov
add
pop
sahf
enter
out
jno
imul
xchg
outsb
cltd
lock
ficompl
out
xchg
inc
and
je
decb
and
iret
shrb
jp
xchg
and
xor
mov
testb
int3
xor
push
jb
test
cltd
addr16
test
mov
xor
mov
cmpsb
out
and
ljmp
ds
and
sub
xor
and
leave
int3
dec
aaa
push
fisubrs
add
dec
mov
xchg
or
sub
clc
fsubr
addr16
call
inc
icebp
cmp
mov
js
mov
jno
xor
pop
xchg
adc
and
gs
mov
sub
loop
mov
jmp
cwtl
mov
sbb
fadd
je
pop
cs
rcr
mov
cld
loop
outsb
jl
stos
andl
sub
pop
mov
arpl
lret
ja
xor
je
dec
subb
pop
fildl
push
xlat
xchg
xor
arpl
xchg
lds
push
ficomps
push
iret
xor
push
pop
insb
in
clc
loope
xor
pop
inc
lock
leave
sti
adc
push
mov
adc
pmulhuw
xchg
daa
sti
jecxz
or
and
pop
or
aaa
fcmovbe
sub
dec
hlt
orl
xchg
movl
mov
pusha
cmpsl
mov
lods
cmp
addb
adc
inc
mov
mov
hlt
inc
test
stc
enter
and
aas
lret
rcll
cmpsb
mov
sbb
stos
lea
lcall
movsl
out
stos
dec
pop
out
mov
in
lahf
inc
add
iret
adc
xchg
and
rcrb
adc
mov
notl
fwait
into
adc
setp
rcr
add
test
add
mov
mov
mov
adc
pop
insl
sarl
mov
das
out
roll
or
push
out
stc
es
jae
mov
outsl
pop
fcoml
add
lock
mov
mov
shll
xchg
xor
and
cltd
bound
cmpsl
mov
sub
scas
fs
test
std
dec
sub
dec
cwtl
je
cmp
das
jo
sub
lahf
decb
mov
cmpsl
jbe
icebp
lret
in
add
xchg
jo
pop
cmp
inc
cwtl
adc
stc
pop
add
and
sbb
jnp
cld
js
inc
popa
sahf
cmpsb
inc
arpl
push
pushf
sub
sti
and
stc
mov
sub
mov
cmpsb
stc
hlt
mov
xor
and
and
repnz
lret
icebp
jno
push
out
scas
gs
in
test
cmpsb
and
cltd
sub
push
inc
sahf
cmp
ffreep
add
push
add
or
out
pop
mov
jo
movsl
into
add
fisubrl
or
cltd
cltd
fmulp
lods
mov
pop
inc
cmovnp
cmp
mov
test
cltd
sbb
inc
xchg
enter
loope
out
ret
jl
adc
cmpsb
vcvtsi2sd
mov
ficoms
jl
dec
xor
cltd
stos
lods
jp
or
mov
or
sub
mov
adc
enter
xchg
aam
pop
sahf
dec
sti
scas
hlt
orb
lds
out
in
aam
mov
pop
push
xor
dec
xchg
rolb
adc
dec
cmp
movsb
inc
pop
sub
lea
mov
std
test
or
jg
sbb
fwait
lods
test
cmp
hlt
loope
xchg
shlb
subb
pushw
mov
pop
pop
repnz
in
mov
inc
data16
inc
fdivrp
jno
mov
lret
mov
sbbl
scas
mov
adc
arpl
xor
in
addr16
lds
pop
repz
jle
fcmovnbe
and
into
push
movsl
push
mov
push
shlb
adc
fimuls
cwtl
inc
insl
jg
xor
scas
fdecstp
cld
fcomps
or
rol
jmp
dec
dec
xlat
pushf
adc
imul
aad
sti
call
or
mov
xlat
add
cmp
lcall
or
ret
sti
sub
or
in
xchg
lock
inc
adc
dec
test
push
inc
clc
pop
adc
icebp
push
dec
jl
and
std
addb
mov
daa
daa
notl
mov
sbbb
cltd
cld
pop
cmc
nop
mov
outsl
test
rcrb
popf
cmp
out
dec
jge
lds
sti
int3
popa
sbb
loop
scas
fistps
insl
sbb
add
sub
nop
cmp
sbb
fdivs
mov
xchg
mov
push
mov
pop
jp
sub
lods
xor
adc
xorb
dec
mov
dec
sub
stos
add
lret
jle
fwait
scas
or
xchg
dec
gs
xchg
hlt
fimuls
jmp
pop
sbb
jb
in
shrl
and
inc
push
shrb
fs
sbb
xchg
add
push
inc
mov
sbb
mov
jno
mov
adc
sbb
repnz
shll
ja
cmpsb
orl
and
test
xchg
or
sbbl
jno
ljmp
fisttpl
inc
shll
repz
les
ds
loopne
loopne
dec
dec
jg
mov
pop
test
in
movsb
das
test
push
aas
cmp
int
mov
sbb
dec
sbb
sub
xor
gs
out
ret
dec
add
subl
xchg
add
arpl
ss
cmpsl
inc
jnp
adc
rcrl
lock
call
stc
imul
ret
push
dec
clc
out
dec
insb
cmp
mov
inc
push
idiv
cmc
and
mov
fs
in
stos
inc
push
mov
mov
jae
pop
cmp
jb
pop
sub
sbb
call
cmp
hlt
popa
flds
inc
in
cmp
test
icebp
lahf
adc
movsl
sbb
push
in
lods
and
mov
adc
enter
pop
sar
cmp
adc
mov
jle
or
outsl
jnp
cld
add
jnp
mov
lahf
enter
dec
xlat
mov
lahf
and
fistpl
mov
movsb
push
mov
outsl
dec
in
xor
or
dec
sbb
xchg
jno
and
xchg
mov
mov
mov
mov
imul
aas
mov
mov
pop
add
pop
jp
movsb
pop
ficompl
in
mov
dec
out
mov
sahf
mov
cmpsl
push
sarb
iret
arpl
push
mov
incb
into
ljmp
inc
cld
xchg
imul
and
imul
testb
dec
jo
popa
cs
push
add
fdivrs
adc
cli
fsubrl
jmp
mov
dec
pushf
fs
lahf
shlb
mov
ss
add
fisubs
add
sub
push
xor
xorb
dec
sbb
jle
aam
aam
pusha
xchg
xchg
sbb
int
xor
pop
jge
sub
imul
pop
push
out
xchg
dec
cmp
adc
lods
or
mov
pushf
fstpt
jp
hlt
cmpsb
push
xor
insl
fs
mov
rorl
xor
pop
push
popa
fldt
mov
out
adc
sub
outsb
daa
fldcw
bswap
ljmp
inc
xor
xor
lods
test
repz
jp
mulb
xor
xchg
inc
aad
dec
inc
mov
ss
leave
cmpsl
pop
call
push
cmpsl
cltd
cmpsl
or
lods
sub
jbe
jno
addr16
xor
xchg
aas
or
shrb
orl
int3
loop
stos
leave
sub
in
jl
int3
mov
out
fldt
jle
inc
push
sub
lods
add
dec
fwait
aas
or
sbb
cmpsb
inc
insl
cmp
push
in
push
ja
cwtl
rclb
rolb
pop
sbb
sub
arpl
sti
mov
jne
mov
xchg
lock
js
push
xor
dec
loopne
movl
add
push
dec
popa
hlt
mov
push
push
mov
cli
adc
enter
mov
fidivl
mov
or
mov
xchg
pop
shrd
icebp
test
push
pop
dec
js
add
arpl
mov
fwait
mov
dec
lret
nop
lock
sti
sbb
ljmp
cltd
jnp
loop
mov
jmp
stos
jmp
xor
or
jle
jl
insb
fcomp
pop
pop
lds
sub
in
dec
inc
lea
inc
inc
push
inc
jns
imul
dec
cmp
mov
sub
imul
das
fwait
rorb
shlb
and
jle
fdivrl
outsb
dec
add
nop
ror
fists
fisubs
fs
adc
outsb
shrl
jne
into
add
mov
inc
scas
aas
add
cld
xchg
sbb
fiaddl
mov
shlb
and
ljmp
lret
aaa
xor
out
jl
fwait
stos
test
push
popa
xchg
int3
fwait
ss
out
mov
dec
imul
or
add
js
ret
jb
pop
mov
mov
leavew
sub
lahf
add
inc
ds
xchg
add
aad
mov
xchg
adc
jnp
or
dec
in
fwait
xchg
popf
cmpsb
lods
scas
shll
jecxz
clc
movsb
enter
les
stos
sti
int
mov
popa
testl
cmp
stos
xor
imul
ss
cmpsb
mov
lcall
xor
lods
add
sbb
push
lahf
mov
lcall
out
mov
and
cmpsl
roll
jb
jne
inc
ds
outsb
and
xchg
push
sbbl
push
mov
push
aad
xor
cmpl
pop
fidivrl
aam
sbb
and
add
mov
loopne
xchg
add
cmpl
ds
fsubs
dec
xchg
stc
sbb
shrb
test
adc
jg
mov
mov
adc
int
cs
inc
xor
xlat
fwait
stos
std
clc
mov
pop
ljmp
xor
inc
out
std
rcrl
push
jnp
ljmp
sub
sub
out
pusha
inc
add
fimuls
mov
idivl
and
out
jnp
lock
mov
adc
pop
cmp
or
or
pop
adc
fcoms
sti
rorb
mov
mov
rorb
shlb
inc
or
sbb
jmp
aas
scas
dec
lea
dec
pop
es
xchg
iret
pop
mov
adc
les
mov
insl
mov
fdivrl
inc
xchg
lret
pop
daa
pop
jle
add
mov
rorl
inc
jle
cmp
cmp
adc
lgs
lds
jae
ret
addr16
jo
inc
lahf
xchg
cli
sbb
jp
lcall
lahf
and
lahf
enter
jge
out
testl
dec
adc
push
loope,pt
ret
or
mov
adc
call
jle
cmc
repnz
pop
jae
sbb
push
jo
int
fst
push
inc
xchg
mov
push
dec
push
ljmp
scas
push
pop
cmc
ss
popa
dec
adc
push
andl
fistpl
lods
cmp
insw
pusha
daa
mov
fildl
call
mov
add
leave
cmp
push
cwtl
jnp
fstpt
cmp
mov
dec
addr16
sbb
test
lods
push
andb
push
push
pop
jne
lds
in
cmpb
lret
pop
fidivl
lret
out
rcll
dec
jecxz
push
xchg
inc
lds
test
mov
mov
dec
sahf
imul
adc
inc
icebp
pusha
loopne
sub
fildll
pop
ja
xchg
inc
std
inc
sbb
pop
imul
and
inc
cltd
scas
imul
outsl
pop
jbe
imul
cmp
mov
testb
add
in
adc
sbb
or
enter
aaa
push
push
fisubl
popf
imul
push
adc
xor
clc
loope
clc
ds
lahf
xchg
arpl
je
daa
xorps
in
sarl
call
pushf
pop
inc
mov
push
or
xlat
iret
sub
scas
xchg
insl
loop
leave
cmpsl
ret
sub
xor
mov
jmp
fbld
jmp
addb
dec
lcall
xchg
fcmove
fnstsw
mov
pop
dec
adc
inc
sub
jecxz
sub
xchg
call
cltd
fildll
lcall
dec
sahf
movsb
push
lea
stos
sti
inc
das
cmp
jmp
push
inc
pop
fidivl
push
push
andl
jnp
mov
cmpsb
xchg
out
insl
lahf
in
lods
inc
pop
outsb
lea
test
sub
cmpsb
rorw
fiadds
adc
lods
mov
mov
mov
jecxz
sbb
mov
mov
and
adc
cmp
leave
fildll
jno
into
sahf
xor
jns
lods
sbb
fnsave
call
dec
out
js
push
push
sub
push
jg
lods
add
movsl
das
jge
mov
movsb
je
pop
sti
xor
mov
pushf
add
sbb
mov
pop
add
cld
inc
or
lea
out
pop
dec
mov
push
repnz
xchg
cmpsl
xlat
testb
dec
cltd
lods
mov
stos
imul
enter
sbb
sarb
mov
imul
inc
mov
out
loop
xchg
and
jo
sub
mov
pop
out
dec
fsubl
push
pop
jle
in
xchg
jmp
mov
lcall
shlb
mov
cmc
inc
testl
jns
cmpb
in
out
insb
mov
ljmp
lods
lcall
mov
inc
sbb
jb
or
je
jecxz
and
inc
or
and
fcomp
imul
dec
scas
xchg
into
shl
rclb
insl
int3
sub
cld
outsl
xchg
mov
data16
lds
shrl
pusha
mov
pop
sti
loope
ss
or
daa
adc
fildl
sbb
aam
out
aad
jns
push
and
cltd
stos
out
outsb
addr16
xchg
lret
out
pop
mov
icebp
inc
idivl
arpl
inc
add
cwtl
cs
sbbb
dec
lods
pop
subb
mov
out
add
rcll
sbb
aas
fwait
adc
aas
fnstenv
fsubrs
jbe
pop
push
subb
dec
push
mov
pop
lds
mulb
enter
xor
repz
xor
inc
xor
mov
ret
das
int3
mov
jb
add
jg
sub
fdivrs
mov
push
inc
push
xchg
add
and
pushf
sbb
divb
in
mov
lret
pop
jmp
cmp
in
cmpsl
js
in
dec
mov
popa
adc
or
nop
add
ja
lods
mov
mov
jl
add
rorb
sub
outsl
xchg
mov
insb
fistps
jb
cld
lods
sti
sbb
popa
push
mov
scas
xor
sub
mov
lret
std
mov
ds
lret
imul
lret
xor
ret
pop
jbe
inc
mov
sti
and
pop
lahf
jmp
xchg
jecxz
xchg
arpl
cmp
sub
fsubs
push
outsl
and
push
stos
cld
adc
loop
inc
mov
push
inc
xchg
lcall
imul
fsts
cmpsb
push
xor
cmpsb
cmpsl
fildll
pop
push
mov
ljmp
je
pop
iret
lock
je
leave
popf
sbb
add
les
inc
enter
ja
mov
leave
mull
enter
adc
lddqu
imul
sbb
arpl
mov
int
push
mov
sub
mov
add
sbb
mov
addb
or
fwait
inc
mov
int3
cmp
cmpsb
adc
data16
jo
ficoms
imul
out
jl,pt
jle
std
fiadds
stc
rcrb
push
into
lcall
push
dec
jmp
or
dec
xchg
push
dec
fisttpl
dec
cmpb
ret
mov
pusha
into
ljmp
mov
bound
fdivrs
mov
mov
sub
addl
imul
and
incb
cmp
and
scas
push
js
add
push
mov
loopne
popf
cmc
mov
push
leave
push
ffreep
fcomps
or
shlb
orl
xchg
push
fsub
cmp
out
in
jge
lret
repz
mov
add
call
stos
loope
sbb
je
ss
sub
pop
lods
mov
les
pop
jl
mov
test
inc
das
test
pop
cs
lock
xchg
out
mov
into
into
push
jbe
cwtl
je
and
jge
push
sub
adc
mov
and
dec
xlat
xor
mov
mul
lods
xor
jecxz
jbe
xchg
add
sarb
push
and
jo
loopne
mov
ja
fcomps
and
lahf
xor
imul
mov
repz
fisubrl
cwtl
inc
pop
stc
xchg
int3
mov
dec
xor
cmpsl
push
push
jns
cmp
xchg
cmp
xor
rolb
loopne
ljmp
mov
mov
jne
xchg
iret
fcomps
sbb
mov
mov
inc
mov
inc
mov
and
dec
popa
out
lret
push
fistps
mov
cltd
or
inc
mov
inc
outsl
lret
mov
data16
pop
jb
push
xchg
sbb
jecxz
aas
mov
inc
aam
jl
sbb
jo
mov
inc
sub
xchg
lods
addl
cmp
iret
bound
repz
cmp
xchg
loopne
clc
dec
pop
mov
lret
xchg
sub
sbb
adc
mov
test
mov
int
push
imul
cltd
ja
push
mov
aad
xor
mov
out
rcll
daa
js
pop
sub
sarl
test
sahf
mov
adc
or
mov
push
fcoml
sub
repnz
push
push
jae
repnz
pop
sti
or
mov
mov
inc
ljmp
jle
cmp
push
jb
in
adc
jno
iret
ds
mov
push
iret
xchg
sub
into
enter
xchg
xor
sbb
push
sub
add
movsl
test
xchg
pushf
fwait
pop
jno
pop
add
sub
sbb
or
clc
cmp
cmp
out
or
pop
ljmp
adc
test
sub
sbb
test
nop
testl
cwtl
mov
jl
ss
mov
xor
or
jp
and
and
push
js
out
dec
sbb
inc
ret
aad
push
rol
adc
cmc
pop
push
push
enter
mov
jnp
in
out
mov
mov
fistl
scas
xlat
cmp
add
jno
ss
loop
scas
xchg
cmp
add
stc
sub
pop
dec
in
cmp
in
shrl
shll
es
inc
xor
dec
mov
ds
pop
push
imul
cmp
sahf
jl
lods
and
pop
mov
xor
jle
mov
roll
dec
cmp
push
adc
jl
push
sbb
je
addb
push
notb
enter
movsl
adc
add
add
sub
cltd
and
pop
xchg
scas
rol
icebp
fnstsw
sbb
bound
sbb
jp
movsb
or
int3
js
mov
lahf
sarl
cmpsb
pop
inc
xchg
xor
add
xor
mov
dec
mov
inc
jmp
fstp
cmp
jae
and
mov
add
jo
add
jne
xor
fidivrl
in
std
jg
mov
xor
mov
cmp
mov
mov
inc
jg
jge
pop
mov
ljmp
shrb
scas
add
call
test
idivl
aam
jmp
enter
lret
out
insb
xor
imul
mov
cmp
inc
push
cmp
jg
pushf
aaa
pusha
xor
jge
scas
dec
fsubl
mov
fwait
shrb
lret
xchg
cmp
mov
push
inc
push
pop
leave
mov
int
or
jmp
push
sub
dec
xlat
fld
pushf
pop
pop
jmp
xchg
cmc
sub
idivl
cld
daa
jl
ret
popa
mov
loope
xchg
jg
scas
cli
and
stc
popf
lahf
or
cmp
sbb
push
mov
xchg
cwtl
xchg
push
in
test
stos
jb
arpl
push
outsb
ljmp
imull
xchg
push
fdivs
clc
and
mov
xchg
xor
rolb
mov
inc
hlt
dec
scas
push
out
inc
xchg
in
fstl
mov
mov
push
inc
jecxz
or
lds
test
mov
iret
and
js
insb
in
sub
js
in
js
les
bnd
ret
repz
or
lods
jp
cmp
je
mov
add
or
sti
mov
jecxz
cmp
pop
inc
ja
or
cld
lret
ret
inc
dec
fidivs
lcall
lahf
pop
mov
shlb
push
lods
jo
inc
dec
nop
sub
mov
lahf
or
jb
out
lea
insl
stos
incb
loop
adc
pop
push
sub
mov
mov
mov
jp
push
into
ljmp
or
mov
sbb
sub
ljmp
leave
push
inc
pop
jo
fwait
mov
out
pop
out
dec
lahf
xor
mov
cld
or
fidivs
and
shrb
je
dec
dec
add
sub
sbb
xor
push
jge
jp
fimuls
ret
aaa
inc
repz
and
adc
sub
cmpsl
and
xor
fs
aaa
test
xor
mov
notb
and
xchg
cld
jo
mov
mov
or
test
cld
dec
mov
mov
gs
jno
outsl
dec
popa
push
cmpsb
mov
mov
mov
clc
cmp
test
es
mov
inc
add
push
int
inc
pop
ds
cs
pop
sbb
mov
shl
popf
lock
test
or
ret
std
das
add
mov
cmovno
fldcw
xchg
inc
and
idiv
out
mov
xor
sbb
xor
subb
fs
xchg
sub
pop
mov
jmp
imul
stos
mov
sbb
stc
pushf
daa
pop
mov
adc
push
sub
add
clc
fsubrs
ror
lret
xchg
add
inc
fnstcw
into
jnp
and
cld
rorb
out
lret
xor
mov
mov
inc
aam
mov
xor
mov
push
jle
mov
movsl
jae
jl
loopne
fxam
mov
jns
pop
aam
shll
roll
pop
lods
xchg
dec
mov
int3
gs
xchg
add
adc
fcmovnu
jmp
jne
das
and
mov
push
sub
dec
xchg
jp
sar
inc
cli
push
shll
leave
cmp
cltd
lcall
mov
mov
mov
shrb
cld
test
dec
int3
jo
sbb
push
call
in
aad
mov
pop
inc
fdivrs
out
in
and
sbb
filds
aad
je
sbb
std
cmc
mov
pusha
test
cmp
and
and
mov
clc
idivb
add
or
imul
cld
sub
xchg
sahf
lahf
jno
ljmp
mov
movsb
jo
imul
jnp
mov
adc
stos
or
popf
push
popf
mov
insb
pushf
adc
add
cmp
loop
pop
ljmp
sti
stos
into
dec
mulb
sbb
int3
add
or
testb
aam
sti
adcl
cmp
mov
gs
mov
vmovhps
pushl
mov
pop
add
popa
stos
and
mov
inc
out
jnp
bound
call
xor
dec
push
push
nop
push
mov
xor
push
xchg
filds
jns
ja
mov
inc
data16
shrl
add
mov
add
mov
test
add
subb
fdivrl
insl
in
add
sbb
xor
sbb
subl
aas
mov
loop
das
push
jb
lret
sub
jg
out
mov
jecxz
and
cwtl
pcmpeqd
into
cmp
sub
call
sub
out
ds
aam
pushf
cmp
iret
fildl
movsb
mov
imul
loop
std
movsb
movsl
push
cmp
mov
sub
das
in
jmp
or
jbe
push
sbbl
test
add
xor
mov
mov
sbb
in
loop
push
fcoml
push
pop
cmpsl
insb
cmc
or
dec
fcoml
pop
pop
lds
lock
inc
clc
arpl
out
lock
outsl
push
ds
inc
imul
cld
sbb
inc
lock
fstpt
inc
xchg
or
fisttpl
out
ds
mov
and
sub
pushf
push
cmp
cmpsb
repnz
fisttpll
and
mov
cmp
xor
sbb
mov
mov
aam
cli
aad
sub
cmp
enter
pop
loope
fs
sub
rcl
push
fdivl
mov
mov
out
add
jns
cwtl
push
scas
inc
je
push
jmp
inc
push
sub
xchg
outsb
cmpsb
push
mov
in
hlt
ret
lock
lss
pop
xchg
or
mov
dec
or
sub
push
dec
clc
movsl
movsl
sahf
movsb
mov
mov
sub
sahf
xor
sahf
in
loopne
loopne
adc
add
pop
sbbl
inc
push
cmp
cmp
scas
leave
rolb
lcall
push
and
xor
std
push
xor
sarl
push
pop
flds
xorl
add
and
and
sub
stos
push
int3
push
sub
sbb
or
xchg
push
xchg
cltd
xchg
pop
outsb
ljmp
in
sub
stc
pop
add
arpl
je
aam
add
mov
gs
add
cwtl
outsl
mov
xchg
or
mov
inc
fnstcw
insb
push
incl
mov
or
in
add
mov
mul
jmp
xchg
test
add
jl
jmp
or
cs
push
xchg
lcall
mov
mov
xchg
imul
clc
xchg
dec
sub
cmova
mov
fsubr
fisttpl
mov
je
pop
pop
cmp
mov
bound
negl
xchg
pushf
sbb
stos
lods
push
inc
jmp
xchg
mov
pusha
sarl
fcmovbe
das
cmovp
insl
adc
fbld
sarl
repz
sbb
std
divl
mov
pop
adc
mov
in
jl
out
arpl
mov
sub
dec
jg
out
mulb
pop
fiaddl
test
bound
push
inc
xchg
fcompl
inc
aas
imul
cwtl
cltd
stc
jge
adc
iret
filds
loope
stos
lahf
mov
rcrb
mov
int
cmp
inc
add
incb
es
adc
jle,pt
iret
xlat
jne
cwtl
sub
int3
lds
outsl
int
lcall
js
call
xchg
jnp
sbb
xchg
sbb
cs
mov
jo
hlt
mov
or
add
add
add
mov
cmpsb
jl
sbb
mov
les
sbb
inc
jbe
sbbb
jmp
adc
and
lds
mov
pop
out
push
icebp
cli
xor
addb
pop
pop
lret
and
cmc
sub
adc
and
pop
test
aam
sbb
inc
or
add
lods
mov
in
or
adc
or
jge
xchg
mov
mov
xor
not
and
subl
inc
xor
dec
and
inc
inc
loopne
cwtl
call
jecxz
stos
ja
cmp
mov
jnp
movsb
sbb
fcompl
push
mov
jbe
popf
mov
icebp
or
ret
pop
pushw
repnz
mov
and
xchg
lcall
ljmp
cmp
test
sbb
stos
outsb
dec
adc
mov
mov
mov
mov
adc
inc
xor
pop
adc
in
adcl
fs
mov
sub
push
dec
cld
pop
cltd
sub
fimull
shll
test
aaa
adc
enter
add
fisubrs
dec
aam
or
dec
test
aam
xchg
in
inc
sub
insb
inc
ret
inc
loop
int3
xchg
enter
sti
out
jb
jmp
mov
sub
dec
aas
adc
arpl
loop
adc
movsl
xor
xchg
addb
scas
iret
lret
push
mov
pop
inc
inc
pop
rcrl
frndint
notl
sbb
das
and
jle
int3
push
sbb
jb
lock
mov
push
mov
inc
pop
shrl
and
cmp
mov
jns
mov
sbb
jle
int3
push
sbb
jmp
dec
rorl
adc
lcall
sbb
clc
pusha
loopne
jl
ret
lret
ljmp
jb
push
rolb
sub
sbb
pop
lcall
fs
fcompl
mov
push
mov
imul
mov
push
arpl
ja
ja
jbe
sub
enter
push
jl
cwtl
jle
aas
js
adcl
daa
cs
stos
cmp
aad
xchg
xor
adc
and
mov
and
inc
jbe
stc
push
cmp
jo
pop
leave
cmp
sbb
and
pop
mov
loopne
jo
test
push
xchg
fiadds
pop
stos
fldcw
out
push
push
lods
leave
xor
jae
mov
xchg
push
mov
sbb
subl
movsl
mov
mov
add
popa
pop
sub
repnz
pop
push
jg
in
cmpsb
popf
das
or
aaa
mov
mov
xor
cwtl
push
xor
inc
mov
loopne
ffree
add
into
xor
addl
pop
dec
sbb
cmp
scas
rolb
mov
cmp
sub
pushf
cmpsb
mov
jmp
cmpsb
push
fimuls
add
mov
outsl
out
sub
cmp
pop
and
insl
lret
sbb
xchg
xor
fcmovnb
in
cltd
adc
jne
adc
jb
jo
fdivr
xchg
in
sahf
ja
jg
mov
and
dec
dec
repz
push
xor
loopne
adc
jg
dec
cwtl
pushf
ret
inc
xchg
xchg
jmp
add
or
cmp
in
cli
push
jle
lret
imul
outsb
cmp
mov
jecxz
cmp
or
faddp
in
int
cld
movsl
adc
sbb
movsb
push
pop
xor
mov
mov
push
int
imul
jge
adc
dec
jg
dec
push
inc
push
xchg
stos
fwait
adc
push
in
in
lea
jecxz
push
lea
pop
loop
jge
push
jp
push
outsb
cltd
out
or
sub
dec
repz
loop
mov
mov
rcrb
ficoml
insb
inc
push
inc
xor
add
cmpsl
and
mov
push
mov
xchg
jns
adc
add
dec
dec
xor
adc
adc
enter
sbb
ret
imul
or
and
mov
mov
into
into
xorl
insb
out
lret
out
mov
sar
adcb
popa
xchg
or
notb
sti
ror
or
bound
sbb
divl
cmpsb
lret
mov
enter
dec
or
orl
sbb
push
fwait
out
cmp
ja
xchg
mov
xchg
mov
mov
hlt
fistpll
shlb
scas
sbb
lahf
shrb
movsl
cwtl
mov
mov
adc
lods
popf
lret
inc
xchg
bswap
cwtl
lret
stos
xchg
jne
cmpsb
jp
mov
sarb
iret
mov
and
xchg
adc
aad
gs
incb
lret
xchg
js
xor
cwtl
in
xchg
dec
out
cmp
repnz
add
stc
add
sub
dec
lret
add
out
jmp
xchg
pop
push
test
imul
xchg
sub
inc
or
mov
adcb
xor
ret
mov
vfnmadd213pd
push
and
shl
add
mov
mov
lock
or
aam
jmp
jo
add
dec
and
and
pushf
inc
cmp
mov
lods
xor
adc
xor
and
loope
je
je
div
cmp
cmp
fcomi
aam
roll
add
sbb
and
push
outsl
popa
push
stos
gs
incb
mov
sub
pop
and
ljmp
leave
leave
ret
pop
add
gs
nop
adc
xchg
jmp
add
in
dec
or
mov
movsb
repz
mov
lcall
rcl
cmpsb
xor
mov
das
pusha
sub
pop
mov
mov
pop
xchg
mov
bound
xor
sub
mov
ret
mov
pop
mov
xlat
ror
inc
loope
ss
gs
fsubrs
clc
jns
adc
jp
inc
gs
int
and
cmpsb
dec
mov
and
ljmp
cld
repz
jmp
mov
aas
outsb
movsb
push
xor
jno
mov
xchg
mov
xchg
pop
mov
push
jl
out
adc
shl
or
pop
ss
cld
test
cmp
imul
inc
cmc
shl
push
sub
clc
pop
sbb
insl
test
decb
push
mov
cmp
dec
out
fiaddl
testb
in
addr16
cmp
inc
lds
in
or
mov
fstl
mov
daa
jl
lods
jl
lds
mov
or
fbld
sub
aad
xchg
mov
xorl
test
sahf
cmovno
rcrl
sub
xorl
and
lock
cmpsl
inc
fwait
mov
in
mov
mov
pop
inc
popa
in
fstpt
scas
ljmp
dec
pusha
inc
push
aad
cmp
fs
popf
loop
xchg
or
dec
mov
pop
les
push
inc
aaa
adc
fidivrs
cld
aas
insl
fwait
sbb
shll
jl
data16
iret
push
lahf
rolb
pop
xor
mov
push
lcall
dec
mov
push
jmp
imul
cmpsl
push
inc
dec
mov
inc
inc
mov
adc
test
jecxz
in
push
popa
or
rcl
or
dec
mov
cmpsb
loop
sbb
sti
and
clc
jo
push
push
pop
outsl
outsb
xchg
jle
imul
dec
inc
sub
xchg
xchg
mov
leave
mov
mov
jnp
or
sub
push
scas
das
mov
int
in
fwait
aad
sahf
lret
pushf
mov
push
mov
adc
daa
lods
adc
ficompl
pop
dec
inc
jo
les
xchg
jl
push
cmpsb
pop
and
sbb
push
outsl
jle
adc
and
cmp
fst
xchg
lret
inc
xchg
mov
outsb
bound
movl
es
and
ds
xchg
xchg
pop
xchg
pushf
outsb
and
shlb
push
xlat
xchg
xchg
imul
ret
or
das
adc
test
stc
jmp
pop
scas
sbb
add
sbb
cmp
aam
dec
rcrl
xor
rcl
xchg
out
sub
sub
add
imul
clc
int3
lea
sbb
hlt
sub
and
and
mov
in
sbb
ret
aam
insb
fwait
rcll
aas
adc
jmp
push
xor
mov
mov
or
jecxz
je
sbb
lock
outsl
mov
jle
outsl
adc
push
fs
xor
or
mov
scas
mov
sbb
pop
sub
pushf
insb
jae
push
imul
add
mov
fdivs
add
hlt
mov
mov
data16
test
pop
sub
mov
insb
rorb
push
push
push
test
dec
add
jmp
fimull
pop
lea
popf
sub
push
push
cmp
xor
out
scas
jmp
dec
jo
xor
push
dec
push
add
mov
sub
andl
xor
adc
ss
test
lcall
jae
rcl
mov
mov
mov
inc
leave
loopne
insb
push
sbb
sbb
dec
and
dec
cmp
fiadds
jne,pn
pushf
jecxz
popa
jnp
jae
bound
ffree
call
pusha
and
shl
mov
es
das
aam
or
xchg
jp
data16
icebp
push
fstpl
dec
pop
lcall
pop
jge
aaa
popf
mov
adcl
in
movsl
movsb
popf
sub
and
jecxz
inc
dec
cmp
jae
in
inc
sbb
xchg
frstor
pop
ds
hlt
imull
dec
pusha
and
test
fisttpl
push
or
sbb
or
mov
or
cmp
loopne
push
mov
mov
mov
jno
add
aas
mov
loopne
js
or
cmp
std
jge
test
and
iret
popf
cwtl
or
lcall
xor
hlt
rcrl
roll
and
insb
lds
pop
mov
xchg
shll
xchg
std
iret
pop
stos
outsb
cwtl
shrl
stos
pusha
mov
test
pop
or
iret
jge
inc
leave
inc
imul
insb
mov
cmp
leave
incb
jg
pop
lea
dec
pop
lret
inc
enter
cs
icebp
mov
dec
pop
and
fisttpl
dec
mov
adc
push
into
push
add
enter
xchg
push
lock
inc
push
jp
add
scas
mov
fidivrl
movq
in
nop
push
aam
xor
mov
mov
or
and
mov
out
aad
add
ds
addl
xlat
int
popa
sub
ja
addr16
outsl
enter
jp
mov
enter
xor
pop
xor
cltd
add
les
add
out
es
adc
addr16
xlat
call
mov
dec
xchg
pop
mov
ljmp
adc
mov
xchg
xor
adc
mov
jbe
mull
sbbl
mov
loope
cmp
pop
jmp
jmp
sbb
jno
daa
mull
not
xor
aad
mov
push
push
stos
fdivrl
or
push
xsha1
cmpsb
or
popa
jmp
push
or
xchg
jge
orl
sub
xchg
int3
inc
jae
leave
jb
add
dec
adc
sub
xchg
xchg
gs
faddl
mov
lret
dec
bound
sub
mov
or
adc
into
arpl
cmp
lcall
dec
lea
daa
add
not
mov
xchg
push
test
dec
pop
and
xor
pushf
mov
adc
sub
mov
fstps
pop
clc
lock
das
jg
add
dec
out
ljmp
ret
or
cli
push
cmpsl
adc
mov
out
xor
pop
js
xchg
push
sub
insb
test
mov
lret
xor
out
fcoml
sahf
push
ss
cld
or
test
fsubrl
cs
inc
xlat
cltd
aam
test
int
dec
aaa
jbe
jge
nop
sar
add
loope
data16
out
or
movsb
lds
pop
aaa
push
cmp
lcall
in
mov
adc
push
jmp
clc
xchg
rorl
mov
pop
repz
mov
pop
aaa
pop
cmp
out
xor
sbb
icebp
inc
ja
inc
call
xor
xchg
cwtl
pop
je
clc
addl
lea
aas
add
mov
call
or
jmp
arpl
in
dec
jle
out
mov
mov
cmpsb
in
lds
jl
test
pop
ljmp
sbb
or
mov
repz
pop
xchg
fisubl
add
inc
cmp
sti
mov
and
arpl
je
xchg
add
push
inc
xchg
es
loope
jb
icebp
shll
add
pop
inc
mov
repz
dec
movq
in
mov
int
dec
movsb
insb
push
push
push
lret
mov
mov
pop
dec
int
call
cwtl
mov
movsl
cmpsl
mov
or
setae
pop
push
push
mov
ljmp
fisttpll
addr16
mov
sub
mov
xorb
jmp
adcb
push
mov
pop
out
mov
cli
jg
scas
loopne
xor
cmpsl
loop
addr16
stos
or
cld
pushf
into
add
nop
pop
or
sarb
mov
add
gs
jno
nop
hlt
push
xchg
xchg
movsb
leave
mov
mov
xor
push
lahf
arpl
lods
sti
stc
dec
std
inc
pop
rcrl
xchg
out
inc
push
dec
push
rolb
jo
jle
sub
je
mov
fisttpl
movsl
sti
nop
int
push
pop
mov
cmpl
std
inc
push
xchg
jp
mov
jl
cli
popf
push
stc
cmp
pop
sti
mov
xor
push
jb
arpl
sbb
ret
cmp
xchg
push
stc
xchg
jns
jle
bswap
dec
orb
cmpsb
in
pop
mov
push
mov
pop
test
sbb
stos
outsl
mov
scas
js
jmp
nop
ret
into
and
into
inc
xchg
cld
test
push
lock
lods
sub
jnp
pushf
out
adc
popa
dec
inc
ret
fwait
lcall
mov
add
inc
ja
movsl
jg
jns
mov
jge
ret
push
dec
mov
or
sub
dec
adc
xchg
sahf
pop
push
outsl
pop
pop
pop
xchg
xor
or
or
int
lds
xchg
jmp
sub
out
ds
xchg
into
mov
gs
fsubrl
adc
sub
fdivr
mov
pushf
dec
adc
inc
add
mov
loope
xor
pop
add
repnz
push
add
adc
pop
mov
push
daa
aad
and
test
and
add
add
mov
lret
pop
mov
cmp
jne
inc
cmpsb
repnz
sub
sarb
in
adc
ja
lcall
xchg
pop
dec
pusha
mov
dec
push
lea
scas
push
adc
aam
mov
mov
mov
sbb
icebp
sub
mov
addl
ss
dec
cmp
jmp
cs
sub
repnz
add
insb
mov
xchg
adc
icebp
inc
popa
mov
mov
mov
in
lea
xchg
test
pop
clc
call
push
je
shll
out
push
mov
inc
inc
mov
jo
cmp
es
loope
ret
das
pop
add
push
mov
arpl
xchg
imul
xor
mov
push
mov
leave
cmp
movsl
push
xchg
mov
std
scas
pushl
adc
pop
add
std
adc
push
gs
in
sti
push
aaa
in
fxch
inc
jns
orb
iret
gs
jb
inc
add
or
rol
enter
imul
enter
into
pop
jnp
xor
xchg
mov
inc
mov
cmpsb
mov
rcll
les
stos
xchg
je
push
xchg
out
inc
rol
sbb
fwait
and
and
and
test
hlt
and
xor
push
arpl
adc
xor
adc
push
shr
out
sbb
clc
idiv
push
sbb
in
and
fwait
add
push
jb
add
cli
add
cmc
daa
lahf
mov
clc
ds
xchg
fwait
xchg
jle
jb
xchg
sbb
pusha
mov
lahf
pushf
cltd
fcoml
xchg
mov
sub
jmp
mov
cmp
bound
cli
jmp
cltd
lahf
into
xlat
fidivs
mov
lods
test
stc
xchg
sub
jnp
sbb
hlt
mov
pop
shll
shld
in
loop
fwait
outsb
ljmp
pop
jmp
or
add
or
lds
and
cwtl
mov
nop
jecxz
or
sub
inc
add
mov
cltd
jmp
lret
ljmp
je
mov
outsl
inc
mov
leave
pop
ja
jle
push
push
sbb
call
jmp
sbb
pop
movsb
repz
pusha
inc
push
xchg
incl
jno
nop
mov
jle
sub
xchg
shrb
dec
jb
outsl
daa
out
or
sub
aaa
push
add
xchg
jmp
gs
loope
or
or
jl
jno
push
push
sbb
stc
xchg
jp
inc
pop
in
scas
sub
in
mov
cmp
pop
dec
in
insb
jg
pop
aaa
inc
mov
lret
scas
jns
test
push
scas
or
push
imul
mov
testb
inc
mov
push
pop
sbb
jp
sub
setno
jle
scas
xchg
lock
ja
mov
jle
leave
loop
sub
adc
and
fs
xchg
incl
les
xor
test
lret
inc
and
sbb
jne
std
shlb
mov
jge
jae
or
xor
xchg
sbb
iret
icebp
test
mov
data16
sub
outsb
jae
test
jo
call
push
and
fdivrs
dec
imul
sbb
add
mov
or
and
in
mov
jno
adc
ffree
push
addr16
out
or
xchg
xor
cld
cmc
das
jle
xchg
clc
sbb
insb
sub
mov
adc
fstps
jnp
push
mov
sub
inc
pop
pop
pop
xchg
pop
das
lcall
outsb
or
jbe
shrb
push
xchg
dec
mov
jne
pop
adc
dec
mov
cld
loope
and
and
jmp
outsl
icebp
mov
mov
pop
or
sarb
jb
insb
int
fwait
ljmp
loope
cmpsl
and
push
call
mov
std
jge
popf
pusha
rcl
movsl
pushf
pop
shll
sbb
stos
jae
cmp
mov
push
adc
or
sbb
sub
imul
inc
leave
mov
pop
popa
loope
adc
cmpb
dec
inc
sub
xor
or
jnp
jnp
inc
fnstcw
mov
lahf
fwait
dec
pushf
mov
pop
mov
pop
and
inc
dec
arpl
out
sbb
jbe
adc
xor
mov
sahf
dec
mov
cs
xchg
shll
xchg
das
and
aam
aam
mov
xor
and
mov
lods
jo
lds
icebp
add
stos
sbb
cmpsl
or
mov
punpckhbw
mov
add
mov
dec
xchg
ljmp
push
jne
mov
pop
sahf
sti
cld
cwtl
add
jne
and
sub
fidivrl
jecxz
cli
imul
in
aad
dec
mov
shrb
push
jns
fwait
data16
xchg
push
and
decb
std
leave
stos
outsb
mov
jp
outsl
movsb
xchg
repnz
aaa
dec
xlat
iret
and
add
and
jle
dec
cld
mov
adc
mov
jmp
loopne
jno
lahf
push
fsubrl
jbe
fcmovnb
gs
xor
mov
pop
outsl
les
xor
inc
scas
or
or
and
mov
loope
pop
add
mov
cld
xchg
daa
mov
adc
stos
jp
inc
pop
lock
push
dec
dec
js
cmp
add
sbb
or
in
push
stos
cli
scas
je
orb
hlt
pop
test
pop
xor
jg
mov
lcall
pop
lods
pop
cmc
jge
xlat
ficomps
addr16
pop
push
insl
xor
push
xor
popf
lahf
add
mov
test
cld
mov
ja
das
add
movl
add
loope
cmp
cmp
hlt
popl
or
add
inc
xchg
fmuls
fwait
dec
testl
pop
sti
cmp
dec
push
insb
scas
or
std
dec
outsb
imul
stos
inc
insb
xor
or
sbb
or
mov
lcall
jne
movsl
sti
addr16
imul
dec
push
stos
pusha
lcall
dec
test
dec
test
add
das
xor
inc
mov
daa
aam
fdivr
lods
inc
jnp
enter
jns
xchg
sbbl
pop
imul
in
xor
stos
fs
xchg
iret
mov
call
jl
xchg
mov
mov
ljmp
cltd
xor
mov
xchg
mov
cmp
jmp
lahf
cmp
into
ds
jg
out
add
aas
cmpsb
sub
push
push
add
mov
lods
ljmp
not
inc
in
jmp
fucom
pop
add
mov
mov
pop
int
mov
mov
sbb
and
xchg
je
push
jns
enter
cmp
xchg
gs
inc
pusha
sbb
mov
hlt
scas
cwtl
icebp
int
add
js
rorb
jecxz
pop
repnz
push
movsl
push
or
mov
enter
sub
mov
pushf
jb
pop
xchg
lret
mov
outsb
gs
imul
test
jbe
pop
dec
stos
ds
lea
pop
adc
in
testl
adc
mov
adc
addr16
hlt
jmp
mov
cmp
scas
xchg
icebp
mov
mov
aam
xor
push
push
aad
add
cmp
jns
add
sbb
mov
pop
dec
negl
or
inc
callw
xchg
dec
xor
sub
dec
xchg
dec
mov
jae
push
xchg
cmpsb
es
or
nop
in
pop
aas
push
insb
enter
pop
ss
popa
sub
ja
cltd
jnp
dec
mov
in
movsl
aam
mov
adc
shll
jle
lods
push
pop
fs
mov
loop
lcall
test
push
in
ret
fdiv
stc
fadds
push
and
jo
sbb
sub
insl
xor
stos
in
mov
icebp
push
adc
inc
or
inc
or
outsb
neg
mov
xor
mov
inc
pusha
or
scas
xor
lret
jno
mov
fwait
popf
or
pop
nop
addb
shl
add
push
fistps
mov
dec
stos
rolb
daa
insl
and
mov
push
xchg
dec
rcrl
lahf
arpl
imull
mov
pop
pop
inc
and
cld
mov
in
jl
insw
xchg
loopne
mov
movsl
ret
lds
jmp
sbb
int
push
cmp
xchg
push
in
inc
adc
pop
mov
mov
ficomps
addr16
dec
imul
in
inc
sbb
cmp
fwait
sub
push
dec
cmp
pop
add
std
stc
sub
adc
mov
xor
pop
jne
ds
add
shl
lret
push
inc
fcomi
jo
stos
mov
pop
test
push
mov
call
mov
xchg
push
arpl
testl
pop
xor
pusha
lods
add
bound
adc
dec
xor
sub
mov
cmp
push
fwait
out
bound
outsl
mov
pushf
sub
sbb
ds
das
std
pop
add
movsb
push
jg
popf
dec
lret
mov
repnz
lods
jmp
shlb
inc
pop
jp
inc
imul
dec
push
mov
cmc
jno
fstpl
fwait
call
aad
dec
xor
push
and
movsl
jl
pusha
int3
pop
sbb
lahf
aam
xor
and
lods
out
or
mov
loope
negl
or
pusha
int
pop
jno
push
mov
and
lods
cmpsl
jbe
mov
into
repnz
aad
out
daa
stos
cld
call
lods
adc
bound
xlat
sub
cmpsb
outsb
cmc
pop
fdivl
jge
out
int3
rorb
xchg
xor
sbb
pop
sub
lods
insb
adc
mov
fsts
add
xchg
dec
push
sbb
pop
cmpsl
add
jb
add
movsl
mov
test
dec
jg
nop
shlb
out
jmp
mov
pop
jbe
pop
pushf
jnp
and
daa
inc
hlt
out
sbb
icebp
mov
jmp
mov
fnstcw
and
sbb
mov
sbb
mov
or
cs
or
dec
lods
push
loope
sbbl
mov
js
push
adc
divl
dec
jp
xor
and
popf
das
push
lret
push
xchg
mov
cmp
jno
push
cli
xchg
ja
test
pop
dec
push
repz
xor
sub
iret
fisubrs
pop
push
mov
mov
xchg
test
add
jnp
mov
pop
mov
orb
and
out
test
dec
mov
xor
pop
mov
out
and
xchg
jg
xchg
jp
adc
loope,pt
fdivrs
cmp
jp
mov
vpcomub
mov
lahf
std
mov
add
data16
cmp
repz
ret
into
std
xchg
in
fldt
ja
or
jb
decl
inc
xchg
dec
push
das
push
jl
stos
sahf
icebp
mov
dec
xor
cmp
loopne
jae
push
mov
xchg
scas
mov
push
jns
popa
dec
and
cld
ljmp
or
sbb
push
cmp
push
fidivrl
mov
lods
jno
inc
dec
mov
mov
and
push
jl
aad
les
cmp
repnz
sbb
cwtl
xor
fstps
xchg
dec
int
scas
sbb
loopne
push
rcrl
mov
pop
cmp
mov
jb
out
and
shll
sub
pop
outsl
dec
jns
adc
data16
add
int
notb
andb
nop
or
inc
lahf
inc
or
nop
repnz
cmp
mov
adc
fisubrs
inc
xor
mov
into
dec
ljmp
push
push
mov
adc
lret
fwait
mov
jne
test
cmp
pop
in
jp
xchg
rcr
sahf
pop
repnz
inc
rclb
sbb
gs
add
icebp
loope
sahf
in
sub
add
pop
inc
and
cmp
sbb
xor
es
inc
inc
sarl
sub
rcll
dec
sub
mov
inc
inc
dec
mov
push
push
inc
andnps
jl
xor
and
dec
in
fistps
out
adc
push
imul
cmp
rclb
int
or
outsb
icebp
cmpsb
jae
mov
adc
ja
push
jne
sub
repnz
jp
xor
jle
cltd
add
dec
aad
scas
mov
mov
shlb
xor
je
mov
fldcw
and
loopne
and
in
lds
inc
xor
sbb
call
cltd
xchg
out
push
jnp
mov
pop
xlat
outsb
push
std
ja
lds
cmp
add
push
add
dec
add
push
jne
sbb
push
test
xchg
cltd
std
push
lahf
idivb
das
jle
stos
cmpsl
imul
xor
sbb
sarb
fwait
pop
mov
xchg
outsb
mull
fucom
add
shll
loop
cmp
inc
xor
jl
sbb
sarl
pop
push
dec
pusha
sbb
sbb
jb
mov
std
adc
inc
adc
test
xor
insb
filds
mov
sbb
das
jo
inc
mov
adc
cli
or
add
negb
mov
arpl
movsb
jbe
addr16
enter
fldenv
test
test
fxch
cmp
mov
addb
mov
scas
sbb
inc
lock
data16
out
shrb
cmp
mov
inc
dec
xlat
pushf
enter
push
mov
and
mov
mov
push
mov
scas
xchg
mov
and
stos
mov
jb
add
xor
dec
out
cltd
pop
iret
call
sbb
jl
xchg
sbb
loopne
cmpsl
testb
out
and
sub
cltd
mov
dec
adc
out
pop
fimuls
mov
in
cmpsl
fists
cmp
add
test
mov
fcoms
ret
jle
jbe
sbb
mov
mov
scas
in
xor
xor
leave
jnp
in
pop
mov
shlb
lahf
jnp
cmp
cmp
and
dec
cs
cmp
hlt
push
sbb
cld
lods
add
movups
or
int3
in
leave
xchg
sub
cli
out
pop
std
aad
dec
out
add
loop
xor
rcrb
popa
movsb
ret
sub
sub
cmc
sbb
fisttpl
push
loop
in
shll
insb
and
dec
aas
into
mov
iret
pushf
inc
cld
scas
call
das
popa
lods
stc
xchg
mov
push
aaa
addl
in
aaa
sbb
lcall
jae
push
popa
in
cmp
cmp
aad
xor
imul
sub
inc
jmp
shll
or
xchg
popf
scas
fadds
ficoml
push
mov
ficoml
inc
notb
ss
adcl
loopne
sub
movsl
not
xor
or
xchg
subb
cmpsb
loop
rorl
dec
mov
inc
scas
mov
ss
inc
sbb
pop
call
cwtl
cld
mov
inc
cmp
popf
lock
xor
xlat
or
cmp
xor
mov
mov
and
jnp
imul
pop
push
scas
fiaddl
arpl
mov
inc
mov
lret
bound
cwtl
jg
add
sbb
cmp
xchg
fsubs
jbe
in
mov
adc
xchg
inc
sub
dec
movsl
cltd
mov
sub
and
frstor
push
and
iret
push
fists
lret
cmp
inc
mov
inc
shrb
insb
or
out
pop
pop
inc
insb
inc
out
pusha
inc
add
cmpsl
inc
pop
arpl
cli
cmpb
jns
lods
add
mov
fidivrs
mov
inc
rcl
cld
scas
rolb
dec
in
jl
fdivr
mov
push
or
test
mov
mov
and
jb
call
mov
ljmp
loop
xor
sub
clc
pop
inc
cmpsl
adc
loopne
push
out
push
lahf
cmpl
pop
aas
adc
cs
mov
xchg
sbb
mov
jbe
xchg
mov
xchg
sub
mov
outsb
xchg
and
xchg
insb
mov
ficoml
and
sahf
sbb
scas
pop
into
es
pop
inc
dec
jecxz
or
movsl
dec
sbb
scas
adcl
jns
or
and
jl
shll
push
cld
cwtl
mov
dec
sahf
jmp
out
lahf
nop
and
popa
int3
lcall
mov
scas
add
sbb
icebp
sub
je
xor
jge
fildl
out
loope
sub
jmp
jbe
fcmovb
add
notb
cs
push
adc
mov
inc
adc
jo
push
mov
adc
nop
decb
outsl
inc
cmpsl
inc
stc
xchg
mov
sub
pop
in
push
rcrl
mov
mov
int3
pop
lcall
bound
sub
in
cmp
xchg
sbb
rcrb
testl
lahf
mov
and
fdivr
xor
ja
mov
incl
or
out
lds
or
adc
sti
js
hlt
lret
push
ja
lahf
repnz
jp
mov
cli
sbb
aam
dec
arpl
jg
ret
xor
xchg
imul
xchg
jmp
ret
pushf
in
pop
mov
add
test
gs
int
roll
out
push
sbb
dec
aas
jb
or
loop
cmp
dec
xchg
mov
dec
scas
xor
mov
fisttpll
stos
ret
and
xchg
xor
push
sbb
add
fisttpl
add
lret
mov
pop
or
lea
sub
popa
mov
cmpsl
andl
push
fs
rorl
sub
push
aad
shlb
cmpsb
sbb
cmp
mov
ss
dec
jne
jo
mov
xor
fdivs
test
mov
fbld
in
mov
cmp
add
xchg
aam
sbb
inc
js
fidivrl
repnz
jmp
jbe
jnp
in
mov
xchg
push
adc
mov
inc
adc
lds
sti
lcall
arpl
lahf
inc
mov
sbb
scas
xchg
popa
gs
or
shlb
sar
cmp
dec
out
aaa
fwait
adc
in
or
int3
movsb
js
mov
pop
ret
and
shl
inc
ret
push
and
mov
cmp
lret
loop
inc
or
sub
push
idivb
mov
popf
or
popa
shr
ja
xchg
pusha
pushf
nop
adc
lret
mov
pop
ja
jb
divl
push
aam
in
pop
cmp
jo
clc
mov
sbb
arpl
into
xor
arpl
jo
xchg
xor
jl
cltd
inc
shrl
jb
data16
add
popf
sub
lock
inc
out
and
aad
shll
out
aas
jmp
pop
incl
bound
mov
fsub
xor
cwtl
jo
pop
loopne,pt
out
pushf
clc
fs
insb
stos
jae
push
sti
daa
pop
rcrb
push
push
cmp
xlat
int
ret
xor
sub
out
scas
xchg
imul
push
loop
dec
inc
mov
sub
cwtl
movsl
mov
sub
sbb
inc
lds
pop
mov
ja
add
aam
adc
add
push
mov
je
lret
lss
push
out
mov
pop
sub
cld
enter
bound
lret
push
adc
pop
andl
xchg
pop
pop
test
fisubrs
ljmp
data16
sub
jae
xchg
imul
cmc
mov
loope
sbb
push
ds
test
sbb
lods
in
icebp
das
movsb
bound
dec
ss
cmp
and
je
shll
adc
fwait
inc
mov
mov
fwait
sub
jo
lods
mov
jns
sbb
daa
divl
int
nop
xchg
mov
mov
mov
cmpsl
mov
addr16
xchg
adc
dec
insl
stos
fimuls
in
mov
push
inc
stos
mov
lock
dec
inc
scas
pop
lret
repz
lods
sub
and
sub
ljmp
ret
sub
movsl
mov
mov
into
xor
mov
nop
push
xor
mov
cmc
lret
int3
jns
add
in
push
rol
addr16
dec
scas
lods
ja
push
cmpsb
mov
mov
lret
idiv
les
inc
in
jp
daa
test
out
mov
shlb
inc
jle
push
mov
jmp
push
mov
lea
mov
std
rclb
sbb
and
sbb
inc
dec
insl
icebp
addl
out
in
insb
xchg
pusha
aaa
popf
shll
sub
adc
dec
xchg
and
lret
mov
addb
divl
adc
ljmp
inc
push
in
vmwrite
fcoml
nop
cmp
nop
das
lcall
in
out
mov
cmp
add
jle
mov
mov
cs
dec
divb
lods
fcmovne
mov
mov
into
sbb
rolb
icebp
xchg
xor
cmp
sbb
sub
jmp
pop
clc
rcrb
sbb
loopne
push
out
or
pop
fidivl
shl
lds
dec
jnp
jae
fisubrl
mov
mov
xor
fisubl
and
sub
notb
adc
mov
test
or
loopne
and
stos
cmp
loop
sub
test
pop
stc
jg
lods
test
push
inc
pop
into
bswap
mov
test
push
arpl
or
jae
lcall
subl
push
or
fidivl
ficomps
adcb
scas
and
adc
jle
das
cmpsl
sub
call
sbb
sbb
xor
nop
adc
dec
popa
dec
dec
pop
ja,pn
adc
test
aam
jno
lcall
adc
mov
into
jl
fldl
mov
ljmp
pusha
jnp
out
shrl
cmc
cmp
fs
pop
push
into
aas
cmc
xor
mov
and
ret
mov
lcall
enter
roll
jne
mov
ljmp
adc
out
adc
clc
stos
cmp
ja
mov
lock
push
dec
daa
cwtl
imul
inc
mov
jl
or
cmc
jmp
movsl
negb
lock
dec
inc
stos
mov
das
mov
mov
ljmp
lods
sar
jae
jbe
inc
mov
push
outsl
xchg
cmpsb
xlat
int
push
push
enter
gs
push
cmp
sahf
inc
pop
inc
add
inc
mov
outsl
mov
and
lods
out
add
js
jl
roll
addr16
repz
mov
push
sbb
xor
shlb
jae
sahf
psrlw
mov
sub
les
lods
rorb
cmpsl
cs
pop
adc
xchg
mov
jl
or
ror
sub
dec
test
data16
js
mov
loope
test
sub
jl
daa
mov
test
outsl
fmul
lds
jnp
fnstcw
dec
fsubp
mov
or
stc
call
mov
add
lds
stos
stos
jg
add
push
sbbl
jbe
movsl
dec
cmc
cmc
or
mov
mov
iret
jae
jle,pt
cmp
cmp
pop
cmpsb
jmp
fincstp
cmovns
shll
sbb
mov
ds
mov
mov
pop
jbe
call
mov
mov
jne
inc
jmp
mov
pop
subl
push
jb
inc
and
aas
xor
lcall
test
das
jmp
pop
cmpsb
scas
fisubrl
lret
addr16
pop
lods
and
addb
jle
stc
sub
mov
mov
mov
cmp
inc
or
xor
nop
jne
add
cwtl
sbb
rorb
cs
jle
loopne
push
iret
add
popa
mov
mov
xchg
jo
enter
xchg
jae
jbe
dec
mov
in
popf
subb
pushl
enter
arpl
xlat
faddl
lret
inc
sbb
gs
add
es
fidivl
shl
mov
daa
and
mov
pop
daa
mov
lods
and
sbb
mov
lods
ds
mov
mov
add
idivb
jne
add
sbb
sbb
jmp
mov
imul
mov
daa
in
mov
icebp
add
push
mov
push
pusha
sbb
mov
loopne
mov
loop
add
push
mov
pushf
out
fpatan
dec
xor
fld
insl
dec
iret
les
mov
fwait
mov
out
out
push
jl
or
stc
mov
jns
add
stc
lea
cwtl
jle
rcll
jl
inc
loope
sbb
cmpsl
insl
pop
add
xchg
fcmovnbe
hlt
and
es
mov
mov
adc
cmpsl
cmp
push
push
jbe
inc
pop
pop
sti
insl
inc
jg
and
pop
testl
pop
xchg
dec
sbb
xor
xchg
bnd
dec
push
sarl
dec
or
jns
jp
cld
mov
push
into
xor
and
stc
xor
leave
aam
sbb
cltd
add
movsb
xchg
or
aad
outsb
sub
jl
std
xor
or
sub
and
repnz
xor
add
cmp
and
icebp
mov
imul
and
ret
fimuls
xor
push
leave
cmp
pop
insl
jae
cwtl
repz
movsl
in
jb
dec
std
fs
jecxz
cmpb
xor
nop
xchg
mov
xchg
mov
cmp
pop
les
sub
insl
in
add
push
test
idivl
loopne
std
hlt
cld
dec
dec
add
sahf
fcoml
js
inc
repnz
shlb
dec
ljmp
sbb
mov
xchg
sbb
jb
mov
xor
out
mov
stc
xor
dec
loop
mov
mov
insb
adc
mov
scas
mov
mov
push
iret
imul
push
or
add
jecxz
sbb
in
sub
pop
or
xor
push
lahf
ja
inc
rcr
scas
xor
enter
mull
rsm
mov
iret
in
mov
in
loop
int
cmp
mov
test
inc
jle
sti
sbb
dec
mov
orb
outsb
icebp
jmp
sbb
add
pop
fdivs
insb
clc
ja
rol
mov
add
dec
pop
outsb
insl
cltd
enter
popa
fdivl
adcl
movsb
lret
adc
lds
sub
xor
hlt
orb
jle
bound
aaa
jl
pop
in
or
jb
shll
mov
sbbl
xor
ret
call
xor
loope
push
mov
lea
pop
jecxz
lea
xor
push
add
pop
ret
ss
adc
mov
sti
es
dec
sbb
dec
std
dec
pop
sub
xor
adc
outsl
lret
or
add
cmp
out
push
ret
stc
push
sbb
aam
test
jp
out
fisttpll
cmp
jl
xchg
orl
fisttpll
pop
out
in
cmp
out
aas
mov
nop
data16
js
aaa
add
gs
mov
sub
adc
popf
inc
test
push
or
pop
pop
cmpsl
xor
or
dec
push
xchg
push
or
out
test
ja
dec
adc
pop
mov
xchg
sub
mov
popa
dec
cmpsb
lret
mov
out
jmp
jb
pusha
xor
out
ljmp
cmp
xchg
mov
cs
mov
pop
clc
dec
mov
mov
dec
jmp
xchg
lret
stos
in
shrb
mov
outsb
in
rcrl
lcall
cmpsl
in
aas
inc
sahf
push
pop
ja
mov
insl
jmp
jecxz
imul
and
std
std
jnp
dec
jge
adc
pop
xor
or
repnz
mov
or
push
push
sub
movl
stc
fs
mov
mov
push
cmp
pop
or
jb
sbb
jmp
mov
jl
push
jbe
cmp
sbb
repnz
xchg
loopne
or
xlat
and
add
push
mov
in
xchg
jmp
arpl
mov
leave
xor
hlt
test
in
ja
cmp
pop
push
or
jnp
jl
dec
and
in
adc
dec
and
pop
and
jp
mov
jno
dec
repnz
xchg
jmp
mov
push
mov
add
jns
sbb
add
arpl
mov
lods
in
jae
cmp
stos
sbb
mov
int3
pop
pop
jmp
pop
pop
sahf
or
cmp
adc
icebp
jl
cmpsl
ret
cmp
push
dec
das
cwtl
cmpsl
add
sub
xchg
es
xor
inc
imul
cmp
jle
scas
loopne
sarl
xor
in
inc
xchg
xor
hlt
sub
lds
jno
dec
adc
mov
mov
decb
clc
xchg
pop
and
xor
or
add
or
push
pop
adc
enter
cltd
jbe
int3
rorl
ljmp
inc
sbb
rorb
mov
dec
std
pop
mov
mov
and
add
xor
cmp
xorl
inc
mov
mov
inc
or
cwtl
jo
cmp
or
daa
roll
outsb
nop
xchg
mov
loop,pn
loopew
ss
jbe
sbb
iret
cltd
je
ret
sbb
mov
dec
stos
inc
cltd
cli
out
mulb
jnp
mov
xor
leave
aam
adc
cmp
pop
sti
xor
sar
outsl
dec
int
je
movsb
subl
das
pushf
mov
pop
orl
aam
les
adc
js
pushl
jmp
lss
out
jp
or
jbe
lds
shr
sarb
popa
jecxz
cs
mov
xchg
xchg
pop
mov
cltd
std
movsl
pop
fldl
jne
sar
cmp
push
jecxz
xchg
mov
in
and
loope
sbb
insl
out
jg
xor
xchg
push
cmp
inc
pop
cmp
add
nop
std
pop
cmpsl
int
clc
aam
loop
sub
and
mov
leave
aas
dec
mov
aam
mov
push
shl
xor
sbb
arpl
jl
xchg
and
stc
nop
add
stc
sbb
pop
inc
add
mov
arpl
xchg
sti
imul
mov
cs
dec
movsl
aaa
push
pop
jnp
popa
mov
mul
sub
hlt
add
iret
push
loopne
loopne
cld
sbb
std
xor
mov
das
and
leave
sahf
jb
add
push
dec
or
call
mov
call
ljmp
fmuls
testl
inc
or
cmp
lcall
cli
mov
inc
pop
rolb
imul
rcrl
loope
xchg
mov
mov
push
sbb
mov
gs
jae
inc
dec
dec
mov
sub
xor
jecxz
and
imul
sbb
adcb
dec
mov
jecxz
popa
sub
mov
test
je
shlb
aam
fldenv
mov
pusha
xor
fwait
int3
push
xchg
dec
sub
fldt
mov
mov
inc
xchg
and
mov
stos
sbb
pop
inc
dec
imul
add
mov
sbb
push
out
xchg
movsl
cmp
call
cmc
daa
cwtl
fdivs
pushf
jae
cltd
dec
push
data16
add
sti
push
push
ficoms
rclb
js
je
cld
xchg
cmp
cltd
orb
xchg
xor
xor
and
sbb
lods
or
ret
push
js
fwait
std
mov
aas
fisubl
pop
fcompl
inc
jp
pop
arpl
std
mov
sbb
aas
mov
scas
in
bsf
cmpsl
and
stos
pop
or
sbb
nop
or
popa
mov
ret
adc
and
call
sbb
fmuls
cmpsl
mov
int3
dec
xchg
cmp
sbb
xchg
mov
rolb
andb
dec
jns
or
jo
dec
adc
iret
mov
insl
push
inc
fs
call
mov
cmp
into
mov
pop
cwtl
add
and
repz
cmp
stos
sub
ret
jle
pop
loope
push
xor
sbb
aas
int
inc
add
jl
jbe
mov
push
and
mov
or
push
fadd
mov
nop
dec
pop
nop
fiadds
sahf
push
inc
fs
sbb
nop
or
shlb
pop
loop
mov
push
std
lahf
and
andl
mov
cmp
adc
inc
jns
repz
out
stc
inc
or
and
cwtl
ljmp
pop
add
jbe
outsb
das
dec
and
in
push
fstp
sbb
jmp
pop
lret
int3
add
stos
out
pusha
jmp
lods
shlb
cmpsb
gs
and
push
mov
cmp
lea
push
lock
dec
xchg
frstpm(287
arpl
push
int3
jle
and
shl
imul
repz
cld
cmc
filds
fst
jae
jl
icebp
cmp
sbb
negb
pop
push
pop
lods
and
dec
mov
pusha
xchg
hlt
jecxz
fnstsw
mov
test
pop
jo
pop
cli
push
inc
std
out
in
cmpsb
arpl
iret
jb
jae
dec
in
pop
into
xor
fistpll
sbb
sub
cli
out
cmp
pop
loop
jbe
xchg
sub
test
mov
cmpsb
movsb
mov
xorl
test
ret
mov
jl
in
and
xchg
insl
or
sbb
pop
loope
mov
add
cmpb
adc
cli
imul
xor
fs
shll
scas
xchg
or
push
adc
hlt
add
sbb
jne
inc
shr
mov
pop
sub
jno
repz
es
aaa
cmp
lahf
adcl
stc
les
add
mov
loopne
inc
notl
or
fisubrl
shll
xchg
int
mov
push
jecxz
dec
lods
outsb
outsb
xor
cmp
push
idivl
jecxz
negb
repz
adc
popa
mov
movsl
pop
test
imul
lcall
and
adc
mov
int3
push
push
insb
inc
pop
mov
inc
push
and
sbb
mov
enter
fsts
pop
imul
sub
addr16
je,pt
or
dec
hlt
add
nop
fdivl
sub
imul
cld
dec
jle
insl
mov
mov
fidivl
jbe
mov
cmp
jge
sub
hlt
stos
dec
jno
push
repnz
outsb
out
mov
cs
xchg
pop
mov
leave
sahf
jp
mov
push
xor
loope
jmp
repz
loop
xchg
mov
in
or
push
fs
sarl
mov
clc
mov
out
call
test
adc
int3
sarl
clc
xchg
sbb
ffree
adc
rorl
repnz
lcall
hlt
or
inc
stos
sub
inc
mov
jle
out
pop
lret
xor
add
or
inc
inc
xchg
call
jle
pop
mov
push
pop
les
dec
ret
rcrb
jle
jbe
fdivrl
ja
iret
pxor
pop
cmp
icebp
shrb
push
jne
add
ss
and
lea
shll
fnstenv
inc
cltd
sbb
fwait
mov
outsl
fucom
cmpsl
fneni(8087
shlb
xchg
fldl
ss
aam
sbb
loope
jno
cmp
sti
mov
pop
test
push
shll
outsl
and
or
sarb
shr
mov
mov
push
loop
pop
addb
ljmp
lock
repz
es
in
cmpb
call
mov
mov
out
int3
loope
enter
mov
cmp
ss
out
mov
pop
jbe
in
test
repnz
iret
adc
rcrl
movl
xchg
inc
lret
mov
xchg
xor
jae
sub
xor
dec
inc
jbe
jo
push
jl
xchg
cmp
lods
and
test
push
cmc
mov
ljmp
jle
lods
mov
sub
sub
xchg
inc
sub
dec
dec
pushf
inc
pop
pop
pop
mov
adc
js
xor
lcall
int3
push
mov
jno
push
imulb
jmp
aam
mov
negb
int
inc
ret
scas
das
adc
sbb
call
fldcw
and
jbe
mov
call
pop
subb
jg
cmp
sbb
jp
lcall
sbb
add
xor
cwtl
iret
mov
loope
daa
dec
push
nop
out
call
inc
lods
jnp
mov
adc
sub
adc
jbe
jne
dec
sti
mov
mov
movsl
insl
pop
xor
lods
mov
sarl
fistpll
mov
lods
aas
push
iret
insb
cwtl
out
test
ljmp
inc
xchg
sti
clc
lahf
flds
into
dec
bound
dec
sbbb
inc
fidivs
subb
negb
test
mov
cltd
in
in
in
mov
stos
fwait
loope
lock
shr
movsb
mov
pusha
or
int
jb
add
jae
out
mov
inc
daa
or
in
mov
push
sbb
pop
cltd
push
ljmp
jo
mov
lods
lods
bsf
sbb
ret
jnp
push
fidivs
imul
movsl
lret
or
mov
xchg
push
lea
mov
fidivrl
jecxz
cmp
jnp
out
push
or
in
ret
pop
push
xchg
mov
lock
les
adc
in
lret
into
xorb
push
inc
lea
insl
mov
test
ret
push
xchg
mov
pusha
ljmp
rcrl
xchg
xchg
sbb
adc
nop
xchg
xchg
sub
cltd
cli
mov
rclb
dec
stc
loopne
out
xchg
or
push
subl
cmp
clc
xorl
adc
cmovl
imul
fistl
xor
sbb
mov
mov
or
jmp
adc
xchg
mov
mov
mov
push
out
xchg
cltd
cmp
out
gs
movsl
push
test
or
aad
ds
lds
inc
mov
inc
xor
scas
repz
and
mov
jnp
pop
mov
mov
fstps
loop
xchg
xor
or
and
cmp
add
jp
dec
add
rcrl
pop
cmp
fildl
mov
cld
rclb
out
pop
cmpsb
adc
test
mov
mov
out
int
adc
scas
inc
jmp
add
lock
adc
mov
sti
xchg
sbb
mov
ljmp
jne
imul
mov
lods
in
outsb
fdivrl
dec
out
fdivrl
jbe
xchg
ffree
add
pop
xchg
mov
stc
stos
aam
shl
rcrb
ds
push
jo
or
push
iret
inc
pop
push
and
leave
adc
pop
ss
imul
sub
sti
mov
push
mov
sub
shrl
fdivrs
arpl
stc
or
call
je
imul
xchg
add
or
xchg
mov
xchg
mov
inc
sub
push
jmp
rorb
orl
idivb
leave
scas
or
push
add
and
xchg
mov
subl
sub
aam
dec
cld
fistl
stos
aad
shrl
pop
les
dec
push
loopne
pushf
arpl
adc
and
dec
lods
cli
mov
and
cmp
movsl
jae
enter
arpl
xor
pop
inc
flds
imul
pusha
popf
test
mov
add
test
push
ljmp
pusha
xlat
push
andl
jae
cmpsb
push
adc
hlt
push
inc
pusha
push
pusha
daa
jecxz
push
clc
stos
pop
mov
push
mov
icebp
sub
mov
int
bound
pop
add
ds
sub
mov
sub
or
xor
lret
ljmp
xchg
mov
loop
ja
xor
dec
stos
outsb
das
stos
insl
iret
push
mov
loope
les
add
in
jmp
or
sub
ret
movsb
movsb
rcrb
lahf
cmp
imul
cld
dec
xchg
int
hlt
fldl
jg
int3
inc
ret
dec
pop
inc
les
dec
mov
push
mov
push
xchg
bound
imul
int3
adc
and
or
pop
mov
divl
lahf
test
ja
sahf
mov
loop
je
sub
add
and
imul
test
inc
cs
lahf
ficoms
fisttpl
dec
adc
ret
mov
lea
mov
xlat
jmp
addps
into
js
mov
ds
lods
jo
cs
pop
add
and
inc
jg
cltd
cmp
mov
push
insl
mov
dec
mov
mov
sti
inc
ror
adc
jmp
fwait
adc
jns
cmpb
fisubrl
aas
xor
xchg
ret
imul
add
rep
out
icebp
daa
push
xor
mov
adc
arpl
sti
xor
sub
insb
push
and
jge
idivb
cmpsl
pop
push
adc
mov
xor
mov
loop
mov
mov
ss
leave
jnp
std
mov
adc
adc
push
jmp
push
shlb
xor
call
jne
mov
adc
test
in
push
ja
dec
xor
mov
mov
and
pop
or
cltd
imul
int
hlt
leave
cmp
adc
lret
or
jbe
and
mov
shr
xchg
jl
cmpsb
sub
xchg
divl
dec
cmp
sahf
push
lret
push
sti
dec
es
push
ret
pop
sub
js
enter
loop
hlt
out
cmp
mov
test
and
pop
mov
pusha
flds
dec
cmp
enter
data16
test
xor
lahf
cmp
cmp
jl
lahf
xchg
mov
push
jecxz
pop
in
and
jnp
mov
push
sub
mov
shlb
pop
ja
test
xor
adc
fld
ljmp
cmp
popa
cmc
gs
dec
inc
out
or
insb
cli
std
js
xchg
fiadds
cmp
mov
cmp
and
mov
cmc
pop
outsl
mov
xchg
aad
loopne
dec
jmp
repnz
pushf
std
outsb
cmc
xchg
push
les
jo
jns
iret
shll
or
xchg
loop
mov
cmp
jbe
mov
mov
add
dec
pop
xchg
push
das
xchg
fs
mov
outsb
and
sti
cs
movsl
stc
lea
jnp
lcall
out
jnp
lods
xchg
xchg
mov
fs
pop
addl
dec
fimuls
into
dec
mov
fildll
aad
xchg
or
in
jo
aam
sbb
insb
loop
popf
enter
sbb
ja
ret
out
mov
int3
aad
in
std
iret
cmp
cmp
lret
out
andb
push
dec
cmpsl
sbb
dec
daa
aas
sbb
testb
fimuls
sti
inc
out
shlb
es
push
in
sub
push
movsb
test
shrb
movsl
push
adc
mov
cmp
push
fwait
ljmp
imul
mov
fmul
bound
mov
push
bnd
in
mov
mov
inc
out
add
dec
movsb
add
fidivrl
dec
fcoms
xlat
sbb
inc
lahf
jbe
push
add
ficompl
loop
xorl
adc
push
fistps
jno
xchg
loopne
add
push
lret
jnp
cmp
mov
inc
inc
ljmp
mov
mov
cli
push
adc
loop
dec
mov
fimuls
push
ficompl
jecxz
push
mov
adc
aaa
shlb
xchg
addr16
iret
popa
xor
ds
data16
and
dec
clc
mov
leave
sub
xchg
cmpsb
dec
fadds
fildl
in
shll
loop
push
enter
jnp
mov
das
jmp
mov
outsb
pushf
icebp
mov
cmpl
dec
lods
cmpsl
cmpsb
adcl
adc
mov
subb
lock
fldl
or
hlt
cli
mov
popf
sbb
cmp
push
int
dec
push
push
ror
cld
jle
and
popf
mov
add
aad
clc
fnsave
xchg
xchg
jae
fs
fmul
dec
dec
jno
std
xchg
mov
dec
insb
xchg
js
test
loope
in
repnz
pushf
cld
shrb
es
add
ret
rorb
xchg
sbb
cltd
push
sbb
sbb
shl
mov
pop
xor
mov
rorl
fnstsw
or
cmp
push
mov
fisubs
cwtl
xorl
out
ss
inc
xchg
or
jne
dec
dec
or
mov
outsb
icebp
movsl
out
inc
test
shll
rclb
pop
mov
lods
mov
and
outsw
sub
sbb
dec
ret
cltd
adc
sub
xchg
mov
enter
aam
ja
shlb
jo,pn
mov
or
jne
push
into
jg
mov
addb
cltd
int3
cmp
pop
add
mov
sub
cmp
lret
mov
dec
out
pop
lret
or
and
shl
push
cs
sub
in
inc
jno
adc
jp,pn
mov
addr16
add
int
fcoms
mov
adcl
test
orl
cmp
fidivs
mov
dec
adc
loop
stc
jno
dec
pop
push
adcb
push
push
loop
jb
enter
push
inc
cmp
call
pop
pushf
imul
mov
cmpsl
sarb
call
sbb
sbb
dec
dec
mov
inc
jl
aas
shll
dec
lret
sub
test
xchg
jmp
inc
mov
jecxz
insl
inc
pusha
cwtl
dec
xor
and
dec
nop
lock
push
shl
cltd
add
cmp
scas
cmp
xchg
jns
mov
stc
dec
cmp
jmp
add
jecxz
ss
mov
test
in
ret
ss
pop
popa
out
push
inc
test
fwait
cld
cmc
ljmp
sbb
clc
shrb
inc
fucomp
int3
gs
lcall
std
sub
in
and
pusha
dec
jg
mov
xchg
push
pushf
sahf
dec
in
sbb
sahf
mov
fwait
xchg
rcrl
jnp
ret
std
in
js
add
cmp
adc
jae
cmp
mov
fwait
mov
mov
jl
xchg
filds
into
xchg
clc
sub
cmp
xor
dec
les
mov
jae
pop
jnp
dec
std
aaa
mov
and
idivb
ret
int3
mov
mov
outsb
lods
ret
faddp
sbb
inc
add
pop
imul
outsb
xchg
or
jns
jnp
ja
sti
cmp
movsb
rorl
mov
push
jmp
xor
sbb
xchg
jns
mov
arpl
cmc
pushf
cld
sub
aas
lods
div
test
mov
cmp
cmp
adc
jne
mov
push
nop
adc
fisubs
push
push
xchg
fldcw
jecxz
pop
fstpl
cmpsb
or
xor
or
jne
in
xchg
mov
das
mov
sbb
sti
mov
insb
push
lods
orl
adc
cmp
and
jae
clc
cmp
inc
mov
aaa
or
daa
push
pushf
xchg
inc
push
pushf
movsb
xor
test
out
gs
push
mov
jmp
xchg
sub
cmp
inc
pop
std
mov
jae
test
hlt
or
xchg
adc
mov
es
xchg
inc
lea
insl
jns
movl
or
inc
mov
sahf
jns
arpl
es
mov
fnstenv
popa
test
fldt
fwait
pop
fnstenv
and
repz
push
mov
rorb
mov
or
rorb
adc
jo
push
es
cmp
inc
bound
push
xor
mov
icebp
mov
ror
aad
sahf
outsb
pop
out
jmp
pop
jp
lods
lea
adc
aaa
nop
xchg
xchg
push
pop
push
aaa
mov
and
psubq
jbe
psadbw
shlb
jmp
mov
dec
and
clc
mov
inc
inc
pushw
jbe
push
jb
flds
xchg
add
add
enter
mov
jg
and
faddp
enter
aad
rorl
scas
or
aas
fnclex
stos
out
out
xchg
cmpsb
cwtl
push
fistl
xchg
fs
cld
mov
or
dec
push
popa
in
pop
shrl
mov
cmpb
push
dec
js
jg
idiv
lea
mov
enter
andl
mov
push
cmc
cmp
push
mov
jne
inc
pop
andl
int3
xchg
leave
cmpsl
ds
xchg
and
ss
inc
pop
test
dec
pop
mov
push
imul
rcrb
cmp
lds
pop
cmp
push
mov
stos
fdivr
test
push
cltd
cltd
rcl
js
mov
shrl
fmuls
dec
adc
xchg
nop
jne,pn
mov
out
or
arpl
xchg
inc
xchg
shlb
jp
or
dec
cmp
push
xchg
pusha
orb
mov
dec
push
mov
fdivrs
out
sti
sahf
xchg
xchg
add
es
pop
ss
cmp
out
aad
mov
xchg
test
int
pop
jbe
mov
ret
xchg
dec
dec
add
mov
lret
cli
adc
in
jnp
sub
daa
mov
jle
cmpsl
ret
imul
addr16
mov
fsubrl
insl
std
shrb
dec
sub
sbb
mov
lcall
push
fwait
add
inc
ljmp
subb
scas
jmp
clc
ss
cltd
loope
sub
jp
sahf
loopne
inc
repz
sub
adc
dec
lea
adc
mov
xchg
movsl
fistpll
push
lds
pop
in
js
orl
icebp
sub
int3
popa
leave
in
movsl
pop
lea
jno
inc
ss
mov
js
sbb
mov
pop
loope
xchg
inc
mov
sbb
fdivl
scas
aad
jo
push
add
cltd
icebp
ret
fwait
stos
pop
into
insb
inc
mov
mov
sahf
jnp
mov
pusha
ret
pop
add
cltd
ficoml
int
out
fidivrl
rcrb
sub
mov
lcall
push
adc
xchg
or
mov
int
cmc
or
call
mov
mov
add
add
dec
adc
movsb
sahf
cmp
add
or
cld
fsubs
sbb
aaa
cltd
pop
and
adc
mov
addb
mov
mov
pop
sbb
xchg
xchg
ret
ja
push
shrl
sbb
push
inc
push
faddp
lea
mov
repz
iret
push
ret
loope
cmpps
mov
mov
push
or
sub
out
pop
cmpsb
shrb
out
adc
mov
fldt
inc
clc
enter
push
mov
flds
gs
stos
mov
push
decl
out
ret
xor
mov
stos
inc
sbb
out
sub
fucom
inc
daa
popf
divl
popa
popa
aam
pop
stos
mov
cmp
jl
inc
ds
popa
fimull
add
adc
mov
jne
mov
mov
jmp
mov
call
and
xchg
add
orl
pop
addl
out
daa
jecxz
or
xor
xchg
mov
sub
push
mov
push
dec
popf
xchg
add
jbe
or
int
rorb
enter
test
out
fnsave
sub
and
les
mov
sti
jns
in
jmp
dec
push
shlb
inc
pop
xchg
pop
in
xor
or
xchg
sbb
pop
int3
addb
sbb
xor
and
or
insl
sub
bound
lods
icebp
mov
push
stc
dec
jmp
and
sub
fisubrs
or
sbb
std
mov
jl
mov
xchg
es
inc
loop
xor
and
lea
adc
mov
out
shl
cmc
or
daa
xor
sbb
cmp
xorb
call
push
iret
sub
sbb
dec
sbb
mov
popf
pop
loopne
aam
sbb
push
xor
ret
jp
xor
push
in
jmp
enter
repnz
dec
rolb
cmp
fs
stc
adc
es
loop
push
data16
sbb
mov
fcoms
or
call
jae
stos
sbb
test
xchg
mov
mov
arpl
cmp
rcrb
scas
ds
pop
add
shufps
fidivrs
mov
sti
mov
pop
mov
mov
xorl
sbb
dec
sti
push
jno
sbb
and
insl
pmulhuw
andb
clc
arpl
pop
push
cs
pop
push
sbb
pop
xchg
jne
add
iret
clc
adc
in
lea
push
push
sub
icebp
outsb
pop
inc
pop
int3
fildll
mov
insb
fsubrs
adc
xor
lock
hlt
aam
xor
inc
popa
and
daa
xchg
jae
dec
stc
jecxz
adc
ret
jae
push
push
pop
enter
xor
jmp
sub
sarb
lret
sub
mov
jecxz
dec
xchg
inc
shlw
cs
orb
jno
notl
or
ja
loopne
cmpsl
pushf
mov
inc
dec
out
aaa
sub
into
jecxz
je
jmp
sub
in
push
loop
dec
push
gs
dec
jmp
call
or
nop
ds
xchg
xchg
ret
jnp
mov
in
jge
xchg
xlat
sbb
push
dec
popa
ss
int
jg
movsb
mov
rcrb
sub
cwtl
adc
in
jnp
mov
sbb
or
pop
iret
mov
push
popf
mov
push
shrb
add
mov
fsubs
add
pop
repz
test
pop
stos
dec
mov
out
rcrb
decl
or
mov
test
cld
test
mov
arpl
jge
pop
jmp
in
add
pushw
xor
lock
cmp
mov
bound
mov
in
dec
and
fnstsw
mov
jecxz
idiv
mov
out
sarl
or
in
jle
xor
mov
subl
movsl
add
into
sub
aas
mov
push
shlb
in
mov
mov
xor
jb
xor
pushl
fsts
jge
cltd
shl
sub
jge
addr16
cld
pop
sbb
dec
push
cmpsb
add
push
shr
loopne
mov
xchg
daa
adc
or
fsts
lea
sub
push
mov
jp
ret
pop
ret
leave
mov
sarl
sbbb
nop
call
mov
fcomi
scas
xor
insl
das
xor
add
or
cwtl
or
jg
cmc
dec
pop
inc
and
mov
into
nop
adc
cmp
and
lods
sub
cmp
hlt
incb
dec
cmpsb
xor
xor
or
scas
sub
out
jecxz
sub
jl
pmullw
ret
jo
xchg
dec
div
sti
dec
xlat
jae
mov
add
cltd
clc
lods
sub
roll
dec
inc
cli
movsl
sbb
xlat
stc
mov
jmp
dec
cmp
adc
lea
jns
sub
pushf
push
outsl
out
mov
jbe
bound
jnp
pop
mov
and
outsb
cmpsb
push
jno
mov
aad
fidivrl
repnz
popa
int3
inc
push
insb
shlb
mov
sti
xlat
jae
jne
insl
adc
lds
inc
std
xchg
dec
and
adc
add
popf
loopne
cmp
mov
adc
sbb
and
lahf
addl
into
add
sub
pop
in
sbb
add
cmp
out
cmp
lds
lds
mov
in
xchg
js
dec
inc
dec
xchg
sbb
pop
test
ja
outsl
in
jecxz
add
popa
test
mov
jmp
scas
incl
shll
xor
ja
out
add
int3
mov
scas
pop
ret
inc
push
xchg
in
pusha
inc
jbe
ret
add
cmpsl
aas
adc
dec
add
test
mov
jbe,pt
push
sahf
cmpsl
mov
rol
push
jp
jb
and
jmp
mov
aam
or
xor
adc
mov
push
sub
rolb
and
popf
addr16
sbb
push
sub
dec
call
adcb
fs
pop
mov
in
push
xchg
ret
icebp
cmp
jnp
lcall
aas
and
mov
arpl
ja
jb
dec
loope
jns
shl
mov
lret
rcll
mov
arpl
inc
jg
xlat
test
xchg
sub
outsb
push
rorl
test
ss
xor
push
fisttpl
clc
add
pop
sbbl
lock
idiv
cld
and
inc
std
rol
lods
cld
pushf
lock
scas
and
add
push
jmp
leave
push
xchg
add
sub
xchg
adc
cmpsb
lods
das
lcall
dec
pop
jg
rorl
or
push
scas
ljmp
add
xor
ja
cmp
mov
adc
punpckldq
sub
sub
adc
mov
pop
adc
aas
std
pop
mov
push
subl
sbb
addr16
pop
mov
sbb
cmp
pop
dec
shlb
ret
adc
inc
xor
jg
sarb
mov
dec
mov
mov
repz
pushf
popf
loope
and
imul
out
addr16
push
push
popa
adcl
aas
shrb
mov
and
out
sysret
push
into
add
xor
xor
shl
out
stos
imul
iret
insb
rol
icebp
mov
icebp
push
push
jnp
out
push
in
ja
gs
or
or
add
shll
dec
mov
call
mov
pop
sub
push
fwait
pop
test
adc
std
leave
push
outsl
fnstsw
add
mov
fs
cmp
popf
mov
jl
push
push
int
sti
stos
iret
aaa
mul
xor
lahf
or
in
in
hlt
mov
sbb
dec
jmp
dec
xchg
ljmp
fstpl
aad
hlt
xor
lcall
mov
adc
push
add
push
or
cmp
mov
lds
pushf
add
jnp
lods
cmp
adc
imul
pop
pop
mov
test
xchg
jp
dec
aas
lea
xor
or
fsubr
dec
dec
inc
bswap
iret
or
jmp
push
or
pop
and
ja
orl
adc
mov
jl
stos
test
sti
adc
dec
pop
rolb
sub
sub
ss
and
rorl
movsb
je
ja
cli
test
fdivr
dec
jg
popf
jns
je
stc
cwtl
mov
pop
pop
push
pop
sub
dec
adc
insb
dec
gs
push
dec
pop
jg
jns
imul
xor
xchg
push
sbb
and
inc
xchg
jne
shl
xchg
mov
xor
sub
pop
pop
mov
jmp
mov
add
pop
pusha
fnstcw
mov
dec
inc
add
jecxz
pop
shr
and
in
repz
cld
or
pop
insl
cli
jl
arpl
insb
jl
rcll
sbb
mov
mov
lahf
sbb
aas
vmread
mov
inc
pop
xchg
and
movsl
sub
pop
or
jnp
jge
mov
movsl
add
cli
leave
dec
insb
dec
adc
fsubs
mov
pushf
adc
into
push
push
add
popa
jp
ja
test
sbb
push
icebp
test
inc
shl
and
cmp
test
jp
add
add
cmpsb
dec
rolb
andb
xor
jge
add
inc
imulb
xor
or
inc
test
int3
xchg
in
incb
inc
sarl
shrl
adc
scas
xchg
in
xlat
pop
insl
sbb
xchg
je
cmp
lds
test
call
sbb
pop
jae
dec
inc
jg
adc
push
lahf
inc
jne
xlat
xchg
mov
outsl
arpl
in
aaa
push
adc
stos
loope
cltd
stos
lea
scas
addr16
orl
daa
es
push
push
in
push
sbb
mov
pusha
xacquire
xor
xor
push
jl
mov
daa
push
add
add
in
or
call
sbb
mov
mov
ret
rorb
add
dec
shlb
adc
cld
in
push
mov
fistpl
sbb
push
push
fwait
mov
and
stc
jns
cmp
sub
and
mov
cmp
push
xchg
iret
mov
in
jle
push
add
stos
xchg
xor
or
mov
inc
xchg
ret
in
fists
pop
sbb
je
test
push
js
aas
xchg
mov
std
inc
inc
test
inc
jnp
xor
jge
cmp
pop
dec
negb
notb
fimuls
jb
andb
int
mov
xchg
and
and
daa
add
jle
daa
jnp
daa
push
lret
in
lods
jmp
push
loop
fdivl
sbb
aad
ljmp
and
mov
xchg
jno
and
fisttpll
jae
jl
cs
adc
je
jnp
rorl
out
xchg
in
int3
call
adc
cmp
dec
test
iret
lcall
sub
mov
sbb
cltd
sub
ss
ret
dec
sub
subb
adc
sbb
mov
shll
inc
ffreep
cmp
repnz
ljmp
xchg
iret
fldl
and
inc
subb
movsl
rcrb
mov
pop
mov
hlt
insl
inc
lds
lock
scas
outsl
mov
xor
inc
mov
and
add
mov
test
add
or
sbb
sbb
xchg
push
push
mov
dec
movsl
nop
iret
mov
xchg
lahf
mov
lret
imul
xor
mov
fidivrl
or
pusha
jne
sub
daa
mov
cli
test
or
mov
mov
sahf
sbb
lret
hlt
jl
or
mov
stos
jns
mov
xchg
imul
jo
xchg
add
jl
das
out
cmp
stos
xchg
or
ss
je
add
into
and
loop
adc
repz
jno
fmuls
loopne
imul
ljmp
out
push
mov
pusha
je
sbb
test
jbe
adc
push
xlat
and
mov
cmp
fcmovne
lcall
inc
mov
mov
jns
sbb
jo
or
mov
jmp
in
push
xor
adc
add
push
lods
jno
insl
addr16
addr16
add
mov
ljmp
mov
sbb
sub
cwtl
out
loope
es
loope
lods
fwait
mov
negb
sub
jbe
bound
out
je
out
lods
xchg
sti
aas
jl
cmc
push
mov
out
push
fwait
jge
pop
mov
inc
outsb
pop
add
aaa
ljmp
es
fcoms
dec
dec
mov
pusha
inc
aaa
shrb
mov
mov
adc
les
mov
ret
out
test
or
add
std
in
sbbl
xor
mov
and
cwtl
fidivs
addb
in
bound
enter
clc
jge
xchg
fucomip
add
pop
jae
aaa
push
adc
xor
enter
inc
xchg
int3
pusha
dec
add
rep
push
mov
test
lahf
sbb
jno
nop
rcrl
scas
xchg
cwtl
outsb
es
sub
scas
aas
mov
pop
orl
push
nop
imul
mov
ja
ret
add
lret
lods
pop
ret
fcompl
jp
adc
dec
jnp
unpcklps
mov
mov
jp
add
ds
test
mov
les
xor
push
cmpsb
js
xor
popf
es
xor
cmp
lods
push
repz
jb
in
stos
sbb
lods
mov
pop
in
jecxz
out
sbbl
ret
pop
mov
sarb
mov
repz
push
jmp
shll
sbb
mov
std
loope
push
cwtl
clc
xrelease
incl
daa
cs
inc
mov
ret
sbb
jae
das
ret
jae
or
jge
and
bound
and
dec
adc
pop
mov
lds
lods
jb
or
shlb
sarl
sub
les
jno
aas
jmp
inc
insb
mov
cmp
leave
inc
nop
adc
aam
and
push
or
fs
in
mov
cmp
fsts
imul
push
and
lods
sti
xchg
xchg
int
jmp
leave
push
push
mov
out
test
mov
pop
and
jecxz
jl
pusha
ljmp
jb
sub
xor
dec
dec
mov
in
in
int
pushl
jmp
sbbb
push
and
jp
sbb
fcom
and
jmp
xchg
fwait
mov
rdmsr
jb
and
dec
adcl
ror
je
inc
cld
jmp
add
outsl
pop
mov
mov
mov
jb
ljmp
aaa
cld
repnz
movsl
and
add
lret
js
jge
in
xchg
enter
scas
jp
out
inc
pusha
xor
arpl
fldt
cmpb
mov
mov
mov
inc
stos
push
repnz
sub
mov
shrl
in
fdivl
and
mov
sbb
repnz
outsb
lcall
pop
repz
jle
ret
or
sub
iret
jno
add
inc
jmp
sbb
pop
mov
jl
aaa
fldl
xchg
rcl
arpl
push
adc
mov
adc
dec
test
shll
ret
xchg
test
dec
xor
fistl
fcomp
jbe
mov
mov
mov
pop
mov
mov
mov
mov
fistl
ds
mov
loope
adc
xor
popa
jge
lds
addr16
jl
xor
mov
inc
sbb
test
fbstp
and
cmp
nop
idivl
push
jl
cmp
xor
adcb
lcall
xchg
push
pop
subl
test
sbb
rorb
stos
inc
cmpl
add
cmp
push
mov
jl
hlt
push
mov
adc
inc
push
mov
add
outsl
lea
dec
testb
roll
loopne
outsl
xchg
ljmp
shlb
ljmp
xchg
leave
add
xchg
push
aas
cmp
stc
insl
add
jns
mov
adc
cwtl
cs
sahf
addr16
stos
mov
das
out
aaa
sti
fdivrp
ljmp
shlb
xor
and
sahf
out
imul
rorl
test
jae
push
mov
mov
mov
push
mov
pushf
testl
jnp
sti
sub
or
rol
adc
adc
xchg
clc
push
mov
pusha
and
xor
xchg
pop
jle
pop
dec
or
xor
scas
mov
outsl
lret
inc
and
fistpl
xchg
dec
xchg
mov
add
jl
xchg
scas
aaa
pusha
lret
enter
jmp
fiaddl
ret
mov
mov
je
mov
mov
xchg
xor
cmpsl
pop
xor
or
sahf
and
xchg
mov
jns
ljmp
adc
aam
ss
inc
and
imul
or
and
mov
mov
imul
insb
inc
sub
cmc
cwtl
iret
dec
mov
mov
or
pop
icebp
scas
into
inc
mov
cmp
loop
and
jp
cwtl
xchg
mov
cli
dec
push
mov
xor
pop
test
inc
add
mov
mov
dec
push
sahf
fs
mov
imul
adcb
call
leave
lcall
sahf
lods
inc
shl
jns
xchg
cld
inc
jp
xchg
testb
or
pop
add
adc
test
jmp
movd
sbb
aas
negl
lret
dec
call
mov
xchg
sub
cmp
mov
jno
cmp
bound
es
div
insb
jecxz
repz
ss
sub
adc
out
jne
or
dec
and
rclb
or
cs
sub
cmp
cmp
jae
aas
fsubrl
popa
mov
xchg
push
mov
and
add
hlt
and
dec
in
addl
jp
fdivl
cmp
jae
lahf
addr16
int3
add
xchg
stos
enter
jb
fnstsw
or
fadd
add
addr16
xchg
vandnps
adc
mov
repz
insb
fistps
inc
pushl
cmp
pop
mov
or
sbb
pop
je
mov
scas
mov
loopne
jbe
enter
mov
hlt
jno
fs
jae
shr
lret
rol
mov
scas
in
adc
adc
rcll
cs
je
pop
shlb
adc
cmp
jb
gs
and
xchg
xor
mov
push
rorb
stos
cmp
fldt
or
xor
mov
sti
push
push
mov
js
frstor
push
mov
fidivrs
add
hlt
addr16
xchg
rcll
ja
xor
pop
je
shrd
adc
mov
dec
bsf
or
mov
pop
dec
out
out
ret
xchg
stc
xorps
push
mov
push
repz
into
mov
xlat
das
mov
cmp
stos
xchg
shrb
or
out
mov
stos
loopne
or
fcoml
jno
shrb
fimull
xor
cmp
sbb
imul
sub
cli
add
push
jmp
add
je
clc
jl
add
sub
lcall
mov
jmp
pusha
aad
mov
imul
mov
pop
mov
adc
push
and
cld
test
mov
cmp
inc
out
dec
ss
sub
cs
ds
adc
repz
jne
xor
xchg
or
icebp
test
gs
xor
js
clc
or
loopne
mov
je
sysret
jl
xchg
inc
insl
xor
aas
xchg
insb
sbb
xor
xchg
insl
jle
sahf
pushf
dec
mov
sbb
push
ljmp
pop
mov
mov
into
or
cmp
mov
fcmovne
scas
dec
adc
pop
test
sub
out
int3
push
in
mov
and
push
cmp
inc
jns
call
insb
pop
jnp
sbb
insb
pop
scas
push
pop
sbb
daa
out
jne
icebp
xor
daa
loop
mov
mov
xchg
shlb
xchg
or
xorl
das
or
xchg
fxtract
test
cld
push
dec
jno
negl
jg
cmp
pop
dec
mov
jnp
push
aas
outsl
loop
dec
mov
mov
lcall
fisubl
daa
xor
adc
jne
sbb
xor
in
aam
movsl
push
pop
test
pop
popf
insl
pop
and
jg
adc
mov
test
mov
out
dec
repz
cs
mov
insl
xchg
xchg
out
cmp
lods
cmp
int3
scas
xchg
and
and
inc
sti
mov
sub
xchg
lahf
dec
rcr
mov
pop
adc
stos
sahf
push
mull
aas
in
outsl
sub
jle
fstl
inc
xchg
xchg
cltd
mov
mov
inc
sbb
lcall
xchg
int
hlt
xchg
cmp
pop
lods
xchg
adc
lahf
testb
inc
jl
loopne
jecxz
and
in
or
insl
mov
mov
mov
aaa
mov
xor
in
adc
repz
sbb
xor
pop
pusha
adc
dec
and
jle
or
pop
fdivrl
idivl
or
les
mov
js
push
or
dec
cmp
mov
hlt
shll
je
test
and
push
call
aam
and
dec
sub
fnstenv
leave
lock
dec
xor
xchg
pop
jbe
push
and
sbb
adc
pusha
adc
movsl
xor
dec
ret
lcall
mov
push
inc
in
add
or
lock
xor
scas
rcrb
or
ficompl
inc
and
push
pop
iret
push
cmp
inc
shll
mov
jmp
and
jmp
int3
push
jle
jle
or
inc
test
push
sub
jp
pop
arpl
fldt
in
mov
xor
sub
cmpl
pop
ror
push
add
adc
jp
sti
out
fisubl
dec
bound
std
fisubl
mov
mov
mov
mov
mov
jg
push
mov
push
push
adc
lock
push
jns
xchg
inc
mov
shll
xlat
or
jb
data16
xor
pop
into
out
repnz
popf
in
stos
aas
cmp
xor
cmpsb
rcr
iret
ficoms
pop
jge
mov
mov
out
xor
cmp
adc
or
xorl
aas
test
sub
xor
jae
sbb
popa
mov
repnz
and
aad
lret
push
jle
cmp
and
cmc
dec
sbb
sub
sbb
or
or
inc
pop
rorl
mov
fwait
lds
inc
or
xchg
test
and
pop
pusha
mov
jg
ds
stos
stos
or
mov
push
dec
es
add
sbb
adc
xor
mov
cs
aas
or
dec
push
push
mov
popa
sub
stos
jne
lods
mov
out
dec
inc
push
test
js
idivl
lods
xor
mov
icebp
imul
cltd
inc
lahf
jbe
stos
xchg
adc
and
pop
arpl
jmp
mov
xchg
and
adc
addl
adcl
nop
loop
stos
iret
jmp
sbb
jp
movsb
inc
adc
rorl
push
xchg
rcr
xchg
jge
lret
mov
pop
sub
dec
sbbl
sbb
jb
in
xchg
hlt
in
out
pop
xchg
cld
adc
mov
push
test
stos
and
adcl
xlat
stos
sub
mov
hlt
test
outsl
jp
xchg
add
sub
scas
jp
xchg
add
push
push
cs
sbb
adc
data16
and
inc
cwtl
cs
movsb
loop
in
lods
or
int3
pop
mov
push
test
pushl
aam
aaa
cmp
pushl
imul
loopne
mov
sub
cmp
js
pop
dec
movl
ds
rclb
cmp
xor
out
mov
and
cltd
fistpl
push
sbb
insb
out
ret
repnz
ror
sub
sub
sub
stos
inc
sbb
dec
pop
cmp
push
and
stos
ret
cmpsl
aas
push
addr16
dec
out
inc
mov
ja
mov
xchg
xchg
pusha
fisubl
inc
add
adc
push
lcall
inc
or
pop
insb
xchg
ficompl
cmc
cmp
stos
rcrl
or
clc
out
movsl
popa
sbb
mov
mov
mov
inc
out
movsl
rorl
xor
aaa
mov
mov
shl
add
mov
cmpsb
mov
add
ret
dec
and
push
adc
out
call
or
rorl
xor
cmc
popf
add
sub
clc
dec
mov
mov
aad
out
rcr
dec
popf
xchg
cli
ficompl
xor
popa
iret
xacquire
xor
jle
mov
out
shr
mov
push
jne
test
sbb
xchg
out
out
mov
or
lahf
lcall
std
mov
outsb
cmp
sub
sbb
dec
mov
mov
enter
shl
ret
sbb
add
mov
xor
mov
jle
pusha
mov
outsl
out
ret
lea
xchg
cwtl
xor
sbb
xchg
aam
out
repnz
je
jmp
ljmp
jne
and
dec
lcall
or
fisubs
push
int3
adc
pop
lock
add
mov
jmp
adc
rorl
or
movsl
push
shrl
pop
pop
sahf
sbb
movsl
and
mov
xchg
xchg
mov
add
push
jmp
loope
inc
add
sbb
mov
shll
scas
lods
xchg
jp
adc
pop
xchg
mov
rep
fdiv
and
stc
sub
aad
push
adc
scas
outsl
inc
xor
jle
or
jl
insb
pushf
out
shl
pushf
xchg
outsb
test
loop
fisubl
mov
in
sti
push
hlt
je
jne
inc
xchg
xor
mov
rclb
das
and
out
push
aas
xchg
hlt
push
sbb
add
in
fadds
xor
stos
aam
cmp
push
pop
insl
popa
cmpsl
xor
cld
fisubrs
jl
push
shrb
pop
dec
and
dec
cwtl
xchg
ret
icebp
aam
sbb
enter
cmc
outsb
sub
add
roll
and
sarl
aaa
ja
cmpsl
push
sub
ss
pop
shlb
pushf
testl
es
lods
push
push
xor
imul
fsubl
sar
inc
scas
mov
ficoml
mov
das
rcll
dec
fistps
ret
cmp
ret
lret
mov
mov
pop
ja
lods
lcall
and
in
dec
ds
filds
fldt
jo
push
sahf
push
mov
adcb
mov
add
dec
and
cmp
inc
addr16
xchg
jne
cmpl
lcall
hlt
pushf
arpl
xor
ficoml
cld
js
or
inc
fisttpll
sarb
or
loop
ret
insb
int3
sbb
fldz
xor
dec
fs
and
lods
mov
adc
addr16
nop
or
mov
xor
jge
mov
lea
sub
mov
mov
loope
mov
jg
call
fwait
xchg
mov
cmp
push
pushf
xlat
imul
push
fimuls
adc
stos
dec
adc
adc
icebp
int3
jp
ja
pushf
mov
push
sti
inc
jecxz
sbbl
lahf
in
shrd
daa
mov
cli
sub
js
pop
addr16
inc
adc
faddl
ror
lcall
loope
repnz
xlat
repnz
xor
sbb
popf
outsl
mov
pop
std
pop
stos
mov
sti
or
push
rcrb
scas
fnstcw
or
jbe
lods
inc
out
imull
hlt
add
int
insl
movsb
or
out
pop
repz
ljmp
add
hlt
add
scas
inc
jno
in
stos
mov
loopne
push
orl
outsl
and
mov
dec
sub
sub
std
pop
lds
call
pop
mov
adc
mov
jb
mov
lcall
in
lods
int3
cltd
and
cmp
rcr
jmp
addl
lods
jbe
xor
and
push
insb
jno
mov
fidivrs
xchg
jp
inc
aam
mov
int
in
gs
cltd
popf
es
fists
and
leave
lret
mov
add
mov
ret
or
shll
pushw
xor
popa
lock
hlt
mov
inc
std
xor
lea
sub
sub
lods
sbb
mov
addb
xchg
mov
inc
and
sub
dec
imul
xchg
cmpsb
test
push
push
pop
or
or
dec
inc
call
push
mov
and
mov
pop
pusha
push
negb
lods
add
add
push
shlb
fiaddl
pop
data16
ds
push
ret
cmp
cmpsb
pop
mov
xor
mov
inc
icebp
mov
dec
js
xchg
lds
mov
int
dec
push
ret
jnp
data16
das
and
shll
inc
insl
fbld
push
jae
lods
adc
cmc
addr16
cmp
fmull
jne
pushf
es
pop
adc
lock
pop
mov
jge
out
dec
daa
push
cmp
mov
test
int3
pop
adc
scas
lods
jbe
cli
or
sbbb
ret
ret
jnp
inc
mov
push
out
push
aaa
fwait
loopne
aad
dec
xchg
mov
mov
gs
ljmp
or
leave
daa
inc
or
popa
dec
adc
inc
pop
sti
push
fsubrp
sub
sbb
and
add
dec
push
repnz
imul
sahf
xor
int
loopne
jle
into
lock
pusha
and
repnz
xchg
inc
std
inc
mov
mov
xor
mov
sub
int
test
fwait
insl
outsb
jnp
scas
cmp
enter
fucomip
mov
addl
push
xor
cli
sub
fidivl
xor
push
stos
dec
jmp
and
aaa
enter
leave
imul
jle
ffreep
push
mov
out
outsb
loop
out
sub
push
arpl
mov
fs
push
or
mov
inc
cmpsb
gs
imul
frstor
jno
enter
test
into
sub
imul
push
insl
lcall
adc
dec
mov
inc
jae
mov
dec
in
out
mov
mov
scas
incb
pop
mov
add
dec
mov
mov
call
das
pop
add
dec
sub
out
pop
mov
xor
jb
pop
sahf
lock
cmpsl
pop
cmc
inc
loopne
inc
ja
aas
pop
hlt
lret
sbb
je
mov
xlat
adc
jbe
mov
mov
in
and
pop
jo
popf
lods
shrl
lds
sbb
lods
sub
icebp
rorl
negl
xor
xor
addr16
xchg
mov
jnp
sub
out
decb
xchg
mov
addb
fdivl
call
enter
in
outsb
negb
enter
int
xlat
lea
aad
cmp
inc
xlat
push
and
rcrb
add
xor
mov
testb
fcoms
mov
mov
or
sbb
add
bound
xchg
rcr
ret
sbb
ror
pop
mov
or
testb
out
fs
insb
cwtl
cmp
pop
movsb
lods
pop
adc
bound
frstor
stc
js,pn
pushf
outsl
xor
sbb
fwait
pop
mov
cmp
adc
and
fnstenv
mov
mov
clc
test
sub
lock
mov
outsb
push
cmc
xor
pop
ss
sti
pop
push
daa
pop
xchg
lcall
in
repnz
daa
out
fidivrs
and
sarl
inc
filds
subb
push
cmpsl
adc
stc
jl
sbb
aaa
mov
xchg
push
sbb
xchg
lods
pushf
dec
push
pop
xor
das
dec
test
xchg
mov
jb
xchg
pop
and
hlt
nop
add
pop
adc
mov
jmp
xor
js
jmp
add
mov
cli
and
jg
rcrl
sbb
or
mov
fs
pop
out
sub
jl
fbstp
in
xchg
mov
mov
loopne
data16
loopne
mov
mov
jno
or
xchg
ret
inc
cmp
pop
cmp
xor
jecxz
mov
mov
sbb
pop
sub
push
push
sbb
xor
jle
mov
call
or
jo
sub
mov
lret
xchg
jns
mov
adc
mov
mov
lcall
push
movsl
adcl
dec
out
mov
add
out
jp
stc
inc
sub
clc
dec
aad
int
test
enter
cmp
push
sti
xor
xchg
fs
push
aaa
in
ds
fcomps
jecxz
sbb
into
push
stc
test
idivl
fsubs
push
scas
xchg
clc
in
mov
addb
pushl
out
adc
pop
inc
loop
notw
shrb
cltd
in
or
add
sub
sub
ja
xchg
enter
xchg
mov
pop
repnz
lahf
and
addr16
ss
fstps
or
add
xchg
test
test
std
aas
jae
movsl
sub
pushf
clc
mov
pop
ret
es
call
dec
push
mov
andl
mov
pop
test
pop
pop
and
stos
sub
mov
mov
jns
ljmp
ja
push
movsb
cs
loope
jp
pop
jge
ret
adc
pop
cmpsl
xchg
mov
aas
out
mov
cmpsb
dec
xor
scas
cmpsb
jp
xchg
pop
sbb
jmp
rorl
cmp
das
jo
xchg
cmp
in
pusha
mov
pop
jno
sbb
out
sbb
fwait
jmp
or
in
xchg
js
push
in
rcrb
cmp
test
loop
add
xchg
and
in
cmpsb
xchg
mov
add
mov
fbld
out
push
adc
jmp
jae
scas
roll
in
stc
mov
bound
jns
sbb
in
xor
pushf
sarl
inc
test
popa
push
out
in
pop
ret
ret
test
lods
in
mov
push
mul
mov
mov
push
mov
dec
es
jecxz
xchg
xor
and
mov
nop
div
popf
cmp
pop
lock
popf
imulb
xor
stc
and
mov
fsubr
mov
pop
ret
sbb
outsl
into
jg
into
pop
xchg
push
mov
fdivrl
and
dec
repz
lds
add
inc
es
lds
push
mov
sub
js
adc
gs
cs
sub
dec
jne
add
popa
shl
addr16
or
repnz
jnp
jle
jb
cltd
and
or
sub
inc
jl
fadds
mov
fs
leave
jno
pop
loop
and
aas
sbb
push
xor
and
outsb
inc
lcall
leave
testb
xor
je
and
add
negl
mov
jne
dec
movsl
xchg
pusha
ja
cmpsb
lret
imul
popf
sbb
std
cmp
jecxz
push
roll
movsl
setb
ss
pop
inc
jp
sub
fwait
cmp
ja
mov
xchg
push
mov
cmp
stc
pop
lods
fidivrl
rcll
add
data16
cmp
or
testl
mov
arpl
fwait
jo
scas
clc
outsb
push
cmpsl
push
mov
pop
cmc
pop
xlat
into
outsb
mov
addr16
sahf
insl
popf
mov
sub
mov
fucomp
add
jns
mov
sub
mov
mov
push
dec
push
arpl
lcall
mov
cld
movsb
mov
rep
jo
cld
lret
and
jl
mov
mov
out
or
rolb
popa
into
add
xchg
dec
sub
xchg
daa
cmpsb
sbb
lds
scas
imul
jns
fmulp
xchg
add
and
fstps
scas
jecxz
cltd
xchg
push
cli
xchg
push
repnz
bound
leave
xchg
xchg
add
fisttpll
mov
sti
jne
mov
sbb
call
inc
jbe
adc
add
popf
loop
std
jecxz
xchg
mov
cmpsb
xchg
movl
jne
inc
mov
add
int
lahf
jno
add
sbb
loop
inc
dec
push
loop
xlat
dec
lods
xchg
or
jp
lods
xchg
or
jno
cwtl
lods
cmp
mov
jg
int3
jge
cmp
pop
jp
sub
jne
jg
jo
scas
push
or
inc
sub
dec
cli
hlt
rcrl
push
lea
scas
mov
movsl
fmuls
or
mov
or
xor
out
mov
jbe
sarl
dec
hlt
and
mov
mov
mov
sahf
sbb
popa
jge
dec
adc
sbb
clc
fsubl
xor
ficomps
lock
andb
jl
jo
xchg
and
xchg
shll
scas
pusha
and
aaa
test
popa
xor
jo
pop
pop
push
aad
aam
cmp
mov
pop
mov
and
shll
dec
jne
cmpsb
pop
jbe
mov
ret
pop
pop
loop
sbb
jnp,pt
sub
and
sub
les
je
mov
pop
imul
sub
outsl
pushf
fcmovne
xor
scas
insl
lret
dec
into
jl
aas
xor
insl
lret
mov
or
je
in
pop
pop
fstsw
push
cli
lock
adc
jae
jno
lcall
int
pushf
xlat
subl
fiadds
sub
int3
pop
mov
jnp
fisubl
shl
mov
xchg
outsb
sub
xchg
xchg
fidivrl
dec
in
pusha
adc
dec
add
lods
jbe
ficompl
sbb
cmp
lret
inc
inc
popa
js
inc
repz
ss
rep
cwtl
sti
sbb
adc
call
jp
inc
dec
adc
insb
push
or
das
and
mov
inc
xor
jmp
mov
lods
mov
fldcw
lock
sbb
ret
mov
pop
data16
xlat
adcb
and
xor
test
ds
and
aaa
ret
lret
in
mov
movsl
inc
mov
inc
das
push
push
mov
and
daa
out
and
adc
xor
adc
mov
sub
cmp
dec
std
test
pop
jno
push
mov
daa
jmp
cmp
xor
or
stos
cmpsl
sbb
jmp
into
inc
push
dec
pop
cmp
adc
test
addb
sbb
repnz
xchg
and
int
subl
lea
stc
js
enter
jmp
sbb
push
lods
adc
xchg
mov
push
xor
cld
mov
psubb
dec
notb
mov
fstpt
stos
ret
orl
in
cmp
test
les
lds
add
lcall
incb
enter
jne
pop
dec
sub
jge
mov
xor
jle
pop
bound
sub
subl
jp
jecxz
mov
mov
out
xor
gs
sub
mov
clc
leave
push
lcall
aas
loop
add
xchg
cmp
jecxz
inc
inc
dec
push
aam
mov
leave
out
leave
pop
lods
jmp
inc
daa
aam
dec
xor
scas
dec
push
pusha
lahf
ss
jmp
sub
rcll
push
mov
adc
xchg
fs
pop
and
pop
mov
rcrl
cmc
ja
fisubrl
ds
scas
adc
loope
cs
push
sbb
pop
lret
shl
fdivrs
mov
sub
and
fs
pop
test
or
cmpsb
shll
mov
cmp
popa
mov
xor
xchg
mov
add
jne
dec
or
out
sub
das
cmpsl
adc
push
add
loope
decl
and
add
out
pushf
lret
pusha
stc
iret
and
mov
pushf
mov
cs
aam
dec
popa
push
jno
arpl
in
xchg
dec
inc
aas
xchg
and
in
and
ljmp
out
push
or
insl
pop
xchg
hlt
rcll
add
cmp
cmp
or
jbe
push
sub
pop
pop
pop
gs
aam
in
xlat
rcr
cli
rcrb
cltd
pop
xor
mov
enter
test
sti
outsb
js
add
adc
cmp
pop
in
cmp
xchg
sbb
aaa
in
or
jl
add
out
push
push
lahf
nop
xchg
mov
stos
fidivl
inc
in
cmovne
jle
lock
cmpsl
test
movsb
cmp
cs
or
pusha
lds
mov
push
cmp
cld
jmp
pop
repz
mov
xor
xchg
flds
pop
lea
aad
pop
fwait
insb
cmpsl
jnp
aam
bound
xor
adc
mov
imul
lcall
and
mov
imul
xor
inc
mov
sarl
sub
dec
adc
loop
xor
loope
jbe
mov
shll
lods
scas
push
in
pop
movsb
clc
pushw
mov
push
in
cmc
test
pop
add
pushf
cs
shrb
insb
paddsw
leave
imul
dec
movsb
mov
sub
dec
hlt
inc
cmp
sbb
roll
out
loope
aaa
sub
cmp
daa
js
inc
stos
mov
iret
pop
jl
in
push
adc
std
sar
dec
pop
lcall
das
ljmp
cmp
inc
jge
loopne
fbld
jmp
jae
ss
loopne
jnp
mov
fcomip
pop
cltd
pop
sarl
push
mulb
repnz
in
adc
lock
xchg
sti
mov
pop
sub
jns
adc
sbb
pushf
xchg
arpl
cmp
jge
loop
pushf
xchg
iret
pushf
inc
repnz
mov
or
jge
adcb
frstor
mov
sub
xlat
sahf
mov
pop
in
cld
and
jo
in
inc
dec
sub
jmp
push
ljmp
rcr
out
into
sub
sbb
adc
cltd
mov
rorl
sbb
inc
xchg
roll
fwait
loop
das
test
add
add
nop
cmpsl
loopne
sbb
xor
int3
scas
mov
mov
popl
inc
test
inc
pop
outsb
out
ljmp
xchg
push
add
out
imul
filds
loopne
lahf
cmp
mov
mov
dec
cmpsl
pop
sbb
lods
lods
add
inc
jge
out
jmp
add
stos
decl
icebp
ret
xchg
dec
inc
ja
jecxz
pop
sbb
cmp
test
or
inc
fisttpl
ljmp
mov
scas
sbb
cltd
cmpl
push
jmp
repnz
xor
cmp
push
fnstcw
mov
sub
rcrb
pop
push
loope
sbb
stos
js
mov
mov
pop
adc
mov
lds
dec
int
sbb
in
push
aas
or
cs
nop
inc
add
push
inc
scas
mov
sbb
rolb
jle
or
dec
stos
js
jmp
cmp
pop
push
in
mov
jl
or
stos
decb
stc
xchg
jmp
and
jnp
xchg
xchg
js
mov
pushf
xchg
mov
sbb
push
jne
sbb
push
xchg
les
hlt
stos
add
jl
loope
frstor
cs
xchg
stos
mov
mov
and
jmp
cmp
push
in
xor
sbb
dec
pop
leave
xchg
mov
daa
add
orl
outsb
and
xchg
cmc
fcoml
adc
in
int
and
iret
cmp
xor
sbb
ret
push
inc
add
stos
add
mov
mov
xchg
fisubrs
jp
jmp
loop
aad
dec
mov
sbb
ss
imul
in
je
cmp
xlat
jo
mov
sub
mov
mov
lods
lock
add
cli
mov
and
dec
adc
shll
subl
in
scas
movsb
fstl
scas
hlt
in
sbb
sti
shr
pop
jle
sub
es
push
mov
lds
add
inc
bnd
stos
fcomps
lahf
jmp
fiaddl
or
bound
shrl
adc
mov
je
clc
cmp
scas
or
ds
dec
flds
icebp
jb,pt
lret
stc
add
ljmp
push
notl
push
test
add
cmpsb
or
mov
pop
pushw
out
push
mov
or
clc
addr16
cli
dec
nop
jne
bound
inc
dec
dec
pop
sub
push
jne
pop
add
iret
call
inc
fbld
or
xchg
cmovle
jnp
mov
rcrl
stos
cmp
sahf
cld
inc
out
test
es
or
ret
xor
add
mov
or
enter
add
lock
inc
mov
mov
dec
jns
adc
bound
int3
jae
ljmp
sbb
push
js
adc
fadds
mov
mov
add
stos
push
xor
in
std
cmp
xchg
xchg
pop
add
hlt
in
popa
outsl
inc
xchg
and
mov
dec
out
mov
outsl
in
xchg
enter
pushf
push
mov
jecxz
repz
mov
stc
jg
lret
sub
adc
push
pop
js
add
jne
in
outsl
ljmp
cmp
loop
out
push
fs
test
out
xchg
push
divl
inc
cmp
aaa
cmp
jmp
mov
xchg
add
mov
lcall
mov
lret
mov
pusha
push
ficoml
js
hlt
mov
sub
mov
cmp
jle
push
mov
push
test
divb
push
daa
mov
into
inc
decl
pop
mov
and
cmc
adc
dec
push
test
and
pop
sti
cmp
xor
pop
dec
add
pusha
fsubrl
fildl
mov
pop
arpl
loopne
sbb
in
jecxz
mov
or
dec
push
inc
adc
mov
adc
sub
gs
in
sub
flds
les
inc
push
pusha
pop
hlt
fwait
jg
ror
inc
ret
jo
testb
out
aaa
sbb
mov
lret
jae
jle
outsb
inc
xchg
enter
sbbl
imul
jnp
shll
mov
or
jns
aas
cmp
mov
lods
cmpsl
sbb
cmpsb
cmpsl
sbb
ss
es
call
adc
sahf
mov
xchg
test
jmp
jo
test
in
xchg
cmpl
das
pop
add
cltd
mov
mov
addr16
add
repz
dec
xchg
adc
ret
dec
pop
clc
loop
sub
pop
adc
cmpsb
ficomps
popf
jmp
test
mov
or
test
mov
adc
scas
cld
adc
xor
mov
sbb
ds
and
pop
sarb
pushf
pop
sub
ret
or
call
ret
mov
sub
lds
popf
and
jns
daa
jne
pop
cli
or
mov
dec
std
mov
rcrb
jl
cltd
movsb
mov
insl
loop
insl
ljmp
enter
inc
int
mov
pop
sub
movsb
lea
js
adcl
xor
cmp
xchg
insl
mov
add
sbb
cmp
xor
ror
or
js
rolb
int
jb
test
push
add
push
es
imul
fwait
sub
rorb
or
jnp
adc
call
pop
fisubrl
rclb
jmp
add
aam
push
ret
mov
dec
cli
mov
loope
cld
ja
mov
fcoml
shrb
mov
test
aas
cmp
mov
int3
rcl
cmp
push
mov
mov
mov
sar
bound
jg
sub
call
bound
and
cld
xor
iret
insb
and
cmp
movsl
jae
out
movsl
jnp
cwtl
pop
push
gs
dec
rcrl
sbbb
pop
xor
sub
sub
mov
outsl
into
jnp
mov
outsl
add
pop
ror
lock
popa
daa
shlb
lock
xor
dec
fwait
insb
cmp
sbb
xchg
test
xor
shl
xchg
jnp
repz
cmp
dec
add
pop
jmp
div
jne
gs
jo
es
cs
lret
jge
sahf
dec
je
inc
dec
xchg
or
pusha
jle
pop
cmpb
adc
mov
add
js
mov
adc
shrl
push
lds
mov
loop
jp
hlt
leave
sub
and
sub
inc
inc
add
pop
or
sahf
sahf
inc
or
mov
push
aaa
sbb
sub
shlb
addb
push
rcrb
in
mov
sub
lahf
cli
adc
xor
stos
jno
pop
fadds
and
xor
dec
mov
dec
lock
dec
push
cmp
shrb
fcompl
jno
scas
mov
loope
negb
jbe,pt
cmp
jl
fcmovu
psraw
mov
and
sahf
out
xchg
adc
clc
sbb
popl
jge
divl
lret
dec
jb
inc
imul
sub
and
test
cmpsl
js
sbb
mov
pop
fldl
les
dec
lahf
mov
and
xchg
sub
aas
pusha
jb
push
mov
xor
js
xchg
and
or
xchg
xchg
push
out
fistps
subb
add
rol
cwtl
cmp
mov
pop
test
mov
inc
in
jbe
scas
jp
cmp
dec
cmpsl
idivl
fidivrs
xchg
or
xchg
adc
sbb
mov
loopne
scas
and
negb
aas
dec
int
and
cmp
inc
ds
and
cmpl
addr16
jp
aaa
mov
push
das
cmp
in
push
adcl
mov
cwtl
icebp
aad
pusha
divl
in
cmpsb
xor
loop
subl
mov
cld
jle
shlb
sub
jb
addb
fsub
jp
and
cmc
mov
mov
out
pop
lea
push
jge
mov
pop
fwait
xor
rcr
sub
out
rolb
imul
jns
or
push
pop
pushf
popa
inc
into
adc
and
jb
fisttpl
dec
mov
test
mov
push
hlt
scas
sbb
nop
add
enter
cmp
mov
ficoms
dec
cs
inc
pop
daa
out
xchg
mov
mov
xchg
scas
testl
arpl
outsb
sub
imul
sub
xor
push
sti
cmp
xor
testb
jbe
xlat
push
xor
shll
mov
mov
in
jp
adc
sub
jbe
ret
jbe
xchg
inc
lods
ds
xor
mov
and
and
or
mov
jg
jbe
movsb
gs
imul
mov
inc
seta
sbb
mov
xor
xlat
pop
mov
arpl
xor
add
popl
iret
adc
inc
dec
jno
dec
es
fimuls
scas
jns
sbb
cmp
mov
jb
sti
fmuls
out
and
imul
fidivs
jecxz
mov
cltd
sub
adc
cmp
andl
push
or
mov
mov
dec
ret
sub
adc
leave
jo,pn
pop
cmp
insl
out
adc
dec
xor
rorb
hlt
mov
add
adc
add
sbb
popa
das
push
inc
inc
cld
call
mov
jb
pop
movsb
pop
aaa
test
ss
push
xor
fsubrl
adc
sbb
jle
or
sbb
fcomip
insl
gs
daa
jecxz
pop
xchg
gs
mov
loop
mov
scas
mov
sbbb
lcall
mov
jl
push
mov
bswap
xchg
xor
lcall
and
iret
stc
and
xchg
stc
pop
mov
addl
in
sub
mov
add
pop
in
sbb
xor
mov
daa
xchg
call
sarb
scas
icebp
movsb
xlat
fcomps
rcll
imul
iret
ret
adc
daa
sahf
mov
xlat
mov
int3
push
push
loope
pop
popa
inc
imul
inc
lret
jno
mov
dec
ja
pop
sbb
xorl
jne
lock
insb
leave
pop
ja
inc
test
push
aad
loopne
andb
test
or
sub
lahf
jne
xor
popf
imul
clc
jge
and
ror
adc
fwait
xchg
xchg
xchg
movsb
dec
imul
inc
into
xchg
jo
imul
mov
dec
into
pop
scas
rcll
mov
insl
dec
fsubl
stos
jl
dec
aaa
cld
mull
adc
shrl
push
fsub
in
mov
shl
in
shll
push
pop
testb
xchg
mov
push
mov
shld
mov
cmp
fdivrs
gs
jo
xchg
xchg
out
push
mov
jbe
lock
cmc
or
cmp
push
adc
cmpsb
shll
aaa
scas
mov
and
xor
leave
mov
cwtl
jl
cmc
aam
lock
out
mov
fdivl
xor
sub
inc
lcall
cmp
es
outsl
cmp
call
pusha
stc
das
xor
mov
push
not
lret
nop
stos
sbb
int3
mov
gs
arpl
aaa
int3
std
and
dec
mov
out
insb
mov
jge
lcall
lods
ja
enter
in
mov
push
test
sarl
leave
arpl
jae
adc
fs
and
cmp
std
add
das
lret
aad
ret
test
sub
inc
arpl
dec
in
inc
mov
gs
mov
dec
xor
mov
cwtl
popf
scas
adc
or
in
stos
sbb
push
jle
add
sbb
jecxz
jge
cmp
dec
sub
imul
loop
push
pusha
subl
or
dec
push
jle
push
aaa
jne
loope
or
xchg
inc
repnz
gs
jg
imul
add
push
sub
or
xchg
popf
daa
inc
sbb
adc
mov
mov
aas
shlb
pop
inc
insb
sahf
lods
jnp
scas
adc
or
mov
cmp
es
movsl
ror
scas
mov
lret
shll
cmp
sub
and
stos
cmpsl
arpl
das
mov
cmp
pop
sbb
adc
mov
cmp
push
or
add
sbb
outsb
aas
test
iret
mov
call
out
jmp
mov
sub
lret
rcrl
sbb
xor
pushf
xchg
inc
cmpsb
push
and
and
std
les
and
pop
xchg
xchg
dec
repz
push
xor
sbbb
aad
xchg
ret
out
add
jo
jmp
mov
push
pop
cmp
push
cmp
fstps
rclb
mov
out
shrb
sbb
jle
and
popf
sub
adc
push
xorl
loop
xor
sbb
int3
pop
or
jg
xor
pop
insb
cld
cmp
in
adc
sub
or
mov
iret
in
clc
sbb
int3
pop
inc
ja
adc
andl
lahf
xor
mov
aas
vandps
mov
sub
ja
push
inc
push
pop
mov
cmpsb
jno
pop
cmc
sub
and
push
mov
stos
or
sbb
int
xor
shll
sub
push
pushf
mov
outsl
or
sub
imul
negb
fisttps
pop
incl
lods
sarb
jg
push
or
daa
cltd
imul
mov
outsb
mov
mov
and
mov
cmpsb
and
enter
call
mov
outsb
ret
cmp
mov
cmp
sbb
lret
cmp
imul
jge
aas
stc
adc
xchg
rsm
shl
je
insl
and
xchg
ficomps
out
mov
repnz
add
popa
inc
ljmp
jge
xor
cld
dec
xchg
sub
test
mov
int
lret
mov
lods
jo
ljmp
enter
imul
pop
jne
xor
lock
dec
loop
xchg
cltd
lods
cs
outsl
bound
out
leave
mov
sahf
xchg
xor
lahf
in
and
pop
rorb
mov
lss
test
aas
xchg
push
sub
cwtl
testb
clc
and
cmp
lahf
aad
push
adc
sbb
cmp
test
inc
add
lds
dec
ja
int3
dec
int3
mov
test
adc
fimuls
push
sti
jmp
orb
decl
stc
dec
adc
in
xor
sahf
and
in
test
fsubs
xchg
andl
int3
jne
jge
stc
icebp
jecxz
and
lods
cmp
out
clc
outsl
rclb
pop
fisubrl
mov
inc
into
add
cmc
sub
xor
or
dec
pop
addr16
add
cmp
scas
movsl
scas
and
sub
pop
pop
cvtps2pi
jp
movsl
mov
cmc
or
lret
loopne
mov
lods
cli
push
lods
jbe
aam
sahf
fwait
jl
dec
mov
cmp
and
jmp
adc
jne
xchg
sbb
std
xchg
or
addl
insb
scas
clc
outsb
adcl
push
xor
push
mov
push
jo
iret
sbb
int
data16
shlb
adc
mov
movsb
inc
adc
inc
ja
cmp
imul
add
call
test
loope
movsl
adc
nop
aam
jmp
xchg
fists
inc
mov
hlt
cld
popa
sbb
xchg
push
lret
and
push
fwait
scas
bound
call
ljmp
sbb
inc
mov
cmpsl
movsb
int
xchg
rcr
ja
js
movsb
fwait
fs
pop
xor
aaa
xlat
imull
outsb
ret
cld
fistpl
ret
xor
push
iret
xlat
adc
push
push
pop
inc
mov
imul
enter
xchg
sahf
jo
cmp
dec
enter
addr16
and
cli
xor
mov
jbe
or
dec
jecxz
cli
iret
dec
lahf
insb
cld
adc
dec
xchg
into
cmp
fistps
repz
imul
insb
mov
fsubrl
aas
jge
jns
push
mov
and
jns
push
call
into
sbb
call
aam
mov
icebp
stos
lds
lods
jmp
call
bound
jle
fstpl
in
dec
cmp
dec
sbb
cmc
roll
sbb
lret
cmp
sbb
xor
adc
aas
mov
or
ret
das
xor
xor
fwait
and
dec
in
mov
mov
filds
mov
cmp
aam
pushf
stos
cltd
xchg
gs
push
in
movsb
fidivrl
icebp
jae
test
xchg
mov
les
je
cmc
add
cmpsl
subb
out
dec
pop
test
fndisi(8087
pop
lcall
shll
mov
mov
call
dec
push
sub
cmp
mov
mov
pusha
in
cwtl
xor
push
mov
stos
shlb
jne
inc
and
cmp
inc
cmp
mov
outsl
push
fisttps
shlb
jl
outsb
push
int3
cmovp
mov
jb
or
sbb
pop
movsl
fists
sub
mov
clc
clc
xchg
popa
mov
nop
inc
cmpsb
jo
aad
xor
clc
lcall
arpl
mov
stos
cli
rcrb
jae
adc
lea
loop
and
iret
fldl
test
stos
dec
inc
xchg
mov
jbe
adc
xchg
mov
ljmp
mov
lret
mov
cmc
ja
scas
xchg
jbe
arpl
xchg
dec
push
cs
aas
cmp
add
or
push
inc
jae
fdivrp
pop
push
cmpsb
adc
or
jnp
nop
out
mov
fstpt
mov
push
jge
or
es
jne
mov
pop
mov
cmp
daa
mov
hlt
loopne
mul
out
lret
out
pop
pop
leave
mov
outsl
xchg
sbb
lea
mov
push
sub
cltd
push
sbb
fbstp
out
mov
pop
outsb
adc
cmp
aaa
mov
pop
fwait
cmp
add
add
adc
add
add
jne
add
push
push
imul
add
jg
dec
dec
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
sbb
push
imul
add
dec
gs
popa
addr16
or
push
imul
sbb
dec
dec
push
jns
je
insl
add
push
jne
gs
outsl
fs
gs
jb
arpl
fs
jae
add
ja
dec
gs
outsl
jb
push
jne
add
data16
gs
imul
push
je
insb
jae
add
insb
jae
jb
jo
outsl
add
mov
inc
insb
popa
jae
gs
add
push
or
pop
or
sti
stc
or
mov
or
push
inc
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
mov
mov
add
xchg
push
outsl
outsl
je
jbe
addr16
jnp
push
jae
pusha
bound
jne
push
outsb
ja
pop
outsb
push
and
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
push
pop
sbb
or
add
out
mov
or
or
or
or
push
pop
add
push
or
pop
jns
add
pop
adc
pop
push
add
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
pop
push
add
pop
adc
or
or
add
pop
add
pop
push
pop
adc
or
pop
or
add
pop
mov
pop
inc
add
or
pop
or
fiadds
or
push
pop
add
pop
push
pop
add
or
pop
or
add
inc
pop
add
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
inc
dec
pop
push
pop
add
push
or
pop
push
or
pop
add
pop
push
pop
add
or
pop
or
add
push
inc
add
push
pop
pop
and
or
pop
pop
add
push
pop
add
or
pop
or
add
pop
ret
push
pop
add
or
rorb
or
pop
add
pop
push
xchg
or
pop
or
add
pop
add
pop
push
sub
imul
pop
push
pop
mov
pop
push
add
or
add
pop
push
pop
add
pop
push
pop
inc
push
or
sub
jbe
or
push
lar
pop
push
movl
or
pop
add
pop
push
pop
add
or
pop
or
lds
jp
addr16
add
push
pop
add
or
pop
or
pop
add
pop
addb
add
push
pop
add
or
pop
or
add
sub
imul
push
dec
or
add
pop
add
add
popl
pop
add
or
pop
or
add
inc
add
push
sub
je
or
or
fiadds
or
testb
add
add
add
or
pop
or
add
pop
add
pop
inc
pop
add
or
pop
or
add
pop
add
pop
pop
pop
add
or
pop
cltd
or
pop
add
pop
push
pop
add
dec
or
pop
or
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
dec
sbb
add
pop
push
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
dec
push
dec
or
or
add
jg
inc
pop
subb
push
andb
or
das
inc
add
inc
pop
jl
dec
or
pop
dec
fs
addr16
jae
and
mov
or
inc
push
mov
std
and
mov
push
or
sub
mov
or
inc
pop
pop
imull
sti
mov
pop
sti
and
mov
sti
sub
mov
stc
and
mov
or
inc
push
mov
std
and
mov
push
or
sub
mov
or
inc
pop
pop
imull
adc
sti
and
mov
sti
sub
mov
push
test
mov
or
mov
inc
and
push
jo
pop
mov
mov
inc
pop
rorl
dec
or
inc
push
mov
std
and
enter
mov
or
inc
pop
pop
imull
mov
sti
and
lds
mov
test
pop
jno
pusha
dec
add
or
loopne
stc
clc
std
mov
or
add
enter
movsb
aam
inc
push
mov
mov
mov
mov
or
mov
mov
pop
popl
inc
test
insb
jb
addb
sbb
xchg
popl
lea
lret
mov
pop
push
cli
mov
out
lahf
std
clc
stc
add
or
push
mov
mov
push
or
push
add
mov
pop
pop
les
addb
push
or
adc
cmpsl
inc
pop
pop
cmpsl
shrb
push
push
pop
push
testb
pop
or
lea
mov
mov
cmp
add
or
lret
mov
ljmp
add
or
in
pop
add
cmp
push
jge
mov
jecxz
sti
idiv
lea
inc
add
sbb
shl
stc
clc
std
xchg
jae
aaa
movb
pop
lret
push
push
push
push
add
repz
jne
mov
add
mov
add
jl
aas
clc
jb
mov
push
inc
jg
add
jb
mov
ljmp
or
jno
pop
mov
add
push
cmp
jb
das
jae
in
and
or
mov
jg
and
mov
add
clc
mov
mov
mov
out
aam
div
or
add
enter
add
jge
mov
push
pop
pop
push
pop
pop
les
fimuls
or
pop
add
pop
in
or
or
stc
mov
insl
pop
outsl
add
or
push
arpl
in
cld
cmc
clc
stc
mov
mov
clc
jo
sbb
shrl
clc
clc
std
xchg
jae
insb
push
mov
pop
arpl
mov
pop
out
std
std
xor
mov
pop
push
push
les
mov
mov
mov
roll
sbb
arpl
insl
add
pop
push
outsl
add
pop
push
push
in
mov
repz
clc
jae
add
stc
pop
add
out
or
div
mov
insl
add
and
push
push
push
out
mov
clc
testb
and
sarl
loopne
cli
div
add
addb
insb
pop
popl
hlt
cli
aaa
enter
pop
pop
pop
lds
test
out
dec
sub
adc
lds
psubq
div
xor
adcb
mov
mov
es
mov
sbb
add
push
lea
jno
cmp
into
add
pop
ds
sub
jno
cmp
push
je
jl
jb
cmp
and
je
popl
or
xchg
or
pop
out
jmp
jb
rorl
add
pop
ljmp
mov
fildll
inc
and
xor
pop
xchg
add
jge
mov
add
push
mov
add
inc
sub
add
adc
pop
push
lret
push
pop
pop
push
xchg
repz
dec
es
mov
and
in
or
sti
testl
or
add
ljmp
sub
lea
push
mov
mov
add
ret
and
addl
inc
pop
out
cmp
or
repz
jno
mov
cmp
or
jne
or
insl
push
push
push
pop
add
repz
push
loope
stc
sti
testl
aam
sbb
add
mov
test
or
push
pop
lret
push
pop
push
push
push
mov
mov
xchg
stc
pop
or
mov
add
xor
mov
add
clc
clc
testb
ret
and
shlb
sbbl
jl
add
cmp
and
mov
add
jno
outsl
add
or
sub
pop
push
in
movsl
cld
stc
clc
xchg
jb
rolb
lods
dec
pop
or
add
stc
fisubl
pop
push
push
pop
push
enter
push
push
push
push
add
lock
lods
dec
add
pop
add
stc
adcl
cmp
jg
js
mov
mov
lea
mov
clc
testb
inc
push
add
inc
add
dec
or
cmp
stc
clc
out
xor
int3
fimuls
stc
test
push
jl
mov
adc
int
in
std
std
test
and
lods
or
pop
add
std
std
xor
mov
pop
push
push
pop
push
push
push
push
add
xor
stc
mov
mov
std
cmp
push
enter
push
add
cmp
jbe
cmp
xor
push
aas
jae
or
mov
or
shlb
pop
or
push
ljmp
sub
or
mov
mov
add
idiv
mov
or
jb
mov
or
dec
and
clc
lea
es
pop
in
xchg
or
pop
test
add
xchg
sti
stc
clc
xchg
or
jge
mov
or
ret
out
adc
div
test
or
andb
std
mov
or
dec
and
loopne
cli
clc
std
mov
and
sbb
dec
andb
std
jb
cmp
push
js
mov
and
je
idiv
lea
cmpl
or
mov
add
add
das
inc
or
sbb
clc
std
jmp
xor
iret
adc
pop
pop
les
shr
icebp
mov
cmp
pop
and
xabort
lea
add
mov
add
clc
stc
cmp
jno
enter
fisttpl
clc
mov
push
mov
mov
out
push
icebp
cli
sti
sbbl
xchg
jae
mov
add
push
sub
and
clc
std
mov
or
dec
das
adc
test
add
jae
mov
mov
mov
std
std
std
in
add
jnp
pop
lret
push
jmp
rclb
lea
or
outsl
mov
pusha
mov
ds
clc
sti
xchg
add
mov
sti
stc
mov
mov
icebp
clc
stc
mov
out
xchg
div
mov
loopne
clc
std
push
or
add
or
fcomi
hlt
cli
cmpsl
sbb
pop
mov
daa
mov
adcl
mov
mov
cld
dec
cmp
syscall
add
jmp
jmp
add
dec
add
inc
add
xor
pop
pop
pop
insb
adcl
or
pop
push
jae
outsb
mov
inc
or
stos
cld
idiv
adc
push
in
loope
mov
push
sub
xchg
mov
inc
pop
add
mov
pop
or
ss
pop
outsl
push
stc
xor
cmp
stos
inc
add
jae
outsl
mov
div
rorl
inc
or
cmpsl
pop
movsb
inc
pop
push
out
xor
div
xor
test
mov
fisubl
outsb
or
dec
orps
daa
cli
clc
stc
mov
xchg
shlb
mov
mov
clc
sti
mov
jecxz
cld
idiv
mov
out
jb
stc
imull
or
mov
mov
sar
hlt
cli
movsl
fsubs
jb
xor
pop
push
push
arpl
inc
push
xchg
cmp
add
lods
dec
add
clc
push
mov
push
clc
lret
push
or
in
fcompl
les
add
scas
dec
pop
jl
mov
adc
movsb
inc
pop
lea
lea
xchg
or
cmp
ja
or
add
repnz
movsl
sbb
mov
lock
sub
into
jo
xchg
or
incl
inc
add
pop
xor
or
rorl
or
les
mov
lea
cmp
inc
or
leave
jne
mov
cmp
mov
rorb
inc
or
pop
add
aad
pop
or
loop
mov
test
adc
roll
or
add
cmp
int3
mov
add
add
add
fadds
in
clc
std
jge
in
add
or
testb
pop
lds
or
mov
add
int
clc
std
roll
xchg
or
add
andl
sbb
jecxz
mov
or
out
add
xchg
xchg
ret
mov
pop
push
mov
xchg
hlt
clc
divb
or
push
cmc
sar
clc
sti
jb
iret
add
pop
push
pop
hlt
add
jb
mov
or
cmp
pcmpeqd
rolb
mov
or
in
mov
clc
stc
add
mov
pop
pop
mov
push
pop
pop
mov
cmp
lea
add
push
xchg
sub
push
cld
or
lea
add
mov
into
loopne
div
cli
dec
syscall
incl
fiaddl
push
pop
lret
push
pop
test
repz
mov
roll
or
sti
testl
andl
into
push
inc
add
mov
xor
or
mov
and
into
sub
test
push
jp
mov
or
pop
fisttps
stc
in
adc
sbb
out
or
inc
add
mov
stc
clc
and
xor
ljmp
or
push
mov
add
or
shlb
xor
fsubr
xchg
cmc
cli
sti
test
push
mov
out
mov
sti
stc
into
or
or
or
pop
pop
lds
push
cmp
cld
sbb
je
mov
add
xorl
pop
push
js
mov
adc
add
icebp
pop
movsl
sbb
xchg
repnz
sbb
lea
mov
mov
addl
pop
add
cs
pop
cmp
or
fisttpll
clc
std
xchg
jae
movsl
add
add
mov
adc
push
adcl
test
test
or
dec
mov
add
or
pop
mov
inc
pop
add
or
in
and
test
add
push
orl
add
movl
stc
xor
movsl
add
inc
or
lds
rorl
int3
clc
mov
xchg
and
mov
dec
sub
mov
mov
mov
idiv
clc
lea
push
shll
cmp
out
pop
mov
cmp
jno
out
sahf
stc
stc
mull
add
dec
add
mov
add
and
cmp
sti
clc
sti
testl
add
add
idivb
test
movswl
or
push
out
jmp
imul
addl
pop
mov
add
mov
mov
pop
push
push
pop
movl
rolb
std
sti
testl
div
clc
lret
jo
cmp
in
add
pop
xchg
pop
pop
test
repz
sbb
lret
push
add
idiv
mov
and
or
ret
ljmp
jge
xor
loopne
mov
pop
pop
pop
pop
rorl
enter
lds
leave
incl
add
pop
push
js
lea
mov
repz
or
push
add
or
or
push
pop
push
push
mov
mov
mov
sbbb
lods
inc
push
cmp
or
mov
sbb
jns
mov
mov
aas
jne
ja
sbbb
add
jae
mov
in
fs
or
pop
or
into
out
cmp
std
mov
sbb
inc
add
adc
sti
testl
push
or
jb
je
sub
add
jp
add
push
cmp
mov
or
push
mov
mov
add
or
add
jmp
mov
add
add
push
or
lret
mov
or
mov
add
nop
out
push
cli
sti
stc
jecxz
mov
xor
jno
mov
mov
test
testb
pop
add
mov
xor
pop
pop
les
in
ret
icebp
pop
push
push
sbb
cmp
jno
loopne
push
hlt
add
cli
std
clc
jns
push
xor
loop
add
push
push
es
add
idivl
arpl
cmpsl
inc
pop
add
outsb
mov
daa
sti
hlt
cli
xchg
add
or
mov
mov
add
pop
push
or
pop
enter
lds
leave
incl
pop
adc
mov
sbb
jl
cli
mov
add
andl
xor
jb
add
enter
ret
incb
inc
or
cli
lea
in
and
int3
or
add
repnz
xor
mov
repz
or
inc
incl
add
rorl
adcb
std
add
jecxz
or
mov
dec
lar
out
addl
xor
add
das
sbb
movsb
inc
push
test
push
scas
dec
pop
add
push
inc
add
movsl
cpuid
inc
or
add
add
sbb
clc
testl
test
add
or
lock
pop
in
xor
cli
sti
stc
orl
push
arpl
inc
pop
test
xor
push
pusha
mov
cli
idiv
sti
or
or
loope
inc
cli
pop
pop
pop
pop
pop
pop
mov
push
and
push
pop
push
fbstp
ret
mov
mov
dec
add
popa
cmc
std
clc
add
adc
or
or
pop
push
rolb
push
pop
add
imul
push
pusha
in
inc
add
aaa
arpl
test
or
pop
out
xor
testl
add
mov
inc
or
pop
or
in
icebp
or
push
clc
cpuid
mov
sub
xchg
or
add
les
mov
or
push
jle
icebp
lds
push
or
mov
inc
push
or
mov
push
or
push
add
rolb
mov
or
out
xchg
or
imul
push
stc
clc
test
hlt
idiv
jbe
ret
pop
lret
mov
cmp
push
mov
and
add
add
push
or
or
in
sbb
stc
clc
xor
mov
in
mov
mov
icebp
rolb
sbb
js
icebp
add
rolb
cmpsl
inc
pop
or
aas
test
or
sub
push
add
test
jl
test
or
rolb
cmpsl
inc
pop
or
sbb
iret
icebp
clc
std
mov
shr
repnz
test
mov
sti
xor
pop
pop
pop
pusha
sbb
sub
test
add
outsl
mov
pop
in
sti
lret
out
addr16
mov
push
push
pop
push
push
push
push
add
into
je
add
add
mov
test
or
je
test
hlt
clc
stc
js
movl
jge
mov
pop
push
cmp
or
push
sbb
filds
or
mov
and
or
or
pop
add
movsb
inc
push
test
push
scas
dec
pop
add
pop
push
mov
es
add
mov
sub
inc
push
mov
jmp
pop
pop
add
sar
add
jle
lret
mov
add
and
out
repnz
testl
push
or
in
cltd
lock
clc
jmp
pop
push
pop
icebp
loope
pop
or
mov
and
popl
push
cmp
or
test
mov
and
jle
lea
add
or
dec
and
push
pop
push
mov
add
sbb
push
inc
add
add
mov
imul
aaa
enter
inc
add
lods
mov
or
add
testb
stos
or
clc
std
mov
add
jge
sbb
movb
mov
and
dec
sub
jp
or
and
sub
add
sub
pop
icebp
div
mov
add
add
cmpl
or
iret
adcb
loopne
clc
std
jmp
aad
mov
xchg
and
idiv
jbe
rorb
out
enter
mov
jge
mov
or
out
or
std
clc
xor
into
sub
or
mov
inc
add
add
clc
mov
add
pop
pop
les
pop
push
pop
pop
mov
sbb
cmp
jno
loopne
hlt
div
add
mov
out
xchg
add
or
aad
arpl
xor
and
cmp
test
pop
or
insb
mov
inc
pop
ljmp
or
cli
sti
mov
jb
mov
in
xor
div
mov
add
out
push
mov
and
sti
stc
ja
out
or
mov
cmp
push
rorb
or
add
cld
std
std
mov
aaa
push
push
pop
insl
adcb
cmpb
cmpsb
inc
add
jl
outsl
mov
inc
add
mov
out
les
add
jecxz
mov
pop
push
pop
pop
les
les
notl
and
filds
pop
out
aam
or
in
or
fimuls
xchg
jae
clc
adc
js
pop
adc
fistpll
add
pop
out
add
rorl
or
xor
pop
notl
cmp
push
jae
mov
lds
pop
or
adc
jb
pop
vmptrld
lret
mov
add
adc
adc
clc
adc
js
pop
push
add
jo
mov
les
add
or
insb
pop
add
mov
mov
xchg
jnp
xor
add
mov
std
adc
cmpsl
inc
push
mov
jb
jecxz
adc
pop
lea
in
or
cmp
mov
lea
xor
fsubrp
movsb
hlt
cli
sti
push
pop
lds
adc
loope
clc
div
push
sbb
cmpsl
pop
add
lahf
add
or
pop
lret
into
mov
mov
cmp
jno
jo
leave
icebp
add
add
mov
jl
sti
test
clc
leave
incb
adc
hlt
mov
or
hlt
mov
test
sbb
or
inc
pop
mov
in
test
add
pop
mov
xor
mov
bound
mov
cmp
daa
mov
pusha
cmp
lret
sbb
add
and
push
into
out
push
clc
std
std
in
adc
cmp
mov
out
inc
std
clc
stc
mov
pop
push
lret
mov
pop
mov
or
iret
ret
loop
pusha
mov
fxch
decb
jae
mull
add
lods
pop
xchg
pop
pop
push
or
or
xor
mov
sbbb
mov
and
pushl
jb
test
and
lock
xchg
jg
pop
xchg
pop
jo
mov
aaa
jl
sbb
std
jg
dec
xchg
pop
jo
mov
jae
loopne
adc
sub
push
jae
xor
jo
xchg
test
movl
sbb
loopne
lds
mov
jns
in
cmovno
add
fidivrs
jle
push
xlat
loopne
cli
int
sbb
sahf
mov
adcb
shlb
mov
addr16
sub
xchg
ss
push
jg
test
sbb
xchg
or
jmp
sbb
fnstenv
clc
lret
call
pop
cmp
mov
push
pop
pop
les
cld
mov
or
pop
out
jmp
incl
jae
bound
loope
cli
sti
mull
push
clc
add
cmp
or
jl
cmp
syscall
add
add
pop
lds
ret
std
add
add
ja
pop
mov
mov
push
bound
insl
or
sub
pop
outsb
add
sbb
stc
testl
and
arpl
aaa
pusha
std
syscall
add
mov
push
popl
push
outsb
push
bound
outsl
and
inc
cli
push
ljmp
push
push
pop
insl
adcb
mov
push
out
enter
loopne
add
in
jmp
inc
pop
bound
enter
pop
std
bound
shlb
je
or
push
inc
inc
push
push
inc
push
inc
pop
inc
imul
insl
push
inc
popa
fs
outsb
pop
push
push
dec
pop
inc
push
pop
inc
data16
push
gs
pop
add
pop
fucom
lahf
fbld
mov
mov
lds
jge
mov
mov
push
mov
mov
out
and
or
out
and
cli
sti
adc
ljmp
or
adc
loopne
push
pop
add
stc
notl
cltd
mov
faddl
xchg
jb
xchg
clc
loopne
or
add
out
popa
add
push
arpl
or
gs
add
adc
add
dec
or
or
xchg
or
mov
stc
push
clc
lds
push
or
shll
ret
out
push
dec
sti
mov
mull
mov
int
or
push
xlat
sbb
add
shlb
pop
addl
lret
ja
xor
add
jl
mov
add
call
pop
pop
pop
les
lret
mov
xorb
pop
lea
xchg
jb
in
jae
or
adc
bnd
pop
pop
rcll
add
xlat
mov
jno
pop
mov
push
add
jb
push
mov
xor
in
les
das
iret
jb
hlt
pop
lret
mov
rorl
lret
test
enter
push
pusha
mov
fs
lock
pusha
mov
pop
leave
js
push
addl
mov
jae
stc
push
clc
call
data16
push
push
push
adc
or
push
std
cmp
mov
arpl
insl
push
iret
dec
add
and
addl
pop
pop
out
xor
pop
or
inc
or
or
mov
pop
negl
add
push
pop
ljmp
dec
or
mov
push
mov
mov
mov
pop
in
mov
push
js
rcll
adc
pop
loopne
push
enter
pop
jbe
add
jno
insl
add
or
popa
aam
jmp
mov
test
adc
or
jno
pop
push
push
push
push
loopne
in
clc
sbb
movsl
inc
or
inc
pop
push
insb
or
popa
jmp
jmp
mov
add
test
mov
sbb
inc
push
push
je
push
push
out
fdivr
div
les
pop
mov
xchg
out
jo
mov
in
jl
or
add
lds
jne
or
jo
push
push
push
out
enter
pop
push
arpl
outsl
add
out
ljmp
push
push
push
pop
push
enter
pop
jbe
add
jno
push
push
insb
or
popa
jmp
adc
mov
push
push
mov
add
add
outsb
in
jmp
notl
sbb
lds
repz
or
pop
or
or
cmpl
cld
ljmp
pop
jno
hlt
out
std
sti
std
std
mov
or
hlt
add
pop
stc
aad
ret
loopne
push
or
dec
sub
xchg
int3
clc
call
shl
clc
testb
pop
je
xchg
pop
je
or
jo
xchg
or
push
out
jecxz
clc
stc
test
push
push
pop
andl
lea
push
mov
out
ss
popl
xchg
push
jb
push
push
jb
mov
add
adc
inc
andps
out
lods
in
clc
testb
jae
orl
pop
push
pop
outsl
mov
pop
push
push
push
mov
cs
add
pusha
cld
sub
or
sbb
mov
das
in
xor
mov
cmpsl
add
pop
push
mov
adcl
dec
add
inc
push
test
pop
out
pusha
stc
sti
stc
imul
out
sub
add
pop
add
push
sbbl
cltd
or
por
pop
or
pop
lret
dec
and
mov
psllw
add
or
jge
mov
rolb
inc
push
push
push
push
pop
subl
les
loopne
clc
clc
std
std
pop
pop
pop
pop
mov
pop
or
and
lds
int3
sub
loopne
pop
or
pop
add
push
or
mov
xchg
xchg
fdivr
ljmp
out
push
idiv
sti
loopne
sti
clc
std
xor
test
adc
sbb
sbb
mov
mov
out
pop
add
push
pop
add
mov
mov
or
pop
orb
stc
clc
pop
mov
sub
add
in
xlat
cli
stc
clc
std
loopne
aaa
aad
dec
sub
mov
add
add
les
add
or
and
push
add
js
jb
xor
jnp
jae
sub
add
jae
sub
cmp
in
addr16
jae
stc
cmp
jge
out
push
xor
jge
jb
sub
and
jb
jmp
add
jl
test
ss
jecxz
mov
jmp
and
out
sbb
aad
adc
add
mov
jmp
push
mov
sub
pop
or
imul
clc
pop
lds
push
orl
inc
add
pop
push
pop
or
add
xor
add
and
push
out
mov
sti
stc
mov
pop
jge
mov
add
out
dec
clc
clc
stc
mov
add
pop
arpl
sub
push
clc
pop
push
cmpsl
inc
pop
pop
sub
xchg
aad
jmp
mov
jb
adc
inc
or
clc
clc
std
mov
stc
aad
movb
jmp
pop
or
sar
clc
lea
add
jg
sti
push
pop
add
pop
sbb
sbb
pop
push
ss
inc
pop
xor
insl
orb
addl
push
andl
or
mov
xor
cmpsl
das
mov
jge
popa
popl
ds
jb
mov
bound
test
hlt
jno
xor
jae
mov
mov
les
in
push
pop
mov
mov
or
pop
add
ja
cmp
push
pusha
in
sub
data16
xor
lea
mov
mov
push
xchg
jb
sti
sarl
cmp
pop
push
pop
bound
sub
stc
mul
mov
hlt
cli
in
cli
stc
clc
ljmp
push
push
les
push
push
cmpsb
movsb
inc
push
add
inc
xorl
rorb
push
push
sub
pusha
stc
cmp
xor
jp
mov
fadds
sbb
mov
jae
hlt
aad
sti
js
xor
pop
pop
pop
arpl
lock
sti
loopne
stc
clc
std
ljmp
cmc
clc
notb
push
les
inc
pop
pop
push
dec
or
or
movsl
inc
or
inc
add
xor
dec
add
inc
add
cmpsb
dec
or
int3
cmc
cli
sti
into
add
cmpsl
inc
add
out
data16
stc
test
pop
js
push
mov
mov
push
ja
push
or
add
add
xchg
xor
lds
mov
add
pop
lahf
lock
mov
dec
sbb
sarl
inc
or
xchg
jnp
inc
or
faddl
out
add
jae
pop
pop
push
lret
mov
cmp
orl
fistps
movl
pop
sbb
push
clc
jno
xor
mulb
push
add
push
xchg
add
cmp
mov
jae
mov
sbb
jno
mov
clc
adc
stos
dec
pop
arpl
mov
add
sbb
pop
jbe
add
std
loopne
hlt
cli
push
loopne
out
std
push
add
add
or
out
leave
stc
push
in
jecxz
idiv
push
enter
ja
pop
add
insb
pop
insb
push
js
pop
popa
push
jne
or
out
aad
clc
stc
pop
movl
or
pop
add
push
push
mov
mov
jne
or
xchg
add
push
mov
or
pop
mov
xor
mov
out
sti
rorl
xchg
or
inc
pop
add
out
lods
cli
stc
mul
xor
enter
inc
add
add
aaa
enter
ljmp
and
jno
mov
add
lea
jb
in
gs
pop
sbbb
dec
pop
cmp
add
add
inc
hlt
cli
in
cmp
stc
clc
cmpb
jb
stc
pop
sub
jb
add
stc
std
std
test
xor
add
add
adc
mov
push
loopne
fdiv
hlt
mov
pop
mov
mov
mov
cmc
lods
push
out
jg
cli
sti
push
pop
pop
pop
shll
push
idiv
test
mov
jmp
stc
clc
sti
lds
sbb
or
push
pop
add
push
clc
testl
inc
out
in
clc
stc
pop
xchg
pop
pop
mov
adc
sbb
add
pop
add
addl
ja
hlt
testl
out
mov
lret
jno
pop
pop
les
dec
lock
js
pop
push
aaa
add
pop
pop
pop
push
addl
jae
sti
negl
in
push
repnz
inc
incl
sbb
jnp
idiv
dec
pushl
mov
jne
hlt
cli
cwtl
add
es
test
or
out
ss
cli
sti
push
popa
roll
pop
push
test
push
push
adcl
pop
push
pop
shll
lds
les
out
ret
std
std
clc
decb
add
add
std
std
mov
out
adc
div
mov
push
pop
pop
lret
mov
ss
xchg
jb
push
cmp
jl
xor
jo
cmp
cmp
mov
add
jecxz
inc
dec
mov
pop
sub
out
mov
test
pop
push
push
adc
jb
lock
or
pop
push
loop
sti
idiv
lds
inc
clc
lds
or
add
push
push
lret
adc
pop
sti
pop
std
cmp
jae
out
cli
pop
or
mov
orb
adc
std
ljmp
push
lret
out
out
or
jmp
jo
rorl
lret
sti
sti
idivl
jae
cmp
jb
push
push
loopne
stc
div
pop
pop
loope
stc
clc
std
push
push
push
mov
pop
pop
mov
push
inc
hlt
out
std
std
mov
mov
rolb
div
clc
std
mov
mov
pop
push
hlt
loopne
sti
hlt
cli
pop
cmp
clc
dec
in
insl
div
clc
push
push
pop
movl
in
dec
div
clc
lret
push
pop
push
aam
std
mov
adc
add
or
in
add
les
ret
or
ds
add
in
clc
jge
mov
addl
mov
out
cs
add
xorl
cmp
xor
push
out
dec
cld
clc
stc
push
rolb
or
incb
enter
div
dec
jl
pop
pop
clc
jae
xchg
jae
clc
dec
loopne
cli
div
pop
pop
push
pop
pop
mov
xchg
clc
out
pop
enter
add
pop
rorl
addl
jg
push
add
ljmp
add
sbb
inc
sti
out
xor
mov
je
stc
hlt
dec
cld
jge
mov
ljmp
push
mov
enter
out
mov
std
std
les
jl
adcb
shll
dec
jle
fdivrl
das
fisttpl
fnsave
pop
lds
mov
sbb
xlat
out
in
mov
in
jmp
in
jecxz
idiv
push
leave
add
add
inc
xchg
jb
push
push
pop
add
hlt
push
lea
dec
jg
lea
inc
and
jns
stc
stos
jno
mov
push
push
mov
cmc
mov
mov
loopne
pop
cmp
in
rdpmc
ret
mov
das
fcoms
push
enter
push
push
push
mov
mov
ss
sbb
dec
orb
les
jg
add
test
push
mov
push
pop
and
xchg
call
push
mov
js
rorl
out
icebp
clc
stc
mov
lea
jge
mov
orl
repz
imul
sub
idiv
adc
cmp
clc
stc
mov
pop
pop
pop
les
fstpt
ret
or
push
pop
add
out
inc
notl
test
push
pop
mov
mov
mov
jo
iret
or
or
add
clc
std
add
push
push
les
mov
push
push
pop
mov
add
mov
add
mov
add
or
dec
jge
mov
pop
pop
pop
lret
test
mov
or
push
pop
jbe
clc
adc
je
or
mov
jecxz
jmp
clc
lds
add
or
pop
pop
mov
adc
lea
lea
xor
jae
aaa
push
jo
cmp
jae
or
cmp
jl
cmp
add
orb
push
cmp
or
push
loope
pop
or
xchg
or
pop
std
clc
sti
out
cltd
or
or
stc
clc
jmp
pop
push
pop
xchg
or
or
clc
stc
in
jne
int
sbb
stc
mul
imul
std
dec
jns
out
pop
pop
adc
sbb
mov
add
hlt
cli
dec
ja
pop
in
inc
push
mov
mov
add
stc
in
add
clc
stc
dec
jge
pop
in
sub
fimuls
pop
add
dec
jns
jmp
testb
add
in
or
pop
pop
mov
loope
jmp
push
pop
lds
ljmp
push
xor
push
mov
pop
or
fstpt
or
sarb
icebp
fimuls
add
sarl
fcomi
faddl
or
or
push
ss
xor
xlat
out
aam
fidivs
ljmp
jo
das
fstps
push
cld
movb
cmc
filds
push
push
or
lock
ss
hlt
lds
push
pop
cmp
push
and
mov
pop
bswap
jno
add
jae
add
jo
push
aam
or
filds
or
int3
jge
lock
flds
mov
pop
xor
cmp
xlat
out
rcl
rcl
sarl
out
or
fidivrl
das
fstps
in
inc
in
testb
add
pop
jb
cmc
fdiv
fiadds
push
leave
or
ss
cmc
lds
jae
int3
add
idiv
dec
pushl
push
pop
cmp
addl
pop
push
add
dec
clc
add
add
clc
stc
test
or
xchg
jmp
stc
push
lret
mov
pop
mov
mov
push
push
push
mov
movsl
js,pn
pop
orb
jne
push
jae
xor
push
outsl
addr16
or
cmp
sub
stc
push
add
outsl
mov
or
clc
out
pusha
lock
testl
jp
add
pop
pop
pop
push
push
pop
lret
sbb
mov
movsl
and
lret
mov
pop
mov
pop
mov
xor
push
outsb
cmp
or
outsl
mov
addl
inc
push
out
jb
sti
stc
cmp
pop
push
push
popa
lea
outsl
stc
aas
inc
add
js
or
dec
sti
lea
mov
out
sbb
add
adc
jae
push
hlt
adcl
pop
add
call
stc
mul
lds
adc
or
pop
add
or
push
pop
addb
pop
divps
popl
push
mov
test
clc
push
cmp
mov
xor
push
push
ds
pop
pusha
stc
cmp
popa
add
push
adc
push
push
in
push
fcomip
clc
test
mov
mov
out
jle
stc
testl
clc
std
mov
test
push
jl
xor
cmp
pop
push
pop
bound
inc
add
dec
clc
out
and
cli
sti
lret
out
cmc
std
std
in
testb
pop
mov
cmp
push
outsl
fdivrs
inc
push
arpl
ss
andl
dec
pop
jae
mov
in
inc
in
clc
mov
cmpsl
inc
or
xor
std
std
mov
loopne
jmp
hlt
in
enter
xor
pop
pop
pop
arpl
dec
or
in
popa
cmc
stc
clc
jmp
xchg
mov
or
les
pcmpeqd
add
or
pop
sbb
rolb
cmpsl
inc
pop
pusha
push
dec
or
or
movsl
inc
or
inc
push
jmp
inc
or
and
hlt
cli
or
add
dec
out
clc
stc
out
or
div
popa
into
push
inc
movsb
dec
pop
mov
lds
or
popa
into
push
frstor
ljmp
test
pop
loope
sar
mull
jle
sti
stc
sub
cmp
pop
xchg
ljmp
or
or
cld
or
or
pop
scas
mov
or
in
sub
push
shl
clc
out
cmp
mov
loope
sar
imul
jae
std
std
movsb
stos
mov
shl
hlt
cmpsb
and
std
and
mov
push
or
sub
mov
or
inc
pop
pop
imull
inc
ljmp
dec
or
lret
mov
push
ljmp
shll
mov
mov
push
clc
ja
mov
loopne
icebp
div
mov
loopne
stc
clc
std
xchg
jae
mov
loope
repz
imul
or
mov
pop
push
out
stos
idiv
notb
mov
mov
add
and
adc
or
push
mov
add
lcall
dec
add
clc
std
xchg
jb
cmpsl
push
scas
inc
or
push
in
push
clc
stc
clc
xchg
jae
les
add
sti
test
xor
movsb
mov
or
jecxz
sti
idiv
movsl
push
movsb
inc
pop
cmpsl
push
mov
jns
add
ja
add
movsb
cwtl
jbe
or
enter
mov
jbe
add
stc
notl
test
push
sub
push
push
cmp
cmp
sub
add
inc
pop
xor
pop
pop
pop
pusha
sbb
xor
loope
idiv
std
jmp
mov
add
xor
push
outsb
sbb
inc
or
outsl
mov
add
inc
add
pop
pop
pop
insb
adcl
or
out
and
std
clc
in
lcall
or
and
mov
clc
daa
dec
mov
pop
pop
imull
inc
mov
pop
sti
and
inc
or
mov
add
mov
or
inc
push
mov
nop
out
sub
sti
stc
lret
cwtl
xor
jecxz
in
idiv
lds
rcll
idiv
pop
jecxz
sti
idiv
lds
mov
pop
jecxz
sti
idiv
out
mov
out
cmpsb
stc
div
les
clc
stc
push
push
ljmp
idiv
test
push
sub
push
push
cmp
idivl
arpl
mov
pop
pop
pop
pusha
sbb
xor
gs
pop
les
scas
dec
add
jmp
ret
push
cmp
insb
clc
cmp
and
add
inc
add
pop
pop
pop
insb
adcl
or
out
sub
lcall
or
and
mov
push
mov
push
push
push
fidivrs
enter
cmp
stc
aaa
mov
xor
ss
addb
ja
test
clc
inc
in
adc
jl
inc
out
sbb
rolb
adc
add
mov
xor
cmc
inc
lea
mov
xchg
aam
loop
jne
mov
jns
lock
pop
pop
pop
arpl
dec
or
in
cmpsl
jmp
mov
pop
pop
pop
push
lret
mov
pop
push
push
mov
decb
mov
sbb
push
icebp
clc
std
mov
out
and
stc
testl
pop
add
stc
testl
push
sbb
inc
dec
jb
pop
push
push
pop
push
enter
push
push
push
mov
mov
push
les
addl
xlat
jo
mov
ret
xlat
jno
fnstenv
into
cli
lods
jno
sbbb
stc
arpl
xchg
jl
or
testl
add
lock
pop
mov
or
pop
lret
cwtl
arpl
pop
std
clc
stc
test
or
mov
cmp
push
push
push
push
push
push
push
push
pop
hlt
mov
cmp
push
pusha
cmp
data16
arpl
or
sar
std
mov
mov
test
add
dec
pop
mov
test
mov
out
push
clc
sti
stc
orl
fwait
lock
testl
orl
xchg
adc
jecxz
std
clc
lea
pop
loopne
clc
div
add
or
push
mov
dec
repz
loop
mov
xor
jae
xor
pop
pop
pop
pusha
sbb
aaa
dec
add
add
add
out
fdivp
stc
test
sti
jecxz
mov
pop
pop
pop
mov
pop
lret
test
pop
mov
mov
xchg
push
push
push
xor
mov
adcl
push
mov
pop
scas
mov
adcl
push
ret
push
cli
mov
xor
dec
inc
add
clc
arpl
add
roll
xorl
add
jp
pop
or
add
pusha
ret
or
cmp
data16
pop
add
or
dec
push
jae
out
sub
stc
out
dec
add
or
mov
fwait
add
and
and
ret
add
push
jae
ljmp
or
or
or
dec
out
clc
stc
out
pop
add
or
push
out
add
push
mov
popl
or
addb
js
lea
mov
add
jne
mov
push
incl
es
mov
cmp
mov
inc
hlt
cmp
clc
add
jo
sub
dec
faddl
cmp
shll
out
call
mov
inc
movl
clc
je
inc
xor
jmp
pop
dec
fisttpl
inc
xlat
mov
adcl
pop
div
clc
lea
push
mov
push
fsub
dec
sti
hlt
cli
dec
stos
pop
out
xchg
clc
stc
add
sbb
inc
rorb
mov
mov
rolb
jecxz
inc
inc
jle
test
push
jb
ljmp
or
or
add
inc
loop
push
cmp
out
pop
mov
or
add
orb
push
add
rolb
in
out
stc
clc
mov
mov
loopne
std
hlt
cli
clc
xor
test
pop
push
pop
mov
pop
mov
xlat
loopne
idiv
std
mov
mov
dec
mov
pop
or
in
mov
push
cmpsb
mov
mov
loope
idiv
testl
out
xchg
stc
clc
testb
clc
std
push
mov
aad
xor
nop
mov
pop
ljmp
addl
cmp
push
popl
push
mov
loopne
div
hlt
mov
mov
push
pop
add
cmc
div
mov
out
clc
stc
out
xlat
stc
clc
stc
popa
lea
addl
aam
idiv
mov
ljmp
jge
loope
out
sti
imul
pop
sbb
push
or
mov
int3
out
scas
cmc
std
std
mov
mov
adcl
inc
mov
std
xchg
jae
in
pop
jecxz
clc
loop
mov
mov
mov
in
add
lea
mov
int
repz
pop
pop
pop
arpl
dec
pop
lret
out
idiv
in
pushl
ret
pop
pusha
sbb
dec
dec
add
lar
pop
out
loop
stc
testl
fucomip
std
clc
in
div
in
xlat
addl
out
les
pop
sti
stc
div
push
or
add
clc
std
std
clc
add
add
es
imul
add
push
jmp
ret
dec
inc
inc
or
outsl
mov
add
inc
add
pop
pop
pop
insb
adcl
or
out
icebp
jmp
clc
in
lcall
or
and
mov
stos
inc
inc
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
add
add
push
pop
inc
push
jo
inc
or
das
inc
add
das
dec
or
dec
add
mov
inc
pop
jb
inc
push
enter
iret
inc
inc
or
and
fisubl
inc
pop
add
dec
or
dec
add
jne
arpl
inc
inc
push
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
aas
inc
inc
pop
push
pop
add
push
sub
or
cs
pop
mov
dec
or
and
jg
inc
pop
mov
inc
push
jl
inc
or
inc
inc
or
inc
inc
add
and
jecxz
dec
add
adc
inc
jb
jae
imul
data16
push
jl
arpl
lcall
or
or
add
pop
add
pop
push
pop
add
or
pop
or
add
inc
add
pop
push
pop
aam
dec
or
dec
add
sub
mov
inc
push
mov
inc
or
inc
or
inc
add
dec
inc
pop
jo
dec
or
dec
add
stos
inc
inc
pop
push
dec
inc
push
in
dec
inc
or
inc
or
push
dec
bound
jp
push
jge
pusha
gs
adc
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
sub
add
inc
inc
push
jo
inc
or
das
inc
add
das
dec
or
dec
add
imul
jb
inc
push
enter
iret
inc
inc
or
inc
inc
pop
loopne
dec
or
dec
add
je
ja
bound
jp
data16
cld
bound
insb
pop
mov
mov
clc
push
push
orl
addl
mov
add
xchg
pop
sub
jle
sti
jge
xor
push
pop
pop
les
or
cmc
shrb
insl
add
push
negl
orb
adcl
push
mov
lret
orl
pop
sbb
push
es
clc
jb
or
jl
or
push
sbb
and
ret
sbb
movl
jns
idivl
mov
add
pop
xchg
jmp
jnp
or
mov
idiv
stc
js
push
in
or
lea
mov
add
add
push
add
clts
xchg
push
in
ret
in
pop
push
push
outsb
mov
mov
fisttps
cmc
addb
dec
pop
popl
mov
out
es
testl
clc
std
mov
test
add
add
inc
dec
pop
jae
cmpl
cld
addl
dec
sbb
inc
cli
cmp
jae
lea
sahf
pop
pop
push
loop
lds
cld
iret
push
pop
push
and
lret
mov
push
mov
test
call
adc
stc
mov
divl
xchg
pop
push
pop
test
add
add
jae
cmpl
clc
sti
jns
or
adc
dec
jge
int
ret
notl
mov
mov
mov
lea
pop
push
push
pop
push
leave
or
jmp
push
push
adc
push
mov
mul
sti
testl
loopne
in
hlt
mov
push
lea
ljmp
adc
int3
in
add
pop
push
mov
xchg
jb
in
jmp
clc
insl
test
add
pop
push
test
push
mov
pop
pop
pop
push
lret
add
pop
push
divl
or
adc
cli
sti
mov
jb
dec
pop
mov
addl
jecxz
cld
idiv
add
push
mov
mov
orb
in
mov
ret
mov
mov
inc
dec
or
std
std
add
mov
mov
addl
out
cmp
stc
add
push
test
mov
inc
dec
pop
lea
es
jl
mov
pop
pop
les
imul
cmp
insl
imul
imul
popa
push
arpl
jb
push
imul
je
insl
pop
or
add
push
addr16
jae
arpl
or
or
push
push
arpl
jne
bound
or
inc
jnp
pusha
push
insl
je
jb
popa
bound
pop
add
pop
sub
pop
push
push
orl
in
add
idiv
lret
jno
addl
mov
push
push
sti
push
adc
incl
jae
push
push
std
push
push
mov
mov
or
dec
and
std
push
pop
push
mov
pop
notl
aad
lret
pop
out
inc
add
pop
pop
pop
pop
pop
push
lret
add
pop
out
scas
in
std
mov
mov
lea
out
lock
cli
sti
addl
std
push
daa
aam
in
add
sub
sti
testl
stc
notl
lret
inc
or
pextrw
xchg
push
push
pop
sbb
jo
xor
jle
lea
decl
lret
testb
enter
div
add
add
add
hlt
mov
pop
pop
pop
lds
out
or
jo
popa
stc
into
jbe
in
push
mov
add
pop
pop
out
add
push
push
mov
mov
xchg
pop
pop
out
add
cli
sti
sbb
testl
xchg
testl
js
pop
loopne
out
hlt
pop
pop
lret
push
fbstp
rorb
or
addb
popl
les
lea
sub
filds
psubw
mov
lea
lret
loopne
div
cli
or
popl
pop
lds
push
cmp
faddl
mov
out
ret
testl
add
les
push
push
pop
cwtl
push
push
push
cmpl
or
inc
sbb
sbb
add
testl
mov
cmp
jae
test
or
add
hlt
stc
clc
xor
in
sub
pop
lcall
adc
clc
into
jecxz
mov
xchg
inc
or
mov
mov
mov
out
xor
testl
push
push
push
push
testl
jp
xchg
jnp
mov
add
daa
jg,pt
jns
cmp
adc
mov
lret
loopne
div
cli
lea
lea
push
or
aad
cli
lea
shr
xor
pop
pop
pop
push
lret
push
and
les
orl
arpl
aaa
pusha
jns
inc
add
pop
pop
pop
data16
outsl
mov
or
loopne
out
imul
pop
rorl
dec
or
lret
push
mov
push
mov
xor
push
pusha
int
dec
or
cmp
daa
std
pop
jae
inc
add
enter
outsl
mov
lret
dec
inc
add
out
js
sti
stc
jecxz
pop
lret
xchg
add
push
mov
xor
inc
inc
add
clc
arpl
mov
push
push
pop
pusha
adcl
pop
in
imul
icebp
push
jg
inc
pop
pop
les
in
pop
arpl
dec
dec
pop
clc
xor
es
add
dec
pop
cmp
pop
pop
push
arpl
inc
pop
out
push
ljmp
mov
test
jle
inc
pop
add
cmp
push
insb
test
pop
data16
aaa
bound
mov
mov
andb
movsl
subb
cmc
idiv
mov
out
sub
stc
idivl
push
push
pop
pusha
adcl
pop
out
imul
icebp
push
xchg
ja
mov
enter
mov
mov
push
out
add
add
or
roll
ja
pop
test
add
cmp
inc
dec
dec
jae
pop
pop
les
test
pop
mov
pop
push
push
mov
mov
testl
pop
adc
inc
pop
pop
inc
add
sti
idiv
add
pop
pop
pop
les
or
out
push
pop
push
cmc
fisttps
sub
repnz
jp
or
add
add
clc
stc
add
mov
pop
pop
pop
push
lret
pop
mov
pop
push
push
mov
mov
fisttps
je
push
ret
or
add
or
idiv
or
mov
push
pop
pop
pop
rclb
push
in
push
pop
cmp
cli
mov
mov
mov
lock
or
int3
push
inc
sbb
jns
sti
stc
testl
pop
push
pop
les
add
test
pushf
push
pop
pop
mov
mov
mov
mov
mov
mov
push
fmull
push
pop
in
shl
clc
test
dec
repz
out
mov
stc
testl
add
popl
addl
mov
push
push
insb
filds
adc
sar
std
mov
push
mov
pop
bound
popa
pop
mov
loopne
inc
jecxz
or
adc
testl
fnstenv
and
pop
out
in
xchg
idiv
stc
mov
push
mov
push
insb
push
pusha
jmp
into
mov
mov
stc
orl
addb
insl
add
or
lea
adcl
push
sti
sti
testl
and
orb
loopne
or
stc
clc
popl
pop
addl
outsl
adc
stos
mov
lea
push
in
loopne
div
cli
or
inc
mov
insl
adc
xchg
dec
cmc
mov
orb
adc
pop
cld
std
clc
lea
push
orl
popa
add
xchg
rorl
clc
testb
push
push
inc
lea
mov
loopne
sti
clc
std
mov
push
mov
pop
bound
popa
mov
rorl
sti
div
mov
pop
mov
push
insb
adc
rcrb
pop
addl
sbb
lods
cmc
clc
stc
mov
push
lea
push
bound
outsl
sub
xchg
outsl
add
or
sti
stc
orl
orb
bound
outsb
xchg
jae
cli
mov
lea
adcl
clc
sti
testl
xchg
scas
add
add
stc
clc
popl
pop
outsl
adc
push
mov
mov
lea
lea
loopne
hlt
hlt
cli
dec
jecxz
mov
push
insb
add
push
icebp
or
or
std
clc
lea
push
lea
push
arpl
insl
inc
mov
out
or
testb
push
push
pop
and
push
loopne
and
clc
std
mov
mov
pop
bound
popa
mov
rorb
sti
div
mov
dec
scas
push
insl
pop
push
push
sub
lret
orl
sbb
stc
mov
push
insb
add
sbb
jecxz
or
sti
stc
orl
orb
bound
outsb
xchg
mov
or
mov
sti
testl
shl
out
add
inc
jecxz
adc
cmpsb
sti
stc
clc
popl
pop
mov
outsb
or
and
loopne
cmc
hlt
cli
xorps
movq
add
lret
mov
or
std
clc
lea
push
lea
push
arpl
repnz
mov
hlt
clc
testb
push
push
pop
inc
or
inc
out
mov
loopne
cli
clc
std
mov
push
popl
pop
insl
or
add
jmp
les
es
div
mov
pop
mov
push
insb
push
push
movsb
jmp
orl
sbb
or
clc
stc
mov
mov
push
insb
push
pusha
fimuls
bound
push
out
call
or
dec
rcll
lea
mov
adcl
sti
testl
pusha
dec
ds
mov
orl
adc
lock
stc
clc
popl
pop
addl
outsl
punpcklbw
inc
loop
or
hlt
cli
push
push
lea
push
insl
push
outsl
es
gs
orb
pop
jecxz
mov
add
lea
push
arpl
mov
mov
mov
out
lods
repz
testb
lahf
push
push
mov
add
adc
std
clc
std
mov
push
mov
pop
bound
mov
inc
jecxz
or
adc
testl
bound
pop
addl
pop
out
in
push
repz
stc
mov
push
mov
push
insb
pop
pusha
ja
mov
into
mov
mov
stc
orl
addb
insl
add
jl
cs
lea
adcl
sub
sti
testl
repnz
cmpsb
jecxz
inc
loopne
or
stc
clc
popl
pop
addl
outsl
adc
xorb
mov
lea
push
in
loopne
repz
cli
or
inc
scas
push
insl
adc
sbb
dec
loopne
adc
sar
std
clc
lea
push
orl
popa
add
rcr
mov
mov
mov
out
mov
clc
testb
push
push
fnstsw
test
addb
clc
std
mov
push
mov
pop
bound
popa
repz
pop
mov
mov
mov
out
cmp
testl
addr16
stos
ret
pop
addl
sbb
push
inc
out
lea
push
bound
outsl
dec
sub
add
or
sti
stc
orl
orb
bound
inc
mov
lea
adcl
sti
testl
scas
sub
add
stc
clc
popl
pop
outsl
adc
cmpsb
xchg
decb
lea
loopne
repz
cli
dec
jecxz
mov
push
insb
add
push
bound
adc
sbb
add
test
arpl
insl
xchg
les
mov
mov
out
or
clc
testb
push
push
jmp
or
add
clc
std
mov
mov
pop
bound
popa
ficompl
lea
adc
enter
mov
dec
mov
insl
add
dec
js
imul
in
mov
clc
stc
mov
push
insb
add
out
daa
sti
mov
lea
mov
out
sahf
sti
stc
orl
orb
bound
outsb
adc
movsb
rorb
jne
sti
testl
test
ret
popl
lea
ljmp
in
pop
mov
outsb
push
outsl
test
cmc
mov
mov
lea
loopne
lock
cli
xorps
or
xor
xor
or
std
clc
lea
push
lea
push
arpl
mov
mov
icebp
clc
testb
push
push
sub
into
mov
adc
sti
clc
std
mov
inc
rorb
addb
dec
fisttpl
out
inc
decb
iret
enter
pop
sti
mov
ljmp
push
mov
push
movl
mov
test
notl
pop
sbb
dec
cmc
in
mov
stc
mov
mov
push
push
mov
push
les
fisttps
push
or
clc
std
xor
popl
and
cmpps
pop
and
rolb
mov
and
fstpt
jno
xor
adc
iret
mov
out
jne
clc
stc
test
pop
push
lret
mov
pop
push
push
pop
xchg
pop
std
std
clc
testb
das
mov
or
push
pop
add
inc
testb
ljmp
leave
out
or
aas
fnstenv
clc
inc
es
rol
in
or
pop
mov
leave
in
sbb
push
es
xor
add
or
push
dec
mov
add
add
int3
adcb
inc
std
inc
and
bound
cmp
bound
arpl
mov
or
loop
pop
mov
or
loop
or
or
in
add
or
or
or
mov
add
leave
jb
insl
or
dec
and
add
pop
add
mov
clc
sti
insb
pop
test
arpl
or
out
xchg
clc
idivb
lds
std
std
clc
lea
and
push
add
std
std
xchg
mov
pop
push
push
push
pop
push
push
xchg
data16
stc
clc
hlt
orl
addl
mov
out
inc
xlat
div
mov
add
add
mov
or
pushf
sub
or
add
out
cmp
mov
pop
outsl
and
popa
mov
aam
lret
shll
add
ljmp
sub
orb
mov
ljmp
outsb
mov
or
mov
or
vmovupd
mov
pop
sbb
in
pop
or
sbb
add
push
mov
sbb
or
mov
popa
xchg
or
or
into
insb
or
inc
and
mov
or
add
clc
xor
popa
mov
sub
push
mov
push
lea
and
pop
mov
pop
mov
out
add
cmp
mov
jecxz
xchg
hlt
lea
add
pop
xchg
sti
mov
outsl
mov
add
lret
jb
mov
and
pop
add
pop
out
aas
sar
clc
xchg
cwtl
push
or
pop
push
push
pop
cwtl
push
push
push
add
hlt
adc
int
int3
mov
ljmp
loopne
cli
div
mov
add
enter
stc
clc
aad
int3
out
sahf
cmc
cli
sti
mov
pop
pop
pop
pop
les
sub
leave
addl
ja
add
enter
or
pop
mov
add
mov
orl
inc
es
lea
or
add
inc
and
mov
add
lds
and
enter
loop
xor
aam
sbb
pop
das
add
fimull
test
add
or
dec
sub
movb
add
sub
test
or
adc
inc
and
pop
lret
call
push
push
dec
in
faddl
mov
xchg
add
mov
test
or
pop
mov
dec
mov
cli
inc
or
or
xchg
mov
add
add
enter
mov
or
mov
xchg
or
or
enter
mov
mov
xor
dec
add
loope
add
xchg
dec
mov
sti
dec
add
jo
add
or
lea
jge
add
xchg
dec
test
sti
inc
or
test
or
out
push
or
int
inc
or
mov
inc
or
add
add
shl
push
mov
stos
jb
pop
mov
mov
xchg
or
dec
or
dec
orl
andb
add
add
pop
lea
div
cli
pop
jmp
inc
repnz
out
inc
sti
clc
testb
mov
pop
jecxz
lret
push
and
shl
push
push
mov
mov
orl
sbb
hlt
std
std
xor
mov
test
rorb
andl
or
add
jl
xor
mov
or
mov
popl
mov
add
or
orl
out
mov
mov
xchg
or
or
leave
sti
inc
mov
divl
iret
addb
subb
add
xchg
dec
mov
stc
inc
orb
xor
lea
mov
xchg
mov
add
add
leave
hlt
dec
popl
divl
rorl
ja
add
jbe
xchg
or
dec
or
mov
or
add
add
shl
xorb
mov
scas
jbe
pop
mov
push
add
xchg
dec
or
in
mov
test
subl
add
jmp
jge
dec
test
incb
jnp
or
subb
add
add
push
dec
xchg
sti
inc
mov
or
subl
rolb
movb
clc
or
xorb
ljmp
mov
push
and
lret
push
push
push
push
mov
incl
pop
or
pop
add
out
lcall
inc
mov
jp
mov
mov
mov
xor
out
push
cmc
clc
testb
mov
add
mov
add
add
clc
stc
in
inc
mov
add
mov
sbb
add
std
mov
dec
xchg
or
int
les
xlat
mov
xor
out
push
idiv
testb
sbb
push
push
mov
mov
jecxz
cmc
idiv
pop
pop
pop
pop
les
sbb
icebp
mov
mov
push
jae
mov
les
loope
hlt
sti
testl
pop
adc
int
cmp
clc
stc
mov
mov
mov
loopne
stc
hlt
cli
pop
push
pop
lds
shl
pop
push
addb
rorb
iret
mov
out
push
inc
cli
lea
push
mov
mov
jecxz
hlt
idiv
lea
add
loopne
int3
div
sbb
add
les
ret
cld
add
decl
jle
mov
loopne
test
add
mov
xor
movl
mov
xchg
std
pop
push
pop
push
hlt
dec
jmp
mov
pop
add
inc
popl
lea
mov
add
mov
sub
jae
sub
jge
cmp
pop
pop
mov
pop
mov
sahf
icebp
incb
or
std
clc
std
ljmp
cmp
or
iret
pop
push
mov
fwait
lock
or
mov
xor
rorl
hlt
addl
ss
lock
jmp
push
or
add
repz
adc
cs
lea
out
sub
clc
mul
aam
idiv
iret
xor
lds
rcll
ret
xchg
repnz
push
xor
subb
jecxz
xor
add
mov
fwait
lock
dec
repz
sahf
repnz
stc
mov
xor
fbld
xlat
orb
dec
xchg
push
xor
cli
mov
inc
test
or
inc
decl
subl
pop
pop
loop
les
push
and
les
addr16
inc
add
aaa
pusha
subl
mov
outsl
insb
pop
dec
or
loopne
aad
imul
pop
rorl
dec
or
lret
push
pop
xchg
cld
std
clc
fimuls
iret
dec
and
or
insl
add
stc
mull
arpl
mov
pmaxsw
and
sub
pop
push
out
stc
hlt
clc
stc
push
mov
inc
mov
or
sbb
push
pop
ljmp
bound
mov
adcb
std
std
mov
sbb
dec
loopne
in
cli
mov
out
scas
out
clc
stc
popl
push
test
push
mov
inc
out
repz
std
clc
mov
adc
mov
sub
cs
push
adc
mov
adc
mov
pop
jmp
adc
add
and
push
or
mov
sbb
mov
sbb
push
inc
dec
xor
or
mov
mov
lea
notl
mov
adc
or
pop
out
jle
push
or
sub
mov
daa
mov
inc
out
push
cmc
clc
negb
mov
mov
sub
push
in
cmp
mov
mov
cmp
push
mov
adc
inc
es
out
aam
stc
negl
test
cmp
cmpsl
mov
pop
sub
mov
add
and
xchg
test
aaa
test
fwait
push
push
mov
out
pop
out
clc
mul
js
idiv
test
add
test
add
sbb
cli
push
pop
mov
out
aaa
in
stc
pop
sti
adc
cmpl
inc
and
add
into
std
std
insl
push
insl
adc
iret
adcl
sbb
xor
clc
stc
mov
push
and
int
iret
mov
hlt
push
or
fbstp
les
add
in
mov
or
test
adc
adc
dec
and
clc
idiv
mov
pop
mov
orl
adc
push
sbb
inc
mov
adc
add
adc
push
add
pop
jbe
roll
push
jecxz
mov
adc
inc
es
out
sar
stc
testl
mov
adc
sbbl
pop
adc
inc
add
jae
mov
lea
notl
imul
adc
dec
and
pop
push
pop
pop
pop
pop
lds
jmp
lret
push
insb
adc
std
aaa
bound
mov
push
pop
pop
arpl
inc
push
lret
loope
hlt
cli
out
lock
lds
inc
push
or
push
and
les
push
pop
inc
add
aaa
pusha
xchg
lods
inc
add
pop
pop
pop
data16
outsl
pop
pop
dec
or
loopne
enter
pop
rorl
dec
or
lret
shl
fisttpll
add
xlat
clc
testb
pop
add
mov
ret
testl
cmpsb
scas
dec
pop
mov
pop
inc
or
stc
clc
add
mov
or
add
pop
mov
popl
or
dec
jmp
sti
mov
or
mov
mov
addl
ljmp
pop
mov
or
add
pop
mov
popl
or
sbb
cli
sti
mov
or
mov
mov
addl
ljmp
pop
mov
mov
sub
pop
popl
or
rcl
cli
sti
mov
jb
mov
mov
orb
loopne
fprem
std
xchg
jb
mov
mov
gs
or
fprem
sti
or
inc
mov
mov
addr16
add
xlat
clc
testb
mov
addr16
push
orl
jp
idiv
add
sbb
mov
addr16
or
outsl
clc
add
add
or
imul
imul
or
imul
xor
data16
imul
add
inc
jl
addr16
outsb
arpl
fs
arpl
addr16
or
add
arpl
bound
je
or
or
dec
push
arpl
push
dec
or
fs
push
je
popa
addr16
inc
add
dec
insl
jae
arpl
imul
jle
add
or
push
insb
push
push
jp
bound
dec
arpl
je
or
or
jbe
outsb
push
je
arpl
pop
or
add
jb
outsb
inc
push
imul
pop
or
jl
push
jne
popa
bound
dec
arpl
jne
or
outsl
jo
bound
jl
jg
or
je
outsl
bound
jbe
imul
jo
mov
rcll
add
fptan
testl
lds
cld
out
pop
lret
mov
push
push
push
push
test
lock
add
add
mov
add
sub
jno
or
mov
lea
and
mov
in
push
and
dec
xchg
jne
inc
aaa
lock
orb
xor
jo
mov
inc
dec
jb
lea
mov
jecxz
sti
idiv
out
xor
mov
or
push
sub
inc
mov
jbe
inc
xor
lea
push
sbbl
outsl
cli
sti
testl
dec
jae
popl
add
mov
or
pop
pop
rorl
mov
repz
addl
add
or
adcb
adc
lea
iret
lea
and
out
testl
je
or
and
and
testb
das
add
jle
adc
jae
lea
orb
loopne
clc
clc
std
mov
adc
adc
iret
orb
loopne
fdivr
std
inc
dec
jae
mov
mov
or
pop
lret
mov
mov
mov
xor
dec
cmp
push
and
add
lds
les
ficoml
mov
sahf
add
sub
mov
or
mov
push
push
xor
addl
cld
aad
xor
mov
xor
dec
cmp
push
and
add
decb
or
pop
hlt
adc
ret
xchg
push
inc
or
jb
mov
pop
les
rol
idiv
pop
pop
push
aaa
rorl
clc
lcall
iret
sti
sti
testl
push
pusha
arpl
popa
sti
cmp
daa
mov
out
inc
clc
sti
stc
orl
idiv
stc
mov
popl
mov
pop
or
in
mov
xchg
clc
stc
clc
mov
loope
fdivr
testl
mov
xchg
mov
out
mov
mov
insb
pop
arpl
popl
lea
out
stos
cli
sti
divl
mov
mov
or
add
clc
mov
out
push
fprem
testb
push
xchg
xlat
clc
clc
sti
push
bound
insl
or
outsb
or
insl
add
push
clc
adc
mov
sti
idiv
add
add
mov
pop
mov
stc
adc
inc
negb
add
into
test
or
adcb
div
push
negb
mov
dec
pop
lea
push
mov
pop
clc
sbb
mov
jp
push
stc
div
push
negb
mov
jb
inc
outsl
push
aaa
add
pop
addl
mov
push
std
adc
dec
negl
push
dec
call
xchg
clc
stc
clc
push
stc
sbb
mov
push
insb
add
inc
into
mov
mulps
stc
push
std
pop
mov
lock
subl
sbbb
sti
stc
pop
notl
int
inc
add
sbbb
std
std
push
stc
adc
mov
push
pop
pop
insb
mov
outsl
aas
inc
push
mov
mov
add
lret
out
or
stc
mul
out
orl
push
pop
loop
rorb
pop
add
div
clc
testb
add
daa
push
pop
add
ljmp
addb
pop
clc
divl
sti
stc
mov
jae
add
xchg
cli
stc
clc
xchg
jae
mov
out
xor
clc
testb
std
std
mov
mov
into
loopne
cmc
hlt
cli
dec
call
inc
or
dec
sti
filds
sti
testl
lret
push
pop
push
push
pop
pop
lret
mov
push
mov
xor
push
pusha
loope
dec
or
cmp
daa
std
pop
fwait
mov
push
pop
push
outsl
mov
mull
add
out
pop
sar
jecxz
pop
lret
xchg
add
push
mov
xor
outsb
inc
add
clc
arpl
pop
pop
insb
adcl
or
out
das
vpsubb
lcall
sbb
pop
or
pusha
inc
or
cmp
inc
pop
loopne
dec
or
xor
push
cmp
ljmp
or
cmp
cmp
pop
inc
inc
pop
sub
dec
or
inc
inc
push
xlat
dec
inc
pop
cmpsb
dec
inc
push
add
or
dec
inc
or
inc
add
dec
inc
pop
pushf
dec
dec
or
dec
add
cmp
pop
cs
inc
push
lock
inc
or
inc
or
pop
inc
add
arpl
shlb
pop
or
add
push
mov
test
idivl
lret
sar
divl
push
push
popa
inc
pop
pusha
stc
cmp
cmp
push
pusha
arpl
add
arpl
dec
or
orl
mov
cmpsb
int3
inc
dec
or
aam
sti
stos
lret
mov
cmpsl
dec
inc
inc
or
xchg
lret
hlt
cli
cmpsl
fsubs
mov
xlat
mov
scas
dec
add
clc
xchg
jb
out
out
div
in
dec
popa
add
pop
mov
xor
sub
div
add
std
clc
in
cs
push
push
pop
insl
adcb
mov
in
insl
lret
test
mov
vpaddw
out
fadd
stc
mul
jecxz
lret
pop
pop
push
arpl
inc
pop
out
ret
mul
std
in
aas
int
clc
add
pop
stc
clc
sti
stc
push
or
or
push
push
xor
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
add
or
push
xor
pop
pop
or
inc
or
mov
add
push
pop
add
or
pop
dec
add
xlat
and
push
int3
enter
enter
fstp
int
in
or
loop
dec
add
jne
mov
push
jb
jb
bound
outsb
ja
addr16
daa
and
daa
addr16
cmp
aaa
cmp
xor
aaa
xor
xor
xor
xor
xor
dec
inc
inc
dec
clc
stc
clc
std
add
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
jae
cmc
insl
push
sub
shll
js
push
inc
imulb
mov
xchg
das
cmp
mov
aaa
adc
shrl
pop
lahf
push
lahf
add
xchg
in
and
sub
pop
test
cs
xchg
push
ljmp
mov
dec
inc
pop
leave
xlat
in
test
inc
dec
aaa
orl
jbe
cmp
lea
mov
sub
idiv
xlat
leave
add
ljmp
jp
insb
push
push
jp
test
and
jmp
add
out
xor
dec
push
and
shrl
jg
shlb
xchg
dec
mov
addr16
movsbl
sbb
jae
dec
mov
mov
inc
or
pop
push
push
mov
sbb
filds
in
lret
loope
outsb
dec
xchg
sub
mov
xlat
xor
mov
xchg
xchg
fdivr
js
test
inc
inc
int3
out
ret
nop
cmp
dec
xchg
or
cld
lret
inc
stos
arpl
and
mov
and
icebp
insl
lea
push
shll
mov
push
in
fistps
inc
push
mov
fildll
add
loope
or
shrb
sbb
cmpsb
mov
add
xchg
adc
pusha
fsubr
lahf
cli
enter
loop
xchg
stos
jae
in
xor
sbb
inc
stc
sbb
mov
data16
push
cmp
aam
and
lret
push
cld
sbb
mov
aaa
mov
adc
xchg
pop
push
mov
add
xchg
into
lcall
and
mov
jecxz
cmp
add
jg
das
ljmp
jg
pop
push
pop
push
push
or
add
or
pop
add
pop
es
add
dec
or
or
push
pop
add
push
pop
push
or
add
dec
add
pop
shlb
je
in
jae
icebp
jge
std
cmc
hlt
or
insl
arpl
xchg
int
push
xor
push
add
add
mov
loopne
stc
sbb
lods
mov
lahf
mov
int
sbb
int
bnd
mov
sbb
mov
into
push
clc
add
cmpsb
jmp
pop
mov
stos
in
sub
jmp
je
xchg
cltd
mov
lret
negb
cmp
and
push
xor
cmp
repnz
xor
mov
out
xor
stc
testb
jae
xchg
lods
jne
cmp
pop
and
adc
lar
push
xchg
rol
inc
and
enter
pop
xor
or
xchg
popf
mov
and
pushf
fnsetpm(287
ljmp
das
and
mov
lret
jno
sbb
push
adc
xchg
jbe
sbb
adc
mov
pop
call
mov
xor
mov
mov
int3
push
cs
jl
in
ss
es
pop
mov
repnz
or
or
call
daa
sti
cli
sbb
mov
call
mov
leave
inc
popa
mov
ds
lahf
dec
dec
lahf
dec
dec
mov
pop
out
or
fldt
out
sub
test
loop
cld
call
mov
int3
xchg
dec
dec
fbld
xor
adc
dec
out
lock
stc
jge
xchg
xor
dec
cs
mov
movsl
stos
testb
mov
lcall
cli
lock
or
mov
mov
stos
jge
sub
data16
pop
ss
std
sbb
mov
aad
mov
leave
inc
pop
or
push
and
adc
daa
mov
lahf
nop
movsb
popl
lret
sub
adc
fwait
int3
ret
pop
pop
mov
jns
js
cmp
bound
push
push
loop
adc
sub
cmpsb
adc
dec
fldenv
and
push
sub
jbe
cltd
fwait
scas
jo
inc
int
jmp
mov
xor
fcomp
jnp
pop
pop
in
or
shlb
call
xor
cmp
or
rorl
add
or
and
pop
push
in
cwtl
lret
leave
pop
mov
scas
scas
call
xor
xchg
lods
aam
jecxz
lock
mov
loope
cmp
xor
outsl
outsl
mov
mov
insl
xchg
dec
dec
fimull
scas
loop
imul
push
pop
repnz
std
incl
lret
loop
and
addr16
jge
mov
test
adc
mov
dec
and
ja
adc
and
movsb
divb
mov
lahf
into
rcrl
in
sub
jae
fwait
cmp
pop
sub
mov
fimull
mov
sub
ja
ja
cmp
mov
into
popa
pusha
lods
xchg
dec
inc
rolb
or
add
icebp
pop
sbb
adc
bound
push
icebp
outsb
mov
adcb
adc
and
xchg
cltd
mov
in
cld
adc
sub
mov
add
lahf
mov
cmp
and
shl
sub
push
std
push
das
jg,pn
jb
test
decb
mov
adc
mov
cmp
outsl
outsb
mov
cs
xchg
mov
and
or
int
pop
push
cmc
mov
sub
adc
cmpsl
shll
je
sahf
out
jb
jl
or
lock
mov
push
int
data16
xor
add
outsl
outsl
jp
and
sbb
mov
shl
dec
scas
lods
xchg
in
jg
mov
ret
test
cmp
jne
out
out
mov
inc
inc
or
dec
stos
movsb
insb
mov
fdivr
pop
movsl
mov
mov
pop
scas
mov
pop
cltd
ret
jb
mov
jmp
xchg
fwait
insl
dec
and
imul
inc
js
aaa
add
mov
lret
ss
push
mov
in
add
cmc
stc
xchg
in
jae
lods
push
cmp
cmp
push
adc
add
add
inc
daa
and
and
xchg
xchg
or
sub
add
sub
adc
sbb
in
bound
das
lret
mov
in
jae
pop
adc
add
push
sub
sub
sbb
mov
mov
push
cld
pop
cmpsl
mov
dec
jo
xor
fst
lret
mov
push
sub
cmp
out
jns
sub
pushf
push
orb
xlat
add
or
sub
out
fs
daa
es
sti
into
jle
mov
mov
outsb
bound
int3
leave
mov
fstps
dec
dec
out
mov
pop
dec
or
arpl
jmp
loop
lods
test
ljmp
rclb
xor
xchg
adc
inc
sbb
lock
clc
js
repnz
push
push
inc
jle
xor
sub
lcall
push
push
clc
pop
cmpsl
movsl
enter
addl
xchg
nop
mov
jbe
xor
clc
lock
mov
jae
imul
cmp
clc
std
or
cmc
hlt
imul
or
xor
adc
call
push
test
mov
cmp
adc
push
xchg
int3
int3
cmc
pop
lods
mov
inc
js
cmp
mov
push
and
sbb
jno
addr16
pop
mov
jnp
fcmovnu
popa
inc
and
mov
push
mov
sub
call
mov
and
adc
in
pop
pop
sbb
prefetch
xor
in
push
bound
cmp
fcompl
add
imul
loop
pop
pop
push
xchg
mov
stos
scas
movsb
ret
fs
aas
cltd
cltd
mov
fninit
loop
lock
xor
jecxz
dec
or
push
imul
mov
push
mov
mov
aad
inc
dec
in
scas
scas
mov
outsb
imul
push
push
psubq
std
cs
test
bound
repz
in
inc
cmpsb
cmpsb
pop
sbb
or
bnd
imul
daa
das
cmp
mov
mov
xchg
into
into
and
jecxz
js
fcmovu
fwait
ljmp
aad
dec
inc
xlat
fs
mov
out
js
jne
cmp
jns
mov
into
fs
ficoms
add
or
repnz
adc
lds
pop
insb
cmp
push
aam
mov
sbbl
sbb
and
jecxz
in
pushl
sub
adc
fisubrl
ja
fcmovnu
popl
mov
mov
cmp
sbb
adc
loope
mov
lret
sti
mov
sub
jl
fcmovnu
xchg
mov
xchg
mov
fisubs
mov
fsubrp
jecxz
mov
mov
test
mov
pop
sub
leave
jl
mov
scas
pop
pop
shll
ds
adc
fs
cld
jp
xchg
jmp
jae
or
lock
lcall
add
push
popa
scas
lret
jne
and
sbb
not
fs
test
pushf
in
int
test
xchg
mov
jnp
jnp
sbb
mov
inc
iret
mov
or
imull
outsb
mov
movsb
test
inc
test
mov
push
lods
jns
loopne
pop
pushf
ret
jae
stc
sbb
cmc
xchg
cmpsl
ss
and
and
pop
outsb
xor
inc
jp
decl
repnz
dec
xchg
xor
cmpsl
repz
mov
testb
hlt
jne
in
fbstp
fbstp
push
data16
sbb
or
rclb
bound
pop
xchg
lret
pop
and
sbb
add
sub
xor
sbb
cmp
in
and
jecxz
pusha
inc
and
popf
call
jnp
jno
and
sub
sbb
sub
sbb
mov
pop
out
pop
movsb
repz
cmpsb
push
hlt
cmpsb
push
cmp
imul
sub
cmp
in
ja
daa
sbbl
push
push
push
pop
add
in
in
gs
sub
sbb
mov
jg
pop
jmp
push
insl
mov
outsl
iret
dec
mov
mov
dec
jbe
inc
xchg
inc
inc
rcrl
int
or
insl
mov
call
in
dec
lods
cld
adc
cld
inc
ret
inc
fistps
cmp
enter
push
loope
add
mov
jns
repnz
cmp
out
mov
mov
mov
orl
xchg
movsl
cmp
dec
je
std
or
cld
mov
addr16
jo
fdivs
frstor
cmp
adc
hlt
or
hlt
aam
mov
les
adc
adc
and
out
sub
jmp
out
push
nop
stos
ds
inc
les
adc
push
xchg
ret
push
scas
jne
clc
jbe
inc
jge
stos
into
arpl
mov
push
and
sbb
popf
loope
addr16
xchg
cltd
inc
xlat
jp
aam
pusha
inc
and
jns
sub
inc
ret
jmp
aam
mov
aad
mov
pop
or
adc
jo
shl
xor
in
pop
arpl
sbb
or
rcll
push
and
es
jecxz
pop
pop
xchg
lret
mov
test
inc
stos
movsb
gs
scas
cmp
pushf
out
xor
in
jle
cmc
jnp
xor
add
push
xor
mov
mov
arpl
inc
mov
mov
outsb
push
std
stos
push
lock
cld
in
sub
out
popa
cmpsl
int
jge
idivb
out
inc
test
adc
add
mov
jp
push
push
sbb
push
mov
rclb
loopne
int3
loope
jns
aad
lcall
dec
fistpl
mov
lea
in
ss
jnp
mov
lods
lret
fs
fists
or
or
repz
sbb
mov
outsb
xor
test
mov
xchg
adc
and
adc
in
fsubp
call
jmp
sahf
sbb
and
popa
fidivs
fisttpl
cmp
sub
sbb
daa
int
movb
pop
cli
scas
pop
das
jle
sub
jge
fmuls
icebp
push
movsb
lea
sbb
mov
cmp
out
dec
ret
orb
xlat
push
les
sub
sub
sbb
or
sti
lods
push
mov
push
sbb
mov
pushl
xchg
out
jb
repz
or
insb
imul
cwtl
cmp
add
gs
scas
leave
das
sub
adc
rcr
gs
test
sahf
ljmp
cltd
pop
into
iret
inc
mov
cmp
pop
push
loopne
inc
dec
into
mov
repnz
stos
stos
call
mov
test
in
inc
sahf
fwait
mov
pop
jne
popf
loope
enter
mov
jb
cli
sbb
fwait
fwait
test
inc
xor
pop
outsb
cmp
icebp
or
lret
lds
cmp
outsb
mov
loop
xlat
stc
stc
jp
xchg
ljmp
push
adc
aaa
and
or
push
xchg
and
addr16
vcvtps2pd
popf
xchg
movsl
aas
add
or
cwtl
popf
mov
add
add
adc
mov
in
in
and
das
das
outsb
inc
mov
jae
call
xchg
jg
push
adc
xor
das
xor
mov
push
push
jmp
push
push
push
icebp
cmpsb
cmp
jno
shrb
mov
lds
and
loope
fisubrl
sub
mov
scas
xlat
outsl
mov
jmp
sub
clc
hlt
sbb
mov
lret
pop
jmp
ffree
into
inc
test
ds
jne
dec
pushf
dec
inc
fistps
enter
xlat
outsl
mov
mov
std
adc
inc
inc
ret
orl
pop
arpl
inc
int
adc
or
add
push
push
mull
fwait
cltd
mov
scas
mov
hlt
movsb
movsb
mov
les
cltd
xchg
test
and
aas
dec
ja
repz
mov
mov
ja
daa
es
sbb
aaa
sub
cli
push
in
hlt
cmc
or
rcl
imul
add
xor
jmp
sub
mov
dec
inc
enter
ds
ret
push
xchg
mov
ja
stc
cmp
scas
iret
pop
pop
jecxz
adc
sub
js
xchg
out
cmpsw
ret
sahf
push
dec
dec
fsts
sub
sub
xchg
scas
cmp
dec
inc
into
test
call
aad
adc
xor
jb
pop
push
in
or
pop
adc
fdivl
call
aaa
push
insb
cmp
or
rcrl
and
dec
pop
pop
out
lds
fcmovnu
imul
xchg
scas
ds
xchg
lods
cmp
in
cmp
jge
mov
loopne
xor
into
iret
inc
lea
aas
pop
addr16
mov
bound
scas
mov
mov
push
push
clc
stos
repnz
loop
and
outsb
pusha
stos
ret
mov
lods
test
adc
mov
jo
mulb
daa
insl
dec
sub
jbe
adc
and
lods
mov
shlb
push
nop
in
out
sub
fcmovbe
ja
jo
fwait
out
sbb
fsts
orb
or
cmp
dec
je
mov
lods
lret
ficoml
incb
incb
movsb
shlb
pop
insl
push
push
icebp
cmpsb
mov
mov
sahf
sbb
and
xchg
mov
sar
adc
lcall
sub
mov
fst
ja
mov
xor
adc
adcl
push
pop
hlt
scas
sub
jg
fcomp
js
mov
call
mov
mov
loopne
filds
int
insb
pusha
mov
test
and
adc
jns
push
cli
scas
mov
pop
xor
add
pop
push
or
sbb
adc
and
and
sub
and
cmp
cmp
arpl
dec
bound
pop
jo
fs
jnp
inc
fs
jge
pusha
push
ja
js
pusha
pop
jo
outsb
in
fdivrs
clc
mov
mov
fidivs
out
sahf
iret
mov
hlt
adcl
mov
sti
xchg
test
scas
decb
leave
mov
loop
rcr
cmp
mov
ret
das
test
arpl
pop
mov
adc
pop
stc
or
inc
mov
jl
sub
outsb
int3
ss
pop
in
or
inc
lcall
xchg
adc
mov
enter
fildll
mov
roll
mov
or
inc
notl
xchg
dec
std
dec
in
xchg
dec
loop
xchg
pop
hlt
sbb
mov
xor
push
aam
movsb
stos
je
icebp
movsl
js
sti
mov
push
pop
fcomps
inc
dec
les
add
sub
mov
out
pop
xor
mov
cvtps2pi
dec
out
mov
inc
out
dec
push
mulb
pop
jge
mov
into
subb
xchg
jle
ficomps
push
xor
rcll
and
mov
add
in
add
ljmp
xchg
icebp
sub
jl
rorl
pusha
pop
xchg
dec
imul
inc
addr16
pop
jae
mov
add
mov
fstps
adc
cmp
pushl
sub
jmp
popf
fadds
xor
mov
sbb
rcrb
test
clc
cmp
in
or
popf
imul
jae
testb
inc
xlat
mov
inc
stos
inc
pop
lret
test
push
inc
jmp
icebp
inc
in
shl
push
sti
jmp
jnp
call
fsubs
dec
outsl
shlb
mov
cmp
scas
mov
mov
addl
sbb
lcall
ja
dec
mov
outsl
sbb
pop
cmp
push
xor
xchg
jp
inc
and
cmp
push
push
lds
jno
loope
push
cmp
sbb
xor
add
daa
stc
or
sub
xlat
addb
into
je
movsb
hlt
push
cmpsb
movsb
repnz
mov
mov
inc
mov
loopne
or
icebp
test
cld
mov
iret
aad
aas
fidivl
and
lret
movsl
cs
jge
mov
jbe
mov
and
lods
and
imul
pop
jbe
add
xchg
add
or
insb
add
shrl
sbb
jne
adc
jno
and
dec
cmp
out
sub
cmc
pop
es
push
in
mov
jmp
mov
sbb
mov
test
int3
movsb
sahf
cmp
lcall
pop
mov
roll
iret
inc
cmpsb
icebp
in
jb
stc
out
jbe
in
cli
data16
sti
outsb
or
gs
add
mov
adc
sub
and
sub
inc
andl
dec
test
or
jne
add
push
adc
push
pop
std
dec
arpl
int
imul
aam
jnp
shlb
test
jg
mov
adc
and
aas
pop
or
and
dec
inc
out
insb
sub
bound
repz
push
lock
jns
push
or
pop
or
fimull
push
inc
adc
ss
fnstsw
fxch
int3
sub
fld
and
shr
pop
ljmp
pmaddwd
testb
repz
ja
sahf
mov
imul
xchg
push
mov
dec
sahf
scas
test
stos
or
push
unpcklps
adc
sbb
pop
sub
das
xor
sub
cmp
sub
dec
popa
pop
jnp
insl
dec
push
jo
gs
js
dec
fs
js
outsb
push
pop
jns
outsb
pop
jne
mov
xchg
mov
sahf
aam
stc
xchg
stos
hlt
mov
sahf
fbstp
loope
int
sti
test
test
out
xchg
fidivrl
testb
ret
scas
sti
mov
mov
out
fidivs
cmp
ja
xor
outsb
shll
pop
out
xchg
adc
dec
testl
sub
jge
xor
insb
ret
push
out
sets
push
mov
adc
mov
arpl
das
mov
jnp
add
pop
in
sbbl
pop
xchg
dec
xchg
dec
in
pushf
inc
loop
sbbb
mov
adc
jp
cmp
shlb
test
stos
jno
jmp
jg
mov
jg
popf
push
pop
cltd
pop
push
lret
inc
iret
dec
inc
movsl
fdivrs
or
mov
leave
sub
xor
jecxz
cmp
lock
mov
inc
jmp
push
push
rep
pop
pop
sti
lods
outsb
jae
andl
xlat
xchg
jo
fistpl
sbb
and
movl
mov
cmp
adc
lock
cmpb
xchg
bound
fwait
popa
push
leave
cmpsb
dec
outsb
loopne
inc
callw
jae
mov
push
add
lds
sbb
cmc
ss
test
and
xor
xor
int
es
sbb
hlt
aaa
add
and
popf
imul
ja
xorb
mov
fnstenv
pop
push
cmpsl
dec
push
lret
cmc
inc
ljmp
push
cmc
vcvttps2dq
lret
fdivrl
jmp
lds
std
int
xlat
icebp
test
mov
mov
mov
mov
xchg
xchg
xchg
adc
cwtl
dec
movsb
js
dec
test
push
adc
fs
push
xor
jo
inc
das
pop
fnstenv
imul
cmp
lret
and
les
jb
out
sbb
out
adc
std
add
inc
mov
fldenv
add
xchg
mov
je
movsl
cmc
push
scas
stos
repnz
mov
ljmp
call
xchg
add
decb
push
call
mov
aaa
ljmp
das
cmp
mov
jbe
mov
sub
scas
sbb
lea
insl
mov
ja
or
lcall
add
jne
pop
les
adc
inc
cmp
dec
cmp
call
push
daa
ss
add
jmp
mov
sbb
andl
shlb
xchg
aaa
shlb
push
xchg
rcr
dec
mov
rolb
into
jb
hlt
in
js
sti
loopne
mov
clc
arpl
or
insl
mov
pop
sbb
cmp
push
xchg
cmp
dec
mov
xor
jns
pop
in
dec
add
addr16
adc
push
insl
ds
xor
pop
jbe
ficoms
sub
cmpsb
add
imul
sbb
or
xor
and
pop
pushf
sub
in
bound
inc
out
aas
pop
pushl
push
cmc
jno
js
push
add
push
pop
push
dec
pop
roll
aad
fcmovnb
fidivrs
aam
and
fadd
cs
loope
adc
out
out
loop
cmc
psubd
hlt
add
mov
stos
jb
cmpb
mov
pop
mov
test
cmpsl
mov
pop
or
add
sbb
sbb
sbb
xor
xor
and
sub
insb
pop
js
bound
inc
jbe
imul
push
pop
jae
push
ja
insb
dec
addr16
jbe
outsl
pop
jne
mov
xchg
fnstcw
testl
out
nop
sarb
clc
test
cmpsl
mov
in
cmpsb
clc
test
test
mov
mov
scas
cli
xchg
movsb
repnz
aad
call
mov
fbstp
mov
shlb
mov
pusha
shrl
pop
call
adc
dec
cmc
add
sub
into
xor
outsl
jecxz
fwait
pop
in
or
mov
adc
lods
outsb
enter
fsubs
mov
shrb
mov
loopne
mov
add
cwtl
dec
repnz
xchg
add
dec
in
lahf
inc
in
adc
pop
lock
jnp
sub
push
imul
mov
bound
mov
pop
push
xlat
pushf
pop
inc
lret
popl
rorl
or
aam
sbb
lret
and
mov
adc
mov
sbb
decb
and
icebp
push
mov
inc
dec
ljmp
pop
cli
insl
jno
mov
ret
insl
fcomps
sbb
test
enter
or
mov
xor
ljmp
xchg
std
sub
cltd
rorl
jle
enter
cltd
outsl
push
out
dec
outsl
call
mov
jge
mov
jnp
rolb
or
cmpsb
les
lods
into
sbb
lock
cs
in
and
jecxz
cmp
xor
pushf
fcompl
sub
add
pop
cmpsb
icebp
cmp
stos
cmc
sub
mov
and
mov
xchg
imul
jg
decb
pop
dec
fdivs
inc
push
leave
cmpsb
dec
pop
lret
lods
inc
jmp
sti
dec
jecxz
jmp
push
jmp
xlat
jno
lock
insl
sar
iret
pusha
mov
mov
scas
mov
and
lea
add
xchg
cwtl
adc
add
pop
push
mov
popa
arpl
pop
and
dec
sub
inc
sbb
cmp
sbb
lret
add
sub
in
push
push
xor
adc
icebp
or
cld
or
pushf
shrb
pushf
jl
shlb
lret
mov
cld
inc
mov
mov
push
shr
popf
push
fsub
xchg
pop
incb
cmp
aad
aaa
icebp
fidivs
and
test
mov
sub
pusha
push
sbbb
data16
dec
insb
cwtl
add
jbe
or
insb
or
push
les
int3
jle
adc
dec
cmp
out
aaa
daa
repz
sub
std
push
and
mov
call
lcall
stc
addl
sarb
nop
cmp
mov
aam
xchg
inc
xchg
ret
inc
mov
in
jae
hlt
in
lods
clc
cmc
gs
sti
popa
mov
or
mov
adc
js
sbb
pop
cwtl
xor
pop
nop
cmp
cmp
cs
push
ljmp
push
repz
xor
inc
outsl
cmp
aad
jbe
fists
or
push
js
lods
adc
sbb
daa
mov
cmp
inc
pop
lahf
sub
pushf
and
insl
das
inc
call
ja
push
hlt
push
or
lret
jne
inc
adc
push
imul
rol
fistpll
ret
sub
fmulp
das
in
out
call
sbb
div
add
repz
pop
mov
lahf
scas
jb
cmpl
xchg
xchg
push
popf
stos
orl
or
or
or
push
adc
adc
adc
sub
sub
xor
cmp
sub
dec
insl
push
ja
ja
fs
jns
pusha
outsb
pop
jb
popa
push
ja
jns
imul
shlb
call
add
cli
mov
fidivrl
clc
or
cli
mov
fdivl
loope
int3
movsl
cli
mov
cmpsl
repnz
mov
mov
in
xchg
aam
jecxz
shll
ss
outsl
shlb
iret
pop
xchg
sbb
xchg
inc
std
push
lahf
dec
divb
sub
shll
outsl
cmp
push
loopne
xchg
push
loop
xchg
dec
clc
sbb
subl
enter
and
in
adcb
xchg
dec
notb
lahf
dec
sbb
add
sahf
inc
cmc
pop
lea
sbb
mov
jp
sub
push
js
cli
mov
imul
pop
pop
popf
inc
inc
into
mov
ret
xorl
or
mov
enter
in
adc
sub
and
lock
inc
dec
out
dec
dec
jmp
pop
pop
rorb
jae
lcall
test
fists
xor
mov
out
pop
sub
sub
xchg
jmp
dec
fimuls
jg
lret
lahf
insb
pop
leave
xchg
insl
out
inc
addr16
mov
jbe
mov
add
adc
int3
adc
cmp
and
call
sub
add
popf
lret
adc
mov
adc
cmp
adc
test
in
or
cwtl
gs
jge
decl
pop
dec
fnstcw
dec
pop
lret
mov
fdiv
inc
out
cli
dec
cli
jmp
push
int3
out
jg
loope
jo
repz
arpl
icebp
shll
stos
cmp
scas
mov
sub
orl
popf
xchg
lcall
add
imul
pop
mov
cmp
push
cmp
dec
sub
addl
xor
xlat
xor
jge
lds
jae
rcll
xor
out
add
dec
sub
shlb
popf
fsubrs
xchg
int
popf
pop
jae
xor
cmpsl
mov
in
mov
mov
add
in
xchg
push
fucom
mov
lock
into
icebp
mov
cld
fidivl
and
leave
movsb
sub
enter
jg
mov
jb
test
and
dec
popa
lea
inc
jbe
add
or
fildll
frstor
lret
jne
adc
jnp
sub
call
pop
es
cld
push
and
mov
sbb
test
das
shll
xchg
cmp
scas
xchg
xor
aad
pop
sahf
push
xchg
into
rorl
jecxz
mov
loop
addr16
add
add
insb
mov
pop
adc
pop
xchg
xor
push
xchg
cmp
dec
mov
xor
and
out
jne
pop
out
push
adc
bound
repnz
lds
sub
pop
jp
ficoml
or
mov
adc
mov
aas
push
or
sub
lcall
inc
out
sub
push
stc
jbe
pop
lret
jge
pop
add
dec
adc
dec
sbb
aam
sarl
rol
fisubs
ret
ror
push
in
loop
sbb
ljmp
stc
repz
jle
cltd
mov
insb
lods
xchg
mov
cltd
dec
pushf
scas
addl
or
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
push
add
mov
stc
fsubr
push
or
dec
xchg
cwtl
push
mov
add
subl
inc
sbb
inc
fninit
cltd
mov
lods
dec
or
mov
lds
js
push
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
cmpsl
mov
pop
push
pop
add
or
pop
or
add
pop
add
mov
pop
add
or
pop
or
add
or
add
or
pop
or
add
pop
add
push
pop
adc
or
pop
add
pop
insb
mov
push
adc
pop
or
add
pop
add
pop
push
pop
mov
or
aaa
mov
pop
push
pop
add
pop
push
pop
add
and
pop
or
add
pop
push
pop
add
pop
push
pop
add
or
pop
or
add
popa
mov
pop
js
add
sahf
mov
add
int
pop
add
mov
pop
in
mov
or
mov
pop
push
pop
mov
pop
and
pop
or
add
pop
mov
add
pop
js
or
lea
pop
push
mov
add
mov
mov
add
jmp
pop
add
mov
pop
add
or
sbb
mov
add
push
pop
add
push
mov
add
jg
pop
add
or
movsl
mov
pop
push
ret
mov
pop
shlb
or
mov
or
mov
pop
sbb
or
pop
add
pop
insl
bound
insl
fs
and
push
pop
add
push
jo
dec
jp
jge
gs
arpl
push
inc
insl
data16
inc
jbe
jae
arpl
arpl
addr16
or
add
jne
jo
jb
addr16
bound
insb
imul
pop
add
outsl
jae
addr16
jge
dec
ja
jl
data16
push
bound
insl
imul
jbe
jb
imul
pop
add
pop
popa
jne
jle
push
popa
add
push
pop
dec
imul
popa
or
push
dec
insl
popa
pushw
push
or
add
bound
outsb
imul
insb
jg
jno
jne
imul
bound
pop
or
add
outsl
jo
bound
imul
jae
jae
jo
jae
dec
push
or
push
dec
push
addr16
pop
or
add
push
arpl
insw
inc
or
add
dec
imul
jne
push
or
inc
jno
jno
jp
bound
pop
push
pop
push
je
jl
dec
bound
or
push
push
insb
push
push
dec
jg
outsb
jne
popa
push
jae
jne
push
or
push
jge
push
push
outsb
push
push
insw
jne
dec
jg
outsb
jne
popa
push
pop
inc
bound
jl
dec
push
pop
push
jb
addr16
xor
pop
or
add
bound
push
jno
bound
or
gs
imul
push
sub
outsb
add
push
pop
push
arpl
jb
jns
push
imul
push
pop
add
pop
insl
pusha
inc
jnp
push
bound
jp
pop
push
pop
push
arpl
imul
dec
insl
jle
push
jae
xor
insb
imul
add
push
jg
inc
jo
arpl
popa
pushaw
or
jbe
bound
xor
push
add
or
push
gs
popa
jl
imul
push
pop
push
push
dec
bound
fs
add
gs
fs
or
jae
insl
arpl
popa
dec
imul
or
insb
imul
sub
fs
or
add
data16
push
imul
pop
or
push
push
addr16
imul
push
or
inc
gs
imul
push
dec
fs
fs
pop
add
pop
inc
imul
fs
jnp
pusha
add
pop
push
inc
outsb
insl
imul
or
add
dec
imul
jne
push
jg
imul
pop
add
imul
jl
outsb
outsb
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
inc
or
lds
jbe
add
xlat
inc
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
push
push
pop
add
sub
sub
cmp
cmp
inc
aaa
inc
aaa
dec
ss
cmp
insl
xor
jns
test
mov
xchg
ss
cmp
cmp
aaa
shlb
fidivl
add
adc
cmp
ss
ss
aaa
cmp
xlat
xor
cmp
xor
dec
xor
cmp
cmp
xor
xorb
aaa
xor
test
mov
ds
xor
aas
add
or
adc
ds
xor
push
cmp
jg
cmpb
aas
lcall
cmp
fdivrs
out
stc
aas
add
sbb
sbb
xor
dec
cmp
pop
ds
aas
jae
xorl
fnstcw
icebp
cmp
cmp
les
ljmp
ds
cmp
cmp
xor
mov
cmp
cmp
mov
cmp
xor
bound
outsl
cmp
aaa
clc
cmp
add
cmp
cmp
ret
aaa
fistpll
fdivrs
stc
cmp
or
sub
add
add
es
sub
ss
cmp
jg
mov
lahf
cmpsl
xor
ss
cmp
cmp
xor
cmp
inc
xor
lcall
cmp
xor
cmp
push
xor
popa
xor
iret
cmp
aaa
out
out
xor
xor
xor
add
ss
cmp
xor
imul
xor
xchg
cmp
cmp
adc
and
cmp
dec
xor
cmp
inc
aas
xchg
xchg
xor
fbstp
cli
aas
add
dec
cmp
inc
cmp
cmp
mov
mov
xor
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmpl
stc
xor
cmp
imul
cmp
cmp
aaa
sbb
cmp
bound
insl
cmp
jbe
jg
test
mov
mov
xchg
cmp
in
push
pop
add
or
fisttpl
or
xor
aas
aaa
inc
aaa
dec
ss
cmp
xor
movsl
xor
aaa
shlb
ss
push
cmp
imul
aaa
movsl
xor
xor
xor
xor
cmp
mov
aas
fnstsw
and
jb
pushf
cmp
xor
sarl
loop
sti
xor
xor
cmp
xor
cmp
cmp
cmp
xor
inc
xor
pop
xor
cmp
lret
xor
aas
xor
cmp
push
cmp
cmp
test
xchg
xor
cmp
cmp
cmp
stc
ds
xor
pop
sub
xor
cmp
dec
xor
gs
ds
fidivrl
ljmp
cmp
xor
insb
cmp
cmp
imul
dec
or
mov
out
aaa
ret
fidivs
daa
cmp
inc
aaa
pop
cmp
xchg
mov
pushf
cmp
cmp
xor
mov
mov
cmp
xor
xor
xor
or
ss
adc
es
xor
cmp
xor
dec
xor
jle
js
mov
cmpl
mov
xchg
xor
lcall
cmp
xor
divb
xor
or
add
xor
adc
adc
sbb
adc
daa
cmp
sub
cmp
xor
inc
xor
arpl
js
cwtl
xor
xor
ds
cmp
xchg
xchg
aas
xchg
xor
xor
aas
fdivrs
jmp
cmp
xor
cmp
inc
xor
pop
cmp
insl
cmp
popf
xor
push
add
xchg
push
pop
add
xor
cmp
mov
lods
xor
xor
xor
xor
xor
mov
aas
ret
xor
sub
insb
xor
xor
cmp
cmp
cmp
sarl
in
or
int
loopne
stc
cmp
cmp
ss
ss
cmp
jae
cmpl
mov
mov
lret
cmp
cmp
cmp
cmp
ss
cmp
data16
jg
mov
xchg
ss
cmp
pop
popw
add
xor
cmp
cmp
aaa
cmp
pop
xor
fwait
xor
xor
or
adc
xor
ss
loop
repnz
cmp
sub
cmp
cmp
inc
xor
cmp
xor
xor
pop
xor
pusha
xor
imul
jo
jg
jnp
xorb
xor
lahf
xor
stos
xor
cmp
in
cmp
add
or
ds
aas
pop
xor
jae
pop
add
ja
pop
adc
or
sub
cmp
pop
xchg
add
or
add
push
cmp
or
aad
or
push
pop
add
aaa
add
or
add
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
pop
add
pop
push
pop
add
or
pop
or
add
push
add
pop
push
pop
sbb
or
add
pop
push
add
add
add
or
mov
add
roll
sbbb
xchg
push
or
add
pop
push
pop
add
pop
add
add
or
push
or
add
pop
add
pop
push
pop
add
or
add
or
pop
add
pop
sahf
pop
add
or
pop
or
add
pop
add
pop
pop
pop
add
or
scas
or
add
daa
fadds
pop
loop
add
or
pop
or
into
pop
or
push
pop
add
add
pop
add
or
sbb
or
jecxz
add
push
pop
add
push
or
dec
add
xor
xor
add
inc
push
pop
or
add
or
push
pop
inc
pop
inc
push
inc
or
dec
add
dec
add
pop
mov
stc
xor
jae
ja
dec
sahf
cmp
hlt
gs
push
sbb
out
mov
imul
push
xlat
cmp
dec
xor
das
icebp
mov
ja
jns
fwait
test
loopne
sbb
icebp
mov
sbb
dec
pushf
test
scas
mov
push
or
pop
add
scas
dec
pop
jne
into
ret
pop
mov
push
mov
lcall
dec
cmpsl
imul
lods
adc
adc
cmc
mov
jbe
cmp
bound
dec
xchg
add
mov
sbb
jmp
mov
mov
inc
arpl
and
mov
jns
gs
mov
aaa
in
repz
and
pusha
inc
loope
cmp
and
in
pop
mov
aad
dec
ss
iret
push
jb
jl
mov
push
inc
test
scas
cmp
adc
hlt
notb
stc
decl
pop
push
push
mov
lock
lcall
pushf
movsb
xchg
cmp
jp
mov
add
dec
sbb
mov
leave
fsubrs
dec
notl
aad
push
cmp
addl
or
mov
int
cmp
lods
jo
sbb
lods
pop
lret
xor
jl
in
mov
cs
imul
cltd
aad
test
stos
mov
js
out
cmp
push
mov
mov
xorb
cld
mov
cmp
adc
pop
daa
or
sbb
push
pop
cmp
or
sbb
push
bound
fsubl
xchg
xor
mov
dec
fldcw
push
xchg
push
cmp
fdivs
pop
cs
fld
sbb
mov
sbb
lods
mov
cltd
push
shlb
lock
xlat
lods
dec
cmp
imul
xchg
enter
cld
or
sbb
stos
lcall
sub
dec
insl
imul
cmpsb
cmpl
lds
jp
or
jae
lret
data16
mov
call
lods
mov
xchg
add
call
jnp
and
loop
ljmp
mov
fnstenv
xor
push
mov
hlt
ljmp
repz
xor
inc
or
mov
pop
and
adcb
sbb
fs
xchg
adc
xor
cmpl
mov
mov
ljmp
faddl
xchg
push
mov
adc
and
sub
mov
sbb
mov
sub
xchg
je
in
push
xchg
xchg
xchg
sti
xchg
pushf
add
jmp
lahf
fcoms
sbb
mov
shl
aaa
dec
add
mov
test
and
insl
mov
adc
jo
push
mov
cmp
mov
jns
lds
fucomi
ret
lds
sbb
jl
adc
sub
jl
jbe
test
inc
lods
cmp
popa
stos
popa
shr
push
inc
xchg
in
in
push
in
sti
pusha
jnp
cmc
push
xchg
insl
addl
jmp
fsubrl
cmpsl
mov
cmp
pop
icebp
xor
pop
sbb
jnp
fs
mov
or
lds
rclb
xchg
shlb
push
ss
ljmp
imul
cmpsl
insb
mov
cmp
loope
mov
inc
pop
ds
xchg
jp
pop
xlat
sub
or
pop
cs
gs
rclb
push
pop
daa
inc
andl
int
adc
cmp
dec
adc
aas
jns
cmp
dec
cwtl
in
jl
ret
mov
xchg
push
jecxz
jle
or
pop
in
les
xor
cs
push
outsb
sub
data16
mov
xlat
and
std
popf
pop
lods
cs
pop
pop
xor
xor
xor
xor
ds
movsb
sub
filds
sbb
pop
bound
mov
or
fmuls
mov
fimull
ss
loop
push
jmp
pop
movsl
xchg
sbb
push
mov
xchg
xlat
jns
add
push
jns
adc
lea
cmc
xor
mov
cmp
cmp
lea
stos
jge
inc
sbb
enter
push
cmpsl
adc
cwtl
and
xchg
movsb
fadd
push
sbb
cmp
nop
test
hlt
shrl
cmp
mov
xchg
nop
add
push
and
push
lahf
push
sub
mov
sbb
test
xchg
adc
sbb
divl
adc
adc
mov
or
nop
adc
sbb
mov
scas
cmc
scas
movsl
rcrb
xor
mov
out
add
push
idivb
js
fisttps
insl
dec
aad
nop
test
addr16
jmp
ds
push
ds
or
fs
inc
adc
or
jo
test
xor
test
sbb
push
pop
jg
cmp
or
push
add
mov
xchg
sbb
adc
mov
mov
cmp
cmp
xchg
pop
fisubrs
out
ds
or
and
gs
mov
xor
test
adc
mov
lds
stc
and
in
adc
push
cwtl
cmp
mov
or
add
cmp
repz
cmp
xchg
std
inc
sbb
fistpl
movsb
inc
sbb
mov
inc
jno
enterw
and
lock
add
sub
add
add
jns
fs
pop
xor
in
add
dec
add
leave
enter
imul
cwtl
ljmp
fcompl
adc
pop
mov
imulb
or
mov
and
push
outsl
lds
push
xor
xor
scas
dec
add
jbe
aad
movsl
movsb
or
cmp
fildl
adcb
cmpsb
inc
into
faddl
mov
dec
sub
lret
push
fwait
jae
push
pop
sub
xor
push
sbb
cmp
xor
jg
dec
cli
add
jmp
imul
std
push
cmp
cwtl
inc
mov
aas
cwtl
pop
cmpsl
or
pop
mov
mov
jae
cli
adc
adc
das
add
les
lds
cltd
addr16
xchg
sar
sub
popa
dec
mov
adc
and
xchg
fistpl
icebp
bound
xor
test
les
lods
xchg
dec
jle
ljmp
sub
push
enter
outsb
xchg
shrb
jle
jb
icebp
and
sar
out
into
in
dec
cltd
add
or
int3
xor
add
insb
test
call
dec
cmpsb
xor
test
mov
xchg
ret
roll
pop
call
xor
out
pop
mov
pop
roll
pop
push
jecxz
imul
mov
sbb
dec
sbb
pop
es
call
sar
pop
xchg
xlat
test
jge
lret
divb
pop
shlb
stc
shll
rcrl
incl
xor
movsl
cmp
mov
inc
push
jns
push
test
fcomip
and
push
xor
xchg
ss
outsl
xchg
push
mov
mov
cmp
clc
pop
out
lahf
sbb
push
shrb
rolb
dec
cmp
test
adc
int
js
cmp
mov
and
shlb
mov
jge
cli
mov
pop
add
jae
pop
sarb
lret
out
push
shr
daa
or
sub
inc
pop
cmp
sbb
xchg
pop
lret
inc
lahf
jo
mov
jb
sbb
nop
int3
int
fnstenv
mov
and
push
push
xchg
inc
pop
bound
cmp
mov
div
fidivl
jmp
lods
xchg
inc
aam
xchg
sub
xchg
sbb
and
pop
nop
jno
mov
scas
lahf
repz
mov
sub
insb
xchg
mov
fwait
xchg
or
cmp
adc
les
sbb
add
dec
jnp
hlt
arpl
shlb
pop
adc
lock
and
sub
int
inc
mov
aam
cmp
jns
xlat
int3
xchg
lahf
lcall
sub
dec
and
movsb
adc
popf
test
bound
inc
sbb
cmp
mov
outsl
pop
sub
test
fidivl
cmp
lods
pop
jp
fmul
sub
pusha
dec
les
stc
stc
add
xor
andb
adc
mov
jmp
dec
jmp
and
lods
test
es
adcb
insb
inc
fisttpll
push
daa
fmulp
inc
aam
test
adc
outsb
lret
dec
push
xchg
lods
icebp
or
mov
enter
ret
xor
sbb
call
stc
fstl
pop
ljmp
inc
inc
rep
fidivrl
sbb
insb
mov
cli
int
or
mov
fidivl
inc
scas
into
test
bound
inc
aam
push
pusha
repz
pop
in
stos
lahf
test
lret
pop
outsl
dec
out
push
xchg
cmc
inc
movsb
stos
lods
ss
scas
fsubr
and
movsl
adc
cmp
aaa
mov
xchg
jne
popa
imul
mov
sub
lods
jo
jo
sbb
imul
cld
xchg
loopne
push
cs
push
xor
repnz
push
inc
popa
pop
push
xchg
sbb
popa
pusha
call
adc
pop
adc
mov
shll
cmp
xchg
mov
sbb
mov
add
cmp
xlat
test
aad
mov
pop
cwtl
sti
imul
push
scas
mov
pop
cmp
mov
push
movsl
or
pop
dec
repz
mov
outsb
inc
mov
adc
test
adc
repz
movsb
push
mov
mov
movsl
shll
push
stos
push
cld
and
daa
incl
or
gs
nop
adcl
push
repz
push
xchg
mov
mov
or
mov
stc
outsb
out
xchg
pop
push
sarl
jne
or
sub
mov
pop
lcall
mov
stos
das
adc
test
sbb
imul
mov
subb
and
xor
repnz
inc
cld
and
dec
std
push
jecxz
mov
jp
lret
xor
sbb
xchg
adcb
push
or
xor
push
cmp
addb
adc
mov
or
push
xchg
add
out
mov
pop
mov
add
xor
mov
inc
adc
popa
mov
jmp
xchg
ror
daa
xor
cmp
jo
xchg
inc
idiv
mov
push
dec
jne
gs
addr16
stc
mov
fstpl
and
push
movsl
in
pop
lock
jo
adc
cmp
aam
and
jg
sahf
in
and
and
imul
testb
add
decl
cmp
and
push
in
ret
dec
push
in
in
xchg
pop
pop
adc
movsl
mov
scas
xadd
adc
les
ja
pop
xor
repz
fs
js
mov
xor
rorb
sbb
mov
and
push
push
jns
mov
imul
out
push
dec
adcb
cwtl
sub
xchg
pop
push
sub
push
call
sbb
jmp
mov
jnp
loope
iret
and
mov
jge
inc
sti
stos
mov
mov
adc
mov
dec
mov
aas
xchg
jge
adc
lea
in
rclb
ss
jae
jg
subl
or
fsubs
shlb
inc
push
scas
stos
fsubp
neg
sub
or
xlat
mov
xchg
dec
test
fwait
adc
mov
mov
mov
arpl
pop
sub
ret
fisubl
mov
and
fisubrs
stc
sub
gs
cmc
cmc
mov
or
js
addl
adc
cmp
test
js
fnsave
dec
into
test
push
testb
in
push
jo
test
inc
add
pop
or
leave
dec
adc
inc
xor
ja
in
sub
clc
ja
outsl
aas
pop
inc
mov
lahf
std
mov
cs
pop
cmpsl
daa
mov
and
mov
add
mov
cwtl
inc
cmpsb
daa
imul
adc
pop
in
push
mov
scas
daa
addr16
cmpl
fcompl
jo
xchg
inc
inc
add
enter
in
cmp
cli
mov
mov
sbb
inc
jl
fidivs
popf
inc
cmp
or
pop
mov
std
enter
fisubrs
out
leave
push
xchg
jno
jg
cli
aam
roll
mov
jnp
and
aaa
adc
in
incb
jne
das
in
push
push
scas
std
sbb
jne
jne
or
push
jle
or
sti
xchg
mov
push
loope
loopw
sbb
inc
adc
cli
into
lods
sub
xor
movsb
leave
in
int3
popa
jo
push
mov
cwtl
sub
test
or
jbe
xchg
ret
loop
inc
mov
ror
or
pop
push
fwait
cmp
lods
adc
mov
dec
adc
sbb
mov
cld
push
into
mov
sub
mov
mulb
scas
mov
loope
fisttps
iret
stc
aas
push
mulb
rolb
lret
scas
cmc
mov
jmp
pop
shlb
pushf
call
cltd
mov
in
ja
mov
cmp
jb
push
loop
mov
pop
sbb
cmp
jne
ret
mov
outsl
fisttpl
into
ret
cmp
xchg
lcall
ret
aaa
and
dec
iret
mov
cld
mov
insl
sbb
push
outsb
ficoml
stos
cld
mov
movsb
sbb
decl
test
pop
sysret
inc
hlt
inc
and
popf
mov
pop
or
push
arpl
push
xchg
inc
pop
mov
push
lcall
cs
ja
xor
mov
jmp
test
pop
xchg
jmp
or
dec
mov
repz
hlt
test
cmpsl
sti
mov
stc
lret
daa
je
xchg
jmp
ret
dec
push
das
and
xor
push
sub
add
mov
mov
inc
add
int
xchg
dec
int
movsb
mov
out
dec
fdivl
sbb
mov
shr
mov
sbbb
mov
jns
cli
xchg
adc
scas
push
pop
push
mov
or
in
mov
test
xchg
rcrb
sub
shll
cli
cmpsb
dec
js
imul
outsl
sub
fs
jmp
xor
mov
xchg
pop
sub
inc
scas
adc
sahf
ficoms
ss
push
xor
test
jns
cmp
int
sub
iret
test
mov
sbb
sub
fs
and
push
jnp
cmp
out
popf
out
int
jbe
mov
ret
fimull
pop
std
movsb
inc
dec
mov
cmp
cltd
js
adc
ficoms
mov
push
ljmp
mov
iret
push
lods
dec
outsb
jecxz
into
add
xchg
mov
mov
push
mov
inc
mov
pop
popf
or
mov
push
fists
es
test
fimuls
fwait
cs
dec
push
popa
mov
and
leave
lret
je
dec
cmp
push
scas
enter
lods
pop
pop
int
aam
push
bound
push
xor
fwait
test
sub
roll
adc
xchg
xor
jmp
jne
xlat
mov
inc
xor
ret
in
stos
test
mov
pop
lahf
fcoml
add
inc
inc
rolb
fwait
mov
fildl
mov
add
jp
jb
xor
aaa
mov
outsl
pop
aad
mov
mov
sub
pusha
mov
cmpsb
sahf
inc
jae
mov
xchg
aas
cltd
jo
shl
adc
sub
pop
lcall
dec
inc
inc
add
cwtl
jbe
sub
push
add
rorb
dec
mov
jo
repnz
fimuls
add
sbb
movsl
push
and
subb
daa
sbb
push
fsubrs
daa
hlt
sbb
inc
incb
and
xchg
sbb
add
add
fwait
or
xchg
jnp
or
mov
arpl
lcall
shlb
jo
xor
sti
stos
inc
int3
repnz
pop
xchg
cli
ds
lret
enter
mov
jo
adc
xchg
lea
inc
jne
push
mov
and
sbb
and
ficoml
mov
pop
sub
push
dec
pop
rclb
inc
push
pop
mov
repnz
inc
fucom
or
xor
add
pop
mov
inc
es
mov
adc
es
sbb
xor
or
fstpl
adc
push
jge
or
push
cmp
inc
and
xchg
insl
pop
push
in
sbb
das
xor
inc
mov
js
inc
pop
mov
imul
mov
mov
pop
push
orl
sub
xorb
ds
test
stos
add
dec
in
gs
stos
mov
sub
outsl
icebp
mov
cmp
aaa
or
in
add
test
sahf
dec
jl
cs
les
mov
and
movsbl
and
lea
add
shr
cltd
fwait
dec
call
xchg
xlat
or
adc
push
mov
inc
roll
inc
pop
test
xor
lret
mov
jge
lahf
roll
into
out
inc
jb
jmp
stc
popa
hlt
fdivp
and
cmp
xor
xchg
mov
jo
xchg
add
or
mov
stos
jae
push
sub
or
pop
xchg
cltd
popf
fdivrl
inc
and
cmp
xchg
mov
shrb
jecxz
sti
or
push
add
test
inc
imull
add
stos
cld
insb
test
xchg
enter
fs
adc
aas
fidivs
mov
lock
sub
inc
js
xchg
xchg
jmp
inc
lock
aas
sbb
cld
into
icebp
sbb
pop
data16
arpl
xlat
xchg
addb
stos
sbb
repz
test
adc
pop
int3
jnp
mov
clc
test
sbb
sahf
out
aas
xchg
sub
push
cli
push
push
jp
inc
lds
mov
mov
fisttps
jmp
mov
jbe
mov
lcall
push
cli
inc
jge
adc
pop
sbb
push
xchg
adc
cmp
movsl
cmp
dec
or
nop
cli
inc
push
mov
dec
pop
push
xchg
xchg
call
in
sub
pop
pusha
xchg
repnz
inc
mov
in
adc
out
mov
cmpsl
stc
leavew
icebp
sahf
xor
movsb
cld
dec
shl
xor
cli
push
cs
mov
fwait
xor
pop
xor
mov
clc
fsubrl
shlb
cmp
sub
lods
push
jb
pop
test
in
dec
aaa
dec
test
mov
js
or
mov
sarb
pop
and
jge
in
inc
outsb
arpl
loop
mov
cmpsb
add
pushl
mov
sahf
dec
test
sbbb
mov
outsb
push
outsl
mov
scas
and
jb
inc
jmp
mov
push
pop
sti
ror
jb
xorl
iret
lods
or
lret
mov
ds
lret
rcrl
mov
arpl
and
mov
and
mov
popf
stos
int3
iret
cmp
inc
add
xor
dec
push
sub
add
cmp
fiaddl
loopne
insb
push
fcmovnu
imul
mov
sub
fldenv
cltd
movsl
cmp
lods
adc
sarb
cmc
dec
dec
icebp
inc
pop
idivl
out
mov
inc
sbb
stos
mov
scas
clc
pop
lret
test
sbb
inc
lcall
add
icebp
in
aad
or
fisttpll
test
push
mov
lcall
rorl
das
mov
shr
or
rcrb
fwait
call
sub
cmpsl
hlt
adc
outsl
flds
pop
daa
ja
cmp
loopne
fildll
je
add
adc
push
lahf
insl
addr16
je
mov
push
ja
jnp
or
das
ss
adc
mov
out
push
xor
repnz
sub
cmp
mov
adc
cmp
and
cmp
lods
adcl
gs
lahf
sub
push
inc
scas
testb
jns
sub
aas
mov
dec
xchg
cs
adc
mov
call
push
xchg
cmc
mov
mov
mov
adc
imul
push
sub
mov
lret
ljmp
xor
push
rorb
mov
jecxz
adc
or
test
mov
xor
cmp
or
pop
lahf
inc
loope
rolb
lea
inc
adc
lcall
or
addr16
shrb
mov
dec
jmp
add
xor
and
mov
mov
and
js
sbb
xor
xchg
out
iret
push
jb
les
shrb
pop
outsl
cs
or
andb
inc
xchg
ret
sub
jmp
xor
or
ror
loope
shrl
std
dec
pop
mov
cmc
mov
outsl
mov
out
testb
repnz
popa
cld
loopne
sbb
or
movb
fwait
and
inc
pop
dec
mov
and
jo
fcoml
jp
pushf
cmp
mov
out
mov
je
lea
shr
fwait
cmp
push
sahf
and
cli
orb
mov
ss
push
push
adc
xchg
es
out
mov
jae
pusha
nop
sbb
ficoml
hlt
or
decb
subl
mov
xlat
inc
int3
cld
xchg
push
inc
popa
and
addl
push
adc
mov
or
push
jge
adc
rolb
lcall
mov
dec
ret
and
inc
dec
cmp
or
es
adc
imul
insb
jg
inc
std
jae
xorb
test
mov
inc
loop
cltd
cmp
jmp
push
dec
cmp
ss
sub
dec
pop
lret
adc
pop
cmc
daa
push
out
cs
pop
aam
or
sbb
hlt
inc
ficoml
fisttpll
cmp
arpl
inc
mov
int
push
scas
mov
andb
add
int3
cs
roll
and
cmpsb
dec
repz
sub
push
and
dec
mov
mov
imul
pop
cltd
pusha
outsl
nop
push
mov
or
mov
ja
sub
int3
jns
in
fsin
nop
sub
xchg
out
popa
dec
iret
cmp
mov
push
xor
cmp
loopne
push
or
lcall
stos
and
sbb
push
push
push
push
cmpsl
into
or
test
jge
sub
leave
jge
jno
sub
jae
mov
ret
and
ret
sub
iret
enter
and
cs
dec
and
fildll
lods
sub
xchg
dec
adc
andb
xorb
iret
out
imul
hlt
inc
jno
mov
data16
jp
xchg
mov
mov
mov
loopne
mov
out
in
in
jmp
xor
jno
xlat
dec
sbb
in
ret
dec
cmp
into
xchg
imul
je
stos
pop
cmp
lock
dec
dec
nop
jbe
test
dec
bound
orl
xchg
hlt
mov
icebp
xchg
mov
std
dec
inc
cmpsl
hlt
dec
jae
test
andb
test
push
mov
pop
adc
lock
into
daa
js
xchg
push
push
inc
xlat
xchg
into
popa
or
xor
mov
sti
lods
mov
popa
sub
pop
addr16
or
mov
lahf
inc
leave
sub
inc
mov
cmp
sub
decl
pop
push
addr16
xchg
mov
mov
inc
sub
jle
add
cs
insb
cmp
sbb
cmc
cmp
dec
inc
test
mov
push
xor
hlt
ret
into
jo
jbe
push
xchg
mov
insb
push
pop
aas
fldt
ficoms
pop
xor
add
dec
popl
lret
arpl
xchg
xchg
pop
jg
inc
inc
inc
addb
or
test
xchg
sbb
inc
and
daa
xchg
cli
and
inc
mov
jg
lds
xor
sub
adc
cs
mov
sbb
mov
inc
cld
cmpsb
ret
push
movb
pop
pop
mov
push
jne
data16
test
sbb
mov
inc
adc
push
dec
dec
clc
pop
loopne
or
dec
or
mov
or
aas
jg
sub
sbb
mov
mov
xchg
xchg
or
iret
adc
xchg
mov
jmp
imul
mov
sti
iret
mov
les
mov
cmp
xchg
jno
lret
push
cwtl
rorl
xchg
rorb
lods
inc
mov
stos
sbb
aas
insb
sub
mov
dec
ja
mov
or
in
fstpt
jbe
mov
sbb
sbb
and
xor
sahf
sahf
dec
das
leave
xor
icebp
into
jo
add
cmp
mov
mov
in
movsb
pop
outsb
shr
incb
pop
mov
loopne
fistl
ficoms
push
inc
push
out
andl
shrb
xchg
push
jl
pushf
in
jge
orb
insb
mov
jl
shrl
cmp
ja
daa
jmp
int
xchg
repnz
subl
inc
and
push
fistpll
daa
pop
jno
push
lds
xchg
in
pop
call
pop
mov
movl
outsw
inc
inc
sbb
inc
shll
jg
cld
dec
cmpsl
cld
jb
push
mov
mov
push
or
mov
enter
pop
pop
mov
dec
fisttpl
push
popf
shrb
les
arpl
pop
sbb
mov
imul
sbb
jge
pushf
test
les
cmp
insb
pop
cltd
mov
cs
jg
or
pop
cmp
int3
addr16
inc
dec
mov
add
inc
push
push
sti
loop
sbb
push
jmp
push
add
xchg
xchg
scas
push
xlat
sbb
imul
cmpsl
jbe
mov
aam
push
loop
movsl
xor
add
rep
jo
cmp
jno
add
push
push
in
loopne
pop
mov
jge
loop
das
sub
or
popf
sub
and
dec
jo
pop
inc
dec
fsubs
or
mov
loope
dec
push
stos
sahf
adc
sbb
test
push
and
cmp
jle
jecxz
xchg
dec
pop
and
loope
call
nop
add
push
int
inc
jle
mov
cmc
add
mov
fiaddl
and
lock
mov
jmp
mov
sub
mov
repnz
mov
sbb
xchg
mov
push
stos
xchg
cltd
out
arpl
shlb
popf
shl
xor
mov
xchg
aad
add
in
bound
rcrb
jno
or
xor
loope
ja
xchg
xor
adc
test
jne
mov
pop
mov
mov
dec
in
popf
mov
adcl
add
sti
xlat
icebp
data16
mov
negb
int3
cltd
mov
mov
mov
subb
jle
ret
xlat
sbb
in
dec
pop
xchg
push
jmp
loop
jno
rcr
fadd
push
iret
pop
inc
outsb
push
cwtl
adc
inc
adcb
add
jne
movsb
bound
pop
mov
adc
or
cwtl
sbb
cmp
push
xor
mov
mov
por
and
jno
mov
sti
hlt
cmp
jle
jns
pop
daa
jo
jmp
push
xor
cwtl
dec
or
lret
mov
push
jae
sbbl
fdivrl
lods
adc
insb
imul
daa
jae
sarl
mov
pop
inc
in
sti
cli
stos
add
pop
div
mov
xor
xchg
adc
xchg
or
shrb
iret
popf
fidivs
mov
push
cmp
xchg
inc
hlt
jno
lret
stos
xchg
stc
mov
js
jno
sub
hlt
fildll
cmp
lock
sbb
pop
dec
gs
ljmp
push
and
xchg
xor
data16
sbb
and
pop
jno
mov
lock
movsb
push
cltd
xchg
sub
adc
ljmp
xchg
inc
jl
test
in
push
dec
fisttpll
lcall
mov
push
in
arpl
xchg
adc
or
fiaddl
inc
inc
add
xor
pushl
sahf
cmp
dec
hlt
jecxz
out
push
sbb
add
test
movsb
repz
mov
mov
mov
ret
or
mov
inc
jl
push
xchg
mov
ret
enter
inc
adcb
cmc
and
insb
dec
test
fcompl
pinsrw
push
inc
aas
ret
add
mov
std
mov
fcmove
int
push
outsb
sbb
or
lahf
test
ss
out
adc
sbb
cmp
cmc
inc
or
test
or
xchg
out
push
xchg
or
pop
sbb
and
inc
dec
mov
lods
add
jp
ret
cmpsb
jle
ret
xor
jnp
cs
or
pop
ljmp
sbb
into
push
ljmp
dec
pushf
inc
pop
gs
mov
sbb
xchg
sub
aam
or
inc
aad
mov
je
and
fsub
mov
pop
add
fstl
fcmovnbe
stc
fs
pop
mov
push
mov
jecxz
or
lds
push
mov
or
icebp
stos
lds
mov
add
imul
and
je
jb
jo
iret
sub
ficoml
outsb
popa
lahf
jne
cmp
out
xor
ss
mov
lods
fstl
mov
lahf
sbb
in
xor
jne
inc
stos
push
mov
xchg
xor
sbb
jp
test
adc
push
bound
adc
loopne
jno
dec
add
mov
filds
call
popf
test
push
cmp
sarl
hlt
and
cmp
cmp
insl
ss
shlb
lds
das
nop
aas
movsb
dec
xorb
mov
sub
pusha
lods
cmpsl
lds
mov
mov
jge
xchg
or
loop
pop
jge
ret
xlat
icebp
adc
mov
sarl
lret
lds
dec
add
adc
repnz
lcall
test
mov
sub
repz
popl
push
mov
or
dec
mov
test
sbb
mov
inc
inc
push
mov
rcl
fidivrs
lods
ja
lret
in
lret
add
loopne
cmp
cltd
shrl
int
add
xchg
fiadds
xchg
je
out
lods
xor
rcrb
lahf
mov
jb
mov
mov
test
sarl
pop
dec
cmc
cmp
mov
jp
ret
fists
xor
sub
movb
cmp
in
rol
adc
les
xchg
cmp
mov
stos
call
xchg
stos
push
cld
jmp
pop
outsl
inc
loop
and
mov
add
mov
rorb
sbb
mov
popa
pop
or
mov
sbb
popa
xlat
xchg
mov
add
movsl
cmp
jno
gs
mov
outsl
imul
mov
repnz
mov
dec
out
add
leave
aas
repz
mov
cmpsl
dec
ret
sub
outsl
fsubrl
loop
ret
cmp
adc
jae
xor
mov
push
cmc
push
fcomip
push
add
scas
shl
fcmovb
mov
or
push
mov
dec
ret
mov
out
ret
popf
xlat
stc
cmp
xchg
mov
xchg
int
adc
push
xor
mov
or
inc
pop
push
aaa
aam
sbb
sbb
add
loope
mov
add
push
pop
and
or
loope
jp
es
cmpsl
cmc
xchg
in
test
and
sarb
imull
add
ficoml
push
cs
iret
repnz
mov
fdivs
add
xor
mov
cmpsb
cmc
bnd
push
shlb
push
mov
pop
jno
sbb
sub
sbb
movsl
and
inc
in
inc
cmp
adc
icebp
cli
cld
loope
jecxz
fildll
jp
fwait
and
outsb
pushf
shl
std
add
dec
or
clc
push
xor
mov
sbb
fadd
cwtl
mov
cmpb
xchg
shll
sbb
jp
pop
scas
xchg
sub
fs
ja
cwtl
push
xor
aam
into
adc
cmp
filds
out
fsubr
jne
or
ret
adc
dec
xchg
ss
or
das
mov
fs
hlt
fmull
push
in
xchg
movsl
popa
jne
std
mov
int
mov
inc
out
mov
int3
jns
stos
mov
lcall
int
and
adcl
scas
lock
lret
iret
dec
inc
daa
aad
pop
clc
adc
add
xlat
dec
add
inc
scas
hlt
xor
add
pop
and
or
mov
mov
add
clc
xor
xor
clc
pop
dec
es
xchg
popf
mov
xchg
fildl
push
fucom
push
test
xchg
cmp
ficoms
aas
movsb
mov
icebp
data16
testb
push
fsubrs
cmp
in
add
mov
push
dec
mov
inc
ret
xchg
push
fwait
pushf
xchg
cmpl
jne
cmc
in
sarb
push
add
sub
push
sarb
cmp
xchg
sti
jns
xor
sti
in
test
xchg
jmp
rcll
xor
add
xlat
pop
inc
ja
gs
ret
jmp
jmp
fisubrl
mov
mov
mov
mov
sub
or
jmp
imul
mov
mov
mov
mov
dec
and
movsl
hlt
inc
adc
shl
jmp
mov
and
lods
lahf
sbbb
cs
mov
rorb
xchg
or
pop
adc
mov
lea
mov
xor
jnp
xchg
add
imul
scas
sbb
in
xchg
aas
xchg
icebp
fists
sbb
pop
int3
out
das
adcl
adc
or
mov
lcall
jo
inc
mov
cmp
mov
test
dec
jp
sti
enter
call
out
pop
pop
xchg
sub
mov
inc
mov
test
cld
and
addl
jecxz
mov
lret
sub
aas
cmpsl
adc
mov
sub
xchg
cwtl
mov
mov
ljmp
enter
ret
outsb
cli
arpl
insl
adc
push
push
mov
add
out
mov
sahf
addr16
xor
xchg
xor
ds
push
mov
cmp
into
dec
and
clc
out
pop
jb
pop
mov
jl
call
fists
lahf
mov
pop
les
lock
cmpsl
xor
xor
inc
out
mov
es
xchg
lahf
adcl
jmp
or
push
outsb
stos
lret
mov
push
jno
xorb
mov
outsl
inc
mov
mov
in
push
or
sbb
das
mov
and
or
xchg
stc
lcall
sub
jb
jb
push
outsl
scas
out
add
sub
cli
daa
arpl
testl
test
mov
jb
flds
in
js
mov
adcb
jge
scas
addb
push
sub
jb
jb
pop
mov
jbe
sub
pop
dec
ret
lret
loope
xor
mov
stos
repz
insl
jb
sbb
jl
jecxz,pn
jg
shrb
jae
sub
das
mov
sub
orw
cmp
std
mov
or
push
sahf
aam
jecxz
in
lods
push
sti
add
ss
iret
fimull
mov
pop
xchg
push
ja
push
sbb
sti
jg
lea
dec
out
lea
cmpsb
dec
pop
outsl
and
jns
mov
decl
lea
jge
dec
mov
cs
push
mov
xchg
js
cmpsb
sub
cmp
lret
jbe
xchg
das
stos
push
push
mov
jo
mov
daa
call
push
test
lea
lds
pusha
fcomi
mov
repz
enter
je
test
arpl
fimuls
mov
shll
outsl
lcall
mov
fwait
cmpsb
into
push
popf
fnstsw
stc
dec
imul
and
xor
daa
xor
mov
imul
iret
pop
xor
adc
jge
inc
pop
or
push
jb
add
cmpsl
aam
or
iret
xor
les
lds
aad
loop
out
push
push
mov
or
cli
into
lret
es
lret
and
scas
js
pop
mov
adc
daa
loopne
add
shlb
ja
pop
push
pop
repnz
iret
mov
cmp
sahf
dec
or
jg
jne
and
aaa
sbb
adc
lds
sahf
cmpsb
ja
insb
mov
xchg
cld
fiadds
or
jbe
mov
dec
dec
add
inc
pusha
mov
push
cld
xor
icebp
sub
addr16
and
add
inc
push
push
lret
imul
cmc
lds
pop
cmp
aad
lea
aam
sub
xor
or
jbe
jo
pusha
mov
fidivs
mov
fadd
hlt
repnz
mov
leave
lret
or
lret
and
stos
cmp
sbb
or
in
jmp
pop
jbe
jno
inc
mov
movsl
insl
sbb
dec
or
push
xor
popa
test
rorl
sub
roll
fs
jge
adc
add
pop
push
lahf
ret
popf
dec
aam
fidivs
imul
xchg
rclb
loop
scas
out
pop
jecxz
inc
inc
sarl
push
and
loopne
xchg
cwtl
std
cmp
dec
or
loopne
lods
xor
les
aad
int
cmp
mov
xchg
xor
mov
movsb
adc
out
cmp
sbb
cmpsb
cmc
xchg
jecxz
sbb
add
je
dec
inc
push
jge
jns
in
jbe
mov
pop
in
mov
mov
fistpll
xchg
bound
das
inc
testb
data16
adc
dec
outsb
pop
mov
mov
cmp
mov
cwtl
xchg
daa
mov
jg
inc
es
mov
cmp
iret
pop
lock
inc
mov
sub
outsb
mov
jae
jno
pop
push
add
mov
dec
sbb
rcll
push
out
xor
push
lods
mov
cmpsb
lock
ror
insl
enter
jns
mov
push
and
add
imul
repnz
pop
dec
scas
push
out
sbb
push
roll
imul
mov
lcall
fildl
test
mov
mov
js
movsl
test
jg
sbb
push
adc
sub
aaa
lcall
das
roll
sbb
jbe
sbb
dec
add
inc
in
loope
dec
adc
test
ss
push
jp
push
shlb
inc
scas
mov
xor
jne
ds
popa
sub
lea
in
jg
test
mov
push
pop
mov
push
iret
leave
fistpl
pop
dec
cmc
cwtl
pushl
loope,pt
xchg
sub
pop
pop
push
add
and
jg
mov
les
add
lock
mov
inc
push
sbb
jmp
and
xor
mov
lcall
mov
cmp
adc
sarl
sbb
shl
mov
in
xchg
out
sahf
or
push
dec
mov
dec
mov
sub
pop
cmp
lods
fcoms
sbb
sbb
mov
scas
jg
jp
or
lret
mov
mov
shlb
ds
pop
jmp
jmp
daa
or
mov
movsl
jl
aad
inc
ja
imul
or
clc
shll
pop
shll
push
push
movsb
pop
cmp
sti
sub
pop
sub
or
ja
xchg
fldt
fwait
fdivl
and
mov
lahf
stc
lcall
jmp
fistpll
cmc
pop
test
and
push
adc
xor
and
adcl
fcomi
cwtl
lock
fldt
je
and
mov
cmp
div
mov
movsl
lcall
mov
fcomp
push
or
aad
sbb
jp
ss
jne
out
lods
nop
popf
leave
mov
in
push
mov
xchg
and
push
sbb
addb
sahf
and
fildl
cmp
es
push
dec
xor
fnstcw
mov
and
mov
or
dec
pop
cli
mov
ds
fsub
mov
xorb
jne
sbb
mov
pop
rorb
mov
adc
jo
pop
mov
icebp
sbb
push
mov
mov
pop
rolb
or
xchg
adc
cld
jns
pop
dec
mov
int3
jb
mov
ja
mov
mov
add
adc
rorl
outsb
xchg
mov
dec
pop
add
movb
scas
mov
jl
push
cmpsb
rorb
adc
dec
adcb
cmp
pop
cmp
mov
loopne
test
or
sbb
and
mov
mov
daa
pop
mov
fdivrs
pop
xor
repz
sub
dec
xchg
mov
adc
push
in
sub
ret
pop
sarb
mov
repnz
adc
add
hlt
sbb
loop
pop
and
test
pop
inc
lods
pushf
mov
sbb
inc
cmp
mov
repnz
sbb
mul
mov
dec
lret
nop
in
mov
jb
push
push
jne
repnz
test
jb
jbe
arpl
add
sarl
jge
pop
scas
add
test
push
pop
xchg
mov
inc
sbb
adc
mov
enter
rcrb
add
test
scas
ficoms
enter
lods
mov
and
leave
adc
push
mov
mov
out
sub
push
cmp
pop
mov
lods
pop
adc
out
or
into
jno
cmp
cmc
ficoml
pop
cltd
xor
arpl
mov
faddp
into
xchg
rolb
dec
cli
shll
cs
dec
fcoml
stos
adc
adc
repz
sbb
and
clc
push
sub
pop
aas
sahf
sbb
and
rcrb
pop
scas
add
pop
test
pop
add
ljmp
adc
sahf
dec
cltd
sub
ja
roll
add
cmp
enter
push
mov
add
jb
mov
lock
pop
pop
inc
loop
inc
or
das
xchg
rcrb
cmp
dec
fstps
fidivrl
aaa
fs
scas
repnz
jp
jmp
mov
divb
in
sbb
dec
cs
push
xor
outsl
outsb
lcall
cmp
dec
dec
pusha
data16
mov
lods
inc
dec
adc
fs
xchg
or
outsb
pop
mov
lock
jmp
in
pop
or
mov
sub
std
mov
popa
add
push
ret
push
cltd
int3
test
jmp
or
mov
shl
push
jg
sub
pusha
aaa
nop
pushf
mov
jo
pop
sub
and
jl
and
push
fsubrl
mov
loope
lahf
cmc
imul
cwtl
fldl
into
lea
cld
adc
jg
or
add
shrb
xlat
in
mov
inc
add
fmul
sub
sub
jg
in
add
repnz
mov
scas
stc
add
test
gs
adc
sub
jl
out
jg
sti
insb
and
adc
out
adc
and
int
nop
das
out
mov
jne
and
xchg
mov
pop
outsb
dec
sbbl
jne
add
jp
and
int
outsb
add
mov
repz
pand
pop
out
mov
and
nop
push
pop
push
or
mov
or
les
lea
pop
mov
shrl
enter
lcall
inc
pop
call
cli
sbb
push
add
jne
out
dec
adc
hlt
sahf
or
inc
test
rorl
dec
out
jae
sarb
popf
and
shl
adc
pop
mov
int3
sahf
push
inc
mov
les
sub
aas
nop
mov
cltd
aam
pushf
in
mov
push
mov
adc
add
jecxz
in
aaa
shrb
stc
cltd
cltd
ja
cmpsb
fidivs
mull
xor
mov
test
arpl
jge
push
negb
or
xor
je
int
hlt
add
or
or
jle
lcall
cmp
fisttpl
mov
loop
dec
push
add
lock
nop
pop
push
sbb
negb
popa
leave
imul
xchg
cmc
repnz
rorb
inc
jns
mov
mov
cmpsb
imulb
or
cmp
mov
xchg
scas
adc
nop
pushf
into
adc
cmp
xor
lcall
adc
pop
mov
imul
jno
sbb
dec
sbb
add
mov
pop
mov
lods
mov
pop
into
arpl
cmp
pop
add
jp
inc
mov
mov
lahf
movswl
xor
pusha
push
sahf
or
push
lods
cmp
test
in
or
fldenv
push
cmp
jmp
or
into
in
or
push
cmpsl
push
pop
mov
push
adc
nop
leave
cmp
outsb
rorl
sub
mov
stos
push
es
add
aam
fnstcw
jnp
adc
sub
fyl2xp1
adc
dec
mov
movsl
loopne
dec
mov
pop
les
mov
push
clc
sub
add
daa
inc
adc
jo
mov
inc
pushf
xor
cmpsb
xchg
cmp
add
mov
push
outsb
cltd
mov
mov
and
addr16
push
push
aaa
dec
call
inc
jmp
loope
jecxz
jns
sbb
or
fcoml
movsl
push
movsb
jmp
dec
addr16
aaa
inc
sbb
xchg
in
and
jo
ucomiss
js
incb
repz
add
mov
cmc
push
je
cmpxchg
and
and
dec
sub
aad
faddl
in
subl
shrl
popf
mov
push
cs
push
sarb
cmpsl
push
dec
adc
test
leave
adc
pop
test
ljmp
pop
fldl
xchg
in
and
xor
xchg
mov
pop
lea
and
jns
icebp
sub
inc
sbb
sbb
fcmovbe
pop
ja
add
outsl
mov
sti
das
mov
mov
daa
fwait
mov
jecxz
int
cmpsb
cli
lret
stos
and
jne
and
sbbl
ret
mov
repz
xchg
cmp
add
jecxz
xchg
ss
inc
jmp
jbe
pop
repz
lods
lods
jne,pn
xchg
shlb
dec
jmp
mov
dec
jnp
sbb
pop
shr
test
mov
mov
cltd
js
lods
lea
pop
stc
aaa
fwait
mov
jecxz
push
int
jno
mov
sti
loopne
mov
test
mov
les
pop
mov
mov
xor
jns
jmp
out
test
sti
aaa
inc
inc
ss
negl
xor
aas
sub
mov
mov
mov
in
loopne
popf
in
mov
addr16
add
jno
out
insl
push
addr16
lock
in
ret
imul
inc
push
push
xor
pop
adc
xchg
in
repnz
aas
cwtl
mov
test
dec
gs
test
mov
lret
mov
or
push
push
xor
sub
aam
xorl
xchg
lea
pop
imul
fstpt
push
xchg
inc
loop
push
inc
mov
test
aaa
fs
push
data16
push
lea
adc
std
andl
jae
push
dec
outsl
adc
xor
cmc
repnz
mov
enter
mov
mov
push
pop
mov
inc
push
jle
adc
test
pop
test
add
inc
mov
xchg
lds
or
inc
loop
ret
ja
mov
jo
lcall
mul
or
subb
adc
pushf
mov
clc
mov
nop
fldenv
imul
int
ficompl
data16
adc
sar
cmpsl
add
stc
inc
loopne
mov
or
xchg
es
inc
gs
dec
mov
loopne
mov
sarb
nop
fs
cwtl
in
les
jecxz
xchg
test
inc
xchg
fidivrl
cmp
fidivrs
cmpsl
sarl
repnz
or
lret
xlat
xorl
fists
orb
lea
xor
das
inc
cmp
sti
test
lahf
pusha
cmp
sti
dec
mov
out
js
insl
pop
in
push
in
daa
or
fldcw
in
cld
sbb
ficoml
xor
fldl
adc
jb
and
ds
sbb
and
cltd
movsb
test
lcall
test
into
and
scas
xor
xchg
inc
mov
fiaddl
dec
orl
cli
mov
out
push
cld
add
imul
mov
arpl
xchg
mov
mov
loope
xchg
stos
cli
sbb
sub
cmc
into
pusha
rcr
jge
and
sub
iret
call
mov
pop
loope
xchg
sub
push
fdivs
pushf
mov
hlt
rcl
lahf
cld
into
adc
cli
mov
jge
push
inc
aaa
jns
stc
repnz
scas
sbb
outsb
mov
mov
xchg
add
dec
sub
cmpsl
fstps
xchg
jns
sub
gs
int3
xchg
addr16
mov
ret
shrl
push
movsl
outsb
ss
out
loope
mov
fs
in
push
pop
test
into
in
push
mov
xor
xor
push
out
subb
pusha
mov
pushf
psubsb
inc
gs
orb
sub
add
orl
mov
mov
iret
cmp
xchg
jns
fwait
enter
ljmp
ja
in
xchg
xchg
push
or
icebp
cwtl
roll
in
stc
inc
xchg
std
sbb
rorb
je
fwait
aad
push
pop
jbe
pop
in
loope
sub
test
mov
push
xor
sbb
daa
nop
outsb
into
imul
mov
push
xchg
test
dec
les
decl
lret
out
jb
jb
mov
push
or
inc
xchg
or
add
int3
xchg
push
jecxz
jnp
test
jecxz
sub
addr16
subb
aad
xor
xchg
es
jbe
cmp
pop
inc
hlt
lods
scas
sub
ljmp
adc
xor
mov
push
xchg
push
sub
les
jge
jmp
push
aad
pop
inc
out
popf
or
aad
stc
jle
adc
xorl
mov
sbb
ret
or
jns
adc
psrld
sub
adc
cmp
and
dec
bound
adc
pop
cs
ret
inc
sub
pop
mov
add
push
test
push
fmul
cmp
sti
inc
cltd
jo
push
dec
stc
pop
loope
fcmovu
dec
out
cli
js
add
insb
in
sahf
out
mov
lods
mov
xor
push
call
mov
adc
jnp
test
push
jae
aam
enter
lret
cwtl
xlat
repz
inc
dec
bt
push
jnp
loope
lahf
xor
mov
inc
cmp
or
inc
xorl
xchg
jno
sub
mov
pop
xor
rol
movsl
aad
mov
jns
and
jns
iret
mov
addr16
flds
mov
sbb
sub
sbb
jl
sbb
adc
jnp
or
sbb
jg
pop
out
mov
int3
mov
pop
adc
add
std
bound
pop
aaa
mov
in
xor
add
les
xchg
or
sbb
in
sub
stc
sbb
or
or
pop
rcll
push
cmpsl
dec
imul
inc
push
cld
outsl
repnz
xchg
arpl
jle
mov
xor
in
daa
ss
dec
cwtl
cld
inc
cld
xor
xor
and
jge
lods
cmc
cs
or
dec
frstor
insb
out
xor
iret
mov
sbb
dec
lret
add
jo
in
ficomps
roll
ljmp
ja
dec
mov
jnp
and
cmpl
inc
repnz
icebp
pop
push
and
lret
sarb
mov
out
mov
sbb
repnz
movsb
jecxz
shll
mov
dec
dec
nop
jae
adc
aam
sarb
and
adc
xor
push
or
sbb
add
je
mov
adc
sbb
lcall
fsubl
divl
in
scas
gs
mov
push
in
cld
mov
enter
js
popa
fwait
popf
jmp
sbb
pop
enter
adcl
sbbb
ljmp
cld
pop
and
jp
sahf
xchg
aas
or
cltd
inc
sbb
in
dec
loope
lds
cmp
stc
cld
ret
sti
stos
cmpl
add
daa
sub
divl
xlat
xchg
push
push
shll
insl
adc
xor
mov
adc
fidivrl
add
lret
push
push
jmp
add
and
inc
lock
and
lea
in
adc
ja
pop
mov
and
in
dec
loop
mov
xchg
addr16
loopne
push
xor
fs
mov
in
push
dec
mov
jmp
jp
mov
sbb
jl
subl
and
sub
addb
pop
dec
cmpsl
loopne
ds
add
pop
outsb
mov
sub
fsubp
fwait
in
loop
fs
movsl
xchg
call
mov
repz
sarb
in
pop
out
imul
inc
jmp
xchg
xchg
fwait
fs
push
dec
sbb
mov
cmpsb
mov
jb
jl
ficoml
xchg
sub
lds
pop
fsubr
icebp
dec
mul
xchg
sub
cmp
stos
lock
xor
adc
mov
jl
xchg
testl
mov
add
mov
ja
jnp
aam
add
pop
les
push
jno
adc
mov
adc
pop
adc
xor
dec
sbb
call
dec
cmpb
sbbb
sbb
jecxz
cmp
jg
sub
rcl
or
pop
mov
inc
mov
xorl
mov
fs
mov
fldcw
xchg
shl
js
fimull
mov
icebp
jno
test
pop
lods
cmpsb
fidivrl
add
mov
cs
loope
into
pop
or
test
jl
mov
inc
out
cld
imul
dec
rol
and
int
sub
add
dec
jo
rcrb
in
out
scas
lods
in
iret
mov
outsb
rclb
push
jle
scas
sbb
movsb
adc
or
push
xor
pop
mov
cmc
jns
addl
mov
sar
je
mov
jecxz
dec
mov
sahf
mov
pop
sub
or
cmp
and
mov
dec
es
aad
sub
jl
mov
movsb
adc
mov
xchg
inc
sub
push
xchg
mov
dec
addr16
xorb
mov
inc
xchg
xchg
js
dec
stc
push
into
mov
test
cmp
and
and
ror
cmp
lock
or
lock
jnp
and
inc
pushf
xchg
leave
dec
cli
lahf
in
jle
je
add
or
push
mov
adc
sarb
test
call
xor
aaa
jle
xchg
cltd
cmpsl
push
lods
clc
inc
aaa
aad
andb
mov
sub
inc
test
xor
add
out
dec
outsb
addr16
js
and
or
adc
sub
fadd
lods
adc
add
xchg
movsl
add
jecxz
pop
pop
sbb
orb
gs
or
pop
fwait
gs
sbbb
std
mov
jb
cld
enter
scas
add
sbb
adc
enter
pop
sbb
mov
xchg
mov
jb
outsl
test
mov
xchg
mov
adc
adc
shl
sub
enter
jge
mov
add
fs
sbb
out
int3
adc
arpl
mov
jmp
sbb
sbb
out
cmp
jnp
cmp
push
popa
int
fcoms
xchg
dec
add
idiv
cwtl
lret
addb
stos
test
stc
call
mov
les
adc
sbb
inc
add
inc
sbb
out
pop
icebp
cwtl
jl
insl
xchg
sbb
jge
or
push
stos
out
inc
or
push
hlt
mov
andb
push
adc
loopne
inc
out
inc
sarb
call
xor
and
inc
loopne
mov
sub
imul
adc
lock
adc
pop
xchg
pop
or
mov
or
dec
xor
sarb
or
dec
test
sbb
mov
ss
dec
lock
das
jle
das
idiv
push
adc
dec
or
lret
sti
repz
push
push
mull
lds
jmp
cmp
dec
or
movsl
sub
mov
daa
xchg
fs
mov
xor
mov
test
fisubs
inc
loop
lock
ret
cmp
mov
into
xor
mov
push
push
mov
sub
jb
scas
out
cmp
cmp
mov
xchg
mov
imul
pop
jge
adc
leave
jne
ds
stos
or
pop
insb
pushl
xchg
shlb
pop
push
sbb
test
out
bound
pop
inc
or
xchg
je
jecxz
xchg
push
testb
add
out
inc
cmp
in
sbb
mov
push
jmp
aaa
movsl
in
test
mov
sub
mov
stos
push
fcmovbe
pop
sbb
push
cmc
mov
fmull
iret
stos
sbb
push
jge
jg
inc
jns
fsubrp
stc
mov
cmp
xor
outsb
pushf
lret
push
xchg
fdivs
jecxz
sahf
aas
push
push
sub
xor
jae
out
or
mov
imul
mov
shll
lret
in
or
push
mov
and
push
inc
repz
inc
clc
scas
cmp
cmp
sub
mov
xchg
pop
iret
cmpsb
inc
aaa
test
insl
ds
cmp
push
je
cltd
push
and
pusha
pop
loopne
ds
cmp
cmp
pop
mov
jbe
cmp
xchg
pop
fildl
ja
push
pop
or
into
in
push
cmc
sub
add
ss
xor
popa
cmpsl
int
xchg
xchg
push
sub
mov
add
pusha
out
push
pushf
repz
sub
sbb
jl
std
sub
sbb
pop
in
or
addl
popa
mov
fcoml
inc
sbb
cli
ljmp
icebp
or
in
or
xor
jo
mov
mov
and
subb
push
jg
addb
lds
xchg
or
test
movsl
arpl
adc
jo
cwtl
jno
es
add
xchg
lock
jns
jnp
push
push
cmpsb
push
mov
jbe
out
sub
mov
aad
mov
in
pop
adc
sbb
inc
sbb
mull
int
jge
cmc
shrb
mov
push
pusha
fs
lcall
inc
fwait
in
fadds
cwtl
xchg
fistpl
xor
repnz
cmp
xor
sub
and
cmp
rorb
adcl
in
xor
outsb
cltd
arpl
lods
inc
mov
jg
popa
out
pop
fsub
mov
adc
fcmovne
jb
test
arpl
add
mov
sub
push
les
ja
call
cld
push
nop
test
jmp
lock
jge
pushf
sti
loop
aaa
inc
cli
push
push
mov
and
dec
xchg
aam
test
push
pop
aas
outsb
mov
dec
fs
out
das
std
sarb
data16
push
mov
mov
dec
test
dec
lret
test
pop
fdivl
fwait
sbb
mov
sbb
mov
bound
cli
or
push
xlat
or
movsl
push
cmpl
push
lds
aaa
dec
inc
cld
movsl
insl
sub
xor
pushf
xchg
pop
dec
pop
fsubs
inc
pop
sbb
call
push
adc
insl
pop
aaa
lcall
addr16
pop
sub
rolb
adc
mov
or
ret
stos
or
out
adc
push
inc
pushf
sub
dec
stc
add
mov
mov
fwait
pop
pop
mov
cli
mulb
cmp
fidivrs
out
pcmpgtw
sub
mov
mov
sti
inc
pop
mov
stos
inc
stos
int3
xchg
inc
mov
mov
sbb
fsubrs
fisubrl
orl
xchg
xchg
scas
scas
daa
jmp
push
jg
push
inc
mov
pop
lahf
cld
cli
int3
lret
ds
jl
mov
push
push
pop
push
mov
fs
inc
ss
inc
fidivrl
jg
push
push
popa
adc
fidivl
clc
sub
cmp
daa
xchg
cmp
dec
mov
or
cmp
dec
and
out
jae
push
lret
in
pop
rcrl
sti
aam
or
sub
out
pushf
sbb
cmpsl
pop
dec
in
dec
or
sub
mov
cmp
fwait
loope
jl
in
xchg
inc
rcl
inc
lea
rclb
mov
dec
fwait
adc
mov
jno
push
or
and
cwtl
jg
and
push
es
sahf
movsb
mov
cwtl
jns
sbb
adc
lods
rorb
cmpl
sbb
inc
cmpl
push
stos
fdivrs
outsl
xor
lret
xchg
nop
sbbl
ret
jns
pop
jmp
lock
lods
cwtl
adc
mov
mov
ret
xchg
push
test
je
test
cmpsl
xlat
sarl
pusha
mov
ljmp
popf
xorb
mov
pop
loope
dec
dec
xrstor
adc
mov
pop
sub
call
std
fisubl
add
push
insl
mov
decb
jle
mov
inc
adc
jb
sub
shll
xor
jns
dec
testb
sbb
roll
ficomps
sti
xlat
sbb
jb
and
stc
cmpsb
popf
xlat
popf
inc
and
scas
cmp
cmp
cmpsl
dec
pop
inc
jecxz
mov
loope
scas
fistpl
sub
jo
iret
push
icebp
jecxz
loop
int3
lcall
nop
outsb
push
addr16
add
adc
jae
pop
shlb
loopw
movsb
sbb
jae
jecxz
ss
dec
pusha
cli
scas
dec
sbb
rcrl
xchg
xchg
cltd
sub
aaa
lea
mov
sub
jle
pop
adc
ja
fs
or
scas
jg
push
into
icebp
popf
push
or
loopne
int3
in
daa
rorl
dec
rcrb
outsb
add
movsb
aas
mov
js
leave
popf
stos
out
daa
out
push
jne
fisttps
or
imul
icebp
or
ret
mov
adc
adc
xor
cli
inc
rol
in
sub
insl
lods
xorb
in
and
add
stos
das
jne
mov
pop
lods
out
loopne
dec
das
adc
sahf
aad
fldcw
aaa
push
cmp
mov
test
jne
mov
pop
hlt
clc
xchg
mov
ja
pop
les
incb
into
mov
lea
xchg
pushf
andl
cmp
and
pusha
jge
jne
cld
cli
fnstcw
mov
pusha
push
int
xchg
dec
mov
push
aas
mov
loopne
sbb
adc
mov
decb
idivl
lock
push
xor
jmp
hlt
push
and
inc
out
push
sub
dec
rol
mov
in
sub
mov
in
fs
test
pop
cmc
xchg
das
js
int
ja
push
sahf
sbb
popf
scas
pop
mov
and
rolb
cwtl
sub
jnp
mov
xlat
fiadds
mov
inc
js
xor
lods
inc
xor
test
pusha
je
jge
incb
ja
sub
or
sbb
pop
and
inc
mov
rorb
dec
cmp
out
cmp
or
mov
add
xor
inc
push
jbe
pop
sub
mov
cwtl
xchg
icebp
cmp
inc
sbb
push
jne
or
mov
imul
sub
inc
dec
and
or
movsl
cmp
jl
sbb
ja
sbb
fildl
xor
int
mov
add
mov
and
xor
and
das
mov
push
mov
push
ss
pop
iret
pop
or
sbb
xor
xor
xor
ds
orl
xor
mov
or
sub
test
adc
pop
loope
xchg
cltd
test
sbb
andl
pop
jo
outsl
repz
notl
xor
and
enter
movsb
pop
fildl
mov
scas
adc
movsb
sub
sbbb
and
into
pop
sahf
pop
es
xlat
or
insb
mov
sbb
shrb
iret
dec
push
lcall
ljmp
sti
into
les
mov
mov
lea
mov
cmp
sbb
sub
xchg
xlat
mov
add
nop
xchg
enter
mov
jbe
add
aas
subl
lods
inc
adc
mov
loope
in
scas
xchg
mov
out
cs
imul
pop
mov
jle
pop
sbb
scas
push
push
gs
adc
loop
nop
sbb
pop
mov
jae
xchg
inc
mov
cltd
sub
cmp
loope
sarb
push
mov
cmpsl
lret
insl
add
jmp
sbb
adc
out
push
jno,pn
add
ljmp
into
mov
mulb
dec
rcrl
fwait
div
add
aaa
dec
mov
sub
xor
sub
pop
rcrb
cli
adc
mov
out
add
clc
pop
dec
adc
fldcw
fcmovb
dec
mov
movsb
add
lret
pop
mov
jmp
out
xchg
pop
xor
xorb
iret
cmpsb
mov
out
data16
push
out
cli
dec
call
imul
jecxz
mov
aad
xor
call
push
repnz
inc
pop
ss
ret
popa
dec
fldcw
iret
aad
mov
cli
outsb
xchg
shlb
fnsave
das
cwtl
pop
push
sarl
icebp
push
pop
test
iret
in
push
ja
aad
outsl
or
sbb
inc
inc
js
inc
lcall
mov
push
xchg
mov
cltd
stos
scas
fwait
ja
add
dec
or
sbb
loope
das
repz
push
push
js
cmpl
dec
jmp
in
dec
cmp
jle
ret
push
dec
xor
xor
dec
sub
inc
es
sub
push
test
rcll
iret
testl
or
mov
outsb
test
and
cld
iret
and
testl
es
pop
loop
mov
mov
and
scas
fucom
test
and
jp
mov
adc
leave
jo
arpl
jno
fcompl
xchg
das
sub
push
push
pop
arpl
pop
sub
adc
cmp
xor
xchg
sbb
loope
pop
movsl
pushf
fdiv
push
ret
out
stos
sbb
imul
mov
or
mov
ljmp
xchg
sub
push
mov
push
icebp
rcl
imulb
je
push
mov
dec
mov
adc
inc
int3
mov
pop
ss
xor
mov
jecxz
cs
add
fidivl
out
jnp
cmc
popa
xchg
inc
mul
icebp
sar
loop
insb
jo
or
add
add
movsl
in
repz
addr16
dec
xchg
jbe
mov
jle
mov
mov
push
lds
jge
int
ret
cmp
sbb
mov
pop
adc
lds
push
stc
ds
ljmp
adc
rol
mov
daa
test
sub
movsl
loopne
cmp
sub
rclb
dec
stos
mov
push
scas
mov
pop
es
stos
jle
mov
inc
test
test
fs
sbb
lret
xchg
mov
out
push
jl
into
negl
sbb
test
cli
mov
popf
les
sub
inc
mov
cmpsl
fucomp
xchg
sbb
js
aas
fcoms
dec
insb
data16
movsl
pop
fmuls
sub
push
int
mov
mov
addr16
pop
sub
shlb
cmp
push
aam
mov
add
or
out
lods
push
imul
jl
repz
and
or
inc
test
jns
mov
xchg
test
push
sbb
cli
cmc
std
ret
ja
incl
test
inc
int
insb
cmp
int3
xchg
push
ja
push
out
cwtl
gs
pop
aad
cs
adc
dec
push
push
and
lcall
push
imul
jae
or
and
xchg
aaa
sbb
jns
outsl
xchg
andb
je
lods
aad
xlat
mov
mov
push
mov
jo
mov
out
jo
add
fimuls
jae
xchg
outsl
lret
inc
dec
arpl
pop
cmpsl
testl
shlb
subl
push
js
ret
mov
mov
lahf
dec
mov
mov
fsubl
fldl
sahf
arpl
add
div
sub
jb
fcoml
mov
and
inc
in
jp
fldl
push
add
mov
mov
scas
shrl
mov
xchg
int
int
push
in
or
inc
adc
inc
jmp
pop
inc
pusha
xlat
lret
push
xchg
jmp
fisubrs
lret
and
jmp
fisubl
push
dec
pop
jl
adc
dec
mov
outsb
rcrb
sub
repnz
les
cmpsb
push
push
xchg
aam
cmp
fs
fcmovnb
insb
or
cld
scas
lods
scas
push
fldpi
rolb
and
mov
out
hlt
sahf
maskmovq
imull
cmp
and
cmpsb
loopne
pop
mov
or
adc
jnp
dec
or
sub
aad
mov
dec
pop
adc
add
test
xchg
add
das
stc
dec
or
push
sbb
cmp
jp
mov
mov
xchg
cmpsb
lret
jg
push
or
js
mov
call
push
fwait
sub
aam
pushl
in
adc
mov
pop
out
push
xadd
xor
mov
cmp
push
inc
ficomps
loope
mov
xchg
mov
jmp
mov
cmp
inc
push
adc
dec
mov
sbb
xchg
ja
fidivrl
mov
imul
mov
mov
data16
xchg
je
rcll
jmp
pop
cmp
xor
cwtl
fsubl
sub
xchg
fst
sbb
sti
or
in
or
inc
push
and
sbb
add
jmp
mov
shlb
in
or
pop
leave
xor
sub
insb
dec
pop
aas
jecxz
call
out
repnz
test
and
sub
in
mov
mov
pop
sahf
mov
clc
test
mov
aas
movb
mov
inc
cld
xchg
sbb
push
cmp
mov
adc
jno
jmp
xchg
push
xor
enter
adc
mov
leave
jo
cmp
add
or
cmp
sbb
inc
xor
int3
push
mov
xor
push
jmp
xchg
dec
and
mov
jle
adc
fdivl
and
or
pop
jp
fwait
addr16
xchg
mov
pop
add
cmp
dec
mov
movsb
stos
fwait
push
adc
or
shll
xor
jns
fiadds
xchg
and
jecxz
push
ret
in
or
das
mov
push
jp
pop
cmp
sub
cmpsl
rol
pushf
push
push
pop
inc
jg
les
rcrb
xchg
sbb
mov
imul
sbb
push
mov
ret
divl
sbb
or
movsb
inc
xchg
mov
sbb
mov
fildll
add
ljmp
jg
xchg
mov
out
inc
pop
outsb
add
cld
xor
xlat
pop
clc
outsb
sub
adc
pop
xchg
imul
aam
add
iret
ret
test
dec
sbb
inc
jne
jo
cmpb
std
sub
xor
xor
push
in
inc
sub
popf
jge,pn
xor
mov
stc
xchg
rep
pop
or
fs
pusha
xchg
rcrb
fnstenv
xor
lds
faddl
dec
mov
ret
mov
adc
adc
push
rcll
inc
mov
movsl
inc
sub
std
lcall
mov
jnp
pop
and
xchg
push
lret
fdiv
mov
mov
xchg
mov
or
fcomip
push
std
int3
xchg
lret
cmp
int
adc
mov
data16
or
cmp
mov
mov
repnz
xor
in
jae
iret
cwtl
lock
shl
loopne
fists
test
mov
and
add
mov
and
push
in
pop
inc
orl
add
xor
shrw
dec
pusha
cmc
out
adc
gs
hlt
std
aad
xchg
push
aad
jns
test
or
fmul
lea
cmp
test
or
out
sbb
or
xor
test
pop
in
cmp
sbb
mov
dec
rcrb
push
scas
adc
imul
pop
ljmp
or
cmpsl
jbe
xchg
add
inc
add
dec
mov
jae
sbb
lcall
scas
mov
lahf
in
out
flds
aad
dec
sbb
jno
into
addr16
sub
jmp
add
mov
xchg
inc
cs
movsl
iret
sub
xor
insl
sbb
pop
lahf
scas
test
jp
lret
clc
test
sbb
push
xor
pop
ja
les
addl
sub
push
pusha
inc
sahf
mov
fucom
fs
mov
mov
push
out
lret
fisubl
add
cld
push
scas
and
xor
xor
sarb
sahf
test
cmp
aam
icebp
popf
dec
push
pushf
lret
lock
data16
mov
xchg
int
pop
pop
adc
sub
fwait
cmp
or
pop
aam
es
dec
mov
adc
sub
sbb
rol
add
xor
lods
notl
je
leave
cmp
mov
mov
mov
in
mov
cmp
dec
fdivrs
shrb
xchg
stos
cmp
pop
enter
mov
ja
xlat
sub
adc
sti
xchg
xor
daa
dec
jge
inc
movsl
adc
cmp
std
and
xchg
scas
fbld
cmp
xchg
cld
xchg
pop
aad
fbld
mov
or
clc
icebp
outsl
mov
insb
fsubr
xor
fistps
add
daa
jo
nop
inc
outsl
mov
out
out
aaa
out
pop
and
push
dec
and
ret
mov
bound
mov
stc
cmp
jnp
out
mov
push
shl
test
hlt
push
pop
mov
or
inc
cmp
dec
cltd
or
sbb
mov
cmp
loope
aad
test
push
in
movsb
arpl
sbb
sahf
cmc
xor
xchg
or
pop
xor
add
idivb
gs
sbb
bound
mov
push
cld
stos
mov
push
es
push
out
or
fsqrt
or
sub
and
jp
adc
lret
jo
mov
mov
jbe
lahf
mov
mov
dec
inc
movb
sub
cmp
int3
loopne
aas
cmpsl
sti
and
add
clc
inc
out
add
pop
push
shll
jnp
out
cmp
adc
popl
inc
inc
cld
sbb
cmpsb
jge
repz
mov
fldenv
or
adc
mov
cmp
shlb
sbb
xlat
and
jbe
out
or
sub
shrl
sub
mov
sub
sub
stos
dec
or
dec
lods
scas
mov
scas
pop
and
push
test
pop
fstpl
add
pusha
push
in
inc
decb
lea
lea
xor
dec
daa
jo
and
and
outsb
mov
mov
jle
ror
push
adc
out
cmp
jbe
jns
pushf
loope
ja
pushf
mov
xor
cli
mov
pop
push
outsb
pop
and
mov
add
aaa
inc
test
sarb
dec
in
jae
xchg
pop
je
or
in
xor
jae
stos
xor
sti
jo
jnp
out
pop
xchg
jmp
scas
insl
fsubs
xchg
mov
mov
and
gs
cmpsb
std
jb
inc
inc
cwtl
loope
loopne
movsl
ret
repnz
fdivp
aas
fldt
stc
imul
dec
adc
shll
shll
je
nop
cmp
push
adc
mov
out
mov
mov
cmpsl
ljmp
xor
les
push
shl
inc
xor
add
jecxz
loop
mov
push
fiaddl
and
ret
insl
ljmp
sbb
cmp
and
and
mov
push
dec
or
out
ret
inc
mov
sub
and
push
jbe
xchg
es
lods
dec
dec
and
mov
mov
shr
sbbl
xchg
dec
pop
nop
mov
push
and
mov
sbb
jp
dec
jp
dec
subl
test
pop
andb
and
xchg
addr16
arpl
push
inc
push
push
iret
cmp
les
iret
pop
jnp
and
or
add
insl
sub
mov
pop
rcrl
xchg
jecxz
dec
add
mov
add
jnp
std
sub
es
insl
mov
and
lods
pop
ds
fildll
pushf
das
inc
movsl
push
push
push
imul
pusha
push
test
mov
int3
fcoml
ja
mov
inc
xchg
addr16
push
das
notb
xchg
fwait
sbb
icebp
fisubrs
inc
xor
pop
mov
fsubrl
mov
in
int3
rcr
in
es
mov
out
cwtl
outsb
test
xchg
adc
or
in
stos
push
fstps
lahf
enter
das
inc
cwtl
xor
xchg
fcom
cmp
mov
lock
rol
in
mov
mov
test
or
addl
shlb
pushf
lahf
push
pop
arpl
dec
jne
rcrl
add
and
jge
add
push
lods
pop
push
ljmp
jne
pop
rcl
mov
mov
or
or
mov
imul
or
imul
push
cld
xlat
adc
aaa
cmp
inc
mov
lret
movl
xor
rcrl
pop
insb
or
pop
adc
mov
pop
imul
cmp
pop
rclb
sub
repnz
call
cmp
mov
and
insl
sarl
add
and
mov
repnz
clc
mov
dec
cmp
movsb
lcall
shrb
lods
mov
mov
stos
jge
in
push
inc
in
data16
loop
and
pop
cwtl
repnz
xchg
push
xor
push
jnp
sbb
pop
jmp
lods
aaa
sbb
pop
inc
adc
outsl
out
pushf
push
imulb
subl
addr16
fldcw
popa
push
ret
xor
sbb
pop
pop
loopne
lock
lea
cld
rcrl
xlat
aaa
hlt
in
dec
sbb
pop
mov
push
xor
jecxz
nop
mov
inc
lock
xchg
clc
out
fildll
shl
shl
lahf
pop
mov
rcrl
ja
dec
or
std
mov
and
int
insl
mov
push
out
inc
sbb
bnd
mov
pop
int3
daa
rorb
mov
push
mov
add
dec
xchg
xor
popa
sub
rorl
sub
outsb
int3
mov
sar
xchg
fdecstp
scas
inc
mov
insl
add
inc
mov
jo
and
loope
dec
es
addb
nop
sbb
and
stos
pop
and
xlat
adc
inc
jmp
cmp
and
mov
mov
aam
fadd
fldln2
mov
fiadds
add
outsl
aas
inc
loope
int
pop
mov
xlat
loop
leave
jbe
push
inc
mov
arpl
rol
fmul
repz
pop
jns
and
fs
cld
mov
jge
xor
fdivr
cltd
fucomp
mov
mov
fisttps
out
out
filds
pusha
lock
mov
xor
es
mov
cmp
or
and
dec
mov
push
xchg
cltd
ss
push
js
jg
jo
pop
sbb
bound
es
mov
pop
push
lods
out
dec
test
mov
and
mov
dec
sub
mov
inc
push
jle
sub
jmp
cmp
sbb
mov
imul
xchg
stc
inc
mov
lahf
or
lds
push
mov
lcall
pop
mov
xor
inc
dec
popa
or
scas
int
jmp
ss
cwtl
aam
push
out
adc
test
inc
sbb
out
sti
scas
pop
pop
repz
fsubrl
pop
xchg
test
push
fwait
inc
sbb
inc
lods
push
push
mov
mov
adc
pop
neg
int
adc
sbb
pop
lods
and
movl
push
sub
sti
add
jmp
push
pop
dec
fbstp
bound
rcrb
stc
xchg
cmpsl
imul
fldcw
and
orb
push
push
aam
mov
movsl
fs
adc
cmp
iret
fs
xor
bound
pop
mov
jl
cwtl
jle
fwait
adc
inc
jmp
int
and
subb
add
dec
and
mov
into
inc
add
int
add
fwait
into
test
or
jp
not
std
adc
lcall
mov
les
push
dec
inc
aas
sub
iret
inc
adc
je
lds
stos
je
lret
fisubl
mov
jo
cmc
push
out
lods
fstpl
xorb
out
pop
xchg
movsl
ljmp
aam
lock
out
xor
scas
sti
movsb
repnz
cs
rorb
test
pushf
jmp
jge
lahf
gs
hlt
cwtl
push
adc
sub
rorl
push
in
jne
mov
bound
pop
cmp
pop
gs
jge
xor
in
ret
out
xor
push
and
jge
das
cwtl
push
or
bound
or
and
mov
xchg
cmpsl
or
xchg
cmpsb
lret
xchg
inc
inc
ret
clc
orb
adc
cltd
push
mov
jl
dec
dec
std
mov
scas
or
shrb
xchg
dec
inc
jge
lods
mov
xor
sbb
mov
rcll
fiadds
mov
into
jge
cmp
pop
lods
mov
pop
adc
loop
js
xor
test
dec
jns
cmp
lock
inc
popa
xchg
int3
xlat
xor
das
add
xor
outsb
xor
out
or
mov
movsb
sbb
dec
add
cmp
cmpsb
imul
dec
inc
sbb
mov
js
inc
rorb
pop
push
testb
movsb
and
repnz
mov
lret
mov
sub
daa
mov
mov
add
popf
clc
adc
ss
fwait
inc
ret
repnz
push
lret
gs
jge
mov
sub
jne
arpl
mov
roll
push
imul
cmpsb
cmp
sub
xor
add
lret
xchg
xlat
and
lcall
imul
and
xchg
cmc
and
adc
fcmovu
scas
int
xor
adc
addl
imul
out
mov
bound
xor
jbe
xor
sti
into
fbstp
fisttpll
pop
imul
aam
lahf
mov
ja,pt
les
sub
xchg
shld
lock
cmpb
mov
inc
fldenv
jno
int
lods
shlb
mov
mov
jmp
fwait
loope
lds
sbb
add
xlat
fisubrs
xlat
dec
loope
inc
lcall
add
adc
out
lahf
adc
subb
cmpsb
inc
fsubrl
push
enter
mov
ljmp
adc
inc
mov
or
and
leave
and
pop
jne
mov
mov
cli
cmpsl
mov
inc
xchg
cs
lods
pusha
cmp
xchg
or
push
pop
andl
fnstcw
push
xchg
lea
fmulp
mov
aas
mov
movsl
loopne
push
inc
xchg
popa
daa
and
xchg
or
insb
ss
bound
jae
out
sub
sbb
sub
movsb
std
lret
push
ret
mov
mov
mov
int
inc
fsubl
pusha
leave
sbb
inc
pop
shlb
subl
sub
adc
xchg
mov
popa
out
fstpt
sbb
in
add
ja
or
stc
and
arpl
outsl
test
cmp
xacquire
imul
xor
daa
fs
xchg
repz
pop
adcb
xor
lahf
test
inc
mov
arpl
leave
and
push
push
aas
sub
int3
inc
scas
push
push
add
dec
test
loop
lret
cmp
sti
jle
test
iret
mov
lods
dec
cwtl
fidivs
add
cmp
insl
or
mov
inc
dec
lea
push
cld
push
lcall
push
add
jle
pop
jmp
lahf
mov
and
mov
lock
dec
jp
hlt
inc
adc
jbe
inc
sbb
jns
xor
or
stc
jecxz
mov
cmpsb
ficoms
add
or
cmp
int
or
js
lock
aam
out
pop
inc
xor
push
xchg
xchg
fstps
pop
out
jae
subl
push
cs
js
dec
push
cmp
xchg
je
or
out
jae
loop
push
adc
or
jae
imul
frstor
xchg
andb
push
addl
cltd
inc
sti
lock
cmp
sbb
cltd
push
fldl
xchg
sbb
cmp
xchg
cmp
jg
or
scas
pop
cltd
test
sub
sbb
std
je
inc
mov
fsubr
jge
jno
ret
mov
xchg
sbbl
arpl
das
adc
pop
mov
imul
fnstenv
and
test
dec
mov
and
fwait
sub
or
mov
jmp
int3
or
arpl
stc
mov
js
arpl
mov
jne
inc
dec
push
mov
push
bound
xchg
mov
in
pop
clc
pop
aam
mov
sub
push
js
xchg
call
mov
push
rep
shr
std
repz
inc
or
fcoms
push
adc
mov
jge
inc
fldl
popa
xchg
lock
loopne
mov
sub
pushf
inc
sub
dec
mov
dec
jns
jmp
pop
shl
pushf
inc
xchg
clc
rorb
mov
cli
mov
mov
iret
inc
adc
jle
jns
rorl
pop
push
sbb
rolb
mov
fs
add
imulb
inc
insl
cli
jb
lock
or
loop
or
roll
jl
mov
pop
out
stos
jno
adc
mov
mov
lret
cmp
out
push
sti
jmp
test
out
mov
ljmp
dec
cmp
cmc
loop
iret
mov
lahf
xchg
cmp
and
ss
lock
mulb
mov
arpl
and
and
pop
mov
arpl
and
enter
push
imul
in
or
mov
test
xchg
push
or
arpl
repnz
jns
lahf
test
cmp
cmpsl
rol
fisttpll
divb
cwtl
adc
pop
dec
and
jo
dec
loop
pop
in
xor
arpl
add
push
push
shr
dec
adc
mov
movsl
or
lcall
insl
inc
cwtl
mov
sbb
pop
lahf
test
jge
pop
test
sub
cwtl
xchg
ljmp
arpl
test
inc
hlt
gs
es
in
stc
dec
andl
mov
fs
daa
xchg
loopne
cltd
xchg
pop
inc
inc
fwait
shlb
adc
push
rcll
insl
imul
in
add
ret
pop
mov
pop
push
imul
std
lock
fiaddl
test
insl
jge
es
les
addr16
inc
cwtl
lods
inc
fldenv
xchg
in
pop
mov
imul
xor
push
adc
enter
sbb
enter
jmp
rolb
dec
test
leave
test
sbb
int
mov
adc
pop
and
popf
mov
mov
jge
test
out
jb
setge
rol
mov
insb
test
fists
orl
xchg
les
mov
sbb
sub
add
fdivl
and
jnp
das
add
outsb
test
ret
add
stc
les
mov
stos
mov
or
mov
add
adc
pop
pop
push
inc
pop
jmp
scas
sub
std
mov
adc
cs
cmp
jecxz
xchg
mov
popa
inc
out
dec
pop
inc
ss
cmp
xor
add
xor
add
jmp
xchg
clc
fimull
sbb
or
and
in
test
push
mov
test
loopne
xchg
movsb
test
xchg
xchg
insl
and
cld
cs
fcomi
jle
rcr
ljmp
pop
mov
lret
outsl
dec
aad
push
dec
dec
push
or
les
pop
inc
rcl
insb
sub
ret
mov
in
cld
loop
add
cmp
sbb
sahf
js
nop
movsl
out
xchg
loop
fnstenv
mov
inc
sbb
and
and
or
lods
aas
pushf
mov
cmpsl
push
jg
movsl
dec
xorb
cwtl
daa
sbb
mov
fistl
or
test
in
add
mov
xchg
jecxz
add
pop
dec
fnstenv
adc
aad
dec
inc
in
push
lds
daa
sub
mov
jnp
cltd
mov
xor
mov
jae
sub
int3
xor
shl
adc
jge
mov
jne
jae
pop
dec
jnp
sub
push
adc
jl
lret
lock
sub
insb
mov
sbb
or
or
jl
pop
aad
lret
pusha
outsl
cmc
in
push
xchg
outsb
inc
cmpsl
out
mov
sub
movsl
mov
gs
lods
sbb
lcall
clc
lret
add
and
jle
mov
dec
mov
in
stc
xorb
and
lods
lock
mov
pop
mov
ja
sbb
enter
jg
loope
clc
sbb
testb
dec
cmp
outsl
scas
pop
sti
aas
cmp
loope
mov
insb
push
mov
call
mov
iret
sti
pop
js
or
dec
int3
in
adc
cmpsb
push
ret
mov
mov
lret
orl
imul
stos
movsl
das
jae
ss
cli
xchg
push
add
sub
fstpt
push
adc
jne
pop
xor
jp
dec
roll
xchg
fisubl
stc
mov
in
test
ss
in
enter
sub
fistl
dec
cltd
rcrb
cmp
and
aaa
pop
and
sub
mov
add
out
rcl
in
popf
mov
adc
shlb
pop
inc
push
ror
dec
ficoml
fcmove
push
sub
imul
pop
in
sarl
cmpsl
pop
leave
xchg
or
mov
imul
aaa
out
outsb
test
xchg
rorl
lods
adc
add
fs
inc
aaa
cs
int3
sbb
dec
repnz
adc
mov
push
orl
cs
aam
std
lods
adc
out
cmp
jno
push
pop
in
pop
addl
lcall
out
icebp
push
insb
lret
jno
fadds
mov
mov
inc
and
jne
and
mov
lods
testb
cwtl
xchg
loopne
out
inc
adc
fbld
add
mov
jg
lret
lock
loopne
call
xlat
in
imul
es
xchg
sbb
pushf
sbb
into
lret
cli
scas
iret
pop
sub
jl
dec
sahf
jecxz
add
scas
test
mov
sub
inc
or
popa
dec
push
mov
out
or
adc
aas
stos
xchg
data16
dec
popa
lods
pushf
jne
sbb
mov
movl
inc
inc
lcall
lods
mov
mov
fs
into
out
sbb
out
int3
jle
xor
sub
or
xchg
inc
daa
repz
jbe
cmp
push
outsb
inc
ja
ret
clc
mov
insl
scas
into
push
repz
sbb
out
cltd
sbb
cmp
cmpsb
inc
idiv
mov
es
adc
xorb
mov
mov
pop
bound
cmpsl
sub
fldln2
add
mov
outsl
sub
mov
addr16
dec
push
inc
out
push
out
sahf
fidivl
lods
popa
sahf
loop
fsubs
movsl
rcll
mov
sub
add
mov
or
push
adc
jg
jbe
repnz
iret
in
jo
mov
mov
movsb
sbb
push
popa
jg
in
inc
xchg
adc
stc
lret
jb
imul
test
mov
ja
popf
fmuls
sub
leave
inc
loope
pop
cli
mov
lcall
pusha
cmp
inc
in
stc
ss
daa
jle
aaa
mov
inc
push
jns
pop
cmp
xorl
push
push
roll
inc
mov
xchg
inc
test
fwait
mov
fsubrs
mov
dec
sub
test
xor
adc
add
insb
cwtl
push
in
sub
mov
stc
mov
mov
test
pop
or
stos
loop
repz
sub
rcl
fnstsw
pop
dec
pop
andl
movsl
xchg
jl
lahf
popa
in
shll
mov
jp
ds
xor
xchg
call
mov
or
jp
scas
and
pop
bound
cmp
ret
push
rep
sbb
movsl
repz
mov
sub
cmp
mov
mov
add
inc
pop
mov
pusha
dec
sbb
out
xlat
lea
mov
fcompl
adc
ja
notb
jnp
clc
xchg
xchg
fwait
repz
adc
jle
cmp
inc
push
mov
xchg
incl
or
mov
mov
mov
pop
mov
aaa
pushf
cmp
lods
outsb
and
sbb
in
lods
cmp
nop
jae
jmp
jae
sbb
sub
adc
jnp
push
push
jno
adc
or
aas
fiaddl
pop
sbb
pop
sarb
add
push
subl
mov
xor
or
call
jp
mov
test
mov
das
cmp
icebp
jb
decl
cmp
or
lods
ss
repnz
pop
out
insl
add
ror
sub
mov
add
pop
add
mov
std
pop
push
sbb
test
mov
mov
mov
gs
xchg
mov
xor
adc
adc
or
mov
or
in
or
stc
push
out
testb
in
mov
lds
enter
rcrl
rorl
stos
jle
test
mov
push
imul
dec
push
adc
dec
dec
mov
dec
pop
daa
out
mov
filds
mov
pop
les
xchg
or
jecxz
xchg
js
inc
xor
mov
mov
mov
add
xlat
dec
les
sbb
cltd
movsl
mov
cmpl
test
cld
push
movsl
loop
in
fstpl
xor
loop
shlb
dec
rclb
pop
lods
ret
cmp
dec
out
call
pop
push
push
mov
mov
xchg
xor
icebp
sub
repnz
ja
sbb
in
std
imul
lea
pop
std
pop
les
xchg
pop
enter
xor
aam
rcl
repnz
mov
sahf
or
fidivrl
pushf
mov
orl
dec
frstor
scas
inc
or
fld
sbb
js
or
das
cmp
push
sbb
xor
subl
jo
nop
cmp
mov
out
lock
adc
jne
aam
fdiv
nopl
ljmp
incb
cmpsb
push
nop
out
lds
jp
ret
pushf
mov
sahf
jge
jp
inc
in
cmp
addl
rcrl
sub
xor
rol
cmp
inc
xor
mov
jns
add
mov
push
daa
mov
sub
les
int3
ds
mov
mov
xor
sbb
mov
in
fldt
mov
sahf
movsl
addr16
outsl
inc
mov
inc
aas
mov
dec
mov
fstpl
adc
insb
movsl
call
nop
adcl
cmc
aas
aam
or
add
pop
adc
lods
jb
leave
sbb
loop
enter
push
xlat
jae
filds
push
stos
mov
nop
add
mov
loop
cmp
test
sub
adc
pushf
loope
mov
add
mov
pop
jno
adc
mov
fsubr
inc
adc
insl
movsl
xor
cli
scas
mov
cmp
call
ja
and
es
sti
cmp
fldenv
xchg
pop
sub
mov
sbb
data16
dec
cmp
sub
mov
jecxz
mov
jns
mov
sarb
dec
and
sub
mov
jecxz
or
out
adc
test
fisttpll
xor
notb
and
shl
int3
cmp
in
push
push
inc
inc
lods
sbb
imul
cld
aam
cwtl
push
xchg
lock
pop
idivb
movb
pusha
xchg
xor
jl
xchg
or
mov
adc
dec
js
aad
das
jecxz
fs
cld
xchg
sbb
pop
daa
sub
movsl
movsb
mov
push
or
add
mov
inc
jnp
lret
jge
sarb
and
rorb
lea
call
adc
adc
stc
cmp
rcrb
mov
pop
mov
divb
push
dec
in
lret
mov
imul
xchg
pop
inc
mov
lods
or
pop
nop
lahf
or
ret
pop
test
jle
das
cmp
aas
fists
aaa
aad
sbb
inc
in
or
outsl
cltd
loop
js
sub
mov
add
test
ljmp
jmp
or
mov
add
pop
push
jle
lea
add
mov
and
sub
sbb
into
loope
dec
int3
scas
xor
xor
or
xchg
punpckhdq
int
out
out
data16
call
in
inc
mov
pop
pop
cmp
aas
pop
xor
push
jnp
js
xchg
push
inc
cli
mov
jp
xlat
push
inc
nop
mov
inc
test
jge
dec
xor
jb
jmp
je
xor
int3
adc
aad
test
test
sbb
or
sbb
jmp
jg
add
out
loope
test
sub
jge
jmp
sbb
lods
insl
inc
jmp
cmp
xchg
mov
sbb
std
call
sub
lds
cld
fcomps
pop
insl
lods
int
stc
lcall
sbb
inc
or
rorb
aas
add
inc
xchg
xor
pop
enter
or
push
mov
jg
xchg
out
int3
lods
lods
xchg
out
lods
popf
xchg
insl
sub
inc
and
stc
xor
stos
xchg
push
inc
pop
lods
mov
testb
inc
inc
xor
push
cli
outsb
mov
lcall
dec
xor
mov
pop
xor
sbb
cld
loopne
dec
js
jge
mov
push
repnz
and
jmp
pop
sti
mov
cs
inc
int
pop
sbb
jo
cmc
ja
int3
loop
mov
je
daa
shlb
dec
pop
inc
imul
hlt
cwtl
imul
sub
hlt
cmpsb
mov
sub
in
jns
adc
dec
aad
lcall
inc
rcrl
rcll
mov
pop
push
out
and
movsb
clc
mov
sbb
or
push
add
and
dec
pmulhuw
cmpsl
les
mov
jle
lods
xchg
jmp
jno
cltd
mov
or
sbb
adc
and
cmc
jmp
cmp
fisttpl
es
cmc
dec
pop
mov
mov
mov
test
int3
add
imul
adc
add
jo
jae
mov
insl
push
inc
mov
or
cli
jle
test
push
mov
mul
and
pop
push
adc
stos
xchg
and
dec
adc
test
in
adc
int
loope
loop
mov
test
cmp
inc
push
scas
jmp
aad
ret
into
mov
xchg
mov
xorl
lock
add
mov
aaa
push
imul
je
scas
aas
inc
in
adc
sub
mov
sub
cmp
mov
hlt
cmp
scas
lea
sbb
fnstsw
cwtl
movsl
jp
pop
pop
cld
shrl
fistpl
mov
inc
mov
or
and
pop
insl
comiss
dec
fcmovu
mov
into
pop
je
ds
push
add
inc
jo
or
mov
cld
arpl
sbb
push
arpl
mov
and
dec
stos
ret
imul
fisubl
rcrb
es
repz
xchg
in
sbb
cmp
jbe
inc
jno
pop
icebp
mov
and
pop
xchg
xor
mov
addr16
jmp
add
inc
adc
sub
cmpb
in
sub
adc
jmp
sub
jbe
nop
sbb
fwait
adc
jns
push
xor
and
lahf
aas
cli
add
jnp
add
stos
cli
xchg
sahf
icebp
mov
and
pop
scas
repnz
dec
sbb
mov
rcll
cmpsb
nop
adc
jmp
arpl
dec
test
push
mov
inc
inc
cmpsl
cs
int3
int
rcll
cmp
imul
add
or
add
lock
mov
jl
imul
test
mov
mov
in
enter
pop
jb
adc
das
pop
in
mov
test
pop
sbb
pop
xor
add
jno
sub
or
lret
les
pop
mov
push
add
xchg
stc
xor
xor
stos
fs
jo
icebp
push
lcall
cmp
pop
dec
mov
mov
jmp
sbb
rcl
aaa
xor
dec
mov
cwtl
cli
push
imul
or
lods
outsb
movsl
sub
dec
push
fdivl
fimuls
clc
call
shll
sbb
fsubrl
mov
sahf
push
and
lods
mov
push
ror
testb
xchg
lret
cmp
scas
out
popa
addr16
pop
mov
jne
cwtl
jl
inc
cmc
or
mov
and
sub
aad
xchg
add
dec
sbb
xor
mov
inc
stc
sbb
dec
bound
add
aad
hlt
in
pop
xchg
inc
xor
lea
in
cmpb
in
xchg
jecxz
ja
push
insb
shll
aad
gs
fwait
lret
sub
aad
push
push
cmpsb
cmp
mov
push
insb
dec
xor
jge
mov
dec
out
pop
daa
nop
xor
mov
daa
les
jae
lahf
arpl
mov
pop
in
pop
rcl
int
push
adc
out
subl
xor
test
in
push
jmp
mov
push
lcall
aaa
call
xchg
lcall
sbb
popf
into
xor
hlt
in
xchg
andl
popa
insb
mov
pop
int
dec
mov
jo
adc
jnp
lahf
lret
sbbb
int
mov
mov
mov
sub
divb
cli
imul
and
outsl
pop
push
push
in
shll
sub
and
lret
jmp
sub
stos
lods
xchg
push
dec
or
push
push
inc
cltd
mov
xchg
adc
mov
movsb
xchg
inc
inc
pop
mov
sbb
adc
add
mov
in
and
or
xchg
mov
cmovo
or
pop
jns
add
outsb
and
sub
dec
scas
cs
popf
shl
leave
mov
jne
sub
inc
movsl
fisubs
push
add
imul
das
add
jne
aaa
shrl
jecxz
or
aas
xor
adc
mov
dec
push
leave
push
cli
cmp
loope
cmp
bswap
fnstenv
rcr
push
pop
enter
cmpsl
mov
or
inc
ds
decb
push
movsl
sub
lret
lds
xchg
pop
into
lcall
sbb
ja
push
inc
xor
cmc
out
push
stos
adc
enter
push
adc
pushf
fwait
mov
addb
lcall
ja
jnp
dec
cltd
push
in
into
push
int3
int
and
mov
imul
test
fwait
rclb
jne
imul
and
inc
pushf
jae
fcoms
outsb
out
testb
in
push
stos
leave
insl
leave
push
xchg
jb
in
je
enter
std
addl
mov
cmp
xchg
test
pop
ss
addr16
mov
add
dec
fwait
xchg
test
lahf
mov
aaa
jle
push
repz
fsubs
clc
fcoms
dec
mov
imul
or
sbb
icebp
push
jle
mov
shrl
and
or
sbb
into
in
push
ret
sbb
xchg
dec
cs
enter
imulb
jae
mov
dec
inc
ljmp
or
lret
ja
stos
mov
dec
cs
add
dec
popf
add
mov
mov
loope
xchg
lcall
xor
mov
stc
sarb
and
pop
inc
dec
mov
xchg
sbb
popf
mov
mov
sbb
pop
mov
sbb
sub
imul
cwtl
nop
in
into
lds
xchg
inc
rorl
pushf
sub
clc
scas
or
pop
hlt
je
mov
add
repnz
lods
popa
aaa
scas
ss
aad
push
sub
mov
dec
mov
add
insb
rolb
jle
enter
cmp
mov
xchg
xchg
fldl
mov
outsl
dec
pop
mov
or
mov
add
and
sbb
mov
adc
sbb
jae
idivb
fs
xchg
push
cmpsl
cmpsl
lods
dec
stos
scas
test
mov
sub
push
test
mov
int3
pushf
sub
push
mov
pop
fdivs
jae
push
sbbl
mov
mov
shlb
lods
sbb
mov
inc
mov
sub
sub
and
mov
dec
in
mul
adc
ljmp
popf
sbb
add
or
ret
cwtl
call
fcompl
mov
loope
fbld
jp
mov
mov
pop
je
outsl
cmpb
mov
and
mov
xor
stos
cmpsb
mov
mov
hlt
testl
cmp
rorb
imul
jg
movsb
and
popa
adc
daa
adc
jae
cmp
cmp
add
xor
push
jns
sbb
inc
imul
jp
out
ds
jmp
or
sbb
jne
push
jg
insb
ret
jbe
jp
lods
int
push
das
cmp
outsl
xchg
shl
pop
in
sub
shlb
or
insb
outsb
in
icebp
into
dec
jns
sbb
jns
nop
cmpsb
sub
push
into
sahf
repz
push
push
mov
fxch
ja
dec
mov
js
jecxz
sub
sbbb
scas
sbb
jmp
aam
sbb
mov
movsb
fisubs
pop
fisttps
pop
sub
shrl
bound
mov
cli
out
lods
fwait
loope
sub
dec
inc
and
fistpll
data16
mov
hlt
jecxz
sub
ljmp
icebp
push
xchg
jg
test
lods
pop
add
out
pop
int3
pop
fists
in
sarl
inc
out
popa
mov
outsl
mov
cld
push
cltd
sarb
pop
jle
jmp
ficoms
scas
pop
cmp
f2xm1
jne
and
push
add
in
dec
sbbb
or
xor
jl
mov
int
sub
and
shl
insl
insl
fimull
mov
leave
jle
sbb
jne
mov
out
cmp
xchg
cs
and
loop
iret
pop
inc
iret
lahf
or
mov
js
dec
ficomps
and
dec
out
int3
jnp
aad
inc
sub
movb
xchg
jle
scas
sti
add
jb
push
outsb
jns
jle
push
movsb
cmp
das
test
push
lahf
aad
ret
ss
cmp
push
pop
cmpsl
mov
xor
cmp
push
sahf
popa
push
mov
in
call
cmpsl
mov
push
push
xor
mov
mov
out
inc
iret
mov
icebp
icebp
inc
lods
popf
xchg
pop
ret
out
ds
es
sub
lcall
mov
clc
dec
dec
stos
divl
testb
fsubrl
fdivrl
daa
cltd
fsubrp
aad
dec
test
fnstcw
pop
xor
mov
jnp
repz
inc
aaa
scas
cmpb
mov
or
jp
ljmp
and
test
daa
addr16
adc
arpl
sti
iret
xorb
in
ficoms
test
std
adc
sub
test
push
pop
inc
icebp
mov
pop
cli
or
jb
outsl
sub
daa
fwait
addr16
call
or
ja
popa
cld
pushf
adc
mov
mov
cmp
inc
cmp
in
or
jnp
and
sbb
xor
popa
lea
push
mov
xchg
hlt
xlat
mov
ss
insb
mov
xor
out
icebp
inc
scas
gs
pop
movsb
cwtl
call
and
cmp
test
jae
jecxz
imul
or
dec
mov
xchg
out
push
enter
mov
xor
orb
cmp
sub
lods
addr16
pop
jnp
in
fadds
adc
mov
mov
or
inc
mov
sbb
int3
in
or
sahf
int3
jp
in
sub
push
sbb
imul
loope
lcall
push
xlat
push
imul
inc
jns
lret
jae
add
nop
jb
mov
jl
mov
adc
or
daa
dec
insl
mov
xchg
mov
nop
stos
inc
mov
sbb
sub
xchg
xor
mov
test
mov
push
ja
test
aad
insl
and
dec
xchg
xor
mov
mov
out
xor
lods
and
outsb
sub
mov
mov
into
cltd
insb
das
lret
cld
rcrl
cwtl
adc
push
cmp
mov
scas
add
cmp
mov
mov
sub
cmp
mov
jg
ss
xor
inc
xor
std
pop
pop
stc
mov
jne
lcall
or
xlat
jbe
pop
rcrl
cmp
xchg
xchg
cmp
and
push
mov
adc
pop
dec
jecxz
xchg
das
into
xchg
ss
pusha
mov
das
push
dec
lock
fstps
dec
lods
pop
dec
cwtl
xchg
dec
mov
inc
fildl
inc
sbb
pop
scas
lret
mov
mov
cmp
filds
std
clc
stc
je
xor
mov
push
mov
call
stc
std
sbbb
out
shl
lods
pop
jno
jp
mov
enter
mov
add
je
shl
dec
jge
sub
ret
popa
cwtl
sahf
pop
xor
popf
adc
cmp
push
push
sbb
es
std
outsl
push
out
mov
xor
or
adc
mov
repnz
cmp
cmp
leave
rcr
lahf
sub
dec
aam
test
sub
cmp
enter
repz
push
cwtl
fdivl
mov
push
in
fdivl
inc
mov
pusha
cmp
push
cmpsl
pop
ds
out
dec
jnp
sub
cli
rcll
fs
lods
js
pop
in
call
pop
scas
mulb
cmp
outsb
push
mov
mov
mov
int
xor
filds
rcrb
pushl
jmp
fdivrs
out
mov
cmp
ljmp
adc
push
cli
jecxz
cmpsb
mov
shlb
and
shll
inc
push
js
pushf
pop
cmp
pusha
mov
jecxz
cld
push
mov
push
mov
cmp
not
jns
sub
std
xchg
gs
xor
inc
dec
sbb
push
imul
iret
dec
bound
jo
jp
jl
cld
sbb
bound
cld
sbbl
cli
pop
scas
imul
xor
lods
mov
cmpsb
jl
mov
bound
adc
gs
xlat
lea
and
dec
cmp
sbbl
jge
lret
divb
sbb
sub
mov
add
pop
sbb
mov
clc
bound
mov
mov
adc
jb
push
repnz
call
inc
or
mov
mov
or
movsb
push
or
or
iret
add
enter
loope
and
enter
enter
icebp
mov
leave
mov
mov
call
xchg
sub
jbe
and
insb
cmp
push
or
push
mov
jmp
cmc
loope
sbb
inc
xchg
push
cld
adc
leave
cmp
mov
mov
or
shl
fidivrl
sub
sub
adc
cmp
push
movsb
mov
push
loope
jne
loope
in
sbb
xorb
cmpsb
loopne
mov
jle
jns
or
sbb
lcall
jle
shll
sub
adc
popa
mov
mov
inc
insb
jns
push
sahf
in
mov
loop
jmp
mov
in
jo
mov
sbb
mov
scas
pop
data16
inc
fbstp
jae
jns
cmpsb
adc
cmpsl
stos
popf
pop
cmc
pop
adc
int3
pop
dec
daa
fdivs
cmp
enter
fcompl
pop
leave
out
js
dec
shlb
in
jecxz
addl
mov
fcmovnbe
dec
lahf
int
mov
rcrl
andb
cmpsb
adc
xor
aaa
jmp
inc
push
loop
cmpsb
dec
addr16
imul
aam
bound
pop
shrl
flds
int
mov
sahf
rorl
jle
fisubl
outsb
xor
sub
fstpl
pop
mov
mov
ja
jp
imul
push
imul
push
loopne
pop
es
fistpll
sarb
pusha
adc
lcall
xor
fsubrl
push
gs
cmp
adc
sub
or
jnp
jne
cmpsl
adc
clc
aam
push
filds
lret
inc
outsb
dec
cwtl
mov
pop
xor
mov
lret
leave
sub
cmp
xlat
stc
and
inc
or
pop
or
xchg
push
push
jne
and
clc
popf
sbb
loope
outsb
sbb
push
fadd
aam
lcall
aas
in
and
push
arpl
jb
shlb
pop
sti
jo
cmc
adc
lret
je
and
jmp
notb
clc
push
out
jns
jb
incl
roll
notl
addr16
int
pusha
popa
xchg
mov
xorb
ficomps
in
roll
divl
aam
push
out
and
pop
inc
mov
mov
popa
cmpsb
mov
out
stos
inc
jns
cmpsl
pop
ljmp
insl
xor
out
hlt
dec
lods
sbb
pop
pop
push
jno
xorb
int
movsl
rolb
inc
dec
daa
pop
fnstsw
sub
or
add
mov
dec
xchg
and
mulb
imul
in
push
into
sbb
mov
lds
popf
cmp
push
ret
adc
xchg
inc
inc
add
ret
mov
cmc
out
sbb
fisubs
test
sbb
jns
xchg
xchg
inc
mov
jno
out
pop
orl
orl
dec
lds
popa
adc
mov
movsb
test
js
mov
lods
inc
sbb
mov
jo
or
cmp
xor
notl
rorl
loope
mov
pop
inc
adc
xchg
pop
callw
in
lret
sbb
daa
outsl
pop
scas
xchg
lods
sbb
data16
mov
sahf
fildl
subb
pop
in
sarb
pop
cmc
jae
or
repz
stos
cli
mov
sti
mov
negb
repnz
push
mov
cwtl
in
fisubrl
xchg
jp
push
hlt
stos
push
or
jp
and
xor
fidivrs
bound
mov
jmp
andl
insl
push
jb
loope
in
andl
dec
mov
jbe
inc
xor
jb
subb
test
rclb
jp
add
arpl
outsl
xchg
je
outsl
scas
and
cmpsb
mov
jo
mov
hlt
jmp
sahf
push
and
out
xchg
fadds
pop
add
lods
xlat
sub
add
sub
sub
adc
popf
xor
shl
push
test
dec
mov
dec
cmp
repz
cmp
ljmp
sbb
jno
adc
call
les
xor
and
xchg
int
pop
add
push
dec
jecxz
pop
or
leave
mov
imul
cmp
jnp
cmp
add
aaa
jmp
mov
enter
mov
mov
push
adc
inc
dec
xchg
repnz
jl
sub
out
insl
inc
mov
dec
imul
dec
dec
fnstsw
adc
or
repz
stos
stos
hlt
jae
mov
xchg
jg
mov
out
rorl
adc
movsb
ret
lds
lahf
or
or
sub
dec
nop
insl
outsl
push
pop
sarb
mov
mov
iret
mov
mov
pop
dec
xchg
mov
leave
sub
popf
leave
cmpsl
cmp
mov
add
xor
cmp
cmp
push
adc
je
push
xchg
nop
ds
and
add
imul
jmp
movb
adcb
xor
jae
loopne
fwait
mov
push
xchg
sub
or
xor
leave
xchg
sub
ja
idivb
leave
in
dec
dec
dec
pop
xor
mov
inc
xchg
jbe
mov
cmc
xor
insb
outsb
stc
push
xchg
and
aaa
js
push
pop
mov
or
movsb
adc
cld
fmul
jmp
fistpll
and
adc
mov
js
push
insb
les
aaa
cmp
dec
sbb
fistpll
mov
push
nop
aaa
push
ret
push
push
xchg
mov
cld
xor
aad
add
daa
hlt
cli
std
insl
sub
stos
xchg
pushl
lret
repz
xlat
scas
or
lds
ret
push
into
addl
cmp
shlb
jnp
xchg
push
outsb
xchg
mov
rcll
or
sbb
pusha
add
dec
loopne
das
test
daa
push
lods
mov
pop
cmp
mov
xor
fisubrl
rorl
xor
xchg
inc
les
aas
insb
dec
das
mov
mov
sub
jp
and
cli
jno
imul
gs
stc
pop
repnz
hlt
inc
repz
imul
pop
in
inc
call
call
fnsaves
insl
mov
ds
jl
or
add
push
adc
lahf
cmp
dec
jecxz
mov
xchg
jge
pop
xlat
movsb
jp
fcoml
sbb
xor
jmp
xchg
stos
push
mov
icebp
mov
call
das
test
in
push
mov
mov
in
in
test
in
sbb
cmpsl
pusha
inc
cmp
in
aad
lods
cmpsb
int3
xchg
cwtl
or
sbb
inc
in
data16
imul
push
xchg
fildl
hlt
test
push
out
test
sbb
daa
add
cmpsl
jge
addb
mov
xor
jmp
jmp
das
cmc
xrelease
or
pop
iret
je
ljmp
mov
mov
cs
lahf
add
cmpl
pop
in
int3
insl
in
cltd
xor
pop
fs
xor
lds
jo
mov
out
push
rclb
std
push
mov
xor
and
pop
dec
mov
es
test
jle
adc
cmp
xchg
out
andb
in
fsubp
lods
add
jl
push
std
fucom
enter
mov
mov
fcmovnb
int
mov
sub
inc
bound
icebp
mov
pop
xor
mov
outsb
add
ds
movsb
jno
loope
jl
addr16
push
dec
sub
mov
fnsave
mov
mov
rcll
or
mov
daa
rorl
ds
dec
ficoml
les
cmp
xor
sbb
movsb
sti
mov
pop
push
test
movsb
rorb
lock
fmull
call
xchg
insb
push
lahf
sbb
jns
inc
pop
aas
ja
enter
outsl
mov
mov
inc
jb
jmp
loop
arpl
sbb
cltd
mov
je
pop
sti
popl
loope
ret
cmp
lcall
gs
jg
sub
insb
push
test
pop
add
bound
repnz
fs
movsl
arpl
movsl
imul
xlat
mov
addr16
js
push
cltd
pop
xchg
mov
adc
mov
rcr
andl
aam
jns
insl
in
mov
pop
adc
mov
into
cmp
call
scas
or
xor
push
mov
int3
or
xor
orb
inc
inc
scas
fistl
insl
pop
push
jp
subl
test
xlat
jle
fldcw
mov
test
xor
jecxz
movsb
loop
push
daa
inc
fisttpll
jp
fbstp
shll
push
inc
lret
inc
cmp
call
ja
and
fisubs
repnz
dec
jo
mov
ss
xor
mov
sbb
xchg
pop
mov
mulb
add
and
pop
ds
push
mov
xor
rclb
xor
adc
in
adc
dec
test
stos
and
ds
xchg
push
xor
pusha
or
cwtl
xorl
xchg
push
jns
push
sub
movsb
mov
jne
jae
lahf
cmc
out
movsl
push
mov
sub
cs
mov
loopne
mov
push
inc
hlt
mov
ficoms
inc
cmp
jge
les
lods
inc
bound
push
xor
mov
dec
scas
in
int
outsb
mov
movsb
jp
stos
stos
das
adc
out
push
dec
popf
das
jl
pop
xor
pop
jecxz
or
imul
or
sub
cmp
push
mov
mov
adc
ss
inc
mov
mov
loop
lods
icebp
pusha
movswl
rorl
jle
ss
lcall
mov
dec
add
and
lea
je
fsin
mov
test
sbb
daa
jmp
mov
jge
jg
rcr
adc
ret
out
xor
sbb
vorps
or
adc
stos
std
insb
push
jge
orl
adc
roll
or
jae
jl,pn
aam
push
inc
test
sbb
inc
mov
mov
jns
xchg
xor
sbb
out
les
inc
fnstcw
nop
idivb
pop
adc
xor
test
stc
aas
cmpsb
jecxz
mov
aam
lds
aaa
fdivrs
jmp
in
push
aas
es
dec
push
repz
jecxz
and
mov
daa
pop
mov
pop
ljmp
fsubr
cmp
fnsave
jae
xchg
mov
adc
pushf
xchg
xor
xchg
mov
stos
and
loopnew
mov
mov
sti
popf
dec
hlt
jns
dec
dec
icebp
test
jne
je
pusha
pop
mov
mov
sbb
inc
mov
lock
dec
and
jb
js
pushf
pop
and
call
cmpb
cld
mov
sbbl
in
jo
dec
cmp
sbb
mov
mov
sbbl
inc
mov
mov
xor
mov
pop
dec
icebp
jnp
dec
cmc
xchg
mov
and
sub
or
cld
push
loopne
jg
daa
fdivr
sbb
sbb
scas
xchg
mov
push
test
int
inc
sub
and
xlat
adc
movsl
pop
pop
in
fists
sub
pushf
jb
and
mov
or
cmp
or
inc
stos
mov
xor
cmpsb
pop
out
cmp
je
test
addr16
sub
mov
jne
mov
pusha
fcompl
adc
insl
jg
pop
scas
ljmp
and
xchg
imul
dec
decl
es
sub
cwtl
pop
mov
scas
mov
pop
jbe
cltd
xchg
adc
lock
andb
aaa
cmp
imul
pop
sbb
movsl
dec
add
inc
mov
jmp
pop
xor
push
mul
xchg
dec
dec
inc
sti
rcr
testl
adc
nop
js
sbb
xchg
push
outsl
loopne
aam
jmp
fpatan
in
out
mov
repnz
dec
inc
ret
jb
mov
sbb
lahf
testl
mov
loop
aaa
jns
mov
sbb
div
mov
enter
adc
mulb
push
cmp
test
cmp
xchg
sub
mov
imul
add
jecxz
ret
jmp
fbld
add
mov
testb
push
mov
cmc
sarb
push
nop
or
lret
and
inc
outsb
mov
ljmp
pop
dec
cmc
sub
insl
jne
and
mov
sub
dec
sahf
mov
lret
int
test
lret
insb
push
xor
ja
mov
xchg
lea
frstor
pop
mov
inc
ljmp
mov
xchg
adc
fimull
sub
gs
fisubs
mov
mov
dec
sbb
lret
daa
ss
in
repz
add
xchg
pop
mov
idivl
fsts
mov
jbe
and
fcoms
xor
cltd
pop
xor
add
jne
dec
inc
sahf
hlt
test
xor
aad
jl
movsb
sub
ret
mov
aad
aad
push
popf
jg
cmp
lret
data16
aam
pop
fisubrs
nop
popf
daa
jbe
and
mov
add
sbb
adc
ficoms
mov
fldenv
xchg
ficoms
push
ss
shrl
loop
pusha
aad
test
push
iret
sub
shrl
fdivrl
add
sbb
push
es
cmp
push
leave
adc
fidivl
or
sub
pop
mov
xchg
mov
daa
into
cwtl
xchg
in
cmp
push
cmpsb
sbb
jns
mov
mov
call
push
fadd
mov
sbb
push
cli
xchg
dec
inc
adc
xchg
adc
inc
sahf
or
push
cmp
push
pop
stc
xlat
xlat
fstps
ja
insl
std
push
fxch
cmp
jb
rorb
pop
adc
imul
ficoml
pop
xchg
mov
rorb
jo
cwtl
inc
shl
xchg
or
negb
loope
inc
pop
push
cld
xchg
inc
dec
jg
or
pushf
push
mov
jbe
test
sub
gs
lret
loope
sbb
rcrb
hlt
adc
outsb
push
lock
sbb
lea
mov
jns
fstpt
scas
testl
das
xor
xor
push
sub
inc
inc
inc
fdiv
bound
out
mov
sub
adc
mov
and
fistps
or
mov
jo
and
mov
mov
push
outsb
jne
jnp
push
fwait
mov
dec
arpl
push
push
jae
jo
jae
rcrb
ljmp
adc
imul
push
push
aad
xchg
jno
out
xor
jl
stos
add
mov
inc
in
imul
pop
push
jmp
add
js
jmp
aad
cmp
repnz
imul
fcoml
add
test
push
loope
add
incb
push
testb
std
push
add
jg
add
mov
add
jno
sub
scas
lret
cmp
add
mov
lea
cwtl
mov
add
pop
xorb
pop
dec
push
cmc
cmpsb
mov
dec
ret
loop
insl
ja
cmp
sbb
push
or
leave
test
pop
xor
push
jecxz
daa
cli
mov
jp
mov
mov
push
pop
scas
xchg
mov
cmpb
jo
mov
push
xchg
loope
mov
jmp
inc
lahf
ret
push
push
outsb
ret
divl
mov
sbb
jae
cmpsl
and
jo
out
jmp
les
dec
aad
mov
fstpl
movsl
inc
cmp
or
cltd
cmp
dec
inc
sub
cmc
es
xchg
test
sub
aam
sbb
cltd
ret
mov
stos
cmp
xor
push
icebp
test
xchg
testb
jne
sti
icebp
sbbb
jp
leave
and
jmp
sbb
jecxz
pop
xchg
call
push
fs
adc
shlb
test
xor
sbb
and
pop
lock
adc
gs
xor
jno
or
inc
push
cmp
outsl
adc
adcb
fsin
pop
push
fisubrl
lock
push
pushw
out
xchg
cmp
fmuls
sbb
out
sbb
push
mov
sbb
lods
jecxz
test
sub
loop
pop
add
out
push
ret
out
ja
dec
fcmove
or
ds
jle
in
ror
dec
fstl
aad
stc
outsl
mov
cli
cmp
repnz
dec
dec
and
fsubl
aam
in
aam
rcl
cltd
sub
push
mov
push
insl
leave
jnp
jmp
dec
shl
pop
loop
into
xor
dec
call
int3
cwtl
or
loope
push
push
sbb
cld
inc
mov
outsl
popl
imul
call
pop
leave
jne
jbe
jge
ret
cmp
inc
decl
ret
xchg
add
cs
leave
gs
cltd
jl
cmp
pop
int
mov
add
add
mov
dec
movsb
pop
or
sbb
mov
inc
or
jnp
stos
push
test
mov
lock
xchg
pop
in
lret
cltd
xor
mov
cmp
xor
xchg
sbbl
adc
adc
jmp
xor
movsl
ret
fcompl
adc
loopne
sub
cltd
loopne
jb
cmp
lret
lcall
pushl
sub
outsl
mov
and
loopne
push
mov
cmp
dec
sbb
and
or
mov
clc
test
fcmovbe
iret
mov
dec
inc
pop
dec
aas
cmp
mov
jg
pushf
xor
negl
test
movsl
mov
dec
hlt
mov
xor
mov
adc
movsl
jb
cmp
das
xor
pminsw
out
sub
mov
ret
ffreep
cltd
iret
fcoms
push
lretw
mov
mov
lods
in
ret
stos
jl
and
jg
fsubl
frstor
jg
and
jecxz
hlt
mov
push
je
add
dec
scas
pop
unpckhps
adc
xor
xchg
lods
fisttpll
inc
aaa
lret
fnsave
test
insb
adc
xor
xchg
sbb
arpl
mov
movsl
cld
insb
inc
cli
pop
mov
inc
mov
sbb
mov
out
jge
fcom
call
pop
pop
push
test
cld
cmp
jg
cmc
push
movsb
pop
jo
sbb
mov
dec
in
das
jbe
inc
es
add
cli
loope
aam
ret
adc
add
xchg
push
pop
lcall
jnp
lods
hlt
dec
loop
movsb
inc
adc
inc
aam
aas
rcl
sbb
pusha
sbb
adc
jge
imulb
and
jns
ljmp
ja
sub
inc
jmp
cwtl
fst
rcrl
push
jp
iret
mov
dec
dec
push
mov
push
mov
ja
push
aad
jnp
aad
daa
fldcw
push
cwtl
out
in
xchg
movsl
sub
and
jp
in
js
test
repnz
or
mov
cmp
mov
push
bound
rolb
xchg
xor
sahf
mov
cli
subb
imul
sti
xor
xlat
and
adc
sbb
push
in
das
lcall
test
inc
sbb
mov
test
lea
rol
rcrl
mov
push
mov
xchg
mov
div
pop
and
jle
or
iret
push
jl
nop
xor
xchg
xchg
les
jl
ror
ds
das
pop
and
mov
test
sahf
add
inc
jne
cmp
lds
jns
repnz
pop
sub
lods
sbb
lds
movb
xchg
movsl
dec
arpl
icebp
or
jmp
and
fidivl
jge
dec
fcmovnbe
push
test
mov
sub
mov
lret
lret
pop
cli
in
movhps
jmp
or
sbb
loope
jne
rep
loop
addr16
movl
pop
xlat
jno
clc
pop
inc
mov
out
pop
mov
rorb
mov
call
xor
bound
popl
fs
jg
ja
leave
xchg
push
std
lahf
pushf
bound
out
test
pop
sbb
dec
sub
aam
lods
lcall
loopne
dec
xchg
or
xchg
dec
pop
test
call
push
xchg
sub
or
cmp
xlat
mov
std
cmp
sbb
in
mov
dec
fimull
jns
jmp
xchg
or
mov
push
shlb
dec
out
lds
pop
dec
xchg
mov
sahf
std
xchg
fwait
insl
fistl
cmp
lcall
in
inc
test
fisubrl
cli
arpl
jns
add
add
repnz
sub
fdivs
popa
mov
fcoms
pop
mov
decl
cli
or
enter
repz
sbb
cmc
push
push
out
xorb
mov
cli
fistl
loop
mov
testb
mov
mov
mov
xor
inc
mov
mov
xor
fcoms
clc
inc
push
in
sbb
xor
xchg
fwait
push
sub
mov
lods
sarb
adcl
out
jmp
aaa
stc
jp
pop
xchg
mov
adc
cmpsb
jne
les
decb
and
adc
fimull
subb
xchg
stos
mov
movsb
out
shl
xchg
add
out
cli
adc
lcall
mov
int
call
scas
xor
adc
mov
in
ss
mov
shrb
lcall
outsl
cli
push
sub
in
dec
loop
mov
lcall
aam
add
or
inc
flds
pop
mov
mov
stos
pop
movsl
sbb
mov
outsl
mov
aas
daa
push
add
adc
lock
scas
pop
inc
xor
xor
out
lods
stos
les
sub
mov
inc
stc
out
mov
dec
into
pop
aaa
pop
popa
out
ficompl
and
cmp
jecxz
in
adc
xor
jno
xchg
fcoms
std
and
sub
je
and
int3
cmp
xchg
sub
rcl
testb
aad
mov
jb
cmc
adc
adc
cmp
dec
adc
iret
lods
rorl
cmp
stos
mov
jp
lods
inc
or
sbb
cmp
stos
cld
add
leave
mov
test
mov
and
sbb
insb
out
mov
sbb
pop
stc
dec
lret
adc
mov
xchg
dec
xor
pushf
sahf
into
pop
mov
add
ja
cmp
mov
xor
inc
jo
loop
imul
and
jge
xor
sbb
cwtl
pop
mov
pop
inc
les
mov
pusha
js
mov
mov
xor
arpl
adc
ret
addr16
inc
add
push
insb
add
xor
fsts
jge
mov
call
adc
pushl
ljmp
dec
lock
lods
pop
out
mov
cs
dec
daa
enter
ret
cmp
push
pop
arpl
jmp
aaa
popf
into
push
mov
xchg
call
mov
mov
addr16
and
arpl
inc
mov
inc
enter
in
pop
mov
aam
cld
cmpsl
mov
jb
in
insl
jle
ret
pop
mov
push
cmpsb
nop
lahf
and
jbe
mov
xor
repz
movsl
add
and
in
mov
jmp
or
pop
shll
mov
push
adc
in
data16
hlt
xor
mov
xchg
jmp
sahf
pop
xchg
fs
addr16
xchg
lock
pop
hlt
ds
jmp
cmpb
rolb
andl
dec
testl
out
call
inc
push
das
jecxz
stos
xor
lcall
mov
insb
adc
and
mov
cmp
ljmp
call
sbb
out
mov
stos
aam
or
jl
mov
add
lea
int3
and
scas
jmp
xor
cmp
mov
imul
ds
or
test
sti
pop
dec
js
les
and
stos
mov
sub
lret
fisubs
inc
loop
mov
push
int3
sahf
mov
jno
adc
jmp
aas
fldenv
out
mov
jae
out
outsb
sti
jnp
insl
sbb
aaa
xor
fldt
push
inc
flds
mov
mov
ret
cmp
jnp
pusha
sub
pop
push
das
pop
call
mov
cli
dec
inc
inc
into
mov
mov
xor
movsb
in
enter
xor
cmp
inc
mov
repz
jmp
daa
mov
in
enter
daa
jbe
das
int3
add
add
mov
lahf
pop
mov
int3
sub
insl
jo
pop
xchg
inc
cmp
pop
push
pop
jp
lods
in
fwait
leave
push
mov
dec
cmpsl
pop
mov
mov
sbb
lods
xorb
mov
pop
xchg
pushf
fistps
outsb
mov
sbb
data16
mov
rcr
inc
cmp
dec
rclb
sbb
xchg
push
cmc
sub
incl
and
push
pop
xor
jg
jmp
call
rcr
js
mov
xchg
aad
push
je
cmp
mov
push
dec
jns
stos
and
jns
jae
lret
push
xchg
sbb
add
xchg
mov
push
adc
mov
loopne
mov
incb
and
cmpsl
outsb
fmulp
push
xor
fidivrs
pop
add
and
or
jns
filds
insl
fimull
into
mov
inc
pop
enter
call
cmc
dec
sbb
lret
push
mov
or
xchg
mov
loop
shrb
push
xchg
mov
mov
inc
cmp
sbb
out
push
and
mov
cmp
xadd
incl
pusha
addr16
divl
mov
sbb
sbb
xorb
adc
xor
pop
pop
adc
in
into
cmpsl
pop
mov
movsl
fcmovbe
aad
movsb
sbb
lcall
push
jg
pop
lahf
out
pushf
or
scas
xor
mov
and
xor
daa
cmpsl
jb
shrl
scas
xor
push
cs
cs
inc
inc
mov
sub
popl
out
mov
inc
insl
ja
cld
push
jl
lahf
push
int3
jb
push
or
gs
push
mov
in
cmpb
sbb
adc
cmp
dec
xchg
test
xorb
mov
or
les
in
sbb
mov
xor
mov
imul
sub
popa
sti
xchg
fsubrl
push
data16
daa
out
das
jbe
mov
aaa
paddusb
lods
inc
int3
mov
stos
inc
or
xchg
push
xor
popf
jmp
sub
mov
jg
decl
fucomp
push
jecxz
jne
movsl
xor
sti
push
sbb
pop
jmp
rol
dec
hlt
jecxz
push
cld
out
ret
imul
push
lret
add
inc
dec
lret
jae
mov
adc
ds
test
cmpb
dec
fsqrt
rcr
imul
jmp
jae
in
sti
fldl
jecxz
cmp
mov
pushf
outsb
iret
fcompl
fwait
push
cltd
and
push
out
push
ja
mov
jl
xchg
repz
pop
add
cmc
push
mov
xor
lahf
push
mov
je
or
and
scas
xchg
xchg
call
push
xor
xor
push
push
push
xchg
rcrl
pusha
push
add
xchg
aad
fiaddl
xchg
sahf
pop
dec
sbb
out
enter
in
mov
push
js
cmp
insb
test
aad
xor
imul
cltd
push
ret
fwait
xor
ror
xchg
idivb
inc
fdivp
push
dec
push
add
cmp
adc
nop
jg
mov
or
add
inc
scas
xor
repz
mov
mov
sbb
mov
aam
in
mov
push
xor
sub
into
subl
or
pop
inc
int
lcall
cmp
andl
push
aas
out
lea
mov
arpl
pop
mov
jo
test
add
fisubl
aad
cwtl
shrb
fldenv
sub
js
out
sub
dec
sub
lods
mov
sti
mov
jns
lcall
lods
sahf
sbb
sbb
and
aas
movsl
jmp
jle
sbb
mov
or
push
push
add
pop
arpl
sbb
inc
xchg
push
lock
ljmp
cltd
outsb
das
jno
sub
mov
popf
inc
jge
mov
bnd
xlat
imul
dec
cmp
sub
jae
mov
jo
cs
and
loope
mov
mov
sub
fsts
lret
xchg
inc
mov
inc
nop
mov
push
adc
es
into
or
shlb
inc
out
sti
sub
test
jg
cs
xchg
sub
shl
push
shl
insl
push
data16
inc
clc
sub
fdivs
mov
xchg
pop
adc
dec
iret
das
sbb
xor
add
loop
xor
and
xchg
pop
add
fcomps
cltd
lahf
push
jge
enter
addr16
lahf
sbb
push
cmp
out
ja
into
inc
lret
outsl
cmp
mov
iret
push
pop
pop
data16
sub
mov
inc
int3
jle
jne
insb
and
cmpsb
repz
ret
stc
aam
adc
in
sub
imul
lods
into
and
loop
push
fwait
movsl
sub
mov
xor
push
sbb
jge
inc
iret
ljmp
mov
popa
xchg
xor
push
jp
ljmp
imul
idiv
and
leave
repz
xor
adc
rcr
jns
sbb
fimuls
jmp
sub
ja
arpl
ficoml
inc
cmpsl
push
cmp
push
jg
push
andb
pop
rorl
jle
xor
pop
cmpsl
js
add
out
call
xor
in
in
mov
dec
pop
call
cmpsl
adc
les
xor
inc
imul
jne
stos
inc
outsb
sbb
push
inc
cli
push
call
jg
cmpsb
mov
int
sub
xor
insl
jbe
in
outsl
cmpsb
mov
imul
daa
xchg
push
es
push
loopne
cmpsl
repnz
push
push
xchg
flds
push
int3
outsl
andl
enter
dec
leave
push
mov
gs
xchg
cmpsl
inc
cmp
lcall
xor
xchg
mov
scas
sub
adc
ljmp
dec
mov
push
xor
cmc
pslld
push
lock
xchg
scas
and
pop
adc
daa
and
dec
add
add
cmp
imul
and
int
or
mov
movsb
fcoml
lock
sub
fistl
xchg
pop
pop
xlat
add
sub
lahf
mov
xchg
lock
cmp
inc
outsl
lods
jmp
mov
clc
cltd
jno
push
cmp
xor
xor
mov
xchg
aaa
xor
lock
scas
retw
dec
xor
jo
cmp
add
insl
sahf
xor
adcl
imulb
test
xor
mov
xor
sub
mov
mov
xor
push
int3
cltd
adc
dec
jne
cmp
cmp
and
leave
mov
mov
adc
pop
lds
sub
or
mov
sub
xlat
sub
inc
sub
negl
cli
cmp
push
movsl
leave
and
es
sub
or
and
adc
cld
jno
mov
dec
movsl
xor
adcb
xlat
jns
sbb
jmp
adcb
cmpsb
xchg
inc
ja
dec
ljmp
sbb
stos
scas
arpl
jl
mov
sbb
stos
imul
xchg
sahf
fsubrs
mov
pop
xchg
ds
mov
jle
ret
and
sbb
aaa
in
test
in
jno
leave
jp
mul
shrb
push
arpl
ljmp
cld
xchg
in
mov
mov
into
rol
mov
push
fbstp
mov
test
mov
enter
lods
aam
pop
cltd
lods
pop
ficompl
mov
adc
ja
sti
xchg
leave
imul
shlw
lock
pop
fs
xlat
orl
push
out
mov
fldcw
or
cltd
jbe
pop
push
mov
jl
adc
xchg
mov
dec
insb
fisttpll
push
repz
sbb
jnp
sbb
sbb
cli
andl
inc
push
ja
add
xchg
loopne
gs
pop
and
sub
xchg
adc
jne
xchg
adc
jns
inc
ss
mov
push
stos
pop
loope
out
xchg
idivb
pop
jns
mov
ret
insb
sbbb
xlat
arpl
fdivl
mov
aas
inc
mov
cld
sbbb
mov
jo,pn
push
out
test
pop
add
dec
enter
loopne
pop
cmp
lods
dec
push
jge
clc
out
pop
mov
loop
push
lcall
ja
jge
in
rorb
add
loopne
xor
mov
mov
jne
push
int3
add
fadds
aam
ficoms
popf
inc
test
in
xor
sub
pop
inc
ret
enter
dec
lahf
icebp
fistl
enter
xorl
popl
dec
shl
arpl
ljmp
mov
pop
fldpi
push
ljmp
jno
xchg
lahf
jmp
cmp
mov
adc
sub
fisubs
xlat
inc
and
int3
pop
inc
cwtl
mov
and
flds
pop
enter
xchg
cmc
jne
inc
out
mov
sub
std
cmc
sbb
mov
xor
insb
lods
pop
pusha
loop
pusha
ja
es
cli
xchg
fimuls
or
and
pop
jge
test
pop
jp
adc
inc
fisubrl
lahf
insl
rolb
xorb
lahf
sbb
mov
xor
adc
fst
test
mov
or
test
or
data16
and
add
ror
inc
cld
mov
dec
ret
addr16
fiadds
imul
add
lods
add
add
or
cld
xor
fs
xlat
test
push
lret
mov
cmp
push
dec
lea
mov
sub
lea
xchg
or
push
outsb
stos
stc
sahf
mov
jbe
stos
hlt
and
outsl
aaa
xchg
jmp
out
push
pop
jle
mov
inc
mov
pop
and
shrl
icebp
jb
inc
sahf
pop
test
jo
popa
repz
mov
inc
mov
xchg
jno
ss
pop
mov
sti
iret
fiaddl
sarl
mov
jae
xchg
mov
je
sub
movsl
fs
add
jo
and
arpl
cmp
sahf
mov
gs
inc
lds
jle
clc
jmp
imul
daa
adc
mov
ljmp
push
sub
cmpsl
add
sub
faddl
pop
jne
cmp
nop
or
mov
cltd
in
pop
inc
loop
lock
pop
jmp
push
lret
mov
sbb
adc
mov
add
jb
mov
fldt
jne
add
test
dec
daa
mov
and
dec
loopne
loop
push
mov
or
lret
popf
stc
insb
testb
roll
push
fbld
mov
mov
pusha
mov
push
lea
pop
or
stc
add
repz
xor
xchg
lret
jmp
loope
bound
mov
in
or
xchg
jno
mov
test
cs
dec
pop
and
cmp
pop
out
push
test
rcrb
sarb
dec
in
dec
pop
sbb
insl
and
sbb
in
sub
jne
jno
or
push
inc
inc
mov
out
femms
mov
mov
fimull
int3
cmp
dec
ret
mov
jp
lods
cmp
lret
pop
iret
adc
ret
push
jmp
imul
xlat
pop
aad
push
jmp
jl
xchg
dec
outsb
fwait
insl
mov
mov
fwait
mov
cmc
aas
test
mov
fmulp
and
lds
sub
ret
xchg
sti
aas
push
aaa
add
cmp
test
fwait
mov
inc
pop
movsl
lret
idivl
xchg
movsl
mov
sbbb
mov
sub
dec
push
jmp
xchg
arpl
leave
mov
mov
scas
inc
add
arpl
add
int3
mov
add
dec
xor
bnd
pxor
add
push
fdivl
and
pop
out
mov
pusha
push
mov
mov
sahf
mov
popf
cmc
repz
js
add
pop
repnz
fidivl
jns
adc
pop
dec
cmpsl
imulb
xor
test
xor
or
cli
lret
or
lcall
dec
or
movsb
mov
sahf
jo
leave
int
mov
mov
mov
aaa
xchg
cli
cmpsb
push
call
out
je
dec
shr
xor
ljmp
mov
add
imul
inc
mov
repnz
ficoml
cmc
pop
xor
jle
ret
ja
pop
loope
xchg
lea
dec
ret
fwait
adc
fmuls
or
inc
mov
repnz
ret
insl
inc
clc
stos
fisubl
inc
cmc
xorb
xorl
ja
inc
inc
pop
icebp
enter
cmp
mov
add
es
call
in
pop
or
xchg
dec
ja
data16
movsl
pop
pushf
adc
adc
sbb
mov
push
or
push
shr
outsl
pop
out
jnp
call
xchg
sub
movsb
call
push
xor
fcompl
adc
pop
test
aam
movl
sbb
das
push
loopne
mov
in
pop
out
arpl
mov
jne
sbb
std
push
cs
jnp
mov
lock
cmpsl
insb
dec
push
cmpsb
sbb
xchg
and
out
cmc
ss
popf
pop
icebp
shrl
je
icebp
cmp
push
ljmp
mov
fwait
pop
std
xor
jl
inc
xchg
sahf
pusha
fiaddl
cmpsb
scas
scas
dec
mov
push
lcall
shrb
mov
adc
or
loop
adc
pusha
sbb
mov
ss
dec
movsb
fdivl
lds
pop
or
notb
stos
sub
into
pop
ss
or
adc
je
cltd
test
outsb
loope
fidivs
jns
fidivrl
dec
or
jle
mov
jo
sub
mov
cmp
fbld
mov
mov
popa
in
push
sbb
outsb
mov
inc
xchg
lods
js
popa
in
sti
mov
inc
fiaddl
cmp
inc
jnp
das
test
cld
imul
mov
pop
fwait
sub
sub
movsl
sub
negl
fcoms
pushf
outsl
mov
mov
fldcw
out
push
and
mov
jp
mov
cli
sbb
arpl
dec
and
jbe
roll
jb
sub
xchg
inc
pop
xchg
pop
mov
add
insl
nop
out
xchg
nop
push
sarb
lcall
repnz
nop
fstp
movsb
jl
insl
add
sbb
dec
adc
les
cmpsb
imul
js
push
dec
call
stos
mov
xchg
repnz
test
test
jno
inc
dec
xor
jb
dec
cld
scas
mov
sbb
sub
push
stos
stc
add
rolb
arpl
mov
stos
jne
mov
adc
push
inc
sbb
add
mov
and
push
shr
lret
frstor
mov
sub
int
dec
jge
push
mov
or
pop
ret
mov
add
dec
push
and
xlat
xor
subl
inc
cmp
push
mov
insl
xlat
push
stos
sbb
aam
mov
and
test
mov
popa
lahf
fcoml
sbb
and
cmp
dec
scas
inc
popf
dec
ss
pop
outsb
adc
xchg
push
loop
xor
xchg
cmpsb
into
rcrl
sbb
dec
test
pop
cwtl
fidivrs
les
sbb
dec
sub
mov
jl
mov
in
adc
inc
inc
pop
push
and
test
cmp
push
mov
das
cmp
shl
push
aam
imul
inc
movsl
lcall
jnp
jecxz
xchg
and
mov
mov
adc
xor
adc
jge
subb
pop
int3
adc
mov
rol
sub
add
nop
cwtl
pop
xchg
pop
lcall
inc
mov
mov
pop
dec
lods
mov
ret
les
cs
fwait
bound
aaa
mov
dec
jno
movsl
push
xchg
test
rclb
stos
movsl
jo
jbe
shld
xor
pop
enter
mov
lods
mov
push
mov
jl
aaa
mov
rcr
or
cmp
mov
add
dec
fnstenv
pop
push
jo
jmp
xor
xchg
mov
out
fbld
fstl
dec
fwait
lods
stc
adc
test
or
add
int
xchg
jle
jno
dec
ljmp
xor
adc
cli
imull
out
imul
sub
lds
shll
mov
inc
push
jle
adc
jns,pt
sbb
push
jecxz
mov
inc
and
mov
rol
rclb
mov
cmp
push
mov
or
pushf
mov
out
cmc
jbe
adc
ljmp
hlt
adc
aaa
or
jns
ds
shll
jp
fidivrs
mull
adc
cmp
dec
insl
movsl
lcall
call
sbb
mov
mov
jl
cwtl
imul
stos
out
das
jae
mov
dec
mov
add
dec
das
sbb
out
cld
and
in
cmp
mov
ficompl
or
into
pop
jmp
jl
je
fidivrl
loop
push
mov
pop
sub
decl
insl
mov
daa
mov
ljmp
pop
lds
and
mov
xor
sub
mov
outsb
in
fimuls
jo
sub
stos
xlat
cmp
cmp
nop
cmp
push
or
std
enter
mov
out
loop
out
mov
sub
or
gs
sub
cmp
mov
fdivr
data16
jmp
clc
addb
pop
cmpsl
and
jmp
cmp
aam
xor
or
lds
sarl
enter
push
loope
rol
jns
std
jl
leave
adc
fsubl
scas
pusha
jle
cmp
sbbb
or
inc
popa
inc
add
pop
les
les
jl
loop
mov
stos
in
jecxz
jmp
mov
jge
js
fwait
jle
xchg
pop
xchg
rorl
mov
cmp
push
push
dec
jno
mov
mov
inc
mov
out
xor
pop
pusha
inc
push
imul
mov
or
jnp
es
mov
lods
popa
xchg
jnp
in
rol
and
lds
add
dec
in
add
push
hlt
sbb
addr16
cmp
and
dec
fs
add
inc
mov
jno
orb
test
cld
and
xor
xor
pop
jecxz
mov
lock
cmc
fwait
adc
pushf
loope
js
roll
mov
cmp
xor
and
int
jnp
push
mov
xchg
movsl
cmp
cmpsb
cmp
lea
jp
xchg
repz
iret
inc
sub
mov
stos
jbe
mov
pop
push
inc
loopne
add
pusha
arpl
xchg
lcall
lds
mov
mov
xchg
push
sub
loopne
mov
add
dec
pop
mov
push
and
fwait
stos
aas
jmp
xchg
jge
sub
inc
repz
adc
lret
mov
xchg
fcomi
out
xchg
adc
jg
ljmp
mov
and
inc
out
xchg
xchg
out
cli
pop
mov
sub
movsl
pop
or
ljmp
aam
jns
xor
cmc
stc
enter
pop
sbb
jg
xor
push
notl
cwtl
jl
shl
test
or
pop
adc
arpl
lds
pusha
pop
cld
cli
pop
aaa
fdivrl
fiaddl
popf
bound
dec
inc
push
fistpl
inc
pop
nop
inc
roll
xchg
cld
mull
xor
sub
pushf
push
fadd
nop
mov
dec
jns
sti
sbb
das
pop
inc
jne
js
ror
xor
sbb
mov
fisubs
jp
inc
lahf
jno
andb
or
mov
outsl
or
add
ds
pop
daa
call
mov
mov
out
or
cmp
cwtl
inc
rep
jmp
enter
jnp
cmp
gs
pushf
lahf
jl
sbb
pusha
sbb
mov
cmpsb
pop
pop
xchg
push
fildl
jne
popa
xor
jb
pop
dec
out
or
xchg
aaa
and
xor
mov
ficoml
out
or
mov
xchg
call
fnsave
inc
adc
hlt
int
jbe
scas
cld
sub
fwait
lahf
xor
xor
ds
je
pop
push
xchg
add
jae
xchg
pop
gs
imul
or
push
pop
fbstp
popf
adc
pop
les
lret
jecxz
lds
pop
mov
les
clc
and
int3
pop
mull
push
je
cmpb
push
ffreep
and
mov
inc
sbb
outsb
movsl
fbld
cli
clc
inc
js
mov
jmp
xchg
and
pop
push
sub
mov
pop
and
inc
mov
aaa
dec
and
psllw
loop
mov
adc
out
lea
int
test
addr16
js
ds
mov
ja
sbb
out
pop
push
in
popl
xchg
mov
fdiv
mov
add
cmp
mov
push
push
push
inc
jg
filds
nop
fcompl
ret
jle
mov
mov
arpl
scas
xchg
or
add
in
inc
pushf
and
popf
enter
pop
popf
adc
push
mov
in
outsb
dec
cmpsl
ret
les
out
mov
xor
push
jecxz
shlb
out
and
inc
xor
xor
lds
ds
aas
mov
sbb
mov
mov
dec
cmp
enter
inc
push
add
outsb
add
out
push
in
mov
shrl
cmpsl
jge
pop
inc
or
dec
aas
repz
repnz
xchg
pop
mov
leave
cld
shl
lea
xchg
pop
jle
lods
shl
mov
aas
enter
repz
imul
sar
mov
bound
sbb
jg
push
orb
pop
cmp
fdivrl
rdtsc
dec
idivl
sub
clc
sub
mov
sarl
cwtl
xchg
pop
jne
push
out
shrb
ret
inc
add
jmp
mov
sti
mov
popaw
outsb
lret
and
fdivs
jg
cli
cmp
xor
shl
inc
mov
dec
pop
sbbl
jecxz
test
or
pop
jo
cmp
jp
movsl
pusha
mov
or
out
sub
sub
aad
in
loopne
js
adc
jo
out
adc
ret
leave
adc
into
jge
pop
in
and
sbb
outsb
mul
je
loope
cmp
lock
hlt
mov
pushf
mov
lea
insl
leave
fdivs
sub
inc
pand
push
jne
movsb
popf
inc
or
lods
daa
add
jle
shll
cmp
mov
int3
xorl
and
xchg
xchg
pop
pop
lods
int
fldcw
in
mov
sub
dec
pop
test
dec
icebp
out
arpl
stos
add
into
fwait
xchg
ja
repnz
sbb
jo
arpl
jbe
std
cmovb
or
je
mov
lds
or
jp
popa
xor
and
xlat
mov
test
push
test
dec
add
and
mov
mov
mov
or
pop
mov
mov
or
lds
fwait
aad
xchg
cs
aam
push
dec
scas
add
xor
push
pop
test
pop
push
clc
mov
std
or
mov
shl
inc
mov
inc
loopne
insl
add
lock
fimuls
push
lds
pop
dec
and
sbb
cmp
fistps
pop
inc
movl
or
ds
add
mov
lcall
hlt
xchg
cmpb
lret
out
insb
leave
xor
jge
mov
nop
push
lcall
add
roll
movl
push
jl
xor
mov
xchg
cmpsb
jge
add
je
dec
pop
mov
jg
gs
mov
mov
and
in
ja
push
mov
sbb
and
daa
adcb
aam
imul
cmpsb
cmp
lahf
subl
inc
xchg
leave
mov
sbb
xor
xchg
jb
lret
sub
pop
adc
shrl
mov
int
into
arpl
sbb
repz
and
sar
cmp
sub
add
ja
xchg
push
jns
sub
mov
jns
imul
mov
xchg
mov
les
pop
icebp
aad
dec
aad
test
mov
rcll
fildll
dec
jo
das
xchg
xor
fcomps
jns
cmpsb
mov
jbe
es
pushf
push
lds
cld
adcl
fdivp
stos
add
dec
cmpsb
jecxz
or
push
pop
mov
add
pusha
ret
divl
pop
or
cmp
arpl
dec
or
mov
xor
dec
xor
cmp
jl
int
ds
out
xchg
ja
fwait
jl
fnsave
in
mov
push
mov
loop
push
mov
hlt
ret
js
dec
xor
out
in
xor
jge
lea
ljmp
stos
leave
sbb
in
les
mov
xchg
mov
add
data16
fwait
cmc
js
sahf
cmp
xchg
xorl
and
lods
sbb
imul
leave
jno
ret
lods
sti
lods
jnp
add
or
iret
pop
jecxz
xchg
sbb
stos
clc
ficomps
cltd
aam
mov
cmpsb
outsb
push
iret
in
adc
sarl
cmp
movsb
int3
xorl
push
inc
sub
add
shrl
psubd
fmuls
xlat
cli
mov
fcom
stos
sub
clc
cmp
mov
lods
imul
ret
das
into
aas
mov
adc
sarl
repnz
popf
xor
int
cmpsl
inc
mov
xchg
bts
stos
add
jb
xchg
jae
inc
mov
mov
jns
jne
mov
inc
or
xchg
push
mov
stc
jo
mov
jp
pop
aad
aam
mov
aas
push
addl
movsb
js
mov
gs
shl
out
in
and
inc
or
clc
cmpsl
mulb
jmp
add
inc
pop
dec
fcomps
pop
jmp
leave
and
sbb
mov
cmp
and
xor
dec
cld
mov
jmp
nop
in
adc
insb
sbb
jg
sub
jmp
xor
pusha
sti
test
ja
xor
call
cs
dec
dec
test
int
jmp
daa
pop
imul
pop
mov
fwait
mov
out
mov
pop
xor
xchg
ja
cwtl
lock
cld
pop
sub
xchg
in
daa
jmp
loope
fldl
and
lods
push
cld
xchg
lea
push
push
cltd
inc
xchg
mov
cmp
addr16
sbb
mov
push
fwait
push
sahf
fwait
pop
pop
mov
add
jo
lret
push
pop
popf
jbe
js
and
mov
or
mov
subl
out
dec
xchg
lcall
arpl
cmpsl
mov
scas
test
push
jae
das
orl
sub
ds
mov
push
mov
add
addl
imul
les
jae
sub
cmp
lods
or
aas
lret
xchg
sub
inc
mov
mov
insl
add
stc
cmp
jb
je
pop
shlb
clc
or
out
cmp
subb
jns
mov
sub
rcr
jno
inc
mov
mov
cmp
inc
leave
dec
mov
adc
je
ret
ja
sahf
xorb
push
or
mov
es
fadds
cmpsb
mov
sub
pop
sbb
mov
fs
push
mov
iret
jae
pop
jmp
ja
andb
mov
sbb
cmp
lods
aaa
rolb
inc
push
test
mov
cmp
or
ret
in
push
jns
push
fdivrl
jne
addps
dec
pmuludq
mov
nop
ja
fldl
push
outsb
fcmovu
cs
cld
int3
mov
out
stos
mov
cmpsb
xor
hlt
inc
mov
jl
pop
bound
or
mov
int
push
pop
cmp
stos
imul
jae
leave
xor
fstps
pop
mov
mov
xchg
sub
push
xor
daa
cwtl
pop
or
bound
pop
ds
aaa
test
aam
sbb
aad
cmc
mov
xor
sahf
leave
jg
add
mov
xor
loopne
jecxz
aas
mov
sahf
dec
loop
sbbb
jno
cmc
pop
jp
into
or
stc
pop
ljmp
or
jmp
ljmp
out
aaa
xchg
fildl
cmpsb
hlt
addb
leave
xchg
out
call
fistpl
cld
mov
leave
iret
repz
in
roll
and
pushf
xor
test
adc
or
pop
shlb
dec
fsubrs
xchg
pop
scas
das
xor
or
pop
insl
push
in
mov
mov
sub
out
xchg
hlt
push
imul
nop
ljmpw
lret
mov
cmpsb
scas
sbb
dec
cwtl
in
cs
cmp
dec
push
mov
daa
sti
dec
xorb
fisttpll
fdivrs
or
inc
out
pop
scas
cmpsb
or
inc
and
das
xchg
nop
xchg
jge
push
fcompl
clc
and
bound
pop
add
test
stos
mov
mov
dec
rol
xchg
dec
mov
adc
pop
data16
dec
xchg
mov
sub
mov
int
jl
mov
outsb
xchg
loope
in
mov
cs
mov
add
lcall
dec
inc
mov
in
adc
pop
outsl
mov
ja
xchg
jg
xchg
mov
push
jb
cmpsw
mov
sub
jecxz
ror
add
lds
lods
jae
arpl
lahf
xor
xor
test
xchg
mov
lods
test
lcall
xor
aas
xor
hlt
or
or
jbe
xchg
dec
pop
into
xchg
mov
xchg
add
cmp
cwtl
ljmp
xor
pop
pop
mov
in
rcrb
and
mov
add
sahf
push
pop
adc
cmp
les
sbb
sbb
or
mov
int
test
jmp
xchg
jae
mov
add
adc
jle
test
fisubs
fwait
push
int
cmp
test
cwtl
in
pop
push
fldt
int3
cmc
or
testl
pusha
icebp
and
pop
add
test
scas
push
dec
stos
and
out
cmpsb
in
mov
fstp
cld
repnz
push
cmp
insl
sbb
mov
pop
or
push
inc
xchg
clc
imul
jle
jl
lcall
stos
int
adc
jp
cmp
scas
leave
nop
add
scas
jl
push
fstps
xchg
pop
sbb
mov
xor
sub
xchg
fs
cs
jmp
imul
xor
fdivr
fwait
outsb
mov
loopne
jecxz
out
jecxz
jbe
jo
jmp
dec
and
std
cmp
or
incl
mov
push
iret
fisttps
bound
mov
in
sbb
in
fstpt
sub
pop
cmp
or
cmc
pushf
lcall
mov
aas
inc
fs
dec
dec
clc
xor
outsb
push
mov
or
add
rolb
orb
fcoml
pop
dec
jl
pop
aas
xlat
inc
cltd
or
ss
mov
arpl
sub
push
xchg
out
fdivr
icebp
cld
cs
and
xchg
mov
inc
dec
dec
or
bound
pop
cmpsl
mov
mov
call
or
test
rclb
rorl
pop
push
xchg
jl
xchg
add
vcvttss2si
adc
mov
ret
in
pushf
test
adc
out
ret
cmp
cmp
xchg
push
mov
fiaddl
aad
test
dec
jns
cs
push
js
or
rcrb
jecxz
mov
sbb
cli
adc
dec
aad
sahf
gs
addr16
iret
mov
jno
mov
pop
pop
push
inc
test
test
push
xchg
stos
add
inc
dec
lret
subl
push
push
repz
mulb
imul
cmp
jmp
push
mov
call
std
gs
in
in
add
ja
jl
push
cmpsb
pop
fninit
fwait
xchg
test
insl
test
mov
or
shlb
clc
cmp
sbbb
ds
cwtl
lret
push
cmp
jbe
inc
jmp
cmp
fistpl
push
push
push
test
int3
jmp
pop
add
cs
rcr
popa
mov
insl
ss
out
loopne
mov
arpl
pusha
outsl
xchg
pop
jg
mov
push
or
xchg
mov
dec
pop
aaa
rcrl
jb
and
mov
les
adc
fmull
lret
mov
mulb
xchg
int
stc
addr16
movsl
int3
int
push
push
add
punpckhdq
aaa
pop
jns
frstor
popl
sub
jp
nop
loope,pn
jg
fistl
outsb
sbb
sahf
add
lock
adc
loope
add
inc
shr
pop
sub
jne
sbb
and
js
cmp
xchg
mov
fsts
sbb
loopne
std
mov
jae
mov
xor
xchg
stos
cmpb
sbbl
cmp
fwait
cmp
int
xchg
popa
enter
dec
jae
inc
sub
mov
jne
or
push
or
sub
daa
lcall
sbb
mov
push
xchg
je
arpl
sbb
loopne
test
arpl
push
imul
mov
pop
iret
arpl
ret
push
xor
es
shlb
int
shll
xchg
and
cmp
loopne
push
dec
add
cs
jp
fldt
rcrl
out
or
loopne
f2xm1
pop
addr16
jp
mov
iret
setge
repz
adc
fisttpll
decl
popa
add
sub
mov
vorps
mov
loop
stos
jae
aam
mov
fisubrs
orl
mov
inc
mov
out
cltd
mov
mov
pop
aam
sub
scas
mov
push
out
mov
mov
push
sub
nop
push
xlat
mov
xor
repz
xchg
addb
xlat
out
inc
or
dec
loope
dec
xchg
lahf
arpl
add
out
out
loopne
sub
jno
cmp
mov
jp
loope
lds
roll
add
idivb
js
fcompl
mov
in
inc
mov
mov
sbb
clc
fisttpll
frndint
and
lds
mov
xchg
jnp
inc
inc
push
mov
hlt
daa
mov
sbb
shrl
inc
jbe
push
jbe
in
jle
inc
in
movb
mov
mov
rorb
cmpb
xchg
xchg
dec
fbstp
pop
fidivs
and
sti
fisttps
aad
add
adc
or
jecxz
sub
or
jmp
jmp
fstpt
mov
xor
dec
pop
mov
leave
mov
mov
sub
fcompl
pop
and
imul
dec
cmpsl
pop
test
mov
sub
das
jo
inc
cmp
xorb
mov
dec
mov
insl
sub
xor
dec
xchg
into
in
push
lret
pop
pop
sbb
das
aas
jne
add
iret
mov
lret
cld
lock
push
aas
imul
dec
cltd
stos
dec
sub
nop
sbb
mov
mov
jmp
push
sbb
and
jmp
sub
dec
imul
sub
outsb
into
repz
and
push
fsubs
xor
shlb
lcall
outsl
bound
pop
call
stos
pop
fidivl
or
ret
imul
xchg
mov
jmp
nop
xchg
lcall
cmp
call
adc
addr16
xchg
mov
pop
mov
in
fmuls
push
push
mov
xor
shll
mov
aad
cmc
int
xor
ficoml
mov
ficompl
xchg
shll
icebp
mov
sub
lea
push
cs
rclb
mov
jmp
hlt
leave
push
or
mov
imulb
cmp
add
loopne
jmp
jns
and
push
stos
push
pop
fadds
add
scas
xor
icebp
and
imul
into
les
push
push
aas
sbb
cwtl
in
pop
pop
mov
test
mov
stc
add
sub
add
sub
jge
push
lods
pop
jnp
enter
mov
pop
loope
push
loopne
icebp
je
rcrl
pop
enter
mov
xchg
or
xchg
fdivl
inc
jge
pop
mov
enter
push
add
jg
fcoml
add
divl
mov
into
xchg
and
movsb
cmp
pop
cmc
hlt
xorl
test
inc
lret
mov
shll
imul
aad
adc
sbb
xor
into
sbb
rcrl
sbb
mov
xor
es
in
xor
jno
dec
clc
sbb
std
aam
popa
dec
or
data16
out
and
fcoml
sub
and
fwait
ds
mov
jbe
and
sarl
ljmp
mov
add
outsb
cmp
sub
les
xchg
test
mov
aas
dec
pop
call
loope
mov
xchg
xchg
lock
loop
jo
mov
cs
push
in
xchg
dec
jmp
dec
add
inc
cld
cmp
out
rolb
sbb
jg
mov
cmp
in
aam
xchg
sbb
dec
nop
movb
sbb
adc
dec
push
jmp
xchg
push
dec
std
mov
es
xchg
push
add
and
out
outsl
mov
sbb
and
push
mov
dec
mov
adc
mov
sarl
jmp
fwait
push
jl
lret
adcb
sbb
fdivrp
clc
dec
dec
repz
stos
mov
andb
int3
int3
lret
dec
lods
cmpsb
sub
dec
cmp
ret
leave
in
xchg
pop
adcl
clc
sub
inc
sbb
dec
iret
ret
mov
loopne
cmp
mov
sbb
add
fdivs
int
adc
xor
mov
inc
mov
sub
jle
mov
mov
pop
jno
or
xor
inc
pop
scas
adc
and
lahf
cwtl
mov
mov
int
cli
int3
sbb
jno
or
jmp
sbb
push
adc
in
push
notl
add
lahf
cltd
test
mov
inc
cltd
xchg
sub
push
daa
add
inc
xor
xchg
nop
pop
mov
or
mov
icebp
popa
xor
fldt
push
mov
aas
mov
and
enter
pop
push
cmc
dec
imul
mov
arpl
cli
jb
lods
pop
add
or
xchg
cltd
jmp
jge
sbbb
inc
jae
in
popf
sbb
ror
hlt
inc
sbb
mov
inc
scas
stc
dec
xor
scas
mov
cld
push
aad
mov
ret
mov
arpl
sti
mov
addl
dec
push
mov
mov
out
scas
xlat
aas
xor
scas
repz
mov
sbb
outsl
xlat
arpl
push
pop
aam
cmp
xchg
js
pop
push
lods
dec
jb
mov
dec
mov
mov
push
push
icebp
cmp
out
add
shl
or
rclb
pusha
imul
lea
inc
and
xchg
push
or
inc
shr
fwait
nop
mov
inc
cli
xchg
sahf
xchg
insb
adc
arpl
xchg
lret
test
cmpsl
pop
mov
push
mov
mov
lea
repz
cmpsl
jb
xor
shlb
mov
ljmp
mov
jp
cli
iret
lret
rcll
mov
fimuls
jmp
mov
inc
pop
xor
pop
mov
mov
out
popa
push
lret
pop
pop
adc
push
fs
push
pop
sub
or
scas
jae
xchg
xchg
jbe
sub
insl
and
das
sbb
sbb
fnstcw
jg
xchg
ljmp
lcall
fwait
insb
mov
lods
out
jmp
pop
mov
pop
adc
mov
rcr
test
inc
out
jnp
lds
dec
xchg
add
dec
jo
push
dec
push
push
scas
lcall
das
adc
repz
insb
ja
lods
push
in
ljmp
push
sti
cmp
lods
jbe
or
cmp
sti
mov
or
popa
es
xchg
jg
inc
cmp
fisttpll
or
dec
addb
dec
jb
jbe
cmp
sbb
push
and
aad
mov
enter
lods
lcall
ret
mov
mov
pop
int3
gs
fsub
pusha
xchg
sbb
repz
dec
xor
xchg
adc
cmp
std
fidivs
je
shrl
clc
sbbl
insl
test
dec
xor
cmp
sub
pop
pop
es
mov
cmp
stos
sub
pop
pop
push
incl
jns
scas
fdivr
mov
sbb
repnz
call
rcrb
ljmp
bound
xchg
out
int
loop
mov
scas
dec
pop
jbe
aas
jmp
pop
sbb
push
imul
loop
or
xchg
xchg
cmp
in
jns
xlat
divb
mov
dec
or
sub
stc
bound
stos
inc
push
push
ficoml
push
push
std
shr
xor
add
lods
dec
imul
fmuls
push
push
pusha
mov
sti
push
add
cmp
ja
mov
pop
loop
gs
jo
in
inc
stos
lret
inc
and
negb
ficompl
pop
xor
fcompl
mov
sti
cli
aas
jns
pop
add
and
scas
pop
sbb
popw
add
push
scas
pop
xor
fcom
pop
lcall
adc
jae
xor
dec
jb
add
out
notb
push
cmp
xchg
xorl
out
push
and
sub
cltd
or
sbb
add
inc
inc
jbe,pn
and
jp
mov
sbb
mov
imull
push
sub
fiaddl
jmp
cli
imul
pushf
ret
arpl
cmpsl
sti
shlb
xor
orb
mov
leave
addb
ja
dec
cs
nop
insb
jmp
in
pop
testl
mov
mov
icebp
cmpsl
push
mov
nop
scas
inc
enter
push
loop
jmp
inc
dec
mov
mov
sbb
xchg
mov
int
cs
jp
dec
aas
inc
dec
xor
push
fistpll
lock
jne
add
dec
mov
les
cmp
pop
mov
cmp
lea
cltd
xchg
outsb
rorb
dec
dec
fnsave
xor
mov
inc
popf
stos
les
cmp
gs
xor
cli
push
push
mov
jle
jbe
cmp
dec
int3
inc
push
xchg
push
pop
cmpsb
imul
mov
orb
xchg
das
cmp
je
mov
mov
aas
int
sub
outsl
and
sti
jge
sub
sub
jle
or
add
dec
fstpt
adc
push
test
clc
sbb
xchg
mov
xchg
ljmp
pop
mov
out
test
push
cltd
or
xchg
int
shl
in
lret
daa
inc
leave
scas
cmp
je
inc
jae
out
jb
xor
test
repnz
mov
adc
popf
adc
call
push
add
sub
scas
popa
sbbb
in
popa
es
add
mov
pop
mov
or
or
pop
mov
mov
push
in
out
cmp
aaa
push
lds
push
or
cmpsb
and
xchg
xor
jle
push
leave
push
movsl
out
data16
and
cltd
lods
iret
or
mov
jbe
fldl
push
les
push
mov
movsb
fdecstp
popa
cmp
roll
fisubl
or
pop
shlb
cmp
fisubrl
fsubrs
ss
mov
or
xor
mov
pop
test
rcrl
cltd
adc
mov
lcall
test
in
std
into
or
rolb
mov
cltd
mov
xor
fimull
add
ret
pushf
nop
lea
into
cmp
jp
aaa
in
cmpsl
inc
dec
inc
rol
push
in
fnstenv
insl
data16
inc
sub
and
pop
es
sbbb
inc
stc
push
ljmp
aam
sahf
add
add
mov
movb
jmp
pop
push
and
dec
cmp
dec
push
pop
fwait
jne
stos
xchg
lods
mov
xor
cwtl
jp
pop
sub
xchg
fcmovu
jle
gs
pop
sbb
and
xor
and
test
mov
ret
flds
jmp
mov
push
test
sbb
inc
mov
lea
add
loopne
and
dec
ja
aas
aaa
inc
test
or
test
aaa
ret
cs
cmp
mov
push
cmp
xchg
addr16
lock
or
aad
xchg
sarl
lods
jge
fwait
loope
inc
or
adcb
cmpsb
sub
insb
sbbb
mov
push
in
mov
sub
in
inc
pop
inc
test
jg
loop
scas
sub
mov
pop
push
cld
fisubrl
sbb
mov
cmp
add
pushf
sbb
ljmp
xor
jp
loop
push
sbb
mov
out
pushf
imul
jno
lret
pop
mov
mov
imul
push
cmp
xchg
fsub
das
loopne
jmp
and
dec
add
and
jmp
xor
cmp
xor
adc
dec
pop
dec
lret
push
ja
stos
and
inc
shlb
shlb
insb
fcomps
mov
and
test
or
jnp
xlat
shl
push
aas
jmp
jae
pop
fnstenv
pushf
fmulp
aaa
mov
lahf
fsubrp
or
mov
sub
js
push
dec
lods
sub
clc
jg
inc
fldcw
adc
decl
mov
pop
dec
inc
fiadds
xchg
ds
sub
xor
sbb
dec
js
sbb
mov
lock
inc
mov
pop
mov
out
push
scas
pop
mov
xor
pop
cmpsb
inc
in
dec
sub
lock
cmp
pop
or
jg
mov
adc
jnp
mov
and
jp
pop
ljmp
and
shl
or
jns
stos
inc
leave
xchg
mov
sarl
pop
xorl
mov
fsubrl
dec
out
cmc
jg
inc
movsb
shll
fistpl
jge
and
pop
push
stos
das
and
sub
mov
pop
jns
xchg
and
aam
xchg
hlt
test
and
mov
lret
testl
sahf
repz
icebp
clc
xchg
cwtl
into
dec
fdivl
mov
pop
xlat
jle
cmp
call
mov
pop
rorl
mov
test
mov
cmp
pop
stos
adc
enter
test
jecxz
sahf
sbb
pushf
sub
pop
stos
cld
popa
mov
sbb
popa
mov
sub
in
jle
xor
jecxz
mov
sti
sahf
rol
push
add
jge
in
cld
add
sub
fstps
popa
mov
adc
xor
cmpsl
lret
pushf
xchg
in
mov
dec
out
xor
jno
aaa
mov
les
mov
dec
xchg
popl
inc
pop
aas
jb
sub
push
rolb
adc
test
ret
add
add
mov
outsb
jle
repnz
iret
mov
sbb
xchg
ljmp
ret
sbb
pop
fldl
movsb
fildll
mov
push
mov
mov
scas
and
mov
add
lcall
xchg
cmpsl
cmp
mov
cmp
push
jp
or
int
mov
aaa
mov
stos
jnp
movsl
xor
jl
test
pop
loope
daa
xchg
int
in
out
push
data16
out
shlb
daa
cmpsl
push
loop
xor
inc
sub
adc
notb
cltd
imul
add
or
xchg
lock
pop
cmp
jmp
iret
fiaddl
test
jo
out
jg
dec
sti
pop
pusha
xor
sbb
movsb
xchg
test
ret
mov
sbbb
insb
in
fprem1
add
in
jp
movsb
iret
inc
ljmp
sub
jg
call
xchg
out
lret
sar
jl
jno
cmp
lcall
daa
enter
stc
xor
imul
push
jae
xor
pusha
int3
or
jnp
jnp
xor
ds
arpl
sbb
mov
pop
mov
enter
or
pop
mov
add
add
cli
ret
inc
fwait
imul
adc
and
sub
sub
fldl
and
xchg
inc
xor
stc
cmpsb
push
test
in
mov
sub
xchg
pop
mov
mov
mov
les
test
xchg
dec
pop
jge
gs
pop
xchg
popl
js
push
push
pop
scas
pop
cmpsl
fistpll
iret
dec
jb
push
jb
mov
inc
iret
xchg
popf
dec
jo
push
push
out
mov
dec
shrl
push
mov
icebp
xchg
or
pop
sti
mov
int3
mov
jp
orl
je
mov
repnz
mov
out
adc
mov
jb
jge
mov
push
aas
mov
insb
rol
xorb
std
dec
cmp
push
je
push
mov
xlat
insb
fwait
rcrb
sbb
pushf
outsb
mov
lock
mov
pop
pop
mov
mov
andb
inc
push
leave
fcoms
pushf
push
mov
push
js
out
add
inc
outsl
cltd
stc
sbb
xchg
outsb
mov
lock
loop
xor
cmp
inc
andl
add
sbb
testb
cwtl
sub
ja
nop
cltd
int
inc
sbb
mov
or
repz
shlb
imul
icebp
adc
pop
xchg
lea
xchg
movsl
pop
sub
out
mov
xchg
push
cmpsl
push
xlat
outsl
jge
xor
iret
dec
mov
fidivrs
cmp
out
or
jo
and
push
pushf
out
sbb
mov
push
push
jne
fs
xor
leave
sbb
lds
fildl
add
add
loopne
sub
mov
adc
inc
add
psrlq
inc
frstor
mov
pxor
and
push
add
into
adc
jae
loop
mov
pop
ficoml
dec
out
pushl
clc
roll
mov
cmpsb
xor
and
xchg
mov
mov
inc
imul
insl
in
fidivrl
subl
inc
or
mov
std
push
push
sti
jno
loop
mov
test
xchg
mov
insb
pop
or
mov
lods
dec
lock
or
cmp
das
jle
lret
data16
mov
test
pop
pop
fbld
mov
pop
stos
jno
fwait
dec
dec
sbb
gs
nop
inc
pop
dec
mov
inc
out
ja
pop
ss
push
inc
bound
or
jle
repnz
add
xor
fcoms
xor
imul
push
dec
inc
repnz
ja
test
fs
mov
push
adc
sbbb
inc
mov
repnz
or
cltd
in
stos
idiv
aad
add
test
inc
mov
pop
in
xchg
and
xlat
xor
or
arpl
arpl
mov
xor
rorl
xorb
out
popa
cmp
pop
test
and
cld
hlt
sub
adc
outsl
xchg
push
xchg
fs
jecxz
mov
test
icebp
outsb
adc
adc
mov
sub
lock
insb
stos
jae
adc
shrb
or
or
mov
and
inc
fs
sub
mov
sti
fnstcw
mov
inc
rclb
loope
push
mov
ret
or
sbb
jns
ret
incl
mov
pop
test
push
inc
mov
pop
mov
jnp
ja
dec
jmp
pop
cmp
sbb
les
je
jle
ret
push
xchg
std
xchg
jg
mov
dec
xchg
ret
pop
xor
mov
lods
push
cmp
sysret
cmpsb
xor
in
fbld
sbb
pop
xchg
mov
fwait
scas
aaa
lock
sub
fisttps
pop
sub
jge
andb
mulb
sahf
mov
inc
into
decl
pushf
mov
pop
mov
adc
or
fnstsw
addb
fsubl
in
add
jae
scas
mov
sub
dec
shrl
ds
popa
std
cltd
xchg
imul
dec
adc
push
lock
sarl
mov
jge
out
and
aaa
bnd
push
xchg
fdivrl
in
lods
pusha
icebp
pop
jg
cmp
gs
fildll
rclb
cld
ror
test
mov
movsl
push
dec
xor
or
cmp
push
pop
cmp
and
mov
jmp
btc
cwtl
sub
cld
and
daa
ret
sub
lods
pushf
and
imul
das
call
push
add
movsl
in
xchg
dec
push
push
aam
xchg
mov
cld
loop
xlat
cmpsb
pop
jmp
mov
jg
inc
enter
pop
adc
mov
dec
jp
jnp
mov
std
mov
das
and
mov
and
sub
add
push
pop
mov
pop
cmp
xchg
and
fwait
shlb
loope
jle
fstl
push
add
stos
rcr
rolb
push
mov
repz
jl
ss
call
je
pop
fwait
add
mov
add
inc
pop
mov
ficoml
inc
xor
or
hlt
mov
call
data16
xchg
cmp
and
sbb
or
xlat
adc
sbb
or
cmp
jl
dec
faddl
orb
xchg
loop
pop
enter
test
add
jp
dec
icebp
or
sbb
dec
inc
push
outsb
in
or
adc
movb
and
sub
sbb
mov
arpl
push
xor
xlat
jb
rcll
or
push
sub
and
lahf
add
sti
je
mov
jmp
and
fdivrs
mov
dec
push
pop
sub
movsl
mov
mov
inc
lahf
pop
outsl
fimull
lods
push
inc
sbb
inc
jl
push
inc
mov
js
sub
stos
jg
lret
inc
pop
sbb
push
gs
loop
push
sbb
inc
or
jae
ja
cli
xchg
out
cmp
sbb
popa
pop
loopne
mov
lcall
or
imul
fdivrl
adc
jmp
xor
decl
or
out
cmp
xchg
outsb
idivl
inc
movsb
inc
sbb
or
sub
iret
mov
mov
mov
stc
mov
ffreep
xor
inc
sub
jle
daa
mov
push
cwtl
sub
je
insb
test
mov
lahf
sbb
mull
movsb
movsl
out
inc
mov
pop
ficoms
jbe
clc
push
nop
or
inc
mov
and
xchg
fisttpll
ja,pt
rcll
jecxz
mov
mov
lcall
inc
insb
leave
gs
pusha
rcrl
lret
or
jmp
in
jge
mov
fimull
inc
lea
shll
inc
inc
daa
add
or
dec
pop
xlat
mov
lock
insl
jp
push
std
testb
push
and
mov
outsl
mov
xor
out
and
push
int3
out
sub
incb
dec
sbb
jbe
jmp
push
mov
sub
jns
lods
mov
popa
sarb
sbb
mov
adc
inc
adc
push
push
mov
xchg
push
mov
mov
sahf
lds
adc
pop
and
movsb
xor
dec
sbb
mov
mov
xor
leave
push
mov
jnp
dec
ljmp
mov
repz
xlat
test
cmp
aad
jbe
pushf
nop
fidivrl
incl
xchg
sahf
or
pop
movsl
adc
xchg
pop
add
dec
sbb
dec
insb
cmp
push
jmp
inc
pop
add
jecxz
lret
pop
or
jg
lret
push
jb
jbe
mov
sbb
stos
dec
cmp
scas
lds
orb
push
fsubrs
lods
mov
mov
and
loope
insl
cld
aaa
aaa
sti
loopne
and
out
pop
call
mov
or
mov
push
cld
out
shlb
fldcw
out
jl
pop
inc
out
aam
pop
int3
push
ret
add
inc
fildll
xchg
cmp
out
icebp
icebp
outsl
cmp
popl
xor
popa
arpl
outsl
out
loop
shlb
xlat
fistps
mov
mov
push
stos
push
mov
negb
jmp
in
add
pop
in
out
push
inc
inc
sbb
mov
pop
add
dec
xor
clc
mov
add
jp
xchg
lret
and
cmp
dec
push
cmp
outsb
pcmpgtw
andl
es
xchg
sarl
jbe
gs
mov
xor
pop
or
loope
push
je
loopne
cld
insl
push
xchg
xchg
popa
ficomps
pop
movb
pop
mov
hlt
loope
sbb
xor
xorb
insl
jmp
add
xchg
xor
aaa
into
push
lret
movsb
into
and
add
popf
lea
mov
sub
inc
push
adc
mov
lcall
push
sbb
push
inc
pop
cli
in
rclb
ss
xor
insl
add
ja
xchg
ljmp
pop
mov
lahf
mov
lods
sbb
mov
add
out
xor
pop
std
mov
mov
pop
mov
lret
inc
sub
xchg
mov
sahf
push
mov
xchg
push
test
hlt
inc
adcl
and
scas
nop
aas
pop
fnsave
fisubrs
shlb
inc
push
adc
sti
pop
mov
ljmp
or
pop
mov
pusha
pop
fdivrs
xchg
clc
cmp
int
add
adc
dec
popf
mov
cltd
push
inc
mov
sbb
sub
in
adc
xlat
test
mov
jmp
pop
outsb
mov
in
outsl
mov
push
cmp
test
inc
mul
rol
ret
ret
aaa
ljmp
je
insl
and
dec
xacquire
sbb
and
jne
int3
xor
push
jl
cmp
dec
adc
out
pop
mov
push
cmp
int
pop
cmp
jo
out
pop
push
pop
pop
aaa
or
addl
sub
in
push
lcall
mov
dec
dec
lret
xor
or
mov
mov
cmp
push
lds
clc
jne
mov
pop
cmp
mov
xor
icebp
int3
xchg
cmp
outsb
pop
lret
aam
jne
and
mov
es
sub
adc
ret
andb
push
add
jg
ja
ja
mov
cwtl
mov
cmpsl
cmp
cltd
xchg
jg
ds
in
sahf
push
jne
fwait
xor
and
idivl
daa
push
mov
pop
dec
sub
push
loop
iret
loop
enter
jp
or
daa
scas
push
icebp
ljmp
and
jns
pop
push
mov
fists
mov
aas
and
fcoml
pop
rol
mov
and
insb
pop
jmp
movsb
pop
ljmp
mov
adc
call
mov
mov
dec
cmp
pop
nop
mov
mov
mov
xor
aas
jo
lds
adc
cs
test
aas
xchg
aad
push
dec
iret
push
add
xchg
es
aam
push
fcmove
adc
stc
imul
in
add
push
movsb
cmc
push
roll
cmpsb
xchg
push
xchg
pop
xchg
hlt
adc
push
leave
xchg
aaa
cwtl
inc
jno
lret
outsb
fcomip
pop
xchg
mov
dec
in
sub
imul
out
pop
add
pop
rorb
leave
ret
inc
jae
cmc
mov
xor
jo
hlt
outsl
xchg
divb
dec
xor
shrb
push
xor
xor
dec
jg
push
daa
leave
popf
das
in
out
jbe
pop
cmp
mov
aam
sar
mov
cmp
fwait
push
jge
mov
adc
loopne
pop
sbb
mov
testl
mov
rorb
ja
xor
sbb
dec
ja
mov
jp
lods
inc
mov
pop
mov
mov
adc
daa
mov
rolb
dec
fbstp
cmp
bts
cs
les
lock
in
out
ficoms
popf
inc
pusha
out
mov
mov
mov
ret
shr
xchg
jmp
cmp
cli
rcrl
mov
sub
loop
jb
xor
xor
xchg
daa
mov
test
and
jge
mov
scas
cli
adc
lret
jb
rcll
ljmp
shlb
cli
sub
mov
ss
aam
psubusb
js
inc
outsb
push
out
mov
add
pushf
movsb
popa
pushf
pushf
icebp
mov
xlat
ds
in
dec
in
shrl
sbb
mov
subb
and
mov
repnz
cmc
mov
push
inc
cld
pop
mov
lahf
mov
push
arpl
cmp
xchg
into
shrb
enter
push
lds
nop
das
cmc
xor
aaa
mov
sbb
push
mov
sub
addl
and
rcll
ss
pop
cld
or
add
adc
adc
in
pop
push
fwait
insl
popf
dec
mov
adc
in
fsts
adc
mov
pop
cld
xor
icebp
out
pop
pop
xor
push
mov
mov
lret
out
inc
xlat
dec
push
in
xchg
jle
xlat
mov
jp
or
aas
lock
xchg
xlat
add
sub
repnz
mov
cmp
cltd
mov
cld
xchg
daa
pop
fisubl
add
push
xlat
es
xor
jnp
out
dec
stc
mov
jl
add
test
push
lcall
iret
ds
ret
mov
imul
pop
sbb
stc
test
int
dec
add
das
fstl
mov
jge
or
in
cmc
repnz
jp
imul
clc
cmpsb
or
lcall
rolb
jg
pop
icebp
or
cmpsb
int3
jbe
aad
adc
xchg
aad
xor
pop
mov
xlat
mov
sub
mov
fsubrs
adc
ret
inc
mov
push
cmp
pop
or
dec
pop
sub
lods
shll
cmp
loope
xor
mov
cmp
call
sahf
pop
fisubl
imul
in
mov
fisubrl
push
and
lods
add
add
repz
add
movsl
or
cmp
pop
neg
sub
cmp
xchg
repnz
jmp
jae
dec
mov
icebp
dec
cmpsb
and
iret
and
imul
inc
inc
mov
int3
xor
mov
repnz
sbb
mov
mov
push
je
or
idivl
sbb
stos
mov
das
and
jmp
roll
push
stos
movmskps
jns
mov
aam
fwait
mov
data16
inc
adc
xchg
mov
mov
xor
mov
inc
push
add
mov
int3
push
or
mov
or
jl
ficomps
dec
adc
hlt
ret
sub
sti
xchg
fisubrs
pusha
mov
int
jmp
orps
mul
test
mov
cmpsl
xchg
ljmp
test
lcall
dec
mov
pusha
cmp
sbb
inc
adc
orb
in
xorl
xchg
add
lds
pop
sbb
and
push
aaa
push
mov
daa
sbb
and
icebp
push
les
mov
ret
aas
jmp
shll
dec
test
xchg
in
out
push
cmc
sbb
rclb
out
and
mov
mov
bound
std
mov
mov
cmpsl
fisubrs
rorb
cmpl
jne
pop
enter
jne
sub
test
in
loop
and
dec
icebp
dec
popa
sub
mov
mov
sbb
inc
jo
pop
lahf
fs
adc
xchg
adc
inc
jp
mov
pop
add
mov
dec
lods
test
icebp
fdivrl
adc
pop
push
fldl
jae
out
mov
pop
or
xor
arpl
pop
cmp
push
mov
pusha
push
mov
dec
and
mov
pop
pop
iret
cmp
push
inc
in
pop
insl
jbe
call
push
pop
imul
inc
aad
xchg
and
xor
mov
dec
dec
dec
roll
rorb
cmp
int3
out
and
loop
insl
adc
in
movsl
aad
dec
out
fisttpl
or
pop
add
and
ret
mov
pushf
pop
jne
mov
xor
scas
or
je
sbb
arpl
xor
scas
scas
outsb
and
fimuls
adc
gs
ss
mov
mov
xchg
mov
cmp
sbb
cmpsb
lahf
mov
pop
mov
push
into
lock
push
cltd
fnstsw
and
dec
jge
cld
add
scas
sbb
mov
and
repz
adc
test
xchg
cmpsl
daa
nop
sub
mov
inc
nop
pop
inc
mov
and
jo
std
xlat
mov
dec
bound
test
loope
mov
mov
daa
imul
push
pop
mov
mov
leave
dec
pop
xchg
push
out
mov
iret
into
jae
pop
out
mov
adc
push
xchg
loope
cmc
in
or
jne
jge
lock
cld
orl
les
sub
push
call
int3
mov
das
jne
sti
loopne
sbb
or
inc
leave
xchg
lahf
and
cmp
pop
xor
and
and
cmp
jg
fnstenv
xor
push
inc
jbe
shrb
clc
inc
addr16
flds
orb
or
in
outsl
xor
hlt
test
cld
sub
in
clc
pop
pop
jmp
ljmp
and
dec
aad
loope
popf
xchg
popa
ds
ss
inc
loop
fwait
je
in
rorl
mov
cmp
mov
out
jmp
xchg
cmp
rolb
jno
fs
ljmp
mov
outsl
in
adc
shll
loope
rclb
scas
mov
lret
mov
push
andl
xchg
sbb
push
pushf
sbb
outsb
jmp
call
cmpsb
mov
lahf
imul
adc
push
arpl
fs
dec
fs
mov
out
xor
mov
and
mov
bound
loop
das
add
cmp
imul
out
push
popf
add
jge
sbb
jecxz
mov
call
mov
clc
xor
cld
push
out
sbb
aam
sbb
xchg
dec
insl
cmpsb
xchg
sub
cltd
or
dec
bound
adc
push
inc
sbb
cltd
mov
cmp
sub
lahf
push
daa
inc
cmpsb
nop
int
jmp
dec
mov
push
mov
ss
dec
pop
call
je
aaa
adc
out
push
dec
push
pop
mov
dec
fimull
mov
push
inc
arpl
xor
das
xor
mov
jp
test
imul
cmp
mov
loopne
enter
lds
mov
sub
out
fcoms
and
xchg
sub
jno
xchg
xchg
push
adc
in
xchg
icebp
mov
mov
mov
xchg
inc
inc
adc
jp
out
jae
es
xchg
incb
stos
outsb
test
mov
xchg
bound
inc
ror
add
jl
sbb
rclb
mov
pop
jno
pop
rolb
push
sbb
int
push
out
xchg
adc
xchg
jb
loop
mov
mov
fbstp
aam
push
repnz
into
inc
add
mov
mov
repnz
cld
and
les
or
and
dec
sbb
lahf
inc
mov
in
push
stc
jno
das
add
sarb
imul
ja
and
sbb
adc
cmc
push
pop
ret
mov
sub
sub
adc
stc
sti
in
inc
dec
pop
jmp
mov
dec
stos
js
xor
jmp
into
leave
dec
and
lcall
insb
push
xchg
and
dec
std
xlat
cli
ss
pusha
xor
mov
popf
cmpsb
lcall
or
pop
iret
and
jmp
lock
sub
cmp
in
int3
xchg
mov
outsb
inc
repnz
inc
jmp
arpl
jnp
inc
mov
es
jae
xchg
adc
cmp
orl
jns
aad
fnsave
movsb
lahf
movb
jp
lea
out
xchg
mov
pop
adc
mov
lcall
xlat
mov
adc
xchg
dec
ljmp
lock
not
adc
es
idivb
xchg
xchg
outsl
mov
lock
loope
adc
shll
push
leave
fildl
and
loopne
nop
mov
and
insb
lret
mov
fisubl
insl
cmpsl
rol
fistpll
insb
fs
xchg
loope
xchg
push
pushf
sbb
dec
mov
pop
dec
sbb
fildll
mov
out
ja
add
adc
lock
adc
cmp
jnp
adc
pop
iret
xchg
loopne
ds
push
into
cwtl
adc
push
or
andb
repnz
mov
mov
cmp
scas
jle
stos
fcmovbe
xchg
out
scas
loopne
lods
repz
adc
stc
cmc
lahf
call
neg
std
jecxz
daa
cli
push
xor
out
mov
cmp
mov
ja
outsb
xchg
xor
fnstenv
or
or
sub
insb
dec
ss
daa
sbb
adc
sti
or
mov
push
add
mov
or
jp
stos
mov
inc
aad
adc
adc
in
mov
dec
arpl
push
dec
mov
pop
pop
sub
lcall
sahf
sub
xchg
jecxz
enter
test
pushf
loop
sub
rorl
fmuls
adcl
das
idivl
repnz
adc
rcrl
cli
int
jmp
das
push
mov
jle
jle
out
add
ja
rorb
andb
lds
dec
nop
mov
shl
in
roll
and
xor
mov
pusha
jnp
into
rolb
sbb
adc
cmpsl
push
leave
add
jo
push
xor
xor
jl
sbb
mov
imul
test
in
cmp
pop
or
cmpb
push
insl
dec
int3
jp
or
fst
cli
lret
pop
jg
push
fs
in
in
test
ret
test
in
loop
lcall
mov
addl
imul
out
mov
fdivrs
fstps
or
push
inc
and
jg
ds
inc
mov
xchg
or
test
cmp
test
add
dec
sbb
xchg
mov
aas
stos
repnz
out
out
push
jl
fdivl
pop
mov
sbb
cmp
mov
lcall
imul
lods
jo
fisttpll
or
mov
add
jecxz
pop
sahf
bound
cmc
jne
pop
mov
xchg
adcl
arpl
test
call
clc
nop
scas
fsubrl
lds
sbb
scas
fsubs
subb
add
fldenv
das
push
mov
int
inc
dec
iret
subl
and
movl
test
push
call
sub
into
std
out
insl
into
adc
shll
add
stos
in
inc
dec
mov
in
hlt
lret
loope
dec
xlat
gs
mov
fsubr
dec
repz
nop
add
mov
sahf
outsb
lods
and
jbe
jle
jmp
lcall
jns
imul
in
adc
fadds
add
cmp
mov
jne
adc
or
mov
xor
dec
push
inc
adc
out
jmp
dec
sbb
add
rcl
mov
mov
cmp
insl
cwtl
jb
dec
mov
xor
jnp
pop
mov
sub
std
pusha
cmp
dec
ljmp
lcall
mov
negb
add
scas
sbb
roll
jmp
sbb
xor
test
mov
jecxz
or
or
cmp
insb
aam
sub
orl
and
jbe
cmpb
aad
movsl
sbb
cmp
mov
dec
jae
test
and
push
xchg
or
fwait
cwtl
pop
sbb
jns
icebp
imul
and
aaa
cli
sbb
dec
xchg
pop
xchg
bound
xor
inc
lods
mov
mov
cli
sbb
xchg
xchg
and
push
jg
mov
add
aaa
fisttps
cmpl
in
cmp
adc
fcom
cli
pop
leave
lahf
push
ja
and
outsl
push
jge
roll
dec
and
daa
pop
sbb
sbbl
jns
adc
js
popf
mov
cmp
rcrb
add
das
xchg
iret
insl
into
cwtl
sti
mov
divl
xchg
mov
outsl
add
fisttpll
loope
addr16
sub
fildll
jmp
pop
dec
cmp
jnp
pop
mov
gs
pop
hlt
inc
andl
aam
testl
sub
out
jg
pop
pop
jnp
popl
pop
pop
pushf
xchg
xchg
pop
inc
mov
jnp
out
int3
into
stos
mov
inc
pushl
push
mov
jo
cmc
dec
mov
cmpsl
test
jmp
jge
test
adc
cmp
pop
popf
or
mov
pop
les
jno
and
stc
popa
jp
lods
cmp
inc
enter
mov
pop
dec
stos
add
xchg
pop
mov
test
adc
rcll
and
daa
adc
fimull
jne
arpl
fisttpl
add
test
push
mov
xorl
inc
in
mov
ja
daa
inc
aas
and
pop
sbb
in
sbb
add
dec
or
js
in
into
or
fildll
pop
lahf
rcrl
decl
test
fxam
push
lods
mov
sarb
sub
rcrl
sub
sbb
adc
xchg
and
imul
mov
stos
int3
add
enter
and
icebp
mov
cmp
inc
mov
pop
pop
add
and
fwait
xor
mov
jmp
imul
push
and
jne
xor
in
lock
push
dec
popa
adc
mov
xchg
mov
add
into
push
repz
xor
mov
sbb
mov
mov
ret
ljmp
add
bound
adc
and
xchg
iret
aad
xor
push
inc
pop
mov
popf
sub
inc
mov
lds
pop
and
push
pop
jl
test
pop
jbe
sbb
shlb
or
cwtl
cs
sbb
jp
mov
dec
lret
xor
aaa
jno
inc
jbe
popf
pushf
stc
add
scas
pop
dec
test
lret
pop
fimuls
pop
movsl
inc
push
sbb
sbb
inc
cltd
orl
test
int
mov
cwtl
daa
scas
repz
frndint
add
fnstsw
or
popa
jmp
icebp
ret
adc
inc
into
mov
icebp
or
push
push
scas
jecxz
or
out
orb
rcr
lds
mov
gs
mov
test
in
sub
jnp
out
cmp
std
mov
mov
loop
cs
mov
call
cmp
mov
les
scas
addb
js
es
popa
xor
stos
popf
imul
xchg
pop
cmp
jge
sub
mov
mov
or
add
cwtl
sub
adc
push
cmp
imul
stc
test
js
test
and
and
xchg
push
mov
xor
data16
add
test
sbb
and
xor
inc
sub
xchg
and
jecxz
xor
or
leave
lcall
jmp
push
cltd
xor
and
ret
scas
aas
jmp
mov
scas
pusha
mov
pop
adc
mov
add
repnz
enter
call
cmp
mov
sub
rcll
cmp
adc
iret
jns
insl
outsl
cmpsb
dec
leave
sbb
xchg
lcall
xchg
pop
pop
push
fucomip
cmp
push
mov
dec
mov
jae
ficoml
cwtl
push
imul
sub
inc
popa
mov
mov
mov
cmpsb
das
pusha
xor
out
dec
sub
mov
mov
xor
add
xchg
mov
and
adc
dec
add
jecxz
lahf
mov
xchg
shl
dec
jbe
push
lods
xor
sbb
dec
mov
push
xchg
push
cwtl
xor
js
pusha
xchg
pop
rorl
adc
xor
outsb
cmp
lods
movsb
loopne
push
inc
cmp
js
test
cli
in
ret
movsl
fcoml
lret
loope
jb
jmp
or
mov
inc
add
sbbl
pop
xchg
sub
adc
inc
or
inc
outsb
and
icebp
sahf
cwtl
loopne
and
push
cs
push
mov
imul
add
je
into
xor
enter
push
movsb
outsl
pusha
std
mov
fnsave
insl
jb
fisttpl
cld
int
push
imul
loope
dec
inc
push
mov
and
push
lret
xchg
push
jge
ja
push
loop
loope
out
lock
shrb
insl
xchg
test
gs
xor
mov
fucomip
in
add
pushf
mov
fisttps
xchg
pop
sbb
cmp
and
mov
dec
loopne
nop
jmp
out
arpl
fwait
scas
or
sub
das
out
cmp
stos
lods
lret
mov
out
arpl
fdivrp
cmp
jbe
int
jg
push
ja
loop
push
add
or
add
xchg
sbb
or
pop
aaa
cld
sub
sbb
jbe
cli
add
lock
or
sbb
or
push
and
pop
add
sub
jnp
mov
mov
rol
xchg
sub
inc
lcall
sbb
and
rcrl
mov
cltd
loope
xchg
mov
pop
jnp
test
xor
mov
out
push
jo
dec
and
call
call
aad
imul
mov
adc
cmp
loop
scas
push
fstpt
stos
xchg
cmp
sti
sti
cmp
cwtl
jns
pop
add
lods
pop
andl
inc
jo
js
jmp
or
lret
test
int
loopne
imul
lock
bswap
mov
movsl
xorl
cmpsb
mov
xchg
push
in
std
push
cmp
or
sub
inc
es
cld
jecxz
outsw
sbb
pop
jle
cmp
cmovl
ja
iret
ss
lods
dec
out
jbe
cmp
test
sbb
call
dec
or
push
sbb
cmp
pop
aaa
aam
add
fdivl
cwtl
jecxz
mov
test
xchg
test
mov
popf
sub
popf
sbb
aas
and
or
into
adc
fmul
ljmp
cmp
sub
fnstsw
in
repz
cmpsb
dec
clc
ljmp
dec
fsqrt
gs
mov
insb
sbb
xor
ret
pop
popa
mov
xor
sahf
fcoml
push
ror
insl
jo
or
mov
cmpsl
daa
rol
jp
xchg
sbb
imul
gs
mov
add
cmp
icebp
mov
arpl
xor
mov
cmp
xlat
sub
or
gs
mov
xchg
mov
daa
xchg
push
or
movsb
cwtl
add
scas
out
fistpll
add
mov
mov
pushf
adc
cli
int
fsubrp
jle
xchg
dec
lock
arpl
stos
orl
mov
mov
pop
iret
movsb
pop
add
pop
lds
in
jge
fimuls
jo
pop
add
jp
xor
dec
lcall
daa
imul
gs
cs
and
das
stos
fbld
inc
or
inc
dec
es
mov
xchg
std
xchg
pop
lgs
pop
inc
iret
sub
fcmove
jecxz
push
lock
or
dec
xchg
test
adc
cld
fmuls
sub
out
inc
sub
mov
cmp
test
inc
aam
test
inc
rcll
mov
cmp
mov
fldenv
lcall
dec
xchg
lock
pop
popa
lret
es
js
imull
sti
int3
mov
cld
or
xchg
popl
fisttpl
push
pop
cltd
ds
shl
ljmp
mov
rcr
jnp
minps
shl
loopne
icebp
rcrl
sti
out
push
jle
dec
test
xor
rol
pushf
shlb
sti
push
push
ret
mov
mov
in
in
add
push
and
xor
jae
int
dec
fimuls
in
shrb
lods
scas
daa
adc
cmp
insl
xor
xorl
data16
cs
imulb
mov
lock
mov
jns
pusha
fisttps
push
iret
cmp
or
popf
scas
jle
xchg
xor
pop
mov
dec
aad
cs
shl
mov
dec
mov
sar
popf
adc
insl
sbb
dec
jbe
cmp
add
je
xor
insb
mov
and
lcall
test
stc
inc
fwait
outsl
jbe
mov
adc
pusha
jb
push
fwait
unpckhps
loopne
mov
ljmp
aad
mov
mov
in
xlat
pop
int
mov
mov
and
shl
scas
and
mov
lea
xchg
ds
push
int3
or
outsl
or
push
or
shr
mov
and
pop
jecxz
add
sahf
mov
add
jae
test
cmp
push
mov
xor
lea
nop
adc
push
cld
mov
push
lahf
or
das
gs
es
and
dec
xchg
pop
and
mov
movsb
lret
sub
sub
or
mov
sub
outsb
daa
ds
aas
sbb
pusha
jbe
sbb
xchg
mov
imul
mov
sahf
outsl
outsl
pusha
mov
mov
or
pop
cmp
xchg
test
jb
in
mov
out
mov
lods
mov
aaa
mov
dec
push
adc
hlt
sub
sbb
insl
test
adc
adc
sarl
pop
and
and
jne
xchg
jo
imul
mov
roll
lds
jo
nop
cmpb
in
mov
and
mov
jg
leave
out
cmp
add
pop
push
cltd
pop
leave
fsub
fldcw
mov
mov
out
icebp
aam
add
and
adc
xchg
xlat
xchg
mov
mov
jns
pop
cmp
push
sti
lea
xchg
or
sub
lods
cmc
push
stos
fnsave
mov
push
adc
scas
jno
lahf
dec
add
pop
loopne
or
dec
cs
pop
jle
mov
in
int3
aad
mov
and
shrb
int
sahf
or
aam
sub
jne
popf
insl
loop
test
sahf
std
add
and
pop
enter
pop
adc
xor
jne
jne
sbb
mov
cmp
jae
dec
movsb
add
rep
sub
mov
mov
icebp
or
mov
fwait
mov
jmp
fcomps
daa
pushf
inc
pusha
push
add
movsb
das
cmp
push
pop
lods
and
inc
cmc
add
dec
aaa
inc
and
aam
inc
icebp
xchg
stos
mov
and
imul
pop
push
xchg
imul
aam
jne
xchg
inc
mov
pushf
add
xor
mov
mov
add
push
or
dec
push
js
stc
adc
mov
cwtl
ja
ljmp
js
sbb
imul
pop
sub
cmp
push
xchg
lds
mov
cmp
decl
sub
imul
lahf
fs
cs
lahf
adc
mov
jecxz
loope
mov
pop
insb
xchg
sbb
cltd
sarb
or
pop
mov
sub
xlat
fdivrl
sbb
cmp
xchg
jae
mov
inc
mov
imul
and
das
roll
xchg
inc
sub
jb
push
nop
stos
iret
in
ja
push
enter
dec
push
inc
jnp
xor
cmp
adc
cmpsl
loope
pop
loope
sbb
ret
lods
sbb
push
mov
scas
cmc
in
pop
test
int
pop
and
in
popf
ja
cmovae
out
call
dec
jle
int3
xor
cmp
in
dec
aam
pop
add
cmp
mov
fsubrs
mov
and
sbb
ljmp
adc
std
sbb
loop
ss
xor
out
jne
mov
xchg
sub
sti
mov
inc
pop
sbb
and
jne
mov
andb
out
inc
aad
jns
add
mov
jb
lea
sub
xor
jno
cli
int3
in
bound
je
adc
adc
mov
add
in
jle
int3
outsl
ss
repz
divb
insl
test
lahf
in
adc
and
lret
adc
ss
fists
loope
mov
test
imul
rorb
ret
xor
ss
in
shlb
jne
sub
pop
cmp
in
leave
and
in
lret
jg
mov
test
mov
xor
cmpsb
enter
pop
shrl
aas
pop
std
aas
ret
lock
loop
dec
pop
fs
icebp
mov
xchg
jae
mov
mov
hlt
inc
jle
cmp
leave
mov
jg
lret
adc
sub
pop
jbe
lea
subl
ljmp
frstor
dec
nop
arpl
inc
and
ficoms
pushl
mov
and
and
scas
ficompl
cmp
fwait
mov
mov
bound
nop
fisubl
push
mov
pop
dec
repnz
inc
sub
test
bsr
pop
es
dec
jmp
clc
push
ljmp
into
push
mov
in
pop
cwtl
std
and
adc
sar
cmp
cwtl
or
jne
push
icebp
repnz
mov
in
jge
xchg
mov
hlt
loopne
inc
roll
mov
mov
sub
jo
scas
ds
fnstcw
iret
push
mov
movsl
mov
lcall
jo
movsl
imul
outsl
push
jno
jmp
or
cmp
imul
repnz
cmpsl
shrb
or
dec
mov
ficomps
mov
test
rcrb
stos
je
push
int
repz
mov
out
push
add
dec
mov
cmc
iret
fdiv
push
inc
icebp
and
add
xchg
xchg
xor
cmp
mov
push
gs
mov
cmp
pop
daa
fwait
jecxz
jmp
test
test
jno
and
mov
data16
pop
xchg
rorb
jge
ficompl
sbb
xchg
mov
loopne
mov
and
and
lcall
repz
out
and
jb
cmp
mov
pop
outsl
inc
lods
adc
test
xor
mov
cli
jl
push
sub
loopne
xchg
mov
shll
lahf
sub
push
scas
popa
pop
lahf
inc
je
repnz
push
mov
pop
icebp
xchg
std
lahf
or
outsl
in
mov
out
pop
fbld
gs
es
push
stc
mov
dec
stc
shlb
mov
out
mov
dec
jecxz
ss
test
cmp
push
push
insb
sub
xorb
dec
cmp
inc
addr16
loope
adcb
imul
xor
push
xchg
mov
pop
mov
push
rol
mov
in
pop
push
or
mov
pushf
movsl
test
jecxz
pop
frstor
fstpt
adc
inc
clc
sahf
sbb
mov
es
and
mov
xlat
jae
jge
mov
sbb
jle
adc
scas
cltd
sub
dec
mov
cmp
pop
test
and
adc
aad
mov
mov
ss
dec
shl
ror
push
jo
and
dec
les
int3
adc
std
cmp
aam
lcall
ss
xor
xchg
fwait
mov
cmp
out
inc
xor
stc
push
and
lret
sub
xor
adcl
dec
adc
shlb
ja
int3
lret
test
aam
pop
sti
mov
cld
or
mov
add
fisttpl
das
ds
mov
jo
mov
enter
pop
sbb
mov
cld
enter
jge
rcll
dec
bound
in
pusha
push
push
sub
stc
jo
mov
rclb
imul
cmp
or
pop
mov
mov
mov
arpl
imul
int3
xor
into
jl
cmp
jge
xchg
movsl
xor
cld
add
mov
inc
inc
dec
fs
fldt
jno
insb
or
inc
fwait
mov
cmp
push
push
mov
inc
imul
dec
sahf
adc
leave
pop
cmpsb
cmpsb
cmc
sti
repz
and
pop
push
or
fcmovbe
dec
cli
outsb
mov
out
icebp
lret
inc
rolb
sub
mov
daa
pushf
ja
mov
addr16
ret
into
sahf
data16
repz
movlhps
out
hlt
stos
int3
insl
pop
ljmp
sbb
dec
mov
popa
imul
sub
xchg
sbb
push
inc
mov
in
dec
rcl
push
data16
jbe
movsl
xor
sub
fnstcw
and
int3
inc
aaa
sub
and
mov
and
subb
push
ljmp
pop
push
js
bound
repz
dec
scas
ss
scas
push
cmp
sahf
fstpl
sbb
cs
or
leave
sub
lret
add
pop
ret
mov
mov
sbb
or
sbb
popf
fidivrs
insl
nop
cli
jecxz
sub
cmp
rcl
ljmp
jb
aaa
scas
cld
mov
lods
arpl
insb
shrb
jnp
lret
clc
mov
jae
mov
xchg
mov
aad
pop
nop
icebp
jle
xlat
outsb
loope
ret
movsl
or
outsb
pop
data16
out
scas
xchg
outsl
and
add
fcoml
hlt
jmp
lahf
push
mov
cmpsl
outsb
bound
test
and
clc
inc
movsl
ja
push
dec
push
add
dec
ds
sahf
adc
add
lahf
andl
jl
jp
nop
and
inc
mov
or
pop
add
popa
scas
mov
stc
sub
cli
std
sbb
leave
fisubrs
clc
imul
cmp
nop
mov
ja
xchg
pop
popa
mov
xchg
sti
sub
push
cmp
mov
aas
cli
pop
dec
icebp
es
mov
push
mov
push
fnstsw
cmp
hlt
int3
cmp
xor
sub
adc
and
inc
mov
sub
add
sti
lods
out
jns
jge
outsl
pop
jns
xor
mov
mov
lahf
cmpsl
test
cltd
outsb
add
pop
push
fsts
mov
fsubrs
mov
imul
sti
sbb
scas
sub
xor
dec
mov
and
lods
xlat
cmp
sub
mov
int
aas
push
xchg
roll
adc
sub
orb
std
push
sub
lcall
lret
in
mov
lret
mov
incl
mov
shlb
sub
insb
repz
es
out
ss
jle
shlb
add
xor
xchg
dec
xchg
add
or
rcl
fwait
xor
xor
pushf
fucomip
mov
pusha
fldenv
pop
dec
je
xlat
test
inc
or
xor
and
push
jmp
xchg
mov
inc
mov
push
out
cmp
aam
mov
mov
mov
pop
xchg
test
xor
and
mov
lret
xor
jg
gs
pop
pusha
shrl
mov
adc
fsubs
jnp
adc
mov
in
xchg
stc
sbb
or
lds
ret
push
dec
cmpsb
xor
inc
sbb
pusha
xorb
adc
mov
mov
es
insb
add
je
jge
adc
popf
repnz
clc
inc
jb
or
or
and
dec
cld
adc
insb
push
xchg
mov
mov
or
rcrb
lret
or
movsb
mov
add
movsl
mov
and
mov
shll
sbb
pop
push
xchg
and
adcl
loope
dec
daa
sbb
jno
mov
repnz
out
sbb
vpsubw
mov
and
dec
ret
outsb
and
cli
int
xor
mov
add
or
or
inc
jns
dec
mov
pop
lea
mov
sbb
lret
inc
insl
push
test
lods
pop
sar
mov
jge
rol
inc
in
cld
ljmp
mov
and
mov
cmp
xchg
test
adc
ja
subl
into
test
adc
inc
and
push
in
or
lahf
pop
jne
stc
lods
ret
ss
add
aas
ret
daa
adc
ret
ficoms
ficomps
out
insl
rcll
jge
pop
push
xor
xor
outsl
mov
or
lock
adc
xchg
inc
add
dec
lds
loope
inc
fldl
inc
push
movsb
and
std
gs
mov
or
sub
sub
lods
mov
push
and
lea
arpl
xlat
nop
movsl
sbb
sub
or
push
ss
mov
es
cmp
sahf
lock
xor
mov
mov
push
in
xchg
and
ds
dec
push
and
in
and
xchg
sub
pop
test
or
inc
stos
and
clc
jmp
mov
pop
out
and
out
shrb
dec
enter
xchg
xor
inc
adc
pop
and
inc
nop
outsl
cwtl
lds
pop
repz
stos
sub
jmp
clc
push
cld
inc
fsubrp
mov
xor
aam
loope
add
or
jns
push
lods
pop
push
jns
sub
mov
dec
sbb
adc
push
call
je
cmp
ds
or
clc
cmp
add
or
inc
push
mov
mov
push
jmp
sub
push
arpl
cs
push
inc
ss
and
push
stos
je
add
jns
xchg
lods
add
ret
aam
fstpt
repnz
shlb
out
xor
aaa
rcll
pusha
sub
cmc
mov
inc
idivl
mov
gs
mov
stos
and
mov
stos
pop
dec
mov
imul
and
or
mov
movsl
loope
or
insb
outsl
pop
xchg
gs
inc
sbb
jbe
xor
dec
or
mov
jecxz
or
mov
in
stos
cltd
orl
push
inc
sbb
mov
lods
jl
mov
sub
je
or
sub
cs
sbb
lea
jno
test
jge
popa
push
les
sub
xor
mov
pop
push
addr16
xchg
xor
or
imul
dec
mov
mov
loopne
cmp
fistpll
dec
adc
out
mov
or
xor
stos
pop
fwait
cmp
bound
and
repnz
shl
push
setp
mov
lds
sbb
ror
mov
adcb
mov
push
xchg
mov
repz
lret
xorb
int
rorb
push
aas
xor
sub
out
push
and
cwtl
std
xor
dec
add
in
mov
popa
int3
jmp
push
or
dec
lods
mov
in
and
push
cmp
pop
pop
mov
negl
cmpsb
sbb
daa
fiaddl
mov
xchg
test
idivb
mov
movsb
pop
cmpsb
lods
int3
mov
mov
scas
dec
or
sbb
cmp
shr
mov
push
mov
sub
push
cli
or
mov
in
jp
jl
xor
insl
adcb
adc
fbld
sub
jg
cmpsl
sbb
xor
ja
bound
scas
mov
fdivrl
iret
aam
in
dec
imul
xor
popf
dec
pusha
stos
aad
sub
aas
inc
xchg
out
lds
pop
mov
in
pop
dec
mov
cmp
fnsave
add
inc
pushf
mov
sub
jne
ret
xchg
and
stc
sar
je
push
push
repz
insb
push
adc
test
pop
dec
push
and
and
xchg
lahf
adcb
lds
repnz
dec
mull
push
pop
or
pop
and
jbe
adc
mov
inc
aad
out
xchg
or
pop
subb
adc
adc
setb
xchg
add
xchg
cwtl
add
clc
pop
lods
out
negb
dec
orb
jae
pop
push
xor
dec
fidivrl
inc
call
jae
xchg
and
mov
outsb
mov
add
pop
push
sub
sbb
or
inc
jge
push
fstl
lock
dec
push
or
ljmp
in
jecxz
dec
lock
leave
or
fimuls
enter
xor
xchg
ds
loop
sbb
xchg
dec
in
pop
xlat
ja
in
dec
jnp
in
inc
out
sahf
jp
mov
jp
add
iret
jno
imul
adcb
jmp
ljmp
jp
mov
adc
gs
cwtl
pop
fucomi
jb
pop
test
insl
push
xchg
negl
cmovne
in
push
mov
icebp
inc
pop
fldl
outsl
mov
dec
mov
push
movb
lcall
sahf
aaa
sub
movsb
popf
sahf
loopne
pop
mov
icebp
push
hlt
jnp
dec
popa
loop
ficompl
sub
mov
inc
fsub
inc
xlat
mov
mov
xchg
add
xor
outsb
adc
and
hlt
pop
out
mov
outsb
in
les
sahf
add
in
outsl
xchg
dec
out
mov
mov
andl
and
mov
mov
dec
ss
pusha
adc
xorl
je
mov
adc
mov
pop
inc
movsl
sub
mov
in
push
push
sbb
mov
pop
pop
jecxz
adc
dec
xchg
hlt
jnp
outsl
dec
imul
cmp
mov
xor
mov
cli
inc
cmp
and
popa
adc
pop
rcrb
push
call
arpl
push
push
sub
ret
mov
ret
bnd
ja
jb
add
and
xor
jbe
sbb
inc
inc
shrb
mov
lds
cmp
sub
imul
ficompl
inc
cs
sub
pop
dec
cmp
scas
inc
pop
in
jmp
jno
mov
test
pop
lcall
out
rolb
dec
jbe
ljmp
loope
dec
dec
sub
pop
test
pop
mov
rcrb
xchg
movsl
mov
std
fisttps
push
xor
jne
pop
xchg
nop
fidivl
ds
lock
lcall
scas
dec
mov
lock
jnp
sbb
in
into
push
imul
add
cmp
sarb
addr16
fwait
stos
ja
bound
inc
mov
loope
and
addr16
pop
mul
iret
add
sarb
movsl
xor
mov
stc
loopne
outsl
repz
ss
das
ja
push
in
dec
loopne
or
je
mov
dec
cmp
inc
in
xchg
sahf
cmpsl
mov
xor
sti
mov
arpl
xchg
movsb
ret
js
dec
cwtl
outsb
fidivs
sti
mov
sub
orl
fisubrl
int3
mov
xor
cmpsl
xor
push
out
cmc
cmpsl
mov
roll
int3
xor
jecxz
push
insl
shl
jp
inc
flds
push
gs
sbb
jmp
sti
mov
sbb
ret
sahf
hlt
iret
scas
push
push
jno
shl
shlb
ss
cmpsl
aaa
add
repnz
scas
stos
dec
adc
movsb
cli
int3
test
pop
dec
lret
ds
sbb
ret
pushf
aas
mov
jl
adc
sub
popf
sub
mov
int
and
sub
lret
pop
pushl
sub
xchg
xchg
mov
mov
and
fucom
sub
in
das
in
mov
jo
sbb
or
fbld
incb
in
lret
push
int
inc
sub
push
sub
lcall
in
pop
sbb
xchg
cmpb
and
cwtl
xchg
mov
pop
pop
bswap
push
movsl
mov
mov
jae
xlat
and
in
shll
dec
push
sarb
sti
mov
pop
jp
sub
jmp
jne
into
jae
xor
pop
testl
cltd
pusha
dec
cmp
xchg
mov
loop
adc
out
adc
sbb
pop
fwait
dec
sbb
sti
fdivr
loope
fldenv
sbb
sbb
push
mov
xchg
jmp
pop
push
shl
nop
repz
pop
jnp
fnstenv
gs
mov
neg
cmpxchg
jae
xchg
add
push
lock
js
loopne
sqrtps
inc
fcomi
dec
in
in
fdiv
lret
jns
imul
mov
add
mov
push
out
add
xor
int
shr
gs
dec
ret
mov
xlat
push
xchg
adc
sub
push
jbe
or
popa
js
push
ret
aas
lods
push
shll
movsb
push
movsl
xor
lret
push
push
or
cmc
dec
cmp
f2xm1
lahf
hlt
in
out
jg
mov
pop
ret
lock
mov
roll
subl
cmp
jmp
fmul
into
pop
mov
sarb
dec
sub
out
movsb
fisubrs
scas
fyl2x
push
in
enter
dec
xchg
aam
sub
ja
dec
and
cmpsl
dec
sub
ds
fidivl
jl
mov
cmp
push
xchg
rorl
jge
rclb
or
clc
test
jle
cmpb
mov
loopne
mov
mov
orb
sub
sub
add
fwait
xchg
lods
pop
pop
scas
mov
inc
lret
shl
loopne
and
jae
scas
clc
cmp
or
dec
sub
loop
insb
js
inc
jp
out
pop
aam
rclb
add
adc
sbb
mov
and
xchg
pop
dec
push
inc
mov
insb
shrl
sbb
sbb
in
cmp
jae
mov
mov
test
inc
nop
mov
pop
xchg
jecxz
cmp
fildll
pop
or
pushf
xchg
daa
test
lock
sar
pushf
jge
jae
notl
cmp
movsl
insl
dec
push
decl
sub
js
jle
push
sbb
cld
rolb
mov
das
psubd
inc
mov
push
std
scas
enter
inc
testb
loopne
adc
outsl
cmp
xchg
adc
aad
jb
loopne
jbe
sbb
cmpb
lds
popa
or
shrl
aad
arpl
ficomps
sub
mov
xchg
add
sahf
cmp
sub
jge
mov
jnp
lret
mov
jmp
int3
ds
ds
inc
mov
and
dec
mov
into
mov
push
cmpsb
mov
shlb
and
aas
ljmp
fstpt
mov
out
mov
mov
imul
mov
or
pop
xor
scas
mov
nop
cld
lret
loope
mov
out
xchg
std
gs
and
icebp
ja
push
rcll
lcall
loope
pop
pop
mov
lock
mov
daa
cmp
mov
push
mov
andb
add
pop
and
xchg
push
pop
mov
daa
push
and
mov
movsl
cmc
cmp
or
leave
test
mov
add
jno
mov
cmpl
pop
in
leave
xor
mov
xchg
mov
xor
sbb
sbb
cltd
cmp
cmc
lods
adc
and
loope
out
mov
mov
scas
dec
popa
xchg
pop
das
sbb
data16
push
push
scas
rcrl
imul
lods
or
negl
mov
lock
xchg
rorb
push
jge
mov
shl
mov
jle
push
and
sbb
adc
adc
ja
pop
orl
int3
pop
push
jmp
imull
stos
cmp
pop
adc
sub
mov
mov
bound
testb
mov
xchg
and
fnstenv
stos
movsb
repz
inc
insl
mov
ds
imul
inc
lods
cmp
into
sahf
mov
sub
jg
fidivs
push
popf
notb
aas
xchg
push
fildll
mov
clc
push
jne
or
or
cli
xor
jo
mov
in
data16
sti
aaa
mov
mov
sub
xchg
mov
sahf
daa
and
mov
lods
pop
push
mov
mov
and
sbb
or
out
xchg
data16
adc
mov
adc
lds
in
xchg
dec
aaa
inc
enter
jbe
jle
getsec
cmpb
scas
push
xchg
push
int3
xchg
shl
cltd
out
imul
sbb
add
mov
stos
fiadds
mov
mov
aad
cmpsl
jl
or
xor
sub
cmc
add
jle
inc
fdivrl
xor
sbb
loope
lahf
pop
push
sbb
ds
aam
in
adc
jb
mov
fmuls
jae
mov
mov
mov
out
inc
jle
ljmp
mov
jo
xchg
ds
sti
je
mov
in
adc
ss
cmp
roll
mov
out
insb
push
cwtl
adc
bound
fisttps
jmp
xchg
and
imul
jmp
push
and
dec
mov
into
fmull
jg,pn
jmp
mov
mov
mov
cltd
sbb
das
adc
adc
mov
fs
jno
fisttps
cltd
dec
cwtl
lock
push
mov
nop
push
push
mov
or
in
jno
inc
push
push
pop
pop
addr16
loope
test
mov
adc
push
xor
ret
outsb
test
outsb
sbb
xchg
js
stos
in
push
cmpsl
in
mov
inc
testl
jecxz
mov
mov
mov
cmp
xchg
popf
sbb
add
cmp
imulb
icebp
xchg
pop
mov
mov
inc
cmpl
sbb
dec
cli
inc
mov
push
push
imul
pop
cli
or
ret
push
jmp
or
and
mov
xor
pop
mov
push
ds
movsl
sub
test
xor
lcall
mov
push
or
mov
ljmp
sbb
push
fnsave
pop
test
outsl
pop
movb
test
int
or
mov
fimuls
sti
cmp
or
mov
sub
cmc
jg
inc
les
mov
arpl
sbb
dec
xchg
loop
movsl
outsl
addr16
jl
dec
test
xor
jg
push
adc
xchg
cmp
add
les
addr16
enter
lret
sub
fbld
sbb
mov
inc
arpl
fidivs
push
fsubrp
sbb
pop
or
adc
mov
shrd
icebp
xor
mov
ljmp
dec
push
push
daa
insb
leave
sarl
cmp
dec
mov
push
dec
stos
jno
sbb
mov
call
nop
das
push
jb
std
fcomps
jo
sarb
addr16
test
mov
jno
jecxz
fisubl
insl
jb
aam
movsb
stc
arpl
adc
out
jae
iret
iret
jle
clc
insl
lret
mov
pusha
or
aam
jmp
insb
cmc
lods
lock
mov
in
xor
inc
cmpl
jl
pop
jns
ret
jmp
insb
adc
fidivrl
fnstsw
and
fmuls
xchg
int
adc
aaa
and
rcrb
cli
popa
out
push
sahf
sub
push
stos
pushf
jecxz
push
imul
pop
cmc
adc
cmc
lcall
pop
out
cmpsl
push
sub
mov
jnp
out
mov
add
scas
and
dec
clc
test
sub
icebp
xchg
sub
enter
mov
ret
jg
sbb
jae
pop
inc
sub
inc
jle
in
mov
dec
push
scas
loop
push
rcrl
sbb
scas
rorb
dec
imul
hlt
cmp
enter
ss
sbb
test
sub
adc
fbstp
punpcklwd
add
and
aaa
mov
dec
jno
fsubp
xchg
xor
jae
dec
lret
fmul
push
insb
inc
mov
inc
and
sti
xor
mov
sti
movsb
rcr
stc
ret
add
inc
xchg
ffreep
jg
int
bound
dec
das
mov
gs
sbb
mov
shll
adc
push
mov
pop
clc
jge
pushl
sub
pop
mov
data16
pop
stos
insb
add
lods
jmp
leave
mov
stos
mov
loope
push
loop
pusha
and
adc
push
insl
rcrb
jne
fwait
xor
leave
insl
les
mov
in
mov
hlt
inc
dec
lahf
je
mov
insb
out
add
aam
add
ljmp
lods
aaa
rol
inc
into
fmul
sti
or
push
scas
sub
jg
sbbb
jo
mov
push
imul
in
in
dec
or
scas
mov
or
cwtl
xchg
incl
dec
cmpsl
mov
int
fstps
inc
xchg
push
repnz
mov
sbb
scas
add
lahf
jge
rorl
rcrw
into
test
imul
inc
dec
es
mov
xchg
or
jo
jnp
mov
push
mov
push
pop
xor
inc
sbb
mov
cmpl
push
cs
mov
fldl
in
pop
mov
jge
mov
jg
adc
arpl
addr16
sbb
clc
adc
fadds
mov
mov
dec
dec
inc
pop
das
dec
cmp
mov
loop
lcall
xchg
sbb
inc
mov
addl
pop
js
sbb
ds
dec
sub
les
sub
aaa
fstpl
cmp
inc
shrl
lahf
lret
dec
push
push
adc
xchg
in
dec
mov
stc
mov
or
shlb
in
fsubrl
cli
sub
pop
sbb
pop
loop
xchg
rcrb
loop
cmp
push
jmp
test
xor
adc
jb
or
hlt
jns
mov
xchg
mov
lahf
shlb
mov
sarl
mov
push
hlt
loopne
xchg
mov
out
fstl
pop
xchg
jb
cmp
jbe
pop
orl
jae
leave
fsubr
addb
adcl
jge
sets
adc
ja
add
outsb
cmpsl
pop
jbe
in
push
icebp
pusha
dec
fwait
xor
mov
jge
lods
roll
popa
mov
aas
or
shll
lock
pop
jb
sarl
add
jnp
cs
je
mov
popa
imul
sub
mov
xchg
icebp
jl
xchg
repnz
mov
lcall
mov
pop
ja
fmull
test
adc
dec
in
call
push
outsl
in
sub
movsb
fwait
pop
gs
adc
test
lea
lock
mov
sbb
xor
pop
push
int
outsb
push
pop
dec
into
pop
in
sahf
inc
xchg
mull
inc
jge
test
cli
xorb
pop
cltd
sbb
mov
jb
dec
cwtl
cmp
and
mov
loop
arpl
xor
xchg
sub
rclb
adc
jp
fs
inc
cmp
imul
fs
jbe
jnp
fnstsw
inc
pop
adc
es
outsb
lcall
xor
int3
add
gs
lea
dec
xchg
cwtl
jo
jl
sarb
push
add
aas
or
push
mov
into
push
push
test
movb
mov
fnstcw
fdivr
xchg
sub
push
jne
rcrl
lock
mov
ljmp
fsts
divb
in
cmp
mov
sbb
push
or
lods
mov
ja
cmpsb
pop
ret
xor
fwait
pop
sbb
pop
inc
xor
subb
sub
adc
test
mov
and
mov
xchg
roll
or
inc
imul
imul
push
jmp
inc
mov
cmp
aad
fmuls
nop
mov
push
pop
fmul
ret
pop
mov
popf
or
cmpsb
bound
pmulhuw
mov
dec
sbb
mov
lock
jmp
add
sbbl
jae
mov
scas
add
gs
cmpsl
mov
pop
sbb
sahf
pop
xchg
push
aas
xchg
xor
test
push
mov
cmpsl
mov
dec
mov
xchg
clc
adc
aas
inc
popf
pop
outsb
mov
fs
rcr
xchg
cmp
into
cs
pop
mov
mov
pop
loop
sub
add
imul
sub
loopne
iret
cmp
xchg
mov
lods
dec
ss
out
inc
cld
add
lret
cld
mov
jns
mov
dec
test
cwtl
imul
test
out
xor
aam
nop
nop
sbb
xchg
pusha
orl
stos
fists
int3
repnz
pop
mov
dec
and
push
dec
es
into
shrb
popa
loop
call
inc
add
mov
xlat
mov
push
and
lcall
emms
mov
jbe
repz
fsts
fwait
mov
push
arpl
cmp
pusha
scas
adc
jns
and
dec
xchg
jl
or
inc
push
push
pop
mov
sbb
out
test
lods
mov
stos
shrl
dec
and
lcall
js
popa
mov
js
adc
movsb
sti
enter
lock
testl
sbb
bound
fcompl
xor
jne
ror
addr16
jle
lds
test
cmpl
adc
mov
loopne
out
and
addr16
xchg
je
and
daa
mov
fidivl
in
lea
ja
cmc
xchg
addb
mov
mov
inc
notl
stos
out
jns
push
xor
pop
cld
mov
lret
mov
sahf
xchg
dec
adc
jnp
call
shll
sub
jo
rorl
dec
inc
and
gs
rcl
adc
out
stos
pop
movsb
pusha
and
pop
lods
aas
in
cli
daa
push
pavgb
sub
inc
fsubrs
pusha
pop
cmpsl
popf
int
aas
fidivrs
xor
xchg
call
push
pop
sbb
mov
sahf
or
test
jp
dec
sbb
xchg
cld
dec
leave
xchg
cmc
mov
adc
mov
add
fldt
mov
pop
mov
iret
das
scas
mov
int
pop
stos
pop
or
repnz
adc
inc
leave
xor
push
cmpl
popf
dec
mov
bound
jecxz
xor
fcompl
or
scas
push
mov
xchg
jmp
and
ljmp
mov
jno
repnz
push
push
movsl
test
xchg
xor
sets
lods
leave
jb
out
xchg
or
mov
cs
jns
push
mov
or
divl
aam
mov
test
add
add
jmp
icebp
cs
or
cmpsb
roll
mov
ss
xchg
call
jmp
mov
mov
and
int
xor
mov
out
rolb
ret
outsl
jl
mov
dec
lcall
xor
mov
lahf
jno
cmpsb
loopne
frstor
ficompl
in
mov
stos
in
fimull
lahf
sbb
jb
ds
or
jae
push
and
ret
push
enter
fisttpl
clc
push
sub
push
ret
jp
hlt
cwtl
mov
out
lods
xchg
imul
stc
add
shll
pop
mov
mov
mov
les
mov
mov
scas
jl
dec
push
pop
or
pushl
or
out
sbb
sbb
int
and
dec
mov
mov
mov
insb
ret
jmp
addr16
push
into
sbb
out
ficoms
or
push
push
cmpsb
jne
pop
and
inc
or
mov
std
push
pop
xchg
movsb
popa
sbb
mov
mov
int3
fs
orl
popa
mov
out
lds
inc
mov
mov
xor
mov
in
push
std
mov
repnz
xchg
pop
push
into
fists
into
and
aaa
jmp
mov
xchg
sbb
shll
lds
xlat
lock
jmp
push
pop
pop
nop
jbe
ret
mov
lahf
ds
aas
sbb
pop
fildll
mov
test
add
js
inc
push
outsl
jb
test
fldcw
out
daa
push
mov
std
int
sub
xchg
push
sub
inc
cmp
pop
xorb
and
xchg
adc
jp
push
mov
out
xchg
daa
push
push
pop
dec
sub
ljmp
mov
adc
dec
test
lds
test
gs
loop
cmp
lods
test
mov
rcrb
loopne
mov
xor
push
xchg
ret
nop
push
jecxz
movsl
fwait
push
pusha
cmpsb
pusha
xchg
xorb
cld
into
shl
fs
sbb
fs
or
cli
into
and
cmp
xchg
xchg
or
in
jo
add
ret
sub
adc
cmp
sub
out
repz
dec
jge
fs
pop
loopne
push
push
std
es
mov
dec
xchg
std
dec
hlt
or
insl
sbb
dec
mov
jg
jle
aas
ja
xor
inc
push
mov
test
dec
aad
mov
mov
in
lods
icebp
shl
cltd
lock
cs
jg
cmovbe
mov
ret
dec
in
xchg
rcrb
roll
push
or
lods
jmp
fcomip
sub
fisttpll
adc
pop
inc
es
or
jb
cmp
xchg
xchg
fcompl
into
jns
fwait
cwtl
dec
or
dec
cmp
fmull
jns
xorl
mov
daa
inc
jb
mov
int
mov
push
jg
adc
xchg
fisttpll
pop
aad
add
and
push
lcall
aad
data16
mov
inc
mov
nop
or
sti
cmp
mov
cmpsl
addb
push
shll
or
das
out
pusha
push
mov
gs
js
jnp
in
fldt
les
or
cmp
mov
jecxz
xor
arpl
data16
fsub
mov
push
pop
mov
jecxz
push
dec
filds
testb
pop
imul
insb
testb
adc
lods
dec
push
aaa
ja
push
loop
sbb
test
pop
sub
gs
xorl
clc
and
pop
mov
xor
cwtl
lods
dec
jle
mov
filds
cmp
pop
mov
insl
std
mov
or
movsl
ja
fwait
mov
sbb
jl
scas
add
leave
xlat
stc
fwait
jbe
xor
or
int3
and
mov
out
nop
adc
mov
adc
mov
pop
repnz
fs
jne
mov
cmp
push
hlt
aaa
or
fsubrl
call
int
push
ds
sbb
std
add
dec
cmp
stos
inc
ss
gs
xchg
mov
insl
test
push
jg
jl
fs
ret
jo
sub
sbb
mov
popf
mov
lock
add
incb
sub
dec
or
cmc
scas
mov
mov
dec
dec
sbb
subl
call
add
fsubl
lret
rcll
push
and
push
jmp
int3
pop
imul
jmp
cltd
push
mov
mov
jo
lret
push
push
xor
mov
aaa
pop
imulb
cmp
sub
mov
sbb
inc
sbb
test
cmpl
fidivl
daa
bound
pop
xor
inc
jno
dec
into
sti
or
aad
sub
shll
es
ret
push
bound
adc
xchg
mov
std
hlt
pusha
mov
push
fadds
pop
fwait
cmp
add
fstl
movsb
xchg
imul
pop
leave
dec
in
jne
pop
popf
out
mov
dec
inc
xchg
jae
mov
pop
push
sbb
testl
or
sti
movsl
xor
sbb
filds
loopne
out
test
and
aaa
fsubl
imul
int
cmpl
cli
lcall
fcoml
pop
or
xchg
addl
mov
shrb
xor
mov
push
jb
sbb
pop
xor
or
sahf
cmc
stc
leave
in
mov
push
into
adc
mov
fldl
push
repz
imul
mov
aaa
lods
stos
cs
addr16
dec
pop
and
outsb
repz
je
jge
jno
push
pop
sbb
or
dec
jecxz
test
addr16
mov
or
ss
or
and
inc
mov
arpl
enter
in
cmp
mov
mov
xchg
mov
jo
jmp
neg
xor
sbb
repnz
dec
loop
cmp
xor
xchg
out
dec
adc
stos
mov
sub
movsb
sub
add
xchg
aam
or
dec
clc
push
adc
ret
aas
sub
aam
fstpl
xor
adc
out
and
sbb
dec
in
ja
fnstenv
mov
popa
scas
pop
jmp
push
in
add
add
xchg
sub
nop
mov
leave
sbb
into
xlat
push
inc
repnz
es
push
jecxz
dec
clc
mov
cld
and
jecxz
adc
icebp
aas
sbb
add
add
in
cmp
cmpsb
popf
arpl
xor
lock
rcr
xor
rorb
lock
ljmp
or
dec
or
loopne
xchg
sub
lods
jg
cmpsl
aaa
in
sbb
jmp
jns
popf
push
dec
sub
mov
adc
je
repnz
pop
mov
arpl
js
add
loop
xor
sbb
cs
mov
push
stos
faddp
sub
pusha
xchg
jl
jg
clc
out
out
pusha
xchg
xchg
or
rep
mov
cmp
jbe
pushf
pop
xchg
out
addr16
lahf
xchg
sarb
and
push
sub
mov
jecxz
jecxz
aas
das
scas
xor
adc
mov
daa
cmp
or
out
daa
push
roll
ret
mov
call
mov
dec
icebp
aad
sub
in
add
lret
sar
or
push
ljmp
sbb
inc
scas
pushf
dec
ja
stos
imul
adc
xlat
and
xor
sbb
jle
xor
sbb
xchg
std
sub
cld
daa
bnd
pop
imul
adc
and
xor
push
clc
xchg
jmp
lahf
in
dec
scas
mov
nop
cmc
repnz
xor
andb
sarl
loop
jecxz
sti
pop
dec
insl
push
mov
inc
jnp
loopne
push
notl
clc
jnp
enter
shlb
ltr
pop
mov
xor
pop
popl
std
cmp
nop
jp
repnz
test
js
test
jge
adc
lcall
xor
or
mov
or
iret
jno
dec
jne
jae
pop
mov
je
dec
push
adc
dec
arpl
andb
daa
gs
sti
mov
adc
shrl
subl
push
pusha
xor
in
std
and
push
xor
or
xchg
aas
out
jl
pop
xchg
fsubrs
jmp
std
push
lock
mov
xor
mov
into
jl
xor
add
dec
pop
inc
or
mov
leave
flds
inc
test
movsl
dec
lret
incl
call
mov
jecxz
pop
test
add
fs
rol
dec
mov
push
fidivrl
out
aad
fwait
xor
leave
dec
push
pushf
dec
jae
adc
cmp
or
mov
push
mov
cmpsb
ljmp
imul
add
pop
cmp
mov
iret
push
test
jae
daa
sub
mov
andb
push
hlt
and
aam
pop
fnstenv
and
flds
push
adc
cwtl
lahf
and
movsl
jmp
mov
mov
jmp
mov
cmpsl
lahf
dec
and
std
mov
cmp
not
fsubl
lods
fnstcw
repz
lret
jo
out
jp
pop
adc
cld
pop
outsl
shll
jno
cltd
xchg
cltd
xlat
ret
dec
add
imul
sbb
mov
adcb
mov
jecxz
xor
pop
mov
sahf
push
hlt
outsl
mov
lods
push
aad
lds
xchg
rorb
xor
xchg
cmp
fbstp
aas
pusha
lret
gs
in
cmpsb
lock
fisubl
movsb
adc
es
push
dec
test
jbe
cli
mov
ret
ds
xchg
cmp
mov
push
int3
enter
sarb
mov
dec
push
out
jp
mov
add
jge
and
push
les
pop
test
shll
mov
cmp
mov
daa
cld
jns
pop
popl
dec
mov
arpl
lret
pop
testl
in
out
jb
packuswb
cmp
mov
loopne
inc
aaa
push
push
pop
jmp
or
push
pop
ret
sub
xchg
or
push
jo
inc
ljmp
jae
and
cwtl
push
push
out
dec
insb
repnz
pushf
xchg
call
pop
ret
fadds
add
and
fsin
imul
dec
add
xchg
sub
sbb
imul
jae
xchg
mov
dec
shrl
push
xor
pop
ret
lahf
mov
xchg
pop
dec
cs
mov
mov
stc
out
xchg
pushf
inc
add
lcall
ja
test
into
mov
sub
sbb
hlt
xlat
fisttpl
daa
addb
cmpsl
and
out
xchg
icebp
xor
xchg
sbb
dec
jl
mov
ljmp
repz
jge
mov
pop
aam
dec
fsubl
enter
outsb
sub
icebp
pop
stos
lahf
xchg
mov
insb
std
xor
lods
test
adc
cmp
mov
in
adc
jmp
movsb
out
cmp
insl
dec
sysret
test
jb
jae
jnp
ds
movsl
stos
dec
fadds
pop
cmp
repnz
cmp
dec
fisttps
xchg
loopne
mov
addl
jecxz
push
push
or
out
insb
ljmp
cmp
pushf
jns
ds
push
rcl
sbb
lea
mov
xchg
jecxz
dec
xor
sbb
subb
dec
cmpsb
js
shl
xor
xchg
push
sti
xchg
lret
lcall
addb
inc
test
pop
and
leave
inc
mov
test
jle
dec
mov
add
int3
sbb
jb
scas
stc
push
out
jns
lcall
pop
mov
xchg
add
fs
xorb
scas
sarl
sbb
pusha
inc
push
sarl
clc
lods
shrb
mov
mov
mov
or
loope
aad
imul
in
mov
movsb
sub
popa
aaa
test
icebp
cmpsl
mov
cs
pop
stos
dec
fnstcw
ds
pop
push
mov
mov
out
into
add
mov
cli
addr16
inc
dec
jp
aam
outsl
cmp
cld
add
adc
aaa
dec
lret
xchg
loope
push
push
insb
imul
jl
jo
mov
rcr
lahf
ret
leave
sbb
ds
shl
mov
test
pushaw
sbb
pop
mov
dec
lahf
mov
xchg
call
add
mov
sti
xchg
ds
xorl
rolb
inc
and
scas
daa
adc
inc
sbb
loope
arpl
xor
bound
hlt
aaa
xchg
sbb
leave
or
pop
call
push
aas
adc
imul
push
stc
xchg
mov
xor
or
and
pop
mov
add
insb
mov
and
lods
gs
add
mov
pop
aaa
or
sbb
adc
ret
imul
mov
lret
xor
sarb
pop
push
rcrl
mov
push
pop
lock
jns
xchg
xor
dec
mov
mov
mov
into
add
call
or
sub
fisubs
sbb
sub
cmp
insl
push
and
lahf
or
mov
sbbb
xchg
fsubl
mov
inc
es
cmpsl
dec
in
in
inc
imul
lock
or
icebp
pop
pop
pushf
bnd
pop
into
ret
jb
pop
and
ret
in
fcmovne
jp
leave
mov
aam
lea
out
mov
xor
mov
nop
push
adc
fsubrl
enter
add
jmp
movsl
and
enter
popf
jge
cmpsl
add
fs
and
rol
cmpl
add
pop
js
push
fiaddl
and
pop
mov
popf
hlt
fisubrs
lods
mov
icebp
add
test
push
xchg
push
into
sti
cltd
pop
inc
push
lret
stos
sti
sub
rolb
xchg
mov
xlat
cwtl
test
scas
mov
lea
sti
sbbb
push
out
bnd
enter
inc
jbe
mov
push
es
out
dec
cmpsb
cmc
aam
push
cmp
push
xchg
add
adc
aas
push
fildll
cmp
sbb
mov
inc
lds
sti
mov
sbb
xchg
pop
data16
scas
mov
rcrl
aaa
push
cmp
ljmp
fwait
scas
lock
pop
leave
dec
clc
push
push
adc
inc
jg
scas
das
xor
push
jmp
popa
inc
push
leave
out
int3
mov
mov
je
dec
xor
inc
mov
je
adc
pop
or
mov
jo
cmc
mov
call
and
pop
mov
add
cmpsl
cld
loopne
and
inc
imul
xchg
outsb
fstpl
fisttps
and
sbb
fwait
sbb
inc
ret
pop
jmp
push
lret
inc
imul
pop
out
push
cmpsl
jg
outsb
mov
mov
mov
and
pushf
lea
rcll
mov
xchg
push
xchg
ret
cltd
int
mov
mov
or
lcall
outsl
ss
icebp
jl
addr16
and
aad
sahf
cmpsb
dec
jne
jp
jbe
sahf
dec
or
sbb
fs
pop
inc
subb
cmp
lods
dec
enter
shll
cmpb
inc
out
lret
mov
add
into
ds
sbb
and
iret
sbbl
nop
aas
cmp
out
aad
imull
iret
std
and
and
cmp
cmp
orb
push
adc
pop
ds
lahf
dec
adc
sbb
xor
mov
test
out
test
mov
call
mov
add
and
iret
xchg
pop
arpl
pop
scas
sbb
mov
in
les
imul
push
filds
inc
call
dec
pop
and
or
lds
iret
inc
or
cmpsb
dec
andb
cwtl
mov
das
ja
aaa
shr
mov
jbe
mov
sbb
mov
ja
adc
adc
push
mov
push
mov
cmc
arpl
sub
mov
cmp
sarb
xchg
jge
sub
ret
repz
mov
sti
sbb
imul
loope
bswap
sbb
push
cmpsl
pop
lock
test
xor
jge
inc
jae
out
shll
mov
icebp
fcmove
adc
inc
sbb
das
push
jp
sub
push
cmp
xchg
jne
mov
pop
ljmp
std
dec
call
es
rcrl
xor
sti
loop
fsubs
out
ret
sti
sub
clc
sbb
adc
repnz
lret
sbb
cmp
add
adc
ret
sbb
sub
mov
das
add
scas
push
push
push
push
in
in
mov
jp
mov
insl
dec
mov
insb
repnz
rol
popf
jbe
sub
lea
insl
dec
mov
enter
adc
inc
and
inc
subl
cmp
inc
xchg
mulps
xchg
mov
ljmp
xor
das
hlt
mov
dec
xor
aam
aam
pop
add
push
and
jb
inc
es
jb
enter
jmp
loop
pop
mov
lahf
sub
int
add
mov
in
loope
xor
and
lock
mul
call
push
adc
jbe
scas
and
jae
loope,pt
dec
andl
adc
cmp
mov
or
sub
xchg
shll
imul
jl
andl
sub
test
fisubl
mov
fstp
insl
or
shr
aaa
and
xor
xchg
pop
pop
pop
xlat
stc
and
jg
jmp
cwtl
in
cmp
fnsave
jno
pusha
jl
xlat
jbe
mov
xchg
pushf
mov
mov
mov
fsts
dec
in
mov
sub
bound
int3
sti
push
dec
add
mov
stos
xchg
pop
outsb
inc
push
adc
mov
test
das
inc
dec
int3
push
rcr
and
iret
repnz
sub
rorb
in
mov
mov
call
jns
add
push
in
adc
add
inc
icebp
mov
leave
out
in
rorl
mov
shl
or
mov
sahf
jl
xor
push
insb
dec
cmpsb
pop
push
mov
jo
daa
repz
nop
cld
cli
push
iret
cld
stos
push
pop
scas
sti
adc
je
insb
out
jle
cmp
cli
push
test
ss
push
and
xchg
and
pop
mov
loopne
cltd
fildll
push
mov
mov
out
jl
int
das
sbb
mov
insb
addl
xlat
sub
or
xor
or
ljmp
inc
pop
ss
and
xor
int3
push
repnz
jp
std
pop
sub
stos
xlat
bound
sbb
fstl
aad
pop
out
int
push
daa
inc
sbb
adc
and
push
xchg
xchg
inc
out
adc
movsb
pop
lret
scas
test
in
les
add
pop
jl
fsubrs
xor
sti
adc
jb
push
test
push
mov
jg
in
hlt
jp
jo
sub
push
into
and
nop
aad
add
dec
nop
aaa
inc
arpl
inc
jp
pop
ja
sbb
mov
dec
jns
cmpsl
notb
or
adc
push
push
xchg
mov
sbb
push
sarb
je
inc
fadd
jns
xchg
lods
mov
cmp
xchg
lods
push
xchg
xlat
insb
sarb
repz
cs
outsl
pop
inc
testb
popa
push
arpl
mov
mov
sub
mov
or
sahf
xor
adc
mov
mov
sahf
stc
mov
std
fsubrs
and
mov
pop
fnsave
bnd
pop
cmp
bound
mov
mov
mov
sub
xor
repz
test
std
addr16
fwait
scas
jns
pop
fs
lods
push
out
ret
sahf
orb
pop
mov
arpl
mov
rcll
in
mov
mov
pop
notb
in
addb
mov
cmp
dec
mov
sbb
inc
xor
pop
pusha
ja
sub
in
sbbb
mov
repz
xchg
adc
cmp
cltd
push
dec
xor
ss
push
jecxz
mov
test
sub
loopne
push
push
ljmp
push
mov
in
and
xlat
dec
ljmp
test
inc
scas
stos
fiadds
fs
cmpsb
gs
les
stc
inc
cs
adc
nop
push
inc
divb
and
jmp
and
lods
cmp
mov
xchg
sbb
mov
fstpt
fdivl
add
pop
test
loope
mov
repnz
jne
je
mov
imul
js
in
out
mov
pop
pop
std
cmp
test
inc
pop
ja
loope
mov
js
test
pop
and
sbb
fcoms
out
sahf
inc
sti
sub
cmp
es
push
mov
dec
push
cwtl
pop
ret
mov
call
ds
int3
mov
push
xor
jg
mov
mov
daa
or
sbb
sbb
jne
scas
in
jns
dec
fildl
into
aas
jno
aas
pop
aaa
imul
sbb
pop
pop
or
add
out
xchg
inc
ja
push
and
adc
gs
mov
xchg
jbe
test
cld
mov
test
cs
add
iretw
negl
cmp
pop
stos
pushf
fisttpl
mov
or
scas
pop
insb
xor
push
cli
and
inc
pop
fsubs
and
lods
xorl
jo
sbb
stos
xchg
sub
fcompl
xor
push
pop
xchg
lea
pop
xchg
push
xchg
mov
in
cmp
cwtl
arpl
cmp
push
and
scas
mov
mov
pushf
cli
mov
mov
imul
and
pop
add
data16
and
pusha
lret
pop
xchg
sub
xchg
test
adc
mov
lret
lock
je
das
jle
mov
sub
lea
lea
fistpl
mov
push
mov
movsb
imul
jmp
cmp
ret
mov
lahf
mov
hlt
sub
inc
nop
jge
mov
fimuls
sub
clc
cmp
mov
scas
mov
mov
test
repz
not
aad
xchg
lahf
inc
int
fsubrs
push
movsb
sbb
lret
incl
enter
imul
mov
out
sbb
dec
xchg
push
hlt
data16
mov
inc
push
ljmp
mov
sub
xor
push
mov
mov
sub
sti
cmp
inc
das
mov
aas
xor
loope
and
movsb
int3
jo
push
add
xchg
dec
jnp
mov
jle
pop
inc
xlat
mov
in
int
scas
sbb
mov
xor
shrl
das
xor
jl
jle
sbb
in
mov
sub
scas
test
outsb
push
ljmp
pop
sahf
pop
push
out
mov
outsl
pop
test
mov
clc
adc
das
xchg
mov
mov
xchg
sub
gs
fsubrl
push
or
adc
or
fwait
rcrl
lods
adc
xor
sub
test
hlt
mov
aad
pop
xor
stos
rcll
or
pop
pop
jg
jp
mov
bound
mov
clc
mov
out
leave
inc
inc
jp
xchg
push
cmc
ret
jo
popa
cld
orps
loopne
mov
insl
push
and
cltd
pushf
push
sbb
dec
cld
xor
jno
int
cmp
xchg
xor
js
xor
cmp
loopne
xor
cmpsl
cmpsl
and
mov
test
das
in
mov
mov
mov
push
add
scas
xor
fiadds
ss
pop
scas
pusha
inc
dec
mov
mov
mov
or
mov
fsubr
cltd
hlt
dec
mov
rcrl
jmp
scas
inc
sub
mov
outsb
cmp
daa
push
ja
lods
cmc
push
rcl
jg
jp
dec
arpl
sub
and
and
insb
fmuls
outsb
frstor
inc
cli
rorb
popa
ja
jae
pop
dec
jge
push
mov
or
out
pop
inc
arpl
add
adc
outsb
and
adc
in
gs
jecxz
mov
out
ror
jecxz
xchg
mov
out
mov
dec
lcall
aaa
push
add
lea
dec
xchg
sahf
mov
add
movsb
pop
jl
push
test
jmp
cmp
jl
inc
pusha
cwtl
out
adc
and
xchg
call
mov
clc
out
js
jp
into
cmp
ret
ret
cltd
xor
add
iret
xor
or
cltd
add
lret
or
shl
sti
roll
pop
cmp
pop
cmp
inc
dec
xor
movsb
push
cmp
jp
stos
push
test
test
adc
push
push
and
pop
inc
inc
mov
jl
or
scas
cmc
shl
cli
sti
arpl
ds
shlb
ret
jg
lds
hlt
adc
and
cmc
jp
add
enter
cwtl
sbb
or
sbb
pop
notl
sbb
rol
hlt
ret
loopne,pn
iret
or
cmpl
push
push
xchg
inc
ficompl
inc
xor
xchg
scas
inc
andb
sub
jmp
fstl
lcall
enter
arpl
or
in
adc
call
in
fs
insb
or
fiadds
popa
sbb
movsl
push
and
pop
mov
aam
lds
jb
sub
cmp
lds
xchg
insl
icebp
xorl
push
fdivrl
push
aad
and
imul
inc
imul
cmp
int3
sbb
pop
test
jmp
pop
jmp
in
stos
push
out
jg
stos
mov
adc
es
add
add
or
xlat
pop
push
xchg
addl
cs
aam
or
jg
hlt
addr16
mov
mov
in
jae
imul
addr16
arpl
jne
icebp
add
push
jne
push
repz
sbb
mov
popf
sub
push
bound
sbb
std
pop
cmp
xchg
or
or
push
stos
adc
hlt
cmp
mov
sbb
add
popa
sbb
push
sbbl
outsb
cwtl
fs
dec
jmp
adc
test
and
inc
ss
mov
adc
or
jae
sub
data16
push
jp
lret
inc
js
mov
mov
iret
push
mov
sub
and
stos
add
dec
test
cmp
shrl
iret
add
push
add
jg
cmp
add
dec
dec
adc
loope
outsb
in
add
mov
adc
xchg
push
sub
mov
add
lock
mov
cmp
clc
dec
icebp
inc
imul
std
dec
ret
mov
cmp
hlt
mov
push
pop
or
and
jno
pop
pop
push
rcrb
mov
cmpsb
adcb
into
aaa
test
dec
in
leave
cmp
mov
loopne
pop
dec
mov
pusha
pop
jmp
and
mov
push
mov
xchg
or
mov
es
rorl
adc
ja
xchg
mov
dec
mov
cmpl
bound
test
arpl
cmp
jge
in
shll
mov
xor
movsl
sub
testb
jmp
dec
mov
mov
push
push
fistpl
fs
loopne
xchg
jo
iret
sub
push
outsl
mov
push
jge
std
insb
call
xchg
xlat
sbb
jae
test
ss
xor
icebp
dec
sahf
shlb
mov
pop
nop
cwtl
nop
out
rclb
out
add
js
xor
dec
addr16
sbb
adcb
mov
mov
stc
push
pop
and
adc
in
aas
in
sbb
je
pop
fdivrl
cld
mov
dec
dec
popf
loop
mov
add
pop
into
arpl
enter
push
adc
rcrb
repz
jl
dec
adc
pop
hlt
sbb
mov
mov
in
jbe
cs
frstor
faddl
lods
shrl
add
aad
test
pushf
int
cwtl
aas
xchg
dec
je
filds
jg
push
outsb
stc
inc
shl
jno
icebp
arpl
ljmp
dec
push
jg
or
pushf
and
xor
add
add
push
pop
lods
fiadds
sbbl
movsl
add
in
ljmp
xchg
scas
lea
and
sub
cmp
test
shlb
jae
pop
mov
jnp
scas
inc
inc
inc
xchg
sub
ds
pop
lds
push
xchg
inc
mov
scas
daa
clc
jmp
aad
scas
xor
adc
mov
jge
outsl
sbb
jb
cmpsl
imul
jecxz
clc
nop
or
push
jbe
pop
mov
scas
repz
pop
xchg
adc
pushf
pop
mov
aas
leave
or
adc
repz
int3
and
jne
dec
cmp
jecxz
cmpsb
stos
add
and
inc
shl
push
and
clc
sub
xor
mov
jecxz
push
cwtl
and
and
ljmp
ja
fsubs
mull
out
mov
ss
mov
cmp
sbb
jge
push
stos
and
sbb
sub
cltd
jge
aad
outsb
test
jns
or
push
ds
mov
idivb
in
outsb
fstenv
mov
and
lret
lret
loop
sub
sbb
dec
inc
dec
inc
popa
iret
pop
mov
nop
cs
push
dec
sub
xchg
fld
pop
jle
mov
add
jmp
test
xor
push
inc
sub
test
loop
pop
dec
stos
adc
iret
fdivp
insl
pusha
cmp
xchg
sub
dec
lret
cli
call
push
out
fidivrs
mov
test
cmc
mul
inc
inc
loope
add
inc
cmc
mov
inc
cmp
call
xor
mov
push
out
jnp
enter
xchg
jmp
repnz
dec
ret
faddl
adcb
jns
clc
mov
test
hlt
fdivp
push
xchg
es
inc
adc
pusha
popa
icebp
jb
xor
nop
pop
dec
clc
test
pop
ja
lea
out
test
push
xchg
cs
ret
mov
fsubs
and
add
sub
add
rcrl
push
pop
pop
xor
inc
mov
inc
push
inc
mov
call
adc
jb
loop
add
inc
pop
pop
inc
mov
bnd
leave
aas
inc
push
int3
out
stos
pop
jo
and
je
jp
jns
push
and
or
pop
aaa
adc
in
jl
testb
daa
jle
fwait
xor
imul
mov
fdivp
xor
cmpsb
xchg
out
jno
mov
stc
jge
or
icebp
mov
data16
movsb
jecxz
ret
cmp
pop
test
or
fdivr
pushf
stos
push
out
jp
rcr
bound
das
out
cli
add
dec
outsl
jmp
ret
xchg
xor
enter
fsubrs
push
neg
mov
fs
aad
pop
leave
testb
out
pop
jo
loope
cwtl
xchg
mov
push
cmp
std
sbb
and
adc
mov
add
mov
inc
lods
in
lds
sub
aad
mov
sub
lock
pusha
or
data16
xor
add
rcl
lea
in
pop
imul
xor
lds
jae
xchg
cli
pop
aaa
jne
mov
lock
jg
pop
pop
clc
fstpl
lods
bound
loopne
dec
ljmp
int3
loopne
mov
imul
in
jae
cmp
repz
mov
enter
jbe
clc
shr
pusha
jmp
or
xchg
movsl
sub
sahf
add
jnp
cmp
in
leave
pop
cmp
xchg
mov
loopne
in
cld
repnz
and
ret
inc
dec
repz
loop
movsb
mov
xchg
das
cmovle
add
adc
or
add
pop
dec
inc
pop
adc
loop
lods
imul
out
mov
fldl
xchg
aaa
and
mov
fildl
mov
hlt
daa
inc
data16
cmc
enter
shr
jo
mov
fistpl
imul
inc
push
lds
fdivr
sub
mov
jo
sub
and
rclb
pusha
push
push
cmc
or
dec
add
mov
pusha
mov
and
je
test
subb
int
and
adc
pop
lds
xor
lcall
rolb
jmp
pop
clc
mov
insb
mov
mov
js
adc
inc
addb
mov
pushf
repnz
out
loop,pt
cmc
out
cmpsl
xchg
pop
ja
bound
pop
mov
lcall
mov
or
fs
pop
aas
cmc
stc
out
shrl
cmp
fdivrs
mov
xchg
or
push
mov
shl
das
test
sbb
and
xchg
out
or
not
gs
sbb
in
jne
mov
or
mov
sbb
and
pop
adc
fwait
out
fs
mov
lret
les
mov
mov
loopne
lahf
daa
daa
call
xchg
popa
std
int
popa
xchg
pop
mov
xor
mov
dec
ds
dec
divl
scas
jne
popa
shll
add
sub
cltd
dec
jge
movsl
mov
and
xchg
sub
sbb
cmp
mov
test
cli
xor
lods
jb
into
fcmovbe
out
aam
testl
adc
xor
sbb
add
negb
nop
adc
call
xchg
add
pop
jmp
inc
aad
popa
pop
pusha
cmp
pop
inc
es
loopne
aad
icebp
je
jnp,pn
loopne
adc
xchg
push
adc
call
or
addb
out
aas
pop
sub
and
cmp
mov
jbe
loopne
andb
test
xchg
sub
mov
push
outsl
je
pop
mov
xchg
insl
add
cltd
push
leave
lds
fs
test
cmp
and
cmp
push
aas
lods
mov
aaa
sub
jecxz
dec
es
xor
sbb
neg
sub
mov
xor
inc
stc
fstps
leave
pop
out
pop
sarb
or
cmpsl
push
stos
ret
dec
sbb
cmp
mov
xchg
add
and
dec
dec
push
fldt
dec
cmc
pusha
add
mov
mov
sahf
sbb
mov
lahf
or
adc
leave
jle
dec
mov
sub
push
pop
das
adc
push
enter
sbbl
in
test
push
add
test
mov
mov
loopne
adc
xchg
mov
iret
repz
xor
dec
imul
inc
and
mov
pop
mov
cld
mov
aas
movsl
outsb
ljmp
stos
mov
insb
inc
nop
ror
insb
ljmp
test
and
stc
outsl
dec
test
cltd
jb
mov
sbb
negb
shlb
jb
cmp
inc
bound
push
lahf
ss
lret
xchg
inc
enter
sub
lret
adc
dec
sbb
push
jge
push
adc
je
ljmp
inc
cltd
adc
loop
cmp
jbe
aam
outsb
mov
sub
cmp
loop
mov
dec
mov
nop
cld
mov
shll
mov
mov
and
shlb
xlat
loope
je
xorb
cmp
xchg
and
fwait
xor
out
dec
pop
jbe
lret
enter
mov
mov
lret
dec
sbb
and
pop
mull
gs
and
jle
enter
adc
sahf
les
test
jbe
pop
inc
loope
sub
inc
dec
scas
jnp
xor
mov
add
lcall
fs
jns
sar
mov
xor
mov
inc
out
testb
lock
xchg
popa
inc
dec
xchg
mov
je
dec
loope
adc
dec
pop
lahf
and
jg
sub
pop
push
cwtl
inc
cmp
mov
repz
hlt
jg
icebp
jb
mov
and
pusha
cld
jbe
shlb
cld
jg
loop
xchg
push
call
lods
xchg
bound
push
lea
daa
rorb
and
and
mov
mov
push
decl
les
in
lods
out
fsubrl
daa
in
aad
stos
sub
cltd
mov
pop
cltd
daa
popf
mov
push
mov
xchg
imul
movsl
test
inc
pop
cmc
repz
shlb
and
ja
fstp
mov
test
mov
inc
mov
loopne
push
sub
js
lods
testl
jl
jo
das
sti
js
aad
push
cmpsl
mov
cmp
or
test
les
jp
outsb
int
xchg
shrl
xor
ret
test
mov
out
xchg
sahf
sarb
dec
cwtl
mov
aad
lock
stos
push
mov
mov
pop
jecxz
sub
mov
cmp
lea
dec
js
test
and
test
stos
sbb
lods
std
sarb
push
lret
or
jge
jno
shrl
mov
mov
mov
scas
loop
cmp
and
push
mov
cmp
lret
xor
pop
lret
inc
xor
addl
inc
mov
not
pop
bound
inc
mov
mov
adcl
fwait
mov
lds
add
xor
sbb
mov
dec
sbb
fdivrp
cli
xchg
icebp
dec
loope
lods
adc
insl
cmp
shll
addb
call
sbb
leave
push
frstor
in
jno
out
repnz
movsb
ret
jns
pop
pushf
andb
mov
jg
mov
fwait
lahf
sbb
movsb
mov
inc
sahf
push
jge
xchg
in
ja
sbb
mov
fsub
ret
js
add
outsl
fmul
jmp
xor
fwait
andb
push
push
insl
mov
fldenv
aaa
add
sub
lods
roll
xor
loopne
inc
cmc
cmp
stos
popf
adc
xchg
mov
mov
aam
shrl
jge
test
loopne
call
icebp
pushf
or
loop
xor
and
cmp
sub
notb
loop
add
repz
push
out
out
pop
lods
dec
adc
jbe,pn
fadds
gs
mov
adc
ret
xchg
icebp
enter
rorl
repnz
les
mov
frndint
pop
pop
or
nop
loopne
lret
mov
mov
mov
dec
cli
out
jo
int3
jl
sahf
mov
mov
or
cltd
idivb
fcompl
inc
fsubrl
pop
xchg
mov
in
jge
xlat
xor
dec
loope
roll
pop
sti
nop
add
xchg
mov
pop
jae
lods
cmpsb
lock
sbb
cmp
add
cmp
iret
add
xlat
or
sahf
jns
mov
push
adc
pop
das
sarl
iret
cld
and
sbb
shll
in
cmp
or
mov
push
jno
jnp
push
dec
cmc
std
nop
sub
lretw
out
mov
fcomip
sub
ss
sti
xor
mov
shrl
cmpsb
pop
lods
sub
add
aaa
mov
in
fs
or
in
daa
inc
mov
nop
cmp
scas
adc
xor
loope
ficoml
mov
pop
aad
sbb
int3
out
roll
push
cmp
dec
hlt
repnz
dec
push
sti
cmpsl
pop
lret
flds
mov
scas
fs
nop
les
mov
out
fmul
push
push
pop
data16
je
mov
push
dec
mov
cmpsb
ss
mov
mov
fdivl
dec
xor
jecxz
fisttps
in
repz
shlb
push
xchg
loope
jbe
push
adc
jg,pn
pop
pop
jo
in
mov
mov
cmovp
sub
mov
cs
icebp
push
mov
dec
pop
adc
mov
in
cmp
mov
popf
lret
add
pop
mov
inc
mov
cwtl
mov
int
mov
add
or
mov
rcrb
mov
ds
cmp
fsubrl
aaa
xor
cmp
push
and
sbb
test
ffree
inc
or
mov
mov
and
mov
das
cwtl
movsb
in
mov
sahf
filds
aas
xchg
pop
stc
stos
nop
xchg
inc
hlt
add
add
loope
and
clc
or
fbstp
and
hlt
add
testb
ja
inc
inc
add
sbbl
lcall
jb
rolb
int
dec
sub
dec
ss
fstpt
ss
pop
test
ficoml
enter
outsb
int3
das
and
mov
sbb
mov
loop
out
fdivrs
push
jecxz
mov
mov
xchg
push
insb
call
mov
fsubrs
int
bound
icebp
pop
mov
inc
jb
in
in
clc
lea
mov
icebp
mov
mov
aas
outsl
pop
in
js
cmp
inc
or
je
inc
cmp
mov
popf
loopne
pop
jae
fsubrp
xor
lret
rorl
sbb
pop
in
test
aas
jle
ficoms
sub
adc
jl
es
out
mov
aaa
fwait
fwait
mov
mov
stos
gs
mov
sbb
inc
xchg
aad
jnp
push
imul
out
das
jne
push
jne
fists
mov
pusha
jge
adc
movsl
mov
stc
sbb
aad
pop
jno
dec
ljmp
out
fstpl
dec
inc
pop
xchg
pop
push
cmpsl
adc
sbb
jb
dec
sub
loop
es
mov
sub
jae
add
ja
xchg
out
xchg
add
inc
fimuls
loopne
xchg
lock
or
fdiv
popf
cmp
or
xor
sub
sbb
test
fadds
in
gs
xchg
mov
xchg
out
fs
add
shl
ljmpw
idivb
mov
mov
adc
in
fistps
xor
mov
fbstp
mov
mov
pop
pop
sub
pop
pushf
cmp
mov
ret
adc
flds
pop
fisttpl
xchg
aas
sbb
out
xchg
hlt
adc
cltd
stos
mov
sarb
mov
loopne
movb
push
mov
movsbl
jne
inc
add
pop
and
adc
pop
jge
sub
jnp
test
jne
push
shl
dec
addr16
inc
imul
dec
push
push
xchg
mov
sahf
cmp
pop
lods
cli
ret
movsl
roll
in
adc
sbb
cmp
repnz
outsl
mov
mov
decl
inc
hlt
fildl
or
out
xor
mov
inc
sbb
push
mov
das
add
jge
xchg
dec
xchg
jbe
dec
adc
inc
int
sub
test
mov
adc
imul
dec
repnz
adc
mov
outsl
xor
out
sub
cmp
jl
dec
mov
clc
js
adc
out
adc
and
mov
push
jmp
leave
cld
or
mov
aad
fbld
arpl
add
adc
rcrb
mov
jbe
and
mov
pop
or
push
jl
inc
aaa
test
cmp
jle
stc
ret
out
aaa
mov
andl
ljmp
jnp
push
push
push
subl
fcmovbe
lock
sub
add
icebp
dec
popa
test
lea
dec
xchg
cs
shlb
mov
mov
mov
stos
mov
sub
cs
aad
mov
mov
daa
imul
xchg
add
and
push
cmpsb
test
jno
mov
sub
dec
movsb
mov
jbe
xor
outsl
mov
rol
negb
mov
jbe
pop
outsl
cmpsb
xor
mov
sub
adc
xor
ret
and
loopne
cs
sti
add
pop
stos
xor
fnstsw
jbe
xchg
mov
iret
aas
mov
stc
mov
lea
xor
outsb
mov
negb
into
fistpll
out
and
push
enter
mov
add
mov
popa
pop
into
loop
and
cld
icebp
mov
inc
inc
adc
push
sbb
mov
fwait
in
sbb
cli
push
js
out
cltd
dec
jg
push
adc
mov
inc
lea
into
cltd
adc
cwtl
insl
imul
arpl
push
out
or
and
ret
mov
xchg
push
mov
mov
and
fists
xor
ds
jecxz
stos
mov
jns
add
sarb
clc
setnp
daa
xchg
daa
dec
push
iret
xchg
push
sahf
sub
push
insl
lret
repnz
stc
scas
addl
fadd
push
int3
mov
in
jmp
out
lea
sbb
push
cmp
jecxz
inc
push
pop
out
sub
adc
aad
rcll
push
jae
ds
stc
inc
mov
pop
inc
lods
xor
pop
xchg
or
clc
test
or
xor
iret
test
jge
cmpsb
das
xchg
sub
adc
adcb
ret
aas
xchg
mov
and
cmpsl
mov
xor
lods
imul
fsts
ss
and
and
pop
lds
in
mov
dec
ds
clc
je
push
pop
fmuls
adc
cltd
out
scas
jo
pop
and
adc
mov
xor
mov
cmp
shrl
faddl
adc
xchg
enter
xchg
mov
fs
scas
test
jnp
dec
pop
shll
loopne
cmc
sahf
ss
nop
shlb
addb
enter
add
xchg
mov
jo
cmp
inc
push
sbb
lcall
jne
push
mov
pop
cmp
pop
add
jecxz
out
test
rorb
push
jle
nop
adc
add
mov
push
xor
xchg
mov
sarb
sub
iret
and
mov
xchg
jp
adc
enter
sbbb
ss
mov
in
sbbb
outsl
shl
add
xchg
cmp
test
jae
xor
scas
mov
push
std
or
divl
mov
aam
dec
enter
mov
mov
pop
nop
jns
add
jo
dec
sub
jo
xchg
insl
mov
enter
fstl
dec
imul
dec
ret
popa
add
clc
aad
int3
push
repz
mov
popf
xor
out
cmpsb
dec
fs
xchg
push
jmp
pushf
out
loopne
xor
dec
loopne
adc
arpl
and
lock
mov
ret
sub
icebp
out
mov
and
lock
cmpsb
imul
imul
and
lahf
cmpsl
movsl
sub
and
nop
cmpsb
sbb
sahf
cmp
sahf
stos
push
jmp
pop
ret
cmp
repnz
mov
cmp
imul
and
xchg
mov
or
rclb
push
jnp
jnp
and
pushf
fdivrs
cmp
pop
lcall
jae
push
scas
mov
outsl
cmp
pop
and
ret
cmpsl
sub
popf
mov
repz
dec
pop
bound
pusha
cmp
mov
dec
inc
cltd
addb
mov
cs
fdivl
mulb
push
jae
stos
scas
xlat
inc
xchg
push
add
je
test
pop
into
xor
pop
out
push
xor
into
xchg
jg
shrb
mov
sub
jo
xor
in
push
mov
fstl
pop
shll
push
ret
insl
sbb
sbb
in
mov
jecxz
enter
add
scas
adc
popf
mov
andb
xor
lcall
pushf
cli
cmp
in
cmp
xor
sub
mov
sub
aaa
mov
and
popa
mov
iret
jp
xorl
cltd
push
jmp
cmc
xchg
mov
mov
fisttpl
in
mov
cmp
lahf
pushf
aad
or
idiv
add
mov
cwtl
ss
mov
jge
add
mov
call
iret
or
fldt
cmp
mov
gs
arpl
rclb
fbstp
push
and
mov
adc
jge
iret
scas
add
dec
inc
and
sbb
push
inc
cmp
imul
dec
test
addw
sub
jle
xchg
adc
scas
dec
xor
lods
jecxz
jp
push
or
sbb
subb
sbb
push
aas
sbb
jge
inc
push
mov
or
into
imul
xchg
dec
daa
andb
mov
jb
cmp
inc
in
stos
or
jnp
aam
into
in
inc
aad
jne
subb
aam
and
dec
dec
push
add
shll
xor
pushf
pop
dec
fistl
xchg
repnz
ficoml
xchg
push
in
adc
mov
xchg
mov
outsb
popf
fwait
ret
pushl
inc
roll
adc
shrl
adc
add
sti
hlt
dec
mov
shl
shlb
pushl
aam
sub
mov
pop
fmull
push
shlb
push
arpl
lahf
dec
lock
xor
mov
leave
pop
inc
cmc
fs
jg
shl
pop
or
add
popf
push
mov
push
pusha
adc
mov
xor
jecxz
mov
or
fimuls
push
cmp
ss
inc
cmp
in
push
push
mov
jbe
std
imul
dec
jmp
jecxz
cmp
push
roll
xchg
test
and
or
jle
push
inc
jb
cltd
mov
sti
nop
xchg
cld
xchg
cs
cmpsl
adc
aam
std
xor
imul
and
lods
stc
xchg
lret
xchg
xchg
mov
test
lods
xchg
aam
lods
push
lds
pop
fs
into
mov
mov
add
nop
imul
lea
and
add
or
mov
xchg
or
push
fwait
pop
js
icebp
inc
in
hlt
scas
nop
lds
out
lcall
sbb
aaa
mov
jecxz
cmp
jnp
insl
inc
and
and
adc
mov
in
ret
add
push
hlt
aad
dec
mov
inc
shrl
sub
setne
dec
jge
clc
pop
cmpsb
push
fidivrl
insl
push
add
mov
pop
pop
adc
fs
iret
pop
insl
add
adc
sbb
sbb
cmc
push
mov
xor
cmp
negl
out
mov
rcll
pop
sub
sub
into
mov
push
fscale
and
inc
or
mov
mov
xlat
adc
push
xchg
jecxz
lcall
test
outsb
popf
sti
mov
mov
cmp
das
adc
movzwl
push
in
sub
test
cld
pop
mov
pusha
fsts
push
sti
lret
int3
add
lret
iret
jge
adc
mov
ucomiss
xor
ljmp
bound
jle
mov
mov
fadd
in
or
rclb
mov
fsubs
jbe
lds
jo
imul
cltd
xor
data16
pop
jecxz
mov
es
dec
in
mov
mov
push
xchg
xchg
imul
xchg
mov
and
cld
jae
pop
cs
popa
cmpsl
jae
adcb
pop
pushl
mov
loope
jmp
mov
pop
cmc
enter
lcall
fwait
mov
int
sbb
mov
pop
pop
ja
xchg
dec
sbb
lahf
rcll
call
jns
sbb
mov
push
sub
push
test
inc
in
mov
fmull
shll
mov
adc
mov
sub
mov
mov
adc
cmp
inc
mov
ljmp
insb
push
lea
bound
mov
sahf
iret
js
aas
ja
into
adc
xchg
imul
fldz
repnz
dec
mov
loopne
jecxz
and
add
stc
testb
pusha
pop
mov
mov
inc
sbb
xchg
sub
inc
push
arpl
xlat
dec
aaa
push
fs
dec
mov
pop
into
leave
scas
outsb
xor
jle
push
inc
stc
push
cmpsl
jae
sub
cmp
mov
xchg
imul
sub
data16
arpl
push
cmc
outsb
mov
add
mov
les
call
jo
dec
and
out
test
mov
mov
cmc
lods
inc
ss
mov
jge
fildl
or
mov
je
sub
repnz
cmp
mov
push
sub
fsubs
lret
jno
leave
mov
ret
notl
cmp
jmp
shrl
cwtl
mov
cltd
xchg
add
cltd
inc
xchg
loopne
jo
fsub
scas
cmp
add
fidivrl
arpl
popf
push
mov
pop
inc
jmp
insl
mov
mov
es
mov
inc
mov
repnz
dec
subl
xlat
inc
sbb
into
int
stc
or
mov
push
xor
ss
cmpsl
fsubs
mov
jns
cli
lret
int
push
xchg
add
cmp
sti
push
jno
xor
push
cmp
push
add
mov
jmp
les
sbb
push
enter
lret
inc
out
sbb
or
je
push
xchg
popf
daa
repnz
adcb
in
in
leave
sbb
aaa
lret
xor
ret
sbb
dec
cmpsb
je
mov
or
lock
push
stc
adc
xchg
mov
imul
inc
in
inc
movsl
cmp
popw
sub
sbb
push
jge
negl
loopne
or
sti
or
xor
lds
mov
jmp
mov
aad
loope
pop
cwtl
push
sbb
add
lods
out
testl
sbb
fidivrs
or
jne
adc
jo
lods
xchg
pop
mov
js
cmp
in
push
leave
pop
daa
jecxz
sub
xchg
mov
cmp
lea
jo
ret
idiv
loop
mov
pop
mov
sti
add
sbb
inc
cmp
push
andb
insb
leave
push
xchg
adc
mov
test
adc
adc
hlt
or
lds
xchg
mov
inc
lock
shlb
je
sub
jge
mov
mull
js
and
je
jl
push
or
cmp
cli
lods
xchg
out
mov
sahf
outsl
mov
xor
mov
inc
dec
out
cmpsl
jae
cmc
mov
mov
sbb
xorl
sbb
pop
aad
adc
es
add
sahf
popa
xchg
pop
add
inc
fwait
enter
jnp
adc
pop
cs
mov
les
push
enter
into
lret
push
mov
jbe
cmp
mov
xchg
jecxz
aaa
outsl
inc
mov
xor
xchg
insl
sub
lods
xchg
test
cmp
test
pop
and
sbb
pop
inc
cmp
cmp
fmuls
loopne
mov
mov
sbb
inc
jno
mov
lds
xchg
gs
in
xor
mov
mov
ds
inc
addr16
cwtl
or
mov
and
int
jae
daa
fidivrs
cmp
in
scas
arpl
fwait
hlt
ret
add
mov
mov
mov
daa
jmp
test
pop
xor
aas
mov
sub
mov
mov
flds
pusha
stos
popf
push
stc
ficomps
fldcw
loop
xor
fld
and
xchg
push
xchg
push
adc
push
or
pop
es
push
inc
ljmp
jne
je
and
test
hlt
mov
xchg
lahf
pop
test
lea
cmc
push
je
sbb
in
sub
push
xlat
lods
add
popfw
xor
ds
aaa
insb
scas
mov
jmp
jge
pop
iret
rcr
cwtl
in
das
int3
sub
jle
data16
xchg
lods
cli
negb
inc
and
and
lods
test
xor
popa
pushf
les
lds
pop
push
dec
lret
pop
push
jns
cmpsb
fidivl
in
pop
fistps
nop
es
sbb
lock
xor
pop
push
cli
xchg
pushf
dec
out
loopne
loopne
outsb
lods
cmp
cld
ss
cmp
insb
adc
lock
ret
push
cmc
or
lds
fs
rcrl
mov
push
fistpl
push
dec
ret
inc
cmp
fwait
mov
push
xchg
arpl
xchg
inc
sbb
sub
pop
inc
pusha
or
sub
and
js
xor
fwait
negl
and
shlb
stos
pusha
nop
es
stc
lea
sti
jge
cwtl
shll
push
aas
cmp
push
popl
mov
cmpsl
clc
adc
xor
inc
shll
loop
sbbb
fbld
loop
int3
nop
xchg
or
out
orb
xor
test
iret
data16
nop
push
pop
movsl
pop
dec
xor
das
shrl
sahf
jge
enter
mov
inc
inc
mov
lea
test
inc
push
movsb
jo
std
xor
lds
shlb
enter
xchg
out
clc
adc
arpl
push
pusha
dec
pop
hlt
mov
popf
aas
iret
add
cmp
xorl
dec
adc
sbb
mov
cmpsl
cmp
and
jne
cltd
xchg
sbb
js
sbb
data16
insl
mov
ud0
mov
jae
sbbl
jmp
fcoms
mov
dec
mov
rorl
jb
jecxz
insl
mov
xchg
cmp
inc
sbb
mov
mov
ss
xlat
scas
ret
dec
jne
stos
sbb
or
cmp
or
cmp
mov
cld
mov
enter
xchg
pop
jne
imul
pop
jp
push
inc
or
adc
fiadds
shlb
add
lods
mov
jl
sub
aaa
movsb
jg
mov
mov
push
lock
and
scas
adc
loop
jo
and
or
movsb
call
push
clc
mov
push
arpl
loop
jp
arpl
mov
jne
or
ret
call
inc
xchg
mov
mov
cmpsb
hlt
jge
pop
sub
cltd
roll
into
pop
jae
je
xor
shrb
out
lahf
shrl
loop
sbb
fcmove
fidivrl
cmpsl
mov
or
out
stc
repnz
test
movsl
rcrb
aad
bound
fnstsw
push
fstps
loop
pop
mov
sub
pop
push
and
popf
mov
mov
and
popf
jno
xor
inc
cmovge
push
mov
or
pushf
test
sub
xchg
jp
lods
mov
movsb
je
push
cmpsb
stos
cmp
push
stos
stos
jmp
popa
and
in
dec
cmpsb
add
xchg
sub
adc
and
dec
lods
xchg
jae
sbb
call
and
push
push
xchg
xor
cwtl
xor
cwtl
add
dec
dec
aas
xor
adc
aad
and
and
or
sahf
ja
notl
mov
inc
insb
mov
mov
dec
push
and
or
or
inc
bound
ret
fldcw
andl
mov
out
jl
mov
jnp
jbe
in
jno
adc
ret
mov
dec
add
pop
mov
stc
add
dec
dec
out
lock
int3
jge
mov
xchg
dec
outsb
sti
xlat
jns
sub
inc
cmpsl
loope
ret
loopne
repz
mov
icebp
bound
adc
stos
mov
push
push
rcll
les
roll
aaa
cld
or
fnsave
lock
ljmp
pushf
pusha
add
pop
adc
arpl
imul
sub
cmp
or
xchg
cld
xchg
xor
xchg
mov
pop
cmp
scas
movsb
xlat
lret
lret
jmp
fstpt
xor
dec
das
out
mov
mov
pop
js
mov
pop
cmpsl
inc
mov
lock
call
sub
cmc
fwait
inc
loopne
ret
aad
hlt
ss
inc
and
repz
out
icebp
lahf
sbbb
inc
jl
std
xchg
lret
mov
fucom
rorb
or
fwait
push
inc
sub
hlt
mov
add
add
imul
sub
mov
ret
or
sbb
rcrl
mov
movb
insb
or
lret
mov
call
push
and
jmp
mov
les
lods
je
sbb
xor
sub
xor
stc
inc
jne
mov
mov
fimuls
icebp
inc
int3
negl
inc
fisubrs
test
int
inc
dec
es
std
pusha
xchg
insl
aas
enter
xchg
xor
add
mov
xchg
inc
out
sti
aaa
xchg
cmpsb
and
inc
movswl
loop
xor
xlat
ljmp
or
jmp
jl
xor
je
int
outsl
sar
pop
cld
jns
mov
je
imul
lock
repz
pop
into
sub
or
jmp
pushf
adc
outsb
daa
lock
gs
sub
dec
out
fstps
sti
mov
fnclex
icebp
lea
lea
cmp
push
inc
ret
inc
ja
movsb
or
insl
xor
xchg
insl
push
jno
mov
mov
fisubrl
out
sbb
stos
je
jnp
push
pushf
aad
lret
sub
add
push
cli
pop
jae
cltd
lcall
mov
and
bound
mov
dec
sbb
xchg
sbb
into
and
jge
jo
jmp
out
dec
mov
lret
jg
jecxz
cltd
insl
xlat
dec
push
sub
sbb
int3
icebp
mov
ftst
test
push
aaa
incl
dec
movsl
inc
inc
pop
clc
jp
aaa
mov
ret
xor
or
arpl
loope
ret
fsubrs
pop
shlb
xchg
negl
xchg
ds
and
mov
cmpsl
adc
cmc
leave
mov
or
mov
stos
out
sub
movsb
stos
cmp
lds
cli
insl
push
add
xchg
push
add
xorl
xchg
outsl
sbb
popl
in
pop
mov
jle
sbb
add
negb
xor
int3
insb
scas
sbb
dec
jae
pop
std
push
inc
cmc
dec
scas
test
mov
sahf
add
aaa
es
xchg
rolb
mov
inc
mov
mov
int
jne
call
lcall
int3
push
scas
pop
jecxz
push
fstl
icebp
adc
and
jg
outsl
ret
xchg
call
push
dec
add
in
mov
test
and
orb
bound
push
cmp
imul
xchg
fnsave
cmpsl
push
mov
cmp
pop
mov
sbb
lock
xchg
das
dec
jge
cmp
imul
test
bound
xor
fstl
mov
pop
jo
pop
lock
and
mov
sbb
add
push
mov
nop
shlb
mov
dec
pop
shrb
loopne
and
ljmp
repnz
inc
cmpsb
add
and
insb
pop
in
mov
ljmp
push
out
jo
pop
sbbb
out
je
rcl
fiaddl
lods
jnp
in
mov
add
mov
mov
mov
mov
out
fwait
cld
lods
jmp
test
add
pop
push
outsl
lret
dec
xor
enter
fs
pop
aas
mov
out
roll
repnz
outsb
call
cmpsl
and
sub
mov
sbb
mov
cmpsb
sbb
pop
pop
mov
jg
clc
enter
jle
pop
jb
or
add
pop
testb
fdivs
ret
lcall
loope
scas
loope
inc
xchg
repnz
loopne
add
push
imull
icebp
pop
mov
test
mov
in
adc
int3
pop
std
stos
or
sub
and
sub
mov
scas
loope
imul
outsb
push
clc
ficoml
adc
les
insl
in
sbb
jge
bnd
mov
mov
popa
ds
cmc
jp
nop
outsb
jmp
pop
xor
push
iret
iret
outsb
cmc
outsb
sbb
add
and
inc
inc
mov
jl
movsb
js
cld
xchg
push
cmpsl
cmp
addb
xor
and
inc
mov
jge
and
inc
pop
rorb
scas
lahf
arpl
test
lock
jne
push
test
into
jg
fistpl
rorl
push
mov
inc
pop
les
in
stos
xchg
jo
jo
pop
add
cmp
fs
or
cmp
and
dec
add
fsubr
add
pop
in
out
pop
insl
outsl
sbb
dec
jb
insl
cmp
fistps
xchg
stos
cmp
jp
lods
test
test
xor
mov
ljmp
test
imul
int3
leave
inc
pop
cli
adc
sub
test
insb
push
inc
add
xchg
or
jge
sub
inc
sbb
les
into
cld
sti
or
xlat
xchg
cmp
pushf
outsl
xor
fnstsw
int
aad
push
loop
fiaddl
adc
scas
sbb
mov
xchg
outsb
mov
xchg
mov
lods
mov
xchg
inc
subl
add
inc
mov
mov
lods
pop
hlt
xchg
add
jbe
lret
gs
xlat
adc
fiaddl
inc
aas
call
je
mov
inc
mov
sarb
mov
mov
stos
sub
xchg
icebp
lret
xchg
xlat
mov
out
mov
push
xchg
jae
push
push
jmp
sub
mov
jmp
inc
adc
add
and
and
pushf
arpl
in
xchg
and
das
xor
inc
adc
xor
xor
pushf
push
pop
adc
push
jmp
lock
mov
jo
lret
adc
test
ret
js
ds
out
sub
pusha
insb
xor
xor
push
xchg
mov
mov
lock
pop
jle
mov
jp
iret
pop
lret
xor
mov
mov
gs
sbb
mov
fsts
dec
testl
push
jg
loop
mov
dec
fdiv
cmp
add
lods
cmp
ror
fsts
fwait
mov
and
mov
dec
mulps
xchg
orl
loop
cwtl
dec
sub
dec
es
pop
cs
popf
jmp
mov
sbb
insl
and
aas
pop
pop
and
in
jno
sub
pusha
fwait
orb
out
outsl
cltd
mov
cltd
inc
xchg
push
stos
pop
mov
push
nop
sbb
mov
mov
loopne
inc
ret
nop
pushf
push
cmp
mov
dec
pop
lock
test
inc
mov
aad
fiadds
ret
int3
in
ja
inc
iret
clc
decl
jecxz
sbb
cltd
pushf
push
adc
push
cld
sub
pop
fsubs
sbb
sti
ja
mov
imul
xchg
cmpsl
push
xchg
test
or
rcl
inc
outsb
cmp
cwtl
lahf
lock
push
aas
outsl
dec
in
stos
adc
sbb
scas
call
movsb
in
xchg
jnp
imul
or
fwait
int
adc
daa
enter
iret
cli
das
push
dec
das
pop
mov
xor
movsl
mov
mov
cmp
add
stc
into
pop
xor
clc
mov
ret
xor
cld
ret
jmp
lods
call
cmp
dec
add
repz
fnstsw
movsl
or
mov
xor
adc
inc
popa
mov
jnp
and
adc
jp
pop
test
rcrb
sbbb
out
or
and
xchg
scas
push
outsb
inc
cmpb
lock
mov
sbb
stc
jecxz
sahf
test
inc
loopne
push
ja
lret
stc
scas
mov
mov
or
outsb
enter
out
mov
popa
pop
add
aaa
mov
cmp
and
in
dec
push
les
push
vpandn
pop
dec
cmpl
mov
stos
cwtl
inc
outsb
js
sahf
lods
inc
cmpsl
jb
mov
rcrb
lahf
pop
and
aam
aas
popf
xor
jb
jmp
mov
scas
adc
jecxz
icebp
mov
or
and
jae
dec
bound
pusha
scas
inc
adc
xor
mul
arpl
dec
adc
lods
mov
mov
inc
scas
int3
sbb
lahf
pop
lretw
addr16
imul
fsin
pop
adc
mov
int3
add
and
pop
xchg
cmc
adc
push
out
xchg
push
push
test
adc
mov
icebp
pop
adc
add
mov
es
mov
sbb
out
pop
mov
fldl
lcall
mov
adc
les
or
gs
enter
push
cmp
test
xor
xchg
test
xor
mov
mov
jg
out
cli
pushf
loop
mov
decl
push
ljmp
dec
lock
pop
rclb
hlt
arpl
add
fldl
pop
pop
loopne
mov
aaa
mov
mov
xlat
in
pop
pop
xlat
ret
test
pop
popa
repnz
jno
call
outsb
xchg
or
cld
xor
sbb
hlt
dec
aaa
out
push
data16
cs
cmp
pop
lea
jmp
rolb
icebp
in
in
outsl
cmc
xchg
data16
test
loop
lods
arpl
or
jne
leave
and
lret
scas
inc
add
lock
ja
fwait
popf
sub
or
lret
mov
mov
scas
out
mov
cwtl
cmc
xor
xchg
stc
pop
add
jp
aaa
cmp
xchg
pop
fwait
jno
mov
or
ja
adc
mov
or
dec
mov
pop
jns
in
mov
mov
call
mov
lock
test
lahf
int3
nop
out
jmp
dec
test
jg
subb
je
ret
mov
sbb
push
mov
cmp
imul
pop
pop
icebp
mov
fsubr
movsb
fcoml
ja
aad
in
cs
fs
lods
test
and
cmp
jbe
leave
and
addl
fs
pop
pop
and
iret
mov
out
ret
sahf
shrl
inc
aaa
inc
cld
aam
dec
push
mov
call
inc
pop
xchg
jge
cltd
sbb
jle
cmc
imul
mov
inc
sbb
movsb
in
divl
inc
orb
or
push
xchg
push
xchg
test
sbb
xor
roll
cmp
fsubp
shrl
rcr
cmpsl
mov
scas
xchg
mov
mov
pop
jl
xor
ss
in
std
inc
mov
bound
jnp
and
shlb
mov
sbb
cwtl
pop
mov
test
pusha
insb
out
jge
jb
packsswb
push
mov
aad
xorl
gs
je
adc
movsb
aad
leave
pop
outsb
or
mov
dec
mov
cmp
aam
ljmp
lea
sarb
adc
sbb
cltd
std
pop
cld
inc
sub
xchg
rcrl
sbb
arpl
cmp
outsl
test
and
jno
sarb
fwait
xchg
addb
shlb
mulb
fnstcw
pop
in
mov
bound
in
mov
fwait
jo
push
xchg
arpl
cltd
mov
dec
xchg
es
ss
out
sti
mov
pusha
inc
popf
rorl
jp
jge
mov
jno
in
sbb
dec
and
jne
scas
push
add
xchg
lret
bound
cltd
outsb
aam
in
cmc
push
pop
mov
jmp
rcl
andnps
add
out
je
dec
mov
or
inc
mov
mov
not
imul
mov
mov
or
push
rorb
outsl
cmpsb
cmp
sarb
push
lcall
ror
in
ljmp
fcmovbe
pushf
push
add
ds
test
out
jmp
mov
testl
inc
adc
add
test
sahf
add
sahf
push
push
adc
fsubs
push
jnp
sub
xor
adc
jp
pop
jg
jo
jns
pusha
movsb
inc
stos
repz
cmp
push
ds
dec
jecxz
pcmpeqb
sub
jne
mov
sub
sub
sarb
mov
jne
pop
movsb
divps
lcall
jmp
or
filds
pop
pop
push
mov
outsl
jp
mov
call
repnz
sahf
dec
lds
push
push
sbb
iret
jge
mov
in
push
inc
clc
sub
mov
fs
fmull
shrl
shl
jge
fldcw
push
xor
inc
and
xchg
scas
mov
lret
decb
cmpsl
dec
and
dec
dec
adc
xor
jl
mov
in
add
icebp
out
insb
mov
aaa
pusha
lea
insb
dec
xchg
or
inc
test
xchg
xchg
pop
jb
xor
pop
mov
push
push
jno
leave
mov
in
mov
testb
mov
jg
ja
mov
int
pop
mov
ljmp
jno
aas
pop
sbb
mov
jo
sbbl
push
and
push
jbe
add
mov
mov
pop
js
inc
lods
pop
fdivs
in
outsb
mov
scas
sub
push
and
sub
and
pop
test
ss
arpl
mov
mov
icebp
push
ret
fistps
arpl
mov
mov
pop
rcl
cmp
mov
pop
arpl
and
mov
xchg
cmp
mov
mov
mov
enter
adcb
sahf
insl
std
aad
or
cmpsl
jge
push
push
getsec
insb
sbb
mov
mov
ja
sub
cmpsb
push
out
fwait
idiv
aam
cmp
fstpt
adc
xor
jae
sahf
jnp
cmp
cmp
or
jge
xchg
adc
hlt
enter
cwtl
std
or
cmpsl
mov
rorb
dec
cmp
scas
add
leave
add
mov
out
int3
sbb
test
push
mov
xor
pop
inc
push
sbb
pop
xchg
fisttpll
lahf
push
jle
sar
dec
and
xor
fwait
ljmp
aam
xchg
outsl
jmp
pusha
cmp
mov
lcall
and
inc
shlb
jmp
adc
int
out
in
popf
rolb
jns
rolb
orl
lret
push
push
fdivrl
mov
out
mov
cmpsb
cs
adc
pop
ja
imulb
mov
fistl
add
or
sub
movsb
sbb
mov
pop
push
sbb
addl
dec
add
dec
cmp
nop
cmp
insl
hlt
xchg
jnp
dec
loope
clc
sarl
vmulsd
out
xor
into
stos
sub
jecxz
fadd
sbb
fs
into
or
jo
mov
insb
int
lahf
jmp
cmp
mov
arpl
sbb
popf
pusha
sub
scas
cmp
pop
data16
xchg
arpl
ljmp
cmc
stc
jae
jo
sub
test
int
fbld
pop
push
mov
fsubr
xlat
sub
fidivrs
shl
rolb
push
rclb
into
or
sbb
mov
push
loop
cwtl
jnp
imul
scas
cmp
cltd
adc
enter
stos
pop
arpl
push
dec
adc
icebp
sbb
inc
mov
lods
data16
lahf
sbbl
sub
test
sub
push
aaa
sub
clc
pop
fisttps
js
inc
and
push
dec
pushf
mov
addb
cmp
and
pop
cmp
adc
add
and
push
testl
mov
sti
inc
daa
pop
mov
loope
sbb
popa
fildl
or
into
mov
test
mov
aam
sbb
sub
add
mov
sbb
aaa
push
lea
or
sbb
stos
jnp
fs
js
or
in
push
jbe
cmp
fsubs
xlat
lock
sbb
cmc
outsb
sahf
pop
testl
arpl
cld
sub
flds
mov
lds
xor
call
mov
push
icebp
lods
cmp
js
push
mov
faddl
or
add
pop
push
add
mov
dec
mov
cmpsb
in
sahf
xlat
inc
pop
popf
push
jg
cmp
xor
push
jge
push
adc
pop
fsubrl
jp
cmp
shll
dec
cmpsl
or
ja
xor
bound
jmp
mov
repnz
push
adc
inc
jnp
adc
jnp
jp
rclb
jecxz
push
popf
iret
iret
mov
arpl
icebp
xchg
inc
sbb
adc
fsubl
rcrb
jae
add
dec
xchg
pop
push
jb
dec
mov
clc
mov
gs
ret
inc
xchg
inc
or
xor
xchg
add
scas
loope
imulb
push
stc
and
inc
imul
add
repz
hlt
cld
jecxz,pt
mov
iret
aaa
push
or
aam
dec
inc
loope
mov
stos
xor
fldl
sbb
cmp
jl
mov
mov
insb
or
xor
xchg
jg
jb
andb
stc
clc
or
aas
and
out
sub
mov
ja
je
mov
stos
cmp
mov
push
mov
decb
imul
imul
cs
hlt
jb
mov
sbb
mov
ljmp
lcall
lds
mov
fimull
jg
cmc
xchg
and
mov
aaa
popf
mov
jb
inc
lods
gs
push
mov
lcall
push
fisttpll
pop
xlat
cmp
adc
cli
jg
add
and
push
repnz
fcmovu
push
pop
push
shrl
cltd
jge
imul
and
push
stos
dec
inc
ljmp
dec
xchg
xchg
mov
imul
inc
and
dec
cmovno
sbb
cld
pop
mov
or
push
out
leave
inc
je
and
sub
stos
loopne
xchg
int3
dec
sbb
push
sbb
xchg
les
aas
fs
jg
test
lds
lods
dec
sub
inc
xchg
pop
sahf
mov
insb
or
fstp
cmpsb
je
addb
or
jo
push
jbe
ja
cmp
mov
adc
xchg
dec
jg
out
shl
xlat
inc
shll
rcrl
sbbl
jmp
pop
sarb
sub
cmp
sbb
mov
push
pop
sbb
lret
pusha
mov
sti
xchg
mov
jb
cmp
cmp
mov
bound
repnz
and
dec
pop
dec
xor
stos
pop
and
push
and
out
cmp
ja
test
pop
repnz
lods
cmp
out
inc
xor
xchg
inc
ret
fdivr
sahf
out
repz
cli
jle
cmp
adc
add
push
or
popf
aaa
subl
mov
xor
xor
icebp
xor
arpl
cs
cpuid
sub
hlt
cmc
push
movsl
add
div
cmpsl
push
mov
dec
cmp
add
rep
mov
or
and
adc
add
pushf
sbb
cltd
cmpsb
xchg
rorb
xchg
mov
push
push
ss
push
pop
insl
add
test
call
andl
mov
out
cld
inc
adc
int3
sti
mov
dec
and
or
clc
test
js
cltd
adc
mov
aad
lds
ret
inc
sbb
jl
cmp
jp
jmp
shlb
dec
in
jns
lods
pop
and
push
adc
sarl
icebp
mov
pop
mov
pop
pandn
jge,pt
mov
cli
pop
mov
jns
inc
push
sahf
gs
movsl
cli
fbstp
lret
mov
sub
inc
js
pop
aas
xchg
orps
or
call
dec
dec
lahf
pushf
inc
testl
jne
sub
je
fidivrs
sbb
inc
test
in
xchg
pop
jnp
aam
roll
mov
sbb
pop
push
jecxz
std
mov
sbb
shrb
loopne
pop
jb
cwtl
lcall
mov
sbb
les
js
lret
cmc
es
stos
xchg
xchg
stos
incb
aad
into
cmpsb
pusha
or
jbe
out
dec
cld
aaa
jne
aas
xchg
dec
negb
ret
adc
outsb
sbb
imul
jo
loop
movsl
test
ret
in
xchg
and
lock
in
jae
xor
addl
pop
jge
inc
into
outsl
out
or
fnstsw
push
sub
or
sbb
loop
mov
sub
and
sbb
into
and
sub
xchg
xor
lock
cmc
inc
and
add
mov
pushl
xor
movsl
adc
sahf
dec
sbb
adc
mov
mov
out
and
aas
push
push
outsl
mov
popf
and
cmpl
sbb
movsl
popf
and
mov
jl
call
fadds
jge
and
orb
dec
test
imul
inc
inc
sbb
sti
mov
adc
orl
sti
lds
or
push
stos
push
hlt
pop
sbb
xchg
stos
nop
xor
sbb
add
ljmp
add
cli
add
push
dec
or
repz
dec
ds
cmp
sub
ja
bound
ret
mov
inc
cmpl
xor
cmp
mov
push
popl
adc
movsl
std
fdivrl
fisubrs
and
and
inc
jno
clc
and
fdivl
dec
es
idiv
imul
adc
cmpsb
in
add
add
sub
shlb
je
lock
into
xchg
lea
sub
incb
jmp
push
sti
add
fistl
cmp
int3
and
data16
or
push
lahf
lret
mov
fwait
mov
sbb
js
push
or
inc
shll
imull
xchg
sub
adc
mov
jno
fwait
std
sbb
mov
and
aad
loop
push
sti
outsl
movsb
fsubrs
rclb
cmp
pushf
jecxz,pn
in
arpl
pop
and
cltd
xor
sbb
sbb
xchg
push
pop
call
inc
push
inc
sub
cmp
rorl
sub
cmpsb
hlt
dec
jne
push
test
mov
xchg
jle
pop
and
arpl
mov
in
mov
aad
xchg
inc
dec
in
adc
adc
mov
mov
xor
jecxz
adc
adc
adc
mov
imul
fcmovnb
fcompl
lds
mov
push
mov
mov
push
stc
dec
cmp
sub
mov
xchg
cli
or
push
jne
pop
mov
push
dec
xchg
sub
xor
js
fbstp
dec
or
sbb
push
jnp
mov
or
adc
pusha
or
sahf
sahf
cmp
mov
into
outsb
ds
and
and
mov
jge
jb
inc
sub
mov
jb
testl
sti
fs
bound
jns
dec
mov
xchg
stos
xchg
push
jae
xor
xchg
or
hlt
ljmp
loope
stos
sbb
pop
ljmp
addr16
xchg
bsf
mov
jo
mov
cmp
mov
sub
popa
ret
in
leave
push
dec
outsl
push
or
adc
stc
cmp
mov
insl
push
push
dec
mov
xor
adc
jecxz
lcall
popa
fcmovnb
mov
imul
insb
push
gs
loope
outsl
cli
addl
call
shrb
sub
into
sbb
cltd
mov
add
ret
xchg
mov
imull
pop
mull
fistpll
xor
mov
cwtl
adc
ret
dec
xchg
outsl
mov
addl
push
push
add
dec
jo
mov
add
or
push
lock
int
xchg
add
cli
mov
test
clc
test
lahf
jno
subb
fisttpl
jmp
ror
insb
outsl
inc
cmpsl
xor
pop
inc
ret
shr
cmp
mov
icebp
rcrb
stos
dec
and
pop
out
push
xlat
lcall
cmp
jno
lds
push
fiadds
fistpl
xchg
lea
push
inc
push
jle
dec
and
pop
cmpsb
loopne
mov
sub
movsl
fstpt
in
adcl
insb
jo
pop
ret
aas
push
add
adc
and
pop
dec
inc
jp
ss
int3
stos
lret
inc
lret
and
out
aad
out
sub
lock
jl
dec
jns
filds
mov
inc
push
icebp
mov
sbb
lret
mov
les
jae
in
xchg
mov
or
or
push
iret
mov
push
out
add
dec
lahf
test
icebp
in
in
xchg
popl
jmp
mov
jbe
ljmp
nop
popf
xor
pusha
mov
lods
imul
shl
arpl
push
fsub
sbb
loope
cmpsb
xor
pushf
pop
lret
gs
sahf
into
cmpsb
mov
push
push
inc
mov
xor
add
insb
mov
ds
out
ljmp
mov
cli
loop
repz
or
nop
cmpsl
inc
daa
clc
jb
xor
mov
lret
outsl
mov
sbb
insl
stos
mov
xlat
popl
fldl
adc
xchg
add
lock
jo
stos
les
xor
and
test
cmovno
outsl
int3
ja
xchg
lret
fdivr
xchg
ficoms
mov
loope
push
mov
and
adc
mov
lods
out
mov
rcrb
push
pop
push
inc
shlb
cmpsl
push
jb
dec
scas
sub
xor
lock
inc
pop
push
mov
inc
mov
movsb
or
mov
jge
popa
repnz
lds
jno
adc
fistl
es
fcoml
fsts
adc
or
and
push
imul
mov
mov
cmc
xor
adc
rclb
mov
add
int
iret
ja
dec
and
dec
addr16
inc
adc
sbb
dec
xor
in
push
pop
aam
inc
stos
add
scas
jnp
retw
repnz
pop
sti
pop
bound
repz
test
jo
loop
cmp
xchg
cmpsb
or
test
mov
aad
into
jl
jno
mov
data16
mov
pop
dec
aaa
stos
sub
dec
adc
pop
ljmp
insb
sbb
mov
sbb
cltd
dec
jg
mov
xchg
nop
add
into
and
test
mov
int3
test
fs
imul
mov
dec
stos
in
ret
and
fwait
sbb
push
mov
push
loope
add
push
mov
insl
jle
mov
arpl
aas
mov
mov
iret
mov
js
push
add
ljmp
dec
addl
lret
aas
pop
outsl
lods
mov
mov
xchg
pushf
mov
cli
popa
mov
xorl
lods
mov
fisubrs
adc
push
cmp
mov
dec
adcl
movsb
xor
lahf
push
jecxz
int
xor
lcall
push
sbbb
fimuls
adc
dec
lods
mov
rcrb
js
or
sbb
stos
neg
jecxz
stos
jmp
adcl
mov
and
sub
mov
test
lahf
xchg
inc
sbb
jge
movsl
ret
adc
xlat
jo
cmp
add
push
sbb
enter
add
push
mov
rolb
xor
xlat
lcall
hlt
ljmp
adc
stos
pop
add
inc
adc
jl
adcb
daa
adc
jo
fwait
out
lahf
in
mov
fsubrs
pop
xchg
imul
push
mov
clc
xlat
cmp
xor
roll
xor
cmp
cmp
bound
sbb
aas
inc
pop
cld
cmpsl
lods
insl
iret
adc
mov
jae
mov
jmp
cmc
and
pop
mov
outsl
or
xchg
add
cli
push
sub
vminss
rcrb
pop
mov
out
and
and
shl
or
inc
lds
jmp
mov
mov
fisttps
fistpl
adc
out
fs
leave
mov
in
lea
push
jmp
push
cmp
sbb
outsb
ret
xor
or
and
xor
pop
push
jmp
xor
aad
scas
lahf
in
int
cmp
or
cmpsb
cwtl
fldt
das
sahf
mov
mov
ljmp
inc
dec
jns
in
inc
jno
mov
imul
add
rorb
xchg
repz
cs
jp
mulb
or
mov
jl
jl
iret
pop
mov
icebp
fs
xor
stos
xchg
mov
hlt
js
pop
out
in
gs
push
xchg
dec
js
jge
inc
mov
ds
xor
sub
dec
call
icebp
aad
push
and
or
or
insb
mov
cmpl
pop
sub
ljmp
enter
inc
mov
arpl
out
and
or
pusha
fwait
or
into
imul
push
jbe
sbb
and
and
sub
jo
fiaddl
mov
flds
cmc
push
sub
mov
xor
frstor
repnz
test
mov
sub
mov
aad
dec
sti
mov
shll
lods
lahf
mov
sbb
inc
ret
push
cmp
xlat
xor
mov
or
sar
int3
xchg
xor
lcall
repnz
mov
faddl
aam
push
sub
in
jnp
in
gs
and
test
leave
ret
or
arpl
mov
stc
loop
push
jae
push
js
push
lret
jmp
lcall
push
xchg
jae
ja
and
dec
jno
rorb
add
shl
sub
mov
sbb
jno
xchg
adc
scas
pop
xorb
ret
scas
mov
cs
int3
cli
lcall
scas
pop
push
lcall
fcmovbe
insl
std
std
inc
cmp
push
mov
in
andl
pop
das
loopne
xchg
and
clc
loope
mov
xchg
loope
mov
mov
pop
inc
dec
imul
lcall
jp
fwait
out
xchg
imul
fistps
dec
cmpl
mov
or
std
fs
jne
pop
aaa
lods
hlt
and
fildll
inc
pusha
lods
jg
or
les
cltd
xlat
out
iret
inc
and
push
mov
push
in
and
fcompl
push
xchg
daa
dec
lret
mov
sub
lea
or
test
xor
cmp
mov
sahf
sub
cmp
mov
les
aas
addr16
fsubp
rcrl
sub
cmp
pop
fidivs
cwtl
mov
loope
subb
mov
sbb
sbb
bound
in
cmp
mov
aaa
fs
mov
fistl
adc
popf
imul
xor
pop
mov
inc
mov
pop
mov
imul
xor
fbld
cmp
dec
pop
movsl
popa
out
or
scas
cmpsb
movsb
aad
iret
pop
push
pop
negb
sub
push
out
psllw
in
push
imul
sarb
sub
jl
jae
mov
inc
into
ljmp
push
lods
adc
divl
mov
int3
mov
or
xor
or
fnstsw
xor
mov
jecxz
mov
fwait
xor
pop
popa
cmpsb
jg
inc
add
push
sti
les
xor
int3
mov
adc
iret
lret
xorl
and
scas
loope
rorb
decb
sbbl
jns
add
cs
andb
mov
cld
lret
cmc
lret
loope
ds
pusha
inc
cmp
sahf
divl
out
sar
push
and
xchg
addl
dec
mov
aas
mov
xchg
test
lret
add
mov
imul
and
popa
cmp
pop
mull
ja
imul
or
adc
xlat
aaa
mov
xchg
inc
mov
mov
push
mov
insb
nop
xlat
mov
add
lahf
fsubrl
lods
test
dec
inc
shrb
or
adc
mov
les
inc
test
pusha
xor
jp
mov
iret
mov
add
adc
jle
ja
fdivr
cmp
push
push
cmc
cmp
mov
inc
js
outsl
cmc
mov
sub
push
dec
mov
cmp
push
jnp
lahf
sbb
aad
in
mov
shlb
iret
adc
add
out
pop
ljmp
push
adc
mov
shll
cli
push
mov
imul
out
pop
mov
dec
cmp
leave
iret
dec
bound
fldcw
leave
int
pushl
lcall
stc
mov
mov
inc
and
insb
shrb
outsl
aam
dec
xor
inc
std
nop
bound
xchg
lds
cmp
in
iret
fs
xadd
xchg
and
shlb
push
nop
aaa
adc
scas
sub
cmpsl
inc
xchg
cltd
lret
jl
push
stos
push
jb
jge
cli
dec
xchg
mov
pop
dec
adc
out
sub
sbb
je
lods
int3
ljmp
sbb
xor
negb
mov
sti
jp
js
pop
pop
icebp
and
add
mov
jbe
adc
push
cmp
dec
daa
pop
gs
push
aaa
pop
and
mov
gs
cmp
inc
in
or
mov
xchg
jae
les
int
cltd
lea
or
mov
lcall
xor
bound
loop
fistl
sub
push
pop
xchg
outsl
ds
pop
push
ret
xor
pop
repnz
into
dec
out
adc
pop
hlt
push
fbstp
lea
xchg
test
mov
push
push
or
xlat
mov
outsb
xor
loop
mov
and
mov
rolb
mov
cli
and
mov
mov
mov
sbb
aad
adc
add
pushf
insb
dec
mov
push
xor
cld
dec
cmpl
jno
xor
push
imul
push
shrl
lods
dec
inc
adc
scas
fistl
adc
pushf
add
add
ret
inc
pop
sub
push
mov
jno
out
sbb
test
lock
sahf
leave
aas
adc
ret
cmp
sub
adc
inc
push
test
add
scas
mov
data16
aam
lock
jb
icebp
sbb
pop
xchg
loope
add
decl
dec
and
pop
test
mov
sub
pop
lret
es
xor
mov
cmp
sub
mov
fwait
push
sub
imul
jecxz
sahf
adc
out
ret
mov
cmp
dec
pop
pop
sub
jno
mov
outsl
mov
ss
jle
fs
dec
xchg
outsl
addl
loopne
cmp
add
or
sahf
xchg
mov
sub
jbe
fs
cltd
cmpsl
repnz
push
jle
mov
nopl
cmpsb
mov
pop
and
xchg
mov
mov
xor
mov
sti
xor
out
mov
fs
stos
mov
fiadds
dec
out
add
pop
aam
pop
pop
or
fcmove
popa
pop
jbe
out
xorl
xor
sbb
dec
shl
mov
outsl
cmp
sahf
sbb
out
js
jecxz
cmp
xchg
sarl
jb
jnp
leave
mov
push
sbb
aad
add
jae
imul
fptan
not
cld
pop
push
imul
sub
pop
lcall
inc
sbb
cltd
xor
push
push
loopne
in
pop
jg
jl
addr16
jnp
and
push
addl
cmpb
gs
pop
je
outsb
outsb
sub
add
test
adc
rclb
inc
inc
in
stc
dec
pop
cld
xor
push
mov
jbe
jb
mov
inc
aaa
adc
pop
xor
shlb
fcomps
push
jae
dec
sbb
cltd
sub
outsl
push
lock
xchg
add
sbb
push
push
movsb
fcomps
aaa
loopne
mov
push
test
lods
adc
mov
clc
rol
mov
daa
mov
xchg
mov
testl
xchg
loop
xor
mov
or
xchg
insl
push
push
adc
dec
push
mov
shrb
ds
and
movsl
mov
inc
cmp
sbb
jnp
orb
cmp
aam
lods
ficoms
adc
ret
fwait
cltd
mov
test
jecxz
rcr
jp
xchg
or
mov
push
xchg
inc
outsl
xor
xor
jg
lret
mov
les
decl
jp
pop
jae
aad
cmp
xor
packssdw
mov
fldenv
xchg
and
sbb
gs
repz
movsl
mov
cmp
lret
add
xor
add
call
or
xchg
lcall
fldcw
cmp
or
sarl
cmpsl
and
mov
lret
sub
inc
jp
pop
cmp
xchg
fnstenv
call
and
fnstsw
lcall
sti
je
cmc
clc
push
push
cmpsb
mov
fcmovu
sub
or
pushf
ljmp
cmpsb
call
cwtl
ss
xorb
push
cmp
xor
push
shrl
mov
dec
outsl
sub
mov
mov
inc
rorl
adc
dec
dec
sbb
lret
inc
cmp
adc
movsb
mov
mov
inc
mov
pop
jg
mov
jne
jmp
and
ret
jmp
int
mov
jne
in
cmp
enter
repnz
jecxz
xor
jo
pop
les
lds
mov
insb
xchg
inc
sbb
jmp
mov
cmp
jge
ljmp
push
mov
jne
stc
sbbb
xchg
repz
add
pop
imul
dec
shr
and
or
js
fnstsw
inc
inc
inc
mov
push
inc
add
icebp
ss
lret
jb
cmp
aam
and
imul
or
insb
stc
fnstenv
outsb
sub
dec
push
ret
xchg
mov
push
imul
cmp
add
jg
mov
int
mov
jp
out
fwait
jns
cli
mov
scas
mov
test
mov
js
or
mov
rolb
mov
ret
push
je
nop
cmp
or
mov
add
xor
fisttpl
lret
lret
mov
scas
or
dec
jo
cli
pop
aam
jns
lahf
clc
aas
stos
jo
cltd
pusha
sahf
dec
xchg
lds
mov
cmc
dec
fiadds
mov
int3
jl
mov
aam
add
rcl
xor
inc
cwtl
stos
dec
lods
pop
or
inc
lods
jbe
or
stos
xor
lret
push
cli
cmp
sar
mov
pop
push
test
repz
in
mov
push
ljmp
packuswb
mov
test
mov
mov
pop
stos
cmp
and
sti
sub
cmp
lahf
icebp
and
or
daa
stc
and
mov
xchg
test
into
dec
xor
mov
dec
loop
xor
loope
test
lods
inc
data16
nop
rol
fnstcw
js
cmp
or
cmpsb
fcomip
adc
out
sub
jae
xor
das
jp
movsb
das
inc
lea
jge
xlat
pop
leave
pushf
shlb
mov
add
pop
and
jb
mov
or
jl
mov
cld
add
in
xchg
lahf
fildl
popa
fadds
repz
inc
fmull
clc
not
mov
push
push
mov
shrb
push
in
out
out
pop
clc
fiadds
jecxz
push
cmp
pop
mov
ret
dec
cmpsb
js
push
popa
pop
jbe
pop
xchg
iret
faddl
pop
adc
and
jge
cwtl
notl
cmp
mov
push
and
jp
scas
scas
ds
sub
jb
pop
sub
xchg
xchg
pop
adc
push
jecxz
sub
or
mov
adc
lds
push
add
cltd
sub
cmp
sbb
fs
pop
or
loop
js
clc
das
mov
or
add
xor
dec
lds
cltd
mov
mov
sbb
dec
jl
push
and
jne
dec
call
xchg
ret
xor
push
mov
pop
sub
fildl
loopne
icebp
ja
push
adc
or
or
jge
sbb
add
loop
in
rcll
shll
mov
adc
pop
test
stc
loopne
add
add
mov
mov
mov
aas
jl
js
jmp
mov
pop
cmova
adc
mov
in
adc
pop
aad
xchg
push
add
mov
cs
xchg
testb
dec
pop
jb
dec
or
aad
les
repz
rorb
outsl
push
daa
inc
imul
cmp
sbb
xorb
push
mov
or
pop
jnp
mov
lods
orb
jae
jnp
add
lret
repz
jne
jnp
add
push
xor
mov
push
jns
outsl
jecxz
inc
lret
into
js
and
rcr
dec
xor
xor
cmp
push
imul
popa
cmpsb
inc
xor
inc
push
sbb
mov
out
sarb
lret
sub
jg
dec
add
sti
mov
mov
xchg
mov
jmp
outsb
stos
into
mov
adc
fbld
movsb
sar
jecxz
sub
mov
inc
jp
fdivrl
and
punpckldq
jecxz
jno
add
notl
stc
cmp
pop
or
das
repnz
add
or
or
dec
sub
movsbl
adc
push
insb
jae
popf
imul
pop
fwait
sub
add
xor
add
fcomps
loopne
dec
push
in
sub
inc
push
ret
aam
unpcklps
xchg
push
mov
add
iret
pushf
clc
ret
sub
pop
push
in
mov
mov
cli
push
lods
adc
insl
mov
outsl
sbb
pop
gs
mov
cld
arpl
xchg
bnd
pop
insb
scas
repz
inc
and
fincstp
popf
cld
fistpl
sub
and
inc
inc
arpl
in
add
in
fbstp
stos
rolb
jb
adc
lock
jno
xchg
in
xor
loopne
ficompl
aam
imul
pop
daa
shrl
movups
inc
cwtl
pop
nop
cmp
lcall
push
in
mov
andb
mov
insl
addr16
sbb
ss
fimuls
and
mov
mov
xor
pop
data16
fstl
ret
push
cmp
rol
sbb
cmp
pop
icebp
sub
mov
push
dec
in
add
fisubl
les
inc
and
test
cmpsb
jo
mov
pop
inc
cli
push
fmull
mov
movsl
sbb
xchg
fidivrl
pop
mov
imul
mov
mov
sahf
popa
ret
sbb
lods
ret
sbb
es
push
hlt
pop
adc
orb
jnp
mov
mov
or
add
inc
mov
outsb
push
stc
jbe
fldl
mov
out
loop
lods
push
inc
sub
test
pop
lret
daa
ret
ret
outsb
cmp
jle
scas
pop
fs
daa
or
int3
and
cmpsl
cmp
jge
sbb
dec
or
fdivp
aad
ds
xor
sbb
mov
mov
inc
idivl
jg
xchg
mov
cs
outsl
jb
push
stos
mov
mov
bound
pushf
sbb
push
sti
int
adc
popa
inc
xor
mov
shll
imul
or
and
fmull
push
inc
inc
cmp
pusha
push
sub
jbe
repz
adc
imul
iret
sahf
lock
icebp
adc
jmp
std
jae
cmp
jle
push
mov
pop
call
dec
aam
ret
movsl
xor
jno
xchg
les
cwtl
sti
filds
mov
add
stos
cmpsl
rorl
jns
aaa
xor
mov
mov
pop
mov
and
jb
mov
jecxz
cmpsb
mov
mov
loope
push
shr
push
push
xchg
std
aam
push
push
test
inc
mov
sti
xchg
js
xlat
stos
cmp
or
lds
out
shll
add
ljmp
fbld
jle
sbb
jns
push
jl
xchg
xlat
push
pop
add
aaa
push
inc
mov
jns
hlt
shl
xor
sti
cltd
sbb
pop
push
aaa
test
push
pop
imul
inc
xchg
xor
mov
pop
or
pop
pop
and
mov
jle
mov
lahf
aam
adc
pusha
inc
insl
outsl
xor
rclb
mov
dec
or
in
stos
inc
xor
push
addr16
sub
enter
mov
ja
stc
sub
mov
jne
xor
or
pop
sar
cltd
clc
and
fstl
sbb
cltd
in
mov
iret
adc
inc
push
cmp
jge
enter
and
out
push
jmp
pop
std
inc
inc
add
adc
data16
out
mov
pop
mov
das
int3
push
aad
outsl
dec
loope
lods
sbb
pop
dec
ja
inc
inc
push
orb
shll
jmp
std
movaps
mov
dec
lret
mov
dec
jge
xor
popl
shlb
pop
inc
cmp
dec
movsb
mov
lret
pop
les
lcall
xchg
mov
mull
lcall
add
jne
cmp
out
jno
push
xor
je
mov
cwtl
cmpsb
jl
push
fnsave
ja
imul
mov
push
scas
dec
mov
or
roll
fistpl
push
lret
fidivrs
fildl
mov
add
cmc
xchg
cmp
or
lcall
mov
nop
ss
pop
mov
xor
pop
mov
mov
scas
pop
int
sub
mov
inc
cmp
fistl
ljmp
ljmp
cmp
lods
mov
sbb
test
cmp
pop
fdivrl
test
mov
jns
mov
inc
fcoml
popa
cmp
loope
sub
cmpsb
pop
dec
add
or
stos
imul
xor
in
pushf
xor
and
inc
jmp
iret
mov
lods
jb
mov
mov
xor
and
call
loopne
dec
jbe
adc
cltd
jne
mov
mov
int
pop
shll
mov
sub
pop
jnp
sub
jecxz
adc
lds
push
ljmp
enter
das
fidivrl
scas
dec
mov
xchg
leave
lea
push
add
mov
jne
mov
loope,pt
and
adc
push
das
push
push
inc
enter
pop
sub
mov
arpl
ret
out
loopne
std
jno
push
sub
add
dec
popa
xchg
sub
cmpb
imul
dec
dec
fwait
xchg
movaps
and
dec
cs
scas
xchg
add
mov
and
outsb
mov
push
repnz
popa
pop
mov
or
and
in
insl
xor
jl
xor
andb
mov
js
push
addr16
or
in
stos
push
adc
xor
in
mov
cmc
les
iret
repnz
add
xor
je
adc
mov
or
cli
add
adc
adc
sub
je
stos
daa
push
dec
sahf
int3
mov
and
add
lret
inc
mov
sub
in
sahf
cli
mov
in
push
ja
adc
pushf
sub
iret
insl
push
add
cmpsb
fmuls
movsb
jmp
mov
test
jmp
mov
iret
sbb
cmp
cmp
orl
jge
cmpsl
dec
and
lret
sub
jnp
push
test
repnz
inc
push
out
call
mov
xchg
lret
repz
jle
xchg
mov
insl
adc
sub
xchg
dec
pop
pushf
fxch
mov
or
and
and
fsubr
jo
insl
adc
into
xchg
inc
sub
mov
cltd
xor
mov
outsb
or
repnz
cwtl
cmp
jl
movsb
sbb
fisttpll
hlt
decl
xor
enter
in
inc
dec
sti
popa
out
pop
inc
mov
rcll
mov
dec
stc
add
loop
jne
int
stos
stc
in
pushf
pushf
movsl
inc
rcr
imul
testl
push
pop
insl
jo
cmp
stc
scas
rol
adc
bound
lods
jmp
xchg
jnp
cs
dec
and
loope
in
and
xchg
notl
daa
clc
sub
mov
sub
es
mov
cmc
adc
lahf
out
inc
push
pop
sar
or
dec
mov
sub
nop
adc
push
xor
pushf
lock
mov
jle
hlt
inc
imul
and
ja
xchg
mov
lods
les
int
inc
repz
shll
test
inc
xlat
sbb
jge
xchg
fisttpl
cmp
and
sti
es
arpl
in
insl
mov
out
adc
in
mov
add
or
sbb
cwtl
xchg
push
sub
icebp
dec
insl
push
outsb
jno
add
cli
xor
loope
repz
lea
mov
sarl
das
ret
mov
adc
out
aas
inc
dec
cmp
ret
mov
push
push
push
sbb
inc
leave
ffreep
push
and
add
pushf
test
sub
pop
push
insb
cmp
rcrl
in
push
push
mov
out
pop
mov
push
mov
insb
push
and
or
arpl
subl
pop
pop
stc
pop
fstl
mov
jo
xor
jp
sbb
mov
loopne
xor
fists
push
shrl
lahf
outsb
cmp
cli
fwait
insb
daa
xor
pop
int3
stos
or
inc
iret
or
call
pop
push
xchg
cmp
sbb
fidivrl
imul
addr16
out
sbb
fdivr
hlt
ljmp
xor
lret
adc
jb
sub
jo
xchg
rclb
mov
in
sub
xchg
in
cmp
mov
add
pop
scas
sbb
leave
in
jl
adc
lret
xchg
inc
es
movsl
repnz
int
fsubr
mov
push
adc
fsubl
popa
inc
lock
std
in
mov
mov
sub
push
sub
or
inc
pop
gs
fwait
xchg
shll
jge
orb
jp
cmc
pop
test
jg
inc
ds
aad
or
js
sarl
cmpsb
sbb
lret
adc
cmc
ret
add
orb
adc
andb
inc
push
xchg
mov
in
cmp
and
add
sub
test
repnz
pop
sbb
pusha
pop
aaa
dec
out
xlat
mov
repz
aad
mov
es
stos
mov
and
loope
fidivl
das
fwait
push
insb
sarb
jmp
lahf
pop
cltd
je
dec
daa
sbb
jmp
dec
sbb
stos
fs
or
lret
notb
clc
or
outsb
jo
repnz
lods
jbe
pop
sub
in
pop
cmp
sbbb
lea
inc
decl
adc
call
lret
inc
push
imul
clc
aam
mov
xchg
push
mov
and
or
lock
xchg
adc
fidivrl
sbb
inc
mov
ljmp
addl
xchg
and
cmpsb
mov
nop
daa
pusha
sar
flds
rolb
inc
mov
loop
int3
mov
lods
jle
xor
sub
adc
js
mov
flds
push
test
sbb
test
popf
sub
inc
xlat
subl
push
ljmp
imul
mov
test
inc
mov
inc
add
sub
dec
and
mov
dec
or
ret
in
in
imul
xor
ret
and
dec
and
ss
cmc
int3
andb
adc
repnz
cmp
sub
pop
imul
data16
sub
mov
out
sbb
outsl
pop
out
lea
add
jbe
mov
jns
jmp
add
outsl
lcall
sbb
je
add
jl
mov
inc
xlat
fwait
sahf
and
jb
and
lds
pop
mov
push
sbb
xchg
enter
adc
insl
fbld
pop
aaa
aam
cli
sbb
gs
nop
dec
or
jg
push
xchg
lret
cmc
xchg
dec
ljmp
cmp
xchg
mov
inc
and
icebp
cmc
les
push
call
std
test
fsub
push
push
popa
scas
mov
inc
jo
dec
lahf
dec
dec
xchg
and
daa
mov
fiaddl
mov
xchg
out
hlt
pop
cmp
inc
cs
mov
fdivl
ss
mov
out
pop
add
add
popf
nop
push
pop
and
test
cmc
out
lds
imul
push
cmp
stos
pop
movb
rcll
out
adc
movsl
mov
push
sub
aam
pusha
xor
sahf
jl
dec
hlt
fs
inc
test
mov
adc
jne
cwtl
xchg
cmpsb
push
push
dec
pushf
dec
xor
icebp
push
xchg
fwait
xor
dec
xchg
mov
subb
shrl
fcmovnbe
xchg
sub
add
je
addl
inc
popa
out
dec
clc
out
test
movsb
sub
xchg
out
jecxz
repz
jl
aad
inc
cmp
xor
icebp
shll
dec
add
adc
out
in
sub
mov
inc
xchg
out
fdivl
rcll
or
cld
in
dec
enter
xlat
jp
lods
loope
adc
in
push
cmp
mov
xchg
cmp
fwait
movsl
xchg
cmp
cltd
fimuls
xor
lods
test
jle
dec
imul
mov
jnp
ret
sbb
mov
ss
mov
or
mov
and
cmp
int3
inc
aaa
sub
testl
pop
in
imul
inc
sub
int
xchg
mov
lcall
js
xor
cld
popa
push
cmpxchg
test
xchg
pop
pop
and
xor
xor
psllq
addb
sbbl
fcmovnbe
pop
movsb
call
enter
jge
jecxz
jmp
add
adc
mov
adc
jmp
lret
rorb
push
jbe
sbb
iret
push
xchg
xor
ljmp
cmp
cltd
add
outsb
or
mov
dec
xchg
enter
clc
test
rol
add
mov
aad
xchg
add
in
or
or
sahf
jg
mov
adc
add
push
idivb
and
mov
popa
fwait
or
inc
xchg
jb
loop
dec
cltd
and
push
pop
jmp
in
mov
mov
push
lcall
push
out
mov
aam
stos
sub
int3
jge
test
mov
hlt
aas
jge
mov
arpl
push
adc
rclb
pop
jg
and
sub
xor
mov
rolb
cmp
repz
popa
dec
push
bound
in
pop
ljmp
mov
push
cld
jo
mov
out
mov
imul
inc
rcll
fmull
mov
out
cmc
adc
rcll
data16
std
mov
out
add
shrb
daa
cmp
iret
sub
dec
cld
loopne
jae
push
push
sub
movsb
testb
mov
jo
aas
mov
shrl
jns
mov
dec
inc
jl
jle
fsts
push
sub
mov
pop
bound
fld
add
xchg
sbb
inc
push
dec
dec
mov
loope
arpl
mov
daa
inc
and
push
bound
fsubrs
leave
shrb
vmovq
jl
and
repz
cmp
jb
add
pop
dec
cmp
imul
push
popf
mov
pop
or
mov
dec
cmp
adc
rclb
inc
lcall
fimull
dec
scas
gs
lods
clc
ret
mov
sti
int
mov
in
lods
mov
add
out
jle
test
and
push
or
shrl
and
test
gs
dec
or
xchg
sbb
fcmovb
sarb
outsl
push
out
ret
inc
push
int
inc
sub
xlat
leave
jmp
xor
mov
push
fbstp
mov
lds
mov
push
mov
lret
dec
je,pn
push
xor
out
and
stos
out
icebp
popa
pop
pushf
xchg
das
sarb
or
pop
ret
scas
mov
inc
aas
in
jae
movb
cmp
lock
xchg
mov
scas
data16
cmp
lret
imul
out
sub
inc
fwait
adc
scas
rorl
lret
mov
jmp
pop
sub
lock
sbb
mov
xor
mulb
or
lods
mov
sub
inc
cmp
pushf
push
and
mov
mov
lcall
fnstcw
xor
push
das
mov
int3
iret
sub
jbe
sub
mov
test
loopne
push
mov
aam
lahf
mov
push
in
shll
shrl
movsb
xchg
nop
push
jmp
inc
dec
jmp
mov
pop
mov
ja
jle
or
mulb
scas
push
sti
cmpsl
aas
icebp
inc
pop
mov
gs
inc
push
mov
aam
inc
push
test
mov
cmpb
xchg
adc
adc
push
imul
and
xchg
mov
xor
pop
mov
xor
movsl
in
add
sub
push
mov
jnp
xabort
add
sub
in
mov
out
das
cmpsl
mov
aam
jp
adc
push
dec
push
mov
mov
int3
jl
mov
adc
stos
out
xchg
arpl
add
cmp
ljmp
out
dec
add
mov
imul
xlat
inc
push
into
fs
stc
push
xchg
rcl
pop
mov
lock
or
cmpsl
mov
adc
fdivl
add
pop
cmpsl
add
lahf
addr16
addr16
sub
and
ja
pop
in
sub
jo
arpl
add
fisttpll
adc
js
mov
pop
jp
cmc
iret
xchg
nop
xchg
aad
rcrb
mov
push
xchg
inc
test
jg,pn
iret
ljmp
lret
and
std
sub
aam
aam
aam
mov
xlat
pop
add
adc
popf
imul
mov
sarb
lds
in
inc
fbld
pop
fnstcw
mov
and
loopne
add
pop
mov
int
inc
mov
push
mul
pusha
call
mov
add
fwait
cltd
mov
xchg
aaa
or
daa
mov
das
xchg
jecxz
sbb
dec
cmp
testb
dec
inc
dec
shl
cmpsl
aad
or
mov
dec
enter
rcrb
xor
dec
cmp
and
pop
rolb
les
shlb
outsb
cwtl
sbb
jns
gs
mov
mov
scas
inc
jo
fildll
dec
jbe
or
pop
divps
xchg
iret
mov
test
mov
das
mov
fs
imul
cmpl
aad
stc
out
fcmovnb
and
popa
mov
mov
fcomp
push
jno
push
lcall
leave
push
dec
std
bound
cmpsl
add
scas
shll
stc
mov
gs
mov
popa
or
ficompl
fisubs
in
xor
fisttps
push
sahf
mov
shll
xor
jmp
jle
mov
js
in
jns
repnz
inc
daa
mov
icebp
jbe
jns
mov
xchg
mov
pop
ss
aad
dec
lcall
dec
test
push
inc
movsl
daa
imul
cmp
fisubl
fistpll
and
ret
scas
xchg
aas
add
cmp
es
lret
push
xchg
dec
push
mov
outsb
mov
push
setb
cmp
lret
in
int3
push
adc
add
push
jo
arpl
cmp
cmpsl
xchg
ljmp
xchg
arpl
sbb
add
movsl
mov
scas
sahf
ss
popf
mov
add
or
push
in
nop
flds
cli
aam
bswap
xchg
lods
push
cmpsb
cwtl
into
mov
out
adcl
ret
shrl
mov
pop
sahf
xchg
dec
push
xchg
lret
sbb
cmc
insl
xchg
into
lret
dec
push
arpl
cmp
es
adc
lds
dec
mov
and
enter
dec
xor
in
dec
andl
pusha
sarl
lock
cltd
cld
jecxz
fwait
imul
add
pushf
leave
or
cmp
das
sub
daa
sbb
jno
inc
and
jae
jno
sbb
fnstenv
pop
gs
hlt
push
cltd
mov
xchg
sti
adc
scas
jp
stos
aaa
shlb
iret
fwait
ret
loop
js
and
outsb
mov
mov
int
fildll
pop
daa
pop
out
imulb
cmpsb
mov
mov
jnp
cwtl
sbb
sbb
shr
cltd
push
push
mov
daa
sbb
imul
repz
push
dec
sbb
jg
iret
in
repnz
and
cli
test
jp
testl
arpl
aad
jmp
mov
out
aam
mov
inc
sbb
pop
mov
sub
shll
sbb
test
iret
mov
push
idiv
adc
decb
cltd
pop
mov
pop
jns
mov
lods
scas
jmp
lret
cmp
je
pop
dec
mov
sub
rcrl
cmp
add
cmp
icebp
mov
shll
jae
dec
sub
repnz
sti
iret
mov
mov
jg
sbb
jmp
cmpsb
push
sub
in
rol
fisttpll
jnp
fucomip
aam
in
fcmovbe
decl
jns
inc
or
into
lds
push
dec
mov
and
mov
sbbb
lods
std
data16
sbb
mov
ljmp
xor
inc
xor
pop
pop
inc
add
mov
fnstenv
add
int3
mov
sub
mov
inc
mov
dec
aad
adc
add
idivb
push
push
insl
fwait
sbb
clc
shrl
inc
pushf
aas
mov
call
adc
inc
nop
add
xlat
lock
mov
stos
idivl
cmp
mov
je
dec
out
call
lods
mov
andb
shrb
scas
aaa
lret
xchg
in
fists
cmpsb
mov
and
mov
jecxz
push
jl
or
mov
xor
stos
int
scas
mul
cmpsb
or
in
int
pop
int
mov
cmp
dec
clc
pop
or
mov
in
outsl
bound
inc
sbb
xor
xor
sahf
jae
les
jg
xlat
data16
nop
mov
sbb
pop
adc
addr16
int3
in
out
iret
pop
push
xchg
xchg
cmc
sti
jg
add
jns
mov
pop
fs
call
pop
jno
sub
mov
sub
xchg
add
int
cmp
mov
cwtl
pop
mov
cmpsb
repnz
lods
sbb
sub
pop
xlat
or
aas
addl
filds
js
cmpb
sti
es
and
cmp
push
lahf
fwait
and
push
popf
dec
mov
push
or
sbb
sbb
fcoml
sbb
jl
or
std
pop
aas
cmpsl
fs
pop
loop
sbb
ds
add
inc
lods
popa
rol
sbb
cmp
leave
rolb
jbe,pt
pop
popf
and
xchg
fbstp
mov
shr
mov
sbb
push
pop
mov
pop
aad
sub
in
test
enter
movsb
jp
sub
adc
mov
das
jp
bound
mov
cmp
pop
scas
ficomps
clc
aam
je
fwait
or
inc
notl
test
fbstp
dec
xchg
sbb
pop
fincstp
fs
shrb
lock
cmp
loop
dec
loop
mov
mov
jbe
add
cmp
subl
jle
mov
aas
add
out
xchg
movsb
sub
cmpsl
mov
and
sub
sti
xor
or
xchg
sbb
stos
negb
fldl
lret
sub
jae
add
jmp
xor
xchg
int
push
dec
cli
add
cmp
cltd
cmpsb
dec
std
cs
iret
mov
insl
jle
sbbb
xlat
fcompl
jbe
cmpsb
jmp
lds
xor
shrb
iret
add
jo
cltd
push
or
cmpsb
adc
lods
imull
sahf
jae
cmpsb
xchg
mov
lds
adc
imull
fisttpl
pop
shll
mov
notl
push
mov
sbb
xchg
mov
pop
insl
decb
jl
dec
loopne
loop
sarb
sahf
icebp
dec
cmp
insb
pop
leave
aam
dec
addl
dec
dec
push
mov
mov
adc
xor
push
mov
inc
arpl
xor
jnp
cmp
mov
pop
popf
mov
sbb
push
into
pop
push
sbbb
jae
mov
and
and
mov
fimull
adc
sbb
shll
out
mov
cmp
mov
dec
cmp
jbe
sub
mov
rcll
sub
mov
int3
ja
mov
pop
push
jmp
outsb
subb
rcl
adc
imul
add
cmp
test
jnp
mov
mov
pop
mov
or
jge
xchg
mov
lea
jns
clc
push
push
push
mov
aas
dec
mov
jmp
sti
shrl
cmpsl
and
xchg
push
lret
cmpsb
sbb
jb
mov
mov
jecxz
xor
mov
repnz
and
fstl
aam
mov
mov
ds
lods
mov
mov
and
xlat
int3
cmp
cwtl
sbb
fwait
xchg
mov
cmp
lock
cli
icebp
in
cmp
lods
scas
out
mov
pop
xchg
inc
insb
jae
cmpsb
addl
mov
std
push
rclb
subl
sbb
pop
dec
scas
out
cmp
fistpll
mov
xlat
movsl
xor
decl
clc
out
out
stos
cmp
mov
rolb
xor
andl
jno
pop
movsl
sbbl
push
push
rcrb
sbb
test
dec
push
rcl
jge
mov
jno
mov
loope
sbb
add
loopne
dec
pushf
dec
xor
mov
or
dec
mov
outsl
inc
vpshlq
and
add
stos
shrl
mov
movsl
and
test
es
inc
pushf
and
ja
out
inc
push
mov
inc
daa
mov
pop
cmp
test
and
mov
xchg
stos
out
xor
cmp
arpl
adc
pop
nop
mov
sahf
add
out
fcoml
repnz
ljmp
insb
xchg
adc
rolb
mov
call
and
insb
js
adc
mov
rorl
mov
mov
dec
cltd
lret
fmuls
inc
push
aam
mov
pop
adc
nop
xchg
into
pop
xchg
mov
out
clc
daa
cmp
cmp
shrb
mov
lretw
sbb
daa
sbb
aas
xchg
sbb
insb
xchg
movsb
mov
xor
jle
push
imul
jmp
mov
daa
push
mov
jmp
push
pushf
lcall
lock
sub
push
loopne
sbb
or
loop
dec
pop
or
push
add
jg
mov
push
cmp
pop
sahf
std
insl
mov
dec
test
xchg
dec
les
mov
mov
cmpsb
sbb
sahf
sahf
push
aaa
jp
and
movsl
mov
adc
cmp
pop
pushf
mov
push
and
and
and
push
lret
ds
jae
scas
pop
jo
xor
mov
push
push
jnp
push
jge
fcoml
cmpsb
or
inc
sbb
ds
hlt
push
call
add
cli
dec
push
sub
mov
push
popf
shlb
and
in
cmp
lea
fs
xor
inc
lret
xchg
ret
lds
inc
fstps
pushf
daa
jge
fldenv
xchg
cli
inc
cltd
out
push
mov
mov
filds
inc
sub
sub
sarb
repz
cmpb
nop
xchg
and
pop
pop
fsts
sbb
test
and
stos
insl
push
imul
push
test
or
mov
fcoml
sub
cmpsb
sahf
rcll
cmc
sub
jp
mov
inc
shll
test
les
rcll
das
jmp
rcr
mov
mov
inc
ljmp
and
jo
fistps
cmpsb
sysret
jmp
data16
daa
mov
fprem1
es
and
lret
outsl
icebp
pop
xor
mov
popa
ljmp
and
and
add
and
pop
roll
or
dec
adc
push
sbb
and
jle
push
insb
sbb
fistpl
outsl
mov
out
cmp
jo
mov
or
pushf
fcmovnb
cmpb
lea
fmul
enter
adc
inc
sub
dec
fstl
mov
mov
adc
imul
aam
pop
jno,pn
inc
jbe
cli
repz
mov
or
in
mov
into
add
mov
cli
int
push
xor
sbb
mov
add
add
outsb
dec
mov
sbb
mov
adc
js
scas
aad
add
xchg
and
je
dec
stc
mov
push
pop
loope
enter
push
dec
fdivrs
sahf
mov
insl
nop
or
mov
cld
fldln2
sub
pop
add
xor
in
sbb
in
leave
and
inc
lods
js
icebp
mov
iret
pop
xor
xchg
inc
lret
or
push
cmpl
pushf
aad
mov
pop
jo
or
and
jns
sub
inc
mov
adc
jb
add
into
jnp
adc
mov
pop
ror
lods
fisttpll
loopne
push
in
push
mov
adc
fldz
dec
das
sub
stos
fisubl
mov
addl
cmpsl
ljmp
dec
cmpsl
es
sbb
xchg
sub
jp
add
adc
push
pusha
dec
ljmp
sbb
adc
mov
and
jp
stos
gs
push
out
adc
mov
xchg
push
das
cli
dec
mov
jbe
shll
and
sbb
fadds
stc
subl
repnz
jno
gs
mov
adc
sub
mov
inc
inc
push
stc
sub
mov
arpl
gs
mov
pushl
add
shr
pop
inc
aas
cli
lods
ja
mov
pop
adc
add
and
icebp
cli
xor
fs
cld
mov
mov
and
mov
out
roll
outsl
mov
inc
mov
xchg
push
push
or
mov
mov
loop
sbb
aad
sbb
loope
jbe
cmp
sub
out
mov
inc
adc
add
and
jae
cs
test
xor
push
mov
aad
add
repz
push
inc
mov
lret
or
cs
sbb
das
test
xor
leave
sahf
or
stos
ljmp
mov
daa
arpl
or
sbb
fcos
inc
mov
in
adc
shlb
push
push
mov
push
sub
daa
jmp
lahf
xchg
das
aam
xchg
inc
lret
popa
aas
push
insb
push
jno
shll
insb
ja
int3
into
pushf
negb
outsb
movsl
pusha
and
lods
sbb
fldl
xchg
dec
cwtl
test
subb
mov
mov
xor
imul
mov
cld
mov
and
xchg
cmp
movsl
xchg
add
loop
push
push
mov
cmp
jnp
jle
fdivl
cmpsl
leave
jae
cmp
xor
mov
pop
sbb
mov
sub
pop
mov
inc
test
mov
jnp
dec
dec
add
dec
adc
adc
mov
or
cli
rclb
ds
repz
xlat
push
lret
cmpsb
dec
adc
inc
and
jg
cmp
push
in
pop
aam
movsl
xor
inc
xor
nop
inc
rcrl
stos
popa
bound
out
jbe
lock
mov
fstpt
cld
mov
lretw
add
adc
cmp
dec
xor
arpl
pop
mov
bnd
loopne
aad
mov
js
rcrb
push
int3
pop
xor
dec
rcl
mov
and
pusha
in
xchg
mov
pusha
addl
or
ja
push
inc
add
das
in
pop
nop
pop
loop
mov
push
pop
ja
lods
dec
daa
push
mov
adc
jmp
clc
push
mov
push
push
push
mov
pop
cmp
xor
mov
adc
test
xor
popf
out
popa
xchg
sti
mov
cmc
aad
les
scas
test
xchg
out
cmc
testb
subl
inc
push
filds
clc
xchg
cli
icebp
ret
shll
jno
jmp
mulb
sub
jnp
mov
sbb
mov
out
jne
int
popa
repz
sar
cmp
xchg
leave
xor
mov
mov
push
out
sub
jno
mov
sub
js
jne
sahf
jge
jmp
pop
pop
loop
xchg
ljmp
gs
lods
xchg
mov
inc
iret
fs
pop
icebp
inc
cmc
mov
push
jge
andb
xor
into
rolb
addr16
sub
sub
imul
mov
sti
cmp
mov
push
add
imul
out
outsb
mov
or
inc
and
add
sbb
fprem
jbe
mov
mov
addr16
out
mov
outsb
incl
sub
sub
hlt
sbb
push
lods
scas
dec
or
mov
loope
push
jnp
pusha
pop
imul
or
sub
movw
mov
inc
ds
adc
xchg
xchg
rcr
jmp
movsl
clc
add
insl
decl
ds
dec
inc
push
xor
sub
xor
test
hlt
movsl
fstps
xor
out
and
int
dec
mov
cmp
es
mov
sub
jmp
leave
push
adc
jns
xor
lods
fildl
negb
cmp
xor
clc
loopne
lcall
sbb
adc
push
dec
clc
cltd
mov
mov
stos
mov
jle
in
and
push
lds
sbb
enter
or
mov
in
ja
jb
or
pop
push
xchg
inc
stc
aas
sar
xchg
lret
mov
dec
loopne
add
movsb
in
loop
dec
in
es
push
mov
loopne
in
dec
stc
cltd
cmp
inc
mov
movsl
pop
or
arpl
in
test
data16
std
int3
jnp
fldcw
popa
mov
test
in
in
add
ror
bound
ja
or
inc
mov
scas
cmp
mov
scas
fcoms
fcmovnbe
mov
push
mov
adc
movsl
xor
js
mov
inc
stc
fisttps
test
jp
aad
pop
pusha
jno
enter
xor
ja
mov
inc
xchg
sbb
adc
std
cmpsb
xchg
xor
mov
xchg
nop
outsb
mul
mov
jge
dec
lock
and
xchg
outsl
xchg
lret
push
and
mov
jbe
add
or
push
lds
dec
push
out
and
jnp
repnz
xlat
xchg
pop
pop
hlt
sub
test
loopne
jle
lods
fldl
or
adc
nop
and
rolb
push
sub
jge
cmp
jo
int
sub
or
mov
adc
xor
mov
cltd
loope
aaa
pop
call
jg
adc
mov
into
xchg
popf
xchg
rol
fwait
ja
sub
dec
xchg
stc
fadds
mov
orb
out
ret
xchg
addl
dec
xor
stos
pop
clc
repz
pop
push
sub
xchg
das
lods
push
push
flds
mov
sub
mov
xor
into
sub
inc
mov
dec
mov
pop
mov
dec
sbb
push
mov
mov
les
sub
add
push
scas
into
movsb
cmp
popl
ret
jne
mov
shr
aad
mov
mov
daa
pop
mov
ficompl
ss
les
loopne
inc
mov
ljmp
cmpb
and
scas
cmpsb
cmp
push
insb
movsl
pop
test
repnz
dec
dec
imul
sbbb
mov
jmp
cwtl
cltd
mov
mov
pop
out
scas
sbb
pop
lahf
imul
dec
jge
dec
adc
lock
jb
scas
push
pop
inc
pop
test
xchg
repz
jle
addb
shrl
das
mov
or
adc
push
cltd
jle
and
cmc
imul
cmp
je
add
sub
repnz
lock
mov
push
fwait
pop
pop
in
ds
sti
mov
mov
decl
add
aam
dec
and
pop
and
lods
xchg
sbb
jne
fdivp
and
jle
push
cwtl
inc
jg
mov
and
aaa
stc
insb
lcall
movsb
push
adcl
xor
cmp
inc
or
sbb
icebp
dec
jecxz
adc
icebp
cmpsb
sbb
push
pop
jmp
push
clc
lret
mov
scas
adc
testl
mov
push
or
test
add
clc
in
in
sub
push
into
lea
bound
push
in
and
mov
sbb
pop
lahf
nop
adc
es
div
test
mov
adc
mov
mov
arpl
and
fs
leave
icebp
imul
aad
jbe
pop
add
sub
jmp
leave
test
mov
jp
xor
and
inc
mulb
mov
les
cltd
push
mov
inc
fdivr
hlt
daa
in
jnp
jnp
mov
or
sti
mov
dec
add
jb
stc
push
jns
or
pop
jno
popf
dec
aas
fists
add
mov
stos
bnd
sti
push
stos
cld
test
add
int3
mov
scas
push
push
shll
jmp
mov
pop
and
rcr
mov
ds
and
mov
mov
push
jmp
test
jns
adc
cmp
mov
arpl
mov
dec
jns
cmc
sbb
cwtl
movsb
ret
aam
mov
icebp
fsubrs
jg
addr16
popf
rcrb
clc
repz
adc
push
jb
insb
arpl
jle
mul
cld
and
cmp
mov
push
ret
shlb
or
lods
sub
sub
lods
push
xchg
imul
inc
in
inc
and
adc
pop
sbb
mov
ret
mov
sbb
jne
dec
sbb
daa
sbb
movsl
in
inc
jmp
shrl
negl
xor
cmp
rolb
jle
xor
pop
sbb
xchg
call
or
out
insl
jb
push
arpl
lock
out
pop
inc
cmp
sub
into
jg
inc
rcll
in
jae
cli
inc
fwait
adc
out
in
mov
xchg
leave
cmp
mov
fsub
adc
and
adc
fisttpl
mov
ss
lret
mov
push
jne
mov
test
test
scas
sahf
subb
pop
pop
incl
jle
repz
xchg
sub
cmp
fistpl
out
mov
push
ret
adc
std
jnp
xchg
aas
pop
outsb
orl
push
cmp
rorb
xor
andb
aaa
data16
data16
push
int3
into
ret
or
push
pop
scas
jae
fs
jecxz
xchg
sbb
cmp
add
scas
mov
add
mov
test
push
js
or
pop
dec
mov
call
ret
mov
aas
pop
rcrl
fimuls
out
push
cmpsl
ljmp
out
sti
lods
xchg
pop
xchg
push
xchg
leave
sub
push
bound
xchg
push
dec
stc
fisubrl
inc
push
mov
adc
mov
sbb
xor
fs
out
jns
mov
in
je
loope
pop
xorb
xchg
add
into
dec
cmp
cmp
js
mov
push
xchg
push
je
dec
push
into
int3
icebp
jg
pop
nop
pop
fdivrl
inc
add
imul
movsl
cmp
or
mov
rcrb
cmp
jbe
or
push
inc
mov
shrb
cmc
mov
mov
pop
out
pop
jp
xchg
inc
fcmovnbe
lods
ja
movsl
fstpt
andl
and
and
push
pop
fwait
cmpsl
data16
fsubl
mov
repnz
and
mov
aaa
dec
cmp
lahf
aaa
mov
pop
out
sbb
push
push
jecxz
out
aam
xor
gs
pop
mov
mov
dec
jmp
xor
or
loop
mov
pop
pop
xchg
insb
loopne
pop
rorl
ds
add
pop
mov
sbb
lock
push
jnp
jmp
sti
rcrb
cmp
call
inc
int3
fstps
cmpl
xor
fmul
push
ret
jne
out
or
mov
dec
lea
xchg
pop
leave
xor
xchg
popf
pop
adc
roll
gs
das
loope
or
addr16
cmp
sti
je
xor
test
inc
pop
fidivl
jmp
outsb
sbb
and
sub
ljmp
lret
add
push
ja
fiaddl
xchg
lret
push
cmp
int3
imull
stos
stc
xlat
mov
add
lock
leave
jo
shl
gs
push
inc
rorb
push
lods
mov
lods
add
sbb
jo
scas
jno
or
shll
jmp
cmp
jle
test
rcll
stc
mov
mov
movsb
lods
xchg
nop
into
and
aam
adc
add
mov
test
es
push
mov
negl
mov
cmp
jp
pop
pop
loope
or
or
push
popa
mov
into
ss
or
mov
repnz
andb
push
adc
popa
mov
rorb
insb
pop
inc
inc
mov
xchg
and
incl
ja
or
jmp
sbb
je
testl
pop
sub
shll
jmp
out
aam
push
nop
ficompl
xor
push
xor
push
cmp
js
rcll
sbb
pop
xlat
ror
cmp
xor
cld
pusha
push
cld
and
aaa
xor
pop
sarb
filds
insb
sub
mov
xor
push
ds
out
testb
jo
dec
cs
lahf
sbb
xor
enter
movsl
loope
fcmovbe
cmp
pop
pop
adc
scas
cmp
lock
xor
add
sub
cmp
cmpsb
int
pop
cltd
ret
lret
fs
and
ss
pop
rcrl
dec
cmpsl
xchg
in
out
fidivrl
push
jb
fwait
xor
inc
clc
fwait
hlt
mov
lret
pop
dec
inc
fistl
aaa
pop
pop
jbe
es
xlat
sbb
mull
popf
cmp
enter
jl
inc
mov
insl
jecxz
xchg
jl
call
or
sub
in
lret
lret
push
je
test
and
mov
ljmp
jb
shll
aad
fildl
fidivl
cmp
call
mov
loopne
mov
scas
cmp
sbb
jmp
add
insl
add
cmpb
dec
mov
cli
jnp
pop
insl
in
and
js
mov
cld
xlat
pusha
inc
mov
mov
push
popf
cmp
mov
enter
lcall
gs
testb
enter
push
int3
ret
push
adcb
jmp
and
mov
lret
andl
dec
inc
adc
pop
sbb
cmp
add
lods
fistps
mov
mov
xor
push
ret
or
fldt
rcrb
rcl
inc
ss
es
adc
mov
das
or
ret
leave
lds
or
mov
shl
and
bound
in
mov
aaa
clc
cld
add
sbb
call
repnz
sub
nop
sarl
cmp
jg
xchg
scas
popa
adc
mov
mov
sub
inc
add
mov
dec
outsb
add
adc
cmp
ja
je
push
in
cmp
dec
mov
mov
fwait
popf
test
pushf
push
mov
ljmp
popa
xchg
leave
sub
or
stos
xchg
hlt
xchg
push
inc
mov
shr
cwtl
test
loop
adc
ss
cmp
into
pop
rcll
mov
sub
gs
fmuls
xor
aam
fwait
add
adc
stos
es
out
aaa
sbb
jmp
movsb
sbb
std
sarb
mov
ljmp
push
xchg
dec
out
sbb
imul
nop
xlat
out
mov
sub
jns
cwtl
in
repnz
jp
fnstenv
mov
lods
loope
das
xchg
or
nop
mov
mov
popf
xchg
and
and
push
aam
cmc
jmp
popa
enter
cli
cwtl
mov
add
movsb
mov
mov
hlt
jno
das
and
add
cmp
or
ljmp
cmpsb
xchg
mov
das
mov
das
and
adc
mov
scas
dec
imull
fsubl
into
scas
in
stc
lock
pop
icebp
insl
cld
ljmp
imul
loopne
and
xor
inc
dec
dec
pop
test
in
fnstcw
mov
jbe
out
pop
addr16
rorl
rcll
mov
stc
mov
adc
cmpl
jnp
or
ret
add
mov
xorb
ja
aam
xor
adc
sub
enter
jo
cmp
inc
inc
or
int3
mov
out
mov
dec
dec
sub
mov
mov
icebp
cmpsb
sub
lock
lahf
nop
pop
mov
mov
push
cmc
lods
ss
or
sbb
std
scas
jns
nop
cmp
mov
or
push
cs
xchg
push
pop
xor
movsl
outsl
int3
pop
lds
mov
lds
stos
cs
jle
lods
enter
sbb
or
xor
xor
outsb
int
xor
lret
arpl
and
add
clc
or
testb
add
jbe
dec
fisttpl
mov
addr16
mov
jns
jg
cmpsl
xlat
adc
out
call
enter
lea
dec
filds
test
mov
sbb
notl
lods
test
arpl
cld
sti
mov
add
movsl
push
sti
pop
mov
shll
or
outsb
cmc
xchg
xchg
xor
inc
testl
loopne
push
pop
push
push
lods
es
test
xor
enter
fdivs
xchg
mov
or
enter
shll
adc
or
inc
ret
mov
mov
enter
xchg
aad
xchg
int
dec
sbb
pop
int
je
fnstcw
jle
xlat
pop
dec
inc
call
mov
cmp
roll
std
aaa
test
lods
sbb
adc
pop
in
fisubs
test
pushf
push
fcmovbe
imul
cld
outsl
xchg
or
fistl
cmp
inc
jg
inc
cmp
push
into
les
fs
jl
ja
invd
mov
scas
out
bnd
aas
inc
rol
aad
mov
sti
icebp
imul
mov
dec
or
mov
push
xor
sbb
movsl
lock
mul
stc
jb
ljmp
jl
aas
into
lods
sbb
lcall
or
dec
add
rclb
pop
or
cmp
mov
inc
addb
sbb
hlt
dec
stos
pop
ljmp
lds
adc
dec
shl
into
and
and
in
mov
lret
aaa
adcb
push
pop
sbbb
outsl
mov
arpl
push
xor
les
popf
or
aaa
mov
mov
sbb
sub
pop
jmp
inc
sbb
mov
loope
mov
inc
mov
dec
int3
mov
sub
outsl
pop
clc
sub
jbe
mov
rcr
fwait
andl
jl
cmp
out
cmp
pop
dec
sub
and
add
subl
call
push
mov
lock
imul
das
adcl
push
bound
xchg
shlb
lods
addb
mov
or
pusha
and
sub
jbe
jno
cld
notl
jl
clc
mov
inc
lret
sub
cmpl
mov
cltd
js
movsl
popa
mov
cld
aam
fwait
pop
jns
xchg
je
jle
lock
repnz
enter
sub
inc
xchg
stos
pop
mov
scas
inc
mov
xchg
stos
mov
pusha
dec
jbe
xor
pop
cmp
frstor
inc
jg
fidivrs
push
sbb
mov
enter
pop
test
dec
add
js
dec
rcrb
into
test
aam
sub
testb
mov
pop
lcall
jg
outsb
rorb
add
sbb
jo
ljmp
sbb
mov
pop
loopne
cmp
sub
inc
push
stc
cmpsl
sbb
cmp
jne
ljmp
mov
fimull
hlt
cltd
and
test
fxch
mov
repz
jg
lods
in
add
mov
xor
ret
fcomps
or
mov
divb
and
mov
scas
jg
jae
xor
fdivrl
pop
mov
std
lret
gs
movsb
negl
fucomi
inc
or
scas
pop
xchg
hlt
popf
dec
fldenv
pop
jbe
sub
mov
dec
or
ret
pop
sbb
jecxz
ret
or
cltd
add
iret
mov
sub
jno
xor
pop
daa
dec
daa
pop
adcb
fwait
in
mov
push
push
push
jl
jp
sub
mov
pop
mov
sbb
sti
inc
and
ret
xor
nop
xor
pop
adc
adcl
mov
pop
gs
test
inc
lret
pushf
mov
lcall
lods
or
fnstsw
sbb
stos
push
mov
inc
push
popa
pop
adc
dec
jnp
adc
sbb
cmpsl
je
sub
xchg
fisttps
mov
in
aaa
xchg
int3
sub
mov
cmp
sbb
xlat
int
fldl
das
cmp
xor
push
or
stos
cmpsb
adc
push
dec
nop
mov
push
daa
test
jo
cmp
adc
movd
repz
mov
add
or
movsl
mov
aaa
cmpsl
test
imul
cli
dec
fmul
sub
loope
dec
push
test
xor
pop
das
cmp
loop
pop
aam
mov
hlt
scas
orl
shrl
cmp
popf
xchg
cmp
cmpsb
pop
xor
cmpsl
sbb
mov
inc
loop
daa
cmpsl
or
test
adc
sub
add
cltd
and
sbb
add
test
jle
jae
sub
xchg
sbb
add
out
dec
gs
shl
mov
in
and
mov
mov
add
jle
das
push
jmp
sbb
dec
sub
fs
into
dec
push
inc
ljmp
lods
xchg
lods
scas
in
aam
mov
dec
or
or
cli
add
sub
loop,pt
lahf
clc
xchg
pusha
inc
out
pushf
sub
pop
pop
adc
xor
mov
aam
lods
negb
xchg
dec
loopne
ja
mov
std
out
xchg
out
mov
loop
fcmovnb
andl
lods
inc
push
dec
movsl
frndint
xchg
xchg
or
imul
andb
mov
stc
push
fs
rol
movsb
loop
jb
loope
dec
adc
cmpsb
mov
mov
lods
or
push
ds
add
xchg
sbb
in
xlat
lahf
adc
pop
pop
shll
xlat
xor
imul
sub
cmpb
push
repnz
mov
or
inc
addr16
jg
adc
jno
out
push
aad
sub
mov
int
ljmp
cmp
push
and
wrmsr
getsec
jl
mov
lret
jge
mov
push
shrb
testl
cld
jbe
addl
popa
repnz
inc
dec
divl
inc
inc
inc
mov
iret
daa
or
mov
nop
fwait
adc
loope
aam
sarl
xor
fs
adc
fs
xchg
adc
mov
mov
cmpb
add
std
xor
ds
or
mov
insb
and
fcoms
popa
cmp
push
xor
dec
repz
popf
or
stos
jecxz
jg
push
icebp
jp
or
mov
lock
loop
push
xchg
and
hlt
ds
cmpsl
push
ret
insl
imul
scas
mov
rol
jl
leave
loop
lock
push
mov
arpl
jmp
cltd
xchg
loop
jne
sbb
arpl
pop
cmp
mov
sar
cmpsl
pop
mov
test
jne
add
adc
pop
mov
xchg
add
inc
out
mov
ret
bound
lods
ror
lea
adcb
pop
sub
outsl
lret
stc
ds
je,pn
leave
dec
in
mov
sub
push
mov
ljmp
xchg
dec
cmp
negl
push
stos
cmp
outsb
inc
orl
addr16
mov
aad
sub
movsl
test
pop
cli
xor
sahf
add
adcl
repz
and
jo
mov
push
jge
aam
xor
add
xor
cmpsl
add
ss
imul
sub
push
cmp
mov
mov
or
int
xorl
push
pop
scas
dec
add
inc
and
pop
sbb
cmpb
aad
push
cwtl
mov
cmp
mov
cmp
cltd
fsub
in
jae
and
shll
add
je
insb
cmp
jb
inc
clc
mov
lock
sbb
jns
add
cli
lret
iret
and
jecxz
cmp
cmp
xlat
add
push
sub
movsb
jmp
jmp
inc
aaa
lahf
mov
sbb
mov
push
mov
dec
mov
fcmove
jno
mov
dec
mov
mov
sbb
and
rcll
dec
dec
in
add
loope
mov
pop
adc
cmp
and
sbb
arpl
lds
inc
dec
xor
and
leave
cmp
sahf
sbb
arpl
push
push
push
leave
orb
mov
push
inc
aaa
mov
xchg
enter
pop
and
fnsave
mov
cmpsl
pushf
insb
int3
mov
add
clc
sbb
dec
jl
mov
xchg
repnz
pop
jbe
pop
mov
rolb
test
jecxz
cli
sub
mov
dec
xor
jle
std
xchg
cmp
pop
ja
jne
lods
jno
enter
leave
push
insb
adc
push
popa
pop
xor
nop
lcall
adc
out
ret
push
xchg
lods
lods
fldcw
mov
lahf
add
sub
adc
pop
mulb
shll
incl
scas
outsb
add
dec
ret
sbb
pop
mov
xchg
cli
xor
loope
js
push
inc
divl
cmpsb
aam
pop
data16
lds
cld
or
mov
cld
arpl
arpl
add
sbb
add
fisubs
pop
cmp
jno
push
cmp
and
lret
mov
test
test
mov
sub
test
fld1
stc
lea
out
fcoml
in
push
stos
arpl
or
xchg
sub
test
pop
pop
cmpsl
adc
mov
ss
mov
xchg
das
orb
loop
ss
mov
jne
dec
cmp
xor
arpl
pop
outsl
fsub
xor
inc
jg
out
loop
add
out
cmp
jmp
je
sub
jnp
data16
mov
sbb
xchg
sub
or
les
gs
stos
inc
jno
add
jno
adc
into
ret
adc
push
sub
add
xchg
jbe
mov
sub
fwait
into
mov
adc
pop
jo
repz
xlat
cltd
sub
jmp
icebp
push
mov
mov
push
jne
jge
ss
push
sarb
xor
mov
add
mov
and
jge
lock
dec
in
movsb
js
mov
addl
out
stos
cmp
out
push
imul
movsb
jo
mov
adc
add
lock
xor
dec
movsl
sub
cld
icebp
fisttps
out
scas
push
inc
mov
sahf
sbb
jle
cld
mov
shrb
mov
lods
enter
push
enter
fldcw
loopne
dec
sti
aam
xchg
xor
inc
out
aaa
jns
sarl
add
mov
jae
sub
cmp
test
inc
mov
and
lods
fdivl
lds
cmp
ljmp
std
fwait
inc
mov
hlt
xor
mov
mov
xor
shll
xchg
push
lea
call
adc
sahf
nop
pop
call
pop
add
sub
es
pop
jg
sbb
cs
loop
xchg
cmp
lret
and
pop
pop
xor
sahf
hlt
adc
test
leave
mov
pop
ffreep
mov
push
push
je
pop
mov
pop
and
daa
xchg
xchg
in
mov
mov
and
cs
jge
lods
icebp
and
mov
push
pop
xor
dec
and
out
mov
sbb
lods
inc
fs
or
in
sbb
push
sahf
or
stos
std
ret
mov
pushf
dec
jo
gs
ss
dec
mov
lcall
shll
dec
pop
lret
aas
and
and
sbb
ss
xor
nop
mov
test
add
data16
fwait
mov
pop
cmpsb
dec
orl
dec
or
sub
aam
lds
xchg
jb
je
ret
sbbl
ss
mov
xorl
pop
jmp
sub
in
es
pop
icebp
pop
mov
mov
pop
aam
sub
add
in
jno
sbb
push
cltd
inc
insl
sbb
repz
daa
cmp
cmp
test
and
aad
inc
int3
repnz
or
pop
xor
mov
test
jne
repnz
sti
es
adc
loope
out
das
fwait
aaa
in
sarl
jge
and
mov
insl
mov
mov
jne
sti
adc
mov
adc
xchg
scas
gs
movsl
inc
jmp
adc
lds
push
loopne
mov
cmpsb
daa
add
push
push
inc
push
adc
pop
stos
ljmp
xchg
and
lds
in
mov
sbb
pushf
or
call
jge
ret
or
xchg
test
push
xchg
xor
test
sbb
dec
movsl
push
in
insb
leave
fimuls
inc
xchg
inc
push
lret
test
mov
sahf
lods
call
int
into
mov
xor
sti
xchg
push
ud2
pop
sub
lret
sub
addb
lahf
mov
and
mov
push
add
add
std
dec
test
dec
je
and
jno
sub
in
int3
into
sub
and
cmp
or
repnz
rorl
sub
js
add
inc
mov
push
inc
cmpsb
fsub
divl
jno
jne
cld
xchg
clc
ror
mov
repz
das
and
clc
mov
out
movb
mov
dec
imul
icebp
inc
jne
iret
aas
jo
clc
sbb
cltd
cmp
imul
das
add
jmp
xor
mov
ret
ss
es
mov
fcomp
fs
loopne
cltd
xchg
hlt
cmpsl
popa
orb
movsl
push
lds
out
xchg
add
test
fsub
add
xchg
or
push
or
mov
inc
mov
divl
int3
and
insb
xchg
loopne
push
inc
popa
pop
lret
stos
and
lret
lahf
sbb
jo
lds
mov
aaa
loope
sbb
dec
out
xor
mov
cmp
mov
inc
inc
mov
push
pop
outsl
inc
adc
pop
adc
out
fstps
inc
push
xchg
push
dec
pop
ret
mov
fwait
mov
pop
xchg
sub
or
sbb
shll
sbb
lea
cmpsb
dec
mov
leave
or
test
ljmp
xchg
fisttpll
pop
push
push
or
inc
cmp
jmp
shll
ljmp
cmp
and
insl
les
jge
lock
mov
aad
ds
cli
insl
xchg
fmull
adcl
mov
fisubl
jae
add
jp
popf
sbb
xchg
inc
aam
cmpsb
into
inc
jl
sti
mov
mov
and
and
fisubs
mov
pop
cmp
call
and
sbb
mov
dec
fildl
mov
mov
insb
pop
sub
mov
repz
pushf
jge
movsb
mov
popf
cs
int
lods
sbb
mov
mov
sbb
jp
sbb
add
imul
mov
cmp
mov
push
loope
inc
mov
insl
push
aaa
fs
or
cmp
pushf
aad
das
rorb
sbb
pop
loopne
inc
mov
popa
inc
mov
sti
lret
xchg
xchg
xchg
mov
fsubrp
dec
jge
arpl
adc
mov
pop
sub
pop
gs
mov
mov
inc
dec
daa
mov
js
push
pop
outsb
adc
fbld
out
das
jecxz
xchg
mov
xchg
mov
bound
popf
add
nop
popf
ds
inc
aaa
mov
xchg
test
jae
cwtl
stc
popf
add
adc
jmp
mov
jbe
sbb
jmp
out
mov
push
lods
sbb
xor
cmc
pop
or
or
cmp
jp
stos
push
sub
sbb
rorb
jmp
test
addr16
mov
cmp
and
mov
inc
sub
rcl
adc
mov
sub
movsb
add
pop
cmpl
int
mov
int3
and
mov
cli
xor
dec
data16
imul
cltd
rclb
outsb
push
jae
xor
subb
pushl
push
push
clc
jg
call
adc
xchg
fmul
sub
xchg
js
cmp
mov
pushf
xor
subl
mov
pop
sahf
fstpt
fwait
lds
cltd
push
adc
sarb
dec
jb
xlat
cmp
sbb
aad
and
dec
mov
cmp
mov
ds
mov
mov
dec
mov
push
mov
mov
arpl
adc
sub
repnz
loop
jecxz
pop
jge
inc
push
or
mov
dec
xor
test
jg
and
dec
mov
pop
mov
inc
iret
xor
cmp
sub
leave
mov
loope
jge
aad
je
loop
xor
lret
dec
dec
mov
fadds
jnp
stos
or
mov
mov
and
test
cmpsl
jp
adc
dec
add
shll
pop
or
lods
sbbl
mov
jl
push
js
inc
sub
ljmp
or
mov
cmp
adc
ja
leave
sbb
lcall
popf
int3
sub
mov
in
mov
out
mov
out
addb
das
inc
in
nop
push
jns
and
xchg
and
inc
push
in
push
jp
movsl
out
popf
rorl
mov
or
pushf
pushf
jecxz
mov
push
ret
scas
sbb
add
fstps
shll
imull
pushf
rcrl
xchg
mov
xchg
or
jnp
adcb
aaa
dec
out
sti
or
xchg
scas
dec
mov
xchg
lds
pop
cld
push
sar
adc
xor
dec
pop
sub
outsb
call
out
addr16
xor
sub
push
adc
jle
imul
jle
loop
mov
data16
mov
fstpl
jnp
mov
in
adc
and
mov
jle
pop
mov
popa
mov
mov
jmp
push
jbe
push
lahf
std
lods
lds
inc
mov
sbb
add
movsl
mov
mov
push
ja
xor
test
in
sub
loope
jg
xor
mov
and
push
out
clc
adc
push
loope
imul
adc
dec
fsubrl
jbe
inc
mov
xor
mov
cwtl
pop
in
add
jae
pusha
mov
pop
pop
mov
push
cmp
repnz
lods
pop
mov
lock
movsb
fadds
mov
or
scas
xchg
pop
xchg
cmpsb
lcall
je
ret
mov
inc
lcall
nop
std
insl
lcall
test
add
and
in
mov
sbb
getsec
loop
add
mov
lea
aam
in
popf
and
pop
nop
jae
ret
xchg
pop
rolb
sub
jp
jo
push
mov
fstps
add
loop
sbb
xor
dec
scas
ljmp
ja
pop
sti
mov
adc
mov
ret
bound
pop
mov
xchg
jno
add
scas
dec
int3
mov
test
mov
andl
sub
mov
in
ja
stc
pop
dec
jg
mov
pop
movsl
mov
xchg
int3
inc
mov
xchg
or
loop
xchg
lret
in
icebp
cmp
cmpsb
dec
or
sub
and
pop
mov
repnz
fsubp
pop
mov
sub
dec
mov
in
pusha
mov
outsb
scas
xchg
jne
dec
and
xchg
xor
and
icebp
cmp
cld
jp
cmp
dec
aaa
test
mulb
lds
dec
lds
sub
leave
sub
iret
test
cmpsl
inc
adc
or
mov
dec
repnz
mov
mov
pop
add
xchg
js
call
fldenv
shrb
in
loop
cmp
pop
pop
mov
lcall
out
movsl
pop
inc
sub
pusha
mov
testl
jae
in
call
stos
dec
pop
lds
outsb
mov
fwait
dec
sbb
cmpsl
xchg
push
lods
pop
iret
pop
add
in
daa
addr16
cmp
out
pop
fstl
jmp
mov
push
into
mov
insb
test
xchg
dec
push
pop
mov
in
mov
repz
cs
andl
dec
push
or
or
ljmp
dec
jnp
lret
inc
jmp
fidivl
int
sub
or
sub
pop
aas
xor
mov
inc
pop
and
sbb
mov
cmpsl
xchg
push
pusha
fmuls
mov
inc
clc
pop
pop
sbb
inc
fistpl
stos
subl
fwait
outsl
sbb
loopne
mull
cmp
test
fwait
mov
jnp
cli
xchg
push
lahf
push
cmpsl
gs
pusha
xchg
roll
insl
push
and
pop
mov
or
mov
dec
dec
std
sti
dec
out
sahf
xchg
inc
lea
popa
data16
loopne
into
in
stos
xlat
mov
int
les
fdiv
sub
mov
les
sbb
out
rolb
xor
mov
cltd
jns
inc
sbb
mov
adc
pop
xchg
test
or
lret
sti
adcl
xor
dec
or
mov
mov
shll
fsts
rcll
dec
inc
pusha
dec
repz
pop
sti
xchg
rorb
pushf
and
dec
fdivrs
lods
or
imul
cmp
or
cwtl
movsl
mov
xchg
mov
sub
lret
xchg
fwait
sbb
ljmp
stos
push
fsubl
test
or
dec
add
ljmp
lret
adc
sbb
rcrb
in
cmp
sub
jno
push
aas
lds
add
subb
cmp
and
lock
jns
lahf
mov
aad
jmp
mov
test
adc
scas
adc
fcmovnb
sub
push
ljmp
lret
xor
out
jl
dec
popa
jnp
pop
nop
mov
shl
lock
lret
pop
inc
outsb
xchg
jl
mov
insb
mov
dec
ja
cmpsb
sarl
popa
mov
sub
add
mov
mov
popa
xchg
mov
pushf
cwtl
enter
cs
sahf
inc
test
or
xchg
stos
jge
push
out
mov
out
addr16
xor
dec
aam
test
sbb
mov
and
shrl
jg
arpl
cmpsb
jecxz
xlat
push
mov
scas
jp
mov
mov
outsb
xlat
dec
push
push
sub
ret
test
fisttpl
mov
xor
adc
cmp
int
orl
loop
lret
adcb
js
lahf
adc
das
hlt
dec
jbe
xchg
dec
push
scas
iret
mov
aas
shll
pop
test
ret
mov
xor
adc
mov
sub
inc
mov
jno
nop
stc
aas
adc
and
stos
leave
in
iret
mov
or
mov
inc
out
sub
sbbl
lret
mov
popf
cld
call
mov
repz
push
shll
dec
test
out
mov
pop
xchg
jo
and
stos
jg
jno
and
mulb
mov
adc
test
ret
jmp
ret
jge
test
add
cltd
inc
xchg
hlt
push
pop
ret
push
sub
pop
imul
dec
jmp
push
lods
mov
lock
xchg
pop
out
push
xor
enter
adc
icebp
cmp
sub
xchg
or
cmpsb
scas
adc
ja
ja
test
jbe
pushl
cli
adc
pusha
cwtl
sub
test
mov
add
stc
or
xchg
jno
fwait
jl
add
loope
xchg
int
adc
mov
xchg
int
test
sahf
mov
mov
in
stc
cmp
popf
lcall
decb
push
ret
stc
js
cmp
xchg
dec
shl
imul
adc
imul
jg
jmp
fimuls
mov
faddl
in
cmp
cmp
repz
push
dec
sarb
lret
jb
clc
fnsave
inc
sbb
ficomps
daa
lret
in
mov
sahf
popa
popa
pop
mov
lock
scas
add
fsts
pop
dec
mov
pop
add
inc
jne
xchg
and
mov
fidivs
nop
bound
inc
dec
fbstp
mov
loop
add
rcl
mov
test
inc
and
lock
popa
cmp
cmpsl
test
pop
addr16
fchs
into
pop
xchg
popf
lcall
out
xchg
ret
rol
scas
iret
cmpb
pusha
lods
mov
inc
xor
cwtl
sub
push
jge
xor
scas
pop
pop
lds
pop
mov
mov
scas
roll
pusha
dec
cmp
pop
pop
cmp
ds
push
sub
push
adcb
ljmp
add
push
jmp
pushf
mov
rcrb
jg
cmpsl
inc
mov
cmc
dec
rcrl
fs
mov
fistps
js
xchg
and
mov
insb
xor
outsl
dec
loopne
or
push
shll
dec
mov
jle
sbb
test
lea
data16
sbb
jp
shlb
push
inc
out
lods
sub
mov
int
jmp
clc
and
clc
das
aas
push
lret
sub
xor
outsb
pop
icebp
bound
aas
jo
mov
push
out
dec
push
nop
frstor
cmpsl
ret
xor
stc
lcall
outsl
div
in
xchg
inc
fistl
sub
sub
fsubl
cli
aam
cmp
out
xchg
adc
inc
pop
aas
mov
cmpsl
iret
jge
lock
xchg
jne
roll
cmp
mov
push
jo
lret
divb
sub
pop
out
adc
sub
mov
adc
push
cmp
dec
adc
cmc
subb
insb
lret
push
xor
addl
lcall
xchg
push
loopne
cli
scas
lret
mov
daa
aas
push
rcll
aaa
inc
jbe
pop
arpl
cmp
gs
push
pop
or
leave
and
ljmp
mov
enter
jo
fmull
inc
lock
imul
mov
mov
mov
inc
ds
adc
in
test
repnz
sbb
sub
adc
sti
xorb
xchg
dec
push
stos
sub
mov
adc
inc
fnstcw
adcl
call
fldcw
addr16
sbb
push
std
test
fwait
xor
mov
sub
rorb
pop
je
cmp
adc
fiadds
aaa
and
adc
dec
fistps
and
xchg
jmp
or
lahf
pop
bnd
mov
shrb
jle
hlt
jne
mov
daa
jecxz
inc
jbe
xchg
pusha
notb
xchg
mov
out
mov
sbb
xor
sbb
dec
fnstcw
mov
xchg
mov
hlt
fists
ret
mov
into
jp
fimull
imul
je
cmc
or
idivb
jnp
xor
mov
cli
arpl
in
cmp
adc
jns
jo
loope
outsl
rcrb
push
filds
dec
or
popf
fldcw
mov
push
pushf
fnstsw
add
scas
les
and
adc
enter
mov
lcall
fcmovb
push
call
sbb
ret
insb
testl
std
mov
xor
mov
cmp
imul
mov
inc
in
jp
mov
call
out
mov
sub
out
rcrl
xchg
lret
jne
and
rcl
mov
js
inc
jbe
jns
iret
add
lcall
push
into
loopne
outsl
mov
dec
and
imul
pusha
xor
pop
cmp
jl
push
insl
aaa
shl
and
mov
mov
dec
mov
push
into
xlat
inc
test
mov
sub
loopne
rclb
push
xchg
mov
mov
fisttpll
mov
shlb
push
ret
pushf
rorl
xchg
jnp
mov
adc
or
test
sub
adc
icebp
and
cmc
mov
and
mov
cwtl
adc
outsb
adc
stos
daa
popa
xchg
std
mov
into
mov
int3
loope
icebp
adc
pop
cmpsb
or
les
inc
jl
jmp
pop
das
nop
ficomps
dec
sbb
test
into
movsb
cmpsb
aam
ror
mov
jae
xor
sub
fimull
pop
iret
rorl
cld
cmpsb
push
popa
sub
int3
or
stos
mov
data16
cmp
or
add
or
push
sub
ficompl
sub
pop
dec
aam
mov
lret
dec
sbb
ds
xor
jo
lods
ret
xor
dec
push
inc
lea
mov
in
adc
push
push
pushf
inc
imul
dec
sub
test
repnz
cmp
push
xor
sub
or
pop
leave
std
push
fmull
enter
xchg
or
pop
mov
push
or
aaa
inc
test
mov
or
mov
or
sbb
dec
std
and
fwait
aad
mov
or
mov
jns
shlb
js
scas
xchg
dec
jbe
loop
pop
push
sub
imul
sub
inc
fbstp
inc
add
add
lods
out
bswap
pushf
repnz
outsl
sub
xor
push
outsl
adc
sub
sti
fwait
or
and
shrb
clc
mov
arpl
sahf
push
dec
jne
divb
mov
test
repz
xor
ss
inc
fst
push
dec
push
sub
mov
ss
jns
sbb
push
xchg
pushf
pop
mov
dec
jbe
repnz
loope
cmpsb
dec
fmull
lcall
mov
jmp
jb
mov
and
pop
rcl
or
sbb
xlat
jae
add
cs
sbb
fwait
dec
xchg
sti
xchg
sahf
sahf
ljmp
mov
or
dec
mov
inc
pop
add
xchg
and
pusha
xor
ret
cmp
mov
aad
jmp
sub
jnp
scas
jbe
jge
sub
jle
push
cmp
mov
or
imul
bnd
mov
lcall
clc
jp
lret
scas
jl
jg
clc
mov
int
add
stc
in
bound
jo
mov
pusha
push
bound
jbe
sbb
sub
aaa
adc
sub
mov
pop
jl
in
andb
adc
cld
cmp
andl
fucom
adc
pop
mov
xor
and
sub
mov
jmp
inc
test
repnz
in
subb
int3
pop
into
scas
xchg
jnp
jno
and
push
push
aam
mov
push
xor
mov
dec
icebp
aas
xchg
test
xor
subl
pop
push
fstl
call
fdivrl
je
movl
push
jo
ret
xchg
mov
popa
cmpsb
dec
push
xchg
stos
pop
pop
ror
sbb
mov
push
push
inc
repz
lods
mov
inc
sbb
ljmp
and
adc
je
je
add
jg
mov
jb
ds
inc
xchg
cmc
jp
mov
jnp
les
out
inc
mov
inc
ja
mov
rcrb
cmp
ss
add
fmuls
daa
add
xlat
pusha
xor
fsubp
sub
movsb
xchg
inc
and
cmp
jp
mov
jae
inc
in
or
dec
jg
xor
jl
push
cwtl
fstpt
xor
push
jle
push
ljmp
pushl
jne
add
insl
and
jp
ss
dec
ret
je
cmpsb
xor
cmpsb
imul
sub
and
out
scas
and
scas
or
mov
xchg
pop
cld
push
mov
fstp
in
inc
dec
cmp
jge
mov
xlat
arpl
xchg
xor
add
ja
rcr
rcll
fs
sub
xor
shll
pop
mov
cltd
lret
jbe
popf
pop
in
adc
js
dec
mov
xchg
rcl
data16
in
sti
jb
fmull
lods
mov
stos
cmp
pusha
push
dec
mov
out
push
sub
lea
cmp
gs
int
jo
pop
int3
aaa
popa
inc
pop
inc
mov
pop
pop
xchg
cmp
notl
popa
lods
jmp
xor
ja
cltd
fbstp
pop
outsb
in
mov
push
mov
int
out
sahf
popf
jle
adc
stc
testl
ret
xchg
lock
xchg
mov
mov
inc
mov
ljmp
lahf
outsb
mov
out
mov
fildl
imul
add
sbb
xor
push
jne
movsl
mov
dec
std
adc
fldt
insl
push
bound
pop
pop
into
dec
jg
aas
cmp
mov
xor
xlat
cmpsl
dec
or
pop
jg
stos
imul
scas
dec
in
pop
ret
pop
push
push
or
dec
out
mov
cmp
mov
aas
push
sarb
push
xorb
adc
xchg
fcomps
or
add
jae
cmp
jecxz
sub
mov
pmulhuw
jl
lahf
idivb
adc
aam
jb
aad
mov
pop
mov
sbbb
push
jae
mov
mov
ljmp
sar
mov
aaa
sub
add
imul
lea
mov
sbb
fldt
out
sub
repz
std
lret
hlt
add
pop
aas
mov
pop
mov
mov
jg
iret
or
or
sub
out
mov
inc
add
or
es
lret
out
es
add
int
inc
lods
loop
int3
sahf
xorb
test
outsl
cld
adc
jl
or
mov
lods
sbb
mov
out
jb
call
and
pop
add
stos
into
popa
cmp
aam
or
inc
scas
xchg
jnp
lret
ds
mov
stos
pusha
push
xchg
loop
push
sub
jecxz
dec
push
aaa
add
jne
out
fimuls
sub
jecxz
fistps
es
cmpsb
jae
dec
mov
dec
sbb
mov
cwtl
loope
adc
in
int
mov
xchg
sub
ret
cli
cmc
jmp
mov
xchg
pop
sub
xchg
in
test
movsb
test
push
loop
outsb
lds
fcompl
rcll
xchg
mov
test
mov
leave
mov
imul
lock
cmp
out
jg
lret
ret
mov
scas
rorb
js
jnp
dec
inc
jne
iret
lea
bound
pop
das
inc
scas
pop
cmp
ja
and
pushf
inc
lahf
out
movd
mov
jecxz
repz
aad
jle
sbbb
mov
cmp
pop
jmp
xchg
mov
pushfw
cmc
inc
cmpl
or
cmp
jle
jle
in
pop
pop
inc
or
push
mov
jne
push
in
std
jecxz
sub
lret
cs
mov
add
scas
repz
mov
into
das
sti
xor
roll
cltd
pop
fiadds
lahf
mov
repnz
test
shrb
adc
and
jno
das
push
mov
in
std
cmc
call
mov
push
cmp
sub
imul
jo
insb
mov
and
jno
push
cs
jo
fwait
push
push
inc
mov
lahf
sarl
sub
add
lock
lcall
sub
in
les
mov
test
sbb
cmp
add
mov
mov
leave
mov
shl
xlat
jnp
shr
xor
push
xchg
lcall
repz
inc
cmp
rol
push
ficomps
cmpsl
ss
mov
outsb
mov
test
dec
mov
insb
sbb
dec
hlt
cli
cltd
sub
out
pop
stc
out
xor
mov
lds
movsl
xor
outsl
sti
add
and
mov
mov
jg
xchg
gs
hlt
cmpsb
xor
rol
and
cmc
cmp
adc
mov
pop
inc
lahf
xchg
cli
cli
or
dec
sub
mov
push
jecxz
and
jae
inc
int3
dec
lahf
push
jmp
aad
jmp
sbb
fstpt
inc
adc
adc
mov
rcr
inc
xchg
sub
sarb
pop
add
xor
xsavec
jo
pop
sub
push
cmp
cs
xchg
sub
pushf
imul
jecxz
cmpsl
xchg
mov
inc
std
addb
jmp
adc
fcom
fisttps
jae
repnz
icebp
ja
out
inc
xchg
mov
xchg
mov
mov
xchg
mov
pop
mov
mov
test
idivl
dec
fimull
xchg
mov
xchg
jecxz
adc
mov
mov
pop
cmp
ss
mov
pop
andb
adc
xor
lods
xchg
pop
rclb
fisubrl
int3
outsb
inc
mov
pop
dec
push
inc
cmpsl
mov
fistpl
add
xchg
dec
cmp
ds
jae
sahf
xchg
inc
dec
push
cmp
xlat
push
xchg
lea
add
ljmp
xor
aam
negb
adc
jle
adc
loope
sub
je
pushf
pop
mov
xchg
sbb
sbb
mov
aam
and
in
addr16
out
sub
sbb
clc
pop
fnstcw
mov
ret
sub
std
add
push
inc
shll
xor
mov
push
push
fidivs
fs
sbb
cwtl
mov
xchg
push
sbb
add
movnti
push
xchg
dec
pop
xchg
outsl
cmp
fdivrs
jle
mov
sub
dec
and
sub
mov
push
and
dec
jg
and
jbe
call
shlb
pop
inc
out
test
sarb
xlat
cwtl
sahf
push
inc
movsl
lret
mov
cmp
pushf
ja
and
cmc
scas
xchg
jns
js
push
insb
add
cs
ret
xor
aaa
or
andl
adc
pop
or
lods
clc
xchg
mov
lahf
xchg
xor
push
es
lea
xchg
mov
xchg
sti
cmp
lods
loop
nop
or
dec
mov
mov
jno
inc
mov
inc
lret
in
ss
xchg
sub
mov
call
lcall
cltd
adc
pop
imul
jmp
dec
stc
in
and
or
jno
inc
popf
add
bound
add
pusha
xor
jecxz
dec
pusha
and
lret
aaa
lret
ret
inc
pop
jg
mov
jl
lahf
dec
movsl
or
push
ljmp
mov
iret
in
outsl
push
push
lret
push
push
sub
imul
inc
dec
or
xchg
cltd
mov
arpl
addr16
jno
mov
dec
mov
ljmp
sbb
test
ret
test
mov
mov
push
push
icebp
sti
sti
xor
adc
bound
in
loope
cld
push
adc
pop
imul
icebp
sub
call
aaa
xchg
push
idivl
dec
add
inc
repz
xchg
sbb
arpl
mov
mov
adc
mov
pushf
js
sbb
mov
mov
sub
stos
adc
repnz
push
mov
cltd
fcmovu
fs
jge
sahf
arpl
test
cltd
mov
movsb
aas
mov
fildll
adc
fcmove
add
pop
or
sub
popa
cmp
fs
adc
xchg
stc
mov
dec
push
mov
enter
sub
imul
cmp
arpl
add
mov
adc
add
adc
nop
ret
out
mov
inc
imul
inc
inc
push
mov
cmpsb
testl
cmpb
and
lods
notb
mov
outsb
stos
xor
push
aaa
out
arpl
scas
leave
inc
jno
adc
push
inc
mov
lret
call
or
pop
xor
xchg
stc
lods
jmp
jnp
lahf
xchg
jge
lods
call
jecxz
push
in
cltd
movl
xlat
xchg
dec
mov
arpl
js
adc
push
adc
fidivl
sub
scas
cmp
push
lds
orb
jge
imul
mov
jle
dec
fstpt
pop
dec
inc
mov
pop
sbbb
add
mov
pop
int3
dec
clc
push
push
adc
mov
add
pop
mov
dec
inc
in
cmpsl
ljmp
fcmove
pop
les
mov
js
xchg
lret
in
cmp
adc
cli
mov
int
jnp
mov
outsl
in
jno
in
repz
add
jp
in
notl
mov
xor
cwtl
roll
rcr
sbb
fistl
ret
mov
dec
pop
sbb
loop
inc
aaa
daa
pop
xor
lods
and
sub
mov
sahf
rcrl
jp
aas
cmp
shrl
mov
cwtl
stos
cmp
bound
or
mov
ljmp
inc
dec
xchg
xor
fidivrl
sbb
push
xlat
push
or
dec
in
mov
enter
inc
leave
add
ja
xchg
fwait
out
pop
dec
movb
and
inc
jbe
enter
loop
inc
ficompl
movb
out
stos
mov
out
cltd
xor
xchg
push
push
xchg
arpl
loop
inc
pop
das
out
mov
pop
out
push
xor
imul
mov
jne
jae
clc
xor
pop
and
dec
mov
in
xor
inc
pop
and
sarl
cmp
add
js
xchg
jle
repz
test
mov
or
fcmovnu
pusha
leave
rol
or
and
push
enter
les
test
fsubr
movsb
mov
ret
pop
test
cmpsl
lods
fwait
scas
pop
jl
add
or
sub
push
mov
dec
cmpsb
stos
cs
ljmp
sbb
jmp
in
clc
lods
sbb
bound
lock
push
dec
pop
mov
pop
subb
ss
fiaddl
mov
stc
daa
fsubp
scas
or
xor
mov
popa
push
fldenv
push
inc
int
in
ret
mov
and
cltd
je
fwait
xor
inc
mov
pop
jns
xorl
jl
cld
fisubrs
int3
sub
jle
mov
xchg
and
or
sbb
mov
xorl
addr16
push
sbb
and
addr16
out
or
sbb
daa
adc
sbb
pop
push
psubsb
jns
ret
les
mov
jl
mov
std
aad
add
stos
mov
repz
and
pop
pop
adc
or
movsb
jecxz
xor
cmpb
mov
ss
xrelease
inc
cmp
sarl
scas
mov
mov
out
inc
xor
xlat
cmpsl
mov
push
sbbl
and
mov
inc
and
xchg
sahf
mov
pop
dec
loopne
adc
clc
test
int3
push
inc
jnp
negb
jle
dec
push
rorb
pop
cmp
cmp
add
cmp
fnsave
push
mov
outsl
adc
pop
adc
rcl
test
and
scas
adc
xlat
ret
test
mov
andl
jno
out
and
dec
pop
pop
arpl
popl
scas
mov
cmp
xor
mov
add
imul
pop
xor
lds
xor
cld
stos
mov
inc
mov
ret
cld
js
cmp
imul
xchg
adc
mov
shrb
dec
pop
push
mov
repz
jns
stos
std
cmc
sbbb
mov
inc
leave
rsqrtps
xchg
inc
jmp
jnp
ret
sbb
cmpsb
xchg
jge
adc
mov
int
fldl
adc
leave
xchg
and
gs
aam
push
pop
outsl
daa
and
shlb
das
mov
mov
scas
lock
cltd
mov
xchg
repz
mov
bound
daa
or
cmpl
outsb
pusha
pusha
sahf
sub
in
xor
fwait
jmp
call
psubusb
pusha
scas
jb
xchg
test
mov
pop
xor
mov
sub
int3
push
mov
lds
mov
push
sub
cld
push
lods
mov
lcall
pop
repz
orl
je
pop
pop
flds
out
nop
push
pop
movsb
jecxz
clc
in
adc
push
jecxz
in
in
mov
mov
jnp
push
xchg
stos
leave
mov
dec
lret
gs
xor
pop
mov
push
sbb
out
push
rcrb
inc
mov
fiaddl
imul
mov
and
cs
mov
mov
cmp
lret
pop
mov
xor
xchg
jg
push
ljmp
pop
je
add
and
scas
shrb
mov
jo
cmp
mov
and
or
iret
fcmovnbe
pop
dec
pushf
shl
jmp
outsl
inc
subb
cmpsl
lea
sbb
bound
xchg
ret
push
fnsave
out
jmp
jl
sbb
outsl
xchg
mov
cltd
jne
adc
jecxz
stos
xor
and
test
pop
xor
jl
xchg
cmc
inc
mov
xor
mov
xchg
pop
leave
mov
fmull
dec
mov
cld
mov
sub
inc
pop
sbb
cmpsl
dec
mov
mov
dec
aam
jbe
lock
pop
loope
xchg
mov
fistpll
cmp
inc
ljmp
scas
push
inc
test
stos
in
sub
push
or
cmp
call
cmpsl
roll
insb
call
jg
les
sbb
xor
mov
je
mov
out
clc
cld
dec
cmp
pop
pop
push
in
cli
std
mov
nop
dec
xlat
test
pop
das
mov
cmc
cltd
sub
ror
push
popa
cmpsb
pushf
or
cmp
rcrb
cli
pop
lods
or
aaa
notb
cmp
out
mov
xor
xchg
xor
inc
add
mov
fdiv
push
loopne
inc
mov
leave
aaa
sub
dec
lcall
ficompl
xchg
jae
mov
cmp
pop
mov
in
lea
cs
dec
sbb
dec
popa
insb
cmpl
ds
filds
and
sbb
arpl
mov
out
mov
daa
loopne
add
hlt
icebp
out
subl
rep
xchg
icebp
mov
inc
and
jge
es
inc
mov
pop
stc
inc
es
fisttps
ja
sahf
push
push
fs
xchg
push
and
out
inc
bnd
push
pop
stc
jnp
out
or
jns
aas
xor
and
ret
inc
dec
dec
xchg
test
es
shll
pusha
push
mov
inc
je
cmp
add
cs
add
pop
jl
lea
sarl
mov
lret
mov
into
incb
lcall
fisubs
pop
sub
mov
sbb
jle
inc
cmp
rolb
shll
gs
les
push
push
data16
clc
mov
xchg
sbb
dec
popf
lcall
xor
arpl
call
adc
fcoml
push
nop
push
xorb
ret
pop
clc
push
jne
ljmp
sbb
adc
ret
addr16
std
xchg
repz
cmpl
test
jbe
stos
fwait
rol
mov
ret
sahf
jnp
stos
int
loopne
pop
push
ror
jmp
popf
std
fstpt
sbb
aas
pop
jns
lods
data16
shlb
mov
sbb
test
jg
cmp
add
das
lea
cmpsl
jae
fidivrs
mov
add
pusha
cmp
ja
dec
subl
cmc
lods
imul
cmp
jne
mov
repz
dec
inc
bnd
enter
push
fdecstp
dec
mov
dec
scas
and
dec
pop
out
faddl
xor
repz
fs
pop
mov
and
mov
out
xor
lea
mov
aaa
es
mov
mov
mov
int
cmc
jnp
pusha
dec
in
pusha
adc
testb
cmpsb
insb
fiaddl
dec
popa
sbb
and
mov
popa
cwtl
sarb
mov
popf
jnp
ds
fdivs
sarb
lods
sub
pop
inc
jns
xchg
jmp
std
cmp
ret
and
ja
orps
sbbl
push
fdivl
mov
adc
inc
inc
add
popa
fidivs
cmp
inc
pop
aad
fxch
cli
cmpsb
lock
xchg
fdiv
add
vpand
outsb
sub
dec
and
aam
aam
cmpsl
cmpsb
insb
insb
cmp
sub
xor
movb
mov
and
dec
mov
mov
orl
ljmp
adc
pop
dec
mov
ret
or
test
sbb
test
sub
add
cwtl
lcall
das
add
mov
sub
out
outsb
sbb
add
mov
sbb
loopne
cli
jmp
xchg
mov
js
jno
lret
sahf
sbb
cwtl
mov
bound
movsb
sub
inc
xchg
sbb
cmpl
pop
ljmp
scas
sbb
hlt
shlb
fistpll
popa
lret
inc
jne
pop
incl
xor
movsl
xchg
inc
or
dec
sti
inc
aam
jle
xchg
push
scas
imul
add
inc
pop
std
scas
outsb
inc
iret
add
cmpsb
mov
jl
out
test
lret
inc
jecxz
mov
mov
ret
div
mov
loopne
jo
shrb
call
adc
mov
ds
push
inc
mov
into
sub
push
shll
in
dec
arpl
je
repnz
call
outsb
clc
jl
aas
dec
daa
push
xchg
imul
xor
fsubs
push
test
and
and
mov
ljmp
loop
loop
xchg
fistl
mov
int
lahf
and
xor
fistpl
scas
lcall
dec
adc
cmp
jo
mov
inc
inc
aaa
push
inc
push
or
addb
sub
jg
sahf
jmp
or
mov
daa
xor
add
lock
or
xchg
cmpb
into
push
push
hlt
jg
inc
orl
mov
and
je
dec
add
dec
xchg
lret
cwtl
adcl
dec
pop
mov
aad
pop
movd
push
add
imul
shlb
movsb
mov
push
pop
rclb
cs
mov
xor
icebp
lods
cmp
jno
jbe
stos
in
mov
out
dec
cmp
out
lods
lods
jnp
or
pop
pop
cli
cmpsb
arpl
mov
inc
imul
pop
loope
sub
fsubr
stc
sub
adc
cmpsl
mov
cli
insb
fnsave
push
ljmp
jb
in
sahf
iret
pop
and
outsb
jno
cmpsl
mov
frstor
add
shl
pusha
pop
hlt
pop
xchg
or
push
sti
fsubl
lahf
leave
dec
push
mov
mov
or
pop
flds
call
push
mov
jmp
jg
adc
or
hlt
lea
lcall
pop
push
aaa
cmc
mov
cmp
push
daa
ja
add
movsb
mov
movsl
jbe
mov
in
mov
xchg
jmp
jmp
scas
dec
jne
mov
jp
push
lock
xchg
lcall
inc
xchg
fsubs
daa
insl
clc
je
test
mov
stos
sahf
outsl
stc
xchg
xor
sbb
imul
or
cli
movsb
mov
fcom
fmul
lods
xor
stc
add
ret
repz
jecxz
and
push
out
negl
jle,pt
aaa
mov
xchg
lcall
je
shll
pop
shrb
jb
subb
addr16
xchg
stos
pop
inc
mov
lret
cmpl
push
stos
int
xor
imul
rcrl
insl
cmpb
xlat
jl
lcall
mov
andb
jne
sub
cmpsb
cmp
lds
das
sub
je
xchg
scas
cmp
sbb
pop
inc
mov
jne
push
pop
sahf
and
dec
sti
mov
adc
and
iret
sti
adc
sbb
dec
les
dec
stc
mov
fadds
test
or
cmpb
inc
arpl
push
xchg
repz
and
push
ret
push
xchg
psubq
mov
stos
sbb
orl
dec
push
jns
jno
faddl
sbb
xor
call
or
adc
and
mov
inc
mov
testl
inc
mov
fdivs
icebp
jne
mov
mov
enter
scas
outsb
in
rcrw
push
jb
stos
push
sbb
mov
jl
hlt
cmp
sbb
nop
xor
xlat
add
shll
jno
mov
std
stos
pop
inc
cltd
xchg
nop
in
movsb
xchg
and
fimull
mov
sti
ljmp
int
fs
repz
fisubrl
das
clc
push
sbb
mov
pop
lahf
stos
dec
mov
sub
fwait
jns
mov
add
or
cmp
xchg
lods
pusha
bound
arpl
mov
outsl
mov
or
xor
adc
gs
dec
scas
mov
aas
mov
jae
stos
inc
mov
in
outsl
mov
imulb
rcr
add
inc
dec
sbb
xchg
push
xor
inc
xchg
mov
pop
lea
repnz
roll
push
in
out
filds
xlat
jmp
jae
xchg
sbb
mov
push
lea
or
sub
incl
push
divb
jle
jp
movsl
shlb
jp
add
lcall
loop
in
insb
sbb
push
xchg
cwtl
fisttpl
jl
es
mov
mov
mov
daa
sub
mov
push
cld
cwtl
aam
inc
mov
xor
mov
divl
jle
imul
and
mov
xor
mov
dec
adc
mov
pop
add
fcompl
mov
sarb
adc
rcl
inc
gs
or
and
lret
imul
add
xor
fdivs
xchg
in
sub
hlt
inc
and
sub
hlt
es
inc
fnstsw
jle
ret
aam
arpl
jg
xchg
xchg
sub
dec
and
rcl
adc
push
pop
lcall
mov
push
cmp
loope
xor
dec
inc
xor
lahf
adcb
inc
flds
pop
rcrb
movl
push
test
or
lret
xchg
dec
pop
pop
fistps
mov
movl
xchg
add
push
nop
sub
cld
xlat
mov
stos
nop
inc
xor
lds
nop
push
mov
mov
imul
sub
jmp
push
add
dec
loop
out
mov
mov
lcall
lret
or
pop
insl
sahf
jne
and
dec
jne
jnp
fnstcw
jl
out
cmc
leave
jle
scas
adc
shrl
aam
dec
mov
aad
cmpsl
pop
push
push
cs
ds
sub
sbbb
sti
and
je
xor
xchg
xorl
xlat
lcall
out
and
imul
xorl
test
adc
jnp
push
mov
aam
lods
mov
lods
shrl
mov
or
aas
sub
pop
arpl
add
pushf
or
in
mov
iret
rcl
dec
out
and
mov
loop
sahf
jge
or
or
aas
in
dec
push
sbb
inc
cli
mov
push
jno
enter
in
fcoml
or
pop
lret
sbb
test
dec
lds
or
and
adcl
outsl
mov
loop
out
and
daa
cmpsl
and
xchg
mov
adc
mov
sbb
sub
stc
or
inc
jbe
and
push
push
pop
push
lcall
repnz
out
jl
dec
stc
gs
push
adc
rcrb
dec
mov
iret
cmp
xchg
pop
test
push
sbb
add
lds
std
pop
add
dec
xor
cmpsl
cltd
lds
sarb
mov
or
popf
and
jns
mov
or
push
mov
cltd
es
cmp
or
jae
mov
lock
jno
push
push
loopne
and
daa
pusha
dec
scas
insb
pop
dec
sub
xchg
push
into
inc
add
lods
jnp
mov
mov
adc
fmul
nop
push
mov
mov
pop
mov
or
xor
mov
bound
pushf
call
cmp
adc
pop
add
into
sbb
leave
mov
cs
divl
jbe
xor
adc
sbbl
pop
fnstcw
fmull
dec
pop
testl
sub
and
jge
loopne
sub
addb
mull
roll
daa
test
mov
and
in
sub
stos
inc
sub
xor
push
push
les
jns
std
cwtl
mov
je
mov
movsb
mov
out
imul
call
sub
orb
rcll
sbb
xor
icebp
pop
int
xor
jno
out
sbb
mov
imul
cmpsl
cmp
inc
scas
pop
pushf
enter
pop
bound
clc
dec
test
dec
push
lcall
daa
pop
fistpl
add
in
mov
fs
cmc
stc
xchg
loope
jno
test
dec
adcb
xor
aad
pop
add
mov
mov
lret
and
out
scas
repnz
andl
cmp
add
outsb
mov
inc
mov
popw
call
js
imul
mov
sub
sub
fidivl
xor
dec
inc
iret
sub
into
adc
mov
push
pop
mov
push
out
adc
cmp
jno
aaa
ret
loope
fidivs
fisttpl
adc
test
je
fcmovnbe
pop
je
fldl
jne
dec
outsl
repnz
fwait
pop
pop
sti
push
loop
test
sub
popf
add
ds
push
test
sbb
sbb
pushf
gs
ja
and
jecxz
sti
inc
push
mov
popf
leave
and
cmp
xor
cld
xchg
and
push
stc
dec
adc
pop
int3
xor
push
int
mov
pusha
mov
pushf
in
mov
out
test
pop
je
jb
daa
ljmp
lcall
out
repz
stc
popf
push
push
cmp
and
push
jbe
pop
insb
sbb
pop
out
or
add
jbe
mov
pop
adc
cwtl
jecxz
and
out
cld
cmpsl
sub
iret
xor
sub
dec
mov
clc
xchg
int
mov
sbb
jno
adc
adc
lods
and
mov
xchg
adc
mov
addr16
cmpsl
pop
aas
nop
and
nop
leave
loope
pop
scas
pop
insl
out
xor
in
rcrl
rolb
sub
cwtl
xchg
xor
dec
jne
cli
and
std
lret
scas
add
pop
xlat
ret
cmp
mov
into
jge
push
cmp
pop
arpl
ja
adc
aas
dec
dec
jmp
jne
loop
outsl
dec
dec
sbb
cmc
in
mov
and
inc
xchg
out
mov
arpl
in
and
cmpsb
mov
scas
mov
push
jge
movsb
shrl
shr
inc
fdivl
je
mov
and
out
push
pop
mov
ds
rolb
shll
outsl
adc
sbbb
cmp
jle
aas
fmull
xor
xadd
ror
cmp
popa
push
lret
push
lret
fwait
xchg
mov
je
outsl
add
xchg
out
xlat
inc
xchg
ret
pop
push
mulb
push
fstpl
sbb
pushl
mov
jp
ret
and
ss
outsl
jns
incb
jb
jle
xchg
and
adc
fidivs
aas
testb
and
mov
mov
fldt
mov
arpl
inc
cmc
rcrl
es
movsl
dec
inc
push
mov
inc
or
xchg
repz
or
addl
push
ljmp
push
xchg
mov
add
fiaddl
cmpsb
loopne
mulb
lods
je
icebp
sahf
adc
and
cmpsl
lds
stos
dec
loopne
in
pop
mov
lahf
jl
ja
mov
loope
pop
and
jae
out
mov
push
rorl
bound
shrl
xchg
clc
lcall
shlb
je
push
js
dec
cmp
loope
pop
pop
mov
and
mov
pop
mov
mov
jge
mov
repnz
pop
mov
inc
les
andl
sbb
sub
xor
nop
cmp
sbb
adc
inc
mov
daa
popa
and
push
nop
insb
push
fisubs
cli
xorl
out
incl
repz
rclb
fdivp
in
and
scas
jae
add
add
cmp
ficompl
mov
shll
loop
aas
call
pop
fnstenv
mov
test
dec
pavgb
cmc
jnp
shl
mov
dec
pop
inc
imul
aas
nop
ja
xor
cmc
mov
frstor
or
xor
sbb
push
mov
stos
sub
aaa
clc
sbb
int3
popa
cli
fildll
js
dec
aam
jno
stos
push
mov
cwtl
pop
xchg
in
xchg
aam
in
mov
mov
gs
bound
jo
lea
jge
or
es
push
or
xor
pop
mov
sub
daa
out
mov
mov
and
shll
insl
ljmp
ficomps
jp
loope
ficomps
mov
xor
xchg
out
int
xor
stos
dec
add
in
dec
nop
je
int3
outsb
cmp
adc
jnp
std
arpl
jmp
lret
in
pop
insl
mov
and
daa
dec
in
or
fnstcw
xor
rcrl
rorb
jns
pop
imul
into
adc
fcoml
fdivrl
sbb
call
testb
xor
cs
clc
es
sub
mov
lock
out
and
stc
out
push
inc
js
push
add
mov
sub
jg
out
mov
ret
push
or
and
cld
je
cmc
int3
cltd
mov
mov
filds
insl
add
pop
push
mov
cwtl
lret
fldenv
lods
addb
add
scas
bound
pop
dec
lds
shll
lret
idiv
insb
fs
jl
jae
stos
and
pop
test
mov
jbe
mov
pushf
jbe
ficoms
sar
dec
roll
and
out
aad
js
sub
and
mov
stc
pop
mov
and
xlat
mov
push
or
out
mov
xchg
cmpsl
adc
pop
std
xor
loope
xchg
cmpsl
push
and
mov
inc
push
push
out
pop
jb
nop
sbb
xchg
jb
mov
out
insb
sti
je
inc
in
aaa
or
mov
shlb
adc
lods
jl
sub
in
int
jg
jnp
push
jl
ret
xor
add
sbb
inc
sahf
aaa
add
push
sti
out
push
and
fwait
divl
and
push
aam
dec
jge
or
xchg
cmp
and
jne
mov
xchg
clc
cwtl
jnp
mov
les
pop
std
mov
outsb
mov
sbb
maxps
cmpsb
aam
mov
ret
in
cmp
addr16
in
leave
mov
add
mov
push
dec
xchg
adc
dec
add
cld
fnstenv
jmp
push
je
test
push
mov
sbb
repz
or
fmul
pop
push
in
mov
pop
mov
push
sbb
adc
outsl
bound
lret
cvtps2pd
scas
repnz
out
push
xchg
or
pop
mov
or
out
hlt
xor
sahf
cmpsl
nop
pusha
dec
cmpsb
or
dec
push
dec
gs
and
mov
mov
adc
das
lds
sbb
jecxz
aad
sub
xchg
push
repnz
xor
das
aam
pop
xor
mov
xor
or
or
out
cmp
jmp
mov
lds
dec
cmp
leave
sub
push
cmp
push
mov
push
push
sub
xor
pop
pushf
or
push
push
mov
xor
je
dec
test
mov
pop
mov
into
mov
sbb
xchg
xor
mov
lcall
mov
lds
xchg
push
fildll
add
gs
inc
leave
adc
mov
das
fsubrs
push
push
xor
shl
fldcw
out
int3
push
and
mov
repz
push
xchg
lcall
dec
imul
adc
adc
loopne
ret
sub
and
sub
pop
xlat
out
fwait
xor
lea
enter
push
mov
test
add
lods
pop
mov
idiv
enter
push
ds
dec
fildll
jbe
mov
inc
adc
in
loop
jno
ficoms
hlt
push
xor
cmp
push
or
mov
mov
inc
and
nop
test
xchg
or
mov
mov
mov
jae
call
mov
sbb
test
and
lods
push
pushf
adc
and
mov
out
mov
hlt
lock
fdivl
nop
jg
xchg
mov
cltd
popf
loope
dec
shlb
mov
sbb
add
outsl
push
mov
in
fistpl
fdivp
mov
and
inc
mov
pushf
xor
mov
push
es
lea
es
mov
repz
mov
sete
or
adc
popa
pop
sub
addl
repz
sarl
mov
fldln2
aaa
adc
xor
int3
rcrb
stc
adcb
in
sbb
sub
xchg
mov
cmp
cli
leave
dec
aas
scas
dec
push
call
test
ja
jae
sub
mov
outsb
mov
mov
and
sub
mov
inc
mov
push
iret
mov
loope
pop
hlt
fcomi
nop
adc
adc
ret
mov
aaa
loope
leave
out
mov
jo
pop
mov
add
xorb
sbb
fsubrl
adc
xor
loopne
add
movsl
cld
cmpsb
jo
inc
pop
popf
cld
mov
inc
cmp
mov
xor
fistpll
push
std
das
int
rcll
iret
jg
cltd
orb
mov
dec
mov
cmp
add
mov
pop
inc
mov
add
scas
and
cmp
or
stos
push
add
rep
mov
stos
inc
mov
jmp
ret
and
adc
inc
scas
pushf
sub
pop
test
pop
push
push
popa
into
xchg
cmp
cmp
xchg
pop
loope
mov
inc
dec
xor
addr16
xor
inc
mov
inc
hlt
mov
insl
mov
jle
leave
sub
testb
push
movsb
je
cmp
add
leave
scas
inc
xchg
jg,pn
sbbb
jae
jne
lea
lods
pop
and
sbb
mov
mov
jl
xchg
mov
sbb
js
cli
xchg
popf
mov
pop
rorl
cmc
lds
mov
mov
pop
xor
mov
mov
sub
push
dec
push
mov
mov
inc
sarl
or
pop
cmp
push
inc
in
iret
rcrl
adc
xchg
xchg
mov
cmp
pop
jae
mov
fdivrs
inc
lret
enter
and
jb
in
in
jl
ljmp
fxam
jne
sub
loop
push
popf
loop
sbb
nop
xchg
stos
in
push
add
mov
ljmp
sbb
inc
jp
or
cmp
dec
popa
jle
xchg
and
push
xchg
xor
xor
cli
mov
fstl
mov
out
mov
int3
pop
in
xchg
cmpsl
mov
dec
stos
xor
fwait
adc
push
inc
or
mov
aad
inc
mov
sub
jnp
mov
out
outsb
xor
rcll
sbb
and
mov
lds
dec
lods
les
lret
lds
cltd
outsl
fcom
ror
and
sbbb
sbb
test
pop
lods
sbb
or
mov
push
xor
aaa
or
cmpsb
jge
jne
mov
xchg
pop
xor
in
push
inc
or
mov
inc
jae
aaa
xor
jle
dec
jecxz
in
add
pusha
xchg
test
cmp
les
push
fnstcw
sub
push
jbe
in
fs
and
cld
test
push
les
in
shll
clc
or
lret
stc
or
mov
sbb
pop
movsl
arpl
sub
mov
jnp
call
aad
push
and
dec
sub
out
mov
loop
dec
outsb
mov
test
loopne
xor
adc
xchg
orl
test
cltd
xchg
push
or
pop
mov
jbe
int
imul
sbb
or
push
push
push
out
sbb
xchg
mov
mov
ss
add
mov
push
stos
fcmovb
loopnew
dec
outsb
lods
sub
cmp
dec
frstor
push
cmp
rolb
and
push
jno
inc
cld
mov
subb
jo
outsb
arpl
dec
cwtl
sahf
jne
mov
dec
inc
lods
mov
pop
or
mov
sahf
xchg
add
jne
sub
lock
jns
sbb
out
push
pop
cmp
add
jno
stos
lock
push
cld
mov
jmp
filds
xchg
fnstenv
pop
mov
dec
pop
push
rcll
jb
jb
cwtl
icebp
cld
lret
out
mov
cmpsl
cli
push
jno
inc
mov
adc
push
jecxz
cmc
shll
sbb
jns
or
loop
xchg
adc
sti
cld
pop
fstl
jg
fmul
mov
js
int
xchg
sub
lods
test
adc
cmp
stc
dec
sbb
sbb
push
and
fimuls
rorl
les
jp
cmp
adc
add
push
sbb
loope
mov
dec
mov
cmp
push
setnp
pop
mov
lods
movsb
mov
pop
lock
and
mov
sbb
or
mov
hlt
aam
cmc
je
lahf
data16
pushf
sub
fdivl
adc
jae
stos
in
or
mov
shll
or
jne
adc
push
sarb
pop
orb
xor
xor
call
pop
jnp
dec
lcall
lds
xchg
add
jns
pop
and
mov
or
rcl
push
lock
jg
cmpsb
call
inc
movsb
mov
pop
xchg
pop
ja
push
mov
cmp
sbb
test
fs
sbb
cmp
ljmp
out
dec
jb
push
sbb
add
scas
ret
mov
pusha
xor
mov
lock
arpl
or
nop
mov
shlb
pop
andl
xor
ja
call
popa
xchg
and
dec
and
or
or
lods
jae
sub
pop
push
sti
fsubs
or
es
fsubs
enter
sbb
mov
sub
add
mov
fidivl
mov
inc
xchg
nop
jnp
push
add
out
aad
xor
jno
fdivrs
adc
lods
hlt
cld
push
mov
inc
fcompl
xor
ret
add
orb
scas
jnp
adcl
je
out
data16
cmpsl
dec
jmp
xchg
inc
cmp
outsl
cmp
rolb
jb
lahf
adc
adc
mov
xchg
movsb
sub
pop
mov
sbb
xchg
and
cmpsb
and
fnstsw
mov
xchg
mov
mov
xchg
mov
push
xchg
pop
repz
icebp
int
mov
mov
xchg
xchg
ja
mov
pop
sbb
cmp
arpl
xor
pop
scas
arpl
jae
fldl
add
fmull
cmp
jle
push
xchg
jo
pop
lock
mov
dec
insl
int3
and
jl
shlb
sbb
imul
bnd
or
bound
scas
cmp
rclb
cli
andb
les
xchg
dec
fsubrl
cmp
jnp
sarb
mov
dec
fcmovnbe
outsl
in
sarl
fidivrl
or
cld
bound
pop
jge
xchg
out
or
mov
fwait
sbb
insb
push
or
pusha
jmp
push
xchg
int
add
imul
sti
loopne
rcrb
call
push
push
stc
inc
cld
and
test
adc
cmp
inc
sub
mov
into
xor
mov
mov
in
sahf
gs
jne
xor
daa
cmp
cmpl
in
and
in
pusha
ret
hlt
push
xor
addr16
xor
fsubl
loopne
dec
popa
rol
xor
outsl
addr16
add
sub
fadds
loopne
dec
xchg
xchg
or
out
pop
inc
sub
fucomip
popa
into
loopne
inc
stc
ds
mov
jl
mov
pop
pop
mov
inc
adc
mov
and
xor
arpl
jl
cmpsb
sub
dec
shrb
out
shr
jecxz
mov
pop
imul
es
ffree
mov
cli
in
push
lods
pop
add
repnz
pop
sub
mov
mov
dec
push
iret
dec
mov
xor
test
dec
push
fiadds
outsl
adc
rclb
les
xlat
xchg
ss
fcompl
lcall
gs
in
xor
inc
testl
addl
sahf
or
leave
xchg
and
mov
jnp
sbb
fcom
sub
daa
dec
cld
mov
mov
ret
dec
mov
xor
push
jl
stos
cmp
xor
test
pop
pop
push
inc
mov
inc
scas
ror
leave
sub
sub
cmp
mov
movsb
aam
and
inc
lods
test
sahf
andb
xchg
scas
dec
push
out
push
addb
add
enter
test
sbbb
pop
or
popf
sbb
push
xchg
sub
mov
pop
xor
inc
shlb
mov
mov
adc
jl
lods
sbb
les
add
inc
sub
ret
add
notb
sti
and
jne
mov
addr16
aad
jle
or
push
cwtl
inc
mov
fstpt
xchg
cmp
loopne
lret
popf
and
decl
dec
lods
arpl
cmp
cs
inc
daa
push
dec
nop
jae
cmp
push
xchg
cmc
dec
add
movsl
jno
test
or
xchg
je
pop
cmp
lahf
push
movsl
push
inc
xor
pop
add
sbb
jge
hlt
jg
dec
fs
fwait
sub
sbb
repnz
das
arpl
iret
scas
icebp
repz
xor
sbb
test
push
hlt
jne
sbb
add
xchg
test
fisubrs
insb
push
push
inc
pushf
ds
rolb
mov
lods
cmp
mov
repz
push
test
jns
mov
xor
push
or
add
cmpsb
daa
add
or
push
jmp
fs
push
mov
cld
pop
mov
jg
imul
aaa
ljmp
lahf
xchg
test
mov
xchg
xchg
popa
fcoms
jle
dec
shll
xchg
scas
test
push
push
adc
xor
mov
push
mov
ret
fs
nop
sbb
push
and
cmp
dec
stc
test
test
iret
in
and
aas
rorl
lea
mov
pusha
xchg
jbe
xor
rolb
mov
aam
adc
adc
fstps
cmc
int
cmc
mov
mov
and
imulb
xchg
gs
shll
jns
adc
insb
fcompl
xchg
stos
scas
mov
cld
dec
cmp
fldt
cld
out
cltd
xlat
mov
shl
sub
sbb
sbb
testb
sti
sbb
inc
popa
out
or
sti
js
mov
int
cwtl
rol
test
lea
arpl
dec
imul
push
into
dec
pop
push
hlt
jecxz
jl
fst
and
lods
pop
sarl
push
shlb
sbb
pop
mov
bound
xor
test
pop
mov
out
mov
xchg
push
dec
dec
rcrl
orl
sbb
test
arpl
rolb
adcb
cmpb
xchg
add
out
sbb
sub
lods
mov
mov
loop
push
inc
adc
dec
mov
pop
adc
notb
jle
and
cli
test
add
and
lock
push
jno
add
mov
inc
sahf
cli
pop
notl
enter
xchg
aaa
sbb
popa
dec
jnp
dec
mov
js
in
movsl
ficompl
push
int
lods
push
mov
in
xchg
xor
mov
fidivs
mov
xchg
adc
xchg
jle
sub
mov
or
mov
xor
out
and
lods
add
enter
sub
inc
pusha
loop
xchg
repnz
in
mov
outsl
pop
push
adc
jne
out
aad
mov
or
aam
shlb
mov
sbb
inc
sbbb
xchg
push
push
inc
mov
sbb
adc
je
stos
xor
insl
jl
mov
lods
xor
push
mov
fnsave
inc
movsb
sub
stos
xchg
xor
stc
lahf
mov
jbe
in
ja
sbb
rorb
dec
mov
cmp
push
ret
and
lea
xor
dec
out
loop
dec
dec
jnp
stos
adc
cmc
pusha
pop
subl
lock
adc
add
icebp
cmp
pop
mov
push
test
lahf
jmp
sub
sbb
pop
out
insl
inc
jmp
inc
cltd
mov
data16
cmp
fcmovbe
adc
mov
inc
js
xor
ret
fstps
notl
mov
std
test
movsl
fcompl
aaa
cmc
lds
adc
inc
jmp
inc
imul
xchg
inc
push
icebp
push
sub
cmpsl
inc
mov
xlat
insb
cmp
stc
test
push
mov
mov
mov
cmp
das
loopne
sbb
ds
data16
inc
loope
xor
lods
idiv
cwtl
push
push
lret
push
mov
test
mov
scas
lea
adc
ljmp
mov
cmp
adc
cmp
rclb
jp
shufps
sti
add
mov
inc
mov
shll
mov
sahf
mov
mov
inc
xor
dec
in
lahf
xor
cmp
into
dec
sbb
mov
mov
mov
je
fbstp
adc
and
aaa
mov
mov
adc
movsl
xor
lods
or
add
mov
dec
ljmp
mov
scas
push
cmp
popa
push
jo
push
mov
cmc
test
std
sub
cli
addl
sub
outsl
fsubs
out
std
dec
jbe
imul
sarb
adc
dec
stc
hlt
movsb
popa
xlat
cmpsl
dec
and
dec
cwtl
mov
mov
xor
xlat
add
fisubl
or
sub
inc
je
xor
xchg
es
adc
js
sti
sarl
bound
les
xor
adc
adc
frstor
inc
cmp
pop
pop
jmp
adc
or
mov
aad
push
cltd
fbstp
js
repnz
xchg
repnz
gs
mov
ret
or
aaa
mov
sbb
shrl
inc
jg
adc
xor
xchg
sbb
pop
mov
pop
or
in
xor
push
mov
push
jp
aaa
ljmp
cs
std
jno
repnz
ja
inc
shrb
dec
mov
mov
mov
out
jmp
or
sub
and
push
jo
jne
outsl
stos
call
mov
fisubs
roll
dec
mov
xchg
test
sub
repz
nop
je
lret
push
loopne
fildll
mov
sub
dec
cmp
push
rorb
push
cmpsl
cmp
lds
pop
jmp
jl
pushf
fcoms
cmp
pop
adc
sub
bound
cld
mov
jge
mov
mov
inc
jp
push
xor
iret
adcl
out
mov
gs
xchg
xchg
xchg
push
adc
adc
loope
mov
shll
mov
jp
rorb
in
mov
andl
lods
inc
loope
dec
imulb
jo
or
data16
mov
mov
fcompl
jo
inc
int
rcll
in
xor
sbb
out
mov
in
mov
out
repnz
xchg
arpl
xor
or
je
imul
adc
push
ret
dec
inc
jg
sti
jmp
mov
stc
jle
imul
fsts
mov
mov
sub
cli
cwtl
insb
test
push
sub
xor
and
shrb
jg
or
fidivrs
arpl
test
imul
data16
pop
pop
push
and
mov
inc
lods
cmp
jle
cli
pushf
adc
rorl
cmpb
ja
sub
jecxz
mov
cmp
pop
int3
xor
mov
divl
lahf
mov
in
mov
adc
xchg
xor
lock
or
loope
jmp
or
test
les
pop
mov
mov
outsb
shrl
cmp
push
xchg
add
lahf
int3
mov
test
push
data16
xchg
popf
aaa
sub
jg
add
dec
in
inc
sahf
or
mov
push
sub
int
pop
fld
xchg
out
ljmp
push
mov
lahf
incl
cld
loop
or
xor
loopne
imul
aad
cltd
movsb
movsb
inc
aas
adc
movsb
and
cmp
stos
add
je
adc
sbb
mov
add
orl
pushf
out
add
out
ret
mov
sub
mov
dec
jb
inc
ss
push
sbb
daa
push
mov
pop
fdivrp
xor
mov
je,pt
imul
repnz
sarl
cmpsl
sbb
daa
roll
pop
mov
call
mov
mov
sub
and
fs
inc
xchg
std
adc
sub
jns
mov
push
xchg
fwait
adc
lret
sbb
add
sahf
scas
cmc
pushl
std
pop
push
dec
in
jae
fistpl
push
jns
in
lea
insl
or
sub
jns
bound
test
repnz
lods
test
push
hlt
outsl
lods
mov
movsb
sbb
dec
gs
cmp
add
or
adc
xchg
stos
pop
jns
inc
inc
shlb
mov
jecxz
sti
mov
rorb
xor
mov
jb
pop
sti
push
xchg
shlb
lret
lock
cmpsb
inc
mov
inc
add
loop
adc
out
into
int
or
xchg
loopne
jmp
rclb
inc
xchg
ret
sbb
cld
mov
fisttpl
dec
jns
cmp
bound
loope
mov
jnp
sub
pop
les
lret
in
xor
addb
pop
es
notl
cwtl
sub
add
sarl
ret
jmp
daa
ss
xchg
fsubrs
cmp
mov
push
xchg
push
cltd
mov
and
xchg
iret
cld
xor
rolb
je
adc
push
js
lret
neg
rcll
inc
xchg
mov
pusha
add
adc
outsb
jo
mov
pop
push
inc
push
test
xor
rcll
movsl
xor
popa
outsl
bound
cmpsb
test
sbb
lea
add
rorl
push
lahf
mov
mov
lahf
xor
hlt
dec
outsl
pop
sbb
stos
enter
test
pop
arpl
jb
mov
aaa
mov
in
jns
cs
add
mov
jae
mov
inc
dec
jmp
push
inc
in
pop
xchg
inc
ds
arpl
adc
push
pop
mov
stos
push
jo
dec
cltd
imul
arpl
iret
sbb
inc
clc
imul
cli
jge
outsl
sub
xchg
cltd
inc
hlt
dec
pop
push
sti
pop
insl
ret
mov
dec
xchg
test
sub
imul
mov
lret
rcll
or
stos
xchg
inc
push
xor
or
test
xchg
in
mov
lret
into
mov
push
fisubs
xchg
popa
cld
rorl
push
adc
xor
test
cmp
fstpl
clc
and
push
int
mov
lcall
fwait
pop
inc
mov
insl
mov
adc
das
sub
orb
loopne
iret
mov
test
push
and
jmp
stos
pop
scas
fsubrp
xlat
sub
js
repnz
mov
fimuls
loope
push
ret
sahf
ffree
cmp
pop
dec
adc
jmp
sub
fst
push
cmp
insl
push
mov
jo
xchg
mov
stos
mov
sub
es
jmp
cmp
push
inc
pop
fnsave
push
mov
out
xchg
jl
mov
mov
xchg
jecxz
cmpsl
inc
mov
rorb
sub
inc
cmp
add
mov
stos
lea
andl
mov
sub
cwtl
jae
inc
mov
test
mov
and
out
xchg
test
addr16
rcr
scas
sahf
add
cwtl
cmp
jle
cmpsl
sbb
dec
ret
fidivl
mov
dec
sbb
cmpsl
inc
in
cmp
sti
call
jb
ja
movsb
or
mov
mov
mov
cmp
mov
xchg
pop
xor
sbb
mov
imul
testl
and
dec
subb
sti
ret
fcomip
inc
sub
dec
sahf
stos
mov
mov
int
std
sbbb
mov
mov
arpl
xchg
roll
insb
movsl
xchg
shl
in
xchg
and
inc
ja
and
mov
pop
loope
dec
fisubs
cmc
sbb
in
sub
addr16
pushf
lahf
jns
lea
pusha
leave
test
imulb
sub
repnz
icebp
or
vunpcklpd
jp
push
out
loope
imul
cmc
in
movsb
clc
sbb
jb
mov
call
push
pop
adc
inc
push
mov
adc
arpl
dec
test
enter
pop
pop
push
push
pop
repnz
xor
int3
inc
test
ss
pop
std
jmp
dec
and
jnp
outsb
flds
push
in
jb
rcrb
je
sahf
lods
loopne
push
shl
push
mov
repz
lock
imul
or
nop
sub
test
inc
cmpsl
pop
test
adc
loopne
pop
jle
aam
adc
lea
fistpll
shll
jae
push
push
test
dec
insb
popf
in
int
ljmp
int3
inc
ss
pop
mov
jg
rorl
daa
test
mov
shrl
sbb
or
inc
js
sub
fidivrs
movsl
fcompl
adc
cs
fwait
sbb
jecxz
loopne
cmpsb
scas
cmp
or
in
pusha
ds
loope
scas
jg
jecxz
dec
mov
pushw
syscall
push
lods
cmpsb
fsts
stos
mov
shlb
fadds
aad
mov
rolb
in
xor
xorb
mov
push
shrl
sbb
cli
stos
lcall
pop
add
cmp
jmp
das
or
or
mov
cmc
mov
cmp
mov
cmp
adc
fs
xor
jecxz
jb
dec
idivl
repz
inc
pop
popf
in
test
imul
inc
ss
shrb
mov
fisubs
sub
stc
pop
js
in
inc
mov
push
inc
xchg
pushf
mov
xor
sbb
add
outsb
mov
xchg
test
scas
mov
jmp
push
imull
pop
idivl
popf
pop
push
xor
adc
or
rorl
dec
pop
js
test
int3
repz
dec
call
or
cmpsl
dec
and
fwait
outsb
push
test
mov
lds
push
mov
lock
aam
addb
sbb
push
mov
or
pop
fisubs
cltd
inc
mov
les
inc
adc
adc
test
arpl
or
fstps
bound
mov
sbb
stc
cmp
jbe
hlt
aad
dec
fdivp
mov
rcrb
or
xchg
out
push
in
ljmp
clc
sbb
dec
rolb
mov
or
dec
mov
sub
mov
push
shll
mov
mov
das
lods
jmp
lea
shl
insb
sub
pop
aas
data16
and
push
jle
push
cmpsb
push
movsb
cmp
std
push
call
es
fld
fcompl
add
leave
mov
stos
xchg
dec
inc
pusha
xchg
push
shr
aas
add
jmp
test
cs
inc
aam
loope
mov
imul
ds
and
push
sbb
cmpsb
ret
pop
je
cmpsb
pop
sbb
sub
xchg
pop
es
testl
sub
jno
sahf
jl
and
jbe
adc
push
push
mov
and
jl
sarb
pop
xlat
mov
cmc
jecxz
clc
aaa
repz
jle
popf
or
aam
mov
adc
cmp
or
pop
fists
cs
xchg
and
cltd
xor
inc
cli
adc
adc
loope
stos
or
fsubrs
inc
pop
lcall
stos
scas
push
push
jle
aas
fsubrl
pop
sbbl
cmp
aad
in
loop
inc
repz
sub
jb
dec
bnd
xchg
rcrb
adc
mov
test
mov
loope
dec
sub
inc
pop
and
rorl
fcomps
movsl
sub
rclb
cmpb
push
mov
mov
sub
dec
cmp
loope
fcom
mov
inc
rolb
or
stos
mull
add
inc
sub
test
or
aad
into
mov
test
pusha
xchg
and
fs
xor
test
inc
dec
xchg
scas
and
incl
mov
ret
xchg
sub
lea
pop
aad
shlb
push
lret
outsb
mov
mov
repz
jae
push
mov
xlat
shll
add
sub
mov
lds
xchg
and
and
pop
and
fidivl
lods
jecxz
es
mov
adc
cli
sahf
xchg
add
mov
push
ficoml
das
std
hlt
sub
add
pop
testb
movsb
dec
cmpsl
inc
push
test
dec
loope
insb
cld
daa
loopne
jl
cmp
push
ffree
pop
jne
out
aad
cmc
jbe
enter
dec
nop
mov
push
movl
xchg
fstpl
adc
icebp
adc
and
mov
popf
xchg
cwtl
popf
vmwrite
push
or
and
and
push
lret
xor
cmp
in
rclb
cmpsl
pushf
fbstp
adc
and
jg
jl
or
pop
sbb
stos
lods
call
cld
mov
cmp
insl
xchg
or
mov
mov
jp
ds
lds
adc
or
jge
and
dec
mov
jmp
loope
dec
pop
push
jae
rclb
pop
aad
push
mov
icebp
pop
push
pusha
jle
and
pop
mov
jns
loop
ljmp
aam
loop
fstl
add
jns
xor
fnstsw
adc
jne
ljmp
lret
mov
inc
out
outsb
push
gs
test
inc
fldenv
jnp,pn
inc
aaa
fildl
inc
dec
mov
xor
dec
popa
cmp
jge
cwtl
loope
mov
mov
and
test
xor
mov
ja
mov
leave
inc
jbe
dec
cmp
push
adc
jp
pop
sbb
and
fwait
divl
into
add
add
adc
add
les
stos
aad
neg
jp
sbb
fs
sbb
xor
les
mov
cwtl
aad
scas
push
inc
fwait
cmc
xor
pop
mov
push
sub
in
push
inc
mov
inc
out
lods
push
call
mov
int3
test
mov
add
sub
jno
imul
stc
jns
orl
mov
out
mov
cmp
jnp
or
pop
mov
jnp
pop
mov
in
sbb
std
aam
insb
cwtl
and
sti
adc
lods
mov
sbb
mov
ja
fldl
ret
push
outsl
negb
push
ss
jmp
adc
inc
inc
sbb
cmpb
xor
in
jno
dec
clc
std
fisubs
mov
lahf
ror
cmpsl
sbb
push
inc
ret
xchg
add
cmpsb
or
sbb
sub
out
test
out
mov
sub
inc
rol
lcall
icebp
sub
push
outsb
xor
rcrb
in
mov
ret
popf
jge
test
xchg
xchg
test
mov
bound
or
outsl
pop
rclb
in
mov
mov
jne
ficoml
imul
mov
lock
mov
lcall
xlat
inc
sbb
inc
lock
test
jecxz
ficoml
add
push
dec
in
or
add
add
jg
imul
lods
test
ljmp
jbe
shl
dec
or
stos
jb
ds
adc
adc
pop
sbb
mov
aas
rcrl
jo
or
cli
ret
lret
jmp
mov
stc
pushf
pop
and
sbb
sub
xor
or
sbb
cwtl
das
stc
mov
arpl
jnp
or
popa
jbe
out
dec
mov
scas
ret
jbe
int3
adc
pop
push
sub
icebp
fbstp
pop
sbb
mov
jl
insb
pop
popa
push
loope
loope
push
enter
or
mov
adc
and
mulb
in
stos
aam
adc
insb
cmovns
lea
jmp
mov
sti
add
outsl
outsl
jae
dec
dec
add
aaa
das
mov
dec
fisubrs
cmp
push
xor
push
jne
jae
fisttpl
lret
xor
in
and
pop
sbb
mov
or
add
lds
adc
xor
popw
sub
sub
pushf
divl
stos
pop
add
mov
rorl
scas
test
adc
testl
mov
jbe
push
mov
test
hlt
aas
stos
mov
mov
dec
pop
adc
adc
movsl
inc
fdivr
pop
cmp
xchg
push
sbb
or
mov
lahf
bnd
insl
aad
lea
fisttpll
fcmovne
mov
cli
sub
or
jmp
repz
orl
int3
out
mov
mov
cli
xor
push
xor
xchg
call
and
pop
mov
lods
pop
cmp
xchg
cmp
push
ja
mov
lcall
scas
nop
cmp
sbb
pop
sub
stos
cmpsl
pop
add
shrb
leave
int
int3
test
pop
xchg
fcos
cmp
leave
jge
and
inc
hlt
fimull
in
shll
mov
dec
sarl
adc
cmp
mov
push
push
call
mov
jg
pop
rorb
flds
pop
stos
test
dec
mov
lret
aas
popf
xor
scas
jmp
and
sbb
push
test
and
daa
int
sub
mov
mov
es
dec
std
push
aam
add
push
adc
aas
pushf
stos
push
and
popf
xchg
ds
jecxz
mov
jno
and
popa
addb
or
incb
mov
lret
jns
pop
jnp
push
out
jg
mov
jmp
mov
popa
adc
jns
loope
out
and
jne
fistps
icebp
jl
pop
cmp
testl
or
mov
sbb
and
daa
addb
xor
mov
jne
insl
jmp
sub
push
in
mov
stos
shll
inc
mov
in
jl
mov
or
mov
push
sbb
or
aas
jp
in
pop
out
or
cld
loop
and
scas
dec
lock
pop
ror
or
xchg
mov
rcll
test
std
loopne
and
call
mov
mov
popa
mov
mov
jle
sub
xor
pop
push
pushf
imulb
mov
inc
sbb
inc
ljmp
mov
cmp
mov
shlb
push
lods
fwait
outsl
mov
adc
pop
ss
push
xchg
fildl
jle,pt
movsb
lods
lods
add
bound
sub
lret
mov
or
mov
subb
push
mov
stos
fnstcw
push
add
jmp
xor
push
insl
cmpsl
cltd
cmp
insl
xorl
jbe
stc
jmp
and
sbb
xor
sub
clc
out
hlt
adc
sar
out
mov
bound
mov
add
mov
fsubrs
in
xor
mov
out
ss
sub
sub
in
mov
ss
pop
mov
push
sbb
stos
xchg
mov
cmp
mov
into
jmp
loopne
ficompl
bound
lods
imul
rcll
push
mov
push
shlb
mull
xor
mov
xchg
arpl
inc
lock
sti
cli
hlt
adc
aas
out
inc
outsb
push
test
hlt
or
fnstsw
inc
xchg
push
xor
xchg
dec
in
add
and
sub
lcall
flds
es
cmc
pop
lds
aaa
addr16
sti
sbb
fiadds
stos
sarl
xor
pop
int3
fwait
jl
pop
jecxz
arpl
sub
fcmovu
sbb
jns
mov
mov
loope
add
jg
pushf
push
cmpsb
dec
jae
popa
jmp
clc
and
mov
push
sub
lock
mov
inc
mov
repz
push
push
addl
xor
stos
cmpsl
and
pop
popa
pop
dec
lock
sbb
pop
jecxz
mov
pop
mov
cltd
jecxz
loop
out
adc
ss
sbb
pop
cmp
push
inc
inc
or
cmpsb
ret
pop
imul
das
cmp
sub
cmp
pop
cmp
push
mov
lahf
or
and
sub
sub
push
lret
push
lds
fldl
xchg
pop
andl
adc
loop
lods
fs
jl
mov
mov
push
mov
sub
sbb
mov
insl
and
add
mov
xchg
or
or
push
stc
inc
adc
cmc
push
inc
loop
in
mov
jp
push
out
icebp
lcall
or
jnp
out
mov
hlt
aam
xchg
sbb
stos
pop
orb
int
xchg
pushf
xorb
into
int
dec
cmpsl
loope
xor
nop
outsl
fcomps
incl
dec
cli
and
or
jae
imul
aam
faddl
mov
jae
pop
pop
cmp
lret
push
xchg
sbb
stos
mov
lds
ret
fbstp
rcr
sub
inc
xor
movsl
add
movsl
push
xchg
cltd
test
mov
sti
or
sbb
clc
stc
icebp
ds
insl
imull
pop
out
test
nop
out
insl
adc
mov
sub
dec
jns
loop
das
pop
rorl
sbbb
sbb
mov
fpatan
lahf
loopne
cwtl
xlat
sbb
aaa
lcall
lcall
mov
sbb
pop
or
test
enter
inc
add
and
jne
fldt
dec
push
xor
jns
enter
sahf
sub
pop
int
mov
lret
ja
aam
fistl
sbb
es
loopne
imul
dec
mov
sbb
and
lea
test
imul
and
pop
cmp
loope
mov
mov
sarb
jmp
sub
xlat
mov
imul
pusha
push
mov
out
aam
cli
inc
cmp
test
rcrl
push
int3
into
das
ds
and
fsub
adc
and
push
xchg
int
mov
sbb
roll
inc
inc
jmp
push
mov
movsb
mov
mov
jecxz
adc
adc
mov
in
and
xor
mov
sub
pop
sti
jmp
inc
inc
out
pushf
out
jb
inc
cmp
cmp
mov
jg
lods
adc
jbe
pop
sbb
inc
mov
mov
int3
hlt
push
scas
cltd
inc
loopne
ror
adc
cli
iret
mov
sub
xchg
popf
shlb
movsl
outsb
pop
in
mov
jl
jne
sbb
lret
cmpsb
sbb
sbb
mov
adc
add
iret
dec
data16
cwtl
pop
mov
sub
cmp
int
cmp
or
sti
pop
sahf
sub
rolb
ror
jb
bound
into
pop
mov
or
fldt
inc
rcll
lock
in
aam
and
mull
inc
loopne
lret
sub
cld
out
ja
jecxz
testl
aas
jmp
adc
lods
xor
shlb
cmp
int
mov
xlat
mov
pop
xlat
pop
fldcw
cmc
cld
push
add
push
sub
aad
push
push
xchg
adcb
sar
lret
mov
pop
xlat
and
shll
add
movsl
sarl
gs
mov
adc
jnp
les
pop
shr
mov
and
xlat
inc
ljmp
mov
in
pop
into
cmp
call
pop
insl
ret
in
cmpb
test
and
sbb
test
pop
pushf
out
cmc
std
roll
pop
mov
push
mov
pusha
shll
test
jo
push
adc
jno
jle
and
push
int3
mov
les
ljmp
mov
insl
and
mov
in
and
test
mov
fnstsw
mov
and
jb
xor
dec
jno
push
mov
xor
and
cmp
sbbl
mov
dec
out
js
lea
lods
fldt
call
cmp
pushf
cmp
aam
pusha
mov
xchg
push
mov
adc
mov
xchg
cmpsl
mov
lea
add
sahf
xor
dec
pop
hlt
popl
in
dec
mov
mov
mov
mov
mov
cmp
pushf
push
xor
out
fcmovb
bound
xor
cmp
xchg
mov
cmp
pop
or
ljmp
pop
in
cmp
sub
movsl
mov
sbb
nop
mov
push
mov
fxch
xor
fdivrs
or
sub
gs
push
adc
pop
adc
popa
push
adc
adc
test
jb
jbe
js
fcomi
lahf
loopne
xchg
jo
js
mov
and
sbb
cli
imul
out
adc
jge
dec
lahf
cwtl
les
inc
mov
sub
adc
mov
mov
push
or
in
add
enter
xor
mov
mov
push
lcall
in
in
dec
hlt
mov
and
xchg
lods
push
push
cmp
mov
mov
push
lret
loope
sub
jne
sbb
cmovo
jns
dec
push
inc
adc
xchg
ret
aaa
jmp
xor
daa
push
test
pop
jmp
js
push
jge
push
insb
fwait
loope
or
das
fs
clc
lds
in
mov
mov
aad
xchg
testb
mov
push
push
inc
cmp
pop
xchg
and
mov
add
loop
lcall
imul
fisttpl
cmp
sbb
pop
inc
dec
ljmp
lods
jg
xchg
or
imul
loopne
loop
mov
sub
in
test
jmp
jns
sti
xchg
out
imul
or
icebp
adc
aad
add
gs
lds
sbb
lock
jbe
mov
mov
insl
sbb
pushf
loope
cmp
lock
sub
hlt
xchg
frstor
repz
xor
mov
pop
push
mov
xlat
mov
stos
jo
adc
adc
ret
int
pushf
or
xchg
iret
fidivl
xchg
jb
movsb
jge
dec
es
and
movsl
hlt
imul
stc
sbb
inc
fisttpll
insb
sbb
cli
dec
cs
jo
test
jle
xor
sbb
out
jae
call
aas
push
stos
cmc
imul
pop
div
or
xor
aaa
push
cmc
jecxz
pushf
push
push
lods
fldcw
imul
dec
fnstenv
shll
pop
lds
xchg
int3
ljmp
add
stos
lahf
loope
xchg
stos
mov
xchg
not
stos
and
es
loopne
test
and
push
pop
icebp
dec
and
mov
dec
aas
mov
cmp
jmp
push
stos
cmp
adc
mov
or
pushl
jl
stc
cmp
xor
fdiv
ret
popf
inc
or
xor
test
xchg
xor
insl
push
lods
popa
push
testb
shrb
mov
and
pop
pop
mov
push
sbb
iret
lds
aas
sbb
jo
xlat
fwait
adc
jge
popa
orb
push
int
int3
add
cmp
out
minps
shlb
popf
pop
jnp
and
xlat
xlat
aam
xor
mov
sub
dec
pop
push
mov
cmc
adc
cmpsb
or
push
je
xchg
cmpsl
mov
dec
push
imul
xor
jg
sbb
daa
inc
and
enter
xor
int
mov
cld
jno
adc
xchg
js
inc
bound
cmp
lds
adcb
aad
mov
push
loop
sub
sub
bound
lods
pop
ss
xchg
je
into
mov
sbbb
xchg
xchg
jmp
mov
popf
add
or
in
and
or
lock
xor
xchg
cmp
add
jno
repnz
and
pop
push
pushf
push
lods
shlb
lea
ds
ja
in
faddl
icebp
test
subl
and
gs
cmp
inc
in
mov
push
outsb
mov
les
je
movsl
ja
rorl
lcall
imul
mov
out
lcall
xchg
xchg
jge
mov
inc
cltd
or
push
sbb
push
push
and
xchg
fistpl
iret
sbb
sbbb
cltd
cmpsb
repz
fs
sbb
loop
fdivrl
shrl
not
inc
gs
pusha
cs
cwtl
sub
testl
nop
cmpxchg8b
scas
out
fstpt
pop
shlb
inc
sbb
fidivl
sti
cmp
pop
dec
jle
sub
push
cltd
movl
negl
popf
cmp
aam
comiss
addr16
inc
pop
pop
loopne
xor
dec
mov
movsl
push
inc
dec
movsl
dec
cmp
inc
mov
pop
pop
lret
adc
daa
dec
pusha
call
addr16
inc
sbb
sbb
std
repz
push
ja
sbb
pop
mov
addb
jl
outsl
hlt
es
and
dec
dec
and
into
mov
mov
jl
or
test
pusha
dec
sbb
jmp
sub
lds
fstl
cwtl
int
popf
fwait
mov
push
mov
dec
adc
adc
das
stos
adc
xchg
cmp
pop
xlat
pop
inc
dec
ja
iret
mov
xchg
jle
push
mov
scas
outsb
mov
push
outsb
ds
and
mov
lahf
push
mov
xchg
ror
ss
xchg
mov
imul
xchg
mov
test
ds
cmp
lcall
inc
push
fistps
mov
ja
or
lcall
das
ljmp
push
in
das
pop
test
push
scas
mov
in
std
push
and
inc
pop
adc
cmovb
xchg
mov
and
lds
faddp
shlb
out
sbb
std
das
inc
xchg
add
insb
je
adc
lret
mov
adc
std
and
and
mov
loop
sbb
mov
and
rcr
fs
aad
cmp
mov
cmp
mov
subb
lock
jbe
pop
inc
jno
dec
addr16
mov
push
push
bound
sbb
push
std
push
or
mov
test
xchg
push
and
outsb
jno
push
outsb
fs
jmp
jns
mov
xor
sbb
jmp
sti
fs
cmpb
xchg
xchg
js
dec
in
imul
or
push
insl
inc
scas
insl
pop
and
inc
add
inc
fmuls
pop
mov
xchg
and
pop
pop
cmp
cmp
loope
test
sbb
cmp
push
dec
push
add
jb
js,pn
xor
cmpsl
fadd
fs
jecxz
push
push
les
adc
out
arpl
xor
pushf
lock
shlb
adc
pushf
push
inc
ret
jp
xlat
roll
int
inc
xor
iret
call
movsl
jno
fnstenv
daa
cs
sub
inc
cmp
or
jno
fwait
in
arpl
jl
je
fs
jp
leave
push
fadd
cs
push
stos
bound
or
out
dec
out
jnp
cs
cmp
mov
jnp
pop
mov
jb
pusha
cmp
or
push
dec
pop
pushf
sbb
pop
jne
xor
sbb
sbb
loope
mov
das
mov
inc
and
jmp
dec
inc
cmp
jnp
jecxz
inc
sbb
addl
xchg
cld
lock
sbb
fiadds
cld
int
lods
sub
mov
adc
jae
mov
xchg
fcoms
push
andl
jecxz
or
jns
add
addb
pop
out
jg
or
mov
addb
jg
cmp
pop
push
mov
cmpsb
leave
popf
loop
fiaddl
inc
inc
xchg
mov
loope
inc
mov
sbb
popf
imul
lcall
xchg
aam
mov
push
mov
clc
lods
bound
jp
dec
int3
inc
popa
dec
sbb
inc
loop
push
lret
add
insb
ss
clc
inc
add
pop
mov
inc
pop
ret
jne
lods
sub
pop
and
jecxz
dec
mov
daa
in
in
insb
pop
push
lret
and
dec
in
out
pop
testl
fwait
sbb
mov
sahf
mov
js
jecxz
cwtl
add
push
aaa
pop
mov
sub
push
shll
loop
fisttpll
lret
pop
cmp
xchg
mov
jle
ror
loop
cs
add
out
iret
ret
jle
mov
iret
aas
js
xor
xchg
push
ljmp
add
and
push
fldcw
repnz
rorb
test
mov
loop
gs
mov
xchg
shlb
jae
jg
sbb
mov
jge
rep
mov
push
out
test
jmp
in
mov
lcall
lock
jmp
pop
mov
push
push
into
mov
push
xor
mov
jnp
sbb
xlat
add
mov
pop
lds
int3
dec
xchg
pop
popf
lret
inc
je
lret
jne
pop
js
pop
inc
adc
and
xchg
cltd
bound
int3
xor
push
imul
lock
push
xor
sub
in
xchg
cmpsb
add
dec
pushf
movsb
fmuls
sub
clc
cs
repz
nop
push
scas
je
jbe
dec
push
sub
in
cwtl
cmp
jbe
mov
adc
xor
sub
mov
push
mov
daa
ja
or
adc
in
data16
popf
in
ds
icebp
push
mov
xchg
in
xor
push
cs
imul
lret
mov
int
jae
lods
mov
stos
xchg
outsl
cs
or
inc
hlt
or
lret
push
push
fldt
inc
fists
sbb
fs
lret
xor
jns
cwtl
fdivr
or
xlat
mov
shl
outsb
test
imul
cwtl
xchg
cmp
inc
xchg
or
mulb
ss
push
cmp
mov
xor
insb
and
js
hlt
scas
mov
ds
fsub
ss
std
cmp
jne
inc
out
cwtl
sbb
mov
inc
popf
popf
pop
jl
incb
sub
fwait
dec
cmp
mov
mov
std
xchg
ja
cmp
jecxz
push
jmp
daa
mov
mov
scas
in
js
mov
jp
xchg
pop
in
pop
push
xor
inc
adc
or
movsl
sbb
rorl
arpl
jmp
pop
sahf
shll
push
mov
inc
cmp
sbb
adc
aas
xchg
jbe
xchg
pop
ficoms
sahf
cs
pop
jbe
test
jnp
sbb
pop
add
mov
dec
or
loop
stc
movsb
call
xor
sbb
leave
mov
mov
push
dec
leave
mov
xchg
and
dec
nop
sahf
pop
in
lods
mov
nop
popa
or
xchg
push
lahf
pop
pop
pop
mov
in
push
mov
fildl
pusha
pop
mov
mov
test
in
sbb
cmp
popf
test
jge
push
popa
jl
push
mov
mov
in
push
bnd
test
sbb
jl
scas
ljmp
shrb
sti
cwtl
mov
or
cwtl
pop
or
sub
les
cwtl
mov
repz
mov
ja
xchg
repnz
sbb
std
adc
nop
lods
into
lea
mov
aaa
fimull
std
decb
inc
pop
lcall
jmp
pop
dec
push
movl
js
and
jge
lea
mov
pop
pop
movsl
pusha
pop
mov
cli
inc
push
xchg
jl
mov
je
std
xchg
pop
cld
aas
popa
gs
cld
mov
ss
push
jne
and
pop
add
loopne
sub
pop
or
push
std
lahf
jle
jns
or
xchg
popa
mov
push
mov
pop
mov
push
xchg
mov
push
and
dec
out
jl
xchg
lret
leave
and
sub
lret
hlt
scas
xchg
and
scas
cs
jge
cwtl
loope
sbb
gs
inc
les
cltd
popf
xor
mov
or
inc
jne
mov
mov
sub
xor
push
rorl
maxps
in
pop
pop
pop
inc
push
jl
xchg
cwtl
pop
adc
pop
add
xchg
xor
add
add
enter
ja
sarl
mov
jl
stos
and
jmp
popf
jns
mov
lret
pop
clc
dec
xchg
pusha
inc
aam
test
xor
clc
fistl
xchg
icebp
mov
rclb
push
or
divb
push
xchg
dec
add
push
sbb
push
mov
xchg
pop
push
and
push
jns
test
das
push
or
add
call
pop
mov
cmp
jb
inc
mov
and
mov
dec
push
movsl
jo
popf
cmp
lahf
pop
dec
push
lea
fs
cli
fsts
into
stos
jo
or
dec
popf
mov
cs
push
cltd
xor
aas
cs
or
mov
dec
ds
imul
shll
imull
cltd
push
or
pop
dec
mov
xchg
adc
stc
inc
push
cmpsb
sub
shlb
or
shrb
scas
jb
pop
cli
clc
push
jns
push
jl
cmp
shlb
cmpsl
mov
inc
inc
mov
js
cmp
and
jmp
add
push
mov
ss
xchg
insb
scas
push
cli
jp
jo
cmp
mov
push
mov
iret
xor
mov
jle
push
dec
mov
sti
cmpsl
divl
push
pop
add
mov
sbb
pop
outsb
pop
call
out
fmulp
inc
jge
mov
pop
bound
jle
pop
or
iret
inc
insl
pusha
jecxz
jp
lock
dec
out
mov
ficoms
pop
aas
pop
subb
movb
xchg
adc
mov
mov
push
mov
push
inc
adc
mov
out
mov
xchg
jmp
repnz
and
xchg
dec
mov
sti
daa
xor
mov
or
push
mov
adc
adc
cmp
call
repz
pusha
jmp
dec
mov
or
pop
jne
add
adc
or
repnz
mov
lock
js
jbe
popf
adc
fs
ficoms
xchg
mov
mull
or
jecxz
cmpsb
in
fs
xor
gs
loopne
out
jae
cltd
leave
aad
mov
add
xor
call
jg
adc
repz
or
cmpsl
pushf
push
mov
scas
stos
lret
or
in
push
add
ss
test
or
jae
stc
lcall
cwtl
jmp
add
mov
mov
popf
in
sub
in
movsb
addl
mov
inc
mov
into
push
jl
jp
add
stos
push
jl
in
aad
leave
mov
dec
out
xor
fistps
icebp
adc
insb
push
hlt
inc
in
jns
xchg
mov
jns
sub
jp
mov
xchg
dec
jne
insl
and
mov
inc
ja
lcall
sbb
mov
stc
in
insl
lods
call
jg
push
stos
mov
xchg
jns
push
arpl
jl
inc
adc
inc
in
xor
xor
inc
addb
imul
aas
inc
mov
fcmovu
sub
std
and
arpl
push
std
stos
add
push
insl
fsubs
xchg
decb
sub
dec
and
mov
sbb
or
test
imul
jne
mov
jbe
shr
and
es
and
sub
jge
out
mov
icebp
stc
add
lea
add
ljmp
ja
sti
jae
xor
jns
je
or
inc
addr16
sbb
stc
sbbl
ljmp
sub
imul
jecxz
fs
and
cmp
fs
or
adc
add
mov
comiss
inc
lock
inc
mov
jbe
adc
ffreep
adc
jecxz
add
xchg
cmp
cli
repnz
sbb
and
mov
daa
adc
adc
daa
roll
mov
sub
int
les
pop
pop
xchg
push
daa
popf
mov
jmp
sbb
xchg
inc
mov
jb
fisubl
adc
mov
jb
pop
adc
mov
and
mov
out
pop
addr16
mov
test
pop
or
fsub
aam
jp
imul
sahf
out
mov
nop
jae
fsub
adc
mov
in
test
inc
mov
cli
jns
xchg
push
pop
fnstenv
sbb
in
lods
ja
xor
cmpsb
dec
push
fstl
cmp
inc
sub
and
cmpsl
cs
popa
jge
mov
mov
pop
imul
jne
pop
dec
inc
sub
xor
int
pusha
push
xor
mov
mov
xchg
xchg
sahf
dec
xchg
mov
sbb
push
and
dec
dec
addr16
jno
adc
xor
stos
adc
ret
inc
mov
sub
push
mov
nop
aam
pushf
dec
push
xchg
sub
fmull
roll
and
out
ja
ret
add
add
adc
mov
loope
or
insl
dec
sub
add
mov
dec
lahf
loope
clc
add
xchg
and
mov
cmp
repz
xchg
or
sub
sbb
fdivrl
in
icebp
outsb
ja
in
loop
xlat
cmp
sbb
arpl
xlat
addr16
outsl
mov
popf
popa
jns
xchg
push
xchg
and
clc
testl
mov
jb
scas
nop
mulb
lret
and
ret
xchg
xor
enter
push
mov
sub
aam
mov
sbb
stc
cmpsl
enter
adc
mov
jecxz
out
jp
fwait
push
fldt
je
fadd
iret
xor
mov
daa
cmp
inc
test
lods
shrb
int3
sub
addr16
out
pop
pop
pusha
xlat
out
or
dec
notl
xchg
dec
scas
lods
jle
dec
push
notl
sub
idiv
mov
loop
sbb
jb
orb
pop
arpl
pop
cmp
jns
mov
sahf
cmp
push
out
clc
pop
test
aad
lcall
jmp
pop
sahf
inc
insl
pushf
aaa
inc
xchg
or
lret
sti
mov
jo
sub
push
hlt
and
stc
aam
add
aas
dec
dec
jno
mov
push
pushf
xchg
sahf
addl
rolb
xchg
dec
icebp
inc
test
adc
xor
dec
pop
imul
imul
mov
mov
xchg
xlat
and
add
fsts
or
jae
mov
jmp
dec
or
test
cmp
inc
scas
inc
addr16
or
sub
inc
mov
and
stc
sar
movsl
dec
jle
shrb
xor
xchg
test
rcrl
pusha
shr
in
shll
shrb
loopne
cmc
adc
mov
int3
xchg
mov
mov
jecxz
jno
aaa
jb
sahf
aaa
add
jge
inc
std
xchg
sub
mov
into
stos
adc
enter
jbe
loop
or
cmp
jno
scas
call
or
in
dec
sbb
sarb
repz
std
movsb
add
fucomi
push
pop
pop
xor
mov
pop
lret
testl
adc
mov
test
push
jg
shl
mov
mov
loopew
inc
fs
addr16
sbb
stos
pushf
stc
lret
add
mov
inc
xchg
imul
pop
imulb
pop
scas
ficompl
sbb
mov
rclb
int3
sub
mov
xchg
jp
push
lcall
insb
addr16
insl
call
adc
scas
cmp
xchg
std
xchg
dec
cmp
lcall
and
outsl
mov
adc
fs
sbb
pusha
pusha
sahf
aam
in
shlb
mov
mov
sub
adc
hlt
push
faddl
push
lret
pop
jmp
and
jns
sub
pop
dec
cmc
lahf
pusha
and
repz
in
dec
cmp
das
xorl
xchg
inc
stos
pop
pop
arpl
mov
cwtl
in
inc
push
xor
push
pop
xor
sub
cmp
lret
inc
out
mov
sbb
les
fstpt
or
push
mov
in
cmp
and
fdiv
pop
shrl
sar
cld
fmull
push
and
jmp
inc
sbb
and
cmp
mov
repz
fwait
stos
dec
add
data16
fidivrl
fnstenv
push
stos
ss
int3
ja
mov
pushf
fwait
or
cwtl
mov
xor
mull
or
fcomps
mov
inc
mov
push
add
imul
mov
push
lcall
or
sub
daa
lcall
rcrb
jle
popa
imul
lret
cwtl
and
pop
in
movsl
sbb
iret
outsl
push
cmp
imul
jmp
aad
sub
mov
mov
xlat
push
xchg
arpl
outsl
adc
ljmp
inc
das
lahf
and
push
dec
ds
add
xchg
cmp
push
loope
fdivs
jae
cmp
mov
mov
pop
inc
clc
fdiv
jb
lods
mov
adc
jb
mov
cmpsb
lea
fcmovnu
mov
push
push
xacquire
inc
ret
mov
movsl
movsb
fbld
test
sbb
push
decb
jl
das
daa
mov
aas
pop
dec
cmp
add
sub
lcall
ret
push
lcall
ret
loop
hlt
push
add
fsubs
cltd
clc
ret
ret
stos
adc
cmp
cmpsb
in
idivb
stos
shr
add
mov
ja
sbb
imul
jle
or
push
sub
mov
fistps
xchg
not
fdivrl
dec
xor
cmp
jnp
les
sbb
cmpsb
xor
iret
and
cmpsl
cmp
pop
or
cltd
fistpll
ret
mov
fsubrs
cmp
dec
push
mov
jb
test
leave
sti
and
roll
out
lcall
dec
movsb
sbb
xor
sub
xlat
es
imul
jp
loopne
into
xlat
or
fiadds
xorl
jg
sbbl
xchg
push
test
xchg
jmp
pop
cmpsl
xchg
mov
rcrl
add
mov
xchg
dec
push
push
rcll
add
add
mov
orl
jns
xchg
shlb
out
clc
loopne
aad
outsl
cmpsb
dec
sub
adc
pop
lcall
lock
inc
sbb
repz
out
aam
and
mov
jge
cs
and
push
lods
jns
xchg
mov
lds
mov
movsl
push
call
and
mov
mov
jno
push
push
cmp
ss
js
xor
sub
adc
sbb
arpl
mov
ds
add
xchg
jno
xchg
pop
dec
add
loopne
cmp
and
lret
sub
add
sbb
lahf
fwait
scas
inc
push
xor
cmp
outsl
mov
push
stos
not
jmp
xchg
cld
and
xchg
cmpb
out
mov
jg
mov
loopne
and
imul
mov
or
jo
cmp
jb
cmpsl
push
mov
push
mov
ljmp
adc
cwtl
sti
mov
add
popa
icebp
cmp
sti
push
inc
scas
jno
cli
nop
jecxz
fldcw
pop
jae
add
jbe
stc
stc
mov
icebp
imul
push
jne
scas
lcall
mov
cmp
jp
push
mov
xchg
lods
cmpsb
test
cmp
inc
and
push
sti
call
lahf
add
mov
sbb
sti
push
fnstsw
xchg
sub
adc
mov
jns
inc
dec
mov
movsb
pop
xor
sub
push
js
rolb
mov
xchg
fsubrl
cld
negb
sar
lcall
or
fsts
pushf
dec
leave
fs
pop
arpl
jle
fsts
mov
fwait
test
sbb
xor
shlb
sub
les
jbe
sub
add
jge
sbb
arpl
or
movsl
xchg
roll
lret
push
xlat
mov
mov
add
inc
popf
inc
or
xchg
ret
dec
cmp
ljmp
jl
fisubrl
cmp
mov
sub
xchg
pop
mov
into
and
popa
int
pop
subl
loopne
jmp
fcompl
sahf
xchg
fiaddl
bound
inc
cmc
out
xchg
ljmp
pop
in
pop
inc
and
dec
xor
adc
add
andl
inc
mov
and
aam
inc
cs
xchg
dec
push
pop
mov
inc
inc
inc
test
jl
mov
pop
mov
or
dec
aaa
mov
jns
cmp
loop
xchg
out
mov
adc
int
pop
scas
out
and
frstor
clc
push
insb
sbb
mov
aam
aaa
aam
ror
or
mov
mov
sbb
jb
push
jb
cs
arpl
lods
aaa
insl
push
jns
xchg
add
insl
lods
mov
mov
les
push
xor
jge
hlt
lea
fldt
and
and
xchg
in
jg
adc
dec
std
inc
outsl
loopne
sbb
lods
popf
lcall
cmp
stc
addr16
clc
jae
ret
fiaddl
pop
lock
pop
pushf
push
and
lret
sahf
jle
loope
push
fstl
sahf
sti
push
popf
hlt
aas
sub
lods
scas
arpl
cmp
jp
adc
jp
cltd
pop
mov
xchg
push
out
roll
addl
mov
xchg
jae
push
ljmp
aaa
xorb
push
sbb
fnstcw
push
push
dec
push
addr16
stos
jne
mov
notb
mov
data16
incb
fisubrs
comiss
aas
cmpsb
sub
inc
test
adc
repnz
movsl
mov
push
adc
mov
fs
je
pusha
mov
int3
sbb
sbb
insl
xlat
jno
mov
mov
pop
cmp
lret
xor
xorb
xchg
pop
sub
sub
test
cs
sti
enter
push
inc
mov
movsl
ss
fldcw
aas
sarb
inc
dec
mov
lcall
movsl
lcall
pop
out
cmp
sbb
sbb
xchg
mov
sub
scas
mov
jne
pop
push
mov
or
xchg
pop
lret
notl
imul
push
cwtl
xchg
mov
push
sbb
into
cmpsl
insb
loop
mov
sub
and
lahf
mov
dec
push
loopne
jno
xlat
inc
mov
and
mov
outsb
ret
dec
or
cmpl
fists
lds
jno
adc
cmpsl
jmp
mov
ret
cmc
test
cmp
xor
pop
inc
into
jg
in
mov
mov
cwtl
popf
jl
cmp
push
pop
lea
adc
mov
sub
cmp
repz
mov
adc
aam
push
push
mov
lcall
into
popf
test
push
clc
in
sbb
rorl
out
dec
jmp
aam
arpl
lcall
push
pop
insl
xor
ljmp
and
dec
cmp
and
fwait
dec
imull
pushf
sub
nop
adc
adc
andb
sbb
test
add
loop
xor
lahf
pop
mov
dec
shlb
jmp
fsub
xor
insb
arpl
sub
mov
dec
push
xor
mov
gs
fimull
mov
fwait
lcall
stc
jbe
adc
out
fstl
mov
pop
out
xor
test
insl
add
sub
fidivs
rolb
adcb
popa
mov
hlt
mov
dec
test
inc
test
lcall
scas
mov
clc
aad
clc
mov
inc
sub
ja
pop
jo
add
aas
add
sahf
inc
es
mov
lret
loope,pn
add
leave
out
sbb
mulb
dec
add
int3
fs
cmp
in
lahf
jbe
add
adc
and
shlb
jge
call
inc
xchg
inc
sub
mov
jcxz
pusha
jle
aad
aas
pop
sub
inc
jle
and
ret
sti
imul
mov
jg
rorb
jmp
dec
ljmp
inc
pop
gs
std
mov
push
jge
stos
add
mov
movsb
fidivrl
rcl
mov
mov
xor
popa
inc
aad
sti
stos
mov
pop
orl
mov
push
add
lock
pop
push
mov
mov
and
xor
popa
pop
jp
out
mov
pop
in
insb
mov
out
cmp
sub
gs
cli
pop
inc
mov
push
sub
or
test
cs
cmp
sti
lea
sub
in
adc
mov
jo
fwait
mov
lahf
sub
mov
cld
xchg
icebp
insb
nop
and
fstpl
cs
xor
enter
push
dec
dec
xchg
or
jns
clc
fisubs
ja
sahf
mov
push
jmp
inc
xor
mov
insb
std
lahf
lea
mov
in
data16
sbb
imul
xchg
fwait
icebp
gs
push
cmpsb
popf
add
xchg
test
sbb
and
jae
xor
jnp
filds
out
push
call
out
pop
dec
lock
ffree
push
inc
inc
mov
pop
insl
dec
adc
dec
jecxz
mov
inc
sbb
js
push
mov
adc
xchg
cli
mov
add
mov
push
mov
stc
sub
cmp
add
push
cmpsb
lock
lcall
pop
xchg
fcomip
mov
fwait
jae
call
ljmp
xchg
adc
aam
cmc
or
add
scas
cltd
xchg
es
push
frndint
cmp
jno
mov
sti
inc
add
sarb
divl
sub
mov
jo
std
ror
pop
jo
fimuls
fwait
hlt
std
jb
daa
xchg
repnz
inc
dec
gs
pop
pop
idivl
leave
mov
cmp
xchg
insl
inc
lods
adc
repz
jae
lcall
jle
jecxz
scas
test
dec
insl
xchg
lret
pop
ret
add
loope
push
pop
aaa
inc
cmp
or
push
dec
xchg
mov
inc
cmpsb
xor
repz
and
xor
sub
push
out
frstor
dec
sub
rol
call
xchg
daa
mov
sub
xchg
ss
push
cmp
or
mov
mov
outsl
popa
add
rorb
inc
mov
add
cmpsl
dec
xchg
sub
stc
int
or
mov
and
ja
mov
ret
scas
and
sbb
mov
xlat
daa
jmp
lea
outsl
add
jmp
push
push
out
les
into
inc
jg
fdivl
cmc
pop
loop
fadds
and
ljmp
das
sbbb
adc
xchg
out
pop
enter
pop
aad
lahf
or
cwtl
inc
mov
push
jecxz
nop
arpl
add
fnstcw
cmp
xlat
dec
jmp
jle
loop
add
cmp
jp
movsl
sbb
push
leave
fimuls
add
loope
les
cmp
ds
or
int3
loopne
inc
setns
jne
sub
push
mov
mov
lcall
in
jne
nop
data16
xchg
push
mov
sbb
xor
lret
sbb
sbb
lock
and
lcall
ja
cli
mov
adc
push
lret
xor
bound
sti
ja
xchg
cmp
js
sahf
clc
ret
shrl
mov
in
and
pop
testl
frstor
cmp
adc
gs
cmp
arpl
inc
andb
sbb
stc
fsubr
aaa
and
cmp
xchg
loopne
xchg
ljmp
mov
mov
and
xor
imul
or
jns
iret
mov
xor
test
iret
push
jmp
xor
or
lahf
inc
inc
cmpsb
cli
dec
cld
repnz
lahf
mov
cmpsb
sub
add
movsl
cmc
aam
xchg
pop
mov
xor
mov
notb
mov
rol
repz
or
in
mov
push
push
and
clc
shl
js
dec
dec
pusha
pop
push
sbb
pop
xchg
and
pop
pop
adc
and
jecxz
mov
popa
fistpll
das
inc
pop
jne
movsl
fs
jle
arpl
idivl
out
adc
sysexit
pop
orl
sahf
cmp
gs
inc
xor
cmp
sub
aad
pop
push
inc
cltd
inc
lea
or
inc
add
iret
jb
stos
mov
mov
sbb
out
cmc
ss
repnz
sub
fidivs
clc
lea
mov
mov
pusha
adc
iret
movsl
mov
dec
dec
jmp
adc
lcall
cmp
dec
shl
dec
test
shrl
loop
cs
daa
dec
push
cs
loop
push
lods
pop
xor
pop
int
mov
add
xor
mov
lea
loope
or
into
dec
lret
cmp
mov
in
fstpl
fcmovnb
popa
into
dec
lods
stos
jno
push
mov
push
mov
int3
cmc
cli
ret
xchg
daa
add
jae
and
in
mov
cmp
int
jns
push
mov
in
in
inc
xor
xor
mov
jp
add
lods
mov
sub
sbb
inc
dec
push
test
mov
cmp
shrl
bound
xchg
and
sbb
dec
sbb
int3
mov
arpl
jl
adc
xchg
in
adc
inc
add
inc
or
dec
insb
loope
ficoml
cmp
and
push
in
xor
roll
sbb
jns
mov
cmpsb
pop
sub
lret
dec
icebp
aaa
stos
rol
movsb
mov
imul
mov
repz
clc
lea
xor
pop
ret
pop
push
lods
adc
nop
xchg
test
fsubrp
movsb
push
movsl
and
pop
das
adc
sbb
fwait
push
loope
or
pop
fnsave
leave
icebp
leave
into
sub
dec
pop
dec
jns
je
mov
jno
adc
xor
cmpsl
stos
out
or
pop
add
shlb
lock
dec
pop
stos
mov
mov
mov
scas
fimull
nop
out
es
mov
mov
sub
enter
xchg
cwtl
pop
lock
test
pop
int3
or
cmpsl
andl
push
sub
jnp
scas
popf
mov
clc
pop
fcoml
gs
jl
push
mov
jp
jnp
jbe
cmp
push
cli
mov
pop
pusha
lods
and
adc
jbe
mov
cltd
rorb
mov
cwtl
add
pop
sarl
fs
adc
std
jne
and
dec
dec
push
es
pop
dec
lods
push
imul
loopne
jae
cmpsb
jg
cmpsl
fcompl
jl
xchg
enter
push
mov
ret
sub
fs
jmp
shlb
pop
pop
iret
leave
ss
xor
pop
mov
and
lds
pop
dec
ret
out
or
ret
xchg
mov
mov
sub
aam
cli
adc
mov
xchg
pop
jne
cmpsb
imul
adc
sahf
insb
mov
int
jb
stos
xor
int3
je
cmp
scas
cmp
icebp
out
iret
loope
dec
scas
addr16
lock
push
dec
dec
mov
adc
sarb
mov
in
in
mov
jae
stos
fpatan
jbe
jle
inc
mov
add
scas
outsl
sbb
in
bound
push
cltd
inc
pop
dec
or
dec
test
mov
es
and
stos
loope
push
int3
jg
ja
xlat
dec
shll
nop
icebp
jg
movsl
dec
inc
js
push
adc
test
test
xlat
sti
shlb
push
je
cwtl
pop
fnstcw
jne
and
ret
push
lcall
lret
stc
cmpl
jnp
push
mov
adc
sub
dec
xchg
pusha
es
lea
jae
mov
jecxz
scas
pop
mov
repz
jnp
sub
mov
and
push
mov
jl
sarb
mov
por
loopne
adc
jge
ret
lods
jns
add
pushf
pop
test
push
jb
mov
or
clc
loopne
dec
fisubs
stos
mov
cwtl
int
xchg
cmp
xor
fstp
cmp
mov
out
fdivrp
add
out
fldenv
push
aad
sarl
les
fldl
mov
sbb
out
mov
and
addb
les
lret
sbb
into
mov
push
xchg
sub
xchg
les
inc
and
cmp
xchg
popf
lea
testl
pop
mov
cltd
scas
xlat
jg
je
pusha
int3
pop
stos
pusha
and
lret
idivl
and
sub
mov
mov
cmp
push
xor
xchg
xchg
jno
mov
imul
into
push
mov
cwtl
jbe
jmp
sti
dec
leave
jp
mov
mov
xchg
jns
int
sarb
lock
mov
ljmp
or
or
into
adc
clc
push
rcr
dec
int
aam
jbe
bound
cs
frstpm(287
cmpsl
xor
and
ret
push
and
stos
and
lds
mov
test
stc
mov
mov
or
repz
test
and
xchg
in
nop
hlt
sub
dec
mov
outsl
jae
jbe
cld
test
leave
and
cltd
lock
es
mov
or
sub
jmp
mov
in
push
sti
push
mov
cwtl
loopne
shl
inc
cmp
faddp
outsl
dec
leave
ret
xchg
movsl
fnsave
lock
mov
in
jmp
and
lods
dec
mov
push
mov
jg
push
repnz
test
out
popf
fcmovnu
jns
adc
inc
shl
adc
mov
xchg
sbb
push
xchg
mov
daa
sbb
add
xor
adc
movsl
cmp
push
jo
dec
pop
push
lock
and
cwtl
lds
pop
pushf
inc
push
xor
or
mov
xor
xchg
cli
jbe
inc
popa
inc
lds
mov
les
mov
pop
leave
cmp
cmpsl
mov
mov
iret
sarl
mov
pushf
add
mov
mov
adc
sbb
js
cli
xor
xor
add
aam
add
push
cmp
add
jge
daa
ss
rolb
test
out
and
lret
dec
pop
mov
jnp
jp
push
cmp
cmp
into
lahf
cli
aam
mov
cli
aas
shll
sti
insb
ret
in
mov
cmp
xchg
nop
mov
sbbb
cmp
mov
sarb
outsb
outsl
loop
pop
mov
jo
pop
pop
repz
ret
cli
idiv
dec
dec
push
sets
aam
jno
inc
mulb
cmpsb
jbe
mov
out
push
ss
adc
mov
stc
xchg
sbb
jo
mov
xor
pop
cmpsb
out
scas
xchg
ss
dec
in
mov
mov
jae
stc
imul
or
and
out
push
setge
jmp
test
sbb
sub
push
xchg
pop
or
mov
push
fwait
jg
inc
fisttpll
xor
int3
popf
fists
sub
sbb
jmp
fsubrp
shl
lret
jecxz
loopne
add
mov
dec
lea
mov
mov
xor
xchg
popa
push
clc
mov
sarl
pushl
mov
push
test
dec
mov
outsl
sahf
into
dec
repnz
mov
mov
mov
cmp
pushf
cmp
xchg
mov
sub
jmp
xchg
xor
pop
andb
jl
gs
mov
sarl
jnp
int3
pop
loopne
or
adc
lret
mov
xchg
bound
lahf
arpl
je
int3
sbb
mov
in
push
mov
mov
in
test
dec
aaa
in
lret
lret
push
in
pop
lds
xor
notl
lcall
jmp
in
sbb
fiadds
pop
inc
cli
dec
pop
fs
xor
leave
sub
adc
sub
ficomps
sahf
loopne
pavgb
lock
icebp
sbb
gs
cmp
out
push
aam
jecxz
mov
sub
mov
test
mov
adc
xlat
shll
pop
loopne
sti
ljmp
mov
xchg
fs
mov
mov
jo
ds
lcall
adc
mov
enter
or
push
insl
mov
sbb
sbb
xchg
shll
outsl
pop
outsl
add
jno
orb
dec
adc
pop
mov
xchg
and
xchg
gs
mov
ss
cld
loope
loope
cmp
ss
call
mov
cltd
lea
sub
mov
pop
cld
dec
cmpb
addb
js
mov
aam
mov
pop
jle
imul
sbb
dec
xchg
outsl
rcr
xchg
inc
push
jo
out
in
imul
insl
loop
daa
pop
pop
popf
stc
cmc
jl
dec
jg
adc
adc
sbb
push
aas
stc
out
xchg
jne
imul
mov
popa
test
and
mov
push
aas
or
pop
or
jne
pusha
sbb
in
int3
mov
jne
outsl
sarl
push
bound
jno
cmc
xor
jb
mov
add
mov
in
adc
cmpsb
ret
arpl
xchg
lret
xor
addb
jg
xor
pop
pop
or
in
pop
dec
and
dec
in
and
push
adc
pop
ret
jge
les
testb
dec
lea
out
pop
cmp
aad
ljmp
push
stos
pop
test
add
sbb
xor
mov
movsl
jecxz
je
cmp
lods
push
add
mov
outsl
mov
out
insl
mov
ficomps
lcall
cmp
sbb
idivl
movsl
les
mov
ds
sub
xchg
and
xor
inc
outsl
mov
pop
pop
mov
sub
cmp
loop
dec
nop
xor
sub
hlt
shll
sbb
sub
mov
testb
lahf
pop
es
pop
xor
rsm
push
pop
mov
mov
adc
into
rcrb
xchg
jle
cmp
int
xor
push
out
inc
rcrb
and
mov
lret
or
les
pushf
loopne
arpl
pop
dec
mov
test
xchg
inc
inc
mov
shrl
cvtps2pi
sub
jbe
xor
add
and
push
imul
ljmp
fld
jo
push
cmc
enter
les
and
dec
test
lahf
std
ljmp
pop
jg
mov
xor
fcoml
clc
std
xor
sti
imul
xchg
jmp
pop
xchg
in
adc
fdivl
pop
mov
jne
jg
stc
cmp
inc
repnz
sub
loop
xor
xchg
sbb
aad
xlat
mov
lcall
dec
xchg
lcallw
fwait
cli
mov
jge
fdiv
cmp
jne
mov
loop
and
jmp
push
sub
xchg
push
jge
aaa
mov
adcb
or
cmp
inc
pop
and
nop
xchg
stc
pop
mov
sar
in
das
fsubrs
mov
add
cmp
insl
scas
shll
out
xlat
repnz
xchg
push
dec
jl
clc
rol
or
pop
pop
sub
sti
xchg
fisttps
mov
cwtl
jmp
pop
inc
add
lea
imul
lock
adc
mov
sub
mov
push
jle
imul
xchg
cld
or
movb
sbb
xor
jg
sub
sub
or
push
dec
or
out
jmp
xor
push
inc
in
dec
mov
repnz
inc
or
push
dec
stc
ja
or
jno
in
sahf
stos
sub
pop
fstl
and
aam
dec
movsl
pop
sbb
fimull
cmpl
pop
in
jecxz
xchg
mov
mov
pop
adc
mov
xchg
mulb
je
inc
dec
dec
mov
call
call
inc
test
sbb
dec
mov
das
std
mov
scas
stos
jb
fidivl
add
xor
xchg
inc
into
cs
fsubrl
mov
shlb
xchg
es
push
inc
inc
bound
insl
adc
cmpsb
test
cmp
adc
loop
out
xor
out
mov
popa
repnz
fnsave
xchg
je
sahf
dec
sbb
pusha
fmuls
or
fsts
xlat
adc
jb
clc
nop
xor
sahf
mov
xchg
xor
sub
decl
js
add
push
jp
popf
cli
mov
aaa
shlb
push
xlat
lahf
cwtl
mov
add
gs
stc
mov
adc
inc
cmp
loopne
test
or
mov
push
aaa
xchg
or
mov
les
mull
lret
test
into
ficomps
dec
xor
mov
test
mov
push
les
xor
sbb
xchg
movsl
sbb
mov
xchg
mov
xchg
stos
popa
mov
jb
dec
pop
and
leave
mov
popa
pushf
loopne
mov
ds
adcl
pop
outsb
mov
out
cmp
test
xor
jecxz
push
xor
mov
lret
push
sub
jno,pt
mov
pop
and
inc
sub
or
mov
enter
xor
pop
xchg
flds
xchg
add
add
adc
adcl
mov
and
xchg
lds
test
mov
add
xor
pop
in
fisubl
jg
sti
mov
mov
loopne
sti
inc
or
sbb
mov
jge
jno
push
jp
sbb
jmp
fcmovu
sbb
out
jp
jecxz
sbb
ficoml
loope
in
cs
les
insb
scas
bound
mov
mov
fimuls
inc
nop
fucomip
sbb
jl
and
aad
arpl
inc
cli
loope
aam
imul
or
fistpll
js
idivb
sbb
fdivp
push
mov
push
test
sub
sti
pop
fldenv
lock
aad
adc
or
jb
pop
std
outsb
fs
cmc
call
push
lret
gs
jo
jne
dec
jmp
xor
aam
sbb
inc
push
sub
cmp
pop
ljmp
mov
mov
movsb
cmpsb
mov
mov
jmp
pop
xchg
jg
mov
jle
jecxz
and
gs
sub
out
mov
or
add
test
sbb
pslld
pop
add
popa
xor
pusha
add
aam
fisubl
stos
lahf
rdmsr
mov
adc
or
adc
jo
dec
xlat
in
movsb
cld
loope
sub
mov
movsb
mov
xor
and
or
mov
xchg
std
pop
insb
mov
sub
outsb
loop
out
testl
cmp
fldcw
xchg
lds
mov
or
movsl
dec
movsl
imul
gs
jg
shl
adc
sti
mov
xorb
cmp
scas
fisubl
insb
iret
mov
scas
mov
mov
ljmp
sbb
outsb
inc
mov
mov
dec
pop
and
push
rcrb
int3
ror
add
mov
je
sub
inc
popa
jmp
push
aaa
jg
or
mov
rorl
aam
mov
inc
and
insb
leave
lcall
mov
jb
mov
cmp
cmpsl
jp
sub
insb
sub
jns
outsb
or
cmc
adc
xor
imul
in
xchg
je
push
xchg
adc
xchg
jno
mov
insl
js
and
push
shr
cmc
ljmp
out
and
or
arpl
jno
movsl
and
mov
mov
call
rolb
adc
hlt
enter
call
or
int
push
cltd
aam
jo
cmc
lahf
cwtl
pop
mov
sub
cmp
sub
pop
mov
jns,pn
loopne
push
mov
cmp
add
or
xchg
inc
nop
loopne
mov
stc
jnp
btr
push
lds
push
rorb
xchg
leave
xchg
xor
gs
je
fidivrl
jno
or
push
shll
mov
lret
push
testb
inc
adc
add
adc
dec
xor
lcall
ret
push
lods
add
xchg
inc
cmpsb
add
sub
mov
dec
sahf
sbb
lcall
shr
aad
mov
fildl
xor
rcrb
es
aas
mov
mov
sbb
pop
lods
pusha
push
mov
stos
dec
test
push
dec
pop
fdivs
in
mov
mov
pop
test
dec
push
dec
dec
cmc
mov
icebp
stc
and
inc
loopne
mov
out
loopne
push
lret
push
mov
mov
out
dec
loopne
enter
sahf
and
enter
xor
cmp
lds
stc
lahf
mov
jle
in
jae
cli
ror
adc
sbb
bnd
mov
clc
mov
test
aaa
je
jne
and
xor
es
inc
jno
ja
or
xor
stos
es
test
xchg
sbb
mov
std
loop
pop
fdivl
ret
sub
push
sub
cs
mov
push
pop
sbb
cltd
inc
push
pop
sbb
gs
mov
ljmp
mov
push
mov
ja
xlat
jmp
cli
mov
mov
lds
xor
sbb
cmc
fcmovnu
mov
daa
fistpll
mov
ljmp
gs
jbe
cmp
js
movhps
xchg
fidivrs
in
sbb
inc
clc
push
fistps
adc
mov
pop
out
xchg
sbb
enter
roll
dec
or
test
cmpsb
jle
sbbb
adc
sub
ss
sbb
jno
jle
dec
idiv
mov
into
mov
movsl
mov
out
sub
cmp
mov
mov
movsl
cmp
imul
mov
xchg
rolb
leave
dec
pusha
lods
mov
fiadds
dec
fnstenv
subb
lock
out
lcall
lods
fnsave
lahf
out
clc
shll
insb
insb
lahf
jl
push
pop
dec
leave
sbb
push
xchg
enter
dec
loope
mov
inc
and
jge
pop
mov
push
pop
daa
pop
fwait
push
shr
inc
adc
mov
jns
mov
movsb
stos
rorb
mov
sbb
pop
insb
pushf
push
xchg
mov
add
cmpsb
pop
inc
and
push
mov
mov
push
fnsave
call
ljmp
mov
push
adc
outsb
pop
repnz
ret
push
adc
xchg
ret
jbe
lret
adc
pop
push
inc
mov
shrl
inc
test
cmp
fistps
sbb
push
imul
lds
mov
xchg
xchg
sbb
movsb
cld
movsl
sbb
xchg
fwait
subl
sub
bound
pop
test
dec
sti
data16
in
out
sbb
sub
cmp
push
jmp
gs
xor
adc
push
or
xor
push
adc
inc
lods
sbb
sub
and
mov
cmpsb
fcomps
ficompl
add
out
and
sahf
daa
adc
mov
mov
leave
cmpsl
adc
mov
std
push
lahf
popa
nop
mov
jns
rcrb
cmovns
dec
mov
inc
xor
test
lods
mov
dec
jmp
adc
jl
add
cld
adc
nop
cmp
or
clc
cwtl
and
xor
add
xchg
push
jb
dec
add
lds
jno
lcall
cmp
inc
jo
pop
sti
adc
bound
push
adc
in
jb
mov
iret
in
xlat
leave
adc
out
cwtl
lahf
test
jno
or
addb
loopnew
mov
aam
cmp
xchg
adc
mov
in
les
jle
insl
push
fsubr
jl
mov
stos
in
dec
shr
fidivrs
lds
pop
mov
mov
icebp
lods
rol
aam
repz
sbb
out
outsb
cmp
sub
jae
push
push
mov
iret
push
dec
pop
push
sub
lret
adc
popa
cltd
dec
pop
mov
mov
and
sub
and
test
ds
sbb
sub
sub
jae
imul
pop
sub
inc
adc
sahf
xchg
mov
xchg
mov
inc
and
or
popf
ret
mov
adc
mov
leave
ja
hlt
mov
iret
cmpsb
add
popa
filds
lods
add
and
nop
stos
mov
xor
in
push
pop
sarb
cli
rcrl
scas
fldl
stos
cmp
cwtl
outsb
repz
ret
dec
pop
jmp
cwtl
imul
adc
inc
cld
mov
loopne
movsb
std
outsb
adc
popa
mov
ljmp
adc
lahf
dec
repz
xchg
out
gs
mov
mov
add
dec
mov
sbbb
fists
and
je
mov
outsl
hlt
lea
dec
addr16
addr16
scas
pop
cmpl
adcl
imulb
mov
jo
sbb
sbb
pop
sbb
loope
lahf
cs
sbbl
divl
pop
int
mov
xor
xchg
cmpl
lret
jg
xor
and
lods
les
movsl
xor
and
mov
or
in
or
mov
movsl
sub
lock
xor
outsl
mov
jp
jne
popf
sti
inc
mov
call
inc
dec
push
sarb
dec
vcvtsd2ss
dec
ret
mov
pop
push
xor
mov
push
fiadds
push
push
cmpsl
push
call
pop
mov
icebp
add
pop
mov
lock
xchg
mov
jl
lcall
push
ljmp
movsl
pop
and
outsb
test
mov
insb
int
push
dec
and
xchg
repnz
fmull
mov
sbb
mov
ja
mov
orb
adc
std
jp
mov
cmp
shr
stos
jns
sub
adc
mov
sub
js
xchg
aas
mov
popf
adc
mov
push
popa
push
int
mov
inc
leave
int
pop
shr
in
push
jecxz
iret
sbb
fbstp
test
dec
rcr
cmp
lds
pusha
add
or
pop
movsl
je
add
imulb
pop
xor
popa
jecxz
xor
pushl
clc
notl
and
push
jno
outsb
jnp
repnz
lods
sbb
sarl
ss
xchg
orb
cld
shll
mov
xor
jl
idivb
adc
adc
insl
pop
in
push
xlat
cmp
push
mov
cmpsl
jb
movsl
xor
cltd
js
ljmp
stos
dec
shlb
aas
mov
mov
pop
add
lahf
outsb
aaa
imul
test
lret
int3
aas
ficoms
lret
xchg
xor
xor
jle
daa
lods
sbb
orl
or
ficoms
inc
bound
pushf
lock
dec
aas
sub
add
cwtl
push
ret
push
repnz
and
add
repz
sub
or
out
repz
cmp
mov
andb
les
roll
cmp
and
inc
outsb
imul
jle
cltd
xchg
mov
pop
call
lcall
mov
out
cmp
mov
aad
test
jno
bnd
or
sbb
fadd
loop
sub
dec
int
cmp
dec
inc
out
pop
push
jmp
jg
xchg
cmpsb
iret
lret
cmp
loopne
mov
ds
out
stos
sub
mov
ljmp
fbld
adcb
loop
ret
hlt
adc
sahf
cli
push
pop
ret
inc
aas
jne
jno
leave
aam
adc
dec
inc
xchg
in
mov
jb
mov
sbb
mov
lea
out
dec
push
mov
push
sub
mov
data16
repnz
mov
jge
sahf
rorb
pop
loope
test
stos
and
filds
insl
ret
mov
sbb
call
gs
dec
fadds
leave
inc
mov
cmp
xchg
push
jb
in
cwtl
ja
fisttps
push
insl
loop
in
lahf
iret
xchg
jae
sbb
mov
add
adcl
and
jecxz
cmc
enter
hlt
ret
jmp
insl
cld
dec
mov
divb
xchg
add
xchg
stos
fcomps
in
xchg
cmp
pop
push
out
cs
sub
fs
mov
mov
cmp
adcb
inc
std
mov
loopne
cmpsl
jle
inc
mov
aad
addr16
pop
sub
push
hlt
jl
ret
mov
mov
xchg
into
aaa
inc
call
or
fidivs
dec
ficoms
rcrl
into
idiv
int3
xchg
jae
pop
pop
or
pop
xchg
push
test
inc
sbb
dec
btr
xlat
cwtl
pxor
jbe
andb
faddl
adc
int
inc
cmp
out
sti
icebp
out
inc
dec
in
jne
mov
mov
xor
mov
decl
sbb
loopne
dec
int3
fadds
add
push
dec
in
or
mov
fsubrs
adcb
cmp
pop
arpl
xor
xchg
enter
arpl
and
testl
rclb
pop
out
nop
movsb
dec
fiadds
fisttpll
jmp
xchg
cltd
fsub
rclb
mov
lret
sub
mov
cmpsb
mov
fucom
xchg
divb
test
popa
mov
jmp
mov
sub
subb
hlt
mov
aad
fadds
dec
repz
mov
fwait
adc
clc
xor
dec
push
push
ror
sti
js
and
xchg
mov
div
fidivl
bound
rcl
into
inc
inc
je
cmc
xchg
mov
dec
outsb
xchg
jle
addb
pop
jmp
inc
test
sbb
into
cs
or
lret
mov
dec
xchg
nop
sbb
add
xchg
cld
lret
adcl
repz
daa
mov
fadds
fstpt
xchg
push
int
xor
mov
jmp
lahf
xorl
jl
inc
nop
add
jae
dec
dec
push
adcl
push
and
out
aam
aam
or
mov
mov
scas
mov
and
bound
and
adc
pop
push
sub
xor
addb
faddp
ja
pop
loop
and
gs
mov
mov
xor
add
je
mov
addb
sahf
enter
pop
or
mov
sub
or
insl
aas
mov
inc
loope
pop
enter
adcl
sub
imull
push
sub
adc
sub
cmpsl
adc
sti
sub
and
out
jno
or
xchg
xchg
push
fadds
cmpsl
or
test
adc
adcl
add
mov
jg
lcall
mov
pop
and
in
std
ja
test
pop
xchg
adc
in
jo
into
jne
popf
push
dec
cmp
adc
out
fcmovb
mov
ja
jle
xchg
bound
sbbl
pushf
and
add
inc
std
dec
jnp
cmp
and
mulb
cmp
out
rorl
jge
mov
data16
dec
aaa
sub
jl
inc
xchg
hlt
jecxz
outsb
jbe
adc
or
xor
stos
mov
ljmp
jge
mov
cltd
in
fwait
cld
dec
xor
std
mov
or
call
aas
xchg
cwtl
jge
repnz
lds
les
in
inc
mov
popf
sti
imul
popf
iret
sbb
cld
mov
dec
popl
and
scas
out
sbb
inc
fucomi
enter
adc
mov
pop
pushf
jmp
xchg
ja
mov
mov
in
xchg
push
fwait
pushf
dec
jmp
stos
inc
or
mov
pop
test
adc
push
stos
mov
pop
imul
nop
mov
mov
js
fwait
insl
fmuls
lret
xchg
lock
xchg
mov
cmpsb
cmp
dec
or
jge
dec
pushl
fldt
lea
sub
mov
lret
movsb
es
and
lds
sbb
add
xchg
push
push
and
jp
es
xchg
or
out
jb
jb
repz
jne
mov
iret
out
push
cmp
pop
push
das
fdivrs
jno
movsb
enter
imul
fwait
sub
cmp
and
aas
and
sbb
dec
inc
jb
mov
push
xchg
sbb
fldenv
fnstsw
jl
negl
fcompl
fwait
hlt
insl
stc
lds
scas
add
cmp
pop
ja
ljmp
sub
add
fisubrl
movsl
mov
and
adc
xchg
add
cmpsb
insl
add
sar
xor
inc
mov
xor
lcall
mov
in
bound
lret
mov
adc
stc
das
icebp
aas
sahf
xchg
fnstsw
pop
cmc
test
ret
sbbl
lock
adc
xor
lret
mov
dec
mov
inc
mov
outsl
jle
rolb
je
inc
pop
push
inc
mov
ret
xorl
mov
shlb
stos
in
into
add
frstor
sahf
add
jne
daa
pop
jg
cmc
stc
push
movsb
fwait
sub
lret
cmp
lret
mov
sub
xor
shlb
push
and
cmp
dec
gs
mov
jg
test
movsb
andb
cltd
push
pop
jge
stos
test
sbb
xor
loopne
cmc
pop
push
xor
xor
or
test
cld
and
jl
jecxz
mov
dec
es
decb
inc
outsl
or
je
fildl
xchg
or
add
in
js
and
fmul
int3
iret
pop
or
shll
mov
jp
test
ljmp
outsl
and
movsb
lahf
push
fcoml
negb
sti
mov
or
fsub
mov
pop
fs
pop
xlat
stos
test
movsl
out
out
mov
pop
js
hlt
decl
rcll
mov
fisttpll
out
in
mov
cltd
mov
push
and
ja
inc
adc
fstps
xor
cmp
xchg
and
pop
lea
dec
adc
push
outsl
pop
loopne
fstps
ror
sahf
mov
ljmp
out
ret
xor
push
scas
fdivp
lea
ret
popf
xchg
aam
jg
mov
das
or
add
pop
mov
lahf
mov
in
or
imul
gs
pusha
scas
gs
xchg
inc
fwait
aad
in
or
jl
push
lods
inc
aas
popa
dec
adc
push
xlat
sbb
mov
mov
sarb
loope
stc
cltd
xchg
xchg
push
inc
mov
xor
xchg
cmp
inc
mov
mov
cltd
lods
pop
inc
add
ss
les
mov
int
fwait
std
adc
push
loopne
in
dec
and
and
shrl
sbb
rclb
push
sbb
andl
insb
sbb
sti
fisubl
rolb
movsb
out
mov
nop
xlat
push
lahf
mov
mov
xor
in
inc
push
cltd
pop
mov
push
insl
popf
out
fldt
test
mov
xor
xchg
jmp
jle
cltd
out
inc
icebp
and
faddl
aam
dec
mov
push
mov
xchg
mov
call
stos
pop
out
jg
xchg
int
sbb
clc
daa
cmc
enter
sub
dec
inc
ds
lea
jae
sbb
dec
mov
out
and
mov
inc
push
fidivl
les
push
or
sahf
clc
enter
leave
push
inc
mov
movsl
lods
iret
or
inc
xchg
inc
jecxz
xchg
fstpl
lret
fdivrs
aad
mov
movsl
in
test
aad
in
xchg
aad
and
movsl
xchg
pop
mov
andb
push
aas
addr16
movsb
decb
popa
mov
loope
pop
and
das
mov
add
xchg
cmp
or
mov
push
sub
add
sti
fsubl
adc
xor
in
adc
dec
jp
adc
xchg
sub
iret
mov
pop
pop
filds
xor
sub
adcb
add
push
inc
push
fmul
test
xor
or
leave
or
jecxz
arpl
insl
pushf
push
mov
stos
lods
jl
push
or
scas
xlat
movsb
mov
das
aaa
call
fsubrl
inc
cld
into
lock
js
mov
int
cltd
filds
pusha
add
mov
lods
mov
fcoml
push
sti
add
les
outsb
cmp
pushf
mov
fbld
mov
pop
stc
inc
das
xchg
lock
rolw
mov
xor
into
fdivs
cmp
int3
data16
loop
cmc
mov
ja
mov
mov
xor
push
xor
daa
dec
sub
pop
outsb
das
xchg
cmpsb
add
pop
test
or
xchg
rcpps
push
fisubrl
iret
cmovbe
mov
jno
or
inc
lret
dec
arpl
iret
clc
sub
stos
pop
loopne
fnstenv
and
adc
adc
arpl
mov
cld
jge
in
test
push
dec
push
ja
loopne
pop
addb
in
divl
xor
or
jmp
adc
xchg
adc
mov
ds
or
push
sti
cmpsb
hlt
mov
push
sti
dec
out
mov
mov
push
sub
test
or
xchg
pop
xchg
cmpsb
leave
pushf
jns
stc
xchg
jnp
fs
inc
dec
in
aas
push
and
jae
mov
arpl
cmc
icebp
add
and
mov
test
dec
out
jbe
inc
pop
pop
enter
sbb
dec
push
daa
mov
xchg
pop
jmp
sbb
sub
xchg
mov
cs
repz
bound
jmp
mov
int3
xchg
adc
dec
cltd
cmp
ljmp
cmp
test
jg
in
adc
rcrb
insb
xchg
inc
mov
into
data16
lahf
jge
aas
mov
push
add
sbb
push
xchg
adc
sti
orl
addr16
stos
test
stos
iret
mov
fs
aaa
pop
mov
ds
ficompl
cmpsl
clc
cmp
fsubs
pop
into
mov
sub
mov
mov
std
mov
movsb
xchg
pop
mov
mov
test
fstpl
jae
sbb
es
imul
mov
mov
or
inc
je
push
sub
pop
xchg
jge
add
jg
jmp
daa
daa
xlat
cmc
pop
inc
add
cmpsl
int
adc
mov
inc
mov
or
add
shrb
test
xchg
jno
dec
jmp
popf
adc
pop
push
pop
push
inc
popf
cwtl
xor
sub
cmp
enter
sub
cmp
mov
push
jmp
inc
popf
inc
sub
ret
mov
and
icebp
push
mov
fstpt
jg
jmp
into
inc
dec
in
xor
lret
push
jae
loop
sbb
inc
sub
mov
jo
pop
bound
out
lock
mov
int
add
push
adc
cmp
cmp
xchg
nop
shlb
pop
sbb
out
loop
pop
xchg
rcrl
sub
mov
fisubrs
fcomi
enter
mov
sub
lods
xchg
mov
cmpsb
test
mov
mov
pop
cwtl
mov
push
shrb
add
mov
cmpb
mov
or
push
clc
fistps
subb
test
adc
dec
sti
inc
adc
testb
scas
lcall
repnz
gs
jg
pop
clc
out
dec
in
cmp
sbb
cs
cmp
subb
add
and
add
insl
cli
mov
in
ret
jns
mov
movsl
in
repnz
mov
xchg
addr16
nop
mov
sarl
mov
push
aad
stc
mul
mov
xor
xor
addr16
xor
sbb
nop
lret
and
jp
pusha
jns
hlt
push
sbb
or
sbb
in
out
mov
lahf
and
jns
or
add
mov
sub
aas
mov
inc
mov
pop
lret
sarb
cmp
stc
pop
mov
shl
test
sub
xor
repnz
rorb
jb
mov
dec
pop
inc
sub
xchg
lret
xchg
sbb
scas
cmp
es
stos
sub
outsl
inc
test
inc
sub
xor
xor
or
stos
cs
call
jnp
insb
daa
jle
or
fadd
jbe
cltd
dec
decb
je
mov
add
sahf
cld
stos
and
or
dec
mov
mov
inc
clc
cmpsl
sbb
sar
cmpsb
cmp
inc
loopne
dec
xor
pop
mov
mov
dec
mov
insb
sbb
repz
gs
sti
push
pop
dec
jg
fcoms
jne
in
pop
and
push
jne
and
aaa
or
cmc
pop
arpl
inc
push
push
adcl
lcall
mov
adc
dec
cli
xchg
dec
es
adc
add
cmp
mov
jno
dec
push
jns
push
dec
test
pop
mov
cwtl
mov
mov
push
enter
inc
add
push
sbb
mov
mov
ds
add
fs
mov
lock
outsl
test
jle
dec
inc
inc
sahf
pop
add
lods
and
jo
insl
loop
in
add
sbb
adc
lods
pop
mov
out
in
sbb
and
sti
and
mov
add
movsl
pop
dec
push
xchg
jecxz
bound
cmpsl
movl
lods
cmp
sbb
dec
push
fsubrl
cmp
push
lcall
mov
push
jl
jp
sub
lret
mov
shl
add
xor
pop
mov
enter
jle
sub
sub
xchg
rcl
add
nop
nop
xchg
ret
arpl
push
push
sub
lret
mov
dec
sbb
mov
and
mov
pop
cmp
idivb
imul
jl
popf
cmp
xchg
push
lcall
pop
or
mov
ja
in
jg
jne
inc
in
jno
jecxz
mov
int
adc
lret
dec
jp
fildll
int3
imul
scas
push
es
addl
or
aad
icebp
pop
mov
leave
outsb
or
idivb
icebp
icebp
hlt
and
clc
aad
stos
cli
fwait
bnd
jo
sub
int3
out
jae
adc
mov
cmp
cltd
sbb
lods
test
xchg
xchg
stos
push
addr16
in
dec
pop
jnp
leave
inc
aaa
js
adc
mov
sbb
jb
or
aaa
test
fbld
rorb
mov
cmpl
fldcw
sub
stos
decl
mov
pop
adc
cmp
add
sbb
xchg
push
lcall
outsl
negb
lret
pop
pop
jle
fcompl
shlb
lds
sbb
inc
aaa
dec
pop
jns
sarb
sub
dec
test
jg
cmc
fisttps
fwait
fwait
out
daa
lock
pop
loope
pusha
sub
jge
imul
push
dec
adc
and
pextrw
add
xor
sub
out
mov
lret
fs
idivb
cmc
push
pop
jae
out
repz
jmp
in
push
push
inc
pop
or
gs
pop
fs
fsubp
mov
clc
push
mov
push
cs
adc
jne
scas
push
mov
cmpsb
pop
xchg
clc
int
push
in
xchg
add
leave
stos
outsl
jg
xor
lcall
prefetchw
or
leave
xor
loope
in
cwtl
or
in
clc
loop
decl
ret
dec
jmp
push
xchg
nop
push
fcomps
xlat
xchg
repz
pop
mov
dec
mov
jge
add
adc
ja
mov
pushf
ret
popa
jbe
ret
or
jl
cmpsb
cmp
mov
leave
mov
push
mov
outsb
insb
fs
jge
dec
cmp
pushf
in
daa
rdpmc
sbb
aaa
sub
out
dec
dec
dec
pop
into
movb
in
sbb
das
add
ss
and
sarl
test
out
xor
popa
aaa
mov
jle
lods
sbbl
repz
sub
ljmp
ds
sub
popf
jo
cld
mov
inc
js
lcall
mov
push
shl
pop
push
sbb
in
pop
dec
or
pop
dec
pop
ja
jg
imul
add
and
jb
aad
pushf
mov
cmp
sub
inc
sub
dec
pop
mov
loop
jno
mov
add
pop
shlw
mov
inc
inc
add
mov
in
out
es
jne
clc
xchg
cli
rorl
rorb
or
sti
gs
xlat
pushf
and
cwtl
leave
cmp
cmp
xchg
jns
or
jne
ljmp
dec
push
xchg
and
push
out
jmp
sub
pop
or
jl,pt
jbe
mov
mov
dec
push
adc
and
frstor
adcb
mov
fwait
adc
adc
fldl2t
mov
int3
data16
jo
scas
xor
les
push
xchg
fistpl
addb
in
les
ss
mov
shlb
jge
add
push
mov
addb
jnp
pop
sub
fdivp
and
imul
inc
lods
fisubs
popa
lds
push
inc
sarl
sbb
mulps
aad
pop
push
mov
cltd
jno
xor
ret
mov
adc
loopne
mov
mov
jne
les
jns
pop
push
pop
xchg
inc
jl
rclb
add
xor
xorb
push
dec
mov
mov
nop
std
lea
and
js
and
outsl
xchg
inc
pop
in
dec
pop
adc
mov
testb
sarl
rorb
dec
mov
das
push
or
stc
imul
out
aam
push
adc
mov
mov
dec
enter
dec
fnstcw
push
dec
cs
jmp
std
mov
rcll
sbb
push
or
and
xor
mov
pop
and
mov
cmp
les
ljmp
subl
lcall
loope
inc
xchg
lret
in
pushf
sbb
inc
mov
stos
out
jb
sub
lcall
inc
inc
lods
add
stos
js
xor
pop
dec
hlt
popf
pop
mov
or
inc
or
dec
popa
mov
xchg
nop
lods
inc
add
mov
jns
and
and
rorl
in
clc
stos
out
loopne
jmp
aam
sbb
in
in
stos
jl
fcoml
insl
mov
xorl
stos
mov
inc
jne
or
jnp
sub
jmp
or
jecxz
xchg
out
ror
mov
les
jge
dec
cmpl
popf
adc
adc
xor
sbb
fwait
sub
inc
add
ds
jge
dec
and
xchg
adc
push
test
ret
ret
mov
testb
sarl
dec
aam
aas
cmc
cmc
out
call
adc
lcall
mov
imul
inc
test
adc
xor
jg
mov
cld
push
into
mov
negl
repz
sub
or
cmp
inc
mov
and
or
mov
in
add
push
jp
or
pop
gs
sbb
sub
icebp
aas
sbb
ljmp
lret
mov
cltd
cwtl
mov
popa
cmpsl
ror
inc
pop
and
mov
jbe
pop
aam
adc
aad
es
sub
jne
sub
call
stos
push
or
push
jmp
call
or
data16
jno
rolb
jbe
test
mov
leave
and
sub
test
or
test
jg
xor
jae
or
lret
jge
cmp
fistpll
adc
loope
test
lods
xor
jne
jae
in
fcmovnbe
mov
addr16
sbb
insb
fistpl
pop
popf
push
fbld
xor
test
add
popf
outsb
and
mull
sub
jno
push
dec
xchg
jne
add
mov
jmp
inc
test
out
xor
shlb
sub
fimull
stos
jne
outsl
sbb
pop
add
test
lret
or
adc
scas
mov
rcrb
sbb
call
test
xchg
mov
icebp
pop
add
jno
fs
ljmp
scas
xchg
std
cmp
std
pop
mov
ljmp
sbb
push
or
cmc
xor
mov
and
ficoms
dec
inc
mov
fs
cmp
aam
in
cmp
xchg
and
in
stos
push
push
faddl
in
pop
dec
fnstenv
dec
lock
xlat
jge
xchg
adc
pusha
xor
loopne
inc
jne
add
or
pop
je
xor
mov
sbb
pop
cmp
jnp
andb
imul
hlt
stos
adc
sbb
stos
pop
jne
xchg
xlat
sbb
test
sahf
imul
cmpsb
xor
lea
movsl
iret
pop
orl
js
out
cmpsb
adcb
es
lds
pop
insl
xor
stos
push
enter
jb
pusha
lahf
dec
jl
or
jge
mov
dec
xchg
loop
nop
jge
add
testl
gs
daa
push
shlb
xchg
and
cmp
and
push
stos
insl
push
cmc
inc
divb
int3
call
stos
mov
pop
clc
in
xchg
out
test
sub
fsubr
rcrb
add
test
jmp
movsb
icebp
mov
pop
out
jnp
xchg
jo
sbb
mov
mov
sti
jmp
testb
mov
loopne
pop
scas
dec
mov
pop
mov
je
sub
jnp
add
js
sub
sbbl
popf
inc
push
push
mov
push
dec
stos
jne
or
push
lds
ffreep
jp
fisubrl
xchg
into
arpl
ror
lcall
cmp
mov
loopne
xorl
lds
adc
and
mov
jmp
std
cmp
push
popa
cmp
outsl
inc
mov
pop
mov
mov
cs
subl
nop
lret
xchg
rcll
stos
loop
andl
adc
arpl
jmp
out
jnp
stc
call
je
jp
and
or
ss
dec
dec
movsl
xchg
add
in
jp
jge
in
and
fsubrp
sub
jge
adc
and
out
pop
add
es
lahf
mov
add
jbe
and
dec
test
xor
iret
sahf
jg
inc
hlt
out
in
rcr
add
push
cli
mov
lods
fsubs
icebp
cli
mov
je
out
js
mov
mov
xor
cli
xor
lock
ret
jo
je
loopne
popf
iret
mov
arpl
add
cmp
push
fisubrs
mov
adc
mov
cmpsl
inc
add
jno
pop
inc
mov
into
sub
push
cs
lret
in
fidivl
cmp
or
inc
jo
pop
mov
shlb
pop
add
outsl
adc
in
xchg
sub
das
sub
jae
pop
ds
in
bound
adc
test
jle
xor
add
pop
sbb
dec
stos
lock
aad
lret
sahf
lods
sub
xor
push
push
jno
mov
stos
mov
stc
push
mov
pop
mov
mov
mov
xchg
aad
in
cmp
hlt
cld
icebp
sbb
sbb
inc
xor
ret
and
cld
outsb
pop
jns
cmp
mov
inc
pop
jmp
out
mov
es
cmp
xchg
lock
push
je
xor
jno
cwtl
adc
pop
mov
mov
lds
and
sbb
inc
int
dec
mov
add
lcall
cmpsb
cmp
dec
pop
mov
jnp
notb
mov
sbb
dec
pop
mov
insl
pop
dec
lock
fmuls
lcall
xchg
in
fwait
or
scas
and
in
sub
pushf
xchg
iret
or
xchg
push
cmp
adc
push
xchg
repz
test
push
loope
sub
cmp
out
lods
mov
loopne
sbb
loope
xor
pop
adc
mov
and
cmp
xchg
arpl
rol
or
jne
push
mov
mov
sahf
movsb
push
mov
lcall
jb
sub
hlt
adc
and
sub
xor
popf
mov
jbe
adc
mov
pop
cli
mov
test
test
rolb
outsl
fstpl
xchg
dec
xchg
movsb
lods
movsl
dec
mov
bound
ja
xchg
cmpsl
xor
lret
mov
dec
dec
jns
fisttpll
ds
mov
icebp
mov
jae
cmpsb
mov
add
sub
cmp
mov
jl
lcall
xchg
out
jle
in
mov
fsts
mov
or
std
inc
and
insb
imul
lods
not
mov
lret
or
imul
addr16
nop
enter
adc
addb
mov
dec
mov
xor
in
daa
jmp
jb
mov
mov
mov
aaa
daa
and
sbb
mov
test
dec
or
bound
mov
popa
frstor
jp
mov
pop
ljmp
mov
xor
xchg
stos
inc
icebp
pop
jle
xchg
clc
inc
jb
rcrl
imul
push
xchg
sarl
mov
inc
shr
mov
insb
scas
fwait
bnd
and
lock
add
dec
jmp
fmul
dec
out
leave
mov
pop
das
adc
cmp
cmp
mov
in
hlt
and
fwait
pop
xor
jb
add
dec
sub
rclb
xchg
cmp
sub
mov
aas
cmpsl
ret
sti
jnp
xlat
sub
xchg
adc
jb
and
pushf
or
cld
mov
out
adc
mov
inc
mov
mov
sbbb
cmp
stc
jp
lcall
movsb
xor
xchg
pop
xchg
mov
ja
aad
icebp
xchg
fucomp
push
cmp
movb
outsl
dec
cwtl
into
lds
pusha
nop
in
adc
mov
hlt
cmp
imul
std
aas
jecxz
into
sbb
or
adc
pop
jae
mov
test
test
jle
into
loopne
add
jns
insl
out
stos
ja
aam
int
test
and
push
or
push
addr16
jl
adc
jge
adc
addr16
and
aaa
jb
mov
pop
aad
mov
and
outsl
cmp
xor
stc
pop
push
stc
push
add
jo
aam
dec
std
pop
mov
fnstcw
add
std
cwtl
rep
pop
xchg
ret
fsts
jo
addr16
cli
pop
jae
add
push
mov
ficompl
adc
or
push
dec
call
arpl
push
xor
hlt
ljmp
imul
xchg
pop
popf
xchg
lds
aas
jb,pt
xchg
aad
mov
jno
out
jmp
imul
out
cmpxchg
or
push
jns
leave
fs
ja
pop
xor
push
out
xor
sbb
xchg
cs
out
in
decb
and
mov
xor
jnp
add
and
xchg
inc
dec
out
insb
rcr
mov
clc
mov
fildll
ja
and
aas
imul
xor
dec
stos
je
rcrb
pushf
into
mov
call
xorl
mov
cmp
loopne
dec
xor
ret
and
daa
idivl
pusha
push
adc
hlt
mov
jno
cmp
xchg
add
hlt
lods
in
bound
aam
scas
fbld
jle
lock
mov
stos
std
xor
pcmpeqb
lahf
dec
push
imul
xor
negl
cwtl
inc
mov
push
xchg
dec
dec
arpl
pop
in
ret
cwtl
xchg
gs
incb
add
xor
test
fxch
test
adc
mov
cs
in
into
push
loop
mov
sub
push
cmp
js
stos
inc
jnp
out
cli
mov
or
sbb
sbb
outsb
pop
test
das
out
jl
hlt
xor
in
and
pop
sahf
enter
or
mov
push
sub
and
add
lock
push
dec
jbe
icebp
push
test
addr16
dec
cmpsb
in
subl
xor
test
sbb
cmpsb
out
mov
or
out
cmp
pusha
es
das
xor
jp
aam
gs
pusha
mov
cmp
in
lock
mov
cltd
imul
jbe
adc
cwtl
js
andb
jp
jno
outsl
inc
divb
sub
pushf
mov
imul
stos
push
mov
ror
test
dec
ja
mov
mov
cld
nop
sub
xchg
add
jmp
pop
arpl
outsl
std
cmp
jl
lock
ficoml
xchg
popf
xchg
mov
addl
sub
leave
lock
test
lret
fwait
lock
xor
pop
movsb
cwtl
adc
aad
pushf
pop
jbe
js
call
loope
add
outsl
arpl
mov
popf
mov
icebp
ss
adc
cmpsb
cmc
cli
push
sbb
add
pop
adc
dec
and
icebp
ja
or
aas
mov
icebp
mov
or
add
fxch
popl
cmpl
jbe
xorl
cmc
pop
in
pop
pop
add
dec
sub
stos
sar
ljmp
sar
and
je
cmp
push
mov
ja
andl
adc
aas
inc
mov
push
inc
jmp
xor
add
int
into
ss
test
sbb
ja
rcll
sub
push
pop
int
popw
jmp
cmp
dec
das
push
pusha
loope
adc
pop
enter
jns
add
inc
mov
sbb
sub
pop
imul
hlt
fisubrs
fsubp
sbb
inc
sub
test
cmpsl
test
mov
adc
loopne
sbb
sub
shlb
mov
sub
mov
mov
mov
mov
stos
cmp
jg
adc
push
dec
imull
mov
cs
icebp
pop
jl
cltd
stc
les
mov
mov
jmp
inc
fisttps
pop
mov
xor
leave
jmp
mov
bound
xchg
adc
xor
mov
pop
lret
push
jbe
xchg
cli
lds
mov
cmp
sub
int
xor
cmp
and
mov
xor
jnp
sbb
mov
cmc
or
and
mov
leave
sbb
cmp
arpl
scas
xor
repnz
repnz
sbb
and
sbb
cmp
sbb
aam
hlt
test
add
ss
data16
repnz
sub
add
mov
addr16
jnp
ss
mov
xchg
pop
sbb
cmp
or
sbb
xchg
sbb
mov
es
cmp
add
push
push
mov
lds
xchg
mov
inc
or
xchg
clc
adc
sbb
xor
shl
outsb
imulb
test
imul
dec
cwtl
jo
test
cmp
sub
push
push
and
lcall
dec
clc
or
push
xchg
in
mov
jne
jge
mov
mov
mov
rcll
jp
leave
mov
push
and
dec
mov
shlb
pop
sarl
in
icebp
loope
call
sti
adc
push
dec
mov
scas
sub
xchg
call
mov
push
shlb
jno
sbb
insl
lcall
and
test
sub
dec
add
add
sub
sbb
sbb
daa
nop
mov
fldcw
mov
pop
mov
stc
mov
mov
xor
jp
outsb
cmpsb
out
mov
sub
push
dec
ret
dec
inc
inc
mov
sarl
jmp
xchg
stos
out
or
loope
mov
xor
adc
lds
imul
and
and
mov
jle
pop
aas
jo
pop
es
mov
popa
pop
dec
loopne
popa
inc
mov
jg
test
xorl
and
insb
imul
mov
adc
dec
or
push
imul
mov
pusha
in
mov
or
push
ljmp
cmc
mov
mov
roll
out
fildl
xor
lret
cwtl
and
jbe
negl
mov
mov
add
lret
out
pop
adc
das
dec
pusha
or
dec
test
cmp
cld
xchg
add
and
lcall
xor
fwait
jmp
xlat
fimull
xchg
std
ficomps
cmp
imul
mov
inc
int
test
cmpsb
ret
mov
cmp
jno
mov
sbb
fwait
call
js
xchg
push
inc
sahf
xchg
popf
sub
pop
cmp
aam
mov
insb
aas
loope
adc
push
inc
mov
mov
rolb
ret
lds
daa
pop
lock
xor
mov
cmpb
push
data16
push
and
sub
xchg
pushf
xor
adc
sahf
filds
jae
jmp
orb
jl
es
testl
push
or
adc
maskmovq
notl
scas
nop
aad
nop
mov
loope
jne
mov
rcr
or
and
xlat
daa
push
sbb
add
push
cmpsb
popf
push
add
popf
cltd
mov
or
push
in
popa
jecxz
inc
add
adc
mov
test
push
adc
jg
mov
inc
pop
add
data16
and
mov
subl
test
inc
pop
jp
add
jnp
addr16
ljmp
scas
in
fsubrl
lea
ja
or
stc
outsl
mov
dec
cld
jl
jl
inc
nop
mov
enter
pop
js
xchg
cwtl
adc
cmp
orb
sub
cmp
mov
add
fiaddl
cmp
cld
pop
push
push
sti
fsubrl
jnp
insl
movsl
and
add
dec
nop
xchg
mov
fmulp
fcomp
sub
imul
push
aam
fsubrp
sub
enter
aas
jo
mov
jns
pop
fisubrl
cwtl
decl
notb
aad
pop
outsl
movsl
push
pop
cmp
pop
imul
fcomi
inc
stos
test
inc
arpl
sub
push
pop
adcl
inc
fcomps
les
cmp
lret
rcl
addl
pop
movsl
xchg
xchg
sbb
clc
or
pop
stos
shrb
loop
dec
cmp
test
ja
cld
push
cwtl
push
ret
mov
mov
xor
dec
jno
dec
popa
xchg
dec
push
cmp
xor
jae
mov
inc
popf
shrl
cwtl
sbb
xchg
cmp
sti
jp
push
inc
outsl
inc
fildl
aam
test
icebp
in
ljmp
ljmp
arpl
mov
movsl
mov
fsin
unpcklps
gs
or
mov
cmp
mov
sub
mov
cmpsl
shll
lret
mov
and
ret
mov
jnp
mul
data16
ljmp
outsl
out
aas
mov
pop
xchg
shrb
xchg
insb
inc
fmull
adc
clc
lods
inc
pop
or
fcomi
into
jge
jo
lcall
sbb
inc
in
sbbl
pop
movsb
in
out
mov
repnz
pop
push
jp
pop
popa
or
inc
fcmove
not
inc
inc
fxch
pushf
dec
pop
jae
stos
xor
cwtl
cli
xchg
sar
dec
xor
mov
pop
fs
pop
lods
sbbb
int3
push
sbb
pop
adcb
rcrb
fnstsw
add
jb
stos
inc
jmp
mov
or
lret
mov
fs
adc
push
cmp
loop
sbb
pushf
adc
or
repnz
mov
cltd
repz
loop
mov
xor
and
mov
xchg
hlt
or
sub
mov
dec
sub
dec
and
xchg
das
mov
lahf
jge
push
mov
sbb
mov
jo
cmpsb
push
pop
mov
xchg
mov
cltd
in
scas
stos
lret
fwait
and
movsb
cmp
push
test
xlat
aaa
in
mov
inc
adc
stos
jno
xor
add
data16
sbb
mov
fdivrl
pop
nop
jl
dec
shrl
xchg
adc
pop
out
bound
cltd
and
fcomps
int3
and
mov
add
mov
les
push
add
lods
jnp
push
std
add
fldenv
inc
cld
mov
dec
sti
stc
cmp
mov
sub
stos
adc
mov
xchg
cltd
int3
mov
and
popa
and
dec
outsb
xor
subl
mov
insb
mov
or
dec
inc
in
xchg
popa
cmp
mov
test
sub
shrl
pop
loopne
add
add
fistl
mov
rolb
push
insl
cmp
outsl
mov
imul
mov
add
add
mov
dec
divl
mov
lahf
call
and
lret
jb
arpl
daa
and
mov
nop
aam
nop
inc
imul
idivb
inc
stos
adc
pusha
call
mov
pop
pop
sbb
fwait
and
pop
adc
fdivrp
add
lods
mulb
das
dec
jp
loope
dec
das
pop
cmp
mov
pop
adc
jno
cld
add
test
mov
jl
inc
cmpsb
shl
sub
in
call
xchg
testb
pop
dec
mov
in
xor
pusha
jns
in
pop
mov
xchg
xor
jg
shrl
add
fs
sbb
inc
pop
stc
push
sar
in
fsub
and
fcomps
pop
lret
cli
sub
pop
icebp
jl
or
dec
pop
ret
hlt
cmp
sbb
sti
cmp
xchg
mov
dec
or
lret
adc
jnp
push
decl
icebp
xchg
inc
incl
add
lret
rcll
sti
mov
xchg
bound
jl
movsb
cmp
ret
fldpi
mov
mov
adc
push
inc
scas
cld
and
sarl
xor
push
lods
dec
jmp
pop
aad
les
sarb
hlt
int3
insl
daa
lret
dec
lods
in
jl
fld
push
sarl
in
out
popf
das
aam
fstpt
arpl
pusha
push
add
mov
rcl
mov
daa
fsubs
jbe
iret
inc
hlt
and
mov
test
sbb
jle
notb
popf
mov
jae
sub
fadds
rorl
int
ret
aas
dec
call
dec
subb
cld
add
mov
lea
mov
out
cmc
mov
in
inc
sub
movsl
push
jmp
je,pn
push
cltd
stc
mov
inc
out
inc
jo
cmp
ret
adc
nop
fisttps
push
jmp
test
mov
out
push
and
leave
lahf
stos
cs
cmpsl
sub
sub
ret
or
mov
or
outsb
cmp
ss
jp
xchg
mov
jge
and
out
push
cwtl
sub
pop
repnz
or
in
out
lret
insb
rcr
data16
repnz
add
xchg
int3
mov
mov
enter
rclb
mov
test
aad
in
repnz
xor
xor
in
scas
mov
icebp
push
xor
sbb
mov
lods
cld
or
sbb
imul
aad
lds
fistpl
pop
inc
pop
jo
dec
lret
popw
sbb
rclb
jnp
fmull
mov
gs
push
cmp
sub
daa
jae
cwtl
addr16
lret
clc
sbb
mov
xchg
pop
mov
loop
repnz
fstpl
pop
dec
cmp
fnstsw
mov
mov
cld
scas
pop
and
hlt
xorb
cmpsb
insl
adc
jno
ficomps
jns
add
pop
push
das
push
xchg
xchg
dec
imul
cmpsl
sub
pop
lock
and
xchg
mov
out
mov
adc
cmp
cmc
es
mov
cmc
cmp
sti
jle
sbb
cmc
mov
lea
push
push
sbb
push
add
cmp
inc
and
mov
jne
xchg
pop
and
lock
inc
insb
les
loopne
jp
scas
gs
jo
clc
scas
lahf
or
add
es
mov
stc
and
mov
pop
jle
mov
cmpsl
or
mov
mov
call
mov
ss
xchg
shrl
pop
lret
mov
out
shlb
pop
out
mov
mov
dec
call
lea
insb
push
dec
cltd
aas
arpl
pop
cmp
sbb
stos
fdivs
hlt
mov
push
xor
add
sbb
cmp
iret
jns
cmpsl
and
call
and
pusha
xorl
jge
sbb
xlat
pop
int3
xchg
jg
mov
fildll
addr16
sbb
lods
mov
jle
ljmp
mov
push
lret
jmp
and
lock
roll
aam
lods
int
xchg
shl
xor
outsl
inc
push
inc
add
ss
sbb
mov
push
xor
adc
push
out
in
mov
sti
stc
adc
xchg
mov
fildll
adc
dec
mov
test
lcall
dec
out
push
into
pop
inc
in
popa
repz
inc
fsubrs
xchg
jmp
cmpsl
cmc
out
testl
sub
lock
sub
jo
xchg
iret
in
dec
xor
ljmp
in
xchg
xor
out
xor
rcrl
add
add
pause
in
lods
nop
stos
fwait
scas
mov
cmp
mov
mov
sbb
mov
and
clc
xlat
dec
push
mov
test
scas
mov
pop
pop
and
xchg
pop
lds
add
xchg
out
ja
in
inc
imul
xchg
es
out
js
pop
jnp
movb
loopne
lods
xchg
lea
cmp
mov
dec
mov
inc
aas
mov
xchg
pop
sbb
loope
lahf
aas
mov
mov
sub
xchg
shll
or
imul
fcmovbe
push
jns
loop
adc
lahf
loope
test
mov
mov
jle
or
aad
xchg
lret
xor
mov
in
add
sub
and
pushf
mov
or
ds
mov
push
inc
jmp
jecxz
jne
lods
roll
push
loopne
icebp
mov
mov
add
sbb
jmp
pop
cwtl
xlat
mov
inc
sub
lods
enter
out
pop
sarb
movsl
out
sub
push
gs
out
add
outsl
push
popl
sub
in
out
mov
cmp
and
sub
rcll
icebp
cli
xchg
cmp
jno
fwait
icebp
sub
and
mov
aaa
negb
out
mov
inc
pop
xor
lret
adc
cmp
and
xchg
jno
dec
negl
and
jne
cmpsb
or
test
push
out
cs
ret
mov
das
jb
jg
adc
xlat
sub
bound
or
mov
xchg
dec
jno
or
enterw
mov
mov
aad
sbb
push
jl
jne
jbe
sahf
es
loope
cmpsb
cmp
or
jnp
roll
mov
arpl
test
out
sub
cmp
popl
xor
jge
push
or
rclb
insl
leave
iret
icebp
push
push
cmp
jae
sub
or
call
add
movsb
cs
subb
dec
mov
mov
lcall
sti
cmp
push
fwait
mov
or
sub
inc
jl
sub
jg
xchg
xor
jo
mov
xchg
bound
getsec
test
push
stos
and
mov
xlat
adc
push
outsl
mov
icebp
lock
testb
sbb
popl
in
pop
xchg
pushf
jb
test
pop
mov
cmc
cmc
popf
sbb
pop
ror
insb
mov
popa
popf
xchg
push
subb
mov
mov
fucomi
push
fdivs
mov
and
mov
mov
popa
adc
pop
test
xchg
pop
sub
ja
xchg
mov
jbe
clc
int
and
mov
pop
mov
loope
or
dec
inc
movb
pop
xchg
pop
jnp
dec
das
sahf
das
mov
and
lods
insb
fldcw
xchg
or
es
rcrl
test
loope
xchg
pop
repnz
pop
int
xchg
push
sahf
and
adc
xchg
mov
xchg
imul
std
sbb
inc
fwait
aas
lret
inc
jb
adc
sbb
out
pushf
stos
inc
pop
decb
pushf
rolb
cmpsl
xchg
xor
loop
sub
push
cwtl
jae
add
pop
inc
movl
out
rorb
nop
or
jl
test
add
je
nop
stos
loope,pt
sti
js
lret
jns
xor
pop
jae
sub
jge
jns
jb
test
add
stos
jae
xor
not
pop
int3
push
mov
stos
mov
mov
mov
mov
add
xor
jmp
or
xchg
mov
mov
in
dec
mov
and
call
mov
movsb
mov
stc
mov
lcall
adc
jne
xor
push
rcr
pop
lret
jae
add
js
andb
jnp
add
andl
int
push
outsl
pop
data16
dec
sbb
ja
adc
rcrb
cmp
push
or
mov
pop
fidivrs
jo
sub
dec
ja
mov
ja
les
push
out
iret
sbb
cmp
cs
add
inc
test
dec
dec
iret
adc
mov
cmp
insl
outsb
stos
int
test
dec
push
ror
xor
lods
outsl
int3
dec
leave
js
aaa
cmp
gs
movsb
xchg
add
jo
in
pop
xchg
mov
adc
bnd
push
stos
ret
clc
jp
je
xchg
sti
loop
test
rorl
push
flds
push
test
nop
cmp
and
fincstp
pushf
sub
ret
mov
dec
jecxz
fs
test
loop
loop
add
je
fcompl
sbb
or
inc
inc
data16
dec
sti
into
aas
outsl
add
fs
std
sbb
mov
fs
jl
mov
lods
fs
dec
adc
daa
and
and
out
rorl
jae
gs
sbbl
push
ret
les
mov
ficomps
filds
sub
xor
mov
cmp
leave
frstor
mov
and
xor
int
je
mov
lods
inc
mov
xchg
mov
inc
sub
inc
mov
and
out
loopne
inc
mov
sbb
xor
push
adc
ds
daa
lret
cmp
dec
sti
xorb
adc
xchg
push
mov
sub
pop
mov
ret
das
addr16
sub
dec
out
mov
leave
inc
push
dec
pop
xor
sbb
popa
jl
scas
sub
test
xchg
stc
dec
xchg
mov
or
mov
icebp
jo
shl
push
jecxz
sbb
sbb
sbb
icebp
fcoml
xchg
xorl
pop
lock
mov
fnstcw
lods
movl
cmp
cmp
and
mov
pop
test
xor
sbb
inc
inc
stc
inc
popa
rcl
and
add
mov
lret
clc
cmovge
mov
cmp
jne
add
movsb
sub
pop
mov
inc
test
filds
mov
scas
out
out
push
inc
cmp
push
in
dec
adc
mov
aaa
in
pop
and
xor
out
inc
inc
dec
push
stos
sarl
mov
adc
stos
in
push
inc
and
dec
dec
cmpsb
dec
arpl
in
fisttpll
xchg
xchg
add
xorl
subb
arpl
adc
pop
pop
xor
mov
inc
fisubrs
ss
cmpsl
adc
xchg
out
sub
adc
cmc
pop
fistpll
mov
and
and
sub
insb
dec
pusha
pop
stos
cwtl
or
dec
dec
popa
scas
test
cmp
sub
sahf
aas
dec
movsl
mov
mov
jno
mov
add
xchg
dec
or
add
lds
mov
stos
add
cmp
mov
add
mov
xchg
int3
add
fwait
into
lahf
xor
sub
out
fs
data16
loop
dec
inc
cmp
nop
and
shr
mov
addr16
fucom
or
sahf
jne
sahf
loope
push
or
add
add
sub
add
mov
xchg
jo,pn
push
lea
pop
arpl
sahf
shl
out
push
ror
fidivrs
rcrb
sahf
sbb
mov
ret
js
mov
imul
jg
add
sbb
xor
sbb
ds
adc
xor
or
shlb
in
push
pop
xchg
xchg
mov
mov
mov
out
or
lret
mov
lcall
mov
mov
repnz
push
or
mov
and
pop
les
xor
cmc
loop
or
fcompl
pushl
push
adc
mov
xlat
dec
pop
pushf
push
adc
cmp
mov
lds
pop
imul
lahf
daa
stos
adc
jecxz
and
mov
outsl
xchg
insl
jl
mov
shll
dec
aad
sub
inc
sbb
out
xor
bound
mov
fsubs
test
push
ljmp
out
in
add
add
xchg
sub
imul
or
sbb
xor
insb
cmc
xorl
dec
cmpsb
mov
and
dec
imul
mov
je
stc
aad
std
or
fucom
cmp
insl
xor
cmp
dec
mov
jmp
ljmp
cmpsb
bound
test
decb
cwtl
sbb
daa
in
pop
push
xchg
add
and
ljmp
fldcw
out
sub
pop
xor
add
ja
mov
aam
adc
or
mov
cli
imul
push
neg
subl
into
mov
pop
or
jle
adc
fcomps
push
notl
jp
cwtl
jnp
loopne
fwait
nop
enter
fs
jne
or
adcb
aad
inc
test
lods
mov
das
jnp
aad
mov
pop
call
mov
push
inc
inc
sub
and
outsl
cld
leave
cmc
gs
pusha
rorb
in
int3
sub
or
sbb
pushf
rolb
aad
lcall
lahf
fiaddl
lahf
ljmp
jecxz
pop
jno
aam
scas
jmp
sbb
mov
xor
push
ljmp
sub
jae
pop
push
out
mov
xor
cli
sbb
orl
in
out
enter
mov
das
sahf
fadds
jmp
mov
dec
mov
movsb
stos
or
sti
jne
loope
jmp
sbb
push
mov
pop
or
xchg
jno
jmp
push
push
pop
repnz
cmp
adc
ds
faddl
push
in
pop
sub
mov
cmpsb
adc
xchg
xchg
sub
adc
mov
out
movsl
pop
dec
push
cli
sbb
cmp
cmp
enter
stc
fidivrs
test
sub
repnz
pop
sbb
sbb
repz
cmp
mov
pop
adc
mov
cmp
fs
iret
xchg
push
and
int3
imul
and
inc
stos
mov
pop
push
les
clc
jns
rorl
and
in
or
jecxz
ds
jns
push
jmp
daa
ret
jnp
add
scas
testb
nop
in
shll
jl
lcall
ret
mov
jg
test
jl
adc
sbb
fstpl
or
ret
repz
icebp
jp
jecxz
fisubl
lret
loop
lcall
jmp
daa
arpl
out
mov
sbb
xor
outsb
fcmovnbe
roll
ljmp
lahf
loop
cmpsb
lret
nop
dec
pop
into
xchg
lea
and
xchg
push
repz
sbb
loope
lret
mov
leave
xor
xor
addr16
sbb
rcrl
add
lods
or
cmpsl
pop
adc
subb
add
and
jg
jecxz
in
xlat
ja
mov
sbb
pusha
pop
push
enter
jecxz
jbe
ds
jbe
mov
mov
mov
movsb
and
mov
stos
hlt
cld
or
std
mov
ss
and
xchg
cs
dec
push
and
stc
mov
sbbb
lods
cmpsb
ficoml
stos
repnz
mov
dec
inc
ret
in
sbb
sub
and
push
mov
int
mov
mov
cmc
jo
lods
ficomps
fwait
out
cmc
adc
stos
roll
add
cmpsb
in
sbb
inc
pop
xchg
push
xor
or
and
dec
push
arpl
repz
icebp
int3
std
add
leave
cmp
fwait
add
push
xor
xchg
jnp
arpl
add
mov
pop
popa
add
int3
push
cmpsb
xchg
stos
jl
add
jmp
push
cld
dec
xchg
jae
push
fisttpll
dec
iret
sbb
ja
inc
mov
jno
push
or
jecxz
movsl
xchg
sbb
mov
or
add
test
add
jbe
pop
mov
fsts
mov
rcrb
dec
andb
ret
mov
int3
or
push
scas
out
shlb
sbb
pop
test
or
in
in
addb
popa
aaa
dec
data16
and
dec
mov
jecxz
mov
rorl
jo
cmpsl
add
and
or
adc
mov
sub
sbb
adc
fiaddl
mov
cmpsb
fs
cmp
les
jmp
ds
nop
xchg
pop
add
scas
xor
jmp
and
mov
dec
out
pop
data16
inc
jns
sahf
adc
rorb
xchg
call
divl
int3
das
jae
sbb
push
pop
sarl
pop
addr16
hlt
jno
in
in
mov
mov
or
loope
adc
lea
pushl
ret
inc
cmp
aas
xor
loop
mov
xor
cmp
add
lahf
fcompl
xchg
addr16
fcompl
jge
cld
mov
sub
cmp
mov
xor
push
cmpl
add
xchg
jbe
pop
and
int3
inc
clc
or
xchg
lds
inc
jle
repnz
mov
cmp
lea
sub
pop
pushl
gs
shll
cs
pop
dec
pop
jg
addr16
enter
fldl
mov
pop
fs
out
adc
in
lret
out
mov
xchg
pop
xor
push
inc
sbb
mov
adc
cs
bound
movsb
filds
mov
inc
outsl
inc
pop
push
gs
iret
pop
inc
rorb
fdiv
push
cmp
xor
jle
adc
int
push
ja
jbe
imul
xchg
gs
ds
pushf
mov
leave
mov
das
in
adc
std
or
in
sub
cmp
mov
cmc
stos
mov
imul
sti
xor
and
jne
adc
push
xchg
pcmpgtd
sub
mov
sbb
jb
adc
js
sbbb
and
xchg
add
and
add
or
lahf
xchg
cli
imulb
fmull
xchg
inc
les
xchg
adc
inc
xor
mov
adc
ljmp
mov
ret
shrb
and
lods
scas
sbb
insl
test
movsb
popf
mov
xor
fildll
insl
xchg
aaa
lods
xor
sbb
mov
xlat
out
cmp
addb
pop
shll
in
and
push
xlat
jnp
fwait
sbb
ret
aam
or
lds
mov
push
mov
cs
jae
lcall
and
ja
pop
cld
or
ljmp
les
bnd
fwait
cmpsb
mov
push
push
imull
ret
pop
inc
stc
inc
lret
push
mov
pop
sub
mov
jno
xchg
cmp
pop
xchg
orl
lock
outsl
cmp
daa
and
jnp
into
add
jp
inc
rcrb
lds
jne
cmc
add
push
das
push
and
lret
insl
push
and
or
jp
inc
out
outsb
or
paddusw
xchg
arpl
push
lret
mov
pop
mov
pop
les
std
mov
out
clc
jg
rorl
movsl
sahf
cltd
ja
mov
mov
lret
xlat
xor
push
test
dec
insl
sbb
xor
adc
mov
into
js
sub
ljmp
sub
cmc
cmp
lret
fs
fsubrp
mov
pop
outsb
ret
sbb
sbb
lds
and
mov
addr16
jge
mov
push
out
fs
imul
int
div
cmp
sub
mov
push
popf
jl
pop
xchg
sbbl
subl
fwait
hlt
and
mov
mov
icebp
pop
jmp
adc
das
mov
pop
jg
cltd
dec
jae
inc
inc
popf
seta
std
gs
jl
sbb
push
sbb
mov
add
out
mov
sbb
ffreep
scas
mov
xor
mov
in
jb
std
ret
inc
adc
gs
or
arpl
or
pop
cmpps
fcoml
mov
pusha
stos
ret
ret
aas
sbb
aad
imul
pop
xlat
pop
pop
ljmp
aam
cld
sbb
xor
pop
fiaddl
test
xor
mov
fcmovbe
dec
rorl
jns
dec
adc
sbb
add
lods
mov
out
pop
fnsave
jp
fcomp
or
decl
es
and
lcall
or
or
ret
dec
dec
outsb
lods
sbb
out
cmp
and
add
jp
push
stos
jne
jg
sbb
mov
mov
loope
aad
imul
mov
test
cwtl
cmp
test
das
sbb
cmp
mov
mov
jle
xchg
daa
xor
pushf
sbb
notb
fcomps
sbb
xor
mov
adc
mov
inc
in
adc
lods
js
xchg
fmull
aas
xlat
jae
xchg
add
fldl
inc
bnd
adc
rcl
xor
or
inc
push
and
icebp
cmp
mov
jb
test
arpl
mov
jge
xor
push
out
pushf
push
mov
mov
sbb
pushf
neg
scas
addr16
mov
loop
movsb
xor
in
xchg
pop
stos
jnp
cmpsl
xchg
and
jbe
sub
cmp
mov
xchg
cmp
in
fldt
repnz
xchg
adc
lahf
cmp
dec
test
sbb
sub
out
xchg
jmp
das
arpl
push
xchg
xchg
push
lret
es
jo
sub
mov
stos
rolb
mov
pop
push
inc
ja
pop
test
iret
xor
sha256msg1
movsb
negb
cwtl
lret
dec
sub
xchg
inc
pop
and
adc
lahf
stos
repz
xchg
sbb
popa
cmp
insl
insl
mov
cs
out
dec
cs
add
xor
push
pushl
xor
fiadds
cmp
incb
push
jo
shrl
iret
fisubrl
mov
xchg
mov
mov
in
cmp
push
sub
les
xchg
inc
movsb
ss
cmp
mov
and
and
dec
mov
je
jb
mov
dec
dec
ljmp
adcl
lahf
cltd
in
es
shll
mov
rcrb
or
popa
dec
outsl
aaa
cld
add
adc
call
enter
jno
dec
ja
inc
and
aad
pushf
dec
jno
test
or
cmp
mov
daa
adc
je
stc
fimull
out
adc
mov
in
mov
mov
arpl
shl
mov
cmp
jl
sub
mov
scas
cmp
sub
inc
adc
mov
mov
dec
les
jne
and
ret
ficomps
xor
sub
pop
cmp
addr16
int3
inc
arpl
xor
dec
dec
cld
mov
loopne
incl
dec
add
mov
pop
dec
inc
clc
loopne
hlt
pop
insb
mov
je
adc
adc
or
aaa
adc
sub
sahf
sbb
pop
pop
xor
into
paddd
imul
into
jmp
push
mov
bound
movsb
in
fcmovu
movsl
mov
mov
outsl
std
sbb
fdiv
pop
mov
pop
lret
loope
mov
sub
cld
and
xchg
lcall
xchg
mov
jmp
or
dec
loopne
js
cld
add
xchg
dec
or
adc
or
stc
xchg
mov
mov
xchg
push
xlat
push
xchg
pop
jecxz
pop
mov
cwtl
push
mov
push
pop
push
jns
cwtl
test
shlb
mov
push
pop
imul
js
ror
jae
mov
inc
jg
push
adc
xchg
dec
ds
jb
sti
lret
push
inc
xchg
add
addr16
mov
scas
rolb
fwait
jae
cmp
rcll
pop
sub
push
cmp
jns
sub
aad
sbb
xchg
xchg
xchg
xchg
cmpsb
dec
outsb
ss
sub
leave
popf
jnp
insl
negb
insb
aad
aam
leave
add
loop
mov
dec
rcr
movsl
add
jne
dec
xor
lock
lahf
rolb
bound
pop
aad
loop
ret
xor
pop
lock
xor
fists
add
inc
pop
sbb
xchg
dec
movsl
xlat
scas
mov
cli
lahf
adc
js
mov
xchg
out
lea
jno
notb
lock
arpl
lea
mov
movsl
mov
sub
xor
pop
pop
mov
mov
xchg
ja
icebp
fsubr
test
shl
inc
mov
mov
mov
xor
das
push
and
inc
jl
adcl
in
and
jle
mov
imul
loope
shrl
sub
cmc
mov
insl
push
cwtl
fwait
scas
sbb
lret
mov
arpl
fxch
cmp
stc
sub
mov
push
dec
mov
loopne
mov
jp
popf
jb
dec
xchg
stc
pushf
stos
jg
iret
leave
dec
inc
jmp
jge
into
addr16
sub
push
fistl
push
insb
jne
and
ds
sti
add
sub
fldl
sub
popa
imul
xchg
insb
in
cli
jno
cmp
push
nop
lcall
adc
sbb
stos
sbb
push
ja
loope
jns
add
sbb
fiaddl
push
imul
push
int3
push
or
push
dec
push
jp
pop
aas
jb
ljmp
mov
lea
leave
inc
dec
cli
cmp
outsb
insb
lret
pop
or
in
sti
insb
sbb
sub
les
into
or
xchg
lcall
xchg
sbb
mov
mov
cmp
jg
push
dec
imul
mov
cmp
mov
imul
push
cmp
les
mov
test
sub
dec
pusha
dec
mov
sbb
jnp
stos
cmp
mov
or
or
or
nop
add
adc
imul
stos
and
clc
cmp
sarb
loope
jecxz,pn
shl
jmp
mov
leave
push
lods
icebp
test
aam
add
cmp
cwtl
pushf
inc
mov
lds
dec
cmc
int3
test
jle
repz
mov
dec
inc
pop
cmpb
ret
lahf
insl
xchg
dec
imull
shll
xchg
leave
imul
scas
sahf
push
and
cwtl
out
dec
mov
add
retw
dec
cltd
sub
cltd
es
mov
mov
call
pop
dec
dec
or
and
lcall
add
cmp
sbb
into
pop
or
ds
clc
xor
jmp
sub
ss
cmp
popa
mov
cmp
push
test
inc
sbb
mov
pop
outsl
ss
xor
cmp
push
popa
adc
sub
or
jl
push
dec
push
pop
mov
mov
sub
das
aas
push
mov
int3
cmp
push
mov
adc
lret
mov
mov
push
mov
mov
fs
cwtl
sub
scas
sbb
into
out
mov
pop
fdivrp
push
xor
dec
mov
xchg
movsl
aad
je
or
icebp
and
mov
push
lcall
lea
ret
and
push
je
scas
test
push
int
push
jbe
clc
adc
push
hlt
loope
out
cmp
push
push
mov
aas
and
shl
aad
and
call
and
loope
mov
and
pop
pop
jmp
or
dec
loope
cld
arpl
insb
jg
xor
sti
dec
xchg
and
cmpb
mov
lret
add
mov
cmpsb
jne
loop
dec
and
in
jbe
fsts
aaa
mov
jb
xor
clc
lahf
dec
jmp
nop
popf
xchg
pop
mov
imul
ror
loop
xchg
xor
out
movb
mov
add
subb
pop
add
hlt
or
insl
adc
jmp
in
cmp
cltd
fnstsw
sbb
pop
hlt
cmp
scas
gs
sbb
add
and
lds
lret
pop
or
stos
and
cmp
out
xor
or
push
push
stos
enter
lahf
cltd
and
out
scas
jle
jne
sub
jb
jp
sti
mul
hlt
and
ds
jns
imul
test
test
xchg
jmp
andb
xor
leave
add
imull
adc
adc
add
dec
push
insb
pop
push
or
test
dec
cs
movsl
xor
ss
pop
or
cmpsl
mov
repnz
ret
int
push
xchg
pop
pushf
scas
clc
push
stos
jno
shlb
loope
mov
popa
inc
out
das
sbb
sbb
jge
xchg
sbb
andb
or
leave
mov
cmpsl
push
push
xor
add
xor
pop
mov
leave
push
mov
jo
pop
outsb
or
jno
sub
mov
mov
lods
dec
xor
inc
jo
cmp
arpl
imul
sti
pop
cmpb
inc
cmpsl
adc
xchg
shl
loope
sub
xlat
push
fadds
repz
leave
mov
adc
sbb
pushaw
xchg
loopne
sbb
test
fsub
arpl
mov
testb
xchg
inc
add
fsubrl
lahf
bound
add
or
sar
test
or
sti
fistps
lret
xor
enter
push
push
pop
inc
mov
pusha
fs
fwait
xor
inc
iret
sub
iret
divb
mov
inc
iret
sub
push
pusha
jge
sub
std
cmp
popa
mov
bound
movl
xchg
xchg
push
dec
xchg
int3
cmp
fcomps
in
cmc
insb
movsl
arpl
out
lods
shrb
fldt
aaa
jp
jb
insb
xor
sbb
pop
loopne
xor
lret
out
stc
faddp
add
cmp
mov
xchg
push
jmp
and
cld
cli
aad
iret
in
outsb
loop
dec
cmp
int
test
movsb
lods
cmpsb
sbb
int
sti
ds
sbb
mov
mov
rclb
sbb
bound
mov
jl
sub
sub
jo
mov
test
mov
cmp
inc
in
mov
cmp
sahf
sahf
outsb
mov
sbb
jmp
fdivrl
idivl
scas
aad
pop
inc
cltd
mov
ret
mov
fwait
adc
std
push
push
test
dec
pop
xchg
in
xchg
xchg
mov
leave
mov
and
mov
loopne
test
sub
sub
jb
mov
cld
mov
xor
jecxz
hlt
push
movsb
jl
inc
cld
sbb
mov
lret
jge
jb
inc
and
sbb
inc
xor
cmpsl
rcrl
iret
insl
push
cmp
mov
sahf
inc
cwtl
xlat
cmp
push
lret
or
jbe
pop
out
bound
xchg
sbb
cmpsl
fcoms
mov
or
xchg
arpl
jmp
cwtl
inc
scas
jnp
rcr
aaa
inc
cmp
xchg
or
pop
and
rcrl
dec
mov
lods
cld
xlat
sbb
jnp
adc
adc
cld
test
in
and
leave
aad
mov
lods
dec
inc
aam
mov
jb
sbb
cmpl
ss
xor
cli
out
ret
loope
out
mov
mov
int3
mov
icebp
jno
cmpsl
xchg
jg
xchg
pop
adc
aad
xor
add
push
push
inc
je
fdiv
pop
outsl
cs
pop
enter
or
pop
sarl
out
mov
jns
or
adc
jmp
cld
add
and
jb
mov
sbb
in
or
addb
cld
out
lock
int
xchg
ret
push
into
mov
jmp
sbb
cmp
lods
scas
push
aaa
mov
pop
sub
lahf
pop
sbb
mov
sbb
lods
pop
rcrl
cmp
lds
inc
add
pop
pop
add
or
pop
or
add
push
jbe
gs
pop
push
push
popa
bound
push
push
dec
dec
pop
push
push
push
jg
insl
je
or
push
jno
jb
outsl
add
xchg
inc
data16
jge
sbb
inc
data16
jb
sbb
push
popa
jnp
or
imul
inc
inc
inc
push
jge
jae
push
adc
jae
popa
jb
arpl
pusha
push
jp
gs
data16
je
push
or
inc
outsb
push
jb
add
pusha
jb
arpl
arpl
push
or
in
jb
jbe
push
add
mov
push
jge
imul
insl
pop
push
mov
inc
imul
inc
inc
inc
dec
dec
inc
pop
pop
push
dec
dec
inc
inc
inc
inc
push
dec
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
dec
inc
dec
dec
pop
inc
inc
dec
push
dec
and
mov
jbe
jge
bound
jbe
push
jo
dec
es
dec
inc
pop
dec
sub
dec
push
mov
cmp
jb
jne
dec
dec
sub
dec
push
pop
dec
daa
and
push
mov
jne
jae
insl
jg
js
fs
aas
je
inc
dec
daa
and
push
pop
inc
sub
mov
sub
and
sub
inc
dec
daa
sub
pop
inc
and
dec
inc
mov
inc
inc
dec
daa
and
inc
add
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pusha
inc
test
jl
test
dec
push
call
jno
pop
cld
jbe
ja
jl
jmp
jl
jmp
jmp
add
jns
les
jmp
js
mov
add
add
add
add
je
les
mov
push
call
jmp
pop
mov
push
call
ja
pop
sub
push
call
lcall
add
add
jno
add
push
ret
dec
push
call
ja
pop
sub
push
call
jmp
pop
jno
inc
call
jb
add
push
ret
test
jmp
jnp
mov
add
add
les
add
jmp
jno
xchg
add
add
inc
call
lcall
shr
add
clc
jmp
ja
mov
add
add
add
jle
add
add
js
add
push
ret
inc
push
call
jae
pop
xchg
jmp
jp
add
add
call
add
lea
add
add
xlat
shr
push
jo
inc
pop
call
js
add
push
ret
jmp
test
add
stc
mov
js
mov
sub
push
call
call
mov
jmp
jae
shl
mov
clc
sub
jmp
jmp
dec
mov
call
jmp
ret
xchg
test
stc
jl
shr
sub
call
jmp
xor
ror
call
jge
add
push
ret
rcl
stc
sub
call
jns
add
push
ret
sar
jae
rcl
mov
jp
rcl
mov
jmp
ljmp
ror
sub
call
jns
les
add
add
add
stc
sub
je
jne
jmp
rcr
add
jne
call
jae
add
push
ret
mov
jmp
rol
xchg
jmp
testb
fmulp
sub
into
leave
adc
add
push
or
lods
dec
xchg
ds
incl
fs
pop
lcall
int3
inc
lods
xchg
add
addl
aas
test
push
mov
sub
lcall
fists
xchg
movsl
int3
call
adc
jno
ljmp
fistps
adc
sub
sub
aam
pop
lret
dec
jle
movsb
adc
sbb
inc
and
adc
push
and
mov
adc
lcall
in
pop
lods
sub
imul
dec
popf
aam
inc
lahf
xchg
stc
jb
not
daa
aad
gs
rclb
pusha
pop
addr16
iret
sbbb
fstpl
outsb
xor
repz
stc
arpl
xor
arpl
cld
add
fstpt
in
adc
xor
bound
lret
inc
test
daa
insb
sub
mov
into
or
jb
jbe
dec
incl
dec
mov
shl
cltd
sbb
cwtl
test
add
xchg
jb
pusha
pop
ja
xor
scas
mov
mov
xor
js
sbb
push
xchg
shlb
cmp
push
clc
push
xchg
idivl
dec
repnz
add
dec
xchg
inc
dec
andb
sar
mov
cltd
mov
mov
xchg
mov
lea
dec
cmp
xchg
dec
test
rorb
out
popf
jo
pop
movsb
pop
mov
bound
and
imul
or
icebp
arpl
sbb
int
push
inc
repz
in
popa
and
sbb
and
imul
jae
sti
outsb
dec
test
mov
lahf
cli
in
cmp
xor
jae
cltd
lods
push
push
jge
push
mov
std
inc
clc
shlb
hlt
outsb
inc
push
ds
push
fnstsw
xchg
push
loopne
test
imul
pushl
repnz
xor
aad
jbe
xor
subl
daa
mov
fwait
lret
dec
adc
ret
out
cltd
and
pop
pop
ljmp
fwait
pop
dec
lret
push
pusha
clc
jns
test
and
addr16
dec
mov
jno
scas
adc
ret
les
jle
inc
inc
mov
in
mov
out
fistpll
mov
push
dec
mov
out
pop
or
sub
out
sub
dec
aad
fsubs
aaa
dec
es
xchg
xchg
inc
cmp
inc
loope
push
idivl
push
ret
jns
insl
fmull
sub
inc
andb
inc
mov
sub
fdivrs
xor
flds
rorb
or
shrl
stos
sub
sub
jp
inc
negb
test
dec
cmc
cmpsl
aaa
gs
enter
ja
dec
xchg
dec
ds
cmpb
pop
int
xchg
cmpsb
loopne
xchg
repz
inc
pop
xchg
mov
xor
inc
adc
add
pop
xchg
hlt
cmp
sbb
aam
out
je
and
jnp
jns
mov
shl
xchg
dec
pop
insl
xchg
cmc
imul
jp
xor
jno
xlat
notl
sub
in
aas
rclb
cmpsl
sbb
lcall
or
and
push
cmpsb
jbe
int
cld
mov
dec
push
fbstp
add
inc
dec
dec
jno
int3
ja
into
cli
orl
cmp
cmp
inc
loope
push
dec
gs
outsb
jnp
sub
xchg
inc
ret
mov
stos
inc
icebp
pop
xor
xor
insb
jge
data16
push
cmp
inc
xor
jmp
ljmp
push
mov
jl
mov
popf
andb
sub
ja
shl
in
mov
add
and
sbb
insl
lods
cld
inc
repnz
pop
push
outsl
cwtl
mov
dec
mov
filds
jge
rcrb
pop
ljmp
aas
and
fcoml
int
loopne
and
stos
seto
mov
mov
push
test
popf
lret
daa
mov
xor
adc
jo
inc
sbb
rorb
xchg
add
mov
add
ret
dec
cmpsb
aam
ja
xor
mov
push
mov
pop
xchg
jecxz
loop
int3
jnp
cld
dec
icebp
adc
xor
pop
sbb
mov
aam
outsb
adc
call
mov
fcoms
xchg
daa
enter
cwtl
jnp
roll
add
pushl
dec
add
lds
cmp
jge
mov
xchg
aaa
movsl
add
enter
ret
xchg
add
sub
jle
ret
pop
sbb
pop
div
pop
adc
add
jno
dec
mov
xlat
pop
out
mov
in
jae
mov
out
push
shl
cmp
jns
jbe
jb
and
clc
loope
mov
fcoms
cmpl
inc
mov
fsubs
mov
outsb
pop
sahf
loope
mov
iret
les
mov
fstpt
jmp
inc
out
push
hlt
mov
mov
xchg
cltd
pop
ret
sbb
mov
out
je
dec
loopne
orb
xchg
mov
ja
arpl
sar
mov
pop
inc
mov
dec
push
loope
push
sbbb
mov
xchg
lahf
mov
pusha
clc
hlt
rdmsr
sub
xchg
push
push
lods
inc
daa
jnp
and
push
push
jno
imul
movl
sarb
into
adc
lahf
mov
popa
or
dec
inc
out
jmp
mov
push
sub
andb
sbb
std
jo
or
test
inc
out
fldl
test
pop
cmpb
lahf
insb
jmp
dec
xor
lret
and
clc
cmp
sbb
sbb
xlat
xor
movsl
mov
dec
fsubl
pop
xchg
call
or
int
jge
test
pushf
arpl
mov
out
std
mov
cmp
imul
movsl
cmp
imul
inc
inc
mov
int
cmc
out
int3
aam
mov
fsub
imul
int
dec
or
gs
sbbl
jno
hlt
pop
loop
lods
shrl
test
out
outsl
push
shl
gs
dec
mov
xchg
dec
decb
loopne
adc
out
test
cwtl
sarl
addl
jmp
hlt
imul
xor
mov
adc
jecxz
jbe
and
cmp
idiv
daa
faddl
cs
sbb
addr16
ror
in
pop
sti
leave
jbe
mov
push
lahf
insl
sub
pop
push
add
rcr
mov
fsubrl
movl
aam
push
sub
popf
int
cmpsl
and
insl
dec
loop
in
cmp
inc
lock
test
cld
jo
popa
lock
stos
clc
fdivl
mov
fcomps
xor
cmpsl
sub
cmp
rcrl
adc
bound
dec
adc
pop
xor
scas
push
dec
shll
push
push
push
imul
test
sbb
pop
jmp
adc
mov
or
mov
dec
orl
imul
cmc
mov
imul
sti
sub
or
pop
xchg
xor
std
add
js
jg
push
mov
inc
in
mov
scas
and
or
jp
add
add
xor
push
loopne
sbb
sub
arpl
arpl
fcmovnu
xchg
xchg
inc
push
pop
frstor
push
pusha
inc
movsl
pop
or
xchg
out
gs
pop
popf
pop
pusha
add
add
xchg
jno
shll
dec
out
stc
adc
mov
adc
mov
lret
int
xchg
enter
iret
dec
jge
pop
jmp
cmpsl
test
shl
pop
jp
icebp
cmpsb
xor
movsl
push
xor
test
inc
in
push
mov
and
and
jo
mov
clc
lock
xor
mov
mov
pop
pusha
fnsave
shl
icebp
and
jae
loopne
xchg
rcll
sub
pop
xor
sbb
mov
mov
cli
adc
iret
xor
incb
lahf
iret
xchg
pop
cltd
nop
sti
scas
orb
jp
subb
mov
fisttpll
stc
out
in
push
mov
rcrb
dec
pop
pop
mov
xor
sub
sbb
inc
pop
ret
sti
xchg
lahf
fildll
in
add
rcrl
jp
lahf
xor
pop
aam
xorl
inc
pop
outsb
jmp
and
stc
sbb
cmp
mov
xlat
lahf
arpl
adc
je
test
pop
xlat
xor
push
out
cmp
pop
push
adc
sti
xor
std
test
shl
cmove
movsl
and
jne
mov
add
icebp
lcall
ret
xor
imull
and
pop
fstpt
mov
jg
cld
adc
jge
lea
jns
cmpsb
jb
clc
insl
into
push
into
shrb
add
lahf
int
and
dec
int
dec
add
stos
push
mov
sahf
xchg
inc
mov
sbb
sub
jl
cld
bound
repnz
stos
ret
lock
push
stc
pop
loop
imul
sbb
cwtl
bts
sbb
mov
add
inc
sbb
sub
lret
inc
or
or
popf
rorl
mov
inc
and
mov
bound
or
scas
out
jl
shll
mov
push
pop
lods
fdivrp
mov
jae
loope
fs
inc
push
sbb
jne
cmp
mov
jmp
add
scas
push
adc
jae
sub
pop
sbb
movsl
push
es
xor
xor
push
jle
jb
stc
dec
mov
mov
loopne
andb
cmpsl
shrb
hlt
or
lods
loop
mov
or
repnz
pushf
adc
aas
jns
and
mov
sub
push
pop
fcompl
pop
stc
popf
xorl
sub
xchg
outsb
mov
addl
mov
icebp
jge
pop
jns
sub
xchg
in
cltd
adc
lret
cld
stc
sbb
cmc
adc
xchg
cwtl
push
mov
jbe
adc
mov
xchg
popa
push
fsubs
stos
jo
xchg
dec
dec
xor
lret
mov
dec
dec
cld
bound
scas
das
aas
divb
dec
arpl
add
push
iret
sub
not
xchg
add
and
pop
sbb
lods
inc
shr
mov
sti
push
mov
pop
jecxz
outsb
sub
sub
cmp
add
xchg
cli
xor
and
js
inc
js
xlat
dec
adc
icebp
in
mov
mov
pop
push
mov
xchg
jmp
inc
pop
pop
les
and
mov
adc
fnstcw
adc
mov
jle
pop
or
mov
sub
test
mov
fcmovne
decb
sub
sti
mov
pop
inc
rclb
rorb
gs
lret
mov
mov
push
pop
lahf
stc
int3
arpl
add
xchg
mov
movsb
push
push
inc
pop
call
xor
cmp
xlat
sbb
pushf
jmp
jl
iret
cmp
ds
jle
sbb
lods
pop
cwtl
sub
lahf
mov
das
sbb
sub
push
xor
add
dec
inc
cmp
dec
dec
scas
pop
pop
sti
mov
sbb
inc
aad
fldl
addr16
adc
fwait
and
sbb
pop
lahf
jb
inc
testl
push
add
cmp
xchg
in
lods
or
push
cwtl
dec
fs
sub
imul
jle
shl
push
jle
fistps
je
fisubrl
mov
es
adc
bound
and
sub
pop
test
jo
mov
les
loopnew
mov
rcrl
or
mov
jbe
sbb
fstpt
cltd
sub
mov
ret
pusha
cmp
das
stos
push
stos
sahf
mov
std
mov
stos
adc
mov
cmc
add
pop
mov
test
int
mov
movhpd
jo
test
mov
pop
xlat
jne
imul
dec
xorl
add
add
sar
movsl
pop
push
push
pushf
out
test
jg
jle
pop
rorl
sub
add
jmp
aam
lock
cmp
and
add
jnp
sub
fcoml
popf
lret
and
jo
sbb
jo
aad
pop
cmp
stos
in
sbb
stos
je
shlb
fisttpll
mull
cltd
add
push
lret
inc
jns
jl
sub
cmpsb
imul
ja
push
mov
in
pop
clc
sub
jb
lds
mov
push
ficoms
push
pop
ss
mov
push
mov
mov
and
mov
adcl
adc
pop
insl
dec
aas
push
out
lret
fs
lods
outsl
sbbb
dec
mov
add
add
lods
dec
push
jle
rcr
pop
mov
mov
pop
popf
ss
cmp
fisubrl
cmp
ret
in
out
push
xor
inc
daa
or
push
push
stos
stc
sbb
add
adc
push
js
or
sbb
ds
adc
subb
mov
push
xor
lods
popf
movsb
insb
lret
mov
jle
dec
sbb
push
mov
mov
mov
imul
jbe
shl
lds
shl
test
pop
out
pop
jb
cltd
cmp
movsl
mov
cltd
add
pushf
inc
pop
imul
mov
mov
xchg
xor
incl
mov
sub
cmpsb
fisttpll
mov
call
stc
xchg
xor
and
cmp
add
lcall
jnp
nop
lret
dec
pop
insb
ret
call
enter
fdivrl
stos
call
mov
xchg
and
adc
aam
addr16
rorb
pop
pop
xlat
pop
mov
adc
out
add
int3
mov
sub
cmp
sbb
mov
pusha
mov
jp
scas
or
push
xchg
jle
and
fdivr
mov
push
dec
and
insb
mov
lahf
xor
inc
jne
xchg
xchg
pop
test
pop
cltd
mov
cmp
enter
and
int3
xchg
fbstp
sub
jnp
js
movsb
fstps
in
test
fdivr
mov
jp
or
pusha
jo
es
xchg
fsubrl
and
dec
adc
dec
jo
sub
fs
aam
shll
inc
popa
cmpsb
pop
jge
ret
mov
adc
in
xor
pop
dec
mov
mov
inc
dec
xor
inc
pop
addr16
cli
push
push
mov
scas
aad
cmp
xchg
and
xchg
shl
ffreep
xchg
mov
and
add
negl
mov
and
adc
jnp
lods
inc
divb
out
loope
aas
out
sub
fidivs
repnz
cld
mov
imulb
pop
fs
jmp
push
cmp
and
inc
out
mov
test
lret
fnstsw
test
popa
pop
or
jnp
call
and
push
xchg
jle
jp
jl
loop
jnp
das
push
sub
jbe
inc
jl
adc
shlb
push
iret
scas
mov
mov
sahf
je
mov
push
inc
into
lea
cmp
movsb
mov
inc
out
aam
daa
mov
add
pop
mov
inc
scas
out
call
push
jecxz
das
pop
or
jecxz
in
or
pop
push
in
push
adc
cmp
mov
out
mov
addb
test
xchg
add
sbb
add
dec
mov
xchg
pop
sub
mov
roll
and
inc
testb
mov
dec
pop
fnstcw
iret
dec
mov
add
push
aam
pop
jne
sbb
mov
xor
frstpm(287
mov
mov
cmp
inc
push
dec
test
sub
mov
inc
jecxz
pop
jl
jecxz
inc
mulb
pop
mov
inc
or
push
in
add
mov
mulb
pop
mov
clc
fiaddl
xor
inc
popa
inc
mov
mov
mulb
gs
add
stc
push
dec
or
sarb
aaa
jbe
inc
addr16
xorl
andl
push
mov
pop
sub
xlat
xchg
cmp
inc
or
es
mov
icebp
jno
bound
adc
inc
mov
sahf
dec
aad
mov
pop
mov
decl
pop
adc
mov
int3
std
jae,pt
cmc
lods
sbb
mov
insl
int
add
in
enter
and
imul
dec
pop
xor
mov
dec
movsl
dec
gs
cs
mov
daa
loope
out
cltd
rclb
icebp
movsl
fwait
aam
movsb
sub
movsb
inc
add
jne
sahf
push
aad
rol
scas
rcrl
inc
test
fldt
mov
push
dec
in
mov
jge
mov
in
sbb
imulb
jns
sbb
jb
xor
fbld
das
pop
and
xchg
stos
notb
arpl
fstps
into
outsb
aas
and
and
fdivrl
mov
cltd
add
push
in
gs
daa
gs
cmpsb
mov
push
stos
shll
mov
repz
inc
divb
testb
sbb
add
adc
jae
in
or
in
ss
mov
cmp
inc
xor
outsl
shll
inc
sbb
ss
push
mov
in
leave
and
mov
inc
arpl
mov
or
xchg
icebp
jg
dec
and
inc
lods
xchg
sbb
icebp
jl
sub
lds
pop
rcrb
adc
xchg
ret
loopne
popf
sbb
lods
loope
jp
jp
ljmp
sar
pop
or
adc
insl
dec
mov
hlt
ret
or
fildl
add
in
add
mov
loopne
stos
jl
or
iret
pop
add
nop
push
sbb
in
ds
ret
cmp
leave
fisubs
lock
dec
stc
test
mov
dec
sub
mov
hlt
rolb
jne
repnz
cs
push
sub
stos
cmp
mov
jge
lods
scas
cmp
popf
shl
push
movsl
clc
pop
jo
adc
push
or
std
sub
test
daa
ret
or
packssdw
stos
xor
les
lods
add
pop
add
mov
ret
insb
xlat
imul
bound
add
xchg
or
or
xchg
inc
cmp
in
in
scas
mov
adc
mov
push
mov
test
jnp
mov
xchg
lret
arpl
adc
movsb
testb
idivl
dec
push
pop
shll
ss
xchg
xor
or
jae
mov
dec
out
mov
sub
shlb
fs
mov
push
ljmp
in
xor
xchg
dec
adc
mov
push
or
and
dec
sbb
jl
cmpsb
faddl
pop
inc
lcall
lock
dec
mov
lahf
push
rcrb
dec
rclb
add
scas
jp
sub
rclb
xchg
daa
es
mov
aaa
and
xor
ret
sub
sbb
loop
sub
jecxz
movsl
movsl
jmp
stc
jg
es
lea
dec
xchg
sub
jbe
nop
popf
cwtl
sub
jp
sub
imul
orl
jp
loopne
stos
jno
scas
adc
pop
dec
push
jle
rorb
cmp
fdiv
lahf
popa
aam
lcall
push
fadd
ficomps
and
add
arpl
mov
mov
sub
adc
pop
lret
stos
imulb
cmp
in
insb
jp
push
loope
dec
push
pusha
orb
pop
push
lret
sub
aam
inc
cmc
mov
mov
int
sbb
loop
adc
sub
rep
mov
mov
lcall
sub
pushf
cmp
cmp
xor
push
dec
gs
repnz
cmp
aam
mov
movl
inc
push
add
jge
movsb
push
jb
loope
rorb
aad
pop
lock
nopl
adc
sarl
lods
mov
movdqa
xlat
ret
hlt
into
sahf
xlat
cmp
pushf
fwait
negl
and
mov
nop
inc
ret
mov
cmp
inc
popa
mov
repz
xchg
aad
ret
sub
push
and
mov
ljmp
pop
push
fidivrl
mov
jnp
gs
test
insl
into
cmp
adc
leave
fs
cmp
cmp
ljmp
int
mov
sub
ficoms
out
faddl
dec
dec
mov
sbb
mov
dec
push
sarb
jb
in
rcrb
sbb
xchg
imul
pop
scas
or
add
imul
leave
add
fistps
loopne
xchg
push
lea
and
mov
das
loop
loopne
xor
nop
jl
or
mov
fwait
clc
call
push
jnp
xor
popl
lock
cmp
data16
xor
inc
in
cs
jp
test
mov
push
add
cltd
inc
stos
or
jno
mov
mov
jbe
daa
scas
pop
sbb
dec
ror
pop
inc
add
and
dec
add
xorl
xor
xchg
lods
enter
sahf
mov
lret
xchg
aaa
cmp
jne
fidivs
setle
pop
mov
xor
loope
iret
in
bnd
or
icebp
sbb
cmp
jecxz
xor
loope
inc
neg
and
push
push
imul
inc
gs
jge
test
lea
in
ja
mov
loopne
outsb
xor
in
fstp
mov
rcl
cmp
mov
je
stc
push
cmp
mov
ficoms
out
in
adc
enterw
adc
xor
jg
in
pusha
dec
lods
or
sub
pop
mov
in
pushf
pop
cmp
mov
push
repnz
cmp
pusha
add
jp
int3
es
shll
xchg
jb
mov
dec
test
call
xchg
mov
sti
repz
mov
hlt
cmp
sub
pop
inc
mov
xor
jmp
add
addr16
pushf
int3
test
lret
std
addr16
enter
inc
scas
ffreep
jae
pusha
push
or
out
adc
jge
mov
jo
hlt
faddl
jns
and
addr16
sarl
test
sbb
adc
ficompl
test
inc
lods
inc
repz
fistl
hlt
add
push
or
movsl
in
push
roll
mov
dec
cmpsb
fistpl
js
mov
dec
in
stos
xor
pusha
dec
sub
loopne
mov
lret
bound
push
loope
lahf
mov
out
test
loope
lods
pop
xor
ljmp
sbb
mov
sub
push
pop
sbb
incl
mov
dec
je
jnp
inc
rolb
jp
xorl
mov
mov
or
fwait
inc
hlt
adc
mov
jbe
pop
in
sub
fstps
push
dec
mov
mov
loope
rcrb
notl
fstpl
jecxz
adc
in
xchg
jg
sub
and
jl
cs
xor
xor
mov
pop
jecxz
cmp
cmpsl
fsub
sbb
jne
and
inc
dec
mov
cwtl
dec
cs
mov
push
mov
sbb
jne
je
pop
out
mov
adc
orl
pop
mov
mov
imul
or
xor
daa
aaa
mov
adc
cmp
dec
mov
orb
pop
cmp
sbb
push
xchg
into
fimuls
pop
and
lods
shll
jae
xor
sbb
out
mov
cmp
negl
shll
scas
nop
add
xchg
call
sub
fsubrs
jle
ret
outsl
ja
in
xlat
fildl
push
cmpsl
cmp
mov
xadd
repz
dec
orl
pusha
jmp
iret
sbb
outsl
fiadds
out
dec
arpl
and
or
cmc
adc
call
cmc
sbb
adc
sbb
mov
adc
or
jl
test
inc
cmp
fldenv
ficompl
mov
pop
into
pushf
sub
insl
mov
ljmp
fldl
or
sti
fidivrl
push
ret
lea
std
hlt
cmp
and
jno
cmp
pop
xchg
or
cmpsl
mov
or
push
dec
mov
daa
cmp
pop
mov
mov
push
add
test
xchg
icebp
lock
test
imul
lret
mov
dec
mov
pop
repnz
inc
inc
rclb
fidivrl
sbbb
cmc
xchg
pop
loope
or
mov
push
push
xchg
cmp
xchg
fisubrl
mov
rolb
push
sbb
xor
dec
test
mov
sbb
sar
arpl
insb
pusha
cmc
js
ret
in
sub
xlat
andl
pop
fwait
and
mov
ds
mov
and
outsl
mov
push
jmp
lods
icebp
fs
xchg
adc
or
fiaddl
jae
mov
mov
dec
insb
and
or
jne
das
push
lods
aam
in
dec
adc
cmp
add
xchg
push
stos
push
mov
sarb
cwtl
mov
icebp
pusha
mov
jbe
cmpsl
sub
out
push
xlat
ret
dec
imul
ficoms
mov
push
xor
cmpsl
repnz
int
xchg
jno
jno
addr16
push
int3
fisubrl
lret
in
sbbl
and
pop
pop
mov
and
dec
lds
mov
test
cwtl
push
loope
call
std
popfw
jb
jp
icebp
adc
mov
sbb
pop
inc
je
cmpsl
push
ror
push
xor
outsl
push
inc
sbbl
xor
xchg
sbb
scas
fdivl
popa
pop
push
inc
jg
cltd
jnp
inc
push
out
adc
mov
jl
xor
or
pop
scas
jmp
inc
add
mov
dec
mov
notl
pop
lds
into
mov
jae
daa
in
movsl
sub
pop
lock
xor
fcompl
pop
shlb
inc
jae
int
dec
adc
sbb
mov
mov
pop
das
iret
jl
ror
sub
or
mov
lea
sub
sbb
dec
fildl
or
jmp
scas
mov
cmp
mov
pop
mov
mov
ret
lock
repnz
out
or
pop
ss
pop
cmpsl
pop
fs
sub
rcrl
insb
clc
clc
rorl
adc
sar
and
mov
mov
xchg
cs
add
gs
jg
nop
shlb
push
push
and
cmp
xchg
mov
idivl
test
sbb
mov
cld
pushl
add
repz
push
cld
iret
jno
call
xchg
movb
pop
into
test
push
icebp
sbb
cmp
enter
rcl
cmpsb
xorl
jp
dec
lds
sbb
xor
jmp
test
dec
jp
xchg
xchg
inc
and
add
mov
lret
and
movsb
mov
and
mov
pop
je
cwtl
push
inc
adc
cmp
push
pop
popa
mov
leave
xchg
jge
lcall
daa
push
cltd
mov
mov
mov
push
xor
pop
das
push
sbb
test
js
sbb
jmp
bound
inc
xchg
pop
insl
ss
pop
inc
xor
xor
fwait
add
test
sub
rol
loope
sti
cmp
xchg
aam
or
xor
int3
fbld
jb
inc
mov
add
pop
leave
jae
adc
mov
outsl
out
lret
jmp
xor
xchg
xchg
xlat
aad
sti
mov
add
js
jnp
ljmp
mov
xchg
into
scas
push
arpl
stos
std
xor
or
pop
jp
jns
inc
push
icebp
enter
test
sub
mov
popa
cmp
lret
xor
inc
push
cmp
inc
pop
and
pop
pop
mov
test
adc
push
aam
fldenv
in
jns
mov
jecxz
pop
faddp
mov
int3
iret
push
divl
mov
mov
std
sub
dec
cli
jae
jp
add
sub
mov
aam
xor
pop
mov
shll
jp
xor
adcb
inc
dec
enter
imul
jmp
insl
stc
jne
add
bound
push
adc
adc
pop
jns
jp
lret
mov
addr16
sbb
xchg
int
call
cmpsb
lock
mov
leave
or
pop
or
jbe
sarl
loop
jo
sbb
cmp
orl
xchg
arpl
iret
loop
jno
push
in
ljmp
je
imul
mov
and
pop
xor
sub
jmp
in
rol
lock
push
add
mov
add
addr16
mov
mov
mov
outsb
inc
pusha
pushf
inc
out
je
aas
and
leave
or
pop
cwtl
mov
pop
cmc
pop
enter
ds
jle
fidivs
inc
aas
or
fdivrs
xchg
fldcw
xor
push
jns
push
imul
mov
and
add
and
mov
stos
insl
outsb
and
in
inc
xchg
jecxz
jle
xor
inc
jne
ret
cmp
jb
in
mov
mov
clc
test
pop
into
nop
adc
bound
sub
adc
jle
push
jno
imul
mov
pop
pop
pop
aaa
int
test
inc
push
les
adc
xor
lods
addb
leave
rcr
mov
jecxz
xlat
hlt
out
mov
cli
fimull
roll
xchg
mov
pop
adc
ret
xchg
out
insb
ss
loope
cmp
jbe
lea
js
mov
and
mov
rcrl
or
xchg
aad
int
dec
inc
mov
aas
jecxz
pushf
fsubs
sbb
leave
add
sbb
xchg
xchg
xchg
test
addr16
xchg
dec
pop
add
es
inc
sub
pop
jmp
in
outsl
lock
lahf
sbb
push
insl
in
enter
cs
push
xchg
cs
arpl
sbb
push
jbe
mov
loop
xor
mov
or
or
and
pop
cmp
idivl
mov
xchg
push
cmp
bound
mov
lcall
in
jecxz
and
loopne
lods
stos
sbb
mov
aad
inc
push
mov
push
jle
cmp
dec
mov
ret
adc
push
add
jg
xchg
mov
repnz
inc
cmp
mov
addr16
or
push
sbb
fdivl
jae
xchg
push
dec
add
ds
jae
or
mov
loop
xchg
cmp
rclb
fld
inc
es
in
cmp
div
ret
pop
loop
push
cmpl
jmp
rcrb
cmc
cwtl
mov
and
dec
inc
lahf
inc
or
add
mov
jno
adc
cs
sub
adc
pusha
or
sbb
test
sub
lret
inc
adc
push
je
cmc
fst
outsl
loope
or
jno
jl
xchg
popa
cli
pop
div
pushf
sbb
lods
shrl
xor
daa
popa
sti
sub
imulb
sti
ror
jecxz
aad
movntq
dec
and
repz
aas
adc
cltd
nop
shlb
cmp
pop
jns
mov
out
push
mov
jp
shlb
loop
imul
ret
xchg
loope
fs
pop
xor
add
fdivr
icebp
push
loopne
das
js
and
push
cwtl
cld
xchg
cmp
dec
cmp
jae
pop
jecxz
sbb
xchg
fs
call
push
repnz
pop
repz
int3
mov
and
mov
cmp
scas
lods
ljmp
adc
jl
sub
cmc
insb
outsb
and
lods
and
test
enter
mov
loopne
inc
xchg
and
cmp
fstpt
or
data16
adcl
jmp
aam
stc
xchg
in
cli
stos
daa
div
daa
add
stc
xchg
add
sub
aam
int
mov
xchg
dec
adc
cli
inc
fstp
or
pushf
dec
mov
push
fnstcw
and
xchg
push
jg
sti
cmp
cs
pop
nop
mov
cmc
sub
xchg
inc
cli
dec
add
mov
scas
adc
jae
mov
pop
jg
jp
fdivs
stos
not
movsb
or
push
jmp
mov
pop
cmpsb
add
arpl
mov
out
cltd
xlat
jle
dec
icebp
imul
sub
push
popf
jmp
pop
les
jnp
lcall
push
jb
xchg
mov
bound
dec
ret
mull
mov
adc
in
dec
lea
enter
xchg
or
add
fcompl
call
jmp
jmp
bound
mov
pop
popa
fimuls
stos
inc
adc
adc
iret
or
aad
jecxz
or
pop
mov
or
in
push
incl
lahf
xchg
sbb
or
xor
repz
ja
sbb
adc
outsb
mov
fdecstp
mov
xor
iret
cmp
clc
cmp
adc
adc
in
xor
ja
push
or
gs
or
lds
mov
jp
or
imul
adc
mov
les
inc
and
loope
adc
inc
je
cmpsb
mov
sbb
xchg
xor
imul
or
push
and
xor
icebp
dec
in
movsb
aam
loop
out
xchg
push
pop
jno
jge
or
rclb
add
add
lea
push
adc
cmp
inc
retw
scas
pusha
leave
sub
jnp
mov
bsf
jnp
and
dec
mov
push
test
rol
pop
negl
add
jge
imul
int
adc
sub
or
incl
jg
pop
xchg
lret
inc
fsubs
mov
daa
cmp
sub
xor
mov
pop
fists
mov
mov
push
imull
add
xchg
rolb
dec
push
lock
fs
inc
sbbl
and
andl
and
xchg
lea
insb
std
push
jo
nop
add
add
push
or
in
andb
insl
leave
es
lcall
mov
pop
lahf
sbb
nop
shr
daa
adc
push
xchg
mov
mov
les
in
cmpsl
outsb
pop
lret
stos
add
jo
xchg
cmpb
jbe
pop
in
mov
lahf
shll
mov
lea
xchg
sub
in
sbb
or
std
pop
mov
lea
in
jno
rcrl
mov
stos
test
outsb
sbb
sahf
clc
lahf
lods
fldcw
mov
cmp
jo
jns
jno
push
rolb
add
mov
sub
popa
adc
or
test
sbb
push
mov
xlat
xchg
das
jg
xor
lds
ss
push
out
stos
cld
sbb
mov
pop
lret
sbb
dec
or
ror
fnstsw
cmp
popa
lods
xchg
lret
popf
or
leave
cmp
cli
aaa
push
cltd
sub
mov
cmc
stos
lea
jae
xor
jo
jg,pt
jo
cmp
mov
push
mov
pushf
mov
add
cmpsb
addl
call
cs
and
addr16
aas
cli
out
ds
inc
les
loope
xchg
cmp
jge
or
clc
jle
and
add
or
call
mov
leave
sbb
jg
xchg
daa
enter
jbe
mov
xchg
inc
pusha
xchg
ja
inc
stc
jge
ret
flds
mov
and
xchg
pop
lahf
scas
inc
dec
and
or
xchg
scas
mov
mov
pop
cmp
push
xchg
cld
in
inc
adc
or
adcb
into
testl
and
mov
leave
leave
xchg
sti
dec
cmp
in
cmp
icebp
pop
add
inc
xorb
out
andb
push
addr16
pushl
mov
test
push
push
dec
in
cli
sbb
mov
xor
adc
sbb
pop
jg
mov
mov
cmpsb
push
mov
dec
in
cs
cmp
jb
cmpsb
lcall
mov
sub
mov
ret
cmp
pop
loop
push
jne
cli
pop
adcb
push
outsl
dec
add
or
sub
cmp
cld
xchg
fists
mov
add
iret
cmp
out
enter
test
lods
or
pusha
sub
sbbb
scas
push
pop
cld
ret
ret
leave
lea
pop
sti
andb
enter
aaa
sub
mov
sbb
xor
pushf
lods
lds
sub
in
pop
cli
mov
cs
mov
pop
cmp
sub
ds
aaa
int3
rorb
mov
mov
into
dec
fcoms
sbb
push
sbb
loop
xor
mov
out
pop
stc
xchg
mov
aaa
mov
dec
ja
inc
roll
cs
nop
fcoml
mov
call
adc
dec
cmpsl
mov
jb
add
adc
pusha
xor
xor
xchg
add
add
jl
in
imul
fsts
lcall
and
into
mov
jno
dec
sahf
jno
mov
out
sbb
int3
flds
lods
mov
repnz
dec
aad
push
orb
add
sub
loope
repnz
and
xlat
daa
test
jp
jle
xchg
pop
fists
jle
aam
mov
xor
into
ljmp
xchg
out
xor
jns
mov
shl
adc
bound
lcall
mov
sbb
sub
in
lret
mov
mov
mov
pop
fucomi
ficomps
out
push
testb
pushf
pop
add
cmc
or
rclb
dec
out
push
movsl
mov
mov
pusha
decl
mov
push
repnz
movups
ds
movsl
add
jl
and
rorb
stc
movsl
xor
sbb
out
pop
test
stos
ret
icebp
addr16
xchg
sbb
ljmp
cmpsb
cmovg
inc
jg
lods
dec
sbb
jno
add
mov
sub
int
movsl
cmpsb
repz
adc
decl
rclb
pop
inc
pop
jmp
jno
sbb
ljmp
outsb
jns
in
xchg
js
fstl
mov
daa
adc
push
gs
pusha
in
sub
cmc
push
pop
gs
push
push
sbb
arpl
and
bound
xchg
mov
xchg
popa
scas
jae
aaa
inc
cmp
and
rclb
or
mov
outsl
clc
cmc
mov
inc
ror
push
dec
dec
xor
je
outsb
fdivs
pushw
in
rol
push
rorb
push
pop
sub
mov
push
cs
mov
push
push
jne
add
sub
xchg
mov
clc
add
enter
testb
adc
dec
in
cmp
add
dec
mov
ja
or
or
push
fistps
cld
xor
jb
adc
jns
mov
mov
sarb
cmp
mov
fs
or
add
push
cmpsb
pushf
outsb
lcall
or
cwtl
out
sub
pop
imul
repnz
jp
dec
iret
inc
sbb
pusha
inc
sub
sub
mov
mov
insb
pop
and
cmp
push
lock
xor
xor
into
push
or
xor
adc
cmp
arpl
ret
je
movsb
je
jae
jecxz
adc
cmpb
sub
add
sahf
xchg
jecxz
mov
sbb
fadds
adc
xchg
out
push
push
cwtl
adc
int3
decb
daa
xchg
and
int3
rcr
fadds
ficomps
pop
ret
lahf
lret
xchg
pop
shlb
sti
mov
adc
out
ret
loop
sbb
jno
orl
stos
loope
pop
fdivrs
jo
icebp
sub
push
lret
scas
or
in
ds
jnp
adc
popa
mov
jecxz
pop
cmp
add
and
adc
aad
mov
jg
mov
rclb
adc
or
loope
pop
adc
sbb
xchg
xchg
dec
jb
sub
add
or
popf
mov
mov
dec
push
insl
sbb
sub
call
cmc
xor
cs
fcompl
test
outsl
int
call
xor
mov
jne
stc
and
cltd
hlt
jno
push
sub
and
es
jg
lock
cld
enter
push
test
push
mov
bound
jns
pushf
stc
rolb
jb
adc
xor
cmc
sbb
aas
xchg
push
clc
mov
xor
call
adc
rorl
xor
mov
mov
aas
mov
and
push
xchg
xor
sbb
repz
gs
jo
int3
sti
cmp
adc
adc
cli
sbb
fldt
jno
adc
jne
int
mul
arpl
mov
jbe
ja
ljmp
data16
push
mov
cltd
data16
mov
fdivs
inc
repz
push
mov
sbb
mov
xchg
or
loopne
jb
loopne
and
push
repnz
push
cltd
adc
scas
and
icebp
mov
aad
pop
inc
dec
int3
push
scas
loopne
idivb
ds
and
mov
jns
cld
xchg
sahf
inc
lret
cwtl
imul
pop
jle
sbb
test
sbb
xor
sarb
enter
adcl
jns
sbb
sbb
jecxz
rcll
iret
sbb
xchg
push
pushfw
imul
jbe
or
or
push
or
add
cmpsl
das
mov
jmp
movsb
enter
fistps
in
sub
cmc
repz
test
int3
std
inc
push
adc
sub
push
cld
clc
and
jno
imul
rolb
andb
jle
sar
nop
jmp
jp
pop
rcl
add
out
iret
mov
jb
and
rep
mov
test
dec
incb
cwtl
jns
cli
cltd
fildl
stos
testb
mov
sub
mov
mov
test
push
cld
inc
pop
pop
mov
ret
inc
mov
pcmpeqd
jg
xor
push
sub
fdivl
adc
mov
ja
push
adc
shl
or
and
add
pop
dec
cltd
lahf
xor
jb
mov
dec
cwtl
dec
mov
jl
push
dec
and
push
movsb
xor
jnp
out
pop
mov
pop
cmp
lock
jmp
push
rorl
in
jmp
lock
xor
cmp
call
dec
push
loop
jmp
mov
adcb
mov
xor
or
pop
ret
or
leave
mov
popf
lahf
je
in
sub
imull
adc
fnstenv
lret
popa
push
pop
and
sub
in
test
inc
push
add
shll
nop
fidivl
orb
hlt
sub
mov
fs
xchg
icebp
add
inc
arpl
push
aam
jp
mov
push
and
aam
sbb
repz
popa
or
add
arpl
sbb
cmp
dec
sbb
mov
insl
int3
out
fcoms
xchg
xor
jo
inc
pop
ret
jmp
xchg
and
fcmovnbe
xor
rcrb
mov
push
je
add
stos
stc
or
dec
sub
sbb
loop
xor
int3
inc
sub
jo
mov
mov
xchg
scas
daa
cmpsb
lret
mov
movsl
arpl
es
push
adc
jmp
dec
das
in
mov
ljmp
sti
dec
mov
pop
push
push
jae
cmp
mov
mov
and
pushf
lock
insl
xchg
jnp
jae
nop
fistl
xchg
pop
xlat
add
mov
jl
pop
imul
sub
lret
or
cmp
fldcw
mov
adc
push
push
leave
pop
ds
jge
stos
ucomiss
or
xor
mov
cmpb
ret
push
daa
ret
jo
lock
shrb
lock
adc
test
dec
pop
outsl
int
push
xor
mov
shr
je
ljmp
lods
int3
test
gs
lds
call
lds
test
addb
mov
mov
scas
pop
jno
inc
and
xchg
insb
xor
stc
insb
mov
ja
add
add
cli
adc
mov
add
lea
lahf
sahf
xchg
into
test
nop
mov
sbb
mov
cmp
ljmp
pop
flds
jno
cmc
sub
std
jo
getsec
aam
outsb
jl
fimull
xor
int3
outsl
cmp
or
cltd
repz
hlt
inc
popf
cwtl
adc
mov
push
mov
jno
inc
mov
lahf
loopne
or
call
iret
pop
mov
sub
jns
insl
sub
test
aas
das
jns
test
and
sub
int
scas
mov
lahf
jg
add
or
lock
shrl
push
cwtl
aam
and
aaa
inc
mov
and
pop
and
pop
and
push
or
fs
test
lods
adc
xlat
mov
or
inc
pop
cld
mov
mov
and
loopne
xor
jp
jmp
jnp
int3
shlb
cmp
lcall
jecxz
xor
lret
je
fdivrl
mov
adc
and
jb
add
call
xchg
fildll
imul
pop
sarb
and
inc
popf
inc
into
xchg
push
paddusb
xor
mov
fnstcw
cs
lock
xchg
ljmp
into
mov
inc
cld
lock
outsb
aam
adc
cmp
cmp
lcall
rolb
adc
loopne
imul
push
cmp
adc
outsb
fbld
dec
sbb
inc
inc
iret
cmp
add
adc
in
mov
fistps
fidivrs
test
xlat
cwtl
int3
mov
outsl
loop
and
cmc
push
push
inc
jbe
mov
pop
xchg
leave
push
cltd
mov
fnstsw
enter
mov
das
mov
arpl
cs
hlt
push
push
pop
mov
sbb
fsub
imul
jmp
fstpl
shrl
xchg
daa
or
inc
shrb
jo
mov
ret
mull
pop
adc
ret
test
sar
mov
rcr
or
mov
fisubrl
sub
out
fidivrs
andps
dec
and
out
je
pop
sbb
cmc
ljmp
sbb
stc
pop
ljmp
shlb
bound
add
xchg
inc
pop
sarl
xchg
fmull
cwtl
push
pop
inc
push
imul
out
dec
lret
mov
cltd
sbb
xchg
adc
jp
push
xchg
aas
movsl
mov
scas
mov
lods
inc
addb
arpl
cwtl
bound
jb
pop
ljmp
xor
mov
pop
push
inc
aam
push
jne
sbb
sbb
dec
xchg
jne
test
stos
mov
addb
notl
pop
inc
inc
cmp
cmp
loop
mov
inc
cmp
insl
test
pop
inc
mov
mov
popf
jo
pop
pop
outsb
mov
test
add
cmp
repz
clc
jecxz
test
int
dec
or
sbb
setle
push
out
sti
lods
inc
lret
imul
jae
sti
shrb
cld
pop
jae
pop
ljmp
out
cmp
test
push
jl
mov
adc
outsb
test
mov
jle
pushf
mov
lds
inc
mov
mov
mov
adc
bound
mov
inc
ret
insl
outsb
into
and
das
mov
lret
cmp
sbb
jge
ljmp
in
aad
nop
cmp
cmc
imulb
cmpsl
imul
xchg
cmpsl
mov
or
or
xor
pusha
cmp
lods
ljmp
fwait
mov
lret
xchg
mov
or
dec
ret
pusha
jge
mull
sarl
ficomps
loopne
movsl
sub
xchg
fisubrs
aam
stos
xchg
into
jo
aam
xlat
pmaddwd
xchg
add
ffree
adc
stos
insl
adc
lods
dec
test
add
dec
ljmp
cmp
loop
imul
jo
rcl
data16
mov
lea
scas
push
xor
or
sub
and
in
fs
out
or
and
or
popf
cltd
push
add
push
jp
sbb
ror
jp
lods
lock
jbe
cmp
push
pop
lods
xchg
mov
ret
jecxz
push
and
add
ljmp
dec
cmp
je
mov
sbb
lahf
add
sub
mov
cmpsb
pop
jp
lds
shrl
adc
fcmovu
xor
mov
arpl
adc
aas
jnp
pop
jns
pop
dec
add
call
pop
mov
mov
add
popa
adc
pop
inc
insb
into
adc
and
lds
loope
test
jmp
and
add
and
and
or
push
pop
nop
cmp
sarl
cmp
jb
je
xor
cmpsb
pop
ss
fucom
clc
popa
dec
push
sahf
add
dec
push
test
out
sbb
xchg
or
cmp
je
jmp
stos
pop
popf
insb
adc
int3
add
mov
clc
stos
and
jo
aas
cmp
mov
dec
cmc
jge
mov
out
xor
push
rcr
fs
scas
movsb
inc
add
insb
call
push
daa
aas
inc
dec
dec
push
jle
jle
fiaddl
xchg
mov
shlb
cmc
cmp
loope
test
clc
pushf
cmc
ja
or
push
cli
enter
cmp
mov
xor
push
dec
mov
scas
mov
xor
jbe
or
or
push
fsubrs
sbb
pop
jp
mov
jo
jnp,pt
jno
iret
in
push
out
add
icebp
push
push
lock
fimull
rcrl
in
mov
idivl
and
daa
pop
cmp
xchg
dec
adc
cmpsl
or
fwait
pop
int
add
test
jl
out
les
stc
sbb
push
dec
aas
data16
shlb
aam
pop
dec
fnstcw
lea
sbb
outsb
fwait
dec
clc
je
cmp
movsb
cli
sub
or
dec
inc
test
sti
mov
add
sbbb
rorb
push
push
imul
jmp
mov
inc
add
push
pop
xchg
jg
in
mov
aad
movsl
fsubs
xchg
insl
xlat
sbb
call
push
pop
lret
lods
mov
sahf
mov
push
push
shll
mov
sti
pop
int
cmpsb
cmp
movsl
lods
jp
hlt
cmp
add
das
les
jmp
jp
notl
push
pop
add
into
loopne
movsb
mov
bound
outsb
or
decb
or
das
pop
pop
and
xor
clc
mov
testl
mov
inc
jns
mov
cwtl
filds
sub
pop
js
mov
pusha
add
or
dec
jnp
movsb
bswap
lret
int
inc
mov
adc
imul
or
dec
out
or
in
rclb
pop
mov
inc
sbb
cmpsb
stos
arpl
loope
fldl
pop
movsb
repnz
loop
rclb
and
fs
inc
es
ljmp
nop
inc
lahf
push
jp
pushf
mov
or
cmp
loope
shlb
adc
aam
xchg
cmc
fldenv
xor
fbstp
insb
xchg
fld
lcall
or
and
or
sbb
cld
outsl
and
mov
icebp
fdivrl
sbb
test
push
movsl
ret
inc
mov
in
sub
dec
mov
mull
adc
mul
out
mov
in
mov
jecxz
jp
inc
pop
xor
jle
cmp
sbb
ljmp
mov
enter
scas
jne
or
idivl
xor
mov
ja
add
shrl
mov
mov
out
cmp
imul
inc
jp
sbb
pop
es
test
xor
xlat
lock
je
incb
subl
aas
movb
pushf
ret
in
jmp
mov
test
mov
xchg
pop
inc
loopne
push
scas
subl
mov
xor
mov
add
push
stos
mulb
add
test
pop
pushf
das
lods
xchg
mov
cmp
das
and
xlat
jp
or
xchg
pop
inc
xchg
xor
cltd
xchg
cmp
pop
mov
cmp
pop
js
jno
insl
push
or
sub
int
push
out
push
push
mov
aam
cmp
inc
sub
out
negl
add
inc
arpl
cmc
dec
fwait
jno
adc
sub
icebp
xor
lds
mov
iret
pop
sbb
cmp
jg
mov
mov
shrd
pop
mov
xchg
ja
bswap
inc
or
int
xchg
mov
nop
arpl
int3
andb
dec
lret
inc
mov
jmp
fdivr
out
sbb
out
inc
daa
rorl
in
adc
cmc
add
xchg
into
imul
inc
xchg
orl
jo
mov
xchg
dec
pop
dec
or
cmpsb
sub
and
std
adc
dec
ja
adc
out
inc
rcll
dec
adc
or
mov
xor
inc
sbb
fidivl
sub
add
rolb
arpl
mov
sub
sbb
out
jg
cmpsb
jle
pop
jnp
insb
or
or
fdivrl
xchg
mov
lock
cmpsb
jge
imul
in
pop
sbb
iret
pop
jae
jmp
lret
push
mov
mov
lret
loopne
pop
std
jne
push
pop
scas
xor
data16
cmp
loop
sub
adc
jge
mov
movb
pop
mov
push
popa
or
add
or
push
popf
pop
dec
inc
shrl
mov
sarb
mov
xor
lret
jmp
pop
mov
negb
sbb
and
repnz
enter
add
xchg
push
cmp
into
xchg
stos
jp
mov
cmp
xor
rorl
std
fidivrl
fs
adc
ja
lcall
shll
ds
inc
mov
fldcw
mov
and
mov
ficoms
pop
testb
push
es
cmp
js
mov
loope
push
cmp
mov
inc
popa
or
daa
clc
push
or
sarb
xor
mov
rcll
flds
fxch
xchg
sarl
adc
cmp
adc
dec
mov
mov
inc
in
mov
lods
xchg
scas
gs
adc
call
sub
mov
jmp
outsb
add
fidivrl
push
jb
xchg
adc
fxtract
movsl
push
in
cli
xchg
pushf
xorb
push
or
arpl
out
popa
data16
cmc
mov
out
test
test
dec
rorl
jle
xchg
push
fucomip
push
push
into
aam
inc
dec
mov
xor
rcrb
sarl
inc
imul
ret
out
mov
mov
push
or
mov
ja
xor
in
popf
jge
cmp
stos
aas
mov
xor
push
rcll
mov
rol
sbb
out
into
icebp
push
inc
mov
pop
mov
pop
add
fsubrl
ret
pop
dec
out
repnz
mov
out
test
into
out
mov
faddl
xchg
out
lds
imul
jno
jmp
test
pop
mov
outsl
lahf
pop
sbbl
sub
imul
cmp
jb,pt
in
jmp
mov
xchg
fisubl
jl
inc
add
imul
xchg
or
push
sbb
mull
mov
sub
xchg
jnp
sbb
and
push
ret
pop
out
enter
inc
push
leave
xchg
pushf
je
sti
mov
scas
jp
shrb
sub
fidivl
cmp
push
sbbl
gs
mov
lret
popa
ljmp
jecxz
fdivl
popa
call
sbbl
sub
fmuls
lock
shll
mov
pushf
inc
jl
fists
idivl
jmp
xchg
push
dec
cmpsb
ret
rcr
mov
mov
sbb
fmul
jbe
xlat
jns
fcomps
push
mov
xor
mov
incl
mov
push
and
out
xchg
mov
lds
loop
mov
or
push
lods
rcll
stos
dec
jmp
adc
sbb
addr16
divb
sbb
in
and
inc
dec
popa
jbe
and
jo
push
js
pop
in
sub
mov
daa
mov
subl
mov
out
cmpb
arpl
es
pushf
pop
inc
sahf
mov
pusha
push
add
add
and
aas
inc
lods
std
ret
pushl
sub
test
mov
into
test
clc
in
fisttpll
clc
mov
lods
and
jnp
lds
push
inc
out
add
or
push
pop
mov
inc
ficoms
add
lret
into
push
inc
loopne
inc
pop
adc
sbb
shlb
pop
push
adc
jp
adc
subl
aad
fs
mov
fnstsw
stos
push
out
movsl
aad
or
or
and
lods
int
mov
hlt
fs
mov
jno
jecxz
mov
test
faddl
mov
lcall
mov
fists
pop
loopne
or
rcl
mov
mov
arpl
sbb
mov
xchg
dec
xchg
sbb
mov
inc
sub
std
dec
sub
aam
in
cmc
jge
or
or
inc
loope
das
clc
cmp
adc
jecxz
push
fnstsw
jae
insl
adc
dec
sbb
dec
shlb
add
int3
mov
ret
outsb
ficoms
dec
push
mov
push
mov
popa
jmp
rcll
icebp
or
mov
leave
xchg
repz
test
and
clc
dec
pop
jns
orl
dec
and
jns
mov
and
push
xor
dec
sub
outsl
les
lods
cmp
gs
ret
rorb
test
dec
test
bswap
idivb
lea
outsl
add
jnp
lcall
imul
test
leave
lea
and
mov
sar
mov
inc
in
xchg
push
fbld
inc
sub
cwtl
imul
cmp
xchg
sub
rclb
or
adc
lret
inc
pop
int
inc
loope
dec
ja
adc
data16
jge
push
pop
outsb
repz
jbe
fsubs
adc
lods
mov
sub
inc
andl
imul
xor
push
test
xor
mov
dec
lahf
gs
mov
in
sbb
and
subl
repnz
inc
lds
ret
mov
mov
insl
push
je
or
inc
adc
cltd
jg
dec
jns
outsb
cmp
jge
out
xor
int
js
mov
dec
adc
jmp
gs
adc
out
sub
test
fildll
lods
movsb
insb
sbb
jmp
mov
add
shll
pusha
jmp
push
jmp
lds
shlb
mov
jl
cmp
lahf
push
pop
mov
mov
ficomps
dec
push
mov
mov
imul
cmp
call
movl
cmpsl
loop
sarb
mull
movsl
repz
pop
andb
xor
loop
sub
leave
pop
fsts
and
sbb
fdivl
mov
adc
lods
jbe
mov
jb
rcrl
jno
cmpsb
imul
dec
icebp
pop
mov
bound
out
ss
jmp
jbe
aaa
mov
xor
and
push
sbb
xor
sub
inc
call
or
std
clc
jge
dec
gs
xchg
push
add
popa
jnp
in
cld
mov
pop
fildll
mov
repz
iret
push
xchg
ja
dec
sub
jmp
mov
lcall
cltd
movsb
out
xor
bound
and
and
out
fwait
hlt
pop
or
push
pop
aad
and
lahf
inc
add
xchg
mov
in
add
add
scas
mov
dec
iret
sub
cmpsb
ret
xchg
inc
aas
jecxz
fwait
enter
cmp
hlt
mov
cmp
xor
xor
sbb
dec
and
das
repnz
hlt
nop
jo
testb
adc
fs
or
inc
pop
xor
add
popa
ds
int
xchg
xchg
mov
iret
mov
repz
fs
or
test
add
dec
sbb
fst
cld
enter
in
jbe
add
popl
sbb
jne
lret
js
pop
loop,pt
sbb
push
xor
sarb
pop
mov
cmc
mul
xchg
xchg
sbb
shlb
mov
dec
xchg
add
cmpb
push
jp
pop
loope
xor
sub
push
out
jns
fdivrl
lret
scas
or
pop
sbbb
pop
push
inc
pusha
add
sti
adc
xor
mov
cmpb
arpl
push
xchg
aas
ficoml
mov
out
pop
fdivs
or
nop
cmp
dec
imul
xor
fwait
sbbl
jg
mov
and
xlat
es
cs
xor
shll
mov
xchg
adc
cld
lret
in
dec
sahf
inc
sub
dec
bound
lock
pop
jge
mov
xchg
xlat
pop
push
stc
in
xor
inc
rcll
repz
jge
adc
mov
pop
dec
arpl
jg
jecxz
adc
mov
in
dec
jmp
mov
test
dec
sbb
lods
fildl
mov
jg
and
pop
imul
add
or
cmpsb
sbb
ss
repz
cs
push
add
mov
imul
inc
inc
movsl
stc
xchg
inc
jae
scas
xor
jle
inc
mov
pop
and
push
mov
xor
mov
imul
sti
pop
and
dec
in
test
ds
push
push
jnp
inc
cmp
ret
add
aaa
lret
inc
jmp
call
jne
or
js
pop
sub
iret
addr16
cwtl
pop
insl
sbbl
sbb
std
xor
ljmp
mov
gs
cmc
popa
repnz
and
sbb
jo
aad
mov
test
std
sub
cli
test
stos
iret
mov
push
imul
inc
test
cmpsl
mov
adc
push
test
mov
ret
fdivrl
stc
mov
leave
and
ljmp
push
push
pop
xor
bound
outsl
sbb
xorb
sub
adc
int
and
popf
lret
and
push
gs
jb
rcrb
imul
repz
mov
push
repnz
shl
pop
aam
out
in
add
stc
icebp
test
jl
push
xchg
mov
leave
mov
mov
push
jge
int3
mov
mov
or
into
popa
insb
sub
lret
push
dec
jl
xor
sub
les
lret
or
xchg
pop
mov
cli
xor
ds
aas
cltd
mov
std
add
xlat
fdivrs
stos
sbb
pusha
jae
push
std
xchg
add
aam
xor
pop
lret
into
dec
adc
fimuls
jbe
aad
inc
repz
mov
les
mov
jmp
xor
out
ljmp
mov
filds
mov
ss
mul
cmp
sub
imul
mov
xor
test
test
sbb
sub
mov
inc
mov
add
mov
std
aaa
rcrl
aam
sub
aas
ret
or
out
fcompp
push
cltd
jg
shlb
inc
out
sar
inc
shll
pop
clc
add
mov
pop
cld
es
xchg
imulb
lock
std
punpckhdq
sbb
dec
add
mov
enter
hlt
mov
stos
add
ljmp
xorb
lds
int
leave
push
pop
sub
pusha
arpl
dec
pop
mov
push
xor
test
pop
aad
test
xchg
mov
aad
push
lahf
fmuls
mov
sub
popa
ljmp
int
xlat
xor
lods
lahf
in
addl
xor
shrb
imul
loop
xlat
pop
sub
add
cwtl
xor
push
ljmp
mov
fisubrl
adc
daa
dec
iret
addb
outsb
xchg
mov
je
adc
sub
aam
test
and
ds
out
jb
push
add
inc
xlat
in
cmp
idivl
cmpsl
aad
lds
rorb
adc
mov
dec
or
sbbb
shrb
fstpl
test
add
in
dec
jp
rorl
cmpsl
xchg
roll
das
ss
cld
imulb
pop
inc
imul
fnstcw
testb
mov
dec
lds
js
daa
fwait
shll
dec
testb
jnp
cld
xchg
in
loope
push
inc
sahf
bound
push
inc
dec
icebp
sahf
jp
push
ja
cmp
add
test
nop
sbb
lods
jb
outsb
sar
lds
test
pop
stos
jne
std
jle
repz
jp
and
pop
repz
pushf
and
push
push
jae
push
mov
mov
inc
fidivl
ljmp
xchg
incb
sahf
sbb
ss
sub
outsl
push
imul
test
xchg
arpl
in
xor
ret
es
mov
jg
js
jbe
jbe
jnp
es
nop
call
rorb
aas
and
data16
pop
imul
sub
repnz
rcrl
jnp
rorb
enter
mov
loopne
add
lret
sbb
daa
fs
mov
ficoml
lret
fxch
addr16
adc
fwait
pop
enter
lods
lcall
mov
push
lret
adcb
sbb
inc
xchg
inc
adc
push
adc
es
push
cmpsb
mov
sbb
dec
loope
cmp
xchg
sahf
cmp
loop
imul
out
in
lea
or
data16
jecxz
xchg
dec
rol
leave
mov
sub
add
pop
movb
inc
lea
cltd
jnp
rol
or
insb
insl
fmulp
xchg
cli
pop
cmp
mov
adc
pop
jne
std
dec
mov
sti
and
mov
push
sbb
pop
sbb
lds
roll
pop
mov
mov
leave
inc
jl
neg
sub
nop
and
sub
int
dec
cmpsl
out
sbb
lds
xlat
jo
mov
rorl
or
sbb
outsb
int
inc
mov
in
jp
fwait
pop
and
loope
ja
in
sub
ja
sti
add
sub
movsl
or
or
call
sbb
sbb
decl
loopne
scas
adc
pop
std
lcall
fdivrs
sbb
xchg
stos
pop
jae
lret
sub
outsl
mov
cmp
jne
lahf
xchg
add
mov
fidivrs
sbb
das
aam
add
mov
mov
pavgw
cmc
or
adc
jnp
mov
cmp
out
jae
gs
xchg
push
dec
dec
lret
xchg
sub
sub
std
aas
aaa
xchg
out
int3
mov
and
or
scas
into
rcr
vcvttsd2si
fldcw
mov
popf
or
rcrb
jne
xchg
and
dec
jne
pusha
or
stos
int3
mov
lcall
in
inc
lock
mov
ss
repz
ja
mov
test
ror
mov
xchg
inc
popf
pop
test
popa
sbb
clc
mov
xchg
adc
dec
clc
mov
aas
xchg
daa
imul
gs
jmp
push
push
loop
inc
stc
xchg
sbb
aaa
dec
jae
pop
aas
xchg
dec
and
xchg
and
out
inc
in
push
inc
cmp
inc
nop
jg
movsl
aaa
pop
aad
cmp
xor
mov
inc
outsb
pop
lahf
xchg
js
add
or
aam
pusha
in
sub
fmull
fsub
fs
test
and
cmp
cmpsb
inc
scas
mov
cwtl
shl
dec
add
or
sub
int
jns
cld
pop
icebp
inc
mov
jle
fs
and
ss
and
stc
xchg
or
inc
ljmp
or
icebp
stc
loopne
add
xor
sbb
repz
sub
mov
mov
jne
push
je
pop
pop
pop
jp
ret
mov
jne
mov
cltd
lods
sbb
mov
iret
movl
jb
sub
and
pop
push
cli
pop
lods
xor
mulb
adc
push
pop
rclb
out
leave
cwtl
or
fnstcw
or
mov
lds
lds
notb
add
fcoms
push
aas
rcrl
dec
loope
mov
add
jb
std
push
mov
xchg
cmp
incl
mov
dec
call
fistps
and
pop
cli
nop
sub
dec
in
adc
adc
adc
sbb
std
dec
pop
lcall
repnz
leave
sub
movl
jo
int
fldenv
popf
cmp
sub
movsl
aam
mov
sahf
andb
and
cmp
cwtl
inc
stos
push
inc
mov
jmp
aam
jl
aas
xlat
fsubr
fdivr
sbb
rorl
sbb
cs
cld
jo
popa
nop
lahf
adc
pop
cli
push
imul
sbb
xchg
and
push
push
or
js
push
adc
inc
cmp
and
ret
pop
and
outsb
cmp
xor
jg
add
adc
add
pop
ljmp
idivb
cltd
mov
sti
mov
dec
adc
or
leave
mov
or
inc
add
in
dec
push
inc
enter
mov
xchg
imul
clc
mov
sbb
mov
add
rclb
sbb
dec
pop
out
inc
sarl
push
je
mov
scas
bound
lahf
mov
jmp
enter
outsb
push
push
xor
xor
jo
dec
pop
test
mov
add
or
xchg
insl
cmp
gs
or
pop
aad
fisubrl
daa
cmp
repz
adc
in
movsl
dec
and
lret
push
jg
sub
cmp
je
xor
inc
orl
sub
ljmp
or
xchg
imul
xor
iret
or
adc
pop
jg
popa
mov
ret
add
dec
enter
leave
shlb
cmpsb
aas
iret
mov
dec
and
and
mov
or
pop
arpl
pop
lock
sub
icebp
push
and
xor
outsb
out
les
iret
aad
jge
and
pop
mov
rcrb
jbe
inc
xchg
jg
jp
scas
or
push
xchg
push
fs
sbb
or
test
jne
in
fstps
sub
test
mov
sub
dec
icebp
test
mov
add
add
or
arpl
xorps
insl
fstps
mov
inc
push
shlb
or
dec
shlb
xor
aaa
push
inc
pop
subb
loop
xchg
orb
cmc
mov
aad
and
out
stos
or
aam
jmp
sbb
imul
mov
nop
dec
daa
aad
popa
adc
pop
adc
add
sarb
jl
add
cmp
dec
rorl
call
nop
inc
insl
xchg
cli
testl
jo
jo
fadds
bnd
jg
mov
mov
push
stc
bound
orb
sbb
scas
insb
add
cmpsl
nop
pop
mov
stos
shrb
sub
aad
add
cs
orb
mov
jno
mov
sbb
sub
jmp
cmpsl
xchg
push
loopne
sahf
mov
inc
xor
and
cmpsb
in
imul
les
mov
inc
push
cmpsl
pop
inc
jg
scas
mov
pop
mov
cld
out
mov
addb
pushf
fistpl
adc
dec
push
in
push
push
and
mov
mov
add
das
outsl
jmp
pop
mov
xchg
adc
and
cmp
inc
sahf
aas
add
inc
adc
push
xchg
daa
or
xor
aas
push
jbe
ficoml
divb
adc
pop
imul
cmpl
fadds
out
out
jle
lds
stos
dec
stos
cmpsl
mov
int3
aad
lret
jnp
or
in
insl
push
fsubl
push
rcll
insb
ljmp
test
stc
in
test
jns
loopne
call
or
or
or
xor
xor
cli
mov
dec
mov
push
xchg
and
mov
and
stos
mov
out
jo
addr16
cmpsl
lods
test
test
aam
out
scas
or
out
mov
test
insb
ret
jnp
into
outsl
in
outsl
cmpsl
mov
jmp
sub
sahf
fimuls
cltd
aas
int3
and
pop
cmpl
jg
sub
adc
fadds
mov
pop
mov
sub
add
and
test
pop
out
lret
mov
inc
xchg
xchg
mov
jp
sar
mov
lock
enter
loopne
and
xor
ficomps
dec
pop
lcall
outsb
out
lods
frstor
xor
cmp
sbb
cmp
frstor
dec
lcall
daa
mov
mov
sub
cli
popa
test
sbb
mov
push
test
into
ss
pushf
rolb
or
insb
out
mov
jns
enter
cmp
clc
sbb
adc
jp
fmul
lods
cmp
mov
jo
inc
jmp
jo
lcall
sub
and
movsl
neg
sbb
ds
dec
pop
aam
rorb
add
jle
outsl
loop
mov
scas
je
adc
dec
rcll
pop
fistps
test
adc
pop
add
jo
inc
mov
mov
xchg
testb
fadds
pop
cmp
sti
inc
mov
addr16
cmp
dec
daa
jg
jmp
push
sbb
int
fldcw
ret
inc
gs
add
imul
push
pop
add
mov
icebp
sub
mov
out
dec
into
pop
xor
lods
popl
addr16
repz
es
movsb
sahf
xchg
bound
cltd
nop
push
lahf
into
add
and
popa
sub
arpl
push
fisubl
jno
test
sub
dec
pop
xchg
xorl
in
out
enter
iret
mov
clc
pop
dec
aad
dec
and
das
jnp
mov
ljmp
pop
je
or
lods
stc
sub
loope
pop
ljmp
ljmp
cmpl
subb
repz
adc
hlt
cli
xor
jne
mov
int3
loop
xchg
idivl
xor
pusha
jge
gs
sbb
iret
jne
and
jmp
fdivl
inc
xor
sbb
test
das
jle
add
inc
or
mov
sbb
xlat
scas
adc
inc
and
jmp
or
mov
pop
dec
dec
pop
jmp
movsb
nop
sar
pop
fucom
aaa
dec
in
fadd
push
lret
sbb
cmp
test
lods
mov
ss
sbb
inc
into
mov
mov
mov
xor
daa
adc
imul
hlt
sub
insb
pusha
cmp
and
cmpsl
pop
inc
sbb
cmp
andnps
jnp
mov
jnp
rcrl
loop
inc
cmc
movsl
adc
in
mov
daa
sahf
loopne
pushf
xor
push
add
sbb
mov
dec
rcrl
lahf
jnp
out
sar
jmp
dec
mov
xor
in
aaa
ret
adc
add
hlt
cmp
aad
inc
cltd
stos
into
rcll
ss
mov
dec
sub
or
adc
or
out
call
lock
ja
pop
jnp
leave
in
int
dec
shr
adc
xor
cmpsl
orb
orl
imul
les
jecxz
mov
ljmp
mov
ret
inc
js
std
iret
and
mov
pop
shll
lods
adcl
inc
mov
xchg
paddsb
sbb
and
mov
inc
ret
fcomp
pop
sbb
leave
sub
icebp
cmp
pop
repz
cli
and
sbb
in
cmp
push
xor
add
push
cwtl
mov
push
sbb
add
pop
mov
pop
adc
mov
sub
dec
push
xchg
add
mov
add
lret
or
jge
lds
fildl
loop
sub
adc
dec
jl
lods
mov
in
sahf
jl
jg
jg
cs
ss
sbb
and
idivb
rcrl
and
jg
int3
scas
sbb
in
sub
adc
mov
or
cmp
ret
insb
jo
cmp
lds
aam
leave
shrb
cwtl
stos
or
in
fisubs
pop
mov
sahf
dec
fwait
out
lods
sbb
sub
or
cs
push
aad
into
lock
rcrb
sub
into
xlat
jmp
lds
mov
shr
nop
test
sbb
js
jmp
jle
negb
iret
pushf
mov
push
aas
cltd
sbbb
or
ret
sub
std
push
inc
or
dec
arpl
push
pop
int
out
in
push
hlt
jle
fistpl
jl
or
not
jnp
jp
push
std
lods
in
pop
or
sbb
and
inc
sub
shr
pop
xor
outsb
mov
jmp
lods
xor
popf
mov
shlb
fcmovb
xchg
arpl
push
dec
cmp
aas
cltd
mov
mov
int
jnp
outsb
popf
mov
sub
mov
adc
call
push
aam
pop
pop
or
test
jne
arpl
divb
cmp
cs
push
sbb
in
repz
stos
fisubl
fs
repnz
pop
push
jecxz
arpl
imul
mov
sbbb
clc
outsb
cmpsb
mov
sbb
clc
xchg
adcl
cld
jge
fists
or
fadds
jle
xchg
leave
pop
sub
aam
pop
sub
rolb
cltd
lods
lods
and
sbb
pop
xor
xor
jnp
and
mov
sbb
sub
sub
lcall
adc
xchg
shll
dec
mov
adcl
jbe
mov
push
lods
daa
stos
mov
cmp
test
ret
xchg
mov
loope
push
jle
ja
adc
cmp
dec
pop
decb
add
mov
or
cwtl
jecxz
mov
pop
sbb
pop
loop
or
cmp
test
sbb
mov
rcr
xor
mov
aam
lcall
es
inc
xor
dec
das
movsb
sub
mov
xor
repnz
pop
dec
mov
out
sub
mov
iret
xor
mov
xor
xor
sbb
push
test
dec
sarb
and
and
inc
aam
sbb
out
orb
cmp
jl
fsubl
addr16
mov
adc
pop
push
in
jp
jmp
in
sub
cltd
or
lods
daa
sbb
outsl
addl
add
movsl
lods
loopne
push
push
add
jae
inc
jo
cmpsb
pop
sub
je
jo
dec
dec
cmp
mov
inc
pusha
popf
pop
xchg
add
jmp
inc
les
add
into
stos
mov
outsl
mov
lods
push
mov
in
dec
roll
fsts
jns
and
xlat
lcall
add
fldt
je
sbb
mov
xchg
outsl
jne
ret
call
push
cmp
fnsave
les
nop
lds
in
mov
sbb
xor
das
das
das
orb
jg
or
sbb
sbb
mov
inc
xchg
xor
std
rep
lds
push
push
rolb
mov
xor
addr16
into
pop
inc
lret
repnz
mov
xor
shrb
popf
sbb
add
pop
sbb
mov
shrd
mov
push
adc
mov
test
cli
std
call
cmp
daa
test
and
fstpt
mov
in
lods
add
cld
jb
outsb
xchg
lds
test
or
mov
cmp
in
add
xor
movsl
fcomps
call
fadds
add
mov
mov
ds
test
fists
mov
sahf
clc
fstps
xor
mov
fs
inc
lret
push
popf
in
sbb
out
outsl
out
insb
lret
lahf
clc
add
xchg
ja
outsl
aaa
fs
lock
icebp
nop
mov
dec
repnz
sbb
cmp
cmpsb
rcrb
mov
imulb
les
int
jno
fisttpll
sub
movsb
sbb
test
daa
push
jge
bound
jge
call
lods
fsubrs
xchg
jnp
sub
pop
pop
adc
sbb
adc
mov
sahf
push
add
popa
loope
hlt
sub
hlt
imul
dec
in
mov
lods
push
xchg
cli
lock
in
shrb
inc
test
clc
lods
int3
cli
pop
add
notb
sbb
mov
pop
psubw
call
js
jmp
imul
mov
inc
push
pop
shr
call
sbb
inc
push
movsb
test
test
sub
mov
addr16
xor
sbbb
cwtl
daa
add
jbe
cmp
and
sahf
sbb
push
iret
xchg
stc
sarb
inc
fs
lds
cmc
in
sub
xchg
xchg
rclb
xchg
xor
sarl
inc
push
mov
ja
imul
sub
ljmp
and
or
shlb
pop
push
iret
aam
cwtl
nop
cmp
nop
mov
xorl
pop
mov
and
cmp
jo
int3
xchg
jmp
mov
xchg
inc
outsl
xchg
mov
push
mov
pop
pusha
mov
adcb
dec
enter
mov
cmp
cwtl
jo
test
addr16
or
sbb
cmpsb
xor
dec
xchg
sbb
lahf
inc
pusha
scas
ret
pushf
cmpsb
jle
negl
pop
mov
rorl
pop
dec
aas
cs
lret
push
xor
cmpsl
pop
inc
jg
mov
xor
pop
test
sti
push
sub
je
mov
sbb
and
fs
add
or
mov
cmp
cmpsb
cmp
cmp
cmpb
mov
cmp
push
push
mov
adc
mov
dec
movb
xor
lds
in
cmpsb
sbb
or
sbb
call
pop
into
shlb
mov
popf
pop
or
cmpsb
test
je
stos
fs
push
int3
gs
pop
cmc
pushl
sub
mov
pop
js
mov
test
out
sbb
jns
fcoms
dec
test
add
loop
mov
jno
push
popf
xlat
pop
fsubl
sub
xchg
adcb
xchg
ljmp
call
mov
lods
cli
rcrb
cltd
pushf
dec
pop
cltd
sub
mov
or
jge
lret
push
sub
xor
xchg
sbb
push
cmp
mov
inc
test
aad
imul
xor
clc
push
faddl
sbb
push
xorl
leave
js
and
add
jp
fcoms
imulb
rolb
mov
and
fbld
mov
insb
mov
and
pslld
sti
mov
mov
cltd
jb
push
inc
sub
jne
add
and
pop
inc
xchg
and
insl
jecxz
sbb
add
ds
inc
mov
add
cli
xchg
jb
add
inc
push
movsb
mov
lods
jbe
mov
inc
loope
xor
mov
mov
cwtl
xchg
lea
inc
pusha
or
mov
push
jecxz
stos
arpl
inc
mov
smsw
cmc
rcrl
pop
sub
jmp
mov
popa
add
mov
fiaddl
dec
jbe
mov
dec
and
sub
loope
adc
inc
cld
sbb
std
adc
outsb
fs
inc
push
jbe
mov
inc
push
or
mov
cmc
adc
mov
sbb
mov
call
scas
sahf
enter
and
xchg
or
lahf
into
and
jecxz
aad
inc
add
pop
or
and
and
into
iret
mov
inc
je
push
out
xchg
xor
out
pop
cmp
movsb
fcompl
mov
outsb
push
mov
pop
es
dec
pushf
jns
iret
outsl
imul
leave
cltd
shrl
cld
subl
cmp
jne
mov
lcall
xchg
mov
aad
pop
sbb
and
lea
stos
lods
cmp
fs
mov
rorb
pop
je
push
lret
push
sbb
mov
std
cltd
test
loope
add
lcall
or
dec
xorb
movsl
cmpsl
pop
adc
mov
dec
push
and
test
xor
mov
rcl
loope
xor
cmp
adc
out
pop
push
inc
mov
cmc
rcr
inc
ss
sahf
pushf
in
fwait
decb
pusha
repnz
test
dec
shlb
sahf
int3
lahf
mov
int
pop
jecxz
inc
out
or
cmp
mov
into
lret
hlt
push
int3
cli
inc
mov
leave
mov
or
sub
mov
fcoms
aaa
sub
lret
outsb
mov
xchg
sbb
mov
addl
fldenv
mov
mov
add
test
pop
mov
xchg
and
in
push
push
pusha
addb
mov
fnstsw
outsl
stc
lret
cltd
mov
popa
fcomi
in
jecxz
jb
into
dec
jle
test
mov
adc
scas
xlat
jns
mov
lds
cld
ja
inc
xchg
out
insb
push
dec
test
push
popf
pop
insb
inc
int
jae
imul
add
sub
mov
xorb
push
add
rcll
shll
enter
enter
xlat
cli
int3
shll
xor
sti
dec
xchg
leave
adc
in
ljmp
nop
in
push
sub
fcmove
ljmp
jp
icebp
cmc
mov
mov
out
and
das
xchg
push
ret
stc
fdivrl
and
xchg
shrl
cmc
pop
mov
inc
cmp
outsl
out
pop
stc
cmp
mov
lret
std
pushf
xchg
or
dec
sbb
mov
das
sbb
nop
call
pop
xor
ss
std
pop
rcrb
scas
xor
je
sarl
in
inc
adc
jecxz
movsl
mov
add
outsb
sbb
mov
and
ljmp
xor
or
cmp
push
in
ds
test
ljmp
loopne
stos
insb
leave
sub
cltd
lret
inc
outsl
mov
xchg
sbb
fsubl
subl
xchg
fistpl
xchg
push
loopne
es
in
mov
inc
mov
loope
aam
into
push
fistpl
and
mov
inc
xor
inc
stos
ss
notl
into
pusha
pusha
lret
or
sbb
outsl
inc
inc
rsm
sarb
es
pop
pop
iret
xchg
enter
into
mov
subl
daa
roll
stc
adc
xor
mov
sbbl
adc
add
mov
mov
adc
mov
movsl
inc
rorb
test
stos
pushf
test
pop
ret
cmp
je
jp
fmuls
js
daa
repnz
pusha
sub
jne
insb
int3
and
stos
xchg
lret
dec
push
mov
push
es
divb
add
push
xor
adc
xor
pop
out
mov
mov
leave
mov
xchg
cmpsl
in
repz
adc
or
mov
aam
lds
jmp
js
jge
mov
shlb
adc
adc
dec
xor
lret
xor
inc
test
lock
dec
fdivl
stos
ret
sub
mov
clc
or
pop
sub
sbb
xor
jno
je
ret
icebp
mov
stos
out
adc
push
stc
xor
sub
xor
sub
push
in
inc
dec
popa
jb
insl
mov
adc
xor
loope
pop
jecxz
mov
ret
out
mov
xchg
js,pt
sub
mov
ud0
mov
inc
pop
test
mov
cld
popf
pop
scas
pop
and
sub
sbbl
into
lea
xchg
pop
dec
adc
mov
or
dec
outsl
sbb
or
pop
and
data16
call
and
es
jecxz
xor
jp
xchg
addr16
adc
popf
lds
arpl
fidivrl
xlat
mov
push
cwtl
jg
adc
cli
add
imul
mov
jecxz
mov
lds
jmp
js
xchg
xchg
mov
xor
inc
fdivs
push
adc
addb
clc
js
or
mov
cs
jnp
mov
push
adc
out
int3
jl
pop
push
leave
add
loop
lret
mov
enter
inc
cmp
js
bound
push
push
xchg
xor
adc
jb
xchg
cltd
in
fwait
cmp
ret
stc
xchg
ret
push
mov
repnz
movsb
aas
gs
mov
js
daa
add
sub
repnz
sub
ljmp
dec
dec
sub
or
js
push
cmp
dec
jp
cmp
int3
jb
pop
sbb
fcompl
push
cmp
lods
or
shll
mov
out
pop
jmp
sbb
jp
adc
mov
popf
sub
lahf
lcall
rcl
test
sbbb
hlt
bound
jle
pop
mov
jp
xchg
xchg
fwait
add
cwtl
aam
push
jl
les
xchg
loop
jo
cmpsb
leave
mov
fwait
or
xor
rorb
lods
aaa
xchg
fs
mov
xchg
mov
into
sub
subl
xchg
addl
sar
pop
adc
mov
adc
xchg
add
incl
and
clc
sub
scas
lock
addb
mov
jbe
jg
loope
and
pop
aaa
repnz
jmp
test
add
xor
fisubrs
dec
int3
sbb
mov
mov
add
push
aam
sub
repnz
int3
adcl
push
and
test
cmp
aad
or
pop
mov
adc
fxch
iret
xor
add
jge
push
push
incl
cmp
push
xor
pop
inc
inc
dec
roll
push
in
dec
push
jno
or
in
adc
xchg
loope
andb
ds
xchg
loope
xor
push
push
fadds
adc
daa
sti
les
aad
add
data16
xor
sbb
mov
mov
les
pand
jbe
jl
jnp
xchg
xchg
inc
js
aas
push
loopne
sbb
roll
fisttpll
jb
mov
xor
dec
cwtl
mov
add
das
in
cmp
or
and
mov
rorl
dec
mov
mov
adc
mov
jge
ret
jecxz
lds
add
add
scas
pop
and
mov
bnd
scas
sub
sub
daa
add
mov
add
push
stos
dec
add
jne
cld
ret
movsb
aad
pusha
int
sahf
stos
mov
loop
lods
and
lds
mov
nop
faddl
sar
xchg
shll
jb
jp
scas
pushf
out
xor
adc
aam
xor
inc
jecxz
push
mull
pavgb
adc
dec
mov
insl
and
aas
push
xlat
lea
xchg
mov
xchg
fisubl
add
sarl
inc
or
lods
jl
ret
rcr
or
jnp
mov
mov
xchg
roll
mov
int
jo
mov
inc
outsl
je
cli
lock
pop
aad
stos
je
push
mov
dec
ljmp
mov
rol
or
gs
lahf
lret
cs
lods
roll
je
xchg
mov
in
dec
neg
and
movsl
mov
fcom
pop
cld
mov
xchg
xchg
inc
xor
aaa
jo
add
inc
inc
in
std
or
and
divb
insl
push
ss
pop
neg
mov
push
lret
sbb
or
dec
mov
push
fs
shrb
lods
dec
pop
cwtl
mov
hlt
imul
pop
stos
in
js
push
or
mov
inc
int
loopne
jae
push
push
loope
lds
sub
in
jns
outsb
jmp
sar
lock
rolb
mov
cmc
sarb
fbld
pop
lea
jl
test
inc
or
pop
jbe
lock
addb
imul
iret
pop
cmp
mov
cmp
lahf
imul
xchg
mov
in
jo
cmp
add
aas
inc
sti
imul
sbb
rcrb
cwtl
lods
mov
xor
shrl
bound
sub
rcrb
and
test
aaa
sub
fidivl
push
adc
sbb
loope
test
jne
daa
lret
nop
pop
lahf
loopne
fistps
out
add
in
outsb
mov
push
pop
js
icebp
sbb
mov
inc
rol
push
mov
or
mov
scas
push
mov
nop
in
je
jl
xchg
stc
cmpl
shl
adcl
inc
xor
outsl
aam
pusha
test
loopne
inc
jno
and
data16
rcrb
adc
lock
and
jmp
mov
movsb
mov
xchg
cli
repz
lods
rcl
leave
adc
or
fcomps
xchg
lea
add
sub
mov
mov
dec
cltd
mov
jg
inc
out
lds
cmp
sbb
bound
pop
pop
in
mov
dec
jbe
outsb
ljmp
adc
insb
sub
mov
out
xor
pop
std
scas
mov
call
jnp
int3
push
push
xchg
aaa
leave
mov
inc
out
pop
pop
fiaddl
lahf
jecxz
testb
push
mov
shr
test
cld
add
xchg
popa
xchg
outsl
or
mov
mov
filds
sub
pushf
pop
pop
js
xor
dec
iret
push
mov
add
inc
add
pop
movsl
inc
push
rorb
mov
jp
jge
lods
ljmp
jnp
xor
sbb
rclb
scas
movsb
dec
inc
xor
dec
xor
xlat
jb
mov
jo
sub
push
gs
inc
daa
xchg
nop
cmp
add
mov
xchg
dec
shrb
insb
adc
out
cmp
pmuludq
cmpb
fnstsw
cmp
clc
lds
lods
clc
movsl
mull
push
jecxz
scas
bound
fsubrs
sbb
push
pop
cs
sub
into
add
lcall
pop
mov
rol
mov
add
lcall
add
mov
pop
cmp
bound
inc
addb
push
bound
pop
mov
sbb
inc
xorl
sbb
xchg
scas
js
divl
xor
fimull
xchg
xor
dec
rcll
jmp
jns
js
sub
dec
mov
leave
cmp
cmc
cmp
jge
and
xor
repz
aaa
mov
in
mov
outsb
cmp
ficomps
dec
add
cmc
sahf
inc
cmc
jmp
add
jl
out
shll
jo
out
jb
sbb
mov
adc
pop
mov
sbb
in
pop
iret
mov
icebp
pop
pushf
push
lods
jle
dec
push
xor
push
dec
adc
out
ss
xchg
jo
and
xchg
loop
sti
mov
pop
and
pop
mov
sbb
int3
lea
jle
or
sbb
pop
test
pop
insb
jns
movsl
in
popf
and
push
popa
inc
in
test
clc
lods
push
xor
divl
sbb
inc
btr
add
push
push
ja
pop
sahf
pushf
jge
loop
test
ret
loope
or
lcall
xchg
std
fiaddl
imul
loope
popa
aam
cmp
loope
and
in
sbb
lret
sub
mov
rcrb
and
push
xchg
test
fstps
xchg
cltd
mov
ja
std
or
movsb
push
and
jb
ja
outsl
push
fldcw
or
push
aam
in
mov
mov
jne
das
mov
sbb
imul
cmpsb
mov
mov
gs
aas
nop
cmp
loope
xor
sub
pop
test
sub
mov
push
pop
adc
jae
ret
add
ficomps
xlat
shl
sbb
adcl
or
popf
movsb
iret
pop
test
push
sbb
or
cmpsb
imul
lods
add
mov
lods
cwtl
jmp
scas
xchg
lods
sub
aaa
and
nop
mov
aaa
imul
fdivs
push
dec
mov
push
push
pop
push
inc
imul
sti
ret
insb
jmp
test
test
dec
in
push
sub
int
aad
inc
sbb
ficompl
xchg
lea
jns
jmp
push
mov
xlat
fucomp
or
add
cmc
xor
jb
aaa
gs
mov
sub
jbe
cmp
and
xchg
mov
xchg
popa
vphsubwd
jge
dec
jecxz
and
dec
sbb
and
xor
xchg
inc
rol
pop
loop
mov
mov
fs
add
and
out
mov
daa
xor
adc
ret
mov
test
icebp
xchg
inc
xor
adc
and
fisubl
loop
jns
pushl
sbb
aam
icebp
mov
repz
aad
orl
imul
sarl
dec
int3
insl
and
aad
dec
xor
mov
pop
divb
adcl
adc
vcvtdq2pd
loop
in
xchg
inc
xchg
add
or
push
sub
cmp
insl
dec
nop
dec
pushf
mov
rcll
sti
fisubrl
mov
mov
int3
sub
dec
sahf
insb
daa
fldt
in
int
xchg
test
and
popf
jnp
cs
outsb
fldcw
ljmp
in
js
xchg
call
pop
push
in
ljmp
xor
sub
or
mov
out
frstor
ljmp
mov
jbe
clc
pop
xor
mov
sub
sahf
leave
loopne
or
rcrb
fwait
mov
sti
ret
call
pushf
mov
fdivrs
mov
dec
jge
add
das
cld
js
mov
jns
in
movsl
das
es
scas
out
rclb
cltd
movsb
jb
ret
xchg
mov
dec
add
mov
push
movsb
or
and
add
pop
test
scas
pop
cltd
xchg
cmpsb
js
fadds
xchg
jne
in
out
dec
hlt
add
push
sbb
adc
testl
push
push
adc
cmp
xchg
loopne
push
mov
lods
inc
jo
test
pushf
dec
scas
mov
sub
mov
pop
push
dec
pop
sub
hlt
ficomps
sub
xchg
xor
lods
xor
mov
add
inc
push
in
mov
shrb
bound
cltd
lcall
stc
aas
pop
jl
fstps
jns
stos
adc
push
and
jbe
xchg
xor
movsb
cmp
dec
or
jns
fisttpl
lods
shl
inc
push
lea
scas
loopne
jae
and
and
lea
fistpl
mov
aas
xchg
xor
adc
arpl
icebp
addr16
lea
and
adc
sub
sbb
mov
shrl
hlt
test
add
xor
les
stc
cmpsl
adc
pop
test
fdivr
cmpsb
mov
in
decb
inc
jmp
stc
sub
arpl
adcb
lds
loop
loop
aad
dec
mov
loop
flds
cmp
jge
iret
jecxz
stos
xor
imul
testb
jle
pop
push
fmul
dec
mov
fwait
movsl
inc
adc
fdivrs
or
in
mov
popf
pop
jp
mov
mov
enter
shl
lods
or
lahf
cltd
cmpsl
bound
xor
sbb
ljmp
cmc
aaa
scas
push
xchg
sub
mov
lret
mov
inc
fisttpl
lock
sbb
pop
pop
mov
ret
rcrl
jp
push
mov
push
push
pop
jne
sbb
xor
xlat
jg
mov
faddl
xchg
roll
mov
mov
jl
xor
imul
dec
nop
repz
test
add
pusha
pop
jecxz
aas
in
inc
enter
mov
repnz
inc
xchg
push
xchg
xchg
test
mov
push
mov
in
inc
stc
mov
add
jbe
or
fnstcw
inc
movsl
scas
loope
sub
data16
clc
stos
mov
and
jge
daa
test
sahf
push
sub
pop
add
addr16
mov
subl
loope
add
pop
mov
jne
cs
xchg
xchg
xchg
sti
sbbl
call
mov
xor
popa
sub
mov
jl
inc
call
sti
xlat
fstps
icebp
ret
sbb
push
sti
aas
leave
dec
aaa
jbe
push
js
fs
adc
lret
xor
cli
push
and
dec
pushf
jb
stc
xchg
mov
push
lock
aas
jne
js
out
inc
and
mov
loop
lahf
rcrb
popf
popf
loop
and
xor
pop
mov
inc
aas
mov
inc
repnz
rcrb
cmp
mov
jnp
mov
xchg
cwtl
jns
cmpsb
and
mov
sub
inc
mov
mov
jno
notb
or
arpl
shr
out
and
cltd
adc
insl
or
cmp
jecxz
aam
cmp
xor
jecxz
enter
movsl
mov
lods
xchg
fwait
bound
lcall
movsb
movsb
pop
sub
sbb
shrb
fistps
cmc
xor
repnz
push
lret
call
adc
xchg
jge
xchg
push
push
push
push
insb
and
sbb
scas
and
mov
jne
inc
shll
and
pop
nop
pop
push
jnp
mov
out
repnz
push
daa
xor
mov
dec
push
lret
sbb
add
pop
dec
inc
lock
mov
out
mov
movsb
push
mov
jae
lahf
adc
cmp
cltd
pop
mov
out
mov
mov
jg
cmc
mov
add
addr16
in
adc
adc
mov
cs
jmp
cltd
dec
cwtl
sub
jmp
sub
sub
das
out
sbb
call
xchg
mov
mov
mov
push
lcall
push
pop
mov
pop
or
add
xor
in
ja
xlat
outsl
bnd
mov
into
leave
push
aas
icebp
pushf
fisttpl
aas
mov
mov
push
rclb
lahf
xchg
ja
clc
push
pop
mov
in
mov
in
inc
push
outsb
add
push
cmp
movsl
aad
xchg
jle
lods
pop
lret
push
mov
outsb
or
dec
push
cld
ja
add
mov
in
out
xchg
cmp
mov
mov
mov
xchg
push
inc
aam
rcll
cmp
push
xchg
pop
loop
adc
out
mull
cmp
add
stc
push
jge
dec
popa
lock
push
and
pop
sub
neg
outsb
jmp
and
inc
mov
jo
pushf
mov
scas
dec
push
dec
inc
or
xchg
mov
jae
hlt
imul
inc
test
jl
stc
jae
pop
fs
sbb
ret
les
jno
xor
sbb
lea
xchg
clc
inc
mov
sbb
rorl
mov
sahf
negl
inc
xlat
enter
xchg
xor
mov
adc
jae
popf
jo
fcmovbe
inc
sbb
push
sub
xchg
scas
dec
js
test
hlt
inc
in
and
cs
leave
aaa
pop
jnp
dec
xor
cmp
mov
or
fdivrs
xchg
mov
cmp
and
insb
shrb
fimuls
insl
in
jb
dec
js
ljmp
cmp
shlb
scas
inc
mov
stc
rclb
mov
ret
adc
inc
lcall
daa
jo
fsubrs
adc
xor
sbb
jns
std
adc
xchg
fwait
or
xor
sbb
lods
add
and
fucom
mov
or
stos
sbb
sub
in
mov
es
dec
add
sub
cmp
adc
inc
mov
cli
mov
fisttpll
sbb
mov
test
stos
in
inc
imul
sbb
popf
xor
adc
out
cmp
jo
or
push
mov
ret
inc
pop
mov
icebp
icebp
cld
mov
dec
cs
mov
call
stos
andb
lock
xchg
outsb
add
inc
and
sbb
sbb
ds
cltd
mov
test
jbe
outsb
jnp
push
stos
shlb
jne
or
leave
mov
aad
or
pop
xchg
hlt
cmc
push
jmp
and
mov
jecxz
add
clc
mov
mov
xor
mov
decl
repnz
xchg
add
insb
pusha
clc
notb
addr16
data16
sub
sub
xchg
and
jnp
lahf
pushl
cld
cmp
adc
cmp
loopne
dec
add
cltd
into
ss
call
lods
out
cli
out
add
sahf
ja
jne
loopne
repnz
shrl
xor
jl
sbbl
adc
addr16
jo
push
imul
add
fisttpl
sbbb
rclb
mov
rcl
sub
test
cmpsl
mov
pop
mov
rol
dec
xchg
cmp
daa
les
xchg
popa
fcmovne
push
lock
and
or
xor
movsb
dec
jnp
or
pop
push
push
mov
sti
scas
std
and
xchg
ss
cwtl
cmpsl
jl
mov
dec
cmp
fsubp
or
and
outsb
lret
pop
out
sbb
int
pop
push
inc
or
dec
mov
repnz
xor
cmp
dec
xchg
out
inc
sahf
fs
or
or
cmp
pop
adc
je
in
mov
xor
push
push
in
add
bnd
pop
sbb
pop
adcl
mov
cmp
cmp
jbe
sti
enter
push
mov
daa
pop
lock
gs
outsb
cmp
mov
mov
arpl
into
mov
or
repz
mov
shlb
imul
xchg
jge
dec
sub
jno
hlt
repnz
ret
mov
sub
js
sub
pop
xchg
jg
mov
in
xor
mov
adc
arpl
push
mov
fidivs
inc
lds
sub
dec
sbb
lea
call
jl
xchg
and
rorb
addr16
jge
cltd
or
push
repnz
pop
fadd
sub
out
ret
or
add
mov
inc
push
lahf
imul
cmp
pop
adc
call
rorl
or
cmp
xor
test
mov
loope
jnp
jp
mov
sar
add
jg
xchg
call
pusha
movsl
jle
mov
mov
incb
cmp
push
dec
daa
outsl
shlb
mov
stos
or
pop
cli
xor
push
mov
test
into
xor
pop
int
cwtl
push
or
aam
cmp
sbb
push
sbb
adc
out
mov
dec
stc
pop
gs
and
sar
push
dec
test
xchg
inc
ss
jo
xchg
and
rcr
sarl
sub
movsb
gs
int
insl
mov
pop
lret
test
mov
jne
mov
das
sbb
pusha
pop
aam
test
ss
cltd
mov
jg
inc
mov
and
out
loope
aad
jge
fdivs
sub
sbb
ja
sbb
nop
push
push
iret
or
add
repnz
sti
outsl
lahf
pop
test
fidivs
mov
in
mov
cli
call
stos
stos
std
and
hlt
jne
in
aas
xor
arpl
ja
pop
movsb
push
test
aas
int
inc
push
xor
cltd
mov
and
mov
sbb
or
hlt
es
lcall
loope
pop
sub
pop
fs
loop
inc
inc
aaa
fdivr
stc
aas
psubsb
xchg
xor
mov
inc
jl
enter
cmpsb
lret
repnz
enter
sbb
mov
idivl
jnp
push
xlat
test
dec
cmp
xchg
xchg
jecxz
or
cmpsb
in
sahf
cmp
xor
add
push
daa
mov
jge
dec
and
ret
lret
inc
cmp
jb
fs
cli
shl
adc
dec
cwtl
mov
xor
enter
cs
cmp
sbb
or
nop
and
mov
into
pop
jg
decb
sbb
jns
mov
flds
fmul
sub
das
cmc
cmp
repnz
mov
jp
sub
jae
sub
loope
fsts
nop
pop
mov
adc
test
jo
cli
pop
pusha
repz
stc
xchg
sub
iret
or
add
jae
jnp
or
pop
push
add
cmp
dec
sbb
and
xor
std
inc
out
adc
dec
fcmovne
shll
ret
mov
mov
inc
dec
dec
jnp
sub
adc
sub
push
push
push
or
mov
add
jb
out
fildl
repnz
testb
adc
jnp
mov
cmp
cmpsb
into
xchg
add
inc
je
jno
cmp
mov
pop
sub
in
cmp
or
mov
push
cs
roll
imul
mov
mov
cmp
fwait
sarb
xor
sbb
test
bound
and
adc
mov
dec
movsl
ja
jo
dec
adc
push
dec
leave
out
and
push
or
jmp
ja
adc
sbb
imul
int3
mov
adc
sti
mov
push
dec
jmp
mov
out
sub
lahf
dec
mulb
ja
sbb
out
ds
xchg
jnp
mov
arpl
push
jp
loop
bnd
pop
jae
shrl
sbb
inc
insl
les
imul
jp
adc
sbb
movd
mov
mov
stc
xchg
in
ret
cmc
lods
insb
in
aas
xor
push
mov
jo
mov
out
or
adc
filds
mov
cld
cmp
xchg
push
sub
cmp
aas
cld
lods
and
repz
push
push
hlt
mov
ret
xchg
dec
mov
mov
cmp
xor
sahf
cmp
sahf
jecxz
test
enter
jle
loope
jp
push
cmp
aaa
fcmovnbe
jle
sbb
out
ljmp
sub
pop
scas
adc
jo
and
sbb
aas
test
fidivs
decl
cld
iret
je
popa
inc
cmp
jp
es
sbb
ja
repnz
mov
xor
xorl
push
mov
iret
rcll
xchg
test
test
jg
and
add
cmp
mov
pinsrw
mul
lahf
sbb
mov
mov
xchg
push
mov
enter
fmul
dec
adcb
sub
cs
pop
aad
out
adc
jo
add
int
xchg
sub
push
shll
jns
cmp
sub
cs
and
pop
mov
mov
shll
loopne
adc
pusha
xchg
add
addb
lods
inc
sub
and
mov
rclb
pop
dec
testb
fsubl
inc
or
add
fbstp
mov
sahf
xor
lret
sub
sahf
lcall
icebp
sub
mov
lret
sbb
inc
add
xor
mov
cmp
rclb
ror
frstor
xor
movsl
or
dec
xor
jae
jnp
arpl
mov
sbb
ja
or
add
mov
mov
add
test
fisubs
in
aad
push
jne
hlt
add
mov
mov
fs
jnp
xchg
scas
pop
arpl
sahf
xchg
mov
dec
add
popf
push
aas
enter
lret
test
stos
dec
fisubs
xchg
in
add
call
dec
or
das
jno
rcrb
jbe
push
pop
jno
decl
andb
sbb
ss
fldenv
sbb
in
out
mov
mov
add
subl
inc
ss
dec
mov
push
mov
scas
scas
inc
jns
mov
shlb
sub
fwait
roll
mov
ret
pop
shl
jns
fs
divb
mov
xchg
sub
adc
or
or
cs
repnz
out
mov
jecxz
mov
xor
adc
jmp
insl
push
adcb
xor
test
mov
pop
ds
lea
vhaddpd
mov
lcall
ret
sub
ljmp
aad
mov
rcrb
mov
cld
cli
dec
mov
arpl
rcr
out
and
aad
stc
lds
enter
scas
mov
enter
stc
inc
sbb
mov
mov
stos
adc
xchg
lret
sti
call
push
or
int
daa
cli
or
mov
jp
add
hlt
mov
fs
inc
addr16
mov
sahf
loope
jecxz
mov
dec
inc
jp
sbb
fcompl
mov
bound
clc
mov
mov
pop
cmovae
int3
pop
jge
mov
dec
ja
aas
outsl
and
rolb
mov
or
pop
mov
dec
arpl
dec
les
clc
xchg
out
neg
pop
aaa
aaa
imul
mov
aas
adc
add
subb
decl
lret
jecxz
xchg
fwait
push
cli
dec
outsb
cmp
testl
lock
mov
adcb
ret
mov
mov
or
xor
push
jb
pop
jp
data16
cmp
rolb
ljmp
mov
jle
cli
sub
or
int
test
mov
fdiv
stos
movsl
xchg
rolb
xor
loope
and
xchg
pop
push
sbb
mov
or
js
imul
jbe
jo
xor
insl
inc
shll
lahf
fidivl
clc
adc
add
js
in
nop
push
sub
pop
or
dec
inc
je
rcll
mov
push
sbb
and
es
pop
push
aad
sahf
into
xchg
aad
adc
push
push
push
pop
dec
push
aam
gs
add
testl
sbb
cmp
or
mov
cmp
xchg
mov
jbe
popf
or
loopne
loope
dec
out
mov
add
adc
add
fnstenv
movsl
mov
jge
cmp
lahf
fdivrs
adc
mov
xor
xor
jo
mov
cld
pop
add
aad
push
jno
sbb
cmp
jl
dec
mov
dec
jne
jmp
test
lcall
push
xchg
sarb
sbb
jp
hlt
js
sbb
stos
mov
lea
gs
sbb
call
mov
mov
mov
stos
adc
loop
lea
fdiv
fldl
sub
sub
out
loope
mov
pop
mov
in
sbb
cmp
jb
adc
xchg
or
add
cmp
dec
loop
inc
xorl
stos
shr
sub
or
or
mov
mov
xchg
cmp
fcoms
call
jae
or
ss
into
repz
mov
lods
adc
jae
sub
fwait
xchg
test
pop
mov
mov
aaa
ss
mov
sar
bsr
mov
jmp
fnstenv
fwait
xor
call
imul
and
xlat
ret
sti
les
fildl
call
repnz
fnop
or
push
fwait
movsb
mov
das
roll
pop
dec
scas
clc
sbb
pop
icebp
mov
cli
pushf
inc
int
jmp
mov
and
ds
imul
ret
call
cli
push
and
loopne
add
push
adc
rcll
push
in
jle
mov
inc
cmp
shlb
stos
mov
ljmp
mov
fadds
pop
ds
int3
shrb
imul
repz
das
inc
sbb
notb
cmc
add
cmp
add
insb
ret
cwtl
push
sbb
or
loopne
xor
add
fnstsw
insl
cmp
lcall
out
stos
int
in
lea
stos
icebp
lahf
lcall
or
test
cld
stos
cld
jp
ljmp
stos
push
scas
add
sub
outsl
jb
xor
sub
sub
dec
mov
jl
inc
xchg
sbb
fists
sbb
pop
into
std
lcall
inc
push
jg
mov
imul
push
out
sub
popf
loop
insb
rol
sbb
push
add
and
sub
sub
jnp
cmpl
stos
lret
xor
or
or
cmc
inc
cmp
jmp
xrelease
or
push
cmp
pop
inc
ja
imul
xor
pop
pop
bnd
idiv
push
mov
cmp
cmp
xlat
inc
dec
push
xchg
cmovbe
cwtl
test
and
out
cmp
or
fistl
push
out
aad
sub
jmp
jg
mov
mov
adc
shlb
dec
cmpsl
sti
out
dec
or
sete
mov
imul
pop
jno
into
push
pop
repz
adc
push
cltd
pop
ss
adc
repz
sti
and
add
ret
cmp
cmp
xchg
hlt
mov
xor
mov
imul
sbb
aas
cmp
shlb
jae
jp
nop
mov
xor
cs
pop
fsubl
xor
ds
lock
add
loope
sbb
xor
outsl
in
jge
mov
test
jg
lea
outsl
sub
fsubrs
cwtl
aad
mov
jmp
or
rol
push
popa
scas
jo
push
test
pop
in
jns
sti
fwait
pop
mov
inc
xchg
xor
sbb
inc
jp
add
pop
cld
lea
jmp
lahf
jns
addr16
jnp
add
or
jge
dec
test
mov
cltd
add
int3
add
das
popa
out
adc
jbe
adc
sub
or
fs
xor
dec
sbb
fstpl
shrb
inc
jae
fnop
clc
sbb
shlb
ss
mov
sar
pop
inc
test
add
add
icebp
xchg
cmpsb
and
lock
ds
negb
inc
inc
cmc
and
sub
push
loop
fimull
dec
aaa
lock
mov
adc
dec
enter
popa
and
test
leave
xchg
pop
les
and
gs
cmp
adcl
bound
fadds
int
sbb
lret
xor
or
sahf
xor
pop
mov
inc
cmp
inc
mov
jbe
test
mov
sahf
xchg
and
cli
pop
add
or
or
popa
js
stc
xor
cmpsb
mov
mov
into
sbb
insb
sub
adc
jl
adc
and
push
ret
aam
cwtl
fcmove
cmpb
test
mov
das
lods
movl
sti
inc
into
call
cwtl
pop
push
xchg
and
sahf
jns
lcall
in
cmp
push
sub
pop
push
rol
jge
ljmp
push
imul
jmp
int3
and
mov
jo
popa
add
cmp
sbb
repnz
out
pushw
call
lods
icebp
fidivrl
mov
ljmp
loopne
sub
test
shrb
mov
inc
xchg
push
cltd
xchg
and
call
inc
fsubrs
push
add
ucomiss
jmp
iret
jl
mov
rcrl
jbe
pusha
mov
mov
mov
cld
test
sub
addr16
xor
das
adc
or
iret
add
in
loope
push
jp
scas
inc
and
aas
sub
and
add
int
dec
sti
movsb
and
je
orl
sbb
xchg
cs
addr16
jmp
sub
mov
add
insl
push
ret
mov
dec
jnp
and
push
push
push
mov
adc
xchg
pop
mov
push
cwtl
int3
in
fs
sbbl
seta
arpl
lods
or
test
aas
pop
and
insl
xor
mov
ljmp
cmp
pop
dec
ss
mov
addr16
mov
inc
pushl
mov
sahf
mov
sbb
or
mov
adc
cmp
fidivrs
mov
gs
or
cmpb
mov
xchg
xchg
repz
xor
adc
ret
mov
add
icebp
lahf
push
scas
mov
mov
mov
popa
rorl
iret
fsub
add
or
outsb
mov
sbb
sti
nop
xchg
out
out
or
pop
sti
xchg
or
or
orl
and
or
out
xor
bound
pop
rcll
icebp
xchg
shrd
clc
test
daa
jnp
sub
imull
or
and
dec
dec
pusha
bound
mov
jnp
loopne
in
push
and
lea
test
imull
lds
jp
ret
xor
sub
inc
mov
test
jle
cmp
test
loope
mov
and
pop
test
sbb
adc
or
clc
repz
mov
fildl
xchg
mulb
dec
clc
mov
adc
xlat
push
jae
roll
jge
pop
and
fimuls
or
pop
shrl
add
int3
dec
mov
scas
stos
inc
mov
ljmp
pop
stos
sbb
data16
cmpsb
mov
cmpsl
mov
xlat
mov
out
outsl
sbb
pop
xor
fiaddl
cwtl
std
js
xor
cli
cmp
sbb
sbb
iret
mov
sbb
outsb
je
and
out
add
mov
mov
sbb
or
fists
repz
push
adc
dec
test
enter
lret
rcr
aas
enter
mov
cmpsb
fistpll
pushf
push
or
test
out
pop
ret
clc
or
movsl
xchg
add
sar
cmpsl
lock
int3
into
inc
nop
jae
fildll
jno
sub
daa
xchg
or
adc
or
push
jne
push
loope
mov
cld
popf
xchg
sbb
mov
aad
jg
adc
mov
dec
push
push
push
xchg
stos
shrb
shl
int
jg
in
cmp
xchg
test
adc
xchg
imul
jp
pop
mov
aas
dec
lods
fldt
std
ficoml
int3
adcb
insb
rorb
sbb
stos
pusha
sub
xchg
stos
stos
mov
fnstsw
sbb
mov
lret
dec
mov
sub
cs
dec
pusha
fsubp
mov
ret
mov
div
mov
outsl
mov
lcall
rorb
jno
fisubrs
push
cli
cmp
and
pop
lea
pop
push
jo
add
mov
jle
inc
pop
sub
sahf
int3
gs
add
sbb
add
xor
jl
in
sub
xchg
loopne
imul
in
jmp
push
dec
movsb
xchg
pushf
ret
add
into
cmp
sbb
shll
xorl
cmp
jns
and
lcall
popf
fs
and
xor
in
out
cmp
ficomps
or
or
add
adc
test
inc
js
xchg
sub
scas
fld
test
insb
mov
mov
cmpb
jmp
fildl
test
or
jl
push
mov
sub
mov
cmp
push
shrb
push
jns
cmp
fs
es
xor
jmp
and
movl
add
xor
dec
push
sub
mov
cltd
insl
push
lcall
fsts
lret
cld
cmp
mov
js
mov
shll
ljmp
in
sbb
pop
cmp
fnstcw
movsl
xor
pop
int3
cwtl
xor
pop
cmp
movsb
xchg
xor
test
pop
adc
lea
jmp
sub
je
sub
mov
fwait
or
cmpsb
add
xchg
pop
sub
mov
push
jl
xchg
lret
xor
adc
dec
jne
call
push
adc
popa
leave
add
je
cmp
push
sub
dec
into
mov
in
mov
fwait
ss
pop
xchg
loop
out
pop
addr16
int
mov
mov
pop
push
inc
out
sar
jne
insl
and
pop
mov
clc
jg
fidivs
in
inc
rorl
xor
inc
faddl
add
xchg
mov
cmp
jnp
cltd
and
push
or
je
out
jns
js
aam
enter
pop
mov
pusha
js
repnz
arpl
cmpb
popa
pop
in
inc
mov
lods
ljmp
std
xor
ljmp
in
repz
jl
outsl
jns
push
imul
sahf
or
mov
mov
push
jp
nop
pop
pop
movsb
aaa
shll
cmpsb
dec
cmp
jne
add
shrb
adc
pusha
out
sub
pop
adc
stos
divl
jno
sti
fadds
dec
es
xchg
cmp
pop
es
sub
inc
push
leave
jb
jo
je
cli
in
lahf
imul
mov
and
hlt
divb
fisttpll
dec
ror
test
call
pusha
jne
dec
mov
test
sar
test
push
call
jp
pop
shr
js
jns
jmp
call
call
sbb
add
add
les
xchg
add
add
fildl
jmp
jns
or
add
add
icebp
call
lcall
add
add
ljmp
rcl
push
call
jmp
add
add
jbe
add
push
ret
inc
jmp
jg
jmp
je
add
add
mov
jmp
dec
jns
rcr
mov
jmp
jge
add
add
rcr
jmp
ror
inc
mov
dec
add
jmp
ljmp
add
add
rol
mov
add
sub
call
call
add
add
stc
sub
jmp
dec
inc
mov
push
call
jg
pop
call
and
rol
jmp
test
xor
call
jnp
add
push
ret
test
clc
ror
call
jle
add
push
ret
mov
ror
jmp
js
or
sub
add
add
call
jb
les
test
mov
push
call
jns
pop
jmp
rcr
dec
stc
mov
sub
call
je
add
push
ret
dec
jae
sub
inc
add
push
call
jge
pop
jns
mov
jmp
stc
mov
dec
jne
push
call
jp
pop
test
mov
dec
int3
fdivl
cld
cmpsl
jp
leave
and
sbbb
or
mov
and
or
adc
or
test
xor
rcrb
movsb
adcl
ljmp
stc
nop
sti
xchg
sbb
int
aas
popf
and
into
inc
insb
or
and
sbb
cmp
pop
movsb
push
aad
pop
pop
insl
test
fwait
retw
dec
add
push
mov
popa
jns
inc
cmp
enter
jle
in
stc
stc
sti
xlat
imull
stos
outsb
push
lret
ljmp
ret
pop
lret
jle
add
jg
jo
adc
cmp
int
jg
js
mov
adc
mov
shlb
inc
push
push
movsl
pop
sbb
std
mov
mov
rclb
jae
or
or
push
lods
dec
pop
stos
cmpsb
cwtl
fistpll
addr16
test
mov
test
pop
int3
pushf
repnz
add
push
nop
push
add
jo
adc
stc
sub
or
adc
in
jo
jp
inc
jno
inc
add
xorl
sbb
ret
push
cmp
sahf
push
mull
cmpsb
ds
lods
ds
dec
pop
sbb
ret
addr16
imul
pop
cmpsl
fwait
imul
xchg
outsb
loopne
icebp
stc
dec
fidivs
inc
mov
jae
repz
jle
or
jo
cmp
xor
jns
mov
push
ljmp
ss
pop
pop
popf
es
xor
repnz
xor
sbbb
sub
cs
jbe
pop
loop
fwait
sbbb
sahf
lahf
sub
sub
jmp
insb
int3
sbb
sahf
ret
mov
push
cmp
inc
cmp
mov
insb
fstps
pop
push
cmp
gs
pop
in
ret
pop
fcmovnu
rorb
fwait
cmp
push
push
jae
in
into
loop
loope
lock
data16
ret
fmul
pop
ror
add
sub
repz
push
lcall
or
bound
clc
jg,pn
cld
pop
sub
cmp
lret
xorl
mov
faddl
or
mov
sbb
cli
je
movsl
andb
shll
test
call
clc
rcrb
sub
fildl
mov
or
aam
mov
ja
out
test
push
jno
test
xor
sbb
repz
lock
mov
dec
fsubl
sub
popa
push
cmp
stos
sub
or
cmp
add
dec
sub
sub
sub
scas
inc
mov
rol
inc
ljmp
dec
pop
lret
lahf
mov
xor
adc
sbb
nop
xchg
xor
js
and
aas
pcmpeqb
cmpsl
mov
out
jnp
and
movsb
mov
int3
inc
or
mov
or
or
scas
mov
dec
outsl
inc
lods
stos
out
sub
sbb
cmp
mov
xchg
out
or
leave
loope
push
into
aad
cmp
or
xor
mov
in
push
jne
leave
pusha
frstor
xchg
sub
cwtl
jge
add
lahf
pop
mov
jne
jecxz
ljmp
jecxz
ss
xorl
adc
insb
mov
xchg
test
dec
stc
push
cmp
dec
pop
mov
xchg
mov
lcall
in
xchg
cmp
push
or
je
in
jg
inc
lods
in
inc
push
mov
jae
outsl
subb
mov
lods
sub
add
loopne
inc
loopne
into
or
std
push
sbb
pop
je
sub
shrb
pusha
pop
push
test
push
lret
cmp
aam
repnz
mov
das
jp
sbb
xchg
and
jecxz
faddp
test
jno
push
adc
push
or
mov
dec
mov
inc
fisttpl
adc
iret
movsl
push
jmp
cs
pop
and
adc
into
xlat
xor
lret
sub
test
dec
fdivl
dec
popa
enter
jl
loopne
inc
lea
subb
mov
testb
dec
xlat
fs
dec
mov
mov
push
scas
dec
rcrl
push
jno
les
out
xchg
push
mov
nop
pop
stos
jne
cld
jl
int3
dec
dec
sub
jmp
add
xor
stos
dec
add
lret
sti
fsubrl
mov
mov
add
lods
push
roll
cmp
dec
mov
lock
adc
xchg
lds
bnd
fisttps
xchg
test
gs
test
mov
inc
mov
dec
jne
stos
fimull
and
int
push
es
jge
cld
clc
push
insb
jge
dec
cmp
push
or
sti
dec
push
cld
sub
loopne
in
dec
aad
jo
lods
mov
add
jb
mov
sbb
roll
cmc
and
cwtl
lcall
inc
dec
dec
mov
lret
mov
xchg
xchg
jg
imul
mov
xchg
in
dec
and
mov
aam
insl
sub
ficoms
xor
mov
jae
mov
cmpsb
xadd
mov
jp
pop
std
movsb
fstps
xor
or
fnsave
js
enter
mov
movsl
xchg
pushf
adc
inc
aad
dec
dec
outsb
push
ficomps
push
adc
mov
pop
mov
sbb
loop
jo
cmp
xor
mov
mov
stos
jnp
lock
sbb
lret
sub
and
fldt
lret
cmc
xor
xor
ret
inc
popf
mov
mov
pop
push
or
pop
sbb
mov
sub
add
lds
cmc
stos
jp
mov
pop
cmp
pushf
mov
gs
les
sbb
cli
scas
jp
xor
out
js
pop
imul
and
mov
cmpsb
push
movsb
push
ss
mov
jle
into
aaa
push
inc
pop
and
push
cmp
lahf
cwtl
bound
mov
test
sub
sbb
mov
xor
nop
sbb
xchg
sbb
push
dec
jo
and
scas
in
xor
pop
sbbl
xchg
es
xchg
jae
in
add
sbb
stos
dec
mov
pusha
out
xchg
push
sbb
les
in
or
push
imul
rcr
adc
push
sub
arpl
stos
pop
jb
std
xor
stos
xchg
push
mov
mov
mov
insb
dec
std
test
sbb
mov
dec
iret
pop
leave
mov
cmc
cmpsb
inc
aaa
leave
int
cmpsb
int3
cmp
je
fmuls
add
push
orb
mov
sbbl
bound
mov
add
add
mov
and
inc
jl
in
push
xchg
in
xchg
pop
xchg
inc
bound
jno
pop
cmp
orl
sub
adc
mov
cmp
test
aam
jae
push
add
sbb
sub
and
movsb
add
fcmovb
out
cmpsb
sarl
xchg
ljmp
cmpsb
lret
aam
xor
adc
daa
adc
lahf
sbb
sub
sbb
cmpsb
mov
outsb
cmp
mov
mov
popf
and
in
shr
mov
int
imul
outsl
ret
mov
in
or
ret
xlat
dec
movsb
lods
add
lahf
fdivrs
add
loope
dec
pshufhw
pop
sbb
jp
stos
mov
ja
push
pusha
sbb
in
ljmp
shlb
subl
xor
mov
and
addr16
adc
pushf
or
fdivs
data16
fdiv
dec
adc
pop
fildl
and
jne
ret
add
cmp
push
mov
repnz
clc
js
div
dec
sub
xorb
js
mov
icebp
lret
pop
daa
jne
jmp
and
test
test
ret
hlt
cmc
arpl
pop
movl
leave
int3
mov
adc
scas
jl
pop
hlt
mov
les
inc
jo
fwait
jae
jae
sub
fmull
sbb
xchg
data16
testl
int
sub
popa
cs
addr16
loop
push
cmp
lods
pusha
add
add
dec
dec
xor
test
mov
bound
cs
subl
add
push
or
cld
jae
xlat
inc
push
rcl
mov
xchg
or
jge
jne
mov
push
add
popa
xchg
adc
fdivl
pop
sahf
pop
cmpsb
cmp
iret
jmp
adc
imul
hlt
mov
add
aaa
loope
shr
movl
sarl
or
xchg
xchg
stc
mov
push
inc
adcl
lret
mov
cmp
shll
pop
in
popf
movsl
aad
sbb
jno
inc
lea
scas
cli
inc
inc
add
roll
or
sbb
xchg
xor
aam
xchg
femms
jo
jmp
dec
adc
xor
in
insl
add
sub
inc
and
mov
or
xor
push
std
mov
jne
pop
out
xchg
rclb
jmp
sbb
dec
cmp
jge
repnz
int3
and
mov
xchg
xor
and
and
pop
mov
std
loope
rcl
push
sub
and
addr16
sahf
and
or
push
and
dec
push
dec
inc
pusha
xor
sahf
pop
sub
lahf
cld
pop
jae
xchg
sub
add
jae
dec
lret
jno
inc
pop
out
les
mov
cmp
jecxz
lea
shrl
enter
jbe
lcall
pushf
subb
orl
and
scas
bound
andps
cmpsl
cmp
xchg
pop
push
or
ror
clc
js
inc
inc
dec
fisttpll
je
inc
aad
les
cmpsb
push
sarb
stos
pop
in
sub
int3
sahf
fucom
mov
pop
mov
push
mov
pop
rcr
cmp
pop
sti
add
nop
cmp
sahf
push
adc
dec
jge
pop
adc
std
mov
cmp
aam
xlat
jbe
fisttps
lcall
clc
rcr
shlb
es
and
ja
xchg
inc
leave
cmp
loop
and
fcomip
dec
pop
push
xchg
jo
jns
shr
hlt
popa
out
clc
clc
add
sub
dec
dec
ljmp
push
loop
sub
cmp
ret
adc
cltd
and
xchg
insl
in
push
lods
inc
ss
clc
and
mov
or
sbb
arpl
cltd
xchg
dec
push
mov
sti
lods
xchg
dec
adc
mov
sbb
sti
and
enter
jp
adcb
lea
adc
xchg
sbbl
mov
out
add
add
push
or
sub
imul
pop
testb
jne
aam
xor
leave
and
pusha
in
xchg
push
stos
enter
imul
insl
imul
vmovmskps
lods
mov
dec
bound
movsl
add
out
adc
addr16
out
cmp
sub
int3
dec
adc
es
push
or
shr
out
in
mov
shrb
dec
sub
mov
stos
mov
lahf
outsb
xor
scas
leave
jmp
xchg
cld
xchg
shr
std
icebp
cli
adc
xchg
cmp
pop
fnstsw
xchg
outsb
push
movsl
push
xchg
rol
jp
stos
xchg
cli
movd
loope
dec
cmp
mov
inc
das
xchg
pop
sbb
rcl
in
mov
adc
sbb
xchg
out
sbbb
dec
pusha
mov
jp
sub
adcl
xor
hlt
sub
adc
test
stos
cli
loope
out
inc
daa
push
jmp
sti
jne
or
pushf
lea
lea
mov
pop
shlb
lods
out
inc
sbb
test
cmp
cmp
int
outsb
xchg
push
js
scas
inc
push
stos
mov
mov
sbb
inc
mov
sbb
add
xchg
lods
push
adc
xchg
cmpsb
mov
sbb
dec
add
pop
add
aam
in
jb
jge
mov
das
xlat
nop
add
push
arpl
cli
les
push
out
mov
sbb
push
or
pop
cmp
xor
xor
sbb
jo
mov
mov
std
inc
fcomip
test
je
fiadds
fimuls
lea
mov
and
outsb
inc
je
jne
jle
mov
mov
inc
push
punpckhdq
push
insl
rolb
cmp
fwait
mov
pop
mov
loopne
enter
test
cmp
inc
inc
push
test
sbb
and
int
mov
movsl
idiv
shl
or
mov
push
pusha
and
inc
xchg
jmp
cmp
clc
inc
dec
div
jp
outsl
loope
dec
cmp
aaa
xchg
shll
call
adc
lods
sbb
pop
rcrl
dec
adc
inc
cmp
mulb
movsl
mov
sbbl
mov
hlt
pop
or
cltd
lock
mov
cwtl
xchg
cmc
ja
je
outsb
call
ret
lea
testl
outsb
dec
andb
mov
xchg
mov
add
or
iret
cmpsb
or
mov
xchg
lods
push
and
sti
cli
pusha
mov
sti
push
xchg
pop
loopne
or
hlt
cmp
adc
fcompl
aaa
push
jmp
dec
clc
iret
dec
jnp
jle
andb
xchg
inc
leave
icebp
push
lret
js
mov
dec
dec
cwtl
dec
mov
mov
inc
jno
ljmp
pushf
adc
fildl
mov
mov
incl
mov
mov
hlt
scas
pop
dec
addb
mov
js
test
push
movsl
add
outsb
adc
dec
or
aaa
sahf
outsb
stos
jge
jle
mov
add
into
out
ficompl
xor
push
pop
sub
mov
mov
fisttpl
into
adc
xor
dec
or
push
sbb
sub
negl
int3
xor
stc
rcrl
cmp
shl
push
sbb
or
and
push
push
mov
sub
mov
mov
pop
push
fldenv
rcl
dec
xchg
adc
sub
jbe
pop
xor
mov
cmpsb
jmp
mov
scas
push
xor
mov
sub
dec
lcall
aad
pop
cwtl
xchg
mov
pop
out
lret
cs
mov
mov
pop
dec
mov
shl
outsl
and
mov
shrb
fldcw
mov
popa
cli
mov
and
andb
cmp
shrl
outsl
sar
enter
enter
jmp
icebp
stc
packuswb
xchg
push
stos
mov
mov
stos
je
insl
decb
or
inc
inc
add
repnz
add
or
popa
xchg
xchg
and
icebp
pop
xlat
and
lock
mov
test
ds
pop
jecxz
xlat
shrl
lods
inc
in
cmpsb
xchg
out
inc
popf
movsb
add
push
xchg
outsl
cld
inc
adc
mov
cltd
pusha
push
out
mov
xchg
dec
jbe
push
xor
lret
sub
repnz
jle
repz
dec
pop
js
inc
inc
and
leave
arpl
dec
sti
adc
push
adc
nop
pop
aaa
cmp
cmpsl
xor
shll
mov
es
das
sahf
dec
sbb
arpl
loope
jbe
mov
loope,pt
out
in
ds
mov
ljmp
cs
add
add
pop
mov
dec
jnp
sub
sub
pusha
mov
xchg
add
push
xchg
sbb
inc
ret
add
or
int
sub
ffree
push
scas
adc
insl
lea
push
sub
dec
push
jmp
popf
pusha
cmc
jb
mov
daa
and
lcall
push
nop
or
fdivr
sub
out
mov
shll
adc
pop
pop
gs
in
xchg
in
in
dec
mov
xor
outsb
mov
outsb
arpl
fdivs
or
sub
rol
mov
rcl
popa
ror
mov
cmp
fsubr
aam
xchg
test
dec
cmc
or
inc
sbb
push
jp
bound
es
jae
subl
xor
or
out
out
bound
push
add
out
pop
pop
adc
xchg
repz
fldcw
lahf
inc
or
scas
adc
sbb
into
inc
adc
dec
sub
stc
push
cli
xchg
adc
push
mov
sbb
dec
lret
xor
aas
jbe
addr16
cs
adcl
out
xchg
jno
out
loop
mov
xchg
cltd
dec
mov
add
icebp
test
loope
insl
mov
lahf
push
ret
xlat
inc
add
repz
inc
push
xchg
mov
dec
push
cmp
and
xchg
test
dec
push
push
sub
clc
sub
or
dec
je
not
popa
sbb
pop
cmpsb
adcb
je
aaa
mov
add
jl
mov
fsubs
hlt
in
fidivl
jle
cmp
bound
in
scas
ja
and
idiv
jge
inc
clc
outsb
mov
into
add
sub
enter
sbb
push
push
aam
and
cmp
lock
call
in
pop
sti
or
jo
inc
scas
out
and
pop
cltd
mov
cmpsl
pop
mov
or
inc
push
pop
mov
sahf
mov
mov
and
cmp
clc
sub
mov
pushf
imul
jb
and
sbb
roll
adc
fs
jae
pop
xchg
inc
jno
add
pusha
adc
dec
and
mov
add
sbb
sub
sbb
fisubrl
jnp
loop
je
fwait
jae
mov
pop
push
dec
ret
and
and
mov
jae
enter
xchg
adc
jne
mov
add
mov
cld
out
stos
sub
pop
in
mov
fimuls
imul
sub
loop
add
lahf
mov
pusha
dec
out
lea
mov
divb
std
cli
out
shufps
lods
jecxz
test
je
push
scas
cmpsl
into
jge
push
fcmovb
fisubrl
popa
jp
and
inc
aad
dec
dec
dec
movsl
sub
push
stos
scas
pop
cmp
in
xchg
lock
jmp
pop
sub
inc
push
sti
mov
push
dec
or
mov
fbld
pop
or
dec
cmpsl
dec
test
add
movsb
lods
popf
ret
cmpsl
std
enter
ljmp
nop
cli
push
mov
pop
lds
loop
mull
push
and
ret
addb
inc
loope
push
inc
cmp
loope
push
adc
ljmp
imul
cs
std
dec
or
aam
incl
cmp
sub
push
or
pop
jge
std
icebp
sarb
inc
pop
mov
ljmp
shrl
mov
cs
lret
jb
dec
jae
mov
sbb
test
pop
repz
mov
xchg
sti
sbb
mov
fildll
adc
in
call
mov
xchg
clc
ficoml
push
insb
adc
xchg
jo
add
mov
cmp
push
push
bound
arpl
ficompl
cmpsl
jge
jne
jecxz
cmp
xlat
pop
sub
jo
movsl
aaa
pop
clc
mov
sub
fs
fdivrp
cmp
sahf
and
jecxz
orb
and
ficomps
rclb
sbb
cmp
and
sub
arpl
addr16
xor
test
cwtl
mov
adcb
cmpsb
inc
popa
sbb
mov
test
cmp
scas
add
xor
pushf
dec
out
insl
sbb
lcall
dec
cmc
jg
sub
push
insl
fcoml
mov
ljmp
lret
xor
adc
xchg
loopne
shrb
lret
jle
sti
lock
mov
lcall
call
cmp
inc
jae
dec
loopne
sub
insb
cmp
dec
lret
ret
rclb
arpl
add
and
test
mov
aad
mov
or
jbe
push
rcl
push
clc
cmp
dec
jl
pop
nop
push
ret
pusha
lods
das
pop
pop
and
jb
xchg
daa
lcall
imul
lods
mov
push
add
outsb
test
aaa
cmp
xor
mov
pop
cli
or
cwtl
mov
js
mov
mov
jns
arpl
repnz
mov
pop
mov
jg
mov
les
or
inc
std
push
rclb
xor
popf
outsl
fisubs
inc
add
jne
mov
push
imulb
mov
push
movsb
fsubp
adc
js
in
les
repz
fs
cs
sarb
shl
fucomp
or
inc
ret
call
pop
dec
leave
les
fs
addr16
fs
iret
or
dec
ficoms
dec
js
and
fwait
add
orl
testl
fwait
das
movl
out
in
out
aas
pop
mov
xchg
sub
sti
dec
and
ficomps
xor
les
push
scas
jae
lahf
imul
arpl
test
fmull
dec
imul
mov
fadd
push
gs
orb
jge
jns
sub
out
test
or
out
and
sub
pop
repz
scas
xor
insb
int
xor
push
pop
and
repz
ret
cmp
or
mov
cltd
sbb
inc
push
mov
scas
pop
test
inc
stos
sbb
mov
rorl
mov
lds
mov
out
insl
xor
sub
pop
cmpsb
pop
mov
jb
ret
mov
push
push
lods
jnp
insl
popa
stos
pop
in
jmp
pop
mov
xchg
and
in
hlt
sti
call
mov
push
cmc
sbb
xchg
gs
push
fs
sahf
and
jne
adc
lea
cmp
inc
into
ret
loope
fsubrs
jle
dec
mov
movsl
in
ffreep
mov
pop
push
cmp
lcall
mov
lret
inc
mov
or
xchg
pop
pop
mov
sti
push
cmpsl
outsb
inc
repz
popf
and
mov
add
pop
jo
es
fcomps
rcr
stos
test
in
push
sbb
ljmp
fs
addw
sti
mov
sbbb
stos
mov
test
fldenv
ret
in
mov
daa
sbb
add
test
mov
xor
shl
mov
adc
xor
mov
cmpsl
inc
mov
ljmp
push
sub
out
sub
mov
jge
ljmp
imul
ret
jecxz
or
push
jg
xchg
adc
sub
add
mov
push
jge
inc
nop
sub
mov
add
test
dec
stc
nop
xchg
mov
stos
xor
mov
mov
ret
loope
xchg
fistl
mov
or
mov
pop
lds
inc
ds
push
mov
leave
leave
neg
cltd
pop
imul
stos
fdivrl
data16
jle
inc
sbb
add
mul
xchg
lods
or
loope
jnp
fsubr
push
mov
and
jl
ja
mov
or
int
sbb
mov
aam
sub
pushf
hlt
lea
add
flds
and
scas
jle
pop
pop
mov
cmp
fcomip
ret
ret
push
add
jb
jb
daa
lds
jmp
xor
aas
loope
xor
or
add
sbb
inc
or
js
fstp
jp
cmp
sbb
in
orb
lret
mov
pop
aaa
insl
dec
xor
insb
sub
jae
scas
ja
adc
sub
jbe
nop
fwait
sbb
ret
push
jg
in
aam
ds
int3
movsl
data16
inc
push
pop
mov
push
adc
dec
xchg
icebp
repz
inc
xchg
in
jae
add
inc
rcrb
sub
xchg
add
xor
pop
stos
testb
cmp
lods
mov
sub
mov
inc
in
xor
mov
jno
or
pop
and
js
push
mov
adc
imul
mov
popa
lea
mov
sub
xor
dec
outsb
xchg
aad
pushl
in
sbb
icebp
xchg
inc
inc
jmp
repz
test
cmp
and
mov
jbe
or
adc
aad
dec
shlb
test
shlb
pop
xchg
popf
jecxz
jle
mov
ret
or
inc
loopne
inc
mov
pop
and
mov
pop
and
fidivrl
push
mov
in
mov
cmp
jo
xchg
sbb
mov
nop
or
adc
fwait
out
ja
insb
push
adc
and
gs
addr16
mov
bound
dec
pop
add
in
int3
in
dec
out
and
push
lret
js
outsb
cmpb
xchg
cmp
filds
aas
dec
mov
sbb
out
pop
test
jne
mov
pop
outsl
mov
adc
insl
dec
shrb
or
leave
mov
jo
push
lea
adc
cmp
pop
shrl
cld
add
in
lock
sahf
fdiv
imul
adc
aaa
pop
idiv
dec
pop
pop
inc
in
sub
clc
cmp
popa
jno
loope
mov
cmpsl
loopne
mov
shrb
and
xor
scas
test
iret
arpl
add
xor
lods
adc
push
movsb
daa
xchg
ss
mov
shl
pop
clc
mov
mov
and
out
mov
inc
stos
or
mov
xchg
popa
inc
mov
sub
daa
pushf
enter
mov
xchg
addr16
call
cld
fwait
sbb
mov
pop
push
xchg
dec
lret
in
add
test
pop
test
rol
dec
lock
pop
js
jae
sbb
int
hlt
stos
sub
push
mov
je
mov
add
clc
ja
fmull
jnp
loop
add
xchg
add
stos
add
addl
jo
cld
jnp
fsubs
xchg
movsl
mov
aad
xchg
imul
sbb
decl
outsl
pop
cmc
ret
sub
add
jb
fwait
inc
aam
lea
scas
pop
mov
adc
pop
push
mov
xor
ds
outsb
push
test
push
mov
jp
fld
jp
push
mov
and
xor
lods
adc
divb
es
cmpl
fwait
fwait
lret
adc
sbb
scas
out
cs
arpl
cmp
dec
out
andl
sbb
fldenv
nop
lea
mov
inc
push
imul
and
xchg
mov
dec
or
out
xor
inc
mov
pop
lods
fsubrl
ljmp
cmp
pop
insl
xchg
xchg
shrb
inc
aad
pop
jge
push
jnp
loope
pusha
pop
xor
xchg
les
dec
mov
pop
stos
fildl
int3
adc
out
cmpsb
out
push
in
shlb
nop
lret
jne
mov
mov
sub
scas
shlb
pop
xchg
dec
cmpsb
aad
bound
stc
int3
roll
lock
scas
or
cmp
dec
add
jne
inc
mov
ds
mov
jno
adc
pop
xorb
pop
fstps
inc
dec
mov
xchg
mov
cld
loop
cmp
jecxz,pt
mov
jl
in
ret
adc
jnp
xchg
xchg
repnz
sub
sti
pop
jnp
pop
outsb
arpl
lcall
adc
and
arpl
inc
jg
xchg
aam
loope
ret
addr16
out
addr16
xchg
jg
push
push
pop
pushf
aad
int3
addb
pop
add
faddl
nop
orb
negb
mov
mov
int3
lea
fwait
push
xchg
cmp
adc
cmp
stos
add
jbe
inc
stos
lcall
push
or
in
pop
and
xchg
jle
and
jae
and
jno
js
shlb
or
notl
lock
xchg
addl
xor
xor
imul
gs
and
inc
fcoml
mov
jl
inc
outsl
xchg
jp
xchg
movsb
lret
adc
cmp
add
dec
repz
addl
fcomip
repz
cmp
repz
add
nop
test
scas
icebp
es
inc
inc
rcrl
jmp
rorl
jp
xorb
mov
idivl
jmp
test
and
lods
mov
sub
xchg
lret
xor
mov
data16
adc
sbb
addr16
adc
es
xchg
ret
stos
addr16
lds
lahf
cmp
cwtl
sbb
mov
repz
push
push
jmp
cmpl
scas
ja
scas
and
sti
subl
or
test
mov
daa
push
je
mov
add
test
leave
icebp
fdivrl
mov
dec
je
int
sbb
push
pop
cmp
xchg
cli
insb
jbe
adc
in
mulb
ret
icebp
hlt
jne
push
cmpsl
push
cltd
mov
push
sub
and
fidivrs
add
rcrb
clc
arpl
mov
and
push
cmp
cmpsb
movsl
jne
sbb
and
push
test
insl
rclb
shrb
repz
js
out
mov
std
cmpsb
jnp
es
inc
fisttpll
pop
and
fisubs
inc
mov
sbb
mov
and
in
hlt
test
mov
out
shl
pushf
pop
mov
ret
push
push
jl
cwtl
movsb
incb
bnd
xchg
lret
lret
ljmp
jno
mov
repnz
jle
mov
cmp
push
sbb
dec
add
xor
mull
add
andnps
mov
xchg
das
ret
sbb
jecxz
push
rolb
mov
mov
rcll
mov
dec
sti
push
mov
xchg
movsb
mov
out
repnz
es
jl
jl
fsubs
jecxz
push
pop
ds
das
and
push
lods
lock
les
xor
xchg
pop
cmc
negb
xchg
enter
pop
aad
int
pop
mov
imul
in
cmp
leave
pop
inc
fildl
mov
add
out
jge
lock
cmp
cmp
jno
bound
into
dec
lds
jge
roll
inc
inc
icebp
and
lret
inc
ss
in
fcomps
pop
or
cmp
cmp
or
jge
cmp
sbb
mov
jge
es
fisttps
ret
popl
test
ret
cmpsb
ror
jbe
mov
popa
sub
xchg
lcall
pop
inc
mov
mov
stc
scas
mov
sbb
enter
pop
cmp
mov
xchg
xchg
in
adc
or
ret
xchg
test
call
cmc
sbb
jg
inc
arpl
mov
mov
fdivr
inc
negl
mov
xchg
lds
test
pop
inc
fcmovu
cmc
mov
lds
jo
ja
adc
mov
cmpsl
ret
test
jp
fidivs
loopne
pop
outsb
mov
pushf
lods
add
dec
jg
xor
dec
pusha
sub
in
lcall
fstps
pop
fisubs
xchg
adc
popf
mov
push
adc
inc
jmp
out
mov
xor
push
jo
cmp
push
arpl
or
lret
inc
push
loope
hlt
or
dec
js
jno
xlat
test
sbb
scas
scas
mov
sub
xchg
fldcw
loope
cs
jb
push
xchg
cmp
dec
or
sbb
push
jne
jle
scas
jg
and
nop
ja
mov
or
adc
paddusb
xchg
and
aad
jle
inc
sbb
lds
out
call
loopne
fmull
xchg
sbb
cmp
lcall
ss
std
pop
push
fdivs
cmc
ljmp
inc
das
mov
pop
int
pop
xor
pop
and
int
int3
mov
adc
push
push
jecxz
mov
sbb
push
dec
lret
mov
inc
rol
movsl
imul
push
loop
roll
adc
jg
push
jnp
and
or
mov
ss
std
mov
mov
cmpsb
cmpl
lcall
push
clc
jno
push
sti
jnp
push
outsb
mov
mov
pushf
arpl
fldt
and
cmpsl
inc
pop
cmpsl
lea
sub
add
dec
xchg
into
sub
ljmp
and
sbb
nop
pop
pop
and
loopne
stc
jp
stc
enter
mov
or
test
inc
les
inc
inc
jne
lock
mov
sub
push
cmp
add
and
fcompl
and
inc
sbb
movl
pushf
lea
mov
sbb
sbb
inc
and
mov
movsl
mov
bound
jmp
inc
mov
aaa
out
xchg
xor
xchg
icebp
ja
cwtl
testl
cmp
pop
stos
leave
sub
dec
or
repz
stos
rorl
sti
repnz
pop
lret
dec
adc
jl
xrelease
jge
out
sbb
cmp
xor
mov
cmp
push
lock
push
mov
dec
out
add
push
xor
arpl
lcall
or
dec
shll
cwtl
int3
xchg
sbb
int3
add
cmp
repnz
fsubr
or
notl
fwait
jge
int3
data16
push
bnd
scas
push
push
popa
adc
pop
xchg
xlat
fldt
decb
ljmp
sahf
std
mov
notl
lret
inc
adc
add
mov
enter
and
add
push
test
sbb
loopne
jno
cmp
out
dec
fwait
notb
mov
stos
hlt
out
ret
cmp
idivl
dec
adc
jae
loope
mov
inc
push
lods
in
mov
cmpsl
mov
inc
mov
dec
orb
sbb
jp
and
or
add
xchg
negl
xchg
or
cmp
mov
sbb
ret
lret
cmpsl
pop
jb
popf
add
mov
lcall
mov
sbb
xchg
adc
pop
push
lahf
lret
fisubrs
xchg
leave
aad
jo
sub
into
mov
push
iret
mov
cwtl
cmpb
cmp
addl
fwait
test
xor
sti
repnz
out
in
jne
adcl
ret
ds
aam
lods
test
icebp
mov
outsl
jmp
shrb
or
test
lea
pop
ss
and
int
dec
mov
jo
lds
test
outsb
inc
pop
xorl
jae
push
push
add
shrl
scas
cmpsb
pop
pop
je
fildl
dec
pop
and
mov
outsb
lods
movsl
sub
xor
pop
and
movaps
pop
adc
arpl
ret
js
decb
rcrb
out
clc
lret
pop
pop
jnp
xchg
sub
dec
or
pop
or
push
sub
int
fidivrl
cli
inc
dec
jno
inc
aad
push
rcl
xor
in
xchg
cs
aam
push
leave
and
and
subl
bound
cld
sub
js
xor
push
lock
adc
sahf
outsl
std
adc
lret
mov
scas
or
adc
xchg
mov
adc
jbe
sbb
enter
sub
lea
dec
adc
scas
scas
ja
jno
test
mov
xchg
ret
cmp
fldcw
adc
add
sbb
dec
or
stos
mov
mov
mov
fisubl
dec
mov
mov
lret
je
in
lds
cmpsb
push
stos
mov
imul
pop
stc
cmpsb
sahf
ret
scas
jle
xor
cld
mov
loope
adc
jle
adc
lahf
orl
roll
cmp
movsl
mov
cli
test
cmpsl
adc
push
leave
pop
mov
xchg
xchg
scas
clc
int
cmpl
call
lods
push
sub
nop
inc
mov
roll
or
and
data16
pop
out
or
sbb
xlat
inc
sbb
std
jae
insl
mov
sub
testl
cli
xchg
int3
xor
or
mov
shlb
in
pop
imul
or
subl
mov
imul
mov
dec
push
xor
mov
popa
adc
add
outsl
xchg
add
cmpsb
xchg
fwait
lds
shlb
add
lahf
int
stos
lea
cmp
mov
enter
stos
adc
pop
das
push
dec
push
pop
shl
jecxz
pushf
lahf
push
je
push
push
add
popf
std
clc
es
jnp
jnp
xchg
mov
mov
mov
loopne
decl
push
push
mov
fmul
pop
fcmovnu
rcll
add
dec
pop
xor
xor
pop
clc
lret
loop
xor
pop
int
les
jbe
mov
cmp
pop
mov
jle
mov
and
ja
jecxz
mov
pop
add
vmread
pusha
icebp
pop
inc
mov
cwtl
imul
enter
xchg
push
adc
mov
lret
adc
sub
popa
xchg
lret
imul
test
mov
and
mov
outsb
les
or
xchg
add
cmp
sub
pop
pop
mov
cmp
test
adc
lock
ret
or
pop
jne
cmp
jns
ljmp
adc
mov
dec
in
mov
sub
sti
mov
jl
addr16
out
ret
pop
shr
femms
in
pop
pcmpgtb
and
sbb
fs
std
and
lret
and
stc
stos
mov
lods
add
mov
je
jecxz
cmc
inc
aas
mov
in
add
stos
test
inc
fcomps
mov
mov
in
stos
mov
addr16
jno
sti
sti
adc
jl
xchg
jg
sub
add
inc
lahf
fcompl
mov
dec
add
mov
pop
int
insb
mov
mov
daa
inc
sbb
stos
stos
add
pop
sub
sub
cmp
in
fwait
xchg
cmp
mov
je
push
and
outsl
cmp
and
incb
sahf
inc
mov
jmp
imul
lretw
jl
jmp
pop
pop
mov
mov
dec
push
jo
xorl
pop
test
pop
cltd
sbb
xchg
test
xchg
in
stc
filds
pop
mov
clc
in
mov
dec
dec
pop
sbb
xchg
aas
test
mov
dec
lret
mov
sbb
std
movsl
aam
test
push
jg
jnp
mov
cli
add
push
aam
inc
cmp
pusha
push
mov
mov
cmp
imul
in
pushf
ss
icebp
sbb
repz
or
mov
cmpsb
sub
test
aaa
ljmp
cli
xor
cmpb
icebp
mov
popa
mov
xchg
shlb
mov
mov
insb
add
xchg
dec
jle
movsl
and
xchg
mov
into
les
sbb
and
fisubrl
sbb
js
mov
mov
add
out
imul
sub
test
filds
int3
fistpll
lods
adc
push
jmp
lds
add
lahf
push
es
sub
clc
out
inc
inc
xlat
cmp
fwait
mov
aad
xchg
sahf
or
or
xchg
enterw
add
cmp
jg
clc
lds
bound
xchg
jge
push
aaa
in
xor
cs
pop
jnp
jno
test
insl
push
and
cld
mov
xor
adc
std
int
mov
xchg
jbe
mov
ret
lcall
add
push
aas
imul
stos
pop
cmp
jecxz
add
xor
das
sbb
mov
push
in
mov
ja
idiv
cmc
fsubrl
aam
lret
aaa
aad
and
or
xor
sti
mov
aam
jg
xchg
mov
cmc
or
add
bound
inc
dec
lds
xor
add
mov
inc
xchg
xchg
sub
test
shrl
jle,pn
push
or
das
stc
mov
or
fimull
cwtl
or
enter
mov
jecxz
sub
in
pop
xchg
cwtl
push
adc
xchg
ja
and
lds
mov
movsl
out
push
rcll
mov
cmp
out
push
push
fmul
int
adc
adc
scas
lods
jle
cmp
pushf
adc
scas
fiaddl
ljmp
dec
leave
xchg
pop
inc
inc
ja
leave
sbb
push
rolb
inc
icebp
mov
loopne
cmp
mov
pop
jnp
cmp
loop
es
lock
ret
repz
test
mov
int
out
scas
jmp
or
in
adc
lret
and
push
jp
test
cmp
xor
sub
out
xchg
mov
dec
lds
repnz
xchg
and
cli
lock
mov
popa
xchg
dec
pop
sub
cmc
cmp
sub
aaa
sbb
xchg
aam
mov
jno
add
add
dec
push
das
daa
cmc
jmp
cmc
addr16
cmp
cmpl
imul
or
repz
lcall
inc
pop
and
fistl
in
stos
out
fmuls
jne
adc
lahf
int
inc
xchg
xor
jl
push
jecxz
les
dec
jge
mov
xchg
jg
out
imul
cli
je
push
nop
xorb
xor
cmc
push
pop
mov
dec
stc
out
jge
into
sub
fdivs
or
lods
outsl
pop
fcmovbe
in
rcrb
ja
inc
movsb
mov
dec
and
fdivrl
dec
push
mov
pop
lcall
dec
fadds
or
pop
pop
jbe
dec
xchg
mov
mulb
pop
cmpsl
ret
mov
cmp
inc
adc
push
daa
mov
cmp
inc
jl
push
jge
subb
push
inc
push
in
rorl
movsl
divl
push
and
or
pop
rcr
lcall
pop
aaa
mov
ficomps
cmp
movsl
sub
outsl
scas
push
mov
cmp
dec
fistpl
inc
jmp
inc
pop
push
jge
push
out
outsb
add
stos
push
es
ret
cmp
out
and
sahf
sub
pop
das
xor
stc
insb
movsb
or
sbb
jns
pop
pop
insb
cmpsl
mov
loope
push
lahf
pop
or
ds
movsb
mov
cmp
xor
lret
movsb
cli
mov
cs
pop
std
inc
push
mov
sbb
fldl
push
sbb
aam
lds
bound
xchg
pop
xchg
shrl
cmp
in
xchg
mov
push
cmp
jl
ljmp
pop
push
mov
push
aam
jmp
mov
out
test
jbe
dec
adc
sub
lret
sbb
cwtl
in
pop
sub
out
pop
mov
sbb
outsl
nop
cld
jbe
pop
movsb
push
add
xchg
xor
incb
mov
dec
mov
dec
in
shrl
int
pop
xorl
sbb
add
and
popl
inc
push
or
cmp
cmp
mov
scas
inc
cmpsl
inc
dec
loopne
jg
push
fcoms
scas
cmp
pop
movsl
ljmp
repnz
sub
mov
push
pusha
test
mov
hlt
mov
daa
adc
adc
in
fisubrl
adc
aam
add
insl
mov
inc
mov
scas
inc
movsb
jns
in
pushl
ds
mov
lcall
out
cs
mov
in
andb
mov
mov
mov
inc
cmp
cli
sub
xchg
cmpsb
inc
lock
les
setl
pop
sub
jg
pop
push
dec
dec
pop
xor
xor
xor
ljmp
add
sbb
lock
add
push
lods
iret
pop
div
xchg
adcb
outsb
jae
dec
outsb
fs
mov
add
xor
xchg
dec
push
loopne
popf
pop
adc
mov
adc
aad
jmp
movb
adc
and
sbb
xchg
and
jo
and
pop
sub
or
cmpsl
xchg
icebp
inc
dec
repz
fcom
test
mov
aas
push
sbb
or
push
mov
dec
loope
in
das
push
cmpsb
add
xchg
outsb
fists
mov
dec
movsl
xchg
and
and
out
hlt
inc
test
shl
in
adc
es
insb
mov
push
sbb
negl
add
sbb
inc
mov
out
test
sbb
jnp
sbb
mov
out
ret
repz
lret
mov
cld
push
or
sub
mov
push
mov
or
jg
mov
ret
stc
std
loop
leave
outsb
je
jb
sub
nop
mov
addr16
sub
pmuludq
xchg
hlt
mov
sbb
adc
push
out
mov
mov
in
pop
insl
cs
cs
ljmp
stos
mov
je
lahf
ds
mov
pop
int3
jl
and
add
add
or
test
cltd
das
jge
orl
cwtl
rcll
lds
leave
jp
cli
push
adc
out
sti
aad
jne
xor
mov
or
js
xlat
pop
and
out
push
sub
adc
adc
pop
jb
rolb
jno
jp
ljmp
xchg
sub
cs
xchg
lahf
sub
movsb
cmpsl
popf
or
cmp
dec
xchg
dec
pop
sahf
leave
jb
inc
sarb
fldcw
lea
inc
roll
ret
mov
outsl
sub
cmp
popf
push
fnsave
ror
sub
iretw
popa
stc
lods
movsl
je
adc
out
adc
jbe
test
jg
mov
jp
cmpsb
jle
scas
fisubrs
mov
cmpsl
sbbl
jge
lret
popa
lods
ljmp
adc
and
out
insb
jecxz
das
xor
and
xor
arpl
insl
or
shlb
imul
push
scas
fs
or
imul
fsubrl
inc
dec
out
lods
in
or
and
pop
pop
neg
sar
rcl
js
lods
repz
cltd
mov
adc
cmp
jecxz
test
xor
fsubrs
jb
and
cmp
imul
mov
cs
cs
inc
mov
clc
pop
jg
sub
xorl
std
sbb
sub
out
mov
push
test
loope
ret
jns
push
mov
push
movsb
mov
add
repz
icebp
pop
repz
outsb
mov
shrb
lods
arpl
or
aam
xchg
aam
lods
push
rolb
movsl
add
sbb
lds
ljmp
inc
or
cmc
in
mov
dec
fimuls
push
adc
inc
pop
sbb
jo
fisubl
or
cmc
mov
and
xchg
fmul
push
lock
shll
inc
or
adc
in
push
adc
mov
rclb
ds
sbbb
pop
insl
call
mov
push
mov
cmp
mov
dec
cli
and
lods
push
call
out
xchg
jge
mov
notb
lock
outsb
popf
pop
add
sar
sub
push
pop
outsb
xor
add
arpl
int
cmpb
cmp
cmp
push
or
fcmovne
mov
xor
mov
fs
xor
jnp
flds
stos
dec
xchg
or
testl
xor
cmpsb
mov
movsl
pop
xchg
ss
lods
adc
ljmp
and
add
insl
jg
pop
testb
movsl
les
jno
int3
mov
inc
sub
push
pop
push
sbb
pop
cltd
inc
and
jmp
sbb
fisttpl
cmp
mov
push
out
and
je
sbb
jns
mov
lods
push
cltd
inc
sub
loop
fistpl
pushf
mov
scas
push
and
adc
add
mov
pop
or
sbb
fs
or
push
arpl
adc
add
shlb
mov
lea
nop
sub
dec
stos
cmpsb
and
xchg
jecxz
adc
cld
mov
sbb
and
popa
int
in
icebp
sub
ficompl
out
sbb
lea
mov
xor
int3
sahf
lods
pop
ljmp
leave
stos
push
stc
push
mov
sub
int3
cmp
outsb
xorps
xor
xor
push
xorl
pop
xlat
popa
dec
jge
add
out
add
int3
iret
jmp
movsl
cli
scas
test
pushf
jecxz
mov
mov
adc
mov
xor
test
test
add
sbb
ret
call
mov
test
fld
dec
push
mov
stc
jb
mov
inc
aas
out
shr
das
jb,pn
leave
mov
roll
orl
add
sbb
mov
loopne
outsl
sub
sbb
xor
xor
dec
enter
jns
arpl
pusha
nop
xchg
lods
mov
inc
repz
push
in
add
adc
aad
mov
inc
sahf
xchg
lods
pop
outsl
sti
lods
sub
out
jge
mov
sti
sub
add
out
test
mov
sub
cli
sub
mov
push
xor
std
mov
sbb
leave
mov
dec
and
push
add
fisttpl
sbb
movsl
stc
inc
pop
pop
pop
jo
ljmp
mov
adc
and
cld
mov
or
xor
push
cmpsl
mov
push
inc
add
cld
stos
popf
dec
inc
dec
stos
xor
rcr
stc
dec
enter
push
cld
cmpsl
or
pushf
and
int
hlt
mov
dec
jg
pop
sub
xchg
stos
cmp
add
jne
sub
das
jmp
lret
scas
mov
xor
lcall
xor
aaa
pop
xor
je
push
sbb
xor
mov
sub
pop
xchg
push
in
add
add
xchg
subl
and
mov
or
out
mov
popf
push
or
icebp
outsl
pop
pop
lods
repz
mov
jno
aaa
cli
push
imulb
fildl
pop
cmpsb
pop
push
call
add
jge
dec
in
fcmovb
sub
je
cmp
cs
cmpsl
gs
inc
popa
xlat
dec
lock
and
cmp
jns
cmp
cwtl
negl
sbb
lret
iret
add
in
xorl
sub
gs
test
xor
or
mul
sub
test
inc
stc
mov
or
push
pop
pop
jbe
adc
enter
adc
pushf
aaa
out
xor
xor
test
jmp
iret
and
xchg
hlt
movsb
add
fadds
lds
out
subl
and
push
idiv
movsb
addb
addb
arpl
mov
ret
call
imul
div
sbb
sbbl
icebp
dec
nop
shrl
add
xchg
jb
ret
cmp
fs
shl
test
mov
mov
dec
sub
and
pop
xchg
pop
cld
fdivs
mov
mov
std
pop
subl
pop
push
mov
shl
push
mov
andl
gs
adc
inc
repz
fistpll
sub
adc
inc
sbb
popa
dec
in
cmp
popf
adc
aas
push
ror
mov
and
ret
sub
ficoms
int3
adc
cmc
jp
cmc
jbe
adc
scas
cmpsl
outsb
add
inc
inc
dec
pop
rcl
jo
xlat
iret
push
push
cmp
dec
lcall
sub
cwtl
push
jne
data16
lahf
lret
gs
in
sahf
xchg
jge
mov
sbb
push
sbb
sarb
mov
pop
jnp
sbb
addb
loop
jmp
mov
add
pop
xchg
test
call
aas
mov
mov
lods
test
jmp
jmp
cwtl
mov
mov
fistpll
sub
repnz
xchg
fcoms
lcall
mov
ljmp
pop
jl
out
or
jmp
cmc
hlt
outsb
jbe
mov
mov
mov
ret
mov
pop
xchg
adc
repnz
push
pushf
outsl
test
dec
pop
cs
add
cltd
sbb
xchg
dec
movaps
lcall
pop
xor
int3
mov
ds
or
dec
test
dec
in
insl
mov
ss
xchg
std
jno
push
loop
icebp
adc
movsb
cltd
sub
test
pop
sbb
jl
popa
push
sbb
jmp
inc
das
add
pop
jns
and
ror
cmp
cmc
inc
sti
dec
leave
enter
cltd
pusha
daa
cmp
ret
dec
add
pop
sbb
out
cmpsl
std
pop
adc
arpl
or
mov
int
cmpsl
xor
pop
jo
shrl
dec
xor
adc
repz
and
or
cmp
mov
mov
or
xchg
push
mov
sbb
pop
iret
jle
jle
xor
roll
cmp
dec
divl
sub
dec
in
or
clc
xchg
scas
pop
movl
es
jmp
push
mov
mov
icebp
mov
lret
xchg
pop
ss
pop
lock
addb
jmp
xchg
out
mov
cltd
inc
rorl
dec
mov
cmp
inc
insl
ljmp
or
xor
cmp
pop
xor
mov
imull
sarl
outsl
inc
movq
dec
jae
jg
aas
sub
cmp
outsl
mov
xchg
inc
jp
sbb
stc
mov
xor
mov
lock
and
clc
nop
mov
ror
xchg
mov
in
sub
lods
insl
aam
cmp
shll
lds
jg
ror
fdivrs
cs
inc
je
push
jo
call
and
fisttpl
fwait
sarb
sub
mov
fiadds
mov
pop
xchg
xlat
pop
fs
inc
mov
pusha
lds
sub
sti
aad
in
push
mov
and
loop
mov
test
and
aam
mov
jbe
fwait
lahf
jb
inc
or
hlt
push
cltd
xchg
fadd
aaa
dec
out
cmp
mov
cmc
pusha
add
add
push
faddl
jl
and
out
push
cmp
mov
pop
xchg
xor
ror
test
add
sbb
fwait
inc
add
test
mov
cmpsb
pop
movsl
jmp
out
adc
addb
mov
sahf
sar
inc
pop
jl
push
stos
aaa
in
rcrl
shrl
or
test
pop
sbb
cmp
hlt
mov
mov
fistps
loope
fiadds
sbb
in
pop
jp
aas
fmuls
mov
add
or
out
xchg
lret
add
mov
bound
sub
popf
pop
pop
jnp
push
sbb
lahf
lahf
xchg
sbb
xchg
push
hlt
push
jle
cs
daa
jmp
or
mov
fsubr
jmp
in
adc
jp
inc
xor
shrl
and
xor
xor
adc
std
fimuls
shlb
push
nop
insl
lret
xchg
jmp
imul
mov
cmp
into
add
xchg
inc
mov
mov
cltd
pushf
mov
jnp
iret
repz
lods
adc
dec
stos
popa
pop
adc
pop
xlat
dec
dec
or
cmp
cli
sarb
cli
add
pop
push
sbb
hlt
fs
dec
cwtl
rcrb
ljmp
push
inc
addr16
lcall
mov
ret
in
out
cld
adc
popa
shll
int3
test
lods
mov
aaa
loope
push
cmp
call
push
and
jmp
test
and
push
jne
jno
ret
in
sbb
dec
inc
into
xor
mov
pop
test
or
pushf
and
jne
pop
in
cmpb
add
cmp
push
adc
dec
sub
xor
loop
xlat
fnstcw
sbb
test
fwait
inc
xor
or
jle
insb
mov
leave
daa
stc
mov
mov
pop
add
jo
pop
cmpsl
shl
sbb
je
adc
cmc
add
into
dec
jmp
daa
fnstenv
jns
adc
sub
ss
test
in
mov
jle
mov
popf
mov
mov
shll
das
popf
sbb
daa
rorb
aam
xor
leave
inc
rcll
adc
dec
addb
push
or
jmp
jg
aam
not
test
sub
sbb
aad
push
les
sbb
cmpb
jns
push
loop
xchg
jmp
cmp
out
orl
jb
gs
leave
lret
or
sbb
inc
das
xor
out
enter
mov
cmc
push
ja
xor
mov
mov
scas
xor
cmpsb
mov
jne
pop
stos
call
les
add
aam
or
adc
dec
in
lcall
je
rcrl
orb
sti
xor
cmpsl
iret
or
in
imul
popf
in
movb
mov
inc
push
sbb
mov
aas
xchg
or
pop
outsb
pop
xor
daa
call
lahf
pop
data16
ret
imul
sbb
jno
lcall
pop
mov
mov
out
push
popf
dec
mov
mov
test
ret
mov
popf
int
mov
push
and
enter
ds
stos
out
stos
jmp
inc
push
test
push
adc
sub
test
test
mov
movsl
push
cmp
jns
cmp
cmp
cld
insl
jg
testb
repnz
imul
sbb
repnz
mov
pop
add
enter
cli
je
aas
out
nop
jne
popa
adc
sar
sbb
mov
mov
mov
sub
std
loope
push
das
jecxz
pop
cmpsb
dec
dec
jnp
jbe
pop
xchg
ret
test
outsb
push
push
jmp
push
sbb
jns,pt
push
and
addr16
aam
iret
dec
leave
pusha
ret
sbb
movsb
mov
adc
adc
test
scas
loop
or
loope
repz
insl
cmp
inc
xor
jge
lcall
lods
push
push
lock
mov
in
adc
add
mov
inc
lods
push
sub
push
and
pop
loop
sbb
inc
cltd
adc
xchg
lds
jmp
push
das
cmp
stos
fldenv
pop
xorl
out
xchg
out
loopne
sbb
mov
push
dec
rol
xchg
and
xchg
sub
lea
jns
add
add
lds
xchg
mov
adc
enter
or
mov
pop
cld
adc
test
lahf
inc
add
mov
jle
imull
sti
cmc
xlat
pand
inc
pop
sbb
lods
xchg
add
sub
inc
mov
xchg
loope
mov
fcmovnbe
mov
xchg
sub
popl
push
and
jmp
test
pop
shll
in
pop
leave
jmp
push
adc
cmp
xlat
xlat
adc
jo
clc
roll
add
ret
shr
addr16
jp
and
test
sub
mov
jmp
jno
cmp
dec
xor
sbb
sub
lods
scas
stos
add
xchg
and
test
popf
add
mov
in
sar
stos
cmp
cmp
mov
jne
subb
sbb
mov
dec
pusha
jno
or
and
inc
ret
inc
ret
loope
or
je
lods
ret
shrl
pop
lret
ret
fistpll
sti
outsl
xor
xchg
dec
xchg
or
into
sub
fbld
jg
add
sar
stc
movsb
dec
push
push
and
imul
imul
pop
mov
daa
sub
scas
pushl
mov
sti
adc
adc
test
add
add
jno
xchg
or
repz
out
mov
jb
sub
adc
sub
aaa
dec
jl
dec
or
lods
cwtl
cmp
mov
fnstsw
add
ret
aas
outsl
pop
repnz
js
pop
enter
or
testb
pop
sbb
fcompl
repnz
leave
cmpsl
popf
or
call
and
adc
jmp
pop
or
shlb
mov
sbb
push
in
lods
shll
mov
subl
addr16
jae
sbb
xchg
pop
scas
sub
ficompl
lcall
jae
push
sbbb
icebp
add
push
scas
jecxz
jmp
cmpsl
out
add
dec
pop
popa
into
jne
lock
out
into
cmp
jne
mov
push
lods
jb
insl
xor
xor
inc
icebp
ja
jns
mov
fbld
push
in
ljmp
lods
pop
inc
int
aam
js
js
jb
sub
adc
xchg
pop
xor
loope
fistps
and
int3
lock
mov
setne
ficoml
adc
out
sub
pushf
push
flds
int
inc
sub
loopne
mov
add
lret
nop
in
sbb
test
jno
cltd
inc
nop
pop
cmpsl
xor
jp
mov
cmp
jecxz
and
xchg
pop
sbb
mov
gs
jg
test
bndstx
jbe
jmp
mov
pop
cmpsl
xor
enter
cmp
rcll
aam
adcb
add
jo
xchg
mov
sarb
icebp
adc
jg
xchg
push
add
insb
testb
int3
and
scas
or
sti
mov
ds
cs
mov
and
jle
push
push
filds
mov
lret
fistps
add
mov
mov
cmc
jno
xchg
loopne
repz
mov
frstor
mov
push
out
lahf
in
std
imul
cmc
and
jae
cltd
jns
push
cmpsb
dec
push
out
mov
sub
push
dec
or
mov
cmc
loopne
imul
imul
pusha
insl
shlb
testb
cmpsb
sbb
pop
lcall
in
adc
dec
call
mov
xor
sbb
or
daa
sub
adc
loopne
sarl
arpl
mov
xor
out
or
xchg
cli
mov
lods
repz
fdivs
nop
lock
sub
sbbl
or
fsubrl
enter
mov
adc
push
add
dec
clc
out
push
shlb
jae
cmp
sarb
lret
jne
sub
inc
clc
lods
cmpsb
xor
scas
inc
lcall
pop
push
xlat
sbb
mov
repnz
mov
or
jecxz
mov
call
xchg
mov
mov
hlt
repnz
ja
cltd
mov
popa
cli
es
fs
sub
rcl
nop
popf
sbb
cmp
rol
or
adc
and
xchg
test
aam
popl
inc
jl
sub
cwtl
sar
addr16
lcall
mov
out
fs
xorl
aaa
sbb
fstpt
and
sahf
inc
rcl
jle
adc
mov
cmpsl
cld
mov
jbe
mov
adc
das
mov
push
sub
and
int
bound
fstps
cltd
adc
xor
dec
repnz
loopne
shlb
mov
cmpsb
cmc
push
or
adc
subb
in
enter
mov
mov
xor
inc
push
mov
pop
incl
push
movsl
arpl
xor
cs
ret
negl
xor
inc
jl
mov
neg
inc
mov
in
mov
fs
cltd
leave
rcr
cwtl
sbb
jp
dec
ds
arpl
in
add
cmp
shll
push
mov
ror
sarb
sbb
mov
mov
addr16
out
dec
mov
ja
mov
aam
jg
inc
xor
ljmp
lock
sahf
mov
aas
push
xor
dec
xor
and
popa
out
lds
mov
mov
arpl
bound
push
push
test
inc
maskmovq
out
sahf
push
pusha
das
aas
ja
fisubrl
popf
stc
shlb
adc
inc
dec
test
aam
aad
jns
xlat
sub
adc
out
pop
cltd
and
pop
mov
shll
fnstsw
shlb
mov
cmp
loop
cmp
nop
push
ds
jo
jns
adc
adc
stos
xchg
and
aas
mov
xor
pushf
mov
sbb
add
mov
test
adc
in
sbb
and
mov
lods
aaa
lds
add
les
pop
fsubrl
in
xor
and
clc
push
xchg
dec
cmp
mov
dec
jg
xchg
outsl
outsl
push
aas
out
out
pop
or
sahf
push
aad
outsb
in
jp
lret
es
mov
je
xor
mov
dec
pop
sbb
test
inc
insb
pop
pop
jecxz
addr16
sub
divl
sbb
je
sbb
in
jo
nop
js
mov
fwait
xchg
mov
repz
je
arpl
fbld
jg
lock
push
fnstcw
pop
sbb
gs
sub
dec
repz
imul
push
loope
or
lods
lcall
cli
js
jmp
aas
mov
arpl
sbb
shlb
cmpsl
inc
call
push
mov
adc
das
ds
leave
jbe
pushf
xchg
loope
movsb
fimull
xlat
je
add
push
popa
insb
lret
out
clc
adc
mov
mov
pop
loope
idiv
cmpsb
jns
fisttpl
subb
imul
or
cmp
add
adc
insl
pop
gs
cmp
sub
xor
and
jg
inc
fimull
addr16
pop
cli
pop
sbb
imul
xchg
lods
in
iret
outsb
fsubl
jle
sbb
pop
iret
pop
xchg
pop
arpl
iret
ficompl
subl
sub
arpl
jecxz
mov
imul
shl
inc
xor
push
and
inc
pop
adc
jle
or
daa
or
jae
sbb
pop
loope
add
inc
xchg
cmp
nop
out
jnp
cmp
in
lahf
push
repz
iret
mov
call
rol
xor
sbb
fsub
icebp
testb
std
add
dec
cmp
mov
inc
xchg
in
movsb
push
cmp
xor
pop
push
mov
mov
add
lahf
sahf
outsl
call
xchg
outsb
lret
outsb
sbb
lahf
stos
pop
pcmpeqb
push
jmp
cld
xchg
push
pop
jecxz
xchg
pop
push
shlb
insb
xor
mov
loop
out
dec
test
mov
loopne
loope
push
adc
sbb
stos
pop
mov
push
popf
adc
inc
lods
cmp
or
imul
das
jns
mov
or
je
inc
inc
add
fcmovnbe
jne
mov
shll
inc
and
mov
or
outsb
xlat
mov
pop
test
sbbl
mov
push
jbe
es
ret
mov
je
gs
push
dec
mov
push
shrl
pop
mov
mov
adc
shlb
scas
add
fisubrl
sub
push
orb
cmp
addl
pop
mov
cmp
iret
mov
outsl
jl
ja
add
fisubl
xlat
xor
faddl
cmp
sbb
push
out
xabort
in
rol
adc
inc
fdivrs
leave
mov
mov
xchg
addr16
js
sbb
addr16
roll
pop
dec
mov
and
xchg
mov
push
mov
jo
xchg
sub
cmp
aas
fstpl
mov
add
cs
cld
stc
pop
jae
lods
inc
lret
inc
jnp
xchg
lock
repz
stc
das
or
into
rdmsr
push
dec
inc
lret
push
cmpsl
or
mov
lcall
fsubp
push
fs
mov
fcoml
in
inc
fld
or
dec
adc
gs
sub
sbb
add
cmp
int
mov
cmp
xchg
dec
pop
cmpsl
pop
pushf
gs
push
pop
sbb
xchg
add
jns
sub
jno
pop
mov
not
test
scas
mov
rcr
lods
mov
dec
sub
fadds
adc
dec
push
and
push
ret
lcall
inc
push
sub
add
inc
pop
pop
push
je
imul
vpunpckhbw
scas
xchg
add
int
and
mov
imul
sbb
movsl
std
lods
mov
inc
sahf
mov
dec
lea
call
scas
pop
das
mov
mov
int
in
leave
sahf
imul
ret
dec
pop
push
movsl
lods
mov
pop
jp
adc
jmp
or
aam
mov
mov
xor
or
xor
lods
lock
mov
pop
jl
pop
and
pop
das
pop
test
mov
xorb
inc
push
stc
scas
xor
xlat
pop
xor
dec
icebp
cmp
pop
sti
xlat
aad
jp
cmp
push
shrb
loop
inc
mov
jmp
clc
fwait
les
lds
dec
sbb
loop
ljmp
push
imul
push
shll
pop
ret
incl
pusha
sub
nop
adcb
jo
and
mov
mov
xchg
sbb
decl
or
sbb
clc
sub
inc
iret
inc
mov
mov
or
stos
or
test
in
xchg
xchg
in
loope
mov
jae
adc
sbb
push
test
or
xchg
sub
sub
movsl
add
imul
xor
xchg
jmp
aad
aas
mov
add
dec
mov
pusha
push
cmp
inc
ljmp
jnp
fsubr
clc
jg
adc
pop
rolb
scas
mull
pop
leave
lock
xchg
or
xchg
pop
xor
pop
sub
push
fdivrl
repnz
cld
sbb
int
in
push
nop
ljmp
mov
cltd
add
sub
or
daa
nop
add
and
jl
push
je
sbb
jnp
or
dec
pushf
insb
push
jo
push
adc
into
sbb
add
movsb
sbb
push
mov
enter
shlb
xchg
mov
movsb
inc
mov
loopne
lret
inc
xchg
and
mov
mov
jg
push
in
push
aaa
in
orl
mov
into
push
enter
inc
fwait
clc
fwait
xchg
mov
loope
sub
and
mov
cs
jmp
insb
cmp
lahf
std
pop
jnp
fisubrs
neg
push
mov
pop
cld
stc
test
les
sub
cs
dec
daa
cmp
or
mov
out
push
out
aam
ret
pushf
je
jg
ret
aad
mov
mov
lds
cmp
repnz
add
shrb
inc
repnz
mov
dec
jo
ror
ss
movl
adc
mov
mov
movsl
mov
add
jp
jo
inc
and
in
pop
into
cwtl
movb
mov
inc
fdivs
jle
ret
adc
or
in
mov
pop
shr
or
sti
sar
mov
xchg
or
or
aas
jecxz
push
daa
repnz
adc
push
jnp
ja
ljmp
shlb
adc
mov
aaa
aam
js
jbe
in
pop
mov
int3
push
stc
sbb
inc
mov
cmp
lods
xor
and
xchg
lcall
testb
pusha
jb
xor
jl
add
mov
in
cld
mov
movsb
cli
imul
bound
cmp
pusha
push
ja
fsub
out
mov
call
add
dec
pop
mov
mov
cvtps2pi
cmp
pop
xchg
mov
ss
mov
in
mov
xchg
in
or
mov
mov
pusha
mov
cmp
out
clc
jno
adc
inc
xchg
and
nop
iret
jno
xchg
add
inc
jle
adc
sub
dec
inc
mov
add
mov
add
inc
gs
xor
gs
push
test
test
sbb
jmp
stos
or
cs
push
dec
pop
out
jne,pt
imul
lods
xor
je
int
ljmp
mov
pop
inc
in
aas
push
dec
mov
dec
inc
xchg
pop
xor
pop
lods
mov
inc
mov
jbe
loopne
repnz
cmp
pop
jge,pt
pop
cmp
mov
cld
jge
je
int
cmp
sbb
lea
dec
loopne
xchg
hlt
push
push
data16
add
hlt
sbbl
outsl
cmp
sti
mov
or
xor
adc
clc
dec
or
hlt
jae
enter
pushf
xor
insl
loopne
jp
inc
in
xor
push
jno
ret
inc
push
fsub
insb
stos
sbb
cltd
dec
test
inc
xchg
xor
xchg
aaa
cmp
jbe
xchg
pop
and
jnp
out
inc
mov
jb
dec
pusha
test
out
push
fldl
xor
mov
ret
call
push
shll
jmp
sub
je
xchg
cwtl
out
bound
sarb
shl
mov
lret
stc
mov
mov
adc
pop
ret
pop
mov
cmc
jnp
popa
cmp
loopne
cmp
inc
pop
loope
cmp
jnp
xchg
in
jp,pt
push
js
jb
pop
pop
mov
sahf
cmp
imull
popf
inc
imul
cli
inc
cmc
add
ffreep
mov
rclb
je
inc
fimull
jl
filds
xchg
aad
popf
sbb
call
xchg
mov
push
cmc
test
test
jae
pop
repz
or
push
leave
mov
add
repnz
push
popa
lcall
adc
cld
stos
fstps
push
sub
pop
in
mov
ljmp
push
fwait
das
aaa
cmp
adc
mov
push
inc
lret
fiadds
call
mov
leave
leave
repz
push
test
xor
inc
out
sub
pop
xchg
fisubs
push
xor
rclb
push
mov
pop
mov
add
lret
or
call
int3
subb
jne
cmp
pop
pop
sbbl
add
and
inc
xchg
aam
bound
loop
inc
sbb
int3
xchg
sti
jg
or
jl
imul
pop
add
jnp
xor
mov
push
lds
pop
mov
mov
dec
out
jge
es
inc
inc
ja
out
sbb
sub
add
out
loopne
cld
pop
fnstenv
pop
xorl
fisttps
adc
fs
mov
mov
vorps
inc
mov
pop
enter
mov
xchg
loopw
subb
sbb
leave
fwait
xchg
cltd
inc
mov
js
dec
ljmp
lahf
ret
rcrl
inc
adc
cs
ds
sub
pcmpgtw
clc
cmc
imul
cld
lahf
sub
int
loopne
cmc
add
iret
scas
cmp
clc
insl
sbb
mov
adc
outsl
insb
leave
nop
repz
dec
sub
xor
and
loope
scas
adc
icebp
loop
jecxz
dec
fcmove
pop
mov
or
sbb
jecxz
sahf
pop
outsb
leave
fistpll
inc
push
mov
stc
rol
dec
dec
inc
xchg
fdiv
or
shrb
jae
imull
inc
push
insb
cmp
into
xor
add
dec
mov
mov
test
push
dec
out
cmp
fldt
add
fsubl
movsl
fwait
lods
push
xchg
and
roll
xor
xor
imul
mov
stos
jp
mov
repnz
push
out
enter
sub
mov
or
dec
xchg
popf
jb
mov
sub
cmpsl
xor
pop
mov
lcall
int
fsubs
jnp
stc
mov
xorl
lods
fisttpll
mov
mov
cmp
jb
negl
pop
jge
xchg
les
dec
or
leave
push
lods
imul
inc
cmc
cmp
data16
push
cltd
jae
loope
call
mov
jo
test
lret
mov
testl
xchg
jns
test
or
imul
inc
test
dec
xchg
pop
adc
jmp
insl
in
fiadds
imul
lea
dec
testl
int3
sbb
lcall
push
cltd
mov
js
inc
mov
mov
fists
mov
das
addr16
repz
and
push
push
jbe,pn
pusha
movsl
leave
lods
xchg
test
fwait
out
and
inc
repz
mov
ficoml
movsb
cmp
cmpsl
pop
ja
repnz
mov
repnz
lcall
mov
mov
add
cmp
ljmp
sbb
scas
sbb
sahf
inc
sub
std
or
rorb
dec
or
mov
es
mov
add
loope
cmp
and
repnz
test
test
test
or
mov
fnstsw
push
cmp
into
rclb
add
in
jmp
mov
sub
mov
push
mov
int3
mov
sub
lret
jb
loopne
add
sbb
aas
pop
pop
mov
xchg
or
inc
mov
xor
sub
inc
adc
xor
outsl
xchg
pushf
int3
mov
mov
pop
jnp
xchg
pop
cmp
and
shll
fcmovne
out
push
sub
dec
sub
arpl
mov
stc
sub
sbb
and
popf
test
mov
out
je
and
push
xor
inc
rorl
xor
call
repz
aam
lods
in
cmp
lock
sub
aam
lahf
rcrb
int3
xchg
fmull
nop
jb
fdivrl
jecxz
out
in
or
dec
mov
or
cld
mov
popa
cmp
and
movsb
sbb
inc
dec
lods
add
gs
xor
fsubs
movsl
ljmp
xchg
outsl
pop
in
mov
daa
jbe
not
dec
jg
add
cmc
mov
sbb
adcl
int
shrb
mov
insl
imul
daa
dec
dec
lods
pop
mov
out
mov
or
sub
sub
and
sub
inc
out
sahf
int3
inc
dec
pop
aas
scas
test
jnp
inc
repnz
dec
je
imul
mov
push
repz
lcall
push
cli
cmc
xlat
fistpll
bnd
sub
jbe
lock
xchg
pop
pop
pop
jnp
enter
popa
and
dec
jge
mov
cmp
orb
sub
jb
iret
mov
inc
mov
xor
dec
in
jno
ds
mov
mov
lret
xchg
shr
push
inc
pop
mov
fldl
push
fbld
lret
lods
idivl
cltd
dec
xchg
cltd
inc
dec
ret
cmp
cltd
imul
sbb
dec
and
push
add
sahf
adc
lahf
cmp
dec
out
fisubs
stc
mov
pop
paddsb
leave
dec
outsb
dec
cwtl
into
in
adc
sbbl
popf
sbb
pop
cmp
jno
lret
jge
xor
popa
repz
leave
or
stc
and
mov
push
fwait
cmp
fdiv
mov
pop
in
mov
mov
in
ror
into
test
ljmp
js
sub
pop
sub
rcrb
fs
xchg
addr16
ficomps
jbe
les
and
lcall
dec
push
movsb
popf
mov
jns
or
lret
sti
jecxz,pt
cmp
jnp
add
pop
je
popl
pop
pop
mov
lock
ds
jecxz
xor
xchg
cmp
outsb
incl
xchg
cld
xchg
leave
test
and
or
mov
mov
or
sbb
and
adc
mov
movsb
xor
ja
into
scas
adc
addr16
adc
mov
push
pop
int
pop
xchg
sub
pop
addr16
sahf
aaa
xor
test
adc
mov
add
rcrb
fldenv
xor
inc
incl
adc
pop
push
ja
pop
sub
ljmp
or
and
dec
testb
mov
movsl
ret
mov
xchg
loop
xchg
cltd
dec
adc
icebp
sbbl
std
jns
fcom
test
and
std
loop
add
out
repz
mov
enter
and
dec
or
in
pop
pop
push
sub
rcrb
add
int
test
sub
sbb
xchg
out
and
jp
xchg
xor
shrl
out
mov
shlb
int
repz
mov
jge
fdivp
inc
cmp
xchg
movsl
jns
adc
mov
adc
test
mov
test
fcomip
jl
jl
mov
mov
cwtl
push
jmp
pop
les
movsb
jae
bound
inc
test
adc
enter
cmp
adc
pop
dec
addl
ljmp
or
push
mov
inc
sbb
push
test
add
push
inc
aaa
int
jp
out
out
ret
pop
lock
imul
ror
out
pop
cmpsb
sub
adc
jbe
dec
frstor
aaa
sbb
inc
repz
es
adc
movsb
cmp
inc
jge
jbe
cmc
mul
mov
movsb
aaa
pusha
neg
pushf
mov
jne
les
aad
cmp
adc
xor
ret
add
jne
orb
ljmp
sub
in
adc
push
sub
xchg
je
mov
sbb
cld
frstor
jns
inc
mov
icebp
aam
or
mov
mov
lret
dec
inc
cld
mov
push
iret
testl
jecxz
pop
pusha
jp
pop
dec
mov
jg
test
dec
xchg
imull
pop
cwtl
andl
mov
or
jmp
or
and
icebp
dec
ja
imul
shll
inc
or
test
cmp
mov
adc
cltd
pop
push
mov
pop
push
pop
add
mov
rcr
mov
cwtl
mov
je
repz
xchg
pop
and
lock
jns
push
aam
movsl
push
sub
mov
decl
outsb
fs
scas
jge
imul
dec
pop
jb
sub
fsts
fistps
ljmp
mov
in
jecxz
out
mov
out
add
nop
dec
iret
cmp
inc
mov
or
mov
cmpsb
test
loopne
and
pop
lods
imul
rcr
ja
mov
adcl
cmpsl
fdivrl
neg
scas
lods
mov
dec
test
outsb
cwtl
popa
cmpl
hlt
movsb
mov
dec
sbb
inc
pop
cs
push
pop
mov
mov
jns
lret
rcl
adc
mov
pop
outsb
mov
out
inc
je
xchg
jmp
lds
sub
loop
stc
fdivl
or
mov
cld
int
pushf
xor
pop
mov
imul
sbbl
jmp
test
jmp
arpl
sar
xchg
jo
std
stos
jmp
push
call
repz
stos
pushf
cmpb
mov
popa
jl
or
adc
mov
pop
movsl
shll
jb
ret
or
mov
stos
mov
cmp
or
jo
mov
je
outsb
test
mov
pop
es
stos
add
xchg
sbb
dec
test
and
cmpb
xchg
mov
fbld
push
iret
fwait
addr16
mov
imul
cmpsb
cli
or
mov
shr
mov
mov
mov
push
pop
adc
nop
or
push
mov
jb
xchg
pop
stos
adc
mov
inc
mov
jl
std
scas
push
jecxz
mov
shlb
cmp
mov
scas
subl
imul
das
or
movl
mov
idivl
sub
and
sub
lcall
add
scas
inc
sub
jmp
lods
pusha
xchg
in
cli
repz
clc
push
add
cmpsb
sub
out
add
xchg
mov
add
ret
lds
dec
mov
icebp
lret
mov
jle
dec
or
cmpsl
pop
and
mov
leave
xor
pop
xor
sub
inc
cmp
push
xor
out
mov
mov
mov
xor
jbe
sarb
cmp
jmp
leave
scas
jecxz
inc
fidivrs
outsl
stos
sti
xlat
push
xchg
cld
leave
das
sbb
shlb
inc
aas
sbb
inc
cld
je
xor
sbb
scas
push
sub
mov
mov
hlt
mov
jecxz
movsl
mov
add
xor
dec
mov
and
fnstenv
xchg
ficoms
popa
enter
fiaddl
xchg
mov
lahf
inc
jp
imul
ds
and
lock
add
jae
sub
outsl
sbb
cmp
in
fcoms
mov
pop
loopne
adc
inc
ret
inc
das
movsb
push
rcll
sub
pushf
in
dec
lcall
sarl
shl
sar
mov
jnp
aam
fbld
or
adc
inc
sub
das
push
xor
icebp
clc
out
and
shrw
loope
inc
adc
lock
mov
sbb
pop
mov
add
add
mov
outsb
or
dec
sub
xchg
inc
imul
lock
mov
rol
movsb
xchg
ja
push
cs
xor
inc
cmpb
add
idivb
sbbb
or
in
mov
xor
imulb
xor
push
xchg
and
shlb
inc
outsl
lahf
pinsrw
jmp
xchg
xchg
aas
mov
and
dec
dec
lods
sub
outsl
dec
cmp
sbb
out
in
bound
movq
push
arpl
cltd
cmp
mov
stos
xchg
mov
fmull
adc
mov
or
es
xor
mov
pop
jns
xchg
mov
lahf
sahf
pop
repz
adcl
mov
inc
cli
inc
mov
call
vpcmpgtd
jle
repz
test
lcall
sbb
lock
xor
fists
mov
cmpsb
in
into
or
cmp
jmp
hlt
push
testb
shlb
lea
sbb
stc
add
out
xchg
out
cmpsl
jecxz
and
xor
add
xor
jo
push
or
inc
aaa
divb
imul
pop
ss
addb
xor
push
xchg
fisttpl
aas
xchg
hlt
ds
add
sar
xor
mov
mov
mov
and
call
cmpsb
mov
add
idivl
aad
xchg
or
push
mov
cmpsb
adc
rcrb
mov
jecxz
or
pop
out
sbb
jno
repz
or
pop
jecxz
xchg
cs
push
imul
js
inc
popa
sbb
adc
aad
scas
adc
shlb
cs
ljmp
nop
push
xor
mov
dec
aas
inc
push
adc
scas
pop
xchg
cmc
inc
cmp
pop
movsb
mov
fsts
cltd
int
push
add
xor
mov
and
xor
mov
lock
imul
inc
add
jbe
imulb
xchg
and
in
rol
jl
jle
testl
out
in
icebp
jo
out
add
dec
pop
dec
jg
sub
jo
mov
adc
cli
test
je
xor
lret
mov
into
cmc
push
fs
aam
sub
push
mov
sbb
loopne
dec
jmp
add
leave
mov
add
sub
cmp
ret
pop
xchg
and
orl
jmp
sbb
adc
sbb
mov
jb
fisubl
loop
mov
icebp
mov
push
stc
popa
repz
cmp
mov
arpl
clc
xor
pop
xlat
stos
aam
push
pop
hlt
push
mov
vmovlps
push
pop
jmp
lods
mov
repz
mov
pop
push
imul
push
push
mov
fstpl
mov
mov
mov
sub
stos
adc
or
mov
mov
inc
cmpsl
adc
stos
enter
shrb
adc
or
lods
push
sub
or
xchg
loop
imul
add
data16
add
lock
mov
das
push
test
push
push
in
cltd
xchg
cmpsb
lock
mov
mov
dec
add
movsb
push
fstl
push
mov
add
popf
sub
flds
out
test
dec
test
jecxz
sbb
fidivl
inc
movl
scas
sbb
mov
imul
bound
call
pop
pop
mov
push
xchg
or
scas
repnz
cmp
ficoms
divl
stos
jg
and
sub
in
dec
subl
emms
popa
sbb
das
lahf
mov
sbb
movsb
insb
adc
lock
mov
mov
or
repz
out
mov
dec
xlat
mov
dec
das
inc
mov
push
popa
icebp
mov
in
lahf
fsubr
jge
cmpsb
xchg
mov
and
xor
mov
daa
fldl
mov
sub
mov
test
or
lods
in
sub
mov
xchg
iret
imul
cmp
divb
mov
inc
stos
add
xchg
adc
icebp
xchg
icebp
push
sub
push
divl
scas
cltd
repz
pop
sub
mov
int3
das
lahf
pop
repz
pop
inc
inc
lea
in
dec
or
push
cmpsl
bound
andl
sub
iret
lcall
mov
rcrl
shrb
ss
xor
xor
xchg
inc
sbb
adc
mov
add
test
sbb
pusha
mov
test
add
stos
mov
mov
hlt
mov
arpl
lods
sbb
inc
divb
shlb
jae
movsb
add
dec
and
in
inc
inc
xorl
stc
idivl
pop
jecxz
push
lahf
iret
inc
xor
or
and
xchg
dec
test
cmp
or
cmp
push
push
stc
mov
cmp
cld
adc
mov
jne
pop
mov
int3
add
aam
fs
xchg
adc
div
xor
xor
insb
clc
xchg
adc
icebp
sbb
jl
add
jno
or
cmp
and
sbb
and
inc
jb
outsb
int3
pop
out
pop
sub
push
test
test
lret
lret
repz
mov
stos
mov
iret
sbb
cmp
popa
or
in
pop
or
stc
cmp
into
sub
dec
cwtl
mov
jne
or
mov
dec
xor
subl
outsb
sub
sub
lret
in
stc
xchg
xchg
inc
xchg
lock
test
pop
dec
and
inc
sub
adc
scas
aam
out
cmp
mov
daa
mov
iret
scas
mov
notb
pushf
fcmovnu
push
leave
xor
std
int
xor
clc
mov
and
lret
or
pushf
outsl
jge
popf
cmpsb
mov
or
inc
add
push
test
mov
cmp
out
xchg
rcr
xor
roll
xchg
sti
add
iret
mov
lods
int
loope
hlt
jp
inc
scas
rol
sbb
mov
xor
dec
or
popf
adc
sub
leave
mov
iret
mov
fsincos
icebp
and
loop
mov
mov
das
mov
je
xchg
ljmp
mov
pop
je
movsb
sbb
sbb
imul
ljmp
cmc
mov
cld
out
mov
out
sbb
cltd
push
int
or
sub
je
ja
out
mov
jl
pop
mov
xor
and
cld
in
insl
rcll
insb
dec
lret
aam
std
iret
lods
call
js
ret
mov
repz
jns
pop
aam
sahf
or
xor
xor
dec
mov
jo
clc
aaa
ljmp
mov
mov
mov
popf
nop
xor
dec
adc
into
cmpsl
xor
adc
push
jo
dec
push
mov
scas
arpl
movsl
cmc
fsubp
daa
add
inc
sub
mov
cmp
push
sbb
push
and
je
pop
add
insl
push
out
jne
xor
jp
ret
ficoml
jecxz
stos
shrl
flds
fsubs
cs
aaa
lea
cmp
xchg
mov
shll
add
clc
sbb
xor
nop
jmp
inc
aas
mov
jno
cmp
sbb
mov
int
fldl
int3
cmp
outsl
adc
mov
rcr
js
pop
cli
cmp
xchg
add
dec
into
xchg
popf
lret
xchg
mov
cld
add
xchg
mov
cwtl
push
push
lock
ljmp
dec
jecxz
mov
or
out
mov
aaa
lock
push
ret
inc
ret
sbb
dec
scas
adc
lods
jae
mov
loopne
fisubrl
and
flds
sbb
or
out
and
call
in
leave
movsb
sub
aam
movsb
mov
sahf
repz
dec
sarb
cmpsl
sub
loopne
fsubrl
mov
jns
leave
jno
cmp
mov
mov
cmpsl
shll
mov
jl
ds
pop
in
add
mov
stc
adc
fld
jg
pop
sub
movsl
test
int3
fstpt
fdivl
rorb
xor
xor
lods
xchg
lret
cs
push
aaa
js
iret
and
incb
rcrl
fwait
lcall
dec
scas
push
test
test
jno
in
test
mov
sbb
pop
fldl
jbe
jno
leave
mov
sbb
inc
inc
stos
das
and
mov
mov
xlat
mov
jge
fsub
dec
jb
xor
insb
lods
sbb
in
add
neg
lret
xchg
fdivrp
pop
pop
outsb
xchg
pop
cmc
popa
add
out
jno
insl
idivb
int3
mov
movsb
mov
jl
mov
jae
sub
xchg
scas
inc
scas
loop
xor
out
sahf
cld
shll
data16
jo
sub
ss
movsl
lcall
inc
jae
pop
add
fidivs
jns
into
jns
bound
pop
mov
sti
or
fsts
mov
pop
out
loope
movsb
mov
mov
aad
push
test
pop
js
dec
ds
test
out
loop
push
push
adc
inc
mov
fs
jecxz
outsb
jle
sahf
call
jbe
movsl
das
xchg
pop
cld
fs
rcr
push
push
mov
xorl
imul
mov
cmp
mov
xchg
cwtl
jne
or
pop
stos
stos
dec
rcll
out
push
loop
and
test
in
loopne
mov
sahf
adc
in
cmc
sbb
mov
jle
jecxz
cltd
pop
repnz
mov
pop
jo
lea
jecxz
xchg
shlb
and
mov
lahf
stos
cmc
push
call
adc
js
pop
imul
and
push
xchg
lea
mov
inc
ret
into
movsb
and
sub
mov
aas
pop
fstpt
sarb
xchg
scas
jbe
jae
imul
rcl
jge
inc
mov
test
fidivl
hlt
popa
pop
int
mov
mov
mov
lea
or
cltd
inc
imul
movsl
and
or
sbb
and
jmp
or
outsl
sahf
fs
jae
rolb
rorb
out
cmpl
mov
push
xor
push
imul
int
fdivr
push
cmp
push
xlat
stc
data16
arpl
aam
add
lret
mov
sbb
dec
leave
and
jp
mov
movsb
mov
ds
sbb
or
xorl
ss
inc
cmp
pop
xchg
cmpsl
jo
je
stc
inc
ljmp
fwait
test
inc
cli
ror
lods
icebp
inc
inc
bound
pushf
lds
clc
fidivl
or
mov
insl
jge
jns
mov
cmp
add
bound
adc
andb
mov
shll
shll
fidivrs
icebp
push
fmul
arpl
sub
mov
out
ds
subb
popf
xor
or
fwait
push
xor
fldcw
xor
jb
imul
imul
fldcw
inc
cmp
pop
test
inc
mov
sbb
or
and
add
std
cwtl
push
xchg
repnz
pop
jb
sbb
fdiv
add
xor
dec
sub
lods
sbb
in
sbb
xor
adc
mov
inc
loope
test
testl
lock
ja
aas
push
aas
flds
andl
mov
pop
cmp
adc
sbb
dec
mov
loop
enter
inc
dec
imul
es
mov
ss
cmp
sub
clc
cwtl
ja
je
aam
lds
mov
mov
pop
push
adc
push
sbbb
mov
arpl
mov
sub
addr16
mov
pusha
add
clc
inc
cmc
and
ss
or
sub
sarl
in
aad
push
arpl
leave
repz
jno
daa
jmp
enter
mov
add
sahf
sarl
jg
and
inc
in
push
loopne
ss
adc
lock
or
loop
jno
mov
out
add
pop
lock
and
mov
sub
jno
fwait
scas
pop
outsb
mov
mov
jl
mov
int
pop
add
jmp
push
jmp
push
or
aam
movsl
lret
pop
cmp
mov
mov
xor
xchg
rorb
and
cmp
adc
pusha
inc
jo
in
jo
loop
fstl
fs
das
pop
add
inc
or
jno
clc
loop
cs
push
sbb
push
fiadds
sub
icebp
add
sub
sbb
imul
repnz
add
add
inc
mov
pop
dec
or
imulb
xchg
in
xlat
movsb
xor
sbb
sub
jns
push
es
dec
xchg
xor
lds
or
and
iret
leave
or
pop
sbb
sub
leave
mov
loopne
cwtl
xchg
lods
mov
cs
enter
mov
insl
mov
repnz
stc
jo
pop
xchg
orl
xchg
adc
rcrb
push
cmpsl
lock
adc
push
into
pop
outsb
jecxz
loop
sbb
adc
sub
inc
imul
and
test
rclb
aas
xor
fwait
lods
test
mov
imul
push
lahf
repz
dec
loop
shrb
sbbl
pop
outsl
lcall
std
lds
xor
mov
das
or
xchg
adc
mov
sub
xor
and
dec
or
mov
fcmovnbe
dec
jmp
jle
jnp
icebp
jl
dec
int3
push
cld
mov
lret
add
fdivrl
jnp
dec
stc
pop
sbb
lods
sbb
pop
fsubrl
movsl
fiaddl
and
jns
push
mov
filds
sub
lods
xchg
jno
call
daa
cmp
sbb
adc
cmp
outsb
movb
add
dec
jmp
push
cmp
sti
inc
lods
xchg
xchg
sub
pop
jmp
dec
pop
mov
stos
mov
sub
cs
mov
sbb
sbb
push
and
push
mov
sub
out
outsb
scas
fnstsw
pop
and
pusha
xorb
inc
addr16
xchg
xchg
clc
out
mov
cli
mov
mov
lea
js
adc
imul
cld
sti
cltd
out
es
lods
lock
divb
enter
sub
call
push
test
cmp
jno
mov
jae
and
ss
stos
pop
push
movsb
mov
dec
xchg
xor
stos
xchg
ds
lcall
int
cld
fnstcw
push
adcl
and
loop
enter
xor
xchg
cmp
sbbl
jno
xlat
sub
xor
xchg
push
andb
ret
xchg
rol
xchg
lds
cld
adc
xchg
sahf
insl
cld
jg
cmp
andb
mov
mov
push
lock
pop
add
push
je
call
idiv
mov
loopne
pop
insb
push
cwtl
push
xor
jmp
inc
pop
imul
xor
cmp
mov
mov
push
rorl
aas
pop
std
xor
and
or
cwtl
or
in
jo
scas
imul
mov
adc
push
dec
sub
mov
iret
int3
jl
cmpsl
out
ror
fisubrl
xchg
repnz
insb
cmp
pushf
and
cmp
fstps
inc
leave
jb
imul
ss
je
dec
jbe
mov
stos
push
in
xchg
xorl
sbb
or
pop
push
dec
pop
jo
add
inc
mov
repz
sub
push
iret
dec
push
mov
sbb
fbstp
xor
ficomps
into
xchg
addb
mov
sbb
push
je
mov
mov
movsl
ljmp
mov
jne
stos
int3
aaa
mov
subb
shrb
lret
outsb
aas
sub
sbb
inc
xorl
mov
mov
adc
sbbl
ret
pop
cld
inc
cs
fisttps
popa
inc
ljmp
loope
push
fdivl
pusha
xchg
pop
jne
jmp
stc
xchg
icebp
xor
inc
jle
fistl
aad
scas
cli
mov
mov
xor
in
mov
fstpt
mov
scas
negb
fdivr
inc
pop
sti
test
fnstenv
repz
inc
mov
xchg
push
lock
scas
ret
dec
loop
stc
cli
call
jl
inc
dec
jno
adc
jbe
jmp
in
stc
add
ffreep
popf
push
dec
sub
insb
sahf
inc
and
addr16
mov
xorb
cli
std
adc
fistl
cmp
stc
jg
sbb
sub
das
sub
jmp
rcll
sbbl
jbe
in
inc
andl
jne
add
imul
ja
int
mov
push
aaa
test
lret
inc
cmp
stos
sbb
xchg
and
xor
xor
rorl
dec
xchg
in
jl
adc
or
push
mov
movsl
mov
pop
jge
and
icebp
push
or
mov
and
movsb
sub
notb
mov
sub
je
call
sub
movsl
and
and
cmp
pusha
mov
jo
sub
add
mov
or
shrb
xor
xchg
scas
mov
or
jmp
pop
rcr
aad
test
subb
xchg
dec
je
sti
push
push
mov
ret
dec
and
push
push
ja
sbb
or
or
fld
push
icebp
jg
loopne
sub
xlat
push
ficoml
out
or
addr16
mov
sarb
push
lcall
mov
ffree
les
jb
and
jmp
clc
xchg
jge
out
jle
fs
inc
add
fwait
imul
or
mov
dec
test
xchg
xor
dec
sbb
and
popf
cmp
jmp
ds
and
test
sub
outsb
lcall
enter
cmpsb
leave
adc
faddp
lods
loopne
arpl
sbb
dec
and
cmp
ret
cmp
add
add
xor
sbb
insl
clc
push
jbe
les
mov
mov
xor
arpl
lock
out
fs
and
and
push
loop
cmp
xlat
lock
jle
lret
int3
sbb
subl
outsb
cmp
lcall
jnp
sbb
sub
mov
sub
sub
lods
push
nop
lods
cmp
subb
pop
scas
js
jg
jo
test
dec
and
dec
aaa
out
cltd
aaa
push
or
adc
ljmp
xor
cmpxchg
cli
roll
sbb
leave
jmp
pop
cld
loopne
arpl
push
mov
dec
push
lcall
lods
adc
lcall
xchg
add
sbb
sarl
jmp
mov
xchg
adc
insl
out
push
cmp
sbb
jl
clc
fisubrs
sti
test
mov
stc
or
sub
inc
int3
xor
pop
or
stc
xchg
jns
cld
sub
jns
xchg
fistps
shl
mov
pop
in
cmpsl
fs
push
jle
sub
test
cltd
cltd
outsl
add
lcall
push
fcomp
sbb
adc
popa
popf
roll
push
mov
adc
mov
pop
ficomps
rclb
dec
cmc
stc
clc
xchg
ds
mov
out
jmp
jne
movsl
inc
or
adc
dec
mov
and
dec
daa
mov
inc
or
enter
stc
xor
decb
pop
cmp
pop
daa
lcall
mov
mov
sub
aaa
cmp
mov
push
mov
sbb
cmp
inc
mov
cmp
adc
js
imul
push
sub
inc
inc
sub
sbb
fstenv
js
orl
loope
xor
out
jmp
cmpsl
inc
data16
and
subl
rcr
sbb
out
iret
sbb
ja
lods
lahf
pop
xor
shll
test
cmc
lahf
das
test
mov
push
jle
cmp
push
enter
pusha
movsl
dec
scas
mov
push
sahf
lds
or
fldt
cltd
into
cmc
mov
push
sbb
xor
pop
inc
and
push
or
aad
pop
xor
inc
and
hlt
outsb
dec
push
inc
inc
or
stos
push
cs
dec
mov
loope
push
pop
sub
pop
lock
lret
fisttpll
jne
outsb
pop
mov
mov
pop
leave
mulb
xor
pop
popf
sub
adc
xrelease
and
movsb
mov
std
rolb
jl
and
jb
xor
sbb
or
data16
push
xchg
lea
and
shlb
mov
inc
fcoml
mov
movsl
mov
rcll
daa
cltd
jne
cwtl
sub
pop
cmp
mov
pop
push
jmp
mov
cmp
popa
cltd
das
push
and
repnz
decb
and
out
mov
pusha
mov
lcall
shlb
push
sub
sti
adc
lret
mov
xchg
dec
das
cmp
pusha
xor
rcrb
outsb
or
add
fsubl
xor
or
mov
add
xchg
dec
cld
mov
andb
jle
imul
fcmovbe
cmp
add
jmp
pop
int
out
in
mov
lret
lahf
add
frstor
cmp
fcmovnu
mov
jl
sub
aad
lea
stos
dec
jmp
cmp
cmc
outsl
sub
fstpl
push
pop
insb
push
inc
xor
pop
bts
mov
sbb
inc
shll
mov
enter
pusha
sahf
int
mov
lea
sbb
xor
aaa
xor
add
mov
push
xchg
or
int3
in
xor
stc
popa
loopne
mov
push
lret
cli
sub
inc
cmpsb
adc
cmp
rorb
inc
les
ds
jno
inc
xchg
jecxz
cmpsl
mov
inc
pop
adc
pop
popa
fsubl
mov
mov
lods
jb
notb
test
sbb
loop
add
or
lret
and
mov
data16
lds
aad
inc
fwait
sbb
pop
dec
cmpsl
mov
shll
sbb
aad
push
pushf
jl
or
lret
insl
sbb
das
lods
loopne
cmpsl
dec
movsl
leave
sbb
xor
icebp
push
addr16
cld
xor
rol
push
shll
stos
jne
mov
mov
mov
cmc
or
adc
fmulp
popf
enter
lock
xchg
bound
movsl
adc
pop
mov
je
mov
out
test
cmp
rcrl
pop
xor
insb
int3
mov
sub
fidivrl
xchg
pop
ljmp
and
push
cs
mov
fsts
inc
mov
add
fnstcw
ds
and
repz
mov
into
movsb
in
xchg
out
dec
nop
cmc
loop
push
popf
sub
inc
cwtl
mov
adc
ret
in
sub
leave
bound
fdivl
lods
push
fnsave
repnz
loop
push
out
xchg
adc
lds
es
push
aam
sbb
daa
sbb
dec
and
in
push
push
xchg
imull
push
test
inc
jb
dec
test
mov
rclb
nop
insb
rcr
cmpsl
pusha
fdivr
jmp
pop
xchg
sarl
add
shll
xor
mov
fcomp
xchg
sahf
push
repz
sub
int3
lods
and
cmp
cmp
pop
aam
mov
mov
shl
addr16
into
jge
inc
xchg
test
wbinvd
mov
jg
mov
lods
push
decb
lods
jae
enter
jmp
cmc
repz
dec
sbb
cmpb
lds
lret
lcall
cmp
mov
add
fmull
inc
shlb
add
jg
inc
mov
dec
loopne
fwait
mov
adc
fsts
adc
sbb
les
sbb
add
and
sbb
scas
xchg
jle
xor
insl
lds
adc
lods
insb
jecxz
cmpsb
sbb
inc
sbb
lret
add
push
rcrb
in
xchg
aas
sbb
les
je
faddl
cmp
push
lea
push
sbb
fsubrs
jle
mov
jb
loopne
test
inc
out
sbb
jae
outsl
lock
pop
cmp
xor
add
shll
xchg
movl
arpl
cmpsl
mov
mov
mov
jnp
add
mov
jecxz
sub
adc
testb
jb
lock
adcl
mov
mov
adc
fnop
adc
add
sbb
or
sahf
sbb
mov
fadd
pop
lret
sbb
fdivs
popf
or
lds
adcl
push
inc
mov
mov
or
stos
jg
movsl
mov
divb
out
imul
cmp
sti
cmp
xlat
leave
frstor
or
adc
mov
testb
lret
jge
std
jbe
aam
dec
jl
sbbl
lock
ljmp
xchg
out
adc
insl
xchg
cwtl
inc
fs
aam
lahf
pop
push
jmp
fsubrp
add
arpl
stc
rorl
mov
push
xor
movsb
or
mov
imul
dec
sbbl
or
cmp
popl
scas
lret
leave
lods
xor
jb
xchg
mov
ljmp
rorb
mov
xchg
addr16
fsubrs
push
xor
sarb
jno
stos
aaa
nop
leave
cltd
insl
dec
imul
ss
rorb
pop
das
dec
cld
xor
shr
sbb
jno
jp
lahf
jne
ret
jmp
dec
mov
adc
push
pop
jb,pt
jb
pop
iret
fistpll
gs
repz
iret
testb
mov
pop
lcall
test
lcall
popf
shl
adc
push
xchg
in
pusha
shlb
jb
insl
and
sarb
push
push
iret
cmpb
sub
cs
test
push
inc
fistps
dec
mov
pop
mov
arpl
icebp
push
sti
pop
adcb
xchg
ljmp
cmc
push
aad
icebp
xchg
stos
in
je
rcrb
dec
movsl
popf
andnps
mov
xlat
in
xchg
stos
in
cmp
sbb
push
das
mull
xchg
test
jbe
inc
mov
xchg
aaa
dec
add
lret
lahf
pushf
sub
sbb
clc
inc
pop
ja
jp
pop
mov
stc
les
push
dec
std
dec
movsb
inc
cmp
insl
sub
xor
xlat
jb,pn
lods
lods
jbe
xorl
pop
in
ret
jl
in
add
add
fwait
test
jg
add
mov
ror
xchg
add
fldl
popa
movsl
clc
push
cmc
mov
mov
mov
pusha
rcrl
inc
stc
jp
mov
xchg
cmpsb
sub
xchg
repz
das
ljmp
fimull
mov
mov
push
mov
test
pop
push
bound
rorl
idiv
or
push
or
stos
inc
mov
adc
sbb
inc
xorl
test
les
pop
push
dec
sti
cmpsl
cmp
rorl
mov
shll
jno
pop
fistl
push
add
mov
pop
nop
cmpb
push
pop
pop
jns
dec
pushf
ljmp
popa
adcb
std
push
push
xchg
xor
ja
rcr
sti
jne
pop
push
cmpsl
pop
xor
push
push
dec
insb
jae
xor
aad
sbb
adc
hlt
xchg
pop
xor
pushf
jnp
pop
lods
scas
shr
jb
dec
push
aam
push
out
push
pop
shrb
cmpl
test
or
pop
js
xchg
adc
push
cmp
adc
inc
sti
sbb
repnz
adc
repnz
insl
sub
sbb
push
mov
mov
or
mov
inc
fnstcw
dec
xchg
add
pop
shl
xor
and
iret
sbb
fisttpl
cld
adc
push
ds
inc
and
int3
insl
inc
push
jo
ds
jp
sbb
cltd
out
adc
lret
push
loope
cld
push
lahf
les
stc
orb
sbb
cmpsb
ds
popf
es
cmp
das
test
rcrb
and
in
shlb
test
and
dec
jns
inc
push
push
mov
movb
aaa
pop
mov
pop
and
int3
loop
and
inc
and
jle
ja
mov
xor
stc
push
dec
popa
fimuls
mov
xor
stos
cld
out
adc
iret
mov
add
push
adcb
mov
cmpsb
inc
mov
das
fisubrl
scas
xchg
faddp
jbe
scas
mov
adc
mov
popa
repnz
dec
imul
insl
mov
cld
sub
std
ficomps
cltd
sub
outsb
cmc
mov
or
xor
rolb
sub
xor
jmp
jne
int
jecxz
pop
jno
push
jmp
jne
or
mov
lock
add
icebp
cmp
jg
in
cmp
addr16
fidivs
or
insb
inc
cmpsb
add
sub
jle
mov
push
aam
cmp
pushl
imulb
stos
aam
dec
in
addr16
cmp
xchg
mov
push
in
cmp
lock
inc
ret
arpl
pusha
mov
mov
rorl
fbld
inc
mov
dec
mov
movsb
mov
daa
ret
dec
nop
loope
mov
in
data16
inc
pop
jo
js
mov
into
add
ss
daa
xor
lods
mulb
mov
rorl
addb
pusha
add
mov
mov
pop
aad
lea
and
pushf
div
xchg
xchg
lock
cld
mov
xchg
movsb
sbb
adc
aam
xor
fnstsw
lea
lret
mov
mov
mov
pop
adc
lds
sub
dec
mov
xchg
or
rcll
out
adc
pop
test
sbb
cs
call
mov
inc
inc
jbe
pop
adc
jne
add
jmp
or
imulb
sahf
xchg
jg
pop
add
add
sarl
cmpsb
mov
dec
add
or
cmpxchg
lret
stc
push
sahf
out
addl
inc
fistps
daa
mov
outsl
outsb
dec
jp
jbe
cmp
cwtl
daa
adc
aaa
jae
cltd
sub
cmp
inc
jl
gs
fdivrs
daa
mov
xchg
scas
jne
sub
inc
daa
mov
push
push
pop
lock
adc
adc
cli
fcoms
inc
xor
sbb
inc
mov
mov
and
push
sub
add
push
adc
mov
imul
and
mov
or
xchg
scas
shrl
push
push
pushf
cmp
or
in
ljmp
inc
outsb
mov
popf
out
outsl
aam
ret
pop
loop
cwtl
aam
dec
dec
aad
add
lds
dec
outsb
xor
lret
cmp
mov
xorl
and
mov
mov
add
cmp
adc
push
cli
jne
push
fs
loopne
sub
jecxz
cmp
shrl
sub
xlat
add
sahf
mov
pop
call
fstpl
sbb
cmp
or
cli
inc
xlat
fs
in
int3
xor
loope
outsb
dec
jns
bound
lds
adc
lret
inc
clc
lock
pushf
sub
imul
sbb
test
or
jno
mov
mov
idivb
or
cmp
dec
jl
jmp
movsl
push
inc
stc
loopne
repz
lods
pop
cmp
mov
pop
daa
lcall
icebp
cmp
popf
leave
xchg
mov
dec
aas
shlb
out
aas
cmp
insl
xorl
push
outsb
mov
in
xor
insl
ss
js
push
dec
ljmp
xchg
add
int3
adc
jnp
inc
aam
lret
out
add
rcl
dec
add
push
leave
dec
mov
mov
xlat
pop
pop
inc
jae
mov
daa
hlt
mov
ja
jae
iret
lds
adc
jb
mov
leave
shr
mov
mov
cmp
insl
out
and
les
push
lcall
mov
xor
int3
movsb
cmp
scas
fs
fs
sub
dec
ret
mov
cltd
jle
or
xchg
loopne
stos
cmc
ds
fisubrs
loopne
cmpb
imul
or
jno
shrl
lock
push
xchg
out
sbb
jne
push
loope
insb
cmc
movsb
repz
out
pushf
stos
cli
or
je
aaa
dec
aad
mov
xor
pop
test
pop
pop
pop
insl
std
adcb
es
push
cmpsl
stos
repz
int3
add
ljmp
adcb
inc
adc
ret
aad
incb
in
xor
rol
xor
adcb
push
pop
sti
pop
jl
mov
loop
inc
imul
inc
bnd
mov
push
add
arpl
push
pop
gs
jl
testb
mov
out
in
xchg
xor
push
in
aaa
and
pop
xor
daa
add
sbb
test
roll
or
pusha
loop
imul
pop
cmpsb
cltd
sbb
push
sub
inc
adc
push
mov
pushl
dec
test
loop
cwtl
and
push
push
add
scas
add
xchg
and
adc
lret
clc
negl
mov
jp
das
repnz
push
xchg
add
push
push
sbb
out
cmp
movsb
lcall
mov
xor
and
lock
mov
xchg
dec
mull
sub
insb
insb
movsl
inc
sbb
mov
cmp
fistpll
xor
xchg
jns
cmp
ds
test
inc
xchg
pop
mov
jecxz
pop
or
test
mov
and
inc
push
inc
mov
inc
hlt
aaa
roll
mov
mov
adc
xchg
xchg
cmc
adc
sub
cmp
notl
xor
enter
xchg
mov
sbb
inc
add
pop
sahf
push
in
push
mov
roll
adc
sub
jle
sub
or
aas
fnstenv
je
xchg
daa
lret
jno
add
loop
insl
lea
inc
push
shll
dec
lret
cmp
xchg
ficoml
xchg
popf
add
mov
cwtl
add
js
addb
push
mov
mov
add
xchg
testl
jecxz
into
mov
outsl
lcall
rorb
in
push
and
pop
xor
lods
inc
fisttpl
dec
cmp
shll
stc
icebp
push
repz
out
mov
xor
mov
jg
aaa
pop
push
lret
call
jp
dec
pop
int3
jns
xor
cld
push
jbe
push
or
pusha
mov
test
outsb
jbe
xchg
scas
cmpl
mov
mov
sub
cmp
ja
test
mov
dec
dec
or
pop
int3
xor
mov
rcl
nop
aad
outsb
dec
adc
mov
jl
mov
popa
int3
dec
push
into
pop
mov
pop
xchg
lods
dec
xor
mov
mov
shlb
fistps
xchg
xchg
sahf
dec
cmc
nop
xchg
pusha
stos
sbb
jbe
out
xor
inc
es
ret
shll
bound
enter
adc
xor
pop
jl
fisttpll
div
scas
jmp
clc
xor
arpl
mov
mov
imul
pop
mov
or
insl
scas
sbb
ficomps
or
orl
lcall
das
cwtl
aas
xor
mov
or
xor
popa
scas
cmpsb
add
repz
push
mov
and
mov
xor
aaa
jo
mov
lods
rolb
push
mov
add
or
xchg
sub
call
in
ljmp
cmp
dec
outsl
lahf
lcall
pop
icebp
in
pop
pop
inc
sbb
cwtl
or
inc
cs
jp
inc
mov
out
arpl
repnz
mov
test
out
and
out
jg
lock
pop
xorb
stos
inc
mov
dec
or
lods
mov
in
daa
cwtl
mov
cmpsl
mov
outsb
push
ds
lods
xchg
add
lods
out
lock
and
mov
push
sbb
inc
nop
push
push
and
enter
inc
ds
adc
mov
cmpsl
add
mov
mov
push
outsl
jmp
les
jbe
dec
push
sbb
jae
pop
daa
retw
stc
push
xor
adc
lods
pushf
rolb
nop
idivl
movsb
dec
subl
pop
push
lret
xchg
pop
icebp
int3
in
in
jmp
lret
fucomip
mov
adc
movsb
bound
pop
xor
sbb
push
push
push
xlat
sbb
adc
pop
mov
pusha
neg
mov
or
dec
inc
or
fists
sub
lods
xchg
pop
loop
cs
adc
push
jo
iret
ret
inc
sub
jno
mov
xor
cmp
add
add
sub
fadds
push
pop
outsb
pop
lds
movsb
ljmp
pop
fiaddl
sti
inc
jno
iret
mov
pop
dec
inc
mov
or
insl
jp
je
stos
vpmacssww
cltd
and
sbb
jge
jmp
in
jnp
or
adc
and
andl
dec
inc
cmp
je
mov
sub
add
xor
inc
or
jns
and
test
add
add
mov
rorl
rcr
mov
lock
jno
int
jecxz
cltd
mov
lahf
jge
pop
adc
inc
in
adc
jnp
add
and
stc
sarl
shll
jp
test
daa
stc
lahf
xchg
lahf
cmc
pop
pop
bound
jbe
popl
in
push
xor
mov
pop
sbb
cwtl
in
test
in
mov
mov
pop
call
testb
in
aas
mov
rep
outsl
jg
shlb
adc
xchg
mov
pop
lahf
hlt
lea
mov
cmp
aam
cmc
jmp
sbb
sar
cmp
add
inc
jle
icebp
jno
xor
jbe
loop
xor
pop
rol
add
cmpsb
ret
lret
aas
imul
jle
mov
dec
call
push
or
sub
sbb
in
dec
jp
aam
cmp
cltd
sub
repnz
jnp
repz
mov
sti
lds
inc
repnz
loope
jl
or
dec
stos
vphsubbw
mov
add
sbbl
jecxz
roll
mov
sbb
jp
adc
pop
or
mov
mov
imul
push
out
aas
lock
inc
adc
push
adc
push
mov
sbb
xchg
and
sarl
inc
pop
lods
jb
sbb
dec
dec
sti
fisubs
and
aad
fsubrl
mov
xchg
pusha
adc
mov
rcrl
lds
dec
test
push
rorb
in
out
je
pop
sbb
insb
inc
push
jb
ljmp
xchg
push
pop
and
push
sbbb
popa
out
mov
pushf
int3
pop
mov
int3
imul
jns
scas
sub
pop
lea
and
xchg
sahf
mov
mov
fisubrl
cltd
add
je
pop
sahf
inc
insw
es
sbb
repz
and
adc
out
mov
push
in
insl
xor
pushf
rcrb
arpl
les
pusha
or
outsb
mov
inc
in
pusha
aas
clc
mov
out
cwtl
pop
dec
xor
jo
cmp
ror
xchg
je
fists
jmp
dec
aas
in
push
clc
scas
sbb
lret
and
shrb
push
aaa
pop
jmp
jns
shll
cmp
aad
leave
push
push
sbb
jmp
nop
pusha
adc
cwtl
xchg
popa
xchg
popf
dec
dec
je
mov
or
les
insb
adc
mov
dec
xchg
xor
sub
push
fisttps
xor
popa
mov
jle
lahf
hlt
ja
pop
push
and
jle
ret
or
movsl
inc
mov
mov
loope
dec
sub
xorb
push
sti
ja
sti
add
mov
jp
ror
addr16
fmulp
jo
sub
decl
adc
add
nop
in
lds
and
jmp
cmpl
enter
pushf
mov
and
xor
icebp
dec
iret
push
xor
push
add
lods
dec
mov
dec
icebp
adcl
test
fisubs
lock
fwait
sub
fidivrs
bound
jns
xlat
pusha
pop
insb
in
and
fcoms
out
push
mov
adc
fistl
sbbb
leave
mov
int3
push
jno
sbb
cmp
jno
ds
sbb
repnz
push
cmp
mov
test
lcall
add
adc
out
lcall
mov
and
ss
mov
jnp
insl
sub
je
push
sub
je
outsl
ljmp
add
pop
jecxz
addr16
lods
mov
pusha
mov
push
jnp
mov
adc
jbe
repnz
push
mov
pop
scas
cmp
sti
mov
and
inc
mov
les
xor
jae
xchg
push
mov
mov
lods
mov
ret
add
outsb
add
repnz
je
push
push
enter
jg
cltd
sti
insl
movsb
sub
dec
mov
adc
sbb
out
dec
pop
sub
into
ljmp
mov
push
hlt
inc
cmp
mov
inc
xchg
mov
test
pop
imul
lret
aaa
ja
jne
mov
jno
fcmovb
cmp
xchg
sti
rcr
jmp
rorl
adc
sar
movsb
call
das
popa
mov
sbb
and
xchg
lock
dec
shrb
mov
pop
int3
es
adc
mov
sarb
add
clc
cmc
or
lods
mov
or
push
aaa
cltd
shll
xor
lret
je
jbe
push
mov
sbb
insl
loope
mov
pop
aas
xor
dec
stc
mov
rcll
jmp
sbb
jge
call
sbbl
clc
cmp
sti
add
add
test
popf
jns
ljmp
lods
cltd
add
pop
sarl
cli
ret
js
in
xchg
std
ds
xor
arpl
cld
jl
int3
mov
mov
std
lahf
test
mov
push
jns
mov
jns
ljmp
inc
adc
rcrb
mov
loope
sbb
sub
notl
into
mov
movsb
and
cmpsl
fstps
inc
pop
mov
jmp
repz
inc
dec
insl
fmuls
fwait
mov
mov
add
dec
jbe
mov
repz
mov
pop
test
nop
or
test
jecxz
orl
insl
inc
imul
int
mov
clc
jmp
inc
fadd
inc
aas
mov
mov
leave
xchg
aad
push
xchg
jno
add
push
aas
dec
xchg
adc
test
insl
adc
repnz
repz
jmp
andl
xlat
in
cs
imul
sbb
inc
add
mov
in
rcrb
mov
fdivrl
or
test
mov
pop
not
pop
inc
mov
cmp
or
in
jae
stos
lods
test
ds
int3
adc
lret
add
pop
pop
ret
cmp
scas
cmp
gs
pop
in
and
inc
test
cmpsl
popf
rcll
into
movsl
aaa
ljmp
mov
jle,pt
in
int
out
xor
adc
test
ss
stos
lea
jecxz
jbe
std
sub
and
negl
aas
lea
pusha
sub
lcall
in
mov
ret
mov
push
pop
ja
fwait
pusha
imul
mov
outsl
sbb
jno
jecxz
stc
fidivl
mov
lea
out
sub
add
lret
subb
cmpb
or
mov
rol
fidivs
jmp
cld
inc
mov
bound
pop
sbb
cltd
je
mov
dec
pop
fsubrl
dec
sti
add
dec
mov
jns
mov
mov
mov
adc
inc
negb
mov
push
sarb
dec
xor
mov
add
mov
fadd
out
out
fwait
hlt
jns
sub
sub
in
and
or
les
mov
sbb
sub
or
sbb
orl
pop
daa
push
inc
cwtl
and
mov
stc
cmpsb
mov
rcrl
dec
cmp
mov
cmp
jnp
sub
add
push
inc
dec
lods
mov
dec
mov
ss
cmp
mov
jb
and
dec
out
out
sti
push
cli
sbb
mov
pop
les
orl
dec
and
jno
pushf
push
fldcw
pop
mov
stos
jg
sarl
and
push
jno
dec
pop
mov
fnstenv
jmp
dec
iret
imul
dec
std
mov
inc
or
cmc
xchg
inc
popa
dec
scas
pop
mov
jo
mov
sbb
ret
sub
or
cwtl
jae
mov
rorb
sbb
push
xchg
iret
jl
jmp
push
pop
inc
cmp
mov
cld
iret
and
sbb
popf
cmp
cmpsl
nop
ret
jle
fiaddl
pop
icebp
addr16
mov
jbe
mov
mov
jmp
movsb
test
leave
aaa
pop
fmul
xor
mov
jmp
dec
pop
mov
xchg
decb
lods
cmp
pop
outsl
fisubrl
push
cmp
inc
out
mov
sub
cmc
repz
push
aad
and
mov
push
jns
or
pop
lods
push
pop
scas
mov
das
out
imul
int
fs
lds
outsb
or
orl
popa
inc
test
mov
mov
das
dec
leave
frstor
and
dec
dec
pop
cmp
lahf
stos
cmp
mov
andl
mov
pop
stc
test
sbb
mov
push
adc
fsubrp
mov
int
pop
cmp
cmpsl
xchg
and
inc
jl
iret
shll
jo
mov
aam
in
call
or
mov
out
mov
mov
sarl
mov
mov
adc
hlt
pop
jb
xor
xchg
ficomps
and
push
out
or
rol
push
ljmp
or
mov
repz
xor
hlt
or
lcall
add
stos
clc
adc
clc
push
push
lret
dec
stc
sbb
push
dec
cld
push
xchg
daa
lahf
ror
mov
lock
mov
xor
inc
outsl
leave
mov
mov
mov
dec
xchg
loop
add
pop
out
xchg
sbb
aam
inc
ret
test
or
pop
pop
loop
jl
jp
mov
push
loope
cltd
adc
scas
outsb
push
and
daa
xchg
add
out
divb
fiaddl
rolb
fsubrs
mov
cmp
addr16
les
mov
jge
gs
jecxz
in
push
cmc
push
lods
mov
iret
dec
aaa
jp
stc
jae
xor
lds
sub
mov
sahf
sub
cmpsb
lock
stos
lds
in
push
je
xchg
addr16
push
je
lea
add
sub
inc
jns
cltd
cwtl
or
sahf
arpl
xchg
jae
outsl
or
or
enter
pop
xchg
lock
out
rcll
insl
jp
xor
mov
hlt
mov
sarl
leave
cmpsb
pop
or
sub
shll
xchg
jae
mov
jmp
push
pushf
jle
divb
cmp
sub
cwtl
lods
push
test
mov
out
cmp
sbb
or
cmp
jno
clc
mov
movsb
fsincos
ret
enter
iret
sub
cmpsl
pusha
mov
xor
push
sub
inc
dec
inc
jge
jecxz
lret
lds
movsl
dec
outsb
mov
jmp
cltd
iret
mov
or
inc
pop
push
xchg
push
cmpsb
daa
jns
push
sub
insb
cmp
inc
lret
popa
push
sub
mov
addps
inc
es
jns
cmp
out
in
out
movsl
push
fnstenv
lcall
int
xchg
mov
stos
xchg
pop
mov
fimull
push
dec
xor
cmc
xor
push
mov
cmpsb
push
inc
mov
std
sbb
xchg
rorl
xchg
mov
stc
xlat
cmpb
outsl
out
nop
add
lret
push
sub
jg
scas
dec
mov
aaa
cli
pop
stc
imul
aad
lods
mov
pop
loopnew
pop
popf
lret
es
std
repnz
test
jnp
adc
jo
sub
lods
ds
popf
cmp
mov
dec
or
or
les
mov
cwtl
frstor
mov
aad
les
push
ja
jnp
jnp
aas
lea
xchg
inc
lea
xor
jg
cmp
sub
xor
icebp
xchg
insl
movl
xchg
repz
aaa
jnp
jp
inc
notb
rclb
or
sbb
adc
fwait
sbb
fs
adc
call
or
aad
jno,pn
pop
push
repz
inc
jo
sub
mov
adc
mov
or
mov
jbe
adcl
aas
mov
stos
call
out
lret
inc
pop
mov
test
mov
push
xchg
test
push
je
sub
orl
test
inc
jecxz
sbb
xchg
repnz
pop
in
addl
or
sbb
push
jp
lahf
dec
fsubrl
adc
stos
mov
jp
xchg
loop
pop
sarb
cmp
push
imulb
jne
xchg
decl
pop
fbstp
pop
icebp
es
repnz
jne
lahf
inc
mov
clc
adc
pop
fstpl
mov
pop
aam
push
or
test
aaa
xchg
and
lea
jbe
fldl
and
pop
ret
icebp
aaa
mov
push
orb
push
shr
repz
or
popf
mov
jmp
fwait
mov
xor
adc
pop
ret
mov
rolb
cmpsl
aad
mov
lock
scas
jo
cmp
lods
adc
push
pop
fs
aaa
xchg
std
daa
mov
and
sub
dec
sbb
cmp
jmp
ljmp
mov
mov
xchg
lahf
cli
mov
sub
sbb
leave
aad
jnp
pop
mov
xor
cvttps2pi
sub
fldt
adc
add
loope
int3
popf
aas
stos
sub
mov
out
inc
shlb
sbb
xor
push
mov
jo
stos
jl
iret
lock
pop
out
jnp
push
icebp
jne
fidivs
sahf
inc
cli
sahf
jns
das
test
frstor
int
push
iret
push
in
roll
push
xchg
subl
lcall
inc
inc
lea
jnp
into
and
fildl
sahf
rcrb
subl
and
cmpl
inc
cmp
mov
jo
orb
imul
xlat
aas
mov
cli
push
push
add
daa
sahf
aaa
sub
xor
inc
sbb
mov
xlat
mov
cmp
loopne
jns
xorl
cld
xchg
mov
mov
xchg
add
mov
dec
and
mov
lods
xor
xchg
rclb
lods
mov
sbb
xchg
xchg
cmp
dec
pushf
mov
inc
sbb
test
test
inc
enter
mov
loopne
dec
dec
loope
mov
pop
mov
imul
xchg
pop
and
rcll
rcll
push
mov
ret
mov
pop
mov
sbb
or
sub
pop
gs
xor
mov
test
cmp
dec
push
loop
xchg
loop
pop
test
pop
adc
lods
negl
insb
sub
mov
dec
mov
jp
clc
xor
inc
repnz
inc
call
pusha
out
add
or
add
mov
mov
mov
cmp
lods
mov
insl
clc
mov
fidivs
sbb
jecxz
jbe
pop
or
leave
xor
pusha
adc
mov
jb
add
imul
xchg
cwtl
jb
mov
push
mov
rorl
push
and
cltd
pop
fwait
sahf
sbb
ret
jne
loop
mov
rcr
test
popa
push
mov
das
lods
in
std
scas
adcl
jne
mov
subb
in
mov
adc
into
cmpsl
add
mov
dec
or
xchg
je
das
mov
jb
scas
shl
mov
pusha
jl
xlat
lods
dec
jae,pn
insl
mov
lea
inc
add
jg
adc
icebp
leave
je
cmp
push
dec
daa
cmp
mov
cmp
das
and
test
push
lds
mov
pop
in
xor
stc
and
movsb
iret
jl
lods
stos
rep
orl
mov
cmp
rcrb
shl
xchg
cmp
rcll
insl
jecxz
sahf
cmp
and
shll
rorl
pop
aas
scas
shrb
dec
cli
mov
lock
add
xor
mov
jl
mov
jno
jecxz
mov
stos
clc
adc
stc
cwtl
cmc
imul
call
adc
and
or
ljmp
or
mov
add
mov
test
sbb
xor
sbb
push
cwtl
jl
dec
sbb
mov
mov
sbb
inc
dec
pop
or
fcompl
add
cld
cmp
test
add
fiadds
fstl
pop
sarb
ds
pushf
std
sarl
fidivs
adc
adc
loope
push
shll
cltd
mov
pop
jnp
mov
dec
stos
sbb
xchg
cmp
loop
lret
and
pusha
add
js
lods
mov
jno
imul
mov
imul
cmpsb
push
stos
mov
in
mov
jl
xor
imul
jecxz
fsub
jae
andb
sarl
inc
jns
jle
xchg
sbb
loopne
add
movsl
into
cld
adc
cmpsb
pop
and
ret
pop
bound
inc
jae
data16
into
popa
push
std
and
xchg
sarl
xchg
or
cmp
push
and
inc
xchg
je
pop
inc
xor
mov
xchg
aas
adc
xchg
loopne
and
inc
lock
lds
cltd
jge
push
out
xchg
jo
push
pop
les
sub
jne
dec
imul
mov
inc
push
loope
pushf
mov
xchg
jo
in
sub
fidivrl
xor
out
adc
jmp
mov
lea
lea
push
mov
sbbb
stos
mov
rorl
imul
mov
es
pop
xor
adc
inc
mov
xor
inc
pop
outsl
inc
cld
dec
jo
sti
sbb
andl
ljmp
pop
lahf
std
pop
inc
mov
push
aaa
stc
sbb
cld
dec
sbb
fdiv
push
enter
ret
or
mov
bnd
mov
cltd
or
orl
and
adc
std
imul
jp
pop
or
into
jle
pop
jbe
jecxz
into
add
lret
daa
mov
test
pop
push
js
ss
and
nop
ds
xor
mov
hlt
push
sub
xchg
push
lods
inc
sahf
out
dec
cs
shll
frstor
iret
jbe
mov
xorb
or
push
inc
mov
cmpsl
xor
jp
push
fwait
in
pop
and
mov
int3
xchg
cltd
daa
inc
and
ljmp
inc
push
in
test
push
ja
stc
loop
loopne
sub
js
repz
decb
les
and
pop
add
add
pop
data16
dec
dec
xchg
or
add
popa
loop
mov
push
mov
adc
adc
pop
jl
or
jmp
test
data16
mov
xor
inc
sbb
push
sub
arpl
or
cmp
mov
push
cmp
scas
inc
leave
dec
push
test
sahf
int
sub
push
mov
sub
jmp
push
and
mov
sbb
fmul
lcall
add
pusha
arpl
push
push
jo
sti
push
xchg
dec
jae
jmp
sub
shll
jbe
and
mov
scas
mov
stc
das
fmull
jns
in
xlat
and
dec
mov
sub
inc
push
push
jg
inc
inc
mov
lds
sti
xor
icebp
push
cs
jo
jp
xchg
inc
mov
cmp
push
int
subl
mov
inc
sub
jge
rclb
adcb
pop
ljmp
hlt
push
mov
stc
ss
pop
xchg
inc
outsl
negb
mov
test
mov
fsubp
in
sbb
clc
pusha
outsl
and
leave
jecxz
ret
flds
in
jg
inc
cmp
cmp
pop
das
cmp
dec
mov
mov
inc
pop
push
fcmovu
mov
cmp
lea
nop
in
jae
pop
pop
mov
cmp
mov
cmpl
add
xor
iret
fs
aas
push
insl
xchg
or
cwtl
shl
and
outsb
mov
enter
adc
mov
inc
into
cmp
push
daa
push
ljmp
enter
adc
fldl
lret
jge
adc
rcrl
mov
popa
loop
push
stos
cmpsl
push
lods
push
pop
out
jae
addr16
popa
filds
enter
in
xchg
push
negb
notb
xor
push
or
mov
inc
shr
jbe
pop
arpl
mov
mov
adc
mov
add
sbb
jmp
mov
adc
insb
out
in
mov
icebp
test
fidivrs
fidivrl
in
lret
inc
rcll
sbb
cwtl
push
jnp
mov
imul
cmp
or
jns
cmpb
push
in
add
insb
out
lock
cmc
hlt
mov
jl
sbb
ss
and
aaa
cmp
cmpsb
dec
in
cmp
out
fidivrl
jne
and
jl
xor
test
sub
fwait
andb
jnp
fmulp
pop
jl
mov
ret
or
ficomps
iret
out
cmp
sbb
daa
xchg
dec
xor
dec
dec
and
aas
push
add
mov
jne
stc
mov
mov
and
sub
jecxz
fmuls
xor
inc
add
and
xchg
loopne
sub
fdivl
imul
jno
ret
out
outsb
sub
outsl
lea
push
dec
xor
jp
mov
xchg
gs
xorb
arpl
add
fnstsw
mov
int3
push
insl
dec
push
dec
lods
cmp
aad
mov
mov
pushf
dec
pop
mov
pop
test
xor
xor
lcall
sbb
push
shrl
jp
jg
add
mov
aam
scas
dec
mov
ja
test
xor
mov
and
push
inc
test
and
pop
cmp
arpl
or
pushf
ret
sbb
sbb
dec
xor
loop
mov
pop
dec
int
lahf
mov
stc
clc
add
lods
cld
into
dec
mov
nop
in
aas
pop
ret
sti
imull
leave
add
push
cmp
mov
or
add
lods
jnp
loope
xchg
ss
pop
add
xchg
sbbl
sub
jge
or
lret
test
lock
movsl
mov
xchg
add
adc
push
ret
scas
ret
mov
out
loopne
and
cltd
int3
sbb
mov
jno
es
adc
loopne
clc
pushf
in
jbe
fsub
inc
adc
cmpsl
rcr
in
jno
and
ret
inc
pop
jle
lds
shll
int3
add
push
js
mov
fstpl
cmp
cwtl
ljmp
cmp
jbe
pop
lods
fdivrs
sbb
jns
adc
xor
push
call
cltd
not
xor
pop
jbe
mov
jl
sub
sub
lahf
repnz
pusha
std
adc
cbtw
aaa
xlat
xor
jns
ja
mov
mov
int
and
fildll
push
pop
subl
packuswb
adc
push
hlt
or
insl
jmp
xor
cmpsl
gs
jne
mov
push
adc
xor
out
jns
xchg
lret
arpl
sbb
and
mov
mov
inc
out
xor
sub
mov
neg
sbb
xor
pop
mov
mov
xchg
or
stos
insb
and
jo
cmpsb
mov
in
xchg
adc
pop
or
pop
jp
sti
arpl
and
mov
dec
stc
daa
fwait
lret
push
mov
pop
idivb
test
xlat
dec
sbb
push
jg
cmpsl
testl
sbbl
cmpsb
jae
aas
std
push
loope
xor
inc
jge
in
xlat
adc
sub
jmp
mov
out
jl
sarb
inc
jne
or
sub
xor
xchg
sbb
adc
xchg
mov
repz
mov
rcr
ret
in
sub
or
imul
ds
sarb
es
dec
fisttps
repz
outsl
lods
push
fucomp
orb
repz
pop
mov
xor
or
mov
xor
or
or
xor
pop
enter
ret
pop
pop
add
jp
aam
cmp
dec
add
jne
outsb
fnsave
xchg
fwait
xchg
fsubr
or
fsin
add
stos
adc
mov
jg
sti
data16
ret
cmp
shlb
lahf
adc
pop
mov
push
cmc
mov
in
insb
dec
sbb
cltd
mov
out
or
push
es
fadd
ljmp
inc
push
mov
js
leave
jle
add
faddl
lret
sbb
mov
ss
pop
cmp
test
mov
jge
lods
sub
xchg
push
out
mov
ret
lahf
in
lahf
jle
sbb
shlb
pop
insl
inc
sub
leave
and
fbld
cmpsb
pop
popf
jae
or
mov
xchg
and
sbb
jg
js
ror
test
cltd
pop
aam
pop
xor
fstps
mov
popf
adc
int3
sub
jae
insb
xchg
outsl
cmp
daa
leave
lahf
mov
pop
mov
in
movzbl
clc
adc
adc
sbb
pop
push
xchg
fdivr
sbb
push
inc
xchg
scas
dec
sbb
adc
fiaddl
xchg
and
mov
repnz
outsl
or
rcr
bound
cmp
loop
repz
ret
call
jge
movsl
cmp
fstpl
sub
andl
pop
out
and
nop
mov
add
push
test
mov
rolb
add
add
jmp
call
ficoml
jo
cmp
xor
dec
ljmp
mov
sbb
add
stc
pushf
mov
xchg
mov
push
jmp
fsubrl
imul
sbb
sub
push
ret
adc
imul
movsl
sub
dec
lods
jge
repnz
or
in
lcall
adc
daa
sub
shrb
xor
push
out
jae
fists
fbld
js
movsb
adc
dec
sti
mov
mov
mov
sub
and
jecxz
mov
adc
lock
ss
cmp
adc
inc
rolb
mov
mov
scas
cmp
or
fsubl
jne
or
bound
sbb
xor
mov
and
xor
xchg
adc
lret
pmulhw
mov
mov
mov
or
add
or
adc
dec
sbb
sarb
jl
je
pop
push
add
lret
negl
fstps
jle
mov
outsl
into
es
push
jo
add
movsl
inc
sub
cmp
out
enter
dec
sbbl
hlt
lock
daa
rolb
test
cld
mov
sub
bnd
lcall
int
and
mov
loop
call
cltd
push
push
inc
xchg
mov
dec
mov
cmp
out
and
test
imul
inc
cli
insl
sahf
xchg
lods
and
out
push
scas
cmp
fwait
pop
gs
scas
cmpsl
in
popf
dec
clc
xor
xor
pop
idivl
out
or
dec
daa
xchg
mov
in
jno
hlt
jo
cmp
pop
movsb
iret
dec
sub
push
mov
aad
mov
or
jle
iret
fwait
xchg
sbb
arpl
int3
mov
vpmaxsw
sti
aam
push
add
inc
mov
add
sahf
outsb
sbb
push
in
inc
inc
push
dec
cmp
imul
ja
fucomi
shrl
mul
mov
xor
js
in
ja
imul
ror
out
fs
mov
repz
add
stos
std
test
lcall
leave
das
sub
stos
sub
mov
aad
jne
jp
mov
pop
lret
xlat
sbb
jns
jne
incl
mov
xchg
cs
mov
mov
nop
jns
fldenv
xor
and
mov
sbb
fcmovnbe
das
mov
test
shlb
inc
cmp
in
addr16
sbb
sarb
xchg
fdivrs
out
stos
ret
into
jo
push
mov
add
push
jb
jb
mov
mov
mov
mov
adcb
jns
jle
inc
mov
add
push
out
lret
sbb
cmpsl
inc
xor
repnz
sbb
mov
xchg
popa
pushf
mov
js
outsl
sub
jecxz
mov
ss
adc
mov
mov
sub
lods
add
out
pop
mov
push
test
ret
push
bnd
mov
ss
jns
cld
in
sbb
adc
das
out
mov
push
loop
enter
aas
movsl
movsb
xchg
fimull
popf
mov
mov
dec
jno
leave
das
adc
lods
lret
push
jb
sub
data16
clc
pop
or
fidivrl
add
push
pop
push
mov
nop
mov
clc
mov
lret
cmpb
mov
adc
jg
jb
or
mov
xor
ret
out
mov
test
sti
enter
mov
cmp
mov
mov
push
mov
subl
push
jae
dec
push
rorb
cwtl
bound
cmpsb
mov
lret
outsb
mov
xchg
mov
data16
fnstcw
arpl
sbb
lcall
inc
pop
loope
add
lcall
sub
cmp
insl
add
add
movsb
cli
add
negl
call
jnp
nop
daa
aaa
add
adc
jp
adc
push
cmp
adc
jp
addr16
icebp
inc
mov
jle
out
popa
jns
cmp
loopne
call
xor
iret
adc
sub
int3
cmp
or
or
test
int
push
aaa
pop
jecxz
fwait
cmpsl
lods
ret
aaa
adc
jno
add
xchg
mov
xchg
aam
sbb
aas
jb
add
mov
stc
mov
fisubrs
outsb
xchg
insl
in
dec
das
add
jmp
lods
and
and
out
lea
pusha
inc
sub
loopne
repz
pop
and
push
mov
bound
aaa
push
int
mov
inc
xor
or
mov
stos
mov
dec
test
mov
in
ljmp
cmpl
jnp
dec
adc
roll
jp
ficomps
je
push
loop
xchg
lds
mov
cmp
into
sbb
ja
and
dec
sbb
testb
and
mov
cwtl
rol
mov
pop
and
mov
cmp
or
hlt
addr16
xchg
push
xor
inc
sti
add
cli
jge
pop
pop
sbb
lds
push
hlt
cwtl
pop
jno
fcomps
adc
gs
out
pop
shlb
cmp
outsb
xor
jno
pop
push
adc
mov
shlb
ds
es
sahf
xor
or
call
mov
add
add
xlat
jl
leave
or
lds
into
in
add
add
inc
jbe
clc
mov
ret
xchg
xchg
xor
enter
mov
jnp
pop
outsl
add
lret
rol
or
jmp
add
or
adcb
inc
adc
aad
std
out
repz
jmp
arpl
add
and
add
scas
sahf
dec
add
push
movsl
cmp
inc
rolb
push
daa
sbb
pop
fwait
enter
push
push
inc
sbb
enter
adc
leave
test
xchg
push
or
out
fsubp
and
cli
push
and
jb
daa
add
sbb
out
jo
pushf
mov
cltd
dec
repz
or
mov
mov
push
xlat
xor
mov
shlb
push
test
icebp
adcl
and
push
add
or
adc
clc
popf
call
jmp
daa
jns
jle
mov
adc
bound
push
pop
xchg
pop
inc
subb
dec
cmp
pop
push
pop
out
lock
and
push
ja
pop
xor
fiaddl
jp
xchg
sbb
pop
imul
xchg
push
decl
add
push
jle
xchg
xchg
into
aas
inc
daa
icebp
dec
xlat
out
std
jmp
dec
loop
inc
popf
fildll
jb
mov
ja
inc
mov
xchg
fistl
aam
sbb
cli
shrb
jecxz
inc
fmuls
mov
jg
outsb
xchg
inc
sahf
mov
cltd
fldcw
sbb
pop
fisubrl
rclb
jns
jg
lds
lret
cmc
mov
punpcklbw
add
sub
loopne
out
in
dec
cmpsl
into
scas
adc
out
adc
mov
arpl
adc
dec
adc
sbb
fadd
cmpsl
sbb
sarl
stos
push
inc
jne
xor
cld
test
mov
or
nopl
xor
push
lods
aad
xchg
mov
sbb
je
outsb
or
jl
lret
jbe
sar
rol
lds
jl
cmc
ss
adc
mov
push
sub
stc
sahf
dec
daa
cmp
mov
sbb
pop
movsl
jb
test
mulb
sbb
push
pop
ret
lcall
popa
ficoms
test
in
or
clc
in
lea
push
or
pop
ror
daa
mov
add
inc
jl
mov
roll
push
dec
xchg
fstpl
leave
add
ja
or
call
sbb
lods
movsl
icebp
stos
icebp
adc
push
imul
sahf
cli
jae
scas
push
insl
fidivrl
jno
scas
decl
sub
mov
fdivl
mov
setnp
jo
outsb
cmp
xor
jne
cmp
ljmp
sub
fisubl
pop
divl
cmc
mov
lds
out
mov
inc
jecxz
call
ljmp
aas
jno
inc
xor
push
js
xorb
dec
mov
fdivrs
outsb
mov
inc
movsb
iret
dec
adc
rorl
in
push
mov
xchg
sarl
sbbl
mov
sbb
xor
out
xor
lea
inc
push
cmpsl
test
inc
leave
xor
hlt
jnp
xchg
insl
js
or
frstor
outsl
push
lods
xchg
jmp
out
push
test
inc
inc
popf
cli
push
adc
das
inc
mov
orb
mov
or
inc
xchg
mov
lods
fdivr
pop
scas
les
stos
cmp
xor
sbb
xchg
push
mov
add
ljmp
js
adc
xchg
add
out
push
mov
shlb
addr16
sarb
xchg
pop
cmpsl
push
dec
outsb
jae
cmp
cmp
xor
sbb
jnp
out
out
sub
add
loopne
inc
xchg
ret
push
test
sub
mov
movsl
rol
ss
rolb
gs
inc
pop
out
mov
push
addr16
movsl
jmp
lods
aas
loop
push
daa
pop
cld
stc
mov
out
xchg
fistpl
inc
stos
fdivrs
push
clc
or
mov
iret
int3
mov
lods
ss
cwtl
mov
mov
inc
xor
adc
adc
xlat
mov
repz
push
out
hlt
lods
sar
dec
lret
mov
dec
mov
loope
addr16
ljmp
cli
cli
mov
fistl
std
out
daa
xor
mov
or
adc
dec
shrb
mov
cmp
jp
mov
pop
pushf
xchg
pop
or
mov
es
decl
push
addr16
mov
sub
jmp
imul
push
lahf
aas
sbb
push
add
mov
repnz
adc
call
dec
insb
outsb
xchg
in
iret
add
outsl
out
in
fbld
xchg
sbb
test
cmp
mov
dec
inc
add
or
setae
mov
sti
nop
xor
out
inc
popa
push
lds
push
dec
add
dec
mov
in
scas
fstpl
sub
and
and
add
mov
dec
scas
pusha
inc
pop
sub
les
push
push
sti
mov
in
xchg
rcrl
rorb
repz
dec
orl
or
dec
std
inc
mov
or
and
fbld
lds
jbe
mov
and
testl
je
imul
mov
fidivs
sub
mov
pop
mov
cwtl
int3
xchg
test
xlat
mov
sti
test
sub
rcrl
cmp
lahf
xlat
mov
stos
test
xor
inc
sbb
fwait
int
lods
sub
mov
out
int3
push
loope
pop
out
enter
mov
pop
scas
adc
jbe
jb
cmp
adc
inc
out
mov
add
aad
test
mov
mov
ret
test
pop
fmull
fidivrs
sub
lcall
jmp
lret
push
xchg
sub
lods
lret
mov
scas
lods
jg
sarw
sub
insl
mov
in
fisubl
dec
xor
mov
adc
imul
dec
aas
cli
cmp
xchg
jge
sarl
ficoml
sahf
sbb
cli
cmp
out
aad
sub
into
cmp
enter
clc
xchg
push
pop
sub
sub
add
cmpsl
roll
data16
cmp
lods
sti
push
mov
ret
roll
imul
mov
and
data16
ljmp
leave
fbstp
pop
xor
dec
pop
test
popa
xchg
int
aam
enter
cld
adc
aam
aam
cmp
repnz
outsl
gs
repnz
test
insl
dec
lcall
stos
bound
aam
aas
pop
xchg
fcmovbe
loopne
sbb
mov
xchg
cmpl
ss
add
push
in
xor
lret
insb
out
dec
mov
mov
fwait
xor
cmp
pop
iret
pop
xchg
xor
pop
cli
push
cmp
jl
pop
xchg
out
xchg
in
jmp
rorb
movsb
orb
dec
arpl
loope
pop
ja
cwtl
adc
iret
cmpsl
dec
in
hlt
out
popa
mov
jmp
lea
clc
mov
pop
lcall
or
jb
fwait
aaa
xorl
pop
cmp
loopne
sub
mov
in
xchg
xchg
xchg
shlb
sub
dec
test
pop
pop
dec
inc
mov
cmp
xchg
xchg
lea
or
popa
sbb
push
inc
std
adc
inc
sbb
cmpsb
lods
fnstcw
mov
mov
mov
or
push
jge
jnp
sbb
movsl
loope
fdivs
add
stc
xchg
imul
jg
adc
pop
cwtl
stos
and
enter
out
cmpl
sub
push
add
mov
aas
daa
aam
push
pop
mov
sbb
xchg
cmp
or
cmpsb
or
test
lods
xlat
int3
ret
dec
lea
rcl
adcl
adc
lock
add
scas
in
cmpsb
out
lods
out
push
divb
inc
sti
xchg
xor
imul
js
mov
xchg
imul
mov
inc
pop
fisubrs
mov
push
and
mov
in
push
call
lret
sti
adc
stc
aam
or
xor
repz
je
inc
push
sub
shrb
fadds
out
cmovl
push
add
les
inc
aam
imul
shlb
pop
loope
cmp
and
xchg
icebp
adc
mov
cld
loope
div
jl
sbb
pop
lea
ret
outsb
rclb
je
push
cmpsb
and
pop
mov
and
inc
call
mov
pop
sub
cmpsl
fiadds
or
mov
fcoml
push
mov
inc
movsb
mov
loopne
frstpm(287
push
sti
inc
mov
lods
push
aam
jbe
xor
or
add
and
jno
mov
repz
jns
test
jp
xchg
inc
cmp
test
pop
fdivrl
or
je
arpl
adc
cmp
mov
popa
push
jle
mov
sbb
xchg
lods
adc
imul
xchg
sub
adcb
aaa
decl
in
shl
loope
mov
enter
adc
arpl
xchg
incl
int3
or
dec
lds
push
and
mov
gs
inc
fs
adc
sbb
cld
popa
push
adc
int3
sarl
insl
sbb
in
jns
test
sbb
fbld
ret
rorb
jnp
es
inc
bound
sub
testb
js
rorb
mov
jle
xchg
jnp
iret
addl
bound
pop
adc
inc
movsb
in
pop
cmpsl
cmp
add
mov
hlt
adc
xor
je
lock
mov
enter
lret
sub
xchg
movsl
inc
shl
stc
xchg
in
out
test
ds
mov
xchg
inc
xchg
mov
xlat
xor
out
popa
push
jbe
in
stc
xchg
cmp
xchg
outsl
out
ret
jmp
sub
mov
pusha
ret
mov
in
xchg
dec
fisubrl
xchg
add
call
or
jbe
out
notb
mov
sbb
dec
sbb
jle
sub
lods
xor
dec
xlat
xor
pop
ret
adc
movsb
fistps
inc
imul
scas
rcrb
xor
ds
or
subl
std
jmp
sti
adc
mov
js
push
jnp
mov
paddq
xchg
push
mov
repnz
loope
push
arpl
movsl
fwait
dec
outsb
pop
sahf
and
bound
sub
pop
cmpl
out
inc
clc
mov
addr16
loop
dec
fidivrs
je
pop
loope
pop
lods
call
xchg
insb
xchg
insl
and
lahf
fisttpl
lods
test
jno
std
sti
or
add
nop
bound
gs
inc
sub
push
push
pop
push
ficomps
leave
jbe
xchg
push
sub
push
jo
divb
jp
inc
sti
jl
int3
ret
push
cmp
jmp
stc
inc
pop
inc
leave
test
stos
loope
movsb
push
xchg
sub
xchg
in
mov
push
and
adc
ds
or
gs
push
dec
jmp
gs
add
out
push
pusha
fidivrs
jmp
in
lahf
fcmovbe
rcr
repz
pop
add
mov
cmp
xchg
add
dec
adc
mov
movsb
push
loop
repnz
sets
inc
rclb
rcrb
dec
int
lods
dec
lods
lea
cltd
and
sbb
loope
pop
jg
sti
iret
stos
push
or
or
xchg
mov
sub
subb
pop
or
fisubrl
pop
dec
jnp
lret
addr16
and
aam
imul
lods
pusha
hlt
cmp
mov
daa
pop
inc
stos
xchg
call
xor
fadds
xorb
lods
inc
jle
ds
fisttpl
lods
in
xchg
fldenv
mov
cmp
and
les
testl
jg
mov
out
mov
mov
cwtl
push
bnd
adc
push
mov
xchg
outsl
rclb
pop
xor
push
mov
mov
cld
flds
push
loop
mov
adcl
xor
lcall
xchg
inc
ljmp
lods
adcb
movb
loope
ret
push
jge
push
sub
in
dec
mov
or
daa
lcall
les
stos
ret
into
push
hlt
pop
inc
or
mov
inc
jge
push
ret
test
loop
adc
push
lcall
and
xchg
push
or
sub
test
inc
and
popa
sbb
fcom
dec
push
sbb
or
sti
push
icebp
lret
aas
pop
inc
fisubl
pop
xchg
mov
adc
pop
aam
xor
aas
xchg
dec
jge
inc
cmp
lret
incl
fstpt
js
lcall
mov
addb
mov
and
sub
ja
push
or
aas
dec
xchg
scas
aas
jo
mov
xor
cmpsb
inc
mov
out
icebp
jno
sbb
das
outsb
mov
sub
add
mov
mov
push
imul
imul
das
sbb
xor
sub
or
mov
inc
mov
in
test
mov
push
cmp
or
push
or
sti
pop
sbb
fdivl
stos
aad
repz
xchg
shrl
fmul
mov
cmp
adc
and
aaa
lret
cmp
and
dec
jne
lahf
lea
pop
xor
sub
jbe
mov
or
ficoms
mov
push
in
gs
jbe
ja
loopne
test
call
int
and
out
dec
addr16
int
pusha
aaa
push
out
and
jmp
pop
sahf
or
push
xor
aaa
imul
inc
imul
push
out
mov
add
mov
stos
loopne
push
int
std
and
push
stos
push
pop
scas
cmp
popf
push
mov
mov
inc
mov
popf
jae
nop
cmp
inc
std
nop
sarb
adc
inc
lods
pop
sarl
and
xor
push
lods
cmpb
cmp
inc
xor
dec
push
adc
mov
mov
ficoml
aad
pop
push
jecxz
fdiv
sbb
add
push
adc
mov
pop
adc
dec
mov
call
mov
repnz
xor
outsb
jno
pop
fsub
popf
jge
jmp
sub
jns
idivl
mov
es
shl
or
popf
add
lret
sahf
dec
jo
outsb
lcall
add
adc
stos
mov
xchg
lret
insb
mov
jg
pop
mov
pop
pop
aad
mov
jl
fcoml
lock
cmp
lahf
rcrb
or
sub
mov
pop
mov
fs
xor
loope
cli
mov
sub
or
scas
mov
push
ja
lret
sub
mov
test
xlat
popa
inc
jne
idiv
mov
addl
fsub
jge
cltd
das
mov
mov
pop
nop
mov
outsb
shl
adc
inc
and
add
andb
stc
lcall
and
cmp
dec
sub
xchg
pop
jne
in
mov
inc
imul
pop
out
loope
out
mov
and
add
pop
scas
jmp
clc
hlt
cld
mov
stc
xchg
or
lahf
cltd
inc
pop
out
andb
mov
lret
push
sub
pop
or
mov
rcl
clc
test
dec
pop
fdivs
jg
jno
mov
btr
and
sbb
xchg
data16
shll
push
lret
push
push
adc
cmp
ret
in
outsb
adc
lods
and
jmp
insl
jl
cmp
mov
mov
push
or
push
stos
pop
rdmsr
push
fcmove
hlt
out
mov
mov
cmc
adc
xchg
mov
popa
inc
or
std
xor
enter
sub
lcall
xlat
in
pop
pop
push
add
ficoms
push
xor
adc
add
mov
sbb
in
dec
fs
ficoms
lea
clc
scas
push
push
adc
cmpl
pop
js
push
push
insl
icebp
cmpsb
mov
adc
xchg
xchg
dec
push
sahf
adc
pop
test
in
push
pushf
les
ds
aas
cltd
outsl
xchg
sbb
inc
xorl
pop
icebp
pop
add
orb
mov
or
mov
inc
sub
mov
pop
sti
in
jle
jmp
inc
mov
add
cmp
adc
imul
xchg
mov
fnstcw
je
rcrb
inc
out
xor
dec
in
addr16
adc
filds
fwait
cmpsb
fcompl
je
dec
clc
mov
mov
xchg
cmp
arpl
rolb
mov
mov
adc
and
inc
inc
nop
in
mov
sub
jno
inc
pushf
jmp
xor
push
fisubrs
push
inc
js
scas
jne
add
xor
xor
mov
and
and
popl
clc
mov
mov
loopne
je
lcall
adc
cli
mov
inc
dec
fs
lods
dec
cmp
sub
cltd
and
repz
push
push
stos
fstpt
incl
aad
and
mov
in
mov
jbe
orb
in
ret
aad
xchg
cs
lahf
adc
pop
bound
push
mov
mov
sub
sahf
aas
aam
inc
sub
popf
pop
lock
push
sbb
adc
push
ret
iret
ds
mov
pop
and
inc
outsl
testl
cld
mov
add
fidivl
jno
insb
pusha
push
and
xlat
mov
ja
mov
rorb
and
test
push
rclb
mov
outsl
mov
loop
or
sub
lea
dec
jnp
mov
and
or
fcompl
out
leave
jnp
adc
outsb
mov
inc
mov
push
bound
dec
sub
sbb
fdivr
dec
xor
test
mov
push
inc
test
mul
ss
mov
xor
xchg
pop
movsl
dec
sub
xchg
in
adc
loopne
outsl
add
mov
cmpsb
mov
test
lea
mov
sti
clc
ljmp
shl
push
sub
outsb
cvtps2pi
push
push
ja
push
and
lret
sbb
cmp
sbb
dec
jmp
imul
mov
stos
negb
sub
in
popa
adc
push
cli
fmull
add
movb
cs
pop
mov
cwtl
pop
mov
lods
ret
pushf
jmp
inc
and
and
or
jecxz
or
adc
add
je
stc
xchg
add
pusha
push
push
in
sub
out
fdivs
fst
adc
push
arpl
lods
clc
pop
jmp
xor
push
mov
or
sub
and
mov
mov
sub
mov
call
out
pop
int3
rep
cmc
fnsave
jno
leave
mov
sub
mov
insb
jb
add
cltd
pop
mov
cmpsb
add
cmp
dec
mov
out
inc
ret
test
mov
push
mov
add
mov
imul
mov
fstpl
fnsave
int3
mov
ror
add
cld
jecxz
sub
mov
mov
add
xchg
loop
int3
rcr
or
lock
movsb
fistl
fistl
outsl
out
nop
sbb
out
jl
lods
pushf
lds
pop
push
inc
lock
sbb
repz
mov
repnz
int3
cmp
test
add
inc
or
jno
jmp
dec
fcomps
push
xor
mov
iret
sub
incb
mov
out
ja
pop
fsubs
mov
jno
cmp
bnd
hlt
add
dec
test
pop
xchg
xchg
or
dec
push
fsubrs
add
adc
jl
sub
pop
lock
insl
cmpsl
fs
mov
loope
testb
out
push
or
shlb
pop
adc
gs
xchg
fistl
adc
jbe
call
push
push
fs
sbb
loope
loopne
lahf
adc
stc
inc
dec
nop
jb
sbb
inc
add
push
or
test
push
mov
rcl
jne
add
repz
cmp
insb
aam
fneni(8087
repz
and
cmpsb
sbb
inc
pop
icebp
xchg
outsl
mov
cmovns
and
xor
ja
dec
sub
mov
pop
dec
xchg
or
and
imul
push
cld
jne
inc
mov
jg
xor
inc
icebp
mov
push
mov
dec
cs
faddl
add
add
fimull
sbb
mov
sbb
cmp
jmp
pop
mov
push
jnp
lea
pop
jns
xchg
scas
mov
sahf
cmp
aas
jb
sbb
push
addr16
or
cltd
inc
or
xor
fcom
sub
insb
jge
dec
aas
mov
mov
inc
movsl
add
ljmp
cmpsl
sarl
das
xchg
push
lahf
inc
fisubrs
inc
mov
jl
xchg
hlt
mov
jo
mov
loopne
in
mov
daa
iret
push
xor
imul
in
jne
xchg
adc
dec
into
add
mov
pop
mov
les
xchg
mov
jmp
lret
es
cld
xchg
inc
test
cs
jecxz
adc
mov
lods
fwait
jmp
int
xchg
out
adc
bound
repz
xchg
cmp
imul
pusha
int
xchg
jbe
sahf
cmp
roll
out
jmp
adc
test
pop
aam
popf
jbe
lods
das
inc
dec
jle
adc
iret
and
push
ret
jo
ss
jle
ja
xlat
inc
push
or
and
lods
dec
lods
fcmovnu
mov
cmp
jecxz
rcrb
cmp
mov
pushf
in
sbb
rolb
aas
pusha
mov
adc
sub
jmp
clc
xlat
jg
dec
stos
cmp
imul
clc
mov
adcb
xchg
mov
sbb
adc
leave
and
clc
sub
mov
adc
lea
fsubs
shl
inc
clc
push
int
notb
push
mov
mov
cmp
sub
mov
pop
dec
js
jbe
dec
jl,pt
jns
nop
pop
mov
dec
shll
loope
jne
add
push
xchg
adc
xchg
cmp
outsl
shlb
jecxz
bound
scas
sbb
xor
mov
fistl
or
sub
dec
es
out
fwait
push
dec
jnp
dec
xlat
mov
test
popa
sbb
repz
xchg
orb
adc
mov
mov
add
mov
push
popa
xchg
imul
outsl
clc
mov
push
mov
or
dec
cmp
sbbl
sbb
orb
jecxz
es
mov
lret
enter
mov
adc
icebp
icebp
cs
pop
mov
ret
in
xchg
lret
out
test
addl
fstpl
pop
jle
cmp
call
sti
jae
sbb
insl
mov
icebp
aas
add
bound
insb
add
xor
ret
std
and
and
mov
aad
jne
or
fistpl
lods
aaa
inc
mov
fsubl
pop
xchg
in
jns
ljmp
lds
test
das
out
xchg
out
sub
and
pop
lods
jns
sub
nop
inc
int3
repz
mov
mov
cmp
ds
aam
jnp
inc
das
xor
inc
sbb
scas
imul
add
inc
aaa
add
cs
stos
xchg
insl
or
xchg
pop
sub
lea
and
xchg
mov
imul
cli
pop
mov
jecxz
mov
mov
jle
xchg
mov
xchg
sub
lret
dec
cmp
js
pop
test
cmp
iret
jge
aam
mov
xor
inc
add
jg
data16
mov
addr16
sahf
xor
scas
mov
aad
dec
fwait
inc
rorl
lahf
fiadds
add
dec
pop
adc
mov
dec
dec
push
cmpsl
int
out
jb
inc
pop
dec
out
xchg
out
add
sub
or
adc
nop
int3
sbb
cwtl
aaa
pushf
ja
lods
pop
sub
jno
mov
add
cmpsl
inc
addr16
mov
mov
lcall
mov
inc
dec
leave
dec
pop
pop
test
rorb
push
jae
jbe
mov
mov
push
or
or
cltd
sbb
mov
mov
and
xor
push
fldcw
inc
call
push
mov
gs
dec
push
loope
outsb
filds
push
jp
or
mov
pushl
testl
int3
mov
xchg
jmp
add
fs
mov
cmpsl
xor
jne
add
xlat
jno
sbb
int3
loope
xchg
rcll
lret
dec
xchg
test
mov
xor
mov
push
mov
xchg
sub
sbb
jno
sub
iret
push
mov
pop
add
adc
ss
aas
aaa
push
push
sbb
fstpl
les
bswap
and
fcomp
es
inc
xor
das
cs
pushf
pop
push
inc
xor
dec
xchg
mov
xchg
shl
out
dec
stos
mov
mov
loop
idiv
sarb
pop
shll
sbbl
and
xlat
mov
mov
sub
in
fnstsw
xor
mov
fadds
iret
repz
flds
inc
dec
pop
xor
mov
jno
jno
cld
jnp
jg
or
xlat
aad
push
cld
mov
mov
sti
sbb
cmp
sbb
mov
jbe
cmp
out
or
dec
test
loopne
jge
mov
out
jnp
test
inc
mov
fs
mov
or
stc
bound
shrl
test
fildll
cmp
loopne
xchg
aad
stos
sbb
xchg
sbb
stos
shr
cmp
je
add
mov
add
stos
jne
cli
int3
into
xchg
out
js
test
dec
pop
aad
aaa
push
adc
cmp
mov
int3
popf
aam
pop
mov
or
mov
call
iret
mov
fs
mov
push
lret
xor
mov
and
mov
add
push
stos
xor
in
imul
lea
cmpsl
gs
bound
into
xchg
bound
shl
pop
enter
dec
mov
jmp
outsb
xor
stc
jbe
bound
scas
sbbb
sub
loop
cmp
mov
in
cmp
xor
push
or
cmp
leave
fs
pop
push
pop
in
push
or
ja
inc
xor
addr16
dec
mov
dec
shlb
ret
jnp
nop
int3
scas
inc
int3
cltd
mov
in
or
jecxz
add
push
popf
xor
daa
lcall
and
jp
xchg
std
inc
jo
pop
cli
cmpb
xchg
mov
dec
xor
decb
addl
out
das
jne
mull
rcll
push
je
mov
add
jb
pop
jnp
ficomps
das
sub
mov
and
ret
jnp
cltd
mov
pop
xchg
int3
sub
int3
aaa
xchg
mov
jge
push
and
jp
add
dec
dec
mov
data16
pop
loope
dec
test
test
xchg
iret
push
push
divl
dec
das
leave
and
inc
repz
repnz
dec
repnz
icebp
jg
into
mov
ror
or
add
inc
sub
cmp
pop
mov
mov
mov
mov
xor
inc
cmp
add
scas
jecxz
mov
push
outsb
out
insb
dec
jns
popa
dec
mov
and
out
lahf
push
push
xor
mov
aad
bnd
repnz
xchg
or
mov
sti
insl
mov
sub
adc
cltd
push
fcomp
sbb
mov
dec
iret
xor
rcrl
dec
push
jl
loopne
fimull
xor
and
adc
clc
jbe
xchg
stos
sub
xchg
and
aad
push
negb
fdivrl
jl
push
lret
sti
cli
add
or
adc
pop
mov
fdivr
xchg
shll
loop
sub
sub
sbb
sub
add
add
fisubrl
xorl
mov
xchg
mov
xor
cmp
and
aam
sub
xor
pop
idivl
cmp
addl
inc
adc
cmp
dec
xchg
rol
adc
fdivr
inc
scas
rolb
push
mov
mov
sub
jb
pop
aaa
and
test
out
fcmovne
popa
test
pop
adc
ss
popa
ret
and
test
int
push
mov
mov
sub
repnz
xor
dec
sbb
mov
mov
cli
xchg
cmp
sbb
mov
xor
ret
cli
sub
lret
cmp
out
dec
sub
mov
insl
or
mov
add
or
gs
push
push
dec
lret
cmpsl
in
pusha
xchg
dec
cmp
gs
ret
in
xor
jnp
outsl
jmp
popf
ret
mov
inc
sub
dec
sahf
imulb
mov
jmp
les
mov
mov
sbb
dec
out
iret
ret
inc
dec
pop
sub
xchg
lea
mov
repnz
jae
ror
and
roll
ficompl
cwtl
mov
pop
xchg
out
push
sbb
in
dec
subb
pop
pop
fstp
pushf
pop
repnz
adc
mov
rorb
mov
dec
and
movsb
jg
pop
lock
nop
xchg
fcomip
cmp
cs
xlat
mov
daa
sbb
loop
fisttpl
push
loopne
decl
decb
cmp
test
mov
sti
jb
mov
cmp
and
aaa
add
lret
fildll
iret
fisttpll
pop
sbb
out
mov
or
jne
cmp
sub
stos
xchg
rcr
movsb
in
js
adcb
adc
dec
fucomip
adc
sti
sub
dec
inc
dec
mov
test
adc
loope
test
int3
fiaddl
jb
pop
sbbl
aad
inc
lods
idivl
ja
or
jle
daa
lcall
xlat
push
sbb
push
popa
pop
xor
rcrl
sbb
enter
shrb
push
inc
and
add
push
cs
xchg
shlb
sbb
loop
or
test
inc
jns
dec
bound
mov
xor
cmp
sarb
dec
pop
lahf
mov
add
add
fsubrs
shrl
out
sahf
sub
and
jecxz
pop
lret
adc
imul
jle
cmpsb
ljmp
dec
sbb
mov
jecxz
and
fadds
scas
fdivrs
pop
xor
add
sub
xchg
add
gs
dec
insb
les
int3
pop
incl
rcrb
xor
sub
inc
mov
adc
test
repz
loop
jecxz
fnstcw
xor
xor
sub
ljmp
loop
mov
push
scas
mov
and
jb
xchg
cmpsb
cmpsb
add
xchg
repz
filds
fsubr
rorl
shll
into
ficomps
mov
or
pop
fdivs
mov
jecxz
in
fiaddl
sbb
icebp
sbb
cmp
sub
int
push
mov
push
fistl
xchg
mov
jmp
out
adc
js
mov
andl
inc
idiv
test
mov
fs
sub
sbb
inc
cmp
push
cmp
cmpl
dec
dec
outsb
inc
mov
std
inc
ret
or
mov
or
sub
xlat
lods
push
mov
pop
push
xchg
add
adc
pop
jmp
pop
stc
pop
mov
and
add
das
pop
inc
cltd
push
xor
lods
dec
ret
mov
sub
jo
aas
cmp
push
or
movsl
test
jge
push
jecxz
xlat
mov
inc
test
xchg
dec
fildl
adc
add
negl
or
cmc
pusha
xor
mov
scas
jns
sarb
pushf
repz
test
and
fimuls
xchg
out
or
inc
sbb
sbb
jle
xor
fisubl
add
cmp
sbb
test
iret
popa
sub
sbb
or
pop
push
or
jle
mov
mov
out
hlt
jbe
sbb
xor
pop
mov
shll
pop
lock
test
adc
stos
sub
pop
add
xchg
aad
sub
ja
fmuls
jnp
fmul
out
mov
jo
and
arpl
cmpsl
or
inc
add
sub
iret
dec
cmp
sbb
test
inc
insl
clc
push
cmp
ja
lds
jb
out
enter
hlt
jae
pop
push
or
xchg
add
movsl
ja
push
mov
sti
loop
lea
stos
dec
jle
test
stc
enter
cmp
push
xchg
ficompl
sub
mov
cmpsl
je
push
int3
in
rolb
xor
cltd
stos
lret
sti
es
orl
xchg
jne
in
cmc
push
aas
mov
add
sub
or
push
inc
add
cld
stos
nop
lret
and
pop
mov
xor
add
mov
int
lods
inc
aas
push
aaa
in
icebp
inc
push
jb
divl
mov
lock
fisubrl
jmp
leave
movsb
push
rorl
popf
andl
cld
xor
mov
arpl
xor
les
xchg
lods
test
loope
push
out
jb
xchg
inc
and
mov
jmp
mov
mov
jno
push
enter
dec
cwtl
insb
mov
test
cmpsb
loop
add
add
sti
push
jno
mov
xchg
cmp
sti
cltd
imul
lods
clc
cmp
fcomps
test
pop
mov
out
add
xor
jno
fisubrl
or
mov
mov
sbb
mov
push
jl
dec
jle
fistl
push
xor
add
lcall
add
jne
es
fsubp
add
jb
shrb
test
dec
ret
mov
fdivrl
loopne
or
xchg
jb
addr16
movsl
or
push
mov
mov
std
push
jae
insb
scas
repnz
hlt
mov
push
adc
cmc
push
add
lds
push
fsts
cmp
in
loope
push
pop
sbb
out
pushf
pop
fstpl
aad
push
add
ret
or
dec
mov
cmp
fstps
pop
sub
loop
cmpsl
xchg
xchg
mov
das
push
das
sti
dec
push
insb
pop
or
mov
jo
cmp
mov
out
sarb
pop
push
imul
fmuls
jae
xor
jno
and
std
leave
xor
pop
es
jne
add
ret
ja
pop
aas
lahf
sbb
mov
addr16
pop
shlb
and
dec
push
cmovb
push
pusha
push
adc
test
push
shlb
std
mov
add
test
or
and
mov
pop
push
andb
fsubr
sub
cmp
mov
sbb
test
movsl
adc
ret
mov
insl
mov
scas
in
and
testb
adc
cmpl
xor
xchg
clc
in
jns
fbld
adc
mov
inc
loopne
cmpsb
test
push
mov
cmpsl
inc
pushf
cmp
inc
out
pop
stos
stos
je
loopne
popf
mov
clc
xlat
sub
mov
lret
xlat
xorl
xchg
or
loope
sub
xchg
pop
push
add
pusha
mov
or
xchg
mov
xchg
in
inc
mov
ret
push
mov
lret
dec
sub
or
fs
loope
ja
push
mov
mov
sbb
add
push
cltd
scas
popf
lret
imul
cmp
mov
sbb
add
out
leave
push
sti
jo
stc
aas
sub
lret
call
shlb
and
mov
adc
adc
repz
sub
popf
pop
mov
aaa
std
lds
mov
push
cmp
pop
icebp
mov
lods
mov
xor
out
dec
and
stos
inc
in
leave
int
jbe
xchg
pop
in
jecxz
mov
adc
push
sarl
and
sahf
jle
and
hlt
aam
daa
and
out
jne,pt
adc
mov
fbstp
jb
push
add
fldenv
out
xchg
in
test
xchg
lret
testl
mov
insl
movsl
pusha
outsl
sbb
and
fdivl
push
mov
sbbl
nop
pop
repnz
test
data16
mov
jb
ja
adc
scas
sahf
mov
jmp
pop
xor
mov
shrb
sbb
xchg
sbb
shr
mov
sub
cmpsb
hlt
push
into
sub
outsb
jo
jno
in
sub
lds
adc
loopne
xor
sbb
lret
cli
push
divb
mov
outsl
clc
mov
jb
adc
jbe
mov
pop
fisttpl
xchg
clc
jg
mov
loopne
pusha
aas
enter
imul
adc
add
mov
iret
xchg
add
jmp
add
in
pop
lret
cltd
lds
into
shlb
add
lods
or
bound
or
sbb
cmpl
mov
or
xor
push
cmpsl
push
jae
js
into
push
daa
push
pop
xchg
jmp
outsb
mov
add
cltd
sbb
lock
popf
sahf
xchg
je
mov
gs
mov
jp
xchg
popf
adc
add
push
loopne
ljmp
sti
xchg
or
cmp
test
inc
push
pop
push
cli
ret
lcall
pop
jo
mov
sti
stos
sbb
int
cmc
and
mov
jae
xchg
mov
into
sbb
lcall
adc
stos
pop
aas
and
dec
addl
dec
and
pusha
and
lret
dec
dec
ljmp
ret
lods
push
or
fdivrp
stc
mov
cli
popf
imul
dec
pop
test
or
rorl
mov
mov
lret
addr16
xchg
or
je
movsl
mov
inc
mov
sbb
pop
in
xchg
in
test
movsl
aam
inc
mov
add
sti
pop
cmp
loop
call
xchg
mov
sbb
movsl
xchg
xchg
mov
lods
loope
ja
mov
jns
adc
jae
mov
xchg
xchg
ja
icebp
cmp
push
xchg
jae
fsubrs
pop
mov
inc
insb
jbe
push
les
mov
add
inc
cmp
rcrl
push
subb
cmp
xlat
pop
rcrl
add
mov
pop
call
stos
sub
pop
jbe
test
jbe
xchg
adc
fsubrl
xchg
out
and
xor
subl
sub
cli
mov
lock
mov
add
leave
xor
scas
pop
inc
and
es
hlt
rcrb
fnsave
out
addr16
push
pusha
test
or
lret
ficoml
jo
stc
rol
fadds
lods
cwtl
jmp
fs
arpl
xchg
fstpl
rol
dec
popf
xchg
outsl
mov
hlt
test
mov
movsb
sub
jp
jne
or
cmp
push
imul
std
add
mov
jmp
mov
cltd
or
lods
bound
cmp
sbb
fwait
idiv
sbb
in
scas
vpmadcsswd
add
jo
mov
or
rcrl
sbb
repz
dec
jp
out
xchg
mov
xchg
cmc
fwait
out
js
inc
sbb
in
pop
mov
out
test
mov
js
fisubl
xchg
nop
jecxz
icebp
inc
cmpsb
lahf
ljmp
pushf
lahf
push
sub
mov
xlat
loope
push
out
addr16
pusha
push
pushf
inc
xor
jecxz
xor
push
call
add
icebp
ret
mov
or
dec
icebp
mov
lods
repnz
call
faddl
inc
sbb
pop
shrb
stos
pop
adc
jecxz
aaa
loopne
stos
and
out
xor
push
adc
out
mov
loop
inc
mov
mov
jge
inc
scas
dec
sbb
lea
dec
xchg
dec
test
xchg
fadds
rcl
mov
imul
jo
fcoms
in
lahf
sub
push
cmpsl
and
cmp
call
adcl
push
aad
sub
push
test
sti
mov
js
pop
rcll
lods
mov
call
roll
ja
mov
lds
leave
fisubrs
fists
sub
push
push
mov
lea
cmp
shlb
mov
stc
dec
subl
daa
outsb
sbb
jle
insb
repz
imul
adc
js
sub
cld
pop
andl
pop
add
cmp
fldcw
bound
fnsave
into
dec
out
sub
push
dec
sub
mov
push
fimull
add
xor
push
sub
pusha
jle
and
out
and
jno
aas
daa
jle
pop
jecxz
sti
out
cmpl
push
rcrl
lret
pop
leave
sbb
jecxz
pop
pop
mov
ficoml
cmp
data16
aam
add
insb
test
push
pop
cmpb
outsl
cmpsl
out
mov
fcmovnbe
push
imul
out
mov
mov
std
mov
fcomps
int
mov
xor
fnstenv
mov
inc
xor
jne
rclb
imul
adc
hlt
pop
cmc
call
xor
sbb
fucomip
pop
test
push
out
xchg
outsl
push
push
repnz
jmp
into
dec
and
mov
mov
testb
and
aaa
testl
dec
mov
into
jnp
hlt
push
repz
push
enter
test
pusha
jg
aad
cmp
push
mov
lods
xlat
mov
insl
xor
in
sbb
inc
addr16
dec
adc
aam
jmp
mov
in
call
push
pop
movsl
outsl
cmp
hlt
mov
aam
sbb
out
add
pop
xchg
or
sarl
iret
ret
popf
pop
inc
std
sti
sub
add
fsubr
out
pop
sti
adc
sub
sbb
inc
lea
and
jmp
jae
push
jle
push
lods
xchg
imul
and
jp
lods
or
pop
add
and
incb
arpl
and
mov
jb
cwtl
sub
into
or
imul
daa
mov
out
jmp
pop
pushf
jg
push
lret
fimull
add
iret
xor
into
outsb
cmp
shrl
adc
inc
mov
clc
mov
and
adc
dec
shl
loopne
dec
jge
sub
jb
test
test
test
movb
adc
fwait
insl
shrb
pusha
das
xchg
sbb
addr16
cwtl
sbb
mov
xor
xor
fwait
iret
mov
mov
pushf
test
add
and
xor
sahf
jge
test
dec
out
mov
ds
fsts
add
and
add
sbb
inc
daa
push
cmp
stc
lret
loope
fcoml
or
imul
sub
jnp
cwtl
arpl
test
mov
sub
jmp
adc
push
jle
push
add
addr16
das
jbe
in
mov
movsb
xor
pop
cmp
push
xlat
mov
jge
xchg
mov
adc
adcl
jge
and
inc
cmpsl
jg
test
and
popf
xor
or
xchg
mov
push
or
fwait
sub
sbb
addl
and
aaa
imul
rclb
push
sbb
jp
pop
inc
iret
xchg
jno
add
sbb
and
mov
add
xor
xor
hlt
xlat
push
sub
sti
aaa
outsb
inc
iret
jl
enter
xor
pop
in
and
pop
int
mov
stc
test
enter
mov
mov
aam
xchg
adc
ret
mulps
loopne
mov
subl
incb
mov
add
push
les
pop
aam
fwait
lods
mov
sub
hlt
mov
out
data16
sbb
jecxz
ret
sbb
dec
cltd
push
cmp
lods
mov
lods
push
rcrb
sbb
add
inc
sbb
enter
test
push
out
push
scas
lds
adc
js
arpl
pop
les
jb
les
ja
dec
bound
adc
bound
push
jmp
mov
ja
ret
das
cli
jno
cmc
jl
push
insl
outsb
cld
xor
add
xchg
shr
inc
les
mov
addr16
xor
jge
push
push
jns
rclb
mov
pop
and
imul
popf
fldcw
jmp
inc
into
or
rorb
xlat
xchg
pop
or
or
mov
test
mov
in
push
mov
jg
int
or
fcoml
pusha
repnz
dec
stos
xchg
and
xor
hlt
dec
dec
mov
sub
pusha
lods
jbe
ret
std
in
orb
cmpsl
sub
adc
gs
mov
pop
loop
adc
jle
cmpsb
movsl
cmc
jp
add
xchg
rcrl
fbstp
jg
in
mov
sti
lret
bound
test
add
mov
in
mov
mov
dec
and
lds
adc
daa
xor
mov
mov
aas
into
out
pop
mov
xor
loopne
mov
sbb
mov
xchg
jne
imull
sbb
cmp
dec
movsl
jbe
and
ss
sbb
cmp
js
js
shrl
popf
pop
dec
push
or
jmp
xchg
test
sbb
push
push
adc
shl
and
lods
mov
mov
add
cwtl
mov
mov
dec
pop
pop
dec
ja
cmp
mov
mov
outsb
icebp
or
arpl
fistpl
ss
dec
lods
pop
arpl
aas
push
cli
imul
xor
maxps
and
popf
add
push
popa
sti
pop
jns
or
in
int3
add
cld
adc
jb
gs
outsl
outsl
cltd
dec
sbb
std
sbb
sbb
mov
push
cwtl
sub
pop
icebp
sbb
add
cmpsb
insb
mov
push
inc
outsl
out
dec
dec
stos
pop
jne
mov
sbb
adc
ss
xor
fiadds
bound
push
xchg
jg
cmp
pop
pop
jmp
dec
pusha
lods
clc
jae
cmp
cmp
sub
mov
sbbb
sbb
cs
add
pop
mov
push
fcomps
xor
sti
push
jb
xchg
lahf
test
xchg
mov
xchg
cli
cltd
cltd
or
addr16
jne
xor
xchg
dec
and
rcrl
je
arpl
out
pop
cli
sub
clc
dec
inc
into
lret
popa
movsb
je
pop
push
ret
ss
sbb
out
cwtl
pop
cmpsb
mov
dec
jne
in
mov
stos
jns
pop
or
push
call
xlat
loop
call
adc
xchg
cmp
push
hlt
lret
mov
cmp
fadds
pop
mov
cli
aaa
pusha
imul
jo
fimuls
adc
loop
das
mov
cltd
push
adcb
mov
xlat
pop
rcll
jle
dec
inc
fs
aaa
outsl
shrb
xor
mov
int
mov
pop
cmp
cmp
scas
pop
cmp
xor
mov
push
inc
xchg
cli
inc
pop
sbb
jge
and
jecxz
insl
push
dec
iret
lea
andb
stos
push
inc
cwtl
xchg
es
cld
call
add
cmp
mov
xchg
out
jp
push
hlt
and
pop
in
insb
gs
outsl
mov
nop
in
inc
pushf
popa
pmaxub
fs
mov
test
mov
xchg
pop
pop
out
out
lret
popa
xor
mov
xor
or
outsl
push
or
hlt
idiv
mov
stos
add
add
xor
and
or
adc
adc
fisubs
or
and
sbb
stos
inc
out
mov
sbb
aam
roll
push
adc
inc
sbb
ret
pop
and
sub
cld
mov
std
shrb
sub
das
in
das
or
push
shrb
mov
inc
lret
imul
xor
ret
jae
jnp
int3
inc
xlat
cmp
pop
or
stos
add
push
cs
aam
inc
mov
jp
mov
sub
mov
ret
mov
lea
and
ja
inc
scas
jge
or
mov
lret
push
pop
int
adc
fdivrs
test
push
jae
or
mov
pop
addb
dec
mov
or
cmpsb
jb
out
lret
jge
je
dec
in
cli
pop
pop
ficoms
ficoms
jmp
pop
push
mov
aas
popa
or
pop
push
inc
or
and
cmp
pop
jno
call
push
fcmove
pop
push
and
adc
imul
inc
and
mov
not
mov
sub
adc
aas
dec
imul
mov
ficompl
or
jne
popf
rorl
sub
ret
add
rcr
sub
mov
mov
ljmp
pop
pop
mov
pop
into
push
push
das
fistpl
xchg
inc
push
outsl
mov
xor
fcoms
data16
mov
test
pop
clc
test
loopne
nop
dec
ret
out
adc
cmp
cmp
out
push
jmp
jp
push
nop
inc
or
adc
test
scas
les
fwait
sub
scas
andl
into
test
fmull
push
imul
pop
mov
call
xchg
jmp
sub
xor
cmp
jbe
pop
inc
lock
pop
adc
or
or
mov
cmpsl
mov
adc
lret
xchg
imul
mov
ja
adc
mov
enter
jo
rclb
jbe
mov
jge
and
inc
jg
test
dec
xor
push
xlat
pop
ret
jmp
or
xchg
ljmp
ljmp
add
add
dec
jne
xor
jnp
adc
lods
inc
gs
ja
and
lods
test
fisttpll
aas
xchg
rolb
repnz
int
out
fs
jge
fisubrs
mov
mov
pop
xchg
cmp
lods
xchg
rclb
and
pop
es
pop
push
xor
arpl
into
test
gs
mov
xchg
xchg
sub
cmc
mov
aas
repnz
mov
push
imul
imul
adc
pusha
mov
cld
iret
jmp
sbb
mov
aam
pop
jae
pop
call
xchg
loopne
lea
fistpl
je
fwait
jp
mov
push
mov
cli
dec
pop
push
das
lods
jne
jge
out
mov
rcrl
movl
xchg
jne
das
mov
sbb
or
jge
dec
test
scas
lcall
mov
test
xchg
sub
adc
xchg
pop
mov
mov
out
or
xor
outsl
sarb
cmpsl
pop
pusha
mov
add
jno
push
into
mov
shll
outsb
jle
mov
shrb
xor
dec
xchg
je
jle
das
dec
push
jmp
xor
out
jns
dec
aam
pop
xchg
outsb
add
fiadds
xchg
lods
and
mov
and
add
sysexit
inc
lret
inc
jp
jmp
cmpsl
push
xchg
pushf
or
scas
mov
jnp
imul
in
outsb
dec
inc
imul
push
mov
push
nop
divl
mov
mov
in
mov
jbe
stc
mov
imul
or
mov
mov
sub
xor
scas
and
dec
leave
out
xor
fs
cmp
dec
xchg
cmp
dec
rclb
xor
mov
sub
roll
lock
sub
les
lock
push
xor
in
cmp
nop
and
fbstp
adc
in
push
pop
cmpsl
js
xchg
fs
idivb
or
por
fidivs
shlb
lds
insl
out
lret
sub
or
add
or
push
fcmovnb
imul
mov
out
sbb
repz
xchg
in
xor
sub
lods
outsl
push
shrl
jle
pop
aas
adc
popf
fsubs
dec
test
bound
adc
sbb
mov
sub
xor
push
cmp
adc
cmp
fmulp
lea
push
sub
icebp
mov
pop
daa
leave
xchg
inc
mov
sub
icebp
icebp
xchg
and
nop
adc
jmp
cmpsb
and
sbbl
fcmovnu
xor
inc
insl
loope
dec
cmpsb
mov
aaa
lret
out
and
out
mov
adc
jo
ss
enter
daa
data16
push
ja
dec
push
inc
cmp
push
aad
pop
fucomip
pop
stc
in
fwait
in
mov
dec
xchg
sub
lea
or
out
adc
mov
mov
xorl
pop
push
xchg
or
and
cltd
dec
jmp
xchg
mov
and
adc
and
insb
and
xchg
lcall
add
lret
jb
inc
into
mov
data16
lahf
nop
in
inc
in
cmpl
cltd
cmp
mov
mov
int3
fcmovnu
fdivrp
and
jp
data16
aas
jne
cmp
cwtl
lods
mov
xor
in
dec
divb
into
cs
mov
imul
adc
int
cltd
sbb
clc
js
pop
test
jae
lods
add
xchg
mov
ficoms
push
imul
jbe
or
outsl
cmpb
xor
or
and
adc
mov
sbb
sbb
sub
sbb
jno,pt
loop
imul
fidivl
loopne
jb
xor
jae
sbb
idivb
add
add
add
sub
pop
nop
das
scas
or
mov
aas
and
and
ret
or
gs
or
enter
addr16
inc
mov
xchg
int
notl
sahf
outsb
insb
mov
outsl
sub
pop
icebp
aaa
push
push
push
sti
orb
std
pop
or
or
test
lret
in
mov
lcall
xchg
add
add
inc
inc
xchg
sar
cs
lods
adc
inc
aaa
cmp
cwtl
or
lahf
jne
insb
aaa
dec
test
sbb
loop
dec
lock
mov
stos
push
inc
iret
xor
pusha
notl
scas
loopne
dec
jmp
mov
shrb
sub
popa
mov
or
fwait
add
cmp
xchg
aam
int
mov
enter
mov
mov
mov
xchg
mov
pop
xchg
into
push
dec
mov
jle
loop
pushf
xchg
and
dec
fcmovbe
xorl
icebp
cltd
push
popf
push
mov
mov
outsl
dec
cmpsl
sbb
rcl
cmp
add
cmpsl
lret
out
movsl
fnstcw
push
xor
dec
sbb
imul
pop
mov
imul
lods
stc
and
dec
pop
faddl
add
mov
pop
pop
fsub
sbb
mov
xor
in
xchg
dec
add
stc
adc
xchg
aad
ljmp
xor
xor
shlb
imul
ja
adc
in
int
aaa
subl
jecxz
and
lret
rcr
or
jbe
push
ljmp
shrb
or
inc
dec
inc
test
imul
pcmpgtb
fcomps
adc
rcrl
pop
push
mov
fdivr
add
xor
ror
fistps
mov
inc
inc
cmpsb
js
sub
cmp
inc
or
aas
sub
aad
push
dec
jle
shl
xor
andl
das
jo
or
cmp
addr16
mov
hlt
pop
dec
fisubs
fs
cmpsl
jge
pmulhuw
ljmp
lret
adc
xchg
fmull
movsl
push
lcall
out
mov
data16
and
roll
and
call
mov
lods
lcall
mov
add
int
mov
fdivrp
aas
mov
mov
pop
adc
int3
leave
xor
push
inc
push
cli
jge
push
pushf
in
push
js
mov
ret
sbb
sub
cs
push
cmp
lahf
nop
sub
imulb
fadds
js
cmp
sbb
xor
mov
cmp
or
lcall
pop
mov
sub
sahf
push
stos
pop
or
dec
jge
sbb
mov
or
mov
out
lret
imul
sbb
inc
xchg
jle
test
push
notl
ret
notb
xor
movsb
pop
jae
inc
dec
mov
mov
scas
push
icebp
inc
inc
aas
xchg
cmc
dec
or
mov
test
aam
daa
cmpsl
enter
xchg
das
sbb
andl
pop
mov
mov
or
sbb
fcmovnb
push
pop
push
pusha
and
leave
nop
fadds
jp
lea
jp
mov
push
mov
rol
clc
stc
push
or
xchg
mov
stc
loopnew
xorl
fsubl
xor
jnp
mov
int3
adc
jp
push
fnstenv
sahf
pusha
adc
adc
fcmovnbe
das
shlb
repz
dec
lret
loope
cmp
sub
dec
cmp
cld
push
dec
push
pop
cmp
mov
call
call
and
sub
xchg
push
std
sahf
repnz
cmc
out
cmp
or
loop
adc
jnp
xor
pop
and
mov
sub
mov
cli
and
inc
xor
sbb
repnz
rcrb
jmp
iret
xor
mov
pop
jns
inc
xor
fldl
shrb
dec
lret
lods
popf
mov
aam
pop
pop
rorl
clc
adc
inc
insl
xor
inc
inc
mov
out
mov
mov
fildl
mov
dec
add
js
xchg
sbb
xor
jo
in
push
leave
push
inc
inc
mov
and
jp
inc
cltd
lods
leave
push
cmp
mov
sahf
inc
bound
add
shll
enter
subb
mov
sarb
or
jp
stc
xchg
lret
inc
mov
loope
sub
shrl
sarl
std
mov
fwait
mov
cli
cmpsb
and
ja
dec
add
in
cld
inc
mov
imul
or
add
mov
push
ss
xchg
stc
js
adcl
add
in
bound
and
mov
push
jbe
call
leave
loopne
sbb
loope
stos
jmp
dec
pop
xor
imull
es
sti
cmp
pop
sbb
dec
sahf
ja
outsb
sbb
xor
mov
stos
and
pop
shl
mov
adc
push
or
int
cltd
adc
aad
cli
leave
push
je
ret
adc
mov
call
outsb
adc
mov
addr16
jmp
int3
xor
mov
imul
test
scas
inc
jecxz
jne
xor
decl
mov
negb
or
sbb
lods
shlb
and
adc
add
xchg
cmp
scas
aas
fmuls
popa
dec
mov
jecxz
cmp
jnp
pop
lods
hlt
xchg
cld
jne
sahf
popa
nop
lcall
push
enter
repz
cmp
cmovb
iret
pop
insl
ficoms
mov
sbb
xchg
push
shll
stc
jle
sub
adc
pop
sub
data16
mov
out
mov
mov
aaa
and
pop
cld
sbb
popl
add
xchg
jle
jne
out
movsl
mov
lahf
out
popa
shrb
push
iret
adc
loopne
hlt
push
imul
push
out
outsl
dec
or
rcll
stos
push
rorl
jl
fcmovnbe
das
scas
repz
sbb
int3
xor
jmp
arpl
push
jns
and
mov
sbb
call
inc
add
int
fnstenv
fidivs
leave
push
jg
test
lcall
xor
in
test
cmp
xor
arpl
cmpsl
iret
inc
mov
rcr
insb
pop
jae
loop
lock
mov
mov
out
ret
pop
les
fldcw
lds
xor
rclb
popf
mov
dec
mov
sub
and
js
pop
loop
std
mov
jne
sub
fs
divb
adc
inc
repz
inc
adc
popf
mov
call
cmp
push
pop
sub
dec
xchg
scas
push
mov
movsb
mov
popf
insb
sub
mov
mov
outsb
dec
out
mov
cld
jle
sub
vandnps
xor
lock
scas
stos
inc
adc
cs
mov
mov
dec
and
mov
xchg
scas
sbb
jnp
jmp
sub
pop
int
mov
lret
adc
outsl
cmp
repz
scas
out
mov
addl
scas
je
add
lcall
or
push
xchg
lock
iret
cmp
leave
les
movsl
mov
adc
pop
mov
push
repz
mov
bound
lds
cmpsl
cmp
cli
jp
lret
push
add
dec
or
sbb
mov
push
mov
inc
out
aas
ja
inc
fs
enter
pop
cmp
popa
sub
ficoms
nop
mov
mov
es
loop
cwtl
insb
shl
test
mov
sub
adc
mov
ret
insb
aad
add
cmpsl
sbb
add
dec
fnstcw
jecxz
pop
jg
jb
mov
test
aam
xor
rcll
pop
in
inc
daa
test
cmpsb
pop
mov
cmp
pop
into
cmp
out
inc
call
inc
mov
pop
push
dec
lods
sub
cmpsb
hlt
xchg
mov
adcb
shlb
push
add
or
jp
mov
loopne
loop,pt
test
sbb
fwait
lret
test
add
mov
insl
dec
push
incl
arpl
pop
imul
xchg
pushf
addl
cmp
enter
lret
or
jne
ja
mov
js
cmc
add
mov
add
movsl
push
xor
cmpsl
fisubl
inc
roll
pop
ss
dec
mov
rol
test
int3
roll
mov
cs
imul
ds
pushf
push
popf
aaa
fidivrl
dec
mov
std
inc
mov
icebp
inc
pop
add
and
ret
loopne
ja
jmp
in
int
pop
xchg
pop
std
dec
xlat
mov
int
je
stos
xchg
xor
test
push
sub
mov
rol
enter
push
mov
or
insl
pushf
sub
test
test
add
pushf
and
push
imul
pop
mov
or
mov
mov
mov
addr16
cwtl
jns
cmpsb
incl
sbb
dec
mov
fidivl
testb
lea
mov
fcoml
cmp
in
sub
es
loop
dec
pushf
xor
push
add
in
push
pusha
xchg
xchg
rep
adc
mov
js
push
loope
ficoms
jmp
push
mov
xchg
pop
xchg
and
mov
out
xchg
push
dec
ss
sbb
xor
adc
pop
mov
mov
cmp
adc
out
test
insl
and
mov
ret
add
in
aam
es
gs
mov
pop
lret
mov
jge
jb
push
loope
fucomp
push
hlt
xchg
and
cmp
lahf
fsts
int
cmp
imul
int3
test
xor
outsb
push
mov
and
inc
push
test
xchg
adc
jg
xchg
lahf
loop
loop
inc
lea
out
sbb
cld
inc
clc
mov
adc
and
movsb
shlb
jle
icebp
loope
aaa
mov
mov
test
enter
push
les
test
mov
mov
dec
mov
ret
mov
bound
jnp
stc
push
lock
dec
jae
or
jmp
or
push
ud2
adc
mov
cmp
hlt
xor
clts
adc
faddp
or
and
call
jmp
jbe
je
rcll
xor
fwait
and
push
jle
adc
mov
add
out
sub
test
push
push
movsb
mov
insb
lods
mov
and
xor
mov
mov
jge
add
cmc
int
jmp
cmp
mov
out
jbe
hlt
xchg
jmp
sahf
adc
cmp
aam
movsl
scas
xchg
pop
jne
cld
nop
inc
cmp
xchg
sub
shll
ret
cmp
dec
pop
xchg
adc
lds
test
mov
into
xor
cmc
push
jmp
and
fdivl
movb
xchg
xchg
dec
roll
stos
out
dec
loope
jne
add
add
inc
dec
into
shll
mov
jne
add
adc
xlat
jb
mov
mov
out
sub
push
inc
mov
xor
mov
aam
xchg
inc
dec
fimull
pop
xor
jb
scas
lcall
lret
ljmp
mov
stc
daa
pop
pop
jb
sbb
testl
movsl
pop
repz
notb
lret
cmpsl
and
jp
mov
sbb
pop
call
xchg
loope
mov
ficoml
pop
add
pop
push
int3
mov
rolb
jmp
xor
in
jo
test
sarl
cmp
fisttpl
in
jg
mov
xchg
repz
push
cli
inc
pop
add
ss
push
pop
sub
jbe
jecxz
mov
test
sahf
xor
std
nop
xchg
mull
jl
jno
sub
leave
sbb
xor
adc
jge
xor
test
pop
adc
movsb
push
gs
frndint
sahf
push
in
movsb
iret
mov
jnp
nop
push
pusha
or
or
inc
lock
dec
dec
cmp
sbb
iret
mov
repz
add
xor
xor
mov
pop
mov
cs
mov
xchg
stc
adc
dec
dec
add
mov
push
push
js
xor
sub
jmp
pop
add
xchg
push
clc
jno
stc
ret
call
inc
dec
jo
inc
push
xchg
inc
lret
sar
sub
loop
orb
fidivrs
nop
loope
cltd
stos
mov
xchg
addr16
add
xlat
adc
mov
xchg
mov
lods
inc
lock
clc
lods
xor
sub
in
add
out
and
add
mov
pop
mov
or
insb
dec
aas
mov
inc
inc
sbb
jns
mov
mov
mov
scas
lea
mov
aaa
inc
mov
test
or
int3
mov
les
inc
xor
and
aaa
inc
imul
or
lret
xor
fbstp
lods
pop
push
test
mov
adc
aas
dec
pop
push
xor
mov
pop
sub
mov
dec
in
mov
das
lea
int
mov
push
push
rcr
mov
dec
sbb
add
xchg
pop
lret
jnp
xchg
and
inc
cltd
and
cltd
mov
add
fisttps
stos
cwtl
push
sub
and
or
mov
fs
or
sbb
sbb
add
mov
sti
cmp
push
jge
dec
adc
and
cmpl
mov
cwtl
jnp
mov
in
insb
mov
xchg
push
cmp
rcll
sti
rol
in
shrb
mov
fisubs
inc
xchg
jl
mov
mov
cmc
lahf
insl
dec
outsl
shr
dec
xor
lods
mov
and
je
dec
sub
imul
xchg
rorl
sbb
jo
jno
jg
subb
jo
sub
faddl
add
mov
ljmp
xor
scas
sahf
fcmovne
mov
stc
fidivs
push
pop
cmc
sti
mov
loopne
ror
mov
stc
mov
mov
stos
arpl
xchg
mov
test
lcall
adc
push
lret
jne
and
out
lods
fnstcw
imul
xchg
and
or
pop
scas
fs
stc
std
sbbl
add
hlt
lret
loope
fistps
sub
cmp
sbb
mov
mov
inc
cmpb
imul
ljmp
fdivp
dec
test
stos
xor
inc
jnp
sbb
push
jmp
popl
adc
sbbl
out
sti
imul
cmpsb
push
es
jmp
push
std
adc
out
neg
mov
push
pop
nop
shrb
bound
lods
add
dec
dec
xchg
shll
mov
clc
jle
mov
stc
mov
xlat
xchg
adc
xchg
mov
outsl
mov
mov
aas
fucomip
in
imul
push
push
aas
sahf
in
jno
mov
mov
cmp
popa
xor
jb
push
std
or
jnp
cmpsl
pop
mov
in
pushf
cmpsw
insb
fs
mov
xor
sub
lds
loopne
pop
mov
cmp
pop
jae
adc
fmuls
sbb
sbb
lods
adc
pop
stc
loope
mov
loopne
sbb
test
mov
jnp
xchg
and
clc
jle
inc
in
or
jne
pop
loope
daa
aam
sbb
sub
xchg
adc
mov
xchg
push
cmpb
xor
mov
stc
mov
aaa
add
add
dec
ret
sbb
leave
lret
lcall
repz
scas
mov
add
sbb
fdivs
cs
mov
and
aad
in
in
imul
xchg
mov
xchg
pop
ja
scas
fwait
mov
cmc
xchg
xor
into
xor
stc
stos
or
xor
push
pusha
mov
ja
arpl
push
pop
fs
popf
inc
cli
lods
iret
sti
mov
shll
mov
inc
icebp
in
ds
xor
fldt
sub
fstpl
xchg
popf
xlat
add
shrl
hlt
jbe
aam
xor
fidivrl
sbb
repnz
inc
push
jecxz
fildll
lahf
test
stc
cmpsl
js
in
push
out
pop
test
int
out
into
add
loope
data16
notl
cvtps2pi
jmp
es
xchg
pop
ss
jl
adc
sbb
pop
lock
cs
into
pop
fadds
inc
or
adc
icebp
add
subb
dec
xchg
sbb
cld
jge
aas
pop
aam
decl
cmp
lret
mov
adc
mov
inc
or
imul
mov
loope
fimull
dec
ss
das
fs
dec
mov
mov
fiadds
sbb
inc
jne
fldl2t
lcall
stos
add
inc
cmp
dec
dec
jecxz
jb
repz
call
cmp
pop
dec
add
sub
jle
jb
jb
das
call
out
fstps
sbb
mov
fistl
pop
insl
subl
xor
fwait
cmp
mov
mov
mov
mov
shlb
cli
jno
loope
push
dec
aaa
mov
test
popa
mov
out
dec
cmpsb
movsl
xor
and
lds
cwtl
xchg
mov
rcrl
das
aam
out
lods
lcall
mov
dec
or
inc
out
add
add
inc
rcrb
jne
add
mov
stos
xlat
jge
or
jmp
movhps
js
scas
out
call
fadds
push
repz
pop
push
mov
mov
dec
popf
jg
cli
fsts
add
ds
push
or
movsb
test
and
into
cs
nop
sub
mov
mov
and
aaa
inc
out
push
mov
push
sahf
adc
fcmovnu
pop
pop
dec
jmp
dec
push
xchg
and
mov
push
pusha
movsl
push
adc
push
dec
mov
js
fsts
jo
cmpl
push
fstpl
and
nop
jno
lahf
xchg
dec
jnp
js
outsb
movsb
sti
sub
mov
imul
fnstsw
add
movsl
mov
mov
cmpsl
repnz
test
cmpsl
pusha
gs
mov
inc
femms
xchg
movsl
cmpsl
dec
sub
xchg
fdivrs
push
fsubp
loop
cmpl
in
loope
dec
xor
mov
stos
adc
adc
mov
rcr
orps
inc
push
aad
fdivrl
faddp
push
xchg
inc
dec
insl
mov
aaa
or
xlat
lcall
loop
testb
jno
add
lock
or
and
fistpll
push
pop
sub
out
or
lods
testl
mov
mov
icebp
and
hlt
pushf
ja
add
je
stc
sub
xchg
sub
cmp
fs
in
sub
ret
notb
in
mov
push
fwait
inc
xor
pop
into
jecxz
call
call
lret
mov
pop
xchg
loop
push
push
pop
leave
or
push
xchg
push
bound
mov
mov
cmc
jb
out
shl
cmpsl
shll
or
mov
into
jmp
adcl
mov
xor
pop
cmp
or
pop
inc
sub
sbbl
inc
shl
cmc
es
ret
add
push
fmuls
addb
jge
xchg
pop
loopne
push
lret
mov
or
push
push
adc
mov
push
pop
mov
aas
sbb
fldcw
jp
jmp
outsb
xlat
push
out
push
stos
cmp
inc
daa
dec
mov
decl
outsb
dec
xor
lahf
add
sub
fldt
sub
sub
popa
jge
imul
lcall
test
inc
arpl
mov
adc
add
ds
scas
pop
mov
loop
aam
outsl
push
adcl
fsubl
ds
bound
insb
sbb
sbb
les
mov
mov
stc
and
sub
xchg
add
or
add
cmp
in
lret
cwtl
int
push
pusha
xor
xchg
pop
xchg
inc
adc
jne
addl
adc
imul
xchg
xchg
fnstenv
push
push
andb
outsl
xor
rcrb
cmpsb
xchg
jns
divb
lea
arpl
mov
add
int3
mov
or
dec
lahf
and
push
es
inc
inc
in
sbb
loope
lret
or
dec
dec
adc
sbbl
icebp
popl
dec
packsswb
mov
andl
pop
add
or
gs
bnd
idivb
rcrl
cltd
lret
dec
xchg
jnp
or
jp
gs
cmc
adc
push
xchg
push
fcomps
pop
xchg
xor
test
push
jp
ja
xor
pop
push
rcll
icebp
mov
sbb
inc
sbb
pusha
push
ds
rcll
xchg
std
pop
lods
push
bnd
aas
pop
repnz
loopne
clc
or
in
mov
push
in
mov
cld
or
push
jle
dec
int
mov
lock
sbb
inc
sub
jecxz
xchg
mov
popl
inc
mov
fldenv
sub
dec
cs
neg
insb
cmpsl
jo
mov
or
or
call
imul
fisttps
ljmp
into
enter
popf
xchg
add
jb
outsb
jg
xor
or
stc
loope
or
dec
inc
cltd
adc
pop
movsb
mov
adc
add
repnz
fstps
sar
mov
cmp
jge
imul
adc
out
int
repz
xchg
in
mov
xchg
sahf
test
push
dec
pop
jb
rorl
cmp
xor
fcmovnu
shr
sub
jg
add
aam
mov
jbe
mov
push
mov
ds
div
inc
xchg
jecxz
fprem1
cmp
cwtl
dec
ds
push
out
and
xchg
and
cmpsl
mov
dec
adc
xor
mov
pop
arpl
inc
insl
cmpsl
dec
fidivrl
or
pop
aaa
mov
dec
repz
lahf
add
cmpsl
out
fdivp
lods
push
or
shl
call
ret
mov
xchg
push
mov
outsl
xlat
lret
mov
dec
sbbb
std
aad
xorl
jg
sbb
dec
lock
mov
shrb
mov
push
jp
adc
in
cmp
adc
add
inc
fnstcw
hlt
push
mov
mov
push
dec
fistl
add
into
notb
mov
movl
enter
sbb
pusha
aam
pop
mov
out
lods
ret
shl
sbb
int3
leave
pop
test
outsb
pushl
ficoms
jmp
lret
das
leave
fidivs
das
jg
inc
xlat
jno
ret
push
jp
icebp
pop
and
mov
imull
shl
int3
aas
inc
mov
xchg
insl
sahf
mov
call
dec
dec
stc
insl
or
sbb
or
adc
push
imul
mov
shlb
pop
xchg
mov
test
insb
and
dec
and
jg
jecxz
or
xchg
mov
lret
rol
adc
xchg
push
mov
test
aas
icebp
xchg
mov
fwait
mov
mov
test
jne
movsl
jae
or
in
push
loopne
xchg
and
test
and
rcrl
test
jmp
inc
push
das
outsb
out
sarl
movsb
nop
sar
stos
add
push
fwait
imul
mov
xchg
lea
fidivl
daa
mov
jle
inc
test
pushf
pop
jb
pmuludq
xchg
pop
cmpsb
stc
fidivrs
and
sub
dec
add
lahf
dec
and
out
insb
pop
inc
fwait
sub
mov
cli
xor
cmpsl
cltd
xor
mov
fists
sbb
xor
outsb
sub
dec
loope
add
or
mov
inc
mov
or
sar
outsb
and
or
js
xor
push
or
clc
cmpsb
ret
jnp
mov
xchg
push
jecxz
or
popa
cmp
push
pusha
and
dec
in
push
pop
mov
and
pop
mov
pop
sbb
divl
frstor
rcrl
inc
inc
pop
fcomp
jg
out
daa
jnp
in
or
jg
std
mov
mov
inc
jne
pop
cs
cmp
lods
push
mov
jo
vpmacswd
outsl
adc
mov
sub
rep
lods
jne
pop
xlat
xor
push
shrl
mov
fimull
xor
jnp
sbb
cmp
or
cli
fsubr
insb
out
jecxz
add
pop
mov
jle
stos
fisttpll
imul
mov
sahf
hlt
jnp
sbb
pop
sahf
icebp
push
or
aas
stc
nop
xchg
dec
push
cltd
cmp
sbb
inc
cmp
orl
mov
jo
sbb
cmc
inc
popa
pop
lock
dec
pop
mov
push
orb
mov
or
xor
cmp
cmp
inc
xor
sbb
jbe
int3
adc
lret
xlat
into
test
mov
mov
push
add
cmp
pop
outsb
lea
std
jnp
aas
mov
test
and
mov
mov
xor
pop
cltd
aaa
mov
pop
jl
addl
mov
cltd
mov
sub
mov
iret
mov
sahf
add
pop
out
push
push
pop
ret
mov
rolb
lods
pop
adc
push
in
insl
pop
dec
pop
push
sbb
lret
add
mov
call
mov
movsl
mov
xor
xchg
mov
outsb
fists
cli
decb
push
push
sub
leave
hlt
jae
jo
push
sub
aaa
test
push
pop
sub
movb
add
adc
out
dec
loopne
pop
mov
adc
cmp
out
int3
test
pop
stos
xchg
mov
lcall
adc
rcrl
xor
sub
mov
inc
call
sbb
xchg
andb
mov
sbb
fisubrs
popa
movsb
inc
rsqrtps
mov
or
push
push
mov
mov
ret
addl
je
out
ret
pop
sbb
dec
jmp
mov
or
imul
aam
lcall
fwait
outsl
aam
lret
jmp
pop
xchg
inc
mov
xchg
movsl
int
pop
xchg
push
jnp
mov
mov
and
sbb
inc
lahf
sub
push
jle
sub
cmp
dec
sbb
inc
popf
inc
bound
dec
fstps
add
add
and
inc
adc
shrw
insb
jo
sahf
sbb
loopne
mov
xor
lahf
xchg
shl
jo
inc
add
lods
ja
cmpsl
jne
sub
mov
or
aad
sub
fs
movsb
mov
sbb
inc
inc
xor
ljmp
sub
test
iret
or
add
jae
ret
sub
pause
arpl
jp
sub
sbb
or
les
popa
xchg
sti
nop
cltd
mov
es
dec
xchg
dec
or
out
pushf
enter
ljmp
pop
mov
lods
jo
push
cmpsl
das
stos
popa
dec
loopne
xor
adc
xor
test
scas
ret
xchg
mov
lea
or
in
or
nop
jne
lcall
cmc
xor
or
repnz
out
dec
insb
mov
shl
sub
adc
add
dec
pop
pop
add
hlt
xlat
loop
je
int
stos
push
xchg
js
push
xchg
jmp
jl
sub
inc
dec
aaa
mov
loope
insb
or
mov
sub
pop
mov
xor
add
pop
mov
fadd
jnp
pushf
pop
or
dec
dec
sub
and
test
insl
jecxz
outsb
insl
stos
imul
fwait
test
rolb
test
stos
rorl
adc
imul
mov
xchg
outsl
sbb
sti
fildl
mov
gs
sbb
mov
cmp
mov
jecxz
scas
outsb
loope
ss
ss
pop
sub
fwait
je
cmp
sar
xchg
bound
lea
mov
sbb
jmp
adc
lds
rclb
imul
pusha
jg
mov
add
fsubl
cmc
adc
stos
les
dec
add
fmulp
call
rolb
cmc
out
mov
lret
inc
xchg
stc
out
int
mov
adc
fidivl
nop
or
push
and
iret
cmpl
push
mov
insb
lea
ss
fdivl
and
inc
cmp
pop
xchg
adc
and
mov
enter
andl
xor
fimull
pop
stos
xor
pop
add
xchg
add
jecxz
fnstcw
add
pop
pop
push
xchg
stos
push
roll
mov
xchg
jl
mov
sbb
cmp
xchg
cmc
mov
add
int3
and
pop
shrb
dec
mov
cltd
sub
imull
out
or
inc
loop
mov
mov
jecxz
fdivl
hlt
pop
push
into
insb
dec
ss
sub
nop
cmc
jmp
sbb
mov
leave
fadds
scas
fldl
out
add
dec
test
push
les
xorb
ret
shlb
insb
testb
mov
mov
movsb
or
sub
dec
dec
or
outsl
sbb
cmpsl
popf
in
jns
pop
push
cmp
mov
clc
cmp
lcall
mov
jbe
aas
or
lahf
ret
push
mov
inc
jae
sub
xchg
xchg
enter
mov
shll
jae
emms
pop
xor
jnp
out
mov
cmp
mov
les
test
lods
mov
sub
lock
pop
mov
and
mov
stos
into
pop
in
pop
jbe
cmp
push
mov
or
add
xor
sub
pop
xlat
mov
fdiv
movb
mov
mov
pop
mov
fsub
lods
jns
and
std
jl
mov
push
or
add
add
xor
jno
popf
mov
sbb
aam
mov
lret
adc
decb
and
xchg
and
divb
add
jne
pop
jb
rcrb
cltd
pop
in
xchg
testb
xchg
xchg
in
movsl
push
jb
mov
adc
es
into
clc
ljmp
mov
xchg
jl
xchg
add
jmp
popf
call
sub
push
mov
bound
into
mov
add
inc
fimull
mov
jnp
xchg
xor
pop
or
fwait
andl
push
and
jmp
cmp
push
cwtl
jbe
int3
jl
arpl
and
mov
mov
push
pop
nop
mov
sbb
mov
mov
idivl
mov
xchg
nop
fprem
and
jbe
add
mov
mov
adc
push
adc
dec
call
repz
ljmp
fildll
mov
mov
sbb
addr16
loope
popf
inc
ljmp
mov
clc
mov
fistpl
out
call
hlt
ja
sub
push
add
xchg
lcall
bts
shll
lods
shrb
mov
or
add
cmp
push
sahf
pop
mov
pop
push
xchg
push
cmpsb
xor
jb
inc
push
out
idiv
or
inc
xchg
into
cld
iret
insl
test
rcll
mov
sub
mov
and
pop
inc
mov
pop
jbe
push
test
add
fisttpll
mov
or
jl
arpl
popa
xchg
rcll
std
xchg
mov
ljmp
sub
or
cmp
or
cmpsb
testl
imul
xor
shld
in
outsb
fwait
mov
test
sti
mov
lock
sbb
mov
xor
xchg
inc
adc
mov
insl
movsb
test
xchg
movsl
cld
mov
ds
test
xorb
test
mov
outsl
ljmp
out
ja
fnsave
cltd
jecxz
sub
out
or
nop
xchg
and
mov
or
jmp
pop
xor
int
mov
mov
pop
xor
hlt
pushf
dec
cmp
stos
mov
jo
jp
adc
hlt
sub
mov
test
mov
pop
jns
lret
fbstp
mov
scas
pop
and
iret
xor
pop
and
sbb
xorb
lret
sbb
cs
pop
xchg
into
fidivl
in
fidivs
jne
iret
mov
cmpsb
bound
pop
push
cmp
cmp
sub
mov
pop
adc
pop
insl
cltd
cmp
push
push
sbbl
fwait
mov
push
cmpsb
icebp
sahf
lret
lret
repz
cmp
push
sub
bound
add
call
xlat
or
cmpsl
addr16
sbb
loop
or
sbb
test
xor
jne
ret
in
aad
mov
cmp
addl
movsl
leave
fisubrl
push
mov
test
push
mov
pop
cltd
pushf
stos
jbe
or
mov
repnz
test
and
rclb
test
js
push
stos
sbb
fptan
mov
adc
sub
dec
faddl
loope
add
mov
add
inc
inc
enter
mov
or
je
nop
nop
nop
nop
cmpw
jne
nop
nop
nop
nop
mov
leave
ret
xor
leave
ret
enter
cld
push
push
push
mov
mov
cmpw
jne
add
xor
mov
movl
inc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
inc
jmp
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
dec
je
jns
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jae
nop
nop
nop
nop
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
inc
dec
jne
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
add
mov
movb
cmp
je
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
mov
add
test
je
nop
nop
nop
nop
mov
jmp
cmp
je
inc
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
mov
jmp
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
dec
dec
jne
nop
nop
nop
nop
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
jmp
dec
mov
mov
mov
xor
shl
xor
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
dec
jne
or
mov
mov
add
jne
nop
nop
nop
nop
mov
add
stc
adc
adc
add
jne
nop
nop
nop
nop
mov
add
stc
adc
jb
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
cmp
ja
nop
nop
nop
nop
inc
inc
inc
inc
mov
mov
sub
rep
mov
jmp
mov
sub
lea
pop
pop
pop
leave
ret
xchg
inc
repnz
xor
or
push
repnz
push
repnz
js
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
repnz
movsb
repnz
mov
or
add
add
push
push
inc
push
xor
cs
dec
dec
add
repnz
add
add
clc
icebp
or
clc
icebp
or
clc
icebp
or
clc
icebp
or
clc
icebp
or
add
add
add
inc
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
imul
jae
add
dec
gs
popa
addr16
outsl
js
add
dec
insl
jo
jb
pop
inc
outsb
fs
