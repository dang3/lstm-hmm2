add
or
pop
and
xchg
add
add
and
popf
dec
xchg
iret
nop
ss
add
add
sbb
add
dec
repz
or
push
rclb
adc
jb
imul
push
leave
and
and
adc
nop
inc
xor
or
and
or
je
sahf
or
add
sti
and
fwait
xchg
add
cmp
sarl
sahf
add
in
or
push
rorb
add
xchg
and
fsts
or
and
push
push
orl
xchg
loopne
inc
ss
loop
xchg
test
lcall
lds
dec
jle
cmpb
mov
mov
cmp
and
jl
test
add
scas
adc
cmp
inc
fsubrs
xlat
or
inc
mov
mov
or
mov
cmp
in
mov
dec
xchg
or
sub
ret
pop
adc
push
jp
jno
mov
cmpsl
js
testb
mov
out
jb
add
jl
inc
inc
repnz
xor
mov
dec
adc
adc
lahf
fbld
push
push
xchg
mov
dec
dec
or
mov
mov
insb
or
fs
jb
cld
xchg
shll
mov
sbb
or
cli
add
stos
mov
in
jns
xor
in
or
mov
gs
xchg
test
mov
pop
xor
fsubrs
sbb
inc
ss
sbb
sbb
push
add
inc
sub
add
cmp
fwait
add
outsl
and
push
les
dec
add
pop
and
xor
jb
lret
push
jae
dec
test
dec
jne
sbb
mov
and
lods
fistps
adc
xlat
sub
andb
cmp
repz
inc
popa
cs
push
sbb
push
push
repnz
cmpsb
add
sbb
incl
or
push
mov
or
ficoms
xor
roll
adc
mulb
sbb
push
sbb
add
addr16
push
dec
jmp
mov
inc
pushl
ret
mov
mov
in
sahf
push
push
and
sahf
out
mov
popf
xchg
dec
mul
inc
out
mov
and
repnz
mov
sti
jge
or
or
ds
repnz
hlt
lods
xor
stc
test
out
and
mov
inc
test
adc
repz
repnz
adc
and
repz
mov
rorb
and
adc
lea
aas
imul
cmp
aam
rcrl
fistpll
cli
fdiv
sti
sbb
sub
iret
adc
cld
sahf
iret
out
lods
mov
nop
int
outsl
outsl
and
insb
in
sbb
cmpsl
out
ficoml
sahf
outsl
test
xor
cld
push
in
inc
mov
cmp
repz
mov
fdivrs
xor
fstpl
fisubrl
mov
test
jns
fbstp
ss
repz
sbb
mov
lea
xor
and
and
iret
repz
pop
pop
stos
pop
adc
iret
addr16
dec
test
out
repnz
and
xchg
cmp
add
jnp
inc
sahf
jmp
cmp
js
scas
add
cltd
sbb
xchg
enter
aas
push
aas
or
add
mov
inc
push
cmp
mov
insb
out
mov
call
sbb
std
mov
fsubs
or
js
mov
subl
pop
push
add
cmp
sbb
xor
dec
jl
addr16
aad
and
popl
stc
cs
sbbb
or
dec
cmp
and
inc
xlat
pop
or
xchg
nop
mov
inc
ss
enter
dec
adc
xchg
out
ljmp
dec
popf
sbb
outsb
and
daa
jns
jmp
sub
sarl
gs
mov
cmp
mov
scas
es
test
xor
sbbl
dec
pop
repnz
lods
push
lcall
roll
sarl
dec
fldcw
repnz
mov
add
mov
ret
jae
cli
repnz
xor
ret
repz
insl
mov
pop
movb
and
out
cmp
cmp
out
mov
lahf
sahf
out
or
les
ja
dec
xchg
dec
movl
xor
and
mov
or
sbb
inc
sahf
out
push
push
add
mov
stos
add
and
stc
lea
insb
jle
repnz
insb
and
stos
repz
pop
sub
es
dec
cmpsl
sub
pop
xchg
pop
mov
dec
push
enter
sti
popa
iret
mov
or
adc
cmp
pushf
iret
outsl
sahf
out
in
stc
test
imul
dec
andb
and
test
lret
lcall
stos
mov
outsl
inc
enter
es
bound
pop
push
es
fsubp
and
dec
jb
push
negl
sbb
ror
and
frstor
bswap
jmp
and
add
lds
bound
repnz
ret
and
jp
icebp
pop
push
fs
es
adc
xchg
add
daa
adc
mov
mov
stc
and
cmp
mov
int
jg
lahf
sbb
scas
outsb
rcll
push
cs
cmp
arpl
ds
jns
iret
fdivs
push
mov
int3
and
repnz
enter
inc
cli
outsl
fwait
out
jle
and
sub
test
jae
push
cmpsl
xor
xchg
and
and
repz
dec
push
outsb
xor
loope
mov
mov
xchg
aaa
cmpsb
push
xor
cmp
imul
and
fildl
iret
repz
dec
sub
int
icebp
pop
add
mov
pop
mov
mov
mov
push
test
in
fstpt
xchg
cmpsl
mov
fstl
cmc
arpl
mov
imul
sbb
cs
in
out
pop
add
je
aam
arpl
jmp
mov
lahf
lret
adc
mov
inc
test
fisttpll
mov
repz
pop
out
jne
lock
in
jmpw
testl
aam
jecxz
dec
adc
icebp
pop
add
xor
push
fisubs
lea
into
out
ret
adc
arpl
push
scas
mov
lret
daa
mov
jmp
add
cmp
xchg
out
mov
dec
popf
in
xor
rol
test
mov
mov
scas
mov
es
int
jmp
mov
cmp
mov
mov
dec
sahf
iret
cmp
pushf
arpl
ja
aaa
loopne
pop
mov
mov
dec
enter
jo
pop
insb
in
hlt
jecxz
pushf
sub
enter
icebp
adc
sbb
mov
int
cmc
dec
add
mov
lcall
in
jne
mov
xchg
in
clc
cs
and
sahf
int
xlat
es
push
in
aad
sti
decl
imul
repz
int
jmp
iret
or
mov
inc
mov
pop
and
test
jmp
and
jo
lcall
push
enter
push
xor
daa
adc
sahf
xchg
mov
loopne
cmp
mov
push
pop
sub
xor
int
mov
jae
std
repz
inc
fs
imul
pop
enter
jge
pushl
pushf
cmpsl
sarb
iret
movsl
push
push
push
sbb
push
movsb
out
inc
jns
stos
push
frstor
filds
rorb
xor
or
arpl
repnz
rcr
mov
sbb
lods
push
jg
enter
xor
sbb
add
movb
jp
movsb
inc
mov
jg
jns
or
xor
loop
sahf
ret
add
test
nop
out
inc
ds
xchg
out
cmp
xor
enter
in
jge
das
es
sbb
mov
inc
jp
mov
push
cmp
icebp
adc
mov
fwait
insl
dec
mov
icebp
or
add
adc
nop
addr16
cmpsb
cmpsl
sbb
jge
push
addr16
es
clc
cs
lock
loop
pop
and
out
sbb
stc
xor
xor
adc
testl
stc
cs
mov
mov
sbb
jl
enter
mov
ja
mov
loope
nop
pop
das
xor
das
repz
add
in
fwait
gs
iret
jns
jae
shlb
icebp
lahf
test
or
dec
pusha
in
mov
and
mov
fcmovne
dec
mov
mov
daa
cmp
and
push
xor
xor
out
add
imul
cmp
or
cmp
inc
mov
rol
test
sbb
xor
into
inc
adc
out
xor
fdivr
filds
in
jecxz
dec
mov
jbe
ror
cmpsl
neg
stc
mov
adc
pop
adc
cld
dec
mov
scas
mov
push
out
popf
es
and
aad
sub
pop
sbb
aad
and
imul
jne,pt
fbld
inc
add
imul
ljmp
mov
push
mov
or
mov
int
gs
dec
push
es
insb
loopne
cmp
xor
xchg
xor
xchg
xor
or
jge
sub
and
je
sbb
push
repnz
popa
ljmp
arpl
mov
leave
out
in
push
and
xor
out
push
push
or
or
and
jbe
stc
adc
out
fwait
rcrl
sbb
lods
ljmp
loopne
mov
xor
rcrb
xchg
push
fistpll
fisubrs
xchg
iret
cmpl
aad
enter
fadd
into
notb
jae
lock
xchg
into
push
cmp
cs
es
jle,pt
rcll
in
shll
in
pop
repnz
shr
cmp
roll
or
popf
adc
loope
iret
sbb
ss
cli
es
dec
sub
or
inc
ret
sub
mov
fwait
jp
cmpsl
cmp
or
inc
stos
ds
lock
mov
leave
or
mov
cmpsl
sub
or
bound
lahf
lcall
xor
and
jno
sbb
sbb
and
and
inc
xchg
int
aaa
xor
mov
cmpsl
adc
sbb
mov
aad
and
adc
cmp
xchg
push
cmc
lods
aad
jno
ds
sub
rorb
mov
push
cmp
shlb
mov
mov
shrl
and
inc
loopne
and
into
paddw
pop
shlb
ss
imul
jl
ljmp
jl
mov
inc
mov
dec
es
enter
repz
mov
scas
adc
adc
into
or
add
mov
xor
xor
lds
xor
and
ja
push
sub
inc
mul
loope
sbb
imul
push
mov
or
and
test
mov
and
sbb
fcoml
test
fidivs
xchg
mov
fwait
inc
pop
push
arpl
enter
cmp
divb
lds
push
ja
mov
mov
jmp
es
stc
dec
push
int
fdivrs
add
popa
hlt
dec
pop
xchg
pop
jo
shll
int3
leave
add
xor
push
adc
cmp
adc
jle
xor
aam
insb
cmp
inc
insb
das
push
push
fwait
dec
push
sbb
sub
dec
scas
cmp
outsl
call
incl
out
inc
filds
and
add
flds
cld
cmp
scas
cs
jb
int
ljmp
pop
cmp
fmull
xchg
icebp
pop
mov
das
jle
out
sub
push
pushf
filds
cs
cmpsl
addl
xor
lret
adc
mov
pop
push
dec
mov
add
icebp
hlt
fsubs
pop
enter
adc
loop
sti
loopne
sbb
xor
inc
in
dec
cmp
mov
clc
es
mov
pop
mov
xchg
add
dec
mov
or
xchg
outsl
movsb
enter
mov
add
loope
test
ljmp
out
mov
or
push
es
mov
imull
popa
cld
sub
in
adc
xor
xor
orl
add
es
clc
add
pop
es
in
cmp
add
sub
out
ret
jae
aaa
mov
jl
lahf
add
int
in
ljmp
jae
out
adc
add
scas
data16
push
add
xchg
cmp
cmp
pusha
in
lds
push
out
repz
add
mov
push
pop
enter
dec
or
es
push
dec
popf
xor
test
movsl
movsl
sub
and
es
dec
ret
mov
mov
arpl
lahf
add
and
pop
repnz
sbb
testl
xchg
stos
cltd
aaa
push
pop
inc
mov
dec
es
inc
ljmp
repnz
enter
push
xor
pop
test
out
adc
mov
or
data16
or
stc
bound
jmp
iret
ja
out
jne
sbb
and
mov
jl
popa
xor
dec
cmpsb
popa
aad
mov
daa
push
add
sarb
dec
jmp
popl
movsb
or
jbe
filds
mov
dec
add
lock
dec
jecxz
es
mov
add
fdivs
push
jo
subb
sbb
arpl
mov
cmp
mov
leave
jle
in
jg
leave
inc
cs
lret
jle
pushf
xchg
dec
cmpsl
mov
mov
enter
mov
adc
pop
sahf
dec
fisubs
inc
pop
shrb
add
hlt
or
or
and
movsb
pusha
enter
pop
pop
popf
add
and
sub
mov
and
test
enter
mov
dec
pop
xchg
xchg
in
outsb
and
pop
repnz
ss
iret
shlb
cmp
sub
add
mov
xor
sub
test
cmp
inc
fadds
int
aaa
pushl
decb
cmp
ficoml
js
mov
hlt
lea
leave
fists
pop
ret
mov
push
out
test
clc
or
push
outsl
mov
addr16
dec
enter
inc
push
sub
enter
es
xchg
pop
adcl
shl
dec
xchg
xor
sbb
mov
popa
lock
incl
or
fbstp
fsubs
sbb
dec
loop
jmp
aaa
mov
or
mov
inc
mov
xchg
push
fists
pop
xchg
pop
and
mov
cmp
dec
arpl
xchg
mov
xchg
mov
sub
es
jmp
mov
push
adc
dec
xchg
xor
stc
dec
xchg
rcl
mov
nop
insb
mov
mov
cmp
addr16
sub
lcall
cmpsl
cmp
test
mov
and
scas
cmpsb
mov
filds
cmpsb
gs
xchg
out
inc
test
iret
addr16
push
mov
add
add
popa
hlt
dec
sub
iret
out
xchg
roll
lock
xor
jmp
or
stc
cs
inc
lea
adc
mov
adc
test
xor
adcb
sbb
xor
adcl
sbb
jl
out
out
xlat
fwait
add
sbb
xor
dec
insb
mov
icebp
sbb
xchg
in
xchg
fwait
or
or
push
lds
cmpsl
inc
cwtl
popa
lock
or
lods
fcomip
sbb
ja
and
inc
filds
sahf
sbb
cmc
mov
leave
popw
hlt
adc
adc
push
enter
sub
lcall
leave
push
mov
lea
aaa
fs
aaa
icebp
into
add
aad
add
push
arpl
adc
nop
in
sahf
mov
adc
rep
inc
jbe
or
and
mov
nop
lods
test
vpmovqb
stc
add
or
xor
data16
mov
popf
mov
and
nop
jno
dec
pop
fildll
insl
cmp
push
adc
leave
pop
xchg
adc
cmp
push
outsl
sbb
inc
sahf
int
inc
sub
cmp
mov
and
jne
dec
pusha
adc
std
sahf
sbb
retw
dec
and
stc
and
addr16
jl
mull
fwait
xor
subl
mov
sbb
cli
es
icebp
adc
icebp
pop
add
shll
inc
loop
nop
cmp
or
fisttpl
and
mov
popa
lock
inc
and
push
fs
inc
jo
inc
cmpsl
popf
xchg
cmpsb
sbb
dec
jne
fmul
andl
popf
adc
mov
in
xchg
scas
jl
push
iret
inc
in
mov
sbb
sbb
sbb
rcrb
push
in
fs
xchg
je
mov
pushf
in
mov
stos
pusha
shll
cmp
sbb
and
or
add
sbb
mov
fcomps
ret
popa
and
xchg
and
nop
ss
adc
xor
jmp
repz
es
mov
std
mov
mov
mov
fsubrs
mov
sbb
fxch
jns
adc
lds
mov
test
cmp
ret
dec
dec
pop
jl
lea
or
outsl
push
and
lret
test
testb
jno
fbstp
jmp
dec
or
xor
and
cmp
aam
sub
enter
out
add
push
loop
mov
sub
imul
inc
sub
and
cmp
gs
scas
es
or
xor
pop
mov
sub
pushf
outsl
aam
and
mov
and
push
es
sbb
pop
fidivrl
push
das
movsl
rolb
jns
cmp
mov
pop
shll
or
jnp
pop
inc
pop
dec
pop
inc
lret
cli
movsb
or
mov
jl
push
pushf
cmp
xlat
and
xor
inc
sub
mov
adc
ss
cmp
movsb
in
in
lret
stc
movsb
stos
add
and
add
push
insl
and
ja
and
and
mov
mov
and
inc
ret
fcomip
xor
jbe
lods
inc
mov
jo
lea
push
cmp
dec
insl
adc
add
add
cmp
mov
mov
pop
mov
sbb
repnz
out
or
pop
push
es
cli
movsb
sbb
inc
ds
nop
notl
nop
out
or
sbb
or
push
in
shl
loopne
es
call
ds
adc
in
mov
inc
inc
mov
sbbb
and
lds
mov
bound
es
loope
adc
enter
movsl
mov
dec
inc
ss
push
add
lret
inc
push
test
mov
sub
in
sub
and
shll
dec
mov
jb
pop
xchg
rcll
in
xlat
adc
xor
push
cltd
xor
lock
ds
or
xlat
popa
dec
int
ret
mov
daa
xchg
hlt
outsl
in
and
lret
mov
movsb
adc
jmp
push
cmp
dec
mov
fnstsw
test
jl
inc
pushl
aad
es
add
movswl
ret
ss
sbb
xchg
ss
cmp
push
int3
sub
mov
mov
inc
mov
jmp
xcrypt-ecb
sbbb
push
push
cli
insb
adc
push
mov
jns
push
filds
movsb
xor
mov
mov
mov
sahf
mov
nop
stos
jnp
and
fbld
das
dec
loop
xchg
cmpsl
xchg
push
and
repz
test
push
in
xor
shlb
enter
push
mov
xchg
pusha
icebp
xlat
dec
inc
ds
stos
sbb
nop
outsl
movsl
addr16
js
mov
lret
add
leave
iret
mov
adc
int
add
das
inc
xchg
movsl
pushf
sahf
out
lock
and
or
xor
inc
adc
sub
ret
jmp
pop
push
nop
ret
iret
xchg
out
xor
cmp
inc
fwait
ja
aas
push
inc
adc
js
enter
cli
add
mov
sub
jmp
nop
mov
rcrb
sbb
jb
or
shlb
aaa
xchg
mov
mov
pop
cmp
sbb
jb
test
cmp
nop
data16
in
and
es
jl
push
lahf
xchg
es
repz
dec
xor
and
ror
cmp
mov
pop
sub
cmp
mov
cmp
fwait
test
adc
je
jo
pop
lock
jbe
les
popa
jae
inc
pushf
jle
pop
repnz
es
sbb
xchg
push
jg
add
int3
sub
adc
xlat
push
or
stos
add
sbb
clc
pop
les
jnp
and
sbb
popf
lea
test
adc
shll
lcall
sbb
aaa
js
mov
push
inc
pop
stos
lret
jl
add
cmp
je
lock
pushf
mov
iret
repz
ds
jmp
repnz
pop
cmp
das
xchg
pop
enter
outsb
dec
and
cmp
data16
lcall
lcall
call
xorl
imul
es
push
xor
mov
dec
arpl
setne
inc
push
lock
xchg
cmp
jl
stc
adc
xor
rorb
filds
adc
and
lds
enter
and
dec
mov
cmp
les
subl
mov
add
mov
sub
and
dec
repnz
sbb
loopne
mov
cwtl
fs
stos
or
add
mov
and
clc
adc
movsl
xlat
ljmp
lods
es
and
sbb
fs
int3
push
pop
fistpll
aad
xlat
pop
imul
cli
cmp
es
call
mov
sub
jno
mov
ret
dec
cmp
inc
incl
pusha
push
test
fbstp
filds
inc
bound
and
mov
es
movsb
jl
into
lcall
sbb
mov
add
or
popa
inc
or
sub
lcall
push
mov
outsl
inc
jp
data16
inc
inc
cmp
xchg
inc
xor
int
rol
mov
pusha
and
mov
push
int3
xor
pop
dec
sbb
push
jne
jb
test
dec
shrl
mov
sbb
pop
mov
filds
orb
and
inc
inc
or
cs
sub
in
adc
stos
cli
xor
jno
fistl
xchg
and
jp
mov
or
inc
sbb
nop
sub
stos
int
push
out
imul
arpl
xor
rcl
inc
adc
sub
mov
push
push
fbstp
stos
out
or
arpl
dec
icebp
pop
sbb
testl
addr16
dec
leave
scas
imul
add
and
sbb
int
dec
arpl
sub
push
adc
dec
addr16
aaa
decb
in
nop
xchg
pushf
mov
and
dec
frstor
mov
or
imul
add
mov
xchg
lret
sub
add
and
push
es
xchg
shrl
or
and
sub
test
sub
sbb
je
in
js
adc
push
shlb
mov
lods
aaa
and
es
xchg
shl
and
xor
clc
sub
sbb
xchg
or
jns
enter
cmp
rorb
nop
sahf
add
loopne
lcall
and
nop
xchg
and
xchg
lcall
xchg
adc
mov
ret
and
cli
sub
jecxz
or
rorl
jae
hlt
mov
cld
cmp
lea
xor
cmp
ljmp
mov
stc
data16
mov
inc
int3
cmpsl
sub
mov
adc
xor
and
hlt
data16
lcall
test
andb
lods
cmp
jl
addr16
jne
pop
cmp
es
ror
adcl
out
sbb
xchg
add
test
dec
jnp
stc
cmp
stos
fisubs
inc
mov
outsb
dec
stc
es
mov
xor
flds
mov
roll
clc
movsb
dec
andb
push
out
sbb
cmp
mov
lock
dec
xchg
out
jge
pop
sahf
sahf
push
push
pop
lret
iret
in
adc
xor
fwait
jns
sbb
sub
sarl
ret
pop
sbb
popa
add
movsb
xchg
lock
sbb
std
sbb
nop
frstor
es
ljmp
fnstenv
mov
movsl
aaa
and
sub
or
enter
jl
push
xor
movsl
fisubl
pop
stos
push
jle
repnz
and
rorl
aam
sbb
loope
andb
rcrl
rcrb
sbb
repz
nop
inc
sahf
fcomip
aam
int3
and
and
xor
xor
sbb
and
pop
or
scas
mov
sahf
es
in
in
in
mov
xchg
and
outsl
ret
push
xchg
adc
mov
add
insl
pop
jmp
sbb
xchg
loope
add
xchg
ja
push
xor
lea
cmp
cwtl
mov
rcrb
sub
push
and
sub
push
sub
pop
adc
and
mov
xchg
lea
test
popa
jle
loopne
adc
loop
mov
out
and
hlt
jge
add
sbb
insl
sbb
rcr
pusha
test
fadds
sbb
filds
and
out
in
mov
stos
inc
xchg
inc
and
and
xchg
shlb
shlb
nop
add
and
enter
or
outsb
or
xchg
stos
repz
inc
mov
test
int3
cmpsl
dec
push
and
shll
xor
push
lahf
xlat
add
lea
dec
sarb
pop
aad
and
or
dec
push
dec
ficoml
xor
or
aaa
call
arpl
test
and
repz
add
sub
nop
loopne
call
je
inc
leave
push
adc
hlt
test
mov
outsb
aaa
add
test
push
mov
xchg
es
pop
inc
lds
cmp
fadds
jmp
cmp
dec
xor
adc
inc
or
dec
add
pusha
test
jg
add
loop
mov
sbb
icebp
pushf
js
push
dec
stos
js
xchg
mulb
mov
cli
std
call
test
adc
jns
movsl
dec
icebp
outsb
xchg
mov
and
or
sub
call
xchg
inc
lret
ja
outsl
or
mov
jne
std
pop
push
shl
fistpl
ljmp
push
sbb
jge
mov
sbb
jno
jecxz
jb
xor
loop
mov
mov
ljmp
mov
fisttpll
popa
pop
sbb
das
jecxz
sbb
movsb
in
aad
ljmp
pop
mov
jmp
call
xor
or
out
sbb
mov
xchg
test
cmp
lret
push
fstps
dec
mov
lods
out
sub
dec
or
sub
push
inc
outsb
into
decl
fistpll
xlat
lcall
jbe
cmp
xchg
ja
jge
in
test
adc
insb
jmp
inc
sbb
negb
and
popl
dec
int
cld
enter
jmp
or
cs
mov
stos
enter
lea
jne
cmp
rcrb
mov
jg
lret
ljmp
stos
sti
mov
dec
iret
adcl
adc
ret
mov
jmp
and
mov
in
cmp
ficomps
push
adc
push
into
cmpsl
pop
and
inc
jmp
inc
mov
jg
mov
dec
ret
xor
rcrl
pop
inc
rorl
idivl
fdivrp
in
outsb
jb
or
loop
mov
push
push
ljmp
xor
call
push
mov
inc
xor
mov
outsl
adc
mov
fimuls
mov
cmp
jnp
outsl
lahf
fistl
ljmp
add
push
sahf
cwtl
jecxz
fs
imul
decb
rcl
mov
in
mov
popf
jae
inc
ljmp
loop
push
inc
mov
fucom
sbb
sbb
pop
cli
jne
xchg
rolb
inc
push
push
andl
rclb
sarb
mov
add
mov
in
daa
daa
pop
pusha
add
adc
sbb
mov
movl
pusha
fsts
mov
test
cld
xchg
jg
mov
stos
mov
stos
lods
clc
mov
clc
lods
mov
mov
clc
mov
jmp
aad
sar
out
pop
mov
mov
add
xchg
add
test
cmp
push
pop
rcr
push
fcmovb
add
add
push
clc
xchg
add
ljmp
incl
add
cwtl
orl
add
add
test
add
add
das
decl
jg
stos
add
pop
addb
or
add
push
sub
push
and
add
mov
lea
sbb
ss
add
xor
push
mov
or
inc
add
roll
mov
add
or
mov
push
stos
stos
stos
mov
shlb
mov
call
daa
sbb
aas
jg
jg
add
jmp
or
out
pop
outsl
stc
jg
inc
aad
sub
fisubs
repz
outsb
les
div
or
add
mov
lods
stos
pop
clc
pop
fdivrp
mov
aad
sbb
add
sbb
fbld
jg
mov
xchg
dec
ljmp
add
ljmp
dec
decl
clc
cmp
rorb
faddp
call
stos
stos
fdivrs
or
pop
sbb
fs
sti
ljmp
pop
mov
pop
add
subb
add
hlt
fldcw
mov
push
sbb
pushf
addl
or
test
adc
sbb
mov
imul
cmp
outsl
add
ljmp
add
add
xorl
add
pop
movsb
fcmovne
fucomip
das
add
fdivrl
xor
mov
push
int
hlt
sbb
sarl
pop
daa
cs
push
or
or
repnz
call
add
or
push
mov
faddl
push
fcmovnbe
ja
daa
pop
rcr
push
lret
cwtl
pop
and
lods
add
xchg
int
push
insl
ss
fcmovnu
mov
in
mov
mov
add
lret
adc
sub
cmpsl
fnstenv
push
pop
shll
cmpsl
imul
ficoms
add
aam
mov
mov
mov
dec
in
sbb
mov
cmc
mov
fcos
fildl
lret
bound
popa
add
push
jl
out
insl
out
push
xchg
incl
jnp
jmp
outsl
jns
push
out
add
push
outsl
imul
fists
arpl
out
mov
fwait
hlt
add
pop
mov
lea
mov
sbb
fistl
rol
sub
lcall
push
cmc
add
aam
divl
into
fistl
or
imul
iret
jnp
jg
out
lods
jbe
push
push
ret
addl
sub
add
icebp
push
push
pop
add
sub
fisubrs
fstpl
inc
mov
lcall
repnz
jmp
add
das
test
cs
mov
das
cld
pop
stos
scas
pop
stc
jg
fstps
fs
icebp
hlt
fidivrs
lcall
aam
xchg
mov
pop
daa
push
xchg
in
lods
shl
xor
imul
sbbb
add
sti
decl
push
dec
test
fistl
movsl
aam
and
std
xchg
jg
adc
je
shrb
sarl
fidivrs
jmp
add
mov
dec
sbb
cmpsb
add
push
add
test
add
insb
pop
push
and
rorl
ds
fisttpl
faddl
mov
cmp
inc
imul
mov
pop
lods
sti
ret
adc
add
dec
test
cld
pop
jge
sbb
pop
sbb
pop
cli
pushl
hlt
mov
lea
pop
cmpl
and
xchg
mov
lea
out
inc
les
cld
xchg
aam
adc
fcmovne
mov
and
into
rclb
daa
and
push
mov
pop
clc
mov
sbb
fisttpl
test
jmp
xor
call
push
dec
add
stos
mov
fldt
push
out
lcall
sar
add
lret
fldl
push
jmp
es
pop
inc
adc
jmp
stos
test
aad
xchg
das
std
lea
and
push
jae
xchg
aam
leave
cs
inc
lds
std
sbb
jnp
rcrl
ljmp
push
mov
das
pop
clc
stos
xchg
jle
or
data16
ret
cmp
sub
xchg
adc
pop
sbb
xlat
scas
xor
out
cmp
add
mov
rcll
movsb
xor
xor
adc
fstpt
inc
cmp
das
in
das
ljmp
inc
jg
lds
stos
push
enter
fimuls
cmpb
fisubrs
add
and
sbb
das
xor
push
add
lock
fnstcw
sbb
xor
arpl
ret
pop
clc
aaa
pop
outsl
jmp
adc
cwtl
fldt
ficompl
nop
inc
push
outsl
sti
lds
push
pushl
lar
jp
sbb
cltd
jecxz
dec
cmpsl
imulb
in
push
adc
xor
add
push
mov
xchg
iret
fsts
in
xlat
sbb
add
fbstp
aaa
inc
mov
out
mov
lods
sbb
in
aaa
cld
jmp
jecxz
lods
loopne
sbb
mov
jg
jg
mov
fcmovne
xchg
push
mov
aam
aam
pop
loopne
in
insb
add
and
jne
inc
push
aas
aas
fimuls
imul
inc
imul
lods
addr16
lods
aaa
clc
inc
int3
pop
decb
xlat
push
inc
je
psllq
or
jmp
fistpl
add
mov
dec
enter
enter
pop
dec
aad
sbb
adc
adc
add
or
mov
or
jle
jmp
lcall
in
nop
push
call
xor
fisttpl
les
ja
je
out
sbb
cltd
pop
in
mov
sbb
not
and
mov
mov
mov
xchg
enter
pop
leave
push
insb
mov
ljmp
in
fisttpl
dec
xlat
jmp
inc
fadd
mov
add
int3
repnz
mov
outsl
cld
sbb
adc
imul
repz
ds
push
cmp
inc
xor
jle
fidivs
call
mov
add
movaps
jl
mov
rol
in
mov
pusha
and
mov
cli
mov
lock
ljmp
in
or
lods
rcrb
cmc
dec
lret
dec
xchg
dec
add
pop
sbb
push
mov
sahf
jnp
mov
pop
in
cltd
cwtl
jg
mov
pusha
mov
jmp
es
in
jb
das
or
sbb
popf
and
inc
inc
mov
and
xchg
inc
shrb
cs
fistpll
cmc
push
fnsave
cmpb
inc
scas
fs
sbb
decb
xor
pop
pop
cmp
mov
sbb
jne
sar
pushl
xlat
sub
fwait
add
hlt
pop
cmc
pop
cmp
call
mov
das
dec
jg
filds
jge
or
push
insb
dec
sub
popf
and
les
mov
mov
pop
add
bound
clc
mov
cld
jns
iret
jns
mov
pop
movsl
and
inc
mov
push
mov
sti
push
sbb
pop
and
ret
nop
nop
fstpt
sbb
jecxz
in
mov
push
push
sbb
cmp
mov
mov
or
push
scas
add
iret
push
or
lock
sbb
fidivrl
mov
testl
in
mov
iret
and
mov
cmc
test
fildl
sti
aaa
fcmovne
pop
loopne
sarl
arpl
push
adc
std
outsl
sarb
lcall
movsl
arpl
sbb
outsl
add
mov
rol
leave
lret
in
or
inc
jg
in
roll
flds
cmp
sub
cs
or
movsb
lret
mov
push
or
mov
sbb
fimuls
xlat
arpl
pop
jg
into
out
add
jnp
sahf
add
inc
mov
icebp
xchg
cmpsl
outsb
xor
lods
and
insb
rcr
int
or
add
jg
das
lret
les
pop
adc
outsb
xchg
push
xchg
mov
mov
int3
or
and
sbb
jmp
in
nop
sarl
clc
sub
and
lods
sub
add
xor
repz
es
mov
mov
stos
cwtl
push
icebp
popf
data16
insl
insl
jbe
arpl
jg
shll
cmpb
push
xor
push
iret
and
clc
mov
into
fsubr
jnp,pn
add
lahf
and
mov
sbb
jo
cmpb
fstpt
fstpt
sti
and
jns
hlt
jmp
xlat
shr
movsl
test
pop
sub
pop
stos
pop
ficompl
aaa
outsl
std
aaa
pop
pop
push
out
or
div
or
mov
ss
mov
in
repz
add
movsl
into
lock
rorl
ficoms
clc
lods
pop
dec
scas
sbb
mov
sti
mov
les
in
adc
jge
cld
lea
push
sbb
ljmp
or
jmp
rclb
mov
addb
push
je
fldcw
pop
or
and
gs
push
in
cmp
call
sahf
arpl
fcmovnb
add
aam
or
test
add
scas
mulb
loopne
mov
lods
divb
movl
stos
out
out
sbb
imul
mov
lea
pop
dec
jmp
call
out
mov
mov
mov
loopne
jns
lret
in
mov
and
mov
cwtl
sub
inc
test
jmp
inc
repz
xchg
ja
rcrl
shlb
std
or
sbb
fiadds
pop
mov
sbb
decl
jge
cld
pusha
loop
mov
jne
test
mov
and
imulb
cld
pop
incl
mov
xchg
icebp
loop
lahf
add
jge
bound
sbb
idiv
push
stos
shl
and
sbb
jle
lods
leave
push
fsubl
push
add
lods
push
add
xor
fmul
pop
push
pop
push
mov
pop
and
movnti
push
fwait
je
dec
cltd
pop
loope
decl
or
mov
rcll
cwtl
xlat
pop
popf
xchg
jmp
sti
pop
xor
mov
sbb
jno
in
das
test
xchg
xlat
xor
icebp
in
mov
xchg
pop
sub
xor
sbb
pop
loop
inc
mov
jmp
fadds
fstpt
shlb
bound
add
or
and
push
shr
sbb
push
aaa
aas
pop
sahf
and
inc
sbb
rcr
add
loop
mov
jecxz
imul
add
adc
jo
inc
mov
mov
sbb
sub
aad
add
xchg
or
std
pop
leave
mov
hlt
rol
icebp
pushf
lret
mov
cli
inc
ljmp
push
push
mov
xchg
ficompl
in
cmp
pop
mov
and
jle
push
pop
mov
sbb
out
insl
dec
sbb
lds
add
in
xor
jl
fists
incb
mov
bound
xchg
loope
aam
push
add
push
dec
ja
mov
pop
push
cmp
jo,pn
aaa
pop
lods
fsubs
inc
jne
mov
lret
in
outsl
aad
ja
pop
enter
lds
xchg
pop
cmc
aaa
lock
insb
rcr
mov
mov
add
jbe
sbb
lea
loope
or
mov
mov
mov
add
xor
jl
sub
pop
mov
je
lods
inc
xor
add
cltd
outsl
hlt
lea
iret
cmp
sub
sbb
sub
into
xor
sti
push
loop
sahf
aam
call
scas
stc
and
jg
mov
insl
sbb
jl
aaa
xchg
cmpsl
mov
push
xchg
inc
or
adc
xchg
push
jo
cmpl
in
pop
loop
xor
ss
iret
sti
les
cld
pop
adcl
sub
pop
dec
in
jae
subl
add
subl
outsl
fucom
and
cld
mov
test
loopne
outsl
aaa
jp
repnz
cmp
sbb
xchg
rcrl
or
aad
adc
fnstsw
mov
std
add
mov
aam
sub
fbstp
das
hlt
outsl
xchg
call
mov
stos
mov
dec
mov
imul
and
lock
icebp
cld
sbb
clc
ljmp
lcall
std
jb
dec
mov
das
pop
lret
and
mov
das
hlt
pop
stc
sub
lds
xchg
pop
rcr
push
in
mov
inc
ret
fcoml
cmp
fcom
aam
stos
std
aaa
incb
int3
aas
jne
mov
jnp
jns
lea
rorl
ss
cmp
dec
dec
xchg
dec
jg
pop
mov
test
call
insl
test
test
movsl
push
xor
fstpl
out
mov
dec
ss
xchg
clc
aaa
ss
jecxz
lock
xlat
push
mov
jmp
pop
dec
imul
popf
or
jg
inc
sarb
les
dec
mov
push
insl
cld
mov
push
push
movsl
push
nop
adc
lock
test
ljmp
xchg
mov
aas
enter
and
es
lock
fistpll
cmpsl
xchg
cmpsb
cli
inc
fxam
test
loop
cmp
mov
push
fdivs
into
mov
std
adc
add
stos
or
das
iret
sbb
call
adc
mov
stc
repz
or
sub
mov
std
mov
mov
xor
pop
repnz
mov
mov
sar
in
xlat
fs
push
inc
clc
dec
lods
dec
adc
lds
or
pop
rcl
call
sbb
loop
bswap
ficoml
jg
pop
iret
pusha
adc
jge
sbbb
int3
sub
mov
pop
cmp
in
leave
test
pop
xor
sbb
movsl
fcmovb
add
outsl
dec
mov
dec
lock
fistps
or
unpckhps
push
dec
lcall
or
fdivrs
cmpsb
ret
int
mov
int3
xor
sbb
push
xchg
clc
dec
mov
push
mov
repnz
loopne
lods
lods
pushl
clc
scas
push
mov
xor
xor
lods
ljmp
jmp
imul
pushl
ljmp
mov
insl
inc
rcrb
and
or
lods
aas
cltd
mov
int
mov
test
xlat
mov
mov
add
xchg
std
ljmp
inc
and
and
pushl
scas
push
push
sbb
in
or
sub
jb
cmpsl
pop
cmp
lret
mov
decl
out
dec
add
push
into
loope
scas
lret
in
lea
sub
pushl
pop
cmp
sub
pop
addr16
lods
jmp
and
leave
and
or
decl
add
jg
mov
fwait
mov
neg
imul
icebp
mov
xor
lcall
or
push
pop
cs
out
aas
cld
lods
ret
and
adc
lret
inc
arpl
pushl
pop
add
mov
movsl
mov
push
adc
fstl
std
pushl
shrl
jae
jb
or
sub
mov
mov
sbb
add
ljmp
nop
aam
sahf
sar
lods
and
and
mov
fdivp
lods
mov
cld
mov
mov
subb
or
xchg
mov
daa
addr16
call
imul
icebp
daa
outsl
jg
out
mov
xchg
lods
mov
mov
rcrl
cmpsb
cmc
sbb
xor
std
call
xor
inc
addr16
in
push
push
repnz
pop
cltd
mov
pop
clc
lcall
shll
pop
fmull
shlb
xchg
sub
push
push
fwait
in
std
aam
mov
decl
les
mov
cli
in
rcr
nop
ja
push
push
out
jnp
jmp
cmpsl
sub
outsl
cld
mov
mov
mov
repz
mov
ljmp
xchg
lea
arpl
fcoml
sub
jmp
fldl
lcall
mov
xchg
mov
mov
mov
cmp
aaa
mov
daa
mov
jle
pop
cmp
cmpsl
xor
and
int3
cwtl
out
sahf
mov
add
movsl
lcall
pushf
mov
test
mov
mov
call
mov
fstpl
and
inc
add
loope
dec
xchg
mov
or
jmp
mov
add
andl
pop
and
and
ret
mov
mov
lds
pop
orb
fnstcw
fmull
fisttps
mov
cmpsb
pop
lods
xor
lods
aam
xor
jmp
cltd
cltd
xor
add
pop
fstp
sbb
lds
push
scas
in
mov
cmp
orb
imul
cmp
loop
enter
push
incl
das
pushf
add
out
cltd
data16
pop
lret
and
stc
sub
fidivrs
pushl
int3
lods
mov
scas
mov
negl
outsb
sbb
or
sarl
adc
incl
cmpsl
pop
push
pop
loope
and
lods
out
hlt
dec
std
clc
aad
enter
imulb
mov
cmpsb
sbb
arpl
mov
incl
mov
fnstcw
js
adc
and
mov
aaa
lods
test
nop
mov
mov
cmc
mov
pop
lock
add
in
mov
hlt
jg
call
lret
sbb
mov
fstl
fildl
ljmp
mov
mov
fcoms
xchg
push
jg
pop
pop
fstl
fmul
movsl
add
insb
repz
lcall
cs
loopne
lahf
test
sbb
sub
popa
fldt
cmp
lcall
adc
mov
pop
jmp
idiv
mov
pushf
mov
pop
mov
ljmp
jnp
xor
jmp
imulb
push
call
loope
push
mov
and
hlt
daa
cmp
jmp
outsl
adc
fidivrl
aam
adc
es
dec
cwtl
sbb
push
ror
lods
jg
cmc
sbb
gs
cmc
pop
xor
nop
lods
xchg
xor
daa
push
out
stos
out
aam
outsb
icebp
lods
call
leave
fprem1
dec
sti
incl
idiv
and
xor
cmc
and
lods
daa
jne
les
jg
hlt
push
jle
adc
xor
incl
mov
push
push
push
push
mov
add
shrb
mov
push
lds
adc
lcall
das
inc
cwtl
sbb
aaa
mov
iret
lods
test
shll
decl
pop
test
mov
jecxz
lods
push
push
pusha
push
lds
and
push
fmuls
daa
in
scas
ss
ljmp
stc
movsl
les
sbb
xlat
fwait
repz
add
int3
push
loopne
incl
xchg
add
pop
mov
mov
push
movsl
dec
lods
lods
adc
cld
insb
rcrl
in
scas
test
adc
les
adc
test
mov
rcrl
daa
lods
shl
fldcw
mov
clc
ss
mov
jbe
jmp
sbb
pop
movsb
sahf
xchg
call
ret
mov
pushl
je
fldt
enter
ret
pushf
xor
jg
sub
adc
jnp
adc
clc
xchg
ljmp
xchg
stos
test
arpl
mov
mov
push
std
cwtl
lock
mov
mov
sub
and
int3
add
sub
and
jnp
cmp
push
out
xor
lds
test
and
add
cld
rcl
int
mov
cmpsb
imul
jg
sbb
inc
das
daa
inc
mov
cmp
call
fmulp
arpl
mov
leave
cmp
int3
add
xchg
mov
popf
cmp
pop
jb
ljmp
or
sbb
inc
ds
cmc
sahf
notl
pop
fisttpll
xor
rolb
scas
fisubrl
sub
clc
push
out
popa
sub
adc
inc
jmp
shr
or
mov
jg
iret
mov
enter
shll
sar
scas
clc
fstpl
cmp
sarb
bound
sti
push
lock
jbe
fidivl
dec
and
mov
ja
shl
add
loopne
inc
incl
jo
xor
scas
arpl
call
out
into
mov
ret
data16
inc
outsb
push
std
mov
lea
mov
enter
mov
outsb
repnz
ljmp
call
adc
and
into
mov
call
out
in
mov
jo
notl
enter
xchg
mov
loope
into
pop
das
inc
cwtl
out
fcmovu
movsl
push
push
enter
mov
arpl
xchg
imul
aas
rorb
int
jns
sub
enter
push
fisttpl
movsl
inc
jbe
cmpb
cli
lea
or
aas
push
stos
incl
xor
insl
cmpsl
je
or
and
sub
fidivs
pop
aad
stc
call
lcall
jae
imul
lret
icebp
pop
push
xchg
stos
ret
shl
incl
sub
add
or
cltd
cmpsl
ret
cli
push
call
mov
adc
and
mov
jecxz
pop
sub
call
scas
fistpl
pop
sbb
fistpl
call
or
pop
pushf
fimull
mov
int
jne
jmp
and
in
loop
das
mov
pop
push
and
arpl
xchg
shrl
iret
das
cld
or
jecxz
adc
mov
rcrb
cmp
clc
lcall
xchg
mov
mov
xor
aaa
pop
icebp
or
movsb
in
cmp
lods
mov
sbb
jbe
or
jg
decl
mov
cwtl
xor
mov
fisubl
push
mov
data16
push
mov
aas
mov
and
mov
incb
lret
leave
dec
push
xchg
add
jbe
fwait
mov
cltd
sbb
jecxz
mul
shrb
push
jecxz
movsb
outsb
lods
divb
push
push
mov
pop
iret
scas
and
cld
decl
xor
xchg
and
adc
mov
outsb
decl
jg
scas
sbb
push
adc
mov
add
pop
rorl
and
jb
shr
sub
rcrb
cmp
lcall
jbe
xchg
fwait
aaa
int
gs
add
fcmovnbe
loope
and
xchg
lods
xor
iret
stos
addl
scas
and
ljmp
data16
out
inc
into
and
out
xchg
xor
dec
xchg
push
xchg
inc
rclb
mov
ds
shlb
fsts
jne
xor
push
aam
dec
xchg
andb
xor
dec
adcb
daa
cmp
testl
add
idivl
movsb
in
pusha
sbb
orl
adc
orl
sbb
stos
push
out
mov
cmp
adcl
sub
pop
cmp
push
add
xchg
jmp
and
jle
mov
cld
ret
push
ficomps
push
adc
or
pop
xchg
hlt
insb
jle
lret
xor
jmp
mov
mov
and
or
cmp
mov
ljmp
sbb
arpl
lods
lds
jne
outsl
push
cmc
xorb
call
fnstsw
cmp
lock
outsl
fdivrs
mov
jmp
sub
sbb
mov
jno
or
mov
dec
pop
int3
dec
xchg
aam
mov
mov
hlt
call
jg
out
add
push
fs
in
or
shrb
mov
popa
jno
push
jo
jmp
push
inc
sar
mov
bound
mov
ljmp
out
sbb
xor
push
hlt
jge
leave
rcrl
leave
xchg
popa
cmp
decl
std
ss
daa
ljmp
mov
mov
xchg
dec
test
adc
push
insb
lahf
in
cli
in
lods
mov
in
mov
in
pop
jb
xchg
in
add
hlt
stos
pop
push
inc
ret
shll
xor
push
or
lcall
xchg
enter
lea
add
cmc
incl
shl
fildl
test
mov
cmpsl
les
test
lds
mov
rcrl
sub
hlt
ljmp
mov
lret
mov
aas
ficompl
fildll
les
call
push
push
fiadds
or
xchg
loop
rcr
mov
pop
cmp
push
inc
xchg
outsl
lcall
pop
cmp
xchg
dec
rcrl
mov
std
inc
and
scas
sar
xor
sbb
shrb
xor
mov
shlb
repz
sbb
or
test
fcmovbe
clc
ja
repz
jmp
icebp
push
fndisi(8087
mov
dec
mov
jmp
leave
cmc
loopne
test
pop
sub
pop
ret
imul
mov
lods
mov
fwait
icebp
test
xor
lcall
icebp
cwtl
les
call
cmpps
int3
int3
lea
aad
sbb
sbb
sar
mov
call
mov
shl
mov
fdiv
sbb
and
lock
mov
lahf
fwait
fs
and
push
rcrb
sub
fdivr
mov
outsl
scas
xchg
lods
dec
outsl
jne
fdivrl
call
cmc
pushl
cli
outsl
fwait
test
pop
sbb
pusha
mov
movsl
enter
stos
pushl
repnz
pusha
enter
daa
sbb
inc
mov
ljmp
imulb
mov
pop
aaa
jg,pn
idivb
push
mov
fdiv
or
lret
decl
rclb
xor
push
into
add
shlb
xor
push
mov
int3
push
xlat
lcall
ljmp
sahf
inc
aas
inc
fwait
mov
inc
cmp
xor
mov
test
in
fcoml
mov
xorl
das
hlt
or
lcall
mov
sahf
shll
rclb
loopne
push
cmp
insl
clc
xor
iret
out
out
sbb
pop
and
fld
loopne
jmp
insl
into
add
cmp
mov
in
int3
lret
scas
jnp
aaa
call
ljmp
cli
lods
pusha
leave
insb
ret
hlt
jecxz
add
movsl
jg
push
jg
push
dec
xor
mov
ljmp
xchg
add
test
sbb
std
fbstp
outsl
jbe
xor
push
ret
jg
or
fbstp
jbe
push
cmpl
gs
idiv
call
aad
mov
shrb
shlb
xlat
outsb
cwtl
pop
lahf
mov
mov
aas
decl
fucomi
ljmp
push
xor
jecxz
lea
sub
out
fcoms
rorb
lcall
push
in
adc
jecxz
cmpsb
lahf
sbb
xlat
ja
decl
fistpl
repz
push
mov
inc
push
std
outsb
and
lods
arpl
sti
cmp
xor
mov
aaa
jg
cli
mov
movsl
sub
test
movsl
into
fsubr
jo
xchg
hlt
sbb
add
jmp
inc
test
mov
cmp
mov
test
cld
lea
add
lea
and
jecxz
ljmp
push
shrb
and
or
jo
sbb
outsl
mov
stos
sub
cmpsb
lock
rcrb
mov
in
and
xchg
lea
mov
cld
ljmp
outsb
mov
outsl
aas
mov
xor
adcb
ljmp
jp,pt
sbb
daa
fdivr
sbb
xchg
jmp
xchg
mov
push
xchg
decl
decl
mov
cmp
cmp
mov
jmp
psubb
pushf
jae
mov
jge
fists
cmp
fwait
and
jmp
incl
cld
mov
adc
rcr
add
jns
sar
out
pushf
loope
sahf
xchg
in
adc
out
pop
and
fistl
mov
xchg
shrl
pop
xlat
loopne
pop
subl
int
mov
jmp
popa
mov
leave
cwtl
lds
mov
sbb
fbld
ds
inc
sahf
aas
test
lock
mov
aaa
jb
jecxz
sti
mov
xor
mov
jg
pop
sbb
arpl
mov
sbb
rcrl
cmp
mov
sbbb
jg
flds
add
test
jecxz
push
jnp
aam
sub
daa
cltd
scas
mov
mov
sub
das
jo
fisubrl
sahf
subb
popa
cmp
fsubrl
and
push
lcall
rcrb
int
xchg
lret
dec
pop
nop
jmp
hlt
sbb
ljmp
xchg
xlat
and
stos
cltd
or
cmp
sti
rcrb
lcall
or
les
push
jne
xchg
and
push
cmc
cmp
pop
sbb
inc
push
fst
mov
fimull
mov
test
jg
add
adc
stc
out
inc
xor
push
xchg
jg
call
rorb
or
rclb
gs
jle
jo
js
sti
mov
lcall
add
js
lret
scas
pop
jo
cmp
mov
mov
pushl
inc
jnp
push
es
iret
daa
std
pushf
ret
cwtl
test
dec
sbb
in
mov
clc
lea
into
jmp
xor
fwait
leave
fdivrs
out
pop
lcall
roll
mov
add
cmp
jnp
int3
mull
mov
mov
cmp
lcall
push
aad
lods
cmp
fldenv
mov
fcomip
pop
pop
in
mov
aaa
jg
sbb
orb
sub
sbb
xor
decl
xchg
cli
flds
mov
aaa
je
mov
inc
cs
std
sbb
js
mov
stc
fisubrs
ljmp
mov
sarb
add
jo
push
movb
adc
out
int
test
push
ljmp
test
push
mov
aad
fists
addr16
push
mov
push
and
aam
mov
jge
fwait
stc
cmpsb
shrb
pop
aam
add
nop
jo
fistpll
insl
inc
dec
dec
add
std
fwait
aaa
outsl
aam
movsb
mov
adc
cmpsl
add
decl
xor
dec
sbb
dec
xchg
loopne
mov
pushf
out
mov
mov
mov
push
aad
or
xchg
fsubr
xchg
movsl
lock
jl
fcmovne
pop
clc
adc
stos
jmp
shll
xor
inc
or
and
in
sub
clc
pop
in
repz
das
loope
pop
xchg
push
or
dec
in
dec
push
dec
jl
inc
inc
inc
je
fs
mov
jo
lods
rolb
popf
pop
rcl
jmp
pop
daa
mov
mov
shll
mov
ljmp
jecxz
mov
lods
mov
mov
iret
mov
and
ret
nop
ret
ljmp
std
mov
lods
sahf
mov
mov
mov
cmpsl
arpl
mov
mov
push
mov
add
out
xlat
xchg
lcall
pushl
adc
popl
fdivrs
imul
xchg
mov
lods
mov
xlat
popa
dec
stc
mov
imul
mov
lods
mov
rorl
mov
cmpsb
fwait
ja
pop
pop
in
dec
jns
mov
loope
mov
lahf
mov
test
inc
out
je
ljmp
dec
pop
out
lods
leave
aam
je
stos
stos
mov
call
out
cltd
test
nop
shrl
xchg
shrl
cmp
add
and
mov
int
call
xchg
cmp
not
adc
jmp
ja
fildl
and
daa
lahf
or
movsl
ljmp
call
pop
scas
push
adc
inc
dec
and
and
mov
lcall
ret
mov
js
jb
aad
mov
jl
inc
xchg
mov
cmp
sar
cs
das
out
ja
sub
outsl
sbb
xchg
push
popf
sub
and
call
jge
xor
pusha
mov
xor
mov
roll
lahf
xor
dec
push
loopne
fstps
lret
push
insb
add
push
movsb
mov
dec
pusha
push
push
loope
movsl
cmp
int3
bound
mov
push
xlat
sbb
lcall
mov
cmp
andb
leave
subb
popf
outsl
pop
pusha
test
xor
enter
shl
or
mov
lret
mov
sbb
insl
lock
fdivl
int3
movsb
stos
ljmp
xor
fcomi
fnstenv
in
sarl
xor
xchg
jg
or
sbb
pop
and
pop
mov
sub
cmpsb
incl
pop
pusha
or
xchg
xor
call
outsl
push
es
cmp
push
ss
lods
fdivp
fldcw
aas
cmpsl
and
pop
pop
sbb
ljmp
ss
pop
sbbl
cmpsl
outsl
push
fidivl
lea
mov
push
or
rcll
xor
cs
cmpsb
jns
push
mov
xor
jl
jg
cmp
push
sub
stos
and
es
sbb
ds
xor
pop
inc
lcall
lods
sti
add
sti
lods
dec
sub
fdivrl
xchg
mov
and
mov
mov
dec
sbb
test
jb
lods
rcl
mov
int
push
sarb
sbb
scas
sarl
aad
ret
loop
add
loopne
and
push
pop
clc
and
lret
sbb
jns
mov
pop
ja
push
pop
add
cld
cld
push
lcall
das
cli
xchg
sbbb
rorl
sbb
mov
lods
mov
into
cmpsb
pop
dec
inc
jp
call
lods
xor
divb
push
mov
sahf
rcr
in
in
in
lcall
sti
repz
or
faddp
fists
out
adc
cmp
and
stos
mov
pop
cmp
xor
cmp
mov
shll
sbb
ficoml
outsl
hlt
call
mov
mov
mov
xchg
mov
mov
pop
sets
dec
lods
lret
lods
aad
dec
notl
shlb
aad
sbb
fcmovnb
cmp
sub
inc
jnp
repz
fsubl
add
add
jg
cld
into
cli
lods
ret
clc
lock
mov
lcall
add
fcomi
fdiv
pop
mov
sbb
mov
or
cmpsb
mov
mov
fiadds
pushl
ljmp
in
test
mov
jb
pop
in
nop
pop
call
dec
xchg
out
xchg
fdivl
in
stos
push
or
inc
cld
pop
xchg
mov
cli
mov
jmp
xchg
push
xchg
stc
sub
ja
ljmp
dec
and
in
in
ja
jb
and
push
pop
je
jno
imul
sub
dec
cld
jmp
push
out
ret
mov
mov
shl
pop
fsubr
andb
ret
and
push
aam
jnp
pop
adc
in
push
cs
push
adc
das
aaa
cwtl
lret
incl
call
movsl
xor
rol
mov
mov
sti
das
xlat
sub
sub
aam
psrlw
js
jmp
push
sar
inc
sti
out
sbb
pop
xchg
mov
test
cmp
mov
push
pushl
pop
mov
and
mov
shll
mov
mov
std
aad
cld
leave
jns
outsb
lret
lret
popa
imul
inc
mov
rol
add
clc
insb
sbb
xchg
cmp
stos
outsl
inc
mov
roll
ret
xor
mov
call
fwait
mov
clc
test
notb
arpl
pop
shrl
pop
dec
jg
cmp
mov
nop
in
pop
call
rorb
call
and
jae
subl
add
push
xor
out
enter
jmp
or
orb
daa
shlb
mov
rorl
mov
out
or
lods
clc
mov
add
decl
add
stos
call
lahf
mov
pushl
mov
push
icebp
out
jne
aaa
dec
push
lock
add
shr
scas
stos
hlt
clc
scas
lea
std
pushl
ret
xor
loope
movl
jp
call
cmp
push
pusha
add
fmuls
mov
push
xchg
xor
cld
fistps
lods
jmp
pushf
jl
mov
cmp
lds
push
xchg
pop
cli
ljmp
das
aad
scas
in
push
movsl
xor
add
insb
mov
mov
mov
sub
lcall
lock
sahf
push
push
jl
and
stos
sarb
mov
int3
push
lds
mov
aaa
inc
pop
xor
cmp
sbbb
call
cmp
xchg
loopne
testb
mov
or
mov
insb
mov
pop
jmp
sbb
in
scas
lods
pop
cmp
ljmp
rcll
xchg
xchg
or
sbb
clc
push
adcb
mov
cltd
mov
rclb
daa
scas
mov
mov
jl
std
negb
cli
mov
nop
fmull
or
je
pop
adc
ffreep
sub
mulb
in
test
subl
push
ljmp
mov
outsl
cmc
ljmp
xor
scas
lea
repz
mov
push
repz
jecxz
push
outsl
jno
stos
imul
outsl
shl
decl
xor
ret
xchg
mov
add
jmp
lcall
fldl
and
pop
in
lcall
stc
cmp
std
xchg
sub
stos
jno
ret
sbb
cwtl
insl
cld
add
in
repnz
pushl
mov
ss
mov
das
mov
flds
sub
mov
aad
mov
or
rcr
inc
mov
mov
push
and
xchg
outsl
mov
icebp
mov
gs
or
push
pop
clc
jmp
mov
push
notl
push
jmp
int3
add
jp
cmp
loope
das
cld
out
enter
das
mov
rcrl
call
sahf
mov
add
call
sbb
cld
adc
lret
add
fadds
hlt
fdivr
lods
mov
push
mov
mov
es
stc
or
incl
cli
mov
std
pop
bound
adcl
test
lcall
add
add
test
ffree
gs
test
ficoms
cmp
push
inc
push
xlat
mov
lret
mov
or
movsl
or
dec
ljmp
insl
hlt
int
xor
test
ds
or
lcall
pop
stc
sub
lcall
scas
mov
cmp
xchg
adc
out
lock
pop
shr
popf
or
cs
mov
call
pop
hlt
imul
es
call
pop
lds
add
add
sbb
pop
enter
es
repnz
shl
decl
call
xor
int
push
dec
aas
mov
out
xchg
jg
sbb
adc
cmp
xchg
sub
push
pop
push
push
loopne
jle
cwtl
fisubrs
add
xor
xchg
pop
or
push
fisubs
pop
mov
sub
fcmovbe
out
push
rcrb
push
je
mov
pusha
mov
sbb
pusha
dec
mov
stc
pop
adc
jecxz
jg
jg
test
push
xchg
push
popf
adcb
decb
outsl
push
cmc
or
std
dec
std
popa
fstp
fdivs
out
jmp
bound
arpl
mov
ljmp
pop
ret
push
pop
xchg
daa
daa
fldt
adcb
jne
mov
fidivl
ficomps
sahf
xchg
sbb
ljmp
mov
pop
fsubrl
mov
mov
mov
lock
rcrl
fiaddl
or
lcall
fstpt
add
mov
adc
out
ret
jmp
sti
shlb
fdivr
daa
mov
aas
cs
ds
push
bound
lock
fcmovnbe
sbb
out
pop
mov
inc
pop
lds
popa
fsubl
mov
push
mov
mov
dec
movsb
lds
enter
outsb
mov
jae
push
lods
aad
jno
decl
fadds
inc
cli
sar
mov
mov
add
and
data16
fsubrs
out
jno
shlb
mov
sub
in
fistpl
aad
sbb
lret
popa
push
mov
push
pop
push
enter
xor
aaa
test
or
or
mov
inc
lret
fbstp
test
dec
mov
xorb
clc
ljmp
cwtl
negb
insb
call
fwait
xlat
sub
imul
in
sbb
jg
cmp
mov
sub
add
xchg
sti
outsl
pushl
or
push
pusha
in
cmp
pop
test
test
xor
cmp
inc
or
mov
in
fcmovbe
dec
fdivrl
inc
mov
xor
sbb
shll
inc
add
std
outsl
std
cmpsb
repz
subl
dec
in
dec
add
add
lcall
sahf
lods
ficoml
inc
mov
xor
sbb
popa
cld
xchg
pop
xchg
cld
in
or
pushl
adc
loopne
shrl
sbb
jp
pop
js
jmp
push
insb
imul
scas
jns
rol
insb
mov
out
in
loope
test
rorb
stos
push
cld
les
xchg
mov
lret
hlt
bound
adc
jmp
pop
mov
mov
out
mov
mov
call
pushl
imul
insb
insb
xchg
adc
bound
adc
lcall
fmul
bswap
enter
mov
shlb
jg
fisubrl
fs
cwtl
enter
lods
mov
stc
push
frstor
andl
test
cli
pop
or
scas
mov
sub
xchg
add
mov
xchg
mov
cmc
call
add
loope
stos
call
mov
push
movsb
lret
fsqrt
jle
call
clc
mov
repz
lahf
mov
sahf
testl
fwait
lods
stos
mov
lods
mov
sub
mov
mov
loopne
mov
lods
stos
xchg
std
mov
test
xor
cwtl
inc
rcl
inc
ljmp
add
sub
stc
addr16
and
notl
jmp
adc
adc
pop
adc
add
add
push
pop
cmp
cmp
cmp
popf
negb
pop
pop
ljmp
and
clc
hlt
clc
add
rcrb
call
cmp
mov
call
lcall
and
cltd
leave
lcall
outsl
rcr
jecxz
xlat
mov
xchg
ficomps
cmp
leave
push
lock
test
adc
fldenv
pop
pop
fwait
push
mov
xchg
ret
aam
hlt
inc
cmp
xor
fxch
fnstsw
fcmovnu
dec
pop
add
jp
cmp
pop
or
outsb
sahf
cmp
mov
push
or
pushl
lcall
mov
mov
fstps
xor
and
stos
rcll
ret
rcr
push
cltd
js
in
fildl
pop
aas
jne
aam
or
fiadds
fnstcw
jg
scas
js
lahf
pop
lahf
fidivl
cmpsl
adc
fld
flds
arpl
test
add
enter
add
mov
out
sarl
int
mov
cs
fnstenv
arpl
hlt
pushl
add
jmp
and
nop
cmpsb
lcall
out
xor
mov
leave
pop
mov
fidivl
cmpsl
mov
cli
xor
cmp
cmp
leave
sbb
push
clc
or
adc
jmp
stc
in
sbb
adc
fidivrl
fnstenv
pop
mov
cmc
or
aad
xor
clc
aaa
adc
xorb
out
fucomp
jns
xor
or
sub
or
ja
sbb
adc
mov
sbb
out
add
loope
orl
daa
les
jg
fcmovnb
add
adc
push
repz
mov
das
fucomp
fcmovnb
add
lock
mov
cmpsl
fstpl
stos
in
iret
outsl
cmpsl
fldcw
cmc
and
in
bound
stos
lcall
pop
jecxz
jge
mov
call
mov
in
call
push
call
mov
adc
or
push
decl
fists
out
pop
loope
leave
push
jmp
js
mov
cwtl
dec
jg
lcall
test
test
xchg
mov
sub
fsubp
mov
lcall
add
jp
fisttps
lods
push
movsb
adc
sbb
jmp
stos
ret
call
imul
rcrl
aam
pop
mov
mov
mov
out
outsl
pop
jg
in
subl
jmp
xchg
nop
aaa
lret
decl
rcrl
cmp
int3
sub
stos
cmpsl
lods
lods
jbe
scas
fwait
cs
dec
xor
enter
mov
test
jnp
jge
jne
ds
mov
cwtl
push
lcall
adc
pushf
mov
es
dec
mov
out
test
lea
sbb
sub
mov
add
ljmp
lcall
mov
mov
or
mov
sub
outsl
insl
arpl
movsl
sti
adc
loop
pop
out
pushl
or
pop
int
pop
aad
sub
add
dec
cltd
or
add
shll
mov
stos
stos
dec
and
call
gs
sub
cs
loope
mov
loop
fadds
add
cmp
daa
push
lods
int3
leave
in
out
mov
arpl
test
sub
adc
mov
pop
pop
cmp
adc
inc
pop
inc
pop
jbe
xlat
rorl
cmp
lcall
popf
mov
lods
out
jne
in
xchg
loopne
xchg
fcmovne
movsl
arpl
out
call
sbb
mov
and
popa
clc
rorl
addr16
call
ret
arpl
jmp
arpl
mov
popa
loop
popa
sti
test
adc
call
mov
mov
sbb
outsb
popa
lret
adc
in
sbb
arpl
arpl
fmuls
in
add
shlb
mov
stos
pop
scas
in
rcll
or
pop
popf
scas
xchg
dec
mov
adc
dec
push
lods
pop
jmp
call
scas
arpl
stos
in
jl
in
rcrb
es
test
cmpb
push
mov
sbb
adc
arpl
arpl
movsl
stos
hlt
out
pop
mov
arpl
jmp
push
shll
popf
lock
das
icebp
inc
fdivrs
clc
test
mov
cmc
aas
cmc
ret
jecxz
mov
call
inc
gs
outsl
and
out
rcr
movsb
mov
cmp
cs
push
or
sub
sub
or
push
gs
pop
sbb
pop
ljmp
xchg
push
ss
jmp
int
jmp
mov
std
jg
mov
arpl
jmp
shl
imul
lock
pushl
fcomps
mov
loop
add
mov
jmp
or
or
dec
mov
arpl
jmp
in
adc
and
in
pop
jmp
sbb
mov
xor
dec
adc
out
mov
out
mov
roll
arpl
lahf
imul
mov
cld
xlat
lods
xchg
out
push
fidivs
cs
push
fbld
aaa
fwait
in
sub
incl
shll
adc
insl
pop
pushf
lret
ret
dec
rcll
xor
xor
test
cld
or
mov
aam
lds
std
lret
mov
jmp
cmpl
fmuls
adc
popf
idiv
jmp
inc
cld
push
xchg
aam
add
add
lcall
das
into
sbb
jg
incl
xchg
jb
jmp
iret
push
push
test
cmp
outsb
jmp
mov
lcall
mov
lods
in
jg
lret
fsubrs
sbb
or
xor
lret
ljmp
inc
and
insl
inc
loop
in
pop
test
and
mov
out
addr16
popf
cmp
jae
xchg
in
stc
pusha
adc
outsb
xchg
ret
shrl
decl
ljmp
mov
dec
mov
gs
subb
sbb
jle
jg
or
imul
jl
mov
add
call
ret
sahf
xchg
and
out
add
xchg
in
jecxz
jmp
ljmp
sub
out
fsubrl
notl
and
vcvtsi2sdl
hlt
dec
sar
aas
into
adc
stos
add
movsb
dec
jb
add
popf
je
mov
add
push
mov
jmp
jmp
jnp
ljmp
ret
jmp
movb
adc
lret
scas
loope
call
ljmp
ret
mov
or
jp
ja
pop
sub
lods
cs
jg
push
in
fsubl
inc
arpl
fsubs
lcall
incb
pop
test
mov
mov
jecxz
mov
pop
mov
popf
push
test
into
fnsave
add
leave
sub
jp
mov
xor
call
lret
in
mov
pop
popa
in
adc
sub
jmp
je
rol
pushf
and
popf
pop
fsubp
push
inc
loope
inc
out
je
arpl
outsl
mov
ss
test
fldl
bound
clc
mov
inc
xchg
inc
pop
outsl
push
clc
ja
outsl
out
lods
shll
fstpt
popa
add
pop
mov
jb
call
sahf
jne
fldt
jns
adc
xchg
imul
stos
ja
sar
hlt
jg
clc
mov
cld
imul
mov
cmp
test
hlt
out
adc
adc
out
mov
gs
ljmp
jmp
dec
xor
lcall
adc
xor
ret
push
fdiv
add
add
jmp
dec
xor
pop
xor
sbb
call
pop
push
lds
inc
cmp
cmp
sbb
add
adc
movsl
mov
mov
cs
call
sbbb
push
aad
cwtl
push
pushf
loop
pop
roll
in
ljmp
clc
sahf
movl
dec
in
imul
fs
mov
push
jmp
std
aad
mov
cli
push
test
jmp
lods
adc
push
lcall
arpl
arpl
fisttps
add
jecxz
in
inc
jne
mov
inc
clc
xorb
push
push
aam
dec
leave
sub
pop
sti
leave
add
cli
adc
add
cmp
mov
cmpsb
fwait
ds
repz
cmp
das
std
pushl
call
push
fistpl
out
fsubl
add
mov
inc
ret
call
pop
pop
data16
rol
fwait
inc
fistps
push
mov
sar
inc
jg
dec
mov
shl
cmpsl
imul
shl
add
cmc
mov
push
clc
popf
aaa
and
repnz
jmp
cmc
dec
push
inc
cli
and
out
xor
in
cltd
popf
loope
clc
sub
add
rcl
mov
lcall
dec
xchg
cmpsb
mov
ljmp
xchg
aad
jmp
adc
aaa
mov
js
ljmp
into
arpl
iret
jns
or
cmc
mov
sbb
sub
pop
addl
inc
out
into
icebp
or
mov
mov
and
arpl
lcall
sub
in
cmc
leave
cli
rcll
shlb
dec
sar
dec
ja
call
mov
and
hlt
and
jg
jmp
clc
xchg
sti
mov
cmp
xor
ds
sar
iret
in
xchg
out
and
pop
stos
xor
popa
ljmp
inc
pop
in
je
scas
xchg
jge
cmp
dec
cli
lods
or
loopew
xlat
cltd
adc
mov
lahf
imul
adc
jle
outsb
sub
fsubs
repnz
call
addr16
imul
sub
mov
pop
jg
pushf
ljmp
ds
ret
and
stc
pop
sub
xchg
sub
add
in
push
jmp
xchg
pop
test
push
insb
lcallw
test
loope
cwtl
add
loopne
pop
inc
adc
addr16
jge
xor
jnp
sub
scas
inc
call
mov
int
jmp
jmp
pop
inc
ljmp
push
rolb
insb
sbb
loopne
imul
and
movsl
or
lods
sbb
iret
adcb
sub
stos
cwtl
nop
fidivrl
scas
in
sbb
ljmp
inc
sub
gs
ret
cmp
gs
jne
ss
sbb
adc
xchg
mov
rclb
iret
lock
fdiv
jmp
out
shlb
jecxz
js
xchg
int3
adc
sub
jg
jmp
movsb
test
jmp
cmp
mov
mov
das
pop
jmp
pop
and
popa
fdivrl
in
mov
fsub
rcrb
sahf
cld
adc
das
sbb
sub
ljmp
or
pop
push
mov
pop
sbb
mov
xchg
pusha
fnstenv
xchg
push
orb
call
and
mov
xchg
xchg
mov
mov
stos
jno
out
ljmp
add
test
mov
in
inc
shrb
mov
ret
or
loopne
cli
push
dec
cmovbe
in
adc
sbb
xchg
sbb
das
jne
decl
loop
mov
and
sub
sarb
xor
jmp
roll
sbbb
incl
sarb
popa
pop
fwait
jnp
ror
sbb
and
mov
adc
lea
jge
pop
call
ret
push
pusha
or
jg
cmp
je
push
testb
fistl
lods
pushl
pushf
ljmp
sti
xchg
push
outsb
pop
in
sbbl
into
lahf
mov
adcb
aad
or
icebp
pop
movsb
imul
xchg
jg
mov
push
rdpmc
mov
fstpt
loopne
pusha
push
bound
sub
mov
call
xor
jb
popa
mov
arpl
paddb
xchg
imul
pushf
repnz
jo
add
cltd
imul
mov
add
out
loop
add
incl
pop
xchg
shll
xor
sub
filds
pop
repz
call
sub
ljmp
mov
adc
adc
cmpsb
add
add
mov
sub
xchg
in
cmp
dec
cs
aaa
mov
add
jl
out
pop
cltd
int
lock
out
pslld
decl
call
pop
sti
jmp
mov
lret
fsubr
jmp
cmp
adc
xor
add
outsb
pop
loopne
or
int3
fiadds
xor
add
pop
iret
notb
push
in
lahf
pop
dec
adc
push
inc
sub
adc
incl
or
pusha
addl
jns
lret
push
in
push
add
out
pop
sbb
fadds
into
fwait
movsl
ljmp
adc
xor
sbb
jnp
sbb
mov
add
rol
lods
movsl
mov
jle
fbld
add
jecxz
add
cmc
xchg
xchg
mov
test
sbb
jmp
jo
xchg
test
cmp
call
cli
jg
cltd
add
mov
xchg
mov
lret
sbb
imul
sub
or
sbb
lcall
loope
mov
dec
stos
loopne
sub
mov
outsb
aaa
rorl
dec
int3
xchg
mov
mov
stc
out
and
jecxz
jg
jg
insb
outsl
and
xchg
loope
enter
pushfw
mov
in
or
test
cmpsl
sahf
in
imul
lcall
sub
xor
aad
adc
je
sbb
cmp
sbb
dec
push
jmp
shl
lock
lcall
rolb
mov
or
jg
call
in
fsub
loop
jne
imul
div
mov
pop
in
dec
jecxz
imul
add
sbb
das
out
pop
rcl
jecxz
dec
cltd
loope
loopne
movsl
lods
adc
repnz
lods
add
out
cmpl
fsubr
stos
add
ljmp
cld
push
push
inc
dec
int3
repnz
loopne
pop
pop
call
pop
cmp
arpl
ret
sbb
pop
push
jg
dec
jg
cmp
push
xchg
out
adc
push
ret
add
sbb
pushl
inc
pop
std
lock
cmpsl
out
inc
mov
mov
add
hlt
sbb
popf
push
call
mov
sbb
mov
imul
imul
lds
xor
stos
loope
jg
add
loopne
adc
push
ret
imul
rcrl
cmpsl
mov
push
fcomp
xor
aad
xor
jo
dec
mov
imul
inc
int
xor
xor
lock
sbb
jge
cmp
idiv
lods
aaa
sbb
addr16
xor
adc
pop
dec
decl
popa
xchg
ret
pop
or
cmpsl
iret
push
std
fcom
and
cmpsl
jmp
in
pop
cld
fnstsw
push
dec
sbb
call
ret
jb
mov
std
dec
adc
out
add
lret
push
push
add
inc
ret
jg
push
shr
rcl
mov
jl
sti
fdivs
icebp
call
pop
stc
xchg
loop
call
xchg
mov
jg
mov
jns
add
adc
sbb
ljmp
pushf
cli
mov
pushl
fstpt
add
jp
jmp
pop
movsb
xchg
cwtl
ljmp
iret
movsb
add
out
mov
xor
mov
nop
pop
std
les
icebp
add
lret
cmp
clc
xor
jmp
std
repnz
adc
jg
pop
ljmp
jae
aas
push
sub
outsb
adc
mov
and
fdivl
jmp
jne
sub
add
shl
sub
cwtl
iret
popf
add
in
ljmp
ret
clc
aaa
adc
cmpl
dec
mov
std
in
mov
sarb
test
cld
pop
rolb
outsb
xorb
xchg
dec
jo
pop
movsl
sbb
lock
push
bound
bound
cltd
rcrl
je
inc
aad
or
divb
xor
lret
add
jno
std
icebp
sub
incl
jne
jmp
rcrl
lahf
sti
pushf
sub
cmpl
call
sub
jmp
dec
add
fsts
mov
and
stc
adc
das
inc
adc
addr16
test
jg
mov
lcall
pop
aas
lahf
rorl
call
inc
imul
imul
int3
pushf
repz
aad
fwait
push
add
push
rorb
cmc
push
jmp
mov
imul
xchg
das
pusha
and
frstor
inc
ljmp
xchg
lahf
inc
add
mov
pusha
mov
pop
push
jmp
and
in
imulb
add
pop
call
fadd
pushf
mov
nop
pushf
mov
mov
divl
mov
stos
xchg
pushf
enter
push
outsl
add
loope
int
adc
pop
cli
in
push
mov
daa
mov
push
push
inc
incl
call
add
pop
xor
shrl
push
sub
incl
je
insl
out
pushf
aaa
cltd
dec
xor
jmp
enter
in
lahf
adc
sub
ljmp
lea
outsl
ljmp
or
jg
pop
int
push
leave
xchg
push
sbb
cmp
movb
xor
jo
cli
pop
in
out
stc
gs
les
cmp
es
pop
in
cld
mov
cld
mov
add
xlat
addb
cmp
lea
mov
sbb
negl
sub
ljmp
mov
mov
shr
sub
mov
mov
imul
sub
and
mov
idiv
ja
cmpsl
scas
mov
mov
lcall
lea
pushl
mov
cmpl
ficompl
or
lds
xchg
addr16
or
repnz
add
hlt
jg
mov
stc
inc
inc
aaa
adc
cmpsb
mov
adc
mov
lds
mov
mov
lcall
les
mov
rcrb
test
dec
pop
test
lcall
add
sub
test
jmp
mov
fnstsw
decl
jbe
mov
or
lcall
mov
decl
dec
or
scas
add
clc
push
les
mov
pop
pushf
jmp
insl
sti
sub
imul
mov
dec
pop
cmc
pushf
cmp
not
inc
push
cmp
lcall
call
rorl
adc
daa
imul
pushf
fbld
or
outsl
lock
lahf
enter
insl
and
call
sub
cli
dec
in
outsb
mov
adc
std
xor
std
fucomip
aaa
mov
pushf
cwtl
imul
push
lcall
mov
mov
mov
mov
mov
lret
jmp
loope
cmp
test
cltd
mov
frstor
cmc
add
aad
incl
xchg
lret
aam
hlt
arpl
std
push
mov
popa
js
test
loopne
fmul
insb
repz
shrl
cs
mull
arpl
in
sbb
popa
mov
pop
cli
sbb
adc
test
and
mov
test
mov
in
mov
adc
scas
pushf
in
dec
subl
inc
cld
cmp
mov
mov
jg
jl
mov
gs
sbbl
or
fnstenv
jg
mov
fdivs
leave
pop
or
fldenv
sbb
sub
inc
shr
sub
inc
adc
lcall
or
aad
adc
data16
clc
es
pushf
mov
outsl
xor
mov
pushf
cmpsb
add
lret
push
ficomps
mov
pushf
aad
sub
lds
cli
sti
fcmove
add
lds
and
addr16
pushf
mov
pop
and
ret
jle
and
add
mov
xlat
repnz
aas
add
pop
es
pop
xor
xor
jecxz
jmp
pop
xor
pop
and
lods
push
push
cmp
in
mov
mov
cmc
inc
in
aam
cld
pusha
sarb
repz
pushf
cltd
lock
push
das
inc
aaa
mov
mov
jl
incl
sarl
jecxz
pushf
cmc
ss
inc
jmp
xor
push
xor
movsl
cs
in
sbb
fucomip
push
cmp
xor
mov
add
fs
adc
pop
loopne
out
xor
mov
lods
popa
hlt
and
mov
jmp
insb
dec
sarb
std
shll
popf
mov
repz
call
or
pushf
loopne
jmp
scas
mov
mov
xchg
mov
add
scas
iret
mov
mov
popa
ret
shrb
cmp
test
test
call
pushf
add
add
pop
fmuls
fcoml
or
mov
mov
mov
lcall
stos
mov
adc
adc
mov
stos
popa
fucomip
pop
loop
in
mov
inc
test
mov
shlb
imul
cltd
add
test
fst
cmc
push
sub
inc
inc
fdiv
rorb
rcrb
addr16
movsl
sub
in
fldcw
add
and
mov
inc
push
cld
clc
lock
movsb
loopne
test
movsl
shl
cmp
cltd
lods
push
sbb
mov
mov
lods
in
inc
push
xchg
jae
imul
sub
or
call
ret
xchg
gs
aas
cs
int3
add
movb
xor
ret
mov
adc
stos
test
jg
jmp
sub
add
addr16
ret
cmc
call
jno
dec
xor
xchg
sub
shrb
pusha
cld
out
lret
push
jno
mov
cli
pop
ljmp
std
mov
adc
out
bound
icebp
imulb
movsb
mov
lcall
jo
outsl
mov
mov
jno
dec
mov
imul
incl
fs
arpl
loopne
and
sub
pop
mov
mov
lcall
mov
add
adc
lcall
add
aad
outsl
or
mov
pushl
mov
xor
push
push
and
ret
inc
fidivrl
das
icebp
pop
mov
enter
stos
repz
lds
jbe
cmc
test
call
add
jg
add
xchg
shr
dec
loop
or
sahf
out
cmp
out
jne
into
mov
aam
cmp
inc
mov
ficomps
outsb
push
in
push
call
ljmp
in
stos
push
or
pop
loope
js
sbb
and
jmp
mov
clc
mov
push
xor
mov
fucomip
jae
xor
push
fstl
xor
push
popf
repnz
lock
loop
aaa
add
cli
ljmp
rorb
sub
xor
jmp
mov
add
sarl
dec
cli
out
lods
pop
aaa
jp
mov
aam
push
cmp
inc
decl
adc
fiadds
pusha
stos
adc
ret
xorb
pushl
jecxz
sub
sti
icebp
repnz
sub
inc
out
lock
cmp
push
jg
cmpsb
nop
int3
stc
test
mov
or
mov
std
push
mov
cmc
add
fisttpl
xorl
cld
xchg
out
or
fwait
mov
hlt
jmp
xchg
icebp
sub
gs
xchg
int3
rolb
faddl
sub
popa
push
fdiv
mov
das
lods
dec
shrl
icebp
ljmp
repz
loopne
popa
mov
pop
icebp
sar
mov
sub
lock
lods
loope
sub
inc
frstor
or
addr16
or
sar
int
xchg
out
imull
adc
mov
jmp
adc
addb
ljmp
fsubrs
add
ljmp
jl
mov
loopne
mov
imull
into
mov
add
loopne
mov
ja
xlat
iret
jne
inc
pop
cs
arpl
jae
test
jmp
adc
ss
mov
arpl
xchg
push
inc
fmuls
into
and
jmp
shlb
stos
fwait
mov
push
loopne
out
popf
push
mov
add
cmp
mov
xor
cmp
xor
aad
inc
sbb
lahf
mov
mov
repnz
js
add
mov
test
and
int3
out
pop
outsb
lock
jle
mov
mov
mov
ljmp
shl
dec
lea
adc
fbstp
int
outsl
scas
jecxz
jmp
shll
and
mov
incl
jmp
mov
or
data16
pop
fucomip
fiadds
cmp
inc
das
roll
ljmp
fdivl
mov
je
popa
sbb
loop
jmp
push
js
out
mov
call
sbb
dec
mov
int3
mov
call
cli
scas
dec
sarl
pop
ss
mov
xorb
adc
cmpsl
push
shll
cmp
ljmp
into
arpl
not
xor
fwait
add
mov
lcall
loopne
or
shr
in
mov
and
cmpb
ret
fld
mov
mov
clc
imul
aam
dec
cld
jg
loopne
sub
lret
mov
add
clc
cmc
in
xchg
clc
outsl
and
out
jnp
aad
lahf
daa
adc
jne
or
pop
sub
test
sbb
fidivrl
daa
ljmp
push
mov
xchg
inc
sbb
mov
push
lods
mov
mov
cmp
adc
aad
orb
mov
rep
cmc
call
xor
xchg
icebp
imul
fucomip
adc
stc
pop
stc
add
ljmp
add
sub
loope
adc
movsb
xor
inc
pop
xchg
inc
call
xchg
ret
into
and
sbb
mov
xchg
ljmp
sub
xor
inc
add
mov
push
pop
test
fxch
incl
inc
arpl
nop
repz
out
scas
xchg
ret
cld
enter
les
pop
lcall
dec
mul
adc
xor
add
out
sarb
pushf
mov
call
mov
ret
iret
rolb
das
repz
outsb
sub
or
dec
cmp
dec
pop
les
popa
cmc
cwtl
adc
mov
icebp
iret
out
mov
loop
movlps
jmp
mov
pushf
rcrl
xchg
insl
sbb
sar
outsl
mov
sbb
dec
push
sbb
stos
mov
out
std
incl
fsubs
aas
pop
push
je
push
xchg
in
mov
inc
aas
sub
jg
or
or
repz
pop
pop
pop
push
xor
jno
mov
mov
jg
jne
jecxz
bound
loopne
mov
stc
out
or
ljmp
lds
xchg
cmovbe
fdivl
mov
repnz
shrb
pop
clc
fdivs
or
movsl
pop
cld
fs
mov
push
dec
add
mov
inc
pushl
xor
push
aam
in
aam
sahf
aam
inc
add
aam
fbld
lcall
jg
lds
loop
adc
jns
rclb
adc
insl
jmp
shrl
pushw
lds
rolb
add
outsl
lock
ds
mov
int
xorl
xabort
decl
cli
fmuls
test
test
call
sbb
lcall
mov
hlt
jno
in
sbb
jecxz
outsl
push
mov
add
lahf
push
scas
mov
stos
sar
push
test
sbbl
jg
fists
cmc
minps
mov
in
shrl
mov
sub
call
mov
sti
stc
lahf
cli
push
outsb
clc
aad
call
cli
outsl
shll
dec
dec
mov
shlb
push
mov
ljmp
pop
loop
add
push
lret
icebp
push
lcall
out
call
call
test
pop
pop
pop
sbb
clc
mov
xor
xor
ds
mov
repz
movl
fbstp
mov
lret
mov
stc
lret
bound
xchg
daa
push
add
add
cltd
fidivrl
xor
lock
mov
and
or
int3
cld
out
sub
cs
mov
clc
incl
add
pop
shlb
les
sbb
cld
call
loop
add
das
fdivrs
cmp
jns
sbb
inc
shr
les
fnstsw
aaa
jne
mov
push
idivl
add
iret
push
adc
out
sbb
jmp
shr
mov
or
push
mov
cld
lret
std
mov
mov
int
jne
js
ss
cmp
sti
call
mov
sti
sbb
push
push
js
das
adc
fcoms
mov
fwait
or
movsl
pop
jg
mov
stc
test
lea
fdivrs
mov
fistl
ret
aam
push
cld
mov
mov
xchg
pop
std
sbb
pop
imul
cwtl
and
adc
dec
jmp
out
cmp
jg
mov
testb
js
pop
push
adc
inc
mov
mov
fucomip
xchg
push
mov
and
sub
mov
rcll
xchg
jmp
iret
sub
and
jmp
daa
ret
and
push
jo
add
sar
add
test
jge
add
nop
int3
fisttps
outsb
and
lcall
aad
mov
lahf
popa
fcoml
addr16
mov
and
push
push
int
decl
sbb
add
out
movsl
test
shl
arpl
sub
cli
divl
push
lds
xlat
popa
fldenv
mov
push
sarb
ret
aas
subb
repz
pop
outsl
daa
decl
add
sbb
xchg
sarb
and
ljmp
stos
fistpl
mov
outsb
pushf
pop
mov
scas
aaa
clc
mov
shlb
pushf
jno
lcall
fcmovne
xchg
call
lahf
fcmovnbe
orb
mov
or
fbstp
push
ss
out
push
cmp
bnd
adc
clc
jb
push
rorb
call
dec
xor
pop
stos
cmpsl
dec
cmp
in
mov
pop
mov
pushl
cli
subb
call
or
arpl
fiadds
mov
mov
pop
fldenv
fnsave
popf
das
fildll
xchg
xchg
std
int3
mov
and
sbb
dec
xchg
cltd
sbb
aaa
clc
dec
cmp
in
loop
xor
push
push
sahf
dec
dec
int3
inc
int3
mov
push
ss
cs
ljmp
jle
add
jno
inc
dec
lret
and
sbbl
xlat
dec
icebp
pop
xlat
mov
enter
mov
mov
clc
or
mov
cld
mov
ret
arpl
pop
addl
test
pop
sub
jmp
sbb
loop
imul
push
out
sub
clc
bound
mov
subb
imul
jmp
fstpl
sahf
pop
movsb
mov
dec
cld
xchg
clc
inc
test
out
xchg
leave
in
dec
popf
ret
lock
fistpll
shrl
fwait
xchg
cmpsb
push
xor
js
mov
ja
inc
imul
jmp
imul
mov
jne
inc
adc
hlt
ret
mov
cwtl
aam
cli
incl
arpl
mov
aam
loope
mov
shl
das
cld
dec
cld
lcall
ror
dec
les
roll
mov
push
int
jnp
sub
subb
lea
in
lcall
add
pop
es
cmp
stos
int3
enter
popf
mov
pop
outsb
frstpm(287
enter
fistl
daa
add
pushl
lahf
faddp
sbb
decl
fsubs
movsl
ljmp
fcomps
inc
ficoml
leave
add
dec
mov
mov
roll
sbb
inc
xor
out
int3
jl
in
pushl
mov
mov
arpl
push
xchg
js
fcoms
ljmp
cld
popf
int3
mov
mov
divb
hlt
incl
cltd
les
xchg
sbb
xchg
fsubp
xor
hlt
jecxz
sub
push
inc
mov
in
lret
into
mov
cmpsl
mov
int
mov
push
fcomps
jmp
enter
outsl
inc
xor
push
or
pop
mov
mov
pop
push
pop
fsubs
mov
mov
add
mov
sub
push
inc
sahf
sub
das
arpl
mov
mov
dec
movsb
stos
scas
add
movb
fucomi
xchg
mov
fcmovne
cli
push
out
cmp
mov
nop
pushf
das
outsb
inc
out
cwtl
test
cltd
pop
sarb
lods
loopne
push
test
jp
dec
or
icebp
pop
in
cltd
xlat
mov
std
inc
lods
fiadds
mov
lds
adc
fdivs
dec
xchg
cmpb
gs
cwtl
mov
push
clc
jae
mov
push
in
in
add
mov
xchg
dec
std
pop
ljmp
in
push
lock
outsl
inc
aam
lcall
outsb
test
fists
mov
mov
jno
mov
stos
xor
fbld
xchg
jb
lods
sub
fcoms
in
fucomip
xchg
repnz
push
add
push
sbb
cld
filds
jmp
and
cmp
pop
into
push
pusha
mov
pusha
pushf
xchg
cmp
and
adc
cmp
in
jmp
loope
fstpl
popa
pop
sbb
pop
bound
imul
xor
das
insb
test
mov
sub
ret
cmp
cld
xchg
mov
pop
in
jae
add
arpl
imul
outsb
adc
sar
jg
jl
jecxz
mov
test
pop
mov
pop
pop
dec
roll
sub
push
lea
cli
ljmp
insb
mov
lret
sbb
sub
in
sarb
hlt
sub
push
sbb
shrl
or
shrl
push
inc
out
fcomps
and
sbb
pusha
in
test
decl
fcompl
sbb
in
adc
or
out
sti
rcrb
call
inc
dec
fcom
stos
mov
fisttps
mov
mov
in
ss
sub
aad
stos
lcall
ljmp
adc
in
insl
pop
lahf
adc
push
popf
sub
imul
aam
stos
mov
popa
jmp
cs
fwait
and
sbbb
inc
sub
idivl
fcmovnb
loopne
mov
rorl
clc
lcall
xor
jg
cs
and
lock
fcompl
inc
cmp
outsl
and
jp
lock
clc
movsb
sbb
mov
movsl
and
subb
mov
clc
xchg
fcompl
pop
nop
ret
and
scas
cmp
leave
shll
lcall
or
enter
mov
sti
cmp
dec
popf
mov
shrb
cmpsl
test
std
subb
mov
rcr
sbb
call
jmp
xor
outsl
outsl
sbb
clc
scas
lds
push
andb
arpl
std
popf
cli
mov
push
add
xor
fs
pmuludq
das
iret
scas
sub
shlb
aad
pop
rclb
int3
out
ljmp
sbb
stos
aam
xor
fdivp
add
jmp
add
into
add
mov
out
not
jecxz
imul
jmp
jmp
dec
aad
adc
lret
aam
push
add
dec
stos
mov
das
cld
mov
mov
loop
in
pushf
subl
out
pushl
ret
mov
add
push
and
dec
push
es
subl
loopne
out
lret
jo
in
pushf
ss
add
into
sbb
incl
mov
add
stos
add
popf
pop
inc
int3
out
lea
out
rcrb
jg
movsl
daa
pavgb
cld
call
pop
dec
push
xchg
les
incl
inc
fucom
insl
cmpl
call
mov
adc
pop
mov
cmpsl
sti
out
cwtl
iret
and
lcall
loopne
inc
fwait
sub
insl
fwait
repz
incl
pushl
call
mov
fistps
pop
movsb
mov
ljmp
ljmp
mov
std
roll
xor
aam
xor
dec
jmp
sti
push
nop
iret
cld
xchg
unpckhps
mov
loopne
test
in
enter
mov
adc
mov
add
or
xlat
neg
mov
std
in
rcrb
xor
fsubs
mov
std
ljmp
out
aam
lret
pusha
out
stos
scas
adc
lods
popf
call
jne
cli
lods
cmp
mov
dec
adc
call
movsl
or
fwait
out
xchg
adc
movsb
mov
rolb
or
incl
clc
out
imul
ret
add
pushf
insl
ja
mov
mov
inc
adc
mov
std
sbb
leave
adc
or
add
lock
aad
gs
push
ljmp
inc
int
xchg
adc
incl
hlt
insl
testl
ljmp
fcmovb
add
repnz
lcall
or
imul
fiaddl
jmp
sub
ljmp
fldlg2
push
and
shl
jmp
aam
cmpl
jg
jg
adc
stc
jne
pop
shll
mov
lahf
jecxz
lea
cli
jl
adc
enter
movsb
popa
cmp
mov
incl
add
adcl
adc
ljmp
mov
sub
push
jo
movsl
mov
fcmovnu
xchg
push
inc
incl
jno
imul
xor
fisttpll
or
decl
test
negl
daa
pop
add
mov
ljmp
std
lcall
push
xor
out
cmp
shlb
lods
lods
nop
mov
out
jle
inc
dec
mov
dec
push
push
jg
es
rcr
imul
jmp
int3
add
out
mov
jmp
les
in
pop
add
cmp
push
addr16
and
test
adc
shll
fildl
leave
mov
bound
lcall
incl
and
sbb
xchg
out
xor
lods
cmp
lds
cmpsb
cmp
push
imul
ficomps
sbb
daa
fisubrl
jge
pop
jmp
xchg
add
and
out
and
sahf
clc
jmp
add
pusha
in
fimull
adc
decl
sub
imul
outsb
sbb
pop
mov
mov
rol
dec
dec
push
cli
fists
mov
mov
add
pop
xlat
dec
aaa
cwtl
jo
and
sbb
fnstsw
dec
pop
cli
xchg
fistpll
test
mov
pop
std
pop
clc
fadds
adc
test
jb
ds
das
hlt
mov
xchg
adc
cmp
shll
mov
sbb
inc
mov
and
sbbb
icebp
sbb
mov
fsts
mov
adc
mov
iret
inc
sbb
inc
xor
fdivr
leave
loop
loope
jmp
fcoms
jge
out
pop
lea
adc
mov
mov
dec
or
outsl
cld
jg
dec
push
sahf
mov
fdivl
pop
lds
out
dec
inc
jg
loope
xchg
pop
inc
movsl
xchg
or
sbb
call
test
fadd
add
rorb
orl
fucomip
mov
or
mov
mov
mov
xlat
mov
inc
call
loopew
cmp
pop
clc
mov
iret
test
pop
sahf
lock
in
jg
scas
movsb
fucomip
loopne
and
xchg
cld
loopne
fcmove
ljmp
testl
mov
add
sbbl
popf
lahf
cwtl
cmp
cwtl
addb
loope
fwait
mov
fildll
mov
sub
sahf
push
push
adc
insb
sbb
push
ljmp
in
arpl
or
jg
cli
pop
jecxz
push
jg
or
jg
jmp
loop
mov
int3
xlat
hlt
push
shrb
or
mov
xchg
stos
std
pushl
js
loope
inc
out
dec
sbb
js
sub
lahf
and
dec
outsl
in
push
dec
mov
lret
mov
cwtl
push
add
cld
jmp
es
in
jae
bound
pop
in
call
stos
sub
or
decl
pop
and
mov
lods
pushl
out
sub
in
loop
fsubs
adc
adc
pop
pop
loopne
inc
xor
xchg
les
out
ljmp
jmp
mov
neg
push
out
sbb
or
loope
cmp
outsl
sub
ret
cmp
xor
mull
into
sbb
ljmp
xchg
addr16
jecxz
or
mov
lret
pop
dec
and
dec
fildl
mov
mov
rorb
cld
dec
xchg
lcall
jmp
les
shll
sbb
pop
mov
adc
sarb
lahf
paddsb
fisttps
inc
or
inc
lds
clc
xor
decb
dec
enter
adc
add
outsl
sti
pushf
out
pushf
loope
jg
pop
loop
xchg
sbb
orb
add
lods
jmp
call
call
addb
jns
stos
cmpsb
out
xor
andl
decl
test
xchg
add
pop
xor
pop
or
movsl
repnz
xchg
mov
sarl
mov
stos
jp
sub
int
xchg
in
mov
aad
jmp
imul
fsubrp
cmp
mov
pop
adc
movsb
jo
jg
aaa
pop
inc
popf
lods
cmp
push
push
cli
fsubs
imul
call
cmp
into
data16
and
adc
mov
sub
jg
aaa
cs
mov
xor
outsl
jmp
and
mov
loop
push
int3
insb
sahf
into
adc
popf
add
stos
ljmp
loopne
out
ljmp
cmpsl
cmpsb
add
outsl
xor
cltd
call
or
cli
adc
or
pop
adc
iret
aas
dec
aaa
aaa
xor
add
pushf
in
test
pop
cmpsb
sbb
aaa
push
lock
jle
fisubl
xor
fisttps
loop
out
scas
mov
sbb
dec
jle
lret
je
dec
shl
adc
pop
pop
adc
mov
inc
push
mov
jnp
stos
push
and
in
in
stos
pop
addb
icebp
arpl
and
in
aam
push
and
mov
nop
sub
or
sti
sbb
or
cmc
add
jae
and
mov
xorl
in
push
pusha
aas
fwait
pop
lea
jg
push
out
push
push
imul
popf
cmpsb
sahf
loopne
cs
xchg
xchg
scas
arpl
push
lea
pushl
sarl
stos
lret
push
cmp
push
cmp
sti
ficompl
adc
fnstsw
lds
mov
fcomps
fistl
jmp
scas
jne
incl
pusha
movsl
push
stos
mov
sti
and
in
mov
xchg
push
cld
mov
popf
xor
xor
mov
scas
stos
mov
dec
scas
cld
lcall
inc
lods
cmpsl
popf
push
lahf
xchg
xor
rcr
outsb
mov
push
pop
jae
lahf
jmp
mov
pop
xor
and
add
dec
lods
into
inc
shr
incl
loope
xlat
mov
cmpsl
add
into
cltd
add
call
jo
mov
xchg
jo
add
adc
mov
sbb
jnp
insl
push
xor
jae
jbe
das
ret
negb
jg
incl
out
movsl
xlat
sbb
les
push
enter
loopne
sti
decl
ljmp
sbb
mov
cltd
mov
aaa
movsl
icebp
mov
incl
outsl
xchg
sub
adc
jmp
sub
aaa
sbb
iret
and
sti
rcl
das
test
vmwrite
push
xchg
sbb
data16
inc
ljmp
daa
stos
mov
push
out
push
xor
cmp
xchg
add
scas
test
int
ds
xchg
mov
outsb
icebp
pushf
ror
xlat
push
mov
jg
dec
xchg
in
iret
pusha
cltd
mov
mov
in
jns
xchg
pop
addl
cmc
mov
idiv
lcall
std
dec
je
cmpsb
test
arpl
and
testb
xor
dec
xlat
xor
js
outsl
std
lcall
mov
rol
sub
fwait
cwtl
lcall
cwtl
pushf
loope
je
cld
das
lock
mov
leave
fs
je
or
fcomps
jmp
dec
cmp
add
fwait
pushf
pop
aaa
pop
jg
mov
js
pop
fld
jmp
push
jnp
aas
sub
sbb
lock
pushl
nop
or
ret
and
jns
xchg
or
dec
mov
sbbb
sbb
ljmp
mov
xor
fidivrs
sahf
iret
in
add
mov
in
pop
jg
test
mov
aas
or
xor
pushf
adc
clc
incl
inc
push
sbb
mov
xor
pop
jmp
fwait
jle
dec
cmp
push
test
jecxz
dec
cli
clc
in
push
aas
mov
fnstsw
dec
add
xor
test
in
call
fstps
fistpll
adc
fdivs
add
out
movsb
aam
push
call
push
xor
out
xchg
pusha
test
sbb
adc
mov
xor
pop
cmp
and
sbb
adc
cvtpi2ps
pop
fs
mov
mov
mov
aas
sarl
in
mov
daa
shll
out
or
iret
push
pushf
adcl
popf
data16
call
leave
syscall
cmp
paddd
sub
cmpsb
decb
aad
xchg
cli
fnsave
pushf
mov
mov
lahf
int
test
clc
ljmp
add
dec
ds
mov
bound
call
insl
lahf
addl
mov
mov
ljmp
pop
xor
gs
test
mov
inc
dec
loope
ds
mov
fisttpl
daa
or
push
fidivrl
int
out
add
inc
mov
jmp
mov
dec
mov
adc
ljmp
or
arpl
sbb
inc
int
stos
add
xchg
dec
pusha
and
mov
stos
adc
lret
ljmp
lret
dec
loopne
decl
mov
out
in
xlat
add
popf
mov
scas
sub
inc
mov
cmpsb
cmpsl
les
cmpsl
or
or
cmp
les
test
cld
cmpsl
sub
mov
orl
mov
pop
and
ljmp
pop
stc
lcall
lret
mov
ret
es
outsb
test
sub
stos
fcmovne
push
or
dec
inc
mov
lods
test
fistpll
xchg
jo
mov
mov
cmpsb
int3
mov
test
inc
adc
incl
fildl
jle
mov
mov
sub
outsl
mov
pop
mov
add
mov
jg
sub
add
scas
add
shrb
bound
pushf
les
push
jno
inc
add
or
jmp
outsl
test
mov
mov
leave
pop
lock
into
push
icebp
sbb
mov
and
and
daa
and
and
loop
adc
outsb
or
cmp
dec
mov
dec
mov
pop
daa
mov
enter
add
filds
cltd
dec
js
hlt
pop
xchg
mov
xchg
test
add
mov
or
fstpt
test
test
out
fldt
xchg
daa
mov
cmpsl
mov
xchg
test
mov
in
rorb
out
sbb
nop
xchg
out
jg
pop
roll
ja
int3
xor
adc
mov
dec
pop
pop
lret
rcrb
mov
cld
mov
inc
stc
mov
and
adc
mov
pusha
mov
mov
adc
fildl
cs
add
push
cli
pop
mov
aam
jg
outsl
mov
mov
push
pop
sub
ss
add
lock
call
pop
lods
adc
dec
rcrl
or
pop
ds
sbb
xchg
scas
push
mov
cmp
addr16
pop
adc
dec
ljmp
adc
or
pop
inc
mov
mov
pop
xchg
jg
fldl
jle
push
sbbl
xchg
adc
insb
jo
in
jg
call
aaa
mov
orl
lea
pushl
sarb
xor
cmp
xchg
in
outsb
mov
mov
cwtl
lock
aad
test
faddp
push
outsl
xor
inc
mov
popf
lcall
mov
pop
mov
int
out
out
rcl
loop
leave
mov
decl
mov
leave
lds
xchg
inc
test
movsb
loope
arpl
mov
in
cmp
mov
and
roll
icebp
mov
cli
lds
xchg
insb
out
mov
std
incl
mov
push
sti
call
nop
cs
pop
ret
mov
decl
and
mov
scas
inc
imulb
js
or
lcall
and
std
and
shrb
pop
mov
scas
stos
xor
psrld
les
mov
mov
in
jl
add
lret
cs
ljmp
test
push
decl
jb
ljmp
clc
rorl
mov
decl
mov
mov
xchg
pushf
jnp
stc
mov
call
lcall
cld
push
jns
cwtl
int3
lea
out
shrb
inc
push
rcll
nop
push
cld
pushl
add
lods
mov
sub
out
int
test
ljmp
cmc
jecxz
and
test
cmpsl
lods
cmpsb
mov
incl
lahf
jg
cmpb
cmc
push
shll
mov
xor
xor
mov
lret
mov
cmpsl
movsb
test
mov
int
lea
clc
ljmp
xlat
test
in
clc
pop
adc
imul
iret
push
xchg
mov
cmpsb
add
jg
add
add
add
or
outsl
cmp
or
call
add
fxam
fldcw
xchg
daa
stos
inc
fcmovne
fcompl
sti
cli
fiadds
fisubs
adc
lock
rol
rcr
shrl
shll
cwtl
rcll
rcrl
sub
add
pushl
shll
ror
sbb
pop
in
sar
shl
ror
mov
incb
and
daa
xor
jle
dec
idiv
mov
shlb
sarb
rolb
rclb
stc
rcr
shrl
dec
roll
rcll
sar
jno
insb
aam
aam
aad
test
xchg
pop
push
and
cmp
movsl
call
jae
or
sbb
jbe
daa
adc
xlat
pushf
xlat
xchg
xlat
or
test
mov
mov
aaa
add
add
addr16
mov
flds
ljmp
fiaddl
fisubl
std
fidivl
dec
fimull
pop
fisubl
fidivrl
ficompl
ficompl
ficoml
fcmove
fcmovnb
and
aam
mov
mov
jo
inc
or
jg
fisttpl
fdiv
fmul
fadd
fdivl
and
das
fsubl
frstor
jmp
fisttpll
fisttpll
fisttpll
fldl
fucomp
fsubrp
fimuls
fidivrs
ljmp
jge
jae
dec
fisttps
pop
fcomip
rolb
rcrb
sarb
rcrb
subl
cli
ror
sarl
jg
jp
inc
shrl
shll
shr
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
jg
adc
aam
aad
aad
aad
aad
aad
xlat
scas
xlat
mov
push
ljmp
xlat
push
jns
repnz
cmp
add
adc
add
add
pop
pushl
int3
out
fsin
fpatan
sbb
int
ret
fldcw
fsts
fldenv
aas
fnstenv
push
fxch
fcmovb
fcmovu
fcmovbe
fisubrl
fisubrl
jg
gs
pop
ficompl
iret
je
fiaddl
aam
clc
jmp
jb
lret
fildll
mov
xor
repnz
xlat
fst
xlat
mov
adc
pop
test
loopne
cmp
mov
clc
addl
lea
inc
add
decl
pop
dec
mov
add
inc
add
ljmp
push
sahf
flds
fldenv
jle
cmpsl
das
das
ljmp
dec
xchg
inc
fyl2x
ss
fimull
fisubl
ljmp
data16
and
and
fisubl
pop
jg
in
outsl
repz
mov
aaa
ret
fistl
mov
dec
fildl
pop
fistl
sub
xlat
cmp
xor
or
dec
insl
fcmovnu
add
xchg
sbb
fucomi
fsub
fdivr
fdiv
fdivr
mov
fsubrl
faddl
stos
daa
fdivl
or
fst
and
jmp
fst
shrl
rcll
rcl
shrb
shl
aam
aam
aam
lock
dec
aad
aad
aad
aad
aad
aad
out
daa
mov
in
sbb
or
imul
cmp
sbb
daa
adc
call
insl
xlat
add
pop
xlat
add
rclb
js
in
test
cmp
and
cli
movsb
push
mov
push
ret
fnstsw
pop
jns
inc
cmpsb
mov
mov
call
mov
jl
pop
fnstcw
fildl
ud0
pop
fsubl
fidivrl
sti
fldt
mov
fcoml
sbb
fstl
faddp
fiadds
fiadds
fdivp
fbld
mov
fistps
push
shlb
adc
gs
inc
rclb
sub
adc
push
jmp
rcrl
push
rcll
add
pop
shr
sar
rclb
sar
insb
jo
ljmp
add
test
push
push
incb
xor
ss
fcomps
adc
push
aam
out
cmp
mov
outsl
aad
aad
aad
aad
aad
fcmovbe
lods
mov
mov
popf
xchg
jns
out
in
jecxz
pop
cltd
sbb
xlat
lods
xlat
rcl
aam
test
mov
jecxz
and
adc
mov
mov
mov
decl
cld
inc
jle
jg
insb
xlat
pusha
xlat
xlat
js
mov
xlat
je
dec
xlat
dec
leave
call
pop
cwtl
xlat
inc
xlat
out
push
xlat
sub
or
mov
incl
inc
mov
daa
mov
add
push
mov
xor
lret
mov
enter
push
or
iret
lock
push
sar
out
xchg
add
negl
nop
adc
mov
inc
das
sub
cmp
stos
inc
jbe
arpl
call
cld
jg
cli
adc
scas
test
ficomps
xor
cmpsb
sub
push
std
lods
incb
aaa
jo
aam
xlat
xlat
loope
ret
sar
lock
loope
fs
mov
xchg
push
push
mov
pushl
xchg
lahf
mov
imul
ret
in
sbbl
push
jmp
call
mov
adc
xchg
cli
add
bound
pop
decl
cld
mov
sbb
iret
loopne
cwtl
add
pushl
or
orl
mov
ss
incl
lcall
push
sahf
sti
jo
jp
xlat
int
xor
pop
jb
bnd
sub
adc
fistl
push
push
repnz
jbe
in
jg
pushf
mov
clc
fimuls
sti
fwait
add
cwtl
adc
mov
aad
lahf
sub
sbb
adc
outsl
inc
out
mov
mov
test
std
iret
fsts
sbb
mov
mov
xchg
lcall
mov
mov
mov
mov
sar
mov
mov
mov
xchg
xchg
pushf
add
movsb
lock
outsb
pushl
mov
mov
mov
mov
and
pop
loopne
pop
push
nop
call
rcr
inc
mov
ror
int
icebp
dec
daa
call
clc
mov
dec
stos
mov
jp
mov
ljmp
mov
std
lret
mov
outsl
daa
into
pop
mov
xchg
mov
int3
mov
stos
lods
lods
mov
adc
sahf
stos
mov
mov
mov
clc
mov
popf
dec
aad
popf
mov
mov
mov
ljmp
xchg
mov
rolb
bound
call
mov
mov
and
jmp
mov
xchg
mov
mov
mov
mov
outsb
inc
push
pop
mov
mov
clc
cli
in
xchg
lods
pop
mov
xchg
outsb
fwait
aad
cmp
stc
fsubrs
dec
pop
stos
dec
mov
sarb
in
xchg
jmp
subb
cwtl
insb
or
jg
lock
mov
mov
loop
cmpsb
scas
int
icebp
and
popf
mov
stos
stc
je
push
shlb
popa
insb
push
xchg
inc
shlb
sbb
lcall
hlt
cs
rorl
xchg
mov
fsubr
mov
cli
incl
mov
ret
xlat
fwait
jnp
push
xchg
mov
lods
adc
pushl
jecxz
jns
mov
jne
repz
iret
and
subl
scas
dec
gs
clc
push
mov
sbb
sti
outsb
jg
mov
rcll
mov
cli
add
in
rorb
jp
push
lock
cmp
hlt
lcall
leave
add
mov
lret
jmp
in
fs
sbb
ss
add
pop
mov
ret
dec
sti
into
pop
fildll
ja
xor
in
mov
push
fs
inc
or
out
es
mov
push
push
lods
mov
cld
call
insb
adcb
shrl
xor
dec
sbb
decl
adc
enter
ljmp
arpl
test
decl
enter
add
shrb
sub
xchg
pushf
popf
push
pusha
inc
push
clc
xor
sub
mov
add
mov
sarl
lcall
cli
pushl
sub
jne
mov
or
cwtl
push
push
jg
inc
add
ror
fldt
mov
sbb
fstpt
xchg
enter
mov
fs
adc
add
and
incb
inc
out
cld
add
pop
fwait
daa
mov
push
add
jno
loop
rorl
push
fildll
lods
filds
negb
push
pop
ss
stos
xor
mov
fdivs
lods
rorl
stos
cmp
adc
jg
sbb
sti
inc
fnstsw
sarb
push
sbb
mov
or
cltd
sbb
aaa
cwtl
mov
pop
negb
add
lea
mov
dec
dec
push
int3
negl
and
push
ficompl
ljmp
das
xor
pop
sbb
push
fistps
fcompl
fsubrl
xchg
outsl
pop
mov
xchg
popa
loopne
push
sub
xor
xchg
clc
aaa
cli
fldcw
sub
mov
push
fists
std
jmp
sbb
enter
and
pop
xor
fldcw
fnstsw
enter
fdivrs
add
add
cs
enter
in
sub
pop
xchg
fisubrs
stos
push
mov
shlb
dec
lock
add
mov
lods
add
push
and
daa
or
hlt
mov
pop
fists
pop
sbbb
xor
daa
in
push
or
call
arpl
mov
or
sbb
daa
or
lods
ffree
add
lock
sbbb
in
decl
mov
and
add
test
add
test
sbb
dec
sbb
fists
incl
lret
sub
mov
test
loopne
mov
cmp
inc
roll
add
add
loopne
add
mov
lds
addl
incl
push
ja
add
add
inc
sbb
pop
adc
add
add
inc
xor
cwtl
jp
rol
adc
lahf
cltd
popf
add
or
xchg
enter
mov
and
fsts
add
add
mov
jbe
test
lds
jp
add
add
add
call
roll
and
add
ret
inc
sarb
add
xchg
popf
mov
negb
jne
mov
fldt
std
mov
mov
in
pop
add
testb
stos
pop
les
add
mov
xchg
mov
stos
xor
outsb
push
lahf
mov
fsubs
test
sub
add
aas
and
test
jo
add
movb
pop
and
sbb
add
dec
subb
push
mov
lar
js
imul
and
incl
add
cltd
xor
mov
or
and
mov
setne
push
cmc
clc
mulb
and
mov
aas
add
pushl
add
add
sub
jno
sbbl
shrb
pop
call
cmp
mov
push
hlt
dec
push
mov
or
dec
out
icebp
mov
dec
in
xchg
mov
fdivrp
fistps
mov
cmc
ja
mov
mov
fdivrs
decl
mov
inc
and
push
xchg
imul
push
aas
sub
pop
add
les
lahf
cmp
leave
jmp
xchg
stos
add
mov
add
fs
add
nop
inc
add
add
xchg
add
cmp
push
nop
fcompl
jae
mov
push
scas
dec
loop
mov
mov
scas
mov
je
xorl
push
mov
push
fucomp
sahf
xchg
lea
sbb
push
dec
mov
mov
icebp
push
orb
sub
cmp
dec
loop
cmp
push
cld
andnps
ljmp
push
mov
inc
ja
pop
lcall
inc
xchg
adc
jae
clc
push
or
cmp
jl
or
jne
push
outsl
cmp
fstpt
in
adc
cs
pushl
outsb
push
imul
jne
or
pop
cmp
shrl
int
test
pop
push
jmp
and
in
jg
fdivs
add
push
aaa
imul
xchg
decl
lcall
shrb
daa
jg
xor
cmp
cmp
pop
je
in
aam
mov
and
jne
sub
cmp
aad
add
loop
and
loopne
fisttpl
loop
in
fcmovne
jo
add
nop
dec
xor
sub
dec
and
mov
daa
aad
sbb
idivb
dec
shrb
mov
dec
push
daa
cmp
fdivs
xor
fdivl
pop
fmuls
movsb
outsl
outsl
int
aas
cmp
inc
push
xor
xchg
inc
imulb
ljmp
cld
ss
les
inc
pop
xor
jne
pop
fcomps
jge
dec
pop
movsl
icebp
popf
aad
fildl
sub
hlt
lahf
inc
mov
jmp
pushl
cmp
inc
and
into
fldenv
std
lret
push
imulb
imul
out
pop
scas
dec
xor
in
fwait
scas
dec
xor
mov
sub
or
sahf
mov
push
idivb
pushl
mov
popf
data16
iret
pop
mov
cmc
pop
ret
mov
in
add
in
test
sub
inc
push
jae
ja
pop
inc
mov
flds
xchg
sti
fstpt
push
test
push
adc
fstps
mov
push
cld
fnstcw
jg
fstpl
and
sbb
xchg
jl
popa
scas
or
jl
sahf
mov
jg
ficoml
aad
repnz
aas
out
cmp
addr16
jmp
fnclex
cmp
roll
mov
xchg
out
xor
push
insb
push
adc
mov
insb
je
fsts
dec
mov
fnsave
fldt
fdivrs
fucomi
push
adc
mov
pusha
cwtl
mov
pop
or
push
inc
fisttpl
lcall
fldt
cld
or
sub
jo
push
and
stc
out
mul
and
cmp
jo
or
cmp
push
push
push
push
decl
imul
and
pop
movl
lret
movsb
mov
scas
lret
mov
push
adc
int
sub
adc
call
mov
mov
inc
sti
hlt
lcall
adc
pop
push
jns
mov
mov
mov
push
frndint
mov
pop
pop
cmp
add
xchg
in
loopne
xchg
pop
mov
fldt
mov
mov
nop
pusha
push
dec
dec
loope
xchg
dec
jg
sti
cmp
idiv
mov
mov
pop
sbb
jns
jno
ljmp
lock
pop
jge
aad
sbb
adc
xchg
ss
cwtl
cmp
inc
fwait
inc
xchg
sbb
imulb
mov
push
lahf
cmp
jae
std
xchg
incb
popa
imul
imul
push
popl
cli
fbstp
int
ja
push
or
repz
fstl
std
jmp
sahf
xchg
xchg
pop
test
mov
mov
inc
pop
or
fcmovnbe
stos
es
lock
add
aaa
inc
aad
mov
mov
bound
popf
push
jns
cwtl
scas
or
sbb
inc
jae
cmp
out
ljmp
insl
incl
mov
sbb
add
dec
mulb
test
dec
jecxz
jns
outsl
pop
ljmp
xchg
out
push
xchg
xchg
jecxz
push
xchg
push
insl
scas
xchg
dec
outsl
ljmp
aaa
mov
xchg
aad
sub
ljmp
jmp
add
adc
in
ss
mov
mov
out
test
mov
movsl
dec
dec
faddl
pop
mov
rcrb
aaa
loop
jg
gs
push
imul
fistpl
inc
inc
wbinvd
jp
fcompl
lods
pop
int
in
push
scas
jecxz
push
mov
mov
jle
mov
adc
jo
nop
xchg
jae
fisttpl
jo
adc
fwait
shlb
dec
jb
inc
xor
gs
jno
cmp
ljmp
std
ja
inc
outsl
dec
pop
pop
add
inc
push
xor
aaa
add
push
inc
imul
dec
incl
push
push
arpl
jns
push
jbe
dec
jb
push
js
ss
dec
add
inc
xor
fs
inc
filds
push
inc
jne
push
jp
xor
push
add
inc
je
outsb
jo
cmp
add
mov
dec
push
bound
pop
jae
xor
add
push
push
inc
jns
jne
jno
or
jbe
xor
mov
jnp
xor
inc
pop
push
pop
push
xor
jbe
xor
ljmp
dec
xor
inc
add
aaa
push
bound
insl
insb
inc
push
dec
sub
jnp
fistpll
bound
ljmp
je
xor
xor
mov
sub
bound
xor
push
ss
inc
insl
insl
ss
jp
push
dec
pop
push
mov
push
push
push
push
push
adc
push
inc
pop
inc
ja
xor
inc
imul
push
jbe
bound
fistl
je
pop
mov
dec
dec
add
dec
push
xor
dec
in
in
fs
outsl
outsb
push
push
jp
add
fists
outsb
mov
outsl
xor
sub
inc
push
insl
mov
lcall
data16
dec
pop
add
xor
jne
outsl
gs
push
mov
inc
inc
push
dec
je
dec
push
jo
push
jae
inc
ret
pop
and
arpl
arpl
addr16
push
push
push
push
decl
jns
pop
jae
data16
dec
push
dec
gs
pop
pop
arpl
pop
arpl
dec
sub
jo
xor
add
insl
pop
inc
dec
xor
inc
sti
test
inc
dec
out
outsl
pop
imul
dec
fcomps
mov
insl
xchg
inc
mov
inc
add
mov
pop
inc
je
aaa
outsb
outsl
dec
push
dec
arpl
sub
inc
jno
push
add
outsl
fildl
pop
push
mov
jbe
push
bound
lock
or
cmp
insl
jb
push
jp
pop
loope
jb
add
push
in
div
mov
push
jae
dec
inc
je
dec
pop
jne
js
stos
pop
jle
loope
xor
push
add
ja
jns
aaa
popa
push
jp
xor
dec
data16
movsb
pop
fs
push
dec
push
xchg
dec
pushl
xor
insl
cwtl
dec
cmp
js
outsl
popa
outsb
add
addr16
push
xor
cmp
outsl
xor
popa
js
insl
stos
pop
xor
jp
jne
pop
or
jne
or
jne
pop
jb
fstl
outsb
xchg
pop
bound
js
popa
xor
dec
push
add
loope
jne
dec
dec
ss
push
push
jge
bound
dec
dec
sub
jle
push
inc
dec
bound
cltd
outsb
jo
sti
addr16
xor
push
aaa
push
aam
push
pop
xor
pop
js
push
addr16
inc
outsl
inc
cmp
push
je
inc
jb
mov
pushf
xor
imul
mov
or
push
push
incl
in
aaa
jecxz
fisttps
hlt
push
popa
insl
or
jne
xor
mov
fmulp
jb
aaa
ret
js
pop
dec
xor
popa
sti
sbb
jne
mov
ja
cmp
aas
push
pop
jg
lds
inc
in
pop
cmp
push
arpl
dec
inc
inc
das
mov
cmp
xor
sub
xor
inc
pop
call
outsb
insb
inc
arpl
ss
outsb
push
jbe
xor
push
data16
push
in
test
xchg
xor
dec
jp
imul
mov
mov
push
jb
addr16
dec
imul
inc
jge
dec
fildll
push
sbb
outsl
fdivrs
inc
aaa
pop
dec
addr16
aaa
insb
addr16
inc
jbe
data16
sbb
jg
bound
insb
xor
dec
push
jne,pn
insb
inc
lea
push
je
in
mov
push
add
push
push
dec
add
push
and
push
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
stos
and
add
pusha
mov
int
push
jl
roll
add
push
gs
fs
xchg
call
outsl
arpl
jae
gs
outsl
jb
add
dec
outsl
dec
imul
sti
mov
or
jne
insb
and
je
in
filds
sti
inc
js
add
inc
imul
inc
gs
je
inc
jo
outsb
outsw
push
cmp
jle
xor
imul
jb
idivb
inc
push
push
popa
jae
dec
jne
imull
mov
js
jbe
fs
mov
in
in
dec
jo
outsb
push
push
popa
jo
mov
jae
xchg
or
outsb
jae
popa
inc
push
xchg
arpl
or
je
insl
push
nop
dec
popa
inc
jb
out
int
dec
jb
pop
gs
jge
jb
pop
and
lret
push
or
jge
sbb
out
jge
pusha
pop
adc
cmpsb
cvtdq2ps
std
inc
insb
imul
ja
pop
jge
sti
mov
jae
movsb
inc
imul
inc
imul
pop
insl
push
push
and
pop
mov
push
dec
push
outsb
xor
jnp
jae
fs
xor
test
fstps
imul
or
test
or
fdivs
inc
push
bnd
je
dec
jb
mov
xchg
mov
arpl
mov
insb
sbb
insb
popa
addr16
add
loope
or
inc
xchg
insb
into
dec
aaa
pop
outsb
mov
inc
add
arpl
pop
call
pop
cmp
jb
bound
jno
mov
sbb
insl
xor
push
pop
sbb
aaa
pushf
cwtl
push
shrl
inc
inc
or
imul
fcoms
in
lods
je
pop
jns
adc
pop
scas
popa
push
push
jnp
pop
movsl
or
js
sbb
ss
mov
xchg
sub
sahf
hlt
daa
lods
insb
push
jae
xchg
xchg
daa
or
dec
add
add
das
mov
lret
incl
popl
add
xor
rolb
add
fcoms
and
add
fcoml
add
push
pop
push
mov
xor
pop
inc
insb
inc
xchg
outsb
cmp
adc
pop
lock
mov
jne
inc
cs
je
nop
nop
fwait
mov
or
xor
mov
aam
daa
orl
add
mov
and
cwtl
or
orl
cmp
mov
out
icebp
popa
inc
add
daa
jb
pop
add
add
pop
leave
scas
imul
imul
adc
jo
jae
arpl
mov
daa
clc
out
mov
sbb
out
add
hlt
add
add
add
add
and
incl
add
add
add
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
