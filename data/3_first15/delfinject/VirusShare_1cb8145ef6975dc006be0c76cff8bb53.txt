jmp
jmp
sub
sbb
sbb
add
cmp
sbb
sbb
adc
and
sbb
sbb
adc
add
sbb
xor
xor
add
xor
and
leave
cmpsb
xor
fsubr
sbb
mov
inc
mov
aam
add
add
outsl
je
sub
xor
outsb
aaa
pop
jnp
gs
jp
outsl
outsb
add
sbb
in
and
adc
push
jo
das
pop
sbb
rclb
inc
xor
repz
popa
adc
or
or
fisttpl
dec
dec
shrb
or
or
jmp
mov
xlat
js
jnp
adcb
fiadds
rol
hlt
mov
adc
mov
inc
add
and
jae
adc
xchg
decl
xchg
jae
dec
push
orb
jne
or
cmpl
or
push
lds
jns
add
mov
xor
pushl
lret
lret
test
pop
pop
push
xor
leave
xchg
cld
ljmp
inc
cltd
sub
add
and
in
sbb
jg
mov
lock
hlt
dec
scas
lods
arpl
xor
push
xor
add
stc
lcall
lret
jne
inc
fwait
sub
mov
xchg
add
in
push
mov
adc
sub
call
data16
and
add
decl
mov
mov
mov
dec
pushf
inc
push
fcomp
in
les
xchg
and
scas
call
add
inc
repnz
jns
popf
mov
fstp
enter
pop
lods
lcall
cmp
pushf
cmpsl
flds
orl
repnz
pop
xchg
add
int3
add
or
mov
incl
pop
inc
dec
inc
xor
cs
pop
inc
jecxz
popf
std
fmull
add
cmp
aaa
push
dec
lcall
add
pop
mov
push
or
inc
imul
add
inc
or
or
jne
jne
pop
add
xor
dec
aaa
iret
and
add
sub
sub
nop
inc
mov
daa
cmp
cmp
push
sbb
push
daa
adc
cmp
or
shr
add
dec
jl
inc
push
inc
lcall
pop
stc
xchg
jae
and
daa
pusha
ret
jns
cmpsb
loopne
pop
sti
sbb
andl
out
add
sbb
test
lods
enter
pop
aam
adc
push
cld
hlt
sbb
nop
mov
inc
cmp
mov
lods
push
or
movsb
mov
or
xchg
and
add
in
leave
xor
cwtl
sbb
mov
sti
add
or
enter
cmp
insb
jl
mov
push
aas
mov
xchg
lret
add
sub
aam
add
daa
pop
xlat
jne
je
inc
pop
enter
aam
push
jb
xor
push
pop
add
pop
or
dec
shll
dec
loopne
mov
mov
pop
add
out
mov
or
cmp
pop
inc
dec
adc
insl
mov
inc
cwtl
jo
lret
lods
imul
inc
pusha
jne
jbe
js
mov
sarb
lock
xor
in
andb
test
dec
mov
inc
xchg
sub
hlt
daa
pop
enter
push
sub
pop
fdivl
fdivs
shlb
in
and
and
pop
pop
sub
hlt
xor
and
fs
cmpl
sbb
inc
xor
shll
push
add
xchg
cmpsl
imul
pop
ss
das
sbb
testl
sahf
add
enter
add
adc
sub
daa
pop
in
sbb
enter
sub
scas
push
sub
aaa
repnz
pop
leave
fdivs
add
jo
fwait
mov
test
or
imul
and
add
adc
mov
fwait
cmp
loopne
sbb
sbb
dec
rorl
hlt
sbb
lock
fwait
mov
in
in
pop
jo
or
pop
push
jl
xlat
jne
push
add
addb
outsl
in
add
xor
push
mov
rcrl
sub
sbb
sub
add
dec
push
mov
pcmpeqb
pop
nop
inc
sbb
mov
add
and
adc
cmovs
leave
xchg
add
and
dec
loopne
daa
push
and
pusha
aas
hlt
jae
inc
mov
push
inc
xchg
pop
push
ss
xor
nop
push
adc
mov
xchg
xchg
pop
repnz
add
push
lock
out
push
test
dec
and
dec
xchg
arpl
adc
pushf
sbb
mov
nop
and
lahf
andb
pusha
xor
xlat
xor
cmp
pop
xor
leave
add
and
add
inc
and
fwait
loopne
add
adc
or
je
cmpsl
fsts
dec
inc
pop
xchg
daa
pop
mov
push
push
cmp
push
and
and
pop
or
pop
insb
dec
fwait
or
and
adc
mov
pop
mov
jne
or
push
test
mov
in
add
or
and
xchg
pop
pop
fwait
mov
mov
push
in
cmp
jb
adc
js
and
add
fdivrl
and
leave
xchg
daa
fwait
dec
dec
and
cmp
mov
es
and
mov
lods
dec
pop
add
fadd
jecxz
ss
lods
and
or
sti
cs
sbb
cmp
movsb
and
push
and
cmp
daa
jb
sahf
faddp
fwait
add
push
ja
daa
add
aam
xor
lock
ret
addr16
push
fadds
adc
clc
dec
pop
ja
cmp
sub
setae
or
pop
nop
jne
jo
pop
int3
inc
gs
gs
hlt
aas
sbb
xchg
and
in
xchg
inc
xor
push
sub
push
daa
je
sbb
sub
in
xchg
dec
or
unpcklps
adc
dec
xchg
push
ret
add
push
jp
cmp
pop
test
inc
pop
and
dec
adc
jbe
popf
inc
dec
mov
and
fs
dec
mov
nop
add
dec
pop
jbe
jns
inc
inc
sbb
daa
pop
and
add
xor
movswl
jo
lahf
cmp
sub
sub
es
packsswb
mov
sbb
push
fs
out
mov
and
mov
add
dec
jmp
add
sbb
subb
imul
mov
sub
xor
fstpt
mov
out
andb
pop
add
mov
cmp
inc
shlb
mov
cmp
out
nop
cs
jmp
or
repnz
das
les
dec
enter
int3
dec
pushf
sbb
sbb
daa
aam
orl
dec
add
pusha
or
mov
sbb
inc
push
or
pop
fs
dec
pop
pushf
xor
out
or
pop
fsubrl
cs
dec
jno
sub
dec
xor
mov
add
xchg
in
inc
xor
call
js
cmovl
lcall
sbb
cmp
pop
sub
jl
adc
sbb
sbb
pusha
repz
nop
loop
les
inc
pop
adc
pop
xor
add
pusha
jno
mov
push
xor
dec
rolb
gs
push
xor
cmp
add
daa
lods
xor
push
xor
popf
dec
les
out
and
xorb
inc
popa
pop
nop
xlat
pushf
out
push
fcoms
les
fwait
dec
scas
or
adc
pop
cmp
pop
adc
pop
int3
and
orb
sub
je
daa
jns
mov
insl
add
lods
movsb
sysexit
test
daa
imul
push
in
ss
sbb
sub
pop
sbb
pushf
inc
adc
in
mov
xchg
mov
xor
shl
outsl
fcoml
cmp
jns
dec
aaa
in
xchg
push
xchg
cmp
jl
leave
lock
inc
ja
add
xchg
xchg
aaa
clc
inc
aaa
pop
xor
inc
cmp
push
cmpsl
dec
gs
or
leave
xchg
add
dec
loopne
adc
add
orl
rcrb
jnp
mov
inc
popa
inc
gs
cld
fwait
or
pop
dec
lret
push
je
aas
add
inc
xchg
mov
push
push
and
push
fs
dec
add
adc
inc
cmp
add
sahf
lds
repz
mulps
dec
or
loopne
js
push
xchg
push
mov
pop
xor
pop
lods
daa
sbb
mov
dec
mov
add
and
loopne
sbb
xchg
enter
pop
arpl
mov
add
add
add
repnz
in
cmp
out
xchg
mov
sub
push
add
repnz
cmp
jmp
add
ds
xor
sldt
enter
sub
mov
inc
and
sub
mov
dec
sbb
aas
dec
or
out
mov
pop
pusha
mov
push
or
cmp
enter
loop
lret
cld
fbstp
pop
and
insb
add
sbb
add
cwtl
nop
mov
or
pop
mov
lcall
pop
mov
pop
and
dec
mov
or
mov
xchg
xchg
xchg
jne
mov
xchg
in
test
cs
pop
xlat
daa
lcall
mov
pop
pop
movsb
mov
test
scas
imul
stos
mov
sbb
mov
mov
inc
mov
scas
imul
cmpl
outsb
pop
xlat
movsb
ret
lds
mov
jne
xlat
pop
int3
enter
int
iret
pop
cs
xlat
jmp
paddq
insb
fcomp
mov
faddl
fiadds
xlat
jne
xlat
jecxz
in
out
out
ljmp
das
in
jg
mov
sti
hlt
or
pop
jae
lcall
sti
stc
out
jb
ss
fdivr
add
add
jl
pop
lcall
fmuls
pop
mov
mov
outsb
mov
dec
push
pop
xor
add
adc
jb
cs
or
mov
pusha
pop
pop
cs
lret
dec
sbb
sbb
je
mov
push
dec
das
cld
and
daa
lret
in
mov
cmp
sub
mov
xor
xor
mov
or
inc
cmp
cmp
jb
outsb
int
cmp
or
jmp
inc
addb
add
pop
mov
dec
xchg
iret
call
jae
mov
xchg
push
push
aas
movsb
push
push
mov
pop
jg
pop
sub
pop
scas
jmp
scas
pusha
sbb
arpl
mov
xor
imul
scas
jb
sub
scas
jmp
je
pop
jbe
js
jp
insb
mov
jl
fdivrl
jg
daa
test
mov
roll
mov
imul
int
mov
and
popl
and
pop
xchg
lret
enter
or
out
mov
fcomps
push
movsl
jae
mov
xchg
lret
in
mov
stos
cmp
sub
xchg
mov
mov
mov
cmp
xor
mov
pop
hlt
mov
mov
dec
mov
ret
nop
pop
xlat
xor
leave
sub
dec
daa
into
pop
jae
jne
rorb
aam
mov
dec
aad
xlat
fidivl
mov
jmp
fdivl
movsb
loop
in
mov
jmp
shrl
test
repnz
add
clc
idivl
xlat
pop
loopne,pn
inc
sti
cld
dec
je
jbe
add
add
adc
add
lock
pop
or
add
or
cs
lret
in
adc
pushf
adc
pop
jae
fists
adc
sbb
sbb
sbb
sbb
xor
and
sbb
adc
sub
cmp
outsb
and
xor
int3
xor
mov
jne
ss
cwtl
cmp
inc
lahf
xchg
jmp
pop
jae
ds
sub
inc
xor
jae
mov
adc
push
dec
add
pop
dec
sqrtps
mov
mov
jb
push
in
pop
pop
fwait
sub
pusha
outsb
pop
jae
pop
or
fs
gs
andb
pop
mov
pop
sbb
out
mov
enter
inc
jne
fdivrl
test
cmovo
mov
mov
andl
rolb
jmp
lret
sub
sbb
lods
mov
lea
mov
lcall
call
xchg
lcall
xor
xor
mov
pop
cmpsb
test
mov
dec
stos
xchg
movsb
lods
scas
ja
mov
mov
pop
xlat
mov
mov
mov
aaa
fs
out
mov
pushf
rcll
lcall
lds
jnp
pop
xlat
fcompl
into
lret
push
add
rcrb
test
sbb
stos
nop
aad
popl
mov
fmul
scas
lods
mov
insb
loopne
and
in
inc
jae
lcall
pop
in
push
mov
xor
push
pop
jmp
repnz
hlt
pop
jae
mov
dec
mov
cld
dec
inc
mov
je
add
cmpsb
jmp
movsb
add
push
mov
pushl
jmp
das
dec
aaa
push
aas
adc
add
sub
insb
add
xchg
fldt
cmpsb
mov
call
mov
fwait
cwtl
mov
mov
je
loopne
jecxz
jg
shll
xlat
pop
or
inc
or
lahf
and
lock
xlat
xor
adc
pop
sub
or
pop
xlat
fcoms
push
adc
dec
xor
add
xor
scas
orb
dec
pop
je
add
xor
mov
int3
push
cs
adc
sbb
lods
and
lea
sbb
sub
sub
mov
hlt
sbb
shrb
ss
and
outsb
das
push
lahf
mov
inc
xlat
push
outsl
inc
mov
outsb
aaa
sbb
cld
cmp
inc
pop
xlat
insb
dec
imull
adc
rcr
call
sbb
pop
xlat
xor
pushf
aaa
sbbb
mov
cmc
imul
mov
popa
or
pop
repnz
es
inc
sbb
add
fmull
shlb
mov
mov
imul
mov
sbb
fldenv
popa
and
sub
nop
dec
pop
ss
in
adc
or
mov
in
or
leave
push
je
pop
and
popa
xchg
push
jbe
pushf
cmpsl
push
sbb
xchg
sbb
test
and
inc
mov
pop
shlb
fnstsw
ja
xlat
pcmpgtw
je
rol
sub
mov
icebp
std
ret
or
out
ljmp
inc
adc
jnp
add
out
push
dec
sub
shll
add
addl
das
push
push
leave
and
test
jb
push
mov
sub
lcall
adc
pop
enter
cwtl
mov
les
movsb
das
add
pop
shlb
xor
lods
das
and
push
and
pop
enter
and
test
sbb
sbb
nop
addr16
ss
sbb
je
jns
cmpsb
mov
adcb
dec
sahf
sbb
aas
movsb
push
shrb
mov
push
jnp
sub
rcr
dec
out
in
or
lahf
jae
shll
adc
sbb
sub
xor
xorb
push
popa
insl
insl
outsl
outsb
imul
jae
outsb
gs
fsubrp
mov
bound
ja
je
inc
bound
jae
ja
ljmp
addr16
outsl
insl
popa
outsb
add
jns
inc
outsl
insb
pop
test
imul
push
daa
bound
sub
inc
insb
adc
fistps
xor
dec
insl
jo
jns
sub
add
inc
inc
cmpsb
aas
cltd
scas
fcmovnb
add
dec
and
lret
cmp
in
rolb
mov
adc
lods
cs
cmp
and
and
push
outsl
dec
mov
in
or
in
sbb
xor
or
stos
in
rcll
pop
mov
cmp
push
add
xor
inc
fistpll
jb
insl
and
mov
and
js
sub
push
inc
loopne
mov
push
inc
dec
inc
inc
push
sub
push
inc
ss
dec
scas
popf
test
fildl
push
or
mov
leave
push
xchg
push
ja
pop
dec
insb
shld
pop
inc
outsl
jbe
outsl
cmp
dec
pop
outsb
je
arpl
repnz
mov
inc
jb
ja
dec
dec
and
lcall
outsb
xor
mov
ret
fadd
mov
fildl
fistpl
jae
xchg
pop
imul
lahf
pop
pop
dec
outsl
xor
sbb
das
add
pop
pop
dec
stos
mov
fucomi
inc
cmp
dec
aas
dec
dec
incl
incl
imul
sarl
rsm
cmpsl
xlat
dec
nop
push
mov
inc
mov
aam
gs
jo
cmp
outsb
outsb
outsl
or
sti
or
je
movsb
popa
jb
repz
xor
bound
imul
or
inc
inc
inc
dec
dec
or
inc
sti
sbb
iret
arpl
mov
xor
xchg
sahf
push
pop
inc
mov
adcb
xchg
push
jmp
lret
sub
cmp
ds
incl
inc
mov
gs
inc
imul
cs
imul
jge
test
fwait
jns
jae
xchg
ja
ljmp
mov
ljmp
xlat
sarl
xchg
and
flds
fs
incl
xchg
mov
lahf
and
cld
ljmp
pop
cmc
repnz
data16
test
outsl
outsl
imul
sbb
outsl
fstp
push
clc
inc
jne
jns
or
out
xor
add
pop
test
pop
mov
pop
inc
shr
cs
mov
cmpsl
cli
je
aam
out
sbb
cmp
aas
and
fwait
mov
stos
ret
call
sar
outsb
lcall
xlat
push
and
mov
int3
sbb
lea
inc
mov
jb
jae
inc
mov
xchg
pop
cmp
outsl
mov
fwait
iret
out
xchg
incl
scas
push
test
push
in
orl
stos
mov
insl
inc
ja
and
in
pop
jns
and
das
fstpl
outsb
jge
lods
dec
push
jae
mov
fildl
insb
cmp
int
shll
jne
mov
insl
aas
push
xor
int
sub
mov
push
std
pushl
shrb
mov
rorl
lret
xor
stos
enter
nop
pop
mov
out
xchg
inc
mov
cmp
popa
cwtl
dec
aad
ds
iret
jno
sbb
call
ja
dec
cwtl
xor
in
or
inc
and
mov
stos
mov
and
add
lcall
xchg
push
cmp
sub
mov
dec
lahf
in
negb
call
insb
jge
bound
inc
jne
push
jb
add
cmpsb
es
stos
xchg
fwait
push
cmp
call
lcall
inc
aam
jo
jo
in
mov
cmpsb
mov
mov
bswap
fnstenv
jle
ret
dec
stc
decl
std
adc
aaa
push
sbb
insb
popf
mov
inc
xchg
loopne
ret
sbb
fstps
jbe
dec
pop
mov
imul
xchg
lods
dec
sub
jbe
mov
jne
xlat
dec
mov
enter
cld
loopne
sbb
pop
mov
cmp
dec
cmpl
mov
loopne
arpl
pop
insb
test
and
jl
decl
ljmp
push
leave
or
sbbb
jge
push
dec
push
loope
dec
ss
pop
xor
mov
lahf
out
push
push
dec
sbb
ficoml
in
data16
fmuls
cmp
sbb
jns
mov
xor
cmp
jo
rorl
add
adc
xlat
sbb
jne,pn
imul
mov
shll
push
or
lods
pop
fwait
mov
sub
and
jne
sbb
orl
sub
xchg
dec
cmpsb
jmp
push
push
cltd
add
add
popa
cli
loope
or
out
jb
xor
cs
xor
addr16
push
data16
xor
icebp
bound
dec
pusha
inc
shll
pop
fildl
add
mov
out
mov
ja
or
je
jmp
push
rorb
sub
imul
testb
outsl
arpl
inc
or
xchg
insb
dec
aaa
inc
cld
sbb
add
push
mov
in
inc
jb
jb
outsl
dec
pop
xor
sbbb
push
add
or
mov
and
push
mov
shll
push
outsl
inc
push
stos
dec
cli
ja
add
cmp
or
inc
arpl
or
jns
add
test
adc
inc
out
test
or
inc
inc
movsl
adc
or
or
dec
mull
pop
dec
pusha
aaa
pop
pop
and
sbb
and
jo
mov
xor
insl
add
das
daa
mov
nop
push
and
das
daa
movups
sbb
xor
sub
xor
jno
add
or
inc
xchg
push
pop
and
dec
pop
rolb
pop
pusha
enter
xor
add
pop
imul
sub
cmpsb
js
add
hlt
adc
mov
test
add
add
xchg
imul
dec
lret
inc
inc
jle
smsw
push
aad
arpl
push
jge
jb
xchg
pop
add
jecxz
int
lds
cmp
add
jmp
sbb
cmp
jne
arpl
cmp
inc
adc
pusha
test
and
xlat
cmp
rdtsc
add
pop
xor
cmp
frstor
fistps
inc
and
sti
data16
imul
inc
adc
xor
aaa
inc
xchg
xor
push
pop
outsl
xchg
jl
fadds
inc
adc
fisubs
add
cmp
aaa
sub
adc
leave
into
dec
inc
and
xor
addr16
daa
xor
jmp
lcall
pop
cmp
flds
psubusb
ss
adc
or
daa
cmp
jg
out
mov
add
aas
sbb
cmp
popa
sub
cmp
or
or
sbb
and
lret
into
add
adc
out
or
arpl
inc
scas
add
inc
add
or
sub
add
lea
cwtl
cmp
or
and
or
lea
xchg
push
outsl
and
add
inc
or
add
inc
comiss
aaa
pop
mov
das
cmovne
or
inc
and
jg
insb
test
add
push
lds
cmp
addb
add
inc
pop
arpl
dec
xor
mov
xor
iret
jne
inc
add
xor
add
dec
inc
and
cmp
fwait
or
xor
mov
and
xchg
jo
dec
rorb
mov
add
test
outsl
mov
daa
xor
add
pop
mov
inc
out
xor
or
inc
mov
fildll
add
fimuls
fs
aaa
sub
sbb
add
dec
mulb
pop
aaa
add
pusha
outsl
pusha
pop
mov
inc
and
cmp
or
dec
cwtl
inc
xchg
outsl
and
sbb
xorl
pop
inc
jg
inc
jbe
aaa
inc
inc
xor
sbb
aaa
sti
fidivrs
sbb
insb
fxch
fisubrs
add
mov
pop
aaa
in
or
aaa
and
es
push
sbb
mov
testb
ja
xorl
xor
dec
pop
ss
enter
pop
xor
cmp
notb
inc
cmpl
mov
adc
xchg
enter
push
iret
fs
idivb
gs
or
xchg
outsl
inc
push
xor
jg
xchg
int
sti
cmp
aaa
movlps
in
ja
and
pop
imulb
ja
xor
nop
xchg
xor
add
pop
pop
inc
idivb
jae
sub
mov
xor
adc
sbb
add
mov
mov
add
xchg
pop
add
test
inc
inc
inc
pop
negb
xor
lret
dec
push
pop
xchg
in
pop
and
pop
mov
jnp
in
inc
aaa
xor
dec
nop
jo
loopne
stos
inc
inc
pmaxub
mov
xchg
je
xor
pop
jnp
pop
add
lcall
pop
fs
push
fwait
and
dec
jl
push
xor
xor
jae
insb
and
xchg
xor
cmp
fs
xor
int
xchg
int
inc
jmp
or
xchg
inc
xor
inc
cmp
aaa
pop
xor
xor
sbb
dec
xchg
jns
add
inc
or
aaa
or
jne
ss
imull
ss
fidivs
inc
outsl
xchg
in
jge
inc
inc
ja
dec
and
fsts
dec
enter
mov
sbb
pop
and
lret
inc
fdivs
daa
cmp
nop
xchg
aas
inc
jnp
sbb
addr16
inc
mov
js
jg
packuswb
or
inc
in
or
pop
xor
inc
pop
adc
xor
das
dec
mov
pop
fldcw
mov
adc
push
and
aas
aaa
out
mov
aaa
and
cmp
setnp
scas
mov
insb
push
das
push
inc
gs
inc
enter
xor
gs
add
jecxz
daa
xchg
das
adc
xor
inc
mulb
add
pop
out
and
mov
outsb
adc
cmp
fdivrs
jnp
aaa
inc
and
pop
add
jecxz
xor
push
inc
xchg
jg
movsl
inc
push
in
aaa
inc
ss
int
nop
arpl
insb
outsl
or
cmp
pop
aaa
add
adc
and
repz
add
jecxz
jecxz
xchg
mov
cltd
pop
cmp
fstps
mov
or
cmp
out
lods
in
sub
outsw
push
mov
inc
add
fwait
sub
movsl
push
xchg
sbb
add
ret
rcll
outsl
shll
fnstenv
xor
cmp
push
mov
imul
or
mov
cwtl
mov
pop
inc
add
adc
les
aaa
pop
inc
into
adcb
and
imul
dec
sub
ss
pop
push
or
pop
lret
fidivs
pop
test
sbb
popl
xor
dec
mov
push
mov
or
pop
out
add
xchg
das
xor
daa
aad
and
xchg
js
sbb
mov
mov
pop
add
pop
cmp
inc
inc
xor
sub
pop
mov
flds
xor
xlat
add
pop
inc
jnp,pn
lahf
ss
inc
mov
inc
sbb
mov
jge
dec
and
das
cmp
jg
inc
pop
xchg
add
adcb
mov
xchg
dec
pop
add
repnz
fimuls
push
dec
arpl
adc
test
push
push
pop
adc
lret
cmp
inc
jg
dec
jg
mov
sub
pop
dec
push
in
fwait
adcl
cmp
mov
pop
inc
cmp
outsl
aaa
inc
add
mov
outsl
jecxz
pop
enter
popl
pop
sbbb
fwait
and
xor
inc
sub
and
out
xchg
adc
xor
pop
or
pusha
dec
xor
pop
adc
inc
lcall
lds
pop
fs
sub
lret
fidivs
pop
and
ret
cmpsl
xlat
push
lret
leavew
dec
or
fists
in
daa
xor
pop
xchg
xchg
inc
add
fwait
adc
inc
mull
or
pop
cmp
and
sysret
add
lret
cs
mov
sub
add
outsl
nop
int
mov
or
outsl
cmpl
or
iret
push
outsl
mov
out
lods
or
fwait
das
fwait
insb
or
sbb
pop
add
xchg
adc
sub
mov
cmpsl
inc
add
mov
mov
xor
nop
and
insb
inc
pop
xor
inc
aaa
sbb
pop
mov
inc
aaa
daa
mov
dec
negb
pop
dec
mov
push
fnstcw
xchg
or
bound
int
inc
inc
inc
popf
movsl
inc
clc
cmpsl
inc
dec
mov
pop
mov
push
enter
add
or
or
movsb
sbb
inc
nop
pop
ss
ss
mov
and
cmp
aam
gs
popl
out
xchg
je
xchg
jmp
cmp
jecxz
adcb
fcoms
or
cmp
cmp
xchg
idivl
jg
xchg
adc
ss
test
xchg
sbb
mov
push
inc
mov
outsl
inc
outsl
test
rcll
and
xchg
adc
das
and
xchg
pop
mov
push
dec
mov
cmpsl
insb
sbb
dec
inc
inc
pop
sub
aaa
add
test
ja
inc
add
int
pop
ja
or
xor
fwait
int
aas
inc
pop
sbb
leave
fisubs
add
pop
nop
cmp
divl
inc
jl
aaa
dec
inc
arpl
xor
xor
pop
addr16
fs
rdmsr
mov
add
pop
inc
pop
ss
fmuls
xlat
inc
inc
sbb
push
sbb
adc
mov
pop
mov
mov
data16
adc
pop
ss
rol
pop
aaa
pop
and
stos
nop
rclb
arpl
arpl
xor
enter
push
aaa
push
mov
xchg
push
pop
aaa
adc
mov
inc
pop
or
mov
lods
inc
jo
and
pop
das
das
jne
ror
ja
inc
lret
xchg
mov
or
adc
push
popf
add
push
or
adc
pop
popf
pusha
xchg
rolb
mov
inc
add
xor
das
inc
push
or
or
stos
dec
pusha
xchg
int
and
sti
xchg
int
xor
out
dec
xor
add
fs
xor
inc
or
fnstenv
mov
and
and
stos
xchg
push
xchg
bound
jnp
inc
xor
xor
dec
pop
mov
dec
xor
xor
pop
xor
shrb
sub
adc
enter
lahf
inc
push
int3
adc
inc
xchg
mov
mov
pop
push
mov
insb
das
cmp
outsl
cmp
flds
lret
mov
xor
xchg
cmp
or
xchg
and
inc
ss
popf
cmp
pop
pop
scas
in
inc
or
cmp
cmp
push
inc
dec
fildl
in
insb
pusha
das
pop
cmp
mov
cwtl
dec
inc
sti
repz
pop
and
aaa
fwait
cmpsl
adc
jmp
cmpsb
sub
aaa
daa
inc
mov
jnp
push
pop
pop
aaa
rclb
inc
xchg
lods
fldcw
push
pop
lret
fimuls
jb
arpl
cmp
int
addr16
cmp
pop
das
or
andl
out
mov
xchg
inc
lahf
dec
mov
pop
ja
loopne
jbe
xor
inc
incl
sbb
mov
xor
aaa
fwait
insb
sub
aaa
inc
and
jg
inc
fwait
and
cmp
add
jge
add
adc
aas
fwait
insb
fldenv
inc
mov
testb
fwait
adc
in
movhps
mov
sub
or
xor
notl
mov
push
xor
out
push
and
and
xor
cmp
pop
adc
test
pushf
push
testl
das
sub
push
mov
movsl
inc
mov
outsl
cmova
ss
ss
add
xor
test
stos
mov
or
inc
addr16
xchg
int
dec
ss
ja
dec
mov
stos
dec
and
sub
push
loope
gs
jmp
out
adc
and
xor
mov
cmp
rorl
fcomps
mov
pop
mov
inc
adc
and
fs
xchg
in
jae
icebp
dec
xorl
mov
imul
and
shrb
ss
dec
xor
pop
jns
fbstp
fldcw
mov
add
test
and
adc
popf
lret
mov
iret
or
cmp
sbb
es
sbb
idivl
xchg
outsl
arpl
ficoms
xor
ret
popa
adc
es
adc
xchg
lds
sbb
arpl
xor
xor
aas
pop
fsubrs
pop
cmp
and
xor
int
inc
test
xchg
popf
fwait
xor
xchg
or
dec
ss
sbb
mov
ss
stc
lahf
xor
inc
or
pop
test
lds
xor
in
dec
js
das
pop
xor
xchg
lcall
xor
js
add
or
sarl
xor
por
or
xchg
aad
aaa
or
lret
ljmp
sub
outsl
xchg
aad
call
or
cmp
movl
scas
mov
flds
outsl
aas
cmp
mov
pushf
xor
dec
mov
xor
xor
adc
ja
dec
or
push
scas
inc
inc
mov
or
or
or
and
inc
mov
adc
sub
inc
pushf
mov
pop
dec
cmp
mov
jae
xchg
movsb
pusha
xchg
add
aas
stc
push
push
sbb
jg
or
inc
pop
mov
xchg
pop
das
pop
inc
leave
cs
and
pusha
addr16
pop
inc
punpckhbw
pop
inc
cmp
imul
ds
add
shll
pop
jg
cmpsl
test
mov
sub
mov
imul
scas
ret
dec
jbe
arpl
mov
add
jmp
inc
mov
leave
push
cmp
xor
or
fmuls
jnp
pop
inc
fcomps
and
test
cmp
fcom
adc
ficoms
pop
inc
popf
fdivs
loopne
pusha
cltd
or
call
repnz
pusha
jns
xor
xor
daa
pop
xor
cmpl
fmuls
fstps
xchg
in
xor
xor
jns
std
fcoml
mov
mov
or
aaa
repz
xor
pop
jl
fbld
js
or
lahf
push
dec
dec
stos
fnstcw
xor
cmp
sbb
dec
mull
cmp
insl
ret
dec
inc
sbb
jns
ret
sub
inc
aas
and
sub
xchg
rolb
cmp
imul
inc
mov
sbb
xor
gs
in
inc
adc
add
xor
inc
dec
xor
xchg
aaa
inc
ss
jge
mov
inc
cmpsl
popa
xchg
sub
ret
or
xchg
stc
frstor
push
fnstenv
lahf
inc
inc
sbb
and
jmp
dec
lahf
mov
nop
add
push
into
gs
add
xor
nop
aaa
xor
arpl
jne
aaa
rorl
lret
jmp
inc
xchg
cwtl
and
or
dec
daa
lahf
inc
outsl
and
ret
mov
lret
cmpsl
jmp
xorl
popa
lahf
fdivs
xor
movd
dec
push
mov
sbb
inc
fsubs
mov
movsl
inc
jb
mov
fcomps
adc
xchg
and
mov
and
xor
lahf
lods
or
inc
add
mov
sub
int3
ljmp
xor
jg
pop
test
insb
push
dec
stos
add
mov
push
scas
movsl
hlt
mov
fsincos
cmp
jbe
push
xor
ja
dec
mov
call
dec
lea
aaa
and
xchg
js
cmp
dec
fwait
push
outsl
pusha
lahf
cmpl
roll
add
sub
cmp
adc
add
lock
popa
loope
sti
pop
fyl2xp1
xor
cmp
inc
in
xor
mov
leave
and
popf
xor
test
mov
aas
cmp
and
xchg
and
xchg
cmp
fisttps
xor
xor
jnp
xor
jae
cmp
cmp
popa
dec
push
cmp
add
sarb
inc
mul
jg
fisubs
jecxz
jmp
sbb
movsl
push
sbb
lret
jge
adc
loope
movsl
in
inc
xchg
jnp
loopne
adc
data16
ficomps
xor
fldl
in
arpl
icebp
mov
jnp
cmc
pop
add
xor
aaa
pop
add
negl
aas
pop
and
das
dec
jl
in
fadds
push
jge
or
fsubp
inc
out
push
pushl
sub
mov
jnp
cltd
xchg
add
das
jnp
loope
sbb
push
and
aam
inc
mov
shl
scas
pop
cmpsl
adc
je
iret
xor
adc
mull
jne
jno
dec
test
sub
insl
dec
jne
icebp
fbstp
or
or
jns
jne
xchg
psllq
add
and
or
test
outsl
adc
popf
jno
iret
inc
inc
sbb
movsb
mov
sahf
iret
dec
push
fcomps
push
mov
icebp
fbld
sbb
fwait
xor
lods
iret
insl
jmp
sbb
inc
negl
jg
push
and
push
data16
dec
jg
popa
xor
sub
and
dec
std
rcll
test
sbb
jns
or
jnp
xchg
and
inc
ljmp
dec
xchg
je
fisubs
sbb
jecxz
xchg
mov
jecxz
mov
mov
push
aaa
adc
mov
imul
and
lahf
lret
xor
es
push
pushf
data16
popf
outsl
fnstsw
das
xor
js
int
dec
shll
sub
sbb
adc
jp
mov
dec
int
ja
jmp
jnp
inc
fwait
dec
int3
mov
imul
roll
cltd
int
dec
mulb
ret
aaa
cmc
popf
dec
cmp
stos
gs
outsl
inc
and
ljmp
and
jno
idivb
mov
cltd
std
aaa
imul
inc
shrb
test
cmp
mov
mov
xor
addb
jnp
insl
xchg
xor
cwtl
inc
cmc
mov
or
aas
or
movsb
xor
push
jecxz
call
imul
fsubrs
add
fwait
cmc
jmp
popa
mov
shlb
cli
bound
mov
mov
scas
roll
cmp
cmp
or
inc
leave
dec
push
jp
mov
xor
lret
inc
dec
dec
ja
mov
icebp
inc
and
and
das
lret
aam
es
pop
jno
pop
push
mov
sbb
fnsave
push
xchg
fbld
out
mov
outsl
push
mov
and
or
push
and
push
ud2
lret
xor
adc
lock
ja
xor
jecxz
or
or
lret
and
sahf
imul
stos
dec
xor
jns
xchg
mov
sti
dec
xor
jnp
fnsave
jp
cwtl
xor
cmp
jno
out
imul
andl
jnp
mov
ret
lods
loopne
mov
int
shll
cmpsl
mov
popf
inc
mov
mov
cmpsl
dec
out
xor
adc
push
daa
push
ret
lods
cmc
xchg
hlt
jg
mov
in
mov
inc
xor
pop
imul
xor
js
andl
popa
pop
stos
ror
or
and
push
scas
daa
aaa
arpl
lds
sbb
js
daa
lea
fisubrs
push
lock
add
not
fistpll
pusha
testb
adc
xor
lods
lcall
xchg
roll
les
loope
push
in
int
popf
popl
xor
mov
xor
notb
dec
cmp
lods
in
fwait
hlt
js
outsl
adc
xor
or
aad
or
adc
arpl
and
das
sub
jmp
inc
cmp
pushf
hlt
and
and
sbb
pop
mov
inc
in
cmp
pop
xor
es
sub
xchg
mov
inc
pop
lahf
cmp
sub
pop
std
add
gs
das
sbb
or
or
push
xchg
out
mov
mov
cmpsl
mov
adc
jecxz
ljmp
enter
push
arpl
jg
negl
movb
inc
leave
pusha
jg
sbb
arpl
dec
xchg
push
mov
insl
mov
pop
ret
sub
ret
mull
push
lods
arpl
jmp
push
pop
fnstcw
xor
pop
addr16
mov
cmp
mov
jb
sar
fmuls
jmp
cwtl
xor
call
sub
or
out
popf
mov
mov
jns
lahf
fldl2t
mov
lea
dec
lret
pop
int
dec
js
aas
mov
daa
xor
jns
cmp
pop
in
movsb
xchg
sarl
pop
adc
int
lock
jae
fwait
popa
hlt
js
jp
push
inc
ret
daa
js
repz
fwait
adc
adc
pop
or
mov
mov
pop
movsb
xchg
xchg
jge
jns
popa
sbb
xlat
popa
data16
mov
mov
or
add
popa
add
xor
outsl
xchg
inc
cmp
jecxz
adc
adc
push
adc
mov
js
andb
fwait
daa
cmc
mov
gs
sbb
mov
dec
popf
shll
pop
or
and
and
es
cltd
cmpsl
xor
cmpsl
imul
hlt
lcall
push
pop
js
fnstcw
outsl
gs
dec
pusha
inc
xchg
and
loopne
mov
pop
push
ret
sub
xor
cmp
icebp
notl
ss
push
xor
fidivrs
inc
pop
sbb
xor
ss
add
sar
outsl
push
adc
sbb
dec
adc
mov
iret
dec
call
pop
mov
jns
cmp
xchg
in
cmp
sub
and
cbtw
inc
insl
mov
popa
push
jne
mov
xchg
xor
sub
fnsave
jns
data16
dec
lret
ss
ss
xchg
pop
fistpll
sub
xlat
jp
xchg
lods
xor
dec
stos
push
adc
mov
dec
cmp
leave
ljmp
idivb
adc
xor
fdivrp
out
dec
mov
cmp
xor
or
mov
pop
dec
loop
push
inc
and
mov
mov
dec
ljmp
jmp
flds
divl
and
lock
mov
lcall
mov
pop
push
popa
popa
fimuls
fwait
push
xor
lock
adc
cmp
inc
pop
fnsave
push
jecxz
sbb
fnstcw
mov
inc
mov
add
cmp
rcl
xor
adc
outsl
push
mov
scas
xorl
mov
mov
arpl
push
mov
cmp
flds
popa
notb
sub
jnp
jp
stc
push
mov
lock
iret
push
mov
daa
test
mov
stos
xchg
add
cwtl
lock
jmp
imul
or
xor
ss
test
out
int
mov
inc
jns
cmp
negl
ret
add
inc
iret
push
inc
xchg
hlt
fiadds
bound
cmp
int3
into
js
test
test
add
xor
or
lods
add
sbb
inc
cwtl
adc
cwtl
lahf
movsl
sbb
or
add
sub
fwait
cmp
or
inc
imul
outsl
inc
daa
les
mov
mov
xor
pop
pushf
or
sarl
sbb
repz
mov
arpl
repnz
sbb
lret
push
lea
cmpsl
sbb
pop
xchg
mov
repz
push
dec
jp
jne
or
mov
inc
int
adc
sbbb
jecxz
dec
icebp
push
lahf
sbb
xchg
mov
and
fisttpll
fimuls
xor
scas
pop
insl
lods
dec
out
ja
dec
cmpsl
shrl
xor
lahf
jmp
push
fnstenv
adc
xor
shll
xchg
push
mov
jg
fsubrp
adc
push
jno
jmp
js
lea
pusha
push
and
lret
cltd
jnp
dec
mov
lea
roll
push
shll
jmp
shrl
fiadds
and
sbbl
sbb
jmp
sub
mov
aad
jp
rcrb
adc
pop
in
lea
out
movsb
lea
or
sbb
shrl
aaa
lcall
jnp
aaa
subl
fstpl
mov
aaa
loope
jne
push
rorl
int
add
cltd
inc
lods
in
jmp
sub
inc
mov
xor
fwait
movsb
les
addr16
vprolvd
into
fsubs
inc
xchg
adc
xchg
mov
mov
xor
xchg
xchg
sub
or
ud0
cmpsl
icebp
mov
aas
mov
popa
xchg
pop
and
stos
aaa
js
negl
stc
push
xor
jne
fst
scas
sub
es
and
push
or
pop
imul
sbb
cltd
lea
mov
cmc
fnsave
dec
jne
testl
mov
out
dec
fistpll
ret
cmp
xor
adc
xchg
fimuls
jo
or
inc
mov
call
bound
int3
push
mov
or
test
jns
jnp
roll
mov
jmp
arpl
fsubp
dec
cmp
xchg
xchg
loopne
pop
xlat
lock
rorb
dec
lcall
mull
int
popa
test
inc
xchg
and
jmp
and
loope
push
push
out
mov
subl
mov
sub
sbb
popf
push
je
test
into
dec
and
or
adc
jge
mov
dec
dec
ret
aam
sbb
mov
inc
push
dec
clc
xchg
xchg
popa
aaa
fnstcw
int3
into
pop
outsl
movsl
jmp
dec
adc
dec
push
mov
aaa
adc
notl
pop
outsl
push
xchg
sub
bound
jne
addl
jp
xor
fistpl
cmp
push
out
cmp
mov
rclb
pop
rorl
aad
lds
dec
js
jne
dec
xchg
roll
es
inc
addr16
jo
xchg
popf
xlat
int
adc
adc
or
mov
orl
push
lahf
or
add
loopne
inc
lret
and
aad
and
or
inc
sub
add
jae
fldt
sbb
xchg
xor
aad
sub
lods
filds
xor
mov
insb
repnz
inc
jmp
dec
mov
xorl
xor
cmp
fiadds
scas
mov
lock
lcall
cwtl
adc
jnp
lahf
imul
cmp
fwait
sbb
mov
and
lds
xor
inc
jo
test
pop
das
out
aaa
outsl
ret
daa
jecxz
jecxz
or
add
leave
inc
xchg
inc
adc
push
movsb
jnp
pop
xor
cmp
pop
jmp
js
fnstsw
es
movsb
pop
imul
sub
jecxz
dec
lcall
cwtl
dec
mov
popa
shlb
out
xchg
sub
filds
call
data16
fnsave
lds
mov
aad
sub
div
lds
mov
jmp
xor
cmpsl
std
mov
or
mov
inc
popa
pop
shl
lret
imul
inc
adc
sbb
xor
or
and
sbb
movsb
mov
cmc
test
int
aad
in
rorb
int3
ficomps
mov
mov
mov
test
pushf
push
rcrb
and
adc
jmp
jno
xor
adc
and
in
repz
in
sub
push
stc
adc
jns
and
jmp
mov
scas
js
inc
or
popf
out
jno
daa
xchg
inc
adc
lock
add
mov
inc
or
pop
daa
int3
push
daa
lds
cmp
jns
nop
lcall
pusha
mov
sbb
ja
adc
shl
imul
xchg
movsl
cmp
mov
sub
lods
arpl
int
cmc
xor
inc
fwait
inc
push
adc
xor
imul
and
mov
movl
jno
shrl
push
inc
int
sbbb
xchg
ja
mov
add
es
add
fisubrs
adc
dec
loop
cmpsl
scas
pop
roll
cmp
ud2
arpl
int3
xchg
mov
push
filds
cmp
mov
push
sbb
iretw
mov
daa
dec
jmp
mulb
lahf
jecxz
mov
icebp
std
cmc
dec
xor
test
das
cmp
repz
mov
sbb
push
aaa
add
cmpsl
or
lds
fldl
les
imul
leave
loop
xor
cmp
xor
rcr
fnstcw
add
xchg
inc
mov
aad
cmp
add
cwtl
test
cmp
roll
ror
xchg
cwtl
jno
mov
mov
xor
inc
xor
dec
sub
jp
lcall
pop
pop
dec
inc
mov
jmp
icebp
popf
sbb
mull
mov
int
add
dec
int
icebp
cmc
or
or
lods
sbb
jae
add
or
shrl
sar
or
adc
fstl
das
mov
dec
stos
or
jge
cmpsl
add
daa
frstor
xlat
or
jg
mov
sbb
xor
icebp
push
xor
sub
or
xchg
fcmovnb
xor
mov
pusha
adc
and
sbb
mov
push
outsl
push
jmp
xor
mov
pop
aas
adc
dec
xor
pop
xchg
data16
shll
rcrl
insl
filds
mov
mov
pop
xor
adc
iret
and
jg
roll
dec
cwtl
aad
ret
pop
test
jnp
cltd
jg
js
dec
les
cmp
outsl
mov
adc
jg
xor
xor
mov
mov
xlat
inc
jp
cwtl
adc
push
cmpsl
dec
pop
adc
mov
xchg
int3
stos
push
in
daa
test
popa
sbb
mov
iret
and
sub
push
ret
imul
fimuls
fwait
cmp
outsl
inc
xchg
es
mov
and
leave
lods
xchg
movsb
adc
movsb
fisubs
sbb
mov
or
xchg
es
outsl
jge
shrl
stos
or
dec
mov
mov
mov
inc
jmp
mov
addr16
es
test
and
jecxz
adc
int
aas
sub
sbb
orl
cmp
test
cmpb
mov
xchg
mov
adc
js
inc
imul
sub
or
out
scas
cmp
js
loop
outsl
out
mov
mov
mov
sub
mov
shrl
scas
xorl
mov
add
or
ss
cwtl
je
test
mov
shr
add
gs
mov
int
fldt
test
icebp
mov
mov
mov
loope
leave
xor
xlat
jecxz
addr16
fisttpl
adc
shl
lahf
popf
icebp
cwtl
roll
adcl
mov
inc
add
xor
int
mov
xor
es
jmp
loop
push
cmpsl
popa
pop
es
icebp
aad
mov
xchg
js
jns
imul
or
xor
add
loop
cmc
sub
adc
push
adc
fldlg2
dec
add
out
cmp
ss
pop
scas
fwait
adc
lds
inc
push
adc
js
inc
cmp
inc
sub
int
imul
cmp
xorl
xchg
pop
xor
jmp
add
mov
sub
mov
cwtl
mov
nop
mov
dec
lea
sbb
shll
xor
lret
add
mov
jecxz
aaa
and
outsl
push
jge
jge
xor
xor
or
mov
adc
shr
jmp
jne
popa
push
xor
inc
popf
inc
dec
mov
daa
inc
lea
bound
inc
data16
aaa
fwait
test
sbb
xchg
stc
outsl
inc
mov
xor
popa
inc
daa
fbld
iret
adc
xor
mov
xor
xchg
test
movsb
sbb
fwait
sbb
add
decl
mull
or
lahf
jmp
popa
add
mov
test
inc
inc
pop
inc
popa
jbe
xor
fst
addr16
lods
lcall
dec
bound
xchg
iret
xor
jno
and
push
lret
sbb
cmpl
and
push
icebp
je
fisubs
mov
out
fnsave
js
mov
jae
js
jnp
sarl
dec
push
out
jns
sbb
jecxz
dec
maxps
or
or
aas
aaa
mov
dec
insl
stos
add
mov
aaa
add
pop
inc
imul
mull
mov
pop
mov
xor
les
mov
ja
pop
icebp
pop
dec
call
cmp
dec
out
dec
or
aaa
sub
cmp
add
add
fsubp
inc
cmp
inc
stos
jg
rcll
xor
xor
test
inc
mov
fidivrs
mov
push
imul
adc
jp
mov
or
lds
shll
cmc
js
pop
add
lahf
add
mov
cmpb
push
mov
push
outsl
add
pop
iret
lea
add
mov
filds
pop
xor
lds
add
sub
es
frstor
push
gs
lock
leave
inc
xchg
xchg
add
fwait
fwait
xor
js
cwtl
stc
leave
adcl
or
icebp
and
xor
xor
inc
pop
jmp
pop
mov
sbb
insb
shrb
mov
cmp
test
sbb
dec
fwait
aaa
aad
lds
inc
fwait
push
int3
lcall
or
pop
sbb
int3
push
out
stos
pop
lahf
dec
pop
ja
ja
mov
add
imul
popa
xor
jnp
fiadds
mov
sbb
pop
mov
inc
fucomp
pop
mov
jge
sub
inc
insl
adc
add
shlb
push
fidivs
cmp
daa
pusha
xlat
mov
jmp
cwtl
add
mov
adcl
and
mov
mov
sbb
les
or
inc
xor
cmpsl
outsl
imul
dec
pop
adc
imul
jge
xor
dec
and
hlt
mov
cmp
xchg
push
outsl
add
das
daa
pop
out
xchg
mov
inc
xor
icebp
rcrb
mov
lea
push
mov
out
and
sbb
cwtl
jg
pop
lcall
insl
or
aam
orl
mov
mov
fwait
mov
ret
lcall
add
push
leave
jg
sbb
or
xchg
ret
movsb
aaa
mov
scas
adc
mov
ret
mov
sbb
mov
push
or
add
lahf
mov
shrb
loopne
js
in
out
mov
int
dec
mov
xchg
iret
mov
dec
sub
dec
add
mov
add
es
or
inc
shlb
or
fstps
leave
addr16
jo
and
dec
lea
push
dec
popa
and
std
jmp
and
mov
sbb
and
roll
lea
bound
int
sub
iret
lds
gs
mov
icebp
and
inc
addb
dec
aaa
sub
or
jne
mov
dec
sub
std
loop
movsb
ret
or
add
iret
lahf
and
es
aad
cmp
xchg
cmp
cmp
inc
mov
adc
mov
test
mov
test
pop
dec
xor
fidivrs
xchg
aam
loope
gs
test
xor
mov
int3
js
lds
sbb
or
or
mov
repz
int3
push
outsl
aaa
adc
cwtl
aad
loopne
or
xadd
insl
xchg
add
aad
xorl
pop
int
push
adc
loope
loopne
and
movsb
xchg
mov
data16
and
xor
lock
cltd
sub
mov
adc
test
stos
and
es
lods
fwait
ljmp
sbb
fs
xor
xchg
call
xor
popa
sbb
add
dec
push
lahf
das
daa
add
shll
les
xor
sti
notl
test
shrl
pop
pop
xchg
xchg
ljmp
es
push
inc
push
cmc
fimuls
stc
mov
push
ret
xchg
mov
xor
push
xchg
mov
add
cwtl
shll
mov
jg
pop
xchg
xor
sbb
inc
ja
rorl
add
rcl
inc
xor
lcall
loop
cmp
pop
nop
bound
jno
dec
cwtl
shr
xchg
in
shll
mov
test
xor
lods
jnp
es
stc
cmpsl
cwtl
lds
pop
mov
inc
outsl
adc
btr
stos
fidivrs
mov
push
pop
add
xor
xor
shll
cmp
push
jns
push
cwtl
int
aaa
loope
and
add
cmp
mov
cmp
mov
cmp
xchg
sbb
add
rcrl
sbb
cmp
pop
repz
inc
jno
popa
ss
test
xchg
mov
add
xor
and
setne
hlt
sbb
adc
out
jae
mov
xchg
sub
or
lods
dec
ret
jg
add
fwait
rcrb
xor
lods
es
xor
sti
mov
push
jmp
mov
ja
and
push
sbb
addr16
lret
dec
mov
mov
mov
sbb
outsl
popa
jmp
jp
xor
lock
es
stos
sqrtps
outsl
cmpsl
mov
aam
dec
call
xor
mov
push
mov
adc
xlat
cmp
add
icebp
cmp
adc
pop
jge
int
inc
inc
dec
cmp
es
mov
mov
jo
or
add
mov
js
xor
xor
xlat
pop
cmp
add
mov
sub
repz
pop
xor
push
jno
cmp
cwtl
icebp
xorb
ljmp
mov
mov
aad
pop
mov
cmove
mov
pusha
ss
cltd
lea
pop
cwtl
shlb
cmpsl
cwtl
rcrl
es
lea
inc
add
rcrw
inc
stc
xor
aam
xchg
mov
dec
mov
icebp
mov
adc
and
bswap
dec
xor
adc
sub
and
xor
xlat
dec
loopne
inc
push
pop
test
sbb
test
dec
xchg
mov
stos
icebp
shrl
cmp
add
or
cmp
add
jecxz
xchg
lcall
sarb
inc
pop
lds
adc
in
mov
and
push
dec
call
std
dec
loopne
stos
pop
xchg
jno
dec
stos
dec
jecxz
out
inc
xchg
ret
sub
pop
adc
push
xchg
and
lret
adc
xchg
pop
dec
lock
outsl
imul
ja
mull
mov
jns
pusha
or
popl
add
shlb
js
lcall
cwtl
adc
mov
sub
loop
movl
or
ja
sbb
sub
aaa
push
psllw
xchg
orb
cwtl
sub
inc
pop
orb
lea
dec
pop
inc
dec
push
sbb
mov
aaa
cmp
fucomip
mov
lods
jecxz
fldenv
add
call
lcall
inc
inc
mov
xchg
jnp
sub
popa
add
jns
mov
sbb
inc
sub
aaa
mov
add
dec
stos
pop
fldl
mov
insb
dec
inc
imul
andb
xorb
ret
movsl
shl
sbb
inc
or
cmp
adc
adc
xchg
xchg
xorl
mov
add
or
dec
arpl
pop
and
and
jae
js
pushfw
mov
mov
xorl
das
pop
cmp
sbb
shrl
in
mov
andl
arpl
ret
addb
in
xorl
sub
es
xor
inc
pop
xchg
xor
pushf
push
aaa
shll
cmp
shl
push
movsb
ret
jns
mov
cmc
dec
out
add
test
shll
bound
mov
aad
orb
frstor
dec
add
lock
test
test
adc
jae
sbb
shr
addr16
sub
and
insb
inc
outsl
push
jno
stc
loope
bound
inc
mov
push
xchg
andl
arpl
xlat
dec
movb
out
popa
adc
enter
pop
pop
inc
pop
mov
adc
xor
aaa
jge
mov
or
dec
add
xor
das
or
sub
lds
dec
push
push
mull
imul
sub
loopne
dec
inc
jns
popf
sbbb
lahf
or
adc
lds
mov
mull
pushf
mov
stos
fiadds
es
mov
mov
pop
sbb
icebp
add
lret
lock
inc
or
adc
fwait
stos
xor
orb
repz
pop
sbb
dec
pop
scas
gs
adc
icebp
data16
inc
dec
sub
and
xchg
mov
add
popa
aam
ja
jo
dec
dec
in
mov
int3
xchg
and
push
lods
ret
sarb
imul
push
jecxz
xchg
push
stc
adc
jae
lret
and
lods
cmc
fwait
adc
mov
leave
fcompp
mov
pop
or
and
mov
jae
fimuls
jae
mov
push
or
es
jne
lcall
push
sbb
gs
rcrb
fwait
cmp
jne
data16
movsl
in
and
dec
inc
aaa
pop
adc
subl
jmp
add
mov
xor
dec
push
sub
xor
je
aaa
popa
push
roll
mov
int
lods
ret
and
pop
xor
adc
jecxz
or
stos
fisubrs
fisubrs
test
shrl
inc
adc
add
and
mov
stos
ja
or
es
mov
outsl
cwtl
rcrb
das
sbb
mov
movsb
dec
test
mov
or
push
dec
inc
mov
mov
adc
pop
leave
mov
popa
adc
aaa
ret
movsb
xchg
int3
push
mov
out
test
gs
test
mov
and
inc
xor
loope
mov
orl
shlb
fnstcw
icebp
sbbl
aaa
dec
mov
push
xor
cmp
pop
jg
xchg
mov
outsl
push
xor
addr16
mov
lods
adc
push
test
add
gs
lcall
push
inc
adc
mov
das
pusha
pop
push
daa
xchg
mull
dec
push
push
lret
stos
dec
inc
dec
push
mov
sbb
cmpl
sbb
lods
mov
outsl
les
subl
push
dec
mov
sbb
cmc
mov
jp
out
jns
cltd
sub
out
nop
and
inc
cwtl
mov
shll
js
sbbl
stc
mov
les
xor
cmc
push
mov
das
popf
add
inc
inc
sahf
xchg
cmp
mov
cmc
dec
xlat
cmc
inc
int
xchg
add
decl
sbb
mov
movsb
ret
stc
adc
sbb
inc
outsl
fwait
jne
scas
pop
adc
cmp
lds
cmpsl
aaa
sbb
xchg
stos
sbb
jae
xor
push
dec
arpl
in
xlat
inc
inc
xor
fisubrs
stc
test
dec
and
fwait
jge
cmc
es
popf
daa
jecxz
inc
mov
lods
inc
loope
loopne
xor
xchg
rolb
icebp
ljmp
outsl
mov
add
dec
adc
fwait
pop
sbb
or
rcr
ret
inc
nop
cmpsb
pop
push
popa
mov
add
sbb
inc
xor
adc
cmp
xchg
inc
lods
or
notl
mov
out
push
push
mov
lahf
bound
and
jg
mov
data16
xchg
stc
inc
jmp
or
or
mov
mov
shr
xor
mov
dec
nop
int3
push
xor
dec
clc
xchg
stos
cmp
js
leave
xchg
es
imul
test
jmp
test
dec
cwtl
int
test
jnp
mov
data16
test
outsl
ja
aad
inc
xor
cmp
test
push
pop
vphsubdq
cmp
lods
and
mov
adc
xor
or
scas
pop
sub
sub
lea
inc
int3
data16
stc
les
xchg
shrl
adc
or
movsb
lcall
es
inc
add
fcomip
aaa
mov
pop
push
inc
extrq
pop
and
sbb
adc
adcl
jno
rorb
js
or
xchg
xchg
push
outsl
push
shr
ja
add
dec
arpl
int3
mov
movsl
lcall
dec
pop
mov
add
fiadds
movsb
adc
dec
les
push
orl
mov
mov
cmc
mov
sbb
xor
out
pop
xor
sub
push
lret
pop
dec
mov
insl
scas
pop
pop
inc
sub
pop
xor
xor
xor
push
xor
ret
test
loopne
mov
pop
dec
cmp
sub
dec
lcall
inc
xor
mov
jge
add
inc
lods
es
lods
in
xlat
lock
hlt
fidivs
scas
movsl
cmp
mov
mov
in
dec
adc
ljmp
dec
lcall
hlt
movl
inc
adc
jmp
sub
adc
dec
pop
fisttps
lods
cwtl
inc
out
outsl
and
test
dec
and
pop
mov
lods
lcall
dec
push
outsl
popf
dec
push
addr16
sbb
push
hlt
mov
dec
ret
fwait
aad
gs
fdivs
jp
sbbb
add
mov
mov
xchg
xorl
das
pop
pushf
out
adc
push
popf
lods
dec
add
lds
pop
sub
es
jne
xor
mov
pop
leave
rdpmc
jp
cwtl
mov
jmp
cmp
push
dec
mov
push
xor
hlt
stos
fwait
inc
popa
mov
ss
cmp
loopne
ja
and
dec
cmp
aaa
or
cmp
nop
adc
imul
sub
out
lea
xor
mov
dec
xor
movsb
lret
aaa
cmp
sbb
pop
int
shlb
subl
push
int3
std
mov
inc
lods
out
dec
mov
sbb
or
push
pop
mov
mov
xor
cmp
jg
daa
cmp
testl
jecxz
stos
dec
xor
mov
inc
rcrb
jnp
fisubrs
imul
inc
cmpsl
xchg
adc
js
or
cmp
sub
xor
xor
and
push
bound
sti
test
push
outsl
imulb
lcall
adc
es
mov
sti
lods
testl
rsqrtps
cmp
lahf
inc
adc
out
sbb
gs
mov
mov
insl
adc
sbb
xor
adc
cmpsl
lahf
mov
push
cmpsl
inc
testl
mov
out
mov
cmpsl
or
lds
rorl
push
dec
xchg
mov
cwtl
xor
popa
push
imul
adc
in
xchg
out
push
aas
arpl
dec
add
dec
add
rcll
pop
mov
pop
lods
cwtl
and
stos
mov
scas
sub
mov
lods
sbb
icebp
fwait
add
xchg
test
cltd
mov
int
aad
mov
add
xchg
sbb
scas
cltd
jno
andb
and
mov
dec
dec
test
mov
mov
sbb
mov
iret
push
jecxz
adc
or
mov
add
rcll
or
or
rcll
xchg
and
les
xor
packsswb
test
das
aas
pop
insl
data16
xor
inc
or
aaa
cmc
loopne
dec
ljmp
inc
into
and
xor
das
dec
in
xchg
fistpl
jg
shrl
adc
mov
test
rorb
fldt
adc
lods
or
daa
out
dec
jp
sbb
ret
mov
pcmpgtw
and
xlat
sbb
or
push
inc
imul
xchg
imul
notl
push
dec
xor
mov
pop
mov
or
xor
mov
sub
lds
cwtl
xor
inc
es
inc
or
add
ret
pop
adc
add
aaa
sbbl
xor
jg
mov
or
inc
mov
dec
call
sub
sbb
jnp
adcb
negl
test
mov
dec
dec
call
arpl
lahf
mov
or
popa
mov
data16
add
in
int
pop
mov
cwtl
add
pusha
or
xor
cwtl
mov
add
jnp
inc
jno
js
cmp
outsl
movb
mov
add
push
inc
xchg
fisubrs
adc
shr
shll
out
pusha
inc
xor
loop
mov
std
pop
push
ret
or
lods
jmp
movsl
lods
xchg
and
aaa
jecxz
push
xor
gs
es
mov
lcall
lcall
aaa
sub
mov
add
js
fstps
outsl
dec
es
mov
xchg
cmp
add
out
sub
sub
leave
movb
xchg
adc
push
dec
push
rorb
in
pop
inc
mov
aad
xor
inc
roll
daa
incb
dec
jae
rolb
push
rcrb
orb
jmp
das
data16
inc
gs
hlt
es
xor
or
aas
or
addr16
movsb
pop
sarl
fstps
and
mov
test
movsl
dec
sbb
inc
dec
cltd
es
dec
cmp
repz
cmp
mov
adc
int
add
xor
insl
out
push
add
enter
cmpsl
fstps
push
popa
adc
push
mov
fisubrs
cwtl
mov
outsl
stos
and
jecxz
daa
jns
lcall
outsl
adc
mov
ja
shll
jnp
mov
sbb
rorb
mov
movsb
xor
dec
adc
rorb
cmp
jp
lret
jae
cwtl
rolb
fbstp
loope
lcall
loope
or
int
sbb
pop
or
jmp
or
xor
mov
ss
aas
xor
push
mov
daa
jmp
adc
cltd
cmpsl
cwtl
mov
sbbl
and
push
mov
or
aaa
fwait
cmc
fidivrs
add
mov
flds
dec
mov
cmc
add
mov
cmpsl
jp
xor
xor
sub
scas
pop
add
lcall
movsb
cmp
stos
jg
shrl
xorb
and
cmp
pop
pop
fld
inc
inc
mov
leave
cwtl
adc
and
cwtl
push
fildl
mov
mov
test
rcll
test
xor
pushf
dec
sub
add
inc
mov
lds
js
jg
xchg
cmpsl
xor
xchg
add
pop
imull
ss
add
mov
fnstcw
mov
dec
dec
mov
int
jg
les
js
jno
popa
add
xor
int
xlat
insl
cmp
neg
sub
inc
mov
je
fstpl
mov
mov
out
rcrb
aaa
sub
xor
sub
fwait
hlt
call
xor
adc
xor
and
mov
xor
es
pop
dec
add
out
xor
pop
xor
mov
cwtl
sub
cmp
xchg
or
scas
or
dec
mov
leave
popa
inc
shll
fsubp
pop
daa
pop
jnp
ficoms
sbb
icebp
lret
and
data16
daa
aaa
outsl
pop
add
cwtl
push
movsb
test
lods
ret
js
add
sub
out
inc
outsl
jbe
inc
frstor
or
sbb
popf
add
int
cwtl
mov
test
mov
pop
aam
aad
js
lcall
cwtl
xor
arpl
add
ljmp
stos
adc
fldt
push
mov
bound
jmp
testl
imull
rorb
jae
cmp
mov
xor
xor
lods
sarl
dec
mov
icebp
add
cwtl
int
fisttpll
arpl
push
mov
lds
adc
adc
sub
cwtl
adc
mov
scas
cwtl
inc
int3
iret
mov
adc
addr16
aaa
arpl
add
cmp
mov
push
push
negl
xor
lret
and
mov
sub
add
pop
jne
xor
data16
xchg
push
out
int
jno
inc
sub
rcll
iret
pop
push
xor
jp
lret
pop
mov
and
dec
sbb
movsb
sbbb
mov
mov
inc
xchg
jmp
jecxz
xchg
or
les
cmp
mov
sti
xor
xchg
int3
clc
xchg
mov
lret
shrl
push
pushf
es
ret
sub
or
sti
movsl
aaa
fldt
outsl
push
jnp
mov
ret
jae
jecxz
adc
sub
sbb
orl
ret
add
fnsave
xchg
pop
arpl
xor
inc
mov
adc
fstl
dec
lcall
or
jno
add
mov
push
xchg
fwait
adc
ret
adcb
xor
inc
icebp
in
out
mov
and
and
mov
and
mov
ret
or
mov
fwait
inc
cmp
aaa
mov
hlt
jge
ja
xor
cmp
push
inc
lock
jp
mov
gs
adc
xchg
jae
imul
cmp
add
loope
das
sub
shlb
nop
lods
fldcw
shr
adc
in
arpl
arpl
cmp
arpl
push
xchg
pop
in
sub
fwait
lds
xchg
and
cmpsl
shl
adc
pop
and
in
add
pusha
adc
xor
pop
ror
cwtl
roll
jg
inc
outsl
adc
test
mov
inc
out
mov
xor
xchg
js
std
mov
ficoms
ljmp
and
dec
adc
push
add
shlb
pusha
mov
pop
push
dec
lcall
and
or
fwait
pop
inc
mov
pop
dec
sbbb
push
mov
cwtl
lock
aad
outsl
pop
outsw
push
cmc
adc
push
xor
add
xor
inc
jno
pop
dec
loopne
add
test
sbb
xchg
xor
and
fwait
jo
lds
cltd
mov
icebp
xchg
lcall
and
dec
mov
sbb
xor
daa
dec
out
xor
sbbb
arpl
or
leave
mov
mov
mov
lods
es
icebp
out
inc
arpl
fidivrs
fistps
push
xlat
adc
leave
lahf
push
mov
or
loop
fildll
xchg
pop
cmpsl
gs
mov
mov
and
cmp
das
dec
inc
and
fidivrs
jg
mov
mov
adc
mov
inc
loope
jnp
mov
or
xor
cwtl
mov
or
add
pop
mov
sbb
inc
sbb
dec
push
cmpsl
dec
add
mov
or
sbb
int3
add
das
and
or
rolb
cmp
xor
xor
sbb
and
add
xchg
jge
sbb
xor
lds
dec
mov
mov
ret
test
and
add
roll
sti
aaa
outsl
inc
adc
sub
jno
pop
inc
ja
lds
or
pop
mov
rorb
inc
popf
int3
bound
add
push
or
add
push
aaa
xchg
push
adc
inc
fistl
pop
out
cmp
and
xor
pop
mov
or
jno
lock
push
sub
cmp
or
stos
sbb
into
mov
sbb
mov
adc
pusha
push
out
jge
add
fldcw
out
icebp
dec
mov
jno
push
add
mov
inc
pop
ret
out
popa
shrl
mov
and
xor
or
or
je
test
in
out
xor
inc
xor
lea
bound
adc
popa
mov
xor
icebp
dec
push
xor
jbe
push
cmp
sub
mov
and
mov
arpl
xorb
cmpsl
pop
aam
jl
aaa
arpl
xor
test
loop
sub
adc
aas
adc
movsb
loop
mov
or
jae
dec
xor
xor
lods
data16
add
add
push
sbb
orb
jns
push
xchg
mov
js
mov
add
aad
popa
mov
ret
mov
sbb
popf
movsb
jp
xor
lds
shl
repz
sub
mov
testl
jnp
lahf
jmp
dec
jecxz
es
xchg
aad
aad
fstps
lret
dec
fisubs
adc
int3
in
sbb
ret
stos
js
rorl
sbb
out
sbb
test
push
cmp
mov
inc
mov
shll
or
cwtl
int
jge
xor
mov
sbb
xor
push
mov
andb
addr16
mov
jnp
aaa
out
mov
loop
xrelease
adc
mov
and
inc
xchg
xchg
cmp
add
pop
sub
push
add
test
inc
pop
jp
dec
dec
insl
lret
inc
adcl
in
lcall
xor
adc
xchg
mov
lret
cltd
shll
or
mov
rcll
or
sarl
mov
xlat
cmpsl
push
dec
sub
push
mov
cmp
push
les
dec
aad
inc
arpl
sub
outsl
inc
std
icebp
jnp
lods
js
imul
adc
lcall
xchg
jmp
dec
or
mov
fisttpll
or
mov
dec
or
popl
cmc
add
test
js
pop
stc
fwait
xor
cmp
cwtl
jl
cmp
outsl
dec
jne
jecxz
dec
push
adc
or
fldcw
sbb
popa
ss
ret
mov
mov
imul
sti
mov
sbb
insl
aas
lcall
push
add
jmp
jno
loop
adc
aaa
cmp
int3
sub
lea
xor
cmp
popa
int
cltd
jge
xlat
test
mov
mov
aaa
mov
es
adc
mov
mov
arpl
aaa
jnp
cmp
pop
xlat
mov
xor
icebp
sbb
push
mov
sbb
sbb
sub
int
cmp
dec
and
cmp
aaa
cmc
std
push
mov
mov
pushf
pop
int3
pusha
cmpsl
out
lcall
cmc
insl
sbb
mov
sbb
inc
jno
mov
or
pop
mov
inc
mov
imul
and
addr16
xorl
mov
mov
cmp
xor
popf
mov
push
iret
dec
int
es
sub
inc
cmp
mov
push
pushf
xchg
inc
dec
repz
lds
pusha
inc
adc
movsl
int
adc
push
or
stos
fwait
inc
dec
adc
push
mov
fwait
dec
xor
or
xor
punpckhwd
test
pop
fyl2xp1
sub
dec
xorb
idivl
addr16
imul
roll
cwtl
hlt
pop
lds
pop
icebp
scas
loope
add
dec
ljmp
int
fwait
scas
sarl
and
pop
int3
ljmp
mov
daa
inc
xor
jmp
mov
fcomps
mov
int
mov
inc
shrl
int3
es
add
cmpb
jmp
cmp
je
mov
fistps
push
adc
imul
inc
xor
sub
cmp
or
mov
xor
fwait
shlb
mov
pop
das
add
adc
lock
mov
data16
xchg
lea
mov
aam
rorl
mov
xchg
lods
mov
dec
lods
pusha
dec
les
rorl
xlat
andl
loope
push
dec
push
cmc
jne
inc
in
int
pop
add
icebp
fisubrs
dec
push
xor
fwait
xor
xchg
jge
or
mov
xchg
fadds
and
xchg
dec
popf
fbld
mov
sbb
shlb
stos
push
popf
popa
aam
cwtl
xchg
lods
fldl
adc
add
adc
mov
cltd
gs
mov
or
pop
jmp
xor
dec
loop
dec
fwait
mov
or
add
add
mov
mov
mov
rol
adc
es
adc
jae
mov
std
fstpt
push
pop
ret
mov
test
jmp
ret
or
adc
imul
daa
pop
es
ficoms
xchg
or
imul
popf
and
dec
add
mov
mov
popa
add
jnp
cltd
mov
rol
cmp
xorl
or
mov
in
xchg
mov
xor
jmp
pop
aaa
mov
mov
xor
or
or
or
xor
xchg
add
push
pop
stos
fisubrs
and
negb
out
mov
subl
adc
mov
int
and
popf
pop
push
adc
xor
repz
andl
fcomip
es
cmp
lcall
ljmp
xor
and
xchg
xor
mov
arpl
std
lds
xchg
mov
mov
test
cmp
sti
pop
shrl
push
pop
push
lods
jg
or
sbb
jmp
xlat
dec
add
movsb
add
into
mov
pop
dec
jbe
movsb
mov
xor
xor
shrb
jno
movsl
push
cmp
nop
adc
mov
popf
inc
arpl
adc
dec
sbb
xor
rorl
mov
add
mov
push
sbb
es
inc
aas
xchg
or
fidivrs
cmpsl
mov
and
dec
out
lock
lret
sub
xor
stc
int
push
outsl
mov
dec
out
mov
xchg
mull
push
xor
adc
cmp
imul
js
jecxz
add
dec
les
pop
add
fisubs
xor
sbb
fwait
rcll
lock
loope
and
xor
movsl
jge
dec
mov
aam
int
add
sbb
mov
ret
popa
and
mov
popa
push
pop
adc
dec
shr
pop
or
mov
or
pop
cmpsl
imul
cmpsl
sub
aaa
fwait
pop
maskmovq
testl
push
inc
lds
jmp
outsl
notb
sbb
push
xchg
imul
add
adc
xchg
cmp
lcall
fiadds
inc
mov
jp
lea
pop
das
cmpsl
and
or
xchg
lahf
stos
test
xor
add
xor
add
push
aam
jae
adc
or
cmpl
jne
xor
int
jmp
xchg
lds
adcl
xchg
shrb
jno
mov
pop
jo
loope
jp
jp
and
cmp
inc
dec
mov
sub
pop
xor
pushf
scas
add
out
sbb
loope
roll
data16
mov
int3
orb
ljmp
pushf
loopne
mov
pop
push
outsl
add
sub
data16
ffree
loope
popa
shlb
xor
mov
jge
aam
xchg
inc
mov
es
test
int
mov
push
xor
add
imul
sub
cmc
cmp
mov
mov
gs
and
std
jmp
es
sbb
movsb
pusha
cltd
xchg
jae
negl
xor
sbb
dec
js
daa
mov
aaa
test
mull
popf
sbb
popa
or
sti
xor
lcall
testb
xor
rorb
les
add
add
adc
push
int
mov
sbb
lcall
ja
jp
inc
int
jg
jmp
ret
lea
pop
popl
stos
mov
jmp
push
stos
inc
xor
push
mov
xchg
xchg
sti
pop
repz
sub
xor
inc
xlat
mov
or
in
int3
pusha
adc
aas
test
out
adc
popf
push
mov
dec
mov
xor
lahf
dec
adc
xchg
push
or
xchg
dec
mov
cmp
imul
data16
sti
cmp
cmp
pop
int3
orb
adc
sub
mov
gs
pop
push
xor
adc
adc
sub
or
add
testw
or
pop
cwtl
inc
inc
sub
pop
cmc
push
data16
aaa
cmp
imul
rcr
push
xor
jecxz
fldenv
mov
add
and
cmp
cmp
jg
inc
or
int
and
adc
incl
jbe
testl
pop
sti
xor
roll
loopne
jmp
pop
jns
lret
push
cmpsl
pop
xchg
xchg
sbb
fldenv
aaa
or
shl
pop
icebp
xchg
push
hlt
outsl
dec
or
fwait
hlt
dec
xchg
sub
data16
sub
icebp
dec
inc
scas
lahf
inc
xlat
sbb
rcrl
aad
add
add
mov
xchg
aas
arpl
cmpsl
dec
jns
jecxz
or
movsb
aaa
mov
arpl
sbb
push
movsb
dec
and
push
or
or
test
fbld
add
push
mov
add
lods
pop
insl
adc
inc
mov
sbb
loopne
pop
in
push
xor
sbb
xchg
jmp
inc
popf
xor
pop
jae
movsb
sbb
mov
lea
mov
and
adc
es
dec
leave
inc
int3
or
arpl
mov
orl
sarb
inc
in
test
inc
lds
ret
mov
mov
or
es
xchg
cmp
inc
mov
push
lcall
bound
and
xchg
mov
xor
pop
pop
mov
add
add
movsb
add
mov
add
and
sti
jns
test
or
push
das
lcall
leave
push
jecxz
loopne
negl
xchg
daa
imul
cmovge
jae
popf
sub
add
popf
pusha
push
mov
es
push
cmp
adc
dec
inc
shll
fisubrs
dec
inc
shrl
xor
inc
and
icebp
mov
popf
xchg
lock
loope
push
hlt
inc
scas
push
xorb
mov
pop
xor
mov
lds
mov
cmp
es
pop
mov
xchg
rcrb
xchg
addb
or
addr16
adc
pushf
add
dec
call
adc
jnp
adc
adc
les
mov
in
cmp
daa
loope
push
mov
dec
repz
in
cmp
pop
sub
andl
add
idivl
pop
lods
push
aam
jg
jno
push
sar
add
orb
adc
pavgw
mov
popf
pusha
or
mov
movsb
push
add
mov
sar
cmp
imul
xchg
icebp
mov
xor
outsl
rcl
add
ret
fidivrs
cwtl
outsl
icebp
jg
sub
xor
sub
mov
adc
data16
jmp
adc
pop
dec
sti
rorl
jp
rorl
aaa
stos
or
xor
shr
pop
add
pop
addb
stos
sbb
dec
popa
sbbl
sbb
adc
and
aam
adc
adc
dec
mov
dec
ret
in
adc
cwtl
sbb
xchg
push
dec
mov
mov
push
lock
xor
xchg
and
push
mov
inc
std
mov
std
xor
pop
or
adc
sbb
ret
sbb
dec
add
xor
pop
loope
dec
shll
lds
dec
orl
mov
adc
imul
fstpt
push
or
push
shrb
cmpsl
push
xor
lcall
out
sbb
mov
int
pop
jne
add
or
loopne
push
aas
test
add
popa
ret
mov
or
jns
inc
out
stc
push
pop
pop
push
cmp
pusha
xchg
pop
leave
pop
pop
int3
js
jns
xorl
xor
adc
push
xor
call
xchg
ret
shrl
pop
push
add
jnp
subl
jmp
pop
pop
sbb
inc
rcrl
data16
push
stos
iret
in
test
es
sbb
xor
xchg
adc
rorb
inc
popa
rep
inc
adc
pop
fsubs
jge
cmp
test
xchg
mul
mov
add
es
lods
stc
push
and
ja
dec
xor
es
icebp
fiadds
adc
sbbb
mov
inc
sbb
outsl
xor
pop
xor
mov
sub
outsl
mov
jp
and
jns
sbb
js
out
std
pusha
push
int3
js
and
push
sbb
popf
pop
mov
push
aam
mov
mov
pop
fwait
add
sbb
roll
adc
mov
cmp
pop
int3
sbb
xor
push
xchg
xor
inc
cltd
add
mov
pushl
rcll
fdivp
jmp
cmp
mov
add
cwtl
xor
imul
sarl
jae
push
dec
lcall
fiadds
aaa
mov
daa
xchg
sbb
jge
mov
iret
mov
pop
xlat
ret
inc
and
ret
add
pop
sub
bound
push
xchg
loop
mov
adc
pop
jp
lcall
fldcw
test
jge
xor
xor
or
rolb
fs
data16
dec
or
push
cmpsl
jnp
sub
sbb
lahf
and
ret
sti
adc
leave
clc
fimuls
cmp
add
sbb
xor
in
rcll
and
mov
jp
fwait
jne
xor
out
mov
or
inc
inc
pop
sbb
and
adc
adc
es
xor
mov
xor
add
and
or
xchg
sub
and
lahf
jnp
es
mov
iret
popf
loope
xorl
leave
ljmp
stos
sbb
dec
rorw
push
add
mov
xchg
fists
popf
jns
xchg
push
dec
add
fistps
jno
pop
push
inc
xor
cmpsl
cmp
push
adc
inc
out
cmc
xor
push
shlb
jge
ja
inc
jne
and
cmp
sbb
es
jmp
mov
mov
movsl
xor
scas
fistpl
orl
pop
cmc
leave
cmp
push
pop
adc
outsl
ret
ror
sub
int3
xor
xor
xor
mov
or
int
inc
out
std
andl
ja
push
xor
subl
lock
sbb
in
movsl
sbb
repz
outsw
movsb
ret
aas
ret
sbb
arpl
daa
mov
imul
daa
push
into
sub
stos
and
es
test
imul
and
stc
sbb
dec
fdivrs
sbb
cmpsl
inc
call
ret
xor
sub
push
mov
scas
mov
mov
lds
jnp
loop
push
cmc
mov
xchg
cmc
fimuls
inc
xor
aaa
add
push
and
xchg
icebp
pusha
pop
dec
cmp
jmp
mov
fucomp
dec
push
test
out
cmp
pop
test
mov
jmp
pusha
xor
sbb
outsl
mov
movsb
das
and
xor
jne
xorb
sub
cmp
mov
std
pop
xor
mov
or
cmp
movsb
add
loopne
daa
orl
or
je
inc
cmp
or
mov
shrl
sub
aad
add
xor
add
and
xchg
scas
jnp
fwait
adc
cmp
data16
imul
lods
rolb
xor
es
cmp
adc
rcl
mov
pop
jg
pusha
add
fwait
xor
xor
dec
ljmp
xchg
jmp
and
mov
das
je
sbb
jo
add
cwtl
jno
ret
testl
xchg
cmc
and
mov
xor
push
outsl
mov
pusha
push
outsl
test
jmp
inc
pop
repz
mov
or
mov
inc
cmpsl
dec
push
mov
int
push
unpckhps
imul
xor
sbb
sub
jne
cmp
pop
pop
fwait
mov
xor
xchg
add
data16
lcall
mov
or
bound
xor
mov
mov
es
jp
push
jg
pop
jne
leave
pusha
daa
fwait
jp
and
and
sub
push
sub
cmp
jnp
mov
push
push
xor
hlt
sbb
fistpll
add
push
sub
lahf
ret
imul
jecxz
lahf
pop
pop
rorl
mov
int3
cwtl
adcl
pop
addr16
jne
cmpl
mov
pop
dec
mov
outsl
pop
adc
data16
imul
ud2
or
ret
insl
push
into
stos
aaa
pop
xlat
xor
mov
or
shll
add
mov
sub
xchg
mov
dec
add
test
fidivrs
cs
pop
pop
mov
dec
sub
lods
js
jg
mov
addl
adc
shrl
adc
xor
push
pop
outsl
push
and
inc
pusha
add
data16
mov
xor
or
js
icebp
mov
xchg
stos
xchg
fldl
pop
push
xor
push
xor
lock
push
cmp
pop
cmpsl
mov
push
cmp
or
or
xchg
mov
or
popf
test
shlb
xchg
xor
mov
jecxz
jg
fldcw
int3
data16
rcrl
cmp
scas
lea
test
mov
inc
or
shll
cwtl
aam
jecxz
arpl
aad
or
add
aam
fimuls
int
push
or
or
xor
xor
jne
xchg
sar
add
gs
and
dec
js
sub
mov
pop
lcall
scas
and
test
and
or
mov
icebp
rorl
gs
sub
xor
mov
loope
dec
adc
dec
mov
xor
loope
fwait
xor
addl
dec
mov
mov
bound
xor
pop
les
xor
inc
mov
rcrb
insl
ss
fldt
test
push
aad
fldenv
das
or
push
inc
test
iret
jns
dec
xor
iret
adc
dec
adc
jecxz
arpl
stc
fwait
xchg
or
repz
aam
sbb
pop
int
push
cmp
dec
cwtl
xor
cwtl
dec
loop
dec
mov
fs
inc
je
adc
or
dec
imul
ret
cmp
ret
nop
push
imul
dec
sbb
cmp
mov
xor
icebp
leave
sub
stos
gs
shll
sbb
pop
lret
test
daa
mov
xor
or
out
or
push
xchg
cwtl
lds
sbbl
jae
xor
push
cmp
or
fnstsw
les
call
adc
gs
push
popa
and
sub
mov
pop
xchg
call
dec
inc
movsb
cwtl
rolb
pop
push
in
adc
loop
mov
dec
addr16
cmp
mov
push
jmp
sbb
outsl
sbb
jne
mov
das
iret
cmp
xor
fiadds
xor
dec
cmpsl
mov
pop
ret
mov
mov
cmpsl
imul
push
sub
xor
add
shll
fisubrs
sbb
adc
test
jne
adc
das
leavew
mov
mov
jmp
rorb
xor
jns
xor
xor
ljmp
arpl
add
ficomps
adc
xor
loope
rol
mov
mov
negl
pextrw
nop
lods
add
xor
dec
jmp
jae
dec
vfmsubadd213pd
pop
inc
leave
shrl
mov
sbb
rolb
test
xor
xlat
out
pop
sub
stos
dec
inc
dec
dec
bound
xchg
cmp
aas
mov
addr16
fwait
cmc
jp
sub
inc
mov
aaa
test
fwait
sbb
adc
cmp
adc
cmp
sub
mov
jmp
jp
test
dec
inc
mov
push
xor
movsl
sbb
aaa
jge
sarb
ficomps
or
push
xor
dec
lahf
shll
mov
xchg
test
outsl
xchg
dec
mov
and
add
popf
pop
xor
push
aam
repz
aad
xchg
insb
add
jbe
lds
xor
insl
test
int
gs
fbld
or
push
sbb
xchg
aam
test
int
lea
inc
lahf
mov
shll
push
pushf
push
daa
int
sbb
and
xor
jmp
test
cmp
rorl
sbb
push
sub
push
roll
lcall
push
xor
cmpsl
repz
daa
iret
outsl
adc
xor
add
inc
inc
lret
adcl
data16
dec
cmp
cmpsl
xor
add
mov
xor
addl
add
mov
cmc
lds
cmp
js
test
xor
insb
adc
mov
ret
and
add
add
mov
mov
xor
repnz
ss
mov
inc
pop
inc
jno
push
xchg
movl
add
and
fnstenv
add
int
fldcw
or
xor
pop
xorl
add
loope
mov
and
pusha
in
fwait
xlat
call
jno
inc
or
aaa
imul
ret
lret
pop
mul
sets
addr16
mov
xorb
jp
inc
rcrl
adc
and
out
sbb
mov
add
jecxz
cmpsl
and
int3
cmp
fimuls
js
pusha
movsl
insl
ja
sub
mov
push
sub
lods
dec
cmp
lock
dec
loop
xor
aas
imul
adc
push
xor
adc
xlat
push
sub
lods
jns
ret
mov
dec
out
out
xor
add
jmp
add
js
sbb
inc
xor
into
add
pop
dec
xor
jmp
data16
or
aam
mov
jecxz
and
in
imul
jne
pop
mov
aaa
mov
cmp
sbbl
xor
or
fistl
xor
cmp
cwtl
mov
or
jne
imul
add
jecxz
dec
aam
jne
push
data16
ficomps
inc
xchg
and
and
es
sub
and
rcr
int
adc
lret
std
sbb
popa
push
mov
push
lock
or
aad
mov
movsb
xchg
ret
incl
adc
xlat
lds
sub
xor
pusha
add
or
sbb
cwtl
xor
xchg
movsl
mov
dec
pop
lea
cmp
adc
aad
in
mov
pop
push
inc
imul
pop
mov
push
xor
push
int
inc
lahf
in
test
imul
js
pop
daa
and
jmp
or
xor
push
xchg
rorl
xchg
std
mov
xchg
inc
shll
xchg
mov
pop
outsl
jmp
adc
and
jo
or
lock
dec
fstps
js
fwait
pop
stos
xchg
mov
insl
add
add
xor
xchg
add
sbb
cmp
ljmp
mov
xchg
sbb
aaa
leave
jnp
inc
aad
stos
cwtl
pop
mov
xchg
mov
dec
push
cwtl
hlt
loopne
daa
jg
push
jmp
xor
push
lea
or
xor
sub
push
into
sti
xor
adc
dec
jno
leave
add
add
cmc
cwtl
jno
adc
fiadds
int3
mov
in
add
daa
sbb
mov
fwait
adc
and
adc
cwtl
lock
shll
in
mov
adc
push
pop
jp
inc
int
aas
mov
dec
leave
pop
mov
lcall
orb
add
adc
sbb
add
rolb
sbb
fistpll
daa
dec
jecxz
mov
xor
or
and
sbb
jg
fidivrs
mov
outsl
imul
inc
addr16
jbe
es
xchg
sub
mov
sbb
and
aaa
xor
mov
dec
add
mov
test
cltd
fs
push
mov
pop
dec
hlt
cwtl
popf
scas
push
xor
mov
pop
and
outsl
push
xchg
js
jae
dec
les
push
sbb
inc
xchg
rorl
lock
dec
cmp
sub
mov
dec
stos
cmpsl
inc
daa
inc
xor
fldt
adc
and
arpl
mov
stc
add
and
lods
xchg
pop
sbbl
xor
jns
mov
mov
dec
sub
or
cmp
mov
int
mov
push
and
rorl
and
in
xor
inc
jne
push
add
data16
lea
sub
stos
pop
rorl
rcrl
or
sub
dec
orb
xlat
inc
adc
sbb
movsl
push
rcrb
inc
xchg
test
popa
sub
lds
outsl
dec
xchg
aaa
js
xorl
and
int
jns
xor
cwtl
adc
push
add
mov
out
cwtl
aad
pop
cmpl
add
lea
add
xor
mov
jae
push
outsl
sbb
cltd
pop
xchg
sub
dec
adc
flds
rcrl
mov
xchg
pop
mov
and
jns
xor
pop
or
js
imul
adc
lcall
pop
shrl
jne
cmp
xorb
sub
fs
push
xchg
lcall
mov
mov
inc
sub
imul
loopne
adc
lcall
rorb
ret
inc
adc
xor
sub
bound
iret
bound
and
xor
shll
sbb
fwait
jae
jno
es
dec
ljmp
push
or
pusha
inc
orl
js
je
mov
stos
sbb
xlat
mov
arpl
jg
fbstp
lds
call
xchg
dec
jge
iret
or
adc
sbb
cmc
adc
xor
jecxz
data16
loop
das
scas
push
popa
dec
push
xor
adcb
bound
jge
push
xchg
pop
int
ja
cmp
js
mov
or
fildl
lea
dec
stos
ret
jmp
push
mov
mov
rorb
push
or
lods
cwtl
push
mov
pop
icebp
pop
sub
push
dec
imul
in
add
or
mov
dec
ljmp
sbb
loope
xchg
add
daa
cmp
xor
add
and
mov
dec
pop
and
data16
sbb
es
jno
movsb
fwait
sarb
jmp
pop
xor
nop
loope
arpl
fnstenv
cwtl
xor
jne
scas
adc
mov
push
or
lods
out
dec
xor
xor
xor
push
repz
fwait
lds
jge
mov
xchg
add
sarl
sbb
iret
xor
lods
ret
in
iret
fisttpl
and
sbb
js
mov
and
add
inc
outsl
daa
jne
movsb
testl
adc
es
dec
adc
es
out
pop
xor
xchg
or
imul
jns
outsl
stos
or
or
add
outsl
dec
add
aad
movsl
mov
jnp
adc
cmc
cmpsl
adc
xchg
sub
dec
pusha
xlat
cmp
and
es
test
outsl
pop
push
or
dec
int
icebp
es
jecxz
adc
shrl
mov
call
mov
mov
cmpsl
testl
lods
add
jns
aaa
or
aaa
arpl
dec
das
test
dec
shrb
adc
mov
lds
inc
test
mov
dec
dec
add
hlt
ficoms
ret
imul
or
adc
dec
bound
push
push
mov
or
add
bound
mov
lock
fisttpl
sub
adc
fwait
dec
test
inc
cmp
insl
cmc
xor
add
insl
mov
cwtl
dec
cmp
out
or
loop
jecxz
ror
stos
bound
inc
fwait
aaa
sub
add
rorl
xor
fwait
hlt
leave
sti
push
mov
mov
xor
sub
pop
cmp
icebp
daa
outsl
push
xchg
out
fcmovne
frstor
or
test
inc
fstps
inc
jnp
les
inc
popa
add
lds
cltd
xor
add
popa
fwait
rorl
popa
inc
insl
test
adc
mov
sub
mov
inc
sbb
inc
xchg
jne
in
xor
jne
mov
mov
or
add
mov
mov
pop
xchg
or
rolb
mov
notl
jp
nop
pop
dec
lea
xchg
addr16
and
and
xor
xchg
stos
mov
pop
ja
pop
push
xchg
lds
inc
xor
dec
in
cmc
sub
pop
inc
mov
ja
xlat
xor
or
shlb
xor
xchg
stos
cmp
les
and
imul
sub
daa
xchg
sbb
adc
call
es
aaa
cmp
xchg
test
mov
loopne
adc
rcll
inc
dec
int
mov
jge
js
cwtl
add
mov
or
or
popf
or
stc
loop
aad
and
fbld
addr16
out
xor
xor
sbb
ret
mov
arpl
jae
pop
xor
xor
cmpl
aam
mov
mov
shll
and
xor
filds
cmp
in
add
mov
xor
rorl
or
cwtl
leave
xchg
mov
xor
cmp
stos
jnp
popa
shrb
dec
jne
dec
mov
loopne
mov
inc
nop
and
mov
adc
cmpsl
jns
dec
call
mov
jecxz
lea
and
aaa
cmp
sar
out
push
lret
cwtl
adc
addl
dec
lret
arpl
lock
mov
xchg
add
int3
push
sarl
xchg
and
or
cmp
jne
les
mov
mov
es
and
mov
add
test
les
dec
pop
add
pop
adc
jne
jp
es
and
aas
scas
andl
arpl
outsl
adc
loop
xor
jns
pop
out
mov
sub
test
pop
sbb
dec
cmp
daa
or
mov
inc
int3
loopne
add
add
movq
cwtl
push
and
mull
jo
push
jns
jmp
mov
paddusw
das
data16
cmp
aas
add
shll
stos
inc
lods
notl
mov
xor
dec
int
push
mov
and
adc
adc
adc
dec
jp
or
or
push
inc
and
jmp
andl
rcll
xor
xor
xlat
mov
loope
addl
loope
lret
shlb
imul
pusha
push
shrb
inc
mov
pop
lahf
ja
test
jne
pop
shll
dec
or
push
pop
adc
push
test
fwait
pop
aaa
repz
xchg
movsb
cmc
pop
popa
mov
mov
lock
adc
fisubrs
cmp
xchg
ja
outsl
push
insl
xchg
add
test
or
addl
hlt
add
jmp
adc
rclb
push
xor
push
pop
jge
xor
mov
push
dec
sbb
orl
aad
xchg
inc
lds
sub
xchg
and
pop
js
jmp
rorl
data16
jne
cmc
data16
shlb
in
jae
imul
add
loopne
lcall
inc
sahf
xor
sti
fisubrs
pop
and
imul
add
xor
jne
and
or
gs
inc
sbb
mov
cmp
outsl
sbb
or
popa
jno
push
mov
cmpsl
fs
pop
inc
inc
imul
mov
dec
inc
cmpsl
popa
adc
in
repz
pushf
das
cmp
imul
add
mov
dec
adc
iret
dec
inc
mov
xor
pop
adc
and
add
loope
imul
outsl
push
xor
xor
mov
prefetcht1
imul
mov
cmpsl
push
xor
mov
sarb
outsl
aas
add
adc
cmp
lret
insl
and
sbb
adc
xchg
xchg
lahf
lock
data16
pop
dec
push
cwtl
xchg
movsl
cmp
js
cmp
imul
and
lods
and
jne
xor
mull
inc
mov
mov
xor
dec
stos
aaa
jmp
popa
xor
mov
adc
mov
std
lods
lret
pop
outsl
inc
mov
shll
jecxz
xchg
es
xchg
lcall
andb
lods
out
jnp
xchg
movsl
push
xor
popf
adc
xor
push
cmc
pop
insb
xchg
cmp
cmp
dec
movsb
lcall
int
shr
sub
xchg
stc
neg
or
imul
inc
int
imul
jns
or
mov
and
int
fwait
lock
adc
xor
add
push
inc
xor
or
pop
add
je
inc
arpl
orb
push
mov
ljmp
rorb
mov
push
or
dec
jp
call
push
xchg
adc
xchg
adc
dec
ljmp
popa
ret
push
adc
mov
addr16
mov
iret
popa
inc
mov
lea
mov
xchg
rolb
pop
xor
pop
in
int
push
fisttps
hlt
andb
punpckhbw
xlat
or
add
dec
int
dec
dec
push
sbbb
xchg
popa
pusha
fucomip
int
pop
jno
aaa
and
sbb
std
adc
jg
xchg
arpl
sub
rcl
add
fstpl
xor
mov
imul
xor
rcll
inc
cmpb
stos
data16
ljmp
add
mov
add
xchg
pusha
std
jne
sbb
popa
and
inc
outsl
jnp
xchg
dec
pusha
sbb
cmpl
jge
cmp
imul
lret
sub
mov
inc
das
and
aad
cmpl
inc
ret
inc
xor
or
cmp
or
fs
pop
lea
mov
stos
push
sbb
mov
mov
adc
addr16
inc
subb
fbld
dec
mov
mov
cmp
inc
fwait
jge
dec
int3
push
dec
frstor
mov
sbb
inc
adc
cmp
jp
lcall
lcall
xor
popf
pusha
inc
imul
or
ja
addr16
pusha
or
sub
xchg
in
leave
adc
push
push
inc
push
dec
add
sub
cmp
scas
xchg
mov
ja
inc
fisubs
shll
inc
stos
inc
xchg
lcall
les
test
test
mov
js
bound
imull
dec
inc
add
aas
dec
cmp
lcall
les
or
pusha
mov
loopne
sub
jmp
push
pop
fstpl
ljmp
sub
inc
mov
and
mov
sbb
mov
lods
and
xor
lds
adc
or
mov
test
xchg
xor
or
dec
int3
lods
sbb
sbb
push
outsl
push
inc
std
sbb
xor
cmp
aaa
sbbl
aas
dec
shll
dec
and
outsl
dec
stos
in
inc
mov
mov
shll
mov
int
push
xchg
xlat
inc
out
xor
mov
xor
xor
inc
repz
xor
cwtl
sbb
mov
dec
xor
ret
add
dec
jno
mov
icebp
data16
pop
inc
test
mov
mov
adc
bound
lcall
adc
add
adc
dec
cmp
xchg
xor
dec
inc
xchg
sub
jnp
jp
cltd
imul
adc
iretw
add
dec
test
mov
dec
shlb
sbb
imul
jo
push
sub
dec
xchg
movsb
push
mov
mov
sbb
lahf
dec
movsl
out
inc
xor
xchg
inc
and
jnp
loopne
and
movsl
aad
adc
pop
cmp
inc
xor
gs
jno
mov
adc
inc
xor
sbb
adc
pop
dec
inc
dec
mov
dec
push
xchg
lds
scas
orb
dec
decl
cmp
mov
fwait
imul
bound
sbb
pop
add
mov
les
sets
fwait
adc
xchg
push
outsl
jecxz
cmp
fisubs
test
inc
sbb
sub
das
mov
cwtl
and
js
pop
sarb
jbe
popf
add
dec
inc
xor
pop
lds
lds
cmc
mov
cmp
sub
out
mov
and
mov
jmp
xchg
jns
mov
lock
xor
dec
mov
test
mov
sub
fildll
add
add
xchg
pop
sbb
cmp
sbb
out
aad
movsl
inc
mov
and
jnp
pop
rep
mov
jecxz
lcall
pop
push
lds
fwait
aam
test
mov
loope
or
rcrb
leave
pusha
push
xor
cmc
push
insl
mov
push
xchg
cmp
out
mov
and
fisubrs
and
scas
jnp
xor
js
mov
xor
ret
daa
dec
out
xor
int
leave
push
repz
pop
psllw
js
cmp
inc
inc
jge
popfw
add
in
add
xchg
hlt
fisubs
xor
pop
mov
push
jne
stc
addb
xchg
jnp
dec
push
shl
xor
imul
fiadds
es
add
lock
notl
xchg
mov
add
bound
jnp
add
aad
das
jae
or
xchg
mov
adc
sbb
int
sti
cmp
or
ftst
xor
and
pop
sub
dec
sbb
sub
xchg
push
lds
decl
add
xchg
test
xchg
movsb
pusha
rorb
sbb
xor
push
xor
add
or
inc
or
es
adc
negl
iret
mov
scas
xor
mov
jnp
add
adc
sub
cmc
mov
das
jne
and
pop
iret
repz
mov
andl
test
jns
mov
xchg
aas
mov
mov
adc
push
push
xor
xchg
jno
iret
inc
pop
push
mov
int3
pop
jmp
xor
lret
test
popa
push
xlat
adc
xchg
cmp
icebp
fsubrp
adc
push
icebp
cmpsl
mov
sbb
iret
int
bound
sub
or
sbb
jnp
pop
in
std
dec
ds
cmc
std
xor
lock
sub
test
push
adc
dec
mov
mov
adc
das
xchg
add
xor
mov
cltd
lahf
mov
add
aad
stc
cmc
push
mov
insl
test
fwait
shlb
or
lds
movsb
js
cmp
xchg
cmp
mov
mov
in
leave
fsts
rol
or
mov
ret
loope
dec
orb
repz
and
pop
aas
stos
sbbl
pusha
ret
xor
xor
test
inc
add
dec
add
sbb
sbb
push
add
sub
lods
testl
mov
mov
pop
cmp
and
inc
loopne
icebp
lcall
add
iret
out
mov
push
cmc
jg
data16
or
outsl
dec
roll
rorl
int3
cwtl
inc
cmp
pusha
and
gs
xorl
sbb
jnp
and
xor
pop
daa
lret
and
fstps
xor
sub
popa
push
xorb
xor
neg
popf
repz
ljmp
adc
jp
lahf
jmp
out
or
mov
mov
int
sbb
inc
jae
stos
or
sti
push
nop
and
sub
mov
sbb
or
ret
test
dec
xor
testl
or
push
shr
xor
inc
gs
hlt
dec
arpl
test
add
out
dec
jae
test
or
adc
and
in
lret
mov
xor
pop
frstor
jnp
or
rcr
and
xor
xor
mov
and
data16
sub
fldt
mov
outsl
pop
adc
fwait
int
add
fildl
jno
out
pusha
dec
add
mov
and
inc
in
cmp
mov
aaa
loope
dec
dec
dec
inc
sbb
pusha
dec
xor
aaa
mov
test
mov
cmp
adc
lret
gs
xor
fsubp
dec
mov
inc
movsl
inc
xchg
adc
imul
aas
lods
orl
push
xor
pop
cmp
push
xchg
cmp
and
mov
aaa
mov
loope
sbbb
or
test
or
or
loope
pop
rcrl
add
jg
add
imul
outsl
and
out
sbb
lods
mov
push
cmp
push
mov
add
pop
jns
and
mov
addr16
add
mov
and
jne
jmp
cmp
xor
leave
fwait
es
stos
inc
daa
lds
xchg
sbb
data16
mov
or
or
in
insl
pushf
es
push
sbb
pop
mov
repz
sub
pop
add
mov
lahf
stos
loope
stos
dec
out
daa
jne
adc
lcall
test
mov
sub
sbb
mov
dec
mov
lds
push
xor
push
adc
mov
xor
inc
andl
xor
sub
int
adc
ret
and
fwait
aaa
push
lcall
mov
test
stc
out
int3
pop
xchg
push
cmp
dec
cwtl
lock
cmc
adc
pop
mov
cmp
test
inc
jnp
xchg
adc
xlat
add
sbb
or
cmp
subl
adc
inc
mull
jge
lds
inc
std
test
xchg
mov
xor
sbb
popa
mov
adc
or
mov
push
test
inc
dec
mov
xor
int
inc
add
or
cmp
pusha
add
sbb
mov
pop
pushf
xorl
cmc
dec
cmpsl
data16
test
mov
push
ret
cltd
xchg
jnp
roll
pop
mov
out
adc
int
sub
ret
sbb
pop
push
add
sbb
inc
push
sub
lahf
sub
in
jae
xor
inc
adc
outsl
push
nop
test
xchg
aaa
xor
jp
ja
roll
cmp
sbb
mov
imul
sarb
leave
and
lea
outsl
jne
pop
push
repz
mov
insl
gs
hlt
jp
adc
dec
sbb
pop
inc
mov
into
lcall
xorb
aaa
in
testl
popa
push
jo
cmp
mov
mov
ja
daa
and
mov
aaa
add
aaa
mov
das
push
xor
push
inc
and
es
mov
pop
mov
sbbl
pop
loope
lcall
pop
or
inc
out
sbb
mov
xor
inc
outsl
push
mov
or
xor
or
repz
out
xor
scas
test
popa
xlat
dec
dec
andb
lds
popa
jge
ja
or
stos
movsl
sti
test
pop
icebp
jecxz
popf
pop
andl
test
dec
push
out
insl
and
add
inc
xchg
data16
popf
data16
data16
or
xor
sub
inc
jns
test
call
fisubs
fldcw
fwait
adc
add
dec
ja
jo
movsl
xor
popf
or
lods
aaa
addl
stos
dec
inc
mov
adc
imul
pop
or
mov
and
xchg
aam
gs
and
xorl
inc
dec
int
leave
add
rcrl
fiadds
rclb
flds
test
les
data16
movsl
inc
mov
xchg
or
cmp
mov
int3
stos
das
leave
ret
cmp
sbb
mov
inc
movsl
stos
jno
xchg
lcall
dec
ljmp
adc
das
or
shll
and
ficomps
imul
jmp
sbb
leave
mov
bound
popa
dec
pop
out
adc
mov
sub
sub
loope
or
stos
jno
cmp
jmp
daa
mov
sub
adc
rclb
xrelease
sub
add
sub
mov
add
mov
or
mov
pop
jp
cwtl
jno
mov
and
in
cmp
shlb
mov
test
data16
mov
rcrl
xchg
adc
dec
icebp
int
out
ret
mov
adc
test
xor
adc
out
lahf
xor
lahf
fwait
jno
inc
pop
mov
inc
rol
lahf
movsb
add
or
adc
or
dec
les
outsl
mov
xor
adc
pushf
fmuls
shrb
mov
call
loope
xor
jge
lcall
icebp
es
adc
insl
cmp
adc
addb
xor
dec
pop
shl
xor
sub
jno
in
mov
dec
cmpl
sub
push
adc
add
fld
mov
lds
jmp
or
mov
icebp
push
scas
push
mov
imul
xor
inc
push
addl
push
inc
push
push
lds
or
mov
outsl
out
or
mov
adc
xor
xor
loopne
test
pop
mov
in
adc
lds
fwait
mov
popf
gs
popa
shlb
aas
daa
pop
dec
xchg
mov
inc
and
lds
sbb
daa
push
icebp
pop
lds
dec
push
int3
sub
push
xchg
pop
out
bound
cwtl
popf
adc
mov
adc
push
mov
mov
stos
mov
dec
inc
xchg
adc
int
icebp
mov
and
repz
jmp
arpl
inc
idivl
push
xor
and
adc
add
int3
pop
add
xchg
cwtl
xor
jnp
mov
imul
xchg
sbbl
jge
pop
xor
test
add
cmp
fnstenv
leave
das
call
xor
push
mov
jmp
sbb
adc
arpl
leave
jnp
add
or
push
mov
sub
add
aad
jecxz
sbbl
stos
pop
mov
and
xor
ljmp
sbb
adc
rcrl
mov
jecxz
jnp
and
fwait
xor
and
xor
movb
call
test
xor
dec
and
mov
shrl
jg
shrl
push
outsl
inc
rorl
or
dec
mov
mov
or
and
xchg
xchg
int
adc
ret
or
aas
sbb
add
dec
gs
jae
lock
out
loope
ret
adcb
dec
sbb
shrb
push
scas
loop
lret
lret
fwait
add
nop
mov
inc
sarl
sbb
lods
lcall
mov
das
arpl
and
aaa
pop
mov
int
shr
test
dec
jnp
outsl
cmp
or
push
push
push
mov
fwait
repz
xchg
sbb
outsl
add
add
xor
dec
or
sbbb
mov
stc
xor
add
fnsave
mov
aad
mov
inc
push
adc
or
mov
pop
xor
add
dec
cmp
dec
cli
es
sbb
leave
xchg
dec
mov
inc
mov
testl
add
ss
pop
xor
test
add
mull
int
js
arpl
jne
push
scas
sbb
add
mov
shr
sbb
fwait
sbb
adc
mov
xor
mov
lahf
dec
xor
mov
dec
mov
inc
inc
xor
pop
gs
pop
dec
and
movsl
andb
xlat
pop
es
lret
mov
addb
xor
push
daa
int
or
ret
and
filds
pop
inc
sub
pop
prefetcht1
mov
add
aaa
fisttps
cmp
or
jae
push
inc
mov
outsl
loope
pop
mov
jne
icebp
push
xor
imul
jne
lds
add
fsts
das
mov
xchg
xor
mov
jo
mov
inc
dec
js
adc
popa
push
outsl
sbb
je
adc
aam
out
add
add
inc
jno
and
xchg
jo
imul
pop
dec
outsl
subl
or
mov
fucomp
cmpsl
js
lcall
lcall
shlb
es
push
hlt
sub
xchg
xor
xor
aad
dec
add
test
mov
es
das
daa
cwtl
inc
pextrw
push
gs
cmpsl
cwtl
inc
sub
mov
test
push
dec
stos
sbb
shll
sub
fwait
int
push
cltd
scas
int
adc
incl
call
inc
movsb
js
js
movsl
or
popa
sbb
idivl
adc
xchg
inc
psllw
cwtl
in
add
stos
mov
cwtl
shl
mov
lods
or
in
sbb
or
mov
dec
ret
add
int3
jp
movsl
lds
andb
push
dec
stos
dec
xor
mov
pop
mov
mov
jg
xor
push
xor
adc
and
inc
xor
inc
add
mov
lcall
popa
add
dec
inc
outsl
dec
xor
sbbl
sub
pop
xchg
xchg
xchg
dec
out
or
jmp
or
mov
add
adc
icebp
sti
sbb
dec
add
outsl
std
jb
mov
add
adc
cmp
enter
inc
mov
jno
jne
adc
push
mov
and
pusha
and
push
inc
shlb
inc
mov
stos
pop
mov
jmp
pop
mov
cmpsl
mov
fistl
dec
lock
xor
pop
int
fimuls
sbb
inc
popf
aad
test
lock
pop
addl
cmc
dec
shlb
xchg
das
dec
cmp
jmp
mov
nop
test
mov
adc
mov
sbb
ja
push
andl
addl
imul
shl
mov
xchg
data16
or
outsl
adc
adc
popa
repz
loope
icebp
push
xor
xor
xor
jne
and
lcall
cwtl
inc
lods
addl
and
cwtl
cmc
scas
jnp
out
adc
pop
push
or
shlb
mov
adc
ljmp
xor
xor
or
xchg
repz
lret
add
mov
mov
insb
push
adc
mov
xchg
mov
mov
jge
mov
xchg
popa
fisubrs
pusha
inc
dec
mov
adc
cmpsl
cwtl
xor
xor
jg
and
addb
mov
test
push
int
dec
stc
push
dec
inc
sbb
xor
popf
push
int
outsl
mov
int
cmpsl
js
orb
jnp
jne
xor
movsl
ss
fisubs
int
out
outsl
arpl
shrb
cltd
mov
jnp
add
xor
inc
fwait
aaa
js
cwtl
inc
push
sbb
xor
mov
sub
sti
and
sbb
arpl
pop
je
int
adc
inc
xchg
rorb
data16
jg
call
lcall
xchg
and
inc
add
mov
popa
adc
xchg
scas
js
push
arpl
dec
cwtl
inc
movsl
ja
xchg
xchg
xor
or
outsl
add
insl
mov
dec
fistpll
int
add
add
inc
outsl
adc
icebp
xchg
dec
push
addr16
popa
and
int
push
imul
int
adc
inc
and
aaa
sbb
mov
mov
inc
int
push
add
ficoms
comiss
pop
mov
inc
pop
sbb
dec
mov
cmpsl
inc
xchg
pusha
push
mov
xor
ss
scas
cmpsl
mov
cmp
jnp
pop
mov
or
addl
dec
loopne
xor
push
insl
and
cmpsl
sbb
add
repz
icebp
xchg
outsl
dec
inc
fstpt
arpl
mov
add
insl
icebp
shl
mov
outsl
aaa
mov
cmpsl
aas
dec
cmc
es
cmp
andb
rcr
and
adc
popa
or
rcll
jns
cmp
cmp
adc
pop
cmc
fidivs
aaa
mov
orl
dec
adc
lret
fidivs
inc
xchg
push
mov
xchg
sub
sar
sbbl
dec
fcmovnbe
cmp
xor
test
inc
outsl
adc
inc
adc
daa
dec
push
add
popf
cmc
xchg
inc
mov
jecxz
shr
xor
or
out
xor
movsb
and
pop
pop
mov
adc
inc
add
aad
push
inc
fbstp
pop
int3
fimuls
lcall
xchg
mov
cmc
mov
push
leave
mov
je
xlat
sub
fwait
sbb
fbld
fcmovnu
and
and
jge
adc
test
push
das
data16
xor
sbb
xor
ret
js
ret
add
adc
stc
sbb
push
ja
adc
mov
aaa
ret
rorl
and
lods
lcall
mov
jecxz
jecxz
mov
add
xor
js
fwait
iret
out
xor
icebp
mov
and
dec
loope
push
add
push
loopne
and
jno
js
jp
jno
add
dec
out
popf
xchg
adc
fsts
shll
pusha
mov
sarb
leave
cmp
xchg
jns
or
add
pop
inc
test
mov
shll
ret
fbstp
pop
aaa
mov
cltd
xor
fnsave
and
cmp
repz
jo
inc
mov
aam
adc
pop
sub
sbb
popa
inc
sbb
vunpckhpd
int
xchg
push
dec
mov
movsb
or
fldcw
int
xchg
inc
test
roll
mov
mov
and
pushf
rorl
es
iret
inc
mov
and
inc
mov
or
mov
dec
lcall
mov
sub
lds
sub
jae
jle
int
add
aaa
add
gs
fwait
adc
push
xor
inc
aaa
imul
arpl
mov
mov
or
cwtl
jne
add
or
imul
sub
mov
shrl
adc
jno
fwait
popa
das
xor
push
roll
dec
cmp
pusha
sti
gs
push
roll
and
mov
adc
popa
adc
push
mov
int3
dec
ret
adc
es
mov
aad
test
dec
cmp
add
rep
push
outsl
popa
movq
pop
inc
adc
pop
jecxz
cwtl
icebp
mov
rorl
int
bound
mov
add
sub
sbb
mov
or
dec
lret
aaa
mov
or
jae
or
sbb
and
pop
pop
jnp
inc
xor
ret
xchg
sub
loope
pop
mov
rorl
add
inc
or
dec
aad
mov
jne
je
ret
mov
test
adc
push
adc
call
daa
mov
adc
out
mov
or
push
outsl
lods
call
cmp
or
sub
xchg
mov
cmp
mov
or
jmp
or
inc
mov
js
in
mov
mov
mov
jnp
mov
int
lock
shl
xchg
and
add
lods
daa
movsb
or
adc
cmp
inc
cmp
fimuls
pop
adc
pop
sub
mov
andl
arpl
push
xchg
ret
jecxz
icebp
cwtl
dec
js
xchg
fwait
movsl
mov
jmp
xor
sub
jns
bound
int3
stc
test
aaa
and
mov
adc
or
loope
das
cwtl
adc
adc
mov
push
das
adc
xchg
mov
movsb
sbb
and
jns
and
movsb
ja
sbb
lods
popf
mov
mov
das
cwtl
jecxz
push
mov
arpl
addr16
and
jnp
jae
ss
call
dec
shlb
lds
inc
mov
adcl
int3
mov
fstps
add
loop
cmp
in
adc
andl
decl
neg
add
mov
jae
repz
shll
xor
jmp
call
pop
dec
mov
loop
test
aaa
xor
add
out
xor
rcl
adc
push
int
push
ret
fstpt
or
mov
mov
add
push
addr16
adc
or
pop
dec
push
shlb
pop
xchg
and
jecxz
sub
xchg
mov
cmp
pop
aaa
test
xchg
pop
adc
stos
xlat
cmpsl
add
push
and
jno
aad
imul
andl
loop
outsl
inc
std
outsl
aas
insb
xor
and
jp
mov
ja
push
xchg
jnp
xor
xor
inc
lds
addr16
sub
test
and
fisubs
lods
orl
es
cwtl
lock
pop
inc
cmc
adc
js
lahf
popa
test
sbb
jnp
aaa
jmp
adc
ja
xor
mov
das
add
mov
in
lret
data16
mov
inc
jmp
xchg
or
popa
enter
gs
outsl
push
int
inc
sbb
adc
pop
inc
xor
xchg
push
in
dec
push
mov
add
mov
testl
fcmovnbe
add
push
unpckhps
daa
cmc
ja
adc
bound
popf
lods
push
leave
jp
aaa
out
xor
popf
cmc
mov
dec
pop
mov
push
xor
sbb
push
push
inc
out
push
adc
jmp
pop
lcall
fdivrp
adcb
mov
adc
push
xor
adc
and
cmp
int
xchg
xor
and
sub
pop
mov
add
shr
or
and
cmpl
push
push
adc
dec
fnsave
mov
call
test
mov
es
rcrw
les
pop
fldl
data16
add
test
mov
in
fisubrs
or
xchg
xchg
pop
add
sbb
sub
pop
sbb
test
fwait
sub
arpl
movb
aam
addl
push
pop
std
sub
mov
sub
mov
cmp
lds
pop
lock
adc
pop
das
xor
inc
and
cmp
lods
pop
inc
test
sbb
fistps
mov
push
xor
ljmp
add
sbb
and
pushf
test
es
cwtl
pop
popa
loope
xchg
rorb
jecxz
xchg
xchg
pop
dec
cwtl
push
mov
fisubs
xor
lea
decl
data16
and
loop
jne
jae
int3
cmp
add
cmp
xchg
adc
mov
or
push
sub
xchg
jne
mov
cmp
and
outsl
push
mov
orb
popa
cmp
movsb
ficoms
rcrl
rcrl
xor
vpunpckhdq
insb
push
jns
test
mov
les
push
mov
shrb
xchg
jp
outsl
push
xlat
push
cmpsl
fwait
shr
xor
add
rcrl
jnp
cmp
vmptrst
sub
xor
lcall
lcall
adc
cmc
fimuls
pop
mov
test
imul
icebp
call
dec
cltd
xchg
lcall
pushf
es
pop
push
xchg
pop
addr16
and
js
inc
rorl
dec
aad
adc
push
fwait
push
int
lcall
orb
jg
popa
add
addl
aaa
push
xor
cmp
insl
add
mov
xlat
outsl
jecxz
xchg
mov
add
cmp
add
adc
dec
imul
or
pop
adc
test
fildl
xor
sub
aad
pop
add
ja
inc
mov
scas
fimuls
js
sub
lahf
adc
out
int
div
sub
int
call
sbb
dec
mov
int
jmp
mov
jp
push
fnstenv
fwait
int
cwtl
inc
inc
popf
push
out
xor
popa
lea
adc
mov
sbb
pop
sbb
mov
push
add
scas
jg
mov
or
mov
lods
lcall
cwtl
push
outsl
shlb
fstpl
sbb
cmp
int
lret
inc
stos
cmp
dec
adc
fwait
pop
and
push
xchg
fnstenv
lea
lcall
gs
add
push
out
mov
xchg
xchg
sbb
or
or
lods
sbb
cwtl
adc
iret
daa
lcall
stos
or
and
into
lods
cmp
dec
lahf
mov
mov
loopne
lea
fwait
cmpsl
imul
cmc
and
inc
andb
xor
insl
imul
int
dec
and
das
int3
cwtl
xor
xchg
pop
jnp
std
push
inc
push
mov
mov
jmp
arpl
cmp
ret
add
lret
loop
ret
mov
les
adc
xchg
fwait
add
lcall
data16
and
jg
cwtl
adc
inc
mov
shrb
xchg
dec
les
or
bound
mov
stos
sbb
xchg
mov
outsl
std
lret
lock
pop
push
pop
xor
or
sub
and
sbb
fistpll
out
dec
call
cmc
pushl
fldl
and
xor
rorl
roll
dec
inc
fwait
jb
add
inc
mov
scas
lcall
rsqrtps
mov
push
and
shll
daa
mov
fs
mov
jmp
xor
xor
push
sub
xchg
pop
jns
hlt
dec
cmp
fwait
xor
call
lock
dec
daa
movsl
cmpsl
ret
in
int
aad
sysret
dec
adc
js
imul
in
lret
and
sbbl
xlat
mov
pop
adc
push
xor
mov
mov
lcall
adc
jmp
loop
xchg
xor
gs
popf
sbb
shrb
dec
rcll
fwait
add
shl
iret
ja
shll
test
rcrb
mov
or
lods
or
pop
adc
cmc
stos
push
aad
inc
push
inc
les
mov
and
test
imul
dec
push
jnp
in
stos
xchg
cwtl
push
add
fidivrs
arpl
call
xor
mov
xor
mov
sti
lods
dec
mov
xor
test
xor
push
pop
add
out
inc
ret
and
mov
dec
ret
cmpsl
mov
push
adc
cltd
pop
xor
ret
mov
adc
test
sbb
daa
pop
stc
sbb
lock
shll
xorl
mov
lock
in
notl
sbb
lea
dec
dec
loop
sbb
or
jbe
neg
dec
adc
pop
add
les
das
inc
inc
and
mov
adc
pop
pop
sbb
orb
mov
add
xchg
pop
cmp
mov
mov
mov
add
xor
loop
repz
insl
or
jae
inc
pop
lods
inc
leave
lcall
cmpsl
inc
mov
lods
stos
jne
xor
sbb
inc
cmc
and
inc
das
inc
adc
push
inc
adc
dec
loopne
stos
sub
rcrl
jnp
cmc
xor
inc
and
jge
xor
jne
and
push
mov
or
loopne
xchg
and
gs
es
and
lds
mov
aad
inc
jns
mov
xlat
stos
and
pop
stc
mov
xor
js
gs
stos
xchg
inc
mov
push
jns
out
mov
dec
cmpb
inc
aaa
push
dec
lcall
push
repz
push
rcll
js
mov
or
dec
cwtl
push
sarl
mov
add
daa
dec
inc
push
cli
inc
push
xor
inc
add
int3
insl
mov
js
rorl
xorb
inc
jns
xor
adc
and
sbb
fstpl
lds
fwait
cmp
outsl
pop
rorl
adc
add
dec
daa
int
insb
add
scas
testl
push
xchg
rolb
mov
test
dec
sub
lods
xchg
test
cmpsl
mov
mov
push
pushf
sti
test
fisubs
inc
dec
andl
pop
pop
xor
int3
adc
and
push
mov
cmp
das
jno
and
loope
sbb
sub
ja
daa
xor
negl
lds
out
cmp
ficomps
shrw
xor
aad
adc
sub
data16
push
data16
pop
pop
les
sbb
xlat
inc
leave
lea
mov
lret
mov
xor
adc
adc
in
int
out
or
aad
test
jge
pop
or
fsubrp
adc
mov
push
jnp
xchg
sub
adc
dec
inc
aaa
xchg
insl
cltd
js
xchg
mov
fcmovnb
xchg
sub
fwait
xlat
xchg
std
lret
mov
xchg
iret
cwtl
xchg
movsb
mov
cmp
cmp
sbb
mov
mov
outsl
add
jno
insl
pop
aad
add
cmp
fwait
icebp
sti
xor
sub
adc
es
call
iret
outsl
push
xor
in
xchg
dec
push
add
mov
xchg
dec
push
jg
popa
rorb
les
dec
jp
sbb
test
dec
leave
mov
cwtl
stc
jns
push
sbb
mov
pop
push
push
mov
ficomps
cmp
test
stc
cwtl
hlt
pop
xor
dec
adc
adc
stos
xchg
lock
or
pop
xchg
leave
pop
lds
jp
inc
stc
cmp
andb
xor
jbe
scas
inc
movswl
adc
pop
cmp
int
sbbl
mov
inc
shl
pop
push
aad
inc
int
xor
repz
or
jne
rcrb
or
mov
sub
movsl
mov
insb
inc
xor
or
xchg
dec
inc
das
or
xchg
aas
xchg
inc
imul
dec
xor
arpl
sub
xchg
shrl
sbbb
xor
jno
icebp
lahf
cmp
sub
and
pop
xchg
dec
push
lcall
aad
sahf
sti
dec
mov
jge
xchg
lea
or
sbb
mov
jnp
in
lds
add
xchg
xchg
xor
lcall
mov
sbb
add
jp
imul
xor
xor
add
mov
ds
rorl
sti
daa
cwtl
mov
inc
sbb
hlt
push
scas
inc
repz
fnstcw
daa
sub
mov
int3
loopne
jnp
jmp
jnp
push
mov
movsb
popa
stc
aad
push
or
inc
xchg
sub
xchg
add
mov
vmwrite
jnp
xor
mov
mov
in
mov
cmpsl
pop
movsb
fnstcw
imul
jnp
insl
jmp
push
hlt
sbbl
es
push
int
int
xor
mov
adc
push
sub
fnstsw
add
imul
mov
mov
inc
sbb
ja
sbb
lods
scas
scas
in
jecxz
xchg
xchg
inc
pushf
xchg
jmp
dec
lock
dec
adc
add
jmp
mov
bound
sub
xchg
insl
sbb
xor
dec
mov
pop
and
aam
lret
pop
imul
inc
cltd
rcl
push
and
fnstsw
mov
jmp
lret
out
mov
outsl
push
std
rcrb
sbb
dec
jmp
mov
vmovhpd
dec
cmc
pop
movsb
aaa
jnp
and
rcll
dec
outsl
push
rcl
add
xor
push
mov
mov
cmp
out
popl
repz
adc
add
xor
bound
sti
sub
pop
mov
rcll
or
es
daa
jne
push
out
jae
out
sbb
mov
cmp
or
jae
fucomip
int
xor
lea
shrl
pusha
fisttpll
jno
xlat
ljmp
push
sbb
cmp
es
mov
aas
mov
jno
push
hlt
test
or
cmpsl
lret
lea
mov
mov
std
xchg
out
dec
ljmp
inc
rcrl
mov
pop
adc
popa
fbstp
jmp
popa
andb
out
imul
popf
xchg
push
pop
push
ret
and
mov
sub
cmp
push
dec
cmpsl
xchg
jmp
ja
vpcmpgtd
jnp
xlat
out
dec
push
lea
xchg
fidivrs
jns
xchg
mov
lock
dec
rcl
js
lcall
sub
icebp
pop
imul
mov
std
aaa
adc
aas
loope
mov
rcrl
aad
push
xor
adc
xor
and
inc
popa
xchg
add
inc
lcall
fwait
inc
xor
dec
cmpsl
popa
ret
inc
sub
insb
ret
out
dec
cmc
cmp
add
imul
xor
test
pop
mov
mov
mov
gs
xor
or
outsl
scas
sti
repz
scas
ret
and
repnz
inc
xchg
sbb
roll
sbb
cmp
lods
and
mov
push
arpl
jp
daa
movsl
xchg
sbb
scas
push
addl
orb
jmp
adc
sbb
dec
loopne
sub
add
pop
mov
and
movsb
idivl
pop
addl
stos
loop
xchg
pop
xor
ficoms
adc
popf
push
movsb
dec
sub
adc
sar
subl
jp
bswap
jns
xchg
fistpll
lcall
mov
jne
and
and
outsl
add
adc
or
adcb
bound
dec
xchg
ja
icebp
push
adc
lcall
orl
outsl
xor
mov
dec
push
inc
adc
jecxz
cwtl
popf
iret
fcmovnu
mov
dec
push
xchg
xor
out
add
xor
jno
popf
pusha
sbb
shrl
mov
roll
fwait
sbb
in
into
stos
sbb
dec
mov
adc
aaa
ss
sub
or
pop
push
fisubrs
adc
inc
mov
add
push
xor
jne
and
push
fstpl
imul
push
mov
adc
xor
mov
lcall
xor
inc
jns
sahf
jno
mov
xor
sbb
cmpsl
fs
bound
or
test
mov
hlt
bound
frstor
cmc
sub
mov
das
pop
adc
dec
xor
mov
fwait
mov
or
push
xor
std
rorl
or
push
xorb
inc
icebp
mov
leave
loop
std
in
and
aad
pop
repz
js
and
fnstcw
xchg
cmpsl
xor
push
out
adc
add
gs
loope
or
dec
push
add
xor
or
shrl
dec
push
fistps
lds
sbb
xlat
cmp
lcall
cmpsl
loope
addr16
lods
adc
and
shl
rclb
outsl
ret
dec
pop
mov
fwait
xor
adc
jno
fiadds
pushf
sbb
jne
rorb
push
add
insb
jbe
out
sbb
xchg
js
cwtl
fnsave
cmp
cmp
and
es
das
sbb
fisubrs
lret
in
add
pop
cmp
in
sbb
les
xor
stc
add
dec
lcall
mov
xchg
jae
xor
cmp
inc
jge
dec
pop
cwtl
dec
std
in
xchg
loope
adc
aad
outsl
shrb
stos
jnp
cmp
adc
sbb
popa
cmc
fwait
movsb
pop
dec
shll
inc
add
mov
mov
mov
lock
cmp
imul
std
fists
sbbb
popf
dec
shlb
es
push
int
rcpps
shll
js
arpl
arpl
les
test
dec
unpckhps
arpl
sub
cwtl
cmp
addl
inc
dec
xor
outsl
and
inc
add
fwait
sarl
jne
sbb
fwait
shrb
inc
push
sbb
adc
ljmp
push
xor
adc
inc
adc
lds
add
loope
dec
inc
mov
cwtl
fisttps
sbb
push
stc
cmp
insb
inc
movsl
mov
jnp
mov
xchg
popf
pop
or
fisubrs
jnp
sbb
insl
sub
jge
test
lahf
shr
dec
test
xor
mov
adc
cmc
cwtl
setnp
loop
mov
dec
mov
push
int
push
xchg
and
jp
lret
inc
and
sbb
jg
push
mov
xor
push
sbb
xchg
mov
mov
xchg
cmp
mov
mov
mov
adc
pusha
ss
iret
mov
mov
das
or
imul
popf
add
inc
jns
xor
pusha
or
es
cwtl
push
and
imul
test
movsl
stc
jo
aaa
fwait
sbb
ja
xor
addr16
xchg
pop
addr16
xor
mov
gs
ffree
xor
pop
stc
rcrl
push
pop
pop
scas
add
fisubs
int
mov
imul
cmpsl
cmp
pop
test
jp
xor
jnp
mov
shrl
pusha
ss
mov
dec
movsl
pop
lcall
mov
mov
es
ljmp
lcall
mov
aaa
insl
fstpl
add
lds
pop
dec
xchg
push
push
out
int
mov
pop
push
movsl
jg
adc
mov
vmovntps
test
cmpsl
mov
or
add
xchg
inc
cmc
stc
shlb
inc
sub
pusha
inc
fldcw
push
mov
sbb
dec
jecxz
cmp
fwait
aas
lea
or
and
sub
dec
add
pop
lahf
jae
mov
sbb
aam
mov
das
cmp
push
jne
es
adc
and
lock
cltd
psraw
adc
xor
sbb
xchg
dec
inc
out
sub
es
xchg
shr
push
rorb
imull
xor
dec
sbbb
roll
adc
mov
mov
mov
mov
pop
popf
andb
sti
stos
push
xchg
mov
mov
xchg
bound
fwait
inc
popf
sub
cltd
inc
xchg
push
adc
sub
sbb
pop
dec
movsl
lds
xor
push
jmp
jp
cmc
or
inc
stos
fisubrs
test
aad
pop
xchg
sbb
mov
orb
cmp
mov
mov
mov
inc
leave
aaa
jns
cmpsl
xor
or
insb
fcos
add
int3
inc
pop
cmp
xor
jns
cmpsl
aaa
mov
popa
pop
push
xchg
aaa
jns
movsb
or
shrl
mov
je
subl
notl
cwtl
test
and
and
push
lods
gs
aas
xchg
in
pop
lods
rorl
lock
push
mov
inc
imul
xor
mov
mov
cmp
adc
pop
xchg
sub
mov
push
shr
data16
xor
mov
popf
xor
fildll
js
leave
aaa
pop
cmp
dec
jnp
lahf
sub
gs
fnstsw
push
mov
data16
jnp
out
dec
push
sub
and
sbb
sbb
xor
dec
xchg
push
xchg
dec
push
insl
add
imul
add
repz
and
adc
xlat
iret
subl
lods
lock
cwtl
adc
inc
add
mov
rcrl
adc
or
mov
aad
mov
and
sub
pushf
adc
xor
std
aaa
pop
xor
jnp
movsb
mov
xchg
pusha
ret
fisttpl
rcrl
jecxz
divl
or
lock
arpl
aad
push
adc
and
adc
aam
sub
adc
repz
mov
dec
push
mov
pop
inc
shrb
and
jne
fisubs
xlat
mov
xor
sarl
mov
xchg
sub
dec
das
stos
and
add
scas
ret
scas
das
outsl
cmp
daa
xchg
xor
and
mov
lods
aaa
jmp
loope
jmp
outsl
roll
mov
adc
loope
int3
jp
iret
or
jo
add
int
sub
cmp
inc
pop
jmp
xchg
fistl
int
lcall
loop
cmp
mov
dec
dec
xchg
mov
fldenv
hlt
lcall
sub
mov
cltd
popa
mov
sbb
sbb
and
out
or
std
adc
and
xor
sbb
sub
sub
dec
leave
fldcw
inc
and
pop
adc
mov
inc
mov
inc
jne
push
add
lret
mov
int
mov
js
mov
roll
sub
sbbl
fwait
push
xor
data16
sub
add
lret
mov
xchg
push
inc
mov
popa
dec
in
xor
push
inc
repz
inc
adc
dec
lea
xchg
jns
xor
rcrl
stc
shlb
es
insl
das
jno
jns
jbe
mov
pop
cmp
jp
test
bound
lea
data16
loopne
xchg
xor
or
sub
sbb
hlt
push
movsl
repz
mov
inc
adc
lcall
sbb
jmp
adc
sbb
ud0
ret
sub
popf
xor
push
pushf
mov
inc
mov
and
test
aas
scas
shll
insl
ss
xor
fistps
dec
mov
push
popa
das
cmp
inc
out
xor
cmc
nop
mov
sub
lds
dec
dec
mov
jg
add
fisubs
outsl
inc
or
pop
jbe
dec
xor
pop
int
xor
jnp
loope
lcall
pop
push
fstps
sbb
jnp
test
mov
xor
and
jp
add
mov
lods
fwait
or
push
cmc
es
fldenv
shll
out
popl
subl
sbb
dec
xor
ja
push
outsl
or
aaa
add
mov
adc
mov
jmp
sbb
int
lds
lock
jmp
or
inc
rcll
mov
and
aas
inc
repnz
int
fwait
repz
jnp
sbb
mov
pop
imul
mov
and
roll
sbb
mov
mov
inc
daa
and
mov
inc
leave
loop
pop
mov
pop
in
sti
mov
js
pusha
jns
out
mov
xchg
sarb
or
add
mov
xorl
or
ret
imul
add
xchg
icebp
pop
adc
test
lods
roll
pop
addr16
orb
sub
hlt
and
jo
aaa
lods
roll
les
dec
jp
xlat
inc
jns
insb
or
xor
fisubs
push
and
rcrl
loope
dec
loop
gs
inc
pusha
shrb
lea
xor
in
movsl
xchg
loopne
test
mov
frstor
adc
lcall
adc
push
mov
mov
mov
xchg
test
and
xor
mov
and
test
call
lods
dec
xor
fwait
lds
lahf
sub
hlt
ficoms
and
sbb
jno
ss
fwait
xchg
pusha
addl
rol
or
push
cmp
xor
icebp
js
mov
dec
roll
adc
test
sub
inc
lret
xchg
and
jne
push
daa
daa
aad
inc
xor
mov
loopne
sub
dec
js
lahf
aaa
mov
aaa
fwait
push
xchg
cmpsb
jns
rcrl
das
arpl
push
adc
das
imul
sbb
imul
xchg
pop
push
roll
icebp
jae
outsl
or
push
add
lcall
adc
ja
mov
sbbl
mov
lcall
dec
cwtl
inc
iret
mov
popl
push
in
or
fldln2
aaa
call
mov
roll
push
dec
sub
mov
cmp
cmp
mov
loop
add
sbb
shrb
outsl
dec
push
iret
mov
movsb
sbb
xor
js
pop
inc
cmc
inc
int3
xchg
aas
gs
sbb
and
lahf
and
cwtl
adc
jae
mov
data16
dec
pop
xchg
push
cmp
insl
mov
mov
movsl
outsl
lods
pop
test
mov
lcall
out
dec
mov
pop
mov
scas
negl
cmp
fists
xor
xor
mov
xchg
std
pop
and
adc
in
mov
adc
pusha
add
add
pop
ja
mov
cmp
rcl
push
rorb
rcll
xchg
mov
es
iret
icebp
cmp
push
cmp
dec
mov
imul
inc
mov
sbbb
mov
sbb
int
inc
mov
push
lcall
jo
dec
std
jnp
sbb
mov
scas
sbb
shlb
cmp
sarb
popf
outsl
out
or
and
dec
mov
js
push
push
xchg
sub
cltd
adc
jnp
lds
ret
mov
ljmp
mov
xor
data16
cwtl
add
shrl
xor
push
mov
or
push
mov
mov
mov
xor
js
es
mov
dec
add
jmp
icebp
sbb
push
andl
int
aaa
push
addr16
pop
mov
push
jns
pop
sub
test
cmp
dec
xor
rolb
add
xchg
cltd
popa
and
fisubs
fnstcw
aam
push
mov
rcll
xor
out
or
insl
ds
aad
movsl
inc
lock
push
jne
movsb
dec
testb
in
sub
push
lds
add
mov
pop
add
adc
pushf
xchg
popf
insl
mov
and
sub
imul
or
mov
int
icebp
es
mov
mov
xor
jnp
data16
aaa
mov
or
xchg
xor
xor
adc
cmp
int
xor
xor
adc
les
dec
ja
icebp
js
or
xchg
dec
xchg
or
sbb
stos
xor
adc
adc
mov
pop
add
lcall
adc
xlat
rdtsc
xor
add
cmc
in
aaa
jecxz
inc
test
ret
repnz
or
and
push
adc
xchg
push
dec
jmp
push
je
pop
movsb
inc
add
mov
popa
addr16
inc
sbb
add
sbb
data16
popf
cmpl
push
out
fidivrs
mov
sbb
pop
orl
fistl
int3
add
pop
mov
push
cmp
xchg
idivl
push
sarl
aad
mov
int
cmp
xor
push
adc
or
xchg
frstor
shlb
shlb
les
lcall
and
fcmovnu
and
outsl
mov
inc
adc
mov
sub
push
lea
mov
cmp
mov
jno
aad
test
daa
lcall
add
popf
add
xor
pusha
shrb
add
mov
testb
inc
xor
mov
mov
aad
rep
jecxz
aad
call
flds
xchg
add
xchg
jge
int
mov
mov
lret
add
jecxz
xchg
push
out
inc
cmp
addl
push
cmpl
das
inc
mov
andl
cwtl
shrb
lods
es
sbb
popa
ret
mov
sbb
push
xor
jb
rorl
mov
or
adc
and
mov
js
xor
mov
mov
mov
sub
aam
shll
or
cmp
xor
or
push
inc
iret
pop
sbb
popf
or
or
in
int
inc
jno
inc
repz
adc
into
sbb
inc
xchg
add
lcall
idivl
push
xor
out
adc
insw
inc
mov
push
cmp
pop
mov
aad
pop
scas
pop
dec
pop
les
rorl
or
sbb
add
movsb
or
adc
scas
int3
ljmp
dec
test
ja
jg
rorb
jae
mov
mov
inc
int3
sub
xor
or
add
mov
addr16
xor
adc
orl
ret
or
lahf
cmp
push
cmpsl
sbb
int
add
fbstp
and
dec
lds
xor
es
cmpsl
and
mull
orl
fimuls
mov
gs
sbb
push
cltd
xchg
in
push
stos
pop
sbb
inc
loope
stos
jp
push
lret
jbe
adc
aad
loope
jecxz
xor
or
and
dec
sbb
arpl
arpl
cmpsl
mov
mov
movsb
add
pop
and
mov
pop
or
pusha
inc
aas
or
cltd
sti
out
xor
ret
mov
outsl
push
jne
mov
mov
push
dec
js
cmpsl
fldl
popa
cmp
inc
hlt
fisubrs
popa
or
mov
test
push
jnp
cmp
cmovae
shlb
es
jp
sub
adc
sbb
in
fwait
dec
mov
int
mov
hlt
fidivrs
jnp
dec
xor
dec
dec
push
pop
test
popf
mov
pop
xor
js
stc
adc
mov
bsr
jae
pop
xor
jmp
inc
inc
std
xchg
or
and
xor
or
push
outsl
push
outsl
inc
in
sbb
inc
mov
es
or
xor
arpl
and
xchg
lcall
xchg
repz
roll
outsl
shlb
repz
out
add
xor
data16
add
adc
adc
int
push
loope
xchg
frstor
int
ja
shll
dec
dec
add
aad
cmp
jp
out
xchg
inc
outsl
inc
mov
sti
ret
pop
push
rcrb
push
xor
movsb
bound
sbb
gs
push
jmp
dec
adc
and
leave
add
pop
dec
stos
xlat
or
push
rorl
loope
orl
dec
sub
stc
xchg
sub
xchg
pop
jno
or
jno
xor
sub
jecxz
sbb
int
adc
ret
test
out
jecxz
sub
and
jno
jnp
pop
sub
jmp
popf
jge
and
cwtl
jne
jbe
out
outsl
xchg
push
shrb
sbb
adc
inc
aas
rcrl
xchg
pop
bound
jmp
mull
ja
dec
movsl
pop
xor
lea
or
adc
and
xchg
es
sub
sub
mov
mov
sbbl
hlt
es
inc
es
cwtl
in
xchg
dec
loop
add
pop
or
and
mov
or
popa
mov
enter
inc
dec
int3
lcall
or
mov
test
icebp
lcall
les
pusha
fcom
cmp
fiadds
outsl
pushf
ljmp
dec
lds
pop
inc
sub
mov
scas
xchg
xor
xor
repnz
imul
mov
lds
je
jae
adc
inc
rcrl
jp
xorb
mov
repz
lcall
push
xor
lods
movsl
inc
daa
les
lds
push
inc
xchg
aam
stos
dec
leave
xchg
mov
sbb
ret
sub
push
iret
mov
popa
push
mov
sub
add
or
adc
or
push
das
cltd
es
cmp
inc
shrb
or
out
cmp
lods
inc
imul
insb
pop
dec
sub
imul
pop
push
xchg
test
lret
cmpsl
lcall
mov
loope
cmp
int
test
lods
lods
push
fldt
xor
shrb
or
cmp
adc
xor
int
rorb
or
lcall
mov
mov
or
adc
test
cmpsl
dec
xchg
xchg
out
in
and
xchg
sub
mov
in
cmp
cmc
jnp
or
das
dec
leave
add
imull
push
dec
pop
leave
pusha
inc
shll
pop
gs
aaa
sub
jnp
dec
rorl
cmp
sub
outsl
cltd
mov
xchg
inc
pop
inc
ja
lods
mov
and
outsl
jecxz
and
add
inc
shrl
sub
adc
bound
shrl
int
add
fldenv
std
outsl
mov
aam
pusha
push
xor
cmp
addb
cmp
xchg
jo
sti
gs
and
jns
add
leave
push
mov
sti
inc
and
and
sub
aam
push
jnp
or
and
call
inc
rclb
adc
daa
cwtl
jnp
xor
push
adc
and
ret
mov
mov
int3
lcall
push
mov
rorb
xchg
fildl
imul
aad
outsl
inc
push
inc
add
js
or
jbe
xor
mov
stos
leave
cmpsl
int
pop
les
mov
xchg
mov
mov
arpl
test
sar
dec
adc
dec
loopne
mov
fisubs
and
cli
out
test
ror
pusha
inc
inc
das
test
push
cmp
sub
add
xor
adc
add
addr16
and
int
xor
xchg
iret
icebp
dec
bound
les
jmp
add
lds
fwait
cmp
jmp
sub
xchg
inc
addl
fwait
xor
ret
icebp
adc
test
ja
sub
dec
pop
mov
movsb
pusha
rcrl
push
pop
test
adcl
fisubrs
test
popa
inc
adc
pusha
dec
les
xchg
ret
inc
mov
lea
adc
jns
int
andb
inc
rcrl
push
rcrl
inc
push
or
jge
xor
mov
xor
popa
jmp
popf
in
or
and
mov
arpl
add
add
inc
jne
mov
dec
stos
pusha
dec
xlat
mov
ljmp
and
adc
sbb
add
negb
xor
mov
aaa
ret
mov
xor
dec
sub
dec
push
lea
push
icebp
xchg
aam
push
arpl
dec
mov
sti
adc
lret
inc
mov
add
sbb
inc
pop
mov
add
fisubrs
orl
or
jnp
push
mov
popa
dec
int
sbbb
iret
pop
sbb
or
xchg
sub
inc
repz
and
dec
stc
aas
js
test
test
adc
jae
es
sbb
sub
mov
int
mov
dec
mov
fwait
jmp
pop
pop
mov
data16
inc
inc
outsl
add
jno
xchg
pop
inc
mov
inc
fnsave
push
jecxz
pop
add
test
ljmp
rcrb
mov
test
pop
adc
and
pop
adc
inc
xor
inc
mov
cwtl
pand
bound
aaa
shll
or
lods
daa
pop
xlat
dec
and
xor
mov
lds
shll
lds
in
dec
outsl
sbb
mov
les
or
jne
aas
aad
and
fdiv
and
gs
daa
lcall
int3
cwtl
adc
xchg
movb
cmpsl
outsl
adc
xchg
mov
dec
imul
mov
mov
mov
lcall
data16
cmp
out
or
inc
popa
iret
fucomi
inc
inc
mov
lcall
push
shl
dec
jg
adc
adcb
pop
jecxz
pop
push
outsl
inc
adc
outsl
stc
push
mov
loope
mov
and
fisubrs
shlb
or
pop
scas
mov
arpl
addl
inc
and
ret
test
add
das
cmc
mov
das
iret
les
cmpsl
inc
repz
outsl
and
aas
popf
dec
stos
fimuls
imul
mov
add
jg
xor
shrl
movl
pop
adc
jmp
cwtl
les
push
jg
ret
imul
es
mov
negl
insl
dec
addl
jns
adc
addb
inc
mov
xor
sub
or
mov
xchg
pop
addl
scas
cwtl
sub
dec
sub
push
setp
outsl
jae
sub
xor
or
dec
adc
lahf
xor
cmp
push
push
das
dec
int3
sbb
inc
sbb
mov
jge
ja
sbb
insb
push
dec
sub
std
jge
sbb
sbb
xchg
adc
xchg
aad
cmc
lods
and
icebp
cmp
inc
dec
sti
pop
sub
sbb
popa
jmp
adc
call
mov
int
dec
lods
out
inc
push
xchg
sarl
stc
adcl
pop
mov
gs
cmp
add
movsl
js
add
add
fnstsw
pop
stos
and
cmpsl
fldcw
xor
dec
loope
sbb
and
ret
jns
inc
into
sbb
and
add
push
sub
pop
dec
adc
dec
mov
int3
stc
pop
scas
push
xor
ja
push
or
arpl
lods
rcll
add
movsb
popa
and
adc
rcll
mov
shlb
push
sbb
call
sub
jae
imul
inc
dec
adc
les
sbb
and
dec
imul
jno
pop
push
dec
fwait
xor
sub
inc
stos
jnp
or
es
cmpsl
cmp
fiadds
lcall
or
lea
sar
inc
int3
dec
ret
pop
xor
xchg
add
and
inc
dec
inc
xchg
fisubs
int
pop
mov
fldcw
addr16
mulps
addb
divl
sbb
mov
add
orl
lcall
xor
or
fstl
call
and
pop
and
ret
pusha
ret
ja
stc
inc
add
inc
mov
and
push
mov
mov
mov
arpl
add
mov
cmp
rcrb
test
subl
add
fwait
inc
mov
or
mov
sbb
mov
pop
inc
add
sub
add
aam
pop
data16
add
add
icebp
xchg
xlat
aad
mov
push
fcmovnb
and
mov
lcall
hlt
cmp
sbb
xchg
pop
xor
add
mov
andb
mov
sub
mov
insb
add
ljmp
stos
cwtl
fisttpl
and
cmc
out
adc
fldcw
pop
push
inc
icebp
push
hlt
fisubs
mov
and
data16
xorl
and
cmc
xchg
leave
jae
lcall
xchg
rcrw
push
and
popf
xor
cmp
lds
cvtps2pi
dec
mov
jecxz
xor
aad
lock
mov
lret
jecxz
and
dec
push
adc
dec
scas
or
xchg
or
pop
int
popa
add
adc
or
mov
orl
rorl
sbb
pop
aas
cmp
sbb
aam
inc
xor
sub
jo
dec
daa
shrl
ret
xchg
sub
cmp
mov
arpl
jne
iret
shrl
xor
inc
inc
push
mov
and
cmpb
lock
sbb
sbb
push
mov
cmp
pop
pop
fadds
data16
jmp
jge
dec
call
xchg
mov
test
dec
imul
fwait
add
jmp
adc
jbe
mov
mov
jecxz
orl
ja
push
cmpsl
fs
cmp
loopne
dec
imul
leave
dec
inc
push
dec
rcll
inc
int3
mov
pop
inc
xor
bound
cmp
xchg
ret
int
lahf
insl
aas
and
dec
push
pop
and
shrl
sub
lods
pop
mov
xor
push
dec
frstor
fldenv
add
inc
popa
add
dec
or
pusha
stos
repz
stos
scas
jg
add
inc
xchg
fstpl
dec
inc
mov
mov
in
sbb
sub
aad
xor
roll
sbb
shll
gs
mov
or
pusha
ret
popa
jmp
lret
mov
test
inc
xchg
fsubrp
iret
and
xor
mov
mov
mov
inc
daa
pop
push
adc
xor
add
movsb
dec
lea
ret
add
pop
xchg
ret
cmp
aam
jne
sub
outsl
sbb
fiadds
das
add
dec
xor
and
int
lcall
movsb
lcall
mov
push
andl
aaa
mov
ss
dec
xor
xchg
lret
dec
lcall
in
cmp
movsl
xchg
push
inc
rcll
pop
cwtl
lcall
xor
push
push
xchg
cmpsl
pusha
add
mov
les
fisttpll
sub
imul
sbb
xor
and
xor
pop
pop
push
lret
mov
mov
shrl
lods
test
cmc
roll
popa
and
push
mov
aas
sbb
int
es
rcll
lds
insb
sub
inc
mov
mov
mov
mov
fimuls
pop
ja
lock
insl
je
rcrb
mov
push
jnp
jnp
add
imul
aaa
ret
iret
popf
push
mov
dec
rorl
and
jo
xchg
and
dec
pusha
add
and
xor
adc
cltd
adc
test
and
fnsave
sbb
jecxz
jns
stc
int
int
outsl
gs
dec
push
mov
popa
jge
jae
sbbb
das
jmp
adc
das
jns
fimuls
aas
stos
les
icebp
xchg
adc
dec
outsl
aad
inc
icebp
pop
hlt
pop
cmpsl
mov
stos
into
and
xor
add
ret
and
jno
lahf
bound
bound
je
push
scas
imul
fwait
push
frstor
cwtl
sbb
adc
jno
gs
fldt
es
and
ss
imul
push
inc
cmp
movsl
cmp
es
cltd
mov
mov
shl
sub
xor
dec
mov
imul
ret
push
mov
les
test
pop
lods
adc
mov
mov
stos
call
insl
lret
inc
das
or
jns
cmp
icebp
xchg
push
lahf
fwait
mov
mov
iret
stos
and
jmp
push
test
jge
push
ja
xchg
push
mov
pop
hlt
lods
mov
std
pop
mov
les
fisubs
fildll
jno
pop
sub
xchg
push
jmp
cmp
mull
fildll
inc
stos
ret
mov
dec
test
push
mov
mov
jecxz
or
icebp
mov
inc
push
insl
mov
or
ja
push
push
iret
daa
xor
rorb
test
subb
add
mov
dec
sarl
push
mov
mov
inc
inc
or
stos
jmp
aas
or
fwait
inc
aad
dec
cwtl
shll
adc
mov
jmp
mov
pusha
push
das
loop
xorb
ja
es
popf
jns
fmuls
aas
adc
bound
xchg
scas
xor
test
les
fdivp
xor
add
shll
insl
data16
xchg
pop
xor
sub
inc
outsl
ret
test
sbb
add
dec
and
and
inc
int3
leave
pop
lods
push
mov
xchg
pop
cmc
xchg
les
push
shll
das
popa
roll
int3
cmp
xor
push
mov
fwait
inc
dec
rcll
inc
shrl
fucomip
loop
adc
jmp
push
aas
inc
data16
cwtl
adc
jmp
lods
inc
dec
cwtl
aam
arpl
mov
test
mov
add
or
adc
sarl
pop
mov
inc
outsl
gs
and
push
xchg
push
addr16
loopne
xchg
xchg
cwtl
adc
cmp
rcl
fcomp
pop
push
adc
das
fistps
mov
loope
or
or
push
sbb
and
mov
xchg
nop
lods
dec
xor
popl
push
mov
loopne
dec
daa
aaa
add
pop
jne
ret
xor
push
outsl
cmp
sub
xorl
push
outsl
push
xor
inc
ficoms
push
push
xor
int3
jge
daa
sub
sbb
cmc
mov
cmpsl
dec
ret
loop
mov
imul
int
add
sbb
inc
xchg
inc
or
push
popa
adc
and
xor
and
lret
mov
rorl
repnz
aaa
iret
jnp
call
sub
aaa
jecxz
popa
aam
and
xor
pop
ret
hlt
fimuls
xor
es
or
cwtl
shll
sub
mov
in
and
mov
andl
es
push
pushf
xlat
and
lret
mov
xlat
jbe
or
sarl
dec
aad
sbb
ljmp
es
pop
jmp
mov
int
das
in
adc
aad
stos
inc
mov
adc
pop
adc
leave
jns
pop
int3
push
xor
ret
arpl
into
push
adc
fdivs
loopne
sub
inc
inc
dec
mov
loope
xchg
daa
sbb
or
xor
lods
push
cmp
dec
test
xorb
dec
les
outsl
adcl
cwtl
inc
xorl
js
addr16
mov
flds
dec
push
int3
push
bound
das
aad
dec
adc
xchg
and
add
sub
jg
mov
pusha
sahf
mov
test
data16
mov
jecxz
sub
aad
orl
sub
xchg
lcall
inc
mov
sbb
ja
in
js
mov
adc
fcmovne
andb
dec
push
xlat
sbb
aaa
sub
sbb
out
rorl
cwtl
add
mov
das
pop
add
mov
andl
mov
dec
or
jp
push
in
cmp
xor
aad
inc
adc
popa
xor
dec
or
and
lods
sub
mov
mov
jg
dec
add
sub
push
inc
imul
fwait
das
fisttps
xor
mov
les
or
lret
repz
mov
ja
int
push
outsl
fisttpll
ljmp
dec
mov
cmp
jecxz
lock
gs
sbb
or
ss
jae
js
imull
push
sub
or
pop
aam
icebp
data16
cwtl
popf
sti
jmp
movsb
and
xor
cwtl
inc
lods
lcall
and
adc
es
jae
movsl
mov
rcrl
xor
ret
pop
js
pop
repz
out
xchg
or
pop
xor
dec
xchg
mov
jp
arpl
pop
cmpsl
aas
test
jne
mov
sub
fmuls
dec
push
loope
or
andl
jne
push
or
lcall
adc
mov
popa
jg
xchg
mov
js
mov
push
xor
dec
xor
add
lret
and
xor
mov
sub
mov
popa
pop
lret
xchg
push
aam
lret
std
rcrl
and
pop
sub
int
loope
dec
int
add
mov
loopne
xchg
aas
lret
neg
fwait
add
aad
aaa
fwait
movsb
mov
inc
or
dec
jecxz
adc
popa
roll
or
or
xor
fbstp
mov
movsl
pop
and
shll
int
lret
insl
inc
mov
jns
ret
sub
inc
mov
mov
test
jmp
xchg
push
pop
das
in
or
fisubrs
in
int
adc
js
icebp
repz
sbb
arpl
das
dec
mov
je
pop
jg
sbb
data16
and
imul
or
and
fldl
mov
mov
mov
pop
xchg
andl
mov
rcrl
outsl
inc
add
xchg
cmp
dec
cmp
inc
push
xor
inc
mov
pop
and
mull
cmp
iret
sbb
movsb
sbb
ret
jnp
or
pop
daa
mov
repz
dec
or
fldcw
jecxz
and
jp
push
xchg
test
rorl
scas
adc
add
mov
aaa
jg
xor
cmp
sbb
stos
push
and
and
adc
push
sub
adc
fwait
mov
mov
add
mov
stos
outsl
int
lcall
movsb
flds
or
mov
fidivs
stos
js
jecxz
lret
mov
fcoms
subl
pop
shrl
pusha
or
adc
cmpb
inc
jmp
push
mov
jne
xor
pop
mov
xor
lret
or
pop
sub
mov
arpl
jae
pop
pop
xor
adc
test
push
xor
shlb
test
cmp
test
lds
out
xor
lcall
dec
add
pop
aad
div
es
add
add
or
cmp
cmp
into
es
sub
ret
jns
pop
push
sub
sbbb
roll
push
lahf
fstl
xor
scas
out
sub
insl
arpl
jp
roll
dec
add
sub
jnp
pop
icebp
xchg
jnp
mov
xor
stc
pop
mov
xchg
inc
xchg
lcall
adc
icebp
push
fwait
xlat
adc
popf
scas
push
daa
xchg
inc
inc
and
pop
lahf
fistpl
push
int3
cmp
out
fisubs
xchg
sbb
push
adc
es
xor
imul
iret
push
xchg
lods
pop
gs
scas
add
in
mov
and
cmp
push
xor
outsl
inc
push
imul
xor
pop
add
mov
xchg
xor
lods
sub
imul
scas
addl
jecxz
xchg
lcall
cmp
xchg
xlat
or
fldenv
arpl
push
or
pop
imul
jno
and
ret
mov
cwtl
xor
aaa
lahf
add
sti
push
xor
xchg
int
out
add
lds
aaa
sub
push
cltd
mov
mov
sti
inc
flds
lcall
cwtl
xor
jno
push
adc
mov
lods
dec
cmp
jecxz
ja
push
adc
and
xor
dec
lock
in
jp
ljmp
cmp
test
popa
adc
cwtl
orl
and
mov
mov
pop
add
dec
aaa
and
adc
mov
sbb
cwtl
scas
mov
xchg
lcall
xor
inc
sbb
sub
dec
fisttpl
sbb
pop
sbb
scas
aas
mov
push
cmpsl
sbb
idivl
inc
dec
or
test
dec
rorl
add
insb
mov
punpckhbw
lcall
adc
adc
lods
sub
int
rorb
test
subl
popa
add
mov
xchg
or
pop
cmc
icebp
lds
cmp
or
icebp
xchg
stc
ja
sbb
scas
fxch
fiadds
testl
push
in
stc
fldl
or
scas
pop
pop
scas
sub
add
sbb
xchg
loopne
push
xchg
xchg
add
xor
insl
fwait
and
xchg
sub
add
xor
xlat
das
adc
pop
pop
jnp
out
sub
adc
push
aam
pop
inc
adc
add
ja
xchg
mov
lds
mov
mov
inc
hlt
push
int
icebp
pop
xor
aad
das
shlb
push
cmp
fistps
popa
dec
jmp
add
and
lock
aad
in
inc
orl
fisubs
pop
adc
sub
add
ljmp
fwait
lds
lret
mov
test
jmp
rcrl
and
sbb
lcall
sub
flds
push
jne
mov
xchg
popl
mov
push
cmc
xchg
arpl
or
xchg
or
push
fisubs
popf
xchg
jns
pop
push
inc
cmpsl
push
test
dec
pop
out
es
inc
sbb
add
stos
int
sbb
andb
divl
ljmp
mov
test
sbb
ss
or
xchg
inc
sub
cmp
or
scas
pop
mov
ss
daa
mov
push
sbb
shrl
scas
and
sbb
popf
popa
les
mov
inc
les
lods
xor
pop
sub
lcall
dec
aaa
in
mov
or
jnp
or
test
int3
xor
stos
aaa
das
insl
mov
in
xchg
les
aaa
xchg
das
lcall
xor
fisubs
in
cmpsl
rcll
push
data16
aad
fwait
mov
orb
fnsave
push
imul
xor
pop
xor
sbb
andb
aaa
mov
stos
xchg
and
mov
push
mov
sbb
addr16
and
int
gs
and
mov
pop
fisubrs
add
push
sbb
int
rclb
mov
flds
repz
imul
xor
push
mov
or
mov
xor
loope
pop
or
and
ret
loope
and
icebp
daa
jp
adc
cmc
test
mov
popa
int
pop
and
mov
or
mov
iret
or
fs
lds
add
popf
mov
jnp
mov
lock
and
pop
mov
aaa
sub
or
pop
imul
in
lods
dec
xlat
inc
xor
dec
fisubrs
outsl
imul
pop
filds
lea
cwtl
adc
or
push
xchg
dec
testl
arpl
xor
jnp
ljmp
sbb
js
addr16
push
dec
cmpl
pop
mov
dec
pop
inc
xchg
mov
cmc
insl
and
fists
es
add
inc
das
xor
js
in
lods
jecxz
test
test
add
push
dec
xorb
xor
mov
and
mov
fisubrs
and
add
jno
movsl
adc
xor
mov
addl
cmp
std
push
outsl
push
push
xchg
inc
aad
test
int3
adc
xchg
fwait
icebp
test
mov
and
inc
outsl
insl
test
sub
das
push
push
xchg
test
mov
popa
mov
adc
mov
and
das
das
cmp
and
in
mov
pusha
or
jp
jmp
ret
mov
rcll
push
cmc
test
subl
xlat
jge
ret
idivl
jp
pop
rorl
movsb
jno
popa
sub
xchg
inc
jnp
cmp
xchg
adc
int
xor
add
cmp
cmpsl
imul
push
pop
xor
dec
sub
ja
cmp
data16
das
xlat
xchg
pop
jp
xchg
push
das
mov
int3
xchg
lea
mov
sub
cmpsl
iret
sub
xor
pushf
data16
xchg
jnp
pop
xchg
loop
popa
sub
xchg
arpl
sub
test
mov
sub
add
fsubrp
nopl
stos
rorl
aaa
out
leave
stc
and
or
or
inc
xor
inc
xlat
or
rep
daa
inc
mov
aaa
andl
cmp
bound
call
fwait
xor
cmpsl
or
cmp
mov
xor
das
pop
mov
mov
stos
or
into
pop
push
lds
jns
data16
push
adc
mov
dec
push
dec
pusha
push
mov
aaa
adc
jmp
dec
jne
and
adc
fists
xor
iret
or
sbb
sub
jecxz
gs
lret
xlat
loopne
test
pop
adc
xchg
adc
das
or
andb
mov
adc
mov
xor
pusha
stc
mov
and
or
outsl
aaa
adcl
sub
lds
push
dec
cmp
iret
lds
cmc
xchg
stos
std
and
cmp
xcrypt-ecb
cmpsl
or
subl
jmp
out
movsl
add
int
xor
dec
sub
ficoms
pop
push
hlt
inc
mov
sbb
ret
mov
dec
cmp
xor
dec
pusha
idivb
adc
test
mov
jecxz
or
inc
icebp
add
and
test
gs
mov
pusha
push
mov
push
aaa
int3
es
inc
push
ret
test
test
sbb
dec
mov
inc
xor
sub
push
aaa
add
xchg
std
pop
xchg
es
push
insl
inc
sub
push
imul
outsl
ss
xor
in
bound
add
test
add
dec
mov
xchg
add
int
push
cmp
mov
int
or
add
test
stc
sti
out
adc
pop
sbb
fnstenv
outsl
xor
mov
imul
or
movsb
mov
and
add
daa
lahf
push
cmp
cmc
fiadds
inc
rorl
add
xor
push
push
adc
sbb
icebp
stos
ret
pop
push
xor
push
cmpsl
fnstenv
pop
fwait
sub
xchg
inc
add
inc
and
ljmp
add
daa
mov
jecxz
dec
andl
xlat
or
inc
ret
lds
add
sbbl
icebp
vmaskmovdqu
loope
xor
xor
xchg
mov
lds
mov
and
fsubr
sbb
xchg
in
xor
jnp
lds
push
lahf
sbb
cmp
xor
int3
cwtl
mov
mov
pop
leave
xchg
and
imul
dec
popa
iret
adc
js
sbb
push
mov
pop
xor
push
enter
inc
jp
adc
adc
inc
cmp
sti
inc
iret
xchg
stos
aaa
and
stos
cmc
fildl
xor
mov
js
dec
outsl
jmp
cmpb
test
sbb
add
pop
add
xchg
inc
adc
jo
and
pop
jne
xor
add
push
sub
cmp
js
xor
pop
pop
sbb
and
mov
ja
and
cmc
test
or
push
rcll
or
add
lret
scas
imul
push
shll
mov
add
filds
arpl
ret
iret
lcall
out
inc
dec
pop
stc
inc
push
hlt
pop
inc
lea
dec
lods
inc
mov
mov
popa
xchg
mov
cmc
fisubrs
cmp
or
test
jmp
ds
inc
shll
inc
pop
xor
dec
inc
or
mov
xor
icebp
cmc
pop
inc
add
xor
mov
bound
inc
cmp
lcall
inc
dec
sarl
cmc
mov
inc
and
xchg
cmp
adc
sbbl
jp
es
and
jnp
adc
add
pop
add
cmp
pop
aad
ret
jnp
cmp
or
and
lea
icebp
ret
imul
mov
lcall
inc
shlb
negl
lods
xorb
daa
mov
adc
pop
lret
pop
mov
push
sbb
xchg
mov
popf
inc
or
shrl
loope
es
mov
aas
sti
rcrl
fisttpll
data16
push
cmp
popa
pop
push
xor
mov
push
jmp
inc
adc
fmulp
adc
pop
inc
jge
inc
xchg
sbbb
imul
gs
mov
jae
dec
mov
inc
sbb
cmp
and
add
cmc
mov
inc
mov
mov
inc
pop
xchg
and
inc
sbb
xchg
xor
rorl
jge
inc
rolb
adc
xor
jmp
daa
jns
fdivrs
call
mov
xor
leave
push
popa
xor
int
xor
lret
aaa
popa
add
sbb
push
jne
jns
add
xchg
fisubs
sbbb
inc
inc
xchg
dec
ljmp
int3
mov
test
out
xor
add
mov
stc
add
xor
sub
fwait
inc
or
lcall
daa
jae
es
or
cmp
pop
and
ja
andl
pop
inc
int3
lcall
xor
jns
mov
aad
pop
outsl
push
dec
push
decl
inc
mov
stos
xchg
es
and
sbb
stos
push
orb
addl
pop
and
and
and
or
add
addr16
xor
shrb
fisubs
sub
adc
repz
pop
icebp
mov
and
test
dec
repz
roll
inc
jno
push
sbb
fnstcw
jno
xchg
cmp
push
sbb
jbe
shll
daa
dec
push
dec
xor
adc
mov
bound
mov
int3
jp
add
les
xor
sub
sub
jecxz
xor
inc
roll
inc
int
and
bound
in
or
lcall
inc
mov
mov
loopne
push
sub
xor
jo
push
inc
std
sbbl
ficomps
cwtl
xor
les
mov
dec
das
lods
imul
sar
adc
mov
ja
push
xchg
mov
xchg
ja
lds
sub
shrl
es
jnp
and
add
dec
lods
mov
add
lea
push
cwtl
inc
mov
xchg
rcll
sub
xorl
sub
sti
or
pop
add
sbb
mov
rorl
inc
xor
sub
fidivrs
push
testl
xchg
nop
xor
pop
cmp
mov
mov
shll
push
sub
jae
add
add
adc
pop
xchg
mov
jecxz
int
xor
pop
push
fsts
fstl
test
xchg
aam
cwtl
add
add
sbb
sbb
sub
stc
rcrl
xor
mov
cmp
inc
adc
sbb
mov
push
jmp
push
movsl
jae
orl
shlb
es
or
or
or
aas
dec
test
dec
fwait
outsl
pop
adc
push
icebp
cmpsl
aad
xchg
cmc
lds
dec
movsb
mov
dec
add
aaa
imul
lcall
push
shlb
xor
sub
push
xor
pop
push
nop
andb
pop
int3
push
data16
inc
push
mov
mov
jnp
aaa
nop
sub
popa
add
mov
decl
xor
popa
xchg
and
sti
sbb
mov
jp
imul
arpl
lds
jnp
shl
dec
push
cmc
scas
pop
les
inc
jno
cmpsl
and
subl
leave
xor
mov
add
imul
imul
xor
scas
inc
pmullw
sub
popf
sub
push
sub
sbb
xchg
int
cmp
xchg
or
popa
mov
rol
and
mov
bound
inc
xchg
les
icebp
inc
add
add
and
mov
jne
lods
inc
leave
aad
rcrl
sbb
jg
xor
inc
rcll
data16
les
dec
pop
aam
or
mov
and
push
lcall
lcall
or
add
fcmovne
mov
jne
adc
and
push
lds
xchg
mov
pop
cmp
dec
or
push
push
adc
push
xorb
pusha
and
cmc
data16
fisttpl
or
dec
dec
add
lea
xchg
jp
jecxz
mov
sub
cmpsl
dec
or
inc
adc
cmp
int
or
cmp
jnp
add
xchg
outsl
dec
xchg
cmovb
xchg
js
pop
lds
dec
jecxz
popa
dec
jno
lea
push
in
cmp
daa
inc
mov
and
jno
pop
int
adc
push
mov
bound
sbb
xchg
test
push
int
push
aam
getsec
or
adc
fistpl
sub
add
xor
xchg
sub
cmp
xor
xor
pop
jecxz
aaa
add
push
mov
lds
dec
dec
dec
add
sub
outsl
add
dec
xchg
fwait
adc
pop
ret
mov
popa
add
pushf
aad
stc
ja
xor
test
and
dec
adc
cwtl
mov
jp
or
mov
push
adc
mov
xchg
jge
lret
les
push
shrb
jmp
fwait
mov
test
out
xchg
xchg
mov
jae
in
xchg
inc
xor
mov
mov
mov
mov
mov
dec
sub
dec
pop
cmc
int
outsl
inc
std
jno
fwait
shll
xor
pop
cwtl
gs
xchg
or
xchg
mov
xor
mov
rcrb
xor
data16
jae
les
mov
add
cmp
xchg
sub
pop
mov
out
or
push
outsl
sbb
inc
pushf
out
daa
dec
inc
icebp
mov
test
or
rcll
add
stos
lcall
imul
mov
dec
jnp
push
outsl
push
leave
jns
adc
or
shr
cmp
aad
inc
adc
imul
push
das
jge
dec
lcall
es
js
lds
ja
xor
inc
xor
xor
xor
or
add
push
addr16
lock
cmc
xchg
pop
adc
xchg
shrl
mov
pushf
mov
or
jmp
sbb
fsubp
cmp
add
mov
negl
ret
mov
cmp
sub
mov
mov
mov
adc
arpl
repz
dec
test
or
dec
mov
sub
fimuls
stc
js
add
aaa
mov
mov
jae
and
xor
jne
mov
jge
repz
popa
add
inc
dec
pusha
dec
inc
cmpsl
daa
xchg
mov
jecxz
rorl
lods
mov
es
xor
dec
addr16
movsb
mov
add
xor
addl
mov
jl
dec
pop
inc
and
and
mov
inc
rcrl
imul
adc
mov
jae
pop
rcll
pop
adc
mov
xchg
test
xor
xor
gs
fisubrs
sbb
pop
and
fistpl
mov
sbb
scas
push
insl
bound
lret
xor
les
test
dec
rorl
or
xchg
adc
xchg
pop
adc
dec
or
movsb
xchg
mov
or
add
addl
xchg
fnstenv
sbb
mov
addb
aaa
fbstp
mov
inc
push
int3
adcb
icebp
js
pop
xor
sbb
es
sub
or
mov
cmp
lock
pop
jnp
orb
adc
sub
inc
xor
push
xchg
push
dec
mov
movsl
popa
les
xor
mov
xchg
push
and
out
add
js
push
popa
cmpsl
mov
fnstcw
int3
pop
fisttps
jg
ret
movsb
subl
dec
and
in
ficomps
fwait
xor
shll
sbbb
popf
and
adc
aaa
jnp
mov
jo
and
data16
stc
fwait
out
dec
js
std
fnstenv
cmp
xadd
dec
xor
rclb
lcall
rcll
add
adc
test
add
and
or
jg
sbb
test
mov
adc
jp
add
add
cmp
mov
mov
xor
jp
scas
test
adc
gs
lea
pop
mov
add
loopne
pop
vmovlhps
lods
popf
jae
add
ret
insb
cmc
adc
inc
icebp
aad
xchg
dec
lcall
loope
out
int
int
adc
add
adcb
dec
in
inc
lds
or
int
js
mov
adc
mov
push
test
add
pop
imull
xor
jno
mov
test
mov
int3
js
js
in
hlt
mov
inc
mov
inc
or
lcall
adc
inc
push
int
pop
xchg
or
xor
xchg
je
sbb
xchg
test
xchg
loope
lret
add
fwait
push
pop
xor
add
mov
cmp
jnp
inc
xchg
xor
xor
lahf
jne
mov
or
xchg
data16
testl
testb
or
es
dec
arpl
rorl
mov
stos
lcall
cmp
fidivs
fnstenv
jmp
jnp
inc
inc
mov
xor
int
push
mov
insl
int
sbb
push
xchg
ljmp
data16
lods
jae
sub
sbb
cltd
mov
mov
xorb
inc
adc
repz
sarb
add
scas
or
aas
popa
mull
pop
mov
movsb
xlat
cmp
movsb
mov
in
sbbl
xor
aam
cmp
or
cwtl
std
jno
push
shll
mov
mov
mov
or
jmp
lods
and
ret
es
lcall
xchg
and
add
and
fs
push
push
jnp
pop
mov
fldl
dec
pusha
lods
cmpsl
push
shrl
lret
and
dec
mov
pop
dec
jnp
jnp
mov
xchg
repz
movsb
dec
push
xchg
and
lds
outsl
jnp
pop
push
adc
push
cwtl
cmc
es
aad
addb
xor
inc
mov
pop
jns
pop
lods
cwtl
jne
sub
or
sub
push
shll
outsl
jb
jmp
daa
jae
push
shll
dec
push
xor
sub
mov
inc
adc
dec
and
frstor
dec
addb
mov
and
lret
mov
push
das
jecxz
test
pusha
inc
int
cmpl
adc
shll
das
cwtl
aam
sub
and
daa
lds
xchg
push
inc
lods
xor
add
add
ja
xchg
lods
stos
and
insb
dec
aad
mov
xchg
push
jg
dec
pop
inc
add
jp
arpl
pop
mov
adc
and
repz
mov
mov
push
push
outsl
or
dec
sub
pop
sbb
mov
dec
lret
jg
dec
adc
inc
inc
negl
push
xor
test
fwait
lds
or
aad
arpl
mov
shrb
xchg
dec
icebp
popa
add
cmpsw
pop
cmc
inc
mov
lahf
adc
xchg
adc
push
test
dec
push
xor
iret
call
mov
mov
sbb
xor
pop
add
adc
ret
jge
ja
out
stos
icebp
lretw
mov
cmc
dec
aad
orl
movsb
pop
int3
push
lods
rcrl
aam
xchg
popf
lret
mov
shrb
mov
mov
lds
mov
sub
xor
inc
rolb
dec
inc
push
lds
inc
int3
loop
out
mov
sbb
mov
and
jmp
hlt
mov
pusha
sarb
push
aam
mov
cmp
and
or
mov
pop
add
or
dec
hlt
es
imul
gs
pusha
or
mov
push
push
dec
loop
dec
icebp
sub
and
lods
xor
mov
rcrb
mov
lahf
jmp
sub
jnp
pop
insl
hlt
mov
push
punpckldq
or
subl
mov
xor
or
loopne
daa
xor
fistps
inc
jg
orb
stos
mov
rorl
add
jmp
lahf
outsl
push
sbb
add
movl
sbb
dec
sub
shl
in
sbb
out
cmp
shlw
xor
pop
adc
or
jns
outsl
mov
push
aaa
pop
call
adc
cmc
lret
jae
sbb
xor
inc
sbb
xor
shrl
and
mull
icebp
mov
es
addr16
outsl
add
add
mov
dec
aas
out
adc
or
dec
loop
addr16
add
and
int
gs
mov
cmp
mov
icebp
cmp
and
loope
xchg
inc
xor
xor
cmp
xchg
mov
bound
int
mov
add
gs
paddusw
fdivs
fldl
mov
add
lahf
loope
cwtl
int
stos
jnp
popa
add
in
stc
push
stos
sbb
test
cmc
es
xchg
icebp
fistps
ret
jnp
call
out
arpl
xchg
and
dec
mov
repz
pop
add
cmp
or
inc
dec
call
xchg
add
popa
xchg
and
imul
fwait
sub
js
loop
sbbl
jns
imul
pop
icebp
dec
pop
subl
outsl
scas
dec
or
out
push
mov
stc
push
xor
add
sbb
lahf
dec
mov
dec
cwtl
sarl
adc
and
lods
icebp
sub
mov
and
cltd
arpl
dec
mov
ja
aam
xor
xchg
add
arpl
das
xlat
js
call
or
adc
aad
jge
cs
mov
movsb
push
xor
fisubs
xchg
stos
jmp
and
xor
cmp
sbb
shl
inc
mov
in
int
jae
fsts
addb
inc
mov
push
dec
leave
loop
pusha
icebp
icebp
inc
xor
icebp
dec
mov
cmp
std
ljmp
neg
test
pop
int
dec
inc
push
and
xor
jp
rorl
pop
push
aad
es
loope
sbb
push
gs
adc
mov
xor
addl
das
test
add
jecxz
or
mov
in
adc
xor
ljmp
mov
mov
int
scas
fistl
call
inc
adc
cmc
dec
neg
lods
sbb
popa
jg
adc
and
mov
xor
push
inc
adc
mov
xchg
fildl
pop
push
inc
int3
test
jno
adc
mov
push
add
lods
shll
dec
inc
mov
xchg
cmp
fldenv
push
mov
xchg
xchg
imull
lcall
xor
inc
mov
add
jae
mov
sub
outsl
adc
cwtl
rolb
mov
xlat
lds
data16
sub
mov
fistl
icebp
add
mov
test
adc
flds
sub
mov
jmp
push
int3
mov
push
test
pop
xor
dec
cmp
jp
loope
xor
int
jmp
xchg
stos
xchg
aad
mov
push
inc
pop
mov
imul
mov
leave
mov
jnp
dec
or
jecxz
xchg
xor
flds
xchg
and
es
jno
imul
loop
test
push
ss
lcall
and
sbb
xlat
test
mov
xchg
fildl
pop
lea
cltd
xlat
rorl
inc
mov
sub
dec
leave
pop
push
jae
data16
sbb
adc
cmc
repz
dec
mov
pop
pop
das
push
dec
or
shll
lods
es
pop
insb
push
xor
jg
subl
out
and
xor
push
cmpsl
xor
jmp
mov
mov
aaa
xor
adc
imul
inc
scas
stos
and
popa
adc
add
mov
mov
xor
jmp
stc
movsl
xor
int
aaa
mov
pop
icebp
dec
push
xchg
daa
ret
sub
push
ret
aaa
jno
idivl
shll
dec
mov
add
test
pop
mov
jns
popa
pop
adc
sbb
pop
stc
repz
test
push
add
inc
lds
arpl
insb
pop
push
pop
push
xor
lea
push
rcr
lahf
shll
in
or
xor
fwait
add
or
inc
push
xchg
xor
shrl
test
pop
add
daa
adc
xor
jecxz
das
add
hlt
inc
jno
sub
addr16
add
imul
arpl
push
adc
add
mov
xlat
jecxz
or
inc
mov
loope
xor
fwait
adc
xchg
lret
or
dec
cmp
sbb
js
cs
xlat
mov
imul
xor
shll
pop
jmp
xchg
dec
sbb
xchg
cwtl
xor
or
or
pop
pop
int3
addb
push
push
int3
test
mov
das
test
popa
aaa
outsl
xor
push
lret
and
xchg
in
in
sti
mov
add
add
mov
pop
ffree
test
push
pop
testl
aaa
shll
fidivrs
mov
xor
jne
popa
dec
inc
hlt
mov
icebp
mov
adc
pusha
push
add
cmpsl
loop
out
dec
popa
add
insl
outsl
dec
adc
icebp
jmp
aas
jmp
adc
fstl
and
popa
adc
outsl
inc
xor
loope
loopne
or
lret
stc
aaa
xchg
inc
and
pop
and
xor
fnsave
add
xor
mov
adc
rorl
shll
mov
sub
cmpl
js
imul
sbb
sub
sti
fists
sbb
arpl
pusha
mov
cmp
mov
stos
insl
ret
fldenv
mov
aaa
mov
xchg
mov
popf
sub
stos
dec
xchg
and
stos
pop
cmpsl
jno
inc
dec
loop
stc
and
lret
add
aaa
es
aas
lret
or
xor
sub
xor
and
or
pop
movsl
xor
std
sbb
aaa
stos
addr16
jmp
pop
push
xor
addl
shrd
idivl
imul
xchg
sub
movsb
cltd
fmuls
inc
aas
sbb
imul
loop
mov
pusha
inc
and
fwait
paddw
fwait
push
shr
and
das
aas
cmp
jne
xor
jns
int3
dec
rcrb
xchg
add
gs
push
inc
sub
jp
sbb
xor
adc
cwtl
push
int
cmp
iret
inc
out
dec
test
xor
xchg
jmp
inc
jns
dec
or
imul
add
pop
sti
inc
into
es
dec
out
js
push
xchg
dec
xchg
and
fldenv
add
mov
movsb
out
inc
stc
inc
aaa
stos
dec
cmc
or
adc
mov
int
je
sub
mov
and
js
pop
shl
jge
and
and
shll
andl
mov
cmp
jg
pop
inc
ret
or
adc
rorl
dec
mov
into
pusha
scas
xor
jne
mov
adc
pusha
imul
pop
sub
inc
jne
sub
xchg
scas
int
cmp
nop
jno
cmpsl
orl
or
push
sub
xor
cmp
imul
mov
test
xor
bound
and
in
gs
iret
inc
aad
faddp
dec
dec
rcrl
cltd
and
sub
fisttpl
pop
and
stos
call
nop
bound
and
and
mov
adc
dec
js
mov
movsl
iret
and
mov
jg
dec
fsubrp
inc
out
rcrl
and
sbb
dec
in
rdpmc
stos
aaa
adcl
add
push
dec
cmc
sbb
mov
add
xor
add
xchg
adc
lcall
out
add
int3
js
cmp
cmp
mov
dec
sarl
rcrb
push
adc
xor
stos
push
push
icebp
pop
pop
imul
xlat
mov
cmpsl
aaa
dec
sub
sub
add
push
xchg
adc
xchg
and
sbb
lret
mov
movsb
pop
out
push
or
or
xor
pop
sub
xor
inc
inc
int3
es
inc
jge
sbb
push
cmpsl
sbb
push
mov
lret
test
mov
imul
fs
jnp
test
xor
jmp
inc
addb
inc
cmpsl
addr16
test
and
mov
stos
fisubrs
push
and
mov
or
pusha
mov
xchg
inc
and
sub
xchg
iret
in
add
xor
repz
push
jo
sbb
sbb
outsw
sbb
add
add
jne
test
ss
addb
pop
mov
xchg
hlt
fists
inc
inc
adc
add
push
and
jno
lods
pop
adc
test
sub
shlb
out
int
xchg
ja
push
in
lods
fs
xor
sti
sub
add
aas
aad
add
fcomps
lcall
xchg
adc
push
jo
add
test
mov
int
dec
js
inc
add
int
aas
mov
andl
mov
in
mov
roll
xchg
rcrl
nop
loop
dec
out
jnp
pop
jno
pop
pop
dec
fwait
add
mov
mov
aad
mov
int3
mov
in
jg
adc
lods
es
adc
lahf
andb
xchg
inc
push
mov
es
loope
jne
adc
out
mov
shll
outsl
ss
mov
push
xor
movl
xchg
fimuls
insl
jae
xchg
xchg
xorl
xchg
xchg
xchg
addl
call
pop
or
cmp
add
pop
cmc
xchg
adc
adc
cmp
add
ret
jnp
test
jno
add
out
xchg
push
mov
mov
xchg
fstpl
ret
sub
lahf
sub
fs
jge
dec
mov
mov
xadd
cwtl
lock
sbb
sub
cwtl
xchg
xor
and
sbb
push
sub
sbbb
and
pop
push
push
xchg
ja
jne
add
mov
popf
inc
sub
mov
mov
cmp
stc
stos
mov
mov
sub
fcomps
inc
sub
xor
pop
mov
jae
pop
adc
mov
or
arpl
push
rol
sbb
rcl
mov
adc
aaa
jecxz
add
mov
vpaddusw
stos
mov
popf
cmp
cmp
fisttpl
and
imul
xor
push
mov
test
pop
cmpl
mov
pop
inc
add
mov
sub
adc
push
pop
or
pop
mov
mov
int
popf
pusha
ja
mov
xor
add
fwait
adc
lret
arpl
or
outsl
das
sub
lods
dec
sub
jmp
ret
sub
xchg
sub
mov
jg
or
add
or
sbb
mov
negb
mov
pushf
adc
ss
xchg
icebp
inc
or
pop
loope
data16
mov
mov
pop
inc
mov
xorb
inc
and
dec
cwtl
hlt
or
push
out
mov
add
and
mov
inc
dec
rcrb
xchg
adc
fwait
add
mov
add
add
mov
mov
lea
push
xor
mov
rol
mov
ret
mov
and
ret
push
jae
or
mov
add
repz
mov
es
xor
adc
repz
dec
push
or
ficomps
lret
addb
aad
and
fldcw
cmp
xchg
adc
mov
inc
cmpsl
lcall
shlb
std
fbstp
or
shlb
mov
xor
arpl
mov
and
pop
xor
fnstenv
test
jns
les
push
das
aas
andb
es
out
shll
lds
xor
orb
and
jmp
xor
push
mov
inc
cltd
xorl
push
inc
fisubrs
and
fld
movsb
negl
cmc
daa
push
vphadduwd
les
inc
mov
pop
adc
sbb
xor
or
sbb
cwtl
rorb
inc
dec
push
aas
test
sub
popa
add
xor
xor
cwtl
inc
out
int
or
mov
shl
shrl
cltd
sbb
xor
jnp
lods
aas
imul
xchg
jo
stos
aaa
inc
cmp
adc
mov
add
shr
mov
jmp
mov
pop
sti
sbb
sbb
dec
lcall
aaa
mov
inc
jmp
jne
jns
dec
lock
fnsave
pop
xchg
std
movsb
push
in
inc
mov
loop
jg
xor
cmp
ret
dec
pop
and
fisubrs
int
or
mov
bound
pop
adc
jno
adc
jp
pop
add
lods
push
xor
push
xor
cmpsl
stos
sbb
int
inc
dec
out
pop
movsb
stos
leave
push
or
aaa
jnp
pop
xchg
cmp
cmp
imul
mov
fistpll
cwtl
xor
outsl
add
test
aas
jge
inc
rorb
adc
add
mulb
xchg
inc
cmp
adc
xor
stos
xchg
repz
xchg
flds
dec
push
out
xorl
sub
movl
popf
jne
push
push
mov
cmp
mov
jae
fisubrs
xchg
pop
pop
inc
xor
pop
nop
lea
ret
aas
in
and
push
int3
aas
xchg
pop
sub
cmp
adc
mov
fstpl
add
in
in
dec
outsl
or
sbb
fisubs
fwait
xor
lds
sub
add
aad
dec
int3
add
dec
sti
roll
push
mov
fstpl
xchg
adc
lea
repnz
pop
xchg
push
icebp
imul
int3
lcall
mov
out
adcb
fisttps
int3
xchg
aad
and
sub
inc
sub
push
or
mov
int
rorl
les
sbb
mov
push
and
fwait
decl
pop
leave
arpl
orl
xor
jo
mov
es
aaa
icebp
ret
xchg
jno
mov
mov
add
movsb
push
inc
add
mov
scas
frstor
js
mov
lret
and
mov
xchg
cmpb
fnstenv
xor
popa
mov
inc
fnstenv
cmc
lahf
add
dec
pop
inc
mov
rcrl
int
push
lahf
popf
imul
bound
push
cmc
jno
leave
or
dec
lret
arpl
push
xor
adc
jmp
call
imul
mov
and
xor
sub
xor
in
int
inc
lahf
mov
lcall
ljmp
dec
xor
jns
xor
mov
jecxz
lcall
int3
jp
jp
mov
cmp
sub
adc
mov
cmp
shlb
fnsave
mov
mov
inc
pop
push
push
outsl
xlat
jecxz
mov
and
negl
movsb
cmp
addr16
adc
cmc
xchg
xlat
cmp
pushl
lret
xchg
stc
or
sbb
sub
dec
das
xchg
xorb
dec
mov
add
es
jns
ret
pop
dec
add
pop
mov
xor
adc
scas
jne
lret
dec
lock
std
sti
aad
push
pop
mov
add
icebp
sbb
add
adc
or
or
dec
inc
rolb
sub
cmc
push
xchg
in
in
adc
or
lods
jge
mov
es
setnp
dec
or
mov
aaa
adc
push
inc
mov
fwait
and
adcl
and
or
or
push
xor
pop
xchg
adc
push
das
mov
lods
inc
mov
fwait
xchg
testl
adc
int3
mov
js
sbb
xorl
jno
data16
or
xchg
adc
and
pop
repz
or
jp
filds
jns
xor
xor
stos
and
cmp
shrl
iret
aas
popf
gs
dec
lcall
mov
mov
popa
xchg
sub
pusha
cmpsl
ret
clc
xchg
es
add
pusha
add
pop
lea
xor
insb
add
cltd
call
lods
leave
push
xor
pop
push
adc
xor
mov
popa
inc
int
mov
jne
js
mov
lea
inc
vmovmskpd
mov
js
cwtl
cmp
negl
test
add
push
shr
xchg
repz
sbb
sbb
or
pcmpeqw
adc
or
adc
or
inc
mov
add
int3
xchg
mov
cmp
jp
xor
add
add
sti
test
aas
shlb
cwtl
inc
lock
sub
xchg
dec
mov
xor
inc
or
sbb
shll
fisubrs
jecxz
stos
das
and
ret
or
loope
sti
xor
sub
test
push
adc
push
xor
pop
sbbb
stos
xchg
and
mov
out
sbb
pop
and
xor
adc
sti
movsl
sbb
xor
subl
mull
xchg
jge
xchg
loop
adc
cmc
sbb
pop
cmp
jne
test
add
inc
stos
gs
repz
or
or
idivl
inc
adc
xor
repnz
divl
dec
orb
mov
xor
jmp
mov
pop
fldenv
and
mov
ljmp
sub
call
ficomps
imul
add
jo
jge
and
cwtl
push
outsl
and
stc
cwtl
lock
sbb
imul
int
push
in
cmpl
pushf
call
and
mov
mov
jno
imul
jg
mov
outsl
push
pop
xchg
sub
dec
pusha
add
xor
jo
ret
push
dec
or
sub
lahf
stos
leave
push
dec
loope
cmp
adc
movsb
sbb
inc
and
outsl
xor
loop
mov
es
xchg
add
mov
sbb
js
sbb
rcrl
add
sbb
inc
jne
movsb
js
xchg
stos
sub
mov
or
dec
add
inc
loope
gs
inc
les
cwtl
cmp
jns
es
and
inc
int
jg
sbbb
inc
shll
adc
push
xor
call
inc
adc
push
dec
js
jecxz
rorb
cwtl
jo
dec
cltd
out
test
mov
pop
js
sub
xchg
das
xor
int
dec
movsl
xor
pop
in
push
xor
mov
cltd
jne
push
dec
mov
adc
mov
adc
mov
mov
pop
rorl
xor
test
adc
test
mov
mov
addr16
xchg
js
stos
rorl
mov
or
xor
mov
loop
mov
lods
dec
sub
dec
imul
int
xor
popa
inc
add
adc
stos
pop
or
adc
int
repz
push
dec
stos
faddp
mov
xchg
add
fs
dec
xor
mov
adc
push
inc
daa
fwait
add
popa
das
cmp
add
int3
js
dec
fwait
gs
int3
pop
push
push
or
add
cmp
data16
or
cmpsl
dec
pushf
and
addr16
sbb
inc
mov
push
scas
in
jp
data16
stos
cmpsl
hlt
xchg
inc
push
cltd
imul
xor
xchg
popf
sbb
adc
inc
cmp
push
mov
imul
or
push
xor
sub
pop
fiadds
xor
pop
int3
js
or
aas
xlat
mov
xchg
sbbb
fidivs
in
xchg
popf
mov
xor
shll
cmp
popa
pop
add
cmc
data16
insl
push
das
adc
mov
and
and
dec
imul
shll
int3
fiadds
aad
idivl
pop
test
cmp
inc
jp
lea
push
test
subl
xor
ljmp
inc
inc
or
dec
ja
adc
addr16
xor
cmp
fwait
xor
sbb
mov
ljmp
mov
inc
fcmovne
and
add
fisubrs
mov
andl
leave
sti
and
lcall
fnstcw
add
scas
jp
mov
xlat
add
add
mov
mov
add
adc
dec
add
cmp
dec
subb
push
cmp
es
add
push
int
adc
xor
out
ret
js
pop
add
mov
daa
fsts
ret
cmp
pop
scas
adc
into
push
adc
or
arpl
mov
adc
inc
mov
inc
aas
inc
jge
rorl
lahf
test
jmp
int
mov
or
das
add
mov
lret
cmp
sub
adc
adc
pusha
std
test
xchg
enter
jae
adc
fs
jnp
loop
mov
sbb
or
or
or
sysret
push
dec
andb
sbb
mov
or
sub
loop
and
lods
ret
lods
notl
pop
mov
shll
int3
bound
lahf
pop
negl
in
movsb
pop
lock
xchg
sahf
fidivrs
xor
outsl
jno
pop
push
lds
loop
cmp
xor
pop
sub
sub
mov
adc
jmp
pop
push
adc
lahf
dec
int
aam
fistps
in
adc
dec
fnstenv
mov
pmullw
popa
jmp
aam
sub
dec
pop
push
aam
mov
push
pop
outsl
shlb
roll
push
push
je
fsubs
inc
sbb
fwait
shrb
aad
ret
fucom
leave
cmp
push
and
mov
push
dec
mov
js
int
and
mov
or
ror
fs
out
dec
mov
lds
fwait
leave
adc
cmp
in
lea
movsl
mov
xor
je
jnp
stos
loopne
cwtl
pop
subl
push
leave
jnp
shll
mov
dec
or
inc
push
xor
outsl
in
fisubrs
jno
mov
mov
inc
add
mov
and
shl
push
adc
lods
push
add
lcall
or
test
xchg
test
repz
and
and
sub
cltd
std
adc
cmp
mov
arpl
add
pshufb
mov
in
or
cmpsl
xor
rcrb
add
fsubs
outsl
dec
lds
rorl
adc
dec
sub
mov
add
sbb
and
adc
push
xorl
repz
mov
ret
addr16
fildl
in
test
inc
pop
xor
mov
xchg
stos
and
inc
adc
inc
xchg
mov
mov
data16
pop
leave
dec
shrl
ret
inc
inc
xor
push
add
dec
adc
rorl
mov
pop
add
mov
and
pop
insl
pop
invd
rolb
adc
adc
pop
mov
mov
mov
daa
cmp
sub
pop
add
and
add
sub
xor
mov
lahf
inc
xor
jb
inc
xor
xor
add
mov
push
xor
mov
mov
inc
and
lods
sbb
push
add
mov
or
lahf
fnstenv
test
xor
les
pop
lahf
je
push
ret
and
aaa
add
add
jb
xchg
xor
push
and
push
leave
sbbl
lahf
mov
push
pop
and
sbb
pop
int
push
cmp
push
xchg
xor
xchg
pop
pop
lds
push
aaa
cmp
int
xchg
pop
test
mov
sbb
insl
dec
and
std
lds
enter
adc
inc
lahf
and
test
pusha
mov
xchg
inc
jno
push
xor
mov
sbb
test
scas
adc
movsl
in
mov
inc
imul
mov
les
pop
xchg
cld
mov
js
ss
inc
orl
imull
xchg
xor
nop
jo
push
lret
push
xchg
push
sbb
mov
insl
add
and
test
add
mov
testl
or
outsl
adc
push
push
test
daa
xor
adc
pop
xor
add
fcomp
add
cmpsl
stos
imul
push
jp
stos
les
xor
or
push
sub
icebp
pop
mov
adc
mov
sbb
decl
js
sbb
xchg
inc
int
fsubp
fcoms
loopne
add
push
std
repz
sub
pushf
dec
orl
jae
adcl
or
dec
cmp
les
cmpsl
es
push
repz
push
jno
leave
and
mov
in
mov
mov
or
cmpsl
outsl
lahf
xor
sub
pop
lods
insb
inc
hlt
test
int
loope
mov
out
jns
mov
pop
and
mov
sti
int
sbb
mov
cmc
mov
add
pop
enter
jmp
adc
imul
push
sub
or
addr16
fnstcw
dec
sub
fwait
js
or
rcr
iret
dec
test
inc
xlat
cwtl
inc
sbb
imul
pushl
shll
jne
shll
and
jnp
aaa
dec
mov
das
mov
mov
gs
adc
es
pop
xor
fwait
dec
mov
iret
dec
stos
lcall
cwtl
pop
inc
xor
sbb
cmp
cmpsl
mov
adc
mov
mov
daa
dec
or
jecxz
fstps
out
and
adc
xorl
fwait
add
dec
mov
mull
es
fwait
aas
pop
mov
cmp
cmc
and
bound
insb
or
cmp
adc
sub
inc
inc
xor
jae
in
xchg
add
stos
ret
mov
int
mov
adc
es
cltd
push
inc
sub
dec
xchg
mov
xor
lods
cmp
or
test
lahf
loop
sbb
dec
lods
inc
pop
xchg
or
cwtl
inc
mov
dec
and
aas
mov
jg
lea
cmp
mov
mov
mov
cmp
sbb
loopne
mov
orps
add
or
fists
mov
dec
jne
ja
imul
jne
outsb
xor
insb
jne
push
jo
arpl
jbe
push
jp
insl
or
sbb
js
scas
jmp
scas
outsl
or
jo
jns
jno
mov
sub
pop
gs
pop
jno
jae
outsb
add
scas
fisttpl
add
add
jae
mov
push
add
jp
mov
add
jne
popa
or
pop
idivl
pop
outsl
jo
data16
idivl
add
inc
xor
and
aas
arpl
jns
adc
sbb
or
dec
and
and
dec
inc
test
inc
xchg
add
mov
add
or
or
xor
dec
jbe
lock
add
in
ljmp
add
insb
addb
add
pop
and
mov
add
mov
outsl
outsb
imul
add
add
adc
add
daa
add
std
jg
add
or
or
add
sub
or
xchg
adc
inc
or
insl
mov
subb
xor
aas
add
add
or
enter
add
ss
testl
add
add
sbb
inc
jb
popa
arpl
add
add
cs
or
lcall
insb
insb
xor
fisubrs
jbe
push
sbb
add
imul
std
or
pop
inc
popa
or
ja
xchg
aaa
sbb
add
add
add
sbb
mov
jmp
or
je
mov
inc
add
add
mov
inc
push
adc
js
test
or
or
fwait
and
pop
xor
jb
insb
movsl
int3
loop
loope
pop
cmp
sbb
pushl
push
adc
outsl
insl
and
test
nop
pop
int3
add
push
adc
fildl
loop
out
add
add
sub
sbb
sub
mov
fstpl
push
sub
sti
or
add
pusha
pop
out
lcall
outsb
outsl
lcall
pop
jmp
or
add
cmp
or
cmp
outsl
arpl
test
pop
dec
or
jge
jl
inc
clc
dec
arpl
lret
js
sub
xchg
add
clc
aaa
mov
jae
cmp
or
add
ljmp
dec
std
push
push
cmp
and
ljmp
xchg
daa
or
outsl
lods
or
roll
or
xorb
inc
enter
cmovs
scas
pop
add
cmp
or
ja
popa
je
popa
repnz
jecxz
xchg
lret
gs
sub
dec
daa
push
adc
push
dec
mov
pop
cwtl
outsb
in
mov
popf
or
or
sti
push
test
inc
inc
jns
arpl
push
test
add
cltd
nop
fwait
pop
arpl
add
push
adc
push
adc
mov
add
outsb
pop
or
gs
add
jo
outsb
je
mov
or
add
movl
inc
subb
rcrb
push
imul
mov
mov
adc
dec
adc
mov
in
or
inc
popa
fs
jmp
addr16
or
add
jg
jmp
outsl
outsl
les
leave
or
or
or
ret
sbb
enter
insb
pop
and
add
sti
add
jge
or
mov
aad
cli
mov
into
fs
ds
mov
inc
stos
mov
adc
or
pop
jge
orl
or
inc
push
pop
adc
cmpsb
aas
cmc
addr16
insl
jo
insb
pop
add
lds
push
inc
cld
and
faddl
cltd
add
icebp
mov
cmp
dec
xor
aam
add
or
or
aas
mov
std
in
jne
ja
loope
push
inc
ret
flds
sbb
inc
jae
clc
jg
cli
je
xchg
add
push
pop
add
mov
call
sbb
fs
or
loop
inc
push
cmp
int
roll
in
aam
inc
je
add
and
cltd
mov
push
adc
enter
jecxz
dec
int
or
add
stos
mov
xorl
or
add
add
mov
and
lret
sub
and
jp
xor
stos
and
popa
push
test
fcmovne
xchg
pop
rolb
add
ret
stos
and
dec
fimuls
jmp
or
imulb
or
rol
movsl
pop
jne
gs
in
subl
add
or
cmp
sar
cvtdq2ps
rcrl
pop
cmpsb
add
loopne
shl
fsubl
push
out
sahf
out
decl
pop
mov
sbb
scas
outsb
fs
and
pop
ss
pop
mov
jge
aaa
or
or
add
cmp
jbe
xlat
pop
pop
push
pop
or
pop
dec
add
sub
mov
sub
jbe
fdivr
mov
mov
jne
inc
or
add
push
pushf
jo
pushf
or
fldcw
imul
enter
inc
pop
stos
or
add
xorb
rol
cli
ret
pop
jmp
or
subl
loop
xor
popl
jae
or
sbb
add
and
shlb
xchg
push
or
add
enter
nop
jns
imul
inc
pop
ds
or
jb
outsl
std
loopne
pushf
inc
add
orl
call
add
repz
push
push
xchg
cld
mov
xor
lahf
or
arpl
adc
mov
push
push
orb
iret
and
adc
and
add
mov
pop
je
sbb
int3
or
xor
das
je
loopne
jb
push
enter
jg
addb
int3
xor
pop
in
popf
fs
insb
je
in
add
xchg
add
add
movsb
sub
or
add
data16
cmp
and
add
push
push
push
or
pusha
add
mov
lea
adc
rorl
inc
add
mov
and
and
inc
icebp
inc
dec
mov
aas
xor
lcall
dec
jo
inc
jmp
add
mov
add
jns
add
pop
loope
add
call
add
outsb
cwtl
je
imul
jecxz
or
inc
push
push
mov
lahf
stc
add
xor
xchg
clc
jo
dec
jo
int
add
add
push
add
or
nop
add
or
xor
inc
stos
mov
lar
sub
dec
cs
int
es
push
mov
sub
mov
or
fs
or
add
or
out
mov
add
mov
decb
into
add
fcmovnbe
mov
xor
or
push
jo
das
rcrl
mov
or
jns
inc
loope
add
pusha
imul
in
sub
mov
cmp
movb
jb
lds
filds
add
add
mov
cmp
inc
xor
sarl
adc
test
inc
add
or
or
inc
repnz
xchg
xchg
or
pop
out
add
or
mov
xlat
cmp
and
mov
add
or
xorb
mulb
andl
mov
adc
stos
mov
sbb
pop
ljmp
add
or
ret
push
pushf
push
ja
or
add
add
add
sbb
outsl
frstor
adc
inc
leave
add
out
ljmp
jmp
rcl
lods
mov
inc
xor
in
aam
xor
push
mov
jo
fwait
les
xor
daa
pop
sub
nop
jns
mov
rorb
fiadds
ret
in
mov
incb
lock
jl
orl
les
ss
pop
enter
leave
notb
add
loopne
outsb
add
adc
mov
sbb
dec
in
decb
lods
cld
add
aas
add
adc
push
adc
add
jne
adc
xchg
add
add
or
xor
aaa
enter
subb
and
add
fwait
cmpsb
imul
fldt
dec
xor
add
inc
fidivs
xor
push
incl
pusha
js
inc
insb
and
inc
popa
pop
sub
add
movsb
jns
int
lods
movaps
movsb
fwait
or
movsb
xor
imul
inc
pop
les
push
mov
xlat
and
and
mov
adc
and
pushf
xor
and
xchg
roll
add
xchg
repnz
dec
insb
sub
inc
add
rcrl
aaa
add
gs
pop
mov
inc
ret
add
sbb
pop
insb
insb
sbb
mov
dec
sub
sub
insb
add
push
cltd
in
dec
lcall
xor
pushf
jg
push
rclb
insb
sub
and
int
mov
add
ror
iret
ss
shl
out
lcall
jmp
leave
mov
xor
cmp
xor
and
scas
add
fnsave
test
and
dec
fldcw
stos
or
xor
fs
push
adc
out
sub
adc
fwait
add
xchg
sbb
or
and
iret
in
in
and
add
lea
pop
sub
pop
andb
inc
andb
je
bound
fs
xor
mov
imul
sub
clc
or
adc
and
or
push
or
lahf
popa
in
nop
or
xchg
adc
add
xor
shll
fnstenv
or
push
adc
jmp
fs
leave
popa
fistpll
add
pop
aas
add
mov
add
push
or
push
test
mov
sbb
nop
daa
and
je
insb
leave
xchg
cmp
xor
test
push
pop
fsubl
scas
imul
pop
aaa
adc
fisttpll
loopne
add
or
jl
xor
xchg
pop
adcl
leave
enter
add
cwtl
sbb
pop
imul
arpl
imul
lods
jo
adc
push
iret
adc
adc
insb
and
fisttps
je
insb
add
sub
push
orl
pop
and
adc
mov
xchg
or
push
jno
das
sbb
mov
ret
jg
sbb
lret
mov
lret
iret
jb
adc
jmp
pusha
insb
aas
adc
add
and
adc
mov
add
outsb
adc
stc
pop
out
sbb
out
or
sbb
imul
test
add
add
mov
outsl
add
xchg
cld
adc
mov
fisttps
lahf
and
mov
and
ret
pop
adc
jno
popf
xchg
add
cmp
lea
sbb
and
stos
sub
ret
cmc
lods
arpl
or
xor
arpl
sub
inc
repnz
pop
or
adc
cmp
adc
xor
fcomip
aas
nop
or
std
clc
jmp
xor
jnp
imul
aas
test
add
lret
or
xchg
lock
stos
pop
jmp
popa
mov
insb
xor
insl
inc
push
scas
mov
inc
dec
pop
imulb
cmp
push
leave
fists
push
adc
xor
mov
xor
dec
rcrl
add
icebp
es
sbb
add
jmp
push
cmp
adc
jmp
and
and
fists
inc
add
out
mov
pop
icebp
pop
dec
call
dec
popa
outsb
jnp
popa
xor
mov
dec
pop
scas
add
out
pop
repnz
add
xchg
adc
add
jnp
push
ja
out
test
sbb
sbb
add
xlat
fdivrl
ljmp
inc
push
mov
adcl
lea
bt
enter
iret
fs
pop
repz
add
adc
cld
daa
sbb
daa
cmp
pop
adc
movl
pop
sub
or
mov
inc
adc
mov
pop
or
sub
in
iret
addb
and
cmpsb
jmp
pop
add
clc
adc
inc
add
xchg
mov
sbb
xchg
lret
ret
sub
pop
andb
sub
xor
mov
add
and
and
vmread
out
sbb
dec
sbb
push
int3
add
outsl
and
pmulhuw
das
aas
jne
in
cmc
pop
fistpl
shll
push
mov
and
outsl
push
push
add
jo
push
adc
aad
push
inc
jmp
mov
divb
out
pop
aaa
rolb
push
lods
mov
xchg
dec
sbbl
and
inc
sbb
xor
push
sub
xor
and
leave
xchg
pop
jno
js
imul
jns
in
pop
mov
adc
cmpsb
inc
inc
xchg
dec
jp
pop
adc
sar
dec
sub
or
sub
arpl
pop
push
xor
je
sbb
shlb
adc
push
imul
xor
xor
mov
and
add
pop
push
dec
add
stos
imul
call
movsb
cltd
mov
pusha
mov
jo
cmc
xchg
fildl
or
leave
add
pusha
pusha
fidivrl
cld
pop
popa
sub
es
aas
add
push
sub
add
popa
push
adc
push
sub
fwait
cs
xor
jne
or
mov
cs
xor
xchg
in
std
negb
xor
push
push
add
outsl
push
or
std
imul
insl
add
sub
mov
idivw
mov
inc
fsubs
aas
adc
sub
fs
rclb
inc
and
add
loopne
cmp
mov
int3
or
mov
adc
pop
and
cmp
lcall
movsl
mov
insb
dec
and
rorb
adc
decb
push
lret
jbe
sbb
sub
sub
clc
incb
jmp
pop
popf
repz
add
insl
push
push
scas
in
idiv
imul
push
pop
mov
cld
mov
add
pop
sbb
test
add
cmp
xlat
sbb
or
add
jo
fcomip
int
push
add
sbb
pop
or
or
loopne
sbb
add
fists
xchg
xor
or
xor
xchg
out
ds
adc
lret
lods
pop
mov
sub
loopne
fwait
or
sbbl
adcl
and
or
pop
or
cmpsb
xchg
mov
add
add
or
addr16
and
adc
mov
test
sti
out
shlb
mov
add
or
mov
and
mov
inc
push
fstpt
inc
mov
sbb
js
jae
inc
sub
sbb
movsb
outsl
pop
dec
arpl
cmp
ss
leave
jo
inc
adc
jae
pop
xor
popf
adc
sbb
sub
sub
cmp
call
and
fxch
sub
cld
adc
into
sbb
das
adc
scas
cld
push
mov
add
and
cld
add
sbb
add
je
enter
daa
adc
enter
andl
je
pop
add
in
sbb
ss
sgdtl
ja
mov
xor
fnsave
lds
popa
into
add
stc
jbe
or
add
rcl
aam
sahf
out
aad
xlat
fcomp
out
sahf
out
fcmovnu
fstp
jnp
or
sbb
test
icebp
xchg
lds
push
movsb
test
add
and
out
xor
aaa
push
mov
je
xor
jnp
insb
in
add
or
cld
enter
mov
inc
adc
pusha
add
lret
std
js
jno
pop
add
and
adc
js
cmpsb
fs
add
push
fildll
lods
stos
ds
out
das
add
movsb
jae
sub
outsl
pop
repz
pop
and
inc
mov
cmp
fs
test
sub
add
fcom
cmp
jb
jmp
ss
jno
add
enter
inc
loope
lods
cli
outsb
inc
push
inc
sbb
cmp
dec
pushf
add
not
xor
aaa
jo
insb
fs
pop
pusha
loop
or
stos
inc
sbb
push
mov
sbb
cmp
repnz
jmp
pop
flds
inc
pushf
mov
aad
repnz
loop
cwtl
cld
cld
xchg
outsl
add
push
or
inc
sub
xchg
pop
pop
sub
add
push
pop
adc
sub
imul
dec
push
pop
arpl
jmp
fnstenv
sbb
lock
insb
insl
imul
inc
add
iret
cmp
or
adc
inc
push
or
addr16
fdivr
shll
pop
cmp
xchg
insb
or
mov
jnp
inc
lret
pop
mov
jb
data16
xor
inc
or
xor
dec
fisubrs
int
aam
fs
cmp
jne
outsb
adc
jne
imul
outsl
jne
xor
dec
enter
aas
add
or
jle
fwait
addr16
test
outsb
arpl
lods
add
gs
add
add
arpl
add
jne
sbb
dec
inc
jnp
mov
and
adc
xchg
jne
imul
pop
push
outsb
popa
jb
aaa
popa
ja
gs
cmp
push
push
jb
xchg
fwait
mov
outsb
xor
xor
imul
mov
push
inc
and
gs
jae
pop
out
mov
push
dec
scas
inc
mov
data16
gs
iret
or
imul
rcrb
outsl
jb
arpl
clc
arpl
sbb
rolb
inc
daa
filds
adc
or
loopne
notb
sti
mov
add
xor
push
pop
fnstenv
es
cmp
pop
cwtl
leave
loopne
push
fistl
and
xchg
add
add
loopw
fwait
push
push
inc
inc
inc
paddw
add
mov
jo
add
mov
ss
sbb
push
jno
lea
sub
sbb
iret
mov
cmpsl
inc
int3
test
lods
pop
or
jno
lea
pop
dec
sub
inc
mov
mov
sbbb
add
sbb
or
es
xchg
pop
xchg
xchg
or
or
or
pop
xchg
pop
inc
push
push
fisttpl
jo
inc
iret
adc
and
mov
adc
in
push
sti
add
std
push
dec
inc
out
pushf
insb
fistpl
mov
leave
leave
and
add
add
sub
sub
xor
leave
pop
xor
cmp
adc
je
mov
sub
cwtl
arpl
icebp
jo
push
xor
adc
dec
pop
in
scas
mov
insb
adc
and
adc
add
fidivl
sub
pop
xchg
jae
add
pop
sahf
dec
xchg
testb
jns
and
test
cmp
stc
add
mov
xor
push
push
aas
inc
mov
incl
add
cmp
call
rorl
add
xchg
push
dec
outsl
daa
jno
inc
cltd
nop
movsl
sbb
and
in
lods
add
xchg
dec
push
adc
mov
cmp
insb
dec
push
push
add
pop
into
push
int
inc
scas
sbb
add
cs
jmp
pop
push
add
inc
mov
xor
inc
mov
jbe
sub
add
or
cmp
or
dec
data16
mov
inc
jle
pusha
andl
add
sbb
fs
add
add
or
jns
push
xchg
sub
dec
sbb
inc
push
push
out
dec
xlat
sbb
or
sbb
insb
rolb
daa
add
add
and
add
push
imul
rolb
arpl
mov
in
hlt
jne
add
xchg
xchg
add
inc
xchg
xchg
add
add
xchg
push
pop
pop
or
or
popa
data16
fwait
or
or
dec
xchg
xchg
or
xchg
xchg
cmovb
push
cltd
nop
xchg
adc
adc
add
adcl
sbb
push
sbb
notl
jnp
sti
lods
xor
sub
xor
xor
push
and
test
mov
das
dec
daa
mov
insb
mov
pushl
add
pop
xor
fs
jnp
inc
pusha
jb
dec
dec
jge
inc
or
or
jmp
das
daa
push
push
hlt
or
sbb
or
push
add
leave
cmp
je
adc
xchg
cmp
sbb
add
mov
adcl
or
and
insb
je
jbe
enter
mov
scas
add
scas
insl
test
fmuls
sbbb
mov
xor
pop
push
jb
decl
js
dec
add
push
ret
movsl
inc
jae
scas
inc
pcmpeqb
add
pop
xor
xchg
adc
cmp
daa
pop
or
aas
shrl
mov
xchg
or
fsubs
pop
leave
scas
clc
xor
mov
pop
sbb
nop
or
int3
or
sbb
xorl
mov
pop
push
pop
es
mov
or
call
and
xorl
or
inc
mov
push
leave
and
add
and
xor
and
cmp
and
xor
push
leave
mov
xchg
or
inc
add
push
leave
and
jno
fwait
mov
xchg
sub
enter
nop
or
enter
and
sbb
js
ret
xchg
or
xor
and
pusha
pop
les
enter
lds
fs
and
lcall
enter
and
and
or
push
add
repnz
or
popf
sbb
or
dec
repz
xchg
cmp
roll
mov
sbb
mov
dec
mov
mov
cmova
and
push
adc
xchg
or
and
sub
orb
push
cmp
cmpl
cmpl
push
adc
and
dec
add
enter
inc
or
adc
fs
adc
or
mov
jb
push
sbb
cs
jb
push
cmp
nop
inc
sbb
sbb
sbb
inc
push
cltd
or
sbb
sbb
sub
sbb
sbb
das
pop
nop
inc
cmpsb
inc
xor
sub
dec
and
and
inc
cmpsb
inc
push
and
nop
test
and
sub
es
cwtl
daa
jge
cmp
sub
nop
adc
dec
push
cltd
or
sub
sub
inc
cmpsb
inc
inc
sub
or
adc
sbb
sbb
jo
add
xlat
pop
xor
fadds
cmp
inc
pop
cmp
inc
cmpsb
inc
push
xor
enter
xor
adc
daa
fmull
sbb
pop
inc
pop
xor
in
mov
sti
out
out
orb
adc
xor
sbb
xor
and
enter
add
orb
or
add
and
and
add
andb
orb
and
xor
sub
xor
and
enter
add
orb
or
add
xor
xor
add
xorb
orb
xor
xor
cmp
xor
and
enter
add
orb
or
add
inc
inc
inc
enter
inc
inc
orb
inc
inc
add
add
inc
dec
dec
xor
and
enter
add
orb
or
add
push
push
push
enter
push
push
orb
push
push
add
add
push
pop
pop
xor
and
enter
add
orb
or
add
pusha
popa
enter
arpl
and
gs
add
addr16
and
and
enter
add
orb
or
add
jo
jb
add
xorb
or
add
add
add
ja
jns
orb
jnp
add
add
xor
and
enter
enter
addl
add
add
xchg
and
add
mov
nop
xchg
xchg
enter
xchg
xchg
orb
xchg
xchg
add
add
xchg
cwtl
cltd
xor
and
enter
add
orb
or
add
mov
xor
and
movsl
cmpsb
add
add
cmpsl
test
iret
test
stos
lods
stos
add
leave
and
lods
or
add
lods
scas
scas
enter
mov
orb
mov
add
add
mov
mov
orb
mov
mov
or
mov
mov
xor
and
ret
push
nop
xchg
lds
add
mov
inc
push
nop
enter
add
int3
add
inc
push
int
push
nop
add
shll
inc
rcl
inc
push
nop
add
aad
add
xlat
sbb
nop
fcomp
ficoml
faddl
sbb
fstp
push
nop
add
loope
add
inc
loop
inc
push
nop
add
in
add
out
sbb
nop
call
fs
in
add
inc
push
in
out
push
nop
add
icebp
add
inc
repnz
push
nop
add
cmc
add
div
sbb
nop
clc
stc
cli
nop
add
cld
add
inc
push
std
pop
leave
add
add
enter
add
orb
add
add
add
push
pop
or
orb
or
add
add
or
xor
and
enter
enter
adc
orb
adc
add
add
push
pop
sbb
orb
sbb
add
add
sbb
xor
and
enter
enter
and
orb
and
add
add
es
sub
orb
sub
add
add
sub
xor
and
enter
enter
xor
orb
xor
add
add
ss
cmp
orb
cmp
add
add
cmp
xor
and
enter
leave
and
test
inc
aam
enter
inc
inc
xor
and
enter
add
orb
or
add
dec
dec
dec
enter
dec
push
orb
push
push
add
add
push
push
push
xor
and
enter
add
orb
or
add
pop
pop
pop
enter
pop
pusha
orb
popa
bound
enter
fs
and
enter
add
orb
or
add
insb
insl
outsb
enter
outsl
jo
or
add
add
add
jae
jne
orb
ja
add
add
add
orb
or
add
jl
jle
add
cmpb
or
add
xor
or
xchg
mov
mov
mov
orb
xchg
xchg
add
add
xchg
xchg
xchg
xor
and
enter
add
orb
or
add
pushf
popf
sahf
enter
lahf
mov
mov
xor
bound
mov
inc
fisttpll
dec
xor
push
pop
add
jp
adc
add
add
adc
push
cmp
sub
or
nop
nop
or
cltd
nop
or
cltd
nop
or
nop
cltd
lcall
popf
sahf
or
xchg
or
dec
fadds
movsl
sub
or
fadds
or
xchg
dec
lods
sbb
dec
enter
mov
test
sub
mov
or
mov
mov
pop
dec
enter
mov
enter
mov
test
mov
sub
test
roll
test
enter
enter
enter
enter
int3
int
jb
test
sub
rcl
cmp
pop
in
aad
ss
adc
or
adc
popa
adc
sub
or
popa
sub
or
adc
fimuls
adc
popa
adc
sub
or
and
in
adc
and
or
xor
jmp
rolb
pop
ss
or
and
outsl
and
icebp
adc
popa
adc
sbb
hlt
mov
ss
sub
adc
and
idiv
or
gs
cli
xchg
sti
adc
and
or
and
cs
jge
sub
cmp
sub
add
flds
add
insb
inc
xchg
and
dec
xchg
dec
push
or
dec
or
pop
jbe
es
or
adc
and
adc
mov
adc
adc
and
adc
pop
ss
push
push
pop
inc
adc
sbb
mov
xor
sbb
sbb
lret
adc
popa
adc
pop
or
adc
push
pop
xor
lret
jno
and
mov
daa
sub
sub
adc
sub
and
fildll
pop
xor
lret
xor
insl
lret
and
insb
xor
adc
and
adc
aaa
cmp
pop
xor
cmp
adc
xor
aas
or
xor
inc
inc
in
dec
enter
inc
fwait
popa
lret
gs
or
inc
dec
sbb
ss
or
dec
fadds
test
dec
dec
or
push
push
push
test
outsl
push
push
fadds
or
pop
pop
pop
test
pop
pop
enter
pop
pop
pop
dec
enter
popa
bound
ret
mov
sti
xor
adc
adc
and
push
xor
imul
xor
outsl
adc
and
jo
jb
adc
and
xor
adc
jne
ja
adc
or
jp
jl
dec
enter
jle
adc
addb
addb
xchg
test
xchg
enter
mov
sbb
or
lea
jb
test
and
and
sub
jb
sub
and
sub
push
jb
mov
jb,pn
lahf
es
cwtl
mov
or
mov
movsl
xchg
cmpsb
fs
cmpsl
test
test
stos
das
stos
xchg
cwtl
nop
or
lods
scas
ret
inc
mov
inc
es
mov
es
es
mov
cs
inc
mov
daa
mov
mov
add
cltd
mov
push
cmp
sub
fsubrs
rclb
and
ret
dec
ret
dec
enter
adc
or
xor
imul
dec
dec
enter
lret
popa
dec
or
int3
or
adc
and
into
iret
shlb
adc
and
shlb
and
xor
aam
adc
and
xlat
fcomps
adc
and
fisubl
enter
pop
dec
enter
fistps
dec
enter
loope
and
xor
jecxz
sbb
and
sub
or
aaa
cltd
mov
cltd
jmp
or
push
in
in
fwait
nop
or
nop
in
or
pusha
repnz
nop
or
or
notl
dec
stc
sub
nop
es
sti
cld
sub
pop
cs
std
outsb
jns
pushf
nop
incl
adc
cs
mov
add
add
add
xchg
pop
cs
nop
push
pop
orl
or
cltd
or
pop
sahf
xchg
or
nop
in
jnp
pop
adcl
or
adc
push
aaa
nop
in
or
popa
sbb
pop
cs
sbb
cltd
nop
in
sbb
sbb
jb
pop
cltd
nop
or
or
and
inc
cwtl
nop
and
es
fs
xchg
sub
sub
xchg
dec
es
fs
xor
dec
xor
xor
xor
je
aaa
xchg
dec
es
cmp
cmp
inc
cmp
es
adc
mov
jb
mov
inc
es
ret
sbb
dec
es
inc
dec
dec
fs
dec
inc
xchg
dec
es
dec
dec
enter
dec
ljmp
sbb
sbbl
mov
push
push
fs
mov
push
daa
fs
es
pop
pop
cs
pop
add
pop
cs
test
pop
pop
enter
pop
pop
pusha
dec
enter
bound
dec
enter
xor
adc
mov
adc
and
imul
insb
insl
xor
adc
outsb
outsl
jo
xor
adc
jae
test
and
dec
enter
ja
test
jns
enter
jnp
jge
enter
jg
test
addl
enter
and
dec
mov
mov
and
ret
mov
lea
xor
popa
adc
and
adc
xchg
adc
xor
xchg
xchg
cwtl
ret
adc
and
cltd
lcall
popf
sub
adc
sahf
fistps
ljmp
and
outsl
mov
adc
movsl
cmpsb
cmpsl
and
test
adc
and
sub
dec
or
dec
enter
fwait
xor
xor
adc
dec
enter
divl
test
enter
mov
mov
dec
fadd
push
rol
adc
and
ret
test
and
addr16
dec
enter
leave
lret
enter
int3
enter
int
into
outsl
iret
adc
popa
dec
ror
rcl
popa
adc
popa
outsl
rcl
aaa
adc
xlat
popa
adc
and
fcmovu
out
sub
sub
xchg
popa
inc
lods
mov
loopne
ret
or
mov
movsl
cwtl
xor
insb
jecxz
in
in
xchg
in
aaa
ds
in
cwtl
nop
out
cmp
or
jmp
mov
fs
cwtl
mov
fwait
out
sub
inc
lock
inc
xchg
lret
mov
ret
es
hlt
sub
insb
cmc
in
mulb
or
clc
xor
ret
or
cltd
cli
xchg
sti
cwtl
adc
mov
pop
std
imul
daa
insb
ret
sbb
das
jge
mov
jbe
or
adc
and
xor
pop
or
xor
adc
or
and
xor
or
lret
and
adcb
and
and
lret
and
xor
xor
xor
adc
sbb
and
xor
sbb
and
xor
and
and
fbld
mov
xor
and
adc
and
and
xor
sub
xor
sub
xor
xor
adc
and
xor
xor
adc
and
xor
cmp
adc
and
cmp
cmp
test
and
xchg
dec
aas
pushf
inc
leave
test
aaa
inc
inc
test
stos
inc
inc
sub
dec
enter
dec
test
dec
dec
dec
enter
lret
xchg
dec
enter
fmuls
sub
push
push
enter
push
out
pop
stos
orb
add
nop
add
das
nop
add
nop
das
das
das
nop
in
in
das
and
add
cmp
sahf
das
popa
add
nop
das
das
sub
xor
arpl
mov
jo
insb
lret
adc
imul
push
imul
lret
and
popa
adc
and
outsl
mov
mov
ss
imul
mov
mov
je
pusha
ss
adc
mov
pop
mov
push
ja
js
xor
adc
jnp
adc
and
xor
xor
aaa
or
lret
gs
lea
and
lret
and
xchg
ss
nop
xchg
lret
gs
mov
and
or
lret
mov
sub
xchg
das
outsb
das
cs
mov
sti
xchg
mov
xchg
xchg
or
or
add
or
enter
das
fwait
adc
mov
dec
cwtl
mov
mov
popa
inc
xchg
xchg
mov
nop
or
movsl
cmpsb
or
test
insb
ret
test
fbld
fs
lods
lods
scas
inc
es
scas
mov
inc
es
mov
fwait
adc
mov
mov
mov
fwait
mov
or
cltd
nop
or
or
nop
or
in
or
insb
inc
cwtl
nop
ret
les
ret
cmpsl
or
inc
leave
pop
lret
es
cwtl
nop
or
cmp
fs
dec
rcl
cmpsl
fwait
mov
imul
cmpsl
or
nop
or
cltd
nop
or
cltd
nop
or
ficoms
loopne
cltd
nop
or
cltd
nop
or
out
or
cltd
nop
or
cltd
nop
or
out
nop
or
cltd
nop
or
cltd
nop
or
notb
clc
stc
cltd
nop
or
cltd
nop
or
incb
xchg
daa
inc
push
adc
xor
push
and
sbb
shlb
xor
push
mov
lret
es
fs
mov
test
shl
lea
ss
in
sbb
xor
cltd
lret
adc
lret
ss
aaa
mov
and
and
and
ss
outsl
rcl
push
mov
mov
jbe
dec
shll
aam
aad
adc
outsl
and
fsubs
and
and
fistpl
fsubl
fstp
push
mov
mov
sbb
fs
mov
sbb
and
in
and
and
xor
out
call
and
xchg
movsb
cltd
movsb
sbb
dec
pop
inc
jge
sbb
xchg
sub
sub
inc
icebp
in
flds
lret
and
add
neg
test
and
imul
mov
shlb
stc
jno
cli
adc
and
sti
cld
std
ss
outsl
push
pushl
add
or
xchg
in
add
cmc
add
add
push
adc
pop
test
sbb
cmp
sbb
sbb
push
sahf
push
pop
jb
pop
mov
push
push
mov
mov
xchg
push
xor
mov
mov
pop
push
jp
mov
mov
inc
push
push
mov
mov
sub
sbb
sbb
push
and
es
and
push
push
sbb
aam
and
lret
and
push
pop
add
sub
and
or
mov
add
and
leave
jb
jb
and
and
in
test
jb
sub
fistpl
lret
push
sub
mov
jb
adc
or
jb
sub
xor
xor
stos
xor
adc
xchg
dec
xor
adc
fs
inc
int
fs
push
cmp
cmc
ds
or
inc
add
cltd
nop
or
or
and
fstpt
and
inc
sbb
pop
movb
pop
mov
mov
inc
dec
jecxz
sbb
mov
dec
and
xchg
dec
enter
push
push
test
push
push
loopne
dec
enter
push
mov
loope
and
pop
sbb
in
pop
cmp
dec
es
and
or
jne
sbb
or
mov
bound
or
mov
nop
or
cltd
insb
inc
test
push
roll
fs
ret
outsb
outsl
push
jo
xor
xchg
or
cmp
pop
jae
je
pop
ret
jne
jbe
xchg
pop
push
adc
xor
mov
jp
jnp
dec
or
jl
jge
pop
mov
ss
dec
jg
adc
and
cmp
xor
addl
xchg
dec
cwtl
nop
xchg
ret
mov
mov
fs
mov
inc
nop
fs
es
xchg
xchg
es
es
xchg
xchg
nop
es
xchg
cwtl
add
arpl
cwtl
cltd
jne
dec
mov
movsb
or
pushf
add
sahf
lahf
push
or
fwait
mov
es
lods
mov
fs
es
movsl
cmpsb
inc
es
or
insb
test
xchg
dec
lcall
arpl
inc
scas
imul
in
or
lcall
mov
cs
adc
mov
mov
or
mov
inc
xchg
lcall
es
shlb
xor
ret
add
or
arpl
es
enter
nop
or
mov
or
es
out
iret
sarb
fwait
nop
in
rcl
inc
xchg
dec
cwtl
mov
or
fs
xchg
dec
xlat
or
es
test
mov
fsubl
lret
inc
lret
ss
lea
adc
and
loope
popa
jecxz
enter
jb
in
adc
test
dec
out
popa
dec
enter
jmp
xor
sub
in
fadds
out
aaa
adc
and
lock
popa
adc
popa
shl
aaa
repz
adc
hlt
cmc
aaa
dec
testb
xor
idiv
gs
gs
aaa
test
dec
enter
dec
cld
std
enter
outsl
cmpsb
ljmp
cmp
add
pop
add
add
pop
cs
add
dec
add
js
pop
jmp
add
in
pop
or
mov
or
dec
or
push
jb
or
pop
pop
xchg
dec
xchg
lret
sbb
in
fs
in
enter
adc
xor
or
adc
ss
adc
cmpsl
sbb
sbb
lret
adc
sub
sbb
and
sbb
pop
cmp
jb
lret
pop
pop
pop
pop
cs
adc
inc
cmp
or
mov
cltd
sub
out
fs
hlt
sub
fs
es
cs
arpl
dec
test
mov
xor
fwait
nop
in
xor
rorb
mov
jge
sbb
pop
pop
test
and
pop
mov
cmp
cmp
cmp
cmp
inc
ds
or
cltd
aas
dec
inc
pop
ror
or
inc
mov
test
inc
pop
jns
jl
pop
and
add
dec
dec
pop
mov
ss
popa
push
sub
dec
mov
dec
or
shr
dec
push
push
push
pop
lds
pop
repnz
pop
push
pop
push
pop
ret
adcl
mov
pop
push
pop
orb
pop
daa
add
pop
pop
in
nop
add
nop
pop
pop
pop
jb
test
push
xor
adc
arpl
fs
mov
xchg
dec
push
xchg
into
pop
pop
pop
sbb
std
pop
repnz
push
outsb
pop
outsl
pop
jo
cmpl
shll
lret
and
je
xor
jne
jbe
inc
test
test
js
enter
jns
cmp
sbb
cmp
and
out
or
lcall
cwtl
nop
addl
test
or
pop
xchg
xchg
mov
push
mov
and
mov
mov
dec
mull
inc
es
nop
xchg
fs
bound
xchg
dec
jbe
inc
xchg
lret
es
popa
mov
insb
cwtl
or
xchg
lret
es
push
setl
popf
cmp
nop
cwtl
adc
ret
mov
mov
nop
movsb
movsl
cmpsb
cwtl
nop
or
es
dec
stos
stos
cmp
lods
lods
or
subl
cltd
mov
or
cltd
xor
mov
mov
nop
in
mov
mov
nop
or
cltd
nop
or
cltd
nop
or
nop
mov
dec
lcall
ret
gs
es
enter
fs
lret
fs
sub
jmp
adc
add
and
xor
rcl
sbb
push
adc
sbb
cmp
aad
fcmovnbe
dec
sbb
fsubs
test
fcmovu
sub
dec
enter
mov
enter
fbld
dec
enter
loop
shll
in
or
xchg
dec
enter
out
dec
enter
jmp
test
ds
or
test
inc
push
or
inc
xchg
es
pop
roll
test
gs
enter
clc
stc
cli
dec
enter
cld
std
orb
call
and
inc
mov
inc
xchg
inc
pop
and
push
test
xchg
sub
inc
or
in
sub
or
cmc
or
dec
es
in
in
add
and
in
push
cmp
add
nop
add
and
and
cmp
and
sub
dec
enter
push
pop
and
mov
lret
scas
and
and
add
and
and
jb
test
inc
sbb
rcr
test
sub
ret
test
jb
cs
push
fadds
xor
sub
dec
xor
dec
enter
jbe
aaa
test
test
cmp
mov
dec
fdivrs
outsl
cmp
test
and
inc
aaa
inc
popa
adc
and
outsl
and
ss
filds
push
mov
mov
dec
inc
fimuls
pop
mov
mov
jb
adc
jle
and
and
dec
inc
shlb
xchg
in
subl
dec
lcall
add
cmp
and
and
push
mov
dec
jmp
pop
cs
adc
or
es
pop
aaa
es
cwtl
pusha
xor
push
pop
jo
ret
arpl
dec
and
insb
inc
gs
insb
addr16
push
cmpl
and
jns
and
in
inc
push
enter
and
jbe
je
adc
cmp
popa
adc
je
jne
enter
xorl
and
and
in
or
jp
jnp
in
cwtl
nop
jl
pop
popa
cwtl
nop
in
jle
jg
arpl
cwtl
adc
xlat
addb
addl
test
xchg
test
cltd
xchg
adc
push
mov
mov
mov
cmpl
and
jbe
jle
jb
jb
xlat
xchg
xchg
dec
enter
xchg
xchg
xchg
xchg
sub
dec
xchg
or
pop
mov
jmp
and
insb
and
and
and
pushf
xor
dec
sahf
cltd
sbbb
mov
mov
fs
xchg
and
es
movsl
xor
or
lcall
stos
inc
es
lods
in
es
scas
mov
lahf
and
cwtl
nop
mov
mov
mov
arpl
mov
mov
fwait
mov
cltd
mov
sbb
or
ret
mov
aaa
dec
test
mov
inc
xchg
cs
inc
xchg
nop
rol
mov
les
nop
or
nop
or
cltd
nop
or
or
cltd
mov
cltd
rcl
or
or
and
jge
mov
insb
aad
xchg
xlat
nop
or
cltd
nop
or
cltd
nop
or
ficomps
or
cltd
nop
or
jecxz
or
cltd
nop
or
cltd
nop
or
jmp
or
lcall
pusha
inc
xchg
dec
test
es
cmc
fs
es
clc
es
es
cli
sti
inc
es
cld
std
push
inc
es
incl
movb
add
enter
pop
add
add
nop
pop
repnz
add
in
cmp
and
and
and
add
or
or
pop
repnz
push
or
or
cmp
and
and
and
jns
movups
adc
in
inc
push
enter
and
mov
es
sbb
inc
es
inc
sbb
insb
sbb
xchg
dec
xchg
lret
cltd
and
test
dec
jb
and
and
test
outsl
pop
daa
pop
cs
mov
cltd
sub
pop
cs
sub
nop
lods
ljmp
popa
add
enter
mov
xor
aaa
ss
cmp
and
and
or
in
and
nop
in
push
cmp
dec
cmp
ds
aas
movsb
or
sti
inc
lea
fs
fs
xchg
xchg
inc
inc
inc
imul
repz
push
inc
mov
dec
repz
fs
es
dec
dec
inc
cwtl
adc
dec
xchg
push
xor
insb
push
or
cwtl
adc
push
and
inc
xchg
loopne
push
pop
nop
es
pop
pop
lea
cltd
pop
pop
inc
cwtl
nop
or
xchg
outsl
jmp
test
nop
in
and
popa
adc
fs
dec
enter
push
imul
push
and
and
and
and
outsl
enter
jo
fdivs
fadds
test
test
jge
gs
enter
inc
jns
test
and
jnp
and
jb
jl
sbb
jle
jg
mov
rolb
mov
rolb
adc
and
test
or
xchg
fs
and
insb
inc
xchg
dec
mov
mov
dec
xchg
lret
cwtl
nop
subl
mov
inc
es
xchg
xchg
adc
fs
jge
cwtl
pop
movsb
or
jns
je
cltd
pushf
and
popf
and
enter
lahf
and
mov
in
mov
cwtl
nop
in
mov
or
das
movsl
inc
cmpsb
ret
lods
or
fs
mov
stos
nop
pop
inc
daa
lods
and
lods
and
in
cmp
and
xchg
lret
sub
mov
outsl
inc
daa
fs
repz
nop
pop
mov
mov
test
mov
inc
es
mov
fs
inc
es
add
and
out
les
lcall
es
imul
and
and
jmp
int3
sub
or
xchg
dec
enter
xor
and
ret
dec
rclb
push
adc
rcl
and
and
xlat
dec
sbb
fdivs
adc
test
xor
jge
xor
adc
dec
adc
popa
sub
mov
add
xchg
ja
xor
lret
jae
in
adc
adc
out
pop
call
jmp
xor
jmp
in
in
mov
xor
out
xchg
out
mov
adc
lock
test
adc
and
repnz
stos
orb
cmc
in
push
in
mov
and
and
icebp
cli
and
mov
sti
cld
popa
xor
adc
incl
and
xchg
in
add
xchg
in
add
jle
xchg
in
add
xchg
ljmp
leave
jb
or
jo,pn
or
addl
cltd
mov
sbb
or
bound
adc
pop
cs
adc
and
xchg
push
sbb
sti
add
out
xorl
add
sbb
das
sbb
cltd
mov
pop
in
and
xchg
in
and
cwtl
nop
and
xchg
and
fbld
daa
pop
cs
inc
sub
sub
fwait
nop
or
sub
sub
jmp
flds
push
enter
stos
xor
dec
xor
dec
enter
mov
xor
cmp
cmp
dec
enter
cmp
adc
popa
xchg
cmp
adc
aas
inc
inc
and
ret
inc
fildl
popa
adc
inc
inc
cmpsl
inc
xor
popa
adc
dec
and
adc
cmpl
mov
and
dec
and
mov
sbb
pop
adc
push
ret
push
xor
leave
push
ss
pop
dec
enter
jp
push
movb
sub
and
and
subl
popa
inc
sbb
pop
pop
sbbb
popa
xor
insb
inc
jns
cltd
arpl
aam
outsl
imul
addr16
push
cs
imul
or
insb
xlat
popf
nop
or
and
inc
push
sbb
jo
jno
cmpl
and
pmulhuw
and
inc
push
enter
js
cmp
pop
bnd
jp
jnp
and
in
jl
jge
push
enter
and
andb
pop
repnz
andl
cmpl
and
add
xchg
xchg
pop
repnz
push
mov
mov
mov
cmpl
and
jns
jge
and
and
adc
adc
call
xchg
and
xor
repnz
and
enter
lcall
pushf
mov
and
lahf
rorl
xor
popa
adc
and
mov
sub
xor
sub
shlb
dec
fsubrs
sub
inc
lods
and
mov
sub
and
or
or
cltd
mov
mov
adc
add
xchg
mov
cltd
nop
or
mov
sbb
inc
jmp
and
inc
and
sbb
subl
ret
enter
cs
fwait
mov
pop
lret
int3
sti
int
test
pop
cs
cltd
iret
dec
nop
cwtl
xor
shl
rcrl
mov
push
rol
in
cltd
adc
fs
jns
nop
in
or
fildll
fadds
nop
cwtl
fldcw
fidivrl
pop
cs
mov
pop
cs
fnstsw
ficomps
loopne
loope
mov
icebp
jecxz
insb
inc
es
ret
lock
lret
es
outsl
push
call
jmp
cwtl
xor
jb
repz
mov
imul
and
fwait
mov
out
xor
mov
pop
icebp
repnz
repz
hlt
ret
cmc
cltd
cwtl
adc
mov
adc
test
fs
sti
cld
xlat
inc
es
sbb
incl
and
in
inc
add
je
and
add
enter
and
and
and
and
pmulhuw
and
or
inc
pop
push
and
cltd
inc
call
adc
xlat
cmp
pop
repnz
adc
adc
and
in
adc
enter
and
and
and
and
and
in
cmp
and
pop
jbe
pop
ret
out
and
adc
jb
test
and
gs
and
daa
and
sub
push
sub
nop
jmp
sub
xor
lret
gs
dec
sub
pop
and
cs
ret
mov
xor
xor
lret
and
xor
and
xor
lret
and
test
mov
rcll
and
in
in
cmp
cs
aas
mov
inc
inc
push
loopne
inc
and
and
popa
dec
fmuls
adc
popa
adc
inc
and
fwait
mov
cmp
dec
push
dec
or
dec
dec
fbstp
outsl
dec
dec
popa
cltd
mov
fwait
push
cmpsl
push
aaa
push
fs
cmp
ret
mov
push
fs
pop
es
inc
es
pop
or
inc
pop
das
pop
arpl
fs
in
pusha
popa
pop
cs
ret
inc
fisubs
test
or
insb
inc
pusha
data16
addr16
push
arpl
imul
or
nop
or
cltd
nop
or
cltd
nop
or
mov
cltd
nop
ja
jns
adc
jnp
cltd
nop
or
cltd
nop
or
nop
or
cltd
nop
or
cltd
nop
or
nop
mov
xor
mov
ret
pop
cs
nop
mov
mov
jae
sub
inc
es
jmp
fs
xchg
dec
xchg
lret
es
aaa
aad
mov
cltd
sub
mov
push
inc
push
fs
and
inc
xchg
inc
xchg
xchg
and
and
and
ret
mov
movsb
daa
movsl
or
test
cmpsb
mov
sbb
or
stos
adc
jb
stos
dec
lods
and
or
push
adc
fs
or
mov
cwtl
nop
in
mov
arpl
add
insb
inc
lcall
fs
mov
adc
mov
mov
fs
sti
out
ret
or
lds
test
pop
aaa
enter
adc
leave
and
or
fwait
mov
into
popa
iret
ret
cltd
adc
movsb
shlb
xchg
rcrb
mov
rcrl
jb
lret
lcall
insb
inc
xchg
pop
xlat
fadds
pusha
ret
outsl
inc
test
xor
add
mov
fidivs
dec
es
cmpsl
loope
fwait
nop
in
pop
jcxz
jge
cltd
nop
or
out
dec
lods
out
call
pop
jmp
mov
jmp
in
in
enter
or
lods
out
test
dec
lock
fs
dec
enter
aaa
xchg
repz
leave
test
push
sub
popa
ret
ja
mov
pop
mov
nop
or
cli
mov
sub
cld
test
jge
pop
gs
rorb
add
add
and
push
popa
add
in
cmp
and
xchg
dec
xchg
lret
push
xchg
pop
jge
xchg
dec
xchg
dec
test
mov
xor
pop
jmp
adc
and
adc
and
rorl
adc
and
bound
adc
fs
push
mov
inc
es
sbb
es
or
xchg
dec
stos
sbb
xchg
dec
inc
pop
test
sbb
lods
and
enter
in
cmpsb
and
sub
dec
and
and
sub
jbe
sub
popa
sub
sbb
pop
addr16
sbb
push
les
or
lret
or
jmp
dec
enter
aaa
in
and
xor
cmp
cmpsl
and
or
cs
add
cmc
cmp
fs
xchg
das
aas
inc
inc
inc
es
inc
fs
es
inc
inc
or
dec
fs
test
dec
dec
in
movsl
mov
cmp
and
and
lahf
push
mov
and
lcall
or
push
inc
push
or
or
pop
jnp
pop
imul
mov
pop
pop
pop
mov
enter
sub
pop
and
mov
add
inc
cwtl
nop
or
imul
gs
dec
enter
jge
addr16
imul
imul
inc
outsb
jne
xchg
outsb
and
pop
cs
inc
and
mov
or
jae
cltd
nop
or
pop
push
add
dec
lcall
mov
jns
jp
adc
popa
adc
jl
jge
adc
popa
or
fadds
xorb
xor
mov
push
test
adc
cltd
lret
adc
xchg
cltd
mov
adc
and
adc
mov
sub
mov
jno
mov
xchg
cmpsl
jns
fs
xchg
es
xchg
in
es
xchg
pop
sbb
cltd
mov
sub
pop
cs
fwait
add
es
or
test
jmp
mov
and
movsb
dec
movsl
sbb
and
dec
outsb
cmpsl
add
test
lcall
lds
stos
popa
sbb
and
mov
lods
lods
sti
enter
scas
xchg
out
jb
test
inc
mov
adc
xlat
mov
and
and
popa
xor
leave
jb
mov
jb
jb
mov
or
mov
leave
test
rcrb
inc
pop
ret
xor
rorl
and
lds
ret
gs
enter
and
adc
lret
int3
mov
ss
in
int
es
and
leave
shrb
shll
rcll
aam
adc
adc
aad
lret
xlat
flds
fstps
or
jb
fimull
and
faddl
sbb
in
and
and
and
loope
sub
xor
shl
jecxz
inc
je
in
cmp
push
sbb
cltd
adc
insb
call
fs
daa
in
lret
es
in
fldz
push
or
xchg
arpl
lock
mov
repnz
leave
nop
in
or
aaa
dec
cmc
pop
sub
cltd
divb
nop
add
cli
movsl
adc
cld
movb
adcb
adc
pop
add
pushl
sub
mov
push
add
jne
test
inc
push
enter
or
or
or
mov
xchg
or
mov
cmpsl
push
pop
adc
and
and
mov
mov
sub
and
adc
sbb
adc
sbb
and
data16
lret
push
in
and
sbb
test
mov
jb
test
bound
dec
enter
and
xor
lret
and
and
or
imul
jmp
mov
sbb
sub
test
das
xor
test
jb
xor
jmp
and
test
push
or
in
in
cmp
stos
cmp
sbb
cmp
dec
fadds
fnstenv
test
inc
cs
jb
or
and
xor
nop
movsl
mov
test
mov
and
and
dec
mov
pop
xor
jmp
in
and
and
and
mov
popf
xchg
lret
es
push
aaa
jle
popa
inc
xchg
dec
inc
pop
pop
xor
pop
pop
test
fwait
pop
sbb
pop
inc
es
pusha
popa
in
es
bound
inc
jg
inc
lcall
adc
fs
mov
inc
push
push
mov
loop
xchg
dec
movsl
mov
mov
and
pusha
mov
jb
test
popa
jae
je
jne
es
ret
mov
or
js
jp
fs
es
jge
es
jle
fs
es
addl
xchg
mov
mov
mov
nop
xchg
xchg
es
es
xchg
xchg
inc
es
xchg
xchg
fs
es
cltd
lcall
popf
inc
es
sahf
lahf
fs
es
inc
mov
fs
cmpsb
cmpsl
fs
es
stos
es
es
lods
lods
inc
es
scas
scas
fs
es
mov
fs
es
mov
es
mov
fs
es
inc
es
fs
mov
fs
es
es
lds
fs
mov
inc
es
fs
es
int3
int
es
into
iret
fs
es
shlb
fs
es
aad
es
xlat
fs
es
fisubl
fs
es
fldl
fs
fs
es
loop
fs
es
in
es
out
fs
es
inc
es
in
inc
es
out
out
fs
es
repnz
es
cmc
inc
es
div
fs
es
stc
cli
es
es
cld
std
inc
es
pushl
and
jb
add
cs
and
cmc
add
cs
flds
aam
insl
fwait
mov
pop
pop
or
nop
or
or
cltd
nop
or
and
test
xchg
or
and
popa
adc
nop
es
pop
xor
dec
adc
mov
ss
or
and
mov
sub
sbb
and
out
sbb
adc
and
xor
jmp
es
and
fs
outsl
pop
and
es
das
fs
es
sub
dec
sub
insb
inc
es
cltd
xor
xor
nop
xor
xor
nop
or
cltd
mov
cmp
nop
cmp
cmp
es
es
xchg
lret
or
popa
add
es
pop
jbe
es
es
dec
inc
inc
outsl
es
inc
xchg
push
dec
dec
inc
dec
ret
inc
dec
dec
outsl
fs
es
dec
dec
add
mov
sbbl
cwtl
nop
in
push
push
das
fs
es
push
pop
es
es
pop
pop
inc
es
pop
pop
insb
inc
es
pop
pusha
or
popa
bound
es
fs
addr16
or
fwait
nop
in
imul
orl
in
in
jo
jno
nop
or
or
or
ja
jmp
push
in
xchg
and
es
push
in
es
in
das
adcb
and
addl
add
xor
inc
push
es
push
in
es
fs
es
es
push
in
es
or
es
mov
test
xchg
xchg
jo
test
rolb
and
jmp
es
movb
xor
adc
xor
adc
xor
mov
xor
and
test
stos
and
xor
stos
lods
xor
adc
lods
scas
scas
adc
and
mov
mov
adc
and
xor
inc
push
es
push
in
es
es
jb
test
mov
enter
ret
jb
ret
inc
lds
adc
popa
das
mov
and
xor
leave
lret
and
lret
int3
int
adc
and
iret
xor
adc
rcl
rclb
xor
adc
aam
and
xor
xlat
xor
adc
fmuls
xor
test
add
sbb
test
loopne
out
adc
and
loop
in
and
adc
in
test
out
call
jmp
test
out
add
cmp
nop
add
nop
es
or
cmp
xor
test
mulb
enter
clc
stc
cli
dec
enter
cld
std
and
xor
xchg
jmp
cmp
daa
inc
daa
jne
test
insb
and
daa
or
inc
pop
into
pushl
nop
in
daa
and
or
or
push
rdmsr
and
xor
adc
lret
push
mov
adc
das
adc
cmp
in
cmp
cmp
daa
daa
test
sbb
leave
test
sbb
orb
push
pop
nop
add
jmp
daa
in
add
daa
daa
inc
nop
add
nop
daa
daa
daa
dec
enter
sub
test
sub
enter
sub
cs
fadds
test
xor
movb
lahf
and
and
xor
adc
cmp
cmp
adc
lret
and
aas
cmp
and
and
lret
and
dec
enter
jg
inc
test
dec
fisttps
test
or
test
dec
test
push
push
enter
push
push
push
dec
enter
push
push
test
pop
pop
xor
adc
pop
inc
pop
pop
adc
and
pop
pop
pop
xor
lret
and
and
bound
xchg
and
mov
adc
popa
adc
push
xor
push
xor
adc
insb
insl
outsb
adc
and
outsl
jo
and
xor
jb
ss
adc
je
in
jbe
sub
and
daa
inc
sbb
andl
fs
popa
sbb
subl
xchg
daa
daa
xchg
andl
subl
enter
enter
daa
daa
daa
sbb
sbbl
enter
daa
subl
sbb
jb
daa
jae
daa
enter
jb
daa
enter
mov
jg
jb
sbbl
sbb
daa
daa
daa
subl
cltd
nop
or
mov
add
daa
daa
xor
jb
daa
pop
adc
sbb
jmp
daa
daa
and
jb
daa
daa
fs
es
popa
mov
es
or
fs
mov
fs
es
mov
mov
fs
mov
fs
inc
es
fs
es
vcmpss
or
leave
lret
es
or
fs
iret
shlb
fs
shll
fs
es
inc
es
xlat
fsubs
fs
fs
es
fiadds
fs
fnstsw
popa
add
pushl
lret
and
sbb
shlb
loopne
or
pushl
call
adc
cmp
jmp
in
pop
sub
dec
enter
and
xchg
sbb
jge
outsl
dec
fadds
test
test
neg
flds
stc
sbb
sti
aaa
enter
cld
std
decb
in
dec
incl
sub
sub
add
add
add
dec
enter
add
test
or
test
or
dec
enter
or
test
adc
test
adc
dec
enter
adc
test
sbb
and
lret
and
sbb
pop
push
pop
ret
adc
sub
and
dec
daa
and
sub
and
pop
cmp
or
nop
or
outsl
sub
popa
sub
nop
or
xor
nop
or
xor
xor
or
cmp
cmp
cltd
nop
or
cltd
nop
or
inc
nop
or
cltd
nop
or
cltd
nop
or
nop
or
cltd
nop
or
cltd
nop
or
nop
or
cltd
nop
or
cltd
nop
or
nop
or
cltd
nop
or
cltd
nop
or
insb
inc
movsb
popa
jg
arpl
fs
gs
popa
pop
push
pop
sub
addr16
enter
push
sbb
imul
adc
insb
sub
outsb
and
mov
and
adc
jno
jb
aaa
adc
and
je
fbstp
adc
and
js
test
dec
jns
jp
test
aaa
jl
dec
enter
jg
test
addl
enter
xchg
mov
mov
mov
test
enter
dec
enter
xchg
cwtl
test
cltd
lcall
popf
dec
enter
lahf
mov
mov
enter
test
popf
cmpsb
aaa
cmpsl
test
shrl
dec
enter
dec
enter
scas
scas
test
test
dec
enter
dec
enter
mov
test
mov
enter
dec
enter
mov
test
ror
dec
enter
dec
enter
mov
dec
enter
adc
dec
enter
subl
sub
sbb
sub
inc
sub
sub
enter
sub
xlat
pop
inc
push
fs
inc
push
in
sub
sub
inc
sub
sub
or
dec
enter
sahf
mov
xchg
sub
and
sub
fs
out
inc
es
jmp
fs
in
es
es
out
lock
es
icebp
repnz
es
cmc
es
es
clc
nop
or
cltd
nop
or
cltd
mov
sub
inc
xchg
push
add
ljmp
fadds
aaa
dec
fadds
pop
test
test
or
or
or
or
dec
enter
push
shld
fadds
cmp
and
ss
adc
adc
or
adc
sbb
aaa
sbb
sbb
and
ss
sub
pop
and
xor
and
aaa
adc
and
and
or
push
movsb
cmp
sub
sub
test
sub
dec
enter
cs
test
or
cmp
or
sub
or
enter
dec
enter
cmp
test
inc
enter
inc
inc
inc
dec
enter
inc
inc
test
inc
dec
enter
dec
dec
dec
dec
enter
dec
dec
test
dec
push
enter
push
push
push
dec
enter
push
push
test
push
pop
enter
pop
pop
pop
dec
enter
pop
pop
test
pop
pusha
enter
popa
bound
enter
data16
addr16
imul
insb
insl
outsb
test
outsl
jo
test
jb
dec
enter
jne
test
ja
enter
jns
jnp
enter
jge
test
jg
enter
addl
test
xchg
mov
dec
mov
test
enter
dec
enter
xchg
xchg
test
xchg
cwtl
enter
cltd
lcall
popf
sahf
xchg
or
fs
xchg
sub
ret
and
dec
enter
enter
cmpsl
test
dec
enter
stos
lods
test
lods
scas
fadds
mov
jb
test
in
xchg
nop
movsl
or
mov
sub
nop
add
sub
sub
cmp
and
sub
sub
fadds
in
sub
dec
enter
rol
dec
enter
in
fadds
or
enter
dec
fadds
enter
int
iret
dec
enter
rcl
test
rcl
aam
test
aad
dec
enter
test
fcmovnu
enter
fstp
fisttps
dec
loopne
loop
dec
fadds
dec
fsub
or
test
ljmp
or
enter
dec
enter
icebp
repnz
nop
add
ljmp
sub
cmp
add
nop
sub
sub
popa
adc
jge
or
adc
call
sub
ret
pushf
add
decl
add
push
es
es
or
ret
inc
or
or
or
push
es
movups
ret
inc
adc
or
adc
push
es
es
sbb
ret
inc
sbb
or
sbb
push
es
es
and
ret
inc
and
or
and
es
es
sub
ret
inc
sub
or
sub
cs
es
xor
ret
inc
xor
or
xor
ss
es
cmp
sbb
jne
cmp
ljmp
sbbl
sbbl
rolb
and
jb
sub
pop
jb
pop
sub
sub
and
sub
sub
enter
sub
sub
sbbl
pop
add
sub
pop
jb
pop
sub
sub
pop
jb
sub
fs
jge
or
es
pop
pop
add
cmpsb
incl
and
ljmp
in
push
in
sub
push
in
push
sub
sub
enter
imul
dec
outsb
mov
or
ljmp
sub
sub
cmp
sub
cmp
adc
popa
mov
or
add
jge
ljmp
jb
inc
push
sub
add
dec
fadds
nop
add
nop
sub
sub
nop
add
sub
sub
ss
add
mov
inc
push
and
ljmp
fadds
or
nop
sub
sub
nop
add
sub
sub
cmp
add
nop
sub
sub
nop
add
sub
mov
ss
adc
and
xor
mov
xor
and
movsl
cmpsb
cmpsl
and
xor
test
ss
adc
stos
mov
or
popa
adc
adc
and
xor
and
mov
mov
adc
and
xor
and
mov
xor
rol
and
xor
ret
les
xor
adc
mov
adc
and
leave
xor
adc
lret
adc
and
int
iret
and
xor
rcl
xor
adc
rcl
aam
xor
adc
xlat
and
xor
fcomp
xor
adc
fcmovu
fcoml
xor
adc
and
xor
loopne
xor
adc
loop
in
xor
adc
out
and
xor
call
xor
jmp
adc
and
in
out
out
and
xor
lock
xor
adc
repnz
adc
and
cmc
div
and
xor
clc
stc
xor
adc
cli
sti
cld
adc
and
std
call
sub
cltd
nop
or
cltd
nop
or
nop
pop
or
cltd
nop
or
cltd
nop
or
nop
movups
cltd
nop
or
cltd
nop
or
nop
pop
sbb
cltd
nop
or
cltd
nop
or
nop
pop
and
cltd
nop
or
cltd
nop
or
nop
daa
sub
cltd
nop
or
cltd
nop
or
nop
das
xor
cltd
nop
or
cltd
nop
or
lds
sub
or
cmp
cmp
cmp
or
inc
nop
or
cltd
nop
or
cltd
nop
or
nop
or
mov
dec
inc
fbld
fs
dec
or
mov
lods
add
adc
dec
sahf
pushl
push
sbbb
sub
sub
test
pop
sub
pop
test
and
dec
fcomps
pop
pop
aaa
dec
fadds
and
arpl
or
mov
xor
and
xor
push
xor
insb
adc
and
insl
outsb
outsl
and
xor
jo
xor
adc
jb
je
xor
adc
ja
adc
and
xor
adc
jp
jl
xor
adc
jg
adc
and
xor
and
test
and
xor
and
lea
and
lds
sub
inc
xchg
lret
push
sub
xchg
insb
inc
es
xchg
aaa
xchg
cwtl
popa
es
inc
es
lcall
sbb
pushf
popf
or
sahf
lahf
mov
mov
mov
inc
cmpsb
cmpsl
test
es
test
fs
lods
lods
es
es
scas
mov
es
mov
fs
es
mov
fs
es
into
nop
in
add
in
add
sub
inc
nop
add
nop
sub
sub
pop
push
cmp
sub
sub
add
nop
in
sub
pop
push
cmp
nop
in
add
and
cmp
sub
cmp
cmp
sub
cmp
add
nop
sub
sub
nop
add
sub
sub
cmp
add
nop
sub
sub
nop
add
sub
sub
cmp
add
nop
sub
sub
push
add
sub
popa
sub
in
es
inc
es
out
aaa
out
ret
inc
lock
or
repnz
sbb
subl
fwait
nop
or
clc
sbb
cli
sti
mov
add
daa
insb
and
sub
add
add
and
and
add
add
xor
inc
push
sub
sub
or
mov
or
or
rorb
or
sub
jne
pop
jb
sub
mov
sbb
ljmp
and
or
fs
sub
pop
es
sbb
sbb
jne
sbb
sub
and
subl
pop
sub
sub
enter
sub
or
nop
or
cltd
nop
or
cltd
nop
or
cs
xor
xor
or
nop
or
cltd
nop
or
cltd
nop
or
ds
es
jb
add
push
call
enter
inc
inc
inc
adc
test
sub
xor
cmp
dec
or
and
sub
test
and
dec
push
dec
outsl
dec
es
inc
es
push
popa
push
inc
es
inc
push
outsl
push
fs
es
push
push
es
inc
es
pop
push
pop
inc
es
pop
fs
es
pop
pop
es
es
popa
bound
fs
arpl
es
inc
xchg
push
es
insb
es
ret
push
outsb
sub
pop
stos
dec
sub
sub
cmp
sub
xor
push
jne
es
inc
test
sbb
js
es
jns
insb
inc
es
jge
es
inc
es
or
inc
addl
fs
xchg
inc
mov
mov
or
xor
iret
fs
push
sbb
sub
insb
xchg
or
jecxz
mov
cmc
in
in
pop
or
and
call
sarb
dec
rorb
int3
push
cld
mov
fsubr
push
mov
pop
lock
repz
movsb
mov
and
imul
movsb
push
addr16
mov
push
orl
sbb
mov
or
pop
std
idiv
es
daa
imul
add
sub
out
std
xor
mov
pop
cs
pop
in
or
cs
cs
or
loope
pop
cs
or
or
or
pop
or
in
rcpps
cs
and
push
adc
mov
fdivrs
jb
adc
mov
mov
shl
in
in
sbb
cltd
nop
sbb
mov
bswap
emms
cmp
cvtpi2ps
xchg
cmp
shrl
leave
jb
and
jb
jb
and
mov
jmp
mov
in
in
sub
outsb
in
in
sub
lds
fwait
nop
sub
fs
cmpsb
xor
adc
xor
xor
xor
xor
mov
fwait
aaa
adc
and
and
cmp
cmp
dec
add
ss
and
int3
rcrb
or
fs
cmp
xor
cmp
push
movd
inc
cmp
xlat
dec
jb
jb
xchg
dec
insl
jb
jb
dec
decb
dec
enter
repnz
dec
inc
xchg
sub
sbb
adc
mov
inc
push
jb
fs
addr16
lea
mov
mov
es
pop
nop
test
test
in
jb
jb
pop
mov
pop
iret
jb
jb
pusha
lcall
bound
arpl
enter
mov
lret
gs
addr16
jns
sti
push
and
imul
and
and
mov
mov
xor
jo
lret
gs
pop
mov
shll
lret
and
test
std
imul
pop
cmp
rorb
into
mov
dec
rorb
test
pop
orl
movsb
or
pop
addb
or
icebp
lret
lcall
inc
xchg
dec
xchg
dec
xchg
bound
imul
inc
xchg
call
mov
inc
xchg
xor
add
nop
sub
xchg
add
xor
mov
and
xor
and
xchg
and
and
cltd
adc
test
lcall
adc
mov
ss
xor
lahf
mov
pop
cld
mov
mov
popa
adc
movsb
mull
sub
inc
mov
popa
adc
test
stos
pop
lods
ffree
adc
scas
scas
or
mov
mov
fwait
mov
sbb
xchg
lret
cwtl
mov
scas
mov
push
adc
inc
adc
mov
xchg
adc
adc
dec
enter
xor
sbb
push
mov
adc
mov
inc
adc
lahf
cmp
push
adc
adc
fld
push
and
gs
jge
and
and
cltd
enter
and
add
movb
nop
pop
inc
lods
sbb
cmc
into
iret
pusha
inc
push
jmp
push
rorl
mov
jb
add
setne
sub
jge
xlat
xor
lret
and
sub
les
movb
pop
xor
fisubrs
xor
aad
decl
jg
sub
sub
inc
imul
jecxz
dec
fadds
sub
dec
out
xchg
out
and
jmp
sub
vmwrite
mov
cltd
in
push
mov
push
add
test
lock
leave
jb
jb
repnz
xchg
dec
enter
cmc
outsl
or
or
adc
and
clc
outsl
stc
jge
adc
adc
xchg
sti
push
cld
les
movsl
mov
mov
mov
sbb
sbb
adc
dec
xchg
lret
push
or
dec
xchg
mov
add
push
mov
xchg
fistl
pop
adc
adc
in
in
or
or
or
lcall
xchg
sub
or
adc
adc
sbb
adc
adc
into
xchg
push
adc
jge
jb
jb
sbb
sbb
dec
enter
sbb
add
mov
adc
jb
jb
adc
enter
jl
insb
adc
jb
jb
adc
jb
jge
and
jae
adc
adc
sub
xchg
in
sub
sub
sub
sub
sbb
cmc
add
xchg
adc
mov
call
xchg
nop
in
xor
and
xor
call
or
nop
in
adc
xchg
sub
dec
cmp
movsl
cmp
lods
add
or
test
mov
test
js
xchg
mov
inc
adc
xor
mov
inc
adc
insb
ret
inc
inc
xlat
inc
or
jbe
pop
loope
fs
cmp
fs
das
dec
lret
es
dec
xchg
dec
xchg
mov
xchg
lret
xchg
imul
dec
xchg
adc
xchg
lret
push
add
push
inc
lret
inc
xchg
dec
jno
push
fs
dec
pop
xchg
in
es
xchg
nop
in
in
pop
je
inc
xchg
lret
lcall
pusha
jo
adc
popa
sbb
bound
mov
xor
lret
sarl
gs
sub
mov
leave
jb
test
push
push
inc
jno,pn
mov
adc
orl
pop
cs
cs
or
jno,pn
fcmovnb
cwtl
xor
jae
je
es
jbe
es
jns
or
cmpsl
jp
sub
add
xchg
jl
jge
push
add
jge
cltd
jle
gs
jo
adc
addb
addl
test
lret
and
xchg
lret
and
mov
fldt
xchg
sub
orl
mov
cli
dec
or
mov
nop
int
cmp
lret
gs
in
push
test
movsl
mov
xor
daa
cwtl
nop
in
xchg
lods
cwtl
cltd
xchg
dec
xchg
dec
pop
cmpsl
lcall
push
pushf
xlat
popf
bound
dec
mov
lahf
fs
sbb
mov
sarb
mov
lods
or
adc
cmpsb
adc
or
test
add
xor
adc
lods
mov
subb
scas
mov
mov
les
aaa
mov
outsb
adc
mov
rolb
cmpsl
movsb
or
inc
mov
es
mov
add
sub
arpl
stos
adc
mov
cs
mov
pusha
rol
adc
repz
test
ret
pop
les
lret
adc
pop
movb
and
mov
adc
xor
lret
and
fadds
into
sub
and
sar
rcrl
push
and
push
adc
pop
add
push
adc
adc
cmp
enter
fistl
cwtl
xor
sub
fstpl
xor
rol
cld
xchg
loope
adc
loop
mov
test
push
adc
adc
dec
out
mov
add
call
jb
adc
andl
sbb
dec
in
loope
inc
enter
out
testl
icebp
and
jb
repnz
xchg
xor
hlt
aas
cmc
mov
sub
inc
imull
jo
clc
idivb
adcl
lcall
xchg
in
hlt
call
adc
sub
sub
outsb
add
xchg
sub
sub
mov
sub
jg
jo
sub
sub
aad
addl
inc
mov
adc
adc
jb
addb
es
pop
push
sbb
adc
adc
sub
or
test
fs
adc
push
push
xor
pop
cs
cs
sbb
mov
pop
cs
sbb
fstpl
sbb
fwait
push
loop
pop
adc
pmulhuw
leave
jb
cmp
ret
fsubl
mov
leave
jb
and
add
pop
cmp
adc
adc
and
cvtpi2ps
sbb
pop
ss
shrl
mov
mov
pop
mov
or
adc
xor
mov
and
mov
xchg
or
addr16
cmp
mov
cmp
adc
cmp
adc
movsl
cmp
adc
adc
or
mov
xchg
popa
popf
inc
jae
sub
sub
cwtl
inc
mov
leave
jb
test
xor
jb
jb
dec
xchg
dec
mov
xchg
dec
dec
cmp
adc
or
adc
xor
pusha
iret
dec
adc
dec
or
in
cmp
cs
jnp,pn
xchg
cs
cs
jge
push
adc
and
and
xchg
push
lods
dec
xchg
lret
sbb
or
pop
or
jecxz
stos
pop
flds
pop
adc
outsb
jo
jb
pusha
mov
popa
adc
jno
pop
fs
ret
popf
nop
es
adc
mov
imul
cmp
imul
insb
lea
sbb
mov
mov
jno
cld
das
imul
leave
jb
cmc
jae
je
jb
jb
jne
jbe
xor
dec
enter
jns
xchg
sub
arpl
jp
jnp
xchg
sub
gs
jge
xchg
sub
dec
jle
jg
dec
fadds
jb
test
xorl
test
test
fadds
lcall
inc
mov
daa
insb
ret
sbb
pop
lea
adcb
adc
lret
sub
fs
loope
xchg
in
es
xchg
pop
xchg
cs
nop
in
xchg
cwtl
xor
nop
test
nop
in
adc
popa
dec
fadds
and
and
mov
mov
lret
and
movsb
test
cmpsb
iret
dec
fadds
test
ret
stos
adc
test
add
and
adc
mov
adc
nop
popa
mov
lret
mov
inc
bound
popa
mov
pop
jo
sub
and
popa
mov
lods
mov
xchg
lret
pusha
ret
dec
pop
mov
mov
mov
and
lret
cwtl
adc
ret
ret
popa
inc
xchg
dec
xchg
lds
xor
or
adc
popa
pop
enter
or
fidivrl
insb
or
adc
jmp
imul
jmp
rclb
rcl
push
sahf
je
test
aam
mov
mov
mov
push
mov
jmp
mov
dec
fimull
arpl
fisttpl
fsubrl
or
fiadds
add
test
mov
imul
adc
or
nop
loopne
adc
or
add
fs
call
nop
arpl
sub
movsl
test
and
in
popa
in
and
arpl
es
sub
lahf
subb
mov
sti
icebp
and
nop
and
mov
ss
or
cwtl
mov
incl
test
imul
sub
movsb
cli
fwait
sti
pop
cld
push
std
dec
xchg
lret
pusha
inc
cmp
adc
or
mov
addl
mov
enter
mov
mov
cmp
pusha
or
or
mov
cmp
or
or
pop
cs
cs
cs
cs
adc
adc
sbb
pop
cs
adc
fistl
cs
cs
adc
pop
cs
pop
fstps
sbb
sbb
stos
sbb
pop
gs
push
bndstx
jnp
or
cli
sbb
sub
sub
aaa
sub
pop
cs
cs
and
and
and
nop
in
in
and
cs
daa
or
jbe
xchg
shrl
adc
sbb
pop
mov
mov
pop
sub
sub
mov
and
pop
lret
and
inc
xor
and
xor
xor
xor
xor
sub
push
ss
aaa
leave
jb
test
cmpsl
int
leave
jb
jb
cmp
enter
inc
cmp
cmp
mov
and
inc
pop
mov
ss
or
mov
mov
mov
xor
inc
ds
inc
adc
lock
adc
dec
or
mov
ret
xlat
dec
adc
stos
xor
xchg
stos
mov
cmp
arpl
dec
inc
xchg
in
in
push
xchg
push
movsb
in
in
push
or
or
es
aaa
push
jnp
dec
cwtl
nop
push
push
imul
dec
xchg
dec
aam
jg
xchg
dec
xchg
dec
push
mov
aas
pop
fs
xor
and
mov
bound
arpl
sub
adc
xor
aam
and
mov
lea
push
sub
jo
mov
mov
imul
jge
outsl
pop
mov
ret
xor
pop
mov
mov
lds
xor
mov
jne
jbe
xchg
sub
xor
dec
enter
pop
add
inc
sarl
lret
adc
lret
gs
enter
cmp
subl
add
mov
test
nop
and
or
test
mov
insb
inc
cwtl
mov
ret
mov
mov
mov
adc
test
rcl
xchg
in
sbb
in
in
xchg
dec
xchg
inc
lcall
dec
pusha
mov
lcall
fwait
mov
xchg
xchg
pop
repnz
cmc
lahf
outsb
mov
push
stos
mov
sbb
movsb
pop
jp
and
cmpsb
inc
cmpsl
lds
test
mov
push
mov
adc
and
scas
sub
jb
jb
mov
mov
lret
and
mov
les
xor
dec
fdivs
ss
gs
sarb
pop
lcall
pop
add
adc
ret
or
add
dec
enter
inc
ret
les
jb
imul
and
arpl
xor
lret
and
test
test
test
test
or
jne
call
xor
sbbb
mov
xlat
mov
enter
aad
xchg
dec
enter
xlat
inc
or
dec
or
xor
xlat
xchg
dec
or
fldt
lcall
mov
faddp
adc
loope
or
jecxz
mov
lds
es
sbb
imul
ljmp
jne
es
insb
in
fucomip
mov
mov
es
repnz
inc
es
fs
cmc
cmc
pop
cs
xor
cmpsl
or
ret
push
stc
ret
inc
in
cli
sub
mov
push
cld
idiv
adc
into
decl
jb
adc
add
mov
mov
cli
add
pop
mov
mov
push
add
mov
movsl
pop
mov
mov
and
adc
xor
push
inc
fidivrl
ss
push
adc
rorb
pop
cmp
or
pop
cs
adc
adc
and
add
jbe
sbb
pop
testb
or
sbb
sbb
in
sbb
xchg
lret
sbb
sbb
or
test
xchg
jmp
shll
mov
and
or
fs
and
fs
xchg
mov
mov
fisubl
pop
mov
sub
xchg
sub
jo
jmp
movb
or
mov
xor
enter
push
xchg
leave
xor
jo
mov
add
push
pop
jne
adc
movsb
cmp
cmp
mov
xchg
lret
push
cmp
jbe
dec
xchg
dec
xchg
pop
ds
xchg
inc
cmp
mov
inc
inc
or
fs
int3
inc
imul
jmp
dec
enter
dec
mov
sub
xor
xor
test
sub
aad
cs
popa
dec
jg
cs
cs
push
dec
push
repnz
pop
push
mov
pop
sub
push
fdivrs
push
mov
add
push
dec
adc
fwait
pop
inc
mov
and
xchg
in
pop
sti
pop
xchg
in
in
pusha
stos
popa
nop
in
in
bound
cwtl
fs
mov
addr16
es
push
push
popf
nop
lds
add
jb
inc
xchg
insl
outsb
lret
and
outsl
xchg
pop
and
xorl
popa
adc
je
jecxz
cwtl
nop
push
jne
jbe
xchg
or
sbb
sub
lock
xchg
sub
sub
cltd
jl
xchg
sub
sub
sarl
add
adc
je
adc
lock
adcl
test
sub
or
lcall
xchg
xchg
or
lret
and
mov
sub
xor
lea
in
sbb
cmc
xlat
nop
fs
mov
es
sbb
xchg
add
mov
sbb
adc
inc
pop
cs
sbbl
pushf
xlat
or
sahf
adc
enter
lahf
outsl
dec
mov
mov
jb
dec
mov
jb
jb
movsl
frstor
cmpsl
test
dec
or
stos
fbld
sbb
lods
in
or
lods
aaa
scas
xchg
sbb
pop
mov
leave
jb
sti
mov
leave
mov
mov
adc
les
mov
test
xor
jg
mov
mov
mov
mov
xor
in
in
mov
nop
in
shll
inc
orl
or
mov
cmp
mov
pop
mov
enter
mov
pop
jno,pn
lret
orl
rorl
lret
es
or
push
cmp
or
test
cmp
rcl
test
and
adcb
pop
xlat
adc
fdivrs
mov
orl
mov
pop
mov
es
ficoms
adc
loopne
loope
inc
bound
loop
jecxz
ret
pusha
in
in
mov
and
add
sbb
lahf
ljmp
in
adc
in
shll
pxor
pop
cs
cs
scas
icebp
pop
mov
rep
or
xchg
nop
in
idivb
adc
or
cwtl
cli
mov
or
add
decl
mov
jb
adc
adc
push
movsb
js
adc
adc
lret
or
jp
mov
mov
or
adc
xor
sbb
sbb
push
or
stos
or
jae
push
adc
cltd
and
inc
pop
adc
sub
inc
decl
pop
lds
nop
in
add
adc
sbb
shlb
jle
test
mov
or
xchg
mov
cmp
adc
adc
cmp
adc
adc
cmp
adc
adc
cmp
adc
adc
ret
shrl
jns
mov
shll
sbb
sbb
adc
adc
sbb
sbb
adc
adc
push
mov
mov
dec
xchg
lahf
xor
xor
inc
push
mov
pop
mov
mov
gs
mov
pop
aaa
lret
pop
mov
pop
cmp
cmp
mov
or
sub
mov
in
sub
adc
aaa
inc
xchg
dec
xchg
push
inc
out
inc
test
fildl
xor
inc
leave
inc
imul
or
leave
dec
int
cwtl
nop
in
imul
dec
xchg
dec
xchg
dec
xor
rorl
dec
xchg
dec
ret
dec
mov
popa
inc
push
imul
imul
push
push
push
sbb
cs
cs
push
nop
push
lret
fwait
mov
pop
push
push
rcrl
mov
pop
cs
pop
pop
fildll
cltd
nop
in
pop
pop
push
popa
sbb
movsl
movsl
pop
adc
lahf
xchg
sub
xor
imul
sub
sub
jne
rcrb
sub
fs
lret
adc
addr16
and
pop
imul
push
imul
shlb
xchg
lret
pop
insl
pop
xchg
insb
inc
xchg
fldt
popa
jno
lret
cwtl
adc
xchg
dec
xchg
dec
sub
mov
fwait
ja
and
adc
adc
inc
pop
and
jp
movlps
mov
rolb
or
mov
adc
adcb
fs
fs
testl
xchg
lret
lcall
or
sub
xchg
mov
adc
shlb
mov
nop
sbb
or
xchg
test
orl
jecxz
xchg
pop
cs
cs
pop
xchg
lds
pop
cs
xchg
cwtl
adc
pop
ret
cltd
xchg
lcall
iret
pushf
mov
mov
xchg
popf
inc
sahf
mov
mov
and
push
adc
xor
xor
add
pop
call
or
or
cmpsl
adc
and
pusha
shrl
lret
and
stos
test
lods
push
xchg
les
daa
test
test
mov
test
test
mov
mov
jb
test
mov
mov
adc
adc
mov
mov
mov
mov
mov
sub
dec
mov
sub
addr16
mov
xor
rcrb
fbld
ret
sub
sub
in
les
dec
fadd
inc
mov
add
push
and
adc
lret
cmp
lret
dec
lret
int3
adc
roll
into
enter
iret
push
sbb
dec
rorl
insb
and
jno
in
in
aad
adc
fsubrs
in
in
ficoml
lcall
ret
cwtl
fldl
out
sbb
fistps
adc
and
gs
pop
jno
dec
fadds
in
and
gs
xchg
sub
test
aad
les
test
and
out
out
push
mov
aam
mov
ret
push
repz
xchg
add
fadds
pop
adc
test
outsb
clc
sub
lds
lds
test
push
add
loopne
sub
or
call
loope
mov
jb
sbbl
xchg
dec
enter
add
push
or
leave
jb
or
leave
jb
jb
or
leave
jb
jb
or
or
push
push
rorl
leave
jb
jb
adc
jb
jb
adc
jb
adc
xor
add
cltd
cli
pop
xchg
in
in
sbb
sbb
cltd
nop
in
sbb
popf
in
movsl
mov
ss
adc
pop
mov
cmp
xor
mov
mov
mov
mov
and
and
lret
push
in
rcrl
enter
pop
sub
sub
sbb
imul
sub
test
das
or
leave
xor
lods
xor
lret
and
xor
lret
and
ss
lret
and
pop
cs
or
nop
bound
call
movsb
or
cmp
in
ds
cltd
inc
inc
call
or
sbb
lock
call
repz
adc
imul
dec
lret
and
fimull
xchg
xor
dec
jno
dec
sub
sub
inc
dec
dec
dec
mov
ret
mov
push
and
push
push
push
mov
aad
mov
mov
ret
push
pushf
cltd
nop
in
push
sbbl
cld
mov
ret
xlat
pop
rolb
pop
test
mov
xor
dec
bound
ret
fs
pushw
sub
adc
add
imul
mov
jb
adc
in
or
jle
adc
test
or
nop
in
in
jb
jae
xchg
dec
cwtl
je
cltd
jne
movsb
or
pop
ja
js
ret
push
jns
jp
pop
cs
cs
movsb
or
jle
or
fs
fs
push
or
fs
dec
xchg
dec
xchg
jo
popa
xchg
dec
xchg
movsb
xchg
cs
imul
mov
dec
iret
mov
cmp
xchg
xor
jb
test
xchg
sbb
gs
enter
out
xchg
xor
lret
and
dec
fadds
jno
or
mov
mov
addr16
adc
mov
enter
mov
push
xchg
dec
movsb
mov
adc
cmp
mov
cmp
ret
and
stos
pop
call
leave
lods
adc
scas
cmpsl
scas
ret
adc
or
sub
pop
adc
inc
push
mov
and
outsl
jp
mov
xchg
sub
das
pop
mov
mov
xchg
sub
sub
adc
test
jb
dec
mov
jb
jb
mov
leave
jb
shl
enter
ss
and
mov
ss
sbb
adc
lret
pop
add
lret
int3
dec
enter
inc
int
push
xchg
sub
or
and
in
adc
js
jne
imul
adc
aam
jge
cs
cs
or
adc
decl
xor
mov
fcmovne
jb
dec
fdivr
in
fstl
pop
fbld
enter
adc
or
adc
xor
in
jnp
cs
nop
lcall
add
rolb
mov
movb
lds
adc
push
adc
bound
in
repz
hlt
vcomisd
mov
negb
cmp
mov
fdivr
inc
cwtl
nop
in
cli
sti
inc
lcall
dec
je
lcall
leave
jb
orl
js
xchg
jno
jb
add
xchg
in
add
or
test
push
call
jmp
lret
or
push
sub
call
lds
xchg
lret
push
outsb
cmovnp
loopne
pop
orb
adc
push
xchg
lret
push
or
adc
fcoml
mov
sbb
xchg
dec
xchg
lret
push
mov
stos
sbb
sbb
dec
fcomps
sbb
push
push
and
lret
and
xchg
sub
or
mov
xchg
xchg
and
and
dec
movsl
daa
inc
jno
test
mov
pop
cs
push
outsl
mov
pop
cs
cmpsb
sub
sub
cs
inc
das
sti
and
or
and
xor
adc
xor
cwtl
ss
dec
xchg
cmp
xchg
inc
cmp
cmp
loope
push
or
ds
mov
sub
xor
sbb
sub
sub
push
pop
inc
leave
jb
test
inc
outsb
je
jb
inc
and
push
push
sbb
inc
dec
push
popa
dec
push
in
add
fisttpll
call
dec
dec
sub
dec
fs
fwait
dec
cs
nop
es
std
push
cmpsl
sub
pop
cs
push
cmp
movsb
push
lds
push
xchg
pop
cs
sub
pop
xchg
in
or
add
fs
insl
call
clc
ss
or
push
adc
sbb
adc
or
and
repz
and
arpl
fs
gs
and
and
push
imul
imul
insl
push
outsl
outsb
push
test
pusha
outsl
outsl
pop
jo
dec
adc
mov
dec
sbb
je
and
and
jbe
push
sub
ja
cmp
add
or
dec
jnp
sbb
lret
and
jle
lret
and
adcb
rolb
addl
cltd
pusha
xchg
and
mov
mov
testb
adc
insb
and
fs
dec
cwtl
nop
in
xchg
xchg
mov
je
xchg
xchg
orl
push
pop
xchg
push
mov
ss
pop
cwtl
popa
jae
or
lcall
dec
pushf
dec
popf
movsl
xchg
sub
les
jb
test
mov
jb
mov
mov
movsl
xchg
lcall
test
ret
jmp
jecxz
outsl
fs
push
lods
pop
imul
or
or
xor
mov
pop
cs
cs
mov
mov
cs
cs
mov
mov
loop
or
or
push
int
dec
pop
dec
enter
mov
push
mov
jb
push
out
cwtl
nop
in
rol
dec
push
ret
repz
decb
pop
cs
sti
mov
pop
leave
lahf
xor
pop
cs
lret
pop
movb
adc
into
iret
push
icebp
mov
pop
shll
mov
inc
adc
pop
aad
dec
adc
punpcklwd
dec
fcomps
add
andl
xor
sbb
push
and
aas
fnstsw
out
jmp
lds
test
test
loop
jecxz
jb
adc
in
in
pop
dec
pop
dec
enter
call
pop
jmp
dec
dec
adc
add
cmpsl
gs
enter
out
mov
ss
sub
xor
push
xor
add
push
sbb
pop
mov
pop
cs
clc
cltd
mov
movsb
stc
push
cli
inc
sti
nop
test
nop
in
in
push
xchg
inc
pop
movsb
cmp
push
add
push
mov
push
mov
xchg
lret
or
xchg
dec
xchg
dec
loope
aas
push
xchg
dec
xchg
dec
addr16
or
mov
pop
or
dec
decl
fs
or
fs
fisttps
pusha
mov
daa
adc
mov
mov
bound
mov
fsubrl
push
pop
pop
mov
jb
jb
sbb
jb
sbb
sbb
jb
jb
sbb
sbb
leave
push
sub
and
and
and
cmp
and
and
pop
cs
cs
mov
daa
in
xchg
sub
sub
in
sub
sub
ss
sub
xchg
dec
xchg
test
pop
cs
xor
pop
cs
xor
cs
xor
mov
cmp
in
es
lods
or
xchg
in
cmp
cmp
xchg
lret
cwtl
nop
cmp
insb
inc
xchg
dec
push
inc
inc
rorl
mov
mov
pop
imul
xchg
sub
sti
lock
inc
inc
sub
sub
in
cmc
dec
sub
sub
fimull
dec
sub
dec
or
and
dec
dec
push
and
push
xchg
adc
or
push
push
sub
dec
mov
push
leave
pop
mov
ss
or
mov
mov
mov
pop
mov
dec
or
ret
cmp
or
fisttpll
pop
cs
pusha
int
popa
in
in
bound
arpl
pop
ss
shlb
or
mov
aaa
decl
fs
xchg
mov
shrb
xchg
lret
es
cltd
mov
xchg
dec
xchg
popa
outsb
push
outsl
iret
inc
xchg
dec
cwtl
jo
imul
cmpsl
cmp
cltd
mov
jb
cmp
xchg
ja
mov
jns
outsl
xchg
lret
es
cltd
movsb
jl
inc
xchg
dec
mov
jle
orl
std
orb
pop
fiadds
cs
adc
pop
and
nop
int
pop
decl
pop
cs
xchg
cs
xchg
in
mov
xor
adc
jne
test
rorl
adc
pop
ret
nop
in
in
nop
insb
xchg
or
lcall
or
mov
xchg
xchg
mov
addr16
cltd
flds
nop
loopne
pop
or
dec
mov
or
add
es
mov
cwtl
xor
dec
xchg
dec
xchg
xchg
movsb
mov
mov
cmpsb
cmpsl
jge
cs
ret
adc
or
stos
test
dec
loopne
pop
adc
inc
xchg
cmc
pop
adc
inc
mov
mov
push
lods
mov
dec
enter
mov
mov
mov
jmp
bound
mov
imul
mov
mov
es
fs
inc
shll
ret
ret
dec
xchg
lret
les
jb
dec
xchg
pop
cmpsl
sbb
mov
lret
pop
popa
dec
or
lret
adc
ss
sti
ret
int
pop
push
adc
pop
inc
adc
dec
sbb
mov
sarl
xchg
call
lcall
pop
insb
adc
mov
ficoml
out
fildl
cs
nop
in
inc
xchg
stos
or
fbld
es
loope
mov
mov
xchg
in
xchg
and
orl
ja
xor
vmovhps
pop
adc
adc
in
shr
imul
shr
mov
pop
daa
icebp
pop
push
repnz
lret
and
popa
xor
cmc
cmp
xor
lret
and
mov
test
stc
iret
cli
dec
dec
sbb
sti
in
xor
or
cmc
std
roll
jb
mov
mov
and
movsb
sbb
sbb
add
push
add
cltd
cs
cs
add
pop
cs
pop
loop
dec
cs
cs
or
or
pop
cs
or
cs
cs
or
fldcw
pop
bsf
adc
adc
sbb
sbb
adc
scas
xchg
sub
sub
push
jge
sub
sub
push
xorl
jl
enter
xchg
sbb
sbb
pop
mov
ret
and
aaa
cs
lahf
and
and
jb
test
adc
and
and
xchg
in
in
daa
dec
sub
sub
sub
dec
cwtl
sub
sub
xchg
lret
xchg
add
or
int
mov
fs
xor
sbb
addb
or
leave
xor
mov
insl
cmp
movsb
cmp
cmp
dec
cmp
pop
dec
xchg
lret
push
cmp
cmp
insb
inc
xchg
sarl
fs
stos
ret
add
sbb
or
sbb
inc
xchg
sub
or
xchg
lret
push
in
sbb
jb
xchg
dec
xchg
dec
push
dec
add
mov
or
mov
std
int
sbb
jo
test
dec
xlat
pushl
ret
outsl
adc
sub
jno
in
jne
push
flds
or
mov
mov
jb
pop
or
pop
sbb
inc
pop
or
fs
pop
sbb
test
pop
mull
adc
popa
adc
bound
arpl
gs
pop
frstor
gs
and
repnz
and
pushl
jb
sbb
cltd
mov
enter
insl
sbb
and
sbb
enter
lds
rolb
jae
mov
mov
pushf
je
jne
adc
lods
test
and
jns
jb
adc
jp
jnp
aad
enter
inc
jge
sub
sub
push
pop
jg
subb
test
xchg
sub
sahf
addl
es
add
cmc
test
fwait
xchg
pop
cs
mov
mov
lods
or
mov
push
mov
lcall
mov
cltd
nop
in
nop
movsb
xchg
inc
xchg
mov
leave
jb
inc
inc
xchg
xchg
jg
call
xchg
push
cwtl
sbb
cltd
xor
inc
fwait
rcrl
int
sbb
adc
jb
sbb
sbb
push
sbb
movsb
arpl
sbb
lods
or
cmpsl
push
test
test
adc
adc
test
test
lahf
lods
imul
call
adc
jo
mov
cmp
or
mov
mov
sbb
mov
mov
and
and
pop
stos
andb
gs
and
and
sub
sub
insl
mov
or
test
pushl
or
jb
dec
enter
inc
dec
or
adc
gs
fs
lret
xor
lret
lret
fwait
int3
mov
ss
or
add
mov
pop
rcl
or
test
es
cs
in
and
popa
xor
in
sbb
xor
xor
jb
push
add
sbb
add
sbb
fisttpll
imul
or
pusha
mov
loopne
mov
loope
aaa
leave
es
mov
cwtl
mov
movsb
iret
out
out
cs
inc
int
mov
jmp
ljmp
in
in
scas
pushl
xor
out
mov
popa
inc
lock
loop
repnz
ret
mov
xchg
dec
cld
divb
fs
adc
mov
cli
add
mov
xchg
dec
cwtl
cld
jns
std
stos
add
lcall
push
dec
je
add
addl
in
add
popf
add
xchg
add
mov
xchg
in
add
xchg
in
pop
orl
xchg
or
pop
jb
xchg
or
adc
or
outsl
jge
mov
and
in
inc
mov
test
fs
xchg
inc
push
mov
jmp
xchg
cmpsl
sbb
jmp
fs
sbb
mov
sub
sbb
daa
fs
mov
and
cmp
and
and
dec
jns
and
push
pop
cmpb
pop
push
pop
sbb
gs
sub
and
inc
sub
sbb
das
jmp
xor
push
xor
fs
sbb
lret
es
dec
xchg
dec
xchg
int3
xor
or
lcall
sub
sub
or
adc
sub
out
cmp
in
subl
xchg
in
aas
xor
iret
add
inc
sbb
in
in
inc
popa
jecxz
pop
cwtl
nop
in
inc
sub
pop
arpl
dec
in
dec
movsb
or
pop
dec
dec
push
fs
pushf
dec
fs
or
cwtl
nop
es
sub
ljmp
enter
and
pop
ss
in
sbb
mov
and
mov
pop
call
in
pop
xchg
cmp
es
pop
popf
nop
in
pusha
popa
sbb
adc
test
fs
dec
pop
sbb
sbb
push
sbb
cmp
enter
std
imul
xor
mov
rol
outsb
sbb
add
in
jo
in
es
fbstp
sbb
pushf
jae
je
test
push
jbe
adc
lahf
js
lret
and
jp
jnp
enter
push
jl
sub
sub
or
sub
sub
mov
mov
lods
add
test
test
pushl
and
or
sbb
sub
popa
hlt
mov
mov
mov
lea
leave
test
mov
lret
loopne
nop
mov
dec
loopne
xchg
fs
pusha
inc
adc
in
es
jne
xchg
mov
pop
cltd
cmpsl
sbb
rorb
lcall
test
pushf
sbbl
test
popf
in
es
cs
nop
mov
sbb
push
pop
shrb
insb
ret
shrl
in
es
mov
stos
inc
lcall
and
popf
scas
inc
pop
mov
ss
cmp
inc
lcall
test
sub
sub
aad
push
sbb
mov
lret
cwtl
nop
in
mov
inc
xchg
aaa
mov
pop
cs
mov
movsb
mov
or
or
ret
les
dec
test
enter
dec
into
lret
or
in
in
iret
jle
fcompl
sar
shrl
movsb
or
pop
aam
lea
fs
push
xlat
fsubs
fs
fisubl
vpermt2b
insb
ret
cmpsl
fnstsw
fidivrs
test
fistpll
roll
loop
dec
fadds
aam
in
out
test
shl
outsb
call
jmp
inc
adcb
jmp
sbb
xchg
dec
es
in
or
push
orb
insl
adc
test
repz
cmc
flds
testl
add
ret
sti
scas
cld
and
std
incb
cmp
lret
je
add
in
inc
push
enter
sbb
or
outsb
add
add
and
pop
sbb
dec
xchg
push
or
or
fs
or
es
or
fs
fists
jne
fs
adc
push
or
or
adc
adcl
pop
xchg
dec
xchg
dec
mov
inc
sbb
es
inc
sbb
sbb
sbb
pop
push
popa
xchg
or
bound
and
inc
xchg
ljmp
test
and
in
daa
test
dec
sub
sub
gs
sub
sub
sub
pop
xor
sub
popa
adc
or
push
lods
sbb
cs
nop
xor
cmpsl
xor
mov
xchg
cs
cs
cmp
cmp
cltd
mov
pop
cmp
or
or
mov
push
es
mov
fwait
mov
lahf
icebp
inc
add
adc
insb
inc
aaa
inc
pop
negl
addr16
dec
mov
pop
cs
dec
rorl
cltd
nop
in
dec
dec
insb
inc
cwtl
nop
dec
dec
xor
xchg
in
es
mov
push
or
push
xchg
lret
cwtl
nop
push
push
jne
push
fs
mov
es
mov
pop
fwait
nop
or
sti
dec
lcall
insb
inc
xchg
push
popa
bound
fs
arpl
es
es
popa
ret
and
fwait
imul
nop
or
fwait
mov
cltd
jo
sbb
or
insb
inc
lcall
inc
es
js
jns
xor
insb
jp
jnp
jl
inc
cwtl
adc
jge
jle
nop
or
cmpb
mov
cltd
addl
mov
xchg
fs
mov
jbe
mov
mov
nop
xchg
xchg
inc
es
inc
es
xchg
xchg
es
es
cltd
lcall
outsl
pushf
es
or
cltd
mov
mov
cltd
mov
adc
lret
movsl
cmc
movsl
cmpsb
pop
ss
xor
pop
mov
mov
push
stos
and
stos
lods
or
and
dec
dec
sbb
mov
mov
enter
mov
sub
test
mov
mov
and
int
mov
mov
xor
xor
lret
xor
sub
add
or
sub
or
dec
fadd
ret
les
cmp
cmp
sbb
sbb
sbb
mov
test
inc
int3
int
es
ret
inc
iret
or
rcl
rol
pop
orl
or
mov
in
mov
fcmovu
jge
ret
fmull
frstor
lahf
add
test
filds
aas
fs
pop
loop
fs
push
in
lcall
out
lret
lcall
inc
es
ljmp
in
pop
out
sbb
add
cmpsl
out
mov
shl
jno
icebp
dec
enter
cltd
popa
repz
flds
mulb
adc
jb
testl
lret
pushf
stc
cli
sbb
sti
pop
stos
cld
std
dec
enter
ret
enter
xchg
add
add
pop
repnz
push
add
add
add
cmp
push
cmp
mov
cmp
sbb
jb
test
dec
enter
mov
bswap
test
aaa
inc
adc
test
dec
adc
adc
fsts
bound
xchg
jle
sbb
sbb
rcll
sbb
sbb
xchg
sub
sub
and
cmpsl
dec
enter
and
icebp
shl
mov
sbb
and
sub
or
lahf
and
lcall
enter
sub
sub
int
or
stos
sub
mov
pusha
das
xchg
xor
inc
outsb
pop
ss
xor
xor
cmpl
sbb
pmulhuw
mov
cmp
and
cmp
test
cmp
pop
ss
cltd
es
inc
lret
and
inc
and
sarb
inc
sbb
inc
push
inc
xchg
lret
es
shll
or
arpl
in
fs
dec
cmp
xchg
lret
es
inc
test
pop
cs
dec
xor
add
popf
nop
push
push
sbb
push
dec
enter
sub
in
add
pop
cs
nop
push
pop
outsl
int
adc
lods
or
pop
or
fs
rcrl
nop
in
push
sti
pop
pusha
filds
mov
popa
or
or
pop
fs
loopne
or
lcall
popa
adc
inc
jmp
adc
push
imul
jb
jb
insb
out
test
test
outsb
outsl
cltd
jo
xchg
dec
or
jno
jb
and
xor
je
xor
lret
fdivl
ja
test
and
adc
and
and
dec
sbb
add
test
xchg
addl
sbb
movsb
addl
xor
or
mov
pop
cs
mov
lea
orl
mov
jae
cs
nop
nop
xchg
icebp
xchg
fs
xlat
xchg
es
inc
es
xchg
or
inc
cwtl
pop
dec
cltd
or
sbb
popf
mov
cltd
popf
sbb
sahf
mov
ss
cmp
mov
mov
xchg
adc
dec
adc
movsl
or
pop
dec
dec
sbb
fadds
xor
xor
adc
scas
mov
sbb
and
xor
mov
mov
dec
enter
xor
xchg
lods
lcall
call
sbb
add
cltd
nop
or
mov
fs
aaa
ret
ret
in
les
aaa
dec
es
add
mov
pop
add
sbb
and
test
mov
dec
fadds
shll
sbb
mov
out
aam
aaa
dec
or
xor
xlat
or
and
and
aaa
ficoml
movb
sub
les
sbb
sbbl
mov
loop
jecxz
inc
xchg
dec
imul
in
or
out
bound
mov
push
jmp
fs
push
jmp
fwait
es
or
popa
ret
and
dec
es
and
add
adc
div
daa
pop
xor
adc
adc
xor
adc
std
ljmp
cmp
or
pop
add
cs
add
daa
add
push
push
sbb
sbb
in
cmp
sbb
sbb
sbb
jns
ud2
sbb
sbb
inc
push
enter
sbb
sbb
cmp
pop
adc
sbb
and
in
sbb
sbb
sbb
in
add
cltd
nop
in
pop
sbb
inc
test
sbb
lcall
test
sbb
push
pop
or
and
and
cmp
pop
repnz
sbb
sbb
jb
andl
daa
xor
sub
lret
and
sub
dec
xchg
sub
test
sub
cmpsl
cs
enter
or
adc
fisttpl
test
sbb
sub
sti
inc
aaa
push
cmp
leave
test
sbb
pop
repnz
cmp
sbb
pop
cmp
in
or
inc
cmpsl
pop
fs
inc
inc
and
pop
and
test
addr16
ret
inc
and
mov
mov
adc
dec
dec
dec
sub
sub
imul
in
or
cmc
dec
dec
push
or
push
mov
fwait
nop
push
push
aaa
push
pop
cs
ret
fists
out
jb
pop
pop
pop
nop
xor
adc
dec
enter
pop
popa
adc
pop
aaa
pusha
cmpsl
popa
inc
test
bound
enter
dec
fadds
imul
push
imul
adc
insb
insl
outsb
leave
jb
adc
sub
call
jno
jb
nop
ljmp
nop
add
sbb
leave
jb
test
or
or
jmp
or
jnp
sbbl
xchg
jle
or
fs
cwtl
nop
addb
mov
fs
xor
push
mov
mov
sbb
jb
test
leave
mov
repz
dec
enter
xchg
and
jno
xchg
or
and
ss
or
loop
or
cmpl
sbb
inc
push
in
sbb
popf
mov
lahf
loop
fs
mov
mov
movsl
cmpsb
cmpsl
es
es
stos
inc
es
stos
lods
fs
es
scas
scas
es
es
mov
es
inc
mov
mov
mov
imul
nop
in
pop
imul
mov
nop
mov
or
cltd
nop
or
ret
pop
cs
nop
lds
or
nop
or
cltd
nop
or
cltd
nop
or
rclb
rcl
cwtl
nop
or
or
fwait
nop
or
mov
pop
cs
fst
nop
in
or
mov
cltd
loopne
loop
cltd
nop
or
in
or
cltd
mov
cltd
call
mov
jmp
in
fwait
mov
popa
in
dec
out
aaa
out
cmpsl
or
icebp
sub
lcall
dec
dec
lcall
popa
inc
xchg
movsl
idiv
dec
jb
mov
pop
stc
cli
cmpsl
insb
ret
sti
jge
addr16
push
inc
xchg
dec
es
stos
incl
or
sbb
inc
es
add
mov
bound
fs
xchg
or
lret
or
or
dec
xchg
sub
pusha
or
xchg
dec
xchg
mov
fs
adc
mov
cmpsl
adc
adc
adc
xchg
in
in
adc
nop
in
pop
in
sbb
sbb
dec
fs
es
sbb
sbb
es
lods
nop
test
and
lcall
and
dec
or
es
ret
daa
sub
daa
dec
or
mov
sub
and
xor
adc
das
xor
ss
in
xor
in
and
xor
xor
mov
xor
adc
aaa
cmp
and
adc
popa
adc
popa
cmp
cmp
ds
and
and
inc
xchg
sub
xor
inc
inc
dec
fadds
and
ss
mov
dec
adc
dec
push
dec
sub
add
out
imul
dec
sbb
enter
push
aaa
inc
xchg
dec
fcoms
push
loopne
jb
add
sbb
jb
sbb
nop
pop
pop
jns
jge
fs
fistps
or
mov
enter
cmp
lret
and
arpl
xor
fs
insb
ret
lcall
insb
ret
outsl
imul
push
imul
mov
jp
xor
outsb
outsl
xchg
jo
pop
cs
cs
add
ud0
fs
movsb
dec
ja
inc
js
push
enter
sbb
inc
daa
in
inc
jl
jge
gs
fadds
iret
test
lret
popa
addb
xor
test
dec
enter
xchg
xchg
out
lret
gs
enter
sub
mov
shlb
jg
test
xchg
xchg
or
aad
or
pop
cs
ret
dec
int
pop
cs
jecxz,pn
push
cltd
test
mov
lcall
mov
inc
xchg
dec
xchg
in
lahf
mov
add
sbb
sbb
test
lcall
fs
xchg
jbe
stos
push
imul
popa
lods
arpl
popa
scas
xchg
inc
push
mov
mov
lcall
inc
mov
mov
or
add
sbb
add
inc
pop
cmp
add
add
dec
lcall
jne
inc
lcall
insb
adc
add
in
or
sbb
and
or
popf
or
or
or
nop
in
nop
adc
or
adc
adc
adc
cltd
pop
pop
sbb
or
nop
or
cltd
nop
or
and
and
cltd
nop
or
cltd
nop
or
sub
sub
cltd
nop
or
cltd
nop
or
xor
xor
cltd
nop
or
test
test
cmp
test
into
cmp
or
ds
sub
leave
jb
inc
cmp
dec
enter
inc
jmp
push
inc
add
pop
cs
cs
aas
dec
xchg
in
or
pop
dec
or
dec
in
in
dec
or
xchg
in
dec
xchg
pop
push
flds
pop
push
pop
push
mov
nop
add
lret
add
test
mov
ss
outsl
jg
mov
adc
pop
mov
and
pop
pop
ss
adc
pop
popa
xchg
lret
adc
bound
and
and
and
adc
xchg
dec
or
ss
push
enter
imul
xchg
sub
sub
insl
insl
jno
ret
outsb
outsl
inc
jo
pop
ss
sti
jno
xorb
adc
dec
je
xor
lret
sub
sub
add
es
jp
inc
es
jl
mov
fs
out
cmp
add
add
cmp
lret
and
adc
cmpsb
xchg
mov
mov
mov
xchg
sub
les
xchg
outsl
xchg
stos
xchg
test
xchg
xchg
dec
enter
sub
cltd
fadds
fisttps
dec
pushf
outsl
popf
sahf
and
add
mov
mov
test
test
dec
enter
enter
stos
lods
lods
jno
test
outsb
enter
push
add
or
mov
mov
mov
repnz
lcall
cmc
mov
in
mov
popa
adc
and
xor
mov
xor
rol
lret
gs
sti
inc
adc
mov
and
sbb
enter
add
xchg
inc
push
add
dec
add
dec
enter
cs
xchg
dec
fadds
dec
fadds
xchg
out
push
add
add
or
mov
sbb
cltd
nop
lcall
xchg
loopne
loope
or
fs
cwtl
nop
in
dec
out
fs
es
fs
in
scas
inc
es
inc
es
lock
enter
dec
add
enter
add
cltd
nop
or
negl
push
push
or
add
add
sbbl
enter
add
enter
add
add
cs
sbbl
enter
add
enter
and
add
movups
fwait
nop
or
adc
add
cltd
nop
adc
and
mov
add
inc
es
sbb
sbb
fs
sbb
subl
enter
add
cltd
nop
or
and
pop
mov
incl
add
pop
jb
add
es
sub
inc
es
sub
xchg
dec
es
and
fs
xchg
dec
xor
inc
xchg
dec
es
xor
inc
es
dec
cmp
cmp
cmp
nop
add
or
aas
inc
inc
and
xor
inc
inc
xor
adc
inc
inc
inc
adc
and
inc
dec
dec
and
xor
dec
dec
xor
adc
dec
dec
dec
adc
and
dec
push
push
and
xor
push
push
xor
adc
push
push
push
adc
and
push
pop
pop
and
xor
pop
pop
xor
adc
pop
pop
pop
adc
and
pop
pusha
popa
and
xor
bound
and
xor
adc
and
addr16
and
xor
adc
insb
insl
outsb
adc
and
outsl
jo
and
xor
jb
xor
adc
je
jbe
xor
adc
jns
adc
and
xor
adc
jl
jle
xor
adc
andl
xorl
adc
test
adc
xor
mov
mov
adc
xor
xchg
xchg
xor
adc
xchg
xchg
xchg
adc
and
xchg
cwtl
cltd
and
xor
lcall
popf
sahf
adc
and
lahf
mov
and
xor
adc
xchg
outsb
add
enter
dec
add
or
pop
cs
nop
scas
mov
mov
cltd
nop
or
nop
mov
mov
cltd
nop
or
or
mov
cltd
mov
es
mov
fs
es
es
es
enter
fs
lret
es
fs
rorb
fs
rcl
popa
add
dec
incl
or
aad
xlat
add
cmp
add
nop
add
add
cmp
das
ficoms
loopne
dec
enter
loop
test
in
enter
out
call
jmp
enter
enter
out
out
lock
enter
repnz
pop
hlt
cmc
jb
test
sbb
jb
clc
nop
stc
xchg
add
xorl
add
sbb
and
add
jb,pn
pop
mov
add
and
and
add
jb
add
ret
sbb
add
or
ss
add
add
sbb
xor
adc
adc
and
xor
adc
and
xor
and
sbb
sbb
pop
sbb
add
incl
add
inc
xchg
inc
fiadds
or
and
and
enter
es
sub
dec
sub
sub
enter
cs
xor
dec
xor
xor
enter
ss
cmp
dec
cmp
cmp
enter
ds
inc
dec
enter
inc
inc
test
inc
inc
enter
inc
inc
dec
dec
enter
dec
dec
test
dec
dec
enter
dec
dec
push
dec
enter
push
push
test
push
push
enter
push
push
pop
dec
enter
pop
pop
test
pop
pop
enter
pop
pop
pusha
dec
enter
bound
dec
enter
enter
addr16
test
imul
test
outsl
jo
enter
jb
test
je
enter
jbe
js
enter
jp
test
jl
enter
jle
orb
addl
test
xchg
mov
test
mov
dec
xchg
xchg
xchg
test
xchg
xchg
enter
xchg
xchg
cwtl
dec
enter
lcall
popf
enter
sahf
lahf
mov
mov
enter
enter
cmpsb
cmpsl
test
enter
stos
stos
test
lods
lods
enter
scas
scas
mov
enter
mov
test
mov
enter
mov
mov
mov
enter
enter
mov
test
ret
in
enter
es
es
inc
es
leave
lret
es
int3
int
fs
es
iret
rolb
fs
rcl
fs
es
aad
fs
es
xlat
fadds
fs
fs
es
frstor
fs
es
loopne
es
loope
fs
es
in
fs
es
call
jmp
fs
in
es
es
out
lock
es
icebp
repnz
es
cmc
es
es
clc
inc
es
stc
cli
fs
es
cld
std
daa
fs
es
incl
add
adc
add
and
xor
add
inc
adc
and
push
pop
or
adc
and
or
and
xor
or
adc
and
push
movups
adc
and
adc
and
xor
adc
adc
and
push
pop
sbb
adc
and
sbb
and
xor
sbb
adc
and
push
pop
and
adc
and
and
and
xor
and
adc
and
es
sub
adc
and
sub
and
xor
sub
adc
and
cs
xor
adc
and
xor
and
xor
xor
adc
and
ss
cmp
adc
and
cmp
and
xor
cmp
adc
and
ds
inc
and
xor
inc
inc
xor
adc
inc
inc
inc
adc
and
inc
inc
dec
and
xor
dec
dec
xor
adc
dec
dec
dec
adc
and
dec
dec
push
and
xor
push
push
xor
adc
push
push
push
adc
and
push
push
pop
and
xor
pop
pop
xor
adc
pop
pop
pop
adc
and
pop
pop
pusha
and
xor
popa
bound
and
xor
adc
and
addr16
xor
imul
insb
insl
adc
and
outsb
outsl
jo
adc
and
xor
adc
jae
jne
xor
adc
js
adc
and
xor
adc
jnp
jge
xor
adc
andb
xor
addl
xor
adc
xor
mov
mov
mov
and
xor
and
xchg
xchg
cwtl
and
xor
cltd
lcall
popf
adc
and
sahf
lahf
mov
mov
xor
and
cmpsb
cmpsl
test
adc
and
xor
and
scas
scas
mov
adc
and
xor
and
mov
mov
mov
xor
and
mov
xor
rol
and
xor
lds
xor
adc
enter
and
lret
adc
lret
int3
int
xor
adc
iret
shlb
adc
and
shlb
and
xor
aam
adc
and
xlat
fsubs
fisubl
fisttpl
lret
and
ficomps
pop
xor
jae
add
and
and
jbe
lret
and
and
add
add
and
add
sub
call
gs
fs
cmc
in
sub
and
lcall
add
pop
cs
out
imul
add
in
add
add
cmp
add
xchg
inc
push
in
add
xchg
dec
fadds
sti
inc
insb
and
push
push
add
cs
adc
pop
cmp
add
add
push
in
add
inc
xchg
inc
xchg
mov
add
adc
subl
cs
cld
add
or
xchg
or
or
in
ljmp
xchg
mov
adc
jb
in
add
nop
in
in
add
add
in
in
add
add
sub
xor
pop
sbb
sbb
sbb
sub
sub
hlt
sbb
jo
test
adc
call
and
xchg
das
pop
cs
and
and
adc
leave
cmc
and
and
mov
inc
xchg
jl
add
push
mov
mov
dec
xchg
jmp
mov
arpl
adc
inc
in
in
sub
xchg
in
das
mov
loopne
xor
jb
xor
pop
jb
jb
xor
xchg
dec
enter
or
sub
sub
sub
cmp
xchg
sbb
or
ret
xlat
xchg
adc
decl
sub
nop
jge
es
mov
aaa
into
inc
cmp
dec
sbb
mov
nop
in
add
inc
leave
jb
jb
dec
and
dec
enter
push
mov
push
or
or
incl
push
add
xchg
dec
cmp
scas
push
inc
xchg
dec
xchg
mov
lock
cs
cs
pop
inc
pop
pop
jg
mov
pop
pop
pop
repz
pop
cs
nop
sbb
pop
cs
cs
pusha
pushf
popa
xchg
dec
pop
sbb
sub
inc
xchg
dec
mov
mov
sbb
addr16
or
test
rcll
add
pop
add
add
mov
add
or
or
sub
jb
jae
sub
and
sub
popf
test
pop
ja
mov
lret
or
xchg
push
orb
or
test
test
adc
jg
xorb
jb
add
add
test
cmpl
nop
in
dec
insl
xchg
and
movsb
or
in
xchg
push
mov
nop
in
mov
test
adc
cs
incl
pop
mov
add
mov
mov
inc
xchg
fsts
push
adc
pop
mov
push
sub
pop
adc
flds
ret
xchg
dec
enter
mov
xchg
sub
in
dec
xchg
roll
sub
sub
scas
test
sub
shrb
test
stos
jns
and
lret
and
incl
lret
mov
xor
jb
sub
or
test
mov
in
mov
sbb
mov
mov
lret
and
mov
fdivrl
or
mov
jb
pop
aas
rol
inc
push
xchg
jbe
add
in
sbb
les
dec
cwtl
lds
movb
xchg
fcmovb
int
inc
xchg
lret
leave
dec
push
lret
inc
pusha
lret
lret
int3
sbb
arpl
and
mov
mov
shll
mov
sub
rcl
shll
add
add
aam
aad
lret
es
sbb
xlat
es
fldenv
fs
lret
cltd
repnz
inc
mov
mov
fadds
sub
loope
and
gs
jae
jecxz
and
cmc
in
in
and
xchg
inc
out
adc
and
jmp
pop
lcall
dec
in
mov
fldl
out
or
ret
lock
icebp
jmp
gs
mov
or
lret
xor
cmc
fisttpl
and
pop
ss
stc
mov
pop
mov
pop
mov
popa
inc
cmp
decl
fs
add
push
shll
pop
mov
add
test
jb
jb
or
jb
or
jo
or
subl
jmp
lahf
test
gs
adc
xchg
adc
pmulhuw
push
adc
pop
ss
pop
pop
fistps
mov
pop
mov
mov
movsb
sbb
sbb
adc
jae
pop
ss
outsl
std
and
popa
mov
mov
inc
and
mov
mov
or
inc
pop
and
mov
cmp
pop
xor
movaps
sbb
add
test
sub
sub
incl
pop
push
xchg
add
mov
or
mov
jb
jb
add
xchg
in
cltd
int
faddl
ret
cmp
xchg
lret
cmp
dec
xchg
sarl
cmp
pop
movsl
push
or
cmp
add
das
rolb
fadds
inc
add
inc
add
dec
mov
jge
in
or
dec
sub
dec
addl
fs
cmpsb
es
push
xchg
lret
cwtl
adc
repz
push
xchg
dec
xchg
dec
dec
push
inc
push
xchg
dec
xchg
dec
insl
push
loopne
add
nop
cmp
add
push
loop
ja
cwtl
adc
test
pop
or
inc
xchg
dec
fistpl
insb
inc
and
add
pop
mov
data16
push
jb
imul
jo
push
add
sub
scas
test
cltd
mov
ret
outsl
xorl
sbb
jo
jno
jb
mov
mov
xchg
jae
je
test
movsl
les
cltd
and
push
hlt
js
lret
and
jp
movb
shlb
sub
insb
adc
fiadds
xchg
mov
mov
fs
xchg
xlat
test
push
mov
cwtl
mov
in
lea
inc
mov
adc
rorb
dec
enter
xchg
addr16
pop
adc
xchg
outsl
xchg
sbb
rcll
lret
adc
inc
cmp
fwait
mov
pushf
mov
daa
sahf
mov
xchg
lahf
ret
mov
repz
adc
mov
dec
xchg
lret
xor
mull
inc
cmpsl
test
dec
xchg
lret
jae
test
popa
inc
stos
xchg
lods
xchg
scas
jge
pop
mov
dec
lcall
mov
es
inc
mov
mov
adc
push
mov
inc
cwtl
nop
in
mov
mov
mov
xchg
loope
mov
adc
sbb
cs
cs
cmp
sbb
ret
mov
or
vshufps
lret
and
enter
and
in
lret
sub
jmp
lret
int3
rolb
into
push
add
inc
adc
adc
inc
adc
adc
sbb
adc
sar
aam
pop
mov
addr16
insb
rolb
popa
fs
pop
fidivl
fcmovnu
or
movsl
rcr
lcall
cs
nop
in
loope
and
adc
jmp
xor
movsb
cmp
xor
in
add
push
jmp
es
jmp
in
xor
in
jg
pop
dec
lcall
add
inc
xchg
test
bnd
push
mov
incl
add
popa
test
inc
xchg
dec
cwtl
neg
es
ret
popf
cli
nop
es
ret
mov
sub
mov
xor
add
add
push
push
xchg
lret
add
or
and
add
push
add
push
sbb
loop
or
fwait
or
outsl
or
fisttpll
dec
sbb
js
or
pop
test
rorl
push
adc
sub
sbb
mov
sub
sub
insb
adc
adc
nop
sbb
push
push
xchg
in
or
or
xchg
in
sbb
push
push
cltd
ds
and
test
mov
and
or
mov
lds
mov
flds
jb
jb
and
leave
jb
daa
add
popa
leave
jb
jb
sub
sub
jb
jb
sub
sub
dec
enter
outsb
mov
mov
incl
push
push
or
push
pop
xor
sub
sbb
and
xor
xor
aaa
add
xchg
mov
cmp
lcall
jb
cmp
or
call
nop
inc
inc
or
inc
xchg
dec
xchg
dec
addr16
mov
dec
or
mov
and
and
mov
dec
push
pop
jecxz,pn
movsl
dec
lahf
inc
dec
pop
cs
jg,pn
pop
dec
sub
xchg
or
cmp
fs
daa
push
push
pop
cmp
push
mov
pop
or
inc
xchg
inc
mov
push
push
push
adc
dec
fcomps
pop
rolb
enter
loopne
or
loopne
or
pop
xor
inc
push
incl
pushw
and
and
arpl
movb
push
xchg
dec
or
addr16
in
push
imul
cs
push
push
nop
in
in
push
xlat
push
jb
test
outsl
or
ret
sahf
jno
dec
dec
adc
sbb
push
xchg
call
mov
mov
ret
dec
cwtl
mov
jns
mov
dec
js
sarb
xchg
dec
push
jge
push
xchg
in
or
fwait
subb
cmpb
fs
cs
cs
test
xchg
mov
pop
xchg
xchg
lret
sbb
mov
mov
xor
pusha
sbb
mov
mov
mov
inc
sbb
pop
lea
xchg
dec
xchg
das
incl
and
mov
flds
ret
fs
sbbl
push
and
and
push
popf
ficomps
jae
mov
xor
sbb
jb
push
filds
cs
movsl
out
dec
jb
test
cmpsl
jge
test
jb
jb
test
pop
sbb
lods
pop
mov
lods
xchg
cs
test
cs
mov
mov
mov
mov
es
or
bound
xor
aam
push
xor
xchg
xor
sub
lds
sub
sarb
adc
roll
ret
pusha
ret
sbb
inc
push
cwtl
nop
in
xor
inc
pusha
ret
mov
nop
es
test
lret
into
dec
mov
es
rcl
flds
mov
and
in
aad
lret
and
xlat
movsb
add
jp
out
cs
xor
ficoml
fldt
add
incl
imul
leave
jb
fidivs
push
add
pop
cs
push
sub
or
adc
lods
insb
mov
sbb
or
adc
sbb
fs
ret
sub
es
jns
jmp
in
lcall
nop
cwtl
lock
cmp
and
insb
repnz
repz
hlt
popa
push
orb
and
negb
mull
lret
and
stc
adc
adc
cli
aaa
sti
test
jb
jb
xor
enter
jbe
add
pop
push
andl
push
pop
lret
push
mov
pop
das
add
je
mov
xchg
mov
aad
dec
xchg
dec
xchg
sub
lea
movsb
pop
jb
ja
or
or
psubusw
or
leave
jb
push
and
leave
jb
jb
adc
aam
mov
pop
adc
push
test
and
xchg
dec
xchg
lret
jge
push
lahf
pop
insb
mov
pop
sbb
orb
xor
nop
pop
sub
test
mov
pop
mov
and
inc
xchg
jl
and
xchg
inc
mov
push
pop
pop
pop
xchg
inc
xchg
inc
fldl
jle
xchg
inc
xchg
inc
cmpsb
pop
sub
inc
stos
pop
rolb
jb
inc
inc
in
test
jb
cs
fbstp
jb
xor
outsb
xor
and
imul
ret
ss
and
sub
rolb
add
cmp
cmp
pop
mov
xor
sbb
aas
lods
imul
fistps
adc
or
xor
lret
mov
leave
out
test
sub
mov
add
dec
pop
mov
mov
loope
mov
dec
push
dec
dec
add
sbb
ljmp
movsb
rcll
push
sbb
popa
mov
push
pop
cs
cs
stc
push
pop
cs
fistps
pop
fs
xlat
pop
dec
xchg
lret
es
jge
pop
cmp
loop
pop
cld
cmp
or
pop
mull
lcall
arpl
fs
pushl
nop
in
pop
out
sub
sub
jmp
mov
test
dec
imul
stos
insl
mov
mov
mov
adc
adc
popa
xor
jae
je
enter
inc
jne
fadds
js
pop
ss
dec
jns
jp
cmpsl
test
jl
dec
dec
adc
jge
jle
jg
test
test
orb
icebp
orb
pop
xchg
lret
loopne
test
enter
insb
inc
xchg
xchg
nop
in
in
mov
lcall
dec
xchg
aaa
mov
lea
dec
xchg
push
mov
imul
jno
pop
pop
ret
push
pop
pop
lretw
adc
cwtl
adc
shlb
xchg
cwtl
lcall
in
pushf
popf
add
pusha
inc
xchg
mov
es
mov
in
in
mov
nop
in
movsb
mov
cmpsb
insb
inc
xchg
lret
adc
in
es
in
in
stos
dec
lods
adc
scas
xor
cwtl
nop
in
scas
mov
or
imul
in
mov
sbb
xchg
mov
mov
fwait
nop
in
aas
mov
pop
cs
pop
cs
push
mov
imul
cwtl
rolb
mov
incl
leave
jb
or
in
lds
dec
enter
mov
jb
jb
enter
lret
and
lret
jb
adc
int3
sbb
daa
dec
enter
test
and
ret
popa
push
rcll
inc
adcb
pop
call
pop
mov
arpl
jne
in
lahf
ret
fldcw
fidivl
or
imul
jge
es
in
es
loopne
test
loope
loop
cwtl
adc
in
dec
xchg
lret
orl
fs
call
pop
incl
pop
pop
ret
adc
pop
pop
fucomp
shlb
xchg
cs
mov
call
xchg
lret
pop
icebp
shll
loopne
std
hlt
dec
xchg
dec
xchg
pop
cmc
mov
xchg
call
pop
mov
in
in
sti
cltd
sbb
or
mov
addr16
dec
and
lret
or
add
in
and
add
push
lods
pop
push
dec
add
xchg
add
or
sub
sbb
aaa
jbe
sub
sub
mov
xchg
sub
cmp
testl
sub
sub
push
adc
sub
sub
xor
ret
adc
sub
xchg
adc
adc
dec
push
std
pop
sub
sub
dec
sbb
sbb
sub
insl
sbb
sub
sub
mov
xchg
sub
fwait
push
lret
pop
sub
sub
inc
and
and
sub
je
cltd
and
sub
pusha
and
and
pop
es
sub
sub
jmp
lcall
sub
sub
sub
subb
leave
jb
test
sub
das
enter
jb
fnstenv
adc
add
xor
imul
in
xor
das
inc
xchg
dec
xchg
xor
jo
jo
or
cmp
popf
test
sub
leave
cmp
fnstcw
adc
adc
lock
or
pop
sbb
inc
or
pop
cs
inc
sbb
inc
gs
lea
inc
or
pop
ss
arpl
in
pop
pop
mov
mov
movsl
dec
adc
mov
mov
iret
dec
dec
lret
and
dec
dec
add
dec
or
adc
rcll
pop
add
mov
lret
and
push
notb
pop
and
or
test
cmp
pop
adc
lret
and
pop
pop
ss
rcrb
add
mov
mov
fistps
cmp
adc
lret
and
sar
addr16
and
push
imul
or
insb
inc
je
push
or
mov
in
es
jo
jp
ret
jno
jmp
adc
pop
mov
mov
pop
cs
in
in
js
jns
dec
xchg
dec
lcall
dec
xchg
cmpsb
jl
jge
mov
or
or
or
inc
xchg
inc
mov
test
test
test
xchg
enter
mov
frstor
xchg
sub
adc
lret
push
mov
jb
jb
nop
adcl
das
inc
lcall
inc
xchg
dec
pusha
xchg
imul
cwtl
mov
or
or
or
or
and
and
and
adc
mov
nop
test
or
or
movsb
jnp
or
dec
enter
and
and
decl
sti
or
pop
arpl
xlat
stos
or
lods
subl
mov
pop
cs
mov
mov
loopne
or
mov
xchg
dec
sbb
add
add
or
orl
mov
or
mov
pusha
inc
mov
adc
mov
cs
add
xor
lods
ret
sti
mov
lds
aaa
and
mov
out
leave
pop
pop
cs
cs
test
int3
int
jnp
in
cwtl
into
mov
iret
dec
lcall
ret
xchg
adc
icebp
mov
push
or
inc
xchg
inc
jb
or
mov
xchg
fcomp
inc
inc
adc
fidivl
adc
fdivl
fisttpll
pop
push
adc
mov
mov
into
loopne
add
loop
jecxz
test
in
adc
test
out
out
call
push
mov
ljmp
mov
in
or
mov
es
out
testl
out
lock
mov
outsb
repnz
dec
enter
hlt
pop
enter
shl
inc
notb
or
ret
pushl
mov
dec
adc
and
xchg
sub
or
or
add
xchg
dec
xchg
dec
incl
pushf
add
dec
xchg
dec
jnp
xlat
push
xchg
dec
xchg
dec
pop
pop
cmpsl
or
or
or
or
dec
xor
pop
jb
or
or
adc
cmp
push
sbb
adc
iret
adc
lret
add
mov
lret
gs
and
push
lret
and
cli
sbb
and
mov
sub
lret
and
sbb
enter
mov
xchg
xchg
sub
dec
pop
or
cmp
sbb
or
or
and
pop
and
and
mov
or
sub
sub
sub
cwtl
nop
in
sub
or
insb
sub
in
in
das
cltd
mov
cwtl
nop
xor
xchg
or
xor
sbb
dec
or
add
sarl
inc
cmp
popf
adc
sub
cmp
cmp
cmp
jp
arpl
mov
or
ds
aas
sub
sub
or
adc
lds
adc
in
or
sti
lret
movsb
or
inc
or
mov
pop
jb
pop
adc
dec
xor
dec
enter
dec
or
fs
xor
mov
pop
jb
popa
mov
leave
jb
jb
push
aas
push
xchg
dec
enter
push
fucomip
jo
test
pop
loop
and
push
or
and
pop
cs
jge
pop
pop
cs
cs
pusha
push
cs
arpl
test
fs
addr16
jb
add
xchg
dec
or
imul
enter
or
sbb
jb
or
inc
lds
jno
movsl
mov
jb
jmp
nop
in
or
in
or
or
or
or
sub
xor
mov
rolb
adc
lahf
and
xchg
int3
addl
pop
movb
pop
mov
imul
mov
inc
push
or
imul
xchg
xor
insl
jnp
pop
ret
nop
xchg
idivl
mov
mov
lret
shlb
jb
sbb
add
or
mov
xor
icebp
lret
lcall
sbb
into
pushf
popf
or
jb
or
xchg
in
adc
test
mov
xor
dec
mov
dec
enter
cmpsb
rolb
test
mov
and
stos
mov
mov
scas
stos
mov
lods
scas
cmpsl
and
scas
mov
adc
and
movsb
mov
sub
mov
test
ret
xchg
dec
mov
mov
out
cmp
mov
shlb
in
lcall
push
pushf
nop
rol
adc
mov
mov
lods
or
out
stc
in
cwtl
mov
enter
xchg
in
leave
and
jbe
xchg
in
lret
jmp
mul
adc
movsl
cwtl
nop
in
iret
inc
rcl
cwtl
xor
shll
push
aad
pop
cs
cs
push
xlat
mov
pop
cs
fnstcw
adc
or
arpl
xchg
sub
pop
cs
cs
std
ffreep
adc
loope
gs
adc
jecxz
and
and
in
sub
xor
and
sub
sub
out
jmp
ljmp
jb
loope
in
out
adc
dec
pop
xchg
out
xchg
subl
or
test
mov
es
or
cmc
sub
or
shl
es
cli
popf
xor
or
sti
repz
or
mov
push
test
push
ljmp
add
xlat
add
sub
into
add
xchg
sub
sub
xor
sub
cs
mov
sub
sub
leave
or
or
push
add
xchg
enter
cmp
or
mov
pusha
lahf
adc
pop
adc
adc
mov
inc
or
mov
lcall
pop
pop
sbb
sbb
mov
sbb
sbb
pop
mov
mov
sti
push
adc
mov
mov
in
and
mov
aad
dec
push
or
or
sbb
or
lret
push
mov
insl
or
cld
sub
sub
lret
xchg
or
sbb
sub
pop
cs
sub
cs
cs
das
push
xor
xor
jb
sbbl
add
jb
xor
test
outsl
cmp
pop
mov
inc
mov
mov
mov
mov
adc
sub
sub
mov
inc
sub
test
in
inc
xchg
lret
or
decl
mov
decl
jb
test
cmp
leave
jb
dec
stos
dec
out
lret
and
jno
dec
add
dec
jb
jb
or
pop
jb
jb
or
fwait
mov
adcb
push
push
or
popa
sbb
pop
or
test
pop
or
and
and
in
or
imul
cmp
movsb
or
popa
inc
dec
xchg
dec
xchg
bound
arpl
jb
mov
popa
test
xor
loope
addr16
jb
push
enter
decl
xor
lret
sbb
jb
or
xchg
dec
xchg
cmp
outsl
or
xchg
and
xchg
in
jb
loopne
push
es
jne
push
pop
orb
or
push
pop
push
pop
or
jle
pop
push
pop
or
or
dec
or
pop
or
jle
xchg
sub
push
jg
addb
test
mov
or
dec
push
mov
mov
pop
or
call
jb
dec
pop
jmp
leave
jb
int
mov
jle
dec
enter
or
cmc
mov
das
nop
xchg
dec
bound
sub
inc
xchg
jns
dec
jne
orb
xchg
or
xchg
xor
jb
adc
lret
gs
enter
pop
sahf
xor
and
sub
cmp
push
adc
xchg
enter
movsl
mov
and
das
sub
sbb
cmc
test
xchg
in
stos
subb
inc
scas
das
scas
orb
fnstenv
push
decl
and
mov
mov
test
xor
std
mov
lret
and
mov
and
and
movsb
add
arpl
fistpll
mov
pop
roll
mov
rolb
scas
or
pop
mov
mov
out
es
adc
leave
xor
lret
and
test
test
das
int
jb
test
into
shrl
dec
shlb
ror
sub
xchg
dec
shlb
or
sub
nop
or
movsb
subl
es
fcomps
ret
mov
mov
popa
fldl
fidivs
xchg
dec
add
cmpsl
loopne
jb
or
inc
dec
enter
jecxz
lret
gs
and
shl
and
and
pop
movb
adc
jno
adc
in
sub
adcb
pop
and
lock
icebp
jae
repnz
or
inc
cmc
out
and
and
testl
xchg
cli
jge
sti
jl
sub
sub
adc
add
xor
decb
imul
push
inc
pop
push
or
push
mov
mov
mov
out
or
push
mov
fimuls
or
push
add
lret
adc
or
and
push
or
dec
xchg
lret
push
or
add
or
ud2
add
or
adc
push
adc
in
dec
and
or
out
xchg
sub
sbb
popf
xchg
sub
sub
lret
xchg
sub
sbb
xchg
sub
sub
aam
mov
sub
sub
mov
fstps
or
leave
jb
and
and
and
and
and
and
test
pop
daa
sub
pop
cs
adc
sub
pop
shrl
sub
jmp
cs
sub
stos
xor
pop
cs
xor
sbb
or
or
dec
pop
ss
sbb
cmp
mov
lahf
cmp
or
repnz
insl
sub
sub
decl
mov
lahf
dec
es
sub
xchg
sub
rcr
inc
sbb
test
ret
sub
sub
leave
jb
dec
cmpsl
decl
lret
and
and
or
or
and
and
testb
and
and
or
push
or
push
xchg
push
leave
jb
adc
jns
and
mov
pop
xchg
sub
pop
xor
decl
sub
sub
adc
mov
sub
sub
xor
mov
nop
in
sub
lret
lcall
inc
xchg
push
mov
lds
movsb
jp
jo
or
in
push
push
jge
or
cwtl
insb
in
daa
in
or
sbb
fs
jno
es
je
xchg
in
mov
fwait
nop
jbe
aaa
push
js
mov
test
or
jl
xchg
sub
imul
and
jg
xchg
add
xor
subl
subl
or
xchg
in
cltd
pusha
xchg
and
lret
push
mov
mov
es
mov
adc
test
lcall
pop
cs
cs
xchg
hlt
xchg
fs
xlat
xchg
fs
ret
cwtl
lds
mov
xchg
imul
roll
mov
data16
shlb
or
dec
orl
movsb
xor
mov
movsl
int
cmpsb
ret
or
pop
imul
mov
pop
stos
lods
popa
or
subl
mov
in
es
jne
cltd
nop
in
mov
mov
xor
mov
popa
ret
push
mov
push
pop
mov
and
mov
ret
mov
dec
or
mov
rcr
ss
dec
or
mov
mov
dec
les
lds
dec
call
pop
clc
enter
dec
sbb
lret
roll
int3
push
jg
sub
sub
std
iret
xchg
test
sub
cmc
rcrl
ret
repz
push
adc
adc
xlat
fmul
and
fxch
fisubrl
xor
fstpt
test
insl
fidivrs
push
fisttps
jb
loope
loop
popa
dec
enter
in
pop
ret
in
out
xor
mov
mov
popa
call
push
push
mov
adc
in
cltd
add
adc
adc
and
out
jb
adc
lock
xor
dec
enter
repz
dec
fadds
adc
jb
sub
and
clc
sub
fistl
xor
dec
inc
adc
test
std
add
push
adc
xchg
inc
orb
or
xchg
inc
xchg
rorl
inc
xchg
inc
xchg
mov
xchg
inc
xchg
mov
xchg
jne
sub
leave
jb
or
or
or
decl
adc
add
or
prefetch
cs
cs
adc
dec
fadds
decl
adc
inc
adc
mov
enter
and
jbe
sbb
sbb
and
sbb
sbb
and
sbb
sbb
in
dec
pop
dec
or
and
dec
xchg
sub
or
and
cmp
and
add
mov
xor
sub
sub
add
or
jb
jb
or
or
jb
jb
or
or
sbb
jb
or
or
ss
cs
xor
dec
cmp
cs
cs
divl
fs
jo
dec
xchg
lret
cmp
dec
xchg
dec
cmp
arpl
push
ds
aas
inc
das
fwait
nop
in
inc
inc
sbb
leave
cmc
inc
repz
or
dec
adc
inc
lods
inc
test
xchg
cmpsl
lods
inc
in
sub
sub
xlat
dec
xchg
mov
or
adc
or
lret
gs
and
push
jmp
xor
push
and
iret
fs
cli
push
dec
xchg
lret
es
mov
push
adc
dec
xchg
out
push
add
cmc
pop
pop
adc
dec
sbb
pop
nop
enter
push
or
or
xchg
lret
sbb
dec
xchg
push
pop
lds
pusha
inc
xchg
xchg
popa
bound
push
arpl
mov
gs
fs
popf
in
or
mov
ss
or
or
add
leave
decl
or
or
mov
fwait
nop
in
jno
jae
or
mov
push
dec
adc
ja
fwait
js
and
lahf
jp
and
and
xchg
xor
cmc
jge
xor
test
mov
sub
sub
out
cmpl
cltd
xchg
dec
enter
xchg
movsb
or
rcll
divl
mov
or
mov
daa
insb
inc
xchg
lea
ret
vprotb
lds
xchg
sub
lcall
setne
and
or
and
and
or
or
and
or
pushf
sub
sub
iret
xchg
popf
movsl
sahf
sbb
ljmp
ret
shll
cwtl
adc
mov
bound
insl
movsl
cmpsb
xchg
lret
pusha
cmpsl
sub
inc
xchg
subl
xchg
ljmp
xchg
push
insb
inc
xchg
subb
mov
outsl
push
mov
mov
dec
jno
xorl
xor
inc
mov
jb
test
xor
mov
movb
dec
enter
xor
dec
pop
test
roll
sub
mov
enter
add
leave
cmc
lret
dec
or
repz
aad
dec
pop
dec
int
into
mov
or
and
shll
shrb
in
es
mov
popf
aad
push
lcall
fcomps
fyl2x
fiaddl
movsb
or
out
fdivl
lcall
dec
push
pusha
filds
dec
xchg
mov
or
or
dec
fadds
out
and
jne
or
ss
mov
dec
enter
sub
in
sub
xor
imul
mov
sub
sub
and
pusha
icebp
add
cmp
lret
and
mov
lret
and
and
clc
xor
cli
sti
xor
xor
xor
test
jmp
test
add
mov
fs
js
add
sub
testl
mov
mov
lcall
or
or
xchg
push
mov
fs
lds
fs
lock
mov
fs
mov
mov
dec
es
mov
repnz
adc
sbb
sbb
mov
test
imul
and
decl
xchg
out
and
and
es
daa
xchg
mov
adc
mov
fildll
frstor
fs
mov
das
push
in
lea
jnp
nop
in
in
or
pop
ss
and
in
add
or
lds
or
pop
cs
cmp
cmp
pop
test
or
inc
inc
mov
xor
inc
in
arpl
movsb
dec
enter
jmp
or
mov
lret
and
rorl
sub
and
xchg
in
outsl
xchg
dec
sbb
xor
jb
adc
push
pop
push
xchg
iret
dec
enter
push
push
push
dec
adc
popa
insl
push
inc
push
rcll
jge
pop
push
mov
sbb
loop
gs
or
insb
inc
fistpl
jge
fs
in
pusha
fs
andb
lret
arpl
dec
xchg
xchg
gs
data16
mov
push
inc
mov
xchg
or
popa
imul
loopne
jmp
mov
push
pop
xor
outsl
scas
mov
push
mov
or
mov
jae
pop
in
or
adc
push
in
in
jbe
ja
in
in
js
jns
in
in
jp
jnp
daa
test
xchg
jl
jge
jle
test
adcb
and
gs
orb
and
and
and
test
xchg
and
into
mov
and
mov
and
les
sub
les
dec
adc
test
dec
dec
dec
xchg
sbb
xchg
movsl
push
xchg
jns
sub
sub
cltd
cwtl
push
adc
test
lcall
cmp
or
addr16
lret
push
or
inc
xchg
inc
cmpsl
or
xchg
inc
rorl
movsl
outsl
cmpsb
imul
and
test
flds
xorl
dec
enter
lods
in
mov
and
scas
sbb
mov
jle
mov
xchg
sub
dec
mov
jg
push
or
in
cmc
mov
mov
mov
mov
fs
xor
mov
fs
push
pushf
nop
mov
es
inc
mov
fwait
nop
in
shr
ret
or
dec
ret
les
lds
decl
lock
jb
leave
lret
lret
and
int3
test
test
int
into
in
adc
leave
rcl
adc
rcl
and
popa
outsl
aam
aad
and
mov
adc
mov
inc
mov
push
or
dec
daa
add
xchg
dec
fldt
push
fmull
xchg
or
or
or
adc
pusha
cmp
mov
or
or
lods
decl
jmp
rolb
pop
jmp
and
jmp
pusha
adc
in
fucomip
sbb
mov
mov
mov
or
pop
mov
and
loopne
repnz
decl
add
jg
ret
es
idiv
cwtl
xor
lods
aas
stc
add
dec
dec
inc
sti
cld
jne
pusha
les
std
or
add
test
decl
loopne
push
pop
add
add
add
jo
jb
add
add
lods
dec
xchg
lret
or
or
dec
xchg
inc
or
or
jb
jbe
or
or
ss
xchg
or
or
mov
xor
xchg
pop
mov
mov
rclb
xlat
pop
mov
mov
out
mov
adc
adc
mov
imul
sbb
fwait
and
sbb
sbb
lds
decl
lret
and
and
enter
popa
and
and
and
sti
sub
inc
cwtl
and
decl
cs
mov
aaa
daa
mov
sub
sub
xchg
pop
sub
add
push
cs
or
adc
push
xchg
lret
push
and
xor
lea
mov
xchg
sbb
sbb
and
aaa
cmp
lret
and
js
cmp
daa
cmp
pop
cmp
cmc
cmp
xor
ds
aas
push
ror
mov
inc
push
pop
inc
push
pop
push
add
inc
loopne
stos
push
decl
mov
inc
jg
inc
cld
push
cltd
or
dec
cmpsl
inc
je
dec
push
std
xchg
dec
dec
pop
dec
loope
sbb
dec
pop
adc
xor
dec
cmp
nop
in
push
push
insl
push
add
push
leave
jb
inc
or
leave
jb
push
stos
pop
leave
jb
jb
pop
negb
je
jb
pop
lock
pop
push
adc
call
insb
inc
cmp
pop
outsl
shll
add
fs
popa
and
cs
xor
sub
rclb
movb
push
in
add
push
popf
in
test
imul
lcall
outsb
arpl
dec
xadd
mov
jno
xorl
jae
je
or
ljmp
es
js
or
leave
cmc
jns
jp
xor
jl
jge
xchg
sub
xor
movb
enter
sub
or
or
ja
enter
mov
sub
dec
mov
cli
mov
or
sub
lret
leave
jb
jb
mov
jb
jb
mov
mov
xchg
dec
nop
in
decl
dec
cwtl
nop
push
jg
xchg
mov
xchg
xchg
push
sbb
pop
imul
cwtl
cltd
dec
dec
es
pushf
cwtl
nop
in
iret
popf
sahf
jno
je
pop
lahf
push
das
mov
aaa
call
rolb
test
adc
sub
les
loop
lds
or
lods
push
xlat
dec
dec
pop
sbb
or
dec
scas
mov
mov
leave
jb
mov
pusha
jb
dec
enter
ss
dec
enter
mov
pop
dec
pop
adc
dec
enter
mov
lret
iret
mov
pop
mov
lret
and
test
xor
ret
lods
pop
leave
jb
test
or
or
decl
out
adc
into
leave
lret
shlb
dec
lcall
ret
pop
iret
std
inc
xchg
dec
xchg
mov
inc
sarl
xor
or
and
cmp
add
cwtl
adc
aad
mov
xlat
fcomp
inc
xchg
dec
cwtl
fsts
jp
in
or
arpl
jge
or
xor
push
mov
adc
movsb
fwait
jmp
enter
add
add
mov
push
xchg
mov
sub
cli
add
je
dec
inc
outsb
mov
push
inc
sbb
ljmp
add
push
add
lcall
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
gs
dec
sub
andl
ret
and
jae
adc
gs
dec
inc
std
fstp
outsb
je
popaw
arpl
pop
pop
jbe
popa
inc
js
fcmovnu
adc
xor
enter
add
push
mov
sbb
add
inc
decl
push
inc
add
dec
add
add
add
add
add
out
pop
push
add
mov
add
outsl
insb
xor
pop
adc
add
or
add
push
pop
jae
mov
push
popa
or
pop
push
pop
mov
dec
das
test
sub
push
add
xor
je
fs
aas
nop
or
gs
nop
cld
add
nop
mov
xchg
cs
insb
fsub
popa
je
hlt
inc
sti
add
int3
fisttps
shrb
jae
arpl
pusha
aaa
sti
outsb
fists
adc
or
scas
or
add
addb
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
