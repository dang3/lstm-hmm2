popf
ret
insl
fstl
daa
cmp
sub
in
loop
orl
int
push
ret
lea
addr16
add
add
jle
sub
fidivl
pop
fisttpll
insl
call
stos
inc
pop
mov
fnstcw
bound
xor
mov
test
or
push
xor
in
xchg
and
enter
cmp
add
aam
pop
push
jecxz
sarb
jp
imul
je
dec
sbb
movsl
icebp
loope
jecxz
jl
imul
aas
sub
jmp
dec
ss
loop
jb
pop
sbb
pop
fsts
loope
mov
sbb
jg
int
test
aad
sbb
lock
pop
inc
lcall
jbe
xor
and
cmp
adc
sub
iret
shr
mov
adc
sahf
pop
or
scas
pop
add
andb
aad
xor
xchg
xor
push
out
je
cmpsl
push
rolb
xchg
push
test
shll
fiaddl
dec
int3
push
mov
push
test
cli
das
sub
push
test
dec
inc
cmp
popa
mov
sub
pop
adc
pop
jmp
stos
xchg
pop
dec
xor
pop
popf
aad
sbb
daa
jns
insl
pop
inc
in
xor
dec
test
scas
jne
mov
sbb
insl
and
push
mov
jle
pop
in
pop
cld
push
das
pop
mov
sub
fstps
jb
dec
xchg
and
and
sub
lods
repz
push
cli
sub
xor
in
test
jo
insb
sub
push
add
test
xor
jg
dec
imul
xchg
jno
cmp
cld
jmp
sbb
or
pusha
adc
inc
bound
repnz
rcll
jg
pop
mov
js
scas
movsl
cmp
sbb
inc
insb
inc
lret
loopne
rcrb
stos
sub
lods
push
out
and
orb
enter
pop
lea
gs
mov
jnp
xor
or
cmp
jmp
xor
aad
adc
and
negb
cs
pop
outsb
sub
add
cmp
push
lock
mov
pusha
mov
dec
sahf
sub
cld
ret
bound
pop
cltd
sbb
sub
push
movsb
movsl
and
mov
jbe
inc
sub
push
cmp
test
je
cmp
jge
addb
cmp
sbb
stc
adc
xchg
sub
add
and
push
or
lock
sbb
xor
xchg
enter
jl
sub
jns
pusha
aaa
mov
cmp
sbb
cmpsl
and
imul
fldenv
jmp
and
fmull
pop
inc
dec
leave
stos
aad
xorb
outsl
addr16
sbb
xlat
scas
xor
addr16
pushf
insb
push
pop
xor
xor
stos
add
mov
das
adc
pop
rorb
and
mov
xchg
movb
inc
mov
and
pop
call
daa
xchg
push
push
outsl
push
sbb
xor
jae
push
push
push
fisubrs
pop
mov
xor
icebp
pop
xchg
bnd
imul
inc
outsl
stos
sub
popa
jnp
scas
shlb
sub
pop
mov
add
cld
inc
push
push
push
push
les
cmp
outsb
sbb
loopne
hlt
xlat
arpl
enter
addr16
lock
shlb
dec
je
stos
imul
xchg
or
inc
rclb
or
push
divl
inc
popa
iret
ret
xchg
fdivrs
shlb
fisttpl
and
push
sbb
outsb
call
fidivrs
and
xchg
lock
loop
scas
aad
nop
imul
loopne
pop
cmp
lea
das
pop
jno
jmp
cli
daa
sbb
push
cmpsl
shld
or
pop
jno
cwtl
add
push
in
in
stc
adc
aam
cmpsb
jecxz
rcll
xor
push
adc
and
and
loope
mov
imul
jne
shlb
lret
jb
adcb
sub
adc
sbb
in
mov
and
repnz
push
lods
ss
pop
imul
aad
es
push
mov
dec
sbb
xor
movb
lds
sub
test
movsb
xor
adcb
lock
movsb
adc
mov
add
pop
lcall
cmp
xchg
cli
xlat
push
movsl
push
icebp
push
jb
cs
cmp
xor
push
push
ja
cmpsl
jge
dec
call
or
andb
sbb
push
xor
data16
ja
xchg
aad
jne
inc
ds
xor
jae
push
mov
sub
imul
adc
push
jl
mov
inc
add
pusha
adc
ret
push
pop
pop
inc
adc
mov
add
or
jge
jecxz
insl
cmp
xor
clc
ja
aad
cmp
jle
mov
into
lahf
lret
adc
ds
fdivs
jne
fwait
lods
mov
sub
addr16
outsb
test
shll
gs
call
or
or
cli
lock
xor
sbb
test
push
inc
mov
dec
test
mov
xorb
dec
imul
fnstenv
sub
jo
nop
adcl
and
nop
inc
je
inc
inc
popa
lods
nop
lret
sub
jg
nop
jmp
dec
mov
outsl
mov
pop
and
cli
cmp
xchg
ret
std
rorl
out
cmpsl
icebp
dec
or
test
sahf
insb
sarb
push
les
das
lods
and
sub
sbb
xor
repz
inc
and
pop
jmp
sbb
dec
insb
dec
les
pop
cvttps2pi
fs
aaa
cmpsb
adc
sarb
sar
call
leave
dec
xor
inc
add
ljmp
adc
xor
les
call
push
fwait
sarl
dec
fiadds
cmpsb
jnp
dec
adc
cmpsl
xchg
shrl
idivl
mov
loopne
mov
pop
cmp
xchg
call
push
add
fsubrs
fs
enter
push
fsubl
or
lds
addr16
dec
adc
inc
ret
fsubl
sbb
or
and
ret
mov
push
shlb
int
repz
xor
sbb
lret
out
rcrl
and
pop
jl
dec
cmp
adc
push
push
add
sahf
aam
pop
adc
xchg
mov
adc
sub
in
imul
hlt
jb
ret
movl
sub
call
js
shlb
loopne
jmp
jns
pop
fsubrl
dec
push
aas
inc
sub
jl
movsb
dec
inc
push
lods
or
xorb
fnstcw
xchg
sbb
stos
mov
mov
mov
addr16
sbb
jmp
mov
cmp
pop
dec
cmc
sub
xchg
push
nop
cmpsl
repz
push
into
aad
and
dec
ss
cltd
loop
pop
xchg
mov
test
xchg
sub
or
sub
dec
loope
rcll
cltd
and
dec
shlb
movsl
jmp
je
call
sbb
jle
xchg
out
test
xchg
lods
fistps
or
jae
adc
mov
push
cmp
jno
test
pop
jae
mov
add
adc
dec
movsl
inc
jge
cmp
sbb
pop
jecxz
sub
hlt
call
in
or
mov
jle
dec
jecxz
nop
aas
int3
arpl
out
sub
lods
jbe
inc
jmp
repnz
outsl
mov
jle
mov
push
push
test
cmp
cmp
test
clc
js
dec
insl
lods
inc
dec
pop
arpl
xchg
or
xor
adc
aad
and
sbb
lret
push
rcl
jno
lahf
ss
pop
sbb
and
les
nop
int
cmp
dec
rcrb
cmp
add
jb
pop
xor
movsb
push
push
cwtl
cwtl
push
mov
das
imul
add
xchg
arpl
outsb
ret
nop
adc
popf
jecxz
cmpsl
push
test
pop
sbb
data16
jecxz
mov
mov
push
call
jnp
adc
inc
jmp
xor
ds
push
fnstcw
sub
int
popa
aas
popa
clc
sub
sub
xchg
mov
mov
cmpsb
mov
lea
test
cwtl
ds
dec
push
rol
pop
mov
xor
filds
mov
pushf
ret
pushf
notb
test
xor
popf
cld
adc
xchg
push
inc
mov
adc
cmp
mov
daa
insl
mov
or
cmp
xchg
jns
or
add
rcrl
int3
inc
or
aad
jae
sub
xchg
pop
xchg
sbb
lock
mov
icebp
test
mov
fildl
insl
or
pop
sbb
mov
or
dec
imul
or
repnz
or
cltd
outsb
je
adc
push
fisubrl
sbb
xor
cmc
or
popa
mov
inc
addb
mov
clc
inc
add
or
je
add
jb
outsb
pusha
aas
lahf
mov
xor
jle
std
and
cwtl
gs
mov
mov
jnp
adc
ret
das
sbb
xchg
mov
and
test
jno
out
cmc
cld
lahf
xchg
pop
enter
mov
inc
pop
cmp
in
aas
in
movl
or
mov
mov
or
xor
iret
jo
jne
lea
xchg
outsl
mov
mov
neg
and
pop
popf
out
mov
dec
test
dec
lods
push
xor
bound
xchg
cmc
dec
xchg
xchg
movsl
sub
add
and
test
xchg
aad
cmpsb
aam
jle
xor
dec
in
call
mov
out
jne
in
pop
pop
add
cmp
sbb
fldenv
lcall
inc
pusha
pop
pop
jmp
and
add
sub
push
mov
daa
xor
sbb
and
and
mov
loopne
pop
add
jns
mov
mov
add
xchg
rcl
inc
dec
movsb
int3
aaa
movsl
mov
fs
mov
push
out
subb
jne
jno
pop
dec
filds
out
aam
xchg
popa
inc
int
outsl
and
mov
or
adc
addb
je
add
outsl
inc
add
or
inc
pop
jmp
push
js
cmp
push
aaa
gs
cmp
sub
mov
cmc
inc
push
add
sub
dec
mov
and
loope
jb
dec
leave
push
std
and
sub
push
adc
pop
mov
sbb
es
dec
dec
sub
xchg
or
push
insb
sbb
xor
push
inc
push
or
js
sbb
sub
std
insb
dec
cli
sub
sbb
or
and
and
iret
lea
jb
add
add
add
mov
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
movb
sub
mov
popa
jmp
sub
mov
sub
gs
movsb
pushf
jne
arpl
cwtl
dec
es
leave
in
js
pop
das
pop
mov
xchg
enter
jmp
mov
sbb
xchg
data16
and
jmp
mov
sbb
cwtl
dec
es
enter
mov
mov
cld
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
lcall
xchg
and
cmc
pushf
add
ja
cmp
scas
enter
cmp
sbb
popa
jb
inc
jo
cs
js
and
inc
cwtl
ret
mov
js
scas
mov
jns
ss
cmc
cmp
faddl
and
js
and
scas
lods
jno
test
out
rclb
imul
into
loopne
out
lods
and
and
repz
mov
adc
sbb
inc
sbb
and
mov
nop
aam
call
in
add
sbb
mov
mov
add
test
add
je
mov
enter
inc
sahf
ret
inc
and
adc
push
add
push
call
lcall
pop
and
aad
jmp
jge
push
mov
add
lods
out
add
sub
fcmovb
inc
fcoms
mov
movsb
xchg
je
mov
repnz
adc
xchg
inc
jmp
ss
fsubl
inc
leave
ret
inc
add
dec
in
inc
lea
mov
or
test
inc
push
lea
mov
inc
mov
mov
sub
daa
inc
lea
orb
add
rcl
cld
movnti
dec
jne
mov
ret
inc
push
inc
dec
inc
inc
sub
inc
sub
popa
mov
mov
inc
cld
dec
or
add
cmp
inc
cmpb
notl
test
popa
jge
jmp
nop
ds
int3
insl
adc
test
push
hlt
adc
add
clc
shl
cmp
ret
xor
mov
xor
or
cmp
repnz
popa
testb
push
pop
dec
ret
or
or
inc
ja
fisubs
sbb
pop
lock
hlt
xorl
add
or
shlb
stos
es
clc
into
pop
lea
add
push
cld
jb
shrl
loopne
loopne
test
mov
add
inc
dec
jne
mov
mov
icebp
sub
add
mov
or
xorl
pop
into
mov
icebp
ds
jns
popa
add
and
enter
and
sbb
and
les
ret
add
xor
popa
add
stc
bound
aas
sub
cltd
mov
in
mov
pusha
xor
cmpb
pop
xor
cs
cmp
cmp
push
jne
cs
orl
lds
cmp
ret
mov
repnz
jbe
push
jmp
pusha
add
sbb
stc
xor
mov
mov
cmp
add
int3
cld
inc
xchg
push
jmp
push
mov
and
es
push
push
xor
pop
sub
push
addl
mov
xchg
inc
inc
adc
movsb
sub
leave
jne
xor
sahf
sbb
imul
or
adc
fcmove
leave
ljmp
ficoms
inc
push
popa
pop
enter
inc
sbb
es
jp
adc
fadd
clc
popf
js
cmp
add
mov
xor
mov
push
pop
add
testl
add
leave
adc
les
mov
jmp
and
aam
in
mov
dec
mov
add
adc
adc
or
xchg
pop
data16
mov
ljmp
inc
jne
or
xor
insl
ds
and
rclb
lods
and
xor
xor
push
sbb
cmp
cmp
push
loopne
jge
cmpsl
scas
es
mov
aaa
add
pop
xor
push
sbb
mov
jmp
bound
sub
stos
int
inc
addr16
mov
xorl
ljmp
and
das
add
add
stos
clc
jo
cmp
addr16
jecxz
arpl
cmp
ret
dec
int3
or
adc
data16
dec
cld
aad
add
push
or
adc
push
xor
pop
pop
push
pop
cmp
mov
es
subl
pop
xorl
jle
xor
sbb
nop
dec
adc
sbb
inc
and
dec
aaa
call
bound
test
pop
rclb
out
mov
add
aad
mov
sbb
shrb
dec
clc
bound
xchg
mov
sub
xor
hlt
mov
imul
shl
dec
sahf
ret
adc
iret
loope
push
mov
mov
out
int3
push
lret
mov
orb
stos
test
mov
inc
and
add
jp
pop
lods
cld
lods
push
sti
pop
jno
js
imul
shlb
inc
in
dec
gs
fstl
jle
sub
inc
shlb
mov
aad
loope
sub
and
inc
fcmovnb
or
rorl
in
test
sbb
shrb
cmpsl
push
inc
scas
call
nop
mov
in
fldl
push
fldt
pusha
into
and
pop
pop
add
or
jle
sub
popf
mov
andb
imul
js
and
ret
cmp
shrb
fdivs
add
aas
adcb
dec
cmpsl
test
hlt
dec
out
add
mov
lret
or
pop
sti
cmpl
les
push
pop
test
ror
xorl
push
hlt
pusha
out
jno
xor
jge
sbb
das
repnz
inc
pop
nop
xor
hlt
call
cmp
in
stos
lods
pop
mov
lods
cwtl
add
sbb
out
cmp
in
or
std
in
les
mov
outsb
pop
sbb
ss
in
xchg
call
push
adc
cwtl
test
mov
add
sub
pushf
bsf
ret
cmpsl
xor
in
dec
push
inc
rolb
orb
sub
xchg
out
add
adc
sub
loope
test
repz
jecxz
adc
cmpsb
test
mov
pusha
push
fmull
lahf
lds
cli
punpckhbw
pusha
xor
or
enter
es
add
sub
mov
pop
sarl
push
out
mov
sbb
aad
jmp
mov
sub
mov
in
test
aad
xor
out
sarb
daa
hlt
dec
or
or
hlt
push
rolb
iret
lods
lret
pop
and
dec
cmpsl
adc
mov
cmp
rcrl
dec
call
or
jp
test
cmp
inc
pushf
fmuls
stos
cmp
cmpsb
arpl
sbb
add
pushl
test
jbe
or
sub
divb
pop
repz
ret
dec
dec
jo
inc
inc
fcoms
dec
pusha
jns
cld
mov
xchg
dec
lods
into
les
ret
push
sarb
jns
ljmp
adc
pushf
cld
xchg
jmp
inc
shrl
hlt
push
or
mov
add
aas
push
add
int3
mov
imul
xchg
jbe
adc
mov
pop
sbbb
jns
adc
pextrw
pop
hlt
mov
cmp
dec
add
iret
loop
test
mov
subb
cmp
inc
xor
add
jle
lcall
or
orb
xchg
xchg
pop
sbb
jecxz
or
or
mov
push
loopne
xlat
sbb
in
push
pop
mov
jle
inc
leave
cltd
dec
cmpl
in
sbb
pushf
and
adc
clc
stos
clc
ljmp
cmp
mov
xor
jnp
xchg
xchg
popf
data16
je
and
sub
mov
pop
test
shrb
mov
add
add
push
popa
push
mov
incb
jns
in
dec
add
xchg
jmp
and
sbb
clc
fldl
xchg
jle
inc
in
cli
movsl
mov
lds
subb
orb
sub
xor
ja
frstor
sub
pop
add
sbb
fucomi
arpl
dec
mov
test
mov
nop
pop
jae
movsb
mov
orl
loope
add
cmp
pop
dec
pop
stos
and
in
mov
rolb
cwtl
sbb
push
inc
lods
fucom
xor
pusha
icebp
test
test
ss
and
jns
popa
lock
and
in
fimuls
iret
mov
sbb
mov
jmp
bound
inc
stc
and
pop
mov
add
aam
adc
jne
mov
pop
stc
and
add
pushf
mov
popa
pop
xor
data16
mov
jmp
pop
sub
mov
imul
dec
push
adc
add
rcl
lret
mov
sbb
popa
mov
push
data16
das
cltd
xor
jns
xchg
adc
insb
pop
rorl
clc
pop
lahf
cmpxchg
mov
rolb
cmp
push
cltd
int
add
nop
and
jle
dec
jne
addb
mov
lcall
sbb
push
jl
aam
mov
pop
data16
cltd
pop
adc
dec
stos
mov
dec
and
sahf
add
lcall
cmp
std
dec
adc
aad
push
sbb
inc
push
xchg
add
or
sarl
add
aad
inc
or
inc
dec
inc
into
inc
pop
mov
add
mov
orl
mov
arpl
xor
dec
add
add
addb
xchg
sub
mov
iret
div
add
shll
cmp
sbb
loop
mov
sub
push
into
push
shlb
loop
cmp
ret
cmp
mov
sbb
add
arpl
dec
icebp
bound
andl
ret
pop
adcb
stc
movsl
mov
testb
and
sbb
jo
pop
mov
pushf
xchg
rorb
xchg
test
enter
push
xor
push
add
nop
bound
lods
pop
lahf
nop
inc
imul
push
add
xor
dec
in
shlb
inc
fistps
in
cmp
lret
pop
das
test
add
negl
add
fcomps
mov
add
sbb
add
cmp
cmp
or
cld
mov
rcrb
mov
inc
pop
das
push
ja
lods
add
adc
push
in
xchg
shrb
cmp
mov
roll
push
pop
mov
jnp
add
or
sbb
pop
in
push
clc
cmp
mov
and
mov
cwtl
lcall
aas
xlat
into
hlt
add
dec
xor
insb
loope
sbb
mov
mov
lcall
lds
jbe
add
enter
xchg
ljmp
or
sub
mov
push
shll
aam
or
xchg
mov
les
or
cmc
cld
aam
xchg
xchg
rolb
cmp
andl
mov
sbb
xchg
enter
popa
xchg
call
in
rorl
test
adc
aaa
mov
or
cmp
pop
movl
push
test
pop
fwait
call
mov
cmp
cmp
dec
xchg
or
outsl
stos
jmp
jp
sarl
movsl
cmp
add
xchg
test
imul
mov
test
xor
fcoms
vpsrlw
insb
sub
jns
lock
push
rol
pop
scas
inc
cmp
adcb
je
mov
mov
mov
test
sbb
xchg
xchg
cmc
xor
mov
adc
dec
cmp
adc
or
mov
xor
popa
loop
xor
das
add
xchg
out
lret
jle
xor
in
rcl
push
cmpb
xchg
test
xor
or
mov
or
cmp
jle
xchg
or
popf
and
xchg
sbbb
cmp
mov
int
dec
lock
cld
push
adc
jno
bound
push
psraw
xor
lcall
bound
pop
cmpl
mov
mov
add
nop
add
pop
xchg
sub
adc
sbb
sar
add
movsl
and
sbb
subb
out
xorl
rol
pop
xor
add
push
loopne
inc
mov
lea
cli
lods
push
sub
push
sub
adc
inc
add
imul
ja
push
repnz
add
enter
and
sub
add
adc
orl
ja
repnz
mov
and
xchg
adc
add
cld
xchg
or
cmp
js
pusha
fsubrs
ds
lods
push
je
imul
fildl
xchg
jno
add
jg
push
add
imul
lock
xchg
push
mov
stos
lea
movb
test
imul
add
inc
lock
push
loopne
jle
fneni(8087
negb
cmp
xchg
pop
push
xor
jno
stc
je
add
fmul
pop
add
clc
dec
cmp
xchg
psubsw
cld
xchg
xchg
lods
ljmp
adc
nop
lret
fsub
sub
fisubrs
inc
xchg
wbinvd
and
mov
imul
cmp
xchg
xlat
call
stc
lcall
jge
pop
jmp
cmpsl
xchg
mov
push
clc
lret
lahf
add
stc
inc
or
in
xor
nop
int3
add
mov
ret
mov
cmp
lock
add
pop
xor
push
mov
jne
xor
test
fs
pop
fdiv
outsl
xor
jl
add
ds
pusha
jae
pop
insb
outsl
movl
jb
add
jg,pn
pusha
das
in
add
add
jmp
sbb
in
stos
jns
out
ret
gs
ret
push
inc
xorb
sub
dec
les
xchg
add
std
add
loopne
dec
mov
add
sub
push
shlb
out
add
push
push
add
xor
pop
idivb
sbb
xor
cmp
xor
daa
or
mov
cmp
xchg
out
popl
clc
jp
mov
fwait
cld
pop
mov
imul
push
push
scas
imul
sub
xor
xchg
xor
in
jno
and
pop
sbb
subl
lods
enter
add
fwait
hlt
fldenv
popa
or
adc
jo
cwtl
jle
lock
xor
loope
and
pop
and
jmp
and
sub
xchg
adc
xchg
and
cmpsl
ficompl
add
loopne
xrstors
add
ds
scas
push
sub
and
pop
repnz
clc
pop
add
jl
fcomp
mov
and
xchg
iret
into
xlat
cli
ret
mov
and
popa
ret
outsl
in
and
stc
test
cmp
push
pop
std
sbb
outsl
les
inc
fadd
popa
push
ret
pop
sbb
rolb
aaa
xchg
nop
sbb
repnz
and
add
notb
push
sarb
mov
test
add
into
pop
xor
add
test
xchg
add
mov
push
jl
in
or
sub
add
repnz
movsl
xchg
xor
popa
es
push
lret
sbb
fadds
pop
aas
xor
lock
loope
and
mov
mov
js
mov
sub
add
in
ret
std
enter
call
mov
ss
hlt
sarl
std
push
jnp
pop
dec
pusha
and
sar
push
jg
add
dec
ds
fidivs
adc
xchg
mov
push
cmp
sarl
pop
imul
inc
fstl
or
pop
push
icebp
sub
das
sbb
mov
add
add
out
repz
lret
repnz
push
mov
mov
add
enter
mov
mov
sbb
sbb
faddl
pop
loope
pop
adc
jns
les
mov
rcr
inc
bound
sub
push
fists
stc
xor
jo
xor
fs
push
xchg
test
inc
testb
lock
pop
pop
lods
mov
stos
outsl
adc
and
addl
mov
jle
dec
adc
or
push
movsl
scas
cmp
xor
adc
lods
or
rol
stos
popa
and
add
ret
mov
adc
stos
add
cmp
and
mov
push
xchg
test
and
popf
pop
movsl
cwtl
fsubs
repz
mov
and
imul
popf
add
cmp
ret
and
push
dec
push
int3
es
add
xchg
mov
cs
and
sbb
inc
add
or
mov
movlhps
cmp
gs
and
pop
inc
clc
out
addr16
push
fs
jae
or
mov
xor
andb
mov
shrb
or
ss
xor
clc
xchg
inc
push
repnz
mov
cmpsb
inc
cld
sarb
aam
add
sahf
cmp
dec
in
roll
push
and
dec
pop
lods
sub
inc
popa
mov
test
mov
cmpb
popa
cltd
repnz
add
mov
lods
mov
sbb
outsl
lahf
adcb
xor
inc
int3
fsubrl
mov
add
out
dec
adc
daa
dec
lcall
xorb
shrb
pop
out
sbb
and
and
or
out
sub
push
pop
or
pusha
xchg
adc
clc
testb
cs
jecxz
ss
es
sub
xor
lret
mov
adc
inc
xor
popf
das
jg
pusha
pop
dec
and
jge
pop
in
dec
add
jne
jle
xchg
cmp
xchg
mov
inc
sbb
fistl
stos
xchg
bound
sbb
outsl
das
xor
push
into
xor
jns
insl
add
add
pop
cmp
cli
add
aas
pop
adc
ror
fstpl
mov
pushf
rol
cmc
shl
dec
push
cs
test
cmp
push
in
lock
push
add
sub
adc
cltd
add
jbe
mov
cmpsl
call
sub
cmp
add
dec
cltd
enter
lret
cltd
pop
and
loope
add
push
push
pop
cli
sbb
or
stc
inc
or
adc
test
xor
fs
addb
sbb
sti
movsb
es
mov
repnz
mov
mov
stos
jbe
sbb
sti
sarb
sbb
push
add
xchg
shrl
mov
mov
enter
leave
xlat
pop
jge
add
or
jno
aam
mov
mov
xchg
jecxz
and
dec
mov
sarb
ljmp
pop
cmovp
stos
test
pop
das
fcompl
add
push
mov
add
iret
cld
mov
pop
xchg
aam
cmp
shl
xor
shlb
or
xor
scas
enter
leave
nop
sbb
lods
mov
shrl
sbb
push
and
pop
dec
push
mov
xchg
cmp
or
xchg
loope
and
cli
sub
sub
stc
ds
push
movsl
das
scas
mov
lahf
pop
pop
mov
in
addl
shll
xor
loopne
mov
dec
and
mov
or
popf
ja
jp
add
xchg
inc
xor
ljmp
fiadds
js
cmp
les
xor
dec
mov
sub
xchg
add
push
lods
daa
clc
sbb
xor
xor
out
fmulp
dec
enter
jecxz
xchg
push
or
and
jb
mov
mov
add
imul
sahf
add
pop
lret
ds
sub
push
enter
mov
or
pop
xor
es
lods
add
xor
je
add
in
aas
div
cld
adcb
pop
and
mov
sti
add
adc
ja
fadd
sbb
cmp
or
push
fwait
imul
jecxz
ss
cmp
xchg
test
or
xchg
mov
dec
mov
test
test
out
cmp
shrb
aam
sbb
or
xchg
les
aad
popa
insl
mov
adc
cld
cmp
out
sbb
ljmp
add
inc
sub
cmpsb
xchg
add
mov
and
es
aam
add
mov
xor
addl
out
xchg
or
bound
cmp
mov
push
or
dec
rorl
sbb
mov
subl
fwait
adc
orb
test
inc
add
jecxz,pt
pop
dec
pop
and
out
cltd
adc
out
or
xchg
mov
pop
sub
out
xor
lock
dec
repnz
ret
push
and
add
in
sahf
cmp
push
mov
les
jl
adc
or
js
add
clc
add
sbb
inc
lock
or
mov
addl
ja
out
add
outsb
and
call
in
cmc
mov
adc
adc
loope
in
mov
inc
pop
dec
push
fcmovnu
adcb
adc
dec
or
xchg
pop
pcmpgtw
cld
sub
fmull
xchg
or
jbe
pop
inc
mov
fldt
mov
xlat
imul
lods
rcl
jb
cld
pushf
sbb
movsb
in
mov
mov
lods
popa
and
aas
les
push
dec
cmp
insb
ds
push
dec
pusha
sbb
jbe
scas
adc
inc
push
call
dec
jae
enter
test
test
pop
sbbb
loopne
cmp
lcall
sbb
imul
sub
outsl
inc
xor
add
cli
popa
add
xchg
and
lea
or
sahf
in
xchg
add
adc
cwtl
sub
pop
rorl
sbb
nop
inc
aam
inc
mov
lret
add
js
or
clc
and
add
push
mov
negl
adc
dec
add
cmp
mov
dec
loop
adc
popf
testl
call
and
faddl
sub
push
push
cmp
je
adc
push
adc
xchg
mov
adc
rcr
cmp
push
stos
adc
and
sub
push
cmp
add
push
inc
pop
aaa
pop
outsl
and
jecxz
js
or
or
cmpsl
add
xchg
test
fcoms
cwtl
add
fcomps
push
loope
xchg
sahf
lret
cmpsb
adc
ss
pop
dec
xor
jl
pop
lods
push
xor
and
fdivrs
add
pop
ret
nop
sti
cmp
in
or
loopne
sbb
leave
and
xor
inc
mov
les
pop
dec
lcall
inc
mov
jbe
mov
jg
xorb
cli
add
jp
pop
aas
bound
push
cmp
mov
xor
inc
adc
ds
jns
out
lret
je
pushf
push
pusha
cli
add
cltd
push
loope
add
xchg
add
mov
rorl
subb
sub
or
repz
mov
insb
cld
pop
fwait
push
jb
sbb
clc
outsl
cmp
dec
or
xor
sarl
inc
pushf
in
xor
movsl
dec
cmc
or
mov
mov
inc
arpl
and
pop
cmp
sub
test
outsb
xor
arpl
pusha
jmp
pusha
add
rolb
outsl
nop
add
nop
add
xchg
xor
cltd
add
loopne
mov
nopl
cmpsb
out
popl
mov
repnz
pop
fadds
bound
lock
push
sahf
mov
ret
outsl
and
les
clc
lcall
or
pop
inc
fs
jne
mov
enter
mov
or
mov
test
add
sbb
loope
push
stos
sub
jge
shl
ja
fistl
das
icebp
sub
mov
dec
sub
pop
inc
mov
xlat
dec
and
push
inc
inc
sub
and
stos
cmp
and
loope
mov
jb
cmp
adc
sbbb
xchg
or
dec
sbb
push
sbbb
cmp
add
insl
cmp
lods
fs
aad
mov
sbb
fs
and
dec
cmp
es
andb
adc
js
add
pop
pusha
add
xchg
adc
jnp
adc
les
sete
rorb
sub
lock
repnz
adc
in
inc
jecxz
adc
lahf
inc
pop
add
cmp
loopne
push
nop
and
dec
adc
add
push
mov
push
pop
and
lods
in
pusha
pusha
sub
or
fwait
mov
roll
das
jge
mov
pop
ret
inc
cmp
aas
inc
inc
mov
mov
add
or
fsubrs
outsb
and
ficoml
add
insb
xchg
push
sbb
adc
and
add
movsl
mov
or
add
add
xor
out
and
sub
test
jle
pop
add
xor
or
lods
ret
sti
sub
fwait
in
inc
arpl
and
aas
xchg
sbb
jl
sar
xchg
mov
mov
cmp
mov
je
lret
fs
pusha
xor
shlb
in
sbb
cmp
cmpl
inc
cmpb
lahf
stos
add
jb
ss
add
leave
ds
cwtl
cmpl
lea
andl
shlb
cmp
ret
add
pop
dec
xor
inc
sub
imul
dec
pop
sub
adc
add
xchg
dec
sub
mov
xchg
lods
inc
ljmp
lret
inc
push
imul
mov
add
mov
scas
jo,pn
and
sarb
add
pop
daa
xor
add
outsl
xor
mov
inc
xor
mov
xor
pop
in
add
push
lret
dec
enter
mov
out
cli
jno
xor
mov
sbb
or
fnstsw
sbb
cld
inc
ja
insb
rolb
sbb
shl
test
wrmsr
adc
cmpsl
enter
lcall
adc
push
adc
mov
insb
sbb
add
sub
loopne
or
cwtl
xor
add
sahf
and
dec
cs
pop
stc
jbe
sub
enter
lods
jno
jl
fistps
xor
das
sbb
lds
int
jo
fstpl
shrb
les
sahf
outsl
dec
mov
xor
jl,pt
loopne
push
jg
adc
xchg
repz
add
inc
dec
mov
and
test
test
int
cmp
or
in
das
mov
outsb
push
xchg
arpl
ror
fldenv
add
imul
in
add
rcrb
cmc
cld
loopne
adc
std
cld
add
cmp
push
cmpb
pop
xchg
enter
xor
insb
xor
mov
mov
xchg
pop
add
mov
xor
cmp
lcall
fucomip
enter
pop
faddl
stos
cmp
xor
dec
pushf
inc
xchg
xchg
mov
ror
and
pextrw
popa
loopne
shlb
pop
loope
std
orb
sbb
or
or
add
sub
jmp
mov
mov
xchg
push
sbb
iret
cmp
cmp
out
adc
sub
repz
mov
sub
cmp
xchg
fisttps
and
add
ss
sar
les
fistl
jl
outsl
add
ficomps
dec
insb
cs
inc
jbe
adc
aad
and
push
andl
pushf
pop
pusha
xchg
imul
or
mov
xchg
sub
sub
leave
das
sbb
adc
adc
in
cmp
xor
push
pop
inc
in
fnstcw
into
xchg
add
dec
pop
xchg
test
sub
addb
sub
mov
pop
xchg
outsb
daa
mov
imul
and
inc
mov
sub
lcall
insb
xchg
push
andb
sub
xor
subl
lods
insb
inc
fstpt
adc
outsb
pop
jmp
lret
fs
dec
clc
les
cmc
mov
rcl
cld
push
xchg
mov
inc
mov
mov
popf
push
movsl
cli
inc
or
push
sub
or
xor
call
adc
or
test
jns
test
frstor
cmp
cltd
add
mov
or
push
push
cmp
mov
mov
lret
out
inc
dec
sub
inc
pop
icebp
xor
and
ret
test
lahf
mulb
cmp
aas
imulb
adc
add
js
in
pop
incb
test
xor
test
add
pop
pushf
fs
fsts
mov
xor
xchg
sub
xchg
je
sahf
cmp
pushf
mov
mov
daa
xchg
and
movsl
cmp
and
add
add
push
and
das
aaa
addl
jge
cmc
inc
inc
push
push
repz
pusha
mov
add
repnz
add
sub
xchg
into
cmpsb
stos
add
and
enter
mov
mov
lret
pop
add
loop
xchg
add
pop
test
xchg
fidivs
mov
inc
data16
cmp
mov
fcoml
je
cwtl
mov
out
adc
insl
sbb
mov
in
add
xchg
lahf
into
or
add
fstpt
add
jb
mov
and
mov
lcall
enter
add
mov
pop
pop
inc
push
roll
testl
jge
push
repz
push
scas
movsl
imull
cld
push
sub
add
dec
in
test
das
mov
pop
cmp
sub
push
sbbb
adc
jb
mov
daa
loopne
jge
jns
add
out
xor
cld
mov
test
push
mov
mov
inc
cmp
cltd
inc
xor
mov
sbb
fucomip
movb
enter
xor
pop
outsb
push
jl
or
dec
pop
mov
dec
add
loope
sub
cmp
sahf
mov
inc
lods
clc
mov
or
xor
jnp
pop
mov
inc
ds
pusha
dec
cmp
call
add
xlat
fs
divb
cmp
pop
clc
lods
add
shrb
test
cs
insb
add
add
sub
push
jmp
sbb
jne
movsl
or
mov
xchg
cmp
cli
lret
popf
mov
sub
adc
xorb
lcall
incl
add
push
pop
movsb
jo
sbb
add
cmp
rorb
pop
nop
add
cld
sub
sahf
dec
outsb
xor
stos
dec
aaa
xchg
dec
sti
andb
adc
push
inc
xchg
shrl
fs
icebp
add
push
adc
or
pop
add
xor
lods
sbb
sti
ret
jno
pusha
shl
cld
testl
mov
jp
add
aas
call
popl
test
xchg
dec
pop
add
pop
arpl
push
fadds
js
jae
shrb
sub
mov
jb
jnp
lret
push
mov
push
or
nop
jae
mov
add
andl
sbbb
mov
fmuls
jl
and
mov
or
push
cmp
push
imul
or
sub
mov
dec
jo
adc
push
in
jae
enter
xchg
add
lahf
mov
xor
call
add
or
xchg
jmp
add
sub
add
add
cld
loopne
pop
ljmp
mov
movsb
nop
push
push
mov
hlt
cmpsb
push
insb
das
and
xchg
or
xchg
jo
jno
add
cli
repnz
iret
cltd
sub
or
movsl
jmp
pop
push
arpl
dec
cli
inc
dec
xor
xor
cmp
dec
inc
loop
test
movsl
push
repnz
xlat
andb
sbb
and
adc
ds
shl
xchg
test
mov
rcll
push
push
mov
sbb
fiaddl
sub
sbb
jmp
add
jns
sub
test
or
mov
sbb
in
mov
or
pop
bound
sbb
into
sub
cld
dec
incl
imul
xor
in
stos
inc
out
pusha
jp
gs
sub
add
test
movsl
cmp
lcall
sub
sbbb
orb
and
cmp
push
xor
jo
jecxz
cmp
sbb
adcl
and
inc
or
insl
arpl
mov
mov
add
push
nop
call
pop
mov
add
xor
enter
jg
aas
mul
mov
dec
adcb
outsl
sbb
push
and
insb
xchg
push
fs
adc
pop
testb
mov
in
inc
lods
push
or
sarb
add
call
les
call
and
mov
adc
adc
sarl
xorb
add
cmp
sbb
mov
pop
and
shrb
lods
inc
fidivs
mov
movsb
xor
les
mov
inc
add
add
sbbl
add
out
mov
add
mov
lods
mov
xchg
and
insl
and
mov
mov
mov
int
bound
insb
in
pusha
sbb
test
pop
xchg
stos
pop
or
xor
xchg
and
lock
in
addb
leave
fwait
call
lret
bound
push
arpl
adc
mov
or
sbb
push
fs
gs
inc
push
addb
in
sbb
fwait
mov
mov
enter
pop
outsl
add
out
jmp
idivb
shll
fildl
add
lcall
lahf
dec
jb
jge
sub
inc
mov
xor
push
pop
sbb
hlt
cmpl
and
or
or
sti
fimull
mov
inc
mov
mov
xchg
cmp
pop
pop
shl
add
push
and
faddl
repnz
test
add
mov
ret
add
call
das
dec
push
or
loopne
xor
daa
into
inc
jbe
inc
cli
xchg
adc
cmp
dec
cmp
add
push
ds
fsubl
adc
shr
imul
mov
dec
push
js
mov
or
or
sbb
or
xorb
push
sarb
shl
xor
stc
dec
mov
testb
push
rorl
jmp
cmp
mov
ja,pn
insb
and
popf
and
js
add
cmp
pushf
and
stos
jnp
jo
mov
push
std
pop
movsl
aaa
sbb
xchg
enter
push
mov
test
push
in
mov
pop
cld
cs
dec
cmpsb
add
movsl
adc
jl
mov
add
fisubrs
nop
add
mov
fs
push
popa
hlt
xchg
aam
stos
mov
adc
and
or
push
sbb
add
add
adc
mov
sbbb
pop
mov
add
inc
push
xor
scas
add
xor
mov
and
cmp
adc
sti
fsub
mov
and
loopne
ljmp
call
push
adc
and
add
pusha
jo
add
or
jmp
pop
cltd
daa
xor
mov
add
jmp
adc
push
push
arpl
add
fprem
iret
xchg
jb
fadds
stc
pop
int
jl
or
out
fs
ror
jns
mov
insb
push
or
push
mov
adc
es
xchg
add
fs
lret
inc
add
fiaddl
add
sarb
xor
int3
push
subb
or
adc
pop
mov
outsb
xchg
in
dec
lfs
aaa
sub
enter
outsl
mov
mov
in
loop
test
jp
add
add
add
push
sahf
dec
aam
subl
add
mov
jp
mov
cltd
repnz
sub
lods
cwtl
adc
jb
mov
sahf
fsubrs
enter
xchg
aam
roll
aas
mov
jo
test
pop
sbb
sbb
in
rorb
pop
and
xchg
sbb
movsb
movsb
jle
cmp
add
cwtl
inc
in
jb
pop
cli
repnz
sub
fisubrl
ret
lock
xchg
inc
sub
fsub
cld
repz
test
mov
out
xchg
sbb
sub
addl
fldcw
and
lock
add
adc
and
dec
mov
jne
jb,pt
add
sub
ret
sbb
in
loop
bnd
loopne
lods
enter
xchg
es
push
mov
popa
inc
sahf
push
mov
les
adc
adc
pop
fsubp
add
push
arpl
lret
test
add
xor
mov
imul
add
cmpb
dec
sub
outsb
shlb
fdivl
push
insl
add
call
mov
rorl
xchg
and
mov
inc
pop
lcall
das
in
add
lcall
call
mov
sub
test
aas
mov
xor
mov
or
sarb
jne
xchg
into
sub
add
and
call
add
sahf
lods
and
cs
fiadds
pop
inc
pop
imul
and
and
aad
dec
and
push
repnz
aaa
jecxz
iret
das
sbb
nop
lcall
scas
add
xchg
inc
mov
add
inc
xchg
movsb
xchg
fcmovu
popa
addl
leave
sub
add
mov
mov
xchg
mov
mov
sbb
or
add
xchg
ljmp
xor
enter
in
rolb
inc
call
imul
add
cmp
arpl
dec
and
aam
stos
andb
cli
fs
dec
js
mov
inc
sti
dec
jns
fwait
stos
stos
mov
mov
jo
mov
mov
add
sub
jbe
add
addb
mov
add
jo
lret
hlt
nop
pushf
fmuls
add
js
adc
lret
mov
aaa
popf
cmp
loop
pop
xor
and
jp
sahf
insb
xchg
mov
repnz
jns
mov
in
adc
xor
add
loop
sahf
sub
jl
outsl
add
out
add
mov
fstps
sbb
xor
or
subb
sbbb
jo
xchg
call
pop
add
and
ret
inc
jnp
add
daa
sbbb
push
sbb
or
add
enter
push
ja
cld
orb
add
add
icebp
movsb
js
movsl
cmp
add
inc
xor
mov
iret
mov
cld
enter
out
jnp
add
pusha
push
pop
sub
loopne
stc
sub
test
add
xchg
sbb
mov
add
inc
mov
sbb
or
test
pop
das
sti
js
hlt
cmp
test
rolb
repnz
mov
sub
lods
push
inc
mov
pop
js
xchg
inc
movsl
jmp
adc
sub
std
sbb
and
lcall
mov
out
inc
xor
fidivrl
jmp
test
cmc
mov
scas
sahf
sub
push
mov
ss
adc
test
sub
push
xor
pop
imul
add
mov
les
ljmp
pop
fists
mov
adc
sub
add
dec
add
pop
ss
add
jg,pt
adc
or
in
addl
mov
faddl
dec
ljmp
inc
adc
aaa
inc
or
adc
mov
sbb
sbb
adcb
sbb
repz
add
adc
lret
xchg
or
add
pop
mov
scas
adcb
sbb
test
push
dec
lcall
mov
insb
cli
mov
or
shlb
rorb
ljmp
xor
push
sbb
aas
subb
add
xlat
lock
aam
cwtl
dec
jb
int3
adc
push
int3
sarb
pop
fisubrl
adc
ret
test
push
int
xor
jb
sub
nop
adc
mov
loopne
rorl
and
stos
jne
add
shl
aas
sbb
movsb
lcall
outsl
mov
inc
mov
dec
push
push
rorl
cltd
loope
inc
loop
adc
out
mov
dec
or
in
jle
inc
mov
sahf
and
mov
xor
xchg
jo
bound
shl
pop
push
insb
sub
and
mov
aas
xlat
shll
dec
pop
shrb
inc
mov
lret
inc
xor
or
sbb
jnp
add
inc
call
sbbb
mov
sub
inc
clc
adc
sub
cld
jb
pop
xor
xchg
test
sub
dec
or
mov
scas
dec
cwtl
pop
adc
mov
nop
pop
add
hlt
jnp
shlb
jle
dec
dec
and
adc
add
mov
je
xchg
test
and
add
outsl
inc
test
lahf
ret
sbb
iret
adc
ja
push
jp
lock
movsb
inc
in
sub
xor
pop
mov
rcl
cld
pop
cs
je
cmpsb
xor
es
fsubs
movsl
stc
clc
cwtl
or
scas
fxtract
cld
fs
and
cmp
shlb
mov
mov
jg
and
pop
or
mov
dec
outsl
loopne
and
adc
cmp
mov
inc
push
mov
aaa
jb
mov
mov
je
pop
inc
xchg
lcall
or
mov
mov
clc
add
lret
push
test
xchg
in
in
pop
pop
test
enter
cmp
loop
ljmp
mov
shlb
pop
int3
inc
cmp
jo
sbb
adcl
repnz
mov
xchg
jl
sbbl
push
cmpsl
stos
mov
cli
mov
push
dec
add
ret
mov
mov
sub
cmp
xor
lea
mov
scas
insb
xchg
mov
pop
les
adc
add
cli
or
push
pop
or
inc
or
or
js
push
or
test
jo
or
adc
bound
or
add
add
aad
stc
ja
xor
sbb
aaa
sbb
mov
cmp
lods
xchg
jmp
or
jno
mov
mov
or
daa
or
imul
or
cmp
and
and
test
pop
xor
dec
pop
adc
adc
or
sbb
sbb
or
sbb
rcrb
movsb
xchg
leave
dec
mov
xor
cwtl
xchg
or
rcrl
es
adc
pop
lods
sbb
int
mov
sbb
xor
or
jbe
mov
icebp
sbb
push
iret
or
rclb
pop
pop
adc
xor
sbbb
sub
or
test
mov
sbb
mov
and
and
jg
sub
and
leave
cs
or
int
lret
adc
scas
xor
jmp
push
jmp
and
les
sbb
sbb
andl
or
add
add
add
add
xor
push
or
or
dec
pushf
sbb
fnstcw
pop
scas
adc
sub
dec
shlb
add
sub
in
dec
loopne
fs
sbb
scas
testl
leave
lcall
mov
jmp
xor
cmpsl
xor
dec
jl
push
clc
scas
and
sbb
or
mov
or
test
jmp
and
sbb
js
or
cmpb
enter
mov
adc
inc
ds
mov
push
adc
inc
leave
push
inc
inc
jle
movsb
repz
les
ret
mov
jmp
movsb
xor
nop
add
stc
dec
aaa
movsb
or
cwtl
lea
or
cmp
jo
xchg
jo
add
dec
jns
cmp
loopne
xor
xchg
cmp
mov
nop
sbb
jl
out
adc
mov
sub
mov
add
dec
lods
mov
mov
add
xchg
into
sub
pop
outsl
cmp
xchg
xchg
xor
pop
addr16
xor
mov
mov
push
mov
pop
pop
and
aaa
mov
adc
inc
fwait
add
lods
test
inc
cltd
insl
push
mov
sahf
xor
and
xor
sub
sbb
jae
mov
sbb
js
insl
mov
cli
pop
adcb
fsubrl
cmp
push
sub
adc
aas
hlt
cmp
idivb
pop
add
push
add
out
xor
push
lds
cmp
or
sbb
xor
enter
push
cmp
jae
fwait
add
push
sbb
mov
xor
repnz
pop
fbstp
ljmp
push
shlb
or
fistl
shll
mov
idivl
leave
gs
and
add
aaa
or
push
cld
push
scas
pop
cmp
movsl
nop
sub
in
push
or
and
add
mov
cli
and
xchg
cwtl
xor
lret
sbb
fsubl
jmp
cmp
sbb
mov
adc
and
jnp
jb
mov
mov
shlb
bnd
add
nop
adc
shrb
sbb
sub
idiv
std
push
cmp
imul
ss
pop
cmp
xchg
jnp
jo
movsl
inc
and
enter
and
icebp
fwait
out
hlt
mov
int3
adc
xor
cmp
pop
sbb
addb
popf
enter
lds
jmp
dec
lret
repnz
mov
mov
inc
mov
dec
sarb
inc
pop
fcoml
pusha
add
sub
add
sbb
cmpsl
cmpb
fxch
dec
cld
cmp
sub
sbb
lock
mov
sbb
add
or
outsl
cmp
movl
cwtl
sbb
jp
sub
push
xchg
sarl
dec
adc
mov
inc
orl
push
pop
std
jge
mov
sbb
pop
push
add
test
sub
std
jp
jb
jo
fwait
cmp
fimuls
xor
sbb
lahf
and
pop
push
pushf
je
xor
loopne
add
mov
mov
push
and
cmp
sbb
nop
inc
lods
xor
sahf
sub
push
mov
ds
sub
lahf
test
nop
mov
xchg
addr16
loopne
dec
inc
push
dec
loopne
je
xchg
pushf
push
sbb
add
data16
pop
ret
or
aam
adc
and
mov
enter
adc
sub
or
lock
popf
arpl
xchg
pop
push
cmpb
mov
lds
cmp
add
enter
cmpsl
fisttps
sub
mov
mov
dec
inc
insb
sub
popf
stos
cwtl
add
inc
rolb
jae
add
inc
stos
sbb
sti
or
or
shlb
dec
cwtl
jno
dec
hlt
adc
inc
jns
pop
xchg
sahf
addr16
and
arpl
lret
sub
loopne
xor
mov
and
popa
inc
add
or
push
push
les
lret
adc
and
push
lock
pop
lret
xchg
mov
je
arpl
mov
push
movsb
les
and
add
push
inc
dec
inc
cwtl
enter
imull
or
mov
mov
push
mov
cwtl
dec
sub
cld
push
xor
adc
and
int3
lock
sub
rcrl
test
add
loop
cmp
loope
xor
dec
mov
sub
add
faddl
cwtl
push
sbb
jp
inc
dec
xchg
and
mov
pop
mov
jne
js
and
bound
dec
les
clc
add
push
fsubrl
dec
mov
cmp
xor
shll
jo
ret
and
popf
addb
adc
les
mov
cmc
push
push
mov
pop
cmp
sbb
repz
sti
adc
xchg
inc
test
inc
and
scas
or
int
shlb
cmp
dec
or
or
push
stos
rorl
adc
lea
adc
cwtl
add
sub
in
addl
mov
mov
xor
andb
push
cltd
pop
jp
adc
aad
or
imul
add
in
mov
mov
movsl
add
int
shr
scas
cli
std
push
add
inc
arpl
lret
xchg
fcoml
sbb
ret
add
std
ds
inc
and
and
mov
cmp
std
es
rorb
sbb
cmc
inc
cli
sbb
and
pop
testl
fwait
mov
mov
fxch
cli
bound
fs
adc
inc
pop
mov
pop
pusha
push
sub
mov
xchg
aaa
jo
insl
mov
sub
adc
adc
jnp
and
dec
ds
dec
sbb
mov
mov
dec
add
clc
adc
insb
movsb
adc
adc
movsl
add
iret
pop
es
ret
shlb
fcomps
fcoms
rcrl
dec
push
pop
inc
ret
mov
adc
push
xchg
and
sub
push
xchg
pusha
mov
pusha
xor
out
lock
mov
and
and
xor
mov
push
out
adc
rcrl
and
xchg
mov
add
lods
xor
jae
sbb
sbb
ljmp
sbb
xchg
and
add
hlt
xchg
filds
xor
push
mov
cmp
dec
mov
test
or
popa
and
test
mov
inc
or
sbb
xor
and
inc
sub
jmp
add
mov
mov
sub
pop
aam
xor
lock
mul
cltd
dec
pop
pop
andl
inc
cld
shll
pop
shlb
decb
jp
add
in
ficoms
pushf
movsb
dec
addr16
cmp
mov
or
sbb
push
test
dec
push
dec
shrb
ret
loopne
push
fwait
dec
jo
sub
inc
or
lock
push
repz
or
adc
or
or
ss
into
or
adc
jae
test
cmp
test
out
mov
mov
mov
in
sbbb
push
call
adc
xchg
dec
adcb
add
mov
sbb
jecxz
pop
inc
addr16
sub
fcomps
sti
jnp
lret
movsb
and
push
add
aaa
mov
in
lock
or
pop
add
or
pop
fwait
cmpsb
test
out
xchg
and
cmpl
add
popa
pmuludq
mov
push
cld
add
xor
and
enter
and
push
call
mov
inc
cwtl
lcall
jle
ds
repz
push
mov
fwait
pop
pushf
or
mov
les
int3
inc
loopne
add
mov
inc
es
sub
adc
ror
jb
int3
push
inc
sbb
inc
add
dec
pop
and
into
xor
rorb
push
std
add
dec
sub
add
fstl
mov
and
rolb
lds
shlb
aaa
iret
ret
std
fs
mov
xor
enter
rolb
and
cltd
ret
pop
dec
xor
adc
in
lcall
add
jo
adc
ss
aam
movsb
ret
sahf
outsl
insb
pop
mov
cmp
add
leave
je
add
xchg
and
cltd
int
pop
jl
loopne
je
call
push
into
xor
and
xchg
mov
cmp
push
sub
and
js
adc
jp
pusha
or
out
loopne
mov
xchg
lahf
dec
test
mov
sbbb
or
sbb
push
clc
cmp
lret
mov
sbb
pop
inc
inc
xchg
faddl
push
fmuls
cmp
xchg
mov
sbb
lahf
cwtl
insb
pop
test
cld
push
test
mov
and
cmp
sub
push
test
sahf
push
mov
and
popa
mov
imul
pop
mov
fldt
adc
inc
cmp
fwait
pop
test
xor
imull
adc
add
leave
pop
cwtl
pusha
pushf
test
and
gs
mov
pushf
jle
push
push
ret
push
xor
ret
sahf
shl
loopne
mov
fwait
add
shl
pop
test
mov
push
lods
adc
add
fdivl
and
imul
adc
and
xor
mov
mov
cmp
cltd
call
xor
mov
mov
and
ret
pop
std
inc
cmp
enter
test
xor
cmp
fisttpl
shlb
test
and
mov
xor
pop
inc
push
into
call
out
bound
jo
mov
js
push
xchg
sub
lock
cwtl
sbb
sub
jns
add
ret
and
sbb
ficomps
cmp
in
sub
push
sub
loopne
pop
inc
and
sbb
push
push
sub
add
jle
xchg
rep
js
dec
fwait
mov
pop
fisttpl
inc
fdivl
aas
popf
movsb
pop
lds
fcmovne
frstor
or
sahf
repz
push
sbb
jae
nop
dec
pop
pushf
pop
push
xor
sarl
and
bnd
rcrb
pop
data16
mov
add
sbb
lods
lock
adc
das
sbb
mov
pop
ret
or
and
dec
aaa
enter
scas
add
out
test
test
push
push
pop
inc
cmp
sar
jecxz
stos
adc
mov
xchg
sbb
aam
xchg
mov
cld
pop
cli
test
popa
adc
add
fwait
xchg
xor
adc
lret
out
pop
and
add
xor
sbb
add
xor
test
add
subb
add
lock
and
inc
ret
cmp
pushf
iret
cmp
add
mov
or
or
adc
mov
xchg
shrb
push
sbb
les
mov
shrd
jge
adc
orb
adc
popa
scas
push
test
inc
arpl
push
jno
mov
sahf
imul
and
sub
sub
xor
pcmpgtd
ret
stos
xchg
sbb
mov
mov
mov
and
sbb
test
sbb
mov
xor
xorl
fs
or
enter
xorl
das
push
outsl
cmpsb
or
dec
sbb
dec
fs
add
and
pop
lret
add
mov
xchg
fcoml
adc
mov
or
xorb
cmp
les
out
rorb
loop
mov
cs
rcrb
mov
popf
lods
cwtl
fs
sbb
or
jmp
mov
sahf
cs
fs
mov
xor
lock
nop
faddp
and
add
push
sbb
push
add
loopne
movsl
push
add
mov
jp
test
sbb
addr16
cmp
ret
iret
and
in
mov
adc
ja
mov
mov
xor
mov
pop
sub
xchg
or
sbb
ret
cmpsl
sub
xchg
jno
es
push
stos
std
sub
and
or
dec
sbbb
iret
add
jns
cwtl
int3
mov
jmp
nop
push
into
add
xor
dec
sbb
test
nop
lods
sahf
rcr
push
add
movl
sahf
jl
xchg
and
push
sub
add
lea
arpl
sub
sbb
sub
inc
cld
sub
adc
xchg
pushf
inc
pushf
js
dec
testl
and
xchg
add
ds
cmp
push
mov
inc
pushf
pushf
inc
sbb
sub
sbb
movsl
movsb
xor
and
push
pushf
ds
ss
and
call
cwtl
lods
mov
test
mov
cmpsl
mov
imul
xorl
or
outsb
add
adc
enter
inc
scas
push
and
rclb
aaa
pop
dec
and
movsb
movsb
iret
sub
repz
fcomps
xor
add
cmp
loopne
mov
mov
and
xchg
sbb
orb
mov
insl
push
mov
cli
lcall
mov
mov
repnz
cld
xor
ja
sub
int3
fxtract
mov
cmp
jle
push
or
decl
sbb
icebp
push
rcrb
sub
or
sbb
fs
add
pop
push
sbb
and
jns
push
add
das
fwait
push
outsb
test
push
pop
and
and
adc
or
add
sahf
or
cwtl
and
hlt
repnz
adc
mov
xchg
xchg
dec
and
repnz
pop
adc
mov
sub
mov
sbb
jl
nop
adc
dec
fisubrl
pop
enter
jmp
and
idivl
push
push
xor
mov
stos
mov
lds
push
aam
sbb
clc
movsb
adc
cli
push
adc
sahf
leave
loope
mov
pop
test
sahf
gs
call
loope
or
orl
sbbb
mov
jnp
fwait
rclb
stc
fidivs
xchg
das
cmc
sub
mov
out
subb
shl
mov
xor
mov
or
sar
add
pop
push
jno
dec
sbb
fstl
push
in
fisubl
cli
sbb
pop
ret
daa
add
adc
adc
in
dec
xchg
pop
or
fidivrl
outsl
hlt
jae
cs
pop
dec
fwait
mov
add
push
and
adc
loopne
jp
pusha
dec
push
mov
nop
mov
push
fcoml
bound
sub
or
aam
popl
in
add
je
xor
sub
insb
pop
mov
cli
hlt
std
pop
mov
or
movsb
shlb
jge
xchg
jp
mov
push
pop
mov
lret
sbb
cmp
mov
add
adc
shlb
insb
inc
add
ss
dec
cmp
xor
jae
or
aas
add
paddd
lods
les
sbb
icebp
dec
sub
adc
fimuls
push
mov
das
xchg
mulb
adc
sub
sub
adc
adc
inc
je
cs
cmp
cmp
pop
xchg
inc
mov
sahf
xor
fnstsw
lret
enter
and
cmp
cli
pop
dec
ret
in
fwait
cmp
jo
or
imul
xchg
inc
add
or
jbe
and
je
jo
insb
sahf
mov
out
cld
dec
pop
add
mov
pop
repz
cmp
cmp
sahf
pslld
stos
std
mov
jmp
sub
fwait
subb
xchg
sub
rolb
outsl
adc
dec
add
test
aas
xchg
addl
lock
call
pop
int3
shrd
sbb
es
sub
movl
xor
push
inc
and
xchg
pop
mov
dec
daa
cmp
pop
sub
subl
out
xor
fwait
testb
test
daa
sub
rcr
sub
push
fiadds
cld
data16
rorl
xchg
cmp
pop
dec
test
test
add
sub
inc
add
xor
inc
scas
ds
or
push
test
sar
adc
lods
xchg
test
in
sub
xchg
add
xor
in
loopne
test
test
out
sbb
add
adc
xchg
add
arpl
aaa
pop
stos
mov
push
shrd
les
pop
loopne
xlat
jns
lret
sbb
sbb
loopne
sbb
xor
test
jb
add
lcall
dec
add
or
cmp
and
push
sbb
push
mov
xchg
lahf
mov
pusha
sub
int
lods
mov
js
push
cmp
jbe
xchg
jl
jae
mov
mov
and
mov
pop
or
add
test
fwait
dec
add
adc
clc
sbb
loopne
imul
movsl
fstl
mov
nop
pusha
dec
ret
test
cmpsb
filds
scas
sahf
jo
shl
inc
dec
ret
les
jmp
jl
stos
add
jnp
aas
xchg
and
jmp
pushf
sbb
jb
shlb
jo
lock
xor
and
xchg
out
popa
cwtl
adcb
mov
aas
rorb
or
call
add
out
lds
mov
push
cmp
ja
inc
add
inc
add
inc
stos
lods
push
in
adc
sbb
or
mulb
mov
dec
ss
fldt
adc
jno
sub
add
pop
hlt
mov
jg
add
arpl
call
pop
mov
xor
sub
dec
iret
mov
popa
mov
pusha
clc
and
xchg
lahf
movsb
inc
and
movb
or
ret
ret
sbb
mov
and
xchg
sbb
adc
inc
push
cmp
jp,pn
loopne
ljmp
add
ds
ds
loopne
add
xchg
das
shl
xor
ret
or
adc
stc
xor
outsl
add
loop
sahf
movsl
enter
fs
pop
mov
aas
and
xchg
leave
fadd
sbb
push
mov
add
adc
xor
ds
lcall
into
adc
xor
stc
enter
daa
jge
adc
pop
lret
rolb
shrb
add
popa
arpl
jnp
and
jl
hlt
sub
sub
sub
pushf
jmp
pushf
pusha
inc
ret
rolb
push
and
mov
add
cli
pop
hlt
imul
mov
push
pop
es
push
xor
je
fldl
dec
sub
test
inc
dec
pop
pop
aaa
iret
fistps
in
cmpsb
ds
mov
test
jg
adc
add
loope
sub
jl
xorb
jbe
push
aas
push
lcall
andb
call
add
or
cmpsb
cmpb
inc
sbb
std
cmp
dec
lahf
and
hlt
adc
push
jne
and
sub
xor
adc
mov
inc
jg
das
pop
popf
test
push
or
call
lret
mov
out
fiadds
fadds
and
test
jno
add
lcall
subb
mov
fisubrs
and
pusha
lock
sahf
and
pop
loopne
add
xlat
sbb
cmp
mov
xchg
in
xchg
ljmp
sub
mov
add
fwait
add
call
and
shrb
mov
lea
fwait
inc
fnstcw
movsb
push
xor
lods
push
int
sahf
and
in
push
mov
mov
rclb
adcb
add
cli
pop
je
add
xchg
push
aad
add
cld
pop
or
sahf
pop
or
mov
pop
mov
adc
filds
dec
movsl
orb
mov
mov
mov
cmc
jecxz
add
xor
mov
adc
xor
sahf
cld
andb
adc
xor
cmp
adc
sbb
dec
adcb
mov
jmp
or
mov
jp
fwait
lds
mov
xorl
aam
ret
rcrb
xchg
add
fistps
mov
sti
cltd
cld
pop
push
aam
inc
adc
inc
je
cmc
out
stc
cwtl
jmp
les
dec
pop
or
sbb
mov
mov
into
mov
les
jae
movsl
out
rcl
push
gs
add
int
ret
scas
je
or
xchg
mov
adc
mov
cwtl
mov
int3
xor
or
aas
inc
add
addb
inc
lods
jle
add
fnstcw
pop
or
push
mov
jnp
stc
test
cmp
adc
xchg
test
jns
sub
shl
lds
adc
push
dec
push
sbb
fnstsw
pop
add
rolb
repnz
xor
dec
outsl
xlat
lea
icebp
sbb
arpl
sti
dec
aam
add
add
shl
sub
ret
jl
mov
sub
nop
aaa
and
mov
nop
pop
or
hlt
popa
rcll
push
cmp
sbb
and
pop
into
js
and
pop
fisttps
inc
sbb
inc
and
or
sarb
test
fucomi
out
ds
fcoml
fwait
and
push
rolb
xchg
js
xor
dec
insb
and
fwait
pop
sub
add
and
or
mov
adc
call
mov
xchg
les
cld
mov
sahf
addl
sbb
push
pushf
aam
jge
rclb
stos
pop
cld
xor
in
fmuls
aaa
add
sbb
std
cmp
adc
sahf
and
out
cmc
andb
rorb
add
aad
jns
and
insb
cli
push
rolb
notb
dec
and
clc
mov
and
fldl
and
cltd
fwait
xor
mov
cwtl
add
lcall
dec
push
ret
push
pop
iret
xor
mov
add
sub
xchg
push
ret
inc
mov
xor
lds
and
or
mov
dec
lea
jl
cwtl
mov
add
and
push
subl
add
es
inc
sbb
dec
and
or
loopne
pop
adc
mov
add
lret
fisttpll
mov
loop
fstps
mov
push
mov
sub
xor
xchg
sahf
movsl
add
pop
mov
lds
or
rcrl
xchg
rorb
call
mov
ss
cmpb
xor
ficomps
in
cwtl
push
sbb
addb
push
adcl
pusha
cmp
or
fwait
add
inc
inc
movsb
pop
lea
pop
js
xchg
cltd
dec
loop
int3
mov
int3
adc
shrb
lock
sbb
decb
sbb
mov
pop
mov
jmp
es
add
bound
gs
test
xor
shlb
repnz
lcall
subb
mov
negb
add
mov
iret
movsl
mov
clc
cmp
xchg
lret
inc
rcl
test
and
popa
cmp
fs
adc
sub
mov
test
lock
sbb
pushf
jne
es
push
mov
jp
mov
lock
fs
ss
fsubrs
cmpb
ficoms
mov
sbb
shlb
in
add
daa
fwait
jno
mov
fstl
push
or
xchg
xchg
jp
jo
arpl
sahf
test
jle
cwtl
sbb
test
pop
xchg
arpl
stos
mov
add
xchg
fsts
js
or
bound
fwait
pusha
rol
or
xor
hlt
je
sbb
adc
add
rolb
aas
add
and
and
push
dec
imul
hlt
sbb
aad
rolb
pop
je
invd
sbb
dec
mov
mov
fcomps
ret
das
fnstsw
pushf
cmp
stc
stos
es
and
rol
icebp
adc
insl
sahf
fcoms
cld
sub
xchg
aam
popf
sbb
js
mov
mov
js
movb
mov
inc
xor
or
adc
ds
add
das
in
pop
mov
repnz
xor
incb
add
bound
pusha
std
rorb
push
cmpsl
lods
mov
push
jecxz
lahf
jle
add
dec
jg
lds
subb
push
inc
xor
popw
push
lcall
mov
cmp
adc
data16
testb
jo
mov
daa
fisubrl
add
pop
mov
es
mov
add
aad
inc
cli
pop
or
mov
xor
lcall
fwait
sbb
push
push
cmp
addb
dec
int
mov
pop
mov
sahf
stos
adc
sbbb
xchg
add
sub
and
xchg
jno
sub
loopne
pop
add
leave
icebp
jge
xchg
insb
mov
mov
and
mov
ret
rcrl
movsl
inc
mov
mov
mov
enter
add
inc
sbbl
in
std
pop
fwait
cmp
xor
add
andb
cmp
inc
cltd
shl
ret
jae
rcl
aam
sbb
mov
lahf
add
leave
nop
and
add
push
or
insb
sub
pop
ja
xor
add
lds
adc
outsl
rorl
insb
inc
jmp
pop
add
push
adc
mov
in
sahf
jmp
enter
add
sub
pop
or
push
push
stos
subb
jecxz
in
mov
loopne
cltd
mov
es
dec
mov
in
loop
lods
shlb
fsts
cltd
mov
mov
lds
int
fdivl
add
hlt
jmp
cmc
push
loop
or
inc
lds
mov
imul
ds
jmp
psllw
fs
enter
xor
cli
sarb
test
mov
loope
push
lret
cli
ss
or
sub
lds
mull
bound
loope
add
dec
add
push
std
scas
jne
mov
inc
inc
xor
xor
mov
fldenv
adc
dec
cmp
jno
pusha
rcrb
aam
test
adc
add
pop
mov
add
imul
add
mov
dec
mov
push
inc
loopne
and
stos
lret
es
pop
loop
test
nop
insb
mov
in
out
lock
movsb
mov
inc
pop
xor
rcrb
push
adc
xchg
inc
ret
int
movsb
pop
mov
adc
add
rorl
test
push
or
in
mov
shll
cs
jle
push
jno
stc
add
mov
loopne
popa
clc
xchg
adc
lret
rcrl
jg
bound
leave
fs
out
loop
insb
faddl
and
sub
clc
jo
es
push
and
js
mov
inc
push
cmp
sbb
pop
das
ljmp
mov
fsubrl
cmp
addb
lods
jmp
pmaddwd
pop
shll
inc
enter
mov
inc
es
sub
adc
or
or
test
pop
add
lret
testb
add
adc
rolb
pop
xor
cwtl
js
fadds
pusha
xchg
lret
and
rorl
addr16
imul
or
pop
outsl
pop
nop
pop
ret
inc
xorl
mov
call
pop
cmp
andb
sar
cmp
add
xor
inc
push
push
hlt
and
pop
sbb
pop
xor
adc
nop
pop
and
paddq
aaa
xor
icebp
nop
lret
mov
xor
xor
fdivrl
inc
shll
into
imul
push
push
inc
and
into
cli
enter
mov
add
sti
pushf
cmpb
pop
lods
push
and
push
and
xchg
in
mov
sub
rcr
hlt
xor
rcr
lea
or
inc
jne
mov
pop
jp
loopne
or
cmp
das
stos
or
iret
push
mov
xchg
insb
push
hlt
daa
cltd
mov
out
lds
mov
push
nop
imul
pop
push
jl
test
faddl
sbbb
andb
and
addb
xlat
addb
movsl
add
mov
add
out
push
je
lret
jmp
imul
and
fsubrl
push
mov
pop
aaa
stc
sbb
push
mov
jg
pop
ja
orb
xor
int3
xor
ret
out
shr
push
jle
inc
ds
or
test
mov
cmp
bound
addl
adc
xchg
std
xchg
aam
xor
xor
test
jg
or
cmpl
stc
cs
loop
xor
sub
mov
adc
mov
add
and
pop
inc
shr
cmp
jl
inc
inc
and
dec
enter
inc
stc
mov
cmp
lods
icebp
sbb
hlt
test
push
mov
mov
cmp
stos
pusha
mov
fdivs
mov
dec
dec
add
test
hlt
nop
inc
push
scas
addb
cmpsl
ss
jnp
cmc
push
pop
xor
popa
rorl
sub
sub
popa
ret
pusha
clc
sub
sbbb
add
js
lahf
jbe
jle
stos
js
nop
cwtl
jge
and
sub
add
xor
es
loopne
push
in
xor
cmp
roll
test
mov
xor
icebp
jae
pop
enter
inc
mov
pop
ja
cmp
daa
into
add
ds
jg
arpl
adc
xor
mov
add
push
sub
cmp
and
or
or
outsw
enter
push
enter
add
loop
stos
xchg
or
dec
mov
fdivrs
nop
jl
inc
pusha
inc
mov
mov
dec
mov
bound
movsl
leave
and
adc
adc
scas
push
xchg
xchg
jns
rcll
movsb
stos
test
ficoms
lods
sub
test
add
or
dec
enter
jl
cwtl
test
lock
adcl
dec
jbe
hlt
jo
out
mov
xchg
sbb
lret
inc
stos
fistps
push
cmp
cld
push
push
and
bound
sbb
je
xor
push
pop
pop
pop
add
jg
and
shrl
add
add
outsb
int3
and
cld
pause
mov
addb
enter
or
lock
mov
test
push
movsl
mov
popf
mov
jp
add
mov
pop
mov
xor
xor
push
jle
xchg
push
push
mov
sbb
adc
push
scas
jb
push
sub
and
push
sbb
sub
xor
mov
push
cli
mov
xor
dec
gs
test
hlt
pop
nopl
addb
and
repz
aaa
mov
movsb
push
or
push
adc
aam
aam
push
mov
or
adc
ficoms
aaa
push
cs
or
pop
add
mov
jb
cmp
ljmp
and
xor
imul
icebp
sub
mov
pop
clc
faddl
xor
std
mov
ficomps
pop
pop
ljmp
inc
cwtl
sub
fisttpl
es
jle
pushf
or
imul
shll
in
push
les
in
ljmp
ret
mov
push
mov
lret
loop
inc
mov
sub
icebp
test
push
push
pop
and
test
or
push
xor
push
ljmp
and
mov
push
ljmp
cmpsl
rclb
jne
test
pop
test
nop
imul
popf
aad
sub
jns
xor
sbb
add
push
loopne
pop
imul
aad
insb
insl
xor
mov
pop
dec
mov
jmp
push
add
xor
hlt
scas
xchg
rcrl
add
cmpl
and
jae
mov
jmp
cmp
push
cwtl
and
outsl
jge
inc
js
jl
pop
orl
shlb
mov
negl
out
addl
ret
ffreep
mov
insb
inc
addr16
movl
jmp
mov
sub
inc
std
std
mov
jmp
clc
aam
adc
and
push
pop
sub
jmp
fstpl
call
jl
or
sub
xor
jmp
add
aam
jmp
jg
push
pop
cmp
mov
jne
aam
add
mov
push
cld
sub
rcrl
test
call
adcb
sbb
rorl
shll
int3
adc
into
pop
in
add
mov
fcomp
stc
iret
or
test
jecxz
mov
mov
shr
jmp
clc
cmp
cmp
or
xchg
add
push
push
loopne
mov
jmp
add
jle
inc
mov
or
int
in
or
or
mov
adc
outsl
sub
lret
or
push
fisubrl
mov
xchg
not
out
loop
dec
lds
or
andl
call
push
in
aad
jmp
sub
adc
dec
or
sbb
pushl
push
insb
push
loopne
inc
fstl
cld
cbtw
ret
adc
ficompl
rolb
out
push
ja
and
mov
jg
push
addr16
jmp
es
push
mov
sub
pop
or
sbb
shl
push
push
push
mov
mov
jecxz
and
add
ljmp
fwait
call
and
adc
add
pop
xor
or
pop
mov
jmp
not
dec
rolb
loop
mov
andl
xor
xlat
pushf
jmp
cltd
pop
lret
or
pop
ljmp
ds
jmp
sub
aas
std
addb
pop
cltd
push
cwtl
mov
push
pushf
inc
inc
cmp
push
imull
adc
jmp
loope
aad
and
mov
sub
mov
add
pop
pop
push
jmp
enter
dec
in
push
dec
cmp
popa
or
je
cmp
int
or
push
movzbl
adc
lahf
adc
push
jl
pop
imul
push
inc
or
xor
test
or
loop
dec
dec
fwait
add
pusha
sub
insb
and
jmp
and
inc
adcb
lock
dec
mov
dec
es
and
mov
cmc
mov
xor
loope
mov
cmc
xor
xor
in
clc
dec
into
test
movswl
je
or
adc
adc
mov
add
aas
push
pop
sub
scas
lock
cmp
jb
adc
push
jb
and
mull
movsl
jl
or
scas
or
adc
and
arpl
xor
pop
mov
jae
push
xor
fisubrl
mov
gs
in
jmp
ret
cli
pop
dec
add
mov
dec
adc
loope
xchg
jns
pop
out
cmp
movsb
loop
cmp
xor
sub
testl
fimull
add
dec
shlb
pop
scas
pop
sbb
jmp
subl
push
repnz
push
pop
push
adc
push
push
or
xchg
add
xchg
mov
outsl
or
add
push
scas
pop
dec
sbb
pop
shr
inc
fwait
lea
enter
orl
xor
dec
rcrl
push
mov
add
dec
cmp
cmpsl
and
insb
mov
rcr
lret
gs
sbb
mov
imul
cwtl
inc
sbb
pop
rol
dec
sub
inc
mov
xchg
add
fsubrs
dec
sbb
or
xchg
lock
add
xchg
cmpsb
scas
bnd
mov
inc
xor
jmp
ds
dec
jge
bound
mov
mov
xor
or
xlat
sahf
nop
lds
dec
xor
mov
dec
sub
push
popf
add
adc
or
cmp
inc
mov
or
dec
mov
dec
sub
cwtl
andb
int
add
pop
lds
pop
pop
lock
repnz
mov
fmull
jmp
std
sbb
xor
dec
inc
sti
add
and
sub
pop
mov
roll
in
jl
dec
jmp
adc
cmc
add
shl
or
add
movsb
test
pop
xchg
scas
scas
test
pop
testl
popf
dec
loop
mov
xor
push
popa
xor
cmc
pusha
jo
into
in
cmp
idivb
cmp
sub
lcall
mov
leave
or
jmp
fisubl
xor
out
jp
cmp
pop
add
push
mov
cs
or
ret
jae
mov
lcall
and
pop
inc
pushf
test
repnz
inc
dec
add
sub
adc
mov
out
pop
nop
out
add
or
inc
cltd
or
or
inc
sbb
push
inc
orl
enter
fs
inc
cmp
sbb
fnsave
and
mov
sbb
push
sub
mov
adc
fisubrl
mov
popa
add
call
jmp
add
pop
xor
dec
mov
sub
movsl
sbb
mov
aaa
xor
jle
and
lret
adc
subb
loopne
mov
adcb
in
or
subl
push
add
cmp
add
add
inc
pop
sbb
adc
jge
aas
push
insb
pop
or
pop
mov
fldt
popf
aam
sbb
add
loop
or
pop
sub
stos
xor
fiaddl
add
pop
inc
and
es
mov
pop
push
bound
call
mov
cmc
add
sub
pop
pop
inc
add
jg
orb
cmp
rclb
sub
xchg
jo
xlat
add
dec
push
lret
movl
jmp
neg
add
shr
ret
popa
cltd
data16
push
lock
jmp
mov
fstpl
sub
push
sbb
or
mov
or
mov
in
add
and
xchg
sbb
fcoml
inc
push
sub
movl
pop
push
ljmp
stos
aam
xchg
test
add
bound
sub
jle
mov
mov
lock
push
add
dec
sbb
xchg
clc
jl
hlt
pop
testl
rcrl
add
iret
ret
sbb
and
inc
dec
shl
add
pop
mov
sahf
xor
lcall
cmc
addb
insb
push
xchg
push
rorb
push
push
mov
add
cmp
and
out
sti
loopne
vmovupd
shl
pop
fisttpll
xchg
adc
push
inc
cmp
push
stc
mov
push
pop
movsl
outsb
decb
call
adc
movsl
sub
mov
mov
ljmp
cmp
or
add
pop
adcl
jns
incb
out
inc
or
mov
sar
jnp
xor
popf
pop
mov
notb
lock
mov
jne
test
pushf
pop
push
pop
xlat
or
adc
xor
fildl
test
dec
fs
pop
fisttps
out
cmp
aad
push
pop
add
jmp
stc
adc
add
sbb
popa
pop
or
push
loop
arpl
jne
xchg
pop
insl
pop
testl
push
inc
neg
inc
movsb
es
es
push
subl
in
sub
xor
and
push
and
jns
dec
call
push
inc
push
push
inc
mov
or
sub
add
or
xor
or
jmp
sbb
repnz
gs
cmpsb
push
adc
pop
or
in
add
xor
and
pusha
hlt
sub
mov
xorb
addr16
inc
add
ljmp
outsl
pusha
dec
rolb
dec
add
add
add
xchg
push
js
loope
ret
add
int
jge
mov
mov
imul
push
out
movsb
imul
pop
cwtl
cmp
cwtl
pop
xchg
xor
adc
pop
push
xchg
and
sbb
add
xchg
sub
pop
pop
push
push
add
lds
push
xor
push
pop
pusha
inc
lret
sbb
dec
sub
xchg
in
repnz
mov
jmp
pop
push
sub
roll
out
pop
push
sub
inc
loopne
sbb
loop
mov
out
adc
sbb
push
cmp
ja
pop
sbb
push
push
adc
insb
adcl
lods
loopne
mov
shl
nop
nop
sub
and
adc
das
cs
push
push
test
pushf
fldcw
xor
js
pop
aaa
dec
xchg
adc
orl
mov
stos
shr
addb
push
dec
mov
add
xor
sbb
popf
sbb
call
adc
push
std
aam
pop
daa
fs
mov
mov
stos
fcompl
stc
dec
cmpl
push
push
pop
ss
push
cwtl
loopne
pop
cltd
mov
inc
orb
cs
adc
andb
xchg
aam
divb
int
rol
push
xor
pusha
call
xchg
mov
shrb
or
data16
push
cmpsb
add
adc
dec
les
testl
shrl
mov
fsubr
push
xchg
jecxz
sbb
mov
mov
add
inc
movsb
mov
dec
pushf
ja
mov
aam
movsb
adc
adc
add
in
sub
dec
inc
sbb
cld
push
insb
jbe
jmp
out
mov
mov
push
scas
xor
mov
sub
push
out
push
hlt
lods
sbb
sub
outsl
insl
adc
ljmp
cs
push
out
movsb
movsl
dec
pop
add
xor
add
jne
and
fucomi
gs
or
pop
xor
loope
repz
inc
xor
xchg
sbb
enter
add
pusha
ret
xchg
and
or
adc
add
mov
jmp
clc
or
call
pop
push
xor
rcll
jae
dec
and
sti
int
cmp
int
push
shr
sbb
jbe
pusha
jmp
push
mov
ror
sub
movsl
out
inc
jp
and
cmp
cmpsb
aaa
sbb
mov
add
pop
orb
jmp
iret
orb
mov
mov
test
mov
push
adc
mov
shl
cs
cmc
adc
add
jmp
push
push
ljmp
xchg
cmp
pop
psllq
int3
cld
push
cmp
ret
jb
ds
mov
and
pop
cmp
jl
pop
jmp
jmp
neg
jno
and
fadds
pop
sub
jmp
int
push
sti
mov
and
or
je
pushl
push
jmp
or
addb
push
sub
incl
data16
jmp
or
jmp
stos
ljmp
pop
xor
iret
xchg
icebp
push
inc
sbb
xor
or
lret
das
jo
imul
sti
pusha
adc
sub
pop
or
and
mov
add
xor
daa
in
icebp
nop
fildl
ljmp
and
lfs
mov
jp
sahf
push
push
or
xor
aaa
adc
shlb
lds
sub
xor
sub
pop
mov
pop
addb
shll
xchg
arpl
or
xchg
stos
push
cmpsl
dec
dec
sub
or
stos
jmp
xchg
xchg
cli
repnz
popf
xchg
ret
mov
sub
adc
pop
xor
fsubs
je
adc
inc
xchg
xor
add
popa
out
push
jmp
out
jg
cmp
add
adc
pop
iret
icebp
call
jmp
cmp
outsb
add
clc
xchg
repz
neg
add
sbb
mov
pop
push
mov
cmp
popa
xor
add
cmpsb
add
xor
dec
ret
lds
movsb
cmc
or
push
out
test
and
test
fsubs
add
mov
add
mov
std
pop
mov
mov
adc
add
sarb
pop
andl
inc
sbb
lods
jg
push
and
mov
or
psrld
gs
in
mov
push
daa
push
sysret
jbe
fbstp
out
es
or
aad
push
push
pop
pop
sbb
std
inc
movsb
movsl
leave
add
hlt
mov
inc
not
cmpb
jecxz
lock
rolb
add
pop
adc
cmp
mov
callw
and
push
repz
mov
pusha
int3
xchg
mov
xor
push
nop
mov
xchg
lcall
rolb
ljmp
cwtl
pop
pop
movsb
les
pushf
jecxz
sar
sbb
cmp
iret
test
pop
in
adc
push
repnz
in
lock
lret
nop
movsb
mov
aas
dec
dec
and
imul
pop
add
pusha
aas
pop
pop
xor
jae
sbb
test
loop
push
test
test
shr
xchg
and
mov
das
jl
sub
mov
outsl
and
pop
addl
arpl
cltd
jns
lods
xchg
call
sbb
pop
adc
sbb
std
xchg
dec
and
xor
inc
xorb
inc
xlat
mov
sahf
sarl
push
mov
inc
add
insl
es
xchg
push
or
mov
dec
pop
ret
shr
subb
clc
add
mov
insb
subb
push
jb
das
pop
and
or
call
outsl
das
pop
mov
cmp
add
not
push
push
pop
call
mov
jecxz
xchg
daa
jmp
insb
push
xchg
xchg
or
insl
aam
psrlw
fisttps
out
or
int3
cmpsl
xchg
mov
roll
push
push
sub
mov
rolb
add
hlt
and
xchg
or
shrb
inc
pop
in
sbb
and
add
mov
insb
inc
or
xor
fdiv
jno
xchg
pop
or
mov
shll
mov
mov
pop
cwtl
mov
xchg
add
and
dec
roll
mov
sbb
jno
push
pop
add
push
leave
jo
and
mov
and
cmc
inc
test
imul
stos
and
js
xchg
lock
inc
inc
xlat
or
test
jg
arpl
rcll
jg
xor
sub
pop
jp
jle
mov
adc
xchg
out
lds
popf
mov
mov
inc
mov
cmp
aas
or
leave
mov
pop
or
adc
rcl
push
xchg
sbb
jmp
imul
sbb
aaa
or
jmp
cmp
aas
or
sub
or
push
mov
add
in
pushf
or
pop
sub
xor
or
mov
aad
lds
adc
push
lea
or
and
sbb
push
fadd
andl
add
mov
xchg
mov
push
sbb
jns
sbb
push
outsl
sub
mov
xchg
insb
or
adc
pop
adc
add
xchg
sahf
adc
pop
jge
jle
je
imul
push
sub
pop
test
jmp
rorb
js
nop
and
add
jecxz
rorl
jnp
mov
xchg
loope
popf
cmp
push
neg
pop
pop
dec
pop
pop
adc
ret
jle
add
push
pop
inc
dec
not
cmp
push
mov
and
mov
push
dec
test
movsb
adc
dec
in
push
xorl
sbb
or
adc
dec
pop
gs
push
push
sub
arpl
sar
clc
pop
std
mov
idivl
cmpsl
cmp
or
imulb
and
cltd
mov
push
cmp
and
sbb
push
leave
or
and
mov
clc
add
testb
in
sbb
pop
xchg
pop
push
pop
pop
mov
and
jns
push
out
push
pop
insb
push
jmp
add
pop
cmp
pushf
lock
movsl
cld
xor
cmc
mov
push
hlt
adc
add
sbb
sbb
push
jmp
sbb
inc
ljmp
inc
outsl
xor
stos
push
or
push
mov
sub
inc
jns
mov
xchg
inc
popa
insl
jge
xor
or
push
push
rcll
add
dec
data16
mov
es
dec
shll
xor
jb
loop
pop
aas
xlat
and
pusha
xchg
es
or
mov
pop
or
in
or
fwait
sub
and
mov
or
jbe
movsb
mov
cs
jmp
mov
in
ret
and
sub
xchg
xchg
sbb
sub
subb
add
xor
cwtl
and
jmp
daa
lds
sub
and
and
jnp
add
fs
pop
inc
pop
push
xor
mov
notb
sub
inc
pop
or
sub
test
jg
enter
or
inc
xor
arpl
cmpb
or
loope
pop
sbb
adc
addr16
jl
xor
fsub
and
jns
push
sbb
add
sub
pop
nop
mov
imul
and
add
inc
cmp
das
jmp
pop
lock
push
sub
in
in
mov
or
mov
loope
rcrl
or
mov
add
jle
repz
inc
rolb
pop
pop
jmp
mov
pop
push
adcb
adc
popa
sub
daa
mov
push
add
mov
rcl
fsubs
push
xor
sub
inc
rcrb
mov
push
outsl
rolb
leave
xchg
xlat
xchg
lret
rcrb
jbe
adc
mov
cmp
test
jmp
add
sub
ja
mov
lock
imul
add
and
cmp
mov
add
movsb
repz
or
subb
movl
leave
or
jg
pop
dec
and
push
lods
or
mov
test
dec
sub
iret
pusha
fs
repnz
mov
cmc
outsl
push
mov
xchg
mov
push
mov
mov
add
add
in
jle
jl
dec
daa
jle
ret
or
xchg
ret
cli
mov
pusha
mov
sub
mov
or
mov
sbb
test
xchg
or
pop
inc
and
mov
js
or
pop
adc
sub
jo
loopne
int
xor
call
xchg
jecxz
sub
mov
sbb
clc
xor
xor
popa
mov
imul
push
jo
jmp
fs
mov
or
and
out
adc
sbbl
dec
push
mov
push
lods
adc
int3
clc
scas
aas
jmp
cwtl
jbe
sub
inc
pop
lahf
cli
push
stc
mov
cwtl
pop
push
popa
out
and
fnstsw
repz
add
ds
mov
push
out
or
cs
sbb
cmp
movsb
pop
repz
cmp
fwait
adc
test
fiaddl
dec
gs
aam
test
pop
inc
mov
aad
lods
mov
mov
rcrb
push
dec
pop
pop
js
xchg
shr
sbb
adc
or
jl
clc
add
call
int
add
testb
push
add
cli
pop
xor
int3
ret
ljmp
inc
in
sub
pop
jmp
inc
jecxz
add
std
out
bound
pop
daa
pusha
and
roll
push
or
jne
push
sub
pop
inc
xchg
push
fs
dec
add
pop
fnop
movsl
mov
js
adc
cmpsb
or
mov
je
mov
and
sbb
sbb
mov
cmp
pop
ljmp
pop
js
lds
or
dec
in
push
sub
sub
mov
rcrb
pusha
add
lret
mov
int
and
jne
sub
xlat
outsl
adc
xchg
push
or
xlat
sub
jmp
inc
jns
shl
mov
and
or
add
outsb
shl
repz
iret
mov
test
push
adc
sub
jmp
pusha
movsl
test
push
pushf
ret
scas
ss
add
mov
xor
add
adc
add
xor
pusha
dec
push
xor
xchg
ficomps
xchg
mov
mov
xchg
test
imul
movsl
xchg
xor
lods
or
push
and
dec
cmp
test
push
jno
push
adc
aad
fisubs
cmp
push
mov
push
cwtl
mov
add
mov
mov
cmp
out
pop
cmp
mov
jl
cld
pop
sub
aad
xor
jp
loope
dec
mov
add
and
add
inc
dec
jmp
dec
push
sbb
cmp
sub
fldl
cmpsb
mov
rcl
cmp
sub
jg
mov
pop
js
cld
inc
dec
push
daa
push
test
mov
xor
aam
and
and
js
je
push
mov
adc
arpl
test
cmc
pop
jp
xlat
add
neg
jmp
mov
inc
push
lock
pop
pop
icebp
sbb
fldl
jg
loope
jne
push
orb
mov
gs
shll
inc
and
add
pop
sub
fwait
stos
lcall
push
in
push
xchg
or
mov
es
cmp
push
into
cmp
sub
jmp
mov
ds
or
and
aad
add
push
in
or
push
push
or
mov
leave
add
roll
push
push
fsubrl
push
push
shrl
push
test
or
or
sbb
movsb
cltd
mov
lods
lret
lock
dec
or
aaa
sub
add
add
in
cli
and
or
fsubs
jmp
mov
not
lock
into
xchg
cmc
pop
pop
xorl
or
into
stos
add
sti
mov
imulb
pop
push
in
ret
rcll
dec
add
mov
mov
mov
mov
lock
jmp
and
mov
push
mov
outsl
add
into
mov
pop
xor
lds
mov
dec
shrb
add
mov
in
mov
or
add
sub
mov
pop
rol
es
mov
dec
mov
push
lret
sub
dec
dec
orb
iret
ds
jge
add
ret
and
push
lret
xchg
mov
sbb
add
add
ret
fimull
and
popf
add
daa
stc
and
mov
jo
ret
dec
test
add
das
sub
or
pop
xor
jmp
mov
adcb
pop
inc
jo
jnp
push
in
cmp
fcmovb
out
or
and
pop
xor
push
stos
jmp
or
cmp
in
or
mov
ret
repnz
incl
enter
call
dec
vphsubbw
cmp
add
and
pop
stc
inc
adc
in
mov
loope
mov
inc
popf
adc
push
pop
mov
add
jle
cmp
adc
push
jmp
push
jns
push
mov
push
je
jbe
adc
or
sbb
add
push
xchg
xor
pop
jmp
addb
cmp
pop
add
add
inc
arpl
push
push
pop
jae
dec
xor
cmp
hlt
out
adc
xor
xlat
mov
and
pop
jbe
dec
jl
daa
testl
cmpsb
test
mov
es
mov
mov
add
int
pop
jmp
xor
jmp
pop
xchg
dec
fstl
sbb
xor
lea
pop
and
pop
sub
pusha
fmull
out
movb
fcompl
cmp
sbb
dec
push
xchg
popa
push
hlt
pop
cld
stc
add
or
dec
add
mov
adc
mov
adc
jmp
out
pusha
xchg
inc
les
clc
mov
xchg
cmc
es
push
jmp
jns
cltd
inc
push
int3
fdiv
xor
jmp
out
shll
nop
xlat
xor
inc
adc
add
dec
jns
push
push
lock
push
nop
imul
ret
fwait
fs
add
cmp
inc
xchg
and
sub
add
call
cli
inc
mov
loope
xor
adc
ret
pop
cmp
and
sbb
jmp
mov
movsb
leave
push
push
stc
ret
std
adc
repnz
out
rclb
xchg
push
push
jecxz
lock
popa
lds
dec
mov
je
lock
jecxz
leave
mov
loope
out
rcrb
pop
shl
mov
add
cs
dec
scas
jl
mov
or
mov
shl
cmp
dec
subb
sub
cmp
jmp
arpl
adc
or
pop
push
jmp
imul
or
adc
cmc
pop
clc
imul
push
mov
lds
call
bnd
and
aas
add
ja
fcoml
jle
xor
es
insl
xchg
test
out
mov
cmpsl
mov
or
mov
pop
pop
popf
and
pop
cmp
pop
xchg
dec
pop
adc
fs
mov
push
lea
and
int3
test
ja
add
pop
nop
mov
lods
or
xchg
jmp
ja
das
sub
repz
dec
pop
push
xor
push
mov
lret
sbb
lea
subl
sub
push
mov
sahf
neg
popa
mov
adc
cmp
cmp
fldl
negb
adc
es
enter
cltd
xchg
sub
movsl
mov
jmp
dec
test
or
ret
cmp
push
mov
push
in
add
mov
inc
imul
shll
dec
pop
rorl
mov
add
rcrl
cmp
push
mov
or
cmp
dec
je
cmp
and
imul
lahf
and
dec
jp
insb
in
in
add
bound
insl
xor
or
leave
outsl
and
xchg
or
fadds
jge
jmp
add
mov
sti
pusha
mov
pop
push
push
add
dec
or
pop
mov
in
das
pop
push
add
mov
in
jge
dec
inc
clc
sbb
and
adc
call
clc
fnsetpm(287
call
dec
mov
or
sbb
lret
push
les
push
sub
pop
add
aam
jl
popa
call
and
jg
pop
dec
or
pop
sti
inc
bound
repz
dec
ds
rclb
jmp
sub
jmp
bound
iret
mov
mov
adc
imul
data16
test
adc
insb
nop
inc
xchg
push
pop
pop
sub
aad
adc
and
inc
jl
bound
push
or
push
or
into
push
xchg
sbb
out
clc
jg
jmp
gs
xchg
mov
sub
addl
addl
add
sbb
or
and
add
and
sbb
lret
sbb
and
adc
sti
fisttps
loope
iret
mov
inc
mov
ds
and
add
icebp
ljmp
cld
jp
movsb
mov
imul
lret
hlt
add
lods
pushw
jb
cmp
mov
not
dec
add
mov
ss
push
mov
jg
add
jo
jle
mov
pop
jle
jmp
aas
test
mov
mov
cmpsl
dec
mov
add
push
jmp
mov
sbb
or
xchg
setl
rclb
mov
mov
mov
add
or
jnp
in
shll
push
push
pop
test
xor
pusha
adc
dec
push
mov
or
jle
xchg
data16
in
adc
or
out
pop
inc
jmp
les
iret
scas
xor
sbb
xchg
mov
sub
iret
and
adc
sbb
sbb
rorl
push
pop
jl
pop
adc
leave
call
aam
movsl
push
sub
out
fisubrl
pop
pop
cmp
icebp
pop
mov
js
fstpl
mov
fstpt
ljmp
nop
sti
mov
data16
jmp
fs
bound
shrl
das
lret
pop
sbb
jge
adc
lods
jne
or
scas
rorl
daa
cli
int3
mov
push
mov
clc
adc
imul
adc
pop
xlat
jae
fs
mov
jmp
ret
and
jnp
popa
inc
or
add
mov
xchg
dec
inc
ja
sbb
out
add
into
mull
fimuls
dec
add
mov
addb
aas
pop
sub
sub
add
jmp
mov
add
in
or
jmp
in
inc
jg
or
add
jl
insb
xchg
or
inc
jl
mov
aas
push
aaa
xor
inc
mov
push
cmp
insl
sub
and
mov
push
sub
cli
scas
cmp
fs
out
or
testl
push
xchg
sahf
mov
pop
fldl2t
movsb
push
sbb
sbb
cmc
pop
mov
cmpb
test
mov
call
and
outsb
in
mov
dec
sbb
sbb
add
xchg
test
sub
pop
iret
ljmp
std
mov
sbb
or
pusha
ret
jne
inc
sbb
xchg
lods
push
adc
lret
cli
push
mov
or
jb
jo
xor
push
enter
or
jmp
push
push
pop
notb
cmp
push
jmp
shll
ret
dec
dec
sub
out
mov
or
sbb
sub
push
dec
jg
loopne
or
jmp
push
push
pusha
call
or
jmp
xchg
xchg
mov
int3
adc
sub
pop
cmpb
jl
add
jmp
mov
rcrl
dec
mov
inc
int3
push
out
cwtl
out
nop
test
fildll
fst
mov
pop
ficompl
roll
jo
mov
dec
add
jmp
ljmp
ficoml
inc
or
dec
adc
popa
pop
fisubrs
sub
mov
jne
lods
sldt
outsl
test
mov
sbb
aas
and
adc
jmp
push
repz
scas
add
popa
xor
push
mov
pop
pop
pop
dec
xchg
xchg
lods
jo
lahf
dec
loop
rcrl
push
add
or
test
mov
pop
jp
leave
pop
test
mov
xchg
push
fisubrl
ja
stc
cmpsl
adc
shll
xchg
cmc
sbb
jo
aas
movsl
nop
pop
ds
scas
rcrb
outsb
add
lods
or
or
faddl
adc
sti
adc
and
jl
imul
sarb
sub
pop
testb
in
jg
daa
or
jno
sub
fmull
pop
les
sbb
or
add
xchg
cmp
cmpb
iret
adc
jmp
push
mov
shll
or
or
enter
mov
sbb
ret
pop
sahf
or
dec
pop
pushf
dec
rcl
enter
xchg
xchg
push
mov
sub
ret
rcrl
loope
out
mov
push
inc
leave
and
aaa
mov
pop
push
ss
daa
jmp
rcrl
out
lret
or
popa
out
std
sub
pop
fnsaves
shlb
sub
jl
xor
push
add
jb
mov
lret
jmp
inc
adc
xchg
jns
out
jo
negb
mov
test
sub
nop
xchg
or
xor
adc
push
and
add
mov
shrl
push
xchg
add
mov
cmp
cli
pop
inc
std
push
enter
or
pop
mov
add
out
pop
mov
pop
add
enter
rcll
inc
inc
or
int
sub
insb
pop
lret
jmp
push
push
test
xor
pushf
dec
push
dec
xchg
mov
push
push
adc
pop
push
sub
mov
or
push
dec
ret
cmp
sbb
repnz
faddl
push
push
pop
push
cmpb
ret
add
sar
iret
or
lock
repz
xchg
push
lret
add
mov
inc
and
or
dec
push
fwait
std
or
adc
shlb
test
xchg
adc
clc
mov
add
mov
or
push
mov
mov
mov
sub
sbb
pop
mov
add
dec
test
mov
dec
mov
lods
adc
xlat
lret
cmp
add
lods
inc
sahf
xchg
in
pop
mov
cmp
adc
push
jmp
pop
sub
nop
rolb
xor
sub
and
pop
int3
sti
pop
adc
pop
sbb
or
jmp
xchg
mov
adc
push
and
ljmp
test
test
inc
xor
sahf
xor
imul
mov
in
inc
mov
outsl
sbb
adc
sbb
daa
das
ret
or
jle
dec
nop
and
inc
mov
add
xlat
push
movl
push
dec
mov
or
add
cmp
imul
add
fidivrl
repz
sub
mov
clc
inc
or
inc
add
je
cmpsb
movsl
loop
call
dec
dec
push
sarb
mov
pop
push
jo
cltd
fs
sub
and
mov
lods
sub
inc
push
push
push
inc
dec
and
movsl
gs
repz
add
in
dec
shr
rclb
and
pusha
sbb
jae
cmp
stc
pop
add
insb
jmp
pushf
adc
inc
les
in
in
scas
loopne
dec
push
test
mov
orb
in
std
les
push
xorb
mov
test
adc
leave
dec
lds
sub
insb
or
fcompp
hlt
push
sub
push
fisubs
jg
or
movsb
es
nop
orb
scas
out
fs
lods
in
push
dec
push
push
js
stc
es
xor
dec
push
sub
and
sbb
popf
xchg
and
or
push
xor
or
jmp
dec
rcrb
enter
xor
inc
es
xor
or
cltd
xchg
leave
sub
cmp
rsqrtps
test
sbbl
sbb
pusha
les
and
or
sub
cmp
dec
pushf
enter
mov
push
adc
js
fwait
test
jmp
ficompl
ror
jmp
andb
aad
neg
decb
adcb
sub
pop
mov
dec
jmp
or
and
sub
sbbl
xor
mov
cmp
inc
outsb
cmp
pop
cs
inc
push
cmp
gs
sub
lods
stc
pop
or
shrl
xor
fdivs
jnp
nop
cmpsl
or
scas
inc
pop
test
jb
cmp
push
and
ljmp
pop
cmp
shll
and
xchg
jmp
enter
icebp
ss
ja
and
out
sahf
out
mov
addr16
xor
lret
xor
jae
mov
push
pop
inc
jmp
stos
mov
add
push
push
jb
xor
and
popa
fists
bnd
or
jns
dec
or
aas
sub
scas
push
shll
out
shlb
popa
lret
or
add
test
push
std
and
jbe
or
or
add
add
lea
adc
les
push
pop
repnz
pop
adc
and
js
jge
jmp
inc
xor
pop
ljmp
aad
rcll
pop
add
subb
add
inc
push
mov
cmc
jae
mov
or
jne
lret
fiadds
in
dec
jecxz
jmp
mov
inc
sbb
popa
lea
fsubrp
mov
ret
xlat
scas
imul
add
push
or
cmp
ljmp
divb
lock
in
int3
adc
lods
outsl
push
inc
push
sarl
xchg
push
xchg
xchg
add
cltd
ret
cmp
negl
imul
lret
sahf
or
lahf
push
gs
lods
je
push
push
push
add
das
push
ljmp
sar
add
scas
inc
nop
pop
xchg
xor
mov
mov
bound
cmp
sub
pop
xor
popf
jmp
ja
jge
pop
push
jb
addb
pop
and
fldenv
push
sahf
jp
push
cmp
add
pop
xchg
dec
mov
fstps
pop
adc
push
fs
mov
pop
out
stos
stc
add
call
sbbl
or
inc
xchg
shll
sub
imul
add
pop
add
add
adc
add
xor
cmp
cs
addb
leave
cmpb
and
xor
lret
jns
add
das
push
leave
imul
jmp
mov
adc
xor
adc
aas
ret
add
lds
cmp
xchg
or
in
movsl
and
dec
add
mov
xchg
imul
sbb
outsb
xchg
mov
sub
jmp
in
shl
cmp
aam
jnp
or
push
or
inc
inc
aas
movnti
into
or
jmp
neg
push
mov
outsb
ret
sbb
xor
jle
dec
add
add
mov
jb
mov
fsubrl
push
sbb
pop
lock
push
fbstp
mov
aas
lea
or
fldt
sbb
out
cmp
xlat
mov
out
xor
mov
xchg
shr
popa
fldl
jo
cmp
and
pop
dec
pushf
and
mov
and
out
lcall
lahf
adc
insb
rcr
and
jl
ret
sahf
cmp
and
mov
jmp
stos
cmp
jle
pop
pop
push
jg
xor
mov
adc
gs
inc
xor
push
cwtl
add
aad
std
push
jle
aaa
push
fsubl
dec
push
cmpl
ljmp
enter
pop
sub
orb
iret
mov
or
or
push
dec
pusha
dec
adc
or
push
daa
pop
je
aad
push
add
pop
sub
sub
inc
dec
sub
cwtl
sub
imulb
gs
bound
push
out
sbb
pusha
dec
or
mov
xor
fs
pop
mov
add
test
clc
aas
mov
dec
xchg
xchg
test
rcll
mov
push
pop
loop
mov
push
rclb
scas
mov
push
push
xor
sub
iret
pushf
push
push
xor
insl
add
pop
idivb
clc
repz
negl
aas
and
mov
ljmp
mov
cmp
or
not
push
add
pop
mov
lahf
and
jmp
add
test
mov
loop
sti
inc
movaps
pop
in
fwait
jmp
adc
or
sbb
test
enter
mov
dec
into
mov
and
xchg
adc
cmp
mov
pop
dec
pop
xor
dec
sub
in
les
mov
pop
lcall
pop
in
pop
test
push
adc
movsl
cmp
xchg
int
add
test
xor
jae
into
add
pop
das
pop
shl
add
add
fsts
cmp
sub
mov
mov
add
push
xor
xor
and
add
fistl
addr16
ds
testb
test
sahf
outsl
popf
jecxz
lcall
add
sub
cmc
add
xor
push
sub
mov
sti
add
cld
or
sbbb
mov
xchg
inc
adc
dec
aas
or
sahf
jmp
ds
ds
mov
scas
subb
movsl
jo
mov
add
nop
ret
xchg
in
adc
aas
sbb
mov
fbstp
xor
add
adc
icebp
inc
es
sti
add
or
stc
pop
xor
xchg
dec
xchg
inc
and
and
dec
jg
push
mov
mov
or
lret
in
roll
lods
scas
ret
mov
daa
test
inc
aas
fists
outsb
or
dec
adc
daa
cmp
orl
pop
jb
pop
lcall
popf
mov
inc
xor
jbe
imul
mov
aad
test
jae
stos
dec
and
mov
rorb
push
xchg
dec
mov
and
sub
push
aad
add
ret
add
jp
xor
imul
xchg
pusha
lcall
enter
pop
nop
xchg
inc
push
cmp
test
mov
or
pushf
mov
mov
hlt
imul
jmp
adc
jne
pop
cmc
dec
popf
ja
adc
or
pop
inc
icebp
aas
aas
into
mov
test
or
jne
add
mov
jl
daa
pop
lcall
mov
out
adc
inc
or
pop
int
xor
iret
cmp
inc
leave
sbb
adc
andl
js
pop
mov
fs
and
inc
jecxz
mov
sub
sub
adc
fcomps
mov
repz
fnsave
mov
sarb
loope
push
mov
sbb
hlt
nop
cmp
lret
lret
leave
inc
mov
push
mov
scas
and
jmp
rcll
out
das
cmp
mov
xor
pop
cld
and
pusha
jnp
xor
cltd
ljmp
sub
repz
dec
xchg
or
inc
fwait
and
jmp
je
mov
add
andb
push
sub
data16
repnz
sub
add
pop
iret
sub
sbb
mov
xor
xor
loop
jg
add
jbe
popf
push
xchg
inc
cwtl
cmc
add
movsl
fstpt
or
cmp
dec
enter
inc
jecxz
cmpsb
and
push
fs
inc
push
push
mov
call
cltd
sbb
pop
mov
cmp
push
add
mov
imull
pusha
mov
jle
xchg
ret
fimuls
adc
add
jnp
repz
sub
pop
inc
mov
int3
add
icebp
sub
aas
adc
cmp
pop
push
push
sbbb
aaa
or
sub
lock
mov
sbb
mov
cltd
pop
cltd
mov
neg
push
sbb
fstp
jno
shl
mov
pop
or
push
cmp
cmc
inc
sub
dec
lock
lret
xor
cmp
sti
stos
les
loope
shrb
loopne
sahf
insb
cwtl
mov
xor
add
cwtl
add
add
jnp
stos
arpl
repnz
pop
lret
lea
sub
cld
jl
dec
add
push
clc
sub
push
mov
mov
out
push
lret
cmp
and
xchg
shl
or
add
and
sbb
leave
push
pop
inc
mov
es
jbe
add
cmp
jae
gs
jmp
fisttpll
das
adc
ss
mov
negb
pop
dec
push
andb
dec
mov
push
enter
sub
add
dec
add
jbe
in
add
fists
push
rcrl
movsl
inc
jmp
cmp
add
aad
lahf
add
push
insl
mov
sbb
jmp
pop
les
or
and
jo
mov
pop
add
das
imul
xchg
or
aas
add
cmp
sarb
pop
lock
sbb
shr
imul
out
adc
mov
adc
cs
outsl
jbe
daa
jmp
or
test
xor
or
xor
pop
lea
insl
mull
loopne
dec
daa
dec
push
fisttps
pop
dec
adc
test
sub
pop
xchg
in
and
pop
out
xor
or
jns
and
or
and
cs
inc
jecxz
test
jae
jnp
adc
add
lret
push
scas
or
push
or
dec
xchg
push
out
inc
fwait
icebp
sbb
test
add
lods
mull
loop
jae
add
cld
into
push
pop
subb
pop
mov
sbb
popf
in
dec
mov
add
push
test
jmp
mov
lcall
out
call
notb
sub
dec
in
sarb
mov
aaa
jns
cmp
mov
call
push
das
dec
add
pop
fimuls
jo
xchg
adc
mov
rcrl
roll
orl
mov
inc
scas
popa
xchg
and
in
enter
inc
push
jnp
cmp
icebp
pop
lds
xor
andb
inc
add
je
or
fisubl
cmp
outsb
es
mov
test
jmp
push
or
mov
or
mov
push
and
mov
daa
inc
ja
ret
xchg
adc
shr
mulb
pop
pop
ljmp
jmp
mov
or
fsubr
jbe
and
push
fwait
push
xchg
imul
out
push
mov
enter
test
adc
mov
and
dec
loop
jle
loop
xor
sub
iret
push
cltd
dec
cmp
das
add
rclb
jle
test
and
add
adc
mov
pop
gs
adcb
je
cmp
add
insl
and
fwait
xor
sub
lods
jne
dec
dec
outsl
or
in
leave
add
jae
adc
rolb
dec
add
fs
arpl
adc
cs
inc
lret
outsb
push
xor
mov
pop
sbb
fists
xchg
div
mov
iret
out
das
pusha
ja
cmp
mull
push
add
jne
std
cmp
popa
lret
int
jmp
mov
adc
mov
mov
cmpsb
stos
cmp
pop
stos
jmp
out
xchg
out
mov
sbb
xor
push
and
out
mov
movsb
incl
mov
or
xchg
leave
scas
inc
jl
mov
cmpb
inc
rcll
je
or
sub
cs
pop
les
out
or
or
insb
push
in
cmp
rorl
add
int3
scas
cmp
inc
xor
mov
pop
jg
scas
mov
and
dec
dec
negb
pop
sbb
int3
dec
shlb
xchg
testb
nop
xor
push
jle
andb
pop
dec
jmp
push
rolb
xor
sub
insb
mov
shll
inc
addr16
xor
xchg
addr16
sub
inc
bnd
cltd
jg
push
mov
or
repnz
repnz
push
fcoml
push
add
jl
push
loope
cmp
sub
lock
pop
cwtl
jle,pt
fldl
jbe
push
dec
push
loopw
loop
les
imull
jnp
rcrb
repnz
fsts
jae
sbb
dec
jo
ret
addb
out
add
mov
jnp
daa
sarl
mov
pop
xor
jp
fdivrs
jo
rcrb
mov
pop
sub
lods
and
fsubl
das
mov
js
jno
pop
out
ja
neg
sbb
mov
jmp
sub
out
add
jmp
mov
sub
add
sub
or
jmp
addl
cmp
daa
xchg
inc
pop
add
ds
cmp
fwait
pop
loop
adc
dec
stos
sbb
push
roll
pop
xchg
out
popa
jmp
jl
jmp
mov
inc
jo
xchg
jge
and
or
add
outsb
dec
mov
flds
push
push
pop
sub
cs
fnstcw
xchg
pop
sub
and
in
jmp
scas
cli
scas
lock
cmp
pop
lret
test
jae
pop
push
stos
leave
sub
push
mov
xchg
mov
or
pop
jg
or
mov
jne
dec
xchg
jg
mov
arpl
ud1
dec
pop
psadbw
test
xor
pop
into
idivl
sbb
jne
aaa
sub
mov
add
jnp
adc
inc
cmp
push
ljmp
lcall
push
shrb
add
sarl
jmp
test
aas
daa
loop
add
out
push
data16
add
jmp
loope
bts
push
ljmp
and
fstps
leave
loop
mov
sar
sub
or
pop
orl
dec
bound
icebp
cmc
xor
add
dec
sbb
pop
or
push
dec
push
push
jo
add
js
dec
sbb
sbb
or
pop
jp
dec
xchg
mov
cmpsl
cmp
ret
push
mov
cmp
xlat
fisubl
int3
clc
test
push
or
push
inc
iret
add
adc
jle
test
adc
push
rcrl
jb
gs
dec
mov
pop
xchg
not
adc
jmp
push
js
cmp
mov
int3
push
dec
test
enter
popa
sub
stos
add
jp
jb
std
add
mov
jmp
push
pop
mov
adc
adc
push
testl
jg
sbb
jle
or
mov
aad
mov
dec
scas
call
jge
xor
mov
cmp
aaa
pop
insb
push
lret
xchg
adc
and
rcll
mov
lods
jle
pop
add
push
fisttps
push
pushf
xor
fsubrl
pop
dec
inc
aas
fcoms
call
add
sbb
sbb
ss
cld
leave
je
pop
gs
mov
loopne
xlat
push
sbbb
xchg
gs
xchg
cmp
push
mov
cmp
sub
pop
xor
leave
nop
push
sub
lods
dec
addl
mov
push
and
fistps
pop
lret
inc
stos
mov
push
pusha
add
push
jmp
push
rcrl
shll
int3
xchg
in
nop
insb
cmp
dec
lods
adc
adc
inc
out
mov
pop
es
sbb
sti
repz
or
loope
inc
loopne
sahf
mov
jb
push
xchg
push
repnz
scas
jmp
xlat
sbb
lcall
adc
cli
mov
jle
adc
shrl
dec
dec
inc
movaps
sub
pop
roll
fnstcw
loop
rorl
sahf
mov
lods
sub
pop
push
pop
xchg
fimuls
pop
or
inc
orb
jnp
pop
insb
mov
pushf
jb
test
mov
aam
shlb
inc
adc
scas
add
mov
xor
popf
and
mov
mov
and
cmp
std
add
pop
ds
dec
mov
fcomps
sub
xchg
lret
xorw
dec
dec
outsl
push
add
inc
jmp
subl
int3
and
mov
and
notb
push
insb
sbb
sbb
subl
add
adc
add
push
or
leave
into
adc
outsb
sub
mov
jmp
push
inc
pop
xor
lds
hlt
les
push
clc
popa
je
xchg
sub
pop
mov
adc
dec
mov
add
movsb
push
push
inc
stos
repz
or
into
rol
lods
and
inc
jmp
add
and
push
or
add
xchg
pop
lods
xchg
test
dec
aaa
add
and
pusha
cli
xchg
movsl
adc
mov
mov
addb
rcrl
dec
ret
jns
sub
ret
mov
add
fstps
sbb
add
outsl
cmp
sahf
cs
sbb
push
jmp
pop
imul
mov
mov
add
adc
mov
or
fiaddl
pop
js
adc
and
mov
cld
pop
push
jne
test
dec
mov
dec
jb
test
leave
push
sub
movsl
push
dec
ret
or
iret
adc
add
sub
or
icebp
ljmp
adc
jmp
cmp
fnstsw
das
test
jmp
outsb
jle
in
xchg
loop
aad
jge
notb
mov
daa
jnp
sahf
fiaddl
jp
es
mov
arpl
adc
or
pop
scas
and
pushf
cmp
sbb
cmp
and
or
mov
push
add
es
jbe
push
daa
xlat
pop
adc
mov
adc
jae
es
mov
cmc
ret
fisubl
ljmp
imul
std
xchg
or
cld
cwtl
test
lock
das
mov
dec
mov
outsl
mov
mov
testb
clc
lea
sahf
sub
add
pop
sub
xor
ljmp
das
cmp
gs
test
les
or
add
fnsave
daa
ficoml
add
ficoml
jmp
ja
in
lods
mov
inc
push
movsb
jne
inc
mov
loopne
lahf
pop
popf
inc
mov
sbb
movsb
pop
and
jp
adc
jp
xor
icebp
ss
data16
add
sub
mov
mov
push
pop
into
dec
loop
shll
xchg
mov
sbbl
dec
pop
test
stos
or
xchg
mov
push
nop
inc
fdivrs
add
push
pop
push
rol
out
jmp
mov
xor
mov
pop
adc
add
loop
jbe
push
nop
ret
add
mov
into
xchg
sbb
arpl
inc
add
adcw
pop
pop
add
add
stos
pushf
fxtract
dec
in
xor
adc
push
movsb
xor
aad
add
test
fs
cs
insb
add
mov
mov
add
loope
mov
push
mov
das
test
stos
setge
or
mov
sub
push
add
popa
neg
inc
or
jecxz
nop
or
pop
in
mov
push
adc
pop
xor
jmp
sbb
pop
xor
pop
in
outsb
imul
push
aam
sbbb
and
jge
mov
dec
push
dec
movsl
cli
inc
push
push
es
cmpsl
push
pusha
push
mov
or
pop
push
cmc
pop
std
rcrl
popf
add
push
sub
xor
xchg
cmp
es
pusha
sti
aaa
pop
add
or
jmp
pop
or
add
jp
aad
jae
bound
lret
aam
in
and
das
testl
scas
jb
lahf
and
jg
dec
daa
and
in
pop
mov
lods
fldcw
and
in
loop
adc
mov
test
roll
popa
push
bound
jne
pop
push
dec
lret
mov
pop
lahf
shlb
sbb
leave
decb
push
mov
mov
mov
jl
icebp
pop
cmp
push
mul
fsubp
test
pusha
or
out
inc
and
rcll
dec
nop
ja
lret
push
add
mov
std
xor
xor
jmp
adc
lahf
push
xor
ljmp
push
rcrl
dec
jg
loopne
mov
and
jmp
in
in
int
mov
hlt
mov
sub
xor
les
xor
repnz
push
or
jp
and
dec
nop
dec
jmp
repnz
adc
std
and
push
imul
push
outsb
mov
aam
pushf
shlb
pop
xor
inc
rcrb
shl
and
mov
and
iret
es
sub
sti
sbb
xorl
xor
stos
add
push
iret
das
outsb
jmp
mov
sub
and
movsl
gs
add
push
adc
in
or
pop
cmpsb
add
xchg
jle
or
and
push
fidivrs
rcrl
mov
icebp
testb
ljmp
dec
sub
rol
lret
and
and
dec
nop
out
outsl
cmp
add
icebp
and
and
out
mov
int3
pop
rorb
lock
pop
repnz
mov
sbb
push
jmp
les
mov
add
dec
addr16
adc
jns
pop
sub
iret
pop
push
push
push
mov
fcompl
sub
inc
and
dec
cs
rcrb
or
push
jmp
fscale
jge
and
les
xor
hlt
pop
and
xchg
lcall
sub
xchg
pop
pusha
inc
cli
pop
addr16
pop
push
adc
adc
xchg
inc
mov
push
pop
add
push
insl
adc
mov
jno
loop
and
insl
adc
dec
or
leave
sbbl
dec
sbb
adc
add
add
out
sti
daa
pmulhuw
lea
push
lea
lret
out
or
push
stc
mov
xlat
adc
call
mov
ja
mov
push
add
pushw
sbb
shr
and
lret
shl
pusha
je
mov
out
ss
cmpb
xor
rcll
rcrb
push
jl
xchg
mov
xor
pop
mov
cld
das
out
pop
sbb
jmp
mov
sbb
ret
mov
or
mov
stc
popf
ret
push
or
push
or
sub
loope
xchg
ret
pop
fsubrl
sbb
mov
jg
dec
inc
imul
sahf
cltd
ljmp
push
cmpsl
add
jno
shl
mov
push
mov
push
add
not
or
int
jg
faddl
out
adc
pop
ss
stos
lods
outsb
sarb
mov
repnz
or
sub
in
outsl
mov
push
movsb
imul
add
jle
jmp
mov
pop
push
cmc
jl
mov
sahf
iret
mov
inc
add
push
data16
pop
testb
inc
call
adc
pop
xchg
push
loope
loopne
inc
ljmp
and
mov
push
cmp
js
lcall
shlb
lret
rcll
xchg
jmp
movsb
inc
cwtl
mov
cli
and
loop
mov
adc
cmp
add
add
jmp
into
inc
inc
cmp
push
push
sub
jb
cmp
adc
test
insl
movsb
mov
mov
sbb
pusha
cltd
into
out
fidivrs
daa
bound
sub
pop
scas
adc
pop
sti
add
dec
mov
push
nop
sbb
shr
fisttpl
mov
mulb
xor
pop
dec
roll
out
cmp
push
push
outsl
sub
and
adc
cltd
add
fmull
lret
sub
pop
sbb
mov
mov
pop
mov
xor
pop
enter
pop
mov
xchg
repz
pop
xlat
das
leave
jle
ss
adc
icebp
ror
negl
mov
pop
pop
loope
jmp
lods
test
xchg
mov
add
sub
fimuls
pop
movb
test
loopne
lds
jmp
sub
pop
mov
mov
mov
testl
lock
adc
mov
and
sti
ss
push
pop
rcl
add
cwtl
jg
jle
mov
into
and
mov
pop
mov
mov
jl
popw
mov
jne
pop
adc
cli
insb
jmp
into
ds
mov
push
jae
test
int3
xchg
out
jp
pushf
loope
cmp
sub
dec
aas
adc
incb
test
add
push
sbb
imulb
leave
mul
jae
sahf
ljmp
push
xchg
mov
cwtl
cmp
outsb
xor
movsb
dec
pop
mov
cmp
xorb
push
jmp
xor
and
scas
jns
pushf
jmp
or
lods
push
movsb
xchg
mov
icebp
shrb
cmp
jge
cmp
adc
pop
pop
add
lods
mov
push
dec
push
je
mov
fxch
or
jp
mov
xchg
xor
mov
cmp
out
add
std
dec
sbb
dec
or
mov
xor
jle
dec
cmp
and
mov
push
es
jb
dec
bound
dec
sbb
sbb
push
xchg
push
push
adc
or
stos
add
push
inc
push
jmp
js
sub
btr
or
push
add
aad
and
push
decb
mov
mov
pop
jecxz
test
mov
or
jne
xchg
and
icebp
ret
jmp
rorl
insb
xchg
push
or
ret
sub
pop
imul
xchg
adc
outsb
subb
repnz
cmpsl
fs
sub
sub
repz
mov
mov
in
lock
dec
adc
push
add
cmp
xchg
sub
pop
mov
dec
pop
mov
and
jns
pop
or
nop
mov
xchg
fcoms
push
ret
gs
sub
pop
mov
jno
lret
or
ret
push
popf
pop
jbe
pop
imul
bound
jb
rolb
push
xorb
pop
mov
xchg
rcl
add
jno
jno
fst
fdivrl
popf
push
test
mov
cwtl
mov
fistl
outsb
roll
or
or
jbe
add
pop
not
xchg
loopne
jp
add
or
addl
inc
sbb
mov
mov
lods
es
add
roll
js
mov
and
add
repnz
popa
loope
cmp
pop
adc
cmp
jne
jecxz
xchg
mov
push
cmpsl
in
jno
xor
pop
test
cmpb
or
gs
jl
nop
xor
xchg
inc
add
adc
cs
shrb
movsb
jmp
cmp
xor
out
mov
ja
pop
mov
jecxz
xor
sub
push
push
mov
xchg
xor
and
add
add
test
mov
sub
xchg
mov
out
jmp
cmpsl
xchg
ret
mov
push
add
xor
int
test
sti
push
lods
decb
pop
or
fiadds
mov
pusha
mov
jmp
dec
adc
cmp
jo
jb
ja
flds
inc
jmp
push
mov
push
xchg
in
ret
lods
outsb
ds
sub
xor
cli
leave
mov
pop
int3
jae
jmp
mov
in
lcall
cmc
jle,pn
rcll
jle
cmpb
mov
push
push
add
or
cmp
dec
loope
push
mov
icebp
lods
jle
fmull
inc
xlat
or
add
ss
pop
andb
repnz
pop
sub
or
test
loopne
or
fnstsw
mov
inc
icebp
scas
rcll
stos
dec
and
sub
push
xchg
jmp
sahf
lret
pop
stc
push
dec
adc
dec
loope
idiv
dec
cltd
pop
and
sbbl
mov
sub
in
pop
rorb
clc
dec
inc
subb
cmp
adcl
popa
and
mov
sahf
pop
mov
jno
sub
push
or
lock
sbb
fidivl
js
add
pop
or
push
repz
ret
pop
or
dec
in
decl
pop
jl
adc
add
jo
add
imul
ljmp
xorb
sbb
inc
push
xchg
je
ret
shl
movsb
pop
fcoml
outsl
and
fcmovb
push
push
jmp
fsubl
mov
es
sbb
cmp
inc
cmp
cmp
add
dec
jne
and
and
sahf
xchg
dec
mov
pusha
adc
lods
mov
jle
mov
data16
and
adc
adc
dec
lcall
decl
and
movsb
inc
push
dec
pop
push
jmp
jmp
clc
test
and
xchg
jo
xchg
sbb
mov
imul
inc
push
pop
and
mov
and
nop
or
dec
sub
adc
loope
xchg
fldenv
adc
jmp
dec
xchg
push
adc
pop
loop
out
xor
sbb
xor
in
dec
mov
pop
mov
mov
fbld
rcrb
mov
jmp
adc
sub
bound
clc
cmp
rcl
push
add
jp
or
mov
inc
or
jmp
sub
js
push
mov
imul
pop
cmp
mov
xor
pop
push
inc
push
and
lods
dec
jecxz
adc
fnstenv
out
mov
xchg
jmp
adc
mov
xlat
xorb
add
push
mov
sbb
jnp
sub
mov
lea
cmc
mov
mov
cmp
push
mov
shl
add
inc
call
xor
jmp
ror
inc
sub
das
cmpb
mov
jmp
lock
xor
pop
inc
outsl
push
jne
mov
mov
cmc
xchg
bound
orb
data16
data16
push
jmp
xchg
jae
sbb
dec
add
mov
mov
xlat
and
decl
decb
dec
and
sub
daa
dec
pop
mov
or
adc
cmp
addr16
mov
adc
cmp
dec
push
and
popf
fnsave
inc
inc
inc
jle
sub
push
daa
add
rorl
fwait
add
bound
fisubrl
into
mov
subb
sub
inc
addb
fbstp
pop
sub
sarb
pop
rcl
mov
daa
push
adc
test
inc
je
cwtl
outsb
pop
clc
insb
movsl
mov
jno
addl
or
mov
adc
cld
xchg
or
data16
mov
inc
add
dec
mov
rcrl
ss
scas
cmpsl
inc
mov
and
ljmp
xlat
pushf
rol
loop
jne
cmp
and
jmp
pop
shlb
popf
jmp
scas
inc
daa
inc
jecxz
add
mov
pop
xor
sub
adc
clc
sub
adc
inc
in
jmp
daa
and
cwtl
or
test
xchg
sbb
add
dec
push
stos
cmp
add
je
cld
inc
test
push
cs
pop
nop
dec
dec
mov
cmp
rorb
subb
sub
into
test
pop
stos
sub
adc
std
push
sbb
mov
xlat
pop
repz
or
pop
push
push
jnp
xor
jb
and
fimull
add
push
xor
lock
jmp
pop
xor
lcall
mov
adcl
loop
push
into
xchg
jns
dec
enter
lahf
les
nop
lret
mov
lret
inc
mov
in
and
cmp
xchg
or
xor
sub
push
push
adc
movsb
inc
sbb
or
push
mov
out
mov
rolb
loope
xchg
push
xor
shl
lock
sbb
adc
les
sub
enter
mov
dec
fsts
andl
add
bound
push
dec
arpl
frstor
sub
sbb
add
sub
fs
pop
jmp
push
push
push
jl
add
addl
or
mov
ss
inc
push
mov
add
dec
pop
cmp
daa
sub
sbb
hlt
lret
out
add
add
dec
cwtl
fisubrs
mov
aad
cltd
add
std
or
fcmovnu
push
push
dec
shl
hlt
mov
push
xchg
in
mov
sahf
rorb
cmp
stc
add
jb
dec
jmp
imulb
dec
shrl
insl
add
add
mov
sarb
cmc
out
rcll
sub
mov
fcompl
push
mov
push
or
mov
pop
inc
movsb
fadd
add
pop
cmp
fs
sub
and
test
cmpsb
xor
stos
stc
mov
loope
add
xor
popa
pusha
sub
je
not
jle
push
push
jo
mov
stos
dec
sbb
pop
neg
mov
sub
outsl
pusha
jecxz
dec
add
dec
rorb
dec
adc
int
int
or
adc
fxch
xlat
inc
jo
in
push
dec
mov
jg
push
loopne
xchg
bound
sub
jl
mov
xor
test
rolb
loop
gs
add
sar
or
cli
inc
popf
xor
imul
inc
mov
dec
movsl
adc
dec
or
or
arpl
jp
sbb
imul
add
xor
js
loop
pop
sbb
mov
fwait
add
push
bnd
and
cltd
push
imul
andb
test
or
jmp
outsb
and
jmp
sbb
xchg
loope
lock
shlb
aam
dec
and
or
sub
decb
mov
sub
xchg
sub
xchg
or
xlat
push
xchg
nop
je
stos
daa
cld
mov
out
sub
pop
int
jecxz
inc
test
cmp
add
out
xchg
test
cmp
cli
adcl
sub
push
and
xor
add
call
sub
sub
sub
jne
jo
arpl
mov
cltd
add
adc
lock
leave
test
add
data16
or
and
ds
fsubs
inc
inc
in
cs
add
je
cmpb
pop
loope
dec
dec
add
ja
pop
dec
push
loopne
stos
pop
popf
sbb
ss
pop
dec
jmp
xchg
and
adc
mov
icebp
jno
xchg
adc
sarl
jbe
push
nop
mov
add
jns
mov
loopne
mov
and
pop
pop
out
adc
mov
pop
or
pop
mov
rorb
out
add
outsl
leave
decb
mov
pop
lret
jle
jb
or
or
enter
jmp
and
cltd
xchg
push
test
push
dec
pop
loopne
dec
pop
fwait
push
shr
mov
test
mov
enter
orb
push
icebp
jmp
xchg
or
shrb
test
daa
xchg
rcrl
jo
movsl
cwtl
mov
bound
or
mov
cmp
lods
and
fidivrs
lahf
cmpl
sbb
pop
cmp
test
dec
xor
sbb
bound
mov
and
icebp
aas
les
popa
leave
inc
xchg
sbb
add
sbb
fcomps
inc
and
pop
sub
insl
clc
repnz
aaa
es
loopne
int
adc
out
data16
sbb
mov
jmp
mov
mov
jp
pop
neg
add
cmp
das
xor
sub
cmp
sub
pop
outsb
ret
cmpsl
call
push
mov
and
xchg
sub
mov
mov
int3
sbbb
aas
add
jb
and
test
scas
pushf
daa
jl
movsl
rorl
sbb
push
adcb
jb
or
mov
and
jmp
mov
pop
xchg
testl
cmp
in
mov
fmuls
pushf
imull
dec
jmp
mov
repnz
push
pop
sbb
into
jmp
std
ret
jg
mov
push
test
inc
test
xchg
std
adc
add
mov
add
cs
mov
rclb
loope
push
mov
insl
mov
and
jmp
rcll
add
int
jle
and
dec
scas
jne
inc
adc
out
add
dec
dec
xchg
out
cmpl
loopne
push
push
or
push
movsb
and
add
add
pop
or
cmp
push
nop
insb
push
push
mov
push
mov
leave
dec
fsubrs
cmpb
in
shll
insb
cs
test
popf
sahf
pop
dec
push
add
mov
pop
xor
push
pop
jmp
inc
jecxz
jl
mulb
mov
add
and
stos
sub
inc
icebp
xchg
pop
push
adc
add
fiadds
mov
ficomps
push
jmp
cmp
test
cld
test
xlat
mov
lds
les
imulb
xor
aam
std
inc
pushf
mov
push
pop
das
mov
popa
insb
mov
pop
sbb
dec
xlat
inc
inc
iret
mov
pop
push
push
add
in
and
inc
lods
insl
cmp
lods
sbb
or
push
fisttps
sub
adc
add
fsubrs
dec
mov
xchg
xchg
outsl
repz
sti
mov
add
rcrl
test
pop
pushf
daa
add
cld
and
into
mov
ljmp
adc
xor
jne
sub
jmp
ret
pop
mov
push
cwtl
stos
push
push
jp
pop
sub
and
add
es
add
adc
push
sub
aad
in
xor
pop
mov
dec
or
mov
das
pop
mov
and
sbb
out
lret
testl
jecxz
imul
ret
push
dec
in
aas
sub
dec
in
or
pop
pop
pop
shlb
jmp
cli
jmp
enter
ret
sub
jne
movsl
push
lret
movsb
push
in
mov
insb
sub
adc
das
dec
inc
push
test
mov
jae
sub
inc
mov
ja
outsb
lock
cmpsl
jge
pop
push
bt
mov
add
daa
mov
mov
jmp
sar
jl
add
stos
or
sbb
push
mov
enter
adc
out
mov
lds
dec
dec
movsb
movsl
xchg
adc
dec
mov
ss
in
push
cwtl
lret
sysret
andb
into
out
loopne
popa
jmp
add
or
daa
sbb
mov
lods
shr
adc
mov
xor
enter
xor
sbb
je
mov
add
xchg
push
cmp
adc
lods
push
mov
orb
je
in
fisttps
sub
aas
mov
movsl
out
mov
addl
sub
pop
pushw
cmp
pop
movsb
and
cli
adc
les
stos
xor
pop
push
push
fwait
push
imul
cmp
xchg
dec
jne
aam
add
loop
adc
mov
repnz
push
ret
add
dec
jb
lods
and
inc
sub
or
popf
shrl
rcrb
push
sub
push
jmp
nop
jne
lcall
push
in
xchg
xchg
jg
push
scas
mov
je
jo
insb
dec
sub
cltd
xchg
cmp
push
loope
loopne
mov
mov
dec
dec
jl
cmp
dec
sub
add
dec
push
fiadds
repz
lret
jb
rolb
jmp
pop
lahf
fisubl
or
xchg
jecxz
jb
push
jle
ret
and
or
insl
lcall
push
pop
jns
jp
and
addb
mov
sub
xchg
pop
shr
inc
cmp
lock
push
je
xor
mov
or
adc
jmp
push
insb
inc
ds
pop
push
arpl
fisttpl
lods
and
dec
sub
dec
jne
mov
push
sub
or
pop
push
inc
push
sti
add
out
outsb
mov
or
repz
xor
or
or
sub
adcl
dec
xor
out
push
icebp
xor
movsb
sti
stc
dec
xor
dec
andb
inc
jmp
loope
mov
and
scas
loop
cmc
ljmp
add
jp
daa
mov
push
push
js
sub
xor
or
mov
fmull
sarl
or
neg
pop
sbb
lock
push
pop
bound
jbe
sbb
into
mov
fsubl
sub
xchg
dec
mov
out
aaa
push
xchg
pop
xor
ljmp
lock
arpl
add
popf
and
repnz
loop
dec
or
aaa
ds
add
lods
jp
push
push
jmp
rorl
into
movsb
movsb
pop
rclb
sub
sub
fiaddl
jmp
jle
movd
dec
mov
loop
fildll
jne
int3
cli
arpl
push
mov
pop
cs
std
movsb
dec
cltd
mov
pop
sub
sub
test
adc
sub
arpl
xor
mov
stc
xchg
adc
lcall
leave
adc
sbb
cmc
mov
push
and
push
mov
fs
mov
scas
xchg
ret
jmp
and
int
push
int
repnz
sub
inc
xchg
add
ret
add
ret
pop
in
dec
push
in
hlt
xlat
fnsave
xchg
sbb
jmp
adc
mov
dec
outsl
and
push
xor
add
pop
jmp
sub
xchg
xchg
push
mov
pushf
imul
dec
xchg
daa
pop
ret
ss
cli
test
pop
mov
or
andb
cld
fmul
mov
and
add
mull
mov
dec
stc
scas
push
jmp
inc
jae
test
push
and
xchg
jg
jl
loop
or
lcall
mov
or
adc
or
jmp
pop
imul
or
push
push
dec
pop
adc
test
jo
inc
aaa
push
cmp
test
nop
adc
mov
add
xor
fucomip
add
mov
sub
jmp
stos
and
call
out
lret
aas
cltd
fstpt
ja
inc
shr
push
fdivrp
add
jmp
dec
fists
inc
push
std
inc
mov
cmp
popa
dec
imul
mov
push
mov
push
mov
inc
add
jmp
daa
push
pop
jecxz
adc
mov
cltd
cmp
cmovp
into
adc
xchg
xor
sbb
xchg
push
hlt
cmp
mov
mov
mov
mov
xchg
xchg
push
shlb
or
jbe
xor
outsl
add
pop
bound
inc
dec
jle
sbbl
add
ret
or
or
dec
fcmovbe
xchg
ret
jge
dec
xchg
test
mov
nop
push
cmp
sarb
xchg
dec
xchg
cs
mov
jbe
mov
data16
fcoms
lds
push
lock
sub
int3
cmp
flds
cmc
subb
pop
fs
sub
or
cmp
js
iret
mov
push
ds
not
dec
filds
vcmpsd
gs
das
push
mov
ss
lret
dec
jmp
out
adc
push
and
add
sbb
hlt
lods
mov
loop
inc
jecxz
sbb
xchg
or
adc
and
lret
pop
xor
hlt
xor
fiadds
mov
pop
imull
cmp
nop
add
insb
sub
adc
shll
out
sahf
add
les
or
ret
es
dec
jmp
fwait
or
filds
mov
cmp
in
out
enter
cwtl
ret
and
adc
adc
mov
mov
test
push
pop
imul
nop
and
sub
les
xor
mov
add
mov
xor
pop
dec
ds
push
bound
and
into
daa
dec
out
mov
jle
loope
into
jg
insb
pop
mov
sbb
or
or
push
lods
sbb
push
cmp
lret
push
xor
xchg
mov
test
dec
jae
push
sub
sbb
or
mov
in
popf
outsl
add
pop
mov
lock
xchg
stc
les
push
inc
adcb
jb
push
mov
add
pop
mov
aad
in
jecxz
stos
add
xor
bound
push
insb
or
hlt
incb
pop
bound
loopne
shl
movsb
pop
jbe
aas
sub
repnz
adc
aad
lret
push
sti
xor
cmp
xchg
jmp
push
lahf
inc
adc
popa
mov
add
stc
pop
fdivs
dec
push
and
rcl
pop
gs
and
xchg
inc
sbb
lahf
add
shl
add
add
sbb
and
push
pop
jmp
jnp
dec
rcl
ret
sbb
xchg
mov
scas
gs
add
icebp
scas
xor
outsl
aam
aaa
fwait
pop
mov
xchg
mov
sub
pop
pop
xor
int3
push
mov
dec
xlat
dec
jp
mov
sarl
jmp
mov
cmpl
loopne
push
or
adc
out
jo
xorb
dec
jmp
push
pop
pop
mov
sbb
jg
js
daa
and
sbb
outsb
rcrb
jno
or
pop
xchg
jmp
lret
out
stc
cli
inc
fs
adc
stc
test
xor
cmpsl
mov
cltd
xlat
and
xchg
or
jl
pop
dec
pushf
push
dec
xchg
stos
or
lret
cmp
jne
in
cmp
jp
pop
sub
orl
xlat
test
mov
add
fisttps
adcb
repnz
sub
sbb
int
sub
jge
push
iret
pop
push
mov
adc
add
mov
les
adc
ficoms
pop
push
mov
add
push
aas
jae
sub
fcomps
push
orl
mov
jae
inc
pop
test
push
add
inc
cwtl
ljmp
adc
not
or
push
fs
inc
add
popa
xchg
icebp
inc
push
mov
sub
add
rcrb
mov
add
dec
jmp
add
push
mov
test
jecxz
adc
adc
jo
jmp
pop
fs
mov
sub
or
sub
fisubl
cs
cmpsl
or
lahf
sbb
stc
roll
pushf
jno
sbb
and
inc
icebp
push
icebp
popa
sahf
dec
pcmpeqb
packsswb
not
outsb
rol
enter
lds
sub
pop
xor
imul
dec
cmpsl
push
jbe
orl
adc
call
sbb
push
hlt
mov
outsl
pop
cld
sub
mov
add
push
dec
add
pop
in
push
cmp
lods
cmp
cmp
imul
xor
push
and
mov
push
pop
add
jg,pt
cltd
cmp
xchg
add
or
push
clc
popa
sub
nop
idiv
sub
add
fildll
add
cs
nop
and
xchg
adc
push
mov
jns
or
bound
mov
jmp
add
rcrl
scas
mov
or
push
xchg
adc
cmp
stos
xor
insb
nop
or
sbb
cmp
jo
inc
cmc
dec
add
jmp
cmc
jne
xor
or
lcall
sbb
sbb
out
mov
lods
jecxz
adcb
mov
pop
add
js
sbb
cmpl
push
pop
dec
sbb
or
inc
and
adc
mov
in
dec
push
inc
dec
inc
int
fcoms
inc
add
aas
rorb
xor
sub
lods
dec
add
add
popf
orb
jecxz
clc
cmpsl
arpl
jmp
push
mov
jo
sbbb
push
pop
lock
bound
fnstsw
data16
mov
push
mov
xor
adc
and
xor
pushf
push
or
cmp
push
sahf
outsl
movsl
xor
xor
loopne
lods
jb
or
inc
jmp
jmp
repnz
dec
cli
push
mov
jecxz
adc
dec
sbb
cmp
add
mov
lret
jb
pop
mov
add
rclb
push
sub
push
enter
add
inc
push
mov
shr
shl
mov
jns
or
cltd
in
out
fsubr
cmpsb
loopne
mov
ljmp
xchg
and
cs
pop
jp
dec
or
jge
bound
add
adc
pop
sub
outsl
add
dec
mov
icebp
xor
xor
jo
jle
pop
rol
out
addr16
mov
mov
js
insb
add
xor
and
inc
mov
lds
jg
sub
sti
or
jae
pop
sub
add
jnp
jne
pop
popf
jo
sahf
inc
jmp
mov
lods
shll
aam
repnz
pop
stc
sarl
sub
push
cmpsl
sbb
add
xchg
scas
int
ds
rorl
add
in
mov
inc
sub
cmc
dec
add
sti
xchg
or
pop
jmp
icebp
repnz
hlt
dec
mov
or
adc
mov
jne
pop
sbb
push
bnd
xchg
dec
mov
adc
push
push
inc
mov
jae
push
aas
leave
jae
sub
adc
xchg
xor
jae
or
or
bound
and
aam
into
adc
insb
cmpsb
jbe
ljmp
pop
pop
sahf
pop
pusha
ret
pop
xor
pop
push
jmp
inc
and
cltd
imul
push
or
pop
sub
mov
rcrb
cltd
jbe
or
mov
xor
adc
mov
and
pop
jns
adc
insl
outsl
enter
clc
xchg
nop
add
loop
ljmp
rclb
faddl
inc
lods
inc
xchg
inc
sub
jmp
inc
mov
pop
xchg
or
push
adcb
mov
icebp
jmp
int
lock
dec
pop
lret
mov
jae
dec
xor
les
rcrl
dec
adc
shl
push
das
mov
pop
and
imul
dec
mov
push
adc
ret
cmp
sub
mov
add
xchg
mov
push
sub
aas
sub
adc
dec
mov
xor
jecxz
outsl
dec
loopne
mov
aas
lds
sti
sub
add
test
mov
add
push
aam
cli
pusha
in
imul
shlb
dec
sbbb
jne
cmp
or
or
sbb
gs
adc
xor
push
shrb
add
outsl
xorl
sbb
sub
xor
out
loopne
dec
push
mov
dec
adc
add
imul
aaa
add
jmp
mov
adc
mov
push
jl
test
lahf
ds
sar
dec
push
inc
int
and
sbb
mov
popa
movsl
xor
shl
adc
and
pop
inc
sahf
repnz
jns
inc
jmp
pop
dec
ds
add
fiadds
loopne,pt
and
push
repnz
rcrl
int
pusha
xor
jb
mov
jmp
cmpsl
mov
dec
mov
ja
lock
into
lock
or
fs
push
call
in
and
or
cltd
mov
mov
insb
sarl
jo
outsb
es
adc
sub
or
enter
adc
mov
aam
inc
mov
leave
sub
jo
or
xchg
bound
add
push
pop
mov
sub
stos
daa
push
jb
pop
mov
sbbb
push
jbe
clc
adc
scas
jns
mov
ss
decb
jecxz
push
jl
sahf
and
scas
push
jmp
or
xor
aaa
movsb
cs
sbb
adc
gs
mov
pop
cld
iret
xchg
mov
cmp
add
pop
add
mov
sub
pop
inc
add
push
jo
adc
or
pop
push
cmp
in
cmp
xchg
push
xorb
cli
pop
cwtl
cli
jae
cmp
test
stos
out
xchg
lods
add
sub
or
orb
inc
fdivrl
inc
repz
inc
ljmp
add
xor
pop
sub
ficoml
adc
in
adc
pop
push
fidivrl
add
cwtl
sub
ret
inc
cmp
mov
js
adc
inc
ror
outsl
pusha
in
lea
xchg
xor
pop
push
out
mov
cmp
pushf
jno
mov
and
sub
lods
cld
scas
lock
mov
xchg
jbe
adc
add
arpl
and
push
mov
pop
and
adc
dec
hlt
inc
mov
dec
movl
imul
jo
add
push
mov
shrl
test
ds
jl
jg
movsl
add
pop
or
fidivs
jnp
or
and
dec
pusha
inc
push
les
in
sbb
test
xorl
xor
push
add
or
push
cmp
clts
or
xchg
and
dec
pop
adc
cmp
add
movsl
adc
xchg
ljmp
add
lcall
pop
lahf
ror
loop
imul
and
addr16
adc
lock
out
or
or
stc
in
add
insl
cmp
xor
mov
js
push
movsb
jmp
mov
sub
mov
movsb
mov
xchg
iret
lods
test
aas
dec
ss
repz
or
sbb
jnp
fucomp
jb
and
pop
pop
cmp
xor
cmp
cmp
adc
push
dec
stos
adc
push
push
add
jge
push
cs
mov
sub
add
pushf
xor
ss
movb
or
mov
pop
shl
mov
push
sub
push
loopne
jbe
sub
test
inc
mov
pop
nop
clc
neg
or
push
jbe
pop
add
jmp
loope
daa
push
mov
dec
rcrb
out
divb
nop
fildl
sub
sub
xor
pop
pop
mul
xchg
sub
sti
filds
mov
rcl
push
xchg
mov
fisubrs
cmc
mov
push
int3
sub
jne
test
mov
neg
incl
and
adc
xor
loope
push
or
fdivs
sub
sub
sbb
pop
movsb
inc
mov
push
xorb
push
jno
lret
mov
dec
add
int
sub
in
sub
jmp
dec
mov
and
jp
cmp
dec
outsl
pop
push
jecxz
clc
les
ret
daa
iret
orl
cmp
adc
mov
inc
inc
or
sbb
add
data16
scas
repnz
popa
cwtl
imul
hlt
lahf
adc
inc
add
adc
pop
xor
scas
das
je
push
movsl
out
scas
pop
test
dec
in
fiaddl
cmp
inc
mov
test
lret
lock
jno
add
pop
pop
push
lds
sub
es
sub
sbb
jne
sub
pop
push
div
push
pop
pop
ror
pushf
and
jmp
das
test
pop
in
enter
dec
pop
daa
xchg
in
xor
mulb
aas
sub
lods
cltd
ds
inc
jg
out
adc
xchg
aam
xor
add
inc
neg
push
mov
inc
or
js
subb
cltd
faddp
xor
js
jmp
mov
les
inc
add
pop
or
clc
inc
lahf
sti
jg
add
mov
scas
inc
xlat
fiadds
pop
jae
in
push
or
mov
inc
or
mov
dec
adc
stc
push
push
je
mov
daa
push
and
mov
pop
bound
mov
xchg
mov
sarl
sbb
test
xchg
popa
push
bnd
jns
ret
xchg
xor
and
add
out
push
mov
adc
pop
adc
jmp
loope
and
jb
ror
rclb
push
dec
jmp
out
lret
imul
jno
repnz
jl
jle
or
jmp
dec
add
add
pop
orb
push
test
dec
mov
dec
pop
test
push
and
sub
or
enter
jp
scas
xor
pop
ret
or
arpl
push
lsl
or
clc
and
ret
adc
add
into
sarl
dec
sbb
sbb
cmp
aaa
cmp
and
mov
cmpsb
jge
jmp
cmpl
mov
push
cli
adc
pushf
push
repnz
or
add
les
mov
dec
mov
popf
jns
push
pusha
xchg
popa
je
mov
mov
push
test
aam
xor
lret
cmp
cmp
shl
pop
clc
jnp
inc
push
shrb
call
rcl
js
leave
push
aam
xlat
pop
mov
out
or
push
mov
pusha
js
dec
pop
push
es
jne
or
cld
push
adc
xor
xor
pusha
pop
push
push
cli
xchg
scas
scas
sub
lds
push
jno
repz
lods
jmp
dec
test
icebp
cmp
imul
loopne
arpl
or
jae
sub
jmp
xchg
jmp
fisubrl
xlat
addb
ret
mov
scas
andl
dec
pop
fiaddl
sub
repz
sbb
mov
push
and
rolb
or
dec
push
add
nop
pop
push
add
or
sub
addb
jmp
mov
mov
mov
in
xor
in
add
xchg
jg
mov
pop
cmp
outsl
add
and
and
sub
sub
jo
inc
inc
pop
inc
sub
and
xchg
mov
popf
test
add
cwtl
sub
pop
jl
jmp
fcomps
pop
pop
mov
dec
sti
or
popa
clc
into
mov
pop
dec
cmp
add
stos
pushf
add
add
cmp
adc
sbb
js
aad
adc
dec
mov
xchg
mov
addb
dec
add
adc
or
orb
nop
cs
imul
push
jmp
cld
dec
jmp
push
mov
add
test
mov
jmp
pop
pop
sub
mov
mov
lock
jo
mov
pop
push
jg
push
add
or
mov
imulb
xchg
pop
pop
mov
daa
jp
cmp
pop
dec
es
xchg
and
mov
rol
cmp
pop
mov
xchg
jae
imul
jmp
movsb
mov
pop
out
lods
sub
xor
insb
jmp
lret
sbb
sub
jg
mov
inc
add
dec
clc
cmp
or
push
add
jno
mov
pop
in
loopne
sub
xor
lock
push
push
push
ret
daa
inc
push
stos
xchg
mov
arpl
ds
scas
adc
dec
shrl
and
xor
mov
fucomip
dec
clc
adc
adc
mov
inc
add
in
pusha
dec
push
pop
inc
pop
adc
fisubs
sub
push
inc
enter
and
cmp
inc
xchg
lea
repnz
pop
mov
jnp
rorl
or
inc
mov
push
or
mov
lea
rorl
jge
sub
test
mov
mov
out
cmp
je
and
push
pop
push
addl
inc
shr
dec
cwtl
popa
pusha
mov
and
dec
daa
add
sub
or
testl
sub
or
push
inc
xchg
pmaxub
cmp
cld
jle
neg
push
mov
or
cmp
shll
mov
or
cmp
add
add
mov
aas
sub
jmp
push
daa
mov
and
push
xchg
cld
shrb
push
stc
add
cmp
jo
ficomps
pop
sub
xlat
ds
cwtl
sbbl
push
mov
movsl
outsb
movsl
ja
add
add
sub
jle
in
fiaddl
push
or
cmc
jmp
rorl
lcall
scas
inc
mov
aad
and
cmpsl
pop
jb
pop
lret
push
gs
and
mov
cmpb
int
inc
and
js
pop
pop
pop
pop
pop
dec
inc
push
jmp
pop
xchg
or
fistpll
or
les
in
sub
sub
sbb
das
jb
or
not
xchg
je
and
inc
jle
repz
nop
mov
stos
sbb
pop
cmpb
add
pop
push
xchg
test
adc
cld
stos
jecxz
dec
int3
insl
mov
jb
and
daa
push
in
movsb
dec
or
ljmp
sbb
loopne
ret
or
je
out
mov
data16
push
xchg
jl
push
mov
jne
mov
cmc
sub
pop
fucomp
repz
sub
push
je
add
cmp
push
dec
loop
es
in
out
add
push
fs
jecxz
subl
sub
aaa
and
pop
inc
imul
adc
pop
rcr
dec
mov
adc
dec
loope
sub
das
nop
dec
cmc
jmp
es
jne
add
aaa
adc
aas
jg
jecxz
sbb
pop
faddl
pusha
push
push
push
ds
leave
shl
bound
inc
mov
imul
dec
pop
dec
sub
dec
test
js
outsb
test
pop
out
cmpb
push
and
arpl
dec
mov
dec
rcrb
push
inc
or
xor
aad
inc
lods
sub
add
jg
cmp
cmp
aad
lahf
lcall
and
push
movsl
jge
xor
inc
add
out
int3
push
jmp
imul
aas
dec
xchg
repz
les
inc
adc
ss
insb
inc
mov
add
jbe
lods
cli
int
sub
mov
cmc
int
and
mov
and
mov
fs
add
repz
out
inc
pop
out
repnz
dec
dec
mov
das
xor
bound
push
inc
mov
push
or
xlat
xchg
jecxz
jmp
ficoml
mov
add
push
inc
pusha
cmp
mov
call
lahf
mov
outsb
add
lret
mov
or
adc
push
cli
movsb
out
testb
int3
shr
addr16
jge
scas
push
or
ja
sbb
inc
aam
les
test
cmp
and
and
stos
cwtl
and
pop
insb
movsb
lret
add
out
pop
int3
subl
das
add
sub
adc
jg
xor
xlat
imul
js
adc
sub
jg
rorl
push
sbbb
data16
dec
jmp
aam
sbb
stos
iret
aam
push
lret
mov
xor
inc
lds
add
jmp
mov
shll
aad
orb
xor
dec
stos
adc
adcl
mov
add
movsb
popa
fnstcw
and
cmpsl
add
lock
add
adc
jne
add
test
xchg
in
lds
shlb
mov
jno
aad
lcall
popa
pop
ficomps
inc
inc
cmp
pop
adcb
lea
pusha
xchg
jge
dec
or
loop
push
mov
inc
mov
mov
das
pop
daa
clc
hlt
cwtl
clc
sbb
push
dec
lret
pushf
jge
cmp
lahf
mov
rcll
nop
sbb
rclb
pop
xor
or
cwtl
test
mov
xchg
add
je
fisttpll
rorb
mov
repz
adc
dec
test
adc
aas
pop
sub
sahf
ret
and
addb
cmp
xor
jns
popf
pop
imul
test
das
cli
jb
nop
in
fwait
sub
cli
movsb
pop
daa
pop
addr16
leave
sti
adc
mov
aad
or
jmp
mov
mov
adc
pop
pop
aam
xchg
dec
mov
xchg
dec
push
push
mov
cmc
add
int3
or
jmp
pusha
or
and
pop
pop
negl
sti
add
sbb
or
sti
daa
jmp
dec
xor
pushf
sahf
sahf
lahf
add
out
add
push
sub
outsl
cmp
inc
repnz
dec
xor
subb
add
imul
and
scas
push
fwait
lock
pop
dec
xor
jle
mov
insb
mov
lea
add
add
adc
dec
mov
mov
or
mov
mov
push
leave
dec
xchg
or
jmp
cmp
mov
jp
dec
jb
jbe
in
fstpt
add
xchg
into
sahf
les
add
adc
xchg
adc
and
cmp
sbb
add
aas
call
movsb
ret
jp
jns
add
aas
orl
cs
sub
out
pop
mov
mov
dec
pop
cmp
out
xchg
mov
cmp
repz
cmp
icebp
loop
add
std
dec
popa
pushf
adc
push
cmp
inc
xor
arpl
mov
inc
push
add
sub
cmovle
and
and
outsb
mov
cs
jp
fiadds
pop
push
repz
xchg
add
and
pusha
jmp
pop
test
icebp
scas
dec
cmp
add
mov
cli
cmpsl
stos
fldt
fwait
inc
inc
imul
push
adc
out
cltd
mov
cmp
call
int
out
xchg
cmc
ret
xchg
aad
in
mov
sub
ds
pusha
mov
pop
lea
adc
jae
inc
or
mov
xor
and
sub
arpl
pusha
loop
insb
sub
or
out
aaa
dec
xchg
jg
jb
mov
jl
pop
xor
sub
sub
bnd
or
dec
pop
out
jl
insb
push
jmp
and
xchg
stos
sub
push
xor
popf
sbb
sbb
adc
and
pop
jmp
ret
fiadds
push
pop
lods
scas
inc
mov
movzwl
push
push
adc
popa
and
out
jb
nop
notl
add
push
xor
jmp
cmp
sbb
push
mov
pop
mov
sarl
pop
or
dec
xchg
xchg
or
out
stc
lcall
dec
mov
xor
xor
enter
xchg
inc
xor
cmc
in
push
pop
adc
sbb
xor
hlt
mov
inc
pop
xchg
pop
arpl
pusha
cmpsl
sub
testl
add
stos
mov
push
test
mov
dec
mov
xchg
push
mov
push
pop
shrl
aaa
pop
jae
test
cltd
mov
mov
arpl
add
inc
cltd
notb
jb
decb
add
cmp
jae
push
xchg
in
bound
jnp
push
and
xor
das
and
mov
aad
pop
jge
aaa
or
pop
pop
sub
and
mov
xchg
cli
ja
mov
xor
addr16
jmp
mov
adc
rorb
mov
stos
lods
mov
cwtl
xor
mov
xor
fldcw
int
pop
pop
xchg
jl
es
push
mov
adc
inc
jb
inc
sub
js
fsubp
popf
cmp
lret
and
jbe
ja
cwtl
cmpsl
jge
or
xor
push
dec
xchg
mov
clc
jbe
jmp
add
gs
fucomp
push
and
pop
push
jp
push
pop
loop
loopne
push
sti
xlat
cmp
xor
inc
jne
or
cmp
jp
xchg
jecxz
cmp
es
out
and
jg
mov
push
mov
push
sbb
das
inc
push
cmpb
xchg
int
popa
int3
or
pop
sbb
out
in
jmp
xchg
out
nop
ffreep
pop
xchg
add
and
inc
inc
xchg
xchg
fld
ss
pavgb
pusha
or
flds
push
aam
xchg
rclb
push
mov
jmp
cmp
out
dec
mov
push
outsl
cltd
push
loopne
cmpsb
mov
cltd
and
sbb
leave
les
scas
mov
cmp
adc
aam
xchg
cs
sar
out
pop
push
repnz
sub
popf
aas
xchg
push
scas
sub
incb
xor
or
adc
adc
push
cwtl
and
xlat
sub
ret
popf
into
fcoml
pop
mov
inc
orb
pop
inc
loope
inc
mov
xor
cmp
dec
mov
sub
pop
mov
sbb
cmp
sub
sub
push
mov
dec
and
inc
inc
dec
in
icebp
or
out
cmpl
lret
das
jbe
pop
adc
dec
mov
faddp
daa
out
ffreep
sahf
add
push
mov
push
mov
xchg
jno
outsl
mov
push
incb
loop
or
pusha
inc
cs
lret
mov
add
xchg
sbb
adc
and
xor
out
pop
add
push
sar
pop
cmpsb
call
aad
stos
or
xor
lock
outsl
cmp
imull
jmp
or
ljmp
mov
add
cmp
sub
enter
or
dec
call
loop
aaa
pop
cmp
scas
fstps
pop
scas
xchg
jae
jmp
scas
sti
sbb
lret
aam
sbb
push
cmp
and
fwait
sahf
enter
icebp
sub
push
push
mov
pop
pushf
cs
push
lcall
inc
ficoms
cltd
mulb
mov
xor
repz
cli
jge
push
adc
sub
jle
loop
ljmp
jmp
push
sbb
pop
pop
xor
mov
and
add
outsb
vandps
add
int3
xor
fadd
cmp
add
in
shrl
jge
pop
adc
shll
adc
imul
dec
dec
int3
scas
lahf
popa
repnz
out
sub
in
movsl
or
nop
cmpsl
hlt
clc
adc
imul
adc
ja
mov
add
mov
fistps
arpl
out
mov
jno
pop
lahf
push
push
out
insl
xor
xchg
sarb
xor
xor
xchg
inc
sahf
mov
or
sbb
push
dec
out
pop
jmp
stc
into
sub
adcl
jno
test
pop
push
add
ret
sbb
push
jmp
xchg
inc
test
jb
imul
xorb
mov
jmp
icebp
leave
pop
sub
popaw
popf
and
call
ret
scas
shll
cmp
insb
and
xchg
push
push
push
adc
lret
scas
inc
mov
insb
push
pop
stc
jb
cmp
outsb
sub
jl
jge
and
mov
inc
scas
push
lock
testl
pop
jecxz
mov
cltd
jae
daa
xlat
pop
push
adc
dec
jg
pusha
movsbl
push
scas
mov
sub
mov
js
imul
dec
jb
pusha
cmp
popa
cwtl
adc
adc
or
adc
adc
sub
push
push
lret
jge
sub
shl
or
es
orl
dec
cmpl
xlat
repnz
xchg
sbb
pop
decb
fdivl
ret
movsb
test
dec
clc
dec
pop
sub
lea
ljmp
repz
pop
sub
add
out
fmulp
inc
es
mov
sbb
mov
fisubrl
popa
adc
out
xchg
rcll
aas
sub
and
push
pop
adc
test
or
enter
xchg
pop
mov
inc
xchg
push
lods
das
xchg
cltd
cltd
fidivs
cs
fiadds
sub
ret
or
dec
aaa
les
addps
sub
jmp
mov
pop
add
jg
push
xor
fs
jmp
add
mov
push
lcall
dec
jecxz
or
sar
fldl
aaa
dec
mov
xchg
je
jb
mov
add
pop
add
outsb
bound
sub
jne
bound
push
and
sub
dec
scas
insb
mov
imul
test
and
sbb
pop
xor
pop
adc
mov
jae
aaa
je
add
clc
pop
dec
cld
sbb
mov
push
cmp
or
pop
fildl
shr
mov
sbb
adc
inc
push
fisubs
sub
or
cmp
pop
sub
out
popf
mov
adc
bound
loopne
add
daa
jmp
inc
imul
or
cwtl
cmp
outsb
incl
filds
mov
push
pop
sub
out
xchg
out
outsb
data16
sbb
fdivl
jb
mov
inc
or
push
push
cld
mov
xchg
or
inc
cltd
add
pop
icebp
cmp
mov
xor
sti
dec
inc
fistpl
lret
pop
addr16
jl
repz
push
add
sub
sub
mov
ret
pushf
mov
adc
xchg
stos
bound
add
icebp
int3
insb
mov
inc
test
mov
pop
and
mov
lods
cmp
mov
popf
in
in
mov
mov
pop
imul
xchg
push
int
mov
sahf
lods
pop
sub
push
test
in
lahf
push
push
ret
movsl
pop
mov
leave
mov
xor
pop
mov
dec
push
je
arpl
cmp
movsl
mov
pop
inc
mov
push
jne
or
out
or
xchg
addl
ds
jp
push
jmp
popl
dec
test
inc
daa
mov
and
out
inc
fxch
jo
jne
sbb
insb
sbb
sub
pop
inc
sub
mov
sub
cmp
fcoml
dec
imul
add
addr16
or
jecxz
insb
and
cmp
inc
mov
add
ss
or
pop
mov
sub
add
mov
dec
push
push
adc
aam
mov
and
pop
push
add
pop
push
jmp
jle
xlat
inc
mov
ror
jmp
jecxz
mov
test
shlb
sub
repnz
mov
loope
cmc
in
or
dec
sti
sbbb
jp
add
push
mov
push
dec
daa
fldenv
dec
sti
ret
cmp
mov
pushf
frstor
dec
shrl
jl
pusha
push
mov
xor
roll
fs
and
push
mov
sub
sbb
popa
jb
jo
dec
outsl
sbb
jl
mov
pop
adc
aad
rcll
sub
sbb
aaa
pop
sub
or
mov
stos
aas
pop
mov
lds
out
jno
mull
pop
and
mov
push
jge
and
jl
xchg
out
pop
pushw
out
mov
daa
add
sub
cs
xor
subb
xor
insb
fucomip
pop
pop
shlb
inc
mov
popf
mov
fstpl
push
shrb
scas
daa
add
inc
popl
or
cmp
ds
xchg
mov
add
mov
xlat
mov
add
sbb
jno
or
push
mov
mov
sub
mov
add
pop
push
mov
lds
adc
sti
pop
jle
dec
je
push
lahf
lret
clc
ficompl
lcall
xor
icebp
daa
mulb
push
inc
cwtl
or
sti
mov
daa
mov
ffreep
gs
sub
mov
lahf
xor
xchg
add
add
push
mov
ret
cmp
in
loopne
not
xchg
mov
aas
xchg
inc
pop
cmc
sahf
test
jno
das
dec
scas
inc
pop
jp
enter
xor
and
push
cmp
mov
int3
in
or
dec
adc
jbe
scas
pop
xchg
fadds
xchg
mov
and
ljmp
bound
sub
cmpb
out
and
in
inc
push
jl
call
mov
sub
adc
je
mov
sub
adc
jecxz
add
push
outsl
xor
dec
imul
or
mov
stc
push
cltd
test
dec
into
and
xchg
cmp
shl
mov
fdivrp
inc
jno
xchg
xor
sub
popa
push
adc
cli
adc
add
inc
pop
mov
fildll
mov
mov
leave
das
or
xor
pop
mov
add
lret
sbb
xor
push
adc
jmp
sub
and
sub
mov
movsb
and
divl
fsts
lds
clc
sbb
push
push
xor
pusha
pop
lds
add
push
test
sub
int3
incb
inc
ret
cmpsb
adc
and
push
mov
mov
arpl
je
stos
mov
lods
and
inc
jno
rclb
pop
es
xchg
sbb
loopne
mov
or
push
push
or
xor
test
and
inc
mov
mov
enter
leave
cmp
push
test
fiaddl
in
call
xor
mov
sarl
outsb
push
or
imul
jle
inc
shrl
ss
mov
jno
push
out
and
popf
repnz
stc
ss
mov
and
movsl
or
repnz
dec
add
mov
mov
fldt
and
ljmp
cmp
jg
nop
pop
andb
leave
jb
pusha
mov
push
cmp
inc
and
push
fs
push
pop
nop
stc
and
pop
dec
push
popa
insb
movsl
or
pop
hlt
cmc
add
push
cld
cmp
sbb
or
inc
and
movd
shl
imul
setge
movsb
lea
scas
test
add
sub
or
std
jmp
inc
mov
or
sub
clc
ficoml
lods
mov
and
xchg
mov
shr
jp
idivb
leave
daa
pop
add
mov
test
sbb
xor
mov
push
mov
cwtl
sbb
repnz
push
cmpsl
in
inc
cmpb
jmp
call
jbe
pop
or
inc
xchg
pop
daa
pop
test
add
push
cmp
inc
push
and
fsts
pusha
dec
out
ss
cmove
shr
inc
fldenv
dec
adc
addb
stos
insl
jbe
or
sahf
adc
sub
push
cmp
daa
ss
repnz
push
test
lds
loopne
cwtl
lcall
nop
adc
pop
out
outsl
popa
push
pop
pop
or
cmp
xor
ror
mov
push
bound
push
shlb
icebp
dec
test
sub
mov
leave
adc
adc
pop
popa
jo
movb
pop
fdiv
cmp
or
loopne
aas
sub
sub
or
inc
pop
dec
repnz
and
imul
push
adc
movsb
pop
push
scas
into
mov
loop
dec
cli
js
addb
lret
fwait
cli
jg
cmp
xchg
push
mov
mov
fimull
add
jg
jne
jbe
outsl
push
rcrb
sbb
add
mov
add
rep
add
xchg
dec
ljmp
mov
mov
add
jge
push
or
cs
mov
mov
add
outsl
jl
jae
inc
cs
test
sarl
xchg
sti
scas
xorb
int
jmp
stc
clc
fs
cmp
xsaveopt
neg
lds
scas
mov
aas
push
movsb
scas
jge
jno
and
cmp
fstps
push
xchg
clc
iret
cld
shlb
adc
icebp
or
int3
aam
imul
daa
subl
mov
movsl
inc
ja
sub
cmp
sti
sbb
loopne
sub
jl
mov
add
pop
dec
push
std
es
fldl
xchg
jne
cwtl
test
call
dec
mov
lret
adc
xchg
or
sub
push
sbb
adc
push
je
dec
or
pop
add
push
adcb
push
outsl
pop
jmp
pop
adc
cmp
call
push
mov
sbb
pusha
roll
jmp
mov
in
jecxz
or
gs
pop
inc
clc
adc
je
push
add
xor
enter
dec
adc
ss
pop
sub
shr
int
and
stc
adc
sbb
and
cmp
adc
daa
sahf
repnz
je
in
lods
or
jmp
mov
mov
pop
push
in
add
aaa
loop
popf
in
sub
and
add
lcall
jo
int
sbbl
fcmovbe
insb
scas
lret
xchg
cli
in
movsl
inc
ja
add
jbe
test
mov
shll
xor
sub
jns
sub
xor
and
push
xchg
cwtl
repz
lahf
dec
adcl
cmp
not
push
or
push
decl
imul
icebp
add
xor
jmp
pop
bound
inc
out
jae
xorb
mov
or
dec
push
and
enter
mov
push
test
in
and
sub
xchg
mov
xchg
das
push
mov
fidivrl
jo
add
lea
hlt
insb
or
inc
sub
lock
imull
std
and
out
sarl
dec
inc
push
jb
aam
pop
out
add
cmc
test
cld
pop
pop
and
testb
mov
mov
sbb
push
mov
xor
decl
in
cmp
dec
cmp
push
lret
cltd
shl
ret
mov
push
mov
sub
mov
cs
sar
or
adc
lahf
inc
mov
cltd
mov
xchg
daa
aas
nop
test
adc
jmp
sbb
scas
out
mov
mov
cwtl
fnstsw
stos
and
jmp
rolb
divb
sbb
loopne
repnz
xlat
aas
mov
fld
aas
in
cmp
dec
outsl
sub
pusha
adc
or
xchg
outsb
shlb
cmp
add
and
std
pop
enter
pusha
pop
mov
insl
push
lcall
xlat
lods
jo
jmp
push
gs
mov
jmp
and
push
inc
movsb
push
fcoms
push
imul
xor
pop
test
pop
pop
mov
xor
aam
shrb
and
jae
pop
sbbl
sub
jmp
add
movsb
or
lret
aad
fists
add
ret
or
cmp
push
fnstsw
or
clc
idivb
cltd
and
clc
push
pop
pop
mov
nop
push
adc
pop
push
cwtl
mov
rcrl
pop
pop
mov
pop
mov
leave
mov
cmpsl
pop
mov
cmpsb
fs
mov
mov
cmp
popa
nop
sub
pop
stos
ret
push
add
push
or
cltd
mov
push
pop
test
inc
push
subl
inc
dec
sbb
dec
mov
stc
dec
jo
fwait
inc
inc
addl
mov
leave
mov
mov
cmp
cmpl
add
pop
xor
data16
dec
das
popf
jbe
and
rcrb
nop
and
push
jp
inc
out
aad
mov
je
cmp
frstor
jo
ja
cs
mov
or
xor
and
pop
or
push
pop
cli
xor
adc
add
sti
icebp
popa
cmp
push
and
add
std
hlt
add
mov
jle
add
popa
jg
dec
out
lahf
sbb
jmp
loop
inc
dec
cmc
inc
lea
es
sbb
add
cmp
jbe
add
pop
xchg
adc
cmpsb
jnp
pop
dec
fildl
mov
dec
jne
cmp
out
fcoms
xor
dec
pop
arpl
pusha
push
or
daa
insb
pop
mov
cmpsl
outsb
gs
mov
shlb
shlb
je
or
pop
shll
push
pop
iret
and
cltd
test
add
shlb
out
jno
shlb
inc
out
adc
pop
out
les
or
mov
es
adc
mov
jp
sbb
lret
sbb
push
loop
shl
fcoms
inc
mov
insl
xor
leave
test
inc
lret
sub
jl
add
sti
outsb
out
add
mov
lods
inc
andb
das
or
daa
les
inc
imul
sti
pop
xchg
xor
inc
sub
pop
outsl
and
xchg
shl
outsl
mov
movsl
dec
xor
mov
cmp
cmc
adc
adc
fidivl
pop
subl
test
dec
pusha
inc
cld
pop
rcll
xor
cmpsb
mov
sub
es
test
mov
add
pop
les
das
push
es
cmp
lds
push
jmp
out
or
lcall
push
pop
sbb
push
dec
shlb
clc
mov
shl
xchg
adc
sub
mov
push
mov
sbb
cmp
mov
testl
pop
or
push
shr
and
lahf
or
js
pop
dec
dec
mov
add
sub
aaa
or
push
insb
mov
pop
sbbl
outsl
inc
inc
aam
xchg
dec
aad
mov
push
ljmp
mov
xchg
pop
mov
push
imul
sbb
sub
mov
loope
mov
sbb
sbb
in
imul
sbb
mov
push
les
into
cltd
inc
shlb
push
inc
mov
add
add
in
addb
jl
dec
or
in
xchg
in
popf
xchg
inc
mov
jb
frstor
dec
call
mov
sub
pop
push
xchg
sub
adc
jmp
adc
lcall
shl
out
or
fidivs
pop
cmp
sbb
add
add
shll
and
jmp
subl
das
fidivrs
fistpll
adc
cmc
lds
inc
push
jle
dec
dec
or
push
cwtl
insb
std
push
dec
mov
xchg
or
sub
xlat
fs
lods
imul
add
idivl
jbe
sarb
adc
jge
or
push
xchg
sub
jmp
or
add
mov
imul
mov
add
push
jmp
bound
pop
imul
sarl
xchg
xchg
jae
add
popf
in
mov
xor
gs
sub
roll
add
cmp
sbb
push
adc
popa
add
cmp
in
insl
push
sbb
add
xchg
sbb
jmp
mov
ja
repz
bound
out
mov
fs
fstps
fstl
fs
cmp
push
or
and
repnz
push
adc
or
pop
push
adc
adc
adc
or
push
push
pusha
out
aaa
inc
ds
and
orl
inc
std
sbb
aaa
sbb
ja
daa
pop
xchg
mov
outsl
out
subb
inc
jb
mov
das
add
ret
push
fucom
push
push
bnd
mov
loope
sbb
andb
dec
jo
cmpsb
call
nop
jnp
dec
sbbb
fisubrs
dec
xchg
in
inc
xchg
adc
out
or
pop
or
pop
sub
aaa
adc
adc
add
mulb
ret
ds
push
nop
mov
dec
inc
and
adcb
js
inc
inc
or
and
push
mov
nop
rclb
fsubl
and
and
test
add
jle
adc
fiaddl
add
lock
mov
ja
dec
add
pop
push
bound
jp
or
mov
jg
sbb
aad
inc
adc
xchg
jb
stos
mov
jne
xor
loope
add
cmpl
rol
mov
xchg
xchg
ljmp
push
hlt
sbb
lahf
cwtl
ror
push
xor
add
shll
mov
push
pop
hlt
cld
jge
jne
mov
jp
ja
pop
dec
mov
push
cs
mov
jp
repz
repnz
dec
mov
pop
or
jbe
add
cmpsl
cmp
imul
xor
lock
in
pop
cmpsl
push
add
or
jl
sub
sbb
sbb
jg
sbb
icebp
jmp
sub
lea
inc
sbb
dec
leave
sbb
sub
push
leave
jbe
shr
dec
sub
or
jo
sbb
xchg
cs
fnop
dec
dec
jge
pop
leave
add
xor
ret
lods
sub
xchg
dec
cld
fldl
inc
das
pop
stos
lcall
dec
addb
aas
adc
sbb
push
and
mov
cmp
adc
in
scas
or
pop
sbb
inc
cmc
outsl
and
mov
push
xor
jbe
jnp
mov
and
xchg
and
sbb
xchg
sub
pop
rcl
inc
sub
and
mov
stos
mov
inc
sub
pusha
lret
je
and
fwait
setg
jmp
test
fs
pop
add
add
jne
xor
xchg
adc
mov
sub
mov
adc
in
pop
push
das
insl
or
call
or
out
cmpsb
adcb
jmp
imul
clc
lock
jmp
lcall
mov
sbb
sbb
push
pop
sbb
pop
jnp
or
sbb
xor
and
test
jns
jmp
jmp
mov
push
je
sub
data16
cmp
outsl
add
mov
jae
repnz
pop
jb
das
jmp
rorb
cld
jne
cmc
repz
jno
es
jmp
jle
jae
add
jb
imull
push
adcb
cmp
xor
imul
outsl
add
sbb
or
mov
sbb
sub
jge
push
pop
es
pusha
sahf
notb
add
and
jecxz
xor
fcoms
jmp
mov
cmp
movsb
dec
nop
faddl
push
add
shl
jg
xor
sbb
and
lahf
mov
pop
daa
mov
dec
out
fldenv
dec
push
add
in
sarl
add
mov
js
mov
push
jne
jp
pushf
scas
gs
adc
into
pop
lret
mov
push
pop
sbb
add
or
or
xchg
outsb
faddp
pop
daa
cmc
not
push
sbbl
iret
nop
push
aaa
jl
jnp
out
jnp
cli
adc
adc
add
pop
xor
pop
jmp
mov
xlat
mov
data16
pop
mov
xor
adc
inc
andl
jmp
mov
add
into
pusha
adc
loope
shll
out
popa
lcall
inc
fwait
jmp
cmp
cmp
dec
inc
or
fldenv
pop
mov
push
lods
add
push
jns
call
add
or
aas
scas
rolb
in
add
lahf
pop
scas
inc
jne
stos
iret
cmp
test
cmp
mov
lahf
shl
clc
rol
ret
sbb
stc
dec
sbbl
sbb
cmp
inc
sbb
add
add
and
movsl
pop
add
push
fistpl
gs
inc
dec
adc
cmp
rorb
or
testl
movsl
daa
cmc
sahf
arpl
jg
mov
fnstenv
pop
or
dec
dec
insb
push
mov
mov
and
pop
out
mov
in
outsb
lock
sarb
arpl
jmp
push
jo
in
les
lahf
mov
mov
xor
arpl
push
rorl
and
mov
mov
jns
jg
stos
inc
inc
pop
sub
mov
mov
lret
fidivrl
sbb
push
or
dec
xor
mov
mov
popf
xchg
pop
mov
mov
pop
inc
and
pop
mov
neg
out
push
int
das
adc
lods
adc
pop
pop
stos
js
jmp
mov
and
imul
scas
inc
jno
xor
jnp
adc
mov
addb
loop
xchg
mov
fisubl
jo
outsl
mov
iret
fwait
xor
inc
es
into
repz
sub
shll
inc
fsubl
sbb
push
push
jmp
mov
test
lods
fadds
xor
push
mov
test
jo
push
or
ret
jmp
xchg
insl
mov
mov
cmp
cmpsl
sub
or
push
lds
xor
ja
dec
jmp
mov
jecxz
sbb
movsb
sbb
or
mov
add
jecxz
loop
je
adc
sysenter
fcomi
jmp
loopne
pop
fadds
outsl
movsb
out
ret
stc
data16
cltd
sub
pop
call
mov
add
dec
jmp
iret
pop
out
in
add
and
add
xor
out
cmp
or
push
sti
fisttps
aaa
add
xor
das
jp
orl
js
das
mov
or
rcrb
in
das
out
and
es
ret
pop
hlt
add
mov
mov
subl
pusha
movl
xchg
sti
and
adc
iret
and
in
xchg
or
aaa
mov
cmp
pop
pop
gs
insb
lods
dec
in
fst
pop
add
mov
sbb
je
test
shr
jns
jne
sbb
dec
sbb
xlat
cmp
or
cld
push
jb
loopne
jl
mov
pusha
or
outsb
sub
push
rcll
cli
pop
cwtl
dec
and
add
add
enter
mov
jmp
pop
push
fdivrl
rorb
pushf
xor
hlt
repnz
movsl
and
stos
mov
add
push
mov
shr
add
cmc
test
sbb
cld
push
xor
les
inc
dec
repz
fstpl
clc
push
or
sub
jnp
rcrb
xor
popf
sarl
mov
mov
shr
push
or
push
or
in
inc
adc
inc
ja
adc
insb
loopne
fs
out
pusha
scas
sbb
negl
int
loopne
out
xchg
adc
jbe
push
or
adc
cltd
inc
xchg
add
outsb
add
pop
sub
sub
add
adc
cs
mov
xor
aam
mov
scas
cmp
mov
add
mov
daa
daa
lret
or
pop
imul
addr16
push
xor
cli
bound
sti
daa
xchg
mov
jb
jmp
mov
inc
xor
adc
jecxz
loop
movsb
sbbb
outsb
dec
gs
pop
jl
jmp
test
ret
push
sub
push
mov
jo
pop
lahf
cmp
and
or
fimull
add
jmp
push
sub
sarl
in
shl
jmp
test
ret
jns
and
push
inc
jecxz
adc
outsb
add
jmp
pop
sub
in
mov
not
sarb
push
arpl
sub
cmpb
fisttpl
or
inc
lods
xchg
adc
adc
jne
mov
or
inc
or
jmp
icebp
jle
mov
jle
es
xor
lret
dec
cmp
add
ja
pop
in
xchg
daa
mov
stos
inc
out
pop
mov
insb
sub
and
arpl
cmc
sbb
sub
mov
adc
mov
mov
sti
dec
test
and
add
jmp
or
mov
repz
mov
xor
mov
popa
add
push
cmp
sti
xchg
pop
lcall
sub
push
push
xor
dec
ljmp
data16
or
mov
mov
push
add
jo
sub
and
call
out
and
adc
int3
sbb
aad
fisubl
popa
xchg
pop
call
dec
test
mov
xor
aad
add
dec
aas
mov
repnz
add
sub
push
mov
cld
repnz
in
inc
dec
jmp
adc
jge
jo
jae
int
push
xchg
sub
jo
push
sub
adc
icebp
pop
push
loopne
pop
xchg
rclb
and
call
jg
shll
push
cmp
push
scas
ja
mov
inc
push
inc
sbbb
dec
dec
and
cli
xchg
test
lret
inc
xor
jae
outsb
das
hlt
push
pop
mov
xchg
inc
scas
cmpl
shlb
xchg
jl
jg,pt
mov
dec
xor
inc
cmp
mov
aad
popf
sub
in
pop
sub
add
or
xchg
ret
nop
jno
dec
mov
rcl
lods
mov
aad
iret
sub
push
pop
mov
and
out
xchg
repnz
inc
fistps
jge
mov
mov
lods
aaa
and
sub
aas
mov
mov
icebp
inc
xor
cli
pop
add
mov
or
daa
iret
push
sub
ffreep
add
or
inc
dec
ds
push
loop
jle
jo
loope
push
int3
popa
xor
mov
cmp
loope
mov
add
inc
inc
shll
inc
out
add
mov
pop
hlt
sbb
repz
inc
xor
cld
cld
adc
push
or
ljmp
ret
push
or
adc
cmp
add
or
rolb
xchg
bound
js
jge
lret
pop
add
cli
lds
fnstcw
dec
or
mov
hlt
jle
je
sub
or
pop
fst
and
xchg
js
sbb
outsb
aaa
mov
jbe
sub
jecxz
push
adc
lret
adc
subl
jae
jns
shl
jmp
dec
es
jg
and
inc
jmp
mov
stos
adc
pushl
pop
jmp
in
sbbl
push
pop
out
xchg
ret
jmp
push
pushf
mov
daa
fimuls
pop
in
add
sbb
cli
sub
add
or
out
lahf
fcomip
out
outsl
and
cwtl
ds
push
cmp
xchg
xorb
nop
mov
inc
xchg
push
aam
mov
push
mov
sbb
sbb
insl
lcall
jb
dec
bound
mull
jg
in
mov
out
repnz
mov
rolb
nop
or
mov
dec
lret
mov
inc
nop
cs
lahf
pop
inc
push
add
mov
clc
in
lret
test
popa
add
xchg
das
test
jl
inc
jo
enter
sub
and
lahf
in
pop
cmp
pop
sub
insb
xchg
test
adc
pop
scas
adc
fwait
aas
icebp
orl
pop
push
mov
push
aas
mov
mov
movsl
scas
test
in
inc
jnp
pop
jp
dec
scas
adc
sub
mov
or
cmpsb
aad
repnz
sub
dec
js
sub
push
sbb
and
cli
loopne
pop
pusha
inc
cs
jb
mov
adc
push
cmpsl
or
fstpl
mov
pop
add
push
test
dec
mov
testb
fsubrl
push
cli
leave
in
insl
and
insb
jge
cmp
sbb
adc
js
scas
add
push
dec
pop
push
add
sub
mov
popl
jg
les
out
sbb
pusha
addr16
mov
add
mov
jo
sahf
mov
add
jnp
clc
les
push
sub
pop
pop
jle
shr
loopne
xor
dec
addr16
subb
hlt
das
inc
push
in
xor
popa
jo
out
pop
or
les
enter
in
ret
stc
loope
out
mov
mov
push
xor
xlat
mov
rorl
dec
imul
lds
fcomps
sbb
sbb
lret
push
push
push
aam
or
jmp
adc
mulb
dec
jp
pop
loopne
sub
call
jge
mov
das
scas
push
push
add
jmp
pop
and
out
movsl
push
jl
xchg
xchg
push
add
in
je
jno
jns
outsl
sahf
pop
dec
xchg
add
sub
fadds
ja
cmp
add
mov
loop,pn
scas
sub
pop
jle,pt
or
bound
adc
pop
xor
pop
xchg
fcompl
fdivp
push
iret
ret
leave
or
aam
sahf
xchg
and
sbb
xchg
mov
mov
shlb
pop
cld
mov
or
jmp
lds
mov
mov
add
cli
adc
orb
call
in
cltd
push
cmpsb
gs
adc
and
or
std
hlt
xchg
add
inc
loope
mov
insl
jmp
push
mov
inc
xchg
les
enter
pop
outsb
aad
dec
xchg
and
add
push
lret
scas
jmp
push
sub
and
movsb
pop
xchg
xchg
loopne
cwtl
mov
lahf
pop
sub
addr16
push
out
ja
xor
mov
mov
inc
xor
dec
popa
jno
adc
lret
sub
xor
xor
push
mov
lahf
add
pop
xchg
ror
icebp
dec
les
movsb
loop
or
cwtl
inc
insb
sub
rclb
jmp
es
jo
xor
or
cmp
jl
xchg
pop
and
add
add
pop
out
inc
test
andb
daa
ret
add
and
mov
push
xlat
mov
mov
cmp
adc
pop
pop
mov
dec
xor
shrl
xchg
push
rorl
rorl
add
cmc
jecxz
hlt
sub
push
xchg
lar
pusha
mov
mov
fiadds
adc
add
rorl
jns
add
iret
sub
dec
or
sub
add
xchg
cli
inc
sub
dec
ljmp
xchg
push
loopne
je
pop
dec
js
sbbb
int3
inc
faddl
add
mov
or
pop
pop
ffree
repz
add
fs
fs
scas
push
xor
hlt
push
pop
inc
add
dec
sub
cs
xor
mov
lds
cmpxchg
or
inc
pushf
inc
repz
and
and
ret
mov
inc
pop
push
pop
push
add
xor
lds
aaa
xchg
push
push
jl
cmp
negl
or
pop
xor
in
adc
arpl
push
add
shlb
rclb
cmp
adc
repz
fistpl
pop
cmp
int3
ss
push
push
xchg
jmp
mov
icebp
fsubrp
cltd
xchg
gs
mov
iret
pop
ja
frstor
xchg
and
addl
je
cmc
into
sti
cs
lea
rcrb
in
dec
jnp
push
pop
jmp
in
push
inc
sub
cld
mov
pop
pop
push
sbb
bound
inc
clc
mov
xchg
mov
dec
mul
ds
lret
std
fdiv
add
push
movsl
xchg
aas
lea
es
repnz
out
lea
or
dec
sbb
ljmp
imul
xor
inc
push
jmp
mov
and
jne
cmp
mov
lds
pop
or
lret
add
shl
cs
add
or
lds
lcall
push
xchg
clc
xchg
pop
clc
cmp
push
push
test
mov
sbb
out
mov
fwait
push
mov
jmp
sub
pushf
xor
lods
mov
jbe
lcall
adc
sbb
or
adc
mov
sahf
pop
mov
leave
je
ret
add
shrb
push
frstor
loopne
pop
icebp
arpl
jae
xor
bound
dec
add
mov
add
xor
inc
adc
lds
and
leave
mov
cmp
icebp
ret
xchg
sahf
adc
scas
test
loopne
ret
dec
jnp
pop
pop
jb
push
hlt
jl
pop
or
and
imulb
push
mov
dec
call
arpl
or
inc
jno
lret
or
lods
fs
jo
ret
inc
pop
jne
jecxz
xchg
leave
stos
leave
mov
lds
or
leave
ficomps
add
sbbb
or
cmp
cmp
push
mov
filds
adc
sbb
std
push
cs
mov
mov
roll
and
ror
sub
dec
jns
add
pop
add
jmp
mov
test
jp
adc
out
dec
sti
add
jmp
aas
pop
loopne
mov
xor
dec
out
add
jmp
pop
push
jb
or
pop
jg
repnz
push
nop
push
add
in
fisttps
xor
sub
sub
xor
jno
cmc
mov
xor
jmp
mov
push
push
pop
ljmp
movb
add
icebp
jne
pop
popa
jecxz
shrl
cmp
scas
xchg
aaa
lret
fwait
clc
lea
xor
push
or
mov
inc
pop
mov
addr16
jne
sub
lea
mov
out
arpl
cmp
and
out
pop
mov
jl
sbb
decl
or
std
and
sub
ja
mov
mov
rol
sbb
xor
aas
sub
in
and
cmc
cwtl
repnz
jmp
pop
and
sahf
pop
push
fisubl
pop
sub
mov
sbb
sbb
lcall
into
pop
inc
dec
mov
adc
sbb
cmp
xchg
fsubrl
push
push
outsb
int
xor
or
pop
or
jae
push
lret
mov
mov
into
push
dec
cs
mov
in
mov
enter
mov
popa
ret
add
pop
mov
mov
mulb
xor
add
adc
xchg
stc
sub
mov
lcall
mov
shl
outsl
mov
pop
mov
rol
dec
xor
lods
in
xchg
dec
popf
or
and
jnp
jbe
or
loopne
add
ret
out
push
bound
gs
jle
mov
or
pusha
adc
inc
in
mov
and
das
push
inc
shll
test
add
negb
inc
call
push
jmp
push
push
push
ja
rclb
popa
jmp
sbb
fs
add
lods
jmp
jns
adc
scas
leave
sub
sbb
xchg
ja
xchg
xor
xchg
xor
and
cmp
imul
mov
bound
or
and
xchg
dec
sti
xor
rcrb
sub
repz
incb
or
enter
cmp
push
daa
and
xchg
orb
inc
sub
mov
imul
into
add
add
orb
and
dec
jecxz
repz
sarb
icebp
arpl
dec
sbb
add
add
mov
imul
and
subb
das
ds
negb
inc
test
ret
jg
inc
inc
or
out
xchg
nop
js
lahf
sbb
xor
xor
scas
adc
xor
mov
sub
js
divb
repz
imul
je
loopne
loopne
mov
incb
cmc
adc
push
sub
adc
adc
lahf
imul
sub
xchg
data16
push
pusha
ja
mov
xor
pop
or
sbb
mov
or
ret
sar
arpl
test
movsl
push
arpl
xor
lods
div
das
xchg
sub
adc
push
loope,pn
repz
sub
mov
xchg
rcrb
subb
mov
xchg
and
sti
add
in
pop
std
test
pop
not
ljmp
out
sub
mov
hlt
xchg
scas
pushf
push
clc
cmp
sub
jnp
fdiv
addr16
cmp
push
out
jnp
aam
or
sbb
in
loopne
and
adc
or
mov
pop
xchg
push
out
ja
mov
cmc
add
out
or
jo
dec
rclb
daa
cmp
jne
imul
das
mov
pop
and
ljmp
out
jno
test
and
sti
inc
pusha
and
pop
xor
pop
or
lds
mov
push
adc
orb
adc
inc
paddb
in
jnp
and
and
mov
lahf
hlt
or
pop
shl
or
mov
pop
lds
test
mov
jns
xchg
jno
aad
leave
adc
inc
xchg
sub
lret
mov
sub
mov
mov
sahf
push
add
jbe
dec
ds
xchg
orl
jle
sub
daa
inc
popa
or
pop
ds
mov
shl
xor
inc
inc
cmp
dec
rolb
mov
sar
mov
sub
notb
push
mov
cmp
fs
js
inc
dec
fistps
add
xor
push
or
push
add
mov
loope
push
xor
ljmp
push
xchg
adcl
and
sbb
enter
andl
hlt
testb
inc
enter
das
mov
mov
sti
popf
and
adc
test
mov
rorb
pop
and
pop
mov
add
xchg
dec
out
popa
dec
add
pop
in
mov
mov
xchg
inc
in
sub
std
mov
neg
add
jnp
inc
jmp
sub
mov
push
mov
into
sbb
dec
mov
inc
xor
test
not
pop
imul
add
fcompl
lods
out
push
daa
mov
lahf
xchg
stos
pop
rclb
cmpl
lea
mov
push
push
mov
add
xchg
ljmp
add
push
mov
rcrl
outsl
mov
jnp
add
xor
mov
xchg
pop
mov
icebp
push
outsb
add
pop
rcll
loopne
flds
dec
dec
xor
fildll
pushf
and
jmp
push
pop
inc
mov
add
pop
cmp
adc
adc
adc
inc
xor
jg
adc
or
and
and
mov
andb
add
mov
sub
mov
loop
rolb
mov
jmp
pop
lahf
clc
or
sbb
movsl
dec
andb
in
dec
pop
mov
push
xor
pop
pop
push
push
cmc
push
xor
mov
jge
pop
lret
or
dec
push
mov
push
pop
push
cld
addb
or
insb
pcmpgtd
or
fmuls
fisttpl
paddq
or
mov
movsb
stc
mov
in
repnz
ljmp
push
out
lret
mov
aaa
sbb
bound
and
push
mov
pop
pop
ret
shrb
sbb
add
insb
push
jnp
xor
mov
push
xor
xchg
nop
push
mov
cmp
out
add
nop
dec
add
xchg
push
mov
call
pop
pop
out
sub
add
mov
lea
and
mov
insb
jp
mov
test
hlt
decb
stc
popa
sbb
add
push
loope
xor
test
loop
mov
test
fdivrs
clc
insb
mov
and
sbb
or
add
lahf
dec
mov
sub
sahf
cvtdq2ps
rolb
scas
adc
pop
cmp
jecxz
pop
pop
adc
mov
ret
cltd
iret
sub
xchg
jg
push
add
js
xorl
imul
das
cltd
pop
and
jle
xchg
mov
test
push
outsl
decl
jge
xchg
out
or
jmp
xor
repz
sub
add
adc
jns
int
sub
cli
fsubs
fnstsw
or
mov
out
mov
push
or
sbb
mov
jo,pn
dec
ret
dec
shr
ret
fsubl
add
aas
je
push
mov
gs
mov
jp
iretw
out
sub
sub
pop
sahf
ja
cmc
fistps
test
loopne
fnstsw
ja
mov
out
leave
subl
sub
in
orl
sbb
pop
cmp
pop
pop
add
das
mov
movsb
pop
add
or
push
inc
or
faddl
shr
adc
adcb
pop
jmp
jne
push
pusha
ret
je
and
jge
inc
or
xchg
pop
cltd
jmp
lret
arpl
dec
cmc
addr16
lahf
jb
inc
xorb
cs
sub
dec
mov
and
in
sub
cmp
add
jo
call
jb
mov
int3
cmp
cwtl
adc
push
jnp
movsb
sbb
add
cmpsb
shll
add
adc
and
jne
lret
sarb
or
push
mov
jo
sbb
jl
int
add
inc
addr16
fnsave
add
and
and
sbb
outsl
repz
mov
jp
push
push
fbstp
pop
in
add
xchg
pop
shrb
jp
or
dec
call
dec
mov
jmp
pop
ficomps
push
inc
push
daa
clc
rclb
sahf
dec
daa
push
jb
xchg
bound
push
in
mov
sub
rclb
xchg
and
jo
cmp
xchg
test
pop
movsb
mov
mov
lret
stos
add
gs
push
cmp
adc
sub
fimull
cmc
mov
movsb
aas
sub
sub
ja
xchg
shll
sub
sbb
pop
push
imul
aam
push
sub
mov
leave
push
ljmp
add
mov
and
jmp
sub
into
add
dec
and
sub
stos
and
ds
mov
daa
loop
push
or
inc
testb
mov
ljmp
insl
pop
mov
or
inc
inc
js
nop
bound
push
adc
add
sub
push
push
sub
jno
and
sbb
sbb
dec
sbb
test
sbb
pop
push
insb
mov
push
mov
in
js
mov
inc
and
addr16
sub
and
sarl
adc
in
mov
arpl
shrb
imul
ljmp
mov
clc
sub
dec
test
jle
cmp
jp
add
jne
insb
jmp
inc
nop
lret
cmp
mov
adc
test
ret
stc
negb
or
push
mov
inc
icebp
fucomip
and
orb
hlt
add
pop
cmc
leave
push
adc
fnsave
lahf
call
in
leave
push
cmp
psrlw
popa
movsb
jge
rcl
pushf
adcl
sbb
xor
mov
imul
and
cs
pop
xor
out
sbb
mov
scas
sbb
pop
cld
inc
popf
or
mov
neg
shr
inc
mov
popa
das
jbe
shr
jp
or
xchg
adc
mov
loopne
pop
lahf
jno
add
dec
dec
fstps
js
fisttpl
ljmp
sbb
sbb
sub
std
sub
and
pusha
push
and
aaa
mov
jne
icebp
jne
ficoml
adc
and
ja
push
addb
inc
in
loope
aam
push
jge
and
jne
add
sub
push
bound
std
cli
repz
xchg
cmpsl
stos
mov
ficomps
cli
push
jnp
dec
fmull
push
sarb
push
jne
pop
add
fs
ds
scas
rcr
jle
ds
cs
addr16
ret
jae
shlb
rolb
sti
cmp
add
pop
test
inc
or
inc
mov
aad
ficoms
and
ljmp
jl
les
mov
mov
lret
sahf
loopne
fmuls
xchg
aad
in
in
push
add
mov
lds
fildl
jmp
icebp
mov
mov
mov
loop
jecxz
adc
xor
or
cmc
push
xor
das
jge
mov
or
mov
pop
call
stc
add
add
or
push
int3
ret
inc
xorps
sub
mov
mov
lds
out
add
cmpl
neg
icebp
into
popf
or
inc
push
mov
xchg
sub
inc
push
mov
mov
jne
je
sbb
inc
push
gs
and
test
scas
cltd
into
imul
sub
cmp
add
int
test
adc
mov
jns
pop
push
lea
sbb
stos
repnz
dec
mov
outsl
or
pop
in
xlat
jnp
jae
jg
and
pop
out
pop
mov
enter
push
push
sbb
sub
cld
xchg
scas
dec
mov
push
cli
cmp
pop
ret
xor
test
dec
sbb
cmp
pop
ret
leave
xchg
cmpsb
sub
inc
lahf
dec
and
add
addr16
imull
adc
cmp
lods
inc
adc
xor
arpl
add
pop
mov
and
xor
jne
roll
rcll
sub
dec
adc
rdmsr
dec
scas
inc
std
xchg
jmp
mov
sub
pusha
imul
or
das
add
xor
lret
add
jl
aas
int3
lahf
pop
xchg
inc
pop
das
or
dec
cmovs
pop
mov
pusha
jl
mov
push
inc
mov
insb
addr16
xor
aam
mov
xor
pop
adc
add
call
xor
inc
pusha
aad
dec
cmp
movntps
xor
lret
outsb
push
mov
sbb
sub
or
loope
in
xchg
in
dec
jmp
leave
and
ss
xchg
es
les
jp
fucomp
lds
jge
in
imul
add
mov
jmp
jp
in
mov
stc
repnz
xchg
repz
out
sub
adc
outsb
nop
or
or
adc
xchg
mov
loopne
in
inc
and
jmp
idivb
clc
adc
int
sub
and
jne
mov
mov
adc
xor
das
cmc
add
sub
data16
lar
gs
inc
push
xor
repnz
test
loop
pop
pop
sub
and
enter
or
out
mov
pop
movsl
rcrb
mov
test
lods
es
dec
mov
mov
sub
in
add
push
adc
cld
mov
push
jb
jno
mov
das
jae
jp
adc
and
in
jmp
out
pusha
dec
lods
test
xlat
aam
mov
xchg
cmp
xorl
jle
xor
leave
stos
cmp
jp
js
xor
call
sti
orb
addl
xor
mov
and
pop
add
into
push
adc
mov
mov
lods
jge
push
out
les
sub
pop
ja
sbb
mov
cs
cmovge
mov
das
pop
lret
fnstsw
ret
repnz
and
ss
pop
and
roll
lock
in
insb
adc
cld
xchg
jbe
jp
call
push
add
test
mov
sbb
add
jecxz
adc
sub
add
jnp
aam
push
loope
mov
cwtl
jbe
pop
inc
xor
rcr
roll
fmull
sbbb
push
sub
hlt
inc
mov
add
mov
sub
jmp
rolb
mov
inc
jae
imulb
lret
es
lock
xor
sub
lahf
pop
enter
xor
pop
mov
jbe
fcmovnb
shr
sbb
call
push
push
pop
mov
inc
fisubrs
sbb
mov
aas
jecxz
mov
pop
iret
mov
repz
pushl
inc
out
mov
xchg
pusha
das
shll
es
sub
or
inc
cmp
push
sub
bound
cld
roll
pop
sub
jb
int
das
mov
dec
xor
out
mov
push
push
mov
clc
icebp
rolb
adc
dec
push
mov
xchg
fsubrs
xchg
orl
mov
ljmp
pop
push
idiv
jg
jmp
xor
jbe
xchg
popa
sbbl
and
and
fdivs
hlt
pusha
outsl
sub
jb
dec
pop
and
pop
inc
icebp
xchg
roll
adc
insb
xchg
and
insb
aas
pop
add
test
in
addr16
push
sar
cmpsl
pop
xchg
rol
popf
lds
sub
ret
push
shl
push
dec
jmp
push
push
hlt
jp
daa
fsubrs
pop
or
xlat
add
mov
fistl
movsl
rolb
and
or
testl
lods
jo
push
stc
aam
and
dec
and
add
push
in
repz
push
imulb
adcl
jmp
mov
mov
add
aam
icebp
push
ret
test
sub
psllw
cs
xchg
out
into
cmp
push
mov
ret
push
add
mov
subb
cli
dec
pop
pop
aam
mov
and
sar
int3
xor
dec
ljmp
inc
sub
add
sbb
stc
lahf
mov
sbb
orl
pop
test
fcoml
cltd
jp
in
mov
or
adcb
or
mov
out
push
subl
push
lret
inc
inc
pop
or
jp
cltd
ss
xor
roll
add
icebp
mov
int
and
mov
adc
sub
cwtl
and
je
jae
das
adcb
inc
cmp
lock
fwait
mov
jnp
fsts
gs
aad
sbbb
lret
adc
dec
mov
pop
jge
and
pop
add
lock
mov
mov
rcl
cld
cmp
cmpsl
lock
in
mov
cmp
jmp
or
sbb
imul
sbbl
hlt
aam
mov
mov
shlb
xor
cmp
mov
pop
shrb
pop
out
and
int
pop
and
inc
in
mov
mov
pop
sub
or
jle
xchg
fbld
sub
ret
xchg
cvtps2pi
xor
push
pusha
lcall
cmp
mov
dec
mov
pop
mov
imul
inc
pop
lds
mov
stos
add
test
js
and
push
faddl
test
cld
sub
cmp
adc
mov
jne
inc
push
add
pop
push
mov
in
not
ror
push
push
sbb
outsb
xor
pop
xchg
xchg
jns
cmpsb
lods
push
xor
leave
lds
mov
pop
mov
pop
jp
or
cmp
mov
ds
add
adc
loopne
fsubrp
jg
das
dec
sahf
adc
into
sub
pop
push
fwait
idivb
dec
movsl
add
lds
mov
sub
adc
stos
jno
fdivrs
lds
pop
add
jge
xchg
pop
push
pop
stos
aaa
ja
push
push
loop
jbe
and
popf
push
out
lret
idivb
mov
insb
sub
mov
jb
and
sbb
jmp
push
mov
mov
push
lret
adc
in
cmpsb
mov
jmp
or
xor
lret
cmp
icebp
xchg
jne
ud0
outsb
mov
rcr
xor
adc
mov
pop
movsb
scas
add
or
xor
sub
jmp
sub
add
pop
jg
jl
push
xchg
xor
cli
clc
ret
adc
xchg
cmp
in
sub
fcoms
cli
adc
add
xchg
push
aam
add
sbb
mov
addr16
lds
adc
hlt
push
cmp
popf
imull
pop
pop
leave
jns
mov
push
dec
add
or
les
and
cmp
push
and
scas
sahf
jne
iret
xor
stos
out
cmp
jmp
mov
pop
icebp
pop
add
jle
or
push
mov
cmc
cvttps2pi
jl
cmp
movsl
test
and
pop
push
adc
adc
add
ss
mov
add
scas
call
cmp
lea
or
or
orb
sbb
cmp
test
dec
mov
movl
add
cwtl
dec
cmp
dec
sbb
sbb
shll
sarb
cmp
jle
int
adc
enter
mov
dec
loopne
cwtl
bound
jmp
jp
mov
pushf
sbb
test
xor
fs
xor
lret
out
add
call
outsl
mov
cltd
add
xchg
xor
inc
sub
add
repnz
scas
adc
jo
push
ret
cld
push
lret
mov
loope
jne
cs
push
cld
fsubrl
std
js
dec
lods
sbb
test
shl
in
mov
cmp
das
int
add
cmp
or
clc
cs
jae
push
and
scas
add
sar
insl
and
scas
adc
adc
lods
add
fisubs
fildll
call
cmpl
push
xor
shlb
xor
adc
iret
fcom
sarb
or
popa
mov
pop
rorb
adc
mov
out
or
sub
cmpsl
jmp
pop
mov
and
cmp
sbb
pop
ret
leave
lret
adc
cmp
cmp
shlb
jmp
xchg
cmp
in
mov
iret
repz
jns
mov
out
sbb
fsts
fiadds
pop
add
push
sub
test
xor
cmp
adc
mov
rorl
jmp
mov
pop
cmpsl
fiaddl
jb
add
outsb
xchg
sub
enter
jnp
sub
add
jmp
call
pop
fs
fsubr
cwtl
lcall
imul
inc
mov
inc
push
and
mov
outsb
out
xchg
loope
inc
call
bound
pushf
push
dec
leave
stos
inc
fs
push
pop
jp
jmp
cmp
lock
lret
adc
mov
jns
dec
cmp
jns
sub
and
leave
push
or
sbb
adc
xchg
pop
test
cmpsl
les
jg
stos
or
aad
roll
loope
sub
pusha
loop
inc
sub
pop
out
or
or
ret
rcrb
andl
xlat
jns
fidivrs
and
fsubrl
xor
or
in
add
and
push
pop
add
mov
adc
add
shr
xchg
in
not
mov
adc
pop
mulb
call
call
push
adc
int3
add
push
out
adc
pop
jl
adc
call
or
dec
sub
lret
mov
andb
loopne
push
test
xor
sbb
pop
jb
fs
cld
pop
rcl
sbb
pushf
mov
in
loope
jns
fidivl
add
and
inc
shlb
not
cmpsb
std
and
in
nop
push
and
dec
leave
lahf
repz
sub
pop
mov
pop
adc
pushf
or
out
pop
mov
jge
sub
aaa
jnp
add
add
sbb
aad
push
or
test
lods
xchg
das
xchg
mov
std
cltd
bswap
xchg
dec
pop
jae
scas
cmp
add
movsb
test
xor
aad
sub
pop
call
xchg
aad
ret
popf
xor
ficoml
jno
outsl
xor
cmp
and
inc
pop
decb
out
fisttpl
insl
nop
sub
xchg
imul
xor
inc
push
push
sbb
push
leave
into
subb
or
sbb
jb
and
sub
aas
pop
mov
mov
or
push
mov
or
or
stc
cmp
cmpsb
cmp
xor
add
mov
fnstsw
daa
mov
or
and
push
mov
into
or
jnp
pop
xlat
test
or
mov
nop
jecxz
rorl
inc
fsubl
aaa
mov
or
stc
jne
shrl
iret
adc
jno
push
repnz
fsubrl
lods
pop
pop
test
push
neg
leave
add
pop
mov
rcll
inc
jae
push
out
aas
xchg
movsb
mov
ret
lock
push
xchg
xchg
scas
push
sub
adc
add
inc
adc
ret
scas
scas
or
mov
popa
push
mov
das
push
pop
testb
test
ss
daa
add
jne
mov
pop
pop
sbb
ds
mov
test
aam
pop
pop
pop
sub
sub
push
add
push
mov
jmp
mov
sub
hlt
imul
dec
out
sub
push
imul
add
les
mov
sub
cwtl
jl
pusha
stc
dec
mov
xor
mov
xchg
jge
imul
pop
mov
icebp
test
pop
loop
jo
ret
inc
movhlps
add
fdivr
in
jmp
out
add
mov
jmp
push
xor
dec
fldcw
push
cmpsl
sbb
cmp
mov
mov
push
fcom
mov
adcb
mov
out
push
jecxz
jo
jbe
add
xchg
fstl
inc
testb
push
test
divps
or
xor
add
or
cmp
into
mov
sbb
out
pop
jle
push
jmp
lahf
shlb
push
flds
lods
or
inc
shlb
iret
cmp
mov
push
dec
aam
cmp
xchg
xor
repz
pop
xor
ret
jns
xor
push
xor
inc
or
push
mov
js
jle
in
or
or
sub
cld
jne
and
push
jmp
repz
lods
mov
and
mov
or
lret
fsubl
sbb
sub
js
mov
pop
dec
pop
outsl
jno
pusha
daa
mov
clc
or
in
inc
xorb
insl
push
sub
jmp
popl
push
cmpsl
sbb
outsl
xor
jecxz
sub
sbb
pop
pop
pop
sub
jmp
mov
cld
aam
orb
sub
popf
mov
jmp
jo
push
pop
shlb
pop
dec
xor
pop
fldenv
push
push
fsts
push
cld
push
aas
mov
push
jmp
inc
add
pop
jo,pn
mov
cld
pop
inc
into
jl
sbb
loope
test
das
add
or
nop
cmp
or
shlb
shl
dec
and
fldt
xchg
sub
sub
or
pop
in
lock
fimull
adc
pop
es
pop
leave
fbld
insb
sub
dec
inc
xor
sub
frstor
cmpsl
subb
fwait
cmp
lock
sub
lret
and
xchg
mul
into
add
jbe
xchg
push
cli
mov
mov
inc
lret
add
fisttps
add
and
mov
xchg
dec
mov
jl
xor
jmp
or
mov
ljmp
addl
jbe
out
lock
jmp
sub
add
shlb
and
sbb
enter
in
aad
pop
push
pop
pop
outsb
jne
push
bound
out
nop
jecxz
shlb
icebp
das
jmp
add
mov
and
shlb
push
adc
inc
add
das
add
mov
test
cli
adc
cmpsl
pop
cmp
call
iret
xchg
lcall
push
vcvtpd2psy
in
shll
mov
add
loopne
add
dec
inc
aas
hlt
repnz
mov
sahf
stos
out
sarl
icebp
outsl
jne
mov
inc
add
pop
mov
cld
xor
clc
loope
int3
cmp
maskmovq
inc
add
cmp
mov
jle
jle
mov
xchg
imul
sbb
push
sub
popf
cwtl
arpl
mov
into
jg
addb
movl
nop
jmp
xor
jle
mov
ret
inc
sbb
icebp
lods
mov
pop
imul
push
and
sarl
dec
mov
add
add
pusha
roll
shrl
add
pop
cmp
mov
mov
mov
pop
andb
test
or
sbb
or
pop
cmp
add
aam
out
xor
adc
push
add
repz
dec
lods
pop
xchg
pop
cwtl
lret
cld
push
jb
fs
outsl
jmp
lock
stos
sub
push
adcl
mov
xor
stc
jg
mov
or
add
push
mov
add
add
sub
call
popf
push
pop
pushf
in
clc
adc
inc
loopne
add
xor
mov
andb
xchg
adc
hlt
lret
iret
sbb
pop
jnp
adc
ja
jns
pop
pop
mov
jmp
sub
and
cmp
add
hlt
jne
pop
jecxz
add
sub
pusha
stos
in
adc
xor
pusha
test
in
test
cmp
jp
hlt
add
cs
dec
invd
mov
das
std
mov
iret
mov
jmp
xchg
push
and
gs
push
xchg
mov
push
dec
out
pop
push
sahf
cmp
jmp
das
cmpsb
mov
pop
or
loopne
push
push
imul
cwtl
lret
mov
pop
ljmp
out
mov
push
aad
es
fsubrl
push
les
scas
rolb
jbe
add
xor
icebp
adc
dec
dec
jne
into
cmc
and
ss
sub
sub
dec
in
sbb
sub
negl
stc
dec
cmp
dec
sub
aaa
xchg
adc
jecxz
sub
addb
or
hlt
push
lock
mov
mov
decl
adc
xchg
or
or
jno
inc
dec
mov
imul
adc
push
inc
test
lret
xor
daa
rorl
inc
pushf
test
loopne
mov
insb
mov
xor
movsl
or
lahf
rolb
addl
adc
loope
fstpl
push
nop
sub
es
cmp
push
and
sub
ljmp
pop
popl
xchg
dec
inc
cmp
jnp
mov
pop
add
jl
hlt
aad
sub
js
inc
dec
inc
mov
es
inc
or
xor
testb
aaa
adc
mov
stc
arpl
push
dec
out
or
pop
push
cmp
push
push
jp
cs
xor
out
aad
xchg
clc
insl
push
push
cmc
pop
pusha
fidivs
sub
adc
jbe
nop
pop
and
rcrb
or
mov
pop
cwtl
add
ss
outsl
mov
movsl
xchg
out
sub
inc
xchg
fimuls
push
or
push
cld
std
call
xor
and
xor
insl
jmp
mov
inc
add
das
mov
push
or
dec
inc
loopne
lahf
dec
cmpl
rcll
and
lock
cltd
std
jmp
ret
mov
scas
retw
pop
push
outsb
push
stc
mov
mov
and
jae
aam
mov
stos
loop
ret
loop
adc
dec
iret
ss
shll
test
icebp
mov
int
ret
xor
or
inc
xor
add
push
dec
inc
jmp
inc
fsts
mov
fwait
cmp
push
stos
aad
leave
or
fldl
mov
adc
cmovnp
dec
mov
push
pop
stos
lret
adc
lds
cmpsb
jae
push
push
mov
fcomp
scas
pop
dec
mov
ret
or
xchg
sbb
mov
cmp
rcll
inc
mov
decl
divl
jle
outsl
or
adcb
mov
pop
mov
cmpsb
push
int
jmp
jbe
fcoms
addb
test
sub
out
sub
or
pop
cld
and
xor
xchg
enter
js
ret
pop
movsb
movsl
or
das
push
xchg
pcmpgtd
testl
into
fiadds
movsl
mov
and
js
or
inc
push
push
in
mov
xchg
inc
xchg
aas
xor
xlat
aam
dec
xchg
das
cli
xadd
stos
jo
mov
push
bound
mov
aaa
shll
or
jae
pusha
mov
and
dec
ljmp
pop
fcomps
incb
cld
inc
lock
sbb
outsl
scas
aad
push
dec
lods
push
push
xchg
ficoms
out
lds
gs
mov
mov
mov
add
imul
push
mov
xlat
jmp
add
push
push
sub
rorb
fisubl
out
ljmp
adc
stos
dec
nop
push
fcomip
int3
add
fiaddl
and
rcrl
xor
pop
lahf
or
das
das
add
xor
rclb
neg
mov
aas
cs
dec
sbb
push
fwait
in
adc
inc
lods
fadds
add
rclb
pusha
sub
dec
in
jmp
idivb
and
dec
adc
push
mov
push
add
into
xlat
add
mov
out
pop
push
pop
mov
das
jnp
clc
mov
xchg
stos
or
rcrl
cli
imul
bound
push
repz
jp
or
xor
or
mov
lret
inc
and
xor
or
icebp
orl
push
push
add
dec
xchg
push
push
test
dec
into
out
adc
movsb
add
inc
aas
xor
pop
xor
jns
cmp
jg
aas
and
lret
inc
cmpsl
loopne
out
das
mov
mov
xchg
loop
pop
or
add
into
push
jne
xor
cmpsb
dec
or
dec
pop
js
xor
push
sub
divb
cs
repnz
and
fsts
pop
aas
pop
cmpsl
insb
push
call
std
lods
aam
test
hlt
cld
notb
or
jmp
adc
in
mov
jg
call
dec
or
jecxz
add
sbb
xor
repnz
mov
mov
test
add
decb
out
repnz
js
pop
sub
js
mov
loope
rclb
xor
jbe
pop
repnz
fmull
mov
sbb
out
dec
lea
roll
sti
mov
in
or
daa
push
jge
add
enter
popa
mov
outsb
divl
xchg
scas
and
imul
sbb
mov
ss
orb
add
cmp
pop
adc
pop
in
mov
testl
addr16
sbb
ret
mov
bound
addl
in
cli
mov
pop
xchg
push
or
add
xor
adc
repnz
cltd
dec
sub
jecxz
xchg
mov
or
and
inc
cmovp
inc
jmp
stc
jg
test
fs
out
mov
and
jne
out
inc
mov
cmp
pop
xor
sub
popf
in
sbb
fcoml
and
pop
and
lea
insb
xchg
dec
and
adc
dec
scas
mov
jge
pusha
rorb
or
sub
imul
andl
mov
mov
rcr
xchg
push
inc
insb
mov
neg
push
mov
or
sbb
cwtl
inc
mov
enter
out
cmp
scas
mov
imul
mov
add
mov
jno
sahf
popf
loopne
sarl
jbe
leave
pop
arpl
into
xchg
jno
popa
jmp
leave
ja
js
popa
hlt
divl
and
push
mov
sbb
ss
mov
dec
xchg
dec
sbb
jmp
fadd
adc
and
cmp
lds
imul
or
addr16
pop
ja
sbb
mov
inc
mov
push
sbb
ffree
nop
xchg
cmp
pop
sbb
cmpsb
mov
and
stos
cwtl
mov
dec
pop
add
inc
jo
or
test
add
and
mov
pop
pop
push
pop
jmp
sub
push
jmp
xchg
aas
stos
mov
xor
cld
add
dec
cmp
jae
fs
loop
xchg
sub
push
push
sub
mov
daa
and
pop
xchg
or
push
out
and
jg
jbe
pusha
shlb
iret
add
sub
xor
add
std
out
ljmp
push
hlt
test
and
movsb
mov
mov
out
imul
sub
callw
scas
cmp
xchg
roll
jl
pusha
xor
pop
jne
mov
subb
int3
xlat
incb
icebp
repnz
mov
add
jne
mov
xor
push
rcl
mov
cmp
jl
ss
clc
cmp
pop
and
jmpw
subb
insb
or
push
sub
popa
sub
add
jno
sbbb
lret
mov
scas
loopne
or
sub
iret
rcrb
imul
fstpt
ret
add
cmc
enter
sahf
push
out
fs
mov
cmp
pusha
sbb
ljmp
andl
lahf
or
fsubs
into
push
mov
andb
dec
or
adc
mov
inc
ja
sbb
lock
pushf
mov
push
push
add
jmp
dec
repz
leave
push
push
in
cmp
adc
int3
pusha
add
or
sub
test
mov
jge
repnz
mov
incb
shr
in
lcall
rcrl
movsb
pusha
xchg
push
jo
test
mov
and
cmp
add
mov
je
ret
aam
orb
sbb
inc
lea
pop
in
mov
add
and
subb
lock
pop
mov
xchg
or
fs
adc
jb
je
call
pop
add
pop
or
push
mov
clc
fsubrl
push
repz
jmp
add
das
fadds
or
clc
sub
ja
out
add
cmp
push
add
adc
cli
into
cmp
jl
pop
mov
rol
xchg
cld
pop
dec
gs
je
sti
fsubr
ljmp
ret
sub
loopne
jg
cmpl
sub
loopne
or
int
div
leave
fdivp
add
and
xor
jmp
push
mov
bound
das
sub
push
repz
jmp
rcll
ljmp
pop
rolb
xor
pop
push
push
mov
dec
imul
test
pop
mulb
mov
sub
pop
add
dec
jp
cltd
addr16
repz
fadd
lcall
ficompl
test
mov
inc
outsl
imul
sub
pop
cld
loopne
push
cmp
call
jge
xchg
push
push
icebp
xchg
push
pop
and
push
rcr
mov
pop
pop
mov
mov
adc
outsb
xchg
mov
and
jle
add
or
sub
cmpl
mov
stos
add
xor
pop
cmc
lcall
dec
or
sub
jae
or
sbb
xorl
or
or
or
ljmp
sbb
or
inc
in
inc
inc
pop
bound
or
add
mov
cwtl
mov
mov
and
xor
cmpsb
or
aas
sub
ds
push
enter
pop
add
xor
mov
xor
fwait
sbb
mov
enter
add
loope
push
insb
enter
into
add
push
adc
sbb
add
orb
cmp
push
sbb
mov
adc
or
das
or
sbb
andb
les
fisttpl
pop
test
loopne
cmc
js
loop
inc
push
inc
inc
ret
in
inc
fcom
add
add
add
fiaddl
cmp
jecxz
mov
inc
xchg
dec
bound
shlb
call
and
adc
ficoms
sti
ret
sbb
dec
or
loopne
cmp
adc
add
cli
and
jbe
shrb
inc
jns
and
or
push
push
adc
in
aaa
adc
adc
fcomp
adc
jmp
and
push
lcall
adcb
adcb
sub
sbb
movsb
inc
add
lods
adc
pusha
in
dec
fs
adc
adc
add
out
and
pop
sub
inc
xchg
add
add
mov
mov
roll
stos
inc
xlat
add
add
mov
or
cmp
mov
sbb
push
mov
loopne
cmp
orb
into
inc
sysexit
insb
test
jno
inc
mov
inc
pop
fiaddl
dec
inc
push
test
in
push
or
adc
inc
pop
rorb
and
int
inc
aad
inc
ja
nop
cmp
jp
and
xor
pushf
cld
call
out
aas
rcrl
icebp
enter
adc
inc
sarb
push
mov
add
dec
or
or
mov
sbb
lock
fisubrl
cmpxchg
sub
lods
jmp
cmp
add
dec
sbbl
cmp
adc
adc
mov
aas
sub
out
popa
loopne
shl
cmp
pop
popa
movsb
das
mov
inc
add
xor
shr
jns
push
inc
scas
iret
pop
or
std
sbb
mov
adc
ss
int3
dec
incl
or
jl
push
ja
jb
jmp
fisubs
or
xor
shll
mov
adc
das
movsl
xchg
andl
dec
in
loope
sbb
or
jmp
xchg
pop
cmpb
mov
push
js
add
and
mov
add
shr
push
jo
js
ffreep
pop
mov
outsl
fimuls
mov
pop
out
pop
mov
xorb
pop
pop
pop
daa
xor
push
and
ss
or
lods
mov
push
dec
inc
add
xor
mov
sub
xchg
imul
aad
inc
mov
jle
xor
push
jmp
xchg
cmpb
push
or
sub
cmc
mov
in
dec
add
sbb
add
push
or
inc
push
mov
daa
jne
nop
repnz
mov
push
or
js
repnz
inc
mov
jns
int
pop
ret
jp
cmp
jne
push
add
cld
data16
das
scas
and
daa
dec
fsubl
fcomp
push
das
push
mov
jno
lcall
out
mov
stc
pop
mov
jmp
jmp
pop
bound
dec
jecxz
add
fs
or
xlat
sub
dec
aad
or
clc
cmc
call
xor
loope
jl
inc
lret
lret
cld
push
jmp
or
cli
xlat
shrl
leave
ret
or
jmp
setae
je
dec
fisttps
mov
inc
sbb
jge
mov
jo
jg
scas
cmp
lods
xor
inc
xchg
imul
cmp
out
adc
fidivs
clc
fcoms
inc
fwait
cmp
in
inc
mov
add
adc
rcrb
push
lea
adc
mov
push
cs
jb
or
mov
cltd
pusha
clc
lret
sbb
imul
add
xchg
jb
sub
xor
or
and
or
jg
jne
stc
repnz
lcall
or
les
jg
jecxz
adc
jg
jg
pop
lret
or
fisubs
loopne
push
cmp
and
push
lahf
xchg
or
lods
push
in
andb
push
adc
xchg
mov
fs
loop
nop
mov
jne
mov
icebp
inc
movsb
jle
and
pop
xchg
fmull
jmp
iret
jb
shl
cwtl
sbb
inc
mov
std
cmpsl
fsts
and
add
popl
subb
adc
and
out
cli
push
inc
sub
xchg
and
pop
incl
xchg
test
xor
xor
lock
xchg
xlat
push
rorb
sub
out
add
sti
idiv
jmp
repnz
sbb
add
pushf
ret
mov
jmp
jg
push
add
push
jp
mov
enter
xchg
mull
ss
push
sub
lret
leave
test
popf
add
addl
sbb
dec
bound
or
repnz
cs
fstpl
xchg
xor
xor
add
lods
xchg
lret
mov
shll
imul
or
xor
or
jp
push
push
add
inc
sahf
jb
pop
loopne
inc
add
idivb
fdivl
lret
push
insb
cltd
das
pop
or
dec
push
int
dec
cmc
push
push
fldenvs
mov
mov
enter
add
mov
movsb
stc
or
push
imul
movb
daa
shll
and
rcr
push
rorl
sbb
mov
pop
mov
testl
aaa
push
stos
push
dec
or
jmp
fsts
cs
push
in
push
sub
jno
das
ret
add
cmp
adc
dec
adc
lahf
jle
push
test
scas
clc
gs
mov
or
loop
fnsave
outsb
mov
xor
in
nop
clc
addr16
push
jecxz
daa
fiadds
xlat
aas
jns
mov
shrl
addb
inc
push
scas
pop
hlt
imul
xor
push
cwtl
mov
xchg
cmpb
scas
add
jbe
add
pop
xor
add
subl
sti
hlt
cs
push
mov
subb
ret
in
inc
or
pop
pop
xor
pop
divb
or
or
iret
adc
repz
enter
add
imul
cmpsb
push
pusha
jecxz
pop
jp
sub
cli
add
jmp
push
flds
test
cvtpi2ps
sub
dec
aad
je
or
decb
sub
cld
dec
cmp
lock
pop
sub
aad
sbb
insl
idiv
sbb
sbb
and
jb
hlt
jb
lods
adc
in
into
mov
xchg
stos
clc
jge
and
xor
out
xor
adc
cmp
test
je
dec
xor
push
rorl
and
out
movsl
mov
leave
add
or
aaa
dec
jg
and
shll
or
rcrb
add
ja
mov
cli
frstor
lods
or
xchg
lods
stc
fimuls
jne
mov
ret
xchg
sub
or
loop
xchg
sbb
jae
lds
mov
mov
add
aad
jo
pop
and
pop
pop
xor
lds
add
push
aas
jmp
stos
fisubs
movsl
push
mov
push
in
push
mov
xchg
neg
or
lret
sub
pusha
lcall
bound
pushf
scas
dec
popa
push
push
add
xorb
add
push
outsb
sbbl
sbb
clc
pop
rorl
test
xchg
jl
rclb
pop
loope
jns
dec
jno
movb
pop
sub
sub
mov
lock
enter
xchg
jno
shl
add
fidivrs
lcall
adc
cmp
inc
pop
pop
jnp
mov
jmp
repnz
lods
cmp
rorb
xchg
pop
mov
and
out
pop
rorl
sbb
and
or
sbb
jns
adc
jbe
test
xor
mov
cwtl
or
ret
imul
rcrb
rcrl
jge
xor
xor
dec
sub
mov
js
xor
push
add
or
mov
push
out
cmp
aas
fstl
mov
adc
inc
lock
adc
sub
dec
add
push
pop
pushaw
add
dec
sub
push
push
in
lret
lods
pop
add
gs
or
jb
sbb
test
ljmp
cs
pop
mov
insb
or
push
ret
pop
adc
insl
mov
xchg
xlat
pop
add
push
arpl
js
add
dec
stos
lea
adc
mov
mov
filds
enter
inc
jnp
push
add
les
in
pop
sar
call
jp
mov
inc
push
jle
jbe
mov
dec
shlb
fs
mov
popa
inc
jg
leave
and
inc
les
decb
adc
push
pop
or
es
andl
int3
mov
loop
dec
fisttpl
push
adc
sub
xor
and
popa
jbe
cmpsl
repnz
pop
sub
leave
cwtl
sub
add
imul
inc
pop
jmp
movsl
xchg
cmpsl
jmp
push
loope
push
popf
adc
jmp
push
hlt
inc
adc
cld
pop
test
das
sub
jb
leave
add
pop
add
jmp
xchg
inc
imul
fdivrs
or
pop
inc
mov
shrb
push
jnp
lods
push
into
addr16
call
jl
adc
mov
lahf
push
lcall
aam
stos
call
int
filds
call
loopne
ret
sub
icebp
je
xchg
inc
fildll
jecxz
mov
mov
xor
out
pop
adc
jmp
xor
roll
sbb
fsubrp
xchg
pop
mov
and
push
fsubr
push
aam
cmp
sbb
and
mov
push
xor
and
sbb
mov
cltd
dec
shl
dec
fdivrl
imul
and
and
fucomip
punpckhdq
ret
fidivrl
aad
mov
mov
pop
mov
rol
mov
mov
sub
sbb
add
sti
and
iret
inc
add
subb
stc
mov
push
test
testb
repnz
movsb
lcall
cmpsb
ret
popa
movsl
bound
lods
jecxz
push
push
dec
xor
push
mov
or
sahf
das
or
sub
inc
enter
dec
sub
fistps
lods
lret
add
jo
and
jecxz
lods
pusha
push
push
fisttpl
mov
jmp
cmpsb
inc
int3
dec
popf
pusha
shrl
pusha
inc
or
outsb
int
adc
pop
notb
lods
add
stos
and
in
leave
add
sub
jns
dec
adc
or
jmp
pop
xor
jno
cld
and
sub
adc
loope
clc
imul
sub
inc
add
test
jb
push
jne
xor
fcompl
arpl
mov
xchg
into
pop
push
icebp
stc
hlt
add
cmp
jge
es
idivl
jmp
mov
sti
nop
mov
xor
icebp
jl
imul
sub
push
xchg
cmp
mov
adc
rolb
xchg
mov
jmp
inc
aad
loopne
not
add
in
or
loope
dec
add
fst
sub
xor
jmp
testl
imul
out
xchg
fadds
xor
enter
imul
jno
add
js
data16
daa
lahf
dec
pop
mov
adcb
inc
fstpt
mov
subb
pop
cwtl
ss
hlt
pusha
bound
outsb
adc
or
adc
mov
mov
pop
mov
jmp
push
arpl
pop
lret
or
add
repz
insl
sbb
out
xchg
sbbl
cmpl
inc
inc
and
aas
in
mov
notb
jno
gs
cld
cmp
test
jmp
and
mov
inc
pushf
mov
repz
aaa
divl
xchg
pop
stos
xchg
fsubrs
fldl
adc
jl
xor
mov
inc
je
add
inc
push
inc
loope
std
pop
adcb
sub
xlat
add
repnz
scas
add
pusha
cmp
xor
pop
push
cmp
fs
push
jns
and
add
stc
sbb
push
lds
rorb
jae
mov
jmp
sahf
sbb
and
xchg
das
aas
sbb
or
jp
leave
stos
bndldx
or
shl
push
inc
gs
xor
add
xchg
and
sub
jl
shl
add
aas
dec
dec
lds
add
test
push
xchg
xor
shrb
repz
out
and
xchg
jo
loope
int
movsl
dec
stc
in
xlat
insb
cmpsb
push
jmp
jmp
nop
das
mov
mov
add
cmc
mov
pop
test
push
fsts
push
jnp
mov
hlt
jae
sbb
mov
popa
sbb
hlt
stos
sbb
jbe
push
and
cmp
sbb
fs
decl
imul
pop
divl
dec
or
shrb
push
and
push
sbb
xor
aam
pop
push
les
sub
jbe
mov
lret
test
and
in
jbe
cmp
dec
add
movsb
xor
pop
pop
xchg
xchg
sub
rol
and
jge
les
std
cs
mov
xor
ret
push
repnz
out
popf
cli
cmp
mov
xchg
bound
mov
imul
inc
cmpsb
lcall
out
or
sub
push
adc
pop
jl
adc
fistl
pop
push
sub
sub
push
xlat
arpl
xchg
mov
mov
and
in
mov
add
dec
sbb
and
lea
nop
push
mov
outsl
inc
adc
fstl
or
fucomip
mov
das
scas
icebp
testb
jle
scas
iret
movsb
pop
outsb
rclb
adc
mov
testl
dec
jmp
dec
and
jge
and
adc
roll
adcb
test
mov
push
leave
ja
lcall
xchg
rorl
cmp
idiv
aam
pop
imul
and
sbb
insl
pop
out
mov
or
test
push
sub
sub
xchg
cmp
mov
cli
inc
je
in
rorl
mov
pop
andl
lret
pushf
ja
pop
imul
test
pusha
dec
sbb
jle
out
adc
cmp
adc
and
xchg
inc
cltd
jmp
cli
sub
ds
cmp
pushf
push
sahf
jmp
push
pop
inc
enter
int
in
out
xchg
pop
cs
push
out
insl
dec
xor
adc
push
mov
xor
push
fs
push
cmp
int3
pop
cmp
sub
loopne
sti
rcrl
lds
fbld
mov
adc
mov
imul
inc
jno
mov
push
or
sub
fwait
or
push
dec
imul
out
out
loope
push
and
sub
mov
jmp
adc
add
outsl
sti
movb
pop
jne
or
sti
incb
sub
int
lahf
add
xor
cmc
mov
xlat
or
insl
dec
pop
fstpl
scas
int3
test
sbb
daa
xor
shll
fsubl
pop
sbb
jns
inc
icebp
icebp
push
and
mov
mov
xchg
cmpxchg
sub
cmpsl
adcl
test
mov
out
mov
and
mov
ja
jl
int
movsl
pop
das
sub
push
jmp
xchg
scas
flds
xor
sub
lods
sub
pop
pop
insb
mov
aad
push
or
lcall
fstps
xchg
shl
dec
cmp
lods
bound
cmp
push
or
mov
and
loop
lock
push
cmc
pop
sub
xchg
mov
out
pop
push
loope
or
loopne
lods
xchg
cmp
push
or
clc
sbb
ss
popf
inc
pop
mov
aad
or
xor
lock
add
and
adc
push
das
or
add
pop
sub
pop
cltd
clc
add
rclb
mov
mov
pop
jbe
add
inc
pop
fwait
orb
loope
push
lea
sub
scas
jbe
jl
add
or
gs
mov
int
inc
aaa
mov
mov
sti
push
cli
ja
nop
out
pop
xor
push
jmp
push
movsl
ja
mov
cmp
ror
jbe
push
or
adc
mov
sar
mov
sub
adc
mov
lret
int3
rorb
inc
add
cmp
test
and
jmp
sbb
and
mov
and
adc
rcrl
inc
sub
ficompl
mov
inc
call
icebp
push
pushf
pop
sub
jge
jno
fwait
push
movl
dec
pop
stos
inc
nop
jmp
scas
mov
cmp
inc
cli
mov
inc
out
sti
inc
mov
sub
xchg
jo
gs
dec
dec
or
lcall
dec
jmp
lret
inc
pop
fs
lock
sub
fists
pop
jp
jo
shl
push
cmp
xor
test
iret
mov
dec
adc
add
mov
pusha
adc
pop
scas
fcomp
push
sbb
out
sbb
int3
or
sbb
pop
mulb
mov
test
fucomip
stos
loopne
add
xor
stc
push
pop
ds
lcall
jle
inc
sbb
je
or
lds
out
imulb
jmp
cltd
test
xor
adc
sub
mov
or
ss
xchg
and
pop
inc
fwait
push
inc
shll
cmp
scas
cld
pop
test
sbb
push
rol
sti
mov
push
outsb
outsl
mov
sub
push
movl
std
repnz
add
popa
loope
lods
sub
not
push
xchg
mov
ret
xor
mov
pop
sub
scas
mov
loope
pop
adc
mov
mov
adc
push
sub
dec
add
dec
push
clc
cmp
inc
pop
add
jmp
mov
daa
push
in
push
pop
not
add
fcoms
dec
mov
rcrb
add
out
sarb
or
pop
hlt
cmpl
out
and
push
jmp
sbb
leave
sub
icebp
xchg
fnstcw
jno
lret
sub
inc
xor
push
icebp
dec
cmp
push
pop
sbb
hlt
jmp
adcb
or
nop
dec
cs
mov
jo
pop
cli
dec
pusha
xor
jecxz
xor
pop
jno
jge
or
and
add
fiadds
jecxz
in
add
in
lods
cmp
push
dec
add
push
pop
xor
push
push
dec
xchg
pop
push
pop
inc
test
nop
or
jmp
sti
pop
push
push
loopne
cs
stos
test
or
pop
cmpb
xor
mov
sbb
fcoms
mov
or
add
sub
or
aam
add
or
push
adc
sub
sbb
sbb
inc
ljmp
mov
push
mov
sbb
pop
imul
sbbl
cmp
xchg
mov
call
or
inc
add
cmpsb
or
pop
lods
daa
push
int3
scas
leave
jp
jle
lods
mov
jg
loopne
aam
in
lret
pop
repnz
jp
dec
adcb
addb
inc
or
adc
subb
sbb
dec
pop
popa
adc
or
add
push
ret
fisubrl
cmc
dec
cmc
addb
rorb
cld
jo
test
loopne
or
pop
and
and
insl
ds
mov
jecxz
and
push
mov
sub
sub
mov
std
add
lret
or
mov
or
hlt
push
push
ffreep
push
jge
push
fsubs
mov
add
rcrl
scas
or
dec
xlat
and
loope
jne
out
std
pop
sahf
stos
arpl
data16
mov
cmp
aaa
jno
movsl
shrl
xor
les
or
pop
jbe
mov
test
fiadds
fidivl
je
jp
in
dec
and
mov
lods
mov
gs
sti
out
stos
dec
enter
fsubrl
push
cmp
out
adc
les
daa
mov
adc
xor
pop
push
pop
lods
pop
sub
add
jmp
mov
mov
adc
mov
add
sub
sub
add
ud2
in
sbb
and
pop
pop
lret
scas
incb
inc
mov
cmp
fucomip
and
xchg
cs
sub
stos
cwtl
jne
daa
mov
pop
inc
xchg
fists
and
jno
stc
movsb
adc
jg
mov
rorl
lods
push
fadds
mov
mov
std
xor
in
jbe
mov
fsubrs
inc
loope
outsb
es
xor
push
ret
mov
lahf
push
mov
add
add
cmp
dec
jge
pushl
nop
insb
cmp
into
sar
push
and
lea
fidivl
and
and
inc
push
mov
mov
fidivs
mov
add
add
lds
pop
pop
pop
es
sbbb
cmp
mov
call
or
in
repnz
jle
shlb
les
add
int3
cbtw
hlt
push
sub
sar
ret
mov
cmp
cmpl
sti
cli
add
in
bound
jle
and
adc
lahf
insl
test
mov
outsb
stos
add
lret
loope
dec
jecxz,pn
inc
or
or
cmpsb
ljmp
mov
imul
or
pop
xchg
or
xchg
lret
push
jp
and
adc
push
ljmp
pushw
sti
or
out
mov
loopne
mov
xor
sbb
daa
sbbl
mov
lret
and
mov
add
jl
and
out
or
xor
ret
cmp
mov
fs
outsb
adc
stos
xchg
fildl
mov
jae
xlat
movb
sub
pusha
pop
push
jl
adc
pop
mov
mov
int
iret
push
push
push
in
in
cwtl
ficomps
lock
shl
add
inc
fsubs
lahf
je
or
jno
int
xor
fs
mov
cld
shr
add
pop
or
aam
mov
sbb
push
syscall
movsl
ljmp
cltd
inc
inc
jecxz
sahf
fildll
xchg
mov
outsl
cwtl
adcl
adc
xchg
mov
shr
fcompl
dec
cmp
cltd
inc
ret
lcall
cs
stos
adc
adc
jns
or
push
xchg
jmp
adc
sbb
jmp
xchg
jg
mov
loop
xorb
clc
dec
in
roll
ret
je
sub
lock
xchg
daa
or
sbbb
mov
test
and
shl
jmp
jmp
shr
or
xchg
lea
ror
or
iret
bound
add
jmp
mov
pop
stc
and
icebp
jnp
push
mov
mov
mov
xchg
mov
xlat
shrb
jnp
fwait
and
and
push
xor
pop
mov
rcrb
jo
mov
jmp
push
repz
daa
jno
add
or
ret
imul
push
ss
mov
out
popl
rcr
scas
dec
jae
popf
mov
push
sbb
jle
daa
fstl
xchg
jne
fxch
lcall
loope
add
inc
mov
outsl
pop
inc
mov
push
sbb
icebp
lea
pusha
or
dec
add
cmp
pop
scas
shll
dec
jmp
fldcw
loope
sub
dec
and
rolb
outsl
push
pop
or
daa
hlt
inc
mov
mov
xor
inc
scas
jmp
std
pop
lret
popl
and
push
xor
xor
push
xlat
adc
orl
dec
mov
push
pop
xor
ret
lds
test
mov
mov
bound
rcll
xor
and
aaa
pop
cs
xor
bound
mov
jo
and
hlt
mov
push
push
bound
add
sub
pop
imul
cltd
sub
addr16
divb
ja
cmp
cmp
out
leave
psubb
and
clc
add
jbe
push
xor
jmp
fisttps
lods
add
popa
pusha
inc
or
jl
push
mov
cltd
and
push
or
and
sub
int
xor
jnp
incl
mov
jl
and
movsb
fs
mov
xchg
push
pop
mov
xchg
cmp
push
add
push
js
in
sbb
neg
add
nop
sbb
rcrl
icebp
lahf
or
xor
loopne
or
imul
mov
inc
ror
add
int3
mov
lock
lea
and
pop
pop
xchg
push
mov
jle
pop
pop
inc
out
inc
xchg
mov
fcmove
call
sub
arpl
fstpt
pop
loop
sub
insb
pusha
repnz
jmp
pop
xchg
push
mov
stc
add
pop
inc
xchg
sbb
dec
das
bound
dec
out
or
sarl
jecxz
movsl
int3
inc
shlb
and
pop
sahf
pop
scas
sub
movsb
add
jo
inc
jmp
or
out
loope
cmp
mov
xchg
jge
insb
neg
rorl
movsl
jne
iret
out
xor
fidivl
mov
jg
pop
pop
dec
mov
aam
ret
mov
dec
nop
scas
inc
fcomi
fldcw
mov
sub
jo
sub
roll
insl
push
pop
ret
or
into
pop
push
push
inc
leave
sub
cmp
or
push
push
push
add
out
add
outsl
int3
cmp
or
and
pop
in
xchg
add
rorb
cmc
add
dec
pop
movsb
mov
lods
mov
mov
dec
lock
lods
pop
adc
sub
jmp
sahf
push
push
push
push
sarl
adc
notl
testl
push
data16
or
sub
add
dec
xor
incl
sub
mov
push
dec
cmpsb
movsl
cwtl
add
mov
push
mov
push
mov
jb
sub
xchg
and
jg
pop
cmp
scas
popf
and
dec
and
or
flds
sbb
dec
pop
lret
pop
rolb
mov
lret
add
iret
jmp
jno
xlat
push
nop
dec
mov
dec
stos
inc
repz
mov
std
add
ds
sub
jnp
push
push
fndisi(8087
mov
sbb
inc
xor
push
in
adc
sbb
movsl
or
inc
jle
out
mov
xchg
ljmp
sbb
xchg
fsubl
subl
imul
xor
adc
or
pop
mov
sarl
mov
clc
inc
out
testl
xchg
dec
fisttps
pushf
pop
xchg
bound
cmp
and
adc
add
cmpsl
xor
push
and
aam
mov
imul
cmp
pop
pop
loop
outsl
jbe
cwtl
adc
or
mov
add
in
and
xlat
add
out
add
push
push
sub
lcall
inc
mov
jno
hlt
adcb
cmpsl
push
and
cmc
push
pop
add
mov
cmc
mov
jmp
aaa
dec
je
dec
sbb
adc
dec
xchg
out
je
aam
jnp
add
sub
adc
jnp
fucom
xor
jns
cmovl
add
sbb
daa
andb
les
xor
xor
fcmovnb
mov
sbb
sbb
cmp
out
je
push
hlt
repnz
mov
in
or
mov
es
out
add
lds
push
sarl
idivb
pusha
repz
xor
not
xchg
popa
lret
mov
mov
or
dec
dec
mov
mov
push
mov
push
xchg
sub
jl
dec
or
pop
jmp
icebp
aaa
dec
sti
lods
lret
mov
icebp
add
mov
movsl
pop
scas
mov
push
mov
inc
cltd
or
add
push
in
stc
cmp
push
jecxz
sbb
pop
das
outsl
jne
pusha
data16
int3
jge
mov
or
mov
mov
xor
pop
int
dec
loopne
dec
add
jg
xor
dec
repz
pop
adc
call
dec
jmp
push
mov
subb
jmp
ljmp
or
push
or
in
pop
sub
inc
nop
inc
and
dec
fs
xchg
mov
rorb
jmp
loop
nop
push
imul
push
push
add
inc
inc
stc
js
idivb
jl
jl
ret
fnsave
sti
mov
aas
stc
xchg
mov
mov
push
dec
mov
push
and
pop
push
sbb
ds
sub
mov
or
mov
or
cmovle
gs
popf
push
cmpsb
and
add
push
imul
not
dec
out
cmpsl
mov
into
addr16
insl
clc
cwtl
inc
xor
loop
rcll
jp
ljmp
rolb
inc
xlat
in
or
mov
jae
lods
mov
push
cwtl
or
push
rcrb
sub
xor
pop
mov
cmc
loope
cmp
add
push
pop
insb
loop
cld
pop
mov
mov
icebp
mov
push
push
jge
stos
mov
add
pop
out
test
scas
mov
or
dec
movb
into
outsl
daa
lods
rclb
std
mov
loop
lahf
shlb
xchg
adc
ljmp
mov
add
xor
cld
lds
jno
jne
sub
sbb
add
pop
push
jg
add
xor
mov
enter
xchg
addr16
sub
add
popa
insb
pop
push
pop
icebp
test
call
add
addl
test
push
cmpsl
rcl
jge
pop
add
fidivl
psubusb
add
inc
sbb
fs
shlb
imul
pop
pop
pop
inc
xchg
adc
sub
xchg
sbbl
mov
sub
repnz
mov
mov
imul
fisttps
dec
ret
sbb
add
mov
push
add
jmp
out
mov
imul
add
push
xor
jnp
pop
mov
xchg
dec
dec
cmp
out
sub
mov
jo
adc
jecxz
jno
inc
into
mov
cmp
movsl
cmp
fisttps
xchg
iret
push
and
sti
sub
push
xchg
stc
incb
mov
out
mov
sbb
xor
pop
mov
outsl
mov
xchg
sbb
out
push
pop
stos
pushf
stos
pop
mov
enter
je,pt
mov
push
imul
dec
imul
and
fimuls
xchg
or
adc
cmp
adc
testl
lods
pop
jg
inc
and
mov
cltd
out
sub
cmc
nop
mov
bound
add
xchg
add
xchg
pop
jns
push
jl
cmp
jmp
sub
icebp
or
xor
clc
pop
inc
cmp
shrl
sbb
adc
add
pop
and
jl
pop
out
rclb
inc
sbb
push
divl
jmp
xchg
daa
pop
and
outsb
xor
push
mov
xor
rclb
push
cmp
mov
cmp
xchg
adc
mov
xchg
ljmp
fildll
and
xor
dec
or
test
stos
xor
mov
jb
add
sbb
pop
in
cli
adc
cmpsb
mov
dec
xor
fists
lahf
subb
divl
or
fidivrs
jmp
enter
popf
inc
jmp
mov
xchg
std
mov
push
mov
movq
mov
jp
into
pop
loopne
and
fdivrs
cmpsl
mov
hlt
adc
sub
push
add
adc
lock
or
outsl
push
cs
repz
fwait
adc
lahf
pop
add
fidivs
ret
pop
push
nop
pop
mov
in
out
pop
movsb
test
jmp
aam
add
adc
mov
orl
push
fistpl
and
jle
add
int
cwtl
and
orb
dec
or
sahf
scas
xor
pop
imul
push
mov
pop
push
out
addl
cwtl
dec
aas
mov
and
scas
mov
sbb
out
push
lret
outsb
out
sub
mov
pusha
push
or
lods
daa
jb
das
jmp
call
hlt
xchg
f2xm1
adc
jg
dec
aas
pop
pop
out
push
add
out
sbb
cwtl
lret
xor
push
repz
movsb
or
pop
sub
lahf
add
mov
cmp
push
add
sub
stos
negl
scas
xor
adc
dec
pop
inc
test
popa
mov
and
push
and
dec
fwait
mov
stos
sub
inc
popa
in
push
sub
sub
sub
cmp
jae
js
mov
in
pop
push
inc
enter
push
pop
fwait
rclb
jl
imull
loop
iret
dec
xor
xor
push
pop
mov
add
jmp
mov
and
ja
cmp
sub
dec
mov
jns
sahf
aaa
dec
pop
jmp
loope
dec
dec
lock
mov
or
mov
push
lcall
dec
dec
rclb
addb
in
or
xchg
negl
xchg
or
das
fnstenv
pop
and
leave
int3
lcall
mov
xor
fdivl
xorb
movsb
push
mov
sub
test
or
repz
xor
sbb
add
push
pushf
pop
fildll
stc
push
jns
iret
das
adc
outsl
push
dec
xor
stos
and
loope
adc
iret
jnp
xor
enter
pop
shlb
mov
jp
sbb
push
nop
and
rcrl
popf
push
les
daa
clc
jmp
not
leave
fsubs
mov
movsb
sub
pop
xchg
jnp
mov
lret
push
in
pop
jno
adc
inc
mov
sub
shl
cli
loopne
push
sub
mov
xchg
push
mov
and
jno
add
or
sub
jmp
push
push
mov
add
in
mov
push
dec
stos
lret
popa
aaa
jecxz
dec
sub
lret
pop
call
push
sub
or
push
ret
jbe
dec
enter
push
jecxz
shlb
inc
cmp
add
jae
add
lret
mov
dec
xchg
adc
and
cmp
push
ficoms
xor
push
sbb
sub
pusha
jne
xor
mov
mov
stos
sub
xchg
pop
xor
or
jmp
mov
ljmp
dec
ret
xor
cltd
sar
mov
fs
bound
jne
or
sbbl
jmp
xor
pusha
xchg
adc
mov
mov
cs
sbbb
loopne
sub
pop
xchg
sti
es
mov
dec
in
and
mov
pop
sbb
jmp
sub
fisubrs
pop
lahf
add
add
out
mov
mov
icebp
dec
xor
xchg
adc
loopne
inc
cmp
push
xor
adc
mov
aad
mov
and
and
jo
addl
jge
imulb
les
repz
xorl
out
push
xchg
xor
out
icebp
bound
push
dec
lock
shlb
std
jns
js
fimuls
sub
inc
mov
add
jp
jl
mov
test
add
arpl
sub
push
outsb
lret
mov
into
pop
cmpb
mov
arpl
in
jmp
add
incl
inc
mov
push
sub
lcall
add
aad
add
sbb
scas
je
mov
mov
xor
sbb
out
and
jl
add
push
lods
insb
mov
inc
repnz
into
dec
mov
repz
push
pop
popf
sbb
fnstcw
imul
push
dec
pop
out
imul
pop
xchg
data16
dec
pop
cmp
cli
push
icebp
sbb
xchg
jae
mov
sub
pop
ljmp
mov
mov
jg
sbb
rol
pop
adc
repnz
xchg
imul
jmp
jo
sub
rcll
lods
sbb
sbb
jg
lds
push
jmp
push
fisttps
jmp
test
and
mov
jno
or
add
adc
sbb
dec
add
not
lahf
or
leave
jmp
xor
jne
mov
mov
add
lods
mov
adc
int3
dec
push
out
sbb
outsb
xchg
es
fmuls
adc
and
or
xor
xchg
not
jg
imul
pusha
aas
push
scas
popa
and
or
push
mov
std
mov
or
push
adc
cli
jge
fldcw
in
pop
add
jle
pop
push
push
xchg
scas
ret
or
pop
add
faddl
xchg
leave
sub
add
fwait
and
pop
dec
add
lahf
sbb
repnz
lds
aad
jecxz
or
sbb
lahf
cli
add
adc
xor
cld
jmp
test
cli
mov
mov
xor
jns
iret
flds
push
adc
dec
mov
xchg
mov
sub
icebp
add
pop
push
pusha
mov
dec
nop
add
or
or
adc
or
inc
notl
fcomip
pusha
je
das
and
orb
inc
mulb
or
push
push
push
push
xchg
xchg
std
scas
inc
pop
jb
sub
dec
shlb
xor
movsl
in
sub
dec
sbb
mov
lcall
mov
ljmp
outsl
inc
sub
or
adc
sub
add
ljmp
fstpl
imul
add
cmp
push
fimull
jae
sbb
and
inc
adc
cwtl
test
xchg
mov
jae
dec
or
js
adc
sub
stos
bound
dec
cld
mov
pop
pop
mov
push
sub
dec
pop
rolb
push
popw
jmp
push
push
mov
cmpsb
pop
jl
sbb
movsl
mulb
pop
jo
stos
out
jl
adc
sbb
rcl
jecxz
fmull
or
dec
and
dec
mov
movsb
adc
js
xor
int
jp
push
hlt
scas
lea
inc
jno
inc
loop
in
repz
mov
cmpl
push
fistpl
dec
inc
mov
aad
pushf
and
rorb
rolb
mov
mov
cmovge
shrl
jbe
sti
aaa
ss
adc
fucom
ret
pop
xlat
test
test
jle
push
or
add
sub
and
pusha
xchg
xchg
rclb
fdivl
dec
mov
sub
sub
add
int
gs
pop
test
sub
jbe
mov
sbb
jno
sbb
cltd
and
aas
out
add
push
mov
repz
sahf
test
clc
in
lds
xchg
jmp
push
jecxz
dec
xchg
jge
xor
fcompl
ret
jb
shll
sub
mov
jp
xor
push
subl
sub
push
xchg
push
stos
loope
inc
pop
out
cmp
subb
hlt
sbb
xchg
movb
nop
or
mov
sub
dec
mov
push
sub
mov
or
outsl
int
out
adc
push
out
add
es
aas
pop
das
cmp
ja
js
jmp
adc
push
mov
add
jmp
jmp
sbb
orb
bound
into
mov
xchg
test
shr
add
ret
pop
xor
ret
or
jmp
pop
idiv
and
add
sbb
push
inc
adc
fs
pop
xor
jmp
es
fs
loop
pop
stos
fsubl
cld
jp
mov
jmp
mov
sub
inc
out
movb
jo
cmp
push
jmp
daa
jnp
push
mov
mov
mov
aad
cmp
fnsave
mov
mov
lret
pop
lock
xlat
jmp
add
cltd
add
jb
pushf
das
inc
mov
jmp
pop
andl
mov
das
and
dec
push
xchg
push
sarl
sbb
shrb
pop
adc
push
stc
sarl
stos
out
lcall
sahf
loope
cld
jnp
loop
jecxz
mov
and
pop
jbe
sub
shl
mov
scas
xlat
sub
or
push
cmp
pusha
cmpsb
cli
xor
adc
push
fstl
test
repnz
xor
pop
pop
sub
mov
sbb
mov
inc
fwait
push
pop
sbb
and
lods
adc
dec
cs
pusha
inc
ds
outsl
cmpb
sarb
orl
push
xchg
xor
pop
negb
push
or
sbb
and
icebp
mov
lock
sub
push
add
lcall
stos
test
sub
pop
cmp
xchg
stc
jl
rorb
ja
and
test
adc
int3
mov
icebp
sub
js
sahf
sahf
out
adc
push
aad
mov
push
mov
push
cmc
inc
xchg
popa
std
sti
jae
pop
pop
push
enter
mov
xchg
icebp
push
gs
shrl
enter
push
adc
ret
pushf
mov
out
sbb
jmp
fucompp
movsbl
and
xchg
dec
in
jbe
pop
pop
inc
jns
adc
mov
or
mov
xchg
sbb
fmuls
cltd
push
in
lods
movsb
imul
mov
jmp
xchg
pop
cmp
mov
lods
sbb
and
add
adc
sti
fldenv
inc
mov
mov
pop
pop
adc
xchg
lds
push
cmp
into
rorb
lock
out
dec
push
testb
add
inc
xlat
and
push
mov
sub
xor
inc
xchg
je
add
sti
enter
pop
mov
lahf
and
pusha
shr
sbb
xor
push
pop
loopne
push
lcall
push
mov
mov
ror
lahf
add
pop
dec
stc
imul
jo
and
push
mov
scas
inc
in
loope
push
and
sub
push
es
std
rolb
add
push
inc
xchg
adc
cmp
push
adc
pop
or
lods
pop
lods
push
push
mov
sub
push
jns
add
push
ret
ret
mov
pop
jl
xchg
pop
pop
pop
jg
shlb
out
lds
call
add
in
aas
add
shr
shlb
adc
mov
dec
mov
bound
add
aad
lret
jns
into
out
sub
mov
pop
fstpl
pop
mov
mov
or
or
xor
sbb
mov
iret
add
movsb
cltd
mov
sub
push
incl
sub
mov
push
xchg
jmp
nop
sbb
insb
pop
pop
sbb
fmull
mov
xlat
ss
int
fildll
inc
outsl
les
ljmp
sahf
pop
pop
scas
sub
and
movsb
mov
jmp
pusha
inc
xor
cmp
movsb
push
fbstp
orb
loop
dec
xor
pop
jg
inc
rorb
imul
lds
push
pop
push
fnstsw
int
jae
mov
inc
and
aas
push
jmp
pop
ficomps
mov
cmp
inc
jge
jg
repz
inc
jnp
xor
addr16
cld
sub
mov
adc
fldenv
jbe
cmc
lahf
or
sbb
ret
dec
or
xchg
dec
cmp
loop
ret
sbb
and
nop
xchg
add
adc
clc
test
or
gs
repz
cmp
inc
sub
sub
dec
pop
icebp
dec
pusha
push
inc
xchg
push
or
inc
notb
dec
popa
pop
or
jp
icebp
inc
jo
mov
fimuls
mov
jnp
clc
cmp
cs
cli
movsb
call
andl
imul
aas
lods
dec
dec
enter
xor
sbb
push
mov
jge
lahf
cld
mul
add
inc
out
pushf
sbb
and
int3
push
fcomps
pop
inc
and
inc
outsl
add
mov
or
mov
roll
pop
popf
cmp
incl
sti
repz
jle
lahf
daa
shll
sarb
adc
hlt
dec
pop
stos
inc
jmp
sti
enter
repz
mov
test
cli
testl
call
add
inc
and
imulb
cwtl
mov
inc
imul
in
mov
orl
mov
hlt
inc
xchg
jmp
lahf
push
lock
mov
mov
loop
inc
leave
shl
rorb
inc
and
pusha
mov
push
jbe
popl
ds
sub
orb
push
mov
xor
inc
ljmp
call
inc
cmpb
lock
sbb
ja
inc
push
or
daa
or
arpl
push
test
pop
pop
inc
mov
add
jl
add
mov
sbbb
hlt
adc
mov
scas
ret
jmp
insl
push
hlt
and
mov
aaa
push
cld
mov
xor
push
mov
scas
add
popf
enter
mov
sti
outsl
sahf
xlat
inc
sbb
sub
cmp
dec
ja
int3
push
push
jo
mov
movsb
gs
xchg
fists
call
mov
mov
pop
jbe
inc
movsb
jb
sbb
push
xor
aaa
test
sbb
add
mov
xchg
dec
adc
leave
rclb
xchg
int
or
mov
and
adc
xor
mov
push
jb
pusha
jl
xlat
mov
into
inc
push
pushf
movsb
add
add
sub
push
sub
ja
pop
incb
or
adc
xchg
or
mov
adc
jnp
xchg
cwtl
xor
clc
loopne
mov
movsl
ret
pop
or
adc
sub
or
or
cmc
xchg
cmpb
push
inc
data16
jbe
pop
inc
ljmp
aas
jae
sbb
mov
cld
sub
loopne
hlt
sub
lahf
cld
adc
fisttps
sahf
or
inc
mov
mov
outsl
or
pop
addb
pop
mov
pop
xor
enter
adc
jo
mov
sbb
jl
sub
hlt
lahf
jmp
mov
mov
scas
push
je
imul
inc
neg
add
rclb
setnp
pop
mov
push
sub
lock
add
or
xchg
aam
push
inc
sbbl
stc
push
dec
sti
adc
pop
jmp
movsl
sbb
or
sub
mov
mov
aad
lods
pop
ljmp
bound
dec
mov
cmp
pop
xor
inc
xchg
mov
in
aam
ja
dec
xchg
out
xchg
and
and
lahf
loopne
mov
scas
or
or
push
adc
into
lock
mov
fbld
dec
jg
xlat
es
inc
and
dec
pop
bound
or
push
jnp
imul
sub
inc
pop
jmp
add
push
jno
add
add
and
imul
adcb
push
cmpsl
loope
mov
pop
mov
pop
inc
add
aaa
and
cmp
xor
jl
daa
push
iret
jp
icebp
jle
adc
sbb
sub
shr
and
mov
fxch
push
mov
add
jno
cmp
shll
jle
pop
frstor
shr
add
test
inc
mov
out
mov
js
lds
mov
and
sub
jmp
jp
sti
test
mov
clc
js
in
loopne
dec
inc
jbe
sub
mov
in
xor
shll
add
sub
leave
ljmp
adc
jecxz
jnp
adc
in
xchg
xor
lods
mov
fstps
icebp
and
js
and
shr
mov
add
iret
pop
shr
dec
jmp
mov
test
or
mov
ds
xchg
out
mov
stos
testl
pusha
dec
int3
sbb
mov
cmc
xchg
adc
pusha
push
push
push
and
xchg
pop
add
mov
test
cs
imul
fs
and
pop
jl
test
or
cmp
es
stc
mov
push
test
inc
xchg
data16
and
or
sbbb
or
test
cli
bound
or
imul
mov
ret
sahf
arpl
mov
push
push
test
mov
xchg
and
xchg
std
sbb
inc
fs
pop
or
pop
mov
mov
fstps
fsubrs
mov
add
das
fs
repz
pop
jmp
sbb
out
or
aad
je
nop
pushf
je
inc
push
xchg
leave
inc
dec
divl
or
dec
cmp
cli
subb
jno
je
xchg
addl
btr
test
mov
mov
js
clc
dec
filds
cmp
pop
push
in
in
je
loop
or
xchg
leave
push
out
mov
fstpt
mov
xor
ret
mov
fcomps
mov
out
cmc
movsl
cs
mov
mov
loop
push
mov
stos
pop
mov
es
ljmp
stos
cmp
jb
aam
popa
push
jo
add
xor
add
sub
mov
cmp
shlb
push
push
sbb
fldenv
or
add
inc
push
notl
mov
jmp
nop
mov
xor
inc
fsubrl
insb
jae
add
jmp
or
ja
or
dec
mov
mov
sub
jg
into
loopne
cmpsl
negl
cmp
std
mov
xchg
sbb
lods
or
cmp
in
jns
push
cmpb
adc
push
das
out
or
push
jns
sbb
mov
sbb
movsl
sub
xor
pop
mov
dec
jl
daa
aad
xlat
mov
int
sub
mov
clc
mov
out
xchg
jp
shll
mov
mov
aam
int3
or
cwtl
call
stos
call
fldl2t
add
jle
out
pop
repnz
add
hlt
popf
pusha
xor
xchg
data16
mov
push
adc
sub
xchg
pop
xchg
cld
pop
rolb
leave
ljmp
dec
mov
das
rolb
fnstcw
ret
shrb
push
cmpsl
jno
ds
mov
jb
fdivrs
lods
sbb
idiv
push
cwtl
pop
and
out
add
popl
pusha
stos
mulb
sbb
sub
add
pop
inc
sbb
and
outsl
or
das
adc
mov
ds
cmp
xchg
mov
shr
insl
pop
xchg
out
add
inc
pusha
cmp
jb
or
or
sbb
cmp
into
les
xor
mov
ficoml
iret
stos
xlat
push
add
add
lahf
je
pop
xor
cwtl
orl
outsl
dec
imul
mov
jmp
and
dec
pop
dec
dec
or
dec
shl
lahf
imul
ret
mov
push
add
xor
push
stc
insb
mov
cwtl
jae
jo
lds
or
xchg
xor
push
xor
addr16
or
dec
pop
mov
cmp
jnp
aam
les
cmp
ljmp
mov
jmp
adcb
inc
inc
mov
add
shl
ret
dec
dec
test
inc
jmp
testb
mov
add
ret
jg
and
jl
imul
daa
hlt
lret
cmp
out
adc
hlt
and
jbe
push
pop
xor
jne
ror
jo
jne
rolb
push
mov
popf
pop
jbe
ret
cwtl
xchg
and
sub
or
push
movsb
jae
sub
outsb
xchg
test
call
push
fstpt
cwtl
xor
imul
dec
adc
mov
mov
cli
mov
es
jge
rcrl
push
inc
xchg
cmpsb
pop
adc
dec
add
out
loop
ja
insb
add
imul
sbb
sbb
cmpb
nop
sar
outsl
rclb
std
push
add
jp
pop
dec
data16
mov
mov
adc
push
nop
fiaddl
mull
mov
jno
icebp
push
outsb
repnz
mov
rolb
push
bound
insl
xchg
pop
push
pop
xor
data16
push
dec
adc
sbb
pusha
or
in
movsl
pop
lea
xor
sub
jno
pop
out
and
popa
push
lea
xor
push
mov
add
sub
fdivrs
sub
out
popa
sub
fs
push
daa
in
adc
cmp
or
push
jmp
push
sub
jmp
xorl
and
and
test
sub
dec
xchg
lods
ds
mov
pop
sahf
and
movsb
stos
mov
jnp
test
mov
jmp
jle
jg
mov
imul
inc
cltd
or
pop
add
dec
in
jne
sub
cmp
mov
and
pop
mov
mov
shlb
push
addl
std
ja
jecxz
sbb
insl
sub
or
xchg
add
push
push
mov
rorb
jb
hlt
mov
sub
xadd
or
shrl
cli
and
pop
iret
dec
xor
jno
or
mov
lock
jo
adc
pop
stos
add
inc
add
das
jecxz
pop
test
sub
fdivp
add
dec
sarl
jmp
stc
dec
sub
mov
xchg
pop
jg
sbb
jl
add
insl
pop
mov
mov
das
gs
fnstenv
data16
loop
popa
push
jnp
popa
xor
push
mov
inc
into
push
push
mov
out
mov
jns
xchg
pop
pop
decl
add
ficompl
jp
das
stos
movsl
repz
pop
mov
das
stos
into
mov
test
mov
mov
and
mov
adc
dec
inc
xor
clc
rcrb
test
pop
cmp
jp
or
inc
imul
inc
mov
test
pop
rcl
pop
shl
mov
mov
dec
imul
int3
fisubs
or
out
xor
mov
push
add
and
sbb
lret
loop
loope
arpl
or
jo
cmp
fstps
gs
mov
fldt
rorl
add
mov
mov
loopne
add
mov
out
adc
sub
cmpsl
addb
nop
lds
push
dec
xchg
cmp
cmp
mov
lock
mov
push
mov
or
ret
shl
push
hlt
and
daa
or
es
lret
scas
add
sub
adc
xor
loopne
shr
hlt
jmp
adc
loop
rorb
imul
add
sub
jmp
push
add
sub
imul
lods
sub
stc
outsb
js
and
adc
lret
inc
subl
rcll
cmpsb
cmpb
sub
into
add
jmp
arpl
add
arpl
addr16
or
xor
incl
das
and
mov
fistpll
adc
pop
mov
add
or
les
xchg
clc
call
xor
js
rcrb
cltd
and
mov
mov
mov
shll
rcll
jge
lcall
add
and
sbb
dec
jne
and
movsb
scas
fistpl
or
cmc
jb
iret
xor
faddl
pop
fs
int
inc
or
pushw
push
mov
cmp
fiadds
push
cmovae
or
adc
movsl
push
add
test
ret
or
inc
loope
push
pop
sub
mov
inc
push
mov
add
adc
cmc
rcrl
add
mov
loope
add
pusha
es
dec
flds
push
add
or
inc
lods
aad
sbb
pop
in
ffree
dec
pop
enter
fiaddl
mov
hlt
lret
movsb
sbb
jno
jmp
enter
sbb
xchg
jecxz
pop
jbe
cmpsl
inc
xor
mov
lods
ds
push
xchg
or
jns
or
mov
dec
push
add
test
mov
cmp
pop
call
cmpsb
jp
ret
aas
rcrb
loop
insb
imul
scas
and
mov
jmp
add
ds
sahf
stc
scas
into
and
push
das
inc
addr16
or
inc
icebp
cmp
aas
xchg
add
jmp
dec
test
stos
or
push
push
sti
lret
call
sbb
or
add
xor
lds
stos
add
addr16
and
sub
sbb
fldl
mov
mov
or
movsl
sti
or
inc
dec
push
mov
into
lret
cmp
shrl
xchg
not
push
mov
test
sub
ret
dec
mov
xchg
inc
jae
dec
and
and
cld
jmp
inc
or
fidivrs
jnp
out
mov
mov
xor
and
add
add
dec
push
push
dec
pop
jmp
push
pop
inc
rcrb
pop
jecxz
js
adc
shl
dec
pop
cltd
xor
shrb
xchg
test
xchg
pusha
fsubrs
xchg
and
push
jmp
inc
push
dec
add
pusha
jecxz
pusha
mov
incb
xchg
insl
lret
push
out
mov
sub
rcr
int
jmp
ror
cmp
pop
inc
repnz
sbb
push
xchg
rolb
stos
adc
cs
push
inc
test
jmp
push
mov
pop
testb
dec
adc
pop
mov
shll
mov
mov
push
pop
or
push
xor
popf
fists
movsb
xor
scas
jge
mov
pop
mov
push
and
ret
es
aas
adc
xchg
bound
cmp
rcrb
dec
sub
push
das
cltd
add
outsl
add
lods
push
arpl
xor
mov
bound
fsubrs
shll
xchg
xor
adc
and
dec
hlt
add
sub
jno
sbb
cmp
pop
pusha
and
inc
jbe
mov
test
jecxz
xchg
cs
pusha
js
dec
push
ret
fs
xchg
stos
push
aaa
add
xchg
sbb
cmp
cmp
es
mov
outsb
icebp
int
and
dec
add
sbb
push
pop
out
jne
outsl
mov
scas
sub
adc
iret
xor
add
pop
add
andl
arpl
inc
stos
sti
outsb
outsl
jecxz
mov
ds
bound
jmp
es
push
sub
imul
cmp
mov
sbb
popa
xor
xor
lods
jne
mov
in
pop
adc
inc
dec
push
mov
rcr
pop
rolb
push
xor
push
mov
mov
add
loopne
pop
mov
in
pop
mov
les
mov
jo
or
out
cmp
xor
inc
shl
push
iret
or
cmp
cld
sub
mov
jbe
or
imul
jle
inc
push
xchg
ja
and
inc
push
mov
sbb
sbb
push
pop
jae
insl
clc
adc
jo
sbb
jb
add
xchg
jo
xchg
mov
mov
addr16
gs
pushf
adc
lock
repz
adc
inc
add
add
push
lahf
adc
sbb
mov
adc
outsl
divl
pop
aad
pop
stos
dec
std
push
leave
xchg
ljmp
fisubrs
sahf
jnp
scas
fs
lret
adc
add
enter
mov
mov
mov
rorl
dec
nop
adc
test
mov
addb
mov
xchg
mov
pusha
divl
xor
sbb
loopne
in
mov
push
add
mov
dec
shlb
inc
cmc
adc
or
push
adc
dec
ljmp
fdiv
push
pop
lea
adc
out
xchg
sbb
dec
cmc
pusha
mov
pop
stos
xchg
jl
inc
sti
jo
jge
add
xchg
daa
aas
jl
in
mov
popf
lret
fsubrl
xchg
inc
push
push
jp
add
pop
push
pop
aas
popa
add
mov
out
mov
loop
jne
push
pop
push
leave
push
mov
add
andl
mulb
pop
xor
cmp
imulb
aam
sub
lods
xor
out
inc
orb
xlat
clc
and
mov
dec
adc
sub
add
popf
and
mov
xor
adc
mov
mov
xchg
in
out
pop
in
adc
out
mov
mov
dec
loope
fiaddl
mov
pop
or
inc
dec
dec
test
stos
and
and
fcomps
stos
cmp
cs
mov
xor
bound
mov
out
sbb
jno
xchg
jmp
or
daa
adc
pop
adc
mov
clc
mov
lock
xor
fisubrs
test
jg
or
inc
jmp
test
xchg
jp
push
push
jmp
jl
stos
push
dec
ret
pusha
mov
push
out
insb
scas
repnz
dec
push
jae
vsubpd
out
orl
loope
adc
fs
hlt
mov
lret
sbb
dec
mov
rolb
adc
xchg
xchg
pop
cmp
add
ss
ud0
movsb
jmp
mov
adc
in
jg
push
cmp
xchg
ds
lods
adc
and
push
loope
stc
jae
pop
in
adc
ja
add
cltd
fwait
adc
adc
mov
int3
dec
jbe
js
push
pop
pop
jecxz
ret
or
movsl
add
mov
lret
mov
add
add
sub
add
mov
jecxz
fnstcw
xchg
add
xor
popf
add
add
inc
incl
in
mov
add
cmp
movsl
adc
sub
push
jmp
pop
and
mov
jmp
rcll
loopne
lea
xchg
dec
adc
adc
lods
in
or
sbb
cmpsb
repz
push
sbb
push
pop
cli
gs
or
aad
or
testl
xor
add
xchg
lods
loope
pop
add
inc
or
or
mov
xchg
dec
orb
or
shl
fistl
adc
ss
xchg
in
sbb
or
push
sub
and
cmp
orb
out
mov
add
mov
loopew
adc
ds
xor
push
adc
adc
add
popl
jl
rclb
pop
or
cmp
insb
insb
add
ja
sub
mov
fistpl
add
mov
mov
mov
add
sbb
sub
jae
ret
sbb
cmp
cmp
add
popa
and
push
mov
iret
xchg
pop
sets
dec
pop
sub
in
sub
ljmp
popl
sbb
loop
and
and
push
mov
test
inc
test
or
add
add
in
sub
pusha
xor
adc
pop
xor
rcll
into
nop
aam
push
dec
inc
adcb
adc
je
movsb
cmp
mov
cmp
test
mov
and
add
sarl
jmp
jbe
mov
or
gs
xchg
lret
adc
mov
push
mov
loopne
shl
test
add
out
add
xor
leave
arpl
cmpsl
inc
inc
and
xor
and
push
sbbb
mov
in
xchg
pop
aaa
imul
fisubl
jae
cmpl
lret
out
mov
lds
cmp
scas
cmp
pusha
fneni(8087
sub
pop
icebp
mov
dec
sub
loope
or
sub
dec
rcrb
push
mov
or
dec
ja
movsl
inc
in
popf
push
pop
js
orl
or
pop
bound
pop
mov
mov
jle
push
mov
cmpsl
mov
repnz
insb
cmp
pop
pop
push
cmp
jns
adc
mov
test
pop
loop
add
dec
push
call
popf
pop
push
mov
and
mov
ret
push
jae
jmp
xor
fisubrl
gs
sub
add
push
call
cmc
pop
push
sub
in
add
repz
add
or
xor
and
imul
push
mov
popf
aad
add
test
mov
test
dec
icebp
repz
dec
cmp
dec
movsl
push
sub
jmp
fwait
pop
mov
data16
sub
dec
cmp
add
xlat
ljmp
popf
add
scas
dec
mov
xchg
add
add
dec
cmp
stos
mov
pop
inc
and
dec
ror
sbb
cmp
xorb
dec
inc
jg
jns
sub
mov
stos
ret
jae
jne
inc
push
sti
adc
jp
lret
push
and
push
lret
sub
xlat
mov
mov
and
mov
pushf
orl
lcall
mov
mov
icebp
jno
push
pop
pop
push
push
fwait
xchg
movsl
lahf
and
mov
ret
mull
add
les
fnsave
mov
jb
add
sbb
loop
mov
xchg
jge
push
sub
out
and
add
xor
adc
cli
sub
sbb
dec
and
fsubrl
fstpl
lods
hlt
mov
dec
ljmp
add
aad
pop
add
jle
pop
lahf
or
cwtl
or
sub
add
and
subb
sbb
test
adc
jmp
iret
jo
mov
push
inc
adc
pop
pop
xchg
jo
nop
push
or
inc
adc
loop
add
in
inc
mov
adc
sbb
and
push
sbb
xchg
dec
cmp
jno
lret
push
mov
inc
mov
dec
jmp
cld
movsb
clc
jmp
dec
popf
call
and
call
fldl
fwait
outsb
int3
mov
dec
insl
fistl
and
push
pop
sub
sub
add
push
push
ja
mov
mov
test
xchg
clc
or
mov
xchg
add
jmp
sbb
jbe
fisttpll
test
or
sbb
adc
pusha
test
jo
mov
mov
filds
pop
bound
adc
xor
les
loope
iret
add
push
mov
xor
shlb
add
xor
sub
dec
icebp
sbb
push
test
dec
jbe
jmp
stc
mov
mov
pop
clc
fistpll
test
hlt
js
mov
dec
popa
les
xor
pop
into
xchg
dec
shll
jmp
push
movsb
xor
into
dec
xor
test
fmulp
inc
int
test
mov
sbb
sub
jl
js
sub
pushf
punpckhdq
add
push
nop
out
imul
mulb
jmp
xchg
hlt
mov
out
cmp
roll
gs
insb
movsb
adc
cmp
jbe
bound
and
add
bound
xlat
ret
push
divb
adc
fidivl
jns
mov
jmp
xchg
xor
or
cmp
sbbb
push
pop
addr16
mov
repz
in
ja
cmp
shlb
pop
push
or
mov
movsb
mov
call
cmc
cmc
xchg
popf
xor
push
push
mov
not
fmul
shll
push
dec
cld
daa
or
xlat
mov
inc
mov
popa
or
pop
xchg
sub
push
and
daa
jae
in
cli
nop
dec
out
and
pop
add
push
not
inc
pusha
push
jl
popa
jg
repnz
inc
jmp
pop
mov
inc
lock
mov
roll
lods
mov
ja
xor
fisubs
sub
bnd
test
add
jp,pn
es
push
push
ret
jb
adc
jo
inc
sti
jnp
dec
test
inc
movsl
lock
das
mov
push
imull
jmp
gs
pusha
jbe
adc
cmp
xchg
jae
jo
enter
jle
pop
jl
adc
or
mov
clc
sub
mov
add
push
pop
lods
inc
pop
mov
cwtl
mov
es
dec
push
pop
out
push
dec
or
jmp
adcl
add
pop
lret
push
shl
negl
ffree
push
fs
mov
test
or
and
out
and
je
push
es
call
cmc
add
imul
aaa
xchg
sbb
cmp
rorb
pop
sarl
xchg
push
clc
push
xchg
setg
or
fcompl
bound
jmp
pop
push
cmp
adcl
jmpw
push
lods
in
bound
lods
rcr
sub
je
ds
xor
adc
push
push
fsts
jnp
push
icebp
shrb
cmp
push
leave
pusha
pop
mov
sub
scas
cmp
push
add
inc
add
loope
sub
ds
or
stc
pusha
jae
daa
daa
xor
pop
mov
mov
push
push
mov
bound
jle
dec
sbb
or
aad
pop
imul
leave
or
xorb
test
jno
in
push
gs
repz
sti
ret
movsb
call
adc
mov
cmp
mov
add
pop
adc
push
add
or
and
rcrl
roll
cmpsl
xchg
adc
jo
or
rcl
arpl
cs
cmpsb
lret
inc
add
insb
dec
outsl
add
inc
pop
pop
add
rorb
cli
pop
ljmp
aam
pop
cmp
sub
mov
inc
and
pop
push
mov
and
ret
stos
jecxz
fldenv
outsl
cmp
and
mov
in
dec
out
add
mov
jnp
fistpl
jae
push
fyl2xp1
add
rclb
sarb
ret
cmp
loopne
xor
add
mov
bound
add
jns
out
add
mov
cmp
hlt
daa
cmp
jbe
adc
push
mov
rcrl
int
shr
jl
in
xchg
sub
insl
add
add
icebp
jmp
dec
rcrb
jo
or
cmc
stc
ljmp
push
adc
ret
incl
push
daa
jmp
sub
mov
fwait
lea
aas
push
mov
jmp
int
stos
cmp
inc
repnz
shrb
test
and
lods
adc
into
lods
inc
xchg
sub
mov
dec
insl
leave
mov
jp
jmp
adc
call
or
pop
insb
pop
mov
jmp
orb
ret
push
push
mov
rcrl
pop
aad
add
mov
sub
aas
fwait
pop
push
mov
sub
and
xchg
or
or
fwait
add
not
pushf
mov
sub
jge
popa
or
outsb
mov
xor
pop
and
shll
out
cmp
pop
add
sub
out
mov
sar
lret
sub
sub
add
js
sub
sub
ret
mov
pop
xor
leave
imul
and
fcoms
lods
loope
stos
cmp
lea
dec
popa
push
jmp
pop
out
and
ret
or
add
sub
sbb
and
add
push
std
das
push
les
es
jno
arpl
mov
jmp
ret
dec
shrb
push
pop
pop
sub
loop
add
mov
or
jmp
dec
jge
ljmp
ss
aaa
cmpsb
push
pop
out
inc
loop
js
fistl
push
mov
inc
rclb
add
add
xchg
not
rorb
push
shr
push
or
mov
cmp
add
xchg
cld
hlt
or
test
roll
clc
test
mov
stos
sub
inc
push
das
ljmp
mov
cmp
das
sub
adc
cbtw
or
ja
push
loop
mov
sub
mul
mov
dec
fs
pop
daa
shll
ss
dec
fistpll
xorb
jle
adc
loopne
mov
call
es
and
imul
sub
push
xor
push
adc
das
adc
loop
pusha
mov
cmp
out
add
mov
lret
pop
ret
call
cli
push
jecxz
jns
in
xor
shll
mov
add
fcoml
mov
aad
shll
add
andb
cltd
jo
jp
and
dec
push
leave
inc
push
jmp
dec
into
dec
scas
lret
add
xchg
adc
inc
mulb
pop
cmp
in
push
fstpt
std
jg
in
mov
lret
mov
out
pop
xor
rcrb
push
adc
sti
xor
pop
outsb
dec
mov
jns
gs
mov
pop
add
sbb
sub
add
jmp
push
add
lret
ja
mov
cmp
rclb
sbb
sub
sub
push
mov
lret
push
push
inc
cmc
loopne
adc
xchg
jmp
jle
add
stos
push
add
test
sbb
dec
mov
js
jg
xchg
fistpl
enter
sti
daa
xor
jp
cmp
icebp
sahf
add
das
pop
xlat
jmp
inc
lss
scas
mov
push
mov
xor
cltd
mov
pop
pop
int3
adc
inc
mov
sbb
xchg
movzwl
sbb
xor
sbb
sbb
adc
jl,pt
sbb
nop
adc
sub
xchg
pop
xchg
inc
mov
mov
push
dec
pop
scas
cmp
clc
adc
push
jbe
imul
jle
sub
pop
lret
bound
rcrl
loop
or
cmpsl
pop
mov
add
ret
fmulp
adc
scas
sub
sahf
das
movsl
xlat
pushf
jne
andl
mov
pop
std
bound
jmp
mov
hlt
or
fdivrs
and
aam
rorb
add
daa
dec
frstor
mov
pop
sbbl
inc
ljmp
inc
mov
sbb
int3
mov
jmp
rol
pop
adc
push
add
gs
push
mov
sbb
jmp
jae
xchg
adcb
or
push
mov
or
out
outsb
jo
mov
pop
add
jmp
subb
xlat
mov
pusha
insl
pop
add
gs
push
sub
mov
cmp
adc
sub
and
push
cmpsl
or
and
pop
filds
pop
jo
jmp
mov
fs
dec
push
cli
or
lds
ljmp
pop
xor
std
jns
add
and
je
mov
jae
or
mov
jbe
push
test
pop
and
mov
out
or
mov
pop
xchg
rclb
orb
add
adc
and
push
add
cli
or
test
jae
mov
mov
dec
or
or
lcall
cmp
or
or
pop
sti
dec
and
and
mov
adc
adc
mov
enter
popa
insl
daa
xor
cld
pop
mov
dec
shlb
inc
out
aas
sbb
mov
ret
pop
pop
sahf
add
and
mov
sub
pushf
arpl
std
je
jmp
push
test
or
enter
callw
xchg
cmp
push
into
icebp
push
sbbl
push
add
subb
xor
inc
push
push
dec
out
lret
sub
ja
or
cwtl
mov
push
aad
ljmp
or
mov
rcrb
pop
xchg
sub
sti
push
addl
adc
out
add
cmpsb
adc
or
scas
dec
xor
jbe
sbb
or
icebp
jg
ljmp
sbb
sub
pop
push
jns
cmp
aad
pop
sub
jnp
ja
fs
out
and
add
aad
add
loop
jo
cwtl
mov
nop
jecxz
xor
test
sub
in
push
inc
lahf
jp
cmp
add
jg
jl
add
cmp
stos
pop
daa
adc
mov
pop
pop
pop
data16
cmpsl
pusha
mov
add
push
and
sub
or
jae
or
push
ret
mov
pop
push
inc
mov
xchg
mov
insb
adc
test
and
adc
dec
daa
push
jge
push
pop
mov
mov
mov
idivl
mov
mov
les
mov
repz
adc
mov
icebp
test
push
mov
sbb
or
push
jge
jns
cs
inc
or
push
mov
push
lea
std
fists
or
ret
data16
inc
jle
adc
int
push
mov
fsubrl
sbb
repz
pop
mov
rcr
push
jmp
jnp
sub
enter
aam
loope
jecxz
pop
mov
loope
sahf
add
testb
or
inc
add
cld
pusha
movsl
pop
rcrb
xchg
sub
cld
out
ja
xchg
mov
jg
push
mov
mov
and
repz
sub
dec
shlb
mov
mov
testb
xchg
jge
mov
jmp
jp
inc
lods
mov
mov
sub
sbb
clc
push
dec
lea
dec
mov
adc
andl
sbb
sub
sub
mov
or
xor
iret
in
mov
in
ficoml
jle
sub
pop
push
pop
es
scas
pop
sti
fistl
flds
into
mov
and
pop
push
dec
sub
not
push
rcr
jmp
jnp
icebp
or
std
xchg
pop
cli
repz
xchg
or
cmpsb
push
shlb
mov
ret
dec
mov
pop
idiv
or
fsubl
inc
pop
dec
or
ja
divl
push
mov
xor
inc
pop
push
or
or
or
cmp
mov
jnp
jmp
add
lods
in
in
lret
pop
outsb
push
sti
cmp
inc
ljmp
mov
addb
daa
sub
call
fs
adc
or
add
aaa
pusha
es
enter
jbe
sub
clc
push
in
fidivrs
dec
sbb
inc
mov
mov
adcb
mov
lock
add
pop
je
mov
cmp
ss
inc
sti
xchg
lea
xor
cld
aad
mov
dec
dec
jb
or
in
std
push
ret
notl
fidivrs
sbbb
outsl
mov
add
sub
addr16
arpl
cmp
or
jo
mov
pop
jns
mov
testb
addr16
cs
shl
adc
insb
sarb
repnz
in
jno
cwtl
dec
push
std
ss
lret
pop
or
xor
inc
inc
cmp
or
jmp
test
or
bnd
out
cli
lret
adc
cmc
inc
out
jns
imul
and
aaa
shlb
and
lret
mov
fnstcw
jbe
add
stos
mov
inc
sub
mov
sbb
add
ret
jge
aas
add
or
adc
push
jecxz
xor
into
cmc
xchg
sub
lret
pusha
insb
push
repnz
arpl
data16
aad
ds
mov
cs
sti
mov
and
and
std
pop
inc
dec
add
mov
imul
dec
loopne
push
or
je
or
add
icebp
ret
add
je
mov
add
subb
test
or
jmp
popf
lcall
add
lds
adc
or
jg
idivb
repnz
test
mov
add
inc
and
mov
dec
insb
pop
addr16
or
shr
push
xor
add
jne
int
std
les
mov
or
mov
sub
scas
xor
mov
insl
add
out
not
and
leave
cmc
sahf
or
pusha
push
inc
fildll
ljmp
fbld
call
mov
push
sub
sbb
adc
add
xor
fcomps
adc
mov
dec
repnz
add
push
mov
sbbb
popa
pop
jle
pop
aad
cmp
in
xchg
jbe
jb
pop
aad
lret
add
test
lahf
ja
xchg
add
push
addr16
xor
leave
out
cmpsl
or
aad
mov
inc
mov
xchg
push
lea
and
andl
jae
adc
mov
ret
cmc
loopne
or
jge
sub
jecxz
dec
inc
sbb
sahf
insb
mov
out
sbb
mov
jmp
dec
or
pop
cmp
popa
add
dec
arpl
stos
mov
pop
mulb
movsl
pop
test
jno
je
jp
sarb
push
fsts
cli
pop
ja
enter
mov
cmc
mov
jmp
jl
loop
stos
xlat
xlat
movl
inc
xchg
push
cmp
sbb
xor
mov
loop,pn
outsl
inc
adc
and
pushf
dec
scas
popf
outsl
inc
stos
das
sub
adc
xlat
mov
inc
sahf
aam
adc
inc
call
dec
mov
or
cs
adc
and
mov
jnp
lret
jg
rorl
movsb
cmp
sub
ss
movsl
insb
scas
das
arpl
push
add
leave
push
mov
cmp
std
and
cmp
fnstenv
addb
loope
dec
out
cs
push
sub
jns
inc
mov
dec
addl
dec
xor
and
aaa
jno
and
lea
xor
fisttpll
pop
jmp
das
inc
repz
xor
add
sbb
xlat
pop
cmp
and
lock
inc
mov
or
add
cld
xchg
fstpl
mov
les
mov
pop
mov
in
mov
leave
ret
fildl
or
inc
jae
dec
lret
out
aad
mov
lods
jmp
dec
xchg
ficoml
jmp
pop
stos
pop
orb
cs
imul
sets
call
or
adc
push
cmc
icebp
pusha
inc
jmp
dec
and
sub
push
push
push
and
lds
movl
or
xchg
arpl
rcrl
push
mov
sub
pop
neg
xchg
push
sub
cmpsl
push
inc
cmp
daa
aas
mov
or
addb
les
sub
sbb
lahf
xchg
mov
bnd
stos
inc
xor
pusha
in
mov
jmp
xchg
rcll
jmp
pop
push
adc
js
sub
call
jmp
loope
fildll
daa
or
cmc
and
ret
aam
repz
mov
or
je
mov
mov
lds
cmp
in
rolb
push
or
in
orl
stos
xchg
mov
cmp
mov
fisttps
dec
or
imul
adc
pop
mov
mov
sbb
inc
and
dec
pop
push
and
pop
pop
cwtl
es
push
das
lock
cs
imul
add
nop
pop
setne
lea
roll
aaa
popa
adc
stos
cmp
es
std
loope
addr16
dec
xchg
pop
les
movsl
mov
jbe
pusha
dec
adc
jmp
mov
sub
sar
dec
jns
cmc
pop
sub
push
scas
mov
inc
pop
dec
jp
pop
out
addr16
or
mov
fildll
in
movsb
fstps
cmp
adc
mov
dec
cli
or
shl
orb
imul
jmp
jnp
in
stc
es
push
add
mov
hlt
sbb
out
adc
mov
sub
stos
adc
ret
mov
xchg
and
sub
pushf
scas
bound
outsb
test
cmp
jle
sub
sub
bound
mov
or
or
sub
pop
push
dec
pop
int3
add
add
adc
jg
outsl
jmp
mov
mov
xor
pop
mov
popf
and
leave
dec
icebp
add
jg
push
or
push
mov
xchg
sbb
or
adc
in
or
pop
mov
in
add
popa
dec
push
push
jnp
jns
add
pusha
jo
inc
cmp
jnp
push
adc
cmp
adcb
fsts
ficoml
mov
pop
insb
cli
add
mov
rorb
popl
loope
xchg
dec
mov
lock
jns
addr16
std
inc
mov
sbb
push
add
gs
stc
repnz
fdivs
popf
xchg
jge
fstpt
imul
inc
cltd
mov
xlat
adc
imul
cmp
push
lods
jge
andl
jmp
movsl
hlt
lods
or
inc
sub
or
inc
xlat
add
jmp
and
sub
adc
jmp
jl
stos
mov
ds
push
scas
test
sti
cmp
push
sbb
sub
sub
sbb
mov
rolb
roll
jmp
shr
inc
mov
cld
dec
jle
call
push
dec
test
adc
add
mov
cwtl
or
add
jbe
pop
shl
add
push
xor
xorl
popf
fs
lock
imul
jl
insl
rcrl
xchg
es
cmp
jbe
jae
xor
xchg
not
or
jl
or
jg
mov
faddp
mov
push
pop
cmp
mov
and
add
clc
dec
mov
dec
mov
cmpsl
aam
jne
push
test
xor
cmc
jne
std
inc
inc
or
jmp
pop
pop
add
je
adc
push
add
push
mov
push
dec
xor
out
cld
scas
arpl
jmp
add
xorb
xor
mov
or
or
push
jl
ss
add
cmp
in
inc
out
xor
pusha
xor
lds
mov
rep
imul
fcmovb
imul
sbb
add
mov
mov
xor
add
lods
adc
inc
inc
test
xchg
call
pop
loopne
push
push
pop
adc
ss
cmp
lock
add
adc
xor
sbb
cmp
jmp
nop
loop
inc
or
or
push
cmc
adc
push
xchg
popa
insb
out
das
jmp
mov
or
pop
mov
mov
mov
cmpsl
xor
mov
push
lahf
int3
jb
mov
cmp
shrl
cmp
das
cli
cmpsb
or
pop
sub
lret
popa
cs
pop
sub
movb
pop
jmp
pop
add
fidivl
fcomip
pushf
rcll
push
xor
or
les
cmp
pushf
jle
mov
xlat
mov
cwtl
push
shl
add
rcpps
in
xchg
mov
pop
data16
int
sub
mov
ja
push
cmpl
jp
mov
inc
mov
das
mov
fs
mov
or
ret
mov
daa
xchg
and
jmp
call
mov
sbb
rcl
cs
and
orb
rolb
rclb
jecxz
add
fidivl
cwtl
arpl
xlat
jb
out
and
cmp
fldenv
adc
movsl
cmp
mov
pop
mov
push
fucomip
and
push
pop
loopne
lods
lds
dec
xchg
mov
xlat
loop
adc
jle
into
jge
push
add
fadds
pop
jl
add
xchg
adc
pusha
imul
jge
call
cld
jmp
fnclex
mov
mov
icebp
cmc
popf
pop
dec
mov
or
mov
add
mov
cmp
stos
jno
arpl
sbb
je
out
push
xchg
out
or
jbe
pop
mov
jns
lds
xlat
into
jae
xor
sti
dec
xchg
dec
aaa
pop
sbb
mov
and
push
xchg
adc
inc
dec
movsb
adc
dec
into
ljmp
popa
push
jmp
icebp
xchg
dec
push
mov
sub
or
cmpl
xchg
sbb
insb
inc
test
pop
lds
je
and
pop
test
nop
mov
push
in
push
xchg
out
pop
mov
jmp
push
jne
in
push
or
push
xchg
sub
xchg
daa
arpl
add
add
jb
cmpsb
mov
pop
or
out
rcrb
sub
pop
daa
mov
sub
or
push
cmp
cmc
pop
dec
or
int
in
adc
adc
jl
cmc
icebp
jg
jle
pop
jmp
imul
outsl
cmc
test
jb
pop
dec
dec
and
mov
sbb
jmp
in
int3
add
pushf
loopne
jmp
ds
inc
jp
mov
mov
imul
std
add
lahf
lcall
hlt
push
sbb
pop
cmpsb
lock
out
pop
or
iret
idivl
insb
push
mov
cmpb
imul
data16
push
sub
mov
add
sub
lret
addl
pop
pop
sub
xor
mov
repnz
lcall
pop
movsb
imul
pop
jle
test
sahf
jae
inc
jecxz
xchg
lcall
lret
out
dec
scas
sub
adc
sbb
dec
jmp
popf
js
dec
pop
iret
adc
mov
mov
or
mov
adc
es
cmp
jecxz
dec
cmpsl
ret
add
sub
shll
outsb
aam
mov
out
rorl
mov
xor
daa
stc
leave
or
sbb
push
push
add
dec
sub
jle
add
pop
lcall
sti
or
iret
pop
jns
pop
sub
and
push
mov
sub
pop
pusha
jmp
sub
jnp
xor
push
jne
jmp
jmp
mov
jo
xchg
push
xchg
ds
push
popa
mov
cmpsb
cmp
dec
aad
sbb
push
rcll
lods
add
mov
dec
cmp
sar
addr16
aas
sub
xchg
push
jmp
loop
push
fldt
push
rorb
in
ljmp
fcompl
mov
outsl
lods
jge
mov
insl
jb
xchg
pop
daa
adc
and
cmpsb
outsl
adc
jge
cld
repnz
dec
aad
ja
xor
inc
loop
and
jne
jmp
in
sub
adc
add
test
xlat
xor
sbb
push
jmp
add
pop
sub
add
mov
or
mov
push
ret
jb
mov
fisttpl
dec
add
push
jl
idivl
adc
popa
and
mov
nop
xor
jne
dec
cmp
icebp
in
pop
inc
add
mov
mov
mov
ficomps
test
push
aas
aad
stc
mov
cli
imul
clc
and
loop
add
das
fildll
aad
xchg
stos
dec
mov
cs
stos
mov
icebp
imul
jge
pop
mov
mov
in
sub
mov
or
pusha
nop
imul
add
loope
sti
dec
xchg
loop
pop
pop
mov
jl
jo
jne
jne
cld
pop
sbb
test
dec
add
fisttps
add
rolb
in
jecxz
mov
int3
cmp
push
mov
ljmp
jo
sbb
add
stc
adc
ret
inc
out
sbb
adc
push
stc
xor
in
testl
pop
cwtl
mov
stc
and
fnsave
aam
pop
loopne
sbb
cs
xchg
mov
inc
or
cmp
inc
test
sub
jnp
test
lcall
not
add
shl
push
sub
jecxz
dec
sub
repz
xchg
adc
into
jle
jnp
mov
add
mov
and
xor
cmc
add
mov
rcrb
nop
mov
pop
rorl
ficoml
add
stos
in
in
pop
sub
adc
out
ja
jmp
mov
scas
mov
and
not
lret
shl
dec
popa
les
js
cmc
or
cmp
bound
mov
xor
push
inc
aad
cmp
es
shrl
jae
loope
xor
cs
dec
sti
sub
or
adc
fimuls
xchg
shlb
jo
sub
and
mov
and
dec
mov
cs
cli
lahf
nop
xchg
out
ret
shll
adc
adc
addr16
xor
pop
mov
in
mov
xor
leave
sub
ret
mov
popa
fs
pop
lock
pop
dec
fucomp
and
pop
addb
repnz
cmpsl
push
movsl
mov
xor
scas
mov
xor
pop
jle
nop
flds
jbe
fdivl
clc
pop
push
inc
xchg
test
jmp
imul
cmpb
sub
push
jp
ja
cmpl
adc
pushl
fwait
jl
add
jae
subl
aad
add
push
push
jmp
into
and
adc
lret
jnp
ror
lret
push
out
add
mov
jb
dec
sbb
add
aad
cmp
add
add
cmpsb
or
gs
mov
rolb
add
xor
out
sahf
jle
mov
push
rol
test
inc
dec
jmp
xchg
cmc
repz
jbe
shl
sbb
cwtl
popf
cmc
or
sarl
push
push
mov
cmp
xchg
popf
aam
pop
icebp
fildl
adc
xor
or
push
shlb
xor
jmp
inc
inc
insb
push
pop
test
icebp
or
scas
or
wrmsr
fldcw
push
add
mov
and
cltd
cwtl
and
add
inc
and
inc
jmp
dec
push
aam
mov
in
mov
add
shrb
repnz
push
pop
ret
mov
or
aam
add
jmp
lock
push
sub
sub
dec
cmpsb
test
dec
andl
jge
mov
sub
hlt
fs
xchg
inc
inc
iret
jp
inc
orl
sbb
shr
add
xchg
lods
inc
add
lret
or
or
pusha
jb
add
mov
data16
pop
or
xchg
push
pusha
cmc
shlb
ja
enter
jg
xchg
inc
xchg
and
fisttps
mov
into
test
mov
push
push
mov
mov
je
lret
je
daa
pop
addb
lret
leave
push
and
sti
sbb
pusha
add
repnz
and
sbb
pop
imul
cli
mov
push
mov
lret
mov
not
sub
out
mov
jmp
cmpsb
fmuls
push
enter
inc
out
cmp
xor
mov
jbe
mov
outsl
scas
bound
xchg
insl
xor
repz
push
lahf
mov
jbe
xor
lock
jns
dec
cmp
mov
jl
or
sbb
add
mov
imul
mov
pop
loop
aad
push
sbb
push
rorb
pop
sub
xor
in
mov
imul
adc
push
cmp
push
pop
shl
inc
pop
js
outsl
pop
ljmp
movsb
movsl
push
pop
cwtl
mov
mov
jns
aam
mov
pop
in
pop
scas
xlat
pop
cld
orl
dec
fldenv
xor
add
add
mov
jl
xchg
jo
and
out
cmp
mov
xor
shll
lods
push
js
push
push
testb
mov
adc
jmp
sbb
jmp
jnp
loop
adc
mov
push
push
aaa
and
jmp
std
xor
subl
inc
ret
add
es
and
add
mov
sub
rcrl
int
in
repz
or
es
fisubrs
pop
inc
sbb
ret
pop
ja
gs
cmp
add
pop
inc
jmp
pop
stos
movsb
sbb
xchg
rcll
lea
jge
mov
cmp
popa
in
testl
arpl
cmpsb
add
and
out
jmp
lahf
shll
xchg
cli
jns
sub
add
inc
and
out
ficomps
ret
insl
mov
je
clc
repnz
or
inc
jmp
loopne
ss
inc
bnd
mov
xchg
xchg
dec
jo
pop
clc
stc
jg
popa
or
push
out
push
inc
sub
inc
push
adc
out
jmp
lds
imul
mov
loope
adc
jnp
xor
rcll
jmp
push
sub
add
pop
jmp
mov
daa
call
dec
mov
jp
pop
dec
xor
sarl
incl
xchg
mov
mov
mov
data16
pop
push
mov
int3
sub
hlt
test
es
push
add
out
sub
push
jmp
subl
in
pop
stos
sub
test
xchg
mov
sub
pusha
mov
xor
adc
or
inc
push
pushf
ret
fmuls
xchg
push
std
sbb
xor
push
xor
icebp
sbb
xchg
out
and
and
sbb
xor
add
cmpsb
aaa
mov
and
sub
add
dec
inc
add
jmp
cwtl
jae
xchg
xor
shlb
xor
int3
out
inc
loopne
icebp
dec
or
stc
push
and
cmp
inc
shld
add
jp
cmp
sarb
jmp
popa
or
pop
nop
push
mov
sarb
cmp
sub
iret
aam
or
inc
mov
jle
das
outsl
cmpsb
and
popf
mov
jmp
mov
push
rorb
adc
addr16
cmpsb
test
fbld
pop
test
out
jo
and
lret
mov
add
gs
cmp
cwtl
xchg
add
jg
mov
jmp
jns
push
cmp
enter
lods
loopne
mov
xor
dec
push
dec
fstps
or
mov
xchg
xchg
sbb
fcmovu
xor
jo
and
outsl
cmp
loope
ret
or
mov
lahf
sbb
ljmp
pop
repnz
nop
sub
mov
cmpsl
add
sbb
dec
xor
jmp
jae
adc
in
jle
push
push
push
xor
mov
jmp
scas
lods
xlat
frstor
in
dec
xor
jnp
fidivrs
out
or
xlat
mov
sub
in
scas
lret
xor
gs
or
scas
rol
sbb
jbe
add
adc
shr
subb
or
loop
jge
xchg
cwtl
mov
xlat
dec
add
push
adc
int
inc
js
push
clc
js
dec
add
and
sub
cwtl
add
lahf
movsb
jmp
loopne
add
aas
add
adc
je
jnp
sub
data16
add
dec
repz
leave
mov
sub
mov
test
out
push
add
loop
dec
sti
test
pop
loope
in
and
inc
fs
dec
jl
add
sub
imul
or
cwtl
inc
sub
mov
pop
enter
add
cs
add
push
push
rclb
mov
inc
push
in
inc
fld
jle
xor
mov
cmc
mov
je
adc
xchg
xchg
jnp
add
jo
or
enter
fbstp
hlt
mov
jae
cmp
xor
int3
fdivl
aaa
insb
fldl
cli
mov
je
data16
or
add
lock
std
xchg
repnz
adc
into
or
ja
call
mov
pop
push
in
and
pop
outsl
and
jmp
std
and
push
mov
push
inc
out
xchg
and
add
jmp
fsts
popa
cmp
insl
pop
inc
fsubr
cmp
add
mov
mov
rcr
xchg
ds
dec
jbe
add
cmc
or
jg
mov
push
push
rorb
jbe
and
enter
das
sar
jp
ss
push
cwtl
call
jmp
push
shll
divl
mov
pusha
mov
jbe
and
pop
scas
into
dec
pop
mov
adc
pop
stos
cmp
roll
sahf
add
subb
lea
mov
pop
add
jp
shlb
xchg
jo,pt
aas
cmp
imul
pop
or
mov
jmp
add
out
cwtl
mov
dec
and
mov
ret
or
arpl
add
subb
pop
stos
jne
stos
dec
insb
xchg
pop
fstl
sub
mov
adc
test
test
lahf
shlb
lods
xchg
or
cvtps2pi
sub
push
push
orl
pusha
adc
iret
daa
or
les
jge
dec
push
mov
scas
cltd
sarl
mov
sub
jnp
aas
sbb
sbbb
and
add
adc
jle
and
dec
ja
inc
fadds
iret
pop
push
iret
cli
movsb
fwait
mov
xor
pop
lcallw
lahf
into
dec
not
mov
or
xor
mov
test
pop
mov
sub
sub
pop
xchg
sub
sbb
jnp
or
push
inc
pusha
xchg
and
sbb
jmp
repnz
pop
push
test
jb
movsb
outsl
or
mov
push
push
jp
sub
ss
pop
sub
mov
stos
rcll
mov
push
lahf
jns
jmp
sbb
stc
add
pop
inc
push
sub
enter
jae
das
out
jle
adc
pop
das
fstl
cmp
and
jns
pop
add
ret
into
in
lods
jae
or
pop
sub
ret
dec
testb
xor
sub
out
and
mov
shrb
pop
int3
inc
mov
dec
adc
and
push
pop
aas
cwtl
fisubl
pushf
sub
xor
js
les
cmc
mov
std
inc
jmp
pop
fsubs
cmp
jmp
xorb
mov
jmp
mov
mov
add
dec
test
out
scas
mov
pop
sbb
es
stos
out
repnz
imul
jl
add
inc
push
push
clc
fldl
ret
inc
sbb
and
sbb
fcoms
push
push
dec
test
stos
fdivrs
adc
pop
inc
decl
adc
adc
dec
cld
insl
inc
scas
adc
sbb
xor
fmuls
mov
jmp
icebp
lret
push
loopne
add
push
fstps
and
inc
imul
stos
movsl
push
dec
addl
orb
andb
or
and
inc
popf
push
pop
test
mov
inc
loop
neg
pop
or
addr16
lret
daa
rclb
inc
in
or
xor
cmp
mov
insb
sbb
ja
mov
out
fsubl
fwait
call
and
xor
and
xor
mov
es
adc
lock
pop
dec
dec
aam
add
testb
push
test
add
and
mov
add
or
ror
loopne
test
cmp
cmovle
aas
mov
testb
xchg
cmpsl
adc
adc
lcall
inc
cmc
fst
and
push
outsl
pushf
sbb
out
push
and
stos
mov
xor
jp
push
daa
mov
push
sbb
test
sbb
ror
push
shll
aad
add
leave
and
scas
or
mov
add
xchg
jle
jge
sahf
arpl
rol
das
cmp
outsl
mov
jmp
pushl
dec
js
popf
pop
adc
mov
mov
xor
loopne
shr
or
mov
inc
cmc
pop
das
add
add
out
dec
imulb
add
stc
test
dec
repnz
sti
push
mov
or
pop
cmp
popf
fimull
test
pop
ror
rcll
jp
and
dec
dec
stos
adc
test
and
push
fucomip
or
in
inc
jl
adc
lret
mov
jmp
pop
mov
arpl
mov
nop
and
add
daa
push
xchg
stc
std
mov
push
sub
pop
jbe
mov
ljmp
jo
stc
inc
lea
sub
imul
test
jmp
rcrl
lods
xorl
cwtl
mov
hlt
in
test
pop
clc
mov
mov
pusha
inc
addb
call
adc
inc
ja
sub
outsl
sub
pusha
inc
dec
adc
ss
mov
ret
test
pop
clc
add
xchg
inc
imul
or
add
cmp
add
std
in
or
mov
shr
in
shlb
or
popa
inc
or
clc
ds
mov
inc
ss
jge
add
and
cmc
addb
lds
push
fdivrl
or
xor
adc
mov
lods
add
pop
sub
or
adc
push
lret
stos
and
xlat
cmp
ljmp
add
imul
mov
fdiv
mov
pop
in
inc
dec
sbb
lods
arpl
jns
push
addr16
nop
inc
push
iret
push
xchg
jns
sarb
out
mov
add
pop
sbb
das
add
cmpsb
icebp
and
and
add
adc
in
pop
push
lahf
cli
push
add
jmp
mov
jo
cmp
pop
jecxz
mov
ja
sub
add
outsl
mov
cltd
add
sbb
test
mov
adc
call
inc
jae
adc
adc
mov
push
push
dec
xor
lret
ret
imul
ljmp
lret
aaa
call
in
fucomp
inc
or
push
add
inc
add
das
ja
sti
push
push
push
mov
push
cmp
bound
dec
pusha
jmp
pop
out
jl
push
inc
les
push
rcr
mov
xchg
and
mov
das
mov
lods
iret
mov
dec
mov
dec
pusha
pop
int
subb
add
cwtl
mov
sub
add
pusha
jecxz
jle
addb
not
repnz
mov
adc
add
sbb
add
ret
imul
pop
and
int
out
popa
jnp
add
mov
ret
dec
out
and
loope
xor
enter
das
mov
aam
push
divl
outsl
in
xchg
sarl
mov
xor
push
stos
adc
pop
in
jmp
ret
lcall
sub
sub
add
add
push
cmpl
sbb
xchg
cs
jg
movsl
adc
push
push
lret
cmpsb
dec
inc
mov
testl
cmpb
sub
jns,pt
das
fucomp
in
cmc
sub
pop
mov
cmp
test
out
negl
aam
mov
pop
adc
mov
xchg
inc
adc
sbb
or
cltd
mov
xchg
push
ljmp
sahf
cmp
sbb
sti
cmc
dec
es
outsl
ror
fldl
sub
es
pop
int
adc
fs
outsl
andb
pop
push
lock
add
push
push
dec
xor
nop
popa
adc
inc
dec
ja
test
jmp
cmp
mov
shr
mov
mov
pop
nop
test
fcmovnu
xchg
pushf
mov
push
cmpsb
lret
jno
mov
fcomp
xor
sbb
pop
mov
outsb
pop
push
fs
xor
jge
sbbl
add
fisubrs
loopne
icebp
out
lds
mov
xchg
pop
pusha
xchg
push
mov
push
mov
pop
or
sub
sub
or
inc
es
dec
pop
clc
jecxz
push
aas
jl
xor
jg
push
loop
xor
pop
and
addb
jb
mov
push
in
cmp
jl
aaa
pop
sub
pop
jno
jmp
xchg
add
fstl
rcrb
sub
les
push
cmp
jg,pn
ret
sub
ss
into
rolb
pop
in
jge
lret
mov
sub
lahf
leave
insl
mov
in
sbb
push
mov
loop
pop
js
clc
movsl
jmp
xchg
and
push
pushf
aam
in
mov
ljmp
imul
lock
arpl
dec
mov
push
xor
pop
movlps
cltd
pop
and
sub
fcomp
add
inc
sbb
int
jo
push
jmp
sub
mov
add
dec
insl
mov
jmp
pop
test
adc
push
jle
pop
jne
adc
mov
jb
movsb
add
loopne
add
mov
sub
push
ds
cwtl
hlt
mov
dec
fstps
sbb
cmp
ss
sub
pop
fisubl
or
sub
push
cltd
into
xor
icebp
or
xlat
push
mov
notb
adc
idivl
jb
jno
push
xor
or
jmp
adc
xor
cmp
iret
xchg
xor
int3
es
pop
pop
adc
push
pop
inc
mov
daa
mov
inc
push
mov
xorb
lea
lret
rclb
push
outsl
mov
cmc
or
push
loop
push
xchg
sbb
pop
add
jmp
adc
out
insl
push
sub
or
add
xor
add
sar
shll
or
pusha
inc
mov
push
inc
loope
pop
test
adc
xchg
cwtl
cmp
mov
dec
or
es
and
cmp
xchg
xchg
ret
std
aas
test
cmp
adc
xchg
jo
lds
dec
popa
das
daa
inc
xlat
js
lcall
xchg
insb
jno
push
out
cmc
mov
or
lds
and
aam
jmp
aas
cmp
cltd
sbb
movsl
pop
mov
sub
repz
push
decl
cmp
push
outsb
pop
cwtl
sbbl
add
xor
or
ljmpw
lods
mov
xchg
push
pop
push
push
sub
mov
stc
inc
pushf
icebp
or
and
jns
call
sub
sti
push
sub
sti
and
push
pusha
add
add
and
cli
ss
jp
inc
stos
add
or
pop
mov
subb
aad
stc
pop
jmp
leave
sub
cmp
and
das
inc
into
sub
nop
or
xchg
aad
add
popf
iret
push
mov
push
jns
das
and
inc
outsl
scas
ss
mov
cmp
add
nop
mov
mov
into
cwtl
inc
imul
jae
add
data16
mov
pop
jl
inc
jmp
jg
dec
insb
pop
sub
or
jmp
add
rcrl
xor
adc
out
cmpsl
add
loope
mov
test
loopne
mov
sub
sub
pop
mov
add
pop
inc
or
mov
push
test
ret
jmp
notl
sub
out
sbb
xor
or
popa
xchg
cmp
xchg
cmpsl
push
in
jae
subb
sub
and
insl
mov
out
pop
cld
pop
movsb
stos
iret
sbb
xor
mov
mov
cmp
mov
imul
dec
dec
out
dec
mov
arpl
enter
sub
add
mov
dec
roll
sub
aaa
and
pop
mov
mov
in
inc
cmc
dec
push
popa
inc
imul
adc
jle
ret
sub
mulb
cmp
or
or
stos
jp
mov
sti
movsb
mov
pusha
movsl
sub
xor
pop
push
push
cwtl
and
pop
lahf
jo
mov
jb
stos
jge
scas
and
xchg
xlat
loopne
dec
adcl
adc
sub
icebp
mov
or
pop
mov
and
rcl
mov
pop
add
mov
mov
pop
loopne
not
or
jne
pop
mov
lcall
mov
call
popa
inc
jle
pop
push
pop
or
aad
add
repz
pusha
push
mov
and
xor
dec
or
inc
xor
lock
push
pushw
pop
jbe
xchg
out
push
test
mov
pop
jge
ret
sbb
fucomi
xor
sub
ds
cltd
call
shl
add
shlb
outsl
retw
outsl
pop
arpl
out
mov
and
xor
pop
mov
mov
pop
sbb
pop
push
cmpsl
mov
pop
mov
mov
lret
and
jo
ss
and
fdivr
adc
jg,pn
push
rolb
ja
ds
pop
jmp
ret
test
or
mov
scas
je
scas
shlb
sbb
mov
sbb
add
add
shr
lret
clc
not
stos
lret
mov
xchg
mov
mov
fisttpll
movsl
pusha
push
mov
dec
movsl
outsl
pusha
lods
fwait
mov
inc
dec
mov
mov
sub
adc
movsb
sbb
adc
loope
fiadds
mov
and
mov
std
push
aad
mov
pop
sub
xchg
cmpsb
jno
notb
gs
pop
loope
repnz
ss
xor
push
jecxz
add
repz
add
lock
fnstsw
test
in
mov
aam
push
aaa
dec
push
cmova
mov
jg
and
decb
or
xor
inc
pop
div
adc
fiaddl
jo
std
jmp
adc
xchg
cli
sub
test
fstps
clc
rolb
ja
sbb
mov
fnsave
jbe
jp
out
jp
das
jmp
rolb
out
xor
or
jmp
out
add
out
add
in
sbb
arpl
dec
outsl
int3
pop
mov
push
jge
stos
shrb
mov
adc
or
add
sub
push
xchg
add
bound
xchg
push
movl
jge
in
dec
rcll
loope
add
call
push
pop
sub
mov
pushw
add
push
rcrl
movsl
lock
lcall
dec
jb
roll
jno
add
cmpsb
jo
xchg
pop
int
clc
into
inc
add
mov
push
push
aas
jmp
push
adc
mov
cli
and
icebp
or
pop
mov
lret
mov
jmp
loope
cmpb
add
cld
ljmp
jne
rorb
push
pop
pop
test
mov
jo
jns
inc
adc
xchg
stos
mov
lret
cmp
fsub
sub
and
dec
jnp
jo
mov
in
cli
jne
dec
add
addl
xor
add
rcrb
stos
pop
jnp
jmp
xor
cmp
scas
repnz
mov
repnz
mov
xchg
sti
out
mov
rorl
jmp
jb
loope
pop
add
pop
inc
pusha
jno
and
mov
inc
xchg
adc
or
lea
jmp
or
dec
aam
or
adc
fs
add
xchg
sub
outsb
and
das
mov
pop
stos
inc
xchg
mov
pop
sub
gs
pushf
rorb
jg
in
pusha
orb
lods
or
pop
movsb
pusha
mov
or
and
add
dec
xor
in
mov
add
ss
jg
add
adc
dec
pop
out
shl
arpl
sub
inc
add
jl
or
push
mov
jmp
out
imul
and
in
test
inc
inc
push
pop
call
adc
push
fmull
and
test
xor
test
enter
lods
ret
sub
mov
adc
and
push
xor
jmp
test
xor
popl
rol
popf
cmpsl
mov
cmc
and
jns
das
lds
fmul
sahf
jmp
dec
sti
adc
sbb
lahf
cwtl
jl
push
sbbb
cwtl
mov
pusha
cmp
sbb
mov
or
sbb
imul
mov
out
mov
aas
stc
js
data16
jmp
xchg
repz
push
into
leave
notb
daa
push
cmp
inc
lds
not
andl
movzbl
loop
aam
cmp
cmpsl
fwait
or
insb
out
cs
xor
pop
jge
push
lods
push
or
jbe
adc
jmp
or
add
pop
push
inc
mov
test
int
daa
arpl
adc
push
or
fwait
inc
sub
xchg
push
es
mov
xlat
jnp
adc
xchg
stos
pusha
jmp
xor
push
out
das
fsubl
push
out
mov
dec
inc
inc
sbb
adc
fstpl
cwtl
movsl
dec
xor
jp
movsl
fs
inc
sub
push
shrb
int
mov
dec
int3
adc
js
rol
pop
sub
mov
sti
das
in
jg
fisubs
fdivrs
jp
lock
or
mov
imul
mov
inc
popf
pushl
adc
jle
push
mov
xchg
and
mov
popf
shl
js
cmp
mov
fstpt
or
pop
sub
pop
mov
and
jmp
cmpsl
adc
cs
je
mov
or
pop
scas
shr
sbb
fidivl
push
pop
adc
fcoms
pop
stos
inc
mov
mov
inc
xor
ficompl
call
cmc
adc
sbb
out
movsb
mov
in
push
mov
popf
push
into
shll
iret
add
or
add
add
push
inc
inc
lahf
cs
js
mov
aam
lods
fs
and
shrl
movsl
call
add
dec
leave
jae
fisttpl
je
push
mov
rorl
in
jle
mov
bound
int3
xor
mov
scas
test
and
push
adc
mov
xor
sub
pop
filds
push
les
pusha
dec
lea
and
fs
sbb
aad
movsl
push
and
xchg
or
or
xchg
pushf
out
jns
outsb
mov
clc
cmp
sahf
lret
sahf
fdivrp
leave
arpl
pop
imul
mov
into
sbbb
pop
fstpt
or
jle
stos
aad
lahf
and
sub
jmp
and
dec
ret
sub
movsb
mov
lods
int
icebp
cmpsl
jno
pop
add
mov
pop
cmp
call
cld
sbb
cmp
gs
jle
test
push
push
scas
sub
int3
fisttps
pop
mov
xchg
mov
mov
movsb
and
dec
sub
jg
jmp
add
add
arpl
outsb
insl
test
jmp
sub
sub
mov
sub
fwait
and
mov
out
or
aam
stos
clc
jo
jns
bound
cwtl
test
daa
cmp
push
in
mov
pop
pop
cmp
test
mov
xor
push
pop
mov
imul
mov
pusha
mov
add
cli
mov
insb
mov
add
mov
popa
pusha
popa
sbb
outsb
sarb
pop
or
inc
push
ja
scas
and
xchg
push
pop
mov
xchg
pop
xchg
loop
add
jmp
jmp
out
mov
movsb
push
movl
jl
nop
rol
jno
and
pusha
mov
or
cmp
push
add
jle
and
mov
add
ja
test
das
adc
xchg
xchg
out
jne
adc
xorl
jmp
pop
xchg
and
add
mov
sbb
test
dec
adc
mov
mov
xchg
and
rol
popf
jge
jne
push
stc
inc
dec
pop
inc
addr16
jp
and
xor
out
push
mov
cmp
arpl
dec
out
mov
push
inc
fdivl
push
roll
xor
jg
ret
pop
push
out
mov
push
scas
arpl
xor
imul
mov
dec
filds
sahf
push
lock
js
add
loope
iret
add
cmp
sub
dec
pop
rorb
sbb
pop
jmp
sub
call
fnstcw
mov
movsl
lcall
push
mov
test
mov
pop
sub
pop
roll
add
negb
adc
scas
lret
int3
pop
subb
pop
insl
inc
or
sbb
jne
in
cs
inc
in
or
movb
pop
not
mov
fs
sti
pop
pop
xchg
popa
xchg
or
pop
movsb
ret
enter
dec
dec
stos
sub
push
xor
into
jmp
or
mov
add
mov
inc
cmp
add
and
or
push
jne
push
push
aas
or
mov
mov
in
emms
adc
shr
or
inc
in
lret
bound
pusha
jle
ret
ficompl
decb
sbb
divl
xchg
or
mov
pop
sub
aad
push
jmp
movsl
out
add
push
int3
mov
test
test
into
jmp
or
adc
add
fcomps
inc
inc
hlt
mov
daa
popa
gs
ret
or
cwtl
imul
dec
outsb
or
arpl
and
ds
fstl
gs
xor
rcrb
add
arpl
dec
sbb
or
mov
sub
sbbl
lret
dec
pusha
imul
das
std
push
cld
inc
sbb
fistpl
daa
fimuls
push
sub
out
sarl
add
jmp
ror
or
adc
jle
lods
jbe
mov
jg
lahf
mov
xor
jle
out
xchg
les
xor
sub
jae
sarb
dec
xor
icebp
das
cmp
decl
jmp
sub
repz
pusha
adc
or
add
ja
cmpsl
inc
jmp
jecxz
das
add
insb
xlat
data16
popf
fsubp
and
xchg
in
push
push
aad
add
out
lds
ds
jno
out
test
mov
xor
mov
dec
add
add
jo
insl
cmovnp
nop
stos
fadds
fs
adc
out
xor
push
dec
scas
xchg
in
test
clc
ja
or
dec
sub
ret
aas
pop
or
push
add
lret
add
std
lods
xor
mov
and
popa
xchg
aas
inc
bound
add
fs
sub
add
cmpsl
test
out
and
adc
enter
push
mov
inc
ret
pusha
clc
inc
cli
mov
outsb
divl
orb
lret
xor
add
pusha
xor
dec
rol
popf
pop
ret
xor
out
xchg
pop
push
jmp
pushf
jne
dec
push
dec
sbb
shlb
ds
aaa
and
popa
dec
ja
xchg
mov
lcall
loope,pt
xchg
mov
push
scas
fadd
push
mov
rep
call
test
fcoml
fcmove
pop
mov
mov
inc
and
pop
and
push
call
inc
adcl
lods
sub
sub
notl
pop
aaa
gs
mov
rcrl
or
aas
movsb
clc
into
pop
push
dec
and
add
ret
dec
fcmovnb
sarb
pop
mov
sub
int3
cltd
adc
stos
cwtl
and
mov
cld
subb
loopne
out
mov
std
and
mov
les
test
lock
les
test
pop
and
loopne
jno
testb
repnz
xchg
pop
dec
adc
ljmp
push
pop
jbe
cs
fistpl
push
and
pop
test
push
dec
sti
adc
push
push
cmp
cmp
cmp
jp
test
mov
mov
add
jnp
cmp
lret
push
add
pop
add
and
lock
ret
dec
add
test
inc
xor
outsb
jae
dec
dec
dec
and
sbbb
test
call
sbb
clc
push
add
mov
add
push
pushf
pop
mov
sub
and
add
and
xor
popf
or
xlat
mov
dec
nop
jl
pop
pop
or
nop
xor
insl
sub
pop
and
movsb
sbb
lds
sbb
dec
dec
push
outsl
sub
pusha
call
pop
mov
ret
inc
add
hlt
jmp
push
dec
pop
jmp
rcl
add
add
adc
cmp
in
test
dec
fwait
aad
out
test
jno
int3
push
pop
jnp
inc
les
cmp
daa
fldenv
and
push
adc
sub
and
popa
mov
or
xchg
add
push
mov
cmp
push
jle
daa
jo
mov
inc
cltd
rorl
mov
cwtl
inc
add
xchg
inc
xchg
jg
xor
sbb
shrb
pop
push
mov
pop
pop
testb
pop
add
pop
xchg
cld
daa
leave
hlt
outsl
lods
cmc
mov
cmp
repnz
push
push
into
sbb
or
mov
sbb
adc
pop
call
in
xor
pcmpgtb
adc
rcll
das
cmp
loopne
sub
mov
das
hlt
in
xlat
xor
xchg
jge
loopne
cmc
lds
and
jo
lds
push
add
mov
jg
pop
pop
cmp
adc
cmp
jmp
or
shrb
int3
mov
and
sbb
cmp
and
cmp
cmpsl
or
cwtl
orl
push
dec
xchg
mov
sub
and
push
mov
sar
push
add
not
and
sbbb
mov
inc
dec
lods
pop
xchg
mov
xchg
xor
mov
test
add
incb
mov
inc
aas
adc
pop
clc
dec
xchg
lret
gs
pop
mov
je
xchg
xchg
dec
call
and
jno
pop
add
dec
cli
or
subb
cs
imul
icebp
jg
lock
xchg
lods
fistpll
decb
mov
pop
mov
popf
adc
fs
mov
or
dec
ja
push
jecxz
or
scas
repz
jnp
pop
popf
or
popa
popa
add
fcoms
and
pushf
insl
sbb
dec
add
push
in
jne
add
cmc
dec
sub
test
adc
or
lods
inc
in
sbb
daa
jg
push
mov
mov
in
cmpsb
dec
cmp
ljmp
sub
lods
repnz
mov
mov
out
rol
leave
es
add
add
or
mov
mov
fmull
add
push
pop
push
add
cld
push
in
pop
icebp
test
mov
pmulhuw
inc
push
bound
rcr
inc
jmp
cli
outsb
aaa
rorb
out
cmp
jp
jmp
mov
mov
jmp
jbe
lock
mov
pop
xor
mov
call
lret
cs
iret
push
add
and
imul
popa
aam
sub
cmp
cmpsl
ror
sarb
add
push
shl
jmp
inc
xor
inc
add
inc
movsl
xchg
cmp
add
adc
push
push
dec
js
cltd
mov
lahf
jmp
cmpsl
cmc
stos
sbb
imul
jmp
cmp
rcrl
jmp
cmp
subl
dec
dec
cmp
push
std
sub
push
das
add
jo
push
bound
jb
imull
pop
cwtl
xorps
xchg
dec
xor
das
mov
xchg
das
add
pusha
push
push
push
pop
sub
mov
mov
adc
sahf
and
push
cltd
pop
adc
mov
popa
dec
mov
ljmp
inc
dec
ljmp
push
push
out
add
jae
iret
pop
adc
addr16
add
sahf
mov
and
out
ret
mov
addr16
cltd
sub
insl
and
jmp
cltd
ds
arpl
push
lds
hlt
loopne
loope
in
les
je
shll
add
pop
in
jg
sub
jno
sub
mov
cmp
xor
bound
inc
xor
add
jns
hlt
out
push
xchg
or
jb
popf
jno
orl
loop
mov
pop
sarb
jle
jno
loop
mov
imul
cmpsl
sub
add
xchg
xchg
cmp
neg
pusha
adc
add
adc
add
dec
sbb
cmpb
jp
fstps
icebp
stos
cmpl
dec
push
sbb
add
sub
xor
addr16
sbb
adc
jge
arpl
xchg
jno
imul
adc
nop
ret
xchg
pop
mov
neg
jp
push
mov
push
pusha
fcmovb
in
mov
cmp
cli
mov
ja
cmp
xchg
pop
into
sbb
orl
in
push
das
inc
in
jo
lahf
outsb
sub
xor
inc
xchg
sbb
in
popa
movsl
push
pop
loopne
jmp
adc
dec
std
neg
mov
push
mov
mov
nop
test
pop
andl
icebp
fsubrl
cld
xchg
add
sbb
xor
not
test
xchg
push
xorb
fldenv
lock
mov
outsb
jmp
fs
pop
push
jb
enter
pusha
add
lock
cmpsb
add
xor
and
outsl
and
pop
clc
arpl
xchg
add
mov
sub
dec
mov
and
mov
inc
fistpll
test
daa
les
movsl
mov
pop
fdivrs
pop
add
les
push
int
enter
pusha
fidivrs
mov
adc
mov
mov
rclb
repnz
rcrb
inc
jo
leave
outsl
push
lock
leave
aas
ret
sub
insb
add
or
cmpl
add
jle
jmp
mov
mov
sub
push
xchg
jp
pop
jbe
lock
mov
mov
aad
out
insb
bound
js
dec
aam
mov
mov
stc
mov
or
push
inc
ja
fcoml
dec
dec
movsl
call
ja
pop
in
add
pop
mov
insl
push
repnz
pop
out
or
push
lahf
inc
mov
mov
pop
add
sbb
clc
dec
jbe
rol
call
lret
mov
jg
imull
cltd
ss
test
jle
xchg
mov
inc
repnz
es
addl
sbb
xor
xor
mov
in
std
lcall
inc
je
dec
push
ss
pusha
push
popf
addb
pop
inc
or
std
cwtl
jae
sbbl
stc
js
push
jg
sbb
pop
jmp
test
lret
push
mov
stc
daa
xchg
add
pop
sub
jp
mov
jo
push
cmp
fsubr
test
clc
dec
or
dec
xchg
mov
into
imul
in
inc
lret
notb
push
nop
sahf
dec
icebp
mov
dec
imul
leave
rorb
sbb
mov
mov
push
addl
pop
dec
inc
test
in
mov
dec
mov
mov
xchg
dec
lods
imul
lods
jb
xchg
pop
dec
into
imul
push
ljmp
mov
cld
out
repz
movsl
or
scas
cwtl
dec
push
add
mov
push
xor
mov
dec
mov
xchg
ret
repz
pop
mov
xchg
or
out
aaa
push
sub
movsb
cmpsl
jmp
orb
jne
arpl
cld
sub
test
pop
int3
pop
push
and
arpl
add
loope
sub
testl
add
jmp
jg
sub
dec
mov
mov
data16
orl
fs
je
bound
pop
loope
cmpsl
in
lods
and
das
or
psubsw
ret
jg
push
inc
enter
adc
ds
std
jno
xlat
cmp
mov
stos
pop
xor
int3
loopne
lods
dec
jb
fildl
push
push
sahf
or
jnp
add
lea
and
adc
sub
adc
or
jne
mov
inc
inc
and
mov
loope
cmpsl
xchg
pop
je
pop
push
pop
repnz
inc
mov
push
cli
mov
inc
dec
jmp
aaa
or
push
pushf
mov
dec
inc
clc
jp
push
inc
std
pop
xor
cmp
sbb
std
inc
push
inc
inc
sbb
bound
dec
sbb
outsl
sub
fs
outsb
mov
xchg
scas
push
mov
ficompl
aaa
ja
lea
dec
and
mov
mov
mov
stos
mov
sub
mov
ss
push
and
pop
roll
sbb
rolb
adc
xor
out
mov
hlt
imul
lret
push
dec
or
jns
cmp
sbb
fnstsw
xchg
xchg
jbe
push
jae
loopne
adc
dec
shll
icebp
out
jmp
sbbl
in
mov
inc
push
decb
cwtl
pop
xchg
sub
test
je
mov
fwait
or
leave
push
push
into
leave
stc
pop
add
mov
push
lahf
lds
daa
xor
outsl
negb
out
js
dec
adc
push
and
or
xchg
add
dec
pop
fsubrs
js
fistpll
xchg
pop
inc
push
push
mov
or
adc
sub
pushf
roll
adc
jecxz
inc
shr
jo
iret
pop
jne
xor
lods
mov
hlt
sti
fstpt
add
xchg
nop
in
pop
nop
enter
hlt
pop
out
pop
dec
fmuls
add
sbb
push
inc
leave
dec
sub
and
mov
adc
mulb
adc
or
jbe
jge
push
out
mov
sub
negb
imul
in
and
jge
in
add
loope
dec
xor
xor
add
pop
stc
test
lret
scas
mov
xchg
test
push
es
jne
test
imul
test
in
and
pop
cld
xchg
lea
leave
cmp
movb
and
or
fxtract
sbb
lea
cmp
jmp
mov
sbb
nop
rolb
fdivs
cmp
arpl
push
adc
stos
icebp
push
mov
pusha
insb
jns
addb
int3
out
aaa
cwtl
jo
sub
ds
pop
cvttps2pi
add
inc
sbb
lret
adc
popf
lcall
sub
aas
xor
incb
popf
mov
movsl
and
stos
pop
inc
pop
fstl
popa
jmp
dec
movsb
jg
popf
movsb
push
sar
ljmp
nop
jo
pusha
leave
dec
imul
mov
lahf
stc
push
sub
xchg
movsl
icebp
pop
xor
pusha
inc
icebp
push
rcll
sbb
lret
or
test
pop
jns
mov
inc
fs
cs
jge
shlb
jle
daa
rcrl
lods
int3
subl
mov
adc
mov
cmp
adc
add
test
push
and
stos
mov
inc
addr16
ret
cmp
ja
imul
pop
add
das
mov
push
sub
adc
stos
into
addr16
nop
cmp
dec
mov
and
rorb
jmp
out
push
or
xlat
sbb
or
and
add
sbb
rcll
mov
add
popf
aas
inc
jns
or
fstp
addl
setg
add
clc
or
movsb
push
add
pop
mov
dec
test
xchg
xchg
or
imul
ffreep
xor
sub
lret
mov
pop
adc
fisttpl
pop
xlat
scas
fdiv
xor
pop
push
jbe
pop
push
pop
inc
mov
shr
cmpsb
mov
push
dec
sub
jge
cmp
mov
pusha
jmp
add
push
in
jmp
adc
dec
or
arpl
cmp
rcrl
lds
cs
pop
in
out
mov
sbbl
imul
pop
dec
pushf
add
rorb
pop
in
mov
push
stos
call
mov
scas
jno
adc
cmpsl
cmp
xchg
out
ret
jge
mov
sub
pop
xchg
push
or
pop
loop
idiv
mov
inc
jnp
push
popf
xor
add
inc
movsb
xlat
mov
pop
xchg
xlat
mov
repz
lods
rcrl
les
mov
pop
pop
xor
or
das
lcall
loop
sarb
clc
push
and
jmp
loopne
mov
adc
mov
outsb
dec
iret
adc
roll
add
cmp
xlat
push
enter
je
xor
add
jb
iret
mov
sqrtps
push
sub
pop
fs
adc
mov
mov
inc
gs
popf
or
mov
movsb
sahf
movsl
jge
arpl
or
and
sbb
mov
aam
sbb
push
sbb
in
das
sub
pop
adc
subb
sub
fcoms
xchg
mov
mov
pop
outsb
in
cld
clc
xor
mov
mov
xchg
lcall
xchg
test
fs
push
outsb
fadd
scas
sbb
out
mov
jge
adc
sub
addb
and
out
mov
push
push
jmp
sbb
daa
rolb
sbb
push
sbb
and
ds
jg
adc
in
pop
mov
cmc
sub
jg
push
cmc
jns
mov
rcll
mov
cmp
call
mov
insb
adc
aaa
enter
rolb
push
push
and
pop
ret
or
daa
adcb
std
imul
sub
pop
and
adc
sbb
je
sbb
adc
das
push
idivl
leave
enter
je
repnz
adc
es
push
jmp
lcall
xchg
fldl
dec
addl
ja
pop
jl
push
xor
or
clc
adc
xchg
cmp
push
fstps
clc
in
sub
mov
call
fwait
jp
jle
lea
dec
mov
add
push
bound
jmp
mov
pop
or
mov
xchg
repz
loop
xchg
orl
out
adc
xchg
adc
jmp
sbbb
push
into
or
adc
dec
inc
push
xor
frndint
inc
out
repnz
ja
adc
dec
out
jae
mov
not
fwait
push
test
in
mov
inc
ret
test
pop
test
sbb
push
jne
movl
xchg
pop
dec
adcl
xlat
dec
cmpsl
jnp
fdiv
jp
sub
add
in
fldcw
and
test
or
out
shlb
xchg
nop
mov
lock
sbb
cmp
stos
out
ficoms
adc
sub
adc
lret
fcoms
cmp
add
jecxz
dec
inc
xor
icebp
ljmp
pop
dec
repz
lds
pop
sub
lods
or
or
inc
lock
inc
stc
movsl
push
les
lds
jp
pop
dec
jne
loopne
push
pop
add
or
add
lret
je
dec
jno
mov
ficoml
and
jb
push
int3
pop
xor
ficomps
xor
mov
loopne
mov
mov
fcoml
add
push
mov
pop
cs
cmp
dec
not
inc
das
jmp
jl
js
add
lret
pop
cmc
stmxcsr
rolb
push
jmp
dec
pop
jle
ljmp
test
adc
fmull
je
enter
lea
scas
pusha
imul
cmpl
fs
dec
mov
ja
test
dec
std
or
pop
xor
sbb
insl
or
pop
add
pop
jge
in
and
cmp
testb
icebp
add
repnz
das
orb
add
and
cmpsl
aaa
cld
cmp
enter
lcall
inc
ret
mov
pop
cmp
mull
mov
mov
add
lock
scas
add
loopne
cmp
faddl
dec
bound
jmp
mov
jo
orb
fwait
jno
neg
rorl
lods
and
ljmp
add
mov
pop
inc
adc
xor
scas
jne
cmp
pop
sbbb
jo
or
pop
out
jbe
js
xchg
mov
inc
sub
sub
aam
xor
push
mov
add
gs
pusha
popl
sbb
rcrl
dec
aad
int
push
cltd
adcl
sbb
xchg
shr
test
lods
or
push
repz
push
push
mov
cmc
and
pop
and
mov
add
xchg
scas
pop
cli
add
fwait
cld
or
repnz
mov
lock
cmp
mov
cmpsb
and
jae
push
sbb
push
stos
mov
xchg
push
nop
mov
out
and
push
push
sbb
aam
cmp
and
icebp
and
dec
fstpl
or
or
push
insl
add
or
mov
arpl
sub
imul
mov
pop
pop
pop
mov
daa
add
in
add
into
cmp
sbb
and
popf
cwtl
ret
xchg
jbe
jmp
push
add
arpl
mov
add
jmp
lcall
push
loope
or
inc
xor
mov
jmp
gs
popa
data16
xchg
roll
cmp
fmul
add
inc
mov
push
jns
enter
mov
loope
sub
in
add
push
or
and
mov
push
inc
mov
cld
push
add
inc
or
icebp
dec
dec
aam
jbe
inc
test
shlb
testl
data16
jne
xchg
dec
aas
cmp
push
mov
push
cmp
adc
rcrb
push
sbb
imul
shrb
hlt
sbb
push
scas
dec
fcmovne
fisubs
enter
mov
inc
pop
cs
push
mov
add
popa
and
cld
cmpsb
and
mov
or
push
pop
sub
pop
sub
add
jmp
dec
add
in
stos
cld
inc
xchg
cli
lret
dec
xor
leave
inc
push
lods
clc
test
orl
push
fcomi
xchg
cmp
movsb
jmp
cmp
mov
mov
in
lea
mov
dec
mov
or
aas
sub
mov
cmp
cld
add
pop
or
add
lock
sbb
mov
notb
push
not
nop
jge
lods
push
popf
xor
call
adc
jo
popf
pop
pop
sub
dec
loope
test
dec
push
stos
imul
inc
lret
sub
repnz
or
popa
sub
xor
ja
addr16
jbe
aaa
sarb
add
movsb
js
jnp
adc
xor
add
jmp
mov
pop
std
sahf
hlt
icebp
adc
shlb
push
loop
fisubrs
sub
push
sbb
sub
clc
fsubrs
dec
pop
xor
imul
mov
shll
es
jle
sub
dec
push
jno
mov
pop
cmp
cmp
int3
icebp
sbb
or
inc
adc
repnz
ret
mov
rcll
mov
dec
test
lods
mov
mov
add
add
pop
push
jno
lcall
add
sub
cmp
mov
push
dec
mov
cmp
adc
and
roll
bound
dec
in
adc
jb
movsl
je
xchg
push
scas
pusha
arpl
insb
dec
inc
dec
loopne
ja
push
jp
xor
push
pusha
dec
mov
std
ficoms
fwait
sub
loope
xor
hlt
add
xor
orl
jge
add
dec
das
mov
add
pop
sub
jmp
rolb
mov
lea
loope
and
sub
punpcklbw
add
xor
and
outsb
mov
jmp
push
mov
in
popa
les
jne
gs
jle
loop
jae
addr16
stos
or
xor
rorb
into
push
aaa
xchg
loope
lahf
jge
add
or
pop
out
test
or
test
xchg
xor
leave
sbb
aad
pop
and
jecxz
adc
ficomps
push
or
dec
mov
mov
in
sbb
sub
pop
and
sbb
das
test
inc
out
popa
jno
jle
pop
mov
sub
arpl
dec
lods
inc
inc
inc
mov
dec
add
pop
push
push
adc
test
or
pop
and
inc
push
jmp
mov
and
leave
in
daa
push
xchg
and
ja
rcrb
mov
leave
sub
iret
push
ss
addr16
testb
jnp
mov
add
ror
frstor
int3
and
xor
pusha
add
sub
adc
iret
mov
xchg
inc
sub
dec
mov
pop
push
cltd
mov
sahf
aas
xchg
mov
dec
jb
pop
inc
or
cmpsl
jbe
adcb
not
xchg
cwtl
and
pop
pushl
mov
cmp
push
push
dec
jecxz
sbb
jb
add
pop
cli
jnp
subl
or
add
jmp
or
pop
subb
pushf
in
mov
ja
aad
f2xm1
push
pop
jecxz
xchg
outsb
inc
mov
sahf
push
test
xor
sbb
pop
rcrl
icebp
fwait
lcall
mov
aam
mov
fists
loope
lret
pop
push
pop
add
inc
jmp
icebp
aaa
mov
mov
dec
sarb
sbb
sti
neg
aam
lods
jne
in
icebp
mov
in
repz
inc
mov
pop
out
or
xor
adc
movsb
pushf
pop
push
pop
add
inc
dec
push
ja
out
push
mov
cmp
std
adc
inc
scas
mov
mov
xor
mov
push
xchg
and
cld
mov
mov
ja
lret
ss
xchg
adcb
or
jb
dec
cmp
adc
flds
mov
jmp
pop
pop
jns
cs
sub
or
xorl
sti
in
sbbl
imul
sbb
jno
mov
fs
nop
push
fmuls
iret
lret
sbb
or
and
push
push
cld
mov
mov
adc
sub
mov
mov
push
and
mov
xor
dec
add
test
add
add
pop
dec
in
mov
mov
shll
push
xchg
add
push
out
cmp
mov
pop
out
jno
jmp
pop
test
add
and
orb
jmp
and
js
or
fidivrl
sbb
pop
jle
mov
dec
add
jb
sbb
xchg
push
adc
push
dec
xchg
add
or
fidivrs
in
add
jne
or
jmp
inc
mov
add
js
les
test
pop
xor
or
popa
and
adc
neg
rclb
pop
push
dec
or
push
mov
push
mov
stos
mov
pop
lahf
enter
pop
cmp
adc
dec
sti
mov
adc
sub
pop
push
or
insl
xlat
adc
imul
popa
leave
pop
cmpb
out
rcrb
jno
popf
pop
mov
adc
xor
pop
push
aaa
or
ficoml
push
pushf
push
decb
xchg
jg
lcall
xchg
mov
jle
push
ret
mov
test
js
inc
adc
or
adc
inc
xor
inc
into
pop
pop
stc
fmull
adc
cmp
sbb
rcll
roll
jge
mov
jbe
shl
add
fadd
out
repnz
mov
mov
xchg
jo
sbb
outsl
pop
push
xor
orb
inc
andnps
ljmp
jl
sub
js
es
pop
adc
pop
ret
xor
inc
ds
std
ret
cmp
inc
daa
add
inc
or
fildl
cs
stc
ja
jle
cmpsl
sub
or
xor
mov
nop
push
lock
ljmp
outsl
test
pop
jmp
sbbl
push
aaa
ret
xchg
sub
adc
les
lret
jno
add
sub
orb
inc
in
add
jle
loop
in
jo
in
or
fldl
jbe
sahf
pop
jns
cmp
mov
sub
xor
mov
and
ret
push
xchg
lods
mov
ja
lret
mov
and
xorb
pop
add
xor
subl
push
and
test
nop
movb
shrl
movsb
pushf
shrb
or
dec
dec
mov
ljmp
mov
mov
in
inc
or
outsb
lret
dec
pop
clc
and
mov
add
pusha
inc
test
mov
aaa
dec
shrl
test
popa
cli
js
neg
xchg
cwtl
mov
lods
lahf
ret
add
push
repnz
pop
xor
xchg
mov
fnstenv
inc
ficoms
pop
stc
movsl
jne
jbe
add
inc
jno
adc
add
nop
mov
xor
std
adc
icebp
cmp
stos
fsubl
jg
cmp
addr16
mov
out
gs
mov
ja
mov
mov
push
pop
daa
sub
and
cmpsb
push
sbb
adc
sarl
scas
jbe
mov
popf
xchg
cwtl
cld
in
imul
aam
jp
or
out
repz
or
adc
data16
add
sti
push
dec
xchg
dec
pop
out
lret
mov
push
push
loopne
or
pop
lds
cmpsb
push
push
xchg
pop
mov
or
andb
addr16
pop
and
stos
flds
mov
xor
sbb
inc
adc
push
icebp
add
fldl
push
sub
dec
rorl
and
and
daa
ja
or
inc
fs
ret
sub
inc
ficompl
sub
neg
jle
lcall
add
insl
dec
add
push
inc
cmp
sub
jmp
push
pop
pop
mov
jg
bound
xor
push
add
or
and
test
mov
shl
enter
in
jb
aas
xchg
push
dec
cmpsl
push
in
adc
mov
fs
push
jno
pop
call
inc
and
mov
scas
push
cmp
dec
jmp
push
sub
and
ret
cmc
outsb
add
test
mov
push
adc
cli
mov
sub
jmp
mov
push
and
sete
sbb
lret
call
fcoms
or
add
loope
push
out
push
pop
jno
inc
lds
subl
cmp
sbb
daa
ja
xorb
insl
cs
lds
pushf
dec
out
push
sbb
cli
xlat
push
imul
cmc
in
ja
popa
mov
stos
push
xlat
push
stos
pop
cmp
sbb
add
push
add
stos
out
clc
rcrb
push
add
sbb
inc
jp
xchg
pop
mov
scas
aam
test
dec
sbb
inc
stos
enter
pop
sub
jmp
add
push
retw
enter
lret
inc
je
inc
adc
jne
cmp
loopne
jns
push
mov
popf
push
fldl
dec
push
loopne
lods
inc
sub
imul
sbb
cld
mov
sbb
jle
nop
lret
adc
and
push
adc
or
jmp
mov
sbb
jb
sarl
mov
daa
and
xchg
stc
add
ljmp
xor
xor
add
jle
loop
pop
clc
xchg
inc
cmp
dec
pop
sahf
pop
dec
inc
xor
imull
scas
mov
pop
mov
scas
dec
cwtl
ret
jg
rorb
mov
loopne
push
or
push
push
cmc
pop
ss
pop
fidivrs
cld
out
add
jne
sub
pop
push
jns
inc
push
pop
mov
insb
jmp
aaa
add
out
in
sub
adcl
inc
add
sub
notl
ror
cltd
inc
xchg
mov
das
int3
dec
hlt
inc
fwait
inc
sbb
push
inc
add
dec
rorb
divb
mov
or
lds
in
std
fisubl
or
jmp
mov
bound
clc
jb
sub
add
int
lea
out
stos
sub
jmp
xchg
jl
mov
jle
test
mov
pop
test
movsb
movsb
mov
ret
loop
dec
pop
pop
add
push
fbld
jns
in
ds
pushl
add
cwtl
scas
mov
ljmp
cmp
pop
add
adc
rcrb
push
lcall
and
rcr
lret
ljmp
subb
sahf
arpl
and
ds
jp
out
or
sbb
enter
scas
lods
mov
pushf
xor
dec
pop
jle
das
shrb
or
stos
loope
push
jge
iret
adc
sub
push
out
addr16
push
in
popf
mov
add
orb
frstor
cmp
lret
aam
push
outsb
and
pushf
fimuls
add
add
cmp
pop
xchg
ficompl
adc
mov
sbb
cmp
push
mov
sbb
cmp
dec
out
lret
sub
or
int3
in
cwtl
andl
subb
or
testb
lods
leave
repnz
and
pop
pop
add
push
sub
sub
pop
jp
movsb
push
in
pop
scas
int3
pop
adc
add
inc
push
or
pop
dec
mov
daa
pop
xchg
rolb
fmuls
stos
repnz
xchg
mov
inc
pop
cld
jl
mov
add
std
pop
rolb
or
mov
negb
xor
leave
mov
xchg
ja
popf
inc
push
cmova
add
out
popa
adc
inc
fcoml
xchg
add
add
loop
imul
shl
testl
sub
jno
lea
fsts
dec
mov
fstl
jp
sbb
dec
sub
decb
jno
std
icebp
push
mov
pop
inc
out
mov
and
inc
add
pop
pop
sbb
mov
mov
mov
ljmp
sub
sbb
mov
mov
mov
lds
mov
xor
popf
out
adc
sbb
push
pop
push
pop
mov
repnz
and
sub
daa
test
daa
pop
pushf
pop
das
in
or
outsl
add
xchg
loopne
fnsave
or
addr16
nop
into
or
popa
and
mov
sub
xchg
int3
out
push
mov
inc
jmp
xchg
je
test
popf
mov
jne
int3
adc
pusha
adc
test
stos
leave
mov
ljmp
inc
or
punpckhwd
add
notb
xchg
jmp
xchg
add
or
sbb
daa
inc
repnz
cmp
sub
push
cmp
xchg
xchg
pop
lret
cmp
insl
mov
mov
mov
shlb
icebp
push
push
lock
jp
lock
xor
leave
dec
mov
adc
pop
fincstp
mov
mov
mov
jle
add
mov
fnop
xorl
add
pop
push
ljmp
add
and
inc
xchg
or
push
dec
mov
ret
dec
into
jmp
jbe
dec
add
not
or
nop
enter
insl
dec
push
or
cmp
push
leave
xor
lahf
ret
orb
push
mov
repnz
dec
fildl
out
jnp
cwtl
mov
rcll
lods
ja
mov
push
ret
pop
es
add
xlat
pusha
arpl
orb
dec
pop
pop
or
loope
ficompl
cmp
xor
cltd
jo
in
fs
inc
cmp
push
lret
push
add
fiaddl
dec
ud1
xor
jg
cld
inc
add
fld
nop
and
mov
and
in
dec
hlt
cmp
and
inc
push
and
pop
cmp
jbe
add
jle
cli
cwtl
repnz
sbb
xor
inc
lods
xchg
lds
or
js
mov
cmp
cmp
iret
mov
mov
cmp
pusha
cmp
fsubl
test
sbb
shlb
mov
jecxz
xchg
add
sub
push
add
xchg
sysenter
push
push
pop
out
mov
int3
cld
pop
gs
add
aas
mov
sub
sub
push
add
jg
add
xchg
cmp
in
ficoms
cmp
mov
cmpsb
add
push
fadd
push
cmp
mov
push
dec
push
xor
add
and
lret
dec
or
inc
scas
popa
push
mov
add
push
js
fdivrp
movsb
mov
dec
fucom
insb
add
lcall
push
push
jmp
add
out
loope
ja
idiv
cltd
fxam
mov
mov
out
loope
mov
sbb
or
cmc
mov
or
pop
sbb
cmp
subb
cld
mov
dec
mov
or
std
nop
fisubl
dec
leave
aad
ja
sbb
pop
inc
enter
inc
sub
nop
popf
das
es
push
sub
adc
and
dec
lods
mov
inc
add
add
push
stos
cmpsb
add
js
and
fs
mov
popa
jle
outsb
mov
xchg
xor
fiaddl
mov
xor
xchg
xor
and
test
leave
sub
jno
pop
ljmp
pop
pop
cld
xchg
movsl
stos
xchg
ret
jb
fucomip
outsb
xor
jnp
subps
pop
add
lret
inc
jmp
pushf
mov
mov
jnp
push
in
fimuls
mov
push
mov
aas
fmul
out
cmp
xchg
inc
fst
inc
adc
les
and
loop
enter
ljmp
add
add
mov
mov
jg
sub
ret
xor
mov
shll
pop
pop
popa
orb
lret
dec
xchg
adc
add
ljmp
lock
outsb
mov
or
inc
shl
xchg
or
punpcklbw
jne
loopne
pop
pop
daa
aam
shlb
xor
mov
sub
inc
stos
ror
push
daa
pop
xor
push
test
add
loope
add
inc
aas
mov
cwtl
aad
inc
push
jmp
mov
sub
cs
xlat
int3
pop
cmp
jg
icebp
cmp
loopne
xor
popa
ds
pop
rol
add
pop
es
cmp
xchg
repz
popf
stos
jge
pop
lret
jmp
sub
out
cmp
pop
mov
mov
pop
xchg
pusha
insl
das
add
dec
dec
imul
movl
jo
shll
push
outsb
andb
pop
cmp
or
cmpsl
test
sahf
adc
jecxz
xor
mull
add
insb
add
xor
es
push
pop
lods
lret
mov
adc
inc
xchg
call
dec
fdivr
xchg
jbe
scas
out
push
mov
pop
not
das
mov
xor
decb
cwtl
loope
mov
cmp
xchg
jmp
out
lret
cmpsl
xor
loopne
push
fcmovne
icebp
andl
xor
xor
push
test
mov
push
daa
sub
in
jle
push
jge
or
mov
mov
xor
test
out
call
ficoms
and
push
js
xor
popf
inc
and
test
push
inc
sbb
jns
add
lret
bound
add
xchg
sbb
jl
dec
imul
test
outsl
push
and
lret
in
aas
out
mov
faddl
daa
jmp
sub
movsb
dec
test
sub
in
and
test
adc
test
loope
es
popa
and
test
adc
loopne
outsl
and
add
out
pop
enter
cld
pop
sub
lea
into
pop
mov
enter
xor
cli
std
mov
adc
movsl
xlat
lock
lock
push
mov
and
jno
hlt
daa
sub
ja
sub
fldcw
je
stos
repnz
lahf
shlb
pop
pushw
xchg
arpl
out
lock
and
inc
pop
add
pop
stc
sub
add
mov
lods
inc
push
push
mov
push
mov
shl
rorb
add
idivl
mov
inc
push
inc
lret
clc
cmp
and
mov
jb
sti
decl
pop
fstpt
enter
popf
mov
mov
mov
inc
rorl
stc
pop
add
cli
jo
out
mov
adc
mov
icebp
imul
pop
sbb
add
imul
mov
dec
sub
lret
xlat
test
mov
packuswb
push
test
mov
out
pop
outsb
out
xor
dec
gs
push
pusha
pop
faddl
jge
and
inc
leave
xor
xlat
mov
call
cmp
lock
dec
fiadds
jnp
xchg
mov
int3
or
or
dec
push
cmp
adc
fs
xchg
xor
adc
sub
mov
mov
imul
lds
cltd
in
mov
dec
or
in
jecxz
shrb
inc
stos
xor
enter
jb
add
loopne
add
daa
mov
faddl
ret
fucomp
mov
mov
icebp
dec
dec
pop
jo
pop
mov
je
xchg
jl
imul
push
push
not
push
out
jle
mov
cmp
rol
dec
push
pop
fcoml
cli
mov
cmp
inc
sti
mov
sti
and
lret
push
and
jecxz
mov
repz
dec
jnp
cmc
in
mov
xchg
push
mov
cmp
xchg
push
lods
and
pop
xchg
pushf
loopne
sbb
inc
mulw
pop
popa
push
jg
ficoms
cmp
pop
sub
mov
in
test
inc
add
adc
repnz
shr
mov
mov
mov
inc
aad
nop
cmc
or
sub
addb
sar
pop
or
mov
les
cwtl
dec
inc
js
cmc
jge
add
mov
or
jmp
pushf
fisubl
les
lds
xchg
shrl
add
testl
push
inc
xchg
mov
mov
add
iret
test
clc
inc
inc
lods
adc
outsl
lock
and
aam
push
mov
jne
insb
add
pop
jmp
pmuludq
add
scas
jl
cmc
add
shr
dec
cmp
fstl
jmp
fiaddl
jne
lret
xor
addr16
inc
cli
cltd
pop
jbe
fidivrl
pop
and
jl
mov
into
pop
mov
add
mov
push
divb
add
ds
sub
loop
adc
and
push
shll
xor
sub
push
push
mov
sbb
cmp
leave
je
rol
jg
es
jl
push
inc
pusha
mov
mov
pop
pop
jo
pop
push
in
mov
xchg
lahf
in
fidivl
shr
and
negl
dec
dec
in
loopne
add
pop
push
push
mov
inc
imul
xchg
mov
ja
ljmp
xor
js
cmp
mov
mov
not
mov
and
shl
pop
add
xchg
fmull
es
xchg
pop
stc
insl
movsb
sahf
cmp
sub
repz
xlat
sarl
push
inc
lret
jno
xlat
and
inc
pop
pop
popf
mov
movsb
mov
mov
pop
cbtw
inc
dec
repz
in
leave
fldcw
jg
mov
faddl
mov
pop
icebp
xchg
or
cmp
inc
lret
hlt
add
fwait
mov
jne
jne
jg
jmp
pop
ret
jmp
subl
or
xchg
shlb
sub
dec
mov
or
xor
and
push
dec
roll
mov
loop
xchg
popa
fdivs
mov
inc
leave
mov
push
lret
add
testb
add
aas
inc
pop
mov
jecxz
cmp
or
test
or
adc
clc
mov
out
xor
out
mov
insb
cmpl
cmp
fdivs
jns
cmpsl
ljmp
mov
lock
xchg
pop
lock
mov
ret
mov
bnd
repz
clc
push
addb
push
xor
sub
in
adc
mov
in
int3
lcall
pop
push
mov
adc
out
cmp
je
push
mov
mov
push
push
adc
jmp
dec
add
icebp
pop
push
mov
or
sub
adc
dec
mov
push
add
rcll
stos
icebp
sbb
test
rol
dec
xor
push
pop
std
jo
cmp
adc
mov
mov
pop
add
inc
imulb
out
dec
mov
push
arpl
dec
dec
mov
shl
sbb
and
fiadds
jge
gs
lahf
cs
mov
imul
test
int3
jno
push
jp
out
loopne
or
adc
xchg
in
nop
rcr
rorl
fs
cltd
repnz
mul
mov
std
je
jmp
xchg
cltd
test
fnstcw
or
inc
push
gs
xlat
or
cmp
adc
inc
out
sub
lahf
dec
mov
jmp
pop
adc
cmc
xchg
rcr
mov
imul
add
nop
add
pop
push
push
sbb
push
lods
pusha
or
jmp
push
mov
xor
jnp
repz
dec
jp
inc
mov
in
mov
hlt
pop
dec
add
mov
sahf
pop
cld
pop
sub
sbb
ret
jmp
outsl
scas
sub
xchg
add
sub
scas
mov
mov
into
adc
div
js
rolb
test
icebp
into
subl
stos
lock
pop
xor
fcmovnbe
shl
add
pop
loopne
inc
std
js
xchg
je
mov
mov
in
xor
xor
jnp
mov
aad
bsf
push
push
jle
or
ja
fsubrs
ffree
adcb
dec
cmp
cltd
cmp
test
das
rcrl
loope
push
xchg
mov
test
sbb
stos
je
subb
incl
cmpsb
jmp
shlb
les
fs
sbbl
xchg
xchg
add
pop
jge
repz
jo
je
xchg
dec
jno
mov
fnstenv
dec
js
push
sub
pusha
ret
repz
pop
inc
or
pop
push
mov
dec
mov
sbb
sub
fs
sahf
pop
ljmp
adc
cmc
and
add
lahf
cmp
out
stos
fsubrl
gs
add
stos
mov
js
and
test
mov
popf
fiadds
jmp
add
das
adc
add
sbb
or
or
jnp
cmpsb
mov
cmpb
mov
lods
jle
pop
addr16
mov
jne
pop
repnz
dec
cmp
mov
subb
cmp
insl
subb
cmp
test
dec
xchg
add
mov
dec
inc
cli
mov
jnp
sub
inc
pop
jmp
leave
pop
int3
inc
cld
fcomps
mov
mov
shl
data16
or
in
and
mov
jo
inc
fadd
add
add
push
push
roll
sub
and
fisttpl
rcr
int3
xchg
add
cli
mov
ljmp
sbb
mov
or
jmp
sub
add
aas
add
dec
aas
inc
jle
and
jp
pushf
and
in
pop
repz
movsl
dec
push
and
xor
mov
addr16
cmp
mov
jmp
arpl
fst
jnp
and
ret
fs
call
repz
pop
sbb
push
add
add
bound
mov
mov
cli
ljmp
enter
sub
lahf
clc
fsubl
push
adcl
fisubrl
out
pop
paddd
jge
add
jo
and
xor
sbb
add
xor
stos
push
mov
jns
inc
jmp
lcall
sbb
insl
xchg
jg
sbb
cmp
and
jb
nop
inc
mov
lret
mov
mov
inc
cld
sub
or
push
bound
pop
jne
cmp
mov
push
pop
subb
test
push
pop
lods
push
sub
add
adc
push
js
jle
rclb
imul
fadds
xchg
cmpb
out
add
pop
push
push
daa
mov
aam
lahf
xchg
mov
in
cs
inc
xor
ljmp
ret
fs
cwtl
inc
push
mov
and
push
pop
push
mov
jl
adc
mov
iret
je
dec
adc
xorl
aaa
sub
xorl
fcoms
pusha
pop
push
jge
sbb
jle
dec
sbb
loopne
pop
inc
add
sbb
sub
add
stos
push
sub
adc
xchg
jo
js
clc
adc
insb
pusha
dec
fldcw
gs
outsl
push
inc
insl
adc
loop
fadds
mov
xlat
xor
add
or
jl
daa
mull
cltd
push
jb
add
push
push
sub
icebp
lahf
xor
testl
mov
pop
jo
xchg
movsl
pop
push
les
adc
leave
and
scas
ljmp
xchg
jo
and
cmp
push
repnz
mov
xchg
adcb
add
int
xchg
leave
neg
and
test
add
push
cmpsl
stos
out
add
mulb
cmp
mov
or
lret
aam
pop
jmp
pushf
mov
shr
movsl
jno
xor
movsl
mov
adc
push
pop
push
push
aam
in
and
imulb
filds
push
sub
std
lret
lods
std
or
or
push
mov
push
aad
jo
daa
cmc
sbb
rorl
mov
and
es
dec
sub
fs
sbb
pusha
xor
push
arpl
into
jmp
jmp
mov
sub
pop
jmp
inc
pop
mov
dec
adc
jle
js
in
movsl
sub
divb
test
xchg
out
mov
adc
in
movsl
rolb
or
push
mov
lss
out
movsb
aad
notl
ret
pop
lods
mov
test
or
loopne
test
enter
in
mov
adc
xlat
push
sbb
ja
jl
sbb
adcb
js
or
pop
xor
push
jmp
ret
fs
cmp
push
add
inc
data16
pop
jae
xchg
imul
sub
pop
pop
mov
pop
sbb
imul
adc
fistpll
pop
enter
repnz
adc
ja
loop
ja
dec
mov
xor
push
push
add
or
repz
aam
cwtl
sub
or
cltd
clc
bound
ret
ss
xchg
pop
movsb
repnz
push
movb
cmp
jle
cmpsl
dec
mov
add
and
push
jmp
arpl
and
repnz
pop
or
push
jmp
stc
jo
daa
sbb
fstps
neg
lock
or
pop
push
push
popa
hlt
jmp
cs
out
jecxz
mov
push
hlt
xor
sub
and
adc
shlb
dec
insb
mov
or
adcb
pop
dec
iret
cmp
mov
xchg
dec
movsl
push
jmp
movsl
popf
nop
adc
sahf
loope
sub
inc
sbbb
sbb
ret
sbb
push
pop
mulb
jle
cltd
jmp
jnp
out
mov
mov
fildl
cmp
add
or
aaa
jmp
sbb
sub
xor
shll
int
push
imul
push
pop
inc
sbb
in
lods
push
shrl
mov
lds
dec
mov
xor
aas
je
sti
jbe
les
lock
pop
xor
fldenv
imul
jmp
push
pop
mov
cmpl
js
mov
ret
pop
in
mov
adc
push
das
or
mov
xlat
pop
imul
and
in
loop
out
push
mov
or
ds
pop
in
mov
ret
jmp
jb
sub
sub
std
inc
testb
add
mov
xor
inc
insl
fisttps
sub
sub
sbb
jmp
imull
loopne
pop
pusha
cmp
dec
lahf
push
fbld
adc
aad
cs
sub
fists
aam
loopne
sbb
out
pop
inc
jno
jg
roll
jge
lods
out
and
nop
outsl
sub
inc
jne
add
inc
cmp
xchg
xchg
rcrb
cmp
and
test
out
lahf
jge
cltd
mov
popa
push
xchg
push
xchg
loop
cmp
push
es
test
insb
ljmp
mov
dec
inc
jmp
adc
xor
xchg
shll
dec
loop
loopne
pop
mov
xor
and
jp
out
dec
pop
add
add
imul
or
sub
mov
jle
and
test
inc
pop
pop
mov
ljmp
xchg
ds
scas
daa
inc
sbb
cwtl
jle
test
mov
pop
bound
fadds
aaa
cmc
call
sbb
push
test
sahf
xchg
mov
aas
xor
imul
inc
push
mov
daa
sub
clc
cmp
js
lret
mov
ret
sbb
add
loope
or
ret
test
inc
neg
ljmp
jmp
pop
push
mov
lds
adc
mov
ja
sub
jb
add
sbbb
movsb
adc
dec
std
add
fsubrs
ret
mov
jmp
xchg
mov
cmp
out
stos
jg
gs
loope
jl
inc
lds
dec
mov
scas
or
cmp
inc
mov
das
jecxz
fdiv
or
add
jl
adc
aaa
out
js
push
std
sub
in
mov
stc
and
pop
inc
shr
mov
adcl
inc
xorl
pop
test
push
sub
push
sub
gs
mov
nop
call
mov
fsts
mov
or
test
sti
arpl
push
sub
adc
pop
sbb
das
xor
ret
add
leave
inc
or
sbb
xchg
jmp
rcll
pop
push
add
je
jne
jp
jmp
mov
jbe
out
adc
mov
or
dec
rcrl
xlat
ret
xchg
xchg
lea
mov
loop
outsb
jecxz
pop
nop
loop
push
xor
repz
cmp
and
push
xor
popf
mov
pop
mov
std
mov
pop
test
loope
jp
pop
cmc
sbb
ja
xchg
testb
and
add
pop
push
pop
jle
das
jge
in
popa
and
jmp
lea
ljmp
outsl
call
sti
or
adc
push
jmp
fldcw
add
cmp
loope
adc
not
dec
fs
inc
into
push
out
test
adc
mov
into
inc
pop
cwtl
movsl
push
or
push
jmp
loop
jl
lret
jne
iret
shrb
pop
int3
sarl
mov
std
pop
shr
mov
xor
xor
add
loope
movsb
jns
add
push
inc
sbb
dec
jb
jg
and
push
xchg
sti
mov
fisttps
push
xor
cmp
mov
xchg
fwait
clc
lds
and
pop
lods
or
adc
cmpsl
push
ret
rorl
jmp
lret
mov
test
inc
pop
and
cmp
enter
sbb
add
mov
and
sub
or
adc
add
xor
out
xchg
in
outsl
test
jne
mov
insb
repnz
in
inc
ljmp
xchg
push
add
std
or
cmp
scas
mov
orl
fstps
jnp
or
loopne
rorb
cmp
xchg
mov
shr
fldl
scas
push
pop
sub
cs
cwtl
sub
popa
sbb
push
stos
int3
add
pop
test
xor
dec
xlat
push
orb
cli
adc
cs
dec
pop
ret
fisubl
jbe
push
jne
lret
cmp
dec
add
push
mov
js
repz
xorb
xor
js
mov
mov
lock
lret
negl
push
cmpl
call
mov
and
push
ja
dec
and
adc
sub
stc
pop
std
fstps
mov
and
push
add
mov
orl
cmp
into
and
pop
pop
test
lret
xor
dec
icebp
inc
fstp
and
push
dec
push
sbb
xor
test
je
idivl
sbb
mov
dec
mov
test
into
add
add
push
dec
fnstsw
dec
repnz
and
testb
out
adc
aas
jecxz
xor
sbb
mov
dec
xor
adc
sbb
sub
hlt
pop
inc
adc
inc
ret
sar
imul
pop
ja
stos
or
popa
mov
inc
add
jne
mov
jmp
or
sub
out
push
outsl
sub
cmc
stos
nop
cmp
fsubr
das
mov
push
loopne
jno
push
repnz
mov
stos
mov
insl
les
fucomip
and
mov
xchg
cld
mov
int3
in
pop
sbb
push
gs
jno
xchg
int3
orl
sarl
repnz
add
sub
ljmp
xchg
dec
lret
add
psubusw
in
incb
push
adc
or
or
cs
xor
pinsrw
or
xor
cmp
sahf
sub
mov
repnz
aam
lock
dec
adc
shlb
adc
push
cmp
adc
icebp
xor
fnstsw
mov
in
and
idivb
lret
mov
dec
out
enter
adc
dec
scas
adc
test
sbb
and
out
mov
pusha
pop
cmpsl
and
repz
movsl
push
test
lcall
mov
dec
pop
mov
pop
mov
jl
push
add
jmp
fidivs
push
sub
mov
cmp
addl
adc
add
mov
popf
outsb
xchg
adc
sub
or
jbe
xor
pop
enter
dec
push
mov
and
and
or
jg
jge
xchg
sarb
add
cmpsb
dec
push
ffreep
mov
push
inc
push
in
les
ja
repnz
leave
movsl
loopne
cmc
hlt
stos
sahf
xchg
sub
mov
adc
iret
loop
fists
sar
rcr
ljmp
jp
add
pop
push
mov
add
xchg
or
cmp
adc
mov
lods
inc
out
xchg
test
or
pop
loop
cmp
add
dec
faddl
push
mov
dec
pusha
adc
inc
imul
jb
inc
ljmp
mov
dec
mov
push
inc
dec
out
cmp
ret
push
aad
push
inc
daa
xorb
push
fimuls
push
loopne
into
ficompl
out
ja
xor
je
jp
adcb
lahf
cmp
jmp
or
mov
jne
jne
push
mov
lds
add
stos
and
rorb
stos
rolb
sub
lret
pop
ds
mov
lods
mov
mov
adc
pop
pop
or
ficoms
loop
icebp
mov
adc
xchg
dec
jbe
lahf
mov
mov
dec
aas
jbe
and
inc
neg
outsl
push
stc
add
mov
idivb
add
pop
sbb
les
add
and
aam
and
out
cmp
outsb
movsb
lock
hlt
and
adc
xlat
in
in
mov
shr
and
imul
or
mov
jmp
sti
push
pop
stc
nop
or
lods
jg
or
ret
or
movsb
leave
jge
push
stos
std
mov
jns
sub
lock
mov
lock
andl
sbb
out
add
ret
push
loope
shrl
inc
pop
iret
data16
gs
popf
adc
inc
lret
mov
shr
add
test
xchg
incb
fs
adc
out
jl
pop
jecxz
aam
xlat
cwtl
mov
jne
data16
push
sar
rorb
push
cmpsb
out
sbbl
push
je
add
xchg
mov
inc
adc
ljmp
push
inc
sbb
bound
es
mov
bound
inc
data16
xor
movsb
xor
xchg
subb
add
lock
and
loop
push
pop
cs
dec
jne
pop
mov
sub
jae
test
out
addl
cmc
lods
xchg
jmp
push
aad
js
push
inc
pop
or
not
push
mov
mov
out
dec
cli
dec
notl
adc
adc
icebp
lods
mov
clc
jge
sub
int
add
jp
jg
and
mov
decb
push
ret
or
adc
fisttpl
pop
aas
mov
mov
pop
jmp
jae
pusha
pop
or
das
mov
inc
dec
pop
lods
imul
jmp
roll
mov
xlat
clc
lea
roll
pop
sub
test
xor
rorl
dec
ss
or
inc
xor
jmp
push
sbb
mov
movsl
pop
sarb
popf
sub
jno
push
pushf
add
loop
sub
mov
and
cwtl
push
mov
jle,pt
adc
add
pop
mov
inc
std
xorb
dec
dec
xchg
loop
fstl
lea
les
push
mov
cmc
outsb
call
dec
add
cld
cmp
xor
cmpb
pop
ss
add
pop
repz
jle
cld
scas
es
mov
pop
pop
mov
pop
dec
add
into
adc
and
add
adc
pop
in
shrl
stos
shlb
and
xchg
leave
or
cmp
dec
adc
not
jl
xchg
add
rcrb
jns
cmp
call
push
add
push
sbb
xor
add
cmp
adc
sub
cmpsl
int3
dec
adc
cmp
pop
sbb
hlt
cli
pusha
adcb
dec
push
dec
cmp
push
inc
mov
pop
mov
leave
push
push
pop
testb
jmp
xchg
dec
sbb
popa
add
pusha
imul
ljmp
xchg
enter
xchg
std
adc
das
xchg
incb
jecxz
adc
stc
or
push
or
mov
push
daa
hlt
mov
loope
or
neg
pop
cld
fisubl
push
movl
or
repz
js
inc
pop
fmuls
push
xlat
scas
test
lcall
fiaddl
pop
pop
jbe
sbb
shrb
dec
add
push
mov
pop
and
jl
push
and
mov
or
xor
outsb
mov
fbld
nop
addl
test
dec
cmpb
imul
jmp
pop
cmp
push
pop
sbb
cmp
cltd
jbe
jnp
pop
ret
jecxz
stc
xchg
adc
dec
stos
jae
push
loope
stc
inc
popf
sub
rcl
call
je
push
aad
incl
mov
inc
orb
clc
outsb
daa
dec
inc
repnz
mov
jnp
pushf
inc
mov
mov
jns
push
clc
add
gs
jns
pop
sub
cwtl
aaa
cmp
ss
jg
lcall
mov
hlt
or
sbb
je
int
adc
add
dec
xchg
xor
push
xchg
add
dec
pop
dec
call
aas
sub
or
mov
movsl
pop
ret
add
ds
sbb
nop
or
stc
push
inc
cld
inc
push
and
and
push
popa
xor
push
fsubl
pop
jl
and
shl
add
add
out
push
mov
popa
mov
xor
xchg
mov
xchg
mov
xchg
or
jae
jle
test
or
push
add
mov
pop
repnz
pop
popa
outsb
push
jecxz
inc
fnstenv
cmp
push
dec
int3
or
dec
push
js
lahf
mulb
bound
mov
pop
sub
test
lods
dec
in
or
xor
xor
and
ret
jg
xchg
xchg
xchg
and
cmpsl
pop
cld
dec
sbb
adcl
idiv
xlat
pop
mov
xor
popl
fcoms
adc
and
and
test
mov
sbb
jno
js
add
xor
mov
mov
jb
adc
xlat
jg
mov
sub
or
pop
pop
pop
add
add
or
popf
jg
stos
or
or
into
mov
test
push
xor
stos
call
inc
sub
dec
addl
or
push
mov
into
cld
scas
pushf
push
or
push
ja
or
pop
in
mov
push
aad
add
mov
and
mov
addr16
insl
jmp
iret
bound
sbb
sub
cmp
leave
add
pop
adc
adc
dec
or
not
adcb
lea
testl
pop
or
jmp
aas
sbb
cmp
stos
mov
hlt
loope
inc
in
push
add
jno
inc
jmp
ret
or
push
cmpsb
out
aaa
ljmp
xchg
mov
inc
dec
mov
mov
aas
int3
lea
push
add
sub
cmc
insb
mov
imul
dec
jb
sub
ljmp
dec
sti
push
pop
call
jb
add
cmc
int
ficoms
je
out
cli
push
adc
pop
push
arpl
lods
scas
or
and
xchg
ds
dec
xchg
adc
leave
jae
mov
push
xchg
aas
add
mov
mov
cmp
fadds
or
hlt
pop
push
sahf
loope
jne
push
scas
jl
pop
mov
in
add
pop
cmp
fcmovu
or
stos
adc
sbb
mov
adc
arpl
mov
adc
xchg
adc
sti
shlb
lahf
cld
and
and
or
test
andb
shlb
adc
push
cwtl
mov
pop
out
sub
push
lea
mov
mov
cmp
sbb
aam
fadd
in
or
int3
xor
push
mov
pop
cmp
and
mov
mov
dec
mov
mov
xchg
push
jmp
lahf
adc
and
xchg
gs
sbb
jo
adcb
dec
cld
xorb
push
outsl
mov
adc
mov
sub
repnz
and
aam
imul
inc
dec
push
call
pop
push
adc
cmp
stos
mov
es
mov
jle
idivb
xor
lock
rcl
fmuls
inc
push
push
push
push
mov
movd
add
les
loop
xchg
mov
or
adc
jge
daa
test
and
add
shlb
ljmp
repnz
lcall
stc
and
stos
nop
xchg
mov
adc
loope
ds
jb
jmp
mov
rorl
gs
sbb
popf
fs
and
push
inc
and
sub
cwtl
push
add
inc
arpl
cmpsb
mov
adc
mov
jmp
addb
sbbb
mov
sub
test
and
sub
push
jp
shl
addr16
hlt
and
jmp
out
sbbb
cld
or
ret
xchg
fsubl
in
test
adc
pop
add
sbb
push
or
push
add
pop
pop
stos
dec
mov
shll
sub
pop
push
add
fwait
or
pop
push
or
mov
les
loopne
imul
push
add
fnstsw
outsb
xor
pop
adc
xor
into
data16
inc
push
imul
xchg
mov
mov
movb
lods
xchg
repz
fnstcw
pop
mov
jne
inc
adc
cmp
les
bound
or
xor
mov
movsl
sbb
dec
or
add
ret
pop
jge
data16
adcl
sub
leave
inc
or
mov
push
test
add
icebp
or
inc
jo
add
xlat
and
cld
outsl
ds
adc
xchg
dec
push
and
divl
sar
sub
dec
sub
jnp
cmpb
subl
lods
or
lea
xchg
xor
fdivrs
shll
cmpsl
in
or
js
cli
add
outsb
gs
in
jg
pop
push
or
adc
test
ja
jmp
dec
inc
jp
imul
icebp
ja
mov
dec
and
mov
nop
mov
sub
shll
stc
sub
push
adcl
aad
and
out
sbb
sub
rcpps
sub
mov
lds
inc
add
je
popf
inc
das
mov
movsl
dec
jmp
andb
cmpsb
add
scas
cmp
fmuls
lret
iret
push
xor
push
mov
mov
stc
lahf
adc
and
or
xor
and
clc
imul
add
add
adc
mov
or
push
adc
jb
push
mov
imul
jge
test
add
imul
repnz
cmp
lods
mov
xorl
adc
stos
loop
sbb
push
loope
addl
push
mov
jno
loopne
inc
and
out
sub
mov
xor
add
pop
test
icebp
stos
orb
cli
shlb
jl
sub
gs
shrb
rorb
push
inc
sysexit
addl
rcrl
add
imul
jg
inc
jmp
sub
jge
or
jb
pop
xchg
test
sub
call
add
ds
sub
xor
jmp
pop
xchg
int3
adc
dec
inc
xchg
aaa
cmc
xchg
data16
inc
lock
mov
daa
jg
xchg
jb
xchg
icebp
adc
mov
mov
pop
dec
mov
add
add
out
out
ror
xchg
shr
lods
jp
and
imulb
scas
dec
cmpsb
lahf
xor
mov
addl
cmp
fnstenv
cmp
xor
add
lret
clc
mov
push
xor
cmpsl
sub
lock
push
add
call
imul
leave
jne
fxch
mov
rol
iret
add
inc
mov
adc
fcoml
mov
add
mov
pusha
mov
mov
cs
inc
fisttps
push
adc
cmp
xchg
call
add
ret
push
sbb
and
hlt
divl
shrl
fistpll
mov
add
mov
inc
test
aas
pop
push
loopne
cmc
jne
insl
push
push
loope
push
cmp
insl
or
and
bnd
aam
lcall
adcb
test
mov
add
xchg
jne
mov
je
ret
jbe
daa
fcomps
out
daa
jmp
test
adc
in
icebp
xchg
cmpsl
inc
std
nop
rcrb
lcall
xor
push
mov
inc
ljmp
test
push
push
add
pop
pop
call
dec
cs
je
data16
jmp
ror
sub
imul
xlat
xchg
cli
jne
or
inc
lock
cld
not
sbb
out
sub
jmp
mov
shll
cmp
mov
adc
mov
fmull
or
orb
adc
repz
xor
mov
leave
ret
sbb
das
fsubp
add
aam
sti
int3
adc
movsl
push
add
jecxz
js
iret
pop
dec
adc
xchg
fisubs
push
mov
cmc
mov
fucom
movsl
mov
pop
pop
and
in
and
shrb
adcb
ja
aad
lds
loopne
jecxz
loope
lret
jne
or
insb
in
adc
mov
inc
pushf
sub
or
lret
dec
adc
test
mov
mov
sbbb
sbb
lahf
je
and
sub
jnp
addb
xchg
decb
sahf
add
fld
movsb
mov
adc
lods
sub
cwtl
add
xor
jmp
filds
imul
nop
outsl
pop
stos
push
icebp
sbb
adc
icebp
andl
add
or
loopne
push
xor
jmp
mov
mov
cmpb
push
pop
test
mov
cmp
ja
xor
pop
scas
call
jp
mov
pop
insb
dec
dec
js
xchg
jle
lret
add
or
pop
popf
dec
push
or
mov
pop
and
nop
mov
sub
add
mov
scas
les
aam
sahf
orb
cmc
mov
lret
loopne
pop
lahf
sti
jle
jmp
dec
or
dec
push
jmp
fiadds
push
dec
mov
fs
mov
scas
xchg
repnz
mov
mov
and
and
inc
sub
std
dec
jne
stc
pop
jno
not
pusha
add
sti
push
aaa
pushf
jae
enter
and
ja
jb
adc
call
test
xchg
jnp
insl
clc
sub
popf
fidivrs
cmc
sbb
mov
mov
int
push
out
push
sahf
add
push
inc
mov
outsl
sub
in
addl
scas
aam
adc
in
sbb
arpl
decb
outsl
daa
js
pop
and
inc
incb
test
mov
push
out
mov
push
fstpt
pop
outsl
add
fbld
ucomiss
or
dec
icebp
and
add
and
in
rcr
and
dec
outsl
mov
sbb
dec
rcrb
cmp
adc
push
stos
cmp
add
push
cmp
mov
xor
addr16
pop
xor
jmp
mov
inc
fistps
or
and
inc
int
pop
lea
inc
push
loope
and
inc
adcl
rep
add
inc
or
mov
fmuls
dec
inc
sbb
testl
adc
cmpsl
rcll
shl
push
das
pushl
rcll
scas
xor
xchg
add
mov
aad
lcall
inc
adc
mov
hlt
cmp
xchg
pusha
das
stc
loop
cmpsl
loopne
aam
or
loopne
mov
mov
clc
and
fcoml
add
shl
mov
lahf
add
cmp
out
leave
adc
fimuls
cwtl
or
adc
out
rorb
inc
rorb
iret
pop
adc
nop
mov
or
pop
inc
ret
stos
or
mov
rep
add
bound
push
mov
dec
mov
dec
in
pop
lcall
push
in
xor
ljmp
jmp
movsb
repnz
dec
int
xchg
cli
mov
cltd
and
xchg
clc
fistpll
jg
sbb
jno
stc
ficoml
xor
xor
lahf
jne
mov
jb
xchg
icebp
pop
bound
addb
data16
xor
aaa
mov
outsb
sarb
xor
and
xor
pop
pop
push
out
jp
out
jbe
aam
out
daa
pushl
mov
pop
cltd
jb
out
xor
mov
pop
ljmp
push
sub
adc
testb
aas
sub
fstl
dec
ss
call
fstps
imul
int
mov
pop
addl
add
pushf
in
xchg
and
add
cmp
stos
mov
daa
adc
dec
test
cmpsb
sarb
sbbl
mov
pop
repnz
nop
xchg
dec
inc
adc
jae
sbb
xchg
fstpl
add
inc
add
inc
sub
jno
fidivs
rcrl
jecxz
jmp
test
or
jl
push
pop
popa
lods
jmp
stos
mov
pop
pop
inc
or
sub
add
mov
mov
popf
sub
ficompl
mull
push
mov
xor
lods
pop
inc
push
pop
xor
jno
dec
jl
ljmp
or
fiadds
jmp
cmpps
inc
imul
fsub
in
jbe
ljmp
push
cld
push
pushf
dec
sbb
xor
subb
ds
andb
pop
and
ja
movsb
cmpb
inc
push
mov
fcoms
jae
mov
mov
dec
js
cmpsl
and
push
pop
pop
test
fdivl
out
les
addl
roll
cs
ja
pop
loop
shlb
ficomps
fdivrs
out
aad
iret
loopne
mov
sub
mov
nop
sbb
or
push
mov
pop
into
add
sbb
jne
xchg
jno
ljmp
mov
icebp
sub
adc
aas
mov
push
push
jmp
jge
adcb
pop
push
outsl
aas
aas
add
fdivrs
cli
adc
push
cmp
cmpsb
and
mov
pop
dec
loope
fistps
mov
orl
out
jp
movl
jne
bound
rcrb
aaa
push
push
in
in
nop
push
pop
test
add
add
scas
in
xchg
std
jge
inc
mov
jo
xchg
lock
lods
push
adc
test
ljmp
jno
xor
das
popa
jmp
sub
mov
inc
or
jno
aad
rorb
out
sub
syscall
lock
outsl
aaa
inc
xchg
pop
jl
adc
xchg
dec
iret
hlt
jae
xchg
xlat
dec
nop
movsl
rclb
mov
sbb
lods
dec
or
loope
lods
call
mov
sbb
aam
rcr
sub
push
sub
add
inc
adc
loop
jg
pop
mov
cli
cmpsb
scas
or
sub
lods
les
cli
push
imul
ror
jb
mov
and
je
addb
inc
xor
or
mov
cli
mov
jg
mov
inc
shrl
aad
pop
dec
pop
mov
jmp
dec
push
add
xor
stos
repnz
pop
mov
cmp
rorb
in
adc
xlat
sub
mov
cwtl
fs
movzwl
in
iret
and
iret
cld
cmpsb
xchg
test
jnp
jmp
pop
scas
adc
mov
not
or
mov
push
insl
call
add
and
pop
lret
mov
notl
sbb
jmp
ds
jmp
dec
jmp
or
sub
mov
aas
mov
and
xor
add
ss
push
cld
rcrl
fstpl
fcomps
sbb
sub
out
orb
cmc
pop
sub
in
inc
push
jmp
repnz
mov
pop
mov
jae
hlt
jmp
cmp
mov
aad
lret
adc
lods
arpl
movsl
ret
cmp
pop
shr
mov
push
or
xchg
push
cmc
mov
std
inc
out
je
xor
xchg
mov
lcall
or
leave
arpl
std
mov
sbb
sub
mov
jl
cld
mov
sbb
push
inc
push
shlb
mov
clc
dec
js
sub
pop
pop
push
fcom
cli
inc
pop
pop
mov
nop
dec
xor
in
out
test
addb
sub
xchg
push
in
in
push
pushf
shl
inc
xor
add
mov
mov
pop
mov
daa
push
rcl
nop
decb
aad
out
call
mov
outsl
xlat
in
mov
call
pop
int
ficomps
jl
loope
push
add
mov
pop
ja
je
outsl
js
gs
push
cltd
and
dec
cwtl
mov
pop
or
sbb
push
push
cmc
inc
repz
add
dec
add
cmc
push
mov
mov
imul
std
jmp
mov
data16
fisubs
and
or
pop
xchg
jo
cmp
int
or
popa
pop
imull
aam
push
jno
ljmp
pop
add
fs
xor
sbb
sbb
push
testb
dec
inc
and
das
or
add
popl
add
clc
mulps
fs
inc
je
ss
aam
mov
aam
mov
push
pop
pop
aad
mov
and
cmp
dec
das
adc
mov
popa
push
aam
push
push
rolb
call
ja
mov
stos
inc
dec
in
pop
iret
sub
push
jmp
push
fdivr
or
arpl
mov
das
xor
nop
in
pop
sub
or
dec
in
ret
movsl
dec
add
mov
adc
mov
outsb
sbb
and
push
mov
mov
roll
fmul
gs
cmp
inc
mov
ss
mov
icebp
outsl
sub
inc
push
cmpl
cmp
mov
mov
inc
jg
mov
test
inc
ja
into
push
test
lea
push
mov
xchg
jmp
iretw
cmp
movsl
roll
push
cmpsl
jecxz
jmp
pop
pop
jno
or
lock
pop
mov
aas
mov
idivb
add
add
sbb
pop
pop
pop
sub
out
mov
notb
mov
out
cmp
mov
adc
call
mov
push
mov
cmp
push
jb
jp
sub
cmp
jns
push
dec
lock
mov
sbb
sub
dec
pop
dec
dec
push
loope
inc
icebp
fnstsw
push
sar
dec
jne
pop
push
shl
mov
lods
negl
cmp
jmp
lods
add
jg
cmp
or
jp
jmp
inc
test
cli
cmp
inc
inc
pop
push
in
aad
sub
mov
out
jecxz
loop
enter
push
sbb
pusha
and
inc
pop
mov
push
daa
mov
dec
sbb
in
sub
mov
or
or
int
andb
mov
push
push
push
rclb
stos
cmpsl
mov
clc
and
mov
test
sbb
mov
push
test
jmp
adc
mov
xchg
push
repz
and
add
pop
push
out
xor
push
and
repnz
stos
daa
xchg
inc
loope
sub
mov
add
sub
ja
sbb
mov
frstor
dec
mov
cmpsb
fs
sub
sti
ror
sub
std
and
sub
movsb
or
rcll
adc
movsl
add
lret
xchg
lret
loope
fs
or
lods
in
call
push
inc
push
rolb
jmp
cmpsb
out
gs
adc
roll
shl
push
daa
repnz
dec
rclb
outsb
push
and
dec
push
or
lock
pop
test
xor
cmp
and
xor
mov
out
sahf
and
adc
jp
nop
es
mov
loope
outsb
add
mov
xor
sub
gs
xor
pusha
clc
dec
inc
cmp
pop
sub
mov
daa
pop
out
jmp
loop
pop
iret
ret
jo
jmp
in
jl
loop
loopne
push
sahf
sub
add
lods
jg
dec
jmp
in
add
repnz
leave
pop
sub
push
or
je
leave
or
cmpsl
or
lret
dec
orb
sti
fisttpll
xchg
pop
adc
add
xor
test
inc
test
out
mov
mov
imul
cs
rcrb
js
idiv
sbb
dec
ja
shlb
mov
mov
iret
addr16
pop
stos
pop
leave
and
dec
push
pusha
repz
cmp
xchg
push
cli
add
aas
mov
xor
fs
sub
das
cmpsl
xchg
out
outsb
jne
jne
enter
pop
push
orl
inc
or
rol
pop
icebp
pushf
dec
dec
mov
jecxz
fisttpll
ret
or
aam
pop
xor
lods
sub
shll
dec
mov
vpaddw
je
mov
cmpsb
mov
push
adc
pop
insl
or
jns
mov
loopne
push
pop
sub
pusha
cs
xorl
mov
or
and
pusha
lea
pop
repnz
popf
pusha
sbb
xchg
sbb
jno
pop
and
lcall
bound
or
lds
xor
adc
sbb
mov
sub
test
xor
xchg
inc
sub
or
push
ret
repz
ss
addr16
sub
jmp
cmc
lret
cmp
xor
push
adc
pop
imul
loopne
fnstsw
notb
loop
jl
jnp
lods
cmc
mov
push
sbb
lods
cmp
or
sub
mov
gs
movl
cmp
mov
jecxz
mov
mov
addr16
decb
add
rorb
fimuls
and
test
push
or
sbb
and
cmpsb
loope
lods
fidivs
mov
cmp
clc
cwtl
and
add
pop
std
les
js
mov
mov
add
orb
adc
add
out
pop
stos
popf
fldenv
add
jae
sub
mov
push
mov
mov
jle
insl
jno
and
add
add
sahf
mov
fiadds
mov
leave
dec
outsl
and
xor
or
mov
dec
and
xchg
and
adc
or
not
push
mov
jbe
nop
shr
jae
pop
bound
cmc
mov
fs
mov
sub
xor
sub
add
push
jmp
sub
mov
iret
jmp
xchg
sahf
fs
jle
loope
mov
pop
fnstenv
mov
dec
mov
aad
out
add
repnz
add
inc
es
sub
or
sub
pop
pop
mov
push
inc
gs
mov
and
push
sbb
xchg
out
ds
jle
push
stc
push
add
sarb
and
xor
push
lcall
cmc
or
push
jmp
jbe
push
or
push
push
shrb
mov
pop
xor
pop
adc
test
add
inc
dec
lods
jne
daa
or
and
adc
add
insl
pop
inc
or
loope
cs
hlt
enter
sarb
sub
loopne
lahf
pop
mov
push
cwtl
movsl
pop
dec
out
fistl
repnz
dec
mov
inc
or
lcall
sub
arpl
imul
scas
hlt
mov
stos
leave
ret
xchg
filds
mov
push
inc
or
and
sub
data16
or
jmp
aad
repz
daa
loopne
mov
sub
add
or
mov
loop
test
cmp
jmp
lret
and
dec
sub
fsubs
add
pop
pop
pop
jmp
mov
jecxz
mov
mov
mov
cmp
xchg
frstor
inc
test
bound
cld
jne
arpl
aam
add
push
mov
cmp
xor
decb
add
roll
pusha
push
push
mov
nop
iret
adcl
sahf
or
inc
pop
add
jl
push
hlt
into
add
xchg
mov
xor
fldl2t
adc
inc
pusha
negl
xlat
cld
filds
lods
sbb
out
aad
inc
xor
das
xor
ret
popl
mov
clc
mov
adc
sub
int3
adc
faddp
dec
pusha
loope
pop
bound
add
shr
push
adcb
enter
cs
xor
dec
inc
sub
push
loop
or
repnz
xor
stos
pop
adc
jmp
push
jecxz
adc
or
push
nop
mov
pop
or
cmp
out
in
xor
mov
imul
jbe
movsl
jge
daa
adc
cmc
popa
cmp
cli
mov
push
xchg
cltd
push
or
pushf
and
add
js
add
data16
clc
xor
rcr
shl
cld
icebp
jle
js
jo
xor
xchg
repz
imul
xor
push
stc
data16
pop
push
test
rolb
push
dec
mov
xor
or
cmp
mov
pop
adc
mov
outsb
shl
stos
pop
leave
pop
les
cmp
sbb
fmul
aas
les
adc
dec
test
jns
add
push
dec
mov
mov
jmp
loop
ret
inc
mov
in
loopne
jmp
cmp
ds
dec
jecxz
xchg
or
repnz
mov
outsb
in
xchg
lahf
sub
pop
loop
mov
pusha
and
xchg
loope
pop
cmpsb
sti
repnz
jg
add
xchg
test
fdivr
movsb
insb
jmp
mov
rorl
inc
xchg
cli
in
aam
sbb
leave
xchg
xorb
shrb
dec
push
add
movsb
xor
add
sti
jbe
lcall
out
and
movsl
or
inc
cwtl
add
xchg
adcl
popa
push
or
sub
and
gs
ljmp
lcall
out
add
cmp
fmull
inc
sbbb
mov
pop
movntq
out
arpl
fmuls
jnp
add
cmp
negb
out
xor
es
add
xorb
dec
rorl
jnp
adc
mov
lea
sbb
rcrb
push
mov
sbb
or
jae
mov
lahf
jmp
rclb
add
icebp
sbb
ret
enter
mov
push
add
stos
and
push
add
lods
arpl
cmpb
pop
test
pop
lods
outsb
push
outsl
xchg
lock
xchg
test
shll
xor
sbb
xchg
add
mov
mov
adc
add
xor
add
sbb
es
jns
or
rcl
xor
les
adc
aaa
and
out
fwait
cmp
sub
loop
push
sbbb
adc
mov
inc
add
fmuls
add
sbb
push
add
add
xchg
shlb
and
cmp
inc
xchg
dec
fdiv
dec
sbb
or
dec
mov
lahf
jns
mov
add
xor
pop
scas
pusha
jg,pn
lea
cmp
dec
movsl
adc
dec
arpl
rorl
mov
loopne
stc
add
popf
movzbl
add
pop
fadds
mov
bound
mov
cltd
sbb
mov
inc
sahf
jne
add
testl
xor
repz
cmp
and
mov
clc
add
subl
pop
and
fadd
test
mov
sub
mov
fidivrs
cmp
in
pop
add
jg
sahf
add
movsb
cli
mov
mov
test
andl
popf
jne,pn
jg
sub
inc
xchg
add
dec
sbb
xchg
add
dec
pop
sbb
ret
add
shlb
adc
inc
rolb
adc
fdivs
movsl
mov
push
pop
pop
cmpb
out
les
popf
cmp
pushf
xchg
dec
inc
sbb
imul
jo
add
addb
fucomip
outsb
add
insb
mov
jno
push
mov
xchg
ret
add
or
repz
add
sub
sbb
daa
and
jno
iret
push
in
cmp
add
push
xor
les
cli
and
movsb
ds
rcrl
xor
xor
cmpsb
pop
mov
sub
stos
or
leave
pop
add
inc
push
sbb
ret
popf
inc
inc
clc
sti
arpl
cmp
mov
mov
add
xchg
setns
loope
adc
inc
adcl
lret
pusha
lret
lods
out
xor
push
xor
add
rcr
xor
pop
add
xchg
aas
dec
lret
or
xchg
and
jns
rorb
call
inc
mov
mov
add
faddl
es
push
lret
dec
lahf
push
mov
mov
adc
dec
add
hlt
mov
std
add
flds
ja
test
xor
into
loopne
sub
jb
add
addb
aam
mov
inc
add
mov
das
stos
loope
pop
cmp
xchg
inc
xor
cltd
nop
and
test
int3
sbb
loop
push
mov
and
js
xor
leave
and
sub
jge
mov
or
add
test
inc
fstl
int3
cli
mov
in
sahf
jl
gs
dec
negl
push
lcall
test
push
in
outsl
aad
sub
in
repnz
or
add
pop
adc
nop
xor
addl
mov
inc
jg
in
add
mov
mov
in
push
leave
mov
icebp
jne
lods
and
add
inc
popw
fdivr
pop
mov
mov
rcl
add
insl
jb
cmp
or
test
and
mov
out
out
add
inc
enter
mov
add
pop
mov
push
dec
add
lea
sbb
rcr
push
aam
inc
call
adc
loope
int3
mov
andl
test
lahf
cmp
jo
jbe
fisubs
adc
jbe
add
mov
cmc
mov
pop
pusha
movsb
cwtl
movq
jae
push
rclb
jle
xchg
sbb
pop
adc
inc
add
lods
jge
int3
movsb
ljmp
loop
inc
pushf
or
jbe
add
test
je
add
mov
dec
xorb
or
push
fistps
adc
sbb
cmpsl
add
lock
js
sub
and
test
in
cwtl
dec
movsb
ret
sbb
adc
mov
or
pop
aam
insb
popa
lcall
xor
shl
mov
add
fnsave
xchg
mov
and
cltd
je
loopne
rorl
mov
fildl
movnti
arpl
lcall
lods
add
or
and
in
cmp
xor
inc
jmp
mov
or
pop
sbb
lds
and
xor
addr16
mov
test
fiadds
lcall
add
xlat
push
pop
add
shl
and
lock
and
lock
ret
add
jge
jae
xchg
iret
inc
add
pop
lods
popa
xor
dec
gs
dec
cmp
shlb
jmp
fs
inc
inc
in
jp
dec
or
mov
aad
filds
xchg
cli
xchg
add
in
or
loopne
jno
faddl
adc
std
add
sub
and
imulb
imul
and
mov
push
shrb
mov
loopne
jle
jb
mov
outsl
mov
inc
adc
and
sbb
inc
adc
ljmp
add
inc
out
rcll
xchg
or
push
fadd
jp
enter
jecxz
cwtl
out
shlb
and
loopne
lcall
adc
pop
mov
cvtpi2ps
ret
or
bound
jl
sub
pop
pop
fs
daa
add
dec
int3
mov
jbe
add
sbb
pop
shlb
jp
fldt
add
fwait
add
shlb
add
repz
in
aam
xchg
add
lods
fs
hlt
pop
out
fidivs
icebp
inc
ret
andb
imul
adc
pop
fimull
mov
and
jge
repnz
xor
mov
and
mov
mov
mov
out
mov
aaa
xchg
sbb
and
pop
xchg
in
jl
mov
shrb
add
pop
or
aaa
jo
ds
test
add
stos
sbb
lcall
cmpsb
and
inc
xor
dec
cmp
mov
ret
out
pusha
push
lahf
inc
or
push
cmp
dec
add
and
xchg
aas
sahf
add
xor
dec
sbb
jnp
add
out
roll
xchg
pop
xlat
rcr
loop
pop
xor
cmp
sub
lret
jg
add
enter
jmp
daa
mov
add
faddl
jg
dec
les
into
xchg
add
es
push
push
mov
sbb
lds
mov
jg,pn
mov
adc
in
aam
sub
sub
mov
add
fnstsw
pop
push
movsb
add
sub
pop
lret
sti
pop
rclb
int
mov
loopne
add
fimuls
stc
inc
pop
test
jne
jp
add
lret
je
cltd
cmc
sbb
rorl
negl
push
out
mov
add
and
mov
add
xor
std
and
out
faddl
dec
push
cmpsb
mov
in
cs
stos
mov
outsl
mov
faddl
sub
xchg
pusha
and
scas
sti
lret
pop
mov
ficomps
adc
subb
mov
sbb
jne
add
aam
int3
sub
imul
lods
push
and
ljmp
mulb
dec
movsl
int
pop
shll
shrb
pop
xchg
or
loope,pt
shlb
push
jo
pop
jge
add
out
jae
dec
mov
add
scas
mov
incb
xchg
sbb
mov
mov
or
jne
xor
ja
add
lods
cmp
jp
xchg
jae
push
lds
adc
outsl
hlt
leave
add
pop
and
xlat
add
or
pop
mov
aas
subb
and
mov
pop
mov
shlb
roll
fcompl
xchg
loopne
xchg
int3
popl
jmp
bound
lret
lcall
enter
mov
and
pusha
jl
push
mov
cmc
add
mov
les
call
xchg
outsl
loopne
add
push
add
sub
in
pop
lds
test
enter
add
dec
xchg
dec
push
sbb
insl
xor
mov
and
pop
mov
inc
mov
pusha
rcr
ret
add
jns
xor
add
testl
and
lock
test
mov
xchg
out
jne
cwtl
pop
inc
jp
aam
xor
push
mov
movsl
jb
movsb
pop
adc
lods
pop
popa
sub
call
inc
out
cmpsb
aad
xor
in
add
scas
psubusb
and
xchg
pop
add
mov
int3
addb
add
inc
mov
add
sub
push
les
add
xchg
int
add
lahf
lcall
aas
push
mov
cmpsb
pop
jmp
xor
mov
mov
push
dec
das
popa
lcall
call
incl
adc
fldenv
cld
fnstcw
std
mov
cmpsb
xlat
es
inc
mov
sahf
mov
jle
add
cmc
dec
sti
or
repnz
mov
jmp
cmp
jmp
and
ja
pop
sub
sub
ret
int
jl
add
pop
mov
inc
sbb
adc
dec
sbb
xchg
aas
les
xchg
cmp
add
lds
lahf
imul
pushl
xchg
call
push
pop
hlt
xor
test
int3
xchg
insb
mov
add
push
in
inc
push
add
fisttpl
in
add
in
pop
repnz
sbb
add
jo
pushf
or
je
insl
or
cmp
add
cltd
jle
pop
orb
mov
stc
push
or
jbe
addb
push
aad
sbb
or
adc
sub
int
imul
cmp
decl
add
test
and
fildl
or
add
jge
data16
inc
andl
add
les
adc
dec
shrl
jne
and
fcom
xor
call
fisttps
movsl
xor
loopne
stos
faddl
rolb
xchg
push
pop
mov
cmp
out
and
inc
push
mov
fucomi
add
dec
sub
mov
push
stc
inc
inc
inc
movsb
mov
pop
inc
pop
pop
jmp
adc
sbb
ror
insb
dec
fcomip
xorb
hlt
and
pop
pop
adc
mov
and
push
lods
and
jbe
rolb
add
fidivs
add
hlt
add
nop
jge
loope
cmpsb
sarb
sbb
popa
mov
cmpsl
mov
aad
adc
xchg
add
add
std
push
jmp
and
and
in
cmp
mov
insb
cmp
bound
sbb
cmp
sbb
mov
xchg
add
xchg
add
shrb
or
enter
pop
mov
ja
jmp
in
add
cli
mov
cmpl
enter
icebp
sbb
insb
in
fistpll
add
pop
or
loopne
add
lods
imul
rorb
add
jl
add
mov
sbb
add
pop
daa
mov
sbb
loope
inc
push
inc
mov
adc
enter
add
lret
aam
cli
xor
mov
int3
das
jle
dec
mov
pop
fbld
jbe
and
ljmp
mov
aaa
ret
mov
sub
aad
push
adc
stos
add
push
add
aas
cmc
push
add
mov
clc
jl
add
adc
sahf
cmpsl
dec
stc
push
out
add
shl
cmp
add
fsubrl
cmpb
push
add
mov
or
scas
jnp
xchg
mov
test
fcmovnbe
in
cld
lock
sub
mov
xor
ds
movsb
sub
add
js
repnz
sub
cmp
dec
dec
cs
mov
dec
testl
jg
sub
stos
and
add
scas
imul
jnp
mov
roll
cmp
push
fwait
cmp
sbb
jnp
push
adc
inc
je
add
cvttps2pi
xor
cld
push
sbb
test
test
mov
aas
out
sbb
mov
and
fcoml
add
aad
test
mov
popa
test
dec
imul
jp
sbb
or
je
nop
seto
inc
pop
push
stos
cltd
inc
dec
adc
lods
sub
imul
clc
add
pop
push
cli
add
mov
mov
cmp
mov
lock
jg
sbb
jecxz
mov
leave
daa
mov
lret
xchg
add
push
push
add
push
in
es
ret
ljmp
out
xchg
lods
push
xchg
outsb
orb
xor
mov
add
and
cwtl
jp
cltd
fldl
into
sub
push
repz
leavew
add
ficoms
mov
outsl
xor
push
dec
sbbb
jno
add
adc
pop
inc
inc
adc
movsl
dec
mov
xchg
call
mov
in
in
shrb
imul
das
xor
mov
mov
jo
scas
rcrb
icebp
addb
or
pop
daa
divl
bound
test
adc
mov
or
sbb
test
movsl
add
lahf
or
lcall
adcb
or
filds
push
add
xor
sub
pusha
inc
cmp
fwait
inc
jp
imul
clc
movl
sbb
lahf
add
dec
add
and
popa
call
jo
pop
push
outsl
mov
or
inc
xorb
popf
dec
mov
push
cmpl
add
jnp
jne
dec
popf
push
in
rorb
and
and
sbb
mov
add
jecxz
dec
inc
mov
rolb
mov
test
add
inc
fildll
jns
into
mov
arpl
pop
mov
mov
adcb
sbb
jp
sbb
inc
nop
shlb
pop
js
sbb
push
dec
xchg
xor
sub
or
sub
call
adc
pop
push
adc
in
and
push
adcl
add
add
xor
adc
xchg
les
inc
or
sbb
push
and
jno
pusha
jge
hlt
mov
and
jno
mov
cmp
sbb
loope
add
xor
imul
push
ret
repnz
mov
orl
test
and
or
adc
add
outsl
sbb
sbb
cltd
xchg
icebp
jno
mov
inc
adc
iret
shrb
lahf
fistpl
mov
cmp
cli
inc
xor
inc
xchg
rorb
cmc
jbe
xor
dec
push
addl
jns
jo
notl
and
mov
insb
jno
and
pop
dec
sub
outsl
and
loope
lock
pushf
jl
add
inc
stos
cs
jb
inc
cld
cmc
push
mov
hlt
jne
loop
lods
xchg
sub
jp
fwait
lock
nop
and
lods
jb
jo
jbe
dec
and
pop
or
mov
outsb
pop
insb
jo
cmp
jge
xlat
mov
pop
leave
and
xor
dec
lock
push
mov
pop
or
dec
es
testb
inc
and
bound
add
in
pop
push
cli
adc
jo
push
jg
test
lock
cmp
insl
popa
cwtl
adc
or
add
pushf
lock
mov
arpl
sub
je
cmpsb
lea
push
mov
aas
shlb
test
sub
jl
in
mov
pop
add
ja
cltd
adcb
and
sub
fs
add
lods
jle
mov
outsb
js
test
test
stos
mov
shlb
add
fsubp
add
out
cld
xchg
insb
push
cltd
aam
pop
mov
sbb
mov
jge
ffreep
std
test
jmp
in
dec
mov
cmp
or
cwtl
add
add
sbb
add
jge
lea
add
in
add
cmp
add
pop
test
adc
dec
insb
and
push
and
enter
jl
or
jl
push
shr
es
dec
mov
movsl
add
in
push
nop
jo
jbe
js
enter
and
rolb
popf
jo
loopne
xchg
enter
imul
inc
add
mov
out
je
push
mov
or
mov
imul
add
fadd
xchg
ds
loope
cmp
or
loopne
inc
or
paddb
push
push
nop
dec
pop
popa
cmp
pop
sub
jp
popf
xor
sarb
jl
mov
inc
lods
mov
or
push
inc
movb
cwtl
int3
faddl
pusha
dec
adc
xlat
mov
scas
shrb
push
push
and
hlt
adcb
js
pop
inc
cmp
imul
jg
enter
push
fs
add
stc
pop
sahf
adc
jecxz
push
mov
cmp
or
push
sub
mov
aam
mov
cs
jb
loope
bound
stos
pop
test
add
jle
sbbb
popf
daa
or
inc
sub
popa
xor
aam
pop
xchg
enter
pop
add
cwtl
lock
jle
stos
outsl
cwtl
push
es
inc
jns
sub
int
je
lret
dec
mov
add
popf
mov
add
mov
adc
jp
and
out
xchg
mov
mov
and
sub
pop
jp
xor
dec
inc
adc
movsl
and
cltd
ds
repnz
sub
aas
and
pusha
cltd
push
and
jnp
aas
ljmp
mov
daa
push
mov
jo
jbe
cmp
test
test
pop
xchg
add
fistpl
sub
pushf
adc
cmpsl
dec
out
add
cmp
nop
ficoms
adc
or
adc
les
adcl
add
scas
sbb
pusha
or
imul
xor
xor
mov
fcoms
xor
dec
cltd
push
aaa
loopne
hlt
jnp
or
fcompl
mov
mov
inc
pop
mov
adc
cmpl
mov
test
andl
cld
popf
push
loopne
movsb
test
mov
add
mov
cwtl
sbb
mov
push
int3
pushf
pop
jl
orb
fbld
test
cmp
out
cld
or
int3
mov
jno
add
push
movsl
sahf
lods
jb
mov
adc
jbe
sarb
or
cmp
add
cmc
stc
aas
das
ret
xor
adc
inc
es
add
mov
jp
add
mov
imul
clc
loopne
mov
cltd
enter
inc
les
sarl
and
loop
inc
orl
add
mov
push
jmp
ds
jb
cmp
inc
je
dec
aad
nop
adc
clc
fistl
adc
jg
enterw
xlat
and
icebp
pusha
fs
push
jnp
clc
mov
and
add
jbe
call
pop
or
xor
cmp
pop
jno
adc
stc
add
push
push
scas
divb
add
out
mov
nop
test
xor
or
and
movsb
mov
inc
shlb
add
sub
adc
xor
cmpsb
add
add
xchg
lds
rorb
je
push
cmp
pop
andb
adcw
pop
inc
or
test
mov
call
add
mov
sub
cmp
imulb
xchg
jbe
fucomi
lret
inc
pop
outsb
add
movsb
fs
adc
and
movsb
and
pop
cltd
sub
rol
jle
insl
and
testb
add
aad
push
lret
loop
dec
dec
jg
scas
or
sbb
test
adc
nop
pusha
vhaddps
inc
fildl
dec
add
mov
mov
sbb
adc
je
jl
inc
mov
daa
add
rolb
popa
imul
notb
js
dec
cmp
aas
or
out
pushf
adc
dec
push
out
mov
pusha
pusha
or
popf
pop
and
rolb
xchg
push
inc
mov
sahf
xchg
pop
xchg
adc
xor
fldl
out
ret
add
push
fadds
jge
jl
inc
lret
push
enter
js
into
pusha
rorb
push
shrl
xchg
mov
or
mov
lcall
dec
popf
lret
jns
add
dec
hlt
call
and
rol
dec
jge
pop
mov
fmuls
std
fildl
mov
sbb
out
adc
xchg
sbb
jns
adc
mov
sub
cmpsl
test
xchg
sub
scas
cld
sub
inc
icebp
and
in
iret
and
in
fcmovnu
into
clc
add
lcall
test
and
mov
je
fists
jnp
rorl
fbld
sbb
dec
movsb
mov
ds
in
mov
hlt
sbb
ret
or
sub
add
mov
push
fwait
cwtl
add
mov
movsb
ja
or
push
sub
sbb
mov
mov
pop
mov
add
mov
popf
dec
out
aad
inc
gs
add
movb
xor
outsl
push
test
adc
mov
ret
add
repnz
xlat
ds
and
push
rorb
andl
xor
cltd
test
push
lret
je
andl
inc
cwtl
test
push
nop
pusha
jns
cmpsb
add
roll
enter
lds
adc
lods
or
jae
dec
bound
mov
or
adc
repnz
icebp
daa
std
dec
and
out
icebp
mov
scas
call
and
sbbb
pop
mov
in
mov
call
push
push
and
outsl
inc
add
imul
cmp
jmp
mov
push
addr16
aaa
xchg
iret
jno
xor
insb
push
xchg
push
xorl
aas
pop
add
int
push
mov
inc
gs
pop
mov
sub
add
cmc
add
fnsave
xchg
mov
imul
dec
and
mov
movsl
pop
outsb
xchg
mov
pop
daa
mov
aad
ret
orb
cmp
cmp
sbb
int3
in
cmp
pop
jl
bound
mov
and
pop
mov
push
bswap
push
les
mov
lret
sub
or
stos
adc
aam
sbb
comiss
and
lret
scas
push
les
pop
insb
int3
xchg
add
nop
cmp
int
inc
cmp
jns
js
movsl
test
loopne
je
add
sahf
mov
shll
mov
lods
inc
rol
lods
dec
int3
lcall
dec
pop
sbb
or
mov
add
mov
dec
add
xchg
subb
lods
dec
shufps
add
dec
mov
sub
orb
cwtl
mov
sbb
ret
fiaddl
pop
and
adcb
movb
nop
out
sbbl
roll
mov
and
or
inc
call
add
mov
in
and
xlat
inc
mov
pusha
les
cmp
insb
or
xlat
inc
imul
inc
aad
negl
test
iret
scas
movb
popf
aas
test
cmp
jmp
cld
mov
add
into
inc
and
xor
cmp
mov
xchg
mov
mov
mov
imul
inc
cld
outsl
lods
mov
sahf
js
or
dec
and
cs
subb
push
mov
fbld
sub
aas
pop
add
push
cmp
add
pusha
push
mov
hlt
mov
adc
or
cmp
gs
loopne
and
pop
pop
adc
xlat
push
inc
push
pushf
pusha
js
in
inc
mov
xor
fwait
test
cwtl
decb
push
nop
and
or
dec
and
mov
movsl
imulb
loopne
cmp
mov
cmp
xchg
bound
pop
loopne
cld
mov
or
sub
inc
or
clc
adc
xchg
lds
aas
lods
cmpsb
mov
loopne
pop
hlt
and
sub
xchg
inc
fistl
negb
sub
mov
inc
mov
push
adc
orb
mulb
sub
ljmp
pop
stos
cmpb
dec
test
cmp
mov
inc
dec
loopne
jg
andl
push
sti
mov
sti
sbb
test
sbbl
dec
fcoms
leave
ss
push
cmpsl
dec
negl
pop
mov
filds
arpl
dec
or
adc
lods
cmpl
enter
sub
inc
insb
add
movsl
adc
sbb
fwait
or
jo
mov
and
xor
pushf
adc
inc
cmp
lock
jns
call
mov
inc
cmp
push
loopne
cmpsb
inc
push
and
and
adc
inc
sbb
cmpxchg
adc
pop
dec
nop
mov
cmp
xchg
mov
add
and
pop
js
lcall
xchg
ljmp
data16
mov
jmp
repz
sub
scas
pop
sbb
mov
notb
or
idivl
subb
in
add
lahf
loopne
mov
xadd
aaa
pusha
fmull
jp
xor
add
mov
push
add
int3
shlb
imul
sub
push
imul
fdivrs
add
imul
sbb
xchg
aaa
popf
mov
push
aas
sbb
lret
sbb
add
jle
js
in
dec
add
push
pop
sub
jg
call
mov
and
and
sub
mov
cmp
add
dec
add
mov
in
pop
int3
pop
add
jbe
xor
xchg
jl
sub
add
push
loopne,pn
das
add
or
or
dec
xchg
mov
fmuls
lea
dec
mov
adc
add
add
add
add
xor
push
mov
or
loop
push
push
mov
xlat
inc
mov
adc
add
inc
test
addl
ss
test
nop
push
add
lret
out
fidivl
jns
arpl
movsb
pop
add
outsl
mov
add
cltd
cmp
frstor
inc
in
or
or
jns
add
aaa
fs
je
add
bound
mov
sub
jo
add
je
xor
lret
cli
inc
std
inc
repz
aaa
rcl
or
enter
repz
roll
pop
pop
sub
and
ficoms
ret
xor
sahf
add
aad
pop
xchg
mov
sub
sbb
sub
add
add
mov
popf
add
sbb
lods
hlt
sub
enter
add
add
iret
cltd
repnz
and
xlat
and
add
sub
or
dec
mov
xchg
jnp
mov
mov
aaa
inc
int3
rcrb
xchg
pop
inc
add
fimuls
push
jbe
daa
data16
adc
hlt
add
adc
mov
mov
jo
in
test
add
push
movsl
dec
in
adcb
add
in
mov
roll
mov
movsl
xor
mov
sbb
jb
jmp
jl
hlt
pop
ss
push
das
pop
out
aaa
sub
add
dec
lcall
stos
cmp
dec
add
imul
add
arpl
pinsrw
push
cmc
stos
filds
jecxz
in
inc
cmp
sub
enter
mov
mov
add
cmp
dec
jp
add
aam
jnp
clc
pushf
test
insl
and
mov
inc
std
push
xchg
ja
add
mov
imul
shr
outsl
or
in
je
xchg
lahf
sbb
iret
xchg
sbb
ja
aaa
jg
popf
add
aad
out
sub
popa
add
jne
adcb
ljmp
add
out
xchg
sbb
cmpl
mov
jo
stos
push
insb
or
inc
xchg
imul
xchg
popf
in
std
pop
mov
inc
sar
leave
add
pusha
dec
cmp
inc
push
maxps
xor
sub
or
sub
dec
sbb
jbe
fs
ret
and
cmc
inc
mov
loopne
mov
mov
test
sahf
adc
add
cmpl
xor
add
mov
pop
add
mov
and
sbbl
test
lods
jno
js
scas
cmp
jne
adc
cmpsb
icebp
aas
mov
mov
cs
xchg
and
and
fstpt
pop
pop
cmpsb
adc
xchg
insl
jge
hlt
cmp
or
dec
clc
imul
add
fsubrl
sub
inc
push
aas
loopne
sahf
sub
stc
push
loopne
jb
stos
data16
fidivs
cli
movl
js
jne
add
lahf
sarb
lods
mov
nop
xchg
mov
aad
into
inc
push
js
gs
or
les
cmpsb
fisttpll
jp
fs
sbb
add
inc
sub
xchg
js
add
adc
pushf
or
sbb
add
sbb
mov
pop
jl
cmp
mov
push
sub
pop
icebp
iret
xchg
test
inc
xor
dec
mov
dec
sbb
stc
inc
shlb
jnp
add
sbb
incb
dec
adc
xor
cmp
cmpsl
pop
adc
xor
mov
and
add
lahf
add
jb
mov
cmp
les
test
orb
dec
fwait
sbb
add
or
and
sbb
cmp
dec
fdivl
add
leave
xchg
ret
stc
dec
adc
push
cmpb
push
jg
pop
call
mov
addr16
icebp
clc
repz
xor
lock
dec
mov
sub
mov
push
push
cmpsb
nop
push
imul
pop
adc
pop
cmpb
jmp
fdivrs
rol
mov
inc
ret
jns
sti
out
add
js
popa
cmp
pop
dec
push
je
stos
sahf
pusha
aam
xor
and
lcall
orb
dec
ljmp
jo
add
adc
sbb
xchg
xchg
inc
inc
xor
dec
inc
adc
xchg
call
xor
fnstcw
or
push
cwtl
clc
sub
aad
dec
pop
or
mov
bound
add
add
sarb
add
pop
lahf
popa
adc
and
push
fsts
xlat
mov
dec
adc
and
cmp
add
out
test
pop
push
mov
scas
inc
add
les
lahf
add
jns
inc
rcl
push
mov
pop
pop
push
int
scas
add
add
adc
lcall
lret
xchg
pop
push
push
mov
lahf
pop
lods
xchg
lcall
push
mov
mov
jp
lea
sahf
nop
mov
cmpsb
imul
sub
xor
fwait
rcll
inc
pop
jg
mov
adc
rcll
jl
lock
inc
push
iret
cmp
mov
enter
push
gs
dec
movsl
cmp
cmp
fildl
ds
add
shrl
and
fmul
cmp
ficompl
jo
cmp
ret
repnz
inc
cmp
push
sub
inc
push
inc
and
cmp
sbb
orb
rcrb
push
iret
add
add
lods
xchg
jmp
dec
push
jecxz
push
hlt
clc
push
push
mov
pop
roll
push
push
mov
inc
sub
loop
mov
jecxz
add
adc
mov
adc
js
add
dec
test
sbb
fimuls
pusha
cmp
jns
mov
mov
mov
dec
mov
insb
dec
sub
fs
xor
pop
xchg
jl
sub
sub
pop
je
pushf
lods
ret
add
xchg
cmpsb
add
js
ds
or
addl
rcr
sub
mov
push
cmp
lods
pop
add
ds
inc
sub
or
or
xchg
or
or
les
ret
mov
mov
int3
sub
stos
or
lock
mov
or
data16
in
movsl
adc
jbe
inc
js
mov
jo
jo
fistpl
or
jno
mov
push
or
imul
and
xor
pop
dec
and
les
mov
adc
and
dec
es
daa
and
sub
xor
dec
cs
das
ds
mov
jb
sbb
mov
test
and
int3
mov
and
inc
enter
aam
loop
pop
inc
and
shlb
and
je
inc
mov
cmp
adc
sarl
or
call
aas
sub
mov
xchg
js
sub
sahf
dec
aad
inc
in
dec
xlat
inc
add
sub
pushl
pop
add
call
iret
pop
sbb
es
xchg
adc
cmp
sbb
imul
dec
sbb
add
dec
xchg
push
imul
test
loopne
add
and
sub
push
add
or
movsb
push
inc
mov
xorl
push
cmp
sbb
out
mov
outsl
fcoms
add
mov
mov
cmp
dec
mov
cmp
sbbb
das
and
mov
cvtps2pd
js
icebp
cld
rcrb
int
pop
and
xchg
pop
xor
mov
mov
push
andl
hlt
mov
ret
inc
sub
addr16
dec
pop
stos
fcomps
xchg
mov
add
mov
hlt
add
or
xchg
int
icebp
mov
rorb
mov
and
add
mov
leave
dec
add
mov
jmp
add
inc
sbb
movsl
inc
cmp
rcr
mov
cmp
out
ds
add
fsincos
xor
loope
loopne
loopne
xor
in
inc
xor
inc
mov
cli
cmp
fisttpl
rcrb
hlt
xor
add
outsb
sbb
inc
sbb
subb
xor
xchg
xor
js
in
sub
xor
xchg
pop
cwtl
jecxz
push
sub
mov
lret
addb
inc
and
or
inc
aas
mov
roll
out
mov
sbb
cli
push
insb
test
sahf
adc
movsl
mov
loope
jb
add
xor
push
cmc
jne
daa
out
fbld
and
lods
jo
pop
int3
sbb
xchg
cmpsl
inc
jno
loope
mov
lods
adcb
sbb
repnz
add
ficompl
cwtl
pop
mov
push
inc
sbb
xchg
and
mov
sub
cmpsl
jnp
adc
cltd
push
jge
sub
mov
fistpll
push
notl
cwtl
mov
shrl
shrb
xor
sub
jecxz
sbb
ret
jns
xchg
push
xchg
adc
les
pusha
fwait
sbb
imul
fucomi
mov
and
enter
cmp
fdivrl
fldcw
jl
and
cltd
pop
mov
pop
add
or
mov
popa
xchg
xor
jne
xchg
sbb
push
sbb
filds
aad
dec
test
mov
and
ss
mov
lods
or
ja
enter
mov
add
lea
js
orb
test
xchg
mov
sbb
inc
jno
sbb
or
insl
adc
lret
inc
rorl
pop
mov
stc
lea
mov
rcll
lods
mov
pop
fiaddl
mov
pop
test
cmc
out
push
adc
ret
aam
lods
adc
and
test
mov
inc
or
enter
aas
movsb
adc
int3
bound
adc
cwtl
dec
cmpsb
jg
dec
hlt
push
js
shlb
mov
popf
and
or
adc
cltd
add
test
dec
sti
cmp
pop
test
pushf
mov
fstpt
push
or
add
pop
sbb
inc
xor
js
or
loop
xor
push
adc
in
clc
ss
xchg
fucomi
xor
mov
rorl
cmp
es
clc
push
cmp
mov
adc
xchg
inc
pop
cs
add
cmp
inc
lds
addb
xor
je,pt
push
fildl
xor
xchg
in
inc
sub
sbb
jecxz
sbb
rcrl
cmp
inc
sub
loopne
lods
pop
push
or
sbb
xchg
adc
fcomi
rclb
int3
add
sub
dec
xor
aad
lock
leave
rolb
cmp
dec
incl
mov
stc
rclb
shr
jge
mov
call
mov
jmp
push
popl
add
dec
test
pop
add
sbb
out
dec
and
jecxz
xor
fmuls
add
shrb
inc
jmp
add
xchg
stos
pop
dec
nop
out
and
dec
dec
test
jae
rorb
das
xchg
and
fisttps
or
inc
je
test
adc
scas
cld
aad
mov
inc
js
in
leave
nop
mov
mov
mov
push
add
or
es
rolb
dec
xor
addl
cwtl
add
xchg
fdiv
or
or
mov
cmp
jbe
call
mov
add
adc
pusha
ss
lods
lock
call
dec
inc
addl
mov
mov
xor
xor
xchg
jmp
rcrl
mov
dec
cmp
cmp
cwtl
and
in
clc
pop
cmp
cmpb
divl
push
pusha
rolb
xor
jmp
daa
sbb
dec
xor
add
aas
ret
sbb
jecxz
mov
mov
cmp
cmc
clc
mov
call
inc
sub
dec
mov
mov
cmp
mov
pop
or
les
or
rcrb
or
and
rorl
sub
xchg
fistl
les
cmp
or
inc
je
mov
jl
push
xchg
and
sub
and
cmp
cwtl
adc
xor
mov
sti
cmp
jmp
sub
inc
cmp
lds
cld
sub
clc
mov
mov
inc
jl
shlb
movsb
sbb
cmp
cld
popl
sar
add
test
xchg
fwait
dec
sbb
inc
enter
es
inc
cmpsl
push
ljmp
loop
je
cld
mov
xchg
sbb
in
pop
xchg
inc
push
dec
ret
lock
loopne
icebp
or
fs
cmp
sbb
out
dec
mov
loopne
dec
daa
pop
in
mov
or
adc
push
inc
xchg
mov
out
ds
fcmovnb
and
xchg
andl
and
fisttpl
xchg
xlat
cli
adc
add
shlb
faddl
rcrl
push
hlt
jle
xchg
sub
mov
jo
pop
and
xor
in
sti
movsb
sbbb
notl
sbb
sbb
xchg
in
js
xchg
fdivr
and
das
push
xchg
out
cmp
sbb
cwtl
jmp
xchg
ja
adc
inc
outsl
dec
call
jle
je
and
xchg
sbb
sub
in
sti
ds
and
xchg
call
adc
cmp
test
fdiv
sbb
lret
jb
in
or
fistpll
inc
xor
fmuls
call
pop
fcoms
and
inc
cmp
js
ljmp
mov
xchg
dec
lock
das
mov
icebp
fs
call
sbb
es
je
xor
call
popl
push
js
and
xchg
test
loopne
cmc
add
fisttps
cwtl
xlat
fwait
call
loop
xor
sub
test
in
add
sub
shr
ds
and
and
add
clc
push
or
out
je
and
cmp
fdivrs
cmp
add
cwtl
inc
jns
jnp
add
cmp
push
clc
fcoms
out
or
cmp
jbe
lods
fldt
xor
pop
ror
ret
movsb
sti
push
jl
cmp
clc
stos
popf
sbb
fstpl
add
pop
das
push
add
jl
add
dec
testb
xchg
lock
add
pusha
and
daa
test
dec
lock
cmpsb
xor
mov
mov
xor
ljmp
add
inc
cwtl
daa
ljmp
iretw
lods
push
pop
sbb
scas
andb
dec
push
es
addb
divl
xor
out
ja
shrl
dec
pop
clc
aas
jl
mov
pusha
scas
lahf
je
sbb
enter
pop
das
stc
cld
rol
cmpsl
mov
inc
sbb
jge
push
leave
dec
jnp
mov
testl
enter
sar
jmp
xchg
inc
and
pop
fstl
and
test
inc
cwtl
mull
cmp
lods
mov
inc
add
adc
idivl
and
jne
es
stc
and
mov
insb
push
and
sbb
jge,pt
fdiv
test
and
clc
mov
or
addr16
fstps
inc
sti
push
imul
mov
clc
les
repnz
in
push
out
test
jmp
jp,pn
xor
std
push
or
xor
hlt
sub
and
push
cltd
sub
sbb
mov
cmp
and
adc
cltd
pop
mov
adc
mov
sub
fsts
and
fwait
xor
enter
les
and
jg
or
pushf
mov
and
iret
inc
aaa
xchg
adc
enter
pop
test
stos
and
xor
jbe
jmp
adc
test
ljmp
lret
sbb
pop
test
or
hlt
push
lahf
in
push
inc
hlt
add
and
xchg
add
lods
xor
sbbl
rcl
jne
mov
pushf
cmc
cmpsl
jb
push
xor
aad
fxsave
repnz
xchg
je
dec
sbbb
es
pop
das
pushf
sub
mov
jae
popa
js
mov
inc
push
push
or
sbb
enter
dec
cmpl
xchg
repnz
jmp
jae
notl
je
mov
mov
jmp
lods
imul
out
push
insl
pop
mov
rcrb
popf
fwait
jns
sub
popa
cli
test
jge
out
push
pop
cs
lods
sbb
dec
daa
push
add
or
mov
xor
mov
dec
pop
enter
jne
cmp
dec
decl
lods
imul
and
xchg
mov
addl
mov
mov
out
js
mov
jg
ret
mov
loopnew
repz
testl
pop
fs
mov
outsb
fidivrl
add
in
push
fsubs
cmp
jmp
and
sbb
decl
jbe
mov
orb
add
jl
push
dec
cli
pushl
pop
sub
fisubrl
loopne
adc
mov
add
add
mov
mov
and
mov
pop
les
hlt
jno
test
sub
cld
jmp
lret
xor
iret
dec
dec
xor
push
outsl
arpl
cmpsl
xchg
js
decl
push
test
pop
rolb
loop
es
mov
mov
movsb
loopne
mov
fwait
mov
out
lcall
sbb
add
test
sub
mov
les
add
pop
jmp
pop
cmpsb
loopne
pop
in
cmp
leave
adcb
pusha
add
lcall
fcmovnb
lcall
fcmovu
jo
loop
add
sub
rcrl
add
leave
lcall
add
dec
fistpl
add
sub
add
jle
sbb
les
inc
adc
pusha
sbb
or
push
sub
add
clc
pushf
dec
xlat
push
sbb
cli
in
adc
sbbb
fs
push
add
sbb
aam
fwait
dec
adc
xchg
cs
sbb
sbb
nop
pop
adc
neg
stc
jmp
inc
je
nop
add
adc
add
repnz
push
sub
pop
repnz
add
lahf
mov
ret
jle
add
push
add
cmp
push
pop
push
faddl
loop
fwait
sbb
inc
or
push
add
sti
mov
out
adc
or
icebp
iret
hlt
sbb
cli
inc
lret
fs
pop
and
add
andb
mov
sub
ds
jecxz
xor
sarb
push
cmp
and
xlat
lds
addb
int
sbb
ds
inc
mov
rolb
scas
into
int
mov
mov
add
pop
ret
push
add
jl
mov
gs
insb
into
fistl
int3
pop
faddp
add
scas
inc
or
in
in
add
mov
or
test
mov
add
and
fwait
push
adc
data16
mov
dec
popa
dec
data16
out
bound
mov
adc
add
cmpsb
or
mov
cmpsl
and
movsb
add
shrb
xor
add
cld
sub
pop
fistpll
sbb
cmpsl
sbb
subl
fimuls
mov
cmpsb
xchg
mov
ret
int3
mov
add
rcll
pop
std
xlat
call
adcb
add
xor
inc
scas
jnp
xor
imull
sub
out
inc
pop
add
lock
sti
test
sub
shrl
mov
cltd
lods
ffreep
cli
push
xlat
fwait
rorl
push
push
fsubrl
inc
xor
pop
in
addr16
jo
out
xchg
icebp
add
push
push
mov
or
push
sub
xor
outsl
pusha
push
inc
push
cmpsb
aas
pusha
fidivrl
imulb
xchg
jp
cmp
out
andb
mov
mov
sbb
fstps
test
pop
jb
ja
out
sti
cmp
pop
rclb
pop
rep
fstpt
or
pop
test
xchg
push
rclb
pop
pop
add
cltd
scas
mov
jo
popf
scas
cltd
add
clc
adc
add
scas
mov
push
inc
je
repz
add
xchg
jns
xor
mov
adcl
bsf
movsl
inc
daa
loope
leave
mov
fcomp
fistl
repz
test
cmpb
or
xchg
pop
sub
push
loopne
jmp
xlat
cmp
lahf
cmp
xor
adc
pop
add
shrl
inc
mov
jnp
mov
inc
cmp
jno
clc
mov
or
mov
in
bound
and
pop
lods
sbb
mov
mov
add
pop
add
aad
add
popa
dec
mov
rcr
and
add
xchg
test
push
loop
xchg
jp
add
pop
or
scas
sbb
in
sbb
dec
mov
sbb
lods
mov
sbb
inc
mov
push
jo
loope
add
mov
mov
test
lds
xchg
sub
mov
lret
mov
shrb
add
jae
mov
dec
sub
mov
rcll
xor
dec
and
cmpsb
stos
mov
and
xchg
lods
and
jne
fxch
jnp
rcrl
xchg
add
cwtl
rorb
jecxz
xchg
cmp
push
xor
xchg
popa
dec
fsts
cmp
jg
push
inc
sub
jmp
inc
cmpsl
add
inc
and
pop
mov
add
movsl
push
push
or
in
aam
or
mov
in
call
cmpsl
pop
fidivrl
mov
mov
insb
and
mov
lret
adc
push
jmp
push
loop
dec
jae
sub
xor
add
or
scas
fsubrs
mov
mov
movsl
sbb
or
add
dec
push
and
inc
pusha
pop
inc
out
add
fcom
and
mov
add
fdivrl
sarb
imul
add
sbb
ret
mov
xlat
mov
pop
in
aad
cmp
cltd
push
test
fwait
cmp
cmpsl
cltd
sbb
mov
dec
push
adc
jmp
movsb
xor
sarl
and
pop
jo
cltd
repnz
lds
mov
sahf
xchg
add
pop
pop
in
mov
dec
jo
js
mov
insl
or
shlb
cmpsb
fcoml
cmp
nop
adc
addr16
sub
test
jl
mov
adc
pop
pop
mov
push
mov
stos
fildll
add
sahf
mov
xor
test
stos
sbb
mov
movsb
mov
sbbb
sbb
and
and
add
dec
lcall
sub
push
lods
shrb
sbbb
adc
add
test
jmp
fistl
sub
nop
pop
loop
dec
cmp
dec
push
pusha
nop
dec
hlt
mov
rorb
inc
fiaddl
pop
mov
lods
loop
and
fsubrl
inc
out
int3
test
inc
loopne
add
push
iret
daa
shrb
xchg
pop
outsb
xchg
push
outsb
pusha
and
sub
iret
pcmpgtw
adc
cmp
nop
sbb
or
push
fsubrl
dec
sahf
andb
stos
cmp
inc
dec
enter
mov
jl
jo
out
mov
cmp
sbb
shl
add
call
dec
adc
push
jge
add
dec
mov
or
xor
xor
add
cmc
mov
addb
aam
ja
adc
fcomps
or
and
imul
out
add
push
call
and
inc
insb
add
sub
mov
scas
and
lret
adc
pushf
lods
cltd
add
into
xor
jnp
mov
aad
cmpsl
adc
out
andl
testb
dec
dec
test
lsl
clc
push
push
fmull
dec
std
mov
add
vaddpd
jne
mov
pop
inc
cmp
test
rcl
mov
cs
loopne
sbb
insb
add
in
and
sub
pusha
hlt
jns
add
cwtl
rcrl
fs
push
mov
xor
test
inc
sbbb
dec
cwtl
hlt
addr16
and
push
rcrb
cld
ds
inc
push
cmpsl
or
in
mov
test
hlt
imul
scas
pop
jg
cmp
adc
addl
push
or
xchg
sbb
hlt
test
jle
add
adc
arpl
mov
out
jecxz
rol
xchg
out
push
pop
rorb
inc
loopne
lcall
xor
lea
popl
jae
push
push
addr16
pop
pop
or
dec
popa
sbb
adc
xchg
repz
ds
outsl
popa
hlt
pop
fists
jge
cmp
sbb
add
jne
push
dec
xlat
or
jbe
aas
imul
mov
dec
mov
adc
mov
imul
jnp
scas
push
mov
mov
adc
mov
and
adc
sub
js
sub
push
or
test
arpl
jb
shlb
cs
mov
mov
pop
daa
xchg
mov
ffree
jnp
xchg
loop
js
std
mov
enter
data16
push
addb
aad
xchg
hlt
and
add
cmp
fcmovb
jo
adc
cs
inc
inc
cmpsb
inc
sub
aas
adc
sub
adc
and
cmpsl
je
add
enter
fstpl
mov
mov
xor
aas
pop
and
xor
aaa
stos
inc
mov
outsb
test
lods
and
iret
mov
aad
aam
mov
enter
fdiv
cs
icebp
add
rcrb
dec
sbb
jge
pusha
arpl
cltd
or
mov
and
dec
jns
sbb
adcl
dec
cwtl
call
in
add
sbb
adc
repz
loope
pop
rorb
repz
jmp
add
js
sbb
pop
sbb
pusha
pop
sbb
add
cmpsb
loopne
mov
fdivrs
jo
adc
push
add
rorl
dec
pop
sub
or
pop
js
add
jnp
mov
fistl
jmp
adc
cmp
or
cmp
mov
lret
mov
add
pop
add
mov
pop
je
push
or
pop
mov
dec
push
pop
in
dec
xorb
adc
fiaddl
aas
loop
pusha
jl
and
push
push
loopne
inc
adc
insb
add
popa
pop
inc
xor
repnz
test
jb
sbb
cs
mov
mov
imul
sub
and
adc
fildl
mov
popa
adc
cmp
and
and
shl
adc
or
xor
inc
dec
sub
loopne
and
les
cmp
loopne
scas
push
iretw
outsb
inc
hlt
cmp
movsl
nop
lcall
addr16
lcall
inc
jecxz
dec
mov
das
jo
popa
pop
dec
pop
sbb
push
add
xchg
js
mov
push
cs
pusha
push
in
adc
loope
add
bound
in
sbb
fsubrs
es
cmp
xchg
loope
pop
pop
pushf
push
dec
in
insb
add
or
lret
or
aam
shll
inc
jo
sbb
push
les
sahf
sub
bound
les
aam
or
adc
loop
inc
aam
push
cmp
xchg
adc
lods
xor
or
ror
inc
adc
fcmove
mov
test
les
cmpsl
dec
into
sbb
or
add
dec
cmp
adc
or
or
rcr
pop
cwtl
mov
mov
lcall
fs
orb
scas
sbb
xor
mov
cmpsl
sbb
mov
insl
pusha
mov
or
lret
inc
sbb
mov
add
addr16
mov
stos
in
add
nop
push
repz
pop
push
jns
cmp
loopne
arpl
push
lahf
lock
leave
jne
adc
aas
cli
inc
add
add
nop
push
pusha
mov
cmpsl
add
loop
std
pop
stc
or
add
or
fsubrl
mov
mov
jo
gs
stos
int3
nop
adc
faddl
hlt
sub
fsubrp
lock
cs
push
xchg
pop
pop
push
add
pop
dec
mov
and
adc
pushf
or
int3
mov
adc
pop
sub
add
fmull
push
mov
fsubrs
sbb
add
mov
aaa
sbb
das
cmp
mov
or
imul
or
pop
push
loope
scas
mov
adc
inc
aas
pusha
aad
das
shl
ret
fs
sub
out
adc
add
jne
xor
add
loope
mov
pop
inc
mov
adc
lock
pop
subb
cld
sub
sub
pop
das
xor
in
add
jnp
or
aam
call
out
adc
jg
nop
out
add
loopne
mov
or
jno
or
mov
cmp
fpatan
mov
sahf
mov
inc
adc
add
shlb
add
adc
lcall
adc
adc
in
xorb
sbb
jb
clc
fstps
or
cwtl
mov
add
shl
sbb
cli
fucom
mov
dec
mov
adc
les
mov
dec
int3
adc
add
push
lea
andb
adc
push
imull
lock
add
gs
cs
jp
inc
inc
xchg
dec
or
inc
add
in
jo
and
mov
sub
mov
sub
or
shll
pop
imul
and
and
outsl
inc
add
sub
out
in
inc
clc
int
and
add
mov
int3
cmp
adcb
sbb
add
sbb
add
pusha
sub
pop
jns
test
push
add
or
and
add
push
add
in
arpl
aam
pop
test
push
repz
hlt
pop
inc
jb
jl
std
icebp
xor
stc
roll
loope
sbb
jg
sarb
xchg
pop
fistl
adc
dec
mov
enter
cmp
push
es
scas
and
ret
or
in
inc
mov
xchg
and
imul
gs
rcrb
dec
in
stc
popa
or
adc
cwtl
mov
mov
mov
int3
add
xchg
daa
fisubrl
call
jl
test
sahf
int3
lods
addl
inc
inc
jno
pop
orl
aas
adc
das
aad
or
xor
inc
xchg
adc
sub
mov
rcl
adc
daa
pusha
js
pop
addr16
addr16
cmpsb
adc
aam
sub
mov
sbb
inc
mov
push
sbb
and
pop
in
insl
and
mov
arpl
es
adcl
mov
push
sbbb
push
sub
fdivrl
enter
loop
mov
sbb
and
xchg
push
loope
pusha
mov
add
mov
cltd
add
push
adc
fs
in
iret
jle
mov
xchg
dec
mov
test
pusha
pop
or
repnz
pop
mov
sub
cwtl
jo
pop
push
mov
sub
add
fsts
fs
push
les
push
sub
les
pusha
xlat
sub
pop
in
push
popa
mov
sbbb
adc
adc
ja
dec
in
inc
rol
adc
cmp
sbb
popa
xlat
cld
shlb
adc
lods
cmp
shlb
call
sbb
jmp
xor
mov
out
and
lea
js
jb
in
dec
add
cmp
int3
inc
rcll
popa
cli
cmp
pushf
inc
shrl
xchg
das
es
icebp
push
mov
jecxz
clc
notl
sub
rorl
xchg
dec
push
subl
mov
xor
mov
imul
test
shlb
fdivrp
mov
pop
int
jb
cmp
test
adc
xchg
clc
pop
inc
add
rorl
in
fnstenv
mov
add
movsb
sub
mov
popf
aad
push
jl
or
fdiv
inc
hlt
popa
or
loopne
sarb
add
push
jo
sub
adc
daa
adc
or
mov
push
add
xor
mov
add
mov
outsl
and
pop
cli
cmp
imul
pusha
fs
dec
pop
mov
jle
push
add
adc
cmp
fsubr
dec
pop
sub
push
subb
and
imul
mov
pusha
xor
inc
mov
pop
hlt
loop
test
cmp
inc
jmp
adc
xlat
xor
sbb
fisubs
sub
add
sub
mov
mov
fbstp
push
js
sub
sbbb
inc
or
stos
scas
insl
pop
fbld
dec
push
pusha
loopne
movsl
inc
insb
or
fistpl
int
pusha
cli
dec
idiv
dec
dec
adc
push
or
cmpb
out
mov
stos
mov
inc
cltd
loopne
push
jg
add
es
xor
push
adcl
pusha
daa
add
add
addb
addr16
fisubs
popa
or
mov
ja
sbb
or
outsl
add
xchg
adc
ret
incl
xchg
das
pusha
hlt
aas
pushf
hlt
enter
sbb
in
pop
scas
push
pusha
pusha
push
inc
dec
sbb
adc
and
xlat
mov
add
das
in
and
in
dec
xchg
adc
jo
mov
test
jne
mov
test
mov
jp
and
mov
es
mov
and
adc
loopne
add
pop
cmp
ret
xchg
pop
add
bound
loopne
mov
sbb
jnp
mov
shlb
cltd
das
mov
fadd
and
xorl
call
cltd
push
add
repnz
dec
inc
jbe
cmpb
xor
mov
jno
ss
sbb
jns
xorb
inc
insb
xchg
add
or
or
dec
or
pop
push
xchg
add
in
cmpsl
loope
cmp
sbb
push
xor
push
pop
in
mov
or
mov
mov
jnp
add
out
sub
sub
gs
sbb
mov
test
js
cli
or
in
adcb
out
pusha
int3
jns
push
out
nop
mov
enter
lock
dec
imul
imul
sub
jae
add
dec
inc
pusha
xchg
outsl
js
mov
mov
jmp
dec
xlat
sbb
pusha
mov
xor
fld
adc
xchg
stos
sbb
xchg
movl
inc
pop
push
mov
mov
and
adc
repnz
push
and
dec
inc
leave
rcrl
mov
mov
bound
int3
ret
push
and
movsb
sub
dec
js
icebp
jl
add
rorl
inc
push
and
cmp
xor
xor
orb
je
xchg
and
dec
or
data16
daa
in
and
in
incb
aad
inc
xor
xlat
pop
and
inc
dec
mov
pushf
add
cwtl
cmp
xchg
mov
xlat
ret
push
cmpsb
sarb
xchg
and
pop
push
push
and
scas
in
xor
push
sub
mov
rorb
ret
mov
fnstsw
sbb
inc
mov
loop
stc
mov
jl
rclb
sbb
leave
pop
pusha
add
jo
int3
add
aad
repnz
subb
xchg
nop
inc
push
faddl
add
adc
stos
scas
add
mov
je
std
lods
cmp
mov
shll
mov
xor
sbbl
inc
nop
mov
lahf
pop
push
xchg
jb
dec
add
and
inc
out
pop
jo
daa
xchg
add
aam
lcall
enter
dec
xor
adc
xorb
outsb
xor
mov
fsubs
cmpsl
pop
stc
xor
mov
enter
cmp
mov
sti
dec
pop
out
cmp
daa
sub
xor
jno
loope
loope
inc
pop
loopne
call
icebp
xor
enter
mov
pop
jo
loop
add
cmp
xchg
subl
xor
adc
push
cmp
jae
mov
and
loope
dec
adc
mov
jns
negl
shr
lods
jp
mov
mov
cmp
xchg
flds
ljmp
inc
out
or
shll
dec
scas
jp
popf
mov
das
fsubs
jae
mov
hlt
pop
cmp
and
fdivrs
jno
add
fists
pop
cmp
fisttpl
in
imul
and
push
mov
xchg
mov
mov
inc
inc
test
xor
and
adc
fldl
lds
push
jnp
xchg
js
sbb
mov
xorb
xor
adc
mov
and
adc
repnz
insl
sbb
in
xor
or
test
cld
add
fisubl
lock
cld
mov
sar
rorb
pop
std
loop
and
shl
movsl
in
popa
jns
in
test
in
arpl
call
iret
inc
xlat
fdivrs
adc
sub
adc
push
pop
loop
dec
jo
shlb
sub
pusha
and
repnz
jecxz
or
dec
inc
push
adc
test
stos
xor
or
and
dec
pop
ret
adc
and
inc
mov
in
mov
xchg
mov
jns
pop
inc
add
hlt
mov
bound
adcb
imul
push
adc
lods
fistl
pop
insb
xor
pushf
or
or
xchg
or
and
insl
ret
bound
push
and
mov
shrl
dec
cmp
add
or
jae
jmp
out
hlt
xor
jecxz
hlt
cld
pop
xchg
adc
sub
test
push
pop
jae
push
loop
fildl
xlat
insb
sub
mov
sbb
pusha
subl
add
add
and
popa
push
inc
hlt
cmp
test
xlat
adc
cmp
mov
cs
mov
or
test
mov
leave
ror
sub
imul
mov
inc
mov
mov
and
xchg
mov
test
or
adc
mov
add
ds
mov
mov
jnp
je
aam
jmp
movsb
push
xor
mov
loop
lock
pop
mov
pop
shlb
dec
push
adc
adc
fsubrp
or
js
push
or
sub
xchg
jmp
repnz
add
rclb
add
test
push
dec
cmpsl
sbb
fucomp
inc
jo
enter
mov
or
cmp
or
aam
jae
out
incb
cmc
cmpsb
or
or
cmp
inc
icebp
and
sbb
mov
mov
sub
cld
adcl
mov
mov
roll
mov
repnz
add
cmp
lahf
pop
mov
pop
add
data16
sbb
lahf
pop
pop
pop
pop
je
push
lcall
and
hlt
leave
mov
test
jle
add
mov
pusha
and
test
mov
xorl
or
bound
arpl
and
ljmp
and
or
stos
rolb
aaa
push
cwtl
into
jg
es
inc
mov
mov
nop
les
push
mov
mov
cli
dec
add
outsl
fdivrs
adc
pop
mov
lock
sub
pop
mov
mov
scas
sbb
das
fstps
cmpsb
sbb
sub
inc
aam
add
out
roll
lds
push
lea
lock
or
std
dec
inc
xchg
lock
pusha
addr16
icebp
in
jbe
jle
add
repnz
pop
clc
shlb
sub
or
outsl
and
mov
sub
nop
xor
adc
mov
out
dec
sbb
xchg
outsl
outsb
addb
repz
push
sbb
cltd
sub
je
sbb
pop
orl
loop
stc
gs
jns
sbb
cld
call
icebp
pop
ret
movsb
sbb
in
pop
add
pop
sub
and
and
and
or
push
outsb
cmc
jl
clc
mov
les
add
rorb
repnz
es
jmp
test
mov
inc
out
or
nop
mov
add
fsubs
movsb
push
sbb
test
iret
adc
push
bound
push
bound
rclb
addr16
pop
inc
mov
stos
xor
mov
sarb
imul
mov
fcompl
pop
or
pop
in
mull
aas
inc
xlat
xchg
enter
cmpb
xchg
inc
xor
cmp
test
fildl
fmul
push
pop
gs
pop
popa
inc
pop
clc
rorb
mov
stos
pop
mov
out
shl
nop
js
movsb
add
xchg
jns
in
cld
int3
dec
iret
je
xor
inc
xor
stos
das
push
loope
ljmp
pop
pop
in
jb
mov
bound
aas
xchg
fmuls
jecxz
loop
sub
enter
inc
insb
loopne,pn
es
sbb
movsl
aam
mov
daa
push
rorl
push
push
sbb
dec
aam
mov
shlb
test
imul
int
mov
cs
inc
xor
xor
push
push
pop
sbb
xor
sub
dec
or
test
add
fcmove
cld
mov
cmp
xor
sbb
js
lods
mov
xrelease
cmpl
jmp
jo
das
lea
fisttpl
mov
add
sbb
sub
push
sub
or
push
stos
inc
js
sbb
aad
int
dec
inc
cwtl
ds
dec
rclb
ds
inc
jecxz
mov
xchg
mov
sub
pusha
test
nop
xchg
inc
or
popf
xchg
dec
rcll
jae
mov
shll
sbb
mov
push
xchg
xor
or
in
dec
jno
add
add
in
dec
jl
add
jae
inc
cwtl
push
pop
or
mov
pop
dec
or
imul
sbb
shlb
mov
shrl
out
xchg
dec
add
lock
jns
aad
jmp
mov
add
jns
pop
enter
sbb
or
mov
sbbl
movsl
je
mov
es
aad
dec
push
iret
loopne
imul
mov
xchg
dec
aad
pop
jnp
fstps
icebp
adcb
sbbl
ss
orb
adc
mov
cs
rcrb
pop
mov
pusha
bound
and
adc
inc
shr
subb
add
xchg
mov
shll
in
jl
push
push
or
adc
rorb
nop
in
movsb
in
pop
mov
sbb
add
or
stos
dec
xor
pop
mov
push
out
aaa
add
sub
pusha
repnz
push
fstps
fstpt
xchg
les
test
daa
mov
jle
fidivrs
xchg
test
rorl
ficompl
cmpsb
pop
add
xor
push
outsb
sti
and
sbb
or
cmpsb
mov
mov
inc
pop
mov
push
cmp
enter
addl
xor
aad
xchg
scas
cltd
push
mov
and
pop
mov
cmpsl
pop
mov
lea
push
pop
mov
stos
push
jge
aam
and
shlb
scas
pop
mov
xor
cmpsb
adc
adc
mov
push
push
mov
xchg
pop
push
mov
cmp
mov
or
mov
xlat
movsb
inc
popaw
mov
out
cmpb
pop
loopne
jae
call
mov
xlat
add
loopne
dec
pusha
mov
dec
sbb
pop
hlt
sbb
outsl
imul
dec
mov
add
das
clc
and
repz
pop
test
or
add
and
pop
add
movsb
jp
xlat
inc
mov
adc
fisttpll
sub
and
add
jne
push
cmp
int
popa
arpl
push
aam
push
pop
mov
add
out
or
dec
test
mov
clc
dec
mov
inc
push
dec
test
enter
jp
add
mov
push
mov
jmp
pusha
sti
dec
mov
jae
mov
pop
xchg
test
mov
sbb
pop
popf
bound
mov
mov
rorb
rcrb
jecxz
enter
rclb
loope
mov
fs
loopne
loop
push
dec
dec
pop
jb
outsl
or
adc
push
ret
push
pop
aad
jbe
or
hlt
inc
andl
and
in
adc
and
loop
sbb
lret
and
add
test
aam
inc
out
incb
and
ljmp
lods
add
pop
subb
mov
add
adc
sub
or
aad
cmpsb
push
test
test
cmp
add
push
cmp
fsub
or
insb
daa
sub
and
sbb
lods
cmp
js
daa
imul
xor
sub
add
in
jmp
sub
ljmp
out
dec
pop
sub
dec
cli
add
or
ret
cld
roll
sahf
push
sub
mov
in
mov
enter
in
xor
loopne
push
pop
adc
cmp
fwait
xor
hlt
ret
mov
jl
mov
fisubl
or
jecxz
popf
dec
mov
imul
mov
or
jns
push
pusha
cmpsb
loop
and
jo
mov
rcr
in
and
add
pop
stc
pop
jb
nop
je
push
mov
loopne
mov
pop
rclb
test
add
pushf
dec
add
lds
mov
adc
jns
mov
divb
mov
mov
loopne
mov
pop
cmp
add
movb
lret
mov
pop
sub
into
aas
mov
addb
jbe
ds
pop
add
jecxz
jbe
in
add
movb
movsb
test
add
jns
ret
xor
jecxz
je
dec
inc
or
rolb
mov
cmp
orb
rcrb
mov
jo
jnp
loopne
cltd
call
and
xchg
sbb
jne
inc
xchg
inc
mov
lods
sub
ja
mov
fs
ret
pop
sahf
loope
lea
jl
js
dec
mov
movsb
fs
les
xchg
into
rorb
jecxz
cmp
mov
test
test
jge
push
mov
dec
add
rclb
jecxz
loope
test
pcmpeqw
sub
xchg
push
test
and
jae
insb
jo
in
les
and
adc
jbe
dec
insb
cmpsb
sub
lods
fs
or
jp
pop
jl
jns
movsb
sbb
pop
cmc
rcl
sub
sub
jl
pusha
jle
lods
sbb
pop
push
insb
xchg
data16
sbb
dec
pop
add
outsb
xchg
shll
add
aaa
out
test
stos
les
and
in
sub
dec
movsb
clc
cmp
mov
adc
add
or
and
adc
sbb
mov
mov
jmp
faddl
add
adc
xchg
pop
in
xchg
lods
inc
loop
jne
jne
and
popa
pop
push
lock
and
daa
add
and
push
repz
mov
ficompl
push
xor
sbbl
lea
inc
mov
inc
stos
dec
fcoml
rcll
and
or
mov
inc
add
das
xchg
sbb
mov
daa
enter
inc
sbb
dec
dec
iret
outsl
jno
test
inc
ds
jne
cmp
mov
cmp
loope
ret
pushf
push
aas
arpl
mov
lods
xlat
inc
imul
mov
mov
fists
mov
inc
hlt
push
cmp
sbb
dec
adc
or
pop
mov
ds
mov
add
cwtl
pop
cmp
jbe
das
out
cs
aaa
mov
add
fstps
jae
lahf
and
push
adc
and
sub
int3
loopne
xor
sbb
inc
cmpsb
sbb
ror
jnp
fiadds
sub
pop
cmpsl
in
mov
pop
add
mov
mov
mov
bound
sbb
addr16
sbb
or
inc
or
cmpsb
dec
add
xlat
cmp
pop
xor
lock
sarl
fsubl
aam
pop
push
dec
shlb
push
fnsave
xchg
mov
xchg
jp
pop
js
arpl
fucomip
mov
or
mov
fdiv
add
inc
lods
scas
xor
jnp
cltd
cmp
subl
cli
adc
loopne
pop
add
sbbb
pop
cmp
add
sahf
push
sbb
adc
test
addr16
imul
stos
popa
and
add
push
pop
mov
rclb
xchg
xchg
js
dec
dec
je
mov
mov
mov
call
loope
rcrl
adc
xchg
lea
loope
and
mov
mov
mov
shlb
xchg
int
push
jne
aam
or
adc
arpl
popa
lock
adc
rcrl
js
mov
cmp
lock
clc
jge
in
cmpsb
aam
cltd
test
sub
and
mov
adc
sbb
push
cmp
rcrb
rcll
pop
repnz
rcrl
adc
xchg
cmp
xor
pop
xor
and
cmpb
fisubrs
loop
mov
loope
add
shlb
add
popf
dec
jg
inc
push
push
pop
push
pusha
daa
and
pop
inc
and
bound
sub
cmpsb
cmpsl
into
or
clc
pop
mov
cld
xchg
pop
test
pusha
add
or
das
cwtl
adc
mov
mov
xor
stos
sbb
mov
and
sub
and
test
pop
les
sbb
sbb
imul
adc
sbb
mov
int3
sti
or
js
or
push
fnstenv
sub
iret
xchg
and
leave
jg
mov
cmp
data16
inc
or
fnstsw
xlat
and
sub
addb
loop
mov
push
daa
and
mov
into
in
jo
lea
daa
ss
and
dec
rclb
inc
push
pop
sarl
fnstcw
call
xchg
es
das
sub
inc
int
add
adc
hlt
inc
add
cs
popf
lds
loope
rcrb
push
jbe
cmpsl
leave
add
add
lahf
in
cwtl
shlb
pop
es
imulb
aas
sahf
jmp
inc
in
mov
mov
nop
adc
jns
jne
jo
lock
out
stos
xor
xor
sub
mov
inc
add
add
sbb
pop
psubsw
mov
inc
scas
cmpsb
fs
add
daa
call
add
test
pushf
mov
hlt
pusha
insb
dec
jp
push
enter
adc
jge
xchg
bnd
mov
pop
sub
mov
sti
mov
adcb
xchg
push
and
bound
and
shll
dec
inc
cli
jo
arpl
out
fsubr
cmp
push
loope
shr
ss
inc
es
out
add
mov
sbb
pop
mov
sbb
shr
jl
push
aam
xchg
aam
sarb
dec
lods
push
pop
push
or
enter
in
popf
cld
or
outsl
mov
paddusb
mov
scas
sub
inc
nop
ret
pop
pop
jne
and
lea
popf
dec
and
sub
inc
repnz
add
mov
xor
das
fstps
iret
mov
mov
es
xchg
add
inc
add
addr16
cld
mov
lret
out
outsl
pusha
jmp
imul
ljmp
pop
or
jge
push
cmpsl
es
ds
dec
or
nop
mov
add
and
mov
cwtl
in
je
pop
pop
aam
pop
or
xlat
dec
ds
loope
ret
push
mov
fdivrl
mov
ss
ds
gs
test
mov
xor
aam
insl
addl
das
int3
and
cltd
add
dec
add
dec
jecxz
xchg
cmp
add
insb
mov
icebp
outsb
jle
movsb
in
inc
mov
push
je
or
in
sub
test
mov
add
sub
jecxz
adc
cmp
popa
adc
or
sahf
shrb
lods
cmc
dec
les
inc
jmp
sub
out
inc
mov
jno
psrld
addl
lcall
pop
scas
aaa
test
push
add
add
jns
ds
push
pop
outsl
in
add
add
xchg
in
mov
add
paddsw
jae
mov
xchg
lret
test
add
mov
cmp
pop
xlat
nop
jnp
lea
imul
add
cli
sub
inc
ljmp
add
mov
fists
cmp
addr16
xchg
cwtl
test
test
fadds
add
sub
lock
fs
rclb
and
daa
add
xor
cmovle
pushf
aam
ret
xchg
adc
ds
cmc
and
xor
adc
or
push
xchg
sub
daa
in
scas
inc
inc
inc
subl
xchg
jae
or
add
add
sbbl
imul
lods
movsl
inc
add
incl
rcrb
repnz
add
inc
or
pop
sub
pop
inc
add
mov
ret
adc
outsb
insl
call
shrl
push
sarl
and
lods
pop
sbb
loopne
addl
mov
cmpsb
jmp
jecxz
jns
or
and
outsb
ficompl
popa
pop
lcall
sbb
nop
aad
add
out
pop
mov
xchg
xlat
repz
jmp
icebp
imul
daa
mov
xlat
enter
or
aam
mov
xor
cmp
pop
pop
push
testl
adc
testb
mov
cli
rclb
fistpll
xor
fidivs
mov
xchg
pop
push
cli
les
adc
mov
add
inc
xchg
dec
sbb
mov
jne
sbb
mov
sbb
jno
pop
insl
popf
push
mov
dec
jle
icebp
push
cmp
cmpb
mov
daa
inc
mov
fnstsw
inc
inc
push
orb
sbb
popa
xchg
adc
lahf
loop
add
push
add
xor
popa
es
in
inc
fadds
shll
and
push
incb
daa
js
cmp
sbb
cs
xor
lock
sub
and
adc
add
push
mov
sbb
push
push
lahf
push
add
iret
xchg
sar
dec
pop
aad
sbb
add
dec
adc
and
add
pop
cwtl
inc
xchg
subb
pop
fcoms
cmc
push
cmp
pop
and
mov
outsb
or
pop
cld
ret
cmp
xchg
add
sbb
jae
or
loop
mov
push
repnz
lods
jnp
aaa
add
outsb
jmp
test
mov
bnd
sbb
add
aam
dec
jmp
or
push
sub
sbb
outsb
popa
pop
push
dec
dec
xchg
add
ficoml
jo
les
sbb
cmp
add
cmpsb
cld
or
sbb
imul
mov
pop
mov
fisttpl
jb
sbb
jbe
mov
js
add
arpl
inc
mov
aaa
movsb
dec
pop
rolb
sbb
icebp
mov
into
xchg
jecxz
movsl
jge
adc
pop
mov
dec
add
mov
push
fsubl
jle
dec
and
int
adc
mov
and
sarl
loop
inc
les
loopne
cmp
xchg
loop
jmp
js
push
icebp
divl
mov
xchg
add
jle
and
add
sub
movsl
les
add
enter
xor
sub
inc
push
lods
mov
scas
inc
lcall
pop
hlt
and
subl
pop
add
clc
cli
dec
mov
cmp
xchg
mov
adc
shrl
inc
cltd
mov
pop
inc
pop
lea
xorb
stos
dec
inc
inc
add
imul
shld
adc
push
ljmp
add
nop
mov
mov
jg
pop
xor
test
add
shrb
in
imul
add
mov
mov
xchg
mov
cmpsl
lea
mov
push
sbb
aas
int3
ficoms
sbb
push
sub
cmp
xchg
mov
out
mov
pop
dec
movsl
std
jb
xor
mov
mov
xchg
lock
fidivs
dec
pop
push
and
aam
mov
mov
out
popa
sub
dec
add
xchg
int3
and
dec
add
shl
or
jns
loope
push
ss
shl
xchg
or
xor
sub
jmp
pop
out
pop
lods
add
dec
or
subb
sbb
pusha
in
xchg
add
cmpl
incb
pop
test
jns
idivb
xchg
mov
cmp
add
mov
sub
test
ja
jno
and
add
adc
push
rclb
add
insl
aaa
mov
cmp
dec
je
jnp
add
adc
push
mov
cltd
add
inc
stc
dec
push
mov
jbe
add
shlb
sbb
scas
mov
inc
test
movswl
dec
add
clc
std
xchg
es
and
int3
leave
call
rclb
jnp
out
add
or
or
xor
mov
pop
jns
xchg
sbbb
mov
jl
add
test
rclb
add
or
push
mov
push
dec
add
jg
sub
xchg
pop
lea
sbb
and
std
sarb
mov
mov
shlb
lahf
add
mov
add
inc
mov
aad
shl
mov
leave
pop
int3
cmc
inc
insl
cmpb
cli
cmp
mov
jle
std
stc
push
stc
je
xor
add
enter
popf
out
loop
shld
shlb
cmpsl
mov
and
loope
pop
inc
add
inc
add
add
dec
repz
cmp
hlt
test
pop
mov
push
lock
stos
in
push
pop
mov
add
xor
pop
sbb
ret
cld
and
and
rclb
cmp
mov
xor
push
lret
cmpsl
insl
scas
out
aaa
or
lcall
filds
scas
add
jne
mov
push
mov
xlat
and
xor
call
add
sahf
mov
call
mov
sub
fists
lahf
clc
in
mov
pop
ljmp
mov
cltd
dec
ds
clc
add
dec
lcall
adc
or
add
sub
add
jmp
lock
insb
jge
dec
in
out
fbstp
pop
add
sti
push
cld
pop
test
in
aam
pusha
add
test
add
arpl
mov
pop
fisttpll
outsl
shlb
mov
icebp
add
adc
or
test
sub
pop
sbb
inc
mov
and
add
or
aad
dec
popf
lahf
mov
or
outsb
add
and
rcr
rcrl
loopne
xor
fisubrl
sbb
sub
cmpsl
mov
add
mov
adc
xor
cmpsb
and
add
js
xor
aad
shrl
add
add
xor
push
sbb
add
and
je
mov
out
insb
int
add
jmp
mov
add
mov
pop
mov
lahf
sub
jae
pop
insb
push
mov
or
imul
dec
add
out
add
outsb
jmp
stos
add
loopne
pop
add
jmp
insl
enter
add
pop
mov
and
push
add
mov
sbb
out
addl
popa
daa
stc
fldcw
rolb
jmp
inc
imul
or
mov
and
mov
cmpsl
leave
inc
cmp
js
jl
add
popl
sub
sub
movsb
dec
ja
pop
push
out
mov
xchg
xor
fadd
jp
jmp
cmpsl
and
cwtl
add
xor
loop
adcb
sarb
jne
sbbl
fidivl
iret
jo
jmp
dec
addr16
into
cmc
int3
cmp
popf
xor
aas
inc
mov
ja
sub
add
xchg
dec
out
push
mov
sahf
in
xchg
or
add
and
cmp
add
cmc
or
in
divl
pop
xchg
pop
jbe
cmpb
add
pop
subb
test
add
das
cli
mov
sub
or
xlat
test
sbb
or
push
pop
ret
push
orl
fwait
xchg
inc
fistl
popf
je
jge
ja
dec
loop
pop
jne
xor
loope
xchg
stc
femms
test
sahf
push
pop
sub
xchg
jae
adc
repnz
sarl
cli
push
mov
add
psubsw
inc
and
loope
pusha
mov
stc
xor
aad
pop
mov
xchg
mov
sub
mov
add
and
jo
jmp
enter
or
lahf
rol
rcrl
xchg
adc
and
fstpt
loopne
xor
shlb
and
fcos
cmpsb
xor
cmp
sbb
mov
lds
subl
shll
das
jmp
push
push
nop
cmp
repz
lret
popf
adc
stos
hlt
sti
add
push
add
lds
out
icebp
movntq
out
aam
add
scas
push
rorb
std
or
lea
dec
sbb
pop
call
nop
jno
jo
shll
mov
cli
outsl
fisttpll
rolb
mov
roll
sub
shll
sbb
mov
or
sub
sbb
add
cwtl
mov
shll
mov
or
pop
loop
rcl
adc
and
add
rclb
loope
pushf
jae
out
sub
mov
dec
lods
ret
xchg
xchg
lock
jle
insl
xchg
mulb
test
enter
lahf
xchg
dec
inc
sbb
and
mov
add
cli
adc
mov
lahf
sti
dec
imull
daa
fbld
add
jecxz
sbb
inc
js
mov
rorl
and
pop
je
mov
fisttps
clc
flds
lock
add
push
jnp
scas
add
add
and
mov
test
mov
shlb
inc
sub
add
sti
lds
fs
jb
shll
clc
add
or
out
adc
sub
aam
mov
sti
fildll
loope
mov
movsb
jne
pop
lret
out
mov
not
jmp
sub
pop
in
outsl
inc
jl
dec
imul
fwait
jne
or
aad
fmull
mov
dec
xchg
fcomps
test
rcrl
add
push
jp
int
call
dec
sub
add
jne
fisttps
jl
scas
idivl
cmc
test
cmpsb
inc
xor
movsb
xor
movsb
rolb
arpl
pop
sub
movsl
stos
les
outsb
imul
test
aas
push
xchg
mov
jno
jmp
les
xchg
aas
mov
sbb
cmp
les
ss
inc
add
sar
dec
add
xor
sbb
or
fxch
cld
inc
sbb
cmp
or
outsl
xor
or
or
add
adcb
push
sbb
lahf
pop
cmp
cltd
roll
fs
sbb
std
imul
fiadds
sti
mov
arpl
rorl
sub
out
mov
mov
int
add
rclb
inc
pop
push
sahf
pop
sarb
sarb
and
std
push
cmpsb
mov
pop
xor
mov
movsb
push
adc
ret
add
jecxz
or
lock
sbb
jns
andb
orb
leave
stc
add
imul
test
add
add
inc
dec
add
das
xor
lret
shll
sbb
pop
lock
or
add
jno
enter
mov
xchg
push
cltd
daa
xchg
in
lods
add
and
adc
ficomps
setns
sahf
cmpsb
das
mov
mov
sbb
mov
cmpsb
jb,pt
mov
cld
add
adc
fildl
fsts
mov
and
clc
call
mov
sbb
sbb
in
mov
cmp
in
add
ss
les
movsl
mov
add
daa
jl
cmpsb
cmp
aam
scas
sbb
ds
cld
add
hlt
aad
jmp
or
add
aaa
lods
dec
pop
sbb
push
inc
enter
jb
cmp
or
or
mov
test
pop
cwtl
shll
cmp
mov
scas
and
cmp
cmp
rcrb
add
inc
jg
push
movsb
sti
dec
enter
push
sbb
mov
pop
mov
add
sarl
adc
cld
sbb
adc
scas
inc
fs
pop
push
push
cmp
sub
add
adc
addr16
sub
jne
lea
or
add
pop
mov
add
orb
dec
sbb
or
testb
and
lret
inc
pop
dec
inc
add
addb
xchg
add
xor
cwtl
or
inc
orl
add
loop
adc
aam
pop
int3
pop
hlt
mov
mov
mov
push
popf
bound
push
sub
rolb
int3
sbb
jp
or
ljmp
je
add
pop
insl
movsl
mov
mov
cmp
enter
imul
cmp
push
add
lahf
mov
adc
sub
cs
push
test
adc
push
ret
movsl
dec
xorl
sbb
pop
ljmp
add
push
xchg
pop
repnz
add
fdivs
sub
pop
add
sbb
ret
test
ljmp
pop
push
mov
in
mov
inc
dec
inc
add
cli
push
add
inc
pop
push
add
js
mov
jne
add
jno
lcall
adc
xlat
adc
xor
pusha
cmp
enter
mov
fadd
push
and
sbb
arpl
sbbb
or
jmp
mov
in
xchg
and
scas
jae
push
add
sbb
lods
pop
add
dec
xchg
loopne
inc
dec
jns
xchg
loop
lea
or
ss
xorb
cli
mov
ds
cmp
add
aad
xor
and
jbe
adc
pop
adc
mov
lret
sub
aad
add
nop
push
mov
xchg
js
sarb
lods
add
push
cmp
cmovo
jle
jnp
dec
cld
inc
or
js
sbbl
aas
jl
call
lret
sub
js
push
into
mov
add
ss
std
cmp
ret
adc
xchg
or
mov
mov
add
inc
add
mov
in
cmp
adcb
test
add
pop
jbe
nop
data16
add
shlb
cs
xchg
xor
test
or
inc
jmp
jge
nop
adc
adc
and
testb
xchg
fcomps
add
mov
es
int3
lret
inc
push
cli
inc
sub
xchg
ret
ds
cltd
sbb
stos
invd
or
xchg
push
cmp
mov
enter
pop
fnstsw
cmp
ret
or
out
lcall
mov
sub
and
add
mov
push
mov
add
xor
sti
lods
add
sub
popa
fiadds
sahf
jge
les
dec
je
mov
jg
mov
xor
fmulp
add
test
aaa
add
jb
icebp
mov
pop
or
dec
dec
push
xchg
add
loopew
movsl
cmpsl
add
push
dec
test
push
pop
nop
add
mov
dec
shll
pop
mov
out
xchg
inc
cmpb
inc
add
mov
add
xchg
mov
aaa
orl
insb
cmc
inc
in
shll
push
jo
adc
in
lret
xor
and
add
mov
mov
inc
inc
icebp
pushf
fstl
jecxz
cmp
insb
clc
or
jge
sahf
movsb
add
dec
jmp
xchg
pop
cwtl
scas
rolb
mov
push
jg
sbb
sbb
adc
int
sbb
jmp
dec
xor
mov
iret
lret
cwtl
mov
ds
add
xchg
jecxz
rol
js,pn
jo
or
movsl
push
xor
add
mov
stc
movl
mov
pusha
leave
adc
lock
dec
loop
ret
inc
adc
jecxz
jle
inc
xor
mov
pop
lret
stc
rcrb
pop
cs
rcr
aad
xor
adc
or
test
lret
addr16
add
jno
lock
adc
js
and
repz
jl
dec
outsb
mov
xchg
das
pushf
test
xor
push
ss
pusha
out
cli
in
mov
and
xlat
jb
fdivrl
jecxz
xchg
pop
ja
sub
jbe
or
pop
hlt
mov
sub
and
pusha
mov
rcrb
sub
dec
addr16
sub
out
mov
mov
movsb
cmp
out
pop
add
jmp
sub
shrb
fsin
rolb
xchg
pop
mov
push
hlt
or
add
dec
sbb
in
cmp
or
ret
lcall
xchg
sbb
popa
sbb
lods
flds
sub
xchg
stos
dec
adcl
push
push
ss
add
sbb
das
jne
push
ds
dec
cmp
je
cmpsl
sub
inc
mov
clc
add
dec
in
aaa
cltd
cmovb
jl
add
stos
push
loope
ds
out
call
psadbw
push
lea
sahf
in
xor
cmpsl
add
xchg
inc
cmp
add
ds
iret
or
xor
lods
in
jmp
push
mov
out
push
adc
or
aaa
adc
mov
and
mov
mov
sub
adc
frstor
pusha
test
inc
sbb
dec
add
hlt
mov
mov
dec
sbb
and
sub
and
or
inc
test
ret
jne
add
mov
dec
dec
cs
add
mov
fstps
mov
ds
push
push
xchg
negl
mov
xor
ficoml
test
ds
sbb
cltd
arpl
ret
insb
xchg
insl
js
xorb
inc
addb
in
add
test
sbb
push
mov
popa
mov
adc
leave
add
sub
rorb
adc
or
and
jbe
stos
loope
jecxz
mov
mov
testl
repnz
add
inc
mov
outsl
mov
ds
and
in
cmp
add
dec
icebp
xchg
mov
pushf
test
and
jge
lcall
add
lret
push
pop
inc
xchg
or
jle
addl
jmp
xchg
cmc
dec
xor
pop
or
push
incb
pop
push
into
stos
cmp
aam
dec
hlt
xchg
aaa
enter
push
jl
xor
push
psubq
mov
icebp
js
mov
ljmp
int3
orl
nop
cmp
in
icebp
lock
adc
mov
daa
ret
mov
add
addr16
cwtl
push
test
xor
mov
push
jnp
xchg
daa
add
push
je
cmp
loopne
clc
jns
mov
or
iret
adc
pop
call
xchg
int3
sub
sbbb
jl
aaa
adc
stos
inc
fcomip
fisttpll
mov
rclb
add
jge
mov
int
hlt
and
push
outsb
xlat
adcl
sub
push
popa
mov
rolb
rorb
mov
loopne
push
xor
adc
adcb
mov
jle
pop
adc
js
sbb
fnstsw
les
mov
push
pop
jne
pop
mov
mov
popw
xchg
out
add
mov
lock
or
cmovno
popl
jnp
out
popa
xchg
mov
or
pop
pushf
mov
imul
inc
dec
and
out
add
sub
xchg
xchg
xchg
xlat
add
jbe
in
loopne
rcrb
mov
in
movsb
pop
xor
sbb
pop
push
dec
ret
adc
jno
aas
rcrl
add
adc
cmp
or
rolb
sub
out
cltd
or
adc
sbb
clc
sub
adc
pop
test
outsl
cmp
jno
loope
cmpb
push
bound
pop
lret
sahf
pushf
inc
jns
gs
adc
mov
jp
jmp
fbstp
lret
jg
jb
push
stc
rorb
inc
cmp
push
cmpsl
rep
lods
push
mov
imul
xor
movsl
lods
sbb
mov
repnz
cli
add
jp
push
flds
or
pop
repnz
es
mov
pusha
lret
xor
jo
insb
mull
out
add
push
inc
call
add
ss
adc
add
mov
test
jl
add
cltd
stos
or
xchg
aas
test
bswap
daa
int3
sub
enter
mov
enter
cs
and
or
mov
mov
nop
add
or
inc
push
dec
jae
pop
mov
pop
and
adc
inc
or
adc
adcb
and
nop
push
test
push
dec
lahf
inc
add
and
push
and
and
adc
inc
sub
xchg
outsb
imul
adcb
and
and
adc
mov
push
pop
push
lods
mov
xchg
hlt
inc
add
out
fcompl
pop
jle
mov
shrl
sbb
cli
sbb
aam
js
push
sub
cmp
mov
xor
addr16
adc
gs
cli
subb
add
leave
cs
pop
add
loope
imul
fistpl
mov
sbb
add
popf
mov
xchg
inc
lock
adc
push
add
es
lea
mov
pop
sub
scas
std
xor
push
jno
jg
lods
loopne
outsb
cs
lret
add
je
test
sti
hlt
loope
add
ljmp
xchg
add
shlb
push
clc
dec
jno
add
or
and
lahf
push
jp
addb
jne
adc
sbb
jns
mov
call
stos
lret
sub
outsl
xor
add
jle
dec
jg
bnd
pop
fcoms
or
aas
or
add
fimuls
outsl
dec
leave
sbb
add
push
int3
scas
mov
lcall
push
sub
inc
xchg
bound
sub
mov
add
pop
xor
sbb
pop
sahf
cmpb
out
lahf
and
jns
inc
jns
push
arpl
cltd
inc
mov
shlb
xor
dec
add
add
sub
push
mov
mov
cmpb
cld
jne
ja
js
nop
add
into
add
es
jmp
pusha
xchg
fildl
int
cli
adc
mov
push
cmp
inc
pop
jge
rolb
into
mov
outsl
fbstp
xchg
and
shll
xor
sbb
and
test
cmpsb
push
stos
mov
jno
test
mov
and
add
cmpl
mov
ret
pop
mov
movsb
roll
ret
rclb
stos
push
repz
xor
dec
push
fmul
fistpll
js
xchg
scas
add
cltd
add
cs
add
jp
dec
and
add
jmp
cwtl
add
sbb
adc
addl
mov
sbb
pop
mov
or
or
add
iret
in
add
test
ja
jb
test
addr16
lds
ret
mov
loope
pop
andl
mov
pop
movsb
add
cmp
repz
orl
aas
push
push
mov
daa
sarb
jne
xorl
add
pusha
ret
jns
out
je
xorps
js
sarb
dec
in
jb
cld
daa
test
add
xchg
or
push
xor
js
test
loopne
out
add
aas
jecxz
cwtl
mov
fadd
mov
xor
mov
shlb
adc
test
and
cmp
mov
push
add
xor
jp
jle
ljmp
push
add
mov
or
std
idivb
jno
add
xor
rol
adc
aad
add
rcll
mov
lcall
lahf
cmp
rorb
insl
scas
pop
add
movsb
adc
add
cwtl
aad
stos
xchg
xor
pop
jmp
and
rolb
add
push
cmp
adc
orb
adc
rcrl
cmp
test
shl
dec
ret
add
gs
sti
out
subb
lret
ljmp
pop
into
out
adc
lock
push
xor
sbb
push
fwait
cwtl
pop
dec
mov
gs
test
dec
mov
inc
mov
xchg
push
pop
pop
pop
and
add
add
aam
mov
imul
push
add
shll
lahf
mov
pop
or
mov
pop
cmc
outsl
add
test
jae
add
rcll
mov
jp
jg
mov
dec
add
pop
add
cmp
nop
push
jle
sahf
add
in
or
icebp
fsubrp
pop
pop
adc
aaa
sub
lret
pop
add
les
loop
fmull
pop
add
idiv
imul
lds
test
jbe
test
outsl
mov
int3
sub
adcb
loop
scas
je
add
popf
xorb
add
enter
test
fisubrl
dec
mov
pop
push
sti
rolb
pop
lcall
les
fidivl
pop
push
sbb
pop
out
inc
add
xor
pop
cmp
repz
outsl
mov
add
or
xchg
jp
out
lock
pop
adc
mov
push
push
gs
dec
rorb
push
lcall
jge
add
and
cmp
push
shl
and
jae
adc
cs
sbb
xor
jecxz
jbe
das
out
je
add
push
add
pop
mov
movsb
add
mov
orl
jns
xchg
push
add
sub
ja
and
pop
scas
in
leave
in
jo
add
int
mov
and
mov
out
push
mov
cmpsl
outsl
pusha
add
ficoml
leave
push
imul
aad
mov
sub
mov
shrl
pop
sbb
adc
xlat
inc
xor
fs
fcom
jl
mov
add
xlat
idivb
mov
mov
jns
sbb
fcomps
mov
testb
cmp
lea
jbe
and
rorl
cld
inc
sahf
loop
jle
adc
mov
sbb
flds
shrb
cmpsl
inc
loopne
addb
or
dec
sub
stc
jp
add
mov
adc
pop
negl
dec
ja
in
xor
addr16
and
loopne
add
test
mov
sbbl
or
mov
inc
add
jo
push
mov
mov
ds
pop
and
ret
add
cmovb
in
push
xchg
adc
push
mov
mov
jo
add
pusha
mov
dec
mov
add
jae
cmc
int3
push
xor
insl
and
cmp
fs
cli
mov
ja
pusha
sub
inc
jge
jae
gs
aas
inc
popf
dec
frstor
fdivl
add
sbb
sub
mov
lret
pop
xchg
pusha
cs
or
movsb
add
push
mov
xor
mov
scas
ds
cmpsb
fnsave
sub
push
dec
aad
stos
and
jecxz
movl
jg
dec
cli
add
xor
jecxz
add
cmpsb
ss
dec
dec
in
cmp
fiadds
xchg
cld
cmp
adc
sbb
pop
mov
in
out
xchg
cmp
popa
mov
lahf
outsl
add
cmp
or
mov
in
xchg
mov
pop
jp
inc
xor
out
pop
in
add
lods
int3
adc
shlb
cmp
or
mov
ljmp
add
inc
mul
cld
xchg
xchg
mov
cmp
inc
cmpsb
add
or
push
arpl
xor
pop
dec
add
stos
pushf
mov
cmp
add
fcompl
in
add
lea
sbb
cwtl
ljmp
dec
mov
stc
inc
out
push
subb
push
add
into
sub
push
xchg
roll
jmp
insl
pop
sbb
add
jo
mov
add
dec
mov
pand
push
dec
pop
pop
lock
xor
inc
add
pop
and
ljmp
cmp
stc
mov
mov
add
xchg
addr16
and
adc
jp
cwtl
lods
or
sub
pop
mov
std
add
hlt
sub
jnp
jne
add
in
xor
xchg
enter
adc
jg
fstpt
mov
push
pop
subl
add
add
in
rol
movsb
ret
lret
sbbb
rorb
jmp
mov
fidivl
js
xlat
icebp
inc
adc
jno
add
aas
addb
nop
pop
cmp
in
add
ja
lds
lcall
inc
fwait
jns
lret
and
in
add
mov
cmpxchg
loopne
cmc
push
lret
add
adc
sub
call
or
shrb
icebp
mov
lds
iret
adc
stos
add
sbb
mov
mov
pushf
sub
mov
mov
mov
cmp
decl
jnp
push
int
mov
add
add
lds
imul
in
jmp
add
mov
or
pusha
inc
add
and
aam
cld
repz
enter
xchg
sbb
popa
cld
nop
xor
jo
push
mov
add
pop
into
sub
xor
pusha
and
xor
std
jns
cmp
lods
or
xchg
aam
pop
push
push
mov
mov
call
out
rclb
xchg
xor
sbb
mov
or
jp
fnstcw
add
jle
add
iret
mov
cmp
sbb
pop
add
pandn
or
add
adc
xchg
or
jge,pn
adc
dec
mov
mov
stc
loopne
sbb
pop
pushf
movsb
or
mov
cmp
or
addr16
push
insb
sub
mul
int3
add
orl
pop
lcall
push
or
inc
stos
dec
popa
sbb
inc
loopne
ljmp
mov
loopne
sbb
test
mov
adc
push
mov
loop
daa
push
pushf
loopne
les
sbb
pop
roll
pop
fstpt
lea
cmp
stc
pop
addb
cwtl
gs
or
inc
add
ja
sbb
and
mov
movsb
add
in
or
ss
add
pushf
stos
pop
loopne
rcrb
add
test
ss
imul
sub
cmpsl
dec
ds
push
shll
repnz
xsavec
mov
idivb
jb
rolb
inc
popa
mov
mov
jge
add
pop
push
aas
shlb
jmp
js
add
clc
jne
pop
push
dec
stos
adc
xor
add
or
lret
add
jae
add
pop
mov
or
mov
out
ja
jp
mov
lret
mov
inc
or
and
push
dec
insb
cmc
add
xchg
call
push
adc
push
jg
sub
mov
jl
shlb
rcl
into
cs
push
cmp
ja
enter
rcrl
loopne
mov
push
mov
rclb
push
mov
pusha
in
mov
push
sub
cs
inc
inc
or
push
iret
xchg
and
jnp
jge
aas
pop
cld
stos
movsb
push
pop
shl
mov
cmp
cmpsl
pop
dec
push
roll
mov
shlb
cmpsb
mov
and
outsb
shlb
std
movsb
pop
cltd
sbb
imul
sbb
adc
jbe
inc
add
mov
pop
xchg
jne
je
lea
jp
mov
jbe
hlt
add
fcomip
insl
or
leave
dec
jl
hlt
adc
enter
mov
or
jbe
inc
xor
pop
or
jge
xorb
mov
out
cmp
dec
dec
cmp
push
add
inc
mov
leave
adc
mov
imul
fcmovb
mov
out
cwtl
movsb
add
pop
mov
pop
shll
mov
andb
push
or
or
add
or
lods
jmp
cwtl
inc
xor
mov
xchg
sti
in
xchg
nop
inc
add
loopne
mov
sbb
ror
pop
mov
add
cmp
movsl
inc
pop
addr16
pop
xchg
ret
mov
push
aaa
pop
les
nop
inc
lds
xor
xlat
fwait
mov
dec
lods
subb
add
outsl
frstor
inc
fsub
add
push
popa
add
push
mov
or
movsb
incb
scas
add
lret
and
dec
iret
push
sti
push
inc
idivb
add
mov
fs
sahf
in
popf
clc
icebp
push
mov
enter
xlat
int
stos
push
aam
lock
pop
jp
ss
div
xchg
mov
push
insl
add
cmp
insb
jnp
inc
add
rclb
mov
rcll
roll
hlt
push
push
fsubr
and
clc
pop
xchg
add
mov
aam
add
pop
add
lods
aas
xor
cmp
cmp
loop
pushf
fucomip
xchg
add
lret
or
sub
subl
shlb
int3
cmp
rcr
add
out
outsl
mov
sti
clc
and
sbbb
aaa
cmpsb
jno
in
dec
roll
or
xchg
jnp
xor
jo
je
sbb
pop
mov
xor
add
add
cmp
ljmp
jb
call
dec
push
pop
mov
add
add
imull
push
mov
pop
or
and
shlb
sub
std
insb
imul
add
add
pop
jge
jle
aad
cmp
pop
adc
cmpsl
mov
stc
lret
roll
mov
inc
add
fs
add
mov
rolb
test
cmp
sbb
jae
jge
outsb
push
jno
push
int3
rorb
ja
popa
cmp
imul
sbb
sub
cli
ret
or
jle
cltd
jmp
sbb
add
mov
into
in
xchg
pushf
pusha
outsl
inc
stos
lods
ss
dec
test
lock
pusha
add
push
add
xchg
xchg
add
into
push
add
je
mov
in
and
inc
test
stos
in
jp
adcl
jno
add
dec
or
push
call
or
jmp
cmpsl
bound
jecxz
pop
xchg
push
pop
aad
push
add
pop
xchg
inc
inc
fsub
mov
cmc
or
cmpsl
mov
jp
and
test
and
test
sub
xchg
pushf
jne
sbb
add
bound
pop
stos
add
lea
dec
xor
add
or
loopne
fwait
jmp
push
cmc
pop
jns
pop
rdmsr
jge
xchg
xchg
movups
cs
adc
push
pop
add
mov
pop
addb
mov
and
les
addr16
leave
rcrl
inc
xor
out
stc
inc
outsb
add
lahf
inc
jl
sbb
mov
inc
mov
add
add
fnsave
add
out
jmp
jbe
cmp
ficompl
adc
icebp
jle
adcb
mov
jl
mov
sbb
jle
ljmp
push
sbb
cmp
lret
dec
push
loopne
cmp
mov
lcall
or
pop
in
filds
add
pop
jb
and
xor
stos
sbb
or
push
dec
sti
inc
xchg
mov
push
inc
pop
pop
andb
mov
cltd
push
mov
movsl
add
addr16
add
lcall
or
enter
lock
sbb
or
pop
out
jne
adc
in
mov
add
fildll
call
hlt
cltd
pop
fildl
push
cmp
add
or
cmp
cli
daa
rclb
add
clc
add
xchg
adc
adc
add
cmp
sar
ret
int3
rcll
inc
sarl
add
ja
shlb
or
xor
jno
js
cmp
xchg
hlt
adc
cmp
or
dec
and
hlt
add
pusha
xor
pushf
mov
jae
add
dec
inc
add
roll
ja
push
mov
pop
push
and
ret
and
push
js
mov
push
stc
add
push
lods
adc
adc
in
bound
jbe
mov
jns
cmp
insl
aas
adc
out
test
add
leave
mov
xchg
fs
test
lret
sub
das
mov
cmp
xor
and
pop
inc
sub
je
add
leave
mov
add
sahf
lahf
testb
in
xchg
jae
int3
loopne
test
call
fiadds
mov
or
pop
jmp
nop
arpl
fadds
sub
jo
push
push
subb
xlat
insl
fidivrs
test
add
mov
and
jbe
and
in
jo
xchg
mov
inc
fldl
mov
push
pusha
add
or
cld
inc
add
pop
mov
dec
jno
and
inc
loopne
outsb
mov
and
pop
mov
add
add
cmpsb
xchg
fildl
call
nop
addr16
js
add
sub
loope
mov
push
or
add
stc
mov
and
pop
xchg
or
add
adc
fistps
cltd
fdivrl
push
lock
into
jmp
sbb
sbb
out
sbb
mov
inc
add
sbb
mov
xchg
scas
stc
jne
mov
sbb
push
jecxz
inc
add
lods
push
loope
mov
mov
add
popf
dec
add
inc
stc
pop
cmp
fiaddl
mov
lea
sbb
cltd
orb
or
adc
mov
lret
push
mov
xor
nop
pop
xchg
aad
int3
pop
add
sti
inc
call
sub
mov
add
sahf
pusha
clc
lcall
test
add
push
pop
rorb
cmpsb
sub
insb
and
scas
bound
add
in
out
sub
mov
data16
add
scas
sbb
insb
ja
push
loop
shlb
cmp
dec
lock
mov
cmp
push
mov
pushf
mov
jmp
jge
pop
xchg
add
cmpsl
adcb
mov
jb
xor
add
loopne
mov
jo
cld
and
xchg
pop
dec
sarb
push
add
add
cs
adc
xor
adc
dec
nop
dec
out
add
movsl
and
pop
imul
jns
xor
icebp
pop
xor
aam
test
add
rolb
cs
xor
add
and
jge
dec
out
add
std
or
enter
and
ror
dec
sbbb
bsr
icebp
xorl
ljmp
inc
jo
or
cmp
add
call
iret
or
and
cmp
cmp
cld
xchg
pop
icebp
xor
lcall
pusha
adc
fwait
jne
cmp
pop
add
aam
aad
sub
add
ds
dec
cmp
andl
add
sbb
dec
lods
or
loopne
out
mov
pop
xchg
incl
pusha
daa
cmp
mov
int3
sbb
jae
rcl
mov
mov
inc
adc
dec
cmpsb
or
mov
sti
add
mov
jae
lods
and
xchg
mov
push
mov
xor
pop
stos
inc
into
push
add
pop
in
xlat
fdivs
cmp
jmp
mov
js
dec
add
addl
add
sub
push
je
ljmp
lds
adcl
addl
adcb
in
inc
push
jge
cmpsb
popf
jns
pop
sahf
xor
add
jl
or
mov
sbb
rcr
fsubrp
add
xlat
call
sbb
shr
in
fwait
inc
xor
mov
jbe
fimull
out
test
sub
insl
pusha
cmp
clc
enter
or
popa
push
lds
cmpsl
xchg
jecxz,pt
mov
lcall
popf
xchg
mov
and
add
clc
and
inc
pop
xor
mov
mov
std
adc
aad
sbb
inc
and
pop
arpl
add
push
les
test
fiaddl
jo
hlt
adc
xor
pusha
cmc
cmp
cmp
xor
dec
and
add
cmp
add
sub
aad
add
cli
in
jne
pop
sub
mov
aas
lahf
mov
mov
dec
push
stos
stc
clc
in
add
push
or
add
imul
hlt
push
movsb
out
cmp
add
lahf
sbb
fstpt
dec
cltd
pusha
inc
mov
mov
iret
sub
add
xor
lds
stc
cld
mov
fwait
add
dec
add
repz
sarl
add
lea
sbb
cltd
mov
mov
pushf
push
icebp
bound
push
fbld
dec
push
sbb
adcl
xchg
add
push
daa
cltd
movsl
insl
cmp
add
lods
ret
jns
movups
add
lret
or
pop
insl
mov
fs
or
add
hlt
faddl
pop
fwait
out
mov
in
xor
xlat
pop
adc
jne
add
inc
mov
push
and
sahf
sub
subl
sbb
cmp
les
jl
add
or
mov
add
subb
xor
cmpsl
sbb
fimuls
push
mov
jg
adc
int3
mov
icebp
rcrb
andl
mov
xor
jle
stos
jnp
arpl
push
pop
pop
xlat
loopne
imul
xchg
and
cld
mov
lahf
fdivrs
push
add
out
mov
inc
sub
add
or
mov
mov
add
jecxz
push
cmp
inc
xchg
loopne
mov
pop
and
cmp
mov
inc
push
fmuls
mov
pop
add
addr16
mov
add
cmp
or
addb
xlat
insb
enter
adc
lcall
mov
add
dec
pop
sbb
cltd
push
hlt
mov
inc
iret
test
mov
sbbb
cli
add
rclb
xor
push
jns
add
mov
add
dec
jae
add
dec
in
inc
imul
popf
push
inc
or
sub
jg
add
stos
insb
jae
int
aas
icebp
clc
add
or
ja
lahf
test
add
mov
in
cs
daa
cld
or
add
ljmp
pusha
sbb
pop
loop
push
add
sarb
lods
hlt
loope
test
mov
jne
inc
and
cmc
jo
loopne
enter
sub
jb
cmovae
lods
xorb
xchg
mov
xorl
iret
inc
orb
int3
jae
fistl
frstor
sub
sbbl
fildl
push
dec
sub
setns
shrl
sub
xchg
dec
aam
dec
add
inc
push
loop
cli
adc
push
stos
inc
mov
in
xor
inc
xor
xor
sarb
or
in
xor
mov
sbb
xchg
jl
push
gs
inc
mov
jle
mov
fnsave
or
push
daa
pop
jns
inc
add
jae
loope
fmull
cmp
repz
in
add
inc
add
adc
adc
daa
roll
imull
cmp
std
xchg
cwtl
stc
stos
adc
mov
mov
add
or
outsb
add
test
inc
dec
push
aaa
mov
cmp
and
loopne
mov
add
clc
pop
sti
sbb
sub
pop
push
insl
jg
adc
lods
add
imul
cmp
adcl
icebp
xor
cmc
jb
jo
sbb
jp
xlat
jo
push
inc
dec
rolb
jno
mov
add
ret
shll
push
mov
insl
xor
pop
repz
lock
add
pop
icebp
aas
and
xchg
cltd
jo
adc
xor
mov
es
jno
add
add
jb
add
mov
cwtl
push
sbb
pusha
mov
lock
outsl
iret
les
shlb
xchg
xchg
pusha
cwtl
repz
sbb
jp
push
cmp
sahf
daa
adc
popa
lock
and
and
push
mov
shrb
sub
and
add
mov
enter
int3
add
stos
rolb
xchg
cmp
not
aas
add
iret
push
push
cltd
imul
data16
sarl
sub
dec
sub
add
sbb
pop
xchg
pop
adc
dec
push
addb
data16
daa
cmpsl
adc
jl
lods
add
hlt
lea
sti
fdivrs
or
ficoms
scas
lret
inc
xor
fwait
sub
int3
lods
add
jmp
xor
std
adc
pop
pop
push
mov
daa
push
dec
mov
jle
shl
mov
xchg
jl
add
pop
jae
add
add
lahf
std
sbb
shlb
xorb
jl
inc
outsb
jg
or
rorb
addb
dec
xor
ss
jle
notb
je
pop
pop
bound
add
mov
pop
and
mov
add
sbb
mov
mov
aam
popf
stos
push
adc
pop
gs
add
add
or
shrb
dec
push
add
cmpsw
cwtl
sbb
cmp
add
sti
clc
imul
add
lahf
dec
dec
pop
orl
push
adc
pop
or
fiadds
add
pop
dec
jecxz
fcompl
aaa
shlb
shl
cmp
jle
add
sarb
das
xchg
xchg
cmp
add
int3
insb
lods
loop
cmc
xchg
adc
hlt
ss
add
loopne
inc
test
and
in
add
pop
xchg
imul
ja
loopne
dec
jb
sahf
and
int3
add
shll
cmp
gs
scas
mov
outsl
andl
mov
push
aas
lods
mov
loopne
enter
fisttps
pushf
add
lods
aam
cmc
or
ret
loope
in
sbb
add
push
sbbb
sahf
repnz
ror
dec
cld
das
imul
jmp
loopne
lock
push
fiadds
ljmp
test
inc
adc
and
cltd
jne
pushf
in
fldenv
stos
add
sub
mov
or
add
loop
dec
add
dec
adc
dec
insb
jns
mov
jp
les
lret
cmp
dec
add
adc
imul
fsubp
bound
pop
push
cmpsb
xor
sub
daa
sahf
es
or
jg
stos
adc
jle
jmp
enter
imul
int
inc
inc
and
mov
and
adcl
push
pop
cmp
test
jb
add
ljmp
das
mov
pop
dec
inc
fadd
sbb
int
add
adcl
movsl
rcr
loope
fistpl
inc
shll
daa
movb
xor
inc
cmp
in
cmp
leave
add
adc
or
push
lahf
ds
add
bound
add
push
and
mov
add
shrb
imul
mov
lea
push
subb
jge
pop
cmp
cmp
dec
orl
lock
and
pop
xchg
mov
movsl
inc
mov
repz
xchg
nop
ljmp
cs
add
jbe
push
and
or
and
test
jmp
jns
lret
inc
add
push
insb
mov
and
adc
das
sti
add
jecxz
aad
mov
aaa
mov
pushf
stc
cwtl
mov
cmp
dec
jmp
or
push
mov
adc
adcb
sbb
xchg
loop
mov
fiadds
add
mov
cmp
sahf
jae
push
rolb
aam
add
add
add
xor
push
xchg
lds
sub
pop
cwtl
rolb
aad
sbb
pushf
mov
adc
dec
xchg
ret
arpl
add
adc
sbb
ret
ljmp
daa
sti
inc
sbbb
repz
xchg
scas
mov
mov
mov
push
subb
push
aad
mov
ds
cmp
rorb
lahf
paddb
jg
cmp
cmp
pop
les
push
mov
call
in
xchg
and
adc
cmp
movsl
shlb
add
stc
repz
shlb
lock
outsb
jbe
subl
or
pop
pop
lret
aas
stc
jge
sub
add
inc
hlt
popf
jnp
scas
in
mov
add
jp
add
sti
std
lock
sahf
mov
jmp
or
pop
subb
pusha
je
or
cmp
xchg
inc
xchg
test
add
or
addr16
outsl
inc
mov
add
cli
adc
mov
or
add
js
cmp
add
and
mov
roll
popa
sbb
lahf
je
loopne,pn
mov
sub
xchg
loop
xorb
inc
stos
adc
add
or
loopne
mov
frstor
pushf
call
add
push
aaa
pop
fidivrs
pushf
jae
lret
in
add
or
mov
xchg
add
jecxz
stc
or
cli
xchg
mov
mov
dec
dec
sar
xor
ret
sub
adc
rol
cli
and
cld
hlt
mov
test
dec
pop
pop
add
add
inc
push
ja
pop
outsb
in
add
push
mov
jg
mov
jno
movb
sub
mov
cwtl
data16
pop
arpl
inc
aas
pop
and
mov
xlat
into
in
les
add
lret
add
xor
in
push
add
dec
xchg
cld
dec
jne
inc
or
sarl
insb
stos
stos
push
xor
adc
ja
add
add
bound
scas
cmpsl
mov
imul
rol
mov
loop
addr16
cld
jns
sub
mov
xorb
mov
adc
cmp
sbb
dec
and
imul
stos
and
hlt
add
xchg
pop
testl
dec
adc
adc
dec
xchg
pusha
aam
adc
hlt
and
mov
pop
lods
adc
bound
xor
add
cmc
add
pop
imul
adc
push
pop
sub
mov
jp
pop
add
mov
push
add
or
adc
jle
mov
mov
test
add
dec
jle
inc
add
mov
int
push
mov
inc
clc
cmp
jbe
adc
movsw
xor
outsb
add
lods
ret
sbb
cmp
insb
jp
loop
movsb
add
add
leave
push
fdivrs
add
mov
inc
inc
add
or
add
sub
iret
add
into
cwtl
mov
push
jno
outsl
or
out
pop
nop
add
rclb
outsb
inc
call
ljmp
lret
add
mov
popa
jle
rep
enter
cmp
push
ja
pop
jl
adcb
mov
adc
jb
add
sbb
inc
gs
xchg
push
ljmp
fwait
push
movsb
xchg
stc
ja
sub
cmp
pop
or
add
lcall
cmp
mov
adcl
cwtl
jbe
push
add
popf
sbb
aam
insb
xchg
xchg
int3
lods
add
lahf
shrb
dec
jbe
cpuid
lock
jno
pop
push
inc
jb
repz
push
call
roll
pusha
leave
into
cs
fdivrp
stc
add
dec
or
push
xchg
jge
arpl
pop
mov
and
sub
xor
loopne
pop
push
or
arpl
xchg
popf
cmc
in
add
fcoms
movsl
stc
dec
clc
jecxz
add
nop
imul
sub
imulb
mov
dec
push
lods
pushf
cld
add
jno
stos
xor
xorl
imul
clc
add
fisttpll
aam
add
stos
lds
loopne
mov
jmp
nop
inc
fsubrp
pop
add
jle
cmp
lock
cmp
test
push
add
and
inc
mov
inc
dec
pop
jp
add
push
notb
mov
add
mov
push
aas
vmwrite
adc
ss
leave
add
inc
js
pop
mov
adc
cmp
pop
xor
jmp
xchg
imul
icebp
out
xlat
fldt
sbb
dec
and
out
xchg
insb
jge
lds
arpl
adc
mov
mov
inc
rcrb
xlat
fldl
jns
dec
addb
xchg
adc
addb
call
sbb
cmpsb
ret
sbb
mov
filds
or
das
les
movsl
adc
test
sbb
addb
xor
nop
sub
dec
jne
dec
cmp
jl
mov
or
insb
stc
or
fildll
sbb
pop
cli
cmp
lcall
cmpsl
inc
add
filds
fidivs
insl
inc
daa
fwait
add
rsm
jmp
adc
sbb
inc
dec
cmp
mov
jno
lock
jp
int
xchg
pextrw
sahf
pusha
lcall
add
xor
gs
jo
call
les
popa
adc
jbe
add
mov
mov
inc
subb
xchg
cmp
mov
pop
test
jae
rcrb
sarb
orl
cli
xor
subb
sbb
jbe
loopne
jns
int3
inc
pop
xchg
in
andb
mov
and
add
mov
add
xchg
xchg
mov
into
mov
addl
dec
inc
xchg
rol
mov
cmp
mov
mov
lods
push
jae
subb
mov
adc
fld
push
add
lock
xlat
pushf
pushf
add
and
pop
and
inc
mov
and
or
add
xchg
faddl
out
push
addr16
pop
andl
aaa
imul
adc
pop
sbb
pop
cmp
jecxz
addps
xchg
in
lods
add
repz
fs
mov
sub
cwtl
roll
loop
outsb
cmpl
sarb
or
mov
aaa
std
sbb
cmpl
roll
xchg
sub
outsb
stos
push
loope
test
icebp
ds
cmp
dec
pop
fisttpll
dec
aas
jmp
call
xor
pushf
sbb
mov
push
pop
dec
sub
shll
lods
mov
stos
fsubs
inc
adc
movsl
add
pop
loopne
lahf
add
pop
push
fsubp
adc
inc
aam
and
cmpsb
or
clc
sub
mov
daa
andb
enter
out
push
data16
jnp
xchg
pop
add
mov
xchg
incl
into
cltd
cmpsb
sti
out
xchg
add
test
lods
or
out
and
sbb
sub
loope
lea
arpl
mov
cmp
mov
sahf
fwait
sub
adcb
jne
mov
push
clc
int
sub
jae
mov
pop
add
pop
sbb
cmp
lea
adc
inc
mov
mov
mov
push
dec
add
push
ss
cs
lods
ud2
jo
dec
or
pop
mov
sub
dec
es
pop
inc
add
psubsb
pusha
lods
shl
cmpl
cld
fsubr
add
jp
cmp
xor
pusha
sub
je
xchg
fs
imull
jo
jbe
adc
dec
xor
addr16
and
add
push
lcall
sub
aam
pop
jmp
jae
pop
lock
je
push
mov
dec
and
lock
out
lcall
dec
insb
scas
xorb
mov
adc
sbb
out
mov
adc
rol
add
add
mov
or
push
addr16
repz
push
clc
mov
add
loope
add
sahf
xlat
pop
add
pop
out
push
leave
jge
cmpsl
add
cwtl
lret
cmp
out
dec
pop
push
mov
mov
fimuls
inc
mov
push
fwait
cmp
filds
pop
jnp
add
mov
cwtl
or
sti
bswap
pop
ret
int3
fbstp
out
push
mov
nop
shrb
and
rcll
push
or
dec
jge
push
add
in
xor
pop
adc
push
pusha
in
imul
mov
fcomps
xor
shll
and
fildl
jno
push
add
add
ljmp
rorb
je
fiadds
das
rcrb
mov
arpl
sub
adcb
loope
lea
jb
adc
cltd
and
leave
jbe
add
mov
roll
and
sbb
or
mov
daa
xchg
roll
dec
dec
popf
in
sub
add
inc
pop
mov
or
out
add
mov
je
inc
adc
popa
mov
or
and
lods
pop
jnp
jmp
jecxz
test
in
and
loop
jno
fsubs
call
int3
aaa
cld
out
push
jns
outsb
and
xor
js
sbbl
pop
test
cmp
mov
fidivrs
and
jge
loop
jecxz
adc
jne
push
lcall
xchg
sub
bound
sbb
lahf
insb
add
loope
dec
pop
mov
cmp
test
jle
mov
cmp
arpl
and
jg
dec
pop
cmp
jbe
mov
call
add
add
cmp
add
aad
outsb
cmp
pop
ret
rolb
pop
imul
sti
ljmp
call
mov
sub
jno
imul
in
orb
out
pop
daa
js
add
cmp
loope
or
xchg
xor
and
sbb
fbld
pop
std
mov
cmp
mov
dec
cmp
lahf
xchg
add
ja
test
pop
adc
push
addl
xlat
enter
lock
push
repz
push
mov
std
lds
cmp
in
cld
add
cs
mov
mov
shl
mov
pushf
insl
nop
sbb
pop
xor
inc
pop
or
add
xor
mov
add
jp
lret
push
movsb
push
stos
lret
cmp
add
dec
add
cmpsb
and
sub
dec
loope
adc
mov
mov
sbb
mov
and
add
mov
add
test
setae
mov
inc
push
add
aaa
mov
rol
add
jp
add
sub
rcl
cmp
cwtl
sbb
sbb
hlt
int
sbb
jno
mov
fs
mov
and
push
push
xchg
add
and
fadds
out
add
scas
nop
jecxz
gs
out
mov
sahf
mov
rcrl
xor
push
movsb
sti
dec
iret
mov
pop
cmp
cli
inc
sub
aas
pop
mov
inc
push
sub
data16
mov
push
aas
imul
leave
mov
mov
add
push
xor
inc
fmul
mov
pop
push
insb
add
pop
sahf
mov
daa
cmp
push
stos
mov
hlt
and
fists
xor
cmp
add
int
adc
sub
mov
xchg
adc
loopne
iret
bnd
add
xchg
pop
cltd
imul
adc
mov
addr16
or
add
iret
test
rclb
pop
jnp
adc
outsb
leave
rcrb
mov
pop
cmp
mov
or
jo
cli
adc
dec
xchg
adc
call
fisubs
sub
inc
add
add
nop
or
js
push
movsl
sub
dec
add
inc
adc
mov
int
sub
cmp
pop
inc
mov
or
shrb
push
dec
sarb
test
test
pop
rorb
in
and
add
aaa
sbb
sbb
ret
mov
cmp
iret
or
sbb
add
sbb
jo
loope
or
xchg
es
ja
out
push
addb
mov
adc
and
imul
addl
stos
dec
push
xchg
sbb
push
mov
jg
and
pop
push
popa
or
add
mov
jb
add
fistpll
dec
repnz
adc
in
mov
je
movsb
or
pop
in
dec
add
std
mov
jle
xor
lcall
cmc
or
and
ror
and
cmp
dec
in
lea
cmp
pop
cmpl
out
pusha
push
leave
and
xchg
inc
pop
in
jb
mov
lds
fmuls
add
aam
add
stos
fs
xlat
cmpsl
add
push
xchg
lret
sti
andb
cmp
sbb
movsb
pop
call
in
sbb
shlb
lret
mov
or
add
andb
adc
sbb
in
adc
push
push
jbe
ds
fwait
and
adc
lret
add
inc
mov
add
xchg
test
cwtl
push
add
ret
mov
in
jb
push
sub
adc
repnz
addr16
xchg
pop
sub
xchg
je
mov
mov
inc
jnp
add
xchg
push
fisttpll
add
pop
and
add
push
adc
pop
push
push
filds
pop
enter
push
mov
xor
sub
sbbb
cwtl
clc
mov
orb
aam
xchg
pop
popf
inc
dec
hlt
popf
add
sbb
mov
or
dec
test
cmp
ss
adc
mov
xchg
negl
cmp
jo
cmp
jp
mov
mov
add
push
test
enter
adc
cmp
or
push
inc
addb
test
in
xor
adc
push
xchg
or
and
jno
push
ljmp
divb
sarb
les
cld
repz
hlt
jb
aaa
fmuls
sub
inc
out
aas
add
clc
arpl
subb
nop
fsubrl
push
add
jo
and
fsincos
push
insb
sbb
or
dec
clc
rcll
push
adc
jge
in
mov
sbb
sti
imul
out
hlt
mov
mov
loopne
jmp
dec
and
mov
add
or
or
pusha
test
repz
add
repnz
add
cli
pop
add
xor
cmp
jp
add
jle
test
push
rolb
add
pushl
add
lahf
lods
mov
shrl
test
inc
aad
dec
subb
mov
cs
xor
and
lret
outsb
loopne
ret
xchg
adc
xchg
out
bound
mov
or
shlb
mov
mov
mov
iret
xchg
sti
inc
dec
jle
mov
jo
jnp
clc
cwtl
ljmp
push
jle
cmp
jmp
jo
out
push
rorl
or
lods
aam
into
pop
stos
imul
mov
inc
add
mov
xorl
aaa
jo
add
xchg
aam
stos
xchg
into
clc
jno
push
mov
dec
jb
outsb
ljmp
or
pop
adc
int
jne
sahf
pop
and
ljmp
add
dec
jmp
add
push
mov
dec
xchg
or
mov
jnp
or
pop
fcmovbe
std
andb
xor
inc
sti
push
cmp
hlt
xchg
xchg
movsl
in
inc
jl
cmp
pop
xchg
sub
cwtl
add
pushf
insl
and
repz
arpl
and
lock
xchg
loop
gs
cmp
jae
mov
or
mov
pop
pusha
out
mov
jno
push
lret
in
or
aaa
jp
int
jge
sbb
dec
jl
push
ds
aas
stc
mov
subb
push
add
sbb
in
hlt
addb
mov
cs
sub
adc
scas
pushf
imul
add
mov
jae
push
test
pop
add
nop
loop
and
xchg
or
and
fs
xchg
int
mov
imul
push
dec
cmp
jg
lahf
outsb
sub
and
mov
add
mov
rcrl
jb
sbb
push
sub
dec
rolb
out
fneni(8087
mov
inc
cltd
inc
roll
out
jle
jb
adc
pop
xor
outsl
and
nop
int3
add
popa
lret
jg
inc
mov
int3
scas
xor
push
xlat
inc
les
cmpsl
bound
and
jmp
rolb
add
push
push
outsl
in
xor
rcl
fisttpl
xchg
jns
xchg
push
jg
mov
repnz
and
sbb
ja
add
rcl
stos
dec
push
jnp
dec
sbb
loopne
pop
aas
mov
add
test
outsb
adc
shrl
push
sahf
enter
mov
cmpsl
in
push
mov
add
and
fwait
orb
add
ror
repz
fadd
mov
movsl
repnz
mov
jg
jno
jae
push
sbb
sub
icebp
sbb
leave
ss
mov
sbb
dec
out
adcb
xchg
in
pop
cmp
popf
pop
inc
mov
add
mov
fstpl
popa
cmp
insb
rorb
mov
cmp
sbb
mov
sub
push
cld
add
xor
mov
add
dec
push
add
xor
mov
mov
add
popa
jo
add
loope
sarl
add
adc
addl
fwait
loope
mov
addr16
loopne
sti
add
pop
mov
cld
jae
jmp
sarb
pop
pop
jae
add
mov
inc
movsl
xor
aas
or
or
push
pop
int3
add
add
xchg
clts
jp
or
push
xchg
mov
cmpb
pop
lea
js
fstpt
add
mov
insb
add
fisubl
xchg
inc
add
addr16
cmp
xchg
outsl
cltd
mov
cld
jns
hlt
sub
std
out
rcll
iret
xchg
sub
and
jb
xchg
cmp
adc
iret
and
and
test
mov
xchg
dec
fwait
sbb
shlb
and
fs
add
out
ss
outsb
add
fists
push
aaa
xchg
gs
add
shrb
cmp
jle
pusha
fnstsw
test
dec
or
rclb
ret
sbb
loop
add
ficomps
or
push
push
cmp
cmp
je
call
mov
sahf
cmp
in
mov
daa
add
int3
out
xor
enter
jecxz
mov
mov
dec
push
cwtl
or
add
out
rorb
cltd
mov
inc
xchg
pop
fsubs
ds
mov
rclb
pop
test
lods
sub
dec
daa
add
movsb
jae
xchg
mov
adc
jmp
pop
fisubrl
lock
cltd
or
cmp
outsb
mov
icebp
mov
cwtl
mov
add
aad
add
pop
inc
pop
add
xorb
xor
xorb
aas
scas
mov
push
sub
sub
pop
dec
xchg
js
add
add
dec
lahf
push
pushf
add
cmp
fnstenv
push
add
jmp
clc
cmc
jle
add
pusha
nop
add
inc
or
in
aad
pop
lret
mov
mov
out
mov
enter
mov
ret
daa
push
xor
in
sub
sarb
mov
jg
xor
arpl
mov
add
adc
add
mov
flds
mov
ficoml
pushf
or
fwait
cwtl
sbb
jae
mov
push
mov
shlb
loopne
add
testb
add
and
int3
or
sub
jle
add
outsl
pop
iret
ja
or
les
test
mov
add
ret
enter
adc
add
jl
stc
add
aam
mov
js
cmpsb
jbe
inc
cmpsl
test
nop
lret
add
mov
add
push
inc
inc
xchg
xchg
adc
fldl
sarb
adcb
rorb
mov
in
add
xchg
push
cmp
inc
scas
xchg
aam
cmpsb
pop
hlt
cmp
jle
mov
jo
pop
aaa
pop
imul
test
pusha
mov
sarl
push
add
cmpsl
inc
pop
enter
or
add
pop
jge
bound
idivb
add
testl
cmpl
ret
and
push
dec
out
mov
insl
dec
inc
inc
cwtl
jne
adc
in
mov
cltd
icebp
sub
add
bound
mov
outsb
lret
clc
add
jb
jne
incb
lret
adc
mov
and
pmulhuw
push
lods
in
sbb
cmp
adc
fidivs
data16
jp
cs
or
or
adcb
mov
pop
inc
xchg
mov
add
dec
insb
and
add
das
dec
stos
jp
add
adc
inc
xchg
aam
xchg
mov
pop
push
inc
add
cltd
mov
cmovb
xchg
test
push
subl
fnstsw
add
push
or
jo
push
add
test
mov
pop
fldl
push
jmp
jl
pop
sarb
jmp
mov
pop
push
lock
cmp
and
add
aas
mov
and
mov
dec
out
cwtl
sbb
jns
jno
add
gs
cltd
hlt
pop
in
push
inc
add
sbb
xorb
add
xor
mov
stc
fidivrs
xchg
and
push
mov
shrb
xor
outsl
lahf
stc
sub
add
faddp
xchg
mov
ret
lret
sub
js
and
add
loope
and
cmp
movsb
xor
popf
add
xlat
push
fdiv
sbb
add
jno
pop
arpl
outsb
sbb
xor
leave
call
jg
dec
inc
mov
mov
aad
mov
lret
sbb
inc
or
fs
dec
dec
addl
xchg
inc
test
xchg
filds
dec
lds
and
sub
push
popa
xchg
cli
lcall
ret
dec
add
fildll
add
xor
daa
mulb
js
or
add
sbb
adc
call
fisubl
xlat
loop
push
lcall
das
shrb
mov
hlt
sub
fimuls
cs
shrb
rol
andb
xchg
push
addl
pop
loop
or
lahf
jecxz
push
mov
test
rcrb
add
or
nop
inc
gs
ret
cmc
shll
push
inc
pop
nop
xlat
loopne
pusha
push
aaa
or
pop
jne
mov
sub
xor
push
or
adc
sbb
out
cmpsl
push
repnz
mov
add
icebp
je
pop
ss
xor
jae
scas
jecxz
aam
sbb
movsb
fs
testl
dec
mov
in
inc
mov
push
je
jle
push
adc
push
jae
syscall
inc
add
fmul
lock
xor
cmpsl
jns
adc
ss
dec
lret
mov
fwait
and
push
dec
lock
and
inc
xor
push
jmp
adc
addb
sub
js
jb
add
pushl
in
mov
shrl
push
popa
push
jmp
xchg
sbb
test
push
add
cwtl
and
or
andl
gs
add
into
jg
sbb
add
cmp
add
jbe
jg
xchg
dec
inc
xchg
xchg
shlb
xor
dec
or
xlat
and
add
sbb
add
adc
add
xchg
add
iret
fstpt
sub
add
mov
std
fs
add
sub
add
pusha
pop
adcb
je
adc
rcll
pop
pop
mov
xor
add
imul
std
add
sbbb
add
cltd
or
mov
pop
pop
shrl
mov
lret
adc
fwait
pusha
js
add
mov
sbb
inc
aam
movsb
jl
dec
fbld
mov
inc
push
cmp
jge
pop
lret
out
int3
rcl
fists
jne
lds
out
cmp
xchg
push
jnp
and
iret
jne
jle
jle
outsl
dec
cmp
aad
inc
mov
add
mov
and
inc
xor
cmp
dec
lock
or
sbb
or
xor
ret
add
shll
add
sbb
mov
sarb
or
add
pop
mov
add
outsl
aas
aam
dec
add
adc
mov
shl
mov
sbb
add
icebp
push
lock
sahf
fs
cld
and
add
adc
scas
int3
adc
sbb
push
sbb
movsb
fwait
mov
cltd
pop
cwtl
jnp
es
das
scas
push
rclb
xor
fadd
push
cwtl
and
or
lods
ljmp
xchg
add
das
rcrb
orb
int3
fidivs
inc
enter
movsl
sub
movsb
mov
push
ljmp
pop
xor
lret
lcall
fstl
mov
js
dec
push
lock
adc
jl
std
add
push
add
std
push
or
mov
mov
je
std
dec
add
mov
clc
fs
pop
and
add
adc
cli
pop
mov
cs
xchg
into
jge
nop
or
ret
js
dec
in
or
sub
add
push
enter
fadds
out
mov
jmp
inc
xchg
sbb
cmpsl
push
cwtl
xchg
leave
add
and
push
pushf
das
popf
push
pop
aam
test
push
out
test
seta
cltd
add
adcl
or
mov
push
loopne
test
add
enter
adc
pop
add
in
mov
pop
xchg
test
mov
test
adc
and
jge
clc
dec
sarb
fisttps
and
sbb
pop
or
xor
shll
adc
push
inc
sub
out
mov
jnp
add
add
jno
rcll
int3
fmull
cmpsb
jmp
cs
addr16
into
mov
lahf
pop
pusha
or
dec
sbbb
cmp
rol
jne
nop
add
outsb
cmpsl
sub
rolb
pop
pop
push
repz
enter
stc
ljmp
dec
add
add
jg
ljmp
cmpsb
lea
fdivl
xchg
or
mov
outsl
shr
add
mov
pop
add
fwait
cmpsb
leave
add
adc
lods
sarl
push
nop
xor
inc
add
sub
xor
push
addr16
out
fcomp
mov
pop
dec
adc
das
cltd
cli
rolb
push
push
xlat
fdivrp
push
pop
dec
xchg
in
xchg
arpl
inc
mov
pop
add
clc
cmp
out
xchg
rorb
test
add
cld
loop
xchg
aam
adc
inc
popl
dec
adc
andb
pusha
jnp
hlt
pop
je
loopne
les
clc
in
dec
bnd
cltd
ret
mov
sub
dec
mov
and
lea
mov
fs
lret
cs
pop
jl
push
cmc
or
cwtl
mov
adc
jp
xchg
es
dec
xorb
cmp
stc
jle
jle
fadds
int
aad
rcrb
mov
out
add
cltd
aad
and
add
test
out
or
push
mov
aad
sbbl
mov
lahf
xlat
adc
mov
stos
inc
push
mov
jecxz
xor
pop
adc
adc
cmp
pop
mov
add
jno
pop
popa
arpl
clc
outsb
cmp
testl
fwait
mov
das
mov
adc
mov
hlt
pushf
lods
xor
sub
add
mov
and
fwait
int3
mov
pop
mov
adc
nop
add
cmp
or
sbbl
shlb
lock
xor
xor
jae
pusha
adc
int
jle
pop
xchg
and
aas
inc
sbb
mov
add
ror
ret
sarb
hlt
jno
sub
je
pminub
imul
inc
xor
sarb
int3
add
shl
inc
push
fcompl
lret
xchg
lock
das
sub
fsubs
push
mov
xchg
repz
bound
ret
test
pusha
mov
gs
pop
pop
cmp
cmpsb
push
mov
ret
test
sti
add
cmp
and
dec
hlt
jae
push
xchg
into
subl
sbb
jp
test
or
sbb
pop
ja
loop
push
and
mov
mov
aam
andb
xor
popf
sbbb
mov
lea
inc
rclb
dec
cmpsl
test
data16
sbb
fstps
pop
add
ja
pop
mov
or
adc
es
add
popa
lds
jns
xchg
mov
xchg
mov
adc
push
iret
add
ja
stos
add
testl
mov
add
mov
imulb
mov
mov
stos
add
xchg
pop
into
fistl
outsl
push
mov
jbe
cmpsl
dec
mov
sbb
inc
popf
bound
adc
fcmovnb
lock
mov
into
ljmp
push
dec
push
pop
orb
sbb
inc
sbb
imul
lods
jb
xor
or
iret
inc
xor
add
add
repnz
js
or
std
sbb
sbb
sub
or
adc
sub
fimull
jbe
pop
dec
mov
adcl
shrb
lret
enter
push
mov
sbb
add
xor
jbe
jne
add
xchg
sub
dec
adc
repnz
push
push
and
pushf
mov
lret
add
push
stc
aas
pop
push
rcrl
outsl
mov
mov
cmp
add
test
mov
add
or
testb
mov
sbb
mov
push
fiadds
or
out
inc
xchg
lock
pusha
mov
push
je
cmp
mov
and
adc
clc
pop
inc
push
fiadds
insb
mov
ret
sbb
ror
dec
test
out
mov
dec
push
inc
lea
mov
sbb
xor
sub
or
inc
sub
inc
loope
jns
loopne
gs
pop
stc
jg
cmp
test
fstpt
in
jbe
sets
pop
mov
cltd
adc
mov
nop
outsb
jbe
sub
ss
in
cli
push
lock
push
frstor
pop
sbb
jae
push
bound
xchg
adc
inc
sbb
or
adc
clc
stos
lea
add
push
sub
test
lods
add
dec
int3
data16
sub
mov
pop
aam
lds
and
push
mov
fadds
loop
stc
lods
fcoml
inc
add
ficompl
add
cmp
out
loop
ret
call
add
out
push
es
aas
out
rorb
or
sbb
mov
xchg
call
and
push
daa
xchg
clc
test
hlt
ja
cmp
inc
aaa
xor
or
and
sbb
cwtl
pop
lds
sahf
pop
mov
push
inc
shrb
inc
sub
addb
push
int
cmp
das
sub
add
pop
cmpsb
call
jae
test
push
ret
mov
add
shlb
adc
add
lock
test
mov
vmread
dec
cli
add
mov
xchg
out
jo
icebp
xchg
roll
jns
sub
sbb
dec
scas
mov
pushf
sbb
add
into
dec
inc
xchg
notb
add
mov
mov
punpckhwd
push
int
cmpsl
add
jle
aam
push
push
sbb
and
cmpsb
mov
stos
add
and
pop
negl
cmp
jecxz
in
js
add
pop
or
adc
int3
inc
jle
add
cmc
lret
xor
mov
adc
jg
jb
loop
inc
int3
cld
mov
sub
dec
jno
mov
lock
sti
repnz
fistl
jecxz
popf
lahf
add
aam
imul
mov
inc
push
add
push
xchg
xor
jo
repnz
mov
xor
inc
fucomip
jno
mov
ret
sbb
push
cwtl
mov
push
or
mov
outsb
sub
das
xor
jb
lods
loop
inc
add
inc
icebp
mov
jle
push
je
add
push
adc
loope
add
or
pop
add
out
mov
mull
mov
or
in
and
xor
xor
rorb
sti
jmp
xchg
clc
setae
popf
mov
sbb
xchg
add
xchg
lahf
popa
imul
aaa
imulb
mov
mov
mov
add
mov
jae
pop
mov
roll
mov
std
add
movsl
jmp
into
mov
cmp
rcrb
fdivrs
or
rolb
add
addr16
stos
mov
lock
mov
movsb
mov
scas
sbb
jl
repz
imul
test
cmpsb
cltd
cwtl
xchg
add
mov
jmp
shl
and
adc
aam
arpl
sub
inc
xchg
dec
mov
scas
call
adc
push
and
add
rol
dec
cmp
push
add
imul
lods
sbbb
pop
mov
add
adc
add
inc
stc
out
mov
sbb
dec
add
gs
shll
inc
mov
shlb
fstpt
ja
dec
dec
pushf
stc
pop
xor
or
cmc
sub
add
xchg
xor
mov
mov
std
call
loopne
add
jmp
rorb
adc
fcomps
jp
inc
jne
mov
add
pop
mov
rolb
jns
or
sbb
inc
sub
lret
mov
fwait
xchg
mov
test
xchg
and
add
rcl
sub
xchg
sahf
fbld
lret
adc
jnp
rcr
jecxz
fiadds
xchg
das
or
or
and
and
sbb
jo
add
jno
sbb
xor
ret
cmc
test
add
ja
push
add
in
js
xchg
xor
fwait
jno
sbb
insl
adc
testb
mov
mov
add
in
sub
out
loop
add
jl
popf
inc
adc
mov
addl
movsl
aam
mov
sar
adc
jnp
mov
cmp
addb
inc
or
loop
mov
sub
dec
testl
inc
add
adc
and
mov
mov
add
ljmp
movl
add
mov
jle
out
push
sbb
jns
adc
push
add
jle
add
add
inc
add
shrl
daa
inc
testb
ljmp
inc
xchg
inc
rcl
dec
pop
xor
inc
or
cmpsl
jg
test
cs
adc
test
jmp
and
sti
int3
loope
mov
jp
pop
jp
jne
shl
test
leave
adc
mov
cmpsb
dec
in
std
add
jb
das
and
xchg
daa
lods
in
jno
clc
add
flds
addr16
mov
outsb
inc
hlt
pop
add
pop
test
ds
add
sbb
cltd
cs
mov
out
inc
icebp
add
jg
out
xchg
add
stos
mov
fldl
jl
xchg
fstps
pop
add
je
sahf
jne
jl
add
test
insl
sbb
ljmp
push
add
push
in
sub
push
mov
cmp
pop
shlb
xchg
add
xor
repnz
push
test
pop
mov
cmp
or
lock
add
and
or
push
shlb
rcll
ret
adc
lock
shrb
mov
sarl
andb
pop
pop
cmc
mov
inc
push
push
iret
add
adc
daa
xchg
xchg
inc
lret
mov
fcmovnu
add
cmp
sbb
push
sbb
mov
add
es
movsl
sahf
mov
add
push
mov
dec
add
cmpb
in
cmp
add
and
clc
jl
mov
lods
fcoml
scas
jb
jnp
add
arpl
pushf
addb
xchg
imul
add
jnp
push
subl
push
lcall
cltd
add
pop
xor
sub
filds
lea
or
mov
and
repnz
sub
push
cmp
jp
mov
lods
aaa
sbb
incl
mov
or
or
dec
adc
jmp
xor
negl
sub
jle
das
sbb
shlb
push
mov
or
lods
push
or
mov
ja
sti
je
pop
scas
flds
ljmp
out
mov
cmc
dec
stos
add
popf
pusha
lret
in
movb
clc
mov
fnstsw
jp
dec
cli
jo
push
repnz
adc
add
ss
push
inc
lds
leave
clc
cmpb
loopne
mov
inc
adc
popa
xchg
pushf
imul
js
fmull
dec
cmp
add
mov
popf
push
xlat
cmpb
pusha
xchg
or
cmp
std
shl
dec
ja
push
iret
inc
jmp
pop
or
jno
enter
dec
pop
pushf
sbb
push
push
sahf
jle
mov
rorb
loopne
jl
and
mov
jmp
inc
fisubrl
dec
add
das
mov
ds
add
sub
mov
dec
xchg
mov
stos
out
pop
into
push
or
push
xlat
jo
xchg
arpl
loopne
mov
add
aam
mov
dec
mov
add
and
add
jl
addr16
lock
je
aam
loope
add
lock
add
jle
movsb
pusha
aas
push
das
adc
nop
add
xlat
iret
loop
mov
adc
or
mov
cltd
pop
aaa
or
adc
pop
ret
xor
loope
adc
adc
add
cld
aad
add
sbb
fimuls
aas
add
jle
mov
aad
mov
adc
fiaddl
mov
enter
add
daa
cmp
std
mov
pop
jl
add
ljmp
xor
mov
mov
add
sarl
sbb
xor
sahf
scas
lock
ret
es
cmp
out
fsubl
mov
ss
pop
xchg
addl
or
adc
shlb
xchg
xchg
xchg
add
adc
jno
add
jmp
cltd
jge
push
ret
push
jne
sub
add
je
jnp
add
jbe
xor
arpl
mov
rcrb
roll
jecxz
idivl
arpl
add
and
dec
repnz
addr16
jo
repz
inc
dec
in
loopne
rolb
or
add
std
out
push
movsb
iret
jo
rolb
xchg
out
nop
daa
push
jg
mov
cmp
add
xchg
mov
mov
jge
and
xchg
insb
outsb
xor
add
cmp
popf
cmp
in
cltd
sarb
jno
in
jae
jp
jbe
test
jnp
add
adc
mov
cmp
pop
mov
je
sub
clc
mov
push
lock
jle
add
insb
out
xor
cmp
push
dec
mov
fcmovu
mov
jg
add
cmp
add
dec
call
pop
ljmp
insb
lock
jge
ret
mov
inc
add
aam
mov
lds
addl
jg
or
cmc
xchg
or
dec
mov
jnp
add
in
sbb
xor
jecxz
mov
add
or
call
adc
cmp
call
sbb
jae
adc
sarb
xlat
sub
ret
push
dec
rclb
sub
add
lret
inc
cmp
add
inc
std
add
incl
jl
jo
sbb
pusha
das
cwtl
jb
test
cmp
je
pop
rolb
xor
mov
sbb
dec
cmpsb
or
sbbb
lahf
mov
outsl
add
jp
push
stc
cmpsb
add
sbb
add
jo
stos
enter
out
das
add
push
push
nop
and
xor
movsb
jge
pop
fnsave
sbb
adc
cltd
cmp
fs
pop
mov
ret
add
sbb
aas
sbb
sbb
push
add
push
add
dec
add
push
dec
fbld
cld
add
and
sub
int
or
jmp
add
lret
adc
iret
mov
and
out
add
pop
xchg
dec
pop
push
cmp
jo
mov
scas
arpl
pop
icebp
test
jns
pop
pop
push
ret
addr16
xchg
mov
push
add
xchg
mov
testb
xchg
cld
sbb
mov
xor
adc
enter
and
inc
add
out
shr
inc
jno
add
add
pop
xlat
mov
test
mov
dec
fcmovne
mov
dec
das
cmpl
shlb
add
mov
or
push
mov
add
and
xchg
dec
mov
jne
add
or
mov
and
adc
sub
rcrl
hlt
sub
or
fldcw
mov
pop
and
mov
and
idivb
shlb
xor
pop
jp
add
push
loope
fst
mov
xchg
sub
add
or
cmc
mov
mov
daa
out
addb
mov
and
add
adc
arpl
nop
pop
lahf
popf
xchg
push
ret
leave
cltd
add
push
add
ror
movsb
stos
cmp
push
std
add
sahf
adc
jmp
and
mov
pushf
jmp
push
fnstenv
arpl
rep
adc
mov
pop
cltd
add
fstpt
or
andl
mov
imul
mov
add
lods
push
cmp
cmpsb
sbb
js
inc
rorb
jg
pop
scas
test
mov
inc
jg
ret
or
push
push
or
push
add
lahf
cmp
xchg
add
mov
jge
lock
add
dec
lret
pop
cmpsb
inc
sub
jmp
in
add
loope,pt
fcoml
movsb
cmp
cmp
mov
xchg
pushf
adc
mov
add
inc
fadds
iret
subb
loope
mov
add
out
stc
loopne
inc
seta
add
aad
aas
add
adc
add
push
dec
enter
clc
lahf
cmp
sbb
sbb
into
jp
adcb
stos
scas
out
daa
das
and
push
mov
cmpsb
stos
add
cmc
and
inc
rclb
and
dec
mov
jl
lock
repnz
jbe
popl
pop
pop
push
pop
imul
sbb
cs
and
and
insl
aaa
lea
inc
lcall
xor
mov
jl
push
inc
lock
fdiv
loopne
in
mov
jle
int
push
roll
icebp
xorb
hlt
cmp
or
and
movsl
in
data16
sub
sbb
mov
daa
inc
pusha
xchg
pause
cmp
testl
mov
dec
add
push
cmpsb
roll
mov
rclb
add
mov
xchg
testb
loope,pt
cmp
xchg
add
dec
les
loop
or
cld
xorl
mov
imul
sbb
add
out
xchg
inc
popf
add
sub
mov
add
fildl
cmp
rolb
cwtl
call
loopne
add
mov
or
mov
bound
mov
pusha
mov
out
lock
nop
push
fcoms
jmp
or
fmulp
ljmp
push
mov
xor
rorb
shll
mov
and
scas
jge
mov
add
push
adc
jecxz
xor
and
jae
add
and
je
xchg
test
or
cmpl
movsb
pop
adc
mov
in
mov
xlat
sbb
add
pop
mov
int3
int3
xlat
dec
gs
sarb
mov
add
sbb
jp
stos
pop
movsl
scas
popa
in
add
or
daa
sbb
jle
pop
test
lea
adc
adc
aaa
sub
mov
jo
ja
shlb
es
imul
test
sbb
roll
xchg
pop
shl
out
pop
fcomp
jge
push
mov
add
mov
imul
std
es
dec
loopne
mov
stos
dec
fadds
sbb
addr16
cmp
add
outsl
inc
stos
sub
aad
nop
add
les
data16
ffreep
or
sub
mulb
jmp
xchg
orl
or
loope
or
aas
scas
add
fmuls
add
mov
add
sub
inc
mov
xor
push
add
dec
jo
faddl
sbb
mov
cmpsb
xchg
xchg
add
daa
jg
lea
mov
sbb
fwait
iret
mov
add
add
mov
mov
sti
mov
push
mov
lds
push
ret
stos
xchg
pop
loopne
push
lahf
test
repnz
and
mov
aad
push
xor
push
pop
inc
scas
and
mov
xchg
adc
stc
in
sbb
cmp
rclb
shlb
xchg
insb
adc
sub
out
sbb
adc
push
loopne
repz
and
loop
or
dec
push
cmp
lret
test
aam
nop
sub
fs
int
test
pop
sbb
call
test
pusha
jmp
enter
pshufw
jb
insl
and
fisubrs
sbb
mov
movsb
jb
add
imul
testb
jmp
sub
mov
subl
movl
das
sbb
int
out
add
out
xchg
psrlq
push
gs
push
add
fldenv
cmp
add
in
cs
jmp
or
inc
aam
add
fsubl
xor
push
dec
cmp
cmp
add
mov
cs
nop
and
je
push
rcrl
jno
lods
cmpsb
fucomip
xor
and
mov
loop
mov
add
repnz
out
clc
pop
dec
lahf
mov
icebp
fldenv
sarl
adc
xor
aas
push
push
lret
mov
je
shl
jae
mov
mov
ret
add
imul
add
jl
hlt
js
stos
adc
fsin
sub
rcl
pop
add
jns
add
jl
repnz
fs
add
lock
jbe
popf
and
push
add
mov
std
and
int
add
imul
push
push
rorl
add
fdivp
xchg
xchg
in
dec
fadd
xchg
xchg
inc
cltd
addb
push
jmp
les
xchg
jle
mov
fsubrl
out
jo
repnz
in
xor
adc
clc
push
ljmp
int3
insb
cmp
lcall
add
dec
sti
popw
pop
movsl
xor
insb
cmp
xlat
pop
pop
rolb
mov
out
mov
add
daa
cmp
inc
and
outsb
fsubr
cltd
clc
ja
in
bound
addr16
icebp
cli
push
xor
jge
mov
lcall
mov
add
aaa
clc
lret
xor
ffreep
ljmp
push
dec
mov
and
and
push
adc
std
pop
cmp
jmp
not
add
fdivl
loop
scas
addr16
in
ss
jmp
add
mov
add
jbe
adc
adc
cltd
fcmovnb
pushf
or
cwtl
adcb
in
imul
sub
xchg
pop
jmp
inc
nop
push
jb
dec
pop
out
mov
ret
xor
adc
push
pop
rclb
loop
jle
jg
sub
mov
add
cmp
add
add
mov
or
lret
add
rcr
insl
add
jmp
data16
sti
or
adc
sbb
lcall
add
sbb
incb
push
test
fnstcw
mov
cmp
xor
push
push
dec
add
cmp
stc
jb
cmp
cmp
push
mov
pop
jbe
pop
add
daa
popf
cwtl
cmp
orb
mov
add
arpl
lahf
dec
sbb
movaps
adc
sbb
call
lock
mov
shlb
or
in
xor
sub
mov
adc
mov
xchg
pop
add
popf
cmp
into
dec
aas
lret
mov
lds
xchg
sti
je
xchg
mov
jne
adc
clc
pop
insl
push
jns
push
neg
fadd
fwait
nop
add
ret
push
scas
hlt
sbb
movsb
push
out
lret
push
and
sub
adcb
xchg
inc
aaa
add
das
adc
filds
or
mov
mov
inc
enter
clc
in
xor
lock
movsl
add
pop
rolb
mov
cmp
outsl
add
or
push
loopne
sub
or
icebp
jno
imul
pop
xor
xchg
mov
ss
push
icebp
mov
xchg
xor
xor
neg
ja
out
cmp
addl
xchg
or
pop
xor
iret
xor
dec
pop
add
jae
pop
ja
cld
enter
movb
pushaw
nop
clc
add
iret
jle
cmp
mov
loopne
rorb
xor
sbb
sub
mov
mov
cld
inc
xchg
mov
add
push
andb
and
or
inc
nop
mov
xor
mov
add
es
rcrb
push
pop
cmpsl
add
movsb
mov
push
fwait
mov
and
scas
jmp
add
dec
mov
mov
add
dec
call
in
in
fimull
rcl
pop
test
adc
cld
xor
push
dec
and
xchg
rolb
or
notl
lock
pop
aas
fcmove
pusha
inc
xor
dec
sbb
add
repnz
inc
in
adc
cmp
add
xchg
add
jne
add
push
mov
shrb
stc
lds
adc
test
ds
aam
mov
and
cltd
std
add
shl
je
lret
push
loop
imul
rcll
mov
fdivrl
inc
and
sti
sbb
test
xchg
sar
sub
jns
jmp
pop
les
add
or
xor
dec
mov
lods
je
pushf
jmp
sti
imul
xor
test
and
push
jbe
cmp
cmp
in
cmp
xor
je
push
inc
and
ja
add
xor
jno
sbb
mov
sbb
add
adc
dec
mov
or
adc
out
adc
and
ret
add
push
sbb
in
xchg
movsb
pop
ja
das
adc
rcl
pop
mov
addr16
adc
inc
push
mov
stos
add
mov
cmpsl
inc
adc
pop
xchg
popa
add
stc
cltd
xchg
and
test
add
out
js
dec
add
mov
add
pop
xchg
mov
mov
int3
and
lods
in
add
or
sar
push
mov
test
loope
lret
je
add
inc
mov
js
add
insl
jae
sti
cli
jp
cli
lret
andb
or
lods
xchg
or
lds
andb
shl
or
pop
rolb
sarb
test
cli
xor
sub
pop
cs
xchg
cmpl
cltd
mov
repnz
add
pop
ja
add
popf
inc
cmp
or
outsb
add
or
and
sub
xchg
aam
sub
push
roll
jo
mov
cld
sub
je
into
loope
shrb
pop
mov
sbb
popa
cs
xor
push
stc
pusha
jne
push
or
in
xchg
push
mov
inc
pop
push
cmp
dec
mov
or
arpl
adc
push
push
xor
hlt
push
cmp
popa
cmc
loop
sbb
lcall
les
ljmp
sahf
js
out
add
push
bound
sbb
leave
mov
arpl
sbb
inc
loopne
cmp
aas
sub
jo
add
sbbl
mov
out
add
cmp
test
arpl
inc
mov
fnop
add
push
seto
pop
add
ja
fcoms
add
mov
and
inc
jmp
dec
or
pop
add
test
lea
add
jno
fstpl
scas
addr16
push
testb
push
orl
and
mov
lods
xor
and
shl
in
cmpsl
jne
mov
aam
inc
mov
add
mov
call
mov
mov
loope
xor
push
lock
subb
cli
push
arpl
mov
xor
sbb
cmp
ja
jg
cmp
push
push
add
out
jne
add
dec
mov
mov
fimull
push
push
sarl
stos
pop
clc
push
pop
add
push
or
cmp
sub
mov
sbb
lods
loopne
or
cmp
jmp
add
bound
and
in
push
sbb
jbe
mov
or
lea
clc
pop
pop
enter
or
mov
lock
cmpsb
jns
cli
int
xor
dec
gs
cmp
mov
fstpl
pop
add
ret
movsl
push
call
clc
cmp
ja
jbe
cli
adc
sub
in
orb
dec
das
and
jl
add
xor
jo
stc
jg
inc
inc
inc
js
add
mov
sub
lret
push
imul
sbb
xchg
lds
sbb
mov
std
cli
pusha
mov
sbb
xchg
mov
jae
dec
lret
dec
sbb
pop
pop
jl
insl
cmc
in
pop
into
pop
push
mov
data16
adc
xchg
pop
mov
xchg
lret
aam
xchg
adc
aad
loope
mov
ljmp
out
or
xchg
clc
mov
adc
cmpsb
cmp
ljmp
lret
xor
and
push
add
jl
fadd
inc
add
jnp
or
in
sar
insb
add
outsl
mov
sbb
add
jo
pop
adc
mov
add
cmp
adc
jg
or
push
mov
incb
dec
sbb
lret
cmpsl
pop
out
lods
test
repz
inc
pop
push
dec
ss
mov
lock
in
outsb
hlt
dec
ret
jnp
push
lret
mov
dec
push
add
aaa
cmp
add
icebp
daa
mov
push
inc
pop
lds
or
scas
loopne
pop
lds
add
leave
xchg
stos
popf
ds
adc
cwtl
fdivs
addb
shrb
lret
mov
mov
jg
loop
mov
add
mov
imul
and
lahf
add
roll
bound
popf
cmp
inc
xor
mov
mov
sti
shl
add
sbb
sub
lret
test
and
or
jle
add
imul
xor
popf
xchg
cmp
add
inc
enter
pop
mov
aam
stos
add
shrl
jmp
jo
loopne
mov
xor
inc
js
push
repnz
popa
loopne
mov
or
test
jmp
xor
lock
mov
cld
bound
xchg
push
and
adc
out
push
jne
dec
stc
dec
inc
inc
loopne
add
scas
aam
sub
push
add
mov
xor
jnp
jo
pop
addr16
xlat
jb
cmp
inc
mov
aaa
pop
add
jge
lret
xchg
add
adc
push
std
jne
xorb
pop
adc
xchg
add
cwtl
jo
cltd
add
dec
gs
cs
vmread
fsubl
aam
lret
push
sbb
aas
adc
add
ret
mov
cmp
in
inc
inc
add
test
pop
and
outsl
loopne
cmp
mov
inc
xchg
mov
xchg
movsb
rorb
add
cmp
std
aad
jbe
pop
sti
add
pop
aas
lock
hlt
fidivrl
add
push
push
outsb
inc
dec
pop
ret
xor
jmp
adc
clc
pop
bound
aaa
sub
cli
pusha
adc
sbb
add
add
cmc
not
jp
jmp
mov
cmp
add
inc
push
push
add
xchg
je
lock
mov
inc
pop
mov
sbbb
adc
adc
sbb
sbb
test
fistpll
jl
cmp
cmp
aam
in
pop
add
test
stos
shrl
lock
enter
pop
add
mov
pusha
movsb
inc
add
stos
pop
fnstsw
test
or
or
adc
out
rolb
les
fnstsw
rcl
add
inc
and
into
cmp
pop
data16
je
xorb
inc
sub
jb
add
out
loopne
xor
mov
xor
hlt
in
cwtl
sbbb
ds
xchg
or
mov
dec
add
ret
decl
pop
cmp
xchg
rclb
imul
rorb
lcall
pop
and
mov
test
ja
pop
push
pop
mov
cmp
inc
mov
hlt
mull
xchg
xchg
and
add
loope
ret
add
int
xchg
cld
adc
popf
sbb
adc
stos
add
int3
pop
and
jo
int
mov
cwtl
popa
dec
inc
push
inc
jp
jns
add
loopne
xor
int
out
mov
shll
repz
loopne
aad
add
jg
shlb
push
add
hlt
push
pop
lock
add
leave
xchg
ror
popf
cmp
add
or
mov
adc
in
sub
lods
lock
addr16
add
inc
sbb
add
scas
lds
cmp
xor
mov
fiaddl
inc
pop
mov
testl
add
cmc
loope
ror
add
gs
dec
pop
jg
add
dec
mov
xchg
sub
addb
in
enter
add
roll
and
jge
mov
xchg
les
cmp
rolb
pop
sub
aam
ja
or
jb
sbbb
and
mov
aaa
push
add
sub
mov
xor
jo
pop
cwtl
notl
movsl
rol
push
ljmp
out
mov
xchg
pusha
in
sbb
or
test
addl
loopne
lret
loope
jmp
je
jg
mov
leave
imul
std
test
add
adc
jne
add
inc
ja
pop
mov
pop
jle
and
add
sub
fstpt
insb
inc
mov
sub
push
out
out
push
aas
js
stos
add
adcb
lock
les
add
fsubrp
or
push
jo
mov
adc
test
movsb
ljmp
in
inc
shl
loop
jmp
imul
aad
xor
lret
call
int3
jl
push
clc
rcrl
inc
scas
imul
cmp
cmp
mov
jns
add
je
in
mov
pop
gs
test
dec
in
xchg
xor
test
push
sbb
add
pop
aam
and
outsl
pop
lock
pusha
mov
inc
or
cmp
sbb
mov
dec
or
pop
fwait
or
dec
insl
repz
xchg
addb
aas
xor
fcmovnu
fsubs
add
pushf
inc
mov
in
int
mov
hlt
jge
test
sub
push
arpl
cmp
icebp
pop
add
mov
jg
loopne
mov
pushf
jge
pusha
or
test
mov
mov
stc
add
lahf
pop
sbb
int3
lahf
jo
push
leave
lods
mov
jbe
loop
pushl
mov
insl
mov
call
rorl
int3
jns
in
hlt
or
and
sub
adc
xor
arpl
inc
jb
sub
jnp
cltd
push
iret
mov
adc
or
dec
mov
pushf
cs
add
xchg
fwait
mov
add
and
inc
in
push
je
push
jno
mov
mov
jo
mov
cld
lret
inc
and
xor
mov
fldenv
cmp
ret
xchg
ljmp
scas
lods
sub
mov
adc
ss
stos
mov
sti
or
inc
and
out
shlb
clc
notl
int3
xchg
dec
and
rcrl
nop
enter
add
popf
fldcw
and
loopne
imul
sbb
shll
and
fstpt
inc
push
call
add
cmp
cli
add
ja
jecxz
imul
xorl
test
mov
jp
mov
cltd
and
cmp
mov
aas
xor
fdivrl
push
xchg
push
add
pop
sub
mov
je
loopne
jmp
pop
inc
sub
js
or
add
cmp
popf
adc
add
fwait
add
add
pop
cmpb
dec
aas
xchg
outsl
andb
rcrb
and
xchg
insl
xchg
and
imul
inc
out
xchg
lock
sub
rolb
xor
and
mov
lods
loopne
xchg
cmp
jmp
add
aam
fbld
mov
dec
adc
jo
pusha
dec
cmpsb
pop
add
in
jl
xchg
subb
mov
sbb
or
orb
ja
repz
outsb
lahf
enter
stos
xor
add
lret
shrb
sub
movsl
fs
ds
lret
or
cmpsl
jl
inc
add
outsb
scas
adc
sarb
in
pop
loop
daa
add
mov
xchg
movsb
mov
mov
sub
data16
pop
add
inc
sbb
mov
mov
cmc
pop
ja
das
cld
inc
std
add
in
and
lret
fucomi
xor
add
lcall
inc
mov
cwtl
and
or
dec
imul
and
cmp
add
sub
cmpsb
ljmp
fdivrs
cmp
sbb
loopne
mov
sbb
pop
cmp
and
inc
bound
int3
pop
hlt
add
mov
add
aad
fadds
add
xchg
clc
mov
fs
jb
and
hlt
lods
sbb
push
rclb
add
jmp
cmovns
in
mov
cs
add
pop
das
lcall
pop
comiss
inc
stos
arpl
ret
or
nop
xchg
sub
xchg
inc
push
sub
sub
pushf
test
aaa
cmp
shrl
or
cmpb
in
jns
cltd
inc
lods
mov
mov
imul
stos
loop
sbb
xor
add
les
aad
in
imul
dec
pop
xor
add
xchg
dec
enter
add
xchg
push
xchg
fwait
js
out
in
pop
hlt
xchg
adc
int3
bound
sti
lds
or
lcall
mov
stos
and
or
in
pushf
dec
add
mov
ss
xchg
add
das
push
sub
lds
add
enter
adc
addl
add
loope
outsb
dec
in
movsb
es
pusha
xor
dec
orb
and
ljmp
inc
ret
in
add
inc
xor
cwtl
inc
cmp
and
or
cmp
sub
and
xor
ss
xchg
repz
xor
jns
inc
xchg
add
in
dec
pop
xor
movsl
mov
fnstcw
cmp
pop
cmp
loopne
mov
pop
fdiv
add
je
jl
clc
add
fistl
cmp
and
int3
fcompl
std
or
cwtl
jo
add
das
push
cmp
jo
sub
in
mov
sbb
pop
mov
mov
int3
sbb
add
pop
lret
mov
shl
pop
std
pop
cld
xchg
mov
mov
push
push
rcrb
sub
xor
pop
inc
jo
mov
cmpsl
mov
ja
mov
das
popf
fcomip
mov
filds
dec
lods
inc
cmc
jae
pop
sbb
add
xor
sub
mov
inc
mov
adc
rolb
movsb
add
pop
call
xor
cld
sub
call
ret
jmp
loopne
pop
cmp
in
add
loop
int3
mov
repnz
les
mov
jle
nop
dec
sub
jb
ss
jae
xor
xchg
inc
hlt
cld
dec
outsb
sarb
add
shrb
xchg
push
jns
push
inc
jo
sahf
inc
pusha
mov
testb
into
inc
cld
push
add
ds
pop
lret
push
xor
std
jmp
stc
rclb
stos
mov
inc
add
imul
iret
add
add
cmp
add
xchg
movsl
sti
lret
pop
ret
stos
popa
or
lret
jmp
or
mov
add
jge
cli
mov
add
filds
rclb
fiadds
add
cmpsb
fisttps
nop
or
mov
or
das
mov
mov
xchg
aam
add
xchg
pop
lret
or
test
pushf
cs
decb
out
mov
dec
inc
mov
loope
into
cmp
adc
lret
mov
std
data16
or
add
aas
jg
add
aaa
xor
aam
adc
scas
jge
jle
cmc
fs
in
rclb
mov
push
aad
cltd
nop
or
bound
adc
test
push
test
fnstcw
cmp
clc
fmul
and
adc
sbb
jge
je
push
add
mov
push
sbb
pushf
and
in
hlt
mov
pop
jp
clc
aas
add
lea
addb
mov
clc
pop
lods
popl
aad
adc
sahf
outsb
add
fcmovu
add
and
cmp
sub
push
cmpsb
xchg
xor
mov
inc
mov
or
and
jp
adc
adc
and
pusha
mov
and
adc
xor
and
decb
aad
push
pop
mov
mov
xor
popf
shr
ret
push
add
mov
add
ret
pop
aad
add
sub
push
dec
lods
sbb
enter
ds
les
roll
fstl
ret
cs
sub
push
aad
mov
add
push
xor
enter
jge
jns
sub
mov
subb
ss
xchg
or
pop
inc
cmp
xor
addb
movq
or
jge
pop
fldl
je
sub
push
nop
cmpsl
int3
inc
dec
pusha
lock
jle
mov
hlt
push
leave
mov
inc
mov
cmp
aad
adc
adc
mov
push
and
cld
pushf
dec
sub
das
xchg
xor
js
mov
xlat
xchg
sub
inc
sbb
add
ljmp
negl
dec
mov
aam
enter
xor
add
mov
pop
push
sbb
add
sti
jecxz
inc
lods
sbb
mov
inc
sub
sbb
sbb
rol
inc
movsb
mov
shll
outsl
and
dec
sub
xchg
dec
sub
fs
dec
dec
sbb
aaa
inc
outsb
popf
add
jmp
nop
cld
test
jno
sbb
or
pusha
xor
sbb
popf
clc
movsl
xchg
mov
mov
xlat
push
or
out
insb
inc
js
shrl
dec
jle
movsl
mov
pop
cmp
outsl
mov
pop
pop
lret
in
cli
negl
sub
cmp
add
pop
or
lea
jns
and
sub
imul
xchg
in
ret
popa
test
and
mov
inc
push
and
ret
dec
push
pusha
add
push
jle
mov
lret
mov
sar
pop
mov
push
lea
mov
inc
add
aas
xorl
and
or
mov
sbb
push
fmul
push
addr16
push
add
fldt
iret
test
cmp
les
xor
sub
nop
jl
add
aam
mov
fs
mov
addb
inc
pop
dec
add
mov
mov
jo
lods
jge
mov
xchg
push
subb
dec
cmpsl
lea
sub
jae
ja
cli
add
movsb
add
xor
sti
sub
dec
or
cmc
dec
dec
and
pop
mov
in
jb
xchg
fmuls
sahf
mov
repnz
jmp
lods
jns
add
aad
popl
pop
addr16
ljmp
fadd
in
addr16
das
pusha
test
add
and
call
sbb
pop
je
push
pop
sbb
inc
sub
add
xchg
rclb
fs
cmp
pusha
push
lret
xchg
add
sarl
pushf
dec
rcrb
gs
roll
test
je
mov
dec
sbb
xor
pushf
add
dec
push
mov
int3
add
sbb
push
js
fsubp
in
fldl
push
sub
mov
rcrb
mov
ss
lods
lret
loope
test
push
nop
push
push
loop
add
test
push
push
mov
pop
icebp
js
rorl
xor
in
lea
xchg
mov
add
xchg
sbbl
in
stc
add
xchg
cwtl
add
cmpb
push
aad
mov
adc
popa
adc
lea
loop
cmp
gs
adc
mov
clc
ret
xchg
test
lahf
mov
add
and
xor
shrb
cmp
pusha
cltd
mov
in
nop
add
add
push
xchg
dec
cmpsb
pop
sub
mov
inc
inc
je
cmp
fwait
out
adc
jg,pn
incb
jl
lret
add
push
into
jecxz
add
or
stos
lret
jp
inc
shll
leave
mov
and
sbb
pusha
push
mov
cmp
xor
cmp
pusha
stos
xor
add
pop
inc
cwtl
cmp
daa
and
adc
lock
sbb
insb
sbbw
xchg
iret
or
and
or
adc
scas
push
rolb
pop
outsb
fadds
jge
mov
inc
cltd
add
dec
mov
mov
xor
aaa
xchg
push
sbb
xchg
dec
mov
cli
adc
pusha
int3
sub
dec
dec
mov
aam
push
add
mov
rcr
mov
xchg
add
mov
adc
jp,pn
nop
xchg
and
sub
add
test
pop
adc
test
and
aad
sbb
inc
jne
cmp
xchg
or
ficoml
dec
adc
pop
add
cld
push
mov
mov
pop
fnstcw
imul
xchg
add
jmp
mov
dec
nop
dec
lods
mov
or
add
and
lret
subl
pop
in
jl
push
xor
and
push
sub
sbb
xor
and
sahf
add
dec
inc
pop
sub
pop
daa
int
xor
je
add
sbb
lods
add
and
sbb
and
sub
pushf
inc
and
call
daa
add
imul
rcl
test
sub
mov
inc
sub
jl
mov
pop
sbb
jmp
adc
movsb
mov
movsb
adc
daa
pop
pop
lods
xchg
sti
xor
sub
jnp
jnp
mov
adc
sahf
dec
adc
shlb
sub
jp
das
sub
xchg
mov
inc
out
sub
dec
lret
sub
dec
rcll
stc
clc
aam
and
jmp
add
jge
in
inc
mov
xor
dec
push
test
loopne
xor
into
ja
mov
in
lea
dec
scas
js
cmp
pop
fs
inc
sub
jb
and
inc
in
jle
pusha
add
push
xor
sbb
inc
or
adc
in
lods
repnz
xor
mov
xor
jo
clc
pop
bound
roll
and
sti
jb
or
xchg
inc
sahf
push
movsl
fstps
subb
sub
popa
mov
or
fstps
outsb
xchg
rcrb
mov
int3
sbb
sub
js
push
jmp
mov
mov
jecxz
cld
insl
addr16
and
adc
out
pop
mov
push
cmpsl
push
push
orl
mov
xlat
adc
xor
adc
rcl
and
and
jb
jg
add
xor
icebp
push
das
loope
push
xor
push
lea
and
and
and
or
inc
icebp
mov
cmp
fxch
js
pop
je
loope
xor
mov
popf
ret
push
xchg
into
loopne
xchg
in
and
orl
fs
andw
daa
neg
mov
in
mov
and
dec
imul
daa
fstpl
inc
mov
push
and
ja
cmpb
outsb
push
inc
mov
add
xor
xor
add
and
lds
enter
jae
popf
stos
add
sub
addr16
pop
pusha
ss
imul
xor
testb
aad
ds
insl
sbb
xor
mov
pop
add
adc
imul
dec
jb,pn
cmc
jno
jno
sbb
mov
test
and
mov
sub
nop
mov
adc
and
push
pusha
outsb
jecxz
in
xor
pop
in
push
mov
xchg
mov
adcb
icebp
push
sbb
add
rcrb
shlb
shl
pushf
jb
int
divb
add
xor
es
popf
adc
push
nop
cmp
popf
or
xchg
daa
pusha
mov
in
jg
adc
sub
shrl
pop
mov
lret
xchg
imul
and
jns
add
add
call
pop
mov
popl
in
test
loope
int
inc
movsb
jb
pop
loopne
add
or
out
in
adc
push
lock
imul
cmp
add
pop
stos
loop
lock
xor
xor
pop
movsl
int
mov
lldt
cmp
cmpl
rorl
shl
sub
enter
inc
mov
push
xor
dec
shrb
aad
pushf
inc
es
scas
enter
enter
xchg
mov
dec
hlt
add
jbe
jecxz
mov
addb
or
push
loopne
add
jnp
mov
cld
sub
xor
shl
and
in
push
rcrl
ss
mov
push
loop
jne
add
jno
dec
xchg
mov
rclb
xchg
sahf
pop
addb
es
add
insl
lea
aad
pop
aam
and
lods
ret
or
inc
jl
push
add
addl
sub
jmp
jl
lods
xor
inc
add
pop
and
test
inc
mov
xchg
popf
andb
test
dec
push
jne
jge
or
xor
dec
add
cmpb
cmp
jmp
jns
loop
sub
and
pop
jbe
xchg
jno
rcrl
sbb
and
mov
sub
scas
lock
std
cwtl
test
jge
and
lahf
in
daa
mov
xchg
push
lods
bound
stos
loop
movsl
call
or
movsb
rclb
or
rolb
lock
add
movb
mov
scas
subl
jo
mov
mov
lahf
sub
push
addl
addl
add
dec
push
xchg
xor
cmp
jnp
dec
add
aas
sbb
or
lret
popf
mov
imul
add
mov
lret
inc
pop
inc
adc
out
pop
orl
pop
insl
sbb
out
int
and
dec
push
adc
jns
jnp
add
outsl
mov
rorb
rorb
cld
in
test
inc
cmpb
lds
test
es
dec
add
insl
pop
pusha
mov
sbb
add
mov
xchg
push
test
gs
call
xor
xchg
add
idivb
and
and
add
mov
inc
and
pusha
jb
fildl
jge
add
aam
xorb
pop
xchg
sbb
daa
mov
insb
push
sub
dec
sbb
push
jae
lea
jo
icebp
shlb
nop
add
rolb
push
decl
add
pop
adc
add
xlat
fsubr
or
fmul
pushf
add
inc
pop
fiadds
sbb
mov
mov
adc
rclb
loope
insb
fsubrl
fistpll
mov
dec
inc
pop
add
sub
sbb
loope
cld
and
push
jno
fwait
bound
movd
popa
adcl
cmp
and
gs
subb
rolb
sbb
setno
or
test
adc
add
movsb
sbb
or
push
insb
dec
sti
xor
pop
add
xchg
inc
sub
cmp
pop
mov
adc
clc
and
push
mov
test
fdivs
pop
js
push
lahf
bound
pop
or
mov
add
out
movsb
jae
fisubrl
repz
sbb
cwtl
dec
sbb
mov
fs
push
cmp
aad
xchg
cmp
add
xchg
pop
loope
cld
push
mov
cmp
mov
lcall
add
push
or
xchg
jns
sbb
adc
pop
or
nop
add
xor
adc
sarb
jb
pop
sbb
mov
lea
fsts
adcl
mov
in
fildl
jecxz
rorb
push
jns
adc
insl
xchg
sbb
inc
fwait
cmp
rorb
and
or
mov
sarb
jmp
push
lcall
in
sarb
pop
inc
or
push
icebp
dec
mov
stos
popf
test
and
les
xchg
dec
add
neg
add
push
and
inc
add
insb
pop
mov
inc
nop
push
cld
fs
icebp
and
js
sub
in
adc
inc
fs
mov
insb
inc
and
lock
mov
push
or
add
and
jmp
mov
aad
xlat
cmp
adc
and
add
imul
add
and
fldl2t
std
fadds
adc
mov
icebp
inc
xchg
add
mov
jle
fs
and
inc
add
xchg
sarb
loope
subl
pop
pop
and
mov
mov
jne
lahf
push
fmuls
in
pop
dec
lret
shrb
xchg
nop
je
push
jl
fwait
adc
popa
sbb
ret
lret
je
js
push
and
push
loope
add
dec
push
in
inc
xor
bound
mov
add
daa
ja
adc
and
or
mov
andb
inc
jle
adc
adc
xor
push
and
push
stc
dec
sbb
or
pop
call
xchg
xor
pop
push
inc
roll
mov
clc
xor
inc
add
inc
or
mov
mov
sub
in
pusha
jl
pop
add
inc
mov
loopne
push
les
inc
aam
jle
scas
fsts
pop
enter
test
jne
mov
add
std
jae
cmc
xor
movaps
dec
adc
ret
add
pop
dec
je
in
mov
out
nop
pop
sbb
fbstp
mov
sbb
push
cmp
sbb
pop
addb
shl
dec
jnp
add
std
xor
dec
add
cld
lds
fs
sub
xor
addb
pop
movsl
ror
push
mov
daa
cwtl
je
pusha
jnp
cmpsl
repz
mov
int
and
xchg
imul
sub
std
daa
mov
add
mov
loope
and
mov
lods
fldlg2
das
and
jae
lret
cmpsb
push
cltd
pop
into
xor
sub
cwtl
jno
jns
sbb
lods
clc
les
enter
xchg
test
and
pop
lret
addb
sub
mov
push
inc
in
clc
or
les
cltd
and
push
add
mov
cmc
lock
aam
sub
xor
ret
andb
sub
aaa
and
add
dec
inc
mov
outsb
sub
jmp
sbb
sbb
and
cmc
sbb
in
adc
and
sbb
jne
mov
xor
scas
lods
jnp
jp
add
les
sbb
rcl
add
rcr
test
test
adc
jmp
mov
dec
sub
js
push
add
mov
movsb
sbb
f2xm1
cmp
lret
movsb
mov
stos
dec
ffree
adc
add
rorl
xchg
fsubl
in
adc
mov
lock
add
fcoml
cmc
andb
mov
push
bound
sbb
pop
and
or
inc
xchg
dec
cmp
xchg
cmp
mov
das
push
and
cwtl
or
sub
and
sbb
int
and
hlt
imul
mov
repnz
lods
mov
enter
jle
pop
push
dec
dec
mov
cwtl
push
push
mov
push
pusha
jle
or
in
popa
jnp
hlt
in
cmp
push
mov
pop
jbe
sbb
jmp
insb
cmp
adc
pop
int3
mov
xlat
imul
loopne
dec
cmp
loopne
enter
add
push
and
pushf
ret
sub
adc
add
dec
add
adc
cld
pop
mov
add
mov
cwtl
movsl
sahf
cli
imull
lock
shrl
cmpb
and
test
cwtl
loop
hlt
xchg
imul
xor
sub
aas
or
mov
push
push
pop
add
sub
and
js
mov
mov
leave
or
addb
mov
insl
movsb
outsl
cwtl
inc
adc
das
jae
imul
scas
mov
pop
pop
ret
add
pop
std
dec
in
arpl
cmp
orl
dec
add
data16
js
and
mov
cmp
scas
mov
dec
sub
lods
jp
ds
cmp
or
add
inc
gs
add
mov
cmp
xlat
pop
add
pop
in
sahf
mov
and
sbb
and
inc
out
rorl
xor
inc
and
gs
mov
inc
xlat
sbb
addr16
pop
pop
lods
xchg
orb
mov
or
lret
mov
inc
mov
pop
clc
jle
mov
out
es
lret
inc
orb
popf
adc
outsl
cwtl
push
cmpsb
jmp
test
fnsave
cmp
or
add
jmp
fsubrs
cmc
mov
lds
mov
add
dec
loopne
loopne
and
pop
stc
outsl
push
xchg
test
mov
orb
std
sbb
shlb
test
mov
stos
pop
jbe
xorb
adc
add
sub
mov
nop
mov
mov
push
or
sti
and
jecxz
sahf
fwait
repnz
dec
pop
mov
xchg
mov
add
ret
scas
add
xor
out
in
int3
jne
enter
xchg
jbe
add
call
jmp
add
shl
mov
sub
mov
and
inc
sti
sar
lret
add
mov
xchg
daa
and
ret
out
sbbb
jb
das
push
loopne
cmp
inc
loop
sbb
adc
add
shlb
fnstsw
cmp
test
add
imul
mov
in
mov
mov
popa
test
leave
sarl
inc
call
xorb
ficoml
push
test
leave
int
sbb
imul
roll
xchg
popf
andl
cmp
and
fwait
test
dec
flds
inc
and
and
dec
pop
sub
test
mov
mov
loope
test
jmp
xorb
add
sub
mov
pop
arpl
aaa
xor
scas
mov
loopne
outsl
out
mov
repz
push
add
cmpsb
mov
sbb
stc
das
add
test
test
xor
ja
add
dec
sub
mov
clc
add
rclb
add
mov
mov
jl
cmp
fldl
jl
sbb
xchg
mov
hlt
cmc
fisttpl
loop
xor
arpl
mov
mov
sahf
aaa
adc
jg
jae
imul
cs
popa
dec
xchg
fwait
std
loopne
add
sbbb
sar
adc
popf
mov
add
dec
xchg
fidivrl
icebp
cmpsb
ss
imul
jnp
mov
arpl
cmp
decb
stc
xor
insl
jno
mov
and
adcb
inc
push
mov
addr16
shlb
inc
dec
mov
pop
andl
out
xor
movl
fisubrs
cmp
add
sbb
jl
jb
push
test
add
pusha
icebp
loope
fisttpll
rclb
in
add
fdivrp
ret
mov
mull
or
push
mov
lea
or
ret
jl
mov
rcrb
push
enter
add
cmpsb
sub
dec
add
push
fs
adc
push
add
add
ss
add
test
subb
sub
push
pop
xor
dec
lods
xchg
xlat
loopne
dec
out
rorl
loopne
aam
adc
or
outsb
jb
sbb
cmpsl
add
pop
mov
adc
add
push
sbb
je
dec
push
shll
mov
clc
jge
add
jo
sub
rolb
gs
push
add
f2xm1
xor
adc
shr
add
push
dec
xor
sti
mov
mov
cmp
push
int
scas
repnz
inc
add
shll
push
jl
outsl
add
lods
shll
in
in
dec
sub
mov
cmpsb
dec
repz
xchg
lock
rolb
bnd
or
push
mov
add
cltd
cmp
stc
sbb
flds
sbb
jno
mov
div
movsb
cmp
loopne
shrb
daa
adc
fdivrl
out
jns
fstps
loop
lock
mov
addb
push
xorb
in
add
inc
mov
cmp
xchg
xchg
xlat
push
add
cmp
lods
arpl
adc
rcrl
xor
add
sahf
iret
xchg
stos
int
fs
add
inc
in
aas
cmp
addb
push
mov
arpl
daa
cmp
inc
xchg
popa
or
mov
insl
mov
test
mov
push
xchg
sti
int
jmp
fadds
sub
enter
je
add
scas
cmp
add
push
fdivl
push
js
or
inc
and
pop
cld
or
jbe
rol
add
pop
add
sbb
inc
add
in
aaa
and
pop
call
pusha
nop
fsts
lea
std
and
pop
clc
ds
inc
or
lods
add
jo
dec
gs
cltd
and
cmp
lret
mov
loopne
inc
mov
sbb
sbb
cmp
add
mov
mov
std
add
mov
xorb
inc
and
push
xchg
arpl
xor
push
adc
les
mov
dec
mov
jns
add
inc
or
jae
and
call
adc
push
inc
jle
xchg
and
mov
dec
dec
push
add
out
aaa
in
add
mov
pop
int
xchg
sbb
mov
nop
enter
add
add
dec
sbb
pusha
ja
sub
mull
push
andb
loopne
mov
outsl
sub
into
mov
add
cld
fldl
push
pop
sub
mov
pop
fs
les
xchg
fisubl
sbb
test
push
dec
mov
mov
testl
xchg
call
jl
loop,pn
or
push
lret
dec
arpl
jae
insl
jmp
mov
push
add
or
push
or
lods
xchg
sbb
std
daa
aas
add
mov
add
outsl
mov
adc
add
mov
push
adc
pop
xchg
push
pop
mov
cld
sub
adc
fdecstp
sti
add
test
in
mov
adc
add
enter
das
cltd
cwtl
add
int
mov
add
and
inc
aad
mov
faddl
fidivl
push
sti
cld
in
or
cmp
add
mov
cld
pop
adc
and
xlat
adc
pusha
scas
sahf
pop
lea
mov
push
loope
jnp
ret
xchg
jge
dec
push
jo
pop
ret
push
jno
and
loopne
mov
add
mov
push
pop
add
xor
push
cld
shl
cmp
jmp
addl
add
test
or
xor
mov
adc
xor
fcompl
push
data16
faddl
lock
test
xor
ret
pop
cmpsl
arpl
lock
add
repnz
movsl
xchg
push
push
incb
out
bound
mov
xor
cmp
ljmp
call
or
add
jge
cltd
add
test
inc
scas
aas
jecxz
add
ss
ret
mov
lods
mov
scas
lret
add
filds
stos
sub
fstl
push
popa
aam
in
hlt
in
add
dec
xchg
mov
push
addl
enter
jo
sti
dec
jge
push
mov
and
add
and
test
pop
movsl
stos
jge
jle
pop
inc
imul
pop
mov
shrb
sub
icebp
pop
mov
and
cmc
pop
movsb
xor
filds
sbb
add
mov
int
pop
mov
add
mov
cmc
sub
pop
in
sbb
sbb
and
pop
mov
xor
clc
push
and
inc
add
stos
imul
mov
cmp
test
jg
xchg
cmp
loope
insl
mov
sahf
add
ja
jns
add
icebp
xor
adc
frstor
outsb
lret
cmp
notb
cwtl
and
decl
fwait
adc
and
clc
add
loope
inc
orb
jbe
ja
add
cmp
add
stos
gs
repnz
xor
ret
out
psubq
sbb
mov
fdivrp
pop
xorb
jb
jp
popa
jmp
sbb
les
and
js
roll
ss
rcrb
lock
jne
loopne
add
fcompl
pop
dec
mov
sbb
pop
mov
repnz
pop
jb
or
sbb
imul
insb
push
enter
and
out
shrl
data16
push
xor
push
push
adc
dec
jo
mov
xchg
roll
aaa
push
insl
or
pusha
repz
lea
xchg
push
inc
add
pop
pushf
xchg
cwtl
pop
add
popf
jle
xchg
dec
adc
addl
jg
add
imul
inc
cmpb
in
in
dec
mov
add
lret
jle
sbb
inc
in
std
or
iret
add
dec
mov
outsl
sti
add
add
out
lods
or
add
lea
test
shrb
jg
add
push
sti
mov
and
add
or
add
rol
mov
pop
mov
jp
and
int
pushf
add
and
addr16
and
mov
in
int
mov
push
add
jb
xlat
inc
dec
push
or
pop
add
cmp
jl
cli
inc
and
out
mov
js
sub
leave
add
shrb
add
push
imul
pop
push
pop
lret
push
pop
adc
push
xorl
jmp
cltd
or
pop
nop
add
pop
mov
scas
xchg
imul
mov
push
pop
movsl
sbb
add
dec
jae
add
gs
outsl
dec
add
mov
inc
pop
push
ds
sub
sbb
cmp
sub
mov
push
sahf
pop
sub
scas
mov
insl
stos
sbb
cmp
xchg
cwtl
pop
scas
lret
add
inc
mov
sub
add
lea
mov
inc
stos
sbb
jae
pop
and
js
xchg
cmp
std
and
sbbb
jb
mov
push
cmpsl
jae
add
xchg
adc
hlt
mov
lret
sbb
lds
push
jno
stc
jge
sub
mov
mov
cmpl
pusha
lret
mov
call
add
mov
pop
lret
add
fildll
push
cmp
mov
or
std
push
addl
inc
dec
mov
add
and
sahf
add
imul
inc
sub
sbbb
xor
sub
push
lret
or
enter
cmp
add
jle
daa
mov
add
scas
cmp
mov
xorl
fildl
mov
inc
rcl
ret
add
das
cmpsl
ror
mov
and
aaa
dec
cmp
pop
pop
push
sar
pop
test
je
lds
sbb
nop
or
jp
adcb
cmp
nop
mov
sub
fsubl
add
and
jmp
add
sub
xlat
test
scas
xorl
iret
cmp
out
mov
add
out
adc
ret
cwtl
add
jbe
das
xchg
ret
lods
aaa
mov
sbb
inc
push
jnp
sbb
repz
sarl
add
push
add
int
imul
add
pop
adc
add
bound
xchg
pop
push
mov
push
or
mov
inc
jb
loopne
aaa
add
inc
dec
decb
inc
xor
sti
loopne
int3
dec
mov
sub
xor
mov
shrl
push
and
sub
sub
into
add
sub
and
cmp
add
ljmp
add
cltd
or
fadds
jmp
inc
add
imul
fisttps
in
movsb
xor
mov
je
jge
xor
or
jmp
pop
es
add
mov
cmp
arpl
icebp
sarb
push
pusha
dec
cmpsb
add
es
or
jno
add
repnz
or
mov
divl
mov
lret
cmp
sub
lcall
rcrl
fisttpll
mov
je
outsb
test
jae
repz
mov
mov
pusha
push
shr
test
jo
and
sub
les
insl
lock
mov
push
nop
adc
test
adc
shlb
pushf
cli
push
add
or
xor
lods
cvtps2pi
addr16
test
call
jne
cmpsl
cli
in
and
push
adc
adc
nop
int3
add
cmc
es
jmp
pop
in
sbb
push
add
je
arpl
loop
scas
icebp
mov
aad
dec
mov
dec
call
push
jg
xchg
mov
ljmp
test
pop
jns
jge
dec
pop
in
imul
cltd
and
and
pop
xor
jo
xchg
push
or
scas
push
stos
adc
jae
jnp
pop
inc
lahf
add
xchg
mov
dec
roll
cmp
mov
test
push
xor
sbb
cmp
ret
mov
sbb
ror
repz
shlb
xchg
mov
out
mov
scas
lret
add
or
stos
rolb
testb
add
dec
dec
call
push
or
add
out
and
and
call
fildl
push
mov
inc
add
sbb
push
add
cld
jecxz
mov
xor
addb
lock
inc
add
fildll
mov
bound
out
mov
cmp
or
imul
es
and
popl
push
pop
das
lret
mov
call
mov
orb
mov
xor
push
xor
push
bound
cmp
mov
bound
xchg
push
inc
jae
imul
and
ret
add
lret
bound
popf
inc
rcrb
xchg
dec
in
lcall
lock
movsl
aas
add
jg
orb
int3
jo
fiadds
mov
add
mov
rolb
lcall
std
negb
add
enter
mov
xor
test
sbb
or
das
add
subb
cmc
add
scas
out
int3
add
hlt
shlb
jno
ljmp
lahf
adc
stos
orb
les
lods
gs
fnstcw
dec
push
lea
pusha
shrb
lahf
xor
add
imul
jp
fdivrl
test
daa
jle
sbb
add
sbb
push
adc
fstpt
pusha
dec
xorb
pop
jl
cmp
sbb
into
data16
sahf
jns
add
and
inc
mov
dec
add
fdivrl
sbb
push
ds
mov
cmp
add
ja
dec
loopne
sub
xchg
in
popa
cmp
push
cmp
adc
shlb
push
lret
add
nop
xchg
inc
fs
imul
and
out
lods
repnz
add
cwtl
ja
out
fcoml
shl
add
rolb
ret
add
and
sbb
fdivp
andb
and
imul
mov
cmp
imul
and
mov
add
popl
jge
xchg
xor
and
push
lods
clc
fcmovnbe
inc
in
mov
add
jno
lahf
inc
roll
add
iret
push
push
gs
inc
add
cmpsb
adc
outsl
push
mov
cmp
jo
mov
inc
inc
xchg
add
xchg
add
push
loopne
sub
mov
xor
lret
and
in
int3
mov
out
cmp
or
je
and
pop
xor
add
shrb
inc
xchg
rcrl
std
ljmp
mov
cli
add
pop
sti
jbe
pop
and
add
sub
add
sub
lret
jp
mov
movsb
sbb
jo
cmp
loopne
insb
dec
xor
push
insb
sbb
lds
arpl
add
push
push
jbe
out
jle
mov
dec
sbb
mov
cmpsb
mov
add
sbb
in
cmp
xor
nop
js
mov
sbb
pop
ds
push
push
js
jle
lock
ljmp
cli
add
std
push
jmp
or
das
aaa
in
adc
sub
seta
fs
shlb
and
jae
das
pop
sbbb
cwtl
scas
cmp
pop
daa
or
out
adc
popf
outsb
fnstsw
sub
or
add
sbb
adc
cli
add
xorb
push
add
nop
pop
adc
inc
add
vrsqrtps
out
adc
sbb
aaa
test
cmp
inc
xor
or
xchg
jg
mov
fsubl
test
sbb
xor
xchg
xchg
push
fisttps
adc
loope
mov
pop
int3
dec
je
pop
sub
lret
add
sbb
ljmp
sub
nop
push
andb
inc
sbb
lret
repnz
push
out
dec
mov
add
fs
mov
daa
mov
cmp
cmp
or
lcall
xchg
insl
inc
dec
outsb
out
and
arpl
and
pop
cli
add
sub
push
rcrl
inc
push
mov
leave
rorb
movb
xchg
add
xor
cmp
cmp
mov
sbb
shll
add
call
ret
add
sbb
mov
testb
enter
js
testl
add
fdivrs
add
les
push
push
imul
fnstsw
add
mov
pop
push
dec
add
into
popl
dec
add
pop
xadd
test
aad
into
insb
das
mov
inc
dec
lea
push
test
loopne
and
rcrl
cmp
push
popa
or
out
movsl
add
cmp
cmp
movsb
xor
aam
jg
mov
inc
sarb
scas
mov
push
sub
es
push
dec
add
sbb
inc
mov
leave
out
sub
cli
cmp
mov
cmc
shrl
pop
mov
shlb
sbb
inc
inc
cmp
or
mov
rcrb
and
sbb
pop
imul
pushf
fsubrs
add
add
bound
cmp
test
cmpb
mov
je
adc
mov
ret
push
cmovb
shlb
and
jl
or
add
inc
stos
sbbl
shll
iret
pop
cmpb
aaa
add
into
cmp
jmp
popl
xchg
fwait
jge
push
push
sub
xchg
loop
mov
add
out
decl
out
fidivs
sub
lret
incb
insl
push
pop
dec
and
roll
test
sbb
not
inc
and
xchg
sub
inc
pop
push
rclb
sub
out
add
bound
cmp
cmp
mov
addr16
sbb
out
lds
ss
pop
or
mov
pop
jno
ds
push
ljmp
mov
dec
jg
add
jge
mov
add
pop
sbb
sar
popa
mov
xchg
mov
push
ret
jno
add
mulb
cmc
add
icebp
push
clc
add
sub
dec
aam
add
imul
sbb
lret
sub
jle
add
jl
jge
lock
js
jle
add
push
or
xor
mov
mov
cmp
xlat
pop
test
mov
pusha
sub
ja
or
adc
xchg
hlt
stc
iret
leave
fistps
aas
out
pop
xchg
in
shll
stos
ltr
loop
rcll
pushf
jecxz
inc
add
inc
sar
mov
cmp
fisubs
dec
in
sbb
lahf
fcompl
jnp
push
in
push
leave
or
jo
and
cld
js
xchg
mov
in
fistl
fiadds
xor
cmp
mov
sahf
xchg
adc
fucomp
push
les
subl
pop
mov
fistpl
or
add
add
sbb
add
jns
mov
add
sub
mov
imulb
add
scas
xchg
mov
jno
cmc
out
add
mov
push
pop
movsb
add
sub
popl
leave
dec
outsb
add
dec
cltd
add
mov
es
outsl
lahf
insl
cmp
jp
testl
pop
ljmp
stos
jb
add
add
daa
ret
js
cmp
xor
sub
dec
sahf
xor
push
fisubrs
xchg
mov
lods
mov
sbb
jns
push
shrb
sub
mov
mov
popa
loope
mov
mov
mov
mov
dec
jmp
mov
ret
je
or
imul
add
sbb
scas
push
in
add
pushf
std
test
cltd
xchg
cmpsl
add
push
sub
add
add
lret
push
mov
jmp
adc
not
sub
add
pop
pop
fadd
mov
scas
movsl
jno
xchg
call
sarl
sub
adc
mov
in
inc
inc
mov
pop
clc
push
add
aad
sti
cmp
xchg
cmp
pop
push
out
scas
shll
or
lods
stc
push
cmp
xlat
dec
scas
push
decb
jae
fnstcw
adc
inc
xor
orb
cmp
aam
stos
cmp
hlt
add
pushf
push
add
mov
fs
pusha
test
adc
push
push
fldcw
sub
inc
int
add
inc
cmpl
andl
xchg
pusha
dec
rclb
mov
push
xor
mov
lods
loope
dec
or
mov
pop
sub
nop
aas
enter
jbe
lock
js
ljmp
add
push
adc
or
add
mov
mov
dec
imul
mov
jnp
xor
mov
mov
adc
add
jbe
mov
mov
inc
and
push
hlt
mov
sub
xchg
cli
add
add
sub
mov
xchg
or
or
popf
or
and
cli
add
pop
dec
cmc
and
xorb
push
add
push
mov
jge
arpl
add
je
int3
inc
aam
xlat
aad
and
cmp
mov
mov
or
aam
and
ja
and
scas
jle
sbb
xchg
add
shrb
testb
inc
xchg
fistps
adc
dec
push
aaa
jae
inc
decl
fisubl
push
and
sub
sub
sahf
lock
sub
adc
dec
pop
sbb
mov
push
add
out
outsl
leave
pushf
arpl
cmp
jmp
dec
in
mov
test
ret
cmp
lahf
or
adc
sbb
pushf
daa
xor
inc
in
lods
sbb
xor
out
push
or
test
sbb
stos
sub
and
add
or
and
lahf
and
js
fstpt
or
shrb
fadd
dec
adc
sbb
mov
out
dec
pop
fsubrs
add
mov
mov
cmpsb
rcrl
inc
inc
mov
cmp
and
add
jmp
dec
pop
pop
add
push
lahf
jmp
inc
add
and
cmc
test
test
xor
repnz
mov
push
stos
notb
cmpsl
pushf
es
icebp
and
movsl
add
adc
dec
das
and
add
add
xor
mov
std
push
ja
or
hlt
mov
push
cmp
adc
leave
loopne
jmp
add
and
push
inc
or
push
lret
pop
mov
sbb
test
mov
dec
shld
add
inc
mov
call
outsb
mov
dec
daa
aad
add
adc
cmp
and
and
push
dec
inc
ret
push
sbb
add
jp
add
mov
fdivl
aad
and
subb
add
sbb
mov
mov
sub
and
push
fiadds
push
xchg
test
dec
cltd
les
mov
jle
push
or
nop
sub
add
lods
and
add
push
gs
flds
mov
cmp
test
roll
out
cmc
sbb
pop
push
enter
mov
repz
dec
mov
sub
push
loope
push
add
push
sbb
and
test
and
dec
mov
mov
push
popf
fisubl
testb
out
test
mov
add
mull
dec
out
jno
xor
xor
fcoml
lret
in
push
sbb
leave
iret
fwait
pop
dec
cmc
pusha
pop
scas
mulb
adc
xchg
andl
adcb
icebp
jecxz
mov
xchg
xchg
call
adc
in
cmp
inc
and
insb
int3
ljmp
mov
and
adc
add
aam
adc
stos
in
add
femms
aad
add
in
subl
add
cmp
mov
aas
or
insl
xchg
pop
pop
push
jbe
push
inc
add
out
dec
and
add
jle
push
add
stos
mov
invlpg
sbb
adc
and
enter
sbbb
adc
and
xchg
in
xorb
add
adc
cmp
dec
rcrb
dec
mov
mov
jo
out
mov
cmp
repz
out
sub
pop
lret
inc
movsb
inc
mov
xchg
pop
xor
jno
and
or
mov
push
hlt
ficomps
cwtl
fsubl
sbbb
fadds
adc
xchg
ljmp
pop
aaa
lahf
cltd
and
ret
out
cld
inc
add
lods
xchg
jne
sbb
add
fsubrs
pop
enter
xchg
push
cmpsb
jl
mov
sahf
je
loope
jo
jmp
int
xchg
adc
xchg
mov
adc
scas
sbb
sub
shlb
mov
add
cmp
subl
testb
and
cmp
sti
add
mov
xorl
push
sbb
sbb
fadds
dec
cmpsl
push
push
insl
into
sub
inc
add
pop
mov
cld
dec
xorb
fmul
jns
push
adc
ds
cltd
sbb
jg
push
insl
push
add
xlat
int
xor
dec
and
leave
dec
sarb
adc
dec
inc
mov
fisubl
adc
fnsave
push
shrb
pushf
shld
fimuls
pop
push
cli
in
lcall
sbb
pushf
lock
dec
pop
mov
test
pop
test
movsb
ds
sbb
shlb
sti
mov
mov
push
or
outsl
pop
dec
sub
push
inc
push
push
lods
lcall
xlat
mov
jae
sbb
lods
or
inc
cmp
testl
test
addl
jbe
aam
sbb
add
sbb
mov
iret
xor
fs
pop
std
daa
push
or
in
mov
mov
add
ljmp
inc
mov
and
push
xchg
jnp
loopne
mov
and
lods
jnp,pt
mov
fdivrl
mov
push
je
scas
pusha
cmp
push
add
inc
or
fadds
mov
mov
fsubs
sub
enter
or
stos
cmp
into
andb
push
add
jnp
jp
push
std
faddl
int
sub
mov
aas
cwtl
jnp
jle
sbb
jl
xchg
pop
dec
or
cmp
dec
ljmp
inc
mov
movsb
pop
add
push
xchg
lret
test
enter
lock
fimull
pop
sub
xorl
jnp
jmp
call
or
push
mov
mov
test
out
lret
push
add
dec
add
mov
dec
fcomps
add
fdivs
icebp
in
rorl
in
test
and
shl
cmpsb
cmp
and
mov
mov
jle
sarb
fdiv
jle
jecxz
jno
nop
jecxz
dec
inc
fdivrs
and
mov
js
in
xchg
sub
iret
xchg
mov
add
fimuls
testl
rol
adc
lods
scas
test
call
or
sub
jno
sbb
rolb
and
dec
sbb
mov
in
and
pop
lods
ljmp
pop
add
mov
add
dec
popl
sbb
lcall
push
mov
sub
out
adcb
pop
adc
nop
out
sub
fs
xchg
inc
and
dec
mov
fidivl
xor
fldenv
cmp
pop
add
adc
lods
rolb
sbbb
call
dec
and
mov
ja
jl
outsl
inc
sbb
adc
pop
pop
push
sahf
dec
lahf
test
cmp
push
add
aam
ja
dec
leave
xchg
and
or
cmpsl
adc
rol
mov
jno
pop
adc
push
xchg
lret
inc
push
scas
out
dec
out
and
push
in
leave
prefetch
jmp
lods
mov
adc
adc
daa
int3
add
and
aas
sub
sub
nop
add
lahf
je
aaa
cmc
inc
in
clc
or
outsb
and
subb
inc
rolb
or
pop
jmp
add
mov
mov
mov
mov
adc
adc
or
repnz
add
mov
out
cmp
adcb
cmp
and
or
test
movb
or
enter
dec
and
flds
inc
scas
mov
add
cmpsl
lret
push
xorw
sar
push
nop
into
inc
push
test
fmuls
in
inc
sbb
loopne
or
mov
and
and
mov
mov
shrb
mov
add
fisubl
inc
dec
dec
mov
lds
test
push
mov
sbb
add
cltd
add
sub
filds
rcr
push
shll
setl
leave
out
dec
notb
in
sbb
mov
mov
dec
add
rolb
mov
and
shll
lcall
lahf
mov
push
add
pop
inc
or
repz
and
xor
mov
xchg
xchg
jo
call
test
sbb
stos
pushf
nop
add
mov
dec
movsb
add
cmpsb
push
or
leave
push
xchg
add
jle
je
test
movsb
dec
inc
inc
cmp
mov
inc
rolb
mov
jge
inc
add
dec
mov
arpl
rcr
imul
inc
push
inc
aam
mov
aam
push
ret
pusha
adc
into
sbb
inc
nop
lods
or
jle
loopne
fsubr
add
out
sub
call
test
dec
add
mov
jl
add
adc
rorb
or
add
fdivs
fmul
inc
call
sbb
pop
jno
sub
and
add
cmp
lock
and
push
push
adc
enter
nopl
pop
fs
pop
inc
sarb
sub
js
mov
dec
mov
aad
lock
add
inc
or
add
fldenv
push
pop
out
test
add
push
push
mov
push
sub
add
lret
cmp
loopne
push
dec
and
into
inc
fs
add
mov
push
loopne
into
popa
ds
mov
sub
xor
push
xlat
addr16
jmp
xchg
or
movsb
dec
or
in
and
adc
rclb
cmp
add
lret
push
movsb
xchg
ret
dec
mov
leave
in
in
pusha
es
adc
mov
push
hlt
mov
jl
sbb
fwait
pop
lmsw
dec
insl
sub
pop
xor
fsts
sahf
add
inc
xor
and
add
fcomi
lock
xchg
fmul
jg
and
in
adcb
lods
adc
insb
adc
jg
xor
push
xor
cld
sbb
mov
pop
inc
scas
push
pop
sub
popa
fs
mov
in
lret
fadd
inc
ja
cld
xchg
bound
std
repnz
dec
inc
fsub
ficoml
scas
adc
push
es
push
cmp
push
imul
ds
add
sbb
scas
lock
jl
test
fadds
out
pushf
xor
dec
jo
dec
xchg
adc
fldcw
push
cltd
add
scas
movsb
inc
mov
pop
sbb
lahf
out
pop
and
pop
xchg
mov
push
loopne
jb
push
xor
mov
sarl
loopne
andb
inc
lret
in
add
jo
dec
mov
jb
cmp
mov
test
inc
xor
and
call
sub
shll
rcrb
xor
sbb
pop
push
xchg
or
test
and
mov
jl
jmp
addb
test
roll
dec
push
dec
shlb
loop
xor
cli
ljmp
sarb
push
stos
cltd
fs
les
xlat
jecxz
push
add
xchg
push
dec
enter
loopne
and
sub
lret
lcall
inc
enter
push
mov
sti
add
push
stos
adc
or
pop
scas
add
insb
iret
push
jmp
js
dec
cs
roll
inc
mov
add
push
frstor
mov
mov
jmp
sub
add
dec
rcl
or
add
les
mov
clc
leave
les
sahf
test
push
mov
pusha
test
gs
decb
sub
and
push
xchg
cmp
fdivs
sbb
fists
das
sub
sarb
xchg
imul
or
insb
or
movsb
push
mov
pop
xchg
daa
mov
sbb
push
adc
xor
xlat
adc
fsubrs
std
mov
inc
call
jecxz
sahf
sbb
push
xchg
int
fimuls
push
test
fcomps
pop
inc
xlat
aas
cmp
scas
push
push
shr
add
iret
outsl
mov
in
shrb
popa
aas
sbb
mov
mov
stos
jg
inc
repnz
inc
imul
inc
dec
lret
gs
mov
pop
shrl
add
adc
adc
fwait
add
sbb
je
sub
fwait
jb
out
mov
addb
rolb
dec
xchg
or
icebp
loope
les
das
add
mov
inc
or
pop
rcll
jne
call
addb
out
pop
push
xchg
int3
mov
push
test
mov
jge
sbbb
adc
lock
push
scas
sub
inc
andb
xor
das
and
push
jo
rorb
push
sub
sahf
dec
pusha
fcmove
mov
xchg
loope
and
test
and
iret
add
inc
or
xor
add
lret
push
out
sbb
enter
push
test
adc
pop
les
orb
fsubl
xor
add
lods
repz
pusha
fistpll
popa
aam
bswap
fimuls
xchg
push
mov
xchg
inc
adc
xor
add
xor
xor
adc
jg
lret
out
pop
adc
movsb
inc
and
mov
or
rclb
add
sarb
pushf
rol
aas
add
xchg
push
sbb
shll
mov
subb
outsl
add
nop
xor
xchg
add
and
add
sbb
add
addr16
pop
add
pop
dec
les
inc
and
in
shl
add
cmpsl
test
and
mov
jns
sbb
enter
push
xor
xor
lret
sbb
mov
lahf
xchg
push
shlb
cld
imul
daa
jl
add
mov
hlt
cmp
cmp
xor
arpl
add
add
cli
test
mov
js
out
fwait
cmp
push
sbb
mov
sub
mov
cmp
testb
xor
rcll
rcl
push
dec
lret
dec
cwtl
nop
sub
test
and
clc
int
hlt
mov
xor
and
adc
int
rorl
and
add
lods
push
sub
inc
sbb
jle
fstl
lock
and
scas
pusha
push
ds
out
adc
dec
aam
dec
pop
xchg
sbb
mov
test
in
inc
jnp
and
dec
lock
ljmp
pop
cmp
adcl
aad
xor
dec
pop
push
cmp
fadd
xor
nop
scas
aam
hlt
mov
push
inc
in
ds
xchg
sub
insl
dec
ror
scas
xchg
sbb
dec
cmp
add
test
add
aaa
jbe
adc
mov
pushf
add
inc
dec
jno
push
mov
cltd
cwtl
rcl
sbb
add
mov
sbbl
jmp
adc
icebp
dec
mov
rclb
lds
shll
dec
jo
pushf
ret
sarb
xchg
lds
js
sbb
adc
mov
pop
sbb
adc
jle
leave
add
je
dec
adc
ja
jno
mov
in
fidivl
lods
mov
add
xchg
jae
push
mul
or
fstl
ja
mov
mov
out
add
les
add
fmuls
adc
aas
test
adc
push
pop
mov
cwtl
and
adc
add
jmp
fs
or
enter
shlb
adc
xor
push
mov
test
jae
inc
or
repz
mov
loop
mov
jecxz
dec
orb
jo
outsl
mov
inc
pop
push
lock
pusha
imull
das
push
sub
rolb
and
jle
les
mov
jb
test
sbb
push
cld
addl
and
lahf
in
test
mov
mov
or
xchg
adc
cmc
loope
setns
adc
sbb
or
shr
test
or
sub
into
sbb
cmpb
pop
pop
inc
rorb
cli
cmp
loop
and
rcrb
pop
rcll
fdivl
roll
lods
hlt
mov
pop
outsb
movsl
lahf
jns
mov
jns
sbb
dec
mov
jge
inc
adc
repnz
movsb
push
xchg
add
popf
jb
pop
inc
orb
xchg
sbb
scas
call
pop
inc
pusha
fidivl
jge
andb
xchg
and
cmp
add
es
adcb
push
fistl
call
inc
out
pusha
int3
jns
mov
sub
inc
fwait
adc
stos
xor
add
subb
and
add
mov
fdivl
in
push
lea
mov
mov
xor
es
inc
dec
rcrb
fadd
add
mov
pushf
jo
adc
and
mov
mov
add
and
scas
mov
xor
lock
adc
shl
mov
lret
push
jl
lcall
out
mov
adc
jmp
out
andb
mov
and
repz
dec
mov
add
rolb
addb
lret
cmp
fs
or
or
je
popa
lock
lods
mov
testb
xchg
or
rolb
inc
jl
push
sub
cmc
xor
jmp
cpuid
hlt
push
jle
push
movsl
inc
mov
add
in
mov
gs
pop
mov
mov
cmp
mov
mov
fldl
push
shl
ljmp
add
arpl
mov
xchg
add
shl
popa
ret
inc
xchg
cmpb
dec
mov
add
add
or
mov
add
fs
loopne
adc
xor
cld
leave
push
push
xchg
add
sub
dec
jg
and
cmp
jae
or
and
pop
int
pop
add
pop
add
push
and
fdiv
xchg
sub
add
mov
pop
andb
push
xor
rcrl
xchg
stos
test
mov
dec
and
cmp
inc
add
icebp
mov
sbb
popa
loopne
loope
and
in
xor
add
iret
sbb
test
jb
add
repz
mov
dec
and
xchg
mov
imul
mov
xchg
cld
cmpb
clc
fnstenv
or
cmp
or
or
push
inc
push
jnp
out
add
pop
mov
dec
aam
xchg
add
inc
mov
add
xor
sbb
xor
add
push
jge
pop
xchg
lahf
sub
ds
shrb
sti
add
sub
adc
pusha
lret
jno
sub
jnp
xor
rcr
ror
mov
movsl
xchg
in
xchg
scas
sbbb
leave
pusha
imul
pop
pop
mov
add
push
repnz
in
fistl
leave
xchg
or
inc
bound
out
push
dec
rolb
jnp
push
pop
jl
add
dec
lahf
movsb
inc
in
push
or
in
adc
cmp
std
add
fs
out
sbb
in
jo
lret
mov
sbb
mov
hlt
fildl
push
cmp
mov
repnz
cmpsl
loopne
push
inc
pop
add
into
sbb
and
pop
xchg
adc
mov
daa
lods
fs
movsb
mov
cmp
rclb
clc
loop
xchg
inc
fcompl
inc
jnp
pop
orb
push
xchg
jle
lahf
adcl
aaa
jge
add
inc
test
cmp
add
fst
pop
add
xchg
pop
inc
in
sbb
adc
pop
inc
jg
cld
in
rorl
jge
push
dec
movsl
negl
sbbl
aas
mov
dec
jle
movsb
addb
movsl
pop
aam
push
pop
dec
sbb
in
pop
xchg
mov
enter
arpl
add
aam
lret
xchg
jl
mov
fildl
js
jge
push
add
push
xchg
loopne
fadds
or
dec
mov
push
sarb
pusha
cltd
ret
add
jo
inc
mov
repnz
popf
or
jle
ljmp
jge
pop
xchg
add
aam
fs
cmpsl
fs
xor
js
out
add
mov
jo
mov
lret
js
mov
push
or
jmp
xor
aam
ficoms
inc
in
sbb
add
js
das
mov
mov
xor
add
add
jnp
adc
xor
mov
pop
push
mov
loope
dec
mov
or
and
pop
enter
inc
roll
sbb
sub
push
jge
jnp
test
nop
movsb
sub
xor
out
xorb
daa
testb
push
mov
add
iret
add
cmpl
cs
xor
jl
sub
inc
dec
mov
mov
jp
add
inc
dec
enter
mov
aam
fs
addb
shlb
xlat
lods
inc
dec
sub
push
inc
in
repnz
adc
pusha
insl
int3
and
cmpb
stos
or
cwtl
cmp
loopne
aam
pop
lods
inc
or
jnp
rorl
or
jbe
call
xchg
pop
dec
rcl
sbb
insl
mov
lods
xchg
pop
fdivrl
jno
mov
enter
shlb
imul
adc
xor
and
add
mov
xchg
inc
or
lock
shlw
xor
sbb
sub
mov
inc
sbb
movsb
and
sub
dec
lock
lret
call
imul
pop
ds
loop
or
jmp
call
or
lret
and
dec
adc
or
aas
xor
inc
dec
pop
pop
mov
movsb
inc
xlat
pusha
fs
lea
dec
cmp
jb
mov
rolb
pop
insl
jo
stos
shrl
push
add
testl
cld
sarb
aaa
setno
daa
or
add
mov
mov
add
out
movsl
mov
or
pop
add
cs
mov
add
add
cld
popf
into
inc
mov
sub
mov
or
adcb
and
fsubs
fcomps
or
jbe
cmp
jns
sbb
je
push
or
add
rol
mov
insb
call
fmul
mov
or
dec
xchg
lds
and
int3
rolb
shrl
inc
cwtl
push
loop
xor
aam
sub
sub
add
popf
sub
pop
push
test
and
adc
jno
test
testl
add
mov
test
cmp
push
mov
push
mov
add
lods
add
pop
scas
arpl
xchg
movsb
xchg
insb
popl
pop
cmp
mov
pop
dec
adc
movsb
and
inc
jmp
out
ret
cmp
mov
push
aaa
lods
enter
dec
sbb
or
mov
and
loopne
mov
aas
dec
mov
rorb
jle
in
into
mov
mov
ret
jno
push
add
mov
repnz
pop
or
inc
je
aam
jbe
aad
fsubs
xchg
push
mov
push
aaa
in
adcb
pushf
out
add
mov
dec
dec
sub
inc
and
ficompl
push
and
adc
xor
mov
mov
mov
sub
in
lahf
iret
pop
jecxz
mov
shlb
out
or
adc
imulb
mov
xor
mov
push
pop
inc
mov
inc
lods
ret
fimuls
pusha
in
and
xchg
lahf
add
jmp
and
mov
cld
inc
xchg
mov
inc
js
cmp
add
adc
push
inc
in
rolb
or
out
xchg
xchg
push
push
enter
test
xchg
das
add
gs
push
std
xchg
and
outsb
mov
call
fnstenv
mov
add
push
mov
add
pop
jecxz
add
es
icebp
stc
mov
xlat
sbb
add
nop
mov
sti
inc
pushf
inc
inc
jecxz
pusha
pop
ret
mov
jne
push
sbb
sbb
int3
xchg
enter
jp
and
and
nop
pop
dec
and
inc
aas
ret
jno
add
inc
in
into
cs
in
dec
mov
adc
scas
negb
adc
add
shlb
in
xor
inc
dec
xchg
sbb
adc
data16
push
mov
mov
nop
movsb
cwtl
clc
dec
sbb
xchg
push
ds
es
cmp
data16
cwtl
jno
push
add
push
push
adc
jecxz
and
insb
inc
mov
and
add
pop
out
adc
or
dec
xor
sub
in
cmp
push
pop
shll
aas
add
hlt
add
or
push
adc
in
call
pop
push
iret
call
int3
add
iret
inc
outsb
rcrb
cmp
icebp
lods
xor
xor
jle
std
lock
cld
mov
pop
add
and
xlat
lret
pop
enter
jge
int3
add
dec
call
add
pusha
rorb
popa
xchg
lock
loope
add
sbb
sbb
les
mov
sub
add
out
or
xchg
nop
add
push
stc
ja
rclb
repnz
add
or
jmp
sbb
push
movsb
pop
push
add
fisubs
mov
ret
cmpsb
nop
rolb
inc
rclb
sub
sbb
aam
lds
dec
in
lock
inc
popa
and
dec
dec
or
cmp
fiadds
cmp
loopne
and
add
dec
dec
dec
pop
or
cmp
mov
push
jno
mov
lock
stos
jo
rclb
or
lock
cmpsb
push
sti
add
lds
pushf
into
push
mov
xor
xchg
enter
adc
in
add
xor
loope
enter
inc
hlt
sub
push
icebp
and
xor
lret
push
arpl
adc
sub
cmc
cld
sbb
rorl
lock
mov
mov
xchg
and
xchg
out
mov
mov
add
mov
jnp
fstps
cld
je
mov
jns
cmp
in
mov
push
pop
lret
repz
popa
dec
and
mov
enter
mov
push
push
push
shlb
mov
dec
mov
enter
mov
fcomp
inc
mov
fsubrl
in
and
cwtl
inc
xor
mov
sub
mov
and
in
cmpl
call
jl
addl
inc
int3
lds
inc
or
filds
pop
movsb
jle
fisubl
and
adc
mov
and
lcall
cmp
mov
fs
mov
adc
inc
jecxz
in
mov
rolb
xchg
sub
cwtl
mov
sahf
je
bound
adc
inc
pop
jecxz
rcr
iret
mov
les
add
jl
cmc
lods
inc
stos
pop
add
and
daa
adc
inc
jecxz
sbb
push
add
and
push
add
imul
loope
mov
pop
bnd
push
sbb
fldl
andb
xchg
roll
cld
and
jmp
mov
add
xchg
movsl
test
test
nop
in
cmpsb
mov
xchg
inc
jl
test
inc
mov
daa
push
push
pop
repnz
ja
aas
sub
pusha
jp
call
sbb
shl
inc
pop
aas
mov
je
flds
jo
and
jnp
add
popf
adc
inc
mov
notb
aam
jb
mov
cmp
fdivrs
in
pusha
inc
lret
dec
test
and
in
orb
xchg
adc
rcrb
jns
or
or
je
lock
and
inc
popf
add
push
and
and
rcrl
add
pop
xchg
fisubl
jne,pt
sarl
adcb
fldcw
out
dec
js
into
in
scas
repz
sub
add
xchg
test
stc
mov
mov
xor
or
mov
add
aad
in
insb
sub
xchg
or
in
xchg
xchg
cld
mov
arpl
jae
in
out
addl
nop
ja
incl
outsb
je
jmp
pusha
mov
add
and
popf
cmp
pop
inc
dec
rolb
xor
cmpsb
cld
push
stos
stos
push
inc
xor
xchg
fadds
sbb
shr
push
in
ds
fidivrl
cmpb
jns
add
sbb
movl
push
mov
addb
sbb
bnd
jl
mov
or
jo
imul
arpl
ljmp
ret
push
call
cmp
cmp
aad
jmp
imul
pop
jne
pusha
xchg
add
inc
stos
pusha
inc
scas
test
cld
ds
and
add
testl
push
fadd
adc
cmp
cmp
fistps
lods
jp
adc
lret
and
inc
movsl
popf
loopne
roll
xchg
fdivrs
and
jo
mov
mov
fadds
sbb
mov
mov
sub
test
xor
xchg
and
mov
lcall
add
ret
inc
sbb
mov
xor
rcrb
xchg
push
out
jecxz
test
fildl
call
addb
dec
sbb
ret
pop
sbb
enter
inc
js
pop
mov
adc
sub
sbb
push
jge
jg
in
repnz
push
fcoms
mov
loop
repnz
jnp
aaa
jl
jno
mov
mov
ljmp
and
and
add
sub
adc
arpl
lcall
jae
sub
or
add
in
lret
int3
das
inc
sub
push
dec
mov
paddq
or
ja
js
or
shrb
sub
lcall
into
sbb
cmp
nop
mov
cmc
jnp
and
jmp
out
sbb
test
push
jmp
pop
into
pop
adc
add
mov
daa
test
leave
daa
iret
mov
shlb
push
cwtl
jge
repz
mov
sahf
aaa
call
rcr
inc
xchg
mov
lret
test
leave
fmuls
mov
aam
aam
add
lods
xor
sub
jg
and
dec
stos
or
pop
sub
mov
sub
sbb
ja
or
jne
leave
add
les
pop
mov
icebp
pop
movsb
inc
and
push
pop
xor
in
add
shrb
mov
data16
mov
mov
xchg
sub
add
add
in
push
push
loopne
cmpsl
cmpsl
in
inc
mov
dec
test
add
jnp
xor
fdivrs
adcl
push
cwtl
sahf
pop
add
insl
mov
mov
adc
mov
pop
out
mov
stos
daa
lods
rcrb
fmuls
push
inc
push
jo
adc
outsb
add
fidivrl
je
pop
call
mov
mov
lock
data16
lret
iret
push
cmp
lock
lcall
pop
sub
sbb
into
xchg
mov
cmc
andb
inc
xor
push
mov
call
inc
aam
rcrl
cmc
or
push
jne
push
jo
inc
icebp
in
push
add
pop
pop
jb
push
add
cwtl
inc
scas
and
sti
jge
cmp
adc
inc
dec
fsubrs
jns
movsb
cmp
ficoml
daa
js
mov
jno
in
pop
push
dec
mov
aam
mov
inc
inc
addr16
bound
pushf
fs
mov
fcoms
jb
mov
fdivl
bound
faddl
adc
cmc
pop
dec
in
ljmp
test
rcrb
pop
jle
sbb
fs
sbb
dec
cld
dec
mov
cwtl
shll
xchg
movsb
pop
aas
enter
or
jge
shl
pusha
mov
cld
lock
and
cmp
dec
and
xor
adc
pusha
cmpb
rcr
jo
cmpsl
mov
add
and
test
movsb
and
fmuls
jmp
jo
cli
aam
sbb
or
aas
adc
sbb
pop
cmp
sbb
xchg
test
in
roll
add
xchg
add
test
add
lahf
xchg
jle
rolb
sahf
push
inc
pop
sub
or
lret
pop
cmp
add
test
loopne
jmp
sub
fidivs
ret
loopne
mov
adc
xchg
cs
fsubrl
add
sbb
xchg
movsb
cmp
repnz
add
or
mov
arpl
dec
jl,pt
push
jno
fxch
xor
or
pop
mov
out
add
and
push
cld
pop
sbbb
dec
push
dec
pusha
add
pop
xchg
mov
int3
sbb
add
inc
outsb
enter
pop
repnz
lds
loopne
fwait
add
aas
shlb
addr16
imull
subl
test
arpl
mov
loopne
add
sub
idivl
lcall
repnz
jne
scas
pusha
cltd
jns
inc
mov
mov
addl
add
xchg
jne
jns
or
inc
adc
mov
mov
add
fistl
pop
ja
lods
mov
nop
xor
outsb
js
add
sbb
adc
clc
xchg
xor
add
into
jo
and
xor
inc
and
sub
addl
mov
or
fdivl
jae
subb
das
loop
inc
jl
xchg
cmovno
inc
inc
pop
add
pop
mov
js
xchg
xor
cltd
inc
mov
pop
inc
iret
mov
jg
sub
lret
xchg
or
out
xor
sti
xchg
inc
iret
push
add
hlt
mov
lea
add
daa
or
pop
mov
in
add
stc
adcl
mov
dec
add
dec
mov
jo
jnp
incl
fsubrs
add
lock
lock
add
jns
shr
repnz
add
mov
mov
fildl
cmpsb
inc
in
cmpl
add
push
ja
sbb
sub
test
scas
mov
inc
add
mov
push
inc
in
lock
cmp
dec
pusha
pushl
leave
lds
cli
imulb
adc
cltd
add
xchg
mov
xor
add
jo
mov
mov
jge
es
push
push
sub
stos
shll
push
divl
in
pop
insl
jbe
pop
aad
push
pusha
add
iret
pop
jle
loopne
rcrl
lods
and
mov
icebp
add
out
mov
add
loop
cmp
out
call
add
jae
loopw
mov
imul
js
sub
cmpsl
cmc
int
pusha
lods
ret
scas
add
test
sarl
inc
inc
sbbb
je
xchg
cmp
loopne,pn
adc
js
add
stos
cli
in
xchg
pusha
out
insb
add
pop
andb
ja
add
mov
inc
xor
push
cltd
in
inc
andb
rolb
pop
and
in
jmp
cmpsb
mov
hlt
xor
add
push
mov
jns
sbb
jmp
out
in
add
icebp
popf
jmp
add
int
sbb
pop
mov
dec
orb
cmp
out
inc
fadd
add
roll
push
add
mov
add
sub
sbb
bnd
and
cld
shl
mov
pop
rorb
mov
sti
dec
out
add
mov
xor
sbb
add
cmc
cs
and
mov
leave
imul
add
inc
mov
pop
add
mov
es
mov
cmp
jge
inc
movsl
and
jp
aam
icebp
mov
adc
dec
xchg
cmpsl
push
or
mov
and
and
pop
incb
cwtl
mov
jp
add
sbb
test
add
fcmovb
rorb
mov
lcall
sub
or
inc
scas
push
int3
dec
pop
lret
xorb
add
mov
hlt
push
jo
add
rorl
out
xorb
push
jmp
xor
fcoml
fistpll
xorb
out
push
int
mov
sbb
call
mov
jns
aad
adc
enter
pop
lods
jnp
aaa
lcall
cmp
jbe
inc
push
xor
clc
sub
cmp
mov
mov
mov
mov
and
clc
jo
int3
test
push
xchg
daa
mov
das
add
inc
rcrl
xlat
adc
or
mov
and
xchg
sbb
fstps
add
cmc
icebp
inc
mov
aaa
test
or
aad
or
mov
test
sbb
js
mov
dec
adc
sbb
stc
cmp
arpl
add
fwait
shlb
add
cmp
and
loop
add
cli
adc
aam
ds
sbb
cmp
fstpl
add
sbb
push
dec
cmp
imul
add
push
add
fs
popa
add
std
mov
pop
add
sbb
sbbl
cmp
add
add
popa
cltd
push
mov
in
push
dec
inc
or
std
add
dec
cmp
jl
push
dec
cltd
rcpps
xor
imul
les
ret
push
add
jne
pushf
in
xor
mov
sbb
les
outsl
nop
rolb
ret
inc
add
cltd
xor
inc
fcomps
and
mov
xchg
push
loopne
dec
jns
and
push
test
mov
clc
data16
imul
mov
sbb
add
sub
mov
mov
xor
pusha
add
arpl
in
xchg
sub
jo
lock
or
mov
hlt
cli
jbe
jo
jl
movlps
cs
add
movsl
adc
add
adc
call
ss
cmpsb
imul
push
repz
cmp
and
pop
cld
xor
in
cmp
add
repnz
addr16
add
inc
xlat
leave
icebp
pop
and
pusha
pop
pop
inc
ret
xchg
push
lods
in
stos
jo
add
loop,pn
sarb
pop
sub
sbb
mov
inc
cmp
xlat
filds
std
or
bound
jge
push
add
mov
popf
add
add
inc
arpl
xor
in
cld
roll
jecxz
scas
cmp
cmp
in
push
or
xchg
lock
dec
add
aas
cwtl
rcrb
mov
incl
std
test
mov
jae
sub
or
add
mov
jmp
nop
xor
add
sub
lods
mov
sub
arpl
inc
mov
dec
mov
insl
pop
push
movb
cmc
fidivrs
out
add
addl
inc
loop
cmp
call
movsb
loope
add
sub
in
pop
pop
jp
mov
jno
add
or
push
daa
pushf
cmp
enter
add
cmpsb
adc
mov
out
mov
fdivl
xacquire
loope
sarb
inc
movl
sbb
push
ret
lods
shlb
ljmp
sbb
scas
cmp
add
jo
or
orl
add
ret
incb
pusha
and
inc
add
and
add
cmp
lds
jbe
jg
int
add
add
lcall
fcom
popf
add
je
test
clc
fisttpl
out
icebp
nop
push
mov
loopne
add
pop
lods
inc
stos
and
insl
cmpsl
add
faddl
pop
faddl
je
add
lods
aas
ljmp
pusha
bound
jne
or
add
lock
stc
js
and
movzwl
cmpl
mov
divl
mov
inc
fcoml
pop
sub
stc
mov
es
mov
add
ret
stos
out
hlt
fiaddl
repz
push
in
out
loop
in
push
aam
jb
add
insb
ljmp
pop
inc
adcb
mov
mov
adc
cmp
pop
push
pop
or
inc
and
bound
add
jo
in
or
adcb
or
fildll
add
adc
add
cmp
sub
loope
lret
mov
bound
add
movsl
jmp
jp
add
sub
push
mov
mov
sbbl
xlat
enter
push
out
das
inc
loopne
in
out
movsl
test
push
xchg
add
sbb
cmp
subb
pop
hlt
xchg
fnsave
push
push
jb
xor
jne
push
mov
jns
pop
and
iret
jae
sub
lods
pop
add
push
pop
inc
xsaveopt
mov
dec
lret
add
into
push
adc
dec
stc
enter
lock
cmp
jle
ljmp
lds
mov
add
out
push
fs
cmpsb
xchg
es
shrl
cwtl
jl
fdivrl
lret
mov
sbb
and
or
int
push
ret
sbb
xchg
out
aaa
inc
xor
add
lcall
pop
mov
repz
cmpl
dec
jb
pop
and
dec
lcall
jmp
ror
pusha
in
mov
pop
push
mov
fisttpll
dec
pop
or
or
lahf
push
or
add
adc
das
mov
icebp
push
pop
dec
clc
add
pop
push
xor
fcoml
add
loope
inc
add
or
clc
into
int
add
pop
lret
mov
lock
add
or
inc
push
dec
mov
mov
mov
jle
jmp
dec
mov
fiadds
xor
rcrb
add
mov
cmpsb
inc
sbb
movsb
push
movsl
cmp
jne
movsb
push
lods
cld
test
inc
pop
call
aam
dec
push
rsm
adc
add
fildll
cmp
cmc
add
cmp
test
ret
adc
call
mov
push
cmp
int3
ret
inc
mov
rcll
add
cmp
aam
std
xchg
mov
add
ficoms
inc
cmpsl
movsb
add
push
xchg
popf
mov
jg
fiaddl
addb
rcrb
in
inc
divl
ja
add
mov
int3
cmpsb
scas
pop
je
rorb
leave
jne
orb
add
cmp
xchg
jl
aam
add
mov
dec
scas
add
loope
les
add
jle
aaa
mov
cmp
int
lahf
cmc
mov
sub
add
dec
and
ss
cwtl
rclb
test
xchg
jmp
add
cmpb
sti
pop
sbb
mov
call
aam
add
in
pushf
bound
aas
sarb
jae
repnz
inc
loop
lar
push
jo
call
jo
ret
sbb
je
pop
inc
fiaddl
sti
mov
aad
das
enter
inc
enter
clc
inc
mov
hlt
jno
in
adc
ja
adc
push
aas
jbe
jae
ljmp
pop
pop
sbbb
into
push
out
xchg
cwtl
rclb
jbe
js
clc
jbe
mov
pusha
das
insl
jg
mov
mov
or
hlt
sahf
arpl
mov
push
lds
das
mov
aam
mov
add
sub
mov
nop
pop
outsb
push
xor
mov
mov
mov
rcl
pop
jns
push
jl
into
ficompl
xlat
nop
dec
mov
test
pop
sbb
sahf
jl
push
loope
sbb
and
dec
dec
pop
xchg
xchg
sub
pop
inc
ret
add
scas
xor
adc
cld
fsubrs
scas
pop
and
lcall
movsl
add
cmc
add
inc
aas
xchg
push
push
ljmp
push
mov
push
pop
inc
daa
or
rolb
jle
loope
cmpsl
and
pop
rolb
mov
fld
xlat
adc
loope
push
cmp
and
fldcw
and
repz
jle
adc
rolb
cld
adc
xor
push
add
sbb
or
and
jns
push
inc
shrb
shll
call
stc
leave
add
cmp
adc
adc
fdivl
cmp
mov
sbb
clc
call
mov
xor
sbb
push
xor
mov
adc
addb
sbb
cmc
and
ds
imul
or
flds
fimuls
movsl
pusha
fldt
fnstsw
add
test
in
and
xchg
orb
imul
and
movsb
dec
pop
adc
or
jmp
or
push
ljmp
add
dec
sahf
jge
add
jp
sbb
lahf
movsb
dec
mov
inc
sbb
mov
mov
xor
fs
cltd
add
jns
mov
add
push
adc
inc
inc
mov
dec
adc
push
xor
test
stc
mov
mov
mov
or
js
and
pusha
ljmp
lret
and
fcmovnb
fdivrs
fidivrs
or
add
dec
jo
fdivl
push
cld
mov
xchg
pop
stc
out
inc
pop
scas
push
jne
add
push
sbb
jns
add
xchg
stc
dec
in
and
rorb
sbb
movsb
ret
aaa
and
xor
inc
mov
cmp
movsl
hlt
leave
adc
fsub
pop
stos
cld
inc
add
js
subl
mov
cmp
cwtl
hlt
or
int3
sbb
sbb
ror
fimull
std
loopne
mov
pop
push
mov
fsubrs
xor
lock
inc
scas
add
int
mov
or
jns
sub
dec
movsb
inc
js
enter
subl
xor
or
dec
add
imul
or
mov
icebp
fimuls
inc
xor
pop
inc
add
dec
mov
sub
jns
and
xlat
addb
ret
add
inc
add
sbb
pushf
xchg
roll
cmpsb
out
sti
loop
xlat
mov
sub
mov
sub
sbb
add
ds
ljmp
sti
jns
adcb
add
xor
inc
fldenv
ret
mov
in
push
fiadds
rol
inc
push
xchg
jae
loop
xor
pop
push
and
insl
test
xchg
test
das
and
fstpt
add
cli
fdivrs
dec
add
add
sarb
push
imul
je
aam
add
mov
add
rolb
leave
adc
test
add
lods
sub
mov
stos
add
scas
and
jge
cld
in
dec
das
hlt
mov
jnp
andb
add
and
movsb
and
push
add
jmp
outsl
les
and
test
insb
nop
dec
pop
data16
inc
lds
imul
mov
es
in
sbb
int3
shr
fadds
ljmp
adc
out
mov
fxch
cwtl
mov
cmp
lcall
add
andl
xchg
jmp
inc
mov
mov
and
out
sarl
lds
xchg
push
push
hlt
js
mov
shlb
je
stos
mov
adc
jno
xor
xchg
sahf
lds
xchg
push
or
fcompl
lods
pop
inc
pushf
pop
or
sarb
jo
xchg
pop
enter
clc
mov
push
add
sbb
movsl
movsl
stos
jp
add
pusha
fstpl
cmpsl
test
add
or
jge
insl
add
pop
pushf
dec
dec
adc
std
dec
int3
xchg
adc
enter
negl
outsl
mov
add
xor
mov
mov
shl
cmp
mov
pop
and
mov
xor
xor
jecxz
jbe
lret
loopne
add
add
mov
addr16
pop
std
sbb
push
shrl
jno
pop
daa
jne
test
mov
jge
push
fs
jns
sbb
and
sbb
dec
stc
inc
loopne
mov
mov
ja
stos
xchg
cwtl
push
jne
cwtl
jge
and
lods
or
mov
cmp
movsl
jl
pusha
push
and
or
sahf
sbb
push
xor
cmp
inc
or
lds
sbb
dec
push
sbb
add
mov
xchg
es
add
dec
jl
and
pop
shrl
jno
lret
mov
add
imul
jl
jge
stc
mov
call
dec
jle
pushf
and
add
dec
mov
mov
mov
or
or
add
pop
mov
pop
adc
add
or
imul
pop
dec
fwait
je
mov
cmp
pop
movsb
adc
cltd
inc
int3
inc
into
bound
in
dec
divl
rolb
mov
test
or
adc
les
jg
xchg
or
inc
mov
dec
push
aam
add
popa
cmp
test
pop
nop
sbb
add
and
jmp
mov
jns
pop
roll
pusha
lds
cmp
dec
cmp
sbb
lret
adc
movsb
jbe
sub
fstps
outsb
add
cwtl
inc
push
inc
inc
outsb
enter
les
loop
or
add
cmp
pop
cmpsb
repz
pop
loop
jae
push
in
mov
mov
inc
movsl
sti
inc
push
mov
add
dec
push
xchg
nop
inc
xor
push
add
in
xchg
xchg
in
dec
lock
adc
sub
mov
mov
loopne
push
adc
shrl
mov
inc
add
pop
es
and
into
xchg
and
or
outsl
or
inc
lds
pop
cmp
pop
int3
das
jne
shll
das
sarb
pop
aam
and
dec
cmp
icebp
push
inc
pusha
cwtl
outsb
sarl
iret
xchg
insb
in
movsl
jle
testb
sub
and
pop
mov
test
xchg
adc
mov
out
pop
cmp
testl
inc
pop
inc
cmp
cwtl
adc
sbb
xchg
sahf
movsb
mov
and
test
cmp
icebp
add
inc
pop
inc
hlt
and
mov
int3
jle
sbb
sbb
push
adc
cmp
pop
add
dec
pop
push
mov
xchg
add
loop
pop
mov
jg
and
pop
inc
sub
add
fs
fwait
mov
aam
je
add
stc
jge
cmpsl
cmp
mov
or
fcmovu
cmc
andb
repz
lret
orl
inc
or
arpl
loopne
daa
sbb
fcoms
ss
leave
aaa
iret
lcall
mov
mov
mov
lret
mov
pusha
out
dec
iret
ficoml
sbb
fcomps
psllq
sub
pop
xchg
andb
or
pop
lock
sbb
add
dec
push
sub
jne
add
sbb
pusha
loopne
in
push
fwait
dec
or
push
add
inc
push
jno
jns
sbb
in
popa
push
push
lock
sub
js
adc
and
xchg
dec
mov
lods
repz
dec
add
adc
push
push
and
mov
adc
dec
fadds
cld
pop
movsb
into
inc
shrb
pop
clc
sbb
orb
leave
inc
and
inc
pop
mov
jae
mov
dec
mov
aam
sbb
xlat
sarb
nop
sbb
dec
cld
jle
sbb
clc
shrl
sub
outsl
into
mov
lods
rcl
push
or
mov
jl
inc
cld
jge
sbb
movsl
enter
add
hlt
pushf
inc
inc
movsb
int3
mov
and
test
sub
roll
movsl
mov
aam
repnz
mov
popa
adc
or
fnsave
sbb
xor
xchg
in
and
push
aam
lcall
jle
insb
add
pop
or
cmpsb
scas
filds
mov
inc
push
scas
cmp
push
icebp
leave
shll
mov
pop
daa
mov
push
pop
stc
push
inc
sbb
add
popf
int3
mov
xchg
ss
adc
xor
sub
mov
js
fstl
pop
add
dec
inc
inc
jb
adc
lods
pushf
dec
xor
push
xor
lcall
push
adc
test
cld
jb
or
clc
mov
mov
lahf
int
inc
lret
lret
loop
pusha
xor
xor
es
js
xchg
fucomi
jo
mov
sub
mov
shlb
pop
call
clc
int3
addb
movsb
les
mov
jmp
test
aas
xor
add
and
iret
add
jge
test
cmpsl
push
in
ud2
jecxz
aas
std
and
int3
jg
les
add
sbb
jle
mov
mov
mov
in
push
dec
jbe
pop
insl
loopne
pop
dec
inc
nop
sub
lcall
pushf
xchg
stc
js
add
inc
and
mov
sbb
subb
inc
mov
imul
stos
or
xchg
dec
xchg
fiaddl
cmp
push
sbb
xchg
and
push
scas
outsl
sbb
adc
xchg
push
push
mov
pusha
sub
xchg
in
pop
shll
adc
push
mov
pop
popa
std
stc
cmp
ss
in
add
cmp
pop
or
or
mov
and
xor
mov
lcall
cmp
in
adc
int3
cltd
aaa
lock
lahf
testl
in
movsl
xchg
and
rorb
les
aam
inc
popa
sbb
push
cmp
sbb
test
in
cmp
and
add
xchg
rcrl
add
js
mov
xor
jo
lods
inc
xchg
fldenv
or
fndisi(8087
push
cli
add
and
fs
cmp
movsb
rcrb
ret
mov
jmp
jmp
lock
outsb
mov
call
sbb
mov
lea
mov
fsubl
sbb
push
push
call
pop
ret
orb
int3
or
and
push
ret
dec
pop
push
scas
rorb
adc
xor
or
aad
mov
and
fwait
stos
dec
pop
cmp
mov
push
mov
insb
pop
xchg
push
add
js
dec
xchg
sub
pop
pop
mov
pop
mov
enter
and
or
pop
addl
pushf
push
inc
push
sbb
ret
mov
inc
push
ret
outsb
test
xor
fnsave
add
das
lock
xchg
sub
add
xor
jns
add
les
pusha
aad
addb
or
jns
mov
js
add
inc
je
push
nop
or
jbe
xor
or
pusha
adc
fwait
xchg
sbb
xor
dec
rcrl
les
out
ss
and
and
adc
loopne
imul
shrl
mov
icebp
sahf
je
fists
pop
nop
andb
push
pop
ret
inc
mov
inc
add
popa
jg
ja
and
or
jg
leave
sbb
sbb
xchg
je
cmp
xor
fdivl
adc
std
add
dec
and
sbb
lds
div
add
push
movzwl
call
push
push
sub
xchg
dec
sbb
add
ret
fwait
pop
xor
xor
or
pop
pop
roll
inc
nop
adc
add
cmp
lea
jae
ret
pop
ret
xchg
mov
add
ret
test
push
xchg
ret
test
or
push
add
xchg
sbb
dec
imul
and
push
mov
adc
mov
inc
pop
dec
bound
or
mov
xor
cltd
dec
aas
test
inc
add
arpl
and
and
cltd
dec
xchg
ret
ret
pop
ret
xchg
mov
mov
add
in
std
cmpl
test
in
adc
sbb
jmp
add
dec
sub
lahf
lret
push
adc
cmpsl
cmp
push
arpl
fadds
test
xchg
adc
adc
aad
das
or
ret
xchg
pop
lahf
inc
jge
mov
lea
enter
pop
ret
xchg
mov
mov
add
ja
out
addr16
adc
xorl
push
and
pop
in
adc
add
fistl
mov
inc
dec
inc
adc
xor
or
mov
sbb
inc
out
arpl
lods
ljmp
jnp
adc
js
inc
sbb
nop
pusha
add
push
and
pop
es
adc
and
and
mov
xchg
cmp
lock
inc
stos
ds
pop
dec
pusha
decl
es
add
adc
sub
push
arpl
jp
mov
insl
ljmp
or
int3
sti
shll
into
xchg
mov
jo
in
movzbl
xor
mov
jle
sbb
push
andb
cli
leave
ret
dec
sub
or
add
mov
ljmp
pop
xchg
and
add
je
sbb
cmp
das
add
mov
mul
movsl
sub
adc
loopne
add
sub
ret
jo
mov
add
pop
pop
mov
mov
add
stc
addr16
lds
outsb
jmp
popa
push
push
mov
fwait
andl
add
shrb
mov
imul
fxch
pushl
mov
pop
xor
sbb
inc
imul
push
push
push
xor
or
movsl
lock
fistpl
cmp
into
push
add
pop
loop
xor
add
and
subb
or
sbb
inc
je
into
or
mov
mov
repz
push
or
add
sub
sbb
xlat
fsub
sub
out
js
out
xor
mov
pop
pop
or
or
adc
sub
mov
adc
ljmp
fnstsw
jecxz
in
repnz
mov
popa
pop
add
std
mov
pop
sub
ljmp
xchg
lahf
shll
xor
or
mov
sbb
into
repnz
mov
adc
test
xchg
inc
sub
mov
mov
pop
pop
adc
dec
mov
clc
imul
gs
pop
roll
sub
outsb
leave
push
inc
aad
sub
lret
mov
popa
and
adc
ret
cmp
imul
outsl
push
and
andb
jmp
xchg
leave
xchg
shrb
imul
cmp
pop
fsub
call
sbb
or
leave
out
or
dec
sbb
gs
adc
dec
popf
call
sbb
push
push
add
mov
or
ds
test
fisubl
pusha
or
push
pop
popa
incl
add
imull
int
ss
inc
push
or
xchg
lea
nop
out
je
sbb
stos
xor
jo
cmpsb
push
stos
xchg
or
mov
add
push
fiaddl
jno
fistl
iret
pushaw
push
dec
mov
push
xor
adc
inc
hlt
mov
and
daa
xor
rorl
inc
xor
or
pop
sbb
loopne
fisttps
leave
or
mov
sbb
enter
sub
mov
jmp
add
or
sti
and
in
ret
aas
int
loop
and
std
loopne
mov
jns
movsl
fyl2x
or
xchg
xchg
pop
data16
jmp
andb
sbb
inc
adc
mov
and
fs
hlt
mov
jns
push
out
les
scas
fldl
add
jmp
js
cltd
inc
sti
cs
std
stos
xchg
and
ja
jmp
sbb
pop
inc
or
add
scas
fwait
les
cmp
jae
push
mov
in
sbb
cltd
jnp
mov
test
xchg
and
call
in
push
add
arpl
push
pushf
subl
cmp
pop
fsubl
sbb
pushf
shl
sahf
mov
pop
inc
nop
mov
sub
xchg
out
add
and
adc
or
cmpsl
into
fs
pusha
iret
in
push
xor
inc
int3
sahf
movsl
outsl
jmp
add
testl
test
mov
loope
xor
mov
js
cli
add
xor
xor
add
or
into
jge
loop
inc
sbb
fwait
inc
mov
xlat
mov
xchg
ss
jle
incl
mov
and
or
and
or
mov
push
int3
mov
sbb
nop
cmpsl
loope
add
call
jo
and
pop
mov
push
mov
cmpsb
jo
sub
mov
and
pusha
loopne
test
xchg
mov
into
mov
xor
pop
js
sub
loope
xlat
addb
sub
push
adc
pop
cmpl
dec
pop
xchg
sbb
jg
or
les
pusha
push
sarl
in
stos
inc
pop
pushf
fcmovu
add
femms
xor
xor
xchg
ja
jae
lock
add
pop
jo
push
inc
sub
sbb
jmp
les
sub
pmaxub
push
in
push
clc
pop
ret
fldenv
adc
and
shrb
add
rcl
dec
cmp
outsb
mov
dec
inc
add
ljmp
sub
or
mov
sbb
test
mov
mov
push
dec
push
push
mov
xor
ret
adc
xor
jmp
int3
inc
adc
mov
xor
aas
fimuls
ss
cmpsl
and
mov
push
add
lret
inc
ficoml
add
inc
lock
out
jo
call
or
les
mov
aas
mov
dec
ljmp
rorb
pop
mov
and
pusha
or
pop
mov
popa
pusha
divl
or
outsl
pushf
shlb
int
pop
fsts
sbbl
lcall
in
daa
add
mov
pop
das
xchg
push
pop
jle
xchg
sbb
add
addl
mov
and
gs
jnp
inc
cmp
sbb
fnsave
push
orb
add
mov
or
push
out
movq
xor
lahf
sub
icebp
sbb
in
pop
pusha
xchg
imul
and
mov
mov
popa
mov
mov
add
xor
sub
mov
add
int3
or
cmp
push
jnp
and
cwtl
adc
test
mov
fsubrs
cmp
stos
add
or
pop
cmpb
aam
pop
xchg
cmp
sbb
jp
sti
test
pop
add
das
and
xchg
fwait
mov
push
mov
jns
div
mov
cld
mov
nop
in
mov
subb
lcall
mov
lret
mov
dec
dec
lods
add
out
arpl
test
xchg
xchg
cmc
sub
add
in
push
out
xorb
mov
cmpb
js
xchg
mov
push
sti
mov
les
inc
clc
jmp
sub
sbb
sbb
jmp
add
out
gs
pop
testb
adc
mov
push
pop
cmpsb
xor
shrl
test
not
iret
test
leave
xor
js
or
lock
cwtl
pop
jp
cmpsb
and
bound
push
cli
je
add
adc
add
xchg
cs
sbb
or
sbb
pop
test
adc
ret
fsts
add
pushf
data16
fwait
or
sub
inc
push
add
fwait
and
aas
int
fstpl
inc
or
adc
push
aad
out
or
ja
sub
xor
call
loop
xor
inc
adc
shll
mov
lods
or
clc
push
sbbb
aaa
jl
ret
dec
xor
mov
xchg
xor
and
adc
je
je
sbb
jns
adc
mov
andb
stc
rcll
jg
sbb
sub
jmp
adc
in
adc
imul
lret
adc
push
dec
xlat
inc
out
aam
jmp
or
mov
add
sbb
lea
dec
mov
sti
test
mov
call
ret
sbb
push
nop
sarb
add
jp
add
or
iret
add
cld
dec
xchg
mov
add
xlat
int3
sbbl
mov
aas
and
lcall
negb
rorl
js
jge
rclb
mov
aaa
mov
and
outsb
jg
pusha
push
mov
add
mov
xchg
cli
sub
aam
mov
mov
xor
xor
mov
sub
jl
jmp
sbb
nop
in
bnd
lods
daa
test
jno
add
dec
mov
roll
popf
movzbl
loope
jmp
mov
push
mov
xor
test
inc
cmp
jg
jl
xchg
popf
xor
adc
add
out
rcl
jl
cmpsb
xchg
stos
add
add
notb
sub
mov
inc
mov
or
psllw
mov
shlb
adcl
push
cmc
mov
mov
jle
push
jmp
inc
xchg
out
and
xchg
daa
xchg
mov
or
mov
xchg
cmpsl
movsb
mov
xchg
sbb
cmpsb
es
or
sub
cmc
dec
xor
push
push
fdivs
dec
lea
xlat
fcomi
dec
fsts
lods
xor
sbb
es
inc
sahf
inc
sub
lcall
imul
test
fidivl
jne
sbb
and
pusha
sub
add
aaa
loop
test
lods
cmp
jo
aad
stos
xor
and
adc
fistpll
repnz
xor
sub
xchg
imul
fsubp
jns
pop
dec
mov
cmp
adc
enter
scas
add
inc
pop
inc
sbb
cwtl
add
and
aad
jo
cmc
mov
test
test
jno
add
imul
dec
push
out
sbb
stos
rclb
xchg
clc
mov
and
mov
mov
jne
dec
loop
dec
fwait
pop
orb
adc
subl
sahf
cmp
rorb
push
or
and
or
rcrb
and
inc
xor
sbb
cld
pop
dec
rorl
cmpsb
orb
stc
pushf
mov
jae
or
push
jb
iret
outsb
xchg
leave
or
mov
mov
push
or
mov
insl
jae,pn
push
pop
mov
cmpsb
in
sbb
mov
xchg
push
test
rclb
call
pop
test
cmpsl
sbb
add
xchg
out
mov
inc
dec
xor
call
rclb
pop
pop
movsl
cmp
outsb
sbb
push
cs
add
cmp
adc
add
and
add
movsb
out
adc
inc
mov
fmull
ret
sbb
inc
sbb
push
cli
sub
sbbb
add
and
jb
scas
jne
sbb
sbb
mov
sbb
aam
dec
pusha
mov
rclb
mov
pusha
xor
daa
insl
addb
or
adc
in
mov
repz
and
inc
pop
mov
and
push
pushf
pop
inc
shlb
cmp
xor
xchg
hlt
aad
rclb
jp
xchg
mov
sub
mov
mov
add
sarl
pop
adcb
jl
out
cmp
aaa
cld
sub
and
imul
shlb
and
ror
jns
stc
sbb
sub
sub
stos
jb
xor
push
dec
sub
daa
inc
mov
cltd
and
mov
push
dec
push
adc
pop
fisttpl
pusha
jno
add
aad
xor
xchg
jge
add
sbb
in
xchg
test
cmp
movsb
fstp
dec
addb
ss
notb
adcb
faddl
jns
adc
movsb
inc
call
insb
sbbb
xchg
add
push
dec
test
insl
imul
mov
lcall
into
add
inc
inc
add
xor
fwait
jmp
rcll
mov
and
cwtd
pop
push
mov
push
addl
or
cs
lret
push
jle
dec
and
mov
jb
jbe
insl
add
cmp
sarb
cmp
dec
ror
mov
inc
hlt
or
das
and
adc
cli
popf
pop
or
das
adc
add
outsb
test
xlat
mulb
lods
ror
pop
adc
dec
add
lds
icebp
sbb
push
clc
jp
lcall
sub
jne
cli
out
loopne
jns
pop
dec
adc
fucomi
sbb
mov
fistps
add
mov
mov
adc
bts
push
xor
push
mov
mov
mov
faddl
sbb
and
jo
add
and
je
pop
repz
sbb
xor
loopne
sub
push
and
or
jo
aam
lcall
push
mov
add
out
mov
inc
adc
sub
shrb
cwtl
cmp
popa
enter
and
sub
xchg
lcall
or
xchg
and
jnp
add
ljmp
push
mov
mov
pop
xchg
add
mov
cwtl
mov
add
loope
pop
cmpsl
rclb
daa
pop
add
in
or
mov
imul
cld
xlat
pop
leave
inc
cld
jo
dec
repz
ret
les
adc
filds
add
lret
xor
jns
sbb
cli
push
xchg
mov
es
adc
out
xchg
hlt
add
loop
lahf
bound
test
shlb
add
mov
xchg
hlt
fildll
push
sub
xor
arpl
imul
xchg
add
mov
jb
push
push
fmuls
adc
mov
pop
adc
mov
adc
fcomps
cmp
movl
subb
gs
sbb
mov
mov
add
negl
sbbl
add
jge
out
jl
cmp
cmp
loopne
arpl
add
pusha
pop
and
clc
xchg
dec
push
jl
push
and
cmp
push
data16
add
or
cli
add
gs
xchg
sahf
out
jns
add
dec
out
inc
jge
sub
andl
inc
clc
add
adc
ja
add
repnz
outsl
rclb
mov
add
and
movsb
cmc
add
sbb
cmpsb
xchg
xor
outsb
or
icebp
test
or
xchg
cmpb
add
jnp
jge
cmp
pop
scas
push
cld
add
lock
add
sahf
mov
adc
add
pop
push
aaa
fidivl
mov
inc
mov
add
add
imulb
test
add
jne
mov
fsubrl
lds
cmp
hlt
cmpb
dec
stos
stc
sahf
pusha
mov
aad
mov
adc
mov
int
lea
shlb
in
dec
lock
or
cmpsl
add
sub
rclb
mov
add
xor
mov
in
ljmp
cmp
inc
out
jbe
jmp
stos
push
cmp
mov
aam
add
dec
shlb
cmp
scas
xchg
stos
pop
adc
ret
add
cmp
popa
loopne
and
add
ud2
pushf
add
sub
iret
mov
jecxz
push
push
lahf
and
add
insl
push
sbb
sbb
add
stc
ret
add
outsl
adc
jb
mov
pop
jns
mov
subb
add
pop
fidivrs
rolb
out
and
lods
dec
sbb
stos
xchg
andb
sbb
mov
mov
cmp
mov
into
lods
push
scas
jnp
xchg
in
cmp
stos
repz
jb
pop
dec
push
xchg
fcomps
mov
add
aad
mov
int3
es
repz
xchg
push
mov
cmpsl
adcb
std
jl
ret
lds
shll
jns
push
add
jmp
adc
pushf
nop
in
dec
insb
loop
rcll
push
cs
add
push
mov
mov
mov
int3
add
push
fsts
stc
sbb
xor
mov
popf
pop
xchg
pop
add
pop
mov
sti
das
test
pusha
inc
fnstsw
stos
in
jecxz
outsb
mov
jle
add
movsl
add
xchg
push
cwtl
ds
add
push
mov
sbb
imul
cmpsl
sub
jmp
push
and
sbb
dec
ret
subb
add
insl
jae
pusha
ja
mov
fisubrl
ss
adc
add
fildll
sbb
push
xchg
cmp
dec
enter
dec
sub
dec
das
add
xchg
and
pop
or
fisubrl
mov
sbb
and
das
int
sahf
jl
push
pusha
sbb
pop
sub
mov
insl
and
adc
adc
mov
icebp
aaa
cmpb
roll
push
mov
cmpsb
test
scas
xor
sarb
or
xchg
inc
push
add
movsb
ds
xchg
sarb
cmp
lock
mov
cwtl
push
incl
mov
lods
gs
ljmp
rcrb
sbb
or
icebp
add
rol
add
xchg
cmp
ss
or
shll
dec
mov
ljmp
dec
dec
push
dec
repnz
adc
sub
insl
mov
lods
pop
add
ljmp
mov
sub
add
push
nop
adc
add
or
push
aam
push
inc
add
jne
into
pushf
out
lfs
adc
scas
fcoms
add
sahf
dec
inc
imul
dec
ds
push
and
pop
add
int3
mov
int3
and
cli
adc
pop
sub
mov
addr16
stos
xor
push
repnz
mov
dec
mov
lret
leave
jno
pop
popf
xchg
add
fcmovb
movsl
lods
push
push
fbstp
sub
into
mov
mov
add
addr16
sbb
pop
in
stos
adc
inc
out
jne
dec
mov
imul
mov
movsl
cld
and
add
sbbb
or
jmp
inc
nop
or
scas
add
fdivs
cmpl
inc
and
rcrl
aam
or
cmp
xchg
es
and
add
pushf
mov
add
pop
inc
or
mov
xor
fistps
jne
inc
xor
out
add
pop
push
xchg
cmp
dec
lahf
cmp
dec
push
ficomps
push
divb
mov
aam
adc
shl
clc
and
aaa
add
mov
add
mov
enter
popl
xlat
mov
mov
repz
jmp
add
rorb
pop
lcall
jo
sbb
fxch
inc
sub
jl
lcall
sbb
cltd
movsl
or
bound
and
mov
cmpsb
loop
and
inc
adc
clc
aam
mov
in
jl
cli
dec
inc
call
repnz
xchg
inc
icebp
xchg
sbb
jo
add
lods
sub
lcall
out
and
add
sti
cmp
push
das
loope
mov
setnp
repnz
add
lret
xor
int3
jo
sbb
xchg
jmp
pop
sub
pop
or
and
aas
pop
cmp
sahf
inc
jmp
hlt
mov
push
fwait
shlb
jle
xor
fiaddl
daa
jge
scas
jbe
add
pusha
test
sti
ret
mov
xor
adc
or
push
dec
addr16
add
xchg
imul
scas
inc
mov
xchg
ljmp
adc
add
sbb
imul
xchg
shlb
inc
add
cmpsb
or
das
dec
sub
inc
hlt
pop
cwtl
mov
or
je
adc
or
sub
mov
in
add
arpl
pop
add
bound
adc
inc
lods
popl
ss
dec
pop
sub
testl
in
xor
sbb
enter
filds
mov
cli
mov
popa
repnz
push
iret
and
sbb
inc
and
jb
in
xlat
pushf
adc
lds
sbb
add
add
xor
lret
mov
loopne
dec
addb
popf
push
inc
aas
mov
fcomps
subl
xor
jae
or
fisttps
pop
pop
dec
sub
cmp
add
in
call
xor
mov
outsb
iret
fisubrl
xor
mov
pop
scas
inc
jle
sub
dec
xchg
mul
movsl
icebp
in
out
and
inc
push
out
cmp
out
sub
lock
mov
ret
lahf
mov
push
sub
pop
xchg
sbb
pop
push
mov
sbb
pop
adc
cmp
in
push
out
pop
sub
push
shl
xor
sbb
jg
push
push
pop
pop
push
mov
les
mov
add
xor
pop
sbbl
out
push
sbb
sbb
cmp
sub
sti
lcall
lret
or
mov
ds
add
inc
ss
js
adcl
cmp
xor
push
mov
add
and
add
jecxz
out
loopne
add
cmp
or
mov
add
je
movsl
nop
add
cld
cmp
les
pop
gs
add
rclb
pop
nop
rolb
cltd
dec
pop
and
and
pop
add
jbe
mov
push
mov
and
dec
xor
mov
ja
pop
repnz
sub
xor
gs
xor
mov
movsb
insb
mov
cmpsb
iret
loopne
mov
sarl
lea
mov
add
rorb
mov
sbbl
lock
or
iret
add
movsl
dec
fldcw
dec
pusha
xor
xchg
inc
das
add
popf
fnstsw
add
jae
pop
scas
cmp
push
add
and
xor
xchg
cmp
into
pusha
in
pop
push
ja
and
test
push
push
mov
ja
das
fmull
dec
inc
ja
lds
push
sub
and
enter
cld
jno
add
cmp
and
cs
xchg
gs
ret
push
in
xor
inc
mov
or
xlat
push
mov
push
pop
cmp
inc
pop
leave
jge
hlt
mov
scas
into
out
movsb
inc
adc
repnz
daa
push
mov
sbb
lea
mov
imul
and
jo
xchg
add
add
xchg
repnz
in
add
and
int
jmp
xchg
in
psraw
mov
add
mov
add
or
subl
mov
loope
mov
rcrl
cmpsl
rcr
xor
push
xchg
iret
and
jb
sub
sbb
add
cmc
push
mov
pop
cld
push
repnz
mov
aas
mov
int
pop
jne
fs
xchg
dec
jnp
out
or
xchg
jno
sbb
insb
sub
rcrb
mov
sbb
add
loope
or
in
pop
out
push
add
add
mov
xor
pop
pop
mov
inc
repz
inc
jmp
lret
jg
add
clc
sahf
xchg
add
test
addb
cmpsl
std
mov
out
popf
inc
dec
mov
push
jg
es
sbb
or
sub
jl
pop
iret
in
mov
add
pop
mov
pop
lcall
add
dec
push
pushf
add
sub
int
pop
mov
adc
cmp
sbb
xchg
fstl
les
test
pusha
mov
sarl
cltd
push
jge
adcb
inc
orb
or
clc
into
jb,pt
mov
sub
popf
inc
adc
mov
int3
fwait
push
outsb
loopne
insl
mov
test
pop
add
mov
xor
mov
push
pop
int3
and
jb
gs
sub
and
roll
fdiv
cs
or
adc
and
or
xor
adc
xchg
shl
pop
pop
test
push
mov
adc
mov
sbb
shll
push
loope
sbb
sub
push
aam
sbb
sbb
aas
jmp
xor
add
jbe
ss
add
dec
cmp
ds
sbb
stc
sbb
repnz
std
cmp
loop
inc
jle
cmpsb
push
cmpsb
xor
mov
mov
dec
out
xchg
sarl
cmc
sub
cmp
dec
sub
pop
add
sbb
pop
leave
enter
dec
fdivs
add
jle
xor
add
je
add
xor
push
cmpsb
inc
rclb
fwait
add
sarl
fs
or
fldt
insb
les
lock
jmp
mov
test
sbb
adc
sub
jge
pop
addr16
dec
das
add
ja
or
test
jecxz
testl
out
pop
imul
dec
jp
das
push
rcrb
inc
xchg
jecxz
and
fidivl
cmpsb
xor
and
xchg
add
clc
push
add
movsb
nop
in
mov
repnz
xor
jp
cltd
pusha
incb
inc
ret
jg
sub
addr16
sbb
add
scas
or
push
xlat
js
jp
mov
pop
add
dec
dec
add
js
mov
push
and
into
cltd
and
inc
je
jle
cmovl
mov
xchg
dec
add
nop
loop
incl
rolb
add
insb
in
movsl
sahf
in
scas
push
mov
dec
add
insl
jecxz,pt
popf
insb
add
and
pop
add
sbb
jns
push
push
dec
add
rcll
pop
add
lods
lret
jne
add
xor
jle
jb
or
orb
loopne
add
aam
adc
pop
mov
jae
shrb
add
lds
xor
inc
je
inc
cmp
aas
icebp
add
stos
mov
aad
or
shl
or
jge
or
jp
mov
xchg
and
repz
les
xor
sbb
or
adc
and
in
pop
test
js
add
or
jnp
mov
or
mov
sub
fbstp
sub
mov
xor
movsl
add
aaa
rorb
cs
imul
subb
dec
das
mov
imul
add
add
adc
push
xor
sub
mov
je,pt
xor
mov
es
add
and
or
xchg
mov
pop
or
dec
mov
jne
pop
xchg
or
and
mov
pop
loop
xor
add
mov
faddl
ds
xchg
les
push
faddl
cmp
ret
adc
add
dec
cmp
and
push
lcall
lock
sub
jmp
xor
add
jne
ret
add
add
cmpsb
ljmp
push
stos
dec
pop
cmp
dec
push
cwtl
or
mov
shlb
out
sbb
jne
sbb
add
filds
insb
movsb
add
or
test
xor
inc
add
test
imul
in
nop
jns
inc
xor
jo
or
adc
adc
sub
pop
out
xchg
ret
mov
mov
pop
cmp
xchg
add
arpl
push
scas
fs
push
call
sbb
push
testb
test
fimull
and
push
add
rolb
jp
inc
cmp
dec
enter
xlat
jle
sub
dec
and
outsl
sub
aam
pop
xlat
mov
xchg
or
inc
cmp
lret
lcall
loopne
mov
rcrb
mov
xchg
push
mov
aad
pop
xor
lar
cmp
inc
jae
push
or
push
cmovbe
in
mov
shl
mov
lret
sbb
and
and
mov
sti
sbb
cmovb
inc
add
and
jb
sbb
inc
shrl
lock
lret
mov
sub
cmp
testb
jmp
das
pop
scas
sbb
adc
cld
and
enter
dec
rcl
add
in
das
popa
jmp
notl
aas
gs
test
mov
loopne
into
insl
and
je
and
dec
add
or
test
and
data16
shlb
insb
dec
adc
je
inc
es
mov
mov
rclb
jo
pop
add
shlb
sbb
or
in
les
pop
ljmp
add
scas
add
xor
add
inc
add
xor
jo
push
pop
adc
popf
pop
insl
stos
mov
les
sub
mov
inc
fmuls
pushf
in
xor
inc
xor
jns
enter
inc
cli
mov
adc
fsubl
xor
or
test
pop
dec
test
sbb
jno
aas
movsl
out
dec
xchg
add
pop
iret
sbbb
nop
mov
adc
xor
xor
mov
clc
mov
rcll
pop
add
jl
gs
add
dec
inc
dec
mov
lcall
jp
out
ss
and
into
adc
sahf
mov
add
xchg
aaa
repz
and
cmp
or
pushf
add
cmp
repz
cmp
int
mov
push
and
repnz
jmp
cmp
adc
rcrb
add
mov
pop
lret
push
add
out
movsb
add
cmpsb
rcrb
roll
sbb
xchg
cs
dec
and
pop
push
cmpl
sti
mov
mov
test
lret
lcall
mov
fnstenv
fiadds
rcrb
sub
outsb
pop
mov
stos
adc
int3
jecxz
adc
cwtl
cmp
push
inc
out
sahf
push
adcb
add
out
add
mov
add
sub
cmpsb
or
xor
sub
mov
mov
sub
int3
bound
jns
loope
mov
mov
mov
mov
push
movsb
arpl
sahf
mov
jnp
and
mov
pop
mov
orl
clc
jge
sub
push
mov
leave
repnz
in
jle
jns
cmp
push
push
mov
xor
lock
inc
pavgb
cwtl
lods
jmp
add
in
sbb
cmp
xchg
push
push
int3
xchg
mov
cmp
ja
push
out
dec
add
popa
jae
shlb
mov
addb
outsl
add
test
jnp
push
sub
cmp
jbe
xchg
nop
add
xor
cltd
add
xchg
pusha
das
mov
adc
mov
and
xchg
movsl
ret
lds
loope
daa
inc
adc
loopne
lock
pop
xor
add
sti
dec
mov
mov
pop
mov
mov
push
jnp
add
sbb
cli
pop
cld
addr16
mov
mov
add
xor
aaa
mov
jnp
imul
jp
dec
mov
dec
mov
mov
aas
dec
xor
mov
das
mov
out
push
inc
imul
popa
pusha
aaa
les
aad
addl
test
jle
fsubs
adc
inc
or
add
shr
cmp
push
popf
push
cli
stc
in
pop
sub
add
clc
movsb
jae
jl
popa
divl
dec
add
cld
nop
mov
mov
lock
out
add
movsb
out
aam
rcrb
add
xor
cmc
sbb
roll
pop
ffree
sub
pop
out
fbld
push
test
add
push
and
inc
push
add
and
rsqrtps
cmpl
and
push
mov
or
aad
add
arpl
adc
sarb
inc
dec
xchg
and
das
orl
rorb
pop
mulb
inc
stc
push
ss
pop
loopne
iret
mov
cmpsb
or
mov
lds
imul
dec
add
mov
or
jne
mov
fsts
je
push
push
push
jo
rolb
lea
pop
call
pop
pop
bound
or
fs
sbb
push
imul
sub
sbb
add
or
aas
or
or
addr16
cwtl
sti
sub
in
dec
cmpb
or
dec
add
dec
or
ret
adcl
sbbb
mov
rdtsc
mov
nop
das
mov
aam
cmp
les
aaa
mov
mov
sbb
mov
sub
pop
adc
nop
and
mov
and
push
mov
xor
pop
test
sti
mov
in
out
xor
xor
roll
fld
movb
sub
test
sti
lock
ds
and
pop
mov
xor
xchg
out
cmpsl
or
es
mov
or
dec
adc
xor
sbb
cmpsb
or
sub
add
xor
add
aaa
cmc
or
iret
xor
mov
add
lods
sbb
jl
sbb
mov
fsubrl
and
icebp
dec
xor
les
add
leave
adc
out
loopne
or
pop
adc
xor
int3
lcall
imul
lahf
mov
testb
xor
outsb
adc
in
sarb
arpl
test
push
jle
outsb
daa
add
add
push
pop
pop
xchg
push
out
dec
loope
add
pop
jb
in
mov
imul
ret
push
pop
lret
xlat
ret
sbb
dec
mov
pushl
push
add
mov
enter
mov
xchg
adc
push
or
movsl
dec
adc
adc
pop
cmpsb
xchg
out
jne
clc
enter
push
jb
movsb
mov
add
cli
rolb
scas
jecxz
push
and
mov
dec
or
in
push
lcall
jmp
fmuls
mov
test
and
jo
mov
push
jb
lret
mov
mov
out
es
inc
mov
inc
leave
scas
movb
and
jle
add
cwtl
mov
nop
add
shlb
out
call
inc
fbstp
cmp
gs
adc
adc
adc
pushaw
xor
pop
dec
push
fsub
cs
fiadds
fldcw
mov
xchg
popa
adc
adc
cli
pop
push
call
inc
out
loop
pop
andb
or
lret
add
sub
xchg
lods
fdivrs
mov
adc
dec
or
nop
in
lods
add
sbb
and
loope
dec
jg
outsb
sbb
pop
mov
loopne
push
insb
std
pop
mov
scas
cmpsl
mov
sbb
add
rclb
rolb
xor
repz
add
xchg
jb
in
clc
push
xchg
push
stos
xor
add
and
sub
loopne
mov
repz
cmc
adc
xorb
inc
push
jno
add
loope
daa
daa
test
and
and
loop
xor
ret
cld
pop
stc
adc
sub
fstps
pusha
and
sbb
lods
icebp
adc
std
adc
das
mov
lcall
adc
jg
int
push
popa
mov
sbb
pop
lods
add
cli
sbb
mov
sub
inc
pop
dec
sahf
pop
sub
mov
rcr
mov
add
jo
movswl
xchg
adc
mov
add
dec
cmpsl
mov
mov
mov
cmp
sub
sti
pop
jno
lock
mov
adc
xor
ss
in
jae
push
jo
xchg
clc
or
inc
aas
adc
int
je
popa
shrb
add
jge
gs
mov
and
adc
loop
mov
in
movsl
ss
lds
repnz
outsb
jge
add
xchg
in
dec
cmp
add
push
or
xchg
pop
sbb
loopne
add
sti
paddsb
pop
push
pusha
outsb
mov
push
jns
mov
xor
jp
lock
add
mov
xor
push
mov
icebp
inc
mov
notrack
repz
add
aam
or
cwtl
js
test
inc
repnz
pop
movl
ror
jo
xchg
ja
add
aas
data16
xchg
xchg
movnti
das
shrb
into
push
adc
push
add
test
mov
or
cmp
and
push
pop
sarl
jnp
outsb
cmpsl
xor
add
call
faddl
cwtl
mov
divb
pop
mov
daa
fisubrl
lret
jmp
push
xchg
fisttpll
pop
pop
pop
int
xor
dec
lods
lock
testb
dec
jb
movb
inc
and
or
inc
pusha
add
loopne
jb
mov
cwtl
aas
dec
rorb
pop
adc
push
xchg
cmp
int
in
sahf
sbb
xchg
pop
add
inc
inc
inc
nop
pusha
xchg
push
push
cli
mov
cmp
sbb
hlt
adc
sub
xor
andb
sub
popa
nop
mov
test
fildll
xor
dec
push
mov
pusha
aad
add
pushf
popa
xchg
cmc
sub
add
jecxz
xor
mov
adcb
push
jp
xchg
dec
nop
push
hlt
shlb
lret
ror
or
push
orl
insb
adc
pop
mov
stos
xchg
or
push
add
push
mov
loop
into
mov
orl
mov
push
add
mov
int3
ret
add
aam
jl
adc
fisubrl
sbb
push
inc
adc
jns
addr16
mov
xchg
adc
cmpb
icebp
out
int3
lret
lea
inc
and
or
es
test
dec
fiaddl
adc
add
mov
mov
pop
inc
lock
mov
mov
mov
les
inc
aaa
dec
icebp
xor
xchg
mov
ret
sbb
stc
mov
stos
iret
jl
mov
in
ljmp
mov
addb
mov
add
mov
pusha
lahf
int
shr
add
jo
mov
cs
filds
xchg
loopne
xchg
lret
out
and
test
shlb
xchg
add
std
test
cli
mov
xchg
add
es
fistps
adc
pusha
sbb
push
mov
fnsave
jae
adc
or
add
inc
inc
push
mov
mov
xchg
or
cmp
dec
or
cmp
stos
dec
addb
inc
add
sbbl
dec
cli
clc
add
xor
es
or
lea
dec
mov
sbb
mov
lds
add
les
fistl
out
roll
xor
adc
inc
jb
loope
jmp
xor
cmp
bound
fcmovb
sbb
lods
xor
hlt
add
outsb
add
es
mov
gs
cmp
scas
adc
outsl
fildl
add
loopne
jmp
ret
pop
cmp
cwtl
jnp
arpl
mov
faddl
or
cs
and
lret
vlddqu
ficomps
lahf
cmp
fdivl
xchg
sbb
or
sbb
stos
sbb
xchg
cmp
cmpl
gs
or
xchg
arpl
rorb
jo
xor
nop
inc
mov
cmp
ret
push
push
push
pusha
adc
std
pop
sbbb
clc
add
or
pusha
pop
push
repz
out
add
adc
jne
add
pop
pop
and
aaa
adc
push
rorl
psadbw
in
add
cmp
icebp
dec
pop
fucomip
pop
add
xor
lea
les
movsb
jg
scas
adc
inc
loope
push
push
jg
test
mov
and
pop
mov
mov
xor
scas
fiaddl
sub
aad
aas
scas
pushf
xor
test
mov
enter
aas
faddl
lock
push
ret
ljmp
pop
sub
test
mov
cmp
cmpsb
add
pop
testl
mov
int3
jbe
add
sub
or
pop
enter
or
jle
lret
pop
cwtl
push
pop
adc
outsl
fiaddl
pop
cmp
jne
sbb
mov
push
mov
push
adc
xchg
outsl
or
sbb
scas
cs
test
cwtl
cmp
add
inc
addb
aas
cmp
fstpl
and
jno
adc
in
pop
mov
mov
or
loope
les
hlt
sub
loop
mov
push
pop
stc
sub
adc
mov
add
rcrb
cli
dec
xchg
sti
pop
lcall
cs
movsb
add
push
mov
mov
movzwl
xchg
test
or
test
cmpsl
jmp
fdivrs
mov
mov
mov
jnp
aad
test
inc
dec
mov
shlb
js
pop
aad
mov
pushl
sbb
bound
sub
jge
sub
fcoml
push
add
sbb
cli
cmpsl
mov
popa
cld
test
add
jmp
add
adc
mov
fldenv
add
mov
popa
jmp
cmp
vdivsd
std
out
mov
adc
pop
xlat
and
inc
add
jecxz
icebp
mov
xor
lds
push
pop
sbb
mov
ss
xchg
dec
dec
pop
ja
roll
pushf
popl
sub
jns
adc
mov
pop
pop
push
jae
mov
push
xrelease
ret
xchg
int3
jle
mov
neg
dec
adc
stos
iret
ja
lods
and
aam
sbb
pop
inc
mov
scas
and
cmp
and
add
movsb
or
xchg
push
adc
outsb
mov
adc
mulb
adc
push
popa
ret
sbb
xchg
imul
dec
and
mov
aam
fiadds
lock
mov
adc
sub
push
jb
and
cld
mov
and
xlat
or
in
add
bound
lods
shl
push
ljmp
add
mov
add
xor
int3
fisttps
or
daa
mov
out
adc
aas
xor
mov
in
mov
xor
push
mov
jo
and
adc
stos
dec
add
fnstsw
mov
and
negb
lret
sbb
ds
push
scas
add
lret
stos
inc
movsl
jne
ja
add
add
iret
aas
shrl
mov
loopne
jo
jns
dec
rorb
xor
dec
push
add
jle
or
orb
jnp
out
inc
imul
out
jnp
xor
or
push
mov
nop
call
cld
jbe
push
mov
pop
and
daa
inc
mov
inc
or
lds
aas
jp
adc
xor
pop
xchg
pop
adc
sbb
loopne
add
mov
imul
push
push
mov
adc
add
pop
leave
cmpsb
movsb
dec
std
or
pop
jecxz
pusha
xor
cmc
sub
xor
aas
dec
jne
fisttps
xchg
test
push
xchg
sbb
sbb
stc
mov
outsl
add
outsl
pop
sbb
pusha
gs
andb
andl
push
jp
sub
add
daa
jae
into
imul
push
int3
sbb
dec
mov
pusha
pop
push
mov
inc
into
xor
mov
sbb
jmp
mov
fsubrs
dec
add
rorb
sbb
out
or
cmp
pop
and
or
pop
sbb
xor
sti
adc
push
push
popf
sbb
or
dec
mov
jl
add
popa
ret
ret
pop
bound
enter
jnp
pop
sub
lahf
dec
jno
push
pop
mov
jae
sbb
out
mov
inc
call
int3
jbe
cmp
add
mov
sarl
adc
adc
addl
or
rcll
pop
add
movsb
pop
mov
test
test
inc
test
lahf
incl
inc
mov
fwait
cs
mov
xchg
add
popf
push
xor
arpl
fmull
scas
sahf
inc
push
aam
sbb
sub
pop
das
push
mov
das
popf
shll
enter
shrl
dec
mov
jno
xor
and
ljmp
in
push
add
xchg
cltd
loopne
loopne
adc
jne
cmp
stos
push
arpl
lock
push
fs
or
lds
and
sarb
ljmp
fwait
test
fnstcw
scas
hlt
fs
xchg
jbe
das
clc
or
loope
dec
enter
out
pop
push
pop
pop
and
jns
imul
add
inc
scas
add
and
arpl
rolb
or
xchg
cmp
and
push
pop
cmpsb
xor
jmp
jp
repnz
jle
add
push
cs
mov
push
das
popa
add
mov
loopne
pop
outsb
add
bound
mov
aas
cs
jmp
cmpsb
mov
or
ds
pop
add
cwtl
clc
lds
and
orb
pop
lea
test
cwtl
insl
pop
test
inc
xchg
aas
inc
loopne
leave
jg
sub
add
push
iret
scas
nop
mov
jns
cmp
cmp
out
mov
arpl
dec
push
add
in
sub
dec
mov
jl
ja
pusha
or
stos
enter
out
xchg
mov
repnz
pop
cmp
dec
movsb
or
insl
loopne
jne
add
ljmp
push
out
into
enter
inc
and
adc
dec
fcmove
xor
or
loopne
and
mov
bsr
lods
xor
add
js
movl
rorl
pop
fadds
mov
in
outsl
dec
loop
cmp
dec
cld
cmpsb
add
fsts
add
in
mov
xchg
push
add
insb
push
sub
loopne
cld
dec
mov
or
pop
lret
push
inc
inc
lods
sbb
fsubrs
test
repz
dec
pop
aas
mov
dec
add
mov
add
cmp
rclb
fcmovnbe
mov
mov
jl
jmp
adc
out
jbe
push
mov
add
xorb
addr16
push
add
imul
pop
add
test
outsl
sbbb
mov
jge
lcall
inc
mov
cs
pop
pop
enter
add
inc
lea
add
push
stos
xchg
jns
lcall
jl
xchg
mov
loopne
negl
pop
sub
push
aas
and
inc
pop
or
cmc
lea
stos
and
jg
movl
nop
add
sbb
xor
cld
push
cmp
ret
cmp
and
pop
xor
and
sbb
and
add
sub
mov
sbb
add
fistps
mov
test
pop
insl
pop
adc
xor
out
imul
and
in
jae
push
or
jge
xor
dec
movsl
stos
sbbb
mov
sbb
in
test
add
jns
testl
xchg
outsl
mulb
fildll
jg
cs
fstpl
inc
icebp
inc
jle
pop
and
outsb
dec
xchg
push
and
fsubrp
adc
ljmp
nop
aaa
fwait
outsb
jmp
das
xchg
fwait
sub
xor
mov
inc
add
cmp
push
cmpsb
mov
and
cs
ficompl
adc
rolb
movsl
movb
add
jns
mov
cmp
roll
cmc
pop
pop
add
fs
ja
dec
jae
mov
sbb
cmp
mov
and
shrl
je
add
jp
lret
mov
push
aaa
rcll
lea
shlb
mov
sbb
pop
xor
mov
inc
or
jp
push
jb
inc
dec
xor
pop
std
sti
imul
sbb
dec
push
add
nop
leave
shll
xchg
jmp
xor
dec
lds
sbb
cmp
test
ss
sub
out
call
imul
imulb
ljmp
inc
xchg
add
dec
sub
or
sub
mov
mov
xor
lea
push
push
add
hlt
rolb
cltd
add
add
ret
pop
adc
cmpsb
sbb
lods
push
loop
outsl
shlb
enter
cmp
fucomp
decl
aad
mov
inc
sbb
and
mov
pop
scas
lds
adc
dec
mov
push
std
adc
out
mov
inc
out
lea
jmp
cmc
je
repz
sbb
xor
pop
add
sbb
lahf
pop
sbb
sub
cmp
sbb
xor
pmuludq
mov
cmp
or
shlb
imul
jge
add
out
jecxz
jge
popf
pop
jle
push
jmp
mov
add
fstpt
lret
or
lret
cmp
mov
jge
dec
sbb
loope
stos
dec
in
cwtl
call
and
aas
or
sub
js
add
loope
outsb
and
xchg
or
adc
jne
jns
loopne
push
insb
mov
and
mov
minps
jne
adc
daa
popf
inc
inc
mov
fcompl
add
xor
push
add
or
adc
xchg
sbb
lea
out
inc
push
add
scas
push
sub
add
rcrl
int
scas
cmp
adc
test
dec
int
adc
in
aas
lret
scas
mov
stc
xor
jmp
push
inc
jo
pop
push
mov
add
mov
mov
lret
jbe
cmpsl
mov
add
adc
das
lss
lods
repz
push
cmpl
add
fisttps
xchg
push
dec
push
mov
xor
push
sbb
inc
push
mov
adc
sti
cmpsl
out
add
sbb
ret
cmp
cmp
mov
push
jo
push
scas
xor
and
cmpsl
cmp
cmp
mov
cld
add
mov
orl
mov
filds
filds
pop
or
inc
inc
movsl
pop
daa
cmp
clc
lahf
push
push
mov
inc
add
mov
bound
mov
add
jge
push
pop
sti
add
jnp
or
ret
add
xor
mov
adc
lret
mov
cmp
mov
cmp
jo
xchg
shlb
cltd
lock
or
pop
std
fsubs
in
or
xchg
mov
lret
push
lods
lods
addb
pop
xlat
xchg
icebp
push
cmp
dec
add
nop
adc
or
and
fisubrs
dec
jno
cmp
daa
pop
fwait
push
hlt
cmp
or
das
lds
in
std
dec
out
pavgw
add
icebp
ds
add
or
sub
and
dec
push
cmp
or
push
dec
clc
and
mov
push
scas
sbb
mov
and
aaa
repz
sub
cld
shl
pop
cmpsl
push
nop
stos
movsb
sti
fcompl
xor
in
addb
in
ss
mov
les
adc
movsl
dec
add
xchg
jmp
inc
clc
jae
jp
mov
push
add
inc
mov
clc
mov
add
fwait
inc
in
push
dec
aas
sbb
and
push
in
jl
dec
push
push
cmc
aam
jne
add
test
cmp
adc
loope
ds
adc
sbb
and
movsl
out
mov
jb
pop
mov
pop
sbb
add
icebp
loope
jle
sub
lea
sub
add
mov
nop
and
push
fwait
das
jl
pop
add
out
test
add
sbb
xor
add
pop
pop
sub
xchg
push
or
les
and
and
or
out
jnp
push
pop
dec
push
xorl
or
ss
pop
inc
dec
mov
cmpsl
aas
jmp
pop
mov
sti
jmp
out
or
stc
sbb
pop
sub
or
jecxz
add
mov
aaa
add
shrl
inc
add
and
push
jg
or
cmp
sbb
fiaddl
add
rcr
xorb
int
and
arpl
jae
cmp
dec
sti
shll
dec
cmp
clc
movsl
add
cwtl
leave
pop
xchg
jbe
sbb
mov
aam
sub
sub
add
or
lahf
cs
mov
iret
rcll
or
jbe
mov
test
gs
cmp
addl
arpl
lods
push
sbb
movsl
jae
daa
je
jno
sub
adc
jne
out
xchg
jl
movd
jbe
sbb
movsl
call
adc
jne
sbb
cltd
push
andb
aaa
enter
add
movsb
pusha
xor
add
push
cmpsl
lds
add
add
scas
leave
sub
push
push
stos
es
inc
and
insl
jmp
or
push
pusha
shll
add
mov
adcb
pop
out
or
sbb
enter
pop
js
push
in
xor
lock
sbb
imul
dec
loope
adc
lea
and
fisubrl
add
mov
ds
daa
jnp
cmc
mov
push
cs
loope
dec
or
and
outsb
adc
gs
cmovbe
xor
jns
inc
std
mov
add
push
xchg
xor
or
or
cld
sbb
fs
int
repnz
push
pop
orb
mov
int
mov
push
or
adc
push
frstor
pop
andb
fs
pop
sub
pusha
xchg
and
inc
lret
push
movsb
xchg
ljmp
stc
orb
shll
insb
sbb
xchg
cmp
mov
cmp
mov
testb
jmp
popf
nop
add
lahf
ss
inc
dec
add
xchg
dec
push
test
js
adc
sub
nop
xor
add
xchg
xchg
call
mov
filds
dec
pop
mov
xor
aam
or
push
aad
lods
js
out
dec
lock
mov
jl
lock
arpl
mov
inc
ret
lahf
loope
test
lcall
mov
gs
les
pop
jne
pop
mov
sub
cmp
adc
pop
mov
cmpsl
cmp
popf
pop
or
push
daa
adc
push
clc
push
jno
outsb
adc
mov
nop
xlat
and
sbb
sbb
dec
std
and
add
loopne
jbe
sti
pusha
or
cmpsb
notb
dec
jnp
add
leave
adc
push
cmpsl
inc
clc
sahf
inc
inc
xchg
cmp
or
aaa
mov
roll
pop
sbb
jge
std
andb
push
mov
add
cs
mov
adcl
mov
ja
imul
enter
push
sahf
inc
dec
xor
mov
pop
lods
mov
mov
adc
imul
sbb
cmp
sbb
or
mov
add
outsl
xchg
sub
pop
frstpm(287
push
xchg
jo
xor
xchg
mov
lds
cli
xor
rorb
mov
pop
pop
lods
lock
and
add
jp
pushl
loop
sub
and
sbbb
lret
insb
mov
adc
xlat
xchg
xchg
hlt
adc
loope
cmp
push
sub
inc
aaa
dec
mov
cmp
pop
sbb
test
je
push
gs
xchg
dec
adcb
jae
add
loopne
sbb
insl
sub
sub
adc
add
cmp
or
jno
push
pop
sbb
and
je
push
pop
imul
test
push
jo
popa
push
xchg
xor
lods
dec
mov
incl
jp
pop
jl
daa
lds
add
nop
cmpl
xchg
or
outsb
add
in
cmpsl
sub
xor
in
aas
xchg
sar
inc
mov
adc
and
loopne
jb
add
or
sahf
lds
add
add
pop
std
xor
movsb
jp
enter
push
push
add
mov
cli
shl
jg
cwtl
aaa
cmp
mov
jne
xorb
add
mov
mov
mov
or
hlt
mov
mov
push
push
cmp
mov
jbe
js
ret
popf
mov
ljmp
push
or
sub
adc
loop
jmp
xchg
fistpl
fnstenv
mov
movsl
pop
bound
pop
call
pop
fldl
test
xchg
decl
adc
push
cmp
and
mov
movsb
pop
add
in
mov
jecxz
stc
clc
sub
mov
mov
loope
lods
repnz
add
insl
mov
pop
bound
mov
adc
cmp
sbb
mov
mov
sbb
jecxz
dec
inc
and
out
lahf
ret
scas
dec
inc
std
pop
cli
add
add
push
push
scas
mov
inc
les
push
data16
mov
and
mov
cs
lds
je
mov
push
xchg
push
mov
out
or
add
in
xor
lcall
daa
shlb
and
popf
lea
push
divl
out
push
push
lahf
movsb
xor
push
inc
mov
push
jb
sbb
cs
adc
cmp
clc
dec
sbb
andb
and
std
sub
jne
xor
cmp
add
mov
push
mov
out
cmp
jle
or
ret
jnp
rcr
pusha
cmp
test
add
inc
lret
dec
adc
cmp
scas
inc
fsubp
imul
lahf
leave
adc
xchg
enter
add
dec
mov
cvtdq2ps
adc
mov
loop
mov
jecxz
push
loope
cmp
adc
into
push
xchg
test
push
cwtl
mov
test
jg
mov
dec
push
pop
pop
loope
arpl
imul
scas
sbb
cmp
mov
loope
sahf
loope
lret
sub
adc
pushf
sbb
dec
or
pop
out
xchg
cltd
jl
xor
mov
or
mov
pop
push
inc
leave
sub
sbb
cmpsb
scas
aad
pop
add
inc
lods
negb
ljmp
add
lret
aad
xchg
outsb
xchg
insb
dec
cmp
inc
jne
inc
orb
test
xor
pop
test
aad
dec
or
xchg
pop
jecxz
nop
jo
js
push
rorb
pop
push
mov
pop
xchg
dec
or
fiaddl
adc
add
mov
rcl
in
or
out
int3
xchg
gs
push
cltd
aas
cmc
out
rcrb
adc
repz
add
cmc
adc
xchg
ljmp
xor
leave
nop
sub
or
jge
sub
mov
dec
leave
adcl
push
sub
cmp
call
orl
jle
lret
sub
sbb
imul
or
adc
fisttps
mov
fwait
inc
jbe
es
adcb
rorl
sahf
outsb
xchg
sbb
push
or
dec
outsl
adc
sarb
in
inc
aad
mov
push
or
std
inc
out
pop
adc
push
stos
add
push
stos
add
pusha
dec
add
xor
mov
icebp
mov
adc
subl
movb
arpl
cmc
cwtl
call
push
xchg
pop
xor
push
pop
sub
inc
loope
loopne
mov
cwtl
pop
out
stc
pop
or
and
and
fsubs
mov
pop
outsl
pop
add
and
out
subb
fimull
movsb
mov
add
jno
pop
inc
in
add
fwait
add
ret
imul
pop
fisttpll
or
into
sub
scas
daa
imul
mov
lret
adc
faddp
imul
fists
int
mov
int3
clc
pop
daa
das
sub
add
xchg
and
add
add
push
push
mov
pop
or
rcll
loopne
inc
adc
and
add
mov
pop
push
mov
and
aad
add
push
mov
pop
lods
aas
pop
jae
push
add
sub
sarb
addl
push
xor
psubsw
sti
stos
add
inc
push
mov
mov
jle
loopne
push
jge
pop
mulb
inc
in
test
mov
adc
push
and
cmp
pop
push
jmp
sub
mov
movsl
addb
mov
pushf
aaa
sbb
pop
loop
cmp
lods
loope
xchg
enter
add
sub
adc
pop
test
push
or
pop
call
sub
imul
push
add
add
sbb
ljmp
jbe
or
hlt
rclb
addb
adcl
mov
es
call
test
repz
fs
push
in
cwtl
or
cmp
or
mov
scas
inc
push
ret
mov
xor
hlt
dec
mov
addl
sub
jle
ret
dec
dec
adc
or
popa
gs
mov
jo
lret
arpl
dec
scas
nop
xor
fnstcw
sbb
arpl
cmp
rol
scas
inc
xor
cmp
adc
push
inc
add
mov
lahf
add
and
mov
into
adc
daa
inc
js
jp
xchg
iret
testl
mov
dec
adc
adc
daa
mov
bound
inc
lea
negl
pop
loopne
xor
or
rcrb
fidivrs
loopne
and
jnp
adc
sti
nop
inc
iret
or
xchg
sbb
mov
xchg
mull
addl
jge
or
xchg
in
add
xchg
xchg
dec
orb
dec
in
jae
pop
ret
or
sub
mov
sbb
inc
lods
cmp
test
in
pop
push
inc
ds
or
mov
add
push
insl
dec
test
test
mov
add
cmp
std
inc
imul
pusha
and
test
dec
fldl
int3
cltd
mov
sub
or
add
int3
sub
lea
and
pop
in
xor
or
js
and
js
in
push
pop
xor
xlat
int3
xchg
mov
xor
imul
add
jmp
cld
cmp
adc
sub
jo
add
mov
jle
jmp
or
std
sub
insb
pop
ds
mov
mov
fwait
push
push
enter
jl
rclb
and
dec
mov
sub
out
ss
inc
sbb
jp
xchg
in
jg
adc
cmp
sub
dec
roll
inc
adc
sbb
or
inc
add
mov
test
ret
loope
or
push
and
xlat
or
out
adc
int3
fs
bound
insb
ror
fwait
add
pushf
test
push
popa
push
test
adc
sbb
popa
cmpsb
sub
mov
or
scas
outsb
mov
fstps
mov
jl
push
nop
cmp
nop
fs
or
bound
std
addl
les
and
mov
sub
xor
add
cmp
test
jno
comiss
cs
rorl
and
lret
imul
fmull
pusha
loopne
mov
pop
add
int3
xchg
mov
and
leave
and
lea
in
rclb
inc
pusha
xorl
xchg
mov
jl
add
push
push
cltd
hlt
mov
psubd
fwait
mov
js
aas
test
add
xor
jge
inc
cmpsl
xor
sub
dec
adc
inc
dec
push
adc
cmpsl
sub
add
ja
cli
push
push
mov
js
cltd
mov
xor
cmp
pop
inc
dec
mov
rcrb
add
pop
mov
mov
in
insl
jge
lcall
fbld
ret
cmp
inc
pop
pop
pop
adc
dec
imul
dec
mov
mov
dec
dec
lock
bound
and
and
add
mov
ja
addl
and
cmpl
and
xchg
push
pop
push
and
xlat
jbe
add
hlt
aaa
sbb
orl
fbstp
mov
and
push
outsl
adc
mov
adc
pop
xchg
std
mov
loop
push
test
pop
add
push
insb
mov
mov
xchg
fwait
inc
and
js
mov
and
mov
adc
push
adc
pop
mov
sbb
es
out
sub
and
test
ret
xchg
bound
adc
shrb
and
cmpb
and
je
pusha
sub
inc
mov
mov
stc
pop
xor
ja
pop
repnz
movsb
inc
sarb
test
ds
lock
jnp
xchg
in
xlat
xchg
xchg
add
in
insl
push
add
stos
sarb
cmp
imul
lds
rolb
and
jnp
inc
xor
pop
out
pop
or
loopne
sbb
stc
sbb
adc
push
in
fistl
rorb
movsl
clc
inc
mov
cmp
js
or
xchg
in
mov
out
sub
or
sbb
arpl
xchg
nop
and
in
xor
inc
push
pop
adcl
xchg
enter
movsb
pop
push
push
pop
xchg
cli
addr16
sbb
jge
add
mov
scas
dec
and
fadds
fcoml
dec
nop
in
sub
lock
lds
dec
or
shrl
nop
jl
pop
sbb
cwtl
mov
mov
add
int3
mov
imul
imul
lock
xchg
add
sbb
shrl
mov
and
lock
and
xchg
addr16
xor
insb
pop
orb
pop
xorl
and
sbb
mov
hlt
and
loope
xor
xor
jne
add
mov
dec
xor
xor
xor
or
sbb
flds
test
xor
adc
and
sub
into
push
lock
loopne
out
cli
leave
test
jg
mov
sbb
cmc
icebp
dec
mov
and
push
in
xchg
iret
dec
mov
fdivrl
mov
inc
es
add
and
mov
and
mov
add
clc
push
cmp
in
jg
call
loopne
cmp
mov
and
pop
jbe
xchg
mov
in
std
rcll
mov
lock
into
add
sbb
jp
inc
popf
pop
test
out
add
dec
in
fiaddl
jb
scas
xchg
pavgb
adc
fcoms
dec
arpl
push
rorl
add
mov
pop
inc
cli
push
cld
mov
xchg
lret
ret
adc
xchg
sbb
xor
pop
sbb
out
inc
sbb
jmp
fstp
fadds
in
mov
fxch
and
incb
inc
scas
xchg
push
add
ja
out
jae
push
js
inc
sbb
xor
add
mov
xchg
popf
jo
and
mov
xor
mov
xchg
notl
fisubrs
adc
ret
sahf
inc
cmp
subb
ret
fists
pop
lahf
dec
dec
addb
cmpsb
fwait
cmp
dec
inc
pop
cld
call
test
lret
fmul
fimull
pusha
aad
mov
inc
imul
andl
pop
cmp
and
cld
jo
or
mov
ficoms
test
scas
pop
or
in
lret
movsl
lcall
mov
sbb
push
sub
dec
bound
pusha
out
cmp
int3
or
inc
data16
pop
les
push
inc
stos
or
ret
sbb
addr16
push
push
aam
repz
push
cwtl
mov
test
arpl
jge
divl
dec
xor
jp
add
fwait
cmp
loope
add
pusha
out
add
jns
pop
push
fisubl
loopne
outsb
cltd
pop
dec
nop
pop
add
xor
jecxz
test
mov
arpl
enter
inc
repnz
and
popf
mov
push
pop
mov
loopne
into
fstpt
sbb
sbb
sub
mov
cmp
jne
adc
adc
xor
add
push
mov
mov
lea
inc
push
push
sarl
jo
enter
dec
jg
xor
test
inc
cltd
or
push
jmp
and
enter
xchg
push
add
push
dec
jp
ret
push
mov
add
push
xchg
ds
mov
pop
inc
xchg
cmp
cmp
sbb
sarb
incl
adc
jb
mov
mov
lods
xor
add
cmp
sahf
sbb
and
sbb
movsb
das
xchg
dec
lods
fmull
mov
nop
shrb
sbb
loopne
adc
test
or
sub
inc
add
add
arpl
lret
cld
enter
and
add
rcrb
adc
clc
mov
jmp
and
pop
rorl
test
lock
mov
rcrb
in
lahf
or
adc
cwtl
mov
ret
pushl
mov
push
into
subb
mov
enter
sub
mov
nop
cmp
repz
pop
or
cmp
dec
dec
mov
test
inc
data16
xor
add
sub
fidivs
dec
sub
dec
xchg
mul
lea
mov
or
jmp
clc
push
or
xchg
xlat
inc
and
jp
mov
lcall
pop
or
pop
sub
addl
sbb
pusha
ds
or
nop
cmp
das
and
cmpb
add
inc
dec
icebp
rclb
stos
imul
mov
in
adc
adc
test
int3
xor
fsts
into
int3
das
aas
or
xchg
dec
mov
insb
fimuls
stos
dec
mov
imul
scas
adc
xor
xor
test
inc
mov
pop
push
into
repnz
pop
pop
and
mov
sbb
push
movsl
jecxz
jge
xchg
mov
push
and
xor
mov
imul
push
add
inc
inc
push
mov
inc
dec
les
pusha
test
mov
fwait
push
xor
inc
andb
popa
add
cmp
mov
sar
mov
imul
daa
inc
adc
pop
icebp
cmp
dec
ret
stc
add
pusha
and
push
add
stos
nop
call
jno
bound
jnp
mov
mov
pop
addr16
sbb
mov
cli
lds
jo
sub
dec
loope
testb
xchg
sbb
repnz
adc
in
hlt
cmpsl
addr16
add
dec
data16
rclb
addl
in
leave
in
mov
mov
push
xor
adc
loopne
add
xchg
idivl
xchg
push
clc
cmp
xchg
sub
xor
sub
mov
in
addl
cmp
push
mov
pushf
aam
adc
or
cmp
mov
insl
add
cld
lahf
mov
sbb
push
addl
gs
sbb
mov
xchg
inc
repnz
test
cld
jp
shlb
sub
xchg
call
loopne
fisttps
push
or
mov
insl
sbb
lcall
mov
ret
mov
jae
testl
sub
ret
mov
pop
xchg
lods
addr16
push
pusha
ja
cmpsb
add
iret
outsl
and
and
test
cmpsl
sahf
in
mov
or
mov
addb
lret
cwtl
add
mov
add
or
add
enter
leave
sub
mov
xor
out
add
mov
xchg
cwtl
xchg
push
add
das
aaa
pop
pop
loopne
adc
mov
push
ljmp
sbb
inc
sbb
pop
psrlq
call
icebp
inc
sbb
jo
pop
cltd
pop
push
push
cmp
daa
lods
rcl
mov
or
sbb
cwtl
iret
xchg
nop
pop
inc
inc
add
testl
jno
xlat
sahf
push
xchg
jmp
xchg
or
ja
arpl
push
xor
xor
dec
push
cwtl
scas
push
inc
cmp
mov
nop
mov
test
inc
dec
push
cmpsl
xor
int3
lds
lret
jmp
cmp
lds
outsl
pop
add
mov
repz
in
push
faddl
xchg
xor
mov
rcrb
dec
and
xor
ror
leave
cld
add
fisttps
xchg
sub
xchg
push
andb
adc
inc
push
add
lods
shl
xchg
inc
and
mov
xchg
cwtl
mov
cs
mov
push
inc
pop
fstps
cmp
mov
hlt
sub
js
fsubl
mov
sbb
and
pop
jbe
les
adc
outsl
daa
add
mov
xchg
xorl
addr16
outsl
cmp
mov
dec
scas
xor
in
and
das
hlt
mov
add
sub
adc
mov
movsb
lods
cmp
outsb
jecxz
pop
lahf
fs
adc
cmp
adc
imul
fwait
add
bound
int
pop
jno
add
lds
xchg
iret
jg
mov
enter
pusha
lcall
loopne
dec
cld
cmp
iret
pop
and
push
sbb
mov
cmp
lock
xchg
xorb
iret
jle
adc
and
sub
sbb
xchg
mov
inc
inc
or
push
xor
push
mov
sub
push
in
mov
cmp
adc
adc
data16
ja
jno
rolb
fcmovne
adc
lret
lods
enter
scas
add
add
push
rclb
inc
push
pop
adc
cmpsl
mov
aaa
dec
adc
jbe
sub
mov
fcomip
add
push
ds
push
push
mov
adc
arpl
and
inc
rcr
jo
rsm
icebp
add
pop
bound
xor
xor
shlb
cmp
sbb
xchg
inc
icebp
dec
add
lock
cld
inc
pop
add
and
xchg
test
lahf
nop
lods
loop
cmpb
icebp
add
fwait
dec
test
test
fildll
icebp
xchg
cmp
popf
inc
and
add
xchg
mov
adc
ret
and
icebp
popf
mov
mov
cmpsl
mov
pop
jp
ficomps
mov
push
xchg
mov
repnz
jns
lods
pop
xlat
lahf
adcb
and
cmp
loop
inc
movsl
push
mov
pop
jb
or
popa
and
mov
lea
jne
dec
mov
sub
inc
mov
sub
and
or
enter
lea
inc
jg
xchg
add
testb
add
js
lret
mov
push
mov
inc
sub
push
add
imul
and
bnd
mov
xchg
cld
push
pop
ss
int3
jns
sbb
mov
add
les
mov
add
inc
out
stos
add
jecxz
add
sub
jge
add
mov
stos
je
add
icebp
loope
stc
and
cmp
sbb
mov
add
loopne
notb
push
sahf
push
pop
lcall
and
mov
sub
nop
push
add
add
ret
sub
sarb
ds
gs
jo
add
sbb
jmp
add
or
mov
addr16
scas
adc
mov
sbb
je
cmp
and
fs
cli
mov
inc
rcrb
xlat
add
sub
cmc
adc
xchg
mov
adc
inc
adc
add
scas
loopne
les
enter
inc
pop
sbb
mov
xchg
adc
imul
xchg
cmp
push
or
shll
in
loope
cwtl
cwtl
inc
stc
dec
les
xchg
mov
ret
in
rcrb
dec
pop
mov
lock
add
dec
test
mov
aam
jno
xchg
inc
or
sub
jmp
dec
out
das
sbb
shlb
data16
pop
fwait
mov
nop
mov
xor
je
cmp
push
push
loopne
xor
cmp
cmp
push
and
push
sarb
xor
arpl
xchg
xor
repnz
sub
jmp
in
inc
and
xchg
or
push
inc
lds
sub
enter
cwtl
loop
cmc
incl
jge
mov
dec
xchg
push
push
mov
loop
mov
jo
sbb
push
ret
mov
ds
xchg
add
ficoml
lds
dec
fwait
adc
and
test
jl
loopne
add
xchg
subb
popa
test
lea
add
pop
adc
push
add
inc
mov
and
sbb
in
in
push
mov
push
dec
out
xor
adc
xlat
sub
and
inc
xchg
in
pop
ret
mov
jl
inc
cs
mov
dec
jo
loope
lock
jmp
cmp
inc
and
gs
push
ja
dec
addr16
cwtl
fstpt
in
loopne,pt
push
add
jmp
nop
add
xchg
aam
mov
rolb
pop
adc
lods
mov
sbb
mov
xor
daa
xchg
je
cmp
fdivl
lock
adc
pop
mov
movsb
arpl
outsl
add
leave
fwait
mov
dec
mov
sahf
jb
arpl
das
inc
fdivs
loop
add
sbb
jne
cmp
xor
mov
iret
bound
mov
or
mov
arpl
xchg
mov
and
adc
pop
loope
adc
popa
pop
pop
add
outsb
lods
cmp
add
stos
cmpb
xchg
pusha
mov
mov
or
out
sub
jge
xchg
loope
sub
rclb
fstl
add
gs
mov
rcrl
inc
xchg
xor
sub
xchg
shlb
ljmp
das
or
pop
stos
dec
shlb
nop
add
inc
or
pop
pusha
fcmovne
xchg
das
mov
inc
mov
outsl
ror
mov
in
popf
add
push
icebp
add
fnstcw
sarb
pusha
add
icebp
add
xchg
mov
mov
cmp
sbb
pop
jmp
shlb
xchg
add
add
out
jbe
cwtl
mov
das
sbb
inc
add
and
mov
and
and
pop
movsb
in
add
push
add
nop
pop
adc
xchg
lods
sbb
sub
cmpsl
dec
movsb
icebp
hlt
rcll
sbb
and
aaa
inc
out
pop
add
mov
xchg
inc
inc
iret
and
ret
ja
imul
scas
cwtl
and
jns
dec
mov
push
or
ret
filds
aas
mov
pop
out
repnz
aam
test
fmull
mov
lea
cmp
inc
push
scas
add
mov
inc
hlt
dec
inc
adc
cltd
enter
inc
jo
out
hlt
cli
pop
fldl
pop
ret
scas
and
cwtl
mov
mov
je
inc
jbe
xor
imul
faddl
push
pusha
mov
cwtl
add
sbb
mov
popf
sbb
xor
sbb
mov
xor
dec
lods
call
sbb
push
lock
xchg
pop
lock
jo
scas
pushf
or
mov
xchg
orb
push
mov
inc
or
aam
aam
cltd
mov
add
cmp
sbb
dec
aas
in
cld
fildl
push
rclb
adc
lret
and
iret
cmpsb
aaa
filds
sub
lahf
push
fdivr
jl
dec
jae
adc
cmp
cmp
mov
imul
repnz
add
push
lahf
dec
frstor
rorb
push
or
mov
aam
push
in
xchg
jg
pop
mov
and
xchg
or
sub
pop
out
cmp
sbb
adc
sub
adc
outsl
sub
in
or
inc
lret
insl
cmp
or
pop
or
dec
pop
test
xor
jmp
xchg
scas
cltd
add
or
das
inc
dec
pop
pop
push
and
lock
mov
inc
hlt
ss
icebp
and
sub
or
pop
adc
sbb
inc
cmp
mov
sub
and
adc
inc
mov
roll
aam
dec
push
add
jb
out
jp
jl
mov
sahf
lods
add
lock
mov
hlt
push
dec
add
xchg
add
nop
cmp
and
pushw
xchg
sbb
cs
ret
cmp
imul
add
inc
sbb
cmpsl
rorb
fstl
add
add
add
stc
cmp
sarl
int3
adc
pop
xchg
mov
pop
sbb
jns
imul
adc
rcl
leave
es
cmpsl
pop
cmp
sub
mov
add
loope
cwtl
adc
scas
add
sbb
divb
add
stos
jns
ss
rcrl
xor
pusha
xchg
and
push
inc
add
outsb
cmp
sbb
push
and
push
or
movsl
add
insb
and
mov
lods
pop
call
fcoml
lahf
adc
mov
push
jl
jmp
inc
sub
and
and
rclb
pusha
xchg
mov
inc
jmp
lods
mov
xor
dec
jp
sti
cmp
pop
icebp
xchg
lock
pop
mov
mov
sbb
cwtl
sub
ss
xor
push
and
adcb
leave
js
mov
push
les
ret
out
sub
or
cmp
or
lret
nop
enter
xchg
push
loop
sarb
iret
push
cmp
test
cmp
dec
mov
pop
enter
and
aas
out
xor
pop
push
inc
push
or
scas
addl
sarl
in
aam
xor
push
arpl
push
sub
sub
call
pusha
inc
cld
dec
jg
ljmp
stc
scas
push
xor
add
ret
mov
adc
cmp
jb
dec
sbb
sub
inc
xchg
shrl
add
dec
sbb
pop
and
mov
pop
add
dec
sub
jno
sbb
add
xchg
idivl
scas
inc
add
or
mov
in
rorl
adc
cli
or
add
leave
orb
add
dec
stos
cmpb
in
sbb
sbb
jnp
das
mov
inc
add
sbb
mov
sbb
sahf
xchg
adc
mov
sbb
push
add
xchg
adc
dec
test
std
das
xor
fwait
xor
ret
ljmp
add
cmp
hlt
add
repz
fistps
xor
add
cli
push
and
ficoms
imul
jmp
add
dec
sarb
or
and
and
mov
scas
add
pop
sti
sbb
inc
cs
jl
es
je
add
sahf
cmpsb
cld
aaa
clc
icebp
pop
push
jmp
mov
and
xlat
mov
je
xchg
add
movsl
jp
push
rclb
cld
adc
add
adc
stos
fwait
cld
in
xchg
nop
push
rep
sub
cwtl
imul
cmp
scas
xor
in
pusha
inc
pop
pop
pop
mov
stos
push
into
xor
dec
jle
sarb
adc
dec
mov
sahf
mov
mov
pop
mov
cwtl
push
gs
les
add
mov
icebp
mov
aam
lods
push
jae
xor
add
add
and
inc
add
loope
lods
and
decl
xor
mov
cs
and
jmp
sub
cmpsl
aas
clc
test
rorb
and
mov
and
xchg
cmp
sahf
inc
or
mov
popa
ds
xorl
mov
push
xchg
mov
call
add
sbb
pop
adc
xchg
daa
fwait
jno
pop
lock
mov
call
mov
sbb
mov
inc
and
xlat
pop
adc
dec
stos
testb
pop
in
loopne
loop
push
xor
cmp
add
int3
dec
clc
push
fisubs
sbb
push
shl
xchg
cltd
mov
or
pop
insb
xchg
or
aas
mov
subb
dec
hlt
add
imul
mov
add
stc
fwait
mov
dec
leave
rclb
pop
test
lods
inc
and
hlt
je
nop
mov
push
sub
or
lahf
andl
aas
pusha
hlt
mov
or
ret
fwait
push
loopne
filds
out
add
add
jmp
cmp
divb
push
mov
jle
in
in
pusha
and
loopne
adc
and
dec
in
fs
pusha
pop
outsl
and
mov
cmpsl
pop
orb
add
dec
push
add
aam
push
inc
inc
add
mov
push
adc
cltd
jae
add
lods
repz
jns
cmp
or
pop
xor
mov
aas
sbb
push
hlt
pop
xor
subps
pop
rcl
xchg
and
xchg
jo
dec
jmp
inc
add
jg
cmp
fwait
inc
sbbb
push
add
xlat
jmp
pop
mov
cwtl
orb
sub
fidivrs
add
cmp
idivl
mov
mov
sbb
add
pusha
xchg
cmp
lar
movsb
mov
sub
outsl
mov
or
js
fcoms
in
mov
mov
ds
sub
cmc
enter
or
xchg
mov
andl
sbb
rolb
int3
ds
das
add
nop
or
js
lock
pop
das
hlt
and
sbb
dec
test
inc
shll
jl
lcall
sbb
jecxz
cmpsl
das
stos
fcoml
pop
rclb
xchg
adcb
in
xor
int3
inc
addl
pop
cmpsl
mov
sarb
and
mov
cmp
cmc
fists
add
add
adc
sub
test
add
lahf
or
in
insb
dec
scas
add
mov
sub
fildl
jge
lahf
xchg
inc
mov
add
push
ljmp
daa
cmp
and
call
in
jl
enter
adc
add
sbb
xchg
jns
mov
inc
iret
xor
aas
test
in
pop
andl
test
and
jns
sbb
mov
inc
pop
dec
xchg
mov
fcomps
pop
pop
sub
inc
and
push
lds
and
pop
add
sbb
mov
xchg
dec
ljmp
rorl
fstpt
lahf
adc
icebp
cwtl
cmp
mov
mov
lods
cmp
lret
pop
push
or
xchg
data16
add
pop
fnstenv
hlt
fwait
dec
popf
mov
mov
data16
je
rorl
mov
pop
outsb
lock
loope
xchg
nop
flds
adc
and
add
rdtsc
cltd
leave
cld
sub
jmp
add
sub
jge
mov
mov
je
add
out
orb
mov
mov
jl
clc
jp
cld
or
pop
push
pop
dec
sbb
pop
aam
fimuls
hlt
stos
inc
push
add
jno
pusha
adcb
jo
cs
add
jecxz
dec
test
push
sbb
push
inc
push
mov
mov
insl
adc
les
clc
lret
pop
jp
call
or
inc
pop
mov
add
cmpsb
xchg
movsb
lsl
xor
roll
mov
xor
inc
cmp
pop
xchg
fdivs
add
and
fsubrs
add
sahf
sbb
sub
shll
xor
arpl
xor
push
mov
aaa
add
aas
and
pop
sub
fstps
pop
push
sbb
jo
add
lcall
xor
or
dec
jecxz
mov
gs
adc
pop
mov
xchg
add
lea
mov
dec
cmp
and
orb
mov
mov
xor
sub
loopne
jns
sti
mov
insb
cmp
ret
xor
dec
ljmp
or
lcall
fucomi
mov
push
xchg
xor
lock
adc
fcoml
push
and
adc
int
sbb
pop
movsb
add
nop
mov
sub
mov
daa
push
repz
xchg
dec
and
cltd
jl
fwait
sbb
push
fldenv
pop
cmp
je
aaa
lcall
fcompl
xor
push
loopne
jns
scas
aaa
add
jp
fnstsw
and
in
push
out
and
shll
cmpsb
jg
cltd
mov
inc
fwait
push
loop
or
lods
hlt
adc
inc
pop
out
push
lea
daa
xor
jge
pop
xor
push
add
pop
jg
pop
orb
fdivl
xchg
mov
dec
orb
std
push
push
test
loope
lock
push
xor
mov
or
inc
or
or
nop
fs
xor
and
jg
jnp
add
jne
xchg
and
nop
lods
pushf
push
pop
push
aas
inc
sub
add
xor
xchg
jecxz
or
pop
sub
jne
mov
mov
cwtl
dec
pusha
adc
inc
negb
xchg
out
mov
nop
dec
imul
es
xchg
sub
movsl
cmp
push
ret
mov
adc
and
call
add
xlat
std
adc
ljmp
test
js
xor
dec
sbb
les
and
and
icebp
push
jae
clc
add
shl
ror
add
jno
sub
xor
cltd
adc
and
cmp
in
mov
inc
dec
lcall
sbb
in
fisttps
out
jo
jne
enter
mov
arpl
add
mov
mov
mov
mov
add
pop
dec
test
and
mov
or
mov
push
and
mov
xor
repnz
mov
mov
lds
ret
mov
pcmpeqb
call
imul
mov
insb
fsubrs
add
call
xchg
rolb
loopne
ja
xchg
cmpl
rcll
sbb
scas
xor
push
cwtl
and
ljmp
sti
les
add
mov
and
sbb
call
xchg
lds
mov
pop
push
or
jae
push
mov
pusha
inc
sbb
push
sub
pop
out
dec
inc
rcrb
and
das
repz
mov
das
call
rolb
nop
roll
inc
mov
ficoml
js
cli
xchg
mov
pop
aaa
lcall
add
iret
inc
fadds
fstl
xchg
inc
push
lods
sub
or
loopne
push
mov
push
pusha
and
add
in
or
cmp
dec
js
lret
sbb
lahf
mov
add
jae
jne
test
scas
xorb
jle
or
cmp
dec
rorb
cmp
add
push
sbb
in
add
ss
xchg
pop
stc
idiv
inc
cmc
cmp
into
repnz
fs
mov
adc
cmpsl
jmp
movsb
add
inc
push
subl
push
jmp
jmp
xchg
insb
adc
cmp
call
xor
sub
inc
dec
or
das
inc
cmp
fisubs
lcall
inc
push
or
and
scas
adc
dec
jo
cmpl
cmp
sub
mov
pushf
cmpsl
and
add
mov
push
xchg
ret
test
mov
add
cmp
mov
and
sbb
add
mov
cmc
xchg
cwtl
pop
dec
out
xor
adc
add
leave
cmp
aas
cs
lods
and
jmp
push
enter
add
xchg
aaa
inc
jae
jl
or
outsb
scas
xchg
fdivr
mov
jmp
xorl
sub
das
jp
dec
add
test
orb
jg
or
fildl
mov
sub
pop
enter
push
stc
cmpsb
push
rclb
push
add
les
bound
jp
subl
addr16
stos
mov
stc
pop
add
cmc
dec
mov
jo
jg
aas
mov
in
xor
popf
pop
push
or
push
aas
mov
dec
xchg
test
cwtl
ficompl
sbb
mov
adc
out
adc
mov
cmp
sub
cmp
addr16
movsb
fidivl
xchg
mov
pop
out
jecxz
jmp
lock
pop
lret
add
popa
add
daa
icebp
inc
enter
adc
addb
bound
sbb
arpl
jbe
add
mov
and
mov
xchg
inc
lods
xchg
mov
jne
adc
fiadds
les
jae
and
xchg
inc
jp
pushf
sbbb
inc
paddw
mov
stos
lds
outsb
or
push
in
arpl
add
out
mov
adc
and
mov
ds
add
out
sbb
push
mov
adc
add
repnz
adc
mov
adc
xor
mov
inc
orb
bound
mov
xchg
movsb
pop
fdivrl
xchg
or
xchg
and
adc
pushw
xchg
pop
xor
outsl
xchg
and
cwtl
pop
movsb
or
push
and
cmp
rorb
add
cmp
jp
inc
insl
cld
lock
mov
les
js
xchg
or
test
pop
dec
adc
sub
enter
add
mov
andb
pop
cmp
mov
aas
in
xor
fisubrs
mov
nop
pop
andl
loop
dec
popf
dec
and
push
xor
in
mov
xchg
addb
fstps
sub
cmp
adc
push
add
push
rcrb
insb
jno
xchg
addr16
dec
dec
je
jno
and
addb
jae
xchg
adc
sbb
in
nop
lods
lahf
pop
add
push
inc
push
xlat
ss
add
ja
imul
lahf
add
mov
fcompl
add
push
xchg
notl
mov
or
and
jbe
inc
dec
mov
adc
xor
or
adc
lods
sahf
rolb
cltd
pop
int
xor
add
popa
bound
mov
push
lock
fwait
lock
add
loope
cmp
pop
ljmp
fmuls
movsb
mov
aas
outsb
and
imul
test
inc
cmpsl
or
add
mov
aad
adc
jb
negl
fcoml
dec
loop
push
cwtl
insb
cmp
sub
inc
cwtl
or
push
testb
cmpsl
int3
incl
adc
arpl
pop
cmp
xchg
incl
sbb
sub
cmp
stos
pop
in
icebp
mov
jnp
aad
das
mov
add
fstps
pop
xchg
mov
xchg
pop
andb
insb
mov
fldl
das
pop
and
add
adc
enter
fs
lods
rolb
jnp
inc
mov
mov
imul
jl
faddl
and
cmc
out
fsts
jp
push
and
dec
adc
sti
add
xchg
cmp
pop
test
inc
mov
bound
push
xor
daa
inc
js
adc
cmp
add
repnz
lods
lds
jbe
push
add
inc
adc
cs
orb
movl
mov
aas
pushf
pusha
adc
daa
xor
xor
movsb
dec
mov
shl
mov
cmc
pop
daa
loopne
add
jl
and
adc
xorb
pop
add
les
or
out
push
xor
and
aas
sets
stc
and
fs
ret
out
push
xchg
outsb
je
nop
pusha
out
pop
fstl
mov
fidivs
dec
mov
pop
leave
inc
imul
aas
arpl
cmp
or
and
sub
xor
or
pop
aaa
mov
and
es
daa
dec
mov
push
pop
mov
imul
sahf
out
add
dec
mov
cld
cmp
and
rcll
roll
push
sub
mov
jns
jge
push
jl
sbb
mov
xchg
popf
mov
inc
dec
adc
sub
jns
test
cmp
test
xchg
pop
and
fisttpl
nop
sub
jnp
ja
rcl
popf
and
sbb
jns
mov
and
add
inc
clc
notb
sbb
in
dec
fmull
je
push
xchg
loope
cmp
mov
dec
fsts
je
leave
jno
icebp
xchg
sbb
xor
loope
imul
div
jle
push
adc
pop
test
dec
mov
mov
sub
sbb
arpl
fistpll
js
daa
sub
imull
scas
inc
cmp
loop
punpcklwd
push
sub
cwtl
add
mov
pushf
repz
pop
int3
fldl
lret
mov
ss
push
sbb
call
aam
cmp
inc
mov
test
push
aam
adc
idivl
mov
xchg
scas
inc
nop
in
sbb
inc
adc
mov
adc
add
xor
mov
dec
ljmp
das
movsl
push
les
cmp
nop
or
add
push
enter
nop
stc
pop
pop
cld
add
mov
or
and
mov
add
mov
in
test
rcrb
addr16
fnsave
or
inc
mov
cmpsb
dec
jecxz
add
movl
jmp
jge
sub
xchg
add
dec
shl
loopne
loopne
mov
lock
fcmovu
xorb
fdivrs
icebp
insb
and
xor
sbbb
add
out
iret
add
fwait
sbb
lock
xchg
push
in
push
push
xchg
sbb
adc
insb
les
inc
fnstenv
xchg
push
add
sti
xchg
push
cwtl
jbe
xadd
sub
and
nop
xchg
dec
jg
jae
cli
mov
addr16
add
sub
mov
mov
pop
add
push
jae
daa
fwait
dec
jp
loop
nop
sbb
faddl
es
pop
and
test
push
sbb
pop
inc
sbb
dec
cmpsl
inc
mov
lahf
ljmp
fidivrs
pop
imul
shlb
pop
push
addr16
nop
cmp
push
adc
movb
mov
jo
pop
mov
add
aam
adc
call
jns
or
push
fs
faddl
outsl
stc
dec
mov
fsubr
add
xor
or
scas
and
push
outsl
vpmaxub
mov
adc
fisubs
test
adc
pop
inc
mov
mov
mov
pusha
and
sub
imul
jl
cmp
int
xor
cmc
and
xchg
enter
aaa
lea
or
js
lods
jbe
fs
add
leave
pop
sub
add
outsb
loope
push
nop
dec
inc
mov
imull
add
pop
lods
cmp
out
or
adc
adc
add
fcoml
xor
dec
mov
enter
add
nop
sbb
je
pop
stc
js
enter
pop
loopne
dec
dec
stos
mov
xlat
dec
pop
loop
pop
cwtl
adc
pop
push
inc
leave
ljmp
add
jl
sbbl
stos
pop
add
popa
cs
cmp
in
add
fldt
sub
test
pusha
push
xchg
xlat
xor
mov
lret
addl
call
sub
enter
mov
dec
adcl
pop
and
jo
xor
bound
mov
jo
hlt
push
mov
jg
test
ret
out
jbe
roll
and
mov
mov
jbe
stc
mov
jmp
mov
mov
pop
neg
call
adc
fidivl
mov
xlat
mov
xchg
loop
pop
inc
adc
adc
stos
out
cmp
ret
ss
repz
xorb
dec
nop
fists
lods
jmp
mov
inc
popa
push
adc
inc
add
stos
xchg
jne
rolb
movl
mov
mov
insl
scas
shlb
push
cmp
push
ret
insl
in
jbe
adc
lods
adc
jb
outsb
inc
add
or
lds
scas
pop
js
mov
jl
cmpl
jo
test
incl
xchg
dec
fistps
call
xor
fisttpll
ret
push
and
addr16
cmpsl
or
loopne
cwtl
xor
repz
xchg
ret
popf
pusha
xchg
and
arpl
xchg
iret
adc
fldcw
jp
jo
and
scas
cmp
add
cmp
ds
dec
movsb
cmp
inc
fstl
jae
les
or
aaa
xor
inc
sbb
mov
xor
mov
cmp
test
push
add
aaa
add
or
mov
in
inc
aas
xor
mov
sub
ret
out
pop
and
xchg
imul
xor
xor
inc
mov
addb
sbb
push
jb,pt
sub
jl
pop
movsb
mov
mov
cmp
mov
mov
dec
inc
jbe
push
negb
add
inc
inc
inc
adc
cmp
lods
fstp
xchg
shlb
mov
pushf
dec
faddp
fs
enter
mov
inc
add
adc
mov
fdivrl
pusha
mov
and
jae
std
xchg
sbb
popa
sbb
mov
jl
jp
or
hlt
dec
mov
fbstp
mov
sahf
mov
add
je
mov
rolb
jle
add
push
pop
mov
movsb
in
pusha
call
cmp
in
mov
and
dec
push
out
push
add
inc
loop
pop
and
push
cmp
cltd
jl
popa
mov
cmp
ljmp
sbb
xlat
pop
cltd
sbb
cmp
mov
repnz
insb
xchg
loope
in
arpl
xchg
or
jl
jmp
test
add
add
xor
add
fisttpl
jnp
or
push
cmp
cmpsl
dec
imul
mov
jg
lock
popa
in
sub
add
in
in
das
cmc
or
jl
mov
sbb
inc
add
and
cmp
inc
mov
lock
loope
add
sti
push
les
and
pusha
ret
outsb
add
aaa
add
add
fildl
call
dec
mov
pusha
lahf
hlt
xchg
aam
mov
in
fbstp
adc
sbb
and
jnp
add
lods
lock
mov
repz
dec
loope
jb
ret
lea
or
cmp
arpl
mov
rol
bound
add
adc
ljmp
adc
das
and
or
add
mov
pop
jnp
or
cwtl
dec
popf
loopne
push
xorb
mov
pop
cld
adc
mov
testl
pop
sarl
cld
add
xchg
xchg
adc
dec
push
jo
cld
and
outsb
adc
into
jb
pop
lcall
push
inc
shlb
xorb
pusha
inc
shlb
add
test
or
jno
jl
hlt
add
jne
andb
call
mov
sbb
outsb
rcl
xchg
dec
pop
test
mov
and
mov
popf
sbb
inc
into
int
cmpsb
and
sbb
xor
cld
pusha
leave
cmp
or
push
push
xchg
jb
jg
xchg
repz
jb
sti
add
pop
repz
flds
bnd
add
bound
sbb
addb
cs
jne
rcll
xchg
pushf
mov
aaa
add
push
jns
mov
sbb
orl
ja
push
or
in
call
pop
out
sub
movsb
cmpsb
fcoms
andl
cmp
jmp
pop
cmpsl
xchg
xorb
and
mov
inc
adc
shrb
test
pusha
sub
mov
ds
sbb
nop
das
sarb
adc
ja
dec
push
fs
pusha
jecxz
jb
out
push
xor
mov
data16
adc
adc
out
mov
rcrl
icebp
lods
test
jbe
popf
cwtl
pop
cmp
movsb
das
jg
shlb
aas
mov
cmp
push
lret
out
and
pop
pop
divl
xchg
ret
cld
or
rcrb
jb
cwtl
xor
push
and
push
pusha
xchg
test
repz
fcoml
sub
pop
scas
push
jnp
lret
test
les
fwait
xor
sahf
cmc
shll
hlt
jge
loop
push
movsl
je
aam
jo
push
dec
xchg
enter
es
pusha
in
jae
mov
and
fldlg2
pop
push
xchg
ss
sbb
call
scas
jp
xor
pushf
jnp
test
and
mov
pusha
nop
xlat
outsl
leave
pushf
xor
pop
cmp
lods
sub
in
test
cmp
xlat
stos
or
data16
add
push
pop
mov
add
out
fisubs
jbe
or
stc
and
jle
rol
push
jl
lahf
nop
hlt
cli
xchg
outsb
repnz
ret
dec
sbb
push
ds
mov
add
mov
in
inc
fildll
jnp
push
ret
mov
inc
and
lahf
xchg
sub
fcomip
cmpsb
lods
jne
mov
cwtl
popf
in
add
push
filds
push
orb
leave
fisubs
add
push
ret
out
es
rcrl
popf
adc
inc
mov
pop
push
les
cld
dec
ret
jle
popf
adcb
andb
cmpb
push
rorb
push
mov
into
fisubs
xor
imul
loopne
mov
adc
dec
add
mov
jo
xchg
daa
div
or
je
adc
and
cltd
inc
hlt
push
shlb
lock
dec
mov
add
addb
xor
insb
dec
loop
jl
mov
aas
leave
sbb
in
add
enter
cmpsb
mov
mov
mov
aad
xorl
and
les
fwait
mov
xchg
outsb
ss
sti
ret
xor
daa
or
repnz
dec
dec
xchg
xchg
lock
add
mov
inc
sub
call
insl
out
dec
push
repnz
add
xor
outsl
je
jmp
loopne
ss
mov
hlt
lock
or
movsl
inc
mov
mov
or
movsb
clc
mov
mov
push
arpl
adc
dec
dec
mov
cmp
shlb
push
mov
cli
xchg
daa
jae
push
and
add
add
in
mov
mov
pop
lahf
mov
inc
sarb
jb
loopne
mov
dec
dec
push
pop
lea
repz
xor
xor
hlt
mov
fbld
and
inc
dec
xchg
idivb
dec
mov
pop
add
outsl
fisttps
into
enter
sarb
xchg
test
or
jmp
jb
pop
sbb
pop
mov
cmp
xchg
lret
dec
mov
outsl
and
adc
pop
push
sti
int
in
adc
and
adc
cld
jno
daa
pop
cltd
pusha
xlat
cs
dec
loop
add
jae
mov
add
jl
jecxz
sub
sti
xor
movsb
shll
cmp
push
xchg
adc
add
out
jg
add
mov
inc
test
mov
fnsave
loop
adc
dec
adc
and
push
sub
push
cmp
cmc
addl
das
shlb
xchg
pop
sub
mov
or
or
movd
mov
dec
jmp
cmp
test
out
mov
subb
and
data16
sbb
shrb
lock
rcr
and
loopne
xchg
xor
and
jg
add
sub
loope
lret
pop
add
add
or
cmp
gs
dec
lods
nop
sub
xor
cmp
push
mov
add
mov
test
add
repnz
test
shl
inc
mov
leave
inc
jno
jl
add
in
push
into
aas
test
adc
lret
pop
xchg
inc
jnp
cltd
inc
jae
lahf
nop
lods
pushf
mov
sbb
dec
xchg
rcrb
aas
in
les
lds
add
push
xchg
mov
adc
pop
mov
sbb
pop
adc
adc
int3
pop
jl
call
sub
in
loopnew
ds
xchg
mov
add
jo
xor
fld
or
ffreep
pushf
js
pop
lcall
mov
sub
enter
mov
add
add
rcll
ret
push
stos
or
dec
fdivr
pushf
movsl
out
mov
gs
mov
cltd
mov
les
sub
cmp
xchg
sub
daa
mul
or
mov
xchg
shll
xlat
ret
cltd
das
jno
imul
mov
cmp
mov
push
add
cwtl
dec
in
sbb
xchg
inc
add
fisttpl
sub
mov
xchg
arpl
nop
insb
adc
adc
mov
sub
cwtl
pop
sub
pop
inc
adc
das
dec
scas
out
jp
data16
add
xlat
repz
shlb
add
and
inc
lret
add
jecxz
insb
fwait
add
push
cs
add
repz
inc
mov
xor
out
mov
out
out
adc
lock
lock
inc
adc
add
subl
je
lcall
mov
mov
push
in
adc
inc
scas
cmpsb
jnp
outsl
into
fcoms
xchg
sub
test
pop
imul
pop
movsb
daa
iret
ss
add
aam
xor
bound
icebp
sub
shrl
dec
in
adc
in
add
or
scas
test
stos
fwait
pushf
sub
xchg
ret
cmc
add
xchg
iret
inc
movsb
pop
dec
sub
inc
or
arpl
pop
divb
arpl
lock
loopne
mov
add
stos
pop
pop
mov
jmp
and
mov
sti
outsb
pop
add
pushf
sub
in
dec
pop
sbb
ljmp
les
imul
lret
cltd
lea
mov
shll
add
test
popa
xchg
jp
sbb
pop
push
dec
mov
iret
add
fs
imul
pushf
es
xchg
enter
cs
out
dec
xchg
aad
add
jb
gs
jno
inc
cltd
jns
jl
mov
sub
sarb
sbb
sarb
cmp
loopne
addl
pop
mov
push
leave
mov
dec
fwait
clc
fs
add
jb
or
jg
add
and
shlb
imul
mov
fsubs
in
std
xchg
jne
rclb
xor
dec
inc
mov
repz
js
jb
add
xchg
add
lcall
and
mov
cmpsb
cmp
add
divb
dec
or
push
xor
add
xchg
pusha
sbb
or
cmpsl
inc
pop
jne
pop
and
mov
or
inc
and
int
rorb
pop
sbb
loope
ds
lcall
cmp
xchg
movsb
mov
inc
mov
fcmovnbe
pop
cmpsl
fiaddl
divb
enter
jl
inc
mov
lret
sub
adc
nop
movsb
mov
add
xchg
and
xchg
popa
cld
adc
stos
mov
dec
popf
les
aaa
fwait
and
in
mov
jnp
in
mov
dec
mov
xchg
clc
add
out
es
push
cs
sub
repnz
popf
mov
das
xor
mov
fwait
mov
aaa
je
test
inc
dec
mov
jbe
iret
and
mov
test
mov
mov
mov
lods
rclb
lahf
pop
loope
gs
sarb
lods
add
mov
pop
jb
adc
mov
mov
dec
dec
mov
or
inc
pop
js
mov
ss
in
jl
lcall
mov
ficomps
fs
sub
enter
jmp
jae
je
push
insl
pusha
fs
pusha
push
mov
mov
pop
sub
test
mov
lods
cmp
add
pusha
clc
inc
mov
xor
rcl
test
cld
clc
xchg
mov
popa
xchg
dec
or
adc
insb
imul
dec
adc
push
dec
stos
xchg
fisttpl
out
add
xchg
push
fcoms
das
imul
movsl
stc
test
cmp
cli
inc
dec
xchg
cli
mov
aam
mov
dec
jle
clc
rcll
nop
mov
jp
shr
xor
xor
mov
subb
in
xchg
data16
adc
sbb
push
dec
icebp
arpl
leave
lock
mov
mov
andb
push
jmp
cmp
adc
mov
inc
loopne
aas
sbb
outsb
aam
mov
popf
xrelease
ret
add
sbb
add
arpl
sbb
nop
mov
pop
dec
adc
or
jae
fsubrs
add
icebp
and
ljmp
loopne
and
add
pusha
jmp
int3
or
mov
inc
subb
stos
fwait
adc
mov
jae
push
adc
mov
rcrl
mov
push
inc
push
inc
add
ds
loop
repnz
xor
filds
mov
adcl
mov
pop
inc
push
add
cmc
inc
jns
addr16
into
pop
jbe
inc
and
ja
mov
mov
aaa
cmp
mov
daa
mov
les
cld
mov
add
and
pop
cmpb
popf
repz
inc
xor
and
negb
lcall
lock
or
rcll
jns
pop
scas
adc
lcall
sub
lcall
lret
inc
mov
ret
sbb
jo
mov
sub
dec
lock
cvtps2pi
stc
data16
inc
pop
jnp
sub
cmp
or
cmpsl
aam
imul
shrb
pop
inc
push
add
sub
sbb
icebp
push
in
xchg
mov
adc
call
rolb
fwait
cmp
xchg
aad
lea
xchg
call
lret
add
add
add
inc
mov
and
je
xchg
scas
lods
mov
jg
inc
xorb
add
btc
cmp
leave
push
inc
and
mov
fcom
mov
sarb
inc
sbb
push
fists
and
lods
sbb
lock
repz
jo
fidivs
and
sti
dec
int3
or
inc
fldenv
lcall
inc
or
loop
shrl
in
xor
pop
flds
lock
in
in
outsl
mov
and
or
pusha
ret
adc
outsb
repnz
cmp
hlt
mov
inc
xchg
mov
jge
mov
ds
xor
xor
mov
popf
clc
orb
pop
pushf
nop
es
push
xor
push
mov
push
adc
pop
mov
std
sarb
fs
mov
fiadds
out
xchg
sub
pop
mov
jg
and
mov
inc
call
adc
repnz
lods
pop
pusha
fistps
and
inc
push
lcall
cld
and
mov
or
sbb
lea
call
ss
jo
adc
cmpsl
pop
xchg
bound
sbb
pop
fwait
sub
aaa
andb
insb
add
inc
in
movsb
adc
adc
inc
pop
ljmp
das
xchg
iret
xlat
sub
out
lahf
mov
aad
and
cmp
add
mov
lock
outsl
negb
mov
pushf
out
mov
adc
xor
lods
mov
mov
add
jno
xor
loope
das
xor
or
rcl
js
fwait
out
pop
int
cmp
rcrb
scas
cmp
aas
inc
add
sub
cmp
adc
mov
shrb
add
adc
xchg
xlat
daa
repz
mov
lret
punpcklwd
xor
das
push
aam
jne
adc
lcall
pop
cwtl
xchg
aas
push
andb
push
sbb
xchg
adc
adc
adc
bound
insb
and
cmp
fldl
xchg
sub
push
xchg
add
imul
lret
aad
fptan
shlb
or
into
in
adc
or
insb
jbe
inc
add
arpl
add
mov
and
ret
cli
sbbl
sub
mov
pop
cld
pop
mov
std
mov
xor
mov
inc
pop
cmp
in
jl
push
add
push
add
pop
mov
cmp
push
sbb
inc
dec
nop
cmp
xor
xor
in
jecxz
add
dec
dec
mov
sub
repnz
push
orb
mov
repz
push
push
xchg
adc
pusha
add
add
cmp
sub
and
mull
aaa
mov
add
sti
mov
push
js
and
dec
pop
fmull
sbb
sarb
popf
pop
add
lcall
pusha
ss
cmp
xor
pop
mov
sbb
dec
shll
mov
mov
jbe
push
sbb
mov
adc
sbb
xchg
sub
into
int3
sbb
icebp
add
sbb
sub
in
mov
mov
and
inc
cmp
jl
jg
mov
out
mov
xchg
setbe
mov
adc
cmp
ja
lods
mov
or
adc
add
push
push
add
mov
ds
mov
hlt
xchg
cmp
pushf
fisttpll
clc
dec
or
xchg
cmp
movsb
aad
nop
rorb
dec
add
pop
out
xchg
fs
xor
scas
adc
iret
lock
mov
or
cs
faddl
and
aaa
sbb
dec
cmp
sbb
pop
xchg
nop
inc
fsubrs
push
addb
adc
jo
cwtl
adc
aad
xor
dec
mov
inc
adc
xchg
lods
je
cmp
xor
test
shlb
lret
les
test
dec
push
rcl
icebp
sbb
cmp
add
jmp
pop
sbb
inc
mov
mov
mov
push
inc
mov
sub
and
aaa
push
daa
mov
cmp
add
lret
and
jne
push
add
sbb
or
mov
addb
xchg
xchg
cmp
or
add
mov
int3
fiadds
mov
repnz
loope,pt
addr16
mov
cmp
xchg
rclb
mov
sub
dec
dec
push
jns
test
or
jns
in
outsb
mov
out
and
fwait
call
add
push
cmp
sub
js
pop
les
fnsave
and
icebp
mov
leave
and
cs
ret
and
das
fcoms
cmpb
daa
mov
fistpl
scas
mov
or
fnstsw
inc
lcall
sbb
push
pushf
icebp
adc
xchg
mov
loopne
pop
enter
repnz
mov
rclb
stc
push
sbb
xor
adc
mov
and
shr
outsb
cld
pop
mov
xor
loop
lea
repz
cwtl
xchg
movsb
mov
mov
or
inc
or
xchg
jbe
imul
or
in
fisttpll
jmp
sub
rol
xor
pop
aad
adc
scas
jmp
out
and
gs
stc
mov
shl
pop
add
cs
xor
int3
lahf
int
xchg
sbb
das
jg
cmp
popf
and
xlat
ficoml
push
pusha
leave
push
dec
pop
mov
test
mov
cmp
addr16
pop
inc
or
cmp
push
shlb
dec
mov
hlt
or
pop
jge
faddl
hlt
xchg
popl
sub
push
pop
adc
add
and
xchg
and
outsb
dec
bnd
dec
or
ss
or
push
mov
pop
sub
dec
fistps
cmp
add
or
push
das
mov
push
dec
jno
jp
add
fsubl
push
xchg
or
popf
rclb
inc
sbbb
push
add
sbb
nop
into
sub
lock
movsb
or
xchg
mov
int
sbb
data16
add
repnz
nop
add
cmp
lods
call
sub
pop
inc
nop
dec
inc
mov
int
pop
shrd
notb
aam
lea
adc
leave
push
mov
mov
add
xlat
mov
sbb
das
xor
xchg
ficomps
sbb
test
out
outsl
adc
mov
xor
lods
mov
stc
clc
mov
adc
mov
sbb
jp
add
test
cwtl
xchg
imul
adc
cwtl
daa
pop
xchg
inc
imul
or
rclb
cwtl
lods
dec
or
loope
js
xchg
pop
xor
inc
sbb
inc
xchg
cmp
fucomip
js
pop
cs
xor
jno
add
inc
push
adc
das
xchg
out
faddl
sub
jno
add
xchg
ret
add
mov
and
mov
push
jbe
movl
add
and
daa
push
cmp
pusha
mov
pop
xor
and
cmpsb
jno
sbb
mov
loope
ja
pop
pop
add
sbb
add
idivb
pop
movl
inc
aaa
jae
jmp
adc
pop
dec
popf
mov
xchg
enter
fisubs
sarl
add
les
xchg
mov
cs
push
add
cli
or
psubsb
popf
push
and
xchg
cmp
je
shl
pop
or
cmp
add
add
xlat
or
add
imul
fcmovb
icebp
push
and
adc
std
mov
fwait
xchg
cli
or
cli
gs
cmp
daa
mov
add
aam
test
inc
arpl
mov
pop
push
push
in
dec
or
add
sti
add
es
lock
sub
mov
push
mov
orb
mov
push
lods
add
sub
sub
sbb
add
insb
pop
nop
inc
sbb
mov
add
push
adc
pop
cwtl
cmpb
pop
add
mov
pusha
jo
popa
scas
mov
push
sub
push
test
movsb
bound
pop
push
jmp
mov
add
jl
imul
pop
mov
aam
sub
push
jmp
mull
outsl
cwtl
pusha
in
sub
cmp
popa
sbb
dec
ljmp
dec
mov
popa
movswl
fcoms
pop
add
sbb
xlat
sub
loopne
and
adc
sub
cmp
repnz
sahf
jg
or
nop
pop
int
pusha
out
call
scas
imul
xchg
stos
arpl
imul
xor
ljmp
outsb
test
loop
push
dec
in
push
or
subb
int
pusha
popf
dec
jne
pusha
pop
icebp
pushl
pusha
sbb
or
and
popa
pop
or
push
lret
or
mov
popf
test
or
jo
adc
sbb
in
and
daa
mov
sbb
mov
adc
movsl
jg
test
cmp
ffreep
ror
hlt
pop
or
push
xchg
mov
data16
shll
ret
fsubr
add
mov
mul
out
add
das
jae
enter
out
dec
adc
lods
cmp
xchg
rcrl
add
sbb
rcll
add
mov
adc
add
movsb
push
pop
in
pop
cmp
insb
repz
and
cmp
mov
imul
adc
dec
mov
or
test
sahf
cmc
xchg
movsl
push
or
call
inc
lcall
xorl
pop
rorb
mov
cmp
pop
mov
cmp
add
mov
dec
stos
aas
testb
fldenv
mov
lahf
mov
push
mov
mov
inc
cmp
fildl
sub
add
mov
sub
mov
dec
push
push
mov
adc
and
push
add
xor
rorl
rolb
jo
push
adcl
add
addr16
xchg
pop
sub
inc
out
mov
xchg
pop
xor
lods
jo
push
jl
pop
ja
xchg
ljmp
inc
subl
mov
movsl
js
outsl
mov
pop
insl
or
testl
mov
out
jle
stc
rclb
ret
add
or
movsl
pop
mov
pop
and
mov
lock
fst
rcll
popf
adc
or
add
push
lock
pusha
mov
ja
cmc
subl
pop
sti
jo
adc
mov
loope
mov
test
sub
add
jmp
outsl
adc
gs
les
xor
fists
adc
and
pop
add
xchg
fisubs
dec
bnd
fnstcw
and
or
xor
popa
mov
and
add
lock
or
or
or
nop
mov
sbb
jno
hlt
mov
icebp
pushf
jae
inc
xor
push
pop
cmp
mov
or
jae
popl
pop
mov
dec
adc
cmpsb
sbb
call
dec
nop
push
ror
dec
mov
pop
cmp
xchg
insl
sbb
cwtl
mov
int3
aas
mov
add
loopne
jmp
push
xor
leave
lahf
or
pusha
les
add
inc
sbb
mov
int3
pop
pop
mov
xchg
jbe
mov
add
loope
push
lock
pop
into
in
sbb
gs
das
idiv
in
add
cs
jg
xchg
sti
sarb
and
ss
push
roll
and
jge
lret
push
jno
mov
jne
testb
lods
add
sub
mov
mov
or
and
xor
push
xchg
stos
loopne
divb
dec
pusha
insb
es
or
xor
push
loope
mov
jle
add
and
or
mov
xor
push
jl
add
mov
mov
push
sub
cltd
cmp
push
pop
mov
xchg
push
lea
add
lcall
add
push
add
mov
adc
mov
xchg
sub
dec
cmpl
call
and
cmp
and
adc
mov
shl
aam
rol
dec
mov
test
mov
inc
cmpsb
in
aas
and
pusha
cld
mov
lds
push
sub
movsb
fldt
sbb
arpl
aad
movntps
mov
pushf
jnp
imul
imul
jle
cmp
fcomps
push
mov
add
sbb
cmpl
mov
adc
pop
pop
outsb
test
clc
cli
pop
add
daa
sub
jbe
in
or
pop
push
jmp
pushf
add
pop
popa
jmp
mov
mov
lods
lods
daa
add
sub
popa
popf
hlt
sbb
or
movl
ss
xorb
jns
lret
shll
add
xchg
xor
out
sti
jns
jmp
rcrb
mov
add
inc
out
push
shr
mov
cmp
icebp
add
sbb
fiadds
cmp
push
xor
push
sub
inc
and
pop
int
add
sbb
mov
xchg
xchg
js
ja
andb
or
push
mov
fidivs
mov
repz
inc
ss
and
les
sub
mull
es
mov
jmp
lahf
add
test
dec
mov
mov
scas
fisubs
shll
lods
cmp
adc
cmpl
out
xor
sbbb
adc
aaa
sbb
pusha
shl
fcompl
add
add
xchg
mov
xchg
push
enter
add
jno
add
shll
mov
dec
xor
xchg
mov
fmull
fxch
jg
mov
pusha
test
daa
adc
in
fs
js
cmp
add
pop
lods
ret
je
sub
xor
inc
inc
adc
pop
pop
cmp
jmp
test
mov
call
clc
shlb
or
ret
cmpsb
add
xor
jl
subb
push
or
test
sub
das
add
jb
mov
push
adcb
and
incl
lea
mov
push
mov
add
in
add
iret
mov
push
lods
push
add
sbb
movsb
or
shrl
xlat
dec
sarb
movsl
ljmp
add
cmp
icebp
pusha
inc
mov
std
add
mov
les
pusha
loope
fnstenv
add
call
adc
test
loopne
enter
fidivl
jl
repz
dec
cli
imul
push
or
xchg
and
or
add
mov
cmp
adc
inc
ja
adc
sbb
mov
sti
fcomps
imul
imul
lahf
inc
mov
mov
test
xchg
cltd
inc
mov
inc
rcl
in
add
std
jne
lods
jbe
xchg
pop
pop
nop
inc
cmp
mov
repz
repnz
pop
inc
inc
fs
ficompl
pop
loopne
jne
test
xorl
movsl
sub
and
pop
push
stc
push
push
bsr
dec
repnz
add
test
mov
fstps
and
add
cmp
aam
leave
jno
scas
add
and
repnz
mov
push
jge
divb
adc
ljmp
mov
or
lret
sub
and
xchg
hlt
pushl
adc
add
nop
adc
xchg
jae
or
mov
and
insl
vmread
or
or
shrl
les
aam
jb
in
add
adc
cmpsb
dec
cld
fnstenv
add
jp
loope
cmpsl
mov
inc
cmp
nop
push
push
mov
push
lret
mov
rclb
aam
lcall
mov
adc
add
mov
mov
adc
add
dec
nop
stc
mov
and
mov
push
pop
sbb
xchg
add
push
movswl
mov
inc
mov
icebp
daa
fisubl
xchg
out
xlat
and
mov
fdivrs
jo
leave
add
add
pusha
xor
popa
call
idiv
xchg
xchg
jmp
aaa
xchg
loopne
sbb
adc
daa
xchg
jno
andb
out
sub
push
sub
xchg
or
dec
lret
xor
push
push
jne
xchg
lods
mov
pop
sub
lods
cmp
aad
shll
add
push
jmp
pop
mov
or
sbb
repnz
lcall
mov
dec
push
add
movsl
sub
jns
test
pop
sub
insb
xor
fcoms
popa
mov
pop
cmp
xor
nop
shr
jo
push
add
cmp
imul
pop
scas
cld
fisttpl
push
or
push
and
lds
pop
xchg
lcall
xchg
xchg
pop
xchg
add
mov
xor
notb
jns
add
mov
aam
add
push
icebp
dec
xchg
and
pop
or
lcall
jbe
movsl
int3
fildl
loopne
add
lret
sub
dec
jno
popa
inc
add
cs
lock
aas
sbb
dec
ljmp
adc
repnz
mov
jmp
iret
js
aad
test
popa
lds
loope
faddl
inc
dec
mov
roll
aad
adc
sbb
sarb
dec
or
pop
pusha
fistpll
push
sbb
adc
enter
shrb
pop
jo
sti
shl
add
push
stos
xchg
pop
cwtl
push
dec
sub
sub
cmp
iret
pop
cltd
mov
call
pop
mov
add
fstpl
adc
je
push
or
pop
xor
dec
jp
inc
and
adc
dec
mov
push
mov
mov
inc
add
or
pop
cmc
adc
hlt
and
xchg
or
daa
push
nop
test
jno
clc
ffreep
push
dec
jns
add
not
mov
fwait
pop
sub
out
jl
mov
sahf
ljmp
push
arpl
sbb
inc
sbb
popf
das
push
mov
push
mov
and
add
mov
sbb
xor
jns
or
out
sub
push
xchg
sbb
adc
rcrl
inc
or
and
xchg
mov
repnz
jae
jo
lahf
add
decb
addb
les
sub
mov
mov
out
cmpsl
clc
push
add
dec
ror
dec
push
push
adc
popf
push
push
fwait
jmp
mov
add
andb
or
fs
call
and
ljmp
pop
lea
and
rol
adc
dec
rolb
adc
mov
insl
add
aad
popa
pop
jl
mov
adc
jmp
and
mov
xorl
icebp
or
cld
pop
inc
add
jmp
ds
fmull
daa
pop
aaa
push
add
mov
dec
pusha
mov
push
imul
cmp
sub
in
adc
cwtl
xchg
cmp
stc
mov
jnp
je
dec
fisttpl
push
mov
pop
pusha
outsb
in
sbb
pop
shr
and
or
addr16
cmp
add
mov
daa
push
pop
inc
mov
dec
pop
pop
in
pop
add
fisttpll
mov
pop
jl
xchg
rclb
cmpl
js
push
jge,pt
sbb
pop
cmp
sbb
andl
scas
ss
scas
imul
addl
sbb
ret
add
jmp
popf
sbb
mov
pop
fdiv
lock
push
loopne
jne
pop
scas
out
outsl
nop
imul
flds
push
push
push
push
pusha
adc
loopne
cmp
stc
aam
mov
cmp
jmp
add
test
jne
mov
lcall
xor
fs
std
les
stos
xor
sti
cmp
xorl
shl
lock
vhsubpd
xor
loop
xor
sub
add
popf
cltd
xor
movsb
les
outsl
push
or
push
bound
out
mov
mov
dec
pop
jo
mov
in
mov
cmp
mov
imul
lret
cmc
xor
add
mov
stc
call
jge
fmull
incb
rcrb
daa
aad
shrl
icebp
js
ss
mov
sbb
aam
test
or
add
mov
mov
xchg
outsl
pop
add
xor
sbb
pop
arpl
call
jne
xor
adc
sub
jmp
clc
lds
xor
or
fcomi
mov
dec
add
ds
test
push
cmp
in
cmp
adc
jecxz
insl
cs
call
jb
adc
repnz
or
les
pop
pop
xchg
stc
es
add
pop
push
inc
mov
xchg
pop
xchg
xchg
pop
lret
sti
gs
cmp
mov
fs
xor
js
push
mov
les
pop
pop
imul
mov
adc
sbb
aam
aam
jb
insl
cld
add
sub
mov
fsubrl
adc
aad
loope
mov
loopne
shlb
outsb
mov
in
xchg
movsl
movl
mov
dec
pop
dec
imul
arpl
sub
mov
mov
out
addb
jno
mov
fwait
gs
je
push
or
cmpsl
jo
sub
loopne
add
add
jnp
js
outsl
or
jnp
fists
or
lods
xchg
test
stos
xor
cltd
inc
adc
adcb
inc
loopne
or
inc
xor
pop
mov
fidivrs
out
add
pop
or
sbb
shll
ficomps
cmp
insl
icebp
mov
neg
int
pusha
test
xchg
jbe
stos
cltd
adc
daa
mov
inc
jae
mov
popf
rcll
add
lods
add
rcl
test
cmp
or
adc
and
shll
cltd
mov
mov
lock
pop
and
in
sbb
ret
adc
dec
int3
rcl
andb
out
sub
stos
xorl
and
or
pop
cmpl
hlt
lods
movsb
test
jnp
imulb
icebp
adc
pusha
mov
xchg
stc
inc
cmpsl
andb
inc
lock
test
mov
adc
popa
bound
stc
stc
in
movsl
dec
mov
mov
daa
in
icebp
push
mov
pop
dec
push
sub
add
lods
mov
addr16
cmp
add
push
mov
mov
push
mov
lds
aaa
xlat
sub
shlb
xchg
xor
in
push
movsb
xlat
cmp
mov
call
call
adc
xchg
and
fldcw
fisubrl
mov
jge
xchg
fwait
pushf
xorl
jecxz
test
das
xlat
fildl
call
push
dec
repnz
lret
push
mov
cmp
lcall
nop
jb
popf
fnstsw
xchg
xchg
mov
mov
hlt
mov
ret
sbb
lods
loop
pop
mov
add
pop
or
rol
jbe
xlat
js
ret
xchg
xchg
and
add
in
mov
scas
add
stc
loopne
clc
out
fucomp
push
lahf
mov
push
dec
mov
pusha
sub
jmp
cmc
stos
add
mov
je
add
xor
cmp
push
push
pop
mov
mov
mull
jns
add
xor
cmp
cltd
adc
popl
dec
nop
loopne
push
push
dec
fcoml
pop
jno
xor
push
test
leave
cmp
stc
add
cmp
fsubl
push
pop
sti
add
sub
stc
dec
movsl
addl
call
into
mov
push
mov
push
xor
xchg
mov
cmp
mov
push
fsub
dec
daa
and
jge
and
mov
pop
cmp
inc
mov
inc
imul
wbinvd
xor
rcll
sti
jns
push
and
iret
lock
sbb
pusha
add
enter
sbb
xor
xor
and
es
pop
jno
aam
pop
or
shrl
outsb
jg
lods
pop
adc
fdivs
adc
pop
mov
pandn
fstl
mov
sub
sbb
movsb
pusha
push
pusha
leave
in
xchg
add
aam
xchg
daa
push
test
pop
add
testl
sub
popf
inc
cmpsl
adc
insl
mov
sub
xor
test
fdivrl
xchg
inc
aad
jae
inc
pop
jmp
or
es
or
dec
fisttps
popa
inc
daa
stos
fstl
imulb
adc
xchg
dec
mov
popf
sbb
add
mov
add
nop
pushl
and
jmp
sbb
repnz
bound
stc
and
sbb
stos
add
inc
cmp
mov
xor
push
paddusw
gs
jmp
in
loope
movsb
rolb
mov
iret
or
cmc
xor
aam
xchg
xchg
push
mov
imul
jne
das
push
outsl
add
fcomps
jno
cwtl
and
xchg
repnz
jo
or
pop
add
jmp
sub
sub
adcb
sub
lods
movntq
in
xchg
loop
cmp
je
orl
mov
cmp
mov
out
js
add
out
int
push
jo
add
xchg
je
sbb
jno
sub
adcl
push
sub
sub
fnstsw
ds
inc
jbe
lds
pop
inc
out
inc
mov
xchg
push
inc
adc
into
int
in
inc
enter
fneni(8087
jmp
mov
xor
cmp
rorl
ret
lods
es
out
or
adc
jle
dec
std
sbb
add
pop
jae
and
mov
jnp
xor
dec
int
jp
inc
adc
and
or
je
cld
xor
popa
mov
add
mov
dec
test
adc
clc
cld
ret
adc
adc
rcr
adcb
adc
test
mov
cmp
je
cmc
mov
jle
sti
push
loope
and
push
push
addl
push
and
add
mov
and
push
addb
imul
add
in
mov
mov
outsb
push
add
repnz
xchg
clc
testb
lds
outsl
push
ss
jo
mov
testl
cmpl
cld
arpl
loopne
loopne
and
push
adc
pop
mov
mov
xchg
pop
and
imul
sahf
jmp
mov
mov
sbb
in
rclb
leave
mov
jnp
sbb
or
pop
outsb
fwait
add
icebp
in
pusha
mov
pop
pop
shll
test
dec
mov
and
sbb
decb
fsubrs
mov
repz
imul
mov
fbstp
iret
mov
xchg
lcall
fimull
in
movsl
dec
mov
rcrl
pusha
pop
push
test
shl
xchg
fstl
aas
sti
sbb
adc
popf
xchg
add
imul
adc
ret
xchg
loope
jns
sub
jmp
xchg
sbb
pop
mov
pop
xchg
data16
fsubrs
jns
movsb
sub
dec
add
mov
pop
and
popa
dec
jge
sub
sub
add
adc
jmp
push
sub
sub
dec
in
push
adc
lahf
mov
push
pusha
cmc
out
mov
inc
mov
sahf
loop
dec
cmp
daa
mov
mov
sbbb
movsb
dec
int3
add
popa
ret
das
sbb
xlat
lea
je
icebp
push
lds
jle
cli
mov
stc
scas
mov
fwait
push
test
adc
test
pop
pop
pop
xchg
fninit
pushf
lahf
sub
ja
aam
push
lods
xchg
insl
adc
lock
add
push
pop
nop
dec
addr16
or
add
jmp
sub
push
mov
rcll
dec
lock
lahf
xor
mov
jmp
pop
loope
out
dec
push
add
jae
in
push
mov
cli
popa
xor
loopne
lret
pop
pop
and
adc
add
push
inc
sub
xchg
pusha
cmp
xor
jmp
hlt
add
cmp
inc
leave
or
mov
adc
fidivrs
fisttpll
mov
int3
int3
stc
in
pop
ficoml
adc
or
pop
les
jg
or
and
mov
xchg
dec
jge
push
pusha
mov
xchg
sbb
jl
faddl
xchg
push
fcomps
pop
sahf
aad
xor
ret
fwait
loop
aas
mov
cmp
je,pn
cmpsb
mov
scas
sub
or
stc
xchg
xchg
ds
cmpsb
nop
mov
movb
clc
jne
pop
cltd
shlb
dec
fmulp
push
xor
dec
das
pushf
hlt
cmpl
jecxz
pop
outsb
mov
sbb
mov
andb
lods
xor
pop
pop
pusha
aam
sahf
pop
sbb
add
dec
cmp
mov
cmp
and
dec
popl
cwtl
cld
popf
daa
and
cmp
mov
cmp
test
lds
pop
xchg
inc
les
fidivrs
leave
lcall
or
mov
or
xchg
f2xm1
inc
mov
stos
int
test
xor
add
cmp
pop
mov
rorb
sbb
mov
adc
add
sub
or
mov
or
dec
jge
mov
xchg
jno
add
rorl
add
or
cmp
mov
or
push
and
aas
test
sbb
push
xor
cld
sbb
jno
pop
dec
leave
sub
cld
inc
fisubrs
stc
add
inc
fwait
cmpsb
inc
push
xor
sbbl
insl
adc
ret
add
mov
mov
loope
repz
sub
in
sbb
outsl
leave
stc
sub
sub
push
xchg
mov
pop
push
inc
mov
fsubp
xchg
adc
stc
insb
add
jno
push
xlat
fs
shll
mov
mov
xor
xchg
cld
into
outsl
ja
int
xchg
jg
add
cltd
push
addr16
mov
add
lea
sbb
lret
add
mov
push
cmp
sub
repz
sbb
sbb
sub
xchg
dec
ljmp
ja
jge
sbb
inc
xor
popf
jns
testl
and
cmc
test
add
push
add
jae
sbb
repz
sub
lcall
fstp
sbb
sbb
xor
push
add
jmp
add
inc
out
mov
add
dec
icebp
mov
into
je
in
dec
add
push
pop
add
xor
loopne
movsb
dec
pop
push
add
xchg
imul
mov
cmp
ljmp
dec
orb
arpl
add
loop
cld
fwait
jg
or
xor
mov
push
gs
subb
pop
xor
inc
add
outsl
cld
mov
mov
sub
fidivrl
mov
inc
aad
insb
xor
repnz
add
movsb
mov
push
push
insb
std
imul
stos
adc
mov
cmc
inc
mov
out
jns
loopne
test
add
add
ja
add
int
test
pop
aas
rclb
pop
push
jo
push
dec
push
outsb
icebp
ljmp
sar
test
push
add
roll
and
pop
or
sbb
sbbb
or
lea
add
xchg
or
cmpl
jp
xchg
loopne
jl
mov
xchg
add
add
mov
jnp
or
push
cmp
dec
mov
xor
adc
pop
add
sbb
mov
orb
iret
jne
fdivrs
add
add
mov
hlt
iret
add
dec
mov
add
stos
mov
stos
jg
xor
lock
roll
mov
imul
loope
add
jge
sub
or
loope
andl
movsb
loopne
nop
imull
and
sarl
xor
subl
cmp
and
orl
fadd
ret
daa
imul
repz
sti
test
das
cmp
adc
cmp
mov
cli
add
push
push
in
loope
sbb
xchg
sub
dec
cmp
mov
mov
jne
pop
add
jnp
push
xchg
rcl
and
jge
adc
add
out
or
arpl
or
mov
xor
sbb
stc
and
fistpll
adc
incl
or
and
cmpsb
xchg
test
xor
xchg
xlat
mov
pushf
or
and
int
xlat
add
jbe
xor
insb
add
dec
inc
call
add
push
enter
pop
pusha
aad
outsb
int3
cmp
pop
sbb
sbb
mov
push
clc
xor
cmp
subb
adc
int3
je
inc
nop
loop
inc
ljmp
pop
mov
repz
inc
ds
in
inc
out
lods
outsl
push
clc
inc
subb
les
aas
jno
jns
inc
ljmp
ljmp
jo
ds
push
lock
inc
sbb
pop
stos
ret
xor
or
testb
outsb
cwtl
sbb
mov
mov
push
sbb
sarb
nop
lea
inc
and
inc
add
xor
pop
push
mov
and
sub
add
mov
test
sbb
dec
dec
sub
adc
mov
add
jg
push
sbbb
xchg
xchg
jb
out
lahf
testb
cli
mov
and
lock
test
in
mov
ja
dec
xor
daa
or
ret
and
or
adc
stos
addb
jmp
and
sarb
movsb
arpl
in
ss
and
in
cmp
push
fisubrl
jge
ljmp
ret
pop
sub
leave
mov
imull
add
aam
fnsave
ljmp
mov
cmp
insl
sbb
xor
pop
lret
nop
push
xor
aam
and
jbe
in
into
jno
or
inc
shrb
ja
add
and
ficomps
cmc
add
cli
cltd
mov
in
dec
xchg
mov
and
out
xchg
cmp
repnz
and
addr16
push
pop
adc
jp
add
inc
rcll
dec
inc
adcl
add
sbb
stos
lahf
aad
icebp
out
clc
fs
aas
in
aad
adc
or
movsl
sbb
shll
mov
repnz
rorl
aas
jmp
incb
fnstcw
addb
lods
mov
xchg
les
inc
mov
repnz
lods
es
outsl
mov
imul
mov
xchg
andps
xor
daa
shrb
cmp
hlt
mov
cmc
shlb
mov
xchg
pop
add
pop
cld
pop
inc
ficomps
cwtl
out
add
fs
pop
imul
inc
xchg
jb
mov
lahf
or
int3
sbb
jb
aaa
jb
add
mov
scas
pop
fldcw
jns
jbe
add
popa
xchg
xor
shrl
adc
push
outsb
stc
adc
sbb
cltd
incb
dec
inc
sbb
lcall
mov
test
icebp
inc
fidivl
push
jae
jle
pop
mov
ret
inc
nop
nop
mov
imul
add
fisubl
adc
fadds
pop
movsl
xor
call
inc
mov
and
rcl
bound
sarb
push
cld
mov
dec
mov
enter
shlb
mov
or
and
adc
repz
mov
pusha
fwait
xlat
mov
sbb
pop
shr
cmp
pop
add
loop
nop
xor
xor
enter
add
pop
sbb
and
lret
outsb
das
push
xor
rcrb
inc
mov
roll
xor
sbb
or
sub
int
testb
sub
adc
rcr
lods
push
or
dec
into
mov
out
xchg
push
dec
jge
or
daa
jb
sahf
add
lahf
add
shrb
std
adc
mov
or
in
dec
icebp
incl
inc
dec
or
push
mov
dec
and
test
inc
in
xor
mov
add
lods
adc
sti
mov
aaa
jmp
lahf
aas
lea
or
outsb
fnstsw
sbb
and
mov
mov
cmp
ljmp
cltd
repz
push
inc
xor
stos
push
les
movsl
pop
inc
addl
push
cltd
pushf
add
jge
es
add
subb
cwtl
xchg
add
jo
mov
jge
sti
mov
and
xchg
cmc
jnp
or
aad
cli
hlt
pop
rcrb
ljmp
stos
xchg
fldl
cltd
xor
jmp
cmp
add
xchg
push
jns
sbb
fdivrs
mov
mov
and
sub
stos
xchg
rorb
inc
and
pushf
pop
pop
xor
in
cltd
add
movsb
inc
xor
and
adcb
bound
enter
adc
sahf
mov
lret
mov
stos
daa
jge
repz
mov
jl
imul
filds
subl
jnp
jo
test
cmp
pop
pop
jns
xor
or
mov
inc
mov
enter
add
xchg
xor
inc
das
outsb
jmp
adc
addr16
add
cmpsb
dec
jbe
lcall
xchg
nop
sbb
pop
insb
mov
adc
adc
add
mov
sbb
pop
dec
cmp
in
fs
mov
adc
mul
and
or
xor
popf
out
xchg
dec
cs
sub
jecxz
subl
inc
xchg
xchg
sarb
movsb
xor
pop
inc
int
ljmp
pusha
pop
ljmp
sub
popf
sbb
add
jl
std
push
insb
mov
jmp
inc
pusha
pop
inc
push
or
sbb
addb
shlb
pusha
push
test
daa
es
pop
mov
subps
test
fcoml
and
xchg
push
lock
dec
jbe
pop
dec
in
sbb
cmp
and
stc
mov
fs
or
call
js
por
cwtl
mov
inc
cwtl
std
lahf
jle
sbb
and
sahf
lds
jae
mov
adc
add
int
sub
outsb
adc
xchg
js
call
out
dec
adc
xchg
jns
pop
adcl
add
neg
ret
push
mov
dec
roll
add
ret
mov
repnz
fisttpll
add
pop
orl
dec
cs
into
adc
loope
roll
sub
push
daa
xchg
mov
iret
add
xchg
loopne
neg
repnz
add
ds
pop
push
mov
and
movl
pop
pop
stos
cmp
pop
rcr
nop
inc
add
push
lahf
xchg
cmpsl
rcl
sbb
pop
pop
mov
push
and
pop
decl
pop
cli
repz
jnp
ds
and
ficoms
jns
xor
mov
add
and
mov
jne
dec
in
jecxz
inc
inc
cmp
add
dec
dec
sbb
shrb
add
imul
add
push
into
mov
inc
inc
add
cmp
out
jae
mov
xchg
sub
pop
sti
out
pop
adc
pusha
dec
push
nop
sub
cmp
adc
add
enter
xor
sbb
in
add
push
clc
lahf
repnz
dec
jp
push
loopne
add
xchg
cli
mov
nop
dec
xor
add
inc
mov
mov
mov
fiaddl
pusha
jle
sbbb
or
in
xor
mov
or
orb
xchg
or
loopnew
jns
add
jae
cmc
jg
popa
nop
mov
jmp
cld
sbb
out
sbb
out
mov
stc
xor
and
mov
ss
mov
add
fs
jns
shlb
lcall
push
fsubrp
adc
jge
pop
call
cmpsb
sub
insb
add
dec
xor
xor
jo
fbstp
adc
js
mov
jns
std
enter
and
popa
push
mov
gs
and
or
sbb
inc
lcall
pusha
mov
mov
add
mov
cmpb
jb
inc
fisttpll
popa
push
int3
jmp
or
mov
push
scas
std
adc
and
repnz
sbb
stc
xadd
pop
insb
stos
adc
mov
cli
lods
jge
std
mov
jge
cmpsl
add
mov
stos
loop
dec
movsb
jbe
faddl
mov
add
inc
mov
shrl
std
pop
inc
xchg
jle
mov
stos
add
loope
mov
pop
sbb
rcrl
ret
push
stc
cwtl
dec
pop
pop
mov
and
adc
inc
xchg
nop
repz
jo
leave
push
mov
jnp
xchg
and
add
testl
sahf
leave
jle
xor
shl
adc
ds
push
cmp
adc
fdivs
fwait
dec
cmp
add
sbb
push
mov
cmp
jae
outsl
cltd
orb
jnp
imul
int
movsl
xor
mov
push
pop
inc
and
out
push
mov
jle
js
pop
frstor
js
cli
leave
mov
push
and
popa
jne
dec
sarl
xor
mov
insl
adc
nop
inc
aad
xor
jl
push
mov
enter
pop
sub
push
sahf
rcl
mov
jmp
aad
mov
dec
mov
dec
repnz
xchg
les
insl
das
sub
mov
mov
add
inc
add
and
cmc
sbb
sti
das
and
stos
cld
je
jp
cmpsb
push
pop
movsb
jnp
jno
imul
add
incl
pop
xchg
push
dec
xchg
rcr
out
ss
cld
aas
xchg
repz
and
outsl
int
fs
jno
sub
xchg
call
dec
mov
std
or
into
add
arpl
call
xor
xor
mov
pop
pop
xor
inc
aaa
loope
scas
outsb
inc
inc
push
cmp
add
call
dec
ret
rcr
jl
loop
xchg
sub
int
nop
test
mov
ud0
cs
lods
fiadds
mov
aam
imul
sbb
sub
cmp
add
movsb
clc
jo
or
rorb
push
sti
aam
sub
xchg
mov
mov
sub
and
xchg
clc
fs
repnz
xchg
dec
out
ds
mov
sbb
subl
add
mov
adc
xor
inc
fisttps
imul
pop
push
mov
mov
adc
in
xor
cld
mov
and
into
pop
and
dec
cli
sbb
adc
lods
ja
stos
dec
loope
sbb
pop
mov
push
push
leave
add
ja
push
imul
sub
ret
lods
lret
lock
jmp
fwait
jp
fcompl
sbb
seto
in
jne
add
cmp
add
addb
push
cmp
sar
mov
mov
jge
or
pusha
fdivrl
pop
outsb
xorb
popa
loope
jg
xor
rolb
push
dec
push
pusha
push
sbb
icebp
or
mov
or
pop
lea
or
pop
cwtl
xchg
fstps
and
sub
add
jo
xor
mov
das
add
jp
push
mov
dec
hlt
add
add
sub
cmpsl
jp
and
mov
cmp
ss
jnp
adc
pop
xor
neg
adc
xor
je
subb
push
push
das
and
or
fadds
and
sahf
pop
ds
test
jns
sti
into
mov
sub
pop
cld
inc
fs
mov
adc
xchg
add
push
jp
daa
popa
pop
sti
les
sbb
aam
jle
aad
xor
ret
stc
mov
push
aas
fstl
sbbb
xchg
or
dec
push
xor
xor
jne
punpckhdq
fdiv
mov
stc
cmpsl
fisttpll
lods
or
out
loopne
push
mov
pop
pop
xchg
push
mov
daa
pop
movsb
cmc
adc
or
add
std
mov
aas
add
push
pop
popf
js
push
xchg
stc
cmp
xchg
lds
and
sub
shrl
aad
clc
outsl
xchg
in
mov
stc
int3
bound
ficoms
jne
mov
ds
test
add
dec
mov
das
cltd
or
mulb
push
sub
bound
pushf
adc
les
pop
lahf
in
sub
sub
cltd
call
or
idivb
adc
inc
pop
xor
ja
add
daa
out
dec
adc
mov
adc
mov
out
or
xchg
inc
les
aaa
and
pop
imul
in
push
jmp
jne
aad
cli
and
pop
or
cli
sub
jb
shlb
mov
push
xchg
pop
rcrb
das
mov
cwtl
cltd
xor
pop
mov
sbb
outsl
cmp
pop
jae
jo
sub
jo
push
sub
mov
dec
dec
rolb
sub
mov
les
add
ss
sahf
fstpt
pop
ret
mov
add
push
bt
xchg
sbb
push
or
or
idiv
sbb
xor
in
notb
or
pop
and
pop
lahf
int
std
jle
pop
repnz
jnp
or
dec
sar
push
jg
adc
mov
jns
dec
pop
xchg
mov
inc
rcl
cmp
xor
push
xlat
dec
push
rcll
movsb
gs
inc
or
pusha
fldt
sub
popf
add
adc
cs
push
sbb
out
das
mov
out
mov
mov
int3
loope
add
pop
int
les
jp
or
daa
pop
je
mov
jne
jg
imul
mov
rorl
push
mov
mov
add
xor
inc
ljmp
and
xchg
xor
call
lahf
and
mov
and
sub
sti
xor
mov
clc
mov
scas
es
test
into
cmp
bound
dec
xchg
add
jne
dec
pusha
adc
imul
in
je
push
pushf
adc
rcrb
les
or
loop
rcrb
xor
aaa
nop
or
or
dec
dec
icebp
fdivs
imul
in
aam
or
mov
idivb
nop
pop
fwait
sahf
jle
mull
push
outsb
jl
ss
adc
movsl
lds
xor
xor
das
testb
cltd
scas
push
xor
aaa
pop
lret
sub
das
mov
add
jmp
das
push
imul
ret
ja
and
mov
in
rcl
adc
stos
cmp
shlb
out
loopne
xchg
stos
add
test
int3
mov
dec
loop
sub
adc
dec
mov
or
mov
mull
fbstp
stc
movsb
xor
out
mov
aam
stc
daa
scas
ja
js
nop
jb
push
xchg
adc
test
lret
jle
cld
scas
negb
dec
loop
add
jmp
adc
lods
jbe
fildl
xchg
sub
lea
das
mov
mov
mov
jmp
aaa
inc
cmp
mov
push
add
mov
jp
dec
mov
pop
pop
cmpb
mov
pusha
push
lds
jg
mov
cmpsl
dec
push
lock
lret
imul
nop
scas
enter
pop
sub
fcmovu
fs
hlt
or
dec
push
sub
popa
std
push
pusha
pop
jmp
out
pop
or
push
mov
sbbb
pop
mov
ljmp
and
add
jne
inc
cmp
popf
ret
ret
mov
add
mull
add
sub
test
out
insl
push
cmp
add
lea
adc
adc
mov
adc
add
mov
es
dec
int3
mov
xchg
clc
lret
xchg
jne
cmp
sarl
inc
dec
and
inc
lods
clc
or
add
sub
pop
test
movsb
jge
add
insb
out
sub
faddl
push
pop
push
add
jl
shll
aaa
adc
jmp
bound
rorl
clc
testb
add
cmc
int
lahf
sub
push
xor
add
ja
or
dec
lods
cmpl
mov
sbb
pop
mov
jne
pop
les
pusha
lcall
pop
or
into
push
pop
out
movsb
scas
cld
mov
add
sub
push
sub
add
inc
xor
mov
mov
int
ret
jne
orb
pusha
leave
inc
xchg
push
imul
pop
test
mov
mov
jo
nop
cmp
ljmp
xor
dec
repz
dec
xchg
test
pusha
add
lret
ret
jg
pop
dec
mov
inc
mov
add
lds
test
shrb
in
mov
sar
add
mov
inc
mov
xchg
inc
cli
add
jb
in
jns
test
and
sahf
andb
xchg
xchg
xor
enter
cmp
cmpsb
adc
test
inc
adc
add
pusha
or
mov
popa
jne
xchg
add
push
mov
or
fidivrs
mov
pop
neg
cmp
push
cmp
xchg
cltd
testl
cs
inc
xor
addr16
and
lds
xor
out
push
enter
mov
pop
xchg
mov
xorb
push
or
add
jo
sbb
ljmp
adc
loop
inc
jae
pop
add
out
dec
sub
test
add
jecxz
mov
mov
pop
lock
in
outsb
xchg
add
pushf
or
adc
mov
mov
adc
stos
mov
adc
pop
std
sbb
adc
pop
out
pop
ds
aas
sbb
shl
add
loop
aaa
push
mov
in
flds
clc
jmp
leave
cli
out
xchg
fs
add
mov
jg
xor
pusha
add
out
popa
repnz
xchg
int3
add
sbb
add
xor
mov
add
mov
mov
mov
dec
test
call
fmull
xor
or
daa
mov
sti
movsl
repz
push
dec
cld
aas
mov
rol
add
addl
das
xor
mov
push
sub
test
add
mov
mov
movsl
fmuls
xchg
mov
xchg
jne
int
sub
xacquire
aam
inc
pop
pusha
call
inc
push
adc
int3
push
and
and
pop
out
outsb
sub
adc
add
fisubrl
mov
stos
push
jmp
fstpt
xchg
sbb
and
jmp
dec
xorl
cwtl
les
movl
push
push
stos
int
popa
xor
xchg
bound
flds
faddl
pop
mov
jl
cwtl
xor
imul
leave
stc
xor
movsl
nop
arpl
or
inc
add
mov
cli
rorb
dec
dec
jecxz
icebp
iret
fnstsw
push
into
cmc
add
xchg
dec
sub
cld
and
jge
scas
adc
mov
add
out
insl
push
in
inc
out
mov
sbbl
mov
lods
hlt
add
push
sub
imul
inc
pop
push
pop
mov
imul
movsl
add
dec
push
or
xchg
sbb
in
lock
aad
mov
sbb
mov
insl
jnp
and
add
int
outsl
xlat
adc
movl
lret
negl
sbb
fsubl
mov
inc
add
mov
push
mov
pop
aad
push
je
aam
and
test
push
das
inc
add
fildll
push
vpunpcklwd
fstpl
std
adc
cmc
sub
mov
dec
inc
fsubr
test
sub
mov
xchg
mov
adc
pusha
pop
loope
and
add
in
out
adc
inc
movb
jmp
js
popa
pop
xchg
outsb
cwtl
getsec
push
xchg
repz
jnp
xor
mov
out
mov
push
inc
testl
jb
mov
inc
call
rcll
fwait
inc
or
adc
mov
add
and
sbb
das
dec
ret
sub
ja
add
jp
pop
insb
pop
and
jo
cli
jno
in
fs
daa
xor
imul
mov
pop
xor
pop
add
sub
push
mov
mov
jne
jge
xlat
je
mov
push
pop
mov
add
clc
popa
lods
ja
movsb
push
dec
or
fidivrl
push
add
lock
popf
mov
test
add
leave
xorl
push
inc
ds
mov
cmp
outsb
or
or
stos
push
out
and
or
add
icebp
push
sti
lahf
int3
add
pusha
jl
dec
add
fcomi
cmp
inc
push
and
add
movl
lods
sbb
rcll
popf
pop
dec
notl
or
and
add
mov
mov
add
mov
jmp
sbbb
adc
inc
add
outsl
jns
xlat
das
and
mov
addb
ret
jne
mov
aad
sbb
and
or
fwait
push
push
add
aam
jbe
xchg
jno
sub
das
lret
test
popa
mov
pop
dec
add
sbbb
xchg
cwtl
nop
sub
inc
imul
jno
add
jo
stc
mov
aaa
mov
fadds
cmp
push
push
mov
adc
aas
rcrl
sbb
or
and
es
ja
cmc
das
aaa
adc
test
jnp
push
add
aad
stos
or
pop
jnp
xchg
mov
cmc
push
bound
and
addb
je
ljmp
sub
out
push
inc
div
mov
sub
adc
sti
hlt
add
mov
and
fcomps
push
gs
mov
pushl
inc
popa
repnz
push
inc
filds
inc
mov
stos
jl
dec
outsl
scas
cmp
mov
cmp
or
aam
imul
fidivrs
push
mov
lods
sbb
outsl
fstps
inc
ret
pushl
mov
sbb
adc
pop
imul
push
stc
push
notb
push
mov
les
mov
test
scas
add
jmp
fstpt
mov
es
aad
xor
cmp
lods
out
shl
jnp
jmp
add
xor
pushf
imul
pop
adc
add
inc
fwait
adc
jnp
push
pusha
in
or
insl
pop
sub
fs
cmp
sbb
fbstp
sub
xchg
cmp
pop
push
cs
cli
pusha
mov
mov
mov
dec
and
push
cmp
sub
shll
xchg
mov
jo
cmpsb
sbb
jae
movsl
inc
nop
xor
leave
dec
add
insb
mov
dec
mov
mov
popf
ljmp
loope
or
pop
mov
jl
mov
cmp
lods
ja
dec
xchg
lcall
ret
dec
jg
shll
fcmove
popf
push
fstps
pop
or
adc
pop
scas
imul
add
outsb
jb
and
leave
in
add
xchg
fcomp
pop
insl
mov
and
popf
cmp
dec
mov
xchg
mov
andl
xor
rcrb
jne
pop
adc
repz
add
outsl
push
push
orb
mov
add
mov
sub
cmp
cmp
xor
nop
push
pop
gs
in
lret
inc
add
insl
ret
mov
loop
out
pop
xchg
dec
fildl
ret
add
xchg
nop
movsl
lock
mov
or
mov
xchg
adc
add
fwait
insb
scas
adc
mov
sbb
fimuls
sub
cmp
and
add
js
rorl
adc
push
call
mov
stc
sbb
das
call
mov
inc
push
adc
mov
mov
dec
sub
add
bsf
bound
jp
mov
push
test
mov
push
incb
add
xor
sbb
test
imul
jle
popf
adc
xchg
mov
inc
sbbb
sbb
lea
xchg
in
add
adc
adc
mov
inc
test
popf
add
xor
xchg
push
push
or
fisttpll
xchg
mov
push
cmp
cmp
js
and
inc
test
pop
pop
lret
stc
fs
inc
mov
inc
imul
sbb
or
inc
mov
sbb
xchg
les
push
push
mov
jl
adc
add
test
popf
pop
jne
inc
xchg
pop
cmpb
cmp
scas
lds
xor
or
cwtl
mov
or
daa
add
cmp
push
xor
in
push
add
mov
sbb
popf
or
std
jo
pushf
dec
add
mov
jae
rclb
pop
xor
push
shl
cmpsl
xor
cmp
cmp
mov
shll
sub
sub
testb
arpl
add
jle
test
popf
adc
push
loope
dec
pop
outsb
xor
mov
mov
xchg
pop
scas
mov
ljmp
sub
mov
add
lret
fistl
add
cmp
xor
dec
mov
stos
shll
orl
sub
push
pop
icebp
mov
xchg
sahf
mov
adc
inc
movsl
in
bound
mov
adc
or
cmp
decl
sbb
inc
mov
pop
add
lea
roll
or
add
mov
mov
push
mov
je,pn
jo
add
push
nop
shl
jmp
aas
loop
les
dec
jle
add
daa
sbb
pop
std
pushf
xchg
iret
xor
xor
push
inc
outsl
xlat
fs
mov
jl
fldl
imul
add
mov
jle
popf
std
push
push
xor
enter
in
mov
jmp
in
push
mov
stos
je
test
stos
dec
lods
cmc
rolb
push
adc
lret
xchg
push
enter
xor
mov
jle
lods
subb
js
inc
cwtl
adc
sbb
pop
pusha
gs
fs
cs
cmp
add
js
push
push
push
pop
daa
pop
pop
lock
mov
inc
inc
hlt
add
and
inc
sub
pop
adc
std
lret
mov
bound
shrb
aam
add
popa
jmp
outsb
mov
ja
in
fisubl
lcall
adc
lods
cld
and
adc
aam
push
mov
adc
mov
or
je
imul
add
mov
xchg
jp
add
gs
add
cmp
push
sub
jae
loopne
mov
shr
repz
cs
scas
inc
jg
adc
gs
mov
std
adc
hlt
xchg
push
mov
fdivrs
adc
adc
and
mov
icebp
xchg
adc
aam
pop
test
jae
add
pop
outsl
xor
int3
cmpsl
jg
inc
mov
insl
pop
dec
jmp
ja
mov
bound
imul
lea
out
mov
and
loopne
clc
stos
add
lahf
ss
cmp
push
sub
imulb
add
lahf
les
cmp
sub
cmpb
shr
push
sub
xor
sub
fsubs
add
in
insb
fisubs
aad
xor
insl
stc
push
sbb
mov
xor
cmpsb
add
in
lods
pop
pop
jnp
sbb
test
jmp
adc
xchg
sbb
inc
xor
add
jmp
icebp
dec
sub
cmp
mov
mov
cmp
test
mov
mov
in
xchg
leave
dec
inc
cmp
rcl
int
es
jno
mov
cmp
mov
mov
push
add
sarb
add
jl
sbb
leave
jae
push
cmc
fiadds
iret
loopne
into
jp
popf
and
jns
dec
push
clc
push
pop
push
loopne
mov
adc
stos
dec
or
out
sub
jmp
clc
sbb
in
push
popf
in
repnz
test
dec
fsubr
xchg
popf
mov
shl
push
loope
out
loopne
mov
int3
sub
push
xor
cmp
xchg
xor
mov
xchg
pop
orl
jecxz
add
stc
js
daa
imul
sbb
pop
mov
sahf
repz
lahf
nop
pop
or
enter
mov
sub
lea
pop
lock
jbe
ss
pushf
mov
stc
divl
or
mov
adc
push
and
fimuls
mov
jns
rcrl
test
adc
std
leave
push
push
mov
andb
mov
add
scas
in
loop
test
xchg
es
and
mov
scas
arpl
mov
add
fwait
sti
xchg
adc
fxch
and
dec
and
cwtl
pusha
inc
not
or
mov
insl
clc
leave
xchg
mov
in
dec
xchg
loope
jo
out
testb
mov
scas
js
pusha
loope
sbb
rcrl
outsl
jge
add
aad
pop
sub
mov
sub
orb
cmp
push
xchg
adc
mov
mov
jnp
mov
and
mov
add
je
out
cmp
lret
adc
dec
call
je
push
dec
and
das
out
or
out
mov
xchg
pop
xor
lock
xchg
pop
push
imul
add
fs
lods
shlb
push
add
push
incb
mov
pop
sbb
pop
sub
xchg
inc
lods
sbb
das
pop
fisttpll
cmp
add
iret
test
xchg
stos
adc
scas
adc
mov
imul
lods
test
call
adc
stos
adc
int
fld
jp
ss
or
and
dec
mov
mov
xor
push
xor
test
pop
je
and
add
test
shlb
mov
adc
int3
clc
mov
dec
add
mov
mov
or
xor
xchg
or
sbb
cmp
pop
addb
movsl
sbb
and
jmp
mov
push
pusha
out
xor
in
pop
popf
mov
xor
shrl
sbb
sti
nop
push
in
jb
xchg
pop
mov
xchg
jae
daa
cmp
sub
inc
icebp
sbbl
dec
sahf
dec
daa
outsb
add
xchg
mov
adc
mov
push
cmp
inc
sub
pushf
cld
add
cmp
mov
loop
pop
or
jbe
jmp
fdivrs
pop
lods
jecxz
int
test
daa
mov
inc
rorb
mov
pusha
pop
popf
in
xorb
nop
int3
pop
adc
push
fdiv
lret
add
xor
mov
daa
mov
data16
xor
repz
push
mov
data16
dec
mov
sub
sbb
addr16
or
xchg
adc
mov
sub
cmpsb
insb
loopne
adc
adc
fdivr
push
imul
mov
add
xchg
in
jecxz
jo
daa
loope
mov
ss
pushf
les
adc
je
mov
pop
fldcw
sbb
andl
mov
mov
xchg
out
mov
aas
das
sbb
jmp
movsl
jo
xchg
cld
add
xchg
test
js
push
ja
and
shrl
cmp
enter
push
iret
or
add
loope
out
xchg
add
cld
in
incl
repz
jl
rcr
add
xchg
sub
outsb
iret
jo
add
push
ss
je
sub
popf
adc
sub
xor
loope
popf
or
push
mov
mov
hlt
mov
and
jmp
aad
xor
push
dec
dec
sub
mov
stc
fcompl
mov
lock
fwait
xor
xorl
jbe
dec
pop
xchg
int3
push
sub
push
inc
es
dec
sub
mov
cmp
xlat
or
clc
mov
inc
dec
mov
and
ficomps
or
mov
imul
and
loopne
or
sub
in
cwtl
adc
or
ror
test
push
mov
mov
orl
insl
or
adc
icebp
loope
push
cmp
pop
pop
cld
adc
xor
repnz
pop
jne
push
in
bound
pop
adc
mov
mov
push
outsl
cltd
xor
enter
lods
sbb
gs
popf
nop
push
sub
imul
das
jl
push
fdivrs
test
adcb
mov
dec
add
popf
xor
and
mov
daa
dec
adc
jne
push
jecxz
pop
loope
sub
adc
mov
insb
and
ds
mov
mov
jbe
add
inc
add
fistpl
mov
jmp
cmp
mov
or
pop
int
jmp
xor
sti
pop
add
insl
sbb
out
nop
xchg
dec
imul
jo
je
push
sub
pop
ss
or
loopne
mov
adc
add
xchg
daa
or
push
jo
xor
inc
jmp
fsubl
pop
cli
addr16
xchg
add
cmp
test
or
jecxz
push
pop
sub
push
call
loope
push
cmp
pop
mov
dec
je
loop
inc
loop
xchg
or
aaa
push
lahf
jge
jne
lcall
adc
bound
pop
jl
test
das
and
out
leave
insb
sub
mov
inc
push
in
popf
jg
push
push
fisubrs
inc
mov
jl
jmp
cmp
or
add
repz
faddl
pop
xchg
loopne
lock
testb
sbb
push
js
fcmovb
mov
jne
insb
xchg
adc
test
push
out
fstps
sub
leave
jnp,pn
mov
add
and
addb
add
in
into
lahf
popf
sbb
lret
pop
mov
add
pop
dec
out
mov
adc
jno
fwait
rol
test
cwtl
sahf
jo
mov
mov
pop
mov
test
add
and
nop
stc
testl
mov
add
outsl
push
dec
mov
test
loope
mov
subl
cmp
test
stc
dec
pop
aad
test
sbb
jne
or
or
cmpl
sarl
pop
mov
mov
mov
push
or
fisttpll
sbb
push
sbbb
fcmovbe
xchg
out
mov
jecxz
jnp
mov
xchg
notl
rorl
and
mov
dec
mov
xchg
add
xchg
xchg
bound
dec
pop
add
add
add
fwait
addb
mov
idivl
jnp
aas
lret
mov
mov
lea
lahf
sub
jae
shll
mov
add
push
fists
inc
rcrb
or
ss
or
lea
imul
and
push
cltd
iret
cmc
xchg
cs
push
cltd
xor
sbb
fidivrl
push
fs
rorl
decw
or
in
inc
mov
pushl
scas
cmp
mov
stc
fisttpl
pop
jo
adc
cld
popf
adc
inc
push
cli
xchg
mov
adc
xor
jp
jl
lods
mov
repz
mov
xchg
or
ror
orb
lods
adc
push
add
divb
and
int3
sub
pushl
add
in
lds
pop
movsb
cmpsl
add
and
adc
inc
add
xor
or
cmpsb
inc
mov
pop
push
bound
imul
jnp
lods
setae
loopne
jg
adc
adc
xlat
dec
aaa
in
xchg
inc
daa
mov
xchg
xor
push
stos
es
mov
addb
cld
and
sub
je
sub
adc
push
and
and
jo
inc
mov
jmp
adc
jnp
jno
cli
fldenv
hlt
outsl
cwtl
adc
insl
addb
add
cmp
and
xchg
fcmovu
lcall
inc
add
cmp
iret
pusha
push
mov
stos
sahf
and
roll
and
mov
xchg
fildll
mov
sub
cmp
add
mov
push
mov
add
sbb
xlat
and
pop
repz
sub
test
stos
xorl
adc
xchg
popa
mov
add
adc
out
mov
xor
iret
icebp
lods
cmpsl
scas
adc
hlt
mov
adc
inc
push
and
addl
inc
mov
pop
jnp
mov
arpl
les
mov
sub
subb
jnp
add
xor
enter
add
xchg
or
mov
cmp
ljmp
jne
dec
pop
and
faddp
mov
xchg
adc
out
mov
outsl
popf
jecxz
bswap
sbb
mov
push
or
fs
cmpsl
inc
inc
push
adc
stc
mov
xchg
adc
jno
mov
mov
xchg
sbb
test
or
rcll
add
sub
cmpsl
xchg
ret
insl
mov
jae
jo
xlat
add
sub
adc
lods
adc
daa
aad
int3
inc
sub
jae
xchg
in
xchg
pop
scas
sahf
outsl
mov
pop
xchg
jecxz
cwtl
sbb
pop
stos
push
lahf
lea
out
adc
sbb
cmp
push
and
pusha
xor
loop
mov
in
mov
cmp
sar
lods
jno
test
shlb
popa
stc
nop
push
sub
or
test
xchg
ljmp
outsl
mov
movsl
gs
dec
push
xchg
mov
cmp
add
push
shl
xchg
addr16
add
pop
ja
loop
dec
add
lea
push
push
repz
imul
fldl
inc
jmp
lods
loopne
pop
mov
popa
mov
test
pop
mov
mov
fadd
or
adc
gs
loopne
xchg
dec
lret
jp
mov
jmp
add
popa
inc
sbb
adc
adc
cmp
in
ljmp
pop
nop
add
fiadds
or
xor
xorb
mov
mov
add
adc
mov
outsl
adc
orl
dec
xchg
mov
push
xor
mov
and
jg,pn
ds
push
imul
pop
popf
cmp
iret
dec
mov
enter
add
popa
nop
mov
mov
jnp
into
push
add
popf
gs
rolb
inc
mov
fcom
clc
xchg
fwait
lods
insl
cmc
push
mov
or
pusha
sahf
stos
add
fnstcw
aaa
aas
or
mov
pop
cs
add
pop
sbb
inc
or
jecxz
out
add
sbb
mov
mov
clc
call
push
jg
add
push
rcr
loop
mov
xchg
cmpsl
enter
cld
mov
leave
call
call
fstl
enter
addb
das
xor
sbb
xlat
repz
lcall
das
mov
loopne
dec
dec
es
cld
and
and
es
xor
jne
mov
mov
aas
cmpsb
loop
push
icebp
mov
sub
sbb
enter
add
loopne
cltd
mov
xchg
add
push
fs
jno
dec
lock
lea
cmp
clc
adc
popa
xor
mov
shlb
int3
push
pop
outsl
add
cld
add
mov
or
and
ja
inc
cmpsb
je
push
ret
pop
movsl
movsl
int
ret
add
sub
fimuls
loope
aaa
fwait
push
adcb
push
nop
sbb
mov
mov
push
or
inc
and
or
stos
add
sbb
sarb
andb
mov
add
jno
xor
or
xchg
cs
dec
mov
aad
mov
sti
pop
lret
jbe
mov
enter
inc
sub
or
int3
sbb
adc
sbb
lahf
inc
push
cli
mov
das
clc
dec
ret
or
lods
xchg
stc
cmp
fwait
out
jnp
dec
jbe
aam
repnz
mov
or
cmpsl
mov
add
scas
adc
adc
adc
adc
xchg
and
imul
add
jge
xor
xchg
loope
xchg
leave
mov
cmpb
test
daa
or
test
inc
adc
mov
sbb
xchg
addr16
or
add
lahf
shr
scas
xor
cmp
adc
bound
jne
mov
push
lret
xor
adc
scas
shll
out
loopne
insl
xchg
adc
adc
hlt
mov
aam
faddl
jb
clc
cmp
dec
add
data16
inc
xor
push
repnz
or
into
das
je
sti
push
add
test
les
jle
mov
push
lret
cmp
and
jae
add
sbb
sub
add
or
push
jecxz
add
mov
adcb
enter
add
clc
push
outsl
xchg
or
sub
inc
push
ljmp
mov
fldenv
popa
pop
int3
push
hlt
pop
leave
and
pop
xchg
xchg
or
vpcmpgtd
xchg
push
es
lea
ret
mov
sbb
in
add
call
pop
mov
dec
jnp
adc
stos
push
xchg
outsb
mov
mov
xchg
mov
mov
cmp
add
and
mov
jno
adcb
mov
negl
fnstcw
inc
inc
pop
push
stc
dec
push
stc
pop
call
les
stos
jnp
add
sahf
sub
sbb
adc
shlb
adc
cmp
xor
push
cltd
add
xchg
cmpsb
mulb
hlt
aaa
or
pusha
mov
push
jbe
adc
mov
cltd
ds
push
dec
xor
cmp
inc
xor
fistpl
hlt
outsl
adc
jge
out
imulb
mov
add
or
push
xchg
notl
popf
jge
int3
lods
data16
and
jo
mov
sub
imul
loopne
cmp
push
jg
loopne
add
mov
cmp
push
mov
inc
mov
jp
inc
outsl
mov
cs
test
push
nop
pusha
lcall
xchg
jle
jb
pop
adcl
aad
or
sub
adc
repz
ret
cs
sub
dec
std
sarb
imul
jmp
and
in
adc
mov
repz
sbb
jne
packuswb
xchg
icebp
out
mov
hlt
inc
hlt
cld
in
add
mov
addl
scas
xorb
int3
or
xor
pushf
jns
adc
outsb
mov
mov
push
xor
int3
adc
dec
lcall
pop
pop
cli
mov
popf
pop
mov
dec
mov
xchg
out
xlat
cmpsb
push
sub
fistpll
stos
mov
xchg
outsb
fidivrl
pop
xchg
stos
pop
mov
pop
mov
inc
push
pop
jae
pminsw
jmp
lock
pop
xor
dec
jnp
or
mov
mov
add
loopne
aad
movsl
enter
jns
or
xchg
loope
ljmp
mov
aas
pop
add
ja
fiaddl
add
fs
call
xor
mov
call
sbb
jb
pop
or
adc
jle
imul
test
xor
adc
sbb
loop
mov
xchg
mov
xor
es
jl
mov
mov
shr
hlt
fs
mov
and
adc
int
sahf
out
dec
jb
arpl
add
xchg
das
mov
nop
push
and
sbbl
cmc
adc
add
jbe
lea
pop
or
in
sbb
xchg
dec
mov
stc
adc
lret
xchg
popa
stc
aas
sub
outsb
cmp
sbb
and
es
push
adc
mov
xchg
je
arpl
xchg
imul
frstor
jecxz
stc
je
jmp
push
sub
andb
popf
std
ljmp
sbbl
pop
daa
xor
aad
ret
and
leave
arpl
pcmpeqd
sarb
popf
jb
dec
pop
mov
cmp
pushf
jg
dec
movzwl
cmp
shll
jg
mov
lahf
add
mov
adc
repnz
repz
insb
inc
xchg
cltd
lock
ja
mov
js
xor
and
cmp
popa
repnz
cmpsl
adc
adc
movsl
nop
popl
xchg
je
fiadds
jb
test
push
and
mov
dec
int3
adc
cmp
pop
mov
pop
dec
sub
mov
insl
pop
mov
repnz
mov
faddl
push
scas
mov
lds
sahf
in
in
shr
pop
dec
xchg
pusha
rcrb
nop
outsl
stos
add
fstpl
cs
mov
xchg
xchg
jge
dec
test
loope
xchg
push
push
popa
lahf
push
ret
sbb
adc
sub
jge
xchg
mov
bound
adc
sbb
call
loope
mov
lock
dec
and
mov
mov
dec
mov
outsb
repnz
fimuls
mov
loop
arpl
xchg
movb
jne
pop
mov
adc
les
mov
loopne
pop
fs
push
test
mov
repnz
int3
inc
cmpl
adc
test
test
sbb
cli
sub
mov
and
dec
jo
movsb
add
imul
mov
orb
jp
in
pop
inc
popa
sahf
repnz
inc
xor
movsb
add
test
adc
xor
cs
daa
ds
sti
xor
inc
hlt
sub
inc
loopne
sub
ret
or
pop
neg
dec
lea
or
inc
outsl
jg
or
push
das
lea
mov
or
xchg
add
xchg
pop
cltd
loope
inc
jb
rcrl
mov
pop
lock
cmpb
nop
inc
mov
xor
or
in
add
loop
je
sarb
jmp
ret
push
clc
pop
insb
cmc
mov
popa
imul
loope
push
insl
and
ficoms
mov
and
sbb
pop
pusha
add
mov
mov
adc
outsb
push
pop
les
sbb
fs
xchg
cmp
lea
fdivrl
dec
jmp
pop
mov
add
sarb
int3
sub
push
mov
test
inc
mov
out
xchg
mov
int
shrl
mov
cmp
pop
or
jecxz
leave
sub
push
inc
ja
add
adc
lret
pusha
add
clc
push
adc
ret
jge
inc
imul
sbb
int3
imul
mov
adcl
popf
push
mov
sub
xchg
xor
or
inc
sub
dec
cli
mov
or
punpcklbw
pop
adc
mov
push
mov
lock
enter
in
jg
pop
and
mov
xorl
pop
scas
rcl
repz
mov
fwait
xchg
subl
xchg
pusha
cmp
xchg
inc
adc
add
or
jo
sbb
insl
fnstsw
sarb
mov
pop
mov
mov
add
mov
rolb
pop
adc
add
stos
mov
and
lds
pop
je
push
adc
xlat
sub
mov
sub
adc
jmp
adc
mov
jns
jecxz
test
mov
orps
sub
loop
jne
ja
sbb
fmuls
in
add
lods
out
mov
jl
jmp
imul
add
cwtl
xor
adc
dec
imul
and
push
mov
push
daa
cmp
or
ljmp
adc
jmp
mov
lds
mov
test
add
lret
xor
fidivs
xor
loope
mov
dec
mov
shl
mov
and
ret
xchg
cli
lock
add
repnz
and
inc
mov
aaa
das
sbbl
filds
es
mov
or
push
add
imul
repnz
dec
add
shlb
add
lret
mov
mov
inc
dec
out
stc
add
pop
arpl
mov
mov
mov
lods
insb
bound
popa
pop
inc
inc
mov
sub
sbb
xchg
int3
cld
jno
xor
or
ret
mov
mov
jb
mov
push
push
sub
sbb
cmp
pop
sbb
mov
adc
addl
add
mov
flds
fistpl
or
push
fwait
push
adcl
ds
mov
js
fwait
jbe
jecxz
loop
daa
sub
rcrb
adc
insl
fnsave
movsb
mov
mov
pop
imul
nop
add
mov
lcall
outsb
mov
xchg
test
inc
sbb
cmc
mov
js
xor
sbb
ret
adcl
push
test
push
mov
push
insl
ffreep
xchg
or
das
adc
stos
ficoms
rcl
inc
pusha
aam
xchg
add
xchg
adc
or
sub
lods
cli
pop
popf
test
out
push
mov
mov
inc
add
in
add
fucom
leave
add
xor
mov
xchg
in
stos
lahf
add
enter
add
icebp
std
stos
xchg
push
bound
lret
mov
test
add
inc
popa
cmp
lret
sbb
rcrb
in
stos
out
pop
testl
dec
add
enter
in
sbb
xchg
daa
rcll
mov
adc
or
popa
mov
cmpsl
clc
mov
movsb
clc
fisttpl
cmpsl
xor
push
cs
xchg
cmp
dec
jmp
sbb
sti
pop
dec
popa
adc
mov
mov
rorb
sub
mov
mov
sub
es
popf
add
clc
cmp
andb
inc
mov
mov
repz
jmp
cmp
sbb
lods
mov
add
add
dec
rep
jb
jo
xlat
call
adc
and
mov
aas
sbb
sbb
jb
sahf
daa
mov
sub
leave
xor
mov
cmpsl
insb
movsl
add
repnz
lods
cmpsb
cmc
mov
es
shll
adc
cmp
dec
dec
cmpsb
jecxz
adc
and
mov
and
adc
call
jg
ja
or
jnp
fcoms
mov
lds
inc
mov
pop
mov
iret
xchg
xchg
insl
cmp
pop
pusha
cmp
pop
out
repz
pop
data16
add
mov
push
mov
cmp
mov
rcll
xchg
pop
lret
loopne
cmpsl
movsl
jb
adc
mov
repz
popf
sbb
mov
fimuls
out
xorb
mov
imul
push
rclb
or
movsb
scas
jno
icebp
and
mov
xchg
jne
repz
and
ljmp
pop
adc
sub
jno
sbb
push
orl
ficoml
popf
fcompl
jns
inc
ret
scas
js
jno
xchg
mov
sub
js
or
fbld
inc
pop
movsl
adc
adc
dec
inc
int3
mov
adc
sub
push
mov
sbb
out
cmp
fnstenv
push
add
cmpsb
sub
cld
inc
inc
sbb
xor
ljmp
inc
add
cld
pop
inc
and
adc
cmp
adc
dec
push
add
push
iret
xchg
cwtl
mov
cmp
mov
dec
dec
sti
aaa
and
cwtl
dec
push
loopne
mov
mov
xor
sbb
xchg
pusha
clc
out
adc
sbb
add
sti
into
and
mov
mov
and
outsl
addl
fs
push
push
hlt
mov
cmc
daa
adc
fcmovne
stos
or
jb
or
mov
cltd
or
pop
and
jno
pcmpgtd
cmp
cmp
add
inc
sub
aad
push
mov
sbb
pop
andb
stos
lahf
pushf
adcl
push
ficompl
mov
adc
pop
test
rcll
pop
outsl
pushf
inc
sbbb
dec
jmp
pop
add
lret
je
inc
daa
cmp
adc
in
mov
add
and
push
xacquire
or
and
out
cld
test
imul
mov
popf
pop
adc
add
in
jp
pushf
insb
mov
das
cmp
test
nop
sub
aaa
je
pop
mov
nop
sti
add
fucomip
push
sbb
add
cld
xlat
adc
push
mov
ljmp
pop
xchg
xchg
stos
adc
cmp
das
dec
popf
mov
sub
int
sbb
mov
popf
dec
test
jg
mov
push
mov
iret
dec
repz
pusha
mov
xor
xor
aaa
mov
inc
sbb
andb
mov
add
xor
jecxz
sbb
jg
popf
adc
out
sbb
daa
rcr
sbbb
xchg
sub
add
cmc
xchg
andl
into
repnz
popa
mov
xor
dec
std
adc
dec
push
mov
push
or
pop
push
xor
or
mov
jno
scas
jbe
loope
test
in
or
cwtl
lret
shl
or
xchg
cltd
push
pop
adcb
enter
inc
test
and
sarl
lds
push
test
sub
dec
data16
add
xchg
fldenv
jmp
test
xchg
call
jecxz
mov
jle
mov
mov
cmp
pop
mov
jmp
call
add
and
jno
movsl
stc
and
pop
mov
push
popa
mov
call
dec
adc
jno
dec
loop
jge
add
rolb
enter
or
jns
cmp
fsubp
hlt
add
repnz
mov
mov
fidivrs
pop
aam
mov
adc
jae
and
sub
cmp
aas
xchg
add
neg
push
xor
mov
add
cmp
repnz
call
les
lahf
ja
lcall
xor
or
icebp
dec
popf
lds
test
or
rolb
jge
sub
popa
lahf
pop
jp
enter
adc
sub
aad
add
int
inc
dec
das
adc
mov
nop
or
lock
in
and
dec
popa
mov
pop
mov
pop
xorb
push
pop
push
push
inc
add
addr16
fnstcw
inc
ss
mov
rol
repnz
cmp
rcrb
add
inc
adc
lret
inc
pop
test
in
add
or
dec
cmp
in
dec
loope
jmp
loopne
cmpl
int3
hlt
add
adc
push
sbb
rclb
xor
pop
sbb
rclb
lea
xor
aam
in
mov
jmp
xor
cltd
dec
add
lods
popf
push
push
inc
sarl
clc
stc
shl
lods
leave
and
add
xchg
lret
cmp
xor
inc
or
dec
add
or
lock
in
btc
je
addl
jg
mov
add
push
cmp
add
mov
or
pop
ds
imul
popa
sub
adc
mov
scas
int
add
fiadds
sub
stos
xor
lea
dec
daa
jmp
leave
loopne
loope
mov
test
sbb
jne
push
push
imull
mov
or
stos
sbb
add
mov
es
cli
lahf
xor
ds
pop
sub
test
bound
jne
or
and
sbb
inc
ret
push
icebp
enter
out
push
push
xchg
nop
inc
jbe
add
sbb
pop
mov
cmp
notb
pushf
dec
jp
or
adc
int
fstl
jbe
ljmp
adc
insb
roll
cmp
out
cmc
loopne
flds
mov
or
clc
int3
push
mov
std
add
bound
jmp
jns
adc
call
shl
das
and
addb
add
mov
shr
or
mov
sbb
adc
jae
push
stos
aaa
and
push
xchg
je
aam
push
shl
adc
mov
loopne
in
inc
xor
loopne
cs
fs
fs
and
test
jnp
add
aad
xchg
mov
mov
pusha
adc
dec
and
pop
jmp
movsb
xchg
inc
push
je
rcl
ds
movsb
or
into
sbbl
loop
adc
lea
ljmp
sub
add
sub
jle
int
cmp
sbb
xchg
cmp
inc
in
popf
add
add
add
aad
mov
scas
rorl
das
inc
jo
sti
mov
xchg
lcall
pop
movb
lret
inc
push
incl
arpl
add
and
pop
xchg
sti
and
sbb
add
addb
push
mov
xchg
cwtl
insb
sbb
jae
jo
xchg
cld
adc
mov
push
pusha
scas
fadds
loop
add
cld
jge
jg
mov
in
adc
add
mov
fdivrl
shll
mov
sub
jp
pushf
cmpsl
adc
mul
lea
scas
pop
push
xchg
loop
jge
dec
fs
fcomps
push
lahf
push
sub
test
lea
adc
aam
test
testl
add
cmpb
mov
xlat
sbb
pop
mov
clc
pop
sbb
add
lahf
jo
out
testl
mov
pop
es
adc
sti
inc
loope
cmp
jp
inc
xchg
test
adcb
lock
mov
and
pop
outsb
fidivrl
push
pop
adc
jno
xchg
sub
sub
add
mov
pop
jb
in
std
mov
xchg
sbb
js
lahf
mov
notb
mov
movl
lahf
js
add
xchg
ljmp
xchg
sbb
sbb
stos
call
test
xchg
repz
or
and
adc
cwtl
push
addl
adc
pop
mov
inc
mulb
mov
sbb
fidivrs
cli
lods
data16
and
pop
pop
in
shlb
add
dec
gs
mov
sti
xor
imul
mov
fnsave
leave
push
xchg
xchg
daa
adc
or
sti
in
xor
adc
xchg
pusha
xchg
add
js
popf
inc
scas
mov
rorl
mov
lock
xchg
sbb
je
adc
call
outsb
cmpsb
rcll
bound
popf
mov
loope
pop
ret
popa
jmp
xchg
add
rcll
add
sbb
enter
pop
lods
mov
dec
and
xor
push
mov
jecxz
bound
rcrb
dec
cmpl
dec
dec
ds
xchg
push
mov
mov
dec
call
push
fwait
push
push
add
out
or
movl
mov
inc
inc
sub
fidivrs
xchg
out
sub
sub
fwait
popf
push
or
and
sub
sub
or
xor
push
mov
aaa
lock
adc
sub
orb
add
push
add
loope
pop
push
add
ret
xchg
icebp
popf
sahf
xor
add
sbb
data16
ljmp
and
insb
sbb
jns,pn
fsts
add
aas
jbe
mov
add
push
inc
or
dec
jle
add
int3
xor
testb
adc
add
adc
clc
lea
jns
inc
daa
pop
in
add
mov
sbb
sub
btr
popl
inc
dec
push
cmp
and
sbb
int3
mov
add
mov
je
adc
aad
xor
or
and
cli
je
icebp
add
enter
cmp
jecxz
push
mov
or
cmp
mov
in
add
sub
jne
shlb
or
add
popa
inc
insl
inc
fwait
add
neg
je
int3
sbb
rolb
je
cmp
xchg
add
mov
adc
and
sub
lods
or
jo
pop
xchg
popa
inc
sbb
cwtl
fwait
add
sbb
aas
push
jnp
adc
sahf
pop
mulb
pushf
add
adc
dec
xchg
les
fadds
loop
xchg
out
and
ret
loopne
add
lahf
jmp
out
popf
pusha
mov
adcb
jp
mov
and
inc
call
adc
mov
or
mov
int
xchg
add
in
int3
stos
out
fildl
adc
movsl
add
push
xchg
push
mov
in
pop
mov
sbb
add
push
add
xchg
and
adc
inc
mov
jg
js
rcrl
test
movsb
xor
pop
int
cmp
add
lds
mov
lea
pushf
or
cmp
push
testb
inc
jl
inc
cmp
pop
add
jbe
insb
out
push
fs
add
notb
aad
sub
and
and
ljmp
fdivl
sub
cmp
sbb
lret
jno
xor
fadds
shlb
add
dec
cli
dec
rcrb
pop
stos
add
jbe
cmc
add
arpl
add
sbb
js
lds
add
jbe
out
lock
outsb
add
fstl
aas
mov
adc
add
daa
in
bound
mov
sub
shr
sbb
jo
add
mov
dec
pop
mov
lock
adc
pop
fwait
mov
in
scas
add
inc
sbb
xor
sbb
mov
cld
adc
hlt
roll
out
sub
mov
mov
sbb
push
out
gs
imul
pop
adc
push
shlb
pop
mov
and
mov
jo
push
sub
pop
xor
roll
inc
xchg
out
lret
add
cli
add
adc
aaa
push
push
and
push
lock
call
or
jg
and
lret
add
aaa
mov
and
sbb
sti
jno
movsl
pop
lods
out
ret
adc
add
rolb
mov
dec
in
or
mov
mov
inc
mov
add
out
hlt
insl
pop
sti
push
add
cmp
push
fistpl
mov
sub
mov
and
cwtl
jns
push
insl
into
dec
imul
jo
xor
add
cmp
in
nop
add
iret
in
int
inc
mov
add
pop
and
bound
out
jmp
lahf
dec
and
es
push
sbb
leave
pusha
subb
insb
add
fwait
jg
into
sub
aam
outsl
and
xchg
cld
addb
add
xlat
call
and
scas
icebp
ret
lods
xor
or
inc
add
arpl
aad
pusha
mov
add
movsb
orl
es
lea
xchg
xchg
jns
jae
pop
sub
inc
addb
push
repnz
lock
test
in
inc
mov
jg
movsw
mov
mov
lea
aad
outsl
cmc
mov
dec
scas
lds
push
les
or
out
mov
inc
in
and
nop
sbb
sub
lods
mov
std
jg
mov
addb
rcr
mov
cmp
rcll
outsb
add
divl
lods
sbb
push
pusha
add
iret
outsb
out
xchg
add
cmp
aad
arpl
push
add
loope
cmp
and
mov
inc
in
or
enter
push
and
nop
shlb
cmpsb
sbb
flds
loope
sub
and
ret
sbb
mov
jp
imul
sar
out
add
repnz
mov
and
jge
adc
push
incb
jno
or
add
test
repz
in
inc
add
mov
jae
sahf
jb
jg
aam
xchg
aas
test
inc
or
add
adc
stc
jae
xchg
cmp
sbb
out
sub
and
and
xor
popa
dec
dec
bound
es
lods
sub
cmpsb
jo
dec
jge
and
scas
insb
add
add
sbb
loop
fwait
mov
xchg
test
pop
out
add
addr16
sbb
and
sti
cmpb
add
mov
adc
mov
dec
sbb
or
jb
mov
test
dec
pusha
mov
mov
add
push
or
add
sbb
sbb
js
pop
outsb
stc
add
lret
mov
mov
sbbb
aam
jns
pop
js
add
in
push
or
xor
cwtl
and
subps
add
xor
xchg
mov
xor
pop
xor
gs
add
enter
subl
lock
lds
add
sbb
hlt
rcr
pop
fsts
test
in
or
jle
add
sar
push
jns
in
inc
add
iret
popf
pop
mov
dec
and
sbb
clc
out
fcom
cmp
aaa
stos
icebp
push
mov
lret
addl
mov
push
adc
jl
dec
and
inc
or
xchg
repnz
sub
je
sbb
xchg
lods
jg
sbbb
aam
out
cmp
or
popa
lcall
lods
scas
push
inc
mov
shrl
inc
test
popf
add
sbb
pop
mov
add
out
je
mov
and
inc
jp
push
popf
mov
ljmp
mov
repz
and
sbb
cmc
cmpsl
mov
adc
cld
pushf
inc
jg
dec
test
mov
and
mov
shlb
push
push
add
mov
enter
sbb
repz
cwtl
pop
dec
rclb
in
lret
sbb
lcall
xor
jns
fdivrl
int3
js
mov
movb
add
pop
add
jns
push
icebp
js
fwait
jnp
add
push
mov
sbb
sbb
cwtl
mov
inc
add
mov
push
add
scas
sub
popf
push
add
mov
pop
add
cmp
dec
add
scas
rorb
cmp
popf
cmpsl
pusha
in
inc
cmp
fistl
xor
xchg
mov
enter
mov
shrb
xor
addr16
sub
in
push
dec
insb
jl
inc
leave
lahf
xor
push
mov
push
pusha
pop
jmp
lods
inc
add
aad
xor
cwtl
cmp
cli
pop
adc
jns
jne
fadds
int3
loopne
enter
mov
mov
sub
test
aam
or
sbb
pop
inc
hlt
or
fld1
and
out
cmc
outsb
add
mov
icebp
cli
inc
sbb
xor
push
ror
andb
fsts
and
cld
xchg
add
push
mov
jg
add
add
adc
hlt
rcll
xor
add
dec
fs
jbe
loop
cmp
shrb
pop
movsl
test
mov
pop
add
pop
inc
mov
add
lcall
dec
dec
jge
push
inc
cld
add
mov
lret
sub
adc
das
add
adc
sub
jns
add
jge
add
out
sarl
in
or
test
push
cld
pop
add
in
popa
sbb
mov
or
in
sbb
ret
enter
push
stc
inc
xchg
jno
or
ljmp
mov
call
sbb
cmpsl
xchg
stos
js
pusha
hlt
cmp
ss
mov
dec
add
and
fs
inc
sarb
jp
lcall
pop
roll
in
xor
aad
adc
sub
push
sbb
les
xchg
mov
dec
jge
dec
andl
stc
in
shr
popl
push
push
fcomip
push
adc
insl
cmp
mov
mov
jo
test
push
add
je
xor
xchg
push
mov
add
xchg
dec
add
loop
cmc
ret
jg
sub
jge
add
cwtl
or
xor
add
rclb
je
jo
nopl
jg
xchg
or
add
jecxz
lret
sub
out
mov
lret
in
rcr
cmp
push
and
add
jo
xor
sub
mov
ja
popa
inc
sub
and
inc
out
pop
lcall
mov
clc
cmp
movsl
data16
add
push
mov
gs
fldl
mov
lret
add
aad
xor
jno
mov
dec
pop
mov
je
pop
xchg
push
out
clc
div
dec
xchg
add
repnz
int3
add
add
mov
xchg
adc
sti
into
icebp
iret
xchg
jmp
jo
inc
add
and
push
outsl
repz
add
jns
bound
enter
xor
insb
xorb
movsl
das
pop
push
pushf
push
lods
lcall
inc
and
dec
into
adc
sahf
js
je
jb
insl
test
dec
cmp
add
add
inc
lods
out
add
and
out
cmp
loope
push
rcrb
sub
ljmp
fcomps
psadbw
sbb
mov
lret
add
sub
out
dec
addr16
loop
pusha
in
iret
loopne
push
add
sahf
xchg
hlt
pop
jecxz
arpl
shll
js
cmp
sbb
mov
int3
pusha
dec
popl
mov
and
fdivrs
bound
xlat
add
and
sub
ret
popw
add
mov
rclb
jne
in
out
dec
add
out
in
inc
push
mov
inc
or
adc
ljmp
mov
test
test
xchg
fnstsw
sbb
mov
push
shlb
adc
or
inc
sub
inc
je
add
or
lcall
adc
add
int3
pop
xchg
pop
add
jb
aaa
nop
bound
push
int3
mov
cmpb
adc
clc
fbld
clc
xorb
mov
cmp
mov
in
or
add
add
jno
and
rcrb
stos
and
popa
adc
push
sarl
xor
hlt
jae
add
sbb
cmp
shll
adc
xchg
sar
mov
add
pushl
cmp
pop
and
and
les
inc
cmc
shl
cmp
or
and
dec
outsl
inc
sahf
push
sub
inc
push
cmp
add
mov
xor
leave
xorb
push
xchg
in
inc
int3
pop
jl
xor
inc
or
and
repz
jl
xchg
cmovs
lcall
xchg
pusha
or
xor
or
rcrl
lock
in
sbb
jo
xor
pop
lods
dec
fistpl
inc
sarb
scas
cmp
or
or
mov
or
sub
lods
or
adc
or
mov
adc
push
adc
jl
add
jbe
pop
add
rep
push
mov
and
lock
and
cld
jmp
pop
adc
in
inc
push
add
pop
adc
xor
sub
into
cwtl
inc
adcl
push
lods
lret
or
dec
push
fistps
clc
hlt
sbb
add
mov
int3
xchg
pop
add
and
pop
or
test
or
andb
push
pop
fidivrs
pop
pop
lahf
in
pushf
or
adc
aaa
hlt
cmp
mov
or
sbb
push
sbb
mov
addb
outsl
adc
in
mov
popf
incl
push
movsb
jb
mov
testb
bound
add
and
stc
jp
sub
fisttpl
cmp
adc
add
jg
dec
xchg
sarb
mov
lret
pop
and
sbb
enter
or
push
adc
and
lcall
mov
push
es
mov
iret
sti
lcall
push
lods
std
mov
outsl
pop
inc
aad
shlb
cli
enter
scas
jne
adc
daa
imul
xchg
add
and
xor
test
in
insl
pop
in
mov
sbb
add
mov
movl
sub
mov
add
lods
cmp
incl
lds
outsl
sub
mov
test
adc
lret
je
lret
pop
enter
push
inc
inc
or
push
add
adc
arpl
jns
or
push
mov
push
add
mov
call
adc
in
int
mov
lock
or
mov
mov
stos
xor
and
sub
add
xor
adc
mov
movsl
inc
es
jmp
add
adc
shr
ret
mov
repz
dec
sbbb
call
add
push
add
pop
rclb
inc
fadds
sub
cmp
lock
rclb
fwait
xor
mov
or
mov
sub
ds
dec
shrl
test
jnp
ljmp
rclb
int3
adc
in
pop
stos
sti
adc
jp
je
pusha
icebp
shlb
mov
xchg
out
test
mov
xchg
cwtl
pop
fldcw
shlb
mov
fdivr
add
aaa
inc
gs
add
xor
adc
jp
scas
cmp
push
xchg
xor
mov
cld
ret
rcrl
or
aad
cmp
inc
pop
xchg
xor
or
cmpl
clc
sarl
add
lods
xor
adc
adc
sub
jne
xchg
ljmp
jno
pop
pop
add
jo
jecxz
into
add
adc
push
fwait
cmpb
jle
cmp
sbb
gs
scas
je
lahf
add
adc
test
out
popa
pop
pusha
ds
test
sub
out
cmp
mov
add
cmc
sub
add
dec
add
imul
xlat
aad
cmp
push
pop
sti
or
add
mov
imul
mov
or
shll
inc
add
mov
push
pop
adc
sub
les
add
jns
repz
jne
nop
dec
add
in
cld
push
stc
int
data16
outsb
jns
stos
ja
loop
shl
pushf
add
jge
sarl
add
mov
sbb
mov
mov
xor
call
jne
mov
inc
adc
rcll
add
sbb
cli
jo
jmp
gs
xlat
adc
decl
testl
lret
cli
add
test
jle
shlb
dec
lcall
inc
inc
xor
incl
int3
mov
aad
sbb
ja
xor
cmpsl
cmp
aas
and
jmp
loopne
mov
or
gs
pop
push
pop
mov
push
xor
in
push
pop
mov
inc
sbb
rolb
pop
pop
inc
mov
in
pop
add
icebp
cmp
sbb
and
ss
xchg
add
xchg
js
cmp
imul
lret
dec
sub
adc
jl
push
je
in
loop
rcrb
and
sarl
xchg
movsb
push
rcrl
leave
popf
jmp
and
add
mov
cmp
pop
sti
sbb
loopne
movsl
mov
add
ljmp
or
and
jae
mov
sbb
pusha
add
in
stos
mov
jmp
cmp
stc
hlt
ds
xor
pop
sbb
lcall
adc
push
add
sbb
dec
addr16
nop
and
std
or
jb
mov
add
das
sbb
jbe
test
stos
mov
mov
or
xchg
sbb
and
cmp
pop
inc
out
dec
decb
add
sub
aaa
pusha
ljmp
pusha
add
inc
add
jae
jnp
cmp
dec
cmp
add
sbb
add
sub
shlb
movsb
ja
cmpb
dec
lret
js
inc
mov
ja
and
divb
mov
js
cmp
shll
adc
das
aas
mov
push
pop
adc
xchg
lock
insb
jmp
adc
adc
iret
sbb
mov
packuswb
cmc
cmpsl
add
mov
ss
xchg
or
xor
adc
xchg
sub
inc
sar
rcrb
jecxz
addb
jl
sbb
js
shll
jnp
mov
enter
mov
xchg
add
xchg
out
shll
add
shl
cmpsl
ret
pop
mov
ss
je
and
pusha
dec
int
adc
es
lods
lods
arpl
mov
xor
add
daa
cld
cwtl
xorb
addr16
pushf
inc
adc
sub
imul
test
adc
ret
inc
cwtl
add
add
mov
das
sbb
mov
inc
dec
pop
xor
sbb
stc
mov
aaa
push
dec
sub
fs
inc
mov
fs
mov
and
mov
lock
jnp
sbb
lods
mov
add
stos
movsl
push
enter
js
hlt
add
enter
fdivrs
stos
mov
daa
stos
push
push
rorb
insb
add
insl
sbbb
sbb
sbb
faddl
inc
hlt
aas
add
xor
xchg
ret
pushf
mov
sbb
loop
push
enter
popa
dec
sbb
and
cwtl
insb
inc
arpl
push
or
dec
jo
sub
ret
or
test
cmp
sub
dec
or
dec
aam
add
movsb
mov
sahf
cld
leave
icebp
movl
ds
in
cmc
movsb
shll
insb
push
notl
xchg
xchg
cmp
outsl
xchg
dec
push
dec
or
add
jecxz
add
lret
mov
push
xor
dec
cmp
xchg
dec
push
jnp
or
insb
outsb
jle,pt
add
dec
ret
cwtl
lcall
movsb
sbbb
jle
inc
push
fwait
pop
adc
and
sbb
fwait
mov
nopl
mov
inc
mov
inc
push
xlat
xchg
add
and
xchg
xor
je
fmull
inc
and
inc
adc
mov
fists
mov
test
sbb
shrl
add
xchg
shll
mov
movsb
or
dec
push
shll
add
or
fwait
add
pusha
cmpsb
mov
rclb
or
aam
and
inc
inc
push
sbb
mov
push
sub
loopne
pop
pop
cmc
sbb
push
aas
iret
in
arpl
test
dec
and
andb
xor
add
xchg
fisttpl
test
pop
repz
fcoms
sub
ds
clc
nop
dec
add
ret
lret
fildl
and
pusha
rolb
xchg
mov
bound
dec
sbb
std
inc
inc
xchg
and
add
pop
mov
insl
push
mov
sahf
inc
clc
mov
fwait
insb
xchg
push
rclb
ds
imul
fwait
xchg
fs
mov
bound
in
push
add
xchg
movsl
sbb
repz
inc
mov
lahf
push
in
mov
pop
add
repnz
notb
shlb
xchg
pop
add
repnz
add
add
mov
push
pop
cmp
mov
insl
push
pushf
std
lods
jecxz
pop
push
in
incl
scas
test
movsl
pop
xchg
fwait
add
cmpsl
or
xor
aaa
aas
add
test
jp
rorl
es
dec
add
fistpll
sbb
xchg
or
andb
sub
push
push
add
mov
inc
mov
test
add
fidivrs
xchg
lds
jle
inc
sbb
ret
shll
mov
imul
lret
add
jp
std
jbe
add
sbb
sti
jl
or
and
jns
insl
negb
jo
xor
push
adc
lret
mov
push
adc
pop
iret
mov
int3
clc
fisubl
push
add
cmp
jae
fcomps
sbb
adc
add
in
or
add
or
or
add
hlt
les
pushf
in
mov
and
and
sbb
aam
mov
add
xchg
xor
lcall
inc
cmp
cltd
sar
in
jae
sub
push
xor
daa
add
push
adc
sub
rcrl
shrb
loopne
clc
std
iret
fiaddl
je
lds
addr16
sbb
pop
les
lock
cmp
and
jb
inc
sub
popa
ret
jae
pop
sub
mov
push
add
lret
cmp
adcb
outsb
in
xor
xor
and
adc
lods
add
pushf
jmp
xor
flds
mov
je
and
shl
add
adc
mov
mov
cltd
sub
and
fimuls
sbb
jne
aad
and
gs
add
pushf
mov
sbb
shlb
push
pop
pop
fidivrs
fcoms
jl
sub
xor
add
mov
andb
xchg
pop
cs
push
movsl
repz
shlb
jae
inc
mov
adc
mov
jmp
inc
pop
sbb
xor
xchg
add
lcall
jns
push
fldl
je
add
subb
aas
dec
push
movsb
insl
inc
daa
inc
sub
or
mov
int
nop
in
adc
sub
pusha
sbb
lods
stos
es
repnz
cmpsb
mov
push
mov
into
sarb
mov
iret
loope
xchg
aam
inc
jmp
fmull
insl
dec
mov
sbb
jmp
pop
addr16
cmpsl
and
je
outsb
sbb
lret
paddw
mov
rolb
and
or
je
test
or
test
into
ret
xchg
xchg
dec
pop
addb
xlat
stos
xchg
sub
in
push
xor
dec
add
cmc
or
add
sbb
add
shlb
lods
fmul
aas
sbb
add
sub
lods
test
push
push
add
pusha
vmovntps
mov
add
dec
xor
outsl
xor
loopne
out
sbb
in
cmp
cwtl
and
push
pop
add
pop
scas
push
fwait
hlt
jbe
pusha
cmp
sahf
lahf
mov
and
adc
push
add
out
inc
pop
xor
sbb
xchg
sub
inc
adc
or
sbb
adc
sbb
bound
inc
add
sbbl
data16
ljmp
stc
jmp
sbbl
outsb
mov
or
loopne
jl
add
jbe
or
pop
push
lret
push
sbb
ss
or
fistpll
jno
clc
out
fisubs
push
or
mov
in
imul
or
lcall
lock
inc
add
shlb
dec
push
movsl
xchg
hlt
pop
push
push
roll
cmp
dec
jns
push
outsl
out
jg
or
and
leave
cmp
adc
mov
pop
setne
pop
adc
mov
aad
fsts
sub
lahf
push
pop
mov
gs
pop
dec
daa
ret
mov
mov
mov
mov
mov
in
dec
sbb
pop
mov
and
jo
dec
fwait
sub
pop
dec
cltd
orb
call
sbb
and
stos
add
cs
and
add
aad
movq
xchg
test
leave
dec
dec
push
fs
stos
add
inc
pushf
lods
push
add
adcb
add
stos
flds
mov
jge
stc
add
rolb
mov
sarb
insb
icebp
fdivl
inc
out
add
mov
jb
rol
xchg
sbb
jne
add
mov
mov
cmpsb
mov
in
jg
les
lods
xor
jae
dec
add
add
push
loope
aad
adcb
mov
dec
mov
mov
mov
xor
leave
adc
pop
outsl
add
ljmp
popf
push
and
jle
dec
addl
roll
adc
imul
mov
cmp
xor
loopne
xor
adc
sbb
adc
js
cmpsl
cmc
mov
in
fidivs
xor
mov
call
test
aaa
fs
popa
sahf
lock
popl
cli
sbb
repnz
dec
cmp
mov
and
out
and
push
sbb
jo
mov
xor
sti
js
dec
sahf
mov
fcoms
inc
sub
mov
push
xor
add
pushf
mov
hlt
and
mov
add
xor
filds
outsl
push
dec
mov
pop
movsb
cltd
push
inc
aas
pusha
mov
cwtl
int3
sbb
mov
mov
sarb
into
inc
xchg
adc
insb
shl
inc
stc
jbe
popf
enter
pop
int3
cmp
or
or
mov
and
xchg
cmpsb
push
push
mov
lock
jae
jb
lods
pushf
pop
mov
adc
flds
jb
push
or
add
inc
subl
add
out
aaa
loop
rorb
ds
ror
add
inc
xlat
mov
bound
fisubl
lcall
stos
repz
or
sub
cli
insb
add
mov
rcrb
cwtl
push
push
ss
pop
add
in
or
nop
orl
add
xchg
sbb
adcl
pop
jmp
fimull
ffreep
aam
outsb
cmc
dec
add
pushf
sbb
mov
adc
xor
lea
ret
mov
pavgb
xor
out
js
ret
inc
scas
rcrb
add
cmpsl
int3
xor
aas
outsl
inc
rol
jle
scas
cwtl
mov
pop
in
pop
push
out
out
shll
mov
daa
pusha
mov
cmp
mov
jne
aad
ret
sub
iret
iret
add
pushf
mov
ror
stc
and
dec
xor
and
fistpl
mov
push
orb
shld
mov
pusha
std
jecxz
add
ja
dec
add
mov
sarb
jg
enter
rolb
fiaddl
out
mov
data16
sbb
pushf
mov
push
cmpsl
lret
shlb
popa
sub
inc
iret
jle
add
dec
jmp
push
pop
stos
mov
mov
mov
and
xor
add
lods
shr
and
pop
mov
cltd
push
out
lahf
add
inc
repnz
mov
pop
jb
add
push
lock
inc
add
shlb
fsubl
add
xor
fwait
and
dec
loopne
outsl
xor
rcll
ss
mov
xchg
aaa
add
dec
shrb
lea
mov
stos
or
cmc
add
sbb
push
pop
pop
push
pusha
mov
add
out
mov
dec
sub
scas
xor
cli
lret
sbb
in
cwtl
cwtl
aas
xor
sbb
pop
pavgb
push
dec
mov
cmp
mov
dec
pop
shl
loope
push
adc
rolb
out
out
or
add
xor
mov
sub
push
or
adc
add
mov
inc
mov
bound
loop
pop
mov
scas
cwtl
xor
scas
mov
jae
aam
mov
pop
xchg
jle
add
push
lods
cmpl
sub
push
mov
movsb
fsts
inc
sbb
in
les
push
lret
sbbb
sub
repnz
imul
fisttpl
std
sbb
adc
pop
sub
mov
adc
mov
and
push
inc
clc
dec
adc
test
lock
jo
mov
or
mov
add
and
add
sub
push
add
pop
andb
add
add
sbb
jbe
push
dec
mov
sub
test
setp
and
add
mov
pop
add
jno
and
fucomp
int
or
jae
cmp
xor
mov
and
adc
outsl
push
fdivrl
add
add
dec
xlat
roll
lret
test
int3
cmp
add
mov
fwait
repnz
push
cmpsl
pop
cmp
loopne
mov
push
add
fisttpl
mov
call
cmpsl
loope
pop
xor
mov
pop
movsl
sub
arpl
pop
leave
cmp
sahf
scas
jae
add
sub
dec
lods
arpl
inc
mov
pop
pop
add
shr
mov
dec
aam
add
movsl
rclb
ret
add
push
int3
xor
sbb
xor
mov
mov
into
push
add
loope
jg
stc
push
fwait
add
jb
sbb
inc
inc
sub
push
add
icebp
cmp
ds
and
int
cmp
add
repnz
xor
add
out
mov
push
lcall
pop
dec
pop
jno
int3
xchg
xchg
add
cmpsb
jp
in
std
aad
in
jecxz
mov
xchg
call
cmp
jl
loopne
jl
rorb
xchg
ret
cmp
insb
fsubrl
and
lret
bound
add
cwtl
inc
fstl
pop
incb
shrl
cwtl
cld
add
repz
xor
daa
jo
mov
mov
pop
aam
mov
in
inc
and
mov
movsl
bswap
test
in
fwait
daa
stc
pusha
in
xchg
mov
popa
adc
sbb
xor
add
out
push
add
and
pop
cmp
ret
insl
repz
roll
cld
aam
mov
lods
jp
gs
bound
aas
call
rolb
femms
fcmove
mov
jmp
pop
mov
add
jecxz
xcrypt-ctr
adc
mov
or
flds
and
cmpsb
nop
xor
xlat
test
test
dec
cmp
sbb
adc
mov
pop
and
inc
jo
and
adc
mov
test
pop
pop
pop
aad
jae
cld
pop
ljmp
jle
lcall
and
movsb
std
mov
jb
cld
inc
sub
dec
mov
shl
jmp
or
jae
pusha
scas
jle
outsl
pop
cmp
mov
addl
pmulhw
push
jge
outsb
jecxz
mov
pop
push
rolb
pop
push
repnz
add
lahf
and
cld
ljmp
lds
add
addl
fwait
pusha
cwtl
lods
jnp
mov
pop
inc
dec
fbld
sbb
pop
js
sbb
in
mov
mov
xchg
loopne
or
jns
jle
js
add
inc
inc
xor
and
add
or
loope
cmc
cli
add
adc
mov
and
pop
mov
rolb
jb
das
insl
andl
or
insb
xor
insl
adc
lea
sbb
inc
add
inc
inc
dec
js
movswl
and
mov
mov
lcall
repnz
cmp
jo
xchg
cmp
add
out
push
mov
jno
test
in
mov
push
fwait
ljmp
aam
pop
push
lcall
scas
pop
imul
test
out
lcall
ljmp
into
pop
dec
roll
or
inc
cmpsl
sbb
loopne
mov
jge
hlt
add
xor
adc
add
lcall
scas
shl
leave
pop
out
fisubrl
mov
add
adc
sub
imul
dec
mov
lock
add
jge
dec
fmull
sbb
setns
mov
add
js
popa
add
sbb
pop
imul
inc
xchg
mov
add
das
mov
add
and
mov
inc
in
jge
add
ja
popa
xchg
xchg
add
mov
adc
rolb
fxch
repnz
iret
cmp
and
hlt
mov
inc
testb
push
cmpsl
add
adcb
sub
add
or
add
stos
inc
cmp
cs
bound
ja
xor
cmp
call
push
jae
loopne
add
arpl
add
fucompp
pop
add
and
adc
xor
inc
inc
and
cmpsl
inc
push
icebp
dec
add
aam
pop
popa
sbb
add
fwait
push
sti
xor
paddsb
sub
dec
mov
cmp
sub
rcrb
or
add
push
lea
dec
addl
dec
mov
outsl
leave
or
cmp
test
subb
nop
mov
sub
test
roll
jp
fistpll
mov
add
mov
mov
xchg
inc
add
sbb
arpl
es
inc
stc
xchg
shll
shlb
add
sti
and
add
fcmovne
add
pop
ss
xchg
leave
pop
adc
cmovne
call
ja
jnp
je
mov
pop
gs
rcrl
mov
imull
mov
xlat
inc
lods
add
jle,pt
fistps
negb
dec
lcall
fldz
mov
fidivrl
arpl
pop
ja
sub
stc
mov
aas
cmp
add
test
add
adc
jae
inc
popa
add
mov
lret
cmc
add
push
loop
jge
add
daa
shr
lods
mov
out
jno
add
sub
add
mov
lods
jbe
xchg
rolb
hlt
inc
aas
sbb
xor
mov
add
inc
sub
sub
out
adc
rorl
add
rorb
add
movb
xlat
mov
sbb
dec
xchg
test
adc
popa
adc
adc
lods
add
mov
and
add
iret
mov
add
jns
hlt
dec
sbb
bound
repz
dec
jl
lcall
add
mov
test
jno
sbb
mov
repnz
and
inc
pop
add
js
dec
mov
mov
jb
fmuls
push
mov
cld
loope
fidivrs
aam
add
sub
lods
add
adc
mov
cli
add
xorb
push
or
adc
xchg
mov
sub
ret
shl
ss
in
xor
addr16
sub
adc
add
xchg
pop
lock
outsb
jmp
add
xor
mov
xor
ret
sub
jns
cmp
or
in
add
jge
push
xchg
lock
test
aas
add
int
dec
shl
cmp
outsb
push
pop
jae
adc
jmp
pop
or
cmp
pop
mov
loop
repnz
push
in
xchg
add
lock
hlt
inc
add
sbb
call
mov
cltd
movsb
popf
add
mov
and
add
or
jne,pt
fs
aad
and
loopne
jo
add
mov
xor
sti
push
ret
pusha
dec
inc
cmpl
pop
loope
insl
cwtl
sbb
xchg
cmc
pop
jg
out
sub
movsb
cwtl
add
inc
cmp
rolb
mov
sahf
mov
inc
pusha
and
or
hlt
mov
mov
icebp
in
add
lock
dec
sar
jns
add
mov
sub
xor
fidivl
ror
ja
add
cmp
add
jae
xchg
mov
mov
mov
pop
add
arpl
pop
push
lods
xchg
aam
inc
mov
add
xor
fsubrs
mov
jno
inc
lock
or
mov
mov
sub
inc
in
in
jle
mov
push
int
pop
scas
jae
and
pop
sbb
loopne
add
cmc
ja
add
movlps
and
mov
filds
fwait
loope
leave
ret
inc
imul
loop
out
mov
bound
jo
pop
push
clc
movq
xchg
inc
stos
jmp
mov
push
or
jae
and
mov
sbb
push
jns
test
jle
or
arpl
and
adc
or
icebp
call
inc
in
jge
outsl
aad
shlb
addr16
or
shlb
movb
loopne
inc
and
add
jg
jns
int3
add
pop
scas
xchg
insl
mov
outsb
add
lods
push
shlb
pop
mov
mov
add
daa
mov
add
xor
lea
add
test
pop
mov
popa
clc
std
add
mov
aam
mov
pushf
push
jl
sbb
mov
cld
and
aam
xorb
add
sbb
shl
sbb
jae
shll
xor
sbb
stc
nop
sub
aam
sub
add
pop
outsl
xor
std
cli
jge
stc
sub
fstpt
testb
rorl
dec
das
faddp
cmp
mov
aad
pop
inc
mov
repnz
or
pop
mov
addr16
cltd
sarb
cmp
sub
aam
cld
push
add
loopne
jo
mov
imul
in
sti
add
stos
push
imul
ljmp
nop/reserved
xor
or
ss
and
in
inc
out
iret
pusha
out
jb
and
inc
test
ljmp
and
leave
cld
lret
sub
lret
add
jg
adc
jno
pop
pusha
fwait
push
sbb
mov
hlt
shlb
pop
add
ficoms
fidivs
orb
add
je
xchg
in
mov
and
lds
ds
add
sub
inc
mov
ljmp
scas
pop
cld
scas
adc
mov
not
fsubrl
add
jne
fcoml
enter
or
out
and
shl
or
dec
sbb
pushf
cwtl
rclb
add
push
mov
in
pop
sahf
fs
shrb
aas
mov
stc
sarb
or
shlb
add
add
xchg
mov
movsl
pushf
roll
mov
adc
sub
fdivl
sub
jecxz
mov
xchg
add
not
mov
or
sbb
mov
jae
cmp
inc
cmp
cmpb
jmp
cmp
add
add
or
stos
jge
mov
inc
mov
loopne
jecxz
lds
sbb
add
insl
inc
mov
jb
dec
stos
aas
add
adc
es
dec
int3
add
les
mov
shrb
and
lods
pusha
test
test
and
dec
xchg
movsb
mov
gs
fcom
add
adc
int3
sbb
mov
push
shll
cltd
insb
rorb
adc
mov
add
mov
xchg
jp
daa
add
sub
dec
mov
cmp
mov
add
xorl
cs
add
jo
cmpsb
cmp
add
xor
mov
add
mov
jge
jo
add
mov
xor
scas
ror
jle
mov
adc
insb
push
fdivrl
sbb
nop
sbb
mov
stos
int
mov
add
or
and
in
adc
xchg
popf
xlat
add
arpl
xchg
xchg
ss
cltd
daa
add
iret
addb
pop
sbb
in
es
sub
dec
xchg
sahf
dec
mov
fstpl
mov
fistpl
push
ds
jb
mov
add
fwait
sub
cmpsl
lods
stc
sbb
lret
fcomip
cmp
je
mov
scas
addr16
fwait
push
adc
adc
xchg
cs
push
mov
loopne
jno
jge
push
out
in
lock
jnp
scas
fildl
add
or
add
loope
dec
xor
jbe
mov
xor
icebp
ficoml
sbb
sbb
cmc
test
add
and
or
iret
scas
dec
aam
mov
lcall
mov
xchg
or
ljmp
dec
aam
jecxz
movsl
cmp
sub
movb
xchg
inc
add
sub
cmp
in
lds
or
out
add
xchg
add
or
icebp
add
jo
arpl
mov
add
ljmp
jae
bound
int
pop
pop
addb
insl
nop
nop
fidivrl
xchg
mov
add
orb
jo
testl
push
mov
cmc
lods
add
bound
dec
call
cli
stc
add
inc
aad
xor
sub
jnp
add
lahf
cmp
sbb
add
das
dec
mov
push
pop
loop
sub
push
loopne
add
pop
sbb
insb
mov
mov
pop
mov
add
sahf
lcall
loopne
and
xchg
imul
mov
pushf
or
pop
add
loop,pn
lcall
pop
pop
outsb
sti
sub
dec
sti
add
push
popa
outsl
and
mov
push
add
xchg
mov
adc
or
rcrl
fcomps
test
sbb
lret
add
jge
mov
sahf
mov
pop
movsl
imul
jl
mov
inc
inc
sbb
or
mov
inc
out
cmp
in
icebp
add
roll
add
in
test
add
clc
lea
sbb
cli
loope
sub
jnp
push
call
add
into
das
xor
pop
fildl
mov
jbe
rolb
mov
cmpb
adc
and
sub
out
cmpb
add
add
mov
add
frstor
mov
fmul
and
lds
call
mov
jae
mov
pop
jmp
fs
push
fsubrs
push
ss
lahf
mov
mov
aad
in
pusha
stc
add
out
push
sbb
ret
call
leave
iret
movsb
jg
scas
pop
add
and
aaa
or
mov
icebp
call
add
add
aad
push
jnp
add
pusha
loop
aas
jmp
test
test
ror
stos
cmc
inc
cld
js
stos
add
shlb
cmp
hlt
add
push
and
add
enter
subb
jg
je
sbb
fsts
dec
inc
push
mov
repnz
add
jbe
ljmp
xor
inc
push
mov
and
adc
test
and
cmc
dec
mov
add
add
popa
loop
xchg
sbb
lea
mov
ficomps
cmpb
mov
adc
bound
add
inc
rclb
xor
xchg
add
mov
mov
cmp
pop
aad
sti
stos
fs
add
xchg
lock
adc
dec
mov
pusha
xchg
push
add
jno
and
mov
cmpsl
and
lods
add
and
xor
xchg
or
lret
in
outsb
inc
out
rolb
stos
add
mov
cwtl
rolb
rcrb
jo
lds
cwtl
in
cltd
and
xchg
cld
add
jnp
mov
dec
sahf
cmp
push
cmp
call
mov
xor
cmp
leave
stc
jae
dec
mov
shrl
hlt
pop
xlat
scas
add
cwtl
inc
mov
pop
jnp
mov
lcall
jg
add
add
xchg
mov
cs
in
pop
dec
dec
xor
repnz
mov
clc
adc
cmpsb
xchg
in
flds
add
dec
and
adc
test
add
mov
pop
add
pop
dec
mov
aad
loop
lret
mov
std
mov
fldl
add
movsl
lds
clc
push
add
fbld
pusha
cmp
xor
and
aaa
adcb
sti
ds
and
addb
jne
adc
cmp
pusha
add
push
popf
pop
lods
rolb
call
loope
popa
sub
mov
je
and
arpl
dec
cmp
and
das
add
adc
int
fbld
push
fs
cmp
in
in
mov
testl
cmp
xlat
adc
or
stc
or
fwait
popl
jl
out
inc
inc
js
mov
inc
push
inc
addr16
clc
repnz
or
sets
add
pop
and
or
rcl
and
sbb
cmpsl
clc
rcll
or
or
xor
dec
shlb
jo
or
out
dec
add
push
adc
push
shr
cmp
or
add
loope
incl
ficompl
and
arpl
enter
fs
adc
bound
and
fdivrl
sub
jecxz
mov
cli
inc
push
push
pop
rcrb
adc
mov
movsb
out
mov
call
cmp
push
cli
cmp
imul
push
bound
ss
push
popf
xchg
push
les
out
xor
stos
ljmp
aad
mov
lret
adcl
jb
or
sub
lods
xchg
mov
into
push
fdivs
xor
mov
aam
add
cmpsb
dec
bound
jecxz
nop
js
mov
adc
fildl
inc
sub
sub
cmp
repz
roll
lea
cwtl
stc
add
or
dec
cmp
dec
stos
cmc
ror
movsl
pop
inc
shlb
xchg
pop
and
insl
lret
jp
cld
in
std
mov
inc
mov
pop
add
push
push
xchg
lret
aam
fs
mov
cmpsb
fstp
js
or
mov
mov
mov
or
dec
add
adc
pop
sbb
pusha
imul
sbb
add
xchg
push
xchg
xchg
dec
add
sbb
das
inc
ds
movsb
lcall
and
add
mov
rol
add
out
xorb
leave
adc
aaa
sub
in
jae
mov
dec
or
mov
iret
mov
rolb
incl
pop
and
mov
cmp
mov
aaa
mov
mov
inc
add
add
push
mov
pusha
icebp
sti
and
dec
cmp
int3
push
inc
in
add
dec
cmpsb
addb
jne
rcll
or
add
movsb
aaa
rcll
dec
jno
in
or
addl
mov
ret
js
fldt
shlb
ja
inc
in
mov
pop
sbb
add
sbb
dec
push
fldl
mov
adc
jmp
pushf
and
fisubrl
mov
hlt
inc
add
insl
or
adc
xchg
push
add
push
cmp
mov
mov
lods
insl
adc
xorl
push
scas
xchg
rorl
mov
mov
mov
dec
xchg
add
push
dec
fidivrs
xor
insl
add
cs
in
jb
add
ja
cmp
testl
xchg
mov
xor
add
cmp
cli
add
inc
addr16
dec
daa
jecxz
mov
adcb
sti
cmp
jb
shrb
sbb
cltd
add
jecxz
sub
int
pop
cld
sub
jns
or
dec
in
jg
or
fsub
leave
movsb
dec
pop
in
popf
or
pop
call
fsubs
lahf
setle
xchg
xor
inc
add
add
mov
mov
push
fldl
jb
sbb
rorl
jnp
mov
xchg
in
xor
sarl
xchg
das
adc
clc
sub
cmc
call
cmp
xchg
push
and
cmp
stos
test
lods
cmp
cwtl
fsts
stc
loope
cmp
nop
pop
jns
cmp
cmpb
popl
lret
push
add
cmp
rcrl
mov
fbld
stos
out
add
mov
jae
pop
or
sub
dec
mov
lock
push
pop
jp
mov
inc
add
out
fisubl
addb
adc
repnz
push
ja
add
or
fadds
inc
pusha
mov
add
push
repnz
pop
pop
pop
fcmovu
adc
fstpt
pop
add
data16
pop
xchg
dec
pop
sub
pop
pop
xchg
jmp
add
enter
lea
xchg
add
mov
insb
push
dec
jbe
psubw
dec
arpl
loopne
lods
stos
sbb
add
push
or
add
ffree
ja
out
testb
dec
and
push
dec
xchg
clc
dec
lock
pop
adc
or
mov
mov
xor
add
fistps
mov
xchg
pop
nop
lock
sbb
imul
dec
sahf
add
jns
mull
mov
xchg
sub
add
push
gs
cmp
ret
loop
cltd
push
das
imul
push
mov
add
mov
lods
imul
jo
mov
add
inc
xchg
sub
test
xor
jno
insl
notl
ja
pop
push
pop
inc
lods
pop
add
lock
sub
mov
inc
pop
push
add
ret
and
je
dec
cmp
xor
je
add
test
mov
aaa
ljmp
jg
test
in
sub
addb
add
outsb
xchg
mov
adc
mov
lcall
and
and
cli
mov
pop
xor
mov
insb
lock
test
add
outsb
movsb
push
daa
and
xchg
pop
push
stos
or
mov
andb
daa
jmp
push
icebp
jne
stos
adcb
shrb
mov
dec
dec
into
mov
cmp
inc
xchg
lock
and
jle
test
jnp
mov
cmp
sub
adc
or
hlt
add
push
mov
xor
hlt
or
jnp
add
push
test
data16
push
add
in
cmp
adc
adc
aad
pop
test
clc
loopne
popf
pusha
sbb
sbb
sbb
iret
cmp
shlb
jbe
je
xor
cmpsl
add
pop
negl
sbb
xor
fcmovnu
lock
mov
xor
gs
and
insl
sbb
into
sub
je
and
add
sbb
and
inc
add
sti
lcall
adc
cmc
loopne
cwtl
pop
and
pop
out
inc
jge
lea
sbb
icebp
sahf
and
dec
xorl
fbld
aas
mov
add
sbb
test
jo
mov
pop
pusha
in
cmp
js
add
dec
adc
int3
or
lahf
das
cmp
xchg
xor
fdivs
cld
push
add
add
js
or
or
mov
add
pop
rcrl
xor
add
adc
loope
movsl
std
add
inc
lcall
scas
lret
push
cmp
jb
movb
or
push
sbb
mov
dec
pop
test
test
add
jecxz
aas
int
add
lahf
lret
fdivl
imul
les
arpl
add
int
fsubs
sbb
mov
rorb
pop
xor
je
mov
movsl
inc
shrl
xor
outsl
aam
fsubs
ret
ficompl
mov
fldcw
add
stos
stc
lods
dec
inc
and
add
cmp
lock
adc
and
mov
push
add
icebp
jge
lea
xor
adcl
inc
sub
mov
stos
xor
inc
movsl
sbb
mov
sbb
sub
xchg
das
fdiv
testl
dec
mov
outsl
loope
jecxz
mov
pop
add
les
add
mov
cmp
mov
mov
adc
mov
adc
loope
add
ret
fistl
xor
rorb
pushf
and
in
pop
add
sbb
in
adcl
xor
xchg
sub
add
mov
push
ljmp
repnz
adc
add
sbb
xchg
cld
rorb
mov
sbbl
xchg
or
xor
lahf
add
mov
sub
js
mov
add
mov
add
dec
ret
add
adc
add
jmp
ss
js
add
aaa
loope
pop
jecxz
add
imul
test
bound
add
cmp
xchg
add
into
in
xchg
add
daa
pop
xor
add
hlt
lahf
adc
xchg
jne
sub
testl
leave
or
sahf
pop
mov
xchg
sahf
mov
adc
jno
mov
popa
and
pushf
xchg
add
xor
in
icebp
lock
mov
fiadds
add
data16
lret
add
imull
sub
lods
dec
push
lds
call
push
xor
xlat
loopne
add
outsl
arpl
add
dec
aam
inc
jno
jo
sub
xchg
mov
mov
leave
push
xchg
pop
fidivl
scas
add
std
adc
push
add
insb
inc
push
add
fld
pop
jl
sub
repz
and
ds
add
inc
imulb
pop
lods
add
into
xorl
dec
add
fwait
xchg
dec
rcll
add
inc
and
sub
ret
test
add
into
pop
xchg
add
or
faddl
dec
adc
mov
jg
lret
inc
add
fnstcw
pop
ss
rcrb
sub
sarl
cs
sub
mov
jle
add
pop
faddl
sub
pop
out
jp
lods
ss
call
dec
lcall
cmp
mov
out
add
push
insl
and
pop
xchg
dec
sub
add
test
mov
mov
cmp
adc
xlat
fdivs
out
sarb
andl
pop
sbb
dec
and
dec
lret
push
pop
out
sbbl
lock
add
or
arpl
inc
or
mov
add
add
addr16
lea
adc
outsb
cmp
sub
dec
cs
adc
mov
pop
lahf
inc
mov
add
enter
and
sbb
loop
pop
jns
scas
aaa
popa
mov
pop
or
mov
lock
aas
pop
call
xchg
fld
les
fadds
mov
scas
xchg
mov
gs
add
xor
cmp
pop
into
and
and
pop
ljmp
rcr
ret
add
pusha
in
int3
pop
cld
add
js
stos
xor
fnstsw
pusha
xchg
imul
jecxz
ss
add
and
pop
adc
loop
inc
out
enter
das
add
scas
fwait
xchg
out
adc
add
add
loop
adc
shll
and
or
lcall
sub
loopne
jns
xor
xchg
lcall
jae
pusha
addb
jecxz
sbb
and
pop
add
fstl
push
push
pushf
addr16
stos
mov
leave
fwait
add
negb
add
ret
lret
in
mov
cmpb
and
mov
frstor
xor
jle
loopne
loop
jecxz
add
xlat
pop
add
pop
jge
pop
sbb
dec
push
fisubrs
mov
popl
add
repz
leave
into
dec
jl
and
add
lods
pop
inc
addb
xor
push
sarb
test
dec
test
xchg
movsl
bound
mov
push
js
icebp
pop
inc
mov
mov
xchg
add
stos
dec
clc
insl
add
fisubrs
adc
int
es
es
pop
jecxz
xor
add
jo
jmp
pop
mov
loopne
pusha
inc
pusha
std
jp
sub
nop
loop
jns
mov
add
js
add
cmpsl
add
push
es
or
jg
aam
imull
jb
pop
dec
ret
in
subb
push
sahf
add
pusha
lahf
mov
mov
inc
jp
aas
add
addl
cwtl
inc
pusha
pop
loope
push
sub
pushf
pop
pop
iret
jl
sbb
scas
pusha
mov
pop
push
movsl
pop
cmp
xchg
and
fldt
push
add
inc
xor
lock
fmull
fdivr
je
xor
jmp
jbe
sbb
inc
sbb
mov
cmp
push
loopne
imul
mov
jp
add
rorb
lcall
sub
enter
mov
inc
enter
pop
jmp
incb
jg
add
ljmp
adc
sub
hlt
ret
dec
flds
cmpsb
fidivrs
mov
shrb
cmp
jmp
add
mov
xlat
hlt
push
pop
pop
push
add
icebp
sub
cmpb
sbb
add
ljmp
fiadds
orb
xchg
xor
mov
sbbb
push
push
dec
dec
or
push
push
inc
xor
adc
in
push
add
sub
add
ljmp
lcall
and
add
out
inc
in
lods
adc
push
bound
in
add
add
add
pop
adc
jae
movsl
test
loop
add
jnp
ffreep
sarb
push
fisubl
jl
or
cmp
pop
xchg
sbb
shl
gs
insl
push
or
idiv
pop
movsb
add
lret
in
cmp
sbb
sahf
popf
daa
adc
in
cmp
movsl
add
in
xchg
xor
xchg
js
jae
mov
xchg
mov
les
and
cmp
sbb
add
cmp
jno
or
fdivrl
call
or
aam
shl
pop
jge
add
add
inc
inc
fs
mov
xchg
xor
aam
add
pop
adc
jmp
mov
xchg
arpl
mov
addb
and
add
pop
jnp
pop
dec
cmp
arpl
ljmp
lea
push
add
dec
push
and
ret
test
mov
into
mov
add
inc
pop
aaa
add
push
lods
dec
loopne
jnp
add
sbb
adc
enter
sub
inc
loopne
push
addr16
test
sub
or
outsl
jns
add
fs
pop
cmp
cmp
mov
cmp
pop
or
loope
shlb
loop
adc
add
and
and
cmp
cmp
pop
insb
fs
push
and
add
jbe
movb
scas
add
bound
call
add
cmpsl
cwtl
mov
add
mov
xchg
add
xchg
add
mov
adc
xchg
adc
and
xor
add
jno
cmp
es
insl
add
or
push
add
movsl
fst
and
jno
aad
out
jbe
adc
add
inc
aas
and
sarl
sub
sbb
nop
lods
fwait
test
hlt
jae
stos
mov
pop
je
fsubp
repz
loopne
aaa
lds
jne
mov
stos
call
cltd
cmp
pop
pop
aas
sbb
test
add
mov
jl
cmp
and
and
sbb
cld
pop
sbbb
arpl
xor
push
sbb
in
pop
adc
test
jo
les
dec
mov
call
mov
lea
cmpsb
pop
mov
jl
sub
mov
outsb
ljmp
add
cmc
movsl
sub
and
fimull
pop
add
mov
ja
push
adc
or
stos
in
add
mov
in
fisttpll
ljmp
cmp
inc
dec
xchg
mov
imul
lods
or
test
sub
rolb
popl
add
or
inc
nop
push
loop
push
shlb
out
xor
pushf
sbb
jbe
mov
add
sbb
cmp
ljmp
jno
or
std
cmpsl
addb
xlat
sbb
lock
adc
dec
lcall
push
mov
lds
push
add
hlt
push
scas
jg
call
test
add
cmp
jge
xor
movsl
inc
inc
xor
mov
shlb
adc
fs
or
hlt
mov
mov
dec
add
jne
xchg
pop
pop
aad
jmp
cld
loop
mov
stos
sbb
in
hlt
add
inc
push
push
inc
jg
dec
loope
shlb
xorb
pop
xlat
xchg
sbb
pushf
pop
pop
mov
jnp
mov
add
adc
jmp
fnstcw
push
mov
xchg
adc
xor
rcrl
pop
push
adcb
pop
adc
out
mov
pop
mov
cwtl
inc
loopne
add
rorl
xchg
movsl
push
orb
cltd
add
iret
inc
inc
mov
cmp
into
stos
out
mov
dec
jb
push
xchg
xor
ljmp
mov
sub
outsb
leave
sub
sbb
inc
jl
hlt
adc
xor
mov
stc
orb
pop
mov
fwait
push
push
adc
push
dec
sahf
daa
jns
andb
xchg
sbb
mov
and
mov
push
and
sub
cmovl
mov
dec
repnz
inc
dec
imul
push
test
mov
xchg
add
push
popf
dec
repz
lret
and
inc
jns
ljmp
jmp
ret
push
xor
jmp
pop
add
imul
fs
pop
or
jb
xlat
inc
mov
in
sbbb
push
imul
jbe
dec
add
inc
xchg
sbb
inc
cwtl
popa
lret
sub
cwtl
mov
frstor
add
cwtl
in
mov
sbb
in
sbbb
das
je
fs
sahf
sub
pusha
loop
cmp
add
dec
push
inc
test
jp
push
daa
imul
add
and
push
iret
xorb
cmp
pop
mov
scas
jle
addr16
shl
xchg
add
call
add
pusha
mov
insb
test
add
lods
xor
add
rorl
pop
leave
dec
add
fistpll
add
test
in
pop
mov
inc
mov
add
dec
js
mov
push
aas
into
or
lock
add
fs
sub
cmp
adc
pusha
mov
roll
push
adc
push
adc
add
sub
fs
cmp
jae
push
mov
cld
and
pop
mov
inc
movsl
test
aad
in
dec
shufps
pop
test
jp
imul
mov
or
dec
sub
pop
add
fsub
enter
imul
ret
dec
add
outsl
leave
stos
push
xchg
adc
xlat
fwait
add
arpl
pusha
mov
cmc
add
mov
addb
ret
push
loopne
cmp
mov
rolb
hlt
cmp
inc
push
sbb
pop
stc
push
mov
lock
jbe
push
cmpsb
sbbl
repz
out
mov
cmp
incb
add
not
mov
popf
xchg
mov
add
insb
pop
push
pop
pushf
mov
pop
jae
add
jecxz
pop
int3
repz
mov
push
cli
popf
xchg
minps
add
pop
push
push
add
xlat
pop
cmp
call
test
in
jp
pop
xchg
xor
shll
dec
push
icebp
imul
cmp
mov
mov
mov
xchg
loopne
movsl
adc
cmovle
rorl
pusha
clc
jge
adc
flds
mov
mov
movsl
jmp
pop
mov
hlt
push
cmp
xlat
add
jge
ret
pop
add
jne
imul
and
xchg
or
in
mov
dec
xor
insb
add
mov
pusha
outsb
scas
sbb
test
cs
sbb
dec
mov
mov
rclb
xlat
mov
rolb
and
imul
inc
in
push
add
sar
in
cmpsb
push
add
sbb
aad
add
lret
fs
push
arpl
rcrb
int3
add
push
mov
mov
add
fwait
add
inc
push
push
lods
and
add
cmp
sbb
jo
sbbl
pop
out
push
cwtl
insb
rol
jns
lock
add
outsb
adc
rcrb
jne
lcall
xchg
pop
sbb
dec
int
in
divl
enter
arpl
dec
sub
cld
test
pop
inc
push
xor
add
filds
mov
xchg
pop
les
faddl
dec
mov
add
ficoml
add
xor
xchg
leave
orb
mov
pop
fidivrs
pop
xchg
add
mov
jp
mov
jne
test
pop
cwtl
add
pop
sub
add
adc
pop
pop
in
movsl
adc
shlb
roll
inc
pop
in
dec
or
add
dec
es
add
jmp
pop
out
push
mov
and
jne
add
sub
into
enter
xor
mov
je
aam
jnp
xlat
sub
dec
fcoml
add
out
jmp
or
js
sub
cmp
xchg
cmp
cmp
lcall
daa
push
add
dec
or
loopne
arpl
push
push
out
loopne
in
sub
mov
jae
mov
pop
shlb
inc
adc
add
cmpsb
push
add
imul
call
inc
push
movsb
mov
add
add
roll
daa
pop
xlat
add
fmull
jecxz
and
inc
insb
add
call
cmc
push
mov
or
push
pop
int3
test
jp
add
jecxz
add
add
fisttpl
jle
adc
pop
mov
hlt
and
pop
lret
paddb
jmp
add
out
dec
pop
dec
jecxz
add
adc
push
sbb
or
add
adc
or
test
add
inc
aas
mov
pop
fisubl
pop
inc
out
mov
int
xchg
mov
inc
mov
rorb
ret
cltd
sub
enter
fstpl
stos
or
mov
lret
jno
aaa
shl
and
outsl
sbb
jo
shl
jge
adc
cwtl
add
mov
push
mov
dec
and
leave
xchg
xchg
adc
shrb
out
push
clc
or
mov
hlt
xchg
scas
cltd
jne
sbb
jo
cmp
sub
nop
add
ds
mov
les
adc
push
bound
jle
mov
out
dec
add
jge
test
jns
cwtl
rolb
fidivs
or
nop
adc
xor
push
or
fidivs
mov
push
sub
xchg
add
scas
mov
clc
pusha
loopne
insb
mov
xchg
inc
add
lahf
xor
es
add
mov
or
push
rcl
xchg
add
xchg
into
inc
loop
mov
hlt
movsl
add
mov
add
cmp
add
lret
ret
sbb
iret
leave
xchg
adc
and
aam
pop
push
mov
add
or
movsl
pop
rolb
es
imul
pushf
lret
gs
nop
xlat
cmp
sbb
xchg
adc
orb
add
mov
or
out
sub
dec
mov
add
xchg
or
push
test
fwait
cmpsl
add
popa
int3
and
mov
data16
sub
pop
inc
or
add
sub
sbb
mov
add
jae
mov
loop
cmp
aad
inc
aam
inc
cs
xchg
sbb
andl
rol
outsb
mov
add
pop
adc
mov
hlt
inc
and
int3
sbb
stos
add
xchg
mov
or
sarb
jo
movsl
pop
dec
not
sbb
ret
add
push
ss
mov
fs
arpl
cmp
or
mov
or
lea
in
adc
sarl
and
mov
push
ret
add
push
int3
adc
jp
mov
syscall
mov
ds
jbe
into
jmp
pop
or
nop
add
dec
dec
mov
lahf
inc
xchg
jp
pusha
pop
sub
mov
mov
adc
inc
mov
mov
inc
cli
push
pop
pushf
pop
jb
add
fldl
das
rolb
and
into
push
pop
pop
inc
movsl
ror
sbb
jne
cmp
pop
incl
shl
sub
push
enter
movsl
pop
fdivl
addb
add
mov
add
mov
adc
or
add
lods
inc
stos
std
mov
ret
cld
sbb
pop
cs
int
add
mov
inc
add
addl
add
pop
jbe
ret
sbb
mov
cld
dec
add
pop
lret
popa
mov
add
jp
stos
lcall
enter
mov
adc
out
cwtl
add
mov
stc
sub
jle
cmpsb
loopne
pop
fimull
jp
or
and
incb
aam
leave
fs
xlat
dec
jns
add
and
not
dec
clc
inc
gs
imul
mov
cmp
cld
ss
add
pushf
hlt
add
xor
push
stos
xor
and
mov
or
fdivp
enter
xchg
ljmp
aam
sahf
or
add
add
aad
mov
mov
xor
dec
add
into
loop
push
jo
add
mov
push
add
std
xchg
shrl
and
cmc
add
cmp
add
stos
mov
insb
mov
and
push
pop
dec
out
add
push
incb
lods
adc
xchg
sub
xchg
add
fdivs
xchg
and
jg
insb
lret
jl
and
int3
add
mov
das
iret
cmp
nop
add
adc
add
std
add
fldenv
inc
nop
xchg
popf
sbb
loopne
daa
loop
add
push
xor
test
ja
stos
pop
clc
add
jb
shlb
leave
xlat
popa
mov
enter
sbb
sub
insl
mov
shll
loope
jp
and
xchg
mov
adc
inc
add
jnp
fdivrp
add
xchg
mov
lahf
or
jp
pop
mov
minps
int3
sti
in
out
outsl
rol
ret
push
out
jmp
push
mov
push
dec
mov
inc
in
sub
mov
sbb
sbb
adc
out
dec
loop
sub
xchg
inc
add
sbb
rclb
bound
repz
inc
sub
lret
adcb
add
sahf
dec
and
pushf
jns
cmp
fstps
jbe
in
test
cmpsl
or
xor
xchg
ljmp
add
pop
inc
jle
dec
sbbb
in
add
push
cmpsl
movl
xchg
in
scas
add
jbe
in
mov
add
lods
add
sbb
add
sarb
or
push
loop
aas
push
jno,pn
repnz
fsubs
stc
inc
add
cwtl
test
add
nop
mov
sti
and
test
adc
xor
fsubl
repz
mov
xchg
inc
sub
cltd
add
push
aaa
movsb
in
inc
mov
push
mov
fadds
pop
inc
add
in
ljmp
int
fadd
incl
jmp
icebp
sbb
in
sbb
sbbb
and
bound
gs
das
bound
add
pop
sti
sub
lods
out
mov
adcl
cmp
pop
and
cmp
arpl
jae
inc
in
pusha
and
dec
ret
hlt
or
dec
fwait
scas
or
addr16
loopne
add
call
ret
jmp
lock
pop
cmp
insb
jne
inc
inc
lret
adc
scas
xor
mov
xor
inc
sub
fcompl
cmc
fwait
js
rsqrtps
pop
hlt
insb
cmp
push
les
xor
add
jmp
sub
add
or
sbb
aas
adcl
mov
push
mov
pushf
nop
ret
add
mov
pop
stc
sbb
add
negb
xor
out
es
iret
loop,pn
push
sbb
mov
mov
xor
sbb
sbb
loopne
push
pushfw
addl
mov
stos
or
imul
add
lds
adc
stc
push
pop
fwait
jecxz
nop
xchg
dec
in
and
in
loop
sbb
adc
mov
jbe
jge
add
mov
loop
cltd
hlt
daa
pop
pop
loop
mov
mov
xor
dec
pop
dec
mov
add
sbb
jp
xchg
fnsave
add
sbb
jne
sbb
shll
mov
add
and
xchg
insb
adcb
pop
ds
push
pop
test
mov
mov
inc
add
inc
and
add
push
jae
dec
sarl
jns
fwait
inc
mov
push
xor
outsl
and
push
aam
push
add
fcmovb
stos
push
iret
mov
and
outsb
testb
push
and
mov
int3
xlat
mov
enter
dec
js
rcl
mov
jae
push
or
xchg
xchg
insl
xchg
add
push
sbb
andb
cmp
sbb
sbb
sbb
out
out
inc
stc
dec
inc
pushf
loopne
or
in
gs
fsubs
out
add
pop
stos
mov
mov
pop
pop
fsts
jb
jns
push
sbb
adc
sbbb
loopne
and
and
add
adc
loop
jle
mov
mov
mov
mov
data16
cwtl
sbb
movsb
mov
pop
inc
sub
xchg
imul
xor
int3
inc
jecxz
adc
ja
pushf
scas
push
hlt
ret
xor
or
push
xor
pop
sub
lcall
mov
shlb
or
loop
test
cmp
clc
pop
jb
imul
and
stc
adc
xadd
sbb
inc
ja
inc
mov
add
iret
cmp
mov
and
or
xor
fists
sbb
pop
dec
sahf
loop
mov
call
add
aam
cmc
add
repz
mov
cmp
add
lret
mov
push
out
movsb
adc
mov
xorb
cmp
lods
lcall
jp
repnz
enter
xor
jbe
fucomp
aas
jne
add
mov
xchg
add
into
or
iret
xchg
add
test
xchg
jns
repz
or
fsincos
cwtl
dec
jae
std
loopne
je
pusha
jp
ret
flds
shlb
hlt
push
mov
mov
add
adc
and
inc
mov
into
inc
or
mov
or
xchg
shl
nop
call
jecxz
fstpt
sbb
sub
adc
inc
or
shl
int
fisttpll
add
and
pushl
nop
fstl
jo
add
xor
sahf
adc
insl
js
stos
fistpll
lods
loopne
add
aam
out
pop
lods
and
movsb
bnd
jb
arpl
cmpsb
mov
pop
inc
jge
pop
stc
mov
mov
nop
inc
mov
mov
movb
cwtl
popa
call
add
loope
mov
add
xchg
outsb
sub
mov
negb
outsl
push
pop
les
add
cli
out
stos
or
call
jle
ret
aas
ret
add
pop
inc
or
push
gs
or
arpl
mov
push
out
add
fdivs
fdivl
add
es
add
lods
mov
fmuls
cmp
jns
add
sub
popa
adc
jbe
leave
lods
shrb
xchg
mov
mov
ja
push
pop
test
jno
dec
cld
fsubrs
outsb
rclb
mov
clc
daa
cli
xchg
idiv
in
xchg
jg
cs
jae
imulb
testb
mov
test
ja
jmp
cmp
fildl
loope
mov
in
in
rorb
sbb
jno
ljmp
dec
imulb
in
call
mov
sbb
insl
and
pop
sbb
push
clc
out
rcl
push
popa
sbb
add
lock
cmpsl
pusha
ret
jecxz
or
push
add
adc
sbb
cmp
aad
sti
mov
adc
lahf
add
fldlg2
test
add
mov
int
pusha
sbb
repnz
dec
out
inc
add
and
stos
pusha
add
mov
movsb
sbb
inc
rolb
and
into
test
add
push
rcl
notb
lea
iret
add
scas
and
or
cltd
rorl
int3
hlt
dec
leave
add
in
jns
cmp
call
xorb
daa
shll
icebp
dec
xor
dec
cld
add
std
insl
loopne
sbb
xchg
cld
imul
out
sbb
loope
js
adc
push
add
testb
rolb
jp
adc
inc
lods
add
cmp
lret
xor
dec
xchg
push
pop
sbb
inc
cmp
out
mov
add
xlat
nop
cli
inc
sbb
rolb
aaa
sub
ret
inc
xor
repnz
out
cld
dec
in
or
in
imul
sub
sbb
movsb
stc
les
test
outsl
ret
adc
fwait
inc
xor
rorl
or
fistl
test
mov
pop
inc
std
clc
aam
jb
xor
pop
push
in
pop
pushf
adc
dec
popa
shlb
ja
pop
sbb
jno
and
ja
or
adc
or
xor
add
fs
or
nop
lods
xchg
aas
pop
add
and
mov
mov
or
mov
sbb
daa
xor
sub
dec
and
mov
add
stos
add
jbe
out
roll
addr16
cmp
jnp
addl
mov
orb
push
or
jecxz
dec
lock
loopnew
cs
or
inc
cwtl
and
lret
sbb
lret
test
cld
push
adc
jno
add
fisubl
jp
movsb
dec
xor
sti
jmp
mov
add
call
add
insb
dec
js
or
mov
add
cld
push
push
sub
addb
lret
stos
out
xchg
js
lcall
lock
lods
rolb
aam
sbb
jp
fs
sarb
sub
test
xorb
cs
xchg
push
add
dec
dec
mov
rcrb
jg
add
loope
sarl
addb
addb
sub
call
jp
rol
and
xchg
imul
jno
mov
hlt
inc
cmpsl
lock
fiaddl
daa
push
xor
cmp
inc
lods
pop
pop
das
repnz
push
data16
lds
dec
notl
pop
xchg
inc
inc
cld
stc
mov
imul
jge
cmpsb
and
cmp
mov
out
jecxz
arpl
push
lret
adc
xor
pop
sub
and
add
xor
cmc
jl
fsubrs
imul
and
xchg
push
pop
lret
ret
sub
shr
mov
add
push
mov
cmp
lret
inc
daa
mov
les
lods
xor
xchg
push
outsb
test
adc
jge
rolb
inc
add
or
pop
shlb
pop
into
icebp
invlpg
scas
aas
lret
call
mov
pop
fisubl
jo
aad
mov
in
push
outsb
rcrb
add
add
push
inc
js
jle
ror
adc
pop
xchg
add
jecxz
inc
adc
js
push
pop
pop
jns
xchg
or
push
and
mov
jae
add
pop
or
xor
mov
rcrb
outsb
jo
btr
loope
mov
loope
inc
mov
xlat
adc
jo
lea
cmpsb
outsl
and
fcoml
ret
push
call
addr16
mov
lods
push
pop
pop
ret
test
xor
jo
mov
mov
out
lods
adc
je
and
pusha
add
subl
in
test
out
and
arpl
adc
popf
test
xchg
mov
push
out
ja
or
adc
xchg
pop
lret
cltd
push
jae
mov
cmp
test
aam
outsl
add
pop
sbb
cld
fdivrs
xor
inc
cli
jnp
inc
leave
lcall
ljmp
sbb
fisttpll
mov
loope
jmp
mov
inc
push
sbb
test
and
les
aam
sub
loope
xchg
jno
adc
lret
adc
repz
add
add
sbb
or
lret
sbb
incb
sub
in
push
popf
or
adc
je
andb
xor
sub
add
xor
stc
adc
pop
mov
add
sbb
loope
sbb
xchg
cld
and
dec
ret
jl
inc
insb
shrb
stc
or
inc
and
dec
mov
push
xchg
popa
fistl
and
inc
jle
dec
sbb
decb
add
jmp
pushf
in
push
setnp
in
bound
add
lret
iret
shrl
xchg
or
add
jbe
sub
pusha
mov
outsb
dec
data16
sub
push
lahf
aam
orb
mov
adc
dec
addr16
or
int3
pop
dec
add
icebp
pop
enter
cld
add
jecxz
dec
pop
movsl
iret
into
inc
hlt
call
dec
and
addb
mov
add
sahf
and
int
scas
mov
or
scas
jecxz
push
ret
pop
loope
jle
dec
int
in
jne
call
cltd
xor
add
mov
mov
mov
xor
pushf
loope
mov
pop
inc
rcrb
in
inc
pop
call
pop
adc
fmull
or
and
int
test
aam
or
clc
adc
lret
rolb
push
adc
out
or
test
push
adc
stos
shll
xchg
cmp
js
add
mov
push
and
adc
adc
xlat
xchg
and
dec
sbb
jb
mov
pop
mov
sub
inc
push
loope
inc
int3
incb
jnp
loopne
aam
jno
enter
add
adc
pop
data16
or
cld
popa
push
sbb
fs
leave
xchg
cmpl
pushf
xchg
push
mov
fmuls
pop
je
push
sbb
add
mov
fdivl
aam
pop
mov
push
rclb
jl
fmull
mov
lock
mov
adc
adc
and
adc
scas
mov
test
cld
int
pop
int3
adc
rolb
movsl
enter
xchg
dec
mov
ret
gs
inc
mov
pusha
test
fbld
lret
sub
lds
jne
add
xchg
jg
push
int
inc
ja
or
cld
push
arpl
xchg
mov
test
dec
sbb
shl
add
int
imul
jno
cs
gs
add
add
mov
pop
add
pop
je
add
or
std
xchg
scas
and
iret
addr16
daa
lock
xchg
aam
mov
movsb
mov
cmp
cmpsl
jle
dec
xchg
int
dec
adc
bound
dec
loopne
aam
pusha
iret
js
into
inc
xchg
or
enter
push
fstl
sbb
dec
dec
es
and
mov
das
movsb
sub
sahf
adc
inc
cld
fstpl
rcrb
cltd
sub
add
std
nop
jae
add
loopne
mov
dec
inc
jno
push
popa
cmpb
insb
cld
movlps
enter
or
roll
adc
stos
rorl
je
mov
loope
sub
and
addr16
leave
ret
xor
cmc
add
shrl
testl
push
add
sbb
subb
fistpl
repz
aaa
fidivrs
lods
xchg
dec
dec
jns
inc
lods
mov
sbb
adc
sbb
jb
sub
in
xor
xor
mov
stos
sarb
xchg
cmpsb
or
sarb
shll
xchg
mov
or
ret
test
aas
das
movb
adc
add
repnz
lret
fwait
sub
mov
cmp
ds
test
loopne
mov
data16
or
andb
pop
js
add
mov
add
add
sti
push
jp
scas
jbe
cs
adcl
nop
mov
xchg
sub
popf
pcmpeqd
pop
je
loope
push
out
add
inc
cmp
out
ss
int
insl
cld
add
shll
jp
mov
jne
lcall
sarl
inc
cltd
mov
fcoml
jo
hlt
adc
or
jns
cmp
mov
insl
aad
test
push
ljmp
xor
cmp
jg
pusha
aas
cwtl
outsl
dec
clc
add
lcall
mov
aas
xor
add
out
adc
or
inc
loop
add
iret
bound
jb
add
and
lea
in
jl
add
out
movsl
dec
lods
jo
add
mov
clc
jecxz
inc
out
enter
std
jle
add
push
sbb
mov
inc
mov
xchg
add
dec
inc
lea
int3
sub
dec
push
rorl
arpl
pop
mov
test
push
jmp
sub
xchg
add
lcall
pop
add
aam
xchg
movsl
js
outsl
add
loop
adcl
fwait
push
dec
test
fadd
andl
xchg
idivl
mov
in
cmpsl
int
bound
andb
add
adc
call
fsubp
ret
sbb
icebp
add
lret
andb
andb
pushf
jg
add
and
sbb
add
push
mull
in
adcb
add
clc
sbb
mov
mov
arpl
jecxz
jp
sub
call
clc
jge
roll
or
push
shrl
ret
jne
push
std
push
scas
fsubrl
call
rcll
cmc
bound
cmp
mov
add
int
sub
cmpsl
fcomip
lock
add
dec
imul
mov
scas
outsb
pop
adc
cwtl
xor
mov
pushf
push
iret
hlt
lods
add
mov
jae
add
adc
mov
hlt
subb
sbb
add
mov
add
jle
loopne
out
imul
jbe
cmc
pop
push
xchg
mov
enter
add
xchg
insb
add
fisttpll
out
mov
add
jnp
jmp
sub
adc
and
cmp
ret
cmp
sbb
sbb
add
adc
cvtps2pi
push
mov
inc
mov
xchg
aam
mov
bound
pusha
out
fimull
or
int
jne
add
jmp
cld
fildl
es
xor
les
inc
jle
sbb
insb
pop
into
shrb
cmp
mov
inc
mov
add
into
das
int3
add
and
cmp
inc
ficompl
orb
jp
mov
filds
scas
mov
add
add
jo
repz
scas
pop
mov
cltd
lcall
add
jae
mov
cmp
push
outsl
adc
push
sbb
add
in
imul
je
fcmovu
pop
pop
sub
inc
dec
pop
gs
test
mov
mov
xchg
mov
addl
xchg
test
mov
and
lock
cmp
or
std
fisubrs
in
sbb
mov
lds
add
and
repnz
fsubs
lea
mov
push
out
jne
ja
and
jae
add
mov
call
aaa
mov
fdivrl
xor
add
lock
mov
add
lcall
call
cmp
scas
icebp
movsl
inc
push
stos
pushf
jl
cmc
adc
pop
inc
outsb
sub
lods
jle
cmc
jo
call
repnz
daa
adc
inc
add
lods
push
js
add
mov
xchg
rcll
mov
sbb
add
or
push
dec
adc
jl
add
aam
pop
mov
mov
pop
pop
xor
pop
mov
jmp
loope
mov
or
dec
in
push
out
clc
jo
fdivrs
add
fisubrl
jae
cmpsl
pushf
jecxz
push
je
mov
dec
ja
out
stos
out
cwtl
dec
test
int
rol
lret
clc
jbe
jg
add
movl
add
xor
mov
add
sbb
daa
push
iret
mov
mov
mov
or
jmp
out
popf
rcl
ds
add
pop
outsb
and
inc
fldt
sbb
leave
in
push
dec
xchg
add
lds
ss
icebp
jp
or
add
fcomps
or
fisubrs
push
add
adc
lock
mov
and
andb
loopne
jg
pusha
pop
mov
jns
pop
stos
jno
add
pop
sbb
pushf
inc
xor
add
pop
xchg
leave
inc
sbb
sti
out
popf
dec
push
aad
xchg
mov
inc
pop
sti
mov
lgs
jl
add
and
pop
and
mov
add
fcompl
xor
decb
adc
data16
add
fs
test
xchg
fwait
add
movsb
push
call
jp
out
shl
sub
int3
cmp
inc
js
mov
imull
lea
add
xlat
rcrb
aas
outsl
mov
jle
push
in
add
daa
in
subl
pop
add
into
test
fcompl
testb
arpl
stc
mov
sarl
cwtl
jl
loope
out
in
sbb
mov
add
push
repnz
xchg
cmp
cld
push
mov
and
clc
jns
xchg
push
sbb
dec
push
das
push
out
add
or
xchg
std
mov
mov
inc
rcrb
shl
pop
add
data16
xor
scas
push
in
enter
fstpl
stc
pusha
mov
or
in
push
add
out
pop
xchg
icebp
inc
inc
lock
enter
pop
adc
xor
add
xor
add
aaa
enter
adc
inc
cmp
test
add
aas
pop
repz
add
loope
mov
push
in
add
stos
add
jb
jnp
xchg
pop
adc
add
sub
addl
ljmp
jge
pop
mov
push
je
pop
fs
cmc
adc
or
sti
mov
mov
loope
mov
pushl
adc
ds
add
pusha
outsl
inc
xchg
adc
fdivrl
add
hlt
xchg
std
xchg
rcrl
addr16
rclb
pusha
lock
clc
push
add
data16
mov
dec
or
or
mov
add
outsb
ja
mov
or
xor
lods
xor
jbe
jge
or
and
add
push
push
sahf
lods
xor
repz
mov
push
ljmp
and
sub
xchg
ja
add
popa
icebp
ret
add
pop
data16
mov
xchg
mov
push
mov
cmp
ss
add
push
gs
sub
call
cwtl
roll
mov
pop
add
sti
xchg
inc
jecxz
xchg
pop
mov
or
test
imul
adc
ja
or
lods
repnz
or
fcomi
popf
and
and
add
push
inc
sbb
add
cmpb
xchg
jne
jae
push
and
xchg
push
loope
icebp
cltd
dec
aas
mov
mov
movsl
fwait
cwtl
ds
jp
lds
pushf
lods
jge
pop
cmc
adc
xchg
xlat
xchg
and
out
add
sub
xchg
cmp
pop
xchg
mov
add
xor
inc
mov
push
loope
testb
std
rcrb
add
mov
dec
ljmp
outsb
add
popa
nop
cmp
out
push
cmpsl
xor
add
push
sbb
addr16
push
outsb
inc
stos
jne
imul
movb
das
pushf
scas
add
ficoms
pop
loopne
jle
loop
pop
mov
cwtl
into
faddp
mov
test
mov
iret
je
xorb
lcall
mov
add
orl
ficomps
lods
test
unpckhps
fdivrl
lcall
add
add
sub
ret
mov
imul
cld
rol
pop
out
pop
xchg
lock
movsl
pop
ja
add
rolb
stos
xchg
add
imul
add
mov
jmp
pop
add
lahf
push
jno
xchg
adc
push
jo
inc
and
sbb
add
xlat
jne
add
xor
lock
push
in
sbb
xchg
lea
push
xchg
cmp
mov
roll
dec
pushl
mov
js
pusha
in
flds
add
nop
out
cmp
dec
aam
out
mov
adc
lock
inc
adc
jmp
arpl
das
fldl
sub
jns
out
addr16
and
insb
hlt
mov
cld
jbe
mov
and
sub
ret
loope
ret
lret
inc
ret
mov
cmp
lds
mov
repz
adc
add
or
xchg
pop
popf
adc
or
xchg
mov
xor
scas
loopne
add
push
mov
pop
push
test
adc
or
xor
add
sbb
cmpsb
push
mov
xchg
aas
pop
inc
add
jmp
jge
inc
rcrl
add
cmp
call
jle
sbb
pusha
movsb
and
rcrb
mov
call
dec
inc
adc
xchg
pop
fadds
and
mov
dec
adc
sub
out
push
outsb
or
jge
or
adc
js
xchg
xchg
inc
jmp
fiaddl
mov
pop
pushf
divps
dec
rcrb
test
add
dec
pop
insl
dec
lret
sarb
xor
inc
movsb
data16
or
mov
add
sbb
stos
popa
pushf
pop
ret
loopne
jle
adc
mov
push
aas
shrd
sbb
push
addl
jae
xchg
pusha
cmp
mov
adc
pop
mov
jle
pusha
push
mulb
add
subl
sbb
mov
add
cmc
loope
xchg
adc
add
jo
xchg
add
f2xm1
mov
cwtl
xor
scas
add
fsubl
and
rcl
mov
in
mov
add
xlat
jae
out
call
sbb
xor
mov
mov
add
pop
and
call
xchg
sbb
sbb
lods
fstl
cltd
or
sbb
mov
pusha
add
sbb
in
mov
add
sub
jns
add
xchg
dec
lcall
add
adc
sub
jns
pop
dec
arpl
pop
mov
test
xor
movlps
jmp
nop
and
or
lea
pushf
pusha
rorb
mov
repnz
push
push
orl
daa
jge
pusha
push
xor
mov
xchg
mov
pop
divb
cmp
pop
sub
ficompl
cwtl
call
shrl
add
movsl
pusha
sub
aas
add
push
push
fdivrs
and
jnp
sbb
mov
ds
test
rol
imul
xor
add
sub
js
call
pop
inc
add
cmp
and
testl
mov
cmp
jg
lahf
je
mov
jo
call
pop
adc
dec
sbb
or
adc
negb
clc
lret
add
sarl
daa
add
dec
jbe
adcl
mov
xchg
push
push
add
mov
enter
test
nop
dec
add
sbb
xchg
cmp
mov
xchg
mov
fsubs
or
mov
and
scas
mov
pop
or
add
jle
hlt
add
movsb
in
push
mov
or
and
inc
popa
mov
add
testb
pushf
cli
in
jle
adc
mov
push
cmp
add
pushf
imul
ss
inc
dec
in
pop
add
fmul
lods
or
jno
incb
and
fcomps
pop
fucomip
cmc
lcall
movsl
andb
lods
daa
pop
sub
mov
or
jle
movsb
mov
rolb
sub
pop
cmpsb
mov
push
mov
push
insb
sahf
jnp
shlb
sub
push
movsb
or
pushf
cmp
fcoms
mov
and
shll
mov
mov
dec
popa
adc
mov
dec
je
add
mov
pusha
mul
inc
int3
xchg
mov
lret
loopne
jb
jnp
cld
enter
cmp
roll
in
enter
icebp
cld
xor
sub
pop
test
ja
ret
mov
push
mov
jmp
ds
push
hlt
add
sub
mov
adc
movsb
or
add
ljmp
xchg
push
mov
sbb
or
mov
push
xchg
xchg
dec
mov
pop
sti
and
sub
and
xchg
sbb
and
lar
popf
mov
aam
inc
fnstsw
or
sbb
dec
mov
jl
push
sbb
leave
adc
add
clc
push
jl
mov
mov
add
rcrb
dec
jle
rsqrtps
mov
stos
or
test
fwait
dec
aam
nop
adc
push
dec
inc
cmp
jb
dec
or
add
push
pop
repnz
xor
inc
or
pop
jnp
into
jge
jns
shr
jb
add
ret
fdivs
gs
inc
mov
rclb
or
les
in
cmp
test
test
lldt
cmp
imull
or
inc
sbb
inc
cmp
lret
mov
xor
push
cmp
divb
std
push
sbb
push
mov
shrb
shlb
loopne
xor
subb
inc
outsb
cwtl
mov
mov
loope
push
pop
lret
jo
movsl
es
insl
pop
sbbb
nop
je
xor
mov
add
stos
jo
adc
leave
add
xor
gs
insl
sub
dec
stos
jae
xchg
enter
mov
mov
clc
push
addb
sti
js
stos
add
int3
outsl
or
shlb
nop
push
subb
jle
mov
shrb
insl
and
pop
add
repz
xchg
test
inc
icebp
xchg
sbb
repnz
bound
leave
pop
loope
sub
xchg
add
test
xor
rcrb
push
and
pop
push
add
jae
adc
fs
repnz
and
jle
cld
rcrb
dec
adc
adc
pusha
add
add
fcmovu
or
mov
adcl
xacquire
push
adc
rcll
loopne
adc
push
mov
outsb
stos
mov
push
inc
int
sbb
jb
or
dec
mov
inc
jno
sbb
mov
dec
icebp
aas
in
pop
xchg
cmp
jmp
add
xor
rolb
jo
aam
xchg
lods
mov
push
sti
ja
pop
ret
popa
dec
jbe
data16
repnz
and
adc
adc
pop
add
xor
add
shll
cli
fs
out
xor
cltd
fisubl
leave
push
push
jno
mov
xchg
rclb
call
or
mov
add
pop
test
lods
aad
jp
test
and
add
insl
aam
mov
sub
add
imulb
cs
push
dec
mov
movsb
aam
lods
imul
ds
call
mov
sub
xor
rcll
jns
mov
arpl
mov
cmc
int
cli
scas
insb
add
pop
icebp
lods
mov
push
adc
jno
inc
aaa
xchg
addb
xor
pusha
hlt
dec
in
pushf
int
add
imul
mov
test
popa
cltd
cmp
test
pop
xor
sub
or
xor
sldt
flds
shr
mov
rorb
push
pop
pop
ljmp
add
and
mov
and
mov
sbbl
sbb
repz
shrb
es
add
jl
mov
add
movsl
push
cmc
movsb
jae
lock
and
nopl
adc
lods
jl
jge
push
add
pop
mov
repz
mov
mov
and
cltd
fsts
jecxz
out
enter
out
add
ror
cmp
pop
pop
fsts
add
or
and
push
jo
mov
dec
cmp
shlb
pop
push
sbb
in
addb
shld
sub
mov
jnp
pop
outsb
popa
mov
push
mov
rcrl
jae
sbb
pop
aad
sub
or
aas
fidivrl
cmp
es
push
mov
push
inc
jo
rorl
insl
cmp
pop
in
push
jnp
add
leave
aaa
push
xor
cmp
ja
fisubl
push
inc
test
and
sub
add
adc
cmpsb
out
mov
push
add
push
and
cmp
in
mov
or
xchg
adc
insb
orb
aas
pop
jle
add
sub
xchg
pop
fdivrl
loop
pop
mov
rol
push
inc
aaa
add
sub
pop
add
sbb
fsubrs
int3
cmp
mov
imul
sub
pushf
mov
aas
mov
adc
ja
cltd
add
cmp
movb
mov
stos
push
movsl
push
jmp
test
mov
in
dec
sbb
fcom
lahf
rcr
jle
add
sbb
std
add
push
push
sahf
pop
in
lds
nop
sbb
add
shlb
enter
rcrl
ret
dec
stos
push
pop
adc
sub
push
add
call
mov
jbe
jns
sub
adc
popf
inc
adc
inc
sahf
jb
add
test
inc
adc
addl
adc
pushf
push
sub
jp
test
inc
fldt
and
cmp
nop
xchg
fs
mov
push
inc
js
fs
push
xor
fmull
and
call
cmp
punpcklbw
sbb
add
jp
aam
fcmovnb
mov
test
push
add
aad
pusha
testl
bound
decb
mov
hlt
insb
clc
add
out
sbb
dec
cltd
test
aad
sahf
cmp
cmc
add
int3
mov
sti
add
cwtl
ret
mov
add
push
pop
inc
xchg
outsb
xor
adc
pop
fwait
cmp
int3
push
add
lahf
ljmp
clc
xor
xor
jp
stos
mov
adc
sti
push
add
or
add
ljmp
leave
out
outsb
jg
lods
xchg
test
mov
sub
sbb
add
out
data16
jp
ja
mov
inc
addb
sti
xchg
scas
and
push
divl
pop
jb
or
out
mov
adc
jne
add
add
in
daa
rcr
je
movsl
fldl
scas
lds
jne
mov
aam
ljmp
jg
push
ljmp
pop
mov
pusha
dec
mov
and
imul
add
pusha
cmpsb
loope
inc
mov
add
jb
hlt
lods
add
xchg
inc
jne
rorb
cmpsl
adc
jl
cmp
loope
arpl
or
mov
add
les
out
add
and
ja
cmp
add
mov
loope
add
lret
inc
mov
mov
xchg
xchg
adc
repnz
les
cmp
shrb
jno
push
testb
mov
lods
loopne
loopne
push
dec
add
imul
inc
mov
jnp
je
enter
mov
cmp
and
call
addl
fisubl
in
stos
enter
dec
mov
icebp
mov
bound
inc
pop
xchg
sub
or
jmp
xor
mov
lds
je
test
out
movsb
add
sbb
aam
stos
adc
jae
add
fcoms
add
pop
pop
pcmpeqb
jecxz
cmp
push
inc
roll
add
pop
in
mov
mov
add
sbb
inc
cmp
add
int
jns
movsb
sbb
and
sub
addr16
dec
xor
add
jb
std
jno
inc
in
andw
inc
or
psubq
mov
loopne
mov
outsl
inc
push
add
scas
loopne,pn
in
sti
or
jno
sub
bound
pop
dec
sbb
loope
xor
and
push
add
jne
pop
cmp
jae
sbb
pop
and
cmp
mov
and
adc
dec
xchg
sbb
stos
lret
and
test
xor
add
pop
test
push
push
sti
or
aad
repnz
adc
xchg
add
adc
movsl
sub
push
add
lock
fdivr
or
mov
in
push
push
out
into
pusha
pop
cli
inc
negb
sbb
std
and
add
popf
and
jbe
push
or
pop
inc
aaa
mov
xlat
inc
shl
add
sbb
lods
fdivrp
test
lea
inc
add
sub
pop
or
mov
or
repnz
mov
xor
jp
loop
insb
sbb
sub
mov
pushf
and
jae
mov
addr16
inc
mov
pop
mov
es
dec
pusha
fsts
filds
xchg
int3
shrb
std
insl
shlb
and
mov
ljmp
push
add
jbe
lret
add
mov
add
push
adc
ret
vmwrite
scas
in
in
sub
jg
popf
in
out
stos
inc
inc
sub
jecxz
and
pop
or
lock
xchg
sbb
rcll
push
add
mov
push
cltd
adc
adc
mov
jbe
ret
in
sbb
adc
aas
clc
mov
call
idiv
mov
dec
push
jmp
scas
cmp
cmpsl
push
cltd
or
and
inc
add
inc
pop
adcb
cmc
dec
add
mov
ret
add
std
bound
cmp
sarl
call
pusha
cmp
mov
push
mov
jmp
push
push
lcall
or
cli
xorl
add
fnstsw
pop
add
daa
jl
data16
or
pop
cmp
and
popa
push
lret
ja
nop
inc
add
push
xor
cs
popf
push
dec
mov
cmp
arpl
xchg
fisttps
leave
mov
lock
sbb
daa
daa
add
add
adc
dec
and
inc
xchg
add
adc
cli
pop
je
add
out
mov
xchg
fcmove
inc
add
and
lds
mov
cwtl
shll
lds
test
sbbl
rcll
and
sbb
fldenv
add
mov
add
daa
mov
sbbb
add
mov
push
aaa
in
ret
adc
add
jge
cmpsl
nop
mov
cld
loopne
pop
adcl
jns
mov
mov
ret
insb
jae
mov
inc
sbb
cld
sub
rorl
and
pusha
dec
sbb
and
fistps
add
push
loop
xor
test
jnp
js
jb
xor
outsb
loope
adcb
cli
add
imul
sbb
sub
pop
inc
add
adc
mov
mov
imull
or
xor
out
pop
call
out
dec
xchg
mov
rcl
add
lea
add
add
fwait
mov
xor
xor
add
testb
push
or
dec
xorb
xchg
hlt
add
and
aaa
incb
mov
call
data16
sbb
dec
add
xor
mov
int
ktestw
fiadds
ficompl
inc
cmp
icebp
xor
fcmovne
call
cwtl
push
hlt
stos
add
or
add
add
fmul
xlat
add
cmp
lret
jb
and
add
pop
mov
mov
dec
cmpsb
sub
add
fimull
call
cltd
sub
dec
add
pop
mov
jge
daa
and
xor
pusha
clc
sub
jp
idivl
jge
filds
hlt
pop
adc
movsb
loop
stc
add
in
das
mov
xchg
and
dec
testb
push
daa
pop
insb
cmpb
rcrb
add
sarl
cld
ja
aas
testb
add
mov
add
jmp
xchg
push
xor
mov
adcl
jo
add
ret
shlb
jecxz
leave
jno
cmpsl
test
add
jle
dec
js
mov
add
lcall
add
outsb
and
fsubl
sub
pushf
test
push
mov
jbe
add
sub
push
inc
testl
out
popf
add
iret
nop
dec
cmc
sarb
cmp
xlat
jae
add
pop
xor
cmpb
add
and
xchg
mov
mov
mov
jae
addr16
inc
jnp
out
orl
lahf
mov
and
in
cltd
add
or
push
push
shll
jp
pop
loopne
aas
push
jb
outsl
roll
insb
xchg
jmp
and
or
and
add
iret
mov
pop
imul
cltd
mov
add
push
mov
pusha
xchg
loopne
cwtl
xlat
add
insb
adc
jmp
sub
inc
and
pusha
mov
inc
pop
iret
and
popf
add
lds
decb
sbb
add
fwait
mov
sbb
xchg
or
sarb
daa
dec
and
inc
repnz
mov
pop
cmp
in
adc
movl
push
addl
pop
jae
pop
cmp
jecxz
jo
jb
inc
adc
test
stos
scas
mov
aaa
lds
mov
pop
shlb
add
stos
jno
mov
imul
mov
lods
ret
sbb
mov
pop
mov
cmc
mov
xor
or
ss
shr
add
adc
sarb
stos
cmpl
xchg
add
inc
mov
mov
in
mov
or
popa
pop
add
add
xor
push
pop
mov
jp
sahf
fiadds
lcall
adc
adc
es
ror
add
lahf
aam
dec
adc
fiadds
jge
test
sub
testl
test
push
loopne
xor
pop
out
testb
dec
or
pop
pop
subb
icebp
xor
sbb
cs
insb
add
mov
shlb
jns
jbe
jl
add
and
xchg
dec
jno
add
shll
mov
adcb
add
loope
pusha
cld
imul
lcall
call
add
add
repz
and
call
mov
push
and
pop
adc
mov
pop
cmp
jb
jno
mov
lahf
int3
xchg
sub
or
aad
jae
add
call
or
scas
fs
pop
pushf
jnp
add
inc
push
nop
bswap
jno
jge
push
mov
in
jg
nop
rolb
mov
adc
pop
sbb
inc
ds
dec
dec
js
cmpsb
fdivrl
add
jo
xor
push
mov
xchg
add
ljmp
loope
cmpl
addr16
xor
pop
and
jmp
cmp
mov
loopne
aas
nop
pop
lock
or
gs
sbb
pop
mov
imul
pusha
pop
ss
sbb
hlt
lahf
test
add
movsb
fdiv
xorl
inc
popa
cmp
loopne
aam
lock
add
rclb
mov
ds
jecxz
cli
add
sub
sub
test
jmp
test
movsb
cld
les
dec
pop
jns
cmp
inc
xchg
dec
out
lock
pop
mov
push
sbb
mov
stos
stos
lods
call
lahf
mov
rorb
pushf
test
push
add
xor
mov
movsb
push
add
dec
fdivrs
add
xlat
popa
mov
shrl
add
xchg
insb
test
loopne
inc
mov
pop
jnp
pusha
sbb
dec
inc
add
fmul
add
mov
or
sbb
cltd
movsl
sub
jp
mov
push
add
add
xor
ja
pushf
ljmp
add
dec
cli
dec
cld
push
cwtl
xor
ss
inc
fsubrl
xchg
or
mov
lcall
adc
jns
fwait
or
hlt
outsb
add
lods
cmpsl
mulb
js
mov
ja
insl
mov
or
in
xor
add
mov
inc
xor
mov
add
lret
add
les
rolb
ret
mov
jg
test
push
lret
sbb
or
xor
lods
cmp
add
xor
jnp
verr
scas
rorl
add
add
das
xor
xorl
sbb
mov
or
repz
xchg
add
xchg
xor
arpl
jl
mov
inc
add
jnp
xchg
dec
sub
add
inc
icebp
ljmp
dec
cwtl
shl
add
mov
push
add
adc
add
or
mov
outsb
int3
dec
inc
jmp
sub
fldt
js
add
and
addb
cli
mov
rcr
cmp
mov
mov
das
cmpsb
add
xchg
push
negl
dec
mov
clc
jo
repz
inc
dec
rolb
pop
test
and
cmp
cmp
rcrl
push
out
cmp
dec
or
sub
pop
testl
ja
push
lahf
push
cmp
lods
sub
or
imul
adc
loope
scas
xor
in
subl
add
jbe
mov
imul
ret
add
adc
xchg
sbb
popa
add
loopne
std
adc
mov
mov
pushf
fldl
fstps
mov
sarb
mov
rcrb
lahf
and
adc
xchg
dec
nop
add
jnp
inc
cmp
sub
cmp
jne
mov
insb
add
xor
clc
ja,pt
adcb
inc
or
ficomps
int
sbb
sub
add
out
push
jnp
cmp
call
mov
dec
stos
sub
add
daa
mov
outsb
adc
ljmp
cmpsl
lods
pop
loop
adc
pusha
es
add
pushf
mov
pop
lret
movsl
sar
jno
hlt
jl
dec
pop
outsl
adc
jns
iret
mov
inc
adc
or
in
or
adc
mov
adc
rorl
lock
insb
jbe
sub
mov
dec
sub
int
mov
sbb
shll
xchg
sbbl
pop
test
pop
and
nop
mov
arpl
pop
outsb
push
pushf
imul
xor
and
mov
int3
mov
push
std
mov
mov
xchg
xchg
sub
movsb
xchg
stos
add
mov
adc
or
add
mov
inc
enter
es
jecxz
hlt
mov
cmpsl
xor
clc
add
add
gs
sbb
xor
roll
xchg
pushf
sub
xchg
mov
xchg
lods
bound
outsl
cli
mov
sti
jb
or
mov
fstpt
mov
addr16
sbb
shlb
movhps
mov
bound
xchg
stos
sbb
mov
adcl
shl
sbbb
enter
add
inc
cmp
popf
and
add
lods
sbb
pop
aam
sbb
xor
sub
jg
push
cs
cmp
cmp
lods
jb
adc
add
in
lcall
imul
cmc
and
push
cmp
jbe
push
and
add
ret
xor
or
in
sub
ds
add
adcl
lods
mov
daa
pop
xchg
or
movsb
bound
inc
int
ja
add
ret
insl
jmp
add
add
sub
insb
jle
add
xor
out
lahf
sbb
fisubrs
in
sbb
shlb
mov
sbb
xor
in
pop
dec
outsl
fwait
jnp
add
mov
mov
cmp
dec
add
hlt
inc
xchg
dec
mov
cld
xlat
insb
in
mull
mov
faddp
add
mov
pop
inc
clc
fwait
jl
sbb
xchg
and
or
cmp
icebp
loopne
pop
cmpsb
xor
add
adc
repnz
int
movd
jg
les
add
out
push
inc
int
ljmp
inc
in
add
push
negl
imul
mov
lahf
add
mov
push
filds
movsb
pop
xchg
psrlq
xchg
mov
test
push
pop
xchg
xchg
add
in
pop
add
add
lcall
add
sbb
enter
pop
incb
inc
rol
xchg
iret
jns
add
popf
ds
xchg
or
push
movsl
imul
cwtl
add
int
mov
cmp
push
ds
adc
xchg
aam
push
prefetchwt1
or
jge
icebp
push
bswap
out
mov
pushf
imul
mov
push
icebp
repz
leave
arpl
pop
lret
ret
add
std
push
lods
out
filds
cmp
xor
sbb
inc
add
mov
pop
movsb
imul
repz
rolb
dec
add
ss
pop
ljmp
out
jle
les
add
mov
mov
adc
ljmp
sub
mov
hlt
rorb
js
add
pop
mov
fsub
inc
dec
hlt
pop
pop
sbb
cs
mov
ret
psadbw
jns
mov
mov
subb
cmpsb
push
add
repnz
and
mov
push
cwtl
push
jle
jns
int
sbb
fisubrs
sti
aad
enter
mov
jge
aas
and
aam
mov
imul
cmp
outsl
inc
lds
int3
outsb
pusha
xchg
mov
mov
cwtl
add
pop
xchg
push
or
add
mov
pop
jge
cmp
mov
loope
sub
stc
flds
movsb
push
repz
push
cmc
add
test
or
jge
cld
adc
cmp
add
pushw
inc
pop
decb
and
mov
mov
imul
dec
je
clc
add
or
jnp
jecxz
in
lcall
mov
xchg
pop
pop
pusha
mov
jno
push
insl
adc
repz
mov
repnz
mov
dec
cmp
fidivrl
xchg
mov
sbb
out
data16
sub
or
add
jg
std
ja
incb
ret
or
add
mov
arpl
add
pop
push
fidivl
sbb
enter
fcomps
stos
add
xor
inc
add
cmp
cmp
dec
insl
ret
jne
add
mov
incb
loop
pop
mov
push
mov
xchg
mov
or
fsubs
inc
mov
in
stos
fldl2t
push
mov
pusha
add
sub
cmpsb
or
jge
xchg
push
loopne
xor
pop
mov
xor
add
pushf
cld
jmp
sbb
stos
add
or
lock
aam
push
rcr
xor
sub
loop
out
mov
adc
push
pushf
jge
or
outsl
push
sti
shlb
pop
mov
add
psrlw
iret
mov
xorb
jne
hlt
inc
icebp
cmp
and
pop
in
sahf
imul
subl
pop
mov
fucomi
das
xorb
mov
add
mov
jnp
aaa
movl
shll
cmp
mov
rorb
add
insb
xor
ret
arpl
hlt
sahf
and
in
jo
add
mov
inc
inc
das
sub
sub
add
lds
test
es
add
or
adc
scas
jne
adc
ret
cli
push
add
and
mov
add
lods
sub
sti
int3
push
jae
add
rcll
dec
add
outsl
xor
lods
mov
shlb
jmp
xorb
pusha
add
leave
xlat
jnp
mull
sysexit
dec
lahf
test
xor
lock
sub
and
push
add
dec
inc
jnp
out
insb
ljmp
adc
sbb
add
shlb
mov
nop
pop
xor
jecxz
cmp
and
and
out
xchg
adc
and
dec
or
dec
lods
sarb
add
pusha
inc
test
or
addl
cld
cmpsb
sub
sarl
dec
mov
je
ljmp
lock
lock
inc
push
leave
dec
adc
adc
iret
xor
mov
dec
hlt
sub
lds
add
mov
pop
js
add
imul
lahf
adc
pop
cmpsb
js
jg
push
js
mov
mov
adc
into
or
inc
cmp
leave
sbb
xchg
mov
adc
shlb
outsl
inc
aam
enter
mov
sub
or
cld
push
xor
and
lock
jb
jb
xchg
push
xchg
mov
sbb
pslld
ficoml
pop
hlt
int
popa
leave
in
add
pop
cmpsb
pushf
sbb
sbb
lods
leave
xchg
add
push
xor
or
sub
test
inc
daa
lret
cmp
inc
addb
outsb
xchg
std
dec
jg
in
add
fcmovnbe
add
lds
or
add
lods
shlb
add
rcrb
sub
cltd
aaa
or
and
movsl
xchg
add
or
popf
add
pop
jmp
imul
push
add
inc
or
fiadds
mov
jge
add
repnz
nop
popa
lret
jb
xchg
cmpsl
stos
push
push
pop
in
dec
mov
aas
sbb
add
mov
test
jno
push
sti
pop
dec
xchg
mov
add
ror
sarl
jbe
in
xor
inc
mov
jae
push
xchg
hlt
dec
jo
js
unpckhps
stos
xchg
mov
xchg
add
dec
rolb
rcrl
and
inc
out
add
xor
inc
mov
jg
fildll
add
xchg
bound
nop
mov
xor
add
xor
mov
xor
sub
sub
scas
dec
sbb
leave
cmpsl
jmp
popa
daa
aaa
cwtl
or
xchg
mov
and
pusha
mov
mov
jae
in
scas
cmpl
in
mov
cmp
das
mov
bound
ret
sbb
and
cmp
push
mov
inc
aaa
test
jl
sti
sub
sub
in
add
or
mov
jb
les
in
mov
pop
cmp
mov
fcmovnbe
and
cmpsl
and
add
clc
icebp
add
push
xchg
jno
add
aaa
daa
jmp
or
jb
xchg
add
in
xor
cmp
cmp
imul
outsl
scas
orb
jbe
push
add
xchg
mov
loope
jge
movsb
or
mov
out
jns
fistpl
sub
out
cmp
inc
fiaddl
dec
or
and
mov
fists
and
gs
test
jbe
pop
jecxz
aad
dec
repnz
add
in
xor
mov
subb
add
add
enter
mov
xor
inc
popf
adc
or
jle
xchg
fcompl
add
out
stos
mov
bound
std
arpl
dec
faddl
mov
in
int3
adc
or
in
testl
inc
add
push
dec
addb
jnp
and
inc
rorb
addr16
stc
repnz
roll
jnp
push
dec
mul
add
xchg
ret
aas
vmread
lret
outsl
push
test
int
hlt
xchg
test
add
cmp
lahf
test
pop
mov
xchg
les
movsb
sbb
push
cli
sub
inc
mov
xchg
jb
push
aas
cmp
xor
ljmp
jae
sub
popl
ja
push
lods
xor
pusha
insl
enter
pop
push
dec
add
xchg
jle
test
ds
enter
lock
pop
xor
movl
mov
jne
or
into
sbb
jb
or
inc
xchg
push
pop
pop
push
in
inc
pop
adc
fs
push
adc
add
add
mov
xchg
cmp
xchg
imul
cmc
add
fisttpll
cmp
scas
jne
lahf
jmp
test
popf
sbb
rcrl
test
and
sub
leave
adc
add
jl
cmc
sbb
mov
mov
cmpxchg
insl
push
clc
into
xchg
rorl
add
inc
sub
jecxz
add
leave
loope
dec
mov
shlb
jp
jmp
in
dec
addr16
ss
and
jbe
lcall
add
cs
mov
mov
mov
inc
add
xor
or
jg
xor
push
pop
sbb
imul
mov
add
enter
cmp
aam
inc
lds
pushw
icebp
adc
ss
adc
add
sbb
add
dec
outsl
in
mov
jno
aad
fmuls
imul
jmp
lods
ret
fmull
jle
mov
rolb
add
call
pushf
in
filds
dec
mov
aad
ret
add
jo
mov
add
shll
pop
jge
in
outsb
xchg
add
lret
int
cs
ljmp
adc
sub
sub
jne
outsl
mov
jo
es
seto
mov
and
sbb
and
push
adc
movq
xor
lea
je
in
adc
cmpsb
mov
adc
mov
lcall
push
cmpsb
adc
sbb
and
add
add
mov
pop
out
sub
add
jmp
pop
pop
imul
add
mov
insb
mov
jno
push
repnz
add
xchg
out
lods
lret
jns
or
add
addl
push
orl
xor
loope
push
add
push
rcrl
add
ss
add
mov
xchg
add
scas
and
sbb
faddl
mov
mov
aam
xor
test
mov
fsubrl
xchg
mov
jp
ret
pop
pop
cmp
in
xchg
pushf
femms
out
inc
mov
add
loopw
xor
stos
je
or
iret
xchg
or
cs
dec
push
pop
jae
aaa
or
insb
cmp
rcrb
push
mov
adc
adc
int
daa
sbb
xchg
scas
sbb
add
sub
sbb
test
repnz
lret
out
mov
pop
bound
dec
fiadds
shrl
lret
and
adc
inc
aad
and
repnz
sbb
jecxz
sbb
inc
mov
aas
loop
pop
jmpw
add
add
clc
pusha
inc
mov
arpl
loope
and
mov
xchg
je
and
imul
adc
ljmp
jae
rolb
pop
stc
dec
arpl
add
or
fs
xchg
daa
or
xor
push
push
lock
inc
pop
loope
or
fs
adc
inc
jb
cmp
fcoml
pop
jns
pusha
pop
into
and
test
sub
and
ss
pop
push
in
xchg
push
cmp
xor
and
adcb
movsl
add
loopne
out
mov
push
lcall
push
and
fwait
jae
add
test
mov
mov
gs
imul
in
xlat
mov
mov
arpl
add
adc
stos
daa
sub
add
enter
mov
mov
rcr
les
fwait
jb
inc
cmp
xchg
sub
push
add
cmc
sub
push
pop
mov
add
popa
loop
sub
fxtract
test
orl
insl
daa
arpl
in
jge
sbb
xchg
mov
xor
or
fsubrs
insb
lock
std
data16
ljmp
push
sub
cmpb
add
repz
mov
addr16
add
imul
push
push
roll
out
mov
cld
push
sahf
adc
es
in
out
or
jne
add
icebp
and
int3
push
movl
add
out
lock
add
sti
add
mov
lret
or
dec
xchg
rolb
push
mov
jno
movsl
frstor
fwait
mov
jo
adc
adc
es
daa
add
xchg
add
ds
movsb
push
cmp
shlb
add
outsl
dec
fwait
in
mov
xchg
pop
cmp
cltd
int3
fcmovnu
xor
jle
or
int
movl
xchg
sub
add
inc
mov
sub
xchg
xchg
call
push
iret
jg
ljmp
dec
out
push
fwait
in
imul
add
cmp
dec
jg
and
daa
or
in
mov
mov
jo
sbbl
aas
add
or
mov
sbb
mov
add
cmpl
jnp
add
mov
push
jo
addb
adc
inc
fsubrl
add
jp
pop
add
inc
pusha
repz
cwtl
cld
les
int
sbb
imul
sub
fildl
cmpb
mov
jle
cs
fildll
adc
xchg
or
aas
je
push
or
scas
loopne
test
cwtl
dec
pop
mov
jl
jmp
xor
shll
add
xchg
sbb
fisubrl
int3
push
or
push
add
shlb
ljmp
or
sbb
dec
mov
add
rep
inc
nop
out
mov
and
pop
inc
rcll
std
adc
cmpb
movb
inc
cltd
dec
cs
xlat
add
mov
sahf
cmp
cmp
dec
cmp
out
int3
mov
ljmp
movsl
arpl
adc
mov
aam
es
jb
and
xchg
lock
outsl
add
cli
sti
and
jl
iret
add
jg
aam
outsl
cld
add
popa
xchg
test
sub
xor
mov
stc
and
xchg
push
fmuls
add
push
cli
and
int3
xor
das
add
hlt
push
dec
cwtl
or
inc
jne
lock
aam
daa
or
dec
jecxz
mov
jae
xor
ds
jmp
inc
pop
ror
add
mov
loope
and
xchg
add
test
outsb
mov
notl
add
inc
jge
push
mov
xor
xchg
pop
test
jbe
jl
movsb
add
push
mov
xchg
xchg
push
cmp
cmpsb
push
push
and
jns
pop
test
fildl
movsl
mov
jbe
ljmp
mov
ljmp
popa
xchg
cmp
lods
mov
sub
mov
sbb
pop
mov
sub
pop
add
into
push
mov
aas
jmp
js
jae
repz
fdivl
dec
add
ror
add
pop
nop
bnd
add
pushf
sub
push
aad
cmp
imul
mov
inc
lret
sbb
outsb
mov
pop
sarb
mov
int3
mov
xor
repnz
cmp
out
push
negl
dec
xchg
dec
inc
dec
fwait
sub
sub
fidivrs
mov
add
xchg
out
arpl
ret
and
push
rolb
daa
mov
insl
shl
jno
adc
inc
cmp
pop
scas
cmc
inc
sub
jns
and
ret
add
mov
arpl
and
enter
in
and
idivb
pop
push
jne
jecxz
idivl
fidivrs
fildl
repnz
in
xchg
add
sbb
adc
es
jle
add
imul
rorb
imul
xlat
pop
ds
cltd
insb
jns
add
aaa
ja
mov
fs
aas
pop
inc
add
ret
jbe
cmp
sti
pop
pop
mov
push
mov
test
nop
stos
je
lds
adc
xchg
pop
fbstp
pusha
jecxz
mov
xchg
lock
ficoml
lcall
pop
jb
andb
repz
std
cmp
test
dec
sbb
add
or
mov
leave
adc
xor
xor
add
mov
je
add
pop
ss
int3
lock
add
das
push
xorb
mov
mov
inc
push
add
add
xlat
or
mov
inc
xor
sti
rclb
in
mov
and
rclb
int
dec
incl
inc
inc
cmp
xchg
hlt
add
je
fs
add
fnstsw
push
lcall
cld
add
aam
xchg
inc
add
andb
lcall
into
mov
pop
xlat
or
or
leave
inc
jbe
lahf
lock
pop
mov
add
and
or
cmpsb
add
sbb
dec
mov
sahf
mov
xor
fsub
rolb
and
int3
dec
es
mov
test
inc
hlt
insl
sbb
add
jmp
sbbb
xor
xchg
jo
sub
sbb
adc
jno
or
imul
addb
dec
push
add
mov
ret
addr16
js
popa
add
push
dec
and
jo
ja
pop
lock
sti
or
pop
sub
dec
add
xor
pop
pop
jecxz
push
pop
inc
xchg
rcrb
and
inc
ret
add
dec
mov
add
hlt
rorb
aam
in
add
mov
pop
add
jb
or
pop
mov
les
cmp
outsl
mov
and
mov
leave
inc
add
ja
or
loop
and
popa
imul
fstps
add
sub
push
add
pop
lock
push
test
or
add
sti
loope
push
aas
les
mov
fdivrl
insl
adcb
mov
cmp
imul
test
adc
pop
xchg
dec
xchg
ffreep
pusha
dec
sbb
jae
add
sbb
add
ret
fcmovnb
aam
dec
imul
add
sub
sbb
adc
push
rcrb
loop
cwtl
je
call
repz
add
test
sbb
add
and
adcb
pop
movl
je
or
loope
cmpb
sub
sarb
clc
mov
nop
insb
dec
or
jno
subb
lods
or
test
sub
add
les
push
sub
subb
decl
std
push
nop
faddl
push
pop
jae
pusha
fsubrs
xor
xchg
and
cmp
or
cwtl
or
dec
repnz
or
add
lea
and
fdecstp
add
test
sub
in
out
add
insb
jae
or
test
dec
adc
icebp
dec
out
or
cmp
inc
mov
add
add
inc
sbb
outsb
mov
add
lret
clc
adc
dec
cmpsb
jmp
in
into
sub
rcl
out
sbb
in
push
jl
cmp
jb
aam
js
dec
mov
xchg
loopne
jle
scas
push
clc
sbb
mov
xchg
fldl
jnp
inc
mov
int3
cld
dec
cmp
add
js
mov
int
push
cli
addb
fimull
or
sub
add
test
popl
rclb
popa
push
adc
test
add
aas
filds
int3
fdivp
ds
cmp
or
and
inc
je
xchg
mov
mov
pop
fldcw
clc
push
ja
inc
pop
and
adc
dec
add
aas
lret
xchg
js
add
lods
mov
leave
call
fiaddl
call
xor
lods
mov
inc
push
stos
xor
stos
pop
mov
fildll
scas
inc
out
or
in
andb
sbb
pop
add
push
jbe
jbe
add
in
pop
pop
outsl
cltd
jle
mov
movsb
add
xor
incb
xor
push
popf
inc
and
push
loop
add
sub
rorl
sbb
cmp
and
enter
add
outsl
mov
add
cmc
jge
cli
xor
psubsb
out
mov
movl
outsl
inc
loopne
dec
mov
sbbl
add
adc
dec
mov
stos
add
mov
dec
xorb
fcompl
bound
stc
cmp
mov
addb
out
jo
adc
pusha
mov
call
cmpsb
add
addb
xchg
mov
mov
fwait
cmc
adc
mov
daa
rclb
jnp
cmp
mov
lods
mov
add
sbb
adc
jae
out
pop
negl
pop
lock
lret
imul
xchg
add
inc
inc
add
test
xor
jns
and
call
out
sub
sbb
nop
xlat
add
and
inc
add
std
pop
jge
idivb
jne
dec
inc
sbb
mov
clc
lods
div
bnd
out
movsb
xchg
or
cmpsb
xorb
xchg
xor
les
pop
iret
jl
jb
dec
jbe
lahf
inc
ja
add
dec
cmp
negb
adc
pop
rorl
xchg
mov
xchg
add
fmull
adc
dec
jge
rcll
icebp
add
cmp
ss
aad
jbe
enter
pop
push
push
lret
xlat
movb
add
mov
xchg
mov
data16
ficoml
call
ss
test
rcrl
call
cmp
fs
jb
add
int
inc
sahf
in
mov
xchg
pop
movl
push
cld
daa
jno
xchg
add
cmp
pop
and
cmpsl
stc
cmpsb
cwtl
stc
add
mov
mov
rcr
xchg
xor
pop
add
mov
cmp
jne
add
pop
lcall
dec
xchg
push
adc
mov
aas
add
int
aad
popf
rorl
or
hlt
mov
pop
cmpsl
add
call
cmp
jo
xor
add
neg
or
adc
add
popa
mov
jo
xchg
pop
dec
mov
mov
mov
jno
lock
mov
ljmp
jecxz
sbbb
cmpb
mov
cmpsl
lods
add
cmp
mov
mov
jge
outsb
xor
loope
fisubl
jo
and
sbb
add
stos
inc
test
das
scas
icebp
mov
add
adc
cmp
and
movsb
loop
add
pop
lods
sub
loop
enter
fcomip
jle
mov
pop
lcall
add
les
hlt
inc
mov
pusha
mov
jge
cmp
or
jl
sbb
outsl
add
sub
shll
scas
xchg
xchg
cmp
out
js
jl
add
mov
insl
test
sub
fmull
int
add
outsb
jnp
xchg
scas
bnd
fsubl
push
mov
inc
push
fneni(8087
dec
dec
push
add
lods
pop
leave
jae
adc
nop
imul
addb
jno
lret
add
inc
adc
mov
xor
push
lods
mov
rcll
shrb
add
adc
add
mov
and
addb
xchg
clc
add
jns
mov
adc
sbb
sub
cmpb
pop
cs
test
add
cmpsl
fwait
inc
push
or
mov
xor
adc
sbb
ficomps
cmp
push
stos
push
movsb
add
inc
mov
jns
fsubrp
cmpsb
mov
add
pop
pop
shrb
pusha
cmpsb
test
adc
jne
dec
mov
xor
pop
mov
dec
xor
jo
cmp
sbb
stos
add
pop
jae
xchg
xor
sbb
adc
xor
adc
xchg
pop
or
loop
mov
cmp
add
fildl
add
lea
sbb
mov
popa
ret
jecxz
jecxz
add
dec
and
daa
rorl
hlt
push
lock
push
xor
imul
cmc
cwtl
push
movsl
add
lock
out
hlt
in
or
fwait
out
hlt
or
and
call
test
out
dec
pop
loop
sbb
test
popf
jl
sub
pop
jp
xchg
test
div
icebp
insb
ret
inc
testb
test
mov
push
and
or
roll
adc
add
inc
ljmp
fmuls
cli
xor
sub
pop
xor
add
mov
aam
cltd
mov
or
push
call
daa
pop
mov
rcrl
test
adc
pop
notl
mov
mov
ljmp
shl
out
aad
test
push
call
inc
dec
outsb
out
sub
enter
add
in
push
xor
and
and
fistl
adc
push
inc
subl
xor
mov
or
mov
add
loopne
cmp
scas
sahf
push
hlt
fcoms
in
push
jb
mov
sub
pop
shr
movsl
jo
aas
insb
wrmsr
scas
xchg
cmp
cli
arpl
and
sbb
shlb
rcrb
loopne
jb
dec
test
fwait
sub
cmpsb
lods
lock
stc
mov
ret
loope
xchg
imull
and
pop
cmp
aas
out
push
add
add
cwtl
cmp
in
clc
jmp
push
dec
adc
aam
dec
nop
add
cmpsl
movsl
pop
inc
decl
js
xor
and
push
inc
push
add
adc
lods
lahf
push
cmp
jmp
out
fnstenv
add
stc
xchg
and
inc
stos
push
mov
mov
xor
cwtl
sbbl
sbb
aad
adc
jo
add
sub
rcrb
notb
mov
and
cmp
popl
xor
popf
scas
adc
mov
add
cmp
andb
xor
data16
xchg
in
cwtl
sbb
or
int
js
rolb
out
inc
lock
mov
call
stos
test
dec
xchg
inc
jae
aas
cmp
fwait
mov
mov
dec
adc
pusha
mov
mov
insl
adc
adc
aam
hlt
into
faddl
shr
sti
add
mov
sbb
inc
sbb
out
or
dec
pop
xchg
xor
cmpsb
sbb
stc
xchg
sub
cmp
pop
fistps
test
dec
inc
push
xchg
popa
add
rol
or
or
pop
adc
xchg
xor
and
jecxz
push
adc
push
mov
insl
inc
cmc
sti
or
insb
test
mov
inc
popf
call
rcll
out
xor
inc
ret
shlb
mov
mov
cmpsl
imul
insb
dec
jmp
pop
add
mov
rorb
pop
add
inc
stos
sbb
mov
sahf
jo
mov
int
cwtl
xorl
or
push
aam
adc
push
fsub
add
cmp
jl
fwait
sub
jg
push
shll
pop
lret
scas
ret
rol
orl
add
stc
and
and
cmp
add
add
add
push
or
cmpsl
cmp
fnstsw
jmp
or
and
dec
insl
or
clc
loope
add
xor
or
or
adc
pop
pushf
adc
popa
jo
push
jb
stos
es
dec
mov
pop
mov
notb
add
insl
pop
hlt
add
and
aad
sub
int
add
rolb
inc
inc
sbb
adc
cmp
cltd
cmpb
call
mov
sahf
popa
fdivr
ret
mov
sbb
xorb
mov
or
push
xchg
lods
out
push
push
cltd
and
adc
sbb
cmp
aad
std
repz
add
sbb
adc
das
fildll
cs
add
iret
add
jo
inc
ljmp
jle
cvttps2pi
int3
or
xchg
mov
dec
push
cmpb
add
pop
fistl
add
in
push
adc
fwait
aad
repz
ss
sub
inc
add
push
ljmp
fidivrl
push
xchg
inc
cmp
ss
out
int3
pop
jmp
and
shrb
xchg
jle
rcr
push
test
lea
add
mov
icebp
nop
sbbb
sbb
add
jmp
mov
dec
test
andl
es
sub
mov
sbb
movsb
lock
push
cmp
jl
add
scas
push
lock
mov
imul
ljmp
add
mov
sub
add
cmp
out
add
xchg
cld
sub
push
add
sub
pop
mov
testl
add
das
add
inc
dec
xorb
xor
adc
and
fistpll
sti
sahf
ficomps
or
scas
or
retw
faddl
aad
jmp
scas
loop
sbb
inc
adc
add
rcrl
or
or
mov
stos
add
xchg
leave
sahf
test
sub
pop
pop
punpckldq
pushf
insb
enter
rcrb
pop
inc
and
gs
sbb
mov
jl
xor
xorb
xchg
rolb
fwait
sbb
ljmp
pop
jle
cmpl
cmp
aas
or
push
add
mov
xorb
popa
cwtl
in
sbb
pop
arpl
add
adc
pop
mov
sub
lea
shl
push
add
scas
pop
ret
test
xor
mov
dec
push
sub
mov
in
stos
and
xor
mov
lds
nop
pusha
push
cmp
fsubrs
inc
xchg
add
sbb
push
pop
mov
repnz
jae
call
add
dec
lahf
pop
add
xchg
arpl
sub
inc
aad
nop
mov
mov
and
lret
sbb
in
jnp
les
mov
sbb
test
push
lock
add
adc
nop
push
inc
out
add
xchg
push
mov
fprem1
bound
fiaddl
adc
add
and
mov
inc
es
or
jecxz
addl
pop
rorl
jl
add
adc
sub
inc
ss
add
pop
sahf
movsl
adc
push
dec
jns
cmp
cmp
fsubrs
aam
xor
sarb
sub
push
push
mov
fstps
imul
faddl
punpckhdq
adc
xchg
addl
das
jmp
fisubs
pop
out
add
lods
jge
orb
add
pop
call
xor
mov
or
and
stos
pop
mov
sbb
jmp
iret
loopne
push
cmp
imul
xchg
or
mov
pop
ljmp
int3
in
outsb
mov
std
add
cmc
leave
outsl
sub
enter
push
add
ljmp
sti
or
rorb
inc
lods
orb
scas
add
das
and
jmp
mov
test
aam
fiadds
dec
push
test
pushf
cmpsb
cld
add
gs
xlat
pop
mov
push
fsubr
jg
in
int3
add
pop
xchg
insl
movsl
in
into
arpl
cld
jecxz
add
cwtl
push
xor
lea
xor
shll
dec
push
lcall
rolb
ljmp
jb
xor
sub
repnz
les
inc
sbbl
sub
stc
stos
xchg
sub
fwait
sub
clc
add
sarl
inc
rorb
gs
inc
mov
sub
je
pop
add
sbb
pop
mov
daa
das
mov
call
scas
test
add
dec
cmc
add
push
repz
mov
mov
mov
dec
inc
sub
adc
rclb
test
jmp
mov
je
jmp
pushfw
adc
subl
add
int
mov
pop
inc
jge
fldln2
adc
xor
cmp
dec
sub
arpl
adc
mov
or
jl
add
into
out
cs
add
cmp
pop
mov
dec
test
sbb
jno
xlat
add
and
jp
mov
xchg
mov
push
cmp
jle
mov
mov
push
and
repnz
jo
roll
pushf
and
add
js
lret
out
pop
inc
mov
hlt
loope
add
and
sbb
repnz
jb
imul
daa
mov
xchg
push
mov
jbe
dec
dec
jne
roll
jae
cmp
jp
loope
hlt
popl
dec
mov
cltd
and
enter
inc
outsb
xor
clc
lock
jno
pop
add
cmp
testl
pop
jno
mov
cmp
adc
xchg
and
adc
pop
dec
add
ss
add
repz
jmp
adc
inc
adcb
xor
cmp
push
test
clc
loopne
add
push
sub
add
xor
int
nop
sub
popf
sbb
add
test
movsl
das
nop
in
lahf
adc
out
syscall
divb
movsb
add
sbb
add
insb
or
dec
and
pop
pop
mov
and
call
ss
lods
pop
jmp
add
sub
stc
mov
pop
fwait
or
xlat
addb
or
dec
cmc
mov
add
in
loopne
cli
test
in
xchg
sub
movsl
add
mov
mov
xchg
dec
cmpsl
loopne
inc
jge
loopne
fs
pop
add
test
jmp
movsl
enter
sub
xchg
add
jg
push
js
fchs
les
push
aad
aas
lahf
scas
daa
inc
xchg
ljmp
in
sbb
cvtdq2ps
adcb
mov
mov
and
add
dec
call
and
push
cmp
add
in
add
mov
movsl
call
sbb
int3
loope
add
arpl
inc
add
add
cs
lods
in
pusha
cwtl
lea
inc
push
rorb
clc
loopne
dec
push
outsb
xor
shr
mov
mov
sbb
fdivl
adcb
mov
xor
sub
jae
mov
push
sti
arpl
sarl
sub
pop
xor
int
xlat
mov
push
frstor
les
cmp
fiaddl
test
jmp
xchg
in
cmp
add
gs
add
xor
or
scas
jg
adc
adc
fs
xor
inc
jbe
shrb
pop
mov
dec
ret
call
adc
jl
dec
inc
arpl
int
aaa
mov
psubd
sub
or
push
jg
out
repnz
mov
pop
sbb
dec
outsl
fs
adc
xchg
pop
add
lea
add
or
sub
insb
add
push
mov
and
adc
stos
xorb
lret
push
rcr
push
mov
jge
push
nop
dec
pop
adc
shlb
sbb
fs
adc
mov
fadds
mov
ds
aad
mov
das
int
jl
sbb
and
ret
cmpb
pop
xchg
mov
or
loopne
lret
pop
sub
mov
nop
add
mov
cmp
adc
mov
push
add
mov
test
sqrtps
xor
rclb
adc
loopne
mov
dec
movsl
and
jl
sub
inc
inc
in
test
enter
jmp
adc
scas
add
ja
and
xor
out
cmp
stc
shll
add
ljmp
mov
pop
add
lahf
ffreep
mov
sbb
popf
gs
clc
add
push
inc
pop
inc
push
dec
jb
pop
adc
cmpsl
inc
fidivrs
jecxz
loopne
add
lea
rcr
push
xchg
lods
mov
inc
nop
jl
fwait
dec
pop
inc
add
jp
jmp
pop
mov
in
add
dec
repz
testb
pusha
pop
loope
jle
into
and
push
mov
cld
cmpb
hlt
dec
xorb
sbb
pop
iret
imul
aad
sub
jne
ficoms
cmp
or
jo
lock
or
sbb
inc
jno
aam
sbb
mov
sub
test
jl
imul
ljmp
pop
lods
ffree
xorb
add
mov
jp
adc
or
adc
int3
add
clc
lds
sbb
nop
dec
loopne
add
inc
jg
fld1
nop
cltd
mov
lods
add
and
fisttps
xor
add
add
nop
cmp
push
add
in
test
mov
xchg
mov
dec
jb
or
lahf
mov
sbb
aam
pop
icebp
mov
push
pop
stc
inc
jle
dec
pop
mov
fcmove
lock
idiv
add
js
lods
imul
sub
jmp
or
stc
xor
mov
jg
pop
fwait
push
push
data16
loopne
jmp
mov
movsl
jmp
iret
push
add
add
mov
push
cmp
push
xchg
lock
push
push
add
cld
sub
inc
adc
fisubl
jbe
mov
shlb
or
sub
pop
xor
add
addr16
pop
mov
add
dec
sub
es
lahf
mov
jge
outsb
movsb
in
mov
sub
mov
or
mov
jb
idiv
cmpsl
xor
imul
sbb
lea
cmp
add
jbe
add
mov
pop
push
and
xlat
clc
je
or
add
in
bound
mov
push
enter
adc
jge
popf
loop
pop
cmp
insl
popa
pusha
in
and
scas
add
test
add
xchg
pop
sbb
addb
fsincos
jle
lock
or
push
aas
rcll
mov
xor
adc
rcrl
mov
dec
sbb
roll
jnp
pop
sub
fistl
pop
jns
sbb
jle
cwtl
jae
xchg
leave
adc
xchg
popl
hlt
mov
jge
shlb
pop
jae
add
cwtl
xor
fnop
je
dec
movl
enter
or
xor
out
or
jnp
and
clc
aam
outsl
add
pop
imul
imul
aas
mov
mov
nop
push
stc
clc
xchg
je
add
mov
mov
in
int3
xor
pop
dec
jae
pushf
mov
cmp
xor
jle
or
jl
adc
jge
and
testl
std
xchg
stc
add
test
lret
xor
call
jb
loop
sbb
adc
add
popa
jbe
call
cwtl
outsb
add
adc
shl
jns
cmpsl
dec
andb
lds
or
sbb
cmp
mov
rclb
xlat
sbb
add
pop
mov
leave
mov
fadds
stos
int3
lock
cmp
mov
icebp
dec
imul
xor
insb
adc
xchg
add
or
pushf
jns
xchg
pop
call
scas
push
xchg
xor
and
add
xchg
jbe
cmp
add
mov
dec
sub
add
stc
lret
addb
loopne
cmp
sbb
pusha
inc
push
insb
add
jl
mov
cld
inc
xlat
sbbb
xchg
pop
jp
js
xor
pop
ret
xchg
xchg
inc
jge
and
adc
push
mov
out
adc
cli
loopne
add
jmp
sub
xor
adc
dec
cli
jl
add
inc
push
jmp
sti
push
adcl
push
les
xor
and
cmp
inc
inc
pop
iret
fcmovb
mov
sbb
jecxz
xor
andb
mov
std
add
cmp
sbb
pop
hlt
ret
pop
loopne
inc
shl
adc
jns
inc
mov
dec
push
jl
add
dec
test
cmp
in
and
sbb
add
loopne
mov
sti
push
hlt
scas
mov
jecxz
sbb
add
fidivl
fistps
repnz
mov
and
mov
jns
add
incl
add
pop
subb
xchg
leave
xchg
cmp
call
jns
cmp
scas
inc
add
cmp
add
dec
call
add
lds
add
mov
movsl
cli
sarl
sub
mov
movsb
and
add
test
inc
pop
cmp
sub
adc
aad
mov
pusha
add
fiadds
fmuls
ja
push
mov
idivb
inc
mov
das
sbb
pop
jnp
imul
dec
inc
dec
shlb
xor
out
jne
xor
rcrl
push
pushf
add
out
push
mov
xor
mov
test
fiaddl
fisttpl
lods
sub
mov
xchg
popf
dec
or
cmp
roll
xlat
popa
jge
cmpl
cmc
pop
aad
pushf
push
test
icebp
lds
sbb
add
push
inc
cmp
xor
enter
add
lret
push
sub
pop
mov
and
sbb
push
notl
orb
push
iret
add
cmp
pop
popa
or
bnd
sbb
jp
out
pop
add
outsl
add
ret
or
enter
mov
adc
rolb
test
lods
rclb
inc
push
inc
dec
add
orl
or
aaa
aad
clc
incl
cmp
inc
movlps
cmp
sbb
add
pop
mov
pop
nop
mov
rorl
xor
lret
faddl
pushf
arpl
inc
mov
xchg
dec
mov
cmp
mov
sbb
cmpsl
sub
push
cli
cmp
inc
xor
pop
scas
mov
std
outsb
and
sahf
pop
xor
add
pop
pop
mov
xor
loopne
addl
aas
or
cmpl
jmp
pop
cwtl
lods
add
sub
loopne
pop
out
jno
adc
push
les
pop
push
add
jnp
adcb
test
mov
bound
fstpt
les
lods
add
outsl
add
rolb
sbb
pop
inc
xchg
mov
or
jge
iret
mov
pop
ret
shlb
push
add
push
mov
pop
dec
sub
hlt
or
out
push
add
mov
mov
rcrb
pop
adc
rol
or
add
adc
cwtl
inc
out
jmp
add
mov
ja
fidivrs
add
or
or
call
xchg
pop
jae
mov
mov
jb
imul
sahf
push
and
pop
add
pop
decl
lock
add
gs
and
nop
add
jecxz
add
dec
test
add
jl
jge
pushf
repnz
stos
mov
leave
push
jo
adcb
jno
mov
arpl
bound
clc
dec
aam
ret
pop
test
push
cmp
adc
mov
xchg
loop
sub
icebp
aam
stos
sahf
pop
lock
pop
add
cmc
xchg
dec
mov
js
dec
rcrl
gs
jecxz
add
jb
cs
add
inc
sbb
fs
popl
das
aas
sti
leave
dec
jmp
push
mov
add
pop
adc
bound
insb
fistl
cmc
push
mov
iret
adc
xchg
xchg
xchg
jl
sub
dec
fucomi
cwtl
adc
in
daa
out
and
add
xchg
mov
addl
add
ret
cmp
or
mov
loopne
loop
lcall
xchg
and
xchg
addb
pusha
test
loopne
mov
pop
test
and
sbb
mov
cli
sub
push
pop
addr16
ss
add
xchg
pop
in
xorb
add
movsb
mov
lock
push
in
jge
xchg
cmp
leave
sbb
jo
cmc
call
adc
adc
mov
adc
cwtl
dec
cwtl
push
add
adc
nop
pop
lock
mov
in
cli
data16
out
out
cmp
ds
inc
enter
pop
outsl
add
mov
rorb
mov
push
add
fs
jae
sbb
sbb
ljmp
add
aas
cmp
cmp
outsl
add
mov
es
in
inc
add
push
mov
sub
or
jl
sbb
xor
xchg
sub
cld
mov
mov
pop
lret
shll
enter
add
dec
xlat
loope
aam
shr
xor
inc
loopne
mov
lcall
jmp
jecxz
fisttpll
dec
out
dec
add
xchg
add
repnz
imul
push
xchg
aad
test
adc
rcrb
js
pop
xchg
push
fsubr
mov
xchg
shl
inc
loopne
sub
and
add
add
adc
pop
add
out
jmp
into
mov
dec
pop
invlpg
lods
out
sbb
into
xchg
add
adc
in
add
cmp
popa
cs
repnz
add
xchg
adcb
gs
addr16
sbb
mov
push
lahf
and
add
pop
out
mov
sbb
add
sbb
adc
dec
xchg
rcr
add
test
or
das
negl
mov
xorb
jne
rcrl
adc
test
add
insl
fdivrs
ljmp
push
pushf
cmp
rorl
xchg
adc
lea
ljmp
pushf
xchg
push
and
orb
mov
xlat
add
xor
test
and
push
ficoml
and
add
lds
imul
in
stos
inc
fistpll
xor
jl
sbb
jno
add
mov
clc
andb
nop
cltd
das
scas
adc
adc
sbb
xor
mov
fs
xor
lds
xor
jo
push
push
and
mov
fs
xor
cmp
inc
popa
bound
cmp
sub
jecxz
inc
cmp
push
xchg
sub
movsb
add
xorl
sbb
leave
mov
pushf
dec
pop
outsl
rolb
mov
pop
cmp
jne
cltd
movsb
insb
sub
ret
sahf
add
pop
test
fbld
mov
add
sbb
sbb
ds
sub
test
loopne
dec
mov
nop
add
push
sub
sbb
mov
xor
xor
mov
mull
xor
xchg
sbb
mov
inc
sbb
jne
sbb
lea
sub
fstl
jae
add
xor
shl
jo
in
hlt
adc
push
loop
jb
and
inc
shr
pop
sbb
add
xor
ds
out
leave
sbb
adc
loopne
mov
push
enter
jae
ss
pop
das
loop
inc
data16
jl
mov
setl
cmp
add
rorl
scas
or
stos
push
sbb
and
sbbb
jne
sub
or
cmc
xor
mov
mov
mov
push
and
pushf
add
sbb
int
dec
mov
cmp
les
es
push
add
sarl
out
cmpsl
cmp
jnp
cmp
sahf
out
xchg
jbe
add
ficoms
in
mov
test
gs
pop
pop
cmpsl
loopne
add
jmp
pusha
and
dec
sti
add
cmp
out
clc
push
dec
sarl
or
aam
push
mov
in
jno
les
addb
add
push
iret
and
xor
inc
push
pop
pop
jb
jae
scas
add
add
loopne
insl
pop
ret
out
fcompl
mov
sub
push
sub
test
xor
lds
in
and
or
mov
inc
mov
cli
inc
out
add
stos
testl
cltd
inc
adc
adcb
das
jmp
mov
cmp
or
adcb
and
xor
add
jo
mov
rcrb
sbb
mov
out
sub
sub
mov
xor
add
das
aam
add
xor
stc
rolb
pop
add
clc
or
mov
xchg
call
mov
pusha
sub
cmp
inc
add
divb
mov
ljmp
mov
xor
cwtl
mov
or
mov
xor
add
scas
add
inc
mov
test
pop
add
xor
xor
dec
stos
and
stc
rcl
adc
es
mov
dec
xchg
scas
hlt
inc
add
and
cmp
inc
lahf
aas
test
xor
fadds
rcl
rol
sub
sbb
xor
sub
xor
xor
add
mov
adc
add
sarl
add
mov
or
jmp
pop
test
clc
clc
pop
adc
cmp
ss
jl
cmp
in
add
imul
jmp
jp
rorb
add
sub
orl
flds
into
adc
insl
int3
lcall
jae
pushf
shl
sbb
addr16
mov
rcll
sbb
cmp
sub
cltd
ljmp
leave
jg
add
jmp
dec
jl
repz
inc
repz
fiadds
push
push
and
jo
add
or
dec
add
sbb
mov
cmp
jge
js
pop
imul
out
nop
subb
adc
hlt
or
cmp
add
adc
scas
and
sub
add
sub
fs
aaa
jae
push
lock
insb
rcll
es
lods
add
leave
cmp
cmp
push
xlat
add
jo
es
or
add
mov
inc
dec
shlb
popf
or
bound
orb
lahf
pop
daa
mov
adc
hlt
arpl
inc
jno
test
add
jle
fildll
fcompl
mov
and
or
call
mov
sahf
in
arpl
inc
and
int
add
div
popa
mov
adc
pop
cmp
add
outsb
sub
stos
leave
push
out
cli
mov
jecxz
sub
add
cmp
dec
mov
mov
xchg
xor
es
lock
xchg
pop
dec
xchg
aad
jns
int
jae
aaa
sahf
add
ror
ja
xor
mov
add
pop
sbb
jl
cmp
insl
adc
pop
mov
or
imul
pop
push
lar
ficompl
sbbl
add
out
insl
xchg
pop
add
mov
or
test
dec
imul
and
movb
pop
lret
mov
aaa
pop
mov
movsb
inc
test
mov
mov
pop
xchg
cwtl
jp
cltd
add
pusha
sbb
fst
add
stos
sbb
fisubrl
add
mov
add
adc
rcl
es
xlat
cmp
enter
test
dec
push
shl
sub
orl
cmp
mov
stos
mov
in
add
jo
xor
mov
std
addb
inc
sub
mov
pusha
in
and
iret
push
add
xchg
mov
fdivl
inc
add
pop
jmp
push
les
out
push
and
adc
lods
add
arpl
adc
insl
orl
out
add
clc
je
nop
xchg
pop
mov
sub
xchg
scas
int3
and
add
xchg
bound
xchg
add
fucom
sub
shr
das
add
notl
mov
sbb
insl
test
pop
jns
jmp
cwtl
jo
push
add
inc
jne
jb
insb
jmp
cmp
std
push
mov
xor
or
xor
cwtl
roll
lods
sti
and
rolb
in
test
icebp
sub
add
ds
test
xlat
jg
sbb
mov
mov
dec
sub
dec
pop
cmp
out
inc
sbb
sub
inc
add
cld
dec
xor
ds
inc
push
shl
iret
cld
add
or
sbb
inc
sbb
sbb
or
xlat
arpl
lock
mov
fildll
cmpsl
ficomps
dec
sub
aad
push
jbe
fdivr
ds
add
test
addb
adc
cmp
pusha
mov
js
mov
jl
fsubs
push
repnz
loop
orb
adcb
jae
push
cmpsb
jbe
dec
inc
and
sub
sub
cmpsb
pop
clc
repnz
sbb
fwait
push
dec
rclb
aad
test
pop
into
test
ja
in
rcl
jle
cmpsb
push
jmp
jp
daa
pop
mov
ret
add
movsl
sbb
into
ret
cwtl
add
mov
add
and
or
pop
ljmp
scas
or
ljmp
mov
add
mov
xor
add
js
nop
pop
mov
and
or
stos
loopne
adc
and
icebp
rol
add
out
cli
out
mov
adc
test
jge
pop
push
or
inc
loop
ljmp
loopne
sbb
inc
adc
lahf
or
sbb
cs
add
adc
and
rcrb
mov
popa
fcomps
std
adc
sub
orb
push
mov
cmp
fiadds
hlt
sarl
loopne
arpl
aas
cld
rcll
mov
inc
mov
xor
sub
in
add
sarl
rorb
loop
cmp
imul
cmp
aad
jno
aas
and
push
cmp
cmp
add
adc
pop
fmuls
leave
cli
push
add
pop
fnstenv
sarl
push
or
mov
add
test
out
and
loop
call
aam
leave
pop
in
mov
or
test
ljmp
inc
lret
adc
out
and
cmp
mov
sub
clc
mov
or
adc
ja
cmc
inc
sbb
inc
jnp
and
sub
and
inc
dec
jns
aaa
jbe
adc
imul
enter
testb
xchg
add
xor
xchg
jmp
ss
or
cmp
sahf
push
popa
hlt
cmpsl
adc
out
sbb
dec
mov
add
jle
ja
cmc
scas
pusha
add
out
rorb
add
insl
data16
xor
or
cli
stc
add
ret
push
andb
pop
inc
or
cmp
push
pop
jbe
dec
pusha
cmp
and
add
movsl
out
adcb
shll
xor
insb
lds
sarb
out
jb
mov
sub
and
xor
push
js
add
pop
mov
lea
fadd
icebp
add
mov
js
inc
in
add
mov
jo
mov
add
inc
call
xchg
test
add
nop
xchg
mov
pop
mov
fiadds
add
mov
jle
outsl
lock
pop
add
mov
sbb
cli
loope
xlat
rcl
clc
add
inc
add
mov
insl
lock
xor
daa
dec
add
andb
call
jge
cld
xor
pop
sub
pusha
push
jo
cltd
or
jb
fbstp
push
inc
loop
cmp
add
inc
sub
nop
cmpsl
test
add
mov
mov
sbb
lcall
cmp
hlt
xor
sub
mov
loope
dec
test
add
add
dec
imul
divl
aam
push
cmp
xchg
adc
mov
dec
inc
addl
jno
push
pop
adc
mov
cmp
push
push
sbb
jne
movsb
test
push
pop
mov
shll
cltd
or
adc
and
xlat
rorb
loop
lock
mov
mov
cltd
and
mov
add
out
lret
add
je
das
imulb
dec
sbb
pop
cmpb
pop
aam
mov
ret
enter
loopne
jns
call
fcmovnb
out
jecxz
inc
addl
dec
std
dec
push
inc
and
inc
pop
push
cmpsl
inc
and
add
mov
add
jno
leave
or
je
fnstsw
into
add
add
dec
xor
nop
movl
iret
mov
xchg
jmp
adc
jbe
cli
ret
lret
movb
inc
mov
xlat
add
leave
add
jge
jg
jb
pop
mov
nop
dec
fucomi
pop
dec
jle
add
jp
cmpsb
jl
out
add
shr
rorl
fiaddl
push
sbb
pop
mov
and
xchg
or
xchg
enter
sahf
add
daa
lahf
fsubl
fiadds
popa
xorl
div
call
push
aad
cmp
mov
imul
hlt
repz
cld
enter
mov
and
mov
pop
add
xlat
fst
adc
clc
roll
call
sbb
aaa
ret
or
sbb
add
fnstenv
adc
xor
lock
fbstp
add
jnp
test
xchg
arpl
mov
dec
into
cwtl
add
mov
cmp
and
push
add
xor
dec
sbb
outsl
add
jbe
ret
jne
sbb
pop
lods
arpl
sbbb
pop
loopne
or
in
mov
adc
mov
cmp
dec
out
add
mov
mov
push
repnz
jbe
cwtl
mov
push
jnp
das
inc
push
test
sti
add
sub
cld
add
mov
je
nopl
mov
sub
jns
or
and
xchg
ljmp
jge
sbb
add
sub
xchg
pusha
xchg
ret
sub
and
inc
int3
add
xor
fisttps
call
imul
mov
add
or
push
add
idivl
loope
pusha
adc
sub
mov
cmc
add
fiadds
stc
sub
cmpsl
cmc
mov
add
inc
pop
and
jbe
dec
fisubrs
mov
fldlg2
add
xchg
jmp
test
int
incl
mov
add
out
pop
loop
jns
pop
pop
xor
scas
push
mov
and
mov
daa
orb
add
xchg
sub
repz
orl
sti
mov
dec
rolb
cmp
jo
out
jo
jp
add
dec
xor
imul
nop
add
insl
shrl
sbb
pop
mov
mov
cmp
jo
lcall
mov
sub
jp
imul
shlb
mov
in
mov
mov
movb
sub
add
je
addr16
incl
les
push
push
shl
add
xchg
repz
sub
mov
sbb
jno
and
push
dec
or
outsb
call
jbe
add
mov
test
imul
dec
pop
arpl
add
iret
mov
push
js
add
shll
jae
pop
repz
cmp
xchg
cmp
jbe
in
cmp
fbstp
adc
jle
add
sbb
pop
add
pop
pop
int
xchg
sub
addr16
sub
in
cmp
cld
jle
add
mov
insl
dec
sub
push
sub
mov
addb
jge
xchg
andl
cltd
sbb
roll
sub
and
leave
push
or
or
push
add
sbb
mov
push
mov
jno
adc
mov
movsb
push
sbb
inc
mov
andl
scas
mov
js
xchg
jl
add
fadds
pop
test
mov
movsl
repnz
mov
or
paddsb
pop
sbb
xchg
fistpll
aas
leave
dec
pop
xchg
xor
out
mov
cmp
pop
sub
cmp
mov
jmp
adc
push
sbb
add
and
fucomp
adc
imul
mov
push
dec
add
cwtl
das
aas
add
mov
gs
pop
pusha
fnsave
push
lods
std
pop
dec
cmp
into
mov
cmp
sbb
jp
dec
lret
sub
add
sbb
rclb
or
in
aas
xchg
mov
popf
jge
addb
scas
mov
pop
cmp
add
cli
sti
lret
dec
call
pop
mov
movb
mov
sub
mov
mov
bound
mov
mov
imul
and
lret
dec
xchg
lods
lcall
adcl
inc
shl
jo
movsb
sbb
mov
add
fdivl
fnstcw
fmul
dec
jne
dec
inc
mov
in
push
pop
sbb
add
ds
cmp
test
adc
mov
ds
add
cwtl
aas
pop
cwtl
nop
loopne
sbb
cmc
mov
add
push
dec
setg
jp
jge
mov
add
aam
add
jno
lret
adc
pop
xor
xlat
push
adc
sti
add
lods
jb
sbb
adc
add
nop
jnp
xor
or
mov
sbb
movsl
lds
scas
jae
add
mov
sbb
or
xchg
and
push
mov
add
aas
cmc
test
xlat
pop
lret
ss
dec
leave
push
out
movsb
and
inc
repnz
cs
popa
mov
bound
xorb
aam
cmp
lahf
xchg
xor
add
sbb
pop
add
push
jno
and
jnp
test
or
aam
add
add
test
lock
sahf
push
imul
inc
push
out
ret
add
sub
rclb
push
cmpb
fs
xchg
pop
int3
fnstsw
inc
fmull
sub
out
add
add
out
xlat
pop
sub
femms
or
jecxz
mov
mov
mov
pop
bndstx
push
imul
sahf
add
xchg
inc
mov
add
push
and
data16
icebp
addb
pop
out
lcall
rclb
dec
jp
xor
das
inc
loopne
pop
add
fisubrs
idivl
aam
fldenv
cmpsb
cmp
adc
push
cltd
fiadds
cmp
pushf
inc
and
insl
cmovb
jb
adc
sbb
loopne
xchg
add
mov
adc
inc
aam
int3
dec
roll
ds
cwtl
cmp
inc
stos
rol
adc
int3
push
add
and
add
sbb
cwtl
das
sub
add
sub
add
jge
jae
cmp
pop
idivl
mov
lods
aam
add
addr16
repnz
sub
andb
xor
inc
loopne
push
sbb
sbb
ret
aaa
or
mov
pop
pushf
xor
int
and
cmp
in
wbinvd
add
and
push
popf
into
push
mov
cld
repz
bound
sub
ja
add
add
fcomps
push
add
push
dec
sbb
addr16
inc
jecxz
lods
rcrb
sbbb
ret
or
xor
add
mov
mov
mov
mov
popa
lret
repnz
testb
pushf
pop
add
scas
adc
sbb
add
jns
jnp
fisttpll
loopne
gs
jecxz
jae
or
lods
popf
lahf
and
and
stos
lds
push
mov
pop
ds
lea
je
sbb
dec
enter
test
cmp
rcll
mov
add
int3
jno
scas
in
stos
int3
out
ja
js
add
pop
adc
shr
nop
dec
dec
repnz
loopne
inc
push
add
mov
xor
sub
pop
add
dec
mov
mov
mov
cwtl
jge
xor
cs
jb
jo
jo
aad
add
jle
xchg
add
scas
xchg
dec
pop
and
jns
add
es
dec
cli
add
push
mov
xor
cmp
in
jecxz
push
cmpsb
je
lret
cmp
dec
push
sarl
mov
add
push
jge
mov
arpl
pop
mov
cmp
andb
test
mov
ljmp
pusha
daa
xlat
cmpb
cltd
xchg
ret
sub
jmp
cld
add
jne
movsb
gs
pop
add
je
push
pop
xor
sub
inc
test
sub
sbb
std
jns
xchg
fmuls
add
cld
fwait
or
inc
pop
imul
lea
sbb
push
icebp
jb
add
cmp
push
push
mov
add
and
sbb
addr16
fdiv
repz
mov
pusha
jbe
jae
sbb
pop
inc
mov
pop
jp
and
mov
sub
movsl
push
sbb
cld
hlt
mov
add
dec
pop
mov
push
cmp
add
addr16
daa
cltd
mov
cwtl
imul
add
pop
leave
lahf
call
sub
iret
loope
mov
in
les
mov
sbb
add
dec
pop
jae
leave
ja
enter
mov
pusha
ret
lea
add
sub
add
jle
imul
add
inc
pop
cmc
add
inc
jl
dec
clc
insl
hlt
cli
dec
jmp
add
pop
jne
mov
rcl
ficomps
jbe
cmp
test
in
sub
push
add
lahf
lds
lock
scas
movsb
insl
out
mov
ret
mov
pop
ss
in
popf
add
hlt
bound
loope
sbb
rorb
push
or
test
test
stos
adc
roll
in
loope
xchg
leave
add
in
add
imul
and
mov
pop
dec
call
dec
add
dec
add
std
notl
loope
pushf
xor
pop
add
daa
mov
jnp
arpl
push
adc
lods
das
shlb
or
add
xchg
add
pop
xor
fiadds
jno
sub
cld
jnp
adc
add
push
lods
jecxz
gs
add
repnz
xor
in
sub
xor
and
or
jnp
sub
xchg
call
jae
jge
ljmp
mov
dec
xor
mov
add
sti
rolb
imul
lods
lcall
push
insl
lock
jmp
cwtl
add
movsl
dec
fnstsw
sahf
and
sbb
mov
mov
es
mov
dec
add
loop
mov
pusha
cmp
cmc
or
mov
or
push
movsl
popa
add
cltd
xlat
mov
xor
cmp
enter
mov
mov
stos
dec
sbb
fwait
push
shrb
leave
sbbb
repz
sub
push
fildl
push
xor
dec
push
push
lods
sbb
dec
add
and
push
push
shrl
and
add
lods
mov
loopne
fnstsw
push
mov
int3
dec
stos
icebp
popa
add
fcmovnu
xor
adc
cs
mov
cmp
ret
aam
pop
out
fdivrl
pop
out
lds
stos
dec
add
ja
cmp
sahf
cmpb
add
or
mov
pop
dec
xchg
push
add
aam
inc
pop
jecxz
mov
jo
call
into
orl
inc
cwtl
inc
add
adc
fisubrl
sbb
rcrb
aad
pop
mov
or
out
or
push
dec
xchg
addr16
inc
add
adc
mov
mov
mov
add
jle
idivl
inc
pop
pop
sub
in
fdivrl
pop
std
int3
aas
mov
push
or
push
ds
and
mov
popa
psubb
push
sbb
mov
cld
out
fs
jle
pop
push
sbb
lock
sbb
inc
xchg
shr
stc
fisubrl
mov
repnz
inc
shlb
jne
sub
stc
sbb
testl
mov
out
add
ds
gs
inc
dec
aas
jp
xor
jb
dec
inc
lds
add
sbb
mov
add
pusha
cmc
testl
mov
andb
out
inc
dec
loop
mov
pop
push
jg
pop
jge
shrl
mov
ss
mov
mov
xchg
cmp
pusha
push
add
push
sbb
bound
pop
xchg
cmp
aaa
jnp
add
jmp
xlat
sub
inc
xor
push
xchg
adc
scas
xor
pop
mov
adcb
push
push
fidivs
add
add
addb
inc
les
add
imul
stos
adc
stc
popl
fdivrl
sub
add
js
and
js
cmc
lock
adc
lock
xchg
leave
adc
dec
lods
daa
mov
lret
jae
push
push
fidivs
mov
add
jmp
popf
or
pop
arpl
in
sub
add
xchg
ja
xchg
cli
jns
push
cmp
jno
cmp
mov
mov
inc
add
dec
push
mov
add
xchg
pop
mov
add
xchg
dec
cmp
loop
je
add
add
xlat
jl
cltd
push
pop
pop
out
movsb
jae
andb
daa
int3
aad
add
mov
fstpt
and
loopne
nop
hlt
add
sub
repnz
add
pushf
inc
jno
leave
das
sub
in
adc
add
aas
or
push
jle
fnstsw
call
ja
pop
xlat
int
or
faddp
lock
pmaddwd
inc
and
insl
lods
mov
jle
jns
add
pop
rclb
sbb
mov
lods
and
fucomi
notl
fs
sbb
loope
repz
sbb
xchg
pusha
dec
daa
popa
add
fwait
shll
mov
add
push
imul
stc
xor
rorb
fs
and
jae
add
and
insl
xor
mov
or
lcall
pop
mov
or
pop
adc
jle
add
pop
push
hlt
mov
aam
mov
icebp
aam
roll
or
xor
xchg
test
cli
call
mov
mov
mov
mov
cs
dec
push
sbb
sub
sbb
iret
cmp
add
fimull
add
sub
test
jmp
jge
out
add
fwait
jns
dec
sbb
add
add
push
clc
add
rclb
add
mov
in
insl
push
movsl
imul
sub
ret
pop
xchg
lret
test
inc
js
cmp
popa
add
lret
xchg
add
xchg
sub
dec
cmp
sub
repnz
jecxz
sbb
pop
push
cmp
adcb
bound
sbb
inc
sbb
add
pop
add
pusha
adc
fstpt
add
mov
fwait
and
cmp
and
jecxz
loop
enter
push
or
adc
jecxz
jle
mov
dec
add
addr16
iret
je
push
cwtl
repz
dec
add
hlt
and
add
fwait
mov
in
or
add
cmp
ret
mov
cmp
mov
call
jg
bound
mov
and
clc
nop
in
or
and
call
stc
fistl
or
add
xchg
dec
or
hlt
xchg
add
jl
or
cld
cmp
add
sub
push
or
enter
jge
inc
sbb
add
mov
or
dec
pop
sahf
shrb
dec
insl
int3
add
xchg
std
push
aam
sbb
imul
rclb
xor
enter
scas
and
jno
xchg
cmp
in
mov
test
mov
hlt
dec
mov
mov
add
xor
sub
in
in
out
xor
aam
xor
jge
push
and
dec
pop
psubb
add
aas
xchg
mov
loope
call
aam
or
pop
mov
mov
addl
push
nop
jg
and
cmpb
adc
adc
fildl
call
outsb
cmp
pop
and
jp
mov
jg
test
test
mov
rcl
mov
sub
mov
and
fiadds
int3
xor
pop
test
sbb
adc
and
or
sub
xor
cmp
add
push
rcrb
pop
cmp
xor
es
mov
mov
mov
add
addb
and
add
jnp
into
push
movsb
or
add
ret
jecxz
nop
xor
aaa
js
test
not
jg
pop
mov
jbe
xor
inc
pop
sub
and
sub
fstl
jbe
and
ret
push
pop
adc
nop
fisubs
sbb
data16
jmp
xor
mov
outsb
test
inc
rorb
add
jno
in
pop
in
loopne
lahf
mov
mov
sub
cmp
test
in
cmpsb
adc
add
dec
mov
add
jg
hlt
xor
add
add
jp
js
add
jae
pushf
in
add
inc
jno
popf
add
movsb
push
pushl
roll
scas
fnstcw
into
add
or
imulb
push
mov
out
rorl
test
subl
pusha
and
add
mov
xor
test
cmp
enter
sarl
movsl
int3
add
test
pop
adc
adc
or
lds
pop
cmp
inc
sub
sub
loopne
stos
xchg
dec
add
add
loopne
adc
dec
repz
xchg
dec
mov
mov
inc
aam
add
lds
aas
and
dec
lahf
fadds
add
jb
es
aam
add
adc
das
push
stos
push
ret
or
mov
xor
push
addr16
mov
push
dec
pop
xor
add
xchg
iret
push
lret
adc
add
pop
lds
or
mov
jo
add
ss
sar
jae
mov
sbb
mov
lods
iret
in
outsb
call
mov
sub
cmp
xor
sti
jnp
loopne
add
test
imul
call
je
jne
sbb
fadds
or
das
cltd
sbb
or
or
adc
add
mov
shlb
push
sbb
repz
add
mov
sbb
hlt
in
iret
push
jae
adc
scas
pop
adc
and
call
or
jns
iret
pop
cmp
dec
lds
ret
mov
in
rorb
scas
xor
mov
xchg
add
cmp
nop
inc
xor
adc
add
movsl
push
lret
pusha
lret
cli
mov
in
fildl
dec
lcall
daa
inc
and
aas
hlt
sub
mov
rorb
cld
sub
add
jg
xor
push
dec
jl
es
and
fsubrl
and
pusha
sarb
adc
add
add
fwait
bound
push
add
imull
sarb
mov
add
sub
sub
add
cmp
ljmp
mov
cwtl
enter
jp
sub
test
jecxz
cmp
mov
add
ret
sti
push
or
lfs
dec
mov
sub
xchg
add
cmp
sbb
jae
mov
int3
mov
mov
subl
sti
hlt
push
add
stc
mov
sbbb
scas
adc
loop
repz
fmuls
add
lds
mov
and
int
test
cltd
pop
dec
add
in
in
xchg
cs
adc
outsl
jp
xchg
lock
cmp
mov
call
fadds
mov
popa
arpl
gs
jge
pushf
test
ljmp
repz
add
nop
sbb
jmp
mov
sbb
repz
jge
jl
pop
mov
mov
loop
pop
arpl
mov
push
add
lcall
pop
sbb
add
inc
sbb
roll
imul
shlb
mov
sbb
push
mov
shlb
or
pop
sub
inc
int3
sbb
pop
pop
fstl
lret
sbb
cmp
ljmp
cld
cmp
aad
mov
mov
and
rcr
cmpsb
mov
lods
mov
arpl
subb
mov
divps
sbb
cmp
pop
pop
popa
add
add
and
mov
add
adc
movsl
mov
and
cltd
rorb
cmp
cmpsb
adcb
jle
in
fldl
jbe
jg
cmpsl
inc
or
xchg
add
test
inc
shl
addb
mov
out
pop
add
xchg
cli
and
pop
int
lds
mov
mov
and
andb
sbb
mov
subb
jmp
add
bound
add
inc
fcoml
xor
inc
pushf
adc
outsb
pop
sbb
add
test
jnp
fstpl
pop
cmp
push
and
push
test
xchg
cmp
ja
adc
test
adc
or
mov
mulb
mov
xor
adc
fmuls
add
dec
xchg
les
out
add
pop
scas
jns
mov
xor
iret
mov
add
rcrb
add
sbb
push
jae
movsl
or
adc
sbb
push
cli
jmp
cld
hlt
inc
es
cmp
std
mov
add
loop
test
add
pop
shll
cwtl
orb
orl
jb
imul
outsl
ret
mul
adc
add
cmpsb
shlb
lcall
loopne
mov
inc
paddw
jge
sub
dec
das
add
xchg
cs
leave
in
xor
add
pop
int3
sub
mov
popa
jp
add
subl
andb
aam
pop
cwtl
sbb
ja
and
sub
mov
rcll
nop
es
add
xchg
inc
add
sbb
dec
jmp
mov
in
arpl
clc
jbe
add
pushf
adc
in
dec
loop
add
sub
inc
xchg
mov
out
mov
int
add
sub
jae
lea
adc
loop
inc
test
add
nop
or
push
cmc
pop
loope
push
or
mov
mov
fadds
lock
ljmp
push
icebp
ret
xlat
andb
mull
sbb
xlat
in
mov
add
test
shl
jns
add
ficomps
and
add
pop
dec
mov
pop
cmc
lcall
pop
aaa
scas
pop
push
lret
roll
push
jp
sub
xorb
enter
mov
xlat
inc
add
mov
arpl
sub
shll
aam
es
andl
xor
in
cmp
mov
lock
hlt
in
adc
repnz
out
sbb
out
lahf
outsl
and
inc
push
sub
sub
int
fstps
pop
xchg
fadds
sub
scas
add
add
xchg
add
sub
add
add
call
femms
out
mov
add
mov
or
mov
add
mov
enter
test
mov
andb
outsb
add
pop
add
mov
add
bound
test
jb
popf
sub
arpl
imul
scas
pop
mov
mov
cmp
mov
mov
sub
lret
add
mov
pop
add
mov
sahf
sti
xchg
add
lret
lcall
push
dec
pop
jle
ss
sti
rcll
add
into
mov
or
add
out
call
or
pop
inc
daa
test
jl
jo
movsb
or
add
pop
cmpsb
adc
ret
or
inc
clc
test
xchg
mov
mov
rcll
jle
lods
pop
mov
add
cmp
out
sbb
in
push
sbbb
sub
mov
push
inc
cltd
pop
insb
int3
roll
adc
std
lret
or
sub
jecxz
lahf
sahf
nop
test
loop
sbb
dec
or
lret
add
iret
and
verr
dec
pop
push
add
inc
inc
mov
icebp
loopne
imul
test
or
cmc
les
cld
addl
xchg
subw
fldenv
addb
pop
sbb
ret
add
pushf
fidivl
add
xchg
fwait
pop
dec
lcall
xchg
outsb
pop
xchg
cmp
gs
mov
dec
addb
test
es
jo
subl
pop
das
mov
adc
push
je
popa
push
cmpsl
std
sub
les
mov
dec
adc
or
pop
mul
in
cmp
sbb
clc
adc
and
ret
arpl
xchg
clc
mov
cmp
test
xchg
fistps
pop
cmp
xchg
mov
adc
mov
lock
adc
add
push
push
arpl
mov
push
addr16
add
jge
movsl
lods
jne
incb
pushl
jbe
sub
loopne
inc
add
je
mov
test
sbb
ret
cmp
jg
add
stos
adc
stc
fmuls
mov
pop
mov
call
pop
sbb
add
pop
aad
or
in
in
jg
dec
shl
add
push
push
xlat
roll
xchg
std
sub
orb
loopne
push
mov
xor
add
mov
dec
enter
call
push
inc
in
inc
mov
ret
and
mov
call
fidivs
or
dec
mov
cmp
push
xchg
fmul
cmp
ds
mov
rcll
xlat
movsl
or
js
int
imul
pop
ss
jl
call
test
push
add
dec
sbb
lock
xorb
lds
mov
dec
push
mov
dec
sub
mov
lret
pushf
pop
popf
fistl
xchg
cltd
and
push
mov
mov
repz
sub
or
or
orb
push
and
xor
adc
jle
sbb
push
pusha
mov
rorl
xor
test
adc
cltd
add
sbb
fmull
xor
pop
mov
add
cmc
xor
sar
dec
dec
cmp
test
push
hlt
ljmp
push
jnp
add
iret
ficoml
leave
add
jno
scas
mov
pop
jecxz
cwtl
orb
cmp
mov
add
or
push
test
add
jno
jmp
adc
push
aam
movsb
xchg
into
pop
ret
mov
or
mov
pop
lods
sub
sbb
loop
cmp
repz
sti
add
sahf
aam
ja
add
jno
daa
push
adc
jnp
xchg
popa
fcmove
mov
add
jae
mov
fldcw
sti
mov
cwtl
and
push
xor
in
mov
sbb
testl
xchg
xor
cmp
lods
jp
dec
sub
cwtl
xor
popa
pop
jno
mov
jb
mov
orl
or
dec
insl
xchg
cs
int3
push
in
repnz
outsl
jne
pusha
push
pushf
ds
andb
movsb
sbb
jo
fwait
add
in
lods
jp
ds
add
dec
js
or
mov
add
ss
cltd
inc
sub
push
ja
aas
imul
adc
fimuls
data16
mov
lahf
push
int
sbb
cs
sbb
sub
push
adc
jbe
xor
aad
mov
inc
rolb
or
xor
mov
add
adc
xchg
inc
mov
out
dec
cs
add
mov
add
add
jne
xchg
adc
inc
popf
les
sbb
push
mov
insb
les
mov
mov
inc
xchg
dec
add
xchg
mov
pop
sahf
jg
sti
pop
loopne
clc
dec
jl
test
inc
add
dec
pop
jne
and
dec
stos
xor
inc
lock
mov
shll
out
andl
fnsave
add
sub
dec
cmp
cmp
sti
mov
adc
sbb
jg
pop
xchg
add
inc
and
dec
ret
dec
fists
jne
sbb
testb
movsb
rcrl
daa
mov
testb
adc
sub
pop
cmp
add
movsb
pop
shlb
push
fnsetpm(287
xor
jnp
add
add
dec
xor
add
pop
add
pushf
jg
fsubrl
or
inc
call
sbbl
adc
add
pop
push
dec
pop
stc
jne
fildl
rol
pop
mov
lods
push
or
mov
loope
sub
push
call
mov
push
jmp
dec
or
add
test
add
add
decl
inc
ficoms
or
xorl
sbb
loopne
jbe
jl
pop
ret
popa
rorb
lcall
push
ja
pop
icebp
adc
mov
jne
scas
orb
xlat
push
push
pop
sbb
leave
jg
add
mov
pop
push
aaa
mov
sbb
popa
add
fadds
xor
mov
cmp
ljmp
add
inc
rclb
xchg
and
fnsave
cmp
testb
fmull
jmp
mov
mov
xor
cld
add
jl
pop
push
cmc
push
cmp
pushf
push
pmullw
mov
cmp
add
in
add
test
xchg
add
aas
cmp
sub
add
xor
test
daa
ret
int3
add
add
addr16
sub
jmp
sbb
add
mov
adc
leave
sub
in
cli
and
in
pop
aas
cld
add
gs
pop
xor
add
rclb
movsl
roll
in
sub
decb
xchg
and
mov
pop
fildl
add
inc
insb
mov
aam
xor
xchg
enter
add
mov
scas
pop
and
fcompl
pusha
leave
inc
mov
call
mov
das
andl
push
lods
xlat
cmpb
cmp
add
adc
out
xor
and
sub
xor
das
adcb
pop
dec
aas
sub
orb
subb
jmp
add
cltd
cmp
cmp
xchg
and
push
jg
mov
in
jp
pop
xor
loop
sub
repz
mov
sti
add
xor
test
insl
sarl
add
dec
aas
push
mov
pusha
jae
add
dec
cmp
adc
jo
push
call
fstps
test
cld
xchg
mov
cmpsl
loop
test
xor
adc
jle
and
adcb
xchg
dec
call
shlb
negl
add
jo
pop
xchg
int
add
and
adc
add
out
mov
add
aad
pop
jle
inc
sub
rcl
inc
add
sbb
and
add
std
jmp
xchg
mov
mov
les
andl
fadd
xor
lret
pop
lcall
sub
ds
es
xchg
mov
pop
scas
add
push
add
loope
mov
sub
adc
les
rorb
add
mov
jge
jne
add
mov
ja
jp
mov
push
add
inc
dec
fnstenv
push
push
test
dec
hlt
dec
cmp
int
fistps
adc
nop
insl
add
mov
mov
stos
add
mov
dec
mov
cmp
mov
add
inc
mov
dec
and
les
inc
fsubl
xchg
dec
mov
add
lcall
xchg
adc
repz
lock
or
xchg
or
lods
lock
and
test
xchg
adc
out
or
xor
sbb
jns
pushf
fidivl
jg
add
jle
ds
or
out
dec
enter
push
repz
pop
pop
lods
and
cmp
loope
out
addb
add
test
cltd
scas
sbb
add
leave
jbe
xor
adc
jae
adc
mov
sarl
push
lods
out
and
or
scas
inc
mov
in
add
mov
add
pushf
cmp
stos
pusha
repnz
add
cli
rclb
testb
arpl
lret
cs
js
add
xcrypt-cfb
cmpsl
and
mov
jp
subb
inc
pop
mov
mov
jmp
xchg
cld
cmp
dec
ja
mov
jo
add
push
cmpl
sar
nop
sub
sub
xchg
mov
ds
fwait
mov
and
add
push
out
cmp
mov
cli
xlat
aas
test
test
add
adc
daa
rcrb
ficompl
insb
pop
jae
pop
lahf
stos
movsb
mov
push
lods
jbe
and
gs
clc
pop
mov
cltd
es
mov
loopne
aaa
pop
jne
jl
push
enter
loop
push
icebp
pusha
test
cmp
mov
fmuls
sti
push
add
movsb
inc
add
arpl
add
jbe
lcall
jnp
sarb
xchg
add
dec
mov
lds
sub
push
aam
stos
add
out
pop
dec
test
cmp
jb
jmp
fldcw
es
mov
jecxz
cld
add
cmp
add
in
sbbb
xor
test
rclb
enter
sbb
leave
dec
rorb
add
arpl
or
sub
add
shll
sub
add
or
icebp
push
add
push
add
rcll
add
daa
xchg
mov
pop
incb
push
pushf
cld
sbb
sub
push
sub
lcall
fs
sub
filds
and
es
mov
aad
or
fistpl
loopne
sub
or
add
adcb
shrb
out
pop
xchg
add
stos
mov
inc
cld
inc
jnp
fwait
jp
add
pusha
mov
out
fidivl
or
sar
add
inc
push
xchg
add
jbe
das
sahf
inc
aad
add
in
out
inc
mov
add
push
mov
xchg
add
adc
mov
jmp
andb
xchg
imul
xor
pop
jl
and
or
fstpl
cmpsb
mov
mov
mov
push
pop
lods
ret
add
subb
cwtl
cmp
cmpb
stos
add
xchg
cmpb
xor
into
inc
mov
sbb
add
mov
sbb
mov
sarb
xchg
jo
enter
data16
test
add
xor
out
repz
sub
cmp
jno
fisubs
popa
lds
pop
mov
popa
sub
fmuls
add
jge
push
xchg
adc
add
dec
fisubrs
xor
bound
push
xchg
pop
inc
enter
mov
add
push
inc
aaa
add
loopne
out
dec
repnz
add
jne
outsb
loope
or
cld
mov
pusha
pushf
fcompl
pop
pusha
xchg
loopne
mov
sub
sub
inc
xchg
aas
in
add
out
inc
xchg
aam
add
dec
les
add
loop
jno
xor
add
push
xchg
out
add
push
sti
mov
scas
lods
iret
in
sub
push
add
sbb
fidivs
int3
adc
andb
mov
add
mov
call
std
mov
out
add
rol
adc
inc
dec
pushf
sub
add
sbb
insb
mov
aad
and
cwtl
pop
jg
cld
mov
xor
xor
mov
fimuls
sbb
mov
pop
aam
adc
scas
dec
push
je
inc
loopne
repnz
pop
movsb
add
cmpl
sbb
and
aam
dec
loope
imul
jns
dec
sbb
mov
call
add
test
in
je
rolb
out
orb
xchg
add
scas
shlb
dec
test
loop
sub
xchg
inc
scas
adc
loopne
pop
add
popf
jmp
add
xor
iret
inc
call
leave
and
arpl
jo
bound
ljmp
dec
xor
pop
mov
dec
push
test
xchg
loop
sbb
push
cmpsb
fwait
push
cwtl
adc
xor
cmp
roll
mov
notl
add
or
jbe
movsb
xor
js
dec
das
stos
add
or
lcall
add
or
xorl
test
js
pop
jae
jnp
dec
fsubs
fstpt
sarb
call
jnp
ja
add
fistpll
xchg
mov
les
imul
nop
lahf
psrlw
sub
out
adc
or
daa
je
setns
cmp
loope
cmpsb
out
shrb
sub
or
and
inc
or
test
fs
cmp
aad
and
and
mov
xchg
call
jae
psrld
mov
add
fst
add
mov
sahf
movsbl
out
add
add
cmp
cltd
adc
sub
mov
add
push
out
pop
cmp
xchg
mov
or
jns
add
dec
rcrl
push
jae
add
push
add
into
aas
incl
xor
xor
dec
leave
add
mov
decb
cmp
imul
pusha
mov
clc
mov
bound
in
add
sbb
stc
icebp
enter
stos
push
inc
xor
add
cwtl
and
jg
cltd
mov
lret
or
fistl
jg
add
rcrb
movsb
movb
int
jmp
jle
and
bound
icebp
push
add
testb
adc
imul
add
add
mov
mov
push
dec
xchg
shlb
cmpsl
outsl
push
xor
sub
fisttpl
scas
mov
mov
sbb
jmp
test
iret
add
fsubrp
popl
add
aas
pop
xchg
mov
aam
push
cmpsb
int3
fwait
jns
add
cld
js
add
push
lods
out
stos
add
aaa
ret
or
xchg
inc
jg
std
xor
js
pop
daa
add
dec
pop
lods
pop
or
orb
or
xchg
lret
cmp
adc
xor
cmp
std
and
mov
lea
icebp
aam
jae
mov
or
xchg
imulb
fisubrl
and
mov
adc
or
push
neg
sub
jo
movsl
add
sub
jl
mov
sub
push
sbbl
mov
clc
xchg
adc
pop
shll
in
add
ss
dec
add
cmpsb
mov
cld
dec
jle
in
popf
ljmp
cmp
xlat
add
sub
and
fdivs
push
sub
and
add
jo
lods
lcall
pop
pop
mov
clc
jo
push
imul
xor
push
add
cmp
add
mov
mov
or
add
out
xor
pop
cmpsl
or
loop
and
out
leave
rclb
cmpsb
mov
fwait
loop
add
push
and
imul
aas
sbbl
lret
clts
sbb
outsl
in
out
icebp
loop
jns
adc
shlb
pop
add
sub
lcall
push
orb
aas
fimuls
andb
or
sbb
out
or
or
lods
adc
test
adc
enter
jae
popf
adc
gs
jb
cld
arpl
cmp
sets
adc
add
loope
xchg
inc
test
daa
aad
hlt
je
or
adc
push
sbb
rclb
divb
push
add
test
xor
call
jge
das
add
js
jbe
cmp
sbb
fidivs
mov
inc
xor
mov
lea
add
repz
cld
leave
sub
int3
mov
inc
bndstx
subb
outsl
adc
mov
cmpsb
jg
dec
dec
ret
push
popa
sbb
into
xchg
push
daa
andl
xchg
pop
mov
mov
scas
fs
addb
xor
cmpb
jmp
add
dec
test
test
repz
mov
lods
jae
pop
xor
out
inc
mov
add
fnstenv
or
ljmp
jo
cmp
push
mov
rorl
je
add
and
adc
sub
add
jo
add
loopne
xor
lods
or
add
movsl
xchg
fsubrs
and
sub
lcall
inc
iret
mov
mov
jecxz
cmpsl
jl
add
xchg
rclb
pop
aaa
out
mov
cli
cmp
ret
std
cmp
mov
stc
dec
inc
jbe
jno
push
loope
and
and
lods
cmp
mull
and
mov
add
and
add
cmc
testb
subl
roll
leave
popf
add
push
cli
imul
pop
dec
add
test
in
lods
bound
clc
movsl
pop
out
cld
and
jnp
cmp
stos
mov
push
pop
stc
dec
sbb
mov
or
cwtl
cmpsl
cmp
out
je
rclb
rolb
dec
inc
jb
jbe
xchg
mov
jl
mov
or
and
movaps
mov
mov
or
xchg
cmp
xor
add
mov
xor
jo,pt
clc
add
out
test
lods
test
inc
inc
inc
test
cwtl
sbb
push
dec
pop
mov
out
js
add
pop
pop
add
loopne
pop
push
int3
add
inc
mov
aam
stc
mov
fidivl
inc
arpl
fsubl
rcrb
cs
sbb
adc
mov
stos
stos
mov
adc
sub
insb
adc
fistpl
add
inc
icebp
mov
aam
cmp
jo
out
cmp
or
in
shll
mov
or
mov
xchg
jp
add
call
mov
add
bound
push
pop
stos
aas
cli
loopne
jo
int3
add
lock
pop
mov
adc
add
mov
das
loopne
jns
add
loope
test
lods
pusha
push
addl
imul
add
jle
dec
aas
cmp
mov
ret
loopne
aaa
xlat
cmc
add
mov
rcr
cmp
and
in
add
mov
mov
adc
inc
add
cld
fdivrl
cmpsl
pop
fnstcw
out
push
mov
clc
cld
lods
mov
add
pop
push
in
cmp
xchg
or
or
lods
xchg
cs
stc
add
or
hlt
mov
jo
add
divl
inc
add
pop
sub
notb
pmaxsw
sbb
xchg
fiadds
out
or
sbb
enter
sbb
movsl
hlt
sub
ljmp
or
loop
outsl
mov
fcompl
and
pop
dec
test
aas
pop
roll
cs
stos
push
outsb
out
push
sbb
fwait
iret
mov
add
lock
mov
shll
push
xor
in
rclb
sbb
push
sti
enter
xchg
cld
arpl
and
sub
adc
mov
imul
xor
jl
push
mov
mov
cltd
hlt
and
shlb
cmpsb
cmp
icebp
pop
pushf
faddp
call
push
shlb
mov
add
cmp
and
in
shlb
mov
movsb
pop
fs
mov
cs
add
popa
test
and
sbb
scas
fbstp
cmp
incb
pop
shll
and
add
fidivl
push
insb
icebp
and
xchg
dec
add
movsb
insb
mov
cmp
in
in
cmp
ret
loopne
mov
add
fisubrs
divb
xlat
testb
push
lods
pop
lods
fwait
xchg
xorb
add
sub
aaa
leave
mov
adc
xor
add
push
cmp
xlat
add
mov
and
xchg
mov
ljmp
add
add
into
xor
and
xchg
fidivrl
add
jle
iret
repnz
adc
mov
mov
outsb
jecxz
out
fidivs
add
add
adc
mov
xor
jno
or
aaa
and
std
xchg
add
or
or
cwtl
add
push
movsl
shll
pushf
cli
mov
iret
aas
xchg
add
add
rcrb
sub
add
in
and
add
mov
pushl
clc
adc
ja
xchg
std
iret
inc
sarb
add
cmp
push
lods
mov
add
jno
xor
mov
jg
rolb
inc
add
aam
add
jbe
cmp
pop
jl
addb
pop
cld
adc
sbb
and
ds
add
and
pop
mov
jo
push
sbb
dec
test
add
aaa
mov
sub
push
add
mov
or
add
daa
xchg
jo
push
mov
rolb
sub
sub
lods
pop
sti
sahf
loop
pop
inc
dec
or
popl
push
movsl
inc
xchg
add
stc
aaa
and
stc
cmp
adcb
adc
mov
mov
mov
rolb
sub
push
mov
pop
dec
lret
repnz
in
add
and
push
call
sbb
and
xor
clc
jnp
push
aam
push
xchg
hlt
pusha
and
out
add
mov
in
fwait
add
pop
dec
sbb
nop
dec
mov
pop
add
lahf
sub
aaa
shrl
and
sahf
and
dec
movsl
jecxz
mov
dec
xorl
add
xchg
rcrl
add
enter
ljmp
stos
movb
jp
inc
and
pushf
or
and
cmp
insl
fwait
stc
push
ja
pop
jns
sarl
dec
xor
into
inc
fs
insb
xchg
sub
mov
and
loopne
add
push
lock
pushl
push
jne
push
cmp
fdivrl
push
mov
ret
addb
or
stc
jno
in
add
pop
test
pop
xor
add
dec
mov
mov
enter
je
jb
jb
jae
mov
nop
pushf
jp
mov
stos
cmc
data16
cld
mov
dec
notl
mov
lock
dec
sbb
add
jno
lods
fiaddl
mov
gs
cmc
mov
dec
xor
faddp
pop
add
das
mov
outsl
rol
push
xor
cmp
wbinvd
inc
mov
idivl
xorl
cld
orb
mov
pop
or
daa
mov
xchg
xchg
js
pop
loopne
test
xchg
mov
inc
aas
ret
dec
popa
fs
nop
lds
jp
add
xchg
lcall
cli
pop
sahf
fsubs
jnp
movsl
fwait
xchg
lock
mov
sbb
loopne
fmuls
cmp
icebp
popf
rolb
add
notl
sbb
inc
pushf
jae
add
or
mov
add
cli
int3
mov
pop
cmp
cmp
clc
dec
add
add
ja
repz
jb
add
insb
inc
shl
cmp
pavgb
push
in
aaa
mov
sub
add
pop
lcall
jle
adc
clc
lock
fcoml
jbe
or
xchg
jae
xchg
xor
add
lret
adc
or
add
sbb
loopne
sti
cmp
outsl
add
in
icebp
push
ret
and
add
cmpsl
mov
mov
ljmp
fs
sbb
std
add
mov
je
nop
cmp
add
sbb
add
in
pop
jle
cmp
or
jb
sbb
aaa
mov
ret
jae
jne
bswap
sbb
dec
add
jno
add
mov
add
in
cmp
pusha
mov
fs
add
cmp
insb
addr16
out
in
cmp
add
push
push
stc
xor
addl
jge
addr16
adc
fisubl
or
hlt
sarl
add
out
repz
sarb
push
jno
cmp
mov
add
insl
mov
pop
aas
jl
leave
pop
mov
jbe
out
cmp
xorl
add
iret
add
sub
inc
push
mov
cmp
xchg
add
loopne
xlat
int3
cmp
cli
jg
mov
scas
add
lea
clc
xor
push
mov
dec
mov
dec
pop
sbb
insb
movsl
or
and
rolb
add
pop
std
subb
nop
enter
mov
sub
cmc
aam
cmp
mov
xchg
adc
xchg
clc
inc
int
inc
cmp
mov
push
fdivs
add
jle
mov
xor
rolb
mov
mov
inc
push
sbbb
pop
add
push
movl
bsr
push
int
add
push
dec
push
push
shlb
adc
xchg
int
fwait
pushf
add
adc
dec
jle
mov
inc
mov
cmp
hlt
lock
xchg
rcrb
ficoms
unpcklps
jp
test
xchg
jbe
shrl
mov
ds
loop
pop
rorb
push
mov
add
imul
pop
stos
pushf
out
xor
pop
fwait
std
mov
dec
cmc
out
testb
ret
popa
pop
fcmovnbe
add
cwtl
fwait
push
sbb
xchg
fmuls
movsl
cwtl
xchg
dec
mov
add
andl
push
add
hlt
rclb
rorb
mov
xchg
insb
sbb
or
xor
nop
mov
pop
add
pop
imul
and
pop
add
cmp
mov
outsl
pop
cmc
mov
add
sbb
add
std
push
pop
insl
cwtl
in
les
mov
or
cmp
xchg
int3
mov
gs
icebp
mov
test
xor
push
mov
out
in
leave
fwait
add
scas
pop
mov
sti
pop
lcall
pop
loopne
test
int3
and
xchg
jg
add
out
pusha
inc
rolw
js
loope
add
dec
cmp
or
call
jmp
outsl
loope
add
enter
add
or
lods
mov
cmpsl
mov
xorb
pusha
mov
or
and
jle
push
mov
shl
add
pop
cmp
add
cwtl
call
add
call
int
push
lods
movb
js
data16
out
add
loopne
test
jnp
mov
ljmp
repz
jge
sub
hlt
cmovle
movsl
and
mov
int
push
xchg
enter
add
fiadds
add
in
mov
inc
and
add
jbe
decb
std
add
adc
fcomps
pop
xor
addr16
push
sbb
stos
cmp
aam
jl
or
mov
cmpsb
inc
test
ja
lods
add
in
popa
arpl
or
adc
shll
sti
loopne
push
pop
add
popf
add
mov
cmp
push
cltd
add
push
mov
sbb
and
jg
dec
inc
nop
or
stos
or
jecxz
in
shl
das
sbb
bound
pop
icebp
inc
lods
popf
pushf
pop
lcall
add
movsl
arpl
mov
add
or
add
pop
out
cmc
dec
push
and
push
inc
fstps
es
jmp
adc
push
and
sbb
les
jbe
mov
leave
ret
adc
test
add
xchg
js
out
iret
lds
pushf
jne
hlt
stos
cmpb
adc
lret
or
or
inc
dec
addr16
add
and
cmpsl
leave
and
out
add
xchg
ficomps
add
pop
jb
adc
mov
mov
sbb
stc
xor
push
xor
sub
imul
inc
xor
sbb
push
ljmp
mov
imul
je
pop
mov
fisubl
jae
out
les
sub
in
and
jmp
fmuls
repnz
mov
mov
mov
test
pop
pop
mov
stos
mov
leave
jne
daa
mov
inc
rolb
mov
xchg
insb
sbb
fsubrl
dec
inc
and
inc
add
test
mov
sbb
cmp
mov
sahf
jne
outsb
mov
jg
fiadds
imul
clc
into
movb
push
add
fsubl
pop
movsl
xchg
test
mov
pop
add
jmp
mov
idivb
mov
fcomps
je
or
sarb
loop
mov
jb
mov
cmp
and
and
mov
xchg
and
dec
add
sbb
xor
sub
fstp
andl
sub
sub
nop
and
add
rcrl
add
mov
xchg
or
jmp
cltd
xor
xor
xor
add
or
cmpsb
mov
add
pushf
xlat
popl
lcall
xor
popf
fdivs
mov
loop
add
test
sysret
cld
cmc
rolb
cmp
mov
int
dec
mov
add
cld
xlat
cli
lds
pop
jbe
repz
add
and
pop
xchg
rcll
rolb
sbb
leave
cmp
jge
dec
xor
push
mov
add
jecxz
inc
add
fldl
out
out
addr16
sub
loopne
cwtl
das
and
mov
pop
pop
sbb
xchg
mov
fadds
mov
mov
outsl
mov
cli
and
xor
add
lret
add
pop
mov
out
cld
dec
fcoml
and
rclb
add
cli
add
cld
clc
jp
loopne
mov
pop
adc
cs
in
inc
add
mov
xchg
sahf
jmp
mov
mov
cs
ret
cwtl
fsub
add
xchg
cwtl
addr16
aam
data16
and
push
cmpsb
andl
xor
add
push
adc
loop
pop
dec
push
xchg
ds
vmptrst
sahf
xchg
popf
xchg
mov
add
stc
sub
pusha
aam
jle
add
jnp
shrl
cmp
pop
jge
in
das
je
imul
out
sub
sub
or
clc
add
fiadds
cltd
mov
fs
aad
repz
add
pusha
in
xchg
hlt
aaa
jno
add
xchg
fstpt
add
fdivl
or
jp
push
xchg
add
aad
xchg
fs
clc
add
push
scas
pushf
shrl
xchg
mov
add
push
movsl
pushf
add
and
push
push
add
rorb
pop
orb
pop
sahf
or
test
sbb
cli
adc
jmp
add
imul
outsb
sbb
mov
xchg
pusha
lods
xor
aaa
adc
add
jp
hlt
add
cmpsl
and
cmp
call
sahf
nop
bound
inc
and
sbb
push
in
insb
lea
and
fiaddl
sub
gs
mov
cld
push
jnp
pop
pop
xor
cmp
adc
adc
lds
fdivrl
xlat
pusha
movsb
lock
push
pop
flds
inc
jne
js
loopne
scas
lods
add
push
int3
jns
adc
sbb
sbb
fsubrp
out
mov
mov
cmp
lea
fdivs
in
add
adc
mov
inc
xchg
cwtl
ds
rorb
sub
adc
mov
cwtl
jns
or
push
add
inc
daa
fdivrs
out
cmp
mov
es
leave
in
add
adcb
push
jg
jecxz
js
jo
in
in
loopne
mov
sub
xor
jge
or
adc
data16
mov
add
gs
sub
fdivs
mov
fs
mov
mov
pop
test
iret
filds
clc
je
int
mov
add
icebp
pop
jns
stos
std
lea
dec
je
pop
out
pop
movsl
in
xor
test
lret
xor
repnz
sbb
xchg
bound
push
jge
popf
jns
inc
add
push
adc
add
xchg
jecxz
fsubl
rcr
ljmp
or
adc
xchg
jnp
add
push
std
test
fsts
add
and
pop
lods
add
cmp
mov
mov
arpl
jecxz
or
je
in
and
or
add
loop
cmp
mov
aam
iret
in
test
lret
push
add
lret
xchg
int3
mov
add
sbb
xor
pop
mov
sti
mov
dec
pushf
mov
les
and
ret
shrb
cmp
xchg
sarb
xor
leave
xchg
loopne
fcmove
adc
fstpl
mov
or
push
inc
xchg
push
cwtl
addb
scas
fistps
pop
sub
fwait
adc
or
test
incl
aam
xorb
sub
cli
imul
lods
add
jl
cmp
pop
sub
addl
in
push
add
inc
xor
mov
inc
mov
test
or
test
add
push
cmp
pop
roll
xor
les
or
push
add
sbb
insb
add
cmp
mov
ds
add
or
mov
pop
dec
jmp
ja
or
andb
aas
adc
push
pusha
and
jne
and
call
jp
xor
sahf
dec
ret
or
ret
pop
sbb
and
add
adc
push
subl
stos
sbb
add
and
xor
cwtl
and
outsl
add
xchg
arpl
cmp
mov
mov
je
mov
imul
icebp
inc
mov
in
add
shll
aam
and
ljmp
stos
jb
jns
cmp
adc
dec
shl
xchg
and
adc
add
jno
or
popf
jne
push
or
in
ss
mov
add
add
add
push
sbb
ds
daa
dec
mov
push
cmc
cld
xorb
dec
mov
int
lods
andb
imul
daa
inc
filds
mov
ja
add
cmp
sub
xor
add
in
dec
dec
mov
fsubr
xlat
cli
loope
mov
inc
mov
cmc
clc
lea
jno
sub
dec
or
je
adc
mov
and
sub
inc
loop
rolb
add
add
cwtl
xor
jge
sbb
das
cld
in
add
mov
ljmp
out
add
sub
bound
xor
addr16
insb
pop
inc
hlt
adc
sbb
test
pop
pop
xchg
out
dec
rcll
jmp
or
rcrb
mov
cmp
push
pop
adcl
jo
mov
pop
or
addr16
lret
mov
sub
lcall
lock
in
aas
divl
out
xor
push
lods
push
inc
fstpl
ss
jo
cli
add
add
outsb
repz
jle
cltd
into
jmp
sar
push
inc
fwait
popf
lcall
or
popa
adc
add
adc
add
push
push
adcl
sub
sbb
stc
adc
mov
dec
inc
divb
loop
mov
stc
inc
pop
in
mov
rcrl
or
sbb
pop
pop
mov
add
call
je
mov
insl
jne
clc
push
xchg
mov
lods
icebp
cmp
add
das
lock
push
imul
fstpl
cmp
and
inc
lret
sbb
loope
or
sbb
xor
mov
les
cmp
movsl
dec
jb
icebp
test
shll
dec
loopew
testl
test
xor
fstl
add
mov
addl
xor
stos
sti
add
dec
pusha
or
or
pop
jmp
andl
push
fistps
leave
add
mov
add
out
scas
mov
addb
adc
hlt
dec
pop
daa
dec
pop
arpl
push
jnp
jl
sbb
cli
xor
and
pop
push
mov
test
sbb
cmp
movsl
xchg
add
cmp
into
jo
add
aas
cmp
loopne
add
rolb
fmuls
shrb
and
mov
add
dec
add
sbb
repnz
addl
cwtl
push
jmp
in
inc
ds
insb
add
push
mov
out
mov
push
movb
xchg
idivl
shl
nop
enter
aam
movsl
add
jo
cmp
or
and
daa
push
clc
pusha
push
imul
loopne
sub
xor
add
mov
stc
ja
popa
jge
sub
push
pop
push
and
sub
or
pop
add
xor
xchg
lods
je
aad
loopne
jecxz
repz
xchg
mov
mov
lahf
mov
jp
scas
insl
loope
orl
mov
adc
cmp
das
fs
mov
lods
mov
pushf
lret
int
cld
cmp
add
lods
sub
sahf
mov
dec
add
ja
add
jnp
cwtl
cmp
add
xchg
push
gs
mov
roll
push
sbb
das
add
xchg
cltd
inc
sub
jmp
push
cmp
jne
push
inc
pushf
cmp
jmp
add
add
clc
mov
jecxz
or
jne
lahf
inc
inc
scas
stc
add
cli
add
lods
mov
jno
bound
jp
into
mov
pop
pop
movsl
fldcw
jge
add
pop
jp
sbb
sbb
ret
in
jns
add
push
or
xor
fcmovu
dec
dec
add
jnp
rcll
add
ljmp
dec
dec
inc
pop
call
rcrl
jmp
mov
add
jno
stos
inc
sbb
insl
pop
arpl
out
call
repnz
ljmp
repz
aam
fsub
test
dec
sbb
faddl
push
pop
popa
in
push
mov
push
lret
push
push
or
rorb
lea
inc
add
and
shl
add
push
testb
inc
xchg
stc
imul
arpl
mov
pop
sub
mov
cmp
add
xor
imul
insl
mov
jns
jno
cmp
xchg
movsb
pop
dec
add
jbe
add
add
fdivrl
call
pop
xor
mov
adc
sub
imul
add
int3
dec
scas
cmpsb
shll
mov
add
dec
addr16
rorb
mov
icebp
pop
adcb
in
out
sbb
cmpsb
data16
pop
inc
repz
inc
jl
mov
popf
es
or
push
fmull
orl
mov
push
aam
ret
push
jns
movsb
xchg
xchg
jae,pt
mov
subb
add
push
add
sbb
popf
ficoml
in
mov
add
push
sbb
shrl
ret
xorl
jbe
pop
mov
jo
das
cmp
test
push
add
out
xor
and
sub
xlat
insl
sub
xchg
aas
xchg
imul
add
pop
pop
and
push
push
dec
pop
rolb
loop
ret
mov
inc
ljmp
pusha
jmp
sbb
ret
jg
cmp
fcomps
add
in
xor
dec
push
addps
stos
mov
int3
dec
mov
jae
pop
push
jecxz
sbb
mov
fsts
lea
mov
pop
mov
add
cltd
or
cmp
jmp
xchg
xor
jmp
cmpl
sbb
cmp
mov
dec
notl
pop
imul
fneni(8087
adc
cltd
cs
pop
orl
add
push
movsl
mov
scas
sub
hlt
imul
rorb
fcompl
sbb
cs
fsts
mov
and
pop
testl
jp
insb
cltd
es
mov
pop
into
hlt
mov
out
mov
cld
xor
shlb
sahf
push
arpl
add
mov
pop
sub
adc
inc
add
and
call
sti
rorb
into
add
mov
mov
mov
add
dec
insl
pop
pop
pop
pusha
call
out
or
scas
mov
lahf
out
insb
sub
xchg
aam
divb
icebp
inc
cld
xchg
sbb
add
sub
fadd
inc
inc
and
test
lds
cwtl
rcrl
es
cmp
xor
repz
or
and
nop
mov
fdivrp
in
pop
mov
push
add
inc
imul
roll
xor
cmp
cmpsl
sbb
js
jl
aas
pop
sub
cmp
add
incl
scas
add
jle
jo
inc
push
pop
adc
sub
push
cmp
add
test
bound
das
pop
inc
sbb
daa
xchg
lcall
cmp
and
mov
add
push
fs
mov
xor
add
iret
xchg
into
adc
lahf
fsubl
cmp
movsb
xchg
out
rorb
jne
or
loope
add
push
add
out
das
hlt
push
dec
add
andl
add
sti
movsb
or
pop
and
scas
add
xchg
or
jmp
orl
call
cwtl
mov
mov
rolb
iret
add
decb
inc
jo
test
jne
mov
add
rorl
xchg
adc
jle
jmp
jge
add
cmpsb
lret
push
sti
clc
sbb
inc
add
jno
or
add
mov
sub
push
or
popf
dec
or
outsl
pusha
lods
push
add
pop
test
add
cs
xchg
xchg
xlat
and
and
mov
aad
push
das
jne
test
jg
out
pop
movb
sbbl
add
inc
cli
std
jge
inc
mov
shr
int3
dec
add
push
inc
test
repnz
add
mov
sub
cmc
add
movsb
fcmovnb
mov
inc
mov
sub
add
outsb
jno
push
shl
icebp
add
in
rol
mov
std
std
addb
add
out
add
mov
popf
jecxz
push
fld
jl
mov
cld
sahf
aas
pop
movb
lret
adc
dec
lret
sub
cld
jecxz
xchg
js
add
lock
lcall
xor
leave
adc
sbb
jge
mov
aad
cmp
ljmp
fdivs
add
clc
inc
adc
cwtl
mov
outsb
add
movl
mov
sbb
pop
fs
inc
xor
jbe
sbb
adcl
clc
call
and
fstpt
jecxz
out
xor
imul
ficompl
dec
pop
add
mov
mov
add
outsb
jmp
cmp
pop
sub
jecxz
punpcklbw
or
xor
clc
rorb
xchg
add
push
jae
test
ficoms
mov
add
pushf
cwtl
inc
ja
enter
xchg
insb
add
dec
push
lcall
ret
sbb
imul
cld
add
jno
es
ja
push
mov
adc
mov
int3
sbb
inc
inc
xchg
adcb
jmp
enter
stos
int3
add
pop
fldl2t
add
divb
jae
pop
inc
xchg
mov
fwait
iret
mov
fs
adc
popa
pop
push
or
movl
mov
test
aam
subl
add
xchg
add
add
out
cld
pop
sub
jmp
andb
or
in
xchg
dec
add
and
cmp
add
cmpsl
pmaxsw
subb
adc
add
rorl
cld
clc
es
xor
data16
popf
mov
out
icebp
sub
add
lock
cmpsb
insl
imul
mov
xor
or
add
imul
xchg
sub
out
outsl
xlat
push
rolb
ss
jl
adc
in
iret
inc
pop
xchg
int
hlt
test
xorb
xlat
imul
int3
std
cmp
push
daa
add
inc
ret
in
mov
and
push
out
je
daa
xchg
mov
mov
pop
pop
shlb
shlb
cmpsl
dec
pop
in
subb
movsb
cmpsb
dec
push
insb
add
loop
mov
pop
add
arpl
orl
dec
mov
jns
mov
add
push
or
and
shrb
sbb
or
add
loope
es
lret
std
jnp
jae
mov
cwtl
jp
rorb
dec
jmp
lcall
pop
add
imul
dec
testl
fistl
movsb
call
lcall
pop
xchg
cli
sub
out
icebp
or
in
mov
enter
mov
movsb
pop
or
mov
loope
ljmp
ret
fnsave
add
sub
mov
subb
shrl
std
sarl
mov
pop
inc
faddl
divb
cwtl
mov
mov
cmp
mov
cmpl
icebp
mov
dec
fcoms
inc
push
add
sbb
add
inc
add
mov
and
movsb
add
adc
fbstp
jle
mov
xorb
push
push
adc
lods
icebp
push
cld
jge
mov
mov
pop
decb
sub
add
fisubrl
stc
add
leave
pop
test
lds
in
or
stos
pop
mov
push
xchg
js
cmp
pop
je
push
mov
stos
filds
mov
add
loop
loopne
add
jnp
add
insb
in
das
xor
xchg
sti
shrb
mov
cmpsb
and
jnp
orb
dec
or
add
pop
add
pop
and
inc
add
pop
ret
jl
aaa
dec
nop
cmp
dec
lahf
aam
adc
and
push
nop
xor
popa
pop
xchg
mov
push
mov
adc
mov
scas
cmp
mov
mov
lret
int
sbb
xchg
jns
fsubrs
inc
or
inc
cmp
xor
push
jmp
or
mov
flds
xlat
xchg
add
xor
je
xor
xchg
addb
ret
test
jge
pop
repnz
test
mov
and
xchg
test
fnstenv
daa
or
and
faddl
pop
xchg
loop
or
xchg
sbb
adc
and
cld
lods
add
lods
push
pop
enter
xchg
or
out
sub
les
inc
cs
jns
push
rorl
outsl
inc
pusha
inc
add
push
testl
daa
mov
mov
add
cld
xor
push
push
test
cli
cmp
jb
jecxz
mov
fld
sete
arpl
je
add
test
test
stos
inc
add
or
stc
jecxz
jmp
hlt
pushf
add
pop
outsl
push
mov
mov
sbb
lret
ffreep
pop
dec
push
ret
add
mov
popa
or
outsb
and
xchg
mov
int
aam
mov
ret
js
aas
mov
or
pop
pop
cmp
in
aas
inc
add
les
pop
xchg
cs
cld
mov
inc
mov
inc
add
popf
int3
or
aaa
pop
cmp
cs
push
leave
add
outsb
test
fldl
push
sbb
cmpl
fsub
lret
rorb
or
ret
aas
mov
push
cmpsb
pushf
adc
sub
es
add
or
ljmp
ficomps
ret
sti
or
pop
pushf
orl
fdivr
les
push
addb
fwait
jmp
inc
daa
adc
add
faddp
out
sbb
add
jge
ljmp
add
xor
testb
push
cli
shrl
xchg
push
mov
pushf
movsb
in
add
and
jne
push
in
les
add
mov
arpl
cmp
cmp
mov
dec
add
stos
push
inc
and
sub
jae
and
in
jmp
cmpsb
and
mov
cmp
in
add
pushl
cmp
mov
mov
xchg
add
push
mov
xor
adcl
add
push
rcl
xor
lea
nop
mov
push
nop
add
rcll
sub
inc
add
mov
fdivs
or
les
inc
xor
jecxz
jne
xchg
sahf
sub
clc
orb
dec
cltd
mov
cmpsb
push
push
int
sbb
fdivrl
mov
aas
stos
cli
cmpl
int
aam
mov
iret
ljmp
pop
jl
testb
mov
ss
shlb
jnp
dec
hlt
mov
pop
lds
mov
push
cwtl
add
or
scas
call
orl
rclb
aad
jns
xor
sbb
cmpl
sub
out
fcomp
dec
push
test
push
in
add
sbb
stc
pushf
aaa
pop
add
scas
push
pop
loop
movsb
jae
sar
sbb
das
add
arpl
pop
popa
push
mov
lods
adc
pop
ds
cmp
push
pushf
push
out
fwait
mov
mov
pusha
push
pop
xchg
and
test
mov
les
fcoml
add
subb
sahf
add
push
in
je
xor
inc
xchg
jnp
jle
or
mov
shll
jmp
and
and
ljmp
subl
xlat
xor
pop
mov
mov
adc
int3
push
fcomi
add
adc
mov
add
test
lds
les
or
roll
mov
xchg
call
inc
adc
push
in
or
adc
leave
push
inc
add
testb
movsl
add
jp
fdivrs
jecxz
or
pushf
mov
in
mov
test
inc
mov
int
jo
iret
mov
cmp
inc
add
cwtl
sbb
lret
inc
add
popf
add
add
out
xor
inc
mov
mov
adc
cltd
ljmp
xor
or
inc
xchg
xlat
lret
enter
add
jbe
repz
xchg
cmp
sbb
loopne
icebp
mov
jl
mov
and
ja
dec
pop
jp
push
mov
jb
leavew
pop
rcrb
add
mov
and
cmc
les
out
pusha
in
cltd
xor
or
in
cmp
ds
cmp
adc
add
fcmove
add
enter
sub
sbb
add
jne
lds
ret
fcmovne
enter
sbb
xchg
out
add
xchg
movb
outsl
and
push
mov
jae
adc
sbb
cwtl
call
fiadds
and
test
add
mov
or
and
out
cmc
pop
inc
hlt
and
cmpb
add
cmp
push
fiaddl
mov
fs
adc
add
cmp
ljmp
cmp
call
out
push
pop
add
cltd
push
dec
outsl
sub
lret
xlat
add
inc
adc
xchg
fiaddl
in
or
dec
int3
loope
add
xor
add
push
sub
test
jo
popa
or
mov
dec
and
cltd
pop
pushf
add
aad
jbe
push
aam
add
sbb
add
leave
frstor
in
add
adc
imulb
xchg
shl
fistl
add
out
fdivl
add
dec
dec
pop
dec
sub
rcrb
nop
jecxz
push
mov
add
imul
add
inc
ret
push
add
je
xlat
sbb
inc
add
push
jo
cmp
cmpsb
sbbb
ret
ds
dec
lcall
aad
cmp
test
movsl
or
out
add
inc
pop
repz
mov
aam
and
cmp
testb
mov
mov
cmpsb
or
sub
iret
xor
fwait
in
add
ret
jnp
add
fimull
and
mov
mov
pop
stc
lds
inc
int
in
mov
dec
cltd
add
mov
sub
push
mov
mov
add
sbb
pop
push
loopne
jo
je
cmp
dec
decl
fidivl
adc
loop
pop
test
or
movsl
cmp
adc
mov
and
push
add
aas
cmp
cli
sub
inc
add
mov
sub
inc
flds
or
lea
jns
cmp
test
add
cmp
sub
or
mov
sbbb
dec
jb
inc
cltd
sbb
fwait
adc
sub
sbb
cmc
pusha
sub
repnz
xor
add
and
push
push
mov
popf
dec
push
mov
and
ret
cmp
das
sub
mov
jl
cli
add
outsl
sub
leave
lods
in
jecxz
add
test
imull
add
sub
repz
push
daa
out
xchg
int3
mov
mov
dec
aaa
addr16
add
enter
cs
jae
add
mov
adcb
ds
in
and
lret
int3
add
push
mov
cmp
loop
add
dec
mov
cli
out
loopne
add
xchg
leave
in
sub
or
or
fldenv
mov
sub
or
incb
jge
stos
aaa
lods
leave
add
pop
xchg
or
sar
add
mov
add
rcl
mov
push
movsl
inc
push
enter
xchg
mov
fxsave
rolb
inc
mov
dec
enter
flds
mov
push
into
sub
add
inc
mov
pop
add
aaa
xchg
addl
loop
cmp
fwait
jns
adc
add
stos
std
shll
xor
cmpsb
jnp
lods
push
out
dec
jle
fs
imul
inc
lods
lret
mov
sub
aad
add
add
mov
call
add
or
scas
test
jg
stc
shrb
lods
add
mov
and
rol
ds
repnz
mov
mov
and
cli
in
xchg
pop
cmp
mov
fsubrl
add
addr16
rorl
add
jg
ds
js
cli
mov
push
xor
cmp
mov
jae
push
add
ljmp
and
test
cs
aas
add
mov
or
add
stos
pusha
mov
mov
add
ret
xchg
push
inc
sbb
dec
or
les
test
cltd
dec
push
adc
js
push
test
cmpsb
inc
inc
mov
repnz
roll
or
insb
sbb
shr
dec
add
imul
call
bound
xchg
pop
add
adc
xchg
test
insb
clc
mov
inc
push
into
lahf
nop
adc
push
pusha
popf
inc
mov
cmp
pop
out
rorb
push
add
loop
hlt
sbb
testl
lcall
stos
nop
or
mov
push
mov
lret
push
jns
outsb
out
jge
adc
xchg
jge
xor
in
push
fadds
mov
mov
lock
je
fimuls
ret
inc
add
dec
cmpsl
movswl
lods
push
add
pusha
cmp
push
pop
push
inc
add
std
aam
or
jecxz
xchg
sub
data16
in
add
pop
mov
int3
lcall
add
lahf
adc
dec
mov
adc
or
pushf
sbb
add
sahf
adc
and
jle
lea
inc
sub
shll
outsb
and
stc
cmpb
mov
dec
inc
mov
xor
icebp
fiaddl
jecxz
out
add
jmp
cmp
xchg
add
sbb
add
xor
pop
xchg
push
in
push
stc
ficoms
test
mov
or
cmp
cwtl
add
icebp
sub
dec
push
push
cmp
mov
inc
or
cmp
sarb
cmp
lock
pop
test
jl
xor
xorb
scas
push
test
cmp
stos
or
mov
add
pop
not
scas
test
add
cmp
imul
faddl
movsl
lds
add
xchg
movsb
stc
test
cli
sbb
mov
add
movsb
insb
aad
in
bound
roll
int3
or
cwtl
std
cltd
xchg
rsqrtps
leave
orb
mov
cmp
cmpsb
stos
int
jge
jb
mov
xchg
les
dec
and
sub
nop
dec
lock
fsub
in
jmp
mov
lds
pusha
testb
sbb
lret
dec
xor
idivl
test
push
jo
cmp
jecxz
movsl
or
aam
cmpsb
jae
call
cmp
xchg
add
roll
xchg
mov
jl
imul
dec
or
repnz
mov
nop
or
mov
dec
add
into
mov
mov
push
stos
test
mov
add
movsb
ss
lret
adc
pop
cmovo
lods
mov
out
inc
cwtl
add
jecxz
enter
roll
lods
push
adc
adc
add
sbbl
mov
xor
out
and
cmpsl
ficomps
pusha
je
and
mov
pushf
add
test
into
add
clc
out
test
add
ds
push
adc
or
or
mov
fistps
sbb
imul
cmp
ss
js
loop
add
or
testb
push
pusha
test
push
stos
sbb
imul
les
add
mov
pop
call
cwtl
mov
jmp
push
fisttps
add
xor
add
push
and
gs
lcall
outsb
pop
dec
push
test
mov
cmp
gs
xchg
je
add
jae
insb
add
gs
cs
jecxz
out
pop
pop
inc
repz
fcompl
push
xor
imul
fwait
add
fmul
sbb
mov
add
movsb
jl
rcr
sahf
dec
add
sub
aaa
enter
ljmp
dec
adc
jl
pop
out
dec
inc
stos
test
loope
push
add
out
add
cli
out
sbb
push
orl
sub
xchg
jnp
xchg
push
xor
add
inc
push
jp
add
lret
rcrb
jae
and
add
inc
pushf
inc
add
loopne
es
jg
incb
pop
push
in
sbb
clc
add
push
nop
stos
cmovb
sbb
jp
mov
cli
and
aad
cmc
add
and
ljmp
pop
clc
rcr
adc
icebp
ds
cmpsl
push
xor
jbe
xor
add
dec
fsubrl
jle
sbb
mov
add
adc
sub
dec
int3
add
aaa
add
or
cmpsb
imul
xchg
mov
and
mov
jnp
xchg
mov
cmp
popf
lods
mov
cmp
leave
movsl
jnp
dec
sbb
dec
add
mov
and
incl
dec
in
loop
sub
mov
sub
add
xlat
nop
mov
mov
dec
sbb
sub
test
push
loopne
movsb
jmp
scas
stos
in
xor
pop
pop
adc
add
js
and
pop
inc
inc
imul
mov
fdivrl
sbb
add
xor
add
nop
sbb
jmp
pop
fstps
mov
aad
mov
add
ljmp
add
outsl
dec
ja
add
push
jg
mov
pusha
data16
and
pop
cmp
call
adc
add
pop
add
or
xchg
dec
dec
sarb
enter
int3
sbb
adc
movsl
add
iret
sub
or
pop
push
mov
xchg
xchg
pusha
add
cmpsb
push
add
inc
roll
fldcw
add
imul
push
xchg
mov
mov
test
mov
lods
insb
add
sbbl
lret
inc
mov
and
jae
add
inc
loopne
mov
pop
mov
pusha
lock
fcompl
adc
push
push
lret
je
call
cltd
ss
jno
mov
stc
add
gs
mov
jl
mov
enter
xor
pop
pop
jns
sbb
aam
in
xor
popf
and
jge,pt
stc
jle
xchg
int
jne
rorb
dec
mov
xchg
xor
xchg
dec
lock
add
mov
gs
enter
dec
add
js
dec
add
lock
cltd
mov
add
insb
pcmpeqw
lods
aaa
stc
es
jbe
add
mov
in
sbb
cli
push
xor
cmp
add
jmp
incl
mov
sub
add
sbb
add
into
xorb
mov
in
fistps
jp
add
cltd
lret
xchg
decb
dec
mov
mul
lea
negb
sub
into
fcompl
cwtl
add
pop
push
jae
clc
cmpsl
pop
or
insb
dec
fcmovb
adc
or
loop
xchg
cli
xor
jae
add
stc
push
cs
iret
icebp
mov
out
inc
test
je
xchg
lods
mov
or
inc
in
jbe
push
sub
xor
add
enter
mov
add
into
jl
pusha
jmp
movsb
testb
ficompl
sbb
pop
out
adc
lock
stos
mov
fidivs
xchg
sbb
push
cwtl
test
jge
push
push
sub
insl
pop
mov
cmpb
je
enter
mov
shld
jge
cmpsb
sahf
pop
test
sub
fs
xor
loopne
push
outsl
fnstsw
cli
mov
aas
adcl
xchg
hlt
cmp
push
xchg
mov
cmpb
mov
decb
sbb
movsb
push
incl
dec
fincstp
push
in
and
add
mov
pop
pop
mov
xor
in
mov
inc
iret
cmpsb
les
sub
lahf
loopne
mov
mov
out
pop
stc
mov
pop
call
nop
add
dec
pusha
movsb
aad
dec
in
inc
mov
mov
into
adc
sbb
cmpsb
je
add
nop
push
add
sub
data16
cmp
mov
jecxz
adc
dec
add
fmull
jge
mov
loope
pop
add
addr16
in
add
rcrl
add
pop
rolb
filds
sub
jle
in
dec
fistpl
data16
add
mov
mov
sub
dec
inc
sbb
inc
jl
push
int3
lock
outsb
add
cs
outsl
lods
xchg
aaa
ss
arpl
jo
and
add
and
adc
shrb
pop
movsl
inc
push
imul
repnz
adc
incb
leave
sub
std
jno
ljmp
mov
outsb
add
je
pushf
lea
add
mov
cmp
jo
add
stc
test
dec
jb
orl
add
lahf
pop
dec
imul
mov
inc
dec
jge
lret
add
lods
push
and
scas
add
data16
jecxz
xor
push
push
add
jle
add
xchg
add
sbb
popa
js
daa
cli
aaa
add
bound
sub
inc
fsubr
mov
add
aas
sub
mov
movsb
popf
in
push
add
andl
lods
mov
faddp
add
jg
stos
movsb
scas
out
push
push
mov
add
fs
fcoml
sub
and
movsl
add
push
add
inc
test
add
push
push
ljmp
or
fdivrs
xor
leave
lret
push
xchg
stos
pop
cld
movl
mov
adc
pop
sbb
repnz
test
xchg
aam
inc
jp
or
mov
into
in
and
jo
sbb
mov
mov
int3
int
cld
lds
pop
add
xchg
xchg
pusha
pushf
outsl
mov
cltd
mov
popa
xor
lds
shrl
inc
mov
popa
pop
ficomps
outsl
sbbb
mov
mov
xor
in
repnz
psubb
dec
pop
sbb
pushf
cmp
and
in
push
push
fs
mov
icebp
add
insl
add
int
inc
cmp
add
push
movsb
or
icebp
out
mov
rorl
into
mov
push
movsb
gs
sahf
in
sbb
adc
test
loope
dec
enter
add
bound
adc
sub
flds
cmp
aaa
iret
add
js
pop
xchg
push
xor
mov
outsl
ret
or
addr16
push
cli
add
sub
in
mov
je
cmc
adcb
in
cmp
add
push
lods
movsl
int
les
movsb
or
mov
js
add
addb
xor
std
clc
pop
data16
add
sbb
add
fcomps
sub
add
popf
inc
or
sub
ffreep
inc
int
test
jmp
in
scas
sti
leave
push
jae
cmp
call
adc
jmp
cli
movd
xor
and
jo
sbb
mov
insl
mov
arpl
mov
add
imul
in
inc
rolb
jge
les
daa
sbbl
sbb
pusha
pushl
dec
cmp
sbb
add
inc
mov
test
sbb
call
pop
inc
mov
rcrl
enter
orb
ror
push
add
adc
faddl
int
sub
push
sbb
loopne
mov
nop
std
adcb
push
xor
repz
add
mov
or
insb
push
test
mov
pop
sub
stos
mov
add
add
xor
movl
insl
lods
lahf
add
push
pusha
cltd
lret
aas
or
mov
add
mov
setnp
jb
and
aas
imul
pop
sub
pop
push
pop
mov
fwait
nop
add
negl
cmp
fs
xchg
loopne
in
pushf
imul
mov
sbb
loop
ret
rorb
mov
mov
test
orb
fstps
enter
push
repz
rcll
loope
stos
int3
in
sub
and
add
jbe
mov
mov
cmp
adc
stos
adc
and
sub
adc
push
sub
adc
sbb
popf
xor
xor
sahf
sbb
add
sbb
lahf
mov
and
push
pop
movsb
jbe
loope,pt
repz
or
loopne
js
out
rclb
repnz
mov
lock
add
cld
jecxz
sub
bound
push
mov
sti
add
mov
adc
pop
add
push
push
subl
adc
xor
jo
das
sbb
test
seta
mov
add
fs
adcl
js
jne
orb
add
je
xchg
pushf
popf
jbe
add
call
push
xchg
adc
dec
push
and
sub
cmc
out
inc
lock
enter
or
rcll
cmp
ljmp
repnz
rcrb
xor
divl
adc
test
roll
fwait
sysret
adcb
je
jbe
adc
sarb
mov
popa
add
xchg
icebp
xor
inc
andb
loopne
mov
sarl
mov
pop
mov
add
lcall
sarb
push
subb
mov
cli
inc
xlat
shl
push
add
js
jg
cmpsl
add
mov
push
add
inc
scas
xlat
and
jno
add
popa
push
xchg
dec
rolb
test
cld
adc
inc
xchg
add
mov
xchg
mov
add
sbb
sub
mov
test
popf
out
in
pop
ja
jmp
push
call
aad
dec
lret
gs
push
mov
stc
scas
orb
adc
jl
lahf
out
cmpb
pop
sbb
loop
add
mov
sub
jae
jecxz
aaa
out
cmp
push
mov
jb
mov
cmp
jae
xor
cmp
scas
int3
add
stos
cltd
jp
jge
cmp
add
rorb
ret
inc
cwtl
add
add
repz
aam
je
fs
adcb
add
ljmp
add
xor
adc
testl
movb
leave
add
adcl
ds
xor
sbbb
adc
xchg
repz
dec
push
cs
or
mov
jbe
pop
xor
stos
add
inc
adc
mov
mov
dec
decb
jbe
adc
scas
xchg
jg
sbb
fidivrl
add
popa
jb
cmp
andl
outsb
add
jp
hlt
inc
into
push
add
mov
add
xor
mov
add
popl
enter
add
test
push
lock
dec
popa
dec
add
jge
xchg
test
mov
sbbb
aaa
shlb
das
shll
js
sbb
mov
fsubrs
add
xor
inc
add
add
or
mov
and
pop
add
xlat
sub
sahf
test
cmp
jo
xchg
out
xor
inc
les
mov
fimuls
pop
mov
cmp
mov
and
dec
pop
mov
inc
into
add
push
jns
add
ljmp
cli
adc
lock
mov
xchg
in
and
xor
add
into
inc
enter
fildl
sub
xor
sbb
inc
xchg
adc
stos
xor
or
mov
adc
sub
rolb
pop
das
scas
jl
lock
cmp
cmp
dec
mov
das
xchg
mov
mov
mov
icebp
rol
xchg
push
jmp
sub
into
add
dec
lea
jecxz
pusha
or
cltd
jle
movsb
js
lahf
lea
push
pop
bound
add
xchg
jge
popl
or
xor
jns
add
push
xchg
arpl
int3
add
mov
mov
cmc
cmp
test
jbe
jno
add
enter
and
loopne
sub
popf
adc
xor
pop
sbb
push
cltd
enter
ss
je
jl
add
and
negl
js
and
inc
fnstcw
dec
leave
adc
inc
jno
sti
pushf
xor
adc
cmpsb
ja
pop
sub
pop
adc
movsb
jns
xorb
or
jl
push
or
or
xchg
mov
addl
mov
lret
mov
or
out
clc
bnd
push
orb
jbe
stos
je
outsl
shlb
mov
mov
pop
inc
adc
shl
mov
nop
mov
jbe
fisubrs
ja
aaa
outsb
shlb
test
adc
jle
jo
add
nop
mov
sbb
dec
sub
push
add
das
repnz
fiadds
jnp
add
or
mov
out
dec
sti
in
mov
loope
cmpl
sub
orb
mov
or
xor
rcrb
sbb
scas
cmpsb
cld
or
in
loop
pusha
in
mov
push
pop
aam
negb
sbb
pop
lahf
inc
inc
add
and
push
shr
loope
adc
or
popf
mov
sbb
call
aas
sub
lock
jo
add
cld
call
pop
mov
stc
xorb
xor
das
mov
xlat
cmp
xorb
cld
mov
add
pop
jle
mov
ja
push
mov
mov
sbb
push
inc
mov
pop
dec
call
jbe
cli
mov
pusha
mov
adcl
pusha
cmp
pop
add
and
add
insl
and
add
outsl
jbe
add
mov
add
xor
or
mov
jo
mov
sub
inc
mov
jae
push
aaa
stc
int3
rclb
or
mov
shl
aaa
out
push
dec
sbb
dec
mov
lahf
mov
jne
test
jb
clc
add
cmpsl
test
pusha
adc
pop
mov
cmp
stc
aad
mov
fnsave
roll
mov
pop
xor
sub
mov
loop
adc
dec
pop
repnz
clc
std
add
jge
addl
xor
icebp
dec
sub
repnz
and
dec
xor
test
push
dec
push
flds
in
mov
or
divl
dec
in
push
scas
addr16
or
mov
add
rorl
mov
inc
push
and
bswap
inc
cltd
inc
inc
addr16
sub
mov
push
mov
gs
scas
mov
sbb
movsl
xor
jmp
cltd
push
insl
add
das
push
xorl
add
add
scas
mov
insl
mov
xor
test
add
cmc
cli
sbb
daa
add
mov
jne
dec
jne
cs
cld
adc
in
sbbl
jb
shl
adc
adc
call
fcmove
xchg
adc
fsubs
xchg
stc
je
out
sub
inc
push
es
inc
ss
test
cmc
or
pop
ss
iret
push
add
jae
orl
sbb
adc
pop
add
inc
pop
add
push
aaa
cs
sub
add
push
adc
add
pop
sub
fdivl
scas
fstpl
xor
sbb
cld
daa
adc
stc
aas
add
fucomp
nop
push
sub
in
test
sbb
adc
add
cld
cmp
sbb
lods
xor
iret
enter
mov
sbb
shlb
das
out
xchg
or
cmp
cld
add
stc
mov
cwtl
dec
sbb
mov
leave
fadd
cltd
add
pop
scas
test
ret
inc
add
movl
dec
adc
lret
add
fldcw
push
or
inc
pop
inc
pusha
pop
inc
cld
mov
dec
sbb
ret
data16
or
or
push
subb
or
xor
rolb
into
lret
shrd
or
dec
aaa
enter
add
sub
cmp
and
cmc
repnz
cmp
sarb
pop
stos
add
mov
jecxz
in
aas
adc
cld
lods
add
shll
arpl
sub
add
mov
add
mov
jbe
shll
add
les
popf
adcb
cmp
jle
xchg
daa
add
add
shlw
add
fildll
je
out
in
dec
dec
or
xchg
push
and
add
cltd
fbstp
cmp
cmc
add
ljmp
fcoml
std
adc
sarb
push
dec
incl
jge
cmp
push
mul
jg
push
add
addr16
sbb
cmp
jns
cmc
pop
test
ret
in
mov
pop
cmpsl
jp
mov
sbb
pop
data16
add
push
daa
fsubrl
add
sar
sar
xor
or
bsr
mov
pop
mov
out
add
pusha
shlb
add
push
loope
in
xorb
imul
xchg
push
or
and
xor
out
cmp
ds
add
pop
jo
jecxz
mov
xchg
sub
hlt
cmp
inc
sti
das
and
sub
cmp
in
andb
in
cmp
push
cmpsb
sbb
add
out
jnp
ds
jecxz
in
je
sar
popa
mov
insb
gs
dec
push
cmp
jl
pusha
das
fsts
bound
mov
aaa
hlt
sbb
add
ret
lcall
cwtl
fs
mov
sbb
add
out
repnz
sub
mov
sahf
mov
test
jno
mov
push
js
xlat
fbld
dec
in
inc
and
mov
inc
and
push
add
nop
xchg
mov
ljmp
add
adc
mov
mov
add
push
pop
add
add
xchg
jne
push
xchg
popa
divps
mov
mov
shlb
cwtl
pop
stos
sar
loop
add
cmpsl
loop
cmpsb
push
aas
add
cs
push
add
roll
sbb
sbb
outsl
adc
xrelease
incl
cmp
pop
pop
test
push
lretw
xchg
sar
pop
dec
or
loop
inc
mov
and
pop
mov
dec
xchg
data16
out
sub
mov
push
fcoml
pop
add
jne
xchg
cli
pop
lock
jp
stos
and
dec
jp
add
mov
jo
jg
pusha
sub
jo
pmullw
mov
jmp
std
dec
sbb
add
inc
or
out
pusha
adc
scas
add
js
test
add
or
cmp
ror
add
sbb
sbb
xor
xor
sbb
cmp
lcall
sub
or
and
test
add
lea
mov
adc
pop
add
sub
sub
xor
std
sub
jo
dec
inc
rol
andb
pop
sub
cwtl
dec
out
add
xchg
cmc
rclb
out
dec
add
lock
inc
pop
mov
xor
dec
mov
mull
addr16
daa
xchg
clc
adc
nop
lahf
push
pop
add
add
test
inc
add
iret
add
xchg
sub
stos
inc
mov
sbb
sahf
mov
aam
mov
push
push
add
pop
rcrl
and
fisttpl
mov
shlb
sbb
dec
sub
inc
xorl
xchg
push
shrb
sub
push
fimull
mov
mov
out
xlat
jae
push
add
iret
add
push
inc
dec
in
jp
sub
shl
jnp
nop
sti
add
and
cmp
jno
in
pop
pop
cmp
mov
sub
enter
pop
shlb
add
jmp
xor
xchg
sub
adc
fcmovnbe
add
sbb
test
mov
inc
and
or
pop
or
scas
mov
mov
imul
cmp
jns
insb
jp
test
shll
in
pusha
test
leave
add
daa
shl
add
idiv
cld
cmp
push
dec
loop
mov
ret
in
cs
jbe
pop
add
test
inc
loope,pt
iret
nop
loop,pt
add
mov
cli
outsb
jns
leave
test
xlat
mov
xchg
in
jle
cmp
xchg
pop
out
les
clc
shrb
mov
jle
push
gs
scas
sbb
fbstp
cwtl
outsl
idivl
out
daa
lods
bound
cmc
xchg
hlt
add
aas
dec
das
sahf
add
xor
xchg
and
das
dec
gs
sarb
das
mov
push
roll
call
cld
sbb
stos
subb
add
dec
jl
xor
aas
out
push
xor
clc
xchg
add
je
xchg
test
sub
dec
cmp
or
icebp
sbb
fsts
in
in
xor
cltd
push
mov
and
out
mov
das
xor
fmull
jae
add
xchg
jge
jle
shl
lahf
and
push
fsubrl
jl
xor
pop
cmc
cli
add
lret
cmp
dec
out
fadd
adc
dec
add
xor
nop
add
xor
add
push
inc
sub
push
jae
add
les
xor
imul
scas
sbbb
xor
loopne
out
je
sub
inc
lods
das
push
xchg
fdiv
or
or
mov
popf
shrb
mov
mov
sbb
pop
int3
xor
mov
rol
test
dec
jge
mov
inc
test
add
jmp
and
popa
stos
dec
push
inc
adc
rclb
cmp
call
sbb
nop
add
xchg
push
adc
lds
arpl
movsl
xor
cltd
stc
out
inc
and
ret
sub
or
js
and
hlt
cmp
cld
cmovo
sarl
pushf
repz
dec
pop
shll
jne
mov
adc
test
jns
or
and
or
cmp
cmp
mov
pop
push
push
sub
add
not
roll
mov
add
xchg
xchg
xorl
xchg
adc
xor
popa
sub
scas
add
iret
jg
addr16
lldt
cli
adc
pop
xor
add
fimuls
push
jle
sbb
dec
sbb
or
cmpl
cmpsl
orb
sbbb
arpl
mov
popa
push
mov
lds
push
shlb
mov
shlb
xor
loop
xchg
call
lret
arpl
mov
cmovnp
mov
outsl
test
addr16
inc
or
mov
and
push
test
std
cwtl
orb
pop
movsl
aad
add
inc
sub
adc
or
sbb
inc
xchg
xchg
test
inc
mov
and
xchg
push
shrl
add
pop
mov
pop
jmp
mov
push
test
and
and
or
and
inc
mov
push
test
push
pop
adc
xchg
adc
add
dec
aas
lcall
push
inc
lods
mov
or
add
adc
jge
jl
lods
pop
imul
mulb
mov
jg
pop
stos
jns
inc
fs
cmp
push
jp
mov
lcall
push
mov
scas
inc
inc
fwait
orl
mov
stos
sbbb
dec
or
pop
add
mov
add
pop
aam
sub
loop
test
testb
inc
add
fiadds
enter
xchg
adc
add
dec
or
adcl
mov
imul
dec
push
repz
fistpll
sub
or
mov
ds
mov
jns
ds
lods
test
movsb
mov
or
fldenv
pop
pop
mov
ljmp
jb
loop
push
mov
jns
push
inc
fidivrs
xchg
add
iret
pop
inc
pop
and
sub
cmp
cmp
xchg
lods
adc
inc
jne,pt
repz
loope
cmp
pop
xchg
push
adc
add
mov
scas
cli
aaa
cmpsb
inc
add
imul
xchg
push
mov
cmovo
cmpsb
roll
fnsave
inc
icebp
pop
imul
aas
add
ret
clc
rorb
loopne
cmpl
fwait
jl
mov
arpl
jns
test
out
cld
lods
jbe
pop
pop
sarb
xchg
mov
in
ljmp
push
mov
sbb
add
mov
aam
fwait
adc
xchg
mov
add
jmp
dec
jbe
jb
out
xor
add
or
push
repz
rolb
or
sub
xchg
sbb
mov
jl
cmp
add
pushf
rcrb
movsl
dec
shr
pop
dec
cmp
add
lea
call
add
insl
inc
mov
add
enter
push
push
je
push
scas
addb
adc
test
nop
push
pop
pusha
int3
call
push
xor
mov
cmp
xchg
fidivs
out
cmpsl
mov
dec
gs
jp
sbb
rcrl
mov
test
sub
daa
hlt
stos
mov
mov
push
ds
bound
add
xchg
cld
mov
std
fisubs
cmp
cmp
cmpb
rol
daa
sub
sub
dec
pushf
mov
insl
dec
sub
add
sub
ret
incl
lcall
jmp
pop
sarl
adc
pushf
pop
pop
add
js
pop
in
pop
addb
add
add
inc
add
in
sub
add
out
mov
lock
push
setb
sbbl
add
xor
pusha
add
dec
cmc
add
push
xlat
call
add
inc
ret
xchg
repnz
jno
js
mov
mov
push
add
ret
cmpsl
inc
daa
mov
xchg
jecxz
sub
xor
std
sbb
sub
mov
rorb
lock
filds
ret
sahf
testl
arpl
push
rorl
loope
loopne
dec
aad
notl
arpl
inc
adc
and
sbb
mov
add
in
mov
sti
jecxz
adc
xchg
pop
inc
push
push
cmp
sbb
fsubrl
add
or
pop
mov
shl
popa
and
enter
inc
popf
out
mov
push
and
out
xor
pop
pop
dec
lahf
nop
add
push
sub
loop
mov
sbb
rcr
fnstenv
gs
pop
push
test
xor
daa
dec
push
mov
fstps
adc
outsl
or
mov
add
push
mov
in
sbb
jns
adc
filds
push
inc
xchg
popa
add
add
cmpsl
test
enter
jns
push
jno
xor
and
pop
push
rolb
rcrb
js
or
adc
push
mov
in
orl
xor
add
in
and
add
mov
xchg
cmp
nop
hlt
jg
pop
push
jo
mov
dec
movsl
ds
jo
popa
push
cmpsl
dec
aam
add
gs
loop
adcl
fadd
add
pop
xor
add
adc
lahf
xchg
inc
dec
add
ret
arpl
mov
jnp
loopne
pop
insl
popa
xchg
cmp
xchg
outsl
sub
mov
xor
dec
adc
jno
sbb
mov
iret
mov
rclb
and
add
fcmovu
hlt
rclb
add
push
stos
xor
into
aas
fdivs
aad
add
testl
addl
mov
sub
mov
or
push
not
popa
inc
test
mov
and
movsbl
xor
mov
call
nop
xchg
pop
fs
loope
pop
dec
into
inc
rol
inc
push
addr16
or
adc
ret
es
push
mov
fildl
enter
add
scas
ficompl
mov
or
call
les
clc
push
inc
or
cwtl
dec
fidivrs
add
push
cld
in
dec
add
sub
pop
cmpl
jg
andb
mov
pop
xlat
cmp
movsb
rolb
loop
sub
cld
add
dec
pusha
jge
cmp
repz
loop
cmpsb
or
ret
jne
ljmp
xchg
add
sub
out
pop
icebp
sub
adc
or
sbb
pop
outsl
add
lock
stc
add
sbb
arpl
imul
and
fucomp
dec
and
iret
adc
shr
inc
mov
lods
pop
pop
je
outsb
pop
jmp
shlb
aaa
mov
inc
xor
jno
mov
add
dec
pop
shrb
and
aaa
lcall
mov
pop
sbb
jns
sbb
add
int
pop
cmp
add
lahf
out
loopne
pop
add
mov
les
pop
inc
mov
sbb
jle
add
loope
adc
loopne
inc
sub
ja
add
push
ljmp
add
dec
xchg
pop
lock
push
fdivrs
jge
cmc
mov
or
mov
inc
push
fwait
lods
adc
cli
cld
test
jnp
outsb
leave
and
arpl
mov
mov
add
and
jno
pusha
aas
loop
mov
add
loopne
add
sbb
pop
or
es
arpl
mov
test
or
inc
lahf
sbb
mov
stos
sub
fmulp
inc
mov
jnp
cltd
mull
jno
add
or
ret
cmpsl
adc
out
imul
add
movsl
fcmovnb
add
aam
pop
leave
inc
jge
add
insl
fstl
scas
int
mov
xorl
lods
lds
and
fcompl
and
cmp
mov
jo
xchg
rclb
inc
out
cld
jbe
adcb
dec
imul
add
movsb
push
or
sub
mov
add
movsl
sub
imul
add
pushf
add
add
xor
repz
cltd
and
add
push
cwtl
jne
xchg
cmc
mov
push
jmp
test
cmp
xchg
mov
jo
scas
jno
cmpsb
sti
xor
jns
aaa
ja
mov
and
sbb
pusha
push
push
or
sbb
test
xchg
fwait
add
insb
es
sub
adc
push
flds
add
jb
mov
add
daa
jns
push
lods
cmp
mov
and
rcl
hlt
idivl
xor
pushf
loop
pop
out
pop
cmp
fs
je
inc
add
mov
lock
fsubrl
test
push
cmp
and
incl
sbb
cmpl
pusha
mov
fdecstp
cmp
jae
das
lods
adcb
les
add
test
or
pusha
jle
and
xor
xor
pop
shrb
or
inc
inc
clc
sbb
add
jle
loopne
push
add
imul
dec
stos
mov
mov
xor
into
mov
pop
and
mov
mov
add
pushf
pop
mov
bound
loopne
cld
in
std
call
js
nop
fs
push
add
hlt
movsl
gs
cli
int3
add
mov
add
rcl
test
call
xor
xchg
dec
loopne
fnstsw
adc
push
mov
mov
inc
addl
mov
xor
add
mov
sbb
out
mov
add
rclb
jg
push
dec
jae
icebp
cmp
push
insl
addb
mov
mov
add
mov
insb
mov
jge
lods
jmp
lea
repnz
call
adc
stc
or
sbb
shr
js
or
popf
nop
or
pusha
jno
lods
test
pushf
sahf
idivl
mov
dec
lock
xor
in
add
mov
jbe
jp
aam
enter
jne
add
cli
xor
xchg
idivl
add
lret
sub
jnp
sbb
test
es
into
xchg
nop
je
inc
xor
mov
pop
cld
roll
push
pusha
add
sbb
lods
shlb
ret
push
mov
addb
fadds
mov
out
jl
mov
sahf
add
fdiv
ds
push
add
push
loopne
fisttpl
pop
pop
subb
pop
nop
daa
orb
xor
add
push
stos
add
xor
arpl
add
rcl
call
sbb
sbb
xor
push
dec
xchg
aad
js
xchg
rorl
aam
stos
push
pusha
scas
adc
mov
aam
rcr
ret
push
xchg
js
jo
push
add
lods
pop
cmp
sub
xor
sarl
incl
imul
cmp
test
adc
pushf
xchg
jne
or
fwait
mov
jns
daa
rorb
sub
punpckhwd
dec
xchg
add
pop
inc
mov
or
imul
pop
nop
or
pushf
shld
out
sbbl
cmp
pop
repz
fidivrs
xchg
call
dec
add
xchg
shrl
mov
sti
jbe
add
or
in
add
or
roll
xlat
rclb
pop
ffreep
add
and
or
xor
daa
adc
or
dec
mov
mov
jbe
xor
sti
jge
in
inc
mov
and
rolb
and
push
mov
add
jle
hlt
jg
int
adc
lds
sub
mov
cmp
mov
mov
idivl
pop
mov
adc
data16
mov
xor
into
jb
jg
mov
fcmovbe
add
pop
cmpsb
inc
and
and
fdivrp
mov
add
push
sarb
sub
inc
and
inc
mov
rcrb
mov
ja
or
in
cmp
dec
add
jnp
add
xchg
cmpsb
or
out
fsubs
pop
clc
hlt
add
bound
add
pop
and
add
rolb
add
mov
subl
mov
push
les
sbb
lock
or
cmp
add
sbb
inc
js
mov
pop
xor
les
ret
in
mov
or
pop
push
movsl
pop
loop
shrl
push
add
xlat
out
xchg
test
mov
or
xchg
out
addb
push
add
pop
clc
pop
shll
and
add
shlb
insb
xchg
push
stos
add
push
scas
add
mov
mov
mov
enter
xchg
jb
hlt
inc
jl
int
movsb
jo
add
cmp
mov
movsl
and
loop
cs
call
jmp
push
push
lods
dec
movsb
add
adc
add
adc
fldl
adc
xchg
aad
push
in
in
pop
mov
js
and
dec
and
fiaddl
out
ja
pop
mov
fcompl
stc
adc
jo
adc
cltd
inc
loopne
sbb
or
cmp
movsb
andb
adc
cmp
mov
sbb
mov
addr16
into
lock
hlt
pop
sbb
xchg
cli
cmc
repz
add
pushf
dec
mov
stos
cld
popf
pop
mov
jge
mov
out
nop
push
inc
incb
jo
pop
add
lahf
int3
push
jg
mov
xorl
sbb
std
mov
xor
in
mov
enter
add
sub
xchg
daa
cld
add
cmp
cmc
adc
cbtw
subb
jp
and
out
inc
addr16
cltd
inc
fidivrs
add
in
pop
add
jge
out
mov
sub
sbb
shll
addr16
inc
and
cmp
sub
into
jne
add
mov
jl
subl
repnz
sbb
or
popa
and
inc
mov
push
add
sbbl
mov
mov
enter
out
xor
mov
xor
sarl
loopne,pn
str
xor
push
cmp
sub
add
sbb
inc
pop
hlt
popa
aas
and
and
add
dec
stos
addr16
jg
add
xlat
or
add
add
mov
in
adc
sub
add
push
fcoml
es
sub
xorb
inc
xchg
jo
or
cmp
sti
jns
add
jne
mov
add
icebp
in
xchg
jo
stos
pop
in
les
or
mov
push
cmp
sub
insb
je
mov
addl
les
fisubl
outsl
dec
add
pop
lds
sbb
add
xchg
loop
mov
push
movsl
mov
or
adc
test
xor
scas
sbb
xchg
add
std
popa
xchg
mov
rclb
sub
pop
dec
sbbl
sub
rorl
aas
xchg
outsl
sbb
fistpll
popa
cmpsl
add
ja
add
jmp
pop
add
pop
mov
or
call
inc
add
xor
mulb
adc
mov
xchg
insb
call
sbb
rorb
ja
cs
loopne
subb
mov
sub
inc
and
push
incb
add
sbb
loopne
jns
push
lahf
arpl
cmp
loopne
xchg
pop
xor
pop
push
add
push
enter
add
mov
lods
insl
lcall
push
lret
adc
in
cmpsl
inc
xor
movsb
add
jmp
xchg
cmp
ret
mov
jns
pop
mulb
leave
cmp
xorb
cmp
mov
sbb
cmc
jmp
or
imul
in
xor
add
dec
jo
add
inc
xchg
mov
loopne
cmp
adc
pop
cmp
jg
mov
movsl
fiadds
insl
xchg
mov
pop
add
aas
pop
xor
adc
ja
or
inc
scas
pop
push
pop
and
pop
loopne
pop
aam
sbb
mov
dec
imul
xor
sbb
cltd
popa
push
add
dec
xor
and
xchg
fwait
dec
xchg
test
outsb
ret
inc
add
add
loop
sbb
dec
nop
inc
push
out
je
push
push
stos
jle
out
cmpsl
push
add
and
jb
mov
lret
shlb
add
aas
andb
repnz
push
ljmp
testl
add
xchg
cwtl
and
mov
mov
push
mov
dec
out
xor
adc
jle
pop
dec
into
pusha
loop
and
xor
pop
mov
dec
ret
cmp
sbb
iret
jb
xchg
xchg
jno
into
test
ret
pop
add
loop
ss
inc
push
cmp
lcall
rolb
push
std
lret
push
and
jg,pn
test
test
mov
rcrb
add
xor
repz
add
lret
cmpsb
push
sub
xchg
js
enter
in
sub
xchg
bound
and
add
add
jg
mov
adc
xchg
outsb
sbbl
lret
ucomiss
mov
popf
push
in
rcrb
cs
fsts
and
fdivrl
add
add
sbb
sbb
adc
shll
test
mov
add
jmp
and
xlat
and
lock
push
movsb
dec
pusha
dec
pushf
xor
jmp
mov
add
adc
sbb
lds
xor
adc
and
dec
scas
cmp
xchg
getsec
cmp
adc
sub
adcb
cld
push
or
jecxz
mov
cmp
and
test
add
mov
xor
mov
add
mov
jo
in
add
inc
sub
push
pop
into
loopne
xchg
mov
nop
add
fwait
push
and
sarb
mov
add
mov
cmpsl
outsb
rolb
lock
arpl
push
xor
pushf
pop
test
and
inc
xchg
ds
mov
push
movsb
adc
xchg
add
cmpsb
fucomip
add
cmp
add
dec
cmp
sub
cmp
pop
adc
jecxz
add
pusha
sub
testl
mov
add
and
dec
adc
add
dec
add
loopne
divl
and
jnp
xchg
pop
cli
add
mov
mov
add
mov
rorb
jae
or
testb
loope
sub
xlat
push
push
imul
into
mov
out
pop
ret
or
sub
sahf
out
repz
and
aas
out
mov
rcl
push
adc
rolb
ret
lock
outsl
cmpl
cmp
jge
inc
jo
add
dec
jnp
dec
roll
fs
ret
jne
int3
pop
rcrb
adc
gs
fistpl
inc
mov
adc
lcall
xchg
mov
addb
pop
mov
and
movsl
pop
pop
out
ljmp
or
jle
sbb
cwtl
roll
mov
pusha
jp
ja
pop
mov
add
and
fbld
shlb
xchg
inc
pop
jns
leave
xchg
add
jmp
lods
jne
mov
shlb
mov
sahf
sub
add
mov
adc
hlt
add
jge
and
cmc
fildl
and
jo
add
jnp
xor
test
pop
sarb
adc
sarl
sti
sub
add
pop
and
sbb
fnstenv
jb
pop
in
add
fiaddl
out
cmp
addl
sbb
inc
rorb
repz
dec
call
xchg
inc
ds
frstor
jle
shrb
add
push
mov
or
adc
testb
inc
inc
pop
test
pop
push
jb
mov
hlt
cmp
js
or
scas
movsb
push
je
add
fcmovb
in
xchg
mov
xchg
dec
xor
ret
xchg
dec
add
imul
loope
andb
out
push
pusha
pop
xor
xchg
push
add
jmp
xlat
shlb
ss
stos
fstl
add
sbb
adc
loop
jge
inc
das
jnp
pop
roll
inc
jo
mov
loop
mov
das
iret
cmp
ret
mov
leave
icebp
js
repz
adc
popa
lds
sub
movsl
pop
sbb
lcall
bswap
add
insl
call
cli
idiv
jle
je
add
mov
jbe
in
aaa
mov
cmpsl
pusha
test
sbb
daa
movsb
mov
test
call
bound
out
add
pop
ss
ljmp
xor
test
pop
inc
cmp
add
in
popa
gs
out
mov
inc
jl
pop
ret
pop
jns
cmp
and
xchg
cltd
cmp
xchg
cwtl
test
add
adc
orl
js
mov
test
and
jnp
fidivrl
inc
cwtl
arpl
decb
gs
xchg
pop
pop
fwait
lea
push
cld
and
stc
add
out
push
jbe
mov
addb
adc
xchg
cs
popa
dec
pslld
das
jnp
cmpl
cwtl
les
add
xchg
outsl
nop
xlat
sub
cmp
dec
pop
hlt
mov
xchg
add
insb
xchg
inc
push
push
das
or
lods
test
stos
xor
inc
add
or
ret
or
push
stos
pop
sub
pop
int3
or
add
outsb
inc
adc
sub
movq
test
gs
sbb
lds
add
xor
into
push
sub
nop
jecxz
xchg
fcomi
adc
add
call
cltd
pushf
push
inc
mov
mov
xor
inc
fnstcw
pop
cwtl
add
and
pop
cs
jno
add
out
jle
xchg
mov
shlb
sbb
out
lock
popf
jge
enter
add
push
sub
nop
add
xor
push
hlt
lea
mov
dec
jmp
aas
sub
push
mov
add
rcr
add
or
lock
mov
pop
jp
push
or
sti
fcmovnb
jl
add
aas
in
enter
mov
test
loopne
add
jbe
or
into
xor
add
nop
outsb
push
fmull
cmp
subl
push
cld
adc
enter
push
outsb
add
pop
mov
push
rcrb
sub
mov
shl
rcrl
xchg
sbb
lret
add
cmp
sti
fld
dec
outsl
lret
add
inc
xorb
and
jg
je
adc
mov
adc
and
mov
push
push
add
shll
xor
mov
and
cmpsl
add
push
cmpsb
aam
mov
inc
push
sub
leave
cmp
out
pop
aam
add
fsub
insl
add
lock
lods
add
inc
js
xor
xchg
xchg
or
jl
pop
repnz
add
aaa
mov
gs
pop
sub
add
sti
aas
loop
add
xchg
xlat
lea
adc
enter
faddp
loop
clc
test
test
aam
bound
call
lods
loop
ds
cld
xor
or
jns
sbb
outsb
popa
add
mov
add
test
pop
loopne
add
arpl
adc
aad
les
cwtl
sti
cs
nop
mov
stos
mov
out
ds
scas
imul
cli
fnstenv
pop
sbb
test
jmp
cmc
or
loope
ljmp
jbe
add
aas
cmp
adc
mov
push
rolb
inc
and
push
enter
mov
call
and
and
and
in
enter
jns
cs
out
adc
adcb
daa
jb
pushf
loop
and
mov
andl
adc
out
cmp
adc
push
aaa
hlt
dec
cmp
cmp
dec
and
dec
lret
sub
pop
jo
add
insb
and
daa
add
xor
adc
fidivs
jg
js
push
adc
jno
jbe
cmc
add
and
add
cli
jl
jns
out
or
add
mov
mov
cmp
or
xor
lock
add
inc
inc
in
mov
add
mov
xor
cmp
pop
mov
outsb
out
and
xor
aad
mov
in
jmp
sbb
fcmovbe
pop
cs
pop
loopne
cmp
add
adc
popa
flds
dec
push
setne
pop
fnstsw
scas
ja
jo
pop
or
add
pop
inc
mov
push
mov
sub
or
xor
lods
jae
push
ss
add
icebp
jmp
mov
xchg
nop
or
scas
int
add
mov
mov
cmp
pop
mov
sub
shrb
mov
dec
xor
sbbb
push
sbb
dec
in
int
push
add
mov
add
out
jle
mov
jb
pop
add
xchg
xor
push
ret
add
fcmovnbe
test
out
js
outsl
add
xchg
leave
std
xor
pop
in
ret
clc
out
add
push
or
sbb
mov
ltr
rolb
and
repz
adcl
pusha
addl
add
or
xor
push
mov
sbb
movb
test
xchg
lods
pop
xchg
mov
lods
add
call
test
cmp
jecxz
sbb
mov
cld
pop
pusha
int
mov
xchg
push
and
cmpsl
dec
popa
add
mov
jge
mov
test
cmp
add
push
in
stos
movsb
pop
aam
in
add
test
loope
add
cltd
movsb
mov
adc
dec
in
add
std
jb
add
mov
cs
call
cwtl
add
adc
decl
test
sarl
add
scas
xor
loop
repnz
dec
fiaddl
xchg
add
push
test
pusha
lock
dec
or
xchg
mov
and
push
add
xor
jns
cld
mov
and
pop
mov
adc
add
pop
imul
addl
in
inc
lahf
lds
popa
scas
adc
jecxz
cmpl
inc
mov
cmovs
and
add
fistpll
cmp
cwtl
ja
push
sahf
dec
lret
repnz
jle,pt
into
mov
and
or
push
ljmp
inc
aam
lea
mov
xor
sub
cmp
xor
inc
jae
and
bound
jns
pusha
add
outsl
lcall
jp,pn
add
sub
popa
mov
imul
sub
mov
das
jmp
add
divb
add
sbb
push
inc
mov
cli
add
ja
dec
cmpsb
inc
mov
cmp
ret
sbb
repz
mov
dec
jp
pop
imul
jns
push
mov
popf
pop
xor
and
gs
nop
and
dec
xchg
scas
jbe
je
add
mov
cld
xchg
xor
push
cmp
movsb
pusha
cs
jno
sbb
out
rol
ljmp
repz
div
mov
test
ds
fnsave
add
mov
mov
fidivrs
sub
nop
lahf
add
xchg
lcall
adc
pop
es
sbb
add
or
sub
je
push
push
loopne
mov
add
and
xor
lods
cwtl
xor
push
repz
mulb
jne
shl
xchg
je
mov
call
inc
mov
add
es
mov
xchg
pop
or
inc
jbe
ss
dec
add
stos
addl
add
push
push
xchg
imul
mov
add
mov
clc
inc
sar
aaa
add
daa
les
jl
add
jno
dec
jae
xchg
sub
sbb
sub
add
adc
into
xchg
in
push
push
orl
bound
nop
imul
push
adc
call
cmp
fsubl
xchg
ret
loopne
iret
inc
sub
push
es
subl
push
testb
and
test
lock
decb
cwtl
cld
add
sub
das
lock
mov
cwtl
mov
or
lret
fstpt
inc
lods
bound
mov
dec
daa
xchg
movl
jbe
add
or
flds
and
sbb
jl
push
into
sub
xchg
imulb
dec
dec
inc
outsl
cmp
cs
popl
icebp
lahf
mov
xchg
mov
cmpsb
add
shrl
scas
movsb
lods
push
cmpl
jae
xchg
test
mov
std
ret
add
rolb
lret
inc
movsl
and
cmp
mov
ror
leave
fmuls
cs
dec
aad
adc
cltd
insb
pop
movsb
shrb
jno
cmp
push
lods
cmpsb
push
sub
daa
xor
inc
sbb
pop
jge
add
jl
mov
dec
add
sahf
sbb
mov
push
sbb
lds
pop
mov
filds
cmc
js
dec
lods
mull
jo
loopne
into
aas
aad
xchg
lds
add
mov
clc
movsb
add
mov
adc
inc
outsb
add
add
inc
lods
add
imul
and
pop
mov
mov
mov
sub
lahf
add
jge
inc
daa
mov
arpl
sbb
test
jmp
xor
pop
add
dec
push
movsl
add
add
cmc
push
adc
imul
lods
fsubr
add
outsb
cmpsb
stc
sbb
push
bound
jo
in
test
daa
pop
push
and
mov
cmp
add
jnp
jp
loopne
cli
sub
or
shl
fdivrl
or
push
mov
enter
jo
dec
fs
dec
pop
ss
or
push
mov
sub
mov
cmp
inc
test
pop
and
inc
stos
lahf
inc
rclb
pop
pop
xor
cmpsl
sub
dec
fcomps
adc
inc
nop
cmp
push
cmp
xchg
mov
add
dec
sbb
gs
lds
ljmp
pop
xchg
cmp
mov
subb
or
cmovle
sub
fisttps
test
add
out
int
mov
jnp
add
enter
fs
or
mov
cmovl
inc
lods
push
adc
add
mov
in
ficompl
int
sti
mov
fs
inc
push
jns
and
in
push
inc
mov
push
enter
pop
add
cmp
outsl
stos
bound
jns
add
mov
xlat
inc
cmpsl
loopne
sbb
dec
add
hlt
mov
mov
clc
in
add
fidivrs
cmp
push
roll
mov
dec
jl
mov
add
pop
mov
push
or
ret
xlat
stos
cmpsl
pop
sbb
outsl
cmp
add
mov
dec
cmp
push
sbb
jge
pop
fst
inc
or
loope
cmpb
scas
mov
xorl
repnz
inc
aam
push
cmp
mov
add
add
jge
adc
sbb
hlt
pop
lds
add
fcoms
mov
pushf
pop
jbe
aam
add
shrl
cmp
fldt
call
in
movsb
and
xor
sti
add
sbb
pushl
dec
push
orb
ja
xor
and
shrb
pop
sub
or
addb
mov
dec
inc
cmpsb
popa
mov
les
add
jo
iret
cld
fwait
inc
hlt
dec
add
rorl
jp
arpl
or
ss
loopne
cmp
xchg
sti
rol
in
stos
or
cmpl
mov
inc
mov
addb
fimull
or
xor
fucomip
pop
adcb
xchg
xor
mov
aaa
inc
in
in
sahf
pop
mov
rolb
cwtl
iret
mov
pop
jae
add
popf
mov
dec
sub
lods
add
test
clc
xchg
push
in
and
lret
je
jnp
add
push
dec
ret
add
add
xlat
mov
push
sbb
mull
stc
femms
pop
sbb
rolb
mov
clc
pop
sub
cmpsl
add
lock
add
popf
in
cli
pusha
push
add
xchg
add
call
repnz
ds
inc
testl
and
loop
jge
or
cmp
dec
lahf
loopne
out
sub
jae
stos
mov
add
or
incl
das
nop
sti
enter
scas
sbb
fimull
adcl
pop
sbb
clc
xchg
xor
cli
jecxz
jb
add
fwait
xor
jmp
xchg
les
fmul
xor
add
mov
cmp
add
mov
push
sar
push
lock
sbb
int3
xchg
push
out
lock
add
gs
loope
dec
ret
cmpsl
mov
lods
test
pop
jmp
std
pop
and
icebp
xchg
out
stos
outsb
dec
add
mov
loope
cli
cmpb
fcoml
jns
pop
fwait
stc
lock
or
repz
imul
mov
imul
or
rcll
and
aaa
movsl
inc
outsb
add
sub
fcompl
aam
jge
cmp
imulb
in
xlat
add
and
call
fwait
and
pop
lock
enter
movsb
adc
cmp
mov
xchg
popa
jle
xor
add
insb
adc
movsl
inc
pop
mov
scas
sahf
insb
and
lds
add
xlat
add
xor
fwait
inc
ljmp
addb
popf
scas
xchg
sbb
and
cmp
mov
push
mov
aas
fisubrs
outsb
lret
push
loopne
jecxz
mov
cmp
mov
aas
cld
sbb
adc
xchg
inc
xchg
and
out
or
and
jmp
jb
or
add
adc
jbe
int3
add
std
and
cmp
add
xlat
insb
push
daa
in
notb
xorb
or
hlt
add
xor
fdivs
pop
fistps
popf
orb
lock
add
loopne
inc
es
xchg
hlt
mov
add
cmpsl
mov
movsb
mov
inc
mov
push
jge
add
mov
jns
or
add
jo
out
aas
ja
in
adc
mov
add
pop
push
loop
pop
jns
sbb
call
cmp
dec
add
cmpb
enter
jecxz
popa
push
dec
or
jo
movb
sbb
sbb
test
add
test
pop
mov
sub
mov
or
fldcw
sub
jle
mov
adc
int
and
xor
mov
push
aam
add
push
inc
jnp
repnz
add
cmp
and
loopne
adc
push
xchg
sbb
jl
jl
xchg
in
inc
lods
sub
out
xchg
insb
add
fldenv
jmp
movsb
xor
std
mov
mov
mov
pop
mov
sub
pusha
cmpl
dec
pop
cmp
xor
rclb
adc
lock
mov
lret
cld
or
out
xchg
jno
add
es
add
sbb
pusha
dec
ret
sbb
mov
add
xchg
daa
mov
out
inc
jb
mov
lock
dec
clc
out
jge
xchg
cmp
or
sbb
xor
dec
and
sub
xor
add
mov
movsb
add
faddl
lock
leave
dec
fldcw
push
ret
add
inc
aad
push
icebp
cmp
add
adc
mov
mov
add
sub
iret
mov
lods
jl
mov
andb
repz
xchg
add
mov
pop
mov
pop
gs
xchg
xor
or
shll
and
adc
enter
popa
test
into
push
cmp
bound
jo
jmp
dec
jne
js
pop
push
cmp
sub
mov
lock
add
aaa
pusha
enter
jp
lods
pop
sbb
sub
in
fiaddl
mov
les
inc
cmp
mov
mov
and
shlb
dec
aad
inc
insb
adcl
xchg
fmuls
ds
mov
add
dec
lds
data16
jo
pop
push
add
xchg
push
add
cs
xchg
incl
iret
push
and
jmp
testl
scas
jbe
dec
repnz
stc
xor
jg
sub
jnp
addr16
add
cmp
jp
jmp
mov
shr
lea
roll
mov
sub
test
fs
mov
dec
pop
jmp
roll
sub
and
xor
jle
enter
jne
rolb
fists
add
not
testb
and
rolb
dec
cmp
dec
fbstp
aad
sbb
adc
sbb
out
lods
aam
test
sbb
add
fldl
push
push
add
nop
push
subb
fcmovnb
xchg
cmpsb
sub
jge
jecxz
int3
ja
outsl
fimuls
mov
std
fiaddl
pop
dec
adc
mov
fistl
or
in
pushf
jo
test
mov
add
cmp
icebp
pop
xor
adc
std
dec
inc
mov
add
iret
scas
push
push
rorb
dec
jne
aam
add
cmpsl
popf
outsl
xor
jbe
lods
loopne
aaa
lock
pop
cmp
outsb
or
subb
adc
xlat
into
mov
add
subl
xor
cmpsl
and
jbe
add
test
adc
mov
clc
subb
loopne
pop
pop
push
push
repnz
mov
cli
push
add
mov
push
push
je
mov
mov
aas
subb
adcb
in
mov
add
in
loope
xchg
pop
cmp
das
adc
cld
add
and
add
push
in
daa
cmc
mov
fdivrl
add
sub
mov
pusha
cmpsl
add
pop
push
pop
nop
pusha
jg
ret
sub
jo
jns
fwait
repnz
pushf
int3
adc
xacquire
inc
adc
in
cltd
push
or
push
pusha
scas
nop
pop
rolb
cli
js
test
add
mov
es
nop
add
xchg
jle
or
lds
pop
and
jne
push
adc
mov
repnz
cmp
dec
lods
dec
add
jmp
adc
aad
add
adcb
xor
and
inc
mov
adc
lcall
xchg
sub
call
dec
ret
add
xor
lods
test
bnd
out
aas
push
add
aaa
adc
cmpsl
xchg
add
idiv
divl
xor
repnz
pop
jmp
add
sub
insl
mov
test
mov
add
push
dec
cmp
add
jle
scas
push
shl
add
arpl
cltd
add
imul
cmpsb
lock
mov
ja
mov
mov
loope
and
mov
or
adc
pop
loopne
xchg
fs
int3
jno
out
in
es
test
gs
and
sbb
ss
mov
push
mov
push
aaa
addb
loop
lret
add
divl
outsl
in
fimuls
jecxz
or
scas
lds
dec
mov
and
xchg
loope
mov
sub
leave
in
add
js
pop
mov
int
outsb
add
out
mov
push
lds
rcl
push
scas
aad
inc
sbb
stc
mov
orb
mov
jg
addr16
hlt
pop
jecxz
pop
dec
lahf
fcomps
adc
mov
jns
cmp
cmp
and
jl
xchg
push
repz
ljmp
mov
loopne
aam
ret
aas
pop
cmp
clc
popl
xchg
add
inc
testb
out
fidivrl
jge
testl
shrl
push
mov
ret
and
cmp
xchg
mov
test
inc
adc
xchg
mov
fnstsw
xchg
add
ret
cltd
xor
mov
mov
cmpb
mov
mov
dec
sub
mov
dec
inc
pop
cli
mov
lcall
add
sarl
inc
add
rorb
pop
add
fildll
sbb
lcall
mov
cmp
cmp
jl
je
or
jmp
ja
mov
cmp
call
pop
cli
inc
cmp
pop
sahf
jne
orb
hlt
test
loopne
ret
add
pop
cmp
cmpsb
lahf
enter
hlt
dec
add
and
cmp
xlat
xchg
cmp
inc
cmp
and
fcomps
mov
jge
jmp
jne
cld
cs
frstpm(287
and
int
lock
lret
lcall
add
add
ret
jg
jns
add
mov
sbb
mov
popl
push
mov
mov
dec
jmp
cmp
into
jle
add
stos
shrb
addb
movsb
dec
mov
and
mov
push
fsubr
cli
negb
xchg
nop
iret
add
mov
push
rolb
xchg
cmpsl
inc
fstpt
leave
inc
int
inc
add
scas
xor
sahf
dec
mov
push
pop
pop
ficoml
push
mov
jl
inc
sarb
push
add
mov
and
jne
pop
add
pop
add
aas
out
mov
add
push
movsb
ret
and
mov
xchg
dec
cltd
fiadds
adc
add
add
fs
lods
push
pushf
xor
cmpsl
inc
sub
orb
sbb
outsl
ficompl
add
or
inc
lahf
dec
aaa
pusha
add
stos
out
hlt
and
arpl
stos
ja
mov
pop
push
jae
nop
fbstp
xchg
dec
xchg
pop
out
jnp
xor
out
rcl
mov
dec
stos
rcr
dec
jmp
in
out
jg
and
push
daa
ljmp
rolb
sbb
or
mov
jmp
shlb
js
scas
cmp
ljmp
pop
cmpsb
add
popf
int3
pop
jmp
fidivrl
leavew
movsb
aam
pop
add
xor
std
push
idivl
mov
add
fdivl
add
push
inc
hlt
mov
dec
pop
aam
mov
inc
mov
in
push
test
pop
mov
push
std
adc
adc
sahf
testb
pusha
sbb
test
push
int
mov
popf
or
and
rorb
add
lea
push
push
pop
add
inc
or
mov
pushf
sub
xor
into
add
lret
add
les
and
clc
add
insl
adcl
xor
cmp
xor
sub
ss
add
sarl
pushf
mov
das
push
mov
push
add
pusha
mov
push
add
int
dec
push
and
jne
fdivs
fiadds
lret
cmp
push
or
arpl
push
mov
mov
scas
jmp
fnsave
sbb
or
add
out
add
xchg
cmp
mov
add
cmpsl
xlat
add
test
sub
mov
mov
frstor
mov
cld
addr16
pop
jae
jle
add
sub
mov
pop
jl
cmp
rolb
and
mov
adcl
mov
idivl
test
xorb
mov
jp
xlat
xor
mov
push
fdiv
in
fs
ds
push
dec
pop
lock
jbe
mov
call
in
mov
mov
adc
shrb
pop
add
jo
pop
xor
icebp
inc
out
sbbb
cmpsb
push
pop
xor
mov
cmc
add
adc
stos
jo
sbb
scas
bound
cs
ds
test
nop
dec
and
inc
push
or
mov
push
sub
scas
xor
cs
xor
adcb
es
mov
xchg
xchg
dec
inc
add
mov
popf
sub
ja
add
jae
lcall
jb
pop
adc
sar
shll
cmp
adc
jb
outsb
add
je
cmpsl
xor
inc
clc
fdivrl
pop
mov
push
jg
sub
pusha
std
add
gs
repnz
lock
aad
das
add
xchg
pusha
xor
or
xchg
outsl
sub
clc
cmp
dec
std
xchg
mov
hlt
add
push
add
xchg
mov
mov
push
icebp
pop
sub
dec
insb
std
add
or
sbb
sbb
push
cmpsb
das
mov
adc
popa
jne
push
stc
pop
push
test
les
hlt
push
add
jp
push
jns
test
add
jge
addr16
out
out
add
mov
xchg
mov
sbb
ljmp
add
lds
sbb
mov
dec
fldenv
adc
add
into
leave
inc
pusha
xchg
sar
xchg
mov
fnstcw
pop
mov
clc
xchg
add
sub
sahf
mov
jno
adc
xchg
pop
add
lcall
lock
pushf
ja
inc
and
cmc
fisubrl
iret
pushf
jo
ds
xor
xor
push
stos
int
sbb
shl
xor
xlat
cli
or
mov
cmp
loopne
cmp
pop
mov
mov
filds
in
icebp
hlt
sub
push
addb
adc
pop
inc
test
movb
fldt
imul
add
jnp
sub
add
stos
lea
repnz
arpl
dec
fstpt
mov
sub
sti
sub
adc
add
pop
std
test
xchg
pop
or
adcl
mov
andb
add
fcmovnu
add
adc
xlat
push
adc
adc
dec
test
mov
lcall
mov
xchg
mov
mov
pop
orb
aas
jne
inc
inc
cmp
or
ret
jle
pop
out
pop
std
faddl
dec
and
fsubrs
lret
add
cltd
xchg
and
inc
faddl
cmp
cmp
jns
and
popf
sbb
xchg
adc
add
idiv
pop
add
inc
fwait
mov
imul
mov
mov
in
add
push
daa
fnstsw
inc
push
jmp
jno
cmp
sbb
and
adc
ss
aaa
adc
shl
out
imul
test
jg
jecxz
test
xchg
pushf
mov
in
pop
jle
in
leave
or
mov
mov
or
aaa
add
or
sbb
push
movsl
in
mov
mov
push
data16
outsb
in
or
pop
add
ds
cwtl
mov
or
push
popf
add
addl
mov
inc
dec
call
int3
cwtl
xchg
cmp
shl
push
inc
cmc
mov
mov
add
mov
xchg
add
fdivs
gs
cmp
or
jle
in
mov
and
adc
xorb
jl
scas
sbb
mov
mov
test
in
gs
sahf
dec
jb
rolb
xor
jns
out
loop
add
pop
mov
pop
adcb
loopne
or
cmp
test
or
int3
cld
add
xor
sub
push
outsb
cwtl
push
add
arpl
xor
add
sbb
xor
pop
insl
mov
popf
adc
jle
mov
in
out
push
test
cwtl
mov
frstor
jo
imul
jo
mov
dec
stc
shrb
popf
sub
call
pusha
dec
and
inc
xchg
sahf
mov
add
sub
in
imul
loop
stc
iret
mov
or
mov
cmp
push
add
mov
ds
mov
sbb
sub
add
xchg
daa
adc
pop
ljmp
roll
pop
add
es
neg
mov
js
push
ljmp
aas
sbb
aam
adc
shlb
repnz
pusha
mov
mov
mov
xchg
add
xor
loop
shrb
jmp
sbb
cmp
add
xor
sbb
xor
mov
popa
daa
xchg
pop
push
mov
andb
or
sarb
loopne
lds
pop
cmp
fidivrl
enter
pop
stos
dec
sub
mov
xor
and
ss
dec
icebp
pop
fwait
hlt
xchg
cs
cmpl
add
dec
add
push
or
or
inc
or
inc
mov
jns
sti
add
sbb
jle
xchg
pop
out
sbb
fnsave
nop
inc
pop
push
rorl
dec
call
dec
jecxz
xchg
movsb
test
rorl
enter
icebp
push
add
inc
sbb
rclb
divb
sbb
mov
lret
pop
arpl
push
out
add
call
add
adc
mov
add
jne
imul
mov
popa
dec
xchg
jmp
movsl
mov
or
push
add
sub
lea
pop
inc
cmp
test
jg
and
data16
jns
es
add
ljmp
in
and
lret
iret
imul
sbb
jp
adc
mov
dec
push
dec
aam
scas
enter
cmp
test
mov
or
xchg
sbb
adc
fsubrs
xchg
add
and
bound
in
into
sbb
cmp
sbb
push
call
filds
je
or
shrb
daa
mov
add
andl
int3
sbb
adc
cmp
rolb
cmp
stos
sub
jmp
jns
test
mov
in
pop
fnstsw
add
dec
xor
xchg
add
lods
icebp
lods
xor
xchg
sub
in
add
jb
add
or
xor
cmp
inc
enter
scas
xlat
lods
jmp
nop
scas
aaa
in
and
das
inc
push
mov
fdiv
add
cmc
popa
push
movsb
inc
dec
adc
cli
mov
sbbb
int
mov
xchg
outsb
pop
cs
call
sub
dec
mov
push
cli
test
mov
push
cmp
xchg
sbb
insl
popa
inc
mov
pushf
cmpb
iret
ret
inc
mov
rclb
jno
add
ljmp
lea
xlat
add
nop
pop
jns
out
ret
aad
mov
add
push
dec
jnp
fadd
ret
add
sub
jae
cmc
mov
repnz
outsl
jg
xor
ror
in
sti
out
push
inc
cli
mov
sub
mov
cmp
cmpsb
lret
mov
adc
hlt
fwait
add
mov
sti
inc
add
in
and
dec
cs
rolb
or
fnstcw
clc
add
jle
mov
inc
push
jg
mov
jns
repz
add
and
rclb
or
dec
js
popa
add
xchg
sbbb
lods
add
pop
pmulhw
xchg
stos
add
cmpsl
insl
test
shr
ret
push
push
fsubrs
jnp
or
mov
dec
insb
add
sbb
dec
add
add
test
js
aam
dec
sbb
push
pushf
loopne
jmp
pusha
insb
sub
faddl
cmc
xchg
pop
andb
sbb
add
jle
mov
clc
add
push
pop
ljmp
arpl
adc
testl
mov
sub
fiadds
push
js
test
add
mov
or
push
cld
sbb
js
jp
loope
add
jne
jecxz
xor
push
inc
arpl
xchg
mov
sti
cmc
mov
push
push
and
lret
cltd
sbb
add
cmpsb
outsl
js
pop
xlat
movsl
call
shl
pushf
and
negb
dec
ret
add
mov
repnz
add
or
push
lds
pop
mov
mov
add
jne
jl
mov
ds
add
lock
outsb
out
loop
and
add
or
in
adc
pushf
mov
xor
mov
add
roll
out
cmp
add
add
jno
inc
sub
test
in
lea
and
test
ffreep
and
insb
jbe
out
fwait
repnz
add
push
addr16
or
ret
mov
push
insb
add
andl
adc
fdivrs
rcrb
sbb
lahf
pop
call
push
outsb
in
add
sar
sti
in
out
add
fdivr
jge
jne
xlat
push
cmp
adcb
add
rclb
sub
jae
sbb
adc
adc
movl
add
xchg
repz
pop
mov
fisubl
add
dec
add
push
pop
lods
aas
addw
pop
inc
ret
pop
or
push
aad
jbe
xchg
pop
or
ror
and
dec
in
jmp
jmp
fistps
mov
cmp
jecxz
add
lock
push
push
fistpl
adc
enter
cwtl
mov
ljmp
inc
outsb
int3
sub
sbb
adcl
mov
add
nop
fs
dec
orb
jmp
je
imul
pop
rcll
mov
cld
add
nop
inc
lea
test
or
orb
clc
add
and
push
repnz
inc
sbb
add
push
sub
std
insl
add
xchg
cmp
add
test
jp
sbbb
aam
je
add
mov
mov
and
shrb
cmp
pop
add
sub
jmp
jbe
sbbl
pop
inc
repz
push
mov
mov
pusha
jns
sarb
call
sub
loopne
xor
dec
adc
sub
test
mov
js
jle
lret
shlb
push
mov
add
pop
arpl
outsl
jno
add
push
jecxz
mov
adc
sub
xlat
sbb
inc
dec
hlt
iret
xorb
add
mov
ja
push
std
push
js
add
push
hlt
decb
or
in
add
aam
pop
sbb
add
jp
je
push
sahf
jl
adc
cli
push
add
ret
xlat
add
js
popf
jno
cmpsl
clc
pop
in
sbb
negb
loopne
es
loop
adc
jp
cmp
and
fs
add
xor
cmp
adc
lock
ret
or
pop
sbb
mov
popf
movsl
adc
push
clc
mov
cli
mov
mov
cs
imul
adc
dec
sbb
test
push
repz
repnz
dec
sbb
cmp
outsl
jb
add
sahf
inc
movsl
mov
adc
add
mov
push
mov
xchg
subl
call
ret
cmp
enter
jnp
mov
in
xor
mov
pop
add
loopne
or
les
data16
dec
adc
xchg
adc
sahf
xor
cmpsb
sbb
lcall
add
int3
imulb
mov
jb
leave
addb
mov
aaa
push
fdiv
add
ficoms
nop
pushf
gs
pop
and
repz
mov
or
popf
fwait
cltd
stos
out
add
sbb
int
movsb
ret
pop
call
inc
jle
cltd
fstps
popfw
imul
add
sub
movl
jne
xchg
pusha
or
and
add
fisttpll
insb
outsb
dec
lds
mov
in
add
movl
and
add
movsb
out
imul
add
scas
call
inc
and
imul
add
pusha
mov
adc
cs
int3
sbbl
add
add
push
sarl
jo
push
fnsave
jbe
pop
cmc
orb
mov
add
sub
pusha
sbb
inc
add
xor
add
add
jl
scas
add
sub
xor
cmpsl
mov
or
inc
sub
js
sbb
xor
add
sbb
dec
jo
pop
lcall
xor
movsl
loope
add
jle
fiaddl
div
adc
addl
stos
int3
shrd
and
push
dec
xor
sar
push
mov
push
loop
and
mov
lods
add
ret
add
adc
clc
mov
mov
rcrb
repnz
mov
das
jne
fstps
mov
enter
out
add
stos
test
add
mov
xchg
clc
mov
test
add
pop
or
jne
xor
cmp
add
dec
into
mov
xchg
pop
inc
cltd
in
cmp
in
imul
shrb
sarb
pop
and
fs
imul
pop
pop
shlb
shrl
and
out
and
add
iret
dec
jo
mov
stos
repz
push
out
rcrb
mov
xlat
mov
cld
sti
sbb
flds
and
cmp
add
pusha
add
add
push
pop
xor
test
stos
add
pop
and
sbb
xchg
cli
mov
test
dec
push
add
sbb
xor
xor
orl
nop
insl
adc
call
lds
cmp
push
cmp
rcrl
adc
popa
mov
add
xchg
in
outsb
sbb
mov
mov
fld
add
inc
inc
enter
push
mov
pop
imul
mov
cmc
or
push
add
or
bound
push
and
add
mov
mov
adc
mov
add
xchg
xchg
add
ds
mov
jb
add
jnp
scas
enter
sub
push
flds
sbb
mov
repz
stc
scas
add
push
adc
ss
push
push
pop
adc
xchg
lods
mov
mov
sub
mov
jnp
sar
add
xchg
dec
or
cli
adc
shl
lods
mov
mov
add
dec
sub
jmp
lss
jb
out
add
cmpsb
pusha
out
andl
add
mov
cwtl
loope
jnp
mov
inc
and
jae
lcall
shrb
or
sub
sub
jp
lods
clc
test
fiaddl
or
xchg
test
and
or
jns
mov
xor
ljmp
les
add
xchg
je
ret
cmp
add
jl
ja,pn
sbb
imul
cmp
add
sub
fildl
inc
pop
push
insl
clc
add
ficompl
mov
and
push
punpckhbw
mov
and
sti
inc
addl
pop
xchg
test
mov
iret
mov
push
or
gs
add
and
mov
mov
or
push
cltd
and
lea
dec
rol
scas
sub
cwtl
dec
out
pop
repnz
add
scas
mov
jmp
push
add
mov
add
push
mov
cmp
xchg
pop
and
popa
fnstenv
fwait
mov
mov
rorb
push
jp
mov
xor
ljmp
mov
dec
adc
adcl
mov
fsub
push
mov
add
and
jmp
loopne
out
sub
sbb
into
sbb
xchg
cmp
movsb
pop
movl
test
enter
mov
jmp
adcb
dec
clc
add
int3
cltd
stc
add
sar
add
cmp
xor
pop
pusha
push
adc
add
clc
sti
addb
cmp
out
cmp
sub
fisttps
dec
jmp
push
js
and
xor
dec
jp
rorb
and
adc
adc
sub
adc
cmc
jo
orb
std
cmp
cmp
mov
add
dec
push
lods
in
inc
add
outsl
mov
xor
xor
insb
pushf
sbb
xchg
mov
pusha
push
jge
out
push
shll
test
fbld
into
rorb
outsl
cs
xchg
jo
push
loopne
leave
popf
out
add
fidivrl
inc
insl
std
cvtpi2ps
dec
mov
scas
imul
push
subb
iret
add
push
das
add
loopne
imul
jp
mov
arpl
nop
pop
xor
add
add
emms
add
cmp
or
cmpsl
call
lds
out
pusha
lock
or
push
xchg
cmp
pop
pop
inc
fisttps
fisttps
dec
in
imul
add
xor
mov
jo
sub
adc
dec
add
stos
mov
ret
decl
push
nop
add
aad
mov
xlat
add
lock
int
cwtl
add
mov
mov
add
jge
loop
mov
scas
or
cld
lret
pop
clc
mov
sbb
lods
cmc
out
push
xor
pop
dec
xchg
arpl
cmp
shr
sbb
push
fnsave
mov
arpl
xchg
outsl
inc
dec
jbe
imulb
std
xor
sbb
inc
mov
add
push
pop
pop
mov
sbb
or
outsb
add
add
dec
mov
out
mov
jb
les
call
movl
in
je
inc
lock
and
mov
aaa
inc
aad
pop
lods
in
cmp
xor
or
add
mov
clc
lock
data16
sub
xchg
add
fwait
negl
add
add
repnz
jb
insb
inc
hlt
ret
fldt
leave
ret
xlat
shlb
in
popa
mov
cmp
lret
outsl
fdiv
xor
imul
mov
adc
and
xlat
sbb
into
add
push
cld
mov
fdivr
aas
adc
cmp
pop
sarl
movsb
mov
fdivr
sub
add
push
iret
jne
and
sti
adc
adc
add
imul
xor
add
aaa
push
xchg
jg
push
jns
mov
inc
adc
sti
sub
inc
ds
in
test
sub
out
dec
push
sbb
xchg
inc
pop
loopew
in
lret
xchg
cmpsl
add
dec
lahf
test
xlat
and
or
fnstcw
inc
jbe
add
inc
mov
push
insb
adc
les
pop
add
or
mov
or
and
lods
sbb
sbb
rolb
rolb
jnp
cmp
in
cli
sbb
add
push
in
popa
push
pusha
dec
pop
add
repnz
mov
add
pop
scas
ja
cmp
sub
int
aad
or
xor
adc
js
mov
pop
sbb
add
adcl
adc
xor
js
dec
call
adc
inc
fisubs
add
fwait
xor
add
sahf
ljmp
aaa
cmpsl
inc
jo
lds
sti
add
insl
imul
into
or
les
adc
adc
adc
xor
and
sarb
xchg
add
lret
pushf
sub
rcrb
insl
push
mov
enter
sbb
push
mov
rorb
add
jae
stc
mov
adc
jmp
shlb
fst
jb
jle
sub
jae
mov
loop
sub
stos
cmpsb
scas
loopne
incb
push
push
movsl
sbb
fistpl
mov
dec
ljmp
sarb
movsb
jmp
in
xor
dec
imul
ds
iret
pop
mov
xchg
mov
rcrl
ror
jge
sub
add
mov
js
xor
mov
add
mov
sti
and
mov
jle
lods
cwtl
je
lods
add
dec
push
in
arpl
sbb
push
push
dec
and
add
ficoml
add
nop
bound
fisttps
cmp
jge
push
rolb
inc
and
xchg
add
fbstp
xorb
pop
rcll
scas
out
jg
add
lods
xlat
push
pop
lahf
sub
cs
pop
scas
call
dec
inc
aam
adc
and
sbb
inc
insl
dec
je
data16
cmpsl
and
shll
imul
pop
cmp
insb
stc
lret
sbb
aam
adc
add
add
lods
in
dec
inc
push
jbe
pushf
shr
pop
cmp
hlt
xor
dec
ds
popf
clc
add
cmp
pop
bound
cld
mov
push
sbb
sbb
pop
adc
jnp
add
in
insl
sub
pop
ljmp
arpl
clc
add
outsl
push
outsb
test
pop
cltd
xor
cmc
out
or
add
jp
inc
les
pop
and
sahf
pop
pop
push
adc
xor
jne
jle
push
jns
add
addr16
insl
iret
ret
bound
pop
outsb
inc
fsub
xor
cmc
mov
add
pop
inc
out
icebp
clc
mov
inc
jg
add
es
lahf
adc
push
lea
xor
mov
sub
call
cli
add
sbb
scas
mov
mov
das
test
maskmovq
testl
mov
andb
out
sub
add
sti
cld
pop
into
xlat
or
xor
cmpb
sub
mov
mov
push
cmp
fwait
cs
rorl
dec
push
cmp
lock
xchg
inc
hlt
out
cli
inc
dec
add
mov
lock
out
rolb
stc
pop
push
lahf
cs
sub
or
mov
sarb
adc
dec
xchg
ja
ljmp
push
add
jle
mov
test
pop
popa
sub
sti
dec
setne
mov
scas
js
fists
push
in
rcrb
jle
xorb
dec
rolb
fcoms
fs
add
incb
mov
dec
mov
jle
ret
imul
cmp
mov
xchg
add
cmp
movsl
shr
sub
sarl
xor
adc
test
cmp
mov
in
mov
das
push
dec
pop
dec
push
inc
addb
push
fwait
pusha
mov
push
imul
inc
cli
daa
pusha
cwtl
pop
add
enter
mov
pmulhw
xchg
push
jl
bnd
jne
add
push
cmp
jecxz
lea
cmp
call
push
push
cs
mov
pop
jmp
and
jnp
add
ret
inc
inc
stos
fadd
cwtl
add
out
lock
std
pop
xchg
dec
cwtl
xchg
fcomps
add
notb
xchg
daa
jle
or
sub
popa
sbbl
ds
xchg
mov
andb
adc
cwtl
in
xor
outsb
add
aaa
stos
sbb
add
jmp
notl
lods
icebp
mov
in
pop
xchg
loop
add
mov
jl
shr
add
repz
adc
sar
add
add
clc
in
mov
out
imul
test
enter
jae
and
add
stos
lods
jmp
into
inc
add
xchg
push
scas
add
sub
insb
pop
pop
lods
sbb
addr16
test
nop
jo
call
and
aaa
cmp
hlt
xchg
or
xor
loopne
pop
xor
cmp
dec
inc
cs
add
mov
sub
and
cmp
insb
out
jecxz
sti
push
add
cmp
mov
dec
add
xchg
and
aas
or
xor
add
and
mov
jne
test
dec
sub
add
movsb
leave
pop
gs
repnz
imul
daa
inc
add
jne
add
sub
push
sub
fdivrl
sbb
cmp
shl
push
das
adc
inc
fdivrs
add
mov
or
rclb
cmpsl
gs
icebp
mov
push
pop
lahf
das
mov
sbb
xchg
push
xchg
pop
mov
xor
sar
pop
pop
mov
jl
adcb
fistps
pop
push
ret
add
sub
test
add
mov
push
push
mov
lods
movsb
enter
xor
cmp
inc
mov
in
add
inc
rorb
rorl
and
mov
jp
adc
inc
enter
aad
adc
jbe
imul
aaa
or
jle
loope
add
cwtl
sbb
loop
jno
aaa
dec
imul
lahf
mov
mov
xchg
gs
sub
mov
push
cmc
push
push
inc
mull
ret
mov
mov
fld
ficoms
mov
jno
push
cld
adc
pop
loope
push
mov
inc
xchg
pop
addr16
int3
dec
sbb
add
push
scas
fiadds
inc
xchg
incl
cmpsl
lahf
insl
add
adc
add
mov
xchg
add
pop
push
aas
imul
jp
vprotb
sbb
add
sti
adc
dec
aad
enter
test
cs
btr
pusha
jl
push
lret
mov
add
add
arpl
add
xchg
cmp
pop
ds
and
test
jmp
movsb
jge
dec
push
sub
shrb
pop
cmpsl
aam
incb
push
cmpsl
jb
outsb
add
ret
push
adc
filds
aam
movsb
add
inc
lods
inc
xchg
nop
add
pop
mov
add
testl
mov
std
mov
dec
jle
pushf
pop
in
pop
imul
mov
or
push
add
pop
leave
jno
xchg
popa
pushf
mov
add
inc
jnp
mov
loop
mov
int3
add
test
cmp
cwtl
xor
add
adc
lahf
jle
inc
mov
mov
call
std
sub
jmp
pminsw
add
mov
clc
add
pop
mov
aam
nop
hlt
add
add
rolb
and
int
sbb
push
fsubs
js
pop
dec
or
scas
ffree
test
pop
adc
add
jle
fldenv
in
jecxz
add
fdiv
cltd
adc
nop
add
test
add
jp
dec
fs
adc
add
in
mov
adc
jne
sahf
adc
rcrb
js
add
xchg
jge
push
pushl
mov
lods
pop
adc
cs
mov
jae
add
and
cwtl
stos
enter
shll
mov
les
pop
cmp
add
dec
enter
sub
out
xor
mov
cwtl
in
dec
add
mov
jmp
mov
or
add
push
stos
pop
add
sbb
add
add
dec
aaa
and
and
mov
test
andb
xchg
and
push
jl
aas
sahf
cltd
mov
out
mov
add
mov
xorl
jo
add
jne
fwait
out
fstps
lock
add
out
jmp
xchg
add
sti
mov
lock
jp
lea
mov
ja
mov
jmp
add
dec
add
lret
sbb
jne
add
pop
sub
scas
cmp
sub
adc
sub
inc
cwtl
add
or
fisttpl
test
add
repz
push
sub
rcl
lock
sbb
add
iret
xchg
push
std
cwtl
das
sub
je
shr
xchg
mov
ss
mov
dec
cld
jp
add
xor
je
shlb
add
dec
xor
add
sub
stc
pop
scas
or
cwtl
inc
pop
flds
iret
in
mov
cmp
add
cmp
pushf
jle
add
movsb
loope
loopne
push
js
sbb
loop
shlb
add
xchg
cltd
add
add
mov
sbb
insb
xor
ds
add
xor
add
pop
push
popa
int
ja
add
xchg
sbb
xchg
xchg
or
xchg
js
out
or
lea
out
iret
mov
sub
pop
or
sub
and
mov
fs
adc
stc
or
add
push
jb
fstpt
xor
push
push
sub
add
inc
pop
ret
imul
movsl
xor
mov
ds
cli
add
adcb
xor
stos
fnstcw
inc
xor
sbbb
pusha
jnp
lock
pusha
cmp
out
aas
movsb
rol
xor
push
ja
icebp
or
add
lds
test
add
std
movsl
fnstsw
add
das
xchg
mov
cmc
pusha
inc
cmp
sbb
push
arpl
push
std
shlb
bound
and
imul
jne
loopne
nop
jo
lods
cwtl
inc
sbb
dec
jp
int3
add
lods
int3
adc
or
xchg
ss
pop
jge
ret
ret
cwtl
ds
loope
mov
add
stos
cmp
adc
movsb
add
or
jne
jge
aas
lcall
inc
inc
scas
enter
dec
push
mov
push
xlat
add
add
repz
sub
loopne
cwtl
mov
push
push
mov
xchg
fmuls
or
jo
push
lret
mov
add
dec
movsb
push
ss
pop
pop
pop
popa
xor
and
mov
adc
mov
outsb
lret
sahf
jge
fcomps
adc
test
test
add
dec
push
jl
outsb
dec
out
or
pop
cmp
push
mov
test
inc
cmpsb
add
mov
and
nop
rorl
push
loope
jl
dec
sbb
ja
inc
mov
popf
push
add
aam
js
fsubrs
push
mov
push
adc
cmp
sbb
std
lret
push
dec
cmp
js
cmp
sbb
mov
jl
lret
cwtl
jge
pushf
in
adc
rolb
cmp
adc
and
movsl
ds
inc
repnz
mov
fwait
lock
aaa
cwtl
roll
movb
js
cwtl
dec
dec
pop
aas
add
push
cmp
adc
cmp
loopne
xlat
sub
inc
jne
decb
pusha
pop
sbb
lods
or
lds
in
dec
std
xor
xor
neg
lcall
in
es
dec
cmp
mov
std
faddl
test
pop
daa
pop
sbb
mov
pop
pop
and
rolb
pop
mov
xchg
mov
je
ror
lock
push
pop
scas
lahf
test
xorb
xchg
into
sbb
xor
enter
pop
punpcklwd
incl
mov
jl
adc
adcl
sti
btr
fs
frstor
je
and
push
mov
mov
cmp
fs
adc
orb
adc
mov
bnd
cmpsl
xchg
cmp
lahf
add
sahf
push
bound
ror
loop
pop
add
ja
xchg
cmpsb
adc
sub
lock
jmp
fs
loope
sbb
addb
pop
push
dec
mov
es
sub
dec
jg
cmp
xor
outsl
push
xchg
imul
xor
xchg
clc
cmpsl
cmp
gs
or
jns
cmp
push
xor
pusha
dec
stos
sbb
cmp
stos
xchg
sub
lock
cli
xchg
cwtl
cmp
test
jns
cmp
icebp
out
shll
add
loope
mov
add
mov
inc
loopne
inc
add
subl
mov
adc
jle
or
js
sub
add
add
lea
mov
pop
jo
inc
add
mov
inc
push
jl
cmp
outsl
jecxz
test
xchg
cld
mov
das
sub
scas
add
shl
or
outsb
xchg
and
clc
dec
push
and
add
mov
les
cmp
push
push
add
fwait
pop
fldl
stc
nop
push
jmp
add
mov
leave
incb
fucomp
and
dec
mov
andb
mov
call
sbb
cmp
and
xor
dec
adc
scas
mov
dec
mov
and
and
sbb
fiadds
or
inc
cmp
and
ss
add
push
pushl
lret
pop
nop
push
add
inc
adc
xchg
out
and
jecxz
jp
mov
mov
xor
test
ds
rcrb
xchg
cmc
adc
popf
or
sahf
jno
rcl
mov
pop
push
fildll
dec
add
popf
inc
xlat
add
mov
add
hlt
push
aad
add
mov
loop
adc
cmp
fstl
mov
push
adc
add
inc
into
lea
scas
outsb
or
and
je
xor
and
xorl
mov
pop
or
push
or
or
push
out
aad
out
pushfw
clc
pop
push
pop
shrb
dec
nop
pop
add
pop
or
mov
add
jmp
inc
cmp
jl
inc
daa
xor
pop
fisubs
sub
dec
sub
js
hlt
xchg
nop
sbb
and
push
inc
loopne
dec
fisubl
sub
cmp
ret
enter
push
inc
loopne
loopne
adc
movsb
xor
xchg
pop
nop
jle
hlt
mov
sbb
jns
inc
cwtl
push
lods
popa
dec
or
hlt
rcrb
xlat
ss
imulb
test
imulb
mov
jae
std
add
inc
and
mov
out
cli
sarb
jo
daa
rolb
xchg
loopne
mov
gs
outsl
cmp
pop
push
loope
add
jl
inc
xchg
rcl
pop
and
fiadds
daa
pusha
add
sub
out
xor
pop
pop
call
inc
add
inc
pusha
fwait
sahf
or
bound
out
add
push
or
or
add
and
lods
push
imul
iret
pop
test
push
rolb
push
pop
dec
push
fadds
mov
shr
rolb
add
jecxz
faddl
std
sub
outsb
mov
xchg
ficomps
sub
loopne
mov
addr16
out
sahf
mov
ja
fiadds
add
xchg
mov
fsubr
add
cmp
push
sti
ljmp
jbe
xchg
mov
sub
enter
inc
jge
add
xchg
xlat
fmuls
sub
inc
clc
add
arpl
cmp
lret
jp
aas
mov
add
data16
imul
in
mov
add
imul
cli
add
jb
pusha
add
hlt
lock
add
mov
xchg
jl
push
jne
test
fcompl
pop
adc
pop
pusha
mov
jecxz
xor
inc
fistps
std
cwtl
push
cmp
test
imul
lods
add
lods
enter
cs
imul
xor
adc
jl
sub
adc
aaa
mov
add
test
jno
dec
fs
ret
out
jns
push
aas
and
jmp
mov
jne
add
jg
pshufw
jnp
xchg
xchg
sbb
incl
in
fs
xchg
lock
or
sbb
xor
dec
add
pop
push
std
rsm
add
test
hlt
pop
add
scas
sbb
mov
mov
jge
xchg
icebp
jo
test
dec
adc
jmp
push
ja
stc
jns
pavgb
mov
faddl
cld
hlt
das
and
fnsave
addb
mov
in
inc
popf
add
or
repz
add
cmpl
ds
es
inc
mov
mov
xor
psrld
pop
push
frstor
inc
stos
jp
and
inc
mov
imul
adc
pop
aam
stos
adc
loopne
add
mov
test
pop
fisubl
xchg
dec
add
lods
in
loope
scas
mov
cmp
cmp
cmpsb
mov
push
sub
nop
sbbb
add
mov
mov
jp
insb
jne
enter
pop
or
in
or
mov
pop
mov
add
mov
cmp
insb
les
pushfw
xlat
add
xor
jle
jo
std
inc
orb
pop
mov
mov
loopne
sbb
add
loop
adc
mov
add
dec
push
mov
in
mov
jp
add
hlt
inc
jmp
enter
shll
pop
loopne
pop
mov
cltd
add
mov
sbb
lret
add
adc
movsl
bound
add
sub
loopne
xchg
add
adc
testl
push
cmp
or
pop
aad
aas
inc
sbb
sbb
add
gs
into
roll
cld
xchg
inc
es
loop
iret
mov
mov
mov
js
jle
push
add
out
cli
adcb
jns
add
cltd
bound
push
filds
xor
fistpl
aaa
jmp
sbb
add
mov
jmp
bound
sbb
movsl
mov
and
nop
xchg
mov
jnp
fsubl
and
lret
mov
mov
in
add
ret
lea
mov
push
add
xchg
push
xchg
hlt
in
add
push
sub
scas
loopne
je
dec
leave
lcall
or
dec
add
push
mov
pop
adc
pop
loopne
lock
cmp
dec
pop
sbb
add
push
jg
jo
add
add
add
movsl
and
push
jle
sbb
es
push
loopne
sarb
xor
call
std
mov
nop
jl
loope
popa
test
add
fwait
mov
test
mov
hlt
mov
or
int3
or
adc
cmp
popf
add
lret
dec
mov
and
imul
sub
out
aas
in
or
iret
and
or
or
add
push
ljmp
outsl
mov
fwait
cs
ja
pop
fcoml
mov
mov
test
repz
sub
or
pushf
ficoms
in
cmp
mov
ss
push
andb
and
cmp
pop
aam
push
cmpsl
sbbb
rolb
adc
lock
xor
sbb
inc
fs
push
cs
pop
sbb
jo
sbb
loop
and
xchg
clc
gs
pop
int
popa
add
and
or
mov
dec
xchg
add
xor
cmp
and
add
sbb
dec
int3
pushl
ror
inc
jecxz
cmp
stos
ja
iret
cmp
mov
mov
imul
out
cmc
or
pushf
pop
pusha
add
pusha
aas
lret
pop
rcrl
mov
push
jb
jge
jg
add
mov
push
shll
add
scas
rclb
pop
cmp
nop
add
dec
and
rcll
inc
mov
sub
add
mov
add
jle
dec
stos
adc
jmp
cmp
mov
loopne
mov
lock
mov
scas
out
sti
mov
aad
adc
popa
imul
jb
mov
add
mov
xchg
xor
in
packsswb
lods
call
pop
out
lock
lods
xlat
xor
pop
cmp
xor
pop
inc
pop
add
cli
je
jecxz
rclb
les
xchg
cltd
sub
lock
or
adc
pop
sbb
inc
movsb
arpl
adc
in
adc
test
call
pusha
js
inc
orb
fnstenv
xchg
rcl
add
mov
dec
scas
add
int
or
pop
jns
fisubs
and
stos
cmp
xor
xchg
sub
in
sub
pop
je
dec
mov
fs
mov
out
add
sub
add
sbb
stc
mov
mov
js
jl
cmp
mov
push
cmpsb
outsl
dec
imul
push
sub
mov
lock
cs
add
aam
fs
mov
inc
push
mov
add
mov
test
pusha
rcrb
test
or
pop
stc
push
jo
adc
scas
add
fadds
add
sahf
pop
out
cli
sbb
mov
cmp
test
int
jbe
mov
clc
adc
insb
je
sub
mov
mov
roll
inc
je
xchg
jb
add
pop
repz
divl
mov
add
cltd
pop
adc
mov
jg
movsl
pop
add
mov
jle
daa
cmpsl
mov
fwait
jnp
aad
add
jbe
cmp
push
leave
movsb
pop
loope
push
adc
mov
dec
pop
rolb
mov
mov
add
out
and
push
ja
test
fimull
add
pop
ds
sbb
jo
and
push
xor
sub
pop
in
decb
lock
xor
mov
push
aam
nop
sub
xchg
jnp
orl
adc
mov
sbb
sub
adc
dec
test
mov
mov
aas
mov
sbb
mov
cld
fsubrs
nop
mov
add
add
bnd
cld
insl
jbe
adc
jno
add
adc
in
decl
clc
pusha
cltd
fimull
popf
jg
lods
lret
aaa
movaps
dec
or
repnz
push
push
stos
cwtl
dec
add
xchg
jg
scas
or
rorb
fst
inc
add
pop
fxam
call
rolb
int3
mov
scas
sub
call
xor
adc
mov
popa
and
jmp
fnstsw
jbe
or
add
imul
jmp
mov
cmp
lret
jae
add
xchg
push
xchg
out
lock
nop
sbb
add
movsl
fisubs
loopne
cmp
add
clc
rorb
jns
cmpsb
mov
jb
add
mov
rol
mov
add
dec
test
pop
pushf
add
xrelease
shlb
lods
lock
addb
inc
push
mov
fiadds
pushf
add
gs
add
fiadds
add
cmpsb
das
fbld
sti
add
xchg
test
sub
popa
jecxz
repz
or
add
pop
push
pop
aas
in
imul
dec
jns
mov
add
sbb
test
mov
inc
pop
je
ss
mov
add
dec
push
pop
add
out
adc
cmp
mov
sbb
test
or
mov
shrb
mov
inc
loop
lret
mov
or
inc
jge
adc
add
mov
push
jo
cmpsl
sbb
inc
push
mov
lcall
rorb
add
jmp
xchg
and
mov
and
ror
mov
sahf
pop
enter
mov
cmpl
or
add
cmpsl
sub
pop
sbb
jmp
dec
jno
add
outsb
or
das
mov
adcb
or
outsl
setge
xchg
adc
cmp
add
stos
das
int
inc
call
jl
jle
adc
jns
icebp
sbb
add
pusha
cld
dec
test
mov
push
ret
arpl
loope
cmp
enter
pop
inc
fidivrl
xchg
push
push
sub
mov
add
jp
mov
adc
ret
cmp
xchg
cmp
add
mov
test
pop
fs
dec
pop
push
lock
mov
cmp
sub
mull
cmp
mov
add
fcomi
inc
sahf
aaa
and
mov
lahf
rorl
or
cmpsl
inc
in
and
test
sub
add
negl
cmp
xchg
push
popa
decb
ds
les
inc
test
xor
scas
add
dec
adc
or
cmpsl
add
in
jp
and
mov
add
sub
jp
or
adc
es
into
xchg
cmp
lock
pop
hlt
fidivrl
data16
add
incb
jns
repnz
std
notl
ret
jno
mov
cmp
dec
mov
add
stos
add
out
push
outsl
in
es
mov
dec
negb
push
inc
pusha
inc
test
fbstp
insl
rcl
xchg
add
in
loopne
loopne
lock
insb
shr
xor
rolb
mov
push
cli
call
sbb
es
pop
sbb
andb
adc
inc
pop
loop
mov
leave
mov
pop
mov
cli
popa
xchg
js
add
sbb
lcall
add
insl
mov
and
cmp
mov
fdivr
sbb
lods
sbb
test
and
mov
fldl
sti
xor
push
pop
xchg
add
sbb
pusha
push
std
jmp
sub
xchg
mov
mov
jle
pushf
scas
icebp
cmp
add
dec
ss
jo
outsl
mov
push
adc
outsl
add
pop
rclb
add
mov
and
insb
lock
jg
add
inc
jo
sbb
ret
or
mov
pop
mov
cwtl
pushf
or
mov
stc
add
mov
add
jl
push
jp
iret
ret
sahf
icebp
shlb
jb
cld
mov
std
fisubs
add
dec
mov
push
dec
mov
sub
xchg
xchg
or
and
add
rorb
test
or
int3
dec
or
adc
popa
nop
mov
cltd
add
pop
cmpsl
and
jg
pop
inc
movsl
nop
sub
add
and
mov
mov
ljmp
push
inc
mov
iret
sub
icebp
and
popa
mov
push
dec
pop
inc
lret
and
pop
ficompl
or
arpl
add
dec
pop
aam
out
add
pusha
fcmovnb
fmul
or
out
jns
add
push
repnz
arpl
jg
pop
jp
out
jo
push
push
add
loopne
mov
test
add
xor
pop
enter
add
mov
or
rclb
xchg
add
xlat
imul
xchg
pop
shlb
rclb
testl
std
inc
mov
lcall
in
add
imul
jo
jl
ud2
mov
sub
movsl
stos
sti
or
adcb
mov
sub
xchg
jg
add
mov
popf
push
inc
and
xchg
add
dec
nop
xchg
sbb
push
js
and
add
shr
xor
inc
out
pop
add
mul
mov
pusha
call
xchg
inc
test
push
or
pop
lock
cli
inc
mov
lods
cwtl
push
sbb
mov
xchg
jle
test
xor
add
pop
js
fcoml
jle
add
aad
shrb
add
scas
sarl
inc
add
stos
in
jo
fbld
dec
push
test
in
xchg
in
mov
test
xchg
adc
jae
inc
out
fdiv
add
inc
adc
push
ret
add
gs
add
and
hlt
xchg
dec
mov
xchg
add
icebp
mov
notb
cmp
add
xor
sbb
mov
les
add
sbb
xchg
decb
movsl
lds
and
in
loopne
xchg
insl
fcoml
push
adc
insb
movsl
add
pop
lock
push
fiaddl
or
cli
in
and
cmp
shrl
inc
stc
add
rorb
and
mov
fstl
subl
lea
cmp
incl
cmp
lods
cmpsl
inc
cmp
xor
jbe
add
std
xor
add
fbstp
jno
add
rcll
dec
pusha
dec
push
jl
fcoml
lods
clc
gs
shr
cmp
jg
cmp
lea
mov
pop
loop
iret
addr16
mov
add
mov
mov
rcrl
and
out
dec
add
sahf
out
add
mov
repz
cmp
add
fistl
xchg
add
cmpsl
push
jno
or
xor
sub
in
add
pop
adc
mov
add
inc
and
xchg
in
rep
push
add
xchg
cmp
leave
repnz
xchg
out
pop
clc
test
sti
incb
loopne
test
in
mov
lret
dec
add
aas
and
jge
sbb
shll
sbb
sbb
aad
scas
mov
out
dec
add
dec
aas
testb
pushf
xchg
push
sub
repz
jne
cmp
pop
or
mov
and
pop
add
pop
push
add
add
in
inc
add
mov
jl
xlat
sub
fidivrl
in
or
jecxz
jno
ret
xchg
jo
cli
jg
mov
mov
mov
push
testl
addl
jo
test
call
pusha
adc
addr16
dec
dec
push
jo
sbb
and
xor
mov
mov
pop
lock
or
and
dec
lods
dec
cmp
fadds
insl
loope
push
mov
dec
add
mov
add
shrl
push
fsubrl
add
add
xor
jecxz
pop
addr16
les
sbb
js
dec
psubb
test
jle
stos
pop
add
nop
mov
in
and
scas
lea
jne
cld
fwait
stos
nop
rcr
daa
jg
sub
pop
cmp
outsb
les
jp
pop
push
je
sub
push
ljmp
inc
int
nop
cmovns
pop
in
dec
pop
sarb
lea
ret
jmp
pop
out
dec
add
push
push
mov
imul
out
lahf
stos
push
fsubl
pushf
dec
add
lods
add
mov
jnp
add
jbe
mov
stos
xchg
push
add
jg
das
bswap
cmc
mov
and
sti
mov
add
pusha
cmp
pop
jo
cmp
adc
inc
or
mov
jg
setns
push
add
lods
js
xor
je
sahf
cmpsb
loop
lahf
add
adc
dec
ss
js
test
mov
cmc
or
add
outsl
mov
sbb
stos
pushf
ret
mov
and
testb
mov
lock
push
and
xchg
mov
mov
mull
out
xchg
fwait
mov
loop
add
or
add
xor
test
mov
adcb
dec
arpl
ret
jnp
jg
je
or
add
adc
int3
je
and
lret
jae
adc
push
test
stos
nop
clc
sbb
hlt
push
fmulp
jp
outsl
jmp
push
or
push
out
xchg
add
leave
sbb
xor
jae
rcrb
loopne
test
jns
and
cmp
pushf
inc
mov
jne
cmp
and
jecxz
sbb
sbb
and
js
add
add
les
scas
jecxz
mov
into
sub
adc
lsl
pop
inc
lock
fstps
stos
adc
call
in
test
dec
xor
mov
stos
call
sahf
inc
jns
clc
xchg
loop
es
add
and
aas
xor
xor
insl
push
add
ljmp
pmullw
or
daa
sbb
into
aam
dec
imul
dec
push
dec
insb
loopne
stos
add
mov
imul
jmp
pop
das
push
in
shlb
pop
jge
inc
dec
nop
sti
js
mov
mov
jb
aam
pusha
fisubrs
lds
and
jmp
aad
fs
sbb
push
sbb
push
mov
dec
shr
nop
mov
mov
pop
cmpsb
inc
xchg
addr16
dec
sub
pop
add
int
es
adc
adc
push
icebp
sarl
push
ds
push
inc
add
jg
xor
popf
cli
int3
add
dec
inc
addl
pop
movsb
cmp
sbb
mov
aam
jae
adc
add
bnd
mov
lea
pop
add
jmp
add
ljmp
cmp
sbb
mov
stos
sub
outsl
in
mov
add
mov
push
mov
loopne
jns
pusha
add
daa
pop
and
outsl
or
popa
neg
add
sahf
ret
ds
mov
stos
imul
xchg
xor
add
jae
nop
pop
sbb
adc
push
mov
pop
add
ret
mov
push
out
jp
jo
rcrl
sti
pop
ret
insl
mov
pop
stos
xchg
movsb
jne
rolb
leave
sbbl
or
mov
inc
cwtl
dec
cmp
cmpsb
cmp
xorb
inc
jl
aad
add
jmp
mov
jbe
mov
jge
test
rcl
jno
add
mov
or
lret
repnz
orb
in
loop
mov
mov
test
out
pushf
je
dec
loope
and
addr16
mov
imul
ss
adc
repnz
mov
pop
into
add
jecxz
aam
mov
mov
inc
jns
js
into
test
pop
pushf
add
movsl
push
push
out
scas
mov
jns
inc
add
add
mov
push
aad
and
pop
aam
jnp
mov
pop
cmp
lea
pop
push
mov
or
dec
add
fstps
sbb
mov
cmp
ljmp
dec
aaa
pop
clc
lahf
pop
adcb
mov
xchg
adc
pop
mov
loopne
int3
pop
and
scas
mov
dec
fistpll
inc
sbbb
pusha
xor
adc
jg
xchg
add
dec
or
push
mov
dec
add
xor
mov
subb
add
cmp
mov
xlat
dec
inc
sbb
jg
jl
out
push
aaa
lea
mov
jns
cmpb
arpl
js
mov
sub
pusha
xchg
das
lahf
dec
add
mov
popa
ja
stc
mov
dec
dec
mov
jno
cli
add
xchg
lea
push
cltd
sbb
loope
testb
iret
cmp
jmp
movsb
or
int
in
mov
lds
repz
and
pusha
pop
fadds
in
jl
push
mov
inc
pop
push
addr16
inc
mov
pop
aas
in
flds
lods
cmpsb
shrl
dec
nop
add
xor
sti
hlt
cmpsl
dec
add
scas
xchg
pushf
nop
push
mov
jbe
jl
jle
add
pop
lcall
mov
mov
add
decb
add
rclb
cmp
push
mov
cli
fdivs
jnp
pop
pop
loop
test
roll
enter
movsb
xchg
dec
push
pop
sbb
xchg
sbb
out
shlb
sub
add
add
sbb
xchg
pusha
pop
mov
cmc
frstor
mov
push
pop
jp
sub
jmp
arpl
add
fldl
pop
lock
mov
lahf
mov
push
jmp
cmp
fmull
outsb
and
push
rolb
sti
and
pop
or
test
andb
dec
add
jns
xchg
rorb
add
enter
aaa
add
mov
fiaddl
mov
sub
cmovno
xchg
stc
loopne
ret
cmpsl
ja
add
loop
and
outsb
add
imul
popa
pop
loop
ss
inc
or
jmp
inc
movsb
cmc
xchg
add
insl
cli
jo
adc
inc
sub
dec
icebp
sbb
jo
nop
cmp
mov
or
cs
cmp
sbb
arpl
pop
and
out
shrb
mov
push
lea
cmpb
add
push
add
add
std
cmp
clc
jne
push
jae
ret
ficompl
jno
nop
adcb
mov
add
sarb
inc
fistpll
mov
in
in
cmp
das
jp
cmp
pop
push
dec
andb
fs
je
insb
hlt
addb
xor
xlat
sbb
stos
addl
add
mov
lods
push
xor
and
popa
add
ficomps
lea
add
ret
sub
add
in
mov
call
shlb
loopne
lock
lret
add
cld
clc
loope
adc
add
pop
pop
addr16
je
add
mov
iret
xor
lret
fimull
sbb
add
sbb
mov
insl
dec
addr16
mov
sub
imul
add
jecxz
add
mov
mov
jmp
cmp
clc
xor
sbb
lret
jge
xchg
jmp
stc
add
adc
mov
divl
dec
sub
pushf
fcoml
in
sub
add
mov
jo
imul
out
mov
push
or
push
cmp
xor
mov
adcb
cli
out
add
fisubs
sbb
xor
test
popa
xor
cmp
outsl
movsb
pushl
cli
add
out
xchg
push
adc
dec
pop
add
xchg
pop
add
icebp
add
bound
xchg
push
sbb
aas
push
and
mov
inc
push
pusha
jae
jmp
adc
sbb
xor
pop
scas
aam
inc
or
nop
mov
sbb
add
mov
sbb
and
dec
popf
add
add
xchg
xor
or
imul
inc
es
add
out
xchg
sbb
fwait
add
xor
or
insb
stc
call
dec
or
and
xor
shll
pop
cmpsb
inc
lmsw
add
lods
lahf
add
ror
add
sub
add
jns
jl
out
nop
cmp
imulb
add
mov
ljmp
sub
xor
add
mov
add
ficomps
cmp
and
pop
jne
add
and
xor
int3
pop
sbb
xchg
and
lds
lods
inc
mul
cmp
sub
mov
mov
cmc
sbb
add
ljmp
rol
jle
test
fwait
enter
lock
add
cltd
imul
add
mov
fiadds
int
inc
cmp
inc
outsl
inc
xchg
cltd
xchg
or
pusha
repnz
or
pop
cs
dec
add
mov
ficompl
ret
aad
sbb
js
mov
in
mov
add
es
pop
test
sbb
add
sub
push
nop
rcll
sbb
outsb
adc
daa
cmp
stos
imul
inc
inc
pusha
add
adc
jns
xor
inc
add
or
add
inc
fcomi
dec
call
push
sub
clc
mov
and
in
mov
repnz
add
inc
sub
mov
cli
in
fists
adc
pop
xlat
in
mov
ret
xchg
rorl
pusha
push
pop
aas
pop
std
push
add
xchg
int
mov
pusha
lock
rorb
mov
push
add
cmpsl
mov
sbb
notl
ds
adc
into
pop
rcrb
and
and
call
inc
add
pop
in
lea
mov
fadds
mov
mov
jne
in
mov
daa
jbe
ret
and
add
cmpsb
push
lret
fdivrp
add
and
mov
hlt
add
ret
inc
dec
loopne
popa
pop
out
mov
scas
leave
fadds
push
xchg
xchg
and
dec
or
dec
lcall
jb
push
xchg
cmp
add
dec
sub
stc
pop
adc
nop
stos
add
push
insb
dec
aas
sbb
icebp
pop
mov
popf
mov
scas
or
enter
data16
inc
push
movhps
xchg
mov
outsb
sbb
call
add
cwtl
addr16
jle
cmp
cld
adc
js
sbb
pop
push
jl
testl
inc
ja
add
inc
sbb
mov
lods
lret
add
out
aad
xchg
pop
push
dec
xor
pop
int
add
das
jns
lods
pop
cwtl
enter
movsl
pop
jmp
notb
and
mov
rcrl
rcl
sarb
ret
adc
mov
je
pusha
add
adc
and
mov
rol
push
incl
in
mov
and
test
dec
js
xchg
imul
dec
xor
ret
adc
or
std
or
push
rcrb
enter
out
pusha
pop
test
inc
ljmp
sbb
lea
push
add
pop
cli
ret
into
lock
cld
adc
add
je
adc
inc
mov
push
ds
inc
dec
add
push
sahf
xor
sti
xor
cmp
xchg
sub
mov
add
push
xor
aad
mov
pop
dec
mov
inc
cmpsb
incl
nop
cmp
in
inc
les
add
jno
push
lods
fs
push
add
mov
out
sub
mov
lret
stos
not
add
xchg
adc
scas
add
sbb
popa
movsl
stos
aam
lock
fwait
and
addb
jae
xchg
cmp
mov
cmp
or
rorb
dec
lahf
add
xlat
sub
cmp
lods
add
add
or
in
mov
jle
or
int3
xlat
inc
out
pop
xchg
push
popa
add
sbb
xchg
test
pushf
cmp
rcr
sti
call
ret
cld
rclb
or
xor
or
out
add
add
jns
add
xchg
or
les
gs
adc
cmp
nop
sub
pop
xor
jecxz
daa
xor
add
jno
cmpsb
add
add
popa
mov
and
adc
mov
cwtl
movsb
cwtl
nop
add
and
hlt
lcall
call
inc
test
dec
add
mov
and
add
push
test
loope
add
pop
and
aaa
in
lock
paddusb
jmp
and
inc
add
in
cli
pusha
ss
push
jo
out
addl
jl
cld
rclb
and
ljmp
pop
psubd
push
jo
cmpsl
rorb
jbe
jg
add
shl
mov
add
shl
or
adc
add
push
aas
and
sbb
or
and
add
in
pop
sub
test
bound
push
mov
cmp
push
addl
inc
dec
outsb
test
xor
das
fs
call
jbe,pn
out
shll
mov
adc
jge
pusha
dec
shrb
add
mov
sbb
mov
push
and
sub
shl
nop
push
jno
and
dec
cmpsb
xor
xchg
call
jbe
dec
cmp
adc
lds
mov
jle
out
fcomps
icebp
sarb
out
ss
mov
add
xor
mov
cmp
imul
stos
in
mov
in
nop
in
test
fcoml
mov
ljmp
mov
subb
out
jmp
loop
pop
xchg
ja
movsl
push
jecxz
fiadds
test
push
add
loop
push
add
adc
xchg
lcall
aam
xchg
in
fwait
loope
das
cmove
inc
sub
clc
jo
icebp
cli
mov
inc
mov
xor
sbb
fstpt
mov
cld
mov
add
add
je
add
cltd
sub
ret
enter
pop
arpl
adc
dec
add
inc
sti
inc
xor
push
jbe
mov
mov
cmp
popa
xchg
pop
push
push
ret
gs
push
pop
inc
xchg
mov
push
sti
les
add
cmp
add
fdivrs
adc
out
shlb
out
add
jecxz
call
push
nop
add
fsubs
fbld
or
test
jnp
testb
inc
aas
neg
cli
aad
pop
adc
int
cmp
pop
mov
add
jge
jb
push
mov
cli
mov
pop
in
pop
xchg
mov
pop
mov
js
add
into
nop
in
xchg
es
mov
stos
add
jb
cld
jle
sbb
add
push
jmp
jnp
xchg
pop
fnstenv
mov
adc
dec
mov
add
sbb
loop
push
inc
lock
and
out
add
push
inc
jb
push
or
dec
mov
outsl
testb
pop
inc
stos
ja
insb
mov
mov
xor
roll
add
mov
add
imul
mov
fsubl
insl
pop
mov
loopne
sub
or
add
xchg
xchg
mov
add
inc
out
add
sub
aaa
mov
mov
dec
cmp
add
cmp
loope
stos
icebp
test
mov
mov
pusha
pop
add
ja
dec
xchg
in
pop
sahf
xchg
or
movsl
icebp
or
pop
mov
les
lock
in
out
in
stos
or
ja
add
inc
jno
in
jns
icebp
gs
les
cmp
inc
add
inc
bound
xor
mov
add
inc
sbb
shl
or
xor
mov
sbb
dec
cmp
xchg
movsl
out
xorb
lss
fs
add
jne
add
adc
testl
jno
mov
fsubrl
add
adc
xor
mov
rorb
add
adc
ror
popf
sbb
inc
mov
aaa
outsb
mov
add
and
push
jp
add
add
rorb
push
addb
aas
dec
out
pop
add
pushf
add
pavgb
jmp
pop
test
add
repnz
rcr
add
mov
xchg
into
cmp
xor
cmp
inc
adc
add
enter
js
jg
mov
leave
insb
jne
nop
or
push
shlb
pop
cmp
sbb
adc
mov
lret
add
fdivrl
add
push
cmp
movsb
test
add
jp
cmc
pop
loope
ret
add
or
add
lret
add
sbb
mov
add
sbb
or
pop
in
adc
adc
add
xchg
pop
in
rorb
jl
jmp
std
nop
add
fidivrs
rorb
pop
test
mov
cmp
add
aaa
pushf
push
cmp
push
push
cmpl
jns
dec
xorb
or
insl
cmc
sbb
or
push
shrb
aam
jg
push
rclb
lods
mov
cmpsb
adc
mov
inc
cltd
in
enter
bound
add
mov
jg
dec
xchg
fs
int3
scas
xchg
add
sub
mov
jbe
pop
movsb
or
ror
cwtl
stos
cmp
xchg
cmp
je
xchg
fcomps
stos
in
bound
jge
push
sti
je
dec
add
mov
into
pop
mov
adc
jns
mov
sub
mov
pop
sbb
ss
imul
jg
nop
imull
out
icebp
mov
add
incb
xlat
mov
test
xchg
outsb
test
inc
jnp
cmp
fiadds
enter
add
std
lds
pop
dec
lret
out
gs
in
or
mov
fidivrs
in
out
push
movd
mov
jno
decl
shr
cmp
jb
mov
enter
jl
mov
sub
pop
mov
sbb
fsubrs
push
add
clc
add
push
ds
roll
or
dec
add
xor
adc
pop
add
mov
dec
test
and
sub
iret
fdivrl
stos
jg
sub
lock
movsb
mov
call
adc
dec
jmp
jae
add
cwtl
or
add
lods
in
cli
mov
or
push
xor
add
xcrypt-ecb
cmpsl
dec
les
lahf
scas
inc
or
or
loopne
sub
nop
pop
xchg
repnz
push
xchg
mov
add
pop
xor
jl
inc
cmp
shrl
jno
inc
fiaddl
sbb
mov
cmpsl
mov
jge
movsl
xchg
add
clc
lods
add
es
add
sbbb
sub
aam
sbb
add
stos
mov
add
testb
aas
enter
repnz
add
mov
sbb
adc
sbb
push
sbb
scas
movsl
mov
js
adcb
pop
add
int
cmp
sub
add
mov
js
jo
mov
sub
inc
outsl
out
shlb
xchg
bnd
push
jne
mov
cmc
add
fisttpll
push
jecxz
aam
add
ds
cmp
mov
sti
adc
sub
pop
sub
lret
enter
add
loopne
fucomip
push
add
lds
mov
and
xor
add
sub
xchg
dec
std
inc
or
mov
sbb
and
jno
hlt
xchg
inc
fcomps
pop
inc
sti
add
dec
fisttpll
adc
daa
add
popf
addb
push
push
add
icebp
xchg
mov
dec
mov
and
dec
inc
lea
pop
jl
arpl
out
xorl
andl
add
test
lods
cmpsb
adc
jp
test
jnp
pop
stos
mov
add
in
jge
xchg
outsb
or
test
jo
and
aad
stc
push
xchg
mov
shl
push
add
loope
out
mov
call
push
mov
jns
jae
jmp
sub
cld
and
jns
scas
sub
dec
dec
lds
adc
arpl
add
out
mov
loopne
add
stos
mov
call
cmp
mov
sbb
or
lods
pop
fdiv
adc
mov
idivb
push
arpl
jo
addr16
xor
mov
sahf
jmp
add
fstp
mov
add
outsb
filds
call
mov
inc
call
jle
add
add
mov
imul
clc
inc
loopne
mov
aam
out
mov
fsubr
stc
cld
add
inc
adc
jbe
add
repnz
or
jle
add
fsubs
dec
cltd
clc
add
loop
pop
adc
mov
out
add
dec
dec
mov
sbb
into
fimuls
push
mov
fdivl
inc
das
adcb
adc
add
mov
in
add
movswl
testl
daa
ss
es
rcrb
psubd
pusha
mov
in
add
loopne
xchg
or
sbb
inc
add
in
jecxz
test
add
jl
jmp
add
icebp
in
ljmp
bound
add
enter
daa
ret
shll
adc
idiv
xchg
push
stos
int
xor
orl
pusha
je
fwait
add
fnstsw
inc
ds
xlat
pop
loopne
push
pushf
rol
xchg
aad
mov
mov
push
leave
add
daa
add
loope
fcomps
mov
leave
adc
cld
xchg
pop
add
std
lea
inc
pop
xchg
or
jno
inc
int3
add
movsl
out
mov
xchg
fnsave
lods
xor
mov
fsubl
add
insl
int
enter
add
cmpsb
dec
add
fbstp
outsb
shrb
add
mov
mov
add
push
xchg
lds
pop
jae
add
and
mov
mov
cs
adc
pop
in
add
cltd
fs
neg
stos
lret
add
mov
mov
hlt
clc
mov
test
xchg
out
imul
or
cwtl
xor
call
sbb
or
aam
mov
je
jmp
inc
fcoml
lret
pusha
adc
mov
xor
or
push
sbb
mov
mov
rclb
loope
nop
dec
cmp
xchg
mov
lock
sbb
addb
xchg
dec
pop
out
add
test
xchg
cmp
gs
jo
jmp
adc
inc
pop
scas
inc
insl
inc
and
jmp
sbb
cmp
jl
loope
dec
ljmp
adc
xor
rclb
add
adc
push
mov
inc
addl
lea
jmp
add
movsb
js
sahf
mov
inc
add
mov
fidivl
icebp
cli
xor
add
lea
icebp
cld
adc
mov
sbb
notl
cltd
addr16
popl
push
aad
ja
movq
cmp
mov
adc
lahf
jnp
ljmp
jne
out
jo
sbb
xor
insl
xor
adc
or
add
add
cld
test
pusha
and
add
xor
aas
xchg
popa
xchg
cwtl
pop
sub
add
xchg
fwait
jae
add
mov
jno
inc
inc
repnz
push
add
xchg
mov
cmp
test
std
cmp
or
inc
pop
add
fldcw
mov
mov
pusha
and
out
leave
sti
inc
and
mov
cltd
mov
mov
pop
das
push
sbb
sub
inc
pop
ja
mov
adc
test
xor
xchg
pop
inc
out
aam
xchg
jmp
and
lret
cltd
lds
dec
mov
aaa
push
sbb
jge
jnp
flds
push
xchg
xchg
imul
sub
adc
pop
loopne
je
pop
loop
push
dec
mov
inc
mov
stc
mov
orb
gs
ja
add
or
lcall
test
pop
dec
cmc
add
mov
mov
insl
aad
pop
mov
rcrl
popa
and
or
sbb
sarl
mov
loop
add
bound
test
add
adc
sub
sbb
add
addb
leave
dec
add
xor
std
or
cmp
dec
cmp
add
lock
mul
into
std
inc
cmp
lret
gs
sbb
icebp
lret
ds
add
ja
jne
mov
adc
lock
rcll
pop
mov
adc
mov
adc
mov
mov
xchg
arpl
push
ficompl
dec
dec
rcrb
popa
add
inc
stos
xlat
and
and
mov
or
inc
xor
inc
push
pop
inc
and
clc
sub
and
inc
add
out
dec
sub
and
jecxz
testb
push
xchg
cmp
mov
and
push
cmp
lods
inc
fistpll
push
push
mov
xor
and
and
mov
mov
mov
and
mov
hlt
in
scas
mov
test
jl
sub
repz
pop
jmp
mov
dec
cmp
in
cli
push
cmp
push
mov
or
pusha
add
orb
push
sub
pop
enter
roll
nop
jg
jb
ficomps
lods
dec
pop
stc
clc
out
add
sbb
cli
xor
mov
sbb
aas
add
popa
sub
int
lahf
add
push
mov
mov
push
shlb
jae
push
stc
xor
popf
xor
or
aaa
je
mov
and
add
adc
mov
add
popf
aad
add
and
pop
add
pop
aam
sub
sti
sbb
fs
pusha
popf
adc
xlat
adc
add
dec
test
sbb
bound
in
sahf
femms
add
jo
out
clc
add
enter
fsubl
and
jno
sub
jb
xchg
insb
rcll
mov
les
xor
xchg
loope
xchg
inc
and
int3
adcb
popf
das
pop
into
push
mov
mov
mov
cmp
xor
cmc
push
mov
dec
cltd
test
lcall
add
mov
add
in
cmp
lahf
mov
loopne
add
loope
nop
jns
popf
fiadds
push
int3
mov
adc
hlt
push
adc
jae
cwtl
push
inc
jns
mov
and
add
xchg
jbe
loope
mov
pushl
icebp
jae
and
mov
add
adc
mov
js
push
jg
cmp
xor
sub
stos
repz
jl
adc
pop
add
cld
popa
xchg
jb
sbb
pop
mov
push
xchg
mov
inc
or
sbb
xchg
sub
bswap
dec
mov
fsubl
call
add
out
pop
adc
js
jns
jge
push
ja
fidivrl
sub
push
cmp
lret
pushf
inc
add
add
cmp
add
insl
lds
add
dec
test
js
popa
aaa
jno
daa
jg
cmpxchg
mov
cmp
repnz
loope
add
mov
sub
dec
xchg
mov
clc
push
mov
ret
mov
fadds
cmp
add
out
mov
mov
std
icebp
sbb
test
jns
rol
movsl
mov
insb
add
mov
movsb
mov
xchg
sbb
mov
cmp
lcall
jge
lcall
xorl
scas
test
shll
add
cli
sub
sbb
je
popf
sahf
sbbb
scas
stc
sub
jo
add
xlat
add
lock
shlb
mov
push
xorb
add
jae
jp
xor
jbe
shl
mov
pop
pop
ss
jb
jae
repnz
fsubp
movsl
test
xor
clc
sub
shrl
dec
cld
push
cmp
dec
sbb
cmp
add
xchg
add
inc
js
sti
and
ret
ret
es
out
mov
jns
add
mov
testl
cmp
out
inc
aad
dec
sbb
push
mov
sub
popf
mov
rorl
test
call
mov
add
and
xchg
xor
xor
mov
loop
adc
loopne
sbb
mov
pop
fdiv
ret
pusha
jg
adc
add
sub
stc
js
xchg
test
add
std
mov
pop
sti
cld
fildl
lods
mov
add
inc
test
stc
sbb
inc
mov
mov
add
pop
loopne
loopne
adc
fcompl
cmpsb
sub
scas
push
cs
lcall
int3
and
push
stos
jl
movb
dec
add
aad
mov
pop
popl
cmp
push
mov
pop
fistpll
aam
dec
aad
mov
jp
rolb
lcall
int3
lods
push
mov
inc
sahf
and
mov
inc
into
cltd
mov
add
data16
cmpsl
inc
outsb
cld
enter
add
loopne
or
nop
aad
jl
adc
xor
roll
jmp
inc
sti
arpl
pop
mov
xor
add
mov
popa
mov
data16
shrl
loopne
cmpsl
mov
daa
add
fdivl
ror
mov
sub
lods
mov
mov
add
mov
xor
dec
mov
cwtl
jle
inc
add
push
mov
jp
inc
loop
mov
inc
xchg
jl
movsl
xor
fwait
push
fsubs
sbb
dec
ffreep
lret
ds
add
mov
cli
movb
shl
lcall
adc
mov
or
and
dec
sbbb
add
xchg
pop
mov
cmc
add
daa
es
mov
push
adc
push
jmp
push
ja
and
lret
mov
ret
mov
sbbb
xchg
lcall
test
mov
sub
or
into
scas
pop
add
ret
mov
pop
and
jp
add
push
or
in
and
out
inc
pushf
jmp
shll
aam
add
jae
in
out
fisubrs
mov
cld
add
cltd
jp
mov
lret
or
aaa
sub
or
add
test
mov
ficompl
and
outsb
mov
inc
sbb
add
fdivs
outsl
dec
daa
push
xorb
jmp
add
or
data16
out
jo
pop
sbb
pop
push
mov
shl
add
xor
jns
emms
pop
cltd
pop
subb
int3
mov
ja
add
sub
out
mov
adc
pop
add
fiadds
outsb
xchg
lret
push
lods
pop
popa
add
aas
mov
xchg
add
fst
in
add
cmp
mov
mov
push
jns
mov
stos
push
cmp
dec
add
pop
cmp
fbstp
jo
mov
add
jmp
adc
dec
enter
mov
push
pop
imul
add
fwait
xor
je
jo
scas
jns
push
mov
andb
add
push
iret
add
cwtl
fwait
sbb
mov
enter
sti
sbb
add
addr16
filds
repnz
repz
out
shll
push
sbb
jae
xor
movsl
or
std
add
mov
aam
out
mov
push
lret
jecxz
loop
stos
add
sbb
faddl
adc
pop
mov
in
xchg
lock
xor
scas
mov
add
xor
loopne
add
pop
cmp
jns
outsb
je
popf
inc
enter
adc
push
push
mov
adc
pop
push
and
daa
lock
dec
add
xor
aas
jo
adc
mov
add
insb
rcrb
push
js
add
ficoms
insb
rol
repnz
xor
mov
dec
push
mov
out
pop
and
pop
mov
lcall
mov
add
popa
add
lods
mov
adc
add
push
lods
xchg
mov
mov
adc
test
or
ds
int
mov
push
jnp
and
add
pop
dec
jb
insl
cli
add
fmulp
or
fdivr
loopne
sub
dec
out
push
adc
adcb
add
int3
mov
int
scas
push
push
jmp
pusha
lods
fiadds
mov
push
dec
sub
push
out
dec
dec
push
add
sbb
sbb
add
fmull
aam
lods
dec
mov
scas
pop
lret
outsl
das
xor
fcmovb
jns
mov
or
xor
imul
inc
mov
mov
cs
xor
pop
xor
add
bound
mov
call
jbe
mov
js
clc
data16
pop
fisubrs
rorb
sub
cltd
ficoml
add
in
lods
fwait
jecxz
push
cli
xor
mov
pushf
adc
or
pop
push
add
add
push
pop
ficompl
xchg
or
xchg
jle
mov
out
sub
bound
call
roll
pushf
lcall
pop
and
cmp
sar
adc
xor
add
loope,pt
add
or
fwait
dec
push
pushf
push
add
cmp
inc
les
in
inc
dec
sahf
inc
mov
int3
rolb
adc
lcall
cmp
xor
stc
fdivrs
pavgb
mov
out
mov
cmp
hlt
es
add
lea
ljmp
ror
insb
mov
clc
daa
aad
add
stc
sub
pop
inc
add
inc
push
repnz
std
sub
add
and
sbb
dec
mov
dec
jno
add
jns
sub
rcrl
in
add
pop
in
notb
fsubl
sbb
aaa
cmp
dec
push
cmp
xor
ret
add
or
pop
add
add
mov
mov
jb
and
into
mov
cmpb
add
xor
fwait
mov
divb
push
xor
js
stc
lds
mov
push
lea
daa
scas
lret
sbb
or
adc
insb
out
test
jnp
pop
jge
add
adc
or
xchg
sti
jle
pusha
decl
push
int
push
adc
rorb
jae
add
shll
add
into
jns
adcl
and
js
inc
xor
adc
outsb
or
mov
flds
addl
and
sub
sbb
ljmp
add
in
roll
in
pop
loope
sbb
sti
pop
out
sbb
add
test
pop
add
imul
addr16
sub
fcomps
ret
in
push
rol
adc
loopne
sub
fadds
jbe
pop
xorb
das
jb
mov
fnstsw
lods
sub
cmp
pop
mov
lahf
fisubrs
fbstp
mov
pop
xchg
cwtl
lock
outsl
icebp
pop
pushf
add
adc
in
cmpsl
pop
or
xlat
cmp
into
cmc
ja
aaa
and
add
cmp
in
fwait
rcr
add
adc
pusha
jb
xchg
faddl
fimuls
push
arpl
loope
inc
jmp
ret
inc
jle
test
sbb
cmpsl
cmc
mov
andl
add
ret
and
and
add
fldl
jno
xchg
popa
in
and
and
popa
and
inc
add
sub
add
ret
sub
pop
in
imul
and
daa
lcall
mov
and
or
sbb
add
adc
mov
add
add
cmp
inc
add
jne
loopne
push
add
scas
jecxz
sahf
movsl
mov
cmp
xchg
xchg
adc
add
outsb
push
repz
adc
cld
sbb
in
xchg
sar
imul
push
add
and
arpl
test
mov
push
xor
jge,pt
push
xlat
push
add
div
xchg
loop
add
adc
test
iret
enter
aaa
in
aad
cmp
sub
repnz
les
jl
leave
rep
jg
sbb
jge
in
mov
add
push
pop
sbbb
movsl
push
sahf
pusha
jecxz
mov
sub
cld
pusha
in
scas
inc
push
add
pop
je
inc
fsubs
push
ret
xlat
jns
loop
jnp
add
lret
fwait
jne
push
movsb
inc
add
in
faddl
lods
jae
div
mov
test
sbb
inc
dec
iret
mov
sub
sbb
cld
pop
mov
jns
dec
pop
int3
add
stc
jecxz
inc
adcl
shl
cmc
nop
stos
xor
mov
pop
in
mov
adc
sub
neg
add
sub
mov
adc
imul
call
jbe
sbb
lcall
xchg
xchg
cmovns
and
bound
mov
add
add
ljmp
or
inc
ljmp
mov
add
and
xor
jo
pop
lret
lods
inc
clc
sub
orl
insb
fisubl
pop
xchg
arpl
jge
add
mov
pusha
inc
out
mov
dec
xchg
push
xchg
cltd
mov
sub
mov
add
adc
xchg
nop
lahf
add
inc
mov
dec
jb
lret
call
hlt
mov
stc
aam
xor
pop
in
inc
add
or
out
cmc
and
add
fdivrs
add
xchg
sarb
add
xor
subl
pop
lods
add
mov
idiv
jb
jbe
nop
js
jge
mov
fwait
inc
push
add
in
out
mov
add
lea
jnp
pop
cli
or
add
jmp
sbb
subl
les
int3
xor
jecxz
test
adc
add
jns
ret
sarb
js
imul
xchg
or
lock
xor
jo
fwait
add
push
and
add
lret
mov
adc
jbe
std
xor
inc
adc
inc
xor
fstps
out
sub
mov
in
add
es
or
repz
sub
aas
add
adc
inc
dec
aas
or
or
bound
icebp
insb
add
stc
movsb
and
pushf
add
sub
arpl
incb
add
mov
hlt
es
aad
into
xchg
jae
rolb
push
dec
lret
rcll
and
hlt
and
stos
addr16
pop
sbb
add
shll
and
dec
add
repz
jl
lahf
add
or
scas
adc
andb
adc
aad
mov
into
ljmp
decl
jl
cmp
or
xchg
rol
sub
loope
pusha
test
add
push
orb
and
lods
cwtl
sub
push
xorb
scas
jo
pop
mov
sarl
aas
loopne
pop
push
xchg
push
add
idiv
sbb
dec
mov
ror
outsb
je
aas
fisttpl
lods
cs
adcb
jnp
test
cmp
sub
andb
out
pusha
int
sbb
pusha
add
hlt
xchg
xchg
cmpsb
push
inc
sub
fldl
icebp
test
test
sti
popf
jle
pop
push
fsubrs
pop
sbb
mov
inc
or
test
mov
js
add
mov
incb
and
je
rolb
out
mov
mov
sahf
add
movsb
add
cld
ss
cwtl
popa
pop
clc
les
add
scas
mov
add
add
mov
ret
scas
add
xchg
sbb
les
mov
mov
shl
mov
adc
test
push
pop
add
dec
call
or
mov
jae
sbb
add
shlb
add
push
aam
adc
pop
sub
mov
add
enter
icebp
push
popa
and
sub
pop
or
mov
mov
and
or
push
insb
sub
inc
sar
popf
cmp
ds
cwtl
cmc
mov
inc
les
sbb
inc
add
sub
and
fcoml
mov
mov
jb
mov
mov
inc
dec
pop
add
out
pop
jl
mov
js
or
inc
rcr
fcompl
cmc
stos
jnp
out
mov
or
out
insl
jmp
stc
and
mov
repnz
pop
mov
mov
pop
pop
cwtl
and
call
push
or
repnz
pop
movsl
mov
lahf
add
into
sbbb
push
mov
testl
mov
sbb
adc
jae
cmp
pop
mov
jle
push
or
aad
mov
gs
icebp
cmp
cmp
js
cmp
jno
hlt
push
mov
cli
leave
enter
xlat
inc
add
sarb
bswap
int
rcrb
add
jp
xor
mov
fmulp
add
inc
push
sbb
mov
dec
sub
add
push
sub
jo
adc
add
test
leave
rorl
xor
sbb
arpl
mov
adc
stc
jle
aaa
xlat
push
add
iret
dec
mov
push
inc
sarb
add
pop
js
adc
ljmp
into
add
xchg
lcall
test
aam
jg
fcoml
dec
mov
pop
xor
or
mov
add
cmpl
or
xchg
mov
inc
pusha
addb
add
cmp
aaa
rcrb
jb
push
or
mov
jp
cmp
mulb
sub
xchg
mov
add
mov
aad
ret
popw
mov
ja
add
gs
cmp
mov
in
pop
dec
jbe
add
push
mov
cmp
adc
jns
add
fadds
loopne
test
cmp
movb
aas
lea
insl
and
shrl
js
dec
add
xchg
add
xor
add
dec
outsb
push
pusha
dec
inc
adc
mov
pop
sub
or
cltd
dec
or
mov
inc
xor
mov
add
fs
mov
test
setl
pop
incb
inc
adc
mov
add
push
mov
sub
pop
out
or
arpl
add
pop
xchg
ret
lods
add
dec
push
icebp
add
mov
add
mov
lret
xor
push
adc
cmpsb
mov
and
js
jge
sub
fmul
add
jbe
sahf
xorl
adc
add
data16
inc
mov
ffreep
ret
dec
daa
dec
stos
add
lea
inc
call
and
imul
and
incl
add
push
sub
cmp
add
xor
add
cmp
xor
cmp
xchg
lret
shl
clc
test
add
inc
xchg
cmp
cwtl
mov
pop
loop
mov
stos
test
aaa
popf
popl
pushf
push
adc
add
mov
arpl
int3
fildl
add
push
sbb
xchg
sbb
add
xor
add
imull
adc
and
cwtl
in
mov
ret
enter
enter
xor
dec
dec
lock
lahf
xchg
or
test
xchg
ljmp
sbb
add
vpaddsb
ja
add
mov
fistpll
cwtl
push
andps
clc
test
push
and
or
push
pop
icebp
mov
cmp
out
or
leave
nop
or
scas
xchg
imulb
mov
sbb
add
imul
fdivr
pusha
aaa
aad
jns
pop
sbbl
pop
and
pop
insb
int3
sbb
je
add
mov
add
test
jb
adc
pop
or
xchg
cmp
rcl
cwtl
out
dec
add
add
xor
orl
and
push
nop
adc
addr16
add
xor
aad
imul
hlt
icebp
test
or
ljmp
or
pushf
addb
pop
sbb
cmc
out
and
nop
pushf
sub
call
push
push
cmp
adc
loop
add
mov
dec
pop
cmp
lods
add
inc
dec
shll
mov
stc
add
push
fsubr
adc
or
dec
jne
jp
out
lock
js
jns
add
movsb
xor
int3
mov
mov
xchg
lret
fcompl
in
lock
ror
jp
mov
mov
faddl
jmp
out
shlb
or
cmpsb
xchg
sahf
or
mov
ds
test
mov
loope
dec
pop
and
mov
lcall
call
sub
popa
shrl
pusha
add
xlat
sub
cli
cmp
xchg
xchg
sub
call
inc
stos
int3
cmp
adc
mov
out
add
into
jge
add
pop
lret
dec
xchg
in
dec
daa
ss
add
repnz
gs
ret
add
aam
xlat
add
mov
daa
push
imul
sahf
outsb
nop
sbb
andb
mov
lock
mov
or
adc
or
or
sbb
sub
in
jnp
cmp
pusha
shrl
mov
xlat
in
out
xchg
stos
sub
or
jno
sbb
mov
mov
lods
add
cmpsl
push
icebp
aas
fiaddl
dec
mov
mov
lret
add
cmpsl
mov
inc
test
mov
mov
scas
add
mov
or
and
mov
ror
or
insb
dec
adc
and
push
mov
outsb
jae
imul
or
test
dec
mov
mov
xchg
fs
add
jne
mov
push
pusha
repz
rclb
sarb
push
fcomp
add
movsl
mov
add
cli
mov
cmp
xlat
fwait
outsl
add
lret
fdivs
pop
scas
push
and
add
push
repz
int3
xchg
aam
sub
pop
mov
sbb
mov
cld
push
mov
cmp
xchg
pop
push
jp
adc
xchg
test
or
sbb
adc
insl
leave
push
adc
push
test
add
dec
xorl
pop
mov
addb
cli
jne
xor
and
dec
aam
add
sbb
xor
dec
cmp
lods
fcompp
add
dec
add
xchg
cmc
mov
in
add
sbb
loop
mov
cmp
add
rcrl
imul
jmp
lock
adc
in
push
lock
and
fldenv
sub
lods
jge
rolb
xchg
add
cs
mov
xchg
or
mov
mov
lds
fs
mov
and
add
mov
popf
mov
loopne
roll
bound
cmp
insb
fidivrl
add
mov
mov
pop
dec
push
ficomps
xchg
dec
add
dec
sahf
sbb
adc
dec
xchg
lock
nop
cmp
add
mov
xchg
push
fldcw
pop
mov
inc
cmpb
lcall
xchg
add
mov
loopne
inc
cmp
lds
adc
and
adc
or
sub
icebp
insb
xchg
in
mov
hlt
xorl
or
mov
shl
test
sete
leave
push
stos
dec
add
mov
add
or
xor
adc
ret
adcb
add
pop
ljmp
sbb
arpl
out
sarb
movb
add
inc
xlat
sbb
cmpsl
dec
je
call
clc
pop
xorb
inc
ds
and
int3
cmpl
push
loope
loopne
in
or
repnz
fbld
fdivrs
sbbl
sub
xor
rclb
add
xchg
cwtl
mov
jns
xchg
xchg
lcall
nop
ljmp
sub
mov
sbb
lods
sub
aaa
lds
cld
dec
mov
cmp
inc
jnp
add
and
cmp
fwait
cmp
add
inc
fs
pop
push
xchg
jl
pop
jg
adc
adcb
arpl
add
xchg
and
dec
mov
sbb
sub
jge
fadds
push
push
cmp
out
push
enter
jp
gs
lret
sbb
pop
pop
xchg
and
loopne
pop
push
dec
add
cmp
push
or
call
loop
aad
cmp
shll
cwtl
loope
mov
mov
push
xchg
cmp
hlt
jbe
add
add
or
adc
loop
add
jae
pop
adcl
or
data16
flds
xor
test
add
insl
xchg
jg
je
cmp
ror
fdivrs
xor
loopne
or
leave
mov
xor
lcall
faddl
xor
jbe
add
push
and
and
push
fcomps
xchg
inc
sub
sti
lret
dec
pop
add
xor
sub
andb
clc
cmpsb
cltd
jne
mov
dec
add
jg
pop
fwait
jno
clc
fmuls
mov
mov
sub
mov
mov
mov
stos
dec
add
ret
mov
sub
adc
pusha
inc
es
lahf
add
mov
add
pavgb
and
sarb
pusha
mov
adc
xor
xor
inc
sahf
out
add
repz
das
add
pop
push
stos
repnz
add
xchg
sti
mov
pop
shrb
sbbb
repnz
addr16
push
and
xor
mov
jnp
hlt
mov
mov
cmp
lahf
xor
nop
add
enter
insl
lods
or
or
and
and
imul
mov
stos
xor
dec
stos
enter
cli
sbb
aas
adc
sarl
cld
jae
lahf
add
pop
add
ljmp
add
add
push
test
cmp
loope
jbe
add
add
int
not
rclb
scas
jmp
mov
cmc
add
sbb
cmpsl
andl
out
add
lock
hlt
add
test
jl
sub
xchg
popa
push
popf
add
gs
mov
pop
xchg
ljmp
xchg
push
clc
out
mov
insw
adc
cld
xor
cmp
out
add
or
sti
mov
mov
in
shlb
add
xchg
add
jnp
nop
cmc
add
loop
jmp
shlb
fwait
in
mov
mov
cli
xchg
shll
mov
add
inc
mov
out
loop
stos
test
lcall
ja
and
lret
sbb
add
dec
out
out
mov
mov
out
adc
insb
add
aaa
subb
push
ja
push
das
addb
mov
xor
in
ret
jg
cmpl
mov
sbb
out
rclb
jmp
insb
pop
bound
jb
es
jno
sub
loopne
das
jb
cmpsl
add
jmp
mov
bswap
out
add
or
mov
jge
pop
in
nop
adc
pop
and
mov
ficoml
jge
jg
sub
sbb
lcall
sub
in
ljmp
jge
inc
cmp
pop
mov
sbb
repnz
jge
pop
mov
fnstsw
inc
cmpsb
andb
insb
add
sbb
loopne
sbb
mov
mov
add
jae
cmp
jns
cmc
jp
cmp
or
int3
aam
add
dec
outsl
or
add
inc
cmp
mov
mov
push
cli
jle
iret
pop
or
dec
inc
lahf
and
imul
shrb
pop
fs
xor
add
aas
pusha
clc
mov
rcr
mov
lock
push
in
pop
inc
fcompl
xor
jbe
lock
mov
sbbb
fwait
xor
mov
xor
repz
into
dec
adc
nop
add
cs
loope
fmull
repnz
adc
add
adc
aam
xchg
and
je
addr16
pop
mov
lcall
out
adc
ljmp
dec
or
sbb
or
push
sub
cmpl
mov
xchg
and
sbb
jl
cld
and
dec
aam
fistpll
dec
xor
xchg
cmp
add
scas
sahf
aad
xorb
jge
xchg
adc
insb
cwtl
inc
push
rcr
add
cli
pop
pusha
add
enter
and
sbb
add
fimull
test
jl
sbb
jecxz
fs
adc
or
nop
les
xchg
pop
andl
xchg
pop
shrb
es
mov
add
xor
push
add
sbb
push
or
sub
xchg
jg
mov
pop
shll
mov
and
das
adc
dec
in
ss
rolb
in
ffreep
mov
xor
mov
das
cmp
mov
adc
pusha
enter
add
loop
push
int3
mov
shll
icebp
ss
pusha
xchg
and
add
insb
fmulp
aaa
in
add
cmp
add
or
adcb
rol
jns
addr16
inc
loop
outsl
fldcw
inc
mov
mov
push
mov
inc
scas
pop
test
or
or
dec
push
ss
mov
inc
sbbb
mov
sbb
adc
cmp
dec
add
iret
dec
add
mov
lds
rcrl
lods
add
pop
add
psrld
add
jecxz
loope
jnp
gs
out
and
xchg
mov
lret
mov
mov
in
loopne
mov
mov
cwtl
mov
xor
and
lods
sbb
xchg
add
inc
lahf
add
inc
idivl
add
jp
xchg
lret
mov
sbb
add
jge
call
adc
mov
loopne
jle
shl
test
pop
cmp
mov
add
or
sbb
xor
and
dec
add
xchg
insl
lcall
out
dec
add
enter
xor
hlt
mov
loopne
add
pop
xor
sarl
dec
call
mov
repz
xlat
sbb
add
inc
add
jnp
cwtl
push
ficompl
ds
orb
decb
loopne
add
xchg
mov
add
lret
xchg
or
mov
andb
test
lcall
inc
loop
push
or
inc
in
pusha
das
xchg
sub
scas
pop
neg
lahf
ret
push
shlb
push
dec
xchg
sub
dec
sbb
ss
test
and
inc
cmp
and
push
aam
jl
pop
xlat
fcoml
adcl
popf
rcl
call
int3
and
lock
cmpsb
jmp
xor
pop
add
fadds
loope
in
aas
add
leave
add
fstpt
jnp
dec
add
les
adc
inc
nop
inc
push
andb
xor
xlat
loopne
dec
ret
sbb
or
stos
cmc
xchg
sbb
out
ds
push
xor
xchg
cmp
clc
nop
aas
xor
cmp
repz
call
ret
and
jmp
js
ret
imul
inc
add
xor
out
mov
aaa
adc
mov
addb
lock
xchg
add
cmc
pusha
mov
ljmp
mov
mov
daa
jge
aam
rcr
je
scas
xlat
xor
fldl
mov
cmp
movb
mov
sarb
pusha
enter
inc
imul
pop
mov
jns
or
loope
int3
adcb
mov
aam
pop
popa
sbb
les
sbb
test
lcall
jmp
fstps
add
insl
cmp
add
popf
mov
dec
add
nop
push
fildl
ja
sub
cmp
xchg
andb
pop
rcrb
add
adcb
add
xchg
les
outsl
lea
pusha
adc
dec
add
inc
clc
mov
mov
jp
pop
lock
lret
std
and
enter
js
add
xor
cld
adc
pop
jbe
mov
push
aad
fs
add
repz
mov
mov
add
popa
and
add
add
mov
mov
das
cs
bound
and
daa
movsb
fwait
imul
stos
repnz
cli
in
shl
push
test
and
and
imul
xchg
inc
fsubp
adc
aaa
daa
rcrl
mov
xchg
js
das
insb
into
jbe
jno
add
outsb
cmp
cmp
push
mov
xchg
push
pop
outsb
loop
or
lods
rcrl
out
jne
jge
add
mov
ja
adc
dec
mov
lock
push
test
add
rcrb
jo
sbb
adcl
subb
leave
dec
and
push
fwait
xchg
adc
add
push
mov
jne
negb
std
add
scas
add
mov
dec
ja
add
dec
dec
pop
mov
dec
roll
push
dec
add
sarb
cmp
and
mov
notl
imul
and
loop
sti
lods
shlb
into
push
cs
sub
repnz
xchg
mov
mov
inc
sti
jns
cs
mov
clc
push
das
push
push
push
arpl
scas
mov
xor
add
dec
cltd
mov
push
rolb
sahf
xchg
insl
pop
cmp
add
pop
mov
sbb
dec
add
xlat
push
push
inc
cmp
jbe
add
push
ficompl
popf
push
pop
and
mov
mov
rcrl
jle
jnp
add
in
adc
shlb
and
and
imul
lds
movsb
mov
loop
add
ja
sbb
test
les
clc
js
or
push
and
shll
add
dec
sbb
ss
pushf
xor
jg
adc
int
cmp
add
xchg
aas
gs
xchg
mov
sub
inc
mov
and
cmc
add
lcall
hlt
sbb
or
repz
xor
add
decb
hlt
xlat
mov
add
and
les
repnz
jecxz
sbb
add
fsubr
mov
insb
sbb
divl
jnp
clc
mov
sub
int3
mov
leave
sub
jae
add
pop
push
rcrl
imul
outsb
lcall
mov
sahf
add
inc
lds
fs
jno
add
mov
push
jae
and
push
push
xchg
push
mov
xor
loope
mov
dec
mov
or
mov
or
call
jp
fs
pop
xor
xchg
adc
hlt
add
sbb
push
pop
std
add
mov
mov
fwait
inc
stos
loopne
push
cli
cmpl
sbb
cwtl
and
repnz
inc
aaa
add
pop
pop
push
add
pop
pop
mov
cmp
shl
pop
jne
hlt
out
and
clc
or
pop
in
mov
mov
loope
pushf
xor
add
xchg
imul
add
bound
call
cltd
xor
mov
push
out
mov
cmp
sbb
popf
push
jne
outsb
add
into
addb
add
sbb
test
and
int3
cld
in
push
jmp
lock
xchg
es
sbb
fstps
mov
rol
lods
jle
inc
fildl
push
insl
aaa
setg
repnz
cmp
pop
mov
and
or
adc
hlt
fwait
add
add
fists
scas
dec
jge
xor
add
imul
pusha
xor
mov
add
fstl
out
xor
push
rolb
test
dec
rorb
and
es
or
enter
inc
imul
jae
mov
lods
jbe
and
mov
add
pop
cmc
or
addr16
mov
je
es
shlb
or
add
movsb
dec
add
cmpsl
inc
inc
add
push
xor
addl
jae
mov
aad
inc
xchg
mov
sub
repz
bound
movsl
imul
cltd
ds
pop
adc
lock
rcrb
add
dec
add
mov
push
add
lock
jne
rorb
lret
add
adc
loope
aaa
mov
inc
add
rolb
pop
push
dec
xor
fldcw
xor
add
xchg
jecxz
incb
sbb
sbb
mov
enter
pop
cs
pop
add
adc
sahf
fwait
jo
inc
stc
add
push
xor
and
mov
jo
sbb
sbb
inc
cld
lret
mov
xor
shl
mov
and
mov
arpl
js
push
or
loope
aad
or
roll
mov
pop
lret
cmpsb
popa
test
dec
jp
call
and
mov
push
push
repz
mov
cld
adc
pop
add
mov
xchg
cmpsl
sbb
in
andb
mov
outsb
xchg
add
push
or
add
lods
pop
iret
addb
mov
loope
pop
out
pop
movsb
xchg
jo
sbb
fadds
enter
clc
ss
add
fs
dec
rorb
icebp
and
push
and
popf
sub
mov
pop
aas
xchg
andb
fstps
pusha
jb
add
lods
inc
or
adc
icebp
aam
mov
cwtl
lahf
pop
outsl
push
stos
mov
mov
dec
cwtl
sti
mov
adcl
mov
les
addr16
inc
shl
jne
sub
cmpsb
cmpsl
pop
mov
fsubl
or
add
mov
jne
add
andb
fiaddl
mov
mov
pusha
nop
fwait
out
sub
or
push
add
aad
sbb
aas
adc
xchg
or
rorb
sbb
pop
jmp
add
xchg
dec
lods
and
mov
sub
jmp
mov
outsb
or
popl
sbb
and
jle
add
mov
ss
pop
test
mov
and
cmp
lods
cmpl
jmp
pop
sub
mov
jmp
dec
pop
mov
sub
loopne
adcb
roll
xchg
xchg
add
out
popl
fiaddl
xchg
push
pushf
pop
rorb
add
int3
or
mov
mov
in
inc
adcb
stos
mov
xchg
lcall
aas
cmc
in
and
sbb
clc
out
stos
pusha
jb
cld
add
push
pop
out
lahf
cmpsb
je
imul
add
inc
sets
cmp
mov
nop
inc
arpl
pop
rorb
bound
daa
fisttps
pop
and
ret
in
or
and
cld
pop
or
inc
enter
pop
std
xor
addr16
and
fildl
repz
jns
lods
pop
stos
push
cmp
add
mov
sbb
ss
mov
pop
inc
addl
mov
out
xchg
loope
add
add
dec
in
cmpsb
lock
decl
add
test
jne
xchg
loopne
test
fimuls
fld
add
lcall
sarl
repnz
add
inc
outsb
pop
push
inc
sbb
enter
pushf
les
loop
cmp
int3
add
sub
jbe
jae
push
test
mov
roll
cmpsl
sti
dec
add
xor
or
add
ss
mov
dec
sahf
rolb
sbb
addr16
sbb
rorl
clc
je
aas
rep
jmp
ja
jl
and
das
pop
mov
dec
xor
shl
sahf
orl
xor
mov
inc
mov
and
add
jns
add
or
jg
add
push
push
rolb
xor
lcall
testl
leave
shrl
rolb
cld
and
adcb
sub
aas
test
andb
add
push
pusha
rol
movb
adc
inc
pop
dec
push
rorb
add
syscall
pop
sarl
pusha
es
pop
ds
hlt
je
mov
cwtl
enter
roll
jne
lret
mov
js
add
scas
les
add
int3
test
cmpl
cmp
jno
roll
sbb
sub
mov
inc
adc
pop
jae
or
xor
adc
or
or
jo
pop
add
inc
pusha
jnp
dec
out
push
test
mov
cmp
loope
push
std
mulb
bound
pop
clc
mov
dec
and
jo
mov
or
push
adcl
push
test
pop
cwtl
mov
fsts
js
or
xor
pop
cmp
clc
movups
sub
jp
xor
rcrl
inc
push
jecxz
cltd
rolb
mov
imul
adc
jl
dec
popa
jo
lcall
and
push
xchg
enter
pop
mov
mov
adc
repnz
cmc
pop
jbe
pop
mov
add
popa
mov
add
or
pop
jbe
mov
js
push
rcr
add
aad
and
push
outsl
xchg
or
rclb
nop
add
jnp
xchg
add
sbb
in
lds
int3
and
push
in
push
add
jecxz
rclb
outsb
out
add
xchg
enter
shlb
cwtl
push
fdivl
add
mov
mov
sbb
cmp
add
mov
fldt
movaps
es
lret
jp
fdivrl
push
jo
aam
mov
add
mov
xor
pop
imul
insb
sub
or
mov
add
mov
mov
and
rcr
lret
push
out
or
es
or
add
in
xor
jl
inc
scas
insl
mov
lcall
fiadds
adc
inc
pop
pusha
std
jp
or
das
fiadds
mov
adc
jns
or
sbb
jne
sub
pop
test
mov
clc
cmp
shll
cmc
mov
adc
add
insb
mov
sbb
add
repz
mov
nop
inc
ja
and
add
cld
and
push
mov
adc
cmp
test
and
outsb
adc
xchg
rcrl
mov
xor
and
pusha
cmpl
ds
inc
mov
mov
popa
pop
xor
in
div
imul
add
adc
in
ficompl
out
add
cs
lods
nop
push
pop
sub
es
dec
xchg
clc
pop
cmp
test
jb
mov
add
mov
andl
and
and
and
pop
shrl
pop
and
loope
js
jo
jno
arpl
subb
popa
jae
fsts
loopne
jle
fnstsw
cmp
orl
movsb
sub
fcoms
shrb
in
pop
and
cmp
xor
mov
sbb
fimuls
pushf
pop
jnp
add
and
pop
clc
pusha
daa
sahf
or
inc
push
jo
mov
in
ret
les
cmp
ss
jmp
insb
inc
xchg
inc
xor
mov
dec
and
cmp
iret
enter
cld
adc
ret
inc
adcb
pusha
mov
and
loopne
das
mov
lcall
js
add
or
mov
sub
add
adcb
push
das
add
mov
and
add
mov
arpl
cmc
add
push
mov
add
sahf
dec
fistps
fwait
pop
or
mov
addr16
and
iret
mov
ficomps
mov
jge
int3
xchg
cli
out
xchg
ljmp
adc
subl
movsb
add
arpl
outsb
pop
rcrb
dec
pop
rorb
xorl
loopne
lahf
shll
shrb
lock
cmc
fiaddl
sbb
sti
enter
sub
push
dec
adc
jp
lock
push
test
cmp
insb
lret
mov
sub
out
mov
sbb
fisubrl
andb
sbb
xlat
pop
xor
add
ss
cltd
xor
loop
push
sub
cmp
fnop
mov
in
xchg
inc
or
add
test
mov
aaa
push
aam
shll
test
xlat
sbb
fwait
inc
mov
js
pop
hlt
mov
add
movsl
sub
in
add
xchg
aad
popa
mov
push
add
idivb
inc
pop
cwtl
jns
mov
xchg
jl
mov
out
cmp
rol
outsl
and
jge
add
sbb
in
dec
in
add
test
lahf
and
pop
and
mov
mov
and
mov
or
test
push
sub
add
inc
stc
pop
sti
add
lret
ret
pop
add
add
pop
dec
js
stc
sub
cltd
add
shll
xor
movsb
mov
fiaddl
push
jns
fadds
push
jp
or
adc
in
aas
add
inc
xor
pop
xchg
sbb
xor
stc
xchg
pusha
test
sbb
in
pusha
jne
es
push
sbb
push
aas
or
dec
test
icebp
sbb
ss
pop
push
popf
sub
cmp
pop
or
inc
xchg
mov
adc
mov
jl
sub
iret
shll
movsb
ds
jbe
add
call
dec
bound
pop
hlt
fidivrs
inc
lods
in
hlt
lret
xor
rolb
push
xchg
int
rclb
pop
adc
cmp
insb
lock
mov
cmpsl
sub
adc
dec
xchg
add
cmpsb
jl
in
pop
sti
cmp
add
xor
cmp
mov
and
pop
mov
mov
orl
add
pop
xor
call
pop
pmovmskb
sbb
pushf
mov
add
nopl
cli
sub
mov
or
imul
orb
data16
push
jge
test
icebp
repnz
lock
and
cmp
mov
ret
je
add
das
pop
mov
cs
cld
dec
add
dec
push
mov
cmp
mov
sarb
xorb
xlat
stc
dec
adc
or
daa
sbb
inc
call
fnsave
add
and
in
sbb
pop
sub
jge
add
int3
fiaddl
jbe
aam
lds
lods
pusha
inc
stos
fnstenv
inc
lret
in
mov
test
adc
pusha
add
cmpsl
pop
jmp
dec
incl
mov
cmp
add
and
test
scas
dec
push
push
js
add
mov
sub
cmp
add
push
push
push
aaa
xor
lds
xor
jbe
jne
cmpb
mov
callw
jb
sarb
mov
pop
add
leave
sub
dec
shlb
lock
js
or
inc
add
fstpt
and
sub
scas
adc
sbb
hlt
stos
dec
movsl
jp
or
mov
add
cli
mov
xchg
sub
push
stos
pop
mov
dec
lds
inc
push
insb
sub
cmpsb
jae
and
and
add
sbb
fstpl
pop
xor
push
mov
lock
and
add
imul
add
xor
mov
addr16
mov
jnp
jl
pop
loopne
lea
sbb
or
cmpsl
test
iret
dec
in
clc
cmc
jne
movsb
adc
insb
out
scas
mov
in
add
leave
or
std
pop
or
mov
jo
xor
adc
std
faddl
mov
fisubrs
push
pop
sub
cmp
test
test
nop
adc
cli
pop
pop
mov
fmulp
pslld
adc
jne
mov
sbb
pop
enter
loop
ss
xor
lret
pusha
pop
outsb
add
mov
int3
mov
adcl
sbb
fdivs
faddp
inc
addb
cltd
test
arpl
add
dec
scas
pusha
subb
push
sub
shlb
out
and
push
je
mov
daa
pop
imul
mov
and
xlat
pop
ds
add
xor
in
leave
xor
orb
and
and
xor
fwait
mov
pop
cmp
xor
adc
call
xchg
scas
mov
or
pop
xor
mov
ret
or
push
dec
nop
sub
jbe
popf
movsb
push
or
add
sub
jg
mov
xchg
mov
mov
in
scas
add
shr
daa
aad
loopne
pop
imul
xchg
stc
popf
inc
push
push
jo
popf
add
fwait
mov
or
mov
nop
add
jae
repnz
mov
mov
add
add
mov
pop
insl
aas
push
adc
or
sbb
pop
or
movlhps
ret
mov
pop
or
cwtl
inc
mov
push
sub
mov
inc
pop
in
push
js,pn
push
enter
adc
filds
insb
cltd
adc
fistl
cwtl
cmp
inc
mov
aas
les
lds
pop
repnz
or
and
jno
insl
pusha
adc
shr
fistl
add
fabs
cmp
push
adc
in
push
lods
nop
ret
pusha
fists
popl
and
inc
gs
roll
inc
mov
or
add
js
add
sbb
jae
test
mov
sbb
clc
mov
pop
dec
jge
add
lret
add
and
mov
sbb
ljmp
add
jbe
or
add
push
jl
adc
mov
add
add
pushl
fcompl
adc
fiaddl
add
or
sub
insb
jg
add
adc
or
adcb
insb
add
or
fwait
shrb
or
and
loopne
add
push
shrb
pushf
out
mov
adc
lret
inc
movsl
nop
bound
push
push
adc
js
and
fcompl
pusha
xor
cmp
or
add
dec
pop
sub
pushf
jno
add
out
mov
lock
xchg
adc
or
xchg
jae
cmpsb
cmp
and
pop
movsl
push
test
xor
and
fwait
testl
add
cmp
inc
mov
mov
inc
jle
jo
and
insb
pop
or
pop
icebp
imul
and
lock
push
adc
lea
mov
add
pop
sarb
mov
xchg
add
fdivrs
sub
inc
or
shll
imul
int
das
enter
pop
or
fwait
jecxz
lea
popa
inc
in
cli
pop
lods
scas
add
insb
andl
push
sub
lahf
fildll
adcb
imul
cmp
sub
adc
pusha
lahf
mov
push
add
fistpll
popa
dec
pop
mov
mov
pop
jecxz
mov
sbb
xor
cmp
pop
adc
jle
push
mov
fcmovne
mov
test
test
faddl
fidivrl
pop
fucomip
inc
andb
dec
add
pop
fisubl
loope
xor
lock
dec
mov
mov
and
fldenv
mov
dec
pop
rcl
nop
mov
jo
inc
stos
lretw
mov
pushf
jge
dec
mov
pop
lods
sarb
add
divb
insl
call
sbb
xor
mov
inc
jmp
jecxz
adc
in
mov
rcrb
inc
push
ret
mov
cmp
sbb
cmp
repnz
push
adc
pop
pusha
xchg
lds
cld
add
mov
mov
xchg
fcompl
fiaddl
jge
jno
aas
cmp
movb
sbb
add
into
aam
in
add
xor
lds
jae
push
cmp
cmc
clc
lcallw
cmpsb
add
mov
fcomip
add
jmp
and
nop
add
xor
add
aam
stos
xchg
test
sub
and
mov
push
add
test
mov
dec
mov
mov
enter
movsb
je
mov
scas
cltd
add
rorl
stc
stc
mov
xor
adc
and
ss
push
dec
and
imull
add
sbb
icebp
adc
and
xchg
ret
add
adc
rcr
aad
fldz
add
and
xor
dec
iret
inc
pushf
addr16
loopne
xchg
jno
int3
or
and
iret
sti
inc
fdivrl
adc
rcr
xchg
add
test
and
xor
inc
pushf
push
rorl
pop
and
push
adc
xor
cmpsb
out
sbb
mov
xchg
adc
dec
push
cmpsl
out
sbb
sbb
push
arpl
push
rol
xadd
js
icebp
lret
inc
pop
mov
test
lcall
shr
cwtl
pop
pop
jb
mov
cmp
and
data16
or
js
lock
or
adc
add
outsb
pop
je
push
int3
add
inc
pusha
paddd
cmpsl
fisubl
aam
sub
xchg
mov
pop
xchg
push
std
and
outsl
push
pop
mov
push
xchg
sbbl
jp
lock
lods
sbb
push
jecxz
xchg
add
sbb
aas
cmc
cmpsl
imul
dec
lret
jbe
das
ret
cltd
jo
jns
mov
mov
add
nop
aaa
push
sub
add
loope
sbb
lea
sbb
scas
mov
push
xchg
or
or
in
scas
ds
sbb
fiadds
dec
cwtl
fildl
add
mov
rorb
add
xchg
mov
shl
loop
lods
push
sub
xchg
jne
add
shrb
mov
add
mov
ret
sbb
dec
call
cmp
add
push
das
pushf
mov
mov
sbb
add
cmpsb
jns
and
roll
add
scas
insb
xor
jae
add
and
hlt
addl
mov
fsts
addr16
mov
jp
xor
iret
subl
dec
ja
xor
enter
in
mov
jp
and
mov
repz
orb
mov
xlat
shl
pop
cmp
bt
cwtl
subb
loop
mov
sbb
jg
rclb
sbb
lret
jl
adc
inc
fs
push
inc
fcmovnu
out
int
faddl
and
cmp
scas
std
add
sub
add
add
insl
cltd
xor
dec
inc
sbb
pop
or
add
xchg
dec
push
push
xor
cmc
sub
iret
pop
cli
pop
mov
clc
fldcw
jmp
push
jmp
or
rorb
pusha
mov
ja
mov
lret
addr16
dec
push
xor
ret
mov
push
jecxz
mov
inc
insb
outsl
jo
nop
hlt
ljmp
in
add
xlat
cmc
cmp
sub
lods
add
push
and
inc
shlb
jge
cmovne
mov
or
jl
add
aad
ret
ficompl
vmovmskps
mov
cmp
or
add
jo
push
or
lods
add
cwtl
xor
fdivl
add
lods
out
out
dec
add
xchg
dec
cmp
mov
insb
add
cmp
add
fiadds
mov
das
test
mov
mov
in
popf
add
pop
icebp
push
addl
mov
rclb
fwait
lret
mov
push
push
cmp
aas
add
cmp
out
out
hlt
fisttpll
cltd
mov
notb
shlb
imul
ss
or
inc
dec
lret
test
push
cmp
add
sti
xor
rcrl
dec
hlt
xor
adc
pop
inc
pop
adc
adc
loopne
add
xchg
je
pop
nop
pop
xor
lods
xchg
xor
mov
push
cvtps2pd
dec
add
dec
push
xor
imul
add
lahf
and
push
push
cmc
mov
ljmp
mov
add
cmc
and
xchg
aas
xor
add
lret
pusha
sbb
jge
add
and
out
add
ret
sbb
rolb
xchg
inc
cmc
fiadds
lret
lock
adc
mov
rolb
testl
lret
xor
in
add
adc
std
push
xchg
js
inc
push
adc
add
pop
mov
sub
add
out
and
xchg
mov
out
les
cmp
jl
mov
mov
sahf
nop
push
or
enter
add
pusha
roll
xor
sub
add
add
xor
push
cmp
push
cwtl
iret
mov
aaa
test
push
and
xlat
and
adc
cli
push
and
mov
sbb
mov
dec
xorps
mov
outsl
adc
outsb
cli
insl
jg
xchg
pusha
inc
mov
repz
sbb
mov
push
dec
push
out
jns
dec
jp
add
mov
lds
mov
xor
hlt
jbe
add
cwtl
push
jge
mov
pop
sbb
shll
outsl
inc
arpl
mov
into
ss
cmpsl
jp
or
stos
andb
rorb
sarb
or
mov
xchg
hlt
jg
les
cli
sbb
loop
jno
add
pop
sub
dec
test
add
imul
cmpsl
xor
aam
add
nop
dec
sbb
dec
cmp
pop
inc
adc
cld
into
pop
xor
cmp
add
sbb
lock
cmc
ret
and
div
jl
add
add
addr16
mov
sahf
and
cltd
inc
or
aad
add
daa
xlat
push
xchg
sarl
add
xchg
inc
arpl
mov
addb
add
inc
insb
popa
add
inc
into
pop
sbb
sarb
mov
add
pop
loope
cmc
lret
mov
add
jbe
jne
mov
mov
dec
xor
es
dec
lock
push
or
or
add
adc
rolb
dec
les
cmc
filds
push
mov
mov
jbe
add
sub
push
cwtl
add
repz
mov
int3
xchg
xor
add
leave
sub
push
out
cmp
inc
fistpl
inc
push
xchg
lahf
add
shrb
add
add
and
stos
mov
xchg
sbb
sahf
push
ljmp
lods
lds
xchg
and
jmp
push
pusha
inc
inc
repnz
clc
loope
push
lds
add
and
xchg
add
call
mov
xor
data16
add
jg
cmp
pop
push
add
xchg
cltd
stc
sub
test
dec
xor
andb
lea
jge
loopne
aad
in
sbb
jno
enter
mov
mov
xorb
insb
roll
adc
jno
subb
addl
leave
movb
adc
mov
lahf
fadd
pop
dec
icebp
arpl
sbb
jp
shlb
iret
lahf
lock
dec
lea
sar
mov
dec
add
cld
shlb
add
pop
cmpb
lds
add
rclb
jle
sub
sub
les
add
dec
fwait
inc
dec
jae
faddl
mov
cmc
add
sbb
ja
ret
mov
lock
jne
add
hlt
enter
push
add
lds
pop
ljmp
incb
faddl
mov
pop
mov
add
inc
or
enter
add
inc
loope
pop
icebp
repz
cmp
jg
add
pop
shlb
pusha
push
inc
in
int
popf
sbb
mov
sub
push
mov
dec
or
add
shll
pop
xorl
arpl
aam
lds
lea
mov
push
add
jnp
bound
lahf
pusha
sbb
push
lea
lret
cmp
push
add
sub
add
cmp
sub
iret
adc
jo
mov
mov
add
pop
mov
ss
aaa
push
xor
jecxz
add
ljmpw
push
in
hlt
cmp
xor
sbbb
addb
les
push
jbe
mulb
pop
xor
add
test
push
cli
add
pop
cltd
dec
pop
cwtl
pop
xchg
aas
add
insb
jbe
push
mov
add
mov
add
jbe
cmpsl
xor
dec
jo
repnz
fcmove
cmp
popl
icebp
test
pop
bound
gs
add
data16
xor
jo
daa
ret
aas
push
repnz
or
xor
cmpb
mov
fistpll
add
mov
cmp
adc
mov
hlt
adc
icebp
dec
add
addl
clc
jnp
jg
lds
mov
scas
add
xor
adc
sub
pop
rolb
adc
insl
add
daa
push
sbb
add
in
dec
ret
add
push
rclb
add
jns
add
dec
mov
in
push
push
mov
mov
add
sub
lahf
lods
int3
mov
push
dec
pushf
mov
sti
add
addb
test
jne
xchg
mov
inc
rcrb
rcrb
or
and
js
add
jecxz
add
je
sbb
mov
add
xor
pop
add
test
orb
mov
aad
jnp
incl
dec
mov
cmp
lret
sbb
and
push
cmp
stos
loop
add
xchg
std
rcr
mov
dec
movntq
push
mov
or
incl
jb
pop
sbbl
leave
scas
in
mov
jnp
mov
add
out
icebp
push
adc
pop
sub
jle
subb
sbb
add
sub
mov
adc
sahf
xchg
sbb
aas
xor
or
clc
pop
push
cmp
inc
mov
mov
in
cltd
jo
jo
jae
std
frstpm(287
xchg
notb
lret
es
adc
flds
inc
loopne
ljmp
jo
or
xorl
cmc
fsub
sub
subl
add
js
pop
in
mov
jecxz
mov
test
insl
mov
pop
pop
adc
add
subb
cli
xor
mov
sahf
jb
lcall
in
aad
xchg
add
and
jo
jle
or
repnz
lcall
mov
mov
jg
gs
mov
in
xchg
push
mov
add
mov
push
pop
adc
test
notl
push
ja
add
mov
xchg
mov
in
pusha
jb
psubsb
sahf
addl
movsl
jge
lret
mov
add
cwtl
xchg
and
lods
rcl
mov
test
scas
jns
addr16
fldl
jmp
cmp
jge
add
aas
sub
sub
add
mov
pusha
stc
adc
mov
inc
or
rolb
cmp
add
loopne
loopne
enter
fs
sub
lcall
stos
adc
test
mov
mov
dec
add
cwtl
insl
iret
fcoms
jmp
pop
pop
inc
add
or
and
sbb
in
mov
mov
cmp
mov
mov
notb
iret
push
rclb
incl
adc
les
and
lret
add
and
std
add
pop
fisttpll
adcl
xor
mov
out
gs
mov
add
mov
inc
sahf
adc
lahf
pop
lods
add
jnp,pn
loop
shl
jb
outsl
jecxz
psllq
cmp
pop
shll
aas
pop
testb
add
in
incb
std
inc
lock
adc
pop
push
dec
inc
notl
cmp
cmpsb
and
call
mov
add
aam
cmc
pusha
push
dec
es
jb
add
out
mov
xchg
les
sarl
cmpsb
in
jmp
rolb
or
sbb
mov
cwtl
jns
mov
push
shll
inc
pop
pushf
js
sub
cmpsl
xchg
mov
cli
add
repz
inc
clc
inc
xchg
cvtps2pd
lret
xchg
scas
add
pop
cmp
mov
sti
mov
movsl
add
push
scas
in
push
aad
cmp
xchg
incl
lock
pop
add
roll
sub
out
add
mov
xor
xor
xor
lcall
mov
lahf
jb
push
and
add
jbe
or
add
sub
or
and
mov
cmp
add
push
scas
test
jmp
push
fsubrs
add
lcall
pop
mov
add
dec
mov
loopne
scas
dec
add
xor
insb
add
add
rolb
xlat
inc
in
add
test
push
loopne
inc
jg
and
imul
aad
data16
dec
loop
xchg
lret
cmp
push
mov
sbb
push
cmp
rorb
mov
stos
mov
and
shrb
cs
ljmp
js
aaa
xor
cli
mov
ja
adc
shlb
dec
imul
mov
pop
add
jmp
cmp
xchg
mulb
cmp
and
mov
rolb
mov
pusha
fcomp
push
add
into
les
jo
add
adc
mov
es
add
loope
fbstp
sbbb
push
add
cmp
js
jmp
cmp
clc
aam
sbb
shlb
dec
sbb
sarl
js
enter
imul
xor
hlt
push
out
add
jl
scas
test
out
xor
jno
and
xchg
or
int
push
aas
mov
xchg
inc
dec
and
sbbb
dec
add
stos
addb
xchg
ja
inc
gs
outsl
repnz
enter
mov
jbe
loop
mov
out
cmp
div
or
or
leave
aaa
call
cmpsl
clc
lea
add
push
sub
subb
add
aaa
fcmovb
mov
and
addr16
mov
jb
arpl
push
add
lea
test
rcl
dec
and
push
jl
jns
iret
and
inc
stos
shrl
inc
jmp
add
xor
mov
jno
cwtl
mov
dec
jmp
xor
xchg
cmp
adc
cs
cli
icebp
add
add
adc
into
push
in
nop
add
inc
sub
sti
psllw
jp
js
sarb
in
push
fnstcw
xor
mov
sbb
fimuls
dec
mov
mov
cltd
mov
jb
call
jg
outsb
and
pop
mov
adc
ja
lock
add
repnz
out
pop
pop
sub
divb
push
xlat
imul
push
mov
xchg
dec
es
add
xchg
add
out
cmp
jno
cmpsl
fmul
ljmp
rorb
jge
stc
and
fst
add
sbb
jo
jnp
out
add
fsub
addr16
add
les
cmp
adc
leave
inc
adc
sbb
cwtl
iret
mov
and
and
inc
add
fwait
cmp
sbb
dec
outsl
adc
mov
mov
inc
test
and
add
or
fnstcw
add
js
or
cmp
mov
mov
push
jo
ss
fdivrs
adc
cmc
add
pop
jle
mov
add
cli
pop
jmp
movb
inc
sbb
mov
out
cld
sbb
fwait
addb
lock
lret
popa
fidivl
movsb
xlat
jge
add
roll
pop
sub
or
leave
mov
add
mov
sub
pop
ror
jno
lret
mov
jecxz
inc
shrb
sub
fsubrs
add
fsub
cmp
adc
lods
inc
jl
loop
lock
sbb
pop
xchg
lret
stc
push
dec
push
add
scas
push
sahf
xor
add
cmp
es
pop
insb
cltd
je
adc
jecxz
cmc
cmpsl
inc
into
add
jle
jne
lds
mov
fsubrl
scas
add
mov
jnp
add
out
add
cmp
fucomip
inc
pusha
dec
cmp
xchg
jmp
les
aaa
sub
adc
call
and
roll
mov
add
dec
xor
dec
or
mov
jo
adc
call
cli
jns
pusha
dec
xor
les
stc
addb
pop
gs
sub
in
mov
leave
or
dec
sub
cmpb
mov
ret
cmp
fs
add
fucomp
repnz
sti
fsubs
push
lds
insb
add
int
and
pop
add
ja
cmp
adc
or
xor
add
push
add
faddl
fildl
in
push
push
mov
xor
add
mov
push
in
add
stos
andl
fwait
dec
xor
mov
inc
gs
add
xor
cmpsb
inc
mov
sbb
lcall
movsl
call
hlt
mov
loope
cmp
and
lock
mov
stos
push
leave
push
das
sub
enter
or
add
pop
jle
mov
add
std
mov
bound
fnstcw
dec
push
xor
pop
rolb
and
mov
pop
cmp
lods
mov
jns
add
dec
inc
mov
xchg
int
xchg
pop
subw
add
cmp
cwtl
dec
push
pop
int3
mov
cmp
jne
and
scas
andb
inc
xor
imul
cmpxchg
fs
xor
cli
stos
test
sub
popf
mov
data16
mov
cwtl
pop
or
loopne
movsb
sbbb
bound
adc
loop
orb
sub
lcall
in
adc
jp
data16
pop
adc
jg
cmp
sbb
hlt
xorb
sub
add
pop
sbb
and
add
lcall
sbb
movsb
inc
inc
subb
clc
inc
xor
ss
and
add
jge
add
stc
mov
jle
pop
push
and
dec
repnz
pop
mov
mov
inc
stos
add
mov
add
cmp
cmp
add
sbb
cwtl
clc
or
sub
popa
jp
mov
push
add
xor
and
cmp
push
sbb
divb
xchg
mov
fcoms
or
push
stos
xlat
movaps
and
push
add
iret
repz
dec
test
sbb
dec
outsl
je
ja
adc
lcall
add
cmpsb
js
xchg
xlat
fsubl
add
mov
hlt
out
jnp
sbb
jmp
xor
cmp
in
test
mov
fmulp
push
loope
push
je
repnz
adc
insl
mov
scas
loop
add
jl
add
lock
xchg
xorb
jnp
xor
or
jg
add
sbb
movsl
dec
cmp
add
sub
push
aad
or
fs
std
gs
repz
mov
xchg
cmp
sbb
std
fiadds
insl
jmp
sub
sahf
xchg
mov
pusha
inc
cmp
iret
add
xlat
sbb
or
sbb
mov
out
mov
sbb
aad
add
add
pop
pop
sti
leave
mov
orb
inc
inc
mov
les
push
pop
lock
test
lods
rorl
int
cmp
add
or
je
in
aaa
fsubrl
ror
push
inc
int3
add
mov
and
xor
xorl
mov
ja
fbstp
and
xchg
lea
lret
jno
mov
add
sbb
pusha
mov
add
flds
cmp
cmp
lock
adc
inc
add
mov
mov
add
fdivl
xchg
and
sbb
and
andb
call
lods
add
cs
int
in
jle
add
mov
shll
push
push
add
jle
and
arpl
mov
push
nop
push
mov
mov
fsubrl
je
shlb
xchg
xlat
leave
in
in
fimull
cmp
popl
xchg
pushf
loope
add
xchg
dec
jbe
roll
movsl
orb
push
and
or
add
lods
push
sbb
shll
add
stc
imul
mov
clc
mov
aas
mov
and
push
rorl
add
lcall
stos
ret
pop
rcrb
mov
pusha
test
push
xorb
or
enter
shlb
pop
faddl
in
ss
or
lret
or
jl
outsb
add
xor
mov
add
sarb
or
mov
repz
ljmp
insb
in
insl
test
xchg
xorb
rcll
mov
add
out
ja
and
ret
lods
or
dec
cld
jno
je
sbb
lret
fstps
adc
sub
jge
fwait
cwtl
in
xor
push
out
push
mov
jnp
add
add
scas
pop
adc
pop
sub
iret
out
cmp
popf
add
mov
cltd
add
dec
add
pop
sbb
pop
inc
sbb
mov
out
xor
xchg
xchg
sbb
push
jae
xchg
outsb
add
dec
shrl
jo
mov
dec
mov
add
mov
add
jmp
addb
xchg
mov
int
int3
jne
ret
and
or
pusha
jo
iret
push
into
add
mov
add
cmpsb
dec
insb
sbb
push
push
add
bound
xchg
add
add
add
mov
push
mov
ss
das
lret
jnp
aad
push
ret
lds
shlb
cmp
sarl
add
push
adc
call
add
ret
pop
faddp
or
add
inc
pusha
pop
sbb
scas
outsl
mov
subb
xor
fsub
xor
mov
add
inc
mov
push
mov
jb
insb
out
push
jbe
or
cmp
mov
repnz
pop
or
add
cmp
mov
pop
sbb
jb
or
and
sub
insl
dec
movsb
hlt
push
jno
lock
ficoms
push
jae
aaa
pop
sbb
ljmp
mov
and
mov
ss
inc
lahf
push
pop
add
dec
movsl
ds
mov
xor
jmp
lahf
aas
add
jg
in
jg
cs
data16
jno
scas
arpl
dec
ljmp
mov
xchg
addb
jno
lcall
pop
add
out
cld
js
push
mov
push
test
xchg
clc
arpl
cmp
pop
scas
decb
pop
movsb
in
and
pop
or
pop
fisubrl
insl
pop
ljmp
push
push
add
pop
fstpt
or
sbb
adc
addb
or
lods
js
dec
push
add
pop
mov
inc
cmc
and
shl
js
dec
addr16
xchg
xchg
push
pop
ss
mov
cs
inc
pop
push
andl
in
add
dec
std
test
ds
mov
lahf
jno
and
jl
testb
add
xor
mov
loopne
into
int3
cmp
sbb
sub
add
pop
pop
or
filds
pop
in
dec
fcmovbe
test
sbb
or
xchg
outsb
icebp
add
lock
mov
mov
iret
mov
sbbl
mov
pop
add
jns
lods
aad
mov
push
xchg
xchg
cmpb
adc
cmpsb
fdivl
mull
add
add
sub
pop
xor
add
insb
dec
inc
fwait
jle
add
mov
xchg
imul
or
inc
jnp
cmp
fdivrs
push
and
push
flds
or
cmp
add
mov
cmp
stos
orb
leave
xor
call
and
add
jns
shl
repz
pop
pop
out
lahf
push
data16
mov
mov
std
call
dec
loopne
aas
shrb
lods
add
out
mov
into
filds
adc
xor
and
adc
test
pusha
pusha
adc
mov
dec
pop
adc
push
add
dec
not
mov
mov
cmp
and
insl
cmpsl
push
jnp
cmp
enter
pusha
cwtl
aaa
add
ljmp
sbb
out
xchg
add
xor
out
xchg
xor
mov
add
cmp
test
add
nop
orb
add
in
inc
insl
sub
inc
add
loop
fcompl
fstl
les
push
out
loopne
xchg
mov
addb
insb
jge
and
sahf
insl
or
add
test
ss
pop
stc
add
mull
ds
adc
ja
add
fmul
loopne
mov
add
pop
inc
mov
add
loope
sarl
cmp
inc
pop
cli
mov
inc
push
add
pop
inc
sti
mov
aam
mov
aaa
and
dec
add
cs
int
xchg
stos
pusha
cmpb
jp
mov
sbb
fdivrl
add
arpl
add
cwtl
dec
push
add
clc
lcall
sti
sbbl
fnstcw
add
adc
outsl
add
testb
push
fildl
ret
or
clc
mov
lea
or
push
adc
test
loop
dec
pop
inc
lret
pop
mov
dec
jb
nop
lods
sbb
mov
inc
pop
icebp
cmp
lcall
fcomp
cmp
add
iret
pop
or
das
stos
lods
xchg
or
push
mov
and
xorb
sahf
std
fwait
cmpsl
cmp
cmpb
clc
and
add
mov
lret
adc
mov
add
or
cmp
ja
mov
sbb
pusha
cld
dec
repz
mov
cld
ficomps
jle
es
mov
idivl
add
in
aad
xor
addl
test
fcoml
iret
in
add
das
add
lea
jnp
sbb
add
jmp
adc
aas
cmp
jecxz
enter
fsts
js
xor
lret
int3
aam
cmp
or
pop
mov
add
sub
push
iret
lea
arpl
orl
les
jg
pop
cmp
repnz
pop
and
mov
adc
ljmp
adc
mov
jno
add
mov
mov
mov
in
inc
test
add
out
cmp
add
stc
mov
sbb
adc
inc
fistpll
push
pop
aas
mov
mov
sahf
sbb
xchg
repnz
or
mov
add
movsl
jno
inc
addb
fmuls
sub
sahf
cmpsl
lcall
pop
test
xchg
xchg
sub
adc
icebp
or
inc
mov
add
jp
adc
test
sub
fstl
push
mov
mov
js
cmovno
or
jb
dec
add
iret
jno
xor
lock
push
mov
rorl
cli
bound
push
adc
mov
cmp
pop
fbld
ja
and
in
inc
loopne
pop
repz
push
in
sahf
jae
push
fiaddl
pminsw
push
cld
sub
jnp
fisubs
cld
cmp
push
sbb
add
stc
xchg
add
fdivs
sbb
dec
jns
add
pop
pop
ja
add
add
sub
add
js
push
and
xor
stc
lret
pop
mov
adc
xor
fs
enter
inc
cmp
fsubr
mov
mov
lods
xor
xchg
mov
add
dec
xchg
pop
jp
int3
sub
add
sub
push
add
jecxz
je
mov
add
lahf
mov
fldl
negb
mov
adcl
xor
adc
cmp
pop
bound
dec
lds
dec
jp
add
and
jne
rcrb
adc
nop
in
pop
stc
cmc
imul
andb
cmp
sub
testl
cmc
fisubrs
jno
pop
xor
sub
inc
pop
cmp
pushf
je
lea
mov
repz
enter
add
push
inc
mov
mov
push
imulb
add
call
cmp
push
je
loopne
fs
cmp
mov
hlt
outsl
push
enter
xchg
or
add
sbb
lret
int3
es
add
lea
clc
inc
enter
and
pusha
and
cwtl
mov
inc
out
add
add
push
or
push
jle
stos
add
test
leave
jo
inc
popl
or
dec
int3
add
cmpl
out
cwtl
incl
fwait
pushf
mov
or
add
cmp
sbb
in
add
mov
add
aam
out
add
xchg
add
jp
add
xorl
leave
mov
das
jno
add
gs
xchg
mov
adc
lods
outsb
push
add
mov
dec
dec
stc
pop
add
xchg
lds
lret
les
pop
arpl
mov
leave
pusha
pop
loope
call
movsl
roll
pop
xor
idivl
and
inc
ljmp
adc
fdivl
out
mov
and
je
jmp
nop
outsb
loop
fistps
loop
mov
loopne
mov
jg
movsl
repz
pusha
add
pop
std
dec
mov
inc
sub
add
or
das
lahf
sti
es
sbb
adc
jecxz
test
sub
cwtl
mov
jno
jecxz
stc
inc
pop
add
pop
xchg
add
mov
and
inc
sbb
les
or
fstpl
ljmp
jl
inc
fs
rcr
add
pushf
in
fwait
add
add
push
mov
std
xorb
and
xchg
icebp
cmp
dec
les
and
cmp
jge
loop
bound
test
inc
pop
outsl
lock
stc
inc
add
mov
pusha
add
fdivl
mov
movsb
jg
sub
lret
inc
sub
cmp
lock
xchg
je
sbb
out
cmc
add
and
mov
adc
lds
add
js
dec
add
add
push
xchg
push
and
sbb
sbb
or
xchg
repnz
push
add
das
dec
dec
push
cmc
pop
imul
lahf
lea
pop
xor
jge
sbb
inc
pop
std
add
out
or
xlat
mov
test
aas
xchg
add
mov
inc
or
jmp
sub
fs
clc
and
ret
pop
dec
leave
add
lahf
imul
jmp
lret
fs
dec
mov
adc
sub
pop
sbbl
dec
cmc
or
add
rcll
stos
aaa
mov
arpl
dec
filds
iret
cltd
xor
gs
das
mov
movl
and
add
scas
nop
mov
pusha
sbb
ret
lret
add
inc
sbb
ds
gs
adc
insb
clc
add
jno
cmpb
leave
ljmp
shr
cwtl
aad
loopne
js
out
sbb
stc
std
sub
or
inc
and
and
fdivr
loopne
sbb
inc
xor
fists
bound
subb
sbb
and
jne
clc
sbb
nop
cmpsl
mov
and
add
cwtl
xchg
das
orps
sbb
inc
inc
xlat
or
popa
jns
mov
les
sbb
mov
lods
int3
xchg
add
push
add
pop
sub
mov
aam
xchg
out
out
cwtl
inc
mov
dec
fildll
lds
add
and
pop
loopne
fdivl
push
out
cmp
aas
fwait
cmp
xor
icebp
xor
xchg
add
mov
out
fsubr
call
jmp
out
in
fildll
sub
fs
call
call
cmp
or
inc
test
negb
fnstsw
mov
pusha
add
cld
in
repnz
jb
cwtl
push
rclb
sbb
stc
sbb
clc
dec
add
pop
int3
je
mov
addr16
scas
xchg
fwait
sbb
sti
cmp
hlt
add
jl
pop
add
in
xor
faddp
xor
add
mov
adc
lahf
pop
popa
sub
fs
inc
push
mov
xchg
fucomip
in
cmp
call
mov
mov
hlt
push
xor
mov
ja
stc
cmp
mov
sub
push
sub
push
and
jecxz
int3
mov
dec
test
push
inc
arpl
std
rcrb
stos
add
outsb
int3
xor
sub
and
stos
out
fwait
sbb
mov
jp
inc
sbb
test
pusha
jmp
adc
cltd
inc
sbb
fs
add
shlb
inc
jno
sub
dec
jns
fdivs
push
xor
sub
inc
movsl
mov
cwtl
and
nop
inc
ljmp
or
jge
mov
or
mov
shlb
mov
add
and
adc
mov
cmp
shlb
and
lods
mov
xor
push
scas
cwtl
xchg
outsb
jae
add
les
and
fcomps
pop
ret
hlt
xorl
fcmovne
setno
jae
fidivs
ret
and
add
pmulhuw
or
mov
shrb
addr16
xchg
call
repnz
mulb
jns
lock
add
mov
jmp
lret
xchg
icebp
mov
stos
push
hlt
dec
nop
or
mov
in
cmp
outsb
imul
test
dec
fsubl
and
aad
mov
mov
punpcklbw
jmp
cmp
js
int3
inc
xor
push
adc
xchg
test
add
addr16
fs
jb
dec
ljmp
popa
add
mov
mov
pop
lcall
push
xor
xchg
das
sbb
jno
icebp
cmp
pop
push
inc
insl
or
inc
add
repnz
adc
cltd
jae
leave
xor
mov
test
mov
push
ljmp
dec
add
inc
mov
mov
ljmp
lock
sahf
sbb
imul
pop
in
jg
mov
int3
shlb
and
dec
add
xchg
mov
mov
mov
adc
ja
popf
xchg
std
add
out
jno
jo
or
inc
in
push
cmp
xorb
cwtl
notb
add
fmull
addb
lods
stc
xor
sbb
cmp
jmp
mov
loope
std
stc
dec
dec
int3
lahf
adc
es
push
imul
mov
mov
or
xor
ljmp
adc
xchg
mov
movsb
add
fadd
ss
arpl
mov
xor
mov
in
lods
push
enter
add
mov
fdivr
sbb
cmpsb
in
stos
add
cmpsl
divl
mov
lods
sbb
in
es
and
sub
and
aas
sbb
dec
fwait
int
and
inc
push
fmull
shlb
dec
jg
imul
insl
add
add
mov
std
test
int
lahf
loope
sub
or
repz
pop
and
dec
outsl
mov
in
or
call
dec
fildl
enter
push
loope
psubb
inc
fstpl
and
jg
bound
fisttps
jp
and
or
pop
sub
fmuls
lret
adc
test
in
xchg
arpl
cld
mov
cmp
add
push
xchg
les
add
xor
sub
xchg
pop
out
inc
ret
mov
loop
xchg
sub
inc
inc
pop
push
jae
xor
faddp
loopne
inc
cld
fidivl
pusha
arpl
out
movsl
leave
sbb
adc
sahf
xor
pusha
daa
xchg
jb
imul
fcompl
adc
rolb
stc
inc
sahf
enter
imull
loope
mov
lcall
inc
mov
into
adc
mov
sbb
add
inc
jmp
cwtl
adc
sbb
lods
orl
add
cmp
out
mov
push
add
or
or
hlt
jg
add
lods
lea
mov
jl
push
lahf
xchg
clc
int3
int3
pop
mov
push
in
xor
repz
add
ljmp
xchg
xor
inc
xchg
and
adc
icebp
inc
test
cmc
dec
pushf
je
es
or
or
adc
xor
or
nop
pusha
push
les
push
sbb
jge
cs
callw
popa
gs
adc
mov
aad
ficoms
popa
mov
cmp
enter
add
insl
loope
lahf
popf
int3
dec
adc
outsl
lcall
push
inc
jl
cmp
xchg
dec
and
icebp
sbb
xor
inc
or
es
push
pop
xchg
rcrb
jp
cltd
jmp
arpl
push
or
xchg
or
push
lock
jl
lea
add
dec
or
push
jl
push
or
and
adc
lock
loopne
and
movsb
fcomi
shlb
adc
inc
and
bound
adc
push
push
gs
enter
add
shll
aad
imul
push
mov
outsb
jo
pop
or
enter
inc
xorl
call
dec
xchg
cmp
js
add
dec
pop
inc
leave
adc
iret
mov
mov
clc
sbbb
pop
push
jae
sbb
xchg
inc
loopne
popf
arpl
push
jle
add
leave
dec
mov
push
mov
lret
add
lret
sbb
sub
or
sub
lods
dec
shlb
sub
add
movsb
call
dec
pusha
mov
xor
mov
rol
int3
ret
xchg
add
dec
xlat
mov
cmp
sub
add
enter
daa
push
loope
sbb
or
js
add
sub
sub
add
in
push
mov
pop
cmp
mov
push
mov
pushf
and
shr
jns
sub
and
imul
fistpll
jecxz
or
jns
sub
adc
cmpsl
add
cmp
mov
dec
inc
adc
xchg
xor
mov
mov
roll
mov
gs
and
test
or
mov
lods
add
fldenv
dec
inc
xchg
adc
dec
push
adc
cmp
nop
or
pop
sub
push
pusha
in
test
add
sbbl
mov
push
push
add
loope
sbb
lock
aam
push
sub
rorb
push
dec
testl
jmpw
xchg
out
add
fistps
and
mov
lods
in
and
shr
outsl
inc
mov
hlt
lds
mov
pop
arpl
jl
add
mov
pop
and
shlb
mov
fs
addr16
mov
and
or
add
sbb
in
jmp
int
subb
mov
lret
mov
vphadduwq
push
add
push
mov
ret
xchg
jbe
lock
xor
or
dec
xor
push
dec
jge
cmpsl
rcrb
shrb
sbb
xor
ret
test
xchg
add
leave
dec
int3
mov
or
rol
aam
sub
jns
mov
xor
jnp
add
in
test
movsl
es
add
nop
mov
push
sub
in
sub
inc
hlt
inc
mov
add
cmc
and
not
js
and
fbstp
pop
mov
xchg
inc
add
sub
aam
inc
add
aam
daa
adc
pop
jp
jae
fistps
dec
call
pop
sbb
int
outsl
repnz
cld
lods
js
jb
add
daa
icebp
leave
ja
cmp
xchg
xor
jo
fimuls
or
mov
stos
xchg
sub
add
jecxz,pt
test
dec
insl
xorb
sti
xlat
popf
jg
pop
push
test
push
cli
inc
mov
add
sbb
push
jecxz
pushf
sarb
sbbb
push
and
xor
inc
dec
add
jno
mov
jg
sub
daa
mov
sbb
lcall
movsl
dec
cmp
adc
mov
ds
add
negl
out
int3
mov
xor
aaa
sub
push
fdivrl
adc
scas
subb
pop
popl
movl
popa
sub
xchg
and
adc
pop
xor
add
iret
add
cwtl
adc
sbb
fidivrs
stc
xchg
rcrl
add
gs
sbb
loope
pop
sub
in
push
insl
test
mov
or
xor
push
int3
adcb
ret
enter
adc
mov
mov
adcl
clc
adc
fs
jae
dec
jmp
in
cmp
testb
addr16
xchg
insl
xor
inc
icebp
push
pop
sti
loopne
fwait
push
xchg
cmp
add
mov
xchg
pop
and
shll
sub
add
loop
scas
mov
jl
cld
addl
cmpsb
mov
mov
xchg
pop
mov
xor
push
mov
stc
ljmp
mov
mov
add
cmp
fmuls
add
sub
dec
mov
sbb
add
movsb
nop
and
inc
sub
adc
mov
adc
daa
jae
sarb
sbbl
push
out
xchg
dec
popf
mov
jg
add
pop
clc
imul
scas
mov
mov
inc
xchg
lret
repnz
dec
push
popa
in
movsl
inc
and
cmp
nop
sbb
mov
or
insl
in
shrb
pop
dec
int
inc
loop
loopne
xor
pop
mov
pop
push
dec
add
cmp
enter
sahf
xchg
xor
mov
std
addl
mov
dec
mov
xor
insb
imul
cld
incb
gs
mov
jne
fwait
sbb
add
sbb
push
fdiv
or
mov
sbb
push
pusha
ss
aad
sub
push
add
gs
xchg
sub
and
in
jp
popf
or
inc
push
sbb
test
and
inc
iret
add
adc
in
or
ljmp
cmp
or
push
lods
out
cmp
roll
jge
add
adc
push
in
lret
movsb
mov
daa
inc
xor
inc
sub
xrelease
adc
icebp
xor
lods
dec
inc
lods
or
das
lcall
mov
std
mov
xchg
lret
mov
xchg
or
movsl
xchg
xchg
pop
lea
or
mov
jo
test
in
adc
push
nop
mov
addb
adc
add
mull
loope
out
pop
and
and
imul
mov
jnp
ljmp
pop
in
push
push
test
subb
test
pxor
into
pop
dec
fadd
sbb
fldt
add
jae
cs
fs
ja
mov
mov
push
add
dec
enter
stos
fstps
arpl
clc
xchg
or
or
cltd
sub
aas
xchg
call
mov
leave
pop
mov
inc
je
xor
lods
enter
push
insl
out
movsb
xor
cmpsl
outsb
pop
ficoms
cmc
arpl
add
or
mov
mov
pop
jl
or
push
fsubrl
aam
inc
jnp
push
pusha
enter
popf
sbb
in
xchg
mov
lahf
pop
inc
inc
jnp
push
gs
in
cmc
inc
or
adc
scas
xor
cmpsl
out
fwait
add
lcall
push
jb
fs
stos
imul
xchg
insl
and
add
or
pop
inc
dec
push
or
pusha
rcll
andb
in
jp
mov
sahf
push
mov
add
pop
push
outsb
push
mov
pop
imul
or
shrb
sbb
and
sub
stos
lods
scas
xchg
dec
mov
or
or
pop
cmp
je
xchg
cmp
sbb
or
adc
xchg
sub
mov
cmp
add
pop
push
xchg
adc
dec
sbb
loope
mov
fs
pusha
in
arpl
mov
das
les
push
iret
cmpsl
xlat
xchg
nop
jl
pop
add
cs
and
sbbb
fisttps
adc
pop
add
shll
btr
movsb
leave
jo
into
fs
stos
add
inc
add
cld
mov
jne
dec
add
daa
imul
cltd
dec
xor
add
mov
inc
sbb
inc
pop
add
adc
sub
xor
adc
pushf
add
push
xor
cmp
xchg
enter
dec
in
push
or
cmc
dec
loop
rolb
jae
mov
adc
mov
sbb
mov
inc
sbb
stc
mov
outsb
sub
cwtl
xor
insl
lcall
cmp
loope
adc
fs
or
arpl
mov
add
xor
jnp
out
popa
add
push
sbb
nop
js
shrl
cld
jbe
and
jnp
sub
cmp
orb
arpl
jns
sub
js
fistl
nop
xchg
inc
sub
mov
jmp
pop
mov
orb
sahf
nop
dec
sbb
jbe
movsl
dec
in
aam
mov
call
jae
jnp
inc
dec
cmc
xchg
movsb
mov
push
test
int3
aam
or
dec
sub
mov
leave
mov
popa
jge
pusha
ud2
pop
pop
and
hlt
jecxz
cmp
paddd
fmull
sbb
mov
sarb
xchg
mov
sbb
cld
fs
call
xor
das
mulb
add
jns
shll
dec
jge
mov
xchg
or
mov
rcll
and
mov
xchg
ljmp
mov
pusha
mov
imull
sbb
mov
xchg
out
dec
or
stos
das
mov
and
adc
sbb
dec
enter
pop
out
adc
test
add
int3
or
sub
shrb
adc
jl
das
mov
out
rcrl
gs
or
xor
mov
outsb
sub
push
inc
and
mov
mov
push
bound
adc
adc
cmc
movsl
add
fisubs
adc
pop
lret
and
or
and
lcall
lock
mov
popf
mov
pop
xchg
aaa
jge
adc
loop
ljmp
mov
xchg
push
daa
nop
scas
xor
fists
add
adc
cwtl
sahf
sbb
mov
xor
in
outsl
add
sub
mov
push
mov
mov
pop
jp
movsb
push
jbe
jecxz
jmp
jg
sbb
jns
enter
pop
jmp
ret
or
sbb
je
loop
add
sbb
xchg
in
dec
inc
jl
pop
jl
and
pusha
jecxz
pop
call
xor
push
mov
push
or
xchg
and
or
add
stos
pop
mov
xor
les
dec
mov
jmp
stc
jmp
pusha
dec
in
and
dec
shrl
daa
sub
out
inc
out
add
xchg
ss
aam
cs
jnp
pop
push
add
mov
pop
and
mov
loope
inc
add
xchg
mov
mov
pop
and
dec
add
xchg
and
mov
outsb
call
int3
or
adc
inc
inc
lahf
pushf
les
xchg
mov
and
pop
iret
add
jmp
lock
add
mov
cmp
adc
xchg
loopne
in
int3
ret
mov
jbe
lcall
call
shll
add
jns
sbb
in
and
fldt
hlt
jnp
mov
popa
shlb
mov
xor
jecxz
push
cltd
add
lods
inc
xor
mov
into
push
cmpsl
in
out
cs
xchg
fmuls
xchg
aas
add
movsl
mov
fimuls
ljmp
pop
inc
dec
cld
cmp
enter
mov
dec
loopne
push
test
add
xchg
xchg
pop
js
xchg
mov
sub
leave
dec
and
push
jge
pop
shll
xor
hlt
mov
sub
mov
cs
and
repnz
cwtl
outsb
mov
add
or
inc
or
push
dec
lock
dec
sub
imul
push
or
ja
or
xchg
push
push
clc
add
xchg
lock
sbb
int
push
sub
mov
adc
xchg
add
mov
inc
xchg
mov
adc
insl
or
fcoml
mov
cmp
and
sub
cmp
sbb
in
lock
or
enter
mov
in
add
and
je
lds
mov
add
sub
stc
dec
adc
dec
cwtl
testb
push
icebp
push
or
jns
jmp
rolb
js
push
movsb
clc
xchg
clc
ret
push
xor
sub
adc
outsb
xor
xchg
clc
test
aaa
jbe
int
push
jmp
aas
shrb
hlt
mov
add
mov
adc
inc
sbb
add
popf
mov
xor
stc
add
subl
cmp
xchg
icebp
popa
loope
lret
aam
xchg
pop
data16
jl
gs
pop
or
ss
push
sbb
jge
jp
popl
dec
hlt
jl
xchg
push
xchg
add
js
jae
addr16
js
or
int3
mov
sub
lahf
adc
cmpsl
pop
jno
push
cld
rorb
add
pop
mov
scas
mov
test
shl
sbb
shlb
cmp
or
popf
jg
aaa
ds
shlb
jp
shrl
js
test
cmp
adc
or
mov
cs
gs
inc
jbe
cld
lret
add
pop
jno
pop
outsl
loopne
cmp
movsb
popf
cs
jo
jmp
push
xchg
or
je
fcoms
jb
jno
add
xchg
pop
outsl
mov
jnp
jo
or
and
lcall
bnd
sub
faddl
mov
add
incb
mov
cmp
rorl
pop
cwtl
jns
test
add
aas
pusha
pop
jp
jbe
add
add
es
push
add
dec
cmp
pop
jge
ljmp
fadd
fisubl
push
inc
and
mov
fwait
dec
dec
shlb
pop
add
jb
ss
outsb
inc
lds
xchg
add
jl
push
and
orb
pop
in
sti
ret
bound
dec
in
and
mov
cwtl
insb
adc
mov
and
movsb
int3
mov
sbb
es
inc
int3
test
movsl
add
insl
add
fcmovnu
xchg
nop
push
pop
cmp
add
enter
nop
and
mov
pop
mov
jle
sub
mov
pop
jns
pop
mov
inc
movsb
push
jl
in
adc
xchg
loop
add
xchg
cmp
es
cmc
mov
idivb
mov
mov
mov
cltd
dec
push
in
call
pusha
adc
rolb
cli
inc
sbb
inc
jno
sub
add
loopne
movsb
popf
sarb
rol
mov
add
mov
fnstcw
sarb
shrl
das
and
sahf
lds
add
dec
mov
mov
xor
in
rorl
ror
fiaddl
lods
pop
jbe
in
push
or
cld
loopne
pushf
orl
incl
pushf
cmp
popa
mov
add
pop
lock
repz
push
adc
cmpl
mov
mov
push
xorl
rcl
bound
inc
inc
mov
rolb
or
and
inc
popa
je
mov
hlt
in
xchg
daa
xor
sarl
jo
rcll
push
xchg
addl
jnp
repz
mov
pop
mov
push
cmc
daa
sub
sbb
cmp
outsl
jge
push
leave
xor
add
or
jns
add
inc
sbb
add
mov
inc
inc
mov
pusha
call
mov
pop
cmp
orl
or
ret
nop
xor
add
fsub
adc
add
add
cmp
and
ljmp
jo
or
outsb
add
aas
mov
inc
divl
and
xor
repz
dec
nop
xor
xor
mov
fldl
sub
orl
je
inc
shr
xor
enter
xchg
or
jae
lret
sbb
jecxz
stc
std
daa
xor
cmp
jl
out
ret
aas
cltd
fistpll
dec
sbb
jle
imul
push
add
js
jg
inc
xor
outsl
push
inc
gs
pop
sarb
or
loopne
mov
pop
mov
enter
sub
fists
bound
xor
repnz
sbb
push
add
sbb
push
ret
add
mov
and
or
test
pop
icebp
js
and
insb
cwtl
pop
pop
mov
clc
and
add
mov
mov
adc
fists
pop
xor
popf
add
xchg
out
or
and
mov
in
add
rolb
ret
sub
jnp
test
sbb
inc
lcall
dec
add
pop
imul
in
pop
inc
and
ljmp
pushf
mov
popa
sbb
add
in
bswap
imulb
jge
dec
daa
loopne
dec
add
cli
sub
dec
inc
push
pop
fmull
aas
popa
xor
popa
xchg
mov
xor
xor
push
push
pop
pop
adc
mov
inc
xchg
jne
popa
and
jns
xchg
mov
xor
add
mov
push
shrl
add
inc
popf
lahf
or
fisttps
js
cmc
test
inc
inc
jge
inc
xchg
outsl
shlb
lods
inc
fadd
popf
dec
fiaddl
sti
inc
stc
xchg
add
and
push
cltd
add
mov
shl
pusha
jno
movsb
push
mov
fimuls
je
mov
inc
or
add
fsubp
jo
fs
add
adc
dec
add
xchg
mov
xchg
add
mov
mov
out
mov
hlt
aad
shrl
lock
mov
pop
mov
adc
imul
jb
call
in
add
mov
xor
add
xchg
or
lods
inc
sbb
add
add
jae
test
adc
add
or
ret
popf
dec
add
and
fiadds
lahf
xor
les
imul
sub
xor
add
and
mov
fsts
data16
lret
in
lcall
aaa
dec
fildl
jmp
jle
cwtl
jecxz
pop
push
xor
push
stos
push
add
mov
aas
fsts
mov
movsb
mov
add
loope
lds
mov
add
js,pn
inc
aam
stos
push
mov
xor
jbe
or
and
mov
adc
out
inc
adc
xor
dec
sbb
jp
jae
adc
enter
jns
cmp
in
dec
sub
mov
aaa
mov
cli
mov
flds
clc
push
and
pop
dec
jnp
or
add
add
xchg
shrb
sti
fwait
test
pop
adc
aad
mov
xchg
add
movsb
adc
sbb
std
jle
and
test
inc
hlt
sub
lret
aas
xchg
xchg
roll
aas
push
pop
mov
sub
out
inc
imul
add
dec
mov
fsubs
scas
mov
shll
xchg
add
jmp
int3
mov
or
in
add
imul
jns
inc
push
cmp
mov
and
fistps
enter
mov
mov
mov
mov
jmp
mov
das
int3
pop
xchg
cmp
jo
adc
push
rol
test
mov
mov
xor
dec
jbe
add
cmp
xchg
add
aaa
sub
js
adc
inc
movsl
sbbb
stc
mov
push
enter
mov
daa
lret
insb
adc
repz
mov
inc
fwait
sahf
push
sbb
xchg
pop
movsb
stos
and
outsl
sbb
pop
mov
shlb
mov
test
push
lock
push
mov
and
xchg
inc
adc
js
ja
sub
dec
xor
fstps
scas
add
jnp
cltd
ljmp
ds
aam
out
adc
fnsave
add
in
inc
aam
iret
mov
leave
insb
in
mov
push
push
add
fwait
push
lods
aam
jne
sub
out
add
dec
push
and
add
push
cli
pop
repnz
pop
mov
fs
jo
mov
dec
add
cmp
in
xor
add
xor
pop
cmp
or
sub
lods
sub
push
pop
cmp
add
xor
or
push
icebp
ss
test
icebp
add
push
dec
shlb
push
cmp
mov
pop
in
shll
push
rcl
push
dec
or
xor
inc
and
xchg
pop
fisubs
ljmp
shr
inc
add
inc
test
mov
mov
into
jmp
popl
sbb
add
dec
shlb
inc
movsl
fstp
outsb
add
out
dec
or
sbb
stos
mov
cwtl
or
dec
jmp
mov
rcll
js
imul
sbb
fs
or
loope
jp
sbb
in
push
ds
cmc
pop
adc
sahf
sub
inc
cmp
std
loopne
js
adc
popa
jnp
rol
inc
xchg
js
mov
lret
jno
add
sub
cmp
xchg
xchg
inc
mov
add
adc
stc
inc
aaa
movsb
mov
rorb
mov
sbb
add
jne
mov
xor
xor
inc
es
cwtl
imul
rorl
call
das
fistps
lret
add
inc
popf
inc
or
popa
jno
icebp
jmp
fwait
mov
insb
movsb
mov
loopne
xlat
imul
cltd
jmp
jl
mov
imulb
test
add
in
fwait
xor
xchg
push
lcall
mov
jbe
es
icebp
push
out
hlt
add
insl
loope
xchg
imul
mov
push
cmp
push
jb
test
rorb
outsb
icebp
je
pop
push
jle
mov
shrb
mov
sbb
add
shlb
add
xchg
xchg
jns
jae
dec
mov
sarl
clc
je
lock
ljmp
mov
sbbl
dec
ljmp
xchg
les
add
xor
enter
xchg
inc
incb
clc
or
mov
je
inc
faddl
mov
or
mov
jbe
jl
adc
add
icebp
fcomip
pop
dec
inc
or
sub
xchg
push
or
dec
mov
sub
add
aad
mov
roll
mov
xor
xor
sbb
mov
cwtl
push
setle
xchg
mov
add
lods
cmc
add
push
popf
mov
test
or
mov
daa
sbb
cltd
add
lahf
mov
test
inc
sub
and
stc
js
dec
add
mov
bound
or
testb
mov
aad
ret
mov
pusha
stc
inc
lret
inc
add
pop
push
in
dec
in
adc
and
sar
xorb
fwait
jbe
mov
sbb
cmp
cwtl
inc
outsb
lcall
sti
cld
cmpb
xchg
loopne
or
cwtl
cmp
ja
sbb
xor
jo
add
dec
inc
popf
and
dec
sub
ror
test
roll
aaa
out
pusha
outsl
popf
sbb
cli
stc
add
cmp
outsb
pop
daa
mov
add
loopne
rolb
ret
jle
adc
gs
jmp
add
dec
aas
pop
imul
and
ja
pusha
mov
cli
jno
leave
add
push
pusha
insl
pop
mov
push
xor
adc
xor
aas
sbb
or
test
data16
or
arpl
or
into
mov
shrb
xor
lcall
add
ja
popa
das
jb
add
jae
mov
repz
fimull
pop
xor
jno
notb
dec
or
inc
push
sbb
loopne
sahf
popa
nop
dec
test
cmp
xchg
pusha
inc
cmpsl
outsb
jae
add
mov
rolb
jl
dec
rorl
pop
fadds
mov
cmp
incl
popf
adc
popa
xchg
enter
paddsb
nop
fldenv
or
mov
push
into
idivb
mov
push
adc
int
das
loope
add
inc
mov
add
dec
gs
push
nop
add
repz
dec
sbb
pop
dec
or
or
lcall
add
pop
or
int3
std
cwtl
adcb
ret
cmp
repz
xchg
push
add
sub
out
xchg
test
cmp
stc
inc
pop
or
test
add
sub
mov
in
rclb
or
popa
adc
push
jo
insb
and
or
mov
icebp
orb
sub
dec
inc
mov
or
adc
jmp
and
and
shlb
lods
pusha
and
outsb
xchg
repnz
fcmove
sbb
imul
shr
add
loopne
outsl
and
jns
sub
add
xor
and
insb
outsl
or
jae
add
mov
adc
pop
and
or
push
es
pop
pusha
mov
inc
pop
mov
out
pop
imul
sbb
lds
push
lret
outsb
and
sbb
xor
pusha
fistpll
adc
andb
cld
lcall
faddl
sahf
cs
call
add
mov
inc
xchg
inc
adc
shr
loopne
sub
xor
pop
roll
repz
xor
stc
rorl
mov
fcoml
ljmp
xor
mov
dec
dec
jb
cwtl
adc
fstps
lahf
xor
mov
add
mov
movsbl
push
and
nop
stc
ret
add
jp
jno
adcl
cmp
subb
push
dec
sub
lods
loope
pop
mov
mov
nop
lret
aam
and
inc
insb
mov
jp
les
lock
adc
push
sbb
dec
add
jge
sar
in
call
jl
xchg
lret
cmp
nop
xor
jmp
or
ljmp
shll
fnstcw
jns
add
mov
dec
call
in
loopne
adc
cmp
test
inc
inc
pushf
and
push
movsb
pop
or
sbb
nop
and
dec
je
icebp
into
lahf
js
push
push
sbb
sub
cmp
jne
mov
jns
push
inc
sarl
mov
and
inc
outsl
pop
mov
imul
stc
jl
cmp
into
ret
and
inc
in
ret
hlt
mov
ret
pushf
pop
pushf
lods
inc
stc
fildl
push
jne
enter
popl
pop
ret
dec
pushf
add
lods
lock
or
xchg
in
jno
pop
dec
cmp
push
sbb
pop
mov
dec
fs
mov
jmp
fcmovne
fsub
inc
scas
add
xor
mov
add
pop
enter
daa
sahf
xchg
in
pushf
pusha
je
inc
popf
add
pop
xlat
add
adc
xchg
dec
in
sbb
xchg
test
dec
jbe
call
and
sub
sbb
mov
call
ret
push
dec
jmp
add
and
jns
inc
idiv
imul
cmp
mov
ljmp
outsb
sub
subb
add
jg
mov
rorb
jns
xor
les
pop
add
adc
dec
pusha
ljmp
push
or
add
es
insl
cmpsl
or
testl
lea
stos
sahf
pop
cmp
cmc
xchg
hlt
fs
cmpb
add
dec
test
int
adc
sbb
xchg
pushf
add
shll
jnp
jne
cmpsb
jle
movsl
or
inc
push
in
xor
jo
ret
dec
lret
enter
cmp
aaa
cmc
outsl
arpl
cmp
addr16
dec
clc
dec
and
jp
fadds
xchg
mov
add
xor
ljmp
lcall
scas
popa
and
lcall
int3
js
das
dec
int3
dec
cmp
cmp
outsl
scas
xchg
out
pop
loop
mov
loopne
stc
btc
mov
inc
inc
sbb
add
pop
xchg
cmp
out
loopne
or
mov
bound
sbb
repz
jb
mov
call
xchg
mov
and
push
ror
dec
sbb
xchg
push
test
push
sub
pusha
movntps
add
imul
dec
or
sbb
adc
out
and
and
pushw
mov
lods
fistps
in
test
js
pushf
pushf
inc
xchg
cltd
call
push
fidivs
inc
sarb
popa
or
cmpl
int3
jg
roll
inc
push
or
pushf
xchg
inc
dec
ds
xor
add
xchg
pop
sub
pop
push
mov
repnz
dec
push
xor
cwtl
stos
cmc
mov
xchg
sbb
or
push
jb
xchg
pop
xor
loopne
push
push
jns
xor
cld
and
mov
push
pop
loope
dec
outsb
sub
add
cmc
and
add
mov
push
lahf
xchg
add
or
bound
adcb
xor
and
pop
data16
fistps
lock
or
xor
xchg
lock
xorb
fdivrl
add
push
movsb
aad
mov
push
xchg
lahf
add
fldt
jns
les
cli
leave
repz
add
push
nop
andl
in
and
or
pop
popa
or
dec
iret
aad
and
jl
mov
outsl
gs
and
jae
adc
out
adc
and
sbb
add
dec
pushf
dec
mov
mov
sub
dec
nop
mov
es
mov
add
call
add
sub
pop
sahf
inc
mov
xor
or
call
mov
sub
sahf
xchg
out
fwait
add
xchg
mov
dec
mov
xor
inc
shlb
and
or
mov
sub
xor
jl
inc
lock
lock
sbb
ret
pop
xchg
xchg
orb
shll
inc
lds
add
pop
sti
sub
add
lcall
jge
es
mov
add
sbb
mov
mov
inc
mov
pop
mov
into
mov
sbb
push
sub
loop
pushf
roll
nop
xor
rcrb
adc
in
fisttpll
rcrb
pop
or
jns
mov
loop
jb
add
cld
popl
and
iret
add
mov
outsb
divl
xor
adc
jmp
rcl
outsb
cmp
add
enter
push
cld
pop
incb
outsb
imul
mulb
ret
adcb
rorb
ja
seta
pusha
cmc
dec
add
loopne
or
cs
js
sbb
mov
in
dec
push
rorb
rorb
adc
adc
insb
mov
mov
sub
in
or
fildll
adc
mov
jmp
enter
mov
loop
push
leave
testb
adc
push
add
cwtl
mov
cmp
mov
xor
sbb
sub
lret
or
inc
mov
dec
xchg
mov
adc
mov
dec
shr
pop
xchg
pushf
sbb
popa
out
adc
push
inc
shlb
rorl
mov
xlat
sub
fisttps
rolb
mov
es
divb
lret
cwtl
roll
pop
imul
adc
dec
out
loopne
cwtl
mov
test
call
pop
cmc
xchg
lea
adc
sbb
cmp
int
and
mov
dec
lock
das
xchg
mov
int
mov
inc
mov
mov
call
dec
or
jns
pushf
mov
mov
ja
add
hlt
js
js
dec
js
mov
and
inc
test
mov
and
test
mov
cwtl
jecxz
xchg
loope
and
or
add
inc
aaa
push
and
sbb
inc
pushf
inc
cmp
mov
and
adc
pop
pop
cmpsb
jne
add
jb
push
cmp
mov
adc
xchg
jle
push
xor
or
add
jp
in
shlb
ficoms
out
jno
jl
dec
hlt
inc
jo
insb
pop
nop
iret
sar
add
repnz
pop
pop
push
mov
outsl
out
xchg
aas
or
sbbl
lret
cmp
push
sbbb
fildl
stos
or
insl
push
or
mov
repnz
push
sub
jns
adc
push
sub
jecxz
sbb
add
in
cltd
aad
outsb
jo
inc
iret
dec
das
jmp
jmp
cmc
mov
xchg
cwtl
mov
and
add
jge
pop
inc
mov
cmpsb
clc
xchg
adc
add
jl
imul
jo
xchg
jmp
push
jb
sti
add
inc
mov
mov
mov
push
adc
loope
nop
repnz
cmpl
test
add
inc
stc
notb
xor
cmpsl
add
outsl
fsubs
gs
mov
add
sbb
pop
jmp
imul
fsubs
sbb
cwtl
cwtl
fdivs
inc
inc
rcrb
inc
sbb
into
or
inc
xor
and
sub
fldt
inc
jae
mov
paddb
js
pop
push
mov
sub
push
adc
orl
or
add
and
cmovge
inc
or
jmp
daa
ret
rorb
mov
add
int3
mov
add
pop
fsubr
add
mov
inc
jecxz
push
mov
movsb
xorb
je
ret
push
aaa
add
add
jns
popf
movsb
and
js
inc
push
enter
out
nop
inc
dec
mov
pop
pop
mov
and
inc
pop
sbb
jne
dec
xor
addr16
xor
or
dec
xchg
mov
insb
enter
insb
bound
cmp
or
or
lcall
loopew
jle
pop
icebp
mov
sti
lea
fucom
sub
test
and
push
adc
enter
sti
add
movsb
mov
mov
mov
push
popl
jns
pop
movsb
pop
mov
adc
push
push
pushf
mov
shlb
fs
adc
jg
test
adc
pop
cmp
adc
inc
js
sub
or
dec
cmp
add
push
pop
push
push
adc
adc
int3
cmpsb
cmp
inc
outsb
mov
pop
push
popf
dec
fchs
lcall
mov
or
xchg
add
inc
push
sarb
iret
aas
call
dec
and
int
mov
ljmp
adc
jae
push
pop
inc
das
int
pusha
nop
ds
ljmp
adc
cmpsb
sbb
packuswb
xor
push
scas
push
aaa
push
dec
sti
adcl
lock
popa
xor
sbbb
and
out
ret
jne
xchg
adc
dec
push
or
xchg
and
mov
and
push
xor
pop
adc
loope
and
jge
jp
sarl
shrb
movsb
add
push
mov
add
sub
mov
pop
xor
pushf
mov
push
jl
enter
test
ds
test
mov
nop
xor
and
xchg
jo
and
hlt
sub
fiadds
push
mov
movb
xlat
jmp
rcll
in
clc
add
adc
fisttpl
xor
fcoml
sub
pop
or
enter
inc
push
mov
or
scas
jp,pt
outsb
inc
add
adcb
dec
hlt
pop
data16
dec
fdivrs
cmp
insl
outsl
sbbl
inc
inc
mov
test
add
or
or
fstps
push
pop
mov
ds
push
mov
imul
cmp
scas
sbbb
mov
mov
push
xchg
je
cld
mov
scas
loope
daa
sub
mov
or
jp
adc
or
in
xor
ds
test
or
pop
push
push
jg
and
lods
dec
adc
in
repz
inc
mov
pop
mov
dec
mov
lret
pop
mov
fbld
fsubl
pop
mov
imul
imul
nop
mov
inc
xor
popa
sbb
ds
push
xor
add
lahf
das
enter
aas
dec
add
iret
sbb
push
addr16
adc
cmp
cmp
push
add
adc
out
pushf
or
imul
push
outsb
push
jmp
and
add
inc
push
mov
add
dec
cltd
mov
inc
mov
add
or
mov
sbb
and
xlat
in
dec
in
sbb
lods
dec
and
mov
imul
cmc
pop
scas
out
jmp
xor
mov
fucom
sbb
mov
popl
pusha
sub
lea
mov
push
cmc
in
cmp
dec
jp
fwait
mov
push
dec
pusha
xlat
ret
push
inc
push
pusha
js
stc
in
cwtl
addb
loopne
mov
or
cmpb
push
adcb
lds
in
add
out
idiv
pop
fnstenv
add
pop
loope
lock
xor
cld
imul
mov
xchg
lods
pop
add
insb
jo
mov
push
xor
hlt
and
das
dec
push
sbb
and
add
mov
test
fisubrl
xor
lret
or
jge
rclb
jne
js
setl
addb
add
rolb
cmp
fwait
dec
imul
sub
xchg
insl
mov
and
lret
sub
mov
sar
lods
cmp
movsb
nop
add
aaa
add
jl
int
sbb
sahf
jmp
push
mov
jl
decl
mov
push
xor
add
fistl
pop
out
add
or
aam
into
outsb
cmpsb
cltd
rcl
push
fs
push
orb
jns
jae
popa
test
sub
pop
jo
dec
adc
adc
push
add
fucomip
add
aad
mov
sub
imul
test
push
jmp
add
cli
fmuls
out
mov
mov
leave
sub
test
sbbb
insb
push
push
push
hlt
out
insl
imul
jno
add
push
rcr
lea
or
mov
lock
out
mov
mov
loope
mov
sbb
das
pop
sbb
add
xlat
adc
mov
push
nop
test
inc
xchg
pop
pop
add
mov
fwait
jg,pn
inc
add
mov
or
sub
fbld
rcrb
call
xchg
push
mov
mov
sahf
sub
es
addb
lahf
xchg
dec
popa
scas
cwtl
jo
pop
mov
bound
out
addr16
xor
and
xlat
call
aad
mov
ror
add
sub
rclb
sbb
add
and
mov
nop
xor
loopne
lahf
std
seta
xor
inc
movsl
sbb
leave
add
call
mov
add
pop
and
dec
xor
mov
lret
ja
push
lcall
and
mov
jb
nop
lock
sbb
sub
movsb
sbb
or
push
xchg
loopne
int
add
loop
mov
inc
fcompl
sbb
popa
xor
adc
fwait
cmp
cmp
dec
sbb
pop
sbb
adc
xchg
adc
inc
cmp
js
add
loop,pn
clc
test
cwtl
add
sbb
sub
and
mov
loopne
add
add
sahf
sub
adc
jg
rcl
hlt
pop
pusha
out
add
outsb
jns
pop
aad
pop
inc
adc
inc
fldl
dec
fdivrs
insb
cltd
addb
enter
sub
mov
xor
in
sbbl
xorb
adc
lods
push
push
push
fcompl
test
xor
sbb
iret
int3
mov
test
aam
test
or
xor
xchg
in
sbb
faddl
pop
sub
sub
add
insl
aad
mov
mov
scas
sub
xchg
mov
dec
jb
mov
adcb
stos
mov
imul
aam
mov
adc
addr16
loopne
cmpsl
daa
fnsave
and
xchg
sbb
cli
pushf
subb
xor
sbb
int
xchg
rolb
push
and
mov
or
add
adc
sub
cmpsb
mov
out
add
jle
jl
lods
stos
test
cwtl
das
fisttpl
je
add
bound
outsb
rclb
mov
xchg
insl
mov
outsb
leave
in
adc
mov
jecxz
xor
jo
add
push
inc
out
and
imul
outsb
dec
mov
jp
into
out
or
mov
shr
nop
out
pop
xchg
fadds
int3
cmpl
ss
add
test
outsl
xlat
cmpsl
idivb
add
sbb
mov
js
pop
add
sti
pop
and
aam
dec
in
add
add
lea
add
jecxz
cmp
pop
inc
add
fcompl
add
xorb
shll
xor
cld
cld
mov
mov
lods
into
xchg
mov
sbb
pop
xor
shlb
xor
cwtl
cli
orb
lea
scas
push
sbb
dec
pop
xchg
sub
and
add
rcrb
mov
push
hlt
nop
add
addr16
fldl
mov
shl
adc
pusha
nop
rorb
es
mov
out
jp
sub
nop
inc
pusha
fstpl
aas
xchg
nop
adc
and
add
adc
sbb
loope
push
es
cmp
mov
call
fs
and
popa
mov
dec
mov
mov
push
sarl
mov
fsubr
adc
or
mov
nop
mov
out
inc
jg
xor
cmpsl
sbb
sub
push
pop
adcl
out
hlt
and
aam
pop
inc
and
sbb
imul
mov
jae
add
jecxz
lock
pushf
movsb
sarb
mov
ret
adc
xchg
subl
movsb
nop
inc
cmp
icebp
lods
push
pop
xchg
xor
scas
push
sub
mov
sub
sub
sbb
aad
in
pop
adcl
ja
pusha
add
lcall
or
or
xlat
fisubrs
push
xchg
add
daa
fadd
inc
aas
pop
pushf
push
lds
bound
rorl
mov
js
dec
clc
jmp
nop
dec
mov
xlat
or
push
sbb
loopne
nop
lods
mov
sub
aam
add
nop
test
xor
js
call
hlt
rolb
push
dec
jno
mov
js
add
xchg
scas
mov
rclb
sbb
adc
and
sbb
cwtl
add
cwtl
jecxz
jno
std
push
jns
lock
adc
clc
ja
cli
movsl
add
scas
aas
or
xor
xlat
sahf
int
adc
pop
arpl
iret
sub
fmuls
jle
popa
mov
and
dec
movsl
rcrb
mov
inc
inc
add
xchg
sub
mov
in
push
adc
hlt
fiadds
push
cmp
adc
loop
fdivs
push
add
pause
sub
xchg
nop
into
inc
jbe
pop
mov
or
sbb
shrl
and
xchg
rorb
mov
add
mov
cmc
in
cltd
mov
daa
or
mov
push
sbb
faddl
pop
loop
add
and
fisttpl
popa
cmp
add
add
orb
ret
outsl
scas
fisubl
cli
adc
or
jbe
fdiv
stc
jecxz
daa
add
or
icebp
xlat
push
insl
in
popa
mov
nop
pop
xor
je
sbbb
mov
cmp
adc
out
leave
and
mov
aam
pop
setp
pop
mov
jg
push
jp
mov
xor
icebp
cmp
nop
cmc
test
insl
pusha
add
mov
test
pop
nop
hlt
enter
pop
mov
cmp
jle
mov
pushf
mov
pop
test
or
mov
fmul
fidivs
push
jge
hlt
outsl
gs
dec
loopne
repz
pop
or
movsb
cwtl
imul
jnp
push
test
or
dec
clc
bnd
add
rol
pop
mov
insb
add
lods
shll
jo
insb
out
mov
xchg
and
js
push
daa
repz
loopne
mov
mov
in
lahf
cmp
mov
sub
hlt
fadds
cmc
sti
int3
add
shlb
incl
cmp
int
xlat
call
mov
add
or
push
call
iret
jmp
mov
mov
cwtl
ret
loope
fisttpll
clc
fiadds
sub
jecxz
pop
jno
fadd
fnstsw
push
pushf
inc
cmpl
inc
cmc
dec
fcoms
mov
shlb
imul
dec
pop
mov
bound
mov
dec
or
push
jno
outsl
xchg
hlt
je
lret
cltd
adc
in
add
inc
mov
add
mov
popa
aam
xchg
pushf
addb
les
or
pop
push
pop
popf
insb
push
lret
add
aas
mov
add
cs
nop
ja
push
xchg
cwtl
lcall
shlb
jne
rclb
imul
fildl
mov
mov
push
shrb
mov
xor
data16
add
dec
mov
inc
ja
push
xchg
imul
mov
mov
imul
dec
push
in
push
popf
fs
push
sbb
shlb
addb
add
mov
cltd
outsl
inc
push
inc
adc
mov
push
add
imul
pop
mov
sbbb
mov
mov
inc
add
xor
add
push
nop
adcb
popl
or
fsts
adc
shrb
add
adc
pop
ret
loope
test
inc
rcrb
mov
jne
xor
mov
add
mov
repnz
sbbb
dec
cwtl
or
pop
nop
push
mov
inc
xchg
test
lods
pop
popf
pop
lock
push
stos
push
mov
push
in
pop
or
pop
and
mov
andl
mov
fiaddl
xorl
enter
inc
imul
push
push
mov
fldl
push
push
mov
push
xchg
test
in
sub
add
mov
fildll
cmpsl
pop
inc
cmp
inc
pusha
iret
mov
push
push
sbb
orb
add
inc
outsl
adc
inc
push
in
and
imul
add
rolb
inc
arpl
push
mov
popa
add
sbb
insl
and
pop
loop
test
outsb
inc
push
addr16
mov
push
int
mov
xchg
add
ljmpw
rcrb
inc
enter
push
push
les
loopne
add
sub
dec
gs
push
loopne
roll
or
sub
and
addb
push
mov
push
je
pop
jmp
adc
adc
inc
pushf
pop
sbb
push
and
mov
out
in
push
pusha
jne
pop
and
jecxz
pop
jo
mov
inc
pusha
and
mov
leave
or
inc
call
cmp
pop
ret
out
fldl
add
sub
movsl
xchg
call
cltd
scas
lods
jo
stos
adc
add
out
or
adc
jb
inc
dec
lock
insl
movsb
push
testb
popa
inc
add
pop
or
mov
call
add
and
inc
aas
adc
insl
add
dec
push
mov
mov
push
mov
add
mov
rcl
cli
mov
sub
mov
je
pushf
inc
mov
and
add
push
inc
mov
and
insl
or
dec
add
xorb
in
gs
sbb
adc
loope
ret
bound
mov
je
mov
stc
adc
xchg
push
push
mov
xor
and
cwtl
cli
in
sub
cmpsb
jo
add
aas
sub
cmovne
adc
and
mov
dec
mov
inc
into
in
in
in
fs
push
out
popf
pusha
arpl
xchg
inc
mov
pop
jmp
or
rolb
cwtl
fmulp
sbb
jne
mov
sbb
popa
shl
jae
cmp
pop
sub
cs
adc
add
cmovb
movsb
stc
ror
lcall
pop
xchg
sub
mov
movsb
icebp
fldt
rcll
and
and
mov
pop
inc
movsb
lahf
mov
add
mov
rorb
in
xchg
jno
pop
inc
movsb
mov
out
xor
cmpsl
and
xor
inc
stc
push
push
adcb
movsb
mov
xchg
xchg
pop
cli
rclb
pusha
pop
cltd
cmpsb
into
mov
and
pusha
and
and
mov
dec
push
adc
xchg
incb
mov
mov
mov
sbb
fldl
dec
pop
test
mov
dec
add
iret
arpl
jecxz
jb
sbbb
in
lea
dec
and
in
scas
sahf
out
mov
daa
adc
lods
icebp
in
jl
popl
mov
cmp
inc
in
loopne
jne
adc
or
push
mov
push
sarl
iret
sbb
out
addb
dec
add
fadds
adc
sub
push
shr
orl
push
jne
test
add
ds
add
in
adc
flds
inc
popf
mov
inc
add
cmp
fldcw
ret
sub
in
enter
js
mov
xor
xchg
jge
push
shll
pop
inc
fadd
jmp
sbb
adc
add
out
add
aaa
pop
fnstcw
cmp
adc
pop
inc
addr16
sti
scas
add
adc
mov
push
aam
and
push
fadds
adc
jne
ficoms
ss
jg
and
and
mov
adc
cwtl
add
inc
xor
mov
and
aam
les
into
rcl
fistl
loopne
mov
xchg
cmp
adc
inc
int3
add
adc
clc
mov
or
pop
lret
nop
push
lods
add
adc
xor
sbb
pop
dec
fs
outsb
fsubrp
push
add
sub
adc
andl
pushf
jbe
sbb
mov
xchg
mov
in
pusha
movsl
rorb
repnz
imul
test
cmpl
bound
sbb
cwtl
ja
dec
or
into
push
xchg
mov
andb
out
sbb
movl
cmp
mov
cwtl
jno
dec
and
push
add
shll
inc
ja
mov
add
cmp
insl
and
push
enter
fs
and
mov
clc
pop
pop
push
mov
mov
mov
sub
inc
ficoml
mov
xor
movsb
xchg
shrb
shl
pop
out
mov
sub
mov
adc
inc
pop
call
jl
sbb
jae
cmc
inc
mov
xchg
jno
jmp
jl
call
mov
dec
mov
test
dec
pop
adc
das
cmc
jno
add
jb
fucom
test
push
push
push
in
nop
mov
imul
or
popa
sbb
jno
psllq
sbb
xlat
dec
fwait
xor
int
push
or
adc
imulb
pushf
enter
sub
cmp
and
cwtl
xchg
nop
bound
xchg
inc
enter
mov
jmp
add
lea
add
xor
sti
mov
cmpsl
cmp
jge
ja
or
fwait
arpl
dec
sahf
add
test
bound
lahf
ds
and
push
inc
mov
push
jnp
out
add
pop
adc
xchg
jae
xchg
cmp
data16
sub
sbb
test
popf
cli
xchg
or
xor
or
iret
movsb
and
dec
mov
fwait
pop
stos
dec
inc
mov
sbb
rolb
pushf
subb
xor
je
fstps
push
and
cmp
leave
fcmovnbe
adc
test
test
cmp
aam
jo
push
mov
xchg
sarb
imul
inc
push
xor
sarb
adc
jae
mov
inc
es
push
jns
adc
jne
inc
aam
xor
imul
out
arpl
or
ret
xchg
sbb
adc
loopne
cmp
inc
fs
sbbl
sub
lea
ljmp
jnp
mov
hlt
mov
push
sub
clc
idivb
loope
xor
loopne
xchg
jae
xor
inc
adc
pop
pusha
cmp
xorl
fbld
rol
xor
aad
add
cwtl
outsl
jp
fisubrs
inc
inc
or
xchg
imul
movsb
or
add
push
jo
andl
mov
shr
int3
and
jnp
pop
pop
je
imul
incb
mov
sbb
imul
jecxz
sub
test
loope
pop
rcrb
jp
test
cwtl
call
mov
fmuls
add
icebp
and
xlat
dec
adc
xor
movb
std
aad
sub
movsb
add
jl
test
pop
add
adc
cmp
stos
pop
cmp
xlat
add
cli
and
dec
int3
xchg
add
mov
and
mov
inc
ja
sbb
adc
inc
fsin
xchg
pop
cmpb
xor
adcb
cwtl
jg
les
outsl
dec
into
cmp
jno
fstps
mov
jl
mov
faddl
imul
fisubrs
in
inc
aam
xchg
xchg
aas
push
jno
shrb
pop
mov
add
and
inc
fcomp
add
cmp
add
mov
jp
jno
addb
push
or
fisttpl
cli
dec
sbb
mov
outsl
add
pushf
dec
push
fnstenv
cmp
mov
sar
inc
rclb
stos
add
and
mov
add
int
xchg
xor
aam
mov
add
nop
decl
adc
test
adc
outsl
inc
or
les
movsl
dec
into
mov
inc
mov
enter
cmpsb
nop
aas
das
xor
and
lahf
push
dec
inc
aam
cli
add
mov
adcb
icebp
in
lds
call
xchg
sub
addr16
andb
mov
push
sbb
sub
add
icebp
fsts
rcrb
or
fistps
loopne
xchg
add
lods
push
ljmp
add
mov
xor
jo
dec
fsubrl
add
das
push
rorl
sbb
mov
pop
adc
aam
xchg
ret
jp
jne
add
fadd
cli
and
push
and
xchg
iret
dec
jo
subb
adc
pop
add
and
mov
xchg
js
std
cwtl
andb
pop
movl
add
iret
ret
lds
xor
das
data16
ret
pop
add
or
adc
add
loope
jae
call
aas
adc
add
mull
cli
sahf
jae
aam
adcl
cmp
or
inc
inc
mov
cmp
adc
aam
inc
cmc
push
popa
insb
adc
sub
in
or
ljmp
scas
repz
mov
push
push
out
hlt
mov
je
out
add
fsubrs
add
push
pop
test
nop
push
jne
push
add
cmpsb
xlat
das
add
fnstcw
dec
xchg
xor
xchg
and
and
xor
scas
push
jmp
add
xor
in
xor
insb
add
inc
xor
dec
xchg
popa
xchg
rcll
adc
xorb
pop
arpl
xor
adc
mov
sti
mov
xorb
xor
push
scas
shll
jno
push
add
lods
test
out
adc
pop
sub
xor
xor
and
popf
adc
sti
cmp
repz
mov
aam
mov
test
inc
xchg
inc
jo
inc
add
lahf
std
rcl
or
ds
orb
xor
xor
in
mov
loop
mov
andb
fadds
mov
dec
or
mov
popf
ds
mov
loope
repz
adc
cli
bound
push
insl
or
xlat
xor
pop
add
dec
cli
jecxz
test
out
add
ret
daa
xacquire
adc
add
fdiv
mov
cmc
aam
dec
or
fmull
or
adcb
cwtl
fs
add
xorb
in
hlt
jecxz
pop
outsb
xchg
in
mov
xor
add
shlb
clc
repz
daa
cmp
inc
std
sub
stos
xchg
add
adc
and
mov
flds
insb
das
adc
mov
aam
adc
push
cwtl
and
les
sbb
xchg
lods
cmpsl
sub
xchg
adc
cmc
test
into
push
xchg
fld
rcrb
mov
add
js
add
adc
sub
in
rolb
mov
inc
sbb
add
fwait
enter
and
imul
ja
shll
cmp
jb
sbb
inc
frstor
mov
dec
push
or
jp
arpl
clc
daa
pop
adc
cmp
push
or
pop
hlt
add
cld
loope
stos
adc
inc
push
dec
sub
add
ret
imull
mov
push
in
and
cmp
sbb
jae
mov
fbld
add
loopne
cmp
pop
adc
pusha
rclb
and
add
sbb
sub
mov
add
cmp
xchg
pop
sbb
insl
adc
mov
xor
dec
add
inc
enter
ret
push
aas
test
idivb
shl
mov
push
add
or
xchg
add
pop
inc
jp
sbb
jg
sbb
nop
addr16
cmp
iret
int3
pushf
roll
cmp
xor
fistpll
scas
cmpb
and
push
or
inc
je
test
and
cmpsb
add
pop
adcb
js
pop
adc
adc
adc
addb
mov
sbb
out
add
arpl
subl
xor
push
mov
ja
sti
add
ss
xchg
add
iret
sub
cld
movsb
jae
xor
pop
out
and
add
pop
mov
jns
jge
add
in
loope
loopne
inc
mov
insb
add
hlt
adc
dec
in
mov
bound
loopne
xor
je
push
pop
out
int
pusha
or
cmp
and
roll
sbb
push
add
jl
shrb
and
inc
scas
loopne
xchg
push
adc
sarb
rdmsr
pop
test
sub
push
sub
inc
test
out
adc
ret
enter
xchg
fwait
adc
mov
sbb
dec
popa
imul
das
cmp
test
add
push
cltd
add
sbb
js
fidivrl
inc
add
xchg
stos
lea
add
insl
mov
js
pop
add
and
add
push
cmpsl
mov
add
das
mov
or
or
mov
inc
jo
pop
mov
jno
add
into
pop
push
mov
dec
cmp
sbb
loopne
cmp
in
out
fs
add
mov
sub
test
lea
sti
mov
pushf
ja
lcall
pusha
fbld
cmp
es
push
or
xchg
jmp
jecxz
lret
jl
push
or
jge
gs
add
jecxz
push
add
mov
pop
addl
and
lods
scas
dec
jne
xor
ss
add
aas
pop
jne
mov
push
shrb
lods
call
push
add
adc
imul
test
cli
movsl
cltd
call
shlb
pop
cmpsl
stos
call
mov
add
add
cmpsb
dec
adc
sbb
mov
add
sahf
lods
mov
mov
js
jecxz
int3
jle
jbe
jno
mov
add
sub
add
mov
cmp
inc
mov
test
lret
in
stc
xchg
mov
push
fldt
mov
cwtl
mov
inc
xchg
sbb
repnz
lcall
add
and
setbe
in
push
movsl
jp
cmp
mov
jae
xor
xchg
enter
sbb
mov
into
and
shlb
mov
into
sbb
and
jle
inc
movsl
or
inc
sub
sbb
push
inc
rcrb
loop
sub
call
or
push
sub
and
or
shrb
and
mov
mov
and
sub
js
mov
inc
daa
add
push
scas
inc
push
mov
pop
mov
sbb
les
adc
inc
addr16
ss
int3
fisttpl
mov
add
sbb
pusha
ret
jp
add
je
in
mov
test
shrb
fwait
pop
push
ror
xor
mov
nop
incb
inc
lods
dec
loope
push
mov
add
jb
xchg
mov
lea
xchg
mov
sub
push
add
cmpsb
pcmpgtw
scas
divl
push
and
aad
cwtl
xor
rorl
push
ret
mov
add
dec
into
xor
dec
in
add
cmp
mov
inc
sub
jb
dec
addr16
lea
rcll
xchg
cwtl
mov
or
cmpsb
pop
mov
add
add
lods
pop
adc
xor
and
add
and
adc
dec
mov
xorb
add
cmpsb
pop
inc
data16
jg
loop
add
jb
xor
shl
into
jg
inc
test
push
add
or
lcall
ja
test
mov
push
stos
arpl
cmp
xchg
push
ret
and
test
or
xchg
pop
add
fisubs
pusha
lods
inc
inc
mov
imul
test
pop
icebp
cmp
dec
and
add
cld
nop
js
mov
inc
rcrb
xchg
mov
popa
add
scas
shll
xor
lcall
push
adc
int3
xchg
setg
pop
imull
es
arpl
enter
fwait
inc
psubsw
aad
sbb
jp
mov
adc
add
mul
hlt
add
jb
mov
add
loop
aaa
int3
cli
fcom
push
imulb
xchg
sub
sbb
pusha
mov
cmp
lods
add
es
mov
cs
inc
pop
cmpsb
nop
jbe
fwait
dec
add
push
sbbb
mov
sub
jnp
push
add
dec
das
pop
movsl
xor
filds
and
push
sar
mov
pop
in
pop
sub
jmp
and
add
fwait
ds
js
cwtl
sahf
add
jmp
inc
add
jbe
cwtl
scas
adc
sti
add
jp
stc
push
in
add
xor
movsb
sub
jmp
cmp
ljmp
sbb
xorb
rol
or
push
scas
and
cmp
jno
jo
xchg
adc
aaa
mov
mov
in
cmp
add
cmp
add
addb
and
inc
mov
in
pop
dec
inc
push
xchg
or
sbb
addr16
adc
fs
add
push
addb
sahf
sbb
mov
in
push
add
add
pop
lret
bound
out
das
mov
sub
adc
adc
and
jle
test
jg
add
add
nop
cmp
dec
pusha
adc
or
inc
imul
testb
jno
lret
mov
mov
add
lahf
xlat
cmp
add
repz
add
aad
xchg
add
xor
bound
push
jl
negb
push
inc
fildl
xchg
sarb
add
pop
outsl
mov
mov
repz
push
xchg
push
add
lret
mov
int3
ret
into
jo
dec
sti
sbb
jg
xchg
sub
aas
ja
mov
je
adc
call
pop
add
inc
outsb
repnz
bound
mov
jecxz
daa
subb
add
in
adc
mov
add
stc
push
jno
add
pop
add
insl
test
call
mov
pop
lret
dec
and
test
lahf
hlt
ret
xor
out
xor
hlt
xor
in
jae
jns
or
or
loope
and
adc
popl
imul
cmp
lods
addb
push
sub
loop
inc
jbe
sti
lahf
sbb
sub
ret
mov
fs
lods
sbb
ljmp
lea
negb
fwait
and
test
pop
adc
sub
dec
imul
push
fsubl
lods
icebp
rolb
and
in
int
movsb
and
fwait
jno
pop
cmp
xor
ret
xchg
inc
cmpsl
subb
hlt
push
jecxz
and
push
mov
lods
add
or
dec
cltd
cmpsb
jne
add
jb
sbb
repnz
cmpsl
dec
jp
in
lds
push
adc
inc
and
rcll
inc
xor
or
pop
or
adc
add
or
lret
jl
xchg
mov
xchg
sbb
test
mov
add
sbb
mov
hlt
cmp
les
sub
add
mov
push
pop
xchg
xchg
cmp
push
mov
or
sti
fisttpl
addr16
mov
push
xchg
lock
cwtl
dec
add
mov
cmp
mov
xchg
xchg
iret
jmp
jl
push
icebp
stc
xchg
mov
dec
cmp
rolb
mov
xor
jg
popf
mov
fcomps
pusha
pusha
xchg
repnz
pop
adc
fstpl
adc
inc
dec
movsb
add
xchg
add
pop
shlb
pop
jp
nop
clc
or
jmp
jno
outsl
and
and
pusha
inc
sbb
ss
fwait
aam
pushf
fdivs
or
cmp
arpl
pop
mov
mov
call
push
mov
inc
jecxz
mov
adc
lock
inc
sub
gs
stc
mov
add
jp
jne
jns
add
and
add
add
lahf
stos
fbstp
popa
push
push
add
adc
testl
cltd
mov
push
pop
add
std
sti
aas
push
add
out
or
xor
jnp
add
mov
and
add
mov
xchg
aas
xlat
incl
cmpsl
ds
mov
popw
lods
in
xor
xor
addb
pop
cmp
rolb
jne
add
int3
test
add
or
lahf
mov
les
inc
fsts
inc
scas
fneni(8087
add
xchg
sbb
test
jo
das
lock
mov
jno
sarb
cld
sub
test
pop
lret
adc
pop
loopne
xchg
pop
les
fildll
in
pop
add
sbb
aaa
xchg
push
xor
mov
add
rcr
fdivs
xchg
push
pop
push
dec
add
cltd
adc
adc
addr16
mov
jge
sbb
je
xor
fidivrs
dec
push
jecxz
ss
mov
dec
pop
out
cmp
in
movsl
mov
jp
test
xlat
or
iret
sub
lock
movl
inc
sbbl
loopne
and
rolb
sub
jne
adc
mov
es
jo
rolb
xor
xchg
dec
inc
inc
add
sbb
mov
add
and
lods
add
and
mov
aam
mov
test
or
adc
repz
fwait
nop
pop
jns
dec
addr16
loope
test
sar
sub
dec
aad
pop
iret
sbb
push
test
into
ficomps
push
pop
data16
or
in
add
xchg
jo
repnz
or
mov
push
in
inc
daa
add
shll
lret
sbb
mov
mov
jmp
hlt
ret
cli
and
sbb
or
adc
dec
ss
test
popf
jae
sbb
es
repnz
jl
add
mov
pushf
adc
sbb
cmpsb
stos
sub
add
cmp
add
outsl
in
or
add
aaa
stos
orb
rorl
mov
add
les
and
cmpl
stos
cs
lea
das
lahf
push
add
lds
in
push
add
push
and
roll
jnp
aad
sbb
outsb
pop
cmp
movb
sub
xor
add
or
dec
lret
sbb
or
sub
clc
sbb
in
ret
xor
in
cmp
sarl
outsl
cmp
das
shl
fldl
inc
dec
add
pop
cs
xor
xchg
mov
inc
lea
rolb
xlat
hlt
pop
das
and
dec
les
cmc
std
outsl
sbb
or
push
add
sti
and
mov
pop
mov
in
into
mov
je
stc
call
push
dec
out
rolb
sub
push
dec
sbb
mov
pop
stc
fildl
loopne
repnz
fldl
jns
add
xor
sbb
jg
mov
lods
add
or
gs
adc
je
and
fwait
mov
sbb
add
inc
or
sub
add
cmpsb
insl
xchg
loope
js
fcompl
adc
fs
sub
push
sub
add
rcrl
push
xchg
addl
inc
jne
pop
popa
add
dec
add
xor
xor
inc
add
in
dec
dec
insb
xchg
pop
subb
cmp
push
sbb
adc
adc
xor
pusha
in
xchg
xor
xor
inc
popa
pop
clc
mov
adc
aam
cmp
cmp
test
aaa
jo
mov
add
xor
pop
ljmp
aam
add
stc
enter
adc
data16
les
scas
and
sti
inc
jge
add
push
mov
sahf
mov
loop
jle
arpl
adc
pop
rcrl
pop
xor
add
jo
push
jg
adc
add
xor
pusha
lret
jle
hlt
add
push
aam
ret
sarb
leave
push
jo
sti
shrl
ja
add
and
faddl
pop
ret
xchg
push
repz
outsl
and
or
xor
insb
mov
cmp
out
sub
dec
cwtl
mov
les
cmp
or
inc
jmp
or
jg
enter
mov
jns
pop
daa
les
dec
mov
adc
std
adc
jecxz
mov
insb
jbe
pop
and
xchg
inc
xor
nop
or
jno
aas
pop
sub
add
subb
xor
adc
add
xchg
sub
inc
icebp
adc
dec
mov
in
push
addl
adc
aas
jmp
cmp
inc
add
rorl
jne
inc
mov
je
pusha
jns
adc
cmc
mov
clc
out
jne
loop
jmp
add
outsb
les
sbb
push
sti
sub
push
add
push
testl
cmp
movb
repnz
dec
jno
adc
xor
add
test
hlt
fildl
nop
fimuls
mov
inc
adc
loopne
cmp
test
jbe
loopne
sbb
sub
outsb
mov
push
sarl
add
push
mov
ret
mov
cwtl
and
outsb
shrb
dec
hlt
inc
add
out
cmp
test
sbb
inc
sub
add
ffreep
les
jecxz
adc
sbb
push
xchg
inc
fdivrs
jae
pop
dec
cmp
add
dec
data16
or
sbbl
test
fimull
xor
loop
xlat
dec
jnp
pop
jb
add
in
add
or
out
clc
arpl
mov
popl
shr
push
loope
inc
inc
int3
adc
aam
std
in
cmp
jae
push
jmp
mov
xchg
dec
xor
cmpsb
in
sbb
xor
bound
xchg
sbb
cmp
movb
jg
stc
xor
dec
aaa
or
jae
lret
fs
movl
jns
nop
add
and
add
aas
jle
and
popf
rcrb
data16
and
add
mov
inc
push
mov
add
and
stc
jb
test
testb
xchg
lods
in
push
aas
cmp
add
inc
push
fsts
pop
rcl
pusha
adc
addb
arpl
push
pop
or
add
and
pusha
fwait
push
lea
sbb
mov
cmpb
std
pop
adc
pop
sbb
sti
adc
lahf
add
imul
and
inc
and
rolb
scas
mov
add
lods
cmp
xchg
into
pop
push
dec
add
xor
insl
push
xchg
xor
sbb
test
lock
add
push
or
push
add
jg
or
add
nop
fdivs
sub
rclb
mov
hlt
jge
dec
or
incl
inc
in
push
inc
inc
clc
daa
jle
add
std
jge
hlt
mov
xorl
jnp
xchg
or
xor
inc
adc
jp
xor
xchg
jne
pop
mov
push
and
bound
mov
pop
mov
add
loopne
xor
push
cli
inc
shlb
aad
jnp
stos
dec
inc
cmp
rorl
cmp
push
mov
ds
add
sbb
idivl
add
pop
add
add
pop
mov
hlt
sbb
mov
pushf
mov
add
test
dec
shlb
add
pop
cvttps2pi
mov
add
inc
movsl
aam
adc
dec
fiadds
push
pop
out
scas
push
mov
addr16
push
adc
call
push
adc
push
jle
adc
adc
test
std
pop
inc
scas
jo
mov
add
rcl
and
mov
inc
add
dec
subps
mov
inc
imul
fwait
mov
pop
push
js
je
add
xor
aad
and
ljmp
cmp
stos
xchg
negl
popf
add
leave
pop
pop
icebp
pop
orb
sbb
fcomps
jno
clc
iret
add
and
xchg
add
les
mov
test
pop
inc
push
fwait
jg
pusha
adc
jbe
and
adc
adc
in
jmp
sbb
pop
or
out
add
sub
inc
xchg
icebp
add
das
repnz
test
mov
fadds
pop
mov
rclb
lret
flds
adc
movsl
or
call
and
pop
add
jae
sahf
jecxz
jnp
sar
test
push
jg
psubsw
das
cmp
test
leave
icebp
ljmp
mov
cmpsl
add
jmp
leave
cwtl
aas
add
sahf
and
or
sti
test
faddp
dec
popf
je
add
adc
aas
gs
adc
repnz
rorb
jge,pn
add
mov
lds
insb
xlat
xor
mov
pushf
in
sbb
lds
outsl
dec
dec
mov
or
xchg
stos
sbbb
mov
aaa
jecxz
and
notl
add
push
cmp
add
xor
rolb
ja
cmpsb
pop
add
xor
fwait
aad
js
sbb
fstpl
pop
inc
insl
fcmovb
add
fisubrs
sahf
pop
sarb
inc
adc
jg
xchg
fcomps
icebp
mov
fmull
inc
pop
imul
push
int3
into
xlat
pop
test
loope
stc
aas
std
roll
pusha
add
jb
pavgw
movsb
mov
push
xchg
push
aam
repnz
dec
cmp
add
inc
jmp
insb
data16
jo
and
inc
or
insl
in
mov
add
dec
adc
push
cmpsl
stc
ja
cli
stos
dec
dec
add
in
xor
in
add
push
add
mov
nop
sbb
cmp
inc
icebp
call
sbb
and
enter
loope
scas
arpl
fwait
add
mov
test
clc
das
push
mov
ja
xchg
in
dec
push
mov
mov
cmp
fadd
pushf
sbb
push
fwait
and
xchg
sbb
add
icebp
rclb
add
cs
xchg
mov
in
inc
fadds
cmpsl
sbbb
mov
subb
dec
cld
clc
hlt
inc
add
loop
ja
cltd
xor
sbb
sbb
fadds
daa
adc
and
dec
nop
aas
push
loop,pt
add
and
jbe
xchg
rcrb
nop
pop
or
inc
inc
ds
jp
scas
pusha
insb
mov
jb
add
pop
mov
add
pusha
xchg
dec
add
xchg
pop
sub
mov
mov
jge
jmp
dec
push
and
ss
or
adc
mov
add
mov
cld
lock
cwtl
push
add
aas
shlb
shll
lea
cs
shlb
jb
xor
push
sub
ss
shrb
sbb
push
mov
test
popa
sub
add
cmc
ficomps
adc
inc
and
dec
mov
sbb
sub
stc
xchg
lock
jge
sbb
pop
pushf
xor
add
mov
xchg
loopne
add
add
xchg
sarl
nop
mov
lock
aad
xor
das
add
les
inc
lret
jns
push
inc
jo,pt
sbb
lahf
sbb
rol
dec
cwtl
aaa
popf
shrl
mov
js
out
fisubrs
adc
or
fadd
xchg
std
and
adc
fistpll
mov
add
sbb
jl
cmpsb
das
mov
add
call
fcom
sbb
ss
fists
add
cwtl
push
mov
mov
jp
push
sbbb
jl
popf
nop
call
cmpl
movl
jnp
ss
inc
push
add
outsl
xchg
or
or
jmp
add
mov
std
jmp
adc
fstpl
mov
pushf
pop
jp
xor
mov
pop
adc
cli
lret
pop
adc
call
ss
mov
shl
xlat
xor
push
push
fwait
xor
xchg
pop
sub
test
das
ret
add
add
inc
imul
in
std
push
xor
adcb
cwtl
sbb
inc
add
les
mov
rorl
ljmp
xchg
mov
fisubs
subb
mov
data16
adc
sar
push
pop
push
shrl
cmpsb
aas
add
das
mov
mov
push
and
xor
add
pop
sub
inc
ljmp
cli
add
mov
ds
mov
xor
adc
add
and
or
sbb
fildl
mov
fiadds
test
add
ja
sbb
in
shll
add
dec
test
push
add
mov
adc
sbb
add
inc
add
imul
adc
loop
cmp
add
mov
testl
add
cs
jecxz
push
ds
sbbl
orb
call
iret
scas
test
and
mov
add
popf
fdivs
scas
cmc
stos
out
stc
sbb
push
xor
rcrb
xor
sub
dec
add
and
pop
hlt
scas
jecxz
fimull
xchg
sbb
mov
jbe
add
outsl
sub
mov
push
clc
faddl
add
push
pushf
out
mov
push
xchg
fbstp
rcl
sub
push
aas
adc
mov
dec
roll
sbb
xchg
shl
add
pop
mov
dec
repz
sub
sub
jmp
jno
sbb
xchg
clc
inc
ret
rclb
xchg
jl
sub
outsl
cmp
mov
iret
push
xchg
pop
adc
pop
mov
mov
push
inc
lds
mov
or
xchg
mov
inc
cmp
popl
xor
in
stos
add
mov
adc
mov
pushf
add
int
rcll
cltd
in
mov
lea
add
cmp
pop
add
push
loop
pusha
inc
add
bound
cmp
aam
mov
dec
push
dec
cmpsb
testl
jo
push
inc
pop
stos
add
push
add
sub
loopne
add
hlt
in
scas
mov
xor
sbb
pop
jnp
psrlw
sti
testb
mov
push
mov
mov
add
leave
outsl
jns
enter
or
push
sbb
enter
add
inc
roll
and
adc
test
sar
testl
lods
shl
adc
pop
stos
push
mov
inc
scas
cld
call
repz
data16
inc
mov
incl
shll
push
add
sbb
add
cld
and
add
mov
dec
or
roll
pusha
pop
out
jle
jo
and
ss
in
adc
push
jmp
add
movsl
mov
pmuludq
add
pop
popf
xchg
push
and
add
lea
sbb
dec
subb
mov
hlt
sti
jns
loopne
sbbb
pusha
imul
cmp
aad
jae
inc
int3
jns
pop
jb
out
add
dec
dec
pop
push
ret
dec
or
fsubr
cmp
xor
sbb
rcl
and
add
push
sarb
testb
push
adc
enter
sbbb
je
pop
dec
jno
dec
mov
xchg
fimull
add
mov
pop
pop
add
cmp
jp
push
cmp
insl
add
sbb
cmp
in
cmp
jmp
mov
add
dec
sarb
cmp
xchg
xlat
int3
mov
clc
jp
lock
inc
test
std
dec
add
add
mov
pop
aaa
add
cmp
xor
pop
sub
inc
add
test
ret
add
and
sbb
inc
or
ja
jle
mov
incl
insl
out
add
test
cmpsb
jle
dec
outsb
jge
cltd
add
or
in
xor
xchg
mov
adcl
andb
jle
stos
pusha
inc
out
unpckhps
and
pop
inc
add
adc
loope
sbb
push
shrb
push
dec
inc
jecxz
add
das
adc
ss
add
jb
inc
push
jae
addb
push
ror
mov
out
add
xor
sbb
insb
loope
cmp
jecxz
xchg
pop
mov
int3
mov
pop
add
arpl
cs
fistpll
pop
cltd
add
cmpl
push
cmp
cmp
ja
aad
sub
repz
sbb
mov
add
testb
adc
xchg
and
cli
inc
bound
in
add
es
cmp
add
mov
inc
ret
add
lret
iret
jns
ret
mov
mov
jo
addb
mov
bound
test
dec
push
lock
mov
loopne
loope
sarb
add
movsb
int
enter
add
sbb
sub
mov
pusha
mov
andl
mov
lea
movsb
add
hlt
fnstcw
dec
pop
inc
xor
cmp
data16
ja
les
in
mov
add
es
rorb
je
orb
add
and
or
mov
xcrypt-ofb
cmpsl
das
sub
pushf
push
mov
adc
rcr
mov
shrb
shr
ja
mov
and
pop
nop
add
ret
mov
or
adc
pop
add
loope
cmp
mov
add
test
dec
loopne
daa
inc
jp
pop
xchg
fmul
cwtl
mov
aas
sahf
ret
mov
add
pop
inc
pop
daa
negb
cmp
sbb
or
lret
jp
sbb
mov
lcall
mov
xor
pop
xor
out
add
push
push
add
test
sbb
movsl
pop
add
xchg
enter
insl
add
stos
cwtl
jo
mov
inc
fnstenv
mov
pop
jbe
mov
es
sti
xchg
adcb
cmp
pop
iret
out
inc
and
push
xor
in
lea
js
add
and
mov
mov
add
andb
rcl
add
mov
pop
add
into
add
scas
dec
movsb
mov
std
and
insb
inc
hlt
shlb
add
jbe
out
pop
jne
jp
add
movsl
add
fcoms
test
aas
push
jle
popa
pop
dec
hlt
xlat
adc
jo
sti
loope
add
cmpsl
add
test
pop
repnz
mov
xchg
add
jecxz
movsl
add
outsl
fs
sub
pushf
xchg
repz
jb
out
dec
jns
fwait
insb
xor
inc
xor
bound
rcrb
jg
add
arpl
aam
mov
pop
aam
pop
mov
jecxz
mov
add
mov
stos
add
js
push
add
xor
lret
lods
sahf
int3
clc
or
loopne
rcrb
jp
or
addr16
dec
icebp
mov
mov
faddl
sub
dec
in
cmpsl
and
adc
mov
cmp
pop
push
adc
iret
inc
mov
out
add
pushf
inc
sub
stos
xchg
sarb
subb
js
scas
mov
paddq
arpl
mov
push
sbb
xchg
inc
into
sti
cmp
xor
insl
or
testl
xchg
sbb
ret
rcl
sbb
mov
pop
sbb
fadds
dec
or
inc
test
stos
xor
push
cmp
sub
les
bts
repnz
rsqrtps
jne
dec
jo
xchg
mul
movsb
mov
test
mov
mov
add
repnz
popa
add
movsl
inc
mov
insl
pusha
or
out
mov
inc
sbb
dec
add
jnp
inc
lret
add
fnstcw
lods
loope
adc
jg
int
mov
outsl
stos
mov
out
add
xchg
lcall
shlb
loop
sbb
stos
xor
les
sub
xchg
cmp
jle
fistpll
add
cltd
pushf
push
cmp
xor
cwtl
sbb
mov
add
jmp
mov
mov
sub
add
stc
and
sbb
xchg
mov
add
lds
sbb
add
fwait
bound
dec
test
les
push
sbbl
pop
pusha
mov
xlat
pusha
mov
push
bound
aas
or
lods
push
adc
mov
in
xchg
fnsave
mov
push
dec
cwtl
test
inc
out
adc
xlat
add
inc
pop
push
icebp
nop
aas
push
and
mov
xchg
add
jl
mov
loopne
and
add
lods
stos
jmp
out
dec
or
and
jl
mov
jg
mov
imul
push
cmp
add
mov
xor
add
shll
push
mov
mov
ret
xor
or
enter
dec
pop
jno
insl
push
jne
add
lock
or
mov
insl
loope
or
adc
das
pop
push
cmp
lds
mov
bound
sbb
add
sbb
lret
cwtl
int
jns
jg
pop
pusha
repnz
mov
sar
adc
cmp
and
adc
cwtl
sahf
xchg
aas
add
xchg
insb
inc
mov
stos
adc
loop
jns
adc
xlat
add
push
sub
or
pop
ljmp
imul
push
dec
icebp
jo
dec
clc
add
sbb
xchg
cmpb
nop
mov
js
cwtl
cmpb
mov
in
arpl
int3
add
add
add
mov
aam
sbb
or
dec
mov
mov
push
push
lods
inc
test
cmp
test
adc
inc
jl,pn
and
jp
xor
add
pop
jae
mov
mov
xor
sub
mov
xor
data16
out
xlat
je
stos
push
cld
adc
pop
xchg
mov
aam
sarl
call
and
xor
mov
sbb
jp
xchg
mov
sub
imul
xchg
push
jo
jg
pop
add
cmp
ja
mov
xlat
popa
inc
jp
sub
int
mov
dec
aad
cwtl
iret
adc
sbb
and
sahf
mov
pmulhw
movsl
in
add
insb
push
jl
xor
cmp
push
inc
fsubr
andb
ss
stc
je
test
imull
sub
mov
and
push
and
das
add
mov
in
icebp
shlb
js
imul
out
add
mov
sbb
dec
int
inc
ljmp
inc
clc
cs
inc
jmp
pop
in
sbb
fistl
xchg
cmc
pop
ljmp
test
sbb
inc
or
sub
push
pop
rorl
es
or
pop
lds
add
sti
aas
jge
add
sub
imul
sub
sti
enter
shlb
xor
pop
ret
sbb
add
dec
in
cmp
xor
shll
mov
adc
and
dec
adc
xor
or
aam
addb
in
jle
mov
stc
jae
mov
cmp
fisttps
adc
sbbl
adcb
sbb
cmp
adcl
orb
leave
add
outsb
xchg
mov
push
add
jle
das
scas
lret
mov
scas
js
popa
outsb
xchg
push
mov
inc
sarb
jmp
or
mov
dec
cli
dec
and
xor
or
cmp
sub
test
insl
fildll
scas
in
mov
inc
ret
rolb
mov
cmp
lock
cmp
adc
push
add
cmpb
xor
je
nop
imul
add
loope
aaa
call
push
sub
hlt
roll
leave
sbb
sbb
sub
rcrb
out
add
dec
add
stc
insb
insl
cmpsl
inc
enter
cld
leave
pop
movsl
add
pop
gs
in
xor
adc
jne
pop
lock
loop
sbb
sbb
icebp
je
sub
stos
lret
xchg
cmpsl
inc
sahf
pop
xor
add
cltd
dec
jl
enter
insl
add
pusha
aaa
nop
jno
jle
andb
xor
sbbb
inc
jbe
adc
cmpsl
cmp
push
aaa
mov
sbb
add
jge
ss
stc
push
dec
out
add
mov
push
scas
into
jmp
push
leave
add
ret
int
addr16
sub
scas
mov
out
cwtl
jmp
jb
push
xchg
cmp
aas
jge
xchg
and
add
dec
inc
in
pop
in
adc
mov
ffreep
add
test
xor
insl
fs
sahf
addr16
add
push
add
mov
jge
add
insl
ja
pop
push
jnp
push
xchg
outsl
jns
cmpl
cld
add
add
and
sub
pop
lods
cwtl
push
into
subl
add
mov
repnz
sahf
cld
sub
ror
ret
aas
mov
repz
adc
faddl
add
cmp
push
in
les
ds
mov
gs
cli
xor
xlat
sarb
inc
jl
pop
stos
dec
pusha
lds
bound
test
enter
insl
sub
push
int3
testl
hlt
mov
icebp
add
mov
jo
xlat
jno
add
sub
cmp
insl
or
add
xchg
sbb
add
pop
jb
or
out
ror
xchg
mov
cmp
xlat
stos
mov
add
popf
in
and
add
sbb
add
pop
das
dec
add
cwtl
add
fiaddl
jmp
xor
mov
mov
or
push
popa
jmp
test
dec
jns
xchg
test
push
add
mov
jmp
sbbl
mov
xchg
push
mov
mov
jecxz
add
sub
xchg
decb
xchg
ljmp
int3
sbb
xchg
mov
jmp
jbe
dec
xor
add
and
in
adc
jg
std
fists
lods
and
push
xor
adc
loope
imul
aas
push
icebp
adc
int
or
push
jnp
push
fisubl
mov
enter
sub
mov
push
out
adc
popf
lea
dec
ljmp
aad
shrb
sub
cmc
mov
loop
cmp
loope
shr
add
les
pusha
lock
push
in
add
mull
inc
pop
shlb
add
inc
ret
inc
adc
call
decb
dec
clc
lcall
inc
cmc
pop
adc
sub
imul
push
imul
addb
and
mov
es
push
mov
adc
lds
add
repz
mov
dec
add
pop
mov
xchg
and
jae
mov
dec
add
or
sbb
lcall
jae
cmp
jno
iret
xchg
xchg
sbb
jecxz
int3
dec
sbb
je
push
add
jno
add
test
push
xchg
or
mov
jbe
add
pusha
pop
fsub
movsb
call
mov
sbb
outsb
sbb
adc
mov
add
adc
mov
mov
arpl
fs
adc
mov
push
add
add
cltd
in
popl
dec
loop
mov
add
imul
repnz
push
arpl
fldl
fsubl
pop
lret
out
in
scas
in
fwait
lcall
xchg
aaa
xor
push
push
enter
cmp
shrb
int3
add
aam
fiaddl
lret
pop
sub
push
cwtl
sbb
in
enter
pop
pop
popa
subb
adc
cmp
enter
mov
dec
lret
dec
xor
xchg
arpl
add
push
dec
fwait
int
imul
add
mov
out
ret
mov
sbb
dec
js
or
lock
add
jns
out
jmp
and
dec
mov
repz
aad
adc
sahf
mov
jecxz
popf
das
mov
leave
in
jecxz
sbb
jns
xor
xchg
fwait
iret
push
inc
outsl
les
add
pop
or
push
adc
out
adc
das
mov
xadd
lds
mov
add
int3
pop
aas
dec
in
rolb
pop
add
adc
lock
add
dec
mov
xchg
or
in
out
add
les
fbld
adc
inc
mov
aam
out
movsb
in
and
rcr
clc
negb
ds
enter
pusha
call
adc
cli
pop
xchg
and
jp
lcallw
push
cmp
cmpb
mov
mov
nop
mov
add
aam
add
jmp
add
pop
out
sbb
jle
and
sbb
out
ljmp
ret
push
test
add
adc
push
xor
pop
je
xor
xor
out
add
push
inc
imul
jns
xor
sbb
fidivrs
cld
or
and
iret
sbb
adc
hlt
sub
mov
pushl
xorb
ret
push
push
ljmp
icebp
cmp
mov
lahf
nopl
ljmp
out
movsb
jl
adc
add
idiv
and
adc
or
ds
add
push
push
adc
push
sarl
xor
ds
nop
popa
xchg
sar
jae
xchg
mov
sbb
repz
mov
mov
or
in
sarb
outsl
loop
loope
data16
add
scas
test
adc
pop
movsb
bndldx
jne
repnz
xor
jp
cmc
jmp
mov
aad
pop
dec
rolb
push
ja
and
add
xor
inc
movl
mov
dec
jno
add
jo
xor
repnz
xorb
pop
or
push
aad
push
les
xor
cmp
push
ja
xorl
and
push
lcall
lods
add
add
xlat
mov
sub
cmp
cmp
push
pop
pop
sub
addl
testb
or
fdivl
sarb
adc
popa
xor
add
add
or
dec
xor
mov
mov
adc
mov
loope
xchg
test
pop
add
xchg
xchg
sbb
adcb
imul
add
push
pop
int3
mov
mov
sahf
push
mov
push
scas
add
rorb
lret
or
push
cld
mov
adc
add
sbb
push
jae
add
inc
stc
lds
es
mov
pop
gs
insl
mov
and
pop
pop
cmp
repnz
int
jl
sbb
dec
sbb
add
xlat
cmp
daa
call
pop
and
xchg
adcl
push
mov
cmpsl
push
and
shll
subb
push
jb
jo
pop
sbb
xor
pop
mov
sbb
std
rolb
pop
arpl
or
xor
add
pop
pop
rol
adc
lcall
xchg
dec
fisubs
cmp
mov
jo
mov
aas
aas
das
je
lret
xchg
sti
cmp
mov
mov
scas
jnp
jae
add
nop
mov
sti
sub
add
int3
pop
adc
fsubp
adcl
push
repz
fdivl
loopne
inc
popa
mov
xor
andb
pop
shrb
add
adc
dec
add
and
test
mov
cli
mov
shl
jg
sahf
scas
pop
pop
or
mov
int3
or
and
lods
je
scas
and
pusha
jl
or
inc
test
jnp
inc
push
adc
push
cmp
fisttps
push
jnp
cmp
clc
add
push
fcoml
mov
les
ja
pusha
sbb
iret
insl
faddp
mov
dec
push
add
push
xchg
jle
movsl
in
add
cmp
sbb
add
jmp
lcall
add
xor
push
sbb
or
adc
jnp
sbb
cmc
jge
add
fdivl
mulb
and
das
hlt
add
dec
into
call
mov
wrmsr
les
sbb
test
xchg
rorl
sbb
cmp
in
cmp
add
daa
out
xchg
ret
test
add
jl
int3
inc
pusha
ret
add
pcmpgtd
push
add
jne
in
ret
pop
lds
mov
xchg
and
and
in
or
push
in
or
sub
pop
xchg
cmp
ficoml
push
out
cmp
add
rolb
filds
mov
lahf
inc
adc
or
pop
xor
das
jecxz
sarb
loopne
add
mov
push
add
mov
pop
aas
fisttps
sub
pop
add
pop
add
mov
mov
mov
out
mov
loopne
push
les
rolb
cs
nop
add
mov
cmp
outsb
add
je
iret
mov
repz
jle
xor
dec
cmp
xchg
mov
jp
xchg
xchg
test
add
fs
xchg
cld
loop
add
add
cmp
fwait
jne
in
mov
add
xor
cltd
or
and
and
sbb
dec
sbb
jmp
clc
pop
pusha
jl
jo
lods
outsl
dec
into
cwtl
enter
xchg
add
test
pop
push
int
pop
rorl
and
jp
add
sub
adc
push
lret
add
cmc
mov
movsb
jne
add
mov
repnz
or
cs
outsl
mov
iret
jmp
add
sbb
rolb
pop
and
cmp
aas
mov
add
subl
add
orb
sbb
inc
inc
out
movsl
mov
push
jl
test
lods
mov
jno
and
add
adc
test
bound
add
cltd
shlb
jmp
dec
mov
add
or
push
psubusw
int3
outsl
mov
cmp
mov
out
xchg
sbb
inc
mov
insl
or
and
movsb
sbb
add
out
mov
scas
hlt
clc
shlb
fldenv
pop
iret
mov
bnd
mov
dec
adc
adc
jbe
add
push
dec
movsl
add
je
mov
out
shl
or
push
rorb
fdiv
mov
mov
shl
xchg
fistpll
sahf
xchg
gs
adc
jae
add
xchg
pop
xorb
test
push
outsl
sarl
pop
adc
addr16
cmpsb
cmp
pop
jns
aad
sub
sbb
jmp
pop
push
fs
sti
lock
test
add
pusha
imul
sbb
xlat
ds
ret
imul
add
popf
fidivs
mul
xor
jno
imul
pop
outsb
adc
add
loope
jp
and
loop
push
xor
and
insb
ret
mov
std
mov
loope
jnp
stos
cmp
sahf
mov
inc
xchg
ret
frstor
add
lods
jl
inc
ret
loopne
sbb
sbb
repnz
fs
xchg
imull
add
push
jbe
xor
movsl
popa
mov
jmp
add
cmp
mov
test
xor
add
ljmp
filds
and
inc
mov
mov
rclb
push
push
sbb
iret
ret
iret
mov
gs
sti
test
xchg
inc
mov
xor
push
add
push
inc
xchg
sub
adc
pop
bound
test
enter
xor
push
fisttpl
push
and
xchg
aad
movl
xor
andb
sahf
pusha
jb
fcos
or
adc
data16
cmovno
xor
add
and
mov
iret
cmp
add
ljmp
jg
inc
adc
xor
cmpsb
inc
cwtl
mov
jl
jbe
sbb
ret
mov
pusha
mov
and
test
mov
cmpb
and
popl
add
roll
pop
mov
pushf
xor
pop
int
xchg
mov
jge
add
cli
inc
pushf
add
cmp
xor
lods
xor
mov
movsb
nop
fcoml
filds
cmp
cmpsb
add
jl
stos
ret
fidivl
int
movsl
lods
add
in
jne
pop
cmp
rolb
js
in
into
xchg
inc
add
mov
jno
call
pusha
jp
lret
mov
sub
lret
rclb
cld
inc
sbb
andb
xchg
in
stc
add
stos
scas
subb
push
or
jno
xchg
fnstcw
push
test
mov
add
and
cld
sarb
outsl
scas
push
jg
lock
sub
cmp
and
imul
adc
rolb
sbb
and
inc
add
sbb
jne
add
push
ljmp
xchg
add
es
adc
pop
je
mov
sub
xchg
add
fadds
add
test
mov
add
outsl
sub
mov
aaa
dec
add
fwait
sub
cmp
dec
roll
push
lods
jge
adc
add
pop
mov
cmp
xchg
mov
mov
sysenter
fldcw
add
rcll
push
popa
push
xchg
mov
mov
fwait
test
mov
jp
loop
mov
cmp
xchg
pop
cmpsb
push
mov
sub
or
xchg
stos
xor
add
sbb
add
pusha
xchg
sbb
cmp
mov
ss
pop
sub
and
push
cmp
add
cmp
test
jecxz
lock
dec
cmpsb
add
andb
jne
mov
push
popf
fyl2x
cmp
cli
fldl
iret
xlat
inc
fwait
xor
add
jns
movsl
add
in
fmull
fsubrs
sub
xor
cltd
pop
lret
decw
push
xor
aaa
mov
sbb
xor
stos
in
mov
ret
add
loopne
xor
data16
jmp
sub
aad
fwait
jne
sahf
punpcklbw
int
loope
cltd
js
add
sbb
scas
mov
xchg
clc
cmp
jecxz
jae
lcall
and
and
mov
jecxz
sub
mov
mov
fcmove
pop
mov
fs
inc
pop
sub
pop
lea
dec
add
xchg
cli
dec
cmp
jp
bound
inc
add
vmovapd
lret
movsb
fldenv
jmp
sub
arpl
mov
push
clc
outsb
xchg
push
jmp
repnz
xor
stos
xchg
sub
add
jne
push
mov
mov
fcompl
rolb
push
pop
add
mov
mov
pop
xor
cmpsl
inc
push
stc
flds
push
inc
pop
xchg
out
mov
mov
fnstsw
out
popa
mov
lahf
fcoms
add
pop
jo
stos
jno
push
in
scas
movsl
in
rcrl
lock
and
cs
dec
push
pusha
adc
imulb
pushf
loopne
cmp
fistps
cltd
mov
jmp
cli
pop
xor
popa
adc
fisubs
scas
rcrb
dec
out
jne
outsb
jecxz
pop
sti
movsb
xchg
cmp
insl
jns
xor
ljmp
and
or
fwait
mov
dec
fcmove
or
sbb
and
in
clc
pop
sbb
jno
xchg
addl
dec
inc
nop
xor
and
dec
sbb
das
mov
add
jbe
push
and
and
xor
mov
aaa
ficomps
xorl
mov
lock
mov
ret
and
xorb
pop
loopne
lcall
pop
dec
orb
dec
add
push
cmp
or
mov
add
and
push
push
sub
mov
cmp
andb
lret
xor
push
xor
dec
clc
push
icebp
dec
insl
or
sbb
testl
xchg
pushf
cmp
push
mov
pop
add
jae
xlat
ds
mov
inc
sbb
rcrb
pop
pop
das
popf
jmp
xchg
jno
dec
sbb
or
cmc
xlat
pop
jge
pop
lret
rolb
repnz
data16
add
add
sbb
mov
addb
cli
push
ss
fcoms
orb
call
arpl
sahf
push
push
sarb
adc
pop
add
popa
push
pop
push
fs
add
xchg
leave
fwait
mov
inc
mov
mov
pop
lret
jge
pop
xchg
rorb
pop
call
sahf
mov
xchg
or
and
add
push
mov
hlt
mov
mov
mov
add
cmp
sub
or
pushf
adc
sbb
sub
movsb
test
shl
popf
push
out
push
xchg
inc
cmpsb
sbb
pop
test
loop
add
imul
jecxz
movsl
fsubrl
adc
insl
rol
push
jge
lret
ss
outsl
adc
jns
add
push
push
cmp
pop
mov
xchg
inc
add
dec
leave
xor
insb
dec
mov
mov
dec
std
mov
sbb
loop
pop
ror
push
sub
shlb
fwait
add
shll
inc
cmp
stos
jns
es
in
or
jae
sub
add
pop
out
inc
pop
lret
fs
fwait
dec
jmp
je
insl
test
adc
rcrb
in
jno
add
push
insl
inc
add
mov
mov
mov
not
aas
cltd
data16
pusha
inc
cli
gs
add
fldcw
mov
mov
mov
repz
fcomp
sub
adc
insb
xchg
mov
ja
lock
dec
fidivs
push
dec
mov
test
aad
pop
sub
cmp
pop
insb
xor
js
add
or
mov
loope
dec
data16
adc
andb
adc
dec
dec
adc
mov
and
push
lret
jbe
cli
arpl
les
mov
push
add
or
mov
sbb
popf
add
xor
and
cmp
cmc
ja
insb
or
xor
push
push
pusha
add
sbb
adc
mov
imul
data16
dec
xor
mov
inc
leave
cmp
insb
add
mov
push
call
push
lock
inc
xor
and
mov
and
push
popa
stos
pop
adc
test
aas
add
sub
xchg
cmpsb
mov
popl
jae
and
int3
jmp
xor
leave
xor
sbb
ret
cmp
push
dec
or
and
outsl
cmp
lcall
les
adc
and
jmp
add
xchg
rcl
pop
pop
js
add
in
std
dec
add
fmuls
jo
lods
mov
lods
pop
jno
push
bound
sub
xchg
daa
add
jns
or
pop
subb
fists
sub
add
or
je
adcb
sub
scas
adc
pop
div
or
add
jge
xchg
es
push
rcr
jg
add
sbbb
jns,pt
add
jl
inc
lahf
adc
cs
pop
jne
aas
lds
push
inc
outsl
out
mov
and
sub
add
dec
aas
shl
in
sbb
push
lods
mov
pushf
sbb
push
sbb
jge
stos
mov
push
pushf
xlat
lock
mov
cmc
and
jae
call
es
test
test
sbb
rol
cli
sbb
addl
popf
dec
sbb
push
sbbl
cmc
add
fcoms
mov
sbb
arpl
outsl
sbb
add
ja
or
movb
inc
adc
cmovp
lret
loop
xor
or
ror
leave
lea
xorb
mov
pusha
xchg
rcrb
sub
and
sub
or
add
shr
enter
call
xchg
xor
fdivs
add
stos
inc
mov
insl
dec
test
in
add
inc
dec
push
add
addr16
add
loope
and
xchg
adc
clc
add
int
inc
add
loope
cwtl
cmp
xor
out
sub
insb
add
shlb
out
inc
scas
xor
stos
add
pop
jg
das
movsl
push
dec
enter
push
je
movsb
fnstcw
xchg
pop
stc
into
lret
mov
mov
add
mov
addl
popf
inc
cwtl
out
mov
inc
scas
shll
pushf
rcl
clc
cmc
popa
add
xor
inc
add
loop,pt
pushf
push
and
inc
mov
lds
aas
cmp
xchg
sbb
cli
popf
pop
sbb
aaa
rclb
and
mov
push
inc
sar
xor
cmc
xchg
and
push
push
pop
or
and
dec
push
outsb
les
in
push
mov
lahf
pop
rclb
add
cs
adcb
ljmp
jmp
adc
sub
enter
lret
mov
pusha
adc
mov
sarl
fiadds
add
fcmovu
shlb
mov
adc
add
ja
les
cmp
mov
jge
jmp
jns
adc
lods
movsb
cmp
or
aad
add
pop
fs
cmp
mov
lock
add
pop
and
stos
mov
sub
add
mov
dec
push
pslld
adc
inc
out
and
pop
mov
adc
jmp
inc
or
testb
paddusw
or
adc
rolb
fadds
sub
aaa
cld
pop
add
or
in
push
arpl
fisttpll
test
sbb
cmpsb
jle
pop
hlt
stos
xchg
push
lock
jae
pop
adc
cld
sbbb
test
pop
add
adc
add
xchg
mov
dec
jns
mov
insb
xchg
leave
add
sbb
cmpsl
fldl
mov
daa
add
inc
sbb
jnp
inc
rorb
jne
and
mov
repnz
jecxz
xchg
pop
sub
and
ja
xlat
adc
incb
clc
shrl
loop
adc
jo
ja
mov
jmpw
aas
pop
xor
pusha
and
or
shlb
pop
lock
dec
hlt
addb
lsl
push
jmp
mulb
dec
loope
cs
es
or
test
call
sbb
sbb
push
icebp
clc
mov
mov
int
subl
mov
mov
jno
jbe
stos
lock
scas
add
sahf
xchg
or
shrb
movsbl
xor
loop
jecxz
pop
int
jmp
mov
jg
dec
mov
idivb
imul
cmp
xchg
push
sub
sar
and
popf
lds
sub
arpl
pusha
cmp
out
add
rep
popa
sub
add
jmp
sbb
fdivl
jnp
push
dec
dec
inc
inc
loopne
cwtl
outsb
sub
push
lret
cmp
jns
add
ljmp
push
out
in
xchg
inc
xchg
add
push
dec
cwtl
xchg
dec
pushf
jo
cmp
loop
add
xor
inc
arpl
mov
sbb
dec
shl
push
loop
bound
cmpsb
add
mov
rol
push
push
das
addr16
jb
adc
mov
xchg
push
inc
jno
lods
push
pusha
enter
inc
ss
repz
mov
sub
test
jp
mov
test
adc
fs
cwtl
rolb
scas
cmpsb
xor
fnstcw
add
xchg
mov
cmp
fwait
inc
or
sbb
je
imul
arpl
jbe
in
push
stc
fcmovnbe
mov
add
outsl
mov
and
dec
in
ds
mov
add
jno
mov
aad
aaa
xchg
inc
push
adc
dec
pop
int3
enter
jo
cltd
inc
bound
mov
push
fwait
mov
pop
xchg
movsb
pop
lods
loopne
std
movsb
cmp
cli
ret
repnz
sub
pop
pop
sub
jge
arpl
push
add
bound
push
add
in
or
jnp
rolb
mov
mov
repnz
add
sub
inc
or
push
leave
xor
sti
gs
add
push
mov
cld
popa
adc
cmp
add
decl
insl
add
inc
push
in
xchg
jp
and
sub
add
es
fsubrl
adc
jne
pop
fnstsw
in
aam
lahf
cmp
pop
xor
push
mul
xchg
outsl
subb
inc
daa
scas
add
push
cs
mov
repnz
mov
mov
adc
xor
pop
add
inc
dec
or
lcall
adcb
add
shrl
xchg
cmp
sbb
into
loopne
or
add
pusha
adcb
xchg
push
shlb
add
enter
inc
in
cltd
pop
lret
nop
mov
pusha
xor
lods
xchg
push
push
cmp
push
dec
mov
mov
pop
loope
push
insb
mov
fstpl
mov
jg
cmp
je
push
jp
push
aad
loopne
inc
popf
lea
imul
pop
mov
popf
les
xor
in
dec
xchg
stc
add
cmp
int3
xchg
lret
cmpsl
lds
movsb
pop
es
inc
xchg
adc
push
fsubrl
vmread
sbbb
cmp
cbtw
lock
add
shl
or
xchg
xor
add
idivl
dec
out
rorl
push
in
cmp
das
add
add
dec
inc
and
mov
push
rolb
inc
or
popa
or
sub
mov
mov
pop
add
inc
jle
jnp
cmp
fsubs
or
xchg
xor
adc
add
mov
mov
pop
ja
add
or
sub
add
mov
lods
jge
add
mov
mov
stos
data16
add
lcall
add
pop
cmp
pop
inc
cli
cmp
adc
xchg
push
pusha
insl
pusha
sbb
test
dec
out
cmpsl
insb
test
movsb
and
lods
add
adc
adc
add
push
mov
or
mov
test
sub
aas
fadd
mov
xchg
leave
outsb
mov
out
mov
cld
cli
call
dec
incb
sbb
sub
xor
adc
jecxz
add
stos
insl
push
push
faddl
js
pop
int
mov
jge
xchg
adc
and
call
ljmp
push
inc
and
mov
movsb
add
ror
pop
pushf
dec
adc
repnz
jle
cmp
leave
pop
fstps
cmpsb
push
insb
roll
mov
shrl
pusha
jmp
enter
xchg
mov
xchg
movsl
add
pushf
inc
add
out
cmc
xchg
mov
jge
outsl
incl
dec
push
mov
fiadds
lahf
sbb
testl
mov
mov
jg
leave
sbb
js
inc
adc
add
xlat
scas
popf
cli
and
xor
fmull
aas
dec
mov
test
and
fwait
cwtl
mov
mov
push
cmovns
push
or
pop
add
hlt
repnz
add
cmp
mov
lahf
data16
xor
mov
pop
add
addr16
fistl
jg
dec
in
and
xchg
add
adc
lcall
sbb
test
adc
cmp
push
or
icebp
fiaddl
mov
lods
js
pop
int
mov
popa
sbb
jge
in
jb
repz
out
in
pop
mov
add
xchg
gs
leave
fbstp
sbb
cmp
cmp
xchg
sbb
xchg
clc
pop
cmp
adc
xor
add
frstor
xor
addb
test
jns
mov
insb
dec
popf
or
aam
add
in
out
repnz
imul
pop
lret
mov
or
lods
or
sti
or
mov
ret
pop
jo
mov
push
ss
push
jmp
sti
cmp
cmp
int
add
push
mov
rcrl
dec
inc
cmp
sbb
or
push
push
adc
xor
sbb
push
xor
adc
push
and
pop
nop
add
sahf
push
sub
cmp
out
mov
mov
orb
inc
add
xor
daa
mov
adc
xor
add
repnz
add
fnstenv
subps
arpl
rclb
cs
mov
mov
push
test
hlt
shlb
push
add
mov
fstp
insb
ljmp
nop
sbb
add
inc
add
scas
enter
xor
leave
loop
mov
cmp
xchg
jle
dec
sbb
add
int
ss
js
shlb
and
loopne
rorw
nop
cmpl
ret
adc
add
aas
leave
push
and
orb
add
sbbb
mov
or
ds
add
aas
and
mov
adc
lods
add
xchg
rcrl
aam
xor
push
cmp
mov
je
pushf
sbb
pop
add
out
lods
enter
add
cmpsl
mov
sarb
jae
mov
insl
pop
cmp
sbb
lock
mov
add
lret
ds
insl
nop
pop
add
mov
cmp
push
xchg
rolb
iret
shlb
pop
int3
add
pop
jp
dec
stos
hlt
push
imul
lds
sub
add
cld
push
push
mov
gs
clc
or
in
js
pop
movsl
mov
adc
push
sarl
add
arpl
cmp
push
loopne
jo
sub
xor
add
loop
add
xchg
add
test
pop
xor
add
and
dec
sub
cmp
stos
rorl
loopne
xchg
testl
hlt
lahf
fwait
into
mov
push
push
dec
fdivrs
aas
cwtl
test
mov
addb
cltd
mov
and
cmpb
test
push
xor
jp
cld
loope
ret
inc
mov
jnp
movsl
fiaddl
aas
xchg
add
cmpsb
push
and
shlb
ja
mov
jnp
or
lds
mov
les
fwait
lahf
jnp
sbb
mov
in
inc
mov
jb,pt
add
hlt
stos
pop
ja
xor
xchg
or
pop
sbbl
in
dec
fdivp
add
add
out
or
pop
and
pop
insb
mov
ds
fadds
cmpsb
pushl
add
movsl
enter
hlt
pop
pop
pop
outsl
arpl
and
add
fucomi
sbb
jb
cmpsb
add
outsl
inc
pop
mov
mov
sbb
enter
xchg
lea
mov
sub
andb
mov
std
xor
stos
jmp
adc
push
rclb
or
add
subb
jne
sub
inc
add
sbb
sbb
mov
pop
loopne
add
pop
jns
les
in
xchg
ss
mov
inc
enter
cli
mov
pop
dec
push
insb
ja
dec
add
inc
scas
popa
add
xor
push
add
out
scas
xor
jno
or
fisubrl
in
sub
scas
mov
testb
push
incb
adc
inc
roll
insb
xchg
int3
sbb
adc
xchg
mov
mov
jo
aas
xor
faddl
aam
pop
ret
push
pop
inc
cmp
imul
push
adc
test
add
pop
mov
movl
pop
xor
sti
mov
fists
pop
push
and
add
imul
add
in
lahf
add
popf
add
pop
xchg
jp
lret
stos
aam
pop
lock
insl
mov
xchg
push
jge
add
pushf
dec
add
repnz
daa
push
shlb
inc
scas
sbb
add
mov
addb
cmp
cmpsl
or
mov
lahf
and
mov
and
inc
addl
ficomps
dec
mov
mov
sbb
dec
and
mov
add
jnp
repnz
lods
dec
add
cwtl
pop
sub
lret
add
push
test
jl
dec
or
inc
hlt
cmp
daa
add
cmp
jge
adc
enter
fidivl
clc
add
les
mov
pop
push
sti
xchg
and
sub
add
imul
lret
or
lods
mov
and
mov
jl
loopne
jae
imul
add
dec
test
hlt
fcomps
push
xchg
xor
je
daa
insl
adc
cmp
pcmpgtw
or
push
mov
fcompl
fsub
in
flds
sbb
mov
pusha
je
shll
addl
push
xchg
mov
mov
pop
insl
add
cmp
insb
pop
iret
or
and
jle
stos
ds
add
clc
test
jmp
cmp
mov
dec
movb
inc
and
add
inc
dec
popa
mov
testb
ficoml
insb
es
cmpsb
fcoms
in
sbb
inc
mov
push
sbb
mov
push
sub
lods
mov
cli
cmpl
add
int3
nop
jo
ds
popf
movsb
mov
test
andb
and
dec
cld
sbb
xor
jecxz
inc
add
pop
lods
xor
lea
sbb
clc
idivb
orb
or
jle
bound
jno
ret
pushf
dec
aam
pusha
add
call
sti
aad
cld
fsts
mov
pop
or
rcll
lock
aas
xchg
in
mov
rcrb
add
out
xchg
push
pop
test
lock
dec
mov
into
xor
and
data16
mov
dec
add
jmp
hlt
cmp
push
movsl
xor
pop
mov
jne
pushf
shl
iret
sub
les
aam
fimuls
sub
pusha
fcompl
cmc
xchg
xor
das
pusha
pop
dec
xchg
aad
int
sub
fidivrs
mov
push
xor
push
outsl
test
cmp
add
mov
mov
and
adc
adc
xor
testl
ds
jp
inc
inc
sbb
xchg
out
jno
fsubl
jge
jo
xor
mov
insb
add
ud1
xor
rcrb
int3
inc
ljmp
sbb
add
xchg
sbb
cmp
pop
mov
push
gs
and
xor
sub
add
movsl
pop
loopne
enter
iret
lock
inc
loopne
fcompl
ret
and
int
loopne
sbb
es
inc
push
rorb
add
shrl
adc
sbb
dec
and
shrb
fdivs
push
testb
or
out
into
sti
pop
std
loop
cli
popa
mov
and
push
les
jns
call
lds
mov
jne
inc
xchg
add
lea
jmp
xchg
repnz
out
pop
in
jns
cmp
xor
sbb
dec
jmp
inc
cmp
inc
pusha
and
cmp
sti
daa
in
mov
jae
add
outsb
popf
pop
mov
sub
cmp
cmp
adc
lea
pop
adc
inc
pop
add
arpl
scas
cmp
sub
mov
push
xchg
movsl
ret
sub
add
test
addl
sub
std
insl
shl
mov
out
sub
fistpl
jbe
or
int
add
xor
popf
stos
cmc
xchg
pop
add
sbb
add
jp
mov
add
mov
pop
shll
push
nop
stos
add
es
add
cli
pop
subl
dec
push
out
stos
xchg
push
lock
leave
pop
pop
add
ljmp
dec
fs
fadds
jnp
dec
rcl
stos
xchg
mov
dec
sbb
ljmp
jbe
incb
mov
lahf
movsb
int
pop
jl
cmpsl
stos
lcall
dec
pusha
out
sbb
fwait
add
int3
sub
push
xor
lahf
xor
ret
xor
cmp
sub
cwtl
xor
jmp
addb
sub
mov
or
addr16
push
and
mov
inc
mov
ret
or
cwtl
adc
sbb
jnp
mov
outsl
rcrl
rclb
stos
mov
add
cmc
sub
rcr
xchg
push
xorb
ja
rcll
imul
ds
jge
mov
and
movb
pop
push
pop
jp
mov
sbb
inc
pushl
ja
adc
test
or
jp
mov
js
pop
sbb
jno
add
pusha
mov
push
xlat
clc
out
add
jo
add
xor
fucompp
testl
lea
js
incl
and
pop
repz
inc
mov
xlat
inc
loope
inc
mov
iret
inc
add
fcomp
pop
mov
sub
jmp
mov
xor
push
repz
addr16
or
arpl
pop
es
add
lods
jl
xchg
int3
add
lock
fsubl
cli
jo
pusha
mov
mov
loopne
mov
je
or
or
sbb
sbb
mov
dec
inc
add
hlt
movsb
fisubl
add
pusha
ss
mov
adc
push
fsubrl
sub
pop
in
dec
pop
or
rolb
shll
push
stos
sbb
xchg
scas
lahf
in
shlb
inc
movsb
lock
repnz
stos
hlt
mov
fnstcw
adc
loopne
out
test
add
mov
mov
inc
shl
nop
ret
xchg
jb
adc
lods
pop
add
mov
les
add
sbb
rolb
dec
stos
push
flds
mov
xor
and
idiv
sub
lock
pushf
hlt
xchg
add
add
outsb
into
and
pop
lods
mov
push
addr16
jge
pop
subb
clc
mov
aam
xchg
cmp
add
pop
lock
pop
dec
add
ljmp
out
jmp
add
mov
add
les
or
xor
clc
into
lods
mov
stos
loope
cmp
lds
faddp
mov
imul
in
sti
add
inc
mov
repnz
fidivrl
pop
ds
enter
add
rcll
push
call
shlb
loope
push
dec
pop
std
aas
add
jecxz
mov
xor
push
out
jo
inc
lock
aaa
sbb
fwait
sarb
pminub
js
orb
push
inc
pusha
push
mov
add
jnp
sbb
testb
cli
pop
stos
cmp
xor
dec
pusha
adc
cwtl
add
pop
cmpsl
push
add
js
and
mov
cli
add
pop
pusha
out
and
bnd
mov
aas
lods
mov
pop
add
lret
scas
fcmovu
dec
add
into
and
pop
xchg
and
add
jle
stos
pop
jg
jno
lock
add
sub
sbb
mov
add
mov
adc
jg
ret
and
jmp
xchg
pop
arpl
push
fisttps
jmp
mov
mov
lahf
jnp
add
and
pop
add
xchg
fidivrl
pop
mov
lds
jp
mov
push
sbb
inc
jecxz
subb
ds
add
sbb
stos
mov
pop
pusha
jmp
test
mov
add
cmp
inc
sbb
sbb
or
jle
rcrb
pop
add
mov
scas
pop
dec
sub
sbb
add
dec
push
and
cmp
sbb
push
mov
lea
push
fnstcw
push
jge
inc
push
add
xchg
insb
loop
insl
test
cld
iret
add
out
ds
stos
cmp
add
loope
jge
sub
sar
movl
lds
add
xchg
iret
adc
add
pop
xchg
dec
cs
inc
cmpsb
fcom
aam
cltd
aaa
pop
jmp
popf
inc
lret
add
popa
jp
inc
add
stc
adc
test
jno
fdiv
icebp
rcl
insl
inc
add
cmpb
int3
sub
jg
fwait
or
mov
gs
sub
movsl
test
cmp
cmpsl
add
pop
sbb
das
testb
mov
stos
enter
inc
add
jmp
sub
int3
scas
cmc
push
arpl
jl
cmp
sub
imul
and
sub
mov
cmc
cli
or
lcall
stos
inc
add
imulb
jns
jl
jbe
push
lea
call
xchg
arpl
shlb
pushf
cli
in
pop
add
xor
sbb
inc
mov
sbb
add
shll
add
ljmp
push
mov
aas
add
jg
nop
add
cmp
push
stos
cmc
stc
pushf
cmp
mov
lods
andb
cld
xchg
add
ret
cli
xchg
mov
icebp
add
pusha
sbb
shl
adc
push
add
inc
ja
mov
cwtl
lock
hlt
inc
mov
cmp
xchg
inc
cmpsl
add
orb
push
iret
add
repz
loop,pt
testl
add
js
int
dec
xchg
and
xchg
adc
xor
aaa
inc
cmc
add
mov
inc
jl
xor
add
mov
dec
aad
cmc
add
imul
pop
in
aaa
mov
push
fs
add
mov
mov
icebp
dec
sub
inc
mov
adc
and
ds
fisubrs
push
xchg
test
pop
pushf
xchg
popf
mov
fstps
movsb
loop
add
psrld
add
adc
jg
movsb
fwait
in
or
std
adc
das
cmc
nop
mov
xchg
add
mov
sbb
scas
mov
sub
inc
dec
sub
js
sbb
jbe
mov
test
jne
add
push
ret
lods
add
or
fisubl
add
jmp
lock
leave
jmp
xchg
mov
hlt
mov
jne
dec
sub
loope
mov
or
add
ss
fnstcw
add
mov
xorb
push
dec
sbb
cmp
outsl
cmpb
xchg
cmpsb
sahf
add
cwtl
movsb
xor
mov
or
cltd
out
push
add
and
int3
roll
mov
push
dec
orps
into
cmp
mov
inc
adc
xchg
inc
pop
sub
ret
push
xchg
iret
test
loopne
sbb
and
gs
sub
fimuls
mov
test
adc
inc
push
loop
fiadds
lcall
xchg
lock
xor
mov
dec
aam
andb
push
movsb
movsl
and
mov
iret
push
pop
cli
sub
in
sub
aam
bound
adc
mov
orl
adc
clc
adc
xor
mov
inc
int3
mov
and
call
daa
sbbb
int
leave
push
adc
call
insl
push
inc
mov
and
mov
mov
add
mov
movsb
jno
push
mov
adc
std
das
pop
ds
sarl
or
js
in
clc
add
pop
add
and
push
add
adc
scas
mov
stos
dec
add
push
cmp
add
das
pop
movsb
and
add
pop
ss
cs
pushl
xchg
imul
out
pop
xchg
ljmp
inc
sub
add
mov
sti
and
or
loopne
add
daa
xchg
add
xchg
out
dec
dec
mov
test
cmp
mov
in
sbb
sub
jp
dec
test
sbb
pusha
arpl
add
jo
push
int3
std
add
jecxz
inc
mov
movaps
clc
out
loope
fwait
cmp
mov
add
and
mov
cmc
cmpsb
ret
fwait
fdivrl
pop
adc
cmp
add
push
les
and
stos
maxps
push
repnz
es
jl
aas
mov
jmp
and
addr16
mov
mov
popa
mov
jmp
push
push
pop
fbld
mov
popf
iret
cltd
xor
sbb
sub
and
cli
sbb
dec
js
pusha
add
push
fldl
add
mov
sub
cmp
adcb
stos
adc
cmp
xor
pop
test
fisubs
loop
inc
adc
jbe
mov
mov
in
mov
push
mov
pop
mov
mov
repz
popf
xchg
pop
xlat
lock
and
lcall
mov
inc
stos
mov
add
test
pop
mov
add
mov
adc
iret
popa
lock
push
inc
aam
test
xor
cmc
outsl
lods
lea
sbb
test
lds
aaa
aas
lock
call
push
xchg
orb
dec
ret
adcb
push
add
cwtl
mov
test
dec
je
adcl
orb
adcb
jl
push
add
cmp
loopne
arpl
add
lcall
pop
xlat
insb
fidivrs
loop
add
push
adc
adc
icebp
mov
push
or
xchg
in
fistl
inc
outsb
cmc
stos
lahf
imul
fmul
ret
push
dec
dec
jnp
push
cmpsb
das
add
call
or
pop
mov
inc
sahf
sbb
sbb
lds
pop
ror
ret
xchg
jo
fisubrs
push
push
arpl
test
jb
je
cmp
xor
mov
lock
and
add
add
add
stos
cli
rcll
std
sub
add
add
iret
cmp
cmpsl
lret
push
pop
jle
xchg
jp
enter
and
in
lods
inc
icebp
dec
jne
xor
dec
lret
pop
ja
ficomps
and
stos
xchg
or
adc
mov
xchg
add
sub
sbb
popa
gs
adc
mov
sbb
and
mov
mov
mov
fiadds
mov
ret
mov
lcall
push
xrelease
mov
pop
addr16
aad
or
fildll
jns
dec
and
mov
push
inc
xor
mov
add
repnz
pop
cwtl
sub
addb
sbb
sbb
negb
insl
xchg
fs
movsl
dec
mov
mov
add
loop
sahf
add
or
inc
aad
lods
xor
nop
outsb
xor
add
mov
ds
push
jae
daa
mov
loope
push
pop
pop
pop
mov
jo
std
xor
ret
cs
stos
int
add
out
cmp
fucomp
data16
add
add
cli
ja
out
mov
and
bound
mov
dec
jmp
xchg
sahf
pop
xchg
ja
in
cmpsb
push
test
cs
ds
pop
cmp
popf
lock
xchg
jne
int3
pusha
and
cli
icebp
dec
add
pop
mov
sub
int3
xchg
cs
pop
add
ret
sub
mov
sbb
jmp
push
lcall
cmpl
mov
movsl
aas
sbb
addb
shrl
sub
stc
ljmp
cmp
xchg
pop
jbe
fisttpll
dec
jo
popf
push
call
pop
jns
add
mov
jmp
add
sbb
adc
mov
xor
movsl
add
into
fistps
add
loopne
xchg
cmp
addb
aad
int
mov
or
push
bound
add
into
imul
fsub
scas
or
mov
cli
xor
mov
fstpt
inc
insb
inc
mov
pusha
std
ds
sub
push
add
adc
dec
push
add
icebp
pop
filds
je
xor
dec
shl
addl
sti
mov
sbb
mov
mov
dec
cmp
std
cmp
icebp
jg
adc
imul
and
movsb
push
adc
bound
lods
dec
fsubr
rolb
or
xchg
cmp
cs
sahf
sbb
ljmp
or
and
mov
push
loope
and
pop
ljmp
mov
push
jne
add
nop
sbb
pusha
je
sub
mov
pop
inc
cmp
mov
inc
fcmovnbe
iret
into
pop
add
ret
faddl
flds
push
in
divl
enter
xor
loope
add
mov
add
enter
sub
dec
inc
sub
ds
sbb
jp
and
rcl
js
pop
insb
ficoml
mov
in
dec
sahf
or
cmp
dec
mull
frstor
je
stos
hlt
add
jecxz
js
dec
sahf
rorb
mov
repz
test
xor
xor
rclb
pop
out
mov
fimuls
mov
xchg
cmp
xor
orb
push
jp
stc
cmp
leave
sbb
or
shrl
xor
push
gs
mov
dec
mov
xor
push
adc
add
jb
jmp
xchg
add
idiv
pop
cmp
outsl
add
jno
fildll
cltd
push
add
data16
cmp
pop
pushf
add
lret
gs
dec
jge
idivb
and
add
clc
mov
repnz
mov
rcrl
lock
nop
sub
xchg
outsb
xor
repnz
sub
or
notb
or
cld
jae
push
popa
jmp
add
xor
add
cmp
aad
sub
in
outsl
cli
push
mov
js
mov
addb
jecxz
add
negl
dec
call
jp
xchg
push
xchg
fidivrs
add
movsb
push
sbb
arpl
leave
sub
jl
sbb
movsb
shrb
les
subl
gs
out
dec
inc
mov
jo
out
add
cwtl
adc
sub
add
push
adc
add
stos
mov
xchg
jne
add
out
test
pop
mov
fdivl
pusha
push
pushf
pusha
jo
push
and
dec
shl
lds
scas
add
rclb
roll
sub
jne
push
jbe
dec
xchg
mov
add
jg
jo
mov
adc
sbb
inc
xor
loop
sub
arpl
cli
lret
jo
add
insb
test
sarb
push
pop
js
sbb
add
fs
push
mov
add
andl
flds
movsb
ja
sbb
sub
adc
sbb
subb
and
std
add
mov
mov
sub
cmc
inc
sub
inc
mov
divps
enter
add
cmp
loopne
mov
jp
mov
pop
mov
loopne
testl
push
fstl
mov
scas
data16
inc
jne
rol
jle
add
push
loope
add
mov
loope
sbb
fmull
sub
sub
adc
xchg
add
mov
daa
cwtl
add
ret
mov
add
jnp
leave
cmp
gs
xchg
adc
pusha
pushf
sub
aas
enter
in
imul
cli
cmp
cs
in
add
stc
flds
jae
mov
or
or
xor
loope
roll
int3
or
inc
and
mov
xlat
cmc
xchg
rcll
ss
mov
sub
in
ret
xor
sbb
xor
sub
pop
mov
push
sarl
lea
stc
iret
loop
sbb
rcrb
jno
jb
xchg
fprem
in
cld
shr
jns
enter
ljmp
loopne
rcr
mov
pop
push
fildl
pusha
insl
daa
inc
mov
adc
cld
xor
jnp
mov
xor
mov
pop
fidivrs
enter
lret
xor
cmp
outsl
xor
add
xor
pop
mov
out
stc
cmpsb
ret
xchg
or
push
insb
inc
add
xor
flds
push
iret
push
jp
xor
ret
jns
aam
mov
fldenv
pop
daa
push
mov
mov
imul
mov
and
pop
mov
jmp
scas
pusha
sbb
aaa
add
lock
sti
pop
fmuls
add
jb
out
insb
xorl
popa
xchg
fstpt
sbb
jb,pt
in
inc
mov
addr16
dec
js
sub
sbb
das
mov
jle
clc
cwtl
lock
add
cmp
mov
lock
add
mov
cwtl
xchg
add
movsl
test
popl
aas
push
jb
xor
pop
mov
push
pop
mov
ret
es
jecxz
dec
cmc
call
and
sbb
aad
fistps
inc
sub
add
adc
sbb
cltd
lret
testb
xchg
mov
jp
inc
jle
out
les
inc
mov
dec
adc
ret
lret
jbe
and
daa
jmp
inc
nop
std
lret
enter
fwait
add
and
xor
lret
sahf
imul
add
dec
xor
addl
mov
sbbb
out
inc
imul
loopne
cmp
jmp
out
add
cltd
sbb
add
inc
cmp
inc
fldt
test
add
aaa
push
adcl
out
movb
mov
mov
addr16
aaa
mov
jmp
inc
inc
push
fcomps
cmp
sbbb
adc
push
arpl
xor
stos
add
addr16
mov
cltd
sti
add
adc
shlb
add
jmp
mov
add
aad
cmpsb
nop
push
enter
mov
lods
fs
xchg
andl
and
bound
fs
add
fsubr
cmp
sub
xor
mov
cmp
xchg
mov
aas
add
shlb
out
pusha
stos
in
repz
xorl
or
add
decb
add
js
inc
adc
xchg
add
push
and
jo
jle
sub
gs
add
lret
sbbb
clc
incb
mov
xchg
mov
jecxz
or
add
mov
jns
push
jge
insb
dec
add
sti
mov
jl
dec
lea
ficompl
insb
mov
add
in
sti
mov
ficoml
pop
lds
lock
out
add
or
fildl
js
and
in
into
addb
clc
testb
jmp
out
and
or
push
lret
fs
sub
aas
iret
mov
js
add
push
and
and
dec
xor
fs
lcall
in
daa
sub
lea
testb
fwait
adc
sarb
in
dec
pop
push
inc
mull
sbb
or
xchg
mov
loopne
add
ljmp
cmpsl
dec
sub
sub
mov
faddl
ja
pop
fstps
pop
in
out
sbb
inc
and
pop
adc
add
adc
mov
stos
cmp
addb
mov
fst
add
sub
add
adc
or
inc
mov
int3
cltd
or
cmp
xlat
cmp
xchg
rolb
ret
sbb
faddl
cmp
adc
stos
pop
inc
add
das
inc
je
inc
sub
sub
mov
fldenv
std
jbe
cltd
cmpsl
xchg
push
test
jl
push
int3
cld
incl
out
cmpb
nop
loop
imul
xor
shll
mov
mov
stc
xorl
scas
add
mov
pop
push
shl
dec
call
adc
dec
cmp
pop
xor
mov
jo
icebp
loopne
in
popa
aaa
jns
add
cld
cmp
lods
loopne
xlat
in
jp
add
into
fwait
hlt
stc
sti
jg
add
lret
dec
cmp
je
stos
add
cltd
pop
std
and
lock
add
test
cmpsl
pusha
nop
loopne
insl
popa
adc
fwait
in
fsubs
enter
bound
mov
adc
add
iret
aad
insb
or
cmp
popa
dec
sub
pop
xor
stos
xor
dec
push
jbe
jno
inc
lock
sbb
addl
pop
pop
mov
dec
test
call
jmp
aaa
stos
out
or
xchg
ljmp
cmp
xchg
in
push
fcmovnu
es
add
pop
sbb
arpl
fsubrp
add
sub
xlat
in
mov
and
mov
or
dec
inc
sbb
jl
mov
push
dec
and
les
cmp
add
jl
icebp
pop
out
nop
lds
ss
adc
cmc
dec
add
rolb
mov
and
jno
add
pop
ds
fiadds
loopne
std
add
sbb
outsl
es
xchg
enter
cmpsb
insb
mov
and
jp
loopne
add
stc
test
cmpsb
adc
add
mov
xchg
add
inc
mov
mov
xchg
cmp
dec
stos
call
into
cld
add
sub
shrb
adc
dec
mov
jl
imul
cwtl
cwtl
je
loope
inc
mov
jmp
mov
movsb
jnp
pop
xor
inc
sbb
cmp
je
rol
sbb
shlb
pop
mov
xor
add
mov
cmpsb
and
mov
add
sbbb
mov
push
mov
and
add
add
push
or
xchg
add
jns
ss
xchg
inc
add
cvtpi2ps
inc
ja
sarl
mov
ljmp
insl
add
notl
shrb
icebp
add
scas
inc
fmull
jecxz
pusha
xchg
js
mov
scas
dec
ja
out
aam
cld
testl
pop
icebp
test
pop
int
push
sbb
cmp
sbb
add
dec
fdivrs
sbb
sub
pusha
push
cs
es
jp
js
pop
xchg
jecxz
ret
repnz
add
andb
sbb
pop
add
mov
loopne
push
mov
mov
es
push
push
stos
xor
inc
js
inc
cmp
js
mov
ss
pusha
outsl
add
addr16
pop
add
xchg
lock
leave
lret
in
notb
lea
mov
in
xchg
inc
int3
popa
lcall
or
add
xchg
loopne
out
mov
mov
dec
jb
or
inc
mov
add
add
loope
xlat
fistpll
lds
adc
jp
sub
pop
fcmovb
mov
mov
pusha
orb
xor
push
in
or
iret
add
repnz
enter
sub
adc
test
jmp
xor
mov
and
and
orb
cs
add
fsubrs
mov
mov
int
rol
mov
shl
add
je
adc
jae
add
call
divl
and
jecxz
sbb
pop
out
jae
daa
mov
inc
adc
xchg
adc
andl
push
jp
in
ret
pop
insl
add
in
push
addr16
lcall
add
ret
pop
rcrb
adc
push
outsb
and
in
xchg
push
cld
fdivrs
push
gs
lret
mov
push
add
add
xor
pop
les
push
sbb
mov
fwait
push
jno
das
gs
lock
clc
and
cld
push
sbb
les
in
out
aas
rorb
icebp
sbb
mov
push
add
ret
shl
mov
mov
out
into
push
pop
dec
add
stos
in
or
cmp
into
ds
popf
rclb
stos
and
xor
enter
shrb
sbb
and
mov
insl
add
ret
dec
iret
add
or
pmullw
xor
shl
mov
mov
pop
enter
mov
inc
mov
add
cmp
sub
jl
ja
add
shlb
test
push
pop
pusha
fmull
mov
and
mov
pop
test
inc
ja
je
in
add
lret
xor
lcall
pop
and
es
jmp
and
xor
push
mov
mov
pop
add
stos
sub
stc
es
cli
xor
add
aam
sub
add
dec
icebp
aas
add
jmp
jne
lea
arpl
add
and
cmpsl
jbe
repz
xor
cmp
clc
movb
and
jb
shlb
ljmp
sbb
lds
mov
ror
mov
mov
flds
or
sub
aaa
notb
scas
lock
loop
add
popf
mov
mov
add
add
push
stos
cmp
faddl
leave
cmpsb
out
mov
movsb
add
push
pop
pop
sbb
mov
insb
add
call
jnp
in
and
xor
jle
xor
lahf
shlb
jbe
in
xchg
mov
xchg
pop
andb
mov
inc
sbb
loop
sbb
rol
mov
add
lret
fistps
mov
and
cmp
int
add
aaa
push
cmp
gs
add
test
add
jecxz
mulb
add
add
add
jb
sahf
jle
cmp
dec
xchg
inc
jo
aas
jg
add
cmc
int3
mov
jns
lods
sub
loopne
xor
ja
add
popa
rcrb
push
sbb
roll
push
movl
inc
push
repnz
pusha
insl
cmc
add
xchg
insb
mov
mov
bound
push
adc
push
in
movups
aaa
sbb
mov
leave
add
add
add
pop
dec
add
xor
divb
add
pop
lds
push
adc
add
cmp
repz
sti
xlat
sub
shrl
fldenv
stos
add
cmpsl
repz
mov
cmc
pop
pop
out
sbb
ficompl
pop
push
jmp
ja
add
sbb
call
repnz
loop
clc
jno
push
and
push
and
add
pop
push
jge
mov
sbb
mov
inc
inc
adc
dec
std
add
jb
lds
pop
mov
jo
sahf
mov
or
pop
xor
cmp
and
call
or
mov
add
ret
dec
push
test
into
mov
add
sub
mov
shll
rcrb
add
mov
fs
push
rolb
adc
outsb
add
xor
push
pop
and
fwait
andps
in
out
imul
cmp
gs
imul
pop
out
jb
inc
xor
negl
jne
pop
mov
cmp
sub
add
cmpsl
and
in
inc
int3
cmp
add
stos
addb
mov
sqrtps
shlb
mov
pop
lock
sub
xchg
addl
rolb
test
fstps
xchg
outsb
cld
js
add
or
mov
incl
mov
dec
and
icebp
push
fwait
clc
adc
add
out
leave
pop
pop
faddl
ljmp
pop
inc
clc
push
in
add
xchg
jno
jnp
jo
pop
push
movsl
leave
push
das
andb
adc
lret
and
add
fsubs
jne
pop
pop
wbinvd
mov
call
dec
popf
movsb
icebp
mov
and
shr
jae
cmp
pop
xchg
mov
sbb
fistl
out
add
xor
add
fisttps
fwait
inc
add
pop
add
inc
dec
xchg
js
bound
jle
fidivrl
adc
lcall
add
lods
sbb
adc
call
add
into
out
aas
repnz
inc
jp
repz
adc
jo
adc
add
xchg
inc
add
gs
sub
ret
mov
add
outsb
xlat
fstps
jmp
mov
nop
ret
in
cmpsl
insl
loopne
sub
xchg
xor
xor
movsbl
dec
push
xor
adc
mov
mov
push
jae
xchg
imul
pop
and
add
sahf
les
mov
or
mov
faddl
jl
cmp
jbe
inc
or
pop
pusha
movsl
xchg
popl
or
sbb
pop
cs
jmp
dec
add
jno
xor
xchg
sub
or
jo
push
cmp
loopne
imul
mov
pop
movsw
scas
lret
sbb
call
inc
test
jo
rol
daa
xchg
cwtl
movsb
ja
imul
add
inc
out
jle
data16
imul
add
or
in
es
sub
add
mov
cmp
les
pop
push
lods
pop
add
test
addl
add
push
pop
cmp
pop
sbb
or
orl
arpl
add
add
add
jo
sbb
lock
or
or
insl
imul
push
inc
enter
fucomi
cmp
mov
rorb
add
or
add
test
pop
mov
sbb
repz
sti
stos
mov
cmpsl
jo
or
add
shl
iret
test
sub
xchg
push
jmp
jp
jmp
lock
sarb
add
das
dec
cltd
sub
mov
add
mov
fistpll
xchg
cmpsl
add
and
add
sti
jnp
cmp
cmp
dec
sahf
dec
daa
fsubs
aam
add
shlb
add
and
or
jno
dec
sub
inc
sub
add
push
push
add
xorb
stos
out
add
cs
add
in
cld
aad
in
jno
les
loope
jmp
mov
ret
cs
cmpb
lahf
mov
add
or
outsl
pop
arpl
mov
xor
xchg
in
test
pop
sahf
push
mov
test
add
in
orl
xlat
rclb
hlt
stos
icebp
dec
add
enter
jbe
push
cmp
ja
sbb
or
pop
add
stos
ds
js
add
and
out
mov
or
mov
jmp
mov
add
rol
xor
pop
cwtl
sub
sbb
call
and
push
dec
negl
inc
mov
jo
mov
cld
shll
sub
loopne
enter
push
jo
nop
sub
outsb
sbb
fldl
popf
pop
scas
inc
or
fldt
add
andb
cld
shlb
cmp
sub
jge
enter
stos
cmp
push
jne
int3
add
push
into
pushf
lock
inc
cwtl
push
sbb
icebp
push
xchg
pop
mov
in
jmp
mov
out
pop
fbstp
icebp
clc
enter
cmp
dec
js
jge
and
inc
mov
rclb
add
jae
das
mov
mov
jnp
int3
mov
in
rolb
or
sbb
dec
mov
xchg
gs
fdivr
pop
add
setb
mov
aad
push
sbb
je
xchg
add
inc
cmp
mov
inc
jecxz
add
jge
pop
cltd
add
pop
in
add
fsubr
arpl
inc
or
fldcw
aas
push
push
add
enter
nop
sub
sarb
sub
flds
ret
hlt
push
xchg
clc
adc
les
dec
pop
sbb
jp
xor
or
into
in
jmp
mov
mov
repz
push
popf
fsubrs
fiadds
cmp
ljmp
nop
adc
in
cltd
in
mov
adc
divb
lock
push
sahf
stos
filds
mov
adc
data16
mov
out
movsl
out
push
imul
add
fisttpl
dec
cwtl
adc
jnp
mov
lahf
xchg
jo
out
ljmp
test
add
xchg
sbb
pop
and
inc
sti
adc
popf
jns
and
jle
adc
test
push
popf
or
and
sar
ss
mov
xchg
clc
sub
dec
mov
add
mov
or
add
mov
movsl
jae
mov
rcr
stos
push
test
add
aas
mov
pop
stos
andb
cmp
push
cmp
aam
lock
add
inc
xchg
mov
add
out
add
loopne
mov
add
mov
xor
dec
mov
pop
test
push
xchg
inc
popf
add
jl
sbb
mov
dec
push
add
out
sub
fldl
add
cmp
and
into
inc
rclb
add
rcrl
test
loope
out
push
mov
mov
lea
inc
divb
sub
sahf
in
out
add
cmp
lcall
add
pop
sbb
mov
mov
ja
aaa
xchg
sub
test
cli
iret
sbb
xchg
and
mov
add
frstor
add
aad
movsb
addr16
addb
adc
sbb
mov
fsubrp
in
mov
inc
loop
repnz
je
add
sarb
inc
sub
andl
inc
inc
push
pop
pusha
cmp
scas
adc
jns
insb
aas
add
shlb
lods
in
xor
add
lock
push
sbb
nop
nop
dec
cli
ret
add
cld
iret
xchg
xlat
cld
ss
enter
pushf
repz
sbb
test
rclb
xor
cmc
jbe
aaa
mov
sub
jno
push
loop
adc
scas
cs
cmp
rcrl
jno
jnp
add
sbb
test
or
pop
xorb
add
lahf
dec
xchg
cmc
aaa
cmp
and
mov
mov
es
lahf
mov
insb
pop
add
push
imul
mov
cmp
gs
fwait
xchg
and
xchg
cwtl
pop
mov
pop
pop
xlat
xchg
test
pop
mov
dec
inc
mov
ret
pop
cmpl
or
addb
add
movsl
add
aaa
ds
inc
mov
jae
scas
xor
push
push
insl
push
add
xor
mov
shl
pushf
je
add
pop
jnp
fmull
lods
add
in
and
or
insl
mov
mov
mov
pop
dec
or
add
cmpsb
bound
sbb
add
sbb
pinsrw
outsl
xor
rolb
inc
lds
mov
leave
dec
add
jae
adcl
pop
and
and
jo
add
inc
cmp
shlb
jae
pop
stos
mov
adc
push
iret
adc
rcrb
adc
sub
dec
mov
inc
cmp
lahf
fldenv
adc
and
test
sbb
mov
fistl
aam
jle
fisubs
or
inc
int
mov
cmc
outsl
push
cmp
ljmp
in
mov
pop
xor
rcll
xor
and
insl
js
es
movsb
push
outsl
push
and
pop
lods
shll
mov
pop
mov
sbbl
rolb
jbe
rcrb
sub
add
inc
es
mov
adc
xchg
cmp
std
shlb
xor
add
pop
sub
inc
stos
mov
sub
push
inc
sahf
add
mov
adcl
insl
mov
add
mov
sub
sbb
decb
add
out
cmpb
repnz
fisubs
fbld
mov
mov
out
sub
add
lcall
push
sahf
jno
jge
jecxz
inc
fildll
jmp
enter
add
cmpsb
or
scas
add
push
clc
test
or
mov
arpl
es
push
mov
sbb
jl
loope
xlat
cmp
dec
cwtl
mov
std
popl
ret
mov
into
sub
lds
addl
stos
mov
fiadds
rcll
add
pop
cli
testb
push
aad
add
enter
jg
xchg
arpl
daa
xor
pop
lods
dec
cmp
mov
lock
dec
add
lcall
add
push
sub
jne
pop
add
dec
mov
sub
mov
and
aam
iret
push
dec
pop
nop
leave
xchg
push
add
lds
ret
sti
movsl
mov
lea
negb
leave
pop
clc
jmp
dec
or
sbb
dec
movsb
icebp
mov
or
xchg
pop
mov
roll
mov
imul
dec
push
xor
ja
shl
vpmacsww
sbb
add
inc
mul
push
cmp
or
shlb
lds
sub
pop
cmp
aaa
out
repz
add
addr16
daa
and
push
lcall
sub
adc
add
xchg
fucomp
add
sub
sub
dec
push
pop
add
jl
pusha
add
shl
lods
xchg
clc
push
mov
push
cmp
arpl
mov
add
xchg
xchg
les
add
das
jae
scas
int
or
or
faddp
push
sub
add
xchg
sarl
lock
sti
add
stos
insb
xor
bound
cld
lods
add
add
add
mov
andl
add
adc
mov
inc
in
xchg
in
cvtps2pi
loopne
cltd
js
pop
add
pop
sbb
dec
mov
div
das
xchg
pop
xor
lea
lcall
add
cmp
xor
stos
idivb
add
mov
add
push
pop
out
out
xor
jp
xchg
int3
lret
cltd
pop
cmova
ret
filds
mov
cs
add
mov
add
pop
push
lea
or
test
ljmp
jmp
jl
xchg
push
sbb
outsl
icebp
and
xchg
pop
add
repnz
test
scas
adcl
mov
add
or
lds
add
movsb
pop
lods
dec
mov
incl
out
xor
push
cmp
adc
sbb
sbb
fdivrs
lahf
jge
aam
pop
add
mov
pop
out
cmp
push
js
btr
ret
and
adc
mov
jecxz
jns
inc
dec
cmpsb
das
bound
int3
mov
add
pushf
and
add
cmp
test
cmp
add
push
adc
outsl
scas
daa
jl
add
and
into
fsubrs
mov
clc
add
cld
int3
mov
rclb
add
aam
and
test
hlt
add
mov
add
out
pop
adc
mov
jle
cmp
or
imul
add
mov
push
add
fs
add
lea
call
fadds
add
and
sub
add
aam
sub
pop
xor
mov
pusha
out
push
sahf
insb
push
bound
adc
fldt
mov
enter
int3
es
sub
jns
ret
add
sarb
loopne
or
stos
add
push
dec
imulb
out
test
movl
mov
add
mov
pop
pop
cmp
add
or
jp
mov
loop
out
sub
jbe
add
jno
xchg
or
add
add
pop
lcall
mov
sbb
pushf
add
gs
sbb
stos
jmp
mov
les
pop
je
add
sub
mulb
sbb
or
pop
add
xor
add
fwait
les
mulb
aad
pop
push
popf
icebp
es
imul
jo
inc
js
push
data16
add
fs
popf
jp
pop
pushf
pusha
adc
sbb
pop
cmpsl
addl
push
or
sbb
ret
iret
jbe
int3
inc
call
jnp
rolb
imul
dec
out
outsb
sbb
sub
mov
ja
ficoms
jne
add
ds
add
callw
pop
mov
push
add
jae
das
pop
arpl
jbe
hlt
movsb
cmp
pop
add
lcall
clc
ficoml
fiadds
dec
dec
jae
ret
cmpsl
nop
addb
loope,pn
and
pop
add
ret
add
fwait
inc
add
incl
mov
fisubrl
jb
add
sbb
repnz
enter
mov
rcrb
mov
and
and
mov
add
sub
lods
lods
add
adc
bound
cmpsl
or
testl
cmp
repz
jne
push
mov
push
cs
jle
gs
and
mov
idivl
add
fisubs
shll
xchg
mov
xchg
fwait
pop
cmp
xlat
nop
outsb
or
ret
pop
jns
xor
psubusb
cmp
movsb
clc
dec
mov
popa
mov
cmpb
xor
sbb
inc
cli
lret
lods
inc
imul
inc
cli
cmp
cmp
jle
dec
or
lea
js
fmull
xchg
daa
xchg
fs
movsb
add
mov
mov
cmp
jp
cwtl
pop
xchg
rclb
notb
and
hlt
mov
add
mov
outsb
shlb
cwtl
out
or
sti
push
cmp
mov
rolb
bound
jb
and
push
lods
add
push
fs
insl
hlt
outsb
roll
jno
push
xor
ffreep
mov
mov
je
cs
dec
push
clc
sbbb
xorl
add
adc
bound
add
cmp
mov
jl
add
icebp
add
fcmovbe
or
sub
dec
and
push
xchg
xor
mulb
insb
fisttpl
lods
pop
andb
xor
test
xchg
and
fidivrl
insb
loope
xchg
lds
cwtl
scas
js
add
push
int
je
rcrb
sar
jecxz
sub
scas
add
bound
xor
lcall
xor
or
mov
out
outsl
dec
adc
cmp
or
imul
js
test
mov
std
shl
or
push
cmp
dec
clc
and
add
sbb
jmp
adc
nop
outsl
stos
std
hlt
jecxz
sbb
fldcw
or
add
jge
and
out
nop
push
mov
scas
cmp
jle
lret
fcomi
mov
jno
cltd
mov
pop
jo
mov
sbb
lods
add
fmull
add
sbb
out
cmpsl
fstpt
inc
addl
jne
cmp
adc
pop
sbb
ret
add
aaa
dec
ss
in
popf
add
cmp
ret
loop
movsl
pop
add
jl
xchg
aas
scas
adc
add
lea
pop
in
lods
jg
bound
arpl
xchg
mov
sub
mov
add
jno
mov
popf
daa
push
dec
movsl
mov
sbb
add
sbb
xor
in
mov
inc
scas
lods
xchg
push
imul
cmpsb
inc
adc
mov
fwait
jb
add
xor
mov
or
lret
push
and
cmpsb
fwait
out
addr16
adc
pop
sbb
and
icebp
cmp
int3
xor
sub
push
xlat
lods
cmp
je
pmaxsw
push
imul
lret
cmp
daa
add
mov
sbb
pop
add
xchg
mov
popa
sbb
pusha
add
add
lfs
aas
loopne
push
pop
out
fwait
add
xorb
xchg
add
mov
es
daa
jne
clc
xor
push
pop
addr16
fs
fldt
inc
out
fsub
add
in
xchg
dec
add
adc
pop
decb
dec
cs
add
lcall
adc
rcr
fdivp
pop
repnz
out
and
mov
or
test
loope
xor
xchg
and
inc
sub
rorl
mov
fnstcw
dec
std
add
xlat
cltd
imul
cmp
add
jno
sbb
mov
sbb
rorl
dec
js
jg
add
pop
test
add
rolb
jo
lea
rcll
add
mov
sbb
sub
aam
pop
enter
dec
xorl
loop
test
rcll
xor
inc
or
adc
filds
pop
xchg
mov
add
fisttps
das
dec
mov
add
loope
orl
lahf
mov
add
xchg
adc
sbb
movsb
jmp
pop
mov
add
xchg
pop
stos
mov
add
int
push
mov
scas
jmp
fs
push
popa
jle
xor
sub
jnp
add
add
mov
mov
add
push
outsl
dec
rcrb
add
xchg
mov
pop
test
sub
and
insl
add
push
mov
dec
dec
stos
xchg
add
sub
cmpsb
fisubl
nop
ljmp
fsubrl
popf
jno
jmp
out
mov
dec
addr16
imul
inc
jp
dec
pusha
add
jne
push
test
add
push
add
outsl
inc
call
and
sahf
cld
repz
ja
xlat
xchg
scas
sub
push
pop
pop
adc
push
insl
push
rorl
popf
in
pusha
push
dec
add
decb
mov
orb
and
rorb
jno
dec
lea
fwait
or
out
ljmp
nop
push
add
andb
in
fistl
add
mov
andl
adc
flds
dec
jecxz
add
sub
loope
and
mov
sahf
sub
or
aas
inc
cmp
mov
rolb
data16
push
sbb
add
leave
bswap
xchg
cmpsb
add
stc
outsl
mov
je
lea
jo
aam
fisubl
push
lcall
call
inc
mov
std
aad
sahf
pop
mov
ret
pop
imul
nop
xchg
cmp
fdivr
aaa
pop
pop
add
mov
jge
sub
add
idivl
push
cwtl
jmp
inc
in
pop
push
jo
movlps
ja
add
and
mov
in
popa
inc
in
cmp
xorb
pop
icebp
pop
lret
mov
push
dec
dec
mov
sub
add
lgdtl
bound
data16
xchg
push
add
cmp
mov
into
mull
cld
inc
sbb
jo
mov
pop
fcmovu
add
jp
xchg
add
pop
push
push
out
outsl
add
int
aad
jecxz
clc
xchg
inc
inc
push
fldl
xor
out
sbb
call
xchg
aaa
inc
shrb
add
add
and
xor
mov
jl,pn
xchg
pop
repnz
inc
push
inc
sub
ss
negl
fscale
fnsave
addl
dec
js
adcb
jae
mov
jo
movsb
rcrl
add
fdivrl
push
out
mov
insb
dec
clc
pop
jne
repz
icebp
or
push
aam
jp
sub
mov
mov
pushf
and
add
in
outsl
cmp
mov
fidivs
test
jl
adcb
rcrl
das
fstl
add
mov
movsb
in
aad
testl
xchg
xor
pop
cmp
popa
cmpl
mov
clc
add
lret
jae
or
rclb
add
adc
aaa
call
pusha
jmp
pop
add
pop
aam
add
fidivrl
push
add
cmpl
add
mov
adc
xchg
xor
bound
ret
insb
data16
call
mov
mov
sbb
pop
and
or
clc
outsl
push
mov
sbb
iret
add
add
inc
jge
lods
lret
and
pop
arpl
rorb
lret
out
xor
jle
pop
fiadds
jg
cld
mov
xor
int3
test
inc
add
add
lods
mov
jmp
cld
cltd
mov
jb
xchg
jno
sti
cltd
rcrl
clc
xor
cs
mov
adc
or
sarl
ljmp
jb
loopne
cld
add
mulb
lds
cltd
hlt
shl
xchg
dec
pop
ret
fsubl
xchg
setbe
repz
jno
pusha
repnz
hlt
pop
add
and
add
test
popf
rolb
push
std
xchg
add
and
adc
cltd
mov
stos
jmp
or
inc
sbbl
dec
repz
aaa
dec
add
adc
jns
add
stc
icebp
lock
and
add
jecxz
cli
xor
insb
mov
adc
lcall
stos
fcomi
loop
push
xchg
sarl
addl
fsubs
add
push
rcll
dec
in
lahf
adc
xor
add
cmp
cmc
sbb
or
xorb
clc
aad
inc
cmp
lods
movsl
xchg
add
stc
dec
sbb
shr
xchg
mov
add
out
notb
sbb
inc
push
xchg
mov
inc
dec
jns
push
jnp
xchg
sub
js
pop
jae
add
inc
sbb
insl
aam
mov
rorl
cmp
xlat
add
adc
push
ret
mov
sub
into
jbe
add
mov
lahf
add
dec
cmp
notb
and
stc
hlt
add
jg
push
pop
imul
jb
sub
mov
fdivl
hlt
pop
push
dec
xor
repnz
cmc
and
inc
repz
daa
mov
data16
sbbl
add
xor
out
adc
aaa
xchg
xor
add
jno
jae
jo
hlt
and
dec
sub
jecxz
add
inc
fwait
xor
imul
cmc
mov
xchg
jmp
jno
test
jg
ja
xlat
add
cmp
sbb
enter
jecxz
call
add
jl
iret
and
fdivp
repz
lcall
stos
iret
xor
pop
cmp
mov
mov
and
and
add
lret
jo
out
repnz
shrb
sub
jnp
adc
pop
and
cli
cld
mov
es
leave
add
mov
insl
aas
sbb
and
imull
xor
or
add
daa
mov
jecxz
cmpsb
mov
pop
and
movsl
shll
mov
pop
dec
sbb
cmp
xchg
rclb
jbe
push
mov
push
and
iret
add
clc
push
lret
or
hlt
icebp
orb
mov
add
inc
loopne
fdivl
lahf
insb
xorb
fsts
outsb
movsb
and
lods
push
add
fcom
jmp
movsl
test
addb
divb
add
addr16
scas
shrb
pop
mov
int3
fcoml
movsb
jmp
inc
in
adc
mov
adc
daa
mov
sbb
cmp
mov
pop
sahf
fdivrl
adc
test
aaa
add
int3
dec
mov
daa
add
mov
rorb
outsb
aam
add
loope
push
pushf
cmpb
add
imul
aam
mov
jb
add
outsb
pop
jo
into
data16
mov
or
push
cmc
sahf
lret
in
add
push
dec
push
xor
dec
add
and
fwait
add
jmp
sub
add
mov
jl
gs
mov
cwtl
sub
adc
add
mov
pop
popf
add
dec
data16
shl
mov
add
xor
add
cmc
movsl
loop
xchg
xchg
add
imul
in
sarb
mov
or
sub
and
xchg
sbb
sbbb
sbb
mov
fcompl
repnz
fstps
out
or
pop
and
shrl
add
push
mov
and
xor
jmp
subb
fsts
adc
xor
inc
xor
movb
adc
imul
cld
lods
lret
add
imul
test
fistpl
sub
shrb
jge
add
mov
dec
add
repz
and
xor
jle
jmp
stos
add
in
pop
cld
and
ret
das
dec
cmp
ljmp
bound
popa
aaa
push
sbb
fmull
pop
mov
flds
ljmp
sarl
xchg
push
cld
xchg
loop
call
mov
sub
add
cwtl
ret
and
hlt
cmc
add
fwait
jb
cs
lock
inc
verr
or
sahf
incl
dec
mov
bound
cmp
sub
je
fisubs
add
loop
inc
xchg
inc
aam
add
fisttps
jmp
ret
inc
pop
int
mov
jnp
xchg
sub
outsb
pop
add
mov
fcomp
jge
pcmpgtb
roll
add
jg
call
mov
and
mov
mov
addb
cmp
mov
rorb
inc
xor
mov
add
sub
movsb
xchg
fisttpll
xchg
shl
mov
pop
push
dec
pusha
or
inc
mov
push
adc
xor
lods
adc
lcall
mov
insb
jns
ljmp
pop
psubw
sbbl
mov
orb
cmpsl
sbb
nop
test
in
sub
pusha
pop
inc
xor
jne
test
lcall
xor
pusha
popa
mov
dec
and
sarl
lock
pop
inc
xchg
faddl
mov
add
jae
aam
push
orl
fbld
add
adc
addr16
loop,pt
addb
popa
mov
push
mov
add
filds
scas
add
movsb
adc
into
or
xchg
lcall
jo
or
lods
test
add
in
inc
out
outsl
pop
or
pop
test
add
cmpsl
je
inc
js
add
ret
jecxz
in
call
pusha
add
jo
fdivrl
mov
add
cmp
pop
or
jo
xchg
int
icebp
inc
in
test
subl
in
mov
andb
in
loopne,pt
setp
frstor
in
dec
pop
cmp
cwtl
push
xor
cmp
inc
dec
fidivrl
ret
xchg
scas
in
test
jb
pop
sub
test
mull
hlt
mov
mov
jne
sti
xlat
popf
mov
stos
mov
mov
and
mov
add
push
pop
sub
sahf
mov
test
jmp
and
les
cltd
xchg
dec
dec
xchg
repz
clc
cwtl
in
arpl
psubsw
bnd
call
in
jno
jns
cmp
jo
mov
jmp
add
stos
xor
xchg
dec
adcb
les
jnp
sbb
cmp
jle
fisubl
rorl
stc
aas
mov
lcall
mov
and
jmp
add
cmp
mov
cmpb
adc
pop
sbb
jo
xor
sbb
xor
or
mov
add
mov
stc
mov
inc
add
xor
add
and
pop
stc
add
popa
adc
mov
and
sbbb
mov
pop
addl
mov
ret
push
xchg
fsub
sarl
mov
lods
and
out
or
mov
sbb
mov
pusha
or
sbb
stos
ds
mov
pop
or
lods
push
mov
lret
pop
cmp
add
or
and
out
add
mov
out
adc
cmc
lods
ds
adc
mov
xor
clc
jmp
adc
andps
inc
fcmovu
decl
add
pop
jmp
jno
dec
ljmp
add
lock
in
out
call
stos
add
popl
imul
lods
imul
adc
add
inc
jo
add
addb
add
repz
xor
rclb
add
push
cmp
cwtl
push
add
bound
stos
add
int3
lret
in
cmp
jns
dec
mov
or
jl
jno
or
sub
add
ljmp
scas
ja
xor
xchg
dec
les
in
pop
test
pop
call
sbb
add
aaa
mov
jmp
rcl
or
outsb
mov
mov
cwtl
mov
add
adc
or
sbb
adc
or
cmp
sub
lds
adc
les
pop
pusha
lods
mov
cmp
mov
nop
add
fiaddl
test
ss
mov
cld
add
dec
aad
mov
sub
fld
mov
sbb
cwtl
sub
lret
mov
mov
loope
add
lahf
fstpt
mov
adc
rolb
das
and
movsl
cmc
xchg
add
pop
imul
ret
mov
mov
push
xchg
pcmpgtw
and
push
mov
shlb
sbbl
fidivrs
sub
call
inc
jge
loopne
shrb
call
js
lds
fldenv
fsubs
inc
inc
into
mov
xchg
cmc
ret
enter
jle
rdmsr
push
js
loope
dec
dec
push
pusha
scas
jmp
or
push
filds
push
pusha
mov
sbbb
dec
add
jnp
cmc
les
xor
inc
xchg
add
push
shrb
add
imul
movsb
es
add
lea
add
jl
push
jno
pop
adc
aam
sahf
pop
jmp
js
movsl
push
loopne
rcr
or
cld
mov
add
not
push
rol
add
mov
jb
dec
push
rolb
jmp
cltd
lea
nop
mov
jbe
fidivrs
daa
add
out
sub
inc
jae
xchg
adc
add
lcall
add
stc
sarb
test
sub
dec
rolb
cmpsl
cld
sahf
add
insl
xchg
adc
stos
hlt
mov
nop
dec
add
and
push
cwtl
clc
sub
inc
pop
add
pop
test
push
xor
cmpb
inc
add
xchg
xor
add
push
mov
je
or
add
dec
sarl
jle
aad
or
dec
add
pop
out
mov
les
shll
jae
push
test
popa
fcmovb
xor
loopne
xor
add
mov
mov
add
mov
jl
push
mov
ret
ss
dec
rclb
hlt
scas
add
jb
cmp
dec
sarb
in
aas
mov
sbbb
popf
sbb
xor
faddl
add
test
cld
push
mov
fs
sub
subb
cli
stos
js
bswap
stos
cmp
daa
mov
pop
aad
int
or
sub
inc
mov
and
adc
js
and
out
lret
inc
insl
subl
clc
add
sbb
add
add
scas
pop
push
sbb
mov
inc
add
xor
loop
lret
mov
or
mov
add
sub
add
mov
movsl
lahf
inc
lret
sbb
shl
cmp
sub
lahf
fidivrs
sbb
jb
push
cmp
mov
push
adc
jo
jae
adc
mov
sbb
jb
and
bound
jno
adc
xchg
or
loope
lcall
or
mov
mov
hlt
dec
add
jno
rep
and
add
jnp
adc
inc
loopne
and
pop
add
cwtl
mov
pop
mov
jno
push
cmpsb
loopne
mov
add
data16
and
inc
add
test
movsb
lods
pusha
pop
lock
nop
mov
pop
inc
add
xchg
inc
xor
fs
add
inc
pop
pop
cmp
push
xor
xchg
shll
inc
sub
cmp
or
adc
sub
add
sub
push
fcmovnbe
cmpb
xor
jecxz
andl
cmp
lret
pop
clc
push
out
cmpsb
cmp
pop
stos
mov
pop
fisubl
push
jecxz
adc
sbb
in
cmc
cmp
or
jge
cmp
icebp
xor
sub
and
mov
sub
addr16
sub
lahf
add
movsb
test
jge
in
mov
xorl
jl
aam
pushf
loop
jb,pt
aas
popl
dec
xlat
in
push
iret
gs
or
add
cli
xchg
inc
mov
filds
out
movsb
mov
popf
ret
cmp
mov
sbb
xor
pop
or
fdivp
or
xor
sbb
jge
pcmpgtb
and
gs
jbe
jnp
xor
add
out
rcrl
movsb
outsb
add
xor
cmp
imul
cmp
jae
push
mov
and
mov
add
xchg
stc
nop
jns
jge
inc
fwait
lock
cmp
mov
jmp
cld
icebp
add
jl
push
cmp
enter
inc
out
xcrypt-cbc
cmpsl
push
ret
into
xchg
clc
mov
dec
mov
stc
or
add
push
dec
mov
pop
sbb
inc
push
lea
clc
and
movsb
out
mov
cmp
lret
aas
shl
pusha
pop
fmulp
dec
roll
rclb
xor
cmp
out
shr
inc
mov
sbb
or
ret
pushl
arpl
jl
sbb
dec
jnp
jle
adc
nop
js
add
cmp
in
cmp
incb
push
xor
mov
fs
sbb
sbb
das
ja
pushf
jl
stos
jnp
ret
orl
add
fsubrl
add
fidivl
rcr
icebp
lret
add
shufps
ret
inc
shrl
adc
add
in
push
es
jg
xchg
add
xchg
and
inc
mov
movsb
add
push
lahf
std
sbb
mov
add
xor
xchg
add
int
cli
loope
fadds
cltd
adc
bnd
or
loopne
ficomps
adc
frstor
es
pop
dec
jno
dec
add
scas
mov
popf
add
je
xchg
in
push
jl
inc
inc
xor
inc
add
mov
stc
mov
dec
add
fcoms
or
ljmp
sub
inc
les
test
add
sbb
inc
fnstcw
jne
mov
add
sub
orl
adcb
cmpsb
pop
adc
or
inc
rorb
dec
xor
inc
push
xchg
movsb
adc
cld
sbb
dec
jmp
cltd
mov
lock
adc
movsl
mov
xchg
push
adc
arpl
in
add
pushf
test
push
lock
sub
add
cli
les
add
mov
dec
mov
and
inc
cmp
cmp
das
cmp
adc
and
dec
sbb
sbb
sub
sbb
or
sub
js
pop
add
ds
fldl
shll
mov
aam
cli
mov
mov
jge
cli
push
or
fdivs
adc
movsb
or
jmp
add
sbb
push
fisubrs
mov
rcrb
mov
add
dec
in
mov
and
dec
push
inc
push
cmp
pop
pop
repnz
jno
jae
pop
addr16
jo
mov
loop
bound
inc
into
adc
and
in
das
mov
xor
in
divl
sub
push
aas
das
lea
sub
lcall
pop
pop
mov
xor
rorb
loope
pusha
mov
adc
mov
jo
out
adc
arpl
loopne
push
xchg
add
out
sub
jecxz
add
dec
repz
repnz
xchg
mov
xchg
push
push
mov
add
fistpl
add
int3
cli
ficompl
pop
push
inc
cmp
shrb
je
call
adc
lods
test
mov
scas
fildll
adc
jg
mov
add
clc
lock
lds
push
mov
rclb
cmp
sub
jns
xor
sbb
mov
mov
ret
cmc
sub
mov
add
verw
and
mov
add
xchg
dec
fwait
ret
fcompl
add
adc
push
cmp
loop
loopne
xchg
or
daa
xchg
scas
xor
pop
ljmp
sbb
lds
dec
adc
add
ljmpw
push
add
inc
rclb
sbb
sbb
dec
push
fs
js
in
add
jmp
repz
inc
lea
lret
sbbl
push
jno
cli
or
jl
and
and
sarl
adc
add
jle
enter
or
push
sub
and
ret
xor
cmp
mov
jb
add
ja
xchg
pop
addl
sub
and
pop
negb
cmp
mov
shlb
aaa
push
add
push
shrl
add
cmpsl
inc
cwtl
imul
cli
dec
mov
imul
add
movsl
fsubrs
add
scas
inc
loopne
movsb
mov
lods
sarb
loopne
insb
std
inc
sub
jmp
add
hlt
ja
cmp
js
jmp
and
and
hlt
add
inc
cmpsl
pop
out
jle
fmull
mov
lods
ja
stc
pop
mov
or
mov
dec
test
add
test
add
jl
outsl
adc
enter
add
and
or
push
gs
xchg
jecxz
sbb
into
fidivrl
or
jns
push
rclb
lahf
ret
mulb
mov
aas
add
and
push
dec
aam
add
or
add
mov
mov
cmp
seta
or
add
rcr
lret
mov
paddw
enter
hlt
cmp
ret
add
daa
js
xchg
mov
imul
enter
add
cld
test
xchg
add
lock
add
fwait
cmpsl
and
ret
push
inc
xor
pop
aad
inc
mov
and
lods
or
enter
daa
aad
mov
mov
add
xor
adc
jecxz
add
xchg
lea
outsb
dec
push
scas
fadd
pop
sbb
test
test
push
cmp
int
add
movsb
outsl
popf
pop
cwtl
dec
inc
lock
fidivrl
pop
loop
out
add
mov
or
fs
cmp
cmp
mov
and
pop
xor
inc
pusha
cmp
pop
mov
lods
push
movsb
xor
movlps
loop
mov
xchg
scas
jns
add
jl
xchg
jb
sahf
xor
xor
mov
pop
push
in
lods
test
jmp
pusha
and
add
sbb
pusha
ja
adc
add
ljmp
outsb
dec
mov
gs
ja
std
push
jmp
insb
mov
add
ss
add
fisttps
and
dec
loopne
sub
pushf
add
cmp
in
xchg
nop
mov
imul
pop
ss
mov
out
dec
cwtl
pop
add
in
andb
xor
test
cmp
push
xlat
xchg
fsts
aas
sbb
add
push
adc
inc
cltd
xor
mov
lock
movsl
mov
xchg
add
daa
lods
enter
or
dec
jb
lahf
addr16
bound
sub
adc
push
jecxz
xchg
or
lods
jo
xchg
fwait
cmp
cmp
add
testb
sbb
jp
iret
in
and
mov
or
test
push
cmp
add
in
into
mov
mov
shll
add
lcall
sbb
hlt
outsl
jg
add
std
and
mov
pop
or
add
inc
pop
scas
and
add
or
ret
add
out
out
shlb
lret
out
rorl
ret
stos
cltd
pop
or
inc
mov
push
mov
out
push
popa
mov
daa
add
push
dec
addl
dec
mov
mov
sbb
sbb
jge
jmp
and
loope
imul
rolb
push
xchg
mov
adc
icebp
mov
sarb
fidivrs
pusha
push
add
pop
into
pop
pushf
ljmp
fisttpl
or
sarb
mov
clc
push
or
mov
pop
sahf
insb
xchg
aaa
test
ljmp
add
adc
es
pushf
sahf
icebp
lock
orb
ret
shrb
lods
divl
notb
arpl
xor
sub
jo
incb
xchg
push
scas
mov
arpl
add
xor
add
pusha
les
lds
mov
mov
sti
add
stos
cmp
add
add
mov
pop
lds
ss
dec
subl
cli
jl
repnz
mov
xchg
pop
cmp
sbb
mov
jmp
add
out
xor
inc
jle
push
lea
add
insb
adc
add
push
aam
cmp
or
cltd
je,pt
sbb
int
ja
test
push
insb
ret
xor
sbb
cmp
xlat
mov
cmp
jbe
add
loopne
add
cld
test
icebp
fadds
popa
cmp
sub
add
mov
test
xchg
dec
xchg
push
rolb
cli
add
ja
inc
add
sbb
js
mov
rorb
jno
lldt
push
add
sbb
mov
sbb
sub
jecxz
lock
add
lds
jnp
add
int3
out
xchg
aas
cmp
je
pslld
lock
iret
shrb
in
or
push
sub
add
ret
sarb
sub
mov
sbb
adc
ficoml
loope
dec
add
int
lahf
add
out
jmp
add
jae
dec
fs
cmc
movl
and
roll
imul
and
jbe
add
outsb
inc
cmp
lcall
xchg
repnz
mov
adc
add
pop
cs
int
in
dec
sub
add
push
je
dec
roll
ja
stos
jp
mov
and
lds
lock
push
sbb
outsl
fdivr
in
adc
in
insb
add
rcr
leave
sub
jne
je
out
cld
pop
movl
sub
push
out
inc
testl
cld
push
cmovae
push
add
sub
ss
push
pop
andb
adc
movb
mov
lahf
xchg
inc
bound
es
mov
push
loopne
in
push
jp
cmp
xchg
cmc
xor
or
mov
aas
jge
scas
xchg
sub
iret
and
add
orb
push
faddp
push
xchg
inc
cs
xchg
mov
pop
rorl
les
sub
pop
sbb
or
adc
pop
shll
inc
mov
dec
jo
and
mov
cmpsl
xchg
scas
inc
add
inc
pop
adc
cmpsl
loope
inc
sbbb
insb
xchg
ret
xchg
or
fists
or
out
fidivl
mov
mov
push
add
push
push
fcoms
sbb
push
jecxz
adc
add
std
fsubs
xchg
into
jns
jp
adc
out
cmp
pause
mov
rol
sti
pop
bound
mov
xchg
je
shlb
fs
jge
adc
repnz
jle
loope
add
dec
or
mov
fmuls
add
shll
xchg
lock
popf
push
mov
xor
add
mov
mulb
and
or
rorl
inc
inc
into
sub
fsubrs
push
or
mov
mov
push
inc
dec
cmp
gs
dec
sbb
cltd
dec
shll
loop
jo
ds
adc
add
les
loop
aad
xorb
repz
jmp
and
adc
cwtl
jae
test
fsubr
inc
xchg
in
fistpll
and
lahf
jbe
and
imul
aaa
mov
pop
adc
dec
outsl
in
and
sub
dec
pop
mov
rorb
jmp
inc
out
pusha
push
xor
sbb
jg
cmp
lret
cmpl
add
loope
mov
in
or
jp
push
add
imul
adc
or
shlb
push
push
add
push
in
pushf
push
stc
pop
int
mov
daa
jbe
push
cmp
add
mov
movl
insb
jo
fwait
outsb
fisubs
adc
popf
xchg
lret
inc
popa
mov
es
hlt
jo
loop
or
push
sbb
clc
adcb
adc
nop
xor
adc
jmp
test
subl
inc
xchg
ljmp
fptan
mov
mov
repz
cld
or
push
mov
adcb
lret
adc
dec
mov
pop
adc
inc
fmuls
cmp
jge
push
stc
cmc
xchg
lods
mov
xor
cwtl
inc
add
push
pop
sub
add
shl
xor
sahf
push
inc
or
lahf
inc
mov
add
sbb
mov
js
pop
add
addr16
or
mov
or
cmp
nop
lahf
dec
mov
mov
shlb
cmp
dec
add
shrb
add
inc
pushf
lods
push
call
cli
cmp
sbb
sbb
mov
mov
dec
sbb
xchg
test
sahf
xor
jno
ffree
add
lret
leave
cmp
or
mov
jo
mov
sbb
push
mov
outsl
sub
les
cmpl
dec
add
in
push
mov
loopne
bound
movsb
xchg
jge
pop
sbb
cs
pop
mov
mov
cmp
aas
push
add
mov
stos
jno
popf
jl
cmp
push
add
inc
inc
arpl
std
add
test
je
add
mov
popf
icebp
mov
arpl
sbb
stos
fisubl
add
xchg
aaa
stos
addb
add
jae
pop
add
mov
add
push
inc
mov
jbe
xchg
dec
xor
sbb
mov
ret
cmp
cmpb
lcall
xchg
imul
pop
ret
scas
lock
popf
dec
adc
jbe
jne
insb
pop
addl
hlt
pop
pop
xchg
xchg
inc
inc
or
rorb
add
xor
dec
out
lahf
xor
dec
fnsave
add
mov
mov
add
xlat
cwtl
inc
in
pop
pcmpeqd
adc
aas
popf
sbb
jmp
cmp
out
ret
repnz
add
rclb
xor
cld
stos
push
std
clc
jbe
adc
iret
hlt
andb
cli
pop
add
shlb
inc
inc
arpl
jge
add
jo
das
stos
lret
push
nop
jb
imul
sbb
adc
xchg
pop
push
js
pop
sbb
stos
stos
test
ss
xchg
add
dec
push
in
push
add
in
pop
jmp
or
pushf
adc
mov
or
test
cmp
jns
push
push
sbb
stos
inc
dec
inc
and
pushf
push
int
xor
xchg
sahf
pop
aam
lcall
pop
add
mov
dec
fmulp
and
jp
lods
shr
push
adc
xchg
mov
xchg
mov
dec
inc
mov
inc
in
leave
pop
fwait
dec
mov
xchg
nop
xchg
jo
rclb
add
xchg
xchg
test
adc
jo
je
pop
or
subl
or
rol
hlt
cli
and
pop
loope
lret
icebp
sbb
inc
mov
leave
fiaddl
hlt
lods
pusha
gs
mov
mov
test
inc
inc
jl
lods
xor
xor
scas
popl
insb
lock
inc
pop
cmp
mov
adc
add
or
outsl
stc
add
pusha
inc
cmp
mov
xorl
into
mov
push
mov
loope
adc
xor
out
pusha
add
imul
jbe
scas
nop
test
add
adc
lock
xchg
pusha
adc
pop
stc
add
mov
test
jne
sub
fwait
dec
dec
push
push
test
repnz
or
jb
jo
jp
pusha
jne
enter
xchg
arpl
outsl
and
pop
push
dec
repnz
out
idivl
cmp
lahf
sbb
dec
js
pop
cmp
cwtl
xorb
lret
adc
test
jp
xchg
xor
dec
xor
mov
mov
add
jmp
xor
sti
xor
sbb
mov
mov
icebp
xor
add
xor
shrb
test
push
jp
and
outsl
in
mov
sbb
lods
mov
repnz
add
lcall
jns
add
lahf
or
xlat
mov
jge
add
orb
lods
or
dec
jb
pop
stos
lock
dec
xor
lea
adc
cmpsl
das
enter
xchg
add
fnstsw
adc
inc
xchg
push
inc
or
add
enter
add
movl
into
loope
aad
addr16
dec
sub
pusha
out
mov
mov
xor
out
dec
add
out
add
xchg
sbb
add
loop
cmc
cmp
add
loope
rol
mov
mov
and
add
leave
dec
pop
inc
mov
pusha
das
jmp
add
pop
mov
iret
shl
and
fldl
mov
mov
xchg
push
push
mov
pop
adc
cmp
std
popf
sub
stos
test
xor
xor
lods
dec
into
jl
sub
cli
mov
rclb
or
xor
inc
sub
aaa
and
dec
and
movb
jno
inc
xchg
jb
inc
and
mov
lods
js
xor
add
loopne
xor
pop
and
sysexit
adc
and
add
and
daa
mov
sbb
insl
add
ja
jecxz
or
ljmp
scas
testb
sbb
icebp
ss
rorl
add
adc
push
or
mov
rorl
sub
fistl
add
cwtl
repz
mov
inc
cmpb
ret
inc
into
push
sbb
mov
dec
mov
lock
int3
add
cli
sahf
adc
add
add
test
push
inc
mov
add
jg
mov
arpl
in
lds
push
push
mov
mov
pusha
hlt
xor
sub
add
sub
add
ljmp
andb
aas
pop
or
jge
mov
add
lret
cmpb
xchg
js
push
adc
rclb
push
ljmp
pop
cmp
jo
inc
adc
push
xor
scas
aam
pushf
xchg
pop
fstl
xchg
orb
popa
mov
cs
adc
jae
lods
push
insl
aad
stos
rolb
jg
mov
outsb
xor
push
test
fcmovbe
add
dec
mov
out
jmp
push
fnsave
pop
xchg
xor
cmp
mov
lea
push
and
pusha
sub
data16
add
pop
cmp
xchg
rorl
mov
or
add
mov
cmp
lahf
add
stos
arpl
mov
cwtl
sti
push
loopne
fiadds
js
push
add
sub
les
and
pop
inc
dec
and
sub
add
test
mov
cmp
add
add
dec
test
mov
mov
add
scas
daa
cs
in
cld
ret
add
test
mov
xor
mov
sbb
mov
mov
sub
addr16
ret
and
add
insl
push
dec
stc
sub
xor
dec
push
cmp
jl
inc
lock
add
rol
enter
in
mov
jecxz
adcb
inc
clc
je
add
jb
hlt
pause
adc
das
pop
or
dec
cld
push
divl
jmp
lcall
push
or
popa
push
add
mov
cld
jo
jnp
mov
es
les
push
enter
jp
mov
add
iret
jg
out
in
jecxz
es
mov
pop
push
xor
lock
incl
dec
rcr
pop
mov
aad
dec
mov
sbb
sbb
inc
mov
xlat
push
cmp
mov
aas
int3
add
push
nop
js
lds
inc
nop
pop
or
sbb
dec
cmpsb
aaa
int
mov
add
fimuls
xchg
adc
std
inc
pop
es
xchg
inc
in
es
pop
roll
xor
stc
mov
push
ret
loope
mov
enter
add
mov
rol
cwtl
sti
int3
push
loopne
pop
jp
sbb
sbb
rclb
and
and
test
mov
jno
adc
inc
js
push
in
clc
sub
xchg
adc
dec
sbb
rol
fisubl
or
pop
ljmp
stos
jmp
cmp
addl
xor
pop
push
rclb
add
mov
mov
sub
and
mov
add
lea
push
fcmovu
push
dec
mov
aam
test
mov
cwtl
iret
mov
mov
cmp
xlat
cmp
dec
stc
bound
fsubl
inc
sbb
inc
xor
ljmp
bound
add
outsb
bound
ss
mov
and
jnp
jb
subl
in
push
adc
inc
add
xchg
inc
sarl
hlt
sub
ljmp
push
test
ss
adcb
and
scas
fwait
dec
rcll
mov
and
lcall
ret
call
pop
xorl
cwtl
xor
push
mov
loopne
shl
nop
pminub
adc
inc
xor
movq
pop
jecxz
xchg
in
mov
repz
jne
outsl
pop
repz
adcb
in
cli
cmp
mov
mov
movsl
jge
push
in
cwtl
popa
mov
call
add
test
fimull
loopne
in
insb
add
xchg
mov
rcl
lret
push
mov
add
adc
testl
add
loopne
dec
lcall
cmp
push
fcomps
add
movsl
pop
push
nop
mov
mov
mov
test
fwait
add
mov
sbb
push
cmpsb
aas
mov
add
cld
sub
popa
ret
add
jmp
sbb
xchg
lds
faddl
or
push
adc
addl
mov
sbb
and
clc
dec
clc
cld
je
cld
incl
mov
or
mov
xchg
add
clc
lods
mov
mov
push
sbb
inc
add
mov
mov
scas
sbb
pusha
andl
xchg
and
ret
add
xchg
add
sub
xor
or
cmp
sti
fisttps
arpl
loopne
add
xor
jl
leave
stos
aad
pop
test
shlb
jl
clc
dec
dec
sti
ljmp
in
xor
mov
push
and
lret
sub
pop
movsb
push
les
sub
or
jne
rorb
inc
cmpsl
orb
in
in
or
or
sbb
mov
lods
dec
test
lods
mov
cmpsl
fimull
int
mov
add
repz
xor
loopne
xchg
push
arpl
js
sbb
pop
xlat
xchg
sub
mov
dec
out
nop
testl
sbb
dec
int3
lahf
iret
test
or
fisubl
adc
nop
push
mov
out
and
jbe
mov
bound
lea
adc
and
outsl
sbb
test
sub
cmp
xchg
add
and
movsl
je
cmp
gs
int
xlat
fwait
aaa
decl
add
shlb
cmp
pusha
sub
pusha
lds
add
pusha
xchg
adc
mov
or
inc
or
xor
movsl
pop
popf
add
int3
sub
sub
je
fs
test
or
repnz
mov
scas
in
jnp
add
fimull
fstpt
aaa
or
and
push
daa
xor
inc
ss
mov
jnp
enter
sahf
add
mov
stos
pop
mov
and
js
scas
dec
pop
jle
push
and
xor
daa
adc
ficoms
out
push
sub
in
dec
lahf
clc
cwtl
dec
mov
cmp
mov
pop
add
leave
sbbl
dec
rcl
fiaddl
sub
std
out
dec
int3
jle
push
mov
dec
push
dec
xorl
cmpsb
pop
ffree
mov
sbb
adc
add
lods
fwait
xchg
jbe
test
inc
adc
fcmovu
les
in
cmp
call
cwtl
call
dec
xlat
and
stos
fistps
pop
mov
sbbl
mov
test
or
dec
mov
aaa
jbe
jne
xchg
faddl
lcall
fsts
and
mov
xchg
and
pusha
sbb
test
divl
dec
mov
test
and
xchg
and
imul
lret
add
and
mov
mov
dec
jns
nop
dec
lret
lahf
mov
push
dec
sub
or
add
mov
leave
test
push
test
in
xor
adc
pushf
push
xor
or
push
les
inc
pushf
pop
ds
adc
and
out
or
lret
mov
lock
test
mov
push
aas
pushf
mov
mov
push
arpl
sub
inc
add
fdivrs
mov
add
fldl
mov
jecxz
addr16
sub
enter
xor
fsubs
xchg
xchg
mov
arpl
adc
jne
xchg
cmovnp
inc
pop
dec
or
push
add
mov
stos
fimuls
pop
jnp
xchg
clc
pop
push
les
movsl
push
add
pop
xchg
ljmp
hlt
jne
xchg
push
daa
fldcw
nop
or
js
push
sbb
or
xchg
xor
xorb
xor
push
add
sub
aas
add
shlb
fnsave
cmp
lock
negl
lods
adc
movsb
daa
mov
mov
sbbb
jg
add
adc
cli
call
rolb
pop
hlt
add
ja
clc
xchg
cli
add
mov
cmp
gs
popf
aam
sub
shl
shrb
add
test
pop
push
xor
out
adc
adc
add
pop
jp
xor
ja
sbb
popf
inc
orl
mov
add
repz
add
in
outsl
pop
lods
xchg
mov
adc
out
and
sbb
push
add
insb
aam
out
pop
outsb
in
xor
mov
hlt
inc
or
jbe
test
inc
add
xor
mov
ds
addb
dec
incl
push
fnstenv
repz
adc
lods
push
je
push
les
or
add
mov
outsb
cltd
sti
pushf
adc
popf
mov
inc
add
inc
jp
test
xor
add
mov
rolb
jae
arpl
xor
lods
rolb
xor
pushf
cmpl
loopne
xchg
stc
popf
sbb
push
ds
orb
jecxz
hlt
call
add
cmpl
push
inc
add
adc
or
jo
mov
outsb
and
pusha
test
sub
movsl
xor
dec
xchg
pop
xor
xchg
dec
sbb
dec
prefetch
or
adc
hlt
add
push
or
outsl
sub
loopne
test
stos
je
lret
push
mov
xchg
jno
xchg
cmp
inc
sbb
push
push
xor
or
outsl
lds
add
adc
dec
mov
push
lods
pop
int
loope
xlat
add
mov
dec
adc
cmpsb
lods
scas
popa
lahf
push
xchg
add
jno
lock
bound
std
shll
cmp
adc
add
aaa
rcll
dec
rcrb
jb
push
lods
rolb
add
pop
repz
dec
sti
inc
mov
scas
mov
fadd
xchg
inc
bound
nop
sub
addb
mov
add
mov
dec
test
adc
xchg
addl
mov
inc
add
comiss
inc
or
bound
add
sarb
inc
xorl
jnp
int
and
fnsave
shll
loope
adc
rep
or
jg
imul
mov
imul
xchg
aas
in
xchg
pushf
or
mov
aaa
sbb
cltd
mov
mov
pop
add
in
sbb
mov
cmc
repz
add
xchg
or
andl
ss
xchg
jl
push
inc
fiadds
lea
outsl
pop
dec
cmp
mov
dec
add
int3
adc
inc
or
adc
add
add
xchg
jns
jae
rolb
and
or
in
pop
cs
js
jb
add
loope
xchg
sub
mov
jg
and
ds
sbb
imul
and
sub
or
lret
adc
inc
std
inc
aam
inc
mov
sub
adc
imul
pop
sbb
jp
jno
or
aam
jbe
inc
inc
int
or
push
int
xchg
add
mov
test
add
aas
nop
and
std
pop
les
cpuid
stos
pop
dec
scas
add
xchg
xchg
pushf
or
cmp
int3
push
sbb
xchg
sub
adc
popa
rcll
into
mov
add
pop
jne
roll
add
lcall
inc
mov
mov
xor
loop
jbe
fiaddl
aaa
addl
add
jae
les
add
pop
mov
xchg
ss
dec
cwtl
ljmp
jbe
and
jle
aam
push
cltd
popa
push
xchg
push
push
pop
lahf
aad
xlat
insb
dec
sub
push
mov
shrl
imul
push
mov
aam
filds
iret
outsb
sbb
add
jae
and
ja
add
je
jecxz
pop
inc
stos
lcall
and
lock
push
aas
popa
push
mov
add
jg
jge
stos
iret
data16
xlat
inc
sbb
add
sbb
sub
inc
add
cmc
or
cmp
dec
das
sub
out
xchg
orb
roll
inc
mov
adc
adc
in
stos
add
inc
ret
insb
ja
movsl
call
mull
fsts
out
jg
in
dec
xchg
ss
filds
cld
push
jmp
pop
push
push
lret
or
sahf
std
lods
add
dec
rorl
rcl
mov
test
add
mov
inc
add
pop
sarb
test
aas
ljmp
addb
ja
add
dec
push
loop
mov
add
and
aaa
clc
xchg
movsl
cmpsb
add
dec
pop
and
dec
daa
add
lods
int
pop
out
pop
test
adc
xor
mov
add
jo
add
imull
inc
pop
add
in
jne
mov
hlt
push
push
and
mov
and
fisubrs
sbb
lcall
add
into
mov
jae
mov
jmp
jl
lds
mov
add
jo
mov
es
add
ljmp
jo
push
scas
sub
or
cmp
popf
inc
ret
cld
push
add
xlat
loopne
enter
add
push
fs
sti
dec
mov
mov
mov
add
dec
lret
jle
rolb
cmp
inc
cmc
sbb
xlat
icebp
mov
sbb
cmovno
push
cmc
add
lea
jmp
aas
mov
or
mov
arpl
dec
sbbb
aas
repnz
add
or
push
push
leave
mov
hlt
add
mov
aam
add
loope
xor
mov
data16
pop
or
adc
mov
xchg
lock
mov
in
xor
rorl
pushf
dec
xchg
sbb
push
jns
addr16
adc
cltd
xor
rclb
imul
jl
pop
aad
sub
xchg
ret
psubq
rolb
out
sbb
adc
pusha
adc
dec
int
ret
and
sahf
mov
sar
mov
dec
in
lea
outsl
adc
dec
mov
dec
stc
add
lods
dec
jl
les
add
xchg
loop
leave
js
add
ror
xchg
mov
add
aas
adc
add
popf
scas
jo
push
add
mov
cmp
or
xor
popw
nop
sub
inc
int3
sbb
pusha
or
jge
and
fwait
cld
push
xchg
dec
add
aam
imul
push
aas
ret
nop
in
test
in
inc
mov
loop
or
add
out
add
pop
aaa
adc
in
fidivrl
out
mov
rcr
sahf
pop
fcoms
sbb
addb
jge
push
test
pop
sub
and
sahf
hlt
add
xlat
dec
dec
outsb
add
jae
and
sub
lret
dec
push
aaa
ss
mov
orl
pop
mov
arpl
mov
sub
jbe
repz
push
test
in
add
lds
neg
mov
int3
pop
jno
pop
add
loope
repnz
sub
ret
in
loopne
pop
jg
add
loope
jae
push
dec
stos
mov
dec
xor
cmp
aam
xchg
sbb
xchg
add
add
push
stc
cltd
fsubrs
add
lods
xchg
mov
out
fists
addb
shll
add
mov
mov
les
add
mov
mov
sub
fists
xor
jns
dec
add
inc
jo
add
inc
jl
int
stc
pop
add
arpl
inc
hlt
dec
add
pop
addb
mov
popa
sub
aam
mov
mov
cli
stos
add
pop
push
mov
or
xlat
enter
add
cmpl
out
lret
add
adc
xchg
sti
pop
arpl
shr
dec
cmpsl
jo
inc
call
rcll
xchg
loop
add
mov
ja
sbb
jne
lock
dec
cmp
test
rorl
lahf
cwtl
add
mov
jle
push
xchg
scas
mov
orb
ds
sub
sbb
les
in
addb
mov
add
cmp
iret
sbb
add
sbb
loope
frstor
inc
data16
dec
pusha
lods
or
sbb
push
mov
sti
daa
xor
cwtl
mov
push
add
pushf
jmp
add
sub
cltd
call
shrb
and
dec
adc
jge
add
dec
mov
push
cmp
or
xchg
push
sbb
jnp
add
adc
addr16
mov
add
push
jae
inc
js
sbbl
add
ljmp
jl
add
mov
dec
and
in
cwtl
pop
lret
push
jle
cli
xor
jl
add
shl
xchg
pop
or
jp
lcall
xchg
clc
xchg
pop
nop
push
rep
push
repnz
mov
incb
push
int3
inc
test
jecxz
add
dec
cli
xlat
add
or
das
mov
and
packuswb
aad
test
leave
test
cld
mov
int
pop
dec
add
xor
lea
cwtl
jne
out
cmpsl
ret
stos
loopne
add
jnp
and
xchg
jb
add
stos
repz
mov
mov
cli
mov
jbe
test
test
mov
shlb
jne
enter
adc
pop
jnp
and
mov
pop
jl
rclb
pusha
les
add
inc
insl
test
dec
push
and
adc
test
stos
mov
dec
mov
cmp
mov
imul
faddl
cmp
sbb
cmp
icebp
add
mov
jns
jae
ftst
out
loope
aas
faddl
sub
lret
dec
out
add
mov
nop
lret
pop
sub
add
dec
push
nop
mov
rolb
arpl
out
fldcw
addl
aad
or
pop
xadd
dec
add
jo
xor
repnz
xchg
jmp
insl
lods
pop
add
push
data16
nop
add
add
push
pop
lret
cmc
cmp
and
dec
out
xchg
mov
pop
mov
pop
xlat
mov
xor
addb
scas
test
xchg
pop
mov
cld
rclb
cwtl
punpcklbw
pop
subb
xor
fildll
std
mov
or
mov
stos
jo
arpl
roll
enter
sti
jbe
push
add
test
xchg
movsl
pop
aam
das
push
aaa
jae
jl
repz
in
ds
pushf
adc
jno
sti
lcall
cmp
cmpl
iret
fcom
sahf
xor
cwtl
stc
shr
push
cmp
lods
bound
add
std
xchg
mov
pusha
mov
add
add
or
sbb
sbb
push
fcmovne
dec
add
push
mov
data16
stos
addb
mov
add
mov
push
call
daa
jbe
add
push
shl
mov
cmc
orb
sub
sarb
mov
adc
testl
adc
pop
add
dec
and
loop
or
adc
fwait
test
jg
and
mov
xlat
adc
inc
jns
dec
jecxz
add
fistpl
lea
out
add
xor
lock
ret
lods
fwait
js
cwtl
es
add
int
popl
push
dec
into
push
mov
test
leave
pop
sarl
mov
add
pop
add
shlb
cltd
fwait
add
jle
sbb
cmpsl
and
push
icebp
jmp
sub
inc
xchg
add
or
ficomps
call
xor
xchg
repnz
xchg
in
pop
mov
add
lock
imul
fwait
xchg
add
insl
in
in
movsb
jo
cmp
xorb
dec
out
jecxz
enter
and
add
jge
out
jno
mov
adc
frstor
jb
jbe
mov
sahf
mov
add
xor
add
xchg
adc
add
add
subb
aaa
sub
popf
test
aas
sbb
fadds
pop
lock
add
mov
sub
nop
or
jle
lods
xor
in
aaa
es
pop
cmp
inc
call
jg
add
rolb
shll
xor
sub
js
sub
sub
add
xor
out
and
push
insl
mov
cmp
pop
sbb
subps
cmp
mov
push
add
ss
bound
inc
repnz
and
jo
aad
pusha
mov
ja
lcall
pop
int
sub
testb
lock
mov
add
stos
bound
xchg
imul
pushf
or
push
gs
dec
int3
lods
fiaddl
mov
idiv
push
xor
dec
sti
push
inc
les
pop
movsb
xlat
int
sahf
lcall
adc
sbb
inc
mov
mulb
sarb
xchg
cli
push
add
fucomi
or
int3
filds
pop
cmp
incl
lds
mov
add
xchg
xchg
mov
icebp
loop
sbb
add
adc
inc
pop
push
sub
mov
and
push
mov
sbb
scas
addb
ret
mov
sbb
pop
pushf
out
popf
dec
add
add
sub
push
and
lock
fdivr
loope
add
add
mov
jb
call
call
cs
add
ficompl
add
xor
lret
add
dec
push
hlt
gs
lahf
jbe
add
xor
pop
ja
pop
insb
xchg
lret
shrl
xor
cmc
out
mov
push
imul
iret
insb
lea
cmp
sbbb
xor
in
loop
xor
inc
sbbb
ja
fs
jl
call
xchg
std
cmpb
and
jb
je
add
pop
in
add
insb
xchg
rcrl
repz
shlb
push
pop
inc
jle
mov
dec
mov
mov
cltd
lea
sbbb
clc
rclb
cmp
stc
pop
divb
add
icebp
int
jae
call
hlt
sub
mov
add
insb
push
pusha
mov
out
iret
pusha
repnz
jge
or
jle
push
je
cld
sbb
nop
add
sub
add
mov
push
shl
movl
mov
sub
inc
add
jbe
ret
out
loop
pushf
jo
aas
outsl
jmp
mov
pop
out
lock
inc
imul
xchg
pop
inc
outsb
push
push
mov
lods
sub
dec
mov
ret
aad
fwait
sbb
aas
xchg
pop
or
jp
dec
in
add
dec
out
add
jle
in
dec
cmp
lret
sar
loopne
jb
push
mov
jns
mov
add
add
scas
add
lret
sub
lahf
add
and
mov
aad
pop
jmp
adc
mov
dec
testl
sti
scas
mov
fdivrs
movsb
mov
out
enter
adc
ficompl
rclb
js
test
pop
mov
mov
jae
mov
das
test
pop
sub
loope
loopne
add
mov
push
add
pop
xor
mov
inc
mov
cmpsb
cli
pop
or
jl
mov
int
pusha
test
enter
add
add
cmp
push
add
mov
mov
lock
jl
fcoml
xor
sub
pop
adc
movsl
movsb
add
in
ret
adc
pop
icebp
xchg
add
sbb
add
mov
adc
adc
aad
in
add
sbb
aam
repnz
sub
addl
lret
add
sub
imul
repnz
cltd
rorl
shlb
test
push
and
inc
nop
sbb
stc
sub
dec
xchg
mov
sub
pop
cmp
pusha
shlb
add
loopne
mov
push
xor
adc
jb
or
xchg
sub
add
jecxz
and
roll
and
mov
mov
sub
add
orb
sahf
repnz
mov
cli
roll
add
addr16
sbb
pop
test
stos
add
jp
into
lods
test
stc
fadd
inc
xor
lret
in
out
dec
push
lock
push
lcall
or
shlb
cmp
pop
and
clc
and
pop
sbb
xchg
add
fs
aas
test
adc
daa
pusha
loope
sub
js
scas
sarl
mov
dec
test
jnp
arpl
in
mov
lods
or
cmp
adc
clc
pop
sub
jmp
mov
push
dec
incb
cmp
iret
notl
sbb
inc
xchg
inc
nopl
cld
int
adc
jg
out
sbb
or
inc
addb
mov
jo
inc
mov
lahf
cmpsb
adc
add
cmp
sbb
fsts
sub
mov
popf
push
mov
int3
dec
loope
push
out
mov
sbb
mov
add
scas
sub
leave
insl
sbb
movsl
dec
shlb
dec
mov
sbb
nop
jbe
jb
sete
jp
or
dec
stos
repz
mov
mov
add
sbb
and
jg
testb
mov
xor
add
popf
fstp
jle
mov
mov
rolb
dec
mov
cwtl
cmp
dec
out
sub
rclb
inc
xor
fmull
sbb
push
cld
xor
or
call
add
add
ja
fstps
sub
lods
ret
or
sbb
and
push
gs
cmpsb
xor
movsl
jp
in
push
insl
push
push
rcl
push
pop
movsb
add
data16
pop
xchg
xor
sbb
ljmp
pop
hlt
stos
popa
add
lock
mov
lods
outsb
sbb
stos
cmp
aam
aad
pop
das
in
jo
cld
inc
mov
sarl
js
inc
in
cmpsl
cmp
jge
incb
and
lret
inc
addr16
add
add
add
add
stc
sbb
mov
lds
sbb
inc
add
cmp
lea
xchg
jmp
call
push
inc
aas
pop
arpl
add
leave
push
xchg
push
push
test
inc
ret
sbb
pop
push
and
inc
lock
pop
gs
bound
adc
aaa
scas
dec
sbb
test
pusha
test
iret
xchg
int
mov
dec
std
sbb
test
lahf
sbb
mov
push
scas
inc
mov
add
xor
in
mov
push
aam
dec
loopne
cmp
test
mov
iret
mov
shr
sub
push
adc
lcall
ljmp
and
ss
xchg
ds
mov
call
adc
mov
cmpsb
mov
fldt
sbb
push
push
add
add
mov
pinsrw
fwait
add
add
inc
lcall
cmp
mov
loopne
xor
scas
fistpl
add
sub
mov
sbb
add
jnp
or
mov
cmp
hlt
loopne
add
jne
pop
cmp
push
jo
fsubp
jno
mov
inc
mov
movsl
fildl
push
mov
aam
xorb
pushf
loopne
mov
aas
pop
push
std
leave
mov
inc
push
scas
cmc
pop
and
pusha
dec
hlt
cmpsl
popl
cmpsb
mov
loop
xlat
daa
adc
add
outsl
out
mov
jno
adc
sti
sti
pop
dec
and
out
psubw
fstpt
pushf
jns
inc
add
popf
aad
hlt
addr16
add
jmp
addl
push
int3
pop
or
push
les
xor
sub
and
add
push
outsl
inc
sbb
dec
jbe
add
push
popf
jg
cs
cmp
sbb
popa
jb
xor
int
push
loope
inc
movsb
cmp
aas
and
sub
ljmp
xor
push
cld
addb
jb
pop
out
push
pop
mov
mov
sbb
sbb
loope
push
sbb
add
mov
adc
rcl
das
push
shl
add
mov
fwait
loopne
addr16
sub
aam
jae
and
dec
pop
inc
sbb
dec
pop
adc
in
mov
push
xchg
mov
or
inc
test
mov
movsb
mov
aas
add
xor
les
dec
mov
add
mov
mov
mov
add
jb
test
lock
push
jge
xchg
iret
jmp
cmp
flds
arpl
icebp
xor
pop
aam
add
and
fwait
out
lahf
xlat
add
outsb
sub
or
rorl
repz
jb
loopne
add
sub
jp
daa
mov
mov
repz
inc
clc
lock
fadd
sbb
ret
sbb
dec
mov
and
cmp
mov
dec
sub
fs
rorl
and
mov
sarl
add
in
add
xchg
aam
int
xor
sbb
leave
jnp
cmpb
push
pushf
jno
jp
repnz
in
lcall
cmp
je
xchg
faddl
push
adc
xor
add
jl
sbbl
pop
cwtl
sbb
cmp
daa
add
mov
xorb
xor
sub
dec
mov
repnz
in
pop
test
and
adc
clc
xchg
add
fadds
mov
movsb
clc
shrl
push
inc
pop
add
imul
fmull
repnz
push
lahf
lods
add
push
scas
ret
add
in
xchg
orb
or
pop
cmp
add
les
jp
xchg
stc
test
call
ret
stos
pusha
lods
imul
clc
jp
orb
adc
push
jp
jae
add
lea
push
add
popa
sbb
xlat
add
mov
icebp
lret
add
sbb
add
les
sarl
and
pop
add
rclb
add
fsubrs
pop
pop
mull
aaa
push
out
shl
ljmp
push
mov
loopne
mov
add
push
rorb
jecxz
leave
xlat
ret
adc
or
mov
xchg
sbb
mov
xchg
aas
sbb
cmp
shr
xor
fcomp
clc
add
xchg
scas
or
cmp
ret
loopne
jno
call
ds
mov
mov
xchg
nop
inc
push
jp
xorl
mov
or
mov
pop
sti
addb
and
test
xchg
cmp
andb
les
xlat
add
push
dec
push
cmc
popf
xor
add
or
xchg
add
or
or
leave
cmp
popl
ret
add
xchg
fs
mov
inc
stos
cmpb
test
adc
cli
je
push
das
fwait
xchg
cs
mov
or
push
pop
xlat
pop
add
aaa
mov
stc
cltd
add
lock
cmp
sub
dec
hlt
in
cmpb
scas
jns
icebp
loope
xchg
mov
ds
add
pop
lahf
mov
ret
lds
adc
sub
out
inc
add
mov
xchg
push
insl
mov
mov
std
test
fiadds
daa
add
cli
hlt
lahf
stos
mov
add
and
mov
shl
inc
jge
add
les
jbe,pn
fldenv
mov
out
popf
jle
mov
push
fsubrs
stc
cmp
orb
pshufw
mov
rolb
ljmp
enter
shlb
jno
mov
mov
cwtl
xchg
and
sbb
imul
aas
sahf
xchg
xchg
adc
jns
add
loop
sub
xlat
imul
out
mov
loope
mov
and
xchg
push
mov
repz
add
xor
call
insb
cld
add
mov
add
pop
cmpsl
pop
ret
call
in
test
rolb
aam
fs
sub
add
jns
fidivs
fnsave
cmp
inc
add
lea
es
xchg
dec
cmp
incb
cli
and
cmp
xchg
icebp
mov
mov
fsubr
lods
pop
add
cli
mov
or
mov
data16
add
and
and
ljmp
add
pop
xor
dec
mov
stc
rol
or
jge
sbb
dec
push
sub
add
mov
sbb
xchg
push
push
lods
jp
sub
pop
fstpl
daa
sbb
xchg
lret
ss
mov
mov
loop
mul
add
sub
scas
imul
and
adc
mov
flds
ffreep
popa
sahf
adc
roll
sub
add
rol
lods
es
fdivs
loop
pop
mov
fldcw
lret
jmp
hlt
pop
faddl
push
scas
adc
adc
jae
jl
cmp
popf
xchg
fwait
add
sbb
mov
jo
jecxz
dec
sub
pop
sub
adc
stos
add
hlt
xor
adc
add
add
mov
int3
add
mov
dec
addb
or
leave
or
lret
add
sub
xor
pop
call
push
pop
jecxz
push
add
stc
adc
xchg
mov
int3
mov
and
in
jo
mov
cmp
rcrb
mov
je
cmp
dec
sub
cmpb
loop
push
mov
lods
pushf
lods
mov
fmull
add
mov
ss
filds
or
addb
and
adc
test
addl
push
cmp
pop
xor
mov
test
loope
pop
or
sbb
test
mov
scas
inc
inc
rcll
push
dec
pushf
add
movsl
cwtl
sbb
insl
add
je
imul
push
xor
loopne
das
cmp
inc
add
dec
daa
movsb
mov
outsb
sbb
ja
pop
jae
cwtl
pop
push
push
mov
mov
or
jge
bound
push
add
add
cltd
out
dec
jne
xor
pop
mov
addr16
push
add
lea
aaa
cmp
dec
nop
dec
add
ffreep
add
popf
jae
fiaddl
add
daa
mov
clc
ret
xor
std
push
bound
mov
add
lret
aam
enter
inc
addb
inc
inc
and
icebp
inc
mov
xor
repz
add
or
mov
sub
mov
bound
lret
lahf
icebp
inc
fwait
cmp
sbb
cmp
popa
jl
stc
sarb
add
jmp
xorl
fwait
iret
roll
lods
mov
add
xchg
xchg
jmp
inc
aad
cmp
insb
repz
push
inc
add
pop
inc
xchg
mov
outsl
rorb
jb
or
push
mov
enter
pop
mov
xchg
nop
xchg
dec
sbbb
inc
inc
fcomps
pusha
rorl
xchg
jns
outsl
or
cmpb
je
add
lret
jo
gs
xchg
dec
inc
and
pop
add
stos
inc
mov
lock
shlb
push
fbstp
mov
cmpl
mov
cmp
rorb
arpl
adc
nop
mov
bnd
dec
inc
cld
daa
xchg
pop
xor
aas
insl
std
mov
add
sbb
addr16
and
fdivl
sbb
jecxz
push
or
push
adc
daa
xor
xchg
rcl
fcompl
addb
mov
push
stos
mov
add
jecxz
sub
dec
std
in
xchg
sbb
jmp
add
lea
xchg
jo
es
ss
imul
xor
pop
adc
xchg
shlb
fildll
in
cwtl
cmp
add
sbb
sub
out
sar
xor
mov
shlb
mov
and
aaa
sahf
add
add
cmp
je
push
leave
cld
jmp
xor
pop
mov
roll
add
sbb
mov
jb
sub
mov
xchg
rcll
mov
add
and
cmpsb
insb
jle
mov
pop
push
clc
adcb
add
mov
pop
mov
and
loopne
cmp
repz
es
push
mov
mov
dec
fs
or
jo
pop
popf
add
cwtl
je
nop
mov
dec
add
or
lds
call
mov
loopne
sbb
scas
js
or
jmp
sbb
or
pop
mov
sbb
cmp
push
cmp
push
out
add
push
add
insb
dec
loop
mov
jb
dec
addb
test
sbb
add
or
add
aam
add
fcomip
addl
cwtl
test
call
les
je
mov
and
mov
push
push
push
sti
call
outsl
movq
pop
mov
inc
orb
add
mov
js
ffreep
rclb
arpl
mov
faddl
test
mov
sbb
sub
ret
test
sub
addl
mov
cli
loop
pop
outsl
add
ret
sbb
inc
repnz
mov
sub
add
loopne
jge
out
pushf
mov
mov
call
add
xchg
push
push
mov
sub
lret
jl
sub
aad
popa
ja
mov
pop
adc
sbb
jnp
xchg
lock
inc
pop
js
cmp
add
aam
jmp
sbb
sti
mov
test
push
sub
and
das
push
add
xchg
add
cmp
ja
pusha
jecxz
xor
shlb
and
dec
lods
adcb
add
mov
mov
imul
add
sahf
and
and
adc
in
daa
pop
jnp
loop
ds
lds
fisttpll
mov
pop
xchg
push
mov
cltd
jl
imul
inc
mov
mov
jae
push
mov
test
fbstp
jmp
cmpsl
in
cmpsb
popa
jno
out
xchg
xchg
inc
lock
mov
addb
aad
add
push
lahf
lods
sbb
mov
cli
pop
inc
notb
xor
add
hlt
arpl
ds
shrl
add
addb
repz
shll
cld
mov
faddp
and
movsl
in
lock
iret
clc
pop
dec
roll
inc
int
add
jbe
and
xchg
cli
cmp
pop
sbb
rcrb
jecxz
or
outsl
int3
push
or
insb
xchg
push
sbb
mov
mov
fisubrl
adc
inc
sub
lods
pusha
loope
add
jmp
inc
sub
sub
inc
outsl
jae
jecxz
adc
sbb
int3
stos
sub
cli
js
add
inc
cmpsb
add
add
fcompl
add
in
popa
dec
inc
mov
rcl
xchg
push
add
sub
dec
clc
add
adc
cmp
xor
push
xlat
lods
ret
ret
out
push
loop
outsl
jecxz
push
std
mov
or
xlat
repnz
mov
aam
mov
xor
add
push
jne
rclb
jb
or
dec
dec
les
notb
loopne
mov
cs
imul
jbe
out
rol
pop
cli
in
sqrtps
or
dec
dec
ds
in
add
jne
stos
cs
jp
or
inc
lcall
fs
push
scas
mov
pcmpgtd
ret
repnz
mov
jecxz
sarl
lods
jecxz
fdiv
stos
jp
lock
in
mov
pusha
fldcw
lock
add
stc
gs
imul
add
and
aam
test
sub
jae
cmp
add
outsb
into
and
pushf
addr16
xor
in
add
movsl
cld
rcl
or
mov
mull
lods
push
shlb
add
pop
fwait
and
test
pusha
add
mov
sub
push
cmp
fsubs
mov
dec
dec
cmpsl
pop
and
cli
or
push
sub
fstps
jle
fs
add
jl
scas
cmc
fstpt
cld
out
sub
and
or
jle
data16
pusha
cmp
std
add
icebp
iret
aaa
pusha
push
lcall
lock
add
imul
pop
add
xor
or
adc
orl
lods
cmp
add
addb
or
jno
cmc
ss
out
shl
popf
lcall
daa
call
insb
xor
add
je
jbe
cltd
cmp
cmp
xor
inc
add
jg
popa
adc
shll
popf
push
mov
jb
std
push
nop
inc
and
cld
mov
jo
adc
jae
inc
push
cld
pusha
ja
add
mov
push
mov
insb
or
push
dec
xor
cmp
adc
jo
cmp
sub
imul
fadds
cmp
add
sub
sub
mov
add
test
imul
add
subl
mov
xchg
cwtl
jb
add
cmpsl
aas
xorb
add
pop
adc
and
add
fsubrl
rcrl
jbe
add
pushf
adc
in
jle
cs
cmp
test
add
inc
cli
idiv
shr
or
jge
jp
pop
pop
sbb
fcmovnbe
cwtl
inc
add
xchg
adc
dec
cwtl
inc
ret
outsl
in
sub
mov
jle
add
sarl
adc
insb
daa
stos
add
dec
pop
popa
xchg
cltd
mov
push
pusha
or
idivb
dec
xchg
leave
mov
sbb
lods
icebp
dec
leave
lret
dec
fucomi
inc
imul
mov
shrb
pop
incb
rcrb
push
jge
cmp
fst
nop
aad
in
add
xor
and
orb
xor
xor
cmpb
push
cmp
cs
fs
xor
mov
pop
ljmp
and
mov
dec
lods
js
loopne
pop
rolb
sbb
bound
sub
inc
cmpsb
jecxz
adc
jne
out
sub
mov
pusha
jbe
add
mov
insl
xchg
shrb
nop
mov
lret
addb
jnp
xchg
ret
shr
cmp
add
cmp
mov
dec
push
js
add
xor
pop
xchg
sbb
add
xchg
std
dec
push
sti
in
or
into
add
sub
rorl
dec
xchg
mov
jo
cld
mov
jns
jl
fucom
testl
adc
cmpsb
popa
cld
xor
ljmp
lods
iret
add
cmp
pop
mov
jne
int3
lea
test
fidivrl
scas
pop
add
and
mov
out
add
sbb
inc
cwtl
dec
pushf
dec
add
mulb
outsl
adc
jnp
adc
and
sbb
scas
push
loop
xor
xor
cmp
out
add
sub
lods
out
int
dec
jb
dec
cwtl
mov
add
xchg
mov
movb
push
pop
stos
xor
dec
inc
dec
mov
punpckhdq
mov
jle
sub
jmp
lods
add
sbb
sahf
cmp
cs
das
pop
mov
push
inc
cmc
add
lods
mov
pop
jp
in
sub
dec
movsb
add
sti
xor
pop
ja
enter
cltd
aam
arpl
xorl
mov
lahf
xchg
xchg
in
scas
idivb
pop
sahf
test
push
insb
lods
xchg
inc
mov
sbb
or
shlb
inc
les
dec
mov
xchg
add
mull
lds
imul
popa
je
call
mov
clc
or
jb
mov
stos
sbbb
and
or
mov
clc
aas
pushf
mov
inc
insl
js
sahf
push
add
cwtl
push
pop
add
xor
add
ficompl
rclb
push
in
cwtl
add
mov
mov
into
out
jmp
dec
and
push
adc
addr16
jge
jae
mov
sbbb
pop
lahf
and
outsb
js
xchg
sbb
rcrl
xor
bound
sub
add
cmpsb
arpl
add
dec
orb
out
push
popa
sub
push
adc
add
add
stc
fsts
sub
inc
testl
shr
lcall
add
clc
ret
stos
and
xchg
daa
add
cmpsl
mov
mov
pusha
out
dec
cmovs
sub
jo
and
inc
test
pop
mov
sbb
std
into
pop
add
insl
nop
les
pop
jg
test
pop
push
les
out
xor
stc
loop
push
or
add
xchg
out
loopne
mov
add
push
test
and
daa
xor
inc
mov
imul
mov
out
pop
mov
sarb
flds
leave
in
andl
loopne
jbe
add
push
pop
cmp
int3
enter
sbb
stc
faddp
test
add
add
mov
and
fisttpll
mov
pop
roll
dec
in
push
pop
mov
pop
imul
in
cltd
call
cmc
pop
pop
hlt
pusha
sbb
bound
jle
mov
test
loopne
repz
cli
or
dec
add
sbbl
fcompl
fs
jle
inc
mov
loope
sbb
pop
adc
pop
psubusb
dec
push
sbb
sbb
fstl
xor
xor
aaa
emms
jb
arpl
adc
popf
add
scas
cmp
add
add
add
hlt
subb
movsl
push
addl
cmp
pushf
or
je
xor
mov
mov
fucom
int
sbbb
je
push
push
cmp
pop
out
xchg
pop
lahf
push
sbb
idivl
fdivs
inc
add
or
test
mov
dec
decb
loope
push
mov
adc
and
ss
cwtl
cmpb
inc
cld
push
leave
and
pop
call
xchg
fstp
fcoml
mov
mov
add
adc
jp
push
or
arpl
cmp
fsubrs
add
andl
fwait
inc
mov
add
call
add
iret
cli
dec
rcrb
pop
cmp
xor
sbb
dec
sub
xor
mov
fwait
pop
mov
pop
xlat
mov
dec
jg
clc
hlt
push
iret
and
lock
std
add
rcrb
jbe
scas
sub
rolb
adc
jnp
push
sbb
fmulp
jl
add
out
adc
test
pushf
inc
jo
mov
pop
cmp
add
inc
ja
adc
bound
or
push
xor
add
add
pushf
std
jno
jb
repz
cmp
xchg
cmp
negb
loopne
call
dec
inc
bound
dec
add
loope
dec
xor
outsb
arpl
jle
add
push
test
int3
rcl
mov
sub
outsb
nop
sub
mov
add
repz
test
add
push
add
or
inc
and
cmp
in
adc
test
mov
xchg
cmp
push
sub
movsb
rsqrtps
movsb
or
jl
sbbb
mov
xorl
mov
mov
add
cmp
in
test
sub
mov
stos
stc
push
sbb
out
inc
pop
jecxz
pop
out
or
push
testl
inc
lcall
add
int
stos
push
and
jb
add
insl
fcomp
inc
ret
punpckhwd
add
mov
incl
jo
mov
or
sbb
sbb
sub
add
out
inc
inc
sub
sub
adc
or
pop
fucom
sub
cmp
mov
xchg
lret
les
fadds
test
pushf
lods
jp
in
les
lock
add
push
dec
js
test
xchg
repz
pop
and
icebp
js
out
mov
nop
add
inc
cmp
gs
add
add
ret
loopne
pushf
add
cmp
xor
add
jmp
sub
add
sbb
leave
lods
sbbb
lcall
pop
insb
xor
cltd
pop
shrb
les
add
jae
test
and
lds
add
lock
add
or
sub
adc
loop
outsb
leave
jo
cli
add
fs
add
mov
mov
cmpl
mov
stos
lea
and
les
int3
xchg
sub
enter
pop
sbb
stos
sub
add
iret
icebp
and
stc
fsubl
sbb
cmpsb
xchg
ret
dec
add
mov
in
adc
das
add
dec
iret
cmpsl
or
adc
pop
xchg
add
fcoml
repnz
nop
add
aam
or
arpl
dec
andb
fistpl
push
jp
es
pusha
add
insb
shl
sbb
add
mov
push
dec
xchg
js
test
or
pop
add
in
fisttps
xlat
mov
ds
adc
mov
inc
and
sbb
xchg
lock
cltd
mov
les
add
das
sub
or
mov
or
or
inc
pop
inc
lahf
mov
sbb
movsb
xchg
es
lret
jge
jne
mov
push
mov
or
xchg
rolb
or
pop
cmp
test
xor
je
sub
mov
imul
add
fstpl
adc
inc
dec
out
inc
sub
adc
adc
das
in
mov
cs
lods
lcall
aas
out
xchg
loopne
enter
inc
shlb
adc
test
orl
shl
and
sub
in
pop
pushf
adc
pop
jp
popa
inc
call
cmp
add
ss
test
jecxz
das
lahf
leave
add
pop
movsb
mov
push
add
aad
push
cli
popf
shll
xor
jne
sub
xchg
pusha
ret
aam
adcb
add
push
mov
add
hlt
jp
cs
push
scas
mov
sub
dec
addr16
inc
jo
test
mov
or
xchg
add
and
rclb
cmp
jo
push
dec
int
lahf
mov
nop
imul
notl
sub
cmpsb
pop
xor
or
push
shlb
adc
test
jecxz
add
outsb
add
mov
mov
test
loopne
shlb
iret
flds
add
adc
dec
push
mov
push
pop
xchg
out
insl
cltd
sbb
sub
shlb
add
int
xor
mov
push
push
pop
rcrl
sub
mov
add
push
fs
pop
add
mov
adc
daa
fsubl
inc
stc
mov
add
or
sbb
sti
cmp
adc
or
push
add
push
jge
sub
push
push
sbb
ljmp
mov
addb
add
xorb
xor
loopne
orl
fmuls
cs
test
jno
das
aaa
inc
add
pop
inc
push
aam
leave
test
das
fs
aad
insl
lock
jle
jae
xchg
ja
in
xchg
and
jecxz
add
push
or
cmp
add
add
repz
in
adc
pop
push
mov
inc
and
addl
lock
jl
aad
shrb
adc
add
faddl
sub
adc
mov
rorb
mov
pusha
sahf
push
pop
jecxz
sub
cltd
cmp
add
js
inc
test
pop
pop
popf
add
je
nop
jo
clc
add
sbb
mov
cwtl
pop
popa
add
add
std
push
dec
mov
cwtl
add
cld
and
push
and
sub
push
stc
xor
xchg
pop
orl
lock
and
adc
add
in
adc
mov
fstpl
outsl
push
inc
jb
into
loopne
dec
cltd
add
jg
xchg
adc
fdiv
pop
xchg
sar
adc
dec
and
stos
mov
pop
in
nop
add
jno
mov
loopne
inc
mov
adc
or
idivl
cmpsb
test
jno
orl
subb
mov
shrb
xor
adc
add
jo
sub
pop
movsl
mov
imul
subb
pop
imul
xlat
test
push
or
je
lds
jl
adc
adc
scas
jnp
mov
pusha
shl
nop
popf
mov
add
out
shrl
jnp
mov
jmp
lret
mov
in
andb
adc
mov
mov
mov
jne
cwtl
add
rcr
pop
je
cltd
mov
test
cmp
mov
out
repnz
mov
loopne
lahf
adcb
mov
cmp
sbb
sahf
rcrb
stos
enter
lods
sbb
mov
adc
sub
testb
or
mov
xchg
xchg
push
add
test
cmp
pop
pusha
mov
add
les
repnz
ret
nop
fs
push
jbe
xchg
adc
adc
clc
daa
lea
pushf
xchg
or
inc
cld
lcall
mov
mov
add
sbb
ss
arpl
add
loope
ljmp
jbe
pop
je
inc
add
xchg
pushf
lcall
movsl
shlb
fs
js
push
and
add
and
ret
mov
push
pop
mov
add
mov
add
pop
insl
nop
sub
inc
rcrl
pop
iret
dec
rolb
cwtl
icebp
pop
adc
hlt
pusha
pop
sub
loopne
jns
leave
out
mov
aam
enter
adc
jl
mov
mov
jecxz
loope
inc
lret
mov
in
jl
inc
jno
sub
mov
add
inc
loope
xor
mov
dec
imul
cmp
cld
adc
add
sub
out
popf
add
in
xor
xchg
fdiv
int3
mov
sbb
push
lods
movsb
clc
clc
scas
add
stc
cmc
jns
mov
pop
and
inc
lock
insb
adc
out
cwtl
add
stos
orb
mov
testl
sbb
push
pop
or
cmp
mov
scas
or
cld
pop
iret
adc
add
pop
push
repnz
cmp
in
hlt
cld
ja
mov
add
outsb
bound
mov
lock
movsb
adc
clc
add
in
or
jle
add
or
mov
fs
xor
mov
call
or
cmpl
int3
nop
adc
cwtl
cli
repnz
cwtl
dec
sub
insb
add
mov
jmp
xchg
test
or
out
lods
int
dec
mov
cmp
sbb
cmpsl
stos
sbb
jb
fisubrl
out
and
sub
adc
or
mov
pusha
and
add
enter
stos
mov
add
or
pop
scas
cld
and
sbb
inc
enter
shlb
add
or
ss
add
aaa
jmp
sub
movsl
fadds
outsl
sbb
lret
out
jecxz
repnz
lea
rcr
adc
fmull
adc
out
mov
dec
add
push
adc
xchg
clc
mov
sbb
test
fcoml
push
rclb
pop
pushf
mov
das
add
mov
dec
mov
jl
inc
call
pop
aad
adcb
in
ret
push
cmp
cmp
loope
cld
lock
sbb
aam
rorb
sbb
add
push
mov
add
lods
shl
les
pop
jecxz
add
jns
add
fucom
insb
dec
dec
push
add
xchg
subl
rol
jmp
cmp
jne
in
enter
mov
fimull
pop
add
test
adc
cmc
fsubrs
or
push
aam
mov
pop
cmp
data16
or
mov
dec
jnp
add
jecxz
xor
lock
mov
sub
inc
push
cld
rcrb
lods
pop
ret
sbb
inc
les
jb
std
add
sub
xchg
mov
add
scas
mov
dec
add
cmp
enter
lock
jae
in
adc
and
je
ja
push
jo
add
mov
fiadds
xor
bound
xlat
nop
xor
loopne
add
lahf
sbb
xchg
pushf
pop
inc
inc
mov
pop
cmpb
aas
aas
mov
jns
sub
xchg
stos
mov
or
add
pushf
lds
adc
jmp
jns
sub
push
sahf
das
clc
pusha
push
or
dec
ficompl
filds
cmovl
inc
adc
rolb
xchg
push
lret
mov
cmpsb
xchg
repz
mov
pop
dec
cmpsl
test
out
mov
adc
addl
ds
es
and
rorl
xchg
punpcklwd
mov
or
add
test
daa
mov
fs
leave
fstpt
push
add
dec
aad
add
cmp
xchg
mov
sbb
jle
adc
stc
sbb
shll
movl
add
pop
inc
mov
add
mov
sti
xchg
xor
jge
andb
imul
sub
cltd
pop
add
jo
add
jmp
add
mov
insb
rclb
ja
fisubl
dec
xchg
arpl
leave
cmp
cmp
add
jno
out
cmpl
aaa
pop
std
add
mov
pusha
add
aaa
mov
es
fistps
scas
push
jmp
daa
add
or
sbb
jl
add
div
adc
fdivp
xor
dec
xchg
fldl
mull
es
mov
cmp
das
push
mov
or
pop
push
stos
jl
pop
mov
jb
pop
mov
add
jno
repnz
stos
or
out
inc
aaa
add
les
add
test
jmp
xlat
rcl
xor
xlat
mov
sub
cmp
sbb
add
jo
clc
lret
push
mov
in
cmpsl
int
adc
sbb
loopne
pop
jle
sbb
outsb
stos
mov
pop
test
sbbb
mov
sbb
cwtl
jmp
jmp
ret
fimuls
daa
ja
cmp
je
lcall
fistpl
xchg
cltd
mov
ficoml
adcb
ud0
adc
dec
sbb
jns
and
add
in
js
dec
dec
ret
mov
mov
or
clc
sbb
movb
add
rclb
add
xchg
mov
ja
arpl
out
push
push
push
repnz
cmpl
movb
mov
shll
test
bound
lock
ds
add
sub
jle
adc
xlat
std
add
stos
orb
xchg
loop
mov
roll
insl
loope
xor
nop
cwtl
xor
mov
push
or
cwtl
fisubrl
scas
add
or
pusha
push
cltd
cmp
cmp
insl
sbb
scas
add
xchg
fwait
inc
jne
xor
prefetchw
add
cmp
cmp
mov
add
popf
push
push
fsubs
adc
or
call
lea
push
mov
xor
dec
xchg
cld
cwtl
push
mov
add
dec
xchg
push
dec
or
rol
push
push
inc
int3
pop
outsl
loope
mov
push
xchg
mov
add
lahf
cmpsb
rcrl
cwtl
mov
fldl
jg
mov
outsl
mov
sub
jg
xor
adc
mov
rol
sbb
cmpsb
dec
xchg
and
jbe
gs
in
mov
mov
xchg
test
sbbb
int3
jnp
pop
push
jne
and
adc
inc
xchg
add
fbld
test
cli
cmp
add
pop
mov
jae
div
dec
dec
add
sbbb
mov
imul
imul
or
or
pop
add
xor
std
imull
push
aaa
jne
mov
push
xor
nop
add
addl
ljmp
sbb
rcll
in
push
out
fldlg2
push
lret
stos
pusha
cwtl
push
add
fcomi
xor
mov
movsl
scas
mov
aaa
push
out
repnz
add
call
divb
add
ret
sub
pop
cmp
fldcw
cmp
loop
pop
je
xor
loopne
sub
mov
jae
mov
push
add
stos
jbe
sbbl
add
jle
cmp
sbb
add
xor
sarl
lret
cld
cli
mull
mov
cmp
addr16
push
pusha
push
pop
std
inc
xor
aam
pop
or
xchg
mov
mov
jno
sbb
push
cmp
and
mov
jg
or
jmp
xchg
flds
cmp
mov
add
out
pop
data16
pop
cmp
test
jle
mov
stos
sbb
enter
push
sbb
jmp
insl
bound
add
jae
push
pop
cltd
cld
or
pop
stos
mov
push
jge
inc
adc
sub
jae
mov
repnz
shl
inc
xor
jmp
outsl
in
add
cmp
cmove
fdivrs
sub
jecxz
lock
add
stos
frstor
popl
mov
push
faddl
sub
and
lock
add
popa
subb
pop
mov
std
rclb
sbb
cmovle
mov
or
adc
data16
ljmp
add
mov
add
pop
pop
and
add
mov
popa
aas
faddl
sti
jo
insb
pushf
push
add
mov
movsl
add
ds
and
adc
popa
sub
lock
pop
cmp
stc
or
cwtl
pop
decl
lea
call
das
xor
movsb
pop
push
je
push
lea
and
lret
orl
lock
add
pusha
pop
jp
adc
or
in
ficoms
push
push
in
push
dec
outsb
lahf
ret
push
int
ret
add
sub
dec
sahf
push
add
push
or
sbb
pop
adc
xchg
dec
add
mov
pusha
faddl
jo
cmp
inc
or
add
mov
ret
pop
cmp
lock
add
pcmpgtd
imul
shlb
cmp
xor
jno
loopne
sbb
xor
add
sbb
adc
cmpb
out
lret
add
fcoms
in
popf
xchg
add
jne
dec
vrcpps
add
mov
xchg
fs
and
sbb
push
dec
in
clc
shrb
add
sti
mov
add
je
arpl
jp
mov
xchg
insl
movsb
jmp
xor
dec
dec
add
or
mov
add
pop
mov
dec
cmp
add
cmp
mov
or
aaa
nop
or
fs
mov
call
loopne
mov
aas
and
mov
imul
roll
test
fmuls
add
int3
lret
lea
mov
sbb
sub
xchg
repnz
dec
adc
cmp
int3
mov
iret
xlat
add
xchg
xchg
or
mov
es
cli
dec
pop
jge
sub
cltd
roll
mov
inc
icebp
jbe
pusha
jmp
out
mov
mov
sar
dec
and
add
ljmp
daa
dec
cmp
shll
les
mov
mov
sbb
push
fs
add
jae
nop
add
dec
subb
cli
add
mov
in
in
lock
ret
cld
jge
push
fucomi
mov
add
scas
add
js
cmpsl
xor
mov
add
out
sub
add
pop
int3
movsl
std
nop
add
icebp
jge
clc
mov
xlat
jecxz
ja
mov
add
sub
add
das
jmp
repnz
sbb
icebp
push
orb
sub
test
push
inc
add
push
clc
cmp
push
xchg
in
sldt
daa
push
push
adc
cli
pusha
sbb
adc
jb
pop
push
ret
stos
adcl
xor
add
outsl
xor
pop
sbb
push
xor
mov
testb
outsb
clc
fsubrs
or
pop
addl
add
outsl
ljmp
fbstp
pop
jg
add
mov
xchg
psrld
xor
xchg
loopne
mov
add
lahf
xlat
or
xor
adc
jbe
or
lock
mov
rcr
xor
jle
enter
sub
lods
sub
add
xchg
add
jne
test
shlb
mov
into
sub
addb
bound
sub
and
xchg
xchg
loopne
fldt
ds
pop
lods
add
pop
inc
jae
scas
cmp
mov
das
sarb
pop
cltd
inc
and
in
fs
out
pop
lea
xchg
xchg
sub
add
add
pop
add
das
xchg
div
pop
jo
mov
push
jmp
jp
mov
xlat
add
push
and
loop
mov
es
gs
cmp
fs
add
mov
push
sbb
jbe
out
outsl
mov
jle
inc
clc
adc
je
orb
add
xor
insl
adc
cmpsb
rorl
dec
xchg
add
cmp
xchg
add
sub
popf
sub
imul
xor
repz
mov
out
push
mov
add
mov
fs
cmp
push
add
push
add
jle
fsubrp
test
bnd
pop
add
pop
xchg
lods
add
mov
fists
outsl
loope
jmp
pop
hlt
clc
sahf
mov
push
add
or
mov
sub
movsl
jo
or
dec
jbe
dec
mov
stos
xor
enter
arpl
sbb
push
and
call
xchg
jbe
mov
xchg
or
adc
or
pop
mov
fisubl
call
jns
jg
xchg
add
or
jecxz
mov
and
je
mov
out
inc
sub
xor
gs
jnp
adc
sub
fwait
test
or
and
dec
sarl
add
movzwl
add
xor
dec
add
inc
iret
js
dec
out
ret
in
pop
cmp
insb
push
cmp
rorb
mov
add
or
adc
or
addr16
lock
or
gs
nop
cmp
mov
or
sti
es
mov
sbb
lea
ss
xor
xor
addb
jns
cmp
xchg
jb
cmp
add
push
imul
mov
sbb
jb
mov
movsb
add
aaa
inc
pop
mov
je
add
gs
cmp
mov
jo
mov
adc
mov
jmp
clc
fwait
ljmp
divb
mov
jl
std
hlt
cmp
aam
rol
sbb
pop
add
idivl
cmp
popf
sub
je
sbb
push
cmp
loop
fildl
incl
rcrl
in
arpl
push
add
sub
dec
and
cmpsb
adc
vmwrite
xchg
cs
cli
xchg
add
cmp
hlt
jb
jne
sbb
sub
push
mov
sbb
cwtl
jle
add
lods
inc
mov
leave
add
add
inc
cmpsb
push
or
imul
stc
xchg
das
push
add
add
or
cld
sbb
add
xadd
andb
movsb
sbb
ja
and
nop
push
adc
xor
inc
leave
pop
fmulp
push
xor
repz
add
push
adc
adc
sub
mov
inc
movsl
imulb
xchg
or
push
jo
std
adc
aas
cmpb
cmp
xchg
xchg
leave
rorb
xor
adc
dec
push
aas
xor
jp
mov
ret
shr
xchg
or
mov
xor
xchg
mov
fsubrs
mov
scas
mov
xlat
iret
sbb
jge
js
jge
and
clc
out
adc
leave
fnstcw
lret
push
dec
hlt
sahf
fadd
inc
jmp
mov
inc
adc
sub
xor
inc
mov
mov
imul
imul
loopne
adc
dec
pop
and
rorl
dec
ret
cmp
test
add
imul
jge
jl
sbb
mov
fildl
imul
add
mov
xchg
das
fadds
nop
or
sbb
cmp
rclb
jge
movsb
adc
or
cs
mov
test
call
cmp
xchg
sbb
lods
fiadds
rcl
pop
inc
mov
or
andb
shlb
mov
aas
cwtl
xchg
test
stos
adc
add
test
lahf
cltd
pop
ret
dec
jp
rorb
testl
adc
pop
call
fcoms
test
mov
decb
jne
mov
stos
sldt
add
push
inc
mov
dec
rcrl
cmp
add
sti
loope
int3
in
add
addr16
sbb
fadd
or
rcrb
jo
add
jmp
mov
stos
mov
mov
movsb
inc
add
dec
xchg
cwtl
ljmp
movsb
aas
jo
aam
and
xorb
cmp
movsb
lods
mov
adc
icebp
add
clc
add
cs
jl
mov
add
gs
dec
inc
fsub
fldl
sbb
adc
or
add
mov
mov
in
and
vmovq
imul
jns
inc
in
mov
ljmp
popf
add
push
es
insw
scas
test
add
inc
ljmp
out
fisttpl
shll
imul
stos
into
fidivrl
or
aaa
cmp
icebp
movsl
mov
push
xlat
enter
add
inc
push
sub
inc
or
cmp
cmpsb
or
mov
and
add
xchg
inc
or
jmp
inc
dec
scas
call
dec
les
sub
insl
adc
add
push
cmp
xchg
and
xchg
inc
mov
scas
or
add
sti
mov
mov
pushf
pop
push
test
jecxz
add
stc
into
imul
sti
hlt
mov
and
inc
shlb
push
in
mov
es
add
dec
addr16
pusha
push
loopne
xor
xor
std
test
or
jmp
add
fs
mov
clc
lea
rclb
jge
add
mov
mov
add
mov
mov
in
add
jge
cmp
shll
add
push
lock
sub
mov
std
dec
cli
roll
mov
enter
out
add
fsubs
aam
nop
lock
rolb
xchg
movsl
insb
dec
lldt
pusha
and
js
cmp
out
mov
push
pop
mov
mov
lret
fldt
xor
nop
xlat
inc
adc
aas
dec
xchg
int
add
js
jp
push
xchg
cmp
xchg
in
cltd
add
shrl
add
mov
adc
mov
add
shll
ffreep
cmc
addb
add
pop
rorb
jb
pop
inc
shlb
xor
lahf
sbb
mov
add
xchg
movsb
push
cli
and
jne
add
adc
push
rcrl
rcrb
std
mov
adc
sarb
das
nop
add
add
jbe
xchg
sub
js
aam
fs
add
lods
in
cld
out
adc
lea
repnz
divb
inc
pop
out
mov
lock
adc
mov
xchg
les
imul
cli
test
xchg
or
push
nop
and
sbb
lahf
repz
cmp
sbb
sahf
xchg
sbbb
inc
cmp
sub
daa
fnstenv
data16
inc
jmp
adc
or
mov
jp
xor
or
lods
nop
lock
dec
mov
push
push
out
sbb
aam
in
and
xor
int3
loopne
dec
or
or
pop
pusha
pop
xchg
mov
sbb
repz
cmpsl
or
cmp
rcl
and
jnp
xchg
mov
inc
add
cltd
push
shl
pop
mov
push
inc
incl
and
shrl
xchg
inc
inc
xor
ret
pop
push
adc
inc
ljmp
stos
jnp
add
mov
mov
cs
in
pop
aaa
pop
jns
sub
nop
pusha
or
push
dec
popf
sub
push
add
push
pop
pop
rcrl
iret
jmp
adc
mov
and
adc
mov
pop
add
mov
jo
scas
lods
es
mov
xchg
repz
jge
mov
mov
xchg
cmp
xchg
jp
add
mov
add
push
jno
xor
push
inc
int3
test
add
cmc
fdivs
popf
nop
adc
cwtl
cmpsl
fidivrs
add
add
test
sbb
mov
add
jmp
in
cmp
cltd
nop
cli
add
push
insb
push
ss
nop
insb
and
scas
insb
sahf
xchg
adcb
into
cli
enter
idivb
push
inc
or
mov
das
sub
ljmp
out
lods
andl
inc
cld
add
scas
adc
popl
iret
faddl
aam
mov
or
subb
enter
jle
ret
sbb
popa
add
mov
sbb
sbb
in
in
testb
testl
mov
xor
stc
scas
cli
loope
lret
rclb
stos
mov
pop
or
call
sbb
out
add
flds
push
sub
inc
mov
mov
add
popa
in
dec
movsl
mov
push
insb
add
xchg
sbb
aas
bound
in
out
fdivrl
in
lock
shlb
add
aas
repnz
jo,pn
clc
andb
jle
shrb
add
cltd
cmp
fmull
jg
loopne
add
fadds
push
pop
test
adc
pop
out
hlt
fists
jae
call
cmp
xor
pop
adc
shlb
test
pushf
shr
dec
or
sbb
push
je
bound
mov
jnp
mov
jne
inc
mov
add
push
xor
lds
sbb
push
data16
ss
sub
inc
mov
mov
add
pop
cli
mov
mov
les
jae
sbbb
mov
dec
fstps
pop
lods
inc
nop
mov
cmpsl
in
mov
add
pop
rcll
sbb
in
rolb
repz
fdivl
aam
xlat
push
out
cmp
mov
push
or
sub
push
add
add
cs
lock
cmp
mov
stos
push
jb
add
mov
push
lret
jge
xchg
inc
xorb
ljmp
inc
add
fsubl
je
loope
push
nop
ret
add
aam
dec
cwtl
divl
add
add
add
and
das
pop
adc
sbb
xchg
pushf
fiaddl
loope
nop
adc
lock
inc
add
and
test
xor
sub
fs
pop
cmovp
jbe
rorb
mov
rolb
add
ret
rcrl
aaa
rolb
sahf
cmc
iret
xor
movsl
insl
fs
fidivrl
or
lea
fldenv
adcb
pushf
xor
xchg
shl
jl
cmpsl
fldl
inc
loope
jg
push
xchg
fiadds
aam
jge
push
addr16
mov
xchg
mov
and
xchg
sbb
dec
imull
subl
data16
sub
cwtl
aam
rcrl
call
add
scas
or
popa
les
sub
add
and
add
fcompl
sbb
pop
or
imul
dec
sbb
loopne
xchg
fdivp
and
mov
mov
fnsave
xchg
xchg
xchg
je
xchg
insl
dec
in
add
mov
test
xlat
xor
jp
dec
cmp
dec
call
inc
push
sar
add
adc
in
pop
sub
pop
out
movsb
cld
and
int
mov
add
pushf
arpl
outsl
cmp
xlat
inc
mov
add
or
jmp
mov
test
push
and
mov
inc
out
loopne
mov
jmp
iret
inc
movsb
adc
data16
pop
push
jmp
shlb
sarl
push
jb
sti
add
je
add
fstpl
inc
and
adc
sti
or
add
ljmp
imul
push
mov
pop
mov
push
arpl
iret
add
syscall
rcrb
pop
js
ss
sbb
lods
dec
xor
jo
dec
add
in
shlb
jmp
addb
out
pop
aaa
test
add
add
hlt
push
pusha
test
or
mov
inc
pop
sub
add
adc
vpshlb
rorb
mov
test
imul
adc
push
cmp
jl
mov
scas
add
add
sti
stos
data16
fnstcw
inc
push
push
mov
sub
ret
inc
sahf
sti
add
add
cmc
dec
mov
add
inc
test
fimuls
test
hlt
add
test
icebp
cmc
add
mov
push
xchg
mov
sbb
pop
and
adc
cmpsl
mov
add
lret
add
dec
shrb
ljmp
inc
and
pop
dec
inc
jns
and
out
add
inc
mov
and
or
int
scas
add
out
fstpt
es
mov
fwait
or
clc
fldl
pop
inc
jle
mov
xchg
adc
push
cltd
hlt
sub
mov
sub
ret
adc
mov
out
addb
mov
add
cmp
les
loopne
inc
pusha
faddl
push
jns
and
cli
iret
mov
iret
push
add
decb
mov
xchg
pushf
and
mov
jne
cmp
scas
dec
inc
add
data16
sub
mov
push
and
sbb
cmp
xchg
cmc
xor
out
jge
fnsave
add
push
jmp
ror
pop
in
and
xchg
daa
sbb
push
rolb
push
ljmp
add
sbb
pusha
dec
leave
lcall
sbb
push
cwtl
out
push
sub
int3
shrl
add
or
out
inc
loopne
jle
push
dec
lock
imul
popa
or
pop
add
jbe
xor
mov
mov
pandn
dec
sbbl
cmp
ret
lods
jg
dec
push
mov
sbb
adc
cs
cmp
pop
add
dec
add
pop
scas
addb
push
jo
insl
jg
pop
mov
xchg
mov
enter
or
dec
mov
sbb
ss
ljmp
lods
loope
mov
adc
sbb
out
cld
mov
enter
inc
gs
sbb
aad
mov
xor
lret
xor
imull
out
pushf
clc
jge
add
sbbl
mov
jge
xor
cwtl
push
addb
adc
lock
dec
mov
add
stc
adc
imul
lcall
jle
jl
arpl
add
push
dec
cltd
andb
or
lds
scas
or
sahf
inc
add
jg
cmp
sub
sti
cli
int
add
lret
fwait
pushf
push
xchg
cwtl
add
push
and
lahf
jge
jo
add
sub
mov
fbstp
ret
test
xchg
and
inc
fdivp
orb
pop
jno
mov
ja
stos
stc
aad
out
add
xor
xchg
int3
xchg
idivb
push
stc
dec
lock
push
ja
sbb
lahf
jno
shlb
add
xchg
jmp
lret
adcb
jl
lods
rcll
adc
xchg
pusha
push
aas
sbb
loope
push
cmp
mov
cmp
stos
add
and
ja
add
jns
mov
mov
aad
sbb
addr16
leave
jnp
pop
enter
dec
fnstenv
and
add
or
push
pop
pusha
pushf
ss
jno
dec
in
or
hlt
add
out
out
mov
xchg
mov
sbb
nop
adcb
lret
lods
mov
out
ja
loope
and
cmp
fs
add
test
sbb
mov
shlb
rcrb
or
sub
subb
sbb
lock
add
xchg
mov
loopne
sub
mov
insb
int
jp
xlat
adc
lcall
cmp
fs
movsl
je
or
loopne
stos
add
mov
mov
loope
mov
add
lods
or
out
xchg
cmpsb
psubd
mov
test
js
adc
into
pop
ja,pn
push
cmp
mov
test
mov
xor
andb
insb
push
push
mov
dec
push
pushf
subb
bound
inc
add
mov
xor
fadds
aam
adc
push
add
add
es
mov
aas
and
mov
push
adc
mov
das
loopne
ror
mov
int
int3
mov
imul
lea
jl
xchg
mov
je
call
xor
xchg
sbbb
mov
dec
mov
mov
xchg
jns
idivl
mov
mov
push
pushf
cmpsl
cvttps2pi
rcr
pop
sub
mov
push
fs
add
mov
xor
lcall
js
push
mov
outsb
inc
dec
push
xchg
mov
movsb
movsl
jnp
leave
das
stc
pop
ja
dec
push
cmc
dec
in
lods
adc
jnp
mov
add
fiadds
xor
test
stc
mov
add
lahf
arpl
ljmp
xchg
int3
cmp
inc
sbb
and
je
jnp
incb
add
pop
or
adc
inc
frstor
test
xor
mov
jg
dec
mov
push
dec
xchg
scas
cmpsb
shrb
add
outsl
fstl
xchg
mov
sub
rol
add
enter
pop
or
inc
fdiv
pusha
xor
xchg
into
bound
pop
jne
sbb
pop
dec
push
push
add
inc
sti
xchg
stos
adcl
lret
jb
mov
loope
xor
mov
iret
out
or
in
mov
add
repz
sub
push
int3
cltd
aas
push
fwait
dec
test
add
clc
add
mov
inc
xchg
orb
add
xchg
inc
mov
add
dec
jmp
jns
pop
mov
cmp
pop
repz
pusha
and
les
aad
adc
inc
nop
dec
scas
fiadds
data16
mov
mov
test
ds
dec
adc
sar
gs
cmc
add
inc
or
sahf
fwait
xchg
or
mov
mov
faddl
dec
ret
push
xchg
fsubrs
add
mov
add
ja
push
imul
add
rolb
icebp
add
mov
sarb
sbb
roll
movsl
sub
imul
add
in
mov
pusha
xchg
mov
xor
sbb
clc
inc
stos
mov
pop
cmp
int3
cmp
loopne
push
mov
mov
jmp
jp
pushf
loope
and
cmpsl
and
push
pop
add
rol
xchg
mov
push
mov
jo
or
dec
fldcw
xor
jmp
inc
sub
fidivs
xor
sbbb
gs
inc
adc
addr16
fnstenv
push
mov
rcll
xor
rorl
int3
add
mov
add
dec
mov
jg
xlat
faddl
lcall
jo
or
adc
or
pop
enter
inc
out
negl
add
sbb
or
add
mov
jl
aaa
scas
cwtl
sub
add
inc
std
inc
cltd
int3
xor
mov
add
fwait
sub
sub
add
jbe
movsb
cmpsl
mov
push
sarl
add
mov
or
cmp
push
ja
cmpb
mov
add
repz
dec
adc
fisttps
cld
int
and
adc
mov
cwtl
inc
out
testb
push
cmpsb
add
dec
lock
pushf
xchg
and
lds
xchg
pop
adc
xchg
lods
add
push
loop
sbb
cmp
fsubp
add
sbb
mov
rclb
sub
flds
jp
mov
icebp
dec
fdivrp
cwtl
push
adc
mov
pop
push
add
mov
dec
fcoms
lods
add
test
outsb
dec
inc
insb
push
movsl
jns
cmp
xchg
pushf
jo
aad
add
aas
out
adc
repz
sahf
sub
out
mov
fnstcw
rolb
mov
sub
sti
sub
cli
mov
cld
xor
scas
mov
adc
insl
rcrl
lods
js
jg
outsb
roll
mov
rorl
clc
jb
sarb
pop
cmp
das
add
jg
push
and
test
nop
add
mov
xchg
mov
push
sbb
push
add
sarl
add
lods
and
add
dec
push
jno
dec
jle
aad
push
iret
mulb
testb
aas
or
cmp
lahf
pop
out
fsubl
adc
fwait
mulb
sbb
loop
andb
mov
push
adc
mov
into
mov
dec
sub
mov
add
jne
mov
pop
test
pop
outsl
push
aam
add
jno
mov
movsl
sbb
xchg
inc
add
cld
sub
mov
sti
cmp
fdivs
lods
cmpsb
sub
add
rcrb
add
roll
nop
add
jo
cmp
jl
mov
lea
ljmp
cmpsl
dec
mov
insl
shrb
xchg
add
push
mov
fwait
loop
jae
add
and
stos
add
mov
pop
add
sub
inc
cmp
jge
nop
lahf
push
dec
mov
gs
mov
add
aaa
pop
and
adc
out
push
jne
add
scas
fs
dec
out
add
ss
push
mov
or
push
test
test
jmp
jp
xor
cs
in
cmp
cwtl
fcmovnu
sub
inc
cmp
scas
adc
cli
push
sub
stos
addr16
les
jge
sets
lret
mov
and
packssdw
js
out
lock
test
cs
sub
add
in
in
mov
icebp
xor
aam
sbb
ss
add
outsl
inc
and
mov
push
jne
cmp
clc
shrb
mov
pop
mov
add
cld
add
scas
push
jle
push
inc
cld
adc
add
pop
pop
jmp
push
dec
cmp
mov
pushf
add
xchg
outsl
cs
sti
cmp
gs
xchg
test
pusha
sub
fiaddl
inc
push
fadd
xor
dec
stos
pop
push
stos
xchg
lock
jmp
adc
add
sub
rorl
arpl
ds
lock
movsl
addl
xchg
int
jle
mov
nop
sarl
addl
roll
inc
xchg
cmp
add
js
movb
add
mov
scas
repnz
bound
or
pop
lcall
aaa
sbb
mov
arpl
add
pop
jbe
or
lcall
cs
les
mov
loop
xchg
jge
xchg
mov
add
popa
cltd
fs
cwtl
or
loop
aam
aad
pushf
das
clc
pusha
dec
movd
cld
sbb
mov
mov
add
mov
sbb
xchg
enter
jl
mov
dec
xor
sbb
test
mov
cmp
sbb
loop
test
cwtl
add
pop
dec
cltd
dec
iret
inc
inc
add
fcompl
pop
jne
push
pop
or
int3
lret
dec
fsubrl
into
cmp
pop
cmpsb
add
lahf
daa
push
pushf
lods
and
imul
add
add
fmuls
loopne
adc
rcrb
call
add
jecxz
mov
rolb
rcrb
jbe
add
roll
cmp
ret
sub
xchg
enter
dec
add
popf
repnz
je
xchg
mov
add
lahf
sahf
dec
ljmp
cltd
xchg
xor
inc
add
outsl
lcall
divl
stos
enter
push
aaa
faddl
pop
out
aam
xor
jmp
push
sub
scas
int3
or
cmp
xor
mov
and
add
test
icebp
add
mov
lret
sub
roll
add
sub
mov
and
shll
mov
jecxz
rcll
pop
int3
mov
ds
add
testb
mov
jnp
add
inc
adc
mov
add
xchg
insl
rcrb
stc
pop
add
fs
sbb
pusha
in
xchg
push
mov
loopne
pop
ret
jp
rcrl
gs
push
ret
in
data16
lods
push
std
outsb
in
or
fcomps
hlt
test
shlb
stos
repnz
les
add
fnsave
dec
xor
scas
movsb
sub
jns
adc
adc
mov
jbe
cmpsb
jecxz
pop
xchg
sub
outsb
dec
inc
imul
lret
mov
add
nop
inc
in
add
test
or
cli
ja,pn
and
in
movsb
bound
rolb
fwait
cvtdq2ps
xchg
arpl
push
add
push
int
in
test
sbb
xchg
mov
add
adc
adc
test
fldt
jmp
pop
into
xchg
jge
cmp
js
xor
add
jo
sbb
stos
xlat
shr
jle
je
loop
add
lcall
pop
out
jne
push
xchg
cmp
cmp
mov
inc
xor
sbb
cmp
xor
jns
loope
lret
stos
nop
push
jnp
pop
das
pop
les
mov
paddd
push
mov
sub
scas
mov
sbb
cmp
xchg
loop
sub
lret
add
stc
sbb
jmp
scas
mov
lret
jge
dec
addb
inc
popa
xchg
dec
cmp
mov
in
push
add
push
xor
popa
push
pop
loop
push
push
dec
mov
or
test
inc
or
jne
mov
lods
repnz
ds
sbb
jecxz
mov
pop
ja
sbb
hlt
inc
mov
cld
mov
add
and
test
add
dec
subl
fdivrs
add
or
push
test
sub
pop
mov
sub
cmpsb
cmp
inc
add
jge
rcrl
call
mov
mov
xchg
push
mov
shlb
ret
jne
xor
add
dec
sar
mov
sbb
pop
mov
sub
adc
cwtl
in
jbe
pop
pop
pop
ficoml
cld
pop
cmp
testl
pop
ja
jbe
sub
das
movsb
sub
cmp
fwait
xchg
aas
add
jge
and
addl
stos
pusha
xor
scas
jmp
lods
add
adc
add
repz
leave
sub
pushf
add
mov
cmpsb
insb
cmp
adc
mov
les
or
mov
pop
sar
push
popf
loopne
xor
dec
je
cltd
or
sub
frstor
or
orb
shrl
add
psubq
sbb
dec
mov
push
adc
cmc
xchg
dec
jg
cmp
mov
xor
mov
push
inc
add
out
mov
js
push
mov
mov
push
or
mov
pop
or
jb
mov
and
inc
mov
js
andl
roll
pop
cmp
xchg
push
or
dec
sub
cmp
in
insb
fcomps
nop
add
mov
pop
test
in
scas
cmp
hlt
aam
cmp
add
clc
sub
dec
mov
dec
and
pop
jmp
push
add
repz
scas
fsub
sub
mov
int3
add
movsl
aas
cwtl
fiaddl
and
add
jno
iret
jge
add
imul
cs
dec
add
outsb
sahf
fstpt
loopne
add
add
das
add
call
cmova
lock
rcll
in
lds
and
mov
inc
add
sub
in
or
sbb
pushf
fstl
andb
inc
add
pop
inc
dec
push
mov
mov
xor
sbb
xchg
out
pop
push
pusha
sti
mov
mov
push
pop
add
scas
xrelease
and
jle
dec
test
stos
aas
adc
shr
inc
sbb
fldl
or
dec
sub
hlt
add
mov
fucomp
scas
pop
popf
push
mov
leave
sbb
repnz
inc
adc
mov
pusha
adcl
pusha
or
enter
push
sbb
lahf
adc
cmovg
int3
xchg
fs
push
lods
orb
sub
cmp
pop
test
inc
cmpsl
and
arpl
cmp
xor
aaa
stos
add
loopne
movsb
add
mov
pop
push
bound
xor
pop
xor
cmp
xor
js
sbbl
sbb
pandn
mull
mov
cld
push
stos
add
cmp
repnz
fnsave
pop
cmc
ljmp
adc
iret
lea
push
repnz
sti
mov
in
dec
mov
nop
add
int3
jae
or
push
and
in
pop
or
cmp
mov
mov
idivb
int
xchg
sbbb
jl
or
add
aas
inc
xchg
or
loope
pop
lods
scas
mov
shr
cmpb
int
clc
in
add
adc
enter
rclb
sbb
scas
stos
xlat
sbb
pop
jecxz
and
sub
jle
test
je
or
cs
jmp
lea
add
popa
mov
outsb
nop
mov
cmp
cli
ret
jmp
cltd
mov
add
and
push
sbb
sbb
stos
push
dec
mov
aam
add
in
add
lret
in
jnp
cwtl
jl
pop
loopne
sbb
fisubs
xchg
mov
add
fisttps
pushf
or
mov
add
scas
sti
or
in
pusha
cwtl
add
stos
ja
out
push
mov
xor
loop
add
sbb
mov
nop
test
and
fs
insb
sbb
mov
mov
pop
sbb
push
jno
jns
add
xchg
cmp
clc
mov
xor
push
pop
xchg
insb
mov
add
add
add
xor
add
mov
push
ja
add
xor
loope
cmp
add
sub
ja
inc
lods
mov
mov
into
xchg
jmp
cltd
add
jl
add
fs
inc
stos
scas
push
into
add
repnz
test
xor
mov
add
sbb
repnz
iret
aaa
rolb
push
gs
xchg
add
pop
mov
cwtl
add
lods
sarl
add
adc
aad
add
push
inc
lods
add
leave
cmp
call
lods
add
imul
nop
mull
add
ret
adc
cltd
fwait
push
pusha
cs
add
xor
fldl
pop
mov
jb
add
xchg
push
and
xchg
stos
jg
add
idivb
pusha
jecxz
add
pop
mov
call
cli
add
sub
push
fsubrl
sbb
fs
sbb
mov
dec
dec
aaa
mov
mov
out
dec
adc
sbb
add
jns
sti
add
mov
xor
scas
call
sub
sub
and
sub
je
dec
push
sub
mov
push
stc
add
pop
das
xchg
ja
inc
ljmp
aad
pop
adcb
sbb
lods
jecxz
adc
cmp
fldl
test
popf
or
enter
stc
push
lods
mov
incb
bnd
and
jmp
les
pop
push
ret
mov
ljmp
add
jno
mov
pop
test
push
push
jecxz
sarb
or
xchg
dec
dec
add
outsl
or
sbb
ret
roll
and
xchg
inc
insl
jns
sbb
push
add
push
into
ja
jp
sti
test
lea
mov
sub
xor
xchg
sbb
mov
push
mov
popf
cli
add
dec
in
push
sbb
outsl
mov
ss
push
add
and
out
rcr
jno
jno
push
dec
int
rolb
add
xchg
pop
sub
dec
jmp
mov
inc
push
inc
add
rolb
jg
inc
cmp
ret
dec
cmp
mov
add
stos
mov
add
scas
xchg
add
das
ficomps
dec
or
or
xchg
movsl
push
test
xor
and
dec
dec
pop
pusha
out
mov
jle
dec
daa
xor
xchg
add
idivb
adc
add
sub
loopne
sub
imul
mov
dec
mov
cmp
clc
mulb
rolb
cmp
inc
ljmp
negl
mov
test
hlt
lahf
jno
add
push
sub
adc
pop
dec
sub
mov
and
das
jae
sub
test
sub
sti
pop
test
shrl
push
inc
les
cmp
add
add
adc
cmp
jp
and
scas
aaa
sub
imul
and
and
mov
loopne
lcall
xor
add
jecxz
xor
lds
pushf
push
in
mov
dec
push
inc
adc
in
lret
sbb
jnp,pt
pop
insl
inc
rolb
add
repz
add
jae
enter
aad
pop
xchg
mov
and
loope
and
mov
lods
inc
add
inc
inc
aam
adc
xchg
sbb
mov
sub
aad
add
lock
cld
pop
push
out
add
int3
sub
or
mov
fwait
push
xchg
inc
cmc
lret
dec
adc
out
je
or
sbb
test
pop
ss
sbb
popf
push
call
push
or
cmpsb
movsl
jb
jg
add
adc
into
add
adc
sbb
xchg
notb
dec
add
or
fisubrl
mov
lahf
fisubs
add
push
shl
insb
aas
stos
lods
dec
add
std
mov
lret
add
adc
cli
pop
add
jne
lret
daa
cld
push
push
pop
lcall
ret
jge
clc
psllw
fsubrs
out
xlat
pop
fisttpll
mov
inc
fwait
cmp
mov
sbb
movsb
pop
or
pop
cmp
xchg
into
xlat
fildll
mov
or
inc
inc
xlat
add
jo
popa
add
movsb
test
lret
add
and
loope
out
ret
inc
push
or
jne
or
test
dec
popf
pop
add
jg
and
pop
into
addr16
shrl
add
cmp
mov
lods
icebp
mov
add
sbb
hlt
imul
sbb
xor
les
sub
daa
or
mov
in
dec
add
into
mov
dec
mov
push
jp
cwtl
pusha
add
lret
sbb
lods
add
add
movb
xor
xor
insl
je
inc
ret
lock
lahf
pusha
fnsave
add
push
pop
je
inc
jno
add
mov
and
push
fnclex
xlat
cmp
fldl
je
inc
add
pusha
and
cmpsb
jne
push
xor
sub
lock
inc
hlt
add
push
call
add
add
dec
mov
test
mov
loopne
add
jnp
faddl
stos
arpl
add
xor
dec
push
lods
addr16
add
cmp
dec
push
cwtl
out
jp
mov
add
repz
xor
xor
xchg
adc
and
mov
xor
jne
add
in
aas
outsb
adcb
dec
add
movsl
lea
cmc
sub
cmpsb
pop
popa
ljmp
ds
pop
outsb
add
dec
sbb
cmpsb
outsl
add
xchg
movsl
mov
mov
fdiv
stos
imul
movsl
pop
adc
int3
jmp
fisttpll
mov
fisubrl
aad
add
mov
xor
pop
jbe
add
inc
dec
lcall
mov
add
adc
addr16
arpl
out
add
mov
sbb
push
nop
inc
outsl
clc
and
add
push
fmuls
sti
inc
cli
or
jae
add
scas
xchg
cmp
xchg
mov
sbb
les
jge
add
aaa
dec
push
sub
sbb
jno
insl
dec
add
jle
jnp
mov
xchg
fwait
push
loopne
add
fists
mov
fisubrs
pop
add
xor
dec
jbe
cmp
in
add
lret
aad
xchg
aam
ds
xchg
nop
dec
bound
dec
or
pusha
pop
jae
subb
mov
add
cltd
jno
and
inc
sbb
push
add
sar
aaa
mov
push
cmp
and
clc
aaa
rolb
sarb
fdiv
loope
sbb
sahf
outsb
and
ss
aaa
push
mov
loope
adc
push
dec
and
mov
enter
add
mov
out
mov
mov
ds
popf
xchg
loope
in
xchg
push
mov
add
imul
cmp
xchg
pop
pop
inc
scas
or
push
rorb
cltd
pop
sbb
push
and
cld
fiadds
daa
fs
leave
push
mov
pop
push
pop
cs
add
ss
fwait
lahf
jg
push
or
and
insb
bound
add
push
pop
inc
rolb
enter
jne
push
sbb
addb
testb
add
adc
outsb
mov
add
fs
sbb
test
push
push
daa
leavew
rol
inc
mov
fwait
pushf
push
mov
xchg
scas
sub
sbb
inc
imull
loope
add
bswap
call
push
aam
sub
or
add
mov
and
fsubrs
add
ja
or
jne
addb
xor
add
loope
add
stc
fcomps
push
jmp
add
aad
and
push
daa
pop
add
adc
fwait
jns
pop
in
icebp
imul
add
fcomps
add
mov
hlt
sar
mov
inc
orb
nop
add
out
in
pop
jae
inc
rclb
loopne
and
inc
mov
divb
xor
sarb
fs
add
insb
push
or
add
shlb
dec
dec
xchg
fadds
cmc
arpl
mov
in
add
nop
je
inc
push
ljmp
leave
cwtl
ss
jp
clc
and
sub
cs
mov
xchg
and
movsb
mov
add
xor
add
sbb
popa
jae
add
clc
jg
and
push
or
test
inc
cmpsb
leave
xor
stos
push
cli
fildl
jg
add
sbb
mov
shll
stos
stos
scas
sub
lcall
loopne
mov
flds
insl
fiaddl
adc
push
xchg
pop
adc
add
mov
and
xor
jl
add
dec
lods
mov
cmp
or
lds
aad
sbb
repnz
mov
sub
inc
pop
adc
sub
add
jo
sbb
cmp
std
aad
push
and
imul
inc
pop
add
sbb
nop
lar
scas
jle
rol
enter
mov
ljmp
bound
ret
push
cmp
mov
cwtl
scas
movsb
push
add
add
jg
adc
or
cmp
cmp
enter
ljmp
lea
sbb
cmp
mov
xor
out
mov
dec
xor
lds
add
push
orb
out
sbb
jg
ljmp
or
add
push
and
pusha
pop
pop
sbb
ret
test
xchg
imul
pop
push
xchg
jecxz
cmp
jecxz
or
cwtl
pop
pop
pop
pop
xor
and
pop
pop
mov
pop
xchg
xor
and
stos
lods
scas
pop
lock
lock
jg
add
sarb
sub
ret
insb
add
add
add
and
pop
jne
add
inc
into
xchg
mov
mov
add
push
fucomi
fwait
mov
ds
fcompl
add
sbb
adc
fisttps
lahf
jecxz
adc
cmp
lods
movsl
inc
adc
fwait
mov
loope
jbe
add
jb
enter
mov
iret
cmp
sub
xlat
mov
add
push
jb
fucomip
dec
mov
cmpsb
daa
loopne
movsb
sbb
fbld
jmp
push
xchg
aas
mov
adc
int
xchg
add
outsl
xchg
test
aam
add
repz
ja
cmp
cli
addr16
fcmovu
cmp
movzwl
stc
jmpw
mov
sub
add
scas
cwtl
sahf
cmpsb
in
adc
cmc
pusha
push
int3
add
sbb
cwtl
sub
add
gs
scas
inc
sbb
insb
inc
dec
cmp
cmc
mov
js
cld
je
jge
mov
sti
loopne
sbb
pop
pop
inc
inc
lods
pop
mov
add
mov
cmp
cmp
pop
adc
sbb
pop
pop
push
rolb
popa
aad
cmp
adc
mov
xchg
push
loope
xchg
roll
ja
aas
xchg
add
int3
iret
mov
dec
add
les
mov
sub
cmp
aam
ss
adc
popf
xorb
int
int3
cmpb
xchg
pop
xor
in
leave
pusha
mov
inc
push
arpl
test
jg
and
fstpl
mov
mov
daa
cltd
push
sub
mov
add
aam
sub
cld
bound
push
fcompl
shl
cmp
mov
nop
dec
cmc
pusha
insb
ss
pop
or
xchg
mov
xor
dec
or
dec
sub
cmp
repz
cli
call
add
push
push
adc
mov
adc
add
lods
cmp
loope
sti
test
mov
insb
pop
add
loope
cs
call
sbb
in
rcl
pop
insl
add
aas
sar
stc
sbb
xor
aaa
verr
cmp
mov
pop
and
mov
lods
mov
test
add
pop
xor
lea
mov
jmp
clc
push
push
mov
dec
mov
dec
add
add
test
ljmp
dec
pop
xchg
daa
movsb
add
cmp
int3
xchg
fsts
push
decl
mov
add
enter
jl
les
mov
sbb
rorb
xor
add
in
or
jge
push
jbe
add
lahf
push
add
dec
add
nop
shll
pop
clc
mov
adc
aad
sbb
negb
jge
rcrl
hlt
dec
push
mov
add
dec
mov
cmp
push
mov
dec
push
in
loope
xchg
daa
mov
mov
xchg
xor
mov
cmpsl
add
mov
xchg
mov
or
in
loopne
and
cmp
push
sti
cmc
xchg
add
mov
and
icebp
and
adc
enter
mov
stc
adc
movsl
hlt
insb
mov
dec
sti
aaa
sbb
add
or
loopne
subb
xor
add
popa
xchg
adc
icebp
lret
xlat
sub
cs
xor
xor
ds
aas
cmc
jmp
hlt
mov
or
imul
jecxz
shll
hlt
lods
mov
push
xor
mov
cld
add
add
sbb
mov
js
add
dec
inc
stos
notb
xchg
sub
xchg
dec
test
fiadds
jecxz
lock
or
cmp
jo
adc
sbb
sub
cltd
lahf
out
sub
dec
adc
or
loopne
ja
decl
cmp
fs
std
shll
test
adc
push
jp
lds
sar
jb
push
pop
mov
mov
cmp
mov
mov
cmp
mov
pusha
pop
rcrl
xor
add
mov
mov
push
sbb
jo
sbb
rcl
cmp
and
repz
cld
stos
cmpsl
push
les
add
pushf
push
loopne
dec
loope
add
test
pusha
test
adc
outsl
and
inc
cli
xor
sbb
inc
sub
ja
jnp
adcb
mov
lods
in
add
mov
lret
test
call
push
sarl
mov
lahf
push
sbb
mov
push
cmp
icebp
je
roll
and
stc
cld
lods
adc
add
or
inc
pop
add
sub
das
add
push
xor
inc
push
fcomps
out
mov
ret
xor
push
mov
pop
std
stos
mov
ljmp
sbb
add
mov
inc
hlt
mov
jg
cmp
movsb
sbb
test
mov
xchg
fnsave
stc
cmp
jl
std
lret
mull
push
xor
add
in
jns
xchg
pop
adc
adc
and
cltd
add
inc
adc
stos
add
fdiv
les
xor
add
cmpsl
jbe
ret
jns
mov
frstor
xorb
loope
icebp
or
shlb
out
rcrb
imul
mov
sub
lahf
mov
cmp
push
repz
adc
pop
sub
rol
fcompl
hlt
jns
jmp
sahf
das
fisttps
movsb
mov
inc
pop
iret
sbb
idiv
psubd
adc
nop
add
lods
xchg
orb
jl
cmpsb
jae
xchg
pop
ljmp
test
loope
rcll
mov
or
add
inc
cmpsb
rcl
and
push
adc
enter
in
cmp
jbe
in
mov
or
push
mov
stos
imul
test
lcall
inc
xchg
cmp
add
xchg
xchg
push
add
push
or
mov
cld
add
push
mov
add
loopne
adc
mov
icebp
inc
cwtl
aam
rolb
and
outsl
mov
loop
dec
add
rcl
jb
mov
lret
adc
pusha
dec
pop
fadds
cmp
mov
ja
fsubl
loope
pop
cmp
fs
imul
sub
mov
adc
add
je
sbb
inc
int
mov
mov
bound
add
jecxz
or
or
add
fdivrl
add
repz
lock
add
rcl
aad
test
add
fs
jg
xchg
fistps
xor
pusha
lret
loopne
pop
mov
sub
add
fiadds
add
and
rcr
xchg
ljmp
mov
faddl
cmp
adc
mov
push
les
adc
std
lods
sbb
add
cltd
xchg
add
mov
lcall
jne
add
lret
add
out
add
scas
add
sub
je
loopne
inc
xor
dec
sbb
fcompl
lret
push
dec
sbb
les
stos
or
adc
sbb
cwtl
mov
add
xchg
fldt
repz
sbb
rorb
jnp
xchg
sub
cmp
adc
cmc
fmuls
jl
int3
mov
and
pop
add
lock
seta
jbe
mov
cmp
loop
dec
xor
or
fnstenv
lock
and
dec
out
dec
jne
shrb
insl
movsl
outsl
mov
shlb
pop
add
jmp
enter
and
mov
fists
push
idivb
addr16
ljmp
das
out
add
jge
and
mov
add
int3
add
inc
adc
pop
or
ljmp
inc
repz
xor
add
mov
mov
sub
xor
inc
xchg
pop
daa
dec
into
add
out
cmpsl
cmc
mov
mov
pusha
sysenter
lcall
jecxz
add
enter
fidivrl
adc
sub
adc
movsl
mov
or
sub
cmpsb
push
xor
cmc
rolb
pop
es
je
add
fdecstp
pushf
push
ljmp
mov
add
rcr
ja
inc
jo
add
into
addr16
dec
repnz
add
mov
mov
push
pop
pop
lcall
push
mov
add
test
cmp
or
ljmp
jl
loopne
jno
fdivs
add
je
add
lahf
mov
xchg
test
shlb
dec
sbb
inc
jo
arpl
dec
pop
xchg
movl
mov
add
xlat
icebp
popf
xchg
inc
aad
call
or
inc
and
lods
xor
fwait
shrb
cmpl
call
push
sub
mov
sti
mov
mov
push
movsb
cmp
je
rorl
inc
pop
dec
gs
lods
es
inc
and
add
push
pusha
imul
es
adc
add
push
add
add
nop
bsf
sub
dec
sub
mov
ficoml
repz
rsm
xlat
iret
jno
leave
push
jmp
fldln2
out
daa
cli
int
add
pushl
addr16
ucomiss
fisttpl
dec
push
nop
add
loopne
push
cmpsb
stos
mov
fcoml
lcall
data16
sbb
aam
add
or
bound
pop
cmp
push
pop
ja
push
cld
push
out
std
push
mov
jno
push
movsl
aas
adc
xchg
jmp
inc
cmp
lock
or
mov
inc
in
mov
mov
dec
aaa
add
test
pop
rol
mov
nop
mov
inc
pop
lea
add
std
scas
mov
movsl
js
add
add
notb
add
or
loopne
insl
push
imul
add
leave
sub
cli
add
xchg
push
push
sahf
add
daa
jne
pop
mov
in
loop
mov
add
xor
add
cmp
ljmp
enter
xchg
push
jae
pop
inc
add
nop
dec
insl
fs
arpl
outsl
movsb
pop
sbb
pop
sbb
loop
js
es
xor
enter
push
mov
sbb
nop
xchg
inc
stos
pop
pop
add
jne
mov
fcmovnb
rol
shlb
lret
cltd
roll
and
or
shufps
je
inc
repnz
in
adc
shlb
inc
ljmp
mov
add
mov
je
sahf
xor
pop
es
add
rcrl
mov
xor
jo
add
sub
cmp
add
xlat
shll
adcb
pushf
shlb
cmc
mov
scas
out
sbb
add
adc
jbe
sub
or
aad
lea
gs
fisubs
les
aas
mov
clc
pushf
in
leave
add
xor
dec
push
add
lea
cmp
add
rcr
into
test
repnz
insb
jmp
add
sbb
xchg
les
dec
xchg
xchg
fcoms
dec
add
push
inc
sub
pop
mov
outsl
jo
lcall
add
dec
std
bound
insb
mov
push
push
out
mov
push
mov
mov
mov
stos
je
pop
nop
pop
pop
mov
icebp
ljmp
cmp
add
add
jo
push
mov
mov
mov
or
add
pop
add
dec
push
xlat
cwtl
dec
jnp
lock
cmp
fsubs
adc
pushf
pusha
jnp
sahf
andb
pop
loopne
subb
xor
xchg
adcb
cmp
sbb
add
sbb
sbb
loope
jo
mov
outsl
mov
adc
jmp
add
addr16
add
lods
imul
jl
sbb
push
xchg
hlt
jp
repnz
sbb
fimuls
jecxz
mov
mov
xchg
add
and
cmp
je
mov
scas
in
pop
cld
cmp
pop
push
or
adc
lods
mov
mov
pop
sub
int
dec
add
in
xor
enter
shrb
sub
add
nop
stc
out
scas
rorb
cmp
testl
pop
add
adc
sbb
add
jmp
enter
push
rol
out
xchg
push
fwait
sbb
jns
js
xor
add
cmp
dec
popf
fdivs
add
pop
mov
iret
pop
sbb
in
shll
sahf
loop
and
adc
paddd
adc
mov
or
add
sub
incl
outsl
sbb
push
sbb
inc
mov
or
mov
add
lock
push
sub
ret
jno
cmc
xor
adc
push
fadd
push
sbb
adc
in
jnp
xor
in
cmp
add
cmpsl
rclb
iret
adc
add
xchg
enter
xor
sub
popa
cltd
sbb
test
mov
shll
adc
push
adc
and
out
xchg
loopne
imul
jp
jo
inc
loopne
sbb
push
cltd
aaa
icebp
rorb
jg
ror
repnz
push
inc
rorl
push
into
mov
ror
adc
dec
pop
add
dec
cld
dec
das
outsb
jp
lcall
push
adcb
fwait
push
jo
sti
loopne,pt
push
pusha
or
in
rolb
jg
sbb
push
add
dec
out
mov
aam
repnz
notb
adc
cmpsl
add
scas
scas
and
add
cmp
dec
fdivs
xchg
insb
in
pop
ljmp
test
lods
imul
push
mov
mov
sbb
int3
sbb
ss
sub
push
push
sub
fcmovnbe
xlat
fs
or
leave
cmp
sarl
ljmp
inc
pop
inc
and
call
cmpsb
lcall
sarb
pop
mov
test
aam
xchg
push
mov
js
xorl
cmp
int
xor
dec
stos
rcrb
ljmpw
adc
mov
loopne
andl
in
shl
repnz
out
jo
mov
pop
repz
movsl
mov
push
xor
cli
xor
add
push
sti
roll
or
cmp
or
push
stc
mov
arpl
adc
cmovle
push
icebp
cld
rolb
imul
clc
cli
mov
jno
popf
sbb
sti
add
mov
xchg
jg
pop
push
xor
mov
lock
inc
add
insl
pop
jge
iret
pop
cmp
mov
xchg
rolb
cmc
push
stc
jecxz
dec
and
ret
jge
rcr
gs
enter
out
jb
clc
das
clc
dec
add
jmp
cmpsl
hlt
les
popa
popf
or
cmp
pop
daa
sbb
add
arpl
and
pusha
sub
and
sbb
lods
clc
add
mov
adc
std
inc
test
loopne
out
and
subb
data16
cmp
je
lcall
pop
in
sbb
xorb
push
add
mov
insl
mov
sbb
or
test
add
hlt
andb
aam
mov
pop
jo
xchg
int3
add
or
sahf
push
loope
add
or
ja
ljmp
pop
add
divb
ret
mov
jp
add
clc
jno
call
frstor
repnz
sqrtps
int3
jp
mov
mov
movsb
test
or
mov
leave
sbb
cmpsl
add
mov
addl
push
arpl
mov
dec
add
imull
xor
les
leave
das
add
testl
or
xchg
fadd
hlt
or
xor
push
sbb
cmpsb
xorl
movsb
add
pop
popf
jp
test
xchg
leave
cmp
mov
inc
pop
and
pop
out
mov
mov
xchg
lock
cmp
dec
daa
into
repnz
push
inc
enter
sub
ljmp
je
sub
adc
in
rcrl
call
add
mov
sbb
xchg
out
fwait
or
bound
fsubs
sbb
je
mov
sbb
sbb
ljmp
aad
cmp
into
pushf
adc
xchg
inc
sub
mov
gs
and
add
fadd
sub
arpl
dec
mov
cmc
xor
in
stc
cmp
lret
test
mov
add
cmp
lcall
push
mov
and
addl
sub
orl
jle
mov
rclb
cwtl
xchg
adc
data16
jmp
mov
xor
fistpll
int
xchg
repz
loope
lahf
mov
push
sbb
movsl
jbe
push
fld
sbb
js
sti
pop
andw
jbe
roll
filds
push
pop
pop
push
sbb
sbb
and
xchg
lcall
int3
popf
sub
pop
sbb
imulb
repnz
xor
inc
push
push
arpl
loopne
shrb
sbb
subl
push
jp
fst
add
test
xor
dec
cli
mov
cwtl
pusha
frstor
mov
xchg
gs
rolb
inc
int3
sahf
leave
mov
inc
loopne
add
sbb
push
lcall
jle
leave
ja
adc
adcl
xor
mov
insl
adc
inc
rcrl
push
add
lea
cld
adc
sbb
lahf
sub
lods
jbe
add
gs
loopne
jnp
dec
mov
das
bound
xor
push
sub
filds
mov
and
xor
cli
xor
xchg
iret
add
jne
scas
addb
das
adc
cmp
sub
xchg
push
test
push
ficomps
pop
jecxz
test
out
cltd
sub
pop
add
in
sbb
lcall
cmp
add
dec
imulb
push
inc
and
xor
add
pop
mov
and
and
stos
pop
fidivl
push
dec
xchg
cwtl
mov
idiv
xlat
pop
mov
dec
pop
cld
mov
rcr
lret
sub
inc
fmull
mov
inc
outsl
add
sub
mov
and
outsl
cs
and
jns
mov
mov
and
sahf
cmpsl
add
les
cmpb
enter
xchg
into
push
adc
and
push
sbb
nop
cmpsb
jnp
adc
lea
xchg
in
mov
push
mov
orb
or
jmp
xor
lds
fpatan
xlat
rcrb
in
rclb
sub
shl
adc
subb
add
jmp
pushf
enter
in
mov
mov
push
mov
add
jmp
mov
sti
pusha
jmp
mov
mov
and
icebp
popf
fiadds
push
shl
sub
xchg
sub
ds
mov
fwait
jne
jl
add
and
jmp
fcomps
or
shlb
sbb
daa
pop
xor
jnp
enter
enter
sbb
popf
dec
popa
in
sbb
pop
stos
dec
lock
mov
jno
add
dec
enter
add
aam
call
cmpl
xchg
loopne
std
aaa
hlt
stos
push
add
dec
push
mov
push
xchg
mov
aaa
mov
int
int3
push
jb
enter
push
rclb
mov
or
iret
sbb
add
pusha
cmovp
lods
enter
mov
ret
das
mov
xorl
push
hlt
lds
sbb
cmp
xor
pop
leave
sbb
dec
mov
pop
loopne
dec
pop
nop
pusha
mov
fidivs
rcl
xor
add
mov
loope
std
jp
pop
cmp
add
sbb
jl
sbb
shrl
loop
out
mov
jnp
add
repz
mov
nop
add
mov
sub
loope
dec
push
mov
xchg
xchg
mov
sahf
movl
or
jge
imul
cltd
ja
mov
cmpsb
cltd
ret
jecxz
sub
add
bound
push
jle
mov
jno
call
cvtps2pd
scas
cmpsl
jge
add
imul
js
or
lock
inc
push
adc
jb
cwtl
stos
cmp
mov
pop
sbb
cmp
sbb
fistl
xchg
dec
les
and
sbb
je
cmp
mov
add
mov
adc
in
cmp
cmpl
adc
movsl
out
dec
in
sbbb
mov
mov
into
clc
inc
divb
leave
mov
popf
dec
inc
and
add
mov
lock
mov
pop
lcall
andb
mov
hlt
shlb
adc
pop
jo
adc
sub
pinsrw
rcrb
sbb
repz
jno
xchg
sbb
mov
popf
push
andl
sahf
rcrl
bound
orb
cmc
inc
ja
loopne
sub
sahf
pop
adc
pop
sub
inc
add
mov
fstpl
adc
popa
sarb
sub
cwtl
les
lock
rorb
faddl
fistpl
or
insb
inc
stos
dec
mov
or
xchg
lcall
add
gs
cmp
pop
imul
push
cmp
add
gs
js
and
inc
push
loop
sarb
jno
xchg
insb
sbbb
mov
xor
lock
push
pop
pop
lock
outsl
mov
jp
xor
xchg
pop
add
mov
aaa
cwtl
shl
sub
adc
jge
loopew
popa
xor
mov
xchg
mov
xorb
mov
lahf
int3
add
or
add
les
dec
orl
cmp
sar
gs
sub
lds
pop
jae
xor
add
push
pop
lahf
cwtl
mov
pop
call
hlt
mov
sti
push
dec
dec
loopne
addb
inc
pop
test
dec
add
dec
loop
mov
xor
repz
shrb
jbe
and
add
movsl
rolb
lret
mov
add
and
fmuls
cmpsl
notl
xchg
xchg
das
mov
fstpl
xchg
mov
ficoml
and
adc
enter
ret
adc
test
movsl
mov
sbb
js
jecxz
xor
int3
jbe
test
dec
xor
out
lds
mov
push
pop
movsl
add
test
cmc
pop
fadds
mov
sub
adc
pop
add
sti
mov
jl
scas
mov
incl
adcb
iret
dec
loope
addb
sbb
mov
int3
adc
or
adc
mov
loope
pop
ret
inc
cld
add
movsb
mov
mov
shrb
push
fwait
loope
fdivrl
cld
and
aaa
clc
pusha
mov
xchg
pop
insb
xorb
inc
dec
aam
testb
mov
or
adc
lret
orb
jge
inc
movb
or
into
xor
pop
add
scas
test
mov
ret
sbb
push
rolb
sahf
test
lea
dec
xor
and
pop
loope
xchg
int
mov
loop
filds
fucomp
jmp
or
or
stos
sahf
fs
sbb
dec
push
enter
pusha
test
insl
into
cmp
adc
mov
xchg
dec
repnz
cmc
mov
pusha
loop
and
inc
and
sub
inc
sarb
sbb
pop
pop
mov
hlt
dec
pop
nop
inc
scas
mov
into
add
adc
inc
mov
mov
out
jns
xor
pop
push
imul
clc
push
loopne
add
and
mov
mulps
sbbl
dec
outsl
push
clc
mov
mov
mov
mov
push
inc
rcrb
xchg
hlt
sahf
jl
inc
inc
sbb
jmp
popf
js
popa
movsb
bound
xchg
outsb
into
sub
in
dec
add
leave
shlb
inc
sarb
lahf
and
dec
cmp
cmp
add
cmp
adcl
add
cmp
loope
aas
add
rol
fistps
pop
sbb
adc
out
aad
dec
push
loopne
gs
int3
jae
in
jle
loopne
adc
call
cwtl
xchg
je
lods
lret
dec
jns
movsb
gs
cltd
jae
cmpsb
stos
jnp
daa
adc
add
iret
sub
pop
lea
or
push
fstpt
add
sahf
jae
mov
and
lods
dec
leave
js
divb
push
popa
sti
push
jecxz
leave
clc
cld
adc
jmp
lods
roll
lds
sub
xor
out
psllw
lea
divl
add
mov
int
mov
and
data16
pop
pop
cmpb
sarl
add
fisubl
adc
sti
rcrb
and
jbe
idivl
add
loopne
jb
xlat
cmp
cmp
nop
dec
inc
inc
push
movsl
fisubrs
flds
hlt
jmp
push
sar
jno
insl
insb
imul
cmp
add
dec
or
push
andl
add
inc
mov
pop
jecxz
lahf
adc
xlat
adc
aam
pop
bound
loope
inc
jl
push
hlt
xor
push
cmc
add
sar
insb
mov
dec
cs
or
add
mov
push
sbb
add
jo
fiadds
add
mov
or
jns
jg
rclb
mov
repz
dec
int3
mov
and
cmp
in
pop
add
push
nop
leave
add
add
testb
xor
mov
inc
imul
das
push
pop
add
and
and
add
push
jo
inc
enter
lds
or
lret
imul
pop
mov
insb
xorb
lock
pushf
and
adc
push
cmpsb
sbbb
xor
xchg
push
adc
inc
int
and
sbb
xchg
and
add
or
xchg
das
xor
add
inc
outsl
popf
sbb
jne
push
rorl
sub
inc
cld
or
cwtl
dec
add
loopne
dec
xchg
add
call
shlb
adc
shrb
pop
jne
inc
sti
imul
mov
dec
adc
mov
clc
push
frstor
dec
pop
jo
lods
pop
popa
js
mov
jbe
sbb
nop
fwait
and
xor
add
repnz
xchg
lock
addr16
bound
mov
pop
inc
pop
les
mov
xchg
lret
jne
and
lods
lods
cmp
cs
ja
cmp
lock
jo
add
mov
xchg
fldl
cltd
push
jle
fwait
loop
fmuls
mov
sbb
xchg
stos
or
pop
push
je
sbb
adc
cld
push
mov
rcrb
jmp
xchg
xchg
aam
push
in
mov
fcomps
rclb
ret
sahf
loopne
xchg
shlb
aam
imul
or
out
sbb
mov
mov
fiaddl
and
in
loope
cmp
pop
push
out
sub
test
push
add
inc
adc
push
mov
push
imul
and
add
xchg
fstps
xor
mov
add
ds
popa
or
inc
add
mov
add
clc
scas
sarl
leave
push
scas
add
cltd
jl
adc
inc
lahf
or
or
jmp
int3
or
sbb
dec
xchg
push
lods
pop
cli
xorb
movb
xor
jmp
adc
pop
jb
and
call
adc
cmp
adc
lret
in
mov
or
mov
sub
push
bound
aam
fmuls
sbb
dec
cmp
stos
arpl
loope
lock
imul
and
mov
jle
sar
dec
sbb
cwtl
dec
pop
cmc
cmp
mov
xor
rolb
clc
inc
and
sbb
pusha
enter
mov
ds
sub
pop
inc
dec
leave
fdivs
popa
jno
mov
nop
and
jb
sbb
or
repnz
jl
pop
mov
roll
dec
fisttpll
jns
das
and
pop
in
adc
jne
sub
mov
inc
orb
and
fs
sbb
dec
mov
xor
fisubrl
gs
pop
xchg
mov
mull
je
rcr
repz
lock
sar
pxor
les
mov
push
hlt
adc
and
and
push
cs
sub
test
in
sbb
movsb
jl
lcall
pop
pop
cmp
xor
jle
hlt
jmp
jg
mov
mov
in
fwait
scas
add
mov
das
movsl
in
adc
pop
or
xchg
cld
adc
mov
jb
js
push
and
xorl
sahf
push
mov
add
xchg
sub
cld
in
lock
add
stc
inc
icebp
lret
pushl
mov
push
std
mov
jo
dec
pop
jns
rorl
das
out
shlb
decb
sbb
rcll
dec
popf
js
test
pushf
add
pop
data16
hlt
aaa
or
aam
xor
push
mov
das
in
adc
add
push
ret
aam
push
out
data16
xor
push
fstpt
jb
jl
daa
in
je
and
dec
xchg
mov
mov
subb
jbe
cwtl
or
les
adc
add
daa
faddl
aam
push
movsb
xor
inc
lret
pop
mov
dec
dec
ror
fcomps
ret
sbbb
xchg
mov
dec
insb
fsub
sbb
into
add
add
daa
lods
and
jae
cmpsl
xchg
inc
pop
sbb
inc
scas
and
adc
sub
cmp
mov
xchg
xor
push
imul
xchg
ficompl
and
sbb
int3
mov
add
ss
dec
add
leave
and
sarb
fadds
ja
enter
pop
lret
pop
les
adc
js
adc
js
fwait
rcll
inc
shl
add
sbb
adc
call
push
stos
loop
mov
mull
fwait
add
imul
faddl
dec
out
test
add
aam
mov
fwait
lods
hlt
push
cmp
popa
inc
repnz
out
and
mov
inc
mov
push
adc
shlb
out
imul
mov
movsb
nopl
pusha
int
les
push
andl
add
cmpsl
std
int
repz
inc
les
call
add
mov
add
fwait
dec
mov
cmpsl
pop
xor
adc
sub
in
daa
rcrl
out
or
dec
sbb
dec
adc
test
andl
mov
sti
cld
mov
adcb
jbe
fwait
repz
notb
mov
pop
push
jae
ss
jns
and
out
subl
iret
nop
mov
push
imul
adc
pushf
lods
hlt
mov
push
mov
stos
popa
aad
cld
subb
xorl
addr16
jbe
pushf
andl
int3
out
pop
mov
cmpsb
push
xchg
or
inc
pusha
inc
pushf
xchg
adc
sti
in
cmpsl
aam
enter
insb
movb
jnp
es
adc
add
jp
gs
test
das
push
lret
fwait
mov
push
mov
incl
adc
call
out
sbb
mov
insl
push
dec
pusha
lret
sbb
fmull
add
nop
lods
xchg
add
mov
pop
fiaddl
mov
add
sub
push
add
call
mov
movsb
movsb
fmuls
push
adcl
adc
test
pop
in
leave
orb
fisttpll
push
push
in
mov
pop
xor
pushf
sub
movsl
xchg
and
jl
adc
and
dec
push
inc
jmp
cmpsl
jne
js
and
push
xor
rorl
add
cmp
frstor
inc
pop
mov
adc
jge
pop
xchg
mov
dec
mov
jg
das
add
sbb
push
adc
xchg
icebp
in
lret
dec
or
arpl
mov
mov
xchg
stos
pop
sub
pop
xlat
add
jp
xchg
pushf
mov
in
mov
call
aad
jge
aam
lea
adc
push
pop
cwtl
and
jo
adcb
outsb
rolb
jecxz
pop
jg
add
not
loope
in
pop
add
add
add
ja
mov
add
pop
test
rolb
pop
psrlq
cmp
jae
cli
pop
popf
add
jne
jl
push
mulb
sahf
push
sub
or
pop
js
loop
jno
jnp
push
inc
dec
je
add
pop
lea
in
inc
cmp
shlb
call
hlt
adc
inc
test
and
jl
lock
into
imul
scas
negl
pop
inc
add
and
add
or
sarl
dec
add
in
sahf
jbe
pop
inc
add
pop
pop
int
adc
dec
pushf
push
fmuls
or
lds
fnstcw
fsubp
rorb
add
adc
pop
add
jg
lods
je
lret
adc
or
scas
popa
call
inc
add
mov
cmc
in
add
push
ficompl
add
adc
dec
cmp
adc
in
iret
inc
mov
or
mov
jecxz
pop
fsubp
xlat
subl
xor
mov
das
mov
fs
mov
inc
fdivrl
inc
test
rolb
setl
or
inc
cld
pop
xlat
pop
mov
adc
jl
jno
shlb
pop
in
xor
adc
and
pusha
lret
test
aas
lret
cmp
nop
xchg
cmc
add
add
push
sti
inc
rcl
push
xor
xchg
xchg
sbb
xor
test
inc
leave
mov
fcoms
and
xchg
icebp
add
dec
sub
mov
pop
out
add
ljmp
dec
in
mov
nop
insl
scas
jb
push
inc
call
pusha
rcrb
inc
jle
cwtl
push
popa
jnp
push
inc
testl
fisttpl
loopne
lret
adc
shl
adc
test
ja
add
mov
pop
inc
mov
xor
cmpsl
lret
mov
repz
cld
add
xchg
bnd
xor
jns
insl
cwtl
cmp
insb
scas
hlt
pop
adc
je
pop
movsb
pop
sbb
or
pop
mov
cwtl
pop
out
dec
rcrl
xchg
and
and
add
lret
sti
mov
xchg
cltd
jl
mov
dec
mov
or
or
add
fisttps
cmpsl
adc
and
ficoml
pop
aas
insl
sbb
stc
adc
add
mov
shrl
fdivrl
xor
lret
std
and
and
pop
addb
inc
add
rorb
cwtl
pop
mov
and
addl
cmp
sbb
dec
pusha
dec
adc
adc
add
out
flds
pop
mov
add
inc
xchg
jo
idivb
pop
loopne
dec
xchg
fidivrs
loopne
int3
fwait
push
xor
adcb
scas
add
test
ficoml
enter
icebp
inc
mov
sbb
add
les
add
push
leave
call
loopne
push
rcr
jg
push
std
and
lcall
add
pop
aaa
nop
lret
dec
jno
adc
mov
fcomps
pushf
lret
cmp
iret
pop
mov
fs
je
inc
or
jbe
ds
mov
pushf
add
ror
lock
xor
rcll
mov
imul
into
loopne
cmpsl
lds
stos
dec
dec
ficoml
mov
mov
shll
sub
loopne
cmp
add
scas
pop
jno
js
push
cwtl
bnd
testb
inc
dec
adc
cmp
rcrl
adc
pop
and
jno
emms
mov
mov
into
fs
int3
fadds
adc
arpl
xchg
push
jb
sarl
cmpsb
xor
sub
int
sar
jp
mov
pushf
push
xchg
cmp
xchg
fs
push
jl
sarb
and
or
fmull
repnz
mov
cltd
dec
mov
add
mov
adc
or
xor
dec
pop
nop
push
cld
rol
add
xor
mov
pop
pop
and
stc
sbb
out
xchg
lret
push
pop
ljmp
xchg
lret
lret
pop
sbb
cwtl
daa
lock
and
add
xchg
lret
dec
inc
or
inc
xchg
xor
fsts
cld
push
mov
pop
mov
pop
fdivrl
add
adc
in
fildl
sub
int
sub
popf
clc
inc
enter
adc
js
jbe
mov
fsub
ret
push
sub
ljmp
cwtl
sub
xchg
out
push
and
and
fmuls
out
sub
inc
mov
push
mov
jp
xchg
add
push
pop
das
jb
jb
clc
inc
int
pop
xor
push
cmp
lods
inc
sub
imul
popa
and
daa
inc
addl
lret
in
push
mov
xchg
jbe
add
inc
daa
mov
les
dec
jmp
sbb
jp
dec
mov
push
out
mov
add
andl
push
jl
mov
and
aam
pushf
push
or
hlt
mov
cld
ret
add
adc
lret
adc
shlb
or
mov
psubusb
sub
xor
sub
hlt
push
or
lret
or
sahf
cmpsb
movl
in
xchg
fnstsw
xor
ss
insl
mov
sahf
pop
xchg
push
xlat
loopne
inc
sbb
sbb
cli
enter
pusha
dec
jns
rcrl
les
xchg
fisttpl
add
push
xchg
pop
mov
jg
add
jle
pop
inc
ret
mov
imul
pusha
enter
mov
stos
movb
cld
int3
in
cmp
mov
pop
add
cmpb
push
or
es
inc
lods
test
push
add
sbb
push
cltd
or
mov
jle
insb
mov
inc
cld
mov
jne
lods
shr
cmp
pop
push
sbb
in
mov
arpl
and
insb
or
sbb
cs
add
mov
jle
jbe
cmc
cwtl
ss
rorb
out
pop
push
add
add
js
pusha
add
dec
lods
out
fnstcw
movzwl
dec
cld
push
bound
pop
nop
mov
arpl
xchg
nop
enter
lock
inc
movsb
fsubrp
pop
add
mul
push
loopne
lods
jno,pn
jl
sub
dec
leave
mov
sub
and
mov
add
push
adcl
movsb
mov
das
subb
mov
fiadds
cltd
fcoms
push
repnz
fidivrl
and
fdivrs
jno
jo
add
test
push
cmp
mov
or
mov
mov
dec
fimull
push
nop
es
sub
add
jmp
std
rclb
cmp
or
incb
adcb
out
or
movb
sbb
push
std
imul
loope
and
orb
mov
lods
stos
pop
jbe
nop
in
add
adc
adc
rcrl
xchg
sbb
push
push
add
pop
in
mov
rorb
jle
out
testl
mov
int
mov
push
loop
cli
cmp
add
fwait
pop
loopne
outsb
xor
hlt
rolb
mov
aas
add
and
lea
dec
repz
das
cmp
jle
cld
je
jg
cmc
mov
jl
gs
jns
pusha
inc
pop
rolb
clc
mov
ret
pop
inc
test
sub
fsubrs
and
mov
xor
inc
cmpsb
xchg
sarl
add
sub
adc
inc
pop
push
movsb
call
nop
rcr
roll
call
repz
sbb
fstps
mov
mov
cmp
adc
ret
cltd
inc
and
push
cmp
sbb
cmp
cli
adc
insl
xchg
jno
clc
mov
and
xor
mov
out
adcl
mov
pop
inc
mov
pushf
inc
repnz
cmp
or
adc
stos
aas
add
call
sub
sbb
aad
xchg
movsb
divb
sahf
add
imul
test
add
xchg
repnz
enter
shrl
or
pusha
scas
lock
mov
jl
sub
add
push
ret
pop
sub
sahf
mov
sbb
or
stos
pop
or
shlb
and
into
mov
das
or
mov
jp
rolb
in
cwtl
test
int3
or
jmp
add
cltd
or
sbb
cmp
enter
xchg
pop
pop
jl
and
cli
add
xchg
adc
mov
lock
mov
mov
test
pushf
mov
shrb
add
mov
lret
sti
int
repz
lret
xchg
dec
in
cld
sub
jo
add
out
outsl
jno
mov
imul
jne
in
xchg
loopne
push
test
movsl
lea
add
push
and
jb
orb
sbb
loop
add
add
sbbb
js
mov
stc
popf
add
push
cmp
add
xchg
or
mov
lcall
xchg
dec
repz
sbb
add
inc
add
fsub
les
mov
jo
cltd
mov
mov
mov
addr16
xchg
inc
sbb
test
adc
or
hlt
xor
add
notb
shr
lret
add
out
cmpsb
dec
in
sub
add
fsubrs
or
dec
imul
or
mull
jl
arpl
inc
push
add
cltd
shrb
sub
adc
xor
testb
insb
pop
mov
jnp
cmpsb
mov
and
roll
add
add
push
andb
sub
loop
sub
enter
ret
xor
shlb
imul
sbb
or
js
cmc
mov
sbb
add
pop
and
adc
jbe
add
test
subb
cwtl
sub
xchg
mov
xlat
pop
dec
lret
movsb
sub
sahf
jb
hlt
adc
sbb
mov
push
addl
adc
add
xchg
dec
loopne
int3
test
or
scas
andb
and
inc
iret
inc
jne
push
mov
and
outsb
repnz
ja
sub
or
clc
add
hlt
call
jo
inc
mov
das
and
jge
push
subl
es
dec
call
push
mov
pop
sub
mov
or
icebp
insb
mov
fidivrs
jecxz
jmp
jle
jno
ds
dec
lock
add
xor
hlt
mov
add
push
lock
adc
inc
mov
pop
jne
add
enter
mov
lock
adc
clc
xor
je
imul
in
add
imul
fbld
xchg
and
and
add
adcl
aad
dec
cmp
loopne
imul
push
and
add
and
mul
mov
and
std
add
dec
insb
cs
jns
hlt
int3
pop
sub
or
and
pop
push
and
out
push
nop
push
ds
dec
cltd
or
cld
incl
rol
rcl
rcrb
inc
push
and
sbb
bound
and
push
add
out
push
cltd
pop
inc
and
rorb
adc
fadds
aad
push
enter
jg
dec
cmp
cmp
call
xchg
xchg
add
mov
fsts
pextrw
sub
xor
subl
rcrl
sub
mov
loopne
in
into
ds
scas
jns
add
mov
rcrb
jno
clc
pop
mov
add
faddp
int3
jbe
movsb
mov
stc
testl
sub
push
and
jne
jp
and
mov
cltd
jnp
and
jmp
scas
jae
mov
test
mov
sub
roll
adc
cmp
in
mov
cltd
insl
mov
popa
scas
add
fwait
stos
test
adc
dec
add
push
stos
cmp
mov
mov
add
into
in
aam
js
mov
jle
add
das
std
mov
ljmp
or
loopne
adc
push
jge
ret
outsb
mov
aam
std
sbb
repnz
insb
stos
push
dec
test
add
xorl
lret
daa
pop
pop
push
ss
inc
roll
xchg
das
cs
mov
and
jl
or
fs
xor
cmpl
jp
mov
sbb
add
dec
sbb
mov
mov
jno
pusha
roll
test
or
and
es
ret
add
and
inc
sub
mov
jno
cmpsb
outsb
adc
scas
dec
ja
mov
add
sub
sub
adc
js
js
xor
adc
sbbb
insb
add
dec
mov
out
pusha
repnz
call
xor
cmpb
addl
mov
adc
movsl
and
dec
ret
jle
das
jl
push
nop
sbb
sub
xchg
call
push
adc
or
repnz
cwtl
lcall
lahf
jl
sub
iret
pusha
inc
imul
mov
jo
adc
into
ud0
inc
pusha
rclb
subb
jno
add
fcoml
adc
stos
sub
sbb
aad
popf
aas
test
stos
sub
xchg
loop
das
mov
dec
jmp
orb
repnz
or
cmp
movsb
popf
mov
pop
lcall
inc
push
jo
lds
shlb
mov
and
jg
mov
repnz
popa
dec
mov
jo
xchg
pushf
mov
rolb
jg
int
push
add
jo
mov
data16
xor
or
mov
cmp
inc
dec
push
cli
add
loopne
or
cs
in
sub
daa
repnz
popf
xor
test
das
sar
lahf
nop
les
add
or
and
add
sbb
outsl
sbb
pusha
hlt
popf
cs
mov
adc
sub
jns
push
mov
adc
pop
xor
xor
int
cmpsb
out
push
cmp
pop
add
add
call
xchg
mov
dec
jl
loopne
decl
call
adc
xchg
mov
cld
add
mov
mov
xadd
jnp
dec
cmp
pushf
sbb
les
or
push
aam
mov
jne
add
sbb
mov
incb
push
and
pusha
add
shll
test
mov
pop
push
in
add
push
xor
mov
mov
inc
gs
je
dec
jmp
out
cwtl
inc
mov
add
or
and
adc
dec
pop
add
js
sub
dec
movsb
or
divl
test
lret
xor
in
cmp
lea
add
insl
ljmp
pushl
je
pop
dec
add
or
pop
mov
loop
inc
imul
mov
mov
popf
mov
insl
aad
push
stos
pop
sub
jns
sbb
inc
mov
mov
pop
loope
jnp
jo
add
test
mov
xor
leave
adc
sbbl
mov
jg
lock
in
popl
cmp
mov
xor
mov
dec
mov
popf
mov
mov
adc
jle
loop
dec
push
jne
dec
mov
ds
mov
inc
xchg
xchg
mov
and
inc
mov
lret
fwait
mov
je
ret
fcompl
and
das
add
out
lods
scas
sbb
outsl
pop
and
add
fisubs
and
and
cli
or
in
add
dec
lock
add
push
jecxz
cwtl
fsubs
es
sbb
vpmadcswd
lahf
xor
dec
add
or
mov
push
mov
push
inc
or
hlt
inc
je
ds
in
mov
rol
dec
xchg
lret
sub
adc
daa
sbb
push
mov
mov
mov
jae
sub
hlt
nop
es
add
loope
in
js
movsb
cld
in
js
cmpxchg
lret
shl
clc
add
insb
sahf
pop
in
add
out
pop
lods
cmpl
enter
xor
pop
sub
cld
add
cmovne
ljmp
hlt
xlat
pusha
cwtl
adc
movsb
lret
and
push
xor
mov
or
test
and
daa
jno
rorb
push
lods
jne
mulb
jo
dec
or
pop
mov
or
push
arpl
ljmp
mov
xchg
push
orb
xchg
mov
and
orb
xor
aad
cmp
rcrl
int3
pop
inc
adc
out
cmp
mov
repnz
addr16
shl
cltd
and
and
and
push
int3
loopne
loopne
int
push
jge
pop
loop
cmc
imul
andl
iret
push
xchg
add
data16
rcll
add
cmp
jmp
int3
mov
pop
std
and
pop
mov
pushf
mov
nop
adc
jle
push
push
add
es
push
jmp
rol
int3
test
jo
in
movsl
push
add
jb
out
es
clc
sub
sub
cmpsl
jns
xchg
pop
mov
inc
pop
ret
dec
daa
jno
stos
push
cmp
add
jge
repnz
int3
je
jbe
jl
cwtl
call
cmp
jge
clc
sub
loope
movsb
push
pop
cmp
jecxz
call
jne
popa
xchg
dec
out
cwtl
icebp
rdmsr
or
add
mov
add
addps
out
pop
sbb
or
add
mov
pop
mov
cld
sub
add
out
dec
sub
push
add
and
adc
sub
mov
mov
jno
jnp
cmp
fsubrl
cmp
mov
ljmp
popf
and
mov
mov
push
add
or
dec
js
add
dec
in
or
and
xor
loope
jle
jo
popf
sbb
xchg
es
das
sbbb
rol
in
repz
xchg
push
nop
xchg
add
sub
aad
mov
pop
sub
inc
sarl
jl
xchg
repnz
sbb
ret
sbb
les
imul
add
js
xor
jae
cmp
andb
and
push
sub
push
jle
mov
pushf
add
mov
adc
mov
xchg
int3
mov
pop
push
ja
add
pop
dec
repnz
ljmp
data16
arpl
jp
sub
adc
adc
sbb
add
pushf
int
xchg
or
and
pop
shlb
xor
or
test
nop
or
testb
cmp
test
and
sub
addb
add
rcr
ja
sbb
xor
mov
repnz
add
adc
shll
imul
loopne
lock
cmp
rcrb
bound
int
xor
js
je
pop
mov
in
mov
xchg
in
jbe
sub
inc
jp
call
out
sbb
add
lahf
gs
push
subb
sahf
les
in
and
andl
lcall
cld
adc
push
mov
adc
jecxz
mov
or
add
xor
push
or
pop
mov
sub
dec
pop
adc
cmp
adc
add
cmc
jmp
ljmp
and
jl
out
clc
jge
push
sub
and
and
fcmovbe
daa
push
and
and
repnz
rolb
add
pop
icebp
xchg
rcrl
cmp
push
jecxz
sbb
or
adc
push
or
shrb
pop
inc
es
sbb
rorb
data16
jbe
add
sbb
pop
add
or
das
je
mov
into
lods
add
popa
and
daa
int3
push
ret
xorl
lret
sahf
hlt
push
ja
insb
adc
cltd
popa
mov
aaa
rcrl
add
sar
mov
fmuls
int3
sbb
cmp
or
sub
loop
stos
fldl
xor
bound
inc
lods
push
add
adc
sbbb
fimuls
rdtsc
sub
stos
pop
inc
leave
jge
pusha
jo
push
dec
push
xor
stos
cmp
ljmp
push
cmp
adc
out
pop
movsb
mov
vmread
imul
nop
es
mov
mov
ror
sub
clc
addb
mov
daa
add
imul
les
and
sti
int
fsts
xchg
adc
std
push
pop
jo
cs
shlb
jb
das
lret
leave
jae
loope
push
xchg
add
sub
push
and
dec
jmp
sarb
inc
jns
rcrl
sbb
push
cmp
fmuls
adc
push
les
lahf
insb
rorl
cmp
pop
sub
rcrb
cmc
push
push
cmp
sub
push
or
jae
push
dec
das
cmp
jo
jl
data16
push
dec
sbb
pushf
das
shl
sub
dec
lock
push
jmp
dec
mov
aad
scas
inc
pop
or
data16
movsl
insl
xor
add
mov
fsubrp
pusha
push
push
mov
pop
or
inc
es
sub
dec
and
add
int3
add
dec
add
aas
cld
call
rolb
fbld
cmp
mov
addr16
push
xchg
sysexit
xor
shlb
sub
add
in
seto
or
movsb
inc
push
aas
leave
or
into
sti
xchg
les
xor
xor
mov
out
shl
cli
add
lods
inc
cmpsb
add
jo
lcall
mov
stos
std
xchg
jno
test
push
lods
xor
push
add
add
outsb
cwtl
lods
lods
lret
inc
sbb
inc
inc
pushf
dec
push
enter
add
mov
cs
sar
add
imul
jo
popa
aad
sti
je
rolb
dec
lret
mov
cmp
mov
out
stos
aaa
add
and
or
in
mov
or
sbb
gs
pop
or
dec
xchg
enter
jno
in
fdiv
sub
aam
lret
mov
dec
sub
pop
loop
add
int3
inc
mov
jge
adc
adc
jbe
ja
test
adc
mov
mov
dec
cmp
mov
addb
add
and
mov
or
aas
add
xchg
ds
mov
pop
aam
sbb
mov
inc
in
mov
jns
push
idivb
and
mov
loopne
mov
lret
fstpl
lods
jmp
mov
push
cmp
movsb
faddl
fildll
aad
dec
add
pop
and
rolb
pop
jge
add
incl
test
xchg
testl
sub
lret
cli
add
in
in
xorb
pop
cwtl
adc
mov
movsl
enter
in
add
mov
adc
ret
pop
sub
insl
ror
subl
and
and
int
repz
aad
fsubs
push
dec
popf
insb
dec
mov
inc
mov
xor
sub
push
stos
mov
cmp
or
jb
fs
and
add
mov
inc
cwtl
add
or
add
cmp
loopne
add
or
int
in
adc
subl
mov
xor
jle
out
ficoml
add
cli
cmp
pop
movsl
ss
int3
shll
xchg
int
sbb
addl
cwtl
movsb
or
mov
fwait
popf
lds
mov
enter
rcrb
cmp
push
xor
movsb
add
pop
jge
cmp
push
fs
add
push
test
dec
sbb
jle
lods
jbe
andl
popf
mov
out
mov
and
inc
sbb
test
not
lahf
xchg
adc
ds
loope
add
test
pop
mov
fldl
lods
ljmp
adc
jg
in
call
popa
pop
push
imul
add
or
add
mov
inc
data16
mov
sbb
clc
fsubrl
pop
adcl
cmp
add
or
mov
xchg
push
in
dec
dec
cli
cmpl
rol
cmp
in
pop
cltd
int3
mov
pop
sahf
and
orl
movsb
jno
dec
pop
repnz
pushf
or
sbb
cmp
imul
or
ljmp
add
popf
repnz
mov
and
jo
mov
mov
test
add
mov
pop
push
movsl
ret
jae
sub
and
or
ljmp
leave
xchg
sub
inc
add
test
rolb
stos
in
into
testl
outsb
xchg
add
ret
imul
mov
sbb
lds
rclb
xor
mov
sub
ret
repnz
loope
add
mov
sbb
loop
push
sahf
iret
xchg
cmp
add
pop
fsubs
mov
divb
cld
cmc
adc
pushf
arpl
inc
xor
xchg
aad
and
xchg
stc
dec
repz
push
hlt
fstpt
cmc
sbb
xchg
in
rorb
adc
les
addb
cmp
push
mov
nop
or
jp
clc
jl
inc
adc
aam
add
lods
dec
cmc
push
in
xlat
cwtl
jns
adc
mov
mov
shl
and
cmpsb
pushf
cmp
xor
push
dec
pushf
jl
and
mov
dec
clc
out
rorl
les
mov
inc
mov
das
lea
mov
mov
cmp
scas
add
push
pmaddwd
enter
dec
popf
and
sbb
adc
pusha
mov
add
pop
ja
clc
scas
rorl
fsubr
jmp
out
fs
mov
subb
add
fmuls
or
adc
lods
add
negb
test
cmpxchg
cmp
dec
add
dec
mov
lahf
movsl
lahf
adc
and
sti
jl
sahf
fs
mov
popa
and
or
cmpsb
push
adc
js
cld
pop
and
dec
inc
lret
inc
cltd
clc
jns
scas
add
dec
in
and
js
sbb
out
or
mov
jp
sbb
xchg
aad
add
clc
mov
nop
lret
pop
xchg
jns
xor
push
cld
imul
xor
faddl
fmull
in
out
cmpb
xor
inc
lcall
cmpsl
stos
inc
nop
psrld
aad
aas
dec
dec
xchg
fwait
mov
lods
jns
cmpsl
jo
add
jb
hlt
fwait
push
dec
lock
sbb
and
xchg
sahf
and
inc
outsb
push
jg
lods
aam
sahf
pop
stos
loop
or
enter
fs
mov
pop
mov
adc
or
js
and
add
mov
push
and
movsl
and
or
fs
mov
lcall
popa
jne
loop
or
dec
fbld
insb
pop
mov
fcoms
leave
pop
push
mov
sti
dec
mov
xchg
mov
test
adc
lret
xor
cmp
aaa
daa
filds
test
hlt
loope
movsl
xchg
rolb
cmp
sbb
add
xchg
ljmp
arpl
hlt
cmc
mov
je
xlat
mov
fnstcw
jo
sub
jp
pop
push
mov
arpl
frstor
mov
std
adc
fs
and
dec
pop
mov
push
in
pop
dec
outsb
out
add
sar
aad
das
add
mov
flds
stc
call
and
push
add
xchg
sbb
daa
cmpl
pop
xor
test
cld
int
ljmp
mov
pop
jno
adc
add
inc
or
testb
push
fimuls
add
notb
jnp
or
and
cld
or
test
dec
hlt
adc
add
inc
and
lods
push
xor
inc
int
xor
xor
sub
ret
stos
add
out
or
scas
sbb
cli
mov
adc
mov
pusha
je
ret
jbe
push
and
subb
fidivrs
pop
lods
cld
mov
fdiv
jmp
push
and
negl
jmp
sbb
jb
mov
add
jle
xchg
dec
pop
sub
inc
sbb
frstor
mov
dec
fsubl
inc
leave
add
mov
pop
mov
les
xchg
scas
aaa
test
add
push
lea
mov
popf
inc
cmp
dec
imul
mov
js
mov
repnz
cmp
popf
jl
jns
push
and
nop
and
push
jo
in
pop
sti
daa
mov
pop
push
add
lock
jbe
jne
add
sbb
add
rcrb
cld
fs
sbb
mov
sbb
push
bound
sub
inc
dec
jo
sbb
sti
shl
pushf
sahf
js
xchg
xor
test
jno
mov
jae
add
xchg
jns
add
sbb
sbb
cmp
inc
jne
les
out
lds
jl
and
jae
pop
cmp
jne
enter
addr16
cmp
add
mov
inc
add
out
mov
ljmp
scas
sbb
push
adc
fbld
aas
push
xlat
outsl
inc
add
adc
push
xor
sbb
cs
outsl
andb
jge
add
push
push
decl
jecxz
lcall
add
pushf
add
dec
shr
ljmp
dec
movsl
cltd
push
push
sahf
popf
inc
pop
dec
mov
add
adc
sbbl
add
fsubr
outsb
dec
pop
das
sbb
test
sbb
pushf
xchg
push
add
push
jae
dec
les
add
push
insb
sbb
stos
ds
dec
fbstp
cmp
or
in
loope
test
jecxz
sbb
add
mov
add
in
inc
mov
aas
push
sbb
cltd
add
leave
jmp
fnstenv
xchg
pop
jne
iret
mov
xchg
scas
mov
xor
xor
xchg
cmpsl
dec
add
jnp
sbb
imul
adc
sbb
sub
pop
xor
sahf
xchg
mov
es
jp
cltd
sbb
add
dec
in
jge
stos
cmp
mov
nop
xor
and
inc
add
and
icebp
and
insb
in
inc
adc
adc
mov
pop
add
cmpsb
cli
xchg
sub
push
pop
or
fbld
test
and
xchg
fcomp
and
jge
shl
adc
insl
sbb
xor
into
dec
adc
cmpsl
shll
adcb
jbe
push
push
pop
add
push
sbb
add
pop
xchg
xor
push
mov
jne
fbstp
add
push
data16
push
or
mov
mov
insb
push
add
fstps
pop
jae
ret
mov
cmp
or
push
inc
push
test
mov
dec
fisubrs
lods
adc
enter
pop
xor
push
fimull
dec
ljmp
cmpsb
add
cwtl
push
add
jbe
add
add
cmp
adc
movups
insb
push
xor
mov
and
ljmp
ficompl
into
add
pop
int3
adc
inc
sbb
add
mov
or
add
xor
mov
leave
clc
stc
js
add
imul
sbbb
jle
test
subb
aad
pop
pushf
pop
add
mov
lods
sbb
xor
iret
add
fiadds
cmp
or
pop
je
flds
dec
jp
bound
push
cmp
cmpsl
pop
mov
pushf
insl
cmp
rorb
fmuls
lods
cld
mov
add
mov
pop
pop
mov
xor
add
data16
rcrb
roll
cmp
leave
sbb
cmpsl
pusha
sbb
add
into
lret
adc
sbb
fidivrs
xor
push
add
adc
test
and
sti
ljmp
xor
in
mov
mov
cmpsb
into
stc
inc
mov
inc
call
adc
adc
inc
outsl
dec
push
xor
push
lahf
popa
movsb
sub
ret
jmp
mov
add
je
or
push
xchg
push
jno
js
add
jns
mov
dec
das
mov
push
mov
out
cmp
fists
sbbb
sbb
dec
stos
je
aas
in
add
ret
or
and
jns
mov
imul
pop
sub
xchg
inc
outsl
andb
leave
leave
imul
adc
mov
cmpl
repnz
loop
push
dec
mov
add
jne
subb
fmuls
xchg
clc
jl
dec
rolb
addb
and
cwtl
add
add
hlt
xchg
jo
dec
pop
mov
call
add
cmp
add
push
addr16
cltd
je
mov
js
fnstsw
sub
dec
cmp
or
cltd
push
adcb
mov
addl
or
add
or
test
and
int
cmpsl
adc
add
sbb
push
or
out
lea
mov
mov
int3
mov
mov
je
mov
push
repnz
jae
nop
pop
js
dec
mov
adc
sbb
dec
add
and
scas
shrb
ret
add
sub
jae
in
jb
add
push
lcall
sub
push
gs
push
fs
in
pusha
pop
pop
decl
xchg
adc
lds
nop
inc
inc
inc
test
xor
int3
jns
test
or
loopne
lahf
or
in
sub
rolb
jns
add
and
int3
or
xchg
sarb
adc
daa
add
sti
xchg
mov
fsubl
fs
and
insl
adc
loopne
data16
pop
sbb
sbb
add
cmpsl
jl
dec
xor
lret
xchg
mov
mov
jl
dec
stos
inc
leave
inc
jne
jo
fisubrl
jns
in
jecxz
ja
enter
sbb
pop
jne
movsb
mov
add
mov
stc
adc
fdivrs
cmp
fs
mov
dec
add
subl
and
push
xor
mov
jecxz
nop
mov
mov
cltd
call
cwtl
jo
stos
insl
mov
inc
xor
add
and
jne
into
sub
inc
mov
xchg
push
add
jle
xor
dec
mov
out
xor
jae
add
incb
mov
pop
shll
sbb
dec
xchg
iret
push
add
cltd
nop
xchg
xlat
rcll
sub
push
in
outsb
dec
sub
rolb
js
add
or
test
push
dec
mov
sub
dec
insb
add
mov
cltd
stos
fisttpl
add
mov
push
add
pop
pop
pop
daa
es
std
add
sub
loopne
int3
dec
or
pop
sub
add
xchg
jl
das
clc
xchg
ficoms
movsb
push
mov
sub
js
dec
cmpsl
inc
push
xor
jl
icebp
add
xchg
aaa
pop
pushf
mov
add
cli
mov
dec
add
int3
jge
add
pop
pop
or
psubusb
movsl
ffree
fs
loop
and
dec
push
or
inc
rcrl
add
aaa
mov
sbbl
push
add
dec
xchg
sbb
shll
lock
push
cmpsb
xchg
ror
sbb
xlat
outsb
add
sub
roll
mov
nop
mov
sahf
dec
loopne
or
cmp
add
adc
pop
and
jle
mov
push
jl
jne
nop
cmpsl
sar
lods
jg
add
add
mov
adc
push
xlat
mov
adc
movsb
xchg
fcoml
xor
mov
xchg
or
ret
adc
nop
outsl
and
shrb
push
push
scas
dec
add
adc
mov
bound
addr16
jge
push
mov
enter
pop
inc
jmp
jmp
jne
jb
and
and
jnp
shlb
cs
mov
dec
inc
inc
or
sti
and
cmp
sbbb
cmpsb
cmp
mov
faddl
dec
xor
adc
rcl
and
outsl
outsb
mov
adc
adc
subl
dec
inc
jne
popa
cmpsl
fsts
sub
cwtl
and
pop
les
or
test
lock
jne
or
cld
fdivrs
xlat
cmpsb
mov
add
mov
add
xchg
xchg
popf
xor
nop
mov
lret
add
jl
fwait
or
sub
or
jno
mov
aas
iret
add
mov
stos
push
int3
xchg
decl
nop
jnp
fs
test
or
lahf
mov
add
jle
and
mov
pop
adcb
adc
stc
cmpsl
jo
cmp
cmp
mov
xchg
imul
pop
popa
push
cmp
addb
aas
push
add
rol
test
adc
jns
add
jmp
popf
add
jl
jns
test
push
jno
inc
stos
push
pop
pop
sbb
es
scas
and
push
mov
inc
add
add
sub
mov
mov
fucom
pop
pop
jno
add
pmuludq
test
je
push
cmp
inc
nop
jle
add
fdivs
lahf
add
jbe
push
jne
aas
adc
out
lds
jle
pop
cmp
ficomps
add
mov
inc
and
add
test
fildl
sahf
mov
xchg
jge
in
adc
mov
das
add
mov
jno
in
push
lahf
or
mov
and
shlb
add
stos
les
sbb
adc
rolb
mov
add
cmp
and
je
add
int
call
jne
adc
mov
sbb
lods
jle
test
out
push
adc
mov
rcll
fstpt
add
inc
mov
xchg
dec
fsub
addb
je
push
xchg
add
add
mov
adcl
dec
sarl
mov
sub
sbb
rorl
pop
add
je
pusha
movsb
roll
outsl
mov
add
sbb
lcall
cmpsb
dec
sub
push
loop
nop
aam
loopne
add
ja
add
xchg
insb
loopne
add
mov
xor
xchg
clc
pushf
ljmp
cmp
and
loopne
jl
adc
xlat
sub
test
dec
test
or
dec
add
xor
outsb
add
cli
add
mov
les
orb
xor
or
pop
xor
mov
sbb
jmp
fsubs
pop
sub
pop
outsw
inc
nop
add
popa
and
mov
mov
stos
pop
adc
sbb
inc
or
cmp
dec
out
sub
adc
outsl
pop
dec
fldl
add
cmp
push
jb
icebp
adc
rolb
xor
or
mov
daa
pop
and
insb
sub
and
add
jbe
jb
and
fstl
adc
mov
add
push
sub
scas
push
or
and
inc
add
adc
clc
add
add
and
icebp
mov
nop
adc
mov
test
mov
outsb
adc
pop
jnp
xchg
adc
pop
and
dec
add
out
sbb
jmp
cltd
shlb
or
dec
mull
xor
mov
xlat
add
orb
mov
cmpsl
adcb
mov
nop
and
ss
sbb
jne
jb
sbb
inc
xor
add
decl
add
mov
pop
mov
cmp
jge
and
sub
mov
add
mov
sbb
add
inc
mov
ret
in
es
mov
test
mov
cmpsl
add
mulb
aaa
in
rcpps
cwtl
sbbb
mov
cmpb
or
mov
and
lock
lea
je
and
adc
or
xchg
adc
cwtl
test
pop
push
sub
and
fiadds
in
fsubl
addr16
sub
subl
and
mov
mov
cmp
mov
dec
push
lock
enter
loopne
add
out
mov
mov
pusha
lret
mov
cmc
loope
fstps
cmp
jge
cmpsb
out
jns
mov
xchg
inc
jae
dec
inc
test
mov
out
sub
gs
jl
pop
or
mov
cmp
or
popf
clc
inc
or
cmpb
negb
sbb
dec
out
or
popf
add
push
dec
cmp
mov
sbb
jmp
and
adc
mov
lods
add
sbb
mov
mov
cmc
movsl
popa
hlt
or
sbbb
adc
jecxz
or
cmp
mov
and
rcrl
loop
dec
xor
mov
adc
fcomi
sbb
fs
jns
xor
sbb
jo
jg
jmp
enter
push
adcb
pop
xor
xchg
dec
loopne
add
sub
push
or
cmp
dec
mulb
lock
out
xchg
add
push
xlat
pushf
je
or
dec
lahf
cmp
pop
adc
mulb
dec
aas
mov
outsb
xor
cmpb
jb
outsl
mov
ret
out
stos
int
in
pop
add
cwtl
mov
xor
inc
and
inc
and
aas
imul
cmp
mov
push
add
mov
nop
lock
fld
inc
xchg
mov
pusha
addr16
push
fs
add
xchg
xor
add
enter
sarl
mov
test
dec
pop
cmc
bound
repz
clc
lret
and
jne
push
fisttpll
stc
mov
mov
cmp
loop
and
or
xchg
push
pop
int
clc
add
dec
sub
xor
sub
xchg
push
filds
inc
test
fdivr
add
lds
sarb
xor
push
or
dec
add
jo
or
push
xor
push
loopne
daa
aas
int3
out
mov
jo
and
push
les
ss
mov
mov
pusha
stos
jmp
out
call
sar
push
mov
cmpsl
movsl
cmp
nop
or
aaa
daa
add
cmp
call
pop
test
and
add
int3
mov
mov
daa
xchg
pop
push
inc
jo
addb
push
lods
data16
cmp
mov
sbb
jno
dec
out
add
mov
aas
mov
mov
mov
pushf
cltd
push
popa
cli
scas
dec
imul
in
pop
xchg
dec
jp
out
jne
sbb
xor
dec
arpl
push
sub
cmp
add
out
mov
push
dec
clc
cmp
les
adc
cmpsl
and
push
pop
out
loop
je
adc
sub
ret
mov
clc
lds
add
pop
pop
inc
sbb
mov
aam
mov
rolb
out
cmp
xchg
scas
pop
jl
xchg
enter
mov
arpl
and
push
cmp
add
push
adc
insb
and
push
mov
fmuls
shlb
aas
dec
jb
test
fucomip
int
lahf
and
cltd
dec
or
scas
mov
xchg
mov
add
sbb
hlt
loopne
adc
aad
xchg
fisubrl
push
imul
fldenv
adc
and
ds
add
sub
daa
imul
xchg
repz
fidivl
out
test
mov
xchg
pusha
mov
jb
nop
rcrb
rcrl
cmp
mov
push
rorb
pushf
and
and
lea
not
stc
add
out
and
shll
mov
jg
popf
add
push
dec
bound
cmp
daa
jo
adc
and
sti
or
les
mov
fists
nop
sbb
outsb
and
add
and
or
xor
cmp
or
imul
dec
out
jg
xor
jne
std
xor
pop
lea
mov
sub
push
lock
loope
pushf
ljmp
and
lods
fdivs
pop
xor
je
mov
js
adc
test
scas
shl
mov
ds
and
test
lcall
inc
mov
pop
cmp
dec
stos
add
call
rsm
jge
add
inc
mov
stc
fistpl
gs
add
or
push
aaa
or
leave
jle
add
jle
cltd
and
fsubrs
out
lock
lods
das
jl
dec
lret
scas
cs
jge
add
and
cs
sub
xchg
xorb
jno
inc
test
loopne
call
pop
or
pop
or
mov
adc
jmp
faddl
mov
inc
lods
and
dec
add
jmp
hlt
and
mov
xor
xor
sarl
and
xor
mov
popf
nop
sub
adc
aam
out
jno
and
aas
nop
pushf
lock
pop
xchg
es
rcrb
add
cmp
cmpb
mov
add
fs
jbe
adc
lock
and
push
pop
add
int3
inc
jno
movsb
in
inc
pop
ret
rolb
paddsb
add
and
movsl
xor
insb
or
jbe
js
test
movsl
mov
addb
mov
xchg
push
sahf
push
xchg
add
movsb
cmpsl
or
pusha
and
add
fdivs
mov
repnz
pop
mov
add
push
dec
lock
cs
popa
inc
pop
cs
pop
inc
mov
adc
imul
mov
sub
cmp
cmp
cltd
shl
loopne
inc
cmpsl
in
add
int3
lret
test
faddl
mov
xor
sbb
push
test
cmpsl
into
add
push
pop
mov
sub
leave
fildl
push
push
mov
rol
dec
sbb
in
ret
sahf
addr16
mov
loope
das
add
in
sub
add
cmp
mov
stos
mov
adc
xchg
adc
dec
shrb
push
jae
ret
pop
test
jnp
faddl
mov
pusha
fcomps
add
or
and
cmp
inc
scas
add
add
push
jbe
subb
push
mov
movsb
inc
pop
cmp
fimuls
jge
mov
outsl
sbb
push
dec
xchg
pop
mov
mov
fldenv
ljmp
mov
bound
cmp
mov
xchg
xor
pushf
pop
inc
jge
add
pop
mov
ja
sub
cmp
movb
inc
push
push
jg
dec
pop
xor
das
inc
clc
nop
push
sub
aam
adc
adc
adc
sub
bound
fdecstp
movsb
lock
and
push
jl
inc
pop
mov
sbb
ds
mov
adc
iret
sti
adc
out
test
js
pop
shll
and
or
imul
les
adc
inc
stos
sahf
shrb
inc
mov
push
add
mov
pop
jno
pop
pop
add
dec
jbe
push
int3
ja
adc
push
xchg
push
test
jae
lea
lods
inc
dec
mov
sahf
cmpsb
add
fcomip
fdivrl
inc
or
adc
add
cmp
jo
int3
add
add
add
inc
std
cli
jl
pop
push
in
pop
pusha
adc
movsb
mov
xchg
add
and
lods
inc
fs
addr16
rcrl
mov
scas
push
cmpsb
sbb
mov
inc
inc
cmp
repz
add
lret
xchg
jmp
mov
sub
mov
cs
inc
jne
jp
jns
mov
dec
inc
mov
sahf
rol
push
negl
fadds
jg
pop
sub
sarl
adc
adc
dec
mov
cmp
movsb
iret
rcrb
jne
enter
outsb
mov
imull
movsl
push
dec
add
inc
data16
push
ds
add
aaa
test
push
orb
test
imul
stos
leave
jns
cmp
and
push
sbb
test
add
adc
pop
inc
or
stc
inc
or
scas
add
sub
sub
add
mov
lds
das
add
or
sbb
add
pop
sub
dec
fnstcw
popf
ja
sbb
movsl
movsb
mov
inc
fcomps
and
dec
add
sbb
cs
jl
pop
jecxz
push
jb
mov
add
outsl
packsswb
jge
and
mov
in
or
jl
icebp
xor
push
and
jmp
sti
sbb
inc
mov
and
sti
scas
push
push
xor
jg
inc
pop
jae
lcall
inc
inc
fs
adc
pop
push
pushf
notl
jle
ud0
push
push
and
jl
call
repnz
or
pop
iret
xchg
out
mov
scas
pushf
or
jl
jo
mov
loop
add
dec
je
jecxz
or
dec
cmpsl
dec
xor
add
pop
xor
mov
fdivs
xchg
add
loope
jge
xor
add
rcrb
xor
insb
das
sbb
out
adc
pop
pop
notl
lahf
aad
add
dec
stos
in
sub
and
inc
mov
sbb
lea
dec
ja
inc
fadds
add
adc
inc
lcall
cmp
xchg
lods
inc
fldl
and
and
jae
or
jge
mov
subb
pop
mov
add
xchg
cli
adc
or
mov
mov
mov
add
das
and
jecxz
pop
or
cmp
aam
jp
mov
hlt
mov
fcoml
add
aas
pop
cld
subl
mov
cmpsb
jle
and
push
fdivrp
stc
jb
outsl
jo
pop
jl
inc
daa
cmp
loopne
add
stos
ret
sbb
icebp
lahf
add
ja
xor
mov
inc
cld
pushf
jge
add
adc
mov
fadds
nop
fiadds
jle
ror
inc
int
repnz
cmp
adc
xchg
jbe
push
mov
rclb
mov
sbbb
adc
sub
xchg
loopne
xor
cmpsl
lret
arpl
imul
add
cmc
push
xchg
push
fidivl
lret
lods
adc
xchg
gs
pusha
andb
shl
sbb
outsb
out
imul
or
mov
cmpsb
lret
dec
add
mov
sub
nop
jge
and
push
pop
add
movsb
in
add
jo
andb
pop
push
mov
cwtl
xchg
in
push
pop
mov
pusha
pop
ljmp
mov
loope
jp
add
sub
cmpsb
out
les
insb
in
xchg
xchg
movsb
sbb
xchg
pusha
enter
mov
jecxz
add
mov
bound
fsubrp
add
insb
das
jno
subl
inc
cmpsl
dec
push
inc
adc
pop
je
dec
enter
xchg
cwtl
rcll
and
pop
cmpsl
push
dec
addr16
mov
ljmp
cmpsb
adc
xchg
insl
push
in
sbb
pop
scas
add
mov
in
pusha
push
or
cmpl
and
mov
call
push
call
test
je
pusha
mov
mov
sahf
mov
add
or
add
jl
push
xbegin
fcompl
cmp
xchg
pop
fnstcw
jle
out
and
add
cmpsb
pop
or
mov
mov
sahf
pop
jns
push
setbe
lea
jmp
es
mov
inc
loopne
psrlw
les
lock
jno
cmp
add
adc
mov
add
pop
daa
scas
add
and
sbb
jae
sarl
push
icebp
dec
aaa
subb
jg
loope
xchg
sbb
dec
xor
pusha
adc
and
out
mov
test
subb
mov
add
dec
xchg
fmull
add
fsubr
popa
pusha
xor
jg
es
mov
add
xor
in
add
mov
add
pop
push
add
lods
and
dec
jno
push
add
fwait
sbb
push
adc
aad
lds
adc
add
dec
stc
jnp
mov
or
cli
stos
adcl
pop
fldl
inc
and
inc
mov
call
sbb
js
xchg
push
cltd
ds
test
sti
push
ror
inc
scas
sbb
imul
mov
outsb
dec
inc
fs
int3
jmp
xchg
xchg
sbb
idivb
push
inc
fwait
inc
pop
adc
sub
and
add
int
imul
or
xchg
hlt
inc
stos
or
cmc
into
ja
add
mov
in
rorb
cmp
loopne
sahf
or
push
mov
sbb
std
hlt
push
leave
repz
xchg
lock
cmp
pop
repnz
mov
addl
mov
push
repz
or
pushf
adc
test
mov
jge
xchg
nop
fimull
adc
push
add
dec
dec
call
mov
outsb
aam
or
jno
loop
sbb
dec
push
testl
cmpsb
lock
hlt
insl
sub
jbe
inc
inc
clc
movsl
imul
adc
sbbb
mov
xchg
lea
jnp
imul
jb
inc
fs
imull
outsb
add
lods
and
sbb
push
adcb
insb
out
cld
add
mov
in
inc
pop
pop
add
int
test
add
jmp
in
pop
pop
inc
or
test
lret
repz
add
jns
clc
rolb
push
ret
mov
in
mov
pusha
sti
stos
add
fwait
mov
jge
xor
jb
jb
add
push
mov
into
mov
loop
pop
add
jno
test
mov
pop
jp
pop
add
sbb
dec
inc
adc
cmp
lods
jae
sti
mov
clc
push
imul
sbb
add
sbb
cmp
dec
xor
popa
mov
dec
jo
xchg
ftst
or
xchg
xor
je
jo
adc
in
lock
adc
xor
sbb
adcb
out
dec
inc
push
inc
sub
rcll
ja
lock
xchg
jnp
sub
inc
outsb
adc
add
sub
cld
xchg
cltd
inc
int
push
xchg
push
aas
adc
das
repnz
shlb
in
mov
out
lock
or
aam
add
sti
stos
out
and
das
inc
cltd
mov
add
xchg
mov
sbb
mov
leave
sahf
popf
mov
in
xchg
add
push
call
std
sbb
lret
push
or
or
jp
nop
sbb
jo
stos
enter
mov
aad
cmpsb
cwtl
sbb
push
enter
adc
lds
mov
dec
nop
imul
lret
add
cmpsb
cmp
add
stos
and
or
fisttpll
adc
mov
out
es
jge
aad
into
xchg
push
jnp
lcall
pop
cmpsb
inc
dec
add
stos
jmp
sbbl
fistps
inc
popf
pop
mov
imul
aam
adc
data16
ss
sub
je
dec
mov
outsb
mov
add
aam
and
jno
repnz
fmull
and
sti
cltd
out
cmp
cmpsb
ret
add
in
push
pop
inc
sub
fimuls
dec
cltd
les
pusha
and
cmp
lret
jmp
out
mov
lds
in
fisttpll
and
loopne
clc
cmp
hlt
dec
adc
jnp
xchg
pop
arpl
inc
repz
mov
jns
cwtl
sub
xor
mov
cs
in
testb
stos
add
mov
add
add
dec
fldcw
fiadds
jo
or
xchg
jns
mov
clc
xchg
or
pop
test
popf
push
xchg
sbb
cmp
xchg
jno
xor
addb
bound
sbb
xchg
cli
not
jp
cmpsl
int
incb
je
xor
adc
xor
mov
lsl
xor
inc
dec
int
fs
adc
mov
inc
pshufw
push
cltd
add
in
cmp
inc
insb
outsb
push
sbb
xchg
mov
mov
sbb
add
xchg
cmp
dec
push
adc
lret
push
dec
stos
sbb
adc
dec
andb
cmpsb
or
and
inc
lock
push
std
int3
adc
les
add
fcoml
outsl
xor
sbbb
dec
add
push
xchg
lea
push
add
lods
mov
imul
adc
sbb
test
xchg
push
pop
add
xchg
mov
or
sbb
push
test
inc
adc
imul
adc
jbe
inc
popf
dec
mov
lret
cmp
lock
push
fwait
aaa
sub
outsb
xchg
scas
and
dec
inc
dec
int3
inc
movsb
add
and
xchg
nop
push
inc
pop
imulb
mov
sbb
call
leave
mov
jbe
add
jnp
add
xchg
and
cli
and
sbb
pop
mov
shlb
mov
fwait
leave
loopne
movsb
xchg
jo
jmp
and
add
rcrb
jne
inc
mov
pusha
add
adc
inc
sbb
push
pop
push
xchg
push
and
les
mov
clc
mov
xchg
sbb
jno
push
movsb
lret
add
int
stos
pop
push
add
jg
repz
repnz
mov
lock
leave
push
mov
add
dec
pop
dec
inc
inc
push
call
jmp
mov
inc
add
xchg
push
subl
mov
sub
sbb
inc
xchg
cltd
jno
sub
adc
nop
jmp
mov
daa
pop
add
jns
dec
lret
sbb
fcompl
pusha
xchg
js
and
cmp
push
mov
int3
inc
loopne
jo
cli
push
test
xor
add
jg
sbb
mov
sub
add
sbb
sbb
jo
dec
add
cmp
xchg
loop
int3
out
sub
cld
or
adc
andb
icebp
syscall
in
repz
xchg
movl
add
dec
enter
push
cmp
out
mov
adc
sbb
cmp
sahf
cmp
add
dec
popf
xchg
mov
jp
xchg
xor
push
in
cmp
fsubl
testb
adc
std
notl
fbstp
int3
xor
mov
or
js
jb
fadds
outsl
xchg
les
enter
pop
inc
adc
popa
push
das
fistpl
xor
outsl
test
ss
fsubl
enter
sub
push
push
movsb
dec
ds
cltd
and
lret
notl
sbb
pusha
sub
bound
cld
dec
adc
nop
cmpsl
inc
add
sub
or
dec
test
cmp
xor
or
adc
pop
jb
cmpsl
push
inc
out
push
test
and
xor
andl
add
mov
arpl
scas
aam
xchg
addr16
fwait
xchg
push
add
xchg
xchg
stos
adc
cld
add
je
xor
mov
jno
pop
xchg
and
leave
jb
push
repz
add
add
addr16
pop
into
lahf
dec
dec
cmp
xor
fwait
mov
or
jns
jae
js
xorb
sub
in
out
push
movsb
fmull
sbb
cmp
orl
enter
icebp
dec
in
and
add
inc
adc
imull
jnp
dec
inc
sbb
push
or
add
out
cmc
dec
inc
adc
xor
lret
mov
ret
add
or
rcll
lcall
and
sub
mov
inc
xchg
dec
dec
add
cmp
inc
push
inc
ret
adc
xchg
and
add
jle
lods
push
mov
fsubp
jl
addb
es
sbb
std
lret
mov
mov
adc
xor
rorl
mov
adcb
cmp
add
xchg
je
sbb
jbe
jno
test
pop
jae
int3
sbb
add
xchg
roll
lret
aam
add
out
lock
push
arpl
adc
imul
sub
or
cmp
pushf
push
xor
xor
mov
rclb
push
and
ja
mov
mov
adc
jb
xor
push
aas
mov
inc
add
jnp
je
xor
adc
add
xchg
lahf
ret
mov
lcall
dec
add
fwait
xchg
add
pushf
add
lcall
cmp
mov
fsubrl
add
sbbb
xor
lods
mov
testl
adc
in
sub
pop
add
pop
stos
jno
cmp
and
add
fptan
or
adc
int3
bound
xor
fwait
push
test
and
jl
sbb
shr
pop
mov
pusha
pop
test
orb
shr
lahf
mov
cmp
in
addl
mov
xchg
out
pop
arpl
mov
pusha
mov
inc
gs
fwait
mov
xchg
repz
mov
adc
jnp
push
sbb
sbb
or
nop
mov
add
dec
inc
sbb
insl
popf
inc
lcall
inc
jno
add
push
fmull
call
inc
dec
dec
mov
adc
inc
rorl
add
jne
xor
pushf
cld
pop
push
test
push
push
test
jg
cmp
xchg
or
xor
adcl
iret
sbb
loopne
adc
or
inc
cmp
push
inc
js
and
or
imull
addl
pop
mov
aaa
sbb
mov
cwtl
cwtl
or
dec
rclb
push
out
test
add
xchg
mov
inc
lret
dec
jae
adc
lods
enter
push
jge
pcmpeqb
mov
and
adc
mov
jmp
ds
or
cmp
adc
cs
mov
add
push
jg
add
mov
aas
imul
pop
add
mov
fsubl
sub
xor
push
sbb
pop
sbb
shll
lds
lock
sbb
cmp
lods
push
gs
ficompl
sbb
negl
ss
js
push
pop
scas
push
push
ja
addr16
fxch
ret
inc
or
orb
cld
pusha
sub
adc
or
add
lcall
and
push
and
and
imul
mov
dec
lcall
and
inc
popf
gs
xchg
or
lret
scas
pop
or
push
mov
sub
fsubl
push
arpl
movsb
add
mov
pop
add
xchg
jmp
in
mov
and
pop
mov
xor
pop
add
mov
sbb
sarb
xor
imull
inc
pop
lcall
add
fwait
jno
pop
dec
mov
jbe
add
movhps
adc
cmp
dec
or
xchg
add
es
insl
nop
incb
lret
fldcw
add
mov
scas
outsb
add
lods
xchg
jecxz
popf
or
mov
into
pop
cmp
inc
xor
mov
test
scas
add
mov
add
test
mov
add
or
sub
popa
arpl
adc
popl
xor
add
push
andb
mov
pop
lahf
out
push
and
pop
gs
mov
pop
aas
andl
push
xlat
clc
xchg
loopne
jbe
mov
iret
xchg
adc
loopne
mov
popa
cwtl
pop
pusha
pop
mov
adc
scas
jne
ss
or
push
pop
or
inc
jmp
push
js
pop
test
scas
inc
call
movsl
pop
jb
inc
jmp
inc
mov
jne
sub
pop
lea
xchg
fistps
cmpb
add
call
cmpsl
mov
dec
adc
lret
sbb
add
xor
testl
inc
icebp
fs
mov
idivl
and
inc
jg
push
push
mov
jge
mov
sahf
adc
fsub
scas
cwtl
cmp
xor
imul
das
jle
add
push
xchg
aam
pusha
iret
push
pop
or
jbe
xor
mov
pop
jge
adc
xchg
add
jne
or
sbb
jnp
cmp
js
movsl
mov
leave
push
enter
push
sbb
pop
popa
cmp
push
mov
pop
xor
ja
push
subl
scas
jp
rcrl
jl
clc
pusha
add
call
mov
jae
sbb
pop
imul
and
pusha
sti
mov
mov
dec
jb
and
outsb
in
push
and
push
lds
xchg
out
cltd
xchg
enter
repz
and
jb
xchg
pop
aad
xor
sub
push
movsb
inc
imull
lcall
jb
js
pop
rolb
dec
test
add
mov
lods
push
fdivs
mov
mov
jmp
sbbl
dec
sub
popa
mov
mov
in
popf
or
outsl
add
add
jg
nop
lret
inc
shlb
insl
add
inc
test
cli
stc
out
pusha
add
iret
gs
add
nop
lock
lahf
lods
leave
sbb
push
xchg
gs
ret
scas
xor
or
les
mov
add
loopne
ja
int
add
mov
add
das
negb
test
std
sarb
mov
lahf
test
adc
push
lss
pop
mov
sbb
mov
mov
pusha
xchg
sub
mov
ret
rcrl
test
clc
loope
data16
sub
les
cmc
push
pop
and
sbb
sbb
bound
push
stos
les
mov
cmpb
mov
mov
add
push
ljmp
scas
mov
pop
icebp
insl
xor
add
mov
xor
jae
sbb
scas
test
and
jp
add
orl
or
xor
cmp
ljmp
int3
in
not
and
adc
add
push
push
mov
sbb
xchg
add
cmp
xor
movsl
adc
gs
shrb
xabort
les
cwtl
call
shlb
scas
xchg
hlt
ret
and
add
pop
jae
mov
cli
cwtl
ljmp
adc
repz
ds
jno
mov
lcall
push
outsb
add
rcl
sub
mov
std
jo
jmp
push
cmp
pushf
pop
scas
lea
or
dec
test
mov
cmp
ret
or
bound
shlb
sbb
repnz
or
or
inc
loope
and
rcrb
add
dec
dec
add
inc
and
cwtl
mov
dec
dec
inc
sti
mov
xor
inc
clc
add
or
cmp
test
iret
push
outsb
mov
or
sbbb
test
pop
roll
clc
test
repz
mov
sbb
icebp
or
addl
daa
jno
add
mull
and
mov
addr16
push
mov
mov
pop
push
xor
mov
push
les
xor
sbb
add
xchg
daa
nop
jno
loopne
adc
adc
popf
ltr
mov
sbb
mov
std
xor
dec
lods
xchg
add
testl
jmp
lahf
movsb
test
adc
xchg
pop
dec
jp
jecxz
sbbb
jnp
add
rcll
sarb
add
scas
mov
int3
mov
movl
and
mov
scas
loopne
test
adc
lock
add
inc
enter
xor
or
loop
mov
nop
xor
rcrl
add
daa
xor
push
shrb
add
idivl
roll
xchg
xor
jne
adc
sub
ljmp
aas
or
sub
rcrl
push
mov
lret
and
inc
add
xchg
out
lret
call
lahf
scas
sub
mov
fdivs
fs
cmp
add
stos
mov
push
mov
push
leave
test
push
nop
les
adc
adc
decl
ret
jle
add
dec
sbb
fnstcw
clc
push
add
dec
into
jl
add
ret
repnz
movsl
dec
js
pop
xor
mov
add
sbb
loop
fdecstp
cmp
mov
xlat
inc
xchg
loopne
dec
jo
or
xchg
sahf
push
cmp
sbb
add
in
ljmp
nop
adc
cmp
jmp
cli
add
in
mull
int
xor
fcomps
stos
mov
outsb
and
arpl
and
push
int
sub
push
addr16
sub
scas
ljmp
or
ret
add
inc
sarl
or
inc
cs
pop
or
xor
dec
mov
inc
int3
and
dec
bound
add
in
add
jl
cmpsb
pusha
dec
fadds
add
jle
insb
xchg
pop
sbb
push
stc
and
scas
mov
call
insb
pop
jl
sbb
jb
ja
bound
dec
test
stos
mov
mov
mov
push
les
push
imul
fs
or
std
xor
mov
aaa
add
mov
shlb
add
push
mov
pop
pop
inc
rcrb
nop
shlb
aam
aas
movsl
popf
jle
test
pop
pop
jecxz
int
incl
add
dec
movups
incl
dec
movsb
mov
adc
or
adc
test
lock
mov
pop
pop
add
pop
fmul
or
sbb
sub
adc
movsb
mov
popf
scas
enter
pop
xchg
xchg
out
rcrl
mov
lret
cld
dec
pop
and
push
lahf
sub
mov
or
push
add
frstor
add
adc
push
movsl
pusha
shll
out
xor
xor
add
sbb
jecxz
aaa
lods
das
cmp
frstor
fadds
ds
mov
or
int
repz
ret
jl
and
adcb
scas
sub
mov
shlb
and
dec
frstor
roll
pop
cmp
icebp
jle
pop
mov
hlt
or
or
sbb
and
add
shll
inc
int3
and
push
out
call
jo
inc
ds
pop
inc
push
add
push
ret
xor
mov
popa
cmp
xor
ja
mov
daa
sub
fimull
mov
and
and
mov
inc
push
jmp
add
scas
push
pop
mov
int3
mov
mov
mull
dec
xchg
inc
cmp
enter
pop
outsb
add
nop
mov
cmpsl
push
sub
scas
push
sbb
repz
mov
xor
outsl
xchg
popa
sahf
rcl
clc
sarl
mov
mov
cmp
popl
jge
lods
sub
pop
add
jmp
repz
xor
add
mov
ret
mov
fs
cmpb
shlb
sbb
stos
add
mov
ds
or
test
xchg
pop
shlb
fisubrl
in
and
pop
add
mov
clc
add
mov
ret
ja
loope
inc
or
repz
sbb
jge
lods
or
hlt
add
ja
test
jb
mov
outsb
stc
shlb
jmp
add
push
pmaxub
mov
push
push
cmp
mov
inc
pop
mov
dec
rol
popa
iret
push
jae
ljmp
jno
jo
add
lahf
and
mov
gs
stc
lret
sbb
sub
in
adc
cmp
fdivs
rolb
lahf
adc
cld
sarl
xchg
pop
gs
fsubp
js
mov
es
push
xor
pop
add
push
sub
in
divl
add
pop
lcall
pop
or
pusha
lods
je
inc
pop
push
add
enter
xchg
lods
outsb
popa
or
inc
lods
lcall
mov
cwtl
jb
pop
pop
ficoms
push
mov
shlb
xor
sbb
in
and
or
fs
fwait
xor
outsb
lret
push
cld
push
cmp
dec
dec
adc
add
out
cmp
sub
orb
mov
popf
xchg
inc
add
sub
scas
and
mov
fs
xor
jb
loopne
out
mov
fadds
xor
xor
or
jmp
decl
inc
xchg
popa
push
mov
add
divb
test
push
pop
pop
je
and
mov
adc
into
pop
add
jmp
inc
dec
dec
insb
repnz
ret
or
cld
add
mov
xchg
rorb
int3
pop
mov
push
mov
rcrl
aam
add
or
push
and
sub
lock
or
or
inc
and
mov
add
cmp
mov
loopne
or
mov
xor
sti
xchg
sub
mov
sahf
fs
or
dec
and
and
mov
adcl
jmp
lods
inc
fildll
adc
add
loope
jmp
add
mov
xor
dec
ds
mov
insb
xor
roll
test
fbstp
push
mov
mov
cmpsl
hlt
adc
sub
mov
mov
rclb
ja
test
push
repnz
sbb
cli
add
rcll
mov
add
mov
cs
add
testl
push
stc
bound
jae
xchg
loopne
xlat
jge
insl
fadds
cmp
sub
iret
fstl
or
add
push
notl
sbb
and
cld
icebp
popf
leave
clc
and
inc
pusha
add
mov
add
repnz
and
data16
shlb
lds
xchg
divb
pop
hlt
inc
mov
push
pop
jp
xchg
pop
pop
je
add
inc
dec
dec
and
daa
mov
pushl
and
and
push
gs
scas
mov
xchg
imul
or
imull
push
jp
mov
inc
xor
mov
jb
pop
mov
push
jge
cmpsl
mov
jo
mov
xorl
in
stc
and
and
cld
add
add
inc
in
jecxz
pop
pusha
orb
shll
outsb
xchg
sub
xor
jne
ret
std
pop
push
add
imul
add
push
scas
mov
lods
mov
pushf
mov
mov
push
adc
je
mov
adc
or
fs
pop
js
sub
lahf
ret
movsb
add
cmp
pop
cmpb
in
rclb
jp
inc
push
mulb
jge
sbb
mov
pusha
or
sub
mov
adc
jo
orb
rcll
cmp
rclb
cmp
adc
push
mov
hlt
test
dec
inc
push
mov
iret
lahf
add
fistpl
add
add
cmp
or
popf
aam
data16
mov
mov
or
adc
leave
std
mov
clc
and
adc
rolb
adc
mov
push
rorl
pushf
jp
pusha
das
adc
push
jge
sub
mov
mov
jl
mov
inc
inc
mov
add
dec
mov
testb
rolb
ret
push
in
les
sbb
addb
imul
insb
push
push
pop
cmpsb
mov
sti
shlb
enter
je
cli
xchg
repz
divl
rorl
adc
jmp
mov
mov
shrb
jge
lret
cwtl
pop
dec
mov
sbbb
sub
adc
cmp
cmp
les
pop
mov
lahf
pop
enter
jno
test
add
cmp
jecxz
jne
jae
icebp
mov
pop
fsubs
adc
in
movsb
mov
add
test
insl
pop
int3
cmpsb
jbe
add
arpl
addr16
sub
mov
dec
icebp
inc
pop
jl
inc
mov
pop
rolb
cmp
adc
loopne
add
out
fmul
jg
add
mov
lds
sar
mov
xor
sti
inc
aas
sbb
testl
mov
inc
daa
add
lock
dec
test
call
or
mov
add
mov
pusha
rcrl
add
mov
stos
xchg
mov
mov
call
mov
cltd
push
shlb
sarb
add
inc
mov
push
pop
mov
jl
fidivs
pop
xlat
mov
push
sti
push
sbb
inc
jns
inc
sub
push
lock
insl
mov
fimuls
add
inc
rcrb
or
xor
push
lock
popf
inc
cli
pushf
fcoml
push
jp
dec
or
nopl
iret
push
movsl
arpl
inc
or
cli
mov
les
adc
push
xchg
cmpb
or
or
lahf
adc
scas
mov
out
mov
add
sbb
repnz
rcrl
out
or
cwtl
out
adc
data16
mov
js
call
das
push
adc
mov
sub
je
dec
xor
les
fcompl
add
push
add
sub
xchg
mov
dec
mov
pop
hlt
std
dec
pop
add
xchg
repnz
nop
xor
sbb
sarl
lahf
sub
inc
or
mov
cli
xchg
call
sub
mov
dec
dec
and
xchg
adc
les
dec
or
fdivl
inc
and
nop
repz
fdivrs
lret
sub
popa
cmpsb
mov
arpl
jle
mov
mov
in
std
pop
add
and
test
add
cmp
dec
push
pop
aad
push
enter
mov
xlat
daa
hlt
mov
test
mov
and
and
nop
in
cmp
cli
cmp
dec
mov
push
pop
pop
xor
dec
jbe
add
dec
pop
add
popa
hlt
mov
adc
int3
fcoml
nop
clc
mov
push
scas
sub
mov
sbb
add
mov
jno
mov
push
inc
js
ret
mov
pop
or
adc
adc
les
mov
aas
insb
cld
and
ss
inc
popl
daa
pop
sbb
inc
mov
nop
xchg
or
fmul
pop
xchg
sub
in
pop
jns
mov
inc
fisubl
repz
mov
and
pop
and
xor
or
mov
das
fs
test
ret
outsb
inc
adc
incb
sti
movsb
clc
aaa
dec
scas
inc
movsl
xor
inc
test
adc
cmp
aaa
cwtl
mov
addr16
and
jg
adc
inc
loopne
repnz
ficoms
shll
push
mov
enter
pop
mov
jo
dec
bound
xor
xchg
outsb
enter
outsl
xor
xor
push
rolb
nop
dec
and
adc
mov
add
in
ja
jb
pushf
jmp
sub
inc
movl
mov
mov
ret
ss
icebp
cltd
js
lods
adc
shlb
clc
pop
aas
sbb
movsl
bound
es
pop
out
add
xchg
rorb
adc
rclb
mov
dec
sub
inc
xor
push
fwait
cmp
jne
mov
stos
pop
mov
jae
xor
sub
xor
mov
mov
clc
iret
add
mov
mov
imul
adc
fildl
jnp
and
xchg
add
dec
sbb
jo
ret
arpl
sarl
stc
pop
dec
daa
stos
xorb
popa
fisttpl
or
in
bound
jle
add
sub
adc
mov
and
inc
in
sahf
mov
cmp
bound
in
add
lock
or
outsb
mov
movsb
mov
daa
push
in
add
aad
shll
push
stc
cmp
aaa
imul
fldl
push
lea
xlat
js
jns
push
push
fs
jle,pt
ret
iret
flds
push
push
lahf
movb
mov
pop
insb
and
cld
inc
and
pop
add
loop
lods
insb
add
int3
loopne
add
dec
push
lods
in
cmpsb
loopne
lcall
adc
mov
pop
fadds
jp
bound
insl
xor
mov
mov
inc
sahf
in
inc
gs
and
lret
mov
add
pop
add
mov
es
js
mov
xchg
pop
cld
int
lds
shl
enter
push
push
popa
out
add
push
outsl
sbb
xchg
push
hlt
rcrb
nop
mov
add
cmp
or
mov
aas
add
sub
jns
movsb
loopne
add
xor
pop
push
insb
and
mov
add
dec
mov
repz
lret
pop
call
sub
nop
call
mov
ret
enter
mov
lret
outsl
push
sub
push
push
push
xlat
dec
mov
add
or
jmp
jbe
pusha
mov
mov
lods
adc
add
mov
adc
dec
mov
bound
cmpsb
pusha
sbb
add
cmpsl
xchg
fists
adc
xchg
sbb
xor
and
mov
add
pusha
lock
mov
shl
push
xchg
mov
cmc
daa
ja
mov
and
cmp
adc
cmovg
pop
inc
pop
xchg
ret
inc
pop
jae
or
sub
mov
orb
add
rclb
bound
sbb
mov
add
test
add
clc
hlt
repnz
fdivr
data16
add
and
imul
les
stos
xchg
inc
cmpsl
sbb
sbb
arpl
adc
std
stos
mov
sahf
fs
xor
push
pop
add
icebp
adc
xor
jne
add
jo
test
fisubrl
sarb
pusha
inc
mov
dec
insb
aas
psubusb
subb
fcoml
and
ljmp
or
movsl
in
jl
pop
arpl
add
mov
lahf
nop
pushf
cli
add
xor
sbb
sti
in
add
lock
cwtl
scas
add
je
pushf
pushf
or
or
clc
and
adc
mov
aaa
clc
in
add
mov
dec
shrb
sbb
add
cmp
sbb
fs
xor
and
mov
rclb
in
dec
pop
push
add
test
push
scas
mov
dec
imul
mov
adcl
xor
subb
stos
adc
fcmovne
sbb
hlt
cmpb
test
sub
mov
shlb
and
pop
sbb
adc
fxch
mov
int
inc
sub
jne
popa
add
adc
mov
xchg
pop
lret
sbb
outsb
incl
hlt
popa
loope
add
cli
sub
sbb
inc
add
sbb
incl
mov
cmp
sub
test
rclb
and
sub
push
es
mov
and
push
push
xchg
sub
add
xchg
fs
into
xor
cmp
and
ljmp
or
lock
in
rorl
clc
pop
jmp
jns
or
mov
add
sbb
pusha
mov
xlat
fs
xchg
mov
and
add
or
mov
inc
push
jmp
cwtl
test
jno
sbb
test
imull
inc
pop
pop
call
cmp
add
sbb
js
xor
icebp
dec
add
inc
jmp
rorb
pop
nop
add
xchg
daa
sarb
mov
add
es
daa
inc
adc
roll
enter
add
mov
cltd
sbb
push
pop
dec
aas
int3
or
into
sbb
and
loopne
add
les
data16
scas
pop
daa
push
clc
in
add
pop
add
pop
out
es
pusha
jnp
push
roll
cmpsb
cmp
mov
inc
lret
mov
dec
aas
mov
adc
push
sbb
repz
cmp
mov
nop
push
scas
adc
cmp
ja
mov
out
add
fldenv
dec
dec
jno
add
jb
add
inc
and
fistpl
mov
mov
xchg
repnz
test
push
mov
add
mov
orb
lahf
mov
jmp
movsl
add
mov
clc
sbb
push
addb
jg
pusha
sbb
pop
out
rclb
xor
mov
xchg
add
iret
push
add
jg
ja
jns
pop
sub
bound
pushf
mov
or
pusha
mov
popf
cmp
dec
adc
jg
sbb
jns
pop
sbb
dec
xor
or
loop
add
in
dec
cmp
and
cmpsb
int3
push
loop
notl
xlat
scas
lock
add
ficomps
mov
and
lods
lock
mov
push
sbb
inc
xchg
sbb
jl
ljmp
mov
sub
ds
dec
cmpsb
push
jge
dec
out
enter
mov
cli
mov
repz
sbb
adc
pop
dec
shr
fisubrl
sarb
add
or
xor
add
lds
push
popf
push
mov
pusha
sub
mov
and
add
sbb
stos
fs
push
in
je
and
pusha
insb
inc
cltd
add
xchg
test
xor
cmp
push
inc
add
xchg
dec
xchg
subb
mov
jae
test
je
sar
adc
or
scas
and
jbe
loopne
add
sub
inc
xor
test
add
rcl
repnz
sbb
pop
adc
cmp
pop
andb
popl
push
dec
add
test
je
cmpsb
faddl
xchg
jo
or
pop
leave
cmp
push
xor
jp
sub
mov
or
mov
pop
fwait
ret
sarb
sub
sbb
andl
iret
or
jl
and
lock
mov
call
test
jb
cld
cmp
mov
sub
test
rclb
xchg
fmull
mov
cwtl
sub
nop/reserved
cmp
imul
push
les
pop
and
sub
pop
and
aaa
inc
in
into
dec
push
nop
mov
and
mov
and
iret
sarb
repz
loope
shrl
jno
lods
and
mov
fsts
pop
shlb
cmp
xchg
lds
lods
sub
ljmp
xchg
xchg
movsl
subb
orb
add
pushf
rcrb
mov
push
mov
sbb
or
push
add
or
mov
ret
pop
add
addl
jl
data16
mov
sbb
fs
or
xchg
pushf
xor
addl
in
mov
cmc
daa
sbb
loop
push
adc
add
mov
xchg
aam
test
push
ret
pop
dec
ds
jno
mov
clc
sbb
mov
sti
sbb
push
push
cmpsb
clc
xor
ja
add
sbb
mov
cmovp
imul
add
jg
loope
dec
sbbl
inc
cmc
dec
stc
js
test
sti
add
push
aam
xor
shl
or
or
clc
inc
fs
push
js
inc
push
sub
sub
sahf
inc
clc
push
sbb
orl
lds
adc
xor
mov
rorl
and
out
es
jl
dec
enter
rcrl
and
movsl
add
gs
cli
test
jle
ss
lods
and
jbe
aam
mov
pop
adcb
out
subb
divb
add
xchg
jno
call
xor
and
fsubs
loop
or
rol
ljmp
call
dec
dec
addb
xchg
add
loopne,pt
mov
xchg
iret
out
and
jg
loop
add
mov
xor
push
je
in
sub
mov
orb
movsb
loopne
inc
scas
pusha
push
mov
push
xor
pusha
nop
jp
add
dec
stc
lock
mov
and
inc
adc
ds
das
jle
add
xor
mov
js
sbb
sub
mov
add
cwtl
and
xchg
negl
sub
and
push
lret
loopne
sbb
mov
lods
insl
xor
pusha
xor
ret
add
lahf
xor
sub
jo
es
dec
adc
jo
xchg
nop
push
clc
inc
pop
push
xchg
jo
xchg
or
push
fisttpl
orl
push
adc
cs
fidivs
sbb
movsb
adcb
xor
mov
repz
idivl
jb
subb
int
dec
sub
sti
pushf
loopne
hlt
stos
add
add
ljmp
clc
xor
ret
sbb
and
sbb
add
stc
imul
mov
xchg
add
out
and
cmpsl
addb
arpl
mov
cmp
mov
sub
mov
rolb
test
scas
iret
push
add
jne
lods
adc
mov
adc
je
mov
add
fmuls
adc
mov
or
test
cwtl
mov
xor
leave
push
pop
test
add
inc
push
roll
sub
enter
mov
dec
stc
pop
sub
push
mov
jge
cmp
mov
dec
xchg
add
cli
pop
xor
xchg
sbb
mov
mov
add
jb
mov
ja
repz
fcmovne
add
outsl
testl
mov
pushf
mov
pop
add
movsb
mov
xor
aaa
and
sub
mov
cli
cmp
lcall
push
push
mov
fisttpll
into
pop
in
pop
xchg
loop
je
mov
add
inc
and
add
pop
shlb
mov
mov
add
insb
mov
lret
sbb
cmp
loopne
push
dec
rorl
das
enter
and
imul
jns
sbb
into
aas
pop
mov
adc
xchg
les
mov
xor
xchg
notl
push
sub
aaa
add
mov
add
loop
jae
add
fabs
stc
cwtl
push
mov
add
gs
lcall
stos
xlat
cltd
jno
add
mov
dec
add
js
gs
out
sub
mov
test
jno
clc
loop
add
cmc
imul
shlb
in
movsl
mov
enter
jl
mov
add
hlt
sub
pop
flds
add
jge
lea
outsb
test
pop
add
cli
add
pop
cmpb
sbbl
jbe
leave
stos
fwait
jl
mov
xchg
jno
mov
cmp
int3
pop
pop
push
xchg
push
ss
fs
imul
adc
xchg
sahf
fldl
mov
jo
dec
mov
push
es
mov
cmc
out
add
repnz
add
in
dec
xor
inc
mov
iret
rolb
inc
dec
adc
push
les
add
test
pop
push
inc
mov
test
add
sbbb
push
decb
or
mov
testb
add
jl
or
push
or
ds
add
pop
orb
je
mov
cmp
nop
movsb
jb
and
lock
xor
rcr
lods
add
jg
dec
mov
mov
gs
add
ljmp
lods
push
add
ret
cwtl
data16
icebp
inc
rorb
ss
cld
and
sub
pop
sbb
xorl
adc
adc
push
pop
std
pop
add
mov
fdivrp
push
ds
dec
cwtl
cmpsb
or
rcll
xor
into
add
and
add
sbb
mov
lret
test
jo
mov
nop
sbb
push
addl
or
jge
adc
add
jne
lods
sbb
and
das
hlt
inc
mulps
push
aad
xlat
or
out
stc
push
test
repz
ds
outsl
repnz
mov
dec
mov
mov
fdivl
out
pusha
ljmp
inc
add
mov
mov
movsb
pop
ss
ds
pop
lods
cld
add
lret
mov
mov
add
or
jno
cmpb
cmp
sbb
cmp
add
pushf
es
inc
cmpsl
icebp
add
sub
pop
mov
sub
cmp
mov
pop
dec
loopne
push
repnz
andb
aas
mov
add
mov
lidtl
loope
shll
sbb
jns
rep
xor
scas
xchg
mov
fscale
xchg
loope
jne
pop
mov
sbb
test
or
insb
scas
lds
add
ljmp
dec
mov
add
sub
mov
ret
xor
enter
pop
fwait
mov
lds
pop
cmp
pop
imul
add
sarb
xor
out
dec
in
mov
orb
test
fs
sub
inc
cld
add
xchg
fwait
jae
addb
mov
mov
ror
or
add
sar
push
push
movsb
add
cmp
stos
jo
mov
push
in
imul
cmpsb
andl
rcl
cmc
cmp
shlb
pop
jmp
add
mov
adc
mov
mov
test
sbb
jle
inc
jb
add
in
rolb
mov
adc
daa
ret
cmp
or
cmp
mov
jge
push
shlb
pop
inc
add
adc
mov
lea
in
in
push
add
jg
in
stos
mov
je
mov
adc
push
add
out
add
pop
sbb
ljmp
aas
mov
dec
and
xor
call
add
popa
pop
aad
hlt
dec
xor
out
inc
mov
into
add
jbe
cltd
add
sbb
jo
dec
jb
sub
push
add
push
and
pop
les
push
add
sub
into
add
or
or
jae
mov
add
insb
adc
inc
sbb
cli
adc
cmp
scas
ds
loopne
cld
lret
addr16
and
lock
sbbb
adc
adcb
les
js
push
pop
das
dec
clc
jae
and
rcrb
daa
jnp
and
mov
popa
xchg
andl
mov
pop
jne
push
adc
loopne
leave
repnz
xchg
add
pop
data16
mov
push
das
imul
jg
add
fistps
jecxz
push
incl
or
stos
cmp
dec
aad
add
push
add
xchg
xor
add
jmp
js
and
add
xor
add
loop
cmp
xor
int3
mov
lock
xor
inc
add
lods
cmp
repnz
loopne
jnp
push
mov
add
sahf
cld
xchg
and
xor
and
shll
sub
jmp
add
cwtl
dec
lret
test
jp
add
scas
or
jae
xor
add
cs
ret
mov
inc
sbb
insb
pop
testl
popf
into
push
std
mov
dec
add
fwait
jmp
add
mov
ret
insl
cmp
add
daa
or
aad
fwait
repnz
dec
xor
clc
stos
add
sbb
je
js
sub
fistps
push
lret
shll
stos
in
xchg
fwait
xchg
push
sahf
mov
ret
stc
aad
fisttps
or
loopne
in
jge
dec
pop
lcall
fnstsw
inc
mov
stc
test
fisubrl
adc
outsl
add
xlat
imul
in
ljmp
mov
mov
cmp
pop
xor
pop
add
shrl
mov
cltd
or
add
cld
dec
sbb
push
add
xchg
insb
mov
call
xchg
push
icebp
xlat
or
add
sbb
std
adcb
arpl
push
lock
add
out
repz
jle
stos
aas
push
cmp
add
dec
sbb
fsubrs
ja
lcall
test
jl
cmp
lcall
cmp
addb
and
das
fsubl
add
jecxz
mov
add
lcall
add
inc
std
test
mull
add
cmpsl
shrb
rorl
cld
test
icebp
cwtl
xor
push
jp
shrb
add
lret
xorb
add
adc
hlt
clc
mov
push
or
ficomps
cmp
movsl
test
sub
das
add
inc
and
or
test
xchg
pop
aaa
adc
adcb
sti
mov
inc
and
jmp
add
pop
lret
cmc
ret
std
ljmp
inc
or
stos
add
push
mov
ret
or
loop
sub
xchg
mov
cmp
jmp
shlb
pusha
mov
movsl
add
add
xorb
add
push
jmp
xor
push
dec
mov
in
test
or
lods
mov
push
jns
jle
add
mov
xchg
add
rcrb
push
das
add
lds
mov
cmp
xor
or
mov
movsb
je
pop
movsl
pop
movnti
sahf
add
jmp
jne
add
incl
call
inc
xor
test
outsl
lahf
xlat
mov
jp
add
ljmp
ds
sbb
pop
out
pushf
popf
jp
sbb
inc
or
andb
push
out
dec
and
jg
add
cmp
adc
pushf
mov
enter
xchg
xlat
inc
xor
mov
mov
or
cmp
xchg
test
cmp
loop
push
test
pop
idiv
xchg
mov
cmp
mov
add
sbb
push
cmpsl
sbb
les
and
sti
fsts
aam
clc
sbb
popa
mov
fbld
std
inc
jmp
or
mull
xor
lock
and
rorb
mov
fwait
add
jno
add
nop
pop
in
das
add
add
ror
jle
add
sahf
lea
mov
not
leave
pop
mov
and
mov
hlt
mov
jns
lahf
xor
add
push
idiv
pop
fldz
nop
shl
mov
int3
sbb
or
xor
add
jge
pop
into
adc
mov
jle
inc
scas
fwait
je
add
jge
add
inc
and
pop
or
pushf
cltd
loop
ss
jo
add
mov
mov
jb
sbb
or
and
inc
push
add
andb
out
ss
inc
mov
repz
dec
pushf
inc
mov
jno
pop
cltd
dec
fwait
push
mov
dec
push
test
stos
push
sub
pop
add
cmp
push
mov
aaa
inc
or
les
add
fwait
sbb
add
into
roll
jg
shlb
std
xor
pop
add
testb
add
or
aas
push
push
adc
and
enter
mov
mov
cmp
test
mov
ret
negl
cwtl
inc
xchg
cli
icebp
add
inc
sub
lock
jo
lahf
shrb
hlt
inc
add
and
add
xchg
sub
add
test
ljmp
jp
push
push
in
stos
icebp
dec
add
in
cmp
and
cmp
into
push
les
mov
adcl
sbb
mov
fbld
je
add
in
out
xchg
pop
mov
add
push
push
xor
pusha
inc
cwtl
insl
push
repz
imul
daa
pusha
nop
and
fstl
add
addr16
icebp
shlb
orb
cmp
lahf
sar
add
add
movsb
mov
and
cmp
ja
jnp
std
xchg
sbb
out
lret
add
cld
lods
adc
sbb
add
xor
inc
clc
cmp
push
inc
mov
call
jmp
xor
fadds
roll
outsl
das
xor
cmp
dec
add
adc
add
out
ss
test
add
in
movsb
std
cmp
or
sahf
xchg
and
xlat
sub
fsubrl
cmp
insb
clc
jno
shrb
and
jmp
icebp
das
add
shll
mov
jo
arpl
jae
in
jl
or
jns
mov
test
add
scas
push
xor
or
mov
sub
cmp
xlat
pop
add
lcall
pusha
and
xor
daa
je
pop
pop
mov
push
or
sbb
push
out
dec
pushf
lret
inc
je
loopne
or
jle
loopne
js
or
jg
xchg
add
adc
imul
rcrb
pop
fists
mov
bound
xor
in
add
ja
movsb
jae
mov
or
add
repnz
dec
push
lcall
stos
shrl
js
mov
sti
mov
or
popf
pushf
add
mov
in
adcl
into
mov
jno
pop
push
jp
and
les
sbb
test
lret
hlt
add
adcl
ds
add
cltd
lcall
divb
and
and
gs
pop
add
cmp
pushf
lock
push
xchg
add
and
add
mov
xor
add
dec
aaa
loop
call
leave
je
jg
pop
bound
imul
movsb
push
jl
mov
dec
data16
sub
sub
subb
enter
push
hlt
xor
psllq
push
push
dec
test
pushf
rcrl
es
das
mov
je
cmp
sbb
add
push
cmpsl
adc
shl
jne
orb
int3
add
xor
mov
sbb
and
imul
xor
push
sbb
push
jp
pop
mov
inc
cmc
adc
mov
aad
roll
jp
add
inc
ss
or
adc
cmc
or
popf
add
inc
mov
add
pop
sbb
mov
mov
jle
xchg
adc
add
mov
pusha
incb
mov
rol
pop
icebp
mov
cli
jp
out
scas
fdivl
in
inc
xchg
into
add
enter
rolb
and
add
mov
in
faddl
mov
add
add
push
adc
push
mov
stc
andb
jecxz
add
push
outsb
clc
add
cmp
adcb
pushf
sbb
rcll
or
pop
cld
es
call
jno
fs
shrl
int3
sahf
cld
jnp
mov
call
inc
adc
and
gs
mov
mov
mov
push
xor
add
mov
sbb
add
into
add
dec
add
mov
add
popa
push
mov
lcall
jb
inc
and
jno
sbbb
xorb
pop
aam
addb
push
jp
es
add
add
lods
jle
add
and
add
rolb
xchg
imul
stos
and
add
mov
add
add
mov
sbb
cmp
hlt
cmp
stos
or
shrb
fwait
dec
pop
loope
add
jcxz
fldenv
hlt
sbb
xchg
sbb
mov
out
add
xor
clc
jl
fcomps
jne
into
mov
cmp
pop
outsl
lds
dec
je
add
ret
sub
pop
pop
mov
test
push
loop
fimull
add
push
rolb
push
outsl
std
rolb
or
sub
ret
adc
lock
or
fmull
aam
cli
add
ss
xor
mov
add
add
dec
data16
cmp
mov
scas
add
mov
add
mov
adc
loop
mov
xchg
adc
rorl
mov
cmpsl
push
mulb
cmp
and
xchg
push
popf
add
movb
add
push
in
cmpsl
dec
mov
add
add
inc
xchg
jns
mov
add
jge
or
inc
jp
bound
xlat
ja
into
loopne
movsb
imul
xchg
add
add
xor
outsb
mov
andb
mov
adc
jcxz
inc
daa
addb
leave
cmp
or
inc
aad
mov
add
fld
out
push
mov
aam
adcb
mov
mov
in
div
push
xor
mov
fs
pop
popf
fadds
hlt
faddl
jle
mov
in
lock
sar
push
and
jmp
add
loop
sbb
mov
shlb
pusha
pushf
jecxz
sbb
in
loopne
inc
push
mov
in
push
pop
xchg
sbb
sahf
in
mov
cmp
lcall
ficoms
inc
dec
pop
repz
out
lock
cs
xor
add
fcoms
add
xor
pop
dec
cli
mov
mov
cmp
ret
pop
add
rcl
movsb
xchg
and
jl
loope
stos
xchg
ror
ret
dec
ja
add
dec
add
inc
aaa
sbb
inc
call
daa
lock
mov
pop
and
pop
push
lcall
or
out
xor
and
dec
add
sub
loopne
cmp
adc
jmp
incl
add
ficoml
repz
imul
out
lea
rcll
cwtl
icebp
rolb
dec
mov
mov
pop
add
lcall
mov
cmp
and
mov
andb
xlat
pop
add
lcall
pop
jbe
add
sbbl
pusha
sub
pusha
add
movb
and
call
cmc
mov
repz
data16
jb
mov
call
push
adc
cmp
cwtl
or
popa
repz
dec
sbb
gs
cli
jo
pop
add
add
inc
sbb
mov
je
in
fwait
out
pop
mov
in
xor
jmp
ja
xor
sub
mov
jecxz
xor
mov
and
fidivrl
jmp
test
xlat
push
data16
rolb
mov
testl
fistl
popf
push
stc
mov
jb
jp
dec
dec
aas
addb
enter
lret
and
fildl
add
jl
fbld
inc
popl
jno
adc
add
sbb
stos
mov
ret
pop
dec
andl
cmp
add
add
adc
movsl
mov
inc
cmc
dec
and
andnps
jl
rcr
add
fldcw
mov
sub
inc
inc
pop
mov
push
push
fmul
push
xor
sub
and
in
sub
pusha
pop
jo
jnp
push
add
or
jb
and
push
cli
sti
add
push
shll
iret
jb
pop
and
and
push
xchg
nop
cmp
test
sbb
lcall
in
jg
and
pop
or
pop
jle
lods
mov
cmp
test
or
shlb
adc
sbb
mov
gs
add
dec
lahf
mov
xor
adcl
xor
add
sarb
shlb
test
jbe
test
fincstp
sbb
pusha
out
out
in
loop
notb
add
jle
dec
or
int3
mov
sbbb
mov
xchg
xor
cs
pop
push
cwtl
lahf
cmp
in
xor
addl
int3
bound
loopne
in
mov
mov
das
mov
push
sbb
js
add
fmuls
nop
sar
cmc
cltd
add
das
enter
or
mov
sub
je
push
add
pop
dec
out
jmp
mov
movsb
jg
sarl
js
mov
push
and
lcall
dec
jne
add
add
test
lahf
xlat
mov
pop
add
mov
pusha
mov
gs
mov
fldt
cmp
cwtl
add
fldl
inc
add
mov
inc
add
cmpsb
mov
add
lods
mov
and
jo
jb
mov
adc
fiaddl
pop
jmp
sbb
fs
sbb
mov
lea
add
mov
add
mov
nop
add
dec
jns
add
fsqrt
cmpsb
cmp
mov
mov
dec
or
add
adcl
into
rcrb
fdivrl
popa
pop
insb
jbe
or
sbb
push
fstps
inc
jecxz
fistps
outsl
inc
nop
stc
and
subb
mov
insl
ja
push
xor
sub
or
cmp
pop
add
test
dec
add
in
adc
add
lods
inc
xchg
ret
push
add
mov
adc
mov
nop
xchg
add
and
jne
jmp
ficoml
outsb
test
cwtl
mov
add
jge
xchg
or
adc
hlt
xor
push
inc
in
or
rcrl
addl
lea
and
or
add
push
xor
out
add
cmp
movb
pusha
mov
mov
xor
jnp
aam
notl
out
mov
sbb
lret
xchg
or
mov
inc
cltd
jle
ja
ficoms
mov
lock
sbbb
aas
out
addb
and
add
or
div
adcb
dec
push
lock
mov
stos
add
fs
fdivs
test
fiaddl
xchg
std
pop
sub
andb
or
xchg
push
add
pop
fcoms
push
jmp
add
sub
inc
sub
or
scas
pusha
push
jmp
pop
pop
xchg
adc
or
jg
jle
and
imul
lcall
testb
rcl
shlb
das
pusha
jae
add
add
ficoms
jo
push
add
pop
cmpsl
scas
mov
cltd
loopne
jmp
add
jecxz
mov
ret
mov
pop
adc
sub
push
add
mov
out
jae
pop
add
xchg
adc
ret
add
add
jno
add
pusha
mov
fisttpl
sub
enter
mov
data16
inc
pop
addr16
cmpsl
movsb
stc
ss
insb
mov
stos
mov
call
adc
addr16
xchg
cld
popf
cmp
js
shrb
and
push
lock
test
add
aam
and
imul
push
mov
add
es
push
scas
push
or
sbb
enter
sub
pop
pop
jns
sbb
outsl
jae,pn
inc
inc
aaa
ret
mov
sub
pop
push
addl
in
add
popa
xor
mov
mov
and
aad
adcl
add
shlb
pop
sbb
aas
cwtl
test
icebp
inc
addb
ja
sti
jno
sub
add
fldcw
insl
in
fucomip
and
test
jnp
pop
adc
add
ret
pop
es
jns
out
test
mov
sub
ficoml
or
or
pop
sahf
xchg
add
adc
ret
je
cmp
and
imul
out
sbb
stos
pop
jns
cmp
cwtl
imul
xchg
dec
add
fisubrl
aad
adc
rorl
std
adc
outsl
jo
add
jns
mov
add
loopne
fstps
hlt
add
dec
popf
mov
in
orb
mov
cmpsl
jne
add
push
push
jle
xlat
xchg
pusha
shrb
mov
out
arpl
or
add
out
iret
mov
hlt
xchg
mov
xor
push
lock
mov
lea
sbb
xor
xor
cmp
mov
fidivrs
add
movsb
int
hlt
xchg
add
jle
dec
dec
imul
pop
test
jns
add
and
stc
add
xor
pop
inc
sti
scas
in
add
sahf
pop
mov
andb
mov
push
sub
icebp
add
jnp
popf
inc
testl
push
fcomps
adc
loope
inc
into
ss
shll
xchg
push
add
data16
xchg
imul
adc
into
pop
add
mov
jnp
mov
xchg
addb
or
sub
lods
rcrb
mov
xor
aad
push
add
mov
or
pop
stc
xchg
cmp
add
mov
sbb
or
js
in
or
mov
push
inc
and
cmp
sbb
sub
and
cmpb
add
and
mov
mov
add
bound
or
sbb
pop
outsl
pushf
pop
pop
push
es
scas
mov
mov
stc
loop
pop
sub
iret
mov
and
push
insl
incl
scas
or
ja
in
pop
xchg
ret
stos
idivl
ss
insb
add
incb
test
pop
inc
out
ljmp
mov
sahf
addb
decb
pop
rcll
out
pop
dec
sbb
xor
pop
rcl
adc
adc
xchg
jp
push
push
pop
inc
mov
push
adc
and
outsb
out
mov
shrb
adcb
shll
jmp
ss
jb
std
and
cmpsl
or
sub
sbb
leave
pop
out
setnp
xchg
fidivs
xchg
cmp
loop
push
ljmp
orb
jmp
fnstenv
push
add
push
xlat
or
sub
loopne
pop
ss
sbb
mov
test
mov
mov
movsl
inc
pop
xchg
push
cmp
insb
sbb
std
inc
add
icebp
shlb
sbb
test
js
cmpb
mov
xor
lret
arpl
add
mov
or
add
in
xor
or
loopne
mov
or
adc
mov
xor
rol
inc
add
fmuls
rolb
add
push
dec
stos
inc
push
sub
xor
jo
add
fnsave
jle
sbb
aam
or
je
xchg
out
jo
cmp
lret
popa
xor
fs
ficoml
out
fsubr
pop
adc
mov
data16
test
sub
jp
mov
jge
fisubl
shlb
rcr
mov
in
gs
stos
add
sub
add
inc
cmpsl
pop
out
sub
int3
jmp
dec
in
push
or
cmp
jno
jno
add
imul
sub
hlt
xchg
and
mov
mov
add
sub
pop
jl
jecxz
or
fstps
decb
inc
push
lods
pushf
sbb
cmp
pop
mov
and
inc
dec
ja
mov
stos
add
imul
loopne
and
dec
prefetch
add
adc
add
stos
adc
divb
hlt
mov
sbb
ret
ret
push
or
or
std
mov
movsb
in
push
aaa
and
and
add
test
rcr
loope
mov
push
add
mov
add
and
ficompl
mov
pop
lcall
jbe
xchg
mov
clc
cmp
xchg
loopne
loopne
call
fisttpl
or
push
loopne
add
stos
xchg
iret
mov
pop
test
shll
dec
div
mov
jo
add
outsb
xor
cli
or
test
dec
cs
inc
mov
xor
mov
int3
mov
movsl
adc
lcall
xor
adc
inc
mov
orb
cld
testl
sub
lock
test
mov
gs
or
in
mov
add
lret
mov
push
movb
xorb
leave
movsl
pop
ret
xchg
gs
push
cmp
js
add
sub
add
xchg
sub
inc
ds
pop
dec
cmp
sub
call
rcl
xchg
stc
xor
inc
lahf
add
ja
or
dec
iret
add
scas
mov
mov
cmp
xchg
fldl
xchg
stos
dec
push
pop
pusha
out
in
fimuls
pop
int3
inc
xor
rcll
ret
add
es
push
jle
mov
inc
sahf
xchg
enter
icebp
nop
sbb
push
inc
or
cmp
xchg
add
xchg
dec
sbb
push
cmpsb
aaa
and
ret
add
mov
cmp
jo
inc
es
sbb
add
push
and
add
push
add
ret
xor
add
pop
cs
repz
enter
nop
pop
sub
faddl
pop
mov
movsb
out
dec
cmp
push
rol
push
call
pusha
pop
mov
jnp
fbld
adc
jo
pop
in
out
push
or
imul
mov
mov
dec
or
and
push
in
adc
mov
test
test
enter
and
and
lahf
les
lods
mov
mov
add
inc
mov
add
sub
repnz
mov
es
adc
adc
add
dec
movsb
gs
sbb
movsb
popf
inc
push
add
push
sub
out
add
xchg
sbb
mov
test
movsb
mov
mov
sub
sub
mov
mov
call
mov
add
add
mov
add
out
testb
push
push
in
pushf
and
mov
outsl
add
ret
fidivrs
hlt
stos
cmp
lret
xchg
add
ja
fcom
loope
jns
mov
faddl
add
nop
les
sbb
inc
sub
sub
xchg
xchg
xor
add
movsb
imul
ja
or
scas
push
aas
ret
insb
add
add
jmp
aaa
lods
inc
mov
add
scas
ffree
inc
dec
add
movsb
push
call
pop
ja
mov
sbb
add
idivb
push
test
xchg
sahf
arpl
dec
push
add
icebp
loop
imulb
add
fsub
cmpsb
dec
sub
lea
jns
and
stos
sub
lret
add
and
xchg
sbb
out
stc
push
add
adc
xlat
sub
add
sub
push
notl
add
xchg
nop
int3
cmc
add
or
pop
add
es
inc
sbb
out
cli
lock
pop
jle
cmpsb
jmp
lods
pop
cmovbe
add
mov
xchg
xlat
cmp
nop
mov
and
adc
jecxz
add
pusha
and
add
stos
popf
mov
rcrb
push
jle
dec
lock
xchg
mov
xor
imul
pop
cmpsl
push
cwtl
mov
add
pop
or
ret
shrb
loopne
sbb
mov
and
inc
test
stos
jno
cmp
add
adc
icebp
arpl
inc
ja
lret
inc
dec
and
mov
fisubs
cwtl
jmp
add
mov
hlt
xchg
cli
nop
dec
add
or
imul
jns
add
pop
data16
adc
mov
daa
push
and
add
idivl
and
pusha
cmp
pop
int
adc
movsb
add
xchg
add
les
add
mov
dec
sub
xor
xchg
test
fisttpl
and
add
clc
movsb
jg
je
imul
jbe
mov
cmpsb
enter
add
or
xor
movsb
lsl
inc
or
out
add
cmpl
add
dec
lret
cli
mov
outsl
sub
movsl
sbb
push
add
movsb
or
mov
fcmovnb
and
mov
jo
and
fiadds
jbe
or
test
mov
stos
sti
or
mov
scas
mov
fnstsw
pop
jo
inc
daa
outsl
push
cmpsl
pushl
in
cmp
add
scas
aas
dec
clc
ret
push
or
push
nop
repnz
rolb
lcall
and
lret
inc
test
jg
stos
add
cli
add
sub
mov
add
cs
mov
je
add
mov
jp
adc
lahf
fcompl
or
test
sar
les
add
pop
push
cmp
pop
andb
pop
mov
adc
mov
dec
jne
loope
in
jnp
test
pop
push
stc
bound
fiaddl
mov
or
leave
inc
outsl
pop
xor
jb
les
sub
push
push
shrl
roll
sti
js,pt
add
andb
in
pop
mov
pop
call
pusha
add
stc
sahf
pushf
and
jns
add
or
lea
pop
inc
dec
repz
jns
out
sbb
add
dec
out
add
pop
pop
fistps
lret
sub
nop
xchg
sub
jb
inc
mov
aas
cs
add
in
xchg
jecxz
dec
jb
and
add
pop
rcrb
push
std
sub
rolb
aad
inc
add
icebp
cs
es
sarl
adc
jbe
push
xor
mov
cmp
cmp
dec
and
xchg
dec
mov
xor
add
ss
es
jge
nop
and
pop
jecxz
sub
jb
xor
add
data16
ret
pop
inc
shr
pop
and
rorb
flds
xor
mov
pop
cmp
cmpsl
loop
sub
push
faddl
pushf
movsl
out
js
cld
push
add
mov
shlb
mov
enter
stos
jp
clc
fstpl
nop
clc
add
sub
lock
and
insb
adc
flds
xchg
add
mov
and
dec
mov
std
insb
sub
fsubrs
add
cmp
pop
out
mov
imul
jo
sbb
in
loopne
add
aas
test
rcr
pop
or
ljmp
lods
mov
icebp
loopne
loopne
mov
add
add
push
mov
jmp
pushf
inc
mov
add
test
ror
sbb
lods
add
mov
adc
xor
aam
mov
lret
inc
popa
divb
movsb
imull
loopne
lcall
or
popa
fildl
jae
movsb
cmp
adc
dec
repnz
je
add
ljmp
add
and
dec
push
or
insb
outsl
roll
lcall
xchg
jo
aaa
push
fcomip
loope
push
add
add
xor
rorb
loope
lods
outsb
add
adc
test
jecxz
push
int
loopne
ljmp
or
mov
push
mov
dec
iret
call
jae
leave
std
sub
addb
ficoml
dec
or
lods
icebp
cli
out
add
jne
add
or
mov
scas
popf
popf
mov
lcall
insb
push
push
xor
loopne
jmp
in
sub
xrelease
enter
shll
xchg
dec
add
andl
sbb
inc
mov
xchg
xor
lea
push
cmp
jo
pop
in
movsl
and
mov
roll
faddl
call
sbb
pop
add
outsl
in
inc
in
cmp
xor
cwtl
mov
jmp
mov
lea
xor
push
and
push
adc
xchg
movsl
sub
and
lds
cwtl
or
cmp
insl
arpl
mov
xorb
cmpsl
shlb
pop
outsb
lahf
xchg
andl
es
outsl
dec
add
imul
lret
cs
sbb
sbb
add
xor
test
popf
sbb
repz
pop
add
imul
sbb
aas
mov
jl
xor
loopne
cltd
xchg
push
xlat
adc
imul
ret
sahf
cs
test
add
cmc
adc
dec
add
insb
dec
psubq
inc
push
push
add
lea
jb
in
out
mov
add
add
sub
fisubs
mov
and
add
hlt
iret
inc
or
adc
pop
sbb
shlb
add
arpl
pop
add
fwait
int3
rep
test
add
cltd
clc
test
sub
or
in
enter
pusha
mov
arpl
mov
cmpsb
inc
out
push
call
add
jns
test
jecxz
add
cmp
roll
lods
add
leave
xchg
movsb
add
dec
out
add
gs
in
mov
jmp
orb
jo
movsb
sub
push
add
cmpsb
imul
bound
sub
andb
sbb
push
or
mov
pop
out
mov
lcall
loope
or
inc
add
mov
xorl
cwtl
sar
sbb
mov
or
dec
xor
adc
mov
lret
movsl
enter
and
cmpsl
jl
push
xchg
cmc
or
sub
mov
jmp
cld
add
clc
push
xchg
jno
push
cmp
and
insb
push
daa
mov
rcrb
shlb
add
and
lcall
sbb
jge
add
pop
add
je
adc
sub
es
pop
das
mov
insb
cli
add
out
fidivrs
mov
add
xor
sbb
clc
pusha
inc
mov
sub
dec
sub
mov
push
lret
jo
xorb
call
xor
add
ds
cmp
add
imul
xor
fiaddl
subl
add
decb
xchg
bound
push
sub
fldt
pop
sbb
or
mov
inc
pop
lcall
sbb
mov
mov
shrl
sub
inc
outsb
fildl
std
std
add
mov
into
clc
mov
adc
jge
pop
xchg
lds
enter
sub
ja
or
inc
clc
aam
lret
mov
test
sti
inc
stos
jo
out
cmp
fistpl
add
push
pop
add
mov
dec
sbb
dec
aaa
add
mov
lock
lret
sub
call
cmp
dec
or
seto
mov
lock
add
pop
out
inc
popa
test
and
add
aas
dec
pop
repz
add
mov
insl
addl
lods
out
movsb
push
arpl
cmp
lock
add
mov
cs
add
or
mov
push
cmp
push
or
iret
shrl
jo
shrb
add
lahf
lods
enter
ja
es
mov
jno
dec
mov
fs
aas
jb
add
rorl
cmp
push
adc
int3
repnz
js
mov
dec
adc
scas
mov
movsb
xor
add
cmp
add
and
aad
sbb
fs
pop
daa
push
pop
addb
lock
pop
mov
mov
cld
and
cmp
dec
ja
add
xchg
lods
andb
inc
or
pop
adc
add
mov
std
cmp
sbb
and
lods
and
sbb
sub
or
inc
add
inc
sub
mov
add
sub
dec
call
xor
fsubs
mov
sub
add
aas
xor
mov
push
cmpb
mov
dec
add
out
mov
add
insl
leave
push
sbb
nop
cmp
fldl
adc
push
out
test
cwtl
daa
lret
inc
cs
jge
rcrb
test
push
dec
pop
ret
add
push
adc
xchg
rorb
shlb
mov
pop
fsubp
lret
loopne
data16
xchg
add
jge
inc
xchg
dec
inc
fists
and
pop
or
setns
xor
fwait
mov
mov
pop
add
lcall
add
ljmp
lock
pop
jno
xchg
xor
in
jb
and
xor
and
add
popa
adcb
add
xchg
jb
sbb
and
clc
inc
add
inc
testb
rorb
je
mov
add
xchg
negb
aas
mov
mov
jg
loop
movaps
push
out
mov
jl
cmpsb
mov
jge
xor
sbb
xchg
and
sub
and
inc
int3
xchg
out
js
adc
rcr
addl
lea
loopne
aad
cmp
mov
or
test
xbegin
mov
inc
sub
outsb
jo
sbb
mov
inc
lock
add
sub
add
mov
cmp
add
pop
xchg
adc
mov
push
mov
subb
pusha
push
inc
push
add
xor
jae
addb
pop
add
pop
cmc
push
sub
cmp
push
test
aad
and
sahf
aam
es
out
sbb
fadd
mov
add
mov
mov
push
dec
negb
in
push
push
push
jnp
jl
loopne
scas
xor
mov
mov
push
lcall
cmp
push
adc
add
imul
xchg
hlt
stos
add
mov
and
sub
sbb
pop
inc
addb
pop
fcmovnb
test
loopne
add
dec
pop
out
sub
cmpsb
in
mov
mov
notl
mov
or
or
inc
add
cmpsl
jecxz
and
dec
shl
addr16
outsl
xchg
rclb
add
sbb
adc
sbb
loop
cld
inc
xorb
sarb
sbb
rcrb
sti
xchg
push
dec
adc
sub
add
in
pop
mov
add
lret
xor
js
mov
shll
cld
jae
and
cmc
inc
repz
mov
test
cmpsl
pop
xor
int
andl
movl
das
pusha
inc
stc
push
add
daa
pop
fwait
or
push
mov
outsb
xchg
lret
xorl
and
into
in
sub
loop
fwait
and
push
xchg
mov
xlat
mov
pop
pop
push
xchg
outsb
add
aas
shl
std
addr16
push
clc
mov
and
push
addr16
int
push
mov
das
cmp
jl
test
cmp
das
shlb
test
or
mov
shl
sbb
add
inc
stc
daa
sub
add
aad
cwtl
jae
lcall
sub
sbb
xor
je
mov
enter
clc
xchg
sarb
test
rcrl
and
sub
mov
cmp
int3
in
insb
in
or
or
jg
add
insb
dec
stos
inc
cmp
clc
call
xchg
xchg
and
and
in
push
pop
or
in
and
add
inc
add
add
ljmp
hlt
js
add
movsb
dec
test
daa
lea
add
les
jns
sbb
xor
xchg
add
fldcw
imul
movsb
js
sbb
rcrl
add
mov
je
mov
adc
out
push
mov
add
pop
stos
cld
jecxz
les
mov
cmp
in
add
ljmp
dec
add
outsl
add
lea
sbb
pushf
and
in
jmp
pushf
ljmp
cltd
inc
xor
pop
pop
add
fprem
xchg
mov
mov
fidivl
sbb
loopne
sbb
sbb
sub
dec
adc
add
and
ljmp
add
cmpsl
add
cmc
sub
es
mov
test
inc
test
pop
fcomps
stc
cmp
add
jmp
les
mov
call
outsl
ret
shlb
push
fisubl
or
jle
scas
shlb
lahf
push
insb
stc
add
adc
and
and
mov
lahf
hlt
mov
test
sub
and
stos
xor
dec
ret
inc
push
das
and
mov
jb
add
das
dec
popw
cli
xor
add
arpl
jno
dec
mov
imul
mov
xlat
stos
add
sahf
rclb
int
orb
test
loop
add
inc
pop
cmp
and
add
int3
fwait
xlat
add
bound
xchg
ljmp
add
scas
add
and
xchg
add
mov
add
lahf
adc
jnp
cwtl
movb
rclb
scas
xor
xchg
pop
pop
mov
pop
cwtl
or
cmp
jbe
xor
and
inc
ja
sbb
aam
sbb
fwait
into
mov
pop
push
stos
add
pop
mov
and
imul
repz
add
dec
shlb
sbb
sbb
and
or
and
jae
mov
add
shrl
pop
or
push
sbb
inc
dec
movsb
push
sti
pop
add
int
xchg
mov
or
cld
sbb
dec
mov
cmp
popa
fdivl
mov
loope
push
add
xchg
roll
add
mov
dec
add
sti
out
xor
cs
sub
lods
mov
or
icebp
fnstsw
or
test
je
arpl
dec
pop
add
shrl
add
repnz
sbbl
pop
push
inc
js
outsl
inc
inc
gs
clc
jno
rcll
jmp
out
nop
mov
add
sub
popf
jns
paddd
call
or
xchg
push
lahf
imul
sbb
sahf
int
add
loope
dec
jne
xchg
cmpsb
ret
bound
popa
pushf
or
push
popf
sti
push
jle
stos
mov
sub
iret
inc
sarb
sbb
pop
push
and
inc
mov
movsl
sarb
leave
out
push
repnz
clc
rcrb
inc
jecxz
and
subl
cltd
cmp
push
adc
mov
ljmp
out
mov
xchg
int3
add
popf
jmp
add
sbb
cmp
ja
inc
pusha
mov
or
add
add
sahf
mov
push
je
dec
cs
iret
add
xor
jbe
adcb
lea
push
xor
add
bound
popa
subl
fldt
movnti
orb
cmp
inc
orb
jmp
push
mov
loop
ficoml
or
xchg
sub
rolb
in
test
push
dec
lds
xchg
cld
loope
in
jl
and
add
repz
add
cmp
out
shlb
sahf
adc
shl
pop
addl
mov
insl
je
mov
stos
xor
popf
dec
add
jb
int
int3
lods
and
mov
shlb
or
repz
es
stos
xchg
sbbb
clc
lret
cmp
addb
jae
and
pop
nop
cmpb
push
push
verw
sbb
dec
push
ret
subl
pop
mov
test
mov
add
out
nop
jp
add
mov
in
iret
shlb
rclb
cwtl
shrb
pop
inc
add
test
add
cmp
in
ss
mov
sbb
out
enter
mov
mov
jg
add
iret
ret
sbb
arpl
mov
test
pop
pusha
jmp
fiaddl
mov
xchg
pop
push
sbb
push
stc
add
js
xor
leave
xchg
lret
cs
push
push
cli
idivb
scas
out
or
pop
add
loopne
cmp
pop
add
inc
rcll
add
push
dec
mov
add
cwtl
add
jbe
aam
mov
addr16
in
sbb
cwtl
nop
in
stos
sub
dec
xchg
push
jne
mov
rclb
cwtl
inc
add
fdivrl
add
gs
mov
adc
lods
int
xchg
cld
adc
inc
push
ret
in
addr16
test
and
fadd
test
add
inc
fldcw
cwtl
add
xor
inc
dec
inc
sbb
iret
xor
adc
bound
add
jae
into
push
in
sub
mov
gs
jp
add
repz
pushf
out
add
je
mov
add
sub
bound
out
add
repnz
jp
nop
push
and
pop
andl
xor
enter
das
add
cltd
imul
jns
mov
dec
sbb
pop
fcoms
mov
shl
push
outsb
add
cmp
or
loopne
les
and
push
adc
mov
mov
fdivrl
lret
sbb
add
jle
aad
cmp
xchg
dec
out
sbb
mov
inc
sbb
xor
leave
rcrl
cmp
add
mov
or
int3
xchg
les
cmp
sbb
jl
add
pop
lock
xchg
mov
adc
inc
test
faddl
cld
out
repnz
rcrl
shlb
mov
add
outsb
rolb
sub
jae
push
rorl
lcall
rclb
js
mov
dec
pop
inc
mov
adc
add
pusha
call
cwtl
add
pop
jno
xor
add
adc
mov
incb
add
jns
in
lea
or
call
xor
xor
sbb
mov
js
lcall
addl
pop
mov
in
movsl
or
lds
je
add
pop
push
or
inc
leave
sbb
nop
jle
mov
add
push
or
sbb
jmp
int
mov
pop
cmp
lea
jo
lods
rcll
add
lcall
mov
cwtl
add
inc
ss
mov
lahf
shrb
add
jns
incb
pop
in
inc
push
push
dec
int3
aam
jp
or
xchg
leave
scas
clc
pop
jbe
add
lea
out
sub
add
jl
clc
or
mov
jnp
fisubl
sbb
cmp
outsl
jecxz
lods
repz
xchg
pusha
mov
ret
insl
sub
stos
push
add
xchg
pushf
adc
or
cmp
je
ret
test
ja
mov
arpl
or
pop
cs
mov
jb
imul
jno
mov
loop
jg
mov
repz
lock
outsl
jle
add
fcompl
add
push
sti
mov
and
popl
add
mov
das
nop
test
jo
into
add
xor
nop
add
shrb
movnti
shlb
add
or
xlat
jns
loopne
jne
cltd
cmp
nop
adc
add
pop
into
xchg
sub
cmpsb
mov
iret
mov
mov
out
and
test
jbe
add
cmp
add
sbb
inc
xchg
sar
sub
pop
loop
and
int
cltd
pop
les
sahf
out
dec
popf
inc
mov
sub
ret
mov
xor
sub
inc
fimuls
sbb
jge
and
iret
shlb
push
add
mov
ljmp
aas
mov
cmpsb
fnop
imul
mov
mov
sbb
pop
outsb
addr16
xchg
add
mov
lcall
lods
add
fnsave
mov
or
push
enter
ja
lock
inc
call
test
add
int3
and
loop
lock
cmpb
push
or
clc
hlt
movswl
inc
or
mov
jg
daa
jne
faddl
or
mov
imul
das
mov
xorl
adc
and
imul
mov
adc
and
sbb
call
xchg
cmp
imul
pop
cli
pop
mov
shl
adc
xchg
movsl
pop
xchg
cmp
and
xor
mov
ljmp
lods
or
xlat
xchg
cmc
push
push
add
arpl
fadd
add
pop
dec
mov
lods
nop
or
jl
mov
ucomiss
andb
or
sub
push
shr
out
add
aad
xor
repz
fwait
add
icebp
mov
or
faddl
pusha
je
cmp
push
add
jne
out
rorb
aad
in
mov
xor
lcall
out
xlat
mov
stos
add
jge
jo
pop
nop
je
sbb
add
mov
push
add
cmp
mov
lret
xchg
test
out
mov
cltd
sahf
dec
popf
add
cli
movsb
xchg
sbbl
test
cmp
add
out
gs
or
or
push
dec
pop
adc
push
lock
add
pushf
inc
cmp
add
cmp
inc
xchg
adcb
mov
fists
lods
mov
insb
ficomps
out
cmpsb
xchg
hlt
sbb
cwtl
aam
nop
cs
lahf
and
rolb
add
xchg
sub
fdivl
ret
jne
push
adc
cmc
std
mov
push
lods
xchg
jecxz
sbb
push
add
mov
add
fiaddl
mov
jl
sarl
shr
out
jp
add
mov
cmpsb
add
lds
add
lcall
push
and
cld
push
sub
cwtl
add
int3
fsubs
add
dec
mov
ss
repz
nop
add
adc
mov
sarb
sbb
dec
cltd
addb
cld
sti
mov
or
pop
orps
fchs
push
mov
pop
add
add
xlat
add
xchg
es
jns
sbb
mov
mov
sbb
add
fcomps
add
xor
out
test
and
and
les
mov
jp
add
nop
jle
lods
sub
lcall
pop
pop
mov
mov
js
mov
dec
jnp
xchg
and
cmp
adc
cmc
stc
cmp
xlat
scas
inc
inc
add
pop
inc
outsb
mov
aas
aam
add
aas
mov
rorb
popf
mov
repnz
mov
cwtl
jge
add
sbbl
mul
dec
dec
add
mov
jge
mov
lcall
lods
andb
mov
and
loope
add
in
push
out
arpl
daa
inc
add
sbb
stc
mov
add
push
stos
fsub
lods
xor
fwait
pop
outsl
fldl
push
pop
jle
idiv
mov
js
rorb
add
jg
or
scas
or
mov
mov
push
dec
mov
add
mov
mov
adc
repz
out
pushf
ret
sarb
mov
dec
add
mov
mov
int3
dec
pop
jge
cwtl
loope
push
sbb
mov
sub
cmp
sbb
sahf
and
sbb
mov
sbb
movb
jge
sub
lcall
dec
pop
std
and
cwtl
sub
inc
je
add
das
mov
cmp
mov
int3
sub
sub
add
inc
sbb
adc
pop
int3
add
dec
cmp
idivb
pusha
sub
pmulhw
add
add
mov
shlb
addl
subl
scas
sbb
loop
add
and
add
sbb
ja
sbb
adc
fs
mov
mov
sbb
inc
add
popa
mov
clc
dec
jge
and
adc
sub
sub
rolb
mov
cs
sbb
cmpb
je
int3
loopne
cwtl
or
fcoml
push
push
insb
leave
sbb
add
mov
inc
push
jns
mov
xor
sahf
add
or
lods
fnsetpm(287
sub
orb
push
enter
jmp
rcrb
cwtl
inc
test
outsb
add
push
push
xor
bound
lahf
insb
mov
sub
mov
xchg
dec
mov
roll
adc
cmp
sub
hlt
loop
pop
clc
pushf
mov
or
pushf
and
inc
mov
je
adcl
clc
jae
loop
adc
fisubs
xor
cmpsb
jo
xor
mov
mov
in
mov
xor
push
sti
and
jl
push
loop
dec
insb
sub
add
pusha
push
lods
lods
cmpl
sbb
fisttpll
call
pop
sub
push
push
adc
pop
push
loop
cld
mov
add
std
jge
adc
loop
mov
xchg
sbb
pop
pop
inc
add
repnz
adc
add
faddl
daa
xchg
in
xor
decl
adc
add
push
cmp
xor
rolb
adc
add
iret
pop
scas
add
mov
adc
out
cmp
xchg
aas
mov
icebp
inc
pop
inc
imul
or
fimull
ja
test
add
push
mov
xor
icebp
add
dec
addr16
push
fucom
add
lcall
in
pop
xchg
cmp
aad
sbbl
out
xor
push
dec
xorb
add
mov
cmp
jmp
mov
push
or
inc
or
push
out
cmc
hlt
inc
les
add
mov
test
nop
sbb
fldl
and
inc
mov
loopne
add
lsl
xor
sti
lcall
sbb
xor
ficoml
mov
add
sub
add
mov
xchg
add
scas
add
inc
mov
pushf
xor
mov
xchg
or
add
add
cmpsb
out
sub
imul
mov
test
in
or
add
inc
js
add
add
les
xor
add
fsub
and
popf
test
inc
sbb
jp
aad
out
jge
sub
or
sbb
in
adc
add
into
js
int3
add
and
in
and
jne
cmp
daa
and
es
xor
hlt
sub
sti
loop
and
sub
jg
inc
xchg
inc
loopne
or
dec
adc
mov
push
push
jmp
add
dec
push
jb
repz
and
lcall
les
xor
add
dec
jb
mov
pop
jo
shr
sti
jnp
clc
sahf
test
fwait
sbb
cmp
test
adc
popa
enter
or
les
add
andb
or
es
mov
pop
cmp
sub
aas
gs
je
shll
push
or
or
call
icebp
ja
pop
mov
js
or
xchg
andl
cmp
inc
fsubrp
inc
mov
pop
or
popl
cmpsb
xchg
es
xor
stos
pusha
xor
jg
cmp
add
stos
int
jecxz
nop
pusha
inc
icebp
add
add
xchg
xor
adc
add
sub
lret
push
pavgb
xor
shr
mov
popf
push
mov
sbb
ror
sbb
dec
xlat
and
aam
or
mov
or
mov
fsubs
js
popf
xor
push
shr
cmp
add
cld
cmp
aaa
add
xor
lcall
pop
mov
jg
or
loopne
pop
enter
sub
aaa
mov
cwtl
ret
cs
sbb
lcall
pushf
jo
nop
hlt
callw
xchg
shlb
pop
fdivrs
fsub
ds
stc
icebp
mov
enter
lock
decl
push
int
loop
pop
inc
or
cmp
cmp
and
add
sub
test
std
jle
shll
jmp
xchg
mov
sbb
lcall
adc
in
add
push
push
js
sub
jns
leave
sbb
push
inc
ret
arpl
fs
stos
push
ds
add
sbb
jecxz
sbb
andl
push
mov
enter
pop
rolb
and
or
add
idivb
inc
sub
cs
add
and
mov
mov
push
mov
jb
nop
add
fimuls
lret
or
popf
pmulhuw
aam
inc
out
hlt
add
push
xchg
cmc
cmovnp
lret
inc
nop
leave
scas
lock
cmp
and
sub
dec
subb
jmp
adc
xor
adc
in
adc
pop
jo
sbb
cli
int3
jno
mov
add
fwait
leave
mov
add
or
push
push
mov
pop
cmp
sbb
cmp
ret
insl
popa
lock
adc
xchg
xor
in
dec
lock
inc
and
adc
and
imul
mov
xchg
in
jbe
sbb
sbb
add
mov
jns
jnp
cmpsb
push
enter
daa
jge
mulb
pusha
pop
inc
adc
xchg
shll
xchg
ja
add
or
push
shlb
xlat
mov
dec
std
pop
add
push
push
add
subl
or
enter
loopne
push
lret
mov
jnp
mov
add
out
sub
jge
aas
xor
xor
clc
aaa
sub
sbb
roll
mov
add
in
imul
mov
int3
pop
cltd
sbb
jge
adc
push
lods
shll
inc
jno
push
xchg
aam
sbb
and
cld
mov
mov
ror
orl
sbb
clc
or
xor
inc
add
jle
xor
mov
int3
ffreep
mov
push
loope
xchg
sbb
js
push
lea
xchg
pop
xorb
sub
and
xor
pop
mov
sbb
add
mov
jle
pop
in
pop
fmul
scas
mov
aas
push
mov
std
rcll
pusha
xchg
incl
testl
pop
and
sub
gs
jle
pop
rcrl
adc
popf
jns
jb
or
jl
or
in
xchg
adc
es
scas
dec
pop
mov
and
sbb
pushf
bound
dec
out
daa
decl
sbbb
call
aaa
mov
mov
mov
int3
xor
fcoml
add
andb
fs
add
sbbb
insl
mov
imul
idivb
lods
add
in
push
aaa
negl
sbb
mov
sahf
pusha
xchg
ficoms
xor
and
add
les
pop
or
lock
push
add
mov
loop
mov
add
pop
or
cltd
add
stc
adc
rolb
les
imul
out
mov
sbb
insb
daa
andb
push
dec
adc
fsubrl
call
js
or
add
xchg
xchg
mov
or
sbb
add
add
enterw
add
adc
std
push
sbb
sbb
inc
test
dec
xchg
dec
bound
cltd
dec
rcl
cmpsl
mov
gs
test
stos
loop
iret
add
call
arpl
dec
adc
stc
loope
dec
jnp
add
pop
inc
cmpsl
xchg
and
adc
sti
push
jmp
and
fsqrt
das
jp
jae
cmp
mov
sbb
or
pop
cs
push
out
add
fldcw
nop
aam
push
test
fadds
fwait
int
js
bound
call
daa
icebp
fisubs
mov
jno
push
jno
lret
mov
enter
xchg
stc
push
loop
sub
pop
cld
add
fsubl
cmpb
pop
adc
addl
fwait
inc
add
add
mov
sbb
xchg
cmp
dec
xchg
lods
iret
jne
and
data16
and
or
xchg
jmp
add
fstps
pop
xchg
dec
sbb
lock
jbe
cmp
js
pop
jmp
add
test
sti
sti
idivl
xchg
jg
adc
cld
pop
push
inc
add
sub
test
cmp
push
sahf
sbb
inc
call
sbb
pop
cmc
pop
push
sbb
mov
jno
cmpsb
or
mov
add
cmp
push
mov
fucom
rclb
inc
adc
sub
movl
loope
xor
test
add
add
cmp
aad
xor
xchg
cmp
or
pop
arpl
fcomps
mov
pusha
jmp
inc
sbb
sbb
mov
adc
sbb
mov
sbb
or
pusha
aam
rorb
ds
out
mov
add
dec
mov
cmp
xchg
add
cld
dec
rolb
sub
xlat
push
adc
dec
add
fwait
mov
pop
pop
push
shl
cld
and
push
adc
mov
movsl
lods
fcoms
mov
xchg
inc
dec
lret
sti
add
mov
add
dec
jge
out
and
push
xor
push
stos
dec
aad
cwtl
mov
push
loop
mov
ja
inc
add
adc
pop
jge
cmpsb
push
jb
test
or
shr
dec
sbb
inc
add
xor
fiadds
push
orb
pop
lods
mov
jo
inc
xorb
out
es
fwait
or
pushf
xchg
fistps
add
popf
xchg
push
add
out
xor
push
lods
or
sub
shlb
cld
out
mov
add
outsl
xor
xorb
stos
ljmp
cwtl
jo
lods
add
xor
jnp
push
inc
fnstcw
mov
add
xchg
pusha
dec
mov
in
sbbl
push
xchg
add
sbb
inc
sarb
out
insl
nop
pop
shrl
push
add
add
sub
add
mov
cmp
addb
xor
rclb
repz
mov
inc
testb
popf
aas
stos
lods
ret
adc
mov
mov
faddp
xlat
add
xchg
lea
push
sahf
addb
in
jg
sub
inc
jl
sbb
pusha
lcall
mov
xchg
sbb
mov
cld
push
addb
add
bound
cmp
or
or
call
sub
dec
add
pop
shr
fcoms
ds
nop
sbb
adc
stos
ss
mov
mov
cmp
cmp
cmc
dec
and
andb
shll
cld
orl
push
cmpb
pop
daa
ret
inc
call
push
add
xor
xchg
add
cmp
lods
sbb
aam
movsb
cwtl
sub
ficomps
xor
lea
mov
test
or
incl
sahf
iret
dec
add
and
incl
aas
ret
dec
repnz
int
dec
shll
insb
pop
sbb
xorl
cmpsb
and
loopne
pop
test
pop
scas
test
enter
or
push
add
and
sub
aam
in
test
dec
outsl
sub
cmp
sub
icebp
mov
dec
mov
or
repnz
mov
imul
ret
add
push
or
out
pop
fisubrl
xor
aad
xchg
shrb
leave
mov
sbb
mov
sarb
add
xor
cmpps
pop
dec
fstl
clc
pop
cmp
push
sbbb
jle
popa
push
enter
push
cmc
js
mov
sub
add
test
jns
lock
ljmp
rcll
hlt
pop
ja
adc
into
and
mov
jmp
faddl
sbb
cwtl
inc
ljmp
mov
sub
fstpt
add
adc
imul
fcmovbe
push
add
mov
imul
insl
sti
int3
add
flds
lcall
sub
rclb
xor
sbb
add
xor
sub
cmp
mov
and
xor
fdivrs
cmc
aas
in
mov
add
jmp
loopne
jo
pop
loope
ret
adc
jecxz
add
mov
or
movsl
test
imul
lahf
cmpsb
js
cli
int3
add
repz
sbb
lods
mov
rcrl
add
enter
mov
int3
jecxz
stc
fwait
push
mulb
jl
mov
dec
add
push
and
mov
inc
add
mov
inc
mov
mov
arpl
enter
pusha
sbb
cmp
bound
xor
enter
add
jmp
pop
in
fisubs
inc
push
xlat
jg
or
shl
add
add
add
dec
mov
loopne
movsb
push
or
sbb
push
ja
test
xchg
pop
call
cmc
stos
fwait
mov
outsb
jbe
push
fiaddl
add
mov
cwtl
jne
js
add
dec
add
mov
lock
add
inc
sub
xchg
jb
add
loop
std
pop
lods
push
add
jbe
xchg
dec
lock
push
test
js
pushf
sub
rcll
pusha
push
add
enter
fistpl
shrl
shrb
inc
and
mov
lret
push
jbe
push
je
scas
or
hlt
xor
sbb
lcall
or
add
xchg
insl
js
ss
jnp
nop
nop
pop
in
mov
jmp
add
int3
jge
add
loop
cmc
push
in
cmovg
scas
add
mov
ret
sbb
loop,pt
inc
pop
mov
jg
in
pop
add
push
xor
pop
daa
xlat
std
inc
test
add
adc
jne
inc
inc
ja
je
push
sbb
inc
test
lock
xchg
loopne
repnz
pop
add
sbb
in
xchg
js
jmp
mov
aas
mov
add
dec
aas
orl
xchg
test
cmpsb
xchg
pop
fwait
repnz
add
xlat
bound
push
cmp
faddl
push
aas
jmp
jg
add
stos
xor
test
mov
add
cli
pop
xchg
rorb
xchg
out
lods
fstpl
sub
jle
loop
es
insl
add
mov
out
jne
push
mov
out
cmpsl
cli
ja
cwtl
in
mov
or
and
in
inc
dec
test
lea
shll
sbbl
add
and
ljmp
xchg
test
add
ret
ljmp
dec
pushf
push
xchg
mov
add
call
popa
repnz
jno
imul
add
cltd
xchg
and
pop
sbb
jg
lahf
jae
sbb
fs
mov
iret
cmp
adcl
cwtl
test
faddl
leave
popf
cmp
mov
loop
mov
dec
out
inc
es
arpl
or
mov
push
lahf
add
inc
or
and
popa
add
aad
add
pop
jge
add
mov
cwtl
lods
shlb
sub
hlt
or
add
cwtl
insb
xchg
cmp
int
out
hlt
cmpsl
jg
adc
pop
rolb
jl
push
xchg
push
dec
adc
addb
inc
dec
ret
lds
xchg
cmpsl
cltd
add
scas
ja
add
jo
mov
adc
mov
fmuls
add
icebp
cs
pop
sbb
popl
push
stos
std
jb
mov
inc
mov
nop
bound
std
pop
stos
daa
jp
sbb
push
cmpl
lret
lods
add
dec
rolb
cmp
icebp
jo
outsl
add
add
add
sub
dec
in
ficomps
subb
ds
sbb
jecxz
pop
add
icebp
push
fisubrs
jmp
in
das
mov
mov
cmp
movsl
mov
mov
push
rcr
adc
fldl
sbb
sbb
cld
inc
out
jne
fdivs
pusha
add
lea
fimuls
shl
addl
push
or
rcrb
cmp
mov
adc
xor
add
adc
mov
loope
stos
rcrl
rorl
add
and
insl
push
int
dec
xchg
test
sbb
jecxz
mov
pop
cmp
cli
xorb
inc
mov
sbb
mov
add
ret
jb
jg
xor
or
cwtl
in
andb
mov
notb
pop
add
push
pop
lock
pop
inc
mov
lcall
jo
sub
sar
or
sbb
xchg
cmp
sahf
mov
pop
xchg
xchg
nop
movsl
xchg
xor
inc
jne
sub
add
pop
push
cmpsb
add
mov
dec
xorl
push
mov
movsl
pop
dec
push
inc
inc
add
pop
adc
sub
add
push
fsub
mov
cmp
fistps
jno
sub
xchg
or
mov
loop
sbb
push
inc
in
add
popa
push
mov
lock
test
inc
mov
mov
rclb
xor
adc
inc
ja
lock
and
add
mov
xlat
xor
mov
xchg
dec
adc
iret
xchg
mov
sub
jmp
jo
pop
mov
test
sbb
loope
les
js
mov
call
loopne
insb
test
repnz
add
lock
mov
push
ljmp
call
imul
ds
cmp
add
jbe
mov
mov
xchg
arpl
addr16
and
subb
add
leave
push
bound
cmpsl
ffreep
or
xchg
sub
jbe
rolb
mov
cmp
andps
pop
and
pop
outsb
ss
jns
bound
mov
fdivrp
jnp
inc
mov
leave
xchg
fimull
rcr
mov
and
add
cwtl
out
not
int3
shl
adc
add
push
pop
adc
inc
add
inc
insb
adc
jnp
sub
lret
shll
shll
sbb
add
sbb
sbb
jnp
outsb
pop
mov
popa
sub
pop
rorb
aaa
jne
xor
repnz
dec
into
xchg
cli
mov
pop
aad
dec
xor
mov
mov
add
dec
pop
jl
mov
sub
lret
leave
pop
jmp
into
mov
inc
mov
repnz
insl
in
add
subl
mov
je
push
addb
jb
pop
cmp
dec
xchg
push
cmp
push
cmp
stos
add
adc
lcall
pop
bound
shrl
imul
pop
aas
popa
jno
leave
jmp
push
enter
add
cmp
cltd
or
inc
mov
sbb
mov
pop
add
push
jecxz
add
add
lcall
imul
mov
push
neg
lock
in
push
leave
stc
out
data16
mov
pop
mov
lea
test
repz
cmp
xchg
fprem1
setb
jnp
popa
data16
push
add
dec
and
call
mov
fiaddl
iret
xchg
mov
daa
and
call
out
add
rorb
mov
leave
lret
cmpb
dec
add
push
cmp
outsl
mov
mov
xor
push
push
iret
jmp
mov
out
pushf
add
push
pop
dec
fldt
and
out
test
aas
jae
push
shlb
shl
or
pop
nop
andb
sbb
cwtl
inc
mov
movsb
jge
inc
mov
xorl
movsb
stc
or
or
adcl
mov
sub
aas
mov
xor
and
nop
inc
push
jge
sbb
aad
add
in
cmpsb
inc
nop
subb
add
pop
push
lret
mov
add
xchg
dec
add
jns
add
cli
push
inc
jmp
cltd
hlt
add
out
sbb
enter
fsubrl
rcrb
repnz
cmp
subl
jp
sar
push
and
lret
add
xchg
testb
imul
mov
imul
xor
andl
fistps
inc
loopne
add
dec
add
cmp
pop
pop
mov
inc
mulb
and
pusha
test
or
mov
jb
imul
pop
hlt
addr16
cmp
or
or
push
jle
imul
pusha
ficompl
or
cmp
add
add
mov
and
inc
andb
dec
cwtl
pop
jo
add
shl
cwtl
hlt
lods
adc
mov
push
ljmp
dec
add
mov
xchg
ds
jb
sub
call
cmpsl
xchg
xchg
int
or
clc
jg
and
mov
bswap
stos
cltd
adc
je
sbb
push
arpl
sbb
dec
jae
add
loop
outsl
jg
or
adc
mov
in
bnd
jecxz
ljmp
dec
cmpsl
pop
xchg
jl
fildll
push
push
sbb
repz
nop
dec
add
addl
or
and
add
iret
sub
push
loope
addl
sbb
in
jo
ja
adc
xor
add
pushf
add
dec
test
mov
pop
xchg
cli
and
jg
ror
dec
jl
add
shll
xor
loop
das
xor
jl
xor
xor
mov
push
sub
add
sbb
jns
push
add
dec
cwtl
inc
mov
lret
outsl
push
jnp
cmp
hlt
pop
adc
repnz
and
jno
push
popa
and
lcall
ret
movsb
jnp
cltd
les
jmp
imul
cmp
add
leave
test
cwtl
add
popa
in
push
popf
mov
leave
jge
sbb
inc
dec
test
stos
jp
add
inc
stc
sbb
fnstenv
add
lret
jle
dec
push
push
add
jl
mov
push
imul
xchg
push
adc
and
daa
ret
pop
loopne
and
je
xchg
mov
and
and
shrl
push
jge
jo
or
mov
outsb
push
xchg
add
sbb
ja
add
sub
cltd
xchg
sbb
push
andb
jo
mov
mov
push
and
and
mov
or
iret
in
xor
fwait
ret
mov
orl
test
cmp
pop
add
mov
mov
call
mov
push
push
mov
stc
adc
xor
fistpll
push
push
rolb
inc
xor
sbb
cmp
or
lods
aad
add
pushf
dec
or
int
push
pop
loopne
inc
sub
add
iret
rol
jns
imul
jecxz
inc
sbb
and
scas
mov
int3
lods
or
out
cmp
lret
ss
adc
xor
add
iret
xor
pusha
xor
dec
push
pusha
sub
sub
sbb
fcompl
add
in
push
sbb
lods
call
out
xor
andl
testb
mov
or
sub
andb
mov
sarl
subb
add
push
xlat
outsb
clc
sub
pusha
loop
sbb
jg
pushf
lahf
xchg
mov
insb
ljmp
jnp
mov
add
lods
mov
in
xlat
jmp
mov
jg
sub
jae
cs
loopne
pop
jle
jo
xchg
sbb
cmpsb
test
inc
xchg
sub
stos
sub
sbb
adc
add
add
test
in
lahf
mov
pop
xor
mov
xorb
adc
mov
add
std
es
fld
addb
adc
pushf
pusha
mov
adc
mov
pop
shr
sbb
mov
das
and
mov
push
pushf
add
dec
ds
jne
add
test
pop
imull
push
jle
out
mov
lret
add
out
and
and
mov
push
movsb
call
xchg
or
icebp
sub
icebp
and
stos
ljmp
mov
and
pusha
popa
loope
mov
mov
insl
add
jne
jge
hlt
mov
repnz
sbb
dec
in
lock
sbb
fs
rcrb
add
out
lret
sub
jge
orb
sti
xchg
orb
and
jle
add
dec
cli
push
add
inc
pushf
push
or
push
loop
xchg
ret
ss
cwtl
inc
fstpl
sub
cmc
test
add
stos
jecxz
in
and
xchg
inc
sub
xor
popa
jle
jecxz
xchg
and
mov
adc
cmp
add
dec
mov
lea
cmp
iret
jae
or
ret
xor
add
loop
sub
mov
roll
or
mov
or
str
divl
dec
test
xor
push
sub
icebp
and
jle
and
pop
push
push
stos
bound
in
jns
lods
int3
mov
andl
testb
in
cwtl
add
movl
push
push
scas
push
addr16
inc
dec
pusha
mov
xor
movsl
xor
sbb
ret
call
test
add
sbb
into
add
ret
inc
lock
sarb
add
shrb
xchg
ficoms
xchg
mov
add
and
add
clc
and
lcall
scas
insl
mov
mov
flds
sbb
xor
add
xor
cmp
test
jmp
or
loop
pop
leave
xor
pop
shrl
fdivrs
push
sbb
in
xor
in
repnz
add
push
dec
xchg
jle
cld
mov
inc
xchg
js
or
test
dec
cmp
mov
and
sti
icebp
xchg
inc
shl
pop
shl
lods
sarb
mov
rep
push
jmp
in
adc
subb
popf
sbb
add
idivl
hlt
mov
sbb
inc
xchg
movsb
call
ret
xlat
mov
rorb
cmp
add
in
daa
mov
imul
mov
fs
and
mov
rcrb
add
pushf
sub
cmp
xchg
mov
jmp
adc
or
adc
stos
push
pop
test
mov
and
imul
insl
jns
xor
std
mov
add
fwait
sub
fidivrl
dec
jae
pop
mov
ss
xor
jge
xor
push
or
xchg
or
lock
mov
pop
or
add
add
notl
inc
insb
or
add
jp
inc
mov
dec
aam
mov
add
adc
mov
in
cmp
popa
adc
rcrl
or
mov
hlt
cmp
or
push
xchg
into
notb
mov
add
xchg
jb
in
add
movl
outsb
xor
adcl
cld
ret
adc
mov
push
mov
mov
dec
inc
push
add
imul
sahf
inc
add
cli
mov
lds
or
or
lods
and
movsb
mov
add
bnd
pop
loopne
adc
add
sub
adc
mov
out
out
push
add
mov
pop
test
xor
in
in
mov
xor
inc
dec
xor
fdivl
adc
xchg
and
rorb
sub
inc
pusha
outsl
or
dec
dec
push
or
rcl
in
sub
rolb
add
in
loope
stc
mov
sub
cld
gs
dec
add
cs
adc
in
sub
mov
lock
je
std
in
inc
enter
idiv
aaa
test
inc
sbb
int
scas
test
hlt
xchg
adc
inc
or
jb
and
insl
mov
pop
jnp
std
mov
imul
les
jbe
sbb
cmpsb
and
mov
fisttps
push
dec
push
es
xchg
add
ljmp
xchg
lods
jnp
and
add
fs
shr
mov
sub
loopne
aaa
cmp
orb
add
adcl
mov
cmp
add
and
pop
jno
inc
test
das
mov
adc
mov
push
aaa
xor
lret
vmrun
xchg
mov
enter
add
xlat
fistpl
xchg
rcrl
enter
loope
add
sbb
rorb
xchg
xchg
stos
mov
mov
lret
daa
mov
mov
jns
ja
ret
add
cmp
xor
fisttps
jb
jecxz
push
or
test
lret
in
aam
idiv
popa
xor
lds
sub
xchg
sbbl
pop
xchg
inc
mov
ret
nop
jg
cmc
adc
cmp
in
jo
dec
mulb
mov
cltd
pop
lret
jg
test
inc
sti
nop
cmp
xchg
loopne
cmp
fdivrl
adc
mov
lock
add
inc
push
aaa
mov
xor
stos
cwtl
dec
mov
adc
pusha
push
cwtl
dec
add
pop
lcall
mov
inc
mov
lock
data16
add
rclb
stc
hlt
in
ss
cmp
lock
test
add
add
adc
repnz
add
push
xor
orb
and
jecxz
loopne
pop
or
ret
xor
notb
dec
adc
xchg
add
push
fadd
test
mov
sti
pop
dec
add
mov
lcall
call
add
jl
fnstcw
xor
push
lcall
repz
push
int3
xor
arpl
push
and
or
cmp
pop
dec
xor
fnstcw
and
fwait
pushf
adc
adc
jmp
cltd
test
enter
or
roll
fistpl
pop
cwtl
arpl
mov
pop
inc
pop
fisttps
clc
pop
ret
cmp
mov
mov
dec
jns
add
aaa
mov
push
in
nop
or
es
sub
adc
cmp
sub
sub
push
mov
push
add
outsl
sbb
scas
inc
sub
rcrb
loopne
and
lret
xchg
sbb
pusha
pop
jns
xor
filds
adc
jns
mov
push
xchg
mov
push
jb
xchg
or
adc
add
sub
call
jmp
cltd
mov
inc
adc
xchg
insb
mov
repnz
js
add
in
sbb
add
xor
pop
repnz
out
mov
xorb
or
js
inc
add
and
cmc
push
or
lods
enter
fwait
cmp
and
cli
sti
ds
or
popf
pop
dec
scas
and
test
iret
test
test
add
inc
out
lds
rolb
scas
jge
fmull
enter
sub
or
call
and
cmp
fimull
add
popf
or
or
rolb
sub
pushf
movsb
jns
add
adc
pop
pop
mov
lods
clc
mov
cmp
orl
cltd
cmovns
and
pop
lcall
or
into
pushf
mov
add
add
andb
add
mov
mov
arpl
add
mov
adc
aas
inc
into
bnd
repz
stos
inc
out
in
cmp
push
mov
cmp
notl
sbb
popf
mov
mov
inc
loopne
ficompl
rcl
lahf
rorl
jbe
outsb
xchg
cmp
pop
mov
out
xor
add
mov
int3
sbb
pop
pusha
xchg
call
icebp
add
adc
repz
and
pusha
mov
mov
mov
sbb
mov
in
pop
sti
sbb
mov
sub
jne
pop
push
cmp
jg
test
add
dec
loope
fmull
pusha
jl
rorb
insb
lds
ja
mov
jle
lods
inc
pop
pusha
fmull
jecxz
inc
add
cs
aam
pusha
sub
aas
gs
or
loop
bound
add
hlt
fistps
or
inc
std
dec
pop
pop
sbb
aaa
rol
lret
mov
scas
xor
add
xorl
stos
adc
cmp
cld
add
subb
or
aaa
andb
mov
or
dec
inc
sbb
add
and
loop
xchg
shl
and
push
and
xchg
push
clc
inc
testl
je
inc
pop
pop
cmp
xlat
add
shl
cmpsl
pop
in
jg
add
inc
stos
in
pop
mov
sub
mov
jl
push
outsb
insl
add
testb
fcmovnbe
add
mov
nop
lds
cs
xchg
jae
or
fcmovbe
mov
das
push
add
std
lahf
adc
add
lret
jg
pop
mov
inc
inc
mov
jge
push
imul
and
lods
dec
addr16
dec
js
sbb
fnstenv
mov
insb
pusha
inc
lea
sub
or
sub
push
inc
in
pop
scas
outsb
loopne
filds
sub
test
movups
fdivrl
and
mov
scas
cld
mov
inc
xchg
xchg
mov
mov
jb
mov
stc
popf
dec
mov
lret
add
xor
add
subl
xor
mov
pop
mov
push
testl
out
cwtl
or
jo
pusha
int3
outsl
mov
pop
adc
orb
xchg
inc
pushf
ss
loopne
stos
add
enter
cwtl
sbb
add
sbb
cmp
add
scas
push
mov
add
ljmp
dec
add
mull
push
aam
subb
pop
lods
jmp
test
sub
aad
cmp
adcb
mov
repz
stos
dec
int3
xor
dec
sbb
fsubs
scas
add
cmp
add
rclb
andb
mov
sbb
sbb
mov
mov
and
loope
sub
xchg
inc
mov
xchg
or
lds
push
lahf
push
andb
stos
daa
adc
pop
sbb
push
dec
jle
add
xor
push
js
xchg
and
mov
add
stc
sbb
push
jecxz
lahf
add
dec
mov
adc
add
sbb
sarl
mov
shr
hlt
loope
ret
imul
pusha
lahf
sub
mov
cmp
imul
jecxz
outsl
push
loopne
pop
sub
in
adc
ds
cmp
data16
pushf
mov
xchg
jge
xor
mov
jns
add
mov
push
call
pop
test
mov
or
insl
mov
int
and
movsb
ret
aaa
icebp
jmp
test
add
lock
pop
push
aam
pop
jnp
and
push
inc
pushf
xor
aaa
add
mov
cwtl
call
fldcw
jp
clc
movsl
push
add
je
bound
or
pop
ss
sub
movb
ljmp
lcall
ret
mov
out
rcrb
bswap
idiv
add
cmp
sbb
mov
fwait
add
cld
ret
inc
pusha
sub
mov
sbb
xchg
cmp
mulb
pop
gs
xchg
fs
cmpsl
incl
in
sub
jmp
enter
fldenv
mov
dec
adc
mov
ja
inc
inc
inc
inc
lret
fs
jb
int3
int
insl
push
imul
xchg
inc
les
or
mov
push
fiadds
cmp
add
sub
lods
adc
mov
pop
sti
or
dec
mov
int3
lods
cli
add
out
ss
or
pop
cmp
lock
inc
pushf
or
movsb
jmpw
adc
inc
mov
imull
or
sub
ret
inc
xor
xchg
aas
arpl
sbb
add
xlat
xorl
frstor
or
push
rclb
loope
adc
movsb
stos
adc
mov
cmc
add
sub
adc
in
pop
add
lock
mov
mov
inc
loopne
push
inc
jp
xchg
enter
dec
movsl
pop
fsub
jbe
and
or
cmpb
dec
pushf
rorb
hlt
dec
mov
add
xchg
leave
jle
pop
je
mov
aas
jo
lds
mov
ror
jmp
test
or
lea
pop
idivb
sti
scas
mov
jg
add
jne
sbb
rcrl
mov
addr16
daa
push
dec
or
mov
inc
add
push
dec
in
mov
adc
dec
jg
and
insb
add
scas
add
stos
stc
mov
xor
subl
adc
loope
inc
rol
push
testb
adc
mov
cltd
jbe
xchg
into
add
mov
ljmp
add
clc
mov
sbb
in
shl
cmp
cmp
mov
outsl
dec
lret
pop
sbbl
pop
fildl
dec
mov
cmc
rorl
mov
add
mov
divb
and
xchg
sbb
xchg
pop
fadd
mov
adc
or
in
or
inc
cs
mov
pusha
or
pop
iret
pop
jbe
addr16
stc
mov
dec
mov
rcr
add
adc
mov
data16
add
ret
pop
test
lods
push
lods
and
xor
xchg
stos
mov
push
ret
or
xor
mov
and
mov
dec
dec
and
les
sub
adc
pop
je
dec
inc
add
add
mov
xchg
adc
dec
in
add
dec
lcall
rolb
dec
mov
ds
inc
jno
add
das
shll
ret
adc
xor
jb
les
cmpsw
xchg
mov
stos
jns
lea
dec
sub
sbb
add
xchg
mov
fwait
insb
movsb
push
mov
loop
das
or
xchg
pusha
jo
imul
mov
rolb
add
clc
or
in
mov
push
arpl
shrl
inc
repz
add
xorb
fs
add
je
cmp
mov
fsubl
cmp
inc
or
jecxz
ljmp
pop
sbb
out
pop
stc
push
fnsave
hlt
ljmp
stc
mov
push
xor
mov
jp
lea
sub
or
insl
gs
push
clc
pop
rcll
push
rol
inc
cmpsl
pusha
fmull
sub
sub
fisttps
in
lock
dec
dec
xchg
sub
mov
jle
or
imulb
mull
mov
inc
ffreep
xchg
popf
pop
daa
lcall
in
jecxz
jge
mov
sub
mov
cmpsl
scas
add
dec
sbb
mov
jo
cld
andb
es
mov
push
or
xor
push
dec
sub
test
inc
or
addb
jns
aam
imul
enter
add
dec
sbb
mov
xlat
dec
mov
adc
call
sub
dec
pusha
lods
clc
adc
add
mov
movsb
fbstp
pop
shr
add
jecxz
mov
inc
stos
pop
jmp
cmp
sbbb
or
int
xor
lret
add
sub
xchg
mov
lods
inc
out
pop
dec
cwtl
rclb
push
xchg
jnp
or
cld
sub
imul
pop
pminub
sbb
inc
and
test
stos
add
shr
mov
push
sbb
in
fldl
or
inc
cmc
xchg
adc
push
testb
hlt
stos
mov
cmpsl
nop
call
repz
icebp
xor
push
out
arpl
test
divl
add
mov
test
cmp
inc
lcall
ljmp
jo
adc
adc
mov
andb
cmc
mov
add
lods
rorb
xchg
sbb
sub
int3
mov
mov
mov
incb
adc
and
or
or
int3
cmp
shlb
add
jno
pop
sub
cld
inc
bound
and
and
or
inc
scas
inc
into
cmpsl
dec
sbb
xchg
adc
mov
stos
pop
loopne
lret
hlt
and
call
lock
insb
std
cltd
enter
xor
mov
movsl
xor
in
sbb
shll
mov
fs
adc
adc
or
cmp
fwait
sub
xchg
cmp
add
hlt
add
or
ds
repnz
std
pavgb
sub
cmp
and
mov
mov
adc
loopne
add
push
frstor
lods
mov
pop
fbstp
mov
or
mov
inc
popa
push
add
xchg
jbe
jb
lock
jl
mov
mov
jne
mov
lock
daa
adc
sbb
cmpsl
das
xorb
xchg
adc
mov
push
or
lock
or
idivb
push
adc
and
loopne
cmpsl
mov
or
push
jp
loope
stc
add
insl
fxch
xor
jbe
cmp
data16
sbb
ljmp
hlt
and
push
sub
sub
adc
xor
jbe
pop
xchg
push
mov
pop
jge
pusha
jmp
add
in
rorb
bswap
xor
stos
cmpsl
mov
pushf
pop
push
or
inc
jle
dec
ljmp
cs
push
add
dec
push
or
pusha
js
xchg
icebp
push
repnz
add
inc
stos
loopne
and
jecxz
add
xor
sbb
add
lods
push
mov
add
xchg
xlat
and
add
test
scas
out
mov
int3
aaa
dec
jg
push
loopne
push
and
xlat
arpl
push
aas
imul
adc
shlb
cmp
stos
std
test
popl
xor
inc
cmp
orl
xor
jmp
pop
or
xchg
dec
push
and
aam
mov
xchg
add
test
mov
in
add
pop
push
sbb
rolb
mov
jbe
out
sti
pusha
sub
push
push
add
pop
shrb
mov
adc
add
mov
or
lahf
xchg
cmp
sbb
sub
pusha
aam
mov
mov
inc
ss
xor
repnz
fists
mov
es
idiv
lea
pop
push
sub
sbb
aad
enter
arpl
test
movsl
js
push
inc
mov
sbb
add
sub
push
mov
mov
add
add
shrb
ret
pop
enter
add
pushf
mov
mov
inc
dec
pusha
adc
mov
xor
cmp
mov
mov
js
adc
daa
lahf
xor
jno
cmp
insl
add
sbb
cmp
mov
or
mov
cld
add
pusha
mov
popf
pushf
mov
pusha
lahf
push
jb
add
loopne
jge
psubq
push
pop
pop
jecxz
push
mov
and
jae
or
mov
ljmp
sub
popf
sbb
inc
mov
loope
dec
sub
int
push
daa
push
movsb
adc
insl
ltr
loope
repnz
dec
pushf
xor
hlt
fs
sub
les
pushf
out
sbb
add
out
shrb
out
aaa
pop
dec
or
mov
sub
and
fs
mov
call
push
cmp
pop
pop
mov
sub
push
mov
sbb
fadds
lods
and
jae
fsubl
scas
fadds
cmpsb
daa
std
xor
add
pop
int
sub
out
bound
push
enter
add
xchg
aas
imul
cwtl
inc
outsb
or
add
in
mov
mov
sbb
add
add
adc
sahf
rolb
fstp
stc
or
jle
or
adc
rcrl
xchg
pop
andb
xor
jbe
cli
jnp
adc
xchg
mov
sub
orb
add
cmp
mov
int
sbb
ss
add
sub
cs
aam
aas
and
pop
or
jle
mull
addl
or
sub
mov
arpl
dec
out
adc
push
push
dec
cmp
xorl
mov
pusha
mov
bound
push
pop
push
jle
jno
enter
je
jb
dec
add
test
inc
pop
ror
les
pushf
addb
fcmovnbe
inc
or
sbb
mov
repz
mov
std
int
fiadds
add
and
and
cmc
out
lret
xchg
dec
mov
adc
sbb
sbb
shrb
clc
addb
push
xorl
les
or
jg
js
add
sub
stos
push
loopne
les
out
shlb
stc
cltd
or
aas
inc
mov
or
pop
push
out
inc
test
je
out
sub
add
out
jno
es
cs
pop
add
dec
sbb
mov
pusha
mov
push
add
dec
jmp
test
roll
lock
inc
les
sahf
push
lods
out
add
loopne
ds
and
pusha
push
sub
shlb
testl
and
aad
mul
repnz
sub
inc
test
es
loopne
clc
nop
repz
call
sub
mov
fldl
sbb
aaa
test
mov
inc
out
movsb
mov
inc
fcmovne
sti
dec
push
hlt
imul
xlat
push
ss
test
mov
addr16
shrb
aad
ljmp
add
insl
pop
jecxz
xchg
imul
mov
adc
cmp
jo
inc
add
es
test
pop
sub
iret
add
out
hlt
pop
fistpl
pop
adc
xorb
aam
lods
daa
adc
cmove
jmp
and
pop
adc
and
jo
adc
and
test
cs
dec
shlb
imul
cwtl
mov
ret
or
mov
les
mov
int3
mov
push
push
mov
add
shr
loop
add
mov
jg
test
lds
jns
jmp
pop
ficomps
adc
int
test
bnd
daa
jecxz
and
daa
sbb
in
stc
pop
mov
jl
sahf
sbb
out
xorb
pop
xchg
nop
adc
pop
shl
push
leave
sarl
dec
add
popf
sbb
nop
cmp
sub
dec
lods
xor
sbb
cmc
add
xchg
popa
sbb
add
popf
out
fwait
xchg
or
loop
outsl
jb
xchg
fmull
mov
stos
pop
andl
addr16
dec
inc
inc
test
cmp
adc
push
push
arpl
cmp
mov
addr16
push
mov
lods
ret
js
je
cmp
lods
imul
rorl
decl
enter
jno
aas
and
jge
xchg
fistps
xchg
outsl
ds
shlb
in
sbb
loopne
daa
std
lcall
sar
xchg
aaa
popa
mov
mov
xor
adc
sbb
dec
and
out
mov
mov
lods
add
push
adc
push
pop
testb
and
pusha
inc
xor
mov
dec
add
mov
imul
mov
sbb
pop
pop
mov
cmp
or
fucomi
push
adc
jnp
lds
push
ret
subl
pop
mov
fcmovnu
mov
enter
ja
add
dec
add
sbb
sbb
in
push
fucomp
push
adc
jo
add
fs
jl
or
jbe
xchg
add
add
push
ret
push
cmp
mov
push
add
ss
push
jnp
pop
jmp
xlat
rcrb
or
mov
data16
test
dec
mov
sti
push
xchg
add
hlt
or
mov
ret
jno
xor
stos
dec
sbb
adc
popa
in
cld
push
fisttpl
add
scas
loope
popa
xor
cmpsb
dec
jge
pusha
sti
testb
jnp
pop
test
sbb
add
add
in
andl
inc
jns
adc
stos
sub
cs
cld
stos
xchg
dec
fisttpll
push
insl
sub
test
jns
inc
xor
outsb
scas
stos
push
pop
sub
into
push
in
mov
mov
mov
out
aaa
xchg
jne
nop
fisttps
xor
dec
push
in
cmc
cwtl
mov
jae
arpl
mov
cld
stos
dec
rolb
pop
imul
add
mov
xchg
jl
add
js
xchg
add
xor
repz
sub
es
loop
adcb
adc
jne
pop
aaa
mov
rcll
sbb
sahf
call
sub
and
scas
xchg
inc
sarl
mov
xchg
inc
int3
sbb
xchg
cld
xchg
push
sbb
sbb
ret
imul
in
scas
cmp
add
cld
mov
out
sub
shr
imul
add
push
push
jbe
mov
jp
and
jno
cmpsb
pop
or
orb
dec
faddp
pop
sub
dec
lock
fprem1
ss
scas
xchg
dec
adc
insl
shll
mov
test
adcb
fmull
sbb
xchg
adcb
mov
pop
iret
inc
and
sbb
scas
push
fwait
pusha
fldenv
in
mov
add
into
fists
pusha
cwtl
push
sub
lds
xchg
repnz
mov
insb
in
cmc
add
ret
dec
dec
xchg
in
or
jmp
push
cmp
test
call
enter
or
sub
add
inc
add
not
jmp
aas
dec
mov
movsl
fadds
xor
testl
es
sub
inc
andb
bswap
adc
ret
and
mov
or
or
mov
sub
dec
adc
mov
adc
ror
pusha
lcall
leave
aaa
imul
inc
xor
pop
pop
push
or
push
mov
cld
inc
imul
subb
adc
faddl
mov
sub
je
imul
inc
insb
jns
lcall
enter
idiv
add
sbb
and
xor
adc
loope
into
inc
add
ss
jle
and
pusha
sbb
movsb
cmpsb
rol
ja
pop
es
xchg
mov
dec
bound
jmp
and
fmul
inc
ja
and
in
data16
clc
push
jb
fs
pusha
adcl
add
add
ja
rclb
imul
dec
sub
push
mov
data16
scas
incb
cltd
movl
out
jmp
loop
pop
add
push
out
cmp
or
in
and
test
sub
cmp
enter
lret
adc
out
js,pn
gs
shrb
and
fadd
or
sbb
and
scas
loopne
dec
je
lahf
pop
xor
out
loope
cmpsb
push
cmp
loopne
jbe
pop
xlat
adcb
jb
movsb
mov
fldcw
jo
jmp
add
inc
inc
leave
orl
jne
ret
inc
cmp
or
lods
mov
ja
sbb
rolb
aaa
inc
insl
sub
es
mov
sti
xor
cmp
nop
lret
ss
pop
faddl
and
xchg
insb
outsl
je
xor
and
aaa
cltd
push
mov
push
mov
mov
push
cmc
clc
fsubl
mov
add
out
rcrb
mov
add
aaa
or
pop
cwtl
xchg
xchg
inc
add
pop
sub
and
sbb
push
sub
mov
push
shrb
or
xchg
add
loopne
add
add
aam
cmp
add
cmp
pushf
andb
xchg
packssdw
pop
sbb
add
mov
fcom
stos
andb
add
js
cltd
insb
sbbb
xchg
scas
sti
pop
cmp
addl
lret
xor
mov
jne
pusha
popa
add
mov
adc
jnp
push
negl
lock
outsl
jg
lahf
push
inc
push
xchg
cmp
out
imul
jnp
jns
add
push
mov
mov
shlb
mov
loopne
cmc
scas
pusha
xchg
cmp
jnp
sahf
aaa
sub
push
fwait
push
cmp
lea
add
pop
mov
rol
arpl
scas
les
mov
push
dec
hlt
andps
xchg
and
scas
xchg
xor
shrb
data16
sbb
cli
mov
or
adc
lock
add
test
lods
mov
subb
es
push
std
mov
pop
mov
pop
add
mov
xchg
scas
inc
imul
es
fidivs
xchg
xor
movb
push
testb
or
std
xchg
lret
add
call
inc
add
lcall
out
pop
mov
push
pop
mov
pushf
lahf
or
stos
clc
fmuls
add
jnp
aam
mov
adc
sbbl
or
sub
inc
call
stos
adc
nop
dec
add
sub
aas
sub
aaa
pop
add
filds
mov
fwait
mov
nop
in
add
pop
outsb
adc
fimuls
and
mov
sahf
adc
les
sub
mov
add
stos
ret
fdivrp
stc
lahf
pusha
movsb
cmp
mov
push
cld
or
fadds
ja
pop
loopne
xchg
incb
ret
add
fwait
std
in
or
xchg
and
sub
add
push
push
sbb
insl
jne
or
aas
addl
test
jno
sub
xor
aam
add
pop
dec
aad
adc
nop
in
or
add
out
xchg
inc
ss
inc
dec
cli
or
sahf
cmp
inc
mov
es
js
lds
imulb
arpl
add
cmpsl
jmp
into
ret
aas
sbb
lret
jecxz
jno
mov
add
push
aas
clc
andb
add
sub
or
xchg
xlat
arpl
mov
orb
int
mov
adc
rcrb
dec
cmpsl
adc
mov
xchg
push
inc
fsqrt
lods
add
adc
push
mov
and
mov
and
gs
add
je
sub
sbb
movsb
or
xchg
negl
sahf
out
dec
and
add
push
cld
xor
pop
adc
insl
adc
push
or
push
xchg
inc
add
lds
pop
sbbl
shlb
aam
enter
lods
jmp
push
xchg
push
cmp
mov
enter
and
pop
scas
notb
mov
jnp
pmaxub
fidivs
out
into
sbb
hlt
jle
xor
and
xchg
into
in
push
nop
and
pop
data16
mov
adc
xor
jo
cld
or
cwtl
mov
push
out
pop
adc
ja
dec
add
sub
jmp
inc
dec
repnz
outsl
ret
loopne
inc
ret
sub
clc
add
xor
cmpl
mov
cs
in
mov
stc
scas
or
pop
pop
jno
mov
xchg
pushf
add
cvtps2pi
xlat
xchg
test
sbb
xchg
cmpsb
fadds
pop
sbb
sarl
scas
xchg
mov
xor
push
or
or
mov
pushf
adc
jg
dec
insl
shll
push
xchg
mov
sub
mov
xorb
sub
mov
mov
jo
mov
pop
fisttpll
fwait
sbb
add
mov
outsl
dec
cwtl
inc
pushf
and
jnp
cwtl
test
jo
jle
ds
inc
int
push
pop
call
cli
fnstcw
les
aas
call
add
jno
add
imul
xchg
mov
nop
enter
add
lahf
push
mov
add
ja
push
mov
adc
push
push
pop
pop
cmp
in
push
add
ret
sti
adc
mov
fldenv
sbb
and
and
test
mov
cmpsb
movsl
or
mov
push
xor
cli
cmpsl
inc
mov
add
and
cs
adc
add
pop
faddl
sbb
ret
pop
push
adc
aad
xchg
std
pop
cltd
fnstsw
pop
add
insl
call
add
popw
or
xchg
adc
orl
nop
aaa
add
or
fbld
fmull
xor
cmp
leave
add
adc
orb
push
cwtl
inc
add
outsb
addr16
arpl
ja
and
das
dec
pusha
nop
mov
pop
lea
rclb
push
mov
pop
rcll
mov
andb
aaa
add
movsb
adc
outsl
push
gs
and
ficompl
mov
push
mov
out
cmp
les
mov
loopne
adc
out
and
call
jmp
push
mov
sbb
mov
pushl
movsl
lahf
jns
xor
mov
jle
nop
or
mov
adc
add
sbb
sub
leave
int
pop
and
frstor
or
cmc
jne
add
insb
mov
or
xchg
or
addr16
dec
mov
cli
sub
dec
outsl
push
scas
roll
or
shr
push
movsb
jb
add
push
xor
xchg
in
pop
sbb
mov
imul
jno
mov
push
add
jae
js
loopne
adc
ja
bswap
testl
fimuls
mov
pop
sub
add
and
mov
movsl
inc
inc
mov
add
lahf
push
inc
jmp
or
sub
xor
cmp
jp
cwtl
mov
push
push
shlb
mov
jmp
push
add
xchg
stc
gs
push
lock
pop
sbb
xor
iret
jle
add
sub
lods
inc
negl
lret
or
cmp
mov
pop
inc
mov
scas
std
push
and
js
sbb
add
adc
mov
mov
mov
xor
jmp
fdivs
sub
ljmp
loopne
incl
sbb
and
dec
hlt
pusha
fisttps
sbb
xchg
jo
pushf
int3
addb
adc
add
sbb
adc
fistps
shlb
rorl
add
ja
sbb
or
ja
add
fs
paddq
dec
hlt
loop
in
push
jp
popf
jne
or
rcl
andb
xorb
cmp
or
push
mov
pop
fcmovne
aam
ds
dec
loopne
dec
cli
popf
stos
adc
leave
mov
fisubl
inc
addr16
addb
push
fsubp
pushf
sbb
in
rcr
jmp
out
sub
in
in
ret
mov
icebp
xchg
mov
jmp
pop
add
adc
dec
fsubrs
in
dec
sete
add
mov
pop
cmp
add
sub
clc
lea
jmp
jne
add
push
inc
mov
jo
mov
insb
ss
call
add
push
stos
or
add
mov
xchg
int3
fcompl
leave
in
js
mov
add
scas
cmp
and
mov
add
sbbb
mov
mov
inc
js
mov
inc
add
ret
mov
cmp
lods
mov
fsub
pusha
jnp
add
add
or
cli
add
addb
test
mov
fcmovnb
enter
jne
pop
pop
inc
pop
xchg
sbb
in
mov
jl
clc
je
fsubl
cwtl
lea
sbb
dec
and
test
ret
out
imul
loope
pusha
je
add
sbb
ret
scas
dec
stos
popa
cmpsl
push
loopne
xor
hlt
push
add
lds
pop
add
js
insb
push
clc
pusha
in
cli
scas
mov
mov
subb
dec
std
adc
test
rcrb
aad
cli
add
stos
cs
add
xchg
gs
fs
js
jno
bound
dec
push
mov
popa
insb
mov
adc
add
call
add
or
pop
lds
or
cmpb
hlt
loopne
xchg
cmpsl
add
mov
inc
add
mov
loopne
add
cmp
push
xor
inc
sub
inc
aas
jle
je
fisubs
adc
mov
xor
ret
out
add
movsl
xchg
sbb
clc
push
jmp
jle
pushf
and
lahf
sahf
cltd
mov
es
jl,pt
out
je
mov
add
nop
rclb
mov
arpl
inc
jns
stc
or
subb
ljmp
mov
or
mov
cmp
in
nop
scas
xchg
and
mov
mov
cmp
in
push
adc
pop
add
add
int
cmp
push
cmp
push
loop
rcl
mov
js
in
adc
testb
movsl
push
out
inc
add
in
or
add
mov
out
pop
cli
jne
or
scas
xchg
lock
add
push
sbb
add
mov
sub
or
popf
lcall
data16
pop
out
aas
sbb
mov
nop
add
movsl
or
bound
or
dec
add
sbb
and
and
and
das
lods
adc
pop
mov
scas
rclb
add
pushf
cs
dec
mov
cmp
jmp
push
mov
scas
or
fcoml
mov
insb
addr16
mov
and
dec
and
cmp
and
push
popf
negb
test
cmp
jae
push
fs
enter
xchg
mov
pusha
lcall
mov
testb
xchg
jo
jmp
xchg
inc
in
sbb
ret
pop
xchg
mov
in
std
add
dec
or
pop
pop
sar
cmp
push
or
mov
jle
mov
roll
add
xchg
fists
add
cmpsl
adc
mov
or
movsb
outsb
cmp
push
adc
daa
aad
xor
jnp
movsb
in
push
int3
and
inc
add
or
jnp
add
fnstcw
test
mov
data16
jg
add
jmp
xchg
faddl
mov
loope
and
repz
jns
add
xor
add
mov
adcb
adc
insb
addr16
add
jnp
mov
js
and
arpl
clc
and
xor
or
inc
add
loopne
and
mov
xchg
out
pushf
push
mov
scas
es
btc
cmpsb
pop
add
sbb
rcrl
mov
xor
nop
jbe
adcb
popa
push
push
push
inc
lods
subb
js
add
mov
cmc
jp
andb
pop
or
ret
shll
or
icebp
pop
and
and
xchg
add
or
test
in
xorb
mov
iret
shrl
push
imul
into
insl
xchg
rcrl
out
addr16
cmpsl
mov
lods
cwtl
push
xchg
xchg
in
enter
nop
sub
jnp
pop
loop
push
lcall
jmp
data16
insl
std
adc
mov
xchg
test
add
stos
into
stc
mov
div
shlb
iret
fsubrl
fwait
out
dec
ss
push
push
pop
stos
sub
inc
std
xchg
sub
push
and
sbb
std
mov
lahf
and
push
mov
mov
sub
jg
or
pop
xorl
push
insb
addb
stos
repnz
xor
fsubrl
into
clc
subl
shr
mov
fs
inc
add
popf
add
push
xchg
mov
jg
pop
push
imul
add
push
sub
cmp
arpl
in
mov
or
dec
jae
sub
in
mov
ret
mov
or
inc
sbbb
pop
xchg
or
xorl
sub
scas
mov
cmp
mov
sbb
lods
mov
addr16
ja
ret
fadd
push
imul
rorb
bound
add
test
xor
daa
mov
shrb
push
loopne
add
inc
or
insl
or
lock
xor
mov
mov
lahf
mov
mov
jnp
or
scas
cmp
stos
xchg
fmuls
xor
push
jo
jb
addl
pop
push
bound
dec
cmp
adc
and
dec
sbb
add
enter
iret
repz
and
or
icebp
sbb
addb
jo
jnp
cs
sub
cltd
xchg
fldz
and
add
and
dec
addb
outsb
mov
sbb
in
and
cmp
gs
lret
lock
out
mov
shl
ss
rcpps
les
arpl
test
push
mov
xor
dec
jl
add
decb
xor
jp
insb
add
movsl
and
add
hlt
cmp
cltd
mov
out
pop
and
cmpsb
cwtl
add
popf
loop
or
xchg
jns
inc
in
and
mov
push
cli
movsb
adc
outsb
addr16
scas
jmp
add
loope
mov
mov
push
stos
xor
sub
cwtl
outsl
add
mov
xchg
aas
ja,pn
inc
inc
jl
cli
rcrl
sbb
inc
xchg
mov
mov
and
lcall
faddl
insb
sti
xchg
inc
cli
in
dec
cmp
test
ret
add
sub
mov
jae
pop
ds
sbb
loopne
mov
lar
pop
dec
addb
insl
sub
call
lea
sbb
adc
pop
adc
xchg
out
sbb
daa
jae
test
add
mov
daa
outsb
add
add
xchg
fincstp
push
xchg
add
sub
add
dec
fs
je
sbb
lds
sbbl
pop
mov
jne
add
fnstenv
data16
pop
cli
pop
push
frstor
int3
and
out
add
insb
sbb
sti
add
xchg
xor
mov
outsl
add
dec
cmpsb
and
mov
js
fwait
movsb
out
aad
push
faddl
iret
xor
pop
add
add
push
xor
mov
ja
sbb
mov
and
push
adc
add
int3
add
ljmp
pusha
add
add
add
or
add
adc
adc
add
add
add
add
add
add
add
add
sbb
add
add
sbbb
add
data16
data16
data16
data16
data16
data16
data16
data16
add
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
xchg
pop
pop
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
data16
add
xchg
pop
pop
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
dec
leave
test
data16
add
xchg
pop
pop
int3
leave
lret
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
leave
lret
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
shrb
push
push
data16
add
cwtl
addr16
leave
lret
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
shrb
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
jmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
std
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
xlat
mov
shrb
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
jmp
loop
std
xlat
mov
xlat
mov
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
test
test
test
test
std
shrb
shrb
lret
push
push
data16
add
cwtl
addr16
aad
jmp
jmp
sarl
jp
sarl
jle
mov
test
test
mov
leave
mov
mov
vpunpckldq
std
vpcmpeqd
xchg
movsl
movsl
xchg
xchg
hlt
lret
movsl
std
shrb
xlat
mov
lret
push
push
data16
add
movsl
jae
aad
aad
jmp
mov
mov
test
mov
mov
mov
mov
xchg
mov
mov
je
cmc
je
cmc
outsb
sar
mov
cmpsb
adcb
jne
cmpsb
jb
shrb
xlat
mov
lret
pop
pop
data16
add
movsl
jae
aad
aad
jmp
ret
xchg
xchg
mov
mov
mov
mov
xchg
cmpsb
adcb
xchg
cmpsb
adcb
mov
test
mov
xorl
sar
je
cmc
mov
mov
mov
jb
xlat
mov
shrb
mov
xchg
pop
pop
data16
add
movsl
jae
aad
aad
repz
xchg
mov
adcb
mov
jne
adcb
xchg
cmpsb
adcb
leave
mov
jns
stc
jp
jp
jp
incl
jmp
test
xchg
cwtl
mov
adcb
mov
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
xchg
test
adcb
xchg
mov
mov
push
js
cmpsb
adcb
cmpsb
xchg
test
cwtl
mov
mov
jnp
jmp
in
xorl
xchg
movsl
cmpsb
adcb
xchg
fisubl
std
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
cwtl
mov
test
test
addr16
push
push
mov
push
mov
push
js
mov
orl
lcall
stc
test
stc
test
stc
sbb
xorl
test
test
xlat
mov
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
cmpsl
js
aad
aad
repz
cwtl
mov
xchg
lods
mov
mov
push
mov
push
mov
cmpsb
orl
mov
jmp
fptan
test
stc
test
stc
test
stc
test
stc
jp
jns
stc
mov
fisubl
std
xlat
mov
xlat
mov
mov
xchg
pop
pop
data16
add
mov
je
aad
std
repz
cwtl
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jnp
jmp
fptan
mov
incb
stc
xorl
mov
cmpsb
js
xlat
mov
xlat
mov
xlat
mov
mov
cwtl
data16
add
mov
je
aad
std
repz
cwtl
mov
mov
mov
mov
ja
bound
jae
les
les
les
les
jno
shll
shll
shll
shll
xlat
sbb
sbb
jbe
xlat
sbbl
mov
xlat
mov
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
aad
std
repz
test
jae
les
les
les
les
lea
cmp
inc
arpl
dec
bound
mov
gs
shll
shll
sarl
jmp
fptan
mov
incb
xlat
je
enter
jae
les
mov
xlat
mov
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
out
std
repz
test
imul
lret
sub
push
and
arpl
dec
ja
add
xchg
aad
xchg
aad
xchg
aad
xchg
fistpl
je
cmc
je
cmc
test
stc
test
stc
jbe
out
popf
shrl
lret
imul
std
xlat
mov
ret
std
mov
cwtl
data16
add
mov
je
out
std
cld
cli
std
repz
shll
shll
rcrl
ret
dec
and
jo
pop
mov
fistpl
fistpl
fistpl
fistpl
fistpl
ljmp
test
stc
test
stc
test
stc
fs
bound
gs
rcr
test
loop
loop
cli
lret
mov
cwtl
data16
add
mov
je
out
std
cld
cli
std
cld
cli
jbe
xlat
pop
xchg
fistpl
fistpl
pop
mov
dec
sub
xchg
mov
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
cmpsl
ljmp
jns
stc
pop
mov
pop
cmpsl
ljmp
pop
xchg
fistpl
fcmovnu
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
imul
xchg
out
inc
arpl
cmp
cmp
pop
xchg
out
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
mov
test
stc
pop
mov
pop
cmpsl
ljmp
dec
xchg
out
xchg
out
xchg
fcmovnu
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
imul
xchg
clc
sub
push
sub
push
sub
jo
push
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
mov
vpunpckldq
std
push
test
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
inc
xchg
clc
dec
xchg
out
test
loop
loop
cli
lret
test
cwtl
data16
add
ret
out
in
cld
cli
std
cld
cli
sub
cmpsl
or
sub
push
sub
push
sub
xchg
aaa
test
daa
mov
xor
and
and
daa
push
out
pusha
in
pusha
in
push
out
push
out
push
out
push
out
dec
fldenv
dec
fstps
cmp
loop
cli
lret
test
movsl
jae
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
sub
cltd
add
adc
push
sub
push
daa
push
or
adc
mov
xor
and
and
daa
push
out
push
out
push
out
push
out
push
out
dec
fldenv
dec
fstps
enter
loop
loop
cli
lret
test
movsl
jae
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
sub
cltd
add
daa
xor
xor
xor
daa
push
and
sbb
sbb
sbb
fldenv
push
out
push
out
push
out
push
out
push
out
push
out
push
out
dec
fstps
ror
fwait
cmp
loop
cli
lret
test
cmpsl
js
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
dec
ja
daa
push
out
push
out
dec
ja
inc
arpl
xchg
jae
ss
cmp
cs
in
dec
fldenv
dec
fldenv
push
out
pusha
in
cmp
xchg
clc
inc
xchg
clc
inc
xchg
clc
cmp
daa
push
out
push
out
dec
fstps
cmp
loop
cli
lret
test
cmpsl
js
data16
add
leave
fwait
and
in
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
xor
sbb
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
vpunpckldq
std
jecxz
sti
lcall
vmulpd
cs
in
pusha
in
cmpsl
xchg
jmp
cli
lret
test
cmpsl
js
data16
add
fisubl
std
cld
cli
std
cld
cli
push
xchg
xor
xor
cs
in
inc
arpl
outsb
aam
jae
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
aam
std
cld
cli
jecxz
sti
vpunpckldq
std
pop
mov
pop
mov
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
xor
xor
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
pop
mov
pop
mov
vpunpckldq
std
stos
loop
jns
stc
vpunpckldq
std
pop
mov
pop
mov
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
push
xchg
xor
xor
xor
daa
push
xor
ss
cmp
inc
xchg
clc
dec
mov
push
test
pop
mov
pop
mov
vpunpckldq
std
vpunpckldq
std
pop
mov
pop
mov
push
test
push
test
dec
mov
jmp
cli
lret
test
cmpsl
js
data16
add
fsubrs
std
cld
cli
std
cld
cli
xchg
std
xor
xor
xor
xor
xor
xor
ss
cmp
inc
xchg
clc
inc
xchg
clc
dec
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
push
test
dec
mov
lret
cmpsl
xchg
jmp
cli
lret
mov
data16
add
fsubrs
std
cld
cli
std
cld
cli
nop
mov
xor
xor
xor
xor
xor
ss
cmp
inc
mov
inc
xchg
clc
dec
mov
push
test
pop
mov
pop
mov
pop
mov
fs
je
stc
je
stc
je
stc
nop
mov
loop
jmp
cli
lret
mov
data16
add
fsubrs
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
fucom
sti
repnz
jmp
repz
repz
repz
jmp
jmp
jmp
jmp
sti
pushf
pushf
lods
cmpb
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
repz
jmp
jmp
jmp
cli
lret
pushf
pushf
lods
cmpb
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
repz
mov
std
mov
std
mov
std
test
std
test
std
test
jmp
data16
add
in
mov
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
orb
mov
mov
jge
jp
cwtl
data16
add
jmp
nop
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
repz
mov
cmc
popl
cmc
popl
cmc
popl
fnstenv
fnstenv
mov
data16
add
mov
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
js
test
std
test
std
test
std
test
aam
dec
data16
jmp
nop
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
repz
shrb
mov
std
test
aam
dec
data16
add
add
xchg
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
js
std
xlat
mov
mov
aam
dec
data16
add
test
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
repz
xlat
mov
mov
data16
add
xchg
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
mov
je
loop
fisubl
add
test
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
std
cld
cli
repnz
jmp
in
jmp
in
jmp
test
mov
data16
add
add
xchg
std
xlat
mov
xlat
mov
xlat
mov
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
hlt
lret
movsl
call
cmpsl
call
cmpsl
in
mov
mov
mov
aad
cwtl
aad
cwtl
aad
cwtl
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
lret
cmpsl
xchg
mov
je
xchg
xchg
add
incl
add
incl
add
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
xor
add
add
add
