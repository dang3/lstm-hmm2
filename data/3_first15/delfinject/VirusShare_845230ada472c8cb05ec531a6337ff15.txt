ss
mov
pop
outsb
cmpsl
in
mov
adc
test
iret
or
xor
aad
cld
push
adc
pushf
je
pop
adc
out
fwait
add
adc
outsl
bound
aad
into
mov
cmp
adc
dec
mov
sbb
push
and
jne
push
cmp
daa
xchg
lods
cmp
rcl
stos
subl
mov
leave
in
cltd
loop
xor
mov
insb
mov
add
int
mov
mov
mov
adc
sbb
ds
shll
and
ss
loope
push
jo
jae
dec
and
inc
and
adc
lret
loop
cmpl
push
sbb
cli
fldt
dec
xchg
add
aaa
rol
add
mov
lea
jae
jns
faddl
daa
loop
mov
lods
cld
das
add
fildll
sti
and
bound
cmp
in
testb
int
sbb
cltd
jle
lods
inc
je
int3
pop
out
sub
int3
and
pusha
mov
sbb
bound
jg
pusha
aad
xchg
bound
add
in
arpl
cmp
dec
jg
cmp
mov
jmp
out
mov
sahf
iret
pop
insb
in
inc
inc
mov
subb
out
inc
jecxz
bound
ljmp
mov
cmpb
data16
aam
jg
or
call
add
inc
or
out
cmp
notb
mov
mov
icebp
sahf
outsl
jge
pop
outsb
hlt
cli
push
in
add
pushf
lods
mov
dec
sub
fstps
gs
mov
xchg
push
xchg
cld
in
insb
data16
scas
jg
and
jle
add
rcrl
pop
idivl
inc
xchg
or
dec
jle
inc
sub
iret
imull
test
pop
xorl
fstp
incb
pop
pop
stc
out
dec
push
cmp
mov
das
cmp
int3
lcall
lcall
sub
cmpsl
pop
sub
in
xor
pop
lahf
jmp
mov
dec
jns
orl
or
jb
test
orb
leave
std
fsub
cmp
mov
sub
inc
cmc
add
negl
lret
jmp
imul
push
subb
sbb
cmp
mov
push
mov
popa
sbb
aaa
mov
stos
dec
in
test
in
adc
mov
sbb
gs
cltd
jbe
ljmp
ja
xor
imul
das
in
mov
and
adcl
lods
mov
pushf
jae
mov
test
enter
xor
sub
out
stos
into
sbb
pushf
mulps
xchg
cmp
sahf
mov
pop
mov
lods
xchg
popa
cmp
dec
xor
adc
xchg
jbe
bound
push
loop
sahf
xchg
or
jp
jne
scas
pop
cltd
pop
out
mov
cld
mov
adc
addr16
repnz
mov
loope
ffree
mov
test
sbb
xchg
mov
push
in
cmp
mov
mov
mov
int3
js
lods
xchg
notb
adc
sbb
fnstenv
jne
pop
pop
mov
xor
add
call
xor
mov
rcll
xchg
and
mov
cmp
out
and
mov
push
cld
mov
cmpsl
leave
call
in
xor
sub
cmpb
push
fs
das
in
push
cmp
rcrb
cli
xchg
push
sti
imul
mov
cld
pop
stc
daa
std
movsb
jno
out
scas
popa
add
sbb
je
mov
or
inc
stos
jbe
test
add
aaa
cwtl
aaa
sbb
inc
incb
mov
arpl
gs
js
lock
nop
inc
enter
rcr
pop
sbb
insb
int3
pop
aam
cld
sarl
mov
inc
pop
xor
mov
cmp
fnsave
out
je
dec
ret
sub
cli
nop
mov
xor
pop
fwait
lods
int3
clc
push
shl
mov
push
sub
stos
mov
stc
ljmp
push
cmp
cli
sarb
jl
push
pop
js
pop
pop
cltd
cmp
pop
out
das
jmp
sub
mov
push
jne
pop
daa
mov
call
push
fmul
fimuls
sbb
fwait
dec
popf
inc
and
outsb
jg
push
insb
and
imul
int
pop
lcall
mov
sbb
nop
scas
mov
inc
into
ret
lods
ficompl
or
push
mov
stc
call
pop
jb
jb
sarl
push
testl
aam
jg
pop
dec
test
lods
sahf
imul
fcmovne
orb
lcall
sub
add
decl
fidivs
mov
outsl
dec
fstpl
stc
rcrb
lret
in
test
sub
js
or
adc
movsl
addb
into
out
stos
xlat
jne
or
push
fldenv
push
lret
push
cmc
jmp
mov
imul
sub
mov
fiaddl
xor
bound
push
cmp
pop
inc
push
lret
js
cmpsb
xchg
push
movsl
dec
sub
int
aad
fs
xchg
push
or
jp
dec
cmc
pop
xor
aad
sub
andb
test
jne
or
push
in
imull
rcrb
call
stos
in
xchg
jo
repz
lahf
mov
xchg
dec
rclb
lret
jle
addr16
ret
xchg
int3
mov
pop
or
xchg
mov
sbb
mov
dec
add
aaa
mov
push
idiv
subl
mov
mov
or
out
cmp
imul
enter
add
stos
cmp
stos
rcll
fnstenv
adc
mov
pop
jmp
pop
and
je
push
sbb
sbb
sub
repz
xor
adc
mov
xor
cmp
or
sbb
loope
cmp
out
dec
scas
xchg
push
mov
mov
loope
aad
mov
shlb
mov
jae
pop
out
imul
in
into
sbb
popl
and
cli
cmpsb
sti
cmp
arpl
je
xor
inc
inc
jns
lds
ja
cli
cmpsl
cmc
jp
es
shl
xchg
jge
repz
es
sub
pop
fsub
inc
xchg
cld
mov
xor
scas
movl
popf
pushf
cmpsl
stos
js
lock
adc
and
test
dec
dec
cltd
jae
pusha
xchg
and
out
cli
sbb
jp
scas
cmpsb
aam
pusha
mov
add
add
hlt
shrb
jmp
hlt
test
jbe,pt
outsb
je
xor
cmp
es
mov
rcll
sbb
or
pop
fsubl
icebp
mov
cmp
repnz
push
cmp
inc
mov
sbbb
or
out
sbb
cmp
arpl
insb
pop
mov
sub
call
xlat
add
pop
pushf
imul
pop
mov
cli
inc
inc
adc
mov
icebp
add
pop
and
push
cmp
xchg
or
clc
popa
nop
fisttps
frstor
jge
cmpsl
dec
jle
push
push
lcall
stos
sti
adc
mov
push
push
in
fistpl
ljmp
daa
pop
sub
ja
mov
dec
or
test
fwait
cmp
mov
std
fadd
jb
nop
sub
mov
inc
mov
sti
test
subl
insb
loop
insb
xor
jb
push
cmp
insl
inc
jo
nop
pop
push
cli
push
xor
pop
jmp
push
xchg
lea
mov
add
push
fimuls
sub
ss
pop
sbb
into
cs
out
or
ja
ret
pop
lock
setns
std
jg
mov
jmp
jmp
aas
les
in
je
fwait
dec
shrb
inc
aam
sub
push
lahf
stc
shll
lods
dec
sub
push
cmp
pop
cwtl
les
into
insb
aad
pop
dec
movb
sbb
sbb
enter
aad
cmp
stc
xlat
js
ja
int
pop
jmp
pop
xor
mov
jb
push
mov
sbb
jmp
mov
jge
and
jl
inc
adc
mov
dec
stos
call
and
fldz
addr16
popf
pop
fwait
loope
jmp
je
pop
int
es
jmp
mov
cltd
or
leave
stos
popf
pop
inc
pusha
pop
fwait
mov
sbb
pop
pusha
cmpsb
call
dec
adc
inc
xor
dec
dec
les
xchg
ljmp
les
push
xchg
into
and
dec
push
insb
lahf
sbb
or
xor
jp
fdivs
gs
outsl
leave
sub
inc
inc
imul
ss
fld
push
aas
ds
rol
or
add
mov
jae
mov
pop
jbe
xchg
and
fdivrl
push
pop
sbb
lds
addr16
jnp
xor
push
mov
fdivrs
hlt
inc
pop
mov
xlat
jo
dec
fcoms
out
push
cmp
lds
push
and
or
jmp
dec
sbb
mov
pushf
jnp
stos
loope
or
dec
or
cmp
shll
sub
pop
push
mov
dec
xchg
jecxz
and
arpl
cmpsl
lods
adc
pop
iret
je
dec
mov
jne
pop
jne
sar
mov
push
add
shll
lcall
ficomps
mov
cmp
adc
jmp
mov
cmp
adc
jmp
mov
cmp
adc
jmp
mov
cmp
adc
jmp
mov
mov
inc
fadds
sti
ret
mov
or
ret
not
xchg
notb
jecxz
outsb
xor
lock
das
ret
jecxz
arpl
enter
shlb
jo
les
and
pop
fsub
stos
and
ret
mov
out
inc
xor
cs
aaa
movsb
push
jg
call
cld
adc
mov
iret
xchg
sbb
lret
gs
or
out
xor
sub
inc
ja
dec
fildll
out
mov
dec
mov
push
data16
pop
nop
cwtl
xchg
and
pop
push
sar
pop
mov
jg
jle
or
pop
and
xor
in
mov
nop
rcll
mov
sar
jmp
mov
aam
popa
pushf
es
or
cmp
leave
cld
sub
sahf
lods
add
movl
out
mov
test
xchg
ljmp
pop
ds
inc
push
hlt
mov
sbb
cmpsb
repz
adc
movsl
inc
stos
and
adc
shll
jns
repz
pop
inc
loop
shl
and
or
out
inc
ljmp
fdiv
shll
adc
mov
icebp
lock
mov
and
arpl
sub
mov
test
call
or
xlat
popa
int
push
xchg
xchg
imul
add
test
xchg
xor
push
jmp
jle
xor
data16
and
cmp
push
popf
into
push
inc
leave
cmp
test
push
pop
sub
imul
sbbb
xor
inc
ss
and
lsl
push
ljmp
inc
xor
dec
or
mov
stos
sar
push
and
test
aas
daa
int3
test
add
mov
inc
push
and
pop
mov
sub
insb
xor
push
int
outsl
in
xor
sub
fdivrl
out
es
push
pslld
lret
or
and
fwait
jnp
jmp
pop
or
lcall
ljmp
sahf
jbe
bound
or
fistpl
sbb
scas
push
mov
rorb
sbb
inc
movsl
and
lea
inc
and
jb
rcrb
psllw
sbb
sub
or
mov
add
mov
mov
test
adc
push
arpl
scas
dec
jnp
jbe
cmp
fnstenv
dec
stos
adc
pop
mov
lea
call
pop
xchg
xor
lock
in
scas
int
in
push
mov
mov
jmp
jo
daa
jno
pop
inc
jmp
sbb
fistpll
mov
xchg
ret
dec
jb
jne
add
mov
mov
xor
je
pusha
ds
xchg
adc
jno
mov
dec
mov
sbb
or
test
lods
pop
jge
mov
add
aaa
popf
call
jmp
aam
and
mov
in
arpl
divb
frstor
sbb
xchg
mov
les
mov
ret
inc
mov
jecxz
hlt
adc
mov
fcomps
dec
sbb
iret
fdivrl
lods
xor
popf
push
ret
rorb
xchg
jo
adc
jp
xor
test
or
outsl
push
enter
fyl2x
or
cld
sbb
inc
push
jns
inc
pop
fcomip
mov
push
in
aaa
clc
cmp
mov
adc
ljmp
fldl
and
rol
xlat
lcall
jno
std
bound
xchg
not
or
out
jns
push
roll
fbld
pop
jne
mov
mov
adc
xchg
lods
xchg
xor
jb
mov
stos
jmp
repnz
jg
jo
xor
and
adcb
mov
sarb
sysret
jge
into
mov
daa
in
fidivs
jecxz
das
shll
and
sbb
and
rcrb
mov
pop
sbb
pop
or
cmp
inc
es
out
pop
inc
gs
js
add
das
inc
pusha
or
into
scas
jp
insl
push
lods
gs
in
and
scas
bnd
cmp
cmpsb
adc
adc
cmp
xor
xcrypt-cfb
cmpsl
and
jecxz
pop
cmpsl
call
sub
in
insl
daa
sub
jl
imul
jns
mov
jbe
or
jns
dec
sahf
es
call
and
iret
sub
xchg
repnz
fildl
xor
lahf
mov
pusha
mov
dec
roll
mov
add
inc
jp
push
test
pop
push
or
push
xor
ja
and
add
ret
push
imull
pop
mov
pop
and
sub
xchg
xchg
cmp
sub
ljmp
xor
loop
out
fs
out
jne
daa
inc
fstps
jb
jl
xorw
mov
pop
sti
cmp
les
push
ret
movsb
xchg
inc
cmp
popa
jg
push
aas
loope
stc
mov
cmp
sub
jo
adc
mov
push
outsb
xlat
sub
pop
scas
pop
scas
mov
rcrl
add
stos
sub
mov
push
jns
movsl
lds
es
inc
mov
pop
push
xchg
jge
mov
shl
pop
inc
jbe
sbb
ljmp
sbb
push
aas
cmc
mov
mov
mov
cld
shll
mov
ret
push
pop
sub
jg
dec
mov
mov
psrld
xor
xchg
mov
mov
aam
decb
pop
subb
pop
shrb
popa
fisubs
cmp
or
xchg
dec
mov
sbb
cltd
sbb
adc
xor
pop
jbe
sub
sub
outsl
jb
roll
repz
or
insb
out
adc
rclb
fdivrl
and
mov
mov
push
stos
mov
jl
adc
js
push
flds
jnp
dec
mov
dec
push
je
scas
xchg
pop
dec
xor
xlat
bound
popf
push
subb
xchg
push
out
mov
repnz
cmp
push
shlb
mov
scas
add
sbb
fmul
sub
pop
sahf
outsb
xlat
ret
les
gs
or
jo
mov
repnz
pop
sub
outsl
and
inc
fldcw
cmp
fiadds
jle
and
adc
and
sti
sbb
stc
data16
fcmovnu
lcall
add
leave
sbb
ja
repz
je
divl
mov
jno
outsb
daa
lods
popf
pop
xor
lock
push
cmp
dec
test
adc
cli
clc
adc
mov
int3
sbb
mov
lret
int3
and
stc
pop
test
neg
jge
popa
jb
test
das
pop
stc
test
xchg
jnp
int
imul
sarb
fptan
in
je
outsb
and
sub
mov
out
pop
mov
pusha
push
stos
repz
jbe
jmp
lret
rcll
stos
pop
mov
insb
mov
repnz
inc
mov
mov
inc
fisttps
stos
add
pop
push
adc
repnz
adc
dec
ret
push
inc
jne
mov
rcrb
push
pop
dec
rolb
dec
sub
scas
int
test
mov
xor
movsl
test
pop
push
or
loope
cmp
bound
inc
es
cmpsb
xor
mov
nop
fs
aad
pop
mov
lret
fisubs
fucom
lret
jbe
shl
push
jae
cltd
and
fsubr
sub
cmp
std
stos
pop
cmc
gs
scas
mov
jnp
lahf
add
sbbl
addr16
cmp
je
and
xchg
mov
jge
xor
mov
dec
mov
add
pop
gs
cli
out
movsb
inc
cli
imul
cmpsl
std
popf
sbb
sub
nop
xor
addl
stc
cltd
js
adc
test
xor
xor
sbb
jns
inc
or
daa
std
sub
add
popa
adc
xor
xchg
call
fisubrs
std
xor
rorb
or
lds
and
mov
lods
fs
pop
nop
xchg
sti
fwait
jb
cmp
and
sub
mov
push
xor
pop
test
mov
sarl
into
dec
or
and
mov
shrb
mov
popf
jns
pop
push
push
mov
pop
shll
stos
jb
daa
fisttpl
xor
mov
jno
subl
sbb
add
sbb
xchg
sub
mov
adc
stos
in
add
scas
test
sub
xchg
mov
mov
call
mov
inc
mov
dec
mov
jns
stc
outsl
test
das
stos
data16
sbb
dec
data16
mov
mov
mov
in
push
mov
mov
lods
sarb
out
cs
inc
shrb
pop
jmp
inc
lods
les
sub
aam
inc
jmp
scas
aam
daa
xchg
incl
dec
dec
aas
mov
xor
jns
xlat
pop
or
inc
lcall
xor
cmp
push
test
test
mov
mov
into
out
add
call
mov
jbe
fwait
icebp
mov
aad
push
lahf
mov
into
in
mov
dec
fisttpl
sbb
add
es
fwait
cmp
push
dec
cmp
sub
movsb
rcr
xor
jae
xchg
cmpsl
xchg
in
int
scas
lea
mov
imul
jg
lds
jne
cmc
xor
sti
out
lea
cmc
mov
adc
fs
idiv
jns
imul
lea
jecxz
loope
pop
xchg
jmp
inc
in
js
scas
adc
in
dec
fdivl
push
daa
pushf
adc
aaa
xchg
xor
shl
add
mov
inc
shlb
dec
movsb
cmc
pusha
fadd
lahf
lea
mov
add
cmpsl
mov
and
pop
push
and
push
rorl
xchg
cmp
aaa
push
fsubrl
and
mov
es
dec
and
adcl
or
dec
loop
add
test
rclb
dec
push
sbb
mov
dec
jge
testb
inc
push
xchg
dec
pop
and
xchg
lret
ret
or
push
xchg
pop
adc
jg
out
imul
pop
cmp
pop
insl
pop
jno
push
fidivl
fcompl
jb
mov
inc
xchg
mov
sub
push
loope
cwtl
scas
cli
xor
mov
mov
xor
push
mov
mov
divb
pop
gs
mov
ds
sub
sub
pop
jmp
loopne
sub
jo
mov
decl
loopne
call
mov
fwait
and
xor
scas
mov
sub
mov
add
lahf
add
movsl
test
out
enter
push
stos
lea
int
in
mov
shrl
lcall
outsb
push
iret
push
daa
sbb
mov
sub
int3
push
shld
test
mov
pop
pop
int3
xor
xchg
ds
call
mov
out
mov
scas
xchg
subl
aam
cltd
insl
popa
sbb
cld
cltd
aaa
insl
xchg
mov
add
dec
fimuls
cld
inc
mov
movntq
adc
xchg
ss
les
fildll
push
fs
lret
clc
pop
shl
out
shll
or
negl
cmp
div
sub
cltd
add
or
and
or
ret
popl
rcrl
iret
pop
xlat
cmpsl
lret
mov
incl
push
fs
xchg
mov
dec
scas
jno
test
jl
dec
jo
in
inc
fcompl
lods
je
fists
mov
lds
ljmp
xchg
outsl
mov
mov
mov
add
lret
xor
pop
xor
xorb
mov
test
lock
inc
mov
into
inc
inc
hlt
int
inc
int
push
mov
mov
push
sbb
mov
add
cmp
mov
pop
push
aaa
enter
cmp
lods
outsl
movsl
daa
leave
pusha
insb
inc
lcall
shrl
rol
inc
pop
sub
xchg
pop
jno
push
gs
add
pop
or
or
or
mov
loope
and
les
push
cli
pusha
mov
pop
aas
dec
dec
or
into
push
cli
ss
clc
xor
ret
out
pushf
mov
jae
shrl
repz
mov
loopne
add
lret
shl
stc
out
and
loopne
repz
xor
cs
call
xor
data16
lock
adc
jmp
mov
addr16
cpuid
pop
and
xchg
pop
jno
xchg
jg
or
addl
pushf
dec
jecxz
jo
addl
sbb
push
dec
aas
jle
push
mov
stos
repnz
enter
test
icebp
mov
push
icebp
inc
pushf
into
lea
cmpsl
stc
fldt
jbe
xchg
imul
sub
mov
mov
hlt
mov
push
sub
add
je
ss
loope
movsl
inc
and
orl
add
push
out
hlt
insl
pop
out
dec
dec
insb
mov
imul
sub
jae
or
jl
jmp
push
jg
mov
insb
hlt
lods
imul
cs
inc
ret
fdivrl
loope
sbb
or
cmpsl
adc
daa
mov
push
xor
inc
adc
mov
jge
ljmp
in
lock
push
mov
js
push
dec
lret
sub
mov
jae
shrl
push
xor
loope
mov
jge
add
jno
mov
adc
and
lcall
mov
adc
mov
mov
lcall
sub
fimuls
por
lods
jnp
push
dec
sub
xor
dec
pop
add
add
push
sub
jg
inc
dec
call
leave
in
inc
cmc
pop
fucomi
and
pop
fwait
test
mov
push
and
dec
call
lock
lahf
push
xchg
adc
nop
repnz
inc
adc
push
clc
aam
data16
dec
movb
fidivs
leave
dec
cmp
jbe
scas
mov
mov
jbe
inc
adc
mov
mov
mov
test
out
add
jmp
and
shr
shll
push
push
add
lds
cmp
mov
scas
sti
mov
in
inc
std
cmp
call
fists
in
and
add
jecxz
mov
enter
hlt
jno
mov
lcall
cltd
andl
lret
mov
sub
xor
sbb
nopl
imul
pop
xchg
jo
xchg
add
jnp
xchg
xchg
stc
test
scas
movsb
mov
daa
bound
xor
fnstenv
int
mov
mov
or
cmp
clc
in
bound
int
sbb
repz
std
mov
sub
dec
xor
jle
call
in
adc
mov
orb
dec
mov
stos
in
push
pop
jmp
jp
or
shrl
mov
dec
jns
jp
xor
pop
push
into
imul
mov
es
push
and
add
mov
test
pop
adc
and
clc
int
add
mov
cltd
out
inc
addb
jle
in
les
add
jne
gs
testl
out
ss
mov
dec
addb
jb
gs
add
push
inc
lock
inc
dec
cmpsb
jb
sbb
data16
push
out
out
xor
lods
sub
cltd
or
mov
aaa
aad
adc
outsb
iret
pop
xchg
cmpsb
mov
clc
es
out
pop
aam
nop
test
add
out
pop
aas
popa
dec
jo
pop
mov
push
xlat
xchg
imul
cwtl
and
mov
pop
mov
xchg
movsl
fdivrl
lahf
subb
inc
add
or
lret
pop
and
mov
push
in
roll
in
jbe
loopne
popa
lret
push
andb
cld
jo
popf
add
adc
leave
loopne
adc
sub
or
test
xchg
std
jno
jae
jge
mov
ss
pop
loope
in
jns
mov
popa
les
arpl
aas
dec
push
mov
mov
lcall
mov
es
xchg
push
and
jae
inc
xor
scas
xchg
movsb
inc
add
xor
cmp
adc
fstp
xor
adc
nopl
adc
mov
jne
adc
in
cltd
addr16
ljmp
in
xchg
push
xchg
and
xchg
sbb
ret
add
pop
data16
aas
jbe
int
or
inc
mov
mov
roll
nop
xor
pop
std
dec
into
mov
adc
mov
mov
xchg
imul
sub
nop
add
pop
cmp
sbb
bound
pop
jl
dec
pop
xor
or
add
movsb
lds
sub
scas
lret
mov
jne
sahf
dec
jae
test
in
fldenv
jl
sbb
js
rolb
test
imul
jmp
cmpsb
dec
sbb
lcall
repnz
inc
arpl
es
lock
pop
mov
mov
xchg
leave
mov
sbb
dec
or
push
iret
out
push
jg
sahf
aad
sahf
add
insb
lret
insl
lods
movsb
fstl
jns
pop
mov
dec
inc
push
lods
and
mov
pop
pop
fisttpll
mov
sbb
icebp
cmp
xor
and
mov
test
loop
xor
sarl
fldl
add
dec
or
fstl
push
movsl
std
or
sbb
xchg
enter
xchg
mov
cmpsl
and
dec
or
fildll
xchg
int
xchg
dec
imul
or
sub
sub
pusha
movsb
mov
test
cmpsl
gs
rorl
xchg
pop
push
xchg
in
movsl
fistpl
icebp
repnz
scas
xchg
clc
call
xchg
and
xchg
scas
faddl
roll
jecxz
imul
sbb
out
mov
daa
loop
mov
jae
imul
in
out
test
test
or
lock
rcrl
cwtl
mov
in
sub
sub
sub
or
inc
cmp
sbb
icebp
ret
pop
pop
decb
stos
xor
cmp
dec
data16
aas
push
xchg
inc
clc
lds
cwtl
imul
daa
xchg
int3
bound
in
xchg
loop
test
into
out
out
sub
rcrl
push
cmpsb
loope
or
divb
gs
cmp
cmp
jns
cmp
inc
call
or
push
scas
fimuls
xchg
ja
mov
adc
lret
outsl
cmp
push
aad
loop
mov
and
std
lcall
mov
in
push
and
pop
cmp
xor
lcall
iret
dec
and
sub
rcl
pop
aad
test
add
pop
dec
sub
imul
mov
les
test
into
jb
lds
aaa
hlt
loop
ja
jg
pop
push
ret
lahf
pop
inc
ret
push
stos
pop
cmpsb
jg
mov
xchg
fldcw
xchg
add
mov
mov
mov
in
or
lods
ljmp
ja
aaa
inc
xchg
xor
loopne
mov
mov
hlt
bnd
or
mov
jb
mov
adc
in
inc
orps
jmp
sbb
or
xor
mov
push
mov
ljmp
loop
sti
je
lock
push
jle
push
jns
push
jg
sbb
dec
inc
sub
fisubrl
andl
xchg
mov
lret
andl
mov
fldcw
leave
addl
jmp
xchg
je
xchg
mov
lods
cmp
mov
imul
fisttpl
xor
rolb
pusha
add
idivl
xor
sub
xor
or
fdivl
repz
dec
pop
mov
arpl
dec
sub
mov
pop
loope
and
sub
add
or
paddusw
fdiv
dec
sbb
aaa
out
push
mov
lds
scas
loope
mov
jge
adc
cs
stc
or
gs
fsubr
xlat
mov
xchg
data16
dec
popa
add
loop
adc
adcb
ret
push
xchg
fistpll
out
mov
test
add
pop
pop
push
aam
fimull
sbb
into
and
lahf
sbb
or
and
imul
push
rorl
push
stos
mov
fldcw
pop
pop
jp
dec
lret
ljmp
bound
dec
sbb
adc
repnz
inc
loop
cmp
das
dec
sub
leave
sub
inc
fdivl
jp
mov
mov
fcomi
mov
aam
stos
int
mov
imul
and
jle
data16
xchg
lods
xchg
jbe
mov
lods
and
mov
dec
sub
fstps
add
and
popa
insl
pushf
fs
mov
mov
sub
dec
addr16
pop
push
sbb
xchg
stos
je
cmpsl
cmp
stos
push
mov
cmpb
cmc
lea
or
ror
push
ja
inc
sbbl
or
sti
sar
test
cmpb
mov
adc
sbb
or
fdivrs
sahf
push
aad
pop
adc
mulb
push
xor
loope
mov
sub
mov
scas
mov
and
sub
fidivs
pop
fdivl
mov
ja
cwtl
push
inc
mov
scas
sub
std
pop
xlat
cmpsl
andb
jg
push
loop
js
mov
pushf
aaa
inc
pop
fists
inc
pop
mov
outsl
sbb
xor
sarb
sub
leave
mov
mov
jmp
xor
incl
into
test
enter
push
mov
lret
add
sub
int
mov
in
call
jl
push
fldl
xor
ss
fmul
or
push
gs
loope
cwtl
aam
add
test
lods
mov
cmp
push
pop
xchg
push
push
fimuls
dec
inc
adc
push
add
cli
dec
test
loop
mov
jmp
cmp
arpl
sbb
xor
adc
stos
stos
sub
stc
in
ds
push
xchg
loope
lret
xor
aaa
sbb
mov
call
mov
pop
or
pop
dec
push
sbb
cltd
inc
mov
dec
pop
pop
enter
xchg
dec
inc
fdiv
xchg
xor
mov
dec
mov
and
not
jb
shl
nop
and
mov
inc
lds
outsb
push
notb
mov
aam
imul
stc
adc
pop
hlt
js
cmp
fldt
cmpsb
pop
ss
mov
out
add
push
pop
dec
add
sbb
es
lock
mov
or
sbb
push
jp
test
dec
adc
out
stos
int3
push
push
fldl
into
outsb
insb
jns
popa
daa
push
jecxz
or
mov
iret
lds
xchg
mov
emms
jg
icebp
addr16
cmc
jge
fs
sub
lret
pop
sbb
mov
ret
mov
mov
js
jmp
inc
scas
fimuls
jns
je
xor
push
bound
push
test
orps
jle
test
mov
ficoms
adc
int3
data16
mov
lods
mov
int3
call
adc
xchg
sarb
ret
and
jbe
shll
dec
cld
add
push
clc
pop
lods
int3
jns
push
sbb
lret
pop
mov
scas
lods
loop
addr16
jmp
mov
and
icebp
lahf
add
add
mov
je
lock
mov
loope
pop
mov
movsb
test
test
adc
sub
dec
lret
ja
pop
dec
push
shlb
outsb
sub
adc
clc
xor
imul
sti
adc
jae
js
pop
add
icebp
pop
ret
jl
sahf
mov
xchg
xor
insb
fwait
shrb
mov
cwtl
sti
pop
push
incl
shll
jno
js
and
shlb
imul
inc
daa
ret
or
adc
scas
cld
mov
out
xchg
xchg
xor
and
stos
mov
aas
mul
xor
sbbb
jns
fwait
xor
fimull
scas
jbe
or
sbb
inc
sub
imul
jg
test
sub
sbb
ret
sbb
int3
fcom
bound
scas
movsb
mov
fcmovu
in
or
cmp
es
xorb
pushw
xor
stos
cmpsl
xchg
cli
in
cmp
das
adc
rclb
lcall
jmp
mov
mov
pop
das
sbb
fcomp
fstpt
pop
je
mov
stos
into
jo
push
jl
lock
mov
sbb
sub
test
aam
mov
popf
push
jnp
pop
popf
sbb
out
mov
ret
dec
or
outsb
decb
insb
mov
movsb
arpl
push
xchg
and
pop
push
aaa
lcall
daa
lock
xor
xor
out
add
pop
out
xchg
push
or
inc
std
and
push
sbb
call
and
leave
jp
fmull
insl
das
push
push
mov
cmp
out
add
insb
xor
xlat
mov
orb
insb
fsubrl
adcl
add
clc
push
gs
mov
cmp
insb
out
or
jbe
loopne
fadd
cld
pop
ret
push
cmp
leave
fcomip
flds
mov
xor
cmp
or
dec
push
push
adc
or
imul
call
push
cmp
add
test
sub
insb
push
fstp
rorl
int3
add
rcrb
arpl
ret
add
sti
je
cmp
and
imull
nop
out
roll
dec
sahf
add
or
addr16
fwait
cmp
mov
out
jns
and
aam
or
inc
pop
fnstcw
jns
int
jg
mov
jmp
adc
sub
or
out
sarl
test
mov
sub
jecxz
adc
out
mov
fucomip
pop
gs
xchg
out
repz
sbb
pop
stc
stos
mov
pop
inc
add
ss
insb
js
sub
dec
or
sub
pmullw
xor
cmpsb
inc
xor
fnstcw
movsb
scas
sbb
enter
sbb
pushf
fnstsw
cmp
popf
xor
mov
shrb
sbb
arpl
gs
insl
int3
mov
mov
mov
js
ljmp
ret
add
mov
iret
jnp
mov
add
test
mov
sub
dec
mov
adc
add
mov
fs
jne
sub
cmp
and
push
xor
iret
ret
adcb
xchg
test
ret
mov
sub
out
daa
mov
mov
sbb
fistpl
ficoms
lods
sbb
and
push
imul
xor
mov
adc
lcall
enter
mov
inc
enter
cmpsb
jo
inc
rcll
mov
push
pop
test
das
jnp
jg
sub
les
push
mov
or
push
xchg
mov
mov
push
repz
fwait
push
xor
mov
repz
xor
xlat
std
mov
popf
lret
and
addr16
and
mov
jne
sarb
mov
std
xchg
jecxz
jge
push
sarl
inc
sti
imul
mov
mov
gs
out
jmp
or
xchg
adc
aad
pop
mov
jbe
push
lods
stc
aas
fsubl
mov
test
xor
popa
movsb
mov
test
loop
fcomps
cmp
push
jp
out
sub
add
mov
sub
fldenv
into
jb
shlb
cmc
mov
jmp
xchg
ljmp
dec
dec
jmp
push
mov
fcomi
nop
leave
add
mov
ficoml
insb
fisubrl
dec
stc
dec
aas
daa
adc
sub
mov
push
in
enter
icebp
sti
adc
hlt
xor
or
lcall
mov
dec
divl
movsl
mov
xchg
sbb
in
add
xor
xlat
test
ljmp
cmpsl
popf
mov
mov
nop
pop
stc
adc
sub
sbb
jp
fdiv
sub
mov
in
idiv
fdivl
lock
and
js
std
fcmovnb
cld
pop
mov
ds
stc
sbb
outsl
mov
jp
into
mov
test
aam
jmp
test
xchg
xlat
jno
cmp
je
sbb
das
lods
mov
icebp
pop
jns
mov
sub
popa
sub
ret
lock
mov
ret
or
insl
bsf
sub
imul
nop
test
mov
and
sbb
dec
jne
sbb
popf
ja
xor
push
xor
mov
mov
sarl
std
or
and
ret
ja
shl
sub
inc
adc
jnp
lods
mov
fcmovnbe
cli
loopne
leave
cmpsl
sub
cmp
sbbl
xchg
fs
icebp
push
push
cwtl
sbb
xor
jbe
jecxz
pop
int3
mov
mov
sbb
ss
mov
cltd
xchg
pusha
sbb
inc
sub
sbb
rclb
mov
mov
cld
or
or
or
cwtl
loopne
xor
adc
or
call
imul
fcmove
pop
int
subb
popf
out
jg
stos
pop
lock
daa
mov
fistps
repnz
sti
xchg
inc
outsb
insl
fs
in
pop
pop
inc
cld
mov
or
repz
fisubl
inc
mov
ret
cmpsl
jg
gs
dec
ljmp
mov
push
mov
fs
je
int3
lret
testl
cs
loope
push
adc
jns
mov
add
sbb
loopne
xchg
mov
mov
daa
in
cmp
and
cli
inc
imul
sub
mov
pop
not
stos
sub
mov
pop
dec
orb
in
mov
ror
push
lock
push
inc
aad
shlb
pop
lds
stos
mov
insl
pop
lahf
adc
sahf
xchg
sti
mov
xor
lock
mov
jecxz
lock
xchg
popf
inc
xchg
sahf
push
dec
mov
leave
aam
dec
fsubrl
push
mov
int3
pop
flds
test
imul
mov
vmwrite
pop
pop
in
adc
xchg
shlb
aad
lret
push
mov
sub
and
mov
shrb
mov
inc
jmpw
mov
imul
mov
jae
imul
push
scas
nop
dec
mov
cltd
xchg
xchg
fsubr
test
subl
push
adc
pop
scas
jle
sbb
adc
lret
cmp
push
pusha
mov
jp
adc
cmpsl
sbbb
in
sbb
adc
mov
mov
push
lods
in
xchg
xor
and
jmp
hlt
lret
mov
out
push
mov
into
hlt
js
or
mov
rcrl
mov
stos
push
xor
iret
inc
scas
xchg
int3
gs
orl
inc
out
rolb
fistps
push
adc
pop
rcrb
test
xchg
hlt
add
sub
sub
lods
nop
ror
inc
in
dec
mov
push
pushf
ss
in
fcomip
in
incb
fld
xor
xchg
dec
jbe
sbb
push
pop
adc
mov
in
xchg
pop
aam
pushf
adc
int3
jae
sub
pop
and
pusha
popf
nop
or
std
sti
sahf
adc
out
sti
xchg
jb
stos
jle
pop
ret
insl
dec
out
or
iret
mov
gs
fldt
mov
cmpsb
rcrb
add
mov
mov
pop
sar
mov
mov
in
mov
push
push
mov
add
ja
add
lods
cbtw
sbb
cmp
daa
jg
jbe
or
lcall
jl
fs
push
xchg
push
lahf
inc
ja
call
mov
imul
push
ss
cld
sbb
cmc
addr16
xor
or
sbb
or
mov
dec
and
test
sahf
jmp
jbe
filds
adc
dec
sti
ficompl
call
outsl
adc
scas
shlb
inc
mov
dec
test
adc
push
or
xor
addr16
jns
fistpl
pop
push
popa
das
push
sub
insb
stos
dec
cwtl
xchg
jge
dec
push
or
mov
dec
cli
mov
aas
addr16
dec
es
cmpsb
push
idivl
cli
cld
stc
int3
or
fsubrl
test
push
mov
dec
sarb
loope
lock
aas
sub
mov
mov
mov
aam
cmp
int
xor
sub
shlb
fcompl
jle
mov
orb
mov
in
fmul
sbb
fsubrp
cwtl
sahf
arpl
xor
push
mov
dec
ret
sahf
test
call
dec
sbb
ret
push
stos
in
mov
mov
push
or
loopne
scas
fdivrs
add
clc
push
sub
push
rcrl
cmp
sbb
mov
outsb
daa
popa
rclb
fnsave
test
add
in
call
cs
stos
xchg
sub
adcl
or
push
mov
div
mov
ljmp
nop
dec
dec
ret
insb
or
out
fdivs
jb
push
bound
fcomp
jmp
iret
jp
test
xchg
out
push
lds
aam
xchg
popf
rclb
scas
pop
mov
jae
pop
fdivl
push
mov
out
test
mov
je
push
scas
std
push
sti
xlat
pop
outsl
fwait
test
scas
push
xor
cltd
lea
imul
hlt
jecxz
int3
push
cmp
push
roll
sbb
pop
inc
leave
push
mov
add
jmp
pop
adc
aad
xchg
cwtl
movsl
mov
pusha
cmp
xchg
repz
popf
imul
loope,pn
mov
std
inc
xchg
and
shlb
mov
push
adc
jb
lcall
ret
mov
jl
addr16
aas
test
or
or
mov
ljmp
mov
push
or
sub
and
sarb
je
jnp
aad
or
mov
test
jmp
stc
adc
scas
mov
lock
scas
das
inc
outsl
pop
lahf
mov
shlb
xor
aad
hlt
lahf
icebp
insl
aam
mov
dec
push
hlt
mov
pop
push
fdiv
lcall
mov
inc
ljmp
in
shr
inc
int3
sbb
push
xchg
dec
pop
cmc
rcll
xchg
mov
xor
sbb
clc
pop
mov
lea
fstps
mov
repnz
pop
mov
into
and
jp
lods
and
xor
xchg
shr
sub
inc
and
dec
jmp
fisubrl
cmp
imul
sub
loope
and
sub
pop
add
popa
sahf
jmp
mov
jae
mov
out
gs
xor
xchg
add
xchg
ret
mov
fiaddl
jb
mov
sub
movsl
test
mov
sbb
sub
push
cmp
pop
mov
js
dec
jmp
cmpsl
cltd
loop
ljmp
lret
addb
fdivp
sbb
out
cmp
test
movsl
mov
lods
nop
mov
pop
pop
cmpsb
dec
xchg
movsb
jle
xlat
push
dec
pop
fidivs
sub
fisubs
fidivs
ja
push
enter
jno
or
aas
cmc
lods
movsl
js
in
mov
dec
sub
stc
inc
ljmp
jne
mov
push
jno
jb
adc
in
xchg
inc
fadds
cmp
and
mov
sbb
dec
movb
mov
into
mov
sahf
test
movsl
mov
sbb
lds
mov
ss
call
sub
stos
mov
and
or
mov
sbb
adc
mov
arpl
lea
lods
aad
pushf
xorl
shrl
mov
call
adc
jg
jmp
mov
mov
add
push
sbb
fcomps
cli
ljmp
repz
xor
pusha
sub
push
mov
xor
sbb
popf
lods
sbb
fidivs
adc
outsb
ljmp
rcrb
dec
and
mov
pushf
xchg
imul
mov
aas
fsubs
popw
loop
and
ljmp
push
fidivs
mov
push
int
cld
arpl
lahf
cmp
and
popa
mov
and
mov
js
jae
xchg
sahf
in
aaa
inc
repz
adc
inc
jmp
insb
imul
movsb
pop
push
cmc
mov
scas
sbb
sbb
adc
or
test
ljmp
fs
imul
xor
jge
sbbl
in
adc
movsb
nop
push
sub
leave
fstps
jo
pop
push
adc
push
loope
jp
sbb
mov
fwait
icebp
and
ficompl
stos
hlt
mov
fimuls
subb
leave
test
xor
out
popf
jecxz
fistl
sbbl
jle
bound
sti
out
nop
fsubrl
insl
mov
dec
add
les
loop
or
push
in
mov
mov
lock
out
pop
xchg
jne
adc
sub
jb
fwait
out
js
inc
repz
lea
mov
jg
pop
fwait
lahf
push
push
fs
mov
mov
cmc
push
cmp
out
cs
add
push
loopne
mov
push
jl
fistl
shll
std
scas
out
lock
leave
inc
add
fnstsw
push
mov
scas
rclb
xor
cs
mov
jp
sub
dec
or
cmp
add
bound
mov
clc
pop
jle
mov
stos
fstl
mov
cmp
mov
xor
xabort
aas
das
xchg
sbb
push
xchg
pop
lret
cltd
push
jl
push
hlt
mov
jb
test
dec
roll
icebp
mov
sarb
adc
pop
push
xchg
jb
lahf
mov
mov
ror
xchg
sahf
jle
pusha
mov
in
pushf
mov
mov
popa
or
push
sub
add
fimull
or
mov
sub
cmp
mov
test
js
push
dec
pop
mov
adc
scas
mov
pop
loope
out
mov
cmp
mov
movsb
mov
add
jns
data16
or
xor
sbb
cs
or
adc
cmovb
lods
mov
loope
or
fwait
pop
test
in
xor
mov
in
cmp
in
ljmp
test
test
push
gs
js
adc
cmp
sbb
adc
cmp
pop
or
js
xchg
jae
push
sbb
jge
xchg
pop
add
in
push
jbe
xchg
mov
subb
jge
and
in
aam
dec
mov
insb
dec
ret
sub
andl
ja
mov
mov
push
xchg
jo
hlt
out
pop
cmp
mov
push
scas
out
push
outsl
cmp
jno
shlb
js
fwait
das
stos
cmpsb
push
jo
jnp
fldcw
cmpsb
loope
outsl
mov
daa
push
jns
mov
xor
xor
xchg
ljmp
dec
stos
adc
dec
xchg
xor
lods
and
cmp
test
in
andl
popa
adc
ds
lret
clc
pop
pop
insb
jb
stos
sbb
xchg
push
mov
sub
fmul
imul
insb
jle
push
pop
les
pusha
loop
sub
jl
cmp
mov
rcl
lods
gs
imul
or
inc
enter
hlt
or
cld
push
lret
pop
scas
std
outsb
pushf
add
ret
sbb
in
sub
jle
les
mov
sti
out
lret
mov
xor
push
push
data16
cli
in
and
inc
add
scas
sub
ret
in
enter
jo
lods
inc
test
pusha
xor
dec
adc
jle
fbld
pop
jns
and
cmc
fisubrl
loopne
je
popf
cmp
in
cmp
arpl
xor
lods
mov
jno
jne
sbb
outsb
pop
mov
insb
ja
xchg
or
add
test
xchg
ljmp
mov
xor
mov
push
psubw
jo
orb
roll
mov
out
jns
lret
pop
mov
in
aaa
lds
stos
mov
mov
pop
lock
ss
jecxz
sub
movsb
adc
pop
pop
outsl
xchg
popf
inc
sbb
lock
cmp
push
inc
pop
jno
or
jle
xchg
ret
stc
xchg
outsb
sbb
or
lods
mov
mov
fwait
repz
pop
data16
add
cmp
jb
xor
jo
mov
push
pop
inc
pop
jp
adc
insb
popf
shl
dec
add
rcll
push
ds
pusha
dec
mov
jmp
les
es
jne
mov
lods
test
inc
shlb
aad
shll
data16
cmp
test
das
aad
shlb
and
mov
rcrb
push
xchg
ror
jae
or
test
and
and
data16
stos
pop
and
scas
out
jae
loopne
pop
mov
test
pop
and
mov
out
es
lods
adc
xchg
mov
jmp
data16
sub
int3
into
sbb
jp
pop
imul
jp
das
icebp
ret
je
xor
or
xor
outsb
xor
fldl
pop
xor
cwtl
mov
ljmp
ret
dec
xchg
or
sti
jl
mov
xchg
ss
add
mov
mov
xor
push
inc
inc
or
dec
movsb
mov
call
test
and
sbb
mov
fnstenv
push
rclb
add
xor
nop
testb
or
and
inc
jge
mov
pop
xor
fs
mov
sti
add
push
inc
cs
push
les
mov
adc
arpl
jbe
hlt
imul
lea
xor
push
mov
outsl
lret
out
testl
bound
pop
xchg
into
dec
inc
arpl
aaa
adc
xchg
pop
mov
or
out
cmp
adcl
loope
fbld
dec
fbld
stos
and
sub
inc
mov
adc
cld
push
dec
add
orl
test
mov
mov
adc
mov
lods
and
scas
sub
dec
adc
inc
les
stc
mov
and
push
mov
out
loopne
lret
add
or
or
mov
bound
cmp
xlat
and
sbb
add
leave
cmp
std
add
aam
loope
dec
imul
adc
in
punpcklbw
cmp
cmpsl
ret
scas
out
das
fnstenv
adc
push
bound
push
hlt
imul
shll
fisubrs
gs
xor
shll
js
negb
pop
std
int
push
push
cmp
push
int
mov
rol
inc
int3
push
lock
pop
aaa
lods
mov
das
jae
push
insl
xchg
bound
pop
push
gs
jne
cmc
inc
test
scas
dec
pusha
lods
or
movsl
scas
mov
lret
ss
push
and
mov
scas
psubb
cs
add
icebp
cmpsb
pop
inc
mov
add
out
jl
xchg
inc
adc
lds
int3
stc
dec
pop
sahf
sub
leave
aaa
int
mov
pushf
sub
mov
dec
push
mov
inc
in
xchg
loop
pop
sbb
mov
mov
and
fs
push
divb
shrl
cld
push
in
outsl
loope
lcall
sbb
mov
mov
aaa
jle
ret
paddusw
pop
jle
shl
or
push
add
xchg
fs
adc
xchg
ret
lcall
or
aam
add
mull
fildl
pusha
lods
inc
pusha
in
xchg
mov
and
jle
clc
negb
ljmp
jl
cmpsb
aas
out
mov
negl
cmp
hlt
xor
push
sub
ds
dec
xchg
insl
stos
orb
mov
xchg
add
sub
pop
cvtps2pd
jnp
movsb
dec
mov
mov
add
push
mov
and
and
scas
jle
jae
shlb
aaa
push
popa
std
xchg
imul
cmpb
ljmp
cmp
fstpt
cld
add
call
in
bound
neg
out
push
test
sbb
xor
test
xor
pop
cmpsb
push
andb
and
in
inc
mov
push
push
push
xor
mov
pusha
loopne
stos
outsl
adc
je
mov
jg
les
xor
aaa
dec
pusha
test
pop
das
or
xchg
adc
hlt
jbe
adc
fwait
outsl
jp
sbb
adc
or
push
sbb
enter
out
ret
push
bound
jns
push
push
jl
and
call
mov
dec
jo
dec
jb
xlat
shlb
bnd
mov
mov
fisubl
jo
mov
jno
jno
into
jp
push
pop
stos
fmuls
adc
sbb
aas
add
les
out
addr16
call
pushf
stc
lahf
jno
nop
jno
adc
adc
in
leave
movsl
lods
sarl
clc
mov
xor
sub
add
cmp
lret
sar
insb
mov
in
dec
pop
into
xor
les
adc
mov
in
mov
lcall
fcompl
into
ss
sahf
scas
cwtl
gs
push
or
add
bound
mov
sbb
xlat
fs
js
shll
fdivrs
hlt
cltd
jns
adc
daa
mov
dec
mov
icebp
dec
test
or
ds
sbb
notl
rorb
xchg
pop
jp
sbb
jecxz
test
and
xor
shll
in
dec
mov
mulb
lods
stc
inc
inc
or
or
out
mov
and
mov
dec
or
mov
jmp
nop
into
mov
dec
push
pop
add
in
push
into
lcall
xor
dec
mov
dec
repz
push
pop
iret
andb
mov
sub
jnp
ret
movl
lret
fldenv
pop
pop
hlt
fstpl
mov
iret
loopne
sti
xor
popa
lcall
sbb
decl
push
push
mov
pop
push
loope
lock
push
cmp
add
mov
adc
addr16
sbb
into
fwait
push
push
mov
loop
dec
aam
push
mov
bound
shrb
adc
mov
loopne
sbb
js
add
xor
inc
add
mov
and
fiadds
sub
loop
jnp
or
inc
fildll
adc
imul
jle
rclb
vorps
pusha
cmp
mov
in
push
shl
inc
jl
jae
mov
jecxz
xor
jnp
jp
jno
xor
fnstcw
xor
pop
fwait
sub
insl
in
clc
sub
mov
loopne
xchg
lret
cmp
in
fwait
xlat
mov
and
into
inc
adc
lret
sbb
jno
xchg
adc
jmp
mov
xchg
dec
mov
scas
sub
push
mov
add
push
pusha
sti
call
mov
inc
xchg
and
mov
dec
mov
enter
cmp
int
aam
scas
loopne
xchg
js
mov
mov
sbb
fs
das
add
lcall
xor
push
sub
mov
incb
dec
pusha
pop
or
pusha
imull
scas
jle
je
in
fwait
or
xchg
mov
ss
loope
out
adc
cld
sub
lcall
mov
clc
sarb
cmp
ret
mov
cli
repz
mov
and
push
lds
lcall
adc
mov
test
mov
movsb
fdivrl
jno
std
ds
movsl
mov
jecxz
ss
mov
adc
xor
adc
mov
popa
ret
jp
xchg
repnz
xchg
sbb
cwtl
jo,pt
sahf
mov
rcr
rorl
sub
in
dec
sbb
cli
dec
mov
mov
bound
xor
xchg
mov
inc
dec
adc
push
int
mov
xlat
jae
push
mov
push
daa
pushl
lcall
jnp
mov
fs
pop
iret
push
xchg
push
mov
xchg
jp
scas
adc
lea
shlb
in
or
adc
jns
mov
bound
xorl
mov
inc
push
inc
inc
fs
cmp
mov
out
jb
jle
xchg
movsl
and
mov
out
loope
push
pusha
jne
dec
mov
negl
mov
pop
mov
xor
out
es
icebp
fwait
cmpsl
mov
mov
shr
jge
inc
arpl
mov
mov
outsl
negl
or
cmpsl
dec
aaa
fcmovu
repnz
fdivrl
push
subb
adcl
leave
add
push
ficompl
dec
pop
fmuls
and
test
shlb
add
xchg
or
enter
imul
mov
sbb
outsb
and
rcl
lods
inc
and
sbb
jecxz
sti
cld
inc
lods
mov
ljmp
sti
jae
les
js
push
hlt
pop
shll
nop
jb
std
mov
or
mov
push
and
cmp
int
cltd
std
dec
je
hlt
mov
cmc
or
test
mov
popf
aaa
pop
cld
adc
push
mov
scas
lahf
pop
mov
sbb
lock
dec
imull
cmp
cmp
clc
dec
lock
daa
sti
adc
lcall
les
xchg
stos
jo
jl
jb
fadds
dec
push
or
enter
sbb
pop
mov
popa
inc
aad
popf
mov
push
ds
std
aas
clc
mov
mov
rcr
xor
push
xor
iret
stc
aas
or
push
aaa
roll
fidivrs
jno
dec
jle
aas
inc
pusha
imul
cld
xchg
add
push
ljmp
mov
stc
pop
jb
lods
adc
test
iret
or
test
fildl
xorps
ficoml
lods
out
dec
add
test
inc
lcall
mov
pop
shll
outsl
iret
xchg
push
xchg
cmp
pop
inc
hlt
sbb
mov
sar
sbb
adc
test
iret
or
xchg
stos
mov
fists
data16
iret
mov
lods
out
dec
add
test
inc
cmpsl
adc
jmp
or
enter
fnsave
lock
jl
out
push
jne
pop
jb
lods
adc
test
iret
or
pushf
mov
adc
lods
js
fdivrs
int
icebp
ret
push
lods
in
lds
mov
ret
ss
sub
pop
rcrl
rorb
fwait
jecxz
and
mov
sahf
mov
inc
cmp
stos
stc
hlt
pop
jb
lods
adc
test
iret
or
subl
or
jg
mov
inc
sbb
out
inc
sub
out
ret
xchg
jmp
aas
or
add
inc
daa
into
rorl
out
xor
push
fsts
bound
xor
and
insb
inc
ja
cmp
jne
cmp
and
aam
adc
test
iret
or
lahf
aad
int
mov
decb
pop
iret
mov
lods
out
dec
add
test
jo
push
lea
scas
iret
jle
fistpl
mov
sbb
sub
xor
pop
inc
into
or
out
xchg
cmc
xor
push
lahf
mov
cmp
dec
xor
pop
mov
outsl
insl
in
pop
jb
lods
adc
test
iret
or
out
cmp
or
sahf
pop
mov
mov
xchg
push
xchg
cmp
dec
jp
ret
ss
sub
pop
rcrl
rorb
xor
mov
popf
loopne
lret
outsl
xlat
push
test
out
jg
inc
mov
sub
nop
stos
cmp
fs
and
jno
xchg
jbe
sbb
stc
pop
lret
pop
sbb
xor
cli
shl
fiaddl
cmpsb
mov
pop
jb
int3
or
fimull
or
cld
pushf
mov
adc
mov
jp
inc
loopne
sbb
sbb
pslld
push
add
mov
lods
enter
std
adc
lahf
add
sbb
fs
or
dec
pop
push
shl
inc
inc
inc
sahf
sub
xchg
mov
pop
add
cmp
pop
dec
adc
pop
hlt
inc
lods
sbb
dec
stos
stos
mov
pop
addb
pop
int3
jo
mov
xchg
lret
mov
xchg
add
test
xchg
pop
leave
sub
iret
pop
popa
pop
cmp
push
or
jno
mov
leave
xchg
lcall
fs
jno
mov
mov
inc
in
ds
jo,pn
adc
or
xlat
nop
cmpsb
cltd
cmp
js
push
pop
pop
or
int3
call
push
jge
mov
cwtl
dec
xor
xor
bound
fsubrs
fimuls
fsts
rcr
add
rcll
mov
mov
scas
lahf
xchg
cmc
clc
daa
pop
xor
mov
xchg
push
push
in
orl
lret
push
ret
mov
mov
cmc
push
push
subl
xchg
rcr
pop
out
add
cld
cltd
int3
test
hlt
je
xchg
bound
aad
subb
cmpsb
insl
imul
mov
shrb
pop
and
xor
out
cmpsb
sbb
cmp
xor
out
xor
push
leave
xchg
ja
or
mov
mov
es
icebp
jnp
aas
inc
ja
pop
inc
xlat
push
add
outsb
add
xchg
mov
cwtl
adc
jns
sbb
scas
and
lods
sahf
xor
add
gs
test
cmc
jbe
inc
xchg
xor
push
xchg
lss
test
mov
dec
xchg
and
and
cmova
repz
and
neg
popa
test
in
mov
sub
push
aas
xor
mov
icebp
mov
ja
pop
stc
lret
sbbb
imul
popl
lret
cmp
inc
imul
ss
adc
in
push
pop
fbstp
xchg
fnsave
int
jl
push
sub
cmp
cwtl
or
inc
repnz
imul
stos
adc
add
mov
sub
cmp
fisttps
xchg
pop
into
dec
inc
cmp
inc
dec
shll
test
xchg
inc
jnp
and
jns
or
jecxz
push
jmp
gs
fisubrl
and
push
outsb
stos
call
jl
pop
mov
xor
popf
lahf
push
add
dec
sarb
adc
data16
mov
sbb
push
push
test
je
scas
push
mov
cs
push
jge
inc
popa
push
xchg
mov
sahf
cli
std
inc
adcl
mov
mov
jb
lahf
xor
mov
cli
fs
cwtl
in
lds
in
and
inc
jns
push
inc
jge
inc
in
inc
mov
jno
or
stc
and
pop
sub
lds
hlt
jns
movsl
in
inc
add
sbb
daa
aad
addl
pop
test
repnz
xchg
inc
push
dec
inc
xchg
mov
hlt
out
rcll
data16
insb
add
pop
mov
adc
mov
pop
sti
shll
sti
fsubp
fiadds
mov
out
mov
in
jecxz
or
call
xchg
dec
pop
test
arpl
fidivrs
test
out
push
mov
hlt
cmc
push
mov
mov
in
mov
ret
xor
mov
xor
pop
shll
lahf
test
push
and
rcll
in
aam
gs
shll
pop
cmp
sahf
nop
pusha
negb
pop
test
pop
mov
and
push
xlat
stc
nop
xchg
xor
mov
arpl
sub
int
cmpsb
insb
mov
cmc
adc
lods
int
test
push
dec
cmpb
mov
test
mov
lods
jg
push
test
xchg
insb
mov
lret
mov
imul
pop
lods
mov
ret
pushw
inc
sbb
mov
aam
dec
sub
or
mov
enter
insb
xchg
adc
inc
testl
cwtl
or
push
sub
das
pop
jae
test
push
inc
lahf
mov
mov
nop
jge
and
sub
dec
scas
and
scas
mov
ljmp
aas
xchg
sub
push
pop
push
mov
push
sbb
mov
pop
push
aam
xor
fadd
aaa
aas
sbb
dec
or
cmp
xchg
xchg
adc
lret
andl
cmp
das
ficoms
data16
shr
stos
outsl
mov
fldt
fwait
inc
daa
xchg
mov
cmp
inc
jnp
insb
scas
or
push
dec
sti
aam
loop
cmp
fadds
sub
les
push
pop
mov
cli
rcrl
ficomps
xor
pop
or
or
xchg
push
cli
nop
mov
stc
mov
push
push
int
int
xchg
sbb
mov
clc
outsb
or
icebp
shll
ljmp
xchg
loope
adc
sbb
add
test
nop
pop
into
arpl
sti
and
out
popf
sub
pusha
pop
push
stos
xchg
inc
inc
xchg
sbb
jbe
sub
pop
les
jb
sarb
out
shrb
mov
jno
mov
inc
add
stc
sbb
sahf
shll
fs
lock
fadds
sti
cmp
test
cmp
cmp
sbb
pop
adc
mov
and
movsl
out
sub
mov
mov
stos
pop
pop
jnp
sbb
scas
sbb
mov
lret
repnz
cwtl
int
test
adc
pop
jl
lahf
fnsave
dec
test
out
and
mov
adc
xor
je
fnstcw
rcl
jl,pn
mov
mov
jg
ficompl
mov
cli
shl
or
shll
test
mov
push
ret
std
adc
icebp
and
and
jmp
jp
lret
lods
mov
inc
xchg
mov
jne
lds
outsl
ds
in
dec
arpl
mov
rcrb
cmp
adc
subb
push
call
mov
and
aam
sarb
bound
aaa
lea
cmp
adc
mov
sbb
xor
in
mov
jno
insl
adc
std
pminsw
test
jl
arpl
cld
test
into
xor
cmpb
rcll
insb
cmp
pushf
mov
adc
add
pop
test
sahf
xorb
out
adc
rorb
or
in
add
cmc
dec
jnp
repz
inc
cld
fnstsw
inc
xlat
scas
fneni(8087
mov
in
test
xlat
call
shrb
lods
std
and
push
add
jg
test
shrb
shrl
sub
xor
out
mov
lret
cmpsb
int3
daa
or
xor
leave
faddl
das
js
jp
popa
addr16
sub
xor
imul
mov
push
pop
lret
ficoms
int3
mov
int
and
xchg
adc
fwait
jb
pushf
addr16
mov
aaa
pop
mov
cmp
mov
xchg
add
jns
push
inc
push
lret
or
sbb
pop
add
sti
mov
add
fwait
lods
inc
call
or
les
rcr
mov
adc
xchg
sahf
popf
lods
dec
data16
js
push
mov
movsb
in
inc
sahf
push
or
xchg
mov
push
ret
in
orl
ret
jle
inc
hlt
cmp
dec
sub
mov
insl
arpl
cmp
into
std
xchg
jg
mov
fdivl
insl
xchg
enter
aas
inc
fcomps
xor
cmc
xor
push
inc
out
jecxz
adc
mov
pop
push
inc
nop
sub
les
repnz
pop
sub
faddl
std
push
sub
adc
cwtl
or
adcb
out
test
push
fists
ja
mov
add
mov
icebp
mov
adc
divb
xchg
and
xchg
bnd
scas
iret
mov
push
add
lods
fcomps
insl
repz
jae
in
cmpsl
jns
mov
inc
mov
stos
clc
or
push
xchg
mov
pop
out
dec
dec
enter
sub
inc
and
fstps
xor
in
das
lea
pop
mov
outsb
arpl
aas
sete
inc
cwtl
mov
in
dec
lea
and
cmp
add
cmp
push
xchg
xchg
adcb
aam
mov
jge
push
push
and
stos
mov
sub
icebp
xchg
into
fisubrl
inc
add
push
imulb
dec
jge
push
out
loop
add
xor
sbb
ljmp
pop
push
jns
xchg
ljmp
out
pop
dec
sbb
fadds
jae
fs
xor
xor
cltd
mov
cmp
jns
or
xchg
and
pop
data16
lds
push
jecxz
jmp
outsl
pop
jmp
push
out
push
add
ja
mov
add
sbb
outsl
test
mov
dec
mov
sbb
add
iret
and
push
or
movsb
mov
bound
or
cmp
jne
push
frstor
dec
push
pop
dec
adc
adc
jmp
in
pop
ljmp
sbb
xchg
out
in
or
bound
in
enter
push
lock
popa
sub
aad
dec
mov
or
inc
pop
ret
inc
pushl
fcompl
xor
inc
loope
popf
adc
or
int
or
cli
push
stos
xor
xchg
xor
stc
adc
mov
jmp
leave
andb
xchg
pop
dec
ret
or
inc
loope
mov
add
mov
test
or
out
inc
cmp
add
cmp
loope
stc
mov
dec
add
pop
test
push
add
cltd
sbb
cmp
mov
xchg
test
loop
ja
fs
fucomi
or
xchg
xor
dec
dec
pop
mov
inc
shrl
sub
mov
dec
push
push
dec
arpl
cmp
cld
mov
hlt
lret
stos
add
out
dec
enter
sub
xchg
or
lcall
add
sbb
add
test
fwait
mov
repnz
sub
mov
jg
push
mov
ja
cmp
rolb
or
mov
adc
adc
dec
pop
hlt
test
mov
ss
sahf
adc
enter
test
mov
dec
mov
in
fs
push
and
inc
in
jbe
jbe
cs
xchg
xchg
jb
xor
add
mov
lret
xchg
mov
mov
push
xor
scas
adc
mov
loop
dec
cltd
rcll
test
loop
cmp
add
mov
jae
lret
vmwrite
jne
lods
fsubrs
inc
adc
add
adc
fsubs
test
fbld
cwtl
cwtl
push
inc
negl
pushf
cli
ret
cli
mov
dec
loope
jnp
loope
and
xor
rcrb
aam
adc
test
iret
or
inc
or
cs
in
sbb
ret
mov
inc
addr16
pop
sbb
les
mov
cmp
test
push
inc
sub
dec
xchg
cld
mov
cmp
shl
jecxz
xor
add
adc
test
iret
or
xlat
push
cmc
and
inc
pop
cld
fiaddl
add
inc
sbb
out
inc
sub
out
ret
pusha
push
or
mov
push
repnz
pop
pop
outsl
or
mov
clc
pop
adc
loopne
xor
jbe,pn
test
jne
dec
push
inc
fimuls
aam
adc
test
iret
or
mov
je
into
pop
test
pop
iret
mov
lods
out
dec
add
test
fwait
dec
mov
frstor
into
iret
lret
dec
push
out
cld
push
scas
jecxz
ljmp
and
jp
in
jg
adc
cltd
push
lret
out
xor
cs
xlat
mov
outsb
pop
cld
loope
jb
popf
clc
adc
cmpsl
push
insb
daa
cmc
inc
mov
jb
ret
sbb
sbb
nop
jle
stos
fsubs
lock
xorl
andl
jns
inc
icebp
outsb
aad
dec
xchg
push
pop
shrl
test
out
jmp
mov
sub
ret
out
das
js
sbb
xchg
jb
stos
mov
mov
ds
and
jnp
mov
mov
mov
lods
fwait
mov
frstor
ficoml
pop
repz
inc
add
mov
jbe
lds
mov
mov
cltd
push
daa
jno
leave
mov
outsb
sahf
push
into
xor
cmpsl
mov
ljmp
push
push
inc
sub
push
xchg
mov
loope
dec
inc
xor
jbe
cld
dec
mov
cmp
add
sti
fsts
dec
je
cmp
pop
inc
out
mov
mov
mov
xchg
push
cs
adc
leave
or
pop
cmp
divb
mov
insb
pop
sub
sbb
xor
insl
loop
movsl
cmp
and
inc
xchg
pop
dec
adc
jle
mov
inc
add
push
call
mov
int3
xchg
cmp
push
jns
pop
xchg
sbb
lods
mov
pop
arpl
dec
leave
inc
xlat
test
test
add
fcompl
popf
xor
fldenv
adc
lods
sahf
std
xor
inc
outsb
pushf
push
lcall
outsl
dec
into
jne
out
ljmp
mov
jno
adc
lods
jg
std
jecxz
adc
jo
push
pop
mov
je
xchg
adc
cs
rolb
daa
sysexit
adc
lret
xchg
popa
or
adc
fcomps
mov
sub
mov
rcrl
mov
les
push
add
inc
hlt
and
cmp
lea
loopne
xchg
mov
dec
xchg
jle
fsts
push
and
jecxz
mov
xchg
inc
jo
xor
and
stos
nop
mov
push
pushf
inc
jo
dec
in
mov
popf
gs
mov
xchg
mov
mov
movsl
lret
lahf
leave
testl
in
js
outsb
jl
push
jne
scas
dec
mov
dec
testl
cli
xor
fnstcw
aam
jle
iret
pusha
add
mov
or
outsl
mov
xchg
loope
dec
add
xchg
jae
pop
filds
fs
cs
out
in
xor
scas
add
pop
push
sbb
xchg
xchg
xchg
in
push
cmc
mov
cmpsl
das
loopne,pt
cmp
cmp
sahf
mov
xchg
xchg
sub
jp
arpl
out
jmp
insl
sbb
negl
testb
push
adc
lock
sbb
testl
je
out
bound
test
pop
clc
enter
push
dec
xor
jno
rcrl
in
cmpsl
push
push
dec
sarl
rorb
jp
clc
shlb
cld
mov
rcll
and
test
in
and
rcrl
pushf
xchg
sub
std
repnz
sub
pop
in
fldenv
xor
add
mov
push
pop
inc
push
rclb
jnp
test
jg
aad
xchg
jmp
iret
mov
dec
and
adc
and
pop
ret
sbb
int3
and
jmp
ds
fidivl
or
jp
mov
imul
aad
in
loop
and
mov
xchg
icebp
adc
push
aad
fcomip
inc
jp
mov
icebp
dec
pop
mov
pop
stos
dec
sbb
mov
adc
or
push
insb
sbb
mov
pop
cmp
add
jp
in
ss
ret
fwait
adc
xor
aas
mov
je
sbb
lahf
out
stos
scas
jne
inc
std
and
inc
call
insb
pop
in
sbb
pop
ljmp
pop
dec
lret
xchg
pop
repz
dec
mov
mov
inc
rcrb
inc
mov
and
push
das
fwait
and
dec
je
pop
decl
push
stc
sbb
add
mov
gs
push
lds
inc
pushf
mov
and
punpckhdq
and
sarl
xor
test
dec
cmpsb
addb
lock
cs
jne
xchg
aad
sub
push
inc
push
pop
and
adc
test
iret
or
loop
xor
repnz
jns
pop
iret
mov
lods
out
dec
add
test
jecxz
lods
rorl
push
call
std
xchg
cmp
test
inc
jmp
pop
pop
jns
sub
sub
jge
jle
negl
cmc
arpl
in
add
movsl
fildl
outsl
or
mov
hlt
jne
mov
sub
ffreep
cmp
shrb
dec
or
dec
repnz
or
mov
jnp
into
lret
mov
jbe
mov
scas
stos
enter
mov
inc
movsb
hlt
xchg
jl
fiadds
cwtl
and
cmovnp
cwtl
mov
pop
test
in
cmp
and
mov
stc
sbb
aaa
cwtl
push
pusha
imul
add
shl
fsubr
dec
ja
repnz
test
outsl
daa
push
pushf
fnsave
lea
xchg
sar
adc
mov
jmp
dec
cltd
or
adc
add
mov
dec
xchg
add
in
cmp
and
ret
dec
push
pop
aas
repnz
movsl
cwtl
inc
ds
out
pop
pushf
into
jae
or
adc
sub
jnp
pop
mov
mov
gs
sub
push
repnz
add
adc
xchg
outsl
cmc
in
js
fnsave
cmp
xchg
xchg
jbe
and
loopne
cmp
into
fldcw
xchg
in
xchg
cmp
rol
sbb
scas
cmp
and
or
jg
mov
mov
and
adc
lcall
or
or
lret
mov
sub
ret
out
and
jle
xchg
aad
adc
icebp
fwait
inc
jmp
ltr
dec
out
incl
orl
ljmp
int
push
jecxz
pop
lds
movsl
mov
sahf
xor
je
dec
push
pop
or
aaa
out
pop
cltd
mov
jge
dec
add
das
xor
mov
add
xor
mov
jnp
jae
adc
subb
cmpsb
and
push
in
addr16
cmp
jno
movq
mov
cmpsl
mov
jb
sub
jl
cld
cmp
mov
stos
rcll
sbb
ja
popf
sub
dec
inc
or
fsts
je
testl
lds
loopne
test
mov
inc
fisttpll
xlat
imul
lock
inc
out
lods
movsl
cld
ljmp
add
adcb
mov
loopne
js
jns
mov
mov
cwtl
cmpsl
in
fmuls
add
es
push
sbb
into
aaa
jmp
cli
sub
jo
repz
xlat
add
arpl
jo
lock
inc
mov
and
rolb
insb
xor
bound
push
int
ds
xor
pop
imul
xor
daa
mov
loop
or
incl
mov
cmp
addr16
rorb
and
inc
lds
ud1
push
loopne
xchg
call
out
jl
or
cmp
faddl
gs
movsb
mov
and
fcomps
scas
sbb
cmp
sbb
or
sub
sub
lock
jmp
push
adc
mov
ret
jno
orl
iret
or
or
pop
movsb
mov
sub
mov
cwtl
stos
push
mov
pop
gs
fstpl
es
lcall
fwait
pop
pop
xorb
cmp
dec
or
aad
cwtl
pop
stos
dec
mov
cmpsb
and
inc
jmp
imul
inc
imul
jmp
out
xchg
or
scas
ficomps
jle
aad
out
push
imull
pop
xor
dec
imul
and
mov
push
test
les
xchg
jnp
add
std
xor
or
les
push
jnp
scas
es
push
inc
loop
add
hlt
test
jb
pop
inc
dec
shll
jno
push
mov
gs
in
mov
jle
adc
xor
sub
sub
mov
and
cmp
add
insl
je
jge
xlat
push
ds
in
lea
std
pop
daa
mov
adc
lds
inc
mov
hlt
sbb
repz
xor
jl
lods
xchg
mov
add
cmp
std
adc
inc
cli
inc
push
cmpsl
cwtl
jno
pop
orb
push
or
mull
cmpb
xor
and
fxch
sbb
out
and
adc
outsb
ja
push
pusha
subb
adc
xlat
push
jmp
out
les
ret
repnz
xchg
mov
dec
dec
xlat
jo
push
sbb
mov
cmp
jns
xchg
sub
lods
repz
test
xchg
outsb
cmp
sub
adc
lret
dec
or
jns
notb
loop
lock
jecxz
adc
push
adc
es
in
dec
scas
not
cmc
lds
push
daa
vmulsd
sbb
sub
jge
negb
cmpsb
push
dec
andl
in
lret
dec
xchg
push
rol
mov
adcl
inc
testl
cmp
mov
mov
xor
push
cltd
das
add
inc
movsb
or
mov
pop
pop
adc
xor
imul
arpl
mov
mov
jmp
or
pop
push
hlt
out
insb
jmp
add
fildl
add
test
shrl
jb
loope
mov
lret
push
jo
pop
iret
pop
fwait
xor
popa
stos
leave
arpl
pop
ret
cmp
outsl
test
xchg
mov
mov
dec
popf
inc
jno
stc
jmp
popa
mov
cwtl
mov
sbbb
adc
mov
repz
pop
xorb
sub
in
xor
push
jl
inc
loope
out
jp
push
sbb
popf
xchg
jge
pop
inc
mov
ror
mov
mov
push
jmp
andb
fld
bound
out
push
mov
adc
dec
call
stc
test
lcall
pop
in
xchg
adc
sbb
mov
lret
gs
inc
or
enter
ljmp
fwait
shll
movsl
dec
stos
and
add
jne
test
push
lods
repz
dec
sarl
jbe
daa
mov
bound
adc
inc
xor
xchg
cmp
movsl
lods
mov
insb
mov
clc
xchg
cmp
adc
outsb
into
sahf
cld
mov
insb
movl
dec
test
dec
loop
and
lods
mov
ror
and
jmp
jbe
xchg
jne
pusha
mov
dec
lcall
mov
out
int
addr16
ljmp
push
jg
and
jne
pop
pop
bound
cs
lods
jnp
mov
aaa
xor
outsb
mov
out
insl
ror
lea
xor
mov
push
in
pop
push
jge
jne
pop
es
adc
sub
jl
jno
imul
mov
lcall
mov
and
in
data16
mov
call
push
aas
mov
mov
add
test
push
mov
jp
mov
cltd
jecxz
mov
arpl
cmp
xorl
add
rcll
les
sbb
sub
xchg
sub
push
pop
mov
les
xor
pop
xor
xchg
inc
push
rolb
scas
xor
xor
cmc
xlat
fs
sbbl
jno
out
jbe
xor
pop
mov
adc
inc
cwtl
test
and
xor
pushf
andl
mov
lds
mov
testl
push
mov
les
pusha
sub
out
ret
pushf
call
xchg
xchg
xchg
insb
orb
jmp
dec
xchg
mov
lods
xor
jmp
leave
fldcw
sbb
ljmp
lock
ja
sbb
and
or
inc
scas
outsb
in
out
leave
sub
ret
test
int3
inc
jg
cs
mov
mov
int3
jp
mov
repz
push
xor
or
dec
js
movl
push
inc
outsl
inc
inc
jp
pop
mov
pop
shll
jae
push
fsts
cwtl
inc
maskmovq
testl
add
lea
fwait
adcb
push
test
pop
lods
stc
mov
test
outsl
dec
aaa
fcmovb
xor
clc
out
sub
movsl
sbb
add
jo
out
cltd
popa
jno
aaa
pop
inc
add
push
inc
or
xchg
pop
int3
sub
inc
inc
mov
push
lret
mov
inc
pop
sbb
dec
cmc
js
sub
xor
pop
xor
clc
lahf
sbb
les
das
or
xchg
fstl
cli
dec
cld
adc
scas
xchg
jge
cwtl
stc
fdivrl
add
cmp
or
fidivs
sub
jp
sahf
mov
inc
sub
lds
movsl
fstpl
shl
dec
lahf
xlat
cs
call
test
mov
and
fldcw
js
mov
pop
enter
mov
xchg
shll
dec
xchg
movsl
fisttpl
rcrb
pop
loop
pusha
out
dec
mov
sbb
mov
push
jno
std
mov
iret
int
out
inc
push
stc
fisubrl
lret
dec
movsb
sbb
adc
jb
sarl
pop
mov
pop
fsts
icebp
pop
lahf
push
xchg
mov
sbbl
divl
pop
xchg
mov
loopne
sar
dec
bound
mov
loopne
pop
push
add
mov
xor
loop
mov
adc
frstor
sub
mov
gs
pop
shll
mov
cmp
dec
inc
jle
xlat
xchg
mov
imul
adc
push
push
dec
jge
sbb
jae
inc
loope
sub
scas
cmp
es
mov
mov
cmp
sbb
ret
pop
and
stc
add
mov
cmp
push
mov
dec
sbb
je
hlt
das
imul
adcb
pop
add
outsb
xor
sti
mov
and
mov
mov
or
and
mov
ret
out
or
int3
add
pop
cs
aam
filds
and
lods
lods
inc
add
imul
and
adc
cmpsl
loop
push
or
mov
in
push
ss
ljmp
mov
out
lcall
loopne
insb
bnd
dec
int
sub
jle
inc
popl
test
loopne
cmpl
fsubs
inc
mov
jb
aaa
adc
xor
mov
push
mov
in
stos
shlb
cmp
fmuls
sub
mov
mov
arpl
mov
pop
inc
insb
jp
cmpsb
push
pop
add
xchg
sbb
icebp
mov
mov
jl
and
jae
scas
scas
std
mov
into
cmc
sub
push
enter
jmp
mov
add
addr16
sti
dec
ficoml
stos
sbb
jge
popa
lock
out
dec
scas
loope
mov
dec
dec
mov
les
icebp
push
mov
popa
add
sbb
out
sub
mov
mov
pop
sbb
push
jmp
aam
pop
pop
jge
js
jge
cltd
into
mov
fdivl
movsb
dec
mov
and
test
xchg
and
int3
sar
loopne
jle
fdivrs
test
movsl
push
or
test
mov
in
add
icebp
imul
lcall
fwait
pop
imul
imul
into
xor
push
fcomps
mov
js
xchg
xchg
fimuls
cld
jb
orb
adc
pop
or
lock
jno
and
pop
xor
cmp
mov
mov
jg
not
pushf
mov
subb
inc
loope
lea
pop
jbe
xor
adc
inc
jmp
gs
movsl
fsubrs
mov
movsl
and
sub
jp
ds
jo
hlt
pop
mov
mov
or
jne
mov
loop
cmp
imul
jge
mov
mov
movsb
xlat
inc
jno
mov
jne
sbb
push
kmovw
movb
test
lods
nop
insb
imul
fcom
dec
mov
hlt
test
push
imul
scas
fnstenv
inc
jo
cmc
mov
rclb
adc
jge
push
jae
pop
xchg
std
call
stc
add
push
mov
movsb
jb
movsl
insb
fcomps
sbb
adc
push
ficoml
in
ret
adc
adc
sbb
dec
mov
shll
jnp
sub
xor
int
fcomi
dec
sbb
lock
mov
in
pop
sbb
mov
push
mov
shlb
lret
shll
xchg
inc
rorb
cwtl
and
mov
ret
mov
das
or
sbb
lea
pop
add
out
cmp
xchg
and
push
mov
pop
add
ficomps
sbb
fwait
stc
cmpsb
shll
shr
adc
cmpsb
xchg
out
jl
mov
or
jno
push
dec
sbb
and
rcrb
lods
in
ljmp
mov
repz
shll
loop
lds
push
fs
fstpl
sbbl
dec
fnstenv
add
ror
cld
mov
loopne
loop
ljmp
bound
pusha
mov
dec
mov
ljmp
lret
or
lock
into
cmp
cmp
daa
sub
mov
fwait
sbbl
sbb
pop
inc
mov
add
dec
es
add
out
mov
cmp
xor
leave
je
mov
jns
pushf
shl
je
or
idiv
xchg
fsubrs
dec
and
into
xchg
scas
push
inc
and
test
pop
pop
inc
mov
sub
push
lret
sahf
out
js
inc
inc
into
cmp
cld
insl
in
lods
mov
push
lahf
ficompl
jge
jbe
lea
into
mov
dec
outsl
xchg
out
insl
decl
jl
mov
adc
subb
ja
xor
lea
pop
adc
xchg
jo
jo
sarb
pop
or
cmp
cmp
xchg
movsb
dec
or
xchg
std
push
out
xor
pop
fstps
loope
and
ja
mov
sub
mov
xchg
scas
loopne
std
stos
or
lea
les
fucom
xor
add
sub
and
add
inc
aam
test
in
inc
mov
pop
add
repnz
adc
out
pop
pop
mov
xor
aam
mov
shl
ja
adc
dec
jae
mov
insb
cmpsb
movsb
stos
mov
xor
int3
adcb
testl
xor
movsl
inc
loopne
push
push
roll
sub
adc
or
xchg
int
xlat
xchg
inc
sarb
push
cmp
add
in
pop
shlb
mov
xlat
adc
jnp
cmp
xor
pushf
pop
cmp
lret
ret
sbb
loop
push
ret
mov
push
sbb
jecxz
ljmp
mov
mov
xor
repz
stc
sub
mov
add
inc
repnz
pop
mov
data16
pop
ficomps
xchg
jae
and
and
pop
hlt
push
test
xchg
pop
xor
test
xlat
dec
xor
cmp
aaa
mov
cmp
addb
shlw
rcrl
add
inc
das
mov
loopne
sub
lcall
jno
dec
xchg
arpl
mov
insb
pop
mov
jo
jl
test
inc
nop
or
jge
mov
test
imul
lahf
mov
mov
insb
and
cltd
ret
xchg
mov
pop
les
lcall
mov
shlb
fnstsw
ja
adc
fcomip
jb
mov
mov
mov
mov
add
inc
push
or
or
sbb
cwtl
mov
cmc
jae
in
add
outsb
mov
les
xor
lahf
popa
mov
lock
ljmp
int
fcompl
push
mov
int3
mov
cld
push
jecxz
ds
pop
add
test
push
mov
add
pop
xchg
xor
cmp
sti
stos
xchg
fcmovnbe
jo
fimull
addr16
sbbl
and
int3
and
bound
imul
and
sbb
aas
sbb
add
inc
dec
clc
push
pop
out
mov
jne
das
ret
lahf
push
and
jno
into
push
pop
stos
dec
pmaxub
int3
inc
data16
inc
or
jl
pop
push
inc
pop
push
xchg
jg
xor
je
lcall
sti
xor
xchg
and
movsl
sub
xor
cli
leave
dec
jl
lods
loope
int
vshufps
test
lret
stc
pop
inc
and
sti
outsb
out
sbb
call
and
lock
movsl
fistps
sar
cmp
jp
inc
jmp
addb
xor
movsl
icebp
into
sub
and
imul
mov
mov
fs
push
ljmp
mov
xor
inc
mov
inc
cli
aas
add
adc
push
push
fs
lock
aaa
rcrl
insb
inc
insl
arpl
mov
out
pop
dec
movsb
xchg
jecxz
cmp
popf
repz
pop
arpl
lds
inc
jmp
fidivrl
cmp
push
stc
test
imul
or
and
aaa
pop
mov
stos
jl
inc
sti
pop
mov
movsb
add
inc
sbb
out
inc
sub
out
ret
sti
mov
repnz
push
or
adcb
repz
sub
int3
roll
lods
aas
xchg
push
lahf
rcrb
lcall
add
ffreep
push
lcall
mov
add
sub
cmpsb
cld
mov
neg
and
das
and
pop
imul
jb
dec
out
arpl
xchg
jno
sub
addl
in
repnz
int3
and
add
push
xchg
shr
imul
cmp
and
and
in
ljmp
mov
lcall
fildll
sahf
xchg
add
jns
repnz
stos
dec
or
dec
popf
or
enter
imul
out
lods
out
into
inc
fsub
ret
and
stos
push
in
inc
movsw
out
mov
fisubs
mov
test
frstor
clc
inc
lret
mov
outsl
shl
sti
movsl
bnd
testb
sbb
insl
loope
aad
outsb
call
push
pop
cmp
into
push
idivl
push
movsl
sti
fsub
push
mov
sbb
and
orl
test
lea
shrb
lcall
icebp
cmp
cltd
xor
cltd
scas
icebp
test
adc
int
clc
jns
and
add
stos
imul
sbb
add
xor
cmp
mov
sub
push
dec
mov
lret
and
xor
cmp
xchg
lods
jl
subb
pusha
and
adc
imul
xorl
push
scas
in
push
push
mov
lss
pop
and
sub
out
push
sti
test
xorb
add
mov
and
rolb
jns
enter
sub
sbb
pop
js
add
jnp
sarb
mov
clc
popf
pusha
jae
aad
adc
xchg
inc
mov
add
inc
dec
aas
ljmp
jecxz
sbb
xchg
sahf
mov
hlt
mov
jecxz
clc
fnstcw
fidivrl
bnd
ret
rolb
movsb
aas
pop
xor
imul
sbb
in
test
and
push
mov
scas
std
jne
inc
test
fidivrl
bnd
ret
rolb
shll
ss
dec
icebp
sub
out
movsl
sahf
cmc
xor
pop
inc
arpl
adc
aas
pop
lock
test
nop
sub
xchg
push
sub
lods
xor
jl
ret
xchg
xchg
rol
sbb
fwait
xor
or
mov
push
cmpsb
or
sub
jae
xchg
adc
and
sbb
js
dec
inc
ret
mov
sbb
lret
mov
aad
xchg
mov
inc
pop
fs
inc
stos
mov
adc
push
mov
bound
xor
fldenv
add
pusha
hlt
outsl
hlt
in
les
inc
sbb
nop
pop
aaa
jo
cltd
push
xor
rcll
sub
test
pop
faddl
sbb
xchg
insl
adc
testb
pushf
xchg
ret
dec
cli
fwait
mov
cmp
sbb
push
xchg
cmc
pop
mov
fmul
imull
xor
xchg
dec
ljmp
cltd
dec
repz
fisubs
mov
cmp
mov
mov
insb
push
iret
mov
fstpt
cli
xor
lock
cmpsl
ljmp
enter
fwait
lods
adc
pop
cmc
ljmpw
movsb
push
jb
sub
jae
call
push
daa
cmp
rclb
cld
cwtl
jmp
testb
cmp
cwtl
xchg
je
sub
insb
lcall
es
push
ss
mov
xchg
je
notb
jge
das
add
pop
cli
add
sarb
cs
xchg
or
mov
inc
mov
call
fucom
adc
cli
aaa
xstore-rng
cmpsl
add
sti
flds
je
adc
decl
notb
test
push
outsl
fsubrl
out
lods
ret
test
clc
adc
clc
cs
imul
mov
xchg
jbe
add
mov
mov
inc
arpl
push
enter
mov
push
mov
es
sub
inc
inc
xor
mov
xlat
and
dec
icebp
mov
lcall
pop
push
jne
aad
or
add
scas
scas
sbb
imul
xchg
rcrl
push
stos
jl
inc
mov
loopne
pop
mov
push
sbbl
push
stc
mov
imul
or
and
cmp
lock
loop
xchg
fisubrs
jb
scas
sbb
mov
xorl
dec
mov
xchg
mov
movsl
ror
test
cmpsl
insb
in
add
jne
popa
loopne
and
stc
test
push
jecxz
loope
xchg
enter
adc
cld
iret
inc
and
pushf
jae
or
subb
inc
push
shr
lret
mov
fs
cmc
inc
push
add
das
cs
rorl
rorb
les
adc
stos
cmp
enter
jb
xor
dec
icebp
and
mov
mov
push
popa
lea
repnz
and
dec
xor
ljmp
push
add
jmp
xchg
test
lret
sub
xchg
add
arpl
mov
sub
pusha
sbb
sbb
movsb
mov
mov
xchg
mov
inc
cltd
out
xchg
pop
and
je
add
mov
or
cmpsl
pop
lds
xchg
jnp
pushf
push
jge
jle
or
pop
xor
pop
jmp
dec
mov
jnp
scas
lcall
xor
sbb
mov
sarl
jnp
xchg
and
jp
or
cmpsb
jecxz
fldcw
xabort
jle
mov
repnz
pop
mov
cmp
xchg
mov
dec
lret
dec
dec
and
enter
arpl
xor
push
jle
lods
and
dec
inc
test
sub
andl
sub
jo
or
dec
mov
adc
inc
repz
cli
lock
sbb
jne
sbb
sbbb
cmp
repnz
iret
mov
xchg
orl
xor
ret
and
jae
daa
xchg
sub
jbe
push
movsl
add
std
mov
xchg
je
test
arpl
sti
xor
fnstcw
dec
fsubr
aad
in
call
cmpsl
movsl
popa
icebp
pushf
mov
pop
sub
out
lcall
in
sub
scas
cs
sub
out
mov
int
or
mov
dec
dec
test
adc
test
push
mov
mov
hlt
ficomps
subl
aam
adc
imul
aam
loop
xor
xchg
ljmp
cmp
bound
xchg
add
push
sub
jb
daa
and
add
sarl
add
push
push
lret
push
stc
sahf
ljmp
ret
sub
adc
push
mov
push
mov
flds
mov
mov
cli
add
push
sub
push
cmp
mov
sbb
xchg
xor
mov
movsl
into
xchg
out
lods
out
dec
cmc
sub
sbb
repnz
sbb
xchg
xchg
imul
and
mov
mov
jg
sub
lahf
jmp
imul
push
jl
lock
and
enter
fidivrs
push
shr
cmp
or
push
es
cwtl
out
pop
int
and
out
jae
fwait
jp
dec
push
push
adc
cwtl
mov
mov
mov
clc
inc
jge
fsubrl
aad
imul
insl
pop
jno
mov
mov
pop
inc
jae
mov
cld
xchg
aaa
test
jbe
dec
jge
int3
sti
push
xor
gs
adc
out
or
loopne
fdiv
add
xlat
es
cmp
shrl
cmovp
and
xor
sbbl
xor
addr16
test
dec
xchg
pop
mov
xor
gs
cmp
testl
test
jae
jp
cmp
jecxz
in
ss
in
pop
jmp
jbe
out
mov
jecxz
cli
dec
cltd
xchg
rclb
and
jns
stc
xchg
aad
pushf
test
sbb
addr16
fidivs
jecxz
mov
xor
cld
cmpsb
imul
cmp
xchg
cmp
jbe
sub
xchg
call
inc
popw
pop
popf
xor
sub
mulb
loopne
cmp
out
add
repnz
out
test
mov
and
mov
sub
imul
jbe
inc
inc
inc
or
sub
out
and
xor
jg
movsl
outsb
pop
loopne
es
or
inc
fistpll
cld
jmp
lods
add
out
mov
sub
add
fstps
pop
repz
cmp
and
mov
ret
cmp
cmp
dec
xor
and
cmp
sub
pop
xchg
in
xor
mov
add
push
jg
cmp
xlat
lds
out
int
scas
jle
add
mov
rcl
popl
jle
repz
push
fs
or
sysret
dec
cmpsb
inc
sti
popa
std
sub
add
ret
popf
or
cmp
adc
ja
cmp
enter
or
bound
insb
popf
adc
popf
imul
mov
jmp
fiaddl
jae
movswl
or
mov
popf
jo
ljmp
fiadds
cs
icebp
pop
jle
loop
sub
pop
mov
xchg
push
xchg
push
stos
movsl
sbb
mov
jg
out
xor
dec
add
andb
leave
fnop
movsl
iret
repz
insl
div
test
fadd
add
shr
xlat
push
in
out
mov
pop
push
movsl
in
aam
xchg
outsl
jb
in
lods
lcall
fstps
xchg
sub
jae
rcll
mov
imul
and
sti
cmpsl
push
loop
push
dec
pop
push
sub
insb
lods
jo
ret
sahf
out
rorb
mov
outsb
inc
adc
or
push
cltd
mov
scas
mov
sub
sarb
adc
pop
jns
int
fisubrl
mov
sub
les
xchg
pop
dec
fistpll
pushf
adc
icebp
and
xor
test
adc
rcr
popa
mov
xchg
movsb
adc
or
push
test
adc
inc
xchg
jmp
xchg
cs
test
push
jne
mov
outsb
jbe
mov
in
push
cmp
test
adc
insl
rcrl
xor
xor
fmul
add
nop
or
rcrb
clc
jp
jbe
loop
bound
cld
movsb
xchg
mov
or
in
mov
idivl
sub
add
mov
dec
nopl
mov
dec
fcomps
mov
sub
add
sbb
je
cs
enter
pop
in
int3
push
mov
pop
xchg
pushf
rclb
push
icebp
pop
cltd
fstpl
push
int3
gs
bsf
jmp
popf
ds
sub
push
cltd
out
imul
dec
mov
fildll
neg
mov
mov
test
icebp
bound
rorl
popf
es
mov
imul
mov
dec
lahf
inc
xchg
mov
sbb
jg
and
lret
push
sub
xor
xchg
jno
mov
mov
dec
mov
xchg
add
nop
sbb
scas
pop
dec
inc
repnz
mov
push
pop
call
movsb
std
lds
jp
push
lods
lea
jp
xchg
add
out
pop
adc
cmp
in
sti
test
movsb
hlt
es
shl
out
lock
cli
push
cmp
es
sbb
pop
or
roll
frstor
andb
insb
sbb
jae
movsl
lock
xchg
mov
xchg
pop
xor
jae
stos
nop
out
jno
cwtl
xchg
mov
mov
jmp
call
sti
inc
ret
adc
sbb
pop
xor
dec
jnp
mov
push
dec
add
jno
dec
sbb
inc
inc
add
jb
or
xchg
adc
push
mov
nopl
fwait
sub
in
ljmp
outsl
jb
mov
pop
add
fdivr
adc
xor
hlt
adc
jnp
inc
xchg
xor
out
es
pusha
cmpb
pop
mov
lcall
lds
divb
cs
sbb
xchg
inc
mov
lahf
fistpl
aaa
sub
ja
pop
sub
inc
sti
int3
xor
sbb
scas
mov
rcr
xor
stos
mov
aaa
push
sbb
pop
out
mov
or
pop
push
punpcklbw
mov
aam
out
xchg
pusha
cltd
add
mov
test
sub
jmp
jg
cs
mov
pop
xor
shl
cmp
jae
iret
aad
outsl
inc
jle
push
xor
add
shrl
or
addb
jecxz
cmp
jge
cltd
cmpsl
lret
and
push
jo
push
call
sub
push
lock
push
loopne
cmp
test
insl
push
rcr
push
daa
mov
jge
adc
jp
fidivrs
sti
add
arpl
cmp
sub
add
hlt
insb
sbb
fbstp
scas
repnz
es
mov
inc
lret
pop
mov
lods
nop
sbb
inc
stos
lcall
stos
mov
mov
xchg
pop
fxch
je
jecxz
sub
jae
in
xchg
push
stos
in
sub
arpl
push
movsb
sub
lds
divb
pop
mov
test
mov
or
int
xor
xor
dec
xor
adc
cmp
add
shll
lcall
mov
push
hlt
ljmp
add
ds
fcom
xchg
inc
add
data16
push
pop
inc
xorl
pop
add
push
push
dec
mov
xchg
dec
fstl
and
adc
mov
add
inc
pop
add
push
xchg
jle
lods
jb
or
nop
fdivl
into
hlt
lret
cli
fidivrs
xchg
add
cli
aaa
aaa
popa
mov
inc
pop
cmp
andb
mulb
and
clc
das
mov
orb
or
fidivl
outsl
hlt
repz
out
dec
dec
pop
sarb
mov
or
into
and
and
movsl
mov
mov
insb
jo
xor
repz
xchg
lds
aaa
or
pop
scas
mov
test
popf
jns
or
fistps
dec
pop
hlt
bound
mov
xlat
and
jbe
xchg
cmp
and
popa
lcall
adc
pop
movsb
pop
sarl
push
rorl
jbe
gs
mov
je
sbbl
sub
leavew
jae
mov
in
inc
ja
mov
add
xchg
add
push
stc
inc
or
inc
pop
pop
jmp
movl
pop
pop
adc
pop
or
data16
divl
add
scas
mov
push
sbb
test
outsl
xor
mov
sub
shrb
jo
adc
and
adc
insb
push
movsb
enter
xchg
pushf
adc
lock
rol
mov
adc
push
pop
pop
rolb
testb
lods
bound
push
iret
and
idivb
pop
ss
adc
out
test
mov
cmp
fistl
arpl
cmpb
int
fdivs
pop
inc
sbb
mov
scas
js
mov
cli
movsb
in
aaa
stos
int
nop
sti
stos
or
cwtl
dec
inc
rcrl
mov
pop
das
mov
mov
icebp
inc
push
rorl
and
add
adc
pusha
add
aam
cwtl
loop
jne
pop
aaa
dec
lret
mov
shlb
in
stc
nop
pop
pop
outsl
mov
stos
xlat
push
xchg
inc
sbb
push
scas
ret
repnz
mov
int
or
mov
sahf
cmp
xor
gs
data16
sbb
scas
and
xorb
outsl
push
jnp
ja
test
xor
mov
lahf
mov
jns
mov
dec
pop
xchg
loop
faddp
lcall
fiadds
outsb
mov
int3
cmp
ret
es
jge
dec
outsb
and
xchg
inc
push
xchg
stos
dec
add
jbe
roll
pop
inc
ds
xor
test
xorl
mov
push
lret
mov
fs
std
inc
jge
and
push
xor
jl
or
aam
imul
sti
cmc
and
mov
dec
arpl
sub
insb
push
push
lds
jecxz
scas
out
subb
clc
adc
ret
lods
dec
rcll
stc
xor
push
mul
xchg
test
sub
dec
jns
mov
xor
test
mov
push
out
sub
nop
dec
sbb
pop
stc
jge
in
dec
push
cmp
cmp
pop
shll
ja
push
xchg
mov
xor
out
movsl
fwait
cwtl
repnz
mov
outsl
fs
push
outsb
outsl
pop
adc
icebp
imul
cwtl
test
dec
push
pop
and
jecxz
cli
dec
sti
jb
hlt
call
fdivs
inc
jle
loope
aas
mov
cmp
frndint
sbb
mov
fs
aad
cmp
daa
jno
lcall
mov
push
add
addb
push
dec
gs
sbb
aam
aam
xlat
ror
dec
test
idiv
jb
subb
mov
adc
cmp
popf
adc
movsb
inc
stos
xchg
lret
mov
pusha
aad
add
pop
push
xor
movsb
sub
mov
push
lret
and
xchg
pop
inc
pushf
das
nop
jae
das
push
addl
and
loop
lds
mov
mov
in
cmp
adc
xor
mov
in
add
jl
dec
push
sbbl
sbb
dec
sbb
aas
shrb
sub
mov
sbb
cmc
movsl
fdivrs
push
mov
push
sbb
jnp
in
mov
jne
add
in
out
add
cmp
or
dec
out
mov
loop
test
push
aaa
dec
bound
std
mov
jne
mov
nop
inc
fdiv
jb
cwtl
sub
rcrb
mov
pop
data16
loop
inc
lds
out
xchg
outsb
inc
lahf
paddb
into
lock
mov
or
xchg
cmpsl
cmp
lods
cmp
jnp
add
sub
push
dec
jns
imulb
mov
cmc
jne
cmc
push
pavgw
mov
popf
aas
push
cli
pushl
mov
mov
int3
mov
ljmp
out
addr16
lcall
sbb
cli
and
push
cmp
subl
pushf
xor
testb
mov
and
mov
mulb
aas
mov
cmp
frndint
sbb
mov
fs
aad
cmp
daa
jno
add
push
mov
stos
lods
ret
imul
daa
jecxz
adc
jae
loopne
movl
sbb
fisubl
fiadds
dec
xor
mov
jmp
jo
call
push
xlat
cmpb
imul
dec
jle
lods
fisttpll
mov
fdivr
ss
mov
inc
push
les
cmp
in
cmp
int
lea
stos
fcmovb
cmpsb
aam
sar
lds
outsb
xchg
sbb
test
and
dec
mull
ljmp
movsb
or
cmp
mov
cmc
lea
fstl
cmp
mov
int3
mov
bound
popa
mov
jb
daa
scas
xor
aam
dec
lods
mov
xlat
or
lea
imul
push
inc
je
outsb
fistpll
cli
mov
jl
mov
data16
push
and
clc
pop
and
jnp
xchg
cli
pop
dec
inc
and
cld
lret
aam
inc
aam
sub
mov
push
cmp
stos
xlat
pop
out
inc
enter
imul
pop
scas
popa
xor
xor
jp
sbb
aad
std
sbb
mov
pushf
stc
and
mov
imulb
or
xor
jns
bound
nop
mov
inc
aad
sub
call
xchg
and
rcrb
sbb
sub
jle
xor
dec
mov
xchg
lds
mov
into
xor
sub
and
push
dec
nop
out
jbe
mov
sahf
add
jp
mulb
aaa
push
test
jle
flds
movsl
xchg
pop
fwait
sti
push
sub
sbb
mov
pushf
jmp
fucomi
scas
aas
xchg
rcrb
inc
cmp
pop
or
mov
jecxz
int3
out
dec
cmp
xor
lock
sbbl
xor
sar
cmp
jl
fmuls
xchg
nop
mov
lock
sar
pop
push
xchg
push
push
xor
push
fsubs
pop
mov
xchg
lcall
jo
fwait
inc
test
ret
loopne
imul
xchg
out
push
pushw
jge
lea
jb
mov
loop
and
pop
repz
or
jecxz
ret
and
xorb
add
push
aad
fiadds
rorl
xchg
sarb
movsb
mov
fistps
out
lret
xor
jbe
xchg
fadd
pop
jl
aas
mov
ficompl
mov
arpl
in
cmp
movsb
mov
xlat
jl
mov
or
adc
sbb
jle
mov
sbb
shl
shrl
cmp
mov
adcl
pop
imul
jmp
sbb
mov
sar
dec
into
lock
mov
nop
push
bound
cmp
cmp
std
mov
leave
xlat
icebp
inc
xor
popf
sbb
aam
mov
sbb
das
xor
cld
addr16
mov
imul
lret
mov
mov
popw
mov
jnp
ja
sbb
push
or
or
sbb
xlat
imul
mov
dec
pushf
push
pop
xchg
xor
lods
mov
test
lods
sub
pushl
fstpl
sub
dec
clc
cld
jge
sbb
adc
jl
jo
cmpsb
insl
xlat
mov
ret
sbb
xlat
call
and
jne
push
leave
sub
fmuls
imul
dec
lods
mov
mov
jo
in
add
movsb
inc
jge
adc
movl
push
jecxz
aaa
fildl
filds
stc
sub
in
lds
cmp
aaa
loop
cmpb
bound
dec
out
lahf
push
jg
shll
mov
cwtl
inc
jb
and
fiadds
adc
sti
mov
cmp
mov
jmp
std
pop
or
std
andl
call
aaa
popf
or
fcompl
mov
movsb
and
add
scas
std
jp
ss
je
cs
mov
mov
jo
je
ficompl
sbb
mov
sbb
lret
lds
in
or
int
les
sti
push
push
fs
enter
out
cmp
add
jge
sti
fiadds
icebp
jle
mov
push
shl
test
rclb
insl
xchg
movsb
not
fildl
cmp
pop
mov
pop
push
cmp
mov
lock
not
pop
out
jo
jecxz
sti
pop
inc
pop
xchg
loope
inc
icebp
repz
push
mov
jmp
movswl
xor
lcall
fcmovnbe
arpl
icebp
push
into
fiaddl
lock
and
jnp
movsb
mov
mov
mov
or
jmp
shlb
xor
push
inc
sbb
insb
test
sbb
sub
cmc
pop
insl
xchg
into
adc
pop
pop
sbb
mov
in
xor
push
enter
lock
lds
xchg
int3
xor
pop
movsb
push
xchg
pushf
and
lcall
mov
dec
inc
push
xchg
push
mov
in
xor
push
cmpsl
cwtl
mov
pop
sub
sub
xor
bound
or
into
and
loop
orl
xlat
xchg
cwtl
ljmp
jecxz
add
xor
mov
mov
mov
int
cmp
push
lods
cmpsb
or
pop
pop
mov
pop
lods
mov
xchg
data16
loopne
cmpsl
mov
dec
loope
lods
mov
out
dec
sarb
pop
cmpsl
mov
sub
iret
pop
dec
mov
rcll
mov
int3
jne
or
loope
add
or
mov
or
ret
and
fdivp
pop
xor
mov
cmpsl
stc
fwait
or
xor
pop
cmc
hlt
push
push
sbb
aaa
or
leave
push
adc
pop
or
ret
shlb
das
imul
mov
je
pop
gs
or
jecxz
and
scas
int
pop
cwtl
push
xchg
xchg
sbb
stc
sbb
and
fmuls
packuswb
mov
fildl
out
sbb
inc
or
scas
adcw
arpl
xchg
push
and
push
sbb
ja
scas
mov
pop
adc
mov
xchg
xchg
data16
dec
jmp
fstps
ret
lods
xor
aam
mov
xchg
pop
pushl
scas
dec
xor
test
lret
test
and
leave
gs
in
mov
iret
xor
sahf
es
adc
mov
lcall
aas
loope
cmp
outsb
fwait
into
sub
or
sub
dec
je
add
sub
xchg
xor
adc
pop
test
push
xlat
push
dec
cltd
add
jno
stos
lods
hlt
loopne
repz
add
lret
fisubrl
fs
movsl
or
xchg
mov
push
scas
test
add
jmp
cs
dec
pop
je
and
cmpb
jae
aam
mov
add
adc
cmc
mov
lods
jbe
pop
inc
push
xchg
push
lret
fwait
imul
out
das
adc
movsl
xchg
js
xchg
int
mov
push
shl
cli
or
jmp
mov
fwait
add
and
fwait
xorl
out
xchg
adc
cmp
mov
mov
jnp
aam
dec
hlt
es
loop
cwtl
pop
fstpt
enter
add
shll
nop
or
out
xchg
push
sbb
jl
mov
pop
loope
pushf
mov
pop
jne,pn
push
mov
test
icebp
lahf
lock
mov
das
xorl
scas
das
jb
cmp
jnp
push
divb
push
sbb
leave
data16
jo
xchg
dec
push
dec
add
clc
bound
or
and
enter
jo
jge
mov
push
cmp
sbb
mov
cltd
inc
cmp
ror
mov
icebp
cmp
mov
outsb
lods
or
aam
cmp
adc
aaa
add
jmp
mov
add
xchg
xchg
jmp
hlt
push
or
push
sahf
jae
loop
adc
repz
lods
mov
inc
loopne
fwait
or
bound
adc
sub
mov
mov
movsb
pop
fistpll
mov
fs
add
sbb
loope
inc
or
pusha
mov
pop
movsb
outsb
pop
and
mov
inc
pop
mov
or
dec
dec
out
jo
jae
ja
sub
adc
mov
xchg
xlat
or
dec
ss
popf
call
aaa
add
int
mov
push
mov
stos
test
sub
or
lock
xor
fsubp
addr16
xlat
push
data16
cmpsw
xchg
ds
ror
dec
aad
pop
arpl
jmp
lahf
push
mov
mov
test
sub
xlat
pop
lret
test
daa
push
ds
mov
lcall
subps
pop
mov
cltd
mov
xchg
push
dec
outsl
loopne
cmc
aas
jecxz
cmpl
fnsave
xchg
inc
sar
fnstcw
push
stc
adc
stos
push
sbb
iret
xchg
mov
cltd
je
jmp
sahf
lods
sahf
mov
add
jle
or
popf
jle
dec
decb
pop
xlat
mov
and
outsl
push
mov
mov
cmp
ss
lods
jge
popf
mov
sbb
popa
cs
push
test
inc
xor
loope
add
mov
xchg
sbb
or
mov
add
push
cmp
movsb
cmp
push
push
mov
mov
fnstsw
adc
sbb
adc
push
aam
jge
leave
inc
sub
mov
in
insb
mov
dec
mov
pop
sti
mov
xlat
sbbb
cmpsb
or
call
lcall
cmp
lret
pop
test
jb
sti
int
mov
fstps
adc
fimuls
mov
inc
pop
mov
ret
jle
paddq
mov
xchg
push
sahf
aas
mov
sub
xchg
sarl
adcl
jne
leave
lock
jge
xchg
movl
mull
dec
sti
daa
scas
xor
inc
jns
pushf
xlat
scas
jno
mov
mov
push
and
js
mov
xchg
xor
rcrb
mov
dec
or
xchg
sbb
add
clc
cltd
dec
add
sbb
mov
add
call
bound
add
pushf
pop
mov
loope
xchg
push
dec
outsl
loopne
cmc
aas
jecxz
adcl
adc
int3
fidivs
jne
xor
add
aaa
mov
rcrl
push
cs
fdivrs
popl
mov
fisubl
stc
out
push
or
jae
push
lahf
jg
mov
out
add
adc
add
xlat
or
jns
xor
movsb
cltd
inc
jecxz
push
shlb
mov
leave
aam
mov
sbb
sbb
mov
imul
mov
pop
mov
outsl
stos
inc
adc
push
test
pop
xchg
nop
mov
andl
xchg
adc
add
or
jne
sbb
popf
jmp
test
xchg
aad
jg
vandpd
fcomps
ds
jo
pop
cmp
call
xchg
icebp
xlat
inc
sub
sbb
mov
cmpsb
xchg
pop
in
js
cltd
aad
adc
mov
out
pop
shll
push
iret
sbb
pop
adc
testl
sub
lret
mov
sahf
sbbl
cmp
js
jge
fs
test
mov
or
aam
or
jae
cmp
add
xor
push
rcll
inc
nop
pop
and
data16
js
jg
xchg
pop
into
pusha
sub
jecxz
mov
mov
or
in
nop
mov
mov
loopne
cmp
ret
pop
hlt
adc
mov
scas
cmp
fistpll
cmc
sarb
addr16
nop
fwait
lock
inc
iret
mov
hlt
ret
das
mov
cmp
adc
or
test
dec
jnp
sub
add
sti
or
mov
xor
call
jae
mov
nop
lret
aam
mov
mov
hlt
xlat
sbb
dec
jae
mov
call
shl
arpl
popf
and
sahf
cmpsb
pop
mov
insb
arpl
test
xchg
ja
out
xchg
pop
cmp
add
test
dec
or
pop
adc
lahf
sub
std
shrb
dec
pushf
fildl
sub
xchg
leave
out
paddsb
mov
prefetch
jmp
push
inc
lods
adc
pop
mov
sbb
xchg
fbld
pop
mov
mov
cltd
test
inc
or
sbb
dec
hlt
push
mov
cwtl
or
daa
sub
sbb
sub
jge
mov
orl
sahf
sbb
and
cmovle
fnsave
dec
popf
jnp
pop
mov
imul
and
ljmp
outsb
jle
stos
jl
inc
jo
and
or
adc
rcr
push
mov
push
cli
and
xor
in
pop
movsb
jp
shll
mov
loopne
mov
les
xchg
adc
enter
fucomp
sbb
out
adc
les
enter
cltd
cmp
gs
add
add
scas
push
jl
lds
jg
xlat
fwait
push
sub
test
movsl
call
xor
fiaddl
iret
test
xchg
shr
mov
mov
shr
cmc
mov
mov
dec
jmp
sub
pcmpgtb
ss
cmp
repnz
xor
jno
jb
dec
aam
popf
sub
out
or
sbb
cld
sbb
ror
arpl
xor
fildll
push
pop
mov
xor
pop
push
push
jle
sahf
push
mov
in
loope
and
and
cmp
or
jmp
xor
out
add
adcl
and
jae
push
xchg
ss
repnz
inc
call
and
adc
lock
int3
pop
and
aad
data16
loope
pop
int
into
pop
or
int
ficoml
jb
cmp
xchg
mov
cld
and
negl
enter
bound
push
cltd
mov
mov
jg
and
sub
push
call
push
add
push
jg
adc
mov
sahf
or
int
test
jno
je
sahf
mov
and
push
inc
inc
sub
es
mov
repz
pop
mov
mov
adc
or
je
aam
iret
or
or
inc
loop
bound
and
push
and
sti
jbe
jb
cwtl
fdiv
xor
pop
ljmp
jp
iret
jne
stc
adc
push
mov
xchg
adc
ljmp
jecxz
and
inc
mov
imul
imul
in
jl
sub
xchg
jp
adc
lods
sbb
sbb
lea
adc
xchg
repnz
nop
pusha
xlat
lds
lret
adc
sub
js
cs
les
jg
ret
int3
xor
arpl
sub
inc
xor
dec
pusha
nop
lock
adc
and
sbb
inc
sub
xchg
xchg
mov
mov
mov
hlt
mov
pop
dec
pop
cltd
jns
jmp
in
movsw
xchg
mov
add
cmpsb
add
jg
inc
ljmp
pushf
or
rcr
idiv
xchg
and
aaa
dec
cmpsl
sub
mov
loopne
sub
jns
push
jb
mov
jae
adc
mov
xchg
or
mov
popf
adc
add
ret
cli
jnp
xchg
lods
stos
inc
out
adc
add
push
leave
and
push
ljmp
shrl
xchg
lods
repnz
and
leave
mov
mov
pusha
jp
ss
int
lods
jecxz
push
rclb
les
sub
or
sbb
pushl
mov
pop
sbb
dec
out
dec
mov
mov
cs
and
fiadds
cmp
xchg
mov
ljmp
sahf
or
test
or
fsubrl
jl
jge
push
les
es
push
insb
adc
inc
icebp
ret
nop
ffree
ret
fisubl
push
aaa
push
aad
mov
in
mov
repnz
sti
sbb
stos
insl
add
out
gs
xchg
cmc
and
and
push
cmp
sbb
adc
les
cmp
ret
mov
inc
fwait
stc
es
jle
jmp
call
loopne
mov
mov
mov
mov
sub
popl
sbb
clc
mov
inc
or
mov
push
int3
jge
jno
adc
dec
xor
and
xchg
mov
or
jp
cmp
mov
dec
jnp
test
xchg
and
cli
cld
out
nop
cmp
adc
call
shlb
mov
xchg
mov
movsl
outsb
mov
pop
mov
mov
clc
xchg
lds
sbb
mov
stc
pop
out
iret
jge
mov
jns
mov
pop
iret
int
dec
insl
jle,pn
mov
inc
mov
cld
jmp
hlt
mov
imul
leave
inc
aam
clc
jmp
lock
mov
fisttpl
inc
dec
push
div
cld
add
lret
mov
push
out
mov
popa
jnp
pop
fsts
push
loop
ficoms
pop
sti
sbb
push
lahf
jg
and
lret
fsubrs
xor
push
mov
incl
call
int3
mov
call
adc
and
xchg
xchg
test
hlt
cltd
lock
xor
fxch
loopne
and
ror
fisubs
movsb
push
inc
je
pop
sar
xor
jge
dec
or
dec
inc
xchg
xor
add
fwait
mov
inc
add
mov
icebp
outsl
fsubr
iret
mov
adc
in
loop
jg
cmovne
cmpsl
rorb
ds
in
cmc
fnsetpm(287
call
fs
or
stos
and
pushf
pop
lahf
sarl
loopne
adc
je
jne
pop
or
test
pop
jae
out
pop
sbb
pop
xlat
push
ss
mov
loop
repz
dec
std
icebp
mov
add
cmp
jmp
movsl
lret
psubusb
outsb
pop
lret
and
and
sub
jmp
icebp
clc
cmp
pop
cltd
outsb
mov
xchg
sub
push
std
fs
insb
mov
enter
decl
mov
pushf
pop
insl
fsubrl
mov
test
inc
mov
dec
popf
mov
or
cli
test
push
mov
mov
je
jo
adcb
leave
mov
mov
movsb
sarb
or
out
rorb
add
mov
mov
les
sub
stos
jae
aad
in
dec
movsl
int
xor
mov
jg
mov
inc
or
sub
scas
mov
xor
in
sub
ja
jnp
add
dec
fistl
pushf
arpl
popf
aas
movsl
pop
or
stos
xor
pop
ret
mov
or
mov
mov
lods
lahf
aad
jp
jp
and
mov
adc
rorl
xor
sahf
mov
lods
fdivrl
addr16
fidivrs
out
stos
push
mov
pop
lods
int
loop
xchg
dec
cld
inc
clc
add
int
adc
mov
xchg
jnp
repz
js
inc
insb
dec
mov
outsb
ss
add
xchg
outsl
clc
iret
mov
jne
clc
sarl
aaa
and
stc
int
mov
stos
dec
push
xchg
add
xchg
cmp
and
xchg
mov
mov
mov
loope
popf
add
adc
ja
scas
outsb
and
or
imul
push
xor
and
out
cmp
add
and
sbb
mov
mov
insb
ficompl
ss
in
js
jns
push
insb
dec
fs
stos
xchg
in
fisttps
push
sbb
jl
cltd
xchg
add
sub
xor
les
pop
add
jmp
jnp
cmp
lds
notb
mov
arpl
xor
stos
call
cltd
test
adc
pop
jmp
stos
sahf
pop
xor
dec
mov
mov
mov
jl
hlt
cmp
clc
mov
cld
mov
pop
insl
jmp
fsub
repz
popa
mov
mov
add
mov
shll
ss
pop
push
fwait
lret
pop
xchg
lcall
cmpsb
loopne
inc
out
mov
lds
push
pushf
in
stc
push
xchg
jae
cltd
pushf
adc
dec
mov
bound
fcmovnbe
shl
sub
inc
push
loop
dec
ret
and
or
orl
movsl
ja
push
cli
pop
adc
popf
fistpl
sbb
jl
fnstsw
notb
xchg
cmp
cmp
jp
mov
jecxz
sub
inc
in
insb
fsubl
push
xchg
dec
and
cmpl
sbb
inc
stos
cmpsl
cmp
mov
out
sarl
sub
ss
push
sub
nop
pmulhw
xor
dec
xor
add
mov
add
loopne
adc
ljmp
cmp
fcmovnb
cmc
js
dec
or
leave
mov
dec
or
fmuls
mov
inc
mov
jge
sub
pop
hlt
shrb
das
push
je
cmp
js
fcomps
jl
xchg
cmp
mov
jo
data16
jbe
movl
fidivl
mov
or
cmp
outsl
out
pop
fs
test
adc
mov
cmp
lds
aam
mov
stc
xor
jbe
and
stos
enter
cmpsb
push
jmp
sub
outsb
test
push
inc
outsl
jg
xchg
leave
out
inc
cmp
jb
decb
push
imul
int3
in
xchg
push
sbb
mov
mov
cmpsb
inc
and
into
popf
sbb
ljmp
xchg
mov
icebp
mov
cld
xchg
mov
sbb
leave
iret
xor
mov
xchg
cs
mov
and
shr
repz
and
cmp
fimull
out
shll
sbb
sti
in
sub
jle
popl
aad
pop
pushf
fyl2x
jne
mov
fisttps
test
and
movsl
adc
mov
push
cmc
je
mov
lds
sbb
call
cmc
in
addr16
testl
sbb
xchg
ds
and
hlt
xor
lret
or
mov
xor
push
xor
push
inc
jmp
cmp
pop
xor
mov
jg
adc
inc
pcmpeqw
xor
cmc
scas
add
stos
dec
and
ret
push
pop
outsb
xchg
lods
jno
sub
stos
jle
fldenv
xchg
int
lret
inc
sti
sub
and
loop
lock
pop
or
mov
vpmullw
dec
jle
mull
fdivrs
cmp
mov
pop
scas
xor
lea
enter
push
fisubrs
adc
mov
jl
ja
adc
cmc
daa
xor
mov
sub
mov
test
js
xor
insb
add
cmpsl
mov
lods
push
fiadds
mov
test
jno
dec
dec
insl
les
jg
or
dec
stos
jne
sbb
ret
or
call
xor
hlt
cmpsl
les
loop
addr16
xor
sub
mov
sub
ds
mov
sar
or
or
jno
or
push
outsb
jns
pop
add
inc
outsb
enter
addr16
mov
sbb
dec
mov
ret
shrl
pushf
in
jnp
insl
es
frstor
push
ret
mov
mov
scas
leave
mov
iret
xor
cltd
pop
sub
jmp
int3
mov
cmpsb
sti
sub
mov
inc
js
int3
insb
mov
aad
scas
int
jg
adc
mov
fadds
fmul
dec
mov
in
jp
std
out
jmp
fdivl
mov
dec
dec
mov
mov
push
hlt
xor
inc
pop
pop
stc
punpckhdq
jo
mov
insl
sbb
icebp
je
pushf
jno
aaa
imul
inc
cmp
out
push
rcl
aaa
insl
push
movsl
mov
stos
mov
xchg
sarl
ja
sbb
adc
out
movsl
ret
sub
lret
icebp
jmp
int
mov
es
add
movsb
jmp
cmc
jo
fisubs
in
repz
ss
lock
push
lods
dec
sahf
test
xchg
inc
mov
mov
rclb
outsl
fwait
leave
xlat
fildl
stos
pop
sub
pop
cltd
push
cmpsl
mov
push
mov
cmp
mov
cmpsl
and
test
lahf
mov
insb
push
in
dec
and
nop
pushaw
xchg
mov
sub
pop
jge
add
mov
data16
and
call
popf
in
sub
cmc
aaa
jns
jne
mov
stc
add
and
outsb
lcall
sbb
ret
iret
xchg
mov
out
out
ret
leave
repz
push
jns
mov
mov
mov
daa
sbb
push
and
pop
push
adc
lea
mov
pop
call
mov
cmp
clc
mov
or
sbb
inc
lods
leave
add
lods
scas
aaa
int
xor
sbb
loope
dec
sahf
mov
sub
xchg
xor
sahf
xchg
lret
xor
jnp
inc
cmp
pop
mov
jo
jnp
roll
inc
xchg
xor
cld
push
ljmp
popf
andb
mov
fidivrl
pop
sub
popa
cwtl
fninit
ficomps
mov
push
call
out
or
add
pop
rcl
lods
sahf
or
int
pop
jae
inc
xchg
push
out
das
xchg
inc
stc
add
and
pop
out
mov
stos
dec
mov
repnz
mov
mov
mov
and
loop
repz
mov
dec
dec
xchg
scas
pop
minps
mov
xchg
push
or
lahf
es
jg
mov
and
cmp
cmp
jbe
mov
leave
int3
adc
aad
xchg
mov
xor
inc
loopne
lods
mov
xlat
jbe
lock
xchg
ljmp
repnz
pop
dec
cwtl
cmpsb
jmp
push
sub
xchg
pushf
jge
jmp
mov
aad
rcrb
loope
jp
call
fs
test
xor
mov
push
cs
addb
cmp
in
gs
xor
fsubrl
imul
adc
sbbl
cmp
lcall
push
inc
ss
cld
gs
sub
dec
ret
shlb
sub
mov
pusha
hlt
jb
movsl
gs
adc
aas
xchg
cld
jnp
cmp
movl
mov
fwait
dec
test
cmp
fnstenv
cmpsl
cmp
sbb
lahf
mov
div
inc
cltd
mov
ja
subb
cltd
or
cmp
bound
jnp
push
pop
or
das
mov
cmp
jl
aas
int
cmc
insl
roll
in
push
mov
je
popf
xchg
out
mov
cwtl
cmp
adc
shlb
adc
cmp
push
scas
mov
adc
push
test
faddl
mov
loope
inc
adc
icebp
les
sub
mov
in
xor
push
jae
inc
adc
test
call
fnstsw
cld
stos
push
shll
inc
push
xor
roll
rcrl
outsl
rolb
insl
or
dec
dec
jbe
add
in
jns
sub
es
or
dec
fldl
cmc
mov
and
xor
sbb
aam
jg
cwtl
sub
and
mov
push
cli
outsl
fwait
leave
xlat
fildl
stos
xor
xlat
jne
icebp
ja
idivb
xchg
test
pusha
and
cmp
lods
scas
pop
cwtl
or
dec
std
cmpb
lret
imul
imul
xchg
add
xchg
push
fbld
shlb
es
xchg
mov
push
sub
enter
jno
cwtl
add
gs
sbb
enter
xchg
jb
pop
xchg
and
mov
pusha
fsubs
es
pop
xchg
fnstsw
ret
sarl
push
test
pop
scas
shr
aaa
rorl
lahf
addr16
add
push
sti
jecxz
or
pusha
out
out
xchg
add
sbb
add
mov
mov
xor
pop
lods
cmc
lock
je
ror
xlat
inc
in
sub
add
dec
xchg
ljmp
ja
outsl
mov
xor
fildl
mov
sbb
lret
test
mov
int3
jne
cmp
push
lea
xchg
aad
repnz
arpl
lds
ror
sarb
outsl
out
out
push
sahf
push
insw
add
jno
pop
shrl
mov
xor
mov
ret
sbb
shll
and
push
adc
mov
mov
nop
outsb
push
push
imul
lods
lahf
cmpsb
xlat
jns
xchg
fcompl
mov
jle
and
int
into
ror
ljmp
cmp
inc
call
xorl
sub
sbb
aad
dec
mov
inc
bnd
scas
pop
lods
ret
push
cwtl
testb
xchg
xchg
or
and
or
cmp
sub
mov
stos
add
test
test
imul
jge
sub
sbb
clc
in
shrl
push
mov
in
push
or
mov
scas
lods
movsl
in
xor
cwtl
mov
push
mov
pop
imul
mov
shll
sub
lods
pop
mov
inc
pop
test
xor
xchg
fs
lea
add
loope
cld
mov
aaa
shrb
mov
xchg
cmpb
push
sbb
jbe
popf
mov
lret
in
sbb
int
cmp
mov
inc
mov
add
aas
mov
push
pop
ja
cltd
inc
pop
jns
pop
imul
push
inc
stc
mov
outsl
fwait
leave
xlat
fildl
stos
insl
mov
xor
in
dec
push
sub
push
pop
pop
mov
sub
js
or
inc
mov
push
mov
outsb
dec
jns
xchg
les
inc
fwait
mov
dec
mov
push
pop
ss
sbb
aad
notb
out
xchg
in
in
icebp
mov
js
daa
xor
mov
lahf
mov
jmp
jne
lods
sahf
push
mov
adc
insl
mov
lcall
mov
mov
dec
mov
pop
sub
sbb
and
cmp
pushw
lods
jo
mov
xchg
fimuls
pop
xchg
push
imul
dec
xchg
test
pop
out
in
dec
aam
lods
and
mov
popa
dec
xchg
sub
fisttpl
imul
inc
in
in
mov
pop
mov
fcomps
movsl
mov
mov
cwtl
in
sub
mov
lahf
movsl
out
movsb
mov
cli
xor
inc
mov
nop
lods
adc
scas
incb
bsf
dec
push
aad
or
push
ds
or
scas
inc
push
fs
outsl
jae
dec
loope
sbb
ds
rolb
push
pop
mov
movsb
ret
jb
shlb
mov
fwait
into
mov
mov
cmp
mov
mov
xchg
scas
fs
repz
leave
or
mov
mov
enter
jmp
cmc
mov
cltd
mov
call
clc
xchg
mov
xor
mov
sub
sbb
out
mov
xchg
test
lret
xchg
into
xchg
insb
sbb
movsl
pusha
mov
jmp
sub
out
inc
cmp
push
mov
mov
mov
fs
xchg
xor
shrb
ljmp
ja
je
mov
sub
repnz
das
sar
mov
push
sbb
jp
adc
outsb
xor
push
push
and
jb
or
pop
and
cs
fmull
cwtl
in
ficompl
lcall
jg
cmp
test
cmpsb
movsb
insl
cmc
jle
std
dec
insb
jo
xor
xor
jns
setl
cmp
mov
scas
push
xchg
cmp
sahf
and
sbb
enter
sub
cmovns
push
bnd
sbbl
in
jne
stos
push
dec
lahf
lea
jge
fnstenv
cmp
fisttpl
or
rolb
test
sbb
mov
dec
xor
test
pop
xor
popa
dec
loopnew
push
in
xor
test
jp
test
sub
push
loopne
inc
es
mov
lret
mov
xsaveopt
push
jp
js
repnz
sub
sbbl
xor
fstl
mov
and
loop
lock
int
adc
mov
dec
add
gs
and
pop
xor
aaa
in
stc
arpl
adc
xchg
lock
pushl
or
imul
jmp
cmp
mov
jno
les
jp
dec
pop
jae
sub
cmp
mov
jbe
sub
ror
ror
insl
rorb
inc
inc
mov
lret
test
jnp
addr16
xchg
lods
jg
inc
cmp
scas
adc
push
out
lods
pop
inc
cmp
lret
mov
xorl
sahf
mov
or
test
shr
mov
mov
mov
xor
pop
sbbb
mov
icebp
inc
cmp
or
xchg
pop
jns
xorb
cli
cld
loope
mov
sbb
and
dec
xchg
mov
or
insl
bound
sbb
xor
push
xchg
add
jecxz
fwait
lds
adc
and
mov
and
clc
jns
lea
dec
lock
stos
lods
push
xchg
xchg
and
and
fcoms
rolb
loopne
dec
lods
pop
loop
mov
mov
pusha
aaa
add
adc
or
jno
and
ja
insl
stc
mov
push
repz
loopne
roll
dec
mov
cmc
imul
sbb
sahf
mov
loope
inc
inc
fbstp
sti
push
popf
mov
mov
sahf
dec
iret
inc
jmp
gs
nop
jmp
les
cmpsb
xor
adc
loop
aaa
push
loopne
add
cmp
std
adc
adc
cwtl
jmp
adc
adc
das
cmp
hlt
dec
inc
xor
pop
aam
nop
or
mov
pop
movsb
aam
xchg
stos
and
xchg
aaa
iret
jne
xchg
mov
out
dec
jnp
movl
bound
dec
inc
sub
loop
inc
sub
add
mov
dec
leave
push
sbb
fwait
sti
fistl
jnp
adc
mov
das
repz
test
repz
cli
ficoms
mov
mov
cli
imul
inc
lock
ret
pop
data16
fwait
jbe
cmpsl
addr16
test
loope
sbb
pop
sub
mov
insb
inc
pop
fstpt
jno
mov
out
cltd
inc
jo
cs
adc
in
mov
imul
jae
lea
fidivs
cltd
xlat
cli
cli
xchg
mov
pop
mov
test
adc
mov
mov
push
jno
inc
and
cmp
ret
xor
pop
jge
pop
dec
dec
in
test
adc
into
repz
lods
push
andb
and
fbld
ljmp
movl
xchg
sbb
and
fwait
data16
sbb
jg
lahf
bound
push
daa
cmp
pushf
jge
or
push
mov
out
movhlps
incb
dec
out
dec
daa
cmp
inc
aaa
mov
dec
arpl
add
sahf
inc
add
stos
jnp
xchg
test
movsl
pop
es
clc
mov
aaa
int3
fbld
not
fstp
push
imull
jo
or
jecxz
cmpsb
cmpsb
sbb
rorl
cltd
ja
adc
add
cs
das
xor
pop
icebp
daa
loope
lahf
mov
push
int3
jecxz
bound
lock
lret
jns
push
adc
pop
and
es
ret
mov
sub
pop
cld
cli
ret
inc
adc
jae
pop
jno
push
add
aas
arpl
test
and
dec
dec
and
repz
insb
rcll
sub
nop
out
faddl
sbb
leave
xchg
flds
lods
mov
bound
filds
fisttps
adc
fwait
cmpsl
or
les
push
loop
jl
cltd
fistpl
jno
sub
ja
andl
or
push
loop
and
out
test
xchg
out
jl
adc
jg
or
inc
call
scas
push
lea
pop
xorb
sbb
inc
imul
adc
call
pop
dec
sbb
jns
das
gs
jo
push
rolb
loopne
jnp
loop
push
in
int3
or
cs
ljmp
outsb
cmc
inc
addr16
sarb
lret
mov
cmpsb
cmp
mov
fdivl
and
loope
fsubrp
mov
jle
fmuls
dec
push
loop
in
adc
lret
cmp
dec
cwtl
je
sub
stos
ja
mov
add
add
jnp
add
idiv
jns
test
stos
jb
add
add
mov
popa
pusha
bound
inc
lahf
push
sti
push
xchg
dec
sbb
and
xchg
push
mov
add
sub
mov
cmp
out
mov
in
les
imul
loopne
jle
mov
inc
pop
adc
call
lcall
dec
push
repz
scas
test
and
xor
sti
push
sub
repz
fwait
pop
sbb
in
push
fstpl
xchg
dec
test
shr
mov
aad
mov
popa
in
xchg
dec
add
push
xchg
add
stos
push
mov
enter
and
and
aaa
mov
dec
mov
lods
sub
sub
loopne
adc
jle
and
pop
and
sarb
mov
cld
dec
scas
cltd
inc
sbb
push
dec
push
mov
xor
mov
rcrb
mov
shrb
or
jg
mov
pop
inc
jp
jge
mov
popa
cmpb
jo
outsl
add
fwait
lret
cmpsl
rcll
sub
shll
add
mov
jmp
test
mov
lock
cmpsl
pop
mov
rcll
es
je
xchg
pop
je
sbb
mov
cmc
mov
jb
pop
jmp
ss
inc
rol
scas
xor
aaa
jg
cs
lret
das
cmp
xor
int3
cmp
lcall
lret
push
pushl
xchg
sub
rcrb
mov
cmp
ret
fcomps
push
fistpll
jl
dec
mov
inc
and
in
sahf
cmp
push
dec
sbb
enter
pop
cmp
push
js
pop
xchg
rcll
jbe
mov
mov
dec
scas
adc
clc
movsb
pop
hlt
sub
ret
dec
mov
or
test
sub
push
mov
lcall
sub
test
std
sub
jmp
mov
in
or
dec
sbb
push
inc
cmpsl
push
cmc
out
adc
addl
xor
mov
imul
jbe
shlb
mov
arpl
or
xor
sub
jnp
and
push
sahf
pop
rcrb
mov
insl
int3
dec
mov
mov
add
inc
mov
bound
leave
lea
dec
inc
push
fists
std
dec
test
int3
repnz
cmp
add
push
push
or
movsb
int3
adc
out
push
dec
xchg
cmpb
pop
mov
jo
jb
jp
movsl
cmpsb
adc
ja
xchg
insb
fiaddl
movsb
sbb
mov
mov
nop
adc
dec
imul
dec
leave
add
push
push
jns
outsl
test
mov
nop
cmp
dec
pop
js
mov
aas
adc
hlt
fwait
loop
test
mulb
ljmp
adcl
push
lods
dec
mov
out
aad
mov
lret
loop
scas
movsl
nop
test
cmp
cmp
jg
in
inc
inc
add
mull
cmp
and
pop
jp
and
outsl
test
ds
cmc
or
xchg
mov
add
push
stos
shrb
test
xchg
adc
xor
adc
rep
jbe
lret
imul
lahf
pop
dec
outsb
inc
sbb
dec
mov
imul
popa
cmpsl
lret
mov
fisttpll
sbb
sub
xor
xchg
mov
push
xchg
je
fwait
xchg
mov
pop
cwtl
or
mov
xor
mov
loop
lods
sbb
stos
mov
js
mull
cmp
aam
out
push
nop
fmulp
sarb
and
xor
cmp
push
movsl
mov
loopne
jg
push
dec
xchg
mov
rcl
adc
sbb
std
mov
xor
mov
dec
and
mov
sarl
add
inc
mov
adc
movsb
jno
and
into
daa
inc
push
fnstenv
data16
sbb
scas
out
xchg
adc
jbe
stc
inc
mov
outsb
lcall
icebp
sub
cld
sbb
mov
mov
ds
es
mov
cmp
mov
push
sarl
push
out
sbb
aam
add
jne
push
xchg
push
push
adc
out
sarb
rorl
xchg
jp
stos
popa
cmp
repnz
shl
mov
les
inc
push
pop
mov
and
jmp
push
into
jne
test
pop
pop
mov
add
repz
mov
mov
cmp
in
sbb
pop
movsb
push
movsl
pushf
lahf
test
adcb
lods
sbb
pop
out
sub
andb
and
xchg
mov
push
push
sbb
jecxz
imul
pop
stc
daa
popa
mov
sbb
cltd
lds
fdivl
andb
jle
ljmp
mov
fists
int3
mov
xchg
repnz
rolb
pop
cs
xchg
sbb
fcoms
addl
dec
repnz
filds
xlat
adc
sbb
fildl
jmp
fmulp
inc
jge
push
pushl
push
xlat
xchg
or
pop
push
inc
ss
jle
les
add
xor
loope
out
push
mov
fwait
pusha
sbb
sbb
data16
jno
js
sub
pop
das
fmull
lcall
fbld
in
pop
fs
fadds
push
fidivl
stc
in
xchg
je
out
mov
mov
jecxz
imul
aaa
fisttps
and
adc
mov
mov
ja
jecxz
into
push
cmc
ret
inc
divl
pop
iret
rol
out
mov
adc
ret
call
inc
xor
sbb
mov
jnp
js
jbe
pushf
jae
in
xchg
add
cmc
lods
dec
mov
or
xor
sub
jnp
and
push
sahf
pop
rcrb
mov
insl
int3
dec
mov
mov
add
inc
mov
bound
leave
lea
dec
stc
aad
mov
das
mov
xor
lods
adc
push
dec
sti
arpl
fnsave
xorb
pop
sbb
cmc
cs
cltd
shll
pop
pop
jnp
fcomp
int
jge
push
pushl
push
push
adc
xor
mov
jne
outsb
je
mov
shlb
fwait
daa
xchg
loopne
pusha
or
fnstenv
jle
jnp
sub
push
dec
into
pop
push
dec
xchg
fildl
sbb
rsm
popa
aaa
mov
aad
repnz
ret
jae
ffreep
xor
repz
test
out
imul
xor
sub
jo
nop
fs
test
sbb
mov
arpl
lea
and
xchg
ret
icebp
jne
jnp
cmp
push
mov
and
mov
cmp
mov
out
in
mov
icebp
lea
mov
nop
sbb
xchg
dec
lahf
test
movsb
pop
nop
es
push
cltd
cmpsl
fs
aaa
fnsave
int3
dec
sarl
repnz
xorl
jge
cmp
leave
outsb
lret
xchg
and
pop
es
jecxz
xorl
push
xorl
out
rcrb
inc
inc
mov
dec
outsl
jb
sbb
mov
es
xchg
fists
notb
xchg
movsl
addr16
inc
test
repz
lcall
jl
xor
pop
test
or
cmp
out
outsl
stos
push
aas
push
lds
mov
arpl
sbb
lds
and
add
dec
int
jnp
sub
sbb
ds
dec
push
popl
daa
adc
mov
and
loope
repz
add
sub
in
out
push
outsl
fdiv
stc
pop
inc
mov
fcomip
push
fnop
test
pop
aas
pushf
dec
mov
rorl
nop
xor
aad
or
dec
fadds
stc
sbb
lret
test
push
mov
ds
outsb
cmp
in
cs
inc
aad
pop
cmp
js
or
repz
push
push
adc
and
jmp
xor
pop
mov
pop
add
add
shr
inc
ret
xchg
fidivs
mov
mov
sbb
in
add
jecxz
movsb
sub
and
push
jne
push
aas
jno
es
ljmp
mov
sar
xchg
sbb
xchg
xorb
xor
mov
int
pop
mov
in
mov
int3
ss
cs
movsl
add
sbb
ss
dec
and
add
xor
insl
pushf
inc
push
mov
pop
jne
adc
idivb
push
add
or
adc
cmp
or
fwait
das
xorb
pop
lods
leave
jno
xchg
cwtl
icebp
das
cwtl
daa
stc
mov
leave
pop
jae
hlt
mov
push
jb
cmp
inc
push
std
dec
ret
enter
mov
and
xchg
jl
je
aam
popf
mov
push
arpl
ljmp
loopne
xor
jae
leave
test
sub
jne
std
out
xlat
cmc
addr16
xor
ja
push
ja
lret
sbb
cmpsl
pop
dec
out
sub
jns
decb
push
lds
sub
inc
in
call
loop
push
adc
je
pop
int3
mov
fidivrs
mov
inc
cli
shlb
das
inc
sbb
sbb
mov
ffreep
xorl
ret
sbb
cmp
mov
xchg
jl
insb
adcl
into
in
sub
and
push
dec
fwait
push
lcall
inc
push
mov
dec
insl
psubsw
loopne
ret
push
stc
xchg
pop
xchg
sub
jno
addr16
ss
jp
and
sub
shr
aaa
lcall
out
sti
fisubl
mov
dec
cli
mov
jl
sbb
jbe
inc
xchg
arpl
movsl
push
fmuls
mov
mov
test
ret
dec
jecxz
push
iret
add
or
jb
enter
mov
cwtl
pusha
cltd
mov
loopne
pop
push
adcb
pop
scas
mov
lret
mov
xor
add
sti
xchg
fildl
push
xor
js
lea
lds
insb
inc
sub
mov
out
dec
sbb
pmuludq
popf
scas
jg
test
cmp
scas
or
xor
icebp
ljmp
cmp
rorl
in
add
jecxz
movsb
sub
and
push
jne
push
aas
jno
es
ljmp
mov
sar
xchg
sbb
xchg
xorb
push
sub
popa
outsl
ja
fnstcw
jb
int3
ss
cs
movsl
add
sbb
pop
daa
roll
fcmovnbe
push
mov
or
jge
mov
incl
cmpsl
xchg
ret
or
xlat
in
sub
sahf
pop
int
pushf
test
xchg
mov
jmp
pop
out
fsts
adc
lock
mov
popf
jg
iret
stos
add
divb
int3
pushf
inc
and
xchg
jae
mov
insb
shll
xchg
mov
pop
pop
or
shrb
outsl
repz
mov
sbb
scas
test
into
int3
popf
xchg
ss
adcl
mov
fimuls
xor
push
enter
adc
sbb
sub
and
inc
incl
jle
mov
test
imul
jle
mov
xchg
or
fwait
imul
stos
les
in
jmp
xor
out
jne
je
rorl
fnstenv
inc
cltd
std
stos
cmp
movsl
ret
arpl
cmpsl
mov
sahf
ss
cli
outsb
movsl
jle
jns
xor
cmp
dec
pushf
arpl
in
fimuls
stos
cmpl
lock
pop
pop
in
les
arpl
arpl
cld
mov
or
std
test
adc
push
out
inc
jns
pop
sarl
or
jg
push
dec
imul
pop
je
jno
in
jle
mov
shll
jl
test
xor
or
mov
movzwl
cli
out
out
mov
daa
pop
inc
xor
sbb
icebp
icebp
xor
imull
cmp
sbb
insb
inc
aad
gs
mov
ljmp
scas
je
xchg
sbb
cmp
adc
add
xchg
mov
rorb
jle
sbb
idivl
xchg
cltd
mov
adc
jno
popf
loop
jmp
or
or
shlb
stos
push
aas
push
lds
mov
arpl
mov
aad
sub
shll
ljmp
in
push
fucom
test
jp
add
aad
scas
jle
fists
adcl
mov
outsl
mov
nop
lock
jecxz
inc
js
repz
push
xor
in
mov
lahf
pop
add
pushf
push
sbb
or
mov
pushf
dec
das
mov
shrl
bound
jle
xor
subl
in
mov
das
in
das
mov
push
mov
in
aaa
imul
cmp
lahf
les
xor
mov
cmp
and
orb
in
enter
inc
in
dec
nop
loopne
arpl
xor
mov
push
repnz
in
jns
repnz
test
lret
sub
aas
sub
pop
or
stc
dec
enter
inc
xor
mov
and
mov
lea
mov
add
movsb
cmp
push
push
sub
popa
pop
mov
ja
and
fisubl
lahf
sbb
pusha
testb
xor
dec
add
fxtract
cmpsb
popl
cmpsl
sub
xor
in
ds
xchg
jns
sbb
sub
dec
sub
push
or
adc
mov
aaa
push
xlat
and
mov
adc
xchg
cmp
xchg
fildll
mov
loopne
xor
mov
shr
fstpl
aaa
or
pop
push
xchg
add
mov
fistl
push
je
xchg
pushf
push
add
mov
sbbl
idivl
rcl
add
sub
shrl
pop
test
jnp
mov
or
mov
xchg
in
loop
jl
bound
pop
imul
inc
jl
into
push
inc
popa
mov
fsubr
xor
xchg
push
out
or
xorb
jne
aas
lea
push
xor
js
cli
adc
jl
pop
clc
cmpsl
imul
jp
xchg
inc
scas
scas
push
inc
push
aad
pop
and
lahf
stos
lea
fst
mov
outsb
rclb
push
add
dec
pop
add
ret
iret
aad
pop
sbb
or
std
pop
xor
push
cmp
and
filds
int
fnstcw
inc
dec
fstpt
add
scas
pop
loopne
scas
dec
xchg
gs
iret
inc
lock
sub
inc
mov
rcll
js
jae
repnz
incl
ja
cli
or
sub
popf
push
mov
add
sarl
sub
imul
fs
lods
out
mov
inc
pop
out
mov
ljmp
xchg
aas
jae
push
add
jo
and
test
int
jae
xchg
cmpsl
jns
inc
cmp
outsl
inc
mov
aaa
cli
jl
cmpsl
lahf
mov
add
add
int3
aam
xor
sbbl
inc
pop
mov
add
lock
cmp
xor
and
lock
andb
call
mov
stos
push
icebp
lds
cmp
jbe
movsl
pop
lret
push
pushl
xchg
sub
rcrb
mov
cmp
ret
fcomps
push
fistpll
jl
dec
mov
inc
and
in
sahf
cmp
push
dec
sbb
jmp
jp
addb
push
mov
jge
adcl
imul
imul
add
and
mov
inc
std
stos
jns
mov
lock
or
jbe
pop
iret
push
dec
imul
adc
cmp
arpl
jmp
inc
mov
test
loopne
add
aad
mov
xor
dec
adcl
arpl
call
ja
add
out
xor
jnp
cmp
xchg
in
mov
xchg
enter
inc
jns
enter
xchg
or
int3
cmpsb
push
rcll
je
push
mov
jae
dec
inc
fs
pushf
lret
add
mov
fcmovnbe
scas
xchg
dec
push
cmpsl
dec
rcl
mov
dec
loop
sbb
fcomi
insb
pop
xchg
mov
fisttpl
or
jl
lahf
push
inc
xchg
add
dec
pop
repz
ret
pop
test
leave
movsl
cmp
leave
sub
mov
into
loopne
jbe
pushf
stc
jae
push
sub
loop
add
push
inc
jge
and
or
movsb
roll
and
inc
inc
out
ja
add
out
xor
jnp
cmp
xchg
in
mov
xchg
enter
inc
jns
enter
xchg
or
int3
cmpsb
push
rcll
je
push
mov
jae
dec
inc
fs
pushf
pop
loopne
mov
sbb
dec
shll
cmpsl
jae
mov
pop
repnz
xchg
aas
sbb
js
xor
dec
and
push
cli
nop
pop
les
adc
sub
rcl
add
and
scas
mov
lea
fsubr
popa
jl
pop
jg
sahf
cmp
mov
xchg
aad
mov
rorl
mov
icebp
push
loopne
repnz
inc
test
cmpsb
femms
mov
add
xchg
pop
push
xchg
hlt
mov
ja
and
inc
jb
jp
or
test
cli
add
mov
iret
repz
dec
dec
or
jecxz
push
stos
mov
imul
pusha
adc
clc
in
mov
dec
xchg
adc
loop
pusha
mov
in
mov
jne
enter
pop
popf
pop
and
cmp
cmc
jl
mov
adc
fimull
sub
jmp
push
mov
lahf
test
in
test
shll
popa
mov
faddl
pusha
aaa
fs
cmc
loopne
xchg
repnz
insl
mov
lret
cli
push
test
mov
scas
outsl
std
outsb
outsb
mov
pop
repnz
mov
sbb
dec
inc
xlat
jo
sub
adc
andb
sub
or
adc
lds
cmpsb
mov
mov
cmp
xor
cmpl
mov
xlat
outsl
push
outsl
jno
std
and
xor
or
jnp
inc
adc
insb
mov
cmp
push
aad
out
xor
movsl
pop
mov
mov
ret
push
clc
or
push
in
inc
jns
cli
jnp
xchg
sahf
adc
push
or
sub
mov
outsb
aaa
es
out
arpl
cmp
jb
and
mov
jp
xchg
inc
daa
mov
dec
push
mov
inc
inc
shlb
sub
out
pop
cld
scas
mov
in
leave
mov
dec
push
leave
cs
sub
pop
cmpsb
adc
pushf
or
test
adc
scas
pushf
iret
xchg
aas
stos
test
mov
pop
int3
and
fnstenv
xchg
scas
jae
or
fsub
inc
imul
cmp
stc
ret
pop
sub
pop
xor
mov
gs
adc
test
scas
cwtl
es
lds
fiaddl
sbb
and
sub
test
jl
mov
adc
mov
stos
add
xchg
push
mov
jmp
scas
xor
sahf
or
lea
and
lahf
sbb
fcoml
sti
lret
dec
ja
jo
inc
xchg
jl
popa
in
int3
and
js
in
mov
test
and
outsl
es
inc
push
push
xchg
sub
in
ret
in
das
sti
adc
das
xchg
out
jmp
filds
jbe
jno
ficoml
js
gs
cmpsb
xlat
cmp
pusha
mov
out
xchg
xor
out
or
shrl
and
inc
int3
loopne
jnp
dec
lock
xchg
test
in
insb
mov
mov
sbb
outsb
movsb
mov
push
movsl
fstl
in
andb
jb
jl
int3
xchg
add
and
test
stc
cmp
stos
dec
mov
pop
sahf
xchg
xor
arpl
xchg
fistpll
fdivrp
adc
jge
push
inc
into
push
fsubrs
imul
es
popa
mov
xor
ret
and
jo
push
xchg
insl
aaa
or
xchg
sti
sbbb
push
dec
lods
sbb
shlb
sub
lock
call
movsl
cwtl
xor
cld
ss
fisubl
jno
loopne
jge
xchg
stc
popf
xor
cmpsb
pusha
mov
or
or
sub
enter
fdiv
cmp
test
ja
jecxz
jne
subb
add
negl
les
insl
cwtl
dec
mov
fidivrs
scas
adc
mov
push
lds
mov
adc
sbb
daa
or
test
inc
or
xor
mov
pushf
rcll
shrl
or
in
aam
scas
jecxz
test
imul
adc
ret
sub
scas
fsts
xchg
fdivrl
js
cmc
push
das
fsubl
repnz
push
inc
push
jns
mov
sub
jecxz
out
int3
inc
out
icebp
or
in
xchg
icebp
nop
ja
xchg
fwait
jge
gs
out
pop
mov
ja
inc
dec
dec
cmc
xchg
xor
add
push
sbb
pushl
pop
mov
jne
loop
imul
pushf
frstor
mov
outsb
xor
push
mov
pop
inc
adc
ret
mov
das
fcmovnb
xchg
push
jae
std
in
inc
ffreep
movsb
pop
imul
adc
sbb
jns
push
lods
jns
icebp
dec
ja
lods
xchg
es
loope
inc
xchg
aam
pop
mov
dec
nop
fdivl
leave
mov
insl
cmp
or
lods
testl
cwtl
imul
arpl
push
in
fwait
stos
stos
in
cmpsb
fildll
cwtl
push
mov
xor
repnz
int
fs
sbb
jno
mov
sub
aam
lods
test
or
mov
lret
fnstenv
sbb
test
std
pop
jbe
sbb
mov
push
imul
ret
ja
iret
pop
push
jb
in
loop
int
pop
sbb
bound
jbe
rol
sub
dec
mov
mov
xchg
and
nop
mov
sub
cmc
ja
jge
jne
icebp
or
outsb
mov
ljmp
stc
xorb
push
movsb
popf
lods
mov
sub
jnp
pop
jge
repnz
mov
scas
addl
adc
test
iret
or
cmc
xchg
inc
inc
lods
cld
sub
push
fadds
dec
xor
jmp
or
pusha
cmp
and
popa
aaa
inc
add
xor
xchg
in
add
pushf
push
popf
pop
fstps
aas
mov
out
jnp
push
push
sub
pop
dec
jp
xlat
clc
xchg
push
pushf
add
mov
and
adc
xor
jns
lods
bound
mov
stos
dec
jnp
adc
inc
js
ljmp
xchg
pop
mov
pop
call
icebp
dec
sub
jl
pop
ret
cmp
pop
xchg
sarl
ret
add
jnp
add
out
sbb
lea
mov
push
lea
out
dec
popf
inc
inc
push
js
xorl
shl
lret
fstps
push
mov
push
xchg
mov
arpl
int
loop
mov
rol
adc
lret
cmc
outsb
mov
mov
lcall
popa
std
mov
xchg
bound
sub
adc
arpl
nop
daa
cld
in
pusha
or
mov
cs
dec
mov
cmpsb
cmp
into
dec
xor
leave
movsl
sahf
sbbl
repnz
xchg
or
leave
fdivs
and
mov
add
dec
test
cmc
ss
jl
sbb
cmp
iret
pop
push
sarb
iret
inc
jbe
scas
mov
int
pop
jno
mov
dec
jp
jmp
sahf
inc
dec
mov
ljmp
lods
lahf
jg
cli
inc
hlt
inc
repnz
fisubrs
cwtl
mov
and
dec
inc
cld
mov
loopne
xchg
sub
push
xchg
mov
adc
jne
and
jnp
or
jbe
leave
into
es
and
shrl
test
pop
dec
or
repnz
push
sahf
mov
orb
mov
mov
insl
rolb
ret
or
int3
int
hlt
push
out
inc
int
mov
imull
mov
fiaddl
icebp
or
mov
push
cwtl
sbb
xor
pop
mov
cli
sbbb
popl
cltd
adc
xor
mulb
sub
pop
aaa
push
int
push
dec
and
xor
jbe
dec
cmp
movsl
inc
imul
mov
add
jno
push
ret
or
pop
pop
xchg
fcmove
xchg
mov
rcrb
cmp
inc
imull
lret
lahf
fnsetpm(287
popf
shll
sub
repnz
inc
push
and
or
jp
mov
push
mul
in
and
iret
insl
push
jl
mov
mov
or
insl
imul
xlat
out
rcll
pusha
call
jae
lods
pop
add
xor
shll
inc
mov
pop
enter
mov
add
nop
hlt
sub
mov
dec
fldenv
cs
pushf
sar
lcall
push
pusha
sbb
dec
mov
jp
aaa
jmp
pusha
ljmp
insb
jge
clc
scas
aad
js
dec
stos
pop
adc
cmc
add
or
inc
out
sbb
gs
mov
mov
sbb
scas
aas
aad
fbld
dec
jle
lahf
cs
loope
xor
or
fdivs
push
inc
and
aas
mov
test
jg
das
and
xchg
mov
sub
xchg
pusha
push
ret
xchg
in
les
int
dec
and
fucomi
or
add
cmp
add
icebp
js
ret
sbb
cltd
mov
pop
adc
mov
dec
push
call
cmpl
push
aas
cmc
mov
sarb
pop
into
sub
repnz
pop
incl
dec
adc
lcall
dec
rclb
cs
jp
movl
xor
cmp
sub
pop
negl
sbb
jle
cmpsl
jns
push
pop
add
into
cwtl
xor
push
or
fistps
cmp
mov
pushf
std
lret
adc
fmull
push
fs
cld
addl
sbbb
push
jae
sbb
mov
insl
lahf
lea
rcll
outsb
adc
movsb
in
adc
jo
rsqrtps
xchg
fwait
sbb
fwait
and
insl
jge
lock
xor
stc
jnp
lds
seta
dec
adc
mov
xlat
stos
nop
decb
jo
fadd
iret
dec
xor
ljmp
jns
or
pop
loopne
punpcklwd
add
xor
out
lock
mov
and
dec
or
fs
inc
sub
outsb
push
mov
repz
bnd
lea
adc
sub
inc
addr16
and
mov
mov
pop
cltd
in
mov
jbe
lods
aaa
in
fsubr
mov
or
out
in
push
jo
or
sar
lock
cmp
test
add
xor
fldcw
jns
mov
shll
call
loope
jp
jl
leave
mov
aad
add
mov
lret
sbb
leave
sbb
call
add
mov
pop
jp
jp
adc
into
xor
hlt
lock
pop
and
cltd
pop
mov
push
notl
ds
aad
test
pusha
aas
test
hlt
test
xchg
sbb
lock
adc
loop
xor
das
cltd
shll
or
ljmp
call
mov
icebp
or
hlt
pop
mov
faddl
ljmpw
out
jbe
out
subl
jmp
shll
call
jle
mov
cmp
xor
in
aaa
sbb
nop
xlat
pop
and
js
add
and
movsl
xchg
adc
insb
dec
shrl
mov
ljmp
pop
jbe
data16
jl
cmp
or
push
pushf
adc
mov
jmp
arpl
int3
push
insb
clc
aam
xor
or
mov
bound
jg
push
mov
les
lds
sub
fisubl
jmp
aam
loope
add
stc
aas
outsl
push
mov
jecxz
jg
into
jo
insl
in
mov
pop
mov
mov
insl
dec
mov
jp
in
mov
push
cmp
jg
enter
sahf
adc
std
sub
xor
and
dec
xchg
pop
int3
mov
ss
xchg
jmp
les
dec
leave
jo
mov
aaa
loope
mov
xor
adc
test
push
fcmovu
push
aaa
dec
push
inc
in
jle
jns
pop
jb
lods
adc
test
iret
or
xchg
lahf
xchg
arpl
lds
je
and
mov
sub
push
inc
push
inc
sub
popf
pop
lea
mov
repnz
inc
shlb
pop
shlb
filds
repnz
or
frstor
sarl
xor
loope
movsb
es
jg
push
xlat
out
lods
xor
mov
decb
mov
lahf
insb
xchg
xchg
scas
mull
jge
int3
sbb
mov
stc
cmp
add
push
mulb
popf
scas
es
mov
adc
jns
add
shrb
fimuls
mov
xlat
pop
mov
test
je
add
movsb
stos
inc
cmp
pop
bound
mov
sbb
sub
in
dec
fcoms
int
cmpsl
loopne
jmp
scas
xchg
js
mov
fwait
pop
cmpsb
sub
imul
loop
mov
int3
cmp
std
aas
scas
mov
test
jne
mov
sub
and
adc
dec
cmp
add
xchg
or
and
test
xor
cmp
sub
jmp
mov
sub
int
dec
lahf
mov
pop
mov
daa
mov
sbb
xchg
cld
loopne
mov
and
pop
pop
mov
cmc
xor
jmp
inc
jge
js
lcall
bound
ror
xor
or
daa
call
inc
or
or
sub
out
leave
stos
inc
fs
sub
mov
xor
jge
mov
pop
or
icebp
loop
pop
mov
stc
pop
mov
insb
mov
sbb
shl
mov
popa
and
add
pop
out
and
xchg
mov
add
dec
xor
push
xor
and
mov
push
mov
addb
xor
enter
push
add
rcrb
fwait
xor
add
out
mov
ret
push
mov
mov
or
pop
in
adc
sti
jecxz
into
pop
lods
out
pop
jo
mov
mov
sbb
xor
and
push
pop
mov
enter
sbb
mov
repz
xchg
lods
adc
fwait
sbb
mov
adc
shlb
lods
sub
push
sti
ret
adc
ret
adcl
lret
icebp
insl
movsb
sub
mov
mov
or
push
adc
sahf
push
push
jae
into
sub
xor
in
jne
cvtps2pi
pop
add
xorl
out
stc
jecxz
jb
sbb
in
aam
dec
mov
and
xor
int3
sub
jecxz
jmp
jae
nop
dec
cmp
xor
inc
pop
jne
jge
jp
pop
out
in
xchg
into
inc
pop
inc
je
mov
push
shrb
cld
and
adc
or
pop
mov
push
adc
mov
mov
jbe
or
ja
cmp
in
cmpsl
push
cmp
xor
adc
push
mov
addr16
addr16
push
mov
test
mov
fyl2xp1
jle
jb
std
jmp
and
mov
inc
and
and
fisubl
mov
icebp
add
cwtl
iret
sti
or
xchg
dec
dec
rcr
fwait
push
dec
mov
fists
xchg
lahf
jge
jb
movsb
cmp
cmp
movsl
inc
push
mov
push
push
mov
xchg
jle
insl
jg
sarb
inc
cs
jo
ja
lahf
and
sti
mov
in
sbb
dec
movsl
das
or
ds
mov
lods
movsb
out
mov
popa
add
push
shlb
fmull
xchg
push
mov
xor
in
fsubl
in
mov
xor
or
xchg
and
jne
add
add
rorb
fwait
loopne
subb
pop
mov
hlt
flds
out
jae
lcall
cltd
push
insb
inc
inc
bound
lcall
xchg
pop
xor
jle
mov
and
pop
sbb
inc
cmpsl
into
mov
cld
scas
out
mov
ljmp
imul
fiadds
int3
out
dec
mov
js
mov
test
inc
out
xor
mov
lds
or
or
sub
jbe
xchg
scas
jno
imul
loop
pop
daa
sub
aad
stos
scas
movsb
mov
xor
rol
mov
das
call
jmp
jns
inc
jge
int3
sbb
dec
dec
ds
jbe
sub
cltd
mov
add
aam
inc
push
lods
andl
aad
xor
dec
jmp
cltd
lcall
sub
dec
frstor
push
stos
pop
rclb
push
and
add
rcrl
cwtl
push
push
add
mov
add
mov
cmp
pop
xor
cmp
ret
in
ss
dec
xchg
adc
jmp
xor
mov
rolb
stos
push
in
into
daa
out
jns
inc
or
xchg
jno
lds
pusha
daa
xchg
mov
mov
lods
inc
ja
mov
xor
fimull
add
je
test
inc
jns
and
loope
cmpsl
in
or
push
test
inc
cld
cmc
pusha
stos
into
cli
test
sbb
sbb
cli
cmpsb
pop
mov
loope
xchg
int
adc
jge
sbb
jnp
loope
inc
repz
jl
les
mov
arpl
jo
pushf
divl
mov
loopne
daa
bound
inc
xor
aaa
push
push
inc
mov
popf
test
adc
xor
mov
pop
mov
or
pusha
cmpsb
and
aaa
sbb
out
pop
jle
fs
je
ds
mov
out
add
jb
and
shll
icebp
push
test
adc
icebp
jae
and
sbb
mov
jae
cwtl
xchg
rcr
mov
test
xchg
or
mov
test
xchg
sbb
add
xlat
and
mov
les
xchg
lods
mov
ljmp
push
lods
mov
mov
fs
mov
mov
das
andb
sub
xchg
es
jns
inc
inc
or
sar
es
cltd
add
jp
fs
xor
scas
mov
and
xor
push
movsb
lds
or
aaa
push
xchg
push
mov
scas
mov
cmp
subb
test
and
mov
cmp
int3
sbb
fildll
inc
mov
mov
ret
lods
loope
rcl
xlat
test
shr
inc
clc
mov
mov
jle
lcall
rol
push
pop
xchg
jo
popa
push
mov
adc
mov
mov
inc
pop
repnz
out
loopne
popf
xchg
arpl
scas
imul
pop
mov
mov
out
scas
jno
imul
push
rcl
jb
add
addr16
out
or
mov
out
out
jge
sub
dec
and
and
or
lods
sub
mov
pop
mov
les
into
cltd
xchg
push
add
mov
and
push
mov
xor
xchg
int
pop
dec
sbb
lahf
flds
lret
in
ffreep
add
mov
aam
sub
push
iret
add
test
mov
cmp
cwtl
pop
stos
and
pop
lahf
repz
xor
and
or
fsubrl
cmc
es
add
movsb
adcl
mov
or
pop
jb
inc
jno
aaa
dec
daa
dec
sbb
lods
lock
shl
lods
add
jns
cmp
or
mov
mov
or
icebp
xchg
add
xchg
dec
loope
sbb
mov
sub
ud2
in
call
das
shll
mov
push
rep
or
shrl
cmovbe
or
mov
mov
inc
fwait
in
clc
shlb
lock
insl
mov
js
push
aam
int
cmpsl
push
divps
xchg
test
fidivs
cmp
aad
ud2
push
in
repnz
xlat
jg
in
aad
mov
sahf
cmc
inc
arpl
mov
push
or
rcl
aaa
ss
sbb
mov
fsubrs
mov
dec
in
cmp
jns
dec
arpl
out
aaa
fnstenv
les
mov
call
xchg
push
je
and
cmp
jo
or
pop
imul
xor
push
fstenv
int3
pop
les
xor
nop
push
cmp
imul
mov
cmp
mov
and
js
mov
mov
jno
dec
jo
and
sbb
lcall
jbe
push
mov
sbb
inc
dec
jnp
in
inc
add
aas
orl
mov
jns
insb
cltd
push
fdivrl
jge
cmp
cltd
ret
jmp
lods
pusha
jno
adc
out
xchg
xchg
fnstsw
loop
jmp
lahf
xor
or
sub
mov
sub
mov
and
icebp
adc
mov
aas
enter
xchg
in
inc
decb
cmp
xchg
xor
js
lahf
pop
cmp
pop
inc
xchg
mov
xchg
out
mov
xor
xor
jb
arpl
push
movsb
jae
and
in
lret
mov
jno
mov
in
scas
pop
ja
jns
mov
cmp
cs
xorb
lods
xor
scas
cwtl
pop
jb
mov
sahf
loopne
xchg
or
push
cmp
push
lea
sub
dec
mov
stos
in
xchg
jmp
inc
mov
fdivl
cmpb
push
and
les
and
jg
in
xor
cli
jnp
stc
xchg
sbb
stos
mov
lock
imul
sbb
inc
fcomps
mov
nop
adcl
lret
pop
pop
lcall
in
icebp
inc
mov
lea
es
rol
and
lea
les
cmpsb
jns
fstl
add
xchg
ret
adc
clc
clc
jae
mov
dec
add
pop
outsb
out
adc
fstpt
sbb
push
mov
jo
call
rcrl
negl
fwait
lahf
xor
lcall
sbb
addr16
rclb
fnstcw
mov
and
mov
sub
push
dec
es
inc
outsb
adc
add
data16
ret
xor
push
rolb
shlb
ret
push
push
fadds
dec
aam
add
das
jno
mov
mov
mov
fimull
xchg
sub
outsl
mov
xor
jg
push
xor
sub
in
test
inc
jecxz
mov
add
test
add
sub
enter
cld
cmp
popf
dec
sub
sub
std
rcr
inc
int3
mov
inc
js
and
pop
cmp
sbb
ret
movsl
stos
mov
sub
pusha
jne
les
sub
pop
xorl
or
insl
cmp
ret
daa
arpl
inc
inc
ja
inc
pop
lret
andb
adc
inc
fistpl
pop
inc
mov
fnstenv
cmc
pop
dec
sub
push
das
mov
jl
push
cld
pop
int3
and
jmp
std
xor
repz
push
push
dec
shrb
lss
in
pop
sahf
out
xchg
dec
in
pushf
insl
pop
popa
aad
push
inc
shrl
hlt
mov
or
cmp
rcrl
cmp
jp
inc
jle
lea
xchg
sti
jl
add
xchg
cmp
int
orl
add
pop
jge
pop
xor
cld
pop
or
les
push
popa
insb
xchg
lret
inc
pop
push
scas
or
cmp
jno
xchg
lods
stc
enter
xchg
add
lods
popa
add
pop
push
push
inc
aaa
pusha
mov
js
gs
xchg
pop
cmpsb
adc
daa
addr16
xchg
mov
mov
repz
dec
push
cvtdq2ps
xor
js
mov
and
mov
test
or
adc
adc
shr
mov
aaa
jg
lret
or
inc
mov
cmp
popa
cwtl
pop
jnp
pop
jg
shlb
fnstsw
sub
sub
rcl
ss
xchg
xchg
bound
scas
imul
lret
ret
pop
or
rcrb
mov
ljmp
xchg
or
aas
in
cmc
jp
or
sub
lahf
shrb
inc
lret
enter
jbe
ret
ret
lods
inc
jbe
popf
adc
or
and
int3
popf
add
and
fucompp
sarb
mov
pop
xor
iret
and
push
aad
pop
std
sub
jno
pop
cwtl
stos
addb
sbb
or
dec
out
ret
jns
inc
mov
xor
inc
test
fs
mov
repz
into
lea
push
or
mov
mov
xchg
fcoms
push
sub
stc
dec
fidivl
and
rcr
jp
int3
stos
sbb
out
out
mull
mov
jecxz
mov
pop
and
dec
xor
arpl
test
xor
jo
xor
add
outsl
and
mov
xchg
and
xor
pop
jle
subl
push
xor
inc
pop
popa
mov
cmp
xor
push
aam
jo
push
fiadds
ss
inc
mov
jl
mov
jmp
fldt
sar
push
push
jae
divps
xor
jne
mov
adc
pop
pop
add
cmp
scas
pop
mov
fs
lods
loopne
lods
xchg
cltd
adcb
aad
adc
icebp
clc
push
mov
xor
bnd
adc
movsl
fnstcw
xchg
iret
inc
xorl
ror
popw
push
sbb
and
pop
idivb
lods
mov
shll
test
cmp
je
cwtl
xchg
cs
or
dec
xor
pop
adc
icebp
les
jae
and
dec
push
stc
aaa
shll
dec
aaa
cmp
or
mov
inc
adc
xchg
push
mov
and
clc
in
push
flds
hlt
or
or
mov
xor
mov
icebp
iret
jae
shlb
fadds
repnz
push
je
cmc
inc
ficoml
and
lea
adc
in
arpl
mov
jl
icebp
sbb
ljmp
pop
sbb
fmuls
mov
adc
cmp
cs
lahf
cld
or
xor
addr16
int3
cmovae
dec
mov
cmp
and
sub
mov
adc
ret
dec
dec
lock
inc
loope
dec
push
mov
mov
pop
pop
aaa
sbb
insb
xor
stos
insb
sub
mov
movsb
pusha
fmulp
cmp
adc
stc
bound
and
pop
xor
nopl
pop
lods
dec
mov
stos
mov
xor
jecxz
test
icebp
adc
dec
aad
sub
test
mov
hlt
jns,pn
mov
in
push
inc
mov
jns
pop
in
dec
xchg
imul
ret
inc
mov
mov
loopne
outsl
inc
pushf
aam
dec
hlt
push
mov
adc
fnstsw
test
or
adc
fwait
sysret
cld
ficoml
and
xchg
xchg
addl
xor
pop
cmpl
lods
addr16
cmpb
xor
std
xchg
mov
add
cmpsl
out
add
xchg
sub
pusha
hlt
jbe
imul
inc
mov
push
mov
jne
sub
cmp
ss
or
rclb
and
in
mov
push
ss
lahf
in
jns
sbb
ror
frstor
mov
pop
lret
repnz
inc
and
xchg
mov
fdivl
sti
jmp
mov
xor
test
punpcklwd
jmp
dec
mov
lods
sbb
push
push
mov
push
cli
adc
inc
shlb
and
das
cwtl
les
ret
push
ftst
pop
jbe
sub
gs
test
test
incb
xlat
mov
and
imul
decl
xchg
pop
sti
or
jb
or
leave
mov
ret
aam
std
push
clc
jg
push
pop
loope
mov
adc
pop
sub
add
scas
not
inc
xor
shl
movb
jae
or
stc
dec
add
adc
mov
scas
shrb
imull
jns
cmp
addl
movhps
push
mov
sub
movsb
test
mov
imul
or
leave
sbb
jle
jge
pop
outsb
shrl
and
mov
sbb
mov
ret
pop
icebp
in
js
push
mov
jecxz
adc
push
jno
cmp
adc
pop
lea
scas
fucomi
jge
rolb
shlb
or
ds
aam
dec
xchg
fisubrl
mov
and
into
mov
mov
pop
adc
gs
lds
jp
loopnew
add
cwtl
jnp
outsb
mov
push
mov
aaa
jmp
cwtl
sub
mov
push
xchg
pop
sub
mov
call
xchg
sub
mov
lret
arpl
mov
mov
scas
bound
fnstcw
jno
sbb
ret
inc
jb
paddb
xchg
lea
lret
mov
into
insl
testb
ljmp
dec
jecxz
inc
lcall
and
aad
cmp
pop
fadd
pop
je
mov
xchg
xchg
mov
in
fistl
xor
jmp
jge
jae
sub
mov
lods
mov
mov
xlat
sbb
pop
mov
rcrl
jmp
leave
fwait
mov
pushl
pop
inc
int
leave
xor
xor
sub
lret
push
adc
mov
outsb
jl
xchg
iret
imul
push
loope
cmp
stos
pop
mov
ja
or
push
push
mov
sub
sbb
mov
or
push
dec
loop
push
lret
stos
pavgw
loope
outsl
sbb
cli
mov
mov
call
loope
and
mov
lea
or
sti
inc
iret
dec
or
lret
push
adc
push
cmp
popf
sub
insb
or
cmc
mov
cmp
aam
xchg
jnp
rcl
in
gs
lds
add
pop
push
shl
aam
xchg
imul
pushf
stc
iret
jl
imul
mov
or
lods
lods
cmp
hlt
jo
add
popa
jp
test
or
loope
xchg
rcll
and
lret
jg
loope
int3
push
sahf
fildl
cmpsb
xor
scas
jno
jecxz
cmp
add
mov
cmp
mov
inc
lret
out
xor
jp
lock
xchg
scas
xchg
pop
in
inc
or
rcrl
nop
push
adc
loopne
pop
aas
xchg
ds
test
je
push
jp
inc
push
pop
push
sub
pop
cmc
mov
push
jae
fmuls
cs
pusha
insl
ds
in
mov
xchg
imul
inc
cld
xor
sub
push
mov
push
scas
mov
push
sub
loope
fbld
jl
jg
fildl
xchg
scas
ja
sub
xchg
jo
xchg
xchg
orb
and
fnstsw
mov
loop
mov
in
push
jecxz
jns
rolb
leave
loop
aaa
sar
sub
popa
xlat
jl
es
mov
mov
aaa
adc
inc
and
mov
mov
adc
int3
leave
jmp
imulb
mov
xlat
jns
es
push
mov
mov
rorb
xchg
mov
lret
sbb
dec
dec
mov
pop
popf
jg
bound
out
jne
scas
mov
jmp
lret
xchg
jo
fwait
dec
ret
fstps
or
sub
fcomps
rcl
test
iret
mov
dec
mov
loop
jmp
push
aas
nop
mov
nop
rcrl
cmp
adc
stc
jae
push
or
ret
xorl
into
push
xchg
xchg
jnp
jmp
out
inc
fldt
sub
fcomps
or
push
ljmp
adc
mulb
out
enter
mov
mov
hlt
jno
or
jns
aas
nop
in
push
xchg
or
mov
xorl
pop
pop
icebp
cmpb
in
cli
shrb
test
es
xor
jbe
push
cmpsl
fbstp
shl
xor
push
int3
jo
mov
mov
sbb
mov
adc
int3
dec
pop
fisubl
sub
sbb
mov
xchg
cmpsl
pop
popf
in
clc
sub
subb
clc
fistpl
cltd
addr16
cmp
mov
nop
mov
or
inc
inc
gs
sbb
cmp
sahf
lcall
inc
xchg
icebp
cmc
cmc
outsb
movb
dec
pop
pop
cltd
cmp
add
xchg
pop
add
adc
lods
mov
jae
popf
lds
xlat
xchg
push
push
pop
cmp
stc
sbb
dec
lcall
sub
inc
pop
es
mov
ds
leave
sub
jge
and
cmp
jmp
sti
xchg
dec
xchg
cli
lahf
or
xchg
cmp
push
mov
out
mov
xor
fldt
mov
and
pop
add
mov
ds
fiadds
dec
repnz
popf
and
outsb
jp
mov
cmp
sarb
aad
dec
and
xor
cs
sti
jns
orb
mov
clc
outsl
std
push
test
hlt
mov
mov
fmulp
mov
iret
fbld
aad
jno
mov
pop
ss
inc
adc
mov
lock
fdivrs
syscall
mov
cmp
or
cmp
in
addr16
mov
jg
enter
push
leave
add
push
inc
call
js
aad
and
jae
icebp
dec
movsl
cmp
sbb
add
cs
cmpsb
shr
pop
adc
test
fmul
jg
test
scas
xor
notl
push
bound
adc
push
sub
mov
adc
lock
adc
add
mul
push
fmull
mov
test
xchg
push
ret
pop
mov
mov
imul
stos
pop
sub
adc
fs
hlt
lcall
data16
xchg
jo
jmp
in
sub
inc
lahf
push
or
repnz
lahf
push
push
out
inc
bound
push
dec
pushf
popa
sbb
aad
jmp
cmc
test
mov
or
out
je
mov
xchg
xor
sbb
popa
fstpt
push
jbe
mov
xor
imul
sahf
cmp
sahf
xor
mov
xchg
aam
aam
orb
cmc
aam
push
or
sbb
mov
es
les
je
add
lahf
sahf
std
mov
xchg
cmp
xor
pop
addl
push
dec
adc
inc
in
aam
jmp
xlat
repz
fmuls
int3
pushl
repnz
mov
enter
stc
cltd
and
or
mov
pop
mov
xchg
subb
mov
xor
cmpsb
mov
add
mov
ss
sbb
sub
and
jae
sub
test
imul
xor
shlb
mov
loop
cmpb
ss
mov
sbb
mov
jecxz
pop
arpl
dec
xchg
adc
lock
mov
jne
mov
pushl
sahf
jle
test
xor
lds
cmp
enter
popa
rcll
or
sub
insb
test
push
or
inc
testb
sub
sahf
jmp
out
cmp
in
dec
icebp
pop
rcrl
shll
jmp
xor
insl
mov
loope
fwait
gs
outsb
cmpsl
push
in
push
adc
out
jae
divb
push
cwtl
negl
mov
jnp
mov
fldt
and
out
test
cmp
pop
xchg
add
daa
jae
mov
add
mov
fisubs
jp
xlat
movsl
addr16
lret
mov
xor
outsl
or
ds
fisubrl
sub
lock
adc
es
fisubs
fcmovnbe
sbb
hlt
test
stc
cli
cltd
adc
mov
inc
std
inc
out
or
mov
adc
jno
xor
mov
daa
insb
pop
cmp
sub
into
dec
pop
mov
add
fcomi
cmp
add
addr16
cld
dec
fldenv
pop
or
shrb
loopne
test
xchg
mov
in
mov
test
adc
mov
lcall
cli
in
mov
push
in
adc
out
push
dec
push
lret
leave
cwtl
repz
xchg
and
xor
add
mov
adc
ljmp
cmc
int3
aam
pushf
cmp
mov
and
cmp
insl
mov
cmp
inc
stos
xchg
filds
popa
stos
and
push
and
in
push
or
mov
xor
flds
pop
pushf
mov
and
jle
inc
xchg
push
insb
decl
mov
orl
rcl
nop
push
in
xor
fnclex
xor
mov
sub
jae
jno
mov
cmpb
in
shlb
call
fdiv
icebp
sbb
loop
mov
xor
inc
pop
aam
stos
fadds
xchg
loop
pusha
cltd
sarb
movb
fnsave
adc
mov
loop
out
jp
out
push
dec
jp
sub
scas
adc
out
mov
aam
ja
test
jp
xchg
aam
pop
dec
inc
sub
jno
cmpsl
sub
jae
add
mov
pop
stos
add
push
loop
fnstcw
or
push
xchg
outsb
xchg
popf
pop
shr
cmc
mov
jg
fdiv
xor
pop
xchg
jge
clc
push
mov
das
test
dec
in
inc
imul
push
jmp
stc
push
imul
divl
inc
jnp
inc
daa
xchg
ss
hlt
jne
enter
and
or
nop
pop
push
pop
shlb
in
mov
mov
pop
or
jnp
dec
in
int3
push
sbb
in
rcrb
into
shrl
lds
cli
pushl
xchg
xchg
mov
and
nop
adc
pop
sub
adc
pop
into
adc
jb
xor
xor
idivb
enter
movsb
xchg
andb
cld
or
adc
ret
and
aaa
jo
stos
int3
ret
nop
test
inc
push
sub
and
jno
sbb
test
pop
clc
pop
negb
cmp
sub
mov
int
lret
bound
cmp
mov
mov
enter
scas
sbb
jns
pop
jp
popl
or
je
push
stc
mov
and
xor
cmpsl
cmpsl
add
mov
arpl
mov
ret
in
adc
jp
mov
sarb
pushf
dec
or
dec
imul
xor
add
mov
jmp
jecxz
dec
dec
and
lods
push
add
add
mov
cmc
adc
push
lock
sti
aas
int
out
fildll
xor
sub
out
xor
lahf
fwait
ljmp
xorb
jg
dec
mov
push
push
mov
mov
into
and
idiv
stos
fcomi
dec
mov
xor
mov
lcall
mov
mov
jmp
jecxz
dec
dec
and
lods
push
add
add
lret
push
mov
xor
in
clc
arpl
or
jl
lods
cltd
sbb
addr16
mov
pop
or
push
lea
cmp
lds
cld
xor
push
or
and
repnz
lret
pushf
mov
push
test
sub
fdivrl
mov
test
dec
sbb
sub
aam
dec
fcom
cmpsb
loop
pop
pop
dec
pop
jle
fnsave
into
inc
cmp
xor
mov
pop
inc
sbb
into
push
mov
sahf
dec
sti
cli
push
dec
or
shll
mov
dec
or
pusha
rcrl
pop
mov
jg
pop
and
sbb
cmp
loopne
pop
pop
fiadds
and
mov
xor
shlb
jne
lods
pop
or
adc
lcallw
inc
mov
loopne
aaa
lods
addb
lret
in
aaa
jle
in
fstps
jp
rorl
adc
aam
add
out
adc
xor
push
push
bnd
cmp
shll
xor
sbb
xor
fnstenv
stc
mov
pop
aad
ljmp
lcall
imul
pop
out
fdivs
jg
pop
hlt
xchg
cmp
jne
xor
divl
mov
ljmp
pusha
outsb
into
dec
out
lret
push
addl
or
mov
daa
out
sbb
xor
mov
sbb
add
lret
imul
shlb
sbb
add
cmpsb
daa
loopne
adc
sbb
or
rcrl
sub
add
lea
fsts
scas
lods
sub
jge,pn
xor
lods
and
ret
fmull
movsb
jg
mov
and
movsl
mov
sub
lahf
lahf
in
push
or
and
shl
or
or
xchg
push
or
inc
mov
rclb
pusha
adc
lods
leave
pop
rorl
dec
out
sub
stos
sbb
je
xor
adc
add
mov
cmpsl
dec
jmp
sbb
add
sub
xchg
mov
insb
in
pop
or
scas
push
inc
pusha
mov
in
int3
shrl
ljmp
push
out
mov
addr16
pop
mov
movsb
add
adc
in
sarb
sahf
mov
repz
repnz
sub
ret
mov
lahf
xor
iret
add
pop
xor
pop
loop
outsb
inc
adc
call
xor
push
dec
dec
leave
inc
dec
add
add
sub
call
leave
les
cmp
repnz
ss
cmp
jns
add
das
xchg
push
test
and
dec
jnp
sub
cli
lea
dec
popa
fwait
jmp
into
push
cmp
xchg
test
jecxz
jp
into
mov
adc
shl
sbb
xor
imul
inc
fnstcw
sub
mov
mov
out
jnp
ja
stos
cmpsb
mov
xchg
dec
fnstcw
adc
hlt
xchg
mov
loopne
daa
mov
fwait
mov
popa
nop
jecxz
and
inc
sbb
jcxz
cmp
movsl
push
jmp
repnz
lea
sub
jae
push
sub
dec
stos
insb
adc
dec
pop
sub
lret
sahf
aaa
lods
add
cmc
and
mov
add
imul
aaa
push
mov
shl
sub
push
sub
lcall
icebp
mov
mov
lahf
mov
pushf
test
shrb
mov
rol
add
pop
inc
add
clc
out
pop
or
sbb
sub
mov
frstor
jb
sarl
test
pop
ja
jno
dec
xor
add
jo
or
xchg
xor
push
jns
test
sbb
jge
adc
xlat
adc
das
jbe
shlb
mov
pop
roll
shrl
aad
shrb
in
test
clc
push
sub
or
nop
xchg
push
mov
mov
dec
call
clc
hlt
mov
and
es
fsts
mov
hlt
orb
xchg
mov
movsb
ret
and
mov
xchg
mov
in
dec
mov
pop
stos
pop
cmp
adc
pushf
pushf
push
add
fistpl
push
arpl
mov
sbb
rclb
and
jo
ljmp
fisttpll
out
dec
data16
dec
cmpsl
sarb
push
outsl
movsb
cs
or
je
mov
sbb
dec
xor
dec
jno
sbb
mov
add
lret
push
push
sti
push
hlt
shlb
icebp
xchg
nop
movl
fisubrl
testb
sbb
and
aam
push
pop
mov
push
or
cli
lret
mov
or
or
dec
fildl
adc
xchg
mov
insl
mov
cmp
and
fwait
gs
dec
mov
sbb
sbb
stos
adc
xchg
xchg
fisubrl
arpl
adc
add
fidivrl
push
mov
mov
mov
push
lods
cmp
cmpsb
pop
inc
pop
jnp
mov
xor
mov
outsb
or
shlb
or
sub
in
push
sub
adc
lea
in
into
push
and
stos
repz
xchg
pop
push
xchg
sub
out
scas
pop
or
cmpb
jecxz
xchg
dec
adc
jmp
add
jecxz
out
pop
lock
cld
mov
sarb
repz
jp
aad
into
mov
cmp
xchg
out
or
imul
cmp
mov
dec
push
push
add
push
or
test
fidivrs
mov
pop
and
int
hlt
dec
cld
mov
push
fdivr
mov
pop
movsb
fs
sbb
fcoms
adc
jmp
mov
jne
mov
inc
fisubrs
mov
xchg
sti
mov
cmpsl
adc
jne
push
jb
inc
push
jmp
push
je
test
xchg
add
stos
jb
ficoms
decl
sbb
xlat
xchg
cmpsl
popa
pushf
push
jbe
cld
jo
jp
das
cwtl
sub
sbb
lcall
hlt
hlt
dec
aam
hlt
rolb
pushf
jne
popa
xlat
lret
mov
mov
inc
stc
in
test
xor
dec
aas
insb
jnp
shrb
mov
in
inc
mov
cli
fwait
xchg
jbe
dec
add
jge
sbb
inc
les
push
lret
xchg
xor
out
aas
cmp
xor
stc
xchg
cltd
sub
cmp
lock
mov
push
mov
and
rolb
stc
pop
inc
sahf
js
xchg
mov
push
sub
fimull
and
filds
cld
xor
cmp
fucomip
mov
loopne
outsl
sbb
push
xor
pusha
sub
adc
push
jl
inc
out
adc
xchg
sahf
add
popa
xchg
in
inc
repnz
adc
push
fidivrl
out
mov
call
lea
call
dec
sbbl
mov
aad
xchg
out
icebp
adc
mov
cmp
cmp
mov
aas
mov
adc
enter
bswap
test
shlb
and
mov
adc
push
add
stos
and
xor
xorb
in
xor
cmpsb
pop
cmpsl
and
or
scas
imul
xlat
mov
lds
jo
inc
negb
mov
sbb
mov
iret
aas
jg
sbb
popf
push
cmp
mov
cld
ret
test
cwtl
push
or
jl
jb
cmpsb
test
fwait
and
lahf
mov
cmpsl
fwait
sub
adc
sti
cmc
outsl
xlat
or
sub
sbb
cmp
jbe
inc
insl
dec
in
sbb
mov
inc
adcl
dec
movsl
mov
fld
pop
mov
cmc
fdivl
into
add
dec
out
movsl
pop
dec
test
out
xchg
cmp
push
pushf
sbb
add
mov
rcl
in
mov
sub
inc
aas
ret
sub
push
jg
xorl
dec
pusha
mov
call
add
clc
rcr
mov
in
lea
pushf
mov
lock
clc
les
lock
orb
inc
sub
mov
test
mov
shlb
mov
push
pop
fidivl
xchg
mov
lods
push
movsb
fsubr
push
mov
push
pop
clc
cwtl
or
jp
fistpl
cmp
dec
in
and
cmp
jmp
insl
ret
js
aaa
xchg
fwait
pop
adc
pop
sti
mov
outsb
lds
fidivrl
das
sub
add
xchg
loopne
xchg
out
rcll
or
fcmove
inc
ret
inc
int3
mov
in
leave
inc
dec
dec
lret
ficoms
dec
testl
outsl
loope
cmpsl
flds
lods
shr
ret
push
out
inc
add
xchg
mov
ss
or
push
pop
arpl
adc
jecxz
imul
pop
pop
sbb
fbld
xchg
cs
jl
out
and
pop
fwait
punpckldq
fnstcw
jns
rorb
fdivrs
mov
push
xchg
xchg
add
mov
xorb
mov
push
jl
lock
mov
pop
addr16
and
sub
add
loopne
addl
out
mov
imul
fistpl
out
or
xor
das
mov
outsl
lods
shlb
pop
roll
imull
fldenv
jo
test
lods
push
cli
cltd
adc
lods
inc
ja
js
test
lahf
xor
sbb
pop
sbb
cs
ds
mov
addr16
scas
and
pop
pop
jne
outsl
mov
adc
push
pop
fiadds
mov
cmp
push
xor
xchg
ja
outsl
dec
inc
cli
popf
repz
and
jg
sbb
imul
pushf
mov
jns
inc
je
ret
add
dec
mov
push
inc
shlb
lock
xlat
rorb
imul
ljmp
inc
sbb
mov
daa
pop
push
or
pushf
cmove
aad
jae
stc
stc
xor
bound
pop
mov
sti
sahf
mov
jns
loope
out
in
in
addr16
mov
xchg
je
ficoml
mov
push
ret
push
cwtl
cli
xchg
inc
enter
fldcw
push
jp
or
inc
mov
push
lret
push
jbe
mov
sbb
lods
mov
mov
jecxz
inc
adc
ja
mov
repz
lds
outsb
int3
xor
push
or
mov
or
jl
push
in
push
xchg
mov
cmpsl
mov
insl
xchg
pop
call
mov
pop
ljmp
xor
imul
mov
mov
fwait
pop
imul
xor
mov
popa
cmp
lahf
pop
jmp
popf
enter
cmp
hlt
dec
call
cltd
and
sbb
pop
jecxz
push
loope
xor
cmpsb
add
mov
std
jae
and
mov
push
fsincos
pushf
sub
lods
jbe
mov
lods
and
fisubrs
imulb
and
adc
or
in
addr16
adc
jo
std
movl
inc
aas
imul
mov
mov
out
add
inc
lcall
pusha
cmp
ret
clc
dec
sbb
mov
inc
sub
pop
aas
pop
stos
mov
add
ja
xor
pop
adc
mov
jmp
xor
popf
in
jecxz
lcall
pop
pop
je
movsl
jge
dec
push
mov
cs
insl
mov
push
xchg
inc
pop
mov
jne
rcrl
sbb
repz
add
and
push
loopne
dec
pop
mov
sbb
stos
or
pop
inc
add
rcrb
dec
jge
lods
xor
in
inc
les
mov
das
pop
fs
ljmp
push
cmc
sub
addr16
movsb
jle
push
and
mov
push
xor
push
inc
lds
xor
cld
dec
xor
stos
jl
cmp
aam
jbe
inc
cmpsb
mov
jne
jns
mov
out
adc
iret
mov
mov
fldl2e
xchg
fcmovbe
je
and
cli
fildll
fucomp
fisttpl
fwait
pop
xadd
or
lret
mov
sbb
jge
xor
xchg
cmpsl
jmp
dec
sahf
dec
aas
int
imul
loope
movsl
lahf
cli
adc
xchg
sub
andb
xchg
xchg
dec
dec
mov
movsb
stos
shrl
imul
add
lock
xchg
sub
pop
cmc
loope
divl
xlat
xor
or
stos
pop
mov
ja
or
push
jmp
mov
mov
stos
push
pusha
cmp
idivl
lds
xchg
int
pop
push
add
aam
and
movsb
pop
sub
cs
aad
sub
or
jnp
push
push
dec
hlt
push
jl
dec
sub
idivl
dec
movb
ljmp
pop
push
pop
xlat
cmc
repz
shrl
mov
cmp
inc
cmpsl
xchg
gs
add
out
mov
gs
rolb
in
mov
fstl
lods
ja
adc
arpl
jnp
sub
fsts
sub
jp
paddq
xchg
pop
lds
cld
ja
cmp
jp
and
cs
mov
outsl
adc
leave
xchg
jmp
pop
and
jno
lret
jo
adc
shll
jle
pop
call
icebp
frstor
ret
repz
xor
ja
out
add
shrb
push
xchg
cmp
push
repnz
or
out
add
enter
sbb
jmp
out
pop
cmp
jb
dec
outsb
fisttpl
fiaddl
push
push
clc
aaa
jno
sahf
and
les
cwtl
push
mov
xchg
imul
fimuls
mov
jns
mov
sbb
pusha
andb
cmpsl
fcmovu
addr16
aad
sbb
sub
sbb
sbb
aaa
mov
testl
or
xchg
inc
scas
fidivl
das
test
daa
in
lds
push
sub
jno
add
leave
nop
push
vaddss
mov
or
lahf
sub
xchg
ret
jge
mov
cmc
scas
push
inc
and
in
mov
inc
pop
jmp
xor
enter
aad
lock
add
pop
add
ret
sarl
adc
sbb
into
mov
cld
fstl
xchg
dec
pop
jl
pop
pop
xor
mov
mov
shll
test
mov
push
loop
ret
in
pop
xchg
xchg
outsl
xor
inc
xor
imul
pop
jg
xchg
xor
sbb
cmc
mov
lea
fwait
pop
lds
jl
in
jecxz
adc
pop
ret
sbb
int3
sbb
ret
popa
dec
push
ret
sbb
push
sub
lcall
in
jne
sbb
jbe
add
in
mov
lock
lcall
xchg
add
mov
gs
loope
lret
pop
call
cwtl
xor
jg
mov
add
in
addb
mov
incl
jg
jne
int3
push
cmp
sahf
or
mov
gs
adc
pop
filds
jae
mov
xchg
sbb
cmc
call
fstl
cld
ror
or
push
and
inc
out
inc
int3
inc
adc
mov
pop
pop
xorl
dec
fdivp
mov
in
lods
mov
cltd
or
sbb
sub
lcall
and
pop
leave
lock
add
mov
push
push
stc
pop
cmpsb
int3
xchg
movsl
popf
mov
insl
sarl
adcb
clc
jbe
adc
jne
popa
dec
ljmp
lea
sub
mov
xor
js
sbb
push
jg
ds
outsb
cmp
mov
mov
sbbl
shlb
mov
cltd
sub
insb
or
mov
xlat
dec
gs
jmp
ss
inc
aas
daa
fld
int
xor
cmp
jp
lea
movsl
mov
lahf
mov
mov
addr16
mov
adc
mov
rclb
gs
jle
xchg
fstl
push
cld
js
aam
outsl
or
sub
dec
es
rorb
je
out
mov
out
and
mov
mov
ret
dec
popf
jle
pop
loop
xchg
nop
push
ss
cwtl
jl
mov
mov
addr16
test
ret
subl
sbb
and
mov
in
fimull
aas
and
fdiv
push
fmul
mov
loop
and
jns
inc
subl
xchg
push
into
push
cmp
jnp
xchg
out
cld
push
xchg
inc
sub
mov
sub
aas
cwtl
cmp
pusha
sti
sub
je
pusha
mov
adc
add
xor
sub
ret
adc
shll
or
dec
jmp
ud1
pusha
cld
loope
mov
cwtl
and
jecxz
adc
sub
in
test
sub
fsubs
jns
sub
repz
out
subb
pop
sub
lcall
inc
dec
cli
lea
in
aad
adc
adc
push
inc
in
cmpsb
outsb
cmp
push
dec
popf
jbe
xchg
aam
jb
adcl
lret
sub
adc
jo
and
fcoml
push
loopne
stc
sbb
mov
inc
lret
cli
faddl
rcll
imul
lret
arpl
cli
push
push
out
loope
negl
cwtl
loopne
lret
bound
inc
sub
or
loopne
mov
push
or
pop
cmpsl
into
int3
sub
ss
cltd
imul
pop
sub
push
push
lods
or
ret
loope
pop
pop
scas
mov
or
jp
loope
les
mov
in
fcmovnb
push
imul
jne
inc
aad
shll
inc
add
fmulp
pop
addr16
out
add
and
bound
lret
inc
xor
inc
mov
es
sbb
adc
push
lods
cltd
or
lea
js
cmp
std
mov
cmp
repnz
scas
call
pushf
inc
ds
and
mov
scas
sbb
sbb
add
cmpsb
sub
mov
icebp
pop
mov
pop
sti
push
test
or
cs
scas
out
xchg
movsl
jb
repz
dec
out
cmpsl
jmp
sar
fwait
cmp
or
cmp
or
adc
or
dec
js
xchg
int
xchg
jno
out
sbb
jae
shrb
int
sbb
int3
shll
jle
sti
push
das
nop
repz
adc
add
dec
fisttpll
jecxz
dec
mov
out
shlb
lock
loop
sahf
nop
testl
repz
jns
xchg
mov
sub
lahf
jge
jns
mul
pop
loop
in
call
or
stos
inc
rcr
into
repz
testb
xchg
testb
repz
jge
mov
stos
add
mov
and
or
insb
sbbb
into
andb
fisubs
mov
mov
mov
mov
dec
es
into
sub
mov
outsb
roll
insb
cltd
jg
pop
lret
rcrb
jne
sub
mov
jno
dec
push
jae,pn
lcall
cli
or
cld
rcll
mov
inc
pop
aaa
test
xor
in
in
lea
imul
mov
lahf
sub
es
stos
push
jb
decl
test
jmp
pop
mov
dec
lods
int3
sub
jge
bnd
sbb
adc
xor
into
lret
cwtl
in
gs
or
pop
push
out
jbe
dec
rorl
cld
sbb
mov
mov
adc
and
jg
xchg
jl
test
dec
sub
jno
sub
mov
or
repz
jge
loope
mov
adc
js
repz
sub
sbb
sti
push
or
loop
pushf
sbb
push
cs
or
adc
enter
je
cmpsb
inc
fnstsw
cmpsb
fdivr
xchg
out
insl
leave
out
cmp
pop
flds
sub
lds
inc
add
cli
leave
cmp
lcall
pop
mov
fnsave
arpl
mov
dec
push
loope
lea
int3
scas
loop
pop
xchg
xchg
jp
rorl
mov
roll
nop
mov
cmp
push
cmp
outsl
push
sahf
cmpsl
adc
mov
or
loope
outsb
pusha
jne
cmpsl
pop
cli
mov
nop
sub
dec
push
shrl
inc
test
pop
mov
or
dec
mov
imul
jmp
xor
out
sti
mov
outsb
mov
jge
or
jno
ss
mov
repz
fxch
std
ljmp
pushf
cmpsb
test
ficomps
adc
rcll
xor
imul
ret
movsb
sbb
or
hlt
lahf
mov
inc
cmc
les
jo
scas
inc
xchg
xchg
loop
pop
jo
or
jb
rcr
xchg
adc
sub
adc
xor
lea
aaa
add
sbb
fists
jnp
mov
scas
cmp
sbb
aad
daa
jl
shlb
mov
repnz
das
cmp
nop
jmp
std
add
mov
dec
inc
sarb
and
incl
or
jo
xorb
jae
insb
add
mov
and
push
dec
dec
push
mov
xchg
mov
aam
test
shrb
mov
lds
push
stos
ret
bound
sbb
mov
mov
jmp
les
popf
nop
call
testl
mov
inc
cmp
lods
pop
jb
lods
adc
test
iret
or
bswap
pop
dec
shll
fisubrs
inc
cs
xor
jmp
or
pusha
cmp
and
fst
aam
jbe
repz
dec
mov
adc
in
int
in
pop
scas
jg
adc
sbb
xchg
mov
push
sbb
hlt
push
fdivrs
cmp
out
jge
and
mov
sbb
pop
jns
test
dec
xor
pop
addl
push
out
rol
push
ja
pop
test
xor
mov
int
rcl
enter
std
jmp
mov
sbb
aas
and
sbb
mov
fidivrs
lret
add
or
popf
jg
into
xchg
imul
push
adc
mov
dec
pop
enter
pop
dec
push
adc
sub
xchg
repnz
xchg
sub
aam
xlat
arpl
sbb
cmp
sbb
std
cwtl
push
iret
push
add
clc
jnp
sar
add
jmp
rcr
lds
outsl
add
bound
push
mov
mov
inc
dec
pop
data16
sbb
imul
mov
pushf
mov
cmpsl
clc
jae
cmp
aam
fisubl
test
dec
gs
aam
int
mov
out
jbe
stos
enter
mov
pop
cmp
xor
jp
rorb
fiadds
test
inc
movsb
jg
lret
xor
mov
push
cld
out
sub
mov
insl
enter
movsl
sbb
dec
mov
pop
movsb
or
sub
adc
jbe
push
pop
out
ljmp
sbb
out
xchg
mov
cmp
dec
xchg
mov
rcrb
push
test
test
add
dec
or
xor
mov
mov
into
ja
or
mov
dec
pop
addr16
xchg
stc
adc
addb
push
jns
jbe
adc
frstpm(287
push
push
push
fnstcw
test
andl
push
fistl
jo
in
cltd
ret
mov
push
das
das
test
daa
scas
dec
and
mov
dec
inc
fisubl
sahf
xchg
pushf
or
fsubrl
js
push
cmc
sub
addr16
movsb
jle
or
pop
pop
test
aad
push
or
push
ffreep
jmp
or
pop
sub
or
dec
cmp
sub
dec
mov
adc
cli
int
test
dec
dec
push
in
add
mov
push
ficoml
call
jecxz
pop
aad
test
orl
xor
xchg
cmp
cwtl
out
adc
mov
scas
in
jbe
add
jne
ret
pusha
divb
pop
in
cltd
sub
out
mov
mov
add
faddl
aam
and
scas
cltd
pop
lds
out
dec
jecxz
sbb
or
les
les
jmp
out
xchg
jge
inc
shrl
mov
inc
sbb
jle
xor
jo
jecxz
and
flds
xchg
imul
out
pop
scas
subl
inc
xlat
pop
jle
mov
push
add
jl
fidivrs
mov
jnp
sbb
xchg
push
mov
pop
outsb
sub
cmc
sahf
mov
mov
std
sbb
jnp
jae
sbb
adc
mov
pop
repz
adc
mov
loope
mov
cmp
and
in
xor
xor
mov
movsb
test
and
inc
jmp
pusha
mov
sub
scas
pusha
popa
test
mov
movsb
ljmp
ss
jp
xchg
insl
jno
lods
loopne
movsb
and
pusha
inc
clc
popf
in
dec
lahf
cmp
mov
and
add
adc
mov
xor
sbb
adc
icebp
push
rcrl
loop
sub
nop
jns
divb
push
pop
in
mov
sbb
sbb
xor
pop
cmp
int
fwait
sti
or
ret
aad
imul
xor
jmp
pop
pushl
add
mov
orb
push
and
xchg
push
outsl
cmp
es
xor
xor
and
sti
mov
std
lret
and
push
xor
jp
in
lea
in
clc
out
mov
xchg
sub
movsl
sbb
mulps
lahf
test
ficomps
lcall
push
xor
sbb
inc
cmpsb
pop
inc
xchg
sbb
adc
add
mov
ss
xor
sbb
fnstcw
dec
gs
lods
inc
cmp
xor
out
mov
xchg
pop
cmp
nop
shl
add
mov
push
mov
daa
insl
in
jae,pn
mov
into
in
cltd
jne
fildll
lret
jb
sbb
fists
push
or
cmpb
arpl
loop
push
in
sub
and
test
mov
and
cld
in
jmp
or
lea
ljmp
scas
pop
in
or
mov
dec
xchg
test
xchg
mov
add
push
fnstenv
std
gs
pop
xor
push
cmp
scas
xchg
loope
mov
test
xchg
inc
and
filds
and
test
or
sbb
pop
inc
sub
mov
pop
inc
mov
jne
xchg
shll
repnz
adc
mov
scas
jnp
jg
loop
negb
stos
cmc
xchg
mov
add
lods
out
xchg
div
push
mov
nop
test
sbb
popf
fcoml
push
jnp
mov
ret
fs
sbb
or
pop
mov
cld
cwtl
rolb
je
xchg
mov
mov
dec
jg
loope
xchg
iret
sub
mov
cmp
ja
lahf
loope
rcr
sub
imul
rcrl
into
je
popaw
ret
fcomps
sbb
mov
xlat
xchg
loopne
push
and
dec
scas
repnz
icebp
rcr
pop
clc
ja
enter
out
sub
jmp
mov
ficompl
cli
inc
shrb
sub
and
adc
dec
and
fincstp
sti
hlt
jmp
mov
add
inc
rolb
int3
sbb
xlat
out
and
fsubrs
test
push
sarb
cmp
sbb
jecxz
pop
fprem
jmp
dec
push
jb
insb
push
mov
js
mov
ljmp
add
dec
push
inc
lcall
jbe
aad
sbb
lock
loop
outsb
xchg
lock
mov
mov
mov
inc
imul
les
in
cmpsl
aaa
mov
lods
arpl
inc
shrb
sbb
inc
add
mov
imul
je
cwtl
daa
and
movsb
int3
push
loop
bound
cmp
aaa
out
ficoms
loop
shrl
jg
aaa
add
scas
pusha
sbb
push
xor
ret
out
cmp
and
cmp
pop
pusha
mov
xor
loopne
mov
cltd
xor
add
neg
mov
out
in
out
aaa
add
sbbl
ljmp
mov
pop
mov
loope
psubb
push
xor
stos
pop
xlat
cld
pop
jbe
pop
cmp
lcall
int3
mov
test
loope
xchg
movsb
sbb
loope
in
inc
jp
enter
es
stos
and
ffreep
cmpsl
mov
call
orb
fsubrl
jg
jl
cld
ret
fcomps
faddl
faddp
mov
lods
sub
pop
cmp
insl
ficoml
test
xorl
fistpl
stos
in
andb
inc
push
jne
xlat
stos
mov
aad
div
sub
jl
push
adc
cmp
hlt
lahf
leave
and
push
adc
sahf
ret
filds
stos
or
pop
sbb
bound
dec
arpl
fmull
iret
ficoml
jno
int
aaa
iret
cmpsl
adc
lods
xor
cmp
outsl
jl
int3
add
nop
add
cmpsl
in
adc
jle
ret
push
movsl
sub
adc
cmp
sub
cmp
sub
cmp
mov
mov
stos
dec
xchg
test
inc
push
loopne
xchg
rcl
data16
jle
and
pop
xor
jae
and
stc
inc
arpl
imul
sbb
imul
movsl
lcall
stos
adc
dec
cmpsb
out
xchg
vmovaps
int
stos
add
clc
mov
jbe
mov
es
jecxz
pop
lock
xor
xor
jno
ss
mov
test
xor
stos
jno
mov
jnp
aam
inc
and
add
mov
pop
push
lret
xlat
or
inc
vmread
or
push
xor
in
mov
push
int
leave
out
sbb
xlat
cmp
mov
shl
ds
test
sbb
adc
xchg
nop
jp
xchg
cmp
sub
cmpsb
inc
mov
or
and
xor
outsl
jbe
push
mov
mov
js
or
pop
push
add
mov
add
cwtl
cmpl
sub
outsb
and
jp
js
sbb
inc
cmp
pop
push
out
imul
iret
repz
mov
in
fdivrs
add
jno
xor
inc
aad
mov
cmp
popa
xchg
mov
pop
sub
mov
sub
jno
add
cmp
add
leave
and
movsb
jno
or
or
jbe
cmp
loopne
je
mov
mov
sub
enter
lahf
mov
lds
xor
xchg
and
cmp
jmp
stos
jne
jp
sbb
ja
xor
jnp
out
loope
lcall
sbb
dec
cmp
aaa
mov
dec
cmp
sub
out
jb
sub
push
dec
jno
addl
out
lret
add
push
or
outsb
rorb
xchg
sbb
in
push
add
ret
push
arpl
dec
sub
mov
in
addr16
and
lds
add
mov
xor
pop
call
adc
in
jbe
movl
sbb
pop
out
mov
xchg
shlb
scas
in
cli
push
jmp
mov
dec
rclb
adc
pop
mov
repz
mov
mov
pop
pop
cmp
rcrb
sbb
jno
fisttps
cmc
mov
lds
ja
mov
cmpsb
and
int3
mov
mov
pop
push
aam
loop
mov
dec
adc
mov
dec
mov
jg
and
xlat
shlb
cmp
stos
int
mov
mov
lcall
adcb
repnz
add
dec
les
cmpsb
inc
sub
pop
adc
adc
rcll
fadd
ret
cltd
int3
mov
popa
pop
ja
adc
mov
jae
outsl
aad
insl
cmp
in
mov
insl
inc
adc
daa
addr16
sub
sahf
lahf
or
js
clc
sbb
bound
arpl
cli
data16
sahf
dec
stos
imul
aam
mov
jl
sbb
pop
mov
ja
or
push
push
pop
test
push
jle
push
addr16
push
inc
mov
stc
mov
push
out
ret
gs
jmp
sbb
fcomps
into
jb
pop
adc
mov
hlt
fldenv
inc
xchg
push
sbb
sub
mov
arpl
jecxz
pop
imul
adc
jg
adc
pusha
lods
fsts
jle
sbb
cwtl
xor
popa
sbb
mov
pop
push
push
jnp
orl
jae
cmpsl
arpl
jne
inc
subb
push
cmp
jg
jb
mov
cmpsl
mov
push
and
sub
in
out
pop
jno
aaa
les
push
inc
inc
clc
jg
jnp
adc
cmpsb
mov
sub
push
inc
mov
sti
stos
mov
shll
ror
fnstsw
mov
xchg
popf
cwtl
ret
andl
push
addr16
lock
sti
frndint
inc
cld
sub
add
mov
pop
cwtl
loop
outsb
push
and
cld
sti
jae
bswap
inc
push
jmp
adc
and
lret
mov
cs
fldenv
test
mov
stos
and
sbb
sbb
test
cltd
mov
mull
dec
add
or
add
pop
ljmp
add
jae
nop
call
gs
in
sbb
in
test
adc
push
in
add
ret
pop
fsts
adc
sbbb
stos
mov
ret
test
sub
pushf
shl
sbb
mov
inc
and
or
pop
sbb
daa
leave
push
das
dec
enter
test
pop
mov
dec
mov
pop
pop
push
pop
ret
mov
xlat
cmpsb
lcall
fcompl
mov
xor
pop
das
dec
ret
sbb
cltd
shrb
movsb
inc
fidivrs
push
stos
iret
xor
push
sbb
dec
andb
loop
dec
push
push
push
es
testl
jg
push
sub
arpl
or
lds
rclb
cmpl
ss
add
xorb
lcall
jecxz
lods
pop
jb
lods
adc
test
iret
or
lods
inc
adc
mov
in
adc
mov
xchg
lock
xor
in
jno
push
scas
push
cmc
dec
pop
lods
cwtl
cmp
cmc
daa
jmp
mov
rclb
adcb
jae
lahf
inc
sbb
out
fists
xchg
fidivrl
cmpsl
dec
fs
push
mov
sub
fisubrs
xchg
fimull
mov
daa
pusha
xor
push
and
mov
adc
mov
add
cmpb
sbb
insl
mov
pop
cmpsb
push
call
add
add
nop
adc
fisttpll
pop
xor
sbb
sbb
into
pusha
jo
jb
inc
mov
cmp
or
daa
pop
mov
cmc
inc
in
out
into
movsb
icebp
fisubl
mov
or
inc
jno
mov
dec
xor
call
mov
xchg
adc
lods
lahf
cmp
mov
cmp
mov
and
cli
pop
push
add
dec
mov
dec
pop
nop
mull
xlat
push
pop
add
mov
clc
mov
sbb
adc
xlat
movsl
xor
test
lret
icebp
enter
mov
repz
out
stc
push
pop
hlt
xor
jns
mov
das
sub
mov
cmc
dec
mov
dec
cld
loope
jae
add
gs
repnz
adc
dec
rolb
cmp
mov
sbb
clc
xchg
mov
jle
or
adc
fsubs
inc
push
loopne
push
xchg
adc
out
imul
push
rcrl
jle
inc
adc
pushf
addr16
ss
or
leave
dec
fs
nop
mulb
mov
add
xor
test
movsb
jns
fwait
orps
mov
or
sub
data16
stos
jns
out
jl
scas
xchg
cmpsb
loope
rcll
mov
and
mov
xchg
movsl
test
xchg
mov
lcall
and
lret
mov
pusha
ret
imul
mov
dec
rclb
fstps
push
incb
outsl
jb
fcoms
bnd
and
neg
je
out
mov
jne
adc
add
or
dec
int3
lahf
add
ja
cmc
xor
cld
les
lret
dec
adc
ret
out
fucomip
pushf
add
into
cmpsl
insl
dec
fcmovnb
mov
push
sahf
xchg
mov
fisttpl
sbb
adc
fidivl
sbb
jp
mov
sarb
in
add
ja
fs
cmp
dec
sar
jo
adc
adc
push
push
adc
repz
int3
add
push
imul
push
int
in
subb
fwait
add
xchg
push
jb
in
fwait
or
movsl
lea
sub
mov
lock
mov
add
add
push
xor
sbb
xor
xlat
push
xchg
sbb
adc
push
movsl
push
mov
mov
mov
jl
dec
popa
push
xchg
test
mov
lock
mov
push
jmp
ds
xor
xchg
pop
scas
or
pop
jmp
jb
ds
gs
jle
add
dec
mov
dec
fistpl
add
push
lock
sbb
cs
jmp
hlt
insb
mov
fwait
xchg
jl
sbb
adc
push
mov
mov
fsubrs
scas
in
roll
push
sub
rorl
pop
jo
outsl
pop
cltd
pop
mov
and
adc
add
adc
pop
push
adc
sub
aam
popa
fistps
out
adc
or
jl
dec
mov
lock
lock
insl
test
shl
fcmovnu
repnz
or
adc
js
jns
mov
loop
mov
adc
lods
stc
sarb
xor
fistpl
xor
hlt
outsl
pushf
mov
xchg
add
test
dec
arpl
lret
sarl
subb
inc
push
xchg
mov
mov
sub
imul
inc
nop
sub
add
pop
push
into
push
lods
inc
leave
popa
adc
icebp
dec
sub
dec
jmp
jns
push
add
add
movsb
sub
jnp
xchg
push
jl
xchg
xchg
adc
call
jp
fcomps
pop
sbb
jno
addr16
xor
and
mov
into
jno,pn
mov
jge
pop
cld
adc
cwtl
out
ss
and
popf
lahf
ds
arpl
outsb
xor
aas
or
ret
popa
and
icebp
call
jae
mov
cmpsl
xchg
dec
stc
jl
mov
or
je
lea
imul
aam
sub
das
push
rorb
addr16
cmpsl
sbb
gs
cli
or
imul
mov
sbb
inc
mov
dec
sahf
rorb
cwtl
pop
test
pop
popa
test
mov
dec
mov
outsl
loopne
push
stos
mov
cmp
xchg
hlt
insb
push
adc
pop
jbe
adc
push
arpl
cld
dec
cmc
popf
push
mov
xor
out
addb
inc
inc
sbb
inc
push
jmp
fldenv
in
int
mov
sbb
inc
push
orl
lods
pop
popa
rcrl
cmp
xor
or
cmpsb
popf
ret
jle
mov
or
and
cmp
jnp
push
fistpl
icebp
adc
std
lds
push
jge
inc
or
iret
arpl
mov
rclb
rcrb
xor
dec
aam
add
fildl
outsb
push
mov
ficoml
in
movsb
sbb
fsubrl
push
inc
sbb
mov
sub
test
popa
pop
cmp
lods
xor
sub
sbb
sub
jno
push
fsubrl
loope,pt
and
sub
dec
or
or
pop
cli
cli
push
sub
jecxz
lods
cmp
mov
cmp
shlb
repz
or
inc
scas
mov
lret
fdivl
or
add
in
xchg
addr16
push
cmp
repnz
xchg
out
mov
adc
xchg
iret
repz
inc
cmp
mov
xor
fmul
add
xlat
add
gs
ljmp
xchg
jle
xor
stos
lret
mov
jne
jns
lcall
cld
cmp
pusha
xchg
adc
inc
cmp
mov
cwtl
cmp
or
cwtd
lcall
outsl
fisubrl
addl
jle
cli
xor
lret
mov
ss
enter
mov
ljmp
lods
xor
insl
nop
idivl
aas
outsb
loope
sarl
sbb
jl
jg
push
iret
inc
lods
in
mov
cli
push
hlt
jl
popa
das
rorb
rcrl
mov
jle
lods
out
jae
mov
pop
cwtl
push
pop
push
or
addr16
mov
cmpsb
sbb
stos
loopne
pop
cmp
je
inc
fwait
outsl
pushf
lods
lock
xchg
shr
adc
mov
dec
cs
sbb
nop
inc
jnp
xchg
or
mov
loope
stc
out
lods
and
mov
aas
push
push
xor
ds
into
aam
jno
ret
cmp
ss
cmc
sub
cld
sbb
adc
pop
ficoms
jo
and
ljmp
js
mov
enter
addb
push
ficoms
enter
push
scas
mov
aaa
and
sti
and
adc
int3
js
idivl
out
adc
dec
add
out
sub
ja
ja
adc
xchg
pushf
or
cltd
fisubrs
pop
xchg
xlat
loop
xorps
inc
add
xchg
fldt
sub
outsb
cmp
lea
or
jmp
pop
mov
mov
xchg
int
sti
pusha
cmp
or
add
nop
inc
jg
mov
pop
lds
xchg
out
aas
xchg
repnz
push
in
lods
out
aam
icebp
das
mov
inc
lods
adc
adc
sbbl
jge
cmp
sbb
xchg
inc
lods
and
add
xchg
jle
insl
ret
fadds
mov
adc
xchg
jb
lea
ret
inc
jl
add
icebp
dec
dec
into
sbb
int3
test
inc
add
adc
jnp
aam
enter
repnz
inc
test
test
push
das
outsb
iret
cmpsl
sarb
cs
call
cmp
repz
hlt
jmp
sbb
int3
sbb
lahf
mov
jmp
mov
or
or
lret
xchg
pop
mov
movsl
std
mov
add
sub
and
pop
int3
adc
out
add
cmc
fdivrs
out
push
jnp
movzwl
mov
xchg
jo
and
jg
push
add
cli
xor
aam
sub
xchg
mov
xor
inc
dec
add
cmpsl
pop
popf
insl
xchg
mov
hlt
stc
pop
mov
mov
lret
stos
inc
xor
out
ljmp
inc
aad
pop
xchg
mov
cmp
or
mov
imul
fisubrs
mov
pop
pop
jnp
std
leave
cmp
and
repnz
and
mov
lods
ja
cmpsl
enter
loope
sub
push
in
test
ss
add
pop
jae
inc
adc
shlb
push
push
xor
icebp
inc
les
fistps
mov
rolb
mov
xlat
fstpl
adc
pop
rcl
pop
pop
fmul
adc
lret
rolb
dec
xchg
xchg
dec
push
arpl
ret
andb
sub
mov
push
sub
orl
mov
inc
in
pop
jne
insb
sub
mov
in
pop
mov
adc
cmp
subb
mov
jo
pop
jo,pn
loope,pt
daa
dec
cmpsb
clc
xor
xchg
or
mov
lock
sarb
loop
mov
ljmp
jnp
dec
mov
insl
mov
sbb
jle
shlb
sbbl
mov
dec
mov
mov
add
rclb
mov
push
inc
push
cmp
std
movsl
stos
addb
ds
jne
mov
or
mov
lretw
mov
cmp
mov
inc
jle
out
mov
mov
mov
pop
cmp
cmp
pop
ja
or
adc
lret
stos
es
dec
sbb
cwtl
out
nop
or
jno
fimuls
add
xor
mov
jecxz
loope
xor
fmul
daa
mov
fildl
fnstcw
or
cmp
test
cmp
mov
dec
leave
mov
inc
shrl
xlat
std
pushf
mov
jnp
mov
adc
ret
outsb
xor
or
or
pushf
inc
mov
mov
stos
dec
jno
mov
movsb
pop
fwait
push
mov
xchg
cmc
mov
test
jmp
mov
call
xchg
orl
hlt
sbb
fidivs
pop
mov
es
repz
add
jbe
jns
daa
or
mov
icebp
jg
xor
sub
jmp
in
xchg
fwait
stc
push
int
mov
pop
lds
ja
jno
clc
movsl
xchg
inc
jg
outsb
in
fmuls
pop
dec
sub
lea
adc
iret
ret
cwtl
fistpll
dec
std
pop
cmp
pushf
ss
xchg
aam
fnstcw
stos
xchg
ret
jno
call
jg
insl
inc
leave
out
and
sahf
inc
mov
lods
mov
icebp
loope
pop
notl
subl
fs
push
fstl
sub
dec
rorl
jo
sub
das
inc
ljmp
inc
mov
mov
pop
mov
punpckhbw
adc
xchg
sub
aad
mov
inc
add
xlat
aaa
rolb
mov
hlt
jbe
cltd
or
sbb
mov
addr16
test
js
sub
push
stc
rcll
testb
pop
subl
es
js
jge
mov
fwait
pop
mov
pop
sub
pop
rcrl
rorb
clc
repnz
mov
mov
idivb
sub
pop
das
fistpll
iret
fstl
ds
cmp
adc
mov
and
add
mov
or
sbb
jae
xor
bound
mov
mov
dec
cmp
scas
repnz
jge
sub
cmpsl
fsubl
orl
test
pop
rcll
pop
pop
xor
push
or
mov
icebp
cltd
pop
sub
mov
scas
aam
push
das
rolb
or
push
lock
jnp
push
jno
les
inc
lods
push
mov
mov
adc
out
jo,pn
fimull
pop
in
dec
sahf
test
xor
cwtl
aam
xor
adc
in
or
xchg
fildl
int
sub
push
mov
mov
ljmp
lock
rorl
lahf
je
popf
mov
cmp
int3
add
ret
push
outsl
pop
lods
mov
and
jae
push
sti
dec
rorl
fistpll
scas
shr
scas
out
into
dec
gs
lret
sub
add
mov
mov
dec
cmc
inc
jge
inc
aam
push
pop
daa
or
jl
aaa
dec
xchg
into
pop
das
in
xor
and
flds
mov
scas
mov
mov
mov
mov
xchg
xchg
push
dec
in
leave
push
enter
xor
cmp
sahf
shlb
in
stos
sbb
mov
inc
jmp
rcrb
test
test
lock
subb
or
pushf
fptan
aas
sub
jle
jp
inc
jg
call
xchg
jge
jp
and
lods
call
ds
out
in
pop
add
pop
lock
xchg
cs
sbb
push
int
pop
pop
data16
scas
lret
cltd
fiaddl
mov
popf
roll
cs
imul
pop
push
sub
dec
xor
out
mov
lock
sbb
or
fstps
xor
push
icebp
mov
add
inc
or
xor
sub
lea
movsb
mov
adc
or
fisubs
cmp
cmp
jp
rep
movsl
and
xor
aad
push
leave
outsb
subl
popf
icebp
stos
cltd
sub
adc
jbe
fsqrt
lret
loopw
cmp
mov
mov
jns
mov
xchg
pop
push
clc
aaa
jno
sahf
and
les
mov
push
lcall
mov
or
mov
adc
movsl
lahf
mov
dec
jge
and
movsb
mov
mov
data16
mov
mov
dec
and
and
dec
repz
dec
in
adc
push
push
nop
frstor
shlb
sbb
cmpsb
mov
dec
add
adc
jg
fdivs
dec
or
xchg
jmp
outsb
insl
and
in
lock
daa
imul
xlat
mov
sub
mov
mov
mov
ss
test
sub
imul
xchg
xor
cmpl
outsl
and
mov
lret
mov
xorl
out
test
cld
xor
aas
xchg
push
mov
mov
sub
add
aam
pop
xor
jmp
xchg
pop
sbb
leave
sbb
push
mov
gs
aaa
fcomps
pop
lret
push
ds
lods
insl
hlt
mov
shrb
outsl
mov
sbb
aam
inc
inc
mov
mov
fdivs
inc
mull
movl
push
jnp
mov
xchg
out
sti
rcl
push
aas
out
adc
inc
lods
mov
pusha
jl
pop
fsts
out
nop
jbe
mov
pop
imul
jl
sub
fidivrl
bound
mov
out
punpckhbw
sbb
mov
loope
frstor
xchg
mov
adcb
jg
xchg
adc
jns
jge
xchg
add
jl
inc
adc
cmp
dec
pop
in
inc
bound
test
enter
xchg
mov
cmp
jl
adc
and
pop
scas
sub
jne
push
fstl
mov
popf
shr
pop
stc
rorl
mov
testl
std
push
arpl
fiadds
fisttpl
popa
push
cmp
jbe
add
setae
dec
mov
es
gs
cmp
ja
mov
shlb
or
mov
add
cltd
xchg
push
xlat
push
aam
push
arpl
popl
rcll
push
push
add
push
insb
sbb
sbbb
cmp
mov
cld
xchg
movsl
mov
sub
and
frstor
out
xor
popa
inc
xchg
xlat
jae
movsl
int
jae
inc
hlt
pop
lret
mov
cmp
andb
pop
repnz
movsl
jns
loopne
push
pop
dec
mov
lahf
push
cmp
jmp
cmpsb
sub
xchg
rcrb
shlb
loopne
mov
inc
fucom
sti
dec
mov
dec
ljmp
shl
mov
nop
pop
lret
inc
xchg
sahf
jno
aam
cwtl
push
iret
jp
or
ss
aas
sbb
iret
into
or
cld
int3
sbb
sbb
insl
or
push
jle
int3
mov
pop
jl
and
sub
cli
inc
insb
shrl
mov
ja
jo
pop
mov
ret
cmp
push
add
testl
cs
dec
lcall
stos
add
dec
or
adc
outsl
js
inc
sbb
or
push
jnp
jmp
fldcw
mov
and
cmp
into
xchg
add
inc
xor
add
lds
adc
enter
fnsave
and
mov
loope
testb
mov
push
xor
hlt
mov
mov
outsb
add
xchg
push
int3
in
int3
js
push
arpl
dec
std
jg
jbe
mov
mov
nop
pop
lret
inc
xchg
sahf
jno
aam
cwtl
push
iret
icebp
dec
sub
notl
gs
and
xchg
fimull
imul
flds
push
fsubrl
int
pop
shll
sub
dec
neg
or
loopne
pop
jno
or
das
sub
mov
je
stc
dec
cli
mull
jge
nop
ret
out
xchg
andl
push
sbb
add
movsb
ficoml
jl
lahf
jne
jns
dec
rclb
sub
aaa
jo
adc
xchg
out
rcr
pop
rclb
fcom
out
bound
mov
jmp
neg
inc
inc
jle
inc
mov
xchg
sbb
icebp
cmp
push
pushf
imul
sbb
mov
shl
mov
push
pop
movsb
scas
cmp
adc
cmp
stos
or
mov
mov
ds
xorb
int3
test
mov
xor
into
mov
repz
xchg
xchg
cmpsb
cmpxchg
scas
cmp
fidivs
add
icebp
dec
and
adc
push
push
lret
mov
xor
cmp
sti
stc
lret
push
adc
or
leave
and
stos
iret
mov
or
out
adc
push
jno
out
xlat
sub
lods
adc
pusha
leave
cli
push
push
repz
sti
jbe
pop
jle
popf
adc
dec
repz
inc
aad
push
mov
call
leave
xchg
inc
loop
fmul
ret
aad
inc
pop
pop
push
aad
and
mov
xlat
fidivl
in
xorl
xchg
loopne
sub
sub
add
xor
xor
push
xchg
adc
lret
push
mov
fldcw
into
lods
push
pop
sub
fstpl
jge
dec
xchg
ds
lret
mov
and
iret
stos
cmp
inc
mov
decb
jo
push
bound
xor
arpl
cld
popf
lods
loop
jge
pop
push
cwtl
jo
outsl
leave
imul
in
outsb
out
aaa
xchg
flds
les
xor
mov
lock
sbb
pop
ret
push
inc
aam
xchg
and
stc
pop
subl
jg
dec
fwait
mov
and
xlat
cmp
mov
pop
push
imul
mov
pop
mov
les
in
add
sub
jecxz
je
popf
jge
notl
mov
cli
fs
cmpsl
negl
inc
pop
push
adc
out
roll
inc
sbb
and
outsb
push
xor
push
jg
sub
and
inc
cld
pushl
mov
inc
mov
cmp
iret
or
cmc
jns
jno
pop
jmp
stc
stos
jno
outsl
push
mov
add
test
cmp
push
mov
scas
mov
jmp
pop
inc
aad
push
icebp
adc
aas
mov
std
or
sbb
out
jae
movsb
repz
xchg
add
dec
dec
mov
push
mov
inc
fcompl
mov
mov
mull
popl
decl
es
loope
rcr
aam
mov
test
push
xorl
add
push
je
xor
mov
mov
sbb
outsb
dec
and
sbb
neg
fcoml
pop
pop
adc
mov
mov
in
popf
sbb
out
movb
adc
in
xabort
pop
xchg
adc
pop
push
pop
sub
mov
mov
push
hlt
mov
loopne
int3
jp
jge
sbbl
mov
adc
sub
sbb
push
fadds
lea
push
mov
jecxz
xlat
int
mov
or
aam
sub
push
mov
fwait
jl
mov
xchg
jecxz,pn
add
outsb
lods
push
test
xor
xchg
lahf
add
inc
bound
leave
xlat
ror
aam
cmp
pop
in
adc
pop
inc
or
enter
jae
emms
mov
pop
mov
fs
pusha
mov
dec
fldcw
inc
or
cmpb
cld
sti
test
sbb
cld
cld
dec
jg
xor
bnd
adc
xchg
arpl
ds
push
rcrl
imull
addr16
pushf
ficomps
arpl
icebp
mov
insb
cmp
int3
push
inc
xor
sahf
int3
int
sbb
and
test
iret
scas
shll
inc
inc
shl
inc
cmp
lret
es
and
adc
or
nop
and
jle
add
add
je
jecxz
ss
gs
rcrb
lock
push
mov
xor
xchg
xchg
sub
jle
mov
push
push
push
mov
or
jecxz
aam
roll
and
sub
shr
mov
cmpsl
in
andb
and
push
xchg
test
pusha
push
push
test
ret
mov
loopne
imul
imul
pop
dec
loope
repnz
arpl
jne
scas
jbe
adc
mov
fcom
jle
mov
sub
mov
xchg
push
mov
pop
pop
mov
mov
insb
imul
in
jae
sub
enter
insb
inc
call
sbb
dec
adc
cmp
sarl
mov
mov
aaa
pushf
mov
mov
xchg
push
dec
add
pop
insb
jecxz
sub
xchg
rcrw
cltd
dec
or
test
rep
mov
dec
or
lock
push
mov
add
jp
mov
add
fidivrs
repz
mov
std
sbb
daa
pop
addr16
adc
lock
jmp
adc
pop
add
sbb
pop
fs
or
orl
push
xlat
jge
fmuls
stos
sbb
sbb
inc
xor
mov
pop
dec
push
sub
loope
pop
sub
add
or
das
imul
sbb
pop
xchg
sub
jne
sub
rorb
or
cmp
mov
push
mov
cmpsl
sub
cltd
loop
subl
gs
aad
sahf
sahf
bound
jne
inc
cmp
mov
es
bound
mov
pop
sarb
cli
sarl
movsl
js
sub
mov
xchg
aam
sti
cmp
dec
xchg
inc
cmp
dec
mov
out
repz
adc
negl
sbb
mov
xchg
popa
sub
add
pop
or
cli
mov
ja
jmp
rorl
cmc
and
xor
mov
scas
push
dec
push
rep
sub
and
stc
scas
sub
fisttpl
cmp
out
add
xor
adc
les
xchg
divl
xchg
or
jb
shrb
lret
ds
lea
loope
dec
pop
mov
lcall
push
adc
add
outsb
sbb
adc
mov
outsl
aas
xor
sbb
sub
jno
stos
fdivl
out
adcl
ds
or
clc
mov
daa
hlt
std
pop
popa
into
aad
out
xor
cwtl
xor
fistl
mov
push
lds
mov
and
adc
shlb
pop
mov
sbb
js
xchg
dec
mov
push
aas
mov
adc
scas
mov
sub
daa
into
loope
jno
push
push
jb
mov
mov
sti
fldlg2
sbb
mov
rol
xchg
sarl
sbb
loop
pushf
hlt
inc
inc
ljmp
inc
ret
sub
lret
enter
dec
arpl
bound
mov
or
fisttpl
inc
mov
popf
push
xor
xchg
or
mov
into
stos
cmp
dec
xchg
mov
int
cmp
dec
int3
enter
fistl
mov
popa
pushf
lds
aad
retw
mov
ss
in
cmpsb
and
enter
enter
mov
jmp
ljmp
int3
mov
mov
int3
or
and
and
sbb
and
dec
sahf
insl
adc
ss
loope
push
mov
cmp
loopne
mov
ret
std
sahf
pop
add
imul
aas
jns
bound
pop
push
and
jecxz
pop
xor
dec
movnti
dec
pop
pop
into
push
cmpsl
orl
jno
test
iret
pop
sbb
sub
lcall
mov
xlat
or
dec
cmp
fwait
lods
fstl
std
rclb
out
in
mov
xchg
xchg
jg
sub
cld
dec
add
xchg
shll
movsb
sbb
mov
in
add
push
xor
xor
test
data16
call
or
fisttps
mov
xchg
test
mov
lret
stos
pop
lods
adc
test
cmc
jnp
stos
push
shlb
loop
test
mov
sti
and
or
mov
mov
testb
incb
sub
or
mov
in
icebp
adc
xchg
sub
or
adc
loopne
mov
in
pop
mov
or
aaa
add
pusha
sahf
xchg
pop
and
aaa
in
ja
int3
sarb
mov
iret
push
lret
push
sub
stc
sbb
push
testb
in
imul
shlb
xor
rcr
xchg
movsb
lcall
lock
push
aam
movsb
rcr
and
dec
fwait
inc
sub
in
adc
mov
test
and
mov
fidivrs
xchg
mov
pop
popa
or
mov
or
rol
push
rol
mov
sbb
aaa
and
movsl
push
stos
jb
mov
das
mov
add
fwait
jne
push
push
mov
gs
loope
scas
aad
sahf
push
sbb
mov
xor
sbb
sbb
es
int
sbb
mov
jg
aad
or
insl
lock
insb
dec
stc
loop
outsl
add
lahf
ret
push
add
scas
add
mov
push
sbb
cmc
push
dec
xchg
xlat
push
loopne
mov
mov
dec
jge
dec
or
inc
jne
mov
nop
inc
fdiv
jb
cwtl
sub
rcrb
mov
pop
data16
loop
inc
lds
out
xchg
outsb
inc
lahf
paddb
into
lock
mov
mov
push
lock
sub
ss
jb
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
lods
adc
test
iret
or
add
add
add
adc
add
lea
add
add
add
add
adc
inc
add
sub
sub
inc
add
inc
add
and
sub
inc
add
sub
add
add
dec
adc
push
adc
add
int3
enter
enter
fmul
loopne
jecxz
in
lea
sub
inc
add
sub
adc
inc
add
incl
add
add
add
adc
sbb
nop
add
mov
add
add
addb
add
addb
addb
add
addb
rol
add
add
add
incl
add
incl
add
add
add
add
add
incl
incl
push
ret
mov
add
sar
inc
add
add
mov
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
add
or
add
add
add
add
mov
add
add
or
add
and
add
add
mov
add
push
add
add
add
mov
add
add
adc
adc
sub
adc
and
and
sub
adc
addb
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
adc
mov
add
xor
xor
and
insb
popa
je
and
xor
xor
inc
outsl
jo
jb
addr16
cmp
xor
outsb
sub
and
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fldl
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
testl
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outsl
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
incl
or
incl
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
inc
add
push
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
add
add
add
fildl
add
pop
loop
add
hlt
inc
add
hlt
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
push
add
add
push
add
push
add
add
add
inc
add
push
add
inc
add
inc
add
inc
add
test
sub
pop
push
ret
cmpsb
push
in
int3
mov
mov
sbb
jecxz
test
mov
or
mov
push
mov
and
add
je
lea
das
mov
or
or
jne
data16
pop
mov
idivb
mov
xchg
adc
inc
xlat
mov
mov
mov
sbb
dec
jecxz
fimuls
pop
mov
mov
add
dec
fdivrs
inc
fisttpll
out
cmp
sbb
movsb
out
stc
add
das
repnz
mov
cmpsl
ret
and
mov
xchg
pop
popf
or
in
sbb
push
ret
hlt
push
cld
sbb
pop
cmp
aaa
movsb
sub
daa
mov
nop
mov
cli
in
loop
je
cmp
lods
cmp
inc
mov
mov
and
sbb
arpl
js
ljmp
jl
test
mov
mov
ret
or
jae
jp
in
bound
add
sahf
jl
in
in
sbb
inc
and
adc
mov
inc
mov
imul
mov
repnz
adc
sbb
lods
subb
in
fsts
faddl
call
pop
out
bound
in
or
jne
outsl
adc
mov
jecxz
inc
ret
dec
testl
lret
nop
cmp
cld
popa
add
xchg
movsb
pushf
mull
outsb
jne
and
mov
pop
or
inc
or
push
jnp
xor
add
add
insb
mov
push
sbb
inc
fchs
push
add
push
mov
insl
cmp
fisubrl
jge
mov
bound
addb
je
add
add
cltd
orb
mov
add
and
cltd
or
inc
fs
int
shl
je
and
pusha
bound
pop
adc
xchg
into
lahf
in
xchg
push
jle
subb
aam
test
mov
dec
pop
shll
sahf
push
and
sahf
pop
cmp
test
pop
inc
inc
xor
andl
pop
sub
mov
cld
lods
jo
cmpb
adc
mov
xor
call
mov
lods
jg
mov
dec
std
and
and
sbb
mov
leave
ret
push
enter
lds
ljmp
sub
mov
add
loope
sahf
sahf
in
fsubrl
push
fistps
cs
xor
dec
addr16
loop
jecxz
scas
push
mov
pop
sarb
sub
stos
mov
je
insl
push
inc
sti
xor
call
mov
stos
or
shll
mul
pushl
xchg
les
pop
push
and
loopne
jmp
adc
mov
add
mov
xor
stos
sbb
xchg
jmp
nop
es
enter
js
outsb
dec
cltd
das
or
bound
cmp
push
push
adc
cmpsl
loopne
add
xchg
lret
int
inc
jns
cmp
rorb
inc
inc
jmp
lods
aad
push
sub
mov
bound
add
add
and
in
jg
mov
jb
jnp
jbe
imul
ljmp
mov
call
filds
call
outsl
pop
sbb
mov
shrl
fwait
push
rcll
and
mov
dec
leave
or
fidivrl
mov
or
iret
or
jno
test
xchg
inc
repnz
ret
fldenv
xor
jae
mov
dec
push
fdivrs
xchg
mov
jae
xor
sbb
aam
arpl
leave
xchg
mov
jge
xor
shlb
push
jb
mov
sahf
popa
mov
rcrb
insb
movsl
xchg
pop
sub
or
add
add
int3
pop
imul
loop
mov
sbb
xchg
out
cmpsl
add
add
inc
mov
or
add
add
cmp
fwait
shl
sub
repnz
sub
mov
push
add
add
sahf
or
add
addb
sub
clc
cs
add
fcmovb
xor
dec
fdivs
add
mov
sub
in
mov
jae
pop
repz
incb
mov
jbe
adc
xchg
xchg
mov
add
add
mov
push
add
add
in
arpl
add
add
add
add
add
sbbb
dec
data16
fimuls
ret
add
add
iret
mov
add
add
fcoms
add
lock
shll
in
sbb
add
jo
xchg
add
jb
adc
inc
mov
add
sbb
arpl
cmpsl
dec
pop
xor
mov
aam
adc
dec
mov
lods
lret
inc
movsb
jge
fs
pop
push
add
scas
cmp
mov
push
fdivl
in
mov
out
lds
mov
in
and
negb
stc
push
fisttps
dec
rclb
xor
jmp
push
in
add
mov
add
fldcw
imul
out
lods
sbb
inc
fisttpl
fstpl
sub
sub
pop
mov
stc
imul
cli
pushf
pop
or
push
lds
mov
jae
sub
jb
in
popf
insl
add
lock
inc
pop
test
and
add
push
mov
dec
sub
dec
stos
push
cs
xor
stos
sub
jnp
mov
mov
cmp
and
jbe
loopne
loop
fcomps
test
mov
loope
mov
sarb
push
mov
lock
adc
popa
add
sbb
xor
or
jns
lock
sbb
rolb
shlb
cmp
loopne
stc
cwtl
imul
inc
and
adc
aam
es
popa
icebp
nop
arpl
and
pop
roll
sarl
in
sahf
add
jl
testb
cmp
mov
lods
pop
iret
out
jmp
jge
sub
add
pop
repnz
fs
leave
pop
into
test
and
jmp
daa
mov
sbb
add
mov
inc
mov
hlt
mov
jmp
push
in
inc
aas
stos
shl
add
push
lahf
push
js
adc
pop
adc
pop
pop
add
add
mov
xor
cltd
xor
push
int3
add
dec
fidivrs
jb
in
in
cli
popf
insb
mov
add
push
iret
dec
fidivrs
cmp
jp
insl
hlt
pop
in
sub
mull
icebp
sbb
cwtl
aas
adc
cmp
test
jge
inc
cmp
sbb
shll
xchg
xchg
inc
push
jecxz
push
in
adc
mov
enter
sub
xor
jne
mov
add
mov
push
lds
xchg
pusha
mov
push
mov
mov
les
stc
pushf
xor
std
scas
xor
cmpsb
cmovne
jb
in
enter
jp
in
inc
lods
rorw
pop
repnz
scas
fcomps
imul
insl
ret
fisubl
les
stos
pop
rclb
mov
mov
nop
adc
fs
sub
or
lcall
sub
sbb
test
fwait
decb
xchg
mov
sbb
pop
mov
jle
dec
int3
inc
and
nop
sbb
add
addr16
xor
mov
lods
lret
inc
lds
push
mov
call
cmp
mov
cmpsb
or
push
jno
imul
dec
andl
mov
sbb
xor
stc
imul
and
mov
push
and
add
and
jo
and
cwtl
push
imul
icebp
les
mov
clc
lock
bound
iret
jnp
cli
iret
xor
pop
popf
or
inc
mov
call
dec
fdivrl
les
sbbl
sub
cmp
clc
fs
popf
insb
lds
jl
testb
repz
pop
cmp
dec
push
pop
cmp
push
stos
xchg
sub
jmp
lcall
push
popa
nop
jbe
mov
jle
push
arpl
mov
je
mov
add
popa
in
sbb
add
mov
ljmp
lcall
in
add
push
imul
adc
or
out
insb
add
dec
das
ficoml
leave
pop
inc
fistps
add
mov
js
insl
pop
sub
add
fs
sbb
loope
adc
or
dec
ret
mov
daa
int
xor
movsb
cmp
pop
mov
aad
cmpl
stos
add
inc
shlb
call
testb
sbb
pop
enter
pushf
setg
or
loopne
adc
push
int3
inc
and
lcall
add
inc
fildl
or
jbe
loopne
mov
and
leave
add
push
push
adcl
add
dec
fdivrs
pop
cmp
push
xchg
add
mov
js
pop
addb
lock
daa
jns
mov
jg
imul
aad
dec
scas
push
nop
push
popa
nop
jns
sbb
pushl
je
outsb
ljmp
add
leave
dec
ret
mov
shrl
cmp
jmp
push
in
and
xchg
pop
bound
and
enter
sub
pusha
repz
cltd
or
jo
cmp
fmull
mov
enter
icebp
nop
arpl
test
fildl
xchg
add
lea
mov
sbb
daa
mov
inc
mov
push
add
je
out
push
jg
js
ljmp
jge
push
mov
es
cmp
cltd
pop
xchg
repnz
lret
cmp
inc
mov
in
jmp
mov
gs
and
add
movsb
fs
inc
sub
pop
pop
fmuls
fmuls
or
out
dec
enter
sub
repz
test
mov
stos
filds
jge
push
add
pop
jg
aad
xor
int
aad
sbb
mov
bnd
leave
xchg
sbb
pop
repnz
mov
hlt
cltd
add
rcrl
sub
xor
xor
shlb
sbb
add
cwtl
insl
fisttpl
mov
lret
test
lcall
and
cmp
inc
or
dec
pop
scas
cmp
mov
dec
mov
or
pushf
xor
adc
sbb
cmp
cmpsb
shll
dec
aad
sub
je
xor
or
cld
popa
icebp
nop
arpl
hlt
inc
js
pop
dec
mov
test
push
mov
cmpsl
aaa
push
mov
inc
mov
pop
mov
and
inc
rcll
adc
lods
dec
test
mov
dec
xchg
repnz
loop
std
lds
mov
test
pop
into
test
inc
ja
add
shrb
mov
inc
mov
lret
inc
xlat
mov
lods
cmp
cmpsb
call
xor
add
movsb
outsl
arpl
mov
jg
adcl
out
negl
fwait
or
jns
imul
je
adc
dec
orb
mov
add
jmp
inc
mov
ret
int3
inc
and
outsb
or
cmp
push
mov
aas
lret
and
das
fidivl
je
ja
loope
mov
add
add
pop
ds
stc
add
mov
xchg
push
cmc
dec
imul
push
std
push
adc
shlb
cwtl
and
insb
or
or
push
cmp
fs
call
pop
aas
mov
inc
sub
push
in
or
jle
popa
icebp
nop
arpl
xor
inc
mov
movsb
ret
in
push
lret
mov
mov
stc
jb
xchg
add
xor
enter
cmc
gs
adc
or
inc
int
and
xor
jb
xchg
add
inc
leave
pop
cmp
cmp
into
test
mov
sbb
jbe
add
lods
lods
inc
shll
add
jno
ret
in
jle
leave
arpl
xchg
gs
add
aaa
dec
roll
shll
int3
cmpsb
push
pop
repnz
shrb
lods
cli
lock
lret
jecxz
call
pop
int3
stos
iretw
fiaddl
mov
mov
stos
scas
mov
add
jl
negb
mov
mov
add
jb
xchg
push
xor
inc
hlt
jbe
cmpl
adc
mov
cmpsl
jge
je
fs
icebp
nop
arpl
jp
gs
adc
or
lods
popf
push
shlb
jmp
iret
stos
pop
test
and
mov
xchg
repz
fidivrl
push
mov
cmpsb
mov
std
or
mov
xchg
repz
out
into
pop
cmp
and
fsubrs
shrl
push
xor
repnz
loope
movsb
add
mov
jle
arpl
loope
push
pop
add
inc
and
jbe
adc
pop
add
js
ljmp
cmp
add
dec
lock
cld
fwait
jbe
or
aad
fdivrs
fidivrs
inc
and
data16
hlt
push
les
cltd
push
fisubrs
lds
iret
sub
mov
push
cld
push
mov
jno
mov
in
sbb
or
loopne
pop
fimuls
ud2
add
dec
fidivrs
mov
das
mov
iret
das
add
outsb
cld
fwait
jbe
adc
pop
nop
pop
push
cwtl
push
imul
mov
inc
mov
fcompl
and
mov
addr16
nop
add
fisttps
fsts
jbe
mov
out
jge
je
and
lea
xlat
inc
and
cmp
push
jns
bound
rcrb
adc
ljmp
lahf
push
pop
push
into
cli
stos
lods
movsb
ret
ds
add
dec
scas
adc
mov
sbb
sub
enter
xchg
add
jp
in
inc
pop
adcb
xorb
mov
xorb
add
out
addl
push
mov
sbb
xchg
add
lahf
push
add
xlat
push
rolb
shlb
ret
inc
shlb
ljmp
mulb
push
push
sbb
pop
test
clc
or
fidivrs
sbb
cmp
and
mov
sub
frstor
xor
imul
mov
cltd
or
jo
outsl
lcall
stc
mov
mov
dec
fdivl
in
insb
sub
and
add
push
subl
fisttps
mov
mov
sbb
stc
pop
into
add
mov
je
lea
roll
aad
pop
lret
pop
ds
xchg
rcrb
fidivrl
fdivrs
out
jo
add
xchg
cmc
add
pop
lret
pop
ds
fdivrl
mov
and
push
lahf
push
jbe
imul
sbb
pop
cld
setne
pop
cmp
xor
add
mov
cmc
adc
jns
jmp
lret
dec
fdivrl
dec
lds
iret
das
orb
clc
or
lea
add
mov
mov
cmp
sub
loopne
adc
add
mov
insl
pushf
jne
xor
mov
inc
mov
jbe
adcl
stos
cmp
aaa
inc
aam
sub
pop
cmp
xor
stos
cmp
mov
scas
xchg
and
cli
cmp
ret
lods
pop
cli
xchg
adc
out
mov
xlat
push
ret
cmpsb
push
mov
sub
negb
add
jns
jmp
ljmp
stc
scas
test
or
push
movsl
adc
movsb
cmp
add
fwait
add
mov
imul
outsl
lcall
lds
adc
pop
fmuls
fdivrs
inc
orl
lcall
pop
xchg
lret
movsb
add
lcall
loope
call
lret
inc
movsb
gs
jl
notb
imul
insl
mov
xchg
repnz
daa
scas
aas
pop
test
cltd
push
add
dec
rcll
xor
in
add
imul
or
or
jge
adc
sbb
dec
and
push
fsub
adcl
sub
mov
notb
push
test
insl
lcall
in
je
sub
inc
xlat
mov
clc
mov
fldl
mov
out
lock
aad
pop
iret
stos
pop
loopne
out
adc
imul
fmuls
mull
icebp
sbb
fstps
xor
inc
je
mov
repz
cmpl
imul
insl
mov
fwait
jbe
pushl
mov
sbb
gs
pushf
outsl
andl
ljmp
hlt
push
cld
push
inc
iret
pop
cmp
adc
mov
xchg
lock
xor
sub
enter
xor
cmp
mov
jle
lods
mov
xor
popa
mov
mov
and
push
cmp
addr16
sbb
add
xchg
add
pop
add
mov
dec
mov
xchg
mov
int
mov
dec
mov
cmp
xlat
or
adc
test
add
std
or
testl
cmpsb
inc
pop
fmuls
fdivs
mov
mov
lret
das
test
ret
lds
pop
cmp
and
or
jle
icebp
stc
test
add
xchg
xlat
pop
int
scas
cmc
add
pop
enter
hlt
add
jbe
loopne
pop
jno
add
js
add
jae
in
jl
imul
adc
sbb
enter
sub
xor
insb
xchg
mov
aad
xorl
and
popa
add
xor
in
dec
pop
ret
pop
lret
scas
pop
mov
jae
in
sbb
add
push
popa
nop
js
pop
mov
sahf
insl
int3
inc
fimull
fisubrl
pop
fs
js
ljmp
test
push
mov
loop
test
and
xchg
divl
mov
les
fstpt
ss
mov
rcrl
sub
jae
xchg
mov
sahf
stc
or
mov
cmpsb
shll
dec
rclb
and
push
pushf
sti
push
repnz
int
pushf
push
push
sub
dec
ret
ret
xchg
add
and
js
jg
jmp
repz
jbe
jbe
loopne
cmpsb
aaa
cmpsl
ret
jbe
xor
fs
insl
hlt
pop
mov
test
mov
fisubrs
fsubrs
xchg
mov
mov
add
pushf
xor
adc
mov
lods
and
add
int3
aas
mov
sti
jle
sti
das
lcall
cli
jg
mov
inc
lret
pop
ds
xchg
out
icebp
int
fnstcw
loopne
inc
add
nop
push
popa
nop
jb
mov
lock
push
pop
int3
stos
lods
jg
clc
out
mov
jle
out
test
xchg
pop
inc
rolb
sarb
fwait
or
rorl
add
mov
push
jo
xlat
jo
jg
add
push
outsl
fdiv
jg
fisttpl
pop
or
mov
data16
outsl
sar
sbb
pop
iret
lds
mov
pop
sbb
je
add
loop
push
test
in
fsubrp
push
push
repnz
shrl
xorb
and
inc
push
movsb
lea
pop
inc
fbld
std
and
loop
lcall
out
cli
xchg
js
clc
das
ljmp
xor
sub
inc
addr16
push
rorl
dec
std
and
loop
lcall
dec
or
movsl
movsl
jns
adc
call
jo
leave
lds
es
aam
mov
lods
push
out
ljmp
jns
sub
stos
add
fldl
jnp
ljmp
or
subl
push
xchg
inc
ss
jae
mov
adc
ret
jnp
pop
mov
adc
mov
in
ret
xchg
movsl
shlb
daa
push
push
nop
push
adc
data16
lahf
aam
jbe
into
xchg
cmpsb
imul
sbb
idivb
stc
adc
add
add
xchg
xchg
mov
rorl
call
loopne
iret
or
adc
sbb
data16
pop
push
scas
dec
dec
jo
inc
adc
fwait
pop
or
bound
mov
sbb
insl
add
push
cmc
cli
sub
fcmovbe
clc
dec
ds
lea
jp
mov
shlb
shll
inc
es
push
jecxz
repnz
mov
xchg
out
and
int
or
sub
data16
push
wbinvd
ficoms
pop
scas
aam
xor
mov
lods
cli
xchg
inc
and
lods
int3
adc
jmp
mov
inc
add
mov
lods
sub
mov
cmp
mov
sub
aam
mov
rep
lret
and
sbb
mov
and
and
js
lret
fs
roll
test
sbb
fsubr
test
insl
inc
fdivrl
mov
stos
pop
adcl
pop
push
fcmovnu
shl
popf
push
mov
pop
in
repz
nop
push
xor
push
scas
lds
ljmp
pop
mull
cmp
push
push
sub
lret
test
or
cmpsb
pop
jae
lahf
sub
lods
xor
and
push
movsl
pop
js
sbb
add
mov
xlat
sub
decb
loop
xor
mov
loopne
mov
sbb
push
xchg
clc
aam
mov
popf
aaa
loopne
negl
mov
aad
aaa
inc
dec
repz
push
xchg
mov
test
fdivr
pop
cmpb
cmpsb
inc
dec
lret
loopne
xchg
es
inc
xor
cmpsb
sbb
push
pop
xor
fists
pop
aas
rcrl
push
dec
mov
cltd
movsl
shll
xchg
xchg
sbb
push
cmp
mov
repz
decb
or
mov
sub
add
jne
jecxz
rcr
dec
add
imul
jnp
jmp
popf
xor
lea
sarl
xor
sahf
mov
jb
movl
mov
int
leave
and
sub
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
es
out
fistpll
rclb
mov
divl
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
xor
add
mov
pop
add
jno
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
test
sti
jp
push
xchg
.byte
.byte
or
aam
enter
mov
sarl
mov
dec
mov
cwtl
imul
lods
jb
ja
loope
and
sbb
pop
repnz
cmpsl
and
push
lds
iret
daa
adc
pop
roll
aad
pusha
cli
push
insb
loop
je
hlt
insb
loop
je
sub
add
sbb
mov
jb
xchg
dec
aam
sub
mov
mov
mov
cmc
roll
inc
movsb
sub
and
push
jae
pusha
pop
repnz
mov
cltd
push
mov
es
loope
sti
sahf
insl
test
iret
jecxz
lcall
cmp
or
cld
popa
call
jg
addr16
sbb
jnp
mov
dec
ret
ret
push
lret
test
jae
xchg
xchg
add
std
or
fstl
cmpsb
push
hlt
cmpsb
xor
sti
jae
xchg
sti
insb
loop
je
mov
mov
sbb
sbb
push
ret
cmpsb
push
mov
jo
stc
notl
call
rcrb
cmp
and
mov
pusha
add
mov
dec
mov
xchg
aad
lds
stos
data16
ret
mov
aam
sub
dec
sub
outsl
or
out
push
ret
cmpsb
push
mov
jnp
mov
fnstenv
loopne
test
rcrb
stos
pop
mov
pop
rolb
shlb
ret
mov
adc
jo
mov
jae
xchg
test
scas
leave
cmp
scas
outsb
cmp
or
loop
pop
loop
leave
pop
repnz
fs
pop
rclb
xor
jg
jmp
pop
lods
add
inc
std
and
push
lds
dec
fidivrs
push
cmp
fs
jo
xorl
rorl
sub
cmp
pop
enter
in
insl
std
test
jb
pusha
pop
repnz
sti
xor
xchg
xchg
icebp
add
in
notb
cld
fwait
jbe
mov
nop
testl
push
movsb
add
data16
xchg
outsb
movsl
xchg
and
hlt
push
cld
sbb
pop
and
aaa
push
je
out
pop
xor
das
dec
mov
out
sti
insb
std
insl
hlt
pop
lock
mov
das
mov
pop
cmp
pop
aas
lret
test
mov
inc
mov
push
in
dec
movsb
lods
lret
inc
mov
in
sbb
pop
pop
popf
or
dec
fidivrs
gs
push
rclb
cmpsb
push
in
fdivl
in
flds
dec
sti
mov
xchg
imul
insl
in
pushf
push
mov
es
mov
dec
test
dec
fdivrs
add
push
xor
cs
and
lret
pop
ds
ficoms
pop
mov
push
test
sbb
jo
outsl
or
jmp
mov
in
lock
bound
sbb
jb
insl
hlt
pop
icebp
jb
jbe
loopne
enter
pop
lods
and
jg
jl
divb
and
cmp
lods
and
pop
mov
cltd
and
sub
aaa
pop
lret
pop
ds
jne
arpl
cmc
pop
mov
and
lods
or
add
cmp
push
mov
out
jo
rorl
push
jecxz
push
xor
dec
nop
xor
mov
inc
mov
rclb
mov
sub
pop
jle
stos
xor
pop
repnz
test
stos
int3
dec
fistpll
les
and
xchg
icebp
add
and
cmc
jns
mov
mov
xlat
rorb
mov
and
scas
inc
shll
or
cmc
gs
pop
sbb
mov
mov
das
iret
and
test
mov
js
cs
test
sub
ret
ret
sub
rolb
sarb
test
rcll
cmpsb
push
cli
and
das
dec
mov
popa
nop
pop
mov
mov
mov
inc
mov
in
repz
lret
scas
pop
mov
notb
push
mov
scas
pop
mov
adc
in
sbb
dec
lret
pop
ds
push
fstpt
pop
int
scas
sahf
adc
pop
rolb
shlb
jecxz
push
in
nop
sbb
aad
int
mov
adcl
loop
notl
push
aaa
ret
leave
pop
cmp
outsb
popa
add
xor
pop
repnz
fs
pop
lret
scas
pop
mov
jecxz
push
in
lret
pop
int3
stos
ror
lret
lods
xchg
or
inc
aad
dec
in
add
and
cmp
push
lcall
dec
sub
outsb
shlb
xchg
sub
adc
push
aaa
ret
cli
push
mov
js
push
sbb
dec
lret
lret
adc
jmp
push
in
add
inc
scas
fs
jl
notb
cmp
mov
jecxz
inc
and
adc
pusha
mov
fs
sbb
outsb
or
sbb
fs
popf
insb
test
punpckhdq
xor
sub
jae
xchg
and
imul
mov
mov
sti
imul
adc
shrl
in
stc
imul
dec
adc
push
xor
and
sbb
mov
cmc
imul
data16
xchg
outsb
inc
and
jbe
push
les
add
push
stos
or
ret
push
lds
mov
cmpsb
shll
int3
dec
ret
mov
or
int
fnstcw
mov
sbb
enter
push
mov
xor
xor
loopne
jb
loopne
cltd
push
dec
mov
sub
cmp
popa
icebp
nop
arpl
cmp
aaa
mov
je
je
out
push
stos
aas
scas
lret
inc
aam
sub
add
push
mov
test
push
hlt
test
xchg
adc
push
lds
iret
push
push
shll
inc
mov
xor
and
sbb
fisubs
lret
pop
ds
xor
insl
mull
icebp
push
xor
pop
sub
insl
into
pop
cmp
push
adc
xchg
adc
aad
sub
cmp
mov
das
scas
aas
pop
test
xchg
jo
push
cld
adc
inc
and
cmp
enter
sub
inc
int
fstpt
int3
stos
data16
push
ret
cmpsb
push
mov
push
mov
lock
bound
loop
pop
fwait
or
jae
inc
shll
pop
jp
xor
inc
and
das
dec
mov
mov
stos
out
jns
mov
lock
insl
int3
xchg
or
in
in
xor
aaa
cmpsl
ret
inc
fisttps
fstps
or
in
mov
arpl
int3
push
mov
and
add
rolb
repz
xorb
lock
bound
leave
or
in
sbb
frstor
sub
xor
jbe
cmpl
movsb
cmp
dec
pop
rolb
shlb
xor
dec
lret
pop
ds
add
mov
inc
mov
popf
pop
xchg
adc
jae
insb
or
repnz
leave
pop
cmp
and
mov
mov
dec
fmuls
fcomps
pop
pop
jp
jne
sahf
or
cmpsb
dec
movsb
xor
xchg
mov
data16
xchg
cmc
add
mov
mov
or
mov
dec
mov
push
mov
add
inc
rorb
mov
lahf
cli
or
pop
loopne
mull
icebp
js
push
xchg
repz
fidivl
fs
sbb
scas
cmp
mov
lcall
xchg
mov
fstpt
mov
pushf
sti
push
clc
mov
and
cli
pop
mov
pop
aad
sub
jp
jp
jp
repz
cmc
sbb
fidivrs
js
gs
pop
fwait
adc
xlat
pop
enter
xchg
mov
sbb
pop
repnz
test
mov
sbb
xor
add
inc
sub
aas
xchg
xchg
adc
ja
jno
jecxz
lcall
xor
js
mov
imull
test
les
xchg
fmull
xchg
add
test
repz
cmc
pop
mov
mov
fs
popf
insb
jmp
mov
jns
sysexit
mov
dec
mov
push
movsb
inc
xchg
adc
in
sbb
dec
lret
lret
push
mov
lcall
xchg
bound
dec
jae
outsl
or
in
aam
sub
inc
es
jae
push
xor
popf
or
adcl
adc
mov
cmc
data16
xchg
outsb
fwait
mov
pop
push
lret
lahf
fmull
mov
shll
iret
stos
pop
ds
inc
fmuls
fsubrs
mov
mov
add
push
leave
pop
cmp
jbe
gs
pushf
outsl
les
mov
cmp
adc
shlb
test
cltd
clc
or
xor
ficompl
stos
pop
subl
roll
inc
mov
sahf
ja
dec
frstor
repnz
jmp
popf
jle
push
cld
push
xor
fsts
mov
and
cld
adc
push
mov
xchg
lock
dec
push
xor
cmp
jge
mov
inc
mov
xor
cmp
or
inc
and
sub
and
jne
mov
es
inc
mov
outsb
stc
imul
xor
scas
pop
pop
ret
ret
add
add
xor
sbb
pop
xchg
repnz
jmp
sbb
inc
lcall
fdivl
in
fstpt
mov
mov
cmc
imul
sbb
push
inc
rclb
and
push
ret
cmpsb
push
mov
pop
enter
fisubl
xchg
gs
shlb
aad
int
push
xor
sub
fstpt
stc
imul
mov
and
lea
xchg
lock
or
mov
orl
inc
aad
dec
movsl
dec
fisttps
fsts
dec
fmuls
fdivrs
dec
fstpt
sub
pop
jecxz
ljmp
mov
push
shlb
in
sbb
mov
cltd
aad
ret
cmpsb
push
cli
push
test
mov
movsl
cmp
es
xchg
mov
cmp
sub
xorb
or
rclb
and
push
mov
jne
out
add
adc
lret
lret
and
sbb
out
adc
dec
in
imul
insl
mov
push
mov
cwtl
jl
push
mov
lcall
add
mov
inc
fists
fsts
fimull
call
jmp
int
popa
repnz
arpl
lods
cmp
jb
xchg
out
adc
push
lret
mov
repz
cs
inc
mov
inc
fisttps
fsts
fimull
fidivl
call
call
int
popa
icebp
nop
arpl
sub
popa
icebp
jb
xchg
popa
out
adc
push
lret
mov
repz
push
iret
xchg
sbb
or
mov
cmp
mov
add
fs
notb
jbe
loopne
sub
pop
aaa
mov
rorl
mov
mov
dec
fidivrs
lahf
cli
or
push
scas
in
adc
cmp
and
sub
lds
js
jp
in
inc
xchg
or
repz
cmc
je
mov
std
jge
je
push
sub
xchg
adc
adcb
andb
nop
testl
or
out
inc
and
xor
push
lds
sahf
insl
mov
popa
icebp
nop
arpl
xchg
sbb
jo
xorl
fwait
jge
je
lea
sbb
in
bound
jae
in
ds
inc
mov
sbb
adc
dec
or
or
js
inc
shll
je
out
push
or
punpckhdq
xor
iret
cmp
lods
loopne
out
mov
xlat
dec
fistpll
fs
dec
inc
fisttpll
out
jge
jbe
loopne
in
aad
dec
lret
and
int
and
add
push
xor
daa
pop
jecxz
push
in
or
xor
and
pop
mov
movsl
mov
cmpsl
ret
call
lcall
jb
outsl
or
mov
jmp
xor
sub
xchg
add
ja
lahf
punpckhdq
inc
mov
dec
les
int3
cmp
mov
adc
jb
jo
loop
and
cmp
fisttpll
out
sbb
lods
cmp
ljmp
jbe
loopne
cmp
dec
frstor
cmp
les
test
out
lret
mov
mov
adcl
pop
int3
stos
data16
call
push
xlat
inc
and
cmp
xchg
add
jo
pop
iret
stos
pop
test
mov
pop
fimuls
push
mov
stos
int
shl
notl
push
jecxz
push
in
rcrl
scas
pop
std
fsts
mov
xor
dec
cmp
jae
xchg
bnd
mov
and
jg
xlat
inc
fidivrl
ret
cmpsb
push
hlt
pop
andb
lcall
xchg
jne
pop
clc
xor
and
sahf
sub
cli
sbb
bound
jb
push
dec
inc
sahf
nop
shlb
jl
adc
sbb
xlat
and
adc
repz
cmp
fmuls
push
stos
ja
xchg
xor
sahf
aas
cmc
fnstenv
fidivrs
mov
fwait
mov
mov
sub
sahf
fwait
aam
mov
inc
push
push
jnp
movsl
pusha
mov
aad
sub
lock
popf
insb
test
jb
xchg
popa
push
clc
imul
insl
fdivrl
lahf
or
xor
out
sti
sahf
insl
lea
jno
jecxz
sbb
mov
cmpsl
cmpsb
and
xchg
or
jne
jae
xchg
scas
sub
gs
pushf
outsl
cmpsb
outsb
in
sbb
add
push
xor
dec
fidivrs
in
mov
loop
imull
mov
cmp
or
xor
pusha
mov
aad
sub
lock
popf
insb
test
jb
xchg
popa
push
mov
cmp
loopne
pop
mov
or
std
push
jl
xchg
or
out
jl
notb
mov
fdivs
push
repz
mov
xchg
add
and
pop
enter
enter
push
loopne
fisttps
mov
jle
cmp
cmpsb
xor
scas
pop
sbbb
mov
dec
mov
bound
add
and
and
xor
loope
adc
add
decb
testb
loop
pop
loop
jns
popa
add
adc
jl
notb
out
adc
and
hlt
push
cld
adc
pop
cmp
loopne
jb
sbb
jno
xorb
call
adc
mov
mov
and
ret
data16
xchg
outsb
mov
hlt
pusha
notb
ja
loope
sbb
cmc
outsb
cld
fwait
jbe
pop
lret
pop
ds
mov
popf
pop
push
xor
addr16
insb
or
mov
push
lret
cmc
addr16
push
sti
imul
jl
jnp
mov
insl
in
jge
mull
fcomps
test
mov
movsb
inc
loope
notb
pop
and
cmp
adc
adc
cmp
pop
enter
sbb
jae
imul
sub
push
xchg
sbb
lds
iret
das
int3
inc
mov
test
xorb
decb
test
lods
and
jbe
jne
out
cs
pop
xchg
repnz
mov
aam
mull
icebp
pop
mull
icebp
pop
xor
test
mov
es
data16
insb
or
scas
dec
fisttpl
frstor
xlat
mov
out
mov
inc
mov
ret
ds
jmp
stos
hlt
and
sub
mov
shlb
xchg
repz
in
out
popa
icebp
nop
arpl
testb
push
lret
mov
sub
lds
inc
rolb
shlb
adc
leave
pop
cmp
sub
jno
xorb
jno
xorb
aas
scas
lret
icebp
imul
outsl
lcall
cmpsl
ret
mov
xchg
pop
iret
stos
pop
into
and
cltd
or
mov
xchg
and
mov
mov
sahf
and
xor
scas
jp
fdivl
in
jge
pop
sahf
or
cmpsb
inc
add
cmp
lret
pop
ds
fstps
lea
fstpl
nop
push
popa
nop
aaa
inc
int
and
push
ret
dec
fdivrs
push
xor
sub
movsl
test
lahf
cli
or
test
fmuls
mov
adc
dec
fmuls
fdivrs
std
insl
hlt
pop
sbb
imul
xor
or
inc
fisttpll
out
int
les
fistpll
in
mov
in
sbb
call
lret
push
cmp
fs
das
dec
mov
bound
fs
adc
fisttpll
mov
jns
outsb
push
sahf
or
cmpsb
inc
fcomps
stos
pop
test
fnsave
mov
inc
mov
mov
popf
sbb
rolb
shlb
out
loop
je
dec
ret
ret
cli
push
mov
dec
mov
je
addr16
push
popa
nop
jns
leave
pop
cmp
cmp
mov
out
ljmp
aad
subl
hlt
pop
pop
leave
pop
cmp
sub
pop
int3
stos
data16
fstpl
inc
es
or
add
sahf
outsl
jmp
out
jo
pop
push
xor
addr16
ret
ret
in
sbb
shlb
sbb
pop
fildl
mov
stc
adc
xchg
cmp
mov
inc
mov
cmp
mov
shlb
ss
mov
lea
mov
xchg
adc
sbb
jmp
addl
adc
push
pop
mov
xor
dec
fidivrs
mov
sbb
or
je
cmp
lock
add
daa
sbbb
cmp
or
scas
cmp
mov
xchg
add
cld
xchg
cmc
add
rolb
mov
mov
sbb
int3
push
lds
cwtl
imul
add
xor
push
xlat
dec
fnstcw
fdivrl
inc
and
pop
sahf
inc
shll
jnp
in
aas
xlat
push
lret
mov
inc
mov
sahf
jl
push
lret
mov
cld
xchg
cmc
add
sub
fistpl
stos
popw
imulb
jp
in
dec
mov
xchg
repnz
in
jecxz
jne
pop
fisttpl
fnstsw
inc
leave
pop
cmp
sub
jno
jecxz
lock
test
jmp
sahf
adc
loope
adc
inc
fimuls
movsb
push
xchg
lds
mov
xor
dec
mov
mov
mov
orl
insl
imul
add
inc
push
pop
std
fs
popf
insb
roll
popf
or
jb
xchg
lcall
roll
aad
push
pop
cmp
dec
push
sti
imul
jl
adcb
adcb
scas
pop
mov
push
cmp
sub
push
xlat
inc
and
aas
int
fistpll
fnstcw
push
popa
nop
jb
pushf
xor
add
mov
inc
mov
jg
fs
adc
rolb
sbb
xchg
je
jbe
cmpl
push
lds
mov
mov
and
mov
mov
cs
dec
fstpt
imul
cmc
add
and
fcoms
cmpsb
push
hlt
sub
cmp
out
jbe
cmpl
dec
fdivrl
ret
cmpsb
push
cli
into
push
mov
and
mov
mov
push
dec
repnz
mov
and
je
gs
sbb
fs
popf
insb
ficompl
test
mov
cmpsl
dec
das
test
pop
test
jecxz
cmc
pushf
outsl
add
shlb
jmp
jge
and
jb
push
add
or
push
xor
sub
mov
gs
jge
jecxz
push
in
inc
rolb
sarb
lds
mov
jno
jecxz
sahf
or
stos
cmp
mov
cmpsb
outsb
ljmp
stc
in
adc
add
pop
mov
jle
jp
mov
sub
cltd
add
mov
add
sub
repnz
lea
xchg
adc
pop
filds
je
out
imul
dec
ret
mov
xor
add
cmp
jmp
adc
jp
jp
dec
les
int3
cs
jle
call
jae
inc
popf
adc
in
sbb
jg
addr16
sbb
mov
gs
jbe
pop
leave
test
mov
xchg
or
push
mov
jbe
jnp
in
push
jp
js
ljmp
popf
jecxz
jmp
jge
pop
enter
and
cmp
and
push
shlb
jno
js
ljmp
push
loope
out
mov
or
aas
scas
lret
setno
pusha
xchg
cmp
orb
add
sub
fidivrs
imul
adc
gs
rolb
shlb
fistps
stos
pop
mov
movsl
xor
push
xor
and
gs
pushf
outsl
test
sub
and
jbe
cmpl
lds
iret
push
fcoms
mov
enter
and
dec
rorb
mov
mov
jne
mov
aam
aad
dec
mov
loop
dec
fistpl
sub
sbbb
out
sbb
pop
lods
inc
popf
or
fldt
outsl
hlt
push
cld
dec
aaa
lods
cmp
push
shlb
mov
jmp
dec
rorl
movsb
push
cld
ja
js
ljmp
fldcw
pop
cmp
dec
push
jle
call
or
pop
daa
movsl
xor
mov
jg
push
jecxz
inc
ret
ret
xchg
add
sahf
jo
xor
mov
arpl
jle
call
fsubrl
out
xchg
add
jg
stos
cmp
dec
int3
inc
shll
pushf
sti
push
fsts
pop
test
sub
pop
jp
bound
lods
test
mov
sbb
sti
push
hlt
cmp
out
loope
jae
add
sbb
add
scas
cmp
mov
fistps
test
mov
out
jl
negb
sbb
jg
loope
adc
inc
pop
xlat
inc
and
adc
imul
insl
test
xor
inc
pop
mov
jns
push
mov
ret
dec
fdivrl
into
test
repz
gs
loopne
out
jo
push
les
int3
pextrw
push
shll
jge
sbbw
sbb
ds
pop
push
xor
aas
mov
data16
insb
or
scas
cmp
cmp
adc
mov
inc
mov
and
les
test
and
mov
inc
ret
lods
mov
ret
xlat
mov
fwait
xchg
pop
xchg
adc
movsl
sub
rolb
shlb
pop
and
aas
mov
add
ss
mov
popl
pop
and
push
adc
inc
iret
pop
cmp
xor
imul
insl
mov
add
xchg
add
xor
lahf
or
ljmp
into
pop
cmp
xor
add
or
ja
xorb
push
lret
lods
mov
icebp
mov
and
loopne
jb
rcrb
iretw
in
jno
xorb
inc
and
ja
cmp
pop
xchg
adc
pop
fcmovne
dec
fnstcw
es
mov
fcompl
test
xchg
add
jo
mov
jns
popa
fisubl
xchg
gs
mov
scas
out
lock
bound
out
pop
sub
cwtl
push
imul
xor
pop
leave
test
mov
push
call
pop
int
addr16
into
pop
repnz
mov
add
add
loopne
dec
ret
xchg
les
cmpsl
push
mov
push
pushf
sti
push
cld
test
shlb
hlt
xchg
outsb
leave
jne
jge
testl
enterw
push
stc
mov
clc
jmp
aam
push
mov
pop
cmp
jle
and
adc
fisttps
fldenv
push
shll
xorb
mov
inc
mov
stc
js
mov
int3
dec
fdivrs
ret
cmpsb
push
mov
adc
ret
push
lds
sbb
out
loop
je
popf
sbb
push
xor
and
jae
xchg
lret
inc
fidivrl
lcall
cld
fwait
jbe
pop
iret
pop
cmp
aas
jmp
roll
mov
out
jmp
or
outsl
lcall
loopne
jb
push
adcl
mov
lods
movsb
ret
mov
pop
cmp
popa
or
enter
pop
mull
mov
xor
dec
rolb
shlb
sbb
sbb
aad
sub
or
dec
sub
add
mov
ret
mov
mov
jle
jmp
push
in
or
rep
jmp
or
outsl
push
fstpt
adc
in
sbb
sub
rcrl
xchg
addr16
addr16
je
out
pop
dec
fdivrs
pop
jb
adcb
loopne
in
pop
leave
test
decb
lcall
push
xor
and
in
mov
dec
mov
shrl
mov
jg
mov
fs
insl
hlt
pop
mov
xchg
add
sahf
aaa
imull
fwait
jbe
faddl
mov
jmp
and
sbb
fildl
mov
stc
aas
mov
sub
adc
jg
mov
std
jle
mov
lret
inc
cmpsl
movsb
sub
xchg
add
js
ret
push
lds
movsl
daa
mov
and
pop
imul
nop
flds
mov
hlt
fs
xchg
cmc
add
repnz
sub
sbb
sub
add
std
or
loop
mov
xchg
xor
push
inc
and
or
movsl
cwtl
sbb
imul
insl
mov
pop
leave
test
mov
cmpsl
aaa
push
mov
mov
inc
sub
xor
adc
mov
and
ficoml
mov
leave
test
mov
notb
and
in
sbb
jb
in
pop
int3
inc
and
icebp
nop
arpl
and
mov
mov
es
jmp
adc
outsb
iret
pop
leave
test
mov
icebp
popa
add
push
xchg
mov
and
xchg
pusha
mov
test
pusha
notb
sbb
xchg
aas
xchg
stos
movsb
ret
ds
pop
lret
pop
ds
inc
in
sbb
push
mov
sub
inc
les
int3
sub
call
sub
xchg
xchg
icebp
add
jl
imul
outsb
or
push
jno
push
cld
adc
cli
sbb
inc
mov
out
out
adc
and
xor
movsb
cmp
dec
shlb
xchg
gs
mov
test
jge
jge
negl
les
jo
jbe
loopne
repz
lock
bound
sbb
pop
nop
push
popa
nop
jp
mov
inc
mov
mov
in
mov
mov
lcall
xchg
or
fdivl
in
in
jno
xorb
in
jge
negl
add
and
notl
dec
out
jl
divb
stos
cmp
jle
and
pushf
xor
inc
and
sbb
into
dec
fistpll
mov
scas
add
pop
jb
data16
ret
push
lds
dec
rcll
or
jle
inc
popl
xchg
repz
loopne
xchg
add
ja
xchg
add
sahf
jl
test
in
sbb
sbb
lahf
punpckhdq
pop
stos
pop
jae
jno
jecxz
fimull
mov
aad
dec
scas
repnz
insl
cmpl
pop
cltd
or
in
mov
les
int3
cmp
mov
jg
and
pop
int3
stos
data16
ja
xorb
sub
or
loope
adc
xor
ret
shll
xorl
imul
adc
bound
rcl
shlb
dec
mov
or
adc
test
jge
test
pushf
sti
push
hlt
ja
xchg
cmc
add
lea
fwait
decb
psubd
mull
icebp
sbb
pop
and
aaa
ficoms
cmpsl
push
mov
inc
mov
add
cmp
mov
mov
pop
iret
stos
pop
rcl
mov
adcl
cmp
push
xor
sub
pop
fwait
push
pushf
sti
push
mov
js
mov
sub
add
repnz
pop
repnz
in
jb
xchg
mov
pushf
dec
inc
and
ja
add
std
or
adc
mov
test
pop
lcall
pop
fisttps
flds
push
js
ljmp
jge
pop
jp
jle
fs
popf
insb
mov
jle
mov
mov
ret
mov
shlb
insl
hlt
pop
into
xchg
and
or
or
rcll
sub
punpckhdq
je
insl
test
iret
pop
roll
aad
jnp
js
ljmp
sahf
addr16
sbb
outsl
or
out
add
sbbl
aam
frstor
mov
sbb
jb
xchg
pop
push
xor
jns
mov
stos
movsb
ret
mov
stos
inc
in
sbb
inc
and
or
mov
inc
mov
or
enter
dec
mov
and
xchg
add
jb
fdivl
in
dec
into
pop
cmp
aas
in
cld
fwait
jbe
or
inc
into
pop
cmp
sbb
icebp
adc
fs
popf
insb
mov
test
movsb
ret
xlat
ds
inc
mov
push
mov
gs
jl
sub
sub
fcoml
cmpsb
push
nop
rcll
pop
mov
xor
fmull
mov
cmp
or
adcl
test
pop
enter
xchg
setbe
sahf
and
pop
and
jl
jbe
cmpl
stc
imul
cmp
sbb
fistpl
rclb
inc
jl
insb
or
rcrb
rol
shll
call
dec
frstor
sti
push
testb
daa
mov
sub
insl
out
adc
dec
mov
test
cmp
lods
and
mov
fwait
decb
in
pop
incl
pop
cmp
aas
mov
dec
fmuls
fdivs
pushf
or
pop
int3
inc
and
cmp
sbb
imul
insl
subl
sub
xor
loop
pop
repnz
shrb
cwtl
fwait
add
sub
adc
cmp
ret
push
imul
jmp
push
in
insb
pusha
rcll
inc
movsl
and
aam
lds
and
xchg
outsb
mov
or
jae
and
xchg
add
rclb
sub
movsb
cmp
dec
idivl
test
inc
into
pop
cmp
sbb
push
mov
mov
jae
insb
popf
pop
xchg
adc
and
mov
xlat
sahf
adc
mull
icebp
pop
inc
xlat
inc
and
sbb
ret
ret
push
xor
and
or
mov
xchg
data16
xchg
cmc
add
rorl
mov
arpl
cmc
pop
into
push
lds
cmpsb
push
cli
into
push
mov
mov
and
pop
stos
out
dec
ret
sarl
dec
sub
pop
mov
nop
fs
sbb
or
dec
sub
bnd
lea
mov
jle
imul
cmpsb
and
cmp
mov
cmpsb
insb
in
sbb
dec
lods
and
mov
rol
dec
fnstcw
shlb
jns
jmp
cmp
inc
and
and
mov
js
jl
scas
cmp
mov
pop
int
and
push
adc
arpl
stc
add
inc
aam
sub
fidivrl
iret
stos
pop
roll
mov
dec
fdivrs
mov
pop
enter
adc
ds
or
add
mov
popa
loope
adc
xor
jmp
pop
ljmp
jb
loopne
adc
or
jns
mov
push
inc
and
xor
push
shlb
sahf
insl
mov
popa
add
push
sbb
push
inc
lret
lret
cli
push
lea
adc
test
or
dec
xchg
add
std
or
cmp
mov
mov
sbb
data16
adc
pop
iret
stos
pop
lea
fs
push
or
loop
out
mov
push
roll
aad
sub
adc
test
xchg
lods
xor
adc
dec
fisttpl
in
jg
arpl
xchg
gs
add
out
jl
notb
outsl
in
jge
notl
or
jo
fs
pop
fcompl
test
mov
or
inc
push
xor
es
in
sbb
prefetcht1
add
scas
and
cli
je
lea
stc
imul
lods
mov
lods
clc
jnp
mov
sti
outsl
lcall
add
cmp
lock
bound
arpl
loop
cltd
adc
in
bound
sub
aaa
ljmp
stc
mov
jbe
cmpl
fisttps
fstps
loopne
adc
dec
xchg
or
or
adc
stos
cmp
sub
fimuls
popa
idivl
mov
in
cmc
pushf
outsl
mov
ljmp
aas
mov
aaa
mov
inc
mov
popf
pop
data16
adc
or
push
aaa
ret
push
xchg
repz
test
dec
xchg
inc
xlat
mov
mov
xor
stos
sub
mov
inc
mov
inc
enter
cmp
xchg
add
jp
insb
loop
je
addr16
gs
pop
jl
arpl
cmc
xor
xchg
jb
insl
cmp
mov
aad
int3
jge
jle
call
xchg
or
dec
rolb
sarb
pop
aam
fdivrs
xchg
lock
shll
cmp
push
or
stos
or
je
lea
imul
sbb
aad
lds
ds
movsl
and
add
lret
lret
mov
inc
mov
fs
jl
notb
dec
frstor
shrl
in
sbb
aad
lret
repnz
orb
daa
mov
and
orl
sti
push
loop
sbb
xchg
add
addr16
adcl
test
sbb
push
xor
sub
push
mov
push
mov
fnstsw
fstpt
inc
daa
shlb
dec
sub
jo
inc
shll
lods
mov
in
add
cmp
sbb
pop
jb
cmp
stos
cmp
sub
add
adc
xor
out
pop
jecxz
push
in
mov
fisttpl
pop
cmp
and
mov
inc
mov
and
jo
loop
xor
sub
and
gs
pushf
outsl
lret
repnz
fs
or
xchg
sbb
rclb
and
add
cmp
cmpsl
xor
int
leave
push
xchg
add
sahf
cmp
outsb
cld
fwait
jbe
scas
aas
scas
lret
lods
cmp
mov
inc
mov
mull
icebp
pop
cli
pusha
notb
inc
and
addr16
xchg
cmc
add
data16
insl
hlt
pop
mov
cmpsl
or
pop
enter
lcall
push
mov
xor
and
adcl
cmp
mov
nop
push
rolb
shlb
out
jg
jmp
insl
pushf
jle
push
lret
mov
push
xor
das
daa
mov
test
xchg
repnz
adc
sbb
add
lcall
mov
sbb
daa
scas
aas
pop
test
pop
mov
and
setg
or
jmp
xchg
pop
mov
gs
popa
into
pop
int3
stos
shrw
in
loopne
jb
fisttps
mov
add
jl
insl
xchg
xor
mov
rcrl
stos
pop
test
test
fs
bound
adc
mov
ret
push
lds
add
rcrb
stos
data16
mov
lret
cltd
or
out
adc
sbb
fs
pop
inc
xlat
inc
and
sbb
xor
pushf
xor
dec
loop
in
jle
ljmp
mulb
psrld
mov
pop
cmp
push
xor
jle
mov
dec
mov
arpl
jp
dec
fnstcw
add
adc
in
outsb
cld
fwait
jbe
cmp
sbb
popf
sbb
aad
push
roll
sarl
pop
fimull
fidivrl
or
je
lea
push
shll
or
pop
push
sahf
or
cmpsb
insl
call
addl
jb
xchg
mov
jecxz
jne
sub
push
les
int3
and
or
xchg
add
xor
xchg
fimuls
add
cmp
repnz
pop
repnz
dec
adc
inc
in
in
je
je
pop
enter
pop
push
xor
addr16
ljmp
stc
mov
pushf
xor
cmc
inc
or
push
popa
nop
cmp
cmpsb
scas
or
in
xchg
cmp
and
sbb
xchg
inc
fistps
xorb
and
mov
mov
mov
and
jmp
loop
je
lock
lea
notl
dec
push
xor
sub
cmpsl
add
inc
and
adc
xlat
inc
and
xor
ret
dec
fnstsw
sbb
jbe
lea
inc
xlat
mov
cmpsl
xor
daa
mov
dec
mov
pop
loop
leave
pop
int
addr16
pop
int
addr16
aas
test
pop
roll
aad
imulb
je
push
leave
pop
cmp
jg
ret
push
lds
mov
out
jo
xorl
enter
jo
loop
lods
aaa
cmpsl
ret
or
leave
push
lahf
push
cld
jle
mov
mov
mov
xor
lcall
push
xor
adc
fisttps
lds
mov
test
sbb
out
imul
insl
int3
mov
test
cmp
jo
outsl
or
jmp
shlb
jl
add
sbb
jne
jne
out
add
ret
xor
pusha
notb
mov
and
push
jp
arpl
cmc
sbb
pop
repnz
mov
lods
inc
fmuls
fsubrs
jae
jle
call
mov
das
dec
mov
mov
aad
dec
cli
or
faddl
mov
clc
scas
adc
adc
jb
add
and
cld
xchg
cmc
add
and
push
lds
fs
jl
pop
iret
stos
pop
xchg
inc
xlat
mov
mov
mov
call
adc
aaa
mov
sub
leave
inc
aad
dec
test
fstpt
fcoms
pop
mov
and
sub
dec
fdivrs
xchg
testb
inc
test
mov
pop
roll
aad
pop
int3
inc
and
lock
vpunpckhqdq
test
ss
inc
mov
add
arpl
push
sti
imul
push
lret
scas
pop
in
adc
mov
jle
cmp
movsl
xor
jns
mov
jmp
mov
andl
bound
scas
lret
add
push
pop
mov
inc
lods
insb
out
jg
jmp
xor
sub
loope
ja
insl
hlt
pop
into
gs
bound
fistpll
dec
sub
push
xor
daa
jne
outsb
or
or
dec
fidivrs
and
inc
arpl
popa
add
push
adc
dec
cmp
sub
imul
insl
sub
adc
and
push
jg
mov
pop
lea
cmp
jp
jp
test
mov
sbb
pushf
xor
mov
cmp
lcall
fs
add
std
or
imul
sbb
push
adc
jp
mov
inc
mov
cmc
jno
xorb
mov
inc
mov
mov
in
jg
push
test
jge
outsb
push
fwait
or
cmp
xchg
jb
inc
push
xchg
add
dec
frstor
stc
or
lcall
lock
bound
mov
ja
jp
in
sbb
pop
cmp
jno
lcall
mov
pop
mov
rclb
cmp
push
push
pushf
sti
push
out
mov
push
xchg
add
sahf
aaa
push
roll
aad
pop
into
test
daa
inc
mov
das
mov
inc
mov
push
into
pop
cmp
popa
or
xchg
cmp
pop
xchg
adc
xchg
sbb
mov
lcall
mov
clc
jge
je
gs
aam
pop
xchg
adc
add
ja
insl
std
test
sbb
push
and
jnp
imul
pop
jne
push
cli
jne
mov
test
test
push
test
les
pusha
pop
repnz
fs
imul
cmp
adcl
test
jle
mov
lea
scas
aas
pop
test
and
and
jp
jp
jg
jne
out
inc
call
shr
in
jg
inc
fdivl
in
xchg
or
lods
lret
inc
icebp
adc
cmp
aaa
mov
pop
fdivl
in
xchg
pop
xchg
adc
push
jns
jmp
cmp
push
movb
inc
scas
arpl
jne
out
add
aas
pop
test
clc
or
inc
into
pop
cmp
jno
pop
push
fisttps
lret
dec
fstpt
pusha
pop
repnz
pop
into
test
lret
scas
pop
scas
repz
mov
mov
push
shll
sbb
or
add
std
or
fmull
mov
call
mov
inc
mov
xor
fs
xchg
cmc
add
xor
and
or
dec
fistpll
iret
stos
pop
shlb
lods
and
sbb
movsl
adc
rcll
inc
lret
push
out
jae
xchg
push
rolb
shlb
addl
lock
fcomps
stos
pop
test
pop
cmp
add
jae
leave
pop
cmp
daa
into
dec
fnstcw
in
jle
aad
int3
stos
rcrw
test
jge
bound
xchg
pop
bound
xor
and
jb
in
push
adcl
loopne
adc
or
push
shlb
lock
divl
lret
xchg
xchg
ja
loope
call
insb
mov
mov
and
loope
loope
es
cs
js
jbe
loopne
and
mov
mov
push
shll
decb
jl
cmp
arpl
xchg
gs
inc
shll
outsb
or
sub
cmpsl
aaa
push
mov
scas
pop
mov
mov
mov
lods
jmp
push
in
or
pop
add
xor
jle
mov
push
in
and
lret
pop
aas
lret
int3
inc
and
dec
sub
push
dec
push
xor
cmp
mov
js
popa
ss
cmp
pop
movsb
xor
int
fwait
lods
inc
shll
daa
inc
mov
or
jo
pop
lret
scas
pop
mov
inc
xlat
mov
call
mov
push
adc
arpl
xchg
gs
test
cmp
cmc
pop
imul
or
pop
jp
mov
icebp
sub
ret
xchg
popa
call
ret
adc
imul
std
test
in
push
lahf
push
fistpl
fs
js
mov
lcall
jge
je
addr16
popa
add
push
add
pop
aam
sub
ja
loope
dec
fidivrs
aam
int3
icebp
jl
jne
jo
ljmp
stc
out
xchg
mov
sbb
dec
mov
adc
in
jg
adcl
sbb
and
push
fisttpl
mov
cli
popf
insb
popf
inc
fisttps
fsts
loopne
adc
dec
sbb
sbb
xor
cwtl
push
imul
sahf
or
cmpsb
loopne
adc
push
mov
mov
ja
xorb
out
adc
cmp
rclb
mov
bound
jae
in
xor
push
clc
jl
jne
push
les
int3
and
mov
popa
icebp
nop
arpl
sub
jmp
sub
xor
pop
pop
aad
sub
xor
repnz
pop
repnz
push
outsb
or
adc
mov
xchg
movsl
xor
mov
xchg
xchg
adc
std
outsl
lcall
push
xor
rorl
mov
xchg
cmc
add
scas
xor
addr16
insb
or
mov
sbb
hlt
imul
mov
filds
mov
cmc
dec
ljmp
lds
loope
les
lds
mov
in
mov
loopne
clc
cmpsl
and
xor
cmp
push
xor
sub
stos
push
orb
stc
or
adc
dec
addr16
jg
jmp
mov
dec
sub
push
jle
popa
add
add
in
addr16
push
cld
or
test
xchg
adc
decb
mov
mov
or
scas
xor
mov
xchg
movsl
lret
push
lds
adc
jle
call
aaa
ret
jle
mov
testl
or
push
jno
bound
pop
cmp
adc
insl
out
jg
jmp
dec
mov
shlb
sub
rcrl
stos
pop
lods
jbe
insl
hlt
pop
jmp
fmuls
fdivrs
push
jl
add
sbb
orb
insl
pushf
cmp
je
lea
mov
jns
push
es
les
out
rolb
shlb
jecxz
push
in
flds
mov
hlt
cmp
pop
int3
stos
data16
inc
shlb
fidivrl
shlb
mov
or
sbb
enter
repz
gs
xchg
add
jne
in
sbb
or
and
call
pop
nop
push
popa
nop
jo
xor
jp
jp
out
fs
popf
insb
mov
pop
cmp
outsl
dec
lds
iret
push
dec
frstor
mov
cltd
push
test
push
cld
pop
cltd
or
jo
add
adc
jl
jne
jno
adc
rcll
add
lods
cmp
push
shll
pop
loop
cmp
gs
insl
hlt
pop
hlt
push
ret
cmpsb
push
in
push
lret
cmc
shlb
xchg
or
cmp
je
lea
mov
jns
push
es
les
out
rolb
shlb
jecxz
push
in
flds
mov
hlt
cmp
pop
int3
stos
data16
inc
shlb
fidivrl
shlb
mov
or
sbb
enter
repz
gs
xchg
add
jne
in
sbb
or
and
call
pop
nop
push
popa
nop
jo
xor
jp
jp
out
fs
popf
insb
mov
pop
cmp
outsl
dec
lds
iret
push
dec
frstor
mov
cltd
push
test
push
cld
pop
cltd
or
jo
add
adc
jl
jne
jno
adc
rcll
add
lods
cmp
push
shll
pop
loop
cmp
gs
insl
hlt
pop
hlt
push
ret
cmpsb
push
in
push
lret
cmc
shlb
aam
cmc
sbb
jno
push
push
cmp
xchg
push
loop
cmp
fdivl
in
lret
pop
leave
test
pop
int3
inc
and
mov
js
mov
test
stos
cmpsl
xor
push
test
push
out
insl
mulb
dec
pop
popf
or
cmc
gs
inc
stc
gs
pushf
outsl
stos
rorw
xchg
add
cmp
dec
das
fisubrl
les
int3
dec
sti
pop
into
test
out
jo
pop
fisttps
flds
addl
lock
mov
sarb
testb
out
int
fistpll
or
mov
dec
mov
cwtl
imul
leave
pop
cmp
add
fs
adc
adcb
andb
sub
aas
fcoml
mov
mov
cwtl
push
imul
jnp
mov
mov
ljmp
cmpsl
aaa
push
mov
aaa
ret
fisttps
flds
daa
mov
and
sub
mov
nop
cs
dec
mov
decl
mov
ljmp
pushf
popa
icebp
nop
arpl
or
hlt
push
lds
shll
xor
pop
fisttpll
out
or
loope
cmc
pushf
outsl
test
dec
sub
cmp
pop
int3
stos
data16
imul
sti
imul
sbb
adc
inc
loope
lcall
movsl
int3
aas
shll
jns
jmp
enter
dec
scas
xor
cs
mov
sbb
add
testl
fs
xor
fstpl
ljmp
lcall
or
jmp
repz
les
adc
mov
ljmp
cmpsb
shll
mov
lahf
leave
push
lds
popf
insb
fstpt
xchg
inc
fidivrl
lods
lret
inc
rcll
push
std
jl
jecxz
push
in
mov
roll
inc
scas
mov
and
icebp
rclb
pop
mov
test
pop
test
daa
mov
adc
mov
lret
fstl
mov
adc
mov
xchg
add
jg
adcl
lcall
popf
in
cld
mov
shrb
mull
icebp
or
sahf
or
cmpsb
add
jo
loop
fimuls
mov
xor
dec
fsts
cmpsb
push
mov
out
into
push
lret
lods
ss
inc
mov
pop
lds
iret
fs
xlat
inc
and
pusha
xor
add
pop
lret
scas
pop
in
mov
mov
fldt
dec
fdivrl
sbb
push
daa
movsb
cmp
dec
out
insl
std
test
push
aad
sub
aas
dec
int3
inc
and
nop
testl
repz
loopne
pop
leave
test
mov
scas
aas
pop
test
jp
cmp
jo
cmp
insl
std
test
fcoms
lods
pop
mov
clc
adc
dec
fimuls
push
pop
int3
inc
and
out
mov
mov
mov
and
push
mov
mov
dec
and
add
xchg
or
in
mov
add
xor
pop
lods
mov
hlt
lock
loop
je
scas
xor
data16
xchg
outsb
jmp
jp
imul
jbe
mov
jle
push
setg
or
ret
mov
cld
fwait
jbe
pusha
in
sbb
notb
mov
and
cli
ja
xorb
cmp
jbe
cmpl
adc
test
jge
outsb
cmp
es
mov
mov
test
jbe
cmpl
xchg
mov
adcb
andb
lods
cmp
scas
cmp
mov
cmc
lock
bound
movsb
dec
push
adcl
mulb
psraw
jp
pop
push
xor
mov
and
lods
pop
pop
jp
ds
xchg
sub
or
adc
mov
jg
or
rorl
sbb
inc
mov
movsl
int3
aas
fdivl
sub
pop
cmp
mov
or
lock
sbb
jg
mov
sti
jo
xorl
int3
pop
dec
fdivrl
cmp
dec
add
sbb
imul
cmc
add
stc
je
lea
clc
outsb
or
adc
pop
enter
ljmp
test
inc
aad
sub
push
sbbl
out
sbb
popa
nop
jp
dec
fidivrs
dec
fnstsw
push
jno
jno
xor
int
mov
jl
negb
mov
jg
xor
hlt
pop
and
push
lds
mov
lock
aad
mov
cmp
and
repz
xchg
test
mov
pop
jecxz
push
in
inc
ret
ret
pop
int
test
leave
cmp
mov
shr
data16
xchg
outsb
mov
lahf
punpckhdq
mov
mov
ret
jno
jecxz
adc
pushf
adc
gs
pushf
outsl
cltd
fmuls
mov
lods
lret
inc
mov
cli
push
scas
aas
pop
test
cmp
sub
imul
adc
inc
xlat
mov
cmpsl
setp
outsl
lcall
sub
mov
jns
ds
add
cmp
call
jns
and
push
xor
ja
inc
aam
dec
out
icebp
popa
add
inc
sahf
cmp
mov
ret
cs
add
adc
notl
ret
mov
test
andl
iret
stos
pop
test
adcl
test
mov
inc
mov
mov
cmpsb
shll
sbb
jno
or
jp
jp
outsl
in
sbb
sub
pop
roll
shll
and
test
mov
pop
enter
and
lret
shlb
in
je
inc
cltd
or
mov
aad
into
setns
push
shlb
shlb
shl
jl
jne
xor
jns
jmp
iret
push
les
out
mov
sbb
jns
jnp
in
inc
repnz
std
test
lahf
inc
shll
fnstcw
or
dec
adc
js
push
shll
lds
cld
jp
jp
divl
xorl
mov
js
ljmp
xor
lret
mov
mov
inc
aad
dec
mov
jbe
jo
lcall
nop
push
popa
nop
fs
outsb
cld
fwait
jbe
test
test
push
jmp
jmp
and
loop
ljmp
repnz
mov
adc
dec
lea
pop
rcll
ja
notl
cmpsb
cmp
rcrl
addr16
mov
xchg
inc
fimull
fidivl
pop
into
test
inc
es
adc
cmp
iret
dec
ret
mov
jge
je
fs
dec
fidivrs
aad
dec
movsb
pop
fimuls
push
jmp
popf
in
sbb
add
gs
pushf
outsl
pusha
jmp
into
inc
aam
dec
test
mov
inc
mov
rcrb
andb
xchg
push
mov
es
in
pusha
notb
jb
in
cmpsl
xor
int
leave
and
sub
sbb
pop
cmp
adc
cmp
mov
cmpsb
inc
aam
sub
and
pop
nop
or
push
xchg
repz
pushl
jle
call
and
ja
mov
dec
mov
push
in
jno
jl
testb
into
test
sub
jno
inc
aad
dec
lret
push
jns
bswap
dec
fistpll
pop
cmp
das
aas
mov
push
test
ja
xorb
dec
fidivrs
add
jp
pop
lret
scas
pop
mov
jo
xorl
xor
jle
xchg
sbb
adc
mulb
sbb
lcall
ss
mov
es
dec
fimull
fisubrl
sub
mulb
cmp
int
cli
jae
xchg
push
rclb
sub
inc
and
jns
lods
and
inc
arpl
xchg
gs
cmp
mov
in
and
stos
xor
int
xchg
sti
fs
popf
insb
fistl
mov
xchg
aas
js
jnp
in
pop
cmp
or
cmpsb
and
lahf
punpckhdq
add
sub
dec
sub
add
jl
jne
gs
imul
sbb
int3
outsb
out
jg
jmp
add
xchg
adc
inc
lret
lret
sub
push
xor
add
xor
xor
adcb
andb
test
cmp
or
xchg
or
xor
int
leave
and
xor
leave
pop
int
addr16
data16
xchg
outsb
test
dec
sub
int
addr16
jno
jecxz
ljmp
stc
mov
in
bound
sub
push
pushf
sti
push
mov
out
stc
imul
insl
ret
aam
dec
stc
inc
jmp
push
in
insb
popf
lods
lret
inc
shrl
and
addr16
xorl
test
dec
fnstcw
fdivrl
add
jae
xchg
pop
bound
out
sti
mov
lret
sub
or
xchg
add
pop
adc
dec
mov
roll
pop
cmp
xor
ret
sub
gs
pushf
outsl
cltd
adcb
loope
clc
cmp
sub
fs
jbe
loopne
loope
in
jg
lods
cmp
sub
lds
ljmp
sub
leave
pop
cmp
jg
scas
aas
pop
test
inc
mov
dec
roll
sarl
dec
fidivrs
nop
testl
fwait
jbe
push
lods
and
xor
cmp
dec
sbb
cmp
aaa
mov
dec
mov
fldcw
lret
shlb
or
cmpsb
inc
arpl
jne
out
add
dec
ret
mov
std
sbb
pop
fisttpl
fstl
mov
rcr
push
mov
fnstcw
or
jb
mov
jns
jl
int3
inc
and
or
imul
pop
in
ljmp
xchg
jno
add
std
or
push
xchg
add
jp
xchg
pop
bound
mov
cmp
push
xchg
repz
cmpsl
lods
cmp
movsb
cmp
add
cmp
mov
mov
push
pop
enter
and
rcll
mov
loop
je
lods
xor
xchg
pop
bound
push
mov
leave
cmp
pop
cs
pop
repnz
fs
inc
fidivrl
mov
test
pop
test
imul
ret
cmpsb
push
mov
jbe
cmpl
lret
pop
ds
es
dec
mov
push
mov
lcall
cmpsb
pop
iret
pop
cmp
xor
and
jl
jle
call
call
mov
nop
push
popa
nop
fiaddl
mov
jmp
lock
mov
inc
mov
loopne
cmpsb
mov
jno
bound
fstpt
jbe
loopne
dec
roll
aad
cmp
sub
push
xchg
repz
out
in
insb
loop
je
movsb
and
sub
jmp
or
sub
fsts
cmpsl
push
cmc
cmpsb
xor
scas
gs
xchg
testb
lcall
and
stos
cmp
inc
iret
inc
shlb
mov
dec
fistpll
adc
es
adcl
test
pop
leave
test
mov
inc
scas
repnz
xchg
outsb
xchg
je
out
dec
mov
lret
sub
xchg
setg
or
sbb
pop
lock
mov
clc
pop
ret
ret
or
in
mov
mov
inc
loope
adc
data16
mov
jne
fs
sbb
mov
inc
mov
addb
repnz
and
xor
dec
or
test
fldl
cmc
jge
je
sub
mov
shll
jmp
push
xor
and
push
push
fimuls
add
aaa
cmpsl
ret
pop
lcall
into
test
and
inc
sbb
repnz
icebp
nop
arpl
jecxz
and
arpl
gs
adc
std
pop
dec
rolb
shlb
sbbl
jmp
std
test
push
enter
ja
out
adc
inc
out
out
mov
and
push
leave
pop
cmp
jle
popa
icebp
nop
arpl
jne
inc
and
pop
stc
jns
mov
add
cs
cmp
mov
dec
int3
inc
and
stos
int
aad
mov
jns
push
sbb
mov
test
sti
sbb
test
imul
insb
or
call
repnz
orl
mov
nop
testl
lds
lock
lock
bound
xlat
and
pop
ds
sbb
dec
jecxz
push
in
popa
mulb
adc
test
pop
test
lea
mov
sbb
sarl
iret
pop
cmp
popa
inc
mov
inc
mov
inc
fmuls
fdivs
aas
scas
lret
xor
push
mov
test
push
test
data16
out
jl
divb
xor
pop
fmuls
fdivrs
lahf
sbb
sub
push
cwtl
push
mov
es
popa
out
adc
push
orl
lahf
sbb
stos
cmp
dec
mov
lea
pop
aas
lret
insb
loop
je
xchg
sbb
mov
inc
mov
inc
lret
lret
lret
lret
cmp
jg
bound
repnz
fs
loop
loope
jae
inc
mov
mov
and
aad
xlat
mov
cmpsl
sbb
leave
pop
cmp
cmp
fisttpll
mov
nop
testl
lret
inc
out
and
inc
mov
jmp
mov
ret
xchg
pusha
out
cmp
dec
ret
xorb
mov
mov
xchg
add
jae
aaa
cmpsl
ret
jae
push
cld
sbb
out
adc
add
jns
jmp
stos
daa
mov
and
add
dec
frstor
insb
lahf
jae
stos
cmp
dec
adc
in
lcall
stc
cwtl
imul
xor
iret
lods
inc
shll
stos
into
cmp
sub
aas
iret
pop
into
test
dec
sub
push
add
pop
bound
cltd
push
pop
loop
and
push
xor
dec
sub
mov
cmp
ret
stos
iretw
in
jo
xorl
xor
add
jb
add
push
mov
cmc
pushf
outsl
mov
in
push
fisttpl
fnsave
inc
lds
iret
sub
imul
lret
int3
inc
aam
dec
lods
in
cld
fwait
jbe
insl
jmp
push
in
and
add
jge
js
mov
jo
xor
adcb
out
out
dec
fidivrs
hlt
xchg
outsb
fwait
repz
icebp
nop
arpl
ljmp
cmp
push
shll
inc
mov
xor
pop
dec
aam
sub
loop
je
es
sbb
xlat
dec
fistpll
popf
in
mov
sub
popf
sub
xor
sub
lds
add
pop
add
adc
test
lds
dec
scas
xchg
xchg
icebp
add
jp
xchg
testb
stos
inc
movl
jae
xchg
arpl
jle
call
popa
nop
pop
dec
rclb
cs
stc
cwtl
imul
and
ds
inc
mov
pop
roll
aad
mov
les
scas
fs
imul
cmp
jnp
mov
test
and
clc
mov
fcoml
xchg
mov
xchg
mov
and
test
int3
push
lret
cmc
or
cmp
add
outsb
cld
fwait
jbe
mov
mov
jle
mov
cmp
dec
add
jne
fs
sbb
pop
lret
scas
pop
mov
notl
fwait
and
sbb
sub
cmc
gs
adc
fmuls
fdivrs
cmp
dec
frstor
out
cld
movsl
sub
and
mov
fwait
decb
cmp
and
jbe
cmpl
or
in
loope
xor
repnz
pop
repnz
insb
loop
je
mov
mov
and
mov
mov
test
pop
test
cmp
pop
adc
xchg
setg
or
jmp
scas
pop
repz
test
out
scas
xor
setg
or
mov
pop
fisttpl
inc
and
es
mov
rcll
mov
xchg
lock
jae
imul
adc
imul
sbb
jg
mov
push
inc
and
aaa
inc
int
and
aaa
inc
leave
pop
cmp
outsb
dec
frstor
cmp
daa
jle
add
adc
mov
gs
jbe
mov
xchg
sbb
scas
inc
shll
lahf
cli
or
lods
cmp
mov
jecxz
push
mov
sub
pop
adc
mull
nop
arpl
xchg
pop
ret
ret
es
cs
pop
popf
or
mov
push
mov
jns
and
mov
jnp
jne
out
inc
imul
add
dec
jo
inc
daa
rclb
adc
push
jl,pt
insl
hlt
pop
jecxz
lret
pop
ds
mov
ficompl
popf
or
mov
dec
mov
mov
and
mov
aad
sub
cld
je
lea
push
xor
and
pop
and
orb
adc
cmpsb
sub
inc
aam
dec
cmpsb
mov
push
ret
ret
inc
shll
es
mov
fs
popa
add
sbb
frstpm(287
jo
xorl
out
pop
leave
push
shlb
xorl
lret
rcll
push
pop
jmp
les
int3
gs
jecxz
push
in
sub
mov
mov
sbb
incl
test
xchg
repz
call
insb
lea
push
in
roll
dec
movsb
adc
ret
inc
aad
dec
mov
les
xchg
daa
inc
mov
imul
enter
inc
mov
push
ljmp
movsl
das
mov
mov
jg
jle
daa
mov
and
mov
fs
loopne
jb
sub
push
lds
or
inc
aad
sub
xor
aaa
xchg
dec
roll
shll
push
roll
aad
fiadds
mov
out
add
mov
in
sbb
inc
fimull
fisubrl
fdivl
in
lret
lods
pop
ljmp
aas
pushf
xor
and
aad
aam
sub
pushf
sti
push
idivl
movsl
in
imul
and
in
jge
negl
and
rorb
dec
test
outsl
lcall
sbb
inc
push
lea
cltd
or
jge
popf
or
enter
and
mov
jle
jg
mov
inc
mov
adc
dec
fimull
fidivrl
outsb
cld
fwait
jbe
sbbl
out
sbb
lods
pop
mov
lea
insb
or
mov
lahf
insb
adc
mov
mov
lret
lret
xchg
add
cmp
xor
jbe
dec
fdivrs
shlb
arpl
shlb
test
adc
push
lahf
push
mov
cmpsl
ret
push
rolb
shlb
sub
gs
pop
loop
xchg
adc
scas
aas
pop
test
cld
pxor
notl
mov
lock
adcl
inc
sub
inc
and
and
jb
jbe
loopne
cmp
rcll
push
clc
inc
rolb
rclb
add
add
jo
fwait
or
jno
fisttpll
out
lock
insl
int3
lock
lahf
push
out
jnp
mov
fiadds
mov
out
pusha
notb
mov
popa
icebp
nop
arpl
dec
fdivrs
ret
cmpsb
push
in
mov
inc
in
sbb
push
dec
fidivrs
dec
das
fidivrl
scas
cmp
mov
lods
cmp
pusha
notb
sbb
xchg
jbe
loop
pop
loop
fistpl
stos
data16
and
cmp
mov
imul
adc
inc
jne
aaa
mov
outsb
loopne
adc
add
js
mov
lret
inc
aad
dec
movsb
xchg
sbb
xor
stos
cmp
pop
push
ret
ret
ljmp
xlat
mov
lods
mov
cmp
cmp
xor
scas
pop
fadds
mov
testl
cmp
cwtl
fadds
mov
out
loope
adc
push
out
jno
xorb
jle
mov
scas
pop
fstpl
les
pop
cmp
sbb
push
mov
cli
popf
insb
lea
xchg
add
adcb
subb
shlb
xor
dec
movsl
and
push
lahf
push
lods
and
clc
jo
xorl
jo
out
cltd
push
jle
imul
mov
loope
adc
adc
or
into
cmp
pop
repnz
enter
pop
movsb
xchg
or
xor
pop
lret
scas
pop
mov
gs
pushf
outsl
lret
stc
cwtl
imul
js
mov
inc
mov
cli
popa
icebp
nop
arpl
add
outsb
mull
icebp
dec
pushf
add
or
push
mull
icebp
js
push
mov
mov
dec
cwtl
iret
dec
ret
mov
push
les
dec
fnstsw
cmp
test
mov
mov
and
test
jge
outsb
xchg
sbb
cmp
jo
mov
jecxz
jecxz
jne
or
dec
fdivrl
pop
cmp
and
out
adcl
test
xor
int
fwait
pop
into
pop
cmp
adc
or
inc
fisttpl
fnsave
setns
push
xor
mov
dec
mov
scas
pop
in
aas
movsl
xor
pop
xchg
adc
lock
dec
fistpll
and
mov
push
jecxz
sub
inc
shll
sub
adc
jns
jmp
sub
test
fwait
decb
xor
es
imul
fidivrl
xchg
icebp
add
sbb
jg
jns
mov
stos
and
mov
sti
jnp
mov
pusha
in
jge
notl
xor
and
xor
inc
fidivrl
leave
test
decb
popf
or
or
add
std
or
ljmp
dec
fdivrl
addr16
push
cmp
sbb
inc
daa
sarb
add
pop
xchg
repnz
xor
ds
outsb
icebp
popa
add
inc
andl
shlb
test
cmp
mov
pushf
sti
push
ret
das
dec
mov
cli
or
jbe
gs
pop
pop
fisttps
sub
cmp
dec
jmp
std
test
or
popf
adc
mov
xchg
in
jecxz
jne
outsb
in
sbb
add
rorb
push
xor
sub
arpl
xchg
gs
imul
insl
lahf
addr16
imul
adc
push
xor
xor
mov
mov
lock
lret
pop
aas
lret
in
bound
loop
je
fildl
mov
mov
aas
mov
mov
mov
and
lods
push
nop
push
popa
nop
cmp
jg
jmp
add
pop
add
das
xchg
add
adc
push
shll
add
int3
stos
data16
std
test
sbb
and
cmp
push
lds
je
add
push
int
fidivrs
mov
and
jb
outsl
or
mov
popl
cmc
gs
adc
jnp
push
cld
push
pop
mov
js
pusha
lds
mov
fistpll
sti
sahf
insl
sahf
jnp
jns
jmp
ret
mov
xchg
cmc
add
lods
cmp
mulb
push
data16
popa
add
push
sbbb
jmp
mov
outsb
cld
fwait
jbe
cs
dec
mov
xchg
cmp
inc
and
dec
sub
jo
rolb
shlb
push
lret
fcmovnu
jp
jp
mov
sti
fistps
andb
push
aad
sub
aas
in
lock
bound
notb
in
outsl
lcall
jmp
jge
arpl
jg
jmp
lret
jle
fs
xor
sub
mov
dec
mov
mov
mov
negb
js
imul
psraw
adc
or
jno
xorb
pop
jp
xor
pop
cmp
adc
mov
lods
lret
inc
lods
fwait
or
dec
fstpt
ljmp
dec
das
fisubrl
hlt
xchg
outsb
movl
sbb
xchg
pop
bound
mov
cmc
mov
mov
xchg
add
and
and
fnstsw
mov
sub
or
popf
jge
or
and
cmp
mov
lods
and
inc
add
lcall
das
mov
adcb
andb
sub
lods
cmp
insl
std
test
stos
sub
cmp
mov
inc
mov
insl
std
insl
hlt
pop
in
popa
repnz
pop
repnz
cmp
adc
and
jg
mov
rcll
pop
mov
sub
lds
dec
fisttps
flds
fisttpl
push
iret
pop
cmp
popa
jmp
pushf
outsl
les
test
into
push
mov
jle
call
push
movsb
or
xchg
add
sub
inc
es
adc
jb
addr16
sbb
adcl
test
ret
push
lds
push
adcb
subb
mov
and
mov
movsl
int3
aas
rorl
std
or
pop
xchg
or
cmp
mov
dec
mov
mov
lods
xchg
sbb
xchg
pop
bound
xor
sub
insl
std
test
cwtl
or
mov
fmuls
mov
jle
call
sahf
insl
mov
inc
fidivrl
mov
mov
das
mov
push
cld
or
push
test
mov
dec
mov
and
outsb
cs
inc
mov
jp
jnp
in
pop
in
jo
xorl
inc
clc
push
movsb
cmp
sub
push
lahf
push
xchg
adc
in
sbb
popf
push
mov
rolb
push
aad
sub
aas
jg
mov
lods
sub
ja
xorb
add
lods
and
push
push
mov
jle
sub
scas
aas
pop
test
pop
lods
inc
mov
aad
setg
or
mov
shll
pop
cmp
cmp
notl
jno
jo
loop
sub
xor
test
lods
lret
inc
movsb
out
out
jo
jns
arpl
cmc
sbb
mov
jg
sub
inc
mov
pop
jp
and
mov
jns
and
inc
xlat
mov
lock
and
jne
jg
jmp
jle
cmp
out
jl
divb
add
aaa
cmpsl
ret
cmp
and
notl
sbb
sbb
test
nop
testl
mov
lods
rorb
dec
mov
pop
jmp
jae
xchg
dec
rclb
or
xchg
add
jg
insb
or
loop
mov
and
adcl
push
shll
mov
outsl
std
insl
hlt
pop
mov
js
arpl
imul
sbb
incb
inc
and
cmp
pusha
notb
ret
cmpsb
push
mov
sbb
mov
cltd
add
or
pop
into
test
jnp
in
inc
das
mov
inc
mov
lcall
arpl
xchg
gs
push
lret
mov
shrl
and
push
adc
aam
shlb
cmp
adc
insl
lock
mov
push
fimull
fidivrl
inc
leave
pop
cmp
outsb
insb
in
sbb
cmpsb
shll
lahf
pop
xchg
adc
cltd
push
test
push
cld
fcoml
mov
fidivrs
insl
hlt
pop
in
xchg
add
and
sbb
lods
cmp
pop
leave
test
mov
cmpsb
dec
mov
shll
add
pop
jbe
bound
dec
adc
push
xor
jb
jns
jmp
insb
repnz
pop
repnz
jmp
ljmp
mov
ljmp
sbb
inc
add
leave
dec
fnstcw
push
aaa
ret
enter
sub
dec
frstor
loope
stc
roll
dec
scas
pop
fimuls
or
jns
mov
movsb
cmp
dec
or
icebp
jg
mov
imul
pop
loop
imul
sub
cmpsl
aaa
push
mov
sub
adc
dec
fnsave
cld
insl
std
test
sub
push
xor
push
jno
inc
stos
inc
shll
enter
pop
roll
aad
adcb
ja
xorb
cmp
repnz
pop
repnz
add
imulb
cltd
push
or
dec
pusha
cld
xchg
cmc
add
push
lret
lret
sbb
xchg
add
sahf
sbb
xchg
pop
bound
shrl
enter
or
sbb
lock
bound
xlat
out
push
out
adc
add
fwait
or
jb
into
pop
cmp
xor
sub
lds
mov
hlt
cwtl
pop
xchg
adc
aad
leave
test
mov
shrl
in
fsts
pop
test
in
sbb
int3
stos
xchg
sub
pop
int3
inc
and
sub
pop
in
loope
jae
cwtl
or
in
cld
iret
pop
enter
push
int
and
and
gs
pushf
outsl
fstpt
je
out
inc
cltd
add
xchg
jb
es
gs
pushf
outsl
ficompl
push
xor
push
pop
stos
xor
add
sahf
sbb
xchg
pop
bound
mov
mov
fidivrs
hlt
xchg
outsb
mov
dec
fstpt
in
je
gs
pusha
pop
repnz
inc
fidivrl
hlt
xchg
outsb
mov
mov
lea
mov
jle
gs
inc
and
cmp
jno
xorb
mov
std
jo
xorl
ret
sub
jae
in
xchg
test
push
mov
mov
shlb
int
dec
fdivrs
loope
jae
mov
dec
aad
sub
sub
in
sbb
es
mov
fiaddl
mov
jb
bound
fistpll
and
loopne
adc
push
out
dec
ret
roll
cmpsl
aaa
push
mov
jl
pop
scas
xor
jnp
mov
mov
fimull
pop
and
cmp
jb
xchg
sbb
mov
lods
sbb
fs
jge
notl
pop
xchg
repnz
dec
lds
iret
and
les
cmc
repz
je
insb
sahf
adc
dec
fdivrs
sub
dec
lret
pop
leave
test
incb
fcoml
push
xor
and
loop
gs
pushf
outsl
test
xchg
insl
cmc
gs
or
daa
mov
and
dec
loop
inc
shll
jae
in
lds
scas
pop
in
lea
xchg
adc
fsubrs
dec
fdivrl
push
popa
nop
pop
popf
sbb
push
aam
sub
frstor
add
sbb
push
pushf
sti
push
decl
mull
jp
in
add
mov
mov
rcl
pop
into
test
fwait
decb
xorb
adc
in
sbb
arpl
cmc
adc
mov
mov
lret
leave
test
mov
rclb
xor
test
in
ljmp
dec
mov
xchg
outsb
test
push
inc
aad
sub
jp
ja
xorb
cli
push
cli
push
cmp
mov
sti
push
leave
pop
cmp
pusha
loop
adc
xor
or
push
lret
jmp
loope
adc
data16
pop
into
test
lret
scas
pop
cwtl
sbb
inc
and
aas
mov
cltd
clc
or
insb
ljmp
push
xor
and
jecxz
cmp
push
ret
cmpsb
push
mov
call
cmp
jne
xchg
cmc
add
push
fimuls
add
addr16
sbb
enter
int
addr16
adcb
out
cli
ss
cmp
pop
insl
add
or
push
mov
aam
iret
lea
jmp
and
jns
jmp
inc
fimuls
push
or
xor
cwtl
mov
xchg
inc
xlat
mov
clc
hlt
push
push
int
and
bound
inc
and
push
mov
mov
and
ret
ret
add
ret
ret
sub
imul
out
adc
add
ret
push
lds
hlt
jle
mov
aas
lret
setg
or
dec
ret
ret
push
lds
sbb
or
dec
sub
push
imul
lret
test
daa
inc
mov
lods
inc
shll
push
xor
or
in
or
dec
sub
xor
dec
in
js
mov
movsb
cmp
pop
lods
xor
cwtl
add
and
popa
icebp
nop
arpl
stos
cmp
stos
cmp
add
push
mov
test
push
cltd
push
mov
sbb
add
lds
mov
add
adc
scas
cmp
mov
mov
ficompl
push
imul
mov
inc
mov
call
sub
clc
ja
xorb
cmc
gs
sbb
jg
mov
jge
addr16
push
push
fisttpll
out
dec
fdivl
in
add
in
jl
jne
and
fsubl
gs
pop
cmc
lock
bound
and
ret
lods
pop
cli
xchg
or
in
in
mov
imull
test
cmp
pop
ret
ret
and
inc
fimuls
dec
jmp
lret
mov
sahf
outsl
int3
inc
and
xchg
repnz
pop
fisttpll
out
adc
pop
sahf
or
cmpsb
inc
mov
movsl
int3
aas
aam
test
pop
test
mov
stos
sbb
rcrb
scas
pop
mov
add
mov
and
pop
jg
addr16
sbb
std
push
lcall
ret
mov
mov
xor
fdivl
in
inc
aam
sub
mov
push
xchg
repz
in
mov
inc
mov
inc
rolb
shlb
cmp
adc
add
mov
add
test
ljmp
std
test
cmpsb
add
std
or
nop
xor
js
mov
mov
movsl
int3
aas
fcomi
jbe
cmpl
xlat
inc
and
cmp
adc
mov
mov
and
outsb
popf
jb
mov
inc
mov
dec
lret
pop
ds
or
push
fisttpll
out
pop
aad
sub
cmp
push
xor
and
mov
inc
mov
mov
lods
mov
mov
inc
shlb
mov
and
je
jp
in
dec
pop
lret
lret
dec
frstor
xor
lock
popf
insb
test
xchg
add
ss
push
lret
lods
mov
mov
xchg
jb
imulb
test
icebp
insl
std
test
mov
fwait
addr16
imul
push
cld
dec
out
dec
ret
shr
dec
fnstcw
dec
sub
pop
bound
loope
icebp
and
movb
inc
test
sub
in
sti
inc
lret
pop
ds
dec
push
xor
sub
std
insl
hlt
pop
mov
mov
push
shlb
xchg
icebp
add
push
xchg
add
jnp
mov
jle
jg
cs
push
shlb
push
mov
push
mov
fsubrs
lret
xor
xchg
add
mov
inc
mov
sub
dec
mov
xchg
adc
shll
adc
mov
test
xchg
push
imul
dec
mov
mov
adcl
aas
scas
lret
xchg
xor
fisttpl
fisttpll
add
mov
cwtl
decl
jmp
mov
js
imul
cmp
and
jg
jmp
cmpsb
push
mov
jp
gs
jge
notl
data16
cmc
push
mov
lods
lret
inc
lea
clc
jmp
mov
cmp
scas
and
out
jg
jmp
insl
pushf
imul
inc
inc
and
sbb
jo
rclb
pop
mov
in
sbb
add
inc
jecxz
or
dec
ret
loop
cmc
gs
push
pop
int3
stos
data16
movsb
add
pop
jp
rorb
movsb
push
loop
pop
enter
shll
xchg
jno
popa
add
and
ret
daa
movb
dec
scas
xchg
adc
orl
decb
inc
mov
mov
movsl
int3
aas
rcr
pop
enter
enter
inc
mov
dec
jmp
call
orb
cli
or
popa
in
jge
notl
test
mov
das
iret
pop
aam
sub
jp
in
sbb
mov
pop
int3
inc
and
pop
cmp
push
popa
nop
push
adc
int
enter
push
lds
iret
and
add
inc
mov
gs
pushf
outsl
out
add
dec
frstor
mov
repnz
fs
or
in
mov
or
sbb
inc
push
xor
sbb
insb
loop
je
lock
xorl
or
xlat
push
mov
in
mov
cmpsl
push
mov
lcall
mov
jecxz
pop
iret
stos
pop
lods
dec
lret
pop
ds
cmpsb
sub
lods
lret
inc
movsb
inc
iret
pop
cmp
ds
js
mov
aam
aam
dec
cmpsb
add
mov
aad
sbbl
cmp
or
mov
aam
shll
mov
sbb
insl
clc
outsb
or
pop
mov
and
jecxz
int
and
arpl
mov
mov
sub
sbb
mov
push
std
lret
push
les
add
push
mov
mov
sbb
insl
out
jl
notb
xchg
adc
push
xchg
repz
in
repz
mov
outsl
call
movsl
daa
mov
and
jbe
popa
add
sbb
mov
jle
imul
aam
lods
and
jg
inc
shll
and
testb
ret
and
xlat
hlt
jg
mov
cmpsl
cmp
ljmp
stc
repnz
sub
sbb
xchg
pop
xchg
repnz
push
lret
pop
ds
cmpsl
xor
dec
fstpt
sub
sbb
cld
xchg
cmc
add
dec
roll
sarl
jl
jne
xor
gs
push
rorl
mov
sbb
or
push
xor
dec
mov
movsl
int3
aas
jmp
lcall
pop
cmpsl
es
cs
jecxz
sti
sahf
insl
or
frstor
or
push
add
pop
jb
mov
aad
lcall
add
sahf
push
add
push
fisttpll
out
cli
jnp
mov
xlat
pop
leave
test
mov
push
mov
in
jle
adcb
loop
ljmp
sti
push
lahf
push
ds
pop
test
ficoml
cmpsb
push
mov
xchg
jp
repz
cmc
push
pop
repnz
fs
cmp
add
test
mov
and
int
xchg
mov
xchg
mov
ljmp
sub
jle
jae
in
mov
sti
scas
sub
lds
stc
jg
mov
stc
js
mov
mov
scas
call
xchg
out
imul
in
bound
repz
xorl
jg
inc
and
pop
xchg
lahf
cli
or
mov
scas
leave
cmp
inc
enter
and
add
or
lock
bound
adc
xchg
add
push
mov
lcall
ds
test
rorl
mov
add
test
pop
test
test
pop
popf
or
push
xor
jno
into
pop
cmp
jg
out
jl
testb
inc
and
jns
adcb
xorb
mov
push
repnz
pop
bnd
stos
cmp
jg
mov
push
rolb
shlb
adc
mov
mov
call
cld
js
mov
movl
jge
je
addr16
dec
fstpt
inc
sub
push
xchg
sbb
js
mov
popl
xchg
icebp
add
inc
roll
aad
push
pop
test
test
push
div
notl
repz
icebp
nop
arpl
lds
pop
lahf
or
push
xchg
jb
xchg
and
cli
cmc
pusha
notb
out
jo
les
xchg
shrl
mov
dec
mov
sti
push
test
sub
xchg
mov
int
mov
cmpsb
shll
inc
in
sbb
push
dec
fdivrs
repz
gs
dec
fdivrs
movsb
ret
fsubrl
jl
negb
jp
xchg
testb
push
loopne
outsl
lcall
shll
lds
movsb
push
sahf
jmp
jne
imul
inc
daa
shlb
movsb
sub
stos
cmp
pop
imul
lret
stos
pop
xchg
mov
lea
roll
daa
shlb
inc
inc
and
xor
std
insl
hlt
pop
in
adcl
xchg
jb
jle
ret
ret
push
loope
out
mov
adc
mov
repnz
fs
popf
insb
vzeroall
out
jno
test
mov
cs
cmp
jp
bnd
xorb
mov
pop
jecxz
push
in
loope
cmc
pushf
outsl
test
inc
mov
mov
sarb
ficomps
test
mov
setg
or
fsts
cmpsl
push
cmc
imul
ds
dec
mov
fs
jno
dec
fidivrs
das
dec
mov
shlb
aad
mov
inc
mov
jp
jg
jmp
add
pop
into
pop
int
cmpsb
adc
adcb
mov
clc
jae
xchg
rorl
mov
mov
and
dec
or
or
and
mov
js
and
jo
xorl
hlt
pop
sbb
sub
out
push
ret
cmpsb
push
aam
hlt
push
cld
sub
pop
cmp
cs
push
in
or
addr16
sbb
pop
hlt
or
cli
jle
mov
adc
or
jns
adcl
test
xchg
jb
inc
sti
jb
xchg
mov
xlat
pushf
adc
std
insl
hlt
pop
in
cmp
adc
jne
je
out
sbb
push
les
push
jno
inc
jg
jg
jmp
lret
or
mov
dec
sub
adc
cs
inc
idivl
js
jae
sahf
sub
cwtl
inc
out
adc
push
ret
lods
cmp
add
std
or
or
jbe
insl
std
test
pop
fisttps
flds
cmpsb
and
fwait
or
jb
xchg
add
jno
push
xchg
repz
test
inc
mov
mov
lea
xchg
lock
out
pusha
notb
shlb
or
fmuls
fdivs
push
mov
jle
jle
add
cld
xchg
cmc
add
outsb
clc
outsb
or
sbb
mov
pop
xchg
add
jns
setg
or
loope
outsl
hlt
push
cld
dec
add
xchg
push
pushf
sti
push
test
leave
jle
mov
andl
dec
fnstcw
arpl
cmc
je
add
insb
loop
je
cmpsb
sub
sub
or
rclb
mov
add
lds
iret
and
inc
es
push
mov
gs
jbe
movsb
cmp
or
xchg
add
pop
and
or
repnz
test
aaa
cmpsl
ret
hlt
jg
mov
mov
jbe
cmpl
ret
push
lds
dec
sub
enter
sti
insb
loop
je
pop
mov
js
popa
add
aaa
sbbl
or
mov
xchg
sbb
sbb
xor
jo
xorl
sbb
es
insl
pushf
sub
push
mov
sbb
rclb
adc
out
jg
jmp
cmp
sub
lock
lds
iret
and
jl
jne
fs
lea
adc
in
sbb
jo
loop
mov
movsb
or
orb
cmc
xchg
fmul
inc
aam
dec
cmpsl
aad
into
test
in
jg
ljmp
adc
mov
repz
movsb
push
mov
adc
in
sbb
mov
mov
and
and
cwtl
add
test
jbe
cmpl
sbb
insl
icebp
popa
add
pop
call
lret
punpckhdq
std
or
jmp
xchg
gs
clc
outsb
or
jg
ljmp
inc
es
mov
stos
int
fstpl
sti
pop
fimuls
shufps
inc
scas
lods
das
mov
mov
js
pusha
push
jecxz
push
in
lock
mov
lea
fwait
decb
dec
mov
int3
aas
fnstenv
push
inc
xlat
mov
cmpsb
cwtl
sbb
xor
and
aam
sub
sbb
dec
or
lds
iret
daa
fisttpll
mov
lods
lret
inc
loope
lea
push
mov
es
mov
in
sbb
movsl
xor
xor
fisttps
fsts
sub
push
xor
jns
sbb
sahf
or
cmpsb
and
push
xor
adc
lods
dec
and
dec
add
add
xor
iret
pop
cmp
cmp
lret
pop
xlat
inc
and
cmp
sbb
insl
jmp
push
in
and
jb
push
mov
mov
or
in
std
jb
insl
hlt
pop
icebp
pop
int
and
cmp
icebp
or
jbe
cmpl
add
std
or
aam
shlb
cmpsl
ret
mov
mov
fisttpll
out
stos
aaa
cmpsl
ret
mov
mov
cli
push
push
les
je
cltd
xor
and
ret
pop
xor
xchg
sbb
or
dec
or
movsl
iret
sub
push
xor
adc
sbb
and
test
mov
push
add
cltd
push
cmpsb
push
mov
inc
mov
xchg
inc
enter
add
push
shll
jmp
add
sahf
jl
rcrl
stos
xchg
sbb
sbb
xchg
jle
rcll
xor
or
lock
xor
movsl
xor
sub
repz
cmc
sbb
mov
out
and
jnp
jno
jecxz
cmp
adc
dec
fnstcw
out
mov
pop
push
xor
addr16
das
dec
mov
loopne
xchg
jmp
fidivrs
mov
and
xchg
jne
es
cs
sub
icebp
jne
mov
call
xchg
lods
sub
lock
sbb
inc
and
xor
movsl
xor
daa
scas
cmp
mov
das
cmpsl
aaa
push
mov
and
aaa
inc
int3
inc
and
lods
mov
mov
enter
and
hlt
out
in
jle
pop
leave
pop
cmp
or
add
adc
insl
std
test
push
les
int3
and
push
shll
xlat
and
push
roll
aad
sbbl
test
aad
fwait
pop
pop
jp
ds
push
mov
adc
sub
notl
push
lods
and
xor
pop
leave
test
fsubp
popa
icebp
nop
arpl
and
sbb
cli
jns
mov
or
mov
mov
nop
jle
push
xor
daa
rcrl
test
mov
push
mov
rolb
rcrb
mov
push
mov
mov
sbb
xchg
mov
cwtl
add
lcall
jmp
imul
adc
ja
jne
out
dec
mov
repz
cwtl
push
imul
cs
rolb
shlb
mov
ja
bound
popf
in
mov
add
outsl
mull
icebp
push
xor
cmp
push
insl
mull
icebp
push
filds
mov
cmc
sub
mov
and
xchg
add
pop
sti
js
mov
int3
dec
ret
mov
scas
cmp
mov
mov
cmpsl
ret
lods
sub
pop
int3
stos
data16
jge
je
insb
xchg
and
icebp
insb
in
sbb
dec
cli
jb
xchg
pop
sahf
or
cmpsb
dec
push
jecxz
push
in
mov
rcll
pushf
xor
dec
nop
and
jb
xchg
loopne
loope
jae
roll
mov
call
inc
xchg
xlat
mov
shrl
scas
and
daa
inc
mov
ja
arpl
cmc
add
push
xor
js
push
lds
pushf
outsl
rorb
mov
iret
pop
cmp
pusha
lcall
dec
fnstcw
dec
sub
pusha
fnstcw
jp
fcomps
scas
pop
mov
adcl
fisttpll
out
xor
test
mov
lret
pop
ds
test
xchg
icebp
add
sbb
sub
xchg
in
mov
adcl
popa
icebp
nop
arpl
enter
cli
popf
insb
mov
mov
lds
stos
cmp
inc
mov
mov
and
fmuls
mov
sbb
dec
int
leave
test
mov
ds
fimuls
push
cmp
adc
fs
jo
loop
fildl
mov
call
xorl
das
cmp
out
pusha
ret
loop
out
mov
and
or
xor
cmpsl
add
std
or
aaa
mov
push
btr
mov
mov
inc
mov
push
mov
out
mov
sbb
push
imul
mov
mov
xchg
lock
out
and
and
pusha
out
jl
notb
idivl
mov
aas
mov
inc
mov
xlat
pop
enter
cmp
fmuls
mov
lock
lds
sti
out
js
mov
push
rclb
sub
xchg
mov
arpl
xchg
les
cwtl
push
imul
xchg
add
sahf
aaa
xor
and
or
push
lahf
push
adc
jp
je
out
inc
sbb
aaa
dec
call
negb
scas
pop
fcoml
inc
and
or
ljmp
add
sbb
imul
movsl
gs
pop
loop
cmp
sbb
jno
push
lret
mov
sbb
cmpsl
sub
fists
mov
fidivrl
mov
jns
mov
mov
sub
sbb
sbb
jno
xorb
or
and
sub
fmull
mov
or
cmp
jp
jp
hlt
insl
std
test
push
pusha
pop
repnz
sub
stos
xor
int
xchg
mov
hlt
add
sbb
pop
jb
cmp
jg
mov
sub
sub
dec
into
pop
cmp
xor
lea
rolb
shlb
and
ss
inc
mov
add
mov
in
std
movsb
cmp
dec
inc
lret
lret
push
ret
cmpsb
push
cwtl
push
mov
int
push
pop
sub
mov
jnp
je
sub
pop
test
pusha
jo
mov
cwtl
cltd
push
fs
pusha
fmuls
mov
add
push
in
jp
jp
xchg
pop
xchg
repnz
push
shlb
pusha
xchg
ss
adc
mov
hlt
push
cld
dec
ljmp
xchg
jb
xor
imul
push
cld
dec
adc
cwtl
or
push
xchg
repz
mov
push
shlb
lods
pop
mov
jns
mov
and
push
aad
sub
aas
pop
jecxz
push
in
push
rolb
shlb
jns
xchg
testb
out
cmp
and
mov
cmp
outsl
or
int3
pop
mov
xchg
js
ljmp
stc
jecxz
cmp
or
fistl
mov
jg
jmp
and
and
push
repnz
push
adcb
andb
je
out
add
iret
pop
cmp
aas
enter
gs
mov
push
fwait
or
sub
sub
lods
cmp
jns
mov
fadds
mov
into
test
sub
test
mov
cs
fmuls
mov
jle
insl
inc
les
int3
sub
sub
pop
jecxz
push
in
sbb
fistpl
xchg
mov
aam
int3
ja
xchg
testb
insl
int3
cmp
sub
ja
daa
mov
and
lea
xchg
lock
jmp
cli
popf
insb
mov
jns
jmp
mov
test
repnz
pop
repnz
dec
fdivrs
call
sub
lds
cli
insb
loop
je
pusha
cmc
gs
pop
stos
lods
lret
inc
scas
push
push
xor
push
dec
cmpsb
push
int3
inc
and
xor
or
test
pop
cmc
jnp
notb
push
popf
mov
pop
push
push
pop
mov
pop
rcrb
mov
xor
scas
jp
aam
sub
bound
lahf
cli
or
mov
cmpsl
ret
mov
mov
adc
pop
int
addr16
pusha
notb
jmp
repz
cmc
cmp
pop
cmp
cmp
rolb
testb
sbb
pusha
mov
les
lcall
stos
into
cmp
jecxz
mov
ret
pushf
xor
inc
fisttpl
push
mov
xchg
jns
inc
aam
dec
jmp
imul
xor
or
stos
cmp
adc
leave
jle
mov
or
and
das
dec
mov
adc
data16
push
aad
sub
or
sahf
push
mov
es
scas
rclb
mov
gs
sbb
insl
test
out
jl
jne
add
jnp
xor
mov
adc
into
inc
mov
movsb
jb
xchg
testb
push
mov
int3
cmp
fs
popf
insb
test
pop
cmp
cmp
mov
js
adc
mov
mov
and
xlat
and
aad
xlat
mov
cmpsl
ret
push
les
jae
in
loopne
jmp
scas
aas
pop
test
lock
je
rorl
push
jecxz
in
sbb
inc
clc
imul
insl
fcompl
mov
movsb
addl
sub
je
push
cld
sbb
mov
les
fmull
mov
xchg
jbe
pop
lret
scas
pop
mov
mov
inc
mov
mov
lret
test
mov
and
inc
mov
xlat
ja
push
xchg
addl
popf
je
imul
out
lea
sbb
adc
pop
xor
xor
sbb
aad
cmpl
sbb
sub
jae
gs
pushf
outsl
xchg
das
and
pop
push
xchg
or
insl
sbb
test
mov
and
pusha
xchg
test
mov
sbb
fisubrl
enter
popa
dec
xlat
inc
and
push
leave
push
mov
pushf
push
mov
es
das
mov
sbb
pop
fstpt
movsl
and
inc
shll
and
pop
ja
pusha
pop
repnz
lods
and
push
out
imul
insl
int3
xchg
pushf
sti
push
fstl
cwtl
push
imul
mov
inc
mov
sbb
add
mov
dec
mov
fisubrl
ret
sub
popa
mov
mov
and
dec
fdivl
in
iret
pop
into
test
out
jno
clc
jae
xchg
dec
xlat
inc
and
cs
or
jns
ja
loope
pop
push
xor
jo
sub
pop
enter
lock
lret
out
jno
xorb
in
bound
dec
sub
pop
sbb
jno
mov
inc
mov
pop
test
inc
mov
mov
es
leave
dec
fdivrl
es
mov
xchg
adc
jmp
out
loop
je
jnp
popa
add
cmp
cmpsl
aaa
push
mov
jg
outsb
push
fisttps
flds
pop
cld
out
stc
cwtl
imul
dec
fidivrs
jge
notl
jns
mov
mov
lret
popf
in
jmp
mov
inc
mov
fisttps
mov
cmp
mov
imul
add
inc
fs
xchg
cmc
add
sub
add
test
pop
test
cli
imul
push
addr16
clc
dec
shll
cltd
lret
or
rorl
xor
mov
mov
ret
ret
pop
lret
scas
pop
mov
test
jne
mov
inc
rcll
and
imul
jns
jmp
or
js
popa
add
push
sub
cmc
jl
jne
push
dec
frstor
xor
mov
and
inc
add
mov
mov
sbb
xor
movsl
xor
loopne
adc
add
pop
cmp
cmp
fisttpll
out
mov
nop
imul
add
push
insb
cmc
gs
dec
or
push
lret
lret
cmp
add
std
or
outsl
icebp
popa
add
pop
mov
mov
mov
pusha
rcll
inc
enter
dec
sahf
dec
int
and
xor
jg
insb
or
in
cmpsb
xor
scas
inc
push
rolb
shlb
addl
cmpsb
xor
scas
inc
inc
int
and
aaa
mov
xchg
adc
xor
outsl
mov
xchg
icebp
add
idivl
mov
sahf
pop
xchg
adc
clc
je
lea
cmp
push
lds
iret
and
test
lea
and
fimuls
add
cmp
mov
inc
mov
mov
aad
andl
or
or
jb
in
fwait
add
xchg
add
sahf
and
xchg
add
sahf
aaa
rcrl
rolw
dec
sub
dec
rorl
push
jecxz
fisttpl
fstpl
pop
jb
or
inc
sub
or
dec
fdivrl
mov
addr16
sbb
das
les
push
cmp
sub
repnz
cmp
sub
outsb
cld
fwait
jbe
mov
jecxz
inc
shlb
shlb
out
gs
jnp
in
cld
pop
cmpsb
dec
fildll
xchg
pop
sub
imul
addl
cmp
jl
jge
push
imul
mov
arpl
bound
xchg
sub
lret
push
and
and
dec
push
jle
mov
cwtl
imul
cmp
xor
lock
std
test
jb
jl
negb
jmp
push
in
pop
fs
push
xor
dec
xchg
cmp
outsl
lcall
xchg
adc
or
fcomps
stos
pop
test
addr16
push
popa
out
adc
push
xchg
adc
mulb
pop
ss
ja
xchg
cmc
add
push
xchg
add
sahf
push
mov
shll
cmp
dec
xchg
sbb
mulb
pop
aad
into
test
js
ljmp
push
lea
mov
and
mov
imul
aam
dec
movsb
mov
roll
dec
jmp
aam
sub
push
jns
ds
loope
jae
mov
mov
jae
xchg
fldl
mov
cmc
mov
and
mov
dec
cld
negl
scas
pop
fcompl
push
aam
sub
loop
je
cmp
push
xor
ljmp
jl
cmpsb
daa
mov
and
sbb
xchg
adc
test
mov
and
mov
nop
mov
scas
leave
cmp
in
imul
insl
test
xchg
testb
push
mov
lds
iret
and
push
mov
shlb
enter
nop
arpl
les
out
push
les
int3
cs
jg
mov
roll
mov
mov
sbb
cmp
push
mov
jle
cmp
dec
jecxz
fisttpl
frstor
je
out
inc
cltd
push
xchg
repz
mov
or
jmp
cmpsl
sahf
loop
iret
or
jmp
cmp
mov
fsubrl
stos
cmp
dec
cld
adcl
test
xor
enter
push
mov
mov
js
cmp
les
sbb
xchg
sbb
es
cs
xor
popf
adc
inc
xlat
mov
lods
add
lock
test
jmp
dec
fldt
mov
inc
mov
xor
mov
cmp
mov
fldl
xchg
add
ss
lock
bound
decb
fs
popf
insb
lds
gs
inc
aad
fnstcw
test
cmp
fbstp
mov
dec
fdivrl
out
jo
and
xor
scas
jp
nop
push
popa
nop
jbe
jmp
in
insb
loop
je
repz
mov
test
nop
testl
shlb
shl
out
jno
add
ja
xchg
pop
bound
ret
ds
scas
and
mov
fwait
decb
inc
mov
icebp
adcl
test
test
pop
test
pop
mov
jle
arpl
inc
xlat
mov
mov
int3
imul
imul
fisttpl
push
mov
cmpsl
dec
dec
fdivl
in
es
cmp
test
aad
lea
nop
dec
fisttpl
fnsave
ljmp
jae
in
hlt
outsl
lcall
xor
and
out
imul
mov
movsl
push
xchg
add
sahf
jg
clc
outsb
or
sbb
dec
fidivrs
push
lds
fldenv
xchg
lea
popa
add
sbb
xchg
or
jle
mov
jns
das
mov
test
cli
push
or
fdivl
leave
xchg
test
sub
clc
sti
pop
xor
xchg
mov
lret
sbbb
add
cmpsb
push
hlt
push
les
int3
ljmp
jae
in
adcl
xchg
pop
bound
sahf
insl
lcall
stc
notl
fildl
mov
std
inc
fmuls
fdivs
outsb
cld
fwait
jbe
pop
lds
iret
fs
stc
mov
inc
fidivrl
sbb
push
add
pop
xor
divb
cmpl
inc
fidivrl
push
cmp
and
fimull
fidivrl
sbb
mov
roll
pop
cmp
sub
pusha
notb
jecxz
jne
xor
sub
lahf
punpckhdq
jecxz
cld
movsl
das
mov
push
mov
pop
cmp
aas
xchg
add
sub
cmp
pop
xchg
pop
bound
mov
push
jns
pusha
jecxz
in
jle
mov
fbld
repnz
test
mov
cmpsb
cmp
popa
icebp
nop
arpl
pop
rcll
push
push
test
jp
aaa
cmpsl
ret
pop
mov
jle
pop
iret
dec
ret
mov
in
sbb
or
roll
aad
xor
jns
insb
or
out
notl
jb
gs
adc
cltd
or
jnp
nop
push
popa
nop
aaa
mov
loope
push
les
sub
pop
inc
leave
pop
cmp
sub
xrelease
cltd
clc
or
mov
shll
repz
gs
lock
gs
popa
add
adc
outsl
lcall
push
lds
jle
jns
jmp
xor
aas
movsb
cmp
sbb
addl
fs
push
stos
cmp
sbb
mov
add
lahf
aad
lahf
push
shl
shrb
push
mov
imul
fistps
fs
fidivrl
or
jnp
scas
cmp
mov
aas
mov
jmp
popf
and
dec
leave
inc
shll
mov
mov
inc
mov
fcoms
jae
in
outsb
out
adc
or
xor
ret
xor
rclb
push
movsb
nop
add
mov
dec
jecxz
push
in
fmull
mov
fdivrl
jecxz
jne
das
mov
mov
mov
push
lds
in
stos
jo
jl
negb
test
pop
test
xchg
push
pushf
sti
push
mov
push
mov
jns
or
xor
and
mov
sub
ds
dec
fdivrl
sub
pop
pop
fmuls
fdivs
mov
movsl
int3
aas
fisttpll
std
stos
cs
mov
jns
push
inc
aam
dec
jmp
int
adc
dec
rclb
and
pop
iret
stos
pop
test
sub
mov
mov
fisttpll
out
mov
hlt
imul
insl
test
sti
imul
sbb
arpl
xchg
mov
cld
cs
cmpsl
inc
shll
sahf
stc
or
into
sub
mov
rorb
push
std
faddl
mov
imulb
xchg
cli
gs
pushf
outsl
fcmove
imul
xchg
mov
insb
out
jl
mulb
jbe
imul
sbb
ret
xchg
add
mov
push
xlat
inc
and
aas
daa
mov
pop
icebp
jns
mov
mov
xchg
data16
jl
idivb
add
cmpsl
das
mov
out
adc
or
push
test
imul
fimull
pop
imul
xchg
addr16
push
lds
ret
lods
pop
mov
stos
inc
mov
aad
int3
imul
mov
pop
pushf
xor
adc
mov
and
int3
inc
and
jge
testl
jl
pusha
notb
cmpsl
ret
stos
setg
or
or
call
cs
cmp
mov
loop
icebp
nop
arpl
mov
sbb
xor
xchg
pop
bound
fwait
jbe
dec
rcll
data16
or
push
ret
mov
pop
jp
jae
loopne
adc
add
or
adc
clc
inc
fisttpl
fnsave
daa
mov
dec
mov
gs
xor
pop
leave
test
lcall
loopne
in
jg
in
jg
mov
rcrb
pop
cld
jb
jle
call
sbb
pop
mov
mov
dec
fdivrs
scas
lret
push
enter
jg
pop
into
test
xor
push
ja
dec
fstpl
aam
dec
leave
rolb
inc
xchg
mov
cmpsl
ret
sbb
pop
fstpt
stos
sub
lds
mov
sbb
add
insb
loop
je
int
aad
dec
scas
sahf
sbb
mov
xchg
pop
sub
mov
test
repz
cmc
adc
pop
lret
scas
pop
mov
lock
add
pop
into
test
clc
lahf
push
or
xor
add
push
ret
cmpsb
push
nop
jnp
arpl
cmc
adc
jne
out
pop
and
es
mov
cmp
inc
xlat
mov
mov
fsubrl
pop
enter
push
lea
outsb
cld
fwait
jbe
xlat
dec
fidivrs
in
jle
mov
in
add
gs
fisttpl
addr16
dec
sbb
jle
adcl
and
imul
in
mov
inc
mov
test
jmp
lcall
daa
inc
mov
mov
lret
push
ja
loope
lahf
adc
les
cmpsb
push
mov
arpl
data16
mov
jg
arpl
lcall
dec
sub
push
mov
mov
and
pop
leave
pop
cmp
outsb
leave
pop
into
test
fdivrl
imul
adc
imul
or
mov
mov
and
push
mov
cmp
adc
and
mov
pop
stos
add
lods
cmp
inc
shlb
mov
sbb
xchg
inc
mov
cs
cmp
mov
cmp
mov
movsb
ret
xlat
dec
enter
sub
ret
mov
adcl
inc
shll
outsl
or
int3
ficoms
lods
pop
mov
dec
fistpll
fidivrs
dec
das
fidivl
jno
xchg
cmc
add
pop
int
and
cmp
xchg
fs
jo
loop
add
rcll
pop
mov
jg
push
insb
or
out
mov
mov
and
inc
mov
aas
scas
lret
call
fnstenv
test
sbbl
imul
mov
pop
lcall
shll
out
jno
or
inc
jl
rcll
mov
or
jns
cmp
mov
lods
in
icebp
nop
arpl
outsb
addb
lds
movsb
push
mov
data16
xchg
outsb
leave
orl
iret
inc
aam
dec
mov
cmp
gs
ja
loope
inc
pop
leave
adcl
mov
add
inc
sub
mov
jnp
fwait
sub
lret
icebp
nop
arpl
xchg
jns
push
test
push
neg
dec
fnstcw
add
arpl
je
lea
inc
xlat
mov
out
push
mov
jge
negl
mov
cmc
gs
push
imul
add
dec
test
mov
cs
test
mov
out
adc
or
stc
jle
sub
cmp
inc
push
adc
adc
mov
mov
push
ret
cmpsb
push
mov
test
arpl
jns
jmp
js
addr16
adc
data16
xchg
outsb
mov
js
inc
and
aaa
int3
inc
xlat
mov
mov
fs
jp
jp
sub
mov
aaa
cmpsl
aaa
push
mov
pop
scas
inc
pop
adcl
xor
adcb
xorb
dec
adc
push
add
jno
jle
call
imul
mov
call
int3
shll
arpl
adc
cmp
mov
mov
daa
addr16
adc
or
and
aaa
cmpsl
ret
dec
int
and
cmp
loope
in
sbb
nopl
xchg
pushf
sti
push
fldl
jp
roll
shll
mov
imul
and
push
or
rolb
shlb
ret
push
lds
aad
shll
pop
and
aas
mov
mov
and
es
inc
mov
mov
xchg
adc
pop
pushf
xor
adc
dec
aad
sub
bound
inc
and
jbe
sbb
mov
jle
jno
jecxz
push
repnz
xchg
jp
frstor
lcall
stc
cld
int
mov
dec
fidivrs
sub
pop
lret
push
ret
cmpsb
push
mov
push
mov
mov
sbb
pop
xor
dec
frstor
int3
aas
shll
mov
pop
aad
sub
aas
mov
inc
aad
dec
movsl
fimull
mov
jle
call
add
ss
loopne
jb
cmp
fisttpll
mov
enter
pop
rcll
xor
dec
fistpll
and
mov
xchg
cs
xlat
inc
and
jbe
push
mov
es
pop
push
xor
scas
xor
in
jge
divl
sbb
aad
mov
adc
daa
movsb
cmp
dec
push
fisttpl
fnstsw
dec
enter
sub
cli
push
aam
sub
jl
negb
pop
fimuls
pop
and
push
xchg
repz
test
jae
rcrb
test
mov
lret
pop
ds
jne
push
and
pop
roll
shll
out
push
lret
pop
into
test
mov
sbb
jecxz
mov
lret
lock
bound
shrb
std
insl
hlt
pop
mov
fisubrs
xor
xlat
dec
frstor
fwait
jbe
add
or
xor
push
lahf
push
lods
xor
xchg
add
sahf
sub
dec
fstpl
push
xor
dec
mov
pushf
sti
push
ret
call
sbb
adcl
test
stos
cmp
inc
cli
adcl
test
mov
inc
mov
sub
int3
stos
data16
jnp
mov
pop
rolb
rcrb
and
push
cwtl
push
imul
xchg
or
jne
inc
iret
push
mov
xchg
mov
jg
jbe
loopne
push
xchg
add
cmp
xchg
add
sahf
sub
cwtl
inc
out
adc
push
ret
lods
cmp
add
std
or
or
jbe
insl
std
test
pop
fisttps
flds
cmpsb
and
fwait
or
jb
xchg
add
jno
push
xchg
repz
test
inc
mov
mov
lea
xchg
lock
out
pusha
notb
shlb
or
fmuls
fdivs
push
mov
jle
jle
add
cld
xchg
cmc
add
outsb
clc
outsb
or
sbb
mov
pop
xchg
add
jns
setg
or
loope
outsl
hlt
push
cld
dec
add
xchg
push
pushf
sti
push
test
leave
jle
mov
andl
dec
fnstcw
arpl
cmc
je
add
insb
loop
je
cmpsb
sub
sub
or
rclb
mov
add
lds
iret
and
inc
es
push
mov
gs
jbe
movsb
cmp
or
xchg
add
pop
and
or
repnz
test
aaa
cmpsl
ret
hlt
jg
mov
mov
jbe
cmpl
ret
push
lds
dec
sub
enter
sti
insb
loop
je
pop
mov
js
popa
add
aaa
sbbl
or
mov
xchg
sbb
sbb
xor
jo
xorl
sbb
es
insl
pushf
sub
push
mov
sbb
rclb
adc
out
jg
jmp
cmp
sub
lock
lds
iret
and
jl
jne
fs
lea
adc
in
sbb
jo
loop
mov
shll
mov
arpl
xchg
xchg
fmul
inc
aam
dec
cmpsl
aad
into
test
in
jg
ljmp
adc
mov
repz
movsb
push
mov
adc
in
sbb
mov
mov
and
and
cwtl
add
test
jbe
cmpl
sbb
insl
icebp
popa
add
pop
call
lret
punpckhdq
std
or
jmp
xchg
gs
clc
outsb
or
jg
ljmp
inc
es
mov
stos
int
fstpl
sti
pop
fimuls
shufps
inc
scas
lods
das
mov
mov
js
pusha
push
jecxz
push
in
lock
mov
lea
fwait
decb
dec
mov
int3
aas
fnstenv
push
inc
xlat
mov
cmpsb
cwtl
sbb
xor
and
aam
sub
sbb
dec
or
lds
iret
daa
fisttpll
mov
lods
lret
inc
loope
lea
push
mov
es
mov
in
sbb
movsl
xor
xor
fisttps
fsts
sub
push
xor
jns
sbb
sahf
or
cmpsb
and
push
xor
adc
lods
dec
and
dec
add
add
xor
iret
pop
cmp
cmp
lret
pop
xlat
inc
and
cmp
sbb
insl
jmp
push
in
and
jb
push
mov
mov
or
in
std
jb
insl
hlt
pop
icebp
pop
int
and
cmp
icebp
or
jbe
cmpl
add
std
or
aam
shlb
cmpsl
ret
mov
mov
fisttpll
out
stos
aaa
cmpsl
ret
mov
mov
cli
push
push
les
fidivrl
inc
daa
shlb
ret
push
lds
cmp
scas
or
in
xchg
mov
mov
rcll
adc
sbb
and
test
mov
push
add
cltd
push
cmpsb
push
mov
inc
mov
xchg
inc
enter
add
push
shll
jmp
add
sahf
jl
rcrl
stos
xchg
sbb
sbb
xchg
jle
rcll
xor
or
lock
xor
movsl
xor
sub
repz
cmc
sbb
mov
out
and
jnp
jno
jecxz
cmp
adc
dec
fnstcw
out
mov
pop
push
xor
addr16
das
dec
mov
loopne
xchg
jmp
fidivrs
mov
and
xchg
jne
es
cs
sub
icebp
jne
mov
call
xchg
lods
sub
lock
sbb
inc
and
xor
movsl
xor
daa
scas
cmp
mov
das
cmpsl
aaa
push
mov
and
aaa
inc
int3
inc
and
lods
mov
mov
enter
and
hlt
out
in
jle
pop
leave
pop
cmp
or
add
adc
insl
std
test
push
les
int3
and
push
shll
xlat
and
push
roll
aad
sbbl
test
aad
fwait
pop
pop
jp
ds
push
mov
adc
sub
notl
push
lods
and
xor
pop
leave
test
fsubp
popa
icebp
nop
arpl
and
sbb
cli
jns
mov
or
mov
mov
nop
jle
push
xor
daa
rcrl
test
mov
push
mov
rolb
rcrb
dec
frstor
shll
les
push
xor
sub
mov
inc
mov
jmpw
jmp
imul
adc
ja
jne
out
dec
mov
repz
cwtl
push
imul
cs
rolb
shlb
mov
ja
bound
popf
in
mov
add
outsl
mull
icebp
push
xor
cmp
push
insl
mull
icebp
push
filds
mov
cmc
sub
mov
and
xchg
add
pop
sti
js
mov
int3
dec
ret
mov
scas
cmp
mov
mov
cmpsl
ret
lods
sub
pop
int3
stos
data16
jge
je
insb
xchg
and
icebp
insb
in
sbb
dec
cli
jb
xchg
pop
sahf
or
cmpsb
dec
push
jecxz
push
in
mov
rcll
pushf
xor
dec
nop
and
jb
xchg
loopne
loope
jae
roll
mov
call
inc
xchg
xlat
mov
shrl
scas
and
daa
inc
mov
ja
arpl
cmc
add
push
xor
js
push
lds
pushf
outsl
rorb
mov
iret
pop
cmp
pusha
lcall
dec
fnstcw
dec
sub
pusha
fnstcw
jp
fcomps
scas
pop
mov
adcl
fisttpll
out
xor
test
mov
lret
pop
ds
test
xchg
icebp
add
sbb
sub
xchg
in
mov
adcl
popa
icebp
nop
arpl
enter
cli
popf
insb
mov
mov
lds
stos
cmp
inc
mov
mov
and
fmuls
mov
sbb
dec
int
leave
test
mov
ds
fimuls
push
cmp
adc
fs
jo
loop
fildl
mov
call
xorl
cmp
or
add
fiaddl
mov
out
jle
mov
popa
nop
pop
cmpsl
add
std
or
aaa
mov
push
btr
mov
mov
inc
mov
push
mov
out
mov
sbb
push
imul
mov
mov
xchg
lock
out
and
and
pusha
out
jl
notb
idivl
mov
aas
mov
inc
mov
xlat
pop
enter
cmp
fmuls
mov
lock
lds
sti
out
js
mov
push
rclb
sub
xchg
mov
arpl
xchg
les
cwtl
push
imul
xchg
add
sahf
aaa
xor
and
or
push
lahf
push
adc
jp
je
out
inc
sbb
aaa
dec
call
negb
scas
pop
fcoml
inc
and
or
ljmp
add
sbb
imul
movsl
gs
pop
loop
cmp
sbb
jno
push
lret
mov
sbb
cmpsl
sub
fists
mov
fidivrl
mov
jns
mov
mov
sub
sbb
sbb
jno
xorb
or
and
sub
fmull
mov
or
cmp
jp
jp
hlt
insl
std
test
push
pusha
pop
repnz
sub
stos
xor
int
xchg
mov
hlt
add
sbb
pop
jb
cmp
jg
mov
sub
sub
dec
into
pop
cmp
xor
lea
rolb
shlb
and
ss
inc
mov
add
mov
in
std
movsb
cmp
dec
inc
lret
lret
push
ret
cmpsb
push
cwtl
push
add
dec
sub
add
inc
xlat
mov
lods
inc
leave
pop
cmp
and
gs
or
push
sbb
sbb
dec
fidivrs
add
push
in
jp
jp
xchg
pop
xchg
repnz
push
shlb
pusha
xchg
ss
adc
mov
hlt
push
cld
dec
ljmp
xchg
jb
xor
imul
push
cld
dec
adc
cwtl
or
push
xchg
repz
mov
push
shlb
lods
pop
mov
jns
mov
and
push
aad
sub
aas
pop
jecxz
push
in
push
rolb
shlb
jns
xchg
testb
out
cmp
and
mov
cmp
outsl
or
int3
pop
mov
xchg
js
ljmp
stc
jecxz
cmp
or
fistl
mov
jg
jmp
and
and
push
repnz
push
adcb
andb
je
out
add
iret
pop
cmp
aas
enter
gs
mov
push
fwait
or
sub
sub
lods
cmp
jns
mov
fadds
mov
into
test
sub
test
mov
cs
fmuls
mov
jle
insl
inc
les
int3
sub
sub
pop
jecxz
push
in
sbb
fistpl
xchg
mov
aam
int3
ja
xchg
testb
insl
int3
cmp
sub
ja
daa
mov
and
lea
xchg
lock
jmp
cli
popf
insb
mov
jns
jmp
mov
test
repnz
pop
repnz
dec
fdivrs
call
sub
lds
cli
insb
loop
je
pusha
cmc
gs
pop
stos
lods
lret
inc
scas
push
push
xor
push
dec
cmpsb
push
int3
inc
and
xor
or
test
pop
cmc
stos
xor
int
mov
mov
sbb
jno
lock
shll
push
scas
jp
aam
sub
bound
lahf
cli
or
mov
cmpsl
ret
mov
mov
adc
pop
int
addr16
pusha
notb
jmp
repz
cmc
cmp
pop
cmp
cmp
rolb
testb
sbb
pusha
mov
les
lcall
stos
into
cmp
jecxz
mov
ret
pushf
xor
inc
fisttpl
push
mov
xchg
jns
inc
aam
dec
jmp
imul
xor
or
stos
cmp
adc
leave
jle
mov
or
and
das
dec
mov
adc
data16
push
aad
sub
or
sahf
push
mov
es
scas
rclb
mov
gs
sbb
insl
test
out
jl
jne
add
jnp
xor
mov
adc
into
inc
mov
movsb
jb
xchg
testb
push
mov
int3
cmp
fs
popf
insb
test
pop
cmp
cmp
mov
js
adc
mov
mov
and
xlat
and
aad
xlat
mov
cmpsl
ret
push
les
jae
in
loopne
jmp
scas
aas
pop
test
lock
je
rorl
push
jecxz
in
sbb
inc
clc
imul
insl
fcompl
mov
movsb
addl
sub
je
push
cld
sbb
mov
les
fmull
mov
xchg
jbe
pop
lret
scas
pop
mov
mov
inc
mov
mov
lret
test
mov
and
inc
mov
xlat
ja
outsl
or
jecxz
movsl
xor
push
pushf
sti
push
lcall
out
jae
ja
loope
xor
xor
sbb
aad
cmpl
sbb
sub
jae
gs
pushf
outsl
xchg
das
and
pop
push
xchg
or
insl
sbb
test
mov
and
pusha
xchg
test
mov
sbb
fisubrl
enter
popa
dec
xlat
inc
and
push
leave
push
mov
pushf
push
mov
es
das
mov
sbb
pop
fstpt
movsl
and
inc
shll
and
pop
ja
pusha
pop
repnz
lods
and
push
out
imul
insl
int3
xchg
pushf
sti
push
fstl
cwtl
push
imul
mov
inc
mov
sbb
add
mov
dec
mov
fisubrl
ret
sub
popa
mov
mov
and
dec
fdivl
in
iret
pop
into
test
out
jno
clc
jae
xchg
dec
xlat
inc
and
cs
or
jns
ja
loope
pop
push
xor
jo
sub
pop
enter
lock
lret
out
jno
xorb
in
bound
dec
sub
pop
sbb
jno
mov
inc
mov
pop
test
inc
mov
mov
es
leave
dec
fdivrl
es
mov
xchg
adc
jmp
out
loop
je
jnp
popa
add
cmp
cmpsl
aaa
push
mov
jg
outsb
push
fisttps
flds
pop
cld
out
stc
cwtl
imul
dec
fidivrs
jge
notl
jns
mov
mov
lret
popf
in
jmp
mov
inc
mov
fisttps
mov
cmp
mov
imul
add
inc
fs
xchg
cmc
add
sub
add
test
pop
test
cli
imul
insl
fmull
xchg
add
dec
fistpll
mov
sbb
inc
loope
adc
stos
das
mov
ret
ret
pop
lret
scas
pop
mov
test
jne
mov
inc
rcll
and
imul
jns
jmp
or
js
popa
add
push
sub
cmc
jl
jne
push
dec
frstor
xor
mov
and
inc
add
mov
mov
sbb
xor
movsl
xor
loopne
adc
add
pop
cmp
cmp
fisttpll
out
mov
nop
imul
add
push
insb
cmc
gs
dec
or
push
lret
lret
cmp
add
std
or
outsl
icebp
popa
add
pop
mov
mov
mov
pusha
rcll
inc
enter
dec
sahf
dec
int
and
xor
jg
insb
or
in
cmpsb
xor
scas
inc
push
rolb
shlb
addl
cmpsb
xor
scas
inc
inc
int
and
aaa
mov
xchg
adc
xor
outsl
mov
xchg
icebp
add
idivl
mov
sahf
pop
xchg
adc
clc
je
lea
cmp
push
lds
iret
and
test
lea
and
fimuls
add
cmp
mov
inc
mov
mov
aad
andl
or
or
jb
in
fwait
add
xchg
add
sahf
and
xchg
add
sahf
aaa
rcrl
rolw
dec
sub
dec
rorl
push
jecxz
fisttpl
fstpl
pop
jb
or
inc
sub
or
dec
fdivrl
mov
addr16
sbb
das
les
push
cmp
sub
repnz
cmp
sub
outsb
cld
fwait
jbe
mov
jecxz
inc
shlb
shlb
addr16
sbb
js
insb
out
adc
sbb
dec
sub
subps
pop
and
and
mov
in
dec
fisttps
flds
cmp
pop
roll
aad
js
arpl
cmc
push
mov
in
sbb
in
in
mov
cwtl
imul
cmp
xor
lock
std
test
jb
jl
negb
jmp
push
in
pop
fs
push
xor
dec
xchg
cmp
outsl
lcall
xchg
adc
or
fcomps
stos
pop
test
addr16
push
popa
out
adc
push
xchg
adc
mulb
pop
ss
ja
xchg
cmc
add
push
xchg
add
sahf
push
mov
shll
cmp
dec
xchg
sbb
mulb
pop
aad
into
test
js
ljmp
push
lea
mov
and
mov
imul
aam
dec
movsb
mov
roll
dec
jmp
aam
sub
push
jns
ds
loope
jae
mov
mov
jae
xchg
fldl
mov
cmc
mov
and
mov
dec
cld
negl
scas
pop
fcompl
push
aam
sub
loop
je
cmp
push
xor
ljmp
jl
cmpsb
daa
mov
and
sbb
xchg
adc
test
mov
and
mov
nop
mov
scas
leave
cmp
in
imul
insl
test
xchg
testb
push
mov
lds
iret
and
push
mov
shlb
enter
nop
arpl
les
out
push
les
int3
cs
jg
mov
roll
mov
mov
sbb
cmp
push
mov
jle
cmp
dec
jecxz
fisttpl
frstor
je
out
inc
cltd
push
xchg
repz
mov
test
repnz
std
test
sbb
cmpsb
or
cmp
cmp
stos
cmp
dec
cld
adcl
test
xor
enter
push
mov
mov
js
cmp
les
sbb
xchg
sbb
es
cs
xor
popf
adc
inc
xlat
mov
lods
add
lock
test
jmp
dec
fldt
mov
inc
mov
xor
mov
cmp
mov
fldl
xchg
add
ss
lock
bound
decb
fs
popf
insb
lds
gs
inc
aad
fnstcw
test
cmp
fbstp
mov
dec
fdivrl
out
jo
and
xor
scas
jp
nop
push
popa
nop
jbe
jmp
in
insb
loop
je
repz
mov
test
nop
testl
shlb
shl
out
jno
add
ja
xchg
pop
bound
ret
ds
scas
and
mov
fwait
decb
inc
mov
icebp
adcl
test
test
pop
test
pop
mov
jle
arpl
inc
xlat
mov
mov
int3
imul
imul
fisttpl
push
mov
cmpsl
dec
dec
fdivl
in
es
cmp
test
aad
lea
nop
dec
fisttpl
fnsave
ljmp
jae
in
hlt
outsl
lcall
xor
and
out
imul
mov
movsl
push
xchg
add
sahf
jg
clc
outsb
or
sbb
dec
fidivrs
push
lds
fldenv
xchg
lea
popa
add
sbb
xchg
or
jle
mov
jns
das
mov
test
cli
push
or
fdivl
in
std
ja
xorb
in
sbb
cmp
inc
nop
add
push
ret
cmpsb
push
hlt
push
les
int3
ljmp
jae
in
adcl
xchg
pop
bound
sahf
insl
lcall
stc
notl
fildl
mov
std
inc
fmuls
fdivs
outsb
cld
fwait
jbe
pop
lds
iret
fs
stc
mov
inc
fidivrl
sbb
push
add
pop
xor
divb
cmpl
inc
fidivrl
push
cmp
and
fimull
fidivrl
sbb
mov
roll
pop
cmp
sub
pusha
notb
jecxz
jne
xor
sub
lahf
punpckhdq
jecxz
cld
movsl
das
mov
push
mov
pop
cmp
aas
xchg
add
sub
cmp
pop
xchg
pop
bound
mov
push
jns
pusha
jecxz
in
jle
mov
fbld
repnz
test
mov
cmpsb
cmp
popa
icebp
nop
arpl
pop
rcll
push
push
test
jp
aaa
cmpsl
ret
pop
mov
jle
pop
iret
dec
ret
mov
in
sbb
or
roll
aad
xor
jns
insb
or
out
notl
jb
gs
adc
cltd
or
jnp
nop
push
popa
nop
aaa
mov
loope
push
les
sub
pop
inc
leave
pop
cmp
sub
xrelease
cltd
clc
or
mov
shll
repz
gs
lock
gs
popa
add
adc
outsl
lcall
push
lds
jle
jns
jmp
xor
aas
movsb
cmp
sbb
addl
fs
push
stos
cmp
sbb
mov
sbb
pop
jb
cmp
insl
std
test
andl
addr16
push
in
aas
fistps
fs
fidivrl
or
jnp
scas
cmp
mov
aas
mov
jmp
popf
and
dec
leave
inc
shll
mov
mov
inc
mov
fcoms
jae
in
outsb
out
adc
or
xor
ret
xor
rclb
push
movsb
nop
add
mov
dec
jecxz
push
in
fmull
mov
fdivrl
jecxz
jne
das
mov
mov
mov
push
lds
in
stos
jo
jl
negb
test
pop
test
xchg
push
pushf
sti
push
mov
push
mov
jns
or
xor
and
mov
sub
ds
dec
fdivrl
sub
pop
pop
fmuls
fdivs
mov
movsl
int3
aas
fisttpll
std
stos
cs
mov
jns
push
inc
aam
dec
jmp
int
adc
dec
rclb
and
pop
iret
stos
pop
test
sub
mov
mov
fisttpll
out
mov
hlt
imul
insl
test
sti
imul
sbb
arpl
xchg
mov
cld
cs
cmpsl
inc
shll
sahf
stc
or
into
sub
mov
rorb
push
std
faddl
mov
imulb
xchg
cli
gs
pushf
outsl
fcmove
imul
xchg
mov
insb
out
jl
mulb
jbe
imul
sbb
ret
xchg
add
mov
push
xlat
inc
and
aas
daa
mov
pop
icebp
jns
mov
mov
xchg
data16
jl
idivb
add
cmpsl
das
mov
out
adc
or
int
jmpw
jmp
fmuls
mov
fidivrs
push
popa
nop
aaa
sub
push
lds
ret
lods
pop
mov
stos
inc
mov
aad
int3
imul
mov
pop
pushf
xor
adc
mov
and
int3
inc
and
jge
testl
jl
pusha
notb
cmpsl
ret
stos
setg
or
or
call
cs
cmp
mov
loop
icebp
nop
arpl
mov
sbb
xor
xchg
pop
bound
fwait
jbe
dec
rcll
data16
or
push
ret
mov
pop
jp
jae
loopne
adc
add
or
adc
clc
inc
fisttpl
fnsave
daa
mov
dec
mov
gs
xor
pop
leave
test
lcall
loopne
in
jg
in
jg
mov
rcrb
pop
cld
jb
jle
call
sbb
pop
mov
mov
dec
fdivrs
scas
lret
push
enter
jg
pop
into
test
xor
push
ja
dec
fstpl
aam
dec
leave
rolb
inc
xchg
mov
cmpsl
ret
sbb
pop
fstpt
stos
sub
lds
mov
sbb
add
insb
loop
je
int
aad
dec
scas
sahf
sbb
mov
xchg
pop
sub
mov
test
repz
cmc
adc
pop
lret
scas
pop
mov
lock
add
pop
into
test
clc
lahf
push
or
xor
add
push
ret
cmpsb
push
nop
jnp
arpl
cmc
adc
jne
out
pop
and
es
mov
cmp
inc
xlat
mov
mov
fsubrl
pop
enter
push
lea
outsb
cld
fwait
jbe
xlat
dec
fidivrs
in
jle
mov
in
sbb
fnstsw
je
add
push
les
dec
das
fimull
and
jg
insl
hlt
pop
in
mov
inc
mov
test
jmp
lcall
daa
inc
mov
mov
lret
push
ja
loope
lahf
adc
les
cmpsb
push
mov
arpl
data16
mov
jg
arpl
lcall
dec
sub
push
mov
mov
and
pop
leave
pop
cmp
outsb
leave
pop
into
test
fdivrl
imul
adc
imul
or
mov
mov
and
push
mov
cmp
adc
and
mov
pop
stos
add
lods
cmp
inc
shlb
mov
sbb
xchg
inc
mov
cs
cmp
mov
cmp
mov
movsb
ret
xlat
dec
enter
sub
ret
mov
adcl
inc
shll
outsl
or
int3
ficoms
lods
pop
mov
dec
fistpll
fidivrs
dec
das
fidivl
jno
xchg
cmc
add
pop
int
and
cmp
xchg
fs
jo
loop
add
rcll
pop
mov
jg
push
insb
or
out
mov
mov
and
inc
mov
aas
scas
lret
call
fnstenv
test
sbbl
imul
mov
pop
lcall
shll
out
jno
or
inc
jl
rcll
mov
or
jns
cmp
mov
lods
in
icebp
nop
arpl
outsb
addb
lds
movsb
push
mov
data16
xchg
outsb
leave
orl
iret
inc
aam
dec
mov
cmp
gs
ja
loope
pop
roll
shll
popf
jae
add
lods
lret
inc
loope
or
popa
icebp
nop
arpl
xchg
jns
push
test
push
neg
dec
fnstcw
add
arpl
je
lea
inc
xlat
mov
out
push
mov
jge
negl
mov
cmc
gs
push
imul
add
dec
test
mov
cs
test
mov
out
adc
or
stc
jle
sub
cmp
inc
push
adc
adc
mov
mov
push
ret
cmpsb
push
mov
test
arpl
jns
jmp
js
addr16
adc
data16
xchg
outsb
mov
js
inc
and
aaa
int3
inc
xlat
mov
mov
fs
jp
jp
sub
mov
aaa
cmpsl
aaa
push
mov
pop
scas
inc
pop
adcl
xor
adcb
xorb
dec
adc
push
add
jno
jle
call
imul
mov
call
int3
shll
arpl
adc
cmp
mov
mov
daa
addr16
adc
or
and
aaa
cmpsl
ret
dec
int
and
cmp
loope
in
sbb
nopl
xchg
pushf
sti
push
fldl
jp
roll
shll
mov
imul
and
push
or
rolb
shlb
ret
push
lds
aad
shll
pop
and
aas
mov
mov
and
es
inc
mov
mov
xchg
adc
pop
pushf
xor
adc
dec
aad
sub
bound
inc
and
jbe
sbb
mov
jle
jno
jecxz
push
repnz
pop
bnd
aas
scas
lret
test
mov
fs
popf
insb
mov
dec
fidivrs
sub
pop
lret
push
ret
cmpsb
push
mov
push
mov
mov
sbb
pop
xor
dec
frstor
int3
aas
shll
mov
pop
aad
sub
aas
mov
inc
aad
dec
movsl
fimull
mov
jle
call
add
ss
loopne
jb
cmp
fisttpll
mov
enter
pop
rcll
xor
dec
fistpll
and
mov
xchg
cs
xlat
inc
and
jbe
push
mov
es
pop
push
xor
scas
xor
in
jge
divl
sbb
aad
mov
adc
daa
movsb
cmp
dec
push
fisttpl
fnstsw
dec
enter
sub
cli
push
aam
sub
jl
negb
pop
fimuls
pop
and
push
xchg
repz
test
jae
rcrb
test
mov
lret
pop
ds
jne
push
and
pop
roll
shll
out
push
lret
pop
into
test
mov
sbb
jecxz
mov
lret
lock
bound
shrb
std
insl
hlt
pop
mov
fisubrs
xor
xlat
dec
frstor
fwait
jbe
add
or
xor
push
lahf
push
lods
xor
xchg
add
sahf
sub
dec
fstpl
push
xor
dec
mov
pushf
sti
push
ret
call
sbb
adcl
test
stos
cmp
inc
cli
adcl
test
mov
inc
mov
sub
int3
stos
data16
jnp
mov
pop
rolb
rcrb
and
push
cwtl
push
imul
xchg
or
jne
inc
iret
push
sti
push
popa
jmp
roll
lret
or
fs
call
jmp
pop
iret
pop
cmp
and
pop
and
jb
mov
popa
incl
popf
ret
fisttpll
push
xchg
lea
aaa
jnp
jmp
cmp
add
add
jmp
sbb
or
jmp
mov
movl
movw
movzbl
add
cmp
je
jmp
call
jmp
xchg
add
xor
addl
pusha
jmp
shll
add
xchg
add
fmuls
push
mov
add
add
mov
add
add
adc
add
lea
mov
sbb
call
jmp
push
jmp
and
add
add
cli
add
add
xchg
or
insl
rorb
inc
and
popa
incl
popf
ret
and
cli
cs
push
pushf
addl
pusha
jmp
cs
sub
jmp
in
add
add
jmp
mov
mov
test
jl
add
add
andl
subl
add
cmp
je
jmp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
rorl
mov
std
mov
cmp
adc
add
mov
and
mov
fcompl
push
jb
call
jmp
call
jmp
xchg
or
stos
call
jmp
call
jmp
loop
adc
xor
in
cwtl
jp
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
fistpll
add
pop
leave
test
out
aaa
loopne
rcrl
adc
add
roll
adc
xchg
and
sti
push
push
call
jmp
and
adc
mov
and
sub
jmp
dec
cli
call
jmp
and
loop
notb
sub
jmp
adc
and
mov
mov
jmp
rcrb
call
jmp
cmp
dec
mov
add
andl
inc
and
movw
movzbl
add
cmp
je
jmp
inc
lds
iret
and
popf
sbb
mov
adc
addl
pusha
jmp
pop
fmuls
fdivrs
mov
pop
xor
jmp
pop
sub
jmp
cmp
add
add
jmp
ficomps
scas
pop
mov
inc
test
and
popf
ret
mov
pushf
sti
push
lcall
inc
add
sbb
inc
and
jmp
push
call
call
jmp
xchg
sbb
mov
call
repz
mov
add
xchg
push
nop
ljmp
stos
ret
add
jmp
mov
xchg
aaa
mov
sub
and
incl
popf
ret
test
in
cli
mov
add
jmp
inc
lret
lret
push
lahf
push
lods
and
andnps
pop
sub
fiadds
add
adc
call
jmp
inc
iret
pop
cmp
ds
xchg
sbb
ret
movzbl
add
cmp
jmp
out
push
mov
call
jmp
and
imul
ds
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
mov
aaa
lcall
add
add
add
jmp
icebp
popa
icebp
nop
arpl
or
inc
push
dec
inc
dec
xor
cs
insb
add
and
rcl
inc
mov
out
rcrb
call
jmp
rolb
mov
or
sar
nop
lods
dec
bnd
dec
fsub
xchg
pop
sub
mov
jmp
sub
call
jmp
cs
lods
fidivl
pushf
addl
pusha
jmp
sub
cmp
fmuls
add
mov
xor
jmp
pusha
pop
repnz
adc
add
jmp
pop
pop
cmp
adcl
ja
lcall
lcall
or
add
imul
loop
lret
push
mov
in
stos
pop
es
leave
sti
jmp
insl
hlt
pop
hlt
je
jge
testl
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
stos
pushf
inc
loopne
mov
call
jmp
stos
xor
jp
jp
test
sub
addb
ret
movzbl
add
cmp
je
jmp
rorb
mov
inc
cmp
inc
cmc
in
call
jmp
mov
mov
mov
incl
popf
ret
hlt
pop
sub
jmp
fsubrl
call
jmp
fiaddl
mov
out
pushl
jae
pushf
addl
pusha
jmp
imulb
cwtl
imul
hlt
push
cld
jnp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
add
add
push
push
add
pop
insb
or
adcl
add
pop
sub
jmp
mov
jne
mov
inc
mov
call
jmp
xor
jge
push
push
pushf
addl
pusha
jmp
adc
add
jmp
call
jmp
scas
sub
lds
xor
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
fstps
aam
sub
daa
pop
sub
mov
jmp
and
call
jmp
pop
xchg
mov
mov
popa
incl
popf
ret
xor
in
cmp
orl
and
movw
movzbl
add
jmp
fs
jmp
fcompl
scas
pop
mov
ss
jne
adc
add
jbe
repnz
add
stos
jmp
jge
add
add
jmp
mov
lahf
cli
or
jecxz
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
icebp
jnp
mov
xor
sub
push
je
jmp
sbb
in
add
add
jmp
lods
es
cs
ret
movsl
ret
inc
and
popa
incl
popf
ret
and
add
push
dec
inc
dec
xor
cs
insb
add
nop
adc
movsl
mov
add
outsl
or
mov
jns
cmpsb
adc
add
push
jmp
call
jmp
xchg
sbb
ret
push
lds
das
out
scas
jmp
sub
jmp
addl
jmp
call
jmp
pop
iret
stos
pop
test
push
pushf
addl
pusha
jmp
out
lock
bound
mov
xchg
push
call
add
add
mov
lea
ret
jmp
jmp
xchg
ja
mov
adc
add
or
dec
push
xor
test
adc
jmp
push
lret
test
sti
pop
pusha
test
add
add
sahf
shrb
adc
outsl
ss
cmp
clc
lahf
push
jmp
add
jmp
call
jmp
dec
jecxz
push
in
insb
cli
push
push
pushf
addl
pusha
jmp
ds
jmp
jl
jns
jmp
pop
adcl
pop
sub
jmp
insb
push
call
jmp
call
jmp
cmp
sti
or
jmp
movb
movl
popa
jmp
pop
sub
jmp
jl
xlat
popa
imul
add
add
jmp
aam
fdivrl
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
mov
adc
jmp
cs
adc
or
adc
inc
and
jmp
mov
mov
xchg
or
and
addl
popf
lea
pushl
lea
jmp
push
jg
xchg
test
add
ss
add
mov
xchg
adc
sub
add
pop
mov
addl
mov
popl
jmp
cld
lcall
add
loopne
lds
push
fsubs
mov
jno
add
cmc
jmp
call
jmp
outsb
mull
icebp
dec
pop
add
nop
push
pushf
aas
xlat
jmp
mov
mov
popa
incl
popf
ret
movzbl
add
cmp
jmp
pop
call
jmp
lea
xchg
adc
cmpsl
movw
jmp
fld
add
call
jmp
dec
fnstcw
in
push
pushf
addl
pusha
jmp
pusha
mov
loope
pop
sub
jmp
dec
out
jg
jmp
ret
ds
jmp
add
pop
sub
jmp
call
jmp
mov
pushf
sti
push
ret
xlat
pop
dec
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
les
pop
into
dec
fdivrl
mov
push
pushf
addl
pusha
jmp
call
dec
scas
sahf
jmp
fsubrs
xchg
cmp
jns
mov
scas
push
call
jmp
mov
orl
add
inc
and
jmp
jbe
gs
pop
mov
mov
jmp
jno
adc
es
sbb
dec
insl
addr16
jmp
xchg
push
test
push
stc
adcl
test
adc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
outsl
push
inc
and
aaa
jns
popa
add
adc
popf
sbb
sub
jmp
stc
push
call
jmp
arpl
xchg
les
mov
popa
incl
popf
ret
pop
lea
jle
call
or
dec
push
xor
test
adc
shll
leave
push
jae
testb
add
pop
cmp
cmp
nop
into
jp
mov
popa
call
jmp
insl
loope
adc
add
adcl
ret
movzbl
add
cmp
je
jmp
jbe
outsl
or
in
pop
sub
add
pop
mov
addl
mov
popl
jmp
pop
sub
jmp
int3
repz
call
jmp
outsl
loope
adc
or
clc
call
add
add
mov
lea
ret
addl
jmp
jl
cmpl
cmpl
add
popa
jmp
popf
lea
jmp
pop
call
jmp
in
lcall
addl
jmp
dec
call
jmp
dec
fisttpll
out
jb
jl
sub
pop
mov
mov
dec
stc
ljmp
add
add
jmp
mov
mov
or
jge
in
dec
adc
add
pusha
jne
testb
jmp
jno
jbe
loopne
dec
ret
and
fs
jmp
call
jmp
xchg
pop
xchg
repnz
mov
add
call
jmp
imul
icebp
popa
add
sbb
mov
inc
mov
jae
sub
and
jmp
lahf
add
push
inc
xchg
or
jmp
and
push
inc
jmp
int3
inc
and
and
xchg
pushf
cmp
sbb
inc
and
or
jno
jecxz
xor
pop
in
sbb
btcl
jmp
mov
test
fstl
inc
and
cmp
daa
es
mov
loope
adcl
test
sub
push
mov
add
fdivs
push
call
jmp
adc
cmp
js
mov
scas
cs
mov
lea
jmp
out
outsl
lcall
notb
test
jmp
and
pop
cmp
nop
sbb
stos
cmp
inc
push
fisttps
fldpi
sbb
jmp
lock
jne
insl
pop
fisttpl
adc
inc
rolb
dec
and
jmp
push
mov
and
adc
xchg
add
sahf
jl
fisttps
push
out
js
mov
in
jne
mov
jnp
jbe
loopne
stos
xor
sbb
mov
rorb
push
std
cmpsl
cmp
ret
push
lds
inc
aam
sbb
push
movsb
cmp
sub
movsb
or
xor
mov
leave
jmp
shll
mov
es
call
xchg
push
jmp
jnp
jmp
notl
push
insl
std
test
outsl
out
jmp
aas
pop
test
aaa
ret
insl
std
test
xchg
dec
or
int3
int3
call
jmp
jno
xorb
jle
mov
repz
lds
ret
or
add
repz
add
jmp
ret
push
lds
rclb
push
mov
gs
leave
pop
iret
stos
pop
shlb
xor
popa
xchg
xchg
adc
mov
mov
and
sbb
mov
or
lock
bound
out
pop
mov
mov
adcl
mull
icebp
push
sbb
adc
or
jmp
ds
jp
dec
sub
pop
jl
dec
adc
bound
sbb
xchg
inc
mov
sahf
stc
or
flds
aas
mov
adc
add
jnp
pop
int3
stos
data16
cld
pop
lret
inc
xlat
mov
lods
in
gs
pushf
outsl
lret
inc
and
adc
or
jecxz
jecxz
jne
fsts
mov
ja
loope
ds
inc
mov
stos
push
add
dec
mov
sbb
cs
dec
fimull
ficompl
outsl
ljmp
sbb
decl
or
dec
fidivrs
xchg
cmc
add
xlat
push
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
push
lcall
adc
sbb
and
sub
dec
mov
jmp
pop
mov
xchg
add
stos
xchg
popa
push
call
mov
ss
jmp
add
out
sbb
out
popa
icebp
nop
arpl
in
pop
sbb
fs
gs
or
call
jmp
sub
movsb
cmp
or
push
mov
push
imul
jmp
mov
test
push
mov
mov
loope
cmpsb
xor
sbb
add
lea
lcall
xlat
mov
clc
xchg
or
push
add
fisubrs
enter
dec
js
dec
sub
pop
xchg
std
or
pusha
loope
adc
pop
pop
stos
das
rclb
call
add
mov
inc
mov
je
dec
call
jmp
push
xchg
repz
cmpsl
jmp
iret
adc
bound
xchg
testb
fs
jmp
lods
or
push
sti
imul
jl
jl
jne
push
or
sbb
outsl
mov
stos
int
fnsave
mov
dec
mov
sub
xor
setg
or
sbb
pop
mov
pushf
xor
dec
repz
mov
mov
lods
lret
inc
loope
mov
sbb
test
les
mov
repnz
xchg
dec
sub
xor
ror
arpl
xchg
mov
adc
adc
push
les
pushf
sti
push
push
jmp
push
xor
sbb
xchg
jl
and
push
lret
sti
mov
xchg
sbb
stos
xor
test
jge
and
shrl
inc
aad
dec
in
mov
jmp
movb
in
jg
sbb
push
cmc
gs
jp
jne
mov
cwtl
push
add
imul
xchg
insl
std
test
popf
sbb
aad
movb
cmpsl
and
stos
call
jmp
pop
mov
mov
inc
mov
mov
mov
xchg
add
sahf
pop
push
adcb
andb
call
jmp
jp
jp
fnstcw
mov
lods
push
pushf
sti
push
xchg
std
jge
je
push
popa
loop
lea
jmp
fcomps
stos
pop
test
xchg
cmc
add
enter
push
mov
push
jno
int3
test
mov
jl
popa
add
adc
arpl
cmc
sbb
call
jmp
xchg
pop
bound
push
mov
psubd
fimuls
xor
and
jmp
out
sbb
adc
or
xchg
jb
movw
mov
add
hlt
ja
xorb
sub
cltd
or
idivl
je
jmp
imul
push
mov
lods
mov
cmpsl
clc
xchg
mov
push
xchg
inc
daa
call
jmp
mov
ljmp
inc
and
jns
xchg
add
sahf
push
idivb
lea
jmp
pop
repnz
jae
xchg
cmc
add
pop
rolb
sarb
pop
xlat
inc
and
sub
add
mov
inc
mov
test
in
sbb
scas
lods
lret
inc
test
push
loop
popa
add
sbb
pop
lret
scas
pop
mov
test
push
pop
aad
mov
call
stc
ret
call
jmp
je
dec
leave
pop
cmp
das
int
ret
cmpsb
push
mov
test
dec
enter
add
add
into
pop
cmp
cmp
data16
add
push
call
popf
call
pop
call
call
inc
imul
incb
add
push
call
pop
call
pusha
dec
call
call
jmp
mov
inc
mov
mov
cwtl
pop
test
sti
imul
inc
push
int
lea
jmp
push
std
dec
ja
jns
jmp
out
jno
xorb
mov
inc
mov
cmp
sbb
pop
fcomps
scas
pop
mov
arpl
xchg
gs
js
mov
inc
lret
pop
ds
sbb
xchg
icebp
jbe
cmpl
pop
int3
stos
data16
or
out
sbb
sbb
add
sub
inc
mov
xchg
jb
popa
sbb
loope
sbb
add
and
fmuls
fsubrs
repz
cmc
sbb
nop
push
popa
nop
call
jmp
shll
pop
iret
pop
cmp
xor
xchg
jne
jbe
cmpl
sub
xor
inc
mov
call
inc
sub
pop
add
or
test
add
jmp
pop
leave
test
mov
lcall
cmpsl
ret
orb
sti
push
clc
jnp
lea
jmp
mull
icebp
or
cwtl
push
imul
jmp
dec
mov
scas
pop
mov
mov
scas
cmp
inc
aad
dec
jmp
or
mov
dec
inc
and
popa
rcrb
iretw
xlat
dec
fidivrs
xchg
jmp
sub
jecxz
push
in
pop
xchg
pop
bound
negb
add
sbb
push
int3
inc
and
sbb
cmp
add
lea
jmp
or
sub
cmp
or
jb
cli
push
jmp
xchg
lods
sub
adc
les
int3
and
dec
jmp
and
cmc
gs
lea
std
or
test
cwtl
decl
out
sbb
sbb
xchg
cltd
clc
or
adcl
adc
xchg
jmp
adc
ss
mov
iret
cmp
in
loopne
jb
fimull
mov
add
jmp
sub
dec
aad
sub
imul
pop
ljmp
push
scas
aaa
cmpsl
ret
cmp
xor
push
inc
fimull
fidivl
pop
leave
test
out
cmc
pop
jmp
push
test
push
cltd
lods
sub
adc
js
cmp
mov
jmp
xlat
inc
and
cmp
int
add
adc
popa
std
mov
call
movsl
nop
je
mov
call
dec
loop
cmpsb
call
jmp
mov
inc
mov
cmp
xor
jl
pop
rolb
rcrb
cwtl
pop
xchg
stos
decl
out
jl
popa
add
adc
std
adc
jmp
mov
mov
sbb
pop
lea
js
mov
adc
push
loopne
adc
or
test
jge
fs
roll
shll
fsubr
xchg
jmp
pop
int3
stos
data16
pop
mov
in
aas
mov
inc
rcll
and
jmp
mov
push
rolb
sarb
enter
push
mov
pop
enter
movsl
jmp
shll
leave
cmp
movsl
cs
insl
std
test
test
in
jmp
scas
aas
pop
test
mov
fdivrs
mov
data16
push
jmp
adc
add
or
cmpsl
adcl
dec
fmuls
fdivrs
pop
jmp
adc
add
fwait
or
jae
mov
jns
das
xchg
or
in
in
push
les
add
jmp
push
iret
pop
cmp
push
add
inc
mov
insb
lock
pop
aas
mov
jne
inc
sub
pop
les
pushf
outsl
ljmp
jbe
jmp
std
sbb
gs
hlt
xchg
outsb
mov
pop
cmp
aas
sbb
sbb
push
lds
xchg
jp
cmpsb
xor
scas
dec
into
dec
fstpt
hlt
ret
jmp
gs
bound
dec
adc
add
sub
cmp
rolb
add
jno
jecxz
jb
ja
loope
sbb
mov
xorl
insl
or
std
push
lahf
push
add
push
lea
jmp
inc
fisttpll
out
jge
je
out
pop
and
ljmp
rolb
sarb
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
call
pop
pop
aam
push
call
lret
push
add
les
xor
add
mov
call
push
push
call
mov
pop
call
ret
call
jmp
pop
leave
test
insl
jmp
push
in
and
cwtl
push
imul
leave
pop
lea
jmp
popa
in
bound
jae
in
std
outsb
cld
fwait
jbe
dec
fimull
fidivrl
mov
jmp
inc
shlb
mov
scas
lret
push
xlat
inc
and
cmp
add
push
cmp
in
push
lahf
push
push
inc
and
ds
test
mov
lahf
cli
or
cmp
pop
jp
mov
jmp
imul
insl
in
or
mov
cltd
clc
or
sahf
and
aas
scas
lea
jmp
repz
in
inc
ret
ret
mull
icebp
pop
xchg
adc
jmp
mov
xchg
repz
in
ja
lahf
outsl
out
call
jmp
pop
lods
mov
mov
adc
push
lds
inc
mov
adc
jl
arpl
push
call
jmp
sbb
mov
daa
mov
lret
mov
nop
testl
or
xlat
jmp
lcall
mov
or
mov
or
jecxz
jecxz
jne
sub
pushl
call
pop
pushl
call
add
call
stos
lcall
add
push
add
ja
pop
cmp
cmp
pop
bound
ds
ret
repnz
sbb
add
pop
pop
add
aad
jmp
nop
arpl
arpl
insb
or
mov
push
lahf
push
pusha
je
mov
jmp
rcll
sub
hlt
pop
mov
jg
sub
xlat
and
popa
icebp
lea
jmp
add
pop
sbbl
lea
and
je
out
pop
es
adc
adc
mov
lods
sub
dec
frstor
int3
aas
jmp
mov
sbb
or
lods
cmp
or
mov
jmp
xlat
mov
mov
mov
mov
push
call
push
call
pop
andl
xor
inc
call
jns
test
add
add
scas
addl
adc
cmpl
jne
pushl
call
pop
mov
mov
test
je
pushl
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
call
call
pop
push
call
call
pop
movl
call
cmpl
jne
call
subb
pushf
push
add
pop
pushl
call
xor
inc
call
insl
mov
pop
aad
call
ret
call
jmp
cmc
pop
xchg
mov
sbb
call
rclb
mov
lret
pop
add
jmp
data16
xchg
outsb
mov
xor
inc
inc
into
pop
cmp
aas
sbb
sbb
sbb
fs
jmp
pop
test
inc
and
sbb
fdivrl
cli
jmp
xchg
out
jp
jp
push
adc
and
call
jmp
push
les
ljmp
inc
mov
inc
lret
lret
pop
lea
jmp
addr16
jnp
push
lds
mov
push
popa
nop
gs
sbb
xchg
cmc
add
adc
arpl
jo
pushf
xor
jmp
sbb
mov
inc
mov
pop
mov
add
pop
rcll
jmp
sub
push
shll
add
pop
mov
repz
sbb
adc
mov
aam
icebp
dec
into
pop
cmp
xor
pop
cmp
push
jmp
or
jns
or
pushf
xor
inc
dec
int3
inc
and
repz
mov
jge
je
stos
daa
mov
and
in
add
add
jge
push
jmp
and
inc
add
jg
push
pmulhuw
notl
insl
std
insl
hlt
pop
jmp
and
inc
add
mov
and
gs
popa
add
adc
and
inc
add
adc
adcl
es
fists
pop
cmp
jg
jmp
jmp
dec
frstor
cltd
push
cmpl
out
adc
mov
jmp
push
in
pushf
lods
lret
inc
roll
and
addb
jmp
out
setg
or
push
aam
sub
lcall
cs
mov
jmp
xor
adc
push
les
mov
aam
dec
jmp
jmp
subb
ds
test
cmp
mov
shll
sub
out
add
std
or
dec
jecxz
push
in
fimuls
mov
pop
jp
push
jge
jne
add
add
cmpl
pop
xchg
adc
je
ja
loope
sbbb
jmp
or
add
and
out
jne
mov
mov
xor
or
add
outsb
std
incl
shlb
mov
inc
loopne
adc
addr16
cmp
ret
inc
shll
cmp
movsl
xor
cmc
call
jmp
and
mov
xchg
jl
in
bound
pop
cmp
jo
pop
int3
lea
jmp
push
movsb
adc
movsl
xor
sbb
aad
fwait
movsb
cmp
jmp
mov
mov
lock
jmp
notl
pop
fwait
or
jae
dec
ret
mov
das
mov
dec
lea
jmp
roll
dec
cmpsb
test
xchg
adc
dec
fstpt
jmp
mov
loop
out
mov
push
lret
lret
mull
icebp
inc
xor
sbb
pop
ret
ret
fisttpl
dec
sub
pusha
add
xor
mov
fstps
scas
pop
mov
bound
inc
mov
movsb
dec
cmp
mov
cmpsb
shll
mov
in
std
daa
mov
inc
mov
jmp
ljmp
jmp
fsubrs
pop
loop
in
clc
jmp
leave
test
mov
sahf
or
cmpsb
push
std
mov
and
jmp
xchg
add
push
pop
leave
pop
cmp
sub
insl
std
test
scas
cmp
stos
cmp
dec
xor
sahf
or
movsb
ret
ds
or
fs
psubd
mov
inc
mov
in
ja
xorb
push
les
out
jo
sbb
mov
mov
sahf
stc
or
addb
lock
fcomps
test
nop
mov
jmp
stos
cmp
inc
pop
fimuls
push
jb
fs
adc
gs
adc
jmp
cmp
push
lds
push
xor
or
fs
popf
insb
andb
sbb
les
adc
dec
adc
adc
xchg
or
add
in
sbb
out
jo
cltd
push
pushf
sti
push
cld
cmp
ja
jo
loop
cs
dec
mov
sbb
pop
jmp
loope
jae
sbb
add
inc
cmp
xor
or
arpl
cmc
inc
movsb
cmp
and
pop
push
cmp
dec
sbb
lock
xchg
jl
insl
hlt
pop
jecxz
jmp
or
mov
and
jg
jae
push
cld
sbb
jno
xorb
sbb
dec
mov
adc
dec
adc
inc
fstpl
scas
pop
nop
clc
ja
jmp
and
mov
pop
scas
dec
out
popa
icebp
nop
arpl
jo
bt
push
movsl
dec
stc
push
lahf
push
dec
jmp
call
xlat
inc
aad
dec
ljmp
in
jns
mov
mov
and
jmp
fwait
push
pushf
sti
push
mov
jle
mov
and
imul
and
xchg
rcll
cmpsb
push
cli
aam
fnstcw
or
jmp
call
ret
notl
mov
mov
sbb
mov
add
scas
lret
add
js
mov
cwtl
sbb
inc
jmp
adc
js
mov
sub
push
sub
outsb
cld
fwait
jbe
adc
adc
inc
jmp
aam
sub
xchg
cld
pmulhuw
push
mov
fstpt
sbb
repz
add
stc
add
sbb
imul
hlt
xchg
outsb
xchg
mov
fsubl
mov
inc
mov
inc
rolb
shlb
pop
repnz
fs
sub
repz
cmc
sbb
dec
sub
xor
dec
fdivrl
sbb
jmp
je
lea
fs
popf
insb
in
je
cmp
mov
inc
mov
xchg
jmp
out
movsb
sub
push
adc
fistpl
xlat
inc
and
push
jmp
scas
add
fildl
in
icebp
ja
xorb
movsb
ret
fcoml
nop
push
jmp
scas
add
pop
jb
outsl
inc
rclb
cs
lods
inc
into
pop
cmp
xor
call
jmp
scas
add
bound
lret
xor
push
fucomi
cmp
add
das
push
fdivl
in
pop
leave
pop
cmp
and
cli
or
out
mov
or
inc
inc
and
xor
nop
in
mov
leave
jmp
ljmp
pop
call
aad
pop
leave
test
out
lret
cltd
push
call
out
scas
add
call
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
call
jmp
sahf
push
and
xor
mov
lods
lret
inc
movsb
or
jp
jp
pop
fs
addr16
cmc
call
jmp
out
adc
imul
daa
rolb
mov
jle
lea
jmp
inc
mov
sub
adc
sbb
jmp
xor
out
loop
je
push
fdivl
in
scas
and
loop
xchg
testb
adc
outsl
loope
adc
or
pop
jp
arpl
rol
int3
int3
int3
call
jmp
jo
xorl
cmp
inc
jecxz
push
in
sub
sub
add
test
add
imull
add
xchg
cmc
add
jo
arpl
cmc
inc
fstpt
mov
dec
in
jge
divl
in
popa
call
shrb
mov
inc
mov
iret
dec
fidivrs
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
call
lea
push
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
call
call
jmp
inc
shll
pop
cmp
jle
lods
cmp
mulb
jns
setg
dec
psubd
dec
enter
je,pn
push
cld
sbb
cmp
sub
repz
out
adc
orl
repz
cmpl
push
shll
add
std
mov
shll
mov
clc
jne
jmp
lahf
pop
aad
sub
xor
rclb
xor
adc
jmp
mov
pusha
sti
imul
pop
mov
fidivrl
lcall
add
out
add
add
ja
xorb
sub
arpl
xchg
gs
sbb
cmpsb
push
aam
int
and
push
mov
in
rorb
cmp
jmp
std
insl
hlt
pop
in
pop
enter
jne
popa
add
sbb
jb
in
pop
fisttpll
jmp
mov
or
sub
xchg
add
pop
xchg
jmp
aad
lret
or
cmpsb
inc
rcrb
xchg
addr16
pop
int
mov
push
xor
push
jmp
pop
cmp
aas
sub
inc
inc
and
jns
or
inc
jmp
mov
ret
sub
mov
inc
mov
push
lret
pop
ds
fldl
mov
in
jmp
cltd
pop
xchg
repnz
out
push
push
push
cld
push
rclb
cmpsb
push
jmp
lea
and
jae
inc
and
pop
mov
xchg
adc
shr
inc
aad
dec
stos
scas
sub
jns
outsb
or
sbb
inc
aam
dec
cmpsl
inc
jmp
ds
dec
roll
aad
je
addr16
push
mov
nop
testl
adc
push
jmp
adc
ljmp
xor
in
imul
sbb
por
adc
mov
gs
pusha
and
sub
xor
arpl
cmc
push
sar
adc
pop
or
hlt
xchg
outsb
mov
jl
negb
lret
lret
enter
jmp
or
iret
cmp
fwait
add
adc
in
sbb
call
rcrb
pushl
jmp
or
or
mov
aam
dec
stc
xchg
xor
out
sbb
dec
int3
xchg
push
test
push
lret
push
popa
nop
jbe
pushf
xor
inc
fistpl
scas
pop
pushl
jmp
add
xchg
add
jge
pop
lret
scas
pop
mov
push
xchg
jmp
dec
sub
inc
pusha
call
jne
mov
jecxz
sar
jmp
lret
leave
push
mov
mov
es
or
and
mov
mov
in
sbb
mov
aad
incl
push
cmc
call
in
jne
repz
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
call
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
jmp
lret
lret
jae
xchg
pop
rclb
jg
mov
in
jb
lea
jmp
mov
xchg
pushf
lods
lret
inc
shll
xor
dec
dec
leave
pop
cmp
sbb
push
mov
jb
mov
push
call
pusha
push
call
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
call
cli
jl
call
pop
mov
test
je
cmpl
jne
push
call
add
call
in
out
pop
ret
call
jmp
cmc
gs
sbb
js
jb
sub
jmp
and
ja
xorb
xchg
add
jnp
inc
and
ss
pusha
testb
shrl
push
shlb
xchg
outsb
adc
sub
jmp
mov
jp
in
pop
out
jno
xorb
lods
lret
inc
icebp
movsl
add
sbb
dec
adc
bound
test
idivb
mov
push
js
ljmp
jmp
mov
dec
roll
aad
cmpsb
and
nop
push
popa
nop
jns
jmp
and
ret
dec
fnstcw
mov
adc
fstpt
cmp
call
fstps
shlb
js
add
cltd
js
add
push
lret
mov
adc
and
cmp
dec
inc
ret
dec
sub
dec
fdivrs
je
out
add
nop
jne
int
jmp
setg
or
cli
dec
call
aad
fisttpl
mov
pushf
outsl
ljmp
adc
jmp
stc
cwtl
imul
lret
ljmp
insl
pushf
jl
pop
xchg
adc
adc
orl
xchg
sbb
pop
int
mov
fwait
or
sbb
push
enter
bound
stos
int
aam
jmp
add
add
icebp
pop
adc
dec
in
jns
mov
rorb
mov
dec
das
fidivl
icebp
fs
popf
insb
lret
imulb
je
jb
jg
jmp
jmp
pop
test
aad
fwait
test
movsb
ret
ds
mov
and
sahf
stc
or
sbb
sbb
inc
shlb
xorb
sub
and
sbb
inc
and
xor
inc
fidivrl
sub
adc
pop
enter
ja
add
xchg
popa
lea
mov
roll
rcrl
data16
add
sbb
lock
bound
in
call
jmp
movsb
ret
ds
lock
bound
fidivrs
cmp
sub
add
leave
dec
cs
imul
push
std
jae
xchg
in
jl
jne
inc
jmp
call
notb
jl
negb
fwait
push
pushf
sti
push
mov
stos
cmp
jmp
push
jecxz
mov
push
roll
aad
outsl
mull
icebp
push
jae
jmp
inc
jmp
in
jg
imull
lahf
push
mov
mov
mov
ss
jno
jmp
inc
aam
dec
stc
push
lcall
stos
int
mov
ret
loopne
fs
jmp
shll
int
fdivrl
add
jae
cld
xchg
cmc
add
mov
sbb
xor
add
jecxz
cmc
pushf
outsl
andl
mov
xchg
icebp
add
sbb
add
inc
int3
inc
and
xchg
lock
insl
loop
test
jmp
add
scas
aas
pop
test
aad
int3
and
dec
fstpt
and
jmp
dec
ret
jecxz
sbb
lock
aad
pop
xchg
repnz
fs
jmp
scas
sub
lds
push
roll
shll
sbb
mov
jmp
dec
ret
mov
negb
call
and
mov
inc
mov
dec
aad
lea
jmp
add
pop
inc
fimuls
pop
pop
pop
jp
cmp
or
test
xchg
setg
or
adc
sub
cmpsb
and
loop
mov
call
pop
ljmp
negb
or
pushf
call
jmp
pop
stos
dec
rolb
sarb
arpl
xchg
fdivrl
pop
loop
sbb
adc
jne
jo
call
jmp
ljmp
jnp
in
and
push
xor
and
mov
xchg
jb
dec
fisttps
cmp
sub
and
push
cmp
pop
jmp
adcb
loopne
shrb
mov
loopne
jne
ja
loope
inc
xlat
inc
and
js
mov
jmp
leave
pop
cmp
outsb
mov
std
or
mov
aad
lahf
punpckhdq
lea
jmp
in
jge
testl
test
add
sbb
loopne
lods
inc
shll
mov
xor
fisttpl
fucomp
sbb
test
mov
cltd
or
das
js
jbe
loopne
daa
mov
sbb
test
mov
sbb
xor
mov
sub
sbb
arpl
cmc
je
adc
adc
xchg
add
push
jmp
rolb
cmpsl
push
mov
pop
mov
push
loopne
lods
cmp
add
ret
roll
aad
dec
les
int3
pop
pushf
sbb
call
jmp
mov
mov
jno
xchg
cmc
add
scas
inc
shll
add
sub
fimuls
mov
stc
cwtl
imul
in
adcl
add
jmp
xor
mov
mov
mov
jb
in
push
mov
in
sbb
sub
mov
mov
xchg
pop
repnz
rcll
inc
es
clc
jmp
add
jl
dec
sub
popa
push
pop
cmp
push
mov
lahf
cli
or
aam
vpsubusb
int3
sub
cmp
push
mov
jns
popa
push
xlat
inc
and
aas
sbb
sub
jmp
xchg
jb
insl
test
loop
clc
lahf
push
aad
repnz
mov
cwtl
push
lea
jmp
mov
ja
xorb
popa
icebp
nop
arpl
fsubrs
push
mulb
decl
dec
sub
cmp
push
sbb
outsb
or
adc
jnp
mov
cmp
xor
scas
pop
add
outsl
cmc
gs
jmp
and
sbb
cmp
push
mov
adc
jne
call
addr16
call
jmp
int
and
push
push
xchg
cmc
add
pop
int3
inc
and
xor
dec
adcb
jmp
mov
xchg
js
jbe
loopne
imul
xor
sbb
js
jne
out
pop
icebp
jae
xchg
outsl
repnz
pop
repnz
movsb
push
xchg
repz
jmp
xor
imul
sbb
and
mov
dec
mov
mov
push
cld
push
mov
bound
test
jmp
movsl
xor
push
mov
shlb
cmpl
and
add
sgdtl
add
xchg
jb
jp
mov
inc
mov
mov
mov
and
push
dec
sub
or
das
mov
notl
data16
xchg
cmc
add
sbb
pop
ljmp
lds
fstpt
je
out
inc
cld
popa
icebp
push
jmp
lds
add
pop
add
xchg
cmp
xchg
mov
cmc
jmp
les
add
pop
jp
jno
cmp
inc
aad
dec
scas
lea
cltd
clc
or
loop
add
jmp
cli
jle
mov
movsb
push
mov
lret
add
or
lret
lret
lods
lret
inc
mov
cmp
out
test
lahf
cli
or
in
in
jle
inc
roll
shll
pushf
xor
jmp
jns
mov
ret
lods
pop
mov
jecxz
sbb
push
jns
pusha
xor
scas
cmp
inc
shll
and
sbb
les
jmp
lahf
add
pop
enter
add
add
and
sahf
sbb
inc
xlat
jmp
enter
daa
rolb
rcll
cmpsl
push
mov
mov
js
push
and
lea
jmp
pop
cmc
aam
mov
cwtl
decl
jecxz
add
sub
inc
add
inc
int3
inc
and
movsb
ret
shrb
jnp
in
setge
sub
sub
inc
add
push
out
pushl
xchg
lea
jne
je
out
sbb
cmpl
jmp
add
imul
insl
sbb
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
lea
inc
push
add
call
pop
mov
push
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
call
xor
into
das
add
out
shlb
pop
push
add
call
je
push
call
pop
call
xor
inc
cld
call
jmp
call
mov
cmp
jne
call
in
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
call
jmp
out
inc
xchg
adc
popf
or
sarl
sahf
test
jmp
or
leave
inc
fidivrl
es
mov
adc
adc
ja
xorb
fs
popf
insb
scas
add
lcall
jmp
cmp
mov
lods
std
push
xchg
or
xchg
mov
and
lea
jmp
dec
mov
inc
mov
jge
jo
loop
pop
les
int3
gs
sbb
rolb
pop
icebp
push
shlb
jns
pop
mov
jmp
in
rolb
int
rolb
shlb
out
notl
jns
jmp
inc
lret
pop
mov
jmp
mov
sub
fsts
cmpsl
push
cmc
cmp
out
sbb
ret
cmpsb
push
mov
popa
icebp
nop
arpl
sub
mov
shlb
inc
add
inc
and
sub
addb
and
sbb
sbb
rolb
in
cmc
notl
lret
pop
int3
stos
shrw
fmull
add
adc
jb
pop
int
fisubl
outsb
or
push
js
jne
out
jmp
adc
inc
shlb
ret
cmpsb
push
aam
xor
xchg
push
jmp
or
in
repnz
xor
scas
dec
lods
xor
aam
sub
sbb
out
jno
cmp
push
lds
in
cld
fwait
jbe
lods
es
cs
jmp
mov
orb
cli
or
push
fdivl
in
cwtl
adc
pushf
adc
daa
mov
and
xchg
add
pop
mov
gs
popa
mov
jnp
lock
sub
push
les
fwait
decb
dec
mov
fsubrs
jmp
imul
aas
pop
test
sti
push
test
sbb
ret
push
lds
cmp
add
mov
and
add
je
adc
icebp
xchg
adc
push
les
xor
jmp
adc
das
mov
ja
xorb
xor
int
aad
iret
pop
add
jmp
adc
pusha
movl
hlt
adcl
test
dec
fnstcw
sbb
ret
stos
and
imul
adc
sbb
push
cld
adc
rcll
imul
jmp
mov
mov
mov
and
lods
cmp
lret
sbb
xor
aaa
push
mov
mov
mov
push
xor
js
push
mov
jmp
loopne
inc
add
mov
bound
xchg
testb
push
std
sbbl
jmp
jmp
loopne
inc
add
pop
fldcw
jns
jmp
cmp
sub
cmp
inc
add
adc
push
bound
mov
mov
stos
jmp
les
fcoml
lcall
adc
mov
fs
bound
test
push
push
jmp
dec
rcrl
xchg
cmpsb
xor
scas
inc
out
popa
icebp
nop
arpl
call
jmp
movsb
ret
xlat
inc
lret
lret
xor
push
xchg
repz
sti
test
mov
sub
add
cmpsb
xor
scas
dec
pop
enter
and
cltd
or
jno
jmp
scas
pop
cld
push
into
pop
cmp
daa
push
roll
aad
enter
push
stc
mov
xchg
adc
sbb
mov
and
jnp
aas
mov
mov
and
aad
jmp
pushf
xor
and
mov
sbb
inc
mov
pushf
sti
push
not
jmp
xor
and
test
jge
bound
enter
push
jmp
mov
inc
mov
cmp
imul
cmp
dec
fistpl
stos
pop
mov
jg
lea
jmp
mov
sahf
stc
or
push
rolb
sarb
aas
mov
cmp
sbb
sub
ret
push
jno
bound
inc
and
jbe
movsb
ret
ds
lret
lret
lret
pop
ds
inc
leave
pop
cmp
sub
aam
iret
mov
jmp
movsb
cmp
inc
xor
adc
cltd
or
jmp
add
sbb
negb
push
shlb
sbb
dec
and
sub
push
jmp
push
popa
nop
cmp
in
je
lea
out
adc
inc
imul
jmp
dec
sbbb
and
mov
repnz
or
in
xchg
jecxz
mov
popf
mov
jmp
dec
fnstsw
daa
jle
insl
hlt
pop
out
popf
cmp
sbb
clc
jmp
sub
jne
mov
cld
jl
jne
gs
sbb
fmuls
fs
jmp
bnd
cmpl
outsb
cld
fwait
jbe
je
lea
jmp
mov
rorl
dec
pushf
xor
pop
into
test
cmp
jmp
imul
insl
adcb
xor
push
test
roll
movsl
cmp
cmpsb
xor
scas
insl
xchg
xchg
adc
or
jo
push
xor
es
jmp
jp
clc
lock
bound
xchg
and
mov
jns
and
jge
je
push
jmp
push
popa
nop
cmp
jns
mov
sbb
test
jge
cmp
mov
into
jae
xchg
adc
popa
loop
pop
loop
or
aaa
mov
jmp
adc
out
jg
jmp
xchg
jae
jg
mov
movsl
and
adc
ljmp
fstpt
push
ret
cmpsb
push
cwtl
inc
enter
es
push
in
adc
pop
inc
add
cs
mov
adc
adc
xchg
cmc
add
cld
jmp
inc
add
stos
rcrw
and
push
jp
bound
xor
mov
jmp
or
inc
mov
or
xchg
adc
roll
sbb
jg
je
out
push
inc
fisttpll
out
sub
sbb
mov
jmp
adc
stos
int
mov
ss
ljmp
pop
cmp
jmp
adc
loope
icebp
pop
jecxz
push
in
mov
movsl
int3
aas
aam
in
jge
notl
rclb
loopne
inc
add
mov
gs
jbe
push
ret
cmpsb
push
hlt
sub
jmp
inc
add
xchg
sbb
sub
mov
shll
rolb
jmp
pop
inc
sub
sub
dec
adc
inc
das
mov
jnp
arpl
sbb
inc
aam
sub
inc
and
frstor
mov
rcll
pop
lock
adc
inc
xchg
mov
es
push
push
inc
fimull
sbb
mov
sbb
or
jg
jae
in
negb
scas
pop
fcoml
lock
lock
popf
in
hlt
and
jg
outsl
or
out
xchg
jmp
lock
testb
test
mov
xchg
je
movsb
ret
mov
jmp
add
test
in
cli
out
lcall
mov
and
lret
jmp
outsb
or
or
mov
rclb
push
movsb
cs
dec
bound
std
jmp
adc
in
sbb
sub
pop
xlat
inc
and
xor
jae
xchg
mov
and
jmp
rcrl
stos
xchg
iret
arpl
xchg
mov
hlt
sbb
sbb
xor
push
mov
sub
pop
adc
adc
imul
cmp
inc
shll
mov
test
pop
test
inc
fisttpll
out
jbe
jge
or
sbb
cmp
call
aad
xlat
inc
and
push
inc
add
dec
das
ficompl
or
rolb
shlb
ficompl
scas
pop
push
jmp
mov
mov
and
inc
rcll
das
scas
sub
add
inc
mov
sbb
cmp
gs
pushf
outsl
cmpsb
sub
mov
in
jmp
ret
jb
insl
hlt
pop
icebp
mov
jmp
in
pop
mov
gs
imul
pop
jo
ja
loope
mov
mov
cs
xchg
add
jmp
or
add
xchg
or
mulb
dec
pusha
jmp
or
push
pop
lds
iret
jb
inc
mov
jmp
loopne
cmp
jne
jmp
in
inc
add
jg
or
aaa
mov
mov
inc
mov
addb
jmp
in
inc
add
notb
mov
cmpsb
shll
enter
push
mov
jae
lcall
jmp
mov
movsb
cs
jecxz
push
in
push
jmp
aas
rcll
std
mov
xchg
repz
in
arpl
jge
negl
out
jmp
sbb
dec
sub
xor
inc
inc
and
jns
push
lds
jbe
mov
or
into
pop
enter
inc
inc
and
jns
mulb
jmp
or
call
cmp
int
shll
push
jmp
mov
add
scas
or
in
xchg
dec
ljmp
sbb
fstpt
xchg
cmc
add
add
jmp
jecxz
jne
loopne
add
jmp
or
jns
xchg
add
js
pop
into
test
mov
sbb
pop
xchg
mov
shlb
lret
scas
pop
mov
popa
lea
add
pop
lret
scas
pop
scas
push
les
int3
and
and
addr16
gs
jmp
cld
add
call
mov
push
cld
push
std
outsl
lcall
xchg
lahf
xchg
add
insl
mulb
dec
jecxz
jmp
adc
cmp
push
mov
jmp
add
insl
ljmp
xlat
mov
mov
fnsave
test
mov
fs
jmp
push
mov
xchg
pop
push
fmuls
fdivs
aaa
mov
fs
loop
outsl
cmpsl
call
test
lock
and
lock
aad
dec
fistpll
push
cld
dec
cmp
and
lea
jmp
adc
aas
mov
pop
fisttpll
out
xchg
jmp
out
sbb
mov
cltd
clc
or
jp
insl
hlt
pop
in
insl
in
sbb
jmp
xchg
add
xor
pop
int3
stos
lods
dec
lret
pop
ds
cltd
adc
mov
sbb
fistl
mov
mov
insl
std
test
add
sbb
and
jo
fs
popf
insb
mov
outsb
or
adc
inc
aam
dec
call
jmp
xor
ds
xor
icebp
popa
add
pop
jg
movsb
out
or
mov
mov
add
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
call
insb
call
orl
iret
inc
add
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
call
aaa
push
pop
pop
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
call
xchg
call
xchg
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
call
dec
call
scas
mov
jmp
mov
mov
call
ret
rorb
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
inc
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
call
jns
repz
add
in
clc
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
call
test
jne
call
mov
call
mov
call
mov
pop
mov
jmp
call
jmp
lret
lret
jge
je
dec
mov
push
shll
lea
jmp
push
adcl
xchg
add
jns
push
test
push
jmp
jmp
push
scas
or
out
in
sbb
jb
in
mov
jmp
add
in
sbb
mov
sbb
call
push
push
jmp
and
add
add
aam
sub
inc
and
imul
add
mov
adc
out
test
clc
and
add
adc
sbb
les
mov
mov
push
mov
sbb
jle
and
dec
lret
pop
ds
xchg
sbb
leave
pop
jmp
add
into
sub
adc
sub
aaa
push
mov
pop
lods
jmp
add
imul
mov
dec
mov
je
sbb
clc
add
xor
push
enter
les
push
xor
xor
inc
aad
dec
sti
cli
jmp
push
test
push
mov
and
sahf
pop
xchg
repnz
std
jmp
daa
mov
and
mov
xlat
and
and
aad
les
sbb
mov
scas
lret
sbb
dec
leave
pop
cmp
sub
jmp
mov
stos
int
aad
dec
fnstcw
mov
push
lahf
push
add
push
jmp
shll
mov
lds
test
lock
js
ljmp
jle
notl
cmpsb
add
std
or
jmp
fidivrs
cli
call
jmp
mov
inc
mov
and
adc
ljmp
or
jmp
hlt
pop
lods
nop
adc
cmp
adc
jmp
mov
xchg
adc
lods
xor
mull
icebp
sbb
jns
sbb
test
mov
xchg
jg
jecxz
push
in
inc
lret
lret
test
cmpsb
inc
add
lock
mov
cmp
es
aas
pop
test
cwtl
add
cmp
adcb
loope
clc
cs
push
lds
setge
rcll
add
fidivs
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
call
jmp
in
pop
fwait
add
push
shlb
les
pushf
mov
fwait
add
pop
cmp
popa
xor
aas
pop
test
stos
arpl
call
call
jmp
pop
decb
mov
jbe
cmp
jmp
xchg
lcall
mov
push
lret
sti
mov
mov
and
sarl
sbb
int3
int3
int3
int3
int3
call
jmp
clc
sub
xchg
jb
imul
fsubl
xchg
sbbl
add
icebp
nop
arpl
sbb
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
add
add
imull
lcall
add
fs
jmp
sbb
xchg
movsb
ret
ds
dec
popf
cs
inc
mov
jle
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
je
lea
in
sbb
push
xchg
add
inc
adc
cmp
add
or
jle
mov
scas
pop
mov
adc
jmp
movb
sub
dec
fstpt
add
sub
movb
jl
mov
inc
mov
jecxz
std
test
and
lods
lods
push
jmp
enter
or
mov
cmc
popa
icebp
nop
arpl
add
mov
aad
int3
rolb
mov
arpl
cmc
add
push
xchg
rorb
mov
jp
or
cmpsl
inc
add
adc
add
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
call
push
inc
and
cmp
arpl
xlat
dec
call
jmp
mov
add
xor
pop
int
xchg
std
push
pushf
add
jmp
adc
push
mov
xor
daa
mov
lahf
cli
or
sbb
add
les
jo
loop
rorl
dec
movsl
fdivr
xor
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
call
fimuls
inc
add
shr
ret
add
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
call
in
jge
je
jo
out
movsl
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
call
mov
pop
stos
and
call
lock
adc
in
sbb
xor
mov
dec
pushf
add
mov
dec
fnstcw
dec
call
jmp
insb
or
int
push
xchg
repz
loopne
dec
fdivrs
dec
fnstsw
inc
enter
and
jmp
in
in
jg
ret
push
mov
add
ss
jmp
mov
fsts
pop
ds
inc
shlb
aad
dec
ljmp
call
jmp
jns
mov
outsb
cmpsl
mov
add
push
sahf
add
andl
mov
and
fldcw
dec
fdivrs
gs
sbb
fdivr
jmp
inc
aad
dec
scas
sbb
add
jl
jne
dec
insb
jmp
push
in
add
fs
jmp
mov
fadds
xchg
add
addr16
rorl
add
mov
cmc
push
mov
lods
mov
scas
inc
roll
sarl
pop
int
and
jb
jge
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jmp
lea
scas
aas
pop
test
repz
out
dec
fidivrs
movsb
lea
jmp
mov
xchg
sub
rolb
mov
lods
mov
sbb
les
scas
mov
fwait
scas
cmp
pop
iret
stos
pop
jmp
lods
add
adc
pop
scas
add
notl
inc
fmuls
sub
add
fildll
ja
xorb
fisttpll
out
sub
jmp
push
xchg
repz
cmpsl
loop
jmp
pop
into
test
jl
testb
pop
lea
jmp
push
mull
icebp
js
push
shlb
mov
sub
adc
mov
ret
addr16
call
jmp
sarb
sub
dec
mov
adc
fisubs
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
call
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
fmul
inc
add
inc
add
int3
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
stos
int3
inc
add
int3
inc
add
int3
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fs
add
int
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
into
inc
add
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
call
jmp
mov
js
imul
daa
mov
inc
mov
setp
outsl
lcall
and
jmp
movsl
inc
shll
cmp
adc
sbb
sbb
cmp
mov
popa
icebp
nop
arpl
sub
test
mov
cs
xchg
inc
iret
dec
ret
mov
setg
or
jle
insl
hlt
pop
out
sbb
add
push
movsl
inc
divb
xchg
jnp
insb
or
out
dec
sub
dec
and
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
call
jmp
adc
xchg
push
mov
rclb
ljmp
call
xor
xor
xor
xor
xor
jmp
call
jmp
cld
dec
cmp
or
cmpsb
and
pop
lret
scas
pop
fmull
jne
add
jmp
shrb
notl
jno
loop
imul
mov
fmuls
fdivrs
sub
arpl
xchg
lea
xchg
mov
cmp
jmp
jge
add
add
inc
shll
ja
loope
insb
jmp
cmc
add
setle
cmpsb
gs
mov
das
iret
inc
xlat
inc
and
xor
cmpsb
jmp
mov
dec
mov
ret
push
iret
pop
cmp
popa
sbb
sbb
and
jmp
popf
add
jecxz
push
in
lea
xchg
adc
add
add
xchg
movsb
ret
ds
pusha
mov
insb
loop
je
xor
sub
pop
test
fwait
decb
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
call
mov
call
mov
call
push
mov
push
call
pop
push
call
loopne
sbb
inc
add
cmp
cmp
add
push
call
pop
push
call
test
lods
scas
jmp
std
jmp
int
and
aaa
aad
shlb
push
aaa
ret
sub
out
lea
jmp
insl
sti
imul
push
mov
xchg
dec
fnsave
jmp
imul
insl
lock
inc
adc
cmp
int
call
jmp
repz
cmc
add
jge
je
xor
mov
sub
lds
mov
and
jmp
mov
mov
das
mov
leave
pop
cmp
dec
loop
sbb
fdivrs
add
jne
movsl
xor
rolb
shr
sbbb
add
and
dec
fdivrs
xor
cltd
add
add
aam
pop
lea
scas
cmp
mov
and
popa
mov
andb
add
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
call
jmp
and
push
ret
cmpsb
push
cli
gs
outsb
or
dec
cmp
in
dec
fisttpll
movsb
sti
fcompl
xchg
addr16
out
jno
outsb
in
jge
notl
js
add
dec
fistpll
loopw
pop
loop
sub
test
mov
and
mov
rolb
xor
ret
call
jmp
cld
xchg
cmc
add
popa
cld
xchg
cmc
add
addr16
pop
ds
arpl
push
xor
inc
cmp
add
gs
pushl
mov
inc
mov
adc
pop
orl
decb
aas
lret
xor
int
rorb
mov
gs
jge
nop
push
popa
nop
jb
lea
lock
cmp
jne
mov
inc
iret
pop
cmp
xor
push
lret
mov
jmp
gs
pushf
outsl
cltd
sbb
sbb
xchg
jle
movsl
xor
sbb
aad
addl
outsl
ljmp
stc
in
adc
inc
aad
sub
xor
sbb
sbb
inc
mov
je
jge
testl
or
adc
push
mov
sbb
decl
in
bound
mov
and
and
sbb
pop
mov
jle
pop
and
test
std
or
push
jmp
push
nop
adc
push
xchg
add
jl
fdivl
in
mov
sbb
arpl
xchg
gs
lahf
push
sti
jb
xchg
rcrb
cmpb
dec
push
xor
es
sbb
into
pop
cmp
roll
mov
mov
jmp
add
sub
push
dec
fisttpll
out
sbbb
out
sbb
jmp
push
xor
push
leave
es
add
dec
frstor
call
jmp
add
jmp
jne
push
pop
xchg
adc
push
fimuls
and
jmp
sbb
add
sahf
or
xchg
pop
xchg
repnz
loopne
and
mov
sbb
cld
fs
popf
insb
lds
push
aaa
ret
xor
xchg
add
xchg
cld
call
pop
and
bound
xchg
pop
bound
loopne
xchg
push
jmp
insl
pushf
dec
inc
ret
ret
push
xchg
repz
out
mov
ret
out
mov
adc
idiv
jg
mov
push
jge
negl
enter
sub
inc
fucompp
roll
add
js
inc
inc
roll
aad
mov
shll
jbe,pn
jb
jmp
mov
xor
jns
inc
fidivrl
inc
and
call
jmp
lds
iret
and
push
xor
sub
xchg
add
ss
or
cmpsl
aaa
lea
jmp
jnp
push
cld
push
add
jle
lea
jmp
ret
push
mov
mov
das
mov
imul
fwait
decb
add
add
out
jns
mov
mov
fiadds
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
call
jmp
pop
into
test
aaa
push
mov
lods
pop
mov
adcb
andb
lea
jmp
push
fimull
fisubrl
jle
bound
push
jns
jge
jmp
js
cs
les
int3
movnti
scas
pop
mov
stc
in
loopne
ljmp
mov
or
mov
sbb
je
sub
lahf
jnp
lods
mov
in
or
mov
sub
or
jmp
xor
inc
and
pop
add
rcll
cmpsl
push
mov
dec
fnstcw
out
jo
stos
sub
lds
push
out
rclb
mov
jmp
into
cltd
adc
add
mov
adc
xor
dec
pop
mov
jmp
adc
push
xor
and
enter
dec
mov
xchg
jmp
adc
or
movsl
stc
push
data16
adc
mov
sub
jmp
or
scas
lret
inc
jecxz
push
in
nop
or
jmp
or
xchg
jle
jne
out
push
xor
sbb
pop
int3
stos
pushw
jmp
lock
jo
inc
daa
rclb
dec
frstor
push
scas
jp
imul
sbb
mov
movsb
ret
fistpll
cmp
push
lds
or
sub
dec
lock
test
dec
push
xor
sub
push
pushf
sti
push
mov
mov
ja
add
aad
xchg
sbb
inc
and
jmp
cmp
out
adc
dec
jb
jle
call
or
jp
fs
jmp
lea
and
lods
lret
inc
icebp
mov
adcb
ss
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
call
jmp
insb
or
mov
jl
jne
add
mov
insb
out
jl
mulb
xchg
adc
add
xchg
cld
jmp
cmp
dec
lock
cmpl
roll
aad
mov
ret
data16
adc
or
mov
jo
imul
jb
in
sbb
push
mov
fidivrs
mov
fildll
jnp
in
add
jmp
cs
std
insl
hlt
pop
lock
notl
add
test
sbb
adc
jbe
ja
loope
mov
mov
and
adc
sbb
and
fnstsw
jno
jecxz
fldl
jmp
cmc
mov
mov
cmp
int3
inc
and
fdivrl
in
jmp
adc
mov
cmp
push
jns
jmp
and
sbb
xchg
lock
cmc
ja
xorb
repnz
pop
repnz
lods
and
push
dec
rcll
adc
pop
or
rcll
sub
nop
push
mov
es
fnstcw
sbb
or
jmp
hlt
xchg
outsb
lcall
test
cmp
pushl
jmp
lock
sbb
imul
sub
push
mov
mov
and
jecxz
in
sbb
in
jbe
cmpl
jns
mov
adc
cmp
dec
frstor
lock
mov
stc
into
push
shlb
sbb
pop
or
sbb
stc
jns
mov
dec
int
and
xor
out
ds
add
jmp
sub
call
xor
push
rolb
sarb
mov
sbb
cmp
mov
xchg
out
cld
fwait
jbe
enter
inc
mov
pop
pushl
jmp
lock
sbb
jbe
sub
fisttpll
out
pop
int3
inc
jmp
lock
into
pop
cmp
jno
icebp
popa
add
xor
inc
and
cmp
negb
lea
jmp
and
stos
into
cmp
pop
test
pop
lods
sbb
mov
sbb
jmp
jnp
in
inc
adc
sbb
ds
rol
arpl
pushl
jmp
and
push
mov
xor
jb
in
jge
insb
or
loopne
jmp
and
adc
dec
das
fidivrl
dec
lret
lret
sub
lds
dec
enter
pushl
jmp
sbb
jge
gs
pop
dec
les
int3
imul
sbb
and
push
cwtl
push
test
push
cli
dec
push
xor
sub
and
sti
jbe
cmpl
pushl
jmp
sbb
roll
mov
out
je
lea
cmp
sbb
loop
pop
loop
aad
mov
out
sbb
xlat
inc
pushl
jmp
adc
pop
icebp
iret
push
les
cmp
add
movsl
mov
sbb
mov
add
mov
mov
push
xchg
repz
mov
pushl
jmp
adc
outsl
in
jge
notl
fstpt
sti
adcl
test
std
insl
jmp
adc
ret
jno
push
cld
adc
sbb
sub
xchg
pushl
jmp
jp
jns
adc
int
and
aaa
adc
push
imul
jmp
jns
mov
sub
or
mov
inc
mov
movsb
push
ljmp
add
xchg
sti
js
jp
in
inc
hlt
outsl
lcall
loop
je
jle
jae
in
adc
pop
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
call
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
call
filds
cmp
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
filds
mov
filds
nop
filds
mov
inc
add
filds
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
aam
inc
add
filds
call
filds
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
je
inc
add
loopne
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
inc
add
inc
add
loope
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
call
jmp
in
bound
stos
int
mov
pop
push
roll
shll
mov
cmpsl
lea
jmp
mov
jae
push
cld
sbb
xlat
inc
and
xor
dec
sti
ja
xorb
lock
push
add
add
pop
adc
xor
jmp
sub
add
jnp
gs
adc
lret
lret
aad
push
jmp
enter
sbb
sub
mov
setg
push
inc
ljmp
mov
call
xchg
jp
loop
jp
add
jmp
int
and
and
xchg
add
jp
xor
cmp
add
add
sub
add
and
and
xchg
and
mov
jmp
push
mov
add
inc
scas
xor
enter
push
loopne
les
int3
jmp
stc
imul
jp
in
inc
lahf
add
ret
push
lds
fmuls
pop
jp
inc
sbb
push
sahf
or
cmpsb
inc
jge
xchg
cmc
add
dec
jmp
cmp
and
insl
hlt
pop
in
dec
frstor
insl
pushf
jne
cmp
jmp
mov
pop
into
test
pop
cmp
cmp
pop
cmp
lret
jmp
mov
fbstp
dec
mov
mov
and
lahf
or
in
loope
mov
jmp
or
inc
shll
push
xor
and
dec
sub
adc
mov
sbb
ds
test
dec
aam
sub
js
ljmp
push
push
lea
pop
ds
test
scas
aaa
cmpsl
ret
xor
insl
lock
inc
xchg
jmp
add
bnd
xorl
mov
pop
bnd
cmpsb
inc
roll
dec
movsb
mov
cmpsb
shll
fs
jmp
inc
shll
sub
popa
test
mov
sbb
testb
fs
jmp
scas
cmp
cld
xchg
cmc
add
mov
xchg
lret
push
shll
shlb
nop
jge
aad
add
fnsave
mov
push
mov
sub
call
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
xor
call
mov
add
inc
mov
add
call
jmp
in
jge
testl
pop
hlt
gs
pushf
outsl
cwtl
stos
cmp
sbb
jmp
and
cmp
dec
mov
negb
mov
mov
and
mov
in
sbb
test
push
mov
call
cs
inc
mov
ret
lods
add
xor
das
test
lcall
push
mov
inc
push
xor
sbb
imul
sbb
jns
jmp
aas
scas
lret
dec
lds
iret
and
adc
sbb
sbb
xchg
jle
gs
lea
jmp
xor
mov
enter
loope
cli
adc
sbb
push
lahf
cmp
imul
insl
lcall
out
in
mov
xchg
outsb
rcrl
cmpsb
adc
imul
insl
ret
icebp
push
jmp
mov
xchg
adc
mov
stos
das
mov
es
cs
adc
add
aaa
cmpsl
ret
in
icebp
nop
arpl
xor
insl
out
jg
jmp
add
push
test
pushf
sti
push
hlt
pop
xlat
inc
and
js
popa
icebp
nop
arpl
outsl
call
jb
imul
frstor
fs
jl
xor
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
call
jmp
fimull
fidivrl
icebp
popa
add
adc
imul
leave
test
mov
es
fs
jmp
jge
outsb
or
adc
mov
iret
inc
fidivrl
sbb
in
jg
dec
push
xor
sub
std
mov
insl
scas
add
add
jo
imul
test
cs
mov
mov
sbb
xchg
cltd
push
adc
xor
mov
call
data16
adc
or
push
or
mov
ret
push
push
call
jmp
call
jmp
lea
and
aas
mov
add
punpckhdq
ret
call
jmp
adc
jne
je
out
sbb
xchg
add
xor
mov
pop
int3
inc
jmp
mov
and
add
aaa
mov
sarb
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
call
push
lea
sub
and
add
sbb
or
pop
call
call
jmp
add
std
or
add
insl
push
fimuls
add
cs
adc
jmp
ljmp
mov
scas
lods
lret
inc
test
jge
notl
fisttpl
push
mov
jmp
lea
and
add
mulw
icebp
adc
fs
jmp
mov
mov
lcall
mov
es
pushf
jmp
decb
out
mov
adc
jecxz
in
je
sub
fisttpl
fucomp
sbb
xchg
repz
mov
inc
mov
push
jle
call
dec
mov
push
jmp
and
clc
lahf
push
rclb
pop
mov
sbb
data16
xchg
outsb
add
sbb
stos
fwait
pop
xchg
adc
ficomps
scas
pop
cld
or
sbb
or
lea
jmp
test
pop
enter
jnp
gs
adc
adc
fwait
or
sbb
outsb
cld
fwait
jbe
dec
fdivl
in
mov
mov
cs
mov
xlat
loopne
enter
xor
ljmp
lahf
push
inc
fldt
rorb
mov
inc
and
ja
or
in
stos
or
cmp
pop
repnz
sarl
jmp
mov
inc
mov
andl
cmp
or
in
sbb
cmp
jmp
mov
aam
les
jle
jb
xchg
pop
adcb
xor
jmp
jmp
jb
in
xchg
pop
mov
fwait
xchg
sbb
cmp
mov
lods
mov
mov
xor
ficoml
mov
shr
mov
add
mov
aaa
cmpsl
ret
xchg
push
xchg
repz
test
jecxz
pop
pop
jp
jne
inc
enter
int3
int3
int3
int3
int3
call
jmp
data16
and
xor
jmp
dec
fdivrl
and
push
test
fstpl
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
call
shr
inc
add
ds
jmp
pushf
xor
add
repnz
push
mov
xor
inc
lea
jmp
sub
ret
ret
inc
aam
dec
mov
xor
xor
ret
lods
pop
mov
sub
inc
rolb
shr
sbb
sub
lds
sub
ja
scas
movsb
push
jmp
pop
lahf
punpckhdq
adc
pop
loop
in
mov
jle
cmp
jmp
xchg
gs
pushf
xor
and
adcl
sub
mov
dec
mov
inc
or
stos
xor
or
xchg
add
push
inc
or
inc
daa
shlb
aad
int3
stos
sarw
gs
bound
mov
or
push
dec
or
test
inc
leave
pop
cmp
and
jp
in
sbb
sbb
add
or
cmp
aad
cmp
xor
int
cmpsb
into
call
jmp
xchg
add
sbb
fisttpll
out
fwait
adc
lods
and
stos
mov
shlb
nop
testl
push
add
inc
and
sub
gs
pop
mov
mov
les
int3
cs
jp
jp
movsl
call
jle
sub
mov
xchg
and
call
jmp
jbe
cmpl
add
aam
sub
xor
and
fs
jmp
jle
insb
or
out
loope
adc
add
mov
lret
jmp
movsl
push
mov
sti
imul
adc
mov
adc
repz
cmc
jmp
jns
fwait
adc
xchg
pop
bound
mov
jle
pusha
pop
repnz
pop
ds
out
mov
jge
jmp
cmp
inc
aad
dec
mov
mov
cmp
stos
cmp
pop
mov
fwait
decb
lds
sub
fsubr
and
add
in
loope
jae
adcl
dec
fmuls
fdivs
aas
stos
cmp
jmp
push
cmpsl
jb
jg
jmp
stos
pop
into
ret
pop
enter
fiadds
add
incl
mov
jg
fnsave
dec
mov
hlt
mov
mov
mov
movsl
int3
aas
jmp
mov
jnp
imul
repnz
xchg
enter
jmp
jmp
mov
jle
jb
in
jae
inc
and
push
jmp
mov
fs
jmp
loope
notb
shll
mov
jmp
repz
cmpl
in
sbb
in
sbb
dec
push
fimull
ficoml
fnstcw
jmp
lods
and
xor
imul
insl
mov
test
sahf
or
cmpsb
inc
or
add
push
inc
mov
hlt
jno
xorb
mov
or
aas
jmp
rorl
dec
in
sbb
push
sahf
adc
mov
call
jmp
cli
push
xchg
add
jae
pop
into
test
sub
pop
mov
and
jmp
mov
lods
jbe
xchg
cmc
add
mov
xchg
lock
jecxz
icebp
jmp
mov
fistps
dec
divl
addl
rorb
test
jbe
push
push
mov
mov
rep
pop
pop
ret
call
jmp
adcb
adcb
cld
por
pop
cmp
sub
loopne
xchg
shll
insl
pushf
jb
in
bound
xchg
icebp
add
arpl
xchg
les
lods
cmp
outsb
call
jmp
sub
outsl
lcall
sub
std
insl
hlt
pop
lods
rorl
lea
jmp
fldl
mov
cmc
mov
xchg
mov
mov
ja
dec
sub
pop
call
jmp
mov
inc
mov
fadds
mov
idivl
mov
mov
xchg
jnp
lea
jmp
push
leave
pop
cmp
pusha
jl
ja
loope
negl
scas
pop
faddl
cmpsb
addb
testl
push
movsb
inc
ret
mov
mov
pop
jmp
rolb
sarb
movsl
and
and
mov
dec
lds
jmp
xchg
sbb
add
adc
in
sbb
xchg
sbb
aad
rcrb
inc
aam
dec
cmpsl
jge
add
add
lret
pop
ds
or
in
jmp
adc
add
jmp
push
in
sub
mov
xchg
je
cmpsb
xor
scas
inc
loope
jmp
sbb
add
ljmp
lea
das
mov
mov
xchg
sub
jmp
sub
jno
sbb
jnp
mov
push
adcl
cmpsb
xor
scas
sub
imul
insl
in
dec
roll
aad
jno
pusha
pop
repnz
sub
push
test
xchg
mov
loopne
adc
add
data16
xchg
outsb
cmpb
rolb
push
pushf
sti
push
hlt
dec
lds
iret
push
mov
xchg
pop
shlb
lods
call
jmp
or
xor
cs
inc
mov
pusha
loopne
adc
add
and
jmp
movsl
and
mov
inc
mov
in
notb
sbb
jb
stc
imul
inc
es
xlat
pop
int3
stos
data16
psubd
sbb
lahf
cli
or
lahf
adc
jno
xorb
fs
popf
insb
test
imul
adc
inc
adc
dec
imul
jp
arpl
cmc
sbb
jmp
jo
stos
xor
jb
xchg
mov
mov
rcll
push
xchg
call
jmp
das
int
mov
js
addr16
push
dec
fnstcw
mov
in
jge
idivl
pop
xchg
add
sahf
jo
pop
enter
adc
jmp
cmp
add
insl
xor
pop
rolb
sarb
ds
lea
jmp
call
push
jno
jne
pop
enter
dec
fmuls
fcomps
and
sbb
cmp
mov
mov
and
jb
jne
out
dec
cmp
xor
scas
jmp
repnz
pop
repnz
cli
lock
lret
rorl
mov
fdivrl
and
sbb
out
cmp
adc
shll
xchg
imul
sbb
push
aaa
ret
cmp
mov
xchg
je
dec
ret
push
jmp
fs
push
sub
lods
sub
mov
cmp
sbb
in
loop
je
fcoms
mov
int3
stos
data16
push
jmp
lea
in
bound
gs
adc
pop
lods
mov
jmp
insb
scas
or
outsl
lcall
xchg
adc
cmp
add
mov
and
mov
mov
in
sub
push
push
push
jmp
sub
sub
movzbl
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
xor
movzbl
mov
movzbl
movzbl
shl
xor
movzbl
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
xor
shl
xor
movzbl
movzbl
shl
xor
xor
shl
xor
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
shr
and
mov
shr
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
shr
xor
and
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
and
shr
and
mov
mov
xor
mov
mov
shr
xor
mov
shr
and
xor
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
shr
and
mov
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
shr
and
and
mov
xor
mov
shr
and
mov
xor
mov
shr
xor
mov
shr
xor
mov
and
xor
and
xor
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
mov
and
xor
mov
xor
shr
and
mov
mov
mov
shr
shr
and
xor
xor
mov
and
xor
mov
xor
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
shr
and
mov
shr
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
shr
and
mov
shr
and
xor
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
mov
mov
xor
mov
mov
shr
xor
mov
shr
and
and
xor
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
shr
and
mov
and
xor
mov
xor
shr
xor
mov
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
mov
mov
shr
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
mov
shr
and
shr
and
mov
xor
mov
shr
xor
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
and
xor
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
mov
mov
shr
and
shr
mov
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
xor
shr
xor
mov
and
xor
xor
cmpl
jle
mov
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
xor
shr
xor
mov
mov
and
xor
xor
cmpl
jle
mov
shr
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
and
mov
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
and
shr
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
shr
and
mov
mov
mov
xor
mov
shr
xor
and
xor
mov
xor
shr
mov
shr
and
mov
and
xor
mov
shr
xor
mov
and
xor
xor
mov
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
mov
mov
shr
and
and
mov
xor
mov
shr
xor
mov
and
xor
mov
xor
shr
and
mov
shr
and
xor
shr
xor
mov
mov
and
xor
xor
mov
shl
add
mov
shr
and
mov
and
mov
shr
and
mov
and
xor
mov
shr
mov
and
xor
mov
and
movzbl
xor
xor
mov
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
mov
mov
shr
and
mov
and
mov
shr
and
mov
and
xor
mov
shr
mov
and
xor
mov
and
movzbl
xor
xor
mov
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
mov
mov
mov
shr
shr
and
mov
and
mov
and
and
xor
mov
shr
mov
and
xor
mov
and
movzbl
xor
xor
shr
mov
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
mov
mov
shr
and
mov
and
mov
and
and
xor
shr
mov
and
xor
mov
and
movzbl
xor
xor
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
mov
jmp
mov
mov
and
mov
pop
leave
ret
call
jmp
mov
dec
mov
scas
pop
mov
ds
fwait
adc
adc
jmp
or
fcoml
mov
pusha
pop
repnz
test
shl
gs
pushf
outsl
cwtl
out
jle
mov
mov
and
jmp
jne
mov
lods
cmp
mov
xchg
xor
jne
out
sbb
pop
enter
scas
xor
je
arpl
cmc
dec
lahf
pop
xchg
repnz
jno
push
jmp
es
cmp
xor
push
repnz
pop
bnd
push
test
push
mov
jmp
sub
add
mov
cltd
clc
or
imul
mov
lret
jno
imul
adc
andl
jns
and
push
jmp
pusha
stos
repz
jp
fcoms
mov
mov
inc
and
jmp
pop
into
test
icebp
nop
arpl
pop
scas
adc
sbb
sub
sbb
leave
stos
cmp
mov
scas
mull
nop
arpl
ds
sub
dec
test
test
imul
sti
sahf
insl
aam
insb
loop
je
jmp
out
out
jg
jmp
xor
js
add
out
jl
divb
jo
xorl
scas
int3
call
jmp
jmp
push
in
or
xlat
cwtl
and
les
int3
jno,pn
push
jmp
repz
cmc
sbb
jmp
xchg
push
mov
les
sbb
jns
mov
inc
mov
pop
enter
and
dec
ret
mov
mov
scas
pop
cwtl
inc
fisttpl
fnstsw
enter
addr16
mov
rol
les
sbb
in
fildl
mov
testb
fdivl
jge
je
cmp
jmp
cmpsl
push
sti
sub
and
push
lock
loop
je
xlat
dec
fdivrs
in
jg
in
jmp
add
fs
sub
mov
inc
cmpsl
popa
loopne
jmp
add
adcl
test
scas
cmp
mov
mov
sahf
stc
or
jmp
popf
mov
jmp
cmp
adc
add
je
xchg
testb
mov
sbb
xchg
repnz
inc
leave
pop
cmp
and
notl
inc
fidivrl
lods
push
jmp
stc
outsl
lcall
dec
sub
and
or
mov
dec
mov
or
out
out
loope
jae
xor
jo
jns
jmp
cli
lock
bound
sbb
jp
sub
pop
cmp
add
and
ret
push
lds
rcll
jbe
outsl
lcall
and
xchg
lods
cs
out
jl
notb
pop
push
jmp
fidivrl
mov
movsb
add
cli
adcl
test
test
mov
add
adc
xchg
pop
jmp
movsb
pop
inc
jmp
add
jbe
pop
int
addr16
gs
pushf
outsl
test
or
call
jmp
ret
push
lds
mov
lret
gs
pop
repnz
js
mov
sti
outsb
cld
lea
jmp
pusha
stc
imul
inc
daa
sarb
push
lds
aad
hlt
imul
test
insl
std
test
into
insb
loop
je
sbb
jge
divl
fimuls
xor
hlt
pop
jecxz
inc
shll
mov
xor
jbe
addr16
pop
pop
cltd
or
ja
mov
inc
mov
shlb
hlt
jge
je
and
or
rcrb
mov
jmp
add
cmp
inc
es
in
jge
testl
jl
repz
imul
sbb
in
ljmp
xchg
popa
lods
cwtl
push
pushf
sti
push
hlt
pusha
cmc
gs
pop
insl
movzbl
jmp
adc
scas
pop
std
jg
jnp
in
sbb
jnp
mov
out
in
mov
or
inc
push
enter
popa
xor
jg
mov
ret
pop
int3
shl
jmp
or
rclb
push
mov
or
dec
mov
leave
fucomi
sbb
mov
insb
mov
xor
dec
pop
adcb
andb
jge
add
xor
dec
lret
pop
ds
loope
clc
lahf
push
sbb
push
lea
jmp
cmpsb
shll
jp
imul
sbb
mov
cld
ja
xorb
jmp
dec
mov
enter
mov
dec
mov
mov
jle
jle
call
push
add
mov
aam
aaa
cmpsl
ret
leave
push
shll
jmp
sub
adc
subl
and
lods
jmp
xor
pop
test
jns
stc
fwait
call
jmp
inc
mov
test
jle
mov
mov
in
or
lahf
setg
repz
add
jae
xchg
mov
pushf
xor
je
sbb
inc
push
xchg
mov
arpl
push
cmpsb
xor
scas
pop
out
out
mov
sbb
jp
jne
out
pop
outsl
roll
aad
std
pop
int3
stos
data16
add
lcall
arpl
cmc
adc
nop
push
popa
nop
jb
out
adc
push
xor
sbb
push
xor
push
ficompl
xchg
mov
adcl
pop
jmp
inc
pop
ljmp
inc
mov
test
xchg
add
jae
repz
sbb
xchg
add
mov
xchg
jle
lock
bound
jne
add
ret
add
xorl
je
rorl
mov
shll
add
repnz
jg
mov
pop
lret
pop
ds
xchg
or
jo
jl
sbb
cmp
sbb
and
mov
inc
mov
shll
jmp
mov
dec
mov
out
lods
movsl
cmp
adcl
test
sbb
lea
jmp
movsl
add
jns
dec
das
ficompl
push
mov
es
sbb
or
rolb
inc
mov
or
aam
int3
and
xor
jmp
add
repz
pop
rorb
dec
test
jp
jp
adc
add
pop
push
add
mov
dec
mov
push
scas
leave
cmp
addr16
push
add
dec
jecxz
push
in
jnp
jle
call
shlb
mov
fisttpll
mov
add
push
dec
add
adc
add
test
jmp
dec
add
jle
je
out
inc
jmp
xchg
outsb
shll
mov
xchg
mov
add
push
or
sti
push
je
jg
jmp
in
sbb
fistpll
test
sbb
sub
or
and
cmp
dec
mov
mov
push
shl
jmp
jo
loop
xor
mov
inc
into
pop
cmp
xor
jmp
push
std
pop
stos
and
xchg
or
jb
xchg
or
js
out
adc
or
jmp
lds
inc
int
and
and
add
push
imul
or
or
add
add
ja
loope
mov
mov
cs
int
enter
sbb
push
jns
pusha
cmc
fsubl
jmp
jle
mov
pusha
xchg
jns
scas
aas
pop
test
repnz
outsl
hlt
push
fs
jmp
jae
js
ljmp
imul
ss
mov
sbb
pop
daa
mov
test
cwtl
decl
lea
jo
loop
mov
cmpsb
shll
sbb
mov
es
stc
cwtl
imul
mov
pop
int
addr16
arpl
push
jmp
adc
jno
lods
lret
inc
scas
and
adc
add
sbb
into
add
xor
pushl
xorb
adcl
xchg
jb
mov
jmp
sbb
add
lcall
mov
add
ss
int
add
stc
in
xor
sbb
xor
aaa
push
mov
xchg
popa
sahf
add
adc
jmp
dec
ret
mov
imul
rclb
sub
enter
lea
jmp
aaa
ret
in
jge
negl
xlat
pop
iret
stos
pop
subl
adc
add
ss
add
jge
add
add
fs
popf
insb
test
mov
inc
mov
js,pt
call
jmp
or
popf
or
rolb
shlb
add
outsb
jmp
add
mov
add
mov
or
sub
inc
mov
add
pop
repnz
xchg
cmpsb
xor
scas
inc
xor
push
lds
pop
lret
scas
pop
mov
lds
iret
cmp
mov
pop
call
jmp
in
push
daa
lods
and
adc
dec
fstl
orl
push
fstpt
push
mov
sub
mov
push
push
mov
push
mov
mov
mov
mov
mov
jmp
adc
pop
jb
sub
bound
sbb
not
and
mov
and
or
add
mov
lea
mov
rol
add
mov
and
mov
not
and
or
add
mov
lea
mov
mov
rol
add
mov
not
and
mov
and
or
add
mov
lea
mov
ror
add
mov
mov
not
and
mov
and
or
add
mov
lea
ror
add
mov
and
mov
not
and
or
mov
add
lea
mov
mov
rol
add
mov
mov
not
and
mov
mov
and
or
add
mov
lea
mov
mov
rol
add
mov
mov
not
and
and
or
add
mov
lea
ror
add
mov
not
and
mov
and
or
mov
add
lea
ror
add
mov
mov
mov
mov
not
and
mov
and
or
add
mov
lea
mov
mov
mov
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
mov
not
and
and
or
mov
add
lea
mov
mov
mov
ror
add
mov
mov
not
and
and
or
add
mov
mov
lea
ror
add
and
mov
not
and
or
mov
add
lea
mov
mov
mov
rol
add
mov
not
and
mov
and
or
add
mov
lea
rol
add
mov
notl
mov
and
mov
and
or
mov
mov
add
mov
mov
lea
mov
mov
ror
add
and
mov
notl
mov
and
or
add
mov
lea
mov
and
ror
add
and
or
add
mov
lea
mov
rol
add
and
and
or
add
mov
lea
rol
add
mov
not
mov
and
and
or
add
lea
rol
add
mov
not
and
mov
and
or
add
mov
lea
mov
not
and
ror
add
and
or
add
mov
lea
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
and
mov
not
and
or
add
mov
lea
not
and
rol
add
mov
and
or
add
mov
lea
mov
not
and
ror
add
and
or
add
mov
lea
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
not
mov
and
and
or
add
lea
rol
add
mov
not
and
mov
and
or
add
mov
lea
mov
not
and
ror
add
and
or
add
mov
lea
rol
add
and
mov
not
and
or
add
mov
lea
rol
add
mov
and
mov
not
and
or
add
mov
not
and
lea
rol
add
mov
and
or
add
mov
lea
mov
xor
ror
add
xor
add
lea
rol
add
mov
xor
xor
add
lea
rol
add
mov
xor
xor
add
lea
mov
rol
add
xor
mov
xor
add
lea
ror
add
xor
add
mov
lea
mov
xor
rol
add
xor
add
lea
rol
add
mov
xor
xor
add
mov
lea
rol
add
xor
mov
xor
add
lea
mov
ror
add
xor
add
lea
mov
xor
rol
add
xor
add
lea
rol
add
mov
xor
xor
add
mov
lea
rol
add
xor
mov
xor
add
mov
lea
mov
ror
add
xor
add
xor
lea
rol
add
xor
add
lea
mov
rol
add
mov
xor
xor
add
lea
rol
add
mov
xor
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
mov
add
not
or
xor
add
lea
mov
rol
add
not
or
xor
add
lea
mov
rol
add
not
or
xor
add
lea
ror
add
mov
not
or
xor
add
lea
rol
add
add
mov
not
or
xor
add
lea
rol
add
mov
not
or
xor
add
not
lea
rol
add
add
or
xor
add
lea
ror
add
add
add
jmp
adc
fnstsw
pop
pop
pop
leave
ret
call
jmp
pop
int
addr16
inc
aam
dec
cmpsl
cmp
pop
push
inc
pushf
adc
lea
jmp
adc
jmp
cli
popf
insb
mov
incl
jmp
add
jge
jp
jp
cmc
data16
xchg
outsb
fwait
aaa
movsl
xor
inc
shll
add
add
imul
sbb
mov
int
lds
aad
xchg
mov
sub
icebp
call
jmp
rclb
ljmp
stc
sbb
int3
stos
data16
push
lds
lret
push
mov
sub
push
push
mov
lea
push
push
call
mov
mov
mov
shr
add
and
mov
mov
push
pop
cmp
movb
jl
push
pop
sub
lea
push
call
pop
xor
lea
push
movzbl
movzbl
shl
or
movzbl
shl
or
movzbl
shl
or
mov
inc
add
cmp
jb
lea
lea
call
push
lea
lea
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
add
add
dec
jne
pop
leave
ret
jmp
flds
mov
hlt
cltd
adc
dec
adc
push
decl
jne
mov
lea
mov
test
jne
xor
ret
mov
movzbl
inc
mov
mov
movl
mov
mov
add
shr
mov
mov
and
mov
jmp
xlat
dec
frstor
xor
inc
ret
push
mov
push
push
jmp
pop
push
xor
jo
xchg
xor
inc
lea
push
mov
call
pop
test
je
mov
lea
lea
push
mov
call
pop
test
je
cmpl
jne
mov
mov
jmp
jbe
jle
call
xor
inc
pop
leave
ret
xor
jmp
push
mov
mov
sub
push
push
mov
push
jmp
bnd
xchg
idivb
and
cmp
je
cmp
je
lea
mov
mov
mov
mov
mov
mov
test
je
lea
mov
test
je
mov
mov
mov
inc
inc
mov
mov
jmp
mov
lea
push
lea
call
pop
test
je
cmpl
je
lea
push
lea
call
pop
test
je
cmpl
je
lea
push
lea
call
pop
test
je
cmpl
je
push
xor
pop
lea
push
lea
call
pop
test
je
dec
mov
lea
mov
jne
test
je
mov
sub
cmp
ja
mov
decl
test
je
mov
mov
sub
mov
mov
jmp
mov
decl
test
je
mov
movb
incl
jmp
mov
decl
test
je
mov
movzbl
incl
xor
inc
mov
and
inc
inc
shr
mov
mov
je
mov
sub
cmp
ja
cmp
ja
sub
test
je
mov
sub
mov
mov
incl
inc
dec
mov
jne
mov
jmp
mov
mov
jmp
lea
push
lea
push
call
pop
pop
test
je
mov
test
jne
cmp
jne
lea
push
lea
push
mov
call
pop
pop
test
je
sub
cmp
ja
mov
cmp
ja
sub
test
je
mov
sub
mov
mov
incl
inc
decl
mov
jne
jmp
sub
jmp
dec
dec
mov
decl
test
je
mov
movzbl
shl
add
incl
mov
lea
push
lea
push
mov
call
pop
pop
test
je
cmp
jb
incl
cmp
jb
incl
cmp
jae
addl
mov
sub
cmp
ja
mov
cmp
ja
sub
test
je
mov
sub
mov
mov
incl
inc
dec
mov
jne
mov
mov
xor
inc
jmp
mov
decl
test
je
mov
decl
test
je
mov
mov
mov
incl
incl
mov
xor
cmpl
je
jmp
pop
rclb
imul
sub
jmp
or
pop
pop
pop
leave
ret
call
jmp
aam
sub
ret
movsl
xchg
adc
add
jne
lea
jmp
test
mov
sbb
sbb
shll
jmp
pop
stos
cmp
xchg
pop
xchg
adc
cmp
xor
sbb
sub
les
mov
mov
pop
mov
or
les
int3
cs
sbb
sbb
mov
lods
mov
stos
inc
jmp
rorb
push
mov
imul
mov
jmp
out
mov
sbb
xchg
testb
imul
mov
sub
mov
jne
je
and
fimull
movsb
push
repnz
cmc
gs
or
xchg
or
sub
inc
fimuls
pop
pusha
notb
scas
lret
cmp
jg
call
call
add
data16
adc
or
jge
in
add
call
pusha
and
cld
fwait
jbe
popf
or
fadd
add
jmp
push
test
push
mov
jmp
lret
arpl
xchg
gs
mov
fs
jmp
fildl
mov
mov
xchg
test
aad
lea
mov
loopne
adc
dec
push
lret
lret
pop
xchg
repnz
cmp
sbb
dec
sub
pop
imul
insl
in
pop
fisttpl
loop
daa
movsl
xor
pop
gs
pop
pop
lahf
punpckhdq
outsl
lcall
and
loope
push
shll
sub
jg
adc
test
in
mov
jmp
jne
jno
xorb
mov
jg
arpl
push
ret
cmpsb
push
cmpsl
inc
sbb
mov
data16
pop
ret
push
shlb
inc
mov
jbe
mov
jmp
rolb
mov
cmpsb
repnz
pushf
outsl
lret
cmp
mov
pop
test
jge
jmp
add
fdivl
jle
mov
int
xchg
sub
mov
add
pop
shlb
mov
data16
xchg
outsb
jmp
scas
jns
jmp
dec
add
pop
mov
shlb
push
bound
and
add
int3
aaa
add
and
sbb
mov
lea
mov
jmp
jnp
rclb
cs
jnp
mov
push
fmuls
fdivrs
adc
push
add
mov
inc
mov
jmp
scas
lods
lret
inc
mov
jmp
aam
aad
sub
aaa
ja
jno
jecxz
ret
lods
pop
cli
mov
inc
jmp
insb
ficoml
mov
sahf
and
mov
jns
and
jmp
jmp
push
in
inc
jo
arpl
cmc
inc
outsl
roll
aad
fnstcw
jp
sbb
and
mov
test
movsl
xor
mov
dec
mov
mov
jmp
nop
push
popa
nop
jo
popa
icebp
nop
arpl
leave
ds
jnp
mov
loopne
sbb
xor
scas
gs
out
jg
jmp
push
movsb
inc
adc
jmp
scas
lret
xor
cmp
aam
aad
dec
mov
sbb
hlt
push
cld
aas
xlat
inc
xlat
mov
lods
dec
pop
xchg
add
jns
mov
jmp
adcl
mov
lret
push
shll
sbb
jmp
add
bound
pop
ljmp
pop
sahf
add
inc
add
jmp
popa
mov
mov
sbb
aad
ret
cltd
clc
or
pop
jmp
mov
add
scas
aas
pop
test
push
mov
sbb
ret
push
jmp
pop
test
sub
push
sbb
or
jne
jge
jmp
popa
cmc
jp
jp
jp
fs
pop
imul
inc
xlat
inc
and
aaa
popa
lea
jmp
pop
int3
stos
shr
out
mov
jae
jnp
in
or
js
mov
sbb
mov
mov
sbb
ret
xor
cmpsl
sub
mov
add
jnp
inc
push
xor
addr16
or
cs
test
dec
jmp
sub
out
jno
xchg
xor
repz
cmc
daa
inc
rcll
lea
jmp
sahf
stc
or
ficomps
test
dec
das
fidivrl
movl
add
lret
lahf
punpckhdq
adc
inc
xchg
sbb
jmp
and
add
out
scas
and
out
jg
jmp
inc
mov
add
xor
arpl
cmc
push
data16
pop
sbb
sbb
add
xor
dec
dec
fisttps
flds
leave
pop
cmp
cmp
xchg
jae
jns
jmp
add
test
mov
sbb
loop
jne
int3
rolb
pop
leave
test
out
lahf
inc
shll
lcall
adc
sbb
rolb
pop
ljmp
sahf
in
insb
loop
je
push
aam
sub
add
jmp
jo
jmp
lret
mov
mov
push
jmp
jo
addr16
pop
bnd
mov
orb
adc
pop
roll
shll
cmp
jmp
jecxz
jne
aam
aam
dec
cmpsb
mov
fists
stos
push
jmp
aaa
ret
lds
iret
das
adc
push
lds
iret
and
lcall
pop
adc
and
or
xor
xorl
sbb
xor
ja
xorb
fimull
fisubrl
mov
jns
mov
je
or
push
notl
adc
addl
loopne
notl
mov
sbb
and
inc
icebp
jnp
mov
out
imul
and
adcl
cmp
xchg
sbb
mov
pushf
jmp
loopne
repz
imul
insl
lahf
dec
jecxz
push
in
xor
add
sbb
fidivrl
adc
data16
cmpsb
push
mov
sbb
push
push
xor
imul
mov
mov
gs
and
inc
and
jbe
call
jmp
xchg
cmp
xor
or
mov
std
push
out
jb
xchg
sbb
insl
hlt
pop
cmpb
fistpl
stos
pop
mov
sti
imul
sbb
lock
int3
rolb
cmp
dec
fdivrs
out
mov
fldenv
xchg
gs
ljmp
inc
xlat
mov
lods
jae
outsb
or
pop
mov
xchg
repz
lds
push
xor
mov
jmp
lret
pop
ds
in
notl
push
cltd
or
insl
adc
adcb
loopne
in
mov
dec
mov
mov
cmp
dec
mov
add
sbb
mov
mov
das
lds
cltd
or
insb
and
sbb
lods
cmp
daa
mov
and
cmp
sbb
add
and
cmp
aaa
cmpsl
ret
sbb
dec
jmp
cs
cmp
mov
std
jl
jne
data16
outsb
or
adc
ret
inc
push
or
adc
pushl
out
or
call
inc
call
jmp
loope
inc
fimuls
pop
cmp
pop
lret
scas
pop
in
adc
push
call
inc
and
int3
stos
data16
cmc
call
jmp
mov
xor
adc
dec
roll
sarl
jns
lea
jmp
mov
fwait
imul
or
push
stc
fs
popf
insb
fisttpl
cmp
jne
mov
icebp
jno
xorb
sti
imul
sbb
imul
pop
pop
in
jle
popf
jmp
dec
mov
mov
push
movsl
push
movsb
xor
int
fwait
or
sti
jae
xchg
xor
dec
rcrl
xor
inc
ret
call
jmp
adc
cmpsl
and
enter
dec
mov
ljmp
into
test
sub
sahf
ret
call
jmp
in
sbb
adc
pop
xchg
adc
fcoml
lods
pop
cli
mov
rorl
xchg
aad
lret
push
imul
jb
xchg
dec
jmp
movsb
movsb
ret
ds
pop
iret
pop
cmp
and
sub
addr16
jmp
roll
shll
pop
iret
pop
cmp
cmp
mov
jmp
enter
sub
push
xor
and
subl
insb
or
mov
fs
jmp
sti
push
mov
pop
mov
gs
pop
iret
stos
pop
into
pop
jmp
rcl
add
arpl
cmc
pop
insb
mull
icebp
dec
mov
mov
mull
icebp
jmp
rcl
add
clc
jns
mov
push
inc
and
aas
jge
je
addr16
enter
rcl
add
adc
enter
push
mov
xchg
jbe
xor
jmp
xor
inc
and
sbb
dec
sbb
mov
shll
xor
test
dec
fstpt
pop
cmp
and
pop
int
addr16
xlat
inc
aad
dec
aad
add
rclb
inc
rolb
shlb
add
xchg
push
xchg
repz
out
jmp
inc
mov
mov
mov
call
imul
rorl
mov
test
std
test
mov
ljmp
push
mov
jmp
dec
sub
popa
jne
gs
sub
fbstp
push
push
lea
call
sub
mov
jne
xor
jmp
mov
mov
mov
test
je
test
jle
add
jmp
xor
jmp
and
adc
test
je
push
push
mov
test
je
cmp
jb
cmp
jb
lea
shr
push
pop
je
mov
mov
and
mov
cmp
jne
movzwl
and
add
lea
mov
add
inc
cmp
jb
add
jne
pop
pop
jmp
test
jge
or
xor
inc
pop
leave
ret
push
mov
sub
lea
mov
call
mov
mov
mov
test
je
test
jle
lea
jmp
xor
jmp
pop
mov
dec
mov
test
je
push
push
mov
test
je
cmp
jb
cmp
jb
lea
shr
movl
je
mov
movzwl
mov
and
mov
cmp
jne
and
add
add
mov
add
cmp
jne
mov
incl
cmp
jb
add
jne
pop
pop
jmp
cmp
sbb
pop
xor
inc
leave
ret
call
jmp
fldenv
cs
pushf
xor
dec
pushf
or
mov
inc
mov
cmc
das
into
aaa
push
mov
sub
push
push
push
call
fiaddl
mov
mov
sbb
sbb
shlb
mov
dec
das
fisubl
loope
adc
dec
mov
fwait
lea
jmp
add
inc
xchg
xor
lds
iret
dec
cltd
sbb
popa
icebp
nop
arpl
imul
lret
mov
mov
sbb
push
movsl
dec
cmp
push
lds
imul
adc
or
addr16
jmp
or
add
mov
and
mov
fwait
decb
test
mov
jmp
or
add
das
mov
jne
je
out
sbb
stos
cmp
or
or
add
je
pop
adcb
subb
jge
negl
stos
or
mov
mov
divb
lcall
lahf
pop
xchg
repnz
jmp
xlat
mov
clc
cmp
mov
and
ret
cmpsb
push
aam
jnp
pop
flds
add
mov
stos
int
fcmovb
inc
aam
dec
scas
and
cmp
dec
jmp
sbb
bound
mov
pop
fimuls
or
mov
test
jne
or
add
mov
stc
cmpsl
cs
sahf
or
cmpsb
inc
lahf
adc
in
aad
add
arpl
jl
testb
adc
in
sbb
jmp
sahf
push
pushf
sti
push
mov
xor
pop
pop
pop
leave
ret
mov
push
call
mov
push
call
xor
xor
ret
call
jmp
pop
repnz
fs
jp
jp
out
out
mov
imull
cltd
push
lea
jmp
push
sti
imul
jl
mov
gs
adc
pusha
pop
repnz
jmp
ds
jne
imul
sbb
fisubrl
ficomps
jmp
inc
mov
popa
xchg
inc
and
punpckhdq
xor
mov
jmp
or
call
xor
iret
pop
cmp
jo
std
insl
lea
jmp
jp
lcall
in
jge
testl
jecxz
jmp
rolb
jns
jnp
in
inc
scas
xor
aad
sub
pop
hlt
push
lds
add
adc
inc
movsb
mov
cmpsb
shll
pop
fisttps
flds
mov
pop
test
mov
scas
jge
sbb
clc
adc
add
sahf
jl
ljmp
mov
jns
mov
fs
jmp
or
js
scas
cmp
mov
sub
fimuls
sbb
loop
push
mov
add
xor
jne
out
setae
sbb
or
icebp
imul
insl
xorl
sbb
sub
dec
pop
push
xor
push
jmp
pop
aas
lret
aaa
cmpsl
ret
daa
mov
cmpsl
cmp
es
sbb
and
and
mov
lahf
push
mov
and
add
cmpl
cs
jg
mov
xchg
adc
in
sbb
sbb
add
and
cs
cltd
or
ds
aad
sub
jmp
in
imul
dec
fidivrs
pop
and
cmp
jmp
mov
mov
mov
inc
mov
push
or
push
cmp
ja
iret
pop
cmp
xor
call
sub
add
pop
xchg
xlat
dec
fdivrl
or
xor
dec
ss
mov
scas
jmp
fmuls
fdivs
add
in
sbb
cmpsl
ret
mov
rorl
mov
dec
fstpt
mov
movsb
ret
ds
mov
sbb
and
pop
int3
inc
and
mov
mov
cs
outsb
cld
fwait
jbe
sbb
dec
sub
push
hlt
insb
loop
je
cwtl
pop
xchg
repnz
lea
add
xchg
mov
and
xor
arpl
andb
shlb
cmpsb
sub
sbb
jl
cmpsl
aaa
push
mov
shlb
or
scas
sub
and
jmp
add
add
or
jo
jmp
push
in
or
adcb
call
cmpsl
push
cltd
cld
jnp
mov
jo
insb
or
loop
jae
xchg
int
push
cmp
daa
inc
mov
fists
cmpsb
push
mov
call
jmp
lods
lret
inc
cmpsb
pop
xchg
add
jg
add
xchg
add
jo
mov
add
add
clc
ja
xorb
in
sbb
gs
pop
into
inc
shlb
jg
jmp
mov
or
or
jle
mov
sub
and
sti
sbb
pop
enter
push
lds
iret
and
fistpll
int3
inc
and
inc
sub
imul
punpckhdq
pop
stos
push
or
cmp
add
push
push
int3
inc
and
arpl
cmc
je
aad
sub
pop
ja
imul
das
addb
repnz
cmp
cmpsl
es
cs
mov
movsl
int3
aas
aam
xor
addb
or
push
rolb
sarb
sub
xor
scas
dec
xor
sub
cmp
and
inc
mov
movsb
push
xchg
jb
insl
leave
dec
fstpt
xchg
adc
lret
pop
iret
stos
pop
and
push
xchg
mov
test
scas
lret
out
jg
mov
sub
cld
push
push
ret
ret
lea
in
bound
jb
in
in
adc
cmp
inc
shlb
fnstcw
and
mov
js
btr
inc
mov
sub
sbb
jnp
mov
pop
fstpt
ret
mov
mov
pushf
jle
notl
lds
mov
mov
cmp
sbb
push
cmp
push
mov
mov
xchg
lock
push
xchg
add
and
pop
into
test
xchg
cld
pmulhuw
sarl
cmp
inc
cwtl
or
pop
int3
stos
shrw
add
jae
jno
xorb
push
pushf
sti
push
cs
aas
stos
cmp
pop
sub
add
insb
or
mov
enter
push
xor
jbe
stos
cmp
or
je
mov
pop
test
call
jle
call
test
inc
sub
cmp
lods
and
push
mov
movsl
int3
aas
aam
lahf
punpckhdq
sbb
sbb
jp
add
adc
push
les
mov
lods
lret
inc
test
and
xchg
pop
bound
movsl
push
mov
pushf
push
inc
stos
jg
bound
shll
insl
pushf
pop
sti
jae
xchg
sbbb
out
sbb
add
sbb
mov
dec
xlat
inc
and
sub
sbbl
call
sbb
xor
cmp
pusha
xlat
cmp
rorb
movsb
push
loop
clc
outsb
or
jg
sub
gs
pushf
outsl
mov
push
call
das
int3
jo
addr16
sbb
push
loop
lcall
dec
sub
or
imul
adcl
mov
jl
push
cld
aaa
orb
cli
or
jo
insb
or
loop
dec
fidivrs
arpl
cmc
sbb
je
mov
inc
mov
xchg
mov
sbb
testb
xor
rolb
dec
scas
cmp
adc
xchg
and
mov
scas
cmp
mov
pop
push
xor
js
movsl
xor
mov
inc
mov
je
js
ljmp
push
cmpsl
cmp
lods
cmp
sbb
sub
in
sbb
cmp
shll
pop
fstpt
add
jg
mov
lahf
sbb
jae
xchg
inc
int
and
aaa
aaa
mov
mov
scas
leave
cmp
push
lea
xor
pushf
xor
fs
fimuls
adc
jmp
xor
mov
xchg
xlat
inc
aam
dec
lea
dec
sub
cmp
push
aaa
ret
mov
jns
pusha
enter
les
lret
dec
rolb
shlb
add
sub
repz
xchg
adc
ljmp
stc
scas
xchg
or
mov
popf
lods
lret
inc
rcr
into
test
dec
sub
add
mov
mov
cmpsl
ret
jnp
xchg
testb
xchg
jb
in
bound
inc
and
aaa
sbb
dec
lret
pop
ds
inc
int
and
push
popa
call
hlt
jp
jp
inc
int
and
aaa
dec
ret
ret
inc
shll
mov
into
pop
cmp
and
lahf
punpckhdq
cltd
push
dec
mov
mov
test
cmp
jg
js
ljmp
mov
test
stc
notl
cmc
insb
loop
je
pop
xchg
adc
lea
mulb
push
loope
adc
xor
sub
popa
and
mov
xchg
mov
fistpll
movsb
imul
and
dec
icebp
jbe
cmpl
test
jge
out
lock
bound
xchg
je
or
addr16
jge
idivl
pop
xlat
inc
and
xor
xchg
jb
imul
adc
popa
pop
xlat
inc
and
and
add
and
and
dec
fdivrs
ret
xchg
fs
pop
repnz
int3
inc
rolb
sarb
cs
inc
jecxz
push
in
gs
insb
or
mov
imul
insl
ret
sbb
inc
and
ja
or
push
xor
cmpsl
cmpb
das
ficompl
movsb
ret
ds
fnstenv
out
sti
sahf
insl
lea
inc
les
int3
and
inc
ret
ret
xor
int
shlb
mov
inc
mov
stos
daa
mov
and
pop
inc
and
jns
xchg
add
pop
xchg
sbb
sub
inc
ret
cmpsb
push
mov
test
jge
lds
mov
test
cmp
jecxz
out
jo
cmpsb
xor
scas
or
or
pop
add
push
xor
and
test
dec
fdivl
in
lcall
push
xchg
repz
mov
mov
repnz
cwtl
xor
popa
icebp
nop
arpl
lret
push
lds
cmp
popa
jg
jae
in
dec
in
bound
dec
sub
xor
addr16
sbb
jbe
cmpl
push
shlb
bound
mov
movsl
daa
mov
and
ds
mov
fnsave
in
and
pop
mov
shll
inc
daa
shlb
sbb
jbe
xchg
add
mov
rcll
push
cmpsl
mov
xchg
sbb
das
mov
jl
jns
jmp
inc
rolb
sarb
cmp
femms
xchg
or
insl
jle
jnp
in
pop
repnz
lahf
push
loopne
out
mov
ss
pop
test
into
push
mov
cli
popf
insb
lds
gs
dec
andl
shlb
test
jle
mov
lea
push
xchg
push
test
push
pushl
fs
sbb
outsl
lcall
and
push
mov
in
cli
pop
fimuls
ud0
mov
or
sub
pusha
pop
repnz
popa
icebp
nop
arpl
movsb
inc
stos
sub
add
add
jg
push
fisttpl
mov
scas
lret
mov
mov
loope
adc
add
jl
jle
call
shlb
sub
and
mov
loope
cmpsb
in
je
lea
cmp
mov
sti
and
adc
ret
push
lds
in
je
sub
inc
xlat
mov
clc
cmp
and
or
stc
pop
pushf
xor
inc
push
roll
shll
rclb
mov
and
pop
fcompl
test
mov
cmp
int
push
mov
aas
pop
test
mov
push
test
inc
shll
push
xor
and
dec
sub
and
inc
xchg
or
ret
push
lds
test
mov
sbb
xchg
pop
xchg
repnz
cmp
je
jbe
loopne
inc
fisttpl
fnstsw
cmp
pop
push
int3
inc
and
pop
jb
es
mov
push
mov
mov
test
pop
test
leave
push
lret
jmp
sub
rolb
rclb
popa
icebp
nop
arpl
push
mov
and
xchg
jb
insl
push
aam
sub
or
jns
mov
test
xchg
icebp
add
mov
xchg
lock
in
data16
xchg
outsb
leave
add
push
fisttpll
out
or
dec
lret
pop
ds
xor
push
lds
rcrl
fs
dec
fdivl
in
loop
out
jno
jo
jbe
loopne
sub
es
inc
mov
jecxz
ljmp
push
dec
sbb
adc
lret
push
mov
movsb
ret
ds
sbb
mov
rclb
cmpsb
push
in
mov
pop
enter
loop
or
je
mov
test
pop
lcall
addl
icebp
add
lock
xorl
jnp
push
roll
sarl
test
mov
loopne
adc
push
pop
lcall
hlt
xchg
outsb
mov
jnp
in
dec
sbb
test
into
cmpsl
das
mov
popf
or
xchg
add
stc
imul
enter
xlat
inc
fidivrl
fdivrl
outsl
or
les
les
jb
in
mov
mov
sbb
mov
hlt
outsb
cld
fwait
jbe
adc
in
sbb
scas
movsb
ret
ds
sub
sub
add
add
xlat
dec
fidivrs
jae
in
mov
fwait
push
lods
and
xor
mov
inc
mov
cmp
adc
aas
mov
pop
fdivl
in
divb
xorl
add
pop
fimuls
or
pop
int3
stos
data16
push
pushf
xor
inc
dec
rcll
xchg
aaa
mov
addr16
jg
jmp
push
in
out
jl
negb
cmp
je
lea
or
cmpsb
movsb
ret
ds
cmp
in
jns
mov
and
pop
adc
fisttps
mov
mov
cmp
gs
pushf
outsl
les
add
sub
loop
pop
loop
ss
aas
pop
test
jae
daa
std
insl
hlt
pop
mov
jp
jp
mov
jle
or
inc
aam
dec
lcall
jne
imul
sbb
pop
cmp
xor
jp
and
divb
xchg
lret
dec
fdivrl
cld
fwait
jbe
sub
mov
loop
dec
ret
mov
sub
xorb
stc
imul
mov
out
jl
negb
inc
aam
sub
fs
pop
movsb
cmp
or
dec
fistpll
ljmp
cmp
and
std
test
push
int
and
jl
lds
iret
jb
dec
fstpt
out
jo
xchg
or
insb
loop
je
shlb
xorl
mov
jmp
push
xor
daa
stos
sub
roll
shll
out
push
aam
shll
enter
xchg
or
jne
insl
std
test
push
xchg
add
xor
in
sbb
es
popf
or
js
mov
dec
fistpll
frstor
and
and
jmp
mov
int
repnz
cmpsl
mov
movsl
xor
mov
pop
int3
inc
and
daa
inc
mov
popa
cli
push
ljmp
stc
scas
ljmp
mov
flds
mov
stc
mov
test
mov
popf
lahf
cmp
mov
ret
into
dec
ret
orb
sbb
outsl
inc
push
xor
cs
push
xor
sub
push
stc
jle
mov
pushf
outsl
subl
and
pop
std
jne
mov
mov
mov
in
pop
into
test
imul
pop
aad
enter
xor
in
pusha
notb
cmp
inc
mov
ret
inc
xlat
inc
and
js
scas
aas
pop
test
cwtl
imul
mov
lea
movsl
xor
cmp
rorl
mov
pop
and
jl
cld
xchg
cmc
add
xchg
mov
sbb
testb
jmp
jge
loopne
adc
xor
arpl
fidivrl
add
je
add
enter
mov
sbb
shlb
rcr
int
xchg
sti
push
decl
sbb
imul
test
insb
or
out
test
mov
and
xor
pop
roll
rcrl
xchg
pushf
sti
push
clc
rorb
push
mov
gs
pushf
outsl
repz
je
insb
into
inc
shll
shlb
and
out
sub
insb
loop
je
rclb
pop
mov
inc
scas
or
push
lret
sti
mov
xchg
adc
jg
jp
in
pop
faddl
dec
in
ret
ret
mulb
push
mov
cltd
sbbl
leave
pop
cmp
jle
insb
loop
je
sub
lds
dec
int3
inc
and
adc
bound
rorb
pop
jp
jne
sbb
das
test
pop
test
and
clc
adcl
test
xchg
jb
insl
fs
jge
notl
ret
push
lds
inc
enter
es
sbb
or
in
idivb
push
cld
adc
nop
fs
mov
add
sbb
add
xor
popf
or
pop
int3
stos
data16
mov
gs
jle
sbb
push
xor
push
shlb
and
movsb
cmp
mov
in
cmp
adc
and
push
cmp
jp
mov
or
iret
pop
cmp
push
push
repnz
pop
bnd
mov
pusha
loope
adc
pop
xchg
push
test
push
call
dec
sub
popa
add
sbb
shll
mov
push
mov
js
pusha
lret
mov
mov
inc
jecxz
lret
pop
ds
push
add
dec
sub
cmp
add
int
push
inc
add
aad
ret
xor
lods
cmp
mov
jecxz
fwait
or
pop
js
jl
notb
adcl
test
add
add
fimuls
pop
jmp
insb
outsb
cld
fwait
jbe
push
popf
or
mov
inc
mov
test
movsl
int3
aas
mov
lock
lret
inc
fmuls
fsubrs
call
push
cmc
gs
jp
push
test
push
lret
mov
or
xor
xor
orb
decb
xchg
mov
fsubrs
rcr
shlb
lahf
push
insb
in
sbb
pop
cmp
es
add
adc
xor
rcll
sub
jb
in
sahf
or
in
cld
mov
mov
sbb
add
xchg
add
sbb
aad
push
ret
ret
push
lret
mov
xlat
inc
and
js
lea
stc
imul
int3
stos
iretw
outsl
mulb
inc
dec
aad
sub
je
data16
xchg
outsb
xchg
add
cmp
addb
sbb
push
inc
aad
dec
lret
nop
testl
sbb
adc
push
cmp
sub
xchg
add
jo
lcall
addr16
pop
cli
jle
mov
mov
cmpsl
mov
rcr
push
shlb
shll
jno
outsb
or
push
inc
enter
sub
xchg
add
jo
nop
push
popa
nop
jns
mov
test
test
push
mulb
loopne
out
jo
mov
mov
ffreep
push
les
sub
push
call
and
lds
iret
cmp
mov
jmp
loope
jae
and
fs
pop
or
je
inc
push
inc
add
sahf
fst
movsl
jns
fnstsw
fst
movsl
movb
mov
out
dec
fdivrl
in
mov
repz
in
xchg
pop
xchg
adc
sbb
mov
and
cmp
aam
mov
lods
mov
cmpsl
sub
jmp
in
je
dec
or
pop
xchg
pop
bound
aam
jmp
add
nop
jp
gs
or
inc
aam
dec
cmpsb
rolb
mov
mov
add
add
pop
push
xchg
cmp
dec
fmuls
fdivs
mulb
push
in
out
sbb
out
adc
jne
ljmp
stc
mov
sbb
lods
and
or
push
pop
jp
and
ds
xor
cmp
pusha
notb
add
inc
inc
push
xor
sub
dec
adc
add
cmpsl
aaa
ror
jmp
xchg
add
jnp
mov
ficompl
stos
data16
dec
fdivrl
sbb
adcb
push
fimull
ficoml
orb
cli
or
inc
enter
mov
jmp
cmp
push
fisttps
fistl
mov
shll
mov
aas
scas
lret
and
gs
popa
add
adc
ljmp
iret
pop
enter
xchg
or
lds
iret
jnp
setg
or
sbb
xchg
icebp
add
ds
xchg
setg
or
xor
popl
jmp
loope
sahf
or
cmpsb
and
mov
divl
jl
ss
push
call
jmp
xchg
pop
bound
inc
mov
mov
mov
pop
int
addr16
push
lds
jbe
add
stos
data16
scas
cmp
mov
cmpsb
es
cs
mov
sbb
xor
sbb
inc
lds
iret
sub
jb
dec
iret
pop
cmp
jmp
pop
or
xchg
jo
cmc
gs
pop
xchg
sbb
aad
out
int
fidivrl
inc
push
jmp
outsb
mov
mov
js
pusha
scas
and
xor
call
push
lret
pop
ds
xor
cmp
jmp
daa
mov
and
push
pop
jp
jge
sub
ljmp
lahf
push
fildl
jmp
add
repnz
adc
jb
jns
jmp
enter
pop
notl
mov
jmp
inc
fdivl
in
add
punpckhdq
lods
pop
fisubrl
mov
js
jmp
add
int3
aas
jmp
or
insb
in
bound
fdivrs
pop
mov
jmp
lret
scas
pop
mov
adc
out
cli
or
jmp
pop
aad
sub
push
pop
xchg
add
sahf
jo
xor
int
fcom
pop
repnz
xchg
lods
cmp
and
push
call
jmp
add
std
or
das
mov
inc
mov
dec
outsl
andb
and
lea
jmp
into
insb
loop
je
popf
lods
lret
inc
roll
xor
sbb
jmp
jge
push
movsb
cmp
dec
cmp
xchg
adc
mov
js
jmp
add
repnz
pop
repnz
stos
cmp
dec
ficomps
scas
pop
cld
mov
scas
mov
jmp
loop
je
movsl
sub
es
cs
xchg
pop
mov
les
jns
jmp
xchg
add
std
or
les
pop
sti
mov
lds
jmp
or
pushf
xor
dec
aas
stos
cmp
or
adc
call
jmp
ja
xorb
cwtl
push
imul
rcll
and
mov
lea
jmp
jg
outsb
or
sbb
aam
xchg
add
jp
jmp
mov
sahf
stc
or
out
es
fsubr
fs
popf
insb
push
jmp
xorb
push
fimuls
push
mov
call
jmp
adc
jbe
cmpl
or
in
mov
jecxz
das
mov
lea
jmp
in
dec
frstor
aad
mov
push
xchg
add
xor
inc
addr16
adc
or
adc
add
push
jno
xorb
cmp
cli
push
xchg
repnz
jmp
sub
and
or
mov
jns
jp
in
pop
mov
and
jmp
cwtl
imul
lock
bound
shlb
sub
xchg
sbb
push
in
jb
push
cld
adc
sbb
jbe
pusha
pop
repnz
sbb
push
les
loop
je
js
add
cmp
pop
iret
stos
pop
mov
push
jmp
and
and
add
std
or
sub
aaa
push
mov
and
cmp
mov
pop
stos
cmp
scas
aas
pop
test
loope
lea
jmp
frstor
mov
sub
arpl
imul
arpl
xor
jmp
pop
xchg
repnz
mov
std
or
fs
mov
jle
lea
jmp
ss
cmp
pop
pop
xchg
add
lods
cmp
jmp
sbb
or
hlt
mov
inc
rolb
shlb
icebp
popa
add
jmp
loope
push
into
pop
cmp
jg
rclb
jg
add
dec
fdivrl
loop
inc
psubsb
sbb
das
stos
cmp
dec
je
cmp
jo
sub
jmp
lea
pushf
xor
inc
xchg
push
mov
es
mov
xchg
jmp
repnz
fmull
movsb
push
mov
push
repnz
jmp
scas
cmp
mov
adcl
stos
cmp
inc
inc
rolb
shlb
roll
shll
filds
cli
and
push
cmp
roll
aad
je
mov
jae
jmp
adcb
subb
cmp
inc
call
cmpb
and
adc
fs
jmp
enter
dec
stos
std
jb
xchg
mov
sar
jmp
or
push
push
xor
daa
cs
push
lds
mov
mov
dec
ret
jmp
or
fwait
jbe
aad
shlb
std
test
lret
pop
int3
stos
rolw
mov
jmp
in
jg
or
dec
fisttpl
frstor
ja
loope
mov
push
push
add
movsl
push
std
repnz
std
test
mov
xchg
adc
or
test
push
mov
sub
push
push
push
call
pop
lret
inc
fidivrl
jmp
xchg
adc
ja
xor
loopne
adc
adc
test
add
stos
dec
add
test
and
or
cmpsb
dec
mov
mov
jmp
push
leave
pop
cmp
cmp
scas
pop
lea
insb
loop
je
dec
shr
sbb
jnp
lea
fdivl
in
pop
ret
ret
inc
aad
dec
lret
sbb
sub
jmp
mov
bound
or
addr16
sbb
stc
jmp
xchg
insl
out
jg
jmp
dec
mov
in
jmp
and
add
insb
lret
rcrl
stos
pop
lods
push
xchg
add
iret
pop
cmp
xor
sbb
add
outsl
loope
adc
or
jae
in
add
jne
roll
sub
jmp
rclb
push
pushf
dec
fdivl
in
inc
xlat
mov
movsl
and
in
out
jno
stos
aaa
cmpsl
ret
lock
adc
jmp
add
add
pop
ljmp
nop
dec
xlat
inc
and
jbe
stos
cmp
sbb
add
popf
insb
jmp
jmp
push
in
insb
push
fisttpl
fisttpll
sbb
inc
lds
add
add
adc
adc
pushf
xor
inc
jns
mov
jmp
fs
pop
lds
movsb
push
mov
sbb
xchg
or
push
lods
sub
sbb
std
inc
push
ret
cmpsb
push
mov
inc
mov
test
jae
pop
int
sbb
std
pushl
push
movsb
push
mov
xchg
lret
pop
enter
out
out
jno
lea
jmp
scas
lret
fcoms
cmpsb
push
hlt
adc
push
sbb
lahf
pushf
or
or
push
xor
jns
add
jmp
movsl
pop
rcll
jbe
cmp
inc
aam
dec
leave
std
jge
je
push
jmp
sub
pop
or
xchg
loop
cli
popf
insb
test
mov
sbb
add
cmc
add
in
std
test
cwtl
adc
sub
lea
add
std
or
ds
inc
mov
push
xchg
add
jnp
adc
mov
pop
ret
movsb
push
mov
pop
pop
leave
ret
call
jmp
sbb
dec
fstpt
xchg
repnz
fists
pop
sti
pushl
lea
jmp
xchg
pop
inc
enter
sub
ret
xor
mov
mov
and
outsb
add
insb
or
mov
sub
xchg
and
pop
lds
mov
mov
mov
jg
jnp
sub
roll
sarl
sub
gs
pushf
outsl
into
push
mov
enter
push
int3
inc
and
lahf
cli
or
jmp
into
cmp
je
arpl
pop
repnz
test
repnz
lock
adc
xlat
lea
sahf
stc
or
ficoms
pop
mov
sub
les
mov
shll
and
push
icebp
jle
mov
sbb
push
or
sub
pushf
or
cld
insb
loop
je
xor
and
notl
sub
das
sahf
or
rolb
shlb
rcrl
pop
in
rcrl
pop
into
je
arpl
cmc
dec
xchg
or
xor
mov
jle
and
jle
mov
xchg
mov
and
xchg
jne
gs
sub
pop
iret
stos
pop
sbbl
jnp
mov
jg
push
lock
jnp
mov
lret
dec
frstor
gs
jge
mov
inc
mov
mov
or
sbb
or
jne
out
adc
or
push
xor
sub
test
jge
gs
xchg
testb
lea
xchg
jb
jp
stos
cmp
or
push
int
in
sbb
jg
bnd
jne
out
add
jg
stc
popa
icebp
nop
arpl
jge
or
or
xor
dec
icebp
adc
icebp
outsb
cld
fwait
jbe
or
gs
outsb
fs
or
je
mov
add
jno
push
ret
cmpsb
push
xchg
push
lds
shlb
into
inc
jmp
xor
sbb
movsb
pop
scas
call
jmp
imul
push
imul
fs
call
jmp
xchg
sub
out
and
jns
mov
xor
fdivrp
jmp
mov
dec
mov
or
add
add
mov
inc
mov
setne
jmp
mov
mov
dec
fdivrl
and
sbb
outsb
or
jg
sub
hlt
push
cld
sub
arpl
cmc
jmp
lcall
inc
and
xor
mov
xor
fistps
push
jmp
daa
mov
fcoml
mov
popf
in
mov
adc
jmp
test
fstl
mov
mov
lret
lret
insl
std
test
in
jmp
enter
js
mov
and
rclb
push
pushf
sub
push
jmp
enter
testl
xchg
pusha
mov
mov
clc
lock
bound
add
add
adc
rolb
iret
pop
cmp
push
mov
es
sbb
adc
add
pop
jp
adc
mov
mov
jmp
push
mov
cltd
clc
or
mov
cld
jp
jp
cmp
sbb
pop
jp
jns
mov
scas
sub
in
bound
or
inc
aam
repz
lea
xor
inc
jecxz
loop
je
jno
int3
inc
xlat
mov
mov
mov
sti
push
jecxz
sbb
fisttps
fimuls
mov
xor
dec
jp
jl
negb
add
sbb
cmp
sbb
sbb
and
das
xchg
cltd
add
or
aad
xchg
inc
push
xchg
repz
mov
and
fistps
ret
ret
insb
loop
je
inc
push
xor
das
push
xchg
add
or
int3
ja
add
nop
arpl
test
jmp
pop
xchg
add
jno
loopne
std
out
call
jmp
add
mov
inc
mov
add
pusha
pop
bnd
push
lea
jmp
test
xchg
repz
call
int3
sub
inc
cmpsb
dec
jmp
and
cmp
dec
movsb
and
test
and
sbb
xchg
addr16
mov
sbb
and
and
pop
xor
test
add
std
or
jp
gs
or
out
mov
inc
mov
push
jmp
adcb
loop
fcompl
inc
and
mov
sub
sbb
stc
call
jmp
lock
adc
scas
aas
pop
test
mov
dec
sub
inc
push
and
jmp
mov
xchg
xchg
or
add
jmp
rcl
inc
add
mov
xor
push
mov
mov
inc
shll
rolb
dec
and
jge
mov
cmpsb
shll
xor
rolb
jmp
xchg
adc
into
dec
fnstcw
push
cmp
das
pop
stos
jns
sbb
imul
jmp
mov
pop
stos
inc
xor
cltd
or
push
mov
add
or
sar
jmp
movsl
xor
in
jge
testl
scas
addr16
insl
hlt
pop
lods
push
lret
fs
jmp
jbe
jg
jmp
cmc
add
add
mov
sbb
sub
js
xchg
adc
lock
bound
jmp
or
cmp
mov
lods
pop
nop
push
popa
nop
jo
mov
inc
mov
mov
mov
mov
jns
push
stos
cmp
or
lret
pop
ds
mov
fmull
call
add
insb
lahf
je
xchg
mov
adc
jmp
rolb
add
lock
push
sub
pop
roll
aad
xchg
add
add
cmc
add
call
and
pop
xchg
repnz
mov
and
in
rolb
add
jmp
mov
inc
add
xchg
lock
fsubrs
movsb
cmp
jmp
mov
inc
add
pop
stc
imul
enter
mov
movsb
ret
ds
rolb
jmp
data16
jae
xchg
fcomps
stos
data16
in
push
lahf
push
mov
xlat
adc
orb
decl
call
push
repnz
and
push
jmp
or
leave
cmp
xchg
mov
rcll
and
inc
shlb
inc
jmp
or
jae
in
xor
xchg
pop
xchg
repnz
cwtl
pop
add
push
xchg
pop
bound
mov
lods
imul
repnz
sbb
cmpsb
push
in
xchg
add
cmp
and
or
cltd
or
xor
imul
test
sub
lds
in
aad
dec
lret
push
jl
jne
bound
mov
inc
mov
arpl
flds
jmp
push
les
addr16
js
loope
adc
data16
sbb
dec
lea
jmp
in
insb
loop
je
push
pop
jp
xchg
testb
sarb
movsl
and
or
in
imulb
mov
addr16
jmp
xor
int
shlb
dec
orl
out
popa
icebp
nop
arpl
jmp
ret
mov
push
aaa
ret
jp
jp
stos
cmp
jmp
lcall
hlt
push
push
push
xor
xchg
and
mov
mulb
mov
jmp
and
add
jno
xorb
es
cs
cmp
push
int
jmp
and
add
repnz
cmp
cwtl
cmp
push
xor
dec
enter
add
add
adc
inc
mov
push
testl
jns
jmp
sahf
jle
ljmp
fwait
decb
decl
call
call
jmp
insb
loop
je
and
rclb
mov
inc
daa
shlb
rclb
lea
jmp
and
cmp
insb
loop
je
ss
inc
mov
fistpl
stos
data16
gs
add
pop
and
sbb
or
push
xchg
sbb
mov
adc
iret
inc
shll
jno
jecxz
test
test
cmp
sub
mov
mov
sbb
bswap
cwtl
push
pushf
sti
push
hlt
inc
ss
cltd
mov
jmp
mov
add
inc
into
pop
cmp
sbb
ljmp
and
jmp
mov
jne
out
add
test
jge
js
push
xor
es
push
test
inc
mov
mov
mov
and
aam
shlb
add
jmp
push
lahf
push
ret
push
les
and
pop
call
jmp
sub
mov
cli
jnp
mov
rcrb
stos
data16
mov
xchg
lea
jmp
int
int3
stos
xchg
or
xor
add
outsl
sub
int3
rolb
push
mov
clc
lahf
push
adc
lcall
int3
rolb
hlt
dec
inc
and
ja
in
sbb
push
stos
cmp
fdivl
add
jmp
inc
cli
gs
pushf
outsl
ficoml
mov
leave
pop
cmp
dec
sti
jmp
inc
jns
and
xor
pop
leave
test
mov
fnstsw
xchg
xchg
icebp
add
inc
scas
scas
sub
stos
cmp
inc
or
or
nop
push
popa
nop
pop
idivb
je
imul
or
jg
data16
xchg
outsb
mov
dec
ret
movsb
push
mov
mov
out
sbb
fimuls
mov
mov
sbb
outsb
clc
outsb
or
sbb
aad
enter
and
jo
mov
jmp
xor
scas
pop
cmpsb
inc
shll
push
xor
data16
push
int3
jmp
cmpsl
push
sti
and
xchg
push
pushf
sti
push
mov
xchg
and
push
jmp
inc
and
sbb
pop
movl
daa
inc
mov
mov
cmpsb
jmp
ror
dec
ret
mov
popa
ficompl
stos
data16
je
lea
push
jmp
add
jo
imul
es
mov
loope
cltd
push
fs
jmp
jno
xorb
dec
frstor
and
and
out
jg
jmp
xor
jmp
int3
inc
and
int
cmpsb
leave
pop
int
xchg
and
sub
cvtdq2ps
pop
cmp
jno
ret
ret
std
insl
hlt
pop
mov
test
pop
test
jmp
cli
popf
insb
roll
mov
mov
inc
mov
xorb
mov
jmp
sub
mov
mov
adc
loopne
adc
push
mov
sbb
and
sub
xor
dec
sub
pop
bound
inc
mov
jb
outsb
or
sbb
test
arpl
cmc
cmp
sbb
add
leave
cmp
xor
lret
inc
aad
dec
movsb
gs
jl
sbb
add
xchg
push
xchg
repz
sti
add
pop
int
and
push
mov
mov
and
add
adc
lea
xchg
add
adc
in
sbb
sbb
adc
add
mov
fs
push
and
inc
fidivrl
scas
push
pop
sbb
xchg
dec
add
xlat
dec
add
dec
add
fmuls
cli
fmuls
lods
fmuls
push
cltd
and
dec
add
fimull
into
fimull
nop
fimull
and
dec
add
sar
jmp
mov
cmp
push
lds
or
rcrb
scas
pop
mov
dec
fisttpll
fimull
push
popa
nop
pop
xor
xchg
sbb
jmp
scas
and
aad
sub
sub
lods
and
pop
imulb
sahf
insl
sahf
pop
ret
and
pushl
push
in
jb
xchg
jle
call
jmp
stc
imul
ljmp
lods
pop
test
mov
lea
jmp
fimuls
movsb
push
xchg
outsl
ljmp
stc
in
mov
mov
mov
sbb
fwait
xor
call
jmp
lods
cmp
fs
popf
insb
mov
test
sub
inc
lret
fs
jmp
mov
negb
xchg
add
sahf
jo
rcll
and
dec
call
jmp
sbb
out
lock
bound
push
add
int
repz
jmp
mov
aam
call
pop
mov
js
popa
sub
in
pop
mov
push
add
pop
jp
ds
jmp
cmp
lret
lret
jo
xorl
pop
ljmp
shll
xchg
pusha
loop
pop
loop
xchg
push
test
push
clc
popf
and
jmp
mov
cmp
push
test
nop
testl
shlb
xchg
nop
testl
jl
add
or
mov
inc
mov
xchg
mov
push
add
cmp
xor
ret
ret
insb
or
repnz
ffree
sarb
jmp
push
add
ret
mov
mov
push
xor
jmp
dec
mov
mov
ljmp
int
pop
int
sbb
call
mov
cld
lds
test
lock
sub
lret
jmp
es
xchg
scas
cmp
mov
shlb
in
or
sbb
or
fs
jmp
lds
mov
and
mov
es
add
sbb
insb
xor
fmuls
fdivs
rorl
dec
stos
pop
pushf
xor
jmp
sub
lcall
fwait
decb
inc
mov
mov
scas
push
jmp
and
daa
mov
and
sbb
outsb
cld
fwait
jbe
mov
mulb
mov
inc
mov
pusha
cmc
gs
pop
mov
mov
and
in
out
jno
in
jmp
add
iret
stos
pop
shll
jl
negb
pop
int3
stos
data16
add
sbb
or
nop
or
in
mov
mov
decb
sbb
mov
std
das
xor
data16
adc
nopl
sbb
mov
inc
aad
dec
lods
dec
roll
aad
popf
sbb
xor
stc
imul
cmp
fmuls
fdivs
stos
and
xor
sbb
daa
cmp
mov
xchg
repz
cli
mov
mov
and
xor
jmp
pop
ds
pop
leave
pop
cmp
or
insb
stc
imul
nop
jmp
ljmp
fiaddl
mov
mov
mov
adc
inc
push
jmp
cmp
and
mov
lds
test
gs
jp
aad
sub
jmp
ljmp
stc
mov
lret
sti
imul
sbb
lock
and
jmp
pop
mov
xor
cmp
mov
mov
dec
fdivrl
sbb
inc
and
js
dec
fnstcw
xchg
repz
cmpsl
shlb
gs
fimuls
popa
xchg
xor
and
mov
inc
mov
push
jmp
shll
fstps
xchg
mov
xchg
add
sahf
jle
insb
or
call
or
ds
dec
mov
shlb
mov
in
scas
call
jmp
roll
aad
sbb
popl
std
or
insb
in
sbb
test
jmp
jp
imul
sbb
cmpsb
xor
scas
inc
push
xchg
add
gs
sbb
jecxz
dec
fldt
stos
cmp
or
lret
or
lods
and
jmp
pop
lret
scas
pop
mov
ret
ret
or
xchg
add
bound
lcall
stos
cmp
adc
cmc
gs
dec
cltd
jmp
decb
lods
pop
jmp
lret
lret
test
xchg
mov
rolb
sbb
aad
out
mov
jge
imul
in
sbb
rolb
in
sti
aam
mov
push
lds
std
jbe
cmpl
mov
jmp
dec
fistpll
pop
cmp
sub
mov
inc
mov
push
add
mov
push
lret
pop
ds
hlt
cmp
and
call
test
je
push
call
pop
mov
push
call
jmp
call
jmp
popa
icebp
nop
arpl
ret
mov
inc
mov
and
cmp
dec
mov
add
push
js
add
fstpl
test
loop
je
cs
pop
lods
or
dec
ret
lahf
rcrb
test
mov
data16
xchg
outsb
mov
jmp
roll
sarl
push
fdivl
in
jbe
jp
in
add
mov
inc
mov
push
jmp
jecxz
loopne
jb
sti
jae
xchg
xor
dec
cmpsb
xor
jmp
std
or
mov
fst
dec
fistpll
insl
hlt
pop
lods
hlt
jae
xchg
in
jmp
xor
add
mov
gs
and
mov
outsb
icebp
popa
add
inc
icebp
push
shr
xor
add
jge
or
lahf
punpckhdq
shlb
cmpsb
es
cs
adc
in
xor
add
jmp
xlat
push
mov
inc
and
and
pop
aaa
ret
push
lds
loope
push
xlat
jno
push
mov
and
push
push
xor
mov
addl
mov
mov
cmp
je
cmp
jne
call
cmp
je
push
call
pop
mov
mov
addl
call
cmp
je
push
call
pop
mov
cmpl
jbe
push
call
pop
mov
mov
cmp
je
call
cmp
je
push
call
pop
mov
mov
cmp
je
call
cmp
je
push
call
pop
mov
mov
cmp
je
call
cmp
je
push
call
pop
mov
push
call
call
call
jmp
out
adc
or
scas
cmp
mov
jg
jns
jmp
dec
fdivl
in
lods
and
loop
add
mov
in
jbe
jge
testl
xor
jmp
stos
pop
shrb
add
pop
cwtl
or
jmp
push
in
insb
jnp
dec
sub
jmp
js
mov
pop
pushf
xor
inc
push
aad
sub
cmp
lods
lret
inc
movsb
pushf
sbb
mov
dec
into
pop
cmp
cmp
xchg
add
jnp
scas
cmp
mov
sbb
sbb
aaa
push
fisttps
fldcw
ljmp
cmpsl
sub
jmp
clc
outsl
test
lods
and
inc
mov
mov
sbb
ljmp
sbb
in
sbb
cs
lret
lret
stos
cmp
inc
mov
out
in
jmp
sbb
sete
insl
pushf
sub
dec
fdivrs
adc
sbb
mov
aad
dec
cli
repnz
cld
fwait
jbe
pop
les
int3
jnp
mov
jmp
jl
add
xchg
adc
ret
ret
dec
fdivrl
sbb
add
xchg
icebp
add
mov
int
mov
dec
mov
cmp
add
add
adc
xchg
cmc
add
and
js
xchg
pop
bound
jmp
adc
or
sbb
push
dec
fstpt
stc
cwtl
imul
sti
push
sahf
or
cmpsb
add
dec
ret
xchg
das
mov
sbb
or
lea
stos
cmp
or
xor
les
xchg
shrl
mov
jmp
xor
sbb
dec
fdivrl
cli
popf
insb
fildl
mov
jmp
inc
mov
jbe
dec
sub
dec
sub
pop
dec
lret
lret
lret
pop
ds
jmp
lds
lret
inc
movsb
les
mov
stos
ds
and
mov
cltd
clc
or
insb
out
adc
or
icebp
popa
add
push
push
jo
loop
mov
sbb
out
mov
shlb
into
test
push
jno
imul
sbb
mov
test
stos
cmp
pop
pop
enter
outsl
or
xor
pusha
inc
fisttpl
adc
sbb
cmc
notl
xor
or
shr
test
out
flds
mov
out
add
les
int3
gs
mov
sbb
ja
mov
jns
aas
sbb
jp
dec
sub
pusha
rcll
jmp
test
lcall
scas
leave
cmp
and
divl
xorb
mov
jmp
and
push
shll
sbb
add
dec
ret
mov
fucomi
sbb
lods
pop
xchg
mov
scas
leave
cmp
stc
jne
mov
mov
shrb
and
jmp
mov
inc
add
pushf
outsl
test
cmp
and
sbb
shlb
ret
push
xchg
jb
gs
inc
mov
ja
jo
loop
add
jmp
inc
shll
pop
cmp
pusha
jge
jp
in
push
int3
push
shr
sti
popa
insb
or
mov
scas
cmp
mov
stos
xor
push
mov
inc
rep
jmp
sub
test
xchg
pusha
xchg
fs
pop
int3
push
ret
cmpsb
push
jmp
adcl
test
fimull
fidivrl
js
xchg
cmc
add
scas
sub
inc
aad
shr
sbb
xlat
jb
lea
jo
xorl
int3
sub
jmp
sbb
fcoms
pop
mov
push
mov
shrb
outsl
or
out
in
in
jg
dec
sbb
push
add
and
roll
shll
sets
imul
enter
outsl
mov
mov
iret
pop
cmp
popa
setne
sub
jmp
daa
mov
and
inc
icebp
cli
data16
xchg
outsb
pop
rcll
jmp
sahf
or
cmpsb
and
sbb
push
insl
std
test
pop
fmuls
fdivrs
ja
gs
jmp
inc
aaa
cmpsl
ret
cmp
push
sbb
jp
adc
in
sbb
jp
sbb
in
cltd
adc
mov
inc
mov
cmp
xor
clc
inc
jmp
xor
push
pushf
outsl
popl
inc
and
pusha
pop
repnz
imull
jmp
call
push
in
jl
jne
and
push
cmc
xor
arpl
dec
fstpt
push
and
jmp
cltd
or
jns
inc
fidivrl
xor
dec
test
ret
outsl
in
lea
jmp
jmp
mov
leave
mov
fnstsw
aad
sbb
imul
insl
adcl
sbb
jle
sub
lds
sbb
jp
bound
mov
es
mov
fisttpll
sbb
xchg
or
add
std
or
loop
jmp
jmp
jge
and
es
int3
push
mov
test
cmp
mov
adc
add
cwtl
decl
fiadds
push
xor
sub
fcoms
inc
jmp
adc
add
call
iret
pop
cmp
cmp
dec
fdivrl
in
adc
add
adc
in
dec
mov
mull
fadds
pop
cmp
jmp
aad
sub
aas
cmp
popf
adc
xor
int
aam
test
push
jmp
adcb
out
mov
lock
xor
insb
or
in
lods
lret
inc
lods
test
sbb
adc
sub
sti
notl
arpl
outsb
or
dec
fiaddl
mov
push
jmp
adc
inc
stc
mov
adc
pop
rcll
push
sbb
sbb
jno
inc
daa
rclb
mov
jbe
imul
sbb
jmp
hlt
cld
ljmp
iret
mov
shll
inc
sub
ds
test
sbb
cld
jmp
repz
data16
xchg
outsb
leave
outsl
in
sbb
es
dec
fisttpl
jmp
icebp
jle
mov
adc
inc
and
sub
jmp
scas
pop
mov
cltd
or
insb
or
es
dec
mov
xor
push
jmp
adc
subb
pop
cmp
and
sahf
or
cmpsb
add
dec
das
fisubrl
addr16
xchg
jmp
adc
xor
and
jne
mov
imul
mov
pop
dec
add
testb
loop
jo
inc
and
push
icebp
jno
xorb
dec
add
mov
ficompl
scas
pop
mov
sub
loop
cli
popf
insb
test
dec
add
jmp
add
and
aaa
push
mov
fldcw
lret
jmp
jge
sbb
push
test
and
std
fcoml
cmpsl
push
mov
add
std
or
movsb
sub
add
pop
fisubrl
cmp
pushf
or
lcall
mov
mull
xchg
popa
lea
jp
in
push
and
mov
nop
rcll
sbb
std
jmp
repnz
aas
movsl
xor
jne
mov
hlt
push
lahf
push
sbb
std
ljmp
popa
icebp
nop
arpl
mov
mov
fimuls
popa
mov
mov
jmp
ret
mov
mov
ljmp
sub
and
jmp
stc
or
xor
push
les
mov
scas
jmp
cld
fwait
jbe
je
insb
or
push
jmp
add
add
cmp
sub
cmp
inc
jg
addr16
sbb
jp
jmp
add
fdivs
ret
dec
fdivrl
jb
in
repnz
lds
scas
pop
cld
repz
lock
bound
cld
jmp
or
xchg
add
pop
xchg
adc
xchg
sbb
mov
add
cwtl
outsb
add
aas
lret
pusha
notb
jno
jecxz
popa
jmp
add
adc
mov
int3
pop
iret
stos
pop
rorb
and
and
pop
cmp
jmp
jne
mov
cmp
adc
mov
outsb
mull
icebp
dec
or
pop
lds
iret
jp
daa
mov
and
stos
sub
cmc
daa
add
sbb
cmp
lds
sbb
xchg
adc
mov
gs
mov
jmp
add
pusha
ljmp
stc
cwtl
imul
sbb
fisttpll
out
inc
add
jmp
ljmp
stc
loope
sub
sub
dec
fistpll
push
jmp
popf
jne
loop
pop
loop
rorb
dec
test
xor
mov
sti
aad
repnz
mov
roll
popl
xchg
lock
inc
cmpsl
adc
adc
xor
fwait
or
mov
inc
roll
sbb
xchg
xchg
adc
sub
push
lds
add
push
popa
nop
js
add
std
or
or
insl
mov
les
orl
fnsave
enter
ja
mov
add
add
xor
add
xor
add
add
dec
xor
add
add
add
add
js
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sbb
add
xor
add
inc
xor
add
add
push
xor
add
add
js
add
xchg
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
insb
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
test
add
xchg
xor
add
xor
add
das
add
out
das
add
add
add
push
xor
add
xor
add
xor
add
add
adc
add
xor
add
xor
add
xor
add
xor
add
add
jecxz
inc
add
aam
add
arpl
gs
outsl
imul
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
outsl
fs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
jl
clc
cltd
ja
out
lea
testb
imul
outsl
outsl
ficoms
xchg
push
xor
pusha
add
add
test
sub
push
sbb
out
xlat
xlat
mov
stos
stos
dec
lcall
popf
addb
xchg
cli
adc
pop
pop
mov
inc
inc
mov
lock
in
lods
lods
inc
addr16
mov
mov
scas
inc
mov
movsb
movsb
push
xchg
jb
in
rol
ret
jne
std
std
loope
xchg
xchg
cmp
pop
ss
inc
aas
aas
jle
div
cmc
dec
int3
int3
sbbl
hlt
movsl
movsl
push
xor
in
or
icebp
stc
xchg
jno
loop
fcomp
stos
push
xor
bound
adc
add
push
mov
inc
pop
ret
ret
popf
sub
sbb
mov
add
lcall
adc
and
addb
es
int
daa
daa
dec
int
mov
lahf
jne
ljmp
sbbl
sbb
xor
sbb
ss
outsb
fsubr
pop
pop
mov
mov
push
movsb
dec
cmp
jbe
mov
mov
jge
sub
push
jecxz,pt
fnsave
das
pop
xchg
test
push
add
add
and
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
fnstcw
cmp
dec
dec
xchg
aam
dec
cwtl
call
iret
iret
test
sarb
in
stos
dec
push
sti
sti
in
lds
xchg
dec
dec
lcall
test
iret
inc
inc
mov
stc
stc
jmp
cmpl
mov
mov
test
dec
repz
push
mov
rolb
mov
xchg
aas
mov
cmp
jo
cmc
cmc
icebp
fistpll
ja
fcmovu
scas
arpl
and
adc
and
jmp
push
repz
insl
rcl
mov
adc
or
xor
in
in
ret
loope
pop
mov
int3
inc
inc
mov
pop
pop
cs
les
cmpb
inc
cmp
fs
mov
xchg
jae
out
pusha
pusha
rcrb
dec
sahf
jg
fsubl
jle
sub
nop
cmp
inc
inc
mov
out
out
sarl
adc
jns
fisubs
sbb
fcmovnu
lods
cmp
loopne
push
xor
fs
cmp
je
or
adc
dec
dec
xchg
or
push
or
and
dec
in
pop
mov
outsb
rcl
mov
cmpsb
bound
test
xchg
cmp
in
mov
repnz
out
inc
enter
aaa
aaa
outsb
mov
insl
fimull
aad
rorb
pushf
loopne
test
fdivr
push
push
lods
pop
hlt
hlt
repz
gs
jp
jmp
or
adc
mov
js
outsl
and
cs
and
sbb
icebp
cmpsb
cmpsb
push
mov
jae
mov
and
call
mov
and
pop
fisttpll
xchg
fdivrl
mov
nop
jo
loopne
ds
mov
jno
data16
fmuls
nop
add
div
notl
push
push
sbb
popa
popa
ret
xor
scas
sarb
xchg
pop
rol
daa
sbb
sahf
daa
cmp
loope
adc
clc
jmp
cwtl
cwtl
sub
adc
and
test
cmpsl
xchg
xchg
xor
push
push
cmp
xchg
leave
dec
into
into
xchg
push
push
stos
js
sub
movsl
mov
orb
sbb
mov
out
movb
mov
inc
inc
xorb
sub
push
lret
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
jl
clc
test
out
cltd
jnp
testb
imul
outsl
outsl
fidivs
xor
pusha
push
add
add
addr16
test
out
xlat
xlat
mov
stos
stos
dec
out
jbe
lcall
pop
popf
leave
leave
mov
jge
xchg
cli
out
adc
inc
inc
mov
lock
or
aam
addr16
std
scas
scas
inc
ljmp
push
divl
in
rol
pop
mov
jne
std
std
loope
xchg
xchg
cmp
push
ss
pop
aas
aas
jle
div
cmc
add
int3
orl
push
hlt
in
shll
icebp
stc
or
loop
fcomp
stos
jae
xor
adc
add
or
xchg
push
and
inc
gs
ret
popf
pop
sbb
xor
xchg
xchg
aaa
mov
lcall
or
adc
addb
cmp
daa
daa
dec
imul
or
sbb
sub
je
sbb
sbb
ss
pop
pop
mov
mov
push
movsb
idivb
cmp
mov
mov
jge
sub
push
jnp
jecxz
ds
das
pop
jno
test
xchg
push
push
cmpsb
cmc
rcl
mov
add
in
shrl
inc
pusha
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
lea
mov
jb
dec
dec
xchg
fimuls
aam
pop
mov
iret
iret
test
sarb
sub
sti
in
push
inc
inc
xchg
dec
dec
lcall
test
xchg
inc
inc
mov
stc
stc
jmp
push
jg
incb
cmp
js
lahf
lahf
and
jecxz
push
mov
incb
add
popl
lods
popf
popf
and
cmc
icebp
add
mov
ja
fcmovu
scas
jne
and
adc
and
jmp
sbb
repz
push
rcl
mov
dec
or
sbb
adc
xor
pop
pop
mov
mov
pop
pop
cs
les
bnd
cld
cmpb
enter
mov
sub
out
pusha
pusha
shlb
dec
sahf
rcr
fsubl
data16
push
jle
nop
cmp
inc
inc
mov
out
out
sub
adc
cmp
fisubs
loop
or
sbb
loopne
fstpt
xor
fs
cmp
je
or
adc
dec
dec
xchg
fildl
push
or
and
dec
insb
pop
pop
mov
pop
rcl
mov
out
bound
cmpsb
xchg
xchg
cmp
in
shll
jns
repnz
out
xor
enter
aaa
outsb
pop
insl
insl
fidivl
aad
mov
dec
dec
pushf
shrb
insb
fdivs
hlt
repz
ljmp
scas
jp
hlt
mov
or
sbb
js
mov
cs
jb
sbb
and
cmpsb
push
icebp
mov
jae
mov
push
call
frstor
pushf
pop
pop
and
xchg
fnstsw
mov
test
loopne
ds
mov
jno
data16
stos
dec
dec
nop
fadds
add
add
push
push
sbb
popa
popa
ret
xor
scas
stc
mov
xchg
xchg
rol
pop
sbb
sahf
daa
mov
clc
clc
jmp
cwtl
cwtl
sub
imul
jo
mov
mov
sub
and
jmp
xchg
push
stos
ljmp
sub
movsl
jp
mov
mov
mov
orb
gs
out
xor
test
push
inc
add
cltd
sub
nopl
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
arpl
jl
out
cltd
ja
testb
imul
imul
outsl
lds
push
xor
add
add
test
sub
out
xlat
mov
xlat
stos
dec
out
jbe
lcall
pop
popf
or
inc
leave
jge
xchg
out
adc
pop
inc
mov
inc
lock
or
lods
inc
in
lods
aam
addr16
pop
std
mov
pushf
and
movsb
jb
xchg
jb
fwait
pop
shlb
sbb
xchg
cmp
push
ss
pop
ss
jle
aas
div
add
int3
orl
push
hlt
movsl
in
xor
icebp
stc
or
jno
xchg
jno
stos
jae
xor
xor
or
xchg
push
and
and
popf
pop
ret
sbb
sub
xchg
aaa
mov
add
pop
push
or
adc
adc
fistpll
jmp
dec
imul
jne
lahf
jne
adc
or
pop
je
sbb
sbb
ss
outsb
pop
mov
pop
mov
movsb
notb
jbe
cmp
mov
mov
into
mov
push
jnp
jecxz
jecxz,pt
pop
jno
test
xchg
test
cmc
push
sarl
add
in
shrl
jecxz
cld
mov
enter
in
pop
push
mov
lret
mov
jb
cmp
fimuls
cwtl
aam
pop
mov
pop
iret
test
sarb
sub
stos
dec
in
sti
in
push
sti
inc
xchg
inc
dec
lcall
test
xchg
test
iret
inc
stc
jmp
push
add
cmpl
js
cmp
and
jecxz
push
mov
mov
popl
lods
xchg
popf
and
cmc
icebp
add
mov
ja
mov
scas
jne
and
and
and
adc
in
push
std
push
repz
dec
int
sbb
adc
xor
in
pop
mov
mov
inc
pop
cmp
les
repnz
jle
cmpb
inc
cmp
pop
mov
sub
jae
xchg
jae
shlb
dec
sahf
rorl
mov
data16
push
jle
nop
cmp
mov
lret
sub
mov
sub
fisubs
loop
or
sbb
fneni(8087
fstpt
loopne
fs
xor
je
cmp
adc
or
fisttpl
or
push
and
insb
and
mov
pop
ret
outsb
shrl
cmpsb
bound
xor
jns
mov
aad
out
mov
aaa
outsb
pop
aaa
insl
fidivl
aad
fs
pushf
rorb
dec
loopne
insb
fdivs
hlt
repz
hlt
ljmp
gs
mov
inc
jmp
or
lock
dec
outsl
and
sbb
and
cmpsb
push
icebp
cmpsb
mov
mov
xchg
push
call
mov
pushf
je
and
dec
xchg
fisttpll
popa
fdivrl
mov
test
jl,pt
ds
les
dec
nop
fmuls
push
add
testb
adc
popa
ret
xor
scas
stc
push
mov
pop
xchg
xchg
cltd
pop
rcrl
mov
loope
jmp
clc
cwtl
sub
adc
mov
xor
fwait
push
cmp
push
xchg
and
into
xchg
push
stos
call
push
js
fbld
mov
or
or
out
xor
inc
test
inc
push
add
cltd
sub
sub
mov
lret
mov
test
push
mov
sub
push
movsl
arpl
test
cltd
ja
testb
repnz
mov
outsl
outsl
xchg
push
vpunpcklbw
xor
add
add
test
sub
out
mov
xlat
xlat
dec
out
stos
in
lcall
pop
popf
addb
xchg
out
adc
pop
pop
mov
inc
inc
sti
or
lock
in
lods
lods
mov
aam
pop
std
mov
scas
and
movsb
movsb
in
jb
fwait
pop
rol
ret
loope
std
std
cmp
push
es
pop
ss
aas
aas
cmc
add
testl
hlt
movsl
movsl
shll
icebp
loop
jno
stos
jae
fsubs
xor
sub
adc
add
push
mov
popf
pop
ret
ret
xor
sbb
aaa
mov
add
lcall
adc
sbb
loop
int
jmp
dec
imul
mov
lahf
jne
adc
or
sbb
je
sub
sbb
ss
outsb
outsb
mov
pop
pop
pop
sti
mov
push
jbe
cmp
mov
jge
mov
push
jnp
sub
jecxz,pt
pop
jno
das
adc
push
push
mov
add
add
sub
in
inc
pusha
and
jecxz
cld
cld
jns
mov
mov
pop
pop
aam
push
lea
lret
fnstcw
dec
cmp
xchg
fimuls
cwtl
aam
dec
mov
pop
pop
test
iret
mov
sub
out
dec
in
stos
in
push
sti
sti
xchg
inc
inc
lcall
xor
xchg
test
jmp
push
add
incb
push
push
js
cmp
and
jecxz
test
repz
push
pop
mov
inc
add
lods
xchg
xchg
and
cmp
add
cmc
arpl
mov
mov
jne
fiaddl
and
and
adc
in
std
push
repz
dec
int
sbb
or
xor
in
in
mov
mov
inc
inc
cmp
pop
xchg
push
les
cmpsl
cmpsl
cld
cmpb
inc
cmp
fs
sub
sbb
xchg
jae
shlb
sbbl
data16
push
jle
sub
stos
nop
nop
or
inc
inc
sub
out
imul
mov
cmpsl
jns
fidivrs
or
lods
jbe
fcmovnu
cmp
loopne
push
xor
je
cmp
adc
or
xchg
fisttpl
or
push
push
dec
insb
and
mov
pop
ret
outsb
rcl
inc
out
lods
lods
les
xchg
xchg
xor
in
mov
aad
out
mov
enter
aaa
fidivl
lea
pushf
rorb
dec
loopne
test
lods
cli
push
push
repz
hlt
hlt
iret
and
gs
mov
inc
jmp
or
outsl
aad
mov
dec
outsl
and
cmp
sbb
icebp
cmpsb
cmpsb
jae
mov
xchg
push
mov
and
call
call
and
pop
xchg
fisttpll
popa
fdivrl
mov
test
jo
inc
ds
mov
int3
stos
data16
fmuls
push
add
div
sbb
push
push
ret
popa
push
xor
push
imul
xchg
cmp
sbb
sahf
fnstcw
loope
jmp
clc
clc
sub
adc
sarb
pop
mov
xchg
sub
and
push
adc
and
jmp
stos
call
push
js
sub
mov
orb
fidivrl
out
movb
mov
inc
inc
sub
sub
lret
mov
test
push
push
insl
mov
push
arpl
arpl
jl
ja
ja
jnp
jnp
repnz
outsl
outsl
outsl
outsl
lds
xor
xor
add
add
addr16
sub
xlat
xlat
xlat
xlat
stos
stos
stos
stos
jbe
jbe
lret
lret
addb
jge
jge
cli
cli
cli
pop
pop
pop
pop
inc
inc
inc
inc
lock
lods
lods
lods
aam
aam
mov
scas
scas
scas
pushf
pushf
pushf
pushf
movsb
movsb
movsb
movsb
jb
jb
rol
shlb
std
std
xchg
xchg
xchg
xchg
es
aas
aas
aas
div
div
int3
int3
int3
int3
xor
xor
movsl
movsl
movsl
movsl
in
in
icebp
icebp
icebp
icebp
jno
jno
fcomp
fcomp
xor
xor
adc
add
add
mov
and
ret
ret
ret
sbb
sbb
xchg
xchg
xchg
xchg
add
lcall
adc
adc
addb
loop
jmp
jmp
daa
daa
daa
mov
mov
jne
jne
or
or
addl
sub
sbb
sbb
sbb
sbb
outsb
outsb
pop
pop
pop
pop
mov
push
push
push
cmp
cmp
mov
mov
sub
sub
jecxz
jecxz
das
das
das
das
test
push
rcl
rcl
add
add
in
in
in
in
and
and
cld
cld
cld
cld
mov
mov
pop
pop
pop
pop
push
push
lret
lret
lret
lret
mov
cmp
cmp
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
iret
iret
iret
iret
rcl
rcl
out
out
out
out
stos
stos
stos
stos
sti
sti
sti
sti
inc
inc
inc
inc
dec
dec
dec
dec
xor
xor
test
inc
inc
stc
stc
stc
stc
add
add
jg
jg
push
push
push
push
cmp
cmp
lahf
lahf
lahf
lahf
test
test
push
push
push
push
mov
inc
inc
inc
xchg
xchg
xchg
xchg
popf
popf
popf
popf
cmp
cmp
cmc
cmc
cmc
cmc
mov
mov
mov
fcmovu
fisubl
and
and
adc
adc
push
repz
rcl
int
int
or
or
adc
adc
in
in
in
in
pop
pop
pop
pop
xchg
xchg
xchg
xchg
inc
inc
inc
inc
pop
pop
pop
pop
les
jle
jle
cmp
fs
pop
pop
pop
sbb
sbb
jae
jae
pusha
pusha
pusha
pusha
addl
and
and
sub
sub
nop
nop
nop
nop
mov
inc
inc
out
out
out
out
mov
adc
adc
ficomps
pop
pop
or
or
fcmovnu
fcmovnu
loopne
loopne
xor
xor
cmp
cmp
or
or
dec
dec
dec
dec
push
push
push
push
and
and
pop
pop
pop
pop
ret
ret
rcl
lods
lods
lods
lods
bound
bound
xchg
xchg
xchg
in
in
jns
jns
out
out
enter
aaa
aaa
aaa
aaa
insl
insl
insl
insl
lea
aad
dec
dec
dec
dec
test
insb
insb
insb
push
push
push
push
hlt
hlt
hlt
hlt
ljmp
gs
jp
scas
scas
scas
scas
or
or
mov
js
js
and
cs
sbb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
call
fstp
fnsave
je
pop
pop
pop
dec
dec
dec
dec
mov
mov
mov
jo
ds
mov
data16
dec
dec
dec
add
add
div
div
push
push
push
push
popa
popa
popa
popa
xor
push
push
push
mov
xchg
rcrl
sahf
sahf
loope
loope
clc
clc
clc
clc
cwtl
cwtl
cwtl
cwtl
adc
adc
imul
xchg
xchg
xchg
fwait
fwait
fwait
fwait
push
push
push
push
xchg
jmp
into
push
push
push
push
sub
sub
mov
mov
or
mov
out
inc
inc
inc
inc
push
inc
inc
inc
cltd
cltd
cltd
cltd
sub
pfcmpeq
mov
mov
push
push
push
mov
push
push
push
push
cmpsl
hlt
push
push
gs
jle
movsb
pop
sbb
imul
stos
pop
cli
lods
xchg
add
dec
push
cli
xor
imulb
lods
xchg
jbe
mov
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
ret
adc
dec
andl
pop
popl
xchg
pushf
xchg
adc
ficompl
xchg
sub
and
imul
mov
ret
jns
hlt
imul
cltd
fnsave
daa
mov
loope
pop
lods
mov
data16
and
mov
into
jge
dec
fbld
xor
in
xor
inc
jg
loopne
fs
scas
imul
sub
stc
pop
push
inc
popl
clc
jnp
and
jae
loop
dec
jb
pop
jecxz
stos
push
popw
sub
mov
ret
lcall
shl
xchg
xor
push
add
in
sub
mov
repnz
repz
hlt
fisubl
mov
xor
mov
cmpsb
les
push
repz
jne
mulb
out
pusha
inc
push
lahf
jno
push
adc
stc
mov
ds
add
out
mov
push
xchg
add
aam
add
adc
cwtl
sbb
inc
inc
mov
fldenv
inc
call
pop
cmp
out
out
enter
jl
jmp
push
test
add
add
addl
xor
pop
insb
sti
decl
std
push
cmp
cmp
or
cmpsb
pop
push
cmp
ss
or
movntq
rclb
fwait
sbb
rolb
dec
ja
push
sbb
sbb
mov
mov
cmp
pop
sbb
or
mov
mov
test
icebp
push
dec
pop
jne
mov
pusha
jg
lahf
es
mov
cmp
xor
sti
pop
jbe
inc
mov
and
push
icebp
in
lret
xlat
adc
xchg
adc
adc
test
dec
test
cmp
stc
scas
insl
mov
sahf
sbb
in
push
xchg
insb
push
mov
cltd
mov
xchg
adc
fs
test
aas
lock
out
nop
xor
dec
dec
xchg
sarl
fsin
mov
aam
iret
xor
movsl
mov
aas
in
cmp
int3
pop
push
inc
jle
ret
imul
mov
cmp
cmc
scas
ret
cmpb
shrb
sub
and
enter
adc
pushf
call
or
int
sbb
add
dec
andl
out
out
stos
or
mov
out
fstps
outsl
dec
aam
lahf
ljmp
movsb
xor
and
sub
xchg
movsl
mov
mov
je
lret
mov
nop
loopne
fsubs
icebp
neg
in
inc
push
push
int
das
notb
jbe
mov
inc
push
dec
stos
int3
filds
in
mov
sahf
sbb
sub
jg
gs
add
pop
popf
pop
xor
xchg
cs
or
pop
sbb
fistl
adc
insl
mov
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
aas
jae
push
jns
adc
mov
int
push
pop
stos
std
pop
adc
cmp
js
repz
lret
push
cmp
mov
push
or
loop
mov
sub
or
cmp
mov
or
push
fs
test
jnp
mov
aad
pop
insb
dec
inc
push
mov
push
gs
jle
movsb
pop
sbb
pop
daa
cmp
inc
popf
pop
icebp
pop
cli
lods
stos
add
dec
xchg
cli
xor
push
insl
jbe
divb
mov
xlat
in
cld
lret
sub
xlat
inc
xor
mov
pop
mov
dec
sbb
inc
cwtl
sar
loope
das
ret
add
dec
adcl
stc
shrl
pop
popl
out
xchg
adc
jmp
push
xchg
fiaddl
je
shrl
dec
sub
leave
mov
jne
jns
hlt
js
pop
cltd
imul
fisttpll
mov
pop
lods
and
data16
jge
dec
fbld
xor
in
xor
pusha
jg
bound
fs
scas
imul
sub
stc
xchg
push
inc
sbb
xchg
jnp
mov
jae
and
dec
jb
pop
jecxz
stos
push
data16
jmp
pop
ret
add
xchg
xchg
xor
movsl
mov
add
sbb
mov
mov
cmpsl
xchg
repnz
repz
dec
mov
mov
xor
pop
cmpsb
les
push
repz
xor
mulb
out
pusha
inc
stos
lahf
jno
push
adc
push
mov
ds
push
fstl
scas
mov
push
xchg
mov
les
aam
add
adc
cwtl
sbb
mov
mov
sahf
fldenv
inc
call
pop
mov
out
out
enter
jl
inc
cmovb
test
leave
add
add
xchg
xor
adc
lods
jb
insb
dec
decl
std
sti
cmp
cmp
daa
or
push
shrl
ss
or
mov
push
xchg
setbe
mov
xchg
fwait
sbb
and
popa
mov
sbb
sbb
mov
mov
cmp
pop
sbb
sbb
mov
lods
test
sub
enter
test
jne
dec
fstpl
mov
lahf
cmc
jb
mov
jle
pop
xor
inc
mov
and
fdivr
in
mov
icebp
in
arpl
xor
lret
inc
adc
xchg
adc
movb
mov
scas
adc
sahf
sbb
repz
xchg
rclb
mov
insb
mov
xchg
adc
fs
test
aas
lock
fcoms
dec
xchg
sarl
fld
mov
aam
ss
movsl
sub
lods
aas
movsb
popf
cmp
xchg
js
or
inc
jle
bound
test
fcoms
pop
scas
ret
xor
pop
lahf
mov
sub
and
enter
adc
mov
es
sbb
hlt
mov
in
add
xchg
out
out
stos
jle
mov
out
out
out
fnstenv
outsl
dec
into
or
sub
mov
xor
xchg
movsl
xor
xor
aaa
lret
cmpsb
rclb
xor
inc
notl
jg
notb
jbe
mov
inc
dec
dec
stos
int3
push
add
in
mov
sahf
jecxz
push
sbb
sub
mov
ljmp
pop
je
cli
jae
or
cs
fistl
xor
insl
adc
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
pop
jae
push
aas
into
adc
jns
jae
int
push
ljmp
fists
inc
js
repz
lret
push
cmp
mov
push
jb
loop
or
cmp
mov
test
jno
or
fsubp
mov
pushf
rcll
test
jnp
mov
aad
pop
insb
dec
je
mov
push
cmpsl
inc
jle
gs
sbb
movsb
daa
cmp
imul
stos
pop
jecxz
xchg
add
and
jbe
imulb
mov
dec
in
cld
xlat
sub
xlat
lret
xor
mov
mov
mov
inc
cwtl
push
pop
loope
das
ret
add
adcl
xchg
shrl
stc
popl
out
xchg
adc
jmp
push
xchg
ficompl
aam
xorl
loopne
sub
mov
jne
mov
cltd
imul
daa
fnsave
mov
pop
lods
and
data16
into
jge
cmp
arpl
dec
sbb
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
or
xchg
sub
pop
push
ficoms
clc
jae
and
dec
jb
add
jecxz
push
data16
mov
add
lds
movsl
or
xor
xchg
add
or
sub
cmpsl
xchg
mov
repz
hlt
add
rcrl
bound
xor
push
repz
xor
mulb
in
pusha
inc
stos
out
jno
push
lahf
outsb
mov
stc
mov
xchg
cmp
add
push
xchg
mov
les
pop
push
add
aam
pusha
call
mov
mov
inc
fldenv
sahf
call
pop
mov
enter
jl
inc
or
jmp
push
add
add
orb
xchg
xor
adc
lods
jo
insb
dec
jb
std
sti
incl
cmp
daa
cmp
or
push
rcll
cmp
or
addr16
xchg
movntq
out
mov
xchg
fwait
sbb
mov
dec
adc
sbb
shl
and
loopne
adc
or
mov
mov
test
jne
dec
pop
cltd
out
mov
pusha
add
lahf
es
mov
cmp
pop
xor
inc
mov
and
fadd
in
mov
cld
in
arpl
xor
lret
inc
adc
movb
mov
scas
adc
sub
insl
mov
mov
repz
ja
jecxz
sub
test
cli
dec
jmp
test
mov
mov
fsubrs
and
nop
dec
xchg
dec
cmp
rcl
mov
mov
cmc
cmpsb
iret
cmpl
mov
sub
popf
js
or
int3
jle
bound
test
fcoms
pop
test
lahf
mov
xchg
aad
test
adc
cmpsl
jge
call
jnp
es
js
outsb
hlt
sbb
subl
ljmp
or
adc
mov
into
ss
ljmp
movsb
xor
and
xor
aaa
mov
nop
loopne
shlb
icebp
dec
cwtl
in
inc
neg
int
push
push
xchg
pop
das
testb
out
inc
dec
mov
int3
push
dec
xchg
in
add
sahf
jecxz
push
sbb
gs
jg
pop
popf
add
mov
pop
xor
or
cs
addr16
sbb
adc
xor
insl
adc
lcall
clc
pop
mov
jmp
cmp
into
out
daa
popa
mov
leave
sbb
in
in
jp
mov
pushf
pop
fcomip
push
aas
jae
sbb
jae
aaa
notl
int
pop
pop
stos
cmp
js
fldt
mov
sub
mov
push
jb
loop
or
cmp
mov
incl
test
jno
or
fidivs
push
fs
ror
popa
test
aad
mov
dec
je
mov
push
cmpsl
hlt
jle
gs
sbb
movsb
pop
cmp
imul
stos
pop
cli
dec
xchg
add
and
xor
xchg
jbe
cmc
and
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
adcl
xchg
inc
imul
roll
out
adc
jmp
insl
xchg
ficompl
aam
cmpl
sub
mov
jne
mov
hlt
js
mov
fnsave
mov
pop
lods
mov
data16
and
cmp
arpl
dec
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
cmp
pop
push
inc
xchg
xchg
mov
jnp
and
jae
loop
dec
jecxz
pop
data16
jmp
add
mov
lcall
xor
xchg
and
push
in
pop
adcb
sub
cmpsl
xchg
mov
repz
dec
mov
hlt
fiaddl
aad
add
les
push
mov
xor
mov
in
addl
pusha
pop
push
lahf
jno
push
adc
stc
mov
xchg
cmp
add
out
mov
push
jno
pop
les
aam
pusha
call
cwtl
xchg
jmp
inc
addr16
fnstenv
mov
sbb
out
enter
jl
jmp
push
test
add
add
addl
push
lods
jo
insb
dec
jb
std
sti
decl
orps
test
daa
cmp
push
rcll
cmp
ss
or
push
mov
xchg
out
sbb
mov
dec
ja
push
sbb
loop
mov
mov
adc
or
mov
enter
test
icebp
scas
dec
pop
jne
mov
pusha
jg
lahf
add
jb
lds
pop
xor
sti
mov
inc
lret
fadd
and
arpl
in
lret
inc
adc
xchg
test
adc
test
dec
sar
cmp
stc
insl
mov
sahf
fdiv
xor
ja
jecxz
sub
test
cli
dec
xchg
inc
and
les
push
fsubrs
xchg
dec
dec
fld
sarl
mov
mov
aam
iret
xor
fisubl
mov
sub
popf
cmp
xchg
js
fwait
int3
pop
push
bound
test
lea
pop
idivl
xor
ret
lahf
mov
xchg
shrb
sub
and
adc
arpl
or
outsb
hlt
sbb
add
dec
out
outsb
xchg
stos
jle
jmp
or
mov
mov
into
outsl
ljmp
mov
scas
mov
sub
and
xor
je
mov
and
rclb
icebp
dec
cwtl
add
neg
in
jg
push
int
das
notb
inc
dec
mov
int3
push
dec
stos
in
add
sahf
jecxz
rorl
push
mov
push
gs
add
pop
add
mov
jae
xchg
cs
or
push
rcr
jmp
adc
lcall
mov
jmp
cmp
into
out
daa
test
loope
in
jp
mov
pushf
pop
push
aas
jae
sbb
adc
mov
int
pop
pop
stos
std
fists
cmp
lret
scas
mov
sub
and
pop
inc
mov
mov
mov
incl
or
or
mov
fcomps
push
jnp
test
aad
mov
dec
je
insb
rolb
mov
or
or
push
push
aad
aad
xor
xor
ss
movsl
movsl
movsl
cmp
cmp
mov
inc
inc
inc
mov
sahf
sahf
sahf
addl
xlat
xlat
sti
sti
sti
sti
jl
jl
jecxz
jecxz
cmp
cmp
addb
fwait
das
das
das
das
incl
xor
xor
mov
inc
inc
inc
inc
inc
jmp
lret
lret
lret
push
push
push
push
jnp
jnp
xchg
xchg
xchg
xchg
xor
xor
cmpsb
cmpsb
cmpsb
cmpsb
ret
ret
and
cmp
out
out
out
dec
dec
dec
dec
xchg
xchg
xchg
xchg
or
or
inc
inc
inc
inc
cli
cli
cli
cli
ret
ret
ret
ret
dec
dec
dec
dec
or
or
cs
data16
sub
and
and
mov
mov
jbe
jbe
pop
pop
pop
pop
mov
dec
dec
dec
insl
insl
insl
insl
mov
rcl
and
jb
jb
clc
clc
clc
div
div
fs
push
cwtl
push
push
push
push
aam
aam
movsb
movsb
movsb
movsb
pop
pop
pop
pop
int3
int3
int3
int3
pop
pop
pop
pop
gs
mov
xchg
xchg
xchg
xchg
insb
insb
insb
insb
jo
jo
dec
dec
dec
dec
push
push
push
push
std
std
std
std
in
in
in
in
mov
fcmovu
ficompl
pop
pop
adc
inc
inc
inc
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
lea
popf
popf
test
nop
fcomp
fcomp
stos
stos
stos
stos
add
add
mov
mov
or
or
div
div
in
in
pop
pop
pop
pop
add
mov
mov
inc
inc
inc
inc
push
push
push
push
rcl
rcl
sub
sub
push
push
push
push
lret
aas
aas
lar
add
rol
shrl
mov
add
add
add
adc
adc
imul
cmp
cmp
adc
adc
inc
inc
dec
dec
dec
dec
addr16
ljmp
xchg
repnz
iret
iret
iret
into
into
into
into
lock
mov
out
out
jae
jae
xchg
xchg
xchg
xchg
lods
lods
lods
lods
je
je
and
and
out
out
lods
lods
lods
lods
xor
test
loop
stc
stc
stc
aaa
aaa
aaa
aaa
call
sbb
sbb
jne
jne
fildll
outsb
outsb
inc
inc
inc
inc
icebp
icebp
icebp
icebp
sbb
sbb
jno
jno
sbb
sub
sub
mov
outsl
outsl
mov
mov
bound
bound
push
push
push
stos
stos
stos
stos
sbb
sbb
mov
sbb
sbb
cld
cld
cld
push
push
push
push
ds
dec
dec
dec
mov
rcl
rcl
jns
jns
and
and
lcall
fcmovnb
rol
js
js
int
int
pop
pop
pop
pop
hlt
hlt
hlt
hlt
pop
pop
pop
pop
fstp
fstp
test
test
xor
xor
mov
pop
pop
mov
xor
mov
mov
adc
adc
adc
adc
pop
pop
pop
pop
daa
daa
daa
daa
addb
in
pop
pop
pop
pop
pusha
pusha
pusha
pusha
push
push
push
push
jg
jg
test
sbb
sbb
dec
dec
dec
or
sub
in
jp
jp
lahf
lahf
lahf
lahf
xchg
xchg
xchg
xchg
leave
leave
leave
leave
pushf
pushf
pushf
pushf
out
out
out
out
mov
loopne
loopne
cmp
cmp
dec
dec
scas
scas
scas
scas
sub
sub
cmc
cmc
cmc
cmc
mov
mov
enter
jmp
jmp
mov
cmp
cmp
addl
cltd
cltd
cltd
cltd
popa
popa
popa
popa
pop
pop
pop
pop
sub
sub
add
add
jle
jle
mov
ja
ja
es
loope
imul
adc
arpl
push
push
push
push
and
and
or
or
jge
jge
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
pop
add
add
add
jns
jae
imul
insb
add
add
jbe
add
add
push
inc
push
inc
push
inc
pop
inc
inc
push
inc
push
dec
push
push
dec
dec
dec
pop
push
jns
je
insl
add
jae
gs
inc
imul
imul
dec
inc
push
push
inc
push
inc
pop
inc
insb
popa
jae
gs
dec
outsb
je
jb
popa
arpl
add
add
sub
add
add
add
add
add
dec
gs
gs
inc
popa
jae
cs
insb
add
dec
gs
gs
inc
popa
jae
cs
insb
add
add
add
dec
add
add
add
movsl
inc
add
add
add
sub
add
insl
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
incl
add
add
inc
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
incl
sti
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
lods
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
scas
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
incl
add
add
incl
add
add
incl
add
add
mov
add
incl
add
add
incl
add
add
incl
add
add
roll
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
pushl
inc
add
add
add
incl
add
add
incl
add
add
dec
movb
movb
add
add
incl
add
add
incl
add
add
incl
add
add
enter
add
add
incl
add
add
incl
add
add
js
inc
add
add
add
incl
add
add
incl
add
add
lcall
roll
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
add
add
das
add
sbb
add
shrb
add
xor
add
lock
mov
add
add
add
add
xor
add
icebp
add
mov
add
add
add
add
add
ds
add
xor
add
add
dec
xor
add
add
add
add
js
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sbb
add
xor
add
inc
xor
add
add
push
xor
add
add
js
add
xchg
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
insb
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
test
add
xchg
xor
add
xor
add
das
add
out
das
add
add
add
push
xor
add
xor
add
xor
add
add
adc
add
xor
add
xor
add
xor
add
xor
add
add
add
add
aas
add
je
fs
jo
gs
dec
outsb
outsw
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
fldl
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
push
dec
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
je
jb
arpl
fs
jae
add
movl
je
popa
insb
jne
add
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
add
mov
push
insb
gs
sbb
inc
js
je
jb
arpl
jae
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
gs
je
dec
popa
outsb
fs
add
repz
je
imul
bound
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
pusha
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
int
dec
gs
jo
jb
popa
je
add
into
add
popa
jo
gs
jb
jns
in
add
imul
jb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
addr16
add
popa
jo
insb
insb
outsl
arpl
jmp
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
and
je
inc
imul
popa
fs
imul
add
jecxz
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
sbb
je
push
outsb
ja
outsb
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
data16
je
je
imul
inc
add
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
sub
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
popa
jo
imul
push
dec
inc
dec
xor
cs
insb
add
xor
ja
jo
imul
add
outsb
inc
insb
imul
add
add
jo
jns
insb
imul
add
xchg
push
gs
insb
imul
inc
popa
je
add
dec
add
outsl
jae
inc
insb
imul
add
adc
jae
addr16
outsl
js
add
inc
push
xor
cs
insb
add
pusha
add
addr16
jo
outsb
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
xor
push
gs
insb
outsl
jae
dec
gs
cmp
push
gs
jb
popa
je
dec
gs
js
add
push
gs
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
cmp
push
aam
sub
push
xor
aam
es
inc
mov
nop
sbb
fdivl
in
mov
fcmovne
inc
aad
dec
scas
popf
pop
xchg
adc
test
sahf
stc
or
cmp
pop
sbb
aad
sarl
add
sbb
dec
aad
shll
std
test
mov
mov
and
push
rcll
enterw
push
mov
pop
out
xlat
dec
frstor
dec
mov
nop
arpl
cmp
cmpsl
cmp
into
pop
cmp
popa
insl
int
and
push
sub
mov
xchg
push
inc
and
cmp
mov
insl
in
bound
pop
cmp
ds
inc
fidivrl
ret
cmpsb
push
mov
mov
int
aad
dec
scas
inc
into
pop
cmp
jno
and
pusha
notb
xchg
adc
lea
nop
testl
push
in
add
shlb
add
push
out
jmp
jge
out
jge
je
and
scas
aas
pop
test
pusha
xchg
jae
cld
xchg
cmc
add
xchg
or
repnz
pop
repnz
rcrb
pop
stos
mov
cltd
icebp
outsl
lcall
sbb
xor
mov
jle
and
push
or
stos
cmp
sbb
lea
pop
xchg
adc
mov
mov
in
mov
sub
cmp
cmpsl
aaa
push
mov
addr16
jb
sbb
std
insl
hlt
pop
in
or
aam
int
addr16
cs
mov
mov
mov
jns
les
mov
cmp
mov
jns
jl
mov
js
popa
sub
inc
rolb
shlb
or
nop
push
popa
nop
jb
dec
fdivrs
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
pushl
inc
add
add
add
incl
add
add
add
add
add
add
add
add
add
or
add
dec
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
inc
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jae
add
jns
add
mov
add
nop
mov
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
inc
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
add
add
add
jno
add
add
add
add
add
add
add
add
inc
add
add
add
jo
add
add
add
outsl
inc
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
hlt
outsb
inc
add
add
add
outsb
inc
add
add
add
inc
add
add
add
outsb
inc
add
add
add
inc
add
add
add
add
add
add
jl
inc
add
add
insb
insb
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
incl
add
add
jae
add
jne
add
inc
add
add
inc
add
add
inc
add
add
inc
add
jnp
add
jnp
add
jnp
add
inc
add
jnp
add
jnp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
add
inc
add
add
inc
add
add
inc
add
inc
add
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jg
jg
pop
les
add
add
add
add
add
add
add
add
add
add
xorb
add
add
lock
incl
add
add
push
add
push
add
les
or
inc
add
incl
add
add
add
add
incl
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
cli
cs
lcall
sub
sub
push
or
call
or
dec
push
xor
test
adc
sbb
outsl
imul
stc
and
mov
jmp
add
add
or
add
inc
daa
sarb
push
insl
hlt
pop
mov
jmp
jmp
call
jmp
js
jo
loop
pop
aas
test
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
mov
jnp
decl
fiaddl
incl
jmp
mov
call
jmp
jbe
arpl
cmc
inc
jl
mov
call
jmp
mov
jmp
sub
add
add
jmp
stos
xor
mulb
inc
jecxz
movl
sbb
jo
sti
lcall
pop
push
jmp
ja
mov
add
mov
add
sbbl
incl
popf
ret
jae
bound
repnz
add
retw
jmp
pop
sub
jmp
jl
add
add
jmp
cmp
mov
push
pushf
addl
pusha
jmp
call
jmp
int3
push
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
in
add
add
add
add
jmp
lds
iret
dec
cmp
and
incl
popf
ret
jne
inc
and
pop
les
dec
pop
sub
mov
movl
jmp
lods
sub
xor
mov
call
inc
jo
sub
mov
or
push
lret
mov
test
aaa
push
call
jmp
mov
popa
incl
popf
ret
in
jae
xchg
stc
std
cli
lcall
cmp
je
jmp
jecxz
mov
push
pushf
addl
jmp
jle
mov
stos
pop
mov
adc
movl
sbb
mov
insb
mov
call
jmp
sub
sub
call
jmp
call
jmp
push
mov
js
pusha
pop
loopne
xor
call
jmp
pop
call
jmp
and
push
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
adc
add
mov
lods
mov
loop
mov
popf
pusha
jmp
imul
xlat
mov
mov
popa
incl
popf
ret
clc
jbe
cmpl
inc
sub
mov
add
add
or
cs
jmp
fdivrs
rorl
ror
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
xor
clc
call
jmp
sub
pop
pop
sub
jmp
mov
nop
movsb
arpl
imul
data16
jmp
call
jmp
jg
popa
add
sbb
mov
test
mov
movl
movw
movzbl
add
cmp
je
jmp
call
jmp
push
fimull
fisubrl
jno
call
dec
scas
sahf
jmp
fsubrs
xchg
cmp
or
sbb
jmp
cld
outsb
cld
fwait
jbe
mov
ret
icebp
ret
fsubrp
adc
add
jb
sbb
sti
movsb
fs
or
imul
cmpsl
aas
mov
push
call
jmp
pop
mov
addl
jmp
mov
add
mov
add
cmpsl
xor
sbb
fdivrs
call
add
jmp
call
jmp
repnz
icebp
nop
arpl
hlt
push
test
sub
add
add
jmp
adcl
sbb
mov
sbb
sldt
add
add
add
arpl
jmp
call
jmp
lea
and
pop
cmp
in
in
mov
inc
mov
popl
jmp
add
test
jmp
ljmp
jmp
push
ret
cmpsb
push
in
fwait
sbb
xorl
decl
lods
cli
xor
movb
jmp
call
jmp
cmc
jae
xchg
sub
imul
lea
pushl
lea
jmp
sbb
sbb
add
jmp
dec
fisttpl
fnsave
imul
scas
addb
xorl
cmpl
inc
and
movw
movzbl
add
cmp
je
jmp
aad
pop
or
call
jmp
inc
pop
sub
mov
movl
jmp
pop
iret
stos
pop
rcr
dec
fstpt
sbb
add
mov
pusha
push
mov
lods
scas
sti
ret
lea
jl
arpl
push
call
jmp
or
call
jl
shr
inc
or
add
movups
add
xchg
add
insb
rorl
addl
pusha
jmp
jnp
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
mov
jmp
push
hlt
push
jno
push
call
jmp
call
jmp
xchg
movsb
ret
ds
movzbl
add
cmp
je
jmp
shr
add
add
jmp
sub
adcb
add
add
pop
sub
cltd
adc
call
int
ljmp
dec
stos
fsubrl
shr
mov
popa
incl
popf
ret
inc
rcll
and
imul
inc
and
popf
ret
mov
inc
jae
pop
cmp
je
jmp
inc
inc
push
pushf
addl
jmp
inc
pop
xor
call
jmp
dec
enter
sub
movzbl
jmp
sbb
add
add
jmp
in
imul
cmp
pop
sub
mov
movl
movw
jmp
call
jmp
dec
iret
pop
cmp
cmp
addl
jmp
push
adcl
jbe
cmpl
and
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
fdivrs
jmp
lds
jmp
rorl
call
jmp
fwait
adc
dec
and
push
pushf
addl
pusha
jmp
ficoml
mov
dec
sub
sub
jmp
mov
call
jmp
imul
sbb
stc
test
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
add
aad
into
test
orl
jmp
mov
add
add
jmp
lock
sbb
sub
mov
movl
movw
jmp
out
call
jmp
mov
mov
and
stos
jns
call
addb
out
int3
test
cs
push
call
jmp
pusha
cli
xor
and
fistl
add
or
add
pusha
lock
push
arpl
xchg
push
pushf
addl
pusha
jmp
iret
pop
sub
jmp
sub
add
add
xor
or
pop
test
add
push
dec
inc
dec
xor
cs
insb
add
nop
fidivrs
shr
pop
add
add
cmp
mov
jmp
scas
je
test
add
jmp
pop
lret
lret
daa
ja
movzbl
add
cmp
je
jmp
cmpsb
aaa
cmpsl
ret
fidivl
popf
and
mov
popa
incl
popf
ret
xlat
inc
shll
adc
gs
addl
jmp
and
add
sub
dec
loop
add
inc
and
movw
movzbl
add
cmp
je
jmp
imul
insl
fst
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
repz
cmc
pop
mov
xchg
pop
aam
lcall
call
jmp
xor
cmp
add
jb
cli
je
nop
or
cwtl
scas
jmp
call
jmp
fadds
mov
pusha
jmp
mov
add
jmp
data16
push
adc
call
dec
test
lret
xchg
mov
lock
cld
mov
aam
loop
push
call
jmp
sub
add
add
add
add
dec
lea
ret
jmp
xchg
xor
sbb
scas
dec
call
or
dec
push
xor
test
adc
popa
nop
jb
push
call
push
jmp
pop
sub
jmp
repz
jmp
shrd
mov
in
mov
jmp
scas
sub
lds
fdivl
shlb
inc
pop
jmp
call
jmp
jl
insl
hlt
pop
jecxz
aas
inc
cltd
roll
inc
and
popa
incl
popf
ret
mov
cmp
add
add
inc
sbb
lods
out
sbb
add
add
jmp
cmc
je
lea
ss
sub
movb
jmp
call
jmp
jmp
pushf
lea
cwtl
decl
ljmp
add
pushl
lea
jmp
mov
in
cli
inc
out
push
pushf
addl
pusha
jmp
pop
sub
jmp
jbe
sldt
add
add
add
xor
jmp
xchg
adc
and
add
mov
jmp
mov
push
jmp
call
jmp
enter
inc
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
inc
jp
out
out
add
pop
sub
add
jmp
call
jmp
int3
inc
aad
dec
ljmp
call
jmp
clc
sbb
pop
mov
addl
mov
popl
jmp
pop
sub
movb
movl
popa
jmp
call
jmp
ja
insl
hlt
pop
into
test
lea
pushl
lea
jmp
inc
enter
es
jg
jmp
mov
addl
pusha
jmp
pop
xchg
sbb
call
jmp
push
add
add
jmp
push
pop
jp
jne
jbe
inc
and
add
sbb
mov
add
sbb
add
cmp
and
adc
scas
sahf
jmp
fsubrs
xchg
cmp
cltd
mov
mov
call
cmp
push
xchg
aaa
xchg
mov
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
dec
sar
out
jmp
lret
call
add
add
add
mov
lea
ret
addl
jmp
dec
fnstcw
pop
sub
add
pop
mov
addl
mov
jmp
adcl
add
jmp
ja
jnp
in
add
cmp
add
add
sub
mov
or
push
lret
push
call
push
jmp
addl
jmp
mov
add
sub
add
or
mov
out
popl
jmp
pusha
lock
push
ljmp
jmp
pop
movsl
call
jmp
or
xor
pusha
pop
mov
rolb
jmp
movb
movl
popa
jmp
mov
lret
pusha
pushl
lea
jmp
cmp
add
add
jmp
int3
pop
leave
test
mov
icebp
xchg
call
mov
movsl
sub
add
mov
test
xchg
cmp
aaa
pop
jmp
dec
jne
loope
lods
call
add
add
mov
lea
ret
addl
jmp
push
push
insl
jmp
fiaddl
movb
jmp
int
mov
add
jmp
mov
rcrb
or
popf
lea
jmp
call
jmp
add
cmpsl
add
sub
add
pop
mov
addl
mov
popl
jmp
xor
adcl
clc
jmp
sub
add
add
jmp
cs
dec
mov
adc
add
or
dec
push
xor
test
adc
push
call
push
jmp
popa
jmp
mov
fs
jmp
fld1
add
add
jmp
push
mov
xor
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
shlb
cmp
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
cmp
mov
fildl
jmp
call
jmp
test
mov
and
mov
negb
repz
jmp
mov
test
push
mov
ds
add
add
sbb
sti
movsb
fs
or
imul
cmpsl
aas
mov
push
loopne
call
push
jmp
mov
hlt
in
ja
xorb
jnp
rcl
mov
jmp
xor
call
jmp
mov
xchg
mov
add
add
add
mov
lea
ret
addl
jmp
cmpsl
popf
call
jmp
lret
cltd
push
jbe
xorl
pop
mov
icebp
lcall
ror
negl
add
mov
sbb
out
lods
stc
ss
jmp
add
pop
xor
inc
addl
popf
lea
jmp
cltd
in
movsl
call
jmp
push
rolb
shlb
xor
sub
jmp
dec
roll
aad
sbb
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
call
jmp
fcomps
stos
pop
test
xchg
pop
sub
jmp
pusha
out
adc
pop
pop
neg
push
call
jmp
pop
cwtl
push
imul
pushf
addl
pusha
jmp
sbb
call
jmp
es
sbb
jl
add
add
jmp
sbb
dec
xchg
add
lea
jmp
dec
mov
adc
adc
add
mov
arpl
test
mov
push
xchg
repz
out
nop
pop
sub
movb
movl
popa
jmp
call
jmp
sub
into
push
push
jmp
sub
add
add
jmp
jae
outsb
or
pop
jl
movzbl
add
cmp
je
jmp
orl
clc
or
out
pushf
addl
pusha
jmp
add
pop
jne
jmp
pusha
mov
add
daa
mov
dec
int3
xor
and
add
add
jmp
sub
mov
mov
popa
incl
popf
ret
shlb
add
jmp
jmp
jmp
mov
movl
movw
movzbl
jmp
add
add
add
jmp
insb
loop
pop
loop
xor
mov
popa
incl
popf
ret
mov
out
ret
test
push
jmp
dec
dec
sub
jmp
daa
test
pop
test
jae
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
xor
call
pushl
stos
xchg
pop
filds
push
jmp
call
jmp
in
in
jle
mov
pop
sub
mov
movl
movw
jmp
leave
pop
enter
add
cmp
jmp
call
jmp
adcl
push
in
call
xchg
or
or
loopne
std
mov
call
push
pop
jp
jge
shrl
and
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
data16
jmp
cs
add
add
jmp
roll
mov
test
push
mov
call
jmp
pop
push
xor
aas
xchg
push
call
jmp
adc
mov
jmp
xor
call
jmp
out
jnp
mov
add
sub
jmp
xchg
add
add
jmp
or
cmp
push
pushf
addl
pusha
jmp
inc
pop
sub
jmp
call
jmp
ja
jl
testb
jl
and
insb
pushf
addl
pusha
jmp
cmc
jl
scas
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sub
icebp
push
sub
testl
and
incl
popf
ret
call
jmp
jnp
jne
out
inc
push
ja
call
jmp
xchg
fwait
dec
popf
pop
sub
jmp
imul
call
jmp
jo
arpl
cmc
inc
adc
call
or
stos
dec
dec
sub
pop
mov
cmp
push
jmp
loope
in
mov
jmp
call
jmp
push
hlt
push
cld
jnp
mov
inc
mov
inc
add
fwait
in
inc
add
inc
and
movw
movzbl
add
cmp
je
jmp
jecxz
mov
shr
inc
add
add
add
jmp
incl
in
sbb
into
in
inc
add
inc
and
jmp
bnd
xorb
and
cmp
sar
jmp
pop
xchg
add
sahf
jl
stos
add
cmp
je
jmp
subl
addl
jmp
adc
std
jp
jp
pushf
dec
and
pop
test
mov
jmp
data16
pop
loop
fwait
push
mov
es
cmpsl
xor
adc
in
sbb
mov
popa
incl
popf
ret
insl
iret
pop
sub
jmp
mov
shll
dec
sub
or
and
push
in
cltd
and
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
mov
lods
mov
lods
lods
and
out
pusha
jmp
addr16
sahf
pop
sub
jmp
dec
fisttps
test
or
pop
call
jmp
add
or
cmp
mov
inc
mov
rcll
pop
mov
lds
je
push
pushf
addl
pusha
jmp
adc
mov
addr16
pushf
addl
pusha
jmp
pop
sub
jmp
sub
das
dec
mov
push
std
or
mov
jg
cmp
mov
out
mov
popa
incl
popf
ret
inc
fdivl
in
or
loope
in
mov
sub
je
enter
jmp
mov
movl
movw
jmp
add
fs
popf
insb
jmp
pop
addl
jmp
arpl
xchg
gs
movsb
cmp
js
out
jl
notb
cmc
cmp
test
call
pop
shrb
clc
orb
sub
test
jmp
int
ret
cmpsb
push
mov
imul
jae
xchg
popl
incl
popf
ret
rorl
mov
add
cmp
je
jmp
loop
sti
sahf
insl
mov
jno
jecxz
push
sbb
sub
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
cmp
jmp
test
in
gs
pushf
outsl
lret
insl
hlt
pop
into
jne
xchg
cmc
add
mov
push
pushf
addl
pusha
jmp
push
rcrb
add
adc
pop
or
dec
mov
or
shlb
push
jmp
loopne
cld
fwait
jbe
or
jbe
aaa
xchg
call
jmp
cmc
jp
jp
inc
iret
pop
cmp
idivl
jp
popa
icebp
popa
add
sbb
inc
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
lret
xor
inc
fidivrl
cli
popf
insb
scas
insl
push
pop
sub
jmp
movsb
pop
or
call
jmp
mov
mov
and
jp
arpl
cmc
sbb
mov
jle
arpl
pop
loope
push
mov
movl
movw
movzbl
add
cmp
je
jmp
movsl
cmp
aad
fdivrl
sub
stos
pop
sub
jmp
rorl
mov
inc
and
outsb
pop
push
xor
ds
popf
push
pushf
addl
pusha
jmp
pop
iret
stos
pop
shr
je
lea
xchg
add
and
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
sub
and
jmp
popa
push
mov
call
jmp
inc
jmp
push
in
insb
inc
out
adc
push
fwait
dec
sub
call
cmp
daa
in
pop
push
addb
jmp
inc
lret
pop
ds
ficomps
stos
xchg
mov
popa
incl
popf
ret
inc
mov
nop
loopne
add
add
sbbl
addb
add
jne
mov
mov
lods
rolb
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
mov
fwait
mov
inc
and
popa
incl
popf
ret
std
jp
jp
xor
cmp
and
imul
in
jmp
adc
push
fs
adc
push
adc
or
cmpsb
inc
outsb
hlt
and
movw
movzbl
add
cmp
je
jmp
into
dec
fstpt
mov
popa
icebp
nop
arpl
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
movsl
xor
or
lods
js
push
pop
sub
jmp
ja
call
jmp
mov
test
cmp
stos
es
fisubrl
outsb
or
adc
into
imul
adc
add
cmp
xor
ret
pop
pop
add
mov
jmp
and
fisttpl
mov
mov
mov
and
incl
popf
ret
mov
add
ja
outsl
pushf
addl
jmp
pop
xchg
jb
insl
repnz
insl
adcl
andl
add
inc
and
movw
movzbl
add
cmp
je
jmp
shr
add
add
cmp
inc
or
cmp
loopne
mov
jmp
in
out
jno
out
adc
jne
inc
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
rorl
fmuls
fsubrs
mov
stos
xor
sbb
call
jmp
sub
call
push
jmp
cmpsb
cmp
aad
sub
push
stc
dec
pop
sub
add
jmp
cmp
ss
mov
pop
mov
js
stc
incb
jmp
int
std
test
push
mov
insb
out
jl
mulb
ret
dec
lret
testl
or
push
jnp
mov
out
outsb
cld
fwait
jbe
dec
mov
pop
add
add
inc
mov
popf
daa
sub
and
xchg
mov
call
jmp
and
cld
pop
cli
rcrb
add
cmpsl
mov
popl
jmp
mov
icebp
loope
add
arpl
or
jae
push
xor
das
sub
adc
add
add
mov
lea
ret
addl
jmp
mov
popf
lea
pushl
lea
jmp
push
jmp
xchg
nop
testl
mov
pop
cmp
outsb
outsl
movb
jmp
pop
int3
stos
lods
sub
sbb
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jbe
pop
mov
adc
pushl
adc
mov
add
add
add
jg
fs
ret
jmp
jge
pusha
pop
repnz
adc
cmpb
cmpsl
sbb
cmpsl
mov
pop
sbb
data16
sbb
sbb
jmp
xor
popf
adc
cwtl
push
imul
addl
popf
lea
pushl
lea
jmp
jmp
jmp
mov
dec
mov
loop
std
xor
mov
or
jo
mov
addl
mov
popl
jmp
mov
mov
mov
and
pop
sub
movb
movl
popa
jmp
sbb
pop
push
jmp
inc
fisttpl
fnstsw
shll
add
and
aam
dec
pop
sub
jmp
rorb
mov
movsl
int3
aas
xorb
xlat
cwtl
aaa
mov
push
jmp
mov
mov
xor
int
xchg
dec
roll
shll
lret
push
sahf
cmp
addl
pusha
jmp
cmp
sub
jmp
dec
out
jg
jmp
out
sbb
fisttpll
incb
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
into
scas
xchg
mov
test
jmp
imul
insl
lea
test
fisttpl
fnstsw
dec
enter
and
push
and
call
jmp
dec
leave
pop
cmp
sub
dec
fnsave
stc
out
sbb
jb
pop
sub
jmp
pop
rolb
shlb
inc
and
adc
pop
dec
call
adc
std
loop
adc
loope
jp
push
jmp
rorb
dec
mov
push
loop
fmuls
fdivrs
mov
add
push
dec
inc
dec
xor
cs
insb
add
nop
jne
cs
adc
push
imul
and
incl
popf
ret
adc
sbb
jle
mov
ds
xor
and
jg
addr16
addl
jmp
add
or
pop
cmpsb
xor
fwait
or
jno
or
add
sub
inc
and
movw
movzbl
add
cmp
je
jmp
dec
fimuls
push
rcll
sti
adc
mov
loopne
sti
mov
inc
fnstcw
call
jmp
mov
xchg
rorb
outsb
in
add
add
fiaddl
add
test
cmpsb
shll
mov
xchg
pop
rcll
push
add
add
push
dec
inc
dec
xor
cs
insb
add
mov
adcl
test
inc
and
das
dec
mov
pop
fbld
jmp
iret
jae
xchg
lret
lcall
lret
lods
or
push
test
popa
incl
popf
ret
cltd
sbb
jl
leave
aam
pop
sub
jmp
imul
ret
push
call
jmp
sbb
inc
roll
inc
mov
jl
out
subb
sub
addl
pusha
jmp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
mov
push
xchg
repz
loopne
xrelease
movw
movzbl
add
cmp
je
jmp
push
jge
negl
xchg
aam
push
pushf
addl
jmp
mov
lods
mov
loop
sbb
mov
sbb
xchg
mov
popa
incl
popf
ret
mov
ljmp
xor
inc
imul
pop
sub
jmp
pushf
adc
and
cmpsl
aaa
push
mov
jbe
movl
sbb
insl
cmp
je
jmp
cmp
daa
call
jmp
aam
sub
mov
jmp
rcll
push
mov
add
js
jle
call
or
inc
push
dec
inc
dec
xor
cs
insb
add
mov
jp
sbb
sbb
push
fbstp
push
sub
mov
movl
jmp
adc
dec
ret
repz
insl
hlt
pop
hlt
mov
add
je
sub
add
andps
cmpsb
xor
scas
inc
pop
les
xor
jmp
decb
inc
hlt
insl
std
test
sbbb
jmp
add
sbb
mov
inc
add
inc
and
movw
jmp
cld
xchg
cmc
add
and
scas
xor
sbb
inc
and
popf
ret
in
push
xchg
int
mov
add
jmp
call
int3
and
push
mull
icebp
js
pop
into
test
sbb
add
cmpsb
pop
aam
mov
or
xor
xor
xchg
inc
jmp
push
jmp
xchg
adc
or
daa
mov
and
repz
dec
dec
jbe
pop
jmp
cmp
pushf
addl
pusha
jmp
inc
sti
mov
clc
mov
mov
push
fistps
test
jne
out
add
inc
es
loope
xchg
dec
call
jp
stos
or
stos
repnz
cmpsl
test
jl
jne
jno
push
call
jmp
push
pushf
xor
inc
cmpsl
sub
lds
mov
sti
jl
sub
cmpsl
xlat
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
add
test
xchg
call
jmp
pop
popa
jmp
js
sub
jp
push
adc
es
mov
ss
dec
push
xor
daa
outsb
mov
pop
sub
movb
movl
jmp
rclb
push
cmpsl
sbb
push
xchg
add
data16
cltd
mov
lret
and
add
pushl
lea
jmp
xchg
add
je
lea
lods
lret
inc
movsb
cmp
cmp
inc
adc
add
add
push
jmp
jb
je
out
push
cmp
arpl
xchg
gs
push
imul
inc
add
and
add
test
add
cmp
call
mov
call
jmp
pop
rcll
ja
lock
pop
pop
xchg
mov
dec
sbb
add
push
dec
inc
dec
xor
cs
insb
add
nop
mov
jecxz
push
push
xchg
push
call
jmp
pop
sub
jmp
lea
and
loope
jae
jmp
shl
jecxz
jmp
mov
inc
add
bound
add
jg
jo
loop
in
aad
dec
lret
push
jns
movups
das
call
or
dec
inc
imul
mov
jmp
rclb
cmpsl
push
xchg
jo
xorl
jbe
jmp
sldt
add
add
add
sbb
addl
jmp
push
popf
or
dec
fidivrs
mov
cs
and
mov
add
mov
arpl
test
push
call
push
jmp
pop
pop
ljmp
outsb
not
jmp
test
fisttpll
out
je
insl
hlt
pop
mov
adc
pop
or
push
pushf
addl
pusha
jmp
inc
int
and
cmp
jmp
push
fimull
fidivrl
cmp
inc
int3
inc
and
jg
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
sub
jne
pop
outsl
add
mov
xchg
or
mov
inc
and
popa
incl
popf
ret
jge
int3
sti
negb
jmp
jmp
mov
dec
fisttps
flds
inc
test
loopne
inc
add
inc
and
movw
movzbl
add
cmp
je
jmp
ror
dec
sahf
test
add
jl
rcl
das
mov
test
add
jmp
inc
inc
and
ss
pop
repnz
fs
lret
rorl
outsl
call
jmp
pop
ret
ret
mov
stos
and
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
lea
add
add
xor
push
jmp
dec
addl
jmp
pop
sub
jmp
sbb
es
mov
pop
sub
jmp
test
mov
sbb
fldt
cltd
or
xor
cmp
push
push
pushf
addl
pusha
jmp
jae
sbb
call
add
add
mov
lea
ret
jmp
fildl
mov
stc
or
cmp
mov
popa
stos
call
cmp
daa
in
pop
push
addb
sub
add
xor
fadds
jmp
test
lea
arpl
cmc
daa
and
sti
pop
fdivs
inc
and
popa
incl
popf
ret
xchg
adc
in
sbb
mov
addl
popf
lea
pushl
lea
jmp
cli
jns
mov
mov
movsl
int3
aas
aam
push
pushf
addl
pusha
jmp
jg
mov
imul
add
sbb
pop
sub
jmp
test
xchg
icebp
add
mov
fldcw
insb
pop
sub
movb
movl
popa
jmp
mov
lods
lret
inc
loope
notl
adc
test
leave
jmp
rclb
pop
mov
addl
mov
popl
jmp
ficompl
scas
pop
mov
les
mov
add
frstor
clc
dec
insl
cmpsb
cmp
mov
mov
or
cmp
add
rclb
sub
cmp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
jecxz
mov
cltd
or
insb
inc
rolb
shlb
dec
fstpt
sarl
mov
movl
movw
movzbl
add
cmp
je
jmp
and
push
es
inc
mov
cmp
cmp
cmp
sahf
pop
sub
jmp
pop
call
xchg
inc
clc
stc
lock
js
stos
in
outsb
sahf
ljmp
or
mov
push
scas
insl
call
jmp
in
mov
add
jmp
dec
out
pop
sub
jmp
out
je
lea
add
std
or
xor
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
fisttpl
frstor
call
jp
jp
and
push
pushf
addl
pusha
jmp
jg
jo
loop
mov
and
xor
add
ret
jmp
clc
pop
leave
test
fsubrp
imul
nop
fisttps
push
push
pminub
scas
pop
mov
sahf
jl
in
daa
mov
add
xorl
and
jmp
stc
jge
je
insb
fwait
sbb
aad
les
inc
and
popa
incl
popf
ret
aam
mov
dec
sub
xor
incl
jmp
ret
dec
fistpll
outsl
or
mov
gs
adc
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
gs
bound
xor
icebp
mov
movzbl
add
jmp
nop
push
mov
es
and
push
mov
lods
lret
inc
scas
xor
ss
call
jmp
orl
int
and
cmp
imul
pushf
addl
pusha
jmp
add
dec
fmuls
fcomps
nop
pop
sub
movb
movl
popa
jmp
aam
shlb
cmc
pushf
outsl
xchg
fisttps
jg
push
pushf
jmp
jne
ja
loope
sub
lcall
rcr
and
add
pushl
lea
jmp
push
ret
cmpsb
push
in
popf
or
int
ja
clc
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
xchg
sbbl
sti
imul
insl
ret
jg
push
call
push
jmp
fadds
mov
add
sahf
aaa
ljmp
push
mov
jmp
lods
mov
into
pop
cmp
push
mov
call
dec
test
lret
xchg
mov
lock
cld
mov
mov
sbb
mov
xchg
lock
jmp
cltd
push
adc
add
mov
addl
pusha
jmp
out
stos
pop
sub
jmp
mov
cmpsb
shll
mov
sar
jle
mov
pushf
lcall
add
add
mov
lea
ret
addl
jmp
aad
mov
jns
jmp
sub
dec
pop
mov
addl
mov
popl
jmp
sahf
sub
shr
inc
add
adc
jmp
ret
dec
fistpll
push
jno
daa
push
push
lret
pop
sub
add
pop
mov
addl
mov
popl
jmp
inc
into
pop
cmp
sbb
pop
mov
movsb
cmp
dec
fcoml
mov
jb
call
add
add
mov
lea
ret
addl
jmp
jbe
push
stos
cmp
pop
inc
fisttpl
fnsave
addb
inc
add
add
add
cmp
jle
call
mov
inc
roll
rcll
sub
or
popf
lea
jmp
pushf
or
sti
imul
adc
push
cld
adc
lcall
pushf
mov
lret
inc
pushl
lea
jmp
pop
leave
pop
cmp
outsb
mov
enter
insl
pushf
sub
call
mov
pusha
push
mov
lods
scas
sti
ret
lea
in
add
cmp
call
cmp
lcall
adcb
subb
sahf
or
cmpsb
sbb
push
fcompp
lcall
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
fstpt
shr
cmpsl
stos
cmp
movntq
and
jb
pop
pusha
jmp
pop
sub
jmp
or
ss
fdivl
in
pop
aas
mov
fdivrl
pop
jmp
push
lock
ja
mov
pop
fmuls
fmuls
shll
cs
sub
jmp
add
adc
add
cmp
shrb
loop
mov
push
outsb
push
call
jmp
movsb
pop
sub
jmp
sub
xchg
pop
xchg
adc
aam
lret
scas
pop
mov
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
enter
adc
push
pushf
addl
jmp
sub
mov
into
mov
ret
rorb
incl
popf
ret
leave
dec
ret
mov
and
pusha
jmp
sahf
pop
mov
and
sub
jmp
jne
push
std
push
call
jmp
xchg
push
mov
les
sub
jp
popf
or
jae
sbb
subl
movl
sbb
and
and
test
repnz
rclb
and
jbe
cmpl
sub
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
sarb
sub
out
cli
jb
insl
hlt
pop
icebp
pusha
mov
or
inc
add
add
subl
or
xorl
jmp
sub
and
and
cmp
cmp
popa
incl
jmp
pop
enter
outsl
aaa
cmpsb
xor
scas
insl
adcl
stos
call
mov
mov
fwait
xlat
shr
ja
inc
pushl
cmpl
int
sti
dec
pop
repnz
mov
dec
adc
or
push
pushf
addl
pusha
jmp
ret
lods
pop
cli
sub
dec
test
jecxz
out
mov
xchg
push
pushf
sti
push
mov
lret
jbe
adc
je
jmp
push
mov
jns
and
pop
and
bound
push
cmc
add
mov
add
cmp
jmp
movsl
cmp
and
aas
scas
lret
xor
cmp
je
jmp
in
push
pop
mov
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
cmc
gs
sub
loopne
and
pop
sub
jmp
jnp
outsb
or
push
cltd
jne
nop
loopne
mov
mov
push
call
jmp
pop
fmuls
fdivrs
jge
je
or
xchg
jp
popf
call
cld
filds
pop
and
mov
sti
jl
jne
fs
ret
xlat
push
mov
in
jle
jge
or
push
push
pushf
addl
pusha
jmp
call
loop
sahf
lret
faddp
cmp
cld
lock
int3
addl
mov
pop
sbb
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
adc
shll
sbb
cltd
das
mov
aaa
jmp
lret
movw
jmp
insb
in
sbb
dec
clc
jo
xorl
xchg
pop
sub
mov
movl
jmp
jno
outsb
or
push
dec
lds
iret
sub
pop
sub
jmp
inc
sub
sbb
fs
loop
jecxz
jne
lcall
pop
lret
scas
pop
scas
in
mov
popa
incl
popf
ret
cmp
je
jmp
pop
enter
and
xchg
add
fs
jns
jmp
sbb
adc
shlb
push
pushf
addl
pusha
jmp
movsb
xor
jbe
mov
loope
pushl
sub
jmp
xchg
add
push
mov
xchg
cld
rsm
call
or
pushf
addl
jmp
mov
and
jecxz
adc
aam
ret
std
sub
sub
add
mov
popa
incl
popf
ret
arpl
xchg
testb
jmp
ds
out
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
outsl
jb
sahf
jmp
xor
add
pop
mov
addl
jmp
pop
mov
js
and
mov
xchg
and
mov
gs
adc
sub
jmp
lret
push
pop
fimuls
xor
dec
sub
rcll
mov
sldt
add
add
add
imul
jmp
in
insb
loop
je
mov
shlb
insb
call
mov
pusha
push
mov
lods
scas
sti
ret
lea
dec
mov
shlb
stos
inc
ret
ret
fs
popf
insb
test
adcl
test
mov
jmp
enter
inc
out
jae
xchg
xor
les
mov
fcompl
jmp
mov
movl
movw
movzbl
add
cmp
je
jmp
sbb
lret
mov
cmpsl
sbb
inc
and
add
lods
add
add
jns
jmp
leave
pop
leave
test
mov
lds
sub
jmp
cmpsb
cmp
xor
int
fwait
push
or
inc
movl
popa
jmp
push
lret
pop
ds
cwtl
push
pushf
sti
push
hlt
test
and
pop
outsl
cld
das
pushf
addl
pusha
jmp
mov
mov
and
stc
or
or
stc
jmp
adc
sbb
add
or
dec
inc
imul
mov
mov
jns
push
mov
jmp
inc
fimuls
pop
dec
xlat
inc
and
imul
xor
lea
jmp
mov
nop
jnp
jo
loop
inc
aaa
jmp
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
and
out
stc
jmp
hlt
push
lahf
push
lcall
xor
call
push
js
jne
out
pop
mov
pop
sub
add
pop
mov
addl
jmp
xchg
setg
or
mov
cmpsl
push
aad
inc
fwait
cmp
orl
orl
add
popa
jmp
call
add
add
mov
lea
ret
addl
jmp
lea
mov
mov
popl
jmp
pop
sub
jmp
jb
add
and
mov
dec
mov
add
pop
mov
call
jmp
mov
lahf
cli
or
rclb
pop
mov
popf
or
adcl
test
movb
movl
popa
jmp
outsl
ljmp
bound
and
sbb
aad
push
fdivl
in
stc
ja
xorb
mov
jl
inc
and
add
pushl
lea
jmp
test
add
sub
add
imul
stos
sub
xor
sub
xchg
orb
inc
and
jmp
mov
add
add
pusha
ret
dec
fdivrs
xor
mov
add
jmp
mov
movl
movw
movzbl
add
jmp
call
jmp
pop
xlat
inc
and
cmp
jg
sub
cmp
je
jmp
pop
sub
jmp
push
fimuls
add
mulb
pop
icebp
fstp
mov
jns
pushf
addl
pusha
jmp
std
call
jmp
sub
cmp
call
imul
popa
in
dec
jnp
mov
ja
test
sti
sbb
jmp
inc
rolb
sarb
adc
nop
sbb
push
add
add
call
jmp
daa
mov
dec
mov
or
inc
push
dec
inc
dec
xor
cs
insb
add
into
mov
mov
das
mov
mov
inc
mov
daa
and
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
cmp
jb
jnp
arpl
cmc
adc
mov
incl
jmp
adc
call
jmp
push
xchg
jb
gs
jle
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
mov
sub
jmp
out
nop
test
ret
add
jmp
jmp
call
jmp
pop
mov
js
popa
jmp
dec
pushf
addl
pusha
jmp
sbb
call
jmp
push
xchg
add
mov
ret
sbb
fists
inc
add
fwait
add
add
add
add
jmp
and
js
fwait
push
shr
or
inc
push
dec
inc
dec
xor
cs
insb
add
jb
jl
jne
out
pop
dec
test
add
add
pop
add
cmp
imul
das
push
call
jmp
movsl
call
jmp
cmpsb
xor
scas
pop
int
call
xchg
test
loop
loop
mov
call
jmp
imul
pop
repnz
js
cmp
movl
movw
jmp
push
int3
inc
and
add
es
fdivl
add
add
pop
sub
jmp
rorb
mov
pop
sub
jmp
subl
adc
add
sub
mov
xchg
bound
mov
das
call
movb
add
sbb
inc
andb
shll
cmpsl
cmp
call
jmp
enter
imul
push
insb
inc
ret
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
das
fisubs
test
lcall
add
jmp
jl
insl
hlt
pop
jecxz
and
lcall
pop
and
daa
pusha
jmp
outsl
in
jge
notl
ffreep
lods
sbb
pop
sub
movb
jmp
mov
add
jmp
addl
testl
cmc
add
add
pushl
lea
jmp
insb
and
pop
jmp
call
jmp
mov
roll
in
mov
addl
jmp
sub
pop
div
adc
pushf
addl
pusha
jmp
call
jmp
inc
ret
ret
inc
inc
call
repz
mov
rcr
and
fwait
or
jno
sub
push
call
jmp
pop
sub
jmp
filds
add
add
jmp
jno
imul
repnz
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
popf
mov
mov
xchg
icebp
add
mov
movl
movw
jmp
call
jmp
test
and
fsubs
fistpl
popa
jmp
add
imul
pushf
addl
pusha
jmp
pop
sub
jmp
addr16
jmp
mov
shlb
or
mov
add
cmp
je
jmp
and
xor
call
jmp
fsts
mov
cmc
es
mov
popa
incl
popf
ret
call
jmp
or
fmul
mov
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
mov
aad
jmp
jle
call
jmp
inc
int3
inc
and
leave
lods
add
pop
mov
addl
mov
popl
jmp
mov
mov
and
inc
fisttpl
sub
popa
incl
popf
ret
or
xor
add
add
les
add
dec
das
ficompl
hlt
imul
adc
and
and
inc
and
movw
movzbl
add
cmp
je
jmp
or
int
push
pushf
addl
pusha
jmp
aas
scas
aas
pop
test
pop
stos
inc
dec
mov
pop
sub
jmp
pop
sub
jmp
in
add
add
jmp
push
push
xor
es
popf
cs
call
xchg
jmp
hlt
add
imul
mov
loopne
jb
xchg
xchg
push
call
jmp
rolb
mov
call
jmp
mov
leave
mov
and
add
push
dec
inc
dec
xor
cs
insb
add
nop
ljmp
add
push
mov
jle
cmp
adcl
xchg
add
add
and
add
or
add
mov
jns
and
mov
out
sldt
add
add
add
dec
lea
ret
addl
jmp
int
sub
jmp
call
jmp
int
lret
jecxz
shrb
jns
addl
pusha
jmp
mov
in
sbb
jmp
add
push
dec
inc
dec
xor
cs
insb
add
nop
dec
pushf
xchg
sub
jmp
call
jmp
xor
sbb
call
sbb
or
jecxz
mov
dec
imul
jge
jmp
call
jmp
mov
mov
lahf
mov
mov
popa
popf
ret
pop
mov
jg
cmp
int
outsl
sti
mov
popa
incl
popf
ret
ds
call
inc
and
test
sahf
xor
bound
add
xor
add
sub
inc
cmp
inc
mov
call
jmp
add
movsb
and
test
mov
movl
movw
movzbl
add
cmp
je
jmp
test
cld
jmp
sbb
call
jmp
imul
addr16
shlb
sbb
inc
add
add
cmp
je
jmp
je
imul
add
add
jmp
jne
popa
add
sbb
dec
call
sbb
or
shl
and
scas
and
pusha
pop
fdivl
in
in
notl
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
add
lret
jmp
or
scas
add
call
add
add
mov
lea
ret
jmp
in
and
sub
add
add
dec
pop
add
out
loop
je
cmp
pop
hlt
pop
push
call
push
jmp
add
or
add
pusha
pop
add
or
lods
mov
scas
lods
aad
jmp
jae
mov
add
push
jmp
call
jmp
inc
into
pop
cmp
sbb
fsubr
sbb
add
pop
int
pop
cmp
pusha
mov
test
mov
and
call
jmp
call
jmp
insb
jmp
push
in
add
sbb
dec
addl
popf
lea
pushl
jmp
jae
call
jmp
mov
xlat
mov
adc
xchg
adc
add
in
mov
popl
jmp
fstpt
test
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
dec
mov
nop
jmp
sbb
cmp
call
jmp
mov
test
cmp
cld
negl
call
jmp
or
shrd
sbb
add
add
jmp
pop
xchg
add
jmpw
push
call
mov
dec
hlt
mov
int3
mov
add
data16
xchg
outsb
movsl
jo
cs
int
lea
and
out
adc
ja
inc
pusha
jmp
sbb
aas
lods
cmp
ss
call
jmp
push
pop
sub
jmp
call
jmp
je
jnp
in
sub
cli
pop
mov
fs
jmp
ss
cwtl
ret
and
inc
xor
cmp
jmp
loope
ds
sub
jmp
call
jmp
stos
inc
shll
outsl
sarb
test
jmp
push
push
xor
and
call
jmp
int
iret
stos
pop
loope
mov
popa
incl
popf
ret
call
jmp
fisttpll
mov
int3
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
xlat
les
call
jmp
stc
popa
icebp
nop
arpl
adc
add
inc
in
jmp
into
pop
dec
adc
in
fs
push
adcb
xorb
rcll
push
pushf
mov
movl
movw
movzbl
add
cmp
je
jmp
inc
fmuls
fsubs
adc
jmp
jmp
xor
or
or
add
add
jmp
mov
mov
sbb
movmskps
xor
jmp
dec
aam
sub
inc
and
jmp
aam
call
jmp
icebp
jae
xchg
jle
inc
in
mov
movl
movw
jmp
call
jmp
filds
mov
cmc
not
popa
incl
popf
ret
call
jmp
xchg
xor
ds
pushf
movzbl
add
jmp
call
jmp
jns
dec
das
ficompl
in
pop
sub
movb
movl
popa
jmp
sarb
mov
call
jmp
push
pushf
xor
jo
sub
cmp
mov
add
cmp
je
jmp
cwtl
sbb
jl
jne
imul
leave
jb
call
jmp
int
ret
mov
test
sub
add
pop
mov
addl
mov
popl
jmp
int3
call
jmp
orl
decb
daa
shlb
mov
sldt
add
add
add
and
jmp
insl
out
pushf
ret
call
jmp
mov
movsl
int3
aas
rcr
fsubr
adc
add
sbb
or
shl
and
scas
and
mov
call
mov
dec
add
push
adc
and
mov
call
jmp
or
popa
mov
repz
pushf
addl
jmp
fisubl
sub
add
add
mov
stos
cmp
dec
xchg
pop
aas
popa
jmp
sbb
add
aam
adc
add
inc
in
jmp
into
pop
dec
adc
in
fs
ljmp
loopne
jb
fsts
mov
ds
call
jmp
mov
repz
push
call
push
jmp
xchg
imul
in
pop
inc
add
inc
jmp
call
jmp
mov
adc
mov
or
add
push
dec
inc
dec
xor
cs
insb
add
cmpsl
pop
cwtl
push
imul
pop
sub
movb
movl
jmp
call
jmp
sbb
xchg
dec
imul
or
popf
lea
pushl
lea
jmp
xchg
xlat
pop
mov
jmp
push
xor
aaa
call
jmp
clc
push
lahf
push
or
cmp
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
pop
jb
mov
push
xchg
add
addr16
inc
imul
push
mov
popl
jmp
sbb
push
ret
push
pushf
addl
pusha
jmp
pop
sub
jmp
call
jmp
dec
fmuls
fdivrs
ret
pop
sub
movb
movl
popa
jmp
sbb
call
jmp
cwtl
setg
or
daa
mov
inc
mov
and
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
sub
jbe
jmp
add
call
jmp
inc
rolb
sarb
push
movsl
xchg
outsl
pop
fldl
popf
lea
pushl
lea
jmp
xorb
call
jmp
dec
fimuls
push
and
pushf
call
add
add
mov
lea
ret
addl
jmp
imul
add
xlat
adc
add
push
mov
cmpsb
sub
decl
arpl
jle
pop
jmp
mov
js
inc
pushf
addl
pusha
jmp
fs
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
add
mov
mov
inc
mov
or
jmp
add
add
add
jmp
adc
and
jne
popf
test
and
incl
popf
ret
filds
mov
sub
add
pop
jmp
ret
stc
call
jmp
mov
popf
jmp
addl
jmp
mov
jmp
cmp
add
add
jmp
ss
pop
test
outsb
sbb
sub
add
add
add
xor
fs
ret
jmp
xchg
push
pushf
sti
push
mov
mov
xor
pop
add
add
sub
inc
aas
repz
push
imul
dec
push
xor
sub
and
call
mov
sahf
or
cmpsb
adc
cmp
sbb
addl
jmp
hlt
xor
add
add
jmp
rclb
inc
daa
xlat
call
jmp
call
jmp
mov
mov
jnp
push
pop
sub
mov
movl
movw
movzbl
add
jmp
mov
mov
leave
pop
cmp
sub
call
mov
cmp
xchg
stos
leave
cmpsl
mov
pop
or
pusha
insb
push
call
jmp
pop
sub
movb
jmp
movsb
xchg
add
add
jmp
ficompl
test
mov
inc
and
add
pushl
lea
jmp
add
add
add
add
jmp
pop
fdivl
in
dec
push
subl
add
add
in
add
call
jmp
scas
das
mov
inc
inc
mov
popl
jmp
pop
sub
jmp
hlt
and
mov
call
jmp
xor
mov
push
pushf
addl
pusha
jmp
mov
mov
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
or
mov
and
ret
pop
sub
jmp
fsubr
push
add
mov
add
ljmp
mov
call
imulb
inc
aas
repz
push
imul
mov
jne
call
jmp
mov
xlat
mov
jmp
call
jmp
rorb
dec
out
or
sbb
inc
dec
popa
jmp
add
loope
mov
jmp
or
add
add
jmp
add
insl
js
and
inc
add
inc
and
movw
movzbl
add
cmp
je
jmp
call
jmp
insl
loop
pop
loop
dec
ret
ret
gs
pushf
addl
pusha
jmp
fcmove
gs
sub
mov
movl
jmp
repnz
call
jmp
pop
fisttpl
push
call
add
out
push
inc
inc
psraw
ds
out
adc
push
lea
push
call
jmp
call
jmp
popf
or
xchg
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
push
imul
add
add
jmp
xor
mov
add
ret
movzbl
add
cmp
je
jmp
or
add
add
jmp
add
cmp
xchg
add
push
imul
pop
cmp
add
add
jmp
cmc
popa
icebp
nop
arpl
pop
sub
jmp
sar
and
jmp
push
lcall
add
sbb
add
inc
xlat
inc
and
xor
push
pushf
addl
pusha
jmp
jmp
sub
push
jmp
jns
call
jmp
iret
pop
leave
test
mov
mov
popf
ret
or
sub
pop
jmp
call
jmp
cld
outsl
lcall
popa
incl
popf
ret
xor
call
jmp
push
int
and
and
dec
repz
mov
stc
rorb
jae
lock
icebp
inc
push
int
fcoml
call
jmp
lods
movsb
ret
mov
or
inc
push
dec
inc
dec
xor
cs
insb
add
nop
into
scas
in
jmp
gs
or
pop
sub
mov
movl
jmp
mov
nop
mov
test
jmp
shr
add
add
jp
add
jg
ja
loope
pop
into
test
pop
sub
jmp
call
jmp
call
jmp
filds
mov
call
call
jmp
lahf
call
jmp
add
mov
dec
call
jmp
cs
pop
cmp
add
add
jmp
clc
pop
leave
test
fmulp
dec
fnstcw
or
inc
push
dec
inc
dec
xor
cs
insb
add
lds
lcall
dec
in
ret
push
pushf
addl
pusha
jmp
or
fisubl
push
call
push
jmp
addl
jmp
sub
mov
add
das
lods
call
dec
scas
sahf
jmp
fsubrs
xchg
cmp
cmc
cmp
jmp
loop
hlt
xchg
outsb
adcb
dec
insl
xchg
mov
popa
incl
popf
ret
pop
pop
sub
add
jmp
inc
push
xor
es
ret
push
lds
insl
out
adc
dec
push
dec
test
push
call
add
add
mov
lea
ret
jmp
lcall
out
movl
sbb
das
cmp
je
jmp
sahf
adc
ss
pop
pop
mov
addl
mov
popl
jmp
push
pop
addr16
out
pop
sub
jmp
inc
leave
pop
cmp
daa
fsts
lods
pop
mov
push
addl
popf
lea
jmp
sub
nop
sbb
aad
int
in
bound
addr16
jmp
adc
cwtl
jnp
sub
mov
jmp
dec
fisttpll
out
adc
jnp
fisttpll
out
fadds
dec
inc
push
dec
inc
dec
xor
cs
insb
add
nop
dec
test
xchg
jmp
add
leave
pop
int
xchg
stc
or
adc
call
jmp
call
jmp
inc
shlb
pop
bound
push
std
or
fldenv
or
fcmovu
into
inc
call
cmp
shrb
loop
mov
push
outsb
jno
jmp
pop
push
xor
jns
xchg
cmp
shr
or
inc
push
dec
inc
dec
xor
cs
insb
add
mov
into
addr16
sub
add
jns
mov
movsb
push
add
cvtpi2ps
jmp
aaa
test
pop
test
insl
mull
icebp
push
fiadds
mov
testb
sub
sbb
pop
cmp
je
jmp
lea
push
sub
dec
frstor
dec
mov
xchg
addr16
fsubrp
arpl
aam
inc
and
popa
incl
popf
ret
or
inc
mov
add
add
pop
sub
jmp
push
aam
sub
mov
sbb
sub
inc
mov
and
inc
and
movw
jmp
ret
mov
insl
hlt
pop
jmp
scas
int
call
pop
pop
sub
sbb
pop
pop
inc
jg
mov
lods
cmp
jmp
add
jmp
test
mov
jle
mov
or
mov
sldt
add
add
add
pusha
lea
ret
addl
jmp
pop
rolb
rcrb
jns
add
push
pop
into
test
in
mov
pop
sub
jmp
pop
pop
sub
jmp
push
jecxz
push
in
lock
test
sbb
mov
add
mov
add
sbb
arpl
adc
rolb
rclb
xor
pop
mov
addl
mov
popl
jmp
out
jg
mov
sbbb
out
sbb
fsubp
pop
pop
adc
int
jbe
icebp
jle
addl
pusha
jmp
mov
aad
addl
outsb
stc
jmp
xorl
cmpl
add
popa
jmp
mov
mov
mov
js
and
mov
sub
ss
dec
pusha
jmp
bound
call
jmp
stos
xor
notl
jge
jo
loop
pop
or
pushl
lea
jmp
dec
inc
and
ja
push
lret
jmp
data16
xchg
outsb
jmp
mov
add
push
dec
inc
dec
xor
cs
insb
add
xor
mov
jns
paddsb
shll
fs
jmp
pop
fimull
fimull
mov
mov
mov
push
rolb
shlb
loopne,pn
call
jmp
divl
xorb
or
lds
iret
and
lcall
cmp
sahf
sbb
mov
pop
scas
and
cs
cmpsl
jmp
leave
dec
ret
mov
popa
es
add
movl
popa
jmp
es
mov
sbb
insb
sub
movl
jmp
pop
roll
shll
cmp
and
cs
lock
add
pushl
lea
jmp
stos
and
hlt
push
cld
sbb
push
lods
daa
mov
and
push
sub
add
pop
mov
addl
mov
popl
jmp
loopne
jecxz
jne
ljmp
jns
pop
rolb
popa
jmp
mov
lds
push
xor
addr16
or
inc
aad
dec
scas
sbb
sldt
add
add
add
inc
lea
ret
addl
jmp
push
pushf
addl
pusha
jmp
and
sub
jmp
stos
inc
shll
jmp
jge
stos
das
mov
xor
mov
call
test
insb
or
mov
call
mov
cmp
xchg
stos
leave
cmpsl
mov
pop
adc
jae
das
push
call
push
jmp
enter
push
mov
sbb
xor
jp
sub
sldt
add
add
add
lea
ret
jmp
sbb
push
lahf
punpckhdq
add
add
push
dec
inc
dec
xor
cs
insb
add
nop
rol
inc
in
jmp
setno
pusha
xchg
cmp
xchg
add
jg
mov
inc
out
adc
imul
jmp
out
jae
xchg
jbe
imul
sbb
popf
jp
jle
cmp
je
jmp
mov
ret
jmp
mov
sbb
pusha
bound
addl
mov
popl
jmp
movsl
mov
test
sbb
add
adc
sub
xor
pop
popa
dec
dec
xchg
clc
shll
setg
or
call
jmp
sbb
jmp
jmp
aaa
mov
inc
mov
int
fdivrs
xor
dec
lret
or
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
fcmovnb
in
jmp
jg
push
es
cs
mov
fwait
sti
jno
xorb
mov
movl
movl
movzbl
add
jmp
gs
bound
cmp
dec
jge
pusha
pop
repnz
pop
mov
popa
popf
lea
ret
das
push
sub
mov
scas
leave
cmp
mov
lret
es
mov
in
and
fistl
pushf
addl
pusha
jmp
imul
roll
mov
out
cmp
inc
movsb
addb
je
jmp
dec
fisttpll
out
or
or
jae
push
pushf
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jne
add
adc
fwait
or
sub
int3
pop
sub
jmp
lods
cmp
cmpsl
aaa
push
mov
xor
push
jae
xor
add
outsl
pop
cmp
pusha
mov
test
call
jmp
add
pop
rcll
jbe
mulb
jns
sahf
mov
call
jb
mov
test
add
add
sbb
mov
mov
mov
cwtl
decl
in
jo
loop
lods
mov
sub
lea
ret
loop
mov
leave
add
add
mov
add
dec
ret
mov
pop
sub
mov
movl
movl
movzbl
add
cmp
jmp
adc
push
fisttpl
fnsave
xchg
pop
xchg
bound
push
les
addl
pusha
jmp
aas
lcall
cld
jmp
out
imul
insl
int3
pop
xlat
inc
and
adc
inc
fidivrl
adc
and
or
add
push
push
inc
push
xor
cs
insb
add
nop
jge
sub
call
jmp
cli
je
lea
inc
shll
sub
push
dec
leave
mov
inc
and
divl
std
pop
pusha
jmp
dec
fdivrs
or
je
data16
jbe
sbb
add
pop
adc
das
cwtl
cmpsl
ret
sbb
out
lret
notl
ss
jmp
popf
push
pushf
sti
push
jecxz
sbb
mov
mov
and
popa
je
pop
pop
sub
movb
movl
popa
jmp
cmp
mov
jmp
push
adcb
andb
loopne
jb
popa
sti
imul
adc
call
push
push
inc
push
xor
cs
insb
add
nop
mov
mov
jmp
pop
sub
jmp
cmp
aas
pop
test
popf
insb
popf
movsb
cmp
sarb
push
jl
addl
pusha
jmp
dec
cpuid
push
xor
cmp
inc
and
movw
jmp
adc
cmp
jnp
jg
mov
pop
xor
ficoms
add
out
sub
sub
sbb
mov
call
jmp
or
push
push
inc
mov
popa
incl
popf
ret
movzbl
add
cmp
jmp
test
mov
orl
ja
div
lahf
mov
popa
incl
popf
ret
cld
pop
int3
stos
data16
push
sbb
out
incl
and
add
mov
push
xor
sbb
mov
inc
mov
imul
sbb
or
ss
pushf
addl
jmp
jbe
gs
pop
stc
jge
je
insb
inc
mov
je
jmp
fcomps
xchg
addr16
test
add
add
inc
push
xor
cs
insb
add
nop
icebp
lods
mov
jb
in
inc
rclb
sub
daa
inc
jg
push
call
jmp
or
insl
iret
cmp
iret
pop
sub
mov
jmp
push
sub
icebp
in
or
call
inc
les
in
sbbb
mov
stc
lahf
xchg
loope
jmp
mov
shlb
add
jbe
and
jo,pt
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
mov
jmp
add
jl
loopne
adc
or
xchg
add
addr16
pop
movl
movw
movzbl
add
cmp
jmp
stos
cmp
fmuls
fcomps
rcll
pop
mov
imul
lea
pushl
lea
jmp
imul
add
pushf
addl
pusha
jmp
jl
sub
jmp
cld
imul
xor
fisttps
flds
dec
fnstcw
je
jmp
sub
jmp
jmp
loop
out
mov
mov
mov
cmpsl
aaa
push
mov
call
push
push
inc
push
xor
cs
insb
add
nop
test
xchg
sahf
jmp
andl
and
pushf
outsl
ja
xorb
aad
fimull
in
call
loopne
std
popl
xchg
jbe
adc
in
leave
jl
jl
fists
sub
jmp
es
addl
dec
xor
inc
and
jmp
and
in
bound
add
popa
incl
popf
ret
push
repnz
pop
bnd
popa
incl
popf
ret
cmp
sub
adc
out
push
ret
cmpsb
push
mov
jnp
mov
or
movl
sbb
push
cmp
je
jmp
loope
cmc
pushf
outsl
test
jmp
popf
sub
dec
mov
pushf
addl
pusha
jmp
mov
push
sub
jmp
aas
mov
jecxz
lcall
std
test
inc
and
popa
incl
popf
ret
add
adc
outsb
loopne
adc
add
jl
out
call
mov
sub
jp
sbb
push
call
jmp
mov
popa
incl
popf
ret
cli
jnp
mov
test
sahf
stc
or
cmp
mov
jg
push
pushf
addl
pusha
jmp
inc
inc
and
ss
mov
and
jae
or
inc
push
dec
inc
dec
xor
cs
insb
add
cmp
fs
push
les
test
call
jmp
adcl
jmp
push
in
in
jge
negl
cmc
notl
roll
mov
pop
sub
jmp
dec
fisttpll
out
in
jbe
cmpl
sarl
repnz
addl
add
inc
and
movw
movzbl
add
cmp
je
jmp
rorb
mov
cltd
push
call
sub
inc
pushf
pop
ja
pusha
mov
xor
fidivrl
jmp
imull
fwait
jbe
js
je
out
inc
call
push
push
inc
push
xor
cs
insb
add
nop
add
jmp
jns
mov
push
int3
inc
and
mov
and
movsl
and
pop
sub
mov
movl
movw
jmp
out
fidivrl
scas
leave
cmp
xchg
xchg
jae
mov
jmp
idivb
mov
xor
pop
cld
adcl
test
lods
rcrl
leave
lahf
nop
jl
inc
jle
or
cmp
call
jmp
inc
rclb
sub
mov
mov
incl
popf
ret
jne
movzbl
add
jmp
into
dec
fdivrs
or
jae
or
outsb
cmpsb
cmpsb
pop
call
push
push
inc
push
xor
cs
insb
add
nop
fld
rclb
arpl
outsb
pop
cmp
je
jmp
stc
jb
xchg
fists
lods
pop
xchg
sbb
jb
adc
push
pushf
addl
jmp
jbe
outsb
or
sbb
sbb
aad
imul
sub
jmp
int3
loopne
adc
add
gs
add
sub
xor
jmp
jmp
or
pop
leave
test
lods
push
push
xor
daa
pop
inc
pop
sub
add
push
inc
push
dec
xor
cs
insb
add
nop
mov
mov
mov
std
jae
xchg
jno
jbe
loopne
xchg
ss
pop
sub
mov
jmp
sub
push
lds
xchg
or
scas
aas
pop
test
cmc
aad
push
call
jmp
leave
pop
repnz
fs
mov
enter
popa
nop
es
movl
movw
jmp
mov
mov
in
sbb
push
pop
push
xor
add
mov
jmp
ret
pop
repnz
rcll
mov
js
and
xchg
add
and
mov
call
jmp
movzbl
jmp
sub
sub
add
adc
mov
lock
incl
popf
ret
sub
in
insb
loop
je
pop
xchg
mov
mov
test
pop
ljmp
sub
fistps
test
mov
push
shlb
orl
gs
je
jmp
test
pushf
sti
push
hlt
das
movsb
cmp
or
sbb
jle
imul
aas
pop
test
add
sbb
pop
enter
mov
push
dec
push
pushf
addl
pusha
jmp
xchg
mov
push
stos
xchg
call
jmp
pop
mov
add
nop
out
sbb
ja
loop
lods
dec
mov
outsb
sub
adc
push
add
add
ja
loope
stos
je
or
loope
addl
pusha
jmp
rorb
mov
xchg
pusha
jns
jns
jmp
fs
gs
or
and
incl
popf
ret
in
jl
jne
and
jbe
cmpl
fwait
mov
inc
mov
popa
incl
popf
ret
es
inc
mov
xor
dec
dec
fimuls
push
test
xchg
pushf
addl
pusha
jmp
sbb
mov
pop
sub
jmp
fs
insb
or
testl
out
jne
mov
call
fsubr
or
inc
push
inc
push
dec
xor
cs
insb
add
dec
pop
push
xor
jo
push
mov
aaa
push
mov
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
mov
sbb
mov
and
rclb
pusha
pop
bnd
mov
add
inc
push
out
xor
jae
push
insl
test
sub
or
pslld
mov
xchg
mov
icebp
pusha
push
call
jmp
push
mov
mov
pop
push
pushf
jmp
bnd
xorl
pop
mov
push
mov
lock
bound
and
incl
popf
ret
mov
movsl
int3
aas
aam
fisttpll
out
stc
adcl
test
sti
imul
adc
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
xchg
addl
pusha
jmp
push
fisttps
flds
loopne
mov
test
popa
icebp
nop
arpl
pop
jmp
hlt
pushf
scas
push
inc
hlt
pop
sub
jmp
call
add
cmpl
jg
loop
repz
mov
mov
out
add
sbb
jp
or
inc
push
inc
push
dec
xor
cs
insb
add
nop
fisubrl
in
jbe
call
cmp
incl
popf
ret
pop
sub
jmp
in
clc
lahf
push
dec
rclb
sub
xor
cmp
pushf
addl
pusha
jmp
jb
jbe
loopne
shrl
pop
call
dec
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
jbe
adc
jmp
xchg
mov
sbb
adc
loope
inc
add
add
push
rcll
push
clc
xchg
test
lods
lret
inc
movsb
mov
mov
xchg
pop
sub
mov
movl
movw
movzbl
add
cmp
je
jmp
pop
leave
pop
cmp
and
dec
sub
movl
cmp
jb
jne
out
dec
addb
and
jmp
leave
push
shll
shrl
cwtl
pop
lret
pop
ds
ja
jge
int3
call
adc
sub
xor
pop
popa
dec
dec
xchg
clc
shll
aad
pop
push
call
jmp
sbb
ret
mov
ss
push
push
push
cld
push
ja
jle
call
cmp
ret
push
jmp
xor
cmp
fdivrl
mov
fs
je
jmp
add
sub
mov
add
push
lahf
inc
pusha
jmp
sbb
call
jmp
push
cmc
gs
jp
lea
insb
or
loopne
mov
les
or
xchg
add
out
incl
ds
mov
stos
mov
call
nop
scas
in
arpl
inc
cmp
pop
dec
roll
push
iret
pop
cmp
popa
dec
inc
pop
push
call
jmp
xor
and
jmp
popa
out
adc
push
loopne
cli
popf
insb
andb
adc
or
pushf
xor
inc
int3
pop
sub
mov
movl
movw
movzbl
add
jmp
lret
mov
call
dec
subb
ss
mov
or
inc
push
inc
push
dec
xor
cs
insb
add
nop
or
cmp
jmp
xor
inc
and
jmp
pop
pop
jp
jae
mov
jle
imul
or
inc
push
inc
push
dec
xor
cs
insb
add
nop
repnz
push
iret
jmp
lock
push
push
inc
push
xor
cs
insb
add
xchg
add
add
xchg
add
js
mov
out
jl
jne
jno
and
call
jmp
pop
jge
call
add
add
mov
lea
ret
jmp
gs
imul
pop
popa
lock
xor
mov
inc
call
mov
sub
jp
sbb
pop
push
call
push
jmp
xlat
inc
xlat
mov
lods
jns
jl
negb
addl
jmp
sbb
mov
int3
push
les
sub
ret
jmp
jns
jo
loop
mov
call
add
pop
mov
addl
mov
popl
jmp
push
and
addr16
insl
hlt
pop
lods
fildl
mov
std
inc
fisttpll
out
mov
push
pushf
addl
pusha
jmp
call
lret
add
cmpl
cmpl
add
popa
jmp
push
pushf
addl
pusha
jmp
sbb
sub
cmp
hlt
fldcw
add
pushl
lea
jmp
lods
push
pushf
sti
push
xchg
or
inc
stos
sub
sti
pop
add
je
jmp
fwait
call
push
push
inc
push
xor
cs
insb
add
pop
lret
mov
fldt
call
jmp
push
aam
sub
lea
nop
push
sbb
mov
sbb
dec
lods
call
add
add
mov
lea
ret
jmp
add
into
dec
fistpll
xchg
repnz
fnstsw
popf
ret
sysexit
nop
movl
jmp
or
popa
and
mov
pop
sub
movb
jmp
insb
in
sbb
dec
pop
rolb
rcrb
mov
test
addl
popf
lea
pushl
lea
jmp
pop
xchg
pop
bound
dec
mov
adc
or
inc
xlat
mov
mov
xchg
jl
mov
js
jl
jnp
mov
cs
aas
scas
aas
pop
test
and
aas
adcb
sbb
jbe
jno
jecxz
in
in
je
je
loop
pop
loop
ja
clc
in
shlb
nop
out
in
mov
sub
pop
push
roll
aad
xor
sbb
cmp
outsl
lcall
insb
or
orl
push
call
pop
mov
cltd
inc
int
fnstcw
lods
mov
movsl
popf
pop
movb
inc
test
mov
outsl
in
sbb
xlat
mov
test
popf
or
jae
xchg
dec
lds
iret
das
sahf
adc
dec
mov
addl
mov
popl
jmp
ljmp
insb
loop
je
ss
cmp
pop
mov
xchg
int
repnz
cmpsl
mov
mov
aad
sub
aaa
jne
ja
loope
inc
aam
sub
lds
aaa
ret
clc
outsb
or
push
rorl
mov
aam
mov
push
mov
pop
cmp
jle
test
cwtl
push
imul
jnp
mov
jns
push
sbb
inc
lods
pop
sub
add
pop
jmp
add
and
dec
cltd
push
mov
es
adc
add
push
jmp
add
popa
jp
jp
rcrl
stos
pop
test
mov
icebp
jg
mov
pop
sahf
or
cmpsb
dec
orl
imul
sbb
jle
or
jg
mov
sub
jb
jno
jecxz
cmp
mov
dec
mov
xor
sub
jne
out
dec
or
add
sahf
outsl
divb
xchg
add
cmp
js
je
out
inc
movsb
cmp
push
les
hlt
xchg
outsb
fstps
xchg
testb
push
orl
jno
in
cli
popf
insb
lret
dec
fdivrs
ja
loope
jnp
xchg
cmc
add
pop
fmuls
fdivs
insl
call
lret
mov
mov
push
clc
dec
rclb
or
mov
jmp
mov
push
mov
inc
and
push
xor
cmp
lock
mov
and
dec
fmuls
fdivrs
jbe
cmpl
lds
iret
das
mov
mov
and
adcl
push
lret
sti
xor
mov
xchg
clc
pusha
notb
inc
and
icebp
nop
arpl
dec
rolb
shlb
cld
xchg
cmc
add
test
mov
and
mov
mov
jecxz
notl
mov
call
leave
lahf
nop
jl
inc
jle
or
cmp
jnp
add
call
and
ljmp
jns
jmp
out
insl
std
test
mov
sarb
cmpsl
xor
cmp
add
xor
and
inc
and
movw
movzbl
add
cmp
je
jmp
rcrl
test
mov
sti
pop
addr16
jge
idivl
iret
inc
aam
dec
mov
cmpsb
inc
and
xchg
or
jne
movsb
ret
ds
frstor
scas
pop
scas
aas
lods
cmp
insb
or
lds
jmp
sub
pop
repnz
mov
lods
cmp
jmp
push
in
sbb
addr16
dec
adc
or
rcrb
iretw
sti
fs
popf
insb
fistpl
test
and
pop
int3
stos
data16
mov
inc
mov
push
cmc
daa
movsb
and
inc
rclb
and
pop
repnz
xchg
dec
int
fdivrs
add
push
roll
movsl
xor
daa
cmp
aaa
mov
xchg
pushf
sti
push
clc
mov
scas
lret
test
cwtl
decl
call
sbb
mov
push
xor
popa
lock
xor
push
mov
jne
out
pop
xchg
add
pop
into
test
and
sub
lea
mov
sbb
insb
lahf
and
dec
sub
jo
mov
jns
aas
jno
arpl
cmc
pop
sbb
inc
in
sbb
push
adc
pushf
xor
jo
insb
or
loopne
movsb
ret
ds
inc
xlat
mov
lods
gs
adc
or
inc
and
xor
cld
push
rolb
sarb
lea
mov
lcall
or
mov
xchg
repz
ljmp
xor
in
cltd
push
add
sbb
inc
daa
shlb
aam
fidivrl
repz
mov
popf
jns
sahf
das
fsubp
or
mov
mov
aas
jmp
fdivrl
jno
addr16
push
setae
ja
mov
dec
mov
jmp
push
fisttpl
fnstsw
repz
mov
dec
xchg
repz
out
jno
rcrl
scas
pop
mov
xor
cmp
mov
stos
xor
mov
rolb
scas
aaa
mov
out
gs
pushf
outsl
sbbl
and
xor
pop
mov
pushf
jne
xlat
inc
and
sub
jb
in
cli
outsl
lcall
jle
call
cwtl
imul
dec
cmp
mov
gs
jl
jnp
mov
push
int
and
and
test
popa
icebp
nop
arpl
test
cmpsl
ret
faddl
mov
jmp
jns
mov
inc
fimuls
dec
popa
cld
xchg
cmc
add
in
push
mov
add
movzbl
jmp
dec
call
dec
ljmp
and
pusha
xchg
adc
clc
outsb
or
sbb
jne
mov
mov
sahf
stc
or
test
mov
push
mov
ss
mov
mov
add
add
mov
inc
mov
fs
jge
notl
repz
cmc
cmp
outsl
lcall
notb
stc
cwtl
imul
in
jp
gs
or
dec
fnsave
lcall
push
shll
jns
dec
and
and
push
xchg
add
movsb
ret
ds
inc
aam
sub
cmpsb
shll
push
mov
jle
cmp
ret
sbb
in
jge
negl
insl
hlt
pop
mov
cmpsl
aaa
push
mov
adc
push
aas
mov
pushf
cmp
movsb
es
cs
pop
fdivl
in
aam
lret
mov
sub
in
icebp
nop
arpl
push
mov
aad
sub
xor
mov
gs
jge
fisttps
flds
cmp
cmp
xchg
sbb
aad
lret
movsl
int3
aas
fld
dec
frstor
sub
rsqrtps
dec
adc
adc
shll
mov
call
fistpll
scas
aas
pop
test
jmp
cld
imul
nop
push
popa
nop
js
adc
fwait
pop
xchg
repnz
sbb
adc
adc
jae
xchg
pop
lds
iret
fs
adc
sub
and
mull
icebp
js
mulb
jns
test
inc
fidivrl
mov
sbb
cwtl
pop
daa
cmpsl
aaa
push
mov
cmpl
cmp
clc
outsb
or
adc
jns
mov
pop
aad
sub
jp
movsl
xor
aas
scas
lret
rcrb
stos
data16
adc
popa
jl
add
sbb
mov
inc
mov
mov
mov
and
xchg
add
inc
shll
add
push
test
cmpsl
sub
sub
push
inc
aam
sub
push
lds
jmp
jge
std
data16
xchg
outsb
fmuls
mov
xchg
add
sub
test
out
sbb
dec
stos
movsb
ret
mov
cmpsl
push
dec
scas
xor
loopne
adc
push
lds
mov
lahf
cli
or
adc
out
outsl
lcall
sub
push
push
inc
and
aaa
mov
enter
aad
adcl
or
push
jbe
rcrb
andb
jmp
mov
fsubrl
fidivrl
scas
aas
pop
test
xor
xor
lods
or
out
jg
jmp
or
pop
rolb
mov
lods
mov
lods
nop
or
dec
fstpt
xor
adc
test
add
push
leave
pop
cmp
pusha
aaa
test
pop
test
jns
jnp
in
inc
popf
add
repnz
pop
bnd
pop
leave
test
fidivs
mov
inc
mov
fcompl
xchg
xorl
add
adc
pop
lret
scas
pop
mov
negb
leave
dec
fdivrl
in
je
imul
jmp
and
xor
push
stos
cmp
popa
lahf
aad
stos
mov
sub
cld
ljmp
mov
inc
leave
pop
cmp
sub
jmp
fs
mov
enter
in
sbb
lea
mov
es
dec
fstpt
adc
inc
int3
pop
enter
movsb
xor
mov
fimuls
mov
pop
cmp
inc
and
retw
scas
pop
rep
cmp
stc
imul
adc
sahf
or
cmpsb
xchg
add
mov
sub
push
rolb
rolb
push
lds
lea
or
mov
rclb
lods
pop
mov
jae
loop
cmc
pushf
outsl
test
jae
in
push
inc
mov
lods
lret
inc
lea
addr16
adc
movsb
cmp
dec
idivl
mov
ljmpw
pop
roll
shll
test
inc
aad
sub
sub
jae
in
pushf
adc
leave
pop
cmp
sub
rorl
test
xchg
adc
out
pop
cmp
or
cmpsl
lods
lret
inc
stc
jb
bound
movsl
int3
aas
mov
outsl
or
scas
pop
les
int3
jnp
inc
mov
movl
sub
mov
inc
mov
outsl
in
bound
scas
leave
cmp
xor
outsb
call
rcll
pop
mov
pop
jmp
mov
dec
mov
int3
aas
fbld
test
pop
test
adc
rcrb
test
mov
and
or
fists
mov
xor
push
aad
aad
dec
movsl
sbb
sbb
cmp
daa
mov
and
lds
mov
jp
in
push
push
in
mov
cmp
pop
pop
les
int3
jp
or
mov
dec
mov
add
push
stc
data16
xchg
outsb
fsts
cmp
popa
je
jg
jmp
mov
ret
mov
sbb
mov
arpl
cmc
adc
stc
out
mov
jns
insl
hlt
pop
in
mov
into
sbb
fistps
scas
pop
mov
jmp
aam
int
addr16
movsl
int3
aas
divb
xchg
cmc
add
outsl
out
adc
or
jnp
in
or
jbe
cmpl
mull
icebp
or
fcoml
pop
cmp
dec
sub
and
ret
mov
inc
shlb
mov
sbb
imul
sbb
mov
outsl
cmc
gs
push
mov
mov
adc
movsb
ret
mov
mov
popa
push
icebp
popa
add
jbe
lcall
and
rcr
repnz
addb
jge
insl
mov
stos
int
pop
into
test
xlat
mov
scas
inc
ret
ret
or
in
std
or
mov
fwait
decb
clc
or
cmp
fists
mov
sbb
imul
sub
xor
xchg
or
push
adc
int
int3
stos
xchg
jmp
and
sbb
dec
dec
fstpt
sti
insb
loop
je
aad
xlat
mov
cmpsl
out
jns
mov
std
gs
pushf
outsl
pushf
jle
jnp
in
pop
pop
ret
ret
test
jge
xor
gs
push
leave
push
les
lock
lret
lods
aaa
cmpsl
ret
sub
movsb
add
roll
inc
xchg
jne
fs
sbb
push
lds
inc
mov
ret
mov
out
pusha
pushf
jmp
mov
pushf
sub
jmp
ret
std
pop
aad
adc
pop
pushf
jmp
js
jp
in
inc
imul
inc
ret
pushf
popa
mov
lea
push
mov
jmp
leave
push
lret
jmp
lahf
punpckhdq
clc
or
jp
xor
and
jmp
loope
lock
bound
inc
mov
cwtl
decl
call
dec
mov
clc
jge
push
mulb
adc
push
movsb
mov
jmp
mov
lods
jno
imul
mov
and
push
xchg
xor
rep
pop
pop
jmp
jmp
xor
notl
sbb
pop
add
call
jp
imul
sbb
scas
mov
leave
mov
cmc
mov
add
jmp
shrb
shr
sub
out
adc
pop
mulb
or
adcl
or
sub
mov
pushf
push
jmp
out
out
jo
or
sub
mov
jmp
xchg
or
loope
adc
or
xchg
sbb
decb
inc
add
add
add
je
add
fadds
mov
mul
jp
jp
imul
mov
add
inc
cld
jmp
iret
push
les
and
push
add
xor
or
add
es
outsl
lcall
pop
aas
lret
jmp
xor
xor
fs
jmp
push
repnz
pop
bnd
inc
aad
dec
cltd
or
gs
push
in
or
xchg
jmp
test
mov
lahf
sub
add
call
ret
mov
push
jns
push
mov
in
push
jae
sub
jmp
xor
jmp
pop
aam
sub
jp
in
dec
push
jecxz
push
in
sub
xor
decl
push
xor
idivl
mov
ja
outsb
or
sbb
fsubr
lea
sub
lea
and
jmp
enter
dec
mov
ja
movzbl
mov
jmp
lods
xchg
clc
sub
inc
add
inc
add
sbb
push
xor
daa
push
fwait
or
outsb
inc
aam
dec
jmp
jae
mov
add
in
cmc
fsubr
inc
jne
jno
jecxz
mov
mov
out
jl
negb
fmull
mov
sbb
mov
pop
jp
data16
lock
jmp
jo
jns
jmp
outsb
mulb
push
pop
int3
stos
fldenvs
adc
mov
mov
jmp
xchg
or
cmp
or
jb
dec
push
call
fwait
aas
scas
lret
adc
push
rolb
rolb
sub
cmpsl
add
add
cmc
jbe
cmpl
xchg
add
loop
pop
loop
in
outsb
xchg
int3
lret
mov
jmp
mov
jmp
xlat
push
mov
rorb
mov
jmp
xchg
adc
call
add
outsb
jae
push
pop
cwtl
lea
cmp
ja
mov
jmp
or
clc
mov
jmp
or
outsl
daa
lods
and
adc
je
lea
push
xor
and
mov
jmp
xor
or
mov
fstpl
mov
stos
cmpsb
sub
sub
mov
dec
mov
cmp
not
jmp
int3
data16
mov
pushf
jmp
pop
iret
pop
cmp
jo
and
out
jg
jmp
call
rorb
shr
fldt
mov
add
pop
bound
and
mov
jns
insl
add
xchg
mov
mov
lods
lret
inc
stc
push
int
and
jl
mov
cmp
jmp
pop
lds
iret
fs
inc
jmp
xchg
or
and
mov
and
xchg
jb
add
and
mov
sbb
enter
jmp
cmp
add
mov
jmp
insb
in
jge
notl
ficomps
stos
xchg
adcb
mov
mov
jmp
xchg
adc
sbb
popf
pop
jb
push
push
call
fcompl
push
call
stos
sub
mov
pushf
sti
push
incl
inc
es
lahf
adc
in
sbb
add
loope
push
call
arpl
add
jmp
fisttpl
fstl
fcoms
mov
aad
dec
test
lds
jmp
pop
mov
sub
jmp
mov
mov
jmp
pop
xlat
inc
and
cmp
or
int3
inc
xlat
mov
mov
cmpsb
outsb
add
call
stc
fdiv
push
call
xchg
in
sbb
and
and
adc
lods
push
call
cli
mov
mov
jmp
je
jnp
in
sub
ja
jmp
push
jmp
push
cwtl
push
imul
pusha
notb
xchg
aad
cwtl
mov
jmp
mov
mov
and
les
sbb
popl
jmp
mov
jmp
hlt
insl
std
test
fadds
mov
jmp
pop
fsubrs
mov
dec
mov
add
shr
fwait
jl
insb
sbb
inc
add
pop
pusha
std
insl
hlt
pop
mov
ja
xorb
mov
inc
mov
lock
shlb
add
in
add
fcoms
cmp
mov
or
in
repnz
mov
outsl
in
push
ret
movsl
jmp
rcll
mov
insb
or
out
pop
fmuls
fdivrs
fldenv
xchg
gs
in
cmp
popl
jmp
mov
lods
repz
mov
cmp
das
incl
add
adc
xor
ljmp
push
add
push
stc
ljmp
jae
add
dec
stc
ljmp
mov
movsl
sub
int3
xchg
loopne
cmp
xchg
or
test
inc
add
sub
lahf
sti
sti
fadds
mov
mov
and
out
aaa
mov
in
ds
in
call
add
pop
idiv
in
notl
mov
scas
leave
cmp
pop
roll
aad
in
in
jle
cmp
jns
add
sti
idiv
incl
mov
mov
adcb
andb
push
inc
daa
push
call
add
sub
das
icebp
subl
mov
add
call
jo
mov
cltd
jl
add
scas
idiv
cmp
aas
pop
test
pop
loop
mov
lcall
cmp
add
cmp
jns
popa
push
inc
xor
push
inc
add
aad
sbb
lahf
mov
fadds
mov
and
out
lcall
xor
and
or
add
add
mov
mov
inc
add
or
fst
movsl
pop
fucomp
notl
pop
fst
movsl
pop
fstl
imul
sahf
sti
and
mov
bound
or
cmpsb
adc
jp
in
inc
daa
mov
mov
add
add
jns
adc
and
inc
add
out
imul
dec
xor
add
add
jns
sbb
imul
jge
inc
add
aad
imul
lahf
add
fadds
mov
pop
sahf
mov
out
adc
fs
popf
insb
jmp
push
xchg
mov
cmp
adc
xchg
mov
movb
xor
jge
inc
add
fst
movsl
sub
lahf
pop
pop
fadds
mov
adc
out
out
xor
dec
fdivrs
jbe
loopne
add
stos
push
call
int3
push
call
int
xor
mov
call
or
cmc
jnp
mov
mov
stos
int
fimuls
aad
fwait
xor
xchg
add
in
or
out
scas
or
inc
dec
add
inc
orl
add
push
add
adc
rolb
xchg
add
jo
add
add
into
mov
add
add
inc
dec
add
idivb
add
fisubs
add
insb
xchg
or
lock
add
rcrl
or
adcb
adc
lahf
add
sahf
push
add
fidivrl
add
adc
mov
add
clc
mov
add
add
pop
leave
add
sbb
dec
add
aad
add
add
add
ds
or
jecxz
add
aaa
or
jge
add
jg
or
lret
lret
inc
dec
add
lcall
add
fs
adc
pop
or
pop
mov
pop
add
addr16
push
pop
add
push
and
add
add
mov
add
gs
rcrl
add
or
lcall
add
test
dec
jno
add
push
add
stos
mov
add
xchg
add
cmp
add
daa
sub
add
inc
dec
add
mov
or
nop
jge
add
jne
add
mov
add
clc
test
add
mov
add
xchg
add
gs
add
inc
dec
add
hlt
push
or
ja
add
int3
jg
add
dec
add
adc
push
or
stos
je
add
in
pop
add
pop
add
push
add
outsl
mov
adc
cmpsb
add
push
push
or
inc
dec
add
bound
or
scas
test
add
add
xor
pop
add
dec
add
add
add
sbb
add
mov
add
mov
or
cmpsl
movsl
or
popf
icebp
pop
add
stos
add
push
jns
add
mov
or
lahf
xchg
mov
mov
add
xor
push
add
inc
dec
add
xor
arpl
btc
pop
lock
push
movsb
add
adc
add
dec
add
or
or
nop
push
add
lret
add
push
add
stos
sbb
add
push
add
sub
add
add
jge
add
inc
dec
add
fisttpl
add
push
add
or
xchg
lods
or
ss
add
inc
dec
add
daa
push
add
sub
add
inc
nop
add
push
jb
add
pop
add
add
sbb
add
mov
add
mov
add
or
add
and
add
mov
add
inc
dec
add
and
test
adc
add
push
mov
imulb
add
xor
add
add
adc
lret
or
test
add
inc
dec
add
and
add
add
adc
gs
pushf
cmp
add
or
mov
add
lds
adcb
gs
add
das
or
add
xor
add
pop
add
jmp
push
add
inc
dec
add
push
into
add
lcall
add
push
or
int
or
jbe
add
in
jp
add
outsb
add
cmpsl
mov
mov
jnp
add
movl
les
add
inc
dec
add
add
addb
outsb
add
and
add
add
add
inc
dec
add
dec
jns
add
xchg
and
or
test
add
add
mov
popf
add
insl
pop
add
gs
pop
add
add
inc
dec
add
push
imul
mov
dec
add
pop
xchg
jb
xchg
xchg
icebp
add
and
add
cmp
xor
mov
lahf
add
pop
mov
dec
pop
sti
xor
xor
cmp
jns
xor
add
fcom
xchg
add
xchg
xchg
fimull
sahf
movsl
out
mov
sti
decl
outsb
cld
fwait
jbe
movb
inc
test
adc
in
sbb
push
ret
cmpsb
push
hlt
loop
clc
lahf
push
jbe
insl
hlt
pop
jmp
adc
add
std
or
jno
mov
shlb
jns
jmp
mull
icebp
or
cmp
or
dec
fidivrs
or
jns
lods
cmp
gs
pushf
outsl
test
xchg
mov
pop
lret
pop
ds
push
lret
lret
push
mov
lods
mov
cli
into
push
mov
fidivrs
and
sbb
popa
mov
xchg
pop
repnz
fs
inc
shll
jno
jecxz
sbb
into
dec
frstor
jg
arpl
cld
lcall
test
popf
adc
dec
lret
pop
ds
enter
inc
mov
pop
cmp
cmp
aam
es
cs
rorb
mov
xorl
pop
aas
lret
xchg
mov
or
add
adcl
test
test
add
call
sbb
and
aaa
jmp
cmp
xor
es
cs
pop
lret
lret
pop
lret
scas
pop
stos
repz
fisubs
push
call
leave
push
mov
jle
call
lds
es
cs
lods
aaa
cmpsl
ret
jecxz
in
mov
inc
mov
cmp
ret
mov
xchg
into
push
ret
cmpsb
push
mov
jns
mov
cmp
and
test
add
cmp
or
xchg
adc
mov
inc
push
inc
add
movb
xor
adc
call
pop
lret
scas
pop
mov
cmp
lods
sbb
and
mov
adc
jmp
sahf
pop
adc
dec
add
sbb
nop
push
popa
nop
jns
ret
ret
lock
lds
lock
xchg
lock
call
mov
jne
out
nopl
rorl
mov
jae
mov
pushf
or
in
mov
roll
rcll
loopne
in
jle
and
or
dec
int3
pop
iret
stos
pop
rcrb
jae
jg
mov
cmpsl
cmp
and
push
lds
sub
and
or
xchg
add
es
icebp
popa
add
jbe
into
pop
cmp
push
idivl
mov
lods
sub
sbb
sbb
addb
repz
out
ljmp
stc
out
adc
les
int3
and
cmp
or
adc
inc
add
mov
adc
dec
jp
add
adc
stos
sub
icebp
js
mov
xlat
pop
iret
stos
pop
andl
jmp
cmc
pushf
outsl
test
push
cld
or
dec
das
fidivl
mov
mov
cs
pop
into
test
push
imul
aad
sub
aaa
inc
shlb
test
cmp
jmp
add
cmp
sbb
xor
sub
lahf
sti
ret
and
imul
mov
lock
inc
sub
mov
xchg
jle
jbe
loopne
pop
lret
pop
ds
loop
in
mov
xlat
and
sbb
cmc
add
push
xchg
or
dec
push
inc
and
cmp
cmpsl
push
pushf
sti
push
hlt
mov
mov
mulb
push
iret
dec
fnstcw
dec
sub
sete
mov
es
in
gs
pushf
outsl
lret
xor
push
push
test
push
lock
fs
sbb
inc
ljmpw
push
cltd
or
insl
or
leave
pop
enter
xchg
push
lds
adc
pop
enter
addr16
pop
lret
lret
cmp
xchg
jb
jle
ret
ret
fisttpll
out
out
in
mov
lahf
push
movsl
cmp
inc
shll
mov
insb
or
andl
test
xchg
repz
fisubrl
jle
call
or
sbb
nop
push
popa
nop
jb
mov
inc
mov
arpl
jp
in
or
inc
aam
dec
mov
and
push
fmuls
fdivrs
mov
xchg
int
fstpt
xor
dec
jp
push
cld
sbb
cmpsl
into
inc
shlb
ss
mov
xchg
or
push
xchg
add
std
or
jle
jge
divl
insb
cli
push
or
clc
outsb
or
adc
lods
cmp
and
push
add
add
adc
and
hlt
mov
xor
add
out
pop
imul
aam
aam
mov
js
aas
mov
mov
mov
ljmp
stc
scas
loope
in
mov
sub
dec
cltd
add
std
or
jae
inc
and
pop
pop
insb
or
addl
push
rolb
shlb
jmp
xchg
add
outsb
mov
stos
into
cmp
stc
or
mov
sahf
stc
or
xchg
adc
cwtl
push
imul
lea
fisttps
or
xor
pop
cmp
call
lahf
insl
std
insl
hlt
pop
in
cmpsb
cmp
leave
pop
cmp
outsb
push
les
int3
maskmovq
mull
xchg
popa
lea
mov
les
mov
mov
sbb
sbb
sbb
hlt
pop
mov
dec
fnstcw
fidivrs
ret
cmpsb
push
cli
xchg
mov
sbb
pop
lock
mov
push
xor
dec
gs
push
xor
dec
cld
jle
mov
add
add
xor
sbb
push
add
out
adc
decl
pop
cmp
xor
or
jbe
adc
add
cmp
dec
mov
sub
lahf
sahf
sahf
fadds
mov
pop
lcall
sub
popa
icebp
nop
arpl
jle
and
orl
loop
lcall
mov
mov
or
add
cmp
mov
push
sub
lahf
sahf
sahf
fadds
mov
add
imul
pop
dec
imul
pop
loop
iret
inc
xlat
mov
stos
pop
fisttpl
fnstsw
fwait
adc
push
fimuls
adc
and
mov
add
cmp
jns
xchg
mov
xor
add
mov
adc
mov
sahf
imul
jo
xorl
notb
inc
shll
stos
int
fisubs
add
sbb
xchg
add
jnp
cmp
loopne
adc
adc
gs
pushf
outsl
fistpl
movsb
add
xor
cld
popa
icebp
nop
arpl
mov
mov
sbb
aad
xchg
and
adc
mov
pop
insb
or
add
lahf
mov
mov
or
jmp
mov
test
lahf
jge
push
push
jge
negl
adc
mov
gs
xor
inc
xor
clc
jbe
cmpl
cmp
mov
fldt
jno
jecxz
je
je
out
push
sbb
push
ret
ret
sbb
les
int3
sbb
pusha
hlt
push
cld
adc
sti
imul
pop
jge
jne
out
sbb
lods
lret
inc
lock
push
xchg
repz
cmpsl
and
andl
and
add
sbb
jns
and
add
mov
xor
adc
loopne
adc
push
filds
mov
call
gs
dec
fidivrs
js
ljmp
mov
iret
pop
cmp
xor
cld
pop
sahf
or
cmpsb
inc
roll
dec
movsb
mov
movsb
in
outsl
lcall
pop
cmp
and
insb
loop
je
jno
push
fisttpll
out
pop
roll
sarl
icebp
jge
je
popa
sbb
fs
int3
inc
xlat
mov
mov
lahf
jne
aas
scas
lret
sti
imul
mov
inc
mov
inc
fisttpl
fnstsw
lea
mov
sbb
mov
mov
mov
mov
mov
setg
or
sarb
jb
xchg
stos
xor
int
xchg
aas
mov
lea
xchg
adc
sub
cmp
inc
aad
dec
lret
xchg
lock
dec
lret
lret
repnz
pop
repnz
mov
inc
mov
xor
add
daa
mov
cmp
movb
mov
xor
lahf
and
ret
imul
out
adc
add
scas
cmp
mov
outsl
jmp
push
in
or
popa
add
push
fists
lods
pop
xchg
sbb
jb
mov
adcb
out
icebp
or
sub
aaa
push
mov
hlt
pop
in
stos
cmp
pop
lret
scas
pop
cld
ljmp
aad
sub
aas
jo
jne
out
pop
outsl
stc
imul
jae
in
clc
outsb
or
or
or
mov
and
xchg
add
sti
imul
dec
iret
push
shll
dec
mov
scas
pop
jno
xorb
ljmp
fldl
add
cmp
mov
sub
lahf
add
fadds
mov
mov
out
adc
imul
mov
xchg
adc
in
sbb
push
xlat
inc
and
cmp
mov
jg
mov
pop
fisttpll
out
xor
das
stos
cmp
dec
lcall
clc
outsb
or
xor
add
push
jo
xorl
imul
cld
xor
dec
push
lret
mov
dec
fdivrl
push
jns
mov
dec
fimuls
add
scas
cmp
mov
inc
shlb
cmp
mov
stc
popa
icebp
nop
arpl
or
dec
mov
add
inc
push
movsl
call
cmp
push
adc
or
inc
add
mov
and
imul
int
inc
movzbl
mov
jmp
push
lret
test
mov
into
cmp
or
sbb
mov
jmp
jns
ret
add
jmp
lret
pop
repnz
mov
mov
mov
mov
pop
dec
mov
jmp
adc
add
add
push
add
add
mov
js
jno
jecxz
mov
xchg
add
call
or
leave
inc
cmpsl
jmp
or
lahf
add
call
popa
std
insl
hlt
pop
lods
dec
roll
shll
in
jge
negl
add
add
adc
test
inc
push
inc
add
movb
mov
fadds
mov
imul
dec
sti
and
inc
shlb
je
out
imul
add
sar
inc
mov
sub
jmp
iret
ds
popl
jmp
jmp
scas
or
in
xchg
divb
jl
daa
movsb
cmp
dec
or
cld
test
sbb
fwait
sbb
add
std
or
jecxz
cli
popf
insb
mov
jg
mov
syscall
movzbl
mov
jmp
push
call
xor
xchg
and
icebp
xchg
and
shr
mov
jmp
repnz
push
call
push
push
call
ficoml
cmpsl
push
cltd
popf
adc
in
sbb
inc
enter
sub
insb
fnstenv
xchg
add
call
loop
jecxz
jne
les
mov
mov
mov
or
icebp
push
call
arpl
addr16
pop
lea
mov
rcll
push
cmp
push
mov
push
call
push
mov
es
into
pop
cmp
xor
dec
fistpll
popa
push
call
jg
mov
add
call
cmp
pop
pop
leave
pop
cmp
outsb
lds
xchg
addr16
dec
mov
xor
test
mov
out
jno
loop
call
or
in
stos
xchg
or
adc
xor
mov
mov
cmpsl
ret
push
mov
jg
and
insb
loop
je
cmp
mov
add
pop
mov
pop
cmp
xchg
icebp
add
lds
call
nop
adc
je
lea
cltd
or
js
add
cmp
popa
mov
pop
sub
lahf
out
and
add
jmp
sti
mov
mov
insl
std
test
cli
cmpsl
adc
repz
fdivrs
mov
and
divl
xorl
push
mov
aas
aam
add
inc
adc
jns
xor
add
aad
mov
fst
movsl
xor
pop
xchg
inc
add
mov
mov
add
mov
and
lods
gs
push
call
sbb
xor
orl
clc
or
jg
cmp
imull
into
add
call
inc
shrb
add
call
sub
and
push
xchg
pop
xchg
stc
insl
or
jo
adc
enter
addr16
lcall
xchg
pop
bound
xlat
and
in
stc
cwtl
imul
pop
cmp
sbb
sbb
xchg
jle
loopne
adc
adc
push
icebp
insb
add
xchg
mov
inc
and
shlb
and
jns
cwtl
push
imul
inc
test
ret
add
call
jmp
loope
jae
in
adc
cmp
xchg
mov
lret
scas
pop
in
jns
jnp
in
inc
xchg
or
popa
icebp
nop
arpl
xor
jnp
outsl
or
sarl
ds
jecxz
lock
bound
inc
stos
mov
mov
in
sbb
or
jb
mov
sub
mov
testl
outsb
popf
jg
fimull
fidivrl
rcrb
stos
data16
in
lcall
mov
and
lds
mov
add
push
pop
lret
lret
out
adc
or
movsb
cmp
inc
ret
mov
dec
sub
inc
cmpsl
inc
shll
mov
sbb
sbb
je
out
push
popa
std
insl
hlt
pop
lods
push
xchg
pop
bound
xchg
popa
xor
cmc
push
lds
lds
sahf
in
and
xchg
add
call
xchg
adc
mov
or
shrb
cmp
dec
adc
mov
imul
adc
and
add
and
and
mov
pop
mov
out
loopne
xchg
jmp
mov
out
adc
sahf
lods
cs
cmp
cld
xchg
cmc
add
arpl
jnp
in
add
inc
add
fcompl
stos
pop
mov
movsl
sub
or
mov
mov
aad
pop
inc
add
add
push
xor
sub
lahf
adc
fadds
mov
and
mov
popa
icebp
nop
arpl
jb
and
mov
shlb
inc
mov
or
jbe
loopne
call
inc
rorl
mov
popf
in
stc
jae
xchg
add
jnp
ja
loope
ds
cmp
sbb
xchg
cmp
mov
es
sbb
xchg
mov
sbb
repnz
aad
xchg
dec
lcall
cmp
mov
or
sti
sub
lahf
pop
dec
dec
and
call
out
pop
leave
test
fimuls
stos
cmp
sub
inc
xchg
push
fisttpl
fnstsw
das
int3
hlt
jnp
mov
stc
jge
je
insb
call
add
call
movsb
and
add
xchg
mov
add
add
or
sbb
out
fsubrl
add
pop
sahf
mov
imul
pop
ja
cmp
sbb
sbb
mov
fnsave
fst
movsl
or
pop
xchg
inc
add
mov
out
fadds
mov
and
dec
sti
out
mov
mov
lea
dec
fdivrl
js
dec
pop
add
add
jns
xchg
and
movb
and
fadds
mov
adc
mov
out
xchg
push
fdivl
in
ret
movsl
push
mov
leave
pop
cmp
sub
stos
cmp
inc
xchg
cltd
clc
or
mov
mov
es
aas
lods
and
inc
xlat
inc
aad
dec
ljmp
das
mov
sbb
cs
aad
mov
out
mov
dec
mov
fs
and
test
aad
fwait
cmpsb
cmp
add
pop
xchg
adc
cmpsl
adc
jae
in
inc
out
adc
imul
popf
insb
mov
cmp
and
push
or
pusha
scas
das
mov
out
adc
add
dec
fdivrl
popf
in
negl
inc
and
jbe
popf
or
lock
bound
mov
roll
shll
sbb
pop
xlat
inc
and
sub
fisttps
jb
in
push
push
xor
push
xchg
push
in
jns
mov
pop
lret
lret
lret
pop
ds
in
jg
mov
pusha
cli
push
mov
out
in
je
sub
fisttpll
out
sbb
sbb
dec
rolb
sarb
mov
xor
lahf
cmp
mov
ret
push
aam
sub
and
mov
sub
cmp
xor
pop
xchg
adc
js
insl
hlt
pop
in
cmp
repz
cmpl
sbb
aad
das
movsb
cmp
or
loop
cmp
outsl
lcall
mov
and
sub
push
lahf
adc
gs
pushf
outsl
test
add
cmp
movb
jns
sbb
and
inc
add
mov
mov
add
out
sahf
push
ret
ret
mov
popa
lock
xor
jnp
mov
loopne
in
jg
xchg
push
xchg
repz
out
sub
jnp
ja
loope
mov
xchg
in
je
lea
mov
and
push
lds
push
mov
es
mov
icebp
insb
loop
je
in
aad
dec
lret
and
xchg
jle
xchg
cmc
add
cmp
and
test
or
in
divb
push
cld
adc
and
daa
mov
mov
lahf
cli
or
iret
dec
fstpt
push
imul
outsl
lcall
pop
cmp
xor
popa
icebp
nop
arpl
xor
jl
addr16
or
inc
fidivrl
outsl
or
repnz
je
jnp
in
sub
psubd
loop
jmp
jge
pop
xchg
add
jns
jo
xorl
jno
insl
mulb
dec
or
fmull
mov
aas
pop
test
xchg
outsb
fldenv
ljmp
in
dec
fdivrl
add
adc
xlat
add
jns
jmp
rclb
cmpsl
push
mov
pop
int
xchg
and
in
hlt
push
rolb
sarb
dec
frstor
leave
cmp
mov
test
sbb
dec
fdivrs
imul
mov
add
adc
xchg
add
lods
lret
inc
mov
adcl
inc
aam
dec
lea
psubd
dec
fimull
fidivl
in
out
jo
icebp
fs
popf
insb
lret
push
add
add
mov
lds
sbb
aad
fwait
mov
mov
outsl
lcall
xor
adcb
xorb
std
insl
hlt
pop
sub
fistpll
add
cmp
lods
test
sbb
fsubs
inc
add
mov
sti
imul
or
or
mov
inc
mov
mov
mov
mov
aaa
ret
jge
je
imul
outsl
jmp
push
in
or
mov
cmpsl
aaa
push
mov
pop
loop
push
fisttpll
out
xor
dec
les
int3
and
sbb
mov
mov
sbb
mov
mov
mov
sbb
lret
stos
cmp
dec
in
jns
mov
mov
mov
das
in
jg
in
in
mov
inc
mov
add
data16
insl
hlt
pop
mov
xchg
es
cs
mov
mov
leave
pop
cmp
jle
lds
iret
dec
sub
clc
jp
jp
and
enter
dec
test
sbb
cmp
cmp
add
xor
int
push
inc
add
push
add
xor
ret
xor
out
pushl
mov
inc
mov
jne
pusha
pop
repnz
xchg
mov
xchg
add
js
add
adc
nop
sbb
std
insl
hlt
pop
jmp
insl
std
test
popl
xchg
icebp
add
mov
nop
testl
jae
jp
pop
dec
fimuls
adc
mov
dec
mov
ds
outsl
add
add
sbb
adc
inc
xor
add
mov
add
lcall
inc
and
xor
push
cmp
daa
pushf
or
or
cltd
add
fisttps
fsts
sbb
sbbb
call
shlb
das
fisubrl
scas
aas
pop
test
and
cltd
push
mov
notl
mov
or
xchg
pop
bound
lods
pop
mov
out
mull
add
add
xor
mov
int
fistpll
sbb
arpl
push
lret
mov
adc
cli
jb
xchg
push
fisttps
fsts
lods
pop
mov
insl
mov
mov
push
fisttpll
out
jno
jno
jecxz
rcll
push
cmpsl
adc
xor
or
cmp
add
cmp
test
sub
lahf
add
fadds
mov
out
mov
adc
sahf
fmuls
mov
push
xor
sub
movsb
cmp
inc
sbbb
out
sbb
pusha
xchg
pusha
mov
mov
pop
cmp
xor
jns
add
jge
inc
add
aad
out
pusha
imul
sbb
xor
pop
dec
pushl
sahf
imul
add
xor
or
es
mov
mov
sbb
ds
mov
push
mov
adc
push
cmp
and
mov
insb
in
bound
push
xor
and
cli
mov
mov
sbb
leave
dec
ret
mov
mov
xlat
and
in
daa
dec
ret
ret
loop
pop
loop
fs
lret
inc
aad
dec
movsb
aaa
mov
imul
dec
fldt
add
sbb
pop
leave
test
mov
xchg
or
gs
pushf
outsl
lret
pop
lock
add
cmp
adc
xor
inc
push
inc
add
mov
sti
fadds
mov
mov
pop
dec
out
mov
dec
sub
push
faddl
mov
movsl
int3
aas
xchg
nop
setg
or
or
inc
hlt
popf
pop
xchg
repnz
mov
out
sbb
enter
fisttpll
out
test
xchg
repz
call
int
add
sbb
imul
push
std
sbb
or
push
mov
in
std
out
imul
insl
mov
and
jb
mov
lret
mov
scas
and
sub
icebp
adcl
test
push
shlb
inc
mov
fmull
movsb
push
mov
test
push
or
int3
pop
leave
test
mov
pop
lret
scas
pop
mov
insl
std
test
jo
js
ljmp
enter
push
stc
jl
jnp
in
push
loopne
in
mov
add
inc
clc
fs
popf
insb
lds
mov
test
pop
lcall
pop
fisttpll
out
fwait
sbb
out
jg
jmp
out
lock
jae
xchg
pop
xchg
add
jg
jno
xorb
insb
loop
je
les
movsb
push
repnz
push
mov
es
push
popf
or
mov
stos
and
or
cmp
or
or
cmpsb
dec
scas
cmp
mov
mov
push
lret
sti
rolb
mov
mov
push
shlb
xchg
bound
js
ljmp
icebp
popa
add
add
inc
daa
shlb
in
jg
je
arpl
cmc
dec
das
mov
inc
mov
and
ljmp
add
cmp
lods
jns
adc
dec
sub
lahf
dec
dec
fadds
mov
imul
pop
mov
add
imul
insl
ret
lds
movsb
push
shrb
inc
and
insl
hlt
pop
rorl
jo
clc
outsb
or
sbb
hlt
xor
cmp
add
cmp
adc
lods
xor
jge
inc
add
aad
dec
sub
lahf
inc
out
fadds
mov
add
dec
sti
xor
pushl
mov
inc
mov
out
notl
cwtl
decl
in
imul
cmp
inc
test
adc
int
push
inc
add
aad
adc
lods
and
fadds
mov
sahf
imul
mov
xor
daa
inc
mov
pop
xlat
inc
and
cmp
notl
loop
pop
loop
mov
rcrl
inc
sub
cmp
cmp
xchg
popa
and
push
inc
add
int
push
inc
add
aad
adc
inc
add
add
and
xor
ja
xorb
mov
loope
loop
je
out
jmp
jge
and
and
fisttpll
out
jg
jl
divb
movsl
inc
add
loop
in
jle
push
lret
pop
ds
lock
lahf
push
icebp
push
lahf
push
xor
sbb
sbbl
arpl
insl
hlt
pop
lods
addr16
push
sti
imul
jl
aam
sub
add
sahf
dec
sti
js
mov
push
aam
sub
fstpt
into
test
aam
ret
mov
add
mov
std
or
inc
into
pop
cmp
jno
imul
insl
mov
jns
push
adcb
andb
fnstsw
test
sahf
stc
or
add
xchg
add
sahf
jbe
std
insl
hlt
pop
lock
rclb
addr16
jmp
mov
pop
enter
and
ret
push
lds
fisttps
mov
notl
mov
and
and
and
fldcw
addl
xorl
cltd
adc
stos
cmp
sub
sbb
jno
mov
lahf
cli
or
mov
fadds
loop
push
mov
es
lahf
sbb
sub
lds
jnp
insb
or
out
pop
subb
add
popa
inc
sbb
lods
xchg
out
int
push
inc
add
aad
out
pop
xchg
inc
add
mov
adc
add
ret
mov
mov
imul
dec
sub
and
jp
lods
lret
inc
test
hlt
push
cld
sbb
cmpsl
aaa
push
mov
lret
inc
scas
mov
fwait
decb
bound
loope
in
pop
int
addr16
or
pop
fimuls
mov
xchg
cld
movntq
out
adcl
test
adcl
test
in
sbb
stc
cwtl
imul
out
jl
negb
lods
cmp
cmp
adc
in
sbb
mov
mov
lock
aad
adc
add
add
push
lods
inc
jns
popa
sub
lahf
and
fadds
mov
ret
imul
mov
mov
xchg
adc
jne
mov
jmp
cltd
push
cltd
push
lock
insb
ljmp
jb
in
outsl
jmp
test
mov
fwait
or
jns
pusha
notb
jg
jmp
cmp
and
dec
fnstcw
cmpsl
ret
mov
orb
in
bound
and
loope
push
lds
xor
add
lret
or
mov
mov
and
mov
mov
and
cli
or
movsl
lods
lret
inc
lock
movsb
inc
shll
mov
and
shrl
movsb
cmp
add
scas
sbb
mov
inc
mov
andb
shlb
cmpsb
jg
xchg
testb
add
mov
sbb
inc
add
mov
fadds
mov
pop
sahf
imul
and
iret
pop
repnz
fs
push
lds
iret
push
sbb
fadds
call
mov
lock
insb
loop
je
mov
fnstenv
ljmp
filds
call
jno
jp
in
dec
push
int
and
and
insb
loop
je
out
in
mov
add
call
rcrl
pop
out
mov
pop
pusha
push
call
sub
sbb
fs
dec
testb
push
call
pop
push
xor
data16
insb
loop
je
jne
inc
sub
pop
sbb
or
fldl
call
sbb
add
xor
add
or
ret
push
lds
scas
xor
gs
pushf
outsl
mov
mov
sbb
in
add
jmp
mov
push
call
popf
sbb
aad
ficompl
lea
inc
and
xor
jge
aaa
fildl
call
or
flds
out
push
call
out
imul
mov
push
call
orl
cli
or
stos
and
in
sbb
es
push
call
int3
dec
fstpt
push
call
mov
incb
call
mov
test
cmp
clc
jne
mov
cmpsb
sub
movsl
jno
sub
add
ss
ljmp
cld
add
call
push
fimuls
adc
mov
syscall
add
sbb
mov
ficomps
pop
cmp
cmp
inc
in
push
call
mov
insl
stc
imul
jl
negb
mov
inc
mov
push
insl
hlt
pop
mov
add
pushl
sahf
adc
or
inc
mov
fsubrp
insb
add
cmp
mov
mov
sub
jb
bound
lock
aad
pop
mov
mov
repz
cmc
je
mov
mov
mov
mov
mov
rclb
and
cmp
sbb
pop
cwtl
push
imul
xor
push
ret
cmpsb
push
mov
dec
fistpll
cwtl
decl
shll
aam
enter
ja
outsb
or
sbb
js
ljmp
data16
outsl
lcall
inc
es
in
jmp
jge
gs
push
cld
aas
inc
mov
mov
jg
fimuls
mov
ljmp
fisubrs
sub
outsl
mov
test
mov
dec
ret
std
mov
mov
push
call
mov
in
sbb
clc
imul
insl
fcoml
mov
xor
xchg
std
or
cmc
jbe
cmpl
mov
push
roll
shll
xor
pop
fimull
fidivrl
loope
sti
sahf
insl
test
jns
jg
mov
cmp
sub
mov
lahf
push
call
ds
inc
mov
dec
mov
jle
outsl
jne
std
dec
add
add
test
sub
lahf
mov
out
pop
dec
adc
inc
mov
dec
les
int3
cs
fimuls
pavgw
fwait
jbe
call
xchg
push
xchg
add
data16
mov
test
pop
fisubs
addr16
sbb
sti
adc
mov
dec
mov
in
mov
mov
gs
gs
fisttpll
out
mov
mov
nop
push
popa
nop
das
cmp
xor
or
mov
aad
out
add
add
xchg
mov
dec
jns
out
push
add
dec
pushl
and
add
mov
fisttpl
mov
add
cmp
sbb
popa
adc
sub
lahf
sahf
mov
adc
add
mov
decl
outsb
int3
inc
and
in
jg
sahf
sbb
aad
lock
stos
into
cmp
adc
add
jne
mov
ss
inc
mov
jnp
xchg
cmc
add
movb
inc
lods
cld
jg
mov
icebp
jns
mov
xlat
pop
repnz
fs
enter
inc
mov
push
ret
cmpsb
push
mov
test
testb
push
out
or
mov
mov
es
and
adcl
insb
add
mov
dec
mov
cli
or
pop
int3
inc
and
daa
inc
mov
mov
fcmove
push
shll
xchg
xor
or
dec
fnsave
lahf
punpckhdq
xor
addr16
pop
leave
test
out
mov
mov
ds
sti
sub
push
loopne
mov
inc
mov
ret
mov
mov
mov
jecxz
cli
popf
insb
mov
inc
aam
mov
jmp
sahf
sub
dec
add
add
xchg
popa
mov
and
inc
add
mov
jmp
imul
pop
sahf
xor
and
cmpsl
cs
pusha
notb
stc
cwtl
imul
add
add
sbb
xchg
popa
jns
sbb
inc
add
and
xor
out
imul
add
fs
jg
jmp
shrl
movb
movsl
cmp
repz
cmc
xor
aam
sti
testb
cmp
lods
mov
xchg
and
inc
add
out
mov
pop
imul
push
nop
push
popa
nop
jb
push
xor
and
lea
inc
xlat
mov
call
fs
nop
or
pop
xchg
repnz
pop
loop
push
test
push
mov
data16
xchg
outsb
fldenv
mov
mov
cwtl
mov
mov
xor
jo
pusha
pop
bnd
imul
sbb
ja
xchg
push
test
push
cld
jb
push
cld
adc
add
push
shlb
aas
lret
pop
xchg
repnz
adc
in
imul
insl
mov
cld
adc
pusha
notb
xchg
lock
arpl
jge
negl
mov
inc
and
cmp
hlt
lods
inc
shll
inc
daa
rclb
mov
aam
and
sahf
or
cmpsb
dec
pop
into
pop
cmp
jno
inc
aad
dec
mov
testl
adcb
pop
jp
sub
mov
nop
push
popa
nop
daa
cmpsb
cmp
test
mov
lahf
or
dec
leave
pop
cmp
sbb
mov
psubd
rcll
cmpsl
push
mov
push
shll
adc
add
pusha
notb
adc
push
mov
ja
xchg
cmc
add
mov
lods
mov
mov
cltd
or
ja
lods
cmp
stos
cmp
dec
mov
xchg
icebp
add
int
mov
mov
push
pushf
sti
push
das
mov
mulb
xchg
outsb
leave
icebp
add
add
popa
or
and
add
mov
mov
add
mov
adc
push
xor
add
cmpsb
aaa
cmpsl
ret
push
lds
iret
and
lds
loop
je
test
cmpsl
cmp
movsl
xor
add
notl
xlat
dec
fnstcw
mov
mov
or
incl
aaa
mov
dec
mov
daa
shlb
cmc
je
lea
adc
mov
stos
int
fmull
pop
aas
lret
popa
icebp
nop
arpl
sbb
test
pushf
sti
push
mov
xlat
inc
and
adc
xor
fcmovnu
add
cmp
or
sbb
inc
add
and
adc
lds
push
mov
xchg
jnp
test
fdivl
in
jp
gs
or
lods
jge
jl
testb
mov
dec
mov
jns
dec
cli
insb
loop
je
pop
roll
aad
mulb
push
enter
gs
out
adc
jne
xor
popa
icebp
nop
arpl
lods
cmp
adc
mov
mov
jle
mov
jge
cmp
dec
fidivrs
push
jno
pop
aas
ret
push
lds
lea
pushf
sti
push
lock
pushf
sti
push
testl
insb
mov
fs
adc
add
push
xor
das
or
pusha
ljmp
jb
in
movsb
sub
lds
pop
aad
sub
xor
mov
add
add
and
or
inc
add
aad
mov
pop
xchg
inc
add
movb
mov
mov
pop
dec
mov
fwait
or
jg
sub
sub
ret
push
lds
mov
mov
xchg
add
sahf
imul
and
ja
cmp
nop
push
popa
nop
jb
push
pushf
sti
push
cld
jmp
imul
pusha
cli
push
inc
shll
push
aam
sub
popf
in
mov
cs
mov
mov
cmpsb
xlat
jnp
mov
je
inc
sub
pop
jl
jne
push
fs
sbb
or
jnp
mov
and
jae
imul
adc
aad
into
pop
cmp
cmp
pop
iret
stos
pop
mov
dec
das
fidivrl
push
xchg
add
xor
inc
and
adc
sti
pop
nop
push
mov
es
and
push
jnp
gs
adc
pop
iret
stos
pop
xchg
jnp
jg
jmp
push
mov
lret
sti
push
lahf
push
cmc
popa
icebp
nop
arpl
scas
inc
aam
mov
test
adc
add
cmp
and
xchg
sti
dec
jge
inc
add
aad
sti
int
xchg
inc
add
movb
adc
fadds
mov
imul
sahf
mov
lcall
pop
cmp
outsl
sbb
adc
mov
fmuls
fsubrs
jle
mov
call
lcall
jp
in
pop
aam
fidivrs
and
mov
mov
int3
aas
mov
rclb
push
xor
sub
jo
xorl
inc
cmpsl
add
pop
cmp
mov
inc
into
pop
cmp
xor
dec
fdivrs
push
xor
or
outsl
lcall
add
jbe
jne
mov
xor
cs
leave
rclb
push
mov
sbb
xorb
mov
jg
dec
rorl
add
or
mov
sbb
inc
add
xor
lcall
adc
dec
mov
and
clc
outsb
or
adc
pop
int3
stos
mov
pop
enter
mov
mov
mov
dec
mov
pop
stos
add
lea
and
sbb
pop
enter
pop
cltd
or
xor
scas
pop
cli
push
scas
cmp
mov
xlat
pop
lret
scas
pop
outsb
repz
cmc
adc
xchg
jne
repnz
pop
repnz
mov
ljmp
lods
lret
inc
test
xchg
pop
bound
clc
or
mov
nop
in
fs
popf
insb
cmpsl
mov
lods
lret
inc
test
fisttpl
fnstsw
cmpsl
aaa
push
mov
push
dec
orl
push
shlb
pop
test
cltd
push
fisubrl
hlt
or
pop
xchg
adc
loope
jmp
jge
loope
ljmp
push
scas
pop
pop
test
jge
cmp
and
xor
sbb
jl
negb
mov
inc
mov
call
aad
pop
enter
inc
loope
adc
data16
lret
mov
jg
jmp
mov
mov
mov
push
xchg
repz
out
lock
adc
pop
ds
fstpl
test
punpckhdq
xchg
addr16
dec
cmp
sbb
test
jge
inc
add
aad
sti
int
xchg
inc
add
movb
ret
add
dec
xor
mov
sahf
xor
bnd
mov
sub
add
cmp
and
push
sbb
movb
inc
nop
inc
add
mov
incl
mov
ret
fisttpl
fnstsw
jb
xchg
testb
add
xor
cmp
dec
lds
mov
ret
cmpsb
push
hlt
mov
ljmp
push
push
xor
and
sahf
or
cmpsb
dec
xor
fiaddl
mov
mov
repz
cmc
inc
rcrl
pop
into
jno
jle
call
int
xchg
test
mov
sbb
adc
jns
sbb
sub
movb
mov
and
test
dec
fistpll
pop
cmp
aaa
xor
cmp
push
lds
or
sbb
push
imul
test
jge
outsb
inc
int
and
jb
lock
bound
and
out
notl
mov
pop
int
mov
mov
test
test
cmp
test
test
sbb
cli
imul
mov
jns
push
dec
ret
mov
push
out
and
sub
sbb
in
sbb
cli
popf
insb
rorl
mov
lods
and
add
lock
lret
out
call
fwait
or
sbb
cmp
into
pop
cmp
add
pop
int3
stos
data16
dec
mov
dec
mov
pop
ljmp
orb
es
stos
sub
sbb
cli
push
add
cmp
or
inc
push
inc
add
movb
and
adc
add
mov
ljmp
jnp
in
or
xchg
testb
mov
and
cmp
dec
fdivrs
stos
int
fidivs
lods
imul
mov
mov
and
ljmp
cmp
mov
jecxz
mov
inc
mov
push
mov
jns
push
adc
mov
fistpl
test
add
jns
xchg
or
inc
add
mov
adc
add
cli
push
mov
fildl
mov
idivb
je
out
inc
int
lret
jecxz
sub
movsb
cmp
sbb
insl
hlt
pop
lods
push
adcl
mov
gs
adc
fistpl
stos
pop
mov
push
pushf
sti
push
lock
mov
inc
mov
adc
mov
pushf
sti
push
testb
sub
sbb
add
sahf
jl
jle
mov
add
cmp
dec
mov
sbb
inc
add
mov
ret
out
imul
out
loop
pop
loop
add
cmp
inc
sbb
hlt
mov
xor
sahf
sti
mov
out
adc
es
pop
test
sbb
jo
sub
mov
inc
mov
or
mov
mov
sbb
dec
fstpt
pop
xchg
repnz
and
daa
mov
inc
mov
icebp
imul
insl
adcl
sbb
sub
fimuls
pop
jmp
out
jo
jg
jne
out
inc
sbbb
ljmp
inc
out
filds
mov
idivl
jo
loop
mov
cwtl
je
lea
fmuls
fcomps
mov
jg
pop
mov
push
inc
and
aas
outsl
out
jl
notb
adc
mov
xchg
jbe
int
and
cmp
pushf
xor
dec
rcrb
scas
pop
mov
fistpll
roll
aad
mov
shlb
pop
cmp
sub
int3
inc
and
lods
lret
inc
scas
mov
lds
adcb
subb
mov
mov
inc
mov
mov
mulb
push
out
js
mov
push
xchg
add
jp
test
fildl
mov
mov
sti
dec
sub
sub
adc
xchg
cs
push
lds
and
adc
mov
repnz
jae
xchg
xchg
movsb
ret
ds
dec
cltd
and
dec
inc
rclb
and
jns
jmp
loope
cmc
pushf
outsl
test
pop
and
xor
cmp
and
inc
sub
lahf
ret
add
sahf
out
and
mov
scas
cmp
mov
add
push
fstpt
imul
iret
inc
aad
dec
xchg
pop
into
test
scas
leave
cmp
std
jb
xchg
xor
xor
imul
or
out
cmp
pop
into
pop
cmp
jno
mov
js
dec
ja
ja
loope
push
mov
nop
testl
inc
mov
jmp
subb
pop
repnz
adc
mov
xchg
xchg
setg
or
push
js
and
fwait
clc
pop
enter
jbe
dec
fstpl
sbb
pop
sbb
push
or
nop
push
popa
nop
jb
inc
fidivrl
inc
and
aas
cmpsb
and
lea
mov
bnd
mov
rorb
dec
andl
pop
ljmp
addb
cmp
sub
cli
dec
rclb
xor
fwait
or
jae
insb
or
repz
push
pushf
sti
push
mov
push
ret
cmpsb
push
nop
aaa
cmpsl
aaa
push
mov
repnz
sub
sub
jg
mov
loopne
jmp
mov
jbe
jge
testl
addb
das
fisubrl
cwtl
push
imul
cmp
dec
in
jge
divl
xchg
pop
bound
inc
mov
sub
or
loope
cmc
pushf
outsl
test
jl
jne
sub
add
cmp
jns
sbb
movb
add
fadds
mov
pop
and
mov
ret
jle
mov
or
adc
push
aaa
ret
sbb
mov
cmp
ljmp
clc
outsb
or
sbb
sbb
add
incl
cmc
mov
mov
hlt
push
cld
pop
std
insb
loop
je
call
fs
data16
xchg
outsb
test
leave
ljmp
in
sbb
sbb
stos
cmp
sbb
cs
push
mov
cltd
clc
or
xchg
and
lods
and
sbb
xor
add
test
mov
add
add
and
adc
loope
jae
sti
pop
into
test
and
aam
dec
test
nop
push
popa
nop
jno
and
jl
jne
insl
jns
insb
or
out
mov
inc
mov
mov
cmp
push
mov
sbb
movb
adc
mov
adc
mov
pop
out
add
sbb
inc
int3
inc
and
and
popa
add
cmp
dec
fdivrs
sbb
push
ret
cmpsb
push
mov
push
xchg
repz
out
out
adc
sbb
jns
mov
add
jecxz
loope
jae
aad
fidivrl
or
xchg
jb
gs
lds
iret
and
adc
fldcw
fyl2xp1
lock
aam
fmuls
fdivs
push
pushf
sti
push
test
enter
nop
testl
xor
insb
lds
test
cmpsb
shll
mov
and
pusha
pop
repnz
int3
inc
and
push
cld
sbb
scas
dec
push
rolb
sarb
push
xchg
pop
bound
push
mov
add
sbb
pop
iret
stos
pop
test
push
add
add
jns
push
popa
xor
inc
add
mov
sahf
mov
dec
out
out
loop
je
lods
and
mov
shll
notb
mov
and
xchg
pop
std
jo
xorl
fdivs
push
lret
pop
ds
rolb
mov
out
std
insl
hlt
pop
loop
ljmp
mov
pop
int3
inc
and
push
imul
pop
into
test
xchg
lock
fisubs
aaa
cmpsl
ret
pusha
std
insl
hlt
pop
mov
popf
or
mov
inc
mov
dec
mov
mov
lds
or
cmpsb
jb
popf
or
mov
gs
jne
dec
fnstcw
mov
and
lock
mov
nop
adc
in
sbb
inc
les
int3
and
push
and
add
or
xchg
mov
inc
add
call
and
add
mov
out
pop
lret
scas
pop
fsubrl
add
cmp
popa
inc
lods
adc
xor
add
add
out
ret
xor
mov
push
call
push
call
push
pop
cmp
push
int
frstor
stos
pop
andl
add
jmp
jmp
je
out
syscall
test
jge
outsb
loopne
mov
cmp
cmp
ljmp
fidivrl
xchg
testb
push
cmp
push
call
jae
outsl
or
in
scas
stos
popa
jbe
pop
sub
push
jp
jp
aam
repnz
fs
xlat
pop
int3
stos
data16
xchg
mov
adc
push
call
xor
pop
hlt
js
mov
jnp
fs
or
jae
xchg
aaa
ljmp
dec
cmp
lcall
lds
subb
add
jmp
mov
inc
mov
mov
xchg
xor
cld
pop
push
ljmp
add
cmp
popa
xchg
test
push
inc
add
movb
or
mov
adc
sahf
ret
lret
push
add
add
sbb
and
inc
add
mov
out
pop
adc
addr16
sbb
add
incl
inc
sub
aaa
mov
inc
xlat
mov
call
jg
pusha
push
call
lods
movsb
ret
mov
cmpsb
aam
push
call
jle
cmc
push
call
flds
mov
out
jns
mov
xor
add
push
and
ljmp
mov
mov
mov
aaa
mov
add
xchg
aaa
jmp
ret
push
lds
cmp
mov
sub
adc
mov
add
cmp
popa
inc
xor
sbb
inc
add
mov
mov
add
mov
incl
xchg
jb
imul
stos
push
xlat
daa
popf
sti
push
call
push
lds
stos
pop
mov
fiaddl
ret
or
mov
inc
mov
scas
sub
inc
in
data16
xchg
outsb
mov
cwtl
mov
add
jmp
jne
insb
or
mov
mov
push
call
insb
jmp
push
in
add
dec
scas
sti
nop
mov
pop
ds
lcall
inc
daa
shlb
dec
punpckhbw
loope
incl
push
jns
popa
sbb
std
insl
std
test
stos
adc
ss
ljmp
inc
add
mov
ret
jle
call
into
cmp
push
call
sahf
or
xchg
dec
add
call
xor
sub
jl
negb
cmp
btl
shll
rol
pop
enter
dec
out
mov
add
push
xor
pushl
fscale
aaa
out
jnp
in
bound
jne
mov
jmp
mov
mov
addr16
inc
pushf
add
inc
shll
in
mov
mov
push
hlt
push
cld
jnp
xchg
jb
pop
insb
in
jge
notl
lods
sub
lds
out
cvtps2pd
jb
in
jmp
push
in
or
push
shll
inc
mov
scas
and
xor
push
add
movb
adc
sub
lahf
and
fadds
mov
sahf
ret
dec
out
movsb
sub
les
push
lahf
mov
lods
mov
stos
mov
roll
icebp
or
inc
shll
cltd
push
sub
outsb
or
pop
push
lds
iret
push
sti
jae
xchg
roll
dec
cmpsb
out
loope
jae
fisttpl
mov
mov
sti
sahf
insl
fnstsw
jno
jecxz
pop
rclb
jg
loopne
adc
dec
mov
mov
lret
mov
add
cmp
xchg
and
sub
lahf
add
fadds
mov
out
out
imul
pop
xchg
mov
sbb
mov
jle
jb
in
lock
shll
xchg
popa
mov
out
adc
jle
mov
mov
xlat
mov
scas
out
icebp
nop
arpl
dec
cmpsl
push
xchg
or
jle
pushf
xor
add
push
xor
add
or
leave
pop
cmp
sub
lret
aaa
cmpsl
ret
mov
sarl
add
popa
inc
mov
and
jge
inc
add
aad
jmp
add
mov
xor
ljmp
out
adc
or
cmpsb
dec
xor
rolb
mov
in
iret
pop
cmp
adc
lcall
inc
and
cmp
insb
loop
je
mov
xchg
js
jo
loop
jg
jp
in
pop
das
mov
dec
mov
loope
scas
rorb
mov
punpckhdq
sbb
inc
and
data16
pop
iret
stos
pop
loopne
enter
dec
push
test
jge
pop
sub
jo
loop
lret
dec
fdivrs
js
imul
add
cmp
and
jns
mov
jge
inc
add
aad
sahf
sub
lahf
test
mov
xor
out
ret
jb
xchg
mov
mov
popf
jne
jno
xorb
mov
inc
mov
int
aam
dec
jmp
mov
js
fs
sbb
ficoml
cltd
or
jo
sbb
das
mov
repnz
pop
repnz
cmp
push
xchg
add
stc
imul
xchg
repnz
movsl
aaa
cmpsl
ret
js
arpl
cmc
push
fiadds
dec
mov
push
out
call
test
aad
fwait
gs
imul
es
mov
add
push
xor
jns
add
out
adc
push
bound
and
xor
inc
inc
push
xor
sub
in
add
addr16
pop
push
aam
sub
push
xor
sub
shl
js
mov
ret
dec
fnstcw
or
jb
jae
xchg
push
fstpt
mov
fistpll
mov
mov
es
xor
xor
xchg
add
xor
in
bound
cld
fwait
jbe
rclb
pop
mov
loopne
adc
or
mov
out
jl
testb
push
shll
dec
mov
xorb
fs
popf
insb
fdivrl
pop
cmp
popa
in
jo
xorl
jp
ficomps
cmp
mov
nop
mov
mov
mov
movsb
sub
sub
cld
xchg
cmc
add
data16
pop
loop
into
dec
fnstcw
pushf
sarl
cmp
popa
lods
or
int
push
inc
add
aad
and
add
mov
mov
sti
imul
push
test
jge
outsb
xchg
in
mov
pop
iret
stos
pop
lods
std
je
lea
or
dec
ret
ret
lods
cmp
xchg
mov
sbb
inc
fidivrl
jmp
add
cmp
push
mov
or
ret
push
inc
add
aad
dec
sub
lahf
or
fadds
mov
xor
ret
fstpt
enter
dec
fimull
fidivrl
jnp
bound
dec
sub
push
and
aaa
mov
inc
mov
jns
jo
loop
inc
fimuls
dec
cmc
insb
loop
je
add
xor
xchg
stc
imul
insl
ret
mov
arpl
xchg
gs
loop
pop
loop
mov
mov
sti
imul
sbb
in
or
add
fs
pop
loop
pop
fmuls
fdivrs
ss
inc
mov
pop
xchg
add
jnp
mov
dec
mov
out
xor
add
cmp
xchg
adc
mov
inc
sub
lahf
ret
add
adc
and
pop
xchg
push
mov
es
mov
cmp
xchg
xor
clc
mov
and
add
add
out
imul
cmc
gs
adc
gs
pushf
outsl
mov
repnz
mov
cmpsl
jno
xorb
push
shll
test
adcb
loope
mov
cmpsb
xor
scas
insl
mov
mov
mov
sbb
lea
mov
mov
sar
notl
adc
add
add
mov
dec
jmp
int
push
inc
add
aad
ljmp
lahf
test
mov
out
dec
sahf
add
and
xchg
cmc
add
aaa
scas
aas
pop
test
mov
add
pop
andb
and
in
xchg
mov
popf
gs
sbb
cmp
arpl
xchg
gs
inc
shlb
add
add
mov
test
push
inc
add
aad
adc
lahf
imul
mov
out
incl
pop
mov
or
mov
ret
inc
fidivrl
mov
es
hlt
pop
in
lods
es
cs
cmc
jle
mov
mov
mov
aad
fimuls
add
pop
int
xchg
outsb
or
adc
jne
mov
push
outsb
or
adc
mov
xchg
or
xor
gs
pushf
outsl
jns
jl
negb
push
lds
and
jb
cmp
mov
dec
mov
add
cmp
inc
popa
push
dec
jns
sbb
inc
add
add
and
out
call
filds
mov
and
and
add
test
jns
imul
fmuls
mov
push
add
mov
add
sti
and
mov
fwait
or
xor
ja
loope
test
stos
int
xchg
add
add
cmp
test
popa
mov
push
add
out
xor
lahf
add
aad
sub
pop
mov
mov
out
xchg
fwait
decb
cmp
sub
jle
mov
xorl
jl
mov
ret
push
xchg
add
js
rolb
shlb
cmp
push
sahf
or
cmpsb
insl
jae
push
adcl
test
dec
fstpt
fistpll
dec
sub
sub
dec
fdivrl
pop
ds
push
les
notb
cltd
clc
or
inc
aad
sub
aaa
or
out
loopne
jb
stc
popa
icebp
nop
arpl
xchg
dec
roll
sarl
nop
push
popa
nop
das
lahf
pop
xchg
repnz
int3
jnp
stos
cmp
add
test
test
mov
jns
psubsw
cwtl
imul
ljmp
add
outsb
sub
push
fisttpl
fnstsw
out
imul
lods
cmp
gs
pushf
outsl
xchg
lds
push
rclb
cs
sbb
aad
rolb
sbb
xchg
je
mov
inc
mov
test
fcoms
adc
mov
in
sbb
shlb
arpl
cmc
xor
iret
push
mov
mov
test
cmp
jp
jp
cwtl
add
mov
jle
and
push
xor
jle
sbb
xor
add
cmp
xchg
mov
sbb
inc
add
pop
and
inc
dec
add
sti
imul
insl
ret
push
lds
mov
mov
inc
mov
out
sbb
mov
pop
mov
jle
pop
aam
lds
fwait
jbe
rclb
mov
mov
sbb
add
ficomps
scas
pop
mov
dec
fidivrs
mov
jg
mov
xchg
or
add
lods
mov
pop
pushf
push
add
adc
pop
sahf
mov
sti
pop
aam
sub
xchg
cmc
add
orb
adc
sti
je
lea
loope
adc
or
outsb
cld
fwait
jbe
enter
pop
mov
sbb
mov
push
lret
pop
ds
cmp
mov
aad
into
pop
leave
pop
cmp
and
lea
out
adc
pop
mov
mov
repnz
pop
repnz
sbb
xor
addr16
push
int3
push
shll
dec
mov
inc
mov
mov
mov
mov
jl
jne
push
push
xchg
add
jne
insb
loop
je
mov
sahf
stc
or
mov
lods
clc
jge
je
gs
notb
stos
into
cmp
fnstsw
add
sbb
fmuls
fcoms
cltd
adc
mov
xor
jp
fs
pop
lahf
adc
push
mov
es
pop
enter
cmp
test
fwait
or
pop
into
pop
into
test
jo
loop
lcall
mov
es
out
je
lea
dec
fdivrs
shll
cltd
push
cmpl
mov
js
and
xchg
das
xchg
add
adc
fwait
or
sbb
movsb
cmp
js
jb
xchg
jo
loop
xchg
sbb
push
pushf
sti
push
call
and
xor
dec
fstpt
sbb
bound
notb
add
cmp
and
mov
push
inc
add
aad
add
sub
lahf
fadds
mov
imul
sahf
mov
out
adc
or
pop
xchg
repnz
icebp
stc
add
cmp
or
popa
lods
xor
add
mov
mov
ret
adc
ret
sahf
pop
pop
fisttpl
fnsave
add
add
and
sbb
add
add
out
imul
dec
out
cltd
push
jge
outsb
mov
dec
rcll
xor
fidivl
jb
ja
loope
rolb
mov
in
pusha
notb
lods
mov
cmpsl
sbbb
out
sbb
dec
jb,pn
jne
out
dec
mov
and
jecxz
into
pop
cmp
pusha
xlat
dec
frstor
xchg
addr16
notl
jge
jo
loop
mov
mov
mov
arpl
push
xor
dec
sbb
jb
add
and
stos
cmp
dec
loop
lock
bound
fdivrs
push
pop
loopnew
adc
add
insb
loop
je
xor
sbb
pop
mov
gs
xor
pop
cmp
add
push
lds
or
add
cmp
lods
inc
dec
xchg
push
and
add
sahf
adc
lcall
xor
inc
int3
inc
and
sbb
jecxz
push
in
addr16
push
xor
sub
mov
jle
jle
test
pop
test
setle
cmpsb
gs
dec
xchg
or
into
pop
cmp
sbb
xchg
or
test
mov
inc
mov
mov
xchg
adc
xor
ret
mov
test
jge
and
and
lea
fistpl
rolb
rolb
lds
iret
sub
dec
fdivrs
jb
in
scas
das
mov
lret
pop
ds
ficomps
scas
pop
mov
mov
mov
lods
mov
cmpsl
cmp
in
loop
je
lahf
push
test
push
lock
adc
add
jne
mov
add
test
xor
test
lods
inc
shll
cmpsl
ret
mov
mov
les
repz
sti
lcall
mov
inc
mov
sub
push
popa
add
dec
mov
mov
test
xchg
add
cmp
popf
or
cwtl
push
imul
push
pushf
sti
push
ret
mov
sbb
sbb
test
fwait
decb
out
sbb
fstps
stos
data16
add
cmp
mov
or
add
inc
add
mov
mov
and
pop
incl
or
sbb
add
call
scas
push
call
pusha
add
loope
adc
data16
setg
or
adc
push
call
dec
lret
lret
mov
adc
jne
add
and
inc
inc
fidivrl
out
mov
into
dec
frstor
push
call
adc
aam
fildll
add
out
jmp
lock
bound
icebp
adc
push
cmp
and
push
call
in
data16
xchg
outsb
mov
mov
je
and
jb
add
mov
dec
fistpll
xchg
repnz
mov
sarb
add
jmp
jl
notb
gs
mov
mov
jmp
push
call
test
cltd
clc
or
or
ds
inc
mov
mov
mov
jmp
stc
imul
std
push
call
lock
icebp
nop
arpl
jecxz
mov
outsl
test
sub
jmp
mov
mov
jns
add
and
push
mov
pop
fsubrl
ja
add
adc
call
mov
jle
arpl
adcl
test
fmuls
fsubrs
jae
push
call
in
jne
mov
jp
jo
loop
out
decb
jmp
jmp
add
xlat
mov
popf
jne
jns
jmp
das
mov
inc
mov
lcall
add
or
mov
xor
inc
add
mov
out
out
add
and
jae
xchg
adc
adc
push
call
adc
cmp
gs
push
xor
dec
lcall
scas
push
call
popa
loop
pop
loop
cli
pop
push
call
jl
xchg
cmc
add
mov
mov
xchg
jb
inc
push
call
push
pop
jp
ja
push
sub
push
call
movsb
aas
scas
lret
and
stc
inc
push
lcall
push
call
mov
ret
lret
scas
pop
mov
fmuls
fdivrs
repz
mov
dec
movsl
flds
push
call
call
stos
sub
sti
jnp
mov
and
cmp
dec
cmp
es
mov
and
cmp
int3
pop
int
addr16
outsb
insb
or
mov
fcomps
xlat
inc
xlat
mov
lods
out
loop
adc
cmp
xchg
lods
dec
and
movb
xor
aad
mov
or
add
movb
mov
fadds
mov
dec
out
lcall
sahf
xor
inc
and
cmp
push
imul
and
mov
jb
js
ljmp
jp
imul
insl
ret
int
addr16
dec
fnstcw
lcall
je
add
popa
add
jbe
sbb
aad
lock
dec
fstpt
mov
cli
push
or
rcll
and
dec
fistpll
shll
mov
lods
sbb
es
cmp
mov
jo
outsl
or
jmp
sbb
push
fdivl
in
and
jg
mov
fisttpl
mov
hlt
xchg
outsb
fwait
jle
jl
notb
mov
js
dec
xchg
add
pop
lret
lret
dec
fistpll
sahf
stc
or
jmp
mov
mov
aas
scas
lret
movsl
cmp
mov
sti
push
adcb
subb
clc
outsb
or
dec
cmpsl
cmp
aas
scas
lret
inc
out
adc
imul
outsl
lcall
jle
xchg
add
jae
in
bound
push
jno
imul
xchg
push
lcall
jmp
cmp
push
xchg
repz
test
lods
sub
mov
inc
mov
ja
xorb
cmpsl
aaa
push
mov
std
or
daa
mov
xchg
add
std
or
mov
mov
adc
and
jns
mov
xchg
add
sbb
outsb
cld
fwait
jbe
or
cli
push
lods
and
or
nop
push
popa
nop
cmp
jle,pn
add
cmp
mov
sbb
push
inc
add
movb
and
fadds
mov
pop
xor
dec
out
sahf
cmp
push
lret
cmc
push
dec
push
cmc
gs
jp
mov
jns
prefetchw
jo
popa
add
pop
call
mov
inc
aam
dec
lods
fcompl
scas
pop
mov
out
adc
push
push
aam
sub
in
jle
and
or
fs
xor
add
mov
lcall
mov
mov
aas
scas
lret
lea
xchg
lock
xchg
and
in
sbb
add
loop
pop
loop
imul
or
out
sub
push
ret
ret
pushf
xor
mov
mov
sbb
push
xchg
pop
bound
daa
sarb
pop
int3
inc
and
ss
mov
sbb
inc
mov
mov
mov
lea
and
repz
gs
aad
sub
je
pop
xchg
repnz
mov
testl
stos
pop
mov
jb
xchg
xor
sub
addl
lret
in
sbb
add
xchg
add
jp
add
pop
xchg
adc
xchg
push
xchg
sbb
ljmp
lahf
cli
or
push
fisttps
jle
popa
add
add
xchg
jl
rolb
shlb
aas
lods
cmp
pop
iret
stos
pop
movsb
arpl
imul
sbb
dec
adc
jmp
push
in
add
push
cmp
push
stos
cmp
pop
mov
icebp
pop
rcll
push
mov
xlat
and
decb
push
lahf
push
lock
xchg
pop
stos
cmp
sub
iret
pop
cmp
push
imul
pushf
sbb
les
dec
lods
test
lret
shll
arpl
out
sbb
stos
data16
lcall
aas
jl
add
cmp
jns
mov
test
inc
add
add
sahf
pop
mov
out
adc
test
adc
push
cmp
and
jl
jne
data16
inc
and
sub
std
popf
push
pushf
sti
push
jecxz
inc
shlb
adc
inc
jo
je
out
or
inc
shll
and
pop
aam
xlat
mov
call
mov
fildll
pushf
jb
js
ljmp
scas
cltd
add
pop
lds
iret
jp
jmp
pop
ret
ret
and
inc
shll
ret
or
ret
cmpsb
push
mov
jl
jne
les
mov
mov
and
xchg
sbb
sub
gs
jge
notl
iret
inc
fidivrl
xor
outsl
fcompl
scas
pop
mov
sbb
loopne
std
test
lret
mov
cmpsl
xlat
pop
enter
adc
stos
aas
scas
lret
mov
mov
sbb
pop
movsb
cmpsl
aaa
cmpsl
ret
roll
dec
cmpsb
js
bound
mov
out
xchg
pop
bound
push
mov
cmp
xchg
test
sbb
add
add
imul
mov
mov
insb
or
scas
jg
je
out
push
scas
aaa
cmpsl
ret
popa
ja
test
add
test
mov
add
mov
xor
inc
add
movb
fadds
mov
dec
and
ret
xor
filds
mov
call
or
add
imul
insl
in
dec
into
pop
cmp
add
outsl
lcall
test
push
pushl
sub
pop
loop
cli
popf
insb
test
inc
aam
dec
scas
push
aad
sub
xor
inc
and
aaa
cmpsl
xor
lds
iret
push
sbb
aaa
push
add
add
adc
dec
or
sub
lahf
xor
fadds
mov
dec
pop
mov
adc
mov
loope
push
inc
iret
pop
cmp
xor
adcl
test
dec
fdivrs
int
add
add
add
or
cmp
inc
add
add
mov
sahf
mov
mov
xchg
repnz
and
enter
pop
lods
mov
add
cmp
mov
inc
jns
or
sub
lahf
mov
adc
sti
ret
add
dec
out
sub
jns
or
add
add
jns
sbb
xchg
dec
sbb
inc
add
add
imul
xor
pop
into
pop
cmp
adc
jp
scas
aas
scas
lret
sahf
or
adc
mov
mov
xchg
cld
fs
popf
insb
lds
xchg
cmc
add
data16
outsb
or
push
jbe
jg
jmp
sub
sbb
xchg
and
push
cld
jnp
dec
fstpt
mov
sbb
mov
lahf
cli
or
jb
pusha
pop
repnz
fidivrs
imul
xor
inc
dec
iret
pop
cmp
cmp
iret
xchg
push
mov
les
addr16
pop
push
fistl
pushf
sbb
clc
outsb
or
sbb
sub
insb
or
out
pop
xchg
add
mov
fildll
ret
mov
sbb
sahf
push
pushf
sti
push
mov
adc
fstpt
es
inc
mov
stc
aad
add
cmp
inc
adc
xchg
popa
mov
inc
push
inc
add
movl
sti
and
mov
sti
pop
imul
push
push
xor
movsl
xor
movsb
cmp
pop
pop
test
jge
cmp
ja
loope
pop
lds
iret
jb
stos
and
add
cmp
dec
adc
or
jns
sub
lahf
sti
dec
dec
out
mov
dec
ljmp
adc
push
lahf
push
lcall
repz
sbb
add
cmp
lods
jns
or
inc
add
je
fadds
mov
sti
pushl
adc
cmp
jg
fldt
nop
push
popa
nop
pop
sbb
add
pop
dec
int3
inc
and
pop
bound
test
mov
clc
adc
dec
pop
cltd
or
ja
enter
and
pop
iret
stos
pop
test
stos
cmp
or
jo
jg
fs
adc
sbb
push
lds
jbe
ja
insb
or
out
xchg
add
std
or
mov
mov
sbb
cmp
sbb
fmuls
fdivs
xor
sub
push
lds
cmpsb
shll
xchg
or
stos
cmp
add
push
shlb
or
push
add
mov
jns
and
mov
or
add
mov
and
cld
adcl
test
test
pop
fisttpll
out
ficompl
stos
data16
insl
hlt
pop
in
out
loop
je
orb
clc
or
mov
out
cld
inc
into
pop
cmp
xor
insb
loop
je
mov
test
xor
pop
xchg
lcall
add
add
or
lods
push
and
add
sahf
out
adc
out
sti
pop
out
jl
jne
insb
or
add
sub
mov
add
cmp
inc
mov
xor
movsl
inc
add
mov
xor
fimuls
mov
frstor
inc
mov
stos
cmp
sub
cld
gs
pushf
outsl
fistl
pop
cmp
jle
stc
imul
adc
sub
cmpb
cmp
xor
ljmp
stc
subb
pop
ret
mov
cmp
adc
xchg
lods
or
add
out
adc
mov
pop
out
sbb
stc
imul
js
ljmp
iret
dec
fidivrs
push
jno
outsb
ret
mov
stc
cwtl
imul
push
lret
inc
shll
push
cld
adc
pop
cmp
sub
push
cwtl
imul
iret
and
data16
xchg
outsb
fwait
pop
iret
pop
cmp
jo
notl
jae
jnp
in
or
push
lahf
push
jp
jl
negb
cs
insb
mulb
psrld
mov
iret
stos
pop
into
sti
lock
fs
popf
insb
lds
mov
inc
call
stos
push
jbe
dec
sub
test
push
cltd
mov
in
adc
add
xlat
inc
and
ds
push
mov
es
out
notl
or
jnp
nop
push
popa
nop
jle
rolb
sarb
cmp
pop
sbb
add
cmp
xor
inc
sbb
add
pop
and
imul
dec
out
add
xchg
add
ss
inc
fidivrl
int
addr16
data16
xchg
outsb
mov
lahf
punpckhdq
jbe
push
in
sbb
sbb
jb
xchg
pop
into
pop
cmp
and
xchg
fisttpll
push
xchg
popf
or
push
xor
and
dec
movsb
iret
pop
enter
fadds
mov
mov
pop
int3
stos
data16
xchg
testb
fldcw
add
cmp
mov
dec
and
inc
add
imul
out
ret
xlat
dec
fdivrl
test
push
mov
je
lea
or
in
mov
inc
icebp
in
aam
dec
leave
mov
mov
jb
xchg
push
jbe
out
push
rolb
shlb
addl
lret
sub
push
xor
and
lods
cmp
pop
into
test
fstpt
mov
sbb
sbb
or
jne
cmp
pop
xchg
adc
cmp
pusha
repz
cmc
pop
pop
int3
inc
and
sub
xor
cmp
dec
sub
cwtl
decl
call
mov
popf
or
inc
mov
out
notl
filds
dec
cli
out
in
je
sub
daa
mov
and
test
stc
mov
mov
js
and
push
xor
ja
cwtl
push
imul
loop
pop
loop
or
in
bnd
insl
hlt
pop
in
cmp
sub
insb
loop
je
add
jb
gs
adc
cmp
cmpsb
xor
scas
or
add
cmp
push
sahf
adc
sti
imul
sbb
mov
jg
arpl
mov
js
jge
push
mov
es
add
push
add
add
sbb
sub
lahf
mov
out
inc
sti
adc
out
add
pop
lea
mov
jg
dec
mov
mov
rolb
sarb
and
xchg
and
mov
aam
sub
mov
cs
pop
lret
pop
ds
imul
add
cmp
push
test
ret
inc
add
mov
out
into
push
lds
cmp
jle
test
pop
test
push
push
dec
fnstcw
jb
in
inc
loopne
adc
addr16
xchg
jb
addr16
sbb
scas
cmp
mov
xlat
push
les
or
jne
adc
or
push
ret
cmpsb
push
mov
stos
dec
lea
xchg
repz
test
jmp
inc
int
and
cmp
ret
mov
shll
fdivrl
push
cld
or
ljmp
cs
jne
jp
in
das
add
gs
pop
repnz
dec
sub
and
adc
xor
divb
xchg
aas
movsl
xor
cmpsl
aaa
push
mov
jp
loope
in
mov
in
pop
mov
into
pop
cmp
popa
jb
inc
and
push
xchg
aaa
cmpsl
ret
data16
sbb
das
dec
mov
jmp
enter
dec
mov
add
mov
jns
push
cmpsl
dec
mov
lods
mov
std
or
xchg
push
mov
xorl
pop
stos
inc
mov
shrl
cmpsl
aaa
push
mov
add
push
cld
or
push
ret
cmpsb
push
mov
outsl
cwtl
in
ljmp
leave
cmp
scas
aas
scas
lret
sub
push
lds
fisttps
mov
leave
test
dec
push
shlb
cltd
push
daa
sarb
jb
xchg
dec
fidivrs
insl
hlt
pop
mov
rolb
sarb
jbe
cmpl
pop
iret
stos
pop
loopne
mov
inc
mov
mov
incb
add
cmp
popa
sbb
mov
inc
add
mov
ret
imul
out
jae
xchg
push
inc
and
cmp
jle
call
decl
call
pop
in
popa
out
adc
push
dec
leave
pop
cmp
daa
clc
adcl
test
lahf
punpckhdq
lret
jbe
cmpl
mov
inc
mov
xor
sub
pop
xchg
sbb
jns
mov
jae
insb
or
repnz
or
out
mov
mov
sbb
leave
pop
iret
stos
pop
shlb
add
cmp
mov
jle
imul
test
jge
negl
cs
jl
jne
jne
and
add
xor
push
xor
data16
repnz
out
mov
mov
add
xchg
cmp
push
mov
mov
sbb
jnp
imul
adc
rclw
lods
pop
mov
iret
pop
cmp
aaa
pusha
in
sbb
pop
and
cmp
pop
repnz
xchg
lods
out
clc
inc
in
add
sbb
sbb
add
out
add
movl
add
xor
out
adc
mov
jns
inc
aaa
mov
cmp
xchg
jb
insl
adc
mov
fisttpl
mov
lret
test
mov
push
mov
es
xchg
add
sahf
jl
jbe
cmpl
stos
cmp
inc
adc
mov
inc
mov
int
les
and
sbb
ret
pop
leave
test
lock
out
jno
xorb
adc
in
sbb
sbb
sub
sbb
mov
gs
inc
jle
xchg
testb
test
ljmp
stc
in
dec
fnstcw
xchg
cmc
add
mov
mov
pop
or
dec
les
int3
imul
xor
or
jne
out
add
jne
out
or
xor
inc
out
clc
lahf
push
add
lock
lock
bound
adc
cmp
fimuls
movsb
push
xchg
dec
fmuls
fdivrs
sub
sub
push
and
repz
xchg
outsb
leave
mov
shl
jp
jp
cli
push
arpl
xchg
fdivrl
test
inc
and
imul
add
sbb
xchg
mov
inc
add
mov
imul
out
mov
add
insl
jge
inc
push
call
adc
jns
imul
adc
jbe
cmpl
out
out
fwait
add
ljmp
test
mov
and
sti
out
push
call
imul
les
pop
sti
jmp
mov
cmpsb
add
incl
add
call
pop
cmp
mov
and
sub
xor
xchg
mov
out
push
call
lock
in
push
call
or
mov
lcall
call
push
call
mov
push
call
push
int3
inc
and
mov
jmp
cmpsb
adc
add
decl
mov
mov
frstor
nop
arpl
dec
in
jge
divl
iret
push
call
xchg
leave
mov
mov
sub
add
ljmp
inc
es
popa
loope
adc
xor
test
inc
inc
push
call
pop
or
push
push
call
and
jae
pusha
pop
repnz
jle
mov
xchg
add
decl
cmc
movl
push
call
scas
sub
popa
icebp
nop
arpl
repz
into
jle
pop
movb
decl
movsl
cld
add
push
jle
mov
test
mov
dec
fdivrl
push
cmp
and
mov
pop
mov
in
add
push
shll
aaa
ret
mov
jo
jbe
loopne
mov
mov
cs
stos
cmp
mov
cmpsb
pop
adcb
subb
lcall
mov
out
insb
or
neg
inc
mov
negb
xchg
jb
es
xor
ss
pop
test
pop
test
add
inc
pop
int
rolb
dec
das
fidivl
out
adc
pop
adc
and
mov
call
lock
bound
pop
mov
jbe
popa
loopne
adc
add
jb
xchg
mov
aaa
add
cmp
xor
mov
inc
add
mov
xor
ret
sti
hlt
jno
xorb
repnz
pop
repnz
sahf
or
cmpsb
dec
add
ja
xchg
add
xor
lock
mov
lcall
cltd
or
jnp
sub
lock
bound
jge
and
loope
out
jno
popf
or
in
xlat
cltd
or
fisttpl
push
mov
ret
cld
xchg
cmc
add
outsb
hlt
push
cld
or
lods
sbb
mov
movsb
inc
shll
inc
and
ja
imul
insl
fdivl
lods
and
sbb
or
xlat
push
or
pop
mov
aad
les
dec
fnstsw
pushf
and
ret
ret
mov
mov
cmpsb
shll
adc
mov
std
or
pushf
adc
mov
notb
lcall
mov
sbb
fnstsw
rorb
mov
jb
stc
imul
xchg
pop
bound
mov
les
cmp
dec
rclb
pop
mov
ret
ret
fisttpll
out
rcrl
pop
test
mov
xchg
push
pushf
sti
push
mov
mov
xor
das
dec
mov
jmp
cmp
sbb
imul
shlb
aas
lret
fwait
or
jge
ja
xorb
movsb
ret
ds
pusha
notb
test
cmp
stc
adcl
test
adcl
sbb
add
cmp
xchg
or
inc
xor
jge
inc
add
aad
xor
lahf
inc
add
fadds
mov
sti
mov
sahf
mov
dec
mov
scas
lret
out
jg
jmp
bound
cmp
fstl
cmpsl
push
mov
adc
fisttpl
lret
test
add
mov
mov
sbb
lods
outsl
adc
arpl
xor
dec
or
rolb
mov
clc
lahf
push
inc
fisttps
fsts
pop
leave
test
lock
adc
add
add
xchg
dec
lods
or
jge
inc
add
aad
sahf
sub
lahf
or
fadds
mov
out
dec
sti
and
add
xor
test
inc
jmp
inc
and
imul
loope
icebp
nop
arpl
lods
dec
mov
into
mov
fildl
add
xor
or
sub
lahf
mov
ret
sahf
out
ret
imul
sub
movsb
cmp
dec
call
lcall
mov
shll
or
cmpsb
add
pop
iret
stos
pop
lods
orl
gs
idivl
mov
jecxz
std
test
mov
add
jns
lods
dec
sbb
pushl
ret
movsl
push
xor
push
mov
aad
popa
and
add
add
xor
imul
stc
je
lea
pop
xchg
adc
adc
add
add
adc
popa
sbb
inc
add
pop
and
inc
push
lret
test
inc
out
adcl
test
pop
test
daa
mov
inc
mov
adc
outsl
cli
push
push
xor
aas
mov
cwtl
mov
mov
dec
fstpt
fdivrs
adc
mov
sbb
sbbl
jmp
xchg
fdivrl
mov
in
pop
lcall
jne
fs
sbb
fcmovu
pop
iret
stos
pop
test
cwtl
push
imul
lea
cs
jmp
push
in
or
mov
and
and
jg
or
leave
pop
cmp
sub
int
orb
sti
push
aas
mov
inc
mov
dec
fisttps
push
push
xor
cmp
mov
js
jg
jmp
jg
push
in
push
mov
mov
and
pop
test
and
and
rclb
jbe
rcll
push
pop
out
inc
shlb
mov
adcl
outsb
cld
fwait
jbe
repnz
mov
repnz
fs
mull
icebp
sub
fcoml
inc
and
xor
jge
je
xchg
xchg
icebp
add
addl
or
aaa
mov
inc
mov
mov
stos
push
fmuls
fdivrs
loopne
stc
cwtl
imul
setg
or
outsb
in
sbb
add
add
add
mov
adc
out
int
push
inc
add
aad
xor
lahf
dec
fadds
mov
adc
out
sahf
out
inc
roll
aad
jmp
cli
popf
insb
mov
jb
xchg
pop
xlat
inc
and
sub
push
lret
mov
xor
int
leave
adcl
loopne
mov
add
loope
adc
add
mov
ja
jno
jecxz
push
xchg
add
ss
outsb
cld
fwait
jbe
adc
dec
rolb
sarb
add
sahf
or
cmpsb
andps
pop
cmp
jle
in
sbb
inc
or
cmp
push
mov
push
pushf
xor
jo
and
and
lock
adc
mov
dec
mov
aaa
ret
fisttpl
fnsave
mov
icebp
nop
sbb
fmuls
fcoms
loopne
lcall
jge
notl
cmp
adc
push
imul
pusha
notb
and
inc
jl
bound
cmpsl
ret
sahf
or
adcl
test
popa
icebp
nop
arpl
imul
stc
imul
lods
lret
inc
lock
into
pop
cmp
jg
jl
jne
cmp
add
pop
jo
jge
testl
sahf
aad
cmp
jns
inc
popa
sbb
inc
add
aad
xor
dec
out
out
fadds
mov
ret
out
mov
scas
xor
test
xchg
xor
jmp
lcall
mov
std
insl
hlt
pop
in
iret
pop
cmp
xor
aaa
fcoml
jns
and
add
cmp
dec
xor
out
mov
mov
mov
adc
cmp
and
push
sub
popa
add
lahf
sahf
sahf
fadds
mov
sti
out
dec
mov
mov
mov
lock
bound
push
dec
rcll
and
ja
xorb
stc
imul
add
add
lods
xchg
and
xor
jge
inc
add
aad
incl
popa
sti
sti
fadds
mov
out
lcall
movsb
cmp
inc
fsts
lods
pop
mov
jecxz
push
add
mov
adcl
and
push
pop
js
jg
jmp
dec
mov
addr16
js
mov
inc
mov
sbbb
out
sbb
mov
xor
jbe
add
lret
lret
fimuls
dec
pop
adcb
xorb
pop
into
test
mov
mov
dec
mov
lods
pop
fildl
fnstcw
imul
lcall
cmpsl
push
mov
xchg
pop
bound
out
sbb
insb
lahf
jae
sub
test
pop
test
xchg
sbb
aad
adcl
sub
adc
jb
or
imul
insl
mov
cmc
inc
roll
aad
push
push
xor
es
cmp
enter
outsl
out
in
jle
inc
aam
sub
shlb
fdivrs
or
cmp
dec
sub
sub
mov
cmpsl
aaa
push
mov
out
lods
lea
and
jne
out
pop
push
int
and
jl
adc
in
sbb
or
clc
pop
leave
test
fiadds
nop
adc
cmp
mov
movsl
leave
dec
fidivrs
int
mov
test
pop
test
mov
pop
fimull
fidivl
pop
inc
and
cmp
and
pop
fisttpl
fstl
hlt
adcl
test
inc
xlat
mov
stos
jno
lds
add
cmp
and
adc
pusha
mov
sti
sti
sahf
imul
add
out
dec
outsl
loopne
adc
add
jge
je
insb
inc
enter
cmp
cmp
fdivl
in
fisttps
movsb
push
repnz
movsb
push
xchg
sbbl
out
sbb
mov
movsb
fimull
mov
outsb
or
pop
enter
push
mov
and
outsb
jl
jnp
in
push
mov
mov
ljmp
fdivrl
sub
jno
inc
aam
dec
leave
mov
xchg
adc
mov
xorl
inc
movsl
mov
mov
rcr
pop
iret
stos
pop
xchg
mov
dec
mov
cmpsl
push
mov
mov
xchg
popa
enter
lea
enter
fists
mov
add
out
jg
jmp
jge
js
or
in
cld
jo
jno
jecxz
dec
fmuls
fdivrs
mov
jg
dec
je
jo
loop
mov
mov
es
fmuls
push
mov
sti
pop
fs
popf
insb
popf
rorl
mov
inc
sub
je
xchg
mov
xor
cmp
add
stos
jne
jg
jmp
testb
cmp
pop
stos
cs
mov
iret
dec
ret
mov
jp
jp
push
popf
or
cmc
gs
adc
xchg
mov
inc
shll
fdivrs
movsb
ret
ds
dec
fdivrl
xor
push
inc
lods
int
shll
sbb
push
add
xchg
push
mov
shlb
ja
loope
cmpsb
cmp
jbe
cmpl
adcl
test
lret
lret
sahf
or
cmpsb
dec
rolb
mov
cmpsb
les
mov
push
aaa
ret
popf
or
int3
inc
and
mov
adc
xor
fwait
inc
pop
int
addr16
pop
mov
jns
aas
cmp
mov
lcall
sbb
sbb
addr16
sbb
mov
or
roll
sarl
movsb
and
das
mov
push
ret
cmpsb
push
mov
mov
lahf
punpckhdq
call
and
pop
mov
shrb
stos
cmp
dec
fstl
mov
mov
xchg
add
jns
push
les
outsb
or
pop
mulb
pushf
outsl
scas
out
jg
mov
jo
jne
out
pop
push
lcall
dec
adc
inc
sti
notl
sbb
cltd
pop
xchg
repnz
sbb
jp
mov
mov
test
push
ret
cmpsb
push
in
in
sbb
push
hlt
push
cld
jnp
cmp
cmp
push
mov
out
jo
cmp
sub
push
movsl
and
lods
cmp
push
jge
gs
pop
mov
scas
leave
cmp
sub
pop
roll
sarl
ljmp
cmp
mov
jg
arpl
imul
cmc
pushf
outsl
test
jmp
popf
cmp
or
aad
sub
aas
stos
cmp
mov
scas
popa
sti
imul
adc
aaa
push
mov
decl
sti
dec
mov
cmp
mov
mov
inc
push
inc
add
int
push
inc
add
aad
out
les
lahf
inc
xor
ret
add
adc
dec
out
insl
mulb
dec
jp
jo
loop
mov
xchg
xor
push
iret
pop
cmp
pusha
stos
xor
dec
aad
sub
push
enter
dec
mov
mov
jge
sbb
xchg
cmp
add
cmp
mov
inc
adc
pop
imul
push
inc
add
aad
pop
mov
fsubrs
add
xor
pop
xchg
add
mov
add
add
cmp
xchg
push
mov
add
jge
inc
add
aad
adc
xor
imul
ret
xor
rclb
sub
cli
and
push
mov
js
pusha
and
push
pushl
jl
loop
clc
lahf
push
push
fisttpll
out
adcl
out
div
jp
jp
mov
xlat
enter
dec
mov
stos
inc
repnz
push
xchg
mov
repnz
icebp
nop
arpl
jns
pop
int
and
aas
jl
jle
call
jle
sub
inc
mov
mov
push
pushf
sti
push
mov
mov
jb
jns
jmp
mov
ljmp
and
push
lds
fdivl
in
lcall
aas
cld
inc
add
add
adc
xor
ret
push
inc
add
aad
mov
add
mov
mov
pop
out
dec
ret
mov
sbb
pushf
outsl
mov
lret
push
mov
es
sbb
addr16
adc
push
mov
cmpsl
ret
out
push
lahf
push
enter
push
mov
cmp
pushf
adc
jmp
movsb
xor
mov
xlat
pop
fisttpl
fnstsw
ljmp
and
sti
imul
adc
push
aaa
ret
es
mov
scas
aas
pop
test
shlb
sub
in
out
jno
stos
lods
lret
inc
loope
faddl
add
lods
adc
xchg
inc
mov
sub
lahf
xor
out
adc
out
imul
sub
add
add
xchg
test
and
int
push
inc
add
aad
and
sub
mov
mov
xor
ret
out
cwtl
add
sbb
sti
lock
fstpl
push
xor
push
push
call
imul
add
or
lods
mov
jge
inc
add
aad
imul
add
jns
mov
mov
dec
sti
mov
ret
inc
fisttps
and
out
pop
inc
ss
cmp
sbb
xor
add
add
mov
and
imul
pop
cli
push
pushf
xor
and
pop
and
add
push
ret
cmpsb
push
mov
dec
ret
mov
mov
inc
mov
sbb
xchg
adc
lods
and
pop
push
inc
and
aaa
sub
data16
cmc
push
push
xchg
add
sahf
push
arpl
js
ljmp
mov
push
mov
pop
leave
test
mov
xor
clc
outsb
or
adc
fnstcw
test
pop
test
mulb
cmp
shrl
sub
shl
jb
xchg
mov
test
push
out
daa
mov
sub
jne
bound
aam
mov
pop
iret
stos
pop
shrb
popa
add
pop
mov
mov
mov
inc
mov
push
mulb
jns
jo
xorl
or
rclb
mov
pop
aas
lret
or
dec
ret
mov
nop
push
popa
nop
jle
insb
or
out
pop
xlat
inc
and
cmp
add
adc
imul
loopne
cld
fwait
jbe
sbb
add
jae
pop
xchg
repnz
cmc
js
mov
repnz
notb
and
inc
jg
jge
notl
cmp
call
xchg
or
push
ret
cmpsb
push
mov
or
shlb
sbb
pop
lea
xchg
pop
bound
dec
mov
insb
lahf
sub
dec
fdivrs
sub
push
fdivrs
jp
push
hlt
push
cld
jnp
js
mov
out
hlt
cmp
test
xchg
dec
sti
int
push
inc
add
aad
dec
nop
mov
adc
fadds
mov
out
pop
and
sti
inc
rclb
or
dec
int3
inc
and
mov
and
jns
insb
or
out
arpl
xchg
lea
jmp
mov
inc
mov
pushf
adc
js
add
cmp
popa
add
pop
stos
and
nop
sbb
push
jecxz
push
in
fsts
pop
test
lods
cmp
pushf
xor
push
leave
pop
iret
stos
pop
shlb
push
push
xor
sub
sub
out
jp
jp
and
pop
push
pushf
xor
push
cmpsl
cmp
mov
repnz
movsl
xor
dec
mov
add
and
lods
pop
sub
lahf
out
out
fadds
mov
sti
out
adc
xor
dec
sub
addr16
or
insl
std
test
or
cmpsb
xor
scas
sbb
push
ret
cmpsb
push
aam
jle
mov
lods
pop
mov
dec
sub
aas
push
xchg
add
sahf
jg
cmp
and
stc
jle
mov
iret
cmp
popa
in
sbb
mov
test
xor
add
jb
xchg
cmc
add
stos
and
sbb
les
mov
and
sti
stos
cmp
ret
ret
iret
pop
cmp
adc
push
xor
sub
rclb
sub
jg
mov
je
ja
loope
inc
jecxz
push
in
sbb
rorl
mov
or
and
lods
add
or
cmp
dec
jmp
inc
fidivrl
push
cld
jnp
push
scas
xor
jb
xchg
mov
cmpsb
shll
dec
int3
inc
and
nop
testl
mov
mov
sbb
lds
jb
pop
out
push
add
add
test
jns
js
inc
add
jmp
imul
pop
adc
mov
js
popa
out
jns
mov
dec
dec
push
call
cli
out
push
roll
pusha
push
call
mov
rcrl
push
xor
jns
data16
xchg
outsb
push
das
xchg
fadds
lcall
mov
push
call
push
call
xor
notl
mov
mov
push
push
call
sbb
mov
out
add
ljmp
pop
cmp
push
js
dec
sub
pop
dec
int
and
add
pop
cmp
das
cmp
jbe
add
jmp
int3
mov
int
pop
sub
push
call
icebp
jne
mov
pushf
sbb
inc
out
mov
ljmp
lcall
dec
adc
or
inc
dec
fidivrs
test
mov
add
add
cmp
push
call
xor
orl
or
ror
push
call
adc
adc
cli
add
add
mov
inc
shll
xchg
lock
add
jl
mov
inc
mov
fdivrs
or
clc
add
ljmp
incb
decl
dec
das
fisubrl
call
filds
dec
sub
add
mov
test
inc
add
out
pop
adc
mov
add
pop
leave
test
mov
sti
adc
xchg
or
je
je
lea
push
call
push
call
fwait
pop
xchg
repnz
sub
and
pushf
xor
or
or
push
add
das
jnp
decl
or
add
and
incl
push
in
clc
data16
xchg
outsb
cs
inc
mov
jg
jno
jecxz
jnp
add
dec
xchg
mov
adc
sub
lahf
add
add
sahf
xor
add
imul
outsl
repnz
pop
repnz
push
mov
dec
mov
xlat
and
movsl
ja
mov
push
add
in
incl
jmp
pop
mov
jle
sti
aam
cmp
jns
mov
inc
push
inc
add
int
push
inc
add
aad
js
inc
add
add
ret
sahf
add
jo
fs
pop
loope
hlt
xchg
outsb
mov
mov
cld
jg
mov
and
push
cld
jne
mov
jnp
popa
add
cmp
shlb
sub
pop
jns
lea
or
push
call
clc
ja
xorb
or
movsb
and
cmpsl
aaa
push
mov
inc
mov
inc
int3
inc
and
or
cmpsb
dec
pop
into
pop
cmp
and
ja
loope
int3
arpl
xchg
mov
sahf
jl
sub
dec
fstpt
cwtl
decl
lods
int3
push
les
push
jmp
push
in
inc
lods
cmp
out
adc
inc
scas
aaa
cmpsl
ret
xor
xor
dec
fistpll
dec
fstpl
jmp
jge
cli
jg
mov
xor
jge
je
lds
mov
test
das
mov
rcll
das
mov
mov
mov
mov
scas
lret
fistl
mov
pushf
sti
push
clc
inc
roll
aad
enter
dec
scas
pop
rolb
sarb
inc
into
pop
cmp
and
movsb
cmp
inc
and
imul
push
les
ret
mov
cmp
lcall
cmp
xchg
add
sahf
outsl
push
int3
inc
and
jecxz
jne
mov
xchg
adc
inc
ljmp
lods
aaa
cmpsl
ret
sbb
pop
jb
cmp
xchg
cmc
add
mov
add
add
mov
test
sti
int
push
inc
add
aad
mov
lahf
popa
pop
pop
fadds
mov
imul
add
sti
add
sub
jbe
cmpl
pushf
xor
inc
rolb
inc
mov
and
push
mov
push
mov
shrl
rcl
lret
mov
dec
fistpll
sub
popa
daa
lods
cmp
jg
mov
push
fdivl
in
mov
lods
mov
cmpsl
xor
rolb
shlb
sbb
push
mov
jle
jle
cmp
mov
jecxz
jo
xorl
xchg
leave
test
mov
add
xor
out
adc
jb
scas
cmp
mov
lods
xor
int
xchg
dec
fisttpl
frstor
je
out
inc
inc
fisttps
fsts
roll
aad
pop
cmp
roll
fildl
mov
stc
sbb
push
mov
xchg
adc
in
sbb
sub
dec
enter
sub
in
jl
push
in
jge
notl
subl
punpckhdq
mov
mov
and
clc
xor
rcll
lahf
punpckhdq
sub
inc
and
mov
and
arpl
addr16
pop
inc
fisttpl
arpl
popa
add
push
sbb
jmp
sbbb
out
sbb
sub
mov
stc
imul
js
ljmp
jno
sti
imul
inc
test
movsb
ret
ds
rep
loop
je
inc
jecxz
push
in
jmp
xchg
aad
shll
cmp
popa
adc
sbb
int
push
inc
add
int
push
inc
add
aad
sahf
js
inc
add
sti
pop
call
mov
ret
fnstsw
je
add
dec
fnstcw
sub
lds
iret
sub
mov
mov
mov
jge
je
insb
fistpl
test
push
imul
mov
jns
push
jne
mov
popa
sub
add
cmp
mov
xchg
or
inc
add
mov
add
inc
out
cli
push
xlat
inc
and
xor
jge
je
popa
lock
je
addr16
jne
mov
pop
xlat
inc
and
sub
pop
iret
stos
pop
pop
mov
gs
popa
adc
mov
repz
icebp
sbb
in
push
int3
pop
into
test
fstpt
and
and
add
iret
pop
cmp
jle
rclb
jg
jp
jp
test
movsl
int3
aas
mov
push
shlb
mov
xacquire
mov
or
jg
mov
xchg
push
test
push
clc
pop
fisttps
flds
cld
adcl
test
xchg
or
jne
jnp
mov
push
aad
sub
xor
push
add
xor
sub
fisttpll
out
mov
nop
testl
testl
or
in
mov
jle
bound
call
iret
and
fsubrl
daa
mov
dec
mov
arpl
xorb
xchg
add
pop
int
lea
fildll
dec
ret
movsl
loop
out
mov
pop
lea
lods
lret
inc
stc
lock
cld
fwait
jbe
into
push
mov
cmp
mov
mov
fwait
mov
sahf
in
dec
fdivrl
xchg
icebp
add
push
mov
sti
jns
mov
test
fwait
decb
mov
bnd
mov
jmp
popf
push
sbb
stos
cmp
dec
pop
ds
xchg
add
cmp
mov
inc
sub
lahf
ret
add
mov
adc
sahf
mov
in
sbb
loop
je
add
ja
in
lock
bound
jo
std
jo
xorl
inc
lods
mov
mov
and
adc
sub
push
ret
cmpsb
push
nop
sbb
mov
leave
arpl
xchg
mov
xchg
dec
fstpt
mov
mulb
xchg
testb
jmp
movsb
cmp
roll
shll
cmp
out
add
cmp
xor
and
inc
add
mov
dec
and
mov
and
mov
loope
pop
stc
imul
push
notl
fisubs
xchg
gs
push
lahf
push
movl
ljmp
stc
out
loope
hlt
xchg
outsb
mov
sbb
add
mov
scas
lret
mov
add
add
or
mov
jns
adc
jge
inc
add
aad
mov
inc
add
add
and
imul
mov
shll
jnp
in
add
or
cmpsb
inc
cld
jo
xorl
shll
shll
adc
add
popa
push
mov
mov
inc
add
add
sahf
imul
mov
test
jge
jns
std
insl
hlt
pop
mov
scas
insl
sub
sub
pop
inc
aam
sub
aam
int
push
shll
aas
lret
fwait
or
sub
inc
jmp
hlt
push
cld
inc
insl
icebp
popa
add
pop
xchg
mov
sbb
add
adc
cmp
push
shll
in
lock
and
inc
shlb
jmp
jge
pop
fimuls
add
inc
xlat
mov
cmpsb
mov
movsb
insb
call
jns
mov
dec
push
xor
sub
in
jge
notl
pop
cmp
inc
lods
or
int
push
inc
add
aad
out
mov
and
sti
decl
adc
adc
les
int3
and
gs
sbb
add
adc
repz
mov
fildll
ret
or
cmpsb
push
adc
sub
jecxz
push
in
push
rcll
and
pop
and
aas
aad
xlat
mov
cmpsl
xchg
add
sahf
or
cmpsb
push
pop
ret
ret
sbb
aad
lea
and
movsb
cmp
add
test
mov
jg
and
mov
dec
repz
cmc
je
test
mov
stos
into
cmp
mov
xchg
lock
lock
xorb
pop
popf
sbb
jno
xorb
in
jge
negl
jg
cmp
mov
inc
mov
or
sbb
gs
or
fidivrs
pop
xlat
inc
and
sub
jo
loop
dec
jecxz
push
in
xor
pop
mov
xchg
push
jle
jle
call
xchg
mov
jg
fimull
fidivrl
daa
mov
and
cmp
test
cmpsb
shll
push
enter
ja
fimuls
dec
fwait
add
std
or
or
das
mov
dec
ret
rcll
mov
inc
and
or
js
mov
or
mov
fidivl
pop
mov
mov
mov
dec
mov
out
sti
jnp
mov
ret
dec
fidivrs
loop
je
xchg
sbb
add
add
xchg
add
jp
sbb
adc
fisttpll
out
sbb
les
scas
pop
cwtl
jl
js
ljmp
add
jns
mov
insb
ljmp
stc
mov
sbb
mov
dec
sub
add
cmp
push
lods
or
movl
add
out
and
ret
xchg
add
sahf
and
jns
jmp
insl
repnz
pop
repnz
sub
xchg
or
xchg
or
sbb
insb
or
sbbl
xorb
aaa
cmpsl
ret
pop
fmuls
fdivrs
lahf
pop
insl
ljmp
aad
dec
mov
nop
jns
jae
xchg
ds
cmp
jne
xchg
cmc
add
aam
enter
cmp
dec
les
int3
and
into
cmp
dec
fimull
fisubrl
in
jl
jne
and
mov
jg
dec
std
imul
cld
xchg
cmc
add
xchg
add
arpl
xchg
les
decb
movsb
icebp
outsl
lcall
sbb
xor
mov
dec
fistpll
inc
es
lret
push
les
sbb
or
fisttpll
out
cld
jle
mov
test
pushf
sbb
aad
lds
and
push
sti
adcl
test
cmp
add
adc
add
cmp
test
popa
sub
lahf
and
fadds
mov
sahf
out
sti
pop
add
out
icebp
nop
arpl
inc
lods
ficoml
mov
pop
ds
mov
shlb
adc
sbb
cmp
cmp
add
outsb
cld
xchg
cmc
add
int3
pop
int
addr16
mov
nop
mov
idivb
add
add
push
test
sub
lahf
xor
fadds
mov
mov
ret
adc
inc
shll
mov
jle
mov
mov
test
sbb
add
popa
inc
sbb
xchg
add
mov
adc
mov
pop
ret
ljmp
jp
jbe
loopne
ljmp
add
dec
fnstcw
add
cmp
mov
jle
cmp
mov
inc
mov
cmp
mov
add
adc
mov
mov
inc
add
xor
out
sahf
dec
ret
cs
mov
out
sbb
movsl
push
shl
jb
xchg
and
icebp
movb
add
cmp
mov
jns
and
jge
inc
add
aad
int
xchg
inc
add
movl
add
mov
xor
and
mov
sti
jp
jp
mov
pop
fisttpll
out
lods
sub
lret
lret
nop
push
popa
nop
jb
mov
fcoml
add
cmp
xor
or
lahf
mov
mov
add
and
movsl
xor
fisttpll
out
pop
roll
shll
mov
gs
jg
jmp
add
and
inc
sub
sub
addr16
pop
sbb
clc
outsb
cld
fwait
jbe
pop
adcb
subb
addr16
pop
and
cwtl
push
imul
add
dec
frstor
adc
dec
rcrl
shrw
xchg
xchg
setg
or
out
test
lea
xchg
or
dec
addr16
sbb
in
mov
sub
add
inc
aam
dec
cmpsl
sbb
dec
fdivrl
push
xor
sub
pop
and
aaa
sbb
add
stc
imul
fdivrs
dec
das
fidivrl
insl
loop
pop
loop
lahf
adc
push
shlb
sti
push
decb
pushf
xor
push
cltd
setg
or
or
movsb
xor
mov
jg
pusha
push
mov
jg
bound
orl
add
arpl
pop
cmp
jle
fimull
fidivl
sub
aas
cmpsl
aaa
push
mov
loope
cmpsl
pop
ret
ret
js
mov
insb
data16
add
add
xor
jns
insb
movl
add
xor
mov
and
mov
mov
cmp
add
cwtl
sbb
xchg
jb
outsb
ret
add
cmp
popa
adc
mov
and
add
mov
sahf
and
adc
adc
xchg
adc
aaa
cmpsl
ret
in
outsl
lcall
sbb
xchg
jg
mov
xor
sub
imul
xchg
sbb
aad
rcrb
pusha
xchg
jae
xor
pop
xchg
adc
adcb
loope
clc
iret
pop
repnz
fs
adcb
out
mov
jmp
push
in
sub
add
jo
cmp
mov
lret
xchg
addr16
jnp
in
sbb
dec
fstpt
xor
or
out
push
xchg
mov
sbb
xchg
and
jae
xchg
push
roll
aad
daa
mov
jle
or
push
xchg
repz
mov
lret
test
xchg
repz
call
int3
sub
cmc
adc
xchg
add
mulb
push
push
inc
and
xor
outsb
cld
fwait
jbe
loop
cltd
push
es
sti
jno
xorb
dec
fnstcw
imul
pop
jne
push
les
int3
and
sbb
les
mov
sub
dec
mov
sbb
dec
les
cmpsl
push
mov
sub
lds
jle
js
ljmp
push
sub
dec
pop
mov
gs
and
pop
iret
stos
pop
into
xchg
push
int
and
jl
mov
jns
aas
pop
add
add
add
lods
test
sub
lahf
mov
mov
adc
mov
dec
sti
push
xchg
add
cmp
pushf
insb
into
pop
cmp
push
insb
int
and
push
out
jae
xchg
iret
dec
ret
mov
push
shlb
push
inc
mov
mov
push
xor
das
mov
cwtl
decl
in
outsb
cld
fwait
jbe
popf
adc
fcoms
mov
jne
out
es
mov
mov
fdivs
cmpsb
out
stc
cwtl
imul
movsb
pop
enter
and
jle
mov
cli
or
cwtl
pop
mov
mov
mov
and
adc
or
xor
cld
or
push
test
outsb
cld
fwait
jbe
in
adc
cmp
data16
xchg
outsb
xchg
adc
ljmp
xchg
icebp
add
cmp
lds
iret
dec
add
pop
scas
faddl
add
cmp
lods
adc
inc
test
inc
add
mov
and
sti
decl
out
and
jle
mov
sub
cmp
lret
mov
mov
std
js
mov
jnp
mov
cmp
and
add
add
inc
and
insb
movl
add
add
mov
out
mov
mov
xchg
and
push
pop
shrl
adc
add
lret
jnp
jo
loop
sub
xchg
sbb
add
mov
fistps
aas
push
add
test
decl
mov
dec
push
call
mov
mov
jae
xchg
ljmp
push
test
push
cltd
push
and
push
lcall
jmp
sbb
push
call
jge
dec
sub
popa
das
mov
inc
mov
incb
mov
add
add
xor
int
push
inc
add
push
mov
sahf
sahf
out
sti
mov
xor
pop
into
test
mov
ds
and
cmp
daa
push
add
sub
cs
add
and
icebp
nop
arpl
jp
push
arpl
cmc
adc
repnz
add
add
jp
xchg
cmp
add
idivb
jmp
std
test
sub
aas
pop
test
test
stos
inc
cmp
xor
dec
imul
jge
inc
add
aad
imul
xchg
inc
add
movb
dec
dec
fadds
mov
sahf
mov
add
out
cmp
cmp
call
dec
sub
jle
popf
or
movsb
ret
shlb
pop
and
xor
add
mov
decl
push
xor
sub
add
movsl
cmp
ljmp
inc
push
add
cwtl
cmp
lcall
lock
adc
test
push
call
push
mov
push
call
les
mov
add
push
les
inc
stos
push
call
out
push
call
pusha
hlt
push
cld
adc
popa
mov
adc
outsb
test
outsl
fsubrl
inc
push
add
and
pushl
jp
in
das
fisttpll
mov
pop
cmp
cmp
cmp
cmpsb
push
hlt
loope
sub
or
idivl
inc
pop
repnz
fs
xor
ja
jge
negl
mov
sbb
jne
dec
aam
sub
sbb
xchg
aas
test
stos
or
pop
lret
scas
pop
push
lds
in
sbb
push
les
lahf
cli
or
inc
lds
iret
and
fs
popf
insb
mov
xor
cs
adc
or
stc
mov
popl
mov
xchg
pop
add
fildl
add
cmp
xchg
xor
sub
or
mov
ret
lahf
sahf
sahf
fadds
mov
imul
inc
lret
lret
adc
fstl
mov
mov
and
rcr
pushf
lret
cmp
test
sbb
add
mov
out
imul
sti
out
add
jle
push
add
inc
xor
pop
jp
jg
sbb
adc
into
pop
int
cmpsb
test
cmpsl
mov
mov
and
inc
roll
sarl
dec
fmuls
fdivrs
in
bound
dec
das
fisubrl
punpckhdq
cmc
add
filds
mov
out
xlat
inc
and
push
call
fidivrs
sbb
push
push
xor
dec
movsb
es
cs
mov
cltd
clc
or
xor
jecxz
lock
bound
dec
mov
loop
pop
cltd
or
ja
cmpsb
xor
scas
inc
inc
int3
inc
and
xor
mov
gs
pop
mov
aad
pop
xchg
repnz
stc
jbe
cmpl
or
in
std
movsb
das
mov
or
add
rolb
shlb
jmp
fs
pop
repnz
rcrb
cld
outsl
lcall
insl
sub
add
xchg
jns
mov
inc
mov
imul
mov
pop
sti
adc
ret
jne
jge
testl
cltd
push
xchg
fiaddl
mov
and
sub
push
fiadds
mov
jmp
fmuls
fsubrs
insb
loop
je
sbb
mov
movsl
int3
aas
jmp
data16
add
addb
repnz
and
dec
cmc
jb
xchg
jge
outsl
or
jmp
lods
inc
cmpsb
sub
lds
and
jbe
insb
or
int
jmp
push
in
add
out
sbb
jo
lods
and
pop
pop
aam
sub
fdivrs
ja
loope
mov
xchg
mov
mov
das
out
mov
xlat
push
xchg
testb
mov
enter
das
mov
fwait
or
sub
xchg
pop
lret
pop
ds
xor
cmp
add
dec
lcall
inc
mov
inc
mov
add
sub
inc
xlat
mov
fwait
rclb
mov
mov
sbb
pop
ljmp
shl
jo
xorl
cli
adc
mov
xor
ljmp
add
push
les
popf
in
icebp
cmpsl
sub
test
push
cltd
or
insl
and
and
mov
in
loopne
mov
inc
mov
push
sbb
push
pop
mov
fimull
fidivl
adc
mov
cmp
and
adc
inc
push
inc
add
int
push
inc
add
aad
mov
pop
xchg
inc
add
movb
fadds
mov
pop
decl
sub
push
into
pop
cmp
pusha
push
pusha
pop
repnz
pop
sahf
or
cmpsb
sbb
test
test
jge
cmp
mov
mov
jecxz
cltd
mov
xchg
adc
push
xchg
pusha
notb
pop
jb
outsb
jl
xchg
testb
and
lock
test
add
and
adc
inc
push
inc
add
push
mov
decl
sahf
add
adc
int
and
xchg
add
sahf
ja
mov
inc
mov
adc
add
cmp
insb
loop
je
or
jnp
push
cld
push
insb
loopne
adc
or
jo
loop
add
jne
pushf
xor
push
in
jmp
jge
das
mov
cli
insb
loop
je
xchg
or
mov
fcoms
cmpsb
push
hlt
pop
push
xor
aas
mov
sbb
and
mov
inc
mov
add
pop
rcll
jbe
or
aad
sub
push
xor
add
mov
dec
adc
popa
pop
sub
lahf
and
sahf
dec
add
imul
ret
xchg
icebp
add
mov
push
test
push
clc
dec
enter
sub
jne
out
cmovns
pop
and
cmp
pushf
xor
inc
xchg
nop
testl
in
std
mov
fidivrs
or
pop
or
sbb
inc
xchg
sbb
jns
mov
mov
add
and
dec
out
int
push
inc
add
aad
out
pop
les
lahf
mov
dec
fadds
mov
sti
sahf
out
adc
and
ret
dec
sub
paddusw
mov
and
pop
rolb
mov
mov
mov
sti
push
lahf
push
jg
jg
jmp
xchg
addr16
add
cmp
or
jns
pop
sub
lahf
add
pop
dec
sti
jmp
pop
xor
sahf
out
cmp
push
pushf
sti
push
mov
xchg
mov
xchg
mov
add
cmp
lods
or
inc
and
push
inc
add
aad
xor
lahf
inc
out
fadds
mov
and
jmp
mov
stos
xor
xor
add
cmp
mov
popa
mov
int
push
inc
add
aad
mov
pusha
les
lahf
sbb
and
add
sahf
mov
pop
dec
mov
nop
push
popa
nop
das
push
out
sub
enter
add
add
push
mov
adc
xor
inc
add
mov
out
xor
and
sti
pop
rcll
push
jmp
mov
xchg
movsb
lret
cltd
push
shll
ds
mov
les
dec
fnstsw
iret
dec
fdivrl
add
jge
fwait
or
jnp
pop
xchg
repnz
rcrb
scas
pop
mov
add
and
adc
pop
int
mov
inc
and
cmp
jo
loop
rcrl
xchg
mov
fldcw
fdiv
gs
pushf
outsl
test
jge
je
jo
lret
lret
pop
repnz
cmpsl
cmp
aam
shll
add
sbb
push
aaa
ret
and
push
mov
sub
adc
fbld
add
std
or
jmp
ljmp
out
mov
mov
dec
in
bound
adc
leave
pop
cmp
sbb
adc
std
adcl
test
and
pop
lret
scas
pop
mov
lahf
punpckhdq
mov
sbb
jno
add
fwait
or
cmp
in
jge
idivl
mov
shlb
lods
lret
inc
mov
cmpsl
inc
push
fmuls
fdivs
cmp
hlt
data16
xchg
outsb
xchg
push
xor
xor
fnstsw
sub
mov
js
imul
adc
movsbl
mov
and
popf
or
and
jp
pop
add
add
dec
sbb
push
inc
add
int
push
inc
add
aad
out
insb
les
lahf
jns
fadds
mov
pop
add
mov
xchg
repnz
jmp
push
leave
pop
cmp
pusha
cld
popa
icebp
nop
arpl
sbbb
and
pop
lds
iret
jp
jmp
andl
shll
cmpsl
cmp
pop
xchg
or
jp
rcll
and
pop
fisubl
add
cmp
dec
popa
adc
mov
jge
inc
add
aad
sti
sub
lahf
mov
mov
and
pop
mov
int
ficomps
int3
cmp
enter
es
or
adc
cmp
jo
outsb
or
xor
test
pop
test
in
popa
icebp
nop
arpl
cwtl
jp
rcll
sub
sbb
push
lret
pop
ds
add
pop
int
and
push
and
inc
rolb
sarb
jno
jnp
in
add
movsl
xor
ljmp
repz
gs
das
mov
pop
repnz
fs
push
xchg
or
fimull
fidivl
lahf
punpckhdq
mov
lahf
punpckhdq
adc
xor
mov
fildl
adcb
andb
mov
test
pop
mov
test
adcb
subb
and
testb
and
inc
and
adc
test
in
stc
cwtl
imul
jg
cmp
adcl
cld
xchg
cmc
add
sub
repz
icebp
nop
arpl
sbb
aaa
cmpsl
aaa
push
mov
cmp
and
insb
loop
je
jo
jnp
in
dec
movsb
lods
lret
inc
mov
sub
data16
insb
or
scas
ret
pop
enter
inc
fimuls
dec
sub
popa
icebp
nop
arpl
imull
lahf
push
mov
lds
fdivrs
mov
mov
cmpsb
shll
imul
xchg
push
test
push
lcall
dec
adc
pop
mov
sahf
stc
or
push
lahf
punpckhdq
fs
jnp
push
mov
add
cmp
adc
jns
inc
mov
adc
jge
inc
add
aad
pop
sub
lahf
inc
xor
fadds
mov
sti
mov
dec
and
adc
dec
sub
jl
in
sbb
cmp
jle
mov
push
in
add
jb
arpl
bound
dec
das
fidivl
push
fisttpll
out
es
dec
mov
adc
adc
out
jg
jmp
ljmp
shlb
push
mov
or
jae
push
shll
xor
xor
mov
sub
loop
out
ja
xorb
push
test
push
test
fnsave
mov
jle
cmp
mov
les
int3
dec
in
hlt
xchg
outsb
mov
inc
movsl
aas
mov
add
movsl
and
notl
icebp
jnp
mov
movsl
and
and
push
test
push
mov
popf
push
in
fs
popf
insb
subb
aaa
push
mov
sub
add
xchg
add
jnp
lret
lret
rolb
sarb
add
jl
bound
jmp
jge
cmp
call
outsl
jo
jp
in
add
pushf
xor
add
dec
fistpll
das
dec
mov
shll
jle
jne
out
push
movsl
cmp
out
adc
pop
sbbb
jmp
movsl
cmp
inc
xlat
mov
enter
sbb
jno
fimull
fimull
push
roll
shll
ficomps
stos
xchg
inc
fidivrl
mov
sbb
in
imul
aam
sub
ret
cmpsb
push
mov
fidivrl
push
push
imul
add
cmp
popa
xchg
or
push
xor
int
push
inc
add
aad
xor
lahf
xor
mov
mov
sahf
dec
pop
out
add
out
icebp
add
cmp
adc
mov
mov
mov
mov
add
sahf
out
sti
and
mov
test
jge
sub
test
rorb
dec
mov
mov
xor
or
shlb
xchg
gs
cmp
pop
fs
gs
or
ja
xorb
sub
repz
cmc
adc
xor
dec
int
iret
stos
pop
jge
jle
call
jp
push
iret
pop
cmp
popa
push
int
and
jl
or
mull
icebp
push
cltd
push
xchg
repz
mov
fs
fisttps
fsts
cmp
push
lds
mov
and
push
xchg
push
test
push
ljmp
jns
jmp
out
notb
lods
mov
movsl
into
dec
fdivrs
lcall
jmp
les
mov
ficoms
inc
scas
orb
sti
push
repnz
xor
inc
sti
jne
mov
jl
addr16
or
jle
mov
cld
psubb
outsb
cld
fwait
jbe
je
jnp
in
sub
push
lds
imul
subl
add
add
lods
dec
adc
popa
jns
add
jge
inc
add
aad
mov
jl
inc
add
add
dec
sti
ret
add
jg
mov
rorb
mov
test
push
test
or
dec
fstpt
aaa
push
mov
cli
or
push
cld
fmuls
mov
sbb
or
jmp
int
frstor
xor
and
out
xchg
adc
in
sbb
movsb
and
jnp
mov
outsl
jmp
xchg
adc
mov
int
aam
dec
jmp
sbb
int3
dec
fstpt
dec
adc
add
cmc
jg
mov
sub
push
push
xchg
or
je
mull
icebp
or
je
out
dec
jne
jp
in
das
add
add
jo
in
bound
inc
cwtl
add
add
jns
inc
xor
int
push
inc
add
aad
pop
sub
lahf
out
fadds
mov
ret
imul
push
in
mov
cltd
hlt
outsb
cld
fwait
jbe
or
imulb
fwait
jbe
jne
bound
into
test
and
add
popf
or
ljmp
stc
mov
lea
inc
xlat
mov
enter
fs
inc
loope
lock
bound
in
mov
ret
lds
jmp
pop
fimull
fidivl
jecxz
push
in
dec
lret
pop
ds
orl
stc
or
test
aam
sub
repz
xchg
call
jo
loopne
jecxz
jne
out
ljmp
test
lods
outsb
insb
or
mov
mov
dec
mov
mov
fstpt
and
fmuls
fsubrs
xchg
or
in
mov
mov
movsb
push
ljmp
imul
or
adc
mov
cmp
ss
or
sbb
ret
push
lds
jmp
sbb
mov
js
push
inc
mov
and
pusha
in
sbb
or
xor
aad
add
cmp
test
adc
inc
push
inc
add
push
mov
xor
ret
pop
and
ret
and
push
addr16
bound
fnstcw
mov
or
jge
mov
xchg
je
xchg
add
sahf
ja
inc
aad
dec
mov
subl
inc
and
and
add
test
lahf
punpckhdq
mov
adc
jle
jns
jmp
sub
dec
rcrb
pop
out
push
xchg
mov
mov
mov
outsb
cld
fwait
jbe
push
imul
dec
cmp
ss
mov
cmpl
and
add
aam
sub
inc
and
cmp
into
leave
dec
fidivrs
push
aaa
ret
adc
mov
loopw
pop
loop
mov
lods
lret
inc
movsb
test
test
lock
mov
mov
filds
notl
lret
mov
sbb
push
rcll
sub
jbe
cmpl
sbb
out
jg
jmp
xchg
outsb
mov
pop
jp
jge
adc
sti
outsb
cld
fwait
jbe
sub
and
mov
nop
arpl
notl
add
cmp
xor
mov
lahf
add
pop
out
adc
xor
and
repnz
lahf
push
in
adc
cmp
cmpsb
xor
scas
pop
mov
mov
xor
push
xchg
repz
mov
mov
imul
insl
in
clc
jp
jp
out
sti
sahf
insl
lea
lock
xorb
lock
bound
lret
sub
arpl
cmc
sbb
mov
add
jg
mov
loop
clc
lahf
push
cmp
xchg
sbb
cmp
cmp
cld
xchg
cmc
add
test
rcrl
in
jmp
jge
scas
cmp
pop
int
and
aaa
lahf
xchg
xor
xchg
lock
add
adc
and
xor
jge
inc
add
aad
and
lahf
test
mov
out
pop
ret
xor
cmpsl
or
or
jae
fisttpll
out
outsb
stc
imul
xor
pop
push
add
data16
decl
add
sahf
outsl
rorb
mov
std
test
popa
addr16
adc
and
add
inc
add
ljmp
popa
push
add
cmp
decl
mov
jle
mov
cltd
and
pop
push
add
sbb
in
mov
out
je
add
or
shrb
add
add
jns
jnp
in
inc
inc
fimuls
push
dec
repz
cmc
je
xchg
push
call
pop
cli
push
fisttpl
sbb
shll
mov
insl
push
add
std
dec
push
ret
cmpsb
push
mov
lods
cmp
mov
push
call
mov
movsb
ret
xlat
scas
sub
jp
jp
scas
and
jg
add
mov
std
pushl
popa
xchg
or
js
add
jnp
std
jmp
lock
bound
inc
jmp
cwtl
jnp
add
gs
std
pushl
push
push
lret
sti
push
jo
loop
enter
inc
mov
fs
add
inc
std
jns
gs
sbb
test
pop
test
aam
into
test
ret
mov
call
sbb
std
incl
add
adc
std
mov
rorb
iret
pop
int
addr16
pop
enter
push
add
icebp
std
incl
dec
sub
fstpt
or
jo
decb
push
call
add
and
push
nop
inc
push
push
call
insl
push
call
xor
jmp
out
jo
or
repnz
call
xchg
jne
cld
call
pop
cmp
imul
int
mov
inc
mov
add
clc
xchg
push
call
push
enter
popa
clc
sub
je
lea
jmp
lret
push
les
icebp
nop
arpl
sbb
and
mov
pushf
add
cmp
dec
mov
lods
inc
xchg
cwtl
mov
and
or
inc
add
mov
mov
mov
pop
sti
scas
fstl
cmp
inc
inc
mov
xchg
mov
movsl
mov
cmp
cmp
ljmp
xlat
and
js
insb
or
out
cs
aas
pop
test
cmp
decl
cwtl
push
cld
pushl
jmp
je
add
push
cmp
das
dec
mov
in
pop
fstl
mov
add
push
jns
mov
fcomps
add
ret
add
sti
ret
dec
out
insb
in
sbb
add
adc
in
sbb
adc
mov
cld
lcall
lock
addr16
push
daa
jmp
lods
daa
mov
and
dec
fisttps
enter
pop
lods
lds
scas
pop
cld
daa
jmp
dec
into
jmp
in
in
cld
jmp
push
std
cmp
test
pop
test
sbb
pusha
push
cmpsl
addl
cld
call
push
xor
daa
fimull
movsb
push
repnz
jl
jmp
insb
stos
popf
outsl
jmp
repz
ret
pop
leave
test
lock
fisttps
fstps
sbb
sub
jmp
sbbl
cmpsl
cmp
popa
icebp
nop
arpl
pusha
mov
cs
out
jmp
ds
xor
and
in
insl
std
test
movl
cmp
jmp
lcall
out
jl
notb
movsl
and
fstpl
test
mov
lret
lahf
add
jno
cld
jmp
jp
in
or
add
sub
mov
dec
mov
cmp
mov
pushf
xor
cli
jg
lds
jmp
imul
or
xchg
jmp
jmp
cld
jnp
mov
push
fimuls
add
add
adc
mov
add
push
adc
xor
fadds
or
inc
add
mov
sti
sahf
mov
adc
jmp
jmp
jecxz
std
test
aas
mov
inc
mov
and
orl
lcall
es
enter
cld
push
jmp
mov
faddl
mov
cs
and
push
nop
mov
loopne
cld
incl
mov
pop
ds
jmp
inc
inc
and
cmp
sub
arpl
xchg
gs
dec
fistpll
cld
adc
pop
ds
jmp
dec
xlat
inc
and
cs
mov
lds
iret
lods
xor
int
xorl
inc
and
aaa
ds
push
jecxz
test
cld
decl
jmp
inc
jge
xor
repnz
lods
mov
in
mov
fwait
adc
jnp
je
out
pop
jmp
ss
jmp
push
aaa
ret
jmp
aas
mov
pushl
les
cld
fistpll
test
movsb
es
cs
mov
and
cmc
and
cmp
dec
mov
cmp
popa
test
ljmp
lahf
xor
sti
dec
out
imul
out
mov
dec
fnstcw
int
mov
add
xor
inc
int
push
inc
add
movb
jns
ret
mov
and
dec
sahf
xor
cwtl
aaa
cld
call
cld
lcall
int
fistpll
and
pop
rcrb
scas
pop
mov
jmp
gs
shlb
jmp
popl
std
or
sbb
mov
shr
lock
bound
cld
pushl
sbb
sub
incl
sbb
imul
clc
adc
pop
ds
loope
loope
jae
outsb
jmp
imul
pop
test
jmp
cli
imul
mov
xchg
add
lock
sbb
fstps
shll
inc
push
shll
push
mov
inc
mov
pop
push
xor
retw
dec
cld
pushl
jmp
adc
adc
and
imul
insl
faddl
dec
adc
dec
mov
xor
cld
incl
cld
call
jmp
pandn
add
fiaddl
fidivrs
test
aam
in
jg
mov
addr16
call
shlb
jmp
lcall
adc
gs
fisttpl
fnstsw
xchg
mov
dec
ss
incl
jmp
mov
sahf
stc
or
sub
cmp
sub
insl
add
xchg
and
add
sbb
xor
lahf
ret
dec
sti
mov
out
out
adc
dec
fdivrl
test
pop
fldl2t
push
cld
ljmp
jp
in
dec
es
push
jecxz
push
in
xor
inc
int
and
xor
mov
inc
inc
cld
decl
fs
jmp
adc
ds
inc
mov
cmp
mov
bound
shr
xor
jmp
jae
mov
ret
push
lds
mov
and
int3
pop
enter
adc
push
or
jmp
arpl
jge
cld
pushl
movsl
xor
jb
xchg
xchg
and
mov
lahf
punpckhdq
pop
jmp
call
pusha
inc
cld
decl
inc
and
rorw
mov
mov
jmp
int
lret
jecxz
push
shlb
hlt
pop
mov
and
xor
push
call
sahf
add
inc
adc
fs
jmp
or
fucompp
sbb
cld
ljmp
lea
mov
js
push
cwtl
sbb
es
cs
sub
cld
incl
sub
dec
jmp
aaa
mov
inc
mov
dec
js
fucomip
lret
xor
incl
mov
cld
inc
inc
aad
dec
lods
pop
fisttpll
out
enter
push
mov
mov
pushl
xchg
testb
mov
cs
jmp
xor
jmp
sbb
or
adcl
test
jne
mov
pop
jo
add
cmp
inc
and
out
sub
lahf
inc
ret
xor
ret
adc
idivl
mov
or
xor
xor
scas
inc
das
inc
add
cmp
mov
and
les
pop
sti
or
sbb
fwait
jmp
sahf
jmp
jmp
les
mov
jecxz
jne
xor
aaa
push
mov
cmpsb
push
mov
add
xchg
lods
and
insb
movl
add
out
imul
pop
cmp
jle
add
std
or
mov
test
mov
jmp
dec
mov
jmp
jb
out
sub
stc
cwtl
imul
adc
nop
or
in
mov
aas
and
pushl
arpl
cmc
inc
into
jmp
dec
repz
cmc
je
adcl
pop
int
addr16
cmp
xor
jmp
push
les
lcall
sub
add
sub
cli
popf
insb
test
je
lea
sub
xchg
pop
bound
outsb
sub
lock
bound
cld
jmp
push
fisttpll
out
cwtl
adc
add
std
or
popa
pop
movsb
dec
outsb
jbe
inc
sub
inc
cld
jmp
daa
and
cld
jmp
pop
ljmp
push
test
mov
jle
mov
jmp
fdiv
jmp
jmp
mov
mov
mov
inc
mov
outsl
std
insl
hlt
pop
mov
xchg
jecxz
fucomi
mov
sbb
dec
fidivrs
and
xchg
cmp
fmuls
push
mov
mov
xchg
gs
mov
xchg
cli
add
call
dec
fistpll
and
and
jmp
jmp
and
push
lds
cmp
push
xchg
repz
cmpsl
scas
xor
add
add
push
mov
and
les
lahf
decl
sti
mov
add
jmp
repz
scas
jmp
clc
pop
enter
jnp
dec
sub
pop
push
test
jge
pop
fdivrl
rcrl
jmp
push
inc
and
cmp
pusha
notb
js
ljmp
xchg
out
pop
pusha
jmp
sbb
or
jns
pop
xchg
adc
fs
adc
push
movsb
cs
mov
cmp
jns
or
jge
inc
add
aad
sti
mov
sub
mov
mov
add
dec
xor
mov
push
fwait
or
cmp
or
jmp
stos
cmp
popa
dec
lret
pop
ds
inc
enter
sub
jbe
dec
or
jmp
les
mov
out
jmp
ljmp
cmpsb
sub
sbb
mov
cmpsl
xor
int
leave
pop
call
jmp
xor
push
xchg
xchg
jmp
ds
cmp
mov
mov
jmp
add
test
add
cmp
xor
lods
sti
sub
lahf
out
mov
mov
xor
int3
pop
leave
test
mov
mov
out
xor
jmp
je
lea
aad
sub
jp
xchg
or
insl
cmpsl
and
ds
jmp
iret
push
lret
ljmp
mov
mov
popf
dec
stos
mov
add
add
xor
mov
add
imul
sahf
mov
add
jmp
aam
fdivrs
clc
cmp
call
lea
outsl
lcall
notb
sub
cmp
pushl
xchg
add
push
or
inc
ret
ret
rclb
pushl
jmp
jmp
lret
mov
push
aaa
ret
adcb
subb
add
movsl
jmp
pop
jmp
push
jmp
push
aad
sub
cmp
es
int
aad
push
pushf
sti
push
hlt
lret
aaa
jmp
and
scas
and
repz
cmc
sbb
inc
movsb
popa
lods
test
std
xor
call
pop
int
xchg
outsl
or
out
orl
fisttps
and
add
xchg
popa
mov
inc
push
inc
add
les
lahf
mov
out
sahf
add
pop
out
imul
out
fildl
cld
lcall
out
xor
decl
fnstsw
cld
mov
shrl
xor
xlat
mov
mov
jmp
cld
js
mov
sbb
incl
clc
inc
rolb
sarb
jmp
in
mov
shrl
fbld
pop
and
dec
pop
lret
scas
pop
in
mov
jmp
jo
jle
call
dec
mov
adc
dec
mov
mov
cmpsb
jmp
sbb
es
jp
dec
sub
pop
movsl
out
or
decl
inc
sub
ljmp
mov
jg
or
dec
sahf
in
add
inc
cld
jmp
push
fisttpl
fnstsw
cmc
adc
pop
cmp
xor
cmp
jmp
scas
das
mov
cltd
out
jmp
xchg
adc
lods
cmp
pop
sbb
ljmp
movsb
cmp
dec
add
xor
lea
cmc
sbb
cld
mov
jmp
xchg
push
mov
es
addr16
jbe
mov
pop
xchg
add
js
fwait
pop
stos
jmp
dec
ret
ret
repz
cmc
sbb
daa
mov
dec
mov
loop
cld
push
pusha
notb
add
adc
sub
xor
inc
sub
xor
cld
pushl
cmpsb
xor
scas
or
push
leave
pop
cmp
jg
mov
jmp
cmp
mov
xchg
adc
mov
xor
dec
xor
add
add
dec
and
xor
adc
xor
out
imul
sti
mov
sub
pop
xor
decl
inc
and
imul
pop
push
xor
jns
fs
jns
cmp
add
cld
ljmp
mov
jmp
fnstsw
mov
dec
mov
lods
pop
mov
leave
je
inc
push
cld
jl
xchg
cmc
add
jno
add
adc
push
les
mov
cld
call
inc
sub
cmp
mov
sbb
ficoms
cld
ljmp
inc
pop
jmp
lods
insl
push
jmp
jmp
jmp
out
jecxz
jne
and
mov
shll
mov
repz
pushl
cmp
call
out
jg
cld
lcall
nop
push
popa
nop
jle
call
ja
outsb
or
sbb
rcl
test
and
add
cmp
and
lods
sti
lods
movsb
inc
add
adc
mov
mov
sahf
fcoms
pop
mov
jae
xchg
out
add
add
test
inc
int
push
inc
add
movsb
inc
add
out
mov
ret
mov
loopne
loopne
jb
vucomisd
jmp
jbe
jnp
in
push
fisttpl
mov
and
jno
dec
gs
test
add
cmp
lods
test
sub
lahf
pushl
xor
out
imul
sahf
mov
in
iret
xor
push
xor
jmp
cmc
popa
icebp
nop
arpl
sub
stos
cmp
inc
lret
fildl
add
cmp
sbb
xchg
test
inc
add
adc
ret
add
dec
or
add
push
lds
arpl
cmc
add
jnp
in
pop
inc
fisttps
jmp
gs
xchg
cmc
add
and
or
adc
xchg
repnz
cld
jmp
pop
lds
iret
jp
sub
sub
lds
fdivrs
jp
dec
sub
jmp
lcall
fs
aaa
cmpsl
ret
cltd
sbb
arpl
stos
pop
cld
fstps
stos
pop
xchg
mov
mov
movsl
int3
aas
aam
sub
lds
cli
sbb
decl
iret
ds
call
cld
aam
mov
mov
and
ja
arpl
orl
out
or
lcall
jmp
xchg
push
mov
orl
pop
aad
sub
xor
roll
add
cmp
adc
mov
xor
inc
add
add
and
ljmp
out
leave
or
call
dec
sub
cmp
hlt
push
cld
push
mov
fistps
orb
cld
jmp
loop
std
test
loopne
loopne
jb
add
pop
xlat
push
arpl
cld
mov
xchg
mulb
pushf
outsl
scas
pop
enter
sub
dec
sub
xor
inc
xor
add
cmp
push
adc
xor
push
inc
add
movsb
inc
add
mov
sahf
out
decl
insl
scas
dec
roll
add
cmp
popa
push
adc
mov
ds
add
add
and
out
out
mov
cmp
sbb
xor
lds
lahf
add
pop
out
out
adc
and
dec
lods
mov
cmp
xchg
adc
mov
movsb
inc
add
jmp
xor
out
out
inc
imul
jnp
cld
jmp
cmpsl
xor
jne
mov
out
adc
jne
pop
lret
scas
pop
in
pop
mov
pushl
sahf
clc
sub
or
decl
scas
xchg
inc
pushf
jmp
cmc
jmp
in
call
jmp
push
in
pop
mov
test
xor
xor
cmp
pop
std
insl
hlt
pop
andb
iret
dec
loope
icebp
nop
arpl
cld
incl
cmp
sub
xchg
add
ret
ret
sbb
jmp
divb
xorb
ret
push
lds
sahf
ja
push
cld
incl
pop
cmp
xor
jb
cmp
inc
into
pop
cmp
cmp
mov
cld
jmp
jae
xchg
call
std
cli
jmp
stos
and
jno
jmp
mov
ret
mov
cltd
jmp
jmp
leave
pop
leave
test
mov
xchg
add
addr16
shll
je
jnp
in
sub
xor
lods
jmp
and
sub
lds
sub
das
sub
mov
dec
fnstcw
pop
jmp
jae
jg
jmp
in
cld
lcall
mov
ret
ret
jmp
jmp
push
leave
pop
cmp
jbe
adc
xchg
add
sahf
sub
cmp
jmp
sahf
add
scas
aas
pop
test
jmp
ret
jmp
push
mull
icebp
js
lret
lret
mov
jg
insb
cmp
push
xor
mov
sti
in
jmp
test
inc
xchg
arpl
jmp
xor
pop
add
arpl
fwait
adc
decl
mov
jns
popa
sbb
xor
int
shlb
lret
inc
stc
cmc
mov
dec
sti
dec
inc
xlat
mov
lods
push
fisttpll
out
xor
aam
repz
lea
cld
pushl
mov
out
insl
loopne
in
jmp
lods
and
and
inc
shlb
or
decl
jae
in
roll
mov
mov
pop
int3
stos
shrw
sub
test
adc
outsl
sti
call
add
idiv
sti
jge
dec
jmp
jne
jmp
inc
fimull
fisubl
xor
sbb
xchg
les
leave
jp
fs
jmp
mov
out
mov
xchg
les
xchg
outsb
jmp
cli
jge
repz
cs
sbb
outsl
ds
push
je
lea
mov
inc
mov
ds
call
xchg
adc
mulb
pop
inc
movsl
mov
xchg
jmp
rcll
mov
fs
adc
dec
das
fidivl
xchg
lahf
jmp
stc
jno
xorb
jmp
pop
aam
sub
mov
cld
inc
dec
fdivrs
cmp
cld
jmp
lcall
or
adc
in
sbb
inc
mov
jmp
jmp
jmp
sbb
mov
incl
pop
aas
lret
stc
imul
mov
repz
mov
cld
push
addr16
jmp
mov
sarb
sbb
dec
lds
pop
lahf
dec
fdivl
in
push
jmp
ficoml
cmpsb
push
mov
adc
adcl
jecxz
mov
cld
incl
aad
ds
push
add
jmp
push
lret
jmp
aam
frstor
jg
and
xor
xchg
jmp
mov
out
pop
les
int3
jnp
fimull
fidivl
adcl
aam
cld
fidivrl
mov
jmp
fidivrs
popf
in
rcrl
mov
mov
cld
fistpl
test
mov
ljmp
push
mov
in
hlt
mov
adc
sti
ljmp
sbb
push
leave
dec
jmp
jmp
fs
adc
push
repz
mov
jns
pusha
pop
repnz
mov
std
or
push
jb
je
gs
dec
mov
jmp
mov
sarb
fildl
mov
xchg
je
insb
loop
je
mov
fldl2t
cmp
test
jge
js
mov
inc
mov
add
push
dec
jmp
sub
pop
jmp
mov
call
pop
jmp
pop
lea
mov
jns
dec
adc
lods
mov
jmp
jno
je
out
add
jns
mov
pop
lret
lret
jmp
je
jmp
loope
jmp
cli
push
je
lea
and
enter
mov
cld
ljmp
sub
cld
decl
or
and
aam
sub
pop
fwait
lret
jmp
jmp
test
jmp
mov
mov
add
std
or
lret
push
les
stos
int
mov
cld
sti
ljmp
xchg
fidivs
cmp
lcall
testl
imul
sbbb
sub
add
ds
ljmp
cmp
inc
mov
movsl
int3
aas
fnsave
add
push
cmp
fwait
test
jmp
jnp
insb
or
out
ficoml
mov
pusha
pop
repnz
daa
cli
mov
ficoms
add
cld
cmp
xchg
jmp
data16
jl
idivb
sbb
or
add
jp
push
cld
sbb
mov
xchg
and
mov
gs
pusha
loopne
cmp
sti
cmp
ss
cli
ret
cld
sub
add
lcall
loop
sbb
outsl
jmp
imul
cld
jmp
movsl
movsb
ret
ds
xchg
add
movsb
ret
ds
outsl
ljmp
stc
in
jmp
jmp
jns
jl
negb
pop
int3
stos
data16
xchg
testb
cmpsb
fucomp
pop
add
fiadds
dec
mov
adc
subb
mov
jmp
mov
mov
sbb
pop
ljmp
in
lret
mov
and
cld
mov
jmp
push
leave
pop
cmp
jle
adc
in
sbb
push
stos
cmp
sub
clc
outsb
or
sub
jmp
jmp
dec
mov
in
add
jmp
cmpsl
aaa
push
mov
add
adc
inc
mov
mov
fdivs
aas
cmp
int
cld
incl
fucom
add
ret
add
jmp
ds
sbb
pushf
pop
movsb
cs
jmp
out
loop
je
sub
imul
pop
loop
dec
sbb
rcll
mov
gs
sti
lcall
xchg
or
js
sub
add
imul
jmp
xchg
sbb
push
xchg
repz
out
mov
jle
jle
imul
pop
lods
jmp
mov
lock
pop
sbbb
out
sbb
dec
jle
jmp
cs
dec
jecxz
push
in
dec
rolb
shlb
imul
add
inc
popf
sub
mov
jb
cld
push
push
lahf
push
sbbb
ljmp
sarb
das
aas
cmp
sti
incl
or
faddl
mov
jmp
lcall
pop
inc
xor
jmp
mov
cld
in
dec
frstor
sub
cld
dec
push
ret
cmpsb
push
xchg
jp
jp
jno
addr16
push
dec
roll
aad
inc
jp
jmp
mov
sahf
stc
or
jg
outsb
or
sbb
jo
loop
js
xchg
testb
cld
incl
mov
jg
push
lock
pop
aam
sub
mov
decl
xchg
inc
cld
dec
inc
shlb
mov
and
dec
push
xor
sub
inc
lods
cltd
shr
jecxz
cld
inc
dec
jmp
std
jo
xorl
push
jmp
fwait
setg
or
cltd
or
sbb
scas
lods
jmp
push
les
cmp
mov
jmp
insb
cmp
sub
incl
inc
and
cmp
and
js
jae
cmp
jmp
lds
cld
jmp
xor
adc
jmp
fadds
mov
negl
push
cmp
setbe
sahf
and
sub
les
jmp
sub
add
fmuls
jmp
fiadds
mov
clc
sbbb
and
gs
outsb
or
dec
in
dec
frstor
gs
sti
decl
mov
sbb
jo
jmp
in
enter
jmp
ret
mov
xchg
ja
push
cld
sbb
xchg
add
sahf
jg
cmp
sub
clc
sti
ljmp
fdiv
jbe
cmpl
inc
shll
mov
jmp
jmp
push
fisttps
flds
js
out
gs
pushf
outsl
cmpsb
cmp
cmpsl
jmp
idivb
je
imul
push
pop
jp
jne
loop
pop
loop
out
jmp
jb
insl
hlt
pop
icebp
xchg
fcoms
sti
jmp
sub
dec
fimull
fisubrl
aaa
movsl
xor
enter
or
nop
idiv
ljmp
add
imul
insl
test
jbe
cmpl
jle
mov
cmp
aas
pop
jmp
movsl
adc
jmp
xchg
xchg
jmp
sbb
in
jge
testl
cmpsl
mov
mov
cmpsb
jmp
xchg
out
es
aad
xor
cld
jmp
aam
ret
cmpsb
push
in
scas
xor
inc
aad
dec
cli
fldl
mov
out
jno
cld
idiv
lcall
subb
jmp
add
dec
ret
rcl
jbe
cmpl
test
or
cmp
sub
adc
jl
cld
incl
pop
ds
jnp
sub
jmp
add
lea
jmp
mov
shl
in
jg
sahf
sbb
adcl
test
jmp
rorl
dec
movsl
cmp
das
dec
mov
insb
lahf
jg
fstpt
sar
cld
jmp
sub
and
jmp
push
jo
loop
cld
jnp
mov
fldl2t
in
sti
pushl
mov
cld
call
dec
sub
cmp
mov
ficoml
mov
and
out
jmp
leave
pop
leave
test
mov
fimuls
adc
dec
jmp
adcl
loopne
mov
and
cltd
or
jnp
mov
inc
mov
adc
jnp
icebp
xor
call
push
aaa
ret
or
pop
iret
stos
pop
xchg
xchg
or
out
sbb
jmp
mov
cld
sti
fiadds
mov
out
mov
xlat
dec
fistpll
bound
jmp
pop
testb
jecxz
ret
jmp
in
out
mov
push
into
pop
cmp
popa
sbb
inc
xchg
xor
jmp
or
xchg
adc
das
loopne
fisttpll
mov
jmp
dec
sarl
jmp
jns
cld
pushl
fidivs
mov
dec
mov
loope
stc
mov
movsl
cmpsl
sbb
jmp
jmp
daa
mov
rcrb
scas
pop
mov
aaa
cmpsl
ret
fcoml
lods
pop
cli
cmp
cld
pushl
jmp
jmp
addr16
jge
idivl
jae
jmp
mov
rcl
pop
repnz
andb
add
pop
xlat
leave
adc
pop
jmp
sub
push
cld
out
fsubr
rcll
ljmp
jnp
in
add
dec
fstpt
cmpsb
shll
sub
sub
jmp
push
push
int
jae
jmp
lods
cmp
mov
xchg
jmp
es
inc
mov
add
js
pop
jp
jg
mov
js
xor
push
cld
mov
push
cld
lcall
mov
jle
jp
jmp
push
in
pop
mov
mov
or
in
stos
jmp
jmp
jmp
jge
rcrb
shlb
les
pushf
out
jmp
mov
mov
and
nop
push
popa
nop
pop
arpl
ja
loope
and
sbb
jmp
jno
iret
xchg
test
cld
jmp
lods
sub
mov
cltd
clc
or
push
jns
jmp
fdivr
xor
mov
pushl
rcrb
mov
aam
cld
jmp
das
jmp
fs
adc
add
dec
fdivrl
in
je
insb
rcrb
sub
clc
imul
and
cmp
cld
jo
sub
cld
jmp
add
xor
les
sub
jmp
sbb
stc
jnp
mov
mov
xchg
lock
inc
inc
and
ss
pop
jmp
pop
mov
mov
cld
inc
push
les
xchg
lock
aad
xchg
sub
jmp
cmp
adc
jmp
mov
mov
and
xchg
add
xchg
jb
sub
out
jmp
daa
idivl
jmp
in
jne
mov
fwait
add
xchg
mov
mov
ret
cmp
push
cmp
jmp
stos
xor
int
xchg
sbb
mov
jmp
movsl
aas
scas
lret
sti
data16
xchg
outsb
jle
mov
fldcw
scas
mov
jns
push
lock
call
push
shlb
dec
arpl
jmp
aas
js
rcr
sub
mov
sti
push
mov
jmp
mov
cmpsl
ret
fcompl
test
push
sbb
leave
lret
mov
sti
push
jne
mov
in
mov
jmp
jmp
and
inc
mov
cwtl
decl
in
and
ss
jmp
lods
fisubrs
jnp
mov
ror
dec
fstpt
in
jle
push
lea
jmp
mov
nop
testl
pop
ljmp
jmp
xchg
cltd
clc
or
cld
loope
sub
jp
ljmp
incl
pop
cmp
and
xchg
or
je
jmp
sbb
in
adcl
test
inc
aad
dec
mov
ret
lock
mov
adc
jmp
pop
add
cld
incl
cmp
rclb
mov
push
shll
pop
loop
fsubrp
cmpl
dec
roll
shll
jb
ret
xchg
ljmp
mov
inc
mov
loop
jmp
mov
test
mov
sbb
mov
sahf
xchg
call
cmp
popa
fildl
mov
stc
push
cmc
gs
jp
xor
int
mov
cld
call
xor
pop
cs
cmp
mov
test
in
dec
mov
cld
lcall
push
in
push
shr
xchg
decl
inc
and
lods
lret
inc
cmpsb
mov
pop
ds
pop
xchg
jl
jmp
cld
ficomps
test
mov
push
jmp
pop
aam
popa
jmp
lds
movsb
push
mov
mov
inc
enter
add
xchg
jmp
insb
loop
je
xchg
sahf
stc
or
xor
pop
cltd
addr16
call
test
jge
addr16
push
insl
loopne
adc
adc
jo
xorl
fsubrs
lret
test
call
pop
ds
sub
sbb
imul
sbb
pop
jns
call
pop
add
loopne
mov
cmpsb
xor
scas
inc
es
inc
mov
das
mov
out
jmp
mov
lret
xor
pushl
jmp
jp
jp
aad
ret
cmpsb
push
cli
mov
xchg
ja
sbb
vmwrite
jmp
std
xor
cld
jmp
cld
call
lea
push
xchg
repz
mov
sub
orb
cs
call
movsb
movsb
push
xchg
repz
mov
mov
jle
or
inc
repnz
std
jmp
mov
xchg
bnd
xorb
out
adc
push
js
outsl
or
in
mov
test
jmp
adc
add
jnp
fmuls
fdivrs
jp
insb
or
call
je
jmp
mov
jmp
fsubs
xchg
mov
inc
testb
movsb
ret
ds
test
jmp
leave
pop
rolb
jmp
mov
test
jmp
lea
std
or
jecxz
jecxz
jne
cmp
or
adc
jmp
inc
xor
jmp
gs
jmp
outsl
loop
pop
loop
mov
xlat
push
xchg
add
mov
xchg
mov
inc
test
jmp
mov
inc
mov
jns
jge
notl
push
into
pop
mov
test
push
lock
bound
dec
mov
rsm
adcl
mov
jmp
jmp
jge
jne
out
sbb
push
shlb
push
mov
fisubrl
mov
cmp
inc
fimull
fidivl
pop
int3
stos
rcr
sub
cmp
int
mov
xchg
testb
cld
jmp
jmp
in
aam
dec
leave
push
stos
cmp
sub
fmuls
fmuls
jecxz
push
in
pusha
jmp
pop
jmp
rcll
mov
leave
test
mov
pop
hlt
pop
loope
out
mov
cld
call
cld
ljmp
fimull
fidivl
loop
pop
loop
js
pusha
pop
repnz
jmp
xchg
sbb
sub
fwait
adc
inc
fidivrl
xor
fucomi
sub
aam
xor
cs
mov
fsubrs
shl
adc
jmp
jns
js
ljmp
out
imul
add
mov
cld
mov
testl
outsb
ljmp
stc
in
adc
mov
stos
jmp
pop
push
hlt
jmp
lret
stos
data16
mov
icebp
popa
add
add
inc
push
cmp
jb
jno
cld
jmp
mov
adc
jno
cld
pushl
addl
adc
pop
cmp
or
xchg
arpl
push
sub
pushl
jmp
ljmp
stc
scas
and
je
lea
rcll
inc
lods
insb
push
jmp
jmp
xchg
adc
in
sbb
xchg
pop
xchg
adc
push
xlat
inc
and
ds
xor
inc
pop
sbb
jmp
sbb
mov
inc
mov
pop
fdivl
in
ficomps
test
mov
lds
cld
ljmp
jo
loop
repz
mov
ljmp
cld
decl
xchg
jb
sub
js
ljmp
outsb
or
push
in
pop
jecxz
fadds
imul
pop
xor
push
lds
test
sahf
stc
or
cmp
inc
jmp
iret
arpl
xchg
gs
push
xchg
jmp
repnz
pushl
jmp
ret
push
shll
jnp
push
jl
js
ljmp
or
jno
mov
pop
int3
stos
data16
dec
das
fidivrl
lahf
punpckhdq
adc
jmp
lcall
fucomp
incb
cld
jmp
sbb
sbb
ljmp
mov
inc
mov
insb
repnz
pop
repnz
xor
mov
mov
cwtl
xor
mov
cld
pushl
pop
jp
cmp
cld
cmp
xor
jmp
sbbb
daa
mov
and
les
xlat
inc
and
or
jne
in
jmp
les
mov
cmp
mov
adc
or
jns
cmpsb
xor
scas
inc
add
jle
out
cmp
addl
adc
pop
jmp
mov
mov
cld
call
dec
sub
inc
imul
mov
cld
call
jl
js
cld
jmp
ret
adc
lods
es
mov
jo
add
inc
jne
call
ret
imul
dec
fdivrl
xchg
adc
test
mov
cs
cmpsl
ret
gs
lahf
xor
cld
jmp
xor
fisttps
fsts
jne
jne
out
add
pop
xor
push
add
jmp
jmp
cld
pushl
jmp
adcl
dec
fdivl
in
int3
arpl
xchg
mov
enter
jmp
lcall
and
es
jmp
mov
shrb
test
cli
add
incl
mov
cld
fcoms
cmpsb
push
hlt
scas
xor
int
int
adc
lret
lret
adc
incl
int3
add
jmp
lcall
cld
jmp
push
lds
dec
sub
dec
push
imul
dec
mov
cmp
jmp
rorl
movsb
push
cld
mov
hlt
mov
xchg
adc
lret
jmp
jmp
fcomps
scas
pop
mov
cmpsl
aaa
push
mov
es
adc
jmp
lods
sub
lds
gs
adc
or
pop
aas
lret
ret
ret
fxch
inc
jmp
jp
jp
scas
sub
pop
xchg
repnz
push
mov
cld
incl
cld
ljmp
int3
dec
fistpll
pop
ds
xchg
jmp
je
outsb
or
adc
xchg
add
cmp
daa
mov
dec
mov
stos
cld
decl
adc
and
jo
sbb
in
jmp
xlat
jmp
outsb
ljmp
stc
in
insl
ljmp
stc
out
jno
jp
in
dec
leave
push
shll
mov
sti
incl
inc
cld
js
jno
jecxz
mov
in
sbb
add
sbb
xchg
pop
xchg
push
jmp
jle
jmp
test
mov
jmp
pop
push
xor
rcrw
shrw
xchg
movsl
adc
cmpsl
int
jmp
rorl
mov
mov
outsb
cld
fwait
jbe
aaa
ss
lds
mov
icebp
nop
arpl
popa
mov
jmp
pop
fimull
fidivrl
cmp
enter
push
mov
rolb
sarb
push
add
jb
incl
mov
inc
adc
jmp
imul
adc
or
mov
lods
cld
jmp
aam
repnz
fs
mov
lods
lret
inc
test
mov
gs
jo
dec
aaa
mov
ds
jmp
mov
push
aaa
ret
repz
cmc
pop
fwait
setg
or
icebp
cmpl
xor
push
sbbl
cld
jmp
xor
or
repnz
pop
repnz
in
mov
sub
sbb
jmp
in
jns
mov
outsb
loop
jmp
jns
arpl
cmc
sbb
mov
es
push
addr16
dec
mov
ss
jmp
push
enter
popa
test
cmpsl
ret
inc
fmuls
fdivs
hlt
push
cld
dec
fucomip
cmpsl
mov
aam
mov
imul
insl
fsubrl
cmc
or
jmp
dec
out
jl
divb
jns
mov
rcll
mov
mov
stos
cld
jmp
adc
js
cmp
fisttps
flds
adc
jmp
js
mov
xlat
lds
inc
shr
pop
stos
cld
lcall
dec
das
fidivrl
js
icebp
jmp
idiv
sub
cld
fistpl
xchg
addr16
push
shlb
xchg
xchg
push
mov
andl
fisubrl
mov
sbb
adc
sub
in
ljmp
cmpsb
xor
scas
dec
scas
daa
mov
and
sub
sbb
jmp
adc
cli
jmp
movsb
movsb
ret
ds
out
ljmp
jmp
xor
or
pop
lret
scas
pop
cwtl
cmpsb
xor
and
lea
jmp
addr16
aas
mov
cld
call
push
xor
sub
popa
icebp
nop
arpl
loopne
aaa
mov
inc
mov
mov
dec
lahf
cld
pushl
mov
inc
mov
dec
roll
sarl
popf
or
jmp
jmp
push
sbb
and
jmp
or
mull
icebp
dec
stos
xor
lea
xchg
adc
cld
lcall
outsb
or
jg
sarb
jmp
out
push
ret
cmpsb
push
aam
fisttpl
or
cmp
push
lret
jmp
aas
mov
mov
scas
out
push
add
popa
mov
stos
cld
mov
lods
aad
sahf
test
fdivrl
dec
mov
mov
test
push
cmp
push
inc
aam
dec
test
stos
scas
daa
mov
and
lock
rcrb
sub
gs
pushf
outsl
popa
repz
cmc
sbb
lret
ret
jno
fs
pushl
mov
pop
out
jmp
jmp
pop
int
and
and
mov
jmp
mov
loopne
jmp
aaa
adc
decl
or
js
out
jg
jmp
mov
pop
jg
jmp
push
cld
pop
fadds
mov
mov
inc
shlb
notb
cmp
xchg
xchg
loopne
jmp
push
ljmp
pushl
lahf
int
lret
jecxz
jnp
mov
imull
cltd
push
inc
jmp
mov
mov
mov
inc
mov
dec
jmp
aaa
inc
push
jmp
push
mulb
jns
roll
rcll
lock
and
adc
jmp
jmp
mov
lahf
cli
or
sbb
fcomps
stos
data16
cmp
sub
pop
fs
outsb
cld
jmp
call
lcall
xchg
sbb
std
insl
hlt
pop
mov
xchg
cld
inc
jmp
jmp
jmp
cmp
sub
ja
jl
jne
push
push
shlb
cli
or
mov
mov
cld
lcall
dec
sub
sahf
stc
or
inc
fisttpl
fnsave
mov
mov
jmp
shr
inc
cld
call
cmpsl
cld
jmp
jg
dec
jmp
pop
int
and
push
int3
pop
enter
cmc
lock
bound
pop
in
js
repz
cld
ljmp
ret
push
lds
es
mov
sub
or
mov
in
cmp
sbb
xor
pop
int
addr16
mov
in
sbb
icebp
jae
xchg
aam
fistpll
and
xor
mov
gs
adc
push
fisttpl
fnstsw
imul
movsl
int3
aas
aam
les
int3
sub
push
les
dec
sub
xor
popa
add
adc
andl
sbb
and
mov
jg
fs
fisttpl
fnstsw
pop
rolb
shlb
push
fimuls
rdmsr
mov
mov
pop
jp
bound
pop
ds
insb
add
rclb
and
stos
cmp
inc
lea
rolb
mov
stc
cwtl
imul
ss
scas
pop
repz
fstpt
jp
in
inc
push
dec
sbb
setb
addr16
and
jle
mov
mov
fmull
mov
stos
into
cmp
xchg
test
mov
inc
mov
aad
shll
and
xor
stos
cmp
inc
pop
fmuls
fdivs
cwtl
adc
xor
shrb
mov
ljmp
je
out
and
adc
dec
fistpll
pop
cmp
xor
jl
push
pop
std
insl
std
test
sub
xor
dec
sub
jle
pop
enter
push
mov
jns
push
pop
lret
scas
pop
mov
ja
xorb
test
push
ret
cmpsb
push
mov
popa
fxam
adcl
test
xchg
or
insl
icebp
popa
add
pop
xchg
adc
push
xchg
repz
cmpsl
mov
mov
push
xor
dec
xchg
xor
pop
xchg
repnz
lods
sub
mov
sahf
stc
or
push
fisttpl
fnstsw
jno
gs
adc
cli
push
or
stc
imul
in
jg
orb
cli
or
bound
mov
cmp
xchg
add
jo
cwtl
push
imul
inc
fidivrl
pop
cmp
cmp
pop
jae
jmp
mov
inc
mov
das
mov
cmpsb
xor
rolb
sarb
jb
je
out
push
pushf
setg
or
jecxz
stos
xor
mov
dec
mov
add
inc
aam
fdivrs
inc
and
cmp
add
mov
jns
pop
cld
xchg
cmc
add
jg
xchg
testb
xchg
jb
mov
arpl
jo
loop
aaa
mov
inc
mov
sub
dec
ja
popa
add
pop
lret
dec
fdivrl
sbb
imul
orb
stc
or
orb
clc
or
icebp
jge
je
popa
jbe
outsl
or
in
popa
icebp
nop
arpl
inc
mov
notl
jne
je
out
sbb
mov
xor
roll
aad
mov
fmull
dec
sub
push
mov
mov
mov
rcll
sbb
aas
ljmp
mov
flds
mov
jbe
loopne
je
jle
call
sbb
sbb
push
jmp
insb
into
pop
cmp
push
movsl
push
xchg
repz
mov
fwait
or
dec
fwait
sbb
or
in
cmc
lods
sub
lds
or
sbb
arpl
sahf
sbb
sbb
in
jge
notl
push
fdivl
in
fs
bound
sbb
mov
fwait
decb
arpl
or
out
xchg
cltd
clc
or
push
rclb
sub
jns
jmp
cmp
mov
cld
jae
jnp
in
or
inc
daa
sarb
cmpsl
xor
cs
xchg
pop
bound
mov
cmp
push
or
out
icebp
nop
arpl
add
mov
lods
lret
inc
loope
lock
cmp
adcl
test
hlt
push
cld
sbb
movsb
cmp
dec
xchg
cwtl
decl
jecxz
adcl
test
jne
mov
arpl
add
add
adc
jmp
mull
icebp
sbb
mov
pop
iret
stos
pop
lea
mov
sbb
push
int
les
sub
jmp
ret
arpl
xchg
gs
adc
mov
in
adc
aas
in
dec
fdivrl
adc
mov
xchg
adc
mov
inc
mov
mov
ret
ficomps
xchg
xchg
pop
cmp
aas
jnp
xchg
cmc
add
popf
pop
sahf
sbb
int3
inc
and
add
xor
loope
adc
sub
sahf
or
cmpsb
dec
mov
xchg
repz
ljmp
pop
roll
sarl
adc
inc
rolb
sarb
push
lret
test
nop
aaa
popa
lock
xor
dec
fidivrs
pop
ds
js
bound
and
mov
cmpsl
aaa
push
mov
or
dec
jle
je
out
inc
push
lret
lret
in
sbb
mov
es
data16
push
pop
repnz
rorl
jg
jmp
or
orl
cmp
push
xchg
mov
jae
xchg
jae
imul
adc
add
adc
push
mulb
pop
orl
cli
or
lahf
adc
in
sbb
cmp
adc
cmpsb
mov
popa
test
mov
and
lahf
cmp
and
jns
add
movb
in
sti
sbb
mov
aad
fdivs
fadds
movsl
add
xor
add
mov
xor
ret
push
jns
aaa
cmp
sub
add
aaa
pushf
pop
lds
iret
jp
pop
xchg
repnz
lods
sub
push
lds
cwtl
imul
out
pushf
and
mov
jns
insb
or
out
and
call
lcall
lods
and
xchg
sbb
add
std
or
popf
adc
mov
les
mov
arpl
cmc
pop
test
test
push
testb
or
imul
shufps
pop
sahf
add
roll
dec
cmpsb
les
mov
ljmp
shlb
ficomps
mov
sbb
fdivl
jg
jmp
xchg
popa
fmuls
mov
pop
repnz
fs
push
ret
cmpsb
push
aam
dec
fistpll
repz
gs
mov
dec
roll
aad
iret
dec
fdivrl
mov
sbb
cmpsl
aaa
push
mov
fdivs
das
stos
cmp
dec
in
gs
pushf
outsl
lret
pop
and
push
push
fisttps
dec
fistpll
jno
jecxz
in
pusha
notb
fidivrl
inc
and
cmp
mov
lret
pop
ds
jg
jl
divb
cmpsl
inc
dec
mov
ffreep
push
mov
popa
add
add
jmp
loope
jae
jnp
jo
loop
imull
lcall
lock
dec
aam
sub
jge
testl
push
imul
insl
in
push
aad
sub
or
rolb
ss
dec
mov
mov
jle
call
lahf
push
ljmp
pop
mov
imul
cld
jne
mov
outsl
in
sbb
es
cld
fwait
jbe
mov
fwait
decb
pusha
xchg
jae
or
in
std
cmp
test
jp
jg
jmp
dec
popa
sub
pop
popf
or
and
daa
mov
and
daa
mov
inc
mov
pusha
cli
push
dec
fdivrs
xchg
adc
cli
inc
mov
mov
aad
sub
push
cmp
dec
fnstcw
test
push
cltd
pop
mov
dec
int
and
add
je
out
or
sbb
insl
pop
fdivl
in
enter
push
mov
sbb
adc
adc
mov
xchg
repnz
daa
out
xor
fcoms
mov
aaa
push
mov
out
sti
and
aas
pop
test
pushf
outsl
test
std
rclb
push
notl
push
aaa
ret
inc
and
cmp
out
jl
negb
pop
enter
jl
jg
jmp
adc
adc
lock
aam
insl
std
test
add
int
shll
adc
pop
cmp
fldt
add
std
or
add
cltd
sbb
rcll
daa
push
rolb
shlb
jno
add
adc
dec
fidivrs
popf
in
cmc
or
cwtl
and
in
sbb
sahf
stc
or
outsl
cmpsb
in
loop
je
cmp
ds
inc
mov
clc
je
lea
pop
int3
stos
xchg
pop
lret
lret
sbb
lahf
punpckhdq
fildll
jmp
clc
sbb
loopne
xchg
jb
addr16
xchg
add
ss
xchg
lcall
in
sbb
clts
mov
jg
arpl
roll
inc
and
cmp
mov
gs
popa
movsb
xor
int
fwait
push
les
cmp
dec
dec
fimull
fidivl
stos
lods
lret
inc
scas
dec
fimull
fidivrl
cltd
or
push
lret
pop
enter
fwait
add
repnz
pop
repnz
or
sub
aam
sub
jae
in
sbb
ss
dec
mov
cmp
cs
hlt
xchg
outsb
mov
pusha
pop
repnz
stos
cmp
dec
jmp
popf
add
imul
sahf
dec
lds
iret
push
inc
fidivrl
xor
scas
inc
aam
enter
or
adc
arpl
ret
mov
xchg
repnz
insb
loop
je
jnp
jle
call
xor
pop
movsb
lds
mov
sub
jge
je
insl
repz
xchg
outsb
leave
xor
or
sub
xchg
add
cmp
adc
sbb
pop
into
test
gs
push
adc
dec
in
jge
divl
add
and
inc
push
xor
sub
inc
shll
call
scas
cmp
mov
ss
inc
mov
scas
sub
fimull
fidivl
jnp
clc
jno
xorb
inc
shlb
jae
in
pop
rolb
shlb
dec
push
xor
sub
or
adc
or
dec
out
ljmp
pop
loop
in
ljmp
inc
sbb
jns
popa
mov
mov
inc
add
or
and
fisubl
inc
add
mov
adc
mov
and
adc
loop
pop
loop
and
mov
mov
mov
xchg
sub
inc
shll
push
xor
ja
rolb
sarb
cmpsb
xor
scas
sbb
cmpsl
inc
jmp
push
in
insb
dec
fstpt
pop
cmp
cs
dec
fnstcw
jle
call
jmp
pushf
sbb
push
aad
shll
fildll
lret
frstor
sub
mov
and
xchg
and
mov
mov
bnd
mov
call
mov
outsl
or
in
pop
iret
inc
shlb
sub
push
fimull
mov
sbb
pop
xchg
repnz
lret
xchg
xchg
pop
aas
lret
setg
or
mull
icebp
pop
add
movsl
lods
lret
inc
lock
leave
push
mov
std
test
mov
mov
mov
push
int
and
bound
movsb
cmp
sub
mov
push
mov
gs
inc
mov
sahf
push
mov
es
jg
insb
or
in
daa
mov
and
or
sbb
imul
mov
cs
mov
push
movsb
add
lods
cmp
add
jg
mov
insb
loope
adc
add
push
popa
nop
jns
mov
and
and
mov
bound
lods
pop
sti
dec
fistpl
sbbl
out
sbb
mov
cmp
repz
cmc
push
pop
rcll
xor
push
cld
dec
xchg
or
stos
cmp
adc
jb
add
cmp
out
jl
testb
in
je
add
mov
mov
xor
and
mov
out
sti
mov
mov
lods
adc
out
aad
fcoms
xchg
stc
adc
and
add
add
or
je
out
jge
inc
add
aad
add
inc
sahf
out
and
lods
sahf
fst
movsl
test
fst
movsl
lods
out
imul
ret
fsubs
fadds
movsl
add
adc
pop
add
adc
xor
out
lock
adc
lret
lcall
pop
cmp
jp
in
dec
xchg
and
pop
xchg
adc
adcl
out
testl
repz
out
dec
fstpt
cwtl
decl
loop
xchg
test
cmpsb
push
fisttpl
fnstsw
jno
cmp
jnp
xchg
testb
xchg
jbe
les
int3
and
stos
cmp
inc
dec
rcll
and
jg
jmp
hlt
pop
into
int3
dec
fstpt
lret
mov
pop
decl
out
out
adc
sbb
scas
aas
pop
test
sub
sub
pop
aas
lret
lret
pop
ds
and
fisttpl
fnsave
or
dec
lahf
or
add
push
test
push
test
fmuls
fdivs
movsl
xor
arpl
xchg
gs
add
es
int
and
jl
rolb
shlb
or
dec
fnstcw
inc
and
add
je
lds
iret
sub
imul
insl
mov
lods
and
pop
add
adc
popa
add
popa
ds
fcoml
mov
outsl
or
mov
adc
jmp
mov
stos
cmp
dec
pop
iret
stos
pop
test
movl
aas
mov
inc
mov
or
push
or
xor
add
jl
divb
cld
push
mov
rcrb
add
lods
xor
je
jge
testl
das
into
push
lds
lahf
sub
lock
lret
faddl
mov
clc
jb
inc
and
push
shrd
mov
jno
popa
add
and
push
mov
lods
and
push
rcll
cmpsl
push
mov
cmpsb
xor
scas
inc
das
test
pop
test
add
out
icebp
nop
arpl
icebp
sbb
jl
mov
fiadds
cmp
adc
xchg
popa
mov
inc
add
lahf
sub
mov
inc
add
sahf
and
imul
push
push
xor
cmp
mov
push
mov
es
sbb
inc
rolb
sarb
xchg
push
xchg
repz
out
xor
cmp
mov
mov
mov
jns
ds
or
and
adc
jo
xorl
ds
inc
fisttps
fsts
adc
test
lea
adc
dec
dec
roll
aad
pop
fdivl
in
call
lahf
mov
movsb
ret
mov
mov
repz
cs
cmp
or
rolb
rcrb
mov
test
mov
cmp
cmp
adcl
test
mov
dec
mov
imul
jae
xchg
dec
fisttpll
out
push
xchg
jb
gs
es
mov
jns
bound
ret
cmpsb
push
mov
movsl
adc
dec
loopne
lods
and
or
pop
cmp
pusha
aad
fdivrs
fdivrs
xchg
testb
sub
fnstsw
mov
clc
or
imul
movsb
and
xchg
ja
loopne
adc
or
je
lea
jae
xchg
sahf
sbb
dec
fistpll
les
inc
and
sbb
stos
mov
shlb
or
cmpsb
inc
inc
int3
inc
and
lcall
adc
push
jl
jge
testl
pop
mov
jmp
ja
sub
jecxz
push
in
mull
icebp
pop
cmpsl
inc
shll
popa
add
inc
push
xchg
mov
sbb
enter
pop
divl
scas
aas
pop
test
in
jecxz
daa
mov
and
movsl
aaa
cmpsl
ret
lock
insl
int3
pop
xchg
add
bound
insb
or
mov
jns
mov
gs
pushf
outsl
shl
imul
cmp
mov
inc
mov
mov
icebp
aaa
fwait
or
sbb
roll
aad
cmp
adc
jp
in
or
stos
cmp
dec
ds
add
addl
or
movsl
daa
mov
and
out
lock
bound
cmpsl
inc
jg
push
cld
pop
jp
pusha
pop
repnz
imul
insl
test
gs
mov
lods
daa
mov
and
in
notl
fwait
setg
or
pop
into
pop
cmp
and
mov
jns
das
das
mov
add
add
jo
les
int3
es
shlb
push
pop
xchg
adc
inc
fimull
fisubrl
jmp
cmp
mov
jg
jbe
loopne
cmp
xchg
or
jge
je
add
inc
mov
movl
rclb
mov
mov
das
int3
jnp
push
inc
and
aaa
aaa
mov
inc
mov
repz
mov
or
pusha
ljmp
jge
notl
mov
stos
and
add
rclb
and
hlt
jg
mov
in
jge
je
insl
jb
ja
loope
mov
mov
and
mov
mov
out
out
push
jns
sbb
jns
sahf
sti
aad
fcomps
xchg
aad
sbb
movsl
push
push
or
je
or
add
aad
mov
mov
fcoms
jb
fs
add
je
sub
mov
imul
mov
dec
sti
xor
pop
add
cs
cmp
inc
shll
fdivrs
inc
daa
rolb
or
push
xlat
inc
and
movb
dec
scas
xchg
xchg
icebp
add
inc
rclb
and
enter
jmp
push
mov
js
pusha
mov
fldcw
mov
pushl
mov
cld
jnp
mov
push
jp
in
or
fs
popf
insb
mov
bound
popa
add
add
add
daa
mov
dec
mov
xchg
les
mov
pop
xchg
pop
bound
mov
dec
fisttps
mov
mov
ljmp
jp
in
pop
push
sahf
or
cmpsb
jo
cwtl
ss
pop
test
fwait
add
std
or
mov
movsl
int3
aas
mov
dec
fidivrs
push
imul
and
mov
testl
push
mov
pop
stos
dec
add
xchg
xchg
lock
push
pushf
xor
inc
lods
es
mov
jnp
in
and
inc
daa
sarb
in
jge
notl
aaa
mov
pop
inc
and
aaa
mov
enter
xorb
dec
fdivrs
mov
adcl
ret
ret
cltd
or
jae
test
pop
test
inc
inc
and
jns
mov
inc
mov
daa
mov
cmp
pushf
or
sbb
mov
mov
in
xor
jge
dec
adc
bound
fstps
test
lea
cltd
pop
lahf
push
mov
les
xor
dec
push
adc
sub
jne
add
sbb
inc
fidivrl
push
xor
adc
lcall
ret
ja
inc
enter
sub
adcl
cmpsl
aaa
push
mov
imul
or
in
ljmp
out
shrb
sub
pop
inc
inc
and
xor
ljmp
cmp
pop
adc
mov
inc
xor
je
mov
imul
pop
call
test
lods
xchg
dec
fisubrl
add
je
sti
fcomps
cld
mov
fmuls
add
je
int
push
inc
add
fcomps
or
dec
test
add
je
fdivs
fdivrs
jb
incb
push
add
add
inc
push
inc
add
mov
dec
fmuls
inc
sbb
je
pop
cli
inc
add
je
imul
push
inc
add
aad
dec
adc
add
je
pop
movsl
mov
out
sti
add
out
imul
das
fidivrl
mov
sbb
loop
testb
adc
xor
mov
gs
jge
cld
xchg
cmc
add
lahf
adc
in
sbb
dec
lds
iret
push
mov
shll
pusha
pop
repnz
ja
xorb
push
les
jp
in
sbb
inc
xlat
mov
cmpsl
dec
jecxz
push
in
mov
mov
and
mov
js
mov
mov
mov
and
add
and
jnp
mov
inc
jecxz
push
in
push
into
pop
cmp
jg
setg
or
cmc
pop
int3
push
shll
lds
stc
mov
sbb
sbb
inc
shll
inc
daa
shlb
push
loopne
notl
jl
negb
mov
and
repz
aad
jmp
inc
lds
iret
and
repnz
jno
xorb
sbb
aad
adcl
sub
adc
xchg
add
sahf
jo
or
in
lock
push
mov
jns
mov
in
lcall
xor
jo
xorl
mov
insb
add
loop
pop
loop
mov
jmp
rcrb
pop
jp
jg
out
adc
sbb
popf
or
sbb
fimull
fidivrl
loopne
in
jg
push
ret
ret
insb
loop
je
jb
jle
call
mov
stos
into
cmp
shlb
nop
sub
imul
insl
fcompl
pop
ds
mov
hlt
fwait
aas
scas
lret
sub
adc
jl
jne
push
imul
sbb
push
nop
adc
rclb
and
jp
in
add
aad
rorl
dec
movsl
cmp
push
testl
into
imul
mov
popf
jne
outsb
cld
fwait
jbe
and
push
fmuls
fdivs
jp
gs
or
insl
std
test
or
or
ja
xorb
sub
or
stos
inc
shll
fidivrl
pop
cmp
jo
sbb
in
jne
mov
and
call
sar
lock
lret
mov
repz
jecxz
push
in
and
push
lds
sbb
or
out
addl
sbb
or
popa
icebp
nop
arpl
cmp
stc
jge
je
insb
inc
fs
xor
add
out
push
or
adc
xor
sahf
sahf
mov
sahf
fcomps
xchg
fst
movsl
sbb
mov
mov
mov
mov
add
or
je
pop
int
push
inc
add
aad
adc
cwtl
sti
fdivs
pop
fucomp
fisttpll
aad
jns
fnstsw
fst
movsl
dec
dec
sti
and
inc
add
mov
xor
push
inc
add
pop
int
push
inc
add
aad
int
xchg
inc
add
movsl
adc
mov
out
add
ret
and
pop
leave
test
mov
push
mov
andl
cmpsb
push
in
movsl
xor
aaa
cmpsl
ret
push
leave
pop
cmp
pusha
jmp
ljmp
pusha
xchg
cmp
mov
gs
and
or
cmpsb
and
sub
xchg
pop
xchg
adc
push
rolb
shlb
insl
in
bound
xchg
cld
pmulhuw
ret
xor
dec
pusha
jmp
push
in
add
fcomip
jle
mov
cmc
add
das
cmpsb
xor
scas
inc
sub
xor
inc
add
adc
fisttps
fsts
imul
pop
int
and
and
mov
ja
je
out
sub
push
in
in
jp
jp
add
push
popa
nop
js
adc
mov
push
mov
jle
cmp
add
lret
inc
stc
cwtl
push
xchg
repz
cmpsl
jl
jno
jecxz
add
cmp
dec
fnstcw
inc
es
pop
fisttpll
out
jle
xchg
testb
sub
xor
jno
gs
adc
rcll
and
loop
repnz
pop
repnz
imul
sbb
push
xor
cmpsl
sub
mov
sarl
sti
call
pop
int
sbbl
lea
xchg
repnz
outsb
loope
adc
adc
andl
outsl
int3
pop
repnz
fs
mov
negb
aas
lret
xchg
pop
bound
movsb
push
mov
stc
mov
xlat
and
jo
xorl
das
test
pop
int3
stos
data16
xchg
inc
fdivl
in
stos
movsb
ret
ds
in
jo
xorl
outsl
ljmp
daa
stos
cmp
jg
enter
cs
push
xchg
add
jno
scas
aas
pop
test
sbb
push
push
aad
sub
xor
pop
cmp
and
inc
and
cmp
xor
push
aad
es
shlb
cs
mov
sub
aas
fisubs
and
inc
shlb
test
push
mov
jae
loopne
in
je
xor
jno
jecxz
iret
push
shlb
push
mov
jbe
add
lock
bound
test
push
les
pusha
pop
repnz
mov
dec
mov
aas
lret
fdivl
in
fstps
lea
outsl
les
movsb
push
repnz
and
jg
adc
inc
fidivrl
das
dec
mov
jp
jle
inc
shlb
xor
and
sbb
aad
adcl
adc
mov
es
cs
push
out
daa
mov
inc
mov
sbb
nop
or
popf
or
xor
int
xchg
mov
xchg
adc
jo
cmp
adc
ds
adc
into
pop
cmp
push
dec
out
jg
jmp
or
shrb
shl
fs
popf
insb
lea
pop
jp
jne
or
jp
jp
out
icebp
nop
arpl
cmp
loop
cltd
push
xchg
les
pop
and
push
pop
roll
sarl
fstl
mov
dec
sub
add
adc
mov
lret
arpl
cmc
sbb
sbb
sbb
mov
sti
out
imul
mov
mov
or
test
decl
fdivr
xchg
stc
incl
popa
sbb
movsl
in
ja
add
or
je
and
jge
inc
add
aad
sahf
lods
out
fnsave
fnsave
adc
fstl
fst
movsl
xor
add
fisttpll
xor
adc
fstl
fst
movsl
xor
xchg
jns
aad
fcom
fadds
movsl
add
out
xor
imul
mov
and
jns
jmp
ret
movsb
push
mov
das
shlb
outsl
or
mov
fldenv
jne
mov
xor
jg
stc
cmpsb
popf
lock
sar
adcl
test
jg
mov
inc
rclb
sub
lret
cld
fwait
jbe
and
sbb
jb
int3
inc
and
lock
bound
imul
adc
imul
into
test
pop
bound
iret
cmp
fisttpll
mov
fidivrl
mov
adcb
andb
dec
ret
movsl
push
roll
aad
xchg
or
in
mov
mov
lahf
push
call
lret
adc
sub
movsl
jg
jae
in
std
pop
int3
stos
data16
fisttpl
fisttpll
incb
lock
xorl
dec
test
push
lahf
push
xchg
adc
and
movsb
ret
xlat
call
jp
addr16
pop
add
mov
les
dec
sub
add
push
cld
push
mov
aam
inc
shlb
ljmp
xor
xor
dec
fstpt
gs
je,pt
jo
loop
movsl
xor
cmp
popf
or
mov
popa
cli
push
add
xor
pop
into
test
push
jns
aas
int
mov
mov
xor
sahf
imul
test
dec
popa
inc
push
and
aad
fsubrs
imul
xchg
fst
movsl
xor
add
add
or
je
mov
jge
inc
add
aad
jmp
out
mov
sti
fstpl
fst
movsl
mov
fst
movsl
sbb
xchg
xchg
and
pop
fst
movsl
lods
imul
pop
fst
movsl
mov
xchg
mov
aad
fsubrs
add
movsl
add
out
and
add
mov
inc
shll
mov
and
xchg
aas
pop
test
xor
imul
clc
data16
xchg
outsb
dec
fistpll
mov
and
dec
mov
push
mov
or
andb
and
movsl
sub
ljmp
mov
and
inc
ret
ret
ljmp
stc
jmp
sbb
inc
hlt
rolb
subl
cmp
pop
repz
test
popa
icebp
nop
arpl
push
mov
push
cli
dec
fdivl
in
outsb
add
adcl
test
mov
jns
dec
mov
fucomip
jle
mov
xor
daa
push
les
int3
imul
lcall
in
bound
ret
jmp
aas
scas
lret
addr16
outsb
or
dec
mov
in
sbb
js
jnp
in
pop
aad
in
jg
fnstsw
mov
mov
xchg
sbb
inc
addb
icebp
add
mov
sahf
stc
or
mov
stos
into
cmp
loope
lock
enter
es
jge
je
insb
aaa
ret
push
lds
lahf
adc
in
sbb
movsb
sub
lds
mov
shll
jg
jmp
jp
pop
xchg
add
js
mov
pop
into
pop
cmp
lea
mov
roll
mov
adc
fmuls
mov
ret
mov
mov
xchg
and
mov
pop
enter
iret
push
lret
ljmp
lds
fs
inc
aad
dec
in
dec
fdivrl
out
jo
jns
scas
test
mov
add
sahf
decl
test
xor
aad
fdivs
xchg
stc
xor
sbb
mov
mov
mov
movsl
mov
mov
add
push
inc
add
out
sub
mov
cmp
add
je
pop
int
push
inc
add
aad
mov
xabort
xchg
adc
xor
xor
popa
xor
popa
ret
movsl
xor
aad
fadd
or
push
inc
add
aad
xor
pop
xchg
inc
add
movsl
adc
add
mov
add
dec
sti
pop
sahf
fstps
jmp
jge
jmp
gs
add
test
push
mov
sub
lds
lret
repz
xor
call
inc
lock
in
pop
jp
adc
call
push
pop
mov
push
jmp
xchg
adc
jmp
cltd
sbb
mov
xchg
ja
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
jmp
ljmp
push
dec
cmp
ja
jmp
push
push
push
push
push
jmp
jmp
adcb
add
inc
aam
dec
cmpsl
push
adc
je
jmp
js
insl
hlt
pop
in
cmp
add
xor
pop
push
notb
stos
and
add
adcl
int
and
cmp
call
add
mov
jmp
mov
iret
and
add
dec
das
fidivrl
mov
lods
mov
loop
fsubs
cmp
jne
mov
jmp
sahf
cli
jmp
ret
dec
fnstcw
cmp
inc
pop
mov
mov
mov
jmp
stos
and
or
pop
int
mov
ja
jge
decl
or
lret
je
dec
jne
jmp
add
jl
lahf
ds
push
mov
in
add
das
add
xchg
cmpsb
cmp
jne
mov
jmp
js
js
ljmp
in
pop
int
and
jb
into
pop
cmp
adc
inc
inc
cmp
je
dec
je
decl
jne
jmp
outsl
ljmp
stc
in
data16
xchg
outsb
test
add
sbb
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
leave
pop
repnz
fs
xor
outsb
sti
imul
dec
ss
cmp
mov
mov
mov
call
jmp
cmp
adc
mov
dec
mov
out
sbb
adc
rorl
test
decl
call
dec
fistpll
aam
xchg
lds
iret
dec
out
push
add
add
lea
jmp
call
jmp
mov
cmp
inc
lahf
push
stos
sbb
mov
add
pop
and
rolb
call
jmp
pop
std
insl
hlt
pop
adc
lret
scas
pop
push
aam
sub
push
into
sti
call
add
rclb
xchg
add
sahf
jg
mov
inc
mov
cmp
roll
add
mov
stos
into
cmp
dec
mov
mov
pop
and
aaa
test
pop
pop
ret
jmp
jmp
notb
xchg
testb
mov
insb
lahf
jns
add
mov
sti
incl
decl
test
push
jns
mov
adc
cwtl
mov
cmp
jne
je
aas
mov
inc
mov
and
xlat
inc
fidivrl
xor
inc
jmp
je
jp
in
dec
push
rclb
add
mov
ds
enter
jp
add
xlat
int
and
jl
out
repz
inc
mov
adc
add
ljmp
cwtl
imul
add
add
call
test
jl
call
test
jl
push
call
pop
test
jne
call
add
push
lods
cmp
outsl
lcall
or
add
add
mov
and
faddl
add
call
push
push
call
jmp
fildl
mov
call
and
lret
imul
call
add
mov
add
add
dec
jg
incl
call
add
je
push
int3
inc
and
mov
sbb
clc
imul
insl
faddl
mov
fnstsw
jge
jne
call
call
call
jmp
mov
movsb
ljmp
xchg
mov
fsubr
mov
sti
jmp
sub
xor
shl
jo
add
adc
add
ss
inc
mov
jp
call
test
jge
call
jmp
push
out
cmp
jmp
dec
int
and
aaa
pop
fisttps
sbb
je
push
push
mov
mov
push
push
cmp
jne
push
call
pop
test
jne
xor
jmp
iret
dec
fnstcw
out
jo
mov
call
jmp
xor
daa
lods
and
adc
mov
std
jmp
outsb
cld
fwait
jbe
fcompl
scas
pop
mov
gs
pushf
outsl
mov
cmpsl
loopne
dec
mov
pop
pop
cmp
je
push
call
add
mov
incl
call
pop
call
test
je
push
push
call
pop
pop
call
add
test
es
cs
idivl
jp
loope
loope
jae
push
mov
insl
push
mov
or
pushl
sbb
sbb
jo
xorl
dec
pop
pop
jp
jne
jne
push
call
jmp
addr16
sbb
lret
xor
mov
add
fcoml
pop
jmp
into
ljmp
pop
sahf
aas
popf
jne
mov
mov
add
xor
xor
add
test
je
mov
jmp
and
inc
jecxz
push
in
jle
je
out
inc
fstps
sti
decl
test
push
je
mov
add
test
je
jne
int3
pop
lret
scas
pop
in
inc
aad
dec
in
sbb
std
insl
hlt
pop
lods
sub
add
add
push
out
xor
add
add
jmp
cmp
filds
lahf
jmp
rclb
sub
jmp
test
mov
cs
out
cmp
inc
and
shll
mov
mov
js
mov
pop
into
pop
cmp
ds
mov
and
test
shlb
xchg
loope
out
mov
icebp
push
mov
in
sbb
les
test
out
cmp
aaa
stos
cmp
sbb
pop
fldl
ja
loope
loope
icebp
nop
arpl
mov
pop
mov
sbb
in
lock
bound
lea
push
mov
es
add
sbb
xor
scas
dec
lods
and
int
fstpt
or
pop
enter
xchg
push
mov
es
in
pusha
notb
add
insl
std
insl
hlt
pop
in
nop
add
jge
je
and
out
push
lds
iret
das
fisttpll
mov
fwait
decb
push
mov
mov
mov
pop
int3
stos
data16
xchg
add
fmuls
fsubs
xor
repnz
pop
repnz
inc
jecxz
push
in
lods
xor
lret
pop
ds
cs
add
adc
setg
or
inc
lret
pop
ds
jbe
fs
pop
clc
jg
mov
stos
xor
in
bound
and
and
mov
loopne
repz
fisttpll
out
dec
lds
iret
push
fcompl
scas
pop
mov
xor
stos
cmp
dec
cmpsb
sub
sub
or
insb
loop
je
mov
mov
jbe
cmpl
xchg
pop
bound
and
xor
sub
test
xchg
adc
push
out
mov
inc
mov
imul
pop
lret
pop
ds
fs
push
or
dec
push
out
push
cmp
dec
mov
popa
push
push
inc
add
lahf
int
xchg
inc
add
and
xor
sahf
out
rcll
cmpsl
push
mov
roll
aad
sbb
movb
add
jne
je
sbb
jp
hlt
push
cld
adc
jg
mov
addb
add
loop
cltd
push
inc
mov
ja
insl
hlt
pop
into
sub
leave
mov
mov
xor
push
sub
jmp
mov
fistps
popa
mov
add
test
je
mov
add
jmp
push
fdivl
in
orb
sti
push
decl
pop
cmp
push
push
outsb
or
adc
pop
pop
loop
out
add
adc
incl
xchg
or
imul
jne
jmp
cmpsb
xor
scas
or
divb
jbe
loopne
mov
out
add
loope
call
sbb
mov
jmp
inc
xlat
inc
and
xor
aam
sahf
or
clc
test
je
test
je
test
je
test
jne
jmp
add
and
sub
call
test
sbb
add
add
je
jne
in
je
lea
and
dec
fstpt
mov
mov
jmp
mov
mov
fisttps
fsts
pop
into
test
sub
je
test
jne
je
or
cmp
daa
mov
and
outsl
in
bound
fs
pop
bound
test
jmp
or
jbe
mov
fimull
add
dec
mov
jmp
int
fnstcw
in
mov
cwtl
imul
jmp
jmp
cwtl
and
les
int3
mov
int3
push
pushf
xor
inc
in
cld
fwait
jbe
mov
xchg
repnz
lods
and
mov
filds
mov
fistpl
and
sub
and
ss
adc
add
std
or
and
sub
js
cmp
data16
xchg
outsb
test
mov
jle
arpl
mov
scas
pop
sub
and
sbb
and
stos
cmp
add
fwait
or
sub
jmp
sbb
pop
jb
cmp
mov
push
xorl
outsl
jecxz
notb
xchg
icebp
add
lods
cmp
mov
dec
mov
test
add
xchg
add
jp
leave
pop
cmp
sub
push
shlb
mov
mov
sarb
add
sbb
dec
fnstcw
mov
push
les
test
push
testb
adcl
test
mov
int3
inc
and
mov
sbb
mov
std
push
pop
les
int3
cmp
mov
mov
mov
jno
xorb
adc
in
jge
testl
testl
adc
out
jl
divb
outsb
cld
fwait
jbe
fs
adc
cmp
in
sub
and
push
sti
jp
jp
lea
cltd
clc
or
jb
imul
sbb
outsl
or
jmp
jno
daa
mov
inc
mov
idivl
test
mov
scas
lret
repz
jp
sbb
cs
dec
fidivrs
shlb
xor
sbb
mov
test
popa
or
lock
inc
add
fadds
movsl
add
xor
mov
out
xor
out
sahf
jnp
mov
movsb
sub
lds
xchg
mov
rorb
test
incl
add
test
je
test
jmp
add
add
jge
mov
dec
mov
mov
push
add
xor
xor
mov
add
test
je
jne
cli
jbe
cmpl
dec
frstor
push
std
adc
cmp
pop
pop
ret
mov
add
sub
je
jmp
rcll
push
cmpsl
push
rcll
data16
cmp
mov
xor
mov
mov
pop
pop
pop
ret
jmp
sbb
enter
addr16
dec
fisttps
xchg
pop
xchg
repnz
jmp
add
repnz
adc
in
sbb
push
roll
aad
inc
fimull
fisubl
cld
pop
leave
jmp
cmp
xor
inc
jecxz
push
in
dec
mov
jmp
jne
jle
call
cmp
pop
sahf
or
cmpsb
sbb
add
mov
gs
adc
push
shlb
jge
xor
or
repnz
add
neg
sub
mov
std
repnz
add
cmp
je
jne
ret
mov
xchg
and
sbb
xor
inc
inc
sub
test
decl
adc
pop
ret
jmp
push
rolb
shlb
mov
cwtl
decl
jecxz
loopne
adc
add
lea
jmp
lea
jmp
xchg
adc
dec
frstor
mov
popa
ret
jmp
lea
jmp
loop
lcall
mov
adc
and
jmp
dec
les
int3
and
lret
adc
scas
in
xchg
push
mov
mov
mov
mov
jmp
xchg
sbb
sub
xchg
add
jns
call
mov
jmp
and
mov
xchg
cwtl
setg
or
xchg
xchg
adc
mov
in
pop
call
jmp
ret
inc
inc
test
jne
mov
dec
dec
cmp
je
cmp
jmp
pop
int
and
aas
inc
rolb
sarb
inc
aad
sub
jp
iret
mov
mov
push
push
pushl
call
add
pop
ret
jmp
mov
cmp
je
jne
out
jnp
mov
jecxz
out
mov
les
fs
scas
push
mov
mov
pop
pop
pop
ret
jmp
popf
pop
ret
jmp
int
lret
jecxz
orl
mov
inc
mov
ret
pop
repnz
sarl
xchg
punpckhdq
pop
jmp
pop
stos
cmp
sub
inc
xlat
mov
enter
decb
hlt
adc
in
mov
push
push
jmp
dec
int3
inc
and
mov
jecxz
jne
mov
add
shr
adc
das
test
clc
adcl
test
or
cld
cmp
cmp
je
mov
cmp
jmp
testb
and
and
arpl
xchg
xchg
stc
incl
cmc
or
repnz
jmp
pop
xlat
inc
and
ss
pop
int
int
lea
push
cld
or
testl
add
shlb
jmp
sbb
icebp
pusha
notb
shlb
notb
jle
js
sti
ljmp
pop
mov
push
push
push
push
push
call
jmp
pop
iret
pop
cmp
aas
lcall
mov
andb
test
mov
push
cmp
out
les
pop
pop
pop
pop
ret
jmp
enter
push
stc
outsb
cmc
gs
inc
fiaddl
dec
in
push
lret
jmp
xlat
mov
cmp
je
inc
inc
dec
jne
jmp
or
int3
push
mov
fs
jmp
call
add
lcall
shr
or
add
mov
xchg
add
sbb
stos
imul
inc
or
shll
pop
ret
jmp
xlat
mov
push
mov
jmp
js
imul
add
test
pop
test
in
lock
bound
fisttps
test
jmp
add
subl
or
incl
fsubl
in
sub
add
call
xor
mov
andl
jmp
fcomps
xchg
addr16
dec
fdivrl
filds
fisttps
test
mov
mov
inc
inc
inc
inc
cmp
je
dec
jne
jmp
outsb
jmp
test
call
in
lea
push
call
add
sub
add
ds
dec
mov
xchg
xor
push
xchg
repz
lds
mov
call
add
jmp
mov
shlb
xor
inc
fistl
pop
mov
adc
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushf
popl
mov
lea
movl
mov
mov
mov
mov
movl
movl
jmp
out
popa
icebp
nop
arpl
mov
xchg
jb
addr16
sbb
test
test
add
test
jne
push
call
pop
jmp
ljmp
aam
sub
xchg
cmc
add
dec
xor
ljmp
add
test
je
sub
jne
jmp
ja
ja
loope
jp
arpl
cmc
sbb
xor
aad
sti
incl
jae,pn
inc
jmp
jo
test
and
jmp
stos
cmp
pop
iret
pop
cmp
jo
int
and
and
push
adc
rolb
push
pop
cmp
sbb
and
add
pop
ret
jmp
mov
xchg
adc
addr16
add
ret
jmp
adc
sbb
cmp
lods
xor
mov
pop
ret
jmp
fildl
and
stos
mov
push
mov
push
call
outsb
call
in
test
je
call
cmp
je
push
call
add
call
test
je
mov
jmp
int
sti
roll
aas
pop
test
or
into
sub
add
test
add
add
jne
call
jmp
pop
mov
js
and
push
les
fs
jns
and
jb
call
out
sti
incl
test
jne
push
call
pop
test
je
jmp
and
setae
xchg
inc
rcll
mov
and
push
fbstp
adc
in
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
jmp
pop
fisttps
flds
sub
mov
call
jmp
bnd
mov
cmp
sub
rcrl
insl
mov
jmp
pop
ret
jmp
inc
lea
jmp
test
test
mov
dec
rcll
das
test
xor
movl
ret
jmp
daa
out
call
in
push
jmp
sbb
sub
inc
iret
pop
cmp
ds
fmuls
fsubrs
push
push
call
add
enter
call
push
call
addl
add
sarb
frstor
mov
dec
mov
test
je
pushl
call
mov
jmp
mov
ljmp
insl
cli
push
outsl
ja
call
add
das
mov
test
je
call
cmp
je
push
call
add
call
test
je
mov
jmp
inc
or
pop
lods
jmp
les
lret
test
sbb
jecxz
add
push
shlb
jb
sub
lods
lea
jmp
in
jne
mov
sbb
jne
push
call
pop
test
je
jmp
or
mov
push
call
call
int
lock
jmp
mov
mov
lea
and
dec
jl
jmp
push
mov
jns
and
inc
and
js
ljmp
insl
adc
ret
jmp
push
sti
imul
jl
ljmp
dec
fisttpll
mov
and
and
add
iret
sahf
sti
incl
jmp
out
insb
loop
je
pop
pop
cmp
and
jmp
stos
xchg
pop
ret
jmp
pop
fisttps
flds
mov
fcmovu
pop
enter
jp
jnp
inc
pop
ret
jmp
or
aam
mov
adc
jecxz
or
push
movsl
inc
add
mov
cmpsb
xor
scas
inc
je
lea
je
lea
gs
test
call
add
adc
lcall
lock
call
add
stos
icebp
cld
incl
jmp
ret
mov
nop
jbe
lret
jo
xchg
add
add
xchg
add
inc
call
add
push
call
pop
andl
pushl
call
add
inc
cld
call
push
call
pop
mov
mov
mov
jmp
pop
xchg
add
sahf
jo
sbb
setg
or
and
mov
mov
call
add
xor
inc
mov
test
je
push
push
call
add
rorl
add
push
add
jne
call
mov
jmp
add
pop
aad
sub
sub
inc
xlat
mov
cmpsl
push
pushl
call
pop
movl
call
call
ret
jmp
stc
scas
movsl
jmp
jmp
push
jno
lea
jmp
jae
xchg
jbe
je
out
dec
adc
sbb
dec
dec
imul
shlb
push
test
decl
push
call
pop
ret
jmp
pop
xor
sahf
mov
push
les
jns
enter
add
add
add
pop
xor
jmp
into
pop
into
test
xchg
repz
in
cmp
pop
movsb
test
push
call
jmp
pop
xchg
add
xor
ss
push
ret
cmpsb
push
in
mov
push
push
call
add
pop
ret
jmp
mov
mov
mov
push
call
mov
test
jne
push
call
pop
jmp
hlt
jae
xchg
loopne
in
mov
dec
mov
or
push
cmp
call
call
add
mov
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
call
add
fisubs
pop
imul
pop
call
test
je
push
push
call
pop
pop
call
add
push
jmp
lahf
add
dec
fidivrs
mov
mov
pop
ret
jmp
push
add
addr16
out
adc
push
ljmp
dec
int
and
xor
mov
outsb
cli
call
call
push
call
add
std
call
pusha
stos
sti
lcall
int3
std
ljmp
aam
rcll
and
call
jmp
mov
lds
mov
inc
mov
inc
lret
pop
ds
or
push
call
mov
test
je
mov
test
je
push
call
pop
jmp
and
xchg
test
sbb
fisttpl
fnsave
ds
dec
mov
push
in
dec
fsts
mov
mov
mov
test
je
push
call
jmp
dec
ret
ret
add
std
or
fists
mov
adc
sub
shr
orb
adc
xchg
cltd
clc
or
in
in
jg
push
lret
pop
ds
test
add
add
mov
jmp
mov
jmp
inc
rolb
shlb
jl
jne
inc
lds
mov
out
mov
test
je
push
call
pop
jmp
push
xchg
pop
bound
mov
mov
inc
dec
test
je
push
call
pop
jmp
fimuls
mov
or
jmp
push
enter
cmp
or
dec
push
enter
popa
jnp
jne
inc
pop
call
je
push
call
pop
jmp
cmp
scas
xor
lods
cmp
or
lcall
jle
test
je
push
call
add
cmp
add
sbb
int
mov
or
inc
inc
test
je
push
call
pop
jmp
jnp
mov
inc
cld
call
push
call
jmp
outsb
int3
inc
and
pop
bound
mov
in
test
je
push
call
pop
jmp
mov
cmpsb
test
jmp
repz
xorl
cmpsb
inc
cli
jns
mov
add
pop
pop
movl
mov
test
je
push
call
pop
call
add
es
std
incl
je
cmpl
jne
push
call
pop
jmp
sub
call
push
call
pop
jmp
xor
add
jmp
lea
jmp
adc
cmpsl
aaa
push
mov
leave
cmp
fstpt
nop
sub
sti
lcall
lret
push
jns
push
jb
xchg
lock
mov
sbb
call
jmp
fistl
cmpsl
push
mov
pop
stc
lea
nop
testl
cmpsl
aas
test
jne
call
add
test
call
add
aam
ficoms
cmpsl
push
mov
and
jmp
mov
push
jmp
mov
iret
add
push
lret
pop
ds
adc
int3
movsb
sti
mov
xchg
es
dec
mov
mov
push
mov
call
add
jmp
fmull
mov
mov
dec
fistpll
pop
incl
imul
or
mov
pop
scas
lods
xor
popf
or
je
cmpl
jmp
rcrb
pop
fmuls
cmp
jne
out
pop
hlt
push
adc
test
add
add
loopne
xchg
std
push
call
jmp
mov
mov
xchg
add
and
mov
gs
adc
push
push
call
add
adc
hlt
push
cld
jnp
jmp
scas
sub
lds
mov
pop
ret
jmp
xchg
push
call
push
jmp
jno
addr16
push
rclb
mov
cmp
inc
js
jne
pop
jmp
push
call
pop
jmp
stos
xor
std
insl
hlt
pop
jmp
mov
sub
data16
jmp
das
stos
cmp
dec
push
ret
cmpsb
push
hlt
dec
rclb
or
sar
mov
test
je
call
add
mov
add
into
pop
cmp
xor
stc
nop
test
jne
je
inc
lret
lret
sub
sbb
or
jne
push
call
add
fdivp
cld
incl
call
test
je
call
add
xor
call
mov
jmp
lds
call
call
call
add
add
add
hlt
fdivrp
incl
jmp
in
jl
jne
and
outsb
or
cmp
xor
inc
nop
call
jmp
sbb
pusha
pusha
hlt
push
cld
adc
mov
stc
push
push
call
push
push
call
call
push
push
call
call
push
push
call
call
call
add
call
add
movsl
lds
xchg
addr16
pop
mov
gs
and
inc
and
ja
cmp
call
add
cmp
std
incl
call
pop
call
pushl
call
jmp
je
call
cli
fs
call
add
je
test
jne
jmp
add
popa
add
xor
jmp
mov
in
push
push
xor
pushl
jmp
xor
insl
std
test
sbb
push
jno
sub
mov
adc
std
jmp
push
lret
add
call
call
jmp
xchg
mov
sbb
push
xchg
movsb
ret
ds
sti
incl
call
cmp
je
call
add
test
je
call
call
add
lahf
arpl
call
add
addr16
call
call
add
in
call
call
add
loop
call
jmp
adc
add
sahf
dec
inc
lret
pop
ds
pop
fimull
fidivrl
xchg
ss
call
pop
pop
call
jmp
cmp
mov
pop
jmp
fistps
stos
data16
cwtl
push
imul
mov
mov
in
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
call
add
push
call
add
add
jge
incl
jbe
or
jmp
pop
pop
ret
jmp
mov
jmp
jbe
popa
add
sbb
jne
mov
leave
inc
shlb
fidivrl
lock
jne
jmp
push
mov
jmp
in
jge
negl
in
bound
shlb
cld
ficompl
lods
pop
pop
ret
jmp
sub
ss
mov
mov
jle
call
pop
pop
pop
jmp
jo
jno
jecxz
xchg
or
jns
mov
and
or
pop
test
lods
lret
inc
movsb
ret
push
lret
mov
stc
imul
outsb
aas
in
mov
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
je
jle
jns
jmp
cli
pusha
notb
xchg
repz
mov
sub
clc
decl
test
std
jmp
je
call
out
xchg
call
mov
lea
call
add
or
jmp
scas
xor
rorb
push
std
mov
lcall
mov
lcall
call
out
stos
and
jne
jmp
adc
push
out
mov
push
mov
call
pushl
call
call
add
outsb
ljmp
add
add
rolb
jmp
or
test
xchg
repz
fidivl
pop
and
lret
fs
jmp
jle
mov
pushf
outsl
test
fs
jmp
mov
cmpsl
ret
xor
push
jns
mov
inc
enter
sub
cmp
ret
jmp
inc
enter
outsl
outsl
in
sbb
es
repz
lea
adcb
andb
jne
call
in
push
mov
push
call
add
jne
call
add
add
add
test
je
jmp
cmpsb
das
mov
push
pushf
sti
push
decl
mov
push
mov
push
call
add
xor
inc
add
aaa
xchg
sti
incl
test
je
pushl
call
jmp
lea
jmp
lods
and
pop
xchg
repnz
lret
pop
into
test
lret
sti
or
gs
ret
jmp
jo
ja
loope
or
inc
push
call
jmp
test
and
dec
sub
push
loope
ljmp
mov
pop
jmp
dec
aam
sub
ljmp
pop
loop
icebp
mov
enter
clc
pop
test
jne
call
add
push
call
add
add
sub
xchg
std
incl
std
incl
loop
sti
dec
lods
xor
fsubrl
call
pop
ret
jmp
xchg
or
jge
lea
jmp
mov
lea
jmp
test
mov
sbb
xor
stos
add
enter
lea
jmp
mov
xchg
jne
inc
sub
pop
orl
xchg
add
add
push
mov
pop
cmp
sbb
dec
fistpll
and
add
add
in
push
mov
xor
jmp
test
jmp
dec
iret
pop
cmp
ss
stos
into
cmp
sub
adc
add
jmp
enter
and
shr
mov
add
jbe
pusha
pop
repnz
push
les
and
push
jp
repnz
jmp
or
adc
sub
jmp
push
in
add
cs
adc
mov
test
je
call
jmp
lea
jmp
ret
cmpsb
push
mov
in
bound
loop
je
cwtl
or
inc
call
jmp
into
arpl
xchg
gs
mov
aad
orl
adc
mov
push
mov
cmpl
je
push
call
jmp
and
dec
fdivrs
adc
imul
pop
ret
jmp
pop
test
je
jne
setp
outsl
lcall
jno
mov
inc
mov
rorb
mov
push
test
je
call
jmp
adc
hlt
cwtl
pushl
call
pop
jmp
lds
add
cmpsl
add
add
notl
rorb
push
std
dec
rolb
shlb
repnz
jne
jb
pop
pop
ret
jmp
cmpl
jmp
jns
jnp
in
inc
icebp
insb
loop
je
push
dec
stos
ret
xchg
push
xor
jmp
mov
mov
and
xchg
cmpsb
ret
jmp
hlt
jne
mov
rclb
mov
and
icebp
dec
iret
pop
cmp
ds
insb
negb
jmp
in
imul
stos
imul
call
jmp
ds
adc
pop
bound
sbb
or
inc
add
push
pop
lcall
test
jne
push
call
call
call
add
call
cmpl
pop
je
push
call
pop
test
je
push
push
push
call
jmp
nop
sbb
sbb
mov
push
mov
push
push
pushl
call
jmp
pop
fisttpl
fnsave
push
mov
out
adc
or
lea
jmp
push
mov
jg
arpl
insb
push
lds
iret
and
scas
pop
jmp
fimull
mov
dec
sub
inc
fs
testl
lcall
xor
add
je
lea
cltd
or
jae
cmp
xor
ss
mov
dec
lea
jmp
ret
push
jmp
mov
xor
ljmp
stc
mov
shlb
push
call
add
ret
jmp
cmc
jae
xchg
imulb
test
js
mov
push
call
jmp
or
add
cmp
mov
mov
mov
cmp
pop
pop
ret
jmp
scas
insl
daa
jmp
or
mov
movl
jmp
or
loopne
shlb
mov
rolb
fadd
jmp
and
fistpl
test
jmp
je
lea
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
call
pop
ret
jmp
cltd
sbb
push
ss
pop
movb
jmp
cmp
sub
pop
push
fisttpl
fnsave
in
int
mov
jb
jae
sbb
sub
popl
push
cli
or
jmp
inc
mov
add
xchg
add
cmpsb
sub
cmc
jns
mov
fs
fdivrs
inc
add
movb
movb
movb
mov
movb
add
mov
add
jmp
cmp
jmp
je
outsb
or
adc
cmpsb
xor
scas
pop
adc
adc
mov
cmpsb
xchg
or
movsl
inc
add
add
mov
lea
push
call
add
inc
cld
ljmp
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
mov
mov
and
jle
sub
sti
imul
cmp
les
shl
add
jmp
scas
aas
scas
lret
insl
ljmp
stc
out
jnp
jl
notb
insl
mov
je
mov
cmp
jmp
cld
data16
xchg
outsb
lahf
pusha
stc
imul
push
imul
ljmp
mov
cmp
jl
jmp
pop
lret
pop
ds
mov
mov
mov
inc
mov
loop
in
mov
movl
jmp
sti
pop
pop
test
je
mov
lea
mov
addl
jmp
into
push
shll
cmp
push
aas
pushf
xor
and
subl
and
xchg
pop
jmp
mov
xchg
fisubs
xchg
test
cmpsb
dec
roll
aad
dec
je
mov
lea
lea
mov
mov
cmp
jl
mov
jmp
xchg
mov
jmp
mov
movl
outsl
xchg
pop
xchg
adc
xchg
orl
movb
andl
andb
movb
movb
andl
movb
add
jmp
in
sbb
add
lods
and
push
mov
lcall
cmp
jb
incl
jmp
xlat
pop
int
scas
je
xchg
testb
xchg
jno
rorl
rorb
push
mov
mull
icebp
push
push
lcall
jmp
add
ja
jnp
in
add
inc
shll
pop
lea
jmp
lock
notb
cmp
outsl
xor
and
mov
inc
fwait
push
rclb
sub
pop
cmp
jno
fdivl
in
add
test
ljmp
xchg
inc
add
mov
call
pop
call
call
cmp
je
push
push
call
mov
pop
pop
test
je
push
call
add
pop
adc
addps
lcall
rolb
repnz
ljmp
push
call
pop
pop
call
add
push
xor
inc
jmp
push
int3
inc
and
pop
cmp
pusha
scas
sub
incl
jmp
loop
jmp
lret
pop
ds
aam
fnstcw
mov
test
jne
push
pop
jmp
xchg
setg
or
mov
pop
cld
xchg
cmc
add
add
cmp
je
cmp
je
orb
jmp
cmpsl
cmc
call
sbb
xor
imul
pop
clc
outsb
or
jg
inc
cmp
jl
pushl
call
add
shr
add
add
sahf
and
leave
pop
cmp
sub
bswap
pop
push
movsl
push
call
add
je
test
je
push
call
add
repnz
add
outsb
or
sbb
lods
and
pop
fs
mov
add
popf
or
mov
dec
neg
sbb
add
jmp
sti
orb
movl
jmp
pop
fisttpll
out
jo
imul
adc
push
mov
push
jne
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
jne
mov
xchg
push
fimuls
sub
rcrb
inc
addl
cmp
jl
jmp
inc
mov
mov
mov
inc
or
call
pop
pop
test
je
incl
jmp
sti
jnp
mov
popf
adc
insb
or
out
iret
inc
shlb
lods
lods
lret
inc
scas
scas
inc
shll
inc
daa
shlb
pop
cmp
jne
orb
jmp
jmp
mov
jns
mov
fsubrl
cmc
call
jmp
fisttps
mov
jbe
loopne
rorl
mov
insl
icebp
mov
xchg
add
add
pop
leave
test
out
xchg
or
in
mov
out
push
ljmp
add
pop
push
xor
js
popf
or
dec
ret
jecxz
inc
scas
test
je
mov
and
cmp
jne
orb
jmp
mov
or
jb
jae
fnstsw
je
add
jb
xchg
pop
fwait
or
dec
lea
rolb
add
jmp
cmpsb
sub
sbb
cmp
je
lea
push
call
add
cs
call
inc
sbb
decl
xchg
orl
cmp
sub
inc
add
jne
call
jmp
stos
scas
jbe
xor
test
jne
or
jmp
rcll
lods
pop
mov
test
mov
cmp
mov
mov
add
cmp
jl
pop
pop
ret
jmp
sti
jno
xorb
mov
inc
mov
mov
fs
aad
outsl
mov
ss
andl
pop
jmp
sbb
scas
xchg
lds
test
test
add
add
mov
movsb
sub
cmp
fiaddl
stc
decl
cmp
je
cmp
je
mov
test
je
test
jne
push
call
add
std
jmp
dec
ret
ret
ljmp
push
push
call
jmp
sbb
aad
ror
pop
repnz
fs
daa
mov
inc
mov
pop
cmp
jmp
jbe
jbe
loopne
rcll
pop
mov
pop
int3
stos
mov
in
push
sub
ret
jmp
call
repnz
jmp
int3
pop
iret
stos
pop
shlb
cmp
pop
dec
rolb
shlb
mov
sbb
pop
lea
jmp
push
inc
push
call
jmp
inc
jecxz
push
in
rorb
mov
sub
ss
je
jne
aad
fnstcw
fistpll
and
sbb
jae
xchg
push
push
call
add
push
jg
incl
mov
xor
pop
call
leave
ret
jmp
int
std
test
xchg
aaa
cmpsl
ret
repnz
jne
call
add
cmpsl
pop
jmp
hlt
jbe
cmpl
loope
adc
pop
mov
loopne
icebp
pop
push
call
mov
inc
cmpb
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
jmp
mov
cmpsl
ret
mov
imul
push
cmc
sbb
out
dec
incl
call
jmp
mov
in
hlt
aas
mov
xor
jns
movl
add
sbb
les
lret
adc
inc
scas
lahf
add
jmp
pop
inc
and
cmp
xchg
add
data16
xchg
outsb
xchg
mov
inc
mov
push
ds
mov
call
add
std
call
add
add
push
popa
icebp
nop
arpl
sarl
fmuls
fdivrs
or
jmp
mulb
pushf
outsl
scas
xor
or
in
jg
mov
push
jmp
imul
add
andl
movl
xor
pop
pop
jmp
jecxz
in
jle
push
enter
cmp
push
and
and
test
add
add
sarb
cld
mov
sete
inc
mov
jmp
lret
push
or
pop
jmp
les
mov
mov
dec
fidivrs
push
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
jmp
sbb
in
out
mov
sub
daa
inc
mov
xchg
mov
cltd
xor
lahf
mov
je
jmp
in
dec
frstor
push
dec
sub
add
push
lds
add
add
rcrb
lret
jmp
outsl
out
jl
notb
and
lret
cmpsb
push
mov
mov
out
jmp
add
lcall
mov
sbb
inc
sub
lock
add
add
add
xor
inc
incl
jmp
or
pop
jp
jle
mov
inc
mov
sbb
add
cmp
cld
add
cltd
add
add
adcb
orb
insb
or
call
mov
pop
sti
sti
mov
jge
add
test
sti
and
test
incl
cltd
jmp
push
xchg
pop
bound
pop
mov
lods
lret
inc
scas
xchg
cltd
clc
or
xchg
add
dec
fisttps
fsts
cmpsl
int3
rep
mov
jmp
pop
enter
outsl
lea
aad
out
or
in
imul
jb
add
test
add
add
js
ljmp
leave
sbb
jo
je
mov
cmp
je
cmp
jne
jmp
dec
aam
sub
cltd
push
mov
int3
scas
or
add
push
mov
iret
stos
pop
fadd
pop
into
test
lret
mov
pop
test
je
mov
mov
inc
mov
jmp
test
je
jne
les
test
out
xchg
push
pushf
sti
push
mov
inc
inc
jmp
scas
xor
pop
enter
fwait
cmp
mov
lds
jns
jmp
cmp
mov
rorl
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
addr16
adc
or
mov
dec
mov
push
cli
xorb
add
add
jnp
mov
fcomps
mov
xor
xor
cmp
sete
mov
jmp
popf
ret
aas
hlt
mov
test
jmp
mov
or
outsl
mov
xchg
repnz
incl
xor
inc
xor
jmp
adc
push
mov
inc
jecxz
incl
test
jne
mov
jmp
orl
push
mov
cmc
gs
adc
pop
cmp
cwtl
dec
test
je
movb
inc
jmp
cmp
add
add
test
add
add
add
add
cmpsl
aaa
push
mov
xorb
cmpl
je
mov
addl
mov
jmp
adcl
and
sub
js
test
jmp
lret
xchg
xchg
inc
es
mov
fsubl
mov
inc
push
lds
xchg
gs
out
adc
xor
or
push
test
jge
add
cmp
je
cmp
je
jmp
loope
out
mov
mov
xchg
std
test
sti
jmp
std
popa
icebp
nop
arpl
mov
cltd
leave
pop
lret
scas
pop
repnz
pop
mov
jmp
lret
scas
xor
cmp
xor
mov
jns
bndldx
add
add
add
add
mov
inc
mov
push
jnp,pt
incl
mov
jmp
std
inc
test
andb
or
pop
bound
mov
add
add
add
mov
test
lock
in
mov
sub
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
jmp
dec
and
adc
inc
incl
jmp
sbb
or
dec
fistpll
fstpt
sbb
loopne
pop
test
je
jne
fcompl
scas
pop
mov
in
sbb
or
lret
cmp
dec
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
jmp
adc
jo
adcb
mov
push
outsl
mov
inc
rclb
sub
push
and
mov
add
inc
mov
jmp
insl
out
adc
dec
lcall
xchg
sti
ljmp
mov
inc
sub
fistl
cmp
jmp
dec
rclb
orb
sti
push
repnz
jb
pop
pop
test
je
andl
jmp
lods
lock
ret
push
jmp
mov
scas
lret
xchg
sbb
cmp
cli
dec
test
pop
mov
jmp
icebp
jno
pop
push
call
push
push
mov
call
add
add
push
cmp
je
mov
cmp
jne
jmp
loop
cmp
je
mov
lea
push
add
push
jmp
mov
fnstcw
stos
cmp
pop
or
pusha
mull
icebp
cmp
or
jmp
mov
mov
cs
lds
cmpsl
push
mov
sahf
jbe
repnz
jecxz
call
add
scas
add
add
mov
adc
insl
pop
dec
leave
adc
push
lea
call
mov
add
dec
jmp
sub
flds
mov
out
mov
dec
mov
pop
ljmp
inc
clc
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
jmp
cmp
mulb
push
movsb
aas
scas
lret
test
ljmp
mov
lds
sbb
jmp
mov
pop
fisttpl
flds
jno
addr16
push
ds
pop
pop
leave
ret
jmp
push
aad
sub
aas
pushf
sbb
jmp
fwait
sbb
mov
add
add
jne
call
jmp
test
jmp
cmp
jne
je
fistpl
stos
data16
popa
jmp
aas
mov
addb
add
add
jp
cmp
lret
lret
aaa
cmpsl
ret
sbb
add
jbe
adc
mov
call
sub
push
push
call
add
cmp
jne
call
mov
cmp
je
call
add
add
add
xor
dec
movsl
divl
bound
add
call
lcall
cmp
jmp
jmp
cwtl
xor
xor
scas
inc
clc
imul
insl
push
ss
pop
call
jmp
mov
cwtl
or
xor
pusha
mov
mov
and
jno
out
lock
call
jmp
loope
in
jle
in
out
jno
adcl
push
fadds
fs
inc
fimuls
pop
pop
out
push
call
add
jmp
rcrl
pop
in
pop
adc
cmp
je
inc
inc
cmp
jmp
adc
data16
insl
hlt
pop
mov
dec
loope
push
cwtl
mov
je
jne
stos
cmp
and
roll
aad
jae
call
add
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
jmp
cmc
push
lds
mov
les
mov
inc
mov
add
adc
jne
inc
inc
cmp
jne
jmp
xchg
push
leave
lea
call
shr
add
add
movsb
in
sbb
pcmpeqw
popa
add
sbb
jle
outsl
or
out
cmpsl
pop
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
jmp
inc
rcll
das
sub
aas
pop
test
fisubrs
or
mov
jmp
mov
jmp
sahf
sbb
inc
shll
mov
and
inc
int3
inc
and
pop
pop
leave
ret
jmp
orl
decb
sub
jbe
popa
inc
xchg
jnp
aam
ror
mov
test
cmp
cld
incl
mov
cmp
je
cmp
je
inc
cmp
jne
inc
jmp
aam
iret
stos
pop
xchg
pop
lret
scas
pop
mov
jecxz
push
in
inc
push
imul
add
add
outsl
or
mov
or
dec
jecxz
push
in
mov
inc
inc
aad
ret
jne
jmp
sub
inc
jmp
je
jno
jecxz
cmp
std
push
sbb
mov
call
mov
cmp
jne
xor
jmp
scas
fdivrp
push
mov
call
mov
pop
cmp
jmp
test
mov
es
adc
sub
sbb
jl
jle
jne
jmp
inc
fldt
jns
mov
mov
and
movsb
cmp
jne
jmp
cmp
or
mov
sbb
push
call
add
test
pop
cwtl
push
imul
stos
add
push
sub
add
add
inc
shlb
out
mov
int3
xchg
xor
cmp
push
sete
push
push
call
add
mov
add
jmp
test
cmpsl
ret
push
int
and
jl
inc
lea
jmp
sahf
push
pop
imul
lds
mov
xor
jmp
inc
pusha
inc
adc
add
lcall
add
cmp
jb
jmp
adc
mov
mov
cmpl
jne
push
xor
jmp
jmp
fwait
aas
scas
lret
insl
into
pop
cmp
push
iret
dec
cmpsb
dec
xor
inc
mov
pop
ret
jmp
mov
jmp
add
adc
mov
pop
jp
jno
pop
les
incl
ret
jmp
cmpsl
and
sub
push
cmpsl
xor
roll
pushl
incl
call
add
jmp
sub
jmp
pop
fimuls
test
jmp
ret
jmp
out
dec
inc
xchg
mov
mov
lea
sub
push
push
push
call
xor
xor
push
mov
pushl
mov
movl
mov
jmp
test
jmp
or
sbb
imul
ret
jmp
jae
aad
fmull
cmp
pop
lahf
sti
jmp
add
xlat
push
shlb
dec
lock
pop
pop
pop
pop
pop
mov
pop
push
ret
jmp
lahf
sbb
mov
push
jmp
dec
test
and
jmp
mov
xchg
dec
fdivrl
lea
mov
ret
jmp
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
jmp
out
std
test
cmp
adc
das
xchg
mov
mov
jmp
lds
mov
in
jle
dec
fisttps
bnd
iret
adc
pushl
push
call
add
xlat
pop
pop
jmp
mov
ror
iret
stos
pop
shl
cmp
add
jmp
lock
add
add
jo
cmp
mov
scas
mov
mov
mov
testb
jne
orl
movb
jmp
adc
xchg
cmp
jne
call
push
jmp
and
sub
cli
notl
popa
mov
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
jmp
cmp
es
in
jmp
fmuls
fsubrs
into
push
shlb
aas
lret
sbb
je
mov
jmp
fstpt
mov
dec
fstpt
jae
in
mov
pushf
sti
push
notl
mov
call
add
test
inc
or
mov
incl
test
jne
call
mov
jmp
or
sbb
fsts
shlb
xor
insl
cmpsb
cmpsb
lret
push
push
pop
pop
leave
ret
jmp
push
mov
cli
popf
insb
mov
es
mov
and
jl
rorl
push
mov
lea
cmpl
jle
lea
jmp
and
cmp
mov
pushl
jl
repz
mov
pushl
jns
aad
mov
jmp
sbb
or
jne
pop
lret
scas
pop
mov
cmpsb
inc
xor
lcall
lods
mov
ret
push
push
call
jmp
xor
adc
xchg
lea
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
jmp
and
fnstcw
xchg
add
jne
adcl
loope
in
mov
push
les
jecxz
mov
movzwl
jmp
or
push
xchg
pop
bound
leave
cmp
iret
popa
gs
filds
add
add
pop
cmp
jno
pop
xchg
adc
sbbl
in
push
push
mov
add
jmp
and
jmp
lea
test
push
test
push
xor
addr16
cmp
mov
or
add
je
sbbb
ljmp
repnz
rep
loop
je
scas
xor
cmp
je
cmpl
jl
cmpl
jg
jmp
pop
les
int3
mov
scas
pop
or
pop
xor
add
les
stos
pop
rorb
arpl
cmc
je
push
mov
inc
jmp
insb
int
and
push
cmp
bound
movsl
push
push
mov
jmp
ds
jne
fs
sbb
fiadds
xchg
add
add
rolb
dec
cmpsl
cmpsl
and
ljmp
sbb
dec
sbb
jmp
xchg
xor
jmp
jle
imul
jmp
repz
cmc
push
pop
and
push
sbb
cmp
jne
jmp
arpl
jns
jmp
outsl
out
adc
add
mov
inc
mov
push
pop
mov
and
incl
push
incl
dec
incl
sti
xor
test
add
add
inc
adc
add
add
sti
add
add
cld
xchg
test
cltd
scas
add
add
jecxz
cmp
jne
cmp
jne
jmp
ss
out
stc
cwtl
imul
or
mov
mov
mov
call
add
test
jne
incl
test
jne
call
mov
jmp
mov
cmp
jmp
mov
ficoms
sti
addr16
gs
pop
daa
mov
sbb
pop
roll
aad
aad
movl
jmp
ret
push
lret
mov
mov
push
scas
add
or
mov
add
add
sar
pushl
shl
jne
movzbl
movzwl
test
je
jne
xchg
push
xchg
repz
test
lods
pop
aaa
lods
and
add
inc
mov
inc
jmp
addr16
insl
hlt
pop
lods
adc
movsbl
sub
jmp
fdivp
add
adc
adc
or
cli
or
and
lcall
imulb
test
sbb
sbb
roll
add
jmp
sbbb
and
adc
pop
ret
ret
mov
dec
test
jne
cmpl
jmp
mov
mov
xor
aad
sub
pop
out
pusha
cmp
jae
orl
cmp
jb
jne
cmp
jbe
jmp
xlat
pop
lret
scas
pop
out
insb
loop
je
and
cmp
dec
xor
out
inc
je
cmp
jne
jmp
mov
ret
add
enter
push
in
inc
lds
iret
sub
pop
cmp
je
cmp
je
movl
jmp
stos
testb
adc
xchg
adc
stc
fwait
and
mov
add
add
push
add
jmp
popf
pop
pop
and
test
call
push
les
arpl
cmc
adc
test
jge
sub
jge
je
dec
adc
dec
sbb
jge
add
jmp
push
jno
jecxz
jmp
mov
push
shll
insb
pop
push
mov
sub
cmp
movsbl
ja
sub
jmp
lds
or
sbb
outsb
cld
fwait
jbe
addr16
cld
fwait
jbe
xor
xor
jg
mov
cmp
push
lahf
push
jae
loope
xor
test
pop
scas
dec
call
push
mov
es
jmp
sti
imul
adc
rorb
into
add
add
test
mov
jg
js
ljmp
push
add
inc
jmp
aas
movsb
cmp
sbb
pop
jp
ds
iret
lods
popf
sbb
jg
rolb
stos
and
je
cmpl
jmp
sbbl
shlb
jnp
mov
ja
js
ljmp
je
or
mov
sahf
push
rolb
rolb
ret
dec
lret
jmp
int3
stc
lds
cld
jbe
jmp
and
dec
popa
out
adc
push
or
sbb
push
call
add
mov
xor
add
push
push
pushl
call
add
ss
call
add
xlat
add
inc
cmp
jl
pop
jmp
enter
dec
mov
ret
ret
add
sbb
cmp
aam
call
clc
cmp
jae
mov
test
je
call
jmp
imul
cmpl
inc
cld
jmp
mov
xchg
repz
in
test
into
inc
aam
dec
test
notb
cmpb
je
jne
mov
xchg
repz
ljmp
into
inc
shlb
and
add
in
sbb
xchg
aas
adc
pop
les
int3
jae
call
add
add
add
test
fcomp
pop
jmp
mov
sar
clc
lahf
push
pop
iret
pop
cmp
jo
mov
xbegin
mov
jmp
xchg
xchg
adc
out
dec
push
push
inc
mov
and
icebp
sbb
add
jmp
pusha
hlt
push
cld
adc
mov
jns
das
fiadds
dec
mov
and
cmpb
je
mov
andl
jmp
mov
push
jmp
inc
fisttps
fsts
popa
icebp
nop
arpl
adc
add
sub
hlt
push
cld
push
ficoml
mov
lods
xor
xor
mov
xchg
and
xchg
inc
mov
andl
jmp
andb
shlb
test
faddl
mov
mov
jmp
stos
sub
iret
pop
cmp
xor
dec
frstor
pop
inc
rclb
and
loop
mov
inc
sbb
je
negl
jmp
pop
fstpt
sub
sub
out
fs
popf
insb
mov
lea
jmp
pusha
jmp
popa
loop
nop
pop
clc
mov
jmp
sub
mov
scas
leave
cmp
adc
adc
inc
ja
and
add
jmp
jb
xchg
testb
aaa
popa
inc
cmp
jl
xor
jmp
and
lahf
adc
jge
je
insl
cmp
dec
rcrb
call
xor
call
cmpl
jne
lea
jmp
xor
mov
aad
or
sahf
jae
decb
mov
pop
jmp
fisttps
mov
sub
pop
adc
popa
icebp
nop
arpl
pusha
mov
shr
imul
mov
inc
mov
rorl
mov
inc
sub
je
loope
ret
jmp
out
jne
mov
jbe
jle
call
cwtl
imul
xchg
mov
pop
std
mov
push
pushl
add
call
pop
pop
test
je
jmp
adc
rcll
inc
ret
xchg
popa
call
test
push
mov
mov
call
add
jmp
inc
lds
iret
sub
pop
cmp
lods
sub
lds
push
pop
xchg
lods
cmp
les
sti
pushl
cmc
popf
sub
push
push
call
jmp
cmp
xor
mov
test
xchg
lea
jmp
cs
call
movsl
inc
jmp
rcll
pop
mov
popa
icebp
nop
arpl
cmp
call
add
jmp
xchg
jns
call
or
inc
add
jg,pt
gs
ss
rclb
ficoms
mov
xor
inc
mov
xor
call
add
call
push
call
push
call
pop
pop
jmp
cmp
jmp
sub
inc
rcll
push
mov
mov
jbe
jp
in
add
mov
mov
and
out
jge
je
and
bound
call
ret
jmp
or
jnp
xor
cmp
ds
test
or
mov
jmp
push
call
pop
mov
cmp
jne
push
push
call
jmp
aad
frstor
push
movsl
adc
pop
cwtl
xor
jmp
xchg
outsb
rol
pop
iret
stos
pop
into
das
mov
inc
mov
insl
sub
call
pop
mov
cmp
jne
call
movl
jmp
push
lcall
and
mov
fistpl
fbld
add
pop
setne
add
mov
jmp
dec
stos
cmp
pop
xchg
rcl
call
jmp
lea
loopw
stc
call
pushl
xchg
pop
bound
stos
data16
xchg
or
jp
fimuls
pop
popf
iret
in
add
add
mov
jmp
add
sbb
imul
push
stos
mov
data16
add
pop
fimull
fidivrl
inc
mov
jmp
jmp
mov
mov
jmp
pop
enter
push
mov
pop
mov
loop
lea
jmp
cwtl
adc
mov
dec
mov
test
xchg
mov
lock
ret
jmp
pushl
jmp
cmp
pusha
in
bound
dec
sub
clc
lahf
push
test
xor
pusha
mov
add
push
call
pop
test
jne
push
call
pop
jmp
push
mov
mov
xchg
leave
pop
into
test
out
jno
dec
lea
jmp
push
call
addr16
adc
mulb
push
test
cld
incl
pop
pop
ret
jmp
adc
cmp
push
mov
push
push
mov
mov
xor
push
cmp
je
call
je
jne
dec
roll
shll
inc
fmuls
fsubrs
push
xor
addr16
lahf
push
test
fildl
in
pop
std
incl
rclb
mov
cmp
je
cmp
jne
mov
cmp
je
jne
loop
adc
sub
mov
shll
mov
les
add
ret
je
cmp
jne
je
adc
aas
fdivrs
jp
sti
pop
into
test
out
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
loopne
out
popa
fists
cmp
jne
push
call
pushl
call
pop
pop
jmp
loope
icebp
nop
arpl
imul
add
jmp
adc
sub
add
cwtl
ss
icebp
mov
cmp
je
cmp
jne
push
call
pushl
call
jmp
enter
push
mov
stos
cmp
inc
mov
cmpsb
shll
xor
push
call
pop
jmp
or
dec
inc
pushl
jmp
idivl
test
lods
sub
dec
fistpll
jnp
pop
jmp
jb
xchg
cmc
add
dec
inc
fs
call
pop
pop
jmp
push
xchg
pop
bound
aad
mov
jmp
cli
jbe
cmpl
dec
fidivrs
call
fadds
mov
mov
call
jmp
jg
bound
mov
sbb
test
in
sbb
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
jmp
aas
repnz
jmp
call
mov
add
jne
push
call
pushl
call
pop
pop
jmp
cs
test
cld
je
mov
jmp
and
cmp
ds
test
and
pop
addr16
inc
or
add
add
fisubrl
incl
add
inc
mov
enter
out
movsl
jo
jle
call
sbb
movl
je
orl
jmp
popf
add
std
or
out
out
mov
in
call
cmpsb
mov
mov
cmp
je
cmp
jne
push
call
pop
jmp
inc
fimuls
dec
test
adc
dec
or
push
call
pop
pop
pop
pop
jmp
addr16
push
stos
cmp
sub
leave
push
mov
pop
jp
jmp
out
jae
xchg
push
js
ljmp
dec
jmp
mov
rorb
lods
add
add
jmp
pop
fisttps
pop
divl
xchg
mov
pop
push
movl
call
add
je
mov
test
je
jne
xchg
adc
jp
jp
inc
push
xor
daa
orl
cli
or
and
add
test
je
push
call
jmp
xor
lret
inc
shll
call
jmp
sbb
loope
cltd
push
and
pop
aas
lret
leave
js
or
cmpl
je
mov
test
jmp
imul
sbb
add
jb
xchg
xchg
in
sbb
adc
push
mov
test
je
push
call
jmp
xchg
add
std
or
pop
jmp
call
jmp
decl
jne
mov
jmp
mov
mov
and
arpl
imul
sbb
pop
jne
push
mov
push
call
mov
test
je
push
call
jmp
scas
aas
scas
lret
lock
popf
insb
test
adcl
test
or
mov
pop
pop
ret
jmp
dec
aad
sub
sub
test
rol
pop
test
in
jbe
cmpl
dec
fidivrs
insb
or
mov
mov
push
mov
push
mov
test
je
push
push
call
add
mov
test
je
push
call
jmp
in
call
out
adc
pop
dec
cli
ljmp
add
add
add
add
jmp
inc
lea
movl
call
dec
das
jmp
jl
jbe
loopne
daa
mov
and
icebp
mov
test
je
push
call
jmp
mov
mov
es
cs
xor
dec
mov
test
je
push
call
jmp
fstpl
stos
data16
aam
lret
scas
pop
mov
nop
jns
roll
or
je
push
fisttpl
fnstsw
gs
adc
add
jbe
loopne
das
fisttpl
jnp
add
inc
add
shlb
jmp
jp
test
incl
call
xor
divl
test
add
add
fists
pop
sti
add
test
pop
add
push
call
pop
pop
jmp
mov
mov
pop
ret
jmp
iret
inc
aam
dec
mov
mov
xor
sub
mov
jmp
inc
iret
pop
cmp
ds
test
clc
outsb
or
adc
movsl
mov
test
je
push
call
jmp
adcl
into
subl
and
inc
call
mov
call
test
je
cmpl
je
call
mov
test
jne
push
call
pop
jmp
roll
mov
call
pop
lcall
pop
lret
lret
push
call
pop
andl
lea
jmp
nop
add
std
or
loopne
jmp
jge
jle
jp
in
sbb
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
call
add
test
call
test
lcall
out
ljmp
push
pusha
pop
repnz
cli
pushf
mov
call
jmp
mov
xchg
mov
xchg
mov
mov
add
push
call
pop
pop
pop
pop
ret
jmp
sub
andb
shll
cmpsl
inc
cmp
jmp
insb
int
and
push
mov
addr16
lcall
call
mov
movl
jmp
mov
xchg
roll
inc
movsb
ss
inc
mov
ret
jmp
jge
je
addr16
stos
and
push
inc
xchg
mov
sti
jmp
push
roll
sarl
data16
adc
or
pop
and
aaa
loopne
stc
cmp
je
cmp
jne
push
call
pop
jmp
mov
jmp
inc
enter
outsl
rcrl
test
xchg
sahf
adc
push
fstpt
add
add
jmp
in
lock
bound
fs
jmp
into
inc
shlb
notl
sti
sahf
insl
adcl
sbb
jle
loope
mov
ret
jmp
pop
leave
pop
cmp
outsb
arpl
pusha
pop
repnz
cwtl
push
imul
lods
ret
jmp
mov
shll
or
pop
rclb
jbe
xchg
fmul
mov
ret
jmp
mov
andb
xor
js
add
cmp
fiaddl
dec
in
mov
jg
cmp
sub
je
sub
je
sub
je
dec
je
xor
ret
jmp
je
jle
call
out
sbb
jbe
jmp
shlb
xorl
movl
dec
jns
cmpsb
cmp
lea
jmp
mov
fisttps
add
jne
push
ror
mov
cli
pushl
push
push
lea
push
push
push
call
jmp
rclb
mov
daa
inc
mov
test
mov
jg
adc
add
rorb
jle
add
jmp
xor
push
jmp
sbb
dec
push
xlat
inc
and
ss
push
mov
les
loope
mov
call
in
sub
call
xor
mov
push
push
lea
push
pushl
call
add
movl
rorb
dec
pushl
rorb
incl
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
jmp
mov
xchg
icebp
add
inc
push
pushl
lea
jmp
es
cmp
mov
pop
xchg
add
sahf
jo
sub
pushl
lea
push
push
push
lea
push
push
pushl
push
call
jmp
stc
jbe
cmpl
xchg
add
jnp
jne
mov
dec
sbb
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
call
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
jmp
push
movzwl
jmp
xor
call
mov
popf
push
jge
push
push
push
lea
push
push
pushl
push
call
add
xor
jmp
scas
cmp
mov
mov
and
cwtl
imul
add
push
mov
push
xor
lea
push
push
call
xor
jmp
in
out
jo
mov
xchg
sub
in
jle
lea
jmp
popf
push
xchg
repz
mov
inc
out
fisttps
add
dec
xor
mulb
inc
add
push
ret
cmpsb
push
in
and
test
je
orb
mov
jmp
jo
arpl
cmc
inc
adc
out
mov
jmp
imul
cmp
push
cmpsb
or
pop
leave
test
lea
test
sbb
jmp
mov
pop
xor
pop
call
leave
ret
jmp
mov
mov
gs
pushf
outsl
mov
es
mov
push
mov
jb
jmp
xchg
mov
dec
jnp
test
sbb
add
cli
or
xchg
add
jbe
xor
push
aam
sub
test
test
cli
lcall
leave
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
mov
in
std
xchg
orb
in
jbe
cmpl
imull
add
scas
aas
pop
test
cld
rsm
insb
in
sbb
cmp
inc
sub
mov
jmp
mov
mov
test
mov
std
or
and
inc
sbb
add
add
add
add
xchg
testb
dec
xor
ljmp
test
jmp
cmp
cld
jo
xorl
enter
cld
push
call
jmp
push
lret
pop
ds
movsb
xor
out
arpl
jl
incl
cmpl
je
jne
push
sahf
or
cmpsb
add
sti
movsb
push
mov
xchg
or
xchg
inc
cmp
jb
jmp
fisttpll
mov
movsl
int3
aas
aad
xchg
add
sahf
cmp
movb
jmp
imul
add
push
aas
add
jg
xlat
mov
jmp
daa
mov
jb
js
ljmp
inc
mov
push
jmp
arpl
xchg
testb
push
out
or
cmpsl
mov
add
dec
fdivrl
shlb
inc
and
pop
ret
mov
xchg
cwtl
mov
incl
je
test
je
jne
addb
repnz
lahf
sbb
jle
mov
inc
cld
jmp
fstpl
test
mov
mov
pop
fisttps
lock
pop
andl
mov
mov
jmp
xor
daa
inc
mov
lcall
mov
inc
mov
lret
dec
cs
ret
jmp
js
add
cmp
mov
inc
mov
iret
inc
xlat
mov
stos
push
lds
lahf
decl
lahf
incl
mov
push
call
add
cmpb
fdivl
in
push
fisttpll
out
jg
mov
cmp
lcall
call
scas
mov
call
call
shlb
call
pop
jmp
call
jmp
sahf
call
jmp
xchg
pop
xchg
repnz
mov
ret
into
test
xor
sbb
sar
jmp
icebp
cmpsb
loopne
ret
jmp
push
lea
jmp
dec
fimull
fidivrl
xor
xor
dec
dec
fimull
fidivl
data16
popa
add
push
lcall
lcall
jne
ret
jmp
mov
mov
pop
leave
ret
jmp
or
add
sbb
mov
cli
sub
mov
test
add
add
add
call
add
add
cmp
daa
mov
and
push
cli
jb
or
pop
cld
je
mov
andl
jmp
mov
pushf
cmp
add
mov
hlt
and
aad
in
jle
cli
jp
dec
int3
inc
and
pushf
sti
push
lock
dec
jmp
jle
cmp
jne
mov
mov
movl
jmp
or
cmp
fstpl
scas
pop
mov
add
ljmp
xchg
or
jne
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
add
pop
cld
je
mov
andl
jmp
lret
inc
xlat
mov
lods
cmp
push
mov
sub
jmp
jne
insb
or
mov
push
xchg
add
lcall
lcall
fistpl
jb
cmc
mov
pop
pop
xor
pop
call
jmp
push
xchg
jb
insl
mov
fld
dec
frstor
jne
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
jmp
aad
aad
dec
movsl
sbb
xor
cmp
or
test
or
jmp
mov
mov
sbb
pop
into
pop
cmp
xor
cmp
inc
shll
push
lea
push
push
call
jmp
jge
jle
call
insb
lahf
insb
in
in
mov
add
add
jg
jmp
call
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
in
adc
cmp
enter
cmp
jmp
sbb
lahf
add
mov
fdiv
push
cmp
jbe
ja
lock
loop
je
pop
push
xor
jns
into
or
add
add
adcl
test
inc
or
ret
inc
push
mov
orb
inc
dec
jne
mov
call
jmp
outsb
repz
cmc
adc
sbb
or
mov
jmp
xchg
xchg
repz
in
push
pop
scas
sub
xchg
mov
cmpb
jne
jmp
int
testb
push
add
adc
pop
inc
and
cmp
add
mov
test
jmp
sti
jno
xorb
jno
xorb
hlt
push
cld
sbb
xchg
mov
add
imul
mov
lea
mov
jmp
call
jne
incl
add
cmpl
mov
jmp
cmpsl
sub
dec
fistpll
outsl
or
repz
mov
and
ds
call
add
decl
call
add
ljmp
add
add
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
cmp
jmp
aaa
movsb
cmp
pop
ja
jne
out
dec
sub
mov
jno
je
movzbl
movzbl
jmp
test
mov
mov
or
movzbl
inc
jmp
jge
jns
jmp
adcl
sti
insl
std
test
push
lret
pop
ds
aaa
faddl
loopne
call
xor
cmpsl
inc
push
sti
sbb
mov
scas
adc
add
sbb
and
mov
cli
or
call
add
push
call
add
decl
or
aaa
xchg
adc
test
jge
and
xchg
repz
cmpsl
les
add
add
add
stos
cmp
sbb
lahf
dec
jno
test
jmp
sub
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
int3
push
mov
icebp
nop
arpl
push
lock
ja
mull
icebp
js
andl
add
mov
outsl
lcall
inc
daa
shlb
inc
shll
push
aaa
ret
orb
inc
jmp
ljmp
outsb
xchg
sub
push
movsb
dec
stc
or
xchg
popa
add
sarb
decl
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
xor
push
cmp
cs
mov
ret
jmp
and
mov
mov
imul
add
jmp
xor
mov
sub
cmp
jb
jae
dec
int
and
cmp
push
lds
or
lea
jmp
inc
iret
pop
cmp
sbb
mov
add
mov
and
xchg
push
call
pop
movl
jmp
nop
sbb
test
ret
or
push
shll
je
leave
ret
jmp
pop
ret
rclb
enter
pop
lods
fisttps
movsb
push
repnz
mov
aad
dec
scas
mov
ret
jmp
and
sbb
push
xor
and
jmp
movsb
pop
cld
call
loop
cmp
cmpsl
aaa
push
mov
in
pop
stos
subb
lcall
pushl
shr
enter
push
stc
inc
test
xchg
pop
pop
leave
ret
jmp
call
inc
jmp
in
jnp
mov
stos
cmp
add
jno
in
mov
jmp
mov
mov
lock
lret
or
rcrb
add
add
add
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
jmp
sbb
sub
movb
and
xchg
push
rolb
rolb
push
ds
sbb
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
jmp
pop
jecxz
push
in
xor
sub
pop
fstps
test
push
adc
test
jmp
mov
scas
leave
cmp
in
mov
inc
adc
or
pusha
push
inc
and
ds
jmp
mov
jmp
scas
mov
cli
add
cmp
jmp
pop
cltd
or
ja
add
setg
or
sbb
mov
jmp
ret
mov
mov
and
pop
fisttpl
fnsave
dec
loopne
jmp
dec
adc
shll
pushf
mov
decb
jne
mov
and
jmp
stc
jne
mov
push
int
mov
jmp
add
push
je
out
pop
dec
fdivrs
add
mov
sar
jmp
fimuls
push
mov
outsl
std
insl
hlt
pop
mov
test
mov
jmp
inc
mov
mov
lea
jmp
push
lahf
punpckhdq
insl
pushf
je
pop
into
test
pop
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
jmp
mov
daa
clc
cmp
je
mov
mov
cmp
jne
mov
jmp
mov
fsubrl
or
jbe
cmpl
cmp
jbe
mov
jmp
data16
ret
mov
jmp
inc
fisttps
fstps
push
mov
insb
or
mov
shl
leave
jns
jbe
push
pop
jmp
fiadds
mov
jmp
adcb
xorb
mov
push
add
add
stos
cmp
sub
pop
ffreep
inc
aad
dec
cltd
xor
call
pop
add
dec
cld
add
mov
mov
mov
mov
mov
mov
jmp
lcall
insl
std
test
mov
loopne
out
jmp
jbe
gs
pop
xchg
xchg
icebp
add
out
notb
dec
sub
aaa
pushf
xchg
imul
and
mov
shr
not
and
decb
jne
mov
and
jmp
in
repz
and
jmp
inc
lret
pop
ds
lcall
xchg
add
xor
dec
add
dec
or
test
inc
ret
add
add
sbb
decl
dec
adc
shll
pop
mov
test
decl
jmp
xor
clc
mov
mov
jmp
mov
cli
add
sub
dec
xchg
jmp
jne
mov
and
jmp
push
lahf
punpckhdq
and
shll
adc
add
add
popf
or
sbb
mov
jne
cmp
je
jmp
std
out
rcrl
loop
pop
xchg
mov
sub
pop
daa
push
fisttpll
movsb
push
mov
pop
lock
mov
or
jmp
and
lea
jmp
xchg
pop
xchg
repnz
pop
lahf
repz
insl
mov
dec
incb
out
mov
mov
shr
lea
or
jmp
mov
inc
or
add
add
sbb
add
add
mov
rorl
jb
in
mov
jae
pop
jmp
pop
rclb
xor
movsb
sbb
sbb
and
lret
add
add
mov
or
jmp
push
lret
lret
mov
dec
roll
shll
pop
out
leave
cmpb
jne
lea
mov
shr
mov
or
jmp
popa
das
xor
add
jmp
das
mov
inc
mov
pop
leave
test
out
pop
stos
cmp
sub
xchg
loope
call
mov
add
decl
cmp
jmp
out
dec
ret
shl
imul
insl
mov
aaa
rcrl
or
mov
imul
mov
sub
lea
push
lea
push
jmp
mov
cmpsb
mov
lahf
cli
or
movb
inc
test
cltd
inc
inc
cmpl
jne
push
push
pushl
call
mov
pushl
push
call
add
dec
lods
cld
incl
jmp
mov
sahf
stc
or
push
cltd
or
jo
rolb
shlb
sub
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
jmp
jo
imul
pop
cmp
shlb
lret
cld
mov
mov
mov
decl
jne
mov
test
je
mov
call
add
inc
add
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
jmp
outsl
out
adc
or
push
loopne
loop
je
js
imul
lar
add
add
sub
and
and
cmp
add
add
imul
add
jmp
cmc
fs
popf
insb
scas
mov
mov
and
lods
cmp
cmp
sub
rcrl
pop
mov
push
mov
add
data16
mov
das
mov
mov
cltd
xor
fldcw
rolb
adc
add
add
stos
je
jmp
push
xor
push
push
push
push
call
add
adc
add
add
call
xlat
fiadds
mov
clc
imulb
insl
push
call
add
and
cld
incl
mov
cmp
je
jne
sbb
push
jno
sub
jbe
loopne
cmp
fimull
add
jmp
or
test
push
mov
jmp
fbld
xchg
gs
add
inc
lds
iret
sub
loop
pop
loop
lods
ret
jmp
fstps
xchg
mov
jge
jl
mov
movsb
ret
fidivs
mov
dec
mov
xchg
xor
add
inc
jmp
inc
lret
lret
mov
inc
mov
pushf
adc
in
sbb
ja
insb
or
call
dec
or
mov
push
xor
jmp
jmp
sti
sahf
insl
popl
xchg
icebp
add
mov
test
sti
movsl
clc
sub
add
add
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
jmp
cmp
inc
mov
rorl
adc
add
add
add
jmp
imul
sub
pop
xlat
inc
xlat
mov
lods
clc
jnp
sti
lea
mov
cmp
ja
mov
sub
shr
jmp
mulb
xchg
popa
test
push
xor
daa
cwtl
adc
aad
sub
sub
jno
mov
add
jmp
push
xchg
add
and
into
rorb
mov
lea
jmp
stos
cmp
mov
dec
mov
pop
test
xchg
iret
cld
incl
test
jne
or
jmp
mov
movl
jmp
xchg
or
outsb
int3
inc
and
mov
sub
incl
add
lea
mov
lea
movl
jmp
sbb
xor
and
mov
jmp
dec
sub
push
imul
mov
incl
mov
orl
mov
jmp
mov
mov
mov
inc
mov
mov
int
sbb
add
adc
add
test
decl
loopne
adc
inc
notb
test
dec
or
testb
lea
movsb
cmp
inc
shlb
or
mov
mov
jmp
xor
push
lds
lods
and
insb
loop
je
pop
negb
or
jne
pushl
push
call
add
sub
addr16
pushl
xor
fwait
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jmp
hlt
data16
xchg
outsb
xchg
jnp
in
push
and
test
ret
add
not
and
mov
jmp
pop
leave
jmp
imul
psubd
pop
stos
cmp
mov
scas
movsl
sub
pop
jbe
subl
jmp
lods
cmp
in
sbb
dec
pushf
push
xchg
repz
ljmp
add
inc
mov
mov
js
jmp
popf
or
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
jmp
scas
movsb
ret
xorl
ds
out
sub
arpl
jmp
jnp
jne
out
inc
nop
adc
fisttpll
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jmp
addr16
pop
ds
add
cmp
insb
pop
xchg
add
sub
test
decl
test
jmp
jo
loop
cmp
scas
sub
push
aad
dec
add
dec
or
jno
mov
mov
jmp
add
test
jge
insb
pop
adcl
jb,pn
lds
push
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
jmp
jp
insl
hlt
pop
in
lds
movsb
push
mov
sbb
subps
pop
add
pop
or
movl
out
jo
cli
jno
xorb
mov
inc
mov
lahf
testb
add
mov
stos
repz
ficomps
xorl
add
clc
jne
mov
std
cmp
lea
add
mov
sub
lea
mov
lea
mov
jmp
mov
sub
repnz
notb
nop
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jmp
mov
mov
sbb
mov
mov
das
mov
sub
js
rcrb
mov
inc
decl
stos
mov
and
add
mov
mov
push
xchg
repz
out
cltd
or
ds
jecxz
aas
stos
cmp
pop
aad
out
jle
mov
mov
sar
dec
lea
cmp
jmp
sub
aaa
lods
cmp
out
jl
testb
stc
jl
mov
lea
mov
jmp
adc
pop
adcb
xorb
scas
cmp
mov
aaa
outsb
testb
jbe
push
jmp
cmpsb
cmp
insl
std
test
in
aam
dec
leave
fscale
fistl
in
adc
mov
lea
not
and
decb
jne
mov
and
jmp
pop
jmp
in
insl
std
test
sub
add
add
pop
adc
addl
adc
lock
bound
in
outsl
rcrl
test
ret
add
add
xchg
shr
mov
lea
not
and
decb
jne
mov
and
jmp
dec
stos
xor
push
mov
mov
lea
mov
mov
jmp
mov
std
test
inc
outsl
xchg
jle
insl
stc
imul
add
aas
in
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jmp
test
xchg
push
test
push
lock
je
out
pop
or
test
in
call
inc
xor
jo
rolb
popa
imul
cmp
push
push
jge
or
jmp
aad
repz
gs
xchg
add
xchg
jb
imul
pop
inc
and
cmp
mov
lea
mov
mov
jmp
xchg
sbb
rorl
leave
ret
jmp
ds
jmp
sbb
add
std
or
roll
mov
mov
test
lods
mov
lea
mov
jmp
cwtl
or
mov
inc
mov
mov
aam
fdivl
dec
or
push
loopne
in
jg
push
ret
ret
jg
mov
in
cmpsl
int3
rorb
add
bound
add
int
lds
dec
mov
ret
ds
or
cld
add
mov
sar
dec
cmp
jbe
push
pop
jmp
cmp
adc
jne
mov
jmp
push
roll
aad
jecxz
adc
xor
insl
hlt
pop
lods
movl
add
mov
mov
cmp
jbe
push
pop
jmp
xor
je
xchg
cmp
jae
jb
mov
popf
aam
in
jg
loop
notb
lea
lea
jmp
lea
shr
lea
not
jmp
lcall
mov
out
cmc
pushf
outsl
std
dec
lret
xorb
add
fstl
pop
or
out
decl
xchg
add
jp
loop
pop
loop
sub
mov
and
jmp
enter
push
mov
andl
sbb
xchg
xor
xor
jmp
je
add
shll
pop
nop
inc
decb
jne
mov
and
jmp
push
fisttps
fldcw
xlat
inc
and
xor
add
ja
mov
mov
mov
add
mov
sar
dec
cmp
jmp
jg
addr16
sbb
inc
es
jno
xchg
testb
out
cmp
pop
decl
add
push
decl
xchg
decl
xchg
add
add
mov
fildll
outsl
jl
mov
shr
or
jmp
mov
mov
jmp
dec
fldt
dec
fidivrs
cwtl
decl
leave
lret
jge
jbe
dec
or
add
dec
add
pop
or
or
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
jmp
pusha
mov
jmp
lret
arpl
xchg
gs
repnz
xchg
outsb
xchg
jge
add
lea
mov
jmp
lea
mov
sbb
cmp
jp
ja
loope
clc
jp
ret
lea
mov
jmp
notl
mov
cmc
les
aaa
cmpsl
ret
ljmp
add
pusha
dec
xchg
pusha
call
jmp
fists
nop
les
add
lea
jmp
pop
push
xor
dec
rolb
shrb
cld
xchg
cmc
add
and
shr
or
jmp
mov
jmp
sbb
mov
xchg
mov
das
sub
or
jns
jmp
sub
stc
setnp
out
jmp
fidivrs
test
dec
out
jl
divb
rolb
rolb
dec
push
jne
mov
mov
shr
mov
or
jmp
into
push
ret
cmpsb
push
mov
xchg
mov
pushl
not
ljmp
add
ficomps
stos
xchg
fsub
gs
pushf
outsl
test
popa
push
int3
outsl
insl
xor
cmp
jne
je
dec
leave
pop
cmp
sub
pop
and
cmp
mov
jnp
cwtl
cmp
cli
jne
add
jmp
dec
ret
ret
lahf
punpckhdq
pop
stos
bound
imul
inc
add
dec
jg
xchg
mov
mov
and
and
or
jne
je
push
test
push
lret
mov
cs
insb
mov
jmp
mov
fistps
out
andl
pop
or
fnstenv
jmp
cmp
jmp
dec
fimuls
push
fmuls
mov
mov
and
mov
mov
and
jmp
cwtl
setg
or
ds
pop
test
xchg
or
mov
cmp
jb
jmp
push
ret
ret
push
les
test
jmp
lahf
or
jg
mov
jmp
loope
jae
or
mov
mov
mov
jmp
filds
mov
icebp
aaa
scas
aas
pop
test
lock
adc
pop
incl
lea
mov
jle
jb
in
into
jae
xchg
clc
jmp
push
call
jmp
mov
cmc
push
fisttpl
fnstsw
insb
jb
jmp
mov
fildl
ja
add
adc
mov
dec
mov
jne
mov
jmp
xor
add
push
test
xchg
repnz
push
fdivl
in
jno
push
mov
jnp
add
add
mov
jmp
inc
int
and
push
dec
lret
pop
ds
gs
push
xchg
bound
iret
jmp
jae
xchg
cmc
add
fists
mov
sbb
ret
adc
aaa
push
xchg
add
gs
xchg
sbb
hlt
lcall
test
pushl
cld
xchg
cmc
add
jne
jp
in
das
aas
scas
aas
pop
test
inc
mov
cmp
jb
jmp
cs
add
xor
cs
mov
hlt
cmp
lds
cmc
mov
ret
jmp
adc
jns
mov
pop
lret
scas
pop
mov
jge
or
call
mov
mov
test
jne
xor
jmp
cli
mov
mov
mov
jmp
mov
mov
and
jno
jp
in
dec
inc
fisttps
fsts
inc
fisttps
fsts
pop
mov
mov
mov
cmpl
je
jmp
out
jne
mov
aam
cmp
je
mov
mov
jmp
push
enter
ja
jae
xchg
test
mov
outsb
jg
lcall
test
stc
decl
add
add
or
pop
add
sar
jmp
insb
or
scas
sti
data16
xchg
outsb
flds
jo
loop
lds
inc
and
and
or
jne
jmp
dec
jmp
mov
cmpsl
ret
leave
pop
ljmp
adcl
cld
add
xchg
or
add
jno
xorb
sahf
or
cmpsb
inc
addr16
adc
or
cmp
out
cmp
sbb
add
add
jmp
data16
sbb
cltd
push
outsl
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
jmp
aaa
mov
dec
mov
jns
imul
add
cld
jmp
jmp
xchg
adc
and
lret
loopne
jmp
dec
cld
jmp
cmpsb
mov
add
add
inc
aam
dec
scas
jno
fsubrp
shll
jge
add
dec
mov
jmp
test
xchg
icebp
add
aam
rcrl
mov
add
pop
or
mov
mov
jo
arpl
adc
jp
mov
jmp
jmp
jg
push
cld
pop
js
add
cmp
lahf
lret
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
ja
insb
or
call
inc
mov
mov
scas
pop
cmpsb
cli
test
mov
jmp
ret
mov
jge
testl
daa
mov
mov
jmp
xor
mov
or
push
lds
iret
push
mov
add
add
das
fidivrl
inc
cmc
xor
mov
jmp
sti
imul
adc
lock
bound
sti
pop
std
gs
pushf
outsl
pushf
jmp
jl
add
shll
sbb
jns
mov
decl
in
and
jmp
sub
mov
jmp
mov
jmp
cld
gs
pushf
outsl
fldt
sub
adc
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jmp
adc
push
xchg
jb
cmp
out
enter
scas
mov
jmp
data16
imul
daa
inc
mov
inc
loope
adc
data16
fiaddl
test
add
lea
mov
jmp
add
adc
mov
repnz
pop
repnz
popa
icebp
nop
arpl
dec
clc
jmp
cmc
je
lea
setg
or
mov
into
data16
jne
mov
mov
shr
or
jmp
adc
push
popa
nop
jle
push
ret
cmpsb
push
mov
sbb
cmp
mov
push
cld
jmp
inc
leave
pop
cmp
add
inc
add
mov
jmp
call
pop
mov
jmp
cmp
mov
aad
or
mov
test
add
add
inc
daa
sarb
les
mov
movsl
int3
aas
aad
fwait
or
outsb
dec
lret
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
andl
jmp
fmuls
mov
pop
ds
push
mov
and
inc
cld
call
jmp
xchg
xchg
adc
mov
mov
les
mov
jnp
jmp
int
into
test
aas
pop
test
clc
lea
jmp
popf
and
jmp
xor
push
xchg
mov
pusha
ljmp
stc
mov
xor
dec
and
lcall
jmp
or
add
cmp
mov
push
jmp
xor
mov
mov
mov
cmp
and
ss
inc
jmp
mov
mov
cmp
lock
lret
pop
ds
scas
sub
lds
mov
and
sti
lcall
and
inc
add
add
jmp
cmp
push
les
push
jl
incl
add
je
sbb
xor
inc
stos
xor
push
lret
mov
xchg
js
mov
push
mov
cmp
ja
jbe
fcompl
stos
pop
mov
ljmp
mov
mov
lea
lea
mov
shr
or
jmp
mov
call
jmp
xor
push
xor
add
jge
ljmp
stc
jecxz
adcl
rolb
jmp
add
sub
xchg
push
mov
shlb
call
push
call
pop
pop
jmp
push
test
jge
fs
repz
cmp
jmp
fisttps
push
mov
andb
xchg
add
sahf
pop
sarl
stos
insb
fwait
push
sub
jmp
xchg
sbb
pusha
push
mov
pushf
jnp
mov
call
add
add
add
inc
nop
pusha
pop
cmp
jne
push
call
jmp
into
pop
into
test
jmp
jge
jmp
in
je
insl
inc
sbb
jmp
inc
push
call
add
ljmp
xchg
outsb
leave
sbb
jl
push
lret
ljmp
add
add
cld
or
jmp
into
mov
jne
je
sub
sub
adc
incl
pop
xchg
popa
pop
test
jmp
inc
lret
pop
ds
xor
push
stc
fs
popf
insb
test
jmp
out
fidivrl
ret
cmpsb
push
aam
pop
int3
stos
data16
push
or
jae
por
lods
cs
xchg
add
jo
out
adc
or
pop
lret
scas
pop
mov
jne
inc
jmp
outsl
and
push
jmp
loopne
cmc
pushf
outsl
lds
mov
mov
sbb
dec
les
int3
jo,pn
test
jmp
cmp
push
fisttpll
out
idivb
je
imul
call
jmp
mov
pusha
notb
xor
dec
dec
xchg
pop
mov
pop
jmp
int3
inc
xlat
mov
mov
xchg
jle
mov
inc
mov
mov
in
out
call
jmp
loop
loopne
jb
aad
fidivrl
notl
or
cmp
je
pushl
call
jmp
jno
je
out
add
and
outsb
cld
fwait
jbe
jno
cli
sbb
jmp
js
test
je
mov
jmp
lret
sahf
pop
movsb
mov
inc
fidivrl
pop
rep
lcall
lretw
call
mov
jmp
in
jbe
cmpl
push
pushf
sti
push
mov
call
mov
jmp
ss
pop
ret
jmp
in
fs
jmp
stc
gs
pushf
outsl
les
pusha
pop
repnz
push
lcall
sbb
nop
les
add
lea
mov
and
and
or
jne
incl
mov
add
jmp
or
in
aam
dec
leave
jbe
dec
fstpl
fnstcw
pop
add
add
sahf
and
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
daa
movsl
xor
fimuls
add
mov
add
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
jmp
or
inc
les
int3
sub
jle
mov
dec
pop
push
call
add
add
add
add
inc
iret
pop
cmp
xor
mov
sti
incl
dec
fdivrl
or
jb
push
xor
sub
jne
movb
push
call
jmp
sbb
mov
lods
mov
lods
int3
inc
xlat
mov
mov
je
xor
push
push
push
push
push
call
jmp
or
inc
rolb
shlb
setge
push
push
mov
push
push
movb
call
add
call
sti
add
add
addr16
incl
pop
xchg
add
inc
xlat
inc
and
xor
pop
pop
leave
ret
jmp
popa
dec
jns
push
call
jmp
lea
sub
push
lds
jbe
xlat
fadds
incl
call
cld
dec
sub
imul
mov
jae
push
call
pop
cmp
je
push
call
pop
test
jne
call
add
je
jmp
xchg
cli
sub
inc
sub
insb
or
add
or
and
push
movsb
pop
push
push
call
add
test
je
push
push
push
push
push
call
add
jmp
repnz
loop
je
pop
lret
pop
ds
dec
rolb
sarb
dec
es
subb
mov
jmp
scas
xor
cmp
mov
dec
mov
mov
jno
add
call
add
test
je
push
push
push
push
push
call
add
jmp
int
frstor
mov
push
push
pop
mov
cmp
je
cmp
jmp
mov
mov
inc
mov
ss
inc
mov
push
repz
add
push
jp
pop
es
push
push
call
add
jmp
and
mov
and
aaa
push
mov
shll
ret
pop
sbb
imul
dec
jmp
test
add
mov
ljmp
add
add
fs
int
and
jb
aam
sub
inc
daa
sarb
loop
int3
ret
jmp
lea
jmp
shll
xchg
xchg
loopne
inc
shll
add
test
jne
call
add
jne
jmp
pop
roll
shll
inc
stos
mov
add
add
jmp
mov
aad
adc
mov
xorl
adc
add
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
add
cmp
bound
sti
sahf
insl
xorl
gs
add
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
xor
push
loope
xchg
push
pushf
sti
push
mov
call
jmp
in
jnp
mov
dec
rolb
shrb
insl
std
test
divb
shr
push
add
push
jmp
xlat
dec
fidivrs
inc
sub
je
xchg
add
mov
adc
jb
push
pushl
call
jmp
jmp
fistpll
shll
inc
mov
sub
incl
cmp
jb
push
pushl
call
pop
pop
test
jne
jmp
jecxz
notb
addb
jmp
xor
sub
pop
cmc
je
lea
roll
aad
jmp
call
in
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
jmp
fcmovnb
sti
add
xor
call
pop
mov
jmp
push
inc
and
ds
sbb
imul
xchg
add
jno
stos
pop
pop
jmp
xor
jmp
cli
ja
xorb
into
pop
cmp
sbb
adc
call
in
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
jmp
icebp
lea
jmp
sti
jnp
mov
adc
in
lea
jmp
je
imul
or
jo
lock
bound
mov
pop
das
inc
jmp
orl
dec
das
push
fcomps
shl
pop
dec
pop
ret
jmp
pop
clc
rorl
add
add
lcall
loopne
jb
out
jle
mov
sti
push
aad
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
jmp
std
imul
mov
mov
mov
mov
push
mov
mov
mov
cmp
jmp
cmp
cmovle
dec
sub
hlt
xchg
outsb
fdivs
cmp
shr
mov
nop
cli
popa
icebp
nop
arpl
pushf
add
cld
mov
jmp
fs
jmp
sahf
pop
xchg
repnz
push
mov
pushf
outsl
lea
jmp
andl
jns
dec
das
ficompl
std
insl
hlt
pop
shll
call
in
jmp
or
in
repnz
sahf
stc
or
dec
roll
aad
pop
cmp
xchg
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
jmp
aaa
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
jmp
jg
mov
popa
out
adc
push
jge
outsl
or
jmp
xorl
add
push
sub
push
mov
push
push
jmp
jns
mov
push
pushf
xor
inc
stos
daa
mov
and
clc
pushl
rcrb
out
decl
jns
add
push
in
clc
lahf
push
or
mov
stc
jb
mov
add
cmp
jb
jmp
lods
daa
mov
and
inc
enter
cmp
sub
in
mov
mov
xor
cmp
jmp
inc
rolb
sarb
mov
ret
sub
lea
pop
pop
ret
jmp
push
pop
aam
fstpt
and
mulb
inc
mov
sub
jb
jmp
or
insl
std
test
jle
jns
jmp
imul
xchg
mov
jmp
add
push
into
pop
cmp
pusha
and
push
icebp
popa
add
dec
scas
test
call
xor
lea
pushl
call
add
pop
mov
cmp
jb
pop
pop
ret
jmp
or
cmp
mov
lock
jmp
js
jp
in
inc
mov
cwtl
out
dec
ret
rcrl
xchg
lds
fimull
test
pop
test
cmp
les
mov
repz
orb
mov
push
sub
push
push
push
call
xor
jmp
hlt
jnp
mov
or
enter
push
mov
stc
jmp
xor
decl
cld
add
add
push
call
add
test
je
mov
sub
push
push
jmp
inc
push
xor
and
imul
adc
pop
cmp
sub
adc
ret
dec
fidivrs
jle
call
call
jmp
xor
in
popa
icebp
nop
arpl
ss
or
ret
ret
jmp
push
fmuls
fdivs
in
pusha
notb
mov
jmp
inc
roll
sarl
pushf
or
mov
xchg
mov
sub
incl
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
jmp
std
sub
arpl
incl
fisttps
pop
iret
pop
cmp
cmp
scas
inc
popa
add
pop
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
jmp
xlat
inc
shlb
push
xor
pushf
sub
mov
mov
mov
mov
jmp
add
jmp
pushf
outsl
les
jg
jmp
push
movsl
lea
jmp
pop
pop
jp
ds
fs
jmp
pop
lret
pop
ds
jge
ja
loope
pop
enter
into
fisttpll
lock
pop
pop
leave
ret
jmp
mov
add
jmp
lret
cltd
push
mov
sbb
or
cmpsb
jb
mov
jmp
sub
or
scas
cs
sub
mov
add
push
call
pop
mov
mov
pop
jmp
lock
mov
push
xlat
lea
jmp
push
jl
negb
loopw
pop
loop
rcrl
stos
pop
test
lcall
ret
jmp
aaa
mov
dec
les
int3
and
mov
xchg
jb
cmpl
je
push
call
jmp
push
fisttps
flds
jp
sbb
fs
shr
sub
inc
mov
pcmpgtb
pushl
mov
and
jmp
stos
cmp
cmp
mov
jecxz
je
lea
jo
xorl
add
pop
cmp
jae
cmp
je
jmp
jmp
insb
xchg
pop
xchg
repnz
mov
fwait
jnp
pop
dec
add
mov
push
mov
mov
mov
pop
ret
jmp
scas
xor
int
int
cltd
mov
push
mov
mov
mov
jmp
in
jbe
cmpl
popa
icebp
nop
arpl
xchg
push
pushf
sti
push
test
lea
jmp
dec
roll
sarl
xorb
add
das
lea
jmp
push
xchg
jb
cmp
xchg
mov
mov
xchg
adc
loopne
negl
sub
inc
lock
in
mov
push
jmp
or
mov
fistpll
mov
test
mov
pop
ret
jmp
push
jmp
arpl
jnp
in
add
push
cmp
sub
sbb
ret
cld
mov
int3
inc
add
jmp
mov
mov
jmp
xlat
push
shlb
call
shlb
mov
mov
jmp
bnd
jp
and
and
pop
mov
aam
popa
icebp
nop
arpl
mov
mov
call
add
push
add
test
icebp
imul
add
add
cmp
jb
jmp
cmp
jae
xchg
data16
push
cld
adc
insl
cs
pop
roll
aad
cmp
and
adc
outsb
or
cmp
insl
ss
clc
mov
jmp
cmpsb
xor
jnp
mov
test
shlb
adc
loope
je
or
repz
call
andl
pushl
pushl
call
add
add
add
scas
ret
test
aam
xchg
jp
jo
loop
pop
cmp
pop
ret
jmp
inc
fmuls
fsubs
fmuls
fdivs
add
mov
mov
xor
cmp
sete
mov
ret
jmp
push
movsb
mov
add
jne
push
call
shr
pop
inc
fimuls
push
fiadds
mov
jmp
pop
into
test
enter
mov
push
mov
mov
mov
jmp
push
sti
imul
jl
lret
pop
ds
lods
and
pusha
mov
les
gs
jmp
add
scas
pop
ret
jmp
dec
out
inc
jg
dec
lea
jmp
lock
xorb
jecxz
push
in
xor
int3
dec
fidivrs
jmp
fs
adc
push
sbb
int
aam
dec
jmp
movl
mov
call
ret
jmp
lea
jmp
cmp
clc
ja
xorb
fisttpl
fnstsw
popf
adc
xor
pop
ret
jmp
push
fimull
fidivl
pop
fisttpl
push
push
xor
es
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
jmp
sbb
pop
pop
pop
jmp
xlat
inc
fidivrl
sbb
sub
pop
pushf
mov
push
call
add
mov
jmp
push
imul
dec
adc
pop
movsb
jmp
or
add
add
xor
xor
inc
sbb
jne
cmp
jne
mov
jmp
dec
add
dec
mov
daa
shlb
and
inc
and
xor
sti
movsb
pop
add
add
add
xor
rorl
jmp
xchg
xchg
adc
cwtl
or
in
cld
rcrb
pop
cld
cmp
sub
ljmp
pop
mov
push
push
jmp
inc
fdivl
in
outsb
sti
imul
dec
or
inc
xchg
mov
pushl
call
pop
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
jmp
repnz
ret
push
lds
pop
test
cmp
je
dec
jne
jmp
adc
pop
lret
pop
ds
mov
dec
push
shll
inc
mov
outsl
int3
inc
and
add
or
mov
mov
sbb
cmp
jne
mov
call
push
pop
mov
mov
jmp
ret
jmp
pusha
loope
adc
pop
mov
movsb
ret
fists
xchg
add
xlat
inc
and
ss
scas
lea
jmp
dec
int3
inc
and
lea
jmp
cwtl
sbb
aad
lret
and
ffreep
lea
jmp
outsb
jmp
push
in
dec
cmp
mov
shlb
orb
ret
jle
rolb
adc
add
dec
fstpt
xchg
repz
in
adc
dec
xchg
dec
mov
test
je
mov
add
test
je
test
jne
add
lea
jmp
mov
xchg
lock
cmp
sbb
arpl
push
call
pop
ret
jmp
mov
jmp
mov
mov
and
add
mov
enter
mov
mov
mov
add
dec
fmuls
fdivs
jl
jg
jmp
pop
mov
cld
addl
add
add
stos
add
add
jle
call
scas
pop
bnd
addr16
in
jle
call
in
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
jmp
push
roll
aad
pop
ret
ret
icebp
popa
add
inc
cmp
stc
push
and
sub
ret
jmp
stos
xor
cmp
fsubrs
dec
scas
mov
add
or
inc
jmp
inc
jmp
mov
mov
jae
xchg
xor
mov
stos
into
cmp
mov
inc
and
jmp
push
fwait
or
jge
jae
xchg
xchg
adc
push
cltd
cmpb
jmp
lds
mov
test
inc
shll
or
jb
adcl
sti
call
sti
jnp
jbe
xchg
testb
pusha
call
jae
push
lea
jmp
push
push
push
push
mov
xor
xor
jmp
push
cwtl
push
imul
ret
ret
and
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
call
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
jmp
cmp
and
pop
fs
iret
pop
cmp
jo
test
aad
add
add
popl
add
pop
pop
pop
ret
jmp
lahf
pop
sub
xor
xor
call
pop
pop
pop
pop
ret
jmp
call
lahf
test
sbb
aad
shll
xchg
mov
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
mov
fs
jmp
insb
lea
jmp
std
insb
loop
je
sub
sub
pop
int
enter
mov
fimuls
mov
push
push
pushl
push
call
add
pop
ret
jmp
xchg
add
push
shll
jne
xor
dec
fidivrs
jmp
cli
popa
icebp
nop
arpl
pop
pop
jp
ds
cmp
push
cmc
outsl
lcall
loop
pop
pop
pop
ret
jmp
mov
and
push
push
pushl
call
add
pop
ret
jmp
inc
fisttps
fsts
in
sbb
push
into
pop
cmp
push
je
out
push
mov
push
push
push
push
push
push
push
call
jmp
xchg
adc
cmp
mov
mov
push
mov
mov
movb
pop
jmp
jle
insb
or
out
and
pop
jp
jle
jbe
cmpl
xor
jmp
push
rolb
sarb
fs
adc
push
out
fs
popf
insb
mov
cmp
mov
jmp
mov
xchg
mov
test
jbe
cmpl
loop
mov
and
cmpb
je
mov
andl
jmp
imul
push
in
setnp
in
sbb
ficoml
mov
push
mov
movb
inc
jmp
inc
roll
aad
and
pushl
pushl
jmp
dec
jecxz
push
in
stos
aas
scas
lret
push
xchg
mov
jge
xlat
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
jne
or
addr16
cmpsl
aaa
push
mov
inc
mov
pushf
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
fimull
mov
xor
jne
pop
jmp
lods
aas
scas
lret
push
int
and
and
dec
fistpll
jbe
les
sar
cmc
pushf
outsl
les
push
cld
inc
outsb
lock
pop
mov
fwait
add
pop
andb
shr
add
add
imul
data16
xchg
outsb
fldenv
xor
dec
pusha
sbb
mov
mov
mov
shr
jmp
movsb
add
inc
ret
ret
ljmp
stc
loope
mov
cmpsb
leave
ret
jmp
pushf
and
xlat
lea
nop
jmp
cmp
push
shll
and
movq
movdqa
movdqa
jmp
sbb
pop
fimuls
or
pop
jp
jle
fldenv
jg
movdqa
jmp
popa
jmp
fcoms
mov
adc
dec
sub
inc
cld
jmp
ss
xor
push
mov
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
jmp
xor
xor
push
sub
jg
push
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
jmp
jno
xorb
mov
and
mov
cmp
je
sub
push
push
call
add
jmp
push
les
int3
and
insl
std
test
xor
or
faddl
add
add
inc
adc
mov
insb
or
xlat
mov
lods
ds
aas
pop
test
neg
add
mov
jmp
les
mov
mov
and
int
pop
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
jmp
icebp
push
lahf
push
inc
fdivl
in
xlat
dec
fdivrl
loopne
lea
jmp
push
roll
aad
xlat
insb
xchg
mov
mov
jmp
add
sub
or
out
pop
mov
mov
xor
mov
mov
rep
mov
jmp
arpl
push
xor
dec
test
mov
xchg
pop
out
xor
add
xor
inc
or
ljmp
testl
jmp
lds
mov
jae
in
pusha
loopne
adc
add
push
mov
mov
mov
cpuid
jmp
push
roll
shll
divb
xorl
cmc
adc
cmp
outsl
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
jmp
enter
push
mov
sbb
sub
int
and
push
mov
jmp
jg
fs
adc
mov
mov
jmp
or
jl
xor
jmp
and
xor
push
lds
jmp
hlt
xchg
outsb
lcall
pop
dec
daa
add
rorb
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
jmp
idivl
sti
je
call
test
je
xor
inc
jmp
repz
xchg
outsb
leave
push
push
inc
xor
dec
cmpsb
mov
add
add
add
sub
pop
jp
je
mov
andl
jmp
rcll
push
clc
sub
pop
pop
xchg
pop
bound
jns
pop
pop
ret
jmp
mov
mov
das
xchg
pop
xchg
repnz
pop
mov
jg
sub
dec
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
jmp
jno
js
ljmp
or
dec
das
fisubl
movsb
xor
ret
jmp
dec
roll
sarl
sbb
mov
add
add
or
add
add
sub
xchg
cmp
xor
jbe
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
jmp
sub
ja
xorb
dec
fdivrl
aam
dec
lcall
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
jmp
mov
cmpsb
shll
push
mov
xchg
ja
dec
fidivrs
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
jmp
lcall
loopne
adc
add
fstpt
mov
decb
rol
or
jae
xchg
or
outsl
xchg
push
clc
ljmp
sti
jmp
call
in
push
mov
test
je
mov
jmp
xor
in
imul
insl
mov
or
dec
add
push
call
add
inc
sbb
scas
and
inc
and
aaa
and
in
mov
call
add
call
jmp
pop
inc
and
sub
mov
jp
jg
jmp
xchg
pusha
aaa
je
push
call
pop
jmp
cmp
sbb
mov
sbb
aam
shll
repz
gs
xchg
mov
call
add
test
call
and
xor
decl
cltd
or
ds
les
int3
cmp
add
mov
and
incl
std
push
jae
xchg
dec
roll
sarl
mov
dec
mov
dec
or
popf
incl
jmp
mov
in
sbb
and
outsl
roll
aad
ss
mov
mov
je
push
call
pop
jmp
mov
jmp
jmp
fidivrs
push
jns
pop
gs
adc
or
je
jne
mov
into
fcomps
stos
pop
test
lcall
jl
pop
pop
ret
jmp
adc
add
jno
push
data16
mov
push
mov
mov
test
jmp
or
push
jge
negl
xchg
add
sahf
jl
cmc
imul
pushf
incl
je
push
call
pop
jmp
pop
ret
jmp
pop
aam
sub
mov
iret
pop
cmp
cmp
pop
jmp
jmp
sti
sahf
insl
out
push
stos
ljmp
pushf
fimull
test
call
fwait
sbb
lcall
outsb
jl
jo
shlb
mov
call
fldl
add
je
push
fdivl
in
test
mov
in
sbb
sbb
lods
arpl
je
push
call
jmp
cli
push
or
ds
cmp
mov
inc
pushf
insb
mov
call
add
test
call
add
jmp
and
test
and
lock
cmc
add
cmpl
pop
jmp
xor
inc
std
push
mov
mov
or
add
arpl
stos
imul
push
call
jmp
stos
xor
mov
jle
xor
rcll
push
call
add
dec
flds
mov
stc
xchg
push
pushf
sti
push
mov
das
lcall
add
call
pop
jmp
pop
pushf
push
popf
pushf
jns
call
in
mov
jmp
sub
sbb
xchg
adc
inc
mov
jg
xchg
testb
xor
or
jmp
sbb
inc
push
xlat
inc
and
add
daa
nop
jmp
push
cmp
je
mov
jmp
iret
dec
fdivrl
pop
cmp
aas
addb
xor
xchg
call
jmp
mov
stos
xor
xlat
arpl
xchg
gs
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
jmp
xchg
push
mov
adcl
insl
sbb
dec
lea
mov
sub
ret
jmp
mov
cmp
jne
mov
jmp
fisttpl
mov
hlt
out
pusha
icebp
popa
add
add
xchg
pop
mov
add
add
add
adc
pop
mov
push
push
push
jmp
pop
xlat
inc
and
cmp
data16
xchg
outsb
mov
mov
shll
sti
ja
jmp
adc
add
pop
lret
lret
pop
movsl
aaa
add
jmp
loop
loope
jae
add
fimuls
or
add
cmpsl
push
push
call
jmp
jge
jg
jmp
sub
jg
enter
cmp
push
mov
inc
cld
mov
sub
ret
jmp
mov
cmp
je
inc
dec
jne
jmp
cmp
jne
je
inc
jecxz
push
in
jne
arpl
cmc
pop
pop
lret
pop
ds
adc
xchg
or
xor
adc
lret
sbb
pop
pop
jmp
in
out
mov
add
enter
push
xchg
decl
xor
jmp
inc
rcll
adc
ficomps
in
outsb
cld
fwait
jbe
push
aam
sub
mov
sbb
sub
ss
cmp
sti
je
mov
mov
inc
inc
cmp
je
dec
jne
jmp
add
mov
call
push
pop
mov
mov
jmp
loope
mov
loope
adc
daa
inc
mov
xor
pop
add
add
int3
ret
sti
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
insb
mov
jmp
jnp
xchg
testb
andb
arpl
cmc
sbb
jae
fs
pop
sub
mov
xor
cmp
jmp
add
mov
mov
mov
insl
mov
pop
sbb
mov
mov
mov
jmp
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
jbe
orb
cli
or
dec
push
xor
sub
jp
jp
out
mov
mov
incl
xor
jmp
xchg
sbb
test
cmp
jae
sub
pop
xor
jmp
stos
lods
lret
inc
loope
in
and
vmaxpd
stos
pop
mov
out
add
add
add
add
jns
sbb
xor
cmp
ja
call
mov
cmp
je
movl
jmp
cmpsl
xor
int
leave
and
sbb
pop
xchg
adc
adc
test
je
lea
push
jmp
push
mov
jns
push
inc
and
xor
add
std
or
mov
popf
mov
mov
lcall
ret
je
jne
and
xchg
mov
sub
ret
mov
cmp
jne
push
pop
mov
jmp
es
gs
pushf
outsl
rclb
lea
jecxz
push
in
jl
loope
fsubr
js
jp
je
out
inc
and
jle
adc
push
push
call
jmp
and
dec
fistpll
adc
add
fwait
pop
loop
notl
mov
das
int3
inc
lods
roll
mov
mov
rolb
lods
sub
sub
cmp
fdivrp
sbb
movl
jmp
push
push
pushl
jmp
xlat
push
shlb
push
mov
mov
cmp
je
cmp
je
cmp
jne
jmp
mov
xchg
icebp
add
notl
gs
pop
pop
pop
mov
jmp
pop
aam
sub
cwtl
decl
out
pushf
adc
xchg
jnp
inc
clc
pop
jmp
loopne
pop
sbb
mov
mov
jmp
test
ret
iret
stos
pop
xchg
inc
inc
and
ss
faddl
jno
add
add
jne
call
jmp
pusha
icebp
popa
add
add
add
push
ret
cmpsb
push
nop
pop
jl
jne
mov
mov
mov
jmp
mov
sbb
int
test
lret
pop
repnz
mov
ret
sbbl
push
jmp
pushf
setg
or
pop
test
das
xor
jne
push
pushl
call
test
je
pushl
push
push
pushl
call
add
pop
cmp
jmp
popf
push
xchg
repz
mov
hlt
pop
and
push
lds
cmp
jmp
sahf
add
inc
shlb
add
insl
stc
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
add
std
decl
add
dec
cld
pushl
int
dec
adc
cmpsb
cmp
jle
mov
aam
mov
inc
mov
jmp
leave
ret
jmp
lea
int3
dec
frstor
mov
mov
lea
test
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
jmp
pop
fimull
fidivrl
or
cwtl
sbb
adc
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
jmp
pop
fmuls
fdivs
mov
in
std
icebp
jns
mov
sbb
jb
leave
ret
jmp
outsb
jmp
push
in
dec
mov
lods
lret
inc
cld
jnp
mov
or
pushl
pushl
pushl
pushl
pushl
call
add
test
call
pop
jmp
mov
test
cmp
mov
js
pusha
xlat
pop
enter
sub
dec
clc
andl
jmp
sbb
call
in
sub
jmp
stos
cmp
mov
sub
mov
cmpl
sti
call
push
xor
or
mov
inc
mov
jl
jns
jmp
insl
dec
xor
sub
dec
cmp
jge
inc
jmp
xchg
popf
pushf
jmp
loop
pop
hlt
mov
cmp
jne
mov
mov
jmp
push
lds
iret
and
dec
in
sub
and
mov
mov
jmp
jns
jo
loop
add
or
pop
jp
sub
insb
or
scas
jle
and
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
add
or
lsl
lea
shr
add
mov
and
divl
and
mov
adc
outsl
jb
shlb
incl
jmp
mov
cmpsb
shll
add
movsb
and
daa
stos
cmp
jne
mov
mov
mov
jmp
lret
pop
out
mov
jmp
dec
pop
je
jne
mov
cmpsb
je
add
push
dec
leave
pop
cmp
and
outsb
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
jmp
lea
rcrb
stos
pop
sar
ljmp
imul
call
add
push
add
add
add
add
add
jmp
stc
jo
xorl
add
add
movsl
xor
dec
fdivrl
xchg
repnz
dec
arpl
jmp
add
pop
iret
pop
cmp
aas
sub
pop
push
test
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
cmp
jmp
jb
jo
loop
sub
pop
rolb
mov
lods
ret
ds
inc
adc
lcall
ret
je
movl
jmp
mov
roll
ja
push
xchg
mov
jecxz
pop
add
push
add
add
rcrl
jne
pushl
pushl
jmp
jecxz
in
jle
jo
js
ljmp
out
mov
inc
mov
or
pop
ljmp
add
dec
ds
pushl
call
jmp
xchg
adc
xor
or
xchg
and
pop
adc
mov
decl
adc
sbb
test
lret
jne
or
jmp
repnz
std
test
repnz
mov
pop
sbb
mov
mov
jmp
lret
push
dec
int3
inc
and
sbb
insb
pop
pushl
call
mov
pop
jmp
jbe
adc
aaa
int3
mov
fldt
ret
stc
xor
add
add
add
add
lea
add
call
add
push
pushl
pushl
pushl
call
jmp
push
inc
and
aas
mov
mov
sub
inc
fidivrl
sbb
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
add
std
decl
add
std
lcall
cmp
je
jne
into
dec
fdivrs
add
sbb
insb
loop
je
mov
sar
jmp
bound
aas
pop
test
cmp
push
lret
add
orl
and
std
jb
xchg
mov
cmp
fimuls
jmp
loope
jecxz
jne
push
fisttps
fsts
lods
jno
pop
outsl
xor
imul
xor
in
cmp
xchg
add
add
cmp
jne
je
sbb
addr16
gs
pop
mov
in
sub
cmp
je
pushl
push
push
pushl
pushl
pushl
call
add
mov
lods
push
inc
mov
add
mov
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
ljmp
push
call
jmp
pop
iret
pop
cmp
jo
popf
or
ljmp
stc
mov
popf
mov
add
add
pushl
jmp
rcrl
pop
into
pop
ret
ret
fwait
or
xor
push
jmp
mov
and
adc
mov
mov
jb
inc
and
push
cmp
push
pushl
call
add
sub
inc
mov
push
xlat
inc
and
or
or
sbb
mov
jmp
ds
mov
jge
jne
jmp
ret
inc
clc
jmp
mov
decl
jmp
push
lahf
push
mov
stos
int
fdivr
jl
jne
push
movsb
mov
mov
pop
cmp
je
movl
add
jmp
adc
lods
int
icebp
dec
cmp
jne
mov
mov
mov
jmp
xchg
sbb
int
aam
dec
jmp
rcrb
push
xor
pushf
lea
pop
pop
pop
jmp
lret
inc
shlb
insl
hlt
pop
loope
mov
out
jge
pushl
call
pop
mov
cmp
jne
jmp
push
sbb
cmpl
stos
mov
push
rolb
rolb
stos
mov
add
add
add
add
push
aaa
ret
jne
rorl
lcall
cmp
jmp
jno
xorb
push
ret
cmpsb
push
mov
adc
fmuls
xor
adc
xor
jmp
scas
pushl
jmp
pop
enter
outsl
and
imul
pop
bound
inc
inc
and
xor
outsb
cld
fwait
jbe
sbb
pop
jp
xor
scas
aas
pop
test
pop
hlt
je
jne
js
jno
jecxz
rcrl
pop
into
fildl
push
cmp
je
jne
pop
xchg
mov
fldl
mov
call
daa
xchg
add
jecxz
lcall
ret
je
jne
xlat
dec
fnstcw
fidivrs
jb
in
mov
les
add
add
pop
adc
hlt
push
lds
out
imul
sbb
push
lock
xorl
mov
incl
cmc
incl
add
add
call
mov
cmp
je
movl
add
jmp
jbe
gs
pop
popa
in
sbb
add
jecxz
push
in
std
scas
mov
movl
add
jmp
inc
ret
ret
setg
or
gs
jp
fs
pop
test
add
mov
inc
mov
rcr
pop
ret
push
push
call
add
pushl
push
pushl
pushl
jmp
jb
outsb
or
sbb
dec
sub
inc
push
fisttps
fldcw
addr16
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
call
add
pushl
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
mulb
or
jmp
cmp
sub
push
shll
xchg
xchg
mov
ljmp
lea
pushl
push
push
pushl
pushl
jmp
jno
jb
insl
hlt
pop
icebp
int3
pop
int3
stos
data16
jecxz
mov
jne
call
mov
cmp
jne
xor
jmp
push
mov
mov
flds
fs
sub
push
xor
inc
out
push
cmp
add
insl
add
jno
mov
je
cmp
jmp
adcl
out
shrl
xchg
testb
inc
stos
not
jle
pop
jmp
pushl
call
pop
jmp
in
out
jo
and
test
mov
xlat
rorl
mov
call
mov
mov
add
neg
sbb
and
jmp
mov
mov
test
jge
xor
outsb
or
push
seto
popa
nop
daa
and
incl
dec
adc
dec
mov
dec
cld
xor
call
leave
ret
jmp
idiv
jne
call
add
cmpb
je
mov
jmp
daa
mov
inc
out
adc
imul
call
add
sahf
dec
lahf
je
push
call
pop
jmp
sub
add
andl
jmp
movsb
and
xorl
fldcw
roll
sbb
insb
jecxz
cmc
pushf
outsl
andl
aad
ret
jmp
cmpsl
xor
aaa
cmpsl
ret
adc
xor
outsl
in
insl
xchg
inc
add
pop
or
pushl
shr
mov
filds
lea
lock
bound
stc
jge
add
add
inc
aam
dec
cmpsl
out
popf
push
mov
jmp
insb
out
adc
sbb
outsl
or
out
mov
mov
sbb
jae
sub
jne
pushl
pushl
pushl
pushl
call
add
pushl
mov
and
inc
add
jne
je
movsb
cmp
xlat
inc
and
cmp
jge
call
jmp
add
cmpsl
xor
and
add
add
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
pop
enter
outsl
icebp
je
push
call
mov
push
jp
ljmp
fdivl
in
cmp
or
add
add
test
clc
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
es
cmp
xor
or
imul
dec
pop
mov
jmp
or
ljmp
lock
pop
les
int3
gs
add
mov
jle
or
jp
jp
adc
pushl
out
mov
jg
insb
fwait
sbb
subl
dec
int
and
aaa
cmpsb
and
call
jmp
push
xchg
pop
bound
sbb
lcall
mov
jmp
dec
push
xor
push
std
xor
sar
loope
jae
cld
pop
ret
jmp
mov
jmp
mov
fldln2
notl
jbe
imul
into
test
fs
jmp
adc
xor
outsl
adc
sub
mov
xchg
dec
jl
xor
in
bound
or
pop
and
inc
cld
call
cmp
jne
jmp
fisttps
mov
and
sub
push
push
push
call
andl
cmpl
mov
jne
je
sbb
pusha
aam
mov
test
push
xor
push
filds
add
push
or
lcall
jge
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
rorl
mov
xchg
cld
shld
scas
imul
add
daa
xchg
cld
incl
mov
test
je
jne
lds
fildl
das
fidivl
cmc
mov
nop
iret
inc
add
sbb
add
mov
mov
mov
jg
cmp
sti
push
pushl
jmp
and
add
add
add
adc
add
dec
adc
add
add
dec
jmp
jmp
pusha
out
adc
or
das
dec
and
dec
sbb
iret
inc
add
ret
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
pushl
call
mov
jmp
call
call
mov
add
jmp
cmp
fs
sti
call
hlt
or
out
jne
movsb
call
jmp
jno
pusha
fsubr
mov
mov
ret
movsl
cmc
or
push
xor
cmp
jl
cmp
jle
cmp
jne
call
jmp
sub
cli
and
stc
dec
pop
imul
add
imul
add
gs
inc
lds
iret
and
movsb
cmp
inc
test
in
or
push
jb
adcb
pop
sti
incl
cmp
xor
dec
fstpt
push
push
push
push
movl
call
add
or
jmp
push
mov
jne
mov
jmp
push
jmp
jmp
mov
xchg
repz
lds
cmp
add
ret
jmp
lods
cmp
sahf
icebp
adc
adc
jmp
into
xchg
ret
lea
jmp
ficoms
sbb
add
cwtl
push
test
push
cli
fstl
add
aas
mov
inc
mov
mov
std
or
mov
jmp
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
jmp
mov
jg
sti
decl
cli
push
push
xor
daa
xor
pop
leave
ret
jmp
xchg
jne
mov
jmp
rclb
push
movsb
add
cmp
inc
mov
sub
out
mov
xchg
cmp
jne
neg
add
mov
jmp
cmpsl
aaa
push
mov
lods
pop
mov
fimuls
inc
ficompl
jne
leave
je
jne
mov
enter
testb
insl
ret
into
and
mov
cmp
je
sub
push
push
jmp
flds
mov
out
ja
xorb
popf
or
lahf
int3
mov
clc
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jmp
push
lcall
out
jno
push
movsb
cmp
sub
in
sub
jmp
lahf
cmp
mov
ret
daa
stos
cmp
jg
add
sub
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
jmp
inc
xor
call
add
mov
jmp
int
ret
mov
push
shll
mov
mov
movdqa
movdqa
movdqa
movdqa
jmp
loopne
cli
popf
insb
sbbb
int3
inc
aam
dec
lods
mov
lds
lcall
rorb
popf
adc
adc
jne
pushl
pushl
call
jmp
and
adc
mov
jmp
adc
mov
shll
push
xor
sub
jecxz
mov
jmp
dec
rcll
and
pop
leave
test
mov
adc
inc
sub
dec
call
or
fiaddl
rorl
mov
mov
mov
mov
add
add
cltd
or
jno
pop
jp
bound
in
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
jmp
push
push
leave
pop
cmp
or
cmpsl
aaa
push
mov
xlat
and
cmp
or
jge
jmp
sub
push
lds
mov
mov
and
xlat
ds
dec
mov
add
sub
mov
add
sub
mov
mov
mov
jmp
or
cmpsl
cmp
ljmp
add
mov
jmp
nop
push
pushf
sti
push
mov
gs
mov
mov
fiadds
mov
clc
jns
jnp
in
inc
push
gs
dec
lret
dec
in
movsb
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
xchg
xor
out
fidivrl
push
mov
push
push
push
push
pushl
call
jmp
sub
bnd
xorb
or
clc
imul
pop
ret
jmp
mov
les
inc
and
mov
jmp
mov
fdivrs
outsl
or
out
into
lods
jge
cmp
je
cmp
je
push
call
pushl
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
jmp
and
ljmp
xor
mov
cmpl
jmp
mov
lahf
cli
or
sub
daa
lods
and
adc
lea
mov
mov
jmp
lcall
mov
jnp
imul
pop
aam
mov
mov
add
pop
pop
pop
ret
jmp
and
jmp
xchg
sbb
fs
popf
insb
test
in
mov
mulb
push
mov
mov
scas
aas
pop
test
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
jmp
stos
inc
shll
shll
jl
negb
add
sti
sti
shl
mov
sub
jmp
adc
add
push
xchg
add
and
aam
mov
push
jmp
dec
roll
sarl
or
out
adc
inc
test
movsl
int3
aas
mov
lea
jmp
and
outsb
in
jo
xorl
ljmp
in
mov
pushl
lea
jmp
setae
xchg
inc
xchg
fwait
decb
das
fidivrl
sub
clc
mov
decl
dec
or
or
push
push
pop
pop
pop
pop
pop
ret
jmp
mov
fisubrl
jns
jmp
jle
outsl
or
out
dec
leave
ret
jmp
leave
dec
movb
call
pop
jmp
xor
dec
fdivrs
fisubl
push
mov
sub
call
xor
mov
push
lea
push
push
pushl
jmp
das
stos
cmp
dec
mov
scas
leave
cmp
adc
xchg
fs
jmp
mov
push
jmp
test
and
std
pop
fisttpl
fnstsw
mov
fsubl
jne
or
jmp
push
xchg
add
gs
push
lret
mov
sbb
fs
push
cld
pop
bswap
sub
xor
jmp
rolb
mov
xorb
jp
jp
inc
aad
dec
cld
xor
call
leave
ret
jmp
jno
adc
mov
in
xor
int3
add
add
fimuls
aas
lods
xor
and
test
jmp
dec
inc
and
push
mov
popf
add
std
or
mov
xorb
pop
decl
mov
or
enter
movzwl
and
cmpb
je
mov
andl
jmp
scas
aaa
cmpsl
ret
in
out
mov
pop
ret
ret
or
pop
pop
repnz
fs
lea
dec
fistpll
jle
cli
rolb
add
mov
mov
or
movsb
ret
fmull
fmuls
add
push
add
add
popf
or
rolb
shlb
movsb
and
mov
ljmp
add
add
mov
sti
decl
leave
dec
sti
jmp
arpl
testl
add
icebp
je
lea
cmp
ljmp
pop
int
jne
mov
movl
cmp
jne
pushl
call
mov
pop
inc
jmp
out
gs
pushf
outsl
cmpsb
pop
rolb
sarb
popf
pushl
xorl
push
pushl
jmp
inc
iret
pop
cmp
ds
shll
leave
test
mov
sti
cmp
ja
lea
cmp
jmp
jecxz
out
jo
stos
cmp
dec
ret
xchg
add
mov
jmp
add
jmp
movsl
xor
rolb
sarb
jb
je
out
push
jns
iret
ja
call
mov
cmp
je
movl
jmp
lds
mov
inc
imul
add
je
cmp
push
jmp
imul
push
mov
ds
test
sbb
mov
addb
add
les
jmp
test
xchg
aam
ret
cmpsb
push
in
jmp
jmp
jge
clc
mov
fsubrs
pushl
call
mov
cmp
jmp
notl
jmp
in
jg
sub
les
cmp
pop
push
mov
add
cmp
je
lea
push
push
pushl
call
jmp
mov
test
mov
inc
mov
pop
inc
mov
cmc
xchg
lea
pop
pop
pop
mov
xor
call
leave
ret
jmp
cmp
jb
jae
jecxz
notl
and
push
jbe
xor
jne
xor
jmp
sahf
adc
jge
je
and
pop
push
ret
ret
mov
push
add
add
xchg
rclb
cmp
outsb
jmp
mov
jbe
gs
pop
imul
or
add
mov
jns
popa
adc
std
jg
mov
es
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
jmp
inc
push
xor
es
xchg
testb
inc
in
cs
cmp
je
movl
jmp
sub
jne
call
jmp
mov
sti
test
in
cli
fildll
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
call
add
call
call
add
std
incl
test
call
call
test
je
cmpl
jmp
bnd
jne
pusha
repz
jne
sbb
out
call
add
jnp
add
test
je
push
call
call
add
push
mov
call
push
call
call
add
push
mov
call
push
call
call
add
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
jmp
mov
xchg
add
std
or
jae
xchg
push
jecxz
sbb
pop
jmp
xchg
jl
pop
mov
pop
jmp
cltd
setg
or
lret
in
sbb
sete
xchg
lock
mov
add
decl
fs
jmp
adcb
sbb
jne
jbe
loopne
faddl
mov
mov
dec
xchg
add
add
push
xor
js
add
repnz
sahf
xchg
mov
mov
ret
jmp
ja
push
shr
mov
mov
mov
cmp
jne
je
sbbl
jmp
jmp
jge
mov
mov
sub
push
mov
push
push
mov
mov
jmp
flds
mov
stc
jmp
rorb
xchg
or
sub
inc
xlat
mov
enter
fdivr
je
mov
mov
jmp
shlb
xorb
insb
loop
je
sub
pop
lret
dec
mov
jne
movzwl
movzwl
mov
imul
imul
mov
jmp
fstps
stos
pop
xchg
inc
mov
stos
push
sub
sub
testl
add
add
insb
or
out
lea
rorb
mov
jmp
add
imul
push
push
sub
jmp
cs
cmp
or
pop
enter
lea
std
or
stos
arpl
loopne
or
jmp
sub
inc
mov
shl
jg
mov
leave
outsl
loopne
movzwl
inc
xor
div
movzwl
mov
jmp
out
stc
cwtl
imul
mov
shl
or
jmp
dec
mov
mov
sbb
pop
lret
scas
pop
cwtl
rol
jmp
sub
cmp
ja
jne
mov
shl
cmp
jb
jmp
adc
jae
ss
sbb
sub
sub
cmp
jbe
decl
jmp
ret
push
lret
mov
push
lds
xchg
popa
enter
mov
add
cmp
jne
je
inc
fimuls
pop
sbbb
ljmp
sbb
cmp
jbe
decl
jmp
aas
cmpsb
xor
scas
adc
movsb
fimull
mov
xchg
repnz
call
pop
pop
mov
cmp
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
mov
mov
shl
shr
add
xor
lea
jmp
sbb
lods
lret
inc
rcrl
or
orb
add
pusha
notb
cwtl
decl
in
rorb
lock
jmp
push
xchg
mov
adc
scas
lock
ja
fs
sbb
fimull
fidivl
fcompl
test
mov
push
lock
int3
dec
fidivrs
jp
in
add
mov
mov
fwait
jo
dec
les
int3
pop
icebp
outsb
cmpsb
arpl
sbb
sbb
icebp
movzwl
jmp
dec
fistpll
dec
fnstsw
add
inc
dec
ds
sub
cmp
jbe
ja
mov
enter
pop
lods
inc
cmp
mov
leave
jmp
push
push
xor
cmp
xchg
cmp
ja
movsl
les
mov
call
add
cli
decl
cli
jmp
mov
mov
shr
sub
test
ja
jne
cmp
jb
jmp
aad
adc
jae
sbb
repz
cmc
sbb
dec
sub
dec
sub
push
dec
fdivl
enter
or
clc
jbe
ja
mov
mov
adc
pop
leave
test
out
push
decl
jmp
sbbb
and
ljmpw
stc
mov
and
fisttpll
mov
or
mov
push
mov
shr
shr
movzwl
mov
movzwl
imul
imul
mov
imul
jmp
sbbb
mulb
jns
loop
pop
loop
cmp
or
add
add
dec
jmp
iret
insl
mov
imul
jmp
es
cmp
dec
scas
cs
xor
jmp
ficoml
mov
cld
movzwl
shl
pop
add
mov
pop
mov
pop
leave
ret
jmp
in
icebp
nop
arpl
rorl
rorl
mov
add
jb
js
insl
hlt
pop
in
xor
int
and
cmp
mov
pop
mov
shl
or
sub
sub
cmp
jbe
decl
jmp
add
mov
inc
shr
add
pop
ret
jmp
fstl
mov
pop
ds
xchg
sbb
aad
lret
ljmp
movb
add
mov
jmp
jae
xchg
cmc
add
jecxz
std
test
pop
lcall
xor
dec
stos
mov
shl
add
pop
mov
pop
cmp
jae
incl
jmp
lea
mov
shll
pushf
outsl
insb
or
lds
fnstenv
rolb
xor
lock
adc
push
je
jbe
loopne
loop
leave
xchg
incl
cmp
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
jmp
or
cmpsb
xor
scas
pop
sete
insl
pushf
sub
or
jmp
fwait
add
mov
pop
xchg
adc
mov
jmp
imull
cltd
push
mov
jmp
mov
push
mov
dec
mov
clc
lea
pushl
jmp
cmp
or
cld
xchg
cmc
add
scas
sub
lds
xlat
pop
sarb
inc
cld
jmp
out
cmc
pushf
outsl
mov
gs
pop
push
mov
jns
popa
jo
lahf
lahf
mov
add
adc
add
jo
loop
fwait
push
mov
es
popa
jmp
icebp
lea
pushl
call
jmp
xor
popa
stos
and
push
shlb
aam
rcr
gs
add
inc
or
ret
push
clc
sub
push
mov
mov
jmp
push
lea
push
in
add
jmp
fcoms
lods
pop
mov
daa
int3
pop
xchg
add
data16
dec
fstpt
sbb
pop
cld
or
sub
pop
cmp
mov
sbb
mov
sub
or
pop
mov
sub
neg
cmp
jbe
inc
jmp
ret
jmp
xchg
pop
xchg
repnz
sub
in
jmp
jge
les
cmpsl
push
mov
decl
mov
jne
pop
pop
jmp
movsb
xor
icebp
popa
add
sbb
jg
mov
jmp
addb
sub
cmpl
push
mov
jne
xor
jmp
fiaddl
mov
stc
pop
int3
stos
iretw
mov
popf
lret
lods
pop
cmc
popf
inc
in
gs
add
inc
sbb
adc
ss
insl
hlt
pop
lods
mov
repz
inc
push
xchg
stc
sti
push
mov
sub
cmpl
push
mov
jne
xor
jmp
inc
in
sbb
push
mov
jle
or
jge
gs
test
jbe
ja
ficomps
fs
xchg
add
out
jl
notb
in
aam
add
sbb
jg
mov
and
divb
xorb
rolb
sarb
lret
pop
leave
ret
jmp
int
mov
jo
dec
and
cmpl
jmp
jns
mov
pop
xchg
add
jno
sub
mov
sub
push
jmp
mov
xchg
repz
lds
loop
mov
or
shll
jmp
fnsave
sbb
mov
shll
aam
dec
cmpsl
xchg
cltd
clc
or
mov
fstpl
sub
xor
xor
lea
pushl
call
mov
pop
pop
mov
add
cmp
mov
mov
sbb
add
neg
cmp
jae
inc
jmp
cmp
ret
cmpsl
push
cmc
jb
jno
jecxz
test
cmpsl
jo
dec
in
add
decl
mov
jne
pop
pop
jmp
sub
sub
push
mov
mov
js
mov
inc
sti
pushl
mov
jge
jne
out
sbb
icebp
popa
add
inc
sub
sub
adc
mov
sub
push
mov
mov
jmp
or
jne
jmp
iret
mov
jns
jmp
out
jne
mov
gs
imul
xchg
lock
add
inc
into
push
shlb
fs
jmp
in
ja
xorb
jge
je
add
push
mov
jae
mov
insb
and
add
clc
and
xorb
arpl
ja
loope
rclb
sbb
xchg
adc
imul
inc
push
xor
sub
dec
cwtl
xor
jmp
gs
adc
or
outsb
cld
fwait
jbe
int
fistpll
cltd
mov
jmp
sub
aas
pop
test
js
imul
adc
mov
cmp
jmp
inc
into
pop
cmp
sbb
fwait
ja
scas
stos
add
lea
sub
mov
mov
cmp
ja
jb
dec
sub
jmp
add
scas
aas
pop
test
in
sbb
std
leave
ret
rolb
add
add
dec
dec
fisttps
fsts
dec
aam
mov
jmp
push
rcll
data16
insl
std
test
sub
stos
test
jmp
mov
mov
and
mov
mov
and
xchg
inc
jmp
jmp
jecxz
out
mov
lret
push
mov
or
xor
pop
iret
stos
pop
fmuls
pop
leave
ret
jmp
add
enter
push
push
push
push
jmp
test
xchg
or
and
or
les
or
gs
add
cli
dec
js
mov
jmp
or
pushf
lods
lret
inc
rcll
repz
push
xlat
push
push
push
pop
cmp
jb
xor
jmp
or
mov
test
cmp
pop
jae
dec
fdivrl
and
add
add
sarb
mov
in
push
jmp
pusha
loop
pop
loop
push
fisttpl
fnstsw
inc
movsl
pop
fstpt
pop
test
fcompl
cwtl
push
imul
push
shlb
clc
jmp
jmp
and
push
pop
mov
cmp
jb
xor
jmp
add
out
data16
xchg
outsb
movsl
clc
ja
xorb
push
mov
pop
pop
leave
ret
jmp
and
xor
test
jmp
pop
xlat
inc
and
cmp
dec
movsb
sahf
adc
cmp
jge
andl
jmp
push
outsb
or
adc
je
out
sbb
push
lret
sti
pop
ficompl
data16
pop
jmp
imul
add
ja
adc
mov
adc
pop
inc
aad
sub
aaa
or
dec
mov
mov
mov
mov
shr
or
mov
mov
mov
shl
neg
sbb
sub
and
dec
mov
test
jge
jl
mov
and
int
addr16
sar
lahf
enter
lea
mov
jmp
aam
push
mov
sub
jmp
mov
xchg
adc
jle
pushf
add
ret
int
mov
jmp
leave
ret
jmp
adc
sub
or
scas
adc
mov
pop
jmp
andb
push
mov
jmp
xchg
mov
or
jmp
mov
mov
mov
mov
mov
mov
shl
or
mov
mov
mov
shr
neg
sbb
add
and
decl
mov
jne
pop
jmp
stos
sub
xor
bnd
mov
mov
mov
or
jmp
icebp
jnp
mov
loop
cmc
pushf
outsl
test
mov
jg
push
push
mov
sub
sub
mov
jmp
jns
pusha
pop
repnz
test
in
cmpsb
xor
scas
inc
add
aas
andb
jne
call
sahf
or
cmpsb
inc
in
lock
bound
pop
mov
movsl
xor
push
mov
push
push
push
xor
dec
cmp
jbe
ja
and
jg
bound
ljmp
lods
pop
sahf
inc
sbb
neg
jmp
mov
fs
push
mov
movb
dec
jns
jmp
mov
or
jmp
jnp
mov
xchg
push
xchg
repz
in
and
xchg
mov
jl
mov
mov
xor
cmp
jmp
pop
lret
lret
notl
mov
cwtl
sbb
pop
pop
ret
jmp
mov
xchg
adc
sub
out
ja
xorb
data16
xchg
outsb
fnstenv
mov
mov
jmp
dec
fisttpl
fnsave
ret
push
lds
in
jle
std
sbb
xchg
pop
inc
cmp
jmp
scas
adc
rcll
adc
notl
in
inc
ss
shr
add
mov
dec
test
jge
jmp
ficompl
scas
pop
mov
sarl
push
or
out
jl
andb
jmp
rorl
dec
movsl
and
cld
jbe
cmpl
mov
add
decl
jne
pop
pop
pop
jmp
cmp
or
pop
ret
jmp
mov
in
jmp
in
std
test
ljmp
lds
mov
mov
inc
cmp
jb
jmp
insb
loop
pop
loop
pop
fldt
pop
rclb
push
adc
cld
jmp
pusha
in
jge
notl
imul
add
jl
rorb
jmp
jp
jle
call
xor
cmpl
aas
mov
testb
loope
add
ja
popa
lock
xor
pop
iret
stos
pop
test
jge
or
call
pushl
mov
mov
mov
lea
call
jmp
and
xchg
add
jnp
notl
fdecstp
add
mov
sub
push
push
mov
mov
push
call
mov
pop
test
je
push
pushl
call
add
push
pop
sub
mov
test
jbe
mov
xor
lea
rep
jmp
out
adc
jne
lcall
int3
stos
iretw
push
int3
inc
and
jge
mov
xor
rep
jmp
mov
jmp
mov
test
add
inc
or
cmp
test
jne
js
mov
lea
add
lea
sub
lea
mov
jmp
cmpsb
cmp
and
xchg
xor
int
mov
cli
inc
jae
push
pop
sub
lea
xor
rep
jmp
mov
sti
in
insl
std
test
push
xchg
mov
outsl
jns
lea
push
pushl
mov
mov
mov
call
sub
cmpl
jmp
scas
cs
imul
roll
aad
mov
fwait
gs
push
lea
lea
push
call
jmp
xor
out
jl
negb
xor
daa
push
push
add
add
mov
cmp
jne
mov
mov
jmp
popf
push
test
push
mov
arpl
inc
dec
fdivrl
push
xor
cs
rcll
and
adc
pop
pop
pop
jne
push
mov
lea
call
jmp
mov
sarb
iret
stc
imul
orl
test
jl
xor
xor
cmp
jae
mov
movzbl
shl
add
or
dec
test
jge
jmp
xor
sarb
jg
bound
jns
jmp
ret
mov
jg
jmp
push
push
mov
lea
jmp
repz
insl
mov
fwait
or
jno
and
fistpll
mov
jmp
mull
xchg
lds
and
das
out
adc
xor
test
add
sub
cmp
jmp
lods
cmp
sbb
lds
iret
fs
mov
cmp
jbe
or
sub
jmp
loop
mov
mov
xor
rep
jmp
mov
mov
jl
jne
sub
arpl
adc
and
mov
lock
mov
sub
sub
cmpl
jge
jmp
mov
xchg
push
pushl
mov
lea
push
mov
call
pop
pop
pop
jmp
jb
add
and
sbb
ret
jmp
sub
lods
and
mov
lea
jmp
bnd
xorb
xchg
add
sahf
jg
aam
sub
insb
ja
loop
mov
ds
mov
test
jbe
mov
xor
lea
rep
jmp
inc
push
xor
daa
dec
roll
aad
rolb
mov
push
mov
mov
call
pushl
jmp
ret
dec
fistpll
cltd
clc
or
cmpsl
outsb
push
pop
repnz
xor
inc
out
jmp
push
jno
jecxz
rcrb
fs
aas
adc
test
jbe
ja
orb
sub
lds
repz
mov
mov
call
pop
pop
mov
test
jbe
mov
lea
lea
mov
sub
mov
pushl
mov
pushl
mov
mov
call
add
pop
add
add
decl
pop
jne
mov
jmp
and
lret
lea
rep
jmp
and
and
mov
xchg
and
dec
mov
cmp
push
jg
pop
pop
leave
ret
jmp
rorl
dec
push
les
int3
cs
aam
sub
fidivrs
cmpsb
shll
mov
sub
pushl
lea
pushl
pushl
pushl
push
mov
call
add
leave
ret
jmp
adc
push
push
mov
sub
jmp
push
mov
jle
cmp
pop
icebp
sbbl
out
sbb
aad
jmp
mov
in
jns
je
out
pop
sbbb
jmp
cmp
lds
lret
add
mov
shl
movzbl
xor
movzbl
jmp
push
mov
sbb
incl
mov
xchg
add
add
lea
rep
jmp
sub
push
jge
je
fs
insl
hlt
pop
out
cmp
lea
shr
inc
mov
pushl
lea
jmp
dec
int
and
cmp
mov
dec
into
xchg
test
jne
mov
movl
call
dec
pop
mov
mov
test
jl
mov
mov
mov
push
pop
cmp
jne
mov
test
jne
shl
dec
dec
jmp
mov
cmpsl
ret
push
aam
sub
sahf
stc
or
test
lock
lea
pushl
mov
push
lea
push
call
pushl
lea
pushl
push
lea
push
call
add
test
jbe
mov
xor
lea
rep
jmp
push
fdivl
in
lahf
adc
fcompl
scas
pop
mov
jle
dec
or
jmp
loopne
cld
fwait
jbe
scas
daa
mov
and
mov
shlb
loop
push
push
jmp
jle
popa
add
add
movsb
dec
out
jl
jne
jno
fisttpl
fnstsw
clc
je
test
jbe
jmp
test
mov
sbb
and
clc
or
mov
mov
call
pushl
jmp
mov
mov
sbb
xor
mov
fsubl
sub
push
push
test
jbe
mov
mov
lea
rep
jmp
imul
insl
fnsave
scas
aas
pop
test
sahf
insl
aam
jns
jmp
ret
or
xor
pushf
xor
or
inc
idiv
pusha
notb
mov
pop
leave
ret
jmp
clc
pop
enter
shrd
mov
jp
push
iret
stos
int3
xor
movzbl
shl
xor
movzbl
jmp
cmp
mov
stos
int
fisubl
ja
loope
pushf
shl
decl
jne
jmp
and
je
jp
jmp
in
sti
sahf
insl
mov
mov
jns
popa
fs
adc
add
clc
add
mov
add
add
cld
jmp
data16
pop
loop
in
outsl
lcall
xor
inc
xor
cld
add
mov
test
jle
lea
lea
mov
mov
addl
mov
mov
jmp
inc
int3
inc
and
in
jg
idivb
je
imul
sub
push
push
mov
call
jmp
in
bound
pop
jb
insl
jns
imul
adc
xchg
rolb
shl
xor
movzbl
shl
xor
movzbl
mov
movzbl
shl
xor
movzbl
shl
xor
movzbl
shl
xor
movzbl
mov
movzbl
shl
xor
movzbl
movzbl
shl
xor
shl
xor
mov
mov
shr
mov
and
mov
xor
mov
shr
and
mov
and
mov
and
xor
mov
shr
movzbl
xor
mov
and
mov
mov
and
xor
xor
lea
xor
mov
mov
xor
mov
mov
xor
mov
call
mov
mov
mov
shr
mov
and
mov
shr
and
mov
and
and
xor
mov
and
mov
shr
movzbl
xor
and
xor
xor
lea
xor
add
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
cmp
jne
push
pop
pop
pop
pop
pop
ret
jmp
push
mov
js
jge
pop
lret
scas
pop
mov
mov
mov
inc
mov
mov
mov
mov
jmp
popa
repnz
pop
repnz
jmp
jmp
and
shr
lds
add
loop
xor
jmp
imul
testb
out
add
sub
xor
call
push
call
mov
shr
add
test
je
pushl
imul
lea
push
lea
push
push
call
add
jmp
cmpl
add
mov
adc
inc
add
mov
shr
mov
and
mov
and
xor
movzbl
mov
and
xor
movzbl
and
mov
and
xor
mov
mov
mov
mov
shr
mov
jmp
dec
fimuls
inc
cs
dec
mov
add
dec
int
pop
pop
leave
ret
jmp
pop
rcll
push
dec
popf
mov
mov
cmp
jmp
push
inc
jle
jbe
loopne
ss
aas
pop
test
test
mov
and
xor
movzbl
jmp
test
stos
int
xchg
xor
pop
lds
in
lcall
mov
inc
clc
jmp
test
out
shr
mov
and
mov
jmp
cwtl
cmp
or
in
shl
out
jo
dec
xor
push
aad
sub
cmp
lods
and
push
sub
inc
adc
mov
and
xor
movzbl
and
mov
and
xor
mov
mov
mov
jmp
cmp
sub
fsubs
xlat
push
mov
mov
mov
mov
mov
mov
mov
sub
add
sub
jmp
jae
outsb
or
pop
out
cld
fwait
jbe
cltd
adc
sar
adc
pushl
push
mov
call
push
pushl
lea
push
lea
push
pushl
call
add
leave
ret
jmp
jae
xchg
testb
clc
xor
cmp
jbe
jmp
push
fisttpll
out
xor
in
cltd
push
test
repz
add
add
lods
add
add
push
mov
mov
sub
js
stc
mov
push
lea
mov
sbb
pop
int3
inc
and
add
mov
les
cmp
jne
jmp
rep
lcall
cmp
sbb
or
or
sub
incl
cmp
jbe
jmp
ret
jb
jae
dec
aad
sub
je
ret
push
lds
and
mov
sub
jb
jae
btr
inc
mov
sti
pop
into
test
cmpsb
shll
adc
mov
cmp
jmp
xchg
adc
pop
fisttps
flds
iret
dec
fdivrl
mov
pop
jbe
jmp
pop
fimuls
push
jbe
jmp
in
imul
movsl
xor
in
sbb
add
mov
xchg
int3
cmp
je
cmp
jne
jmp
xchg
push
mov
addl
mov
nop
testl
mov
clc
popa
jb
cmp
jbe
jmp
repz
jmp
inc
leave
pop
cmp
sub
loopne
ja
imul
xchg
cmp
jbe
jmp
sbb
cmp
jmp
mov
lret
fisttpll
movsb
push
mov
aaa
shlb
add
hlt
add
add
mov
add
jmp
lock
notb
sub
js
lahf
punpckhdq
lret
xor
movzbl
mov
and
xor
movzbl
and
mov
and
xor
mov
mov
mov
mov
shr
mov
and
mov
and
xor
movzbl
mov
and
mov
and
xor
and
xor
decl
mov
jne
jmp
movsl
mov
dec
add
add
push
aaa
ret
pop
xchg
repnz
int
into
test
cmp
jb
jae
ljmp
xchg
add
lcall
clc
dec
sbb
stc
popa
jb
cmp
jbe
jmp
inc
or
cmp
je
cmp
je
cmp
je
jmp
shl
and
pop
pop
leave
ret
jmp
mov
mov
lods
cmp
mov
cmpsb
cmp
fs
jbe
jmp
lret
push
xor
cmp
setne
jmp
sub
daa
inc
mov
mov
test
dec
fidivrs
xor
add
add
testl
cwtl
sbb
fsubrl
sub
test
incl
inc
incl
test
xor
call
bnd
push
add
or
jb
cmp
jbe
jmp
mov
cmp
jne
push
jmp
push
cmp
jmp
aam
mov
xchg
repnz
jmp
andl
inc
mov
mov
jmp
pop
jmp
push
fimull
fidivrl
mov
mov
shll
jg
jmp
add
add
pop
cmp
xor
add
scas
mov
xor
add
add
push
xor
movzbl
add
jmp
mov
fwait
decb
xor
sub
in
inc
cmp
jne
push
jmp
cmp
jmp
hlt
fs
popf
insb
lret
pop
iret
pop
cmp
adc
test
cltd
sahf
inc
or
mov
jne
movl
jmp
sub
jmp
inc
cmp
jmp
stos
lods
lret
inc
scas
jl
jg
jmp
mov
mov
aam
sbb
xorl
call
decl
sub
xchg
jno
stc
mov
je
fwait
add
loop
pop
loop
and
sub
push
scas
ljmp
add
xlat
dec
fnstcw
lods
lret
inc
icebp
fidivs
sbb
loope
shll
xchg
lock
pop
jmp
mov
jns
fs
sbb
sub
loope,pn
inc
cld
add
add
cmp
mov
cmp
jmp
idivl
mov
and
aad
lret
scas
pop
mov
push
jmp
mov
movsl
and
jne
push
jmp
ror
mov
cmp
jb
cmp
jne
push
jmp
sti
jp
out
jb
xor
cmp
mov
xor
or
xchg
lods
cmp
jb
cmp
jbe
jmp
sub
jmp
cmp
jne
je
sbb
lcall
in
jle
mulb
mov
jmp
push
sbb
lods
mov
jmp
lcall
in
bound
cltd
clc
or
and
add
push
lahf
push
cmp
cmp
hlt
push
les
inc
call
add
ja
movzbl
add
jmp
imul
pop
loop
or
cmpsl
aaa
push
mov
xor
movsl
das
mov
test
pop
jp
jg
jmp
jmp
add
jge
notl
adc
test
incl
push
jmp
and
inc
aam
sub
outsb
or
adc
lret
adc
mov
xchg
cmp
jmp
add
repnz
pop
repnz
popf
bound
mov
out
cmc
insb
loop
je
ja
jg
jmp
std
cmp
ja
movzbl
jmp
cmp
adc
sarb
jmp
aad
xchg
fdivrl
mov
daa
rclb
jne
push
jmp
shl
jmp
push
rolb
rolb
jge
je
arpl
inc
aad
dec
lods
add
fnsave
jmp
push
dec
fdivrl
sub
pop
lds
andb
adc
sbb
or
push
mov
leave
testb
add
add
test
nop
testl
scas
pop
mov
pop
jp
jle
aaa
mov
stc
pop
movzbl
ja
sub
jmp
leave
inc
shll
sbb
sub
xchg
mov
nop
push
popa
nop
jle
dec
add
jmp
rcrb
stos
data16
cld
fwait
jbe
adc
test
ja
pushf
js
imul
cmp
movzbl
ja
sub
jmp
call
xor
lock
pop
cmp
jb
shl
or
jmp
jge
addr16
push
jp
gs
or
dec
ret
mov
adc
push
xchg
sbb
mulb
pushf
outsl
scas
adc
les
cmpsl
push
mov
sub
mov
call
inc
mov
stos
mov
mov
sbb
xor
mov
sbb
xchg
movb
sti
jmp
push
dec
or
mov
cmp
jb
mov
shr
mov
jmp
push
mov
jle
cmp
sarb
sti
imul
inc
mov
mov
mov
add
or
jmp
or
and
fidivl
push
pushf
sti
push
mov
sti
jle
sahf
xchg
and
add
xor
test
arpl
jbe
loopne
fwait
xor
cmp
ja
sub
jmp
movzbl
jmp
leave
dec
fistpll
jg
jmp
dec
mov
movsl
icebp
jne
mov
jmp
cmpl
jmp
rolb
dec
lods
mov
pushf
sti
push
clc
sbb
cmpsl
test
pop
test
or
shr
insb
inc
sti
ljmp
iret
test
mov
and
loopne
sbb
jmp
scas
es
cs
insb
or
call
jp
sub
push
push
jmp
jnp
push
cld
push
push
fisttpll
out
fstl
mov
and
adc
test
iret
lock
notb
cmc
pushf
outsl
scas
or
shr
idiv
lcall
mov
jns
push
ja
xorb
pop
leave
test
mov
or
add
push
mov
xor
push
ret
stos
pop
shll
test
je
pop
or
and
int3
aad
into
sub
ret
add
add
lcall
adc
loop
push
pop
cmp
jae
lea
jmp
mov
mov
jmp
nop
jno
mov
xchg
testb
add
add
xor
or
jne
and
mov
jmp
push
mov
cmc
sbb
sbb
add
adc
dec
sub
cmp
add
add
add
xor
or
lret
add
dec
or
jae
lea
jmp
mov
mov
pop
into
test
es
mov
inc
lods
ret
cmp
push
inc
jmp
pop
cli
push
in
sbb
cmp
popa
icebp
nop
arpl
fwait
js
shll
jmp
cmpsl
es
cs
cmp
push
test
jmp
mov
fisttps
mov
loop
or
xchg
xchg
pop
fdivl
in
addb
add
in
fsubs
xchg
mov
ljmp
aas
mov
shr
pop
shr
and
and
cmpl
jb
mov
shr
and
jmp
in
gs
pushf
outsl
lret
cmp
setne
lea
jmp
cmpl
mov
mov
jb
cmp
jae
lea
jmp
call
stos
add
xchg
pop
stc
sbb
movl
jae
lea
jmp
mov
ss
adc
mov
pop
mov
push
mov
add
adc
sub
lock
lea
jmp
test
sahf
stc
or
arpl
cmp
jae
jb
push
mov
js
jge
inc
shll
aaa
mov
movb
jmp
adc
and
arpl
pusha
pop
repnz
jmp
jbe
jbe
loopne
jb
jnp
in
add
mov
cli
aas
imul
add
insl
clc
outsb
or
pop
sub
adc
add
dec
sub
push
push
sahf
or
cmpsb
psubsw
sbbl
cmpsl
add
add
pop
iret
stos
pop
fmuls
xchg
pop
bound
arpl
cmp
jae
lea
jmp
push
roll
aad
add
ror
lea
jmp
fisttpll
mov
adc
xchg
cmc
fs
popf
insb
scas
xor
add
add
add
add
cmp
repnz
jmp
xor
sbb
mov
dec
enter
add
pop
cmp
add
jno
jecxz
lock
sgdtl
add
test
cld
xchg
cmc
add
lock
cmpl
popa
icebp
nop
arpl
add
cmp
push
lds
ficoml
mov
xchg
mov
dec
cmp
jae
lea
jmp
inc
les
int3
sbb
popa
add
pop
outsb
das
dec
out
jl
divb
lea
add
add
lahf
jae
push
mov
jmp
add
leave
xor
inc
pop
fisttpl
fnstsw
pusha
add
inc
inc
cmp
jae
lea
jmp
test
jl
notb
sub
push
arpl
jno
jecxz
mov
sub
add
xchg
sbb
push
adcb
andb
mov
jecxz
fdivs
lea
jmp
cmp
push
aam
sub
xchg
adc
int3
add
add
add
add
inc
add
add
es
mov
push
lahf
cmp
andb
pushl
pop
rolb
shlb
in
in
jle
dec
fisttps
fsts
fisubs
sub
leave
cmp
setne
lea
jmp
push
mov
xchg
xor
sahf
or
cmpsb
movsb
xor
pop
and
cmp
aaa
jmp
mov
pop
jae
mov
mov
and
popf
setg
or
mov
fwait
bnd
pop
pop
ret
jmp
jecxz
xor
add
lods
add
add
lds
add
jmp
dec
aam
sub
inc
es
pusha
clc
outsb
or
push
movsb
push
cmp
clc
xor
jae
inc
fimull
fisubl
fisttpll
out
outsb
mull
icebp
dec
sub
mov
ds
incl
jne
inc
fimuls
dec
les
stos
pop
shrb
inc
es
lret
mov
cmp
jbe
jmp
add
jp
cmp
jne
jmp
nop
adc
mov
inc
mov
sub
push
inc
lret
pop
ds
mov
jbe
jmp
loop
push
xchg
test
pop
cmp
jmp
imul
or
sbb
imul
mov
cmp
jb
jae
and
aaa
push
mov
repz
in
mov
xchg
add
add
pusha
add
add
xchg
int
fstpt
sbb
inc
mov
add
add
inc
and
xor
xlat
sbb
insb
cli
mov
xor
cmp
setne
lea
jmp
call
test
aas
pop
test
cld
pmulhw
mov
jo
jmp
pusha
pop
cmp
jbe
jmp
icebp
jp
ss
jb
cmp
jmp
or
xor
cmp
or
pop
into
test
cmp
jb
cmp
jbe
jmp
popa
es
sti
sub
sti
das
jne
jmp
inc
mov
mov
or
add
ja
into
mov
jae
jb
cmp
jbe
jmp
pop
leave
pop
cmp
outsb
adc
int
dec
add
cmp
jbe
jmp
mov
popf
push
mov
xchg
aas
mov
mov
dec
jbe
jmp
pop
cmp
jmp
inc
fisttpll
out
scas
xor
dec
fidivrs
adc
test
das
jne
jmp
dec
gs
cmp
jbe
jmp
in
out
mov
out
fstpt
ret
jmp
xchg
xor
and
inc
lds
iret
sub
leave
sahf
cmp
jne
je
xchg
xchg
repz
in
sti
adcl
test
cmp
push
mov
scas
cmp
jne
push
jmp
dec
fstpt
leave
sub
jae
xchg
stos
dec
pop
or
xor
sub
stc
das
je
jmp
lahf
sbb
js
mov
loop
clc
lahf
push
lret
push
stos
mov
jmp
or
sbb
gs
pusha
pop
repnz
add
outsl
loope
adc
or
cmp
jb
cmp
jbe
jmp
dec
fnstcw
gs
adc
ret
lock
jmp
mov
aad
pop
or
test
fmuls
fcomps
mov
xchg
inc
cltd
cmp
xor
push
fbstp
sub
jmp
push
jg
cmp
jne
je
jmp
jns
jnp
in
inc
stos
movsb
ret
mov
inc
xor
mov
jmp
cmpsl
or
fildll
seto
add
add
push
jmp
dec
call
lahf
and
pop
jmp
sahf
std
lret
iret
out
jecxz
notb
lretw
pop
ds
popf
jnp
insl
sahf
add
add
add
add
push
shlb
movzbl
cmp
jmp
stc
subl
cmpsl
push
mov
repz
xchg
cmp
jne
push
jmp
push
xchg
mov
cmc
pop
jns
hlt
inc
pop
pop
fisttpl
fnsave
add
cmp
or
push
jmp
flds
jo
sti
incl
aaa
ret
rolb
shlb
jmp
add
add
pop
movsl
sahf
or
or
xor
jbe
fldt
jmp
sub
aas
pop
test
mov
cmpsl
daa
cmp
movzbl
ja
sub
jmp
js
pop
es
sub
jmp
push
jmp
jmp
ds
pop
addr16
add
add
stc
repz
jp
adc
insb
outsb
ja
add
jmp
cmc
stos
cmp
jmp
call
mov
clc
and
lods
mov
lods
add
add
int
push
lret
mov
notl
inc
mov
push
pop
jmp
stos
bound
cmp
adc
fmuls
fcomps
push
mov
addr16
adc
add
and
cmp
mov
jg
scas
cmp
ja
sub
jmp
sbb
mov
mov
mov
jno
xorb
fcom
add
aam
sti
cmp
add
jmp
sahf
add
std
or
fiaddl
mov
stc
lcall
ds
xchg
movsb
ret
ds
inc
lds
jb
adc
add
fiaddl
xchg
add
je
sti
popa
icebp
nop
arpl
icebp
push
jnp
jnp
in
inc
push
int3
pop
jmp
push
lock
jmp
cmpsl
xor
fisubrs
fiaddl
add
add
add
test
ljmp
jmp
aam
fnstcw
in
je
sub
into
pop
cmp
popa
lret
aas
jmp
pop
clc
outsb
or
jg
mov
pop
dec
repz
cmc
je
pop
into
test
jmp
outsb
cld
fwait
jbe
rolb
inc
add
add
mov
add
jmp
and
scas
and
aad
sub
xor
jo
add
add
add
rcrl
push
sub
jmp
mov
int
sub
lock
add
and
push
lcall
clc
lahf
push
addb
add
fsts
mov
push
push
shl
jmp
lods
es
cs
inc
mov
mov
bound
loopne
or
shl
or
mov
mov
shr
mov
mov
shr
pop
mov
mov
xor
pop
ret
jmp
cmp
mov
lods
mov
cmpsl
dec
lret
pop
ds
imul
inc
mov
pop
mov
mov
shr
shr
shr
and
and
and
and
cmp
jae
lea
jmp
and
mov
out
xor
seto
popa
nop
daa
mov
add
add
add
add
lcall
jmp
data16
push
cld
adc
mov
xchg
arpl
mov
loope
adc
dec
cmp
movzbl
ja
sub
jmp
sub
cmp
jno
stc
jae,pt
lea
jmp
add
in
rolb
shlb
into
xor
inc
es
push
imul
lods
rcr
add
sbb
dec
leave
pop
int
xchg
dec
sub
or
outsb
cld
fwait
jbe
adc
addl
pop
inc
jmp
add
loope
sub
cmp
jmp
inc
fimuls
push
out
in
je
sub
int
and
push
nop
jae
lea
jmp
cmp
fldl
mov
cmc
push
iret
pop
cmp
jle
pop
pop
gs
lock
cmp
setne
lea
jmp
iret
pop
fimull
add
add
pop
int
rolb
shlb
cmpsb
jle
jae
in
mov
cwtl
jmp
mov
lea
inc
cmp
jmp
sbb
push
lea
push
shll
ljmp
jmp
cmp
jge
je
imul
sbb
add
dec
sub
add
add
and
leave
cmp
jmp
mov
shll
mov
icebp
popa
add
pop
jns
push
cmp
jne
push
jmp
sbb
jne
cmc
gs
pop
out
out
xor
andl
rolb
add
mov
sbb
cs
cmc
ljmp
add
add
lret
and
mov
inc
shlb
cmp
jae
lea
jmp
stos
cmp
mov
cmpsb
add
js
into
pop
cmp
ds
and
add
push
lds
int
int
out
adc
pop
or
xor
rorl
add
pop
js
addb
add
add
pushl
js
ljmp
inc
and
jno
clc
lea
jmp
faddl
mov
jmp
cli
dec
movsl
add
jge
mov
add
jg
add
add
mov
ret
fmuls
fdivrs
push
or
jns
cmp
jae
lea
jmp
lcall
xchg
jb
imul
inc
test
add
add
add
repz
ret
jmp
push
mov
jmp
int
ret
cmpsb
push
mov
jmp
xchg
adc
adc
test
clc
sbb
lea
jmp
pop
fmuls
fdivrs
ret
inc
aad
dec
mov
cmp
jae
lea
jmp
pop
jecxz
push
in
and
aad
insl
ret
ret
in
add
jb
in
arpl
xchg
les
dec
xor
cmp
setne
lea
jmp
dec
mov
inc
mov
sti
and
and
pop
add
and
cmp
dec
mov
ds
lea
jmp
idivb
jp
adc
outsl
lcall
test
mov
mov
pushl
mov
call
pop
test
jne
addl
inc
add
cmp
jb
mov
mov
imul
add
push
lea
lea
call
pop
test
jne
mov
add
mov
mov
xor
jmp
inc
push
push
iret
xor
mov
mov
jmp
rcll
push
cmpsl
loopne
out
jo
sub
movsb
jb
xor
test
jbe
mov
push
mov
mov
mov
mov
mov
call
addl
add
decl
jne
pop
jmp
mov
fistps
pop
jp
jge
aad
push
jmp
hlt
pusha
notb
sbb
xchg
aad
aad
sub
pop
leave
ret
jmp
mov
xchg
xchg
adc
int3
inc
and
jge
negl
imul
sub
add
mov
shl
add
push
push
call
mov
pop
add
pop
mov
jmp
mov
mov
jno
xorb
scas
cmp
mov
cmpsl
data16
jns
push
mov
push
xor
lea
pop
div
jmp
push
mulb
jns
push
xchg
repz
mov
push
mov
adc
mov
push
push
push
jmp
stos
das
mov
push
mov
shll
push
xor
daa
xchg
leave
ret
jmp
xor
ja
xorb
dec
ret
mov
inc
cmpsb
pop
jne
lock
ret
cmpsl
test
je
jne
mov
xchg
repnz
add
dec
arpl
add
ret
mov
and
xchg
cmc
add
push
mov
movzbl
jmp
scas
and
mov
pop
iret
pop
cmp
aas
lock
cmpl
decl
cli
jmp
pusha
pop
repnz
sub
push
xor
xchg
icebp
add
pop
int
ror
ret
lea
sti
call
loop
push
mov
mov
jmp
setg
push
inc
xlat
inc
mov
stos
leave
arpl
xchg
mov
ret
push
lds
fs
jmp
lret
mov
jbe
loopne
ret
scas
pop
repz
inc
fs
xor
inc
jmp
cs
inc
mov
pop
push
xor
jns
pop
jp
outsl
add
sub
push
mov
mov
shr
lea
and
cmp
jae
incl
jmp
cmp
jp
mov
gs
and
js
mov
cmp
mov
cltd
clc
or
orl
stc
sub
je
jmp
mov
leave
push
rolb
shlb
lea
ret
jmp
ficompl
test
mov
std
adc
iret
aas
mov
xchg
fsubr
test
jne
je
cmp
push
lds
xor
add
inc
scas
push
mov
mov
dec
mov
inc
incl
cmp
jne
xor
lea
movzbl
movzbl
shl
or
jmp
xchg
sbb
mov
mov
fldt
iret
shr
add
mov
jmp
ja
xorb
fisttpl
fnsave
leave
inc
fidivrl
mov
inc
inc
jmp
sbb
lea
jmp
sub
out
dec
in
rol
int3
cmp
jmp
ja
xorb
clc
outsb
or
pop
push
rclb
add
movl
movl
movl
ret
jmp
mov
in
sub
mov
mov
andl
add
mov
cmp
je
xor
jmp
mull
xchg
popa
lea
dec
sub
or
pop
mov
fwait
or
cmp
aad
push
push
mov
add
mov
mov
je
jne
cmp
xchg
push
pushf
sti
push
mov
andl
andl
movl
jmp
pop
ret
ret
cmp
in
jno
pop
jmp
xchg
rolb
or
shll
push
scas
add
dec
fidivrs
cmp
sbb
cli
push
dec
ret
jmp
leave
mov
rorl
dec
adc
inc
or
ret
jmp
imul
add
dec
fnstcw
mov
pop
cld
xchg
cmc
add
pop
fimuls
xor
lds
pusha
pop
repnz
add
iret
add
add
lea
jmp
test
fwait
decb
lock
push
mov
cmp
sbb
jp
mov
add
rcll
sbb
jle
mov
mov
add
add
dec
mov
mov
js
mov
add
cltd
sub
mov
mov
sar
mov
jmp
aam
mov
adc
push
roll
aad
orb
clc
or
test
jne
jmp
in
imul
insl
mov
outsl
adcl
push
imul
jl
mov
mov
add
mov
call
jmp
das
mov
dec
push
xor
daa
cmp
inc
fdivl
sub
shr
call
adc
jl
add
mov
call
jmp
hlt
gs
pushf
outsl
cwtl
cmpsb
xor
scas
or
dec
ret
xchg
or
mov
inc
loop
or
movzbl
shl
or
mov
inc
add
cmp
jb
lea
lea
call
xor
jmp
cmp
jmp
fimuls
mov
dec
sub
loopne
jb
xchg
mov
jne
mov
movzwl
mov
mov
add
mov
cmp
jb
mov
add
cmp
jb
jmp
insb
or
pop
jmp
mov
xchg
jne
jge
testl
fildl
sbb
pop
int3
stos
iretw
adc
dec
fisttpl
fnsave
lahf
punpckhdq
mov
pop
cld
jle
jmp
es
xor
lret
cmp
test
jne
jmp
lret
cltd
push
pop
stos
and
add
pop
pop
test
jge
or
ret
jmp
mov
fistps
clc
jb
popa
add
adc
shlb
repz
jmp
mov
xor
mov
outsl
ss
add
add
add
add
cli
inc
push
xor
cs
cmpsl
movzwl
mov
jmp
std
jg
mov
addl
repz
out
or
cli
ja
xorb
mov
jmp
pop
aam
sub
das
dec
mov
mov
cmp
sti
je
add
add
mov
jmp
stos
xchg
int
pop
test
jne
xor
ret
jmp
jl
popa
add
adc
dec
frstor
mov
mov
test
jge
fs
in
add
add
push
mov
ljmp
push
add
inc
addr16
aas
lods
cmp
jae
xchg
outsb
clc
outsb
or
sbb
jae
mov
cmp
jne
mov
add
ret
jmp
add
pop
or
inc
add
stos
int
jmp
scas
aas
scas
lret
cmp
cmp
aas
pop
test
imul
add
add
rorb
jl
push
mov
push
xor
mov
jmp
lea
sub
or
mov
mov
clc
inc
jae
jmp
fiadds
mov
push
cld
push
gs
push
push
sub
add
pop
inc
insb
mov
roll
add
enter
xor
inc
dec
rep
pop
test
js
cmp
jmp
lock
loop
je
es
repnz
mov
sbb
inc
jmp
pop
loopne
mov
xor
jmp
sahf
mov
rep
jmp
inc
out
adc
push
call
lock
es
movl
movl
mov
push
xor
mov
div
inc
pop
sub
mov
mov
xchg
mov
dec
jne
test
js
movb
jmp
test
mov
sbb
mov
hlt
jno
xorb
mov
mov
cmp
imul
push
aam
sub
jge
notl
mov
cmp
orl
jmp
adc
or
aad
repnz
mov
pop
jmp
inc
std
insl
hlt
pop
jecxz
popf
dec
into
pop
cmp
add
sbb
out
add
add
add
xchg
xchg
cld
ljmp
vpcmpeqd
cmpl
les
int3
and
movsl
push
sbb
mov
jmp
xor
jmp
or
add
imul
cmp
outsl
mov
cmp
lea
jmp
adc
mov
jmp
ja
adc
inc
jns
lds
and
incl
add
add
add
clc
jmp
fisubrl
mov
push
mov
mov
mov
mov
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
jmp
jo
je
out
or
fisttpll
out
pop
xchg
add
jns
sbb
je
push
jmp
std
push
or
test
mov
and
out
std
loopne
not
jmp
scas
movsb
ret
ds
mov
mov
push
pushf
sti
push
mov
lea
add
rol
add
mov
mov
jmp
mov
mov
iret
pop
cmp
jle
loop
pop
loop
mov
test
pop
lcall
aad
fisttpll
out
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
jmp
xor
cmpsl
sub
test
pop
test
dec
cmp
ret
rorb
adc
pop
sahf
or
cmpsb
inc
xor
enter
push
mov
push
mov
jg
fs
adcl
call
mov
push
call
pop
jmp
scas
and
push
fisttps
flds
and
imul
pop
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
pop
add
add
add
add
pop
pop
pop
pop
sub
test
jne
add
popa
ret
jmp
sub
jmp
daa
scas
cmp
mov
test
leave
lods
and
and
push
shll
jmp
pop
pop
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
jmp
pop
rolb
shlb
cs
mov
fistpll
xor
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
jmp
cmp
adc
add
int
and
aaa
sbb
jb
pop
xor
ret
adc
ljmp
incl
inc
adc
rolb
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
xor
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
add
rol
add
mov
not
or
xor
lea
jmp
adcl
and
es
mov
clc
mov
test
out
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
jmp
sub
inc
fisttps
fsts
xchg
push
pushf
sti
push
mov
fisttpll
out
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
not
and
or
lea
add
rol
add
mov
mov
and
jmp
sbb
sbb
and
jge
das
mov
inc
mov
roll
xor
decl
mov
add
jmp
ret
test
pop
add
mov
js
jmp
dec
rolb
shlb
imul
sbb
pop
adc
xchg
jmp
mov
popf
jl
fmuls
add
sbb
mull
icebp
sub
inc
es
cmpsb
es
cs
sbb
shll
sub
shr
jmp
dec
aad
popl
jmp
mov
jmp
adc
scas
das
mov
push
test
push
lock
movsb
push
mov
imul
cld
incl
xchg
pop
cltd
sarb
es
inc
add
jmp
ret
add
push
pop
cld
decl
add
add
push
xor
add
jbe
scas
push
call
lock
mov
test
cltd
clc
or
lods
dec
add
fdivr
pop
add
test
mov
jg
push
and
pop
rolb
shlb
push
neg
mov
add
mov
cli
push
dec
fldt
sbb
pop
int3
stos
movsw
hlt
jmp
push
lds
iret
das
stc
lea
jmp
adcb
or
adc
push
xor
jb,pt
inc
push
call
sub
or
push
ret
cmpsb
push
cli
sbbl
out
sbb
repz
add
fidivl
sti
ljmp
cltd
add
ror
inc
jp
jp
in
inc
sub
and
push
mov
mov
fldt
push
mov
mov
mov
sub
push
push
lea
push
push
pushl
call
test
jl
mov
leave
ret
jmp
ret
jmp
pop
insb
or
xorl
adcl
test
pushf
data16
push
call
push
mov
jmp
pop
pushf
xor
inc
or
xchg
xchg
repz
in
dec
into
pop
cmp
aas
mov
fdivrl
cmpsb
cmp
in
sub
mov
jmp
push
adc
in
pusha
jmp
push
in
add
add
sub
test
je
push
push
push
jmp
push
fisttpll
out
sub
jmp
icebp
nop
arpl
popa
sbb
xor
call
pop
leave
test
mov
aad
daa
test
xchg
dec
push
pop
mov
lea
rep
xor
jmp
in
lcall
ficoms
cmpsb
push
cmpsb
xchg
adc
mov
and
add
out
ret
test
inc
add
je
pop
xchg
inc
add
scas
leave
cmp
ficomps
cmp
cmp
or
xchg
dec
mov
inc
add
lahf
sub
mov
inc
add
sahf
mov
imul
dec
js
and
pop
jmp
or
hlt
popa
icebp
nop
arpl
fcompl
xor
inc
jmp
dec
fimuls
push
inc
rolb
shlb
sahf
or
cmpsb
push
jmp
jmp
xor
jmp
jnp
jbe
loopne
xchg
jmp
pop
lds
iret
fs
mov
jmp
sbbl
out
sbb
out
stos
xor
int
mov
jne
mov
jmp
mov
xchg
adc
lahf
sub
aad
inc
or
pop
add
loop
cld
lcall
les
xchg
testb
shrl
pop
lea
lea
jmp
inc
les
int3
sub
aam
fwait
or
jns
pop
mov
sbb
add
sub
inc
cmp
jb
push
lea
push
lea
push
jmp
push
aad
sub
xor
xchg
add
jae
inc
shll
out
mov
mov
dec
add
lcall
push
jge
je
and
or
push
or
out
dec
and
shl
jne
mov
push
jmp
pusha
out
jg
jmp
xor
sub
xchg
add
jno
dec
sub
int
shr
or
jmp
stos
es
cs
sub
jmp
fistps
jmp
sbb
jnp
lea
jmp
sub
call
xchg
imul
or
or
lea
jmp
add
sub
pop
jg
pop
scas
js
out
mov
out
adc
imul
mov
and
xor
xor
dec
fst
movsl
xor
add
add
pop
add
fst
movsl
out
popa
popa
pop
mov
sub
lahf
out
dec
adc
out
mov
shr
lahf
add
add
test
xchg
add
js
or
lds
adc
mov
jmp
push
movsb
xor
cmp
mov
jno
js
ljmp
std
andl
mov
jmp
mov
jmp
mov
cmpb
pop
into
test
and
mov
call
mov
mov
test
jmp
aad
fdivrs
lahf
cli
or
jmp
in
dec
fdivrl
movsl
jmp
insb
int
and
push
mov
pop
je
push
push
mov
test
je
cmp
jb
cmp
jb
jmp
jle
xchg
cmc
add
cmc
jbe
cmpl
pop
xchg
repnz
mov
mov
pop
out
leave
aas
mov
call
jle
insl
scas
sub
xor
sub
pop
push
imul
adc
sarl
pop
pop
jmp
inc
pop
jmp
mov
mov
push
xor
and
push
xor
daa
inc
mov
or
fistpll
dec
push
jae
mov
mov
jmp
lock
jp
idivl
test
out
std
test
pop
mov
pop
adc
jge
add
lds
lds
add
inc
enter
es
fisubrl
adc
add
scas
aad
add
mov
jmp
dec
push
xor
daa
int
mov
mov
adc
je
jne
out
sbb
lods
adc
mov
test
lahf
test
inc
add
lds
je
jb
fs
add
je
mov
inc
add
add
xchg
inc
add
ret
xchg
bound
jb
xchg
inc
add
je
pop
imul
pop
out
adc
cmp
and
sub
add
add
inc
add
inc
add
or
dec
sub
lahf
push
jmp
icebp
notl
xchg
add
mov
imul
add
nop
push
popa
nop
pop
dec
frstor
test
mov
mov
ds
inc
mov
fsts
pop
test
dec
frstor
pop
loop
mov
xchg
pop
roll
aad
mov
fsubp
jb
xchg
je
jbe
loopne
dec
fmuls
fdivrs
hlt
push
cld
or
lret
jg
push
shll
nop
arpl
mov
xorb
push
xchg
add
cmp
ret
push
lds
xchg
lock
push
xorl
dec
and
jl
jne
gs
notl
xor
ret
push
lds
cmp
xchg
pop
xchg
adc
sbb
mov
shll
xor
scas
gs
gs
pushf
outsl
orl
xor
sub
jg
mov
inc
enter
and
test
test
test
push
idiv
outsl
lcall
add
sahf
cmp
pop
sub
arpl
push
cld
push
or
adc
sbb
mov
and
lahf
cmp
jns
popa
xchg
mov
fimull
mov
mov
dec
addr16
sbb
pop
leave
test
mov
push
shlb
insb
lahf
insb
mov
add
push
add
call
mov
test
je
mov
mov
add
cmpl
je
jne
std
data16
xchg
outsb
fdivs
add
jb
in
pop
mov
inc
cld
adc
push
test
movsb
ret
ds
test
mov
ss
mov
xor
jb
mov
jmp
mov
mov
jmp
je
inc
and
pop
shlb
xorb
ja
xorb
pop
cmp
push
mov
test
lahf
cmp
push
mov
test
mov
imul
mov
out
adc
dec
lock
loop
das
hlt
jne
mov
int
ret
cmpsb
push
mov
lods
cmp
jle
mov
mov
lea
push
pushl
mov
push
push
call
jmp
test
push
imul
jle
call
in
cld
fwait
jbe
mov
int
and
xor
sbb
orl
add
add
jne
call
jmp
mov
punpckhdq
jb
xor
lea
popf
in
idivl
rolb
cli
jmp
inc
push
pop
or
jmp
lds
mov
test
jmp
pusha
jmp
hlt
jl
jne
dec
xor
dec
clc
add
mov
add
lea
test
jne
mov
jmp
mov
push
mov
jmp
push
xchg
add
dec
fistpll
leave
test
mov
cmp
je
mov
mov
lea
push
push
push
push
call
test
je
mov
test
jns
mov
mov
and
push
pushl
call
jmp
add
add
pop
jmp
in
ret
jmp
jmp
cwtl
push
mov
gs
jl
adc
popf
sub
dec
adc
pushl
xchg
pop
bound
mov
imul
ss
jae
mov
add
cmp
jbe
jmp
mov
xlat
mov
xor
in
ret
jmp
sbb
pop
jp
xor
lea
jmp
jle
jp
in
sbb
xchg
and
fwait
icebp
push
adc
mov
mov
sbb
inc
and
sbb
pop
aad
fadds
add
add
adc
mov
mov
mov
cmpsl
add
add
or
je
int
push
inc
add
aad
mov
add
or
sub
filds
add
scas
xor
insl
std
test
ss
adc
popa
xchg
lods
adc
mov
test
lahf
jle
inc
add
add
dec
inc
sub
je
inc
movb
push
add
add
xchg
inc
add
xchg
inc
add
imul
pop
out
adc
sub
pop
inc
loope
adc
data16
arpl
xchg
gs
imul
add
jne
gs
sub
dec
das
fidivrl
push
mov
es
cmp
arpl
add
mov
add
cmp
jae
jb
xchg
adc
fdivl
in
loopne
cmc
pushf
outsl
idivl
mov
add
jmp
adc
push
popa
nop
jle
add
jbe
cmpl
lret
pop
ds
jns
lret
xor
call
mov
mov
add
mov
test
je
cmp
jbe
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jae
sub
mov
lea
jmp
fsts
mov
mov
in
jge
notl
addb
fs
imul
cmp
add
mov
cmp
sbb
mov
rorb
lods
shlb
add
out
mov
sahf
out
adc
cmp
xor
sub
lahf
mov
inc
add
add
out
mov
dec
out
adc
repz
mov
or
inc
cld
jmp
push
pushf
xor
dec
ljmp
stc
imul
xor
jmp
rclb
cld
mov
jmp
mov
icebp
push
push
xor
sub
dec
movsb
les
add
push
lahf
push
fwait
sbb
sbb
jmp
dec
int
adc
jb
jmp
sub
mov
inc
rolb
sarb
jl
repnz
add
add
add
add
pop
mov
cmp
jmp
inc
inc
and
jns
das
mov
mov
inc
mov
lods
add
pop
nop
mov
jmp
push
sbb
lea
movzwl
mov
jmp
mov
xchg
popa
clc
outsb
or
inc
or
and
daa
lcall
popl
lret
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
addl
inc
inc
test
jne
jmp
ja
jle
call
or
jmp
je
jmp
testb
cmp
sti
decl
jmp
mov
xor
incl
sbb
fisttps
xchg
or
sub
mov
jle
or
sub
and
add
cmp
jbe
jmp
ret
pusha
notb
ret
orb
xlat
xor
mov
cmp
jne
push
jmp
popa
out
adc
push
mov
int
mov
movsl
dec
dec
dec
mov
lea
cmpb
jne
add
jmp
push
fisttpl
fnstsw
lcall
loop
pop
loop
inc
xor
inc
call
jmp
cmp
and
mov
jb
sub
adcb
orb
cs
call
mov
pop
pop
mov
test
je
sub
push
lea
push
push
call
add
lea
push
movb
call
mov
test
jne
mov
mov
push
push
lea
push
call
mov
jmp
loope
cltd
push
sbb
or
mull
icebp
sbb
repnz
jmp
push
fldt
sarb
add
roll
mov
call
lahf
lcall
fnsetpm(287
jnp
mov
fistl
cmpsb
push
mov
inc
shlb
cmpsl
ret
testl
or
fwait
or
push
in
jge
testl
push
call
jmp
dec
ret
and
dec
out
mov
sbb
add
pop
dec
rcll
das
pop
js
xor
and
mov
inc
or
and
cmc
pop
add
add
out
out
sahf
pop
mov
cmp
xchg
and
fadd
sbb
add
int3
rolb
lahf
sbb
xor
fsubrs
testl
sbb
lahf
and
add
je
nop
rolb
lahf
lods
popa
stos
xor
pop
xchg
adc
add
dec
add
adc
test
jne
sub
push
sar
lea
mov
mov
push
push
push
call
mov
mov
mov
push
call
push
pushl
push
call
mov
add
push
call
push
push
call
imul
mov
pop
xor
pop
ret
jmp
test
mov
sbb
push
mov
pop
leave
test
lock
push
mov
sub
push
push
push
mov
push
pop
call
mov
rep
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jmp
rcrl
sarl
dec
adc
bound
add
jb
enter
sbb
xor
inc
ret
jmp
leave
mov
movsb
dec
mov
inc
test
jne
call
push
movsw
pop
mov
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
movsw
xor
mov
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
push
movsw
pop
mov
mov
movzwl
and
push
lea
jmp
and
gs
push
in
or
add
jno
hlt
lcall
add
sahf
adc
inc
and
cmpsl
add
add
dec
imul
xor
pop
add
xor
test
stos
inc
add
je
sub
lahf
add
add
fstpl
stos
pop
mov
stc
mov
enter
cltd
push
jl
inc
mov
shll
jb
in
inc
into
pop
cmp
xor
adc
aas
mov
inc
mov
std
insl
std
test
push
ret
ret
fwait
or
cmp
push
ret
cmpsb
push
nop
lret
arpl
xchg
andl
push
sbb
es
mov
add
add
mov
mov
jb
xor
jnp
mov
dec
roll
shll
xchg
add
sahf
aaa
sbb
pop
cli
push
pop
xchg
repnz
and
xor
pop
lahf
sbb
aaa
mov
inc
mov
sbb
add
call
push
mov
mov
mov
mov
daa
subb
std
je
lea
lds
iret
sub
xchg
pop
bound
adc
push
jnp
fs
or
adc
adc
mov
cmpsl
movsb
ret
ds
les
cmpsl
push
mov
and
cs
push
xor
push
dec
cmpsb
loope
call
nop
push
popa
nop
cmp
add
sub
sub
pop
into
test
and
out
mov
adc
xor
sbb
pop
add
and
mov
out
xchg
push
or
xor
pop
add
mov
jnp
mov
imul
fs
out
out
pop
mov
adc
test
xor
sti
sti
imul
fdivr
xchg
stc
sti
xchg
fst
movsl
xchg
sbb
movsl
sbb
pop
add
or
je
inc
push
inc
add
out
mov
jb
sbb
add
je
adc
jge
inc
add
aad
pop
adc
out
mov
mov
in
add
iret
and
fdivl
in
in
cld
fwait
jbe
out
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
movsw
xor
mov
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
mov
dec
mov
inc
test
jne
call
movsw
xor
mov
mov
movzwl
and
push
lea
push
push
call
add
add
cmp
jl
dec
mov
mov
inc
test
jne
call
movsw
pop
pop
xor
pop
leave
ret
jmp
jo
outsb
or
xor
gs
pushf
outsl
subl
xor
scas
dec
adc
mov
pop
pop
pop
leave
ret
jmp
push
fmuls
fdivrs
in
pusha
notb
lods
lret
inc
mov
cld
mov
push
mov
mov
mov
cmpl
jae
pushl
lea
push
push
call
add
add
or
push
push
push
push
push
lea
push
call
mov
cmp
je
xor
lea
stos
stos
push
jmp
sub
sub
cs
rorl
das
fidivrl
xchg
cmpb
jp
jns
jmp
cs
sbb
mov
mov
jge
inc
cld
cmp
je
jmp
push
sahf
or
add
add
cmp
dec
sub
pslld
pushf
outsl
lret
and
xchg
lods
leave
js
mov
push
push
pushl
call
pushl
mov
call
jmp
adcb
roll
add
dec
aad
sub
imul
in
je
sub
jge
je
cmp
cmc
icebp
fists
clc
lea
push
push
push
push
lea
push
push
pushl
call
loope
shlb
sbb
je
cmp
jae
push
add
push
push
pushl
call
add
movl
jmp
and
loop
inc
xchg
push
push
movb
movb
movb
movb
movb
movb
jmp
add
xchg
jb
cmp
cs
mov
inc
movb
mov
call
mov
jmp
aaa
stos
cmp
sbb
jmp
out
sbb
inc
mov
push
lea
push
xor
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jmp
mov
mov
and
divl
mov
movsl
sub
mov
push
pushl
stos
mov
mov
mov
call
jmp
xor
rolb
dec
cmpsl
das
test
pop
test
aad
adc
xchg
xor
jns
sub
lahf
cmp
popa
test
fimull
dec
or
dec
add
int
push
inc
add
out
mov
jb
jnp
add
je
fstpl
aad
inc
sahf
fldl
fst
movsl
movb
dec
mov
mov
arpl
xchg
movb
movb
movb
movb
movb
movb
mov
call
mov
call
mov
lea
push
jmp
pushf
pop
xor
push
ja
loope
inc
push
or
inc
lcall
cmpsb
popa
out
jg
jmp
nop
arpl
add
ret
fisttpl
xchg
add
add
imul
or
push
and
clc
pop
add
fadd
add
pop
xchg
inc
add
cs
xchg
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
jmp
cltd
push
test
push
cld
push
je
out
pop
add
mov
decl
test
pushl
jp
jmp
jnp
ljmp
jl
ljmp
jge
ljmp
movb
movb
movb
mov
call
mov
lea
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
push
push
call
push
push
pushl
mov
call
push
push
pushl
mov
call
push
push
pushl
mov
call
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
jmp
dec
mov
shl
loopne
jb
mov
add
add
push
ja
lea
push
push
movb
movb
movb
movb
movb
movb
movb
jmp
cli
insb
loop
je
rclb
pop
mov
mov
inc
mov
sbb
add
push
jp
bound
call
or
cmp
mov
fs
insl
hlt
pop
mov
push
xchg
repz
cmpsl
jne
bound
ja
loope
inc
fldt
cmpsl
aaa
push
mov
inc
mov
mov
mov
sbb
gs
pushf
outsl
mov
shlb
sbb
inc
push
jns
jmp
mov
lds
jb
mov
ljmp
cmp
push
xor
push
or
cli
jno
xorb
mov
dec
mov
add
pop
insb
loopne
adc
or
fiadds
cmc
in
jle
mov
xchg
sahf
or
push
in
dec
fdivrl
and
pop
call
and
push
lret
lods
imull
je
lcall
lods
and
or
movsl
xor
sub
push
mov
es
and
das
dec
mov
push
lods
lret
inc
ror
frstor
ljmp
jecxz
out
insl
std
test
pop
fdivl
in
mov
movsl
movl
inc
shlb
inc
es
in
cld
fwait
jbe
outsl
in
sbb
mov
nop
testl
and
push
cld
push
jnp
gs
adc
push
xchg
repz
cli
repz
pop
mov
gs
popa
sti
imul
xor
ljmp
lcall
cmc
sbb
lret
pop
enter
imul
lods
and
push
or
je
enter
les
mov
xchg
aad
xchg
ss
fistpl
pop
out
inc
adc
xchg
xor
pop
invd
add
aad
fadds
add
movsl
add
lds
xchg
gs
mov
cwtl
push
imul
movb
movb
movb
movb
movb
jmp
push
dec
and
out
adc
pop
in
mov
inc
mov
movb
mov
call
mov
jmp
pop
repnz
fs
sub
lds
js
push
adc
mov
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jmp
adc
or
add
jne
lock
bound
sahf
jns
xchg
lods
out
aad
fcom
xchg
stc
xchg
mov
mov
mov
pop
invd
add
or
je
ret
movsl
out
fstl
fdivs
fsubrs
add
xor
test
xchg
adc
sub
mov
dec
or
sub
mov
add
dec
fst
movsl
push
mov
push
adc
aad
lods
out
sahf
jns
and
mov
mov
adc
test
out
fadds
movsl
adc
roll
loop
in
inc
fidivl
fistl
push
or
add
pop
aas
lret
ljmp
stc
jmp
loop
addr16
inc
pop
jne
inc
pop
outsb
movb
mov
call
mov
mov
lea
push
push
movb
movb
jmp
lea
lahf
cli
or
cmp
movsb
cmp
dec
aad
int3
stos
rcrw
inc
push
imul
push
inc
lea
push
push
movb
jmp
and
sti
ds
incl
cld
stos
negb
addb
inc
inc
push
jmp
jb
loopne
cld
incl
imull
push
movb
movb
movb
movb
movb
jmp
or
aas
rorl
mov
call
sti
cmp
lock
push
mov
call
mov
lea
push
pushl
call
mov
lea
push
push
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
push
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
pushl
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jmp
jp
jo
loop
cmp
lret
pop
lret
scas
pop
repnz
push
call
jmp
jge
jo
loop
popf
pop
xchg
repnz
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
jmp
enter
pop
in
ja
dec
fstpl
pop
jb
or
pop
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
mov
lea
push
pushl
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
jmp
cli
js
mov
aad
les
sub
pop
mov
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
lea
push
push
movb
mov
call
mov
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jmp
addl
testl
mov
popa
add
adc
call
test
decl
test
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
jmp
addb
or
stos
sub
sub
inc
fdivl
inc
inc
fisubs
inc
filds
inc
loopne
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
mov
mov
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
push
call
mov
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
add
mov
cmp
je
lea
push
mov
push
add
push
push
mov
call
mov
mov
mov
mov
lea
push
pushl
mov
add
push
push
mov
call
jmp
xor
ret
pushf
popl
jmp
add
les
movsb
push
repnz
or
rol
mov
jmp
into
cld
push
or
call
aam
repz
lea
push
jmp
and
fcoms
lods
pop
mov
cltd
dec
cmp
jns
ret
jmp
adc
pop
iret
pop
cmp
aas
adc
xor
sbb
sbb
sbb
or
call
loope
cmc
push
call
std
insb
loop
je
setg
push
inc
outsl
clc
outsb
or
adc
mov
sub
jmp
mov
shll
cmpsb
jmp
test
xchg
adc
push
jmp
sahf
add
std
or
xor
jnp
jno
jecxz
pushf
or
mov
jmp
and
test
fs
push
add
aas
xor
mov
test
dec
das
fisubrl
jle
mov
mov
stc
xorb
ucomiss
add
sbb
cld
incl
sub
lahf
punpckhdq
iret
cmp
sbb
cmp
push
xor
ds
test
les
mov
stos
sahf
push
cmpsb
jl
lret
dec
roll
aad
jl
outsb
or
push
jge
outsb
or
adc
imul
insl
mov
lods
imul
inc
lret
lret
fwait
or
jg
leave
push
cmpsl
xor
add
stos
xor
decl
adcb
andb
xor
dec
add
pop
jp
arpl
jns
jmp
or
or
mov
js
cs
test
lcall
cmc
lock
bound
pop
mov
icebp
popa
add
push
push
xchg
or
insl
loope
call
iret
pop
cmp
jle
fwait
or
and
inc
and
ja
insb
loop
je
mov
xchg
sub
xchg
aaa
cmpsl
ret
rcll
mov
enter
xchg
jg
insb
or
in
xchg
pop
bound
out
repz
lds
iret
and
cltd
mov
fisubrs
add
repz
call
fwait
or
jb
fstpt
sbb
add
dec
fnstcw
mov
das
ret
sbb
out
pop
fs
out
pop
and
inc
jns
xchg
xor
ret
ret
xchg
stc
ret
pop
mov
mov
mov
fisubrl
add
je
inc
or
je
sti
int
push
inc
add
aad
pop
mov
lods
add
jg
and
sbb
add
add
je
sti
ffree
adc
fstl
fst
movsl
test
sti
int
push
inc
add
aad
mov
bound
ja
or
add
dec
sti
xor
inc
popa
fidivl
sahf
and
add
out
and
lods
test
je
sti
fdivs
ret
pop
inc
mov
out
and
mov
lods
rolb
lahf
or
add
add
fcoms
inc
add
fdivr
fmuls
cmpsl
outsl
pop
je
pop
or
add
add
push
xchg
add
hlt
mov
sbb
add
add
je
out
dec
dec
sub
lahf
push
dec
push
xor
cmp
icebp
lock
bound
or
xchg
push
mov
aad
mov
sahf
or
sahf
or
cmpsb
add
sbb
adc
mov
gs
cmp
stos
push
cld
lock
lret
mov
in
sbb
pop
sbb
pop
cmp
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
lea
push
pushl
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
movb
movb
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
mov
mov
lea
push
pushl
movb
movb
movb
movb
movb
movb
movb
mov
call
pop
mov
pop
pop
add
leave
ret
jmp
sbb
pop
int
shlb
loopne
xchg
sbb
inc
lcall
roll
aad
in
jae
xchg
inc
les
int3
cs
into
pop
cmp
aas
or
sbb
imul
inc
mov
insb
out
adc
or
pop
xchg
repnz
mov
mov
adc
mov
and
sti
jne
mov
aad
into
test
dec
adc
or
mov
hlt
fs
popf
insb
lret
mov
lock
inc
rolb
sarb
jbe
jo
loop
ret
push
les
sub
es
cs
lods
cmp
sahf
or
cmpsb
sbb
inc
mov
jmp
jb
cmp
push
lahf
push
add
aaa
xchg
or
sbb
frstor
lret
mov
and
ret
scas
das
mov
sbb
mov
jle
add
push
fisttps
flds
pop
cld
xchg
push
mov
es
test
in
cli
das
cmpsl
aaa
push
mov
out
sbb
and
ss
inc
fidivrl
mov
cs
ret
push
lds
lods
lret
inc
test
push
lds
and
pop
and
cmp
or
inc
mov
lods
sbb
data16
add
jns
stc
pushl
mov
xchg
adc
add
add
sub
lahf
int
push
inc
add
inc
push
inc
add
fdivrs
sti
pushl
fdivrs
std
pushl
pop
out
and
out
dec
mov
mov
sub
mov
lahf
int
xchg
inc
add
xchg
inc
add
fdivrs
mov
add
xchg
inc
add
int3
rolb
lahf
test
lock
pushl
add
je
mov
out
and
mov
dec
mov
inc
mov
lods
and
push
mov
lahf
int
xchg
inc
add
xchg
inc
add
fdivrs
mov
add
int3
rolb
lahf
int
push
inc
add
fcomps
aad
jb
pusha
inc
add
je
mov
jns
sti
pushl
add
je
inc
shll
stos
int
int
fisttpl
and
mov
inc
mov
jns
jne
out
inc
lahf
add
inc
shlb
daa
inc
mov
mov
mov
fstpl
xchg
addr16
lods
and
push
jecxz
icebp
nop
arpl
shrl
or
ret
push
lds
aas
mov
fstpl
test
ljmp
out
sbb
jg
inc
and
adc
mov
xchg
pop
pop
xchg
add
rolw
mov
cmpsl
jns
js
ljmp
push
in
ljmp
xor
daa
movsb
xor
xor
xchg
add
ss
add
out
jl
testb
ds
test
cli
popa
icebp
nop
arpl
mov
mov
sbb
mov
push
xor
imul
xor
inc
and
fidivrl
dec
sub
xor
js
lods
and
push
cld
adcl
test
loop
pop
loop
sub
test
mov
call
test
mov
and
and
cmp
sub
dec
fidivrs
int
subl
mov
js
pusha
scas
and
and
cmp
fisttps
movsb
push
repnz
inc
and
sbb
push
mov
push
mov
es
cmp
ds
test
popf
or
add
dec
fdivrl
sbb
xchg
aas
into
push
lds
addr16
cmp
mov
xchg
and
inc
mov
jmp
push
test
bnd
xlat
inc
and
pop
divb
jl
sbb
ret
mov
mov
sahf
jl
notl
add
fs
and
sti
mov
popa
jns
sbb
and
sti
aad
fsubs
xchg
stc
and
mov
mov
fidivl
add
je
daa
or
je
inc
push
inc
add
fst
movsl
mov
mov
and
out
sahf
adc
out
dec
ret
shll
popf
in
sti
addb
hlt
push
cld
push
dec
rcll
data16
push
cld
aaa
ret
dec
fdivrs
out
jno
xor
sub
pop
mov
xchg
icebp
add
or
inc
aad
sub
xor
xchg
fs
enter
outsl
adc
sbb
dec
xchg
add
std
or
add
mov
aad
and
loope
adc
adc
dec
fnstcw
sbb
and
int3
push
shlb
testl
imul
mov
inc
mov
or
ljmp
fisttpl
fnstsw
test
repz
cmc
adc
das
fidivl
movsb
and
sub
lds
cld
jg
mov
das
stos
cmp
dec
adc
fcoml
pop
xchg
adc
inc
iret
pop
cmp
xor
push
push
test
push
testl
adc
pop
popa
repnz
pop
repnz
cmp
and
adc
push
std
cmp
in
inc
xlat
inc
and
xor
jg
sbb
and
or
push
pusha
pop
repnz
rorb
mov
fidivrl
je
out
pop
test
stos
int
xchg
jae
jl
testb
movsb
ret
ds
aam
sbb
or
cmpsb
jb
xchg
add
je
setg
or
movl
xchg
add
jnp
mulb
push
fcompl
test
mov
cs
dec
lds
iret
das
pushf
adc
ja
insl
hlt
pop
into
out
std
test
sbb
jne
pop
das
cmp
sbb
cmp
jne
dec
add
add
xchg
inc
add
adc
jns
stc
pushl
rolb
lahf
adc
add
je
mov
test
inc
add
ret
and
ret
dec
mov
pusha
cmp
xor
movsb
and
add
lahf
aad
fsubs
fsubs
push
aaa
ret
lcall
cmc
pushf
outsl
cltd
insb
loop
je
and
sub
roll
mov
xorl
xchg
add
fimuls
push
fwait
push
pushf
sti
push
mov
movsl
xor
adc
pop
xlat
dec
fdivrl
mov
aad
sub
push
in
sbb
inc
sub
push
adc
in
sbb
jne
inc
and
pop
mov
cwtl
decl
push
lds
shll
ror
fistpll
xchg
adc
scas
das
mov
or
scas
cmp
mov
jne
insl
hlt
pop
out
jp
jp
cmpsl
sub
fistl
cmpsl
push
mov
adc
hlt
jns
mov
cmp
es
mov
in
cltd
push
decb
jecxz
jmp
mov
inc
mov
test
sti
ljmp
lcall
mov
push
les
int3
and
xchg
jb
sub
inc
aam
dec
mov
dec
push
enter
popa
movsl
cmp
mov
sti
push
push
cld
push
pop
lds
iret
jp
out
adc
inc
setb
addr16
and
insb
jmp
adcb
addb
rcll
adc
clc
push
loop
lock
bound
xor
cmpsb
and
rolb
shlb
mov
stos
int
shlb
jnp
in
add
lcall
jl
notb
lock
mov
aad
inc
add
xor
adc
fiaddl
movb
in
sahf
mov
xor
inc
add
fsubrs
xlat
cld
je
jmp
and
add
je
sti
and
and
xchg
or
je
push
dec
add
je
out
jns
int
xchg
inc
add
xor
out
pop
adc
mov
mov
and
adc
push
adc
sbb
popa
test
add
aad
fadds
add
add
adc
mov
mov
mov
fidivl
add
je
cmp
fst
movsl
out
fstl
fcomps
add
daa
or
je
push
test
pop
test
or
push
jno
imul
push
adcb
out
cli
iret
pop
repnz
fs
and
cmc
fs
popf
insb
scas
data16
adc
sti
ret
xor
inc
popa
lods
dec
mov
mov
xor
add
add
or
je
mov
aad
dec
mov
pop
xchg
inc
add
inc
push
inc
add
mov
and
sbb
imul
std
test
pop
iret
pop
cmp
aas
xlat
inc
shlb
mov
push
xor
js
notl
jns
jbe
loopne
filds
mov
out
mov
addr16
imul
xchg
lock
les
fstpt
outsb
or
push
test
mov
mull
icebp
sbb
add
roll
dec
scas
cwtl
sbb
aad
lret
jno
jecxz
lahf
sbb
cmpsl
aaa
push
mov
xchg
pusha
stos
mov
mov
fsts
mov
cmp
push
and
pop
jp
jg
xor
out
push
add
fs
imul
pop
call
jns
mov
lods
xor
add
je
into
pop
cmp
jno
fwait
or
pop
inc
mov
mov
xchg
jns
outsl
lcall
push
jno
daa
rep
lcall
push
popa
nop
es
mov
xor
jmp
push
in
inc
pop
push
xor
js
out
adc
inc
pop
enter
or
mov
mov
aas
jmp
xchg
cs
ljmp
stc
in
cmpsb
xor
scas
inc
ficomps
stos
pop
xchg
push
shlb
bound
call
sbb
cs
data16
xchg
outsb
movsl
dec
ret
ret
xchg
pop
bound
scas
pop
mov
mov
push
xchg
repz
cli
mov
mov
es
push
or
and
pop
int
and
push
imul
jb
jnp
in
add
bound
imul
pop
mov
mov
xchg
jb
cmp
pop
cmp
popa
or
mov
and
mov
push
mov
aas
scas
lret
js
jnp
in
pop
pop
repnz
fs
ja
xorb
icebp
popa
add
and
mov
nop
arpl
xchg
lahf
punpckhdq
xor
and
data16
xchg
outsb
subb
jne
insl
hlt
pop
out
lea
push
lahf
push
test
into
into
inc
mov
movsb
ljmp
sbb
adc
sahf
and
add
out
mov
push
dec
jns
lods
xchg
and
je
mov
test
inc
add
fadds
cmpsl
pop
les
inc
add
je
ret
ret
add
add
add
sbb
add
add
je
mov
and
sbb
fst
movsl
push
and
push
add
aad
sbb
dec
test
push
inc
add
aad
out
inc
out
sub
lahf
mov
mov
fidivs
cmp
je
add
add
je
aad
fdivrs
mov
adc
mov
scas
pop
nop
add
cmp
out
jg
jmp
xor
insl
stc
imul
push
xor
and
and
test
shll
js
ljmp
push
lret
cmpsl
push
sti
gs
pushf
outsl
shlb
cmp
add
dec
fidivrs
lds
and
aam
dec
leave
xchg
xor
mov
inc
mov
inc
les
int3
sub
push
pop
fisttps
flds
mov
mov
lcall
xchg
add
jnp
pop
leave
test
mov
add
fs
test
je
sahf
imul
xor
cmp
xor
sub
mov
lahf
ret
fdivs
jb
cmp
lahf
push
add
add
xchg
inc
add
int3
rolb
lahf
call
out
and
sti
dec
mov
dec
sub
sub
inc
stos
test
cltd
clc
or
into
inc
xlat
mov
lods
std
ja
xorb
cmp
sbb
push
shlb
and
ja
iret
pop
cmp
adc
xchg
add
jae
mov
outsl
stc
imul
fdivrs
push
jno
jno
int
and
arpl
mov
inc
mov
push
sbb
inc
shll
ds
test
adc
in
sbb
in
jg
mov
and
xchg
xchg
sbb
imul
insb
loop
je
arpl
jo
loop
xor
and
aas
mov
ret
mov
imul
push
xor
data16
popa
add
cmp
add
repz
lret
cmpsl
push
sti
enter
push
loopne
xor
push
lret
jmp
pop
int3
stos
iretw
inc
fmuls
fsubrs
fmuls
fcomps
fisttps
fldenv
mov
jg
pop
jecxz
notb
repz
cmpb
jo
fs
pop
pop
fisttpll
out
jg
imul
add
jge
lret
lret
sbb
aad
xorl
call
loope
std
test
mov
lods
lret
inc
movsb
jnp
gs
adc
enter
cmp
cld
xchg
cmc
add
stos
aas
scas
lret
mov
mov
dec
adc
es
stc
imul
jns
jmp
ljmp
setg
or
cmp
or
xor
and
das
mov
test
and
cmp
mov
repz
xor
inc
loop
pop
loop
loopne
lock
bound
enter
out
mov
push
xchg
add
repnz
pop
repnz
inc
aad
dec
lods
inc
lds
iret
and
mov
ds
dec
mov
pop
stos
or
ret
or
lahf
punpckhdq
cmp
xor
jnp
mov
in
cltd
push
outsl
lcall
fistps
mov
gs
popa
push
rclb
addr16
sahf
or
sbb
aad
into
push
lds
iret
and
sbb
jbe
push
addr16
dec
add
xor
or
outsb
fs
and
add
out
mov
adc
or
push
mov
dec
aad
fcom
xchg
stc
xchg
add
add
or
je
imul
push
inc
add
aad
pop
xor
clc
mov
fcomps
add
rorl
push
mov
cmp
xchg
mov
movsl
xor
mov
stos
aas
scas
lret
and
sbb
mov
scas
cmp
sbb
push
lahf
push
jp
jge
notl
jne
mov
fiaddl
mov
stc
push
xchg
add
sahf
aaa
movsl
xor
aam
sub
push
xor
ja
jne
mov
mov
mov
or
and
movsb
cmp
js
mov
lahf
sbb
cmp
push
lds
or
pusha
iret
dec
fidivrs
mov
es
out
sti
outsb
in
sbb
adc
mov
xor
push
xor
adc
outsl
pop
inc
and
cmp
fdivrp
jb
xchg
fistl
mov
dec
adc
or
fsubrl
or
xor
add
dec
sub
sbb
pop
int
addr16
pop
repnz
mov
fidivl
jnp
in
dec
mov
mov
pop
enter
iret
push
lds
jb
xor
jg
mov
movsl
cmp
adcl
test
jge
jbe
loopne
mov
mov
arpl
cmc
je
mov
inc
mov
push
fwait
or
jge
pop
int
test
xor
daa
jbe
add
sbb
out
sub
rorb
dec
mov
sub
pushf
adc
or
jmp
cwtl
push
test
push
cli
mov
lea
xchg
repnz
ret
movsb
push
mov
sti
adc
add
ret
test
adc
and
imul
fsubr
xchg
stc
out
xchg
mov
mov
mov
dec
inc
or
je
inc
or
je
ret
push
inc
add
aad
sti
and
add
mov
mov
cmpsl
lods
cmp
jno
ja
loope
jbe
jne
out
cs
mulb
sbb
mov
dec
mov
loop
notl
xor
push
dec
mov
inc
repz
cmpsl
push
sti
dec
xlat
inc
and
pusha
cwtl
push
xchg
repz
cmpsl
call
lret
pop
jb
es
jnp
in
pop
cmpsb
add
std
or
push
lock
ja
push
xor
sbb
inc
fidivrl
pop
cmp
sub
dec
fdivrs
aam
int3
fstps
stos
data16
pop
leave
test
mov
push
lahf
push
sbb
jg
mov
inc
mov
cli
jb
xchg
cmpsb
sub
in
clc
lahf
push
cwtl
adc
outsl
loope
adc
or
stos
pop
lock
sbb
inc
and
and
lods
cmp
mov
leave
pop
int
xchg
dec
fnsave
popf
setg
or
loope
ljmp
movsb
push
movsb
insb
cmc
gs
dec
mov
test
mov
xor
cmpsl
aaa
push
mov
fisubrs
push
mov
dec
mov
and
push
dec
lret
lret
hlt
push
cld
sbb
insl
std
test
divb
mov
inc
push
xor
daa
adc
adc
inc
shlb
pop
jp
jne
push
xchg
repz
test
mov
inc
mov
mov
scas
lret
mov
scas
lret
jno
les
mov
pop
cmp
ds
mov
ret
push
shll
fsubrs
ljmp
push
lahf
punpckhdq
or
adc
mov
push
leave
pop
cmp
cmp
mov
js
aas
call
fnstenv
test
pop
test
dec
inc
and
ja
rolb
shlb
cwtl
push
imul
and
notl
pop
fistpl
dec
adc
xor
ja
xorb
fisttpll
out
lea
in
mul
pusha
notb
mov
and
lcall
cmc
sbb
pop
lret
scas
pop
mov
mov
xchg
pop
cltd
adc
test
stos
cmp
dec
or
pushf
pop
xchg
adc
mov
mov
adc
in
sbb
ljmp
mov
push
in
xchg
add
inc
shll
mov
out
xor
test
aas
inc
add
mov
test
fimull
mov
mov
add
fidivl
fdivs
add
sahf
push
and
cmpsb
cmp
in
sbb
dec
or
jg
jg
jmp
push
jno
jecxz
adc
pop
jb
sub
jo
loop
push
inc
loop
call
and
sbb
dec
frstor
or
xor
adc
cmpsb
inc
add
lahf
aad
fdivs
xor
xor
ret
aaa
je
fs
add
je
out
jge
inc
add
aad
imul
fdivs
fwait
or
xor
mov
and
or
mov
inc
mov
pushf
push
mov
es
mov
pushf
sbb
aad
out
sahf
adc
pop
dec
ret
mov
sbb
add
fsubs
mov
aad
ret
ret
js
outsl
or
in
rcll
sub
insb
loop
je
sbb
pop
fdivl
in
pop
repnz
xchg
cmpsb
imul
dec
frstor
gs
jo
lods
lret
inc
movsb
sahf
adc
jo
xorl
arpl
inc
mov
into
pop
cmp
jno
and
repnz
pop
repnz
mov
mov
and
loope
mov
xchg
pop
bound
psubd
shlb
jmp
jge
enter
pop
idivl
lcall
xor
cmpsl
aaa
push
mov
push
stc
cwtl
imul
mov
dec
fistpll
xlat
mov
lods
inc
lds
iret
and
outsl
lcall
xor
scas
inc
out
imul
clc
outsb
or
sbb
orb
stc
or
rorl
dec
cmpsb
rcrb
stos
data16
xchg
add
jp
add
stos
cmp
inc
mov
ret
jg
jge
notl
lods
cmp
xchg
pop
bound
adc
movaps
push
lds
pop
roll
aad
xor
lock
repnz
pop
repnz
outsl
mulb
inc
enter
pop
test
shr
ja
xorb
xchg
pop
bound
lret
cmp
mov
movsb
ret
ds
dec
int3
inc
and
or
jle
push
ret
cmpsb
push
mov
loopne
cltd
and
cmc
gs
adc
adcl
test
pop
test
jle
fs
xor
xor
push
fisttps
flds
sub
sbb
mov
inc
mov
cs
pushf
or
jl
sbbl
pusha
notb
or
xor
xchg
lahf
add
sbb
adc
es
cs
fisttpll
stos
das
mov
pop
lret
scas
pop
mov
or
mov
stos
int
aad
or
in
hlt
outsl
jmp
arpl
je
out
pop
leave
inc
shll
std
test
sbb
push
fisttpll
out
xor
pop
xchg
repnz
out
jl
negb
cmp
sub
and
mov
mov
jbe
cmpl
jp
jp
inc
rolb
sarb
xchg
add
int
into
test
adc
jo
leave
pop
cmp
jg
sub
adc
xchg
inc
fisttps
fsts
nop
push
popa
nop
cmp
mov
jno
jecxz
in
aam
dec
leave
loop
notb
jp
in
or
push
pop
xchg
mov
je
out
pop
push
aad
sub
cmp
lds
stc
out
inc
int3
inc
and
in
jle
cwtl
adc
mov
dec
mov
xor
sub
data16
xchg
outsb
mov
or
mov
mov
es
mov
shl
in
jg
enter
pop
movsb
jl
js
ljmp
aam
data16
xchg
outsb
xchg
pop
aas
lret
xor
ljmp
dec
adc
dec
jge
jp
in
push
push
adcb
subb
aas
scas
lret
loopne
fldenv
dec
fs
and
add
out
imul
test
push
inc
xchg
adc
mov
imul
xchg
imul
sbb
movsl
push
inc
or
je
pop
or
je
mov
jge
inc
add
aad
and
pop
sub
lahf
ljmp
js
mov
lods
cmp
loop
pop
loop
es
inc
mov
add
inc
and
das
loopne
jmp
fdivl
in
std
fs
popf
insb
rorl
xchg
add
loop
pop
loop
jbe
js
ljmp
jl
movsb
ret
ds
clc
jg
mull
icebp
sub
dec
sub
aas
daa
movsl
xor
cld
xchg
cmc
add
scas
sub
mov
inc
mov
jo
push
cld
adc
pop
cmp
aas
xor
ret
mov
jmp
adcl
and
leave
pop
cmp
sub
dec
fdivrs
cmp
inc
dec
fmuls
fsubrs
cmp
jno
mov
shl
jbe
cmpl
es
cs
pop
enter
outsl
mov
mov
lret
lret
mov
mov
lahf
je
js
ljmp
lret
mov
xor
sbb
ljmp
stc
addb
adc
push
and
adc
icebp
jo
xorl
mov
popf
insb
mov
cld
add
movsl
sub
fisttpll
out
insl
loopne
adc
adc
aad
sub
xor
mov
xchg
add
std
or
sbb
cs
aas
test
pop
test
xlat
inc
shll
call
push
shll
or
dec
rcrl
pop
into
iret
push
les
in
mov
add
hlt
xchg
outsb
scas
xor
in
bound
shlb
jle
call
je
arpl
scas
aas
pop
test
nop
arpl
mov
cmp
sub
cli
and
aaa
push
mov
add
int
addr16
inc
daa
rcrb
mov
les
fsubrl
ret
push
aaa
ret
xlat
inc
and
sub
out
scas
cmp
mov
sub
hlt
imul
insl
test
or
loop
jmp
jge
inc
roll
sarl
jnp
jl
notb
push
shll
xorb
inc
and
ja
push
lds
clc
or
mov
add
pop
shlb
gs
or
stos
cmp
sub
mov
inc
mov
cmp
and
lcall
xor
xchg
adc
lds
or
je
out
adc
sahf
dec
sti
mov
and
adc
inc
or
je
cmp
dec
fidivrs
aas
pop
test
jp
mov
hlt
inc
int3
inc
and
lcall
psubd
ret
out
add
ret
imul
dec
popa
mov
and
dec
and
dec
aad
fsubs
xchg
stc
and
mov
mov
mov
mov
lds
or
je
dec
or
je
xor
jge
inc
add
aad
ret
and
jns
mov
popa
xchg
lret
add
pop
into
test
pop
and
lret
mov
fnstcw
test
mov
inc
mov
ljmp
adc
add
das
mov
mov
dec
mov
int
faddl
xor
and
push
ret
cmpsb
push
mov
jle
mov
add
xor
inc
stos
mov
test
repz
cmc
adc
dec
fistpll
loope
jae
rolb
mov
test
xor
scas
aas
pop
test
call
mov
adc
jp
jp
aaa
mov
nop
or
popa
icebp
nop
arpl
mov
test
push
mov
jno
xorb
jmp
sahf
pop
xchg
repnz
mov
inc
mov
sbb
loopne
shll
xchg
adc
mov
ljmp
fs
popf
insb
mov
pop
lret
scas
pop
mov
ja
xorb
inc
fidivrl
push
jns
popa
jb
outsb
or
sbb
cmpsl
aaa
push
mov
inc
mov
and
pop
inc
and
cmp
mov
inc
mov
gs
jg
jmp
psubd
xchg
mov
sbb
imul
pop
sti
jmp
call
mov
gs
jbe
mov
xchg
jl
ret
ret
iret
pop
cmp
jo
and
fs
xor
add
test
inc
adc
cmp
add
aam
sub
push
jno
push
inc
mov
stos
cmp
or
mov
sahf
aas
fs
out
pop
and
mov
inc
dec
sbb
fisubrl
add
je
out
sahf
adc
pop
dec
ret
mov
sbb
add
fsubs
mov
dec
dec
and
inc
add
subl
cwtl
stc
jae
xchg
pop
roll
aad
push
test
jge
jge
or
mull
icebp
push
pop
mov
xchg
sub
mov
dec
mov
xchg
and
insb
loop
je
cmpsb
cmp
xchg
add
sahf
sbb
mov
jnp
mov
jl
das
lods
cmp
xchg
or
jle
mov
adc
int
fistpll
inc
and
mov
xchg
icebp
add
cltd
adc
inc
fidivrl
pusha
pop
repnz
mov
out
jg
jmp
sub
xor
in
or
in
cld
sahf
adc
pop
iret
stos
pop
shrb
or
lds
cmpsl
imul
cmc
add
lret
stos
data16
inc
and
jns
gs
pushf
outsl
pushf
sub
and
repnz
pop
repnz
mov
mov
push
dec
inc
and
imul
test
mov
mov
cld
xchg
cmc
add
push
mov
gs
inc
loopne
icebp
nop
arpl
adc
jb
insl
gs
adc
or
ljmp
mov
scas
dec
rclb
and
jle
mov
aad
out
cmp
sub
push
adc
rorb
push
mov
iret
pop
cmp
sbb
or
or
cmpsb
dec
pop
lret
xchg
jmp
mov
jmp
imul
and
push
xor
cmp
jge
je
insl
cmc
data16
xchg
outsb
fwait
jnp
jns
jmp
lret
test
lcall
enter
addr16
sub
jae
je
out
dec
pop
xchg
add
v4fnmaddps
popa
ljmp
stc
scas
pop
push
xor
jno
popa
icebp
nop
arpl
dec
roll
shll
sbb
and
sahf
cmp
mov
ret
shll
xorl
aad
clc
jns
mov
stos
sub
inc
fidivrl
inc
sub
xor
and
inc
shll
xchg
cmc
add
push
imul
push
xor
sahf
aad
fdivs
xchg
stc
xor
lods
pop
mov
mov
mov
push
xchg
pop
or
je
out
int
push
inc
add
aad
sahf
adc
out
fadds
mov
test
aad
fsubrs
sti
out
sbb
add
add
je
ret
ret
add
fsubs
jb
xor
add
add
fsubrs
add
ret
xchg
inc
add
fsubrs
out
inc
and
out
inc
ja
adc
and
out
inc
ja
sbb
sbb
int
xchg
inc
add
or
inc
out
add
sahf
inc
ja
cmp
out
cmp
inc
ja
add
add
sti
int
xchg
inc
add
int
push
inc
add
fsubrs
out
fwait
sbb
sahf
int
xchg
inc
add
or
ja
fsubrs
fsubrs
or
ja
fsubrs
push
inc
add
out
fwait
or
dec
int
xchg
inc
add
mov
push
inc
add
ret
inc
xchg
bound
roll
and
add
je
sahf
fsubrs
cmp
fcomps
and
mov
inc
ret
ret
sub
or
loopne
clc
lahf
push
xchg
sbb
mov
inc
mov
and
cld
jb
xchg
cmpsl
sub
lods
lret
inc
scas
jns
push
cld
or
adc
push
mulb
or
scas
aas
pop
test
jge
dec
jno
jne
out
cmpxchg
mov
les
ret
push
lds
setp
outsl
lcall
hlt
mov
mov
icebp
popa
add
pop
int3
pop
lret
scas
pop
in
add
lahf
punpckhdq
xchg
pop
push
xor
jns
cmp
mov
ret
add
out
sti
sahf
insl
mov
repnz
into
pop
cmp
aaa
jl
xchg
testb
test
insb
loop
je
ret
inc
aad
dec
mov
sti
adc
cmpsl
aaa
push
mov
decl
lods
pop
popf
or
lds
iret
and
in
cmp
and
push
leave
dec
fstpt
xchg
adc
loop
out
jo
sub
xor
jbe
jne
out
cs
scas
aas
pop
test
mov
push
jns
pusha
or
push
lds
clc
or
pop
repnz
pop
int3
stos
fnstenvs
jle
call
ljmp
call
jg
cmp
add
lods
pop
ficompl
into
sub
push
inc
les
int3
sub
test
rclb
mov
adc
mov
fimull
fisubl
add
decl
popa
inc
and
cmp
add
fcoms
inc
add
lock
int3
sahf
fs
pop
sti
adc
add
inc
mov
mov
dec
inc
or
je
mov
add
decl
jns
and
cmp
add
enter
lahf
test
lods
pop
mov
lret
and
push
add
pop
iret
stos
pop
add
fnstcw
cmpsb
shll
ret
movsb
push
mov
scas
inc
test
test
push
jmp
push
test
push
mov
sbb
mov
mov
and
into
cmp
ret
ds
mulb
nop
arpl
push
pushf
xor
push
lahf
add
std
or
mov
xchg
mov
dec
mov
xorb
popa
icebp
nop
arpl
inc
fimull
fidivl
xchg
add
es
xor
xchg
pop
xchg
adc
js
imul
insb
or
out
inc
aad
dec
scas
fwait
and
pop
int
addr16
jbe
cmpl
das
mov
rcll
and
push
aaa
ret
lods
cmp
cltd
or
ja
outsb
cld
fwait
jbe
xchg
sbb
roll
aad
push
jne
out
sbb
push
push
outsl
or
repnz
cmp
lds
iret
push
xchg
or
jo
xorl
xlat
cmp
pop
cld
add
mov
mov
nop
push
popa
nop
cmp
data16
xchg
outsb
roll
lahf
punpckhdq
adc
push
out
jmp
in
sbb
pop
sbb
dec
in
jge
divl
jp
jp
inc
les
int3
sub
mov
mov
ficompl
jb
in
outsb
out
jg
jmp
jge
outsl
test
jnp
in
or
jno
xorb
push
mov
mov
and
add
xor
int
ficoms
repz
and
ret
out
imul
xor
push
inc
or
je
inc
push
inc
add
out
fdivs
and
mov
mov
inc
add
sahf
fdivs
add
adc
out
adc
dec
xor
dec
or
je
push
push
or
jmp
or
call
in
jl
jne
and
jnp
lds
mov
jmp
cld
jae
xchg
xorb
es
push
mov
jmp
push
mov
jns
push
ljmp
stc
in
pop
int
and
cmp
sbb
mov
jmp
push
lret
lret
les
int3
jp
inc
mov
mov
jmp
mov
jmp
pushf
popl
jmp
aad
ret
cmpsb
push
cli
cs
dec
mov
scas
pop
repz
mov
call
jp
jnp
in
pop
mov
sub
add
jmp
cmpsl
jmp
daa
cli
not
not
jmp
cmpsb
cmp
enter
jg
pusha
notb
ss
mov
add
mov
jmp
lea
mov
cmpsb
shll
sub
inc
mov
pushf
jmp
call
addl
lods
lret
inc
movsb
divl
xorb
ljmp
jg
in
add
shr
aam
test
jge
lret
dec
fdivrl
punpckhdq
test
inc
add
ret
sti
mov
xchg
repz
cmc
cmp
popf
or
fs
add
push
add
pop
dec
inc
mov
movsb
decb
sti
cmp
mov
out
clc
lahf
push
stos
adc
jbe
inc
add
lds
jmp
scas
inc
shll
lret
test
test
cmp
add
cmp
push
adc
and
lahf
fimull
mov
sahf
fst
movsl
mov
inc
mov
aad
mov
inc
mov
fidivrl
out
sti
imul
mov
repz
lock
bound
movzbl
jmp
sub
and
mov
shrl
pop
pop
mov
dec
jmp
jae
je
out
dec
rep
lcall
xchg
testb
pop
lods
ret
pop
enter
rorl
movsb
push
cld
lea
and
movsl
into
das
scas
jbe
shlb
adc
mov
jmp
lret
push
lds
inc
mov
jp
dec
sub
pop
shlb
arpl
sbb
cmpps
mov
jmp
mov
mov
sbb
ja
jmp
pop
adc
add
call
int3
stos
data16
testb
push
mov
mulb
pop
cmp
mov
push
add
ret
clc
sti
call
sti
sbb
jns
mov
dec
mov
pushf
jmp
daa
mov
inc
mov
scas
sub
xor
jmp
add
mov
jmp
idivb
je
imul
and
jnp
data16
or
call
mov
fisubl
bound
outsb
or
adc
outsb
cld
fwait
jbe
and
inc
add
or
sti
pushl
sub
stos
test
loopne
mov
jle
dec
or
jnp
jnp
and
mov
mov
jmp
sbbb
out
sbb
inc
add
into
sti
sti
decl
icebp
push
shll
aam
aam
sahf
mov
pop
add
xchg
test
aad
fmul
mov
adc
mov
mov
sti
fdivr
fcom
jne
cmp
inc
add
je
fst
movsl
fisttpll
mov
xor
fdivs
mov
fdivs
adc
frstor
fisttpll
sti
fst
movsl
and
fst
movsl
or
sub
add
add
push
inc
add
imul
addb
add
mov
lock
movsl
xor
rolb
add
pop
lret
scas
pop
repnz
adc
cmp
xchg
jno
popa
add
and
rolb
push
cmp
sub
dec
ret
mov
and
push
test
push
push
sbb
ja
xorb
pop
cmpsb
xor
ret
push
lds
push
fisttps
pop
xchg
pop
bound
or
pop
xchg
sbb
imul
stos
cmp
out
adc
sbb
jns
jmp
fwait
or
test
jge
outsb
mov
rorb
adc
or
daa
subb
mov
xor
mov
xchg
mov
sahf
aad
fsubrs
jp
in
push
pop
lds
iret
fs
lock
aad
push
mov
push
sub
or
jmp
in
jle
jmp
aas
mov
out
jmp
scas
aas
pop
test
arpl
mov
jmp
loope
icebp
nop
arpl
sbb
jns
outsl
or
out
cli
jno
insl
shl
add
fldl
push
xor
and
mov
dec
mov
pushf
popl
jmp
mov
and
repz
cmpsl
and
mull
xor
sti
lods
and
movb
out
out
out
out
fsubr
xchg
stc
out
xchg
sbb
movsl
mov
xchg
add
fst
movsl
mov
xchg
xchg
cwtl
xor
jns
mov
and
add
sti
adc
cmp
mov
sub
lahf
mov
sub
lahf
int
xchg
inc
add
mov
xchg
add
lahf
adc
fnstsw
dec
out
fisttpll
aad
mov
fcomps
add
adc
add
add
rcll
and
fs
pop
push
ss
add
pushf
jmp
insb
in
sbb
scas
sub
jnp
add
repnz
ljmp
iret
mov
test
cmp
jg
add
adc
inc
std
popl
jmp
outsb
loop
pop
loop
cmp
daa
inc
mov
movsl
xor
outsl
icebp
push
mov
sub
jmp
lods
lods
lret
inc
mov
push
ret
cmpsb
push
hlt
mov
out
push
xor
jle
add
fwait
repz
ljmp
jge
add
xchg
repz
lcall
in
push
jmp
sub
push
lds
popf
or
pop
int
addr16
jnp
jmp
mov
lret
call
push
lds
iret
and
and
cmp
dec
inc
and
push
sbb
js
sar
jmp
scas
xor
inc
fisttpll
out
out
out
mov
mov
mov
sbb
lods
pop
jmp
push
xchg
repz
mov
movsb
cmp
sub
sbb
and
in
and
addb
repnz
incb
add
add
rcll
mov
pop
cmp
sub
inc
fidivrl
dec
sub
pop
imul
jmp
popf
movsl
sub
fs
jge
notl
movsb
cmp
addr16
push
lds
pop
stc
insl
loop
pop
loop
orb
sti
push
lcall
out
fisttpl
fnsave
sub
int
repz
les
mov
stos
inc
shll
cmp
inc
cld
push
repz
xchg
outsb
leave
mov
and
jl
testb
cmp
add
mov
inc
mov
aad
fnstcw
mov
and
mov
ljmp
stc
mov
stos
cmp
sub
lahf
punpckhdq
xor
sbb
jae
xchg
jmp
xchg
stos
sub
roll
sarl
in
push
lahf
push
fcomps
mov
xchg
testb
andl
push
adc
sti
imul
adc
cmp
xor
imul
out
xchg
adc
mov
xchg
adc
push
adc
adc
add
imul
pop
xor
fwait
jo
push
ret
cmpsb
push
mov
or
in
cli
in
notb
mov
and
xlat
pop
repnz
fs
scas
es
cs
nop
push
popa
nop
jle
jle
mov
cmp
xor
mov
mov
fwait
decb
pusha
xchg
jns
jb
xchg
fmuls
mov
push
jns
dec
push
stc
fs
imul
xor
sti
sahf
pop
mov
or
dec
and
xor
add
xor
xor
sahf
fst
movsl
or
mov
mov
mov
scas
pusha
or
je
jb
add
int
push
inc
add
aad
sahf
and
add
ljmp
add
fs
xor
sti
out
imul
jns
mov
popa
test
add
sbb
xor
int
aam
cmpsl
aaa
push
mov
xorb
jp
jp
addr16
insl
hlt
pop
lods
push
roll
aad
cmp
imul
or
adc
sub
cmpsl
adc
pop
jp
adc
xchg
add
adc
adc
pop
xchg
adc
data16
adc
movhps
mov
sahf
stc
or
mov
mov
pop
mov
movsb
cmp
inc
imul
adc
or
lret
outsb
cmp
push
jecxz
push
in
adc
or
jle
roll
aad
stc
jnp
mov
ret
movsb
push
mov
push
mov
testb
lahf
punpckhdq
push
scas
insl
lods
cmp
cwtl
push
imul
movsb
ret
ds
and
sub
aaa
and
repnz
lahf
push
sbbl
out
sbb
sarb
jo
xorl
cltd
push
cs
inc
mov
or
cmp
mov
xchg
cmp
mov
gs
inc
rclb
mov
or
cmpsb
inc
test
mov
mov
inc
mov
mov
movsl
mov
mov
stos
cmp
inc
xor
inc
roll
aad
cmpsb
xor
scas
gs
sbb
mov
scas
leave
cmp
jp
imul
sbb
jo
xorl
sbb
fisttpll
movsb
push
mov
testl
dec
lock
xor
stos
cmp
dec
mov
mov
and
mov
filds
dec
fnstsw
dec
sub
sub
jb
xchg
pop
lret
pop
ds
aas
cmpsb
xor
scas
adc
stos
jbe
imul
fcoms
xchg
stc
adc
mov
mov
bound
add
or
je
lods
out
int
pop
dec
add
ss
out
jp
dec
add
out
fadds
mov
add
fsubrs
xchg
testb
mov
cmc
add
or
daa
fdivrs
jp
jb
inc
and
pop
dec
into
pop
cmp
add
fisubrl
stos
cmp
dec
mov
movsb
ret
fcompl
int3
lods
sub
arpl
xchg
lea
sahf
or
cmpsb
dec
cld
jbe
cmpl
mov
inc
mov
rcrb
scas
pop
xchg
mov
shl
outsb
cld
fwait
jbe
pop
rolb
shlb
stos
es
cs
sbb
fmull
mov
adc
je
data16
xchg
outsb
leave
mov
mov
cs
dec
fimuls
add
aas
scas
lret
lods
aas
scas
lret
inc
rolb
shlb
jnp
mov
and
cltd
pop
xchg
repnz
in
pusha
notb
fwait
decb
mov
ljmp
cld
pop
int3
stos
data16
scas
cmp
mov
push
roll
roll
adc
hlt
je
lea
dec
fistpll
loop
je
xchg
push
test
push
mov
ret
rcll
mov
ret
mov
mov
sbb
or
push
cltd
adc
sub
cmp
inc
shll
js
ljmp
lea
mov
inc
mov
push
rcll
dec
fmuls
fcomps
loopne
in
jle
jle
jg
jmp
adc
pop
push
repz
les
int3
cmp
and
pop
lods
push
test
push
mov
js
scas
xor
adcl
movsl
xor
mov
inc
mov
repnz
roll
stos
dec
mov
sahf
stc
or
mov
ret
rcll
lods
pop
mov
mov
mov
aam
test
dec
out
xchg
out
xor
ret
sahf
mov
dec
adc
sbb
jns
mov
out
fcom
xchg
stc
xchg
fst
movsl
sbb
mov
mov
mov
imul
or
je
pop
int
push
inc
add
aad
push
sub
mov
in
sbb
cmp
push
xor
add
cmp
jo
insb
or
loop
mov
mov
fnsave
ret
push
lds
icebp
popa
icebp
nop
arpl
call
inc
mov
mov
mul
jnp
mov
push
push
xor
and
adc
adcl
test
pusha
notb
cmp
sbb
mov
dec
roll
shrl
aam
sub
fnstcw
mov
es
xchg
or
mov
mov
insl
std
test
cld
jle
mov
cmp
and
lock
adc
daa
sarb
loope
hlt
xchg
outsb
mov
dec
ret
mov
adc
testb
andb
movsb
ret
ds
push
fisttpll
out
ficoms
mov
add
sahf
jl
sbb
adc
in
sbb
mov
rcrl
xlat
and
jns
mov
push
mov
es
in
jge
notl
aad
shlb
mov
cmp
fldl
mov
aad
dec
sti
mov
mov
xor
adc
sbbl
and
dec
roll
sarl
mulb
dec
and
adc
mov
jnp
dec
sub
pop
jp
outsb
or
sub
mov
movb
dec
scas
stc
js
mov
xor
fs
adc
add
jp
jp
aam
mov
xchg
adc
fistl
mov
pop
cmp
add
mov
inc
mov
mov
fcom
pop
into
test
sub
imul
add
pop
mov
inc
add
fs
mov
pop
add
or
insb
or
je
fadd
fadd
sub
leave
je
and
lahf
cmp
mov
lahf
test
clc
adc
jl
testb
push
xor
daa
mov
mov
das
fsubr
jle
mov
cmpl
inc
xlat
mov
lods
or
sti
insl
std
test
dec
fimull
fidivrl
mov
dec
mov
inc
mov
fadds
mov
jmp
mov
pop
lock
repnz
pop
repnz
mov
out
setb
addr16
and
lahf
sbb
jbe
cmpl
cmp
mov
nop
lahf
sbb
aad
ret
jmp
data16
xchg
outsb
mov
dec
sub
btc
mov
movsb
out
push
lahf
push
arpl
je
out
pop
cmp
and
mov
sbb
dec
test
and
fdivs
stos
lea
xchg
lock
mov
shlb
push
imul
insl
std
test
sahf
adc
sub
rolb
rclb
mov
mov
mov
ljmp
add
std
or
scas
xor
int
int
test
pop
test
outsl
cmc
gs
push
xchg
or
xchg
or
cmp
ret
ret
mov
inc
mov
jmp
xchg
gs
dec
fnstcw
fdivrl
arpl
cmc
adc
ds
dec
fistpll
xchg
cmc
add
imul
mov
stos
ljmp
sub
or
data16
xchg
outsb
movsl
xor
mov
fcmovnb
dec
fdivrl
cmp
inc
orb
daa
mov
and
xchg
push
xchg
repz
sti
mov
lea
inc
and
sbb
cmp
cmp
jmp
in
je
insl
test
xchg
adc
add
lcall
sti
add
mov
jns
mov
imul
imul
xchg
imul
add
add
or
je
mov
jge
inc
add
aad
out
inc
xchg
int
push
inc
add
fsubs
mov
push
jecxz
scas
aas
pop
test
xchg
fstl
pop
cmp
popa
sbbb
fimuls
dec
mov
mov
lahf
punpckhdq
sahf
insl
in
mov
cwtl
decl
fiadds
push
xor
sub
dec
outsb
in
jge
notl
aas
mov
cmpsl
and
imul
dec
fdivrl
mov
jge
jp
in
push
sbb
add
mulb
push
cmp
jae
inc
and
pop
adc
and
inc
shll
pop
cmp
cmp
mov
inc
mov
imul
xchg
adc
or
das
mov
das
mov
xchg
add
ss
sbb
mov
js
sbb
popf
jg
std
insl
hlt
pop
out
add
cli
jne
mov
xchg
add
je
lea
mov
mov
cld
cli
insb
loop
je
loop
jmp
jge
mov
mov
sbb
cmpsb
xor
notl
nop
or
push
lret
cmc
jnp
jo
loop
cld
lock
lret
stos
cmp
mov
pop
push
xor
js
test
pop
test
pusha
rcll
inc
xchg
std
or
inc
les
int3
sub
dec
frstor
in
pop
call
nop
push
popa
nop
jns
rolb
shlb
in
notb
out
mov
xor
adc
add
add
pop
add
add
jge
lock
adc
push
xor
sub
iret
pop
cmp
jnp,pt
fs
or
scas
aas
pop
test
aad
sar
outsl
fs
out
and
inc
popa
test
add
cmc
jle
mov
outsb
popf
push
jo
outsl
or
jmp
bound
je
dec
ret
ret
lret
lret
fs
popf
insb
test
arpl
xchg
gs
cmpsl
movsl
fs
imul
add
pop
ret
test
push
and
imul
fsubs
xchg
stc
and
mov
mov
add
mov
or
je
add
jge
inc
add
aad
and
add
inc
sbb
push
mov
mov
and
dec
fdivl
in
popa
sti
imul
adc
mov
inc
mov
add
push
addr16
xchg
cmc
add
mov
mov
dec
adc
pop
icebp
insl
std
test
inc
fmuls
fsubrs
call
cmp
inc
loope
adc
lock
shll
mov
sbb
push
cwtl
push
imul
clc
outsb
or
adc
xchg
jb
outsl
sbb
daa
mov
push
ret
cmpsb
push
mov
push
pushf
sti
push
mov
stos
cmp
pusha
pop
rolb
sarb
xchg
sahf
stc
or
test
int3
dec
rcll
sub
pushf
xor
push
push
pushf
xor
dec
push
push
xor
cmp
mov
pop
cwtl
xor
xor
inc
in
jns
mov
imul
hlt
pop
in
and
daa
inc
mov
jecxz
out
mov
int3
push
lds
xchg
outsb
dec
rolb
shrb
gs
pushf
outsl
les
mov
dec
loope
jle
mov
popa
nop
pop
lahf
cmp
mov
ret
and
sub
and
dec
fsubl
xchg
gs
mov
dec
fnstcw
loope
jae
push
shll
sub
cmp
lahf
pop
fisttpl
fstl
cmp
iret
inc
xlat
mov
stos
adc
orl
xor
lahf
punpckhdq
cmpsb
push
cmpsb
cltd
setg
or
cmp
push
and
and
pop
mov
fs
mov
pop
incl
push
xor
mov
insb
or
je
mov
adc
int
xchg
inc
add
fimull
fidivl
in
jg
mov
xor
cmp
mov
in
in
je
xor
inc
and
js
mov
inc
mov
outsb
lock
pop
mov
repz
test
push
mov
xchg
pop
bound
incb
add
add
xor
jns
dec
mov
popa
and
add
fsubrs
lds
movsl
push
xchg
repz
mov
xchg
testb
or
ss
inc
mov
movsb
push
mov
aam
sub
aas
pop
test
pusha
xchg
jg
mov
call
addb
es
stos
and
inc
shll
jb
in
inc
roll
aad
mov
fst
pop
into
test
jecxz
jne
mov
mov
sbb
ret
cmpsl
push
cmc
test
sti
lods
cmp
mov
inc
mov
and
cmp
sbb
je
jl
testb
setg
or
mov
ds
push
lret
lret
in
bound
arpl
cmc
pop
pop
ret
ret
inc
mov
sub
ret
mov
xchg
and
int
ret
cmpsb
push
mov
nop
push
popa
nop
jb
fisttpl
fnsave
or
pop
fdivl
in
inc
lret
pop
ds
inc
into
pop
cmp
xor
lods
cmp
movsb
cmp
adc
lcall
and
dec
lods
daa
mov
and
scas
and
iret
pop
cmp
aas
adcb
loopne
in
fisttps
flds
pop
into
test
movsb
ret
faddl
inc
and
cmp
jp
in
add
nop
push
popa
nop
aaa
pop
lds
iret
cmp
mov
aaa
lods
cmp
sbb
fimull
fidivl
lds
iret
jp
lock
pop
mov
repnz
dec
xchg
clc
pop
ret
xor
ret
sahf
popa
adc
and
imul
out
pop
out
and
popa
mov
or
je
and
rolb
shlb
fistpll
push
lahf
push
lahf
setg
or
ljmp
mov
mov
mov
and
ret
xor
jp
in
pop
mov
mov
sub
lds
js
je
out
inc
jo
jge
testl
stos
stos
xor
and
sahf
inc
shll
pop
ds
gs
adc
or
mov
push
xchg
add
call
lret
cmpsb
push
mov
push
mov
es
ret
scas
sub
nop
push
popa
nop
aaa
and
and
jg
mov
dec
mov
mov
mov
mov
mov
lahf
cli
or
jge
jge
negl
shlb
mov
xor
or
sbb
aad
in
jns
mov
push
shlb
jge
sub
arpl
xchg
gs
lret
mov
mov
in
sbb
push
popa
nop
cmp
mov
jne
enter
pop
in
inc
in
sbb
leave
test
fimuls
pop
and
add
js
mov
test
std
or
sbb
cmc
jno
xorb
mov
push
xchg
add
jl
aas
scas
lret
test
pushf
sti
push
hlt
sbb
inc
lret
lret
rclb
cs
daa
mov
and
jo
add
out
adc
sbb
scas
aas
pop
test
test
pop
lea
jmp
push
in
sub
inc
sub
aas
adc
mov
dec
mov
sbb
push
jns
inc
xchg
lods
xor
lahf
cmp
or
lods
xor
mov
lods
xor
mov
dec
int
push
inc
add
int
push
inc
add
add
lods
dec
mov
inc
inc
add
lods
xor
and
cmp
add
movsl
out
ret
push
inc
add
dec
ljmp
mov
dec
fdivrs
cmp
add
ja
xorb
or
push
rolb
shlb
cli
jle
mov
jns
popa
aam
int3
stos
data16
lock
lds
cwtl
push
imul
jb
xchg
idivb
mov
or
inc
leave
pop
cmp
cmp
or
es
test
mov
sbb
jg
dec
and
and
mov
lds
mov
push
jno
jno
jns
mov
ss
cmp
mov
pop
ret
ret
mov
inc
mov
push
iret
pop
cmp
pusha
cmc
outsl
lcall
xor
aad
sub
pop
mov
mov
je
jo
popa
add
pop
mov
cmpsl
ret
cld
adcl
test
push
test
push
notl
inc
sub
cmp
dec
mov
push
mov
flds
sub
popf
push
aas
mov
inc
mov
and
xor
or
fisttps
loope
loop
je
rcll
push
mov
int
test
scas
leave
cmp
rclb
jae
jnp
in
or
xchg
cmc
add
jle
js
ljmp
mov
xchg
add
sahf
outsl
fwait
add
ljmp
stc
scas
and
movsb
cmp
jge
je
xor
jle
mov
mov
notb
push
lds
test
cmp
push
rolb
shlb
mulb
pop
jb
popa
add
adc
fiaddl
xchg
mov
inc
aad
dec
mov
repnz
fwait
or
jns
pop
iret
stos
pop
rcrb
and
sbb
arpl
xchg
gs
aad
leave
test
mov
aaa
xlat
fdivrl
sub
add
add
sbb
inc
add
test
ret
movsl
sahf
fucomp
notl
sahf
fst
movsl
sahf
fstl
dec
movsl
pop
pop
adc
mov
pop
xor
mov
and
rcrb
xchg
addr16
or
mov
ret
pop
iret
pop
cmp
jo
push
les
test
cmp
nop
add
icebp
imul
insl
add
les
xchg
lock
pop
mov
gs
and
pop
int3
stos
iretw
lcall
lcall
mov
mov
jns
and
aas
pop
add
xor
and
xor
setg
or
out
cmc
pushf
outsl
cmp
push
test
nop
testl
jecxz
lock
adc
sahf
or
cmpsb
inc
outsb
jmp
push
in
dec
jnp
popa
add
cmp
loopne
data16
xchg
outsb
mov
js
ljmp
movb
pop
enter
and
stos
cmp
pop
ret
push
shll
mov
sub
mov
fsubl
gs
adc
inc
loop
mov
inc
mov
jge
je
out
pop
into
push
les
pop
and
push
cmp
ljmp
daa
inc
mov
xor
aam
sub
adc
push
dec
lret
lret
adc
adc
out
jg
jmp
xchg
sub
dec
iret
pop
cmp
cmp
pop
leave
test
mov
pushf
xor
inc
jns
pusha
pop
repnz
inc
iret
pop
cmp
sbb
cmp
lahf
punpckhdq
stos
data16
pushf
xor
dec
xor
das
dec
mov
fwait
jbe
mov
ret
xor
push
lea
xchg
add
jo
jecxz
insb
xchg
mov
or
inc
lret
inc
add
lahf
push
int
push
inc
add
xchg
out
out
popa
xor
xchg
in
add
je
aad
fcomps
adc
test
xor
mov
out
cmp
mov
sub
lahf
jl
dec
add
add
add
push
inc
add
sahf
fsubrs
out
and
sahf
out
add
out
cmp
xchg
push
mov
popa
mov
dec
add
push
inc
add
aad
ret
inc
rolb
sarb
sahf
or
mov
jns
das
sub
and
mov
outsb
popf
sub
jns
sbbl
out
sbb
nop
cmp
cmpsl
aaa
push
mov
push
scas
pop
imul
lea
shlb
xorb
lahf
punpckhdq
fisubrl
roll
adcb
andb
dec
sub
cmp
imul
insl
xorb
repz
arpl
cmc
sbb
lahf
je
jo
xorl
fs
iret
inc
aad
dec
xchg
xchg
cmc
add
mov
scas
leave
cmp
into
inc
xlat
mov
lods
nop
sbb
aad
int
adc
fmuls
mov
lds
xorb
enter
or
fs
popf
insb
mov
mov
jns
cmc
notl
out
jp
jp
xchg
or
pop
les
int3
jp
lock
lret
xor
and
or
sbb
sub
cmc
outsl
lcall
stos
int
mov
inc
daa
rclb
std
insl
hlt
pop
xorb
es
mov
rcll
cmpsl
push
mov
icebp
popa
add
adc
add
jno
mov
fs
adc
sahf
dec
sti
mov
sbb
adc
inc
or
je
leave
pop
cmp
and
jmp
pop
iret
stos
pop
mov
add
std
jbe
cmpl
push
shll
and
fdivrl
repnz
xchg
aam
jp
jp
sbb
sbb
xchg
jle
cs
data16
xchg
outsb
leave
icebp
pusha
notb
xor
fwait
or
jno
inc
shlb
sub
sbb
cs
mov
inc
mov
mov
test
mov
inc
mov
pop
xchg
jb
es
lcall
std
insl
hlt
pop
mov
test
pop
test
popa
ret
ret
fisttps
fnstenv
jmp
mov
pop
enter
mov
mov
pop
iret
stos
pop
mov
mov
dec
mov
mov
pushf
sti
push
jmp
jge
notl
inc
into
pop
cmp
jno
fimuls
sub
pop
repz
fisttpll
out
xchg
sbb
aam
sub
sub
xor
push
movsl
movsb
ret
ds
sbb
ja
je
out
sub
jge
sub
sbb
ljmp
pop
jb
jle
pop
jp
and
jnp
jo
loop
pop
test
mov
fisttps
jmp
mov
aad
iret
stos
pop
mov
mov
pop
lret
scas
pop
mov
dec
fdivrs
cmpsb
shll
cmp
ja
inc
shll
jecxz
jne
hlt
pusha
notb
in
jg
mov
mov
sub
jb
js
ljmp
pop
mov
mov
xchg
or
sub
sahf
or
cmpsb
shld
lret
push
hlt
push
cld
jnp
in
jge
divl
rcll
adc
xchg
jo
add
push
pushf
sti
push
hlt
pop
fisttps
pushf
sbb
adc
add
std
or
dec
ret
ret
sub
aad
sub
push
xchg
pushf
sti
push
clc
jle
add
adc
adc
icebp
popa
add
sbb
lea
cs
fs
popf
insb
cltd
mov
mov
and
mov
lret
add
cs
aas
stos
cmp
or
adc
push
mov
mov
mov
adc
sbb
movsl
xor
pop
xchg
adc
mov
test
mov
pushf
sti
push
ret
js
ljmp
mov
jb
sbb
push
lahf
punpckhdq
leave
cmp
xchg
push
test
push
negl
ficomps
scas
pop
cld
jnp
popa
add
cmp
jo
xorl
adc
and
sahf
out
out
mov
dec
test
xor
xor
out
out
out
out
dec
sbb
movsl
out
or
je
pushf
or
je
dec
int
push
inc
add
aad
out
mov
fcomp
rorb
jb
inc
inc
add
je
sub
mov
and
adc
push
roll
aad
test
mov
sbb
add
mov
pop
test
lea
pushf
sti
push
lock
sbb
xchg
cld
pxor
xchg
add
dec
fdivrs
ljmp
cmp
test
cmp
arpl
jle
call
xor
cld
pavgw
xchg
jb
imul
cld
xchg
cmc
add
jno
push
cld
adc
stos
dec
cmp
and
push
les
or
jne
sbb
push
pop
jp
jne
ja
xorb
xchg
add
push
mov
xor
push
ret
cmpsl
push
cmc
jno
jbe
loopne
push
xchg
cmc
add
mov
mov
das
stc
jae
xchg
push
rcll
data16
js
ljmp
movsl
arpl
imul
sbb
add
push
xchg
repz
mov
adc
scas
sbb
push
fstpt
mov
fbld
xchg
gs
loop
pop
loop
add
popf
sbb
aad
jno
gs
adc
loop
pop
loop
stc
adcl
test
jo
xorl
push
mov
cmc
push
lcall
mov
dec
push
xor
sub
loop
repnz
pop
repnz
in
jl
jl
negb
mull
icebp
or
mov
sti
cmp
cmpsb
xor
scas
dec
xchg
xchg
adc
mov
fistpll
stos
cmp
or
paddb
dec
sub
push
fiaddl
mov
jmp
dec
fdivrs
push
xor
xchg
or
rcll
push
jmp
sbb
sub
movb
inc
and
xor
repz
cmc
adc
shll
ficompl
test
mov
ljmp
pop
jae
gs
adc
mov
mov
scas
lret
je
or
loopne
fs
mov
dec
imul
sti
popa
dec
adc
mov
test
mov
aad
fdivs
xchg
pop
mov
mov
push
lea
add
or
je
dec
int
push
inc
add
aad
mov
sub
mov
out
maxps
inc
and
cmp
inc
sub
sub
movsb
cmp
inc
cwtl
or
push
pushf
sti
push
mov
insl
std
test
test
lods
lret
inc
movsb
std
push
lahf
push
pop
into
pop
cmp
ds
fstpt
xor
int
int
push
xchg
repz
mov
lcall
outsb
ljmp
or
adcb
subb
jo
xorl
mov
lock
bound
fdivrs
js
push
cld
adc
jl
mov
fmulp
pop
int
addr16
insl
add
in
sbb
jmp
fmuls
fdivs
add
xor
int
fwait
adc
inc
fisttpll
out
mov
mov
in
sbb
in
jle
in
call
nop
push
popa
nop
cmp
inc
fidivrl
inc
daa
rclb
sub
fstps
test
lea
adcl
mov
inc
mov
mov
fstpl
test
mov
fstpt
data16
pop
loop
movsl
and
pop
jp
jne
movsb
ret
ds
mov
lods
lret
inc
lea
stc
xchg
sbb
push
fimull
fidivrl
or
push
jno
imul
push
lds
iret
and
jno
movsl
cmp
ja
xorb
push
lret
mov
mov
jno
jecxz
loop
in
jg
or
mov
xchg
out
jbe
cmpl
pop
int3
stos
fldenvs
in
mov
icebp
xchg
or
mov
xchg
fidivrl
mov
mov
mov
loopne
bnd
xorb
push
mov
in
jg
std
jns
mov
xchg
adc
xchg
add
jg
mov
inc
mov
xchg
sbb
jne
mov
pop
aam
sub
push
xor
repz
test
mov
gs
jg
jmp
shlb
aad
aaa
rclb
and
sahf
out
out
and
sbb
mov
aad
fdivr
xchg
stc
sti
xchg
sbb
movsl
out
or
je
cltd
or
je
dec
int
push
inc
add
aad
sub
lahf
clc
pop
leave
test
ficomps
or
cmpsb
jb
jae
xchg
jge
pushf
and
cltd
or
jo
iret
pop
cmp
aaa
dec
enter
cmp
ja
xchg
testb
sbb
cmp
jge
push
cld
adc
dec
fnstsw
lds
mov
mov
cwtl
push
imul
fldt
add
insb
or
lds
pop
cmp
xor
aad
sub
aaa
sub
push
lds
xor
insb
mulb
movzbl
mov
jle
mov
mov
aas
pop
test
scas
pop
in
leave
pop
lret
scas
pop
repnz
insb
or
mov
or
scas
or
in
xchg
pop
fdivl
in
push
mov
ds
stc
js
mov
divl
xorb
popf
or
enter
es
mov
push
ret
cmpsb
push
mov
fimuls
inc
push
fistl
mov
pop
ds
pusha
in
jge
notl
push
je
out
pop
inc
int
and
and
test
jge
fs
icebp
popa
add
add
sbb
aad
subl
sub
jp
xor
dec
jecxz
push
in
fisttpll
mov
fstpt
sbb
cmp
cmp
mov
aas
lret
loop
pop
loop
outsb
out
jg
jmp
mov
mov
test
jmp
push
in
or
ficoml
cmpsl
push
cltd
idivb
je
imul
cmp
xor
xchg
add
jno
movsb
cmp
inc
jle
popa
add
add
dec
mov
mov
mov
pop
int3
inc
and
jp
in
push
push
lahf
punpckhdq
add
push
movsb
aaa
cmpsl
ret
sbb
jl
mov
gs
and
js
ljmp
xchg
cld
lock
lret
ljmpw
stc
mov
ljmp
or
sub
mov
clc
jg
jle
mov
sahf
insl
lea
mov
ret
xor
and
pop
xchg
adc
mov
sbb
inc
roll
aad
mov
scas
lret
push
fisttps
fldcw
jae
xchg
aaa
mov
or
adc
arpl
pop
int
mov
lods
cmp
rclb
sub
notl
adcl
sub
rclb
pop
mov
iret
daa
jo
jp
in
add
fwait
or
cmp
ljmp
stc
test
enter
dec
inc
and
ja
push
mov
es
and
rcrb
sarb
fsubrl
test
hlt
jmp
fistpll
popf
in
xchg
lds
mov
pop
bound
mov
mov
fisttpl
inc
es
mov
and
repz
mov
sahf
dec
ret
mov
test
lods
sbb
pop
aad
fadds
add
add
out
aad
mov
mov
mov
mov
lock
add
or
je
xor
jge
inc
add
aad
mov
sub
mov
sbb
push
out
repz
xchg
mov
mov
insl
std
test
stos
xor
imul
insl
in
add
mov
mov
mov
and
dec
into
pop
cmp
xor
imul
and
je
lea
outsl
lcall
std
test
xor
mov
xchg
repz
lds
outsb
or
push
fstl
mov
add
jo
cmp
jle
mov
pop
scas
inc
fmuls
mov
mov
jp
jp
lret
arpl
xchg
gs
mov
mov
mov
out
adc
in
sbb
lods
movsb
ret
mov
nop
loopne
out
mov
in
jno
xorb
dec
fdivrl
das
dec
mov
sub
push
jle
jb
in
cmp
and
xchg
scas
sub
lds
add
push
insb
or
in
push
mov
or
adcb
subb
jmp
jge
push
jbe
loopne
cmpsb
xor
dec
fstpt
popa
add
pop
fcoml
cmpsl
push
mov
xchg
add
jo
push
lahf
push
orl
sti
push
loop
les
int3
and
adc
jle
mov
movsb
push
xchg
pop
iret
pop
cmp
xor
hlt
push
lret
stos
mov
jg
mov
lea
dec
fisttpl
xchg
pop
bound
mov
xor
or
test
xchg
adc
movsb
ret
mov
outsb
or
jg
jl
jne
add
icebp
sub
cmp
jmp
push
in
or
jp
in
push
adc
cmpsb
fs
imul
xor
sti
lods
push
or
sbb
je
imul
add
push
int
push
inc
add
fadd
add
out
pop
xchg
inc
add
adc
and
mov
out
jne
jne
out
add
sbb
pop
jns
sub
mov
add
test
push
mov
add
push
movsb
out
sub
push
add
cmp
mov
mov
loopne
cli
incl
xchg
add
sahf
pop
dec
fstpt
push
fsubrp
pop
mov
stos
push
call
mulw
icebp
adc
push
add
stc
mov
jl
in
mov
add
jmp
jmp
add
setg
or
add
sti
incl
sahf
xor
test
add
imul
mov
mov
test
loopne
or
je
pop
jmp
mov
cmpsl
jmp
sbb
aad
fdivrl
xor
repz
jne
push
push
pushl
call
push
pop
lea
mov
mov
rep
jmp
lahf
in
inc
and
inc
shr
mov
cltd
clc
or
cs
mov
mov
pop
or
rclb
add
and
jmp
or
xchg
mov
sbb
repnz
es
add
leave
ret
jmp
das
adc
jmp
xor
sbb
inc
and
clc
lahf
push
mov
push
mov
push
test
je
mov
push
lea
push
push
call
add
xor
mov
jmp
lret
dec
fidivrs
push
popa
nop
jno
rcll
and
inc
test
je
push
push
push
push
pop
mov
lea
rep
xor
mov
mov
sub
inc
cmp
jb
push
lea
push
lea
push
call
mov
push
add
pop
lea
jmp
aas
mov
dec
into
pop
cmp
ss
fimull
fidivl
fildl
add
xor
push
and
xchg
add
fcoms
inc
add
xchg
or
jne
push
xor
sub
or
ret
xor
jo
mov
push
mov
test
je
lea
jmp
mov
jmp
pop
aad
sub
push
aam
repz
gs
jmp
mov
xor
js
aam
mov
push
push
mov
test
jne
xor
leave
ret
jmp
inc
int
and
aaa
pop
fisttpl
fnsave
enter
dec
mov
test
xchg
fadds
add
add
ret
mov
jmp
add
or
add
lods
lret
inc
test
jmp
mov
lret
sbb
xchg
jl
mov
sbb
and
sub
incl
ret
jb
push
lea
push
lea
push
call
push
add
pop
lea
xor
repz
jne
push
push
pushl
call
push
lea
push
push
mov
call
add
jmp
test
xchg
adc
movsb
push
nop
or
push
les
divl
ficomps
xchg
addr16
push
lds
xorl
lods
das
jbe
jge
testl
jg,pt
jbe
loopne
cmp
pop
push
push
mov
mov
jmp
rorl
movsb
push
cld
mov
mov
call
lods
or
rolb
shl
imul
insl
mov
mov
cmp
xor
add
add
test
pop
leave
test
mov
shll
pop
nop
push
popa
nop
jo
scas
push
rolb
ret
jmp
inc
push
xor
and
ss
je
jne
dec
roll
aad
sbb
jg
std
insl
hlt
pop
mov
mov
dec
imul
dec
adc
mov
test
or
je
mov
imul
adc
dec
sbb
lods
xchg
add
enter
lahf
mov
mov
xor
jb
inc
dec
add
je
mov
loope
ret
push
lds
mov
imul
notl
loope
add
jmp
ss
jb
insb
or
out
stc
je
lea
loope
fs
sti
out
adc
and
test
or
je
ret
add
mov
xchg
mov
call
mov
call
mov
cmp
jmp
arpl
add
add
sub
dec
lea
add
addl
jne
jmp
stos
inc
shll
fidivrs
mov
sbb
mov
aad
subl
sbb
lret
and
sub
aaa
jne
jl
testb
loope
add
jmp
inc
fimuls
dec
lods
cmp
adc
mov
aam
add
add
ret
mov
and
xchg
jns
mov
add
pop
push
call
pop
jmp
adc
push
jns
and
andl
jmp
les
stos
pop
shlb
inc
and
push
jg
jb
in
pop
mov
fisubrs
add
add
pushl
call
mov
jmp
inc
lret
pop
ds
addl
icebp
add
lret
mov
jg
jmp
jge
test
je
mov
jmp
rclb
mov
iret
stos
pop
xchg
lock
das
mov
je
mov
mov
lea
push
push
push
push
call
test
je
lea
push
pushl
mov
mov
push
push
call
jmp
or
pushf
xor
add
loopne
or
xor
cmp
jbe
lea
jmp
lret
mov
scas
out
notl
fs
inc
loope
lret
iret
call
mov
mov
jmp
mov
ficompl
jle
bound
mov
cmp
jne
je
add
add
pop
add
out
cmp
test
inc
lret
inc
add
lahf
ret
fdivr
lock
jb
je
add
je
xor
mov
fadds
movsl
adc
sbb
decl
sti
pop
out
adc
cmp
adc
jns
dec
sub
lahf
xchg
fdivs
pop
je
das
mov
lahf
sbb
sub
lahf
int
xchg
inc
add
fcomps
add
lahf
add
pop
xor
xchg
or
inc
add
je
sahf
int
push
inc
add
aad
xor
and
add
mov
xor
inc
add
mov
ret
movsl
and
ljmp
and
aad
and
adc
movsl
out
out
adc
sahf
out
dec
add
incl
andl
add
adcl
test
adc
cs
repnz
mov
mov
mov
push
pop
xor
repz
je
mov
addl
inc
cmp
jb
mov
jmp
mov
mov
in
sbb
sbb
sub
lds
stc
xchg
test
add
sarb
adc
mov
jmp
push
xchg
mov
int
lret
jecxz
ret
ret
mov
xchg
and
push
cld
add
mov
cmp
jb
jmp
sarb
mov
incl
mov
jmp
arpl
insl
hlt
pop
lods
aaa
stos
cmp
sbb
lods
sub
fisttps
je
cmp
jbe
mov
push
call
mov
mov
imul
mov
mov
mov
mov
imul
mov
mov
imul
push
push
pushl
call
mov
mov
inc
imul
mov
mov
add
mov
mov
cmp
jbe
mov
jmp
mov
lahf
pop
mov
jle
pop
lea
pushf
sti
push
lock
iret
pop
cmp
ss
leave
jecxz
mov
mov
lea
add
call
jmp
loop
icebp
nop
arpl
xor
scas
das
mov
out
loopne
mov
mov
jmp
movsb
push
mov
lea
mov
inc
test
jne
push
sub
lea
call
pop
mov
call
jmp
jb
fs
adc
mov
dec
lds
iret
das
xor
cwtl
cmp
xor
pop
inc
inc
add
add
sbb
adc
and
fdivs
mov
out
sahf
ficompl
pop
adc
out
fcomps
clc
mov
inc
add
jae
icebp
popa
add
cmp
mov
jns
data16
cmp
out
lret
les
imul
sahf
out
mov
dec
out
or
je
ret
add
mov
add
pop
adc
pop
je
push
push
inc
add
je
sahf
fsubs
int
xchg
inc
add
out
add
mov
out
adc
sahf
aam
leave
test
mov
aaa
mov
inc
imul
mov
add
mov
mov
lea
movsl
movsl
movsl
movsl
mov
lea
movzwl
mov
lea
mov
add
cmp
jmp
cmp
es
mov
pop
roll
shll
call
mov
call
jmp
xchg
add
std
or
stos
cmp
in
push
mov
add
add
andl
mov
mov
movsb
dec
lds
iret
das
sub
xor
sbb
lret
pop
into
test
popa
add
push
fs
imul
cmp
mov
inc
mov
sbb
sbb
push
jns
pusha
ja
jo
loop
mov
rcll
jae
jns
jmp
into
push
lds
mov
out
push
mov
shll
xchg
adc
stc
cmpb
push
imul
fisttpl
fnstsw
daa
les
enter
fsubrl
les
push
xor
cs
mov
inc
and
aaa
jnp
mov
mov
mov
loope
leave
pop
cmp
daa
stc
jne
mov
ds
inc
mov
in
notl
pop
mov
jg
jle
cs
stc
imul
add
cs
aam
sub
ljmp
add
add
push
leave
push
shll
sahf
and
call
test
inc
and
je
push
lret
lahf
icebp
sub
adc
decl
cmp
jae
push
push
call
mov
pop
pop
mov
test
je
sub
push
lea
push
push
call
add
lea
push
movb
jmp
rcll
pop
mov
xor
out
jp
jp
cmp
fs
out
mov
ret
pop
dec
test
xor
push
imul
imul
xchg
imul
add
add
or
je
adc
jge
inc
add
aad
sahf
sub
mov
lock
pop
test
fs
and
out
mov
mov
mov
mov
push
sbb
movsl
scas
cmpsb
or
je
sahf
or
je
inc
push
inc
add
sahf
int
aas
inc
add
inc
ja
mov
pop
xchg
inc
add
int
push
inc
add
fadds
mov
dec
fsubs
adc
jmp
adc
inc
fimuls
push
push
iret
pop
cmp
jle
add
push
lahf
push
ficomps
scas
pop
mov
sbb
aad
int
stc
imul
test
pop
mov
sub
bnd
mov
push
fdivl
in
dec
push
xor
sub
dec
mov
lret
or
cmp
inc
aam
dec
jmp
adc
cmp
js
jge
negl
out
loopne
jb
jbe
jno
jecxz
pop
xchg
add
bound
mov
inc
mov
fildl
mov
call
outsb
sar
pusha
notb
sti
sahf
insl
fcoml
pop
cmp
jg
icebp
popa
add
inc
fdivrs
jp
pop
and
out
adc
xchg
mov
push
or
or
je
mov
call
sbb
lods
mov
je
inc
mov
lea
cmpb
jne
add
jmp
xor
jmp
jmp
jge
jo
jge
testl
bswap
cmp
jne
push
call
mov
jmp
fiaddl
mov
and
xor
setg
or
sbb
cs
mov
lcall
mov
cli
jmp
leave
stos
sub
or
pop
dec
insl
lret
push
stc
std
lcall
jmp
outsb
call
ds
or
lock
sbb
jne
mov
mov
push
push
lea
push
call
mov
jmp
push
call
jmp
push
fimull
fidivrl
loop
lcall
xchg
cmc
add
int3
std
mov
dec
sti
out
adc
sahf
imul
sbb
lods
mov
aad
fmuls
xchg
aad
sbb
mov
mov
mov
dec
scas
or
je
mov
add
int
push
inc
add
aad
add
sub
mov
ret
das
cld
dec
pop
fstl
lea
rolb
call
jmp
dec
into
pop
cmp
ss
cltd
mov
test
out
dec
loopne
add
pop
repnz
fs
mov
jb
jmp
or
out
xchg
pop
leave
ret
jmp
dec
ret
ret
int
and
cmp
scas
aas
pop
test
xchg
aas
mov
jmp
jge
jl
testb
aas
scas
lret
test
sti
scas
ljmp
stc
imul
xchg
cld
jp
jbe
inc
lret
pop
ds
dec
call
mov
add
cmp
jne
xor
jmp
sbb
data16
adcb
jecxz
cld
xor
xor
adc
inc
imul
imul
mov
mov
jmp
cmp
jne
je
cltd
or
in
mov
lcall
pop
cmp
add
or
or
mov
incl
addl
mov
mov
cmp
jmp
lahf
add
dec
aam
sub
jns
jmp
mov
jl
jne
sub
lcall
iret
push
lret
lret
mov
sub
shr
mov
mov
push
lea
push
push
call
test
je
mov
jmp
dec
rolb
sarb
daa
mov
and
pop
int3
cmp
je
jne
push
xor
dec
or
inc
push
rolb
shlb
fs
dec
sti
pop
and
sahf
and
sbb
test
aad
fsub
xchg
stc
out
dec
fst
movsl
xchg
sbb
movsl
add
movsb
mov
adc
jge
inc
add
aad
out
test
mov
jb
jg
add
je
sub
lahf
out
outsb
cld
fwait
jbe
cli
jns
mov
adc
push
jle
push
outsl
pop
jmp
and
xor
inc
fistps
test
mov
sti
imul
adc
inc
cld
jmp
lea
orl
and
jae
push
int3
or
test
shr
adc
mov
mov
cmp
jne
jmp
inc
lret
lret
adcb
ds
push
pop
lea
add
lds
mov
inc
mov
xor
push
lds
sub
rolb
std
jmp
outsb
cld
fwait
jbe
adc
inc
mov
pop
aam
sub
inc
sbb
mov
cmpsl
and
or
repz
ja
jp
in
sbb
jbe
cmpl
in
mov
mov
push
push
push
call
push
push
pushl
mov
call
mov
push
lea
push
pushl
mov
push
push
mov
call
mov
push
call
mov
call
mov
cmp
jne
mov
push
push
pushl
call
xor
jmp
push
scas
call
pop
mov
add
cmp
or
loopw
pop
lods
stos
push
push
pushl
jmp
pop
xchg
mov
jb
xchg
je
dec
adc
inc
add
push
push
push
push
push
push
lea
push
call
mov
cmp
jmp
sbb
xchg
jb
addr16
pop
jp
xor
movsb
iret
fs
pop
and
push
mov
adc
jns
push
add
sahf
aad
fadds
add
add
mov
mov
mov
mov
add
mov
xor
jge
inc
add
aad
add
and
add
fsubrs
ret
add
pop
cld
std
mov
cmp
je
jne
and
loope
call
push
mov
movsb
ret
subl
mov
jmp
or
dec
rolb
shlb
jo
xorl
xchg
dec
pop
jmp
push
mulb
jns
mov
add
cmp
sti
ljmp
inc
es
inc
lds
iret
sbb
int3
ficomps
stos
xchg
and
dec
int3
inc
and
push
fisttps
cmp
inc
add
push
loopne
sti
sahf
insl
subb
cmp
dec
sub
scas
or
mov
call
pushl
mov
mov
push
pushl
jmp
orb
decl
sarl
and
mov
dec
mov
inc
fs
or
je
add
lods
adc
adc
add
add
push
inc
add
fsubrs
mov
out
rcl
cmpsb
je
enter
lahf
sbb
mov
fcoms
mov
out
pop
xchg
inc
add
fcoms
mov
out
add
sahf
inc
ja
xor
out
xor
and
movsl
add
add
xor
pop
xchg
inc
add
or
inc
xor
out
inc
ja
and
xor
out
inc
ja
add
add
out
pop
xchg
inc
add
imul
fcoms
mov
add
ret
xchg
inc
add
int
push
inc
add
ja
fcoms
mov
mov
ja
fcoms
mov
adc
adc
pop
xchg
inc
add
mov
imul
push
in
dec
je
cmp
inc
add
je
adc
adc
mov
fldt
dec
imul
add
mov
mov
call
jmp
mov
je
out
pop
sbb
pop
ja
xlat
pushl
mov
push
mov
call
mov
mov
mov
mov
movzwl
imul
add
mov
add
mov
mov
jmp
jmp
xchg
mov
lret
or
ds
cmpsl
cmp
push
mov
call
lea
push
push
jmp
mull
xchg
outsb
lods
dec
jecxz
push
in
pop
int
and
aas
adcl
jnp
dec
sub
pop
cli
js
mov
aad
les
sbb
imul
and
and
xor
testl
repnz
fs
and
cmp
imul
int3
rolb
jmp
enter
push
stc
pop
les
int3
jae
adc
mov
mov
mov
lea
push
push
add
push
push
mov
call
test
je
sub
push
add
push
pushl
jmp
dec
inc
and
imul
push
mov
fstpl
pop
jl
jbe
jmp
adc
mov
stos
int
call
mov
sbb
xor
divl
mov
andl
sub
sub
mov
mov
xor
cmp
jae
add
mov
add
pushl
push
mov
sub
add
push
call
movzwl
add
incl
add
cmp
jb
jmp
jl
xchg
testb
sti
adc
mov
jmp
add
enter
xor
push
dec
fs
out
sti
pop
and
or
add
imul
fadds
mov
inc
add
mov
xor
sub
cwtl
std
adc
add
push
cltd
or
cmpsl
or
sti
imul
jl
lods
cmp
insl
std
test
mov
mov
lret
pop
ds
pop
xchg
pop
bound
psubd
popf
pop
das
stos
cmp
inc
fcoml
mov
pop
cmp
jo
cmpsl
aaa
push
mov
cmpsb
push
mov
in
fs
rorb
mov
clc
or
int3
inc
and
scas
leave
cmp
mov
xchg
dec
fistpl
and
and
push
rcll
pop
mov
out
adc
push
addr16
pop
repnz
pushf
push
xchg
repz
call
pop
cmp
jle
notl
pushf
or
inc
aam
dec
out
push
xor
jns
lea
mov
xchg
and
pusha
pop
bnd
push
ret
cmpsb
push
aam
adcl
cs
xlat
inc
and
sbb
mov
cwtl
decl
jecxz
movsl
xor
mov
jle
gs
hlt
xchg
outsb
xchg
rcrb
sub
jp
aas
scas
lret
ds
dec
mov
int
fcomps
stc
cmp
inc
into
pop
cmp
and
test
inc
rolb
shlb
add
lret
test
lcall
rolb
mov
inc
sub
xor
notl
cmp
mov
mov
mov
inc
mov
add
or
and
or
fs
add
pop
mov
adc
popa
sbb
or
je
xor
movb
or
out
enter
in
jmp
pop
xchg
add
lret
pop
ds
push
fdivl
in
inc
xorb
out
mov
ret
pop
xchg
dec
adc
sbb
jns
test
sti
add
pop
mov
dec
adc
mov
and
add
enter
lahf
adc
push
lds
mov
sbb
in
pushl
mov
push
pushl
call
jmp
sbb
push
jmp
mov
mov
mov
inc
mov
pop
lea
or
pop
add
add
sahf
dec
decl
dec
inc
and
je
scas
lods
lret
inc
test
dec
fidivrs
lahf
cli
or
cs
push
enter
divb
xor
inc
jmp
xchg
add
dec
fistpll
xchg
cld
btc
nop
push
call
std
imul
insl
ret
and
or
movsl
xor
pop
cmpl
ss
mov
jmp
lea
and
movsl
xor
adc
add
cmp
jmp
jae
inc
and
pop
fdivrs
mov
mov
hlt
mov
push
call
loope
lock
bound
mov
jbe
repz
add
jmp
and
push
rolb
shlb
out
push
lahf
push
xchg
adc
cmp
add
push
sbb
jne
mov
mov
call
pushl
mov
call
mov
jmp
dec
int
and
cmp
movsb
ret
fmull
mov
mov
jmp
pop
fisttpl
fnstsw
sub
jno
xchg
pop
bound
inc
ret
jmp
pop
pop
jp
jae
jo
xorl
sub
mov
jno
mov
test
je
mov
imul
cmp
sbb
and
ret
jmp
hlt
jg
mov
fwait
setg
or
ljmp
je
mov
rolb
add
add
mov
jno
jbe
loopne
cmp
or
push
xchg
push
sub
push
push
xor
push
cmp
je
mov
push
jmp
lret
xchg
mov
xor
sub
fs
and
decl
sbb
xor
aad
fdivs
xchg
stc
xor
test
add
add
or
je
imul
movsl
xor
mov
sahf
fdivrs
mov
fdivs
jmp
test
lahf
sbb
pushl
sti
add
imul
lods
dec
inc
xor
add
lahf
int
push
inc
add
rolb
lahf
int
xchg
inc
add
pop
fadd
add
sbb
fst
movsl
xor
fst
movsl
sbb
sub
mov
fsubs
je
jne
jbe
loopne
out
or
repz
mov
mov
cmp
jne
push
push
pushl
jmp
sti
notl
add
adc
je
dec
adc
fs
adc
sti
sahf
imul
sbb
test
or
je
push
loopne
pop
test
mov
mov
jmp
push
push
jmp
pop
rcll
push
push
out
mov
test
mov
call
lea
push
lea
jmp
and
cs
mov
iret
cmp
sub
hlt
push
lds
mov
inc
add
xor
mov
rep
mov
push
mov
call
lea
mov
movsl
movsl
movsl
movsl
xor
jmp
add
jae
aas
add
add
push
lea
push
push
call
add
testb
int3
rolb
push
call
mov
jmp
dec
lret
lret
pop
int3
stos
xchg
ljmp
jnp
xchg
jge
aas
mov
mov
scas
sti
cmp
pop
leave
ret
jmp
addl
or
cmp
das
stos
cmp
inc
popa
jmp
or
pop
mov
jmp
cmpsb
xor
cltd
or
push
lock
mov
popa
mov
push
jmp
inc
iret
pop
cmp
xor
cmpsl
inc
enter
and
push
lahf
push
outsl
lea
jmp
cmp
cmp
mov
mov
cmc
imul
insl
int3
sub
lea
jmp
icebp
pusha
notb
loopne
jb
ret
push
lret
mov
mov
repz
rep
mov
pop
push
lea
jmp
xor
inc
and
daa
inc
mov
icebp
imul
sub
test
roll
add
fs
pop
xor
mov
mov
mov
add
add
and
add
hlt
insb
loop
je
and
inc
fimuls
dec
push
jmp
mov
mov
mov
xor
jmp
test
cmp
je
push
mull
icebp
sbb
pop
mov
xchg
jp
orb
call
movsl
call
lea
lea
movsl
movsl
movsl
movsl
xor
xor
mov
add
inc
cmp
jb
push
lea
push
push
call
lea
push
lea
push
lea
push
push
pop
mov
call
mov
add
inc
push
lea
push
push
push
push
pushl
call
mov
or
sti
jmp
jg
jbe
loopne
aaa
test
stos
xor
jnp
dec
sub
pusha
mov
fmull
repz
je
mov
push
call
jmp
sub
roll
inc
xchg
pop
std
les
loope
jge
mov
jmp
addb
repnz
into
dec
fdivrl
test
pop
mov
mov
push
push
push
pushl
movl
call
push
pushl
call
out
lea
push
lea
push
lea
mov
call
pop
pop
xor
mov
sub
inc
cmp
jb
push
lea
push
lea
push
call
push
jmp
jo
fs
pop
fistpl
test
jo
loop
dec
xor
fs
dec
xor
out
aad
fsub
xchg
stc
out
fst
movsl
pop
mov
mov
mov
dec
mov
add
or
je
add
jge
inc
add
aad
adc
lods
out
add
add
hlt
mov
fcoms
mov
xchg
adc
cmp
cmp
int
fstpt
nop
push
pop
jmp
mov
aad
mov
gs
jo
lahf
sahf
pusha
mov
add
push
push
push
mov
call
testl
je
push
pop
jmp
scas
and
inc
aad
dec
movsb
xchg
sbb
test
loope
mov
or
mov
push
movsl
jmp
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
into
pop
cmp
ds
xor
push
ret
cmpsb
push
hlt
pop
jno
add
add
cmp
push
xor
call
outsl
mov
add
jg
jmp
xchg
outsb
mov
lahf
punpckhdq
jb
outsl
push
rolb
sarb
inc
push
xor
daa
orb
decl
call
jmp
lds
mov
xchg
lock
cld
jb
xchg
mov
sarl
mov
inc
mov
cwtl
sbb
mov
fs
and
incl
out
xor
lods
push
mov
add
ret
lock
jge
popa
nop
js
or
xchg
add
pusha
jno
js
ljmp
movsb
in
push
icebp
lock
dec
lea
lea
call
add
jmp
push
lahf
push
add
xor
clc
movsb
pop
pop
jmp
rcrb
pop
out
and
sbb
xor
mov
jle
and
inc
cld
push
pushl
mov
pushl
pushl
call
xor
jmp
lea
and
movsl
mov
mov
pushf
jl
dec
sub
popa
xchg
ljmp
test
incl
mov
and
jmp
cltd
push
inc
adc
shr
mov
inc
push
mov
lea
push
pushl
mov
lea
call
addl
dec
lea
movsl
movsl
movsl
pop
pop
movsl
jne
pop
jmp
scas
mov
jmp
lds
mov
and
mov
jbe
push
inc
idivb
fs
and
jns
lods
xor
out
aad
fmul
mov
and
add
or
je
out
aad
out
ffree
cwtl
pop
fdivrs
and
mov
mov
fdivrs
mov
frstor
mov
fnsave
test
sti
sub
add
add
xor
xchg
addb
add
mov
in
jne
mov
jns
jne
je
fstpl
scas
pop
mov
outsl
addl
adc
mov
add
mov
scas
jnp
addr16
sbb
jns
nop
mov
add
mov
sub
push
push
xor
cmp
je
mov
cmp
je
xor
mov
neg
mov
inc
cmp
jb
mov
cmp
jne
mov
mov
mov
jmp
jbe
cmpl
xchg
add
jg
movsb
jnp
push
cmp
jne
mov
jmp
lret
or
xor
stos
dec
pop
roll
shll
idivb
jp
ret
dec
fdivrl
xor
mov
inc
cmp
jl
jmp
std
insl
std
test
push
push
xor
cmp
pop
jmp
out
in
jle
roll
mov
add
lds
jecxz
hlt
and
sbb
inc
aam
lea
push
call
mov
mov
push
pop
add
xor
lea
repz
sete
dec
jmp
ljmp
mov
jle
sub
and
ja
lds
jns
jne
mov
jmp
leave
ret
jmp
adc
and
pop
and
jl
ljmp
stc
mov
xchg
add
cmp
and
push
add
push
imul
pop
xchg
repnz
js
mov
pop
rcll
jbe
xchg
push
mov
test
je
mov
call
movzwl
mov
jmp
inc
fmuls
fdivs
rcll
jbe
dec
fistpll
jl
inc
fs
adc
ret
imul
dec
and
add
out
sahf
sti
mov
out
push
test
xchg
dec
mov
or
je
mov
out
dec
adc
ret
mov
push
pop
ret
jmp
pop
mov
pop
fdivl
in
mov
mov
fwait
icebp
ds
sbb
shl
sbb
jmp
or
jp
imul
inc
and
mov
hlt
add
ret
mov
adc
lods
test
xchg
adc
fcom
xchg
stc
xchg
fst
movsl
push
sbb
movsl
lock
add
je
into
or
je
inc
push
inc
add
fst
movsl
pop
fisttpll
or
decl
add
out
sahf
inc
rcll
and
movsb
daa
mov
and
lock
dec
pop
popa
and
pop
ret
jmp
fstl
lods
pop
mov
mov
loopne
cltd
push
insb
lea
jmp
cmp
insb
add
xchg
mov
mov
push
sub
mov
jmp
mov
xchg
repnz
cltd
adc
sbb
cmp
xchg
push
dec
and
add
jns
push
dec
and
fcomps
sbb
add
movsl
ret
fwait
mov
push
push
mov
push
mov
push
call
push
call
mov
pushf
orl
popf
pushf
pop
mov
testl
jmp
pop
nop
push
popa
nop
jb
leave
pop
cmp
and
divb
add
and
seta
bound
out
movsl
xor
xchg
or
in
mov
lock
and
cmp
je
lea
fmuls
fdivrs
movl
jnp
mov
jns
insb
or
out
mov
bnd
mov
add
pushf
adc
inc
int
and
push
std
je
lea
cmp
and
in
cltd
push
xchg
mov
aad
int3
dec
fstpt
dec
adc
inc
dec
fistpl
jne
jno
jecxz
rorb
mov
fdivrs
or
ds
fimull
fisubrl
imul
inc
fimuls
dec
jmp
loopne
jb
inc
fisttpll
out
adc
rorb
mov
push
popa
nop
daa
cli
pop
into
fs
sahf
sti
mov
out
push
test
xchg
sbb
pop
sahf
fnstsw
fst
movsl
lods
out
sti
dec
dec
sub
sub
shr
add
add
leave
adc
sbb
sub
inc
xlat
mov
mov
fistpll
pop
rolb
shlb
sahf
adc
sub
sbb
pop
roll
aad
dec
cli
leave
jnp
add
mov
mov
mov
mov
mov
jmp
and
jmp
lds
mov
and
mov
dec
pop
mov
rolb
add
cpuid
mov
mov
add
mov
cpuid
jmp
imulb
je
mov
add
push
mov
xchg
sarl
xor
gs
inc
add
lahf
aad
fdivs
fadds
movsl
or
lahf
adc
add
and
sbb
ja
xorb
push
cmc
loope
jne
jmp
js
icebp
push
cmpl
jmp
xor
popf
add
ja
ss
aam
inc
cmp
cmp
jl
mov
push
push
pushl
call
mov
lea
push
push
mov
call
xor
cmp
jne
mov
push
push
pushl
call
pushl
push
pushl
call
mov
lea
push
push
call
jmp
xchg
adc
jne
pushl
mov
push
pushl
call
jmp
jo
insb
or
loop
jnp
mov
rcrb
lea
adc
loopne
ud0
mov
mov
mov
jmp
and
dec
test
std
or
push
xlat
inc
and
and
ss
fists
lods
pop
xchg
push
test
imul
and
hlt
xor
dec
or
xchg
or
add
add
add
xchg
sbb
or
cmp
ljmp
cwtl
pop
shrb
push
pushl
call
jmp
dec
ss
cmp
cwtl
sub
lea
push
mov
push
push
push
mov
call
testl
je
push
pop
jmp
inc
mov
std
fldt
mov
dec
mov
pop
leave
test
mov
outsl
lods
gs
pop
leave
ret
jmp
imul
jg
jmp
lods
xor
ljmp
mov
push
push
mov
jmp
cld
lock
jmp
test
mov
cs
push
adc
jne
call
add
jne
lea
push
lea
push
call
mov
add
pushl
add
add
mov
mov
mov
mov
call
push
call
pop
pop
xor
pop
leave
ret
jmp
rcll
mov
jmp
leave
mov
inc
jmp
xchg
xor
fisttpl
std
decl
in
inc
or
inc
call
pusha
sbb
jmp
addb
lock
test
mov
mov
add
call
call
lea
push
call
lea
add
lea
mov
inc
test
jne
sub
push
lea
push
lea
push
call
mov
add
add
add
mov
mov
lea
push
push
push
push
push
call
add
test
std
call
push
push
pushl
movl
call
add
decl
incl
sub
cli
jmp
imul
pop
ljmp
mov
add
jmp
jmp
jno
gs
adc
test
mov
cld
push
call
add
jmp
orl
dec
enter
and
cmpsl
mov
sbb
add
add
add
xor
inc
jmp
sub
dec
push
mov
sub
jmp
bnd
mov
mov
xchg
icebp
add
pop
xlat
inc
and
xor
stos
and
jmp
stc
jne
mov
insb
loope
adc
add
jg
mov
add
add
jmp
orl
xor
int
int3
stos
xchg
xchg
push
xor
cmp
je
mov
cmp
je
xor
mov
mov
neg
mov
inc
cmp
jb
jmp
hlt
nop
jle
lea
push
push
call
jmp
repz
icebp
nop
arpl
mull
xchg
outsb
lods
push
les
int3
cvtps2pd
push
adc
push
call
pop
jmp
inc
aad
sub
aaa
fsts
cmpsb
push
mov
mov
leave
ret
jmp
jb
jne
out
dec
divl
xchg
jnp
jbe
loopne
add
jmp
push
lea
push
lea
push
push
pop
mov
call
add
push
pushl
lea
push
push
mov
push
push
call
xor
pop
jmp
or
imul
pop
repnz
aad
aas
jnp
insl
xor
inc
jmp
mov
mov
and
adc
push
roll
aad
push
imul
je
mov
cmpl
jmp
xor
add
sahf
sbb
je
out
imul
pop
push
or
jle
jmp
call
pop
jmp
mov
add
out
jnp
jmp
int
mov
inc
mov
pusha
xchg
jae
and
je
jne
fistpl
test
fistpl
stos
data16
mov
add
mov
shlb
add
add
lcall
cs
mov
shlb
iret
cmc
jns
mov
je
jge
push
xchg
jb
insl
pop
push
mov
sub
push
push
mov
jmp
sbb
adcb
out
out
in
sbb
cmp
add
add
pushl
call
andl
lea
push
lea
push
pushl
push
pop
call
add
xor
jmp
cmpsb
cmp
lret
pop
pop
leave
ret
jmp
or
mov
push
add
jmp
cmp
call
xor
xor
ljmp
decl
add
divl
ret
add
add
push
lea
push
push
call
push
lea
jmp
lds
mov
test
test
jge
jge
daa
sbb
jmp
xor
mov
mov
neg
mov
inc
cmp
jb
jmp
mov
mov
mov
inc
mov
out
push
push
call
jmp
push
enter
ja
nop
push
popa
nop
cmp
jb
xchg
sub
add
xor
call
lea
push
pushl
mov
push
push
call
xor
jmp
lea
xchg
adc
add
jmp
lret
lods
pop
ljmp
cli
pop
iret
stos
pop
loopne
sarl
out
mov
cmpl
push
je
push
push
call
mov
add
push
push
mov
call
pop
pop
jmp
call
mov
cmp
clc
adc
jmp
and
dec
fs
sbb
les
jno
xor
jmp
sbb
push
pop
jp
ja
add
add
std
or
scas
dec
adc
inc
in
mov
mov
add
lea
lea
call
mov
test
jbe
lea
shr
inc
mov
mov
mov
lea
push
pushl
mov
lea
call
addl
decl
lea
movsl
movsl
movsl
pop
pop
movsl
jne
mov
jmp
in
data16
xchg
outsb
mov
pop
enter
cmp
mov
adc
add
jmp
std
je
lea
adc
hlt
xorl
push
push
add
jmp
fists
mov
jb
sarb
push
iret
lock
outsb
add
add
pop
jmp
out
jl
negb
popa
in
bound
add
sahf
jbe
adc
mov
add
add
mov
push
jmp
pop
lret
lret
sub
arpl
xchg
andl
add
add
leave
arpl
xchg
mov
pop
ds
test
jmp
jno
push
clc
inc
fimuls
jmp
sbb
jl
out
jg
jmp
jecxz
mov
push
popl
sbb
test
imulb
cltd
push
fwait
jbe
sbb
xchg
sar
push
push
add
jmp
enter
andl
xchg
icebp
cmpb
inc
das
jne
add
fistpl
rolb
jmp
jle
jno
jecxz
xchg
cmp
pushf
cmpsl
dec
jmp
dec
out
jg
jmp
imul
mov
jg
imul
sub
add
push
add
jmp
stos
pop
xchg
adc
pushf
pop
mov
movsl
aaa
out
mov
mov
add
add
es
jb
popa
add
adc
pop
int
mov
shrl
into
pop
fisttps
adc
push
push
add
jmp
sub
fcoms
cmpsl
push
mov
push
mov
lea
add
push
add
jmp
leave
inc
xlat
mov
test
jl
jne
push
outsb
cld
fwait
jbe
mov
les
push
jmp
rorl
push
mov
xchg
jmp
lock
jne
insl
sub
adc
add
jmp
rcrb
xchg
addr16
mov
mov
sbb
and
in
jmp
jne
jnp
in
dec
jle
jge
divl
scas
in
push
cltd
push
push
jmp
mov
mov
and
push
mov
xor
sub
adc
add
push
add
jmp
nop
or
mov
xchg
or
stos
xor
das
push
push
add
jmp
dec
rolb
shrb
fs
popf
insb
vpunpckhdq
lahf
push
xchg
pop
mov
sub
mov
inc
mov
lods
push
pushf
sti
push
xchg
mov
lret
pop
ds
or
sbb
xchg
inc
xor
pop
movl
push
push
add
jmp
sub
push
scas
cmp
and
int
test
push
add
add
sbb
jmp
test
lods
outsl
jmp
and
push
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
jmp
or
push
mov
ja
loope
movsb
cmc
stc
jae
andb
push
in
shlb
roll
mov
pop
cld
mov
add
add
add
add
fs
push
add
pop
leave
test
mov
inc
and
aaa
add
ja
jmp
inc
sbb
mov
xlat
leave
std
decl
jmp
or
adc
cmp
xor
lock
xor
lea
push
push
call
lea
push
jmp
rorl
push
mov
or
pop
xchg
adc
call
lahf
adc
xor
add
out
sti
incl
lea
push
call
call
add
add
jmp
mov
clc
lahf
push
jmp
jmp
pop
xor
add
add
iret
rolb
mov
sbbb
and
aaa
gs
pop
repnz
jbe
repnz
add
imul
imul
add
add
jmp
mov
mov
sbbl
fiadds
dec
mov
test
scas
pop
repnz
popa
add
dec
xor
call
lea
push
mov
add
push
lea
push
call
add
push
pushl
lea
push
push
call
jmp
std
popa
icebp
nop
arpl
jmp
lea
push
call
lea
push
mov
add
push
lea
push
call
add
add
pushl
lea
jmp
int
shlb
push
cmpsl
or
sbb
cs
shr
mov
or
add
jmp
mov
aam
subl
cltd
cli
pop
add
xchg
imul
add
add
jno
inc
daa
rclb
in
outsb
cld
fwait
jbe
mov
fcompl
hlt
add
jmp
add
and
pop
lahf
punpckhdq
inc
lds
iret
sub
xchg
push
mov
pop
push
mov
mov
pop
push
mov
jmp
pop
fisttpll
out
sahf
sbb
rolb
shlb
xchg
pop
pop
data16
jl
idivb
cmp
or
js
push
mov
jmp
daa
test
pop
test
jp
fs
pop
das
mov
jno
pop
push
mov
mov
mov
pop
push
mov
pop
push
mov
jmp
lods
lods
lret
inc
scas
repnz
mov
aad
orl
mov
add
add
add
shll
mov
push
push
call
push
call
pushl
call
mov
mov
pop
push
call
mov
jmp
mov
mov
and
int
enter
repz
pushf
outsl
test
nop
nop
mov
mov
push
lea
push
push
call
add
mov
add
aaa
mov
jp
jbe
loopne
mov
mov
cmp
ror
cmpsb
out
or
call
shr
dec
push
call
mov
nop
repnz
adc
in
sbb
push
mov
pop
adc
push
push
push
push
call
push
call
pushl
call
mov
pop
push
call
jmp
das
add
call
outsl
sti
call
pop
cmp
popa
xchg
mov
sbb
rorw
rorb
pop
idiv
incl
mov
lea
jmp
lret
outsl
lcall
pusha
pop
bnd
cmp
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
mov
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
push
mov
mov
mov
pop
push
mov
pop
push
mov
pop
push
mov
pop
mov
xor
inc
jmp
add
adc
inc
shlb
adc
mov
cmpl
je
cmpl
jne
call
test
je
push
call
jmp
ss
dec
mov
mov
rorb
imul
cli
call
inc
and
aas
and
and
aaa
push
mov
dec
mov
add
mov
add
add
popa
icebp
nop
arpl
and
js
ficoms
in
adc
add
push
add
push
push
call
add
fcomip
pushl
mov
sub
mov
add
dec
and
mov
add
jmp
jp
push
cld
sbb
pushf
xor
inc
push
lcall
pop
imul
rolb
jmp
insl
loopne
adc
adc
mov
inc
mov
int3
pop
int
addr16
adc
ret
add
cmpl
je
cmpl
jne
call
test
je
push
call
pop
jmp
fildll
and
jmp
ret
push
shlb
xor
mov
or
mov
imul
cmp
sbb
and
pop
ret
jmp
push
mov
mov
sub
push
xor
push
push
cmp
je
mov
push
call
mov
cmp
jne
call
cmp
jmp
and
call
and
add
xlat
inc
and
imul
test
add
cmpsl
cmp
int3
push
xlat
ret
jmp
mov
xchg
mov
mov
push
pushf
sti
push
mov
xor
je
push
call
pop
jmp
add
push
imul
call
in
mov
add
jp
jne
out
pop
loopne
shlb
mov
lea
call
push
lea
push
push
push
push
push
push
lea
jmp
inc
ret
ret
lds
iret
sub
lcall
pop
ret
jmp
jns
outsb
or
sbb
test
pop
pop
pop
leave
jmp
mov
stos
into
cmp
cmpsb
push
mov
mov
sbb
aam
add
mov
mov
push
pop
push
lea
rep
pop
mov
push
jmp
push
fimull
fidivrl
push
fstpt
pop
xor
les
je
xor
inc
mov
push
call
mov
jmp
xchg
pushf
sti
push
clc
cli
mov
dec
outsl
int
jge
jne
out
sbb
xor
sbb
lea
jmp
mov
push
les
inc
and
iret
test
aas
mov
jmp
inc
enter
cmp
les
int3
and
push
push
pop
mov
call
mov
add
inc
push
lea
push
push
push
push
pushl
jmp
jl
jge
testl
xchg
xor
iret
push
mov
call
rep
call
lea
lea
movsl
movsl
movsl
movsl
xor
mov
add
inc
cmp
jb
push
lea
push
push
call
add
lea
push
lea
push
lea
jmp
sub
sub
pop
pop
into
pop
cmp
cmp
fwait
dec
shr
cs
jmp
mov
mov
and
into
xor
jmp
aaa
mov
dec
fisttpl
add
int
and
call
cmpl
push
push
push
je
cmpl
jbe
ja
pop
rclb
imul
mov
in
mov
popa
mov
add
fwait
add
std
or
mov
movb
add
push
push
pushl
call
mov
mov
mov
push
push
call
lea
push
mov
mov
call
add
xor
mov
jmp
outsb
repnz
pop
repnz
out
jb
xchg
test
jge
or
out
call
add
jne
call
add
or
mov
mov
jge
mov
pop
pop
pop
pop
leave
ret
jmp
nop
xchg
sbb
xor
cmp
je
jne
imul
sbb
push
nop
adc
lods
lret
inc
movsb
or
add
add
adc
jmp
mov
movsb
ret
xlat
sub
mov
aad
or
cli
jge
je
insb
mov
mov
pusha
decl
sub
pop
leave
test
xchg
mov
cmc
int3
push
push
pushl
mov
mov
call
jmp
inc
int3
inc
and
aaa
push
mov
cmp
rol
mov
mov
sub
ljmp
mov
mov
incl
ret
jb
mov
mov
xor
mov
sub
inc
cmp
jb
push
lea
push
lea
push
call
push
pop
lea
lea
xor
repz
jne
mov
push
push
pushl
jmp
idivl
jp
push
lret
pop
ds
test
test
mov
push
push
pushl
call
push
jmp
arpl
popa
add
push
adc
mov
lea
jmp
es
dec
mov
pop
test
push
pop
jp
jge
adc
rcl
inc
add
test
add
jmp
lods
aas
scas
lret
and
adc
mov
mov
mov
add
add
shr
push
push
lea
push
lea
push
lea
call
add
test
jne
add
add
cmp
jb
push
push
pushl
mov
call
push
lea
push
lea
push
call
push
pop
lea
lea
xor
repz
je
push
jmp
nop
es
mov
mov
mov
lea
rep
xor
jmp
xchg
inc
jmp
pop
lret
pop
ds
mov
mov
repnz
pop
repnz
jecxz
adc
sub
lods
sub
mov
jg
outsb
xchg
sbb
std
insl
hlt
pop
in
sub
jg
rolb
inc
add
call
add
jmp
mov
mov
fdivl
in
adc
pop
jp
and
inc
jmp
popf
cmp
mov
mov
jnp
mov
mov
fs
icebp
or
je
inc
push
inc
add
dec
fsubrs
jb
outsl
inc
add
je
xor
ret
xor
sbb
jne
mov
mov
push
pushl
call
mov
jmp
mov
cmpsl
ret
fistpl
test
mov
add
xchg
punpcklwd
add
lret
mov
push
push
call
mov
push
push
pushl
call
push
lea
push
push
push
mov
mov
push
mov
call
mov
push
call
cmp
jne
push
pushl
call
jmp
push
pushf
sti
push
hlt
sbb
pop
insl
xor
pusha
ficoml
fs
popf
insb
mov
and
push
movsb
sub
arpl
xchg
gs
inc
xlat
inc
popf
sbb
or
inc
jmp
je
add
push
and
dec
les
mov
cltd
clc
or
jmp
fs
bound
js
ljmp
loopne
loopne
adc
add
rcl
inc
add
add
push
push
push
je
cmpl
jne
call
test
je
push
call
pop
jmp
push
mov
call
jmp
mov
std
or
mov
test
lods
cmp
adc
sbb
pop
leave
ret
jmp
setl
push
movsb
push
lret
pop
leave
test
std
movzwl
jmp
push
push
xor
or
int
and
aaa
les
mov
push
pop
dec
mov
inc
add
cmpsl
call
push
xor
sub
popa
add
push
cli
shll
cmp
mov
push
push
push
push
push
push
pushl
call
mov
cmp
jne
push
pop
jmp
xor
mov
out
imul
mov
mov
movzwl
add
imul
movzwl
imul
movzwl
add
movzwl
add
movzwl
imul
add
movzwl
movzwl
imul
add
mov
imul
add
movzwl
movzwl
imul
add
mov
imul
movzwl
add
mov
cmp
jmp
imul
add
push
filds
dec
cli
mov
xchg
adc
push
mov
movb
push
inc
add
lahf
adc
jmp
push
in
push
jecxz
adc
sub
leave
ret
jmp
sub
jmp
push
iret
pop
cmp
pusha
stc
imul
insl
ret
pop
jp
and
scas
fiaddl
add
add
sbb
sub
or
inc
mov
or
test
lock
bound
jmp
sahf
push
mov
es
out
insl
std
test
dec
roll
aad
sbb
movsb
push
mov
cmp
push
push
push
je
cmpl
jne
call
test
je
jne
and
rolb
mov
jg
scas
pusha
movsl
cli
cmp
jb
mov
add
lea
movsl
movsl
movsl
movsl
call
test
je
push
call
pop
jmp
or
andl
jmp
push
call
mov
mov
jmp
rorl
dec
in
outsl
in
sbb
es
bound
aaa
xor
mov
das
xchg
movzwl
movzwl
imul
add
movzwl
imul
jmp
cltd
adc
mov
aam
mov
dec
mov
sub
inc
in
push
mov
jmp
iret
inc
shlb
fnstcw
inc
and
sub
jp
jp
lods
xor
inc
jmp
push
xor
push
push
jmp
inc
xlat
inc
and
sbb
mov
jg
push
mov
mov
or
add
push
add
add
xchg
add
sahf
jbe
jmp
pop
fnop
push
test
ret
cld
mov
jmp
divl
xchg
cmp
lds
xchg
gs
mov
sbb
add
add
nop
or
add
movsl
movsl
mov
mov
jmp
push
mov
adc
movsl
movsl
mov
jmp
push
jmp
les
scas
pop
repz
inc
mov
movsl
aas
scas
lret
test
pop
xor
jmp
arpl
insb
or
mov
repz
scas
mov
xchg
inc
lret
imul
add
dec
sub
mov
cmp
jbe
mov
add
lea
movsl
movsl
movsl
movsl
call
test
je
push
call
pop
jmp
mov
mov
jno
je
mov
jmp
jns
ljmp
loope
mov
shll
dec
pop
daa
mov
jbe
aam
dec
pop
pop
pop
leave
ret
jmp
and
lock
xorb
ret
ret
xchg
add
jo
jge
cmp
jae
jb
stc
jge
je
insb
mov
cmpsb
shll
aam
lock
or
add
or
mov
xchg
or
add
xlat
movzwl
imul
movzwl
add
imul
movzwl
imul
add
movzwl
imul
add
movzwl
movzwl
add
imul
add
cmp
jae
mov
lea
lea
movsl
movsl
movsl
movsl
mov
jmp
dec
enter
es
jae
cmp
je
mov
push
push
jmp
imul
sbb
pop
cmpsb
sub
lds
and
push
sahf
or
cmpsb
insl
mov
ret
pop
std
decl
adc
movsl
movsl
mov
mov
jmp
outsb
inc
outsl
pushl
call
mov
mov
mov
mov
mov
rep
xor
mov
mov
lea
mov
mov
sub
inc
cmp
jb
mov
add
mov
mov
jmp
cltd
adc
mov
inc
iret
pop
cmp
xor
leave
ret
jmp
outsl
loope
adc
or
ret
push
lds
adc
ret
addb
or
add
jge
push
les
push
sbb
add
mov
lcall
xor
jns
popa
lods
ret
aad
fadd
xchg
stc
ret
fst
movsl
xor
add
add
or
je
mov
aad
add
popa
popa
and
xor
mov
add
add
xchg
add
add
inc
and
js
adcl
test
rclb
and
add
cmp
or
push
inc
add
xor
adc
fisubl
out
sbb
shrl
sub
lock
lahf
push
js
jecxz
inc
loopne
call
pop
xor
mov
mov
mov
neg
mov
inc
cmp
jb
mov
push
push
pushl
call
mov
mov
jmp
test
mov
test
push
into
pop
cmp
imul
rolb
push
push
pushl
jmp
sbbl
in
out
mov
fmuls
mov
add
mov
cmp
je
jne
xchg
les
pushf
outsl
ljmp
int
mov
mov
lea
mov
push
rep
call
cmp
je
push
call
pop
jmp
rclb
mov
mov
faddp
lods
fidivrs
pop
adc
sbb
pop
enter
dec
test
mov
push
mov
popa
rcrl
fildl
add
popa
out
adc
push
pop
fdivl
in
dec
roll
aad
push
mov
cwtl
js
add
jmp
lods
and
push
mov
lcall
negl
mov
jmp
int3
dec
fstpt
nop
testl
mov
leave
pushl
lea
push
call
mov
push
add
pop
lea
xor
repz
jne
mov
push
lea
push
pushl
mov
call
lea
push
push
call
pop
pop
cmp
je
xor
mov
mov
pushl
lea
push
push
call
add
jmp
adcl
imul
xor
pop
sbb
test
add
add
leave
mov
inc
cmp
jl
jmp
mov
lret
adcl
loop
not
inc
aad
dec
mov
jne
jmp
jge
arpl
cmc
push
scas
imul
mov
mov
jmp
imul
hlt
push
cld
push
cmp
inc
xchg
and
cli
xchg
mov
cmp
jne
mov
jmp
lds
add
dec
loop
dec
sub
add
jmp
push
ret
ret
adc
add
out
mov
add
mov
jmp
add
xor
or
in
repnz
loop
je
mov
mov
cmp
jne
mov
jmp
mov
mov
sbb
dec
mov
add
mov
mov
jmp
lods
xor
lea
push
lds
inc
add
dec
jecxz
dec
xor
add
push
mov
icebp
jno
xorb
inc
aam
dec
test
mov
dec
mov
add
inc
inc
decl
jne
jmp
sub
fstpl
test
mov
enter
dec
cmp
je
jmp
xor
testl
incl
call
jmp
xchg
sbb
repnz
pop
repnz
call
fimuls
add
add
mov
ret
je
push
call
pop
jmp
xchg
push
cmpb
out
add
jmp
aam
int3
stos
data16
mov
inc
mov
dec
ret
ret
cmp
je
jne
call
xorl
jbe
popa
dec
fdivrs
add
mov
cmp
jmp
hlt
jg
mov
dec
fimuls
push
mov
or
call
cmp
je
push
call
jmp
sub
data16
pop
inc
inc
and
sbb
mov
push
call
pop
jmp
push
rcll
sub
scas
enter
pop
jmp
mov
push
push
push
push
jmp
out
loope
jae
jle
jp
in
sbb
jns
push
inc
call
cmp
je
push
call
pop
jmp
mov
out
mov
mov
add
jmp
int
lret
jecxz
jno
xorb
scas
cmp
mov
les
cwtl
push
or
add
push
cwtl
or
add
push
mov
jmp
sbb
hlt
push
cld
dec
stos
or
mov
jmp
jb
inc
and
pop
out
insb
loop
je
dec
enter
cs
inc
mov
jmp
aas
mov
in
sbb
mov
std
sub
mov
cmp
je
push
call
pop
jmp
push
out
cmp
add
jmp
lret
cmpsb
push
mov
ljmp
stc
jmp
mov
jb
test
cmp
jne
cmp
je
jmp
add
call
pop
jmp
dec
rcll
and
lods
dec
pop
js
inc
inc
push
push
push
push
jmp
pop
lea
ljmp
stc
jmp
pop
subl
push
ret
je
jne
and
sbb
push
popa
nop
jns
push
xchg
repz
cli
lds
rorb
add
mov
lcall
inc
add
add
push
call
jmp
jnp
inc
sub
or
mov
mov
mov
mov
mov
mov
mov
jmp
and
push
sub
mov
jmp
in
jle
mov
imul
adc
pop
push
je
mov
mov
mov
mov
mov
jmp
add
stos
inc
shll
add
jnp
ror
pop
cmp
ret
jne
rolb
mov
cmpsb
das
mov
iret
pop
lret
scas
pop
stos
cmp
leave
lret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
inc
shll
test
and
mov
mov
push
call
pop
mov
mov
push
call
jmp
pushf
mov
mov
jmp
xchg
or
call
fildl
mov
mov
push
call
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
jno
bound
adc
mov
pop
add
pop
cs
lret
adc
mov
mov
jmp
out
cli
popf
insb
mov
in
or
arpl
add
jle
pop
mov
pop
ret
jmp
xchg
adc
mov
inc
mov
mov
stos
jge
test
and
push
lea
push
call
push
pop
lea
lea
xor
repz
jne
mov
call
mov
push
pushl
mov
pushl
mov
call
mov
jmp
mov
rcrb
inc
dec
fistpll
imul
add
add
movsl
jmp
add
add
mov
hlt
push
cld
aaa
rorl
dec
cmpsb
jg
addr16
sbb
mov
mov
add
call
mov
mov
mov
call
lea
mov
call
mov
xor
push
push
pushl
mov
call
mov
add
push
call
pop
mov
xor
xor
cmp
jmp
or
call
test
data16
xchg
outsb
lcall
add
inc
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
into
pop
cmp
ds
fldt
rolb
shlb
xchg
jb
dec
push
lea
adc
or
push
push
lea
push
call
jmp
cli
insb
loop
je
sub
sub
push
lock
popf
insb
test
jae
xor
mov
mov
jmp
ljmp
lahf
push
popf
add
test
test
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
mov
jmp
add
or
and
jge
negl
push
mov
movzwl
inc
add
cmp
jb
jmp
gs
fsub
insb
or
lret
je
pushl
mov
pushl
jmp
les
test
out
cmp
push
or
addb
test
je
mov
lea
andl
lea
push
pushl
mov
lea
push
push
mov
call
jmp
shll
xorb
fimull
ficompl
push
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
add
mov
mov
call
mov
lea
push
call
pop
xor
mov
mov
mov
neg
mov
inc
cmp
jb
lea
push
call
lea
lea
mov
inc
test
jne
sub
push
lea
push
lea
push
call
push
pop
lea
call
xor
repz
jmp
clc
jp
jp
stc
jp
jp
and
sbb
adc
jo
xlat
add
add
cmp
addr16
and
push
mov
cmpsl
enter
push
mov
add
lea
push
pushl
mov
add
push
push
mov
call
mov
mov
test
je
pushl
mov
pushl
pushl
pushl
call
mov
jmp
or
scas
and
pushl
mov
pushl
jmp
lahf
sbb
pop
stos
cs
into
stc
out
inc
and
push
mov
push
add
push
push
mov
call
mov
mov
mov
mov
mov
mov
jmp
dec
lds
iret
das
insb
in
sbb
dec
inc
xor
fisttpll
je
pushl
jmp
pop
aam
sub
xor
dec
fcoms
mov
push
call
pop
jmp
out
jg
jmp
mov
sub
cmpsb
mov
jo
call
mov
jmp
jno
jo
loop
arpl
popa
add
push
push
ret
ret
and
mov
lcall
les
push
pop
xor
lea
rep
push
pop
movl
jmp
jne
jo
loop
daa
mov
inc
mov
inc
mov
push
add
add
sar
jecxz
jne
add
inc
fimuls
push
inc
or
jo
pushl
push
mov
call
jmp
pop
lret
pop
ds
ja
jl
testb
cmpsl
ret
sub
cmpl
jmp
jge
jo
loop
rep
std
test
or
lods
cmp
clc
std
incl
jne
dec
jns
jmp
sub
fnstenv
stos
push
mov
lea
jmp
xor
add
sahf
sbb
pop
cmp
push
jle
xchg
cmc
add
leave
lock
jne
dec
jns
jmp
call
pop
test
jl
mov
jmp
fstpl
stos
data16
rclb
mov
mov
cs
xor
lea
jmp
cld
jns
mov
out
icebp
nop
arpl
aas
aam
xchg
jb
insl
mov
add
push
call
mov
pop
mov
cmp
je
pushl
mov
pushl
mov
pushl
pushl
call
lea
push
mov
push
add
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
inc
mov
jmp
popf
push
test
push
mov
movsl
push
cltd
dec
jae
xchg
testb
gs
lea
push
inc
push
lea
push
lea
push
lea
push
call
mov
mov
add
shr
mov
push
lea
push
pushl
call
add
xor
jmp
lret
mov
test
push
negl
pop
leave
ret
jmp
push
fisttpll
out
arpl
addr16
pop
pusha
icebp
popa
add
add
in
sbb
mov
jmp
add
add
pushl
lea
pushl
push
lea
push
call
add
test
jne
cmp
jne
cmp
jne
cmpb
jne
push
pop
lea
cmp
jmp
gs
popa
add
adc
inc
and
cmp
lret
sbb
mov
jmp
cmpsb
xor
rolb
shlb
bnd
subb
test
add
jmp
mov
mov
mov
stc
gs
pushf
outsl
add
add
push
push
mov
mov
add
shr
cmp
jbe
mov
jmp
inc
fimull
fisubrl
mov
in
out
mov
mov
mov
pushl
inc
cmp
jb
jmp
xor
sti
inc
test
jne
mov
jmp
nop
xor
xlat
inc
and
pop
push
fisttpl
fisttpll
clc
mov
mov
pushl
pushl
call
xor
jmp
sbb
add
inc
jl
and
int
ret
mov
xchg
jb
callw
rcl
inc
add
fucomp
ljmp
pop
cmp
dec
out
push
and
or
add
sbb
ja
push
lea
push
pushl
call
add
xor
jmp
lahf
sbb
dec
ret
mov
mov
and
cmp
push
mov
es
mov
inc
mov
out
rorb
push
mov
cmp
sti
imul
mov
daa
inc
mov
test
iret
stc
outsl
lcall
push
xor
add
pop
iret
stos
pop
test
fs
popf
insb
xchg
mov
dec
mov
pop
stos
push
setnp
outsb
popf
push
sbb
mov
sbbl
out
sbb
cld
push
mov
repnz
outsb
call
int3
lods
push
pushf
sti
push
xchg
cmp
ja
imul
das
jle
xchg
testb
add
rcll
cmpsl
push
mov
push
shlb
cmp
ss
mov
in
je
insb
daa
mov
inc
mov
mov
cwtl
inc
int
and
push
lret
mov
scas
adcl
out
neg
push
lds
adc
je
out
sbb
jae
in
mulb
or
mov
push
lds
pop
stos
dec
adc
fisttpl
fnsave
inc
fisttpl
fnstsw
pusha
pop
repnz
mov
jg
cmp
xchg
mov
insb
sti
imul
inc
ficoms
dec
cmp
add
out
dec
cmp
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
call
cmp
je
push
call
pop
jmp
mov
jno
mov
cmpb
add
cmp
pop
ljmp
imul
lods
sub
sti
imul
cmp
inc
mov
dec
sub
enter
push
es
stos
sbb
and
cmp
dec
in
test
popl
out
cmp
out
sbb
mov
add
neg
lea
xchg
cs
push
inc
cld
je
movsl
cmc
enter
xchg
cli
stos
dec
icebp
xor
sub
xor
pop
cmp
aas
dec
jecxz
lret
mov
mov
ficoml
and
dec
xchg
mov
aam
sbb
bound
stc
pop
sub
xchg
call
das
adc
jb
ds
fwait
jne
das
out
and
into
mov
popf
imul
dec
sub
scas
test
xchg
xchg
dec
in
stos
push
test
fidivrl
sub
xlat
pop
aad
and
sbb
mov
add
or
add
or
inc
jne
adc
stos
call
mov
mov
add
aaa
cmp
sbb
xchg
adc
cwtl
fsubrp
rcrb
sahf
xchg
cmp
cmpb
jmp
outsl
lods
pop
icebp
cmp
add
mov
or
mov
mov
lods
aas
push
enter
dec
mov
sub
sbb
cltd
adc
inc
je
add
push
sahf
rcrb
push
and
or
dec
jae
xchg
scas
mov
ja
mov
scas
xchg
fcomps
jnp
add
lock
mov
or
jp
jle
insl
add
dec
aam
or
mov
cmc
testl
and
inc
lret
cmpsb
ljmp
imul
pop
sub
push
inc
cmpsb
mov
pop
mov
fs
fstl
mov
test
out
fcompl
cmp
mov
push
outsl
mov
xorl
push
dec
add
adc
fsub
add
test
mov
adc
repnz
mov
mov
inc
xchg
xchg
arpl
cmovne
or
sub
adc
out
mov
cmc
or
xor
scas
and
jb
sbb
into
lcall
je
cs
push
push
pop
clc
pushf
mov
adc
sub
js
fucomp
flds
out
stos
xlat
xor
pop
sbb
fisubs
and
enter
mov
push
xor
pusha
sub
mov
sbb
pop
lods
pop
cmpsl
xor
sub
imul
in
dec
cwtl
je
call
mov
push
mov
push
imul
adc
pop
cwtl
fdivr
adc
call
mov
jnp
test
les
data16
in
insl
fidivs
ja
js
repz
xor
stos
sub
dec
ja
faddl
mov
stos
mov
sarl
xchg
pusha
jne
lods
push
shrl
cwtl
movsl
lahf
add
shl
sub
mov
jp
pusha
clc
sub
popf
and
add
aad
imul
adc
xchg
xchg
imul
mov
jno
xor
sahf
or
cmp
into
adc
inc
or
jle
xchg
or
popf
or
mov
cmp
ret
push
xchg
popf
mov
dec
outsl
fstps
pop
jl
cmp
push
shll
xchg
daa
ss
stos
ret
faddl
adc
sub
cmpsl
stos
jp
or
push
pop
mov
and
out
leave
mov
or
std
test
pop
daa
in
mov
or
push
pushf
xor
add
push
mov
test
aam
inc
imul
mov
fsubs
adcl
cmovo
mov
ss
cmp
aas
dec
popf
push
mov
std
inc
fiaddl
mov
lret
sbbb
push
lcall
lahf
sbb
ror
test
cwtl
sbb
mov
xchg
sub
and
cmc
nopl
jle
cld
and
or
and
mov
push
xchg
mov
hlt
and
ds
mov
insl
les
ja
xchg
pop
out
mov
out
addr16
add
push
pop
cmpsb
add
sbb
gs
jbe
lcall
arpl
or
mov
int3
mov
movsb
add
xchg
rorl
pop
sbb
mov
pop
jne
mov
pop
fldenv
xor
xchg
cli
jnp
test
xor
xchg
cmp
enter
adc
in
or
loopne
xor
and
popa
lcall
test
sub
inc
into
jg
lcall
orl
lds
jb
outsl
lret
xchg
out
es
sub
fimuls
sahf
imul
dec
inc
push
arpl
jmp
lahf
flds
pushf
dec
jnp
outsb
and
fcoml
insb
jnp
cmp
add
push
jl
cwtl
jae
lahf
test
cli
cmc
mov
fs
sub
and
ds
mov
nop
int
push
xor
roll
fucom
mov
add
and
and
pop
lock
movsb
add
pop
scas
es
jecxz
aad
mov
das
mov
pop
movl
addb
aad
loope
cmp
js
pop
jmp
jmp
jp
movsb
inc
popf
or
and
ret
nop
test
jo
stos
jmp
mov
enter
out
mov
mov
sbb
imul
ja
adc
adc
aad
pop
push
les
lahf
les
lods
pop
xlat
xor
adc
pushl
cwtl
sub
cltd
and
sub
cmp
mov
xchg
mov
sub
mov
movsb
and
xchg
fildl
shrl
movsl
hlt
sbb
std
inc
push
jns
scas
xchg
pushf
add
pop
shrl
xchg
das
jmp
dec
add
xor
adc
inc
mov
xchg
sbb
mov
in
xlat
mov
neg
cwtl
add
jnp
gs
enter
mov
ret
cmc
pop
in
adc
lret
out
cs
rorb
insl
jge
jne
mov
add
mov
xchg
push
pop
jg
cmp
jp
mov
lcall
pushf
or
xchg
push
test
jmp
pop
dec
cs
jle
pop
das
lret
mov
out
icebp
mov
iret
scas
or
sub
jne
dec
push
sbb
jl
lds
lahf
rcr
push
inc
inc
cwtl
or
popa
jmp
mov
push
mov
pusha
pusha
lret
sbb
sub
cli
or
adc
rcl
in
mov
lcall
sub
insb
jmp
jmp
jno
jno
xor
ss
pop
jecxz
push
cld
pop
aam
adc
repnz
mov
jl
mov
mov
insl
jne
cmpsl
repz
test
add
aam
pop
ds
push
and
pop
cmp
and
pop
cmp
sbb
add
shrb
xchg
mov
adc
mov
insl
andb
adc
lahf
sub
xor
and
mov
push
movsl
jns
lods
lds
sti
roll
sbb
int
inc
insb
xor
lcall
push
std
and
or
xchg
aas
stos
xor
jae
cmc
pop
nopl
int3
xchg
stos
test
pop
inc
aaa
ret
aad
pusha
mov
cmp
sahf
sub
sbb
add
sub
sbb
fcmovnb
jns
push
shrl
push
push
adc
jecxz
sbb
dec
mov
sbb
stos
dec
nop
sbb
mov
int
sti
popl
lret
mov
sub
in
out
jae
sub
xchg
sarl
nop
jle
movsl
inc
lret
pop
sbb
nop
pcmpeqw
mov
xor
sub
xor
faddl
cmpl
fnsave
aad
mov
dec
mov
pop
and
les
adc
leave
popf
fstps
mov
jg
inc
std
loop
or
pusha
addr16
iret
sti
push
lock
and
dec
xor
mov
cmpsl
xor
ljmp
cld
lahf
mov
dec
es
adc
fs
sub
int
jo
in
movsb
in
addr16
lret
lret
cmc
xor
xchg
leave
mov
pop
xchg
push
jo
jge
jbe
add
inc
dec
add
ret
pop
mov
lcall
repnz
jmp
dec
aam
jno
add
xor
aas
xor
fidivs
loope
mov
push
in
cmc
in
shlb
lock
arpl
lret
insl
or
into
xor
test
add
and
jae
popf
jbe
cmpsl
lods
fs
mov
push
xchg
ja
mov
mull
cld
scas
adc
test
push
int
fsubr
mov
imul
push
rclb
into
shl
test
and
es
and
xlat
fidivrs
dec
ret
iret
lret
and
xor
fists
sbb
dec
cmp
adc
add
cli
jno
lock
je
mov
not
inc
add
adc
fcom
push
jo
jge
out
sub
sahf
sub
aas
das
mov
aad
mov
scas
jecxz
inc
inc
or
sbb
sub
mov
add
and
mov
mov
filds
rcrl
repnz
filds
dec
aam
fdivrl
and
mov
jo
mov
add
pop
cmp
cmpsl
sbb
pop
jg
lahf
mov
push
int
mov
mov
xchg
sub
out
xchg
loope
push
xchg
or
xor
sub
decb
stc
push
sub
sbb
or
adc
rol
inc
xor
das
fst
movsb
lock
or
mov
pop
mov
ret
iret
dec
and
pusha
lods
adc
mov
cs
std
test
mov
es
or
mov
mov
add
cltd
rolb
mov
stos
cmp
xor
popa
test
xor
call
xchg
shlb
iret
ficoml
scas
mov
nop
push
lret
xchg
popf
dec
fisubs
jge
in
jp
pusha
hlt
out
pusha
outsl
push
loop
sub
or
lock
pop
cmp
xor
or
mov
push
cli
xchg
outsl
js
mov
pop
mov
xor
imul
int
inc
in
dec
ret
mov
cmp
push
cmp
jl
inc
sub
lret
push
test
adc
cli
ljmp
stc
inc
push
inc
mov
xchg
cld
lcall
mov
mov
cmp
cmp
add
inc
test
subb
mov
sub
hlt
test
roll
in
mov
push
fnstsw
fwait
fs
jo
pushf
mov
xchg
sub
xchg
sub
mov
cli
fmuls
mov
in
pop
jmp
add
ficomps
inc
outsb
insl
rorl
dec
test
sarb
jg
iret
jp
stc
les
nop
dec
adcl
fcom
cltd
xor
sbb
pusha
jo
mov
mov
outsb
testb
inc
loopne
or
lret
mov
cmpsl
mov
mulb
sub
dec
fcomi
add
shrl
lcall
jbe
pusha
shlb
repnz
sbb
jb
aas
or
outsb
movsl
cmpsb
xor
xor
cmp
gs
push
dec
test
mov
int
cmovns
orb
push
xor
dec
loope
cmc
dec
push
sbb
dec
add
loopne
xor
and
fsubrl
pop
rorl
mov
aad
icebp
sub
mov
mov
popf
jecxz
cltd
int3
fcmovb
fldt
mull
mov
and
xor
dec
add
push
cltd
stc
fadds
in
sub
mov
shll
aam
push
dec
jo
test
xor
sub
push
mov
iret
push
lahf
gs
insb
or
xchg
jg
cltd
in
or
push
inc
sbb
hlt
or
pop
add
sarl
incb
int
push
pusha
xor
mov
ret
lea
mov
jae
cltd
ret
mov
repz
mov
cli
roll
sbb
adc
movsb
inc
xor
icebp
pop
fcmovu
leave
mov
mov
xlat
cwtl
mov
add
xchg
mov
pop
xor
rolb
dec
jo
loopne
shll
fsts
push
add
pop
dec
jbe
inc
mov
dec
pushf
imul
lret
je
outsl
fwait
test
mov
add
es
rcrl
sub
cmp
xor
das
or
cmp
cmpsb
jmp
cmp
out
es
ljmp
xor
out
mov
pushl
enter
mov
pusha
fsubr
test
cmc
jns
adc
xchg
sbb
in
jle
les
das
xor
outsl
sbb
lods
adc
ret
push
push
stos
pop
cmpsb
divl
push
cmpsb
dec
pop
jae
test
fnstcw
push
data16
lds
out
fidivrs
pop
lods
outsb
xor
lods
push
sti
push
fsubrl
sbb
imul
jns
cmp
mulb
sbb
out
in
outsb
cmpsl
xchg
mov
xchg
and
hlt
sbb
les
scas
loop
xchg
ss
aam
test
daa
in
lcall
inc
outsl
shl
jae
mov
fnstenv
loope
cmp
cs
inc
push
xchg
jns
and
in
cmp
aas
add
xchg
je
mov
push
aas
xor
lret
lea
pop
mov
jb
inc
fsubrp
inc
fcmovbe
pop
inc
outsb
xchg
pop
fsubs
in
aas
cmp
inc
loope
lahf
adc
in
ret
pushf
xchg
in
out
cmpsl
ret
scas
and
int
push
ljmp
aaa
mov
mov
out
arpl
aam
xchg
popa
ja
orl
jb
aas
sbb
hlt
mov
pusha
inc
addr16
iret
stc
das
mov
mov
and
fisubl
or
les
test
inc
les
mov
cltd
sbb
or
push
aam
rorb
stos
xlat
lahf
or
frstor
and
xchg
jae
jno
arpl
adc
dec
inc
imul
cld
lds
adc
adcl
push
push
jge
cmp
adc
jne
daa
push
mov
int
cmpsb
push
dec
cld
push
sub
out
inc
sub
daa
push
pop
jno
in
call
mov
orb
dec
xchg
jecxz
roll
shrl
movsl
mov
xchg
imul
cmp
xchg
xor
lahf
popa
lret
pop
sahf
popf
mov
ret
sub
cmp
cltd
hlt
xcrypt-ecb
cmpsl
leave
mov
pop
int3
or
adc
pusha
rcll
push
int3
inc
test
sub
and
ja
add
ret
mov
mov
fs
leave
mov
pushf
cmpb
fst
sbb
popf
push
mov
lock
mov
ret
inc
daa
movsb
divl
icebp
and
xlat
push
das
cs
cmp
insb
mov
xchg
stos
sbb
adc
adc
sub
in
xor
jns
les
mov
mov
mov
iret
add
mov
lret
negb
lock
dec
lods
pushf
out
lea
test
mov
and
xor
lock
imul
outsb
xchg
mov
inc
xchg
and
cltd
xor
inc
and
fisttps
aam
jno
pop
mov
mov
sbb
mov
adc
nop
mov
push
shld
dec
lods
dec
filds
mov
int3
push
or
or
mov
loope
inc
mov
aaa
cmp
pop
sbb
push
dec
sbb
xchg
ret
adc
jmp
pop
dec
fnstenv
jb
rcl
rcll
jne
add
xchg
popa
lahf
sub
test
ljmp
aam
mov
stos
dec
testl
inc
je
xchg
cmp
fs
add
mov
shl
stos
push
xchg
sahf
dec
cmp
jle
test
loop
lret
xor
test
ss
sub
pop
mov
lock
cmp
pop
dec
jecxz
or
jg
mov
push
mov
adc
insl
mov
cmpsb
loope
adc
cmp
xor
rcll
mov
test
mov
addr16
sub
ja
and
mov
mov
leave
jl
aad
bound
pop
adc
or
hlt
push
mov
xchg
cmc
mov
das
andb
loop
shll
dec
iret
mov
fstps
xchg
popa
pop
pop
in
ja
stos
jp
add
cld
mov
mov
add
loope,pn
popa
in
xor
cmp
pop
loope
clc
jnp
cmc
sub
and
fidivs
loop
adc
aas
aam
mov
mov
das
jge
loopne
pusha
cwtl
mov
rorl
sbb
push
mov
add
sbb
jne
add
jb
jae
mov
movsb
out
out
sub
inc
jo
pop
insl
data16
shrb
mov
mov
lods
aam
inc
rorb
insl
jge
jne
mov
add
mov
inc
repz
cld
loope
faddl
adc
test
pop
outsl
fisttpll
mov
push
sub
dec
cli
mov
add
ds
xor
popa
pop
mov
out
outsb
pop
xor
bound
add
inc
push
faddp
jne
loope
andb
xchg
xlat
stos
scas
adc
neg
pop
cli
flds
aaa
bound
cld
addr16
cmp
into
jge
enter
mov
push
xchg
aam
movsb
cmpl
insb
lahf
jp
scas
mov
xor
dec
sbb
in
dec
dec
je
mov
inc
inc
mov
mov
jnp
insl
fdivl
xchg
iret
mov
mov
mov
jp
frstor
push
xchg
add
sti
xchg
pop
insl
inc
fmul
or
lds
insb
and
in
outsb
leave
mov
and
inc
nop
fisttpll
movsb
fimull
ljmp
dec
push
adc
and
das
dec
add
jb
lock
cli
mov
mov
clc
cmpsb
shrb
ror
in
mov
clc
pop
jle
push
inc
nop
mov
lret
lret
cmpsl
mov
in
push
dec
cwtl
dec
in
dec
out
popa
sbb
cmc
and
shll
pop
push
stos
aam
jp
xor
push
jp
dec
adc
push
idiv
mov
imul
scas
jns
std
int3
xchg
adc
rorb
repz
push
dec
cmp
jno
loop
rdtsc
cmovne
lret
mov
repnz
les
xor
addr16
popa
and
ds
xor
es
std
bound
in
push
int
shrl
leave
mov
cmp
dec
enter
out
and
dec
stos
xchg
push
movsl
lods
in
xor
insb
xchg
out
dec
xor
mov
pop
into
stc
add
insl
adc
jns
in
or
xor
pop
out
cli
ret
sbb
jmp
xor
shrl
lahf
adc
dec
jmp
andl
notb
xor
xchg
loope
aad
insl
aaa
int
pop
xorl
insb
xchg
inc
ret
arpl
lret
sbb
mov
adc
mov
and
sub
mov
loope
sbb
mov
sub
pushf
mov
je
jecxz
mov
into
inc
pusha
jne
mov
push
xlat
iret
sti
test
jno
dec
push
andb
mov
daa
jp
ss
mov
jne
fwait
mov
fistps
les
out
jg
cmp
and
fcoms
imul
aaa
enter
je
insb
je
dec
lea
sbb
sub
inc
jno
sub
inc
aam
sub
xor
xchg
add
sbb
js
mov
mov
push
in
dec
inc
je
push
jle
repz
push
mov
and
call
fidivs
dec
xor
jg
negb
add
fsqrt
mov
int
loop
aam
std
je
shrb
aam
push
ja
lods
lea
test
and
pop
and
inc
imul
cwtl
cltd
adc
sbb
ss
flds
cmp
lock
adc
pop
or
in
out
or
std
xchg
lcall
mov
mov
andl
cltd
cmp
insb
push
mov
je
mov
sahf
jb
cmpsb
pop
out
xchg
sub
call
inc
and
inc
sub
xor
daa
adc
loop
aam
xorl
mov
das
or
fsubp
leave
loopne
out
mov
sbb
test
cs
push
sbb
and
movsl
mov
or
loopne
sbb
sub
sub
xor
cmp
sahf
outsl
aaa
adcb
into
mov
or
jecxz
sub
cmc
mov
adc
das
xchg
push
add
test
jecxz
out
pop
movsl
addr16
out
out
dec
fisubs
sub
jl
mov
sbb
push
dec
push
imul
lds
stc
pop
imul
insb
int
test
push
xchg
mov
lock
jb
sub
icebp
jge
stos
jge
pushf
mov
pop
arpl
in
outsl
push
fcmove
sti
mov
sti
jae
push
dec
cmp
in
mov
cmp
mulb
xchg
pop
inc
push
sbb
je
movsb
int3
in
pop
fdivp
jp
je
mov
push
mov
pop
push
mov
pop
gs
repz
in
aas
inc
add
cmc
clc
aas
fcoml
mov
andb
fstp
sub
jbe
and
aad
dec
xchg
jne
mov
sbb
mov
fucomp
pop
fcomip
mov
mov
insb
xchg
fmul
enter
iret
mov
scas
mov
outsb
pushf
test
aam
js
cmpsl
pop
test
mov
dec
xchg
or
cmp
sub
sbb
jmp
inc
fldenvs
addr16
pop
lret
cmp
sbb
aas
cld
lcall
sbb
outsl
scas
movsb
ret
imul
in
push
adc
shll
jbe
jp
int3
or
jno
sub
aas
xchg
push
ljmp
xchg
lahf
xchg
sbb
xchg
or
icebp
dec
dec
sub
mov
mov
scas
xchg
inc
jmp
mov
addl
cmp
lock
shlb
inc
cltd
and
or
push
and
inc
lcall
xor
in
pop
cwtl
cmp
movl
add
in
lds
sub
xchg
sub
mov
cwtl
addb
dec
add
popa
rorl
addr16
sub
daa
push
pop
jno
in
call
jge
pop
mov
adc
add
jnp
push
mov
inc
mov
pusha
loopne
cwtl
inc
aaa
xchg
pop
sub
arpl
push
cmp
mov
cld
pop
pop
xor
test
jge
mov
jbe
dec
push
mov
loopne
jmp
aas
popa
or
daa
xor
test
or
and
mov
push
testl
mov
lret
cmc
sbb
lea
push
dec
mov
xchg
cmp
out
sti
sbb
add
xchg
fnsave
cs
test
cmp
cmp
test
add
and
out
xchg
mov
add
push
imul
jnp
add
inc
cmp
out
mov
pop
divl
push
pop
les
outsb
out
pusha
mov
mov
test
adc
inc
xchg
pop
xorb
push
enter
cmc
jb
cmc
jmp
loopne
out
push
add
nop
loop
repz
mov
ret
enter
test
xchg
mov
mov
ret
mov
xchg
popa
xor
add
mov
xchg
enter
gs
jno
jb
push
xchg
cmp
popl
mov
sarb
lret
mov
shlb
call
adc
pop
mov
pop
mov
mov
mov
fidivl
add
mov
sarl
lahf
jno
int3
lods
inc
adc
mov
jns
sbb
mov
adc
and
enter
and
push
lahf
or
cltd
dec
push
xchg
iret
mov
sbb
jmp
cld
insl
idivb
clc
fildll
imulb
xor
outsl
jae
cmp
jecxz
sbb
icebp
sbb
push
fdivrs
mov
je
inc
jae
or
jb
lods
cmp
mov
push
sub
jp
mov
out
hlt
mov
sbb
mov
pop
adc
imul
das
xchg
mov
jecxz
jecxz
mov
jnp
mov
cmc
icebp
push
jle
xorl
pop
data16
push
inc
lcall
or
mov
fldl
rcll
lahf
lea
mov
xor
rcrb
sbb
mov
adc
clc
push
xchg
mov
jnp
add
inc
pop
sub
scas
sbb
and
inc
ss
xchg
popa
int
jl
aaa
jg
es
add
inc
stos
push
jl
or
xchg
mov
lea
mov
push
pop
push
xor
inc
ja
pop
xchg
stos
mov
ljmp
rorl
lods
mov
hlt
dec
mov
and
sub
xor
roll
jno
lret
or
arpl
jge
sbb
daa
push
pop
jno
in
call
jp
rcr
into
sarl
clc
cmp
cmp
mov
lds
jnp
jns
jae
and
std
mov
or
leave
push
cmp
dec
inc
popa
cs
in
mov
mov
sti
int3
mov
mov
cmpsl
jl
loope
test
dec
dec
add
inc
andb
and
push
fsts
nop
es
mov
sub
add
lea
imul
stos
or
push
cld
mov
outsb
fnstenv
jecxz
ja
inc
add
adc
sahf
scas
ljmp
push
in
xor
loop
dec
ret
mov
testl
or
inc
inc
dec
add
sahf
scas
jno
lds
mov
or
push
aam
jl
aad
dec
push
outsl
hlt
test
dec
bound
cmp
mov
jae
lds
sar
jb
out
in
mov
ss
lcall
out
push
insl
or
insb
xchg
dec
xor
js
dec
roll
das
in
pop
push
test
xor
adc
lea
das
imul
repnz
loop
into
repz
outsl
mov
ja
mov
into
aaa
mov
mov
fsts
xor
rolb
insb
sub
pop
jae
movsl
lahf
aas
mov
jne
cmp
pop
dec
mov
adc
sbb
out
mov
sub
icebp
into
dec
add
mov
cwtl
mov
mov
adc
test
mov
push
or
leave
nop
mov
xor
and
mov
push
jb
sarl
pop
pop
call
jp
repnz
inc
jnp
mov
mov
repz
es
gs
pop
dec
popa
add
ss
insb
gs
add
and
jns
pop
outsl
std
or
lret
cmp
xchg
fs
enter
jb
shlb
sbb
fldl
inc
lods
jg
gs
sbb
jge
mov
lea
lods
ret
std
jp
icebp
je
push
jp
push
push
or
add
inc
cmp
adc
pop
data16
jp
js
ds
sbb
clc
sbb
push
jbe
mov
xor
movsb
sub
xchg
fnstenv
adc
test
adc
lock
mov
mov
push
pop
daa
mov
mov
xchg
scas
inc
xor
lret
xor
testb
dec
cmp
cld
mov
aas
push
lcall
mov
test
movsl
loope
dec
stos
add
and
loopne
rolb
lahf
sbb
inc
dec
imul
mov
mov
sub
dec
roll
lods
shll
addl
lods
push
push
aas
in
lods
in
push
sahf
or
sbb
push
mov
xchg
daa
adc
outsl
ret
sbb
pop
jae
pushf
or
inc
or
frstor
ds
rolb
xor
xor
or
out
mov
or
or
imul
mov
sahf
lea
scas
or
xchg
dec
jmp
push
mov
pop
mov
mov
rcr
mov
jecxz
pop
push
or
and
or
cld
ss
stos
adc
in
dec
xlat
jmp
outsl
pop
jb
push
popf
pop
dec
imul
xor
push
or
enter
es
sbb
xlat
cmpsl
stos
and
jnp
inc
push
movsb
cwtl
or
idiv
mov
pop
cmpsl
daa
andb
dec
popa
ss
add
shrl
cmp
sbb
fadd
in
cmp
cltd
lret
insb
jmp
lods
out
lret
mov
dec
ret
icebp
insb
dec
sbbb
mov
mov
sbb
lock
add
das
jae
and
arpl
xchg
rorb
or
lret
ficompl
xchg
scas
popf
adc
and
dec
sbb
and
ljmp
out
xor
and
scas
je
adc
adc
sbb
xorb
addl
popf
add
lock
add
fwait
outsb
dec
cmp
sbb
shrl
test
mov
xor
stc
cmp
data16
cli
iret
push
pop
cli
fsubs
push
pop
cmp
roll
jbe
xor
add
adc
addr16
mov
jg
fdivs
cmpsb
loope
and
jo
out
inc
ret
je
push
cmpsl
xor
stc
cmp
jbe
mov
xchg
push
repz
cmc
flds
test
push
dec
mov
push
push
movsb
push
sub
faddl
dec
push
std
jmp
and
movsb
pop
or
or
add
and
pushf
neg
std
xlat
push
xchg
or
test
cmp
fidivrl
dec
inc
sbb
fidivrl
jle
int
pop
pop
jno
shll
pop
aam
jno
mov
aas
mov
dec
mov
outsb
sub
lret
out
pop
icebp
cwtl
pop
add
jnp
xchg
out
rcrb
and
aam
ljmp
mov
cwtl
xchg
dec
dec
cmpsl
inc
mov
aad
data16
repz
hlt
arpl
xor
cmp
mov
cld
test
xlat
jecxz
xchg
inc
idiv
mov
sub
add
sahf
gs
repnz
pop
scas
js
mov
orl
inc
dec
xchg
test
jbe
mov
pop
les
adc
repnz
popf
or
inc
mov
jns
jae
cli
and
inc
shr
cli
fistps
cmpb
movsb
adc
lods
pop
push
jbe
addb
out
jne
stc
hlt
sbbl
add
add
cmp
cmpsl
call
ss
mov
stos
add
mov
mov
pop
int
add
inc
jg
inc
rclb
jmp
into
or
mov
ja
les
mov
sti
stos
pushf
pop
push
mov
out
std
cmp
add
jb
pop
out
and
test
gs
lcall
int
cmpsl
cli
pop
out
jns
pop
push
sti
jb
jae
sub
cwtl
dec
rclb
mov
mov
out
jno
and
gs
pop
cmpsb
cmp
les
js
imul
mov
push
jo
je
mov
push
sub
xor
cld
clc
into
jb
cmc
mov
jns
mov
pop
dec
push
nop
cmp
cmp
mov
lcall
or
xchg
push
cmpb
hlt
push
jb
xor
mov
inc
rorl
mov
adc
pop
mov
je
cld
xor
sti
clc
pop
leave
mov
mov
daa
mov
adc
out
test
push
xlat
daa
out
shll
mov
call
push
stos
fwait
or
fsubrl
idiv
fidivrs
in
fs
push
add
add
js
adc
imul
sub
inc
sub
mov
push
je
ljmp
test
aad
imul
adc
mov
pop
bound
jae
mov
sbb
or
adc
mov
imul
cmp
fwait
ss
ljmp
push
clc
call
add
iret
int
not
cmpsl
adc
mov
imul
dec
jp
imul
sahf
rclb
ficoml
inc
jp
or
aad
cli
add
je
orl
jbe
lret
imul
test
shlb
mov
cmp
sub
loope
shl
xor
inc
pop
mov
movsb
imul
cmp
mov
je
lds
cmpsl
int3
inc
das
fistps
fdivrs
fmuls
push
jge
popf
call
mov
or
fsubs
add
aam
das
cmp
outsl
lods
ds
and
int3
cmp
popa
xchg
cmp
cli
mov
loop
and
mov
or
and
test
push
inc
loopne
push
inc
or
pusha
and
inc
pushf
and
push
push
push
mov
arpl
add
inc
dec
inc
add
jne
das
inc
mov
enter
sub
fs
jno
push
mov
xchg
sub
mov
xor
je
sub
es
add
repz
adc
xor
js
xchg
cmp
aad
mov
cmpsl
out
ljmp
adc
sbb
inc
mov
adc
std
sbb
insl
mov
aad
inc
add
and
adc
cmp
subb
adc
mov
push
inc
jg
pop
jg
xor
or
or
fs
pop
mov
jns
lock
fnstenv
mov
push
cmp
mov
mov
mov
aas
inc
or
sub
pusha
jo
adc
aaa
call
mov
cs
cld
dec
xchg
sub
fs
dec
sbb
add
repz
popf
cmp
shlb
mov
cmp
je
push
je
fbstp
jp
inc
xor
xchg
mov
push
stos
test
dec
inc
mov
mov
fsts
xchg
xor
mov
xor
push
sub
or
mov
aam
stos
jmp
push
loop
sub
pop
sbb
ret
in
das
loope
dec
dec
mov
rcrl
mov
movsb
scas
ss
mov
mov
scas
and
sbb
and
mov
fmuls
sbb
inc
push
inc
xor
xor
repz
pop
cmp
mov
std
inc
sbb
ljmp
jl
dec
lds
and
sbb
or
pand
inc
xchg
mov
and
push
ret
sub
cmpsb
adc
push
fwait
mov
xor
or
add
cmc
xor
scas
aad
xchg
popf
xor
mov
ljmpw
shlb
lods
fcompl
mov
jb
mov
out
xchg
adc
sub
pop
push
les
sbb
mov
adc
adc
into
lock
roll
adc
inc
inc
fwait
xor
enter
jg
jae
push
arpl
mov
mov
aad
insl
inc
and
cs
out
in
sbb
xor
in
mov
xchg
pop
lret
cmpsl
addr16
add
push
repz
sti
jnp
in
fidivrs
int3
and
repnz
push
and
aaa
add
mov
pusha
lods
cmp
push
or
push
xor
cwtl
imul
xor
xchg
add
cld
fdivr
fcom
jae
xorl
mov
mov
or
xor
scas
icebp
mov
push
outsb
sub
jns
hlt
call
mov
or
scas
cltd
or
cmpsb
mov
jl
outsb
test
movsb
mov
jne
enter
out
fcmovbe
mov
pop
inc
xchg
movsb
stc
ljmp
cmpsb
loope
cmp
popa
test
jo
jecxz
xlat
in
lahf
repnz
adc
mov
add
mov
mov
cltd
movsb
in
cmp
mov
andl
cmp
xlat
outsb
jne
adc
inc
mov
or
add
pop
or
mov
sarl
jae
repz
pop
mov
mov
fsub
mov
dec
bound
mov
pop
xlat
push
lds
push
cmp
fs
pop
hlt
loop
fdiv
adc
aas
add
inc
imul
inc
mov
inc
in
push
mov
jns
mov
loopne
sub
inc
xchg
jno
mov
jne
cmp
js
cltd
enter
xchg
xor
mov
loop
leave
pop
xor
xorb
dec
arpl
lahf
fstpt
push
ret
mov
xchg
push
mov
add
insb
out
jo
and
pop
popa
and
leave
add
aam
imul
imul
in
adc
xchg
jne
popa
mov
xor
data16
mov
outsl
sbb
aas
nop
data16
dec
cs
and
mov
popf
je
jae
jecxz
push
repnz
test
sub
dec
rolb
sbb
je
jae
cmpl
inc
mov
call
test
pusha
push
into
lds
test
imul
mov
lods
add
inc
jle
sahf
roll
pushf
fidivl
loop
aaa
cmp
arpl
add
jmp
push
dec
pop
sti
mov
and
sbb
pop
sub
mov
rol
nop
mov
sub
mov
in
sbb
inc
lahf
push
mov
push
xchg
outsl
add
add
aas
jge
sbb
cmpsb
adcl
xchg
jbe
mov
mov
cld
mov
jecxz
adc
push
cmp
jae
cmc
jns
out
mov
mov
lcall
aad
das
sub
adc
add
xchg
mov
test
cmp
pop
fnsave
pop
out
test
insl
imul
or
mov
int3
add
lret
adc
xor
pop
daa
fnstsw
mov
in
mov
push
out
or
sub
or
cmpsl
adc
repz
and
movsb
pop
push
xor
jmp
sahf
mov
mov
inc
add
std
ret
js
in
or
mov
lahf
inc
movsl
adc
cmp
incl
dec
test
xchg
or
pop
mov
jno
in
test
mov
mov
shl
mov
stos
sbb
test
and
cli
mov
nop
loopne
xor
mov
dec
jg
int3
jb
pusha
lea
and
popa
and
lcall
das
sarl
or
jne
or
xchg
lcall
inc
shll
out
lcall
pop
mov
shlb
jge
lock
or
mov
jne
and
es
jp
sbbl
out
ret
lcall
out
in
cltd
in
idivl
jle
push
mov
ficoml
dec
jb
out
mov
cmp
dec
pop
cmc
and
fcmovnu
test
cmc
xchg
jge
inc
inc
mov
cld
adc
lods
add
mov
push
mov
sar
and
adc
out
mov
into
bound
adc
inc
rol
pop
stc
cmp
mov
mov
xor
sahf
mov
pushf
xchg
adc
out
daa
mov
xor
inc
into
mov
mov
jne
sahf
push
scas
jne
mov
xchg
pop
adcl
out
fcmovnu
add
out
and
sub
in
hlt
mov
jecxz
pop
xchg
jnp
lock
ret
into
arpl
inc
push
adc
mov
and
cmp
cmp
and
pop
xchg
scas
sbb
dec
bound
into
loopne
mov
mov
test
repnz
cmp
jge
mov
out
pop
dec
dec
and
imul
add
jecxz
push
out
out
cld
loopne
cmpsb
jmp
jmp
cmp
scas
mov
ret
pusha
push
fidivl
sub
nop
xor
sbb
sub
inc
in
ret
xchg
out
arpl
repz
dec
pop
xchg
xorb
popa
mov
lds
adc
pusha
adc
popa
jno
int3
notl
mov
or
leave
enter
test
fadds
adc
insb
jp
and
xchg
mov
fidivs
xor
iret
cmc
cli
inc
xchg
mov
or
cmp
adc
dec
addr16
aas
sub
mov
test
sub
mov
jle
lret
jae
stos
adc
xchg
xchg
ljmp
pop
lock
cmp
pop
push
adc
push
repnz
push
scas
lds
popf
add
xchg
imul
cmc
cmp
lods
aas
mov
data16
mov
je
mov
pop
mulb
sahf
dec
and
movsl
pop
mov
enter
add
sbb
dec
std
and
jl
push
call
xor
sti
push
fsubs
imul
es
xchg
in
and
jg
mov
dec
arpl
push
fidivl
sub
pop
mov
xorb
insb
stc
mov
inc
push
je
movsl
push
xchg
add
adc
imul
shlb
cmp
mov
dec
lret
jmp
push
jl
std
je
rorb
fwait
mov
xchg
add
testl
fs
ror
xlat
rol
pop
pop
dec
xlat
test
sbb
pop
sub
push
scas
jl
cwtl
mov
xor
fnsave
pop
out
jo
xchg
cwtl
mov
ljmp
aaa
xchg
mov
daa
scas
test
ret
clc
insl
or
sub
popa
push
xchg
fisttpll
pop
aam
mov
hlt
sbb
pop
fnstcw
in
outsb
subl
mov
pop
imul
mov
pop
jle
xchg
fwait
ja
scas
mov
push
mov
ret
jb
lahf
gs
dec
add
push
loopne
xchg
pop
and
fidivs
in
enter
lret
testl
or
daa
cmp
gs
mov
cmc
rcll
xor
or
fists
incl
popa
jae
call
enter
pop
xchg
repz
mov
outsb
stc
arpl
mov
pop
mov
repnz
sbb
pop
cmp
in
xchg
xchg
call
inc
cmp
bound
push
frstor
ds
addl
xchg
nop
xor
je
inc
out
xchg
xchg
sub
push
pop
jg
inc
lret
shll
jg
jmp
push
xor
adc
xor
dec
jp
ds
xchg
aas
mov
sbb
loopne
mov
dec
jle
and
fbld
sahf
pop
pop
dec
fwait
in
pushf
nop
mov
clc
mov
jp
ds
call
movsb
adc
cmp
add
les
scas
or
pop
out
mov
add
xchg
out
sub
mov
xorb
add
test
jns
push
push
in
outsl
mov
cmp
js
lods
fldl
mov
into
inc
lret
es
repz
sub
dec
mov
inc
shl
adc
out
out
push
add
sub
pusha
loopne
sbb
sbb
mov
out
mov
push
push
loope
lds
shll
cs
add
fisttps
clc
loop
push
ftst
loope
or
jle
lods
and
cmp
pop
out
pop
and
movaps
or
jne
std
ret
add
xor
gs
cmp
int3
sub
jp
imul
pushaw
pop
out
sub
lods
mov
in
xor
jbe
jno
cmp
push
inc
sub
dec
mov
bound
xor
cmp
inc
cltd
sarl
mov
and
stos
call
xor
cli
mov
xor
mov
ja
das
adc
pop
popl
mov
mov
aas
imul
mov
dec
aaa
sti
outsb
xor
pusha
loop
fnstcw
sbb
xchg
mov
mov
sub
call
mov
subl
cs
rolb
fldl
or
and
mov
jg
popf
lcall
rcrl
test
test
jne
data16
or
daa
int
cmpsl
mov
sbb
xor
and
in
push
repnz
push
or
lret
add
ficomps
xlat
into
in
xchg
push
fildl
xchg
sub
imul
cld
cs
and
outsb
mov
and
push
pop
lret
adc
sbb
sbb
pop
mov
mov
ss
cltd
out
fwait
xlat
cmpsb
dec
mov
movsb
gs
andl
jp
and
lods
mov
clc
clc
in
jle
test
fcoml
into
dec
imul
jo
popa
es
imul
mov
jbe
sbb
adc
sbb
jg
mov
fsubrs
mov
sub
inc
or
jne
push
inc
jbe
pusha
lret
sbb
jbe
push
sbb
imul
xchg
adc
mov
je
loop
movsl
pop
xor
push
dec
mov
cld
lea
sbb
jle
movsb
jl
pop
inc
je
lea
insl
xchg
pusha
test
lret
and
add
int
cmp
hlt
xor
mov
scas
popf
mov
jne
and
dec
mov
subl
inc
or
ficomps
and
out
add
add
push
stos
fcmovnbe
sub
xchg
jecxz
out
les
notb
dec
popf
sbb
into
test
pusha
jb
cltd
imul
fdivl
pop
xchg
stc
shrl
push
pop
dec
cmc
add
cltd
push
hlt
fbld
out
lds
jge
repnz
repnz
jb
scas
xor
mov
or
add
xchg
fnstcw
mov
je
mov
mov
arpl
shrl
adc
xlat
adc
daa
push
popf
push
iret
pop
sub
xchg
insl
shl
xchg
cmp
dec
stos
push
sub
add
or
push
jae
mov
enter
ljmp
aas
cli
outsl
dec
mov
jmp
mov
popf
xchg
sub
out
ljmp
aas
dec
pop
rcrb
jl
insl
jl
mov
scas
ret
mull
lcall
out
cltd
push
outsb
sub
dec
cmpb
mov
pop
shl
mov
push
and
or
das
push
add
lea
or
mov
aam
fidivrs
dec
mov
mov
cmp
dec
xlat
inc
jb
lahf
inc
xchg
ficoms
imul
pushf
mov
movsl
bnd
jno
ds
popa
lahf
sbb
stc
xchg
jecxz
je
push
jo
sub
mov
ljmp
mov
push
fcompl
add
mov
ret
je
data16
dec
adc
push
xor
sub
mov
xor
daa
shll
xchg
daa
add
jmp
or
mov
fst
mov
fwait
gs
xlat
lods
fnstsw
mov
hlt
test
sub
sub
sahf
pop
push
gs
mov
pop
xor
loop
sarb
cmp
cmp
mov
mov
mov
xchg
repz
lret
push
xchg
xchg
lock
push
stos
shrb
daa
adc
pop
add
lret
adc
jo
data16
cmp
dec
ret
pop
out
inc
push
hlt
lea
cld
inc
nop
pushf
inc
add
in
push
fwait
jo
das
pop
pop
cld
xchg
cld
mov
add
sub
rclb
sub
xor
enter
movsb
push
cli
pop
mov
rcl
into
lods
jg
lods
mov
lods
cli
imul
loope
and
lret
repnz
add
in
sub
dec
inc
adc
ficompl
push
xchg
mov
icebp
ja
mov
fmul
xchg
dec
adc
add
test
dec
mov
push
cs
mov
push
mov
mov
int
out
ret
xlat
or
outsb
sbb
jno
mov
mov
cmp
fwait
pusha
and
push
mov
cld
mov
mov
inc
daa
insb
bnd
pusha
imul
cld
sub
ja
bound
push
mov
push
cld
fistpl
push
cltd
jle
loop
add
outsl
pop
loope
repz
pop
add
int3
jo
enter
fwait
mov
rorb
hlt
adc
pushf
pushf
cli
scas
jle
das
push
sbbl
out
inc
ret
je
add
stc
push
mov
movsl
xor
jnp
cwtl
jg
sub
ss
dec
mov
mov
jp
loope
popf
out
sub
popf
adc
mov
xor
mov
ss
loope
pusha
xchg
lock
jmp
and
adc
mov
cmpsl
int
dec
lods
ret
lds
mov
ja
jb
push
daa
jne
xor
jle
in
movlps
flds
ljmp
sub
stc
push
call
mov
add
scas
xchg
inc
jg
pop
test
jb
add
mov
ljmp
mov
int
mov
movsl
pop
je
je
ret
pusha
out
dec
imul
mov
mov
push
add
mov
mov
lcall
shrb
shr
adc
pop
push
fwait
sbb
or
sbb
jnp
dec
pop
hlt
iret
sbb
ret
adc
xchg
xchg
test
jno
inc
jbe
mov
or
dec
or
xchg
or
ja
pop
adc
lea
push
in
outsl
shlb
hlt
xchg
sbb
movsl
xor
imul
mov
cmp
push
pop
sbb
les
cli
out
or
mov
or
xchg
fsubrp
les
or
rcll
mov
outsl
daa
or
jbe
inc
dec
jle
scas
aam
pop
test
add
fildll
lods
sahf
mov
xlat
lret
sbb
loope
ds
inc
jp
popf
fs
mov
push
movsl
jp
push
loopne
mov
lea
ror
icebp
push
mov
pop
dec
sub
clc
xor
xchg
je
jbe
jg
push
and
popa
jmp
ljmp
jne
pop
inc
adc
adc
lahf
loope
mov
rorl
fs
dec
dec
adc
lret
add
jbe
push
fmuls
rcrb
jp
pop
dec
test
inc
push
add
adc
dec
push
and
and
in
jo
jg
push
and
pop
stc
inc
xor
lods
in
mov
mov
ret
daa
jno
push
jl
icebp
sub
fnsave
mov
push
dec
sbb
add
enter
cmpsb
fld
push
neg
mov
cmpsb
sbb
das
test
shlb
xchg
jp
mov
pusha
mov
jp
cld
adc
loope
test
pop
inc
inc
fcompl
mov
mov
ret
loope
mov
fmuls
call
aaa
push
divl
dec
test
push
int
mov
jg
ja
inc
hlt
imul
sahf
adc
aam
dec
std
xor
pop
adc
ret
mov
loope
dec
sarb
adc
clc
and
sbb
icebp
stos
push
int3
inc
shrb
xor
xlat
mov
mov
mov
or
or
xor
mov
cmc
ss
pop
sbb
daa
mov
neg
pop
ja
je
shlb
pop
testl
cmp
pop
dec
xor
enter
mov
ljmp
sbb
sbb
add
rcll
sub
dec
call
and
test
das
xor
int3
std
push
sbb
mov
repz
dec
in
sti
mov
dec
mov
mov
inc
and
xchg
test
push
and
mov
std
aas
loopne
lock
inc
xor
cmp
mov
aaa
iret
push
mov
or
and
adc
push
pop
lods
lds
data16
add
in
cs
and
fbld
arpl
xchg
xor
push
sti
pop
sbb
call
add
adc
adc
xor
cmpsl
cmpsl
pop
lock
stos
and
je
pop
subl
xchg
add
insb
and
lea
mov
sub
adc
push
popa
jns
pusha
andb
aas
pop
mov
xor
jbe
loop
cld
pop
or
dec
popf
insl
test
pop
fisubs
xchg
data16
mov
mov
push
jnp
jp
adcl
lret
add
pop
hlt
sub
push
mov
clc
sub
cmp
cltd
daa
mov
ret
and
or
xor
cmpsb
or
in
fnstsw
les
das
mov
jl
scas
stc
pop
lea
jo
add
sti
out
push
fidivrl
iret
sbb
into
cltd
or
cld
jecxz
xor
pop
repnz
or
test
cld
or
mov
add
imul
fstl
jae
xchg
in
cmp
imul
lock
sti
lcall
in
fnsave
cld
bnd
pop
dec
lds
repnz
daa
testl
push
aaa
loop
pop
pop
dec
aam
mov
fisubrs
inc
orl
inc
cmp
cmp
and
dec
jns
cwtl
imul
and
scas
add
pop
xchg
bound
pop
xchg
jnp
cmp
out
insb
cld
jbe
lock
sub
ds
push
subb
adc
test
movsb
cltd
xor
in
sbb
ss
or
lods
ljmp
mov
xor
cmp
pop
out
in
push
jmp
sti
push
push
out
dec
stos
xchg
fists
test
popa
xor
xchg
cs
mov
sub
sub
jp
push
mov
cmp
add
mov
arpl
faddl
mov
icebp
fldenv
int3
idiv
push
inc
dec
or
adc
loope
inc
dec
iretw
lds
ljmp
iret
shrl
mov
ja
lret
push
stos
mov
pop
sub
add
arpl
xchg
sub
repnz
int
xchg
roll
repnz
mov
ret
repz
inc
jp
cmp
xor
iret
pop
jae
call
arpl
lods
push
fdivl
mov
loopne
lods
and
adcb
sbb
sub
iret
gs
ss
mov
in
hlt
or
push
or
cmp
sub
mov
push
jl
push
push
xchg
in
stos
push
bound
lret
out
mov
or
mov
and
pusha
inc
xor
add
outsl
xor
xlat
mov
adc
shr
clc
xor
lret
outsb
in
shrl
or
lahf
scas
aam
cmpl
adc
add
push
pop
inc
lods
and
push
inc
into
pop
mov
dec
adcb
fisttpll
push
andl
xchg
and
sahf
push
adc
add
dec
mull
xchg
ljmp
xchg
fiaddl
add
and
arpl
pusha
adc
cmp
cmc
call
out
cmp
dec
lock
imul
cmp
in
in
jmp
sbb
xchg
sbb
add
cli
shl
repz
lcall
dec
hlt
mov
and
mov
jmp
xchg
std
push
and
inc
lcall
push
or
std
in
cli
clc
mov
bound
call
loop
add
scas
mov
xchg
fmul
iret
add
adcl
mov
adc
shll
add
adc
adc
jo
in
dec
lret
jae
je
fs
cld
jne
inc
cltd
movsl
ds
push
inc
enter
jnp
je
xchg
mov
lcall
add
xchg
std
leave
cwtl
jl
lds
xchg
mov
or
jns
push
fldt
jno
mov
js
sbbb
dec
pop
rcr
inc
outsb
fwait
mov
pop
leave
mov
add
and
sbb
mov
rclb
add
jle
xchg
xor
ficoms
jmp
sub
cli
and
aaa
dec
je
cmp
data16
bound
jb
add
mov
je
addr16
pusha
cmpsl
lret
scas
mov
loopne
push
or
and
mov
negl
add
sub
inc
shl
sub
aaa
int
loopne
inc
adcb
and
inc
cld
in
insb
fidivrl
aaa
int3
dec
mov
jl
popa
mov
jecxz
or
aas
inc
push
popf
lret
push
lock
mov
push
sbb
mov
and
jecxz
adc
xor
test
jmp
xchg
mov
test
nop
cmp
pop
push
std
inc
mov
fwait
lods
push
jge,pt
and
mov
inc
pop
movsl
jo
mov
enter
xor
push
cmp
int
aas
mov
mov
js
andl
sub
movsl
xchg
hlt
jecxz
jge
loopne
xchg
mov
ds
pusha
nop
dec
xchg
jns
jg
sub
sbb
daa
int
push
add
cmpb
push
xchg
xor
pop
jge
and
mov
adc
fidivrl
adc
lcall
imul
scas
mov
add
dec
sbb
fimull
jge
sbb
nop
push
push
mov
jbe
add
test
add
hlt
sbb
jp
insl
outsb
je
out
add
mov
add
int
lock
sub
add
pop
fldt
fiaddl
ljmp
popa
push
sub
aas
sti
gs
out
cmpsb
pop
pop
push
mov
lods
ror
cmp
int3
push
stos
es
pop
sub
js
icebp
push
cli
sub
js
into
jbe
aad
mov
lods
push
and
jae
minps
sbb
and
ljmp
add
fnsave
andb
xor
adc
add
mov
inc
pop
es
daa
sbb
mov
aad
cmc
push
int
mov
push
stos
mov
cli
sar
fdivrs
xchg
or
and
and
cmc
jo
ror
inc
scas
mov
cmp
or
aaa
js
scas
movsb
cli
ret
es
out
mov
and
rorb
dec
inc
movl
adc
or
lods
dec
arpl
mov
sbb
cmp
cs
testb
dec
imul
sbb
clc
mov
out
iret
cmpsb
sar
push
mov
push
mov
cmpsl
int3
push
dec
or
mov
adc
ret
xchg
xchg
jb
sti
xor
dec
xor
lods
mov
call
xor
sti
push
fsubs
cld
push
xchg
mov
fdivs
pop
sub
es
cmpsb
mov
rcll
push
inc
pop
pop
imul
mov
xor
or
pop
mov
pop
jns
jg
in
push
pshufw
xlat
sub
sub
jle
sbb
mov
lret
repz
popa
adc
mov
dec
sub
cmp
sbb
movsl
mov
sbbl
out
xor
jnp
jecxz
dec
out
jg
ljmp
fwait
adc
push
cli
scas
data16
std
daa
xchg
lahf
mov
ja
cwtl
subb
pop
adc
fdiv
cmpb
inc
in
push
pop
fmuls
lret
mov
pop
mov
shlb
push
cmc
cli
cwtl
push
stos
dec
mov
lahf
mov
cwtl
dec
lock
rolb
aas
xor
addr16
mov
mov
dec
rolb
xor
fdivr
fdivp
lret
leave
mov
lret
xor
lret
popf
ret
fcoms
fcoms
inc
push
sbb
and
cli
sub
or
pop
dec
repz
cmp
or
out
into
push
jae
divb
cmc
or
iret
std
cmp
call
mov
xchg
icebp
jle
addr16
cld
gs
cs
addr16
nop
ja
orl
mov
adc
jmp
jae
daa
inc
push
and
or
xchg
mov
adc
mov
test
pop
mov
jb
ja
sbb
shlb
ljmp
int3
into
stos
push
negl
imul
fsubrs
cmc
int3
inc
mov
or
cltd
int3
cmc
ss
add
inc
cmc
int3
hlt
pop
sbb
or
inc
pushf
hlt
enter
add
xlat
push
lock
fcomip
add
daa
nop
mov
test
daa
ljmp
lods
jl
mov
and
inc
dec
jns
out
pusha
mov
mov
sbb
movsb
mov
jl
xchg
xchg
push
mov
nop
push
jnp
adcl
adc
or
pop
and
pop
icebp
ja,pt
ss
mov
add
xor
cmpsl
test
push
cmpsl
stos
push
neg
pop
add
popf
jnp
pop
pop
mov
inc
cmpsl
jb
cld
cmpsb
xorb
xchg
sbb
mov
notl
pop
push
xor
pop
mov
push
xor
in
xor
jmp
mov
xchg
shll
push
inc
lds
ljmp
and
mov
cmc
insl
pop
jle
pop
cmp
out
ja
dec
mov
fs
lods
ret
jbe
sbb
dec
push
push
add
imul
adc
inc
or
or
xchg
std
lcall
adc
mov
popf
dec
lock
cli
mov
mov
or
and
mov
push
add
mov
aad
mov
push
and
and
cli
mov
in
js
imul
jl
cmp
inc
pusha
mov
cltd
and
fs
ds
popf
mov
dec
ljmp
sbb
scas
out
xlat
fsubr
add
outsb
or
insb
fadds
push
adc
sbb
push
addr16
inc
lret
loop
lea
xchg
cmpsl
adc
mov
loopne
pop
mov
ret
je
sub
sbb
cli
loop
mov
in
and
mov
pop
aad
push
sbb
xchg
dec
cmp
xchg
ljmp
shll
push
inc
mov
negl
daa
cld
inc
popa
sbb
aam
mov
sbb
test
or
call
int3
dec
in
lds
inc
out
insl
sar
lret
mull
loope
sub
call
push
push
mov
sti
bnd
in
xor
sbb
fadds
lea
pop
mov
ret
iret
push
xor
jle
lea
rcrl
clc
xor
adc
roll
rorl
push
ja
pop
inc
xchg
insl
insb
pop
shll
push
pop
cld
mov
std
xchg
lds
lods
outsl
outsb
dec
rclb
sub
mov
dec
mov
pop
add
push
lds
repz
fildl
test
pop
fs
jnp
clc
cs
lods
xor
lods
pop
popa
jmp
call
xlat
into
icebp
jle
cli
and
insl
jg
sbb
xor
cmp
rcll
xchg
xlat
pop
in
loop
call
cmpsl
cmp
mov
pop
and
cmp
addl
xchg
push
clc
pushf
fwait
and
loopne
mov
push
mov
test
xor
into
movl
loopne
sub
loope
mov
icebp
sub
xor
in
pusha
mov
cmpl
stos
test
mov
mov
call
mov
std
shlb
pop
mov
leave
add
call
lea
out
sub
push
lret
dec
xlat
adc
xchg
inc
push
pop
scas
fisttps
pop
xor
rolb
and
stc
xor
push
insl
lock
lock
std
lea
insb
pop
sbb
mov
roll
test
sbb
aam
mov
stc
cmp
push
mov
add
mov
push
pop
xor
lcall
xchg
dec
add
add
addb
xor
es
sbb
dec
xor
xlat
in
outsb
dec
add
shrb
shlb
test
dec
in
add
push
dec
fmull
jl
mov
fs
popf
arpl
adc
sbb
popa
or
dec
cmp
push
jle
xlat
in
insb
es
je
movsb
and
lea
lods
outsb
sub
divl
test
jb
mov
pop
data16
push
mov
packssdw
pop
push
mov
jp
cmp
xchg
adc
xchg
jne
adc
mov
sub
push
pop
mov
mov
xchg
insl
lahf
gs
cmp
push
mov
cltd
jo
rcrb
adc
xor
pop
repnz
lock
and
repz
lahf
xchg
inc
push
push
push
cltd
in
sub
pop
outsb
andb
lods
fdivl
push
stos
sahf
xor
cld
mov
xor
leave
cwtl
push
faddl
pop
push
mov
xchg
inc
es
and
jge
mov
out
inc
jmp
inc
call
and
into
xchg
fbld
mov
out
cmp
orb
arpl
push
pop
push
adc
ret
sbb
flds
dec
sbb
xchg
jnp
sbb
xor
cmp
mov
mov
shlb
rcrb
and
shlb
push
test
gs
pop
movsb
mov
mov
popf
xor
xchg
push
out
jg
in
dec
mov
fmuls
dec
jge
inc
or
pop
cmp
mov
popf
or
loope
aad
add
ret
mov
cmp
out
sub
pop
xchg
bound
andb
clc
fstps
sbb
inc
es
jecxz
xor
movsb
xchg
shrl
adc
mov
stc
shll
int3
dec
scas
and
pop
inc
sahf
flds
xor
ja
test
fsubs
insl
push
inc
cwtl
mov
mov
lea
mov
mov
mov
cmpl
add
jp
adc
repz
ss
aam
sub
jg
pop
inc
lock
lret
jnp
add
iret
and
insl
jae
dec
repnz
cmp
or
xchg
push
shlb
add
fs
lcall
sbb
jbe
xor
fwait
test
pop
inc
pop
cmpsl
scas
loopne
xor
push
pop
push
cmp
popf
xchg
icebp
les
cltd
push
inc
inc
into
arpl
jae
pop
ja
lods
dec
adc
pop
mov
sub
fcomi
aad
sbb
stos
jno
xchg
push
add
pop
sub
adc
push
fstpt
sahf
je
ljmp
push
hlt
push
loopne
dec
repz
xor
sti
push
fsubs
or
jbe
je
lcallw
cmp
pop
xchg
ja
and
or
dec
adc
push
mov
sbbb
das
imulb
movzwl
xor
cmpsb
jle
push
push
loop
out
xchg
rorb
into
pop
movsb
in
jle
insb
push
dec
mov
mov
test
stos
ljmp
rcrb
mov
std
mov
xlat
mov
mov
test
add
test
cli
loopne
lcall
int
or
test
arpl
push
push
mov
add
rcl
adc
outsb
xor
das
xor
or
mov
daa
icebp
cld
sti
mov
xorb
ss
xor
out
dec
mov
sbb
push
enter
fwait
sahf
pop
movsl
xor
inc
clc
in
pop
insb
sub
mov
push
test
ss
jge
jecxz
or
pop
add
push
xchg
addl
xorl
test
into
insl
add
sbb
sub
icebp
pop
scas
inc
dec
pop
in
lret
rcr
test
jmp
push
fs
cmp
out
bound
jl
or
lock
push
add
push
lcall
stos
or
mov
gs
pop
popa
add
push
mov
mov
jnp
cmc
dec
pop
sbb
out
mov
xchg
ljmp
mov
push
inc
and
out
movsb
push
icebp
sub
inc
leave
adc
sbb
sub
out
sti
mov
call
ds
adc
push
clc
int3
out
push
mov
mov
loopne
cmc
mov
cmp
and
and
lcall
out
cs
cmp
loopne
and
je
mov
mov
incl
into
loop
inc
mov
jo
leave
jo
cmp
xchg
daa
outsb
lcall
push
shlb
push
daa
pop
push
loopne
cli
fldl
add
or
insl
scas
repnz
jmp
shl
lock
ja
out
adc
mov
outsb
repnz
stos
out
add
mov
sub
mov
inc
call
insl
xchg
lret
push
call
out
push
push
and
cmp
sub
pop
mov
popa
xor
add
loopne
arpl
adcl
das
enter
mov
pop
jg
dec
call
cmpb
mov
pop
aas
popa
xchg
cmp
and
push
int
mov
or
mov
movsl
jae
jmp
popa
cli
lea
pop
ja
scas
aad
aad
daa
in
outsl
test
mov
into
je
or
les
int3
dec
xor
mov
ds
cwtl
loope
cltd
push
js
ret
sahf
sub
not
insl
or
scas
in
adc
mov
movb
movsb
lds
in
pushl
mov
add
or
std
xchg
bnd
into
mov
inc
ret
cmpsl
cmp
stos
pop
sub
das
lea
and
test
or
sub
dec
js
rolb
push
lea
mov
loop
imul
aas
inc
xor
imul
mov
pop
push
aam
lods
lahf
pop
adc
lcall
push
rcrl
test
fcompp
push
incl
dec
out
adc
jb
push
push
es
xchg
jg
in
stc
idivb
imul
cwtl
stc
test
gs
aas
mov
jecxz
jl
movsl
stos
and
inc
shlb
pop
add
cmc
mov
cmpsl
cmp
mov
sbb
xchg
imul
mov
push
icebp
or
aad
or
outsl
sbb
sarl
jae
dec
mov
aas
add
xchg
aaa
nop
into
push
es
inc
in
in
xchg
out
outsl
pop
mov
adcl
push
stos
add
xchg
add
add
push
iret
repnz
pop
adcl
sub
scas
bound
in
js
in
nop
iret
jbe
push
roll
loopne
imul
sub
daa
sub
leave
inc
inc
or
xor
test
jne
and
sar
xor
out
jl
imul
cwtl
push
int3
jb
stos
bndstx
fimuls
fcmovnb
jle
outsl
lret
insl
cmp
clc
sbb
mov
push
hlt
sbb
dec
leave
push
sbb
pop
or
jmp
dec
outsl
test
push
cwtl
xor
or
xor
shrb
push
insl
dec
notl
clc
mov
and
call
test
sub
and
js
mov
mov
lret
xchg
and
push
jns
xor
movsl
movsb
jmp
mov
pushf
cli
leave
sbb
clc
and
test
mov
imul
fidivs
pop
jo
lcall
mov
in
outsl
xchg
les
aas
mov
push
gs
ja
rclb
mov
mov
add
push
or
ret
inc
push
push
lds
mov
xchg
push
jecxz
cmp
push
push
inc
loope
pop
mov
pushf
fistpll
dec
fnstsw
jne
fcompl
fimuls
mov
cmp
sbb
aad
in
mov
lea
loope
sub
or
js
fstl
or
xchg
test
jnp
inc
add
inc
or
aam
jp
pop
xchg
add
or
adc
pop
pop
xchg
aad
pop
rcpps
ja
loopne
mov
into
leave
push
mov
jecxz
adc
sbb
test
pop
push
in
sti
stos
adc
fisubl
stc
jb
ljmp
aaa
xor
in
je
mov
stos
xchg
aad
popa
lcall
jae
xor
cmp
dec
xor
mov
lods
lock
rcrl
pmaddwd
sarb
fimuls
ja
lods
add
add
dec
test
and
lret
jge
test
push
mov
adc
std
or
loope
fcoml
or
sbb
and
lahf
mov
jl
sahf
and
clc
arpl
in
nop
es
rcrl
jne
in
adc
push
xor
sbb
out
and
imul
popa
mov
dec
and
xorb
xchg
mov
in
sbb
inc
sbb
cmp
imul
fmull
mulb
jmp
test
dec
insb
addr16
mov
ss
xor
sbb
inc
lret
mov
ds
addr16
adc
cmpsb
jmp
int3
jmp
add
adc
rcrb
sub
pop
adc
mov
lea
jge
add
lds
arpl
sub
xor
mov
lods
sbb
jo
dec
cmp
repnz
dec
fimuls
stos
sahf
ror
sub
cmpsl
dec
add
jecxz
mov
js
sub
ja
test
add
adcb
fdiv
sbb
mov
cmpsb
insb
cmp
icebp
cmc
sbbl
bnd
mov
push
xchg
icebp
or
pop
xchg
xor
sbb
dec
pop
daa
jle
push
jge
shr
int3
pop
inc
mov
xchg
mov
cli
adc
jb
cli
sti
das
jns
or
mov
orb
mov
pop
std
sti
out
in
jno
iret
sar
push
mov
leave
inc
lcall
hlt
adc
imul
xchg
or
or
and
pop
fists
inc
aad
ficoms
push
not
lods
test
or
push
xchg
lahf
or
cli
insb
in
lret
adc
lahf
add
dec
loopne
and
sub
xor
fcoms
mov
fnstsw
fnstsw
addb
scas
cmp
aaa
pushf
sar
jmp
pop
aaa
pop
shl
mov
xchg
push
dec
jns
push
and
or
push
mov
mov
xor
mov
and
cwtl
lods
sti
incb
dec
or
jmp
xor
shlb
mov
test
xor
outsl
cmp
pop
push
rcl
ljmp
movsb
cli
out
add
adc
imul
jne
jbe
ss
jbe
pop
divb
loope
xor
mov
loopne
sbb
inc
sbb
sub
jae
clc
mov
insl
push
sbbb
xchg
xor
das
inc
mov
mov
test
sbb
or
sub
sbb
fildl
dec
pushf
and
stc
stos
cmovnp
jmp
icebp
pop
or
sub
and
and
testb
sub
sub
loopne
mov
es
js
scas
jle
inc
adc
test
into
jns
lods
xchg
aaa
cmp
lds
stos
shll
jmp
cwtl
hlt
add
shl
aas
inc
sub
xor
ds
push
mov
or
sbb
insb
aaa
or
mov
lds
out
ret
mov
mov
icebp
add
sbb
mov
aaa
add
aam
subb
and
xor
enter
shl
push
push
fcomip
jge
nop
pop
fcomp
lret
pop
lahf
xchg
lret
push
inc
xor
and
stc
sbb
arpl
push
out
sahf
in
movsb
add
push
jb
cmp
test
std
jl
scas
mov
xchg
jbe
mov
inc
or
cmp
mov
int3
xchg
lds
repz
and
ss
and
ljmp
adc
repnz
mov
bound
push
neg
int3
std
lods
inc
jecxz
loopne
out
mov
xor
fisttpl
repnz
cltd
pop
or
pop
mov
daa
fnstsw
std
cmp
mov
test
je
push
mov
jmp
sub
mov
or
mov
xchg
cmc
add
pop
or
lods
mov
adc
dec
imul
sarb
mov
movsl
dec
rcl
icebp
daa
dec
test
push
testb
imul
arpl
sbb
jge
mov
add
mov
xchg
hlt
loopne
lods
fs
fisubl
mov
mov
push
sub
incl
out
mov
out
mov
subl
sahf
pop
pop
adc
ja
and
mov
mov
stos
lods
ljmp
pop
ret
cmp
cmp
jecxz
dec
mov
int3
jae
push
ret
ja
sbb
fnstcw
out
sub
push
shll
test
negb
push
sub
loope
push
icebp
out
add
sub
mov
in
enter
pop
xor
fldl
and
out
sahf
aaa
pop
cmp
jecxz
loop
and
dec
mov
ds
dec
addr16
mov
lret
fiadds
pop
xchg
adc
sub
ljmp
int3
stc
test
mov
sub
push
fstpl
mov
stc
or
jecxz
fiadds
jno
mov
in
pusha
leave
test
aad
lock
popa
dec
jg
xor
push
add
fldt
pop
push
enter
aas
lahf
inc
aaa
ret
mov
hlt
aas
out
and
mov
cltd
insb
stos
shrl
cmp
lds
dec
sbb
hlt
outsl
xchg
xor
out
cltd
pop
cli
rorb
out
jnp
pop
adc
mov
inc
xor
fdivp
push
push
out
jbe
cwtl
pop
sbb
pop
scas
faddl
cmp
sub
mov
push
mov
out
cmp
arpl
mov
mov
mov
psubusw
lods
or
lret
outsl
jp
add
mov
mov
repz
fisubrl
cmp
fcompl
push
fsubs
sbb
lcall
shrl
push
sbbl
mov
sbbb
mov
fstp
les
xchg
popf
loope
mov
jecxz
jmp
or
lds
ja
in
cs
adc
add
test
mov
jno
and
inc
loopne
mov
cwtl
test
hlt
ss
shrl
pop
popa
imul
fwait
rdpmc
shl
repz
jnp
int
ja
mov
xchg
cltd
push
push
dec
popa
ret
add
stos
insl
arpl
xor
in
ret
out
lods
divl
fidivl
outsb
sysenter
xchg
rcrb
aad
mov
in
mov
paddd
dec
hlt
fwait
jnp
jbe
cmc
movsl
int
lretw
mov
outsl
insb
jl
pop
jl
push
fwait
add
das
add
cmpsl
fnstcw
cmpsb
sub
cltd
add
movsl
xor
rcrb
ljmp
testl
xchg
call
in
ljmp
mov
cmp
fistpll
sub
test
mov
mov
clc
lcall
push
xchg
daa
mov
add
int
mov
filds
pop
lret
fstpt
sbb
mov
and
xchg
ljmp
cmpsb
mulb
pop
setle
rcrb
xchg
xor
rorl
repz
mov
sub
add
int
fcmovbe
notb
xor
xchg
aaa
clc
std
ja
sbb
push
mov
pop
notb
cli
lret
cmpsl
test
mov
push
add
add
xchg
jae
mov
cmp
pop
pop
mov
lcall
int3
and
out
push
and
cmpsl
push
mov
insl
enter
sysret
push
es
leave
movsl
cmp
mov
cmp
add
aaa
add
xor
adc
sbbl
popf
mov
fisttpl
cmp
mov
adc
pop
xchg
addr16
mov
push
aaa
aam
dec
punpckhdq
add
jp
xchg
dec
inc
mov
dec
icebp
pop
movsb
pop
push
add
dec
das
dec
mov
sbb
scas
or
stos
cmpsb
mov
xor
push
cli
shr
clc
sbb
mov
add
xor
pop
out
popl
inc
mov
fwait
dec
xor
dec
sub
popf
jle
cmp
inc
cmp
fldl
hlt
fsubl
dec
loopne
pop
je
jmp
push
dec
les
xchg
cmpsl
lcall
dec
test
aaa
jo
sahf
cmp
add
cld
push
xchg
insb
pusha
cmp
call
and
int
sub
test
mov
mov
mov
mov
insl
mov
aas
mov
xchg
aam
movsl
cs
sahf
xor
push
sahf
shrb
and
mov
push
xor
mov
pop
inc
xchg
ret
addl
mov
jmp
cltd
sub
les
jmp
fsubl
mov
mov
frstor
aad
xor
mov
inc
addr16
fdivs
out
adc
mov
lcall
dec
icebp
mov
jo
adc
stc
mov
jmp
call
in
cld
sti
cmpsl
jp
test
rcrb
clc
xchg
shlb
add
mov
push
push
push
pop
jns
or
mov
roll
ds
pop
xchg
subb
push
imul
pop
lcall
cli
jno
pusha
std
popa
scas
adc
stos
in
and
mov
in
popf
or
jb
ss
and
sub
lods
rclb
adc
adc
inc
push
or
push
in
inc
das
hlt
je
and
int3
sahf
xchg
pushf
pop
mov
mov
jle
daa
push
rclb
mov
xlat
jbe
push
mov
push
movsb
lods
mov
or
call
cmpsb
jbe
cmpsb
push
cmp
pop
imul
jno
int
sahf
fnstenv
orb
aas
sbb
popa
dec
pop
int3
arpl
sbb
dec
mov
sub
lds
idivl
jno
scas
push
inc
lea
mov
das
repnz
xchg
jb
pushf
sti
mov
stc
enter
imul
mov
outsl
fsubl
jno
dec
sbb
mov
mov
jbe
movsb
lcall
int3
adc
push
and
mov
sbb
repnz
iret
inc
push
out
lods
mov
pop
sar
pop
push
dec
outsb
inc
add
add
inc
push
add
mov
inc
shr
adc
cwtl
shll
push
test
sub
inc
leave
xchg
push
aam
popf
and
adc
into
xchg
aam
xchg
test
jae
cli
dec
push
dec
xchg
and
cmp
sbb
imul
sbb
adc
pusha
push
lret
xchg
mov
mov
jmp
andl
shl
clc
pop
jb
jg
push
mov
jge
xchg
cmc
mov
cmp
lods
out
jl
inc
mov
inc
fisubrl
add
jb
mov
jge
jle
aaa
xor
out
sbb
mov
aaa
stos
xchg
xchg
inc
jge
out
scas
pop
popf
cltd
sbb
xchg
adc
lcall
in
mov
fdivl
out
xchg
xorl
push
adc
push
and
movsl
rcrb
jno
and
sbb
xor
testl
jae
or
lods
jp
mov
fs
xchg
jg
enter
push
xlat
push
pop
cmp
addr16
sub
outsb
jge
call
pop
shll
xchg
iret
repz
add
rcll
aas
mov
mov
sub
mov
add
push
mov
cmc
and
sbb
mov
mov
or
cltd
addr16
cli
rcrb
inc
dec
inc
xchg
lret
jmp
pop
hlt
and
out
xchg
loopne
gs
jb
imul
loop
adc
add
loopne
and
dec
jae
push
mov
xor
dec
imul
es
jae
sbb
stos
bswap
mov
lret
or
cli
sub
in
clc
je
aaa
mov
sbb
jmp
mov
fnsave
ret
ret
xchg
push
pop
test
mov
add
xchg
arpl
jb
mov
gs
lcall
out
jl
inc
push
pusha
aad
pusha
push
push
dec
frstor
sbb
mov
subb
stc
cmp
add
scas
mov
rolb
sbb
sbb
js
mov
ret
cli
adc
mov
aam
sti
incl
ds
call
popa
das
sbb
mov
in
mov
inc
out
add
fsubs
dec
add
js
mov
cmpsb
push
pop
jmp
mov
loopne
push
add
jne
jns
ljmp
push
cmp
cltd
rcrb
xor
scas
and
inc
imul
xor
std
je
cmp
mov
repz
push
mov
push
inc
adc
fisubs
mov
push
imul
mov
xor
ja
arpl
cwtl
fdivrl
js
adc
dec
jae
pushl
cmp
popf
push
sbb
sub
mov
dec
or
repz
jno
or
loopne
ret
xor
jle
mov
jns
int
xchg
sub
stos
roll
iret
shlb
in
cmp
inc
sbb
out
jae
lods
adc
idivb
pop
add
dec
imul
mov
je
test
and
ss
mov
outsb
dec
xchg
inc
inc
adcb
pop
movsl
lret
shrl
iret
cmpsb
fcomps
out
jnp
jo
pop
in
jle
insl
in
sub
shl
fwait
lods
xchg
add
movsl
jge
xorb
pop
test
lret
pop
daa
sbb
cld
inc
mov
add
shrl
out
jmp
push
daa
scas
stc
cwtl
sahf
shr
jl
cmp
iret
xchg
mov
mov
mov
fbld
out
iret
inc
lds
ss
or
cld
iret
aam
jp
dec
sbb
push
pop
aad
sahf
mov
push
shll
xor
inc
stc
mov
mov
jae
imul
scas
adc
push
mov
jb
sub
dec
dec
imulb
lods
js
push
out
sarb
shl
jecxz
pop
cld
icebp
sub
shrb
mov
addl
cmpsl
adc
push
lods
repnz
loopne
scas
push
add
out
in
loope
xchg
add
mov
xor
enter
lret
lock
dec
sub
fiaddl
pop
out
cmc
insl
out
jne
test
jp
mov
pop
repz
cli
push
mov
and
jle
es
divl
push
jecxz
stc
cs
out
mov
pop
icebp
aaa
rol
push
inc
cmp
jp
out
and
inc
jo
and
sub
int3
or
hlt
xchg
pushw
push
addr16
scas
inc
pop
pop
mov
aam
je
fwait
adc
inc
jnp
or
cwtl
xor
xchg
xchg
aaa
mov
scas
xor
out
jmp
push
rcrl
add
mov
inc
cli
or
pop
out
mov
popa
lahf
xchg
mov
or
adc
and
int3
test
out
jnp
xchg
and
mov
outsl
mov
jnp
or
cmpsl
dec
push
mov
push
std
cwtl
aam
daa
sub
xlat
cmpsb
pop
mov
xchg
mov
xchg
add
add
inc
stos
iret
push
mov
js
stc
call
push
aam
shlb
inc
lds
outsl
pop
pop
cltd
lock
push
jmp
in
movsb
das
out
jge
out
jl
ret
adcb
inc
push
popa
mov
negl
cltd
stc
push
cmc
sbb
dec
xchg
test
mov
int3
loope
ret
bnd
rcll
mov
and
mov
in
add
push
jecxz
int
es
and
sub
and
fisubs
push
or
lcall
jg
jge
sahf
xor
leave
push
push
mov
outsb
in
movsl
arpl
repnz
mov
pop
mov
cmp
outsb
out
inc
out
pop
stos
dec
in
mov
xchg
cs
and
cmp
inc
pop
dec
mov
popf
movsb
pusha
add
mov
xor
addr16
mov
loope
sbb
jecxz
and
inc
xchg
dec
jp
fnstenv
call
rcrl
in
dec
iret
push
pop
int3
pop
adc
jge
test
pop
jne
and
in
fwait
inc
icebp
or
push
lcall
jns
sbb
sub
lds
sti
jg
jne
insl
add
xchg
xchg
xlat
dec
addr16
cwtl
insl
inc
cmp
imul
mov
sub
imul
sub
dec
adc
popf
add
push
mov
imulb
ret
bound
fwait
loop
cld
lahf
cmp
cmpsl
lret
or
enter
pushf
inc
xchg
insb
in
pusha
in
mov
dec
sub
xor
dec
push
outsl
sub
std
dec
fstpt
push
mov
jo
clc
or
in
jno
js
lods
ljmp
out
fstps
movsb
mov
movsl
filds
sbb
je
hlt
addr16
add
adc
xor
outsb
sbb
or
cwtl
pushf
add
mov
out
fldenv
and
inc
mov
xor
vmread
lret
jbe
mov
std
xchg
leave
adcb
scas
or
sbb
or
int3
jnp
mov
fidivl
mulb
dec
inc
shrl
mov
push
sub
insl
jo
ss
loope
mov
inc
lcall
and
pushf
jns
push
or
cmc
sbb
mov
jg
imul
or
and
inc
fidivl
in
add
xchg
pop
imulb
sub
stos
flds
repz
sbb
dec
push
mov
xchg
mov
jne
pop
xchg
js
xor
test
and
movsb
std
mov
mov
or
adc
pop
out
mov
push
mov
xchg
inc
rcll
push
lods
rcrb
xchg
icebp
lds
mov
xor
int3
insb
int
loop
jb
pop
sub
adc
mov
pop
mov
repz
adc
loop
push
mov
insb
mov
daa
push
imul
dec
jo
loop
mov
mov
mov
jp
mov
inc
loop
out
cmpsb
jge
xchg
inc
sbb
test
jae
cmp
push
cmp
jnp
and
in
popa
ret
sub
pop
jecxz
push
in
mov
mov
leave
xorl
mov
or
mov
pop
adc
movsb
sbb
pusha
xchg
inc
cmp
and
push
nop
jne
sti
push
jns
and
das
dec
out
lds
xchg
lds
loopne
cmp
gs
pop
decb
xchg
xor
fimuls
subb
test
test
xor
out
mov
xlat
out
mov
imul
cltd
pusha
sbb
sti
dec
or
and
adc
in
aam
sub
mov
stos
loop
or
pop
push
mov
inc
mov
leave
xlat
fnstsw
outsl
xchg
in
xchg
mov
add
pop
iret
mov
sub
inc
pop
rorl
inc
push
lock
or
mov
adc
inc
sub
pop
mov
cmpsb
stos
iret
fdivrl
xchg
bound
rcl
cmc
push
bound
stos
push
xchg
scas
int
nop
sti
adc
jnp
jg
ffreep
insl
pop
aad
int3
outsb
movsl
aad
sar
out
cmp
repnz
imul
push
add
leave
mov
xchg
sub
jnp
pop
jmp
cli
or
out
add
fstpt
jb
jecxz
sti
push
jno
stc
pandn
add
xor
sbb
int3
jecxz,pt
mov
negl
or
in
ret
mov
mov
dec
fstpl
add
jl
dec
repz
xor
sti
push
fsubs
mov
and
mov
inc
cmpsl
stos
nop
outsb
sub
mov
decb
in
fdiv
icebp
adc
push
xor
rcr
imul
push
pusha
mov
inc
push
mov
cmp
cmp
rcrb
or
pushf
dec
cs
sbb
clc
or
pop
stos
icebp
mov
add
jae
test
cmp
lods
lcall
inc
leave
sbb
loop
rorl
aad
xchg
mov
les
dec
pop
push
cltd
scas
mov
int
cmp
std
pop
pop
nop
fbstp
jbe
out
imul
lds
dec
fnstenv
scas
pop
popa
cmp
push
andl
ret
into
lcall
and
mov
paddb
add
pop
shll
push
xor
dec
push
pop
fisubl
sub
test
sub
jnp
inc
jns
mov
insb
xchg
jp
pop
insl
scas
dec
and
dec
arpl
das
sbb
lret
lods
nop
push
xchg
lret
xchg
shlb
aad
dec
sub
sbb
sub
jo
loop
mov
mov
xchg
pop
mov
lods
mov
push
pop
out
xor
adc
dec
sbb
mov
dec
sti
push
pop
cmp
loop
xchg
or
mov
push
xchg
mov
inc
push
pop
pusha
jg
shrl
jns
inc
les
test
xchg
ficoml
cmp
mov
pusha
add
lods
sub
jmp
rcrl
or
and
dec
or
lea
adc
xor
enter
test
pop
shll
in
inc
imul
fnstenv
fwait
jecxz
xchg
dec
jg,pn
mov
mov
mov
xor
add
cmp
mov
or
pop
mov
mov
cwtl
lods
gs
cmp
push
sbb
or
mov
mov
mov
daa
ror
jle
ret
cmp
jmp
jl
xchg
insl
mov
sbb
scas
pop
shr
and
js
add
in
loopne
jl
dec
pop
push
or
shr
daa
shl
pop
mov
inc
mov
jl
outsl
push
jno
movsb
mov
ret
pop
mov
pop
inc
mov
mov
lock
dec
mov
fs
jb
cmp
or
cwtl
loope
cld
mov
cmp
xor
outsl
cmp
adc
mov
mov
sbb
push
dec
cltd
imul
push
mov
mov
add
dec
out
sbb
adcb
shll
imul
leave
ds
inc
or
in
pop
fnsave
push
mov
rcl
pop
insl
add
or
loopne
mov
push
mov
and
popa
cltd
aas
inc
push
xor
out
and
loope
mov
pop
cs
in
cmp
aaa
lds
leave
fidivs
xchg
mov
and
arpl
sbb
pop
or
call
push
cwtl
lcall
es
fnstenv
add
ja
ds
leave
mov
mov
es
loop
or
sub
out
xlat
out
es
lods
adc
adc
cs
push
clc
lods
pop
test
push
adc
mov
ficoms
fwait
les
mov
or
outsb
push
leave
cli
idivl
orl
int
pop
jns
jnp
sahf
dec
jl
sbb
mov
mov
lcall
and
shlb
jb
dec
add
and
fmul
in
push
incl
jno
lds
pop
gs
mov
fmuls
fsubp
out
xchg
lods
jb
call
movsb
shrb
imul
movsl
mov
mov
or
jnp
pushf
mov
inc
jg
aad
int
stos
leave
stc
orl
sbb
pop
faddl
jb
sbb
adc
in
inc
icebp
clc
jns
and
push
cmp
lods
loope
hlt
fs
fwait
stos
inc
fwait
sbb
in
shll
incl
add
add
mov
and
scas
push
daa
or
out
ror
dec
mov
dec
mov
icebp
imul
xor
nop
call
mov
jmp
mov
movsb
shl
mov
jmp
imul
testb
add
clc
sbb
addr16
mov
sahf
pinsrw
xchg
sub
jne
pop
mov
push
pop
outsb
mov
inc
scas
inc
sahf
jnp
dec
xor
repz
cmp
mov
push
mov
ja
push
gs
mov
stos
push
std
mov
push
mov
outsl
test
je
sub
mov
arpl
mov
sahf
clc
cmp
sub
clc
adc
mov
jmp
popa
movsb
inc
into
and
loope
in
leave
xchg
cwtl
es
pop
cmpsb
popa
mov
popa
or
popf
cmc
and
mov
inc
jg
dec
jb
hlt
push
lock
sub
mov
scas
movl
inc
sub
iret
lahf
push
push
fisubrs
pop
sarb
mov
and
jl
fs
cld
cmp
lods
push
dec
xor
inc
sbb
pop
testl
xchg
mov
lea
inc
stc
inc
fmull
bound
push
fmulp
test
cmc
pusha
or
ss
xchg
mov
call
push
ds
or
mov
scas
int3
sbb
lds
test
ja
fcompl
orl
or
xor
lock
js
cld
pop
jnp
out
fcmovb
mov
lds
inc
cltd
fisttpll
xchg
cmp
adc
xor
fidivs
sub
inc
in
sbb
mov
divl
div
or
or
cmp
scas
sahf
xor
pop
lods
aad
es
mov
jg
jnp
ret
sub
std
jnp
std
sub
in
rcl
out
enter
ret
lock
push
push
aas
mov
inc
mov
inc
addl
shlb
sbb
add
add
imul
jno
dec
inc
in
mov
icebp
and
add
mov
in
fcompl
adc
mov
jns
push
lds
clc
sbb
fs
les
popa
loop
fadd
rcrb
arpl
not
jne
push
pop
jo
rclb
xchg
cmpsl
outsb
sub
xor
xor
loopne
cwtl
jno
mov
inc
ret
xor
popf
scas
inc
js
aas
sbbb
jmp
sub
adc
in
xor
xor
sub
and
mov
dec
cmp
pushl
pop
decb
lahf
dec
ss
cmp
inc
test
test
or
or
aaa
mov
sub
ret
cmc
imul
lret
push
aaa
rorb
jno
out
cmpsb
pop
jge
scas
mov
jmp
rolb
jecxz
repnz
fnstsw
cld
shlb
push
movl
push
arpl
add
cmpsl
dec
fiadds
mov
cmp
or
inc
outsl
lock
pop
pop
imul
dec
sub
lds
push
iret
dec
in
fsubl
loope
xchg
push
mov
out
fisubrs
ja
xor
insb
stos
das
mov
mov
arpl
aad
ficoms
test
mov
mov
jge
fmull
sbb
jl
mov
sbb
cld
aad
mov
inc
pop
loopne
cmp
add
and
scas
aad
test
faddl
jns
mov
pop
inc
out
cmpsb
lods
adc
sub
daa
push
pop
jno
in
call
mov
lsl
ja
sub
mov
imul
ja
jne
int
add
ficoms
and
cmp
push
fwait
dec
nop
pop
movsl
xchg
pop
cmp
out
mov
neg
mov
xchg
xor
sbb
imul
mov
fldcw
push
and
xor
ljmp
cmpsb
mov
jnp
hlt
fnstcw
enter
or
stc
std
pop
pop
dec
adc
mov
ret
outsl
mov
cmp
popa
sahf
mov
mov
daa
fxch
das
xchg
mov
and
add
inc
insb
scas
sarl
lret
push
shr
jmp
adc
enter
pop
push
mov
pop
mov
leave
or
inc
mov
pop
lahf
sub
fsubs
fsts
pop
ds
jge
cmp
fwait
cmp
rorl
outsl
scas
cli
xchg
push
push
int3
cwtl
xor
rorb
je
push
pushf
jle
scas
loopne
fstps
rcr
xor
and
mov
push
adc
sub
jns
cmp
addr16
fsubs
xchg
out
pop
stos
jne
dec
js
mov
mov
out
pop
mov
lods
testb
mov
scas
ds
cmp
xlat
or
dec
cli
push
mov
enter
fnstsw
leave
or
cmp
rcrl
insb
repnz
inc
push
sahf
addr16
dec
cmpsb
xor
fldcw
in
addb
add
pop
imul
mov
push
sub
cli
arpl
scas
cwtl
jo
gs
popf
and
mov
bound
idiv
cld
notl
nop
and
pop
insb
outsb
scas
fisubl
dec
xchg
movsl
xor
mov
cmp
xor
scas
xchg
push
scas
pop
xchg
add
stos
push
in
dec
lea
push
loopne
fisubrs
pop
push
and
int
xchg
jne
in
mov
lds
cmp
pushf
sub
fs
bound
es
ss
ret
je
dec
xchg
fsubs
xchg
lods
dec
sbb
and
or
push
call
aam
push
sbb
inc
xchg
mov
mov
sub
loop
in
xchg
cmp
out
cmpsb
jmp
jbe
jl
or
lea
popf
pop
jle
fsubp
int3
jno
xchg
pusha
pop
sbb
or
lret
xchg
cmpl
pop
and
lahf
pop
push
inc
in
in
out
xchg
mov
pop
cmpsb
sub
adc
lret
je
mov
xchg
aad
lret
pop
xorl
pop
sub
mov
lcall
dec
mov
iret
lods
arpl
push
jb
fucomip
adc
idivb
and
or
or
xchg
imulb
inc
mov
js
xor
test
mov
or
push
inc
cmp
mov
adc
add
lock
aaa
push
sarl
insb
or
pusha
sub
fs
into
jp
adc
imul
xchg
test
addr16
dec
dec
push
mov
push
out
and
add
fldcw
or
push
jae
imul
ja
push
std
or
lock
sbb
or
or
inc
stc
aad
pop
or
adc
sub
fmuls
in
add
aaa
mov
jge
stos
cmpsb
cmp
sbb
scas
scas
mov
clc
stc
pop
xchg
add
mov
lock
fldt
insb
dec
in
jle
rorl
mov
push
mov
inc
cmp
sbb
fsts
push
mov
add
rdtsc
sbbb
fmull
testb
insl
pop
sbb
hlt
comiss
stos
sbb
push
cmp
es
dec
or
xchg
loop
lcall
xlat
addr16
push
and
mov
sub
lahf
xchg
out
cmpsb
add
dec
fcomps
cmpsb
insl
push
shlb
adc
bound
fs
add
dec
test
fmuls
ja
int3
inc
ss
fadds
dec
imul
stc
xor
lods
fldenv
xor
sub
pushf
repz
xor
push
call
add
ds
push
jbe
repnz
lock
filds
jo
decl
mov
push
pushf
stos
cwtl
or
adc
jnp
push
mov
aas
or
aas
sbb
call
or
add
sub
and
dec
pusha
inc
cmpsl
jno
fcmovnu
fmull
jl
test
and
mov
inc
cltd
shlb
pusha
pop
cmpsb
lea
lahf
and
sub
rcl
call
enter
xchg
mov
in
mov
cmp
int3
gs
outsl
arpl
xor
jecxz
xor
out
repnz
cmpsl
mov
enter
mov
cmp
push
cli
dec
idivl
mov
xchg
mov
mov
pop
pop
dec
xor
movmskps
or
sub
aas
mov
pusha
cs
dec
in
inc
scas
mov
jecxz
into
mov
outsb
mov
cmp
fisubs
fs
sbb
dec
mov
jecxz
jle
cwtl
aad
sbb
mov
pop
inc
aaa
sahf
dec
or
fstl
popf
mov
imul
inc
mov
fs
je
jae
arpl
and
psubsb
mov
adc
fsubl
pop
int
pop
clc
outsb
lcall
dec
push
inc
insl
std
adc
adc
mov
add
inc
jmp
pop
xor
sub
dec
mov
mov
ficomps
cmp
int
jle
fwait
clc
dec
je
push
jbe
js
xchg
test
pop
push
out
lret
lahf
and
mov
sbbb
arpl
add
mov
dec
loope
add
mov
pop
cmp
leave
aaa
xor
jb
cmp
mov
pop
negl
mov
mov
into
xchg
test
lods
mov
and
dec
dec
ror
fistpll
add
cmp
pusha
les
dec
stos
repz
lea
xchg
movsb
not
sahf
pop
leave
cwtl
loope
lret
cmpb
ret
push
push
cmp
out
adc
xor
inc
rolb
mov
xchg
loope
lods
popf
popf
sub
jmp
outsb
sbb
or
clc
shlb
pop
shlb
popf
cwtl
mov
or
popa
iret
add
and
mov
pop
pop
cmp
divb
out
pop
inc
add
lcall
adcl
outsb
cwtl
xor
lods
js
fildll
fiadds
sub
aad
inc
loope
mov
xchg
rcll
cld
mov
pushf
scas
dec
ja
mov
popa
push
dec
cs
dec
inc
xor
daa
mov
lock
xchg
push
loopne
sub
imul
and
ja
mov
xchg
sbb
dec
mov
mov
sbb
add
test
das
out
aam
mov
adc
pop
test
out
push
aam
fdivs
mov
mov
inc
cltd
jge
outsl
mov
shlb
xchg
imul
and
pop
push
lahf
jbe
xchg
dec
sbb
inc
inc
leave
inc
mov
nop
push
loope
cmp
mov
inc
leave
sarb
dec
xor
rclb
add
neg
sub
jp
pop
mov
stos
mov
xor
negl
mov
lods
and
sub
xor
aam
mov
jecxz
aad
adc
add
ret
stos
mov
addr16
inc
stc
addr16
jp
cltd
out
dec
adc
adc
jmp
dec
dec
fucomi
lret
mov
sbb
sbb
sarl
icebp
sub
fdivrl
add
mov
in
and
sti
call
inc
push
mov
pop
jno
push
cmpsb
and
icebp
mov
imul
jge
xor
jae
pop
pushf
pop
mov
cmp
movsb
xchg
mov
sarb
inc
outsb
sub
xor
add
mov
movsl
push
xchg
xchg
jge
jle
or
sahf
jnp
adc
fidivs
aas
aas
sbb
pop
sbb
lock
mov
addb
loope
fs
push
add
inc
xor
shr
stos
ja
scas
xor
repz
jbe
in
dec
rclb
mov
ljmp
push
fisttpl
sub
lods
cmp
add
stos
enter
addr16
push
dec
into
mov
pop
sbb
jle
popa
cs
adc
out
mov
bound
jae
mov
xor
or
sti
cmp
xchg
enter
pop
les
inc
inc
out
inc
mov
jp
outsl
dec
sub
xchg
loop
or
loopne
dec
add
iret
in
rclb
jbe
popf
shl
repnz
xlat
pop
and
xor
call
loope
push
or
add
jl
add
add
jbe
das
addw
adc
scas
dec
lods
mov
inc
idivl
lret
mov
add
pop
gs
jnp
sbb
cmc
pop
cmp
cmp
dec
mov
daa
pop
jnp
dec
jp
adc
sahf
pop
into
sbb
jmp
scas
jne
xor
push
jb
or
lret
dec
cmp
sub
sub
test
enter
sbb
int3
loope
fsub
mov
loop
jbe
mov
out
jge
lret
imul
or
rcrl
sub
sbb
lret
ljmp
push
leave
gs
jge
adc
rorb
or
scas
mov
std
jb
das
call
jg
arpl
adc
scas
ret
aas
inc
and
mov
leave
push
aaa
sbb
sub
mov
ss
lods
jl
outsl
ja
dec
test
sub
inc
cmpsb
fstp
lret
or
ljmp
xchg
sahf
adc
jns
jmp
repz
jg
and
popa
mov
js
addb
mov
in
ds
add
add
imul
and
and
mov
nop
lahf
pop
clc
mov
pusha
adc
fstps
or
sub
shlb
inc
and
inc
cmc
ret
cs
pop
test
hlt
jo
xor
smsw
or
insl
lods
push
mov
test
hlt
aad
xchg
hlt
mov
insb
inc
mov
inc
xor
dec
call
dec
addb
data16
fiaddl
xchg
sbb
pop
testl
bound
jmp
outsl
sbb
pop
shll
loop
lock
outsb
clc
dec
fmuls
insb
xchg
lods
in
lahf
daa
adc
sub
hlt
xchg
xor
jp
shlb
cli
dec
daa
cwtl
xlat
cmp
sbb
push
adc
out
xchg
xor
sbb
int
sbb
lods
pop
pop
xchg
xor
mov
imul
xchg
dec
fisttps
nop
xor
ds
inc
stos
subl
movsb
call
stc
adc
cmc
adc
push
movsl
sbb
pop
push
inc
jae
jmp
sub
xor
shlb
xor
jne
out
or
shl
push
lahf
adc
test
add
lret
rcrl
xchg
sbb
pop
ret
ret
scas
pop
in
arpl
and
mov
xlat
jmp
add
aas
push
adc
cmp
mov
dec
sub
or
les
call
popa
dec
mov
gs
xor
enter
fwait
inc
xor
in
jg
inc
push
mov
test
adc
mov
fs
or
out
sahf
dec
ss
mov
leave
xor
add
or
test
clc
jae
xor
jae
shrb
dec
test
fldl
mov
leave
fistpll
sbb
mov
shrl
pusha
loopne
or
xchg
fcmove
loope
mov
mov
and
push
xor
pushf
ret
sbb
adc
xlat
stos
out
pop
je
aad
jb
xor
and
pop
movl
imul
xchg
insb
rcll
or
sub
mov
push
lds
sbb
adc
int
add
ret
sub
mov
dec
jle
out
push
jge
dec
cli
out
push
lds
lods
popf
into
sti
fistl
jo
dec
add
jno
movsl
add
cltd
jmp
leave
jecxz
scas
jle
es
dec
push
sbb
xor
or
sbb
fists
pop
adc
pop
cld
or
and
inc
out
inc
pop
dec
lods
pop
xor
js
lret
adc
mov
dec
push
daa
lret
adc
mull
or
dec
jae
add
imul
pop
dec
push
daa
lea
andl
stos
push
lret
popf
outsl
add
pop
out
add
pusha
or
btc
xor
xor
lcall
adc
push
ds
xorb
push
dec
test
ds
shr
data16
lret
fimull
test
sbb
dec
shll
add
es
sbb
lret
jle
movsb
mov
xchg
rorl
pop
pushf
mov
xor
add
fsubs
mov
xchg
out
sbb
push
sbb
in
imul
fstpl
aad
int
les
push
std
mov
jmp
ss
scas
lret
call
jbe
adc
inc
ret
mov
jnp
cmp
and
icebp
roll
lds
and
ss
aaa
imul
add
sbb
mov
pusha
mov
push
dec
outsl
cmp
xor
xchg
xor
add
xlat
jg
cmc
sti
dec
cmp
insb
push
mov
in
insl
mov
pop
pop
ljmp
mov
pop
sarl
mov
fisttpl
push
imul
lods
popa
sub
popf
sbb
ja
movsl
fsubrl
data16
fwait
jle
ja
inc
fs
ret
xor
sbb
scas
call
xor
sti
push
fsubs
shl
imul
push
mov
sbb
scas
xchg
cmpsb
mov
adc
pop
mov
cmpsb
sub
mov
in
mov
mov
cmp
push
and
out
cmc
dec
cmpsl
pop
mov
gs
imulb
pop
sbb
ds
push
jae
ficoms
jb
ss
rorb
inc
pop
fadd
rclb
scas
lods
inc
mov
xchg
inc
data16
jg
pop
pop
pop
jg
or
enter
test
std
call
xchg
test
xor
inc
stos
pop
test
push
mov
pop
loop
lods
loop
xchg
xchg
push
sbb
arpl
mov
mov
into
sub
xchg
pop
adc
mov
fisubrs
cmp
adc
fs
stos
test
mov
jb
ds
sub
addr16
mov
imul
ds
lock
jecxz
leave
out
cmpsl
movsb
cwtl
pop
dec
push
test
add
les
adc
call
fadds
cmc
mov
and
stc
pushf
pusha
pop
push
sub
rclb
push
mov
mov
or
pushf
cmp
cs
loope
mov
xchg
hlt
test
add
shll
sbb
call
dec
mov
jbe
ret
sub
pop
fmuls
fsubrs
jo
test
sbb
xchg
cmp
rcll
add
loope
mov
addr16
sbb
mov
sub
outsl
mov
stos
leave
xor
mov
imul
test
sahf
sti
arpl
xor
lahf
jae
dec
jns
mov
xchg
ljmp
mov
in
sub
daa
fstpl
push
inc
adc
fimull
add
flds
in
stc
jl
out
xchg
lahf
jp
mov
mov
sub
stos
mov
mov
push
add
mov
and
clc
aam
out
lret
orl
ja
lods
xchg
sti
xchg
call
sbb
push
push
adcl
add
outsb
hlt
in
leave
jmp
mov
xor
mov
out
das
xchg
sbb
push
lock
adc
push
es
inc
jmp
cmp
sbb
cmp
jae
les
sub
pop
sbb
scas
jge
imul
loope
adc
cld
mov
xor
mov
ss
fwait
pop
rcl
gs
lret
movl
cli
push
cmc
es
scas
xor
sub
and
push
inc
sbb
jge
push
arpl
and
ret
fnstcw
nop
lods
punpckhwd
insl
shrl
pop
jo
popa
adc
mov
jnp
and
push
or
inc
arpl
mov
incb
loopne
pop
leave
out
push
xchg
cmpsl
adc
repz
rcrl
outsb
inc
int
jb
sub
jae
mov
mov
push
push
fldl
mov
call
enter
jne
fcomps
mov
iret
xchg
mov
sub
clc
mov
push
and
sti
dec
or
shrl
cmp
jno
iret
inc
int
xchg
loope,pt
push
fs
dec
test
mov
jnp
cwtl
lea
stc
xchg
fisttpll
pop
repnz
or
pop
sbb
sbbl
test
dec
pop
sahf
adc
pop
add
roll
jp
jecxz
xchg
in
loop
gs
xchg
rol
mov
fwait
cltd
cmp
enter
std
lock
fcomps
push
add
jecxz
test
repnz
out
inc
dec
adc
push
jae
pop
pop
xchg
push
test
push
mov
outsl
and
mov
test
mov
ret
fwait
ss
pop
lods
xor
mov
iret
cmpsb
fdecstp
cmpsb
hlt
push
dec
adc
cwtl
or
jo
gs
adc
add
out
mov
adc
and
rcrb
dec
cmp
test
enter
shll
push
sub
mov
dec
dec
stos
pop
pop
lock
shlb
jno
sub
dec
imul
push
lock
stos
out
xor
add
out
mov
into
fidivrl
or
aad
pop
jmp
sbb
push
addr16
sub
pushf
rcrl
clc
into
stos
lret
leave
ljmp
addl
insb
in
scas
jnp
stos
lahf
jmp
mov
pop
outsb
push
mov
xchg
mov
arpl
mov
lret
mov
add
xchg
mov
pop
xorb
push
stos
bound
xor
scas
dec
int3
mov
cli
pop
jb
dec
or
ret
mov
xchg
jmp
les
push
mov
gs
push
push
rcrl
andl
push
push
and
rolb
out
std
shr
cmp
ds
idivb
in
rcrl
shl
pusha
inc
nop
mov
rcrb
popf
jns
in
dec
movsl
inc
or
sti
push
cltd
insl
andb
adc
mov
loope
or
sub
cmc
dec
jno
ret
icebp
xlat
mov
adc
pop
pop
pop
push
cld
xchg
in
ret
pop
pushf
xor
xchg
insl
add
scas
pop
push
daa
lods
mov
xor
rcrb
cmp
adc
dec
push
fiadds
ret
jno
sbb
pusha
xchg
push
xlat
xor
dec
xor
cwtl
pop
enter
jmp
mov
test
sbb
mov
and
in
cmp
xlat
cli
jl
and
cmpsb
arpl
sub
iret
sbb
test
cltd
mov
xchg
add
das
in
loop
fs
push
xor
inc
cmc
and
cmp
stos
jae
adc
popf
movl
jns
or
or
push
bound
xor
cmp
mov
jmp
add
mov
jmp
cmp
and
pop
xchg
mov
lahf
pop
push
lock
pinsrw
in
js
adc
aam
inc
adc
iret
enter
xchg
cld
ret
mov
or
push
xchg
adc
xchg
inc
fdivl
push
in
lods
push
in
mov
int
sub
mov
popf
add
in
lret
jae
sub
sti
cmp
xchg
in
imul
sbb
push
mov
mov
pop
push
adc
in
cli
mov
adc
pushf
sbb
jge
mov
popf
and
movsb
push
and
mov
xchg
cmpl
xorb
push
push
decl
mov
or
hlt
or
cwtl
push
cwtl
dec
mov
daa
mov
adc
ja
xchg
lds
aad
imul
and
call
subl
adc
insb
popa
imul
mov
sti
mov
ret
dec
mov
data16
pop
js
xor
fs
lahf
sub
add
bound
mov
rclb
roll
lret
dec
push
mov
iret
movb
adc
inc
stc
iret
adc
int
cmpsb
adc
pop
mov
pusha
shl
xlat
add
out
or
pop
movsb
lcall
imul
orb
push
cmp
mov
out
or
mov
imul
aam
cld
setns
pop
cmpsl
push
push
sbbb
push
mov
inc
jns
adcb
popa
out
imul
into
xchg
movsb
movsl
loope
movsl
pop
and
xchg
adc
sti
pop
and
rol
adc
lods
jno
fmul
or
push
test
sub
inc
sub
inc
cmpsl
xor
or
loope
or
pop
out
sahf
push
inc
jmp
mov
push
cltd
push
adc
sarl
lock
popa
xchg
cmc
aas
sub
add
cmp
icebp
fdivrl
push
dec
fimuls
jge
movsb
sub
add
add
subb
inc
pop
sbb
les
sbbb
cli
in
pushf
jle
fnstenv
ret
fdivp
mov
pushf
aad
cltd
adc
into
gs
dec
div
out
dec
gs
fcomp
lods
ja
movsl
add
cli
ljmp
inc
sub
ret
jp
jmp
jo
adc
test
inc
notl
divb
mov
lahf
gs
idivb
fstpt
push
cmpsb
insb
xor
cli
icebp
in
lret
or
inc
xchg
add
in
mov
stos
xchg
mov
mov
dec
aam
cld
inc
sbb
rorb
out
dec
xor
into
mov
scas
loop
jae
jp
mov
push
xchg
scas
rorb
ljmp
cs
cmp
jecxz
inc
and
in
lcall
mov
add
pop
call
xor
sti
push
fsubs
test
or
ja
fwait
mov
push
scas
insl
add
int3
shll
push
outsb
imul
fwait
jns
mov
and
daa
insl
fcoms
rclb
xor
call
xor
rorl
pop
mov
das
xor
cmp
inc
lea
xchg
or
cmp
add
std
shll
sahf
xchg
ret
dec
sub
adc
sub
jno
out
add
ds
fcomps
add
add
iret
lods
ret
inc
fdivrs
clc
add
jae
out
dec
jecxz
pop
repnz
stos
das
mov
mov
shll
pop
and
ret
cmpsb
mov
pop
sub
cmc
dec
sbb
mov
fimuls
mov
jle
cmp
sub
push
mov
adc
out
sbb
stos
lcall
pusha
sub
xchg
cmp
cld
sbb
cs
pusha
mov
inc
lahf
xchg
sbb
mov
pushl
pop
lret
mov
jno
in
mov
xor
sub
xlat
pop
or
divl
fmul
fldt
vpminsw
jmp
addr16
gs
adc
sbb
xor
shl
cmp
lods
ret
lcall
enter
dec
push
xchg
xchg
in
jecxz
clc
push
ffreep
jl
push
xlat
xor
inc
push
leave
in
inc
lods
push
add
fistpll
push
jne
arpl
jns
cmp
ljmp
cmp
sti
std
jmp
mov
mov
mov
mov
addr16
nop
rorb
insl
jge
jne
mov
add
mov
xchg
rcr
xor
sti
inc
jl
adc
leave
repnz
dec
push
sti
mov
data16
mov
pushf
rcrl
inc
ljmpw
add
outsb
and
push
jg
sub
sub
cmc
mov
aam
xor
inc
subb
imul
ret
cmp
je
push
adc
cmp
shlb
or
mov
insb
mov
xlat
nopl
sbb
aaa
jmp
mov
xor
dec
xchg
pop
and
outsb
xor
xor
test
dec
ljmp
add
gs
pop
test
or
pop
inc
mov
les
mov
sub
add
popf
ds
in
or
push
sub
movsl
jb
stos
fwait
cwtl
int
fistpll
xchg
push
insl
jge
jp
xor
cmp
lods
pop
shll
sub
dec
fmuls
xor
push
xchg
fisttps
cmpsl
popa
sbb
out
aad
jp
add
pop
enter
mov
xor
bound
leave
sahf
dec
stos
add
lret
in
adc
in
aas
mov
inc
rol
push
mov
loop
repz
enter
icebp
and
icebp
scas
out
jmp
pop
push
jge
xchg
dec
mov
rolb
fldcw
js
and
inc
leave
push
cmc
mov
mov
mov
outsb
jo
dec
repz
xor
sti
push
fsubs
cmp
inc
push
leave
cs
out
aad
or
xchg
mov
push
or
shll
jnp
lods
jae
dec
loope
int3
out
pop
jnp
sbb
stc
fcmove
and
fwait
mov
scas
arpl
lods
ss
xchg
inc
stos
sbb
in
push
xor
daa
xchg
cli
into
xchg
dec
pop
hlt
cmp
enter
nop
ljmp
jecxz
push
mov
popa
inc
mov
loopne
sub
or
jno
fiaddl
outsl
sbb
insl
mov
xchg
adc
pop
lds
sbbl
dec
popf
insb
cmp
cld
add
cmpl
out
movsl
ss
stos
in
aas
xor
cs
add
xor
notl
adc
cmp
js
int3
andb
outsl
jne
dec
repnz
sbb
pop
push
sbb
jno
into
out
pop
push
mov
adc
sbb
inc
jmp
pop
xor
mov
ds
aas
ficoms
cmp
pusha
rol
mov
enter
pop
test
jg
aas
pextrw
xchg
sub
movsl
pop
pop
data16
fidivrs
xchg
mov
push
enter
shrb
daa
stos
jge
dec
sti
sub
dec
lods
push
pop
mov
test
fcoml
sbb
orl
dec
cwtl
cmp
mov
pop
int3
cld
or
xor
jno
cmp
sahf
dec
adc
xor
insl
inc
sub
jmp
or
mov
push
ljmp
push
mov
clc
clc
outsb
mov
add
rorb
dec
mov
cmpsl
dec
lock
push
ret
leave
cwtl
mov
sub
mov
lock
xorb
or
xchg
cs
enter
adc
lods
dec
mov
inc
push
mov
mov
data16
sbb
ja
push
inc
into
mov
cmpsl
scas
jmp
add
rcr
xor
nop
nop
dec
sub
into
add
xchg
into
mov
dec
xor
and
lods
arpl
or
into
lea
sub
dec
dec
test
rcrb
inc
push
sbb
mov
ljmp
dec
lock
flds
dec
push
outsl
sbb
aad
sub
incl
lds
mov
movsl
cmp
in
lret
sti
sub
mov
into
stc
test
loope
gs
pop
cmp
dec
sbb
mov
pop
jns
fstl
lret
imul
cmc
not
push
ret
jle
add
add
data16
mov
push
call
push
rorb
xor
dec
xchg
dec
xor
mov
icebp
push
mov
cmp
cmp
sbb
insb
mov
mov
add
js
fs
or
or
pop
and
fisubl
push
into
xor
mov
int3
clc
jl
pop
out
notb
decb
out
push
bnd
clc
add
jo
stc
shlb
pop
jmp
testl
mov
jo
pop
jecxz
add
adc
cmp
cmc
movsb
and
cvttps2pi
aad
cmpb
push
test
pop
jo
dec
inc
sbb
int
aas
or
mov
mov
sub
cmc
push
mov
lcall
cmp
repnz
std
clc
cmp
rcrl
mov
scas
enter
ficoms
in
sub
dec
pop
test
icebp
cmp
push
into
aaa
sahf
xchg
pop
popa
pop
mov
jo
cmp
mov
pusha
jecxz
push
mov
jp
shlb
xchg
xor
jmp
dec
or
xor
mov
call
fs
out
pop
insb
cltd
andb
sub
mov
fstp
dec
mov
test
ret
mov
movl
xlat
aaa
jl
add
sarb
ss
std
cmpsb
mov
adc
pop
sbb
jp
popa
sub
shl
iret
cli
mov
xchg
adc
adc
movsl
pop
or
enter
sbb
lret
lods
mov
ret
pop
fcompl
xor
mov
xchg
dec
inc
test
push
decl
les
jle
stos
sbbb
sbb
cli
aas
mov
sbb
cmp
add
lret
data16
mov
lret
negb
jno
int
jno
ljmp
push
divl
pop
and
mov
stos
loopne
out
adc
pop
testl
jmp
iret
in
std
pavgw
mov
fistpl
push
xor
xor
enter
bound
outsl
cmpsb
imul
mov
sbb
jmp
aad
dec
stos
cld
nop
mov
popa
cmpsb
mov
cmc
pop
lret
jle
imul
cmp
push
dec
pushl
adc
push
or
js
mov
fisubrl
rcrl
es
arpl
sub
fisttps
cmpsl
test
xchg
fs
mov
jne
into
imul
pop
out
adc
shlb
mov
jae
sub
mov
jno
shll
push
sub
or
loop
dec
lea
or
or
xor
pop
lods
ficomps
rol
pop
je
outsl
or
jle
testl
xor
sbb
shl
ja
ret
mov
cltd
inc
xchg
xchg
or
hlt
loop
sarl
jge
mov
xor
jl
lods
das
push
pusha
sub
out
mov
jmp
jae
inc
icebp
ret
inc
fstpl
pop
xchg
inc
pushf
sbbb
or
pop
ds
lods
outsb
and
pop
aad
and
push
test
cld
dec
pop
sub
adc
or
pop
pop
les
push
mov
std
imulb
lods
fistl
push
popf
rcll
lods
add
imul
mov
outsb
sbb
mov
ds
lods
fwait
outsb
data16
outsl
lcall
sbb
jge
jbe
aaa
pop
outsl
pop
jae
adc
adc
cmp
pop
or
lret
les
jecxz
sti
lock
mov
mov
cmc
dec
cmpl
test
mov
push
cmp
data16
js
in
inc
nop
out
sub
sbb
pop
roll
sbb
inc
cmp
and
xor
sub
sahf
xchg
inc
add
insb
add
pop
ljmp
mov
push
mov
int3
int3
mov
inc
jb
add
cmp
dec
adcb
flds
and
outsb
lahf
test
dec
icebp
dec
insl
aas
inc
insl
je
das
movsl
dec
jge,pn
bound
xor
pop
push
push
pop
cmp
jnp
lods
cmp
sub
fwait
mov
lret
ret
and
pop
mov
push
arpl
outsl
inc
mov
cli
dec
ja
add
int
pop
outsl
dec
or
mov
xor
aad
sti
ja
sbb
mov
inc
push
pop
cmp
xor
insb
faddl
pusha
imul
hlt
bound
jb
xor
hlt
mov
rcll
mov
ficomps
or
mov
pop
mov
sub
mov
inc
out
ret
clc
jne
jb
aam
ret
sti
int3
add
xor
out
mov
xor
and
adc
and
lods
arpl
divb
push
jne
xor
xchg
xchg
push
subl
mov
pop
scas
mov
inc
int
jae
xor
shlb
orb
jmp
add
jb
or
xor
outsl
push
or
arpl
stos
push
or
cld
or
pop
mov
aad
or
mov
pop
loope
repnz
outsl
ss
xorl
mov
not
mov
xor
or
mov
mov
loop
int3
fwait
je
inc
rcll
shrb
pop
hlt
pop
scas
or
cmp
xchg
dec
das
fisubrl
cmp
ss
mov
jb
or
add
sbbl
jmp
in
out
clc
sbb
pop
or
stos
mov
lods
mov
sbbb
pop
loopne
fldenv
mov
and
hlt
mov
pop
or
jb
dec
scas
add
les
fsubrs
jno
inc
loope
pop
das
mov
push
mov
lods
rcrl
jecxz
imul
leave
dec
and
mov
push
and
sub
and
mov
sub
les
sub
pop
sbb
inc
xchg
dec
jnp
and
add
ficompl
out
icebp
pop
xchg
not
mov
div
jle
push
lcall
cmp
mov
cmc
sti
xorl
push
sbb
mov
mull
ret
and
jae
inc
outsl
mov
mov
mov
fnstsw
lods
gs
movsb
es
sbb
notl
xor
mov
mov
mov
xor
loop
jge
out
cli
cmpsb
add
pop
push
out
push
mov
mov
sbb
fwait
outsb
icebp
jl
in
xchg
in
orb
mov
inc
js
or
inc
dec
aad
lods
dec
adc
scas
push
fs
std
int
popa
sbb
jo
lret
xor
inc
jp
push
pop
sahf
sbbl
mov
mov
mov
js
add
aad
push
into
push
movsb
mov
iret
jl
adcl
js
push
mov
mov
inc
stos
fucom
adc
es
stos
test
adc
enter
fs
xchg
xchg
test
cmc
xorb
test
mov
sub
lds
cmp
in
stos
out
loopne
in
sub
mov
adc
mov
sub
sbb
inc
xchg
pop
cmc
stos
add
int
inc
icebp
push
mov
imul
aas
test
lds
sbb
dec
jnp
mov
jb
add
xchg
bound
push
jo
or
mov
pop
inc
and
loopne
and
sub
dec
push
leave
stos
add
addb
adc
negl
cli
pop
and
sti
inc
and
xchg
pusha
nop
pop
test
sarl
mov
scas
jge
out
mov
jno
cltd
insl
cmp
mov
mov
stos
in
cmp
mov
lods
sbb
dec
and
lds
loop
xor
shr
or
xlat
xchg
pop
movb
dec
arpl
cli
push
adc
cmpsl
mov
fbstp
mov
popa
pop
mov
arpl
pop
lea
jbe
incb
hlt
xchg
cmpl
pop
in
gs
cs
pop
add
dec
andl
push
xchg
jbe
sbb
or
int3
cwtl
mov
loop
jnp
inc
add
xor
and
fwait
xchg
and
xor
nop
test
cmc
out
jecxz
jg
inc
inc
add
dec
js
xor
ljmp
sbb
nop
add
push
cmp
repz
cli
mov
fldcw
mov
daa
mov
dec
cmp
and
imul
push
adc
ret
fsubl
js
lret
insl
out
test
dec
cld
iret
dec
loopne
fmuls
fwait
popf
hlt
sbb
xchg
inc
jb
inc
adc
pop
lds
fnstsw
repnz
fldenv
jl
lcall
fists
xor
push
jl
sub
pop
std
xor
adc
outsb
add
lret
adc
xchg
rorl
sub
xorl
dec
std
cmp
and
es
inc
cmp
mov
repz
mov
call
adc
negl
mov
xchg
push
int3
push
lds
xchg
out
push
xchg
push
stos
in
stc
call
push
int
hlt
hlt
les
lret
imul
sahf
fwait
pop
stos
dec
ficoms
mov
subl
mov
cld
mov
push
fimull
cmp
sti
sbb
repz
mov
mov
test
push
in
shlb
mov
jmp
pop
xchg
sub
push
in
cmp
cmpsb
cmpb
jecxz
std
jmp
jg
ret
push
cs
jne
lods
stos
lods
ret
fsub
mov
xchg
sbb
cmp
mov
push
imulb
sub
cmpsl
and
mov
cltd
xor
mov
sub
sub
cltd
inc
mov
mov
and
into
out
ss
das
cmp
ja
and
push
jae
sub
jp
iret
mov
xor
test
fsub
xor
shl
and
mov
scas
cld
or
test
xchg
xchg
cld
lret
add
pop
or
outsb
out
push
push
pop
add
mov
pop
push
imul
insb
loope
mov
cmp
adc
pop
lods
test
jmp
add
dec
mov
out
ret
stos
cli
sub
xor
loopne
pop
add
outsl
jmp
movsb
ss
inc
or
les
jmp
adc
mov
in
xchg
outsl
cld
lret
test
inc
lods
pop
or
jbe
leave
or
cld
jns
sarb
and
mov
jbe
aas
fdivr
jp
cmp
fimull
dec
int
dec
call
mov
adc
or
cmpsl
mov
mov
scas
sbb
sbb
add
xchg
gs
mov
ljmp
mov
outsl
inc
or
hlt
popf
push
jp
mov
xchg
dec
je
cltd
pop
push
jl
jmp
xchg
scas
mov
insl
imulb
push
js
mov
mov
adc
lcall
jmp
xchg
scas
mov
popf
xor
stos
es
sbb
xor
cmp
in
or
es
sahf
in
out
push
mov
mov
jo
lods
xchg
add
pop
xchg
in
cli
sub
adc
fisttpl
add
lret
scas
inc
xrelease
jge
mov
mov
xchg
stos
sbb
add
mov
ret
test
jns
mov
popa
aam
jmp
fiadds
jmp
lret
pop
mov
and
enter
xor
sbb
scas
loope
ja
sub
stos
mov
mov
or
rcrl
xlat
test
out
sahf
pop
inc
mov
int
dec
jb
jmp
loope
imull
dec
and
mov
mov
pop
cmp
call
xor
sti
push
fsubs
lds
mov
jbe
xchg
adc
pop
stc
sub
xchg
sub
inc
mov
sbb
mov
lret
ja
movl
or
ja
jle
mov
lds
mov
pop
push
push
data16
jno
xchg
mov
outsb
mov
pop
adc
cwtl
ficoms
sub
pop
and
cs
in
cmc
shrb
in
sahf
shrb
sbb
scas
jns
fnstcw
repz
das
push
hlt
fs
mov
out
mov
xor
imul
popf
add
cmp
fcmovu
inc
insb
fcoml
xchg
mov
leave
mov
repz
jle
int3
lea
xchg
mov
mov
fstps
insl
sub
repnz
fsubrl
jmp
rclb
cmp
or
xchg
rol
popa
out
push
xchg
cmp
hlt
dec
cmp
movsb
jae
sti
push
pop
stc
jp
and
imul
std
addr16
outsb
lcall
sub
xchg
movsl
pop
adc
pop
jno
andl
inc
dec
fisubl
lods
xor
mov
sbb
xor
sbb
outsl
xchg
sub
leave
pop
sbb
out
mov
inc
loop
lods
fildl
mov
adcl
xchg
test
stc
push
xlat
jo
fbld
add
lcall
sbb
pusha
xor
stos
call
flds
sbb
fdivrs
in
mov
movsb
dec
dec
es
jmp
mov
dec
push
xor
inc
xor
adc
xchg
shll
push
gs
or
or
imul
jge
xchg
mov
xchg
aam
jmp
loopne
inc
add
adc
jb
test
xlat
mov
xor
stos
outsb
roll
imul
popa
or
jecxz
cmpsb
mov
push
ljmp
xor
dec
scas
jl
call
push
in
and
push
pusha
lods
ret
arpl
jp
jle
mov
adc
test
mov
test
xor
jmp
xchg
and
popf
sbb
mov
inc
jb
sub
loopne
push
mov
pop
std
loopne
imul
push
sbb
dec
sub
mov
add
fiaddl
lods
dec
mov
xor
lret
inc
push
test
add
pop
es
data16
push
daa
jo
mov
insl
ljmp
pop
fsts
movb
sti
cmp
sub
dec
jne
sahf
sbb
sahf
pop
cwtl
das
movsb
cltd
mov
or
hlt
xor
add
adc
pop
jne
xor
pop
js
mov
hlt
pop
dec
ret
shrb
jmp
test
ret
test
pop
xchg
push
fwait
imull
inc
mov
rcrb
das
out
mov
inc
pop
xchg
mov
sub
test
mov
xlat
pop
adc
dec
sbb
xor
and
adc
daa
jmp
xchg
in
lds
mov
lcall
test
push
jo
mov
and
inc
dec
leave
dec
fisubrl
add
xor
pop
inc
pop
es
pop
mov
cmc
lret
cmpsl
inc
orb
sbb
inc
xchg
dec
mov
and
cmp
dec
out
pop
dec
lret
xchg
out
mov
pop
addr16
pop
mov
cmp
popa
jle
push
fwait
mov
inc
icebp
sti
mov
pusha
mov
movb
sbb
cmpsb
stc
inc
xor
out
xchg
sti
bound
push
mov
fisttps
xchg
pop
aam
mov
mov
inc
xorb
repz
xor
sti
push
fsubs
inc
sub
adc
dec
mov
push
cs
daa
stos
and
lods
jl
and
loop
jb
in
ficoms
mov
test
cltd
pushf
fcomp
mov
sahf
adc
mull
loope
dec
insl
inc
data16
jp
popa
movsl
sub
lds
dec
pop
jp
sub
clc
mov
jae
ja
pop
sahf
and
mov
push
mov
xchg
pusha
scas
dec
and
testb
xor
popf
lods
test
sbb
push
pusha
xor
adc
loope
xor
mov
or
cmp
sub
jae
dec
and
data16
xchg
jns
pop
fistps
into
mov
xchg
mov
dec
push
hlt
fdivrs
jnp
jb
sub
out
pushw
cmpb
inc
sbb
insb
ds
and
cmc
cmp
das
cmpsb
mov
xchg
sub
daa
push
pop
jno
in
call
dec
outsl
pop
idiv
push
daa
push
pop
es
xchg
pushf
mov
and
push
movsb
insl
jae
mov
xor
ss
cwtl
out
or
negb
jnp
test
pop
sub
iret
stc
stos
dec
cmp
sti
adc
mov
inc
in
add
inc
lock
ja
lret
cmp
scas
pop
xchg
and
push
test
iret
push
push
jb
xchg
jno
test
mov
xlat
out
cwtl
push
cmp
lcall
inc
xchg
xchg
clc
sub
xchg
pop
push
pop
shlb
and
pop
imul
mov
push
xor
xor
dec
cmp
sub
inc
cmp
fcoml
lret
adc
inc
xor
xadd
fwait
pushl
cmp
xchg
movhps
repnz
mov
push
pop
jns
fisubrl
test
in
rcrb
sarl
sbb
or
push
repz
out
xor
jge
push
xor
xchg
les
cmpsb
aad
push
jmp
mov
xlat
push
push
arpl
cld
daa
cli
lahf
daa
in
cmpsb
push
cmc
jge
mov
pop
ret
call
push
pop
cmc
xor
mov
xor
or
ja
inc
mov
jno
cwtl
out
jae
daa
or
ljmp
jae
test
subl
mov
push
imul
fsubrs
xchg
mov
inc
adc
loopne
sbb
mov
jno
int3
xor
lock
pushf
add
mov
shll
ss
pop
push
daa
sub
mov
cmp
sbb
fucom
popa
cmp
lcall
in
imull
iret
aas
hlt
push
sub
xchg
jns
mov
push
mov
mov
sti
jge
outsb
ds
adc
sub
dec
rclb
sbb
cmp
mov
pop
subb
fadds
dec
push
gs
int
and
gs
dec
add
mov
sbb
push
loop
sub
sbb
lock
nop
nop
fistps
mov
idiv
cmc
jbe
pop
jle
and
adc
ret
fs
push
shll
cs
in
jns
jg
add
das
call
xor
jg
mov
insb
rclb
sub
xchg
int3
icebp
lods
cmc
inc
add
inc
into
cmp
jbe
shrl
out
aam
jle
and
and
inc
ret
pop
push
ja
xor
fwait
dec
push
jns
les
add
mov
jle
jecxz
add
mov
sub
fbld
fiadds
cmp
inc
adc
cmc
ficomps
insl
mov
test
add
sub
pop
stos
in
and
pop
outsb
or
sbb
orl
jne
or
xchg
shrl
push
push
test
xchg
push
push
imul
pushl
es
adc
sbb
add
ret
mov
cmpb
aam
mov
aam
xor
inc
mov
xchg
sbb
cmp
sub
lods
jnp
push
xchg
int
rol
jp
daa
jp
or
mov
fcomps
mov
int3
and
cltd
mov
in
jl
sbb
scas
dec
jecxz
mov
mov
testl
inc
jg
fptan
rclb
jl
hlt
dec
xor
frstpm(287
dec
or
mov
testb
cmpsl
gs
insl
mov
cmp
jnp
xchg
es
sti
and
lock
push
push
mov
jge
into
out
test
jmp
enter
mov
jns
pop
sbb
bound
popa
cmc
movsb
mov
push
scas
inc
pop
stos
cmpsb
add
es
dec
scas
lret
test
xor
lret
push
mov
iret
movsl
adc
out
add
rcl
xchg
popf
push
jmp
lret
mov
loope
xor
mov
in
scas
ljmp
fisubrl
sub
je
or
mov
scas
rorl
ja
ret
cmpsl
fsubrs
xchg
call
pop
shlb
push
int3
jns
cmpsl
cmp
jp
mov
xchg
push
mov
movsb
in
dec
clc
sahf
lret
mov
in
pop
cmp
inc
stos
add
inc
ficomps
sub
sub
push
scas
mov
lahf
shll
dec
cmp
mov
mov
int3
adc
xor
jb
adc
push
mov
stos
ds
dec
sbb
and
adc
cltd
sbb
popa
lahf
or
addl
pop
addr16
sub
aam
mov
les
outsl
insl
push
inc
je
inc
cmp
cwtl
or
pop
out
outsl
jno
jl
adcb
cltd
popf
push
ret
pop
jmp
pushf
std
imul
mov
lods
shrl
fwait
cs
pop
jne
ljmp
pop
enter
cmp
cmp
cmp
enter
xchg
xor
loopne
mov
sub
cld
sbb
sarb
arpl
ret
jl
xor
mov
ds
xor
call
aaa
cltd
mov
jb
pushl
mov
dec
insb
call
push
add
add
mov
ds
int
sysenter
adc
fldt
push
adc
bound
adc
sub
iret
vpavgb
and
jo
adc
sahf
xchg
outsb
mov
xchg
cmp
jne
ffree
stos
mov
pushl
sub
jno
xchg
xchg
outsb
popf
and
mov
bound
popf
push
rolb
push
bound
mov
out
repz
and
mov
xchg
pusha
lods
cmp
aaa
stos
pop
xchg
inc
inc
dec
xchg
push
jnp
daa
xor
sub
pop
adcl
push
lahf
imul
mov
testb
fcoml
test
shll
incb
stos
mov
sub
popa
mov
daa
fstl
das
ljmp
fldl
add
insb
cmp
jne
xchg
aaa
pop
in
mov
hlt
movsl
les
decl
sbb
fidivl
push
nop
js
inc
cmp
sar
cmc
pop
dec
loope
pushf
jecxz
ljmp
xor
or
cmpsl
sbb
fwait
test
push
sub
mov
shlb
jp
shlb
cmp
mov
push
ds
mov
ja
mov
mov
ret
lods
dec
or
xchg
xchg
jne
sub
clc
ja
mov
fsubl
lods
sub
fistl
mov
add
cmc
in
mov
imul
pop
aam
sbb
movsb
js
jg
cmp
xchg
mov
xor
fwait
test
ds
loopne
adc
pushf
jle
push
pop
ljmp
jmp
aam
lret
mov
bound
sub
lea
bound
ljmp
pop
stc
data16
sub
push
lds
xor
movsl
push
mov
cwtl
dec
or
xor
ljmp
sub
out
nop
hlt
ds
push
xchg
and
inc
aaa
mov
lcall
add
and
ret
add
add
test
sahf
dec
cwtl
cwtl
or
xchg
and
xorl
add
mul
jle
xlat
cmpsl
rcrb
loop
add
jl
or
mov
test
mov
adc
in
push
inc
xchg
iret
pop
test
out
or
sarb
add
xchg
insb
or
dec
lds
mov
fcomps
add
leave
popf
fdivl
sub
dec
pop
mov
loop
rolb
jnp
jp
nop
repnz
inc
cmp
mov
ljmp
lahf
jne
nop
sub
mov
fisttpll
xchg
pop
frstor
pop
sub
sub
push
es
inc
adc
mov
jo
fists
mov
push
mov
push
jecxz
cld
and
aas
lret
pushf
sti
jnp
sbb
xchg
dec
mov
mov
paddd
inc
cmc
sbb
imul
je
push
arpl
sub
jo
std
inc
stos
shlb
in
or
movsl
lock
aam
add
ds
clc
dec
iret
mov
fidivs
push
cmp
dec
or
mov
fists
out
jae
test
test
add
ret
repnz
das
or
pop
fsts
or
xchg
mov
mov
push
or
push
dec
adc
mov
hlt
rcl
or
sub
xchg
cwtl
fistps
xor
iret
popa
mov
push
dec
mov
jecxz
aas
cmp
stos
hlt
aas
inc
imul
cmpsl
mov
out
shlb
stos
lret
negb
outsl
rcr
ds
sbb
fiadds
stos
mov
jne
or
ror
and
test
xor
int
cltd
fsubs
pop
es
or
pop
popf
lret
mov
lea
data16
mov
icebp
inc
cmpsl
xchg
rorl
adc
pop
fucomp
mov
and
add
dec
daa
repnz
popa
mov
out
inc
ffreep
pop
mov
sub
xor
cld
scas
dec
lock
gs
add
or
adc
jl
sub
push
hlt
jo
pop
dec
decl
sub
fisttps
and
push
cltd
lock
add
nop
dec
das
loop
xchg
fiaddl
cmpsb
shrb
stc
push
inc
adc
jns
cltd
fdivrp
xlat
sub
hlt
mov
movsb
xchg
nop
enter
scas
mov
nop
ds
icebp
fnstenv
dec
mulb
cmp
push
ss
arpl
in
das
xchg
enter
fsts
jns
xlat
pop
dec
push
arpl
arpl
popf
test
inc
lds
or
rcr
cmpsl
pop
cmp
loop
stos
xor
repnz
lcall
sbb
cltd
hlt
es
lret
lods
xchg
insl
pop
out
or
fldenv
cmp
push
or
sbb
sub
xchg
fidivrs
add
negl
add
jne
jbe
stos
ss
gs
mov
push
inc
pop
shr
je
or
push
movsl
in
sub
xchg
xchg
push
push
cli
movb
je
bound
jge
aad
or
rcrl
dec
repz
lahf
or
and
xor
xor
ljmp
mov
imul
shr
jns
xchg
das
fsubrp
loope
fistpl
pop
push
das
jbe
sbb
hlt
shll
pop
jns
data16
mov
pop
test
mov
jbe
int
idiv
push
sahf
xchg
cmc
pop
ljmp
fildll
rorl
lock
lea
push
xor
pop
jo
sbb
inc
lea
pop
sbb
decl
lret
shll
cmp
aaa
ja
jne
ds
lds
jmp
jmp
xchg
lret
std
cltd
cmp
dec
sub
imul
mov
pop
hlt
mov
loope
cmc
inc
int3
sbb
cmp
lods
adc
mov
xor
inc
loope
repz
push
push
sbb
mov
popa
aaa
mov
jns
cmp
andl
notb
mov
negb
jg
mov
xchg
pop
stc
pusha
mov
movsl
dec
lds
orb
imull
ret
mov
stc
xor
fwait
test
rcrl
add
jo
add
movsl
sbb
lahf
add
setbe
push
push
mov
inc
movsb
pop
imul
testb
cltd
xchg
cmpl
das
lods
adc
push
cmp
jecxz
jmp
pop
dec
add
adc
jge
xchg
sahf
mov
mov
repz
in
pop
inc
pusha
sbb
adc
pushf
xor
adc
sbb
aam
pusha
das
out
mov
cmp
jp
push
cmpl
and
add
ss
mov
mov
cwtl
icebp
push
jno
jmp
aam
dec
push
pop
and
fisttpl
or
add
xchg
push
fsubs
outsb
adc
inc
jae
xchg
leave
pop
scas
popf
inc
dec
clc
nop
push
in
imul
aam
xchg
mov
cltd
repz
and
nop
pusha
ud2
inc
mov
fdivrs
ret
adcb
or
hlt
inc
jns
mov
bound
or
ret
or
lea
cmpsl
push
adc
jae
ss
out
xchg
pop
dec
in
dec
add
subl
mov
fwait
mov
mov
and
test
loope
pop
clc
xor
loop
imul
and
in
and
dec
jo
xor
push
xchg
test
fisttps
or
popa
outsb
and
push
popf
pop
inc
out
arpl
push
mov
lret
in
cltd
pop
insl
sbb
das
dec
int
cmpsb
andb
jmp
mov
out
cld
mov
xor
out
test
pop
mov
mov
xor
add
addr16
sub
pop
add
mov
in
xor
loopne
mov
mov
insb
loopne
cmp
daa
cmp
adc
xlat
test
inc
hlt
xchg
aas
inc
pop
add
sbb
pop
jbe
insb
jge
xchg
loop
adc
xor
fs
notb
lods
pop
loop
sub
out
outsl
pushf
inc
and
dec
jecxz
subb
mov
js
mov
push
mov
fsubp
inc
aaa
mov
test
cmp
loopne
push
icebp
push
xchg
test
popf
divb
adc
arpl
add
ret
bound
test
jg
movb
andb
loop
or
mov
std
push
jge
icebp
test
in
stos
rorb
dec
lds
jns
sti
subb
inc
scas
loopne
add
xchg
dec
pop
mov
daa
test
cmp
insl
aad
mov
out
xchg
cmc
shll
pop
bound
test
divl
rcrl
adc
mov
imul
xchg
inc
jge
jge
addb
ss
xchg
mov
hlt
out
add
mov
pop
xchg
sbb
pop
fwait
xor
sub
arpl
imulb
es
rcrl
adcb
pop
sub
lcall
js
adc
outsl
test
repz
cli
pop
xchg
sbb
mov
test
xchg
push
vcomisd
stos
fisttpl
jo
fdivl
incl
ficoml
aaa
mov
fs
aam
ds
sub
or
and
scas
xor
mov
xchg
test
popa
jmp
fxtract
sub
addr16
xlat
imul
shlb
jmp
xlat
inc
mov
inc
nop
ret
sub
std
push
sbb
insb
shrb
mov
scas
scas
add
aaa
mov
call
jg
add
shlb
sbb
arpl
adc
mov
je
subb
cmpsb
mov
lock
fldl
leave
xor
cmp
inc
cs
add
push
lret
sub
cltd
dec
adc
lods
inc
sub
in
test
xchg
cmp
fcompl
lret
repz
cmp
pusha
mov
iret
and
sub
movsl
jge
lret
sub
loop
js
xchg
nop
push
out
cmc
push
jbe
jle
mov
inc
jnp
fwait
test
ja
push
dec
and
sti
sbb
je
and
dec
stos
xchg
pushw
fistps
and
cs
movsl
sbb
dec
bound
xchg
fcomp
sti
cwtl
inc
dec
jp
cmp
stc
cmpsl
jns
pop
lea
or
out
sub
adc
xor
xor
out
ret
lahf
scas
hlt
mov
scas
sti
sbb
cmp
std
dec
hlt
inc
jecxz
fildl
sbb
add
sbb
mov
cmp
aaa
or
or
dec
mov
movsl
sti
mov
sub
test
pop
inc
add
add
rcll
sbb
fcomip
xor
dec
hlt
xchg
loope
aam
pop
jecxz
sub
scas
neg
lods
outsb
daa
or
fmuls
les
test
in
punpckhwd
xor
gs
std
push
addb
ljmp
aas
andl
adc
or
and
cltd
add
mov
aaa
adc
addl
repz
in
pop
sbb
fadd
xchg
cmp
je
push
mov
int
lods
scas
mov
loopne
sahf
mov
mov
pusha
pop
xor
imul
repz
sub
lds
push
mov
pop
or
ficoml
notb
cmpsb
sub
mov
lcall
fs
insl
das
shrl
jno
out
jbe
shlb
arpl
pop
cmp
mov
mov
lds
sub
imul
push
mov
inc
and
sub
pop
jbe
popa
cmp
cld
jb
push
mov
lods
mov
lahf
hlt
mov
ret
jmp
xor
test
cwtl
push
xchg
shll
xor
pop
push
jne
pop
lds
xchg
call
mov
sbb
fmull
daa
xor
sbb
push
int
mov
mov
add
xor
icebp
xchg
sbb
sub
out
jno
fucomi
push
push
je
push
imul
jae
daa
fdiv
loopne
inc
dec
incb
icebp
bound
pop
jne,pt
jns
add
test
xor
in
xchg
into
decb
orb
or
jp
mov
cltd
mov
inc
pop
jmp
leave
mov
push
dec
xor
mov
shll
jge
and
lcall
daa
nop
mov
in
dec
pop
test
cmp
je
rcll
adc
sub
out
inc
out
pop
bnd
cmp
adc
in
stos
xor
fildll
add
icebp
pop
jne
push
xchg
out
and
sbb
enter
out
sub
addb
dec
rclb
jno
lret
rcrb
sbb
cmp
nop
xchg
mov
cld
cmp
je
pop
lret
mov
lock
dec
insb
mov
add
xchg
sbb
ficoml
push
lcall
xor
push
mov
in
sub
icebp
mov
or
arpl
cmp
popa
mov
pop
mov
lahf
adc
pushf
cld
xorl
rcll
jg
int3
mov
cmp
push
push
in
orl
test
nop
xchg
xchg
imul
int
aaa
xchg
mov
fcomp
cwtl
dec
jb
dec
outsb
sub
mov
shl
adc
push
sub
push
mov
out
add
das
cmc
test
jl
and
sbb
ja
insb
rolb
daa
incl
pop
jmp
push
frstor
outsb
rcrl
ficompl
test
inc
test
push
aas
outsl
insb
popf
push
cmp
movsb
mov
jns
push
clc
sbb
cmpsl
adc
xor
mov
jb
jno
addl
fidivrl
iret
jp
gs
jecxz
xor
lock
cwtl
inc
incl
jo
sbb
pop
sbb
ficomps
and
rcr
dec
ss
xor
sbb
jae
mov
pop
xchg
pop
inc
xchg
mov
and
mov
adc
cli
out
lock
push
add
shrb
dec
in
adc
jbe
lcall
enter
mov
out
or
cmp
xchg
aad
lret
inc
cmc
push
adc
icebp
mov
or
pop
cmp
inc
lock
xchg
cld
xchg
bound
jecxz
outsb
lea
mov
push
mov
xchg
ret
shlb
inc
pop
mov
test
in
aad
rep
stc
mov
mov
sub
dec
inc
or
xchg
addl
test
xchg
popa
mov
ja
adc
loopne
aad
adc
sti
push
sub
fcompl
imul
fcomip
push
fistl
int3
mov
ret
fcomp
pop
add
mov
adc
sbb
sbb
or
mov
fimull
test
rol
aam
fidivs
adc
arpl
push
and
mov
cmc
and
pop
imul
rorl
adc
or
and
sbb
in
cwtl
ss
mov
jp
mov
adc
jnp
aad
loopne
mov
and
outsl
in
mov
iret
adc
xchg
mov
repnz
adc
es
jg
jae
shll
clc
mov
adc
sbb
addb
roll
inc
jecxz
sbb
rorb
cmp
xchg
in
jns
xor
xor
int
insl
popf
popa
in
mov
out
mov
pop
push
ja
sarb
orl
dec
inc
scas
adc
lock
subb
in
dec
cmc
sti
inc
test
rol
leave
push
adc
popa
adc
sub
aam
or
mov
out
xchg
jae
or
in
mov
ds
jbe
fwait
xor
cld
std
mov
repz
in
jle
inc
fidivs
icebp
fcmovnbe
dec
ror
lcall
cltd
mov
inc
into
out
add
fisubrl
push
pushf
add
push
jns
adc
add
hlt
mov
ss
int3
jb
sbb
shl
sub
ret
aad
iret
cs
int3
cltd
pop
scas
in
aad
inc
push
je
or
clc
stc
jg
popa
dec
or
xchg
xor
lods
lcall
sbb
out
call
mov
dec
push
dec
xchg
fstpl
jl
test
in
lcall
pop
insl
jp
int3
mov
jne
in
mov
or
and
jnp
cltd
fdivs
xlat
sbb
int3
imul
lods
lret
scas
stos
pop
dec
push
add
inc
int
pushf
aam
bnd
sub
fwait
mov
outsb
scas
std
ljmp
ret
sub
pop
out
and
dec
pop
scas
ret
out
scas
add
fildll
pop
dec
shrl
inc
addr16
push
mov
sbb
cmc
insb
rcrl
int
hlt
mov
sbb
push
pop
insl
mov
and
lret
dec
dec
jo
pop
mov
adc
lahf
mov
push
push
pop
clc
mov
sbb
adc
in
dec
out
lds
push
xchg
leave
cmp
xor
inc
wbinvd
fistl
enter
inc
pop
xor
les
cmc
jno
loop
sbb
ss
inc
cmp
fdivrl
xor
cmp
pop
jns
sbbl
add
mov
jecxz
adc
ss
divl
pop
sarl
xor
leave
dec
and
mov
push
and
inc
imul
filds
pop
clc
sbb
int3
mov
in
mov
xor
sbb
lods
pop
mov
xchg
xor
or
in
sahf
mov
sbb
cmc
add
outsb
sti
pop
cmp
mov
shr
ljmp
lret
out
nop
dec
lahf
adc
mov
adc
fistl
movsl
cmp
mov
movsb
int
and
xchg
fidivrl
jnp
int3
aam
test
mov
imul
push
or
push
int3
sbb
dec
xchg
cs
mov
push
imul
js
mov
sub
pop
out
pop
aas
stos
nop
cmp
gs
sar
and
pop
mov
cmp
aas
ret
pushf
pop
add
or
cli
int
daa
popa
dec
mov
loope
xchg
mov
icebp
ss
outsl
cmc
jne
cli
mov
ret
pop
and
mov
rol
adc
cli
mov
sub
add
js
adc
adc
rcl
or
or
imul
stos
test
lcall
jnp
je
ds
fisubs
addb
push
int3
repz
push
stos
push
lahf
fisttpll
lret
xor
das
mov
add
and
adcb
mov
jo
dec
jl
lds
cwtl
pop
fnstenv
js
sub
leave
xchg
aad
out
or
ret
fisttpll
and
icebp
push
add
adc
xchg
aam
mov
rorl
icebp
dec
jecxz
jle
enter
mov
in
push
mov
inc
cmp
lds
testl
loop
addr16
fstps
orb
movsb
cs
std
ljmp
xor
insl
push
dec
jo
hlt
jb
or
adc
aaa
adc
pop
gs
dec
data16
add
pop
popa
xlat
mov
jb
loop
jns
jns
mov
and
mov
pop
jmp
fs
sbb
mov
addr16
inc
or
dec
inc
fisttpll
lret
push
iret
aaa
push
in
stos
sbb
lds
cmp
inc
inc
arpl
sub
sbb
xchg
cmp
dec
mov
pop
add
scas
cwtl
lcall
and
ror
cmpsl
fidivrl
mov
test
imul
loopne
or
or
lock
mov
xlat
cmpsl
sahf
jne
sub
imul
std
adc
pop
call
call
xor
sti
push
fsubs
loop
inc
int3
pop
add
in
mov
cwtl
pop
and
mov
dec
mov
rcrl
test
xchg
scas
jne
fucomip
pop
push
jb
icebp
sbb
mov
insl
jb
or
in
out
test
or
push
jb
fwait
pop
xchg
je
sbb
shl
iret
icebp
test
pop
mov
mov
fnsave
sub
or
insl
jge
jne
mov
add
mov
dec
addl
js
fistpl
or
test
mov
add
push
xor
lds
aam
and
xorl
fists
mov
cmp
push
jle
outsb
fdivs
add
add
cwtl
ss
xor
jle
les
mov
dec
aaa
xor
push
fmull
lds
hlt
cmp
in
rorb
mov
and
mov
iret
orl
ret
scas
rcl
pop
jge
fidivrs
xor
pusha
repz
shl
popf
dec
mov
jno
std
inc
iret
xchg
popa
xor
ret
push
dec
icebp
or
imul
enter
je
push
xchg
mov
stc
jmp
add
es
lods
ss
jns
adc
mov
lods
lret
jbe
aaa
aas
lods
pop
roll
cmp
fsubl
les
add
and
xchg
aad
imul
filds
inc
add
aaa
daa
mov
popa
lret
sbb
xor
sub
addr16
movsb
stos
mov
inc
add
fwait
jo
daa
or
add
sbb
dec
mov
sarl
cmp
sub
sub
in
aam
inc
inc
scas
ret
and
push
adc
orl
mov
popa
sbb
testl
xchg
xchg
pop
cmpsl
loop
inc
dec
push
push
js
cmpsb
repnz
pop
cwtl
std
lcall
mov
adc
lods
std
lods
mov
aas
adc
fdiv
fstpl
jg
jb
jmp
jns
lds
in
sub
pushf
xor
test
push
add
fnstcw
outsl
les
mov
add
or
fsincos
sub
pop
test
ds
fildl
sbb
or
dec
mov
pop
repnz
clc
xor
jmp
aaa
hlt
mov
pop
pusha
not
adc
push
ja
out
adc
stos
mov
es
and
andb
ss
daa
jns
xorl
jge
add
test
movsb
inc
or
mov
icebp
mov
scas
in
dec
dec
xor
bound
je
xchg
mov
push
dec
or
jo
fdivrl
mov
xbegin
popa
mov
adc
xor
push
mov
dec
out
lea
pop
pushf
xchg
xchg
rclb
add
push
andl
xchg
mov
sub
jle
movsl
or
in
rcr
push
push
sub
xchg
sti
sbb
inc
in
out
pop
ja
add
bound
fldt
fdivs
add
mov
aaa
cmp
and
or
jns
sub
push
leave
mov
test
xchg
mov
es
daa
jl
call
pop
sbb
sbb
xchg
push
xor
ficoms
adc
xchg
shr
xchg
or
sarl
mov
sub
mov
sub
aam
cmp
add
fstpt
pop
test
inc
xor
push
in
inc
fisubrs
cmp
mov
cmp
out
ret
mov
push
adc
hlt
or
or
jmp
sub
aad
loopne
cmp
xchg
mov
cmc
push
cmp
insl
mov
jns
xor
and
mov
push
mov
aad
add
xor
sahf
xor
sbb
inc
xor
sub
inc
xchg
mov
push
pop
imul
mov
or
sub
addr16
pop
sub
jmp
xchg
pop
clc
es
inc
popa
pop
in
adc
arpl
mov
pushf
sbb
mov
mov
mov
rcrl
imul
mov
stc
inc
mov
and
and
jno
les
movsl
outsb
or
cs
in
adc
mov
insb
rol
loopne
jnp
repz
xchg
lock
pop
dec
jae
sbb
sbb
dec
cmp
cmp
pop
ds
addr16
lods
adc
add
scas
pop
pop
aam
and
adc
lahf
mov
stos
insl
cwtl
xor
sbb
loope
out
sbb
pop
mov
cmpb
ds
lret
and
jl
xchg
pop
icebp
inc
pop
rcl
jg
xor
push
lods
mov
int3
jns
pop
inc
insb
rorl
mov
addr16
pop
pop
pop
fdiv
push
sub
repz
js
sti
xchg
jle
or
pop
pop
rcrb
xor
xchg
popa
dec
fists
mov
adc
jmp
test
ret
pop
xor
pop
inc
cmp
icebp
sub
xor
jae
lahf
scas
mov
gs
dec
pusha
adc
lret
sarb
mov
cmp
ja
lds
into
xchg
dec
addb
push
mov
in
inc
in
inc
mov
jae
pop
scas
pop
sub
repz
push
pop
iret
jmp
dec
add
or
out
cwtl
pop
shrb
dec
iret
sbb
jmp
fs
test
pop
jmp
addr16
push
mov
ret
sub
mov
insb
cwtl
stos
jle
popf
xor
and
xor
clc
push
and
xchg
cmp
xchg
js
dec
cmp
nop
lret
add
loopne
jl
pop
cwtl
adc
fdivrl
sub
dec
fdiv
loopne
aam
xlat
mov
int
xorl
lds
adc
and
adc
fucomip
sbb
jmp
in
mov
repz
xchg
jle
nop
mov
rcrb
mov
loope
jns
movb
mov
outsl
lods
sti
das
jo
rcrl
outsl
sub
and
push
add
pusha
adc
inc
push
test
adc
mov
cmpsl
outsl
push
pop
outsb
fistps
stos
xchg
sarb
insl
sahf
cmpsl
sub
pop
push
sub
orb
ror
inc
loope
lcall
scas
repz
pop
test
xchg
dec
insl
mov
test
popf
xor
or
fstl
rclb
pop
insb
cmp
xchg
stc
xorb
repz
aam
orb
stos
mov
cld
hlt
and
aad
jnp
imul
leave
shlb
cmp
adc
arpl
cld
shrl
jmp
addl
pop
ds
jl
add
sub
cmp
imul
push
shl
mov
cmpsb
cs
test
sbb
mov
mov
mov
enter
lahf
adc
mov
cmp
fsubr
xchg
movsb
jecxz
sub
sbbl
inc
add
dec
pop
and
leave
jg
add
mov
enter
call
out
jns
scas
inc
insb
dec
mov
add
add
or
lcall
popa
and
outsb
daa
pop
js
xchg
cmp
les
dec
fisttps
mov
rcrb
mov
sbb
loope
adc
imul
sbb
jle
xchg
stos
mov
sti
inc
add
lcall
xor
mov
pop
xor
stc
add
repnz
fidivrs
sti
mov
out
xchg
mov
or
subl
add
mov
call
aaa
leave
and
dec
mov
aam
cmove
adc
add
test
addb
les
popl
aad
pop
pop
hlt
outsb
test
jne
mov
clc
nop
xor
sub
sti
lods
imul
movsl
enter
cmp
sbbb
fstl
cmp
pushf
or
cltd
out
fiaddl
fmull
add
cli
inc
insb
sar
repnz
sub
jb
and
and
add
mov
das
jae
mov
stos
cs
mov
pusha
leave
mov
scas
pop
cmp
xor
lods
pop
pushl
inc
std
jno
ja
fstp
nop
fbld
ljmp
cmp
jecxz
dec
adc
jne
push
fstpt
cmp
sbb
mov
inc
sahf
movsb
fwait
outsl
jle
adc
sbb
out
fists
cmp
ljmp
mov
xor
pop
inc
in
adc
and
sub
inc
leave
cmc
xchg
in
mov
outsl
jbe
mov
mov
icebp
or
out
pop
mov
push
call
mov
call
dec
call
xor
sti
push
fsubs
shl
xor
and
mov
sbb
mov
test
xchg
adc
cmc
les
jo
lret
lea
shlb
aaa
lea
aam
mov
aad
cmp
dec
cwtl
shll
adc
mov
test
add
and
and
icebp
into
and
js
imull
pop
addr16
add
adc
jp
jg
lods
shll
rcl
push
nop
push
mov
bound
dec
scas
enter
xor
aad
lods
repz
lcall
jo
dec
xchg
inc
jmp
insl
lret
jb
popa
push
adc
test
sbb
dec
popf
dec
dec
adc
or
int3
xchg
sbbb
xchg
mov
pop
pop
daa
cmp
movsb
insl
cmpsl
xchg
mov
mov
aas
aaa
jle
lret
lret
iret
das
arpl
and
and
cld
xchg
pop
and
ret
cmc
scas
or
clc
pop
sub
mov
rcll
fdivrs
mov
jnp
add
nop
loop
sbb
movsb
xor
jno
fbld
stc
or
mov
mov
xchg
push
inc
insl
sub
xor
cmp
cmp
pop
subl
out
xchg
faddl
mov
data16
cmpsb
add
mov
insl
xor
mov
testl
push
scas
call
out
ror
push
mov
mov
cmp
push
loope
orl
loop
mov
cmp
xchg
xorl
out
or
dec
jno
sub
mov
test
inc
jbe
xchg
push
inc
jecxz
fmull
sub
sub
sub
lods
lock
adc
lock
cwtl
std
mov
andnps
jge
xor
mov
std
int3
das
sbb
and
icebp
mov
mov
xchg
xlat
mov
and
mov
lahf
pop
fwait
cmp
cwtl
sbb
mov
mov
aaa
dec
lock
push
sub
sub
fwait
test
rorl
lret
loopne
jle
arpl
std
xor
jl
cmp
lds
inc
gs
jge
out
mov
pop
mov
ret
add
out
test
outsl
mov
jne
add
dec
adc
push
repnz
or
cmpsl
out
subl
lock
in
mov
out
mov
fisttpl
ljmp
repz
gs
fwait
or
ror
imul
mov
insl
insb
nop
shrb
inc
je
outsl
cmc
xchg
dec
into
push
out
fbstp
xchg
dec
leave
xor
pop
aam
jnp
ja
inc
push
pop
jo
rclb
ja
or
xor
ds
push
or
fs
adc
dec
jns
xchg
jmp
dec
jno
cli
or
xchg
inc
rcl
sahf
pop
push
dec
fnstsw
test
mov
fsubr
push
xchg
cs
adc
adc
or
xlat
fsubs
add
or
push
in
xor
sub
addb
stc
jae
movsl
pop
adc
std
mov
xchg
sbb
aaa
mov
lret
mov
jg
daa
insl
jo
mul
fsubrs
scas
mov
jo
stos
add
negl
and
cmp
xchg
xchg
mov
dec
mov
pop
stc
les
pop
pop
inc
das
mov
loopne
and
xchg
fnsave
push
js
test
cmp
popa
sub
aas
xchg
scas
mov
cmpsl
shll
iret
sbb
das
push
jg
call
movsl
hlt
jge
mov
sub
test
enter
sub
jae
sub
xor
xlat
adc
pop
cmp
xchg
dec
sbb
stos
and
std
inc
inc
inc
cmp
fs
lahf
leave
sahf
dec
mov
xchg
enter
aam
pop
mov
or
repz
xchg
lcall
ret
mov
shlb
out
fdivr
es
in
pop
add
ret
negb
and
jbe
mov
popf
xor
lods
ss
sub
xchg
rolb
ror
rorl
push
fistpll
and
lods
and
jle
add
xor
jno
mov
dec
dec
cmp
fbstp
popa
mov
dec
in
and
mov
add
mov
jbe
push
adc
pmulhuw
addr16
mov
nop
cs
out
pop
cmp
lods
std
outsl
add
xchg
jns
arpl
adc
jmp
out
inc
divl
pop
insl
rcll
aas
dec
imul
cs
mov
mov
orl
testl
cmpsb
test
fnstcw
fidivl
das
es
or
mov
mov
aas
dec
lock
lcall
xor
inc
mov
or
testb
shrl
xor
mov
insl
fnstcw
test
pusha
aas
pop
cs
jbe
pusha
movsl
dec
loop
mov
push
dec
mov
sub
jle
repnz
xchg
xor
pushf
inc
fldenv
add
rorl
outsb
or
aad
pop
add
ficoml
mov
mov
jno
sbb
jge
pop
repnz
test
stos
push
sarb
xchg
add
rolb
sti
sahf
inc
push
cltd
rolb
sub
push
fcoms
shr
lods
stos
sbb
arpl
push
lea
hlt
shrl
jne
lock
push
pop
les
mov
lods
cmp
add
cmp
test
inc
pop
nop
in
push
cmpsl
mov
sbb
cmc
in
push
push
icebp
ss
lods
adc
mov
rcrb
xchg
imul
xor
xor
inc
xlat
sbb
leave
les
fs
adc
cmp
int3
sbb
cmc
inc
dec
lock
mov
jmp
jecxz
push
mov
out
add
sub
cmp
xor
and
sbb
mov
cltd
rcr
ret
movsb
repz
mov
test
fcmovu
adc
into
push
insl
mov
push
repz
inc
cld
inc
das
fdivr
cli
cmp
mov
cmp
popf
aaa
push
sarl
sbb
in
mov
cvttps2pi
mov
test
lret
data16
inc
xchg
or
jle
aad
cmp
sub
lock
lock
mov
mov
outsl
scas
push
sub
sahf
inc
xchg
cmp
jle
rcll
mov
sahf
mull
cmp
xchg
loopne
sbb
push
jp
shlb
cmp
sbb
push
jle
leave
rorl
mov
xchg
test
shl
inc
or
popf
sbb
inc
mov
ja
sub
mov
cmp
sbb
lahf
pop
xor
sahf
pusha
mov
pop
test
int3
xchg
test
add
jmp
call
outsl
in
xor
ret
ficoml
xor
pop
imul
jge
test
int
loope
sub
aaa
ljmp
je
rcrb
pop
mov
jecxz
arpl
xor
fstpt
mov
orl
or
rcl
dec
or
and
fidivl
loop
jno
push
xor
jbe
loopne
loop
shlb
push
adc
mov
call
sub
adc
mov
xlat
popa
sub
scas
mov
sub
aam
je
in
push
or
pop
xor
push
outsl
push
jg
jmp
sub
mov
push
cwtl
fisttps
scas
mov
test
mov
lods
pop
pushw
or
xchg
adc
stos
push
cwtl
repz
or
arpl
loope
test
popa
inc
punpckhwd
loop
add
and
xchg
inc
add
lret
andb
mov
add
mov
adc
xchg
jbe
mov
sbb
adc
ds
imul
adc
cmp
mov
push
push
stos
in
orl
fiaddl
ljmp
test
cmp
imul
xchg
insb
mov
jmp
pusha
xchg
mov
push
stc
lea
mov
jmp
lock
mov
pop
daa
test
pop
cmp
ficomps
xchg
dec
scas
pop
outsl
insb
addr16
push
lret
loope
hlt
xor
adcb
mov
and
jb
sahf
pop
in
lret
sti
mov
ss
mov
push
divb
aaa
fimuls
mov
fwait
jb
inc
insb
fsubrl
test
cs
dec
pop
pop
add
sbb
jge
popa
adc
fcoml
daa
inc
pop
movsb
push
mov
inc
or
outsb
adc
and
xlat
ja
sub
cs
rcl
cmc
test
ret
pop
js
inc
or
ja
rclb
adc
lds
movb
js
mov
scas
fisubrl
jns
std
jno
xchg
inc
add
add
push
jae
jle
xchg
call
test
inc
lret
mov
xchg
xchg
clc
stos
sub
dec
stos
pop
out
sbb
and
mov
nop
push
jge
rolb
add
mov
fwait
dec
pop
jnp
in
mov
scas
inc
and
sbb
test
lcall
mov
pop
sbb
mov
cltd
dec
xchg
jno
xor
xor
sub
mov
cmp
jb
pop
std
pop
movsl
int3
mov
cli
stc
gs
xchg
out
mov
movb
dec
bound
popa
add
movsb
popa
lods
rcll
adc
cli
mov
repnz
push
repnz
push
pop
and
inc
movsl
mov
pop
inc
cmp
lods
xchg
and
lock
pop
loop
inc
rcll
sub
sbb
insb
mov
push
dec
dec
fwait
xchg
jae
fwait
pop
adc
add
mov
xor
mov
xlat
lret
vzeroall
stos
xor
nop
push
push
dec
pop
add
imul
lods
cwtl
orb
movsl
push
dec
repz
sar
mull
pop
xlat
mov
aad
pop
jle
dec
js
mov
repz
jp
cwtl
sub
xorl
mov
popa
bound
roll
jne
adc
and
cld
mov
insb
mov
arpl
sub
mov
inc
pop
cmp
lods
and
rorl
cmp
lea
push
adc
cmpsb
xor
add
ret
popa
fcompl
mov
sahf
xchg
jae
mov
mov
mov
dec
mov
out
mov
movsl
jns
stos
jmp
scas
mov
xchg
int
sub
stc
cli
and
inc
int3
add
adc
and
in
subb
pop
lret
fistps
lea
cmc
sub
mov
lcall
mov
pop
cmp
mov
and
xchg
vaddsd
addr16
icebp
cmp
mov
push
repz
jne
xchg
daa
inc
call
xor
add
cmpsl
imulb
pop
outsl
movb
addr16
cld
lds
jge
test
xchg
lea
ficompl
cld
xor
mov
mov
push
mov
mov
adc
xchg
mov
pop
pop
and
pop
jnp
mov
jl
mov
xchg
mov
xchg
in
mov
pop
xchg
les
dec
pusha
xchg
mov
js
push
sbb
sbb
dec
mov
std
in
sbb
lods
cmc
popf
dec
jns
xchg
into
es
mov
push
mov
cmp
daa
mov
icebp
adc
cld
add
pop
and
fidivs
mov
add
lock
cmp
sub
inc
xchg
jns
cmpsl
sbb
cmc
inc
push
dec
cmp
insb
leave
loope
or
xor
stos
fists
shl
out
push
leave
push
bnd
inc
adc
add
shrb
push
lret
push
pop
sbb
dec
xor
idivb
jl
mov
in
mov
repz
test
divl
mov
push
pop
lcall
mov
cmp
rolb
out
xchg
or
fisttpll
sbb
addl
cmp
cmc
inc
sahf
arpl
push
add
sbb
ss
cmc
mov
fbstp
pusha
in
mov
pop
add
lahf
sti
fisttpl
in
ret
push
push
pop
repz
testl
adc
sub
stc
sbb
lret
je
fisubl
lahf
dec
sahf
add
pusha
cmpsl
fldcw
pmaxsw
xor
dec
xor
push
mov
xor
int3
test
cmp
add
mov
jmp
push
lea
pop
cmpsl
dec
xchg
xchg
ja
push
add
jge
jmp
sub
jo
arpl
fsub
shr
add
test
test
push
inc
mov
mov
stc
sbb
and
mov
movsl
push
mov
cltd
sbb
push
int3
mov
cltd
lret
sahf
mov
pop
clc
cmpsl
int3
push
addr16
sar
stos
add
or
mov
sbb
cmp
cs
xchg
mov
test
insl
outsb
push
add
aaa
je
js
fwait
in
xorb
inc
adc
cltd
jnp
sub
enter
cmpsb
mov
mov
dec
mov
mov
bound
push
cmp
xchg
out
out
jmp
dec
fs
lds
or
push
pop
insb
in
pop
mov
sub
and
push
jge
adc
sub
push
out
shll
cmpsl
hlt
xor
out
mov
fcmovne
loopne
pop
mov
sbb
sbb
cld
in
push
jp
jmp
aad
or
movl
jno
vmovntdq
enter
shlb
icebp
xchg
xor
subb
jne
sub
and
sub
sti
mov
push
pop
fwait
push
inc
cwtl
lock
xor
std
mov
cmpsb
ret
int
out
loop
adc
mov
fidivs
lahf
call
and
cmpsb
pop
pop
nop
subb
push
lcall
sub
add
rcrl
mov
rcl
loope
mov
inc
aam
mov
jno
cmp
mov
ljmp
cmp
sub
mov
and
or
push
shl
scas
add
push
push
test
dec
test
cs
mov
push
mov
stc
fcoml
rcll
inc
clc
iret
das
cmp
lret
push
jecxz
stos
dec
pop
popa
into
xchg
add
xor
pop
test
sbb
dec
mov
push
ficompl
je
sub
push
xor
arpl
jge
add
inc
dec
icebp
xorl
mov
aas
lds
std
lods
sbb
push
mov
loop
shll
orl
cmp
cmpsl
pusha
mov
cmpsb
jbe
test
and
jae
jl
mov
jb
in
stc
jns
adc
cwtl
in
pop
add
stos
sbb
fxch
adc
stos
aad
std
mov
push
fmull
imul
jl
sahf
or
cmp
movsb
lock
stc
jecxz
ffree
in
inc
gs
js
stc
int
mov
call
lock
movsb
icebp
add
inc
sub
xchg
pop
xor
and
into
sub
dec
or
idivl
filds
into
inc
inc
xor
insb
in
cmp
adc
icebp
mov
cmpsb
mov
jle
mov
insl
sub
xchg
imul
or
repz
jno
es
int3
mov
lahf
mov
or
jns
outsb
arpl
movsl
lcall
push
xor
iret
pop
jmp
xchg
xlat
dec
fadd
mov
mov
in
inc
insl
sub
and
xor
test
mov
test
es
testl
and
cli
lret
dec
push
adc
hlt
sub
je
incl
xchg
and
and
loop
or
xchg
addr16
mov
into
jecxz
pop
sti
sbb
and
sbb
sbb
push
pop
testb
arpl
loopne
cltd
inc
fsts
mov
fiaddl
addr16
jne
inc
pop
xor
sbb
push
and
push
outsb
or
pop
repnz
cld
test
cld
dec
xlat
nop
add
mov
push
xlat
sti
sbb
fisubl
scas
addl
cmp
test
insl
pusha
ret
dec
jbe
inc
sahf
dec
mov
stos
cmp
mov
scas
jno
jecxz
cmp
push
dec
enter
fwait
sub
je
push
loopne,pn
cld
xchg
sub
lods
ret
push
das
imul
data16
inc
daa
imul
bswap
sbb
cmpsb
gs
arpl
adc
mov
stc
sbb
adc
mov
pop
mov
ret
pop
dec
dec
pop
jae
pop
xchg
jge
ljmp
jae
cmpl
or
aaa
cmp
adc
sbb
xor
sbb
xlat
mov
jge
xchg
repz
imul
test
dec
jmp
jmp
sbbb
mov
pop
mov
mov
test
in
dec
mov
out
dec
js
and
pop
push
scas
lahf
pop
bound
cli
mov
popf
testl
mov
fstps
xchg
loope
or
and
leave
xchg
cmp
lds
adc
out
or
aas
fisttpll
scas
xor
movaps
add
jg
lds
in
pop
movsb
cmp
cltd
xor
cmpsb
xor
fstps
fsubrp
mov
subb
stos
test
cmp
fisttpl
mov
jne
xor
pop
or
adc
dec
pop
sub
push
or
sbb
mov
movd
imul
bound
mov
sub
cmp
inc
push
pop
sbb
lea
sbb
dec
nop
adc
fildl
cli
movsb
mov
and
aaa
and
sarb
push
push
pop
icebp
dec
lret
mov
repnz
push
push
daa
push
mov
mov
test
rep
mov
add
addr16
mov
inc
ret
rclb
cmp
xchg
into
xor
fists
push
in
push
push
out
popf
sahf
cmp
push
inc
sbb
fs
aad
popf
aam
mov
xlat
lea
mov
jns
jmp
cmp
jmp
jno
jmp
cmpsb
jns
xor
dec
test
xor
lock
adc
xchg
sub
inc
outsl
push
nop
repnz
lock
pop
or
shlb
mov
repnz
mov
mov
data16
cs
add
and
ficoml
lahf
in
xor
and
sub
mov
lahf
jae
rclb
fs
xchg
fucompp
mov
scas
clc
mov
rorl
shrl
push
test
fcom
loop
int3
aam
fsubrl
je,pt
imul
or
and
ficoms
lods
int
jbe
orl
jno
inc
test
lahf
pop
lret
sbb
addr16
add
jecxz
xor
sub
mov
shrl
xchg
fwait
or
lds
es
jo
enter
decb
ret
rcl
jnp
mov
out
adc
mov
jg
add
push
mov
dec
push
jp
repnz
jg
in
xchg
adc
shll
shr
ret
adc
stc
leave
loop
mov
sub
add
jecxz
inc
inc
mov
xor
pop
mov
popf
mov
shlb
mov
adc
jbe
sub
leave
mov
inc
dec
mov
and
push
xchg
jnp
cmp
inc
push
mov
push
out
rcl
jecxz
data16
cltd
enter
aaa
cmpsb
ljmp
mov
and
test
xchg
push
popf
pop
dec
inc
jns
aad
inc
and
test
pop
andb
mov
pop
cltd
xor
and
stc
cmp
mov
or
push
bound
xor
mov
lret
mov
jecxz
movsl
or
andb
out
pushf
inc
jmp
xchg
cs
aas
and
insl
xor
aam
add
ljmp
xchg
js
inc
clc
repz
add
in
and
or
outsb
xor
or
push
fdivl
mov
and
jae
fld
out
pop
dec
cwtl
and
repz
dec
push
dec
in
sbb
dec
in
loop
movsl
pop
repnz
inc
repnz
push
jns
push
cli
lods
aad
xor
xor
ret
into
fstl
cmp
mov
in
xchg
or
adc
or
imul
inc
adc
sub
cmp
push
push
cs
lock
rcl
cld
stc
ss
stos
imul
scas
mov
movsl
xlat
bound
jo
push
lcall
cmp
repnz
out
sub
dec
fld
loope
or
lea
sbb
cwtl
repz
repnz
movb
nop
or
adc
stc
lods
std
adc
repz
shlb
jp
popa
sub
sbb
xchg
inc
cmp
ret
dec
inc
cli
push
cmpl
outsb
pop
mov
test
fwait
jns
push
xor
and
insl
push
repnz
sti
pop
clc
sbb
bound
sbb
or
and
movsb
cmpsb
ljmp
push
insb
test
lods
xchg
dec
hlt
lods
fadd
push
fwait
adc
cmp
xchg
cmc
jbe
orl
ret
push
test
movsl
pop
xchg
fistpll
mov
push
push
mov
stos
push
xchg
gs
aas
jb
jae
xchg
test
push
mov
lds
rorl
aaa
movsl
fistpll
cmp
adc
leave
sahf
cmpsb
scas
stc
jg
scas
lods
add
push
movsl
pushf
and
insb
mov
jl
mov
cmp
test
sbb
cmp
xchg
lcall
fs
jp
add
push
mov
add
sbb
call
cmp
lods
and
push
cs
xor
std
enter
jge
into
push
inc
jne
mov
nop
dec
sbb
xor
dec
pop
mov
dec
mov
push
mov
push
fisttpl
lret
repz
mov
fxch
cmpsl
or
roll
xchg
jns
cmp
aaa
add
popf
popa
xchg
roll
orl
in
dec
adc
pop
sbb
mov
call
movsb
movsb
mov
fildl
aad
aaa
fs
mov
xchg
repz
jnp
or
loop
out
int3
dec
pushaw
pop
sbb
xlat
adc
adc
and
call
mov
dec
arpl
jecxz
lods
inc
pusha
adc
es
inc
push
int3
scas
adc
lcall
sarb
mov
add
ss
lret
xor
subl
std
mov
xlat
push
pop
sub
arpl
mov
xchg
test
insl
sbb
lods
jg
imul
push
out
hlt
in
scas
stc
les
sub
arpl
sbb
sbb
lock
inc
mov
jo
inc
or
stc
push
icebp
pop
jae
xchg
das
out
inc
push
cwtl
adc
outsl
mov
mov
sbb
data16
push
mov
into
and
xchg
std
add
push
sbb
imul
shll
push
dec
cmpb
and
mov
jl
push
cli
fnstsw
cmpl
call
lea
dec
mov
pop
data16
lds
arpl
dec
imul
jge
xrelease
rcrl
fisttpll
ss
jno
popf
add
and
jecxz
inc
sbb
pop
insl
sti
xor
or
sarl
jmp
in
das
add
jecxz
cltd
addb
cmp
jo
int3
pop
pop
adc
hlt
lods
inc
xor
cmp
sti
dec
xchg
xchg
enter
xchg
clc
clc
sbb
sarb
mov
leave
jne
sbb
cmp
out
fmul
repz
dec
std
lock
pop
xor
lret
jne
sbb
jmp
push
sbb
and
or
sub
jle
inc
sar
mov
mov
btc
push
repz
lock
xor
add
fwait
das
sbb
loop
mov
shr
out
sub
test
daa
sbb
jo
or
inc
mov
test
in
stc
inc
xlat
jle
sub
mov
aam
pop
sahf
lods
cwtl
test
wbinvd
scas
xchg
fstp
pusha
call
roll
jbe
out
std
cli
int
shlb
ds
jo
mov
push
loope
rclb
ds
dec
dec
ljmp
inc
sbb
fnstcw
and
lock
push
or
and
wrmsr
fidivs
mov
jecxz
popf
lahf
es
xor
loopne
mov
fldt
stos
fdivl
or
push
lds
stos
inc
xor
xchg
xor
idiv
pop
dec
sub
lods
imul
in
mov
hlt
sbb
cmp
adc
mov
loop
mov
and
sti
into
or
lea
cmpsb
add
es
xchg
sahf
xchg
ficoms
out
inc
nop
mov
fxch
clc
sub
std
sub
cmp
sarb
sub
out
nop
cmp
repz
mov
lcall
daa
mov
out
imul
ds
or
enter
push
test
js
data16
mov
stos
sbb
or
out
mov
and
sbb
or
insl
rcrb
or
xor
insl
cmpb
push
mov
xchg
das
mov
and
sarb
or
push
push
out
scas
outsl
xlat
pop
jae
push
imulb
mov
add
test
daa
mov
arpl
addr16
mov
loopne
popf
mov
lds
mov
push
xchg
popl
jmp
das
pop
outsb
popa
xor
pop
movsl
insl
or
adc
test
add
movl
push
dec
fs
mov
aas
cli
insb
jb
cltd
xor
scas
jb
scas
popa
sahf
push
mov
dec
push
dec
pop
jne
mov
aad
cmp
cs
int
test
xchg
adc
daa
pushf
xchg
jge
mov
in
pop
push
pop
dec
test
jbe
cltd
xor
cltd
sbb
in
push
push
jb
fists
and
mov
push
jbe
xor
inc
cmp
xor
lods
xor
jge
leave
pop
lds
jmp
or
inc
iret
push
dec
lret
xchg
push
insb
out
sbb
xor
inc
lret
inc
ss
xor
cmc
mov
cmp
push
xchg
mov
push
inc
popf
xchg
icebp
inc
jge
sbb
mov
xchg
xor
jl
lret
insl
adc
mov
mov
xor
inc
in
fcoms
stos
mov
pop
out
inc
mov
or
push
sbb
loope
or
push
pop
and
mov
fxch
mov
pop
outsl
lret
pushf
mov
punpcklbw
push
imulb
loope
pop
or
cmp
stc
cmp
fsubs
mov
dec
mov
test
jge
shrl
ds
xchg
and
repz
clc
dec
mov
fcompl
dec
in
cs
sub
push
ja
mov
push
pop
in
dec
shlb
xchg
es
sbb
xor
sbb
inc
iret
mov
lcall
pop
mov
cmp
stos
in
ja
sbb
push
dec
adc
subb
pop
mov
sbb
repnz
sbb
outsb
add
fwait
into
rcrl
or
xchg
jmp
mov
add
cld
int3
xchg
dec
push
aad
sub
shlb
add
iret
incl
mov
into
mov
or
mov
dec
xchg
sbb
lods
lea
icebp
cli
imul
xlat
ficomps
jp
test
adc
sbb
sub
cmc
ror
repnz
lret
scas
cmp
xor
das
in
jnp
loope
mov
push
or
or
insl
adc
jecxz
rcrb
xchg
sbb
lea
adc
lods
dec
dec
xchg
cli
dec
xlat
movd
cmpsb
sub
insb
xorb
test
cmp
dec
pop
mul
cs
xchg
cli
xlat
mov
aad
test
out
adc
mov
andl
cli
push
dec
ljmp
pop
cli
sbb
test
outsl
movsl
add
repz
or
inc
pop
or
jno
or
cmpsl
arpl
sahf
mov
popa
add
popa
cmp
sbb
inc
push
sub
mov
dec
add
dec
cmp
mov
shl
mov
int
jbe
fisttps
mov
jo
jo
sarb
mov
popf
stos
sbb
mov
mov
or
sub
jle
lret
leave
pushf
dec
fs
and
fnstenv
out
jbe
adc
js
in
mov
add
or
cmp
cmp
sub
dec
mov
addr16
ss
or
push
jl
mov
sub
adc
test
cmp
and
xchg
cmpsb
mulb
idivb
mov
fisubs
dec
cltd
fldt
test
cld
into
pop
test
out
sub
test
outsb
daa
jmp
cmp
xor
xchg
push
pop
inc
jp
aas
testb
daa
sbb
in
sub
insb
or
push
mov
sbb
inc
xchg
out
sbb
js
jnp
pop
sbb
add
cmc
jo
mov
adc
repz
push
inc
ror
jb
and
xor
and
lock
push
or
mov
xchg
xor
push
xor
cmp
dec
test
add
and
pop
loopne
in
and
out
inc
int3
pop
cmpsb
add
xor
push
call
and
pop
xor
xor
popf
neg
insl
out
test
and
jmp
mov
dec
and
and
gs
icebp
xor
inc
cmp
stos
mov
mov
bnd
mov
xor
push
adc
aas
cmp
test
test
imul
adc
mov
xlat
sbb
mov
jne
xlat
shl
pop
and
lcall
lahf
dec
adc
daa
dec
fisttpll
fistpll
or
int3
inc
add
cltd
jne
push
cmp
pop
xor
mov
sub
dec
sbb
rclb
es
pop
mov
mov
and
adc
pop
mov
mov
mov
jo
xor
push
lea
mov
loop
repnz
mov
ret
jmp
sbbl
shrl
scas
vpsrlq
ret
les
and
adc
jg
and
dec
mov
test
dec
std
cmp
call
jo
mov
xchg
lods
ficompl
cmp
xor
pop
shlb
std
add
js
test
outsb
mov
mov
dec
hlt
xor
inc
lcall
push
mov
jmp
cmp
insb
inc
jnp
mov
jo
jb
sub
mov
cld
pop
sbb
push
test
jp
scas
sbb
xchg
pop
popf
jmp
add
mov
pop
xchg
sti
or
lods
pop
inc
and
sub
inc
add
and
leave
or
dec
push
dec
jb
insl
ret
push
push
inc
xor
push
and
add
sbb
fdiv
inc
push
mov
cmp
pop
pop
xchg
je
cmp
mov
inc
in
xchg
xor
test
push
jbe
fmuls
sbb
adcl
cmc
loope
aam
mov
les
push
test
lahf
es
imul
mov
xchg
fwait
inc
mov
js
cmp
js
dec
mov
xchg
lds
pop
pop
out
dec
mov
lock
mov
jne
jmp
inc
mov
or
xor
or
iret
cmpsl
shlb
rorb
or
sbb
push
and
mov
xor
scas
cmp
outsl
xchg
addr16
xchg
mov
ror
aam
shl
push
aaa
loopne
push
xchg
inc
loope
and
lds
xor
fcomps
xchg
mov
enter
inc
shlb
pushf
mov
cltd
daa
stos
sahf
inc
fisubs
ret
dec
repnz
xchg
scas
fwait
or
ds
dec
in
adc
xor
fiaddl
jns
xor
cs
adc
or
jmp
xor
push
jb
lods
mov
pop
std
lea
push
pop
adc
test
pop
jecxz
push
adc
jge
xlat
or
xor
in
inc
sub
data16
push
popa
add
enter
xchg
clc
lcall
sbb
cmp
stos
pop
subl
xchg
sub
inc
pusha
int
push
outsb
mov
imul
call
adc
icebp
xchg
lcall
or
mov
lods
test
jmp
sbb
test
sub
ljmpw
mov
sbb
shrl
or
pushf
cltd
in
pop
or
mov
dec
inc
cs
sbb
push
dec
movsl
xlat
pop
and
pop
push
data16
jno
sub
outsl
sbb
test
dec
mov
int
pushf
sbb
mov
in
mov
push
enter
push
mov
stc
mov
jle
cmpsl
loopne
mov
pop
cli
sbb
mov
dec
lahf
add
outsb
gs
in
jl
rorl
fwait
dec
adc
or
cs
ficoml
pop
add
mov
push
pop
sub
mov
push
sub
xor
jle
dec
aam
repnz
scas
les
shr
sub
sub
and
and
add
adc
daa
inc
mov
inc
rcrb
pusha
xor
inc
std
inc
xchg
shlb
testb
xchg
ljmp
mov
sbb
fmul
push
leave
pop
push
hlt
pop
push
push
add
movsb
sub
fildl
mov
xor
icebp
lcall
xchg
ret
lcall
adc
std
xchg
dec
icebp
mov
cmp
mov
fmuls
mov
lds
and
in
or
fdivr
rcrb
push
push
push
or
adc
aam
xchg
arpl
pop
push
bound
and
cmp
icebp
loop
imul
mov
push
xchg
adc
pop
sub
std
inc
scas
fadds
fcompl
test
adc
xor
popf
lret
jmp
cmp
jl
cwtl
scas
mov
test
xor
cmp
adc
mov
push
clc
mov
aaa
shr
gs
daa
add
or
clc
pop
daa
add
test
popf
push
inc
lahf
stos
aam
movsb
sahf
fs
mov
dec
jbe
cs
xor
bound
push
pop
fisubs
lds
lahf
pop
inc
test
mov
pop
and
push
jae
mov
sub
jns
push
add
sti
inc
sub
jle
stc
popa
ss
das
xchg
dec
cmpsb
ss
sbb
or
mov
mov
cmp
jecxz
outsl
mov
sahf
lret
shlb
dec
xchg
hlt
arpl
in
dec
push
stos
sbb
loopne
cmc
mov
rcl
imul
fcomps
push
jmp
dec
inc
adc
bound
cli
fisttpl
push
jle
jge
adc
iret
enter
mov
faddl
outsb
xchg
mov
push
es
push
daa
lea
out
mov
cmp
and
fsubs
in
mov
or
stc
xchg
push
scas
fcomip
mov
cmpsl
pusha
or
jae,pt
int3
std
add
in
pop
mov
ficoms
in
add
pop
add
and
ds
lea
outsl
mov
cmp
push
sahf
fs
lcall
in
dec
and
in
ret
sbb
bound
xchg
fisttps
adc
push
mov
adcb
cmp
jo
les
dec
cmp
test
jp
pop
cmp
lret
lcall
or
cmp
mov
xor
inc
jb
inc
ret
lret
fidivs
xchg
pusha
arpl
push
mov
and
jl
fistl
rsqrtps
mov
inc
out
inc
daa
or
mov
aaa
mov
sbbb
fisubrs
cmpsl
out
jo
dec
shll
jl
jne
cmp
push
pop
shlb
cmpsb
pop
jmp
out
mov
fimull
or
jmp
fwait
mov
stc
cmp
sub
and
sbb
pop
insl
ja
inc
outsl
ret
dec
mov
or
imul
icebp
add
mov
jno
out
jbe
push
dec
int3
pop
push
clc
adc
xor
push
fwait
mov
inc
mov
movb
sbb
cmp
movsl
out
imul
xchg
cmp
adc
jge
nop
out
repz
je
push
lahf
mov
xor
add
jns
cmpsb
sbb
jl
or
sub
mov
mov
lret
sub
push
sub
xor
add
mov
ds
cwtl
lds
sbbb
push
push
sti
push
lahf
lock
xchg
imul
pop
and
push
inc
mov
push
xchg
mov
mov
lcall
pusha
xchg
mov
cmp
bound
lea
mov
popa
or
push
mov
clc
into
imul
arpl
dec
fistl
pop
pop
pop
into
or
mov
inc
cs
andb
mov
inc
xchg
sar
sub
aaa
repz
add
decb
adc
xchg
leave
scas
pop
mov
scas
sahf
scas
sahf
lods
inc
mov
pop
mov
inc
into
clc
fldt
enter
loopne
in
pop
inc
cmp
stc
mov
xor
test
jmp
cmp
dec
adc
jbe
or
sahf
fsubrl
cld
aad
movsl
stos
repnz
clc
pop
ljmp
pop
jns
test
add
sub
arpl
mov
xchg
mov
cltd
mov
fidivrl
outsb
cld
inc
dec
cmp
adc
xlat
push
test
insb
ds
jecxz
sub
pop
es
ss
cmp
clc
fdivr
push
in
and
pop
adc
xor
fcomi
and
stc
ret
pop
test
pop
shll
std
pop
js
pop
in
add
mov
or
insb
jae
xor
mov
pop
cmc
xchg
fbld
scas
cmp
sub
adc
and
bts
or
xor
scas
push
and
adc
scas
cmpsl
fnstenv
fisttpll
scas
out
int
lahf
dec
or
iret
add
divb
sarb
sub
addr16
fiadds
cli
sub
and
lret
sahf
fstps
jo
cli
fisttpl
mov
popa
idiv
adc
stos
pop
mov
sbb
push
or
loop
pop
push
cmp
push
out
jbe
rolb
lret
fisubl
daa
xor
dec
out
cmpsb
push
lcall
fiadds
dec
adcl
push
pop
or
push
ds
cld
fldt
lret
jo
fnsave
test
mov
xchg
movsb
lcall
mov
and
and
dec
ss
lret
inc
cmc
mov
int3
push
sbb
push
jmp
repz
lret
jmp
add
out
mov
ss
lret
jmp
mov
inc
loope
mov
pop
push
std
cmpsb
testl
sbb
ucomiss
pop
cs
add
imul
pop
xor
sbb
lahf
cld
nop
gs
repz
jne
mov
dec
jnp
sbb
xchg
pop
dec
int3
push
shrl
sub
or
mov
mov
sub
shl
push
data16
jbe
xor
scas
mov
addl
shr
push
add
dec
repz
rcll
scas
cmp
mov
mov
mov
push
jns
lret
mov
dec
cli
lods
bound
aas
push
xchg
arpl
repz
xchg
xchg
adc
jnp
or
shlb
cmpsb
shlb
mov
aaa
adc
inc
mov
cmovb
inc
add
xchg
jns
cmc
shl
mov
shll
test
xorb
lock
js
inc
sub
cwtl
inc
cmp
xor
pop
sahf
pop
xor
mov
lods
sti
je
push
fucomi
sub
lea
ja
push
cmpsl
adc
mov
cld
rcrl
add
jge
push
imul
hlt
mov
sub
mov
insb
mov
jecxz
cmpsb
test
xor
fisubl
lcall
es
push
xchg
dec
out
xchg
push
fstpl
sbb
fidivrs
test
repz
loopne
jae
mov
sbb
cmpsb
mov
jb
stos
ret
sbbb
in
dec
enter
fdivrs
les
dec
mov
pop
adc
popf
mov
call
nop
outsl
sbb
pop
hlt
mov
movsl
push
outsb
ret
aaa
push
aaa
cmpsl
jg
xor
cli
fwait
cmp
aaa
mov
xor
lock
or
and
out
stos
rol
cvtdq2ps
cs
cmp
jecxz
xchg
add
fwait
outsl
fsubrs
popf
cltd
in
mov
dec
loop
cmp
movsl
or
inc
test
addl
out
mov
inc
in
loope
ja
adc
adc
mov
inc
stos
mov
into
sub
or
pop
dec
outsb
clc
incl
cmp
aam
xor
xchg
test
mov
sub
inc
fcomps
bound
cmc
test
jl
cmp
jecxz
daa
movsb
sbb
nop
repnz
push
push
cmp
mov
push
loope
test
push
test
mov
sahf
test
test
test
sub
data16
mov
pop
in
in
mov
cs
ret
cli
repnz
mov
cmpsb
mov
dec
in
or
mov
mov
and
loope
sbb
and
mov
push
mov
jg
push
adc
dec
ljmp
stos
mov
mov
in
push
inc
loopne
test
call
push
jns
cld
test
repz
int
or
or
ror
lcall
dec
std
iret
push
daa
dec
push
push
pushf
bound
sbb
jns
movsl
sbb
pop
mov
xchg
int3
or
dec
pop
cmp
or
and
adcl
inc
out
or
dec
jl
mov
and
test
xor
cld
pop
ret
mov
test
incl
xor
sub
inc
loope
add
adc
mov
cmp
jl
out
or
daa
lods
pusha
mov
mov
inc
jmp
push
cld
push
shll
dec
mov
std
xchg
aam
fdivr
jl
outsl
push
pop
dec
lds
push
out
repz
lods
rol
movsb
lock
fmull
nop
sahf
sbb
scas
and
xor
insl
cltd
into
inc
rol
push
mull
push
mov
in
std
fsts
xor
mov
fwait
call
hlt
pop
and
mov
stos
xor
in
xor
or
mov
mov
sbb
fsubrp
loope
popl
lret
xchg
jg
add
or
out
jecxz
in
mov
pop
adc
int
movsb
aad
shll
testl
shlb
mov
outsl
shl
jnp
jmp
stos
movsl
das
sub
movsl
dec
inc
lds
aaa
sub
lock
xlat
push
fdivl
fisubl
idivl
xor
fcmovnb
mov
mov
test
xchg
lds
sub
das
call
imul
sub
cltd
push
add
xchg
data16
aas
idivb
cmpsl
sbb
fnstenv
push
cmp
subb
or
call
cmc
fcompl
imull
leave
cmp
fidivs
xchg
push
inc
ja
push
adc
popa
add
mov
push
cwtl
mov
adcl
mov
mov
sub
pop
lds
or
jb
jb
scas
popf
std
shrl
jns
shr
stc
sbb
pop
ss
pop
shrb
or
ljmp
clc
andl
mov
pusha
mov
aad
mov
and
repz
sarb
dec
xchg
mov
sti
pop
out
nop
cmp
dec
xchg
ss
iret
ret
loope
mov
fdivl
adc
push
sub
cmp
jg
add
dec
fildll
in
mov
out
jmp
adcb
fsubrs
or
je
pop
ret
lods
mov
imul
jo
mov
mov
lea
inc
jg
iret
dec
daa
scas
or
fstpt
fcoms
ret
fmuls
mov
imul
in
sbb
icebp
add
push
fmull
fimull
fbld
aas
imul
dec
and
fdivs
insl
pop
add
leave
add
rol
std
lods
push
sahf
sub
inc
cmp
sbb
pusha
mov
mov
fcmovbe
hlt
mov
icebp
mov
incb
mov
ljmp
adc
xchg
loope
icebp
movsb
mov
decb
jp
sub
lods
add
dec
inc
or
mov
and
push
pop
stc
push
stos
sti
or
pop
pop
push
pusha
adc
into
push
jne
mov
mov
pop
dec
imul
loope
insl
push
pop
test
repz
jg
mov
repnz
test
cmp
leave
dec
sub
in
cs
adc
add
pop
add
mov
inc
arpl
shll
jns
das
push
mov
cmc
mov
repnz
int
les
in
pop
adc
daa
lahf
cmp
sbb
lods
popf
cmpsb
jp
lret
out
sub
adc
lcall
popf
lods
mov
inc
dec
pop
lds
xor
mov
xacquire
ja
repz
sbb
mov
mov
jne
pop
fidivl
std
jl
aam
xor
xor
stc
dec
xor
push
and
sub
mov
test
mov
sub
test
pushf
push
pop
test
xchg
jae
sbb
push
add
js
pop
add
cmp
pusha
andl
push
aaa
cmp
aad
jmp
cmc
insl
mov
int3
dec
incb
mov
jnp
and
xor
push
leave
push
in
or
cmp
cmp
mov
rcl
adc
dec
addr16
rcl
data16
mov
mov
mov
pop
and
add
add
out
push
mov
lods
aas
cmp
xchg
jb
in
add
mov
push
ret
dec
mov
jnp
mov
mov
shrb
in
or
lahf
arpl
or
inc
movsb
jb
jp
adc
das
icebp
mov
roll
adc
data16
cli
dec
addb
je
test
cwtl
sahf
sub
out
out
add
les
lods
xchg
clc
addb
xchg
adc
mov
out
fsubl
test
jne
stos
add
adc
and
loope
mov
and
stos
lret
xchg
and
xchg
jne
shll
dec
rcrl
xchg
sarb
mov
add
xor
sbb
jecxz
inc
pop
or
daa
push
jb
mov
std
or
inc
or
hlt
das
jno
xchg
lods
xor
cwtl
ljmp
push
inc
cmc
cmp
inc
mov
or
loop
addr16
sarl
std
and
icebp
xchg
mov
adc
rcr
and
aas
ret
jno
test
xor
popf
xchg
sbb
dec
mov
loope
pop
jle
mov
mov
nop
sub
jne
repnz
lds
mov
mov
mov
test
pop
test
ret
mov
es
pusha
push
popa
in
insl
adc
lock
mov
add
aam
int
jg
push
cmpsb
mov
inc
enter
fiadds
mov
adc
aam
insl
test
mov
jp
fldl
lcall
xor
mov
xor
clc
mov
mov
pop
mov
pushf
mov
cmp
lock
repz
fmull
jnp
in
sub
push
mov
aad
push
insb
cmp
ds
lods
fildl
testl
inc
xchg
push
fs
push
add
daa
movsb
add
inc
push
rcrb
das
mov
jl
inc
ljmp
push
inc
xor
and
xchg
cmpsb
mov
into
lds
in
addl
xor
mov
dec
ss
xor
inc
ja
and
add
fs
rolb
lcall
cli
stos
imul
inc
outsb
inc
movsw
inc
out
test
mov
sarl
pop
scas
mov
sbb
sub
je
xor
xchg
loope
out
int3
mov
lods
mov
or
mov
sub
test
ja
sbb
mov
stos
sarb
mov
xchg
flds
pop
mov
mov
sti
addb
popa
inc
repnz
shrb
fsubr
cmp
sbb
loop
jecxz
out
mov
xor
push
dec
push
aam
xor
and
std
ret
cmova
dec
dec
inc
cs
stos
or
jne
mov
and
shlb
jecxz
sbb
dec
and
and
test
scas
sbb
mov
and
cmc
jecxz
fdivr
jp
sarl
pop
in
stos
jae
xor
sbb
outsb
mov
fdivrs
aaa
adc
popf
js
inc
stos
mov
mov
sbb
std
mov
or
mov
cmp
xchg
xchg
dec
fiadds
aam
loopne
jb
pop
push
arpl
dec
movsb
mov
lock
mov
add
sbb
bound
stos
pop
inc
in
cmpsl
mov
cmp
push
movsb
stos
std
movsb
mov
add
cmp
test
add
jno
lods
insb
scas
mov
or
repz
lock
cmp
add
int
ljmp
in
fiadds
inc
push
getsec
enter
mov
add
mov
mul
xor
stos
aad
push
xlat
shlb
mov
xchg
jo
inc
iret
cld
sub
sbb
inc
xchg
mov
das
add
scas
or
mov
push
or
test
cmp
dec
je
out
mov
add
add
not
sbb
faddl
loop
cmp
inc
cmpsb
jb
jne
in
popf
mov
insb
insb
adc
repz
loope
gs
testl
ss
andb
add
icebp
test
pop
xlat
lret
inc
roll
pushf
dec
insb
jl
pop
cmp
sarl
pop
aaa
bound
jp
push
lret
lds
cld
insb
cmpsl
and
sbb
ret
sub
or
ja
pop
xor
push
stc
adc
outsl
pop
in
lods
jae
or
in
cld
ret
outsb
pop
mov
lods
sahf
or
xor
sti
sub
bound
daa
cwtl
sub
icebp
jge
jnp
popl
mov
loop
sub
ljmp
lock
aas
inc
scas
or
lds
add
repz
pop
inc
jp,pn
fisubl
mov
sbb
iret
sbb
mov
lret
mov
lods
mov
or
dec
mov
cmp
neg
cwtl
inc
sbb
xchg
nop
mov
mov
and
test
mov
sahf
sub
pop
shll
and
dec
rolb
int3
pop
lods
cmc
xlat
pop
mov
mov
ret
fstps
inc
mov
sbb
or
fisubrs
pop
mov
push
ffree
ficompl
xchg
aaa
adcl
dec
loope
fdivrl
sub
mov
xchg
jp
xor
dec
mov
mov
adcl
cmp
push
outsl
lcall
out
xor
ljmp
jle
push
or
pop
adc
mov
cltd
lahf
imul
xchg
pop
popa
mov
aam
add
mov
out
jecxz
rol
inc
jl
out
xchg
lret
sub
jbe
xchg
adc
sub
jp
mov
pop
shlb
jg
mov
jb
dec
pop
fbld
lcall
popf
test
cld
add
push
adc
bound
in
adc
mov
cmp
push
cld
sbb
imul
int
das
ljmp
pop
jbe
mov
mov
mov
movsb
mov
jge
loopne
mov
jg
mov
mov
adc
ret
in
adc
outsl
insb
jl
mov
scas
daa
push
xchg
cmpsb
data16
fistps
movsl
jl
test
ret
mov
je
sub
xchg
pop
es
clc
ficompl
or
test
and
in
pop
arpl
lods
adc
mov
arpl
loopnew
test
jecxz
add
sbb
enter
or
addr16
pop
ss
stos
mov
xchg
push
jbe
popf
sbb
ss
sbb
ret
push
push
cwtl
mov
fs
push
dec
add
xchg
subl
inc
imul
out
hlt
daa
mov
fcompl
repnz
mov
push
stos
mov
bound
rcrb
inc
imul
dec
cmp
cwtl
mov
cmpsb
xchg
jle
and
cmp
fnstsw
jl
adc
pop
mov
scas
das
ja
into
loop
repz
jp
fchs
out
dec
jne
and
or
in
or
pop
mov
lock
jbe
popf
push
test
pop
mov
dec
and
jne
es
and
add
push
xor
ret
mov
faddl
lods
add
xor
inc
das
out
mov
scas
mov
ret
jp
jle
pop
stos
pop
inc
in
ljmp
or
nop
ret
adc
outsb
int
push
mov
ljmp
inc
sub
sbb
inc
fistl
add
pop
pop
cmp
jp
sub
push
jns
mov
fadds
push
scas
arpl
call
int
pop
fisubs
mov
push
pop
sub
lret
dec
cs
mov
mov
mov
pop
arpl
push
in
cli
lea
pop
xchg
adc
sbb
pop
mov
dec
lret
fsts
or
pop
adc
adc
out
imulb
xchg
nop
cwtl
fucomp
mov
rcll
push
add
aas
pop
mov
or
popa
rcrb
or
or
mov
jno
rcrl
jno
inc
das
push
fnstenv
inc
pusha
mov
popa
xchg
xor
inc
sub
mov
jmp
cld
out
fdivl
leave
mov
cmpsb
ret
sub
aam
push
dec
push
cltd
fisubrl
adc
fnstcw
inc
je
insb
xchg
fnstenv
jl
mov
fsubrs
jne
push
jg
inc
int3
je
aas
xor
nop
jge
or
aaa
sarb
mov
mov
mov
xchg
xchg
stos
sti
and
movsb
and
adc
test
std
out
cmpsb
mov
clc
dec
movsb
pop
cmp
mov
cs
dec
fnsave
aas
sbb
fcmovnu
sti
int
les
mov
gs
js
cmp
xchg
mov
push
test
sbb
mov
imul
pop
xor
xor
into
xchg
fadd
mov
lcall
sub
rcrb
sarb
es
or
and
lds
mov
xchg
int
cmpsl
mull
aas
lds
xchg
andl
jno
in
jae
fcoml
outsb
pop
test
mov
sbb
adc
jp
xor
in
add
sub
cltd
pop
ljmp
pop
jp
int
scas
into
and
mov
xlat
mov
nop
out
shlb
ret
inc
inc
mov
dec
adc
push
jnp
cmc
xor
mov
adc
sbb
loopne
add
lret
ss
cmp
push
mov
bound
mov
or
sti
mov
cli
cmp
cs
fbld
test
or
jnp
gs
dec
pusha
imul
xchg
push
int
aaa
stos
mov
xchg
popf
enter
pop
push
jle
dec
sarb
addl
in
inc
aam
dec
mov
lods
cmp
enter
fists
adc
out
pop
sub
in
pushf
jge
popa
xchg
call
pop
cmp
mov
imul
jnp
dec
fidivrl
ss
sbbl
inc
pop
xchg
sbb
mov
mov
inc
popf
lock
push
mov
fst
fstps
out
das
loop
enter
fcompl
fidivs
mov
mov
push
int3
pop
outsl
faddl
stos
hlt
and
xor
ret
ds
ja
clc
lods
push
insb
fnstsw
out
xadd
add
xchg
or
add
or
std
adc
insl
xchg
xchg
rcll
pushf
jl
add
faddl
scas
shll
popf
cmp
sub
lahf
in
inc
xor
mov
rorl
aad
push
negb
fmull
xor
stos
push
or
aad
popa
mov
pop
mov
fdivrs
push
adcb
jns
aam
sub
lcall
adc
cs
jmp
push
push
bound
push
push
fildll
repnz
dec
sbb
sbb
lock
mov
movsl
xor
lahf
imul
out
push
ss
inc
insl
pop
pop
mov
mov
or
xorl
bound
adc
jecxz
lret
mov
cmp
je
cmc
sub
dec
std
je
imul
in
jp
mov
jl
inc
adc
jo
outsl
insl
xchg
jecxz
js
dec
lahf
or
xor
outsl
int3
push
shll
outsl
xor
mov
sbb
pop
and
inc
mov
scas
add
test
cmc
xchg
inc
push
and
inc
and
stc
xor
lds
cmp
lret
push
ds
mov
repz
sub
lock
testl
lahf
mov
xchg
lods
orb
aam
rclb
pop
sahf
popa
scas
adc
insb
les
adc
xchg
dec
cmp
jno
insb
push
dec
gs
roll
lcall
test
jns
adc
lcall
mov
push
aaa
out
mov
in
rcrl
andl
mov
add
in
xchg
stos
pop
inc
xor
xchg
pop
or
pop
and
stos
adc
out
aaa
cli
roll
enter
outsb
in
mov
xlat
movsb
sti
pop
mov
push
jnp
xor
testb
sub
pop
add
cmp
pusha
andl
sub
arpl
das
pop
lods
popa
mov
into
push
dec
xor
int3
movsl
xor
loope
jne
or
or
lds
adc
push
stos
cmp
or
push
gs
inc
mov
pop
push
pushf
lock
mov
dec
clc
pop
mov
in
and
mov
pop
pop
lea
and
jp
mov
inc
jmp
out
aas
pushf
ja
dec
or
sarl
pop
inc
add
and
mov
das
hlt
lods
jle
pop
cmp
sar
jno
mov
or
jmp
testl
mov
out
mov
leave
jle
ret
cld
popf
fwait
sbb
ljmp
push
sub
fdivp
xor
add
xchg
mov
inc
mov
outsl
and
imul
subl
mov
xchg
icebp
js
jbe
xchg
je
mov
pop
jne
pop
loopne
fsubrl
xor
and
ja
pop
jle
push
fdiv
sbb
out
add
or
mov
out
and
jns
push
sub
inc
inc
xchg
test
inc
addr16
and
stc
xor
loopne
fwait
push
mov
in
add
movsb
add
int3
test
divb
fidivs
pop
call
je
xchg
pop
cmp
cmp
fcmovnb
or
and
fwait
fs
mov
call
leave
jg
in
lret
in
jno
rcll
dec
cmp
dec
jp
cli
dec
sub
shl
orl
mov
cmp
add
lods
sub
icebp
das
mov
mov
popa
jnp
pop
pop
mov
shl
rcll
iretw
xor
push
mov
out
and
dec
pcmpgtd
rcl
adc
dec
bswap
shl
dec
mov
adc
add
ret
mov
and
movsl
lret
mov
pop
scas
mov
jns
adc
inc
fdivp
mov
jbe
pushf
fistpll
sbb
test
dec
push
ficompl
int3
stc
mov
out
push
sbb
lock
arpl
mov
test
adc
jb
leave
cmp
ljmp
sub
mov
int3
jg
jge
sub
shl
sub
fsts
out
imul
or
xchg
out
dec
movsb
and
pop
xor
and
lcall
xchg
adc
and
cli
xor
aas
push
xor
mov
mov
and
test
fdivs
sti
daa
in
sub
iret
sub
arpl
cmp
push
out
icebp
jne
cmp
sub
out
cmc
cmpsl
mov
jnp
pop
imull
adc
bnd
fstps
in
fsubs
push
out
int
push
xchg
sbb
adc
aaa
dec
jns
dec
xchg
sbb
lret
jns
pop
mov
ficomps
sub
xchg
adc
in
aad
push
push
jecxz
mov
pusha
xor
sub
in
xchg
fcoms
sarl
and
leave
xchg
push
sub
mov
xchg
fiadds
insl
jl
sbb
dec
xchg
pop
out
icebp
outsl
popf
fistpll
add
loope
dec
push
data16
sarb
scas
add
sub
lods
cmp
pop
and
lock
jecxz
xchg
push
inc
je
jne
jp
in
sub
cli
ds
dec
lods
loop
pop
aad
mov
jns,pn
add
push
lds
scas
das
or
sbb
push
pop
imul
dec
out
in
repnz
xchg
stc
movl
leave
stos
push
inc
sbb
or
mov
out
push
pop
jns
test
cmp
lea
and
hlt
dec
aad
or
xchg
aam
test
xor
dec
mov
mov
insl
ljmp
add
lret
outsb
cmp
add
and
sub
ljmp
and
outsb
in
add
lcall
and
sbb
mov
mov
mov
adc
mov
cld
or
lds
ss
aad
mov
in
dec
lret
pop
and
add
stos
shll
mov
les
aas
jmp
stos
cmc
ret
ss
mov
pusha
inc
push
inc
xchg
push
add
xchg
arpl
sbbb
adc
push
hlt
and
push
xchg
pmulhw
cmp
inc
stos
icebp
xchg
notl
into
stos
mov
shll
aas
cmp
into
cld
test
leave
repnz
push
ja
adc
xor
adc
push
pop
pop
lods
jmp
dec
and
adc
test
mov
jno
flds
stos
and
lods
add
xor
or
jp
and
add
add
ljmp
mov
aas
fcmovne
pop
adc
jl
movsb
scas
cmp
push
xchg
jge
and
xchg
repnz
test
push
and
sbb
xchg
loop
jbe
pop
arpl
shl
sub
and
adc
ret
adc
inc
add
jge
inc
push
or
test
leave
lods
mov
or
lcall
adc
and
pop
fisubs
adc
mov
dec
or
xchg
cli
addr16
into
jbe
imul
sbb
lret
divl
xor
jne
lret
mov
stos
cmc
xchg
sbb
push
or
popa
mov
pusha
mov
cld
call
or
int3
mov
pop
jp
inc
pop
bound
and
rclb
mov
mov
addb
mov
stos
xor
pop
outsl
push
xchg
push
and
ficoms
clc
push
push
add
cmp
inc
stos
and
xchg
std
loope
into
addb
gs
adc
shlb
jnp
push
push
mov
pop
xor
push
xor
shlb
popa
xor
nop
sub
pushf
mov
mov
insb
loop
or
cmp
loopne
xor
popl
nop
mov
mov
into
leave
out
sbb
movsb
dec
lcall
in
sar
imul
mov
gs
in
mov
inc
jg
and
pop
lods
lahf
ja
mov
adc
jg
xlat
rcr
lahf
call
xchg
push
mov
adc
hlt
mov
and
jns
and
in
cmc
nop
push
test
nop
adc
loope
imul
cmpsl
imul
dec
and
dec
inc
nop
mov
mov
loop
fcom
inc
mov
imul
jmp
rcll
inc
popf
mov
adc
stos
fisttps
dec
mov
sahf
repz
jp
pushf
or
lahf
push
out
xchg
inc
bound
repz
sbb
stc
cmpb
fdivrl
popf
or
fimull
sti
mov
cmp
xlat
mov
notrack
push
mov
mulb
movsb
repnz
shll
mov
push
into
cmp
pop
jl
daa
popf
and
ljmp
arpl
add
push
xchg
jmp
or
mul
and
popf
popa
mov
pop
adc
test
loope
lret
fsubrs
xchg
repz
jo
or
mov
sbb
or
adc
nop
rcrb
push
inc
repnz
mov
sub
insb
popa
push
out
mov
mov
mov
xchg
mov
mov
fildl
adc
or
in
outsb
mov
icebp
cmpsb
mov
sbb
cwtl
cmc
lock
xchg
xchg
sub
test
xor
push
insl
add
mov
test
cs
lcall
flds
xchg
fnstenv
in
loop
loopne
dec
and
sub
lret
mov
loopne
daa
xchg
dec
mov
xlat
push
or
jne
xchg
fidivs
mov
push
shlb
ja
imul
mov
out
jg
scas
add
movl
jp
cmp
mov
stc
test
pop
iret
lods
xchg
dec
sub
jecxz
mov
icebp
cltd
mov
movsl
adc
icebp
sahf
mov
sbb
push
jmp
loope
push
push
add
xchg
jb
push
xchg
pop
inc
sahf
in
pop
sbb
je
xor
sub
stc
jnp
sbb
jo
and
mov
popw
pop
cmp
negb
mov
test
idivl
mov
das
push
iret
andb
test
fwait
aaa
enter
xchg
repnz
push
gs
xchg
fs
fisubl
test
lahf
sbb
xchg
lock
test
test
movsl
je
mov
call
dec
outsb
pop
xchg
rcr
movsb
sti
fs
test
push
jg
pop
xchg
das
xchg
insb
xchg
and
push
add
and
sub
sub
arpl
cmp
pop
sub
cs
add
mov
jle
inc
sbb
push
push
push
push
push
hlt
loope
ret
push
mov
sbb
call
jnp
mov
jns
adc
out
hlt
mov
xchg
pop
push
cmp
and
xchg
mov
out
jecxz
aam
cmp
test
cmpsb
jmp
into
inc
xor
adc
aad
and
jbe
popf
mov
in
push
and
mov
enter
pop
fldt
ret
jnp
xor
test
push
or
inc
cmp
fdivp
stos
xchg
and
dec
adc
lock
pop
inc
sbb
loopne
mov
jns
leave
xchg
test
push
adc
out
das
std
mov
pop
inc
in
xchg
xor
pop
or
cs
jle
push
test
pop
inc
mov
das
notb
lock
sub
cmp
pop
xchg
cmp
repz
iret
les
test
push
andl
les
adc
adc
mov
or
fwait
cmp
mov
xchg
dec
lock
ljmp
add
les
sbb
add
mov
dec
pop
sbb
je
pusha
lret
insb
or
rcrl
pushf
rolb
pop
jl
jne
cmp
add
es
rcrb
dec
imul
test
add
sbb
test
and
inc
and
sbb
pop
mov
call
pop
or
aam
inc
cmc
mov
lahf
mov
pop
mov
imulb
pusha
insb
je
pushf
iret
add
add
xor
xchg
dec
sbb
or
mov
and
lods
push
mov
cld
fdivr
pusha
scas
imul
test
mov
and
and
mov
add
mov
dec
rcl
hlt
fmull
aam
add
sub
push
call
fstpl
sub
push
add
pop
js
adc
lock
mov
cmp
push
roll
mov
cmc
mov
sbb
mov
jle
lods
cmp
xorl
xchg
sub
mov
dec
jle
cmpsw
jbe
cmpsl
or
mov
outsl
push
push
or
sub
aaa
int
loopne
add
add
ret
pop
mov
xor
mov
xchg
stos
bound
in
mov
in
jle
rcl
in
je
adc
and
push
lret
filds
sti
mov
iret
es
jbe
ret
mov
test
sbb
cmpsb
decb
and
xchg
add
and
xchg
pop
in
push
xchg
xor
mov
dec
pop
adc
aas
sub
mov
xorb
jno
push
std
push
repz
fs
inc
in
stos
stos
ficomps
mov
loop
mov
loope
aam
pushf
push
in
fwait
adc
push
cwtl
stos
lret
emms
xchg
pop
mov
and
pop
pusha
andl
jo
jge
pop
ds
cwtl
test
sti
lea
pop
lahf
aaa
outsl
decl
xchg
push
cmp
push
inc
fisubs
mov
out
mov
stos
ds
push
das
cmp
or
sbb
mov
or
xchg
jmp
dec
mov
jmp
das
addr16
lret
stc
mov
pop
mov
add
test
dec
stc
out
or
and
and
push
mov
mov
xchg
mov
aaa
push
dec
daa
test
sbb
dec
sahf
jle
mov
aad
dec
mov
and
xchg
dec
adc
xor
inc
sub
test
cwtl
cmp
scas
imul
test
and
adc
cld
or
sub
mov
xor
cli
les
and
jo
dec
pop
inc
sbb
stc
icebp
fs
xchg
neg
in
jle
out
dec
pop
lea
movsb
inc
xor
loopne
int3
lcall
add
lods
sub
add
pop
rclb
xchg
in
jp
sub
inc
inc
jl
fsubs
in
xchg
loopne
xlat
clc
out
dec
stos
repz
loopne
repz
cmpsb
push
loop
and
or
mov
cmp
int3
mov
jg
dec
test
shrl
xchg
pop
imul
insl
and
es
push
xor
jle
mov
sbb
add
nop
movsb
adc
ljmp
aas
adc
stc
sub
into
pop
fcomps
in
sar
push
mov
fdivp
or
inc
enter
or
outsb
movsb
nop
icebp
mov
inc
mov
pop
jno
lock
lods
pusha
test
mov
and
cmpsl
jnp
sub
and
fisubl
xor
imulb
inc
ds
repnz
insb
push
mov
insb
mov
test
sbb
jmp
call
cld
mov
push
addr16
imul
stos
push
mov
jo
and
sub
frstor
stos
nop
or
lahf
mov
pop
dec
sti
add
add
fs
in
cwtl
aas
xchg
or
cmpsb
and
outsl
inc
sub
je
mov
dec
push
mov
push
adc
mov
gs
mov
int
mov
adc
fstpl
das
lahf
nop
jbe
test
push
leave
test
xor
adc
cltd
inc
stos
inc
nop
xchg
fcomip
or
push
and
sti
imul
loopne
arpl
cmpsl
xor
imulb
lahf
xlat
jmp
cmpl
xchg
mov
scas
or
mov
pop
pushf
mov
jecxz
std
dec
popf
testb
pop
pop
sbb
push
aaa
add
cmp
sbb
sub
test
jnp
cmpsl
or
fistps
mov
add
mov
int
or
jo
mov
int
in
scas
in
in
xchg
fmuls
icebp
mov
stos
sbb
push
loope
in
mov
imul
jle
cmpsl
pusha
rorb
pop
je
xchg
and
pop
inc
pusha
or
inc
filds
pop
jb
out
and
movsl
push
fnstenv
sbb
jp
iret
cli
xor
sbb
sub
lods
inc
or
mov
add
in
sub
jns
pop
cmp
mov
mov
push
sub
call
jl
adc
outsb
movsl
inc
fwait
sub
jl
in
leave
cmp
mov
push
dec
fidivl
cmp
cmc
shlb
int3
fimuls
xor
lods
cli
lahf
popa
repz
mov
lock
daa
lods
loope
mov
aam
fucomi
stos
sar
leave
sub
movsb
das
and
inc
ds
inc
std
pusha
out
add
je
sbbl
inc
aam
push
xchg
lock
mov
popf
stc
adc
xchg
adc
adc
xchg
call
enter
cmp
cmc
mov
jecxz
inc
adc
test
insb
push
and
xchg
enter
xor
lods
in
cmpsb
pop
popa
mov
cmc
mov
ret
bswap
stos
loop
data16
xchg
xchg
lock
call
aas
jns
negl
loop
lds
push
ret
mov
xor
xor
cmp
mov
in
pop
movsl
sbb
sbb
mov
sbb
pop
adcb
add
inc
mov
div
clc
inc
rorl
fdiv
ljmp
push
add
push
mov
mov
push
jle
sti
pop
jle
arpl
jecxz
jnp
jmp
mov
cld
lcall
adc
aam
sbb
ret
adc
mov
mov
jno
daa
ja
movsl
ret
int
add
mov
xor
rcll
adc
xchg
add
in
jecxz
fisubrl
add
and
dec
mov
dec
mov
imul
cwtl
mov
es
mov
mov
pop
stc
jle
and
cwtl
cmpsb
mov
adc
popf
xchg
repnz
call
test
cmp
in
lahf
daa
inc
ds
xchg
lcall
outsb
lock
std
mov
outsl
and
bnd
adc
psubq
lds
loope
sti
add
push
pop
fdivl
sti
push
mov
jge
repnz
jle
jns
ja
repnz
pop
daa
fcomp
adc
mov
jg
sti
or
adcb
rolb
and
push
mov
jp
gs
lahf
or
scas
mov
xchg
movsb
clc
pop
push
rcrb
jg
jne
shl
movsl
push
mov
add
cs
push
or
addr16
imul
mov
sbb
cs
mov
mov
cmp
sub
or
lret
xor
nop
pop
sbb
ja
lea
std
cmp
test
dec
divl
sbb
pop
repz
mov
divb
inc
mov
test
dec
mov
scas
pop
pop
mov
xchg
es
sbb
add
xor
mov
loope
dec
jmp
dec
sub
adc
shlb
stos
fcmove
lcall
jb
sbb
movd
out
pusha
and
shl
push
adc
cmp
lret
add
and
mov
inc
in
sub
pop
sub
mov
jge
pop
cltd
push
fs
mov
jne
into
sub
fdiv
mov
fdivr
scas
loope
lret
movsl
loop
cwtl
push
cmp
stos
jae
hlt
es
js
mov
xor
lret
mov
fidivs
adc
sahf
ja
push
mov
xchg
dec
enter
pop
pushw
pop
fdivrs
aad
out
testb
sub
xchg
aad
aad
or
rcrb
mov
sahf
sbb
and
xchg
add
dec
or
iret
mov
adc
mov
and
push
mov
mov
mov
daa
cmc
aam
xor
shrb
and
xchg
lahf
push
adc
out
xlat
dec
jl
push
xchg
mov
mov
mov
push
sbb
inc
andb
jns
int
ret
push
pop
js
mov
rcrl
push
aam
cmp
or
loope
xor
xchg
iret
jb
adc
xchg
or
sahf
stos
push
test
ss
sub
jl
hlt
in
xor
push
addr16
test
sub
push
and
iret
push
pop
and
dec
xchg
or
dec
nop
xchg
aaa
in
ja
push
outsl
lret
in
into
popa
fldt
mov
jne
xor
and
dec
lcall
dec
add
mov
xchg
popa
xor
cs
cmp
aad
stc
je
jg
xlat
fimuls
hlt
jns
icebp
cmc
xlat
jnp
mov
jo
xor
xchg
mov
clc
xor
or
cld
test
outsb
pushf
mov
mov
push
bound
push
fidivl
mov
imul
jae
dec
push
movsb
nop
fimull
push
sub
nop
pop
cmp
fs
pop
lret
ret
pop
cwtl
shl
push
add
cmp
orl
outsb
sub
dec
call
daa
and
and
testb
xchg
jl
inc
imulb
lcall
dec
xchg
dec
pop
mov
out
dec
repnz
sub
aad
cli
iret
int3
fwait
iret
xchg
fdivp
xchg
dec
fs
imul
cmovns
add
sti
xchg
push
cmp
lock
orl
xchg
sub
push
ja
sbbb
mov
add
repnz
daa
aad
add
cltd
das
popf
push
adc
clc
inc
push
push
dec
xchg
in
fisubrs
push
or
pushl
in
pop
test
dec
mov
gs
mov
sbb
push
fisttps
push
jbe
jmp
cmovp
loop
pop
mov
fidivs
mov
inc
inc
aam
enter
dec
lea
mov
shlb
cs
mov
rcll
fidivrs
dec
mov
clc
or
stos
mov
shl
adc
fstpt
pop
sti
stos
enter
xor
xor
scas
fcom
jno
mov
pop
xchg
pusha
iret
scas
xchg
pop
fs
xchg
push
push
xchg
icebp
cmp
xor
dec
loopne
push
jecxz
aam
sbb
cmc
pop
fcmovnb
iret
jne
jle
stos
inc
cmpb
sbb
lahf
pop
movsl
imul
mov
sub
rcrb
push
mov
jg
dec
lret
ret
mov
jb
aam
xchg
mov
fsubr
mov
mov
mov
sti
jg
inc
xchg
push
xor
jne,pt
sahf
scas
out
test
mov
ss
add
sarb
xor
cmp
cmpsl
push
repnz
push
jo
mov
sub
lods
and
out
outsl
in
jns
scas
js
xchg
inc
sbb
inc
dec
add
mov
inc
sub
sub
movsl
mov
ficoms
bswap
imul
inc
sub
int3
pusha
push
pop
test
mov
pop
and
cmpsb
inc
bsf
das
arpl
clc
ret
rcr
fistl
aam
movsb
xor
jmp
fwait
mov
mov
mov
inc
mov
sub
push
add
xchg
sbb
push
hlt
sbb
pop
js
mov
aas
mov
test
jnp
cltd
daa
jmp
push
fiaddl
imul
push
pusha
cmp
mov
daa
inc
xchg
cmpsl
and
jecxz
testl
nop
clc
inc
decb
divb
pop
sbb
rcl
dec
jo
fs
jno
push
push
test
mov
fs
sub
ljmp
jmp
adc
movsb
sbb
sti
daa
pop
repz
sbb
xchg
sbb
push
test
dec
fsubl
mov
push
mov
cmpps
dec
bound
ret
xor
sub
pop
and
push
or
outsb
sbb
push
fists
movsb
xor
movsb
sbb
addr16
cwtl
cld
inc
sub
sarb
or
iret
iret
test
mov
xlat
insb
lds
dec
enter
add
fdivrs
add
fcmovb
daa
mov
xor
jnp
scas
repz
mov
fsts
xchg
lcall
push
jle
push
mov
movsl
mov
insb
mov
enter
in
fisttps
jecxz
outsb
iret
out
add
inc
dec
mov
shll
cmp
lods
int3
test
lret
stos
inc
movsb
loopne
sub
sbb
lods
xor
xchg
pop
addl
inc
jns
push
jns
inc
cmp
shl
jge
push
cltd
jecxz
dec
sbb
and
out
sbb
pop
cmpsl
idivb
pop
cltd
pop
mov
popa
repz
rcr
mov
adc
xchg
mov
jmp
adc
in
sub
shll
rclb
adc
push
or
xlat
inc
nop
xor
les
repz
ss
or
lahf
pop
jne
sub
and
and
cmpsb
adc
rorb
lods
imul
pop
lods
pop
out
mov
push
pop
subl
push
inc
mov
shr
jecxz
jmp
mov
adc
leave
adc
rcrl
sbb
pop
into
lretw
ret
cmp
add
test
pop
adc
test
aas
inc
jo
push
inc
mov
or
repnz
push
test
adc
outsl
cmp
lods
cld
insb
popf
fimull
cmpsb
mov
jnp
ljmp
insl
test
gs
xor
addr16
aam
mov
icebp
push
subb
pop
into
inc
jae
add
pop
or
repz
call
mov
je
js
inc
cwtl
xlat
and
xor
subl
jno
xor
sub
imul
jecxz
cmc
or
out
std
jns
push
or
xchg
movsl
adc
sub
sbb
jg
inc
cmc
loopne
sub
jb
mov
dec
loope
xor
sub
cmpsl
dec
cmc
or
lock
loopne
in
inc
iret
inc
mov
ret
pop
stc
scas
cld
iret
and
adc
xlat
sar
clc
dec
aas
or
cmpsb
leave
pop
push
iret
adc
out
xor
enter
incl
and
loope
add
popf
roll
mov
adc
imul
or
mov
lods
mov
xorl
ss
repnz
mov
call
outsl
call
stos
fbld
inc
mov
xor
iret
mov
cmp
mov
nop
daa
test
pop
or
add
xchg
lods
jbe
push
jg
ret
int
dec
mov
fcoml
fcomp
icebp
mov
push
lahf
mov
popf
loope
inc
insb
xchg
loopne
faddp
adcb
or
lods
hlt
push
movsl
xchg
loop
xchg
xchg
jns
mov
ja
pop
inc
lahf
sti
sbb
or
dec
inc
mov
sbb
or
fisubrs
pop
mov
push
jnp
xor
mov
and
rorb
repnz
and
or
pop
scas
loop
or
addb
xor
shlb
push
je
push
or
sub
mov
adc
inc
add
inc
xor
mov
dec
xor
push
xchg
or
outsb
fmull
fstp
inc
roll
call
sbb
outsb
hlt
lret
cmp
cmpsl
jns
ret
jl
push
dec
lds
fadd
mov
fs
outsb
mov
mov
fidivs
shll
mov
xchg
sub
pop
popf
mov
add
dec
dec
cmp
or
pusha
cld
fnstenv
mov
mov
rcrl
mov
out
or
insb
jmp
or
in
lods
pop
test
jecxz
or
mov
mov
loope
pop
or
inc
mov
xor
push
clc
jp
dec
fidivrl
and
push
andb
sbb
add
in
sub
cmp
dec
mov
sbb
pop
mov
lahf
jg
add
je
flds
dec
mov
sahf
loop
rclb
dec
or
dec
daa
pop
lds
test
mov
cmpsl
sbb
enter
push
inc
mov
sahf
fldenv
xor
pmaxub
xlat
adc
frstpm(287
aaa
in
ret
sub
dec
jo
cmp
adc
mov
or
ds
push
mov
xchg
cltd
and
push
cmp
xor
dec
fs
fsubrs
in
push
inc
sub
leave
jo
push
pop
insl
xchg
pop
shl
xchg
cld
mov
push
mov
mov
call
pop
sbb
fs
lahf
push
xchg
inc
mov
jnp
cmpsl
je
or
jae
imul
ret
pop
jo
jo
and
xor
jb
pop
pop
in
int
and
and
js
in
repnz
xchg
iret
in
jb
scas
inc
sub
push
or
loop
sub
stos
mov
mov
inc
repz
adc
lcall
stos
inc
xchg
lods
xlat
jbe
in
inc
mov
push
sub
pop
addr16
sti
cmpsl
lea
cmc
mov
xchg
jge
xor
or
mov
jp
loop
je
jmp
cli
push
jae
movsb
mov
pop
and
pop
mov
adc
xor
lret
push
sti
push
clc
ret
dec
fcomps
inc
loop
pop
js
cwtl
sbb
lods
imul
push
in
mov
cmc
test
xchg
inc
jmp
scas
inc
out
test
sub
xor
and
push
enter
fstpl
rcrb
adc
test
jns
insb
sbb
test
inc
or
pushf
js
mov
cmpsl
push
jae
cwtl
icebp
les
jbe
xchg
push
lret
inc
das
push
and
sbb
fidivrs
pop
fmull
enter
jg
pushf
in
mov
les
fs
iret
mov
inc
outsl
sub
mov
xlat
out
mov
scas
cld
pop
sub
xchg
adc
pop
lret
xor
sbb
mov
dec
cld
lret
inc
je
mov
inc
into
stos
cmpb
stos
fdivrs
adc
arpl
loope
lods
add
mov
sub
outsl
movsl
or
mov
scas
stos
imul
push
out
mov
add
inc
inc
imul
std
inc
loope
xchg
enter
sub
inc
mov
cs
mov
jne
in
test
push
cmp
fisubrl
push
adc
push
repnz
and
mov
push
mov
and
sbb
xor
jp
sbb
pushf
es
out
and
sbb
mov
mov
fdivrl
xchg
gs
icebp
in
push
imul
ja
pop
push
divl
cli
leave
imul
stos
xchg
pop
subb
dec
xchg
add
fucomi
mov
popa
test
push
dec
pop
fnsave
pop
mov
fisttpll
xor
mov
in
mov
sbb
test
test
cli
aaa
addl
cmp
jg
sub
clc
sub
xchg
mov
inc
stos
lods
mov
rcrl
scas
xchg
insl
jns
je
mov
mov
in
out
xor
sub
dec
jle
xor
xlat
outsb
jge
jne
mov
rcr
pop
imul
inc
jbe
sti
xchg
xchg
mov
cmp
jp
sbb
imul
lods
adc
test
insb
cs
push
lahf
push
std
inc
mov
jecxz
das
mov
lds
lds
pop
arpl
and
call
jb
inc
mov
add
pop
add
enter
nop
pop
lds
into
xor
xchg
test
ds
adc
arpl
mov
loope
jae
jp
mov
sbb
gs
movsl
inc
mov
aam
fsub
dec
insb
mov
enter
mov
ljmp
inc
shll
stc
pop
mov
loopne
and
xchg
scas
dec
and
nop
dec
mov
lods
cs
mov
xor
lock
pop
dec
fstpl
mov
gs
fnstcw
xchg
inc
sbb
pop
jecxz
push
or
loopne
jge
pop
xchg
aas
jo
or
pop
test
jae
jmp
sub
push
xchg
jmp
xchg
push
mov
pop
loopne
sbb
cld
or
mov
gs
pop
jecxz
sub
push
movsb
popf
test
lahf
mov
addr16
sbbl
mov
je
call
ja
cmpsl
xor
mov
lret
fisttpll
and
jo
add
lahf
add
xor
mov
rcrb
xlat
pop
jl
push
jbe
mov
mov
push
push
cmp
dec
push
inc
mov
jbe
jns
cli
pop
xchg
jp
popf
mov
jmp
std
leave
lods
sbb
leave
push
push
test
sbb
xchg
test
in
in
dec
mov
pop
lret
dec
sbb
repz
sub
insl
mov
movd
cli
fmul
aam
sub
in
lahf
sub
sbb
mov
mov
lahf
push
mov
and
cmc
sub
push
int
in
mov
add
cmp
add
aaa
in
lods
sahf
inc
and
xor
sbb
push
test
xor
ret
es
shll
xor
dec
into
repz
ficompl
mov
pop
enter
cmp
inc
sbb
cli
nop
ss
push
sbb
cld
data16
into
ret
ficomps
bound
daa
cmp
ss
pop
push
aas
mov
sbb
cwtl
sbb
xchg
ljmp
dec
idivb
and
call
push
stos
or
jg
bound
mov
ds
pop
sbb
test
xchg
cmp
jle
mov
xor
add
mov
mov
jo
rcrb
push
xchg
jp
mov
jne
mov
push
pop
outsb
repz
insb
pop
pop
les
mov
in
lahf
jae
or
adc
push
loope
push
lea
and
int
lret
dec
imul
mov
add
mov
jb
mov
dec
movb
pop
and
pop
ja
je
lods
dec
inc
and
push
repz
fs
data16
inc
ljmp
cmp
in
es
rorl
sbb
fcomps
imul
sbb
sbb
sbb
ss
shll
les
andl
je
jle
sub
lock
lods
jg
mov
sti
cmp
mov
mov
scas
or
xor
hlt
cli
push
and
mov
mov
sub
dec
add
dec
dec
ret
add
adc
lock
scas
dec
imul
xor
inc
into
int
scas
cmp
dec
popa
push
jle
js
in
pop
jo
loope
ret
pusha
inc
inc
lcall
pop
cld
sbb
push
test
pushf
push
push
cmc
divb
sub
xchg
pop
cs
adc
xorl
jns
inc
rol
dec
movsl
jle
pop
mov
push
rol
std
les
stos
fwait
sbb
lods
xchg
mov
bound
iret
aad
inc
in
mov
fcompl
inc
in
add
push
out
cwtl
aad
xlat
in
test
cmp
sub
test
mov
xor
hlt
xor
hlt
mov
adc
dec
mov
mov
rclb
enter
pop
xchg
std
xchg
cmc
test
cld
cmp
ss
nop
push
call
mov
push
lds
jae
das
ret
scas
dec
rolb
rcrl
iret
and
sub
lock
pop
fiaddl
das
rol
pop
cmpsl
ja
or
rcrb
ds
inc
or
sub
pop
ficoml
mov
add
pop
xor
stos
or
popa
mov
stos
into
jne
xorl
pushf
add
push
add
js
pop
add
cmp
pusha
andl
int
inc
mov
stc
enter
dec
push
test
xor
out
andb
lret
mov
test
or
daa
cmp
cltd
std
xlat
mov
push
xor
imul
ss
pop
jb
clc
jne
daa
and
aas
xchg
ret
xchg
fsubrs
mov
xchg
fs
push
push
dec
adc
out
lea
inc
rolb
mov
pop
lds
insb
loope
add
add
je
and
dec
sub
xchg
jecxz
lods
outsb
jbe
push
lods
xor
clc
jbe
fadds
jns
dec
ljmp
lret
outsl
in
jbe
insb
pushf
xor
popf
jecxz
or
ficoms
pop
xchg
sahf
adc
sub
lods
lods
js
adc
mull
das
cmp
idivb
push
lret
or
mov
sbb
jns
xor
cmc
cmp
pop
adc
cltd
aad
mov
cmp
cld
cmp
in
out
in
mov
xchg
adc
add
jne
xchg
pushf
xchg
sub
std
push
xor
sbb
popa
ds
cmp
lcall
mov
cwtl
mov
mov
sbb
in
nop
nop
inc
nop
mov
fiadds
ljmp
test
xchg
shrl
lcall
inc
pop
les
repz
leave
loop
test
xchg
cmp
adc
pop
cmp
jne,pn
scas
out
push
pop
sti
dec
push
jbe
in
sbb
loope
or
stos
loope
and
stos
mov
mov
repz
xor
mov
push
dec
inc
and
xchg
mov
shlb
jae
mov
jae
fildll
or
or
les
mov
add
sub
lods
add
jb
sub
pop
imul
sub
sbb
xchg
ret
imul
xchg
sbb
outsl
ret
jbe
xchg
or
rol
jp
cmpb
xorb
sub
and
cltd
in
inc
cmp
ret
pop
adc
and
sub
nop
imul
cmp
clc
dec
fldt
push
sbb
push
imul
inc
lods
ret
imul
enter
popa
or
out
leave
dec
lods
cltd
mov
cmp
sub
mov
mov
xchg
shll
dec
cltd
sar
add
or
push
ds
aas
mov
xchg
xlat
xchg
stos
int
mov
adc
cs
xchg
jp
fildll
hlt
rcll
jo
test
sbb
xchg
pop
dec
dec
xor
jle
xlat
sahf
rcrb
sbb
mov
adc
dec
jae
es
rcll
push
mov
pop
idivb
test
lahf
mov
outsl
mov
sbb
dec
xor
jno
push
ljmp
mov
repz
cmp
xchg
mov
lret
roll
imul
pop
cmp
stos
in
pop
test
jp
adc
sbb
jo
adc
xchg
test
out
jmp
jp
pusha
dec
push
push
pop
fimull
rorl
add
xor
insl
xlat
popf
xor
push
inc
adc
jns
ja
int
xor
jmp
fstpl
fstl
mov
adc
jo
adc
mov
and
sahf
inc
lods
mov
jno
iret
std
shrl
xor
pusha
sub
mov
adc
mov
or
sbb
pop
int
xlat
adc
cmpsl
xor
mov
es
adc
aaa
gs
mov
mov
add
jmp
lea
lcall
sub
mov
fs
test
sbb
pop
push
adc
popa
stos
adc
fdivrs
cmp
lods
pop
popf
mov
push
pop
sub
jmp
ret
mov
pop
mov
cmp
pop
inc
add
test
ficomps
je
andb
mov
out
jmp
int3
ss
push
dec
mov
xor
outsl
lock
and
dec
sahf
xchg
clc
mov
sarb
cmp
insl
cltd
jg
lock
lock
cmpb
mov
into
popa
pop
clc
xlat
in
dec
adc
lcall
sbb
push
push
ret
out
fidivrl
jns
cmp
test
imul
adc
imulb
pop
loop
mov
fimull
push
subl
sub
lods
push
adc
lahf
jecxz
mov
inc
mov
and
fst
dec
pop
icebp
push
rorb
sbb
sub
adc
mov
jb
movsb
cmp
inc
xchg
push
inc
xor
inc
push
xor
lods
fsubs
sbb
mov
pop
pusha
cmp
mov
out
sub
cmp
mov
inc
pop
das
xor
mov
inc
add
and
xor
paddq
les
jge
pop
jno
std
fdivrs
fisubs
cmp
inc
popf
sysret
test
fldenv
loope
inc
pop
into
mov
cmp
scas
xlat
jne
lea
inc
popf
push
loop
cmpsb
scas
push
or
test
lea
lcall
jmp
xor
pop
test
in
cmpsl
mov
lds
push
jno
push
or
icebp
inc
xor
dec
xor
jbe
pushl
and
cmp
testb
jns
xchg
lret
jns
jo
loop
mov
mov
dec
cmovb
cmp
cli
or
js
mov
movsl
imul
aas
sahf
xchg
loop
mov
jae
pushf
mov
jecxz
test
inc
mov
movsl
mov
es
mov
into
pop
and
xor
jle
push
cmpsl
mov
rcll
mov
jb
pop
push
int
adc
into
cltd
leave
iret
popa
xor
push
sub
lods
xor
jge
mov
rorb
and
jl
cmp
xor
bound
xor
sbb
ljmp
pop
fs
push
jg
cs
xorb
insb
int
xchg
sub
jae
fldenv
mov
aaa
sub
je
out
push
mov
push
hlt
pop
sub
popf
sbb
inc
repz
push
pop
pop
jbe
mov
cwtl
sarl
mov
add
roll
or
sub
mov
enter
ficompl
push
xor
mov
fidivl
add
icebp
loope
jle
icebp
jle
push
push
inc
fwait
ret
dec
orl
in
pop
cltd
sbb
jle
push
cmpsb
mov
sbb
loope
lcall
and
sbb
and
and
inc
insb
cld
pop
stos
cmpsb
pop
mov
mov
fcmovnu
mov
inc
fisubrl
jmp
aas
and
int
loopne
and
or
mov
loope
pop
push
jge
pop
pop
iret
sbb
addr16
cwtl
dec
int3
pop
ljmp
scas
loope
cld
pop
loop
cmp
addb
pusha
imul
push
mov
ja
sub
adc
aam
loop
push
aam
data16
push
push
ds
movsl
xor
or
mov
push
shrl
out
test
jo
cmp
scas
test
and
sbb
call
jo
xchg
out
mov
out
sti
ja
aaa
dec
jle
testl
pop
xchg
leave
mov
test
fnstenv
rclb
inc
subb
dec
sarl
es
fisttps
sbb
xchg
and
or
mov
iret
popa
push
inc
cmp
lcall
sbb
imul
sub
int3
mov
push
pop
ss
imul
popf
sub
cmp
push
mov
pop
out
xor
in
jns
lods
jg
hlt
or
stos
jo
in
jbe
lcall
cmpb
aam
mov
dec
outsl
or
insl
pop
out
insb
sbb
aad
pop
sub
sub
enter
add
sarl
lods
test
loope
cmp
adc
dec
jae
sub
ss
ja
mov
push
push
jno
in
call
dec
cmp
into
inc
cmp
scas
test
dec
insb
mov
lods
icebp
movsb
cmpsl
jl
andl
sbb
bound
mov
or
out
mov
aas
scas
push
push
dec
mov
jmp
dec
test
stc
subl
lret
in
mulb
into
and
sub
shrb
dec
ja
in
rorb
pop
mov
movsb
push
and
fdivs
cmp
jmp
into
and
mov
jbe
xor
jne
mov
stc
cmc
or
jmp
xor
push
mov
out
aaa
in
divl
push
out
lret
and
sarb
pop
ret
push
cmpsb
je
inc
pop
pusha
push
push
loop
jne
adc
sti
mov
and
cs
lds
scas
pop
rcll
adc
sub
outsb
jb
aas
xor
mov
mov
mov
adc
cmpsl
and
xor
std
xor
mov
xchg
dec
dec
div
pop
sahf
sub
cld
imul
aas
add
and
mov
jmp
push
push
or
adc
mov
movl
mov
and
push
lock
xlat
mov
loopne
aam
and
mov
or
sbb
and
sbb
xor
aad
dec
fld
mov
mov
iret
adc
lods
int
rorb
int3
idivl
jne
mov
ljmp
call
add
pop
in
fidivs
adcb
mov
sbb
enter
stos
fidivrl
or
pop
sbb
xor
in
sub
xor
pop
lahf
cmp
dec
inc
cmpsl
das
fists
addr16
mov
test
rcrb
mov
sbb
lret
repz
movsl
lret
sbb
pop
lea
cmpl
sbb
add
sbb
dec
lcall
fcoml
les
mov
stc
cmp
call
loop
push
xchg
jmp
rolb
mov
push
adc
addr16
mov
loope
inc
mov
js
or
dec
dec
dec
and
pop
xchg
fists
fbstp
or
outsl
out
push
mov
rorb
and
push
mov
sbb
loope
inc
cwtl
cmp
mov
enter
int
std
jg
in
pop
adc
mov
and
xchg
push
push
out
xlat
popa
or
and
xor
xor
out
xchg
sahf
cmp
mov
push
pushw
mov
call
pop
add
movsb
pop
pop
jmp
jbe
popa
push
shll
loopne
mov
jp
sahf
pop
cmp
stc
jo
cwtl
mov
inc
jbe
notl
idivb
add
jae
stos
adcl
pop
testl
and
dec
leave
push
mov
pop
fwait
leave
mov
or
pop
sub
iret
out
mov
repz
fnsave
into
add
sbb
andb
imul
mov
adc
outsl
pop
in
push
mull
daa
jge
inc
rcrb
and
in
pop
sub
sub
xchg
cmc
push
aad
sub
or
and
cs
arpl
jne
imul
ficoml
fwait
insl
enter
jl
pop
jp
fidivs
push
jo
stos
imul
movsl
pop
popa
cltd
xchg
adc
mov
ret
pop
inc
popf
sbb
ret
push
and
dec
jb
mov
jp
push
mov
jp
xlat
subl
adc
int3
stos
sbb
jne
pop
flds
divl
pop
mov
adc
loopne
test
dec
icebp
and
jne
repz
pusha
xor
pop
pop
add
jbe
lret
dec
inc
iret
cmp
sub
popf
xchg
fisubs
andb
fists
xor
mov
jns
cmp
xchg
xchg
add
faddl
sub
xor
jne
cmpsl
adc
aaa
ror
int
xor
sbb
pop
outsb
xor
mov
filds
leave
and
cmp
jne
stos
hlt
mov
inc
aas
inc
outsb
adc
repnz
mov
mov
and
adc
out
aad
sub
stc
inc
xchg
nop
test
push
mov
push
push
cmp
stos
pop
fldl
pop
ds
ljmp
popa
popa
pop
ss
adc
xor
leave
add
mov
shll
adc
test
mov
lahf
push
das
pop
mov
push
xchg
aad
mov
orps
mov
test
adc
clc
dec
inc
jo,pt
das
mov
cs
sub
pusha
mov
dec
stos
xchg
mov
adc
lret
mov
fbstp
movb
pusha
add
movb
ror
push
cltd
rcl
mov
mov
les
out
dec
or
add
shrb
sub
inc
arpl
or
movsl
ret
iret
shlb
mov
divb
xor
lret
push
dec
cmpsl
adc
push
scas
push
stos
in
mov
adc
jnp
inc
mov
mov
addr16
mov
les
jbe
out
hlt
ds
fcmovu
hlt
or
outsb
sbb
fs
cmp
ret
popf
and
fimuls
mov
cmp
repnz
adc
sub
xchg
push
cmc
bound
jp
sub
iret
loope
xchg
stos
ja
add
call
cmp
xchg
cmp
ret
push
jp
data16
orl
add
sbbl
xor
or
repz
add
and
xor
jmp
mov
mov
dec
lds
fs
inc
movsl
adc
outsl
xor
ja
das
sbb
cli
jb
sbb
int
push
pop
ret
stos
lret
fidivs
mov
sub
aaa
mov
dec
insl
mov
cmpl
jl
fadds
fimull
insl
outsb
daa
sub
add
out
mov
cmc
fdivp
adc
jge
cs
or
push
inc
cwtl
lret
push
data16
sub
rolb
pop
adc
andb
adc
mov
lret
lret
je
ret
arpl
cmc
fisubs
sarl
pop
mov
repz
jne
sahf
cs
lods
pop
dec
rclb
adc
fs
aaa
jmp
xchg
push
rclb
push
and
mov
jnp
lret
fldl
jae
jge
mov
ljmp
dec
into
add
xchg
inc
pop
out
jb
loopne
sbb
mov
les
pop
repz
add
in
fwait
scas
popf
adc
dec
jp
or
popa
push
cld
adc
adc
push
out
dec
outsb
outsb
push
add
lods
push
test
pop
push
mov
sbb
push
sub
fcmove
lret
ficompl
stc
rcrb
ret
cmc
in
or
aam
fwait
aam
push
push
xor
pop
xchg
ds
test
jne
xchg
sbb
int
lock
sub
fiadds
mov
fcoml
mov
leave
xchg
xor
je
stos
leave
lock
push
xor
repz
mov
mov
arpl
fsubrp
ss
pop
xor
dec
and
mov
lfs
outsb
adc
ret
movsl
xor
cltd
xchg
mov
fs
cs
stc
rolb
addr16
out
lahf
in
dec
sbb
push
arpl
movb
adc
mov
mov
push
mov
xor
in
dec
loopne
mov
dec
subb
push
ficompl
outsb
in
sbb
jge
cwtl
cli
lret
jg
cld
pop
cmpsl
pop
mov
movsb
mov
ror
pop
stos
addr16
fcmovnb
cmp
push
lcall
or
add
mov
fnop
adc
pop
outsl
or
inc
xor
clc
mov
xlat
xor
jno
stos
xlat
and
imulb
daa
push
std
jecxz
sbb
fldl
push
fcmovnu
jns
add
mov
dec
mov
mov
mov
mov
stc
push
inc
cwtl
leave
sub
inc
mov
or
xchg
shrl
lcall
aaa
aaa
and
pop
in
add
dec
mov
sub
enter
jb
loop
shrl
inc
hlt
adc
xor
dec
movsb
outsl
fucom
mov
adc
adc
push
hlt
dec
inc
add
xchg
rcl
loopne
xchg
mov
add
mov
testb
jg
sbb
loop
mov
dec
sub
lea
and
lods
sub
neg
les
std
rolb
test
push
mov
sbb
mov
iret
pop
aam
ss
add
push
test
pop
sbb
fcomi
xor
repnz
test
adc
int
ss
addr16
fwait
xlat
int3
incb
enter
fdivrs
jg
pop
push
pop
pop
lea
sub
flds
add
push
loope
sub
repz
cltd
lds
imul
dec
shl
out
add
bound
adc
add
cmpsl
fs
add
test
adc
inc
inc
iret
clc
out
sti
or
sbb
nop
testl
or
movsb
pop
mov
dec
sub
jge
mov
cltd
fs
lock
mov
scas
hlt
std
ret
mov
scas
arpl
leave
push
cmp
aam
add
mov
cmp
test
mov
pusha
int3
jb
mov
adc
jmp
jl
xorl
pop
lahf
mov
jle
or
sub
decb
inc
testb
fmuls
jb
mov
fcmovnbe
push
popa
movsl
xchg
je
cmp
int3
stc
lret
scas
mov
insb
js
push
xor
mov
repz
fs
mov
hlt
mov
jo
and
lret
faddl
push
xor
movsb
outsl
pop
sti
insb
sub
test
outsl
sbb
and
lea
dec
dec
test
shll
clc
mov
jmp
push
sbb
push
and
jns
or
int
or
add
and
xchg
xchg
cwtl
cmp
lods
aad
push
test
and
mov
imul
addr16
mov
cmpsb
icebp
stc
mov
call
mov
sbb
out
and
int3
mov
jp
aam
lahf
lahf
fsubr
ja
mov
popa
xor
popf
aaa
adc
sub
jp
xchg
inc
int3
adc
stc
repnz
mov
jp
test
sbb
inc
cmpsb
mov
cmpsl
dec
sbb
mov
add
pusha
dec
testl
lahf
inc
ljmp
and
xor
scas
je
xor
xchg
bound
pop
mov
daa
stc
fstpt
clc
repnz
add
and
jecxz
dec
movb
mov
outsb
push
scas
ds
mov
loope
rcrb
pop
xor
mov
mov
sub
lahf
push
xchg
push
jmp
out
adc
xchg
mov
in
push
lahf
xchg
xchg
nop
pop
mov
sbb
mov
adc
lahf
add
xor
ret
mov
sti
call
inc
adc
fldenv
adc
jae
mov
xchg
call
divb
mov
test
fs
jl
xor
mov
lods
outsl
bound
rcll
sub
cs
add
pop
sub
jmp
jo
push
mov
fadd
pop
push
jnp
add
scas
xor
hlt
repz
dec
ljmp
enter
test
mul
sbb
test
or
hlt
sub
push
mov
rorb
std
call
sbb
stos
fstps
push
arpl
imul
je
test
push
leave
ja
jp
daa
sub
mov
iret
xor
mov
mov
or
call
push
sub
add
out
int3
gs
jecxz
xchg
in
cmp
fwait
jno
jl
test
sub
sub
jb
ficomps
scas
xchg
ret
aas
shll
cmpb
cmp
inc
add
cld
cli
jl
jecxz
push
mov
loop
call
mov
cmp
mov
aad
xchg
nop
scas
mov
scas
dec
cmc
aam
sub
pusha
dec
and
mov
jno
ljmp
bswap
lds
add
dec
idiv
hlt
daa
iret
push
xlat
into
lea
scas
mov
iret
int
aaa
adc
cmp
loop
xchg
adc
dec
outsl
mov
sub
mov
je
xchg
test
xlat
dec
outsb
mov
cmp
pop
aas
scas
call
push
push
lods
sub
movsb
out
dec
daa
mov
add
xchg
outsl
daa
sti
xor
mov
add
test
and
mov
out
mov
dec
or
mov
add
push
addr16
cmp
xchg
je
ret
in
jbe
fisttpl
cmp
and
les
rclb
addl
mov
xchg
pop
test
mov
or
out
and
arpl
push
sbb
ljmp
sbb
fisttpll
and
push
inc
xor
jge
inc
mov
mov
mov
and
out
cs
nop
and
sbb
and
popa
and
inc
dec
jno
lds
cmp
push
ret
out
stos
xchg
hlt
xchg
cmp
adcb
cmove
dec
push
cs
data16
shl
push
xchg
cmp
or
daa
xchg
sbb
sbb
stos
push
add
xor
cmp
idiv
ja
outsb
mov
cmp
js
adc
push
jne
push
sahf
mov
lds
out
adc
lret
ror
cli
adc
pusha
and
aad
pushf
jo
push
dec
loop
mov
loope
into
cmp
aas
ljmp
or
clc
js
das
jo
jb
push
bound
pop
pop
push
sbb
and
out
jnp
lds
rcr
xlat
mov
jns
rcr
lcall
cmp
mov
pop
dec
mov
xchg
ja
fiadds
xchg
inc
insl
jge
adc
sub
ficomps
mov
aas
xchg
pop
push
aad
push
mov
lret
mulb
ja
pop
fisttpll
inc
sbb
pop
in
repz
jns
jno
or
mov
dec
stos
sub
hlt
test
lods
mov
iret
mov
aad
hlt
or
in
pop
bound
in
int3
int
dec
mov
pop
jge
adc
aas
in
or
push
dec
xor
pop
insl
movsl
cs
sbb
shrb
jecxz
push
cs
mov
ds
inc
cltd
call
leave
lds
in
inc
mov
xchg
mov
sub
cmpl
pop
test
xchg
mov
dec
mov
dec
cmc
sbbb
mov
jnp
dec
xorl
cmp
jecxz
inc
cltd
sub
in
or
dec
mov
mov
adc
in
dec
sbb
pop
and
jp
arpl
adc
sbb
aaa
inc
stos
sub
sub
push
movsl
cmpsl
les
rcrb
outsb
mov
js
ret
jne
jge
adc
push
loop
pushf
xor
xchg
dec
les
push
in
sub
mov
xor
sahf
jmp
lcall
test
cmp
mov
sbb
mov
mov
mov
and
shl
pop
pop
push
mov
daa
xchg
stc
movsb
lea
sbb
cmc
lock
mov
mov
jp
adc
outsl
mov
fnstenv
sub
xchg
scas
js
shl
mov
mov
test
test
aaa
push
mov
outsl
cmp
das
dec
xchg
pop
xor
inc
push
push
pop
aam
in
shrl
sub
test
test
fidivrs
and
pop
push
sub
cmp
jo
dec
arpl
mov
shlb
test
mov
pop
in
in
mov
popf
mov
stos
inc
mov
pop
sbb
dec
lods
push
jmp
out
push
mov
pop
cmp
fwait
adc
repnz
push
jecxz
dec
stos
sub
movsb
push
scas
mov
lods
sbb
dec
in
aas
xchg
sahf
lret
sbb
in
xor
inc
inc
ret
fcomi
ficoms
leave
jl
stc
in
out
je
sti
aam
cltd
mov
or
cld
mov
bound
mov
lea
sti
xchg
inc
test
subb
ret
test
int3
daa
mov
pop
mov
lods
ret
cmp
lret
les
mov
jmp
addr16
jge
dec
push
and
push
mov
repz
mov
cs
ds
fisubs
sbb
mov
fistl
lods
dec
enter
in
xor
cli
cmpsl
popa
loop
cmp
jmp
jl
enter
jbe
mov
adc
js
push
negb
jg
insb
leave
xor
lock
out
mov
enter
ja
inc
cmp
add
jle
cmp
and
add
jecxz
inc
stos
sbb
xor
push
daa
test
mov
adc
xor
mov
clc
loopne
into
cmpsl
cmpsl
mov
enter
pusha
cs
sub
movsb
mov
inc
mov
pusha
and
cld
jmp
rcrb
inc
testl
popa
dec
lods
and
cs
jp
jne
jp
cmpsl
inc
pop
into
cmp
dec
mov
mov
and
movsb
mov
inc
add
inc
decl
fdivrl
push
push
arpl
int
mov
adc
in
mov
or
cmp
mov
adc
push
addr16
rcrl
stos
jmp
inc
aad
cmp
out
pop
dec
sub
cmpsl
cmp
orl
jbe
add
dec
popf
fs
lods
sub
js
push
rcr
aas
fistps
xor
movsl
pop
xchg
dec
xor
ret
mov
mov
add
add
xchg
outsl
enter
or
push
pop
jecxz
insb
sbb
fwait
sbb
and
sub
mov
cmp
sahf
popf
movsb
enter
stc
dec
fildll
lds
je
sub
adc
add
sbb
dec
sub
jecxz
ret
mov
pcmpgtw
js
rorb
roll
or
shrl
cwtl
pop
std
rorb
insb
adc
push
mov
adc
mov
imul
insb
sub
mov
or
sti
xor
mov
pop
xor
mov
xor
jg
mov
das
das
mov
sahf
stos
add
mov
pusha
adc
jmp
movsb
xchg
test
jp
add
stos
shl
aas
stos
jo
mov
neg
dec
cmp
cmp
sarb
lahf
dec
ds
ret
xchg
imul
fcmovb
f2xm1
ret
or
cmpsb
cmp
int3
push
pop
cmpsl
sbb
inc
outsl
pop
cwtl
mov
in
jge
pop
lock
push
sbb
inc
mov
mov
mov
inc
cmp
push
insl
mov
into
movsb
push
in
and
lds
mov
mov
into
mov
mov
lods
mov
outsl
mov
dec
sub
pop
xchg
push
outsl
sbb
mov
mov
and
jg
jb
shl
inc
dec
mov
sub
and
sub
xchg
xchg
mov
sub
addl
dec
sti
fldenv
adc
fdivl
xor
pop
mov
mov
movsb
cmpsb
cmp
push
pop
shlb
hlt
call
or
fistpl
je
enter
xchg
in
push
or
pop
xchg
or
xor
cltd
mov
mov
jo
sbb
dec
jns
push
xor
cwtl
pusha
es
dec
mov
pop
xchg
je
mov
aaa
stos
adc
in
ss
lcall
inc
movsb
add
inc
into
fnstsw
fnstsw
jns
and
leave
pop
nop
lock
pop
mov
mov
jl
and
pop
in
dec
fsubl
pop
add
outsb
pop
mov
jmp
rcrb
or
pushf
dec
cs
sbb
xchg
mov
sub
adc
xlat
push
and
mov
and
mov
jle
jno
dec
lea
fcmovnb
xchg
push
cmpsb
aam
and
setge
push
xlat
dec
dec
fucom
clc
leave
repz
imul
sbb
cmp
xchg
fdivrs
xchg
push
dec
mov
and
adc
repz
or
dec
adc
aas
imul
cs
mov
or
cmp
sub
or
sub
mov
mov
mov
xchg
das
jg
mov
push
or
or
cli
lret
or
ret
mov
fidivrs
mov
test
int
js
pop
popf
shlb
shll
rclb
sarb
lods
dec
in
in
push
sub
test
xor
int3
jb
jle
push
inc
insl
jge
subl
lcall
xchg
mov
cmpsb
push
out
arpl
je
sub
jge
and
cs
inc
jo,pn
stos
xchg
mov
add
and
dec
daa
ror
fstpl
adc
pop
push
lcall
cmp
jne
mov
push
gs
jnp
movd
adc
push
xor
arpl
fdivr
inc
aam
call
inc
mov
mov
add
sub
push
jmp
in
sbb
add
movsb
dec
mov
xor
or
cmc
push
and
cli
ret
mov
int3
adc
xor
sub
jecxz
jmp
int
cmp
inc
stos
hlt
dec
jne
loop
xor
mov
inc
or
fwait
ret
sbb
mov
xor
dec
les
mov
xor
inc
dec
repnz
cmp
call
test
repnz
cmp
popa
adc
add
test
jmp
jecxz
cmp
adc
xor
cmp
and
idivb
mov
fistps
fwait
xor
and
inc
in
push
pop
mov
lahf
jno
outsb
cmp
test
or
inc
cmc
dec
call
xor
sub
inc
aad
popa
aam
ds
rolb
xchg
sti
ds
sub
mov
xchg
ret
mov
ret
pop
xchg
es
sbb
inc
out
scas
and
in
stc
dec
imul
testb
sbb
testb
or
mov
mov
xor
dec
cmp
jne
push
adc
daa
lock
xchg
lods
adc
mov
and
xchg
xor
xchg
inc
addb
rcrl
cltd
and
subb
xchg
insl
popl
dec
mov
push
insw
pop
and
insl
sbb
and
xchg
popa
cmp
out
mov
jecxz
in
lods
fidivl
aad
testb
je
rcrl
cltd
mov
test
xchg
ret
and
fistps
xchg
inc
loop
jo
in
movsb
mov
std
sbb
mov
adc
cmp
movsb
jmp
pop
dec
hlt
mov
adc
mov
inc
pop
sub
jo
and
pop
xchg
cmp
movsl
dec
jae
test
lds
push
adc
pop
lods
imul
lahf
xor
jne
sub
ret
shufps
sahf
push
xor
mov
push
pop
addr16
popf
fadd
repz
lock
lods
hlt
jl
popa
add
mov
les
add
inc
xchg
addr16
cmp
lret
jp
sbb
mov
insl
mov
push
nop
dec
adc
loop
mov
xor
aas
jae
push
mov
adc
outsb
sub
iret
xor
and
loop
popa
idiv
cmp
aam
xchg
mov
add
jl
fdivl
mov
mov
icebp
sbb
dec
dec
inc
les
add
xchg
xchg
cmp
cli
mov
sbb
out
vucomiss
and
dec
jbe
and
fucom
mov
scas
jnp
movsl
fidivl
add
lahf
daa
xorl
pop
popf
and
jne
mov
and
cltd
adc
push
mov
xchg
xchg
xor
loopne
std
and
fbstp
ljmp
pop
cmp
add
pusha
jmp
and
andb
sbb
xlat
jnp
sbb
pop
xchg
cmpl
lahf
dec
repz
xchg
dec
jb
cmp
pop
pop
sub
test
add
push
sbb
xor
or
fisttps
cmp
xchg
jo
stc
movsl
dec
mov
out
add
xchg
leave
lods
lock
xor
std
adc
xor
aad
addr16
call
xor
mov
imul
insl
loop
cmpsl
fistpl
popf
out
jo
jb
and
movlps
dec
or
outsb
jae
rolb
cmp
mov
int3
push
or
cli
adc
lret
rolb
jmp
cmpsl
sub
jb
mov
test
xchg
add
lea
insl
orb
inc
mov
cld
xor
pop
mov
xchg
inc
test
mov
xlat
mov
loop
inc
mov
cmpsl
xchg
push
mov
js
and
push
stos
mov
psllq
aaa
or
bnd
xor
ljmp
push
or
mov
cs
cmpl
or
stos
xchg
inc
push
rcl
pop
insb
mov
roll
mov
mov
aas
add
pop
pop
inc
mov
loope
xor
aas
loop
jnp
pushf
push
test
jne
int
pusha
mov
jbe
add
popa
ja
xor
mov
jbe
jecxz
sbbb
mov
jle
jl
in
xchg
test
jns
ss
sub
mov
sub
dec
adc
inc
int
inc
jg
fcom
push
or
inc
and
inc
adc
add
sarb
xchg
rorb
mov
sarb
mov
pop
out
push
aas
cwtl
mov
insl
push
sub
mov
arpl
adc
shrb
hlt
add
mov
shl
pop
je
xor
roll
xchg
loopne
dec
jecxz
adc
cmp
lock
mov
pop
inc
out
cli
sarb
jle
fwait
inc
xchg
xor
cmp
jp
dec
sti
ljmp
sbb
xchg
mov
mov
xchg
cmpsl
cmp
popf
xor
add
out
phaddsw
std
mov
test
and
sbb
repnz
add
xchg
sbb
movsb
call
jo
mov
sub
fs
sub
cmp
pop
popa
repz
lret
cmp
sub
jnp
stos
mov
fcomps
ljmp
popa
inc
lods
in
xor
mov
aas
pop
outsl
ljmp
inc
mov
aam
ljmp
ja
stos
pop
push
arpl
xchg
ljmp
and
popl
or
pop
lods
dec
out
stos
inc
andl
jl
dec
out
ficomps
push
sbb
bswap
js
movsl
ret
cmp
incb
idiv
adc
mov
pop
je
ficompl
inc
lcall
hlt
ja
movb
mov
mov
push
jne
in
xchg
hlt
shl
movsb
cld
scas
ret
mov
imul
jmp
insb
push
dec
jno
leave
es
cmp
jo
xchg
or
insb
jg
xchg
push
dec
les
and
mov
xchg
sub
mov
add
cmpsb
push
lods
jmp
neg
pop
test
out
enter
fildll
mov
enter
jl
sbb
mov
in
in
and
ret
pop
cwtl
inc
adc
inc
das
arpl
add
or
sti
pop
pushf
jae
mov
lret
insb
outsb
mov
pop
cmp
arpl
sub
add
fcoml
inc
test
ret
sub
pop
out
lahf
jns
mov
lods
adc
in
inc
mov
pop
das
mov
xchg
jns
or
push
imul
dec
sbb
sub
adc
aaa
xchg
push
adc
add
xor
sub
xor
cwtl
or
adc
cmp
jae
pusha
loop
push
cmpsl
mov
testl
push
and
push
sbb
pusha
call
mov
fs
aaa
push
daa
inc
cmpsl
xor
pop
sbb
mov
enter
xchg
lock
add
fcomp
loope
add
fisubs
mov
mov
iret
idiv
push
jns
mov
fidivrl
inc
mov
and
mov
pusha
cmp
jle
or
push
outsb
pushf
jns
dec
scas
ljmp
xlat
arpl
mov
mov
cld
add
ja
lds
sub
cmpsb
je
add
xor
pop
shrl
lods
dec
dec
cmp
ds
and
movsl
aad
shrl
push
pop
inc
mov
js
lds
out
jg
shrb
xor
loop
std
mov
mov
jne
lock
lods
shl
fs
lds
cwtl
or
fidivl
cmp
iretw
std
push
lods
sbb
mov
cwtl
lods
mov
jae
or
movsl
lret
and
xchg
mov
sbb
test
imul
sub
xor
or
mov
jecxz
push
je
and
jno
ret
cmpsb
jb
mov
popf
out
jmp
push
aaa
mov
mov
xchg
and
pop
jmp
xor
jne
fs
ror
rcr
aas
pop
or
fs
mov
hlt
mov
loope
jae
sub
lods
cmpsl
mov
push
repnz
sbb
insb
int
int3
popa
lds
xor
enter
adc
jp
cmp
mov
mov
dec
mov
lds
fisubl
add
cmp
mov
add
pop
dec
jb
packuswb
inc
sbb
sahf
test
setb
loop
pop
aad
fadds
sbb
jno
sub
arpl
mov
push
xchg
mov
shll
sbb
sbb
stc
mov
bound
xor
ljmp
dec
xlat
add
idivb
xchg
fdivr
or
outsb
bnd
fs
popa
mov
cmp
dec
arpl
sub
shrb
pop
pop
gs
lahf
insl
push
push
lret
hlt
push
repz
lret
lock
aam
xchg
lahf
mov
stc
jle
mov
sub
lds
loope
sbb
jl
push
test
aad
dec
lret
cmp
fdivl
out
outsl
hlt
mov
pop
dec
call
add
dec
je
dec
pop
pop
sbb
xchg
rcr
lds
xchg
pushf
push
mov
gs
ret
and
je
pop
sub
and
mov
inc
mov
fisubrs
into
mov
push
fidivrs
push
jae
mov
xchg
jle
push
add
into
daa
mov
xor
clc
cmpsb
fists
cmp
out
fsts
mov
lahf
jb
fnstcw
adc
aas
popfw
je
mov
push
push
xchg
mov
or
jb
cmp
lret
imul
lret
or
les
into
adc
jno
fadds
dec
cld
pop
xor
pop
cli
push
mov
dec
test
ljmp
xchg
lock
jno
jle
mov
jb
mov
sub
fildll
mov
cltd
sbb
repz
movsb
cmc
mov
xchg
jecxz
call
ret
dec
loop
dec
inc
in
fistps
test
jge
fisubrl
sub
enter
lahf
loopne
rorb
aad
lea
mov
sbb
mov
inc
jmp
jmp
in
mov
dec
add
lret
jp
out
mov
cld
xor
aam
rorl
loope
pop
cli
push
sub
loopne
outsb
jmp
push
ret
push
dec
test
push
or
insb
dec
loop
inc
cmp
xchg
sub
mov
sarl
into
imul
or
mov
leave
clc
xor
lret
cmpsl
cwtl
fbld
push
push
lahf
movsl
and
dec
jb
fildll
inc
insb
mov
add
pop
dec
pop
pop
fists
inc
test
pop
out
popf
sbbl
cmp
subl
divb
cli
dec
add
cli
inc
int3
xor
pushl
jno
dec
aam
ja
lods
xor
ficompl
adc
cmp
inc
out
addb
mov
aas
xlat
jnp
stos
mov
xor
mov
xor
test
loopne
inc
push
dec
hlt
gs
cmp
mov
cmp
dec
in
cwtl
ret
inc
mov
sbb
cmp
adc
xchg
or
fcomps
loop
jne
adc
mov
cwtl
lahf
push
stos
aad
mov
mov
push
lret
and
popa
mov
pop
pop
add
pushf
add
mov
push
or
pop
push
andl
cli
pop
dec
jg
outsl
rcrb
mov
and
orl
jne
test
es
shlb
bswap
scas
xlat
inc
inc
inc
scas
movsb
iret
cmp
and
sbb
adc
imul
jno
xchg
into
ss
cmp
push
push
add
imul
mov
xchg
repz
jnp
add
in
pop
daa
dec
xchg
jbe
dec
dec
lods
bound
clc
inc
jno
fstps
cli
fsubrl
push
inc
pop
sub
lret
jae
popf
xchg
clc
dec
cltd
loope
movsl
repz
xlat
loopne
push
orl
cwtl
das
xchg
dec
jo
aas
add
adc
scas
push
scas
mov
pop
sbbl
fisttpl
mov
popa
popa
push
pop
adc
cmp
lea
sub
std
or
aam
inc
imul
jo
cmpsb
push
rclb
or
jae
jbe
or
test
adc
div
popf
dec
shrl
test
mov
jp
mov
mov
out
andl
repnz
mov
or
cmc
inc
pop
loope
andb
cmpb
arpl
and
mov
pop
test
lea
push
and
loopne
inc
movb
and
cwtl
and
inc
add
int3
ret
out
call
sahf
addr16
cltd
inc
test
jecxz
pop
mov
or
call
mov
out
mov
ds
pop
xor
stos
cltd
push
mov
clc
es
sbb
das
scas
pop
xor
dec
inc
insl
xchg
add
sub
adc
outsb
add
out
inc
and
and
pop
jns
push
cs
add
fcom
mov
push
fimull
inc
popa
out
xchg
mov
pop
push
mov
dec
or
shlb
popa
push
jecxz
mov
std
mov
fsubrs
lods
mov
adc
mov
js
je
cld
ja
cld
cs
mov
das
js
jcxz
repnz
mov
lcall
adc
jle
dec
inc
xchg
mov
jge
clc
jo
jno
push
jecxz
pop
cltd
out
daa
lahf
push
test
xor
pop
or
cmp
nop
lods
sahf
cmpb
int
rolb
push
mov
dec
add
cmp
add
mov
mov
xchg
mov
jmp
out
movlps
fdivr
jne
mov
push
movsb
aad
sarl
dec
test
es
fldcw
or
xorl
ret
insl
dec
or
jle
cmp
push
sbb
mov
and
lods
in
es
clc
rcr
ja
in
xchg
adcl
arpl
mov
ret
in
mov
rcrl
fidivs
arpl
inc
mov
popa
jb
scas
cmp
fsubrl
push
adc
sub
popa
out
out
push
jb
test
or
inc
testl
cmp
test
int3
call
fsubrs
jns
jmp
movsb
push
notl
imul
int
fstp
jmp
xor
cmp
in
mov
cmp
push
iret
or
inc
dec
sbb
adc
out
lds
lods
in
in
fnstenv
jo
adc
in
jmp
popf
lods
std
aaa
mov
fists
pop
sbb
push
inc
pop
imul
mov
mov
mov
lock
add
int3
jge
cmp
jmp
leave
les
orb
adc
aas
mov
fdivrs
mul
adc
jp
pop
add
push
cmp
je
pop
add
sbb
les
sub
test
subl
testl
popa
stos
psrlw
arpl
mov
xchg
aad
cli
dec
pop
mov
aaa
mov
pushf
adc
data16
dec
xchg
xchg
adc
push
pop
into
lahf
loope
scas
pop
dec
jo
rcll
fs
push
aad
add
xchg
mov
push
inc
xchg
xor
adc
or
xchg
hlt
or
mov
imul
jb
fcmovb
aam
and
sub
fldenv
adc
sub
scas
idiv
adc
pop
lds
inc
pop
int3
pop
es
insl
push
int3
or
mov
sbb
pop
push
inc
in
imul
test
cltd
pop
into
lods
in
inc
dec
ja
mov
ljmp
sub
mov
test
push
push
js
frstor
lcall
imul
out
pop
sbb
scas
ret
or
push
nop
mov
sbb
pop
out
adc
mov
xchg
popf
mov
arpl
sub
repnz
stos
mov
and
cmp
mov
sbb
and
leave
adc
inc
push
das
or
pop
imul
lret
test
sub
outsb
mov
adc
cmp
inc
addl
mov
jp
and
mov
jg
push
movsb
push
call
test
mov
dec
dec
adc
cmp
test
mov
xchg
pop
scas
push
stos
mov
xor
add
and
mov
cmp
sbb
xor
into
dec
add
loope
insl
popa
pop
rolb
sbb
mov
mov
lret
jae
imul
hlt
xor
dec
jmp
in
int3
jne
enter
cli
cmp
or
xchg
dec
jo
mov
xor
adc
xor
add
jo
cltd
push
mov
imul
jge
inc
xchg
iret
jne
adc
fcmovnu
out
fisubl
loope
call
movsl
lods
aad
or
pop
cli
xchg
jg
add
hlt
js
test
roll
stos
ret
mov
lret
negb
and
sub
sbb
cmp
test
adc
push
clc
xchg
lods
decb
jns
mov
je
add
mov
xor
jno
pusha
jl
decb
push
add
ret
lahf
test
mov
int3
pop
and
inc
sub
aam
inc
dec
outsb
cli
ss
scas
outsl
in
orl
fdivs
cmpl
sub
sbb
mov
cmp
aad
inc
dec
cwtl
and
pop
pop
adc
jo
pushf
xlat
push
xchg
pop
dec
or
xchg
or
dec
xchg
bswap
scas
add
into
dec
pop
loop
xchg
repz
mov
outsl
push
add
mov
push
es
mov
mov
or
push
mov
add
dec
mov
and
xor
lock
cli
fdivl
mov
adc
in
hlt
mov
pusha
sbb
cmp
scas
mov
outsl
cld
mov
jne
fistpl
mov
popa
adc
push
push
push
dec
mov
jo
int
push
push
out
mov
sahf
test
shlb
or
xchg
ja
sub
cli
ss
movsb
inc
in
pop
pop
xchg
push
sbb
add
shll
setns
sub
or
add
std
pushf
es
push
mov
ret
cmpsb
cmc
sbb
aaa
inc
out
and
lds
fcmovnbe
pushf
adc
jne
mov
pop
arpl
pop
push
addr16
out
cmp
sbb
jbe
xchg
pop
pop
stos
lret
icebp
enter
shll
fdiv
or
or
mov
adc
and
sbb
mov
repnz
cmpsl
xor
loopne
inc
cs
xchg
jne
inc
xchg
pop
imul
dec
jns
insl
sahf
push
push
or
vmwrite
pop
inc
outsl
mov
mov
and
mov
adc
sarb
mov
icebp
jbe
xorl
pop
rorl
pop
jmp
inc
int
out
push
adc
ds
pop
jns
cld
je
data16
mov
add
and
and
jmp
test
jo
jae
out
in
ds
into
imul
arpl
jnp
add
cmp
lret
and
jmp
in
push
mov
repz
cmp
push
in
sbb
out
sbb
scas
xchg
pop
stc
pop
sbb
lea
mov
stos
outsl
push
aas
in
push
mov
add
ficomps
lds
test
mov
jno
pop
addr16
or
add
jb
ret
inc
cltd
aas
lods
aad
pop
test
dec
jl
out
mov
xchg
pop
add
xor
leave
jne
sub
hlt
sahf
xlat
cmp
pop
iret
sub
inc
lds
jg
jns
outsl
xchg
hlt
icebp
jmp
mov
cmp
push
mov
mov
pop
push
and
imul
fwait
mov
arpl
fdivl
mov
jg
mov
jo
xchg
pop
dec
pop
fnsave
jae
jno
in
mov
ret
jns
push
repz
sbb
xor
loop
aaa
dec
aad
xchg
jns
mov
add
pusha
decl
in
mov
pop
sbb
pop
and
and
push
adc
jl
dec
shrl
stc
or
or
cmp
pop
add
or
lea
xlat
ficoml
adcb
outsl
inc
lods
insb
cltd
add
mov
and
rorl
in
inc
lcall
mov
mov
vaddsubpd
int
push
addr16
dec
xchg
add
les
xor
add
mov
add
test
push
dec
imul
mov
mov
or
leave
mov
xchg
cmc
xor
pop
scas
fisubs
or
cmpsb
out
push
xchg
addr16
fstpl
adc
stos
dec
loope
movsb
pop
and
stc
test
jae
xor
lret
roll
out
sub
and
jmp
cmp
inc
loope
xchg
and
mov
sub
call
dec
shlb
mov
xchg
jno
inc
sub
pop
inc
mov
cli
dec
popa
inc
sahf
ret
lret
xor
xor
imul
xorl
add
jge
pop
arpl
sets
cli
dec
into
sbbb
in
enter
inc
insb
loopne
or
call
loop
pushf
out
test
fisubs
inc
mov
ss
stos
rolb
ret
add
cmpsl
testl
dec
sub
xchg
dec
inc
pop
push
test
sbb
pop
ss
loop
sub
test
cmpsb
icebp
hlt
insl
jg
test
adc
testb
iret
mov
cmpsb
xchg
cmpsl
xchg
xlat
xlat
jbe
push
dec
add
sub
sub
jge
repz
stos
in
stos
xor
push
mov
je
out
cmpb
negl
ja
addr16
jecxz
je
dec
ja
int
xchg
incl
and
jns
add
rorb
xchg
dec
cmpsb
fs
les
add
popa
mov
sbb
in
insl
stos
jo
scas
lods
push
xchg
repz
dec
mov
fsubr
sub
lods
ret
add
or
push
ret
xchg
sbb
pop
jnp
sub
mov
in
movb
mov
dec
cmp
lods
lret
push
pop
nop
mov
cltd
shlb
jno
and
xor
push
hlt
enter
push
jne
subps
les
inc
push
dec
and
xabort
adc
mov
ds
mov
xchg
xor
into
mov
int
inc
cwtl
cmova
cld
xlat
pop
movsb
daa
adc
mov
adc
nop
mov
mov
loopne
icebp
jge
sarb
sub
icebp
loope
or
cs
xchg
subl
dec
cld
pop
ret
mov
mov
lret
mov
les
pop
loopne
test
incb
sahf
repnz
xchg
pusha
dec
pop
cmp
pop
repz
xor
adc
hlt
hlt
or
scas
jne
lret
push
pop
andl
add
inc
mov
ljmp
mov
dec
add
lods
xor
in
xchg
add
arpl
arpl
jnp
pop
mov
fwait
out
out
add
push
xchg
fstpl
mov
jne
mov
cld
out
pop
std
sub
jnp
mov
loop
dec
inc
and
into
cmp
int
mov
in
popa
clc
fstps
sub
jl
sbb
cs
mov
xchg
popf
aas
ret
cmp
sub
sti
sbb
mov
dec
in
mov
mov
in
pop
movsb
movsl
push
loop
adc
jge
das
mov
lds
imulb
divl
add
xchg
in
pop
add
sub
xor
test
arpl
pop
mov
mov
cli
fs
pavgw
test
pslld
jmp
lea
pop
adc
int
ret
push
dec
sahf
out
inc
dec
dec
sub
dec
add
lret
fs
xchg
in
push
stc
test
notb
mov
fcmovnb
lcall
jae
or
inc
cs
jmp
jp
insl
out
push
ror
cmpsl
in
pshufw
inc
xchg
fnsave
loopne
ror
sti
add
ss
xchg
inc
je
push
push
mov
or
mov
sti
dec
dec
movsl
or
xor
and
mov
pop
and
in
xchg
pop
push
xchg
in
js
adc
pop
push
sub
pop
or
adc
inc
and
out
push
mov
xor
std
fnstcw
sbb
cmp
test
push
push
enter
or
xor
or
ljmp
mov
ret
lahf
loopne
pushf
xchg
sti
js
pusha
fmul
mov
lret
mov
loopne
pop
sub
int3
pop
sbb
addb
dec
mov
icebp
adc
enter
sbb
jnp
shlb
into
outsl
mov
cmp
sub
xchg
pop
jns
inc
pop
stos
and
pop
sahf
jl
push
or
or
addr16
mov
cmpsl
or
out
sbb
mov
hlt
mov
aam
fnstcw
and
notl
or
nop
pop
and
ficompl
je
cmp
into
fs
sub
pop
movmskps
loopne
cltd
pop
pop
pop
jp
or
jnp
cmp
add
rorb
dec
cli
rcl
repnz
xor
mov
jge
cmp
mov
xchg
adc
dec
add
addr16
mov
lret
es
cmp
xchg
add
xor
or
xor
clc
pop
jno
xchg
kunpckbw
sub
lcall
push
mov
cmpsl
das
mov
sti
stos
xorb
jae
cmc
nop
dec
lds
mov
mov
mov
addr16
or
push
cmpb
add
mov
dec
pop
ret
mov
fisubrs
pop
xor
repnz
mov
repz
inc
inc
das
push
xchg
out
cs
push
test
mov
cmp
mov
mov
cmpsl
leave
fsub
test
add
outsl
nop
hlt
add
cld
add
icebp
enter
movsl
cmp
mov
ret
lods
es
lods
jo
aad
jge
outsl
in
mov
gs
daa
add
jbe
iret
mov
in
jmp
inc
pop
pop
mov
outsb
jle
mov
aaa
adc
xor
or
xchg
mov
inc
aad
je
addr16
push
xor
shll
lcall
loop
cs
ret
mov
shll
ds
push
sub
movl
mov
mov
fadds
push
sub
ret
outsb
cmp
add
or
dec
mov
pop
fwait
pop
pop
fwait
dec
cmpsb
push
dec
scas
pushf
sub
mov
mov
arpl
mov
push
sbb
loop
xchg
jmp
fldl
out
xchg
mov
mov
add
push
push
cmpsb
jbe
add
push
cltd
mov
xchg
mov
sub
test
push
dec
popa
sbb
xor
cmp
jo
xor
cmp
cmpb
jg
jnp
xchg
in
or
sarb
lock
pop
inc
insl
sub
sbb
mov
ret
cmp
jp
repnz
out
ret
mov
fimuls
nop
sbb
pop
push
dec
push
lcall
out
inc
cmpsl
jno
iret
lcall
pop
sub
jns
sub
pop
mov
adc
leave
adc
mov
cmp
pop
nop
inc
pop
aad
sahf
fdivs
fcoms
test
mov
lods
ja
mov
pop
mov
inc
popf
add
dec
cmp
es
in
and
pusha
jnp
sbb
and
mov
dec
sub
sub
lock
mov
xorl
pop
xchg
mov
jge
rcl
mov
mov
icebp
mov
dec
popf
loop
test
repnz
insb
out
mov
xchg
xor
sub
stos
movsl
mov
cmc
mov
or
gs
dec
test
cmpsl
mov
jl
jno
mov
xchg
ret
cwtl
mov
pop
jb
ret
xchg
gs
fmull
cltd
sbb
and
sti
add
pop
lds
jae
js
scas
lds
mov
leave
push
mov
inc
sub
int
int3
pop
inc
lock
xor
popa
lods
mov
imul
jge
fld
or
xchg
adc
or
test
into
cmpb
aas
xchg
shlb
js
fwait
lret
cmp
loopne
mov
dec
popf
loop
ljmp
inc
push
cltd
mov
dec
pusha
sarl
add
pop
cmc
push
mov
mov
mov
dec
mov
sbb
adc
sbb
inc
js
addr16
and
cmpb
movsb
xchg
in
xchg
out
pusha
fldt
stos
scas
pop
mov
addr16
jp
pop
jmp
mov
mov
inc
xor
in
cwtl
cwtl
push
sbb
in
sub
repnz
dec
mov
inc
out
rcll
xchg
jecxz
mov
ss
inc
push
mov
and
lret
dec
rcll
lods
lret
or
push
jge
adc
cmp
arpl
push
andb
cmpsl
imul
jb
sbb
and
out
scas
mov
gs
mov
fldenv
inc
popf
popa
lahf
inc
sbb
mov
inc
mov
push
push
mov
mov
mov
in
aaa
mov
in
dec
xchg
stos
jno
dec
push
scas
mov
test
mov
rcrb
lcall
jae
jecxz
push
ficoml
cli
xchg
inc
sarb
jns
mov
jl
stos
inc
daa
xchg
cmc
inc
add
inc
dec
test
sbb
xchg
in
outsb
mov
and
fidivrs
xchg
pop
add
push
mov
rol
mov
repz
testl
pop
outsb
dec
sbb
rorb
test
pop
out
cli
add
cmp
rep
or
ja
scas
inc
pushf
insb
push
mov
imul
lret
pop
repz
rorl
ss
push
push
xor
push
cmpsl
mov
or
inc
pop
mov
enter
aam
std
je
loopne
jno
out
lods
adc
out
mov
out
dec
jnp
inc
aam
xorl
daa
addb
mov
cmp
in
jne
je
mov
push
test
cmp
out
mov
shl
fldenv
cli
test
fbstp
incl
mov
adc
call
pop
fildl
mov
push
popf
xchg
xchg
mov
test
addr16
adc
sub
das
mov
mov
push
push
xlat
ljmp
push
call
notb
das
inc
dec
or
decw
xchg
sub
cmp
stos
call
push
loopne
in
nop
sub
shrl
loope
dec
stos
dec
test
or
jns
cmpsb
mov
cld
in
subl
sub
push
cmp
aaa
cltd
loopne
push
ret
add
dec
ret
dec
in
ja
mov
je
mov
arpl
sti
mov
adc
subl
daa
xchg
inc
or
fs
mov
inc
pop
jns
pop
xchg
leave
ror
loope
sub
and
mov
cmpsb
mov
xor
sar
in
jle
dec
repnz
xor
out
or
and
ljmp
adc
push
push
push
mov
dec
iret
mov
loope
loope
imul
mov
jle
mov
pop
ret
dec
mov
and
inc
out
cmp
inc
jo
cmp
rorb
push
xor
out
clc
ret
addb
fidivl
sbb
out
dec
xor
push
mov
loop
mov
cmc
lods
or
ret
and
andb
out
cmpsl
dec
lcall
mov
and
hlt
lods
insb
sbb
add
xchg
loopne
cld
jg
jb
lea
in
into
xor
cld
fisttpll
jbe
or
cmc
sub
mov
notl
testb
xchg
or
mov
pop
cltd
xchg
mov
les
cs
int
lock
rolb
das
pop
out
mov
mov
repz
fxam
scas
les
stc
sub
add
or
sbb
ret
xor
inc
cld
jle
lds
scas
push
mov
gs
aam
mov
icebp
cmp
mov
sub
andl
cmp
jle
xchg
dec
test
sub
add
push
mov
sbb
scas
xchg
lds
mov
inc
mov
mov
cmp
dec
jl
push
or
pop
jecxz
mov
test
xlat
mov
cmp
inc
sub
inc
jne
repnz
cmp
jnp
mov
test
stos
xor
cmp
jnp
push
popl
jb
or
pop
adc
sub
xor
cmp
sbb
xlat
fabs
add
or
dec
xchg
aam
jo
sbb
mov
lods
jge
fstpl
sbb
mov
mov
or
xchg
mov
iret
adc
mov
xchg
adc
xchg
jns
push
or
inc
mull
out
xor
mov
incl
pop
movsl
lock
xchg
add
and
mov
jmp
repnz
mov
xchg
xor
scas
popf
mov
dec
int
adc
jl
fdivp
cltd
lock
or
stc
rcl
sbb
cld
mov
notb
jno
int
arpl
pop
sub
mov
add
mov
and
sahf
outsb
lret
int3
lcall
fbld
ror
aad
and
push
out
int
fldt
fisttpll
or
stos
test
mov
cmp
pop
push
jno
cmpsl
push
ja
push
jmp
shrb
fmull
insb
cmp
xor
test
pop
aam
aad
push
add
and
xchg
push
loopne
jns
xor
cmp
mov
bound
add
cmp
stos
pop
leave
jae
and
movsb
and
dec
cmp
js
call
adc
imul
in
xor
mov
xchg
push
mov
sbb
sbb
xor
mov
push
xor
pop
fdivrp
cli
adc
mov
mov
data16
push
pop
mov
das
jmp
pop
pop
push
fbld
jle
incl
repz
sub
xchg
std
in
mov
dec
sub
xchg
mov
sub
sti
std
pop
int
xor
cmp
sahf
add
test
cmp
stos
and
and
xchg
lret
cmpl
loop
jecxz
imul
movsb
add
out
mov
fstpt
xchg
inc
dec
add
pop
or
rolb
sbb
scas
ret
arpl
push
lods
lds
or
cmpsl
mov
mov
ret
pop
insb
xor
sub
loopne
or
sub
sarl
clc
movsb
nop
xor
cld
xor
xchg
push
sbb
xor
fadds
ja
sarl
daa
xchg
push
sbb
xchg
mov
loop
in
inc
inc
pop
movsb
test
imul
stc
mov
in
cmpb
xchg
push
mov
movsb
push
cmp
movsl
insb
arpl
inc
xchg
lea
fistpll
js
push
stc
clc
jae
jne
iret
daa
test
push
lds
push
jo
fbld
out
mov
sub
scas
or
and
cmp
inc
outsl
xchg
outsb
rcrl
xchg
inc
js
addr16
subl
add
ror
cld
xor
xor
and
test
mov
popf
mov
lret
push
movsl
mov
push
and
jl
fidivs
loopne
jnp
mov
mov
stos
jp
pop
push
mov
inc
out
xor
add
int3
xchg
and
mov
popf
or
mov
insb
in
mov
pop
rol
push
adc
or
jbe
divl
jae
repz
outsl
daa
jge
mov
cmp
adc
shl
movsl
arpl
adc
bound
dec
mov
ffree
sbb
es
push
inc
cmp
inc
cmpsb
outsl
add
leave
xor
in
mov
insl
cmp
sbb
rorl
mov
mov
cmp
dec
jg
stos
dec
add
fstl
cmp
cmp
xchg
popa
stc
xor
in
fcmovu
cmc
sbb
push
dec
jp
push
fstl
pop
xor
mov
in
inc
mov
ret
or
mov
jg
faddl
add
in
je
icebp
push
js
out
out
lahf
xor
mov
push
hlt
in
lock
sbb
push
mov
test
cmp
lea
fcoml
push
mov
aad
insb
bound
add
imul
mov
xchg
add
loop
rcrb
jecxz
std
xor
ljmp
adc
jae
rcl
iret
cld
jecxz
in
add
fcompl
mov
mov
nop
test
xchg
stos
push
sbb
lahf
cmp
inc
xor
sbb
push
sbb
inc
xchg
int3
repnz
fldcw
cmc
mov
lock
out
fstl
jl
adc
gs
cmp
jnp
outsb
jnp
jno
jl
rolb
and
sub
pop
in
js
and
mov
push
add
push
adc
ret
mov
and
cmova
mov
xor
inc
lods
mov
scas
push
and
das
mov
pop
shlb
pop
ss
pop
dec
inc
sub
popf
dec
in
roll
pop
inc
and
cpuid
add
loope
mov
out
int
test
jno
loop
pop
add
mov
std
in
lods
sub
sbb
xchg
jbe
je
and
add
nop
loope
xchg
cmp
imul
pop
jbe
dec
insl
add
fldcw
test
push
push
cltd
push
jbe
movsb
adc
sbb
test
sub
xchg
cmp
mov
sub
scas
xchg
pop
test
sbb
jl
mov
and
sub
pop
mov
lret
sub
movsb
add
push
nop
pop
aaa
into
pop
rclb
adc
xor
mov
iret
daa
fwait
or
xchg
out
fimull
and
inc
inc
pop
aas
loope
jg
rcl
fdivrs
push
xor
outsl
dec
bt
add
shrl
pop
movl
mov
jle
rcrb
pop
push
xchg
push
or
xor
pop
popa
enter
pop
or
jmp
clc
inc
mov
rcrb
shrb
aam
in
push
jge
push
fstpt
mov
or
xor
dec
pop
push
jb
mov
pop
popf
pushl
mov
xchg
in
dec
enter
xchg
fidivrl
mov
popa
jmp
mov
mov
push
fdivr
mov
out
push
and
loopne
icebp
xor
or
and
mov
push
ja
push
clc
int
mov
jo
mov
into
mov
push
sub
sub
imul
add
je
iret
scas
dec
push
inc
lret
lahf
lcall
cmpb
or
incl
pushf
cli
jbe
hlt
shlb
icebp
mov
xchg
cltd
pop
stos
jg
lcall
jne
addr16
scas
dec
mov
cmp
cltd
call
xlat
pop
cmc
and
lods
hlt
jp
mov
cmp
cmp
mov
push
cli
cmp
out
lds
xor
mov
sub
cmpsl
insb
pop
pop
movl
out
inc
mov
ss
pusha
add
jo
push
arpl
xchg
adc
mov
scas
sbb
dec
loopne
lahf
pop
loopne
outsl
sub
push
sub
rcrl
outsb
fdivl
xchg
jno
leave
out
push
call
add
mov
leave
arpl
xchg
inc
xchg
sub
adc
inc
shrb
in
rorb
pop
inc
lods
and
inc
and
cmp
xor
jmp
mov
jb
or
mov
mov
add
pushf
dec
jbe,pt
push
js
mov
fisubrs
lret
jb
push
pop
popf
sbb
stos
sub
popf
cmpsl
pushf
icebp
push
inc
out
testl
cmp
mov
loop
insb
push
adc
fs
icebp
fnstenv
xor
and
mov
push
push
inc
fsubp
inc
mov
ss
jmp
lcall
enter
daa
les
lcall
push
sbb
fcoms
pop
adc
xor
and
mov
in
std
out
mov
jge
and
in
pop
push
shrl
sbb
rorb
into
std
push
or
dec
fimuls
imul
loop
arpl
ffreep
fwait
jno
sbb
and
inc
cmp
scas
mov
mov
mov
add
stos
and
mov
dec
adcl
xchg
out
jecxz
jb
ljmp
lahf
in
fcmovnb
stos
cs
cmp
mov
pop
pop
loopne
loopne
pop
sbb
jl
lahf
fsin
and
sarl
mov
xor
mov
ljmp
jne
xlat
bnd
pop
imul
data16
sbb
clc
lcall
xor
mov
stos
jns
or
push
sub
sti
jns
push
mov
std
sbb
aam
sahf
or
cmp
movsb
subb
pop
jmp
iret
add
or
dec
insl
push
xchg
pop
icebp
cmpsb
aad
xchg
xchg
inc
inc
fcmovu
stos
mov
idivb
xchg
loopne
rorl
nop
push
stc
or
push
call
inc
mov
mov
lock
cmp
in
lret
add
or
sub
pop
or
mov
rol
sbb
add
mov
ficompl
or
int
icebp
hlt
jae
lds
dec
dec
fneni(8087
loopne
pushf
lret
mov
lds
cmp
xchg
js
xchg
sahf
movsb
add
leave
and
cmc
dec
imul
std
rorl
sbb
mov
add
sbb
inc
fstps
in
dec
pusha
aas
mov
inc
js
inc
dec
ret
imul
xor
sub
call
lret
leave
mov
mov
jb
int
idiv
sbb
lods
in
dec
andb
push
inc
mov
sbb
pop
push
mov
mov
arpl
sbb
into
lcall
outsl
shr
jnp
xor
lods
fstpt
mov
and
shlb
sub
movsl
stc
sub
cmpsl
ss
jg
iret
xor
cmp
dec
movsb
xor
in
jg
cltd
je
mov
push
jmp
lea
add
push
add
inc
push
out
jecxz
push
aad
rolb
add
test
jns
xlat
fbstp
aas
negl
test
in
pop
sub
cmpsb
mov
call
int3
aas
ret
and
push
jnp
enter
or
pop
cs
xchg
sbb
mov
cmp
shll
sahf
scas
jle
adc
sub
jecxz
aam
outsb
cli
rcll
sub
out
rcrl
ds
stos
mov
sbb
xor
jno
fcomp
fwait
mov
pop
push
in
insl
or
inc
je
adc
pop
mov
test
cmp
dec
mov
hlt
dec
std
jle
cmp
loop
push
loop
jecxz
cmp
cmpsl
mov
adc
mov
pop
out
cwtl
cs
inc
jl
or
int3
popf
ret
into
push
xor
cli
cltd
pushf
aad
add
or
adc
mov
rcrb
xchg
add
mov
add
stos
and
sbb
jns
inc
jnp
mov
push
push
mov
fnstenv
lods
subb
pop
or
jns
sub
into
jae
mov
shlb
hlt
cld
adc
lods
imul
mov
mov
push
hlt
sbb
dec
leave
repz
outsl
cmc
xor
jns
popa
xor
sub
adc
cld
arpl
pusha
adc
int3
aad
cmp
push
sub
xor
data16
push
mov
jo
into
bound
mov
xchg
roll
test
gs
ret
jmp
mov
ds
insl
dec
jmp
and
lds
int
pop
shll
jmp
dec
inc
addr16
xchg
jle
pop
adc
dec
pop
xor
bound
jp
jne
xchg
ror
adc
popf
hlt
mov
movsl
cltd
or
sbb
pushf
stos
push
jl
xor
xor
nop
iret
add
xchg
inc
cmp
pop
push
dec
setnp
and
jmp
sbb
and
jl
fstpt
das
mov
mov
inc
cmp
les
mov
jecxz
add
pop
push
outsl
pop
cmpsb
sbb
push
mov
inc
dec
lret
ror
mov
jg
lcall
lea
imul
inc
mov
xchg
imulb
push
in
mov
mov
lods
xchg
add
jp
insl
sbb
adc
test
xchg
dec
aaa
test
repnz
lret
adc
push
clc
ljmp
mov
fwait
fs
sub
lret
faddl
pop
lret
jne
call
fildll
ja
add
repz
sub
mov
adc
enter
enter
add
xchg
stc
jb
test
sarl
pusha
push
cmp
jecxz
inc
push
lcall
mov
mov
adc
xchg
cli
xlat
fsts
stos
popf
mov
repnz
lock
or
xor
push
stos
scas
scas
push
imul
sub
enter
xor
mov
mov
and
push
lods
pop
adc
jmp
imul
mov
sub
mov
mov
pop
mov
les
jne
loopne
sub
mov
pusha
cmp
fstpl
xchg
movsl
imul
sub
xor
cwtl
test
xchg
pop
mov
push
xlat
bound
mull
inc
cvtps2pi
pusha
push
mov
lea
add
pop
xchg
pop
push
dec
or
dec
or
push
jb
loopne
pop
xor
mov
cmc
outsl
cs
mov
xor
aaa
ret
ficoms
mov
mov
jle
or
mull
cwtl
rorb
add
dec
sub
adc
and
fdivrl
inc
lret
sub
mul
sbbl
sahf
rolb
inc
xor
xor
pusha
lahf
int
pop
mov
into
and
rcll
jae
out
and
in
outsb
loop
insl
fwait
xchg
rol
in
inc
lret
cmpsl
dec
jle
mov
decb
dec
or
jmp
jae
and
dec
repnz
mov
sbb
push
stos
daa
and
xchg
lea
jb
scas
xor
iret
shll
sub
data16
push
mov
cmp
ficompl
movb
cmp
lret
lret
loop
not
xchg
xchg
jle
add
addr16
icebp
mov
mov
ljmp
sbb
rcrb
jns
pusha
sub
adc
addb
clc
pop
lahf
repnz
xchg
push
sbb
cmpl
mov
add
aaa
mov
incb
cmp
orb
pop
push
pop
mov
cld
insl
xor
dec
lcall
outsb
inc
adcb
arpl
int3
or
stos
inc
test
std
das
outsb
lret
nop
loop
jg
cmp
cmc
fwait
lret
mov
pop
loope
sub
adc
mov
mov
xchg
jnp
cltd
mov
sahf
shrl
sbb
pusha
mov
xor
ret
cmp
fidivl
lret
adc
dec
mov
mov
push
mov
sti
fisttpl
out
in
cmp
sub
cmpsl
data16
dec
sub
adc
inc
fmulp
bound
pop
dec
sbb
mov
jge
and
out
sub
or
sbb
mov
sbb
inc
hlt
push
mov
cli
jge
push
test
loopne
jecxz
mov
scas
xor
cmp
cltd
and
adc
xor
sub
mov
mov
and
sbb
ljmp
cmp
or
stc
fstp
fdivp
push
pop
fcmovnbe
mov
rcrl
int3
mov
cmp
dec
adcb
jge
adc
dec
movsl
int3
es
test
loope
cmp
into
orl
xor
in
jmp
mov
ljmp
fisubrl
or
addr16
cmc
stos
add
ja
jp
mov
aad
cmp
leave
and
jmp
jle
insb
and
sub
xor
in
xorl
xchg
jge
sub
icebp
jle
stos
xor
mov
lret
and
pushf
xor
fidivs
fs
stos
push
es
ret
data16
jnp
iret
xchg
and
dec
loop
pusha
aas
fstpt
lods
or
push
stos
xor
mov
jle
je
cld
mov
lea
mov
cmp
add
pop
fisttpll
adc
cmp
popf
jns
xor
xchg
dec
out
mov
les
out
lea
xchg
movsl
inc
sbb
push
jp
xlat
inc
dec
mov
movsb
cmpsl
push
repz
and
int3
push
sbb
or
fsubrl
add
aas
gs
inc
fimuls
nop
sbb
pop
push
dec
push
ljmp
xor
arpl
popa
inc
push
pop
push
sar
push
out
or
or
lds
lahf
dec
sbb
ret
mov
testb
lock
mov
push
dec
pop
jg
and
cld
in
cmp
imul
cmpsb
push
xchg
push
scas
cmp
mov
xchg
mov
add
adc
or
mov
stc
mov
mov
test
sbb
mov
mov
repnz
push
inc
mov
es
leave
out
jne
rep
sub
mov
scas
push
pop
and
adc
inc
jmp
add
mov
pop
int
lea
lods
shlb
jno
test
sub
dec
cmp
ljmp
out
xchg
shl
push
cmpl
cltd
popf
int
je
pop
add
lret
push
pushf
mov
out
sbb
test
pushf
push
jmp
stc
rolb
out
shlb
in
push
adc
pop
cmp
fwait
adc
iret
in
inc
fcmovb
push
push
mov
out
mov
ret
rolb
sbb
xor
lods
and
pusha
adc
sbb
cld
rorb
mov
mov
lret
jo
pop
inc
or
lock
insl
aad
cli
int
aaa
xchg
loope
cmp
push
ljmp
mov
cmc
xchg
xchg
cmp
popf
aas
sbb
mov
mov
shll
aas
and
xchg
test
push
pop
jno
in
call
xchg
push
pop
jb
xchg
inc
push
std
sub
clc
push
popf
jae
test
or
jle
push
in
jbe
ds
gs
aam
fsubrp
orb
les
ret
mov
jno
fs
and
and
and
cmp
lods
fidivrs
dec
sti
cmp
xchg
ljmp
pop
and
scas
fstps
cmp
inc
or
imul
ljmp
push
loope
xchg
pinsrw
int
pop
push
mov
pushf
adc
in
lret
stos
push
jns
xchg
adc
in
mov
aad
sbb
testl
xchg
adc
imul
fisttps
push
lods
pop
adc
push
fsubs
scas
sti
dec
or
int3
jb
jle
sub
test
xor
xchg
jp
ss
popf
out
mov
ret
inc
dec
cmp
dec
in
mov
cmp
icebp
dec
cltd
sub
cmp
pop
pop
stos
stc
das
pop
outsl
mov
jo
mov
push
sti
xchg
jo
cwtl
scas
imul
mov
add
sub
push
mov
imulb
inc
addl
out
xchg
mov
repz
add
adc
push
repz
dec
out
pop
mov
mov
xor
sub
pop
and
mov
xlat
pop
add
or
sbb
fld
pop
enter
jae
lcall
jne
lods
mov
and
xor
iret
and
push
nop
dec
daa
mov
mov
cltd
cmp
cs
out
aam
jge
mov
inc
cmp
mov
push
rorl
mov
enter
and
jns
mov
jg
lret
adc
movsb
daa
push
add
ret
call
pushl
popf
sbb
pop
test
mov
iret
pusha
mov
mov
ret
mov
js
out
outsb
mov
lret
sub
lods
std
test
mov
push
shll
lret
test
lods
cmp
jo
jnp
xchg
fbstp
adc
push
push
mov
test
inc
hlt
pop
mov
movsl
mov
int3
cmp
aas
mov
roll
adc
hlt
leave
movsl
fistl
fwait
mov
cwtl
push
cmc
jns
test
ss
lcall
push
imull
outsb
pop
mov
jo
push
xchg
aas
pop
sub
mov
int
xor
test
enter
cld
mov
push
scas
popa
je
cli
push
leave
jnp
clc
es
cmpsb
xor
adc
jg
pop
sbb
bound
add
push
pop
push
xchg
repnz
inc
mov
sahf
mov
mov
gs
loope
pop
je
iret
shll
push
pop
adc
cs
dec
or
push
push
cmpsl
repnz
dec
mov
cmpsb
mov
jae
cmpsb
mov
arpl
ja
lock
pop
lods
pusha
sub
popf
push
out
mov
mov
outsl
pusha
sub
or
and
daa
adc
and
std
mov
mov
adc
es
push
rclb
js
dec
inc
jb
fsub
les
gs
das
mov
rcrb
fnstcw
popa
and
jo
bound
movsb
mov
add
aad
popa
pop
mov
stos
hlt
pop
fdivrl
or
sbb
js
add
dec
fcoml
fcmovb
repz
and
roll
gs
std
mov
sbb
pop
and
lds
adc
dec
out
dec
lret
and
ret
out
test
call
adc
mov
mov
arpl
sub
fdivrl
mov
negl
push
lret
bound
fwait
add
js,pt
out
or
cmpl
adc
in
pusha
adc
mov
jae
dec
cmp
sub
dec
lret
andl
shrb
cs
ljmp
xchg
mov
and
in
vphsubbw
inc
mov
jp
and
mov
cmp
popf
push
fsts
cmp
lods
fwait
cmpsb
mov
popf
jns
jns
push
mov
sub
jbe
push
inc
lods
xchg
dec
fnstsw
addr16
sti
push
add
jecxz
test
hlt
pop
lds
cmc
ret
and
dec
inc
xor
lods
rcll
ljmp
pusha
call
popf
fmuls
and
ret
pop
cmp
sub
pop
int3
addb
xchg
je
out
sub
mov
cmp
loope
out
mov
lods
adc
sub
daa
push
pop
jno
in
call
divb
stos
dec
or
push
jbe
inc
pop
orps
sub
js
aad
popf
or
out
adc
inc
xor
push
addl
js
lea
hlt
mov
add
out
dec
push
add
cmp
push
sub
fs
xor
mov
fiaddl
push
sti
xor
xchg
adc
jmp
repnz
push
imul
into
ret
mov
and
out
sbb
or
in
jne
sub
ja
popa
jl
bound
cli
add
lods
push
gs
mov
inc
mov
dec
dec
pop
xchg
dec
int
xchg
sub
loope
sbb
pop
cld
push
mov
mov
mov
lret
insl
jmp
push
cltd
and
adc
cli
cli
insb
test
xchg
add
pop
mov
adcb
and
jg
mov
pop
in
enter
or
and
sub
mov
test
js
mov
lds
pop
jmp
cwtl
add
jg
pop
sub
daa
mov
scas
daa
aas
cwtl
and
add
sbb
push
into
add
push
ss
and
push
sahf
out
enter
pop
test
into
or
inc
lods
cli
imul
loope
and
mov
xor
xor
cs
push
daa
mov
test
int
js
inc
mov
mov
movsl
out
sub
ffreep
rcrl
loopne
mov
test
cs
js
hlt
cmc
pop
test
xchg
fisubrs
and
ret
lcall
dec
bound
fildl
jmp
lds
mov
lea
movsl
aas
addb
jne
xchg
fsts
sarb
popf
mov
test
bndstx
lcall
popa
andb
iret
xchg
or
sbb
sbb
push
imul
xor
dec
ja
mov
setp
xor
pop
cs
adc
push
inc
insl
sbb
repnz
or
insl
or
nop/reserved
imul
hlt
pop
mov
scas
dec
adc
icebp
subl
std
std
cmpsl
aas
test
xchg
add
fwait
mov
mov
mov
inc
lods
rolb
add
add
push
outsb
paddusw
cs
fldln2
imul
movsb
std
cmp
inc
insb
lahf
loop
push
shrl
repnz
jl
jno
jp
out
call
lahf
scas
mov
decb
sti
jb
rolb
adc
into
inc
jge
lds
movsl
and
jbe
mov
in
jo
negl
mov
and
push
sbb
sbbl
arpl
xchg
cmpsb
popf
pop
push
sbb
xor
or
fnstsw
sub
sar
mov
les
mov
lock
aaa
andb
jl
sahf
cmp
mov
fisubl
add
repz
add
push
cld
arpl
sbb
out
repnz
sub
sbb
shrl
jae
sub
push
pop
hlt
mov
adc
dec
add
adc
mov
mov
notl
jb
mov
sub
cwtl
faddl
xor
cmp
and
movsb
gs
jnp
hlt
imull
stos
xchg
xchg
dec
popf
mov
jo
add
daa
outsb
dec
mov
into
jne
jecxz
xchg
mov
sbb
push
insl
mov
sub
jb
dec
jb
fsubrs
enter
leave
rorl
push
out
cmp
jg
sub
dec
in
lock
ret
jle
adc
fcompl
movsl
stc
sub
dec
inc
std
jnp
mov
xor
or
xlat
sub
mov
jne
iret
xor
and
push
dec
data16
push
clc
bound
hlt
cs
std
push
rolb
shrd
aam
mov
mov
jmp
lods
mov
lea
icebp
ds
repnz
jle
sbb
ljmp
test
lret
or
cmp
mov
mov
mov
lahf
xor
adc
sbb
std
and
incl
ds
mov
mov
bound
icebp
push
lods
lods
inc
decl
fsubr
push
cmp
mov
dec
je
cli
int
or
adc
movsl
jns
adc
test
mov
mov
rcrl
jae
mov
push
test
aad
or
mov
xchg
xchg
pop
jno
push
repnz
dec
test
aas
insl
mov
or
adc
mov
pop
clc
mov
icebp
dec
insb
ljmp
lret
scas
sub
not
cmp
iret
lock
fadds
js
inc
in
mov
movsl
in
mov
stos
mov
cld
inc
push
mov
mov
shl
dec
sub
popa
out
cs
punpcklbw
push
xor
or
and
mov
push
pop
sbb
das
pop
sbb
movsb
xlat
int3
sbb
add
or
mov
cmp
in
mov
dec
ret
repnz
sub
pop
in
push
test
xlat
pop
inc
int
pop
sub
mov
movb
rcll
enter
push
gs
arpl
xlat
mov
shr
movsl
enter
cmp
inc
cltd
sahf
mov
jne
sti
adc
imul
in
sub
sti
pop
pop
out
pop
in
mov
cmpsb
inc
xchg
insb
and
sar
bound
js
mov
in
push
pop
jae
iret
push
push
cmp
jns
cmc
ror
ret
daa
mov
cwtl
pop
fbstp
xchg
loop
stc
es
or
div
mov
test
je
iret
mov
jle
clc
sbb
repz
and
mov
fadds
test
loopne
ja
enter
push
popl
jle
cs
sub
and
insl
addr16
jg
xor
sub
add
sub
push
and
das
aam
scas
imul
xchg
shlb
les
mov
push
push
cmp
fiaddl
fldl
or
cmpsb
aaa
repz
sahf
inc
sub
jg
xchg
cmpsl
jnp
ret
les
cli
xchg
adc
push
stc
lods
mov
stos
outsb
push
push
lock
dec
mov
lds
daa
pushf
mov
ljmp
pop
add
mov
push
aaa
sarl
outsb
inc
clc
sub
movsl
fstpt
out
into
sbb
xchg
xchg
outsb
addr16
or
mov
rcll
repnz
add
shlb
xor
push
lds
mov
lcall
push
xor
fwait
or
adcb
scas
jo
fdivrl
and
inc
inc
push
sub
shll
mov
mov
or
inc
and
cmp
xor
lea
or
aaa
hlt
movsl
scas
cmp
pop
enter
jno
jecxz
dec
negb
push
outsl
push
hlt
add
dec
inc
sub
idiv
test
mov
inc
cld
outsl
loop
repnz
mov
test
aad
xchg
insl
adc
insb
mov
pop
adc
inc
not
jecxz
jge
ds
test
sbb
enter
cmp
mov
insl
std
mov
in
mov
dec
sub
jno
mov
aam
and
sbb
jnp
cld
test
int3
lock
inc
sahf
and
sub
loopne
repz
adc
out
adc
sub
add
adc
or
jns
shrl
rorb
jmp
jns
dec
repnz
push
mov
and
push
popf
adc
out
arpl
or
repz
mov
push
xor
mov
dec
inc
adc
mov
mov
mov
fiadds
int
jae
fs
mov
mov
ret
jno
insb
xchg
sub
xlat
jbe
ficomps
int3
jne
push
pop
mov
out
lcall
cltd
pop
sbb
imul
sbb
xlat
inc
lods
inc
xor
arpl
jecxz
je
ds
mov
xor
cli
add
sub
inc
shrb
and
pop
ja
jmp
cmp
gs
loope
or
push
shlb
cmp
pusha
in
xchg
aam
outsb
mov
enter
sbb
call
insb
cmpsb
add
sbb
fs
xor
sahf
fstpl
inc
jmp
repnz
or
and
pop
imull
jecxz
xor
lds
push
int
mov
pop
pop
or
ds
cmp
ljmp
jnp
hlt
inc
and
sub
xor
mov
mov
pop
inc
cltd
movsb
hlt
jae
push
rolb
push
mov
pop
push
mov
adc
int3
inc
dec
frstor
dec
pop
les
xchg
xchg
xchg
xor
lock
add
mov
cmp
sbb
lahf
mov
loope
mov
repnz
insl
xor
pop
test
out
xchg
cmpsb
cmp
fbstp
push
inc
pop
dec
mov
daa
ss
add
pop
mov
pop
add
and
xchg
ja
sbb
inc
pop
jo
sysenter
fdivrl
pop
adc
rorl
mov
mov
pusha
in
xlat
je
pop
mov
lahf
outsb
mov
mov
cmpsl
dec
sub
jns
or
imul
and
pushf
jbe
outsb
jp
inc
das
cmp
icebp
lcall
sbb
stc
mov
fbstp
vsqrtsd
xchg
cmpb
or
and
adc
icebp
pop
and
lds
sbb
mov
test
nop
mov
jecxz
mov
int
addl
and
movsl
mov
push
les
nop
rclb
fwait
sub
sub
mov
adc
xor
cmp
pop
jmp
lds
repz
arpl
adc
adc
popa
sub
outsl
repnz
jo
inc
icebp
or
lods
test
pushf
mov
sbb
lret
and
fisubl
adc
ds
cli
xchg
test
xor
xor
jne
dec
pop
cli
fidivs
jns
movsb
sub
jbe
jb
inc
jl
leave
gs
xchg
cmp
addb
nop
testl
mov
cmp
pop
jle
arpl
adc
mov
mov
imul
subb
mov
add
repz
cmp
inc
sti
jmp
mov
dec
cmp
daa
push
mov
inc
dec
loop
sahf
fwait
cmpxchg
or
in
setno
dec
shr
xchg
pop
fsub
iret
and
fdivs
jmp
pop
add
hlt
inc
fsubs
cmp
into
in
hlt
movsl
fsts
imul
pop
and
lock
repz
in
push
fs
mov
stos
pop
mov
adc
leave
movsl
popl
mov
andb
or
dec
pop
dec
in
call
add
push
in
fcmovbe
stos
clc
pop
je,pt
rcll
sbb
sub
adc
loop
stos
std
scas
push
adc
jo
or
jo
lods
cmp
rcl
aad
in
in
shll
jmp
pop
rcll
shrd
in
jmp
fiaddl
mov
pop
xor
and
add
aam
jb
inc
xlat
aas
push
sub
pop
maxps
outsl
je
test
push
ljmp
aas
push
dec
or
cmp
daa
inc
jbe
push
add
or
inc
inc
ss
subl
push
stos
mov
out
push
icebp
imul
adc
mov
mull
into
mov
mov
dec
imul
jns
add
lret
or
mov
mov
adc
les
shlb
stos
mov
imul
dec
inc
mov
jne
dec
daa
call
cmp
fidivs
push
aaa
pop
int
push
jecxz
xchg
lahf
inc
movsb
dec
loope
push
pop
mov
shrb
sub
xor
add
pop
call
mov
stc
mov
bound
mov
arpl
sbb
jnp
mov
xor
fwait
xor
faddl
popa
mov
mov
jp
dec
xor
push
notl
int3
shrb
out
cmpsb
cmp
push
lock
dec
mov
test
mov
loop
imul
jae
jnp
inc
pop
dec
fstl
cltd
daa
test
les
inc
mov
addr16
aad
and
mov
push
clc
xchg
cmp
push
or
or
scas
icebp
cmp
arpl
idivb
xor
cmp
int3
mov
or
ja
cmpl
bound
loope
lds
pop
push
push
cmp
out
add
bound
mov
lret
or
daa
into
sbb
cmp
repz
inc
cmp
jl
pop
test
inc
gs
mov
ret
pop
aad
cmp
pop
cmp
xchg
cwtl
movsb
add
in
sub
in
cltd
imul
jp
and
mov
sbb
daa
push
pop
jno
in
call
in
sbb
mov
je
subl
fwait
push
testl
mov
test
inc
xlat
mov
jmp
insl
or
mov
sahf
std
cmp
fucomip
insb
adc
xor
pop
sti
and
push
inc
shlb
aaa
pushf
xor
xor
jle
xchg
dec
in
push
imul
lds
add
pushf
jle
jmp
mov
xchg
pop
cmp
sbb
insl
mov
addr16
ret
cli
xchg
lcall
add
add
xlat
xor
cmp
mov
add
stos
mulb
pusha
dec
xor
sti
xor
jecxz
orl
pop
mov
lahf
or
mov
popf
popa
hlt
mov
xchg
xor
xor
stos
pop
scas
test
fisttpl
cmp
into
cmp
sbb
fstps
xor
xchg
dec
roll
insb
mov
cli
push
jnp
push
or
cmp
push
addr16
mov
xchg
push
je
or
pop
in
inc
push
pop
aam
mov
sahf
mov
or
rcrl
xchg
or
mov
popf
les
fcmovbe
sbb
flds
daa
xchg
imul
int3
jnp
lods
rorb
sub
jmp
in
pop
pshufw
jp
pop
enter
ja
sub
mov
int3
and
sbb
or
lock
dec
subl
or
jge
push
add
std
inc
test
lcall
pop
rcrl
imulb
out
shl
cmp
std
dec
js
cmpsb
js
xchg
mov
lods
dec
into
push
or
pop
dec
mov
fcoms
lahf
mov
mov
shrb
pop
xchg
jmp
xchg
ret
mov
addr16
sub
mov
aaa
add
mov
lret
sbb
xor
push
lea
inc
jg
xor
jg
cmp
sbb
inc
mov
rcrl
adc
xchg
mov
and
and
imul
in
hlt
cs
adc
movsb
ret
out
rcrl
daa
cmp
stos
lahf
dec
subb
ret
repz
stos
hlt
mov
fwait
in
call
decl
cld
data16
lret
jle
ficomps
pop
xor
push
outsb
add
mov
add
push
ja
dec
out
int
movsb
and
repz
out
leave
dec
mov
or
mov
loopne
add
xor
sarl
neg
xchg
jo
das
loop
adc
pop
lcall
test
sub
gs
repz
ljmp
lret
jno
fmull
inc
int3
pop
arpl
mov
sti
sbbb
jb
xchg
inc
adc
daa
sub
push
stc
cmp
mov
test
jg
out
je
in
push
aaa
pop
les
lcall
cmp
adc
mov
push
inc
add
sbb
mov
fdivrs
mov
daa
push
or
into
sbb
test
xchg
sub
fldl
lret
cmp
testl
lea
sbb
xor
ljmp
loope
out
sbb
mov
pop
mov
sub
je
mov
sub
push
jmp
and
cmpsl
mov
outsb
sbb
pushf
jl
xchg
push
xor
mov
cmc
data16
sti
test
pop
fdivl
sbb
imul
cmp
int
arpl
cmp
lret
ljmp
lods
or
lock
adc
jo
sti
add
inc
ret
inc
outsl
das
jbe
cwtl
dec
inc
out
mov
ja
add
fucomip
das
jno
arpl
jmp
cmpb
lahf
loop
test
test
xor
fnstcw
sbb
inc
das
movb
dec
in
or
push
in
mov
in
adc
jmp
pop
mov
out
mov
xor
sub
cmp
lea
lahf
inc
mov
pushf
xor
dec
hlt
repnz
movsb
popa
xchg
inc
mull
push
sbb
sarb
iret
fisubrs
rcl
cmp
out
cmp
xchg
icebp
movsl
movsb
stos
push
push
pop
fwait
mov
iret
inc
lret
cwtl
enter
repnz
enter
sbb
mov
addr16
bound
and
loope
mov
mov
push
js
mov
in
or
push
inc
jmp
mov
mov
aad
add
icebp
mov
xchg
dec
pop
leave
cmp
icebp
ljmp
cmp
sbb
int3
mov
xchg
mov
mov
test
inc
and
rcrl
fldenv
jae
adc
mov
pop
fcompl
pop
rcrl
lea
ret
ftst
cmp
movsb
test
sbb
test
sar
scas
push
pop
sub
lds
int
lods
iret
mov
pop
movl
add
cli
mov
cltd
xchg
ret
push
or
xor
enterw
leave
scas
or
pop
push
inc
movsb
std
push
imul
cwtl
adc
sbb
out
sbb
or
mov
lret
ja
cwtl
and
flds
mov
pop
fistpl
arpl
mov
sub
xchg
cwtl
add
and
jno
mov
js
repnz
xchg
push
push
andl
cmp
icebp
imul
in
ljmp
xchg
mov
in
bound
movsl
sar
push
stc
mov
in
mov
cld
xor
nop
or
dec
cmpsb
mov
int3
xchg
out
xchg
lcall
sbb
xchg
pop
hlt
pop
fwait
shll
iret
or
clc
fwait
mov
xor
cmp
imul
sub
dec
or
imul
jecxz
sahf
gs
imul
pop
int
mov
xchg
jo
jae
roll
xchg
mov
mov
popf
test
dec
cmp
ret
popa
sub
test
rclb
pop
xorl
and
gs
imul
fwait
pop
shll
frstor
dec
ja
xchg
sbb
jb
aad
sbb
xor
fwait
das
nop
cmp
stc
test
btrl
aaa
cmp
arpl
jno
push
add
xorb
mov
and
cmpsl
pop
xor
in
rcrl
filds
dec
fisubrs
push
cmp
xchg
fiaddl
loop
dec
and
sub
data16
mov
xchg
rcrb
lret
mov
je
cmp
leave
int
sub
inc
mov
jb
jae
dec
or
inc
mov
xor
ret
adcl
dec
inc
fwait
add
stc
fistl
add
sbb
sbb
jae
jne
movsb
in
adc
mov
adc
xchg
xor
ljmp
mov
cmp
nop
cld
aas
cwtl
leave
push
in
lret
cli
add
lds
and
mov
xchg
ret
pop
into
adc
jmp
pop
mov
stc
cmovl
fsubrl
sti
mov
fistpl
jle
outsb
aad
cmpsb
add
dec
lret
mov
jmp
loopne
test
popf
sub
data16
out
xchg
mov
dec
mov
cmp
fdivl
iret
and
insl
jne
nop
pop
jmp
lea
ss
int3
adc
pop
inc
into
hlt
clc
imul
fldl
dec
test
rolb
stos
imul
cltd
out
pop
ja
inc
stos
outsb
arpl
jo
cli
daa
call
jbe
ret
ret
sub
cli
inc
pusha
dec
add
mov
pop
repnz
sub
jno
adc
ds
adc
add
ror
or
mov
lret
mov
push
mov
sbb
hlt
cmc
mov
jmp
pusha
push
xor
mov
in
adc
hlt
nop
add
xchg
mov
sbb
and
push
repnz
fwait
hlt
push
sbb
mov
mov
jl
movsb
sbb
adc
dec
fadds
lret
and
pop
out
mov
dec
cs
jp
sahf
call
push
xor
jmp
outsl
jp
lcall
add
xchg
inc
mov
cs
pop
ss
sub
mov
lret
pop
or
inc
js
lds
xor
fiadds
imul
mov
sahf
addr16
mov
xor
inc
scas
cmpsl
fstl
lds
mov
jl
dec
sahf
jmp
push
dec
dec
loop
outsb
push
mov
dec
inc
lods
pop
mov
lahf
ds
leave
sbb
sar
inc
arpl
negl
and
pop
jecxz
pop
add
inc
and
pop
mov
fs
sub
fidivl
out
cmp
xor
std
cmp
jae
and
daa
ljmp
add
out
push
pop
inc
je
lret
sbb
cmc
mov
aaa
pop
mov
gs
cmpsl
ss
mov
movsl
push
jns
clc
test
mull
jnp
push
clc
sti
out
subl
inc
sub
push
sti
sub
mov
pop
inc
clc
pop
cmp
imul
cmpsb
lret
and
xchg
insb
sahf
ret
lods
outsl
pop
sub
mov
mov
xchg
sub
cmp
jne
jmp
mov
decl
int
push
push
cmp
jl
jl
inc
mov
dec
pop
jne
clc
pop
push
aaa
stos
sub
sub
loope
aas
cmp
mov
lcall
or
iret
xor
pop
in
mov
lahf
imul
mov
notb
cld
lds
gs
mov
mov
cmc
stos
add
mov
cmp
addr16
xchg
int3
push
and
add
inc
inc
adc
fnstenv
sbb
aam
je
ss
add
out
jg
cli
inc
or
and
mov
fsubs
lods
mov
outsb
bound
test
mov
enter
stos
stos
fucomip
jno
xchg
popf
mov
ljmp
push
insb
mov
xor
adcb
pop
inc
mov
mov
fists
fsubrl
out
sbb
add
imul
into
inc
or
subl
filds
dec
into
cmpsl
fadds
xchg
out
daa
adc
ss
lea
xlat
sub
adc
stos
ljmp
cli
and
popw
sub
mov
sub
inc
aam
cmpsb
popl
dec
push
aam
outsl
fimuls
fiadds
pop
pop
sahf
dec
add
lret
cwtl
cmp
mov
sub
mov
loopne
dec
mov
pop
xor
sub
xor
and
pop
pop
out
xchg
mov
jg
mov
lret
clc
jmp
les
sbb
xor
push
push
gs
xlat
ret
fdiv
jnp
insl
es
sbb
les
imul
dec
and
neg
scas
nop
int
aad
mull
add
pushf
daa
jp
jge
sbb
popf
dec
call
bnd
out
sub
pop
insl
xchg
insb
lahf
mov
fisttpll
cmp
fwait
js
aaa
outsb
xchg
jae
insb
icebp
insl
or
les
xchg
mov
ja
pusha
sub
push
xchg
cmp
inc
pop
fs
sbb
and
pop
push
mov
push
adc
in
push
mov
inc
fists
dec
xor
sbb
movsl
in
mov
xor
cmp
mov
jmp
rcrb
ficoms
sbb
or
pop
dec
out
fldcw
in
cmp
stos
pushl
mov
mov
jns
mov
nop
je
dec
int
sbb
fistl
int
add
les
int3
push
push
sub
dec
int
arpl
imull
pop
mov
ds
mov
es
rcrl
mov
ret
daa
mov
add
push
insl
loopne
mov
jo
dec
mov
mov
mov
out
pop
pop
add
ror
push
inc
stos
stos
ss
mull
mov
dec
lcall
shll
leave
pop
testl
stos
push
fildll
in
pushf
fpatan
mov
in
rorb
dec
dec
cmc
es
loop
cs
clc
dec
aas
inc
adc
shll
rorl
or
or
mov
mov
aas
pushf
or
xchg
dec
movsl
and
pop
pop
mov
cmpsl
icebp
dec
xchg
mov
out
push
jae
push
inc
mov
pinsrw
ficoms
mov
push
bound
jp
stc
push
notl
ss
imull
movsb
cmp
pop
mov
aas
nop
jecxz
loop
loop
fxch
mov
add
or
jle
pop
push
pop
orl
dec
mov
daa
push
insb
and
cmc
test
adc
in
add
aas
stos
lea
loope
pop
ljmp
or
je
adc
xchg
out
dec
das
cmp
cmp
in
push
movsb
mov
sub
jne
xor
test
push
jbe
ja
mov
jge
in
les
int3
and
xchg
fildll
aad
push
daa
jbe
add
rorl
jnp
outsb
cld
clc
int3
out
je
push
pop
mov
mov
mov
push
lea
fdivs
adc
pop
mov
sbb
ds
sub
adc
lods
pushl
ds
pop
ret
push
test
xor
xchg
jno
adc
aas
jnp
pop
cltd
jno
add
xor
das
adc
mov
int3
arpl
push
loope
mov
jmp
call
clc
into
mov
push
or
mov
pop
int3
xor
jl
mov
xchg
adc
arpl
out
ljmp
nop
add
nop
sbb
dec
jne
clc
mov
lahf
sub
jmp
inc
cmpsb
cmp
sbb
popf
sbb
cld
xorl
mov
xor
mov
inc
gs
stos
std
xchg
testl
pop
mov
or
out
test
push
and
data16
mov
je
or
pop
sti
and
mov
mov
pushf
pop
loope
sub
aas
movsl
jnp
daa
daa
mov
cmp
cmpb
push
mov
shlb
xor
sti
dec
push
imul
sahf
mov
jno
xorb
loope
sti
jne
dec
ds
jne
dec
cli
decb
addr16
push
pop
popa
sub
pop
sub
fldenv
sub
or
ficompl
add
movsb
and
addr16
ficoml
or
imul
fsts
dec
repnz
mov
add
cli
jl
popa
mov
iret
add
adc
imul
rcll
push
dec
sarb
test
int3
xor
add
dec
fiaddl
xor
or
testb
leave
addr16
aas
in
cmpsb
and
ficoms
mov
rcrl
and
push
cmp
dec
inc
shr
pop
push
inc
fistl
pop
mov
stc
in
fldl
in
push
sbb
adc
fwait
mov
out
sbb
aaa
cmpsb
jmp
outsl
fdivs
scas
inc
shl
cmpsb
enter
mov
lahf
iret
mov
mov
mov
xchg
call
fsubl
std
fwait
iret
cmp
mov
shlb
fstps
cmp
dec
jo
setno
test
mov
sub
pop
inc
fldl
jne
jnp
daa
inc
loop
cmp
lcall
xor
cmp
sbb
xchg
pop
test
jno
cmp
xor
jmp
ret
cmp
int
dec
adc
jnp
xchg
mul
mov
pop
je
inc
sub
mov
and
push
and
mov
aas
ret
loop
dec
mov
scas
repnz
test
hlt
pop
or
fldenv
sbb
jl
repnz
sti
sub
mov
adc
jge
mov
out
idiv
or
inc
or
pop
imul
adc
dec
out
add
lds
pop
sarl
push
xlat
mov
mov
aad
jne
inc
push
fst
fadd
xchg
std
add
out
movsl
sarb
repnz
fdivp
cmc
add
iret
in
cmp
fsubl
lcall
fcmovnb
lock
pop
push
std
jo
lret
mov
in
call
nop
mov
or
stos
mov
xor
xchg
mov
lea
mov
or
nop
jbe
xchg
xor
cmp
shll
inc
and
das
enter
push
fsubrl
or
pop
in
push
pop
clc
mov
jecxz
sbb
jp
andl
mov
addb
mov
dec
lea
sti
cltd
loopne
in
mov
jns
push
dec
in
in
in
pop
inc
jge
push
mov
lcall
xchg
jp
adc
or
lea
mov
mov
in
sub
ja
mov
cwtl
testb
cwtl
aam
cwtl
in
out
sub
sub
into
pusha
dec
rcrb
mov
sar
and
pop
push
xor
dec
jmp
mov
jmp
shl
es
fmulp
addr16
cmpsl
adc
aas
inc
std
or
cld
aam
cs
mov
lds
jge
dec
or
xchg
fadds
cmc
call
xor
testl
mov
xorb
adc
insb
in
movsb
pop
jns
dec
test
sbb
fldt
cmp
or
adcl
sbb
rcrl
mov
or
mov
lds
xchg
cmp
pop
fimuls
jae
xor
movsl
adc
mov
mov
lods
popf
fistps
mov
addps
test
or
repz
push
fwait
sbb
cmpsb
adcl
js
sbb
loop
mov
lds
jb
mov
mov
jnp
daa
mov
aam
inc
mov
and
fld
sti
filds
sbb
sti
movb
adc
nop
decl
dec
sbb
cmp
cmp
movsl
test
sbb
push
pop
adc
ja
nop
cmp
push
mov
jge
pop
mov
xchg
rolb
outsb
test
sub
push
sbb
lds
shlb
mov
push
push
jle
and
fwait
stc
jne
sub
arpl
stos
stos
repz
in
hlt
loop
sbb
and
adc
sbb
or
mov
pop
or
lahf
mov
imul
testb
mov
rclb
pop
add
sti
mov
jne
movsbl
movsb
decb
std
mov
fwait
dec
xlat
bound
scas
les
loope
xchg
stos
and
shrl
cli
cmp
inc
pop
stc
cmpsl
int
inc
ljmp
mov
out
ja
dec
loope
pop
inc
xchg
mov
inc
pop
and
push
mov
and
insb
push
cld
lods
jmp
rcr
xor
dec
dec
mov
mov
cmp
mov
jo
push
cmp
ficomps
ret
das
mov
lds
inc
in
repz
add
mov
jns
cmp
int3
mov
or
aad
fwait
test
orps
jmp
out
rcr
pop
mov
add
loop
insb
pop
fwait
xor
dec
dec
add
jae
jne
scas
xchg
pushf
out
mov
jl
or
cmp
flds
mov
mov
movsl
mov
inc
pop
sbb
dec
lea
push
or
mov
mov
add
orb
pop
push
bound
outsl
arpl
stc
lods
aaa
cmpsl
cmp
gs
jo
cld
fbld
mov
jle
jae
xorb
iret
insl
ljmp
repz
dec
notb
int3
scas
push
add
test
cmp
mov
fcoms
cmpsl
cmp
stos
imul
jbe
sti
lock
pusha
sub
push
xchg
inc
dec
push
xchg
push
rcrb
stos
and
and
sbb
push
sti
rcll
inc
jle
scas
and
and
xchg
mov
loop
int3
rolb
mov
mull
add
mov
jp
cmp
adc
add
mov
loop
mov
sarb
inc
mov
push
lcall
push
js
mov
stc
jecxz
cmp
mov
xor
add
jnp
fcomip
inc
ror
lock
sbb
popf
cmp
sbb
ficoms
arpl
mov
mov
or
fildl
in
sbb
cltd
sbb
xchg
test
sub
push
inc
fldenv
sbb
push
adc
int3
arpl
test
jae
in
mov
sar
out
mov
and
adc
xchg
mov
mull
lock
add
scas
int
inc
jnp
inc
in
and
call
push
js
test
xor
sub
aad
subl
test
sahf
jge
mov
bound
rolb
andl
shll
outsb
adc
imul
jo
pmaxub
es
mov
je
shrb
enter
xchg
inc
or
stos
pop
notl
mov
dec
fimull
dec
add
das
sub
jno
in
adcl
sbb
jge
xchg
inc
jnp
mov
lods
jae
test
stos
sub
mov
cmp
xor
push
lcall
and
imul
adc
xchg
dec
sbb
jle
adc
pop
aaa
mov
cmp
scas
lret
mov
or
into
add
shll
lret
adc
enter
fcmovnbe
shll
adc
pop
mov
mov
scas
clc
leave
xchg
sbb
pop
pushf
mov
pop
stos
push
jg
jl
or
sbb
xchg
imul
int3
add
gs
sub
call
in
nop
dec
sar
aad
pop
scas
and
pop
adcl
mov
fcoml
fcmovu
or
adc
pop
enter
pop
xorb
xchg
sub
lods
push
add
push
shll
int
push
mov
xor
jo
imul
ret
inc
pushf
jnp
add
pushf
fsin
pop
xchg
xor
sbb
leave
lods
push
jge
mov
sbb
clc
gs
cmpsl
popa
dec
arpl
pop
lods
lods
mov
movsl
aaa
cwtl
jno
xlat
fs
push
sbb
xchg
fs
popa
jnp
sub
inc
mov
fbstp
mov
jle
mov
outsl
inc
ror
arpl
xchg
push
mov
cmp
sbb
push
adc
mov
movsl
mov
xlat
fcomp
mov
inc
xchg
out
pop
movsb
mov
ljmp
jl
mov
push
mov
movsl
xchg
test
adc
dec
lods
inc
cmp
and
adc
push
lret
dec
sub
mov
jle
xchg
or
mov
mov
shll
stos
cwtl
aam
lock
mov
lds
jnp
popa
mov
test
add
xor
inc
enter
mov
das
dec
popf
and
push
lods
jl
or
js
push
call
aad
cltd
xchg
mov
fwait
add
jnp
movsl
shrl
sub
dec
xchg
scas
pop
popa
repnz
pop
push
dec
cmc
aaa
xlat
xchg
sti
or
sarl
pop
in
repnz
mov
or
outsb
out
dec
lods
ret
dec
out
and
cmp
adc
int3
testl
dec
jnp
sub
cwtl
call
scas
shll
cltd
inc
testl
pop
cwtl
xchg
in
sti
shrb
push
mov
mov
and
mov
pop
popa
jb
add
push
cmp
mov
jbe
push
cmc
nop
sbb
add
notb
out
arpl
push
cmc
inc
dec
testb
aas
ss
cmp
push
xchg
and
shl
ret
fldcw
outsl
pop
cli
xchg
lods
cmpsb
xchg
roll
adc
test
inc
decl
jmp
xchg
mov
neg
iret
iret
mov
jp
lcall
mov
jg
stos
mov
es
and
stc
pop
cmpsl
ja
movsl
cli
jo,pt
push
push
mov
cmp
xchg
mov
pop
hlt
outsl
popa
inc
outsb
sbb
out
idiv
fmul
xor
movsb
lcall
jle
icebp
mov
std
mov
mov
ss
jns
lods
and
cmc
lock
popa
sti
push
testl
sub
xor
test
in
fiadds
xor
in
xor
ret
adcb
sub
add
dec
out
into
scas
jp
xchg
jecxz
fsubrl
testb
loopne
inc
insb
orb
mov
ja
jnp
lds
sti
xor
sub
push
mov
jl
sti
xor
mov
xchg
adc
lods
ds
xchg
pop
push
arpl
xchg
subb
cmp
add
inc
fistpl
xchg
sar
pop
mov
mov
pop
xlat
outsb
inc
push
dec
and
push
mov
jb
ret
xlat
adc
fsts
inc
add
dec
loopne
cmp
cwtl
pop
xchg
sti
ds
icebp
adc
lcall
pop
pusha
jp
inc
lea
fnstenv
in
mov
sub
call
and
outsb
fs
jle
jl
xor
xchg
jecxz
ds
add
lds
dec
call
daa
and
lcall
dec
pop
sbb
out
repz
popa
lods
mov
adc
sub
adc
jno
enter
mov
xor
imul
sub
pop
cmpsb
cmpl
adc
movb
push
jnp
sub
pop
fcoms
jo
mov
test
sub
mov
movsb
rcrb
lcall
ja
fistps
incb
mov
jnp
adc
es
int
loope
xor
data16
pop
sti
std
faddl
mov
xchg
daa
mov
mov
imul
jnp
insl
mov
cwtl
xchg
je
cmpsb
adc
jb
mov
je
arpl
mov
idivb
pop
sarb
mov
mov
fistl
repz
int3
negb
in
push
filds
lock
mov
enter
test
lods
sbb
push
pop
inc
mov
sbb
cs
lds
leave
lcall
xlat
mov
or
add
pusha
sbb
sub
inc
mov
sub
cmpsb
dec
push
cmpsb
fisubrs
dec
xlat
insl
inc
std
in
xchg
sub
es
dec
or
pop
mov
mov
xchg
stc
das
pop
xlat
mov
mov
cwtl
aas
pushf
lods
clc
lahf
repnz
int3
push
das
outsl
in
imul
movsl
mov
enter
add
mov
pop
test
jnp
cli
mov
sub
repz
add
loop
xor
mov
stc
pop
push
cmp
lret
cmpsl
ss
mov
call
sub
bnd
xchg
rcrl
pop
jnp
xor
aam
mov
xchg
iret
mov
adc
addb
test
push
jo
rcrl
mov
cli
cmp
sbb
test
push
nop
fistpll
out
push
sub
aas
clc
cld
cmp
les
dec
xchg
jne
jl
out
push
int
or
ret
mov
nop
inc
xchg
cmp
sbb
stc
imul
enter
int
ret
adc
mov
fwait
inc
icebp
stos
add
and
movsl
loope
sbb
pop
stc
sub
push
dec
out
cmp
insl
sub
mov
andb
ljmp
adc
pop
lcall
repnz
shrl
ja
aas
mov
cmp
loope
testl
pop
mov
mov
sbb
and
cs
jp
jmp
dec
add
inc
popa
in
jmp
stos
jb
jo
outsb
sarb
insl
into
push
cmpsl
mov
mov
fimuls
pop
cmp
in
in
mov
mov
fbstp
std
sar
mov
inc
dec
adc
sub
sbb
and
aam
lahf
fmull
int
jae
data16
jge
sub
adc
sub
xor
lahf
shll
push
decb
fistl
dec
jae
cmp
movsb
push
or
inc
mov
mov
sbb
or
add
movl
inc
movaps
jl
lds
jmp
jnp
sbb
lahf
imul
push
in
add
xchg
jbe
data16
add
icebp
je
or
dec
push
push
pop
cld
xor
sub
stos
repz
and
loopne
int
ja
or
dec
jo
xchg
es
in
scas
adc
push
and
fcomps
bt
mov
dec
lret
leave
bswap
pop
iret
sahf
jle
add
mov
int3
ret
in
dec
pushf
or
add
fnstsw
scas
push
mov
imul
or
gs
xchg
int
dec
aam
xchg
mov
sarl
sbb
xchg
les
insl
ja
fadds
int3
aas
inc
das
push
or
pop
scas
push
out
call
mov
xchg
mov
aaa
push
pop
and
sbb
sub
testl
enter
dec
pop
add
jb
xor
push
pop
or
pop
arpl
xor
pop
pop
mov
xor
sub
in
lods
sub
mov
cmp
loopne
cmpsl
iret
insb
pop
lds
mov
jmp
js
push
in
mov
inc
arpl
bound
xor
stos
add
cmc
mov
pop
and
sbb
jl
push
mov
xorl
jnp
hlt
xlat
sbb
pusha
push
mov
and
fs
in
xchg
add
out
stos
mov
mov
mov
in
jae
sti
cwtl
push
cmp
adc
sub
mov
sbbb
sahf
or
clc
iret
stos
out
scas
nop
subb
lds
push
dec
pop
stos
loop
add
push
and
adc
sbb
outsl
mov
sbbb
loop
push
sub
sbb
adc
mov
sbb
stc
stos
push
xlat
jl
aad
lret
xchg
stos
adc
jl
xchg
mov
lret
test
or
ret
cmp
in
inc
push
cmp
and
dec
insb
call
cld
hlt
jb
hlt
fldl
bound
or
adc
dec
sahf
push
cld
fidivs
sub
lret
fisubrl
xor
cmp
xchg
inc
lods
push
adcl
shrl
fstpt
fcmove
sbb
xor
stos
jne
into
lret
dec
sarb
cmp
pushf
test
pop
xchg
lock
jns
xchg
and
sahf
cmp
daa
and
call
cwtl
and
cmpsb
insl
out
mov
pextrw
fsub
sbb
xchg
sbb
dec
mulb
and
or
push
or
orb
dec
stc
in
xchg
lea
in
leave
cmp
sbbb
dec
int3
das
jns
out
scas
inc
mov
repz
out
les
mov
mov
jne
xor
cmpsb
xchg
jae
push
fmull
mov
sahf
cmp
pop
in
mov
mov
mov
mov
and
push
adc
cld
out
iret
icebp
cmp
int
xchg
ret
out
lods
push
pop
dec
dec
lea
lcall
lret
daa
jbe
dec
fsubs
mov
loopne
sub
mov
ror
in
sbb
lock
add
pop
inc
mov
out
cmc
pushf
pop
mov
or
cmp
push
bound
mov
sbb
xorl
mov
or
daa
or
mov
in
icebp
sbb
movsl
mov
inc
call
das
inc
sub
sub
add
jo
dec
sub
cs
push
in
repz
xchg
mov
add
push
sbb
mov
dec
movsl
mov
shrl
sbb
in
sahf
mov
mov
fisubrs
pop
xor
orl
lret
mov
adc
lret
sbb
pop
out
lea
inc
mov
stos
push
cmp
ret
and
jo
aas
shl
adc
popf
jmp
pop
fs
std
pop
leave
push
jae
or
jne
lods
dec
push
jne
mov
flds
xor
pushf
test
jns
aam
call
dec
aam
inc
pop
out
xlat
jo
ficompl
adc
and
insl
pop
dec
cld
in
sub
fstps
pop
jg
sahf
pusha
daa
loop
into
push
out
xor
scas
dec
sbb
jo
jae
cmp
sub
fmull
in
test
jnp
jb
xor
leave
adc
pusha
test
pop
arpl
push
and
lods
mov
popa
shr
dec
pop
mov
dec
lret
rcll
and
into
pop
push
xchg
gs
aaa
in
push
nop
popf
pop
jo
and
xchg
jnp
or
in
out
push
xor
push
jnp
pop
cmp
and
loope
jge
push
jg
hlt
xchg
cmc
scas
add
scas
cmpsl
and
lret
pop
pop
mov
sub
pushf
mov
std
bound
mov
std
add
push
imul
mov
cmp
ftst
xchg
jle
in
jnp
fidivrl
pop
lds
lods
and
in
aas
lret
das
ljmp
push
aas
loop
ja
in
cmp
xor
shlb
cmp
lock
mov
ficoml
mov
pop
fcmovbe
test
cmp
out
pop
jp
mov
pop
dec
repz
cmp
outsb
xchg
mov
das
ret
jmp
dec
int3
inc
or
jns
mov
mov
mov
inc
lret
test
jae
lea
mov
lcall
movsl
dec
inc
and
xchg
fnstsw
mov
insb
imul
or
push
cmovo
mov
cmp
aas
inc
int
sbb
and
or
lret
or
jbe
out
or
mov
cmp
into
add
inc
fisubl
and
cmp
jo
and
addr16
push
mov
shll
cmpsl
out
cmp
ss
push
or
mov
js
shrl
jae
xlat
jo
add
loopne
pop
xchg
cmp
push
xchg
adc
bnd
cltd
shlb
hlt
mov
pop
mov
js
in
push
jecxz
push
mov
inc
insl
js
or
das
inc
dec
testb
cmp
data16
sbb
xchg
mov
aam
mov
xor
jb
jno
inc
mov
push
add
push
mov
pop
push
adc
xchg
add
hlt
out
in
pop
cmp
cmc
test
cmp
and
or
enter
jle
pop
cld
push
cmpsl
dec
and
testb
xor
sbb
out
ljmp
push
and
and
cli
push
aaa
and
mov
jmp
test
dec
rorb
ds
les
int
jmp
xlat
sub
ret
sbb
outsl
cmpsb
inc
mov
mov
xor
sbb
jecxz
orb
frstor
mov
incb
jecxz
fsubrl
mov
xor
push
das
sti
pop
jmp
xor
movsl
sahf
and
mov
push
cmpsl
das
inc
add
push
inc
dec
repz
out
imul
ljmp
into
mov
sub
aad
dec
or
je
shlb
push
jae
pop
popa
rcrl
mov
add
sub
dec
cld
sub
je
or
ja
cmp
cld
or
push
fisttps
ret
push
inc
sbb
insb
xor
mov
adc
and
in
mov
jp
push
jns
ret
call
and
adc
pop
clc
or
rorl
xor
icebp
out
pop
mov
pop
lea
test
xor
cmpsb
repz
push
int3
jge
adc
inc
mov
xchg
es
jno
adc
in
orb
adc
cwtl
fldenv
stos
imul
icebp
pop
fstpl
testl
cld
xor
add
push
out
xor
inc
push
test
cmc
movsb
fwait
das
lret
fildll
and
add
sarl
out
mov
or
fdivrs
rclb
adc
jb
push
and
sbb
sbb
add
cwtl
insl
push
test
inc
aaa
mov
cwtl
out
mulb
pop
scas
mov
jno
xchg
mov
je
inc
jge
sbb
cmp
sub
mov
int3
cwtl
push
push
push
xchg
jg
mov
arpl
inc
fnstenv
add
lods
inc
or
jbe
mov
bound
xor
lahf
jns
jle
sub
jg
jmp
xchg
popa
mov
nop
xchg
xchg
xor
xor
outsb
and
rcrb
daa
or
mov
mov
ds
mov
cmpsb
rol
sub
sub
rorl
sarl
pop
sub
jno
jl
jecxz
cli
jb
out
sbb
mov
pop
leave
popa
sti
lea
lret
adc
mov
nop
xorps
cmp
adc
adc
ret
and
sbbb
inc
je
sub
scas
mov
add
jo
cli
cmp
ffreep
xor
icebp
fildll
jl
push
mov
and
xchg
dec
pop
pop
cmp
lds
das
dec
cld
push
jnp
pop
cmpb
jg
addr16
or
or
ret
mov
in
out
fidivl
pop
es
dec
insl
inc
rclb
scas
es
sti
div
or
shlb
sbb
stc
cmpb
cmp
negb
push
cwtl
icebp
and
arpl
sub
dec
test
xchg
cmp
adc
inc
sub
mov
bound
cmp
enter
inc
mov
addr16
sub
jnp
or
enter
cmp
inc
or
xchg
jl
ds
mov
push
subl
mov
in
dec
push
adc
repnz
adc
mov
outsl
out
sahf
movsb
testb
xchg
mov
shl
xchg
jo
dec
cmp
lret
push
push
mov
lahf
std
jp
je
xor
clc
adc
cmp
push
jge
push
outsl
cmovle
mov
jle
dec
addr16
stc
aad
jno
and
and
add
and
mov
sub
mov
inc
mov
dec
popa
sub
sbb
addl
dec
dec
add
sbb
cmp
je
clc
sar
cmp
out
add
aaa
add
lods
pop
loop
push
mov
call
in
ffreep
cwtl
mov
inc
outsl
cwtl
dec
mov
adc
jg
fwait
xchg
jo
insb
jmp
jne
push
xor
fidivl
sbb
outsb
pop
or
mov
or
cmp
in
adc
fldl
arpl
cs
jg
dec
push
mov
jo
imul
xchg
adc
inc
add
pop
hlt
je
dec
adc
adc
jecxz
lcall
fs
jno
mov
sbb
shll
pop
pop
xchg
jne
imul
int3
pop
dec
or
movsl
pushf
pop
jge
mov
pop
fmul
hlt
xchg
mov
out
push
mov
aaa
pop
aad
jne
or
lahf
dec
inc
jp
fistpll
and
out
push
loope
jns
mov
out
sbb
mov
mov
dec
add
push
xor
cmp
ret
mov
mull
hlt
lea
aaa
ja
cmpsb
or
cmpsl
shrb
sbb
pop
aam
cmp
mov
cltd
mov
inc
sub
js
test
test
add
dec
jbe
xor
stos
lahf
faddp
ret
nop
and
js
sti
mov
inc
push
cmp
mov
mov
pop
xor
fistps
push
jne
filds
push
inc
and
mov
ret
cmc
repz
adc
mov
inc
aad
clc
pop
jbe
pushf
jne
adc
jge
fs
adc
icebp
insb
sub
in
stos
outsb
dec
and
xor
leave
jecxz
popa
test
faddl
and
sti
mov
aaa
lcall
cmc
orl
push
faddl
pop
loop
sbb
mov
push
test
pop
adc
lahf
mov
rolb
jmp
lock
cmp
jle
mov
sub
loop
mov
aaa
lods
jnp
cltd
mov
sub
or
ljmp
push
jmp
sub
adc
push
insb
pop
mov
scas
mov
outsl
dec
pusha
repnz
loope
mov
adc
mov
mov
rorl
outsb
popf
cmpsb
inc
or
fiaddl
pop
cmp
xchg
dec
flds
adc
je
jb
cli
add
jecxz
idiv
push
jbe
popa
pop
inc
add
scas
mov
stc
dec
adc
push
ja
out
rorb
xor
jno
insb
mov
into
xorb
outsb
dec
rorb
cmp
loope
in
fisttpll
leave
out
and
lods
and
sub
push
ljmp
pop
lret
cli
test
dec
movsl
dec
mov
push
mov
push
pop
daa
imul
dec
add
sbb
enter
in
lock
shll
or
or
sbb
in
pop
push
aas
mov
rolb
and
sub
push
pop
xchg
outsb
outsb
mov
adc
es
out
movl
inc
jns
xchg
daa
fwait
stos
movsb
mov
adc
push
bnd
inc
mov
or
movsl
jmp
jb
sub
sahf
sbb
inc
les
and
icebp
xorb
cld
faddl
pop
pushf
pop
stc
popa
xchg
lods
cld
hlt
test
jge
test
xchg
cmpl
popf
add
add
mov
rcr
shl
jmp
xlat
add
mov
outsb
dec
push
aaa
js
sub
fs
xchg
and
jg
mov
lea
sti
xchg
bound
pop
jge
add
mov
mov
lret
mov
out
push
sbb
in
mov
test
scas
mov
gs
ds
cltd
insb
movsb
enter
mov
sbb
ret
jl
sbb
imul
out
mov
sub
outsl
test
dec
lahf
stos
push
mov
jp
imul
icebp
pop
loop
jns
loop
cmp
sbb
mov
fnsetpm(287
fistl
leave
lcall
mov
adc
cmp
jmp
xchg
rclb
scas
sbb
jno
xchg
and
imul
ds
repnz
mov
push
aam
xor
xchg
add
or
xlat
rcl
dec
jae
sti
ds
repz
xlat
js
mov
jae
adc
pop
jae
push
sub
push
testl
popa
fcompl
sub
repnz
arpl
std
mov
imul
rorb
out
aaa
fstpt
push
inc
cli
das
nop
fs
pop
adc
lods
push
cmp
dec
adc
repz
insl
test
popa
add
mov
mov
bextr
shll
add
sub
jne
push
pop
jne
sbb
icebp
test
stos
nop
and
pop
fistpl
sub
jecxz
mov
jae
jle
pop
mov
adc
xlat
sbb
stc
cmpl
aas
xchg
lock
or
jmp
leave
pop
leave
dec
sar
xor
dec
xor
ret
adc
imul
test
mov
cmp
push
inc
sbb
pusha
cltd
and
xchg
dec
cmp
xchg
push
inc
push
aas
pop
add
dec
adc
jp
dec
add
test
decl
mov
mov
xchg
xchg
or
daa
icebp
pop
or
stc
dec
dec
popa
sub
inc
add
push
js
out
cmp
ja
movsl
cmp
dec
add
aaa
jb
data16
test
or
sub
sbb
aas
xor
ljmp
loopne
lcall
sub
aam
clc
and
neg
or
in
pop
lahf
and
rolb
sti
aaa
add
push
mov
dec
add
xchg
lds
pushf
jmp
xchg
xchg
lods
subl
sub
in
lcall
mov
add
xor
inc
jp
xor
mov
sarb
dec
inc
push
sbb
mov
dec
fdivs
aam
rcl
add
scas
xlat
xchg
push
inc
inc
ret
lds
cmc
mov
mov
aas
lock
push
test
fwait
movsl
jle
movsl
push
outsl
mov
nop
in
pop
pusha
rclb
iret
sub
dec
test
push
sub
jmp
test
movsl
jge
shrl
or
dec
inc
inc
adc
and
xor
ds
vpsubsw
xchg
mov
out
icebp
add
inc
pushf
bnd
mov
fnsetpm(287
add
xor
jnp
cmpb
ret
cmp
and
push
jg
cmp
pushf
rcl
mov
rol
jo
jle
lods
add
dec
mov
sbb
popa
xor
iret
cmp
xchg
jb
stos
adcb
jmpw
jp
fsubrs
push
imul
es
xor
push
push
xor
and
enter
jne
ja
pop
inc
mov
movsl
gs
cmp
aaa
pop
and
sbbl
adc
lods
inc
cmp
pop
stos
ret
xorl
xor
cld
aas
ja
adc
loop
cmp
outsl
icebp
shr
test
test
xor
in
lds
leave
sub
sub
pop
lods
hlt
mov
jb
mov
lahf
scas
arpl
lds
ret
je
push
pop
pop
rcll
inc
in
pop
mov
mov
sbb
mov
lcall
je
loop
aas
mov
js
pop
cltd
fxch
in
jo
ja
mov
cli
xor
dec
jae
fsts
mov
std
test
repz
mov
add
sub
mov
outsb
lret
int
icebp
int
adc
pop
mov
adc
mov
fistpll
cmovge
pop
add
imul
sti
jg
scas
mov
in
std
or
scas
and
jb
mov
scas
jns
call
sbb
mov
xchg
int
add
int3
or
sbb
jmp
loopne
jg
shll
or
xchg
jbe
lods
lods
push
jp
xor
push
orl
movsl
and
pop
out
mov
push
mov
or
fsubrl
idivl
jge
icebp
cld
mov
daa
jg
ret
in
cs
stos
adc
ret
out
cltd
mov
xchg
pop
xchg
sub
xchg
push
add
push
cs
cmp
lcall
shr
cli
xor
push
add
bound
cmp
frstpm(287
incl
add
fisttpl
hlt
mov
movsb
out
cmpsl
popw
xor
jl
mov
adc
and
push
imul
dec
mov
xor
sbb
pop
mov
cmpsb
add
into
nop
and
jae
iret
in
out
nop
sbb
dec
daa
xchg
inc
xchg
cmp
add
clc
xchg
mov
call
dec
stos
cmp
jp
lret
xlat
insl
aaa
xor
leave
into
stos
cmp
sub
add
loope
jge
jae
xor
mov
cmp
xchg
bound
jno
mov
jne
mov
cmp
subb
mov
cmp
ds
sqrtps
jl
xchg
pop
jmp
ljmp
inc
mov
ljmp
adc
out
imul
lods
stos
insl
pop
push
or
fsubrl
psrld
ja
rcrb
repz
or
mov
pop
subb
jg
mov
sarb
pop
sti
and
mov
inc
insl
iret
xor
pop
ja
lea
and
fistpll
ljmp
xor
mull
jb
jns
shrb
ds
mov
sbb
rcll
mov
xchg
andb
push
in
hlt
cltd
in
mov
sub
ds
stos
dec
mov
aam
and
mov
mov
mov
cltd
mov
pop
scas
movsb
xor
pop
lods
aas
dec
jp
shll
in
and
jg
sbb
daa
dec
testb
aam
loope
jb
in
mov
mov
pop
dec
sar
push
push
pop
cld
pop
out
ret
inc
lahf
cli
repz
mov
leave
cmp
mov
sub
ret
hlt
arpl
in
nop
in
push
call
enter
cmp
pop
mov
mov
lret
cmp
imul
inc
outsb
jo
sbb
jns
outsl
xchg
pop
mov
arpl
add
push
mov
lret
or
mov
fcoms
das
popa
push
jb
jecxz
inc
test
xchg
xchg
sub
pop
pop
jae
mov
mov
sub
jp
mov
fadds
mov
xor
mov
jbe
and
data16
jne
fildll
nop
sub
pop
mov
cmp
push
rolb
test
imul
nop
xor
jg
out
mov
lahf
or
pusha
xor
push
rcrl
xchg
cmpb
add
cltd
clc
mov
push
outsl
sti
pop
and
mov
icebp
lods
adc
or
ret
xor
movsb
les
push
push
mov
cmp
jmp
fbstp
xlat
test
xor
jno
gs
push
adc
adc
fmuls
stos
sahf
fs
call
test
xchg
int
addr16
dec
lods
pop
hlt
test
int
arpl
orl
xchg
jecxz
push
dec
xor
mov
sbb
movsl
xor
cmpsl
loope
inc
xchg
or
int3
iret
sub
mov
fildl
xor
dec
inc
add
inc
sub
xor
cmp
adcl
rclb
pop
inc
mov
push
gs
in
or
mov
jl
push
jecxz
sbb
xchg
pop
mov
stos
dec
lea
mov
ss
and
cmp
rol
dec
enter
inc
cmp
push
imul
or
inc
xchg
jp
inc
repnz
adc
ljmp
popf
out
inc
fisubs
push
dec
rorl
iret
sub
push
or
shrl
mov
scas
lret
jno
or
mov
and
aas
cmp
pop
xchg
shlb
push
inc
inc
out
mov
test
enter
sub
lret
stos
or
rcll
test
cmp
add
pand
ss
push
lds
push
push
jmp
lcall
scas
repnz
loop
rorl
enter
fimull
mov
fidivrs
loop
mov
mov
cmp
pusha
aas
sub
shll
mov
jb
xor
cmp
dec
push
scas
out
mov
xchg
or
inc
or
clc
pop
and
pusha
add
or
adc
sbb
push
adc
or
loop
faddl
cmp
cmp
outsl
jno
xchg
and
mov
sarb
lret
imul
popf
arpl
outsl
mov
pushf
popa
in
in
or
lcall
je
jge
pop
lods
pop
fstps
xchg
and
mov
divl
clc
call
sbb
cmp
ret
push
sbb
jne
idivl
pop
lock
add
jbe
stc
push
pop
add
adc
outsb
cmpsb
inc
movsl
pop
mov
sub
out
std
xchg
push
pop
jecxz
jp
aas
jmp
les
jo
jge
outsb
pop
aad
sub
jo
jns
ficomps
add
inc
daa
mov
in
call
leave
lock
jmp
push
enter
cld
xor
shr
adc
xor
inc
sub
xchg
lret
dec
dec
and
add
mov
cmpsl
cmp
jb
jle
cmp
repz
sub
pop
gs
repz
sub
test
mov
mov
pusha
out
sub
mov
rorb
cmp
idivb
mov
mov
outsb
push
mov
sbb
jae
bound
aas
decb
rorb
stos
nop
inc
or
jns
test
nop
cwtl
dec
mov
jge
dec
es
and
mov
gs
in
mov
sub
pop
dec
mov
jno
call
rcll
jne
addb
and
pushf
mov
dec
cmpsl
sbb
add
pop
leave
sub
sub
mov
push
xor
addb
sbb
sbb
xchg
call
insb
pop
pop
push
sahf
outsl
xchg
mov
lret
inc
cmpsb
loop
out
in
out
stos
jns
or
xchg
pop
adc
sbb
inc
adc
cltd
add
sub
stc
xchg
jmp
imul
ret
jp
loopne
adc
in
xor
mov
fs
ret
pushf
test
inc
add
popf
mov
fdivl
or
call
mov
jg
jmp
fstpt
mov
sarl
sbb
negb
leave
psubw
mov
cwtl
push
loop
dec
cs
insb
mov
out
mov
dec
jne
mov
push
sbb
movd
je
push
mov
and
lock
cmpsb
pop
stc
or
in
jbe
jp
mov
ret
rorb
shlb
dec
mov
in
sti
mov
adc
mov
icebp
es
je
push
mov
mov
rclb
mov
popf
pop
jnp
inc
in
or
loope
cmpsb
insb
pop
jge,pn
and
and
cmp
push
mov
in
test
inc
in
popf
lahf
mov
imul
jmp
insl
adc
call
mov
cltd
sub
adc
jnp
insb
lcall
cmp
push
scas
inc
fimull
inc
sub
in
and
xor
rcl
call
adc
call
mov
push
jns
icebp
push
dec
imul
adc
mov
stc
aam
inc
mov
movsl
sbb
dec
popf
sub
addb
sub
std
push
js
imul
cltd
push
xor
mov
xor
outsl
cs
inc
add
inc
arpl
shrb
push
sbb
lods
adc
call
dec
pop
test
movsl
daa
nop
sbbb
idivl
xchg
fidivs
push
cmp
mov
sbb
imul
andb
stos
or
out
jl
imul
cmc
dec
repz
sbb
arpl
fsubrl
ja
jnp
push
cmpsb
repz
lret
adc
mov
aaa
inc
roll
insl
cmp
dec
stos
lret
stos
ret
sub
test
stos
popaw
push
xlat
or
adc
aad
popf
or
pop
push
mov
cmp
cmpsl
cmp
xchg
roll
xchg
xchg
shlb
imul
scas
sbb
push
xor
cmc
ja
add
push
popf
mov
adc
mov
pop
xchg
fwait
ja
cmp
or
ljmp
sbbb
js
scas
mov
leave
pop
cs
and
xchg
cmc
push
shlb
enter
lret
xchg
pop
fsubs
jns
mov
and
test
or
add
pop
mov
iret
subw
xor
es
sbb
mov
dec
imulb
stos
lcall
mov
addb
pop
mov
or
cmp
rorl
std
jge
push
jmp
jo
push
aam
mov
outsl
inc
mov
inc
mov
lcall
out
imul
repz
dec
push
js
xchg
and
pop
js
xchg
call
lret
ds
loopne
mov
neg
orb
sbb
add
xor
je
xor
lods
mov
push
sbb
mov
movl
dec
insl
cld
lahf
test
xchg
pop
inc
pushf
js
sbb
add
insb
xchg
in
lcall
aad
test
jge
sti
fmuls
pop
mov
pushl
or
jns
lret
cli
xor
push
mov
push
imul
ss
in
cmp
xor
sub
test
lock
lcall
push
mov
xchg
adc
movsb
or
imul
xor
push
fstp
addl
push
int
pop
add
outsb
repnz
leave
cmpsb
enter
mov
daa
mov
dec
mul
add
xchg
dec
sbb
mov
call
add
or
inc
adc
dec
rorl
test
fildl
lret
sub
insb
rol
aaa
outsb
out
lcall
or
fnstsw
mov
sbb
pushf
push
fildl
es
sahf
popf
mov
cmc
repnz
cltd
push
sub
and
cmp
jl
sub
and
insb
xchg
lea
cmpsl
adc
sub
fs
stos
sbb
add
cmp
sub
arpl
xor
cmp
sub
add
call
test
loop
out
int3
inc
leave
std
push
fwait
jp
lock
icebp
lea
pusha
filds
daa
sahf
push
mov
mov
in
scas
sbb
xchg
cmp
shll
pop
pop
xchg
jne
imul
add
sub
lea
scas
adc
daa
clc
and
xchg
test
adc
clc
jecxz
xor
lcall
faddl
shll
enter
mov
lock
sub
dec
mov
or
out
xchg
adc
rclb
cmc
mov
cwtl
cmp
add
mov
xchg
xor
sti
jmpw
xchg
xchg
jne
dec
in
adc
inc
in
call
mov
inc
aam
in
push
scas
arpl
push
xchg
in
xchg
outsl
jae
mov
push
outsb
pop
dec
lock
cmp
push
in
adc
sub
mov
jns
imull
ljmp
test
scas
mov
mov
jns
xchg
leave
imul
mov
int3
ficompl
shll
xor
push
int3
outsl
xlat
cmp
subps
out
in
aaa
cmpb
lods
or
cmp
add
mov
jmp
cld
or
push
in
mov
cwtl
pop
inc
dec
sbb
jne
lcall
lds
leave
inc
imul
rclb
ss
jecxz
idivl
je
insl
in
loopne
lea
inc
mov
jbe
shrd
pop
mov
outsl
inc
fsts
push
fsubr
add
cwtl
lahf
xchg
push
mov
iret
dec
test
test
xchg
es
add
push
addr16
push
mov
mov
ljmp
daa
icebp
pop
or
stc
stos
cmp
dec
jp
rcll
ja
pusha
es
cmp
add
in
push
cmp
ds
cld
in
stos
popa
inc
aam
aas
push
cmp
test
loop
mov
sahf
lret
pushf
pop
loope
pop
mov
shlb
dec
fwait
and
sbb
fdivp
sahf
push
shll
push
mov
cmp
repz
sar
inc
inc
sub
les
sub
push
cmp
stos
mov
scas
xchg
and
int
jae
adc
decl
sbb
popf
cmp
jp
lock
test
sbb
cmp
sub
mov
js
jmp
popf
outsb
jo
repz
out
rclb
test
stos
hlt
push
ss
test
mov
fisubl
lret
sub
pusha
rclb
xchg
ret
mov
call
jp
outsl
mov
xchg
xor
loopne,pn
push
mov
sub
add
and
movzwl
rcrl
lret
lods
insb
lea
mov
dec
cltd
fbstp
pop
aam
push
mov
outsb
sub
xchg
call
dec
jo
lods
aad
xlat
add
push
loopne
sub
jp
xor
mov
and
mov
mov
jbe
or
lcall
or
arpl
leave
xchg
fistpl
add
out
test
and
push
mov
mov
push
dec
inc
or
add
inc
xchg
jg
jns
pop
sbb
out
push
push
nop
pop
xlat
repnz
fdivrs
add
nop
or
je
dec
add
sub
mov
add
call
mov
xlat
cmpsb
pusha
and
bound
das
adc
pop
and
xlat
das
out
xchg
push
jp
das
shlb
mov
jp
lahf
dec
sbb
lods
inc
cld
push
cmp
fsubs
xchg
cmc
shll
loope
jae
punpckhwd
subb
mov
addr16
sub
movsb
loope
pop
test
rorl
je
jge
aam
cwtl
mov
or
iret
insb
rclb
rcll
sub
mov
sarl
popa
lahf
outsl
insl
icebp
into
pushf
xchg
xchg
mov
scas
subb
cltd
lods
adc
gs
repz
in
mov
or
pop
dec
out
inc
call
addl
icebp
xchg
cmp
inc
adc
dec
jne
inc
or
call
sub
mov
or
rclb
ret
lods
test
addl
roll
out
dec
and
lods
gs
add
sbb
sub
sti
mov
test
scas
sub
cmp
int3
add
pop
push
adc
aad
aam
add
inc
push
mov
js
pop
xor
int3
rcrl
es
in
shrl
gs
adc
cmp
stos
adc
or
cmp
sbb
scas
cmpsl
repnz
mov
rolb
inc
insl
aad
cli
and
orl
push
ret
mov
dec
fstps
jl
add
aaa
sub
cmc
adc
clc
pop
add
mov
jl
xor
xor
sahf
cmc
add
scas
mov
adc
or
out
jl
sbbl
xchg
lods
sub
pushf
xchg
adc
movsl
or
jg
data16
add
idivl
repz
mov
cmp
loope
or
fistpl
jle
add
imul
dec
pushf
movsb
into
pop
push
sahf
lcall
rcrb
orb
jmp
jno
sti
rcll
imul
or
xor
xchg
mov
loopne
aaa
ds
lea
inc
aad
in
or
rcrb
int
fwait
jns
mov
sub
ret
loope
cmc
subb
bound
orl
scas
and
jb
mov
scas
test
mov
arpl
fldenv
in
insb
jmp
jmp
mov
xchg
pop
in
mov
jl
inc
sar
add
movsb
push
mov
lret
mov
cmpsl
push
fbld
es
std
bound
imul
sbb
aam
mov
jle
fmulp
xor
fwait
sbb
inc
stos
out
data16
sub
and
inc
jge
push
repnz
xor
cld
int
xor
push
xchg
hlt
lret
push
outsb
cmp
ret
cwtl
rcll
mul
hlt
pop
stos
or
cs
mov
icebp
and
ljmp
iret
xchg
addl
sti
popa
popa
nop
movsl
sbb
mov
shl
insb
rcll
ljmp
push
dec
xchg
hlt
call
mov
cmp
add
cmp
rcll
sbb
subl
loop
in
xor
call
les
xor
enter
xchg
insb
jg
jno
mov
mov
hlt
movsl
push
fdivrs
outsb
xor
rcll
sub
mov
jmp
push
test
mov
mov
stos
and
insl
or
and
mov
mov
not
mov
clc
ljmp
sub
xchg
dec
scas
adc
int3
xchg
inc
sahf
daa
push
dec
mov
dec
xor
xchg
dec
sub
mov
inc
stos
cmpsl
mov
and
stc
jnp
mov
adc
les
imul
test
sbb
mov
mov
xor
push
sbb
sahf
pop
mov
cwtl
movsl
js
cs
mov
imul
pusha
jno
inc
xchg
mov
pop
push
vsubsd
pop
scas
aad
xchg
jp
sub
pop
jg
cmp
lea
push
clc
xchg
push
pop
lods
fldenv
out
xlat
insb
ret
ret
cld
js
ds
inc
mov
fsubrs
dec
mov
sub
and
outsb
or
in
insl
lret
or
push
insb
adc
lock
adc
ja
lcall
roll
jge
jge
mov
mov
sbb
sbb
inc
movsl
xor
scas
fisubs
stc
in
int3
lcall
mov
inc
pop
and
fidivrl
lds
xchg
pop
mov
inc
movb
push
inc
loope
push
cmp
jo
adc
dec
xchg
sbb
jno
xor
inc
dec
push
idivb
cmp
jp
xor
sahf
xchg
cwtl
push
jmp
mov
mov
xchg
add
pop
and
arpl
sbb
daa
mov
mov
cmp
xor
arpl
lahf
pop
lret
dec
mov
jmp
xor
pusha
bound
test
xchg
es
xor
and
mov
pop
pop
arpl
outsb
pop
sub
icebp
xchg
and
or
xor
jne
or
mov
in
sbb
in
dec
adcl
jns
das
sti
in
adc
add
inc
scas
xor
arpl
inc
and
jne
push
mov
cmp
add
cli
or
push
dec
into
mov
cmpl
add
addr16
xchg
test
or
imul
sbb
testb
sbb
xor
jmp
pop
ret
fisttpll
cmpl
arpl
fisttps
lcall
mov
fdivp
sub
iret
pop
sub
ret
mov
rolb
push
ret
push
xor
out
cld
iret
in
dec
push
jge
pusha
dec
in
out
mov
lock
push
es
cmc
mov
add
mov
roll
into
out
inc
jae
jl
clc
jge
cld
pop
push
aas
fcomip
jge
mov
inc
faddl
lcall
push
mov
xchg
mov
fxch
or
out
inc
popf
mov
lret
call
sub
ljmp
repz
xchg
dec
int3
sbb
push
nop
repnz
mov
js
rclb
in
punpcklbw
mov
repz
jl
sub
sub
negl
popa
and
xor
and
xor
sub
aad
sub
in
inc
pusha
add
adc
mov
test
xchg
xchg
inc
loop
arpl
roll
cwtl
cwtl
or
pop
push
mov
mov
and
fcoms
insb
das
cmp
push
pusha
pop
daa
mov
lcall
mov
sbb
test
add
mov
outsb
fwait
dec
test
je
xchg
rol
lea
mov
push
sahf
jmp
push
lret
rcrl
and
add
inc
push
xlat
fldl
jnp
dec
data16
andl
out
lds
dec
mov
xlat
icebp
mov
xchg
hlt
out
addl
pushf
mov
add
cvtdq2ps
mov
stc
add
pop
mov
nop
xchg
inc
mov
add
rorb
ret
addr16
lock
jle
sahf
and
sbb
rol
out
sbb
mov
push
out
test
or
push
sub
sub
mov
cld
mov
jle
cltd
xchg
popa
test
push
mov
lock
cli
fucomip
cmp
daa
imul
les
add
mov
pushf
push
cmp
orl
jge
jnp
pop
out
rolb
push
js
repnz
int3
rcrb
cmp
pop
add
lea
xchg
push
in
inc
pop
out
in
mov
xchg
xor
add
loop
inc
mov
ljmp
dec
jg
xchg
aad
sub
outsl
cmovo
pop
stos
mov
and
mov
dec
jp
daa
and
out
test
sub
push
mov
jo
dec
scas
inc
push
mov
push
push
push
in
insb
dec
in
test
jg
mov
int3
add
cmp
push
aas
mov
outsl
arpl
xchg
adc
sar
aas
sbb
nop
aad
pop
jo
pop
or
adc
pop
aaa
fnstsw
je
sbb
mov
cltd
sub
fs
push
jno
fwait
insl
mov
xchg
lret
jnp
xchg
jmp
jns,pn
fcoml
lock
popl
adc
cmp
sbb
lahf
jo
mov
or
add
push
pop
sub
push
add
or
xchg
nop
insl
scas
cli
mov
fadd
insb
jle
loop
adc
lahf
dec
aad
or
jge
add
in
clc
mov
inc
int3
leave
inc
not
movsl
and
je
aam
adc
ds
push
lahf
mov
sub
mov
and
test
imul
jmp
lret
or
imul
jne
addb
push
push
add
mov
inc
sbb
dec
stos
mov
mov
stos
xor
mov
nop
cmpsb
shl
aaa
out
gs
nop
aam
inc
imul
sbb
out
cmp
les
push
jne
push
jb
test
pushf
rcrb
cli
add
add
and
lahf
add
or
ds
lret
jmp
enter
insb
push
ret
lds
cmp
imul
dec
das
push
or
into
or
jecxz
lods
repz
mov
cs
xlat
cmp
sbb
out
add
imul
incl
jge
das
ljmp
lret
push
clc
mov
mov
ds
sbb
sbb
lret
dec
mov
pop
push
les
push
and
aad
sbb
mov
xchg
cmp
scas
and
in
xor
orl
js
fsubp
jmp
incb
adc
imul
sar
pop
or
mov
xchg
xchg
jg
into
xchg
mov
push
insl
mov
push
and
out
xchg
push
pushf
and
dec
fiadds
subl
and
xchg
dec
into
xchg
lahf
ljmp
push
aas
jnp
loop
xchg
dec
jmp
and
pop
call
bound
repnz
into
cs
insl
mov
bound
xchg
sbb
push
sbb
mov
imul
mov
pop
bound
ret
popf
repnz
int
addr16
repnz
pop
sub
push
add
test
dec
xchg
stc
lcall
punpcklwd
sahf
arpl
out
rclb
sbb
jae
imul
fwait
ss
mov
sub
outsl
ljmp
lods
jle
aaa
mov
orl
push
test
out
jbe
jle
lock
pop
pusha
int
cmp
cmpsb
mov
mov
cltd
mov
cwtl
add
repz
sbb
xor
std
and
pop
arpl
je
lea
mov
insl
dec
orl
in
lods
mov
ss
push
mov
out
insb
jl
addr16
sub
xor
xchg
fs
xor
sbb
adc
and
push
mov
inc
push
fnstsw
inc
int3
stc
cli
sarb
in
pop
repnz
mov
pop
jb
in
push
xchg
lcall
adc
popa
mov
sub
movsl
mov
or
enterw
fcmovnb
push
xor
mov
add
movd
out
mov
dec
and
cmpsl
mov
mov
sbb
test
mov
adc
pop
mov
imul
mov
add
jmp
arpl
scas
jl
hlt
jne
mov
stos
repz
popa
fsubs
xchg
dec
out
and
leave
push
jg
mov
sub
jmp
out
in
jmp
sbb
lahf
ja
out
and
ret
or
loopne
pand
dec
fidivl
imul
testb
or
sbb
sahf
push
jl
push
test
insb
aad
and
pop
int
xchg
loop
mov
xorb
push
int3
mov
pop
xchg
pop
dec
push
ja
sbb
xor
cmpsl
pop
inc
aas
lcall
sbb
sbb
les
rolb
arpl
pushf
sub
push
jbe
mov
sbb
mov
inc
out
mov
test
mov
or
xor
popa
add
test
test
lods
sbb
daa
ljmp
adc
lret
jbe
pop
imul
inc
cmp
aaa
enter
shll
and
rorb
xchg
jb
sub
sub
fdivr
push
or
sub
mov
dec
mov
add
cld
imul
ficoml
dec
sbb
jmp
fdivrs
add
lret
sub
fabs
cwtl
arpl
xor
jp
aam
sub
pop
mov
cmp
sahf
xor
push
pushf
or
jbe
pop
lods
mov
jl
push
movsl
pusha
in
hlt
lcall
mov
loopne
pop
scas
inc
imul
mov
popf
sub
mov
lods
enter
into
cli
lcall
icebp
fldt
movsl
push
test
mov
out
sub
mov
mov
add
cltd
or
jae
push
or
pop
lock
and
test
push
mov
cmp
fs
push
js
xchg
in
lods
ret
loopne
mov
cli
add
add
push
pusha
dec
je
push
call
jno
pop
and
cmc
mov
imul
push
dec
or
push
pop
mov
iret
ret
scas
int
dec
cwtl
jae
inc
mov
arpl
les
dec
mov
stos
mov
data16
fld
pop
sub
cmp
into
jle
add
sbb
pop
add
sbb
loope
mov
dec
mov
es
xor
stos
js
xchg
inc
lret
les
dec
adc
jle
pushw
and
in
adc
repnz
fcomip
mov
push
jl
fs
mov
xchg
cld
mov
pop
call
mov
sub
es
pop
and
and
pop
mov
movsl
pop
lcall
aam
stos
loop
jbe
jne
xor
je
pop
mov
add
mov
aad
mov
arpl
stos
sbb
xorb
dec
or
lret
insl
aas
mov
jo
jno
std
or
mov
hlt
insl
ss
jmp
push
mov
add
jp
enter
or
add
mul
lea
fldt
stos
lods
ja
int
xchg
jge
xor
rcrl
imul
outsl
rorb
insb
xor
sub
cmpsl
mov
mov
sub
ja
shll
adc
sbb
in
aad
dec
push
xchg
js
cwtl
or
push
bound
nop
or
pop
mov
lock
lods
dec
cmp
ss
sbb
ds
push
pminsw
jge
inc
scas
ds
mov
cli
jbe
mov
xor
or
insb
cmp
out
jecxz
xor
sahf
sub
xchg
out
ljmp
mov
jbe
movb
rcrb
clc
scas
xchg
mov
stc
stc
je
iret
rorb
ljmp
push
pusha
scas
push
xor
lock
sbb
mov
rorl
addb
inc
mov
add
push
adc
lret
arpl
sbb
repz
mov
movsb
dec
scas
pop
in
out
int3
test
nop
stc
stos
xchg
mov
aam
jp
inc
out
addr16
icebp
ljmp
popf
dec
dec
andb
lock
fstps
pop
push
jb
and
or
lods
jb
das
pop
imul
sahf
xchg
jp
push
inc
push
ja
icebp
mov
inc
pop
pusha
addb
cmp
mov
push
hlt
shl
xor
xchg
mov
outsb
mov
jae
data16
xchg
frstor
push
xor
add
lea
in
test
dec
fidivrl
gs
jmp
movsl
xchg
sbb
aam
lahf
icebp
aad
mov
mov
inc
mov
sub
add
int3
rcpps
cmpsl
fstps
or
push
int3
fdivrl
sub
jnp
add
inc
fcomp
aad
jl
gs
lahf
mov
push
shlb
std
mov
sbb
mov
scas
sub
lea
mov
sbb
jmp
xchg
enter
and
mov
cmp
cmpb
push
in
xchg
loopne
test
int
add
adcb
bound
enter
pop
sbb
cltd
lret
inc
sbb
fldt
mov
jp
xchg
imul
movsb
test
dec
test
and
lret
clc
inc
sbb
arpl
fstpl
gs
repnz
xchg
xchg
jge
cwtl
mov
jns
pop
mov
js
pop
in
js
mov
xchg
out
and
shl
pop
xchg
adc
xchg
mov
cmp
sub
inc
lods
sub
sub
roll
mov
ja
push
pop
outsl
aam
xor
mov
or
notb
faddl
test
movsl
mov
xor
mov
push
dec
repnz
and
movsb
and
loopne
xor
mov
clc
pop
dec
ljmp
inc
fstps
lock
loop
add
pop
rorb
jmp
mov
sarb
pop
or
test
sub
fnstsw
sbb
sti
fisttpll
repnz
pop
in
enter
filds
push
icebp
in
pop
out
jns
pop
push
leave
dec
leave
loop
and
test
ficoms
out
daa
jmp
lret
sub
inc
stos
arpl
xor
jecxz
bound
std
pop
sub
stc
push
inc
lahf
shl
stc
or
inc
adc
push
xlat
pop
inc
xor
out
mov
xor
cmc
enter
or
xor
mov
cmp
adc
mov
pop
fisttpl
out
xchg
pop
out
leave
mov
loope
test
stc
icebp
adc
je
mov
jge
enter
fucomip
outsb
aam
mov
vpavgw
add
pop
je
add
aam
mov
arpl
stos
xor
and
dec
iret
mov
mov
push
pop
pop
popa
scas
dec
sbb
hlt
push
test
je
mov
pushl
lcall
ljmp
daa
jne
mov
fisttpl
scas
pop
mov
sbb
sbb
out
insl
popa
push
stos
lret
jecxz
aaa
mov
fs
out
pop
arpl
xor
lea
pop
lahf
lret
mov
xchg
lahf
push
aas
sub
test
insl
and
clc
inc
fstpl
push
mov
mov
pop
xchg
inc
roll
fbstp
pop
insl
dec
mov
push
adc
add
ja
cmp
dec
ret
pop
xchg
mov
loop
outsl
cmpsl
add
jge
cmpsl
xchg
or
xor
inc
bound
add
shrl
mov
scas
fucom
adc
dec
xor
andl
add
inc
pop
and
andl
testl
jae
mov
fsub
mov
cmc
data16
push
pop
flds
pop
jge
mov
mov
ljmp
cmp
sti
insl
daa
adc
mov
inc
stos
lahf
clc
loop
popa
repnz
push
mov
cs
cwtl
dec
sti
inc
jns
inc
push
push
cmc
mov
test
sbb
popf
cmp
aam
lret
xor
sbb
push
test
pop
sub
mov
xorb
lret
cmc
sar
add
jbe
cmp
loop
js
jg
das
xor
cmpsb
adc
cmp
push
repnz
dec
aaa
in
popf
mov
or
xchg
jp
mov
lods
outsl
inc
cmp
or
push
pusha
mov
jb
repnz
jno
loope
int
jnp
loope
push
repz
fldcw
sub
cld
push
scas
mov
push
xchg
push
shl
sbb
pop
or
in
clc
sahf
pmovmskb
ja
cltd
cld
jno
push
lret
and
test
mov
sub
orb
into
lret
fwait
mov
into
mov
and
in
mov
bnd
arpl
sbb
xchg
pop
scas
jl
stc
adc
lret
js
xchg
sbb
aad
push
adc
jno
push
and
mov
adc
mov
insl
xor
lcall
sub
or
jb
fildl
add
cld
mov
aad
push
mov
pop
sbb
xlat
clc
js
lea
or
outsb
push
jbe
sub
mov
or
mov
icebp
dec
xchg
inc
loopne
frstor
sbb
sub
pop
bound
xchg
pop
cmp
fisttpll
shrb
or
cmp
adc
lock
das
mov
push
sub
popl
mov
dec
adc
hlt
and
repnz
out
aam
inc
subb
fistl
std
fistps
pop
adc
xchg
push
jne
mov
mov
mul
mov
and
out
xchg
in
lea
lods
mov
sub
rorl
mov
std
xchg
cmp
mov
mov
stos
inc
imul
clc
fs
out
push
mov
xor
ret
mov
or
push
enter
insb
scas
adc
jp
mov
out
pop
inc
sti
xchg
inc
movsb
bts
inc
add
jnp
pop
sarb
lret
sbb
mov
and
adc
in
sub
addl
js
addb
jmp
and
mov
mov
lret
push
leave
js
mov
add
in
mov
neg
stos
fs
ds
lods
shrl
jg
push
imul
pop
push
daa
mov
cmp
rcl
cltd
xor
test
jp
add
mov
fistpll
add
pop
into
popf
xor
cmpsb
ficoml
pop
mov
sub
jp
cltd
cmpsl
stc
sbb
mov
xor
aas
push
mov
iret
stos
adc
orl
dec
push
mov
push
mov
mov
or
or
mov
mov
movsl
stos
adc
sbb
jecxz
fbld
add
rcll
mov
imulb
test
push
mov
fsubr
or
xacquire
or
mov
fistpll
xchg
pop
sar
ret
mov
out
jae
pop
fisttps
inc
add
mov
push
xchg
in
jae
fistps
fistpll
pusha
dec
jmp
add
out
jge
cmc
sub
xor
bound
inc
insl
cs
lret
push
jns
inc
ficomps
mov
fnsave
aaa
hlt
pusha
ja
pop
dec
push
mov
pop
pop
add
enter
cmpsb
lret
pusha
and
xor
cs
cmc
xor
mov
xchg
fsub
sub
mov
xor
dec
sub
pop
inc
xor
into
pop
mov
cmp
stos
and
cmpsb
mov
cmp
in
and
adc
in
aaa
lods
insb
sub
movsb
std
sub
jbe
divl
mov
fldt
push
addr16
inc
cs
jg
sub
cmp
mov
mov
jmp
add
test
test
mov
xor
dec
daa
stc
add
dec
add
mov
dec
iret
into
and
daa
pop
fadds
adc
cltd
movsb
mov
pop
sbb
push
sbb
lret
fwait
lret
mov
pop
jo
xchg
xchg
inc
scas
lock
pop
mov
ffreep
jg
rclb
cmp
xor
or
mov
je
jnp
in
ret
xchg
sbb
cmp
std
xor
or
and
xchg
lea
cltd
pop
mov
fs
test
cmpb
out
out
flds
fs
push
ret
ret
pop
fwait
jne
paddq
and
dec
mov
mov
adc
mov
xchg
int3
imulb
mov
adc
mov
jg
imul
inc
dec
cltd
push
push
clc
sbb
pop
xchg
push
jmp
pop
mov
add
icebp
repnz
xchg
inc
jge
xchg
popf
aam
mov
stc
leave
sbb
or
cs
std
dec
sbb
jp
aaa
imul
sbb
mov
es
movsl
sbb
xchg
cmp
inc
sbb
dec
pop
mov
push
in
jnp
cmpsb
outsl
lahf
push
leave
ljmp
sub
into
std
movb
jle
mov
out
sbb
repz
loopne
adc
insb
test
jnp
jge
dec
and
mov
imul
mov
pop
roll
mov
inc
ss
sbb
mov
lret
loop
mov
push
and
jae
xor
lods
popa
jl
sub
cmp
mov
clc
stos
cwtl
xchg
cs
pushf
cwtl
xchg
jl
icebp
pop
or
pushf
out
mov
adc
call
and
cmp
add
adc
je
pusha
rorb
ror
stos
mov
leave
test
sti
into
pop
xor
add
xchg
fstl
aaa
cmpb
mov
mov
jg
popa
mov
lahf
push
mov
push
and
cmpsb
aam
fwait
sub
imul
jp
int3
sbb
mov
shll
push
push
sub
repnz
insb
inc
subb
repz
in
add
cmp
adc
bound
xor
popf
data16
or
xor
ret
mov
xchg
mov
adc
in
xchg
or
cmc
xchg
lcall
rcrb
int3
pop
sbb
movsl
imul
out
adc
shlb
and
cmp
into
inc
fisttpll
pop
jle
in
in
sbb
sub
xchg
and
sub
inc
lahf
adc
imul
in
cmp
dec
add
dec
or
insb
fcomps
sub
jb
push
mov
mull
adc
xor
mov
fstpt
inc
repnz
cmc
jo
or
add
out
adc
rclb
cmp
push
or
stos
inc
outsb
and
mov
pop
pushf
ficompl
call
iret
aas
mov
std
push
jb
adc
and
add
cmp
pop
test
pop
int3
out
mov
aaa
mov
mov
aad
icebp
add
add
out
adc
mov
aas
jge
mov
bound
cmp
jne
cmpsl
xor
lods
cmc
or
pop
pop
cli
bound
iret
cmp
sbb
jl
pusha
fimuls
jns
push
lahf
ja
test
jbe
dec
jmp
iret
inc
or
daa
je
sub
cmp
sbb
lods
or
pop
inc
sti
outsl
dec
or
stos
nop
cltd
cltd
xchg
mov
bnd
xor
push
adc
adc
fsubl
lods
in
call
negb
idivb
loope
dec
inc
jecxz
lods
ficompl
jle
jge
xchg
or
lods
fildll
jo
cmpsl
aaa
pusha
fisubs
pop
ljmp
cltd
inc
mov
mov
aam
sbb
scas
cli
and
les
mov
cmp
or
js
sbb
es
idivb
mov
das
dec
cmp
mov
push
push
in
mov
nop
dec
es
cltd
push
stos
pushf
jns
mov
fistpl
add
test
cmp
in
mov
push
mov
sbb
aaa
lret
out
dec
pop
and
xor
add
movsl
dec
or
jo
int
sub
popf
mov
cmpsl
mov
cli
mov
mov
dec
mov
mov
pop
add
push
bound
aam
test
inc
jae
pop
mov
les
mov
add
out
addr16
mov
pusha
lods
stos
pop
push
and
xchg
sub
pushf
mov
in
and
xlat
aad
xor
int3
mov
dec
lods
ds
jmp
test
in
inc
xchg
inc
pushf
mov
fidivrs
test
jo
clc
lods
dec
and
and
mov
xchg
xchg
bound
adc
mov
mov
scas
cld
lret
out
inc
jo
push
mov
cmc
sar
jns
fisttps
and
jnp
ja
in
nop
fidivs
sbb
loop
out
jb
in
and
dec
xor
push
nop
mov
pusha
ljmp
or
sub
sbb
adc
fisubs
xor
add
or
fucomp
and
cs
inc
jns
mov
jp
pusha
mov
mov
mov
add
jnp
xchg
sub
int3
push
enter
ds
data16
insl
pop
cmp
add
icebp
shll
sahf
dec
cmc
ret
lods
and
clc
pop
imul
or
outsl
or
inc
into
fsubl
push
dec
js
jp
and
std
into
testb
imul
clc
fwait
mov
inc
cltd
dec
in
xchg
jb
jo
leave
iret
mov
fwait
pop
roll
push
mov
xchg
ret
lret
cs
dec
xor
cltd
jmp
lock
std
or
mov
pop
adc
dec
jae
movsl
fwait
shll
mov
sub
and
cmp
add
cmp
jl
mov
sub
sbb
pop
loope
insb
clc
and
mov
pop
lret
imul
mov
xorb
cmpsl
jno
xchg
cmp
push
xchg
xor
cmpsl
mov
loope
mov
ret
pop
inc
adc
enter
rol
mov
std
mov
mov
imul
dec
push
lods
int3
lret
fwait
xchg
aad
xchg
fbstp
cld
popf
cmp
sbb
fmul
sub
adc
dec
sarb
imull
jl
mov
adc
cwtl
shll
data16
push
xor
jl
loopne
xlat
jb
iret
and
mov
bound
xor
int
sbb
ds
or
sub
pop
lods
xor
inc
inc
lahf
xchg
int3
mov
cmp
aad
cld
cld
pop
or
or
inc
dec
mov
pop
inc
xchg
cli
psubb
xchg
and
cld
mov
and
push
adc
xor
into
stc
rcll
xchg
or
mov
pop
push
or
mov
add
jge
bound
push
inc
lock
and
sub
add
scas
call
in
dec
loop
fdivl
popf
lret
dec
in
test
cmp
add
lahf
inc
shll
stos
int
lahf
jo
push
ret
mov
enter
test
stos
scas
inc
mov
jnp
mov
arpl
pop
cmpsl
jl
xchg
cmp
xchg
mov
inc
jmp
scas
pop
mov
roll
push
fmuls
xchg
ficomps
sub
add
mov
cmp
into
lea
ss
push
dec
enter
xchg
or
inc
jnp
push
push
mov
pushf
mov
scas
push
test
stos
pop
mov
lea
test
dec
nop
loope,pn
jo
sbbl
sub
scas
pop
mov
xor
mov
cld
popa
test
pushf
bnd
cld
pop
mov
pop
shll
xor
push
xorb
insl
fsubrl
lcall
mov
aam
inc
das
add
stos
mov
movhlps
rorb
fdivl
jno
lods
pushf
jnp,pn
jns
int3
js
fists
movsl
adc
cmp
jnp
in
rcr
pop
out
lea
imul
jmp
ficomps
inc
out
adcl
mov
jmp
sbb
andb
mov
movl
push
jg
loopne
loopne
addr16
push
dec
insb
adc
sub
mov
add
xor
dec
rorl
sub
clc
mov
ss
add
pop
in
push
nop
push
inc
daa
cmp
nop
jmp
shlb
cmc
push
daa
popf
test
call
sbb
addr16
repnz
or
or
in
das
sbb
popa
sar
adc
inc
pop
insb
adc
fmull
sbb
xchg
push
fstl
mov
adc
xchg
adc
movsl
leave
jnp
mov
mov
shrb
aam
xchg
lret
sarb
xchg
lret
jns
stos
mov
pop
inc
lahf
fimuls
pop
jecxz
mov
and
xchg
int3
cltd
sub
dec
mov
int3
jae
mov
rcrl
out
inc
jns
mov
mov
push
xor
insb
enter
cmpsb
movsb
dec
dec
push
xchg
xor
jbe
in
andl
ficoml
lods
inc
sbb
adc
inc
popa
xchg
dec
es
js
push
orl
arpl
lock
cltd
jmp
sti
dec
cmp
mov
or
xchg
es
inc
in
push
popf
xor
test
dec
je
jp
mov
or
push
lcall
cmp
adc
jg
pop
sbb
in
movsb
std
add
mov
dec
push
into
imul
mov
fisubrl
sarb
aad
popf
das
lods
xlat
add
mov
dec
in
pop
and
fwait
xchg
push
xorb
stos
or
pop
sti
leave
mov
pusha
add
cmpsb
fxch
sub
mov
mov
sbb
sub
jg
iret
popf
fisttps
rolb
sub
cmpsb
jge
jbe
cltd
jns
pop
dec
out
clc
popa
shlw
push
inc
cli
in
xchg
movb
in
cmp
inc
sti
lret
icebp
jmp
push
pop
nop
jmp
xchg
addr16
stos
repz
mov
pop
cmp
out
decb
pop
push
pop
add
inc
xchg
std
insl
pop
dec
and
push
lcall
add
xchg
outsl
cmp
imul
pop
in
loop
dec
pop
xor
out
dec
mov
clc
mov
jecxz
cli
and
xor
loop
cmpsb
movsb
mov
sub
pop
and
cmp
mov
push
jo
pop
aas
fisttpll
xchg
inc
jmp
cmp
and
jg
mov
in
popa
or
iret
decl
pop
jecxz
cmp
sbb
add
cmpsl
xor
insl
mov
inc
adc
mov
xor
adc
jl
inc
pop
jg
jns
cmp
addr16
sub
idiv
mov
jp
adc
inc
cmpsb
xor
push
push
xchg
scas
xorb
mov
inc
lock
mov
cmp
pop
ja
add
mov
iret
faddp
mov
push
inc
xor
lcall
repnz
ficoml
cli
sub
adc
xchg
push
lock
mov
dec
mov
movsl
or
fidivrs
ds
inc
dec
xchg
cmp
ja
or
and
daa
lea
cwtl
sti
add
je
cli
jo
lods
mov
push
std
sub
jg
outsl
sub
je
cli
jmp
mov
sub
aad
jge
mov
add
mov
dec
cmp
xchg
pusha
adc
repz
leave
cmp
push
shll
pop
cs
je
pop
dec
mov
push
sbb
add
in
popa
or
insl
inc
pop
cmpsb
sub
ror
fstpl
xchg
mov
jbe
dec
inc
add
push
ds
sbb
pop
mov
pop
mov
pop
sti
pop
push
shll
daa
pop
xchg
sbb
loope
push
dec
fidivs
add
mov
pop
ss
push
xor
out
pop
adc
repz
jbe
pop
out
or
popa
jnp
sub
aaa
fldt
jne
cli
and
int3
xor
pop
stos
ret
cmpsl
aad
mov
mov
cs
mov
test
mov
shlb
scas
and
inc
or
mov
pop
add
dec
sbb
in
sbb
push
sub
mov
and
xchg
mov
dec
add
add
jbe
adcb
dec
push
jb
xchg
pop
add
popf
lods
negl
sub
orb
sub
jns
pop
fsubr
inc
aam
sar
xor
cltd
sar
insb
insb
xorl
addb
xchg
clc
jne
jle
pop
cs
sub
addr16
or
adc
push
roll
inc
adc
or
sub
jns
cltd
push
sbb
pop
mov
or
jge
push
xor
pop
lea
iret
jno
xor
cmp
mov
xchg
lret
push
sub
dec
out
movl
iret
xor
cmc
pop
cld
xchg
clc
cmpsb
xor
js
insb
lea
mov
push
jle
int
push
les
cmpps
mov
scas
stos
aas
jmp
roll
xor
ret
mov
push
insl
fimuls
adc
rolb
xor
push
pop
dec
jecxz
ret
push
jl
cmpsb
mov
loop
cmc
jp
sbb
jp
loopne
lret
test
rcrb
lcall
enter
addb
loope
popf
loop
sub
xchg
add
inc
lods
adc
adc
popa
sti
sbb
xchg
and
orb
pop
mov
mov
xchg
jns
lahf
out
pop
sub
sub
lds
scas
test
test
sub
ret
sub
addr16
gs
adc
fnstcw
mov
ljmp
push
push
mov
jp
ss
xchg
jg
jnp
nop
jecxz
leave
inc
dec
addb
scas
xchg
fidivl
stos
shrb
cmp
dec
dec
movsl
or
jmp
cmp
jg
fistpl
push
rorl
pop
sbb
dec
mov
out
push
std
hlt
jno
ds
fisttpl
sbb
xor
xor
shll
stc
dec
mov
cmc
push
pop
std
insl
xchg
xchg
pop
xor
add
push
mov
mov
pop
clc
mov
loop
idivl
jmp
dec
jns
sbb
push
les
rolb
fisubs
mov
bound
pop
insl
xor
and
mov
pop
xchg
sti
ret
dec
fcompl
push
add
xor
cld
repz
not
mov
cwtl
pop
aam
inc
outsb
push
mov
xchg
push
lods
or
pop
mov
pop
dec
repz
xor
sti
push
fsubs
jp
jo
jp
fnstsw
or
test
xlat
call
lret
push
or
jge
pop
sahf
ficoml
sub
ret
aas
fsubrs
inc
lods
sub
mov
adc
xor
cmpsl
add
gs
es
insb
outsb
je
dec
mov
inc
ja
shrl
inc
pop
pop
mov
mov
ret
xchg
pushf
xor
ud0
aad
shrb
fdivs
lcall
aad
xor
js
into
loope
sbb
inc
dec
je
sub
stos
pusha
pmulhuw
pop
mov
sahf
and
test
inc
mov
fldcw
aad
mov
mov
ret
bound
inc
sbb
adc
out
aaa
pop
mov
xchg
mov
pop
ja
xor
pop
mov
add
lds
adc
dec
insb
fs
mov
add
mov
pop
imul
and
into
or
fs
lcall
adc
in
aaa
iret
sub
mov
jmp
mov
stos
hlt
inc
dec
xchg
lock
faddl
movsb
cmpsl
mov
mov
jo
jae
testl
out
aad
or
dec
stos
aam
aam
addr16
lret
arpl
movsb
or
mov
and
xchg
mov
pushf
mov
in
inc
cmc
in
out
ficompl
fisubrs
out
movsb
sbb
xlat
pop
add
cmpsb
addr16
ja
scas
out
jne
rolb
inc
sbb
ret
dec
dec
arpl
inc
pop
ret
adc
stos
sbb
outsb
mov
loop
imul
adc
dec
mov
shlb
repz
xor
sti
push
fsubs
mov
dec
jl
adc
stc
jle
sbb
hlt
jb
aam
lahf
push
adc
jnp
flds
jo
mov
jecxz
mov
jns
pop
test
jge
push
mov
inc
mov
lea
jo
sbb
sub
or
mov
je
push
rorb
lock
xchg
in
jg
xchg
popa
imul
jmp
int
mov
sti
mov
jg
test
aam
adc
mov
leave
dec
scas
push
pushf
dec
fsub
adc
mov
int3
xor
jns
out
sbb
cmp
adc
sub
insb
mov
adc
insb
outsl
sub
testl
cmpsb
outsl
clc
pushf
push
int3
fldcw
cmp
incl
sbb
outsl
dec
mov
sub
adc
fisubl
xor
adc
xchg
mov
add
stc
dec
outsb
cmp
es
out
add
fistpl
jbe
fwait
adc
lods
rcr
cmp
push
cld
mov
rolb
sub
les
filds
popa
or
test
jecxz
jo
push
mov
jle
scas
push
push
push
in
and
nop
scas
and
lret
scas
xlat
add
dec
jb
lret
pop
lcall
or
mov
out
adc
inc
adc
push
inc
sub
test
insl
leave
call
fiaddl
sbb
sarb
mov
sar
scas
xor
or
push
nop
in
xor
xor
rol
sbb
xchg
mov
push
xor
jno
and
movb
cmp
lods
rcrb
in
addr16
fs
mov
es
xchg
cwtl
dec
sub
scas
sbb
popa
adc
mov
jbe
push
test
and
rorb
scas
aad
sbb
adc
rcl
mov
movsl
push
dec
jbe
xor
push
xlat
ss
pop
gs
push
add
test
call
js
mov
movl
clc
pusha
sbb
in
popf
mov
pusha
movsb
cmpsb
outsb
pop
xchg
push
pop
in
dec
jbe
repnz
data16
pushf
push
addl
mov
aam
movsb
cwtl
aaa
fsubs
out
jnp
shll
and
ds
insl
out
cmpsb
js
cld
cmp
es
mov
in
sub
pop
adc
mov
and
push
push
dec
in
ret
push
mov
push
jo
lock
aam
adc
outsl
jo
jbe
out
jno
mov
sahf
in
dec
dec
cmp
adc
push
out
xchg
lcall
jmp
cmp
and
lods
and
jo,pn
lock
nop
stos
call
pop
out
cmp
xchg
enter
mov
push
mov
cmp
popf
jns
adc
sub
inc
dec
mov
mov
cld
add
sbb
push
repz
mov
pop
into
shr
nop
mov
test
mov
xorl
inc
push
int
push
cmp
nop
in
mov
mov
xchg
addl
jo
ficoms
cmp
push
mov
jbe
pop
cmp
jge
neg
pop
addr16
bound
push
pusha
xor
insl
pusha
jae
mov
scas
addr16
dec
push
fs
sbb
mov
push
hlt
sbb
dec
leave
dec
mov
cmpsl
mov
fs
or
out
adc
dec
leave
ds
inc
push
mov
push
jmp
inc
jb
mov
pop
cwtl
stos
loopne
lret
pusha
push
lret
rcrb
enter
mov
call
lret
pop
add
jle
xor
or
mull
imul
cmpsb
notb
push
add
xchg
pop
mov
xorb
inc
sbb
pop
pushf
in
sbb
or
sbb
sub
movsl
sbb
scas
sub
test
imul
add
mov
mov
sbb
xor
je
fldcw
and
aam
out
in
fcoms
cli
addr16
mov
ficomps
inc
adc
dec
sub
push
into
dec
filds
sahf
bound
and
or
fwait
cmpsb
inc
push
imul
ss
into
daa
pop
push
xchg
jge
dec
lret
jle
imul
pusha
pop
xor
push
sub
xchg
lcall
imul
push
stos
jno
add
mov
mov
aad
pop
xchg
mov
pop
mov
jmp
mov
fwait
fs
jne
cli
repz
cmp
lods
loopne
insl
push
pop
cmp
pusha
fcmovne
xor
loop
mov
ds
fwait
push
or
stc
fcompl
cmp
jecxz
push
addb
xchg
and
mov
push
jbe
cltd
out
jp
jmp
jo
ficomps
shlb
xchg
icebp
mov
lds
push
mov
cld
xor
sub
arpl
enter
adc
aam
gs
loopw
pusha
fdivrs
ret
jo
loop
mov
mov
add
jp
lret
sti
jecxz
or
aas
xchg
roll
ljmp
push
fcomps
pcmpeqb
arpl
and
je
mov
pop
push
mov
pop
jl
push
mov
pop
jge
add
ds
cmp
mov
mov
push
pop
orb
pop
and
mov
add
dec
mov
sbb
sbb
mov
mov
js
jp
and
lcall
inc
daa
jbe
shrb
push
cmp
xchg
cmpsb
clc
adc
into
jae
or
test
inc
push
js
push
cmp
ds
push
adc
jmp
pop
je
lahf
and
es
sub
inc
cmp
hlt
sbb
shlb
sbbl
xor
mov
mov
stos
rolb
sti
ret
nop
cmp
repnz
sbb
cmp
aad
jp
fs
jb
fists
pushf
clc
fs
and
add
in
adc
push
ret
fcoml
dec
mov
and
dec
cmp
fwait
movsl
jo
shll
nop
adc
test
mov
cmpsb
in
lret
in
imul
and
rorl
xchg
push
movsl
push
cs
jge
pop
cmp
inc
mov
cmp
mov
pop
imul
lret
ret
sub
jge
scas
pop
sti
pop
shll
dec
popa
push
int3
xchg
xor
addr16
lock
adc
dec
jb
xorl
push
add
loopne
sbb
mov
insb
ja
sbb
shrb
lea
das
popf
dec
sub
inc
pop
repz
frstor
pop
scas
sbb
pusha
inc
push
das
cltd
dec
out
mov
out
xchg
mov
and
xchg
out
xor
aam
cmpsl
sub
fwait
insb
inc
repz
inc
ss
push
mov
rcll
push
orl
sahf
cmp
dec
call
xchg
shll
ret
mov
mov
sbb
xor
mov
sub
into
popa
push
mov
adc
scas
outsl
repz
xchg
test
jg
mov
pop
repnz
dec
data16
aas
jge
cld
dec
daa
jle
pop
aad
in
loopne
arpl
mov
mov
jnp
mov
mov
fwait
repnz
adc
ret
lahf
in
inc
addl
sbb
mov
cli
sti
aaa
mov
xlat
jle
push
in
out
mov
xorl
jmp
jecxz
add
mov
mov
or
push
xor
push
adc
pop
inc
and
mov
mov
mov
adc
jg,pn
mov
std
jle
into
mov
dec
xchg
xor
les
pop
pop
inc
xor
fwait
insb
popa
idiv
sub
mov
dec
in
sub
daa
or
and
in
or
dec
sub
add
add
or
popa
leave
or
xor
jae
sbb
scas
and
ss
movsl
mov
or
xchg
int
mov
cmp
push
aas
adc
aad
xlat
mov
push
aad
xchg
and
jb
shrl
cmp
insb
fsubrs
adc
ret
push
xchg
ja
inc
data16
jge
dec
mov
cld
shl
pusha
inc
pop
das
shll
mov
cs
jg
sbb
cltd
stos
sbb
sub
adc
sbb
sub
mov
xlat
mov
jae
mov
cli
test
loop
dec
lea
dec
adc
movsl
adc
add
mov
pop
sub
mov
mov
icebp
xchg
lcall
fwait
jl
cmp
mov
loope
loopne
loop,pn
jle
adcl
fcoml
repnz
pushf
ret
mov
mov
pusha
add
mov
lar
loopne
or
nop
mov
pop
aad
stc
mov
xor
jne
cmp
arpl
dec
mov
popf
adc
std
jns
push
out
int
cmp
fldl
out
push
test
jnp
ret
mov
enter
ljmp
out
inc
ret
mov
sub
jno
inc
fildl
dec
insb
nop
sbb
inc
mov
jge
sub
xchg
add
fldt
pop
punpcklbw
jge
jmp
push
sti
dec
cmpsb
inc
test
lock
pop
mov
push
cmp
xor
cmpsl
aam
and
sbb
sti
mov
or
inc
cltd
mov
js
cli
cld
mov
cmp
mov
jge
cmp
lret
in
fmuls
add
loop
subb
lret
cli
int
sbb
jns
pop
insb
testb
insl
or
rorl
mov
cli
icebp
pop
ss
cmp
add
cmp
sbb
mov
mov
das
leave
and
jle
add
adc
ds
iret
push
sbbb
sub
xor
inc
xor
mov
xchg
loope
jo
lahf
pop
repnz
xchg
push
mov
cmc
jb
das
or
push
adc
lret
notb
push
jne
add
rol
popf
push
lock
push
lret
data16
mov
popf
testl
icebp
les
push
rcrb
sbb
insb
pop
jp
dec
cmp
mov
push
imul
ss
xor
ss
mov
cmpsb
fs
jnp
push
inc
mov
ficompl
iret
incl
xchg
repnz
in
pop
ss
bound
into
out
lret
mov
les
sub
stos
xchg
cmp
jle
xor
std
cmpl
data16
xchg
and
arpl
mov
movsb
jo
dec
jbe
push
out
inc
imul
xor
inc
mov
cli
xchg
add
adc
fcomi
data16
push
insb
pop
in
dec
lcall
iret
push
push
ds
sbb
imul
jnp
sbb
das
std
popf
cmp
stos
add
dec
add
or
lods
lds
or
mov
ljmp
fdivrl
je
aam
sahf
pop
dec
adc
jecxz
loope
mov
ss
cmpsb
fst
pop
in
and
or
test
sbb
add
mov
aam
daa
mov
mov
out
or
gs
cmp
jno
in
subb
adc
test
daa
mov
daa
mov
push
fwait
test
mov
fisubl
int3
cmp
and
or
shrd
adc
and
out
popf
test
dec
jmp
xor
ljmp
scas
push
mov
andb
xchg
dec
sub
add
add
pushf
pop
lret
mov
mov
push
rcrl
dec
popf
mov
push
divl
stc
sti
outsl
mov
or
xchg
pop
push
in
xor
lods
imul
jbe
bound
cwtl
dec
adcb
mov
sub
test
dec
xchg
push
nop
dec
loop
call
inc
jp
cmpsb
sbb
bnd
mov
mov
outsb
jg
mov
adc
mov
jl
mov
add
out
fisttpll
mov
mov
cli
ds
mov
rcl
lods
mov
pop
push
push
dec
nop
adc
cmc
cmp
iret
roll
pushf
xchg
les
in
pop
and
cmp
lret
lcall
dec
jge
or
repnz
fiadds
in
cli
add
or
dec
add
popf
std
mov
sbb
sti
adc
cs
mov
or
sahf
jns
idivl
fwait
cld
lahf
push
sbb
jmp
cmp
repnz
sbb
or
enter
cmp
xchg
ret
pop
xchg
dec
sbb
clc
jmp
cmp
push
mov
test
out
add
jle
lret
sti
nop
sbb
test
mov
cmp
int3
sahf
xchg
stc
jno
mov
in
mov
or
jmp
mov
xchg
mov
pop
sbbl
jle
rclb
pop
rcr
xchg
ljmp
dec
fmuls
imul
sbb
push
dec
test
or
flds
fiadds
or
mov
repnz
cmp
pop
mov
ret
repnz
inc
pop
fwait
popf
cmp
mov
mov
out
lcall
push
push
ret
lcall
push
inc
inc
outsb
pop
loop
lds
jge
cli
stc
push
xchg
sub
sub
jns
push
in
sub
fimuls
lods
cmp
adc
ret
mov
jae
mov
fmuls
pop
mov
shl
in
addr16
movsb
cld
xchg
leave
cmp
ret
icebp
nop
dec
jp
gs
imul
cld
jmp
nop
pop
aaa
mov
jg
push
data16
push
test
or
imul
mov
pushf
mov
push
sbb
les
jb
mov
mov
lret
lret
daa
inc
arpl
imul
repnz
sahf
mov
mov
cmc
rcl
push
cmpsw
lea
xchg
rorl
push
ret
mov
mov
jbe
inc
xchg
add
icebp
adc
sub
das
clc
ret
loope
mov
imul
mov
in
icebp
insb
enter
push
out
pusha
enter
pop
inc
ds
add
rcll
mov
push
mov
iret
ds
inc
jno
nop
sbb
pop
dec
sbb
sub
lods
push
xchg
push
jno
in
in
or
pop
add
lods
xor
subb
sub
dec
pop
fsub
jge
repnz
mov
int3
lds
jmp
jmp
mov
test
adc
lcall
xchg
cmp
lods
fwait
sbb
pop
mov
fsubs
int
mov
lods
pop
jecxz
sbb
lock
std
lcall
hlt
or
stos
xor
test
nop
jle
pop
or
imul
mov
sbb
lret
loop
cmpb
mov
lods
leave
daa
and
pop
and
jnp
lock
inc
cltd
stos
ret
daa
sbb
xor
shrb
pusha
jecxz
repnz
out
xchg
mov
iret
sbb
xchg
pop
lcall
fsubr
mov
rclb
cwtl
loopne
ret
lret
push
stc
outsl
ret
outsl
mov
dec
daa
test
xor
cltd
adc
dec
xor
ljmp
fidivl
mov
xlat
push
mov
add
mov
jmp
fstps
aad
bound
daa
pushf
inc
adc
push
aam
jmp
mov
sbb
clc
ret
mov
push
pusha
jge
test
sbb
in
adc
lretw
fs
loop
test
out
sti
nop
dec
dec
cmp
sbb
out
popf
inc
aas
lret
push
fnstsw
cltd
clc
mov
out
and
je
loopne
or
lcall
cmc
or
pop
adc
out
jns
adc
add
xchg
loopne
test
ret
ljmp
imull
and
jmp
pushf
jge
sub
mov
movsb
push
inc
jbe
wbinvd
push
pop
cmp
int
pop
into
push
dec
orl
fnsave
push
mov
jno
into
inc
lret
orl
xor
clc
mov
mov
dec
lret
cs
mov
popf
xor
sbb
rcr
loop
xchg
jbe
pushl
out
lock
or
cmpsb
sub
not
movsl
mov
and
in
and
lret
rcrl
cli
xchg
and
popf
scas
out
adc
add
dec
lret
or
sub
mov
push
adc
stos
gs
lret
adc
cmp
add
mov
push
mov
shr
inc
fwait
xchg
fcom
fcmovnbe
xorb
xor
repnz
iret
mov
xchg
xchg
xchg
push
fs
pop
inc
lods
insl
adc
addr16
dec
std
sbb
mov
pop
pop
pop
or
sbbb
mov
cs
sub
aas
mull
sub
pop
loop
and
adc
into
pusha
test
cmp
xor
xchg
aas
add
icebp
add
idivb
test
push
js
jnp
lret
pop
sbb
orl
mov
imul
mov
aam
push
pusha
jp
cld
rcr
clc
fcmovb
push
subl
dec
ljmp
les
and
xor
test
or
lods
lahf
sub
dec
jecxz
test
mov
push
cmp
or
xor
jge
sbb
sbb
cmp
sub
jmp
ret
out
fimuls
icebp
xchg
ljmp
fsts
insb
mov
sbb
mov
outsb
loop
scas
enter
das
mov
scas
push
mov
mov
jo
jnp
inc
xchg
cmp
outsb
push
jp
ljmp
push
mov
mov
dec
sub
fildll
stos
cmpsb
jecxz
xchg
aad
jno
out
xor
out
mov
int3
stc
cmpl
jmp
add
xchg
and
out
ret
sbb
je
xor
xor
lods
int3
fistpl
mov
adc
adc
jbe
mov
mov
cli
mov
jnp
imul
push
insl
cmp
das
mov
jo
and
xchg
loop
jle
mov
jnp
rol
push
gs
shll
mov
sub
pop
or
xlat
pushf
lahf
mulb
push
or
dec
addr16
das
mov
rol
and
imul
xor
inc
mov
in
push
iret
ds
adc
fs
mov
or
mov
jns
ss
arpl
pop
sub
outsl
pop
xor
adc
sub
jbe
loopne
movsb
in
jmp
or
add
addl
and
leave
inc
mov
ret
mov
pop
loope
lds
mov
out
pop
adc
shll
dec
inc
jp
sub
mov
jmp
jno
mov
in
lcall
repnz
sar
repnz
add
dec
loopne
jns
or
popf
add
cmpsb
sahf
icebp
cmp
push
insb
sahf
xchg
inc
movsl
fmuls
xchg
mov
sub
and
fwait
mov
jmp
nop
dec
sbb
add
add
test
push
cli
cmpsl
loopne
scas
push
and
add
test
xchg
and
xor
xor
dec
test
jne
xchg
jecxz
mov
test
fisubl
mov
push
or
fs
sub
cs
push
arpl
repnz
push
imul
mov
inc
aaa
push
sti
imul
mov
mov
fs
cltd
jmp
adc
orl
insb
push
iret
mov
sbb
mov
xchg
mov
jns
lods
or
lcall
sahf
xchg
and
lods
add
jge
fsubrp
movsb
mov
lods
movsl
filds
testl
sub
push
roll
pushf
insl
fistpl
fs
ss
dec
je
js
ret
cmp
xchg
mov
push
ret
pop
and
push
in
or
xor
rol
lods
movsl
int
lahf
inc
aas
mov
ficoms
add
sahf
and
leave
xor
dec
rcrw
sub
lock
mov
mov
sbb
mov
loop
daa
insb
loope
push
sub
lret
sub
push
jno
imul
cmp
sub
leave
inc
mov
jns
xor
add
dec
xchg
dec
jle
lcall
aaa
jg
push
daa
adc
imul
mov
outsl
pop
xor
test
sti
jbe
xchg
rorb
xor
test
repz
jmp
addr16
in
and
outsl
out
les
fcmovb
cmpsl
pop
inc
leave
stos
cli
mov
cmp
sti
sti
cmp
in
test
pop
imul
or
stos
les
repnz
insb
bound
stc
and
in
push
ja
test
int
aaa
into
pop
jecxz
in
cmp
bound
jle
adc
mov
jge
or
jae
pop
sub
jmp
fcmovb
cmp
push
scas
cmp
jecxz
subl
mov
jo
mov
iret
jl
xchg
rol
pop
shll
rcrb
faddl
in
mov
mov
sti
xchg
daa
loopne
jge
mov
inc
ja
mov
das
test
std
jne
or
sahf
cs
jl
mov
push
dec
mov
xchg
stos
jge
push
dec
xchg
popa
xor
popa
adc
aad
testl
inc
movsl
rorl
jecxz
cmp
jae
jge
cmp
jmp
fcompl
stos
aam
and
cld
pushf
popf
jae
iret
movsb
cwtl
mov
shl
dec
dec
out
ret
movsb
mov
in
in
test
jmp
mov
prefetchw
xor
mov
test
in
xor
xor
jle
push
push
cmpsl
push
push
call
jl
outsl
cld
lret
cld
rcrl
idivb
adcb
add
test
push
cmp
arpl
aad
push
popa
xor
cmpsl
lods
fsubrp
mov
mov
add
push
xor
popa
dec
or
inc
adc
xchg
mov
mov
push
dec
jge
and
jmp
in
aaa
test
cli
fildl
movsb
push
out
test
pop
subl
insl
movsb
push
in
out
das
insb
cld
adc
mov
lret
adc
lea
mov
pop
mov
mov
dec
mov
push
es
mov
test
jns
hlt
mull
aas
cmp
inc
out
jb
clc
xchg
lret
inc
cmp
jg
andl
or
mov
pop
xchg
lret
das
xor
jae
lock
xor
xor
push
push
inc
pushf
jmp
xacquire
add
pop
jnp
in
bound
adc
fsubs
add
dec
xor
xor
xor
pop
cmpsb
sti
or
lds
adc
jbe
xor
shll
lret
ds
jne
test
hlt
test
fnsave
inc
clc
cmp
cmp
jecxz
and
pop
push
push
sub
inc
push
mov
test
push
inc
xor
pop
jle
jno
idivb
pusha
scas
imul
push
out
pop
mov
xchg
push
dec
sbb
and
pushw
dec
rcrb
mov
insb
aaa
or
nop
outsl
jecxz
pusha
test
test
ret
in
test
and
stos
insl
test
in
imul
mov
ret
push
popf
outsb
cmpsb
jmp
movsb
or
adcb
add
out
mov
push
aas
cld
sub
add
stc
ficoms
ret
cmc
cmp
adc
adc
sub
dec
push
mov
jl
fildl
dec
mov
int
adc
int3
stos
mov
sub
gs
shrb
lods
inc
and
dec
pop
cmp
lock
and
pop
mov
lret
out
lahf
pop
insb
stc
aas
insl
js
fidivrl
test
or
mov
adc
mov
adc
arpl
lea
xor
xchg
cmpsb
lock
das
ret
mov
fsubrp
scas
xor
push
or
mov
clc
jne
or
arpl
xor
jle
rolb
pop
adc
clc
fisubl
mov
leave
jno
or
lahf
jge
cmpsl
sarb
add
cmpb
mov
scas
inc
add
pop
push
xchg
push
cmpsl
loope
push
or
scas
mov
in
mov
and
jb
shlb
enter
sbb
shrb
adc
jo
in
dec
pop
into
or
roll
mull
fstpl
movsl
test
and
mov
rcll
mov
out
movsl
inc
sbb
xchg
xchg
addr16
sbb
inc
fwait
in
jno
fisubs
lret
arpl
stos
push
or
and
test
stos
mov
mov
mov
pop
inc
pop
or
add
clc
cmp
xlat
lret
testb
cmpsl
into
sahf
and
jnp
stos
icebp
sbb
fwait
cld
mov
mov
test
int
clc
hlt
mov
adc
lret
mov
adc
clc
cmpsb
in
mov
jnp
cwtl
pop
dec
into
pop
mov
shrb
add
out
loop
or
xor
push
sbb
pop
loop
std
or
in
lret
ficoml
stc
negl
ds
scas
hlt
jge
dec
mov
add
inc
dec
in
bound
mov
push
pushf
icebp
cmpl
cmp
or
mov
jecxz
call
in
push
mov
dec
test
mov
jecxz
xchg
out
and
or
mov
adc
daa
test
ficoml
xchg
daa
xchg
dec
cmovl
xchg
and
ja
adc
mov
push
lea
dec
push
push
push
cwtl
mov
ja
add
scas
rolb
lret
cwtl
leave
mov
outsb
bound
ror
mov
mov
js
mov
sbb
fists
inc
js
in
inc
daa
jge
mov
sbb
xor
fidivrs
adc
stos
data16
insb
and
pop
es
rclb
cli
jno
xchg
lods
sar
popf
jp
dec
or
imul
add
push
invlpg
or
lods
hlt
push
sub
lret
jns
rcl
mov
sbb
insb
sbb
insb
les
insl
imulb
aas
dec
fwait
push
xchg
ja
xchg
or
out
je
in
daa
dec
stos
or
in
imul
inc
mov
pop
mov
mov
in
push
loope
shlb
addr16
push
mov
jo
hlt
pop
in
jns
jle
ret
imul
fidivs
sub
daa
rolb
mov
or
sub
daa
lods
mov
or
inc
or
pop
pop
push
mov
imul
push
popf
movsl
push
dec
stos
insl
inc
imul
div
xchg
inc
call
xchg
inc
ret
leave
inc
lret
lods
adc
stos
dec
or
in
pop
xchg
dec
sbb
movsb
pop
stos
scas
shlb
test
add
xor
dec
ss
mov
mov
adc
aad
xor
jecxz
mov
mov
dec
cwtl
xchg
cmp
inc
out
ja
pusha
push
mov
push
or
in
mull
mov
pop
add
cmp
or
dec
sub
shrb
call
in
mov
fwait
jbe
shlb
jp
jns
xchg
add
stc
mov
push
jge
icebp
es
ss
xchg
inc
xchg
cmp
orl
lcall
or
sub
pop
jnp
mov
fimuls
lret
xor
push
fnstenv
mov
pop
arpl
sahf
jns
dec
fcomps
mov
pop
mov
fcmovb
add
dec
insl
stos
pop
sbb
dec
mov
sbb
stc
lret
aas
xchg
stos
aad
clc
insb
jbe
aaa
add
xor
repz
dec
push
popa
xadd
add
lret
sub
outsb
mov
jecxz
mov
cld
enter
mov
sbb
and
mov
or
jmp
addr16
add
sbb
fs
outsl
sub
xchg
xor
popf
cmpsb
push
push
jmp
inc
mov
aaa
or
mov
stc
push
jl
add
inc
and
sub
jne
pushf
add
mov
push
xchg
cwtl
or
out
and
pop
push
cmp
inc
mov
pop
stos
pop
mov
push
mov
bound
or
mov
sub
cs
nop
push
int3
in
out
cmc
in
mov
push
pop
hlt
push
jg
lock
rcll
les
mov
and
mov
mov
sub
push
decl
inc
jb
in
xor
cs
and
xchg
pushf
cmpsb
mov
add
and
pop
repz
rcr
xchg
imul
aas
sarb
imul
push
hlt
add
mov
adc
cmc
sub
inc
mov
loope
mov
xor
out
aaa
mov
cwtl
fistpll
mov
outsl
cmp
sub
stc
push
sbb
div
stos
ljmp
mov
push
dec
call
inc
fcompl
cmp
data16
es
sub
ja
repnz
shlb
iret
push
mov
mov
jns
test
dec
and
mov
ret
das
add
pop
and
pop
mov
xor
mov
add
bound
test
xchg
shrb
inc
mov
xorb
jae
stos
mov
js
es
fwait
outsl
shlb
sbb
in
xor
xchg
cmp
dec
sub
jnp
push
xchg
xchg
dec
and
clc
mov
test
adcl
mov
mov
loop
pop
mov
mov
inc
sarl
lcall
shll
inc
lahf
lods
mov
sub
lcall
cli
popa
mov
jp
sub
cltd
add
setb
shll
pop
imul
orb
xchg
data16
stc
xor
mov
test
sub
jo
xchg
xchg
mov
cmp
std
into
fsts
cmpsl
pmaxsw
loop
imul
mov
jl
cmp
push
or
xorl
push
xlat
add
dec
sub
pusha
popf
jg,pn
push
or
es
adc
add
sub
inc
inc
dec
aaa
push
jno
enter
xchg
lret
loope
in
mov
xchg
jge
add
fld
aaa
add
sub
cmp
jno
inc
xchg
sbb
repnz
xchg
lods
mov
cmc
mov
cltd
mov
fwait
scas
in
and
adc
leave
sbb
mov
mov
dec
mov
sbbb
add
xor
mov
jmp
gs
nop
sbb
test
jl
sub
scas
xlat
jno
mov
fisubrl
popa
jl
mov
xchg
mov
add
xchg
mov
jge
out
popf
scas
cli
imul
inc
popf
inc
cwtl
mov
jb
int3
sub
pop
stos
out
mov
dec
cmp
pop
cltd
jno
lods
out
xor
outsl
dec
sarb
inc
inc
scas
xlat
repnz
mov
or
movsb
push
test
mov
int
xchg
push
cmp
or
dec
sarb
dec
sub
mov
push
pop
mov
daa
popa
xor
jle
mov
push
push
mov
cli
outsl
jl
inc
stos
or
inc
and
stc
sub
lret
scas
adc
mov
mov
stos
outsl
xor
or
int
sbb
jb
aas
sbb
xchg
mov
pop
pop
ljmp
scas
les
cmp
test
bound
mov
xor
rcll
jl
jge
gs
movsb
push
jge
fsubs
fs
xchg
jecxz
push
cwtl
xor
mov
inc
addr16
mov
es
das
adc
mov
jnp
outsb
scas
adc
out
addl
leave
jle
and
xor
notl
lret
sub
das
inc
cmp
mov
rorl
icebp
repz
mov
loopne
inc
add
lea
notb
push
sub
pop
not
xlat
dec
xor
imull
adc
jae
sahf
jae
int3
sti
add
dec
jl
mov
bound
mov
fst
add
inc
lea
in
outsb
clc
test
xchg
adc
out
rcrl
lock
mov
cmc
and
jl
addr16
or
jge
or
and
ret
adc
xor
inc
incb
and
in
mov
aaa
lahf
and
pop
or
pop
add
mov
movsl
je
sub
outsb
jl
out
push
xor
and
movsl
jge
xor
sbb
insl
dec
mov
push
xchg
lock
popa
push
lds
sbb
sub
pop
lds
adc
fisubrs
fcoms
xchg
adc
sbb
pop
push
pop
inc
les
mov
nop
mov
fxch
fwait
mov
jb
and
pop
test
sahf
push
xchg
dec
mov
xchg
and
lahf
add
test
icebp
mov
pusha
cmp
jg
mov
pop
dec
dec
jmp
pop
mov
int
and
or
sub
call
or
in
cmpsl
addr16
sti
mov
gs
xchg
std
and
xchg
das
mov
mov
fisttpl
pop
mov
pop
xchg
test
dec
push
sarb
bound
sarb
mulb
or
je
mov
ds
pop
mov
gs
or
movsb
pop
mov
and
jp
sbb
pop
pop
mov
andps
enter
outsb
cld
je
test
or
pop
pop
pop
je
mov
std
int3
pop
pop
jmp
in
sub
fdivrs
movsb
sbb
repz
pop
or
and
pop
xor
mov
inc
cli
mov
or
mov
int
jo
pop
and
loop
into
out
je
pop
xor
pop
subl
sbb
push
add
insb
cltd
mov
mov
negb
ret
adc
aam
gs
pop
cmc
lcall
xor
jp
insl
adc
loopne
rclb
mov
push
xor
inc
push
int
lea
and
xchg
es
aad
and
sub
add
cli
fisttpl
into
xor
arpl
cmp
or
nop
pop
sbb
cmpsl
rcll
add
nop
inc
cli
jg
iret
mov
dec
daa
adc
rorb
je
adc
sub
sub
mull
xchg
adc
jo
jmp
hlt
xchg
lea
into
enter
rcrl
mov
ss
aas
cmp
shll
ret
repz
and
rcrl
in
push
xor
mov
push
jne
or
adc
out
push
sub
stos
mov
push
dec
push
sbb
andb
lcall
fwait
adc
dec
and
cmc
out
xor
ret
mov
leave
fldt
jge
dec
ss
fwait
push
mov
cmpb
test
loop
pop
xchg
addr16
lock
jbe
add
push
or
loop
jmp
jae
xchg
scas
mov
scas
mov
push
mov
insb
cwtl
test
mov
out
jo
push
stc
aaa
repnz
push
push
dec
adc
push
or
jns
mov
push
mov
scas
mov
loopne
mov
add
in
fists
xchg
ja
xor
sub
je
cmp
and
mov
movsb
loope
inc
icebp
popa
dec
lret
xor
sbb
cmp
jno
cli
xchg
out
sub
jp
mov
push
std
mov
mov
jp,pn
mov
loop
lret
mov
inc
loope
ja
cmpb
sbb
mov
cmp
icebp
daa
or
pop
vhaddps
and
sbb
fnstcw
mov
out
fists
les
mov
out
and
test
sahf
rcl
arpl
lock
popa
mov
mov
cmp
inc
sub
es
push
pop
psrlq
sar
outsb
dec
aam
push
and
popa
jnp
mov
ss
mov
rorb
or
xor
dec
push
or
pushf
lods
gs
dec
mov
fldt
lods
jl
mov
cld
dec
xchg
mov
push
inc
mov
cmp
pop
mov
and
nop
fbld
mov
xor
or
mov
dec
in
xchg
dec
jo
push
mov
add
mov
dec
cmpsl
stos
push
xor
push
mov
es
jns
enter
sub
aaa
dec
fcmovb
cld
iret
mov
mov
add
push
aaa
mov
aas
loope
or
pop
pop
inc
hlt
lea
sub
dec
cmp
mov
ds
clc
fildll
jle
jnp
mov
ds
push
aam
inc
push
pop
cmp
push
sbb
into
or
push
imul
pop
test
xor
xor
xchg
sub
popa
fstl
or
pop
push
lods
inc
inc
insl
jns
xchg
cmp
addr16
cmpsl
or
aas
cmp
mov
lret
lock
add
jecxz
cmp
fs
psrld
andnps
mov
movsb
mov
mov
in
push
movsl
or
mov
sub
adc
mov
jae
inc
mov
jns
movsb
and
loopne
inc
arpl
jbe
mov
or
mov
mov
jle
xchg
lods
pop
pop
sbb
lret
and
mov
shr
jl
xchg
jle
xor
jns
cld
cmpsl
in
fptan
loopne
adc
fnstenv
add
add
add
push
push
outsb
les
add
js
mov
pop
jmp
data16
cmc
cmp
dec
adc
shl
add
je
scas
sbb
mov
mov
daa
movl
scas
xor
jle
mov
add
pop
cmp
pushf
mov
mov
adc
sti
mov
retw
dec
pusha
push
les
idivb
icebp
lcall
scas
iret
jnp
and
scas
in
gs
dec
sub
test
dec
and
mov
fidivrs
push
cmpsl
scas
imul
test
push
mov
jmp
jge
fisubrl
dec
lods
jmp
daa
data16
mov
repz
cwtl
adc
call
jae
sbb
xorl
ds
mov
pushl
or
sbb
testl
daa
faddl
je
dec
cmp
iret
sbb
mov
add
popf
shl
mov
jmp
movsb
loop
sbb
xchg
dec
mov
pop
mov
and
cltd
adc
mov
in
push
inc
pop
imul
fwait
pop
push
fidivrl
bound
hlt
or
fwait
gs
out
jns
cmpsl
xlat
pop
lock
ds
mov
insb
scas
repz
out
or
sbb
mov
dec
inc
add
insl
dec
fnstenv
ret
outsb
test
lods
pop
cmp
out
or
jp
imul
inc
loope
call
pop
int3
sub
fwait
loopne
sbb
test
xor
push
leave
lods
movsb
in
stc
les
orb
pop
xchg
xchg
mov
adc
iret
addl
xorb
push
ret
jb
sbb
das
xor
sub
mov
jge
bnd
cltd
dec
mov
xor
xchg
or
or
push
scas
sub
dec
mov
in
shrl
sub
xor
movsl
ja
pop
mov
cmpsl
popa
mov
pop
or
xlat
mov
lret
add
pop
aam
mov
lret
pop
mov
dec
sub
outsb
lahf
negl
test
icebp
dec
sub
cmp
leave
lret
jecxz
mov
push
add
adc
pop
movb
js
in
fidivl
cld
fbld
test
mov
mov
ret
jmp
inc
mov
inc
fidivl
or
pop
xor
std
cmp
sub
test
jp
dec
cmpsb
mov
in
mov
mov
nop
aas
mov
fimuls
and
mov
mov
out
mov
push
mov
mov
jns
insl
mov
push
xchg
inc
sbb
jo
aam
out
add
sbb
add
mov
fwait
lea
adc
push
dec
and
add
loop
hlt
fists
mov
fistps
cld
xor
fbstp
ret
pop
jg
jl
and
test
jmp
or
fsubrs
insb
fdivr
jmp
mov
mov
insb
push
js
jno
in
mov
jo
xorb
enter
bound
and
pop
fwait
in
das
sbb
mov
xchg
push
push
cmpsl
inc
fsub
ljmp
jmp
out
dec
sar
dec
mov
jle
fs
sbb
repnz
adc
sbb
add
stos
stos
lock
sbb
jns
pop
or
subb
js
add
push
sbb
rclb
pop
mov
jge
into
xchg
das
and
shrl
sarl
mov
outsl
sub
cli
bound
leave
add
mov
mov
roll
xor
push
mov
mov
insl
enter
mov
adc
adc
pushf
sbb
data16
sbb
andb
fistpl
pop
mov
decb
xchg
imul
mov
and
mov
jbe
out
mov
sub
adc
stc
add
xorb
in
mov
mov
dec
dec
mov
add
hlt
out
push
test
and
pop
fstpl
cmp
mov
jl
fiaddl
in
push
mov
sti
jns
not
lods
pop
push
add
mov
pop
adc
jmp
adcb
lock
rolb
ljmp
aas
adc
addr16
lea
adc
hlt
cmp
push
mov
push
xchg
sbb
jle
test
ss
jne
mov
pop
leave
sub
or
sarl
adc
adc
cmp
jo
add
dec
push
jecxz
push
ret
dec
mov
fists
push
and
int3
ljmp
loope
jb
lods
jb
pop
or
data16
sahf
adc
in
push
pop
xchg
sti
pop
mov
data16
in
xor
jmp
cmp
loop
mov
call
push
mov
inc
xchg
or
push
es
pop
mov
adcb
or
pusha
mov
inc
test
lahf
out
dec
fs
mov
test
ds
inc
lods
pop
pop
push
mov
sti
push
cmp
push
test
lret
add
mov
test
outsl
pop
daa
ss
popa
adc
and
jns
stc
and
mov
stc
in
fisubs
mov
scas
cmpb
mov
jae
mov
mov
sarl
adc
pusha
cmp
add
mov
push
add
rclb
mov
fcomps
lcall
push
jmp
xlat
pop
and
jl
sub
jge
nop
jg
or
int
sarl
inc
cmc
add
enter
fs
jb
pusha
inc
xchg
sbb
int3
divl
and
in
je
pop
pusha
xchg
std
xor
out
cmp
sbb
scas
outsb
jecxz
lret
cs
cltd
ret
jns
jne
push
sub
xchg
and
aaa
pxor
adc
xorl
movsb
rorb
jo
addb
insl
hlt
fstp
adc
or
scas
mov
mov
lea
lock
in
shll
pop
in
stos
in
push
fdivs
cltd
popa
mov
js
loopne
rclb
pop
cwtl
stos
cmp
pop
add
xchg
mov
decl
scas
xor
iret
jle
inc
inc
jl
and
mov
xchg
in
lds
pop
or
mov
add
mov
jle
ljmp
sub
pshufw
imul
dec
xchg
jge
xchg
mov
mov
pminub
insb
push
and
popf
fdivrs
inc
cmp
jg
ja
lods
or
pop
and
mov
out
in
hlt
nop
call
and
inc
mulb
ret
sarl
cmpsl
push
out
cmc
lods
mov
and
jmp
jmp
lds
xchg
add
xchg
push
lret
out
push
jg
sarb
xchg
mov
inc
ds
arpl
js
ja
js
cli
pop
adc
push
je
mov
lret
sarb
std
pop
pop
and
je
dec
rcl
fld
jb
jns
jns
std
mov
mov
add
fidivrl
xor
enter
pop
jmp
add
sbbl
mov
in
adc
in
pop
dec
sti
int
jne
jns
int3
and
lret
ret
sbb
lahf
jb
inc
aam
aas
mov
nop
inc
pop
dec
test
push
mov
mov
pop
mov
aaa
push
rcll
cwtl
idiv
jb
pop
mov
mov
push
add
mov
bound
sbb
xchg
ljmp
push
cmc
xchg
sub
mov
leave
mov
stos
cs
mov
sbb
sahf
xor
xor
mov
fiaddl
pushf
insb
test
pop
push
adc
or
push
xchg
cli
ror
test
outsl
sub
rcrl
les
pop
cmp
lret
inc
aad
stc
mov
scas
shrb
pusha
inc
loope
xchg
mov
ja
add
out
out
lds
sbbl
in
sbb
or
and
xor
das
inc
xchg
sbb
cmpsb
testl
xchg
push
pop
mov
gs
lods
cli
push
clc
or
sub
hlt
dec
mov
jo
fs
imul
add
rorl
add
xor
pop
push
mov
dec
mov
mov
sub
test
ja
inc
jmp
or
cld
mov
mov
in
aad
jnp
mov
xor
or
jg
jne
add
push
js
dec
jae
xchg
gs
mov
mov
push
popf
push
test
cmp
mov
push
arpl
inc
mov
mov
push
push
xchg
and
arpl
push
outsb
ret
movsb
dec
divb
rcr
inc
cmp
add
out
adcb
std
repz
arpl
das
or
sbb
dec
sbb
sbb
lahf
imull
arpl
imul
fadds
push
mov
jb
xor
inc
cmc
sub
ss
aad
aaa
faddl
repnz
out
sarl
mulb
or
popa
loope
push
bound
pop
or
ljmp
insb
mov
mov
sub
cmp
out
pop
xchg
mov
adc
stc
jmp
rcl
outsl
sub
mov
mov
mov
jo
inc
mov
dec
lahf
scas
ret
lahf
enter
and
add
js
pop
add
cmp
pusha
andl
rolb
push
mov
sti
jge
lret
mov
rorb
in
mov
cli
push
popf
mov
mov
out
mov
aad
dec
ds
icebp
loop
pusha
push
aas
jae
subl
add
popa
fstl
out
flds
addr16
mov
scas
mov
shrl
add
cmp
aaa
popf
int
pop
jecxz
int3
cmp
into
das
js
and
push
sub
sub
cltd
and
xor
mov
lds
or
push
mov
inc
rorb
mov
into
push
xchg
xorb
cli
fiadds
ds
out
dec
rclb
roll
popf
adc
mov
push
mov
dec
cmp
or
jnp
test
js
sub
shrb
hlt
pushf
lea
pop
aas
dec
or
cltd
icebp
aaa
es
scas
pop
mov
lods
sbb
inc
in
xor
cmp
inc
and
stos
add
shlb
mov
sbbb
add
or
push
dec
cmpsl
ss
cmc
shl
pop
push
into
test
lret
mov
adc
mov
ss
aad
jno
adc
imul
mov
scas
js
mov
xchg
mov
loop
pop
repnz
mov
sub
stc
and
cli
push
add
lods
cmp
or
sub
aad
push
loop
add
xor
pop
test
dec
das
mov
dec
mov
mov
inc
movsb
fcmovnu
cs
xor
stos
inc
jle
push
dec
dec
adc
test
arpl
jb
cmp
mov
test
jae
pop
ret
mov
aam
xorl
mov
rorl
pop
int3
mov
insb
xor
popl
inc
stos
push
mov
into
mov
stos
rolb
bound
scas
fdivl
push
inc
scas
sub
hlt
inc
cmpsb
cwtl
sbb
ljmp
out
scas
cld
dec
ljmp
fldl
stc
rcrl
xor
jp
stos
cmpb
add
loope
and
xorb
jle
leave
cmp
pop
mov
sub
cmpsb
mov
mov
movsb
sarl
pop
jp
xacquire
or
xor
lcall
jno
mov
mov
dec
mov
pop
fdivl
and
sub
imul
or
inc
jns
pop
repz
dec
lea
stos
js
push
xchg
push
les
test
inc
xchg
mov
mov
dec
dec
es
push
and
cmp
or
fmuls
orl
xchg
dec
push
ljmp
push
dec
dec
jnp
insb
push
rcrl
andl
leave
push
xchg
push
lret
scas
je
cmp
repnz
mov
push
adc
sub
or
xchg
lock
mov
ffreep
aam
cld
cmc
push
mov
sbb
stos
cmc
cmpsl
ret
cmpl
lcall
add
call
push
ret
lcall
out
jg
xor
adc
inc
sahf
insb
push
xor
in
shrl
push
pop
dec
jecxz
scas
gs
in
rorb
cmpsb
lods
cmp
dec
and
lock
rep
hlt
das
jp
pop
or
push
mov
in
pop
pop
and
inc
push
inc
cltd
movsl
insb
cltd
and
pop
notl
push
mov
mov
out
aaa
mov
jno
cmpl
mov
fldl
jnp
cmpsl
and
add
jns
xchg
or
push
mov
out
aaa
rcrb
fnstcw
aad
jne
sbb
dec
cwtl
push
cmc
shrl
push
cs
push
push
mov
xor
sub
loope
fstps
fistps
dec
mov
mov
rcrb
inc
jo
pop
mov
mov
dec
and
cmp
jnp
fstl
xchg
pop
sbb
or
xor
jb
movsb
push
push
push
or
mov
fistl
sbb
inc
out
inc
test
adcb
ds
arpl
dec
insl
movb
dec
sub
movsb
call
mov
xor
imul
mov
mov
push
int
cld
cmp
lea
push
dec
adc
cmpsb
repnz
cli
aam
push
add
movsb
inc
jb
in
cmpsb
mov
mov
push
cmp
cmp
sub
orb
fmulp
popf
aaa
ja
mov
mov
cmpsl
dec
lds
push
mov
leave
nop
sub
cmp
mov
xchg
xor
aam
pop
mov
xchg
cmp
mov
dec
mov
cltd
je
pop
dec
call
xchg
adc
bound
xchg
and
out
test
daa
inc
dec
cmp
inc
mov
jne
sub
dec
pop
enter
fs
xor
jnp
inc
popa
cmc
sbb
movsb
rep
je
inc
gs
add
shll
addl
push
lret
dec
xor
lods
inc
imul
bound
xchg
or
mov
jp
pop
in
hlt
scas
add
xchg
sub
adc
push
jg
sub
or
mov
sub
add
cmp
xor
rorl
mov
dec
je
ret
icebp
pop
test
mov
gs
notb
jg
pop
adcl
adcl
pop
pusha
jecxz
out
jge
xor
cmpsb
adc
fisubrs
sbb
push
test
es
pop
mov
aam
je
xchg
jp
pop
mov
xorl
xchg
mov
mov
jg
imul
std
sub
mov
pop
mov
cmc
push
lcall
sbb
loope
mov
dec
test
fs
data16
xor
lcall
popa
insl
sbb
cltd
jg
cli
je
pop
sub
add
mov
cld
leave
bound
add
in
test
sub
sub
lret
cmp
mov
arpl
mov
lcall
lods
push
adc
icebp
addr16
inc
push
push
mov
imul
ret
or
dec
xlat
scas
cmp
and
add
icebp
imul
push
cli
adc
ja
or
inc
dec
or
and
shrb
sti
inc
stos
jle
fwait
jge
inc
sbb
in
adc
and
pop
adc
in
fdivl
lods
xchg
push
in
pushf
in
xor
rcl
adc
les
cmp
xor
sahf
rcr
lods
mov
sarb
xchg
inc
or
sub
aad
or
fisubrs
xor
inc
es
test
cmp
dec
push
xor
xchg
outsb
ljmp
jmp
scas
pop
cmc
imul
jns
in
xchg
dec
movsl
sbb
push
dec
xchg
mov
push
insl
arpl
int
xchg
and
adc
fwait
call
mov
hlt
cmp
dec
add
inc
mov
push
and
jle
dec
mov
add
jne
stc
and
loop
popf
outsb
mov
nop
lds
pop
xchg
push
fldenv
sbb
cltd
dec
adcb
sub
stos
push
and
pop
cs
and
shl
cmpsl
pop
sarb
cli
push
sub
pop
push
fnsave
sbb
xlat
hlt
clc
shll
jb
jns
xor
cmpl
repnz
dec
sar
icebp
enter
xlat
insl
ret
in
push
fwait
cmpsb
aas
push
and
cs
dec
dec
xlat
inc
jl
aam
adc
addr16
cmp
rolb
outsb
jns
cld
pop
adc
mov
lds
in
call
cltd
pop
cld
scas
test
mov
repz
fildll
inc
jbe
adc
sbb
scas
les
popf
lahf
ret
inc
call
outsl
lods
out
lock
daa
testl
push
bound
cmpsb
mov
push
ret
xchg
xchg
cmp
xor
loopne
xorb
inc
testl
loop
inc
xchg
mov
sbb
icebp
incl
test
mov
aas
push
daa
jle
jno
add
aaa
fs
jle
outsl
loope
adc
xor
push
sub
jo
mov
push
mov
pop
or
inc
jg
dec
and
push
stos
das
cmp
push
jbe
cltd
mov
cmp
or
mov
inc
fbld
mov
lcall
fwait
insb
add
mov
push
push
jmp
fistps
fbstp
nop
inc
xchg
in
dec
sbb
mov
push
flds
loop
loope
lods
xchg
adc
add
popf
test
jl
dec
nop
popf
add
out
adc
mov
mov
sbb
xchg
jecxz
mov
icebp
clc
fimuls
xor
cmp
js
and
push
dec
mov
sti
stos
push
push
mov
sbb
pop
sbb
outsb
repz
jne
push
es
xchg
in
cli
sbb
mov
fdivrs
cli
arpl
fbld
cmp
sbb
daa
bound
test
dec
sub
data16
ljmp
xor
call
mov
add
inc
mov
pusha
je
xor
mov
xor
imul
enter
lea
cld
test
dec
xchg
leave
rcrl
leave
dec
test
mov
jbe
sub
aam
jle
shr
out
push
nop
jnp
bound
mov
or
mov
insb
ds
lret
loopne
lret
push
arpl
ss
push
mov
xchg
mov
mov
xchg
mov
add
cmc
filds
cmc
mov
adc
cmp
jnp
call
mov
mov
lods
jl
adc
jle
add
fiadds
filds
lea
mov
shl
lds
das
jnp
mov
jp
pushf
adc
cmpsb
jne
test
hlt
push
fucom
add
repnz
adc
cmp
mov
push
push
adc
adc
push
sub
stos
mov
pop
rcrl
mov
cmp
mov
jecxz
jae
xor
cld
into
dec
and
pushf
and
sub
dec
cld
jns
pop
inc
or
pop
stos
rolb
cmp
push
sbb
dec
lahf
adc
shlb
js
daa
jno
test
adc
sbb
out
sbb
pop
daa
idivb
lahf
roll
push
mov
adc
lcall
jp
mov
push
scas
dec
sub
imul
outsb
cmp
out
sbb
lahf
xor
mov
mov
in
mov
sub
repz
mov
inc
and
ret
jmp
test
sahf
lret
mov
and
mov
xor
insl
sub
call
inc
fstpl
add
rolb
mov
mov
mov
push
or
sbb
out
xchg
xchg
pop
lret
jg
dec
xchg
sub
pop
push
mov
mov
jl
pop
mov
test
cltd
inc
imul
insb
ret
lahf
repnz
sarb
push
add
xchg
popa
mov
or
stos
dec
fwait
cmp
jmp
adc
cmpsb
jg
sub
shl
inc
push
shl
pop
and
fs
cmp
lock
cmpsl
jmp
dec
jne
fwait
xchg
dec
out
fidivl
outsl
dec
mov
sub
fnstenv
shlb
bound
cltd
insb
rcrl
add
movsl
hlt
outsl
pop
push
int
mov
rcr
mov
mov
sarl
mov
sub
cmp
in
and
mov
pusha
jo
and
call
adc
or
in
cmp
adc
adc
cmc
cmp
mov
lahf
ret
jle
popf
call
repnz
xchg
inc
dec
dec
in
mov
pop
cmp
rcrl
sahf
sar
or
imul
std
xchg
xor
and
mov
xchg
in
nop
lret
adc
les
sub
fbld
mov
js
mov
out
cmp
sub
jne
xchg
fsubp
push
pop
jbe
mov
lds
divl
mov
stos
cwtl
or
pop
sbb
xor
ljmp
not
or
ljmp
mov
or
cltd
cmc
jge
cmp
push
pop
or
add
xchg
jmp
pop
das
push
cmp
push
xchg
lds
in
aas
and
mov
insb
mov
insb
xor
test
push
xchg
into
shlb
iret
adc
stc
int3
and
mov
jmp
lahf
out
jnp
cmpsb
jg
push
sbb
insb
cmpsb
add
fsubl
loop
loop
sbb
rcl
inc
pop
jne
je
ret
jp
xchg
jo
or
bound
inc
xchg
xchg
lahf
add
test
pop
insb
stos
imul
and
mov
jmp
in
fsubrs
bound
in
adc
push
push
mov
cmp
call
inc
fdivr
or
addr16
mov
scas
mov
push
aam
frstor
cld
ljmp
repnz
aas
fdiv
or
insb
cmc
lahf
sub
jmp
enter
adc
xchg
adc
sbb
inc
pushf
sub
stc
adc
add
xchg
mov
xchg
xchg
idivb
test
lock
xlat
cmpsb
xchg
gs
pop
push
push
jae
mov
in
orl
push
and
xor
js
jge
add
fucomp
popa
nop
or
bound
and
stos
fisttpll
push
pusha
pop
fucomip
imul
out
dec
sub
dec
jbe
in
aas
dec
pop
mov
cmpsl
push
out
pop
ja
xchg
cltd
out
int
cmpsb
mov
lea
sbb
incl
loope
xor
outsb
outsb
nop
jg
nop
lods
lods
cmpl
xchg
nop
mov
movsl
add
subb
lcall
and
or
jno
mov
xor
lods
loop
mov
dec
push
adc
ss
es
pop
mov
mov
jns
inc
daa
mov
cli
mov
imul
aaa
leave
cli
pop
es
mov
movsb
aad
or
add
movsb
push
hlt
and
push
xchg
loopne
push
xchg
inc
enter
push
pop
xorb
sbb
pushf
mov
push
cld
or
mov
int
push
lds
push
add
imull
mov
dec
inc
or
das
inc
and
lcall
push
pop
loope
mov
sub
fidivl
mov
pusha
jmpw
nop
clc
push
fnstcw
out
mov
and
xor
push
clc
fdivrs
mov
jmp
pop
cs
sarb
loope
mov
pop
sbb
push
add
scas
scas
and
sub
daa
sbb
lret
inc
sub
dec
dec
aaa
jnp
fs
sub
jge
mov
cmp
mov
loopne
xchg
jbe
roll
add
pop
test
fcmovbe
and
fisttpll
mov
lret
jo
adc
sahf
lds
mov
cmp
xchg
pop
mov
out
mov
jnp
nop
mov
clc
mov
inc
and
mov
movsb
popf
mov
xor
mov
mov
mov
popf
daa
cltd
adc
rolb
loop
sti
pop
stos
lcall
sbb
push
fcompl
sbb
outsl
out
adc
dec
cwtl
aad
inc
or
and
inc
comiss
les
sub
inc
cld
lock
std
xchg
push
cmp
and
stc
xor
xor
repnz
movsl
xor
test
in
dec
sub
pop
add
mov
push
sub
sbb
pop
and
pop
fmuls
int3
adc
lahf
sbb
decb
cmc
gs
sbbl
push
les
outsb
daa
cmp
stc
push
mov
mov
or
pop
mov
adc
out
stos
daa
daa
sub
pop
ljmp
insb
push
fadd
daa
dec
cmpsb
subb
ror
xchg
adc
sub
jns
nop
dec
adc
pop
and
fsubl
test
lods
cmp
or
adc
mov
cmp
add
push
es
or
add
push
xor
dec
jle
popf
mov
and
sub
cmp
push
mov
call
jne
enter
push
sbb
add
push
dec
aas
ds
and
xor
cmpsb
mov
xchg
xor
or
data16
dec
test
stos
imul
lahf
adc
sub
push
mov
aad
daa
ljmp
imul
in
xor
add
jl
fs
xor
fwait
jne
mov
xchg
inc
faddl
or
inc
mov
sbb
or
fisubrs
pop
mov
push
aas
and
enter
add
sahf
push
add
fucomi
cmp
stos
dec
les
ljmp
push
jp
andb
out
jecxz
div
jecxz
lock
pusha
aaa
mov
aas
js
movsl
pushf
fnstenv
outsb
sbb
bound
movsl
mov
movl
shll
pop
or
xor
js
dec
dec
cmp
nop
mov
test
xor
out
jnp
pushf
inc
xchg
cmp
fsubs
icebp
xchg
mov
or
push
pop
pop
mov
scas
mov
pop
popf
ds
sbb
jmp
jecxz
inc
outsl
adc
das
xorl
dec
mov
jge
mov
xchg
adc
add
sbb
imul
dec
adc
mov
mov
and
sbb
adc
fbstp
pop
xchg
adc
pushf
fstpt
fwait
mov
xor
adc
pop
sbb
mov
jae
popf
dec
nop
cmp
jmp
nop
or
mov
inc
inc
std
jg
fmuls
imul
mov
push
push
sub
jmp
mov
je
mov
leave
mov
push
fimuls
xor
mov
or
mov
push
inc
mov
mov
dec
loop
or
negl
jb
jecxz
jle
mov
sub
sub
mov
adc
pop
shlb
xchg
or
dec
mov
mov
scas
loop
in
add
les
and
sub
mov
ret
jge
pop
mov
jbe
loopne
and
testb
rclb
cmpl
mov
pavgw
loopne
mov
push
adc
in
scas
inc
jno
ja
jno
cmpsl
test
push
cmp
rclb
repnz
sub
cmp
xor
mov
and
sub
mov
fs
out
lock
ret
and
jnp
cmpsl
add
mov
add
dec
mov
xor
aas
nop
mov
mov
pusha
inc
push
mov
dec
arpl
shl
mov
pushl
dec
and
jb
mov
pop
add
into
mov
loop
xchg
rolb
pusha
sub
inc
and
inc
inc
fcmovnb
xor
add
jp
cmp
xor
into
jne
sbb
cltd
sub
and
jmp
mov
dec
lahf
aam
fists
pop
jle
adc
fcompl
cld
mov
ret
mov
inc
inc
popfw
cmp
pop
or
fdivs
sbb
das
stos
mov
jp
jns
out
mov
dec
or
adc
mov
pop
das
inc
xchg
xchg
stc
ss
out
sbb
unpckhps
scas
push
std
jmp
fs
rcll
testl
dec
mov
and
or
shl
std
bound
fwait
adc
pop
mov
lcall
push
ja
ds
or
sub
aad
xor
data16
ret
jp
imulb
or
mov
or
xchg
hlt
popa
fwait
test
mov
incb
pushf
mov
mov
dec
cld
hlt
sub
add
sbbl
adcb
cmp
mov
imul
les
adc
add
jp
cmp
mov
popf
data16
shlb
or
scas
ss
pop
lahf
sahf
out
insl
add
jmp
lods
popa
fcmovne
inc
fidivrs
inc
and
cmp
jae
aas
jns
int3
inc
adc
xchg
sub
xchg
sti
sub
add
xchg
add
mov
push
testl
addl
shrb
dec
arpl
mov
mov
cltd
cmpsb
mov
cmp
shrb
stos
sub
adc
dec
dec
pop
std
aas
sbb
std
mov
out
in
loope
jnp
test
jno
sar
push
or
das
jg
ret
lret
jb
rcr
out
sbb
inc
pop
stos
rorl
fbld
cmp
imul
jl
add
scas
xchg
ja
xchg
mov
cmpl
cwtl
or
sbb
sbbb
nop
imul
cmp
jns
adc
js
test
push
in
cmp
jns
pop
mov
fcompl
jmp
in
cmpsl
xchg
jl
arpl
add
call
mov
loop
cmpsl
mov
push
xor
pop
push
ret
fsubl
and
dec
outsl
fimuls
popf
orl
xchg
sbb
vunpckhps
fs
cmp
cmpsl
rcrl
pop
imul
lcall
cmp
mov
push
insl
and
push
orl
mov
mov
push
or
in
and
repnz
push
dec
sbb
push
sub
mov
test
int
xor
sbbb
push
mov
je
test
inc
insb
addl
iret
lahf
and
adc
lds
insb
xchg
mov
mov
sbb
jbe
add
unpckhps
insb
mov
sbb
cmp
add
pushf
xor
mov
leave
jbe
fldcw
mov
jnp
loope
and
xchg
xchg
mov
loop
imul
cmpb
or
sub
fisubrl
lods
cli
inc
xor
scas
call
mov
pop
xchg
dec
loopne
xor
mov
dec
js
mov
sub
fs
sbb
lahf
fbld
push
pusha
fsts
sub
and
ret
cmp
or
cmp
xor
repz
jns
cmp
icebp
mov
pop
cmp
jns
sub
and
cmp
jbe
mov
sub
cli
fdivrl
addr16
fidivrl
cli
les
ret
stos
xchg
cs
and
daa
or
rorb
mov
hlt
adc
dec
pop
scas
adc
lods
ds
fsubrs
and
lds
insl
jnp
call
rorl
rcll
fiaddl
clc
stos
movsl
add
sar
imul
data16
inc
jp
mov
or
cmp
out
je
cmp
cli
es
or
dec
call
leave
shrd
enter
push
testl
pop
push
sbb
cli
mov
sti
lret
fimull
xchg
in
int
cmp
mull
inc
mov
pop
pusha
xor
cmp
inc
popf
popf
pop
jl
pop
out
nop
push
mov
xchg
hlt
lea
ret
or
sub
xchg
and
dec
pop
jl
ss
pop
test
inc
xchg
aaa
rcr
test
or
inc
aam
dec
add
dec
ret
push
pop
and
ficomps
call
mov
xlat
loop
in
popa
xorb
push
sbb
movaps
adc
adc
aas
pop
xchg
cltd
or
dec
xchg
adc
pop
dec
lahf
adc
inc
loop
cmp
lock
xchg
sub
cmp
das
fcom
dec
cli
sbb
daa
xlat
jns
mov
jnp
loop
jo
lret
test
testb
je
lret
je
mov
inc
cs
ss
fsubr
xor
scas
and
popf
fcoms
repnz
mov
lea
fldt
mov
js
icebp
rcrl
dec
fistpl
add
mov
movsl
rclb
cmp
mov
mov
inc
and
xor
mov
pop
xchg
int3
ficompl
orb
out
add
adc
stos
push
loopne
test
mov
sbb
add
xchg
enter
call
fisttpl
ret
ret
insl
iret
xchg
fcomps
sbb
loopne
dec
fsubp
mov
mov
jno
lds
fmuls
pusha
push
or
push
hlt
repz
pop
or
fsubrl
xchg
arpl
push
movsl
sahf
or
hlt
pusha
popa
dec
mov
pop
mov
inc
jl
stc
inc
rcrb
icebp
jns,pt
repz
inc
xor
icebp
mov
cli
add
xchg
scas
xor
add
push
shll
push
or
outsl
push
out
shrb
sbb
cmc
fmull
add
sbb
xchg
jns
insl
sarl
daa
pop
dec
daa
sbb
inc
out
adc
rorl
outsb
fs
lods
scas
cld
stc
lods
into
int
daa
aam
and
pusha
xchg
jb
std
repnz
xlat
jno
lea
mov
mov
add
popf
insl
pop
and
fiadds
jmp
std
aam
and
push
repnz
imul
fwait
push
movsb
pop
stos
popa
pop
mov
nop
ljmp
ret
pushw
xor
jecxz
push
mov
aad
inc
or
xchg
dec
scas
xchg
into
adc
cmp
mov
add
sbb
cmp
mov
mov
xor
clc
fisubrl
std
je
pop
xchg
fstpl
add
lret
cmp
movb
sbb
movsb
leave
fs
repnz
xor
pop
dec
es
push
dec
cmpsl
push
pop
stos
mov
jno
mov
mov
and
add
imulb
xchg
xor
gs
xorb
push
xorl
pop
mov
faddl
xor
sbb
daa
pop
mov
pop
ss
aas
hlt
pop
int
inc
inc
aam
xchg
ss
and
movsl
lret
ss
fisubrs
jno
int
push
jmp
in
mov
lret
pushf
out
cmp
mov
jge
or
dec
ffree
pushf
repnz
scas
insb
and
pop
stos
cmpsb
nop
push
loopne
shr
ret
push
sahf
mov
xor
mov
inc
dec
mov
push
add
mov
movsb
outsl
adc
mov
pop
xchg
push
enter
cwtl
cltd
pusha
clc
mov
push
or
adc
outsb
pop
mov
push
jne
icebp
test
mov
cmpsb
or
sub
push
push
xor
sbb
int
jg
cli
mov
push
sti
push
nop
adc
adc
mov
mov
and
jle
jbe
popl
inc
push
add
test
and
test
clc
dec
icebp
dec
push
sub
push
cwtl
pop
add
scas
stos
dec
dec
jb
aaa
lods
jns
jecxz
sub
nop
das
rolb
shrb
clc
in
pop
mov
and
xlat
xor
mov
jae
xchg
test
jecxz
outsl
xchg
clc
pop
fsubrs
out
loop
cmp
lods
test
inc
xchg
and
mov
xchg
loop
rcl
inc
pop
scas
outsb
xor
mov
dec
push
outsl
sbb
fimuls
lret
pop
mov
push
insb
aas
lcall
leave
test
loopw
sahf
cmp
repnz
xchg
and
xor
std
sarb
sahf
xor
cmp
stos
sub
hlt
pop
repnz
insb
in
sub
pop
out
mov
pop
push
push
dec
push
aaa
xor
mov
jge
push
sub
mov
inc
inc
bound
scas
mov
fdivs
jl
and
adc
clc
xor
mov
inc
inc
cmp
push
lods
lahf
shl
popa
push
inc
insb
mov
outsl
fldl
push
mov
addr16
dec
push
mov
ja
mov
pop
jg
or
pop
sub
pop
js
xchg
ljmp
test
push
sbb
push
testl
rol
orb
cld
test
clc
rolb
cmp
adc
push
nop
jp
sbbb
stos
pushf
or
adc
add
xchg
cmpl
int
movsb
icebp
hlt
dec
movsb
repz
jns
jg
inc
add
pop
sarl
mov
mov
jae
popa
pop
mov
vmovsd
push
insb
jle
cltd
xchg
outsb
jle
shlb
sub
inc
cmpsl
mov
lds
xchg
push
sbbb
dec
cmp
pop
pop
mov
leave
xor
fnstcw
int3
pushf
imul
repz
jecxz
repnz
adc
adc
in
jle
in
into
dec
pushf
add
arpl
mov
xor
ficoms
push
dec
sbbl
sub
data16
xor
mov
and
test
cmp
mov
cmpsl
int3
or
xor
cmp
dec
sub
cmp
pop
xor
insl
dec
cmpsb
mov
test
xor
or
add
into
popf
dec
iret
movsl
popf
lods
test
hlt
dec
loope
outsb
dec
gs
hlt
sbb
pusha
int3
push
mov
cmc
lods
cli
inc
push
hlt
pop
pusha
gs
xor
scas
pop
xor
addr16
xor
shl
aam
movsl
lods
jbe
es
leave
push
cld
rolb
push
cmp
jp
out
fldl
sbb
lods
jp
xor
pop
jns
adcb
cli
orl
mov
into
add
mov
popf
loopne
or
into
mov
fs
push
mov
das
std
das
push
add
das
mov
mov
sar
repnz
sbb
out
jle
mov
ret
sub
insl
orl
xchg
adc
xchg
inc
jb
push
shrl
repnz
or
push
push
mov
jge
or
or
dec
insl
imul
or
pop
push
dec
mov
add
lods
mov
dec
add
xor
sbb
or
cmp
and
and
jg
mov
jle
pop
xchg
sbb
int3
mov
dec
or
pop
dec
scas
pop
mov
imull
sbb
lock
popf
xor
aas
jge
mov
add
pop
pushf
sbb
test
bound
adc
or
ss
push
and
sbb
mov
sub
fadds
jmp
mov
insl
cmp
push
xchg
push
arpl
outsl
repz
dec
lods
xor
aam
mov
cmp
mov
mov
ja
mov
mov
sbb
bound
out
push
pop
and
inc
pop
inc
outsb
mov
call
lahf
jl
xchg
aad
mov
stos
into
inc
jbe
test
ljmp
out
cs
es
xchg
mov
movsl
mov
test
sub
or
arpl
cmp
aas
jecxz
pop
xchg
mul
mov
adc
mov
cmp
pop
test
mov
out
cltd
repnz
repnz
jne
mov
scas
sbbb
or
aad
pop
out
int
sbb
mov
jg,pt
inc
push
mov
jle
out
pop
fs
or
or
int
xchg
fs
jae
into
hlt
sub
hlt
mov
in
incb
movsl
rolb
outsb
test
dec
scas
push
mov
sub
or
hlt
loope
sbb
orb
pop
repnz
push
pushf
popa
test
mov
daa
push
pusha
push
mov
xchg
int
pop
lods
outsl
fadd
aad
sarb
jle
mov
push
adc
aas
hlt
dec
jg
inc
stc
shl
mov
xchg
icebp
stc
add
sbb
mul
xor
xor
push
mov
xchg
cmc
js
or
push
gs
jae
out
hlt
movsl
jl
mov
push
insl
mov
xchg
add
jl
sbb
scas
lock
push
adc
int3
inc
fldl
jge
ret
jge
ret
out
mov
push
cli
push
pop
mov
lahf
jno
ds
or
jb
loop
in
sbb
ds
pusha
int
xor
je
pop
xor
jp
inc
mov
insb
or
or
outsb
out
or
out
lea
xchg
jbe
int
mov
xor
test
pop
adc
jp,pt
adc
jne
inc
xchg
test
pushf
aas
cli
insb
dec
outsl
add
push
daa
xor
push
xchg
cmpb
test
pop
xchg
cmp
ret
cmp
lock
seta
test
mov
aam
mov
pop
and
xchg
in
mov
stos
push
sub
add
pop
adc
popa
push
lock
dec
sti
in
andb
lret
lahf
pop
jl
adc
jg
push
jnp
ds
aad
xchg
lcall
js
mov
cltd
dec
nop
inc
push
mov
push
test
in
push
xor
add
xor
mov
cmp
sbb
into
imul
les
xchg
aam
fwait
popf
xor
push
lea
out
jmp
movsl
jecxz
add
inc
mov
and
test
push
movsl
dec
out
mov
bound
jae
mov
sahf
lahf
cmp
fdivs
adc
jno
daa
popa
mov
fldt
sbbb
ret
dec
pop
adc
mov
jne
push
fcompl
mov
and
std
aad
pop
and
add
out
ror
add
hlt
pop
or
out
add
xchg
fdivs
xor
dec
in
in
xchg
add
push
pushf
adc
loope
mov
data16
pop
jnp
bound
dec
int
into
add
popf
hlt
add
sarb
out
arpl
cwtl
pop
ret
das
aad
inc
sti
lea
scas
cmpsl
xchg
repnz
push
enter
stos
mov
xchg
xchg
push
dec
mov
push
loopne
jle
push
clc
xchg
lret
fnstcw
dec
jp
mov
jl
sbb
sub
xchg
int3
pop
xor
pusha
sub
arpl
jb
imul
and
push
dec
ret
enter
jmp
jbe
and
dec
fmull
negl
mov
ja
or
jns
jge
shll
dec
outsb
pop
pop
mov
pop
mov
ret
in
mov
mov
jno
mov
sbb
call
fstl
dec
iret
lahf
inc
jne
addr16
or
mov
xlat
xchg
lock
iret
cmp
stos
pushw
loop
mov
rcrl
test
inc
xchg
jnp
pop
xlat
lods
sbb
inc
inc
das
or
pushf
das
in
int3
hlt
neg
pop
or
test
rol
mov
dec
jbe
rcll
lods
test
aad
cmp
in
out
out
cmpsl
rcrl
bnd
sub
loope
hlt
add
add
scas
pop
call
cmc
cmp
mov
xor
addb
lahf
out
in
ds
adc
xor
xchg
popf
imul
push
inc
mov
xor
mov
jg
mov
and
lcall
enter
xor
ficoms
push
xchg
push
sbb
push
push
in
sub
ljmp
xorb
push
mov
mov
pop
test
sub
mov
push
out
push
sbbb
scas
xchg
stc
sub
fbstp
scas
into
dec
jbe
sub
dec
ds
popa
adc
mov
inc
shrb
ljmp
rorl
jmp
add
dec
aas
ret
mov
cld
mov
or
adc
dec
aad
aas
jmp
in
addr16
pop
cs
mov
pop
adc
fmulp
adc
fldenv
cwtl
mov
xchg
pushf
add
lds
jle
push
mov
mov
popf
add
sarb
leave
cltd
stc
ror
sbb
sti
insl
push
sbb
loope
mov
or
loopne
or
fistpl
sbb
lds
pusha
cmc
insl
sbb
push
iret
shrl
push
xchg
out
cltd
cmp
jae
data16
lret
repz
pop
lret
jle
push
fidivs
mov
dec
pop
jno
xchg
lcall
inc
jmp
jge
lahf
test
pop
mov
mov
fwait
xor
push
lret
insb
xchg
mov
pop
pushaw
and
inc
or
shlb
lcall
daa
int3
xor
mov
jnp
fs
and
rclb
jae
jmp
movsb
dec
pop
mov
xor
insb
mov
daa
clc
lds
mov
insb
push
fistl
xor
jne
jne
push
ljmp
addr16
inc
push
in
les
inc
fucomip
imul
popa
scas
xlat
jmp
xchg
xor
clc
outsb
les
and
imul
or
mov
mov
push
ret
jmp
mov
adc
jg
lds
push
repnz
lock
ljmp
lock
cs
repnz
push
mov
pop
test
lahf
ficomps
mov
mov
andl
adc
mov
and
mov
das
jmp
dec
popf
add
xchg
push
sub
mov
popa
pop
repnz
ret
loopne
movsl
loopne
lcall
and
mov
in
mov
scas
lds
orb
inc
dec
fildl
pop
outsl
mov
sbb
repnz
lods
mov
in
sub
cmpsl
and
sbb
xor
push
jbe
cmpsb
cmpl
imul
insb
cli
sub
pop
dec
cmp
inc
cmp
cmpsl
fdivs
popa
jp
mov
push
jnp
sub
in
mov
ret
arpl
fisubl
jbe
aam
dec
jp
je
jne
cmc
lods
sub
or
and
pop
mov
dec
inc
xchg
loope
cld
add
and
mov
jnp
int3
xchg
test
cmp
xor
inc
imul
cmpsl
les
inc
pop
sti
movsl
hlt
sbb
xchg
in
repnz
out
gs
mov
jne
dec
test
fwait
push
xchg
xor
imul
ret
enter
sub
push
pop
imul
sub
cltd
in
popa
shll
clc
pop
add
aaa
iret
stc
testb
sbb
test
jecxz
and
loopne
adc
sub
adc
movb
pop
sub
jbe
test
push
or
icebp
enter
movsl
sub
mov
popf
sub
int
xchg
stos
insb
mov
mov
xchg
inc
in
je
pop
xor
inc
pop
adc
imul
in
jecxz
pop
pushf
negl
or
xchg
in
arpl
jb
lods
and
cltd
pop
inc
xor
sti
or
sub
jne
mov
in
jge
jecxz
cmp
out
push
mov
push
imul
sbb
out
cmp
clc
mov
lods
loope
mov
int3
pop
inc
dec
lahf
lret
sub
sahf
call
cmp
push
test
sub
xchg
inc
int
sub
sbb
int
out
out
loopne
cs
or
lahf
ficompl
in
jnp
xor
xor
adc
jne
out
inc
stc
pop
je
rcrb
sbb
aas
rol
adc
pop
mov
jp
mov
out
fistl
popf
push
fldt
fistps
arpl
mov
push
and
dec
shlb
enter
mov
lods
mov
shl
mov
repz
sub
xchg
sub
ja
push
popa
inc
ret
dec
pop
jecxz
fstpl
scas
cs
jge
cmc
inc
push
mov
mov
sub
mov
sub
cld
sbb
or
je
lods
sub
out
or
dec
push
movsb
pop
xor
andb
sbb
bound
jnp
lds
xlat
sub
push
sar
les
sbb
mov
lods
divb
add
loopne
jne
aad
jp
mov
pop
dec
fdiv
sub
cmp
sarb
cmp
in
and
rorl
push
lcall
jae
imul
jb
insb
sbb
int
ret
xor
pop
mov
fwait
jecxz
imul
movsl
not
jne
xor
cmc
je
push
dec
popa
popf
dec
jp
cmp
cltd
pop
nop
and
test
fldl
scas
subl
stos
imull
sti
push
sub
or
mov
push
shrb
pslld
pop
in
adc
repnz
fisubs
arpl
or
fnstsw
jp
inc
hlt
pop
cmp
enter
jmp
and
shll
adc
dec
sub
pop
pop
iret
mov
jmp
jg
xor
fdivl
cmp
cmp
or
fwait
mov
mov
xor
jns
mov
mov
xor
popa
pop
xlat
mov
cmp
xchg
scas
and
lret
mov
mov
je
mov
scas
ror
les
sub
pop
mov
pop
scas
sbb
aam
stc
cmpsl
sub
add
lea
arpl
daa
xor
test
and
xor
pop
and
outsb
in
sbb
dec
std
adc
add
lods
mov
jne
roll
sub
xchg
jns
adc
sub
push
repnz
mov
gs
mov
add
xor
dec
cmpsb
insb
cmp
cmp
mov
mov
mov
push
imul
hlt
cmp
in
push
je
icebp
ret
mov
xchg
pop
mov
int3
scas
pop
inc
jnp
cmpl
aas
lret
jns
jbe
xchg
xor
sub
repnz
jge
inc
into
jno
xchg
cmp
fstps
pop
outsb
add
fs
or
adc
sbb
movsb
fsubp
or
and
lods
lods
push
hlt
ret
add
mov
dec
jae
mov
or
mov
imul
int3
mov
out
sbb
mov
xchg
xor
add
fs
jne
cmpsl
pop
inc
dec
movsl
sub
jo
jo
ss
iret
sbb
xor
pop
sub
cmp
aas
imul
outsl
ja
ficomps
xchg
int3
inc
adc
cld
push
je
pop
xchg
out
stc
lahf
movsl
lock
int3
ss
dec
sub
add
arpl
xchg
in
and
dec
je
adc
ret
fmul
add
ficomps
mov
jbe
jle
out
enter
mov
mov
stc
jns
sub
sbb
push
xor
ss
mov
cmc
xchg
pop
jb
loopne
sub
aaa
sbb
jae
xchg
mov
jb
jp
dec
sbb
and
cmp
cmp
adc
mov
out
fwait
dec
sahf
xchg
sahf
and
or
inc
ds
push
pop
jno
dec
imul
aam
lahf
xor
xchg
fnstsw
cld
ss
insb
jle
add
out
sti
outsl
repnz
fstps
mov
pop
mov
add
subb
lds
addl
rolb
pop
push
push
adc
sahf
or
add
das
pop
pop
je
mov
pop
xor
in
pop
cmp
loop
fildll
bnd
je
ret
sbbb
cmp
xor
iret
xchg
mov
inc
xor
shll
std
xchg
sbb
sub
cvttps2pi
mov
fwait
decl
cmpl
stos
sub
cli
std
dec
add
fidivs
in
and
sub
xor
xchg
dec
xchg
adc
sbb
outsl
cwtl
fidivs
jb
mov
cld
pminsw
scas
inc
shl
xor
iret
cld
mov
shlb
sbb
sub
mov
stos
aad
cli
xlat
mov
pop
fistps
lods
sbb
dec
mov
cs
aam
sbb
ljmp
popa
xor
cmp
cs
sub
fdivrl
add
sub
dec
push
push
gs
mov
aas
or
xor
or
push
xchg
jp
insl
and
shl
sub
sarl
enter
push
adc
adc
mov
paddusw
push
iret
testl
mov
or
jg
inc
les
sub
mov
mov
lcall
fimull
divl
adc
push
stc
pop
xlat
mov
mov
daa
xlat
cs
mov
les
push
out
testl
inc
inc
mov
xchg
cmp
call
dec
andb
jae
mov
dec
cmp
jmp
jno
adc
adc
in
outsb
mov
cli
fsubrp
in
mov
inc
dec
add
cmc
sub
mov
jae
mov
xor
push
aam
mov
pop
inc
ret
into
adc
and
cmc
jne
push
shl
mov
dec
add
jns
pushf
jns
lods
push
adc
mov
testl
ret
clc
outsl
xlat
outsl
out
notb
lret
jns
imul
cmpsb
icebp
shrb
lahf
test
jb
int3
pop
fstpl
pop
push
add
js
pop
add
cmp
pusha
andl
out
mov
inc
jnp
repnz
testl
sbb
insl
or
leave
jnp
into
sbb
pop
lods
or
shrl
xor
sub
loopne
fiadds
test
ljmp
enter
inc
arpl
dec
cmpsb
int
scas
jo
mov
scas
jnp
and
mov
mov
jnp
xchg
sbb
jecxz
into
data16
aas
mov
push
inc
jecxz
cltd
lahf
ret
imul
xor
adc
rorl
in
cmp
inc
div
in
xor
in
add
pushf
jecxz
rcr
push
outsl
lds
add
adc
sub
rolb
mov
in
adc
ljmp
mulb
mov
mov
xor
in
cli
push
mov
int
sti
insb
cmp
repnz
sbbb
popa
loope
cs
aad
loope
lret
or
add
ds
stc
insl
lock
sbb
adcb
xor
dec
test
or
sbb
aas
sbb
cmp
lods
xchg
mov
or
mov
mov
push
cmpsl
push
aam
scas
xor
lcall
mov
xor
sbb
ja
push
loop
std
je
pop
mov
jle
leave
inc
mov
movsb
or
gs
xchg
mov
mov
int3
repnz
xor
add
repnz
scas
jo
mulb
sub
and
jns
jno
test
xorl
inc
sti
sbb
mov
sbb
inc
and
cs
stc
outsb
xchg
insb
cmpsb
jecxz
mov
xor
cld
mov
fistl
mov
and
sbb
xchg
addb
test
lret
add
test
mov
mov
pusha
mov
aad
out
sub
fdivl
jge
pop
xchg
push
cmp
or
gs
insl
cs
sub
push
clc
decl
xor
and
sti
sbb
add
mov
add
std
jno
dec
aad
loope
jae
cmc
loop
call
xor
sti
push
fsubs
out
and
adc
mov
fprem
out
lcall
loope
pop
jl
stos
xchg
popa
xchg
pop
stc
xor
jge
roll
mov
pop
sbb
sbb
ret
hlt
lods
cmpsl
sub
push
xchg
lea
mov
inc
shll
mov
xchg
loope
push
cld
jo
and
lret
or
call
or
and
clc
xchg
lahf
jne
adc
imul
mov
movsb
clc
stos
add
aad
sbb
data16
popa
cs
out
sbb
pop
and
cld
adc
gs
mov
xor
inc
ret
stos
fimull
inc
nop
andl
inc
mov
adc
pop
insb
add
and
roll
cld
xchg
insb
mov
cmpsl
in
jb
ret
movsb
testl
dec
lds
addr16
into
hlt
mov
add
lahf
addb
sbb
repz
xor
sti
push
fsubs
stos
add
jnp
shr
nop
cltd
sahf
imulb
out
mov
xchg
ja
movsl
fs
loop,pn
in
xor
and
aam
ret
aaa
jnp
inc
imul
jle
push
loope
stos
sub
mov
in
or
and
fldl
sub
sbb
fwait
push
cli
cmp
and
dec
js
bound
mov
shlb
and
push
xor
popa
rcrb
xchg
mov
mov
inc
pop
push
or
pop
inc
js
fistpl
sub
mov
pop
jo
dec
inc
mov
pop
jne
mov
push
call
inc
sbb
mov
outsl
scas
push
mov
mov
mov
cmp
std
xchg
in
xor
movb
fs
lret
mov
xchg
nop
sbb
or
and
xor
mov
and
sbb
aas
mov
test
repz
jg
stos
mov
push
loopne
push
sub
cmpl
mov
fs
nop
jbe
sbb
fnsave
repnz
dec
cmp
or
jne
je
xor
test
pop
out
push
stos
xor
push
scas
popf
out
push
dec
or
in
mov
dec
lds
adc
ret
lock
mov
mov
cli
xchg
xor
pop
lea
test
rcl
jg
xchg
inc
out
inc
loop
adc
cld
rorl
xchg
sub
ret
adc
fucomip
ja
mov
out
ror
xchg
dec
adc
outsb
pop
ror
clc
lds
xchg
adc
xor
xor
sbb
push
dec
pop
inc
arpl
cmc
or
icebp
jl
rorl
xchg
cmp
into
icebp
notl
sbb
xlat
cld
daa
pushf
mov
pushf
add
stos
or
stos
xor
lret
ret
shl
sahf
or
pop
push
insl
add
in
data16
clc
inc
push
and
out
or
movsb
lods
outsl
push
shrb
pop
daa
insb
xor
enter
in
fcoml
sbb
sar
iret
cmp
test
xchg
arpl
sarl
pop
push
mov
in
call
jl
push
inc
enter
loope
add
xchg
mov
jnp
out
dec
int3
mov
sbb
pusha
mov
popf
into
enter
or
push
cmp
addr16
mov
fwait
test
sbb
pop
mov
push
sbb
jae
and
int3
addl
and
int3
mov
cmpsl
cwtl
ljmp
mov
sub
jb
shl
lcall
inc
mov
mov
or
sub
leave
enter
ds
xchg
mov
int3
mov
int
dec
rcll
lods
aas
sti
cmp
push
loopne
and
xor
mov
pop
xchg
add
lret
xchg
mov
test
inc
ja
pop
hlt
sbb
sar
adc
loop
mov
repnz
mov
xchg
xchg
aad
jecxz
je
movsl
inc
daa
xlat
rep
lret
stos
addl
shl
incl
fsubrl
sbb
clc
enter
and
lret
inc
jecxz
fmuls
aaa
out
int3
je
cmpsb
stos
cs
adc
xor
mov
add
xor
imul
shr
loopne
repz
cmpl
shrb
pop
inc
out
jle
inc
pop
jge
jl
xchg
xor
fs
scas
xor
enter
rclb
cmp
sbb
fdiv
xchg
nop
mov
sarb
loope
mov
mov
aaa
ss
inc
iret
and
mov
jbe
cmp
std
mov
sbb
mov
lret
mov
je
pop
in
cmc
sbb
lahf
add
sbb
push
cmp
xor
loop
pop
adc
repnz
mov
cmp
repnz
fisubrl
dec
sbb
addr16
mov
fistpll
fcompl
push
loop
fwait
ds
dec
out
or
sbb
iret
mov
mov
push
xchg
dec
repz
xor
sti
push
fsubs
es
xor
nop
mov
and
and
mov
rorl
scas
inc
or
sub
orl
sub
xor
jbe
mov
push
das
xchg
les
or
inc
dec
fmul
inc
push
or
pop
lea
incl
sbb
xor
pop
xchg
lds
pop
aam
mov
add
lret
add
xor
inc
xchg
lods
xchg
and
das
cmpsl
lds
mov
xchg
das
mov
adc
add
jno
cltd
inc
pop
xchg
lds
test
adc
lea
sbb
push
dec
test
add
mov
push
pushf
out
pop
in
int
inc
inc
adc
imul
dec
sub
lock
xor
inc
mov
sti
jle
mov
dec
ret
or
leave
or
xchg
divb
pop
pop
stc
pop
sbb
fsubrs
leave
or
aaa
cmp
lea
imul
adc
or
push
ljmp
pop
push
mov
jnp
xor
insb
cmpsb
and
mov
jmp
xchg
popa
int3
in
or
outsl
sbb
test
cmpsl
lods
ljmp
loop
jecxz
xor
das
pop
pop
sahf
mov
out
mull
xor
mov
jae
push
push
cmpsb
push
mov
shll
pop
and
mov
push
adc
mov
mov
out
dec
mov
mov
gs
cmp
test
test
xor
int3
fidivs
mov
lahf
test
or
or
sbb
out
jmp
adc
lret
imul
push
sbb
mov
jle
adc
mov
repnz
cmpsl
outsb
fs
sub
insb
push
xor
insb
adc
sbb
or
mov
mov
pop
sub
pop
fwait
xchg
int3
mov
das
loop
dec
in
in
pop
mov
adc
cltd
mov
dec
in
xor
dec
imul
add
xchg
sub
fcoms
lret
pop
inc
popa
and
gs
lcall
cli
test
mov
xchg
jno
xor
mov
test
pop
cmp
mov
orb
push
in
arpl
lcall
mov
mov
scas
mov
adc
fcoms
push
out
pop
cli
not
pop
sbb
mov
movsb
movsb
pop
push
addr16
inc
cmc
add
push
cwtl
lret
int3
pop
test
repnz
repz
adc
aaa
jo
mov
icebp
jge
push
imul
adc
aad
cmp
stc
lea
pop
dec
test
gs
sbb
je
and
adc
sbb
jo
mov
mov
pop
in
mov
mov
jbe
enter
in
jg
or
popa
outsl
arpl
roll
daa
fidivl
pop
jbe
sub
gs
and
jbe
dec
push
sub
lea
fimuls
addr16
xor
ljmp
push
orb
fwait
adc
pop
sub
jge
mov
into
xor
or
add
repnz
mov
sar
icebp
imul
lea
leave
lods
add
imul
xchg
test
in
bound
inc
bound
test
push
outsb
mov
dec
outsb
nop
into
mov
repz
sub
jmp
call
call
push
imul
ret
int3
call
shll
dec
cmp
enter
mov
test
and
jp
pop
sbb
ljmp
mov
arpl
xor
js
lret
pop
sbb
sub
iret
out
fwait
mov
aam
mov
inc
and
xor
gs
lret
xor
push
movsb
mov
insl
sub
pusha
cmc
repnz
aam
sbb
shrl
lds
ror
pop
inc
xor
pop
cmpsb
xchg
insl
test
pop
or
cmpsb
or
aad
or
mov
adc
push
in
pop
cmp
enter
mov
aad
mov
out
fwait
add
cmp
and
pop
xor
data16
icebp
xorb
sbb
fucomp
pop
cmpsb
in
lods
test
push
push
ja
pop
dec
mov
xchg
gs
idivl
mov
ss
mov
insb
add
sbbl
push
scas
lcall
add
icebp
push
cmpl
cmpsb
jns
mov
lcall
scas
mov
gs
loop
ja
xlat
loope
fwait
clc
add
dec
outsb
or
jbe
xchg
push
outsl
mov
jno
dec
xor
pop
adc
add
in
jnp
cmp
or
push
jp
mov
pop
xchg
sbb
xor
scas
scas
sbb
movsb
ljmp
test
xchg
sahf
sub
add
push
daa
outsb
mov
add
leave
or
cmp
adc
mov
incb
inc
add
xlat
jb
out
mov
or
jbe
pusha
ror
pop
mov
pop
adc
sbb
jmp
adc
sub
imul
adc
xchg
cmpsb
pop
push
adc
fs
cmp
dec
icebp
jne
push
inc
jecxz
xchg
pop
inc
push
stos
in
in
xor
xor
pop
jg
mov
sbb
nop
sar
pop
and
ja
mov
xchg
mov
pop
cs
je
mov
add
imul
loope
stos
rcll
sbb
lcall
xlat
xchg
sbb
push
in
imul
cld
lahf
mov
mov
leave
inc
dec
repz
inc
sbb
and
loop
sbb
mov
mov
mov
push
and
shll
and
inc
jl
inc
fisubs
in
add
divl
jbe
push
movmskps
xchg
fldenv
cmp
cmpsl
xor
test
xor
push
hlt
and
out
repnz
int
xchg
leave
xchg
xchg
imul
roll
in
es
xor
test
movsl
lea
push
push
leave
std
fiaddl
pop
sub
adc
dec
jge
mov
pop
sub
movsl
jbe
and
sub
sbb
push
add
push
bound
push
repnz
xchg
test
add
mov
sub
in
shl
inc
in
outsb
cmp
fildl
out
mov
je
insb
jno
popf
push
jns
pop
xor
xchg
popa
aaa
call
xor
sti
push
fsubs
mov
insb
icebp
imul
xor
ja
es
or
mov
cmp
iret
or
mov
addr16
icebp
pop
mov
ja
sub
lods
jo
cmpsb
xchg
xchg
call
push
movsl
hlt
fldt
push
push
fisubl
sarb
xchg
popa
dec
xor
es
out
aam
ss
les
enter
cmp
rcll
out
sti
jmp
pop
fmuls
cmpsb
out
push
dec
sbb
int3
xlat
out
imull
and
jbe
stos
sahf
push
lcall
push
sub
push
les
icebp
and
jbe
mov
cs
jmp
xor
leave
pop
pop
das
aaa
push
fcomp
sbb
jmp
pop
test
or
sbb
bound
sub
out
xchg
mov
cltd
mov
xlat
das
int3
cmp
icebp
push
enter
jp
stc
insl
loope
and
inc
inc
or
xor
sbb
lcall
das
mov
pop
or
cs
jnp
mov
in
mov
sahf
decb
push
rorl
jno
in
sub
daa
push
pop
jno
in
call
stc
movsb
pop
sbbl
out
sbb
test
and
in
inc
push
jno
outsb
inc
push
loope
hlt
sbb
jmp
sahf
mov
mov
notb
inc
sub
fcompl
and
jno
push
jae
pushf
clc
push
mov
jp
mov
pusha
cmp
shlb
mov
pop
adc
stc
add
lahf
scas
xchg
add
or
lahf
adc
repnz
test
push
jns
cwtl
jae
sub
push
fstl
rorb
movsl
xor
add
dec
mov
repz
inc
daa
mov
pusha
clc
or
sbb
push
xchg
sub
sbb
repnz
and
aad
ret
into
jae
hlt
xorl
sub
daa
and
xchg
sub
rclb
add
jnp
lock
push
pop
cli
or
jnp
lret
andl
cmp
push
js
rcl
sub
jp
cmp
arpl
sub
inc
mov
and
push
fsubr
repnz
dec
cmp
sbb
shrb
inc
lahf
xor
mov
push
lds
dec
cmp
add
in
xchg
sub
mov
outsb
or
xor
push
lods
icebp
cli
ret
test
adc
push
add
fcoml
cmc
popf
sbb
shlb
or
mul
bound
add
sbb
cmp
lods
and
dec
mov
insb
lds
xchg
mov
ss
inc
pop
inc
push
mov
in
loope
data16
xchg
ret
cmp
cltd
outsb
push
js
in
jnp
lea
shlb
xlat
push
or
cmpsb
pop
data16
outsl
dec
adc
insl
xchg
jb
bound
add
xchg
mov
cmp
cmpsb
inc
jg
cmp
cli
xchg
nop
add
idiv
mov
pop
jle
and
lea
fs
lds
mov
js
sub
sub
push
movsb
adc
lret
mov
adc
jecxz
das
inc
imull
call
pop
and
push
stos
push
push
or
int
aad
stc
pop
les
shrl
clc
push
push
jge
jg
aad
cmp
shrl
pop
push
mov
jle
les
sub
mov
ds
xlat
imul
dec
cmp
cli
dec
in
lock
divl
xlat
out
out
jo
daa
ja
pop
dec
jb
ja
sub
fdivl
jbe
or
cmp
add
mov
push
dec
push
push
setle
jo
xchg
ficoms
mov
ss
imul
and
orl
ds
sbb
push
mov
subl
cmpsl
outsb
sahf
inc
mov
xchg
rclb
data16
push
jno
mov
in
xchg
pop
xchg
sub
jge
push
mov
std
or
mov
out
or
mov
push
bound
xchg
cmc
jg
lds
int3
mov
paddd
cmp
jno
and
jns
mov
or
stos
inc
inc
cltd
sub
and
inc
movsb
hlt
ljmp
lret
push
pushl
flds
pop
in
inc
sbb
ljmp
in
lods
mov
cmp
dec
loope
sub
test
jno
inc
sub
inc
les
cmp
xchg
adc
in
dec
out
lds
in
imul
jno
sub
leave
xor
inc
dec
xchg
push
mov
mov
pop
sbb
test
sahf
or
push
test
loopne
insl
dec
in
mov
call
adc
inc
ret
mov
cmp
lods
mov
push
pop
loope
sarb
pusha
pop
sub
in
push
fdivrl
sbb
aad
dec
test
lods
mov
iret
arpl
mov
inc
loop
adc
pop
and
fcomps
cmp
dec
cli
jg
sbb
sub
jecxz
je
adc
and
stos
aad
add
inc
push
in
lcall
sarl
or
aad
imul
pop
loop
fwait
add
pop
nop
dec
jnp
bound
sub
adc
inc
nop
xor
mov
ja
aad
in
add
pop
xchg
sbb
shlb
fwait
push
mov
mov
je
scas
popf
mov
sbb
fcoms
add
sbb
and
mov
xchg
dec
xchg
mov
gs
mov
jecxz
and
cmp
cmpsb
inc
loopne
pushf
cwtl
sub
mov
push
sbb
or
jo
das
mov
xor
push
add
mov
aas
movsb
repz
push
arpl
jge
mov
subl
adc
mov
dec
gs
rcrl
arpl
sbb
rolb
cmpsb
dec
dec
inc
cmp
adc
andl
xor
add
cwtl
adc
adc
cmp
movsb
es
out
fstpt
xor
lods
lahf
test
ficoml
xor
add
sti
cmc
push
push
mov
test
in
add
dec
xorb
push
cmp
push
sub
es
pop
in
mov
negb
jb
ljmp
jo
repnz
push
dec
lea
and
loopne
add
or
and
dec
data16
movsb
ds
stos
sbb
mov
pop
jmp
jae
xor
lea
stos
dec
testl
mov
dec
ret
xor
mov
enter
cltd
in
or
and
push
mov
int
xchg
pop
adc
sub
xchg
ret
cmp
xchg
repnz
sbb
pop
push
dec
insb
stc
add
vmovups
inc
adc
cltd
sub
inc
and
jp
sub
leave
data16
hlt
and
mov
xor
enter
cmp
cmp
movsl
ret
cmp
inc
push
xchg
sbb
bsf
mov
xchg
push
in
xchg
ljmp
mov
push
ljmp
shlb
push
jbe
int3
std
push
and
sbb
push
jecxz
lahf
pop
pushf
aaa
leave
movsl
jmp
sbb
pop
test
imul
ja
adc
arpl
icebp
imul
adc
xchg
jb
cmp
ss
cltd
inc
push
sub
inc
xor
in
stos
push
hlt
or
ja
or
sti
push
stos
or
xchg
movsb
cld
xor
push
scas
mov
inc
icebp
ja
int3
cs
jnp
dec
mov
lret
xor
add
inc
pop
aam
and
sub
idivb
mov
mov
aaa
mov
cmp
dec
xor
imul
outsb
insl
xchg
mov
test
subb
mov
xchg
popf
loopne
push
loopne
xchg
xchg
imul
enter
sbb
mov
int
adc
in
mov
and
lret
clc
repz
mov
adc
loop
inc
cmp
cmp
xor
fdivrl
ss
mov
fstpl
pop
inc
pop
push
pop
mov
ficompl
pop
ds
xor
xchg
inc
and
or
xorl
jbe
repnz
cmpsl
and
pushf
je
mov
or
inc
js
add
clc
or
idivl
inc
pushf
inc
loop
lods
push
pop
or
in
jb
xor
dec
and
sub
in
jo
fsubs
pop
data16
loopne
sub
add
mov
inc
mov
clc
pop
call
aam
sahf
pop
cmp
adc
ss
outsl
cvtdq2ps
je
test
push
or
xchg
stos
cmp
das
repz
sbb
cwtl
xchg
add
or
out
xchg
xor
inc
adc
dec
test
and
repz
xor
add
xchg
je
jno
sub
inc
in
jne
lea
popa
fistpl
std
movsb
incl
repz
cmc
nop
lahf
into
cmc
repz
repnz
gs
xchg
cmpl
jge
xchg
ret
lods
inc
or
ds
sub
stos
cmp
jge
xchg
pop
fs
adc
hlt
fbld
retw
fists
xor
shl
dec
call
dec
sub
xchg
xor
dec
mov
sub
scas
aas
add
xor
cmp
lods
call
push
mov
sbb
insl
lret
inc
add
mov
aas
xchg
mov
xchg
lds
jl
scas
xlat
mov
je
lds
sti
int
stos
lods
je
sahf
xor
lock
out
jbe
mov
subb
jmp
push
test
mov
mov
imul
mov
push
pop
fsub
push
cltd
dec
inc
aas
les
push
out
pusha
js
push
int3
lret
shrl
jl
mov
xor
mov
sbb
or
dec
int3
xchg
pop
in
inc
lcall
push
xor
push
push
scas
mov
add
jg
mov
loopne
test
cmp
pop
mov
ja
in
sub
arpl
sub
sbb
add
dec
lahf
cs
leave
xor
call
sbb
in
adc
cmc
sahf
lcall
repnz
aaa
imul
sahf
push
ret
sbb
in
jl
call
sub
out
dec
dec
mov
stos
cmpsb
stos
and
cmp
sbb
lds
test
rcr
adc
addl
fmuls
or
jl
dec
jp
dec
xchg
out
inc
jmp
and
sahf
dec
shll
mov
or
mov
jne
test
and
inc
pop
clc
jle
int3
push
xchg
xor
inc
and
or
sub
xchg
sbb
xchg
loope
dec
lret
sub
xchg
jnp
pop
add
xor
mov
imulb
lret
or
inc
in
es
cmp
mov
xor
adc
ret
add
cmp
sbb
mov
inc
pop
jg
or
add
mov
loopne
or
xor
pop
pop
sub
cld
jge
xchg
bound
orl
xchg
add
cmpsl
iret
or
or
lds
cmp
in
pop
add
andb
sub
inc
xor
out
xlat
jl
or
push
jg
das
mov
jb
into
lcall
leave
xchg
ds
sub
std
jnp
popa
sti
out
fistps
adc
sar
imul
add
adc
lret
nop
mov
cmpsl
sahf
dec
inc
jbe
div
clc
mov
cmpsl
jae
add
jl
sar
aaa
cmp
mov
push
mov
cld
xlat
in
lahf
push
sub
sbb
shrl
mov
sbb
xlat
jmp
ljmp
or
push
jb
out
je
push
imul
jbe
int3
sub
sub
jge
fistpll
cmc
mov
xchg
in
in
mov
mov
stos
dec
sub
push
cmp
fisttpll
mov
cmp
shlb
stc
sub
clc
xchg
xor
xor
test
in
adc
xchg
dec
stos
fisttpll
sub
jmp
push
mov
in
and
ljmp
mov
ljmp
imul
adc
sub
push
arpl
jl
or
cmpsl
fsubl
cld
or
jbe
popf
shrl
fstps
add
out
jmp
imul
dec
mov
clc
sub
jo
lods
divl
test
push
add
sysexit
cmp
inc
push
lret
push
mov
or
imul
mov
jae
adc
mov
cmc
jne
lds
xchg
and
jb
ds
imul
stos
inc
pop
dec
inc
shll
into
jg
daa
mov
lds
pop
repz
fldenv
arpl
pusha
push
aad
dec
sbb
inc
sub
add
in
daa
in
dec
jle
and
div
xlat
pushf
sbb
lds
test
pop
mov
mov
dec
mov
mov
and
les
pop
mov
xchg
scas
jb
push
push
or
verw
negb
jg
xor
rorb
dec
insb
iret
lret
jle
pavgb
mov
mov
inc
lcall
and
out
outsb
insl
data16
cmp
and
stos
testl
jmp
push
mov
stos
push
pop
cwtl
adc
mov
and
sbb
fwait
pop
stos
xchg
daa
sub
jnp
lods
repz
call
xchg
fldcw
dec
orb
push
inc
xchg
push
addr16
push
imull
out
rorl
test
sahf
cmp
inc
insb
mov
inc
xor
stos
pop
xchg
adc
scas
das
data16
insb
pop
push
xchg
clc
test
stos
jnp
mov
jmp
dec
sti
int
in
jl
shlb
and
add
test
xor
scas
sub
cs
pop
ret
adc
cmp
jecxz
fisttpl
adc
pop
jb
aaa
adc
cwtl
pop
cmp
mulb
ret
leave
dec
out
repz
cwtl
pop
jl
add
out
pop
mov
sbb
cmp
pushf
inc
pop
mov
xchg
imul
fs
insb
xor
cld
and
xchg
push
shrb
sub
mov
lcall
mov
push
adc
inc
movsl
out
mov
inc
pop
cmp
data16
and
xor
lcall
or
mov
pop
bound
cltd
sti
iret
xor
xor
sbb
jle
negb
bound
mov
sub
inc
cmp
pop
lock
stos
aas
stc
insb
pop
cmp
sbb
scas
sbb
push
movsl
ss
sarb
cmp
jmp
push
adc
into
pop
out
aas
mov
mov
repz
pop
ds
mov
mov
inc
imulb
movsl
inc
mov
and
xor
test
mov
test
subb
xor
mov
jp
sub
jb
mov
xor
roll
enter
test
or
adc
pop
pop
cmp
pop
hlt
jl
pop
clc
add
fnstenv
stos
mov
fwait
ret
mov
test
and
cld
pop
pop
jp
or
cmp
insl
and
push
xor
sbb
out
nop
fdivrs
or
sahf
stc
sub
fisubrl
push
jmp
insb
call
adc
inc
repnz
adc
movsl
xor
aad
push
pop
fsubs
ret
jge
into
cwtl
sbb
push
push
in
jp
sahf
call
jns
lcall
push
sti
shrl
pop
or
xchg
xor
mov
jg
push
je
add
sbb
inc
or
mov
mov
xlat
jmp
cltd
popa
nop
pop
int3
and
out
xor
sbb
cmpsl
arpl
in
out
jbe,pt
insb
mov
jle
sbb
inc
hlt
fs
mov
add
xchg
mov
inc
scas
test
adc
add
fistpl
inc
adc
test
mov
hlt
mov
jmp
icebp
sub
push
push
sbb
xor
mov
inc
or
in
xor
mov
incb
pop
nop
mov
mov
movsb
xchg
inc
pop
jb
or
and
jmp
notl
out
sub
adc
in
sbb
xchg
loopne
aad
pop
nop
or
hlt
lods
jp
jnp
or
imul
scas
clc
cs
jns
cmp
std
fldt
fcomps
fst
xor
xor
std
mov
jbe
and
mov
pop
push
jns
rcrl
push
decl
imul
insb
in
cmc
mov
adc
and
incl
dec
mov
sbb
xchg
int3
xchg
imul
imul
into
xor
mov
jne
in
adc
dec
icebp
incl
outsb
mov
jne
arpl
xor
dec
push
ds
in
ret
dec
test
pop
das
push
push
jl
out
das
mov
push
push
mov
stos
mov
loop
leave
rorb
lret
stos
ret
pop
pop
push
out
cmp
push
push
lahf
inc
shl
adc
mov
loopne
pop
stos
out
je
sub
test
xor
xor
testb
inc
cld
inc
mov
or
mov
push
movsb
cmp
mov
mov
aas
aas
stos
dec
int
shl
fwait
jnp
in
mov
xor
inc
push
psubd
cmpsb
cmc
fidivl
inc
jp
divps
xchg
adc
in
push
mov
or
lahf
test
mov
into
ds
sbb
mov
test
inc
pushw
sarb
adc
ret
adc
cmp
das
mov
scas
xchg
jp
sbbl
mov
push
mov
fs
into
mov
in
fcompl
xlat
xor
or
add
push
popf
mov
mov
aaa
sub
andb
inc
and
dec
shl
push
inc
lods
pop
ficompl
fimull
dec
mov
pusha
push
sar
or
xor
imul
es
lods
fadds
sub
mov
pop
fists
int3
and
adc
lfs
and
mov
fcoms
dec
fildl
fwait
lea
pop
shrl
jg
or
pop
icebp
fidivrl
jmp
inc
popa
or
push
sbb
outsb
lock
or
lret
in
jmp
mov
add
inc
sbb
jle
dec
cwtl
cwtl
lcall
cmpsl
pop
aad
pop
fidivrs
mov
sbb
leave
sti
push
rcrb
mov
sub
cmp
sbb
and
add
mov
cs
aaa
mov
aad
mov
sbb
mov
mov
mov
adc
xchg
mov
xchg
into
sub
jl
dec
imul
mov
sub
je
repnz
aad
mov
cmp
ljmp
mov
popf
aad
int
out
mov
jb
fsubl
leave
rcl
mov
nop
cmp
shl
mov
movsl
push
jle
mov
jge
xchg
sbb
test
sbb
xchg
mov
xorb
shll
shl
xchg
xchg
shrl
jle
in
in
adc
mov
cs
fstpt
and
rclb
cmp
fists
stc
leave
shr
jmp
ror
xchg
popa
jp
pop
mov
ud2
push
sub
pop
mov
mov
dec
pop
mov
pop
addr16
mov
push
xchg
roll
scas
stos
gs
cmp
xor
pop
lahf
xchg
mov
or
mov
mov
xor
or
mov
push
mov
xchg
movsl
mov
add
out
jl
push
dec
ds
or
jecxz
ss
int3
scas
movsl
pop
pop
shrl
mov
or
loope
clc
fcoms
sbbb
cld
cltd
push
pushf
push
mov
ds
sub
popa
mov
out
cs
clc
call
jle
mov
push
insl
test
pop
xor
xchg
push
dec
dec
mov
cmp
into
lahf
ljmp
das
cmp
mov
inc
inc
shll
xor
aas
cmpsl
mov
lret
ret
mov
mov
fstl
cmp
or
mov
cmc
xchg
aad
lock
test
sub
stc
jb
mov
je
jl
stc
mov
or
shrl
push
dec
push
push
mov
mul
mov
pop
add
std
xor
mov
pop
jne
cmp
movsl
shl
shll
add
jns
xchg
or
sub
std
ficompl
sti
subl
push
mov
test
xchg
fidivrl
xor
das
mov
ss
sub
cmp
xchg
cmp
lret
test
mov
jno
cmpsl
mov
pop
sbb
xor
fildll
std
jmp
and
mov
add
inc
cmp
jo
inc
xchg
out
cmc
inc
push
jg
push
bndldx
int3
cmpsl
lods
and
xchg
lods
jp
jnp
mov
rorb
jmp
sbb
movsb
lcall
enter
sub
xchg
inc
pop
cmp
cmc
mov
outsl
xlat
lds
mov
jb
xlat
loop
test
jl
push
cmp
ljmp
dec
mov
mov
push
loop
or
sahf
lods
push
ljmp
or
es
je
ret
orl
dec
xchg
pop
mov
fwait
inc
sbb
and
loopne
add
dec
inc
push
mov
in
and
mov
dec
xchg
loop
stc
dec
jno
mov
ficoml
aaa
jl
sbb
dec
xchg
pop
mov
sub
das
rorl
fistpll
fsts
mov
fldt
aam
mov
sbb
sbb
sbb
shlb
and
dec
test
jecxz
and
psubusw
loopne
jecxz
fildll
mov
push
mov
fisttpll
mov
cmp
fwait
mov
cs
cmp
aad
inc
stos
lcall
inc
loopne
in
fwait
add
mov
mov
rcll
xchg
leave
mov
outsb
cs
mov
xchg
push
out
scas
leave
xchg
mov
cld
sbb
sbb
mov
in
add
or
clc
jge
test
int
stos
xor
xor
sbb
mov
pop
sbb
jge
xor
hlt
adc
inc
adc
test
xchg
xor
es
xor
test
xchg
daa
cwtl
xchg
mov
and
push
sbb
mov
pop
enter
clc
scas
insl
cs
and
mov
cmp
mov
stc
ljmp
repz
mov
lods
in
adc
pop
and
sti
aaa
cmp
xor
movsb
pop
jns
dec
movsl
imul
icebp
inc
xchg
push
adc
cltd
adcl
or
dec
adc
popf
outsb
lods
or
sbb
mov
cmpsb
sub
dec
add
push
scas
dec
sbb
fst
mov
jbe
outsb
sbb
mov
outsl
movsb
mov
loope
es
add
mov
mov
jo
ss
push
sahf
sbb
test
lock
outsb
pop
das
pop
adc
das
mov
dec
lods
xchg
jae
leave
sbb
adc
cmp
in
add
xchg
out
in
adcb
loopne
adc
cmpsl
out
sbb
mov
or
push
xchg
xlat
call
stc
ds
fcmovnu
outsl
mov
ljmp
mov
pop
push
inc
pop
in
pusha
stc
mov
outsb
std
sub
popf
les
cmp
shll
sar
adc
mov
sbb
xchg
aam
insl
sbb
add
pop
jnp
xor
push
sbb
or
xchg
or
cli
shr
stc
mull
mov
cmpsl
xor
inc
in
jmp
rcl
mov
rclb
call
scas
mov
adcb
or
sbb
daa
call
jmp
addr16
add
nop
aad
push
xor
stc
into
and
or
inc
cwtl
dec
lret
adc
mov
clc
xchg
imul
sahf
cld
cmp
js
fnstcw
movsb
cmc
pop
out
adc
sub
mov
push
push
or
loop
dec
shll
bound
repnz
mov
repz
cmp
addr16
mov
inc
mov
movsb
js
fwait
cmp
inc
push
push
or
daa
imul
xor
mulb
stos
dec
fyl2x
and
mov
sahf
es
sub
icebp
adc
mov
add
jns
xchg
pop
sti
enter
repnz
lock
insl
lea
call
ss
sbb
fstps
lret
or
mov
or
xchg
jmp
adc
in
push
les
jne
popf
mov
pop
icebp
jbe
or
daa
fs
cmp
mov
and
jge
out
jmp
imul
arpl
dec
inc
es
mov
cs
jmp
aaa
adc
rep
mov
cld
cmc
push
rcrb
enter
push
and
mov
enter
pop
movsl
and
jae
ds
jge
shll
addb
movq
xor
pop
lcall
mov
inc
cmp
loope
leave
mov
and
loop
dec
jle
stos
les
and
adc
jecxz
ss
gs
rcrl
jge
lahf
pop
or
rorb
pop
in
lahf
clc
pop
jle
lret
push
data16
cmp
mov
push
pop
cmp
mov
popa
addl
mov
notl
repnz
in
mov
rolb
and
dec
lcall
cmpsl
sti
cmpsb
xlat
inc
xchg
int
push
mov
scas
mov
push
daa
fisubl
insl
cmovnp
insb
and
jno
lds
mov
add
fidivrs
or
sub
dec
or
ficompl
leave
hlt
loope
xchg
mov
mov
sti
mov
lock
mov
pop
inc
jbe
jp
subl
out
sub
cld
pop
mov
xor
dec
dec
nop
mov
es
addl
fcomi
cmp
adc
mov
les
push
sbb
aad
shlb
mov
lahf
and
xor
std
jo
inc
loope
push
mov
jno
sub
and
pop
and
insb
cmp
or
pop
add
mov
jno
inc
push
rcr
add
orl
pop
cmpb
mov
mov
mov
ret
or
add
push
mov
mov
inc
xor
add
cmp
fs
xchg
bound
out
mov
call
mov
cmp
test
in
mov
dec
lods
xor
mov
out
jmp
stos
js
sbb
cmpsb
sti
lods
sbb
popa
pop
shrd
or
mov
sub
push
cmp
xorb
out
rcll
fs
arpl
xor
or
xor
sbb
sahf
imul
mov
incl
mov
or
out
fadds
out
dec
xchg
gs
stc
fldcw
mov
adc
test
add
inc
sbb
daa
sub
pop
sbb
movsl
pop
jl
inc
sub
sbb
movsl
aad
pop
add
sub
sbb
enter
adc
cmp
std
xchg
into
imul
fsubrs
jecxz
test
mov
sbb
lret
sbb
movsb
sbb
xchg
cld
or
pop
in
mov
xchg
std
push
sbb
cli
addb
sub
test
and
cli
push
mov
sub
out
pop
jp
cmp
out
or
mov
les
fsubr
dec
xchg
fstpt
orb
cmovb
sub
mov
lods
xchg
into
cli
mov
sarl
push
fisubrl
mov
mov
pop
daa
inc
insb
jmp
cs
add
push
cld
mov
push
or
mov
je
push
popa
add
xor
dec
cmp
jnp
outsl
push
popa
push
out
push
enter
push
popa
pop
xchg
inc
xchg
repz
jp
aad
imul
xchg
sub
xchg
pop
stc
xchg
push
outsb
jbe
aad
sbb
jmp
jmp
cld
sub
imul
test
jnp
frstpm(287
popf
aaa
aaa
xchg
jp
adc
icebp
sahf
je
pop
dec
pop
fsubr
mov
mov
adc
leave
icebp
and
scas
test
inc
hlt
cmp
fdivs
incl
jns
test
test
add
out
daa
adc
ret
inc
cmp
sub
test
jne
dec
adc
cmp
shrl
inc
push
cmpsl
cmc
xor
cmp
cli
xchg
xchg
or
movsb
add
stc
orb
sahf
xchg
pop
aas
imul
cmp
mov
and
shll
lods
in
mov
push
push
insb
fldl
pop
push
pop
pop
jp
push
or
aam
add
pop
push
lods
and
in
lods
xchg
xlat
sbbl
stos
xchg
cwtl
ds
in
lods
ret
dec
jb
in
adc
mov
jge
mov
dec
sbb
cmp
inc
in
push
pushf
sahf
pop
adc
xchg
pushf
push
ds
pushf
xor
xlat
fbstp
jbe
or
das
cmp
nop
jmp
insb
and
inc
das
cmc
xlat
imul
ds
jno
push
and
icebp
call
mov
xor
sarb
push
sti
inc
xchg
push
pop
cltd
ss
mov
repz
addr16
fdivs
and
loop
or
jmp
xor
arpl
jmp
imul
out
push
call
jecxz
mov
push
scas
lods
arpl
fistpll
push
pop
dec
inc
movsl
div
jbe
push
push
hlt
sbb
fcompl
rclb
aam
lock
pusha
inc
jnp
adc
dec
mov
aaa
dec
fnstcw
and
mov
inc
lcall
in
imul
addb
int
popf
dec
pop
or
xor
or
jns
or
cmp
jo
and
and
fistl
iret
cmp
pop
nop
outsl
test
dec
int
leave
addr16
lea
movsl
arpl
lcall
pop
jae
shlb
loope
sbb
ror
ja
inc
add
mov
adc
dec
ds
jmp
push
sbb
adc
adc
loopne
jne
inc
sbb
cmp
mov
cmp
add
mov
cmp
pushf
repnz
dec
cmp
arpl
xorl
cmpsl
sub
and
into
sub
jne
stos
cmp
xchg
ss
mov
imul
cmc
popf
add
pop
mov
xchg
cli
inc
mov
add
pushf
sub
mov
mov
ja
pop
test
sub
push
movsl
imul
lods
adc
jl
xor
xchg
sbb
testb
pop
in
xor
or
dec
push
inc
shr
stos
rorl
and
jp
add
loopne
in
scas
movl
push
cmp
aaa
adc
mov
adc
ja
ficoms
out
add
cmp
int
mov
pop
adc
or
icebp
add
fwait
pop
and
mov
and
movsb
pop
mov
pop
or
xchg
inc
push
add
imul
pop
dec
outsb
or
scas
sub
out
stos
mov
out
jb
imul
insb
cld
cltd
cmp
movsl
hlt
lds
xor
repnz
stc
adc
xor
xchg
stos
ljmp
int
repz
mov
and
jae
addr16
shl
jno
mov
xor
loop
sbb
pusha
rcrb
addl
dec
lods
sub
imul
cmp
mov
mov
jbe
pop
jge,pt
fdivl
xchg
cmp
cmp
mov
fidivl
pop
xor
mov
inc
xlat
mov
ja
pop
fld
stc
cmpsl
xor
cmp
ret
lahf
inc
lods
dec
jmp
xlat
test
sub
jnp
scas
mov
es
sub
mov
gs
jge
push
dec
clc
xorb
gs
push
pop
dec
push
pushf
daa
orl
xchg
mov
lea
mov
in
mov
inc
jno
mov
jo
jmp
adc
cmp
cmpsl
je
lock
jl
test
add
dec
pop
fsts
shlb
push
sarb
xchg
nop
pusha
or
pop
cmovno
push
fcmovu
and
mov
out
add
jecxz
fdivrl
sbb
aaa
cli
js
lock
out
gs
aad
xchg
insl
adcb
and
xor
int
out
aas
out
xlat
pusha
inc
xchg
imul
add
js
push
push
xchg
pop
js
xchg
add
inc
lcall
mov
or
inc
cmpb
mov
lock
aad
pop
cli
and
sbbl
jbe
les
dec
xchg
insb
ds
cwtl
into
sti
sbb
imul
adc
pop
fiaddl
in
add
dec
clc
sub
adc
pop
scas
mov
mov
gs
cmpsb
adc
pop
add
push
mov
xchg
push
mov
daa
in
or
sar
and
adc
aaa
pop
les
xor
cmpl
jg
sub
push
loope
cmpsb
mov
push
mov
push
in
mov
adc
icebp
jmp
pop
pop
int
std
stc
push
push
ret
mov
push
leave
or
fisubrl
inc
ljmp
push
ljmp
int3
xchg
xor
pop
test
mov
xchg
gs
xchg
jmp
popa
or
lahf
clc
stos
jb
scas
out
jb
mov
jae
push
out
jle
sar
push
or
test
popf
int3
add
pop
movsl
imul
sar
repz
popf
fistpl
dec
aas
cmp
mov
lret
mov
jns
out
mov
in
and
inc
cwtl
jno
popf
jnp
stos
outsl
cli
and
test
jae
fcompl
xor
inc
sub
ss
out
lods
pop
mov
cmp
jne
in
roll
or
jg
das
mov
outsl
pop
mov
inc
movsl
pop
stos
lret
sub
push
pop
push
pop
mov
pop
jb
imulb
aas
xchg
jecxz
add
push
and
or
or
xor
cmp
cwtl
xor
out
dec
les
push
out
fcoml
push
inc
xor
or
xchg
aam
ljmp
stc
pop
push
ljmp
lods
xor
dec
sbb
dec
cmc
xor
test
fstpl
bound
mov
push
ljmp
fsubrl
pop
push
movsb
cmp
insl
into
aaa
or
inc
mov
in
pusha
push
mov
dec
ret
cld
sub
mov
roll
mov
bound
call
add
sbb
insb
aam
mov
inc
hlt
pop
sub
add
inc
xchg
xor
outsl
insb
xor
jb
js
add
and
pop
mov
je
dec
push
push
sar
xorb
inc
dec
in
les
pop
inc
jl
pop
mov
jnp
cmpsb
sbb
clc
shll
stc
cmp
out
jp
pop
movsb
dec
outsb
mov
xchg
outsb
or
dec
subb
pop
outsb
jmp
int
or
fucom
mov
dec
dec
into
lret
adc
insb
pop
movsb
xchg
push
shrb
sbb
and
push
das
push
cltd
loop
inc
jae
mov
in
or
in
and
jecxz
mov
idivb
sbb
cli
jno
inc
push
push
in
adc
jo
shll
imul
xor
cmp
mov
in
leave
jae
sbb
sbb
and
pop
adc
fstpl
mov
mov
sbb
jne
pop
xchg
inc
movl
jae
mov
test
cmp
hlt
pop
lock
push
sbb
popf
fidivrs
and
jg
lock
mov
in
pop
add
gs
jo
jmp
in
adc
lret
add
bound
xchg
sub
and
mov
in
rcrl
shl
jbe
push
out
sti
cltd
out
cwtl
mov
mov
inc
in
sar
js
inc
sub
notl
mov
mov
sbb
mov
stc
adc
sub
lea
dec
push
jp
mov
mov
add
cmp
shr
int
mov
test
dec
icebp
fsubr
xchg
rcll
and
out
sub
sub
pop
jg
inc
incb
std
ds
minps
xor
sbb
lret
fbstp
fcmovbe
inc
iret
dec
and
xor
dec
sbb
fstps
inc
push
popa
fisttpll
mov
xor
or
dec
icebp
sub
dec
call
mov
fs
shl
pushf
push
ljmp
shl
fs
xor
addr16
subb
sarb
sbb
daa
sub
cmp
mov
pop
out
push
das
add
bndstx
dec
sub
mov
or
xchg
popa
fs
pop
ljmp
adc
jecxz
cld
aam
mov
fcomps
inc
stos
movsb
sub
fidivs
xchg
out
iret
nop
mov
push
push
add
push
pop
js
push
out
xchg
pop
movsb
cmc
stos
rcll
repz
xor
adc
stos
and
lock
roll
jo
negl
or
stc
or
ss
jle
cltd
xchg
lahf
leave
es
movsl
and
push
imul
xchg
aam
push
adc
inc
iret
dec
mov
fimuls
fistl
lahf
cmp
sub
sbb
add
push
push
test
lea
in
and
jbe
xor
pop
js
push
mov
or
scas
cmp
sti
nop
test
popa
dec
lds
pop
lcall
adc
in
mov
scas
lret
mov
dec
sahf
outsl
xchg
push
adc
repz
jo
nop
mov
pop
jo
in
call
mov
stos
pop
and
sbb
pop
adc
fcoms
aaa
nop
hlt
inc
addl
ror
pop
lods
insw
aam
add
rcrb
dec
push
daa
adc
cs
sbb
fnstsw
sub
mov
mov
dec
mov
push
arpl
add
lcall
mov
or
xchg
cmp
mov
xchg
mov
push
sub
push
pop
ja
repnz
push
shlb
xor
jno
mov
scas
scas
mov
sub
scas
dec
fcmovnbe
shl
popw
pushf
test
cli
mov
int3
inc
add
ja
and
adcb
popf
bound
shrl
cs
xchg
cli
mov
stos
add
insb
jp
xchg
xlat
ja
jbe
aam
xor
scas
mov
mov
jnp
mov
hlt
test
add
dec
cmc
mov
mov
sbb
mov
or
nop
and
movsb
imul
inc
jg
std
cmp
outsl
enter
aad
mov
leave
inc
cmp
xchg
shrb
into
and
outsb
test
inc
pop
aaa
jle
push
or
sub
add
addr16
test
sbb
es
mov
mov
in
mov
xchg
ds
jbe
sub
pop
jno
pop
mov
outsb
lret
sbb
adc
and
cmp
das
out
and
mov
lock
pop
mov
insl
fisubl
mov
mov
repnz
push
int3
lret
pop
sbb
test
cmp
pop
adc
add
xlat
mov
dec
mov
jecxz
stc
inc
icebp
ja
in
imul
and
xor
fimull
cli
imul
arpl
aad
rorb
popa
inc
test
bound
dec
lea
and
mov
outsb
sbb
jp
sbb
xchg
je
xchg
repz
jbe
jo,pt
loopne
sahf
jmp
sub
pop
add
mov
jmp
lods
sbb
mov
hlt
mov
push
xor
insl
pop
iret
and
data16
and
sub
or
mov
lea
sbb
and
push
add
jmp
push
xchg
cmpsl
lret
and
dec
xchg
sub
and
xchg
mov
push
mov
push
inc
cli
add
stc
movsl
mov
es
daa
sbb
call
push
mov
cmp
inc
bound
sbb
dec
mov
pop
pop
sbb
jne
cmp
jne
ret
repnz
ficoml
sarb
jp
js
xor
gs
fs
testb
ds
fdivrl
outsl
xchg
std
xchg
mov
jecxz
cmp
add
sahf
or
pop
push
faddl
gs
bswap
lret
pop
jae
in
orl
cmpsb
lret
jg
and
aaa
and
sbb
inc
mov
xor
sbb
out
mov
xchg
cmp
push
mov
push
cmp
js
lds
fisttps
mov
das
mov
or
sub
xchg
js
fistpll
scas
mov
stos
mov
scas
sub
dec
push
cmp
add
mov
mov
sarl
or
in
ss
jne
push
rclb
sub
xor
ds
xchg
mov
or
adc
fadds
jg
pushf
fsubrs
repz
cmp
in
adc
dec
outsl
sub
inc
rep
mov
xor
xchg
iret
enter
push
adc
adc
xor
ss
mov
jecxz
out
sbb
fcoml
and
xor
insb
xor
dec
dec
cmp
or
and
loop
pop
shll
pop
mov
pop
add
adc
or
testb
sbb
mov
jecxz
test
lret
or
pmaxsw
pop
push
push
xchg
repz
data16
add
add
add
cwtl
xchg
fs
push
jmp
or
pop
sub
jmp
call
jmp
xor
pop
inc
repz
subb
shlb
addl
jmp
test
mov
and
dec
les
int3
imul
jo
add
add
jmp
cmp
add
jp
jecxz
dec
add
lret
dec
add
lret
dec
add
in
lods
and
dec
ret
mov
sbb
sub
imul
data16
imul
add
add
push
pop
int
and
and
push
push
addl
call
call
popa
jmp
or
and
pusha
mov
jmp
or
add
xor
xchg
mov
mov
add
test
decl
jmp
call
push
popa
data16
imul
outsb
jae
jb
inc
gs
outsl
and
cmp
xor
xor
jmp
aad
shll
iret
hlt
fimuls
jae
jns
push
popa
data16
imul
add
and
pop
cmp
aaa
rolb
mov
iret
stos
pop
pop
into
pop
cmp
jno
hlt
out
int3
pop
xor
cmpw
jmp
outsl
sti
imul
or
mov
inc
mov
lcall
das
out
fsubs
cmp
je
jmp
adc
sub
mov
jae
xchg
inc
fimuls
dec
lret
or
inc
sbb
add
arpl
call
inc
and
popf
in
xchg
shlb
arpl
popa
loope
adc
xor
fstpt
cmp
mov
rorl
mov
test
incl
add
jo
decl
jbe
test
jge
mov
into
push
sbb
cli
push
fisttpll
out
push
test
