cs
incl
add
add
inc
outsl
outsl
insb
gs
outsb
add
add
fsubr
incl
gs
jb
lea
sub
add
jns
gs
jmp
mov
inc
adc
push
push
je
imul
in
pop
and
add
inc
das
lret
cmpsb
imul
idiv
outsl
xchg
cs
pop
push
dec
bound
arpl
xor
add
mov
pop
orl
pop
and
xor
and
inc
xor
and
and
xchg
orl
add
rcrl
in
leave
clc
shl
shl
in
enter
inc
shr
in
dec
push
xor
rclb
loopne
fs
xchg
shll
mov
rcll
les
adc
in
lcall
sub
inc
and
add
mov
and
mov
sbb
arpl
in
aam
rcl
int3
ror
and
dec
push
rol
sarl
push
mov
add
push
outsb
lcall
test
jne
xor
pop
mov
mov
pop
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
push
sub
add
push
mov
mov
dec
cld
test
fstpt
rorb
mov
mov
add
xor
fidivs
add
or
jge
fildl
adc
ret
inc
push
push
push
mov
mov
adc
mov
mov
mov
imul
mov
or
ret
adc
test
stc
mov
add
add
jmp
add
pcmpeqw
das
push
mov
cmp
jne
mov
adc
test
add
pop
pop
pop
xchg
fdivrp
fnsave
mov
dec
cmp
jb
mov
add
call
addr16
bound
jne
mov
in
pusha
or
cmpl
dec
popa
jmp
sub
mov
sti
mov
add
cs
sub
jmp
mov
inc
cld
mov
or
jnp
stc
mov
sub
mov
pushf
in
sub
jmp
or
fistps
cmp
jne
or
mov
mov
orl
jge
mov
incl
cmpsb
out
decl
push
push
mov
int3
mov
mov
test
je
mov
mov
mov
and
add
aam
add
testl
add
push
dec
xchg
sbb
push
push
jne
js
outsl
mov
add
dec
cmpl
jbe
or
in
mov
fmull
or
add
push
insl
mov
fisubl
mov
add
mov
sbb
dec
jmp
bnd
out
ja
mov
add
insl
in
fnstsw
sbb
cmp
mov
cmp
je
test
pop
out
int
or
add
dec
outsb
sti
sti
filds
mov
add
or
outsl
imul
sbb
mov
jae
dec
sub
std
pop
sbb
daa
hlt
mov
rorb
lock
mov
add
ret
pop
loop
sbb
inc
sub
mov
into
cmp
pop
sbb
nop
jbe
mov
cmp
cs
add
adc
in
jl
sub
push
push
ror
jmp
cmp
pop
arpl
push
mov
mov
mov
or
outsb
and
insl
xchg
enter
inc
test
notb
mov
out
jae
std
sbbb
cwtl
insb
addb
in
popa
add
and
mov
clc
mov
aas
xchg
rorl
jns
jmp
cmp
jg
and
pop
cmp
pop
push
add
mov
cmpsb
inc
sbb
xor
jmp
add
xlat
in
pop
pushf
cmpl
movsl
adc
push
adc
popa
shrb
jl
movlps
jmp
xchg
add
push
js
push
cmp
add
lods
int
frstor
fldcw
out
stos
push
pop
add
add
aas
xchg
jbe
or
enter
mov
mov
jl
mov
mov
fstpl
stos
jmp
lahf
inc
sbb
and
xor
test
fcomp
cmp
dec
jmp
imul
pop
push
cmp
dec
sbb
xlat
cmp
pusha
fistpl
dec
and
inc
inc
es
dec
or
jo
inc
mov
dec
jg
and
fsubs
mov
les
pushl
out
cmp
jae
mov
in
jo
in
sub
inc
add
mov
mov
ret
mov
lcall
adc
cmc
adc
or
icebp
cmp
sbb
insl
jmp
pop
lea
inc
sbb
in
mov
mov
push
cmpb
leave
lcall
mov
js
pop
or
push
outsl
outsl
ja
sbb
cmpl
mov
jle
xor
mov
fcoms
mov
in
mov
adc
div
idivb
lahf
pop
pop
pop
mov
push
mov
fbld
cltd
in
pop
js
sti
sub
or
test
add
imul
or
sbb
cmc
mov
adc
xchg
mov
out
and
or
mov
mov
imul
pop
xor
inc
dec
jbe
jmp
xchg
pop
fists
add
les
adcb
stc
pusha
mov
jle
jg
mov
cmp
add
sar
aam
mov
jmp
push
push
outsl
scas
sub
hlt
mov
js
dec
in
add
les
ret
jmp
dec
in
shll
jnp
mov
or
repz
out
js
cwtl
test
ret
mov
sub
mov
sbb
mov
jl
into
sbb
mov
mov
mov
out
insl
sub
mov
or
incl
testl
push
loop
jecxz
or
mul
in
add
ss
push
or
and
rolb
rcrl
ret
incb
inc
sbb
or
pop
loope
add
mov
hlt
ficoml
sub
xor
test
int3
loope
add
xchg
in
inc
cmpsb
jb
cmp
sbb
xor
add
push
arpl
jnp
and
add
and
sti
add
add
adc
mov
jnp
xor
adc
adc
sub
scas
or
inc
test
and
out
mov
andb
std
lea
sub
jg
clc
sub
lcall
fldl
add
inc
aaa
divb
adc
xlat
decb
mov
test
fimull
push
push
cld
add
divb
lea
rcrb
or
ret
test
mov
xchg
add
dec
cmp
mov
pop
push
add
sub
jo
es
insl
aaa
mov
xchg
arpl
rcll
or
pop
mov
pop
sbb
inc
or
test
pop
push
sub
cmp
or
pop
or
test
pop
mov
ds
roll
ss
inc
aaa
daa
sub
or
or
pop
jmp
mov
adc
mov
iret
cmp
push
push
and
loope
orb
movsl
mov
dec
or
fldenv
or
push
push
clc
scas
lock
cmp
xor
inc
popa
mov
repz
dec
push
mov
lods
push
xchg
adc
out
loope
add
jo
subl
xorl
adc
sahf
rcll
pop
in
lock
push
dec
dec
mov
xchg
push
mov
dec
and
fsubrs
ret
dec
mov
repnz
pop
cltd
ljmp
clc
add
das
inc
pop
rclb
or
xor
or
mov
fidivrs
jno
ds
mov
or
loope
pop
jg
pop
inc
xor
das
fcoml
pop
je
pop
jmp
adc
mov
push
push
jne
or
hlt
pop
mov
movq
jne
movsb
sub
jge
adc
sbb
or
add
add
jge
sahf
and
dec
hlt
push
sub
adc
roll
xchg
mov
insb
mov
cmp
lods
sbb
sbb
dec
pop
jmp
and
outsb
sub
add
or
xor
jge
aad
or
test
inc
hlt
and
and
inc
gs
add
inc
xor
adc
xchg
in
mov
ret
test
popa
das
jl
xor
scas
inc
push
shlb
sub
lea
xor
mov
mov
mov
test
pop
or
add
orb
fadds
sbb
pop
sbb
adc
loope
sbb
pop
pop
or
add
xor
insb
rcll
mov
xchg
xchg
test
int
sub
push
inc
cmp
xchg
pushf
je
pop
jne
testl
ss
lcall
clc
mov
test
punpckhbw
ror
or
insl
decl
dec
adc
mov
setbe
push
inc
mov
pop
or
or
out
or
imul
lcall
roll
mov
add
cmp
pusha
ret
test
sbb
adc
mov
pusha
adc
mov
add
loopne
xchg
std
sti
or
orl
jmp
outsb
pop
mov
add
jl
or
or
push
ret
rorl
popf
nop
sub
sbb
enter
iret
shrl
mov
out
mov
mov
sub
jge
test
jno
cmp
clc
mov
adc
rcll
stos
or
into
xor
or
or
cmp
add
sbb
xchg
and
push
sub
testb
adc
or
add
push
test
mov
test
fnstenv
push
push
pop
xor
push
or
adc
dec
in
pusha
addr16
cmp
jl
in
jbe
out
int
or
sbb
mov
add
or
ss
add
fstps
and
aam
fbstp
or
add
or
jge
lods
popf
fwait
push
ret
jno
test
scas
fs
fadd
rorb
dec
shl
cs
stos
pop
in
add
push
cmp
xchg
jmp
andb
fcom
jne
add
test
ret
or
pop
pop
mov
sbb
stos
jg
add
sbb
jp
pop
add
dec
popf
adc
pop
fdivr
dec
fiaddl
pop
movsb
ss
ret
arpl
push
inc
push
insl
push
jge
sbb
adc
xchg
and
mov
sbb
cmp
fs
inc
and
push
cmp
adc
call
or
push
xor
xor
pop
in
je
bound
inc
je
mov
testb
stc
leave
je
xchg
sbb
enter
pop
cmp
mov
xor
mov
ret
sub
sbb
testb
jmp
add
adc
cltd
outsl
mov
jns
out
jg
mov
pop
jecxz
cmp
outsb
stc
cmp
or
aas
insl
lret
or
mov
cmp
iret
jge
sbb
mov
mov
and
sbb
mov
fsubrs
in
pop
push
je
push
push
push
cmp
jne
and
outsb
jnp
rclb
sub
add
pop
stos
pop
rcrb
sub
push
scas
nop
or
cmp
pop
lahf
sub
and
fsubs
ss
popl
mov
mov
or
divl
je
nop
call
mov
mov
and
rep
mov
je
cld
lea
fistpl
jle
adc
sbb
add
pop
jecxz
ljmp
jb
cmp
ja
sub
dec
sub
fucomip
ret
jnp
pop
pop
xlat
sbb
push
push
cli
jp
mov
daa
fdivrl
mov
rcrb
sub
outsl
dec
data16
add
shll
pop
loope
jle
cmpsl
ret
cmp
adc
test
sub
addr16
out
shrl
pop
shll
sbb
pop
and
fnstcw
cwtl
jecxz
negb
cmp
add
and
or
mov
lahf
push
mov
and
dec
mov
sbb
dec
je
dec
rcr
jo
enter
outsl
sub
notl
into
shr
es
mov
cmp
scas
icebp
fnstenv
dec
ja
mov
or
fsin
or
or
loop
push
or
aaa
sub
pop
dec
push
mov
cmp
jne
sub
in
jg
mov
cmp
jne
or
add
fldt
pop
pop
cmp
cmp
jne
shr
rorl
sub
jmp
or
cld
ret
in
lret
mov
shl
add
nop
or
stos
mov
std
mov
stos
pop
out
fldt
or
test
or
jo
xor
or
loop
mov
mov
rcrb
mov
jle
xor
div
cltd
xor
icebp
neg
cli
mov
jmp
mov
inc
mov
pop
ljmp
sub
jle
dec
pushl
outsl
insb
mov
mov
inc
dec
jne
daa
sbb
mov
push
sbb
jl
fildll
imul
int3
add
push
inc
repnz
sbb
and
add
sub
je
pop
lret
lret
iret
and
je
pop
je
xor
daa
adc
das
je
jge
in
pop
add
adc
ja
cmp
ja
lea
add
fsubrs
dec
out
int
imul
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
add
sub
das
dec
jbe
pop
adc
test
add
push
leave
push
add
aad
test
pop
xor
mov
mov
and
inc
mov
jle
out
fsub
cmpb
lcall
adc
lea
pop
lea
fldt
call
in
add
or
lds
add
popa
xlat
mov
pop
sub
push
jge
jge
mov
stc
xor
sar
in
stc
jmp
fstp
fldt
inc
mov
or
out
pop
and
sub
inc
jns
xchg
add
or
jns
pop
push
ret
mov
adc
cld
in
and
sbb
add
and
inc
mov
dec
cmp
adc
out
xchg
sub
stc
fbstp
test
mov
lds
mov
mov
cmp
fidivrs
call
mov
push
pop
bound
cmpb
xlat
fadds
outsb
xor
xchg
mov
push
or
push
push
int3
into
sbb
rorl
lcall
test
popa
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
incl
or
pop
inc
in
mov
mov
addr16
leave
repnz
bound
jmp
addl
inc
sahf
mov
sub
inc
aad
iret
decl
js
inc
call
sub
out
cmp
or
mov
pop
out
sub
jmp
imul
divl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
incl
adc
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
incl
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
decl
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
and
push
movsl
mov
popa
stos
sbb
addr16
repz
loopne
mov
subb
and
and
outsb
bound
xor
rclb
and
dec
lahf
in
sbb
cmp
jne
push
or
pop
stc
or
andb
jle
pop
jg
movzwl
mov
inc
push
je
pusha
ret
jl
decb
iret
sub
and
hlt
mov
mov
mov
clc
add
loop
dec
lods
mov
push
mov
adc
mov
shl
push
push
clc
sub
lock
aas
or
mov
push
dec
inc
push
push
inc
call
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
cmpsb
cmpsb
test
fldcw
mov
bswap
jo
xor
mov
cwtl
les
inc
or
add
xor
push
adc
testb
adc
pusha
pop
sbb
mov
push
adc
aaa
jbe
fsubs
arpl
mov
loop
jmp
invd
aam
popl
fidivl
sbb
jle
int3
aaa
jo
mov
test
push
call
ret
ja
xchg
stos
mov
mov
or
add
pop
pop
fisttpl
loop
mov
jl
push
mov
movsb
sbb
in
cmp
je
pop
fadd
insl
stos
mov
jae
repz
mov
mov
pop
nopl
sbb
jecxz
push
sbb
lahf
loope
sbb
cmp
pop
cs
fsubrl
adc
jmp
aad
and
add
stos
je
push
xchg
jge
aaa
cmp
inc
jle
or
mov
xchg
clc
add
scas
push
pop
push
imulb
pop
ja
lds
sub
mov
jae
add
rcr
fcoml
or
push
jne
inc
jmp
cmp
mov
dec
add
push
fcompl
xor
mov
lds
sbb
cld
pop
xchg
icebp
pop
jmp
pop
mov
popa
lock
push
xor
hlt
mov
or
pop
pop
mov
lock
push
jle
mov
mov
dec
or
aas
and
ficomps
mov
pushf
sub
or
push
aas
mov
push
rolb
adc
pop
pop
jo
jo
aaa
test
clc
lret
or
out
mov
jg
lods
adc
mov
ja
and
add
shlb
mov
notb
dec
divl
xor
sbb
and
or
pop
add
mull
add
pop
push
push
mov
pop
sbb
xor
fiadds
inc
add
bound
add
inc
movsbl
inc
inc
jmp
push
jae
dec
add
sbb
sti
and
pop
loope
mov
leave
flds
adc
loop
fidivrl
adc
jo
std
xchg
testl
mov
cmpl
sbb
je
cld
negb
adc
pusha
mov
icebp
jecxz
aad
lods
ret
mov
incl
cli
out
push
je
movsb
adc
clc
jbe
ja,pn
sbb
mov
test
pop
cmp
insb
jp
or
or
add
adc
inc
and
push
cmp
je
xorl
inc
mov
ret
cmc
loop
sbb
sbb
xchg
ficoml
stos
int3
mov
mov
sub
sub
incl
insl
mov
add
add
inc
add
sub
scas
dec
jmp
xorb
mov
outsb
add
sbb
push
mov
push
jmp
das
sub
mov
je
mov
inc
add
xor
push
mov
pop
or
mov
test
push
push
push
push
push
inc
pop
sbb
mov
and
mov
mov
or
in
or
pusha
add
lahf
mov
inc
or
pushf
out
shrb
testb
mov
jp
mov
out
dec
cmp
or
shlb
xchg
mov
pushl
insl
shlb
out
mov
lret
sbb
leave
ret
pop
std
fistpl
xchg
pop
add
sub
pop
cmp
decl
adc
cvtps2pi
dec
jmp
std
jg
pusha
add
call
xor
push
cmp
cmp
mov
and
add
cmp
mov
nop
jmp
mov
jmp
mov
es
jmp
aad
jg
mov
jmp
bndldx
into
shll
dec
push
mov
jmp
mov
xor
jle
xor
enter
pop
sbb
pop
stos
add
mov
push
jno
shll
jecxz
aad
or
xor
ljmp
adc
mov
mov
cli
lahf
lcall
or
sub
mov
add
icebp
sti
or
fstps
push
ret
xor
lds
pop
inc
shll
mov
mov
dec
hlt
push
pop
mov
xlat
rcrl
sub
pop
mov
push
cmp
mov
add
mov
movsbl
cs
roll
mov
add
xor
jle
jno
rcr
mov
inc
fiadds
call
adc
or
jmp
xor
and
je
xchg
xchg
add
xor
lahf
std
pop
mov
xor
ds
add
inc
mov
fwait
es
cmp
jg
movl
sbb
cmp
fiaddl
fsubl
inc
dec
movb
jle
hlt
ret
idivl
je
lds
sub
add
aaa
dec
cmp
dec
jne
pop
pop
mov
pop
add
xchg
es
xchg
push
mov
aaa
shrb
ret
mov
add
push
daa
fistl
push
adc
outsl
rorl
mov
mov
push
fistpl
mov
fldcw
push
iret
pop
roll
cli
out
cmc
xchg
push
pop
sbb
inc
scas
pop
sbb
stos
fistpll
sbb
and
movsl
icebp
fsub
movsb
leave
pop
push
pop
inc
rclb
or
sbb
xorl
pop
ss
ret
mov
push
push
icebp
push
fstps
outsb
or
add
pop
sub
cmp
subb
mov
add
sti
jb
mov
mov
roll
fnstsw
sub
push
cmpl
adc
pop
mov
rclb
aad
jne
movsl
ret
outsb
out
adc
dec
and
int3
push
mov
add
inc
orb
or
adc
xor
mov
add
inc
popa
ret
rorb
cmp
jl
mov
bound
push
mov
xor
pop
mov
pusha
cmp
cmp
pusha
fnstcw
and
or
xor
add
lock
popa
out
sub
dec
mov
jl
clc
xchg
dec
jmp
incl
jg
sar
dec
jl
lock
mov
jl
clc
out
pop
push
cltd
in
mov
movl
sbb
sub
loop
xor
and
inc
jg
pop
inc
jmp
sbb
jo
lods
out
or
jge
mov
cmp
xchg
mov
insb
orb
jle
shll
and
clc
xor
xchg
insb
loopne
push
rcrl
inc
add
aad
mov
jb
rclb
call
pop
clc
xchg
stc
mov
inc
sub
dec
or
push
sbb
test
or
lods
les
or
dec
xor
jp
xor
movsb
incl
in
push
mov
push
jg
dec
inc
jmp
lea
cmp
push
sbb
push
shll
aas
ficompl
sub
mov
js
add
mov
xchg
out
sub
fwait
outsb
andl
hlt
rolb
xchg
jge
jnp
or
push
test
aam
push
cmp
inc
pop
jmp
sub
xor
mov
mov
repnz
mov
add
pop
loopne
call
pop
sub
jmp
mov
das
sub
and
pop
add
xchg
push
add
in
add
fnstenv
sub
mov
inc
or
push
sub
insb
repnz
fiaddl
rcrl
and
arpl
out
mov
mov
xchg
sbb
movsl
or
mov
push
cld
add
bound
and
adc
repz
cmc
iret
mov
popa
inc
jl
adc
sub
pop
mov
cmp
sub
pusha
adc
lock
adc
cli
pop
dec
lcall
bound
push
push
pop
lsl
sti
mov
dec
clc
inc
jo
lret
mov
ret
and
push
xor
mov
xchg
adc
or
or
ds
dec
stos
add
or
iret
push
es
jle
cmpsb
mov
mov
mov
cmp
pushl
add
dec
jmp
xchg
push
mov
repnz
mov
or
into
mov
fwait
pop
and
imul
dec
adc
pop
lea
loopne
pop
adc
add
push
push
mov
sub
ja
jb
cld
add
ret
ljmp
fmul
inc
repz
add
pop
dec
inc
out
dec
or
add
add
pop
in
gs
sub
sub
inc
pop
mov
js
out
push
adc
add
cmp
add
jmp
pusha
jmp
push
adc
adc
jo
cmp
inc
mov
in
or
add
cmp
sub
lock
push
cmp
adc
pop
in
mov
pop
or
dec
inc
adc
cltd
sbb
out
je
pop
test
or
sub
es
jl
cmp
jge
sub
xchg
ret
fidivrl
xchg
add
lret
pop
sub
shr
in
jmp
pop
mov
lcall
sub
fdivl
shll
jl
xchg
jge
in
ret
jle
sub
fnstcw
and
stc
add
lea
inc
mov
push
push
or
sub
dec
lds
dec
jge
cmp
inc
test
outsb
mov
jl
ljmp
leave
mov
lea
clc
push
add
push
icebp
jp
lahf
xor
add
cmp
inc
dec
xor
jmp
cld
push
ss
js
mov
inc
cmp
mov
mov
mov
sbb
push
mov
adc
xor
outsb
adc
clc
mov
notb
dec
jle
roll
and
pop
ss
sbb
mov
hlt
inc
add
xchg
jo
jb
sub
and
cli
sbb
mov
scas
cmp
jl
icebp
dec
cwtl
pushf
shrl
push
jnp
sysenter
and
orb
xor
or
push
sbb
stos
cld
push
mov
int
or
mov
cltd
packssdw
repz
clc
jno
adc
push
inc
rolb
push
xor
pop
and
xor
push
adc
pop
or
mov
stos
pop
and
test
mov
mov
cmp
fisubrs
jmp
cmp
je
cmp
jno
pushf
jbe
sysexit
fnsave
adc
mov
out
pop
loope
inc
add
or
adc
aas
pop
dec
mov
icebp
test
mulb
ja
js,pn
outsb
adc
subl
insb
movsb
repz
cmp
mov
in
fldt
or
dec
rclb
rcrb
pop
jmp
sbb
fstps
adc
cmp
cmp
aaa
cmp
jmp
fwait
push
scas
or
and
add
xor
or
cld
movsl
fists
jo
sbb
add
sarl
sbb
mov
jg
push
adc
jns
jns
and
or
jo
lock
inc
and
test
push
jnp
test
mov
mulb
jge
cs
loope
and
lea
clc
mov
pop
sub
mov
add
mov
pop
ret
dec
lock
xor
lds
pop
add
sbb
adc
cvtdq2ps
pop
cmp
push
or
getsec
js
adc
dec
jne
leave
mov
mov
sbb
jle
xlat
out
in
das
insb
and
mov
testb
inc
inc
sahf
popa
jge
pushf
add
mov
cmc
mov
mov
xor
cs
mov
mov
jmp
adc
adc
loop
cwtl
cmp
sbb
or
arpl
add
add
pop
and
sbb
fsubrp
inc
pop
es
les
ficompl
sbb
add
add
les
inc
adc
xor
fisubs
or
mov
adc
ja
push
loop
clc
mull
mov
xchg
lock
sub
lret
xor
push
pop
adc
xor
and
sbb
mov
mov
sti
pop
or
filds
jns
neg
mull
sbb
out
or
fincstp
adc
mov
push
cmp
not
loopne
rcl
rcr
out
jb
xlat
xor
fidivs
sub
sbb
inc
loop
pop
test
add
repz
adc
test
pop
add
xchg
pop
js
pop
stos
inc
test
xchg
add
repnz
adc
mov
xor
int3
aam
add
xorb
xor
cs
jns
std
pop
mov
inc
or
jmp
cmp
jne
sti
mov
and
sub
je
or
icebp
adc
mov
cs
paddw
fisubs
imul
rolb
mov
adc
stc
push
jb
out
loopne
lea
mov
out
sub
dec
mov
or
jmp
push
mov
mov
lds
loopne
inc
shll
inc
mov
pushl
sbb
mov
pushf
cltd
pop
fildl
fisubs
shld
add
adc
or
sub
jbe
lcall
rcr
stos
and
rcll
mov
push
fisubrl
mov
dec
shlb
xor
or
leave
jne
je
orb
int3
xchg
das
jg
jae
xchg
xor
movsl
stos
push
mov
pop
cltd
jmp
xchg
hlt
mov
xchg
cmp
orb
orps
loope
pushf
sarb
je
dec
adcb
popf
or
fsubs
jmp
insb
pop
ja
rcr
or
incl
lds
mov
sub
outsl
mov
insb
cmp
gs
bound
test
mov
sbb
mov
add
mov
push
sbb
push
pushf
inc
aaa
daa
cmp
mov
xor
dec
loopne
or
repz
add
adc
lods
lods
jns
push
inc
push
call
lret
push
aaa
sbb
imull
es
sti
push
insb
inc
in
cmp
je
cmpl
dec
pop
cmp
xor
ret
hlt
jge
jge
js
ljmp
scas
dec
add
lock
cmpb
inc
loopne
push
in
scas
loopne
pop
decl
mov
sub
push
ja
mov
in
inc
in
jge
add
sub
imul
mov
leave
mov
and
into
mov
in
push
push
iret
adc
push
test
push
ds
dec
xlat
arpl
dec
shll
inc
add
inc
ja
pop
or
add
push
lock
mov
push
insb
add
push
xorl
jle
int3
or
dec
dec
fxch
inc
mov
roll
insl
or
and
pop
or
mov
cmovg
mov
insb
loope
mov
pushf
push
adc
sbb
xorb
mov
dec
daa
mov
lock
adc
and
pop
dec
add
rcrl
add
sbb
hlt
push
sub
ds
les
mov
clc
leave
aaa
cmp
add
shlb
pop
fldcw
push
inc
test
or
mov
push
pop
cmp
cmp
jge
xor
outsb
imul
cmp
je,pn
add
adc
sub
or
push
insb
pop
mov
outsb
mov
push
mov
pusha
and
fmuls
jmp
jne
loope
add
push
clc
adcb
mov
mov
popf
inc
push
int3
and
aad
push
imull
push
or
push
cli
xor
adc
jbe
das
das
dec
jmp
cmp
pop
push
pushf
js
pop
fmuls
cmpsb
ljmp
ds
testl
idivb
inc
xor
sub
lea
pop
and
insb
push
arpl
notl
add
add
inc
cmp
mov
insb
pop
adc
xor
xor
pop
data16
inc
mov
inc
outsl
jae
mov
je
or
pop
loop
cs
sub
add
inc
cmp
test
jg
sbb
sub
dec
push
sub
sbb
pop
aas
inc
inc
js
pop
leave
test
aas
ret
adc
jb
gs
xor
cs
js
decl
je
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
loopne
mov
jecxz
inc
cmpsl
js
adc
inc
out
fsubrl
push
adc
dec
mov
rcrb
and
cmp
add
sub
into
jbe
sbb
jns
mov
testb
mov
cld
pushw
sbb
sbb
jns
shl
jnp
dec
clc
loope
mov
fbstp
repz
adc
mov
mov
jge
push
fwait
xor
cmp
mov
add
sbb
mov
cmp
push
fdivs
or
popf
inc
inc
mov
arpl
ret
test
push
sub
cmp
push
je
pop
loope
mov
or
pusha
adc
add
lcall
popa
jb
xor
sbb
jg
arpl
gs
sbb
insb
push
mov
and
sbbb
xor
add
push
mov
andl
clc
mov
add
or
and
mov
cmc
sub
test
inc
mov
data16
ss
mov
dec
push
nop
dec
inc
sub
mov
adcl
repz
dec
cmp
jecxz
push
inc
jmp
mov
xor
push
adc
push
push
lea
and
ljmp
jg
mov
mov
or
in
pop
add
add
adc
inc
add
add
add
in
jbe
dec
je
push
mov
fwait
mov
punpckhdq
mov
orl
pop
cmp
add
pop
repz
sarl
scas
mov
add
test
and
cld
aaa
call
inc
das
enter
inc
adc
or
push
or
les
xchg
addl
lock
xchg
pop
repnz
dec
push
lea
xchg
pop
icebp
push
cmc
push
push
out
add
cvtpi2ps
sub
in
mov
inc
call
aaa
or
xor
xor
pxor
cld
scas
dec
incl
sub
pop
js
mov
nop
addr16
ret
add
dec
pop
cs
data16
clc
pop
subl
add
add
movb
sub
rolb
and
mov
sbb
or
mov
sbb
xlat
or
ret
out
in
mov
sarl
mov
jp
shr
test
cmp
jbe
adc
lahf
jmp
neg
add
adc
movups
incb
mov
js
mov
add
je
jo
mov
sbb
aas
nop
jae
out
icebp
ljmp
mov
xor
cmpl
pop
push
or
adc
jecxz
jle
or
mov
adc
sbb
mov
insb
in
inc
or
sub
sub
mov
lds
cwtl
and
stos
fistpl
jl
inc
xor
jmp
xchg
jnp
add
pushf
sbb
cmp
test
pop
shll
add
rclb
mov
sub
xor
insb
xor
and
pop
mov
and
and
cwtl
nop
or
enter
orl
mov
xchg
shr
in
adc
xor
orb
rolb
insb
gs
cmp
or
fdivs
enter
pop
ror
enter
enter
orl
mov
enter
movsb
or
enter
cwtl
xor
and
and
and
je
or
enter
fs
enter
pop
xor
and
and
and
xor
or
enter
and
xor
and
sbb
xor
and
and
inc
push
cmp
cld
sar
hlt
push
sbb
in
call
inc
loopne
fsubs
push
aam
int3
nop
inc
push
sbb
rolb
aam
dec
or
enter
inc
xor
and
and
and
sbb
or
enter
or
xor
and
add
fs
xchg
cmp
clc
hlt
and
adc
dec
push
xor
add
cld
aam
sbb
hlt
lock
fs
inc
push
call
push
sbb
fcom
inc
push
sbb
enter
nop
sarb
mov
fs
inc
push
test
mov
pushf
cwtl
xchg
inc
push
sbb
mov
sbb
cmpb
nop
inc
je
insb
fs
inc
push
push
sbb
pop
xchg
xchg
jns
dec
subb
push
inc
repnz
jo,pn
push
jo
mov
and
lock
pop
icebp
or
enter
hlt
xor
and
and
and
std
orl
jmp
loope
xor
and
jecxz
xor
and
and
and
in
orl
out
out
rcl
or
enter
aam
enter
xlat
enter
fcomp
fisubl
orl
orl
rol
xor
and
ret
les
enter
mov
and
and
int
or
enter
mov
xor
and
and
and
and
mov
mov
and
xchg
je
pop
dec
inc
rcll
or
add
stos
or
add
repnz
xor
cmp
cmp
sub
decl
inc
js
gs
imul
popa
mov
pop
addr16
gs
sti
inc
inc
dec
gs
jo
nop
pop
pop
add
orl
or
jnp
incl
jne
dec
dec
gs
outsl
jb
mov
or
inc
dec
outsb
jns
fucomp
pop
inc
jb
pop
adc
adc
mov
je
or
push
popa
insb
xlat
push
xchg
add
adc
push
jbe
imul
enter
inc
or
or
das
mov
push
and
xchg
mov
inc
imul
nop
js
jle
adc
js
push
popa
outsb
or
lret
push
rorb
mov
dec
jbe
data16
outsl
ja
das
adc
pop
pop
sub
push
or
mov
jnp
in
nop
test
mov
pop
sti
sbb
push
or
imul
and
arpl
fimuls
mov
pop
gs
push
orl
pusha
imul
pop
push
outsb
fs
xor
push
pop
xchg
and
pop
push
outsl
imul
outsl
xchg
pop
pop
or
gs
inc
popa
jae
outsl
pushf
pop
pop
je
inc
and
imul
xor
inc
arpl
jae
push
mov
sub
icebp
and
inc
pop
pusha
push
jb
xchg
pop
fidivrl
gs
mov
mov
fbld
adc
imul
or
inc
or
ret
inc
outsl
je
insb
inc
imul
pop
fwait
add
pop
push
popa
or
lahf
rcrb
fs
or
and
inc
popa
outsb
and
mov
and
and
insb
sub
push
fdivs
mov
nop
jl
jl
jbe
and
movb
fcoms
daa
push
and
hlt
popa
gs
outsl
lock
adc
aas
adc
cs
xor
push
dec
pop
mov
std
or
jae
and
adc
and
xchg
scas
bound
clc
popf
cmpl
lret
mov
mov
shrb
dec
fists
cld
xor
leave
jne
or
jns
imull
jbe
sub
cmc
dec
mov
ret
jmp
aaa
stos
pop
xchg
pop
mov
or
aaa
cli
aaa
ja
pop
sub
sub
jbe
shll
add
jne
dec
jne
xor
jg
jg
jge
pushl
movsb
mov
negl
orl
add
pop
or
movb
dec
inc
jmp
add
jl
jbe
fdivrp
add
cmp
orw
call
sbb
andl
in
fstpt
fildll
fildll
ret
dec
in
add
std
add
sub
add
rorl
fildll
stc
mov
mov
cs
xor
add
push
push
fcom
fstsw
sahf
jae
outsl
inc
fndisi(8087
fnstenv
ffree
ffree
ffree
pop
sub
add
sub
or
jl
push
sbb
adc
mov
outsb
and
adc
scas
mov
in
xor
and
in
lock
fldt
stc
sub
cli
and
call
ds
std
and
sbb
sarb
inc
cmp
cmp
jne
dec
pusha
adc
jg
jnp
push
push
cli
dec
sarl
mov
cmp
cld
lock
lea
mov
lahf
adc
sti
call
outsl
xor
lock
add
clc
sbb
mov
mov
cld
sub
insl
clc
addb
push
lret
mov
test
ds
dec
or
push
add
lock
push
ret
sub
xchg
nop
xchg
pushl
push
cmc
out
push
cmpl
xlat
pop
adc
mov
dec
add
lret
sub
lea
incl
inc
sub
mov
mov
inc
fsts
inc
fsts
mov
xor
xor
rorb
fildll
xor
adc
mov
cmp
add
push
mov
arpl
les
ljmp
cs
rclb
das
or
or
inc
adc
repnz
call
fsubrs
cmp
jbe
mov
cmp
dec
xchg
push
cmp
pushf
dec
mov
add
daa
mov
stc
sub
mov
les
add
inc
and
pop
push
fildl
ljmp
jl
aaa
ss
mov
dec
or
sbb
adc
call
pop
xlat
fistl
movsb
xorl
stos
xchg
cmp
insl
stos
sbb
adcb
clc
or
mov
inc
or
and
clc
sbb
inc
clc
add
push
repnz
shll
inc
call
add
adc
ficompl
adc
mov
mov
xor
adc
and
fcoms
adc
sbb
pop
and
addr16
xor
shl
fildl
cmp
ss
add
jbe
xchg
or
or
sbb
push
jle
fldt
pop
mov
push
and
and
cmp
jb
cmp
ja
imul
mov
add
xchg
add
jecxz
in
daa
xor
pop
shll
cmpb
pop
ljmp
ret
and
mov
push
lahf
imul
lea
mov
dec
fisttpl
and
dec
lods
fiadds
cmpsb
jmp
imul
mov
pop
add
sbb
cmpsb
sbb
add
push
icebp
hlt
dec
fsubrs
shrl
std
imul
jo
jne
adc
cmp
jbe
js
lock
cmp
sub
je
xor
iret
push
add
imul
aam
mov
cmpsl
cs
xor
arpl
xor
xor
push
adc
cmp
jne
pop
nop
dec
push
bound
cmp
testb
lock
mov
push
add
jmp
xor
and
test
adc
jmp
mov
outsl
mov
pop
cmp
add
pop
and
insl
mov
xchg
pop
cmp
mov
or
mov
pop
cmc
or
ja
add
jns
lahf
mov
shlb
dec
mov
push
pusha
cmpsl
push
pop
int3
pop
cs
mov
in
add
ret
mov
scas
mov
aaa
mov
stc
in
mov
inc
je
mov
push
inc
je
mov
inc
je
mov
out
int
pop
dec
je
dec
mov
fucomi
cmc
or
and
sbb
adc
xorb
jl
imul
psubw
daa
insb
ja
xchg
mov
and
movsb
pop
js
cmp
xchg
ret
sbb
adc
les
inc
sub
lahf
mov
rorb
orb
and
xlat
xchg
cli
push
mov
mov
mov
clc
and
shlb
jmp
je
pop
or
testl
pop
les
xchg
cmp
das
adc
jle
mov
lock
leave
lock
lds
sbb
push
inc
xchg
imul
cld
lea
sbb
cmp
das
push
jae
fistps
jmp
add
cmpsl
push
jge
mov
xchg
dec
leave
push
fisttpl
jge
xchg
sub
pusha
jnp
jmp
lea
mov
das
xor
mov
add
stos
or
dec
or
jge
and
push
or
movsb
mov
pop
test
mov
daa
mov
mov
mov
dec
and
xchg
jg
dec
mov
stos
cmp
push
pushf
add
jne
pop
pop
rcl
mov
fidivs
fcoml
mov
and
hlt
mov
repnz
adc
icebp
lret
add
jecxz
jge
pusha
sbb
or
jle
sbb
mov
daa
or
insb
call
test
mov
cld
movzwl
sub
mov
pop
mov
aas
pop
lea
mov
ja
sbb
push
xlat
cs
ret
sti
add
ja
fbstp
outsb
fisttpl
mov
add
cs
unpcklps
cmp
add
fs
insb
mov
fs
aad
xor
push
rorb
inc
loopne
lods
or
add
ret
cltd
add
or
dec
aam
dec
add
jg
cmp
jl
sub
fimull
das
pop
je
mov
stos
neg
or
shr
sbb
inc
inc
je
stos
loop
pop
adc
stos
or
and
daa
add
fwait
sub
add
mov
cs
test
sub
imul
mov
mov
mov
imul
mov
jb
mov
pop
mov
in
push
ret
mov
dec
insb
in
xchg
lcall
dec
je
dec
jne
cli
pop
ja
add
call
sbb
add
in
inc
jne
adc
ret
dec
jns
jno
in
or
or
cmp
xchg
mov
sub
dec
add
lea
add
jle
inc
je
push
inc
and
sub
mov
or
and
pop
inc
loop
insl
sub
test
rol
and
inc
add
and
mov
or
and
adc
inc
sub
sbb
sub
or
add
adc
sub
inc
add
pop
sbb
sub
popf
xor
sbb
sub
loopne
add
cmpsl
out
mov
cmp
jmp
mov
mov
or
stc
ret
stos
mov
push
jne
testw
sbb
call
jle
add
xchg
lea
inc
and
mov
loopne
adc
sar
inc
jns
test
mov
push
leave
sbb
fbstp
cld
jmp
fcomp
fstsw
fwait
pop
inc
jnp
inc
mov
mov
ljmp
mov
jne
lea
mov
inc
sub
dec
pusha
mov
and
add
sub
pop
shrl
jns
dec
fadd
outsl
cmpsb
dec
dec
jge
dec
add
call
jae
out
mov
mov
jb
out
add
or
xchg
js
mov
mov
jg
mov
mov
xor
mov
outsb
sti
push
or
mov
add
dec
out
or
fs
push
mov
and
mov
pop
pop
and
dec
mov
or
jmp
mov
pop
mov
cmpsl
sbb
addl
and
pusha
inc
daa
push
add
mov
fidivl
fwait
fs
add
sub
pop
mov
and
jne
dec
adc
cmp
sub
and
and
add
movb
cmpb
ret
int
jecxz
mov
fisttpl
or
jo
mov
add
pop
aam
mov
lea
push
fsubl
ds
sub
or
andb
or
sbb
push
mov
cmp
adc
pop
jne
jmp
sbb
sahf
mov
cld
pop
pusha
test
adc
xor
shll
jo
dec
mov
xchg
outsl
jnp
push
iret
scas
push
add
enter
jb
jb
cs
mov
inc
je
mov
scas
cmpb
jns
adc
insb
fnstsw
inc
dec
sub
pop
pop
hlt
enter
lcall
dec
jb
lahf
and
aaa
push
add
jne
pusha
cmpsl
pusha
jae
add
sbb
cs
loop
idiv
out
push
in
popa
test
jp
inc
xchg
cs
in
and
nop
loopne
cmp
call
into
cmp
xor
loop
cmp
push
jmp
ret
loopne
sub
imulb
mov
pop
je
dec
cmp
inc
and
bound
and
push
pusha
push
out
and
lret
ret
iret
cmp
pop
inc
jae
sub
xor
inc
ljmp
xor
add
lcall
jae
or
pop
inc
jne
lret
ja
dec
xor
jbe
das
push
shl
loop
sbb
xchg
and
mov
push
pop
insl
mov
mov
subl
das
mul
xchg
push
push
mov
jnp
jnp
ja
add
hlt
push
sub
fs
push
fsubrl
add
out
push
sub
or
xchg
mov
in
lock
enter
xabort
jne
sub
ret
inc
lods
shl
adc
movsb
adc
repz
lea
cmpl
ljmp
jecxz
in
clc
sbb
je
xlat
mov
mov
out
daa
rcr
sub
aam
fdivrs
sarb
stos
or
inc
jns
mov
cmp
mov
es
loopne
adc
lock
std
cld
aas
mov
inc
outsb
dec
lock
mov
mov
nop
ret
jle
sbb
and
sbb
or
ret
fwait
leave
and
sbb
movsb
mov
pop
je
jne
sbb
xchg
add
jmp
in
in
daa
rcll
jle
popa
and
xchg
jecxz,pt
ja
add
repz
or
iret
jge
out
or
aas
add
pop
inc
in
adc
mov
les
add
cmp
imul
xor
push
inc
sar
adcl
loopne
mov
sbb
std
sub
ja
enter
sbb
inc
mov
sbb
fstps
pushf
data16
lahf
sub
es
movsl
add
rolb
repz
xchg
add
cmp
cmc
add
adc
lcall
iret
sub
mov
jmp
add
cs
mov
mov
js,pn
cmp
add
aam
lock
enter
fcmovnbe
mov
sbb
add
lcall
mov
push
jnp
mov
sbb
mov
rcrb
sti
sbb
mov
lods
pop
outsl
sti
jl
inc
lea
mov
mov
or
add
adc
and
xor
sbb
adcl
inc
inc
add
inc
push
add
mov
mov
inc
inc
loopne
dec
pop
mov
push
jle
push
loopne
adc
test
sbb
ss
sbb
sub
scas
sbb
sti
push
or
push
mov
inc
lods
cmp
and
mov
mov
out
inc
add
add
test
je
adc
adc
inc
add
inc
add
push
or
push
pop
mov
mov
xor
jns
mov
cmp
mov
sbb
push
cltd
mov
adc
push
fsubrs
ss
xchg
add
mov
mov
or
inc
push
or
add
push
arpl
xchg
ss
fstpt
pop
jmp
or
xor
lods
or
cs
stc
adc
sbb
or
int
sti
push
mov
or
and
mov
pop
pop
pop
movsb
jg
push
ret
add
mov
adcb
scas
je
dec
lret
dec
sub
jb
sahf
insl
pop
pop
push
adc
pop
nop
and
test
pop
push
pop
add
cmp
insb
xlat
dec
or
inc
ret
pop
jne
inc
mov
xchg
add
loope
mov
xchg
mov
mov
adc
sub
loopne
add
shrl
fimull
mov
push
lock
clc
adcl
fimuls
loopne
inc
dec
loopne
cmp
out
fs
shlb
jnp
inc
inc
in
xchg
cs
jb
jne
fsubrs
mov
adc
aaa
mov
add
imul
add
aam
inc
call
loopne
in
pop
xchg
xchg
xchg
push
push
cmp
je
jmp
xor
mov
je
jmp
xor
xchg
in
fisttps
add
mov
add
pop
pop
or
or
sub
xor
test
xchg
insb
add
mov
sbb
fiadds
mov
enter
cwtl
push
jle
ss
adc
cmpl
sete
call
add
sbb
pop
inc
or
in
shlb
mov
lock
mov
adc
in
scas
jnp
scas
je
or
decb
call
xor
mov
jnp
fstps
or
bswap
aaa
sbb
sbb
mov
scas
xor
mov
jecxz
lea
aaa
lods
pop
jmp
xor
xchg
xchg
ds
pop
pushf
jb
jb
mov
xchg
iret
xor
nop
lock
nop
or
movsb
xchg
pop
jle
mov
mov
inc
sbb
bound
aad
and
push
mov
rolb
aaa
aas
ljmp
std
outsb
add
xor
lret
sub
push
hlt
add
mov
push
pop
xchg
sbb
ret
and
and
popa
int3
sub
pushf
call
push
inc
dec
mov
pop
mov
mov
inc
mov
cwtl
pop
jp
out
mov
fmuls
mov
int
xor
xor
in
mov
imul
scas
test
jle
mov
jnp
aam
mov
mov
dec
out
add
lret
jb
sbb
mov
mov
or
or
xor
push
imul
and
sbb
and
sbb
cltd
or
adc
mov
push
sub
or
cli
jb
adc
test
inc
add
xchg
stos
mov
subb
push
mov
or
mov
or
add
or
jmp
sub
mov
enter
mov
pop
or
out
test
inc
rol
pop
bound
cmp
pusha
sub
sub
mov
or
sbb
testl
adc
negb
jb
mov
sub
adc
cli
cmp
leave
incb
add
add
adc
add
dec
add
cwtl
inc
mov
jo
or
packssdw
sbb
mov
sub
pop
adc
sarl
xchg
sar
and
ret
cs
pop
pop
in
test
mov
push
jp
in
jno
in
jno
push
xchg
jno
push
dec
insb
lock
in
inc
adc
adc
sbb
dec
or
mov
shl
gs
xchg
lret
jl
add
sarb
inc
inc
and
jne
cmp
shrl
aas
hlt
hlt
adc
stc
rorb
aas
xor
inc
insb
hlt
sbb
pop
out
add
pushf
movsb
fdivs
xor
cwtl
or
sbb
push
sbb
in
mov
jb
idiv
inc
dec
pop
xor
jmp
mov
mov
sub
jb
inc
mov
mov
cmc
insl
in
shrb
ljmp
or
subb
enter
xchg
pop
lock
mov
push
jg
cmp
mov
push
movl
sub
inc
pop
inc
push
mov
and
data16
movzwl
neg
pop
sub
call
jo
jmp
cwtl
mov
iret
cmp
js
dec
jae
xchg
adc
fninit
movb
je
push
cmp
sti
mull
inc
mov
sbb
xchg
ret
mov
xor
cmpsl
add
mov
inc
inc
cmp
cmp
mov
cwtl
push
adcl
and
push
test
sbb
push
call
jge
lock
push
lret
lea
jmp
adc
inc
mov
sub
mov
jbe
mov
add
push
adc
jae
adc
leave
cmpsb
clc
dec
jne
push
adc
sbb
and
arpl
fs
jl
adc
push
cs
pusha
icebp
mov
ds
jo
mov
mov
sbb
and
xchg
sub
nopl
push
in
adc
jle
cs
push
cmp
gs
ss
mov
call
fdivl
addr16
loopne
test
sub
push
cmp
mov
inc
mov
mov
repnz
xor
mov
pop
int3
and
or
mov
enter
test
sbb
adc
mov
outsb
dec
cmp
enter
sbb
and
les
sbb
add
in
hlt
mov
fcmovnbe
lret
clc
add
push
mov
loope
inc
sub
sbb
mov
or
add
push
inc
subl
outsb
sarb
mov
push
insl
das
fs
inc
mov
insl
add
fs
fwait
nop
lret
add
popa
insl
or
cmp
dec
push
sub
inc
dec
push
dec
add
push
pop
leave
fisubl
cmp
jg
jbe
or
jae
sbb
cwtl
mov
jnp
or
hlt
add
push
scas
inc
xor
sbb
lret
sbb
sarb
pop
push
adc
mov
mov
cmp
push
push
subb
stos
inc
inc
adc
imul
gs
jo
arpl
js
push
jo
add
nop
mov
negl
nop
fsubs
insb
xchg
dec
roll
push
add
jo
push
xlat
xor
pusha
pop
test
js
xor
shll
inc
inc
cmp
je
xlat
xor
push
sub
inc
and
sbb
adc
mov
jae
scas
imul
xchg
scas
lock
mov
pusha
loopne
scas
jmp
pop
aam
daa
mov
jmp
scas
rorb
jb
mov
pop
jg
or
mov
fnstenv
lods
scas
mov
fs
xchg
scas
cwtl
loopne
xchg
xchg
fcoms
data16
shlb
xchg
int
fsubrl
push
imul
je
rcrb
insb
cmp
or
sub
scas
fs
jae
or
xchg
xchg
adc
je
xchg
xchg
mov
leave
xchg
xor
scas
inc
fs
into
sahf
xchg
scas
inc
mov
cmp
mov
cmp
pushf
cmp
out
jae
cwtl
scas
sub
mov
sub
and
or
das
sbb
sbb
dec
jae
scas
pop
adc
add
xor
pop
cld
or
das
es
push
loope
mov
push
fs
test
push
dec
mov
or
les
pop
add
inc
mov
lods
adc
and
mov
and
in
xchg
and
xlat
and
pop
sbb
arpl
cmp
loopne
in
bound
cmp
xchg
push
ds
add
repz
or
jbe
pusha
adcb
or
and
dec
xchg
nop
mov
js
xor
daa
or
mov
push
push
cmpsl
call
inc
push
push
lea
xchg
push
xchg
js
or
pop
movb
xor
out
cltd
inc
test
inc
sub
addl
mov
not
dec
push
xchg
aad
mov
sbbl
xchg
push
insb
addr16
push
mov
mov
jae
addr16
pop
outsb
pop
pushf
nop
mov
dec
int
mov
xchg
je
pusha
pop
pusha
and
ja
and
push
or
jecxz
inc
fnstenv
fs
mov
pop
addb
xchg
add
or
lock
pop
push
push
je
jns
jo
and
and
insb
mov
dec
pop
subl
mov
shr
push
inc
jne
outsl
insl
loopne
movsb
imul
mov
push
xchg
add
fistpl
pop
or
or
sbb
add
or
pop
or
int3
not
clc
add
cmp
sbb
push
mov
incl
add
mov
push
sbb
xor
xchg
ss
in
cmpl
inc
movsb
mov
daa
adc
cmp
fistpll
mov
jge
sub
arpl
ja
lea
add
adc
add
fcmovnu
fistpll
sarb
push
dec
fwait
inc
orb
test
dec
xor
inc
jle
mov
jnp
mov
or
jmp
push
popl
lret
lcall
jmp
inc
cmp
add
jne
lods
fnstsw
leave
call
mov
lods
int3
sub
or
push
pop
fcmovbe
jl
subl
out
sbb
ljmp
adc
or
xorb
push
cmc
data16
sub
jle
xchg
loopne
adc
orb
mov
shl
mov
std
fildll
sub
jg
dec
mov
xchg
mov
jle
shlb
clts
ret
loop
fstps
and
inc
or
xor
lea
and
hlt
inc
add
inc
lock
inc
and
cs
shll
push
sti
into
or
sbb
pop
xchg
mov
enter
mov
and
inc
or
sub
cmp
adc
in
jge
js
ljmp
imul
enter
je
and
nop
rolb
pusha
das
mov
jne
cmovno
cmp
adc
cmp
mov
pop
mov
xor
dec
xor
int3
rolb
cmp
lock
cmp
push
enter
sahf
clc
adc
inc
xor
mov
int
adc
push
sarl
add
adc
cltd
jnp
mov
inc
pop
cmpsb
push
adc
cmp
pusha
mov
or
inc
mov
adc
mov
add
jo
adc
inc
jnp
lahf
mul
push
mov
cmp
in
popl
inc
cmp
pop
mov
xchg
or
lds
outsb
pop
ret
cmp
testb
jne
push
aaa
andb
loop
cmp
push
push
adc
ljmp
pushf
add
push
xchg
shll
imul
xchg
jmp
in
jg
cmp
lret
loope
lcall
in
add
mov
enter
push
das
xor
push
or
fdivs
pop
lods
lea
adc
or
stos
push
les
add
and
test
xor
sbb
sbb
xor
dec
and
add
sbb
ss
outsl
incl
jb
je
dec
add
adc
add
enter
mov
add
or
sbb
ds
fwait
scas
add
and
test
fwait
mov
add
sbb
pop
daa
test
stos
out
das
inc
adc
leave
mov
inc
inc
cmp
jge
data16
jp
sahf
pop
cs
ror
mov
insb
jns
add
adc
push
push
mov
je
pop
adc
lret
xor
sgdtl
or
jne
and
insl
push
sub
adc
mov
and
pop
inc
ds
cmpl
incb
sub
jnp
adc
and
xlat
lods
adc
add
or
ret
adc
icebp
push
daa
leave
xchg
dec
push
enter
xchg
pop
fs
pushf
sub
sbb
pop
sub
push
cltd
inc
popa
in
jae
push
ja
movsb
sbb
gs
imul
gs
fcompl
add
movsl
mov
int3
cmpsb
adc
mov
orb
push
push
leave
mov
mov
inc
repz
mov
mov
mov
shrl
mov
push
shrb
stos
add
mov
ss
pop
mov
pusha
test
sub
ret
push
loopne
les
or
fimull
out
inc
xlat
adc
xor
ds
daa
mov
andl
cwtl
pop
sub
pextrw
scas
and
dec
mov
ja
not
and
shlb
test
mov
inc
test
lods
or
push
push
mov
jbe
inc
cmp
inc
pushw
fildll
xchg
sbbb
adc
sub
mov
sti
add
arpl
jns
and
pop
add
cmp
sahf
push
mov
pop
or
shll
sbb
mov
ja
cmp
je
and
xchg
mov
iret
or
mov
pop
jae
adc
es
and
enter
rolb
shll
sbb
adc
lock
adc
xor
dec
js
adc
dec
mov
outsb
add
btr
mov
call
bnd
pop
adc
adc
jecxz
ret
mov
or
sbb
pop
and
or
jge
sbb
flds
std
add
and
jge
and
stos
adc
and
cmpl
cmp
pop
mov
stos
lods
cmp
sbb
push
je
add
jl
sub
dec
sti
lea
sub
and
add
mov
ficoms
jp
pop
movl
cmp
pop
ja
ja
sbb
mov
add
pop
insl
je
js
adc
add
mov
pop
add
jae
cld
or
push
imul
imull
adc
mov
or
lea
push
push
movzwl
fidivrl
push
cltd
xor
mov
ret
imul
mov
push
jecxz
or
hlt
lret
test
les
data16
jbe
mov
loope
call
xchg
sub
mov
push
sbb
loopne
and
inc
fldt
mov
in
inc
or
ret
or
pop
fs
pushf
inc
sub
fcoml
inc
nop
lods
popf
aas
or
test
es
push
int
mov
test
mov
stos
sbb
es
push
sub
dec
adc
mov
add
or
fsubrl
xor
fcmovbe
adc
out
scas
inc
push
je
adc
push
scas
sub
or
xor
ja
sbb
nop
jno
ja
inc
pop
push
jl
pop
jecxz
push
xor
or
jae
xchg
pushf
jne
sbb
sub
or
sub
or
xor
push
sbb
sahf
mov
push
mov
or
ljmp
fbstp
cmp
les
xor
sahf
fsubrl
sub
cwtl
jo
mov
mov
adc
mov
jge
fmul
fsubrs
mov
push
xchg
test
add
je
inc
sub
les
lcall
or
cs
in
cmp
sbb
xchg
or
jmp
push
pop
add
rolb
enter
push
xor
mov
xchg
iret
add
imul
imul
push
int
cltd
or
xor
fs
cmp
jb
adcb
iret
mov
dec
loop
or
gs
and
or
mov
dec
imulb
aam
fcmovnb
inc
popf
inc
mov
data16
inc
in
sbb
ud0
inc
loopne
mov
sahf
pop
dec
jmp
sbb
jne
add
out
incl
aas
or
hlt
rolb
dec
mov
sbb
or
adc
aaa
imul
in
mov
outsb
nop
add
or
cld
add
nop
xlat
adc
mov
mov
and
adc
outsl
leave
cmpsl
test
imul
push
hlt
inc
lahf
push
jne
mov
faddl
sub
add
sbb
add
jle
or
ret
sbb
std
xchg
fstps
gs
in
jbe
push
mov
add
fnstenv
mov
jnp
cmp
and
or
push
loopne
xchg
and
dec
js
push
out
outsl
or
and
mov
mov
push
fmull
test
dec
add
or
mov
push
or
xchg
insl
or
fsubrl
xor
xor
sahf
fsubrl
pop
mov
lods
mov
les
xor
mov
hlt
sbb
pop
mov
cmc
cmp
lcall
into
mov
xchg
and
inc
push
push
mov
sbb
mov
fdivl
mov
or
push
jo
in
jmp
lods
into
insl
aam
mov
or
jo
mov
adc
hlt
popa
testb
jecxz
inc
fucomip
adc
mov
inc
fsubs
pusha
es
fdivl
insb
ret
daa
dec
cmp
xchg
cmp
jne
pop
sbb
adc
xor
inc
mov
das
add
sahf
dec
add
ffree
mov
inc
jl
and
cmp
outsl
add
xchg
fcmovnu
and
or
sbb
ret
or
ficompl
xchg
mov
cmp
adc
and
rclb
fcmovb
xor
shr
push
dec
out
lret
and
and
ja
outsl
cmp
loopne
push
inc
xor
clc
hlt
inc
clc
jmp
mov
or
daa
pusha
int3
dec
adc
lods
jne
adc
push
inc
push
gs
push
and
inc
movsb
data16
fwait
loopne
push
sbb
push
cmp
cmp
cltd
insb
mov
jecxz
mov
inc
add
sub
xchg
or
mov
sub
in
addr16
xchg
lock
into
insb
xor
inc
outsb
mov
pop
iret
adc
cmp
adc
mov
inc
and
inc
xor
mov
sub
movsb
add
mov
or
into
das
into
jb
adc
dec
push
inc
xor
push
or
and
scas
mov
insl
jb
xchg
aaa
mov
push
enter
cwtl
push
and
aam
cwtl
pusha
out
pop
ret
push
fmull
arpl
jle
dec
jge
push
mov
mov
dec
add
adc
cmpsb
mov
xor
clc
jno
xchg
xor
pop
sub
loope
adc
dec
xchg
push
enter
inc
es
daa
mov
or
cld
and
scas
clc
add
into
xchg
or
dec
jo
adc
ds
push
fwait
mov
xchg
mov
shrl
and
jno
jno
xchg
cmp
andb
xor
push
mov
push
xor
xor
jae
orb
test
je
aaa
xor
lock
in
add
addr16
mov
pop
or
lea
cld
dec
dec
stc
adc
daa
dec
sub
lods
insl
test
push
inc
push
sbb
cli
in
outsl
add
je
jmp
mov
xor
add
xor
push
outsl
bound
lea
jmp
mov
cmpl
push
fcomi
add
or
add
adc
outsl
repnz
add
scas
pop
lret
sub
xchg
hlt
cmp
push
lcall
xchg
mov
imul
inc
adc
push
iret
jg
pop
add
mov
rclb
cmp
mov
and
lea
mov
outsb
movsl
sbb
dec
or
rolb
pop
or
or
loopne
imul
sub
jae
cmp
or
or
aas
insl
js
ret
and
mov
insl
roll
movsl
push
jnp
cmp
xorb
lret
or
test
or
loope
inc
or
les
rcll
nop
push
xor
loope
or
test
sub
mov
int
jmp
jp
pop
pop
mov
sub
or
sub
jl
pusha
ror
push
nop
adc
xchg
test
js
dec
in
iret
aad
data16
popf
sub
sub
movb
lods
es
xor
pop
test
js
mov
xor
jle
xchg
lods
pop
push
jg
add
add
bound
inc
xor
mov
pop
ret
or
jne
mov
into
mulb
or
sbb
push
lea
mov
push
cmp
movsb
cmp
jecxz
insb
imul
ja
subb
jl
or
cmpsb
outsl
imul
mov
add
inc
adc
fmuls
adc
outsb
mov
outsb
adc
mov
insl
sub
add
rcrb
jecxz
das
sbb
pop
cmpsl
cmovg
aaa
pop
pop
add
jnp
je
jge
jae
push
call
add
or
fdivrl
repz
or
xor
cmpsb
iret
sub
jae
lahf
push
insb
insl
test
pushf
or
cmpsl
dec
loopne
sub
push
jmp
add
push
insb
movb
insl
cmp
sbb
push
push
stos
or
add
scas
adc
add
xchg
lahf
aam
rcl
lock
icebp
xchg
sub
cld
sti
inc
xchg
dec
je
or
inc
mov
in
pop
jmp
pop
sub
inc
adc
push
fsubr
arpl
inc
mov
push
iret
add
out
inc
and
into
xchg
jmp
out
fiaddl
lods
fcoms
and
dec
cld
sub
sbb
imul
test
and
jnp
leave
nop
nop
in
ja
sub
add
dec
cmp
imul
pop
ja
jnp
push
sub
adcl
inc
and
or
pop
or
jo
or
mov
jg
add
dec
or
call
xchg
adc
jno
inc
dec
add
shrb
sub
adc
push
orb
aaa
arpl
push
daa
sbb
sbb
dec
mov
push
cmp
jbe
gs
inc
hlt
divb
jb
sub
insb
daa
cwtl
push
lods
inc
adc
mov
test
scas
adc
pop
notl
adc
js
inc
in
mov
or
mov
inc
lret
sbb
jg
out
jle
je
je
mov
xor
mov
add
jl
testb
leave
fildl
jo
sbb
or
jbe
pop
daa
or
mov
xor
sub
inc
or
mov
add
or
dec
pushf
pop
js
xchg
subl
movsb
pushl
dec
and
and
repz
or
or
add
insb
jmp
push
jbe
xor
negl
push
dec
nop
mov
jae
add
jnp
insb
rcr
mov
insb
push
jl
sahf
ret
scas
aad
inc
push
fwait
pop
pusha
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
sbb
cmp
xor
xchg
inc
push
xor
nop
dec
sahf
mov
scas
call
int3
nop
call
ja
incl
mov
adc
add
push
in
and
xchg
es
xchg
mov
mov
xor
xor
push
and
jg
xchg
pop
or
fbld
inc
loope
mov
sub
push
out
orb
push
push
repnz
lods
adc
and
cmp
jl
ja
sub
fmull
std
xor
lahf
lcall
neg
sbb
imul
or
das
dec
push
movsl
xor
loopne
subb
xor
cmp
jl
pop
jg
jo
jge
ljmp
adc
inc
cmp
jl
cmpb
jne
insl
mov
or
pop
dec
shlb
pop
dec
adc
clc
push
test
je
stos
inc
add
ret
sub
or
movsb
fldl2t
push
dec
ret
add
cmp
mov
mov
add
push
roll
jmp
icebp
negl
aaa
fwait
insl
sbb
hlt
inc
push
push
push
jl
dec
add
push
mov
sbb
inc
shll
pusha
fistpl
out
outsl
pop
xor
mov
cli
pop
ja
push
cmp
xor
mov
sub
jbe
test
inc
lcall
mov
adc
jnp
add
or
jge
or
cmp
push
cli
es
sbbl
pusha
scas
js
sbb
and
dec
lock
push
lds
sbb
and
mov
adc
nop
shr
push
sbb
sbb
lds
ja
pushf
je
sbb
sbb
add
add
out
popf
adc
sub
push
gs
bound
dec
mov
inc
cmp
mov
mov
aam
rorl
hlt
jge
movsl
movsl
mov
mov
ret
mov
jb
lods
push
mov
mov
les
mov
aaa
inc
dec
mov
lea
inc
mov
jns
jne
push
dec
mov
loopne
loopne
xor
psrld
fsubrl
fdiv
and
enter
loopne
repnz
dec
xor
aam
hlt
shlb
loopew
and
movzwl
and
cmovl
nop
sub
adc
in
mov
adc
daa
xchg
xchg
hlt
xchg
in
and
push
mov
push
daa
mov
jne
pop
mov
fsubrl
mov
xchg
push
lea
cmpl
outsb
js
jl
mov
inc
cmpb
nop
ljmp
inc
inc
jb
into
pop
nop
push
mov
pop
leave
and
clc
in
sub
mov
lods
xchg
lock
pop
mov
or
in
mov
dec
dec
dec
dec
cs
dec
out
stos
xchg
dec
adc
addr16
insb
imul
add
addr16
inc
pop
pop
daa
sub
in
mov
fistpll
jnp
insl
imul
insw
js
push
adc
dec
lds
insl
jl
insl
jp
mov
fadd
xchg
repz
sub
push
add
jg
mov
in
or
dec
jns
xor
outsl
scas
outsb
je
repz
fwait
add
xchg
inc
mov
mov
mov
outsb
add
add
cmp
xor
jmp
mov
cmp
sub
mov
cmp
jle
mov
inc
push
daa
jg
loopne
push
inc
mov
mov
mov
or
lods
lods
pop
lea
out
test
mov
ja
cs
jnp
nop
fs
sarl
addr16
push
add
xor
add
jne,pn
cwtl
sub
jo
popa
dec
fnstcw
cs
pop
or
xor
xor
pusha
inc
pushl
cltd
jne
push
mov
lahf
lahf
cmp
add
pop
or
push
clc
pop
mov
inc
jne
adc
movsl
adc
fadds
lcall
mov
mov
idiv
add
push
xor
nop
int3
je
xor
xor
push
mov
mov
in
fwait
add
data16
cmp
ja
pusha
cmpsl
pusha
xchg
fs
subl
mov
add
push
ficoms
jb
sbb
or
or
mov
mov
xchg
test
sbb
lcall
adc
xor
aad
or
mov
test
cmpl
inc
push
add
xor
sahf
fdivrs
jnp
mov
and
or
sbb
les
andb
jp
or
in
push
aad
add
arpl
add
rorb
in
js
push
add
fldcw
outsl
shll
sub
pop
call
cs
xchg
test
adc
test
cmpsl
mov
stc
cmp
mov
sub
sar
mov
data16
call
xor
or
sbb
lock
jmp
lea
cmp
fistpl
mov
jp
movl
or
jns
push
mov
and
pop
add
push
imul
aas
jae
arpl
adc
sub
and
push
loopne
pcmpgtw
cmp
add
sysexit
mov
jb
jecxz
dec
fimull
push
xchg
jno
inc
les
ds
add
adc
iret
hlt
icebp
sbb
and
xor
mov
adc
cltd
mov
inc
sbb
adc
adc
or
mov
mov
not
jg
push
and
mov
add
add
add
dec
sbb
clc
daa
clc
ret
and
mov
add
inc
cwtl
movswl
push
cld
add
dec
mov
aaa
call
sbb
push
cmpsl
cmp
cmp
jnp
clc
ret
jmp
in
stos
add
xor
or
lods
in
xor
mov
mov
movb
mov
mov
adc
fldl
or
movl
test
cmp
sbb
lea
or
arpl
fistpl
adcb
andl
jl
fs
cmp
aaa
push
cmpl
jb
mov
or
adc
jne
test
test
push
shld
mov
add
outsb
xchg
add
push
add
jbe
and
sbb
mov
or
mov
cltd
cs
and
mov
insl
icebp
pushl
mov
pop
lods
adc
sbb
jbe
jle
mov
add
stos
fiaddl
ja
push
cmp
scas
subb
add
sbb
insb
je
sbb
in
orl
aaa
add
sbb
jbe
adc
mov
xchg
mov
scas
ret
mov
test
xchg
scas
cmp
mov
mov
pop
cmp
popf
imul
sub
clc
jle
cmp
mov
test
or
mov
mov
dec
je
sbb
sub
ficomps
rol
decb
sbb
add
es
push
jmp
cmp
or
push
sub
jle
lea
roll
or
mov
or
test
ja
sbb
jecxz
movb
mov
sbbl
sub
or
and
in
int
jne
pushf
rorb
adc
xchg
inc
adc
adc
fildl
mov
add
xor
cmpsb
xchg
lods
mov
sbb
pop
clc
adc
sub
subl
es
sbb
lds
cmp
push
not
add
jo
xor
rol
push
or
push
out
xchg
sbb
xor
or
push
and
shr
or
mov
push
jge
repnz
inc
inc
out
rorb
fnsave
mov
lods
nop
xchg
cs
push
aam
nop
outsb
ret
mov
add
insl
cld
mov
add
test
shrl
add
subl
prefetcht1
fisttpl
jmp
movl
mov
add
or
adc
xor
pop
roll
push
push
xor
xchg
sti
repz
pop
push
mov
je
lock
iret
mov
jge
or
out
mov
push
add
push
add
mov
sbb
mov
leave
pop
add
insl
xchg
cli
or
add
mov
xlat
add
jnp
cmpsl
outsl
add
pop
dec
gs
cld
popa
jb
add
sub
mov
and
repnz
and
or
popa
call
outsb
jae
data16
clc
and
fsubl
push
das
and
outsl
insl
jo
imul
mov
shl
jmp
sub
or
cmc
mov
jbe
dec
mov
inc
adc
repz
ljmp
cmp
inc
inc
jge
call
xor
sub
pushf
xor
hlt
ljmp
test
dec
rorb
jns
dec
ss
cmp
jmp
sub
mov
rcrl
out
mov
add
adc
stos
fwait
ret
cmp
push
push
popa
adc
test
les
rorl
sbb
mov
and
cmp
adc
outsl
mov
es
inc
mov
push
mov
ret
inc
jle
pusha
add
in
add
push
xor
jb
xor
in
bound
jl
jne
pop
mov
adc
push
fs
imul
shr
lahf
sbb
and
ret
dec
mov
jne
clts
add
cmp
sub
pop
add
cmp
std
fsub
adc
mov
cmp
or
pop
in
mov
jmp
in
push
fisttpl
clc
in
add
inc
aaa
mov
add
dec
out
push
pop
mov
xor
mov
ret
or
orl
or
inc
fwait
mov
pop
pop
dec
dec
sub
mov
jnp
add
adc
adc
nop
inc
push
cmp
in
or
push
cmp
nop
or
or
add
nop
inc
push
rdpmc
mov
push
jp
mov
enter
xchg
ret
rcl
leave
xorl
xor
in
and
sbb
fildll
pop
add
fnstcw
rcr
jb
and
push
pop
or
lods
in
sbb
rcrb
or
and
andb
rcrb
or
insb
call
int
add
adc
shll
divl
frstor
testl
jmp
sub
ljmp
rcll
and
add
addr16
mov
add
cmc
dec
jbe
pop
mov
or
out
fcomp
pusha
in
pop
or
test
in
mov
pop
test
sbb
mov
fstpt
andb
cmp
adc
test
mov
mov
cmp
or
xchg
dec
xchg
or
mov
or
and
pop
test
lock
pop
mov
fisttps
adc
and
sub
subl
mov
addr16
xor
mov
loop
hlt
negl
jge
repnz
sti
push
clc
or
pop
or
jae
loopne
sbb
pop
jl
add
insl
or
adc
mov
sbb
mov
push
cli
inc
mov
cli
stos
cld
mov
pop
sbb
xor
pop
insl
bound
roll
insb
mov
adc
dec
adc
out
inc
sbb
movsb
loope
stos
push
dec
ror
negb
add
push
push
xor
and
lret
push
inc
cmp
or
lods
jo
sbbl
rol
sub
mov
and
fiadds
or
insb
sbb
bound
mov
or
outsb
lcall
sahf
sbb
out
inc
inc
shr
insl
mov
lea
bound
repz
lea
add
mov
mov
lea
add
mov
dec
mov
cmp
pop
mov
push
and
and
mov
lret
inc
sbb
adc
dec
push
pop
or
sub
dec
inc
sub
and
pop
pushl
sub
inc
aad
mov
or
or
jae
and
sub
call
or
pop
test
popf
push
xor
jp
push
loop
mov
nop
mov
and
inc
sbb
push
inc
movzbl
jae
cmp
adc
ss
pop
fcompl
mov
sbb
shrl
fisubl
push
sbb
cmovo
push
push
pusha
pop
ljmp
mov
daa
inc
das
fsubrl
push
or
pop
subl
ret
cmc
es
inc
imull
jge
iret
push
jl
sbb
and
or
mov
ret
add
mov
jmp
sub
popa
arpl
je
ficoms
add
psllw
add
mov
scas
mov
add
inc
adc
ss
arpl
dec
pop
iret
inc
push
ret
in
xlat
into
or
icebp
dec
jg
sbb
ret
mov
lret
into
das
push
pop
inc
data16
hlt
data16
jmp
mov
fnstenv
mov
cmpsl
adc
inc
lahf
jmp
test
add
test
jbe
push
or
and
out
jmp
jmp
mov
sbb
pop
inc
lds
loope
int3
or
daa
mov
or
divb
sahf
xor
pop
in
lods
out
lahf
mov
lods
jl
or
in
mov
std
rcrl
mov
ljmp
mov
or
mov
push
sbb
mov
insb
scas
xlat
push
add
std
pop
fldcw
add
shr
lea
rcll
add
jg
dec
add
xorl
jecxz
xchg
mov
je
out
cmp
pop
outsb
push
adc
incl
pop
or
mov
dec
lret
pop
mov
adc
add
inc
or
iret
add
inc
xchg
cmc
jo
cmp
arpl
fdivs
push
add
add
add
les
add
adc
cmp
aas
or
sbb
jno
cmp
sbb
arpl
mov
test
jg
sahf
jge
aad
mov
rcrb
jne
ss
push
inc
movsb
mov
pop
fdivl
pushf
mov
xor
xlat
adcb
sti
adc
xor
sbb
and
sub
lods
dec
dec
sub
test
loope
loope
cmp
add
or
enter
push
mov
push
jge
mov
or
out
mov
mov
push
or
push
push
or
pop
add
sarb
ret
ret
fnstenv
shrl
bound
inc
sub
out
xor
adc
aas
sahf
insl
and
cmovb
adc
mov
sbb
sbb
xor
out
cld
or
sbb
out
jl
xchg
inc
cmp
add
fistpl
jnp
and
insb
jo
sub
insb
add
adc
lods
mov
shrl
mov
push
mov
aad
inc
push
and
sti
add
shlb
adc
addb
pop
add
lods
lods
add
adc
imul
testl
and
sbb
pop
dec
stos
dec
sbb
rcrb
jo
and
adc
or
xlat
ret
les
mov
and
dec
fistpll
jge
and
add
bound
daa
cmpl
push
jb
sub
das
das
das
outsl
add
je
dec
je
pop
je
addr16
cvtdq2ps
sub
xchg
sbb
popa
xor
sbb
sbb
and
cmp
lods
sub
inc
or
mov
dec
std
ret
ja
sbb
or
fwait
or
jle
xchg
cmp
push
icebp
out
ret
and
push
sbb
xor
ret
mov
or
xor
sub
pusha
xor
jbe
mov
ljmp
and
adc
mov
fwait
dec
xor
ss
imul
mov
sarb
inc
inc
cwtl
xor
orb
or
pop
mov
push
sub
add
lea
sbbb
or
lea
xchg
xorl
cs
add
add
xchg
adc
mov
pop
or
mov
or
orb
rcrl
adc
or
sub
mov
cmpb
pop
sbb
pop
xor
xchg
push
push
hlt
outsb
jno
push
mov
add
or
adc
cmp
dec
sub
ds
inc
cmp
lea
loop
dec
pop
cmpsb
loopne
xchg
mov
or
fcoms
xchg
lods
inc
inc
ljmp
push
insb
fucomi
pop
loop
mov
pop
pcmpgtb
inc
jle
nop
inc
sbbl
push
js
push
push
mov
pop
mov
sub
sbb
insb
in
adc
jbe
and
adc
push
and
ds
mov
outsl
pop
xor
adc
xor
pop
cmp
add
cmp
add
or
xor
mov
add
pshufw
sub
pop
jo
adc
insb
loopne
das
cmp
and
or
pop
or
inc
or
jl
inc
push
sti
in
add
or
cmp
jne
pop
xor
sbb
and
adc
inc
nop
inc
or
shll
fidivrs
push
mov
mov
mov
sti
idivb
sarl
xchg
mov
mov
mov
mov
sbb
and
clc
jns
loop
jnp
pop
mov
es
or
sub
mov
das
xchg
push
jecxz
pop
jb
sub
dec
cli
jmp
push
jecxz
or
stc
xor
inc
add
pop
notl
mov
iret
add
pop
add
mov
inc
je
outsb
jecxz
xor
imul
sub
mov
sub
cmp
jge
unpcklps
mov
outsb
movsl
jae
cli
scas
shll
and
jnp
sub
loop
lea
push
icebp
lds
adc
pop
cmp
incl
cmp
ja
push
stc
adc
add
push
hlt
insl
mov
insb
add
imul
cmp
push
lods
lret
add
inc
inc
or
or
cmp
or
inc
sbb
into
push
leave
arpl
dec
jne
push
jb
pop
daa
cmp
decb
test
dec
outsb
xor
or
add
ret
cld
pop
stos
mov
and
cs
xchg
push
inc
adc
imul
sub
jae
push
push
or
sub
mov
mov
out
dec
push
push
add
ja
xor
and
sbb
add
push
or
mov
jo
add
jge
pop
das
pop
cli
push
es
ja
sub
lcall
sbb
pop
add
adc
mov
in
sbb
xchg
push
adc
adc
push
dec
and
js
sub
andb
mov
pop
sbb
fsubr
and
gs
icebp
lret
mov
loop
push
fwait
adc
pop
ja
lods
push
push
adc
add
dec
pop
test
inc
test
push
out
adc
xor
add
mov
pushf
mov
aam
xchg
aam
mov
sbb
push
xor
inc
or
dec
lock
les
sub
cmpsl
or
jo
pushf
ret
xchg
cmp
sub
adc
cmp
pusha
test
dec
cmp
xor
mov
push
pop
jmp
scas
and
int3
shll
cli
lea
lds
ficompl
pop
out
rol
orl
pushf
or
pop
orl
dec
incl
push
sbb
testl
or
add
in
shlb
test
arpl
or
enter
stos
sbb
or
adc
out
or
pop
mov
sub
or
dec
cmp
jno
mov
and
stos
pop
sub
loopne
and
pop
cmp
ja
cmp
or
sub
fdivp
push
inc
dec
inc
dec
xor
data16
dec
jae
in
push
adc
inc
jne
inc
pushf
xor
popa
xor
pop
xchg
adc
cmp
and
push
dec
pop
jmp
lahf
mov
inc
sub
dec
inc
push
loope
or
lds
add
xchg
xchg
cld
call
jo
and
or
shrb
mov
aas
xor
add
dec
andb
or
cmp
inc
cmpb
pop
mov
or
xchg
pusha
or
pusha
addl
pop
xchg
dec
dec
sub
ja
push
cmpsl
or
aaa
sti
or
gs
push
jbe
mov
mov
mov
pop
push
pop
xorb
jnp
adc
push
push
xchg
pop
adc
in
gs
jmp
imul
push
je
sub
jns
push
lds
ja
mov
pusha
out
push
pop
or
and
icebp
test
jne
int3
fs
inc
and
adc
int3
xchg
insb
bswap
cmp
dec
cmp
lret
lahf
mov
adc
movsb
xchg
sub
popa
mov
mov
cmp
cld
add
mov
lods
cmpsl
dec
hlt
xor
push
adc
dec
fistl
bound
inc
lea
lock
sbb
stos
add
repz
fwait
imul
adcl
mov
imulb
daa
scas
iret
mov
mov
insb
xchg
cmpb
cs
fstpt
test
cmpl
test
adc
adcb
stos
xor
stc
insb
add
ret
jecxz
outsl
cmpsl
cmp
in
mov
lret
add
testb
or
mov
fcmovbe
repz
lret
mov
xor
mov
lcall
pop
std
jge
das
jne
mov
lret
mov
add
das
sbb
aas
mov
add
mov
das
mulb
push
jbe
repz
aam
das
mov
jle
adc
jne
nop
push
stc
or
and
aam
mov
in
test
and
out
add
or
jb
pop
or
sbb
pop
ret
add
movd
xorb
push
adc
xchg
xchg
add
add
xchg
inc
test
jl
cmp
not
arpl
jge
push
sahf
add
inc
push
push
push
lret
call
add
call
lahf
adc
mov
hlt
push
adc
fnsave
test
jl
insb
lods
jl
add
sub
data16
add
push
or
mov
mov
mov
orl
lcall
mov
dec
add
mov
inc
mov
imul
pop
shrb
jmp
sub
data16
stos
cmpsb
xchg
testb
push
or
test
add
inc
subl
add
mov
insl
rolb
cmp
je
popa
cmp
sbb
mov
lea
push
cmp
stos
cld
or
pop
or
mov
cli
fisubrs
pop
imul
mov
sub
cmp
jmp
ss
pop
scas
cmp
dec
cmp
lahf
push
push
adc
push
inc
mov
fdivp
ljmp
mov
data16
insl
fcmovnb
add
testl
cs
es
call
jae
jbe
mov
xor
fnstcw
mov
add
lret
mov
incb
add
jle
outsl
out
aam
mov
outsl
lock
jo
xchg
or
lret
push
js
cmp
outsl
pop
adc
add
jg
xchg
mov
and
ds
lds
je
aaa
add
sub
sbb
test
das
movsb
mov
jbe
ljmp
lds
inc
inc
sbb
xor
int
push
js
add
or
mov
cmpl
mov
mov
xchg
jnp
cmp
lsl
cmp
sub
add
jl
in
push
pop
and
sub
add
jl
mov
add
test
shlb
dec
adc
xchg
arpl
orl
subl
sbb
cwtl
in
rcrb
aaa
sub
mov
sahf
push
mov
mov
ret
daa
sub
test
ret
push
mov
push
pop
inc
mov
mov
add
lret
mov
or
pop
add
mov
jo
test
push
mov
mov
fwait
popf
sbb
ja
nop
and
push
xor
mov
and
mov
out
push
fs
aaa
rcll
adc
cs
jne
out
push
pop
add
push
repz
jmp
adc
add
jle
rol
xchg
mov
push
int
mov
jecxz
mov
xchg
pop
inc
dec
add
mov
jle
fidivl
jmp
jmp
cmp
jle
add
pop
ja
add
sbb
je
mov
xchg
push
and
test
incl
or
sbb
int3
sbb
ret
dec
notl
clts
insb
push
mov
insl
or
fs
popf
mov
sbb
xor
sbb
mov
outsb
xchg
sbb
jb
jb
xchg
and
mov
xchg
test
push
in
fildll
push
and
ss
jle
cmp
cmp
dec
push
pop
mov
cld
cmp
addl
cmpb
pushf
clc
sub
cmp
mov
pop
and
decl
gs
dec
cmc
sbb
in
or
sbb
push
add
mov
mov
cltd
sti
enter
sar
pop
sbb
sbb
sar
fs
sub
push
mov
sbbl
dec
jl
call
push
inc
lods
into
inc
sub
fwait
loope
xchg
or
cmp
adc
pop
fsts
mov
add
sbb
ret
enter
mov
cwtl
mov
push
pop
add
insb
std
sub
jmp
fcmovnbe
sti
sbb
cwtl
adc
pop
mov
mov
jmp
mov
or
call
xor
inc
jb
sbb
and
sahf
xchg
sub
xchg
or
rclb
cmc
mov
mov
sbb
cmc
xchg
testb
and
enter
adc
stc
adc
leave
sbb
rcl
jmp
and
clc
add
ret
or
test
add
mov
sub
mov
pop
jns
dec
dec
sbb
ljmp
inc
data16
pop
loope
add
icebp
mov
mov
sub
cmp
jge
mov
add
xchg
test
push
inc
jae
test
add
mov
sbb
and
or
pop
sbb
adc
rcl
cli
or
xchg
xchg
xchg
gs
or
lea
data16
loop
stos
or
mov
enter
mov
in
add
inc
sbb
xchg
ret
sub
cld
mov
cmpsb
outsb
sarl
mov
mov
into
cmp
bound
inc
add
push
jge
shl
test
xor
push
pop
nop/reserved
stc
mov
pop
mov
push
sar
fs
sarl
cmpl
mov
outsb
mov
fbstp
mov
nop
xchg
fmuls
or
mov
fwait
clc
test
inc
mulb
adc
jne
mov
pop
lret
mov
mov
mov
lods
mov
xor
out
aas
dec
aaa
pop
xchg
cmc
adc
push
pop
pop
or
out
cmc
and
nop
cli
or
adc
lret
fadd
test
out
cwtl
cwtl
enter
push
push
out
mov
mov
fdivrs
sub
lahf
or
imul
mov
pop
xlat
xor
popf
inc
sbb
sahf
mov
shrb
nop
insl
out
into
test
jae
rcrb
or
push
push
mov
jbe
xchg
test
mov
shr
mov
xlat
sub
cmp
adc
dec
add
sbb
cmp
jle
mov
xor
dec
movsl
and
sbb
mov
pop
and
pop
imul
adc
or
lret
pop
iret
shll
xor
mov
inc
xchg
sub
loopne
adc
mov
test
jbe
and
fistl
movsb
out
adc
and
mov
push
dec
xorl
lock
dec
push
rol
add
imul
add
lea
jmp
sbb
mov
imul
out
add
or
sahf
jae
and
icebp
lea
pop
int
leave
adc
adc
mov
leave
lret
mov
movsb
out
sub
mov
jg
inc
push
mov
pop
addl
ljmp
loopne
mov
push
xor
shll
leave
mov
jge
dec
push
ret
mov
jns
test
lret
xorb
sbb
push
inc
jne
mov
jmp
and
push
fists
fmull
mov
je
mov
mov
ret
and
lret
test
nop
dec
cmp
push
or
lods
js
add
icebp
inc
sbb
inc
mov
mov
pop
or
mov
add
call
pop
repz
aam
subl
mov
lock
pusha
div
sar
lahf
mov
mov
addb
cmp
insb
xor
adc
push
add
mov
or
dec
mov
or
fwait
in
nop
or
mov
sub
mov
mov
test
gs
jl
add
pop
add
or
cwtl
mov
dec
pop
sub
nop
jno
push
and
inc
mov
sub
fs
adc
mov
xchg
dec
cmp
lea
into
shr
cltd
jo
dec
mov
add
fwait
cltd
add
pop
or
sbb
pop
and
inc
inc
ret
dec
sub
and
popf
sti
mov
out
or
cltd
xor
cmp
push
push
push
scas
mov
lods
rcll
dec
mov
mov
lcall
rcll
push
pushf
enter
sbbb
aas
lcall
in
jo
mov
lods
adc
lods
add
outsl
mov
mov
fldenv
xor
push
pop
inc
jne
rorl
icebp
add
sbb
popf
and
sub
and
pop
out
push
push
sub
add
decl
add
or
add
dec
add
inc
sti
jg
mov
or
adcl
jne
pop
mov
dec
jbe
adc
jne
xlat
sub
jb
jge
and
and
inc
sub
mov
push
add
stc
in
inc
enter
sbb
pop
pusha
and
add
or
leave
inc
inc
ret
sbb
in
mov
enter
leave
in
fimull
mov
fcmovu
not
cs
push
adc
inc
sub
testb
not
sub
sbb
and
mov
cmovbe
inc
fs
fadds
add
lds
sub
dec
enter
adc
aam
shlb
or
jp
addr16
push
in
call
cmp
and
scas
test
rolb
pop
mov
push
adc
sbb
stos
jo
jp
adc
out
out
sub
push
fcomps
or
xchg
mov
sbb
jecxz
add
push
add
lcall
ljmp
add
push
inc
or
repz
mov
das
jl
mov
jg
fbstp
insb
xor
xor
xor
sub
jg
jg
pop
dec
imul
push
imul
inc
jne
jb
push
mov
popf
push
js
inc
js
insb
cwtl
imul
outsl
adc
push
push
inc
outsl
dec
sbb
push
inc
jae
and
push
outsl
mov
sbb
pop
jae
xor
inc
dec
inc
cs
pop
inc
jae
inc
inc
addr16
jae
fildll
and
je
jo
dec
outsb
push
pop
push
fstpt
popa
bound
fistps
jp
lea
xor
inc
xor
inc
push
in
incl
sub
sub
xor
inc
inc
add
inc
xor
inc
jge
bound
arpl
dec
clc
sbbl
add
leave
dec
and
xor
test
es
and
xchg
dec
push
filds
add
aaa
fsubrl
ds
aas
cmp
xchg
dec
es
xor
sub
es
fs
sbb
fmul
fcom
dec
xor
and
int3
les
leave
and
sarb
arpl
sbb
test
out
add
imul
pop
jno
and
cmp
mov
add
xor
stos
or
xor
outsb
jnp
dec
je
add
icebp
fidivrl
cld
mov
inc
fldl
nop
jge
adc
xor
je
jmp
or
jmp
xchg
push
cmp
push
adc
lcall
cmp
add
je
inc
mov
fs
je
inc
shrl
mov
sub
dec
push
xor
xchg
xor
adc
testb
push
xor
inc
push
or
cmpsb
imul
js
pop
enter
gs
loopne
stos
cmc
inc
push
rolb
and
fstl
mov
inc
xchg
cmpsl
cpuid
sbb
mov
pop
jge
or
add
wbinvd
or
pop
add
and
inc
mov
sub
sbb
cmp
push
add
mov
mov
or
outsl
sbb
inc
ds
jle
xchg
movsl
add
or
lea
push
and
lods
flds
push
sbb
dec
push
add
or
add
sub
xor
xorb
xor
fwait
xor
xchg
and
xchg
in
add
ret
xchg
sub
jmp
dec
xchg
mov
mov
adc
add
out
cmp
or
inc
enter
xchg
and
ds
test
rdtsc
hlt
cli
gs
pop
push
push
fadds
pop
push
sub
stos
push
or
jo
loop
movsl
incl
insl
lock
mov
hlt
dec
ja
and
add
aas
mov
jb
lcall
mov
xlat
inc
inc
jo
clc
pusha
add
pop
shlb
mov
mov
rcrl
mov
repz
hlt
dec
add
jmp
outsl
js
mov
push
pop
mov
cmp
mov
add
xor
add
cmp
add
sub
and
push
inc
inc
jge
adc
int
int
and
cmp
fidivl
cld
inc
into
mov
stos
outsl
ret
test
push
icebp
clc
xchg
pop
testl
push
add
adcb
inc
push
in
in
add
shr
cmp
push
les
adc
or
inc
push
testb
push
mov
loop
rclb
pop
hlt
sbb
or
pusha
mov
pop
cld
in
inc
inc
xor
adc
push
ds
xchg
pushf
dec
jno
sbb
shlb
inc
lock
pusha
gs
call
test
sahf
in
sub
loopne
and
dec
fidivl
cs
inc
inc
cmp
mov
mov
shlb
and
std
sahf
testb
ret
fsubrs
sbb
in
cmpsl
ds
mov
and
pop
lock
add
inc
shrl
pusha
jge
add
insl
mov
aas
dec
in
aaa
pop
daa
lret
stc
sbb
insl
cld
cmp
mov
or
mov
and
insb
adc
add
loope
xor
movsl
popa
rcl
or
xchg
mov
add
cmc
sub
xor
cmpsb
imul
pop
addr16
push
in
inc
mov
nop
inc
push
cmp
in
sub
mov
pop
inc
mov
cmp
or
dec
or
fadds
mov
loop
xorl
pop
push
adc
lds
bnd
sub
outsl
mov
xor
add
test
mov
xchg
and
or
add
pop
int3
je
mov
or
cmp
nop
ret
push
sub
sub
cmp
pop
add
dec
out
pusha
fbld
mov
add
incb
add
or
or
add
xchg
dec
xlat
flds
out
add
imul
mov
loopne
mov
cmp
rcll
fcoms
push
in
sub
sub
pop
cs
add
in
aas
pusha
nop
inc
push
in
pop
jnp
inc
push
cmp
loope
add
jge
and
ds
test
clc
arpl
jnp
rorb
movsb
imul
add
div
cltd
add
push
or
out
lcall
popa
jae
cmpsb
imul
insb
lcall
xor
xor
mov
sub
adc
dec
cmpsb
fs
jl
filds
fs
mov
jbe
iret
and
and
aam
in
and
and
hlt
cmp
xchg
out
push
sub
rclb
cmp
or
push
pop
xchg
or
jb
inc
cmp
je
outsl
jns
add
pop
std
hlt
fmuls
pushl
adc
je
add
lea
mov
or
and
inc
rorb
loopne
ds
loop
je
subb
aaa
popf
sub
cmp
add
pop
les
cli
xor
inc
or
in
xchg
notl
out
or
pusha
lret
loopne
add
mov
mov
pop
int
mov
push
inc
inc
pop
add
insl
pop
das
sarb
inc
je
insb
inc
jae
pop
dec
inc
cmc
dec
repnz
enter
push
jo
adc
inc
outsl
ja
in
adc
inc
outsb
fs
outsl
insl
gs
cmp
sbb
sti
inc
paddb
sbb
push
mov
pusha
in
je
or
test
jg
and
daa
lret
stc
aam
mov
mov
fidivl
push
dec
inc
cmp
sub
lahf
leave
jle
inc
push
adc
out
inc
inc
adc
fistpll
pop
jg
in
imul
sub
add
imull
divb
or
pusha
ljmp
mov
push
bound
into
filds
sub
hlt
push
or
mov
push
mov
mov
dec
clc
jnp
sbb
in
and
and
lods
stos
ljmp
les
or
cmp
push
push
jecxz
in
push
mov
inc
adc
mov
and
enter
mov
push
ja
call
aam
push
xchg
popf
sbbb
and
inc
sti
pop
cmp
lret
inc
ljmp
imul
or
adc
adc
inc
xor
inc
rcr
push
jns
outsb
nop
adcl
sti
or
cmpsl
push
or
jle
pop
pop
cmpb
jne
mov
mov
cmpsl
andl
loop
outsl
jo
outsb
ret
mov
imul
aam
add
sub
divl
mov
sbb
inc
and
push
inc
loopne
aaa
push
push
rclb
add
add
xor
mov
fcompl
pop
inc
shlb
gs
sub
adc
mov
movsl
xor
jo
add
cmp
gs
add
mov
rcl
push
in
shlb
or
sub
cmp
add
xor
loope
mov
jmp
fadds
and
mov
test
push
icebp
test
push
push
pop
mov
lods
push
mov
jle
cmc
cmpsb
test
outsl
js
mov
jbe
je
pop
scas
jne
adc
das
and
mov
dec
pop
dec
inc
dec
mov
je
dec
jae
bound
cmp
aaa
xchg
and
lret
adc
jae
jg
add
mov
inc
or
xchg
add
aaa
xchg
cmp
leave
xor
add
jb
pusha
push
fldcw
or
xchg
in
push
mov
repnz
jae
insb
add
mov
or
mov
mov
repnz
sbb
pop
jnp
adc
fmuls
inc
jne
xchg
movsl
and
and
adc
loop
cmpsl
mov
mov
nop
lods
nop
in
jg
in
enter
aad
push
inc
add
hlt
adc
sub
or
push
nop
push
dec
rolb
outsl
pop
in
add
pop
lret
sub
aaa
or
mov
mov
movb
add
lea
jmp
inc
pop
aad
pushf
fidivl
push
cwtl
je
dec
sbb
add
add
lods
sbb
xchg
inc
lock
push
pop
nop
pusha
jae
or
pop
push
cwtl
stos
push
add
in
mov
mov
mov
fsub
inc
mov
inc
outsb
fdivrl
adc
sbb
aaa
mov
fdivs
repz
fsubrs
push
aam
cmp
jmp
inc
dec
inc
sahf
in
int3
push
fs
enter
pop
dec
pop
test
mov
rorl
xchg
sbbb
sti
xor
pop
or
or
or
xorb
mov
xor
fs
sti
lea
sbb
mov
xor
lcall
mov
sbb
pop
dec
mov
xor
lods
sub
sub
xchg
iret
cmpl
cs
sub
push
sub
add
mov
inc
pop
mov
sub
sarb
lods
cmpl
es
aaa
test
sbb
int3
sub
pop
jge
sbb
and
xor
lds
movnti
and
pop
pushf
pusha
lahf
dec
scas
pushf
cwtl
inc
and
enter
js
pop
xchg
popa
enter
nop
add
cmp
or
ret
pop
add
dec
mov
out
mov
inc
push
inc
push
pop
je
push
or
pop
add
cmp
sbb
push
pop
xor
lahf
jl
push
adc
and
add
jg
sub
jl
nop
pop
dec
out
fstp
xor
sbb
movsl
mov
lea
sub
movsb
rorl
es
repnz
loop
jge
stc
xor
js
fisttpl
mov
faddl
xchg
pushf
insl
cmpsb
mov
mov
int3
cltd
lret
mov
aas
xchg
push
out
pop
jnp
sbb
outsl
sbb
dec
dec
cld
sbb
cwtl
sub
enter
nop
xor
cli
das
lock
or
add
push
fcomps
insb
inc
dec
les
sahf
sbbb
lds
adc
and
nop
cld
aam
or
inc
lods
test
mov
pushf
cwtl
jbe
scas
nop
sbb
aam
sbb
xchg
jl
lods
packsswb
or
push
faddl
sub
and
mov
push
sub
mov
and
dec
or
sbb
pop
jp
push
cmp
xchg
and
lahf
int
lods
cld
movsb
sbb
cld
or
enter
sbb
movsb
mov
enter
pushf
arpl
xchg
sbb
cwtl
and
sarl
xchg
inc
sar
imul
xor
repz
fists
adc
aas
imul
dec
dec
xor
xor
cmp
mov
pushaw
jb
loopne
or
call
ret
mov
mov
add
inc
lds
inc
enter
jb
or
sbb
in
sbb
pop
ja
hlt
add
sbb
call
enter
push
into
call
fsubrs
idiv
push
add
cmc
push
lods
adc
sar
hlt
dec
ds
mov
imul
or
pmuludq
pop
push
leave
ss
lahf
ljmp
in
dec
daa
in
sbb
sbb
jb
xor
sbb
sbb
push
pop
and
call
or
add
mov
add
lds
cmp
sbb
test
adc
and
call
movlps
sbb
push
shlb
add
cmp
inc
or
pop
adc
sbb
cmp
fldenv
pminub
into
push
hlt
inc
cmpb
fstpl
adc
fs
lcall
sub
and
inc
push
sbb
pop
mov
mov
lods
test
fs
inc
movsb
mov
push
add
or
enter
rorb
enter
enter
sbb
sbb
and
enter
in
and
dec
add
jns
bsf
aaa
adc
mov
cmp
sbbb
push
push
fbstp
test
cmpsl
add
push
sbb
push
andl
mov
enter
or
iret
ss
addb
xor
insl
and
sbb
mov
pop
xor
and
nopl
cmp
in
cmp
sbb
in
xchg
rolb
xchg
shlb
push
imul
add
or
dec
repnz
pop
pinsrw
push
add
and
int3
out
cmp
in
out
lcall
out
dec
cli
mov
sbb
add
ror
int
pop
inc
in
enter
sbb
sbb
sbb
cmp
rclb
in
nop
inc
or
or
inc
insb
xor
or
pop
stc
data16
lret
push
in
and
in
adc
and
sahf
mov
sub
adc
jecxz
divl
pop
loopne
mov
mov
add
push
or
in
dec
cmp
sub
js
pop
adcl
xchg
sbb
mov
repnz
mov
es
decw
cmp
insb
and
stos
dec
hlt
sbb
iret
sarb
or
cmp
and
adc
sbb
or
xchg
xor
lret
and
in
xchg
lock
negb
push
mov
pop
mov
adc
addb
dec
add
push
xchg
faddl
outsl
push
or
push
movsb
imul
add
dec
inc
or
push
adc
popa
inc
and
add
das
jecxz,pn
inc
sbb
mov
and
popa
in
adc
xor
xchg
leave
lock
add
mov
pop
and
js
sbb
sub
shrb
and
out
dec
decl
sti
add
sbb
es
jb
push
frstor
add
lret
iret
add
add
rorl
add
or
dec
shll
mov
pop
mov
aam
mov
loope
cmp
mov
nop
insl
push
movsb
jmp
adc
xchg
mov
adc
and
inc
icebp
sbb
lret
xor
xchg
daa
add
mov
fdivrp
and
xchg
and
or
xchg
adc
add
dec
unpckhps
sbb
add
adc
mov
sbb
add
sbb
inc
mov
add
es
jno
add
xchg
xchg
add
cmp
pop
or
gs
add
ret
xchg
xor
mov
repz
sub
inc
push
xchg
push
loopne
sbb
dec
stos
mov
xchg
pushf
movsb
mov
sub
jbe
mov
dec
inc
sub
jno
mov
xor
add
mov
inc
lret
negl
add
rcrb
lds
fisttps
and
inc
sub
sub
push
je
xor
xchg
sub
jmp
hlt
and
sub
fs
in
push
adc
mov
dec
clc
loope
pop
ret
cmp
xchg
shrl
aam
mov
pop
push
inc
popa
clc
add
sahf
pop
pop
mov
loopne
pop
jno
stc
je
scas
add
test
sbb
jae
mov
add
inc
mov
push
jle
push
int3
out
xor
jo
dec
fs
aas
cmp
adc
jl
addr16
inc
cmp
pop
mov
fdivrl
icebp
push
inc
imul
pop
divb
mov
pushf
push
sbb
divb
push
inc
dec
jnp
inc
cmp
shrb
cmp
mov
or
fidivrs
lods
inc
mov
or
fnstenv
add
cmpb
push
fdivrl
or
aam
sub
insl
mov
test
add
adc
xchg
ljmp
pop
dec
mov
loope
mov
in
fisubrl
lock
dec
ds
mov
js
sub
std
sub
mov
sub
clc
dec
mov
and
or
dec
mov
pop
fstps
and
sub
sub
stos
shl
fwait
xchg
js
mov
mov
mov
ja
sub
or
les
ja
stos
daa
mov
pop
inc
std
dec
inc
mov
leave
call
in
ret
adc
xor
fwait
sub
or
pop
jo
test
push
shll
scas
and
test
je
leave
movsl
cs
stc
xor
push
or
mov
xchg
lret
pop
jecxz
jp
fs
cmpsb
jmp
lcall
subl
add
or
or
nop
loop
xchg
xor
js
mov
adc
push
aaa
stos
pop
push
sub
lcall
push
adc
push
cmp
es
mov
loopne
scas
mov
icebp
mov
lds
pop
push
jno
jp
ret
mov
push
aas
das
ds
cmc
mov
in
mov
data16
in
mov
cmp
mov
sahf
icebp
push
mov
or
subl
adc
incl
add
push
ret
xchg
push
pop
xor
add
je
xor
jns
cs
orl
mov
cmp
or
fwait
pop
jp
nop
and
loop
gs
inc
lods
mov
mov
add
xorb
mov
sub
scas
popf
mov
negl
push
sub
aaa
mov
arpl
sbb
ret
xor
inc
cmp
or
inc
mov
sub
add
repnz
fs
ss
push
jmp
out
xor
lods
push
mov
dec
push
insl
pop
or
adc
cs
adc
cmp
push
xor
pop
lret
push
rol
jg
inc
or
jne
mov
in
pop
or
outsb
sahf
dec
or
cld
dec
mov
jae
sub
adcb
jb
push
mov
cltd
jl
daa
or
push
clc
xor
push
and
cmp
xor
push
sbb
pop
xchg
xor
mov
nop
jg
xor
pop
sbb
push
mov
or
sti
cmp
insl
in
jl
add
call
add
mov
xchg
and
lds
push
or
mov
mov
sub
mov
loop
cmp
dec
orl
adc
add
adc
mov
ret
push
mov
fcoms
aam
int
aam
xchg
arpl
ljmp
adc
mov
inc
aas
xchg
adc
mov
mov
iret
and
mov
incl
push
push
mov
push
in
push
push
lea
lock
add
push
fldl
call
inc
insl
mov
orb
xchg
je
sub
inc
jbe
sbb
add
cmpsl
shll
jge
ret
test
sbb
js
mov
mov
shufps
fadds
hlt
cmp
sbbl
scas
pushl
mov
push
imul
popa
fidivl
and
cmc
lcall
mov
adc
and
arpl
mov
xor
sub
sbb
inc
xor
push
xor
sub
push
pop
or
mov
in
outsb
push
jo
js
xor
jae
nop
add
xchg
pushf
xor
xor
movl
and
js
je
aaa
stc
dec
aaa
add
je
je
shll
cwtl
xor
cmp
ret
or
push
cmpb
push
and
xchg
loopne
pop
pop
repnz
ds
dec
add
inc
adc
xor
enter
repz
hlt
std
imul
sbb
add
cmp
int
inc
nop
ss
xchg
or
cmp
arpl
clc
cmp
std
mov
mov
addr16
sbb
pusha
out
or
sbb
pop
add
sbb
lret
loop
pop
push
mov
js
repz
pop
movsl
jne
test
add
inc
adc
xchg
jl
fwait
inc
sbb
loop
mov
push
insb
insl
inc
and
inc
stos
cmpb
push
or
fimuls
shrl
int
movl
dec
add
pop
sub
push
nop
loop
mov
pop
sub
or
xor
sbb
push
push
inc
test
jmp
das
push
add
dec
mov
push
and
das
mov
lret
call
std
push
aas
fucomi
add
clc
cmp
xor
jge
jne
test
mov
sub
aad
xchg
mov
sbb
adc
push
xchg
dec
std
mov
aas
sar
adc
and
mov
shr
rcl
andl
cmp
aam
cmp
lcall
scas
add
inc
pusha
cmpsb
jmp
fwait
add
aad
and
pop
cli
fisttps
adc
add
pop
nop
or
outsb
sbb
jb
pushf
sbb
sbb
push
fadds
jb
sbb
fcomps
inc
je
or
jb
and
adc
call
sti
push
add
mov
icebp
push
and
sub
sbb
cmp
jle
jge
sub
add
cmp
xor
pop
inc
push
je
xor
mov
jp
xor
es
xchg
mov
and
out
xchg
pop
es
dec
inc
mov
cwtl
cld
enter
mov
lahf
insb
pop
sub
out
ss
add
jno
xchg
pushf
and
in
ret
popf
addb
cmp
mov
jmp
push
fstps
add
or
fcmovne
sub
test
jl
inc
xor
jp
data16
rorb
cltd
idivl
jo
mov
lea
push
add
xchg
xchg
mov
xchg
test
shrb
cmp
daa
stos
sub
jne
inc
push
push
fiaddl
pop
sarl
dec
gs
shll
call
fnstenv
lahf
enter
cs
xor
movsl
add
lcall
and
jns
lahf
pop
xor
add
dec
jne
mov
push
sub
add
imul
push
sbb
ret
add
dec
or
and
add
sub
movsb
out
testb
xor
int3
cltd
sub
test
js
dec
sbb
jg
aaa
test
cli
shl
or
shl
daa
adc
pop
push
pushf
arpl
add
ret
adc
push
cmp
es
hlt
jecxz
nop
lock
mov
dec
inc
inc
subb
gs
or
sbb
inc
sub
sub
maxps
rorb
or
inc
add
add
pop
dec
ret
pop
cmp
or
push
adc
neg
rolb
and
cmp
jg
add
mov
inc
fisttpl
adc
xchg
pop
xchg
test
adc
inc
aaa
jge
add
aam
inc
mov
add
adc
lea
ret
xor
fists
in
cmp
jl
addr16
insb
filds
test
inc
inc
or
add
cmp
and
dec
pop
push
clc
mov
xor
cmp
outsb
ja
fadds
int3
push
or
mov
sbb
test
mov
or
mov
or
or
ret
shrb
ja
sbb
and
cmp
sbb
lcall
push
cmp
cmpl
mov
js
or
stos
cmp
jg
flds
xlat
test
adc
push
mov
push
pop
push
mov
sub
lahf
aas
push
repnz
or
cmpsb
or
or
movsb
subb
mov
sub
rolb
dec
add
js
ds
push
popa
add
adc
or
aaa
sbb
add
cmp
adc
or
add
es
xor
push
jae
into
outsb
mov
mov
adc
mov
neg
push
pop
cli
cmp
ja
inc
clc
xchg
push
sbb
mov
add
jecxz
cmpsl
roll
enter
add
or
ss
adc
std
adc
xchg
mov
mov
mov
inc
orl
mov
push
arpl
mov
mov
nop
sbb
popl
push
notb
add
or
insb
sub
pop
mov
push
mov
jg
rorl
cwtl
add
rolb
pop
push
push
fstp
fcoms
dec
outsb
push
or
push
push
dec
pop
repnz
add
jmp
pop
push
in
gs
inc
jns
mov
pop
nop
inc
sbb
mov
or
xor
sub
push
sti
pushf
loope
test
or
xchg
mov
inc
cmp
or
and
test
jb
inc
jno
mov
outsb
mov
dec
add
imul
fisubrl
xor
pusha
sbb
je
or
sub
in
enter
test
xor
sub
dec
adc
rorb
dec
add
mov
insl
inc
xor
fs
je
inc
les
jo
pop
clc
push
imul
clc
xchg
jne
cmpsl
in
inc
mov
or
push
sbb
mov
adc
lahf
xor
sub
mov
xchg
pop
xor
mov
add
fcoms
inc
inc
pop
cs
push
inc
pop
inc
pop
or
dec
push
popa
inc
ss
xor
repz
lock
pop
enter
call
or
scas
sbb
and
mov
in
jl
add
mov
dec
lock
les
dec
daa
or
subl
ret
or
fildl
jbe
jl
movq
rolb
inc
inc
and
jle
stos
cwtl
adcb
push
or
sbb
dec
mov
jmp
outsl
test
sarb
sbb
push
push
push
cmpb
mov
or
adc
or
insb
dec
cmp
add
cmpsb
and
add
or
lret
lcall
dec
add
and
or
inc
jge
cmp
pusha
pop
jle
mov
mov
fdiv
push
xorl
or
pop
sti
jle
xor
push
push
or
ljmp
add
ja
cmpsb
ficomps
or
call
inc
mov
mov
dec
sar
jmp
inc
mov
add
insb
shlb
subb
loop
sub
sti
mov
or
cltd
and
mov
hlt
pop
imul
mov
out
int
xor
test
lcall
cli
arpl
and
mov
in
ret
push
add
or
jnp
fcoms
mov
sbb
inc
sbb
mov
or
mov
sbb
sbb
push
add
pop
fildl
cltd
dec
fldenv
add
adc
popa
cwtl
fsub
pop
fildl
decl
int3
popf
shrb
adc
dec
add
add
repnz
pop
faddl
xor
lea
icebp
add
mov
and
cmp
cwtl
push
sbb
mov
and
jl
push
js
mov
inc
pop
xchg
xor
pop
dec
dec
add
jl
or
les
pop
and
in
fidivl
inc
adc
in
movsl
or
push
xor
and
bound
repz
add
adc
repnz
dec
or
dec
lods
cmpl
sbb
sbb
or
mov
orb
xchg
push
inc
jne
mov
cmp
push
or
cmpl
pop
jb
jo
test
sbb
aad
jmp
inc
xor
sub
incl
add
push
and
xorb
sbb
test
jo
jge
mov
pop
test
jb
jnp
in
and
inc
push
add
lea
ljmp
mov
adc
push
movsl
nop
data16
mov
pusha
pop
jbe
cmp
ljmp
mov
add
dec
js
std
and
cmp
js
pop
adc
dec
push
shlb
xchg
pop
inc
add
mov
inc
or
dec
inc
and
mov
and
dec
fsts
fmuls
cmp
in
sub
or
jnp
mov
mov
add
and
sub
sub
push
jg
movsb
es
push
dec
add
adc
jno
cmp
jb
xor
filds
lods
adc
mov
andb
jo
cmp
or
sbb
pop
pop
mov
pop
adc
pushf
jmp
xchg
cmp
or
jbe
in
ja
pop
mov
mov
scas
xor
test
addr16
adc
push
and
push
xlat
or
push
mov
and
push
pop
adc
test
jge
lret
fadd
inc
testl
nop
inc
inc
sbb
adc
adc
or
push
hlt
pop
loop
mov
or
imul
mov
xor
sub
and
das
arpl
inc
push
inc
or
xor
sub
imul
add
adc
pop
push
into
inc
mov
daa
or
inc
inc
and
cltd
sbb
cmovnp
xchg
sub
std
in
adc
inc
and
add
lcall
or
fbstp
aam
testl
fsubs
insl
lcall
lods
lods
pusha
je
das
xorl
inc
mov
divb
loop
xor
xchg
adc
enter
icebp
add
dec
fwait
aam
call
in
lea
daa
shrb
aam
faddl
adc
pop
xor
fcmovne
or
je
mov
push
jb
cmp
push
sar
shl
sbb
or
lock
negb
mov
testl
sub
xchg
add
sub
adc
adc
popf
int
add
into
icebp
dec
clc
mov
push
std
push
pop
mov
cmp
push
jbe
push
pop
pop
aaa
je
cmp
lock
add
test
pusha
sub
and
addl
dec
orb
mov
mov
pop
movb
add
sahf
add
inc
or
pop
daa
stc
fiadds
xchg
push
adc
sbb
cmpsl
xchg
mov
pop
aas
fcmovb
shlb
xor
fs
pop
pusha
jp
stos
enter
cvtps2pi
jb
dec
push
xor
push
mov
popa
add
adc
test
sbbl
add
or
jo
dec
or
sub
inc
inc
sub
jae
sub
fucom
mov
pop
sub
push
cmp
inc
data16
aas
mov
inc
push
or
adc
pop
xchg
ret
iret
fs
mov
push
in
orb
rcrb
jnp
push
bound
sub
or
dec
inc
or
jnp
add
sbb
xor
push
adc
lock
cmpb
jne
and
xchg
inc
in
mov
xchg
aas
push
shll
mov
xchg
push
push
shll
xor
or
add
xor
cwtl
pop
adc
sbb
in
mov
popl
push
push
add
sub
mov
sbb
add
out
loop
pop
mov
mov
imul
push
mov
mov
and
jg
sub
inc
and
cmpl
xchg
sahf
arpl
stos
and
pusha
nop
inc
sbb
push
lock
lds
imul
or
je
xor
jg
js
pop
jnp
xchg
lds
xchg
sub
inc
adc
and
push
or
sbb
xor
jne
outsb
rcrb
les
pop
adcl
fistps
jmp
push
cmp
pop
mov
pop
cmp
jbe
pop
adc
xor
xchg
pop
sub
ss
add
add
in
mov
sbb
jnp
adc
out
mov
dec
adcb
xor
jmp
push
mov
pop
or
leave
pop
shr
jmp
and
jno
cmpsl
mov
mov
adc
add
jne
cmp
insl
or
mov
movlps
inc
test
dec
cmp
and
cmp
ja
cmp
add
add
cmp
sbb
icebp
cmp
sub
inc
mov
pop
gs
jo
test
addl
sbb
mov
pop
sub
or
iret
jnp
sahf
ret
loop
jmp
jo
mov
mov
rorb
and
xchg
xor
cmp
xchg
push
fwait
pushw
fsubp
push
lret
pop
adc
shrl
ret
push
push
iret
xchg
pop
jb
std
push
pop
add
rclb
or
inc
jae
adc
and
or
orl
and
cmp
add
cmp
inc
iret
inc
push
mov
pop
pusha
add
movsb
mov
push
jns
gs
xlat
pop
or
inc
pop
or
add
pop
lock
cmc
test
pop
push
mov
mull
sub
call
sub
inc
hlt
daa
adc
add
lret
xchg
nop
lret
in
test
sub
cld
data16
xchg
cmp
adcb
insl
cwtl
pop
push
rcrl
pop
mov
jle
daa
mov
mov
add
sub
sub
fadds
inc
or
mov
repz
pop
in
mov
or
cmp
add
cs
add
ss
xchg
fbstp
mov
adc
mov
lahf
jge
push
jmp
mov
idivb
outsl
dec
push
push
dec
mov
not
inc
mov
and
popa
adc
rolb
fsubrs
insb
sbb
push
sbb
sub
xchg
push
outsl
push
push
push
and
addb
pop
xor
push
add
push
in
pop
adc
push
jno
push
pop
fcmovnbe
sub
add
and
into
dec
loop
mov
test
push
inc
test
add
incl
inc
push
nop
hlt
hlt
or
push
nop
add
lock
loope
xchg
adc
sub
jb
and
pop
xor
mov
imul
data16
and
xor
adc
out
or
sbb
dec
dec
jmp
or
push
sub
mov
push
add
mov
or
fmul
xor
add
push
ficoml
mov
xchg
cmc
push
dec
bound
cs
adc
dec
xor
xchg
lds
stc
cmc
and
push
lds
cld
lods
and
jne
mov
and
or
cs
and
clc
adc
mov
test
inc
or
sahf
flds
pop
pop
fldenv
cmp
les
ljmp
or
inc
ss
leave
es
sbb
nop
nop
xchg
cmp
cmp
mov
sub
lret
mov
mov
lods
movsb
mov
pushf
test
xchg
mov
mov
mov
mov
rolb
jle
jne
mov
adc
insb
pusha
fprem
hlt
mov
lock
mov
ficompl
bnd
pusha
imul
mov
xor
lods
and
and
push
mov
mov
movsb
push
mov
pop
sbb
xchg
fstpl
mov
inc
in
mov
mov
xchg
mov
inc
lock
push
dec
cmp
xchg
push
xchg
pop
dec
dec
dec
jp
mov
xor
pop
mov
push
xor
adc
sub
xchg
adc
call
xor
cs
inc
nop
cmp
sbb
fs
sbb
in
or
rorb
outsb
movsb
fs
sub
dec
aas
push
popa
adc
inc
adc
push
and
sub
xor
adc
xchg
adc
imul
in
jg,pn
dec
inc
jmp
cli
and
sub
sub
stos
add
push
xchg
pop
pop
enter
shlb
add
mov
xor
jg
inc
adc
and
jnp
add
push
test
dec
das
or
add
outsb
imul
imul
mov
push
cwtl
lock
jle
icebp
jg
dec
push
mov
push
or
popf
push
das
fdivl
notb
sub
cs
pop
aaa
push
lret
gs
push
imul
dec
jo
jno
mov
cs
jne
lods
ja
pop
xchg
lret
add
jge
jle
push
or
lcall
add
sub
int
and
cmpsb
arpl
pushf
mov
pop
gs
dec
es
lea
xor
mov
mov
inc
adc
into
pop
sti
daa
add
dec
sbb
mov
add
xor
cwtl
adc
sbb
mov
dec
sub
and
mov
dec
jo
or
loopne
inc
rclb
xchg
push
inc
loop
jmp
adc
gs
lock
push
andb
insb
xchg
and
in
in
mov
scas
add
xchg
mov
xchg
or
pop
pushl
das
outsl
push
inc
inc
fldenv
call
in
xor
dec
ficompl
xorb
add
loopne
mov
iret
add
outsl
fnstenv
jle
fsts
mov
fstps
sub
dec
rorb
adc
aam
xchg
ret
xchg
lcall
push
cwtl
cmp
lret
mov
cmpsb
add
lea
add
push
les
popa
push
movsb
int
push
jecxz
mov
push
in
and
gs
mov
mov
xor
mov
sub
cltd
sub
mov
mov
leave
dec
insb
lock
jae
pop
cmpb
jne
inc
ret
icebp
cmp
jb
or
pop
cmpl
cmp
or
dec
add
pop
and
pop
enter
lods
inc
pop
or
jb
or
mov
or
pusha
sbb
cwtl
adc
push
cmp
int
div
stos
cmpsb
pop
push
test
ret
or
pop
and
and
sub
lods
adc
jne
or
mov
or
xchg
cmpsl
or
or
mov
add
mov
lret
pusha
shrl
cli
or
pop
das
aas
imul
push
rolb
or
aaa
orb
enter
sbb
les
inc
inc
xchg
fs
scas
loope
mov
lret
popa
jb
outsl
xor
pushf
pop
popa
and
pop
sbb
pop
rol
mov
sub
daa
adc
insb
mov
int3
or
push
popa
cmp
addb
add
push
ss
sbb
pop
mov
dec
and
fwait
enter
add
and
sbb
and
les
sbb
sub
and
shlb
inc
jb
icebp
or
addb
add
add
sbb
je
xchg
lret
add
inc
add
pop
cs
fidivrl
xlat
stos
insl
mov
and
sarl
rcll
dec
dec
je
cs
push
xchg
mov
fadds
sub
push
in
aad
add
call
or
mov
push
adc
push
rolb
xchg
add
nop
add
insb
sub
nop
and
jo
lods
pop
rolb
push
pop
call
idivl
stos
fs
stos
add
add
adc
inc
cmp
leave
enter
movsb
xor
nop
dec
cwtl
sbb
xor
sahf
mov
pop
cmp
sbb
sub
in
jmp
cmp
sbb
or
inc
push
dec
cs
dec
sub
xor
cmp
mov
xchg
xor
xor
adc
int3
bound
push
add
cwtl
es
test
mov
nop
and
mov
dec
push
add
mov
mov
and
add
jo
adcb
pop
inc
int
sub
push
adc
nop
test
and
test
xor
lahf
loopne
or
femms
pusha
jo
daa
insb
jne
out
add
lsl
sub
pop
xchg
mov
add
xchg
lods
cmp
orl
fdivrs
test
psllw
shl
adc
enter
or
bound
cmp
mov
and
push
dec
adc
insl
call
fnstsw
loop
mov
ret
inc
pop
push
pop
cwtl
inc
adc
jno
inc
ss
and
add
fdivl
sub
xchg
test
or
pop
xor
or
nop
insb
inc
addb
pop
and
dec
and
jno
adc
sbb
mov
sarl
fs
add
je
sbb
je
and
cltd
ret
cmpl
mov
test
and
cs
lock
pop
adc
and
pusha
hlt
pushf
adc
fs
push
or
mov
pop
jno
insb
mov
add
xchg
icebp
push
cmpsb
inc
dec
aas
lods
insb
sbb
xchg
mov
or
inc
sbb
cmpsl
divl
sub
andl
or
inc
inc
inc
nop
sub
insb
fcmovnu
adc
mov
shlb
popa
popa
packuswb
mov
data16
push
fisubrl
or
imul
adc
pop
inc
js
mov
inc
lahf
cmp
mov
pop
xchg
shrb
enter
les
popa
iret
and
push
push
xor
sbb
in
in
inc
aad
pop
adc
cmp
or
sub
inc
fisubl
sar
mov
xor
xor
push
adc
fs
pop
incb
add
mov
sarb
add
loopne
fs
xchg
push
mov
and
jno
mov
iret
pushf
scas
mov
sub
jb
out
sub
pop
jb
sub
inc
xor
pop
jb
pop
and
sub
psrld
in
enter
cmpsl
pop
fidivrl
push
imul
idivl
int3
inc
mov
sbb
sbb
sub
cmp
nop
addr16
dec
sahf
inc
or
jno
adc
arpl
or
ja
int
xor
and
cmp
xor
rcll
imul
js
xor
test
ret
add
xchg
sbb
sub
or
rorb
pop
nop
inc
lcall
mov
inc
sub
or
popf
fdivl
dec
adcl
adcl
lret
push
pop
lret
push
mov
xchg
xchg
filds
and
dec
xchg
lret
and
or
push
sbb
lcall
jp
enter
mov
in
jnp
push
jl
jge
or
popa
mov
mov
or
or
dec
add
sti
sub
mov
ljmp
ss
adc
xor
call
or
lret
mov
add
and
subl
push
push
test
out
les
push
add
in
xor
jmp
sbb
loopne
sbb
push
push
xchg
xchg
lods
push
sub
jo
loopne
mov
jmp
and
add
mov
xchg
mov
mov
popf
enter
and
cmp
add
dec
xchg
inc
lret
push
inc
ficoms
xor
daa
and
pop
dec
mov
mov
je
xchg
sub
sbb
or
or
jb
sbb
inc
cmp
lock
and
and
xchg
and
sub
cmp
xchg
cmp
test
dec
repnz
rclb
mov
xor
sarb
sbbl
dec
push
jg
stc
push
repz
loopne
add
push
int3
scas
arpl
sub
push
xor
popa
mov
les
mov
nop
das
int3
ljmp
add
inc
add
inc
sub
or
je
pop
sub
push
clc
mov
adc
dec
sub
adc
pop
cmpsl
in
xchg
xor
int3
scas
xchg
leave
ficomps
xor
push
or
or
shr
pop
jmp
mov
sbbl
jmp
scas
mov
adc
sbb
push
adc
mov
and
adc
sbb
adc
dec
sahf
cltd
add
mov
and
daa
and
inc
ret
and
adc
pop
dec
inc
test
rorb
xchg
ds
jo
and
das
adc
xor
push
dec
and
inc
in
pop
jb
arpl
dec
dec
inc
dec
push
push
in
daa
add
inc
gs
je
popa
aaa
ja
repz
addl
inc
popa
jbe
jb
je
pop
mov
popf
insl
outsl
cli
inc
jne
outsb
and
jb
mov
pop
dec
add
or
jecxz
and
imul
inc
xor
testl
outsb
jns
push
inc
push
cmp
lcall
pop
push
push
inc
dec
daa
mov
andb
popa
pop
mov
pop
push
mov
dec
inc
xchg
pop
sbb
cltd
pop
and
pop
push
push
sub
or
test
stos
sub
fwait
xor
inc
imul
xor
mov
dec
cmp
and
jp
push
mov
sub
add
or
inc
pop
inc
fldt
out
cwtl
jno
push
mov
add
push
dec
adc
sub
add
mov
jns
notb
push
sbb
lds
push
pop
push
add
jne
xor
push
test
mov
adc
bound
dec
aad
xchg
xorb
and
cmp
cmp
xor
mov
mov
loopne
jb
add
cmp
daa
cld
in
jg
jb
inc
xchg
lea
cmp
jbe
lods
fwait
mov
inc
inc
xchg
inc
push
inc
fiaddl
dec
inc
jns
lods
ljmp
test
sbb
inc
js
cmp
or
push
or
popa
pusha
ret
mov
push
enter
mov
mov
and
sbb
cmpl
mov
xchg
and
inc
push
sbb
int3
icebp
into
lcall
add
cmp
and
movl
lods
dec
push
or
lea
mov
mov
sbb
js
and
inc
js
fsubrp
rolb
push
and
insw
gs
push
mov
loope
mov
add
xor
add
fwait
or
mov
inc
mov
mov
xor
adc
stc
sub
js
sub
arpl
add
into
repnz
out
or
push
mov
sbb
stc
test
mov
hlt
aaa
jl
mov
and
sub
loopne
addb
data16
push
lds
mov
loopne
loop
xor
push
push
sbb
and
hlt
xorb
and
xor
xchg
pop
cmp
adc
xchg
xchg
and
push
lret
test
and
adc
push
and
push
insl
and
popf
jecxz
mov
lahf
pop
insb
mov
adc
add
inc
adc
pusha
mov
or
cmp
or
and
and
jbe
cmp
in
and
rclb
push
add
fst
add
or
inc
jmp
mov
mov
sbb
or
dec
xchg
sub
aas
pusha
mov
adc
enter
cwtl
mov
adc
jmp
shlb
dec
pushl
xor
stos
pop
imul
outsl
push
push
xchg
addr16
dec
and
pusha
push
jb
xchg
and
movsb
or
push
mov
mov
and
adc
je
push
lahf
mov
ffree
mov
test
in
movb
or
in
push
cwtl
mov
or
and
mov
je
mov
add
mov
cltd
in
insb
xor
loopne
mov
fdivl
aam
lret
mov
es
fadds
fsubs
sbb
add
rclb
dec
mov
ret
push
sub
inc
enter
nop
enter
push
int3
mov
jbe
inc
les
jecxz
inc
sahf
fs
enter
pop
pop
mov
js
inc
add
enter
scas
add
adc
leave
and
pusha
xchg
or
add
sbb
add
js
push
pop
push
test
int
bound
xor
mov
in
add
es
mov
mov
or
add
lods
lods
add
leave
and
test
fcmovnb
fsubrs
add
mov
xor
fisubs
and
ja
sbb
fbld
or
addl
sub
adc
mov
xor
mov
sub
sbb
jl
jne
lcall
sbb
sub
movsb
push
xor
xchg
lea
push
xor
orl
fildl
lea
daa
andl
push
lea
pop
ja
mov
cwtl
gs
xchg
add
int
flds
int3
mov
inc
pop
adc
jb
insb
in
mov
lea
xlat
insl
xchg
xchg
movsb
js
pop
scas
das
scas
int
mov
in
mov
pop
addb
insb
xchg
push
call
sub
push
add
sbb
sbb
lret
fildl
sub
pop
add
mov
mov
and
loopne
daa
add
mov
mov
dec
xor
js
or
sub
cmp
push
xor
pop
addb
add
mov
add
sub
dec
or
mov
dec
ss
dec
xchg
or
sbb
mov
pushf
std
mov
lret
add
sub
in
out
subb
scas
sub
mov
add
mov
js
cmp
mov
lret
adc
int
push
mov
mov
add
jno
fcmovne
pop
and
pop
dec
test
in
jl
jl
nop
mov
lds
cwtl
mov
gs
push
add
lock
jb
jl
pop
shrb
mov
inc
enter
leave
sbb
jmp
cltd
jb
jb
aaa
sub
mov
and
mov
adc
mov
mov
lret
lahf
nop
das
pusha
pusha
and
xor
push
in
or
xchg
cmp
xchg
cmp
les
pop
pop
jge
xchg
sbb
push
push
pop
push
mov
fbld
and
mov
movsl
popa
push
icebp
xor
lock
or
xchg
or
and
je
push
aad
push
sti
or
adc
js
jnp
cwtl
loopne
js
lock
mov
fadds
punpckhbw
leave
jmp
push
xchg
or
add
lret
sahf
sub
and
dec
or
mov
es
mov
imul
aam
mov
shrb
dec
in
mov
mov
leave
mov
mov
ret
or
bndldx
testb
and
add
sub
adc
lea
adc
daa
fwait
add
js
popf
and
lcall
add
enter
enter
fcomp
fxch
loopne
add
in
das
inc
sbb
out
add
push
jne
je
insl
push
add
mov
and
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
xorb
add
sub
scas
pop
pushf
fs
pop
push
xchg
inc
adc
mov
pop
in
in
add
cld
shll
adc
and
shll
dec
push
xor
shll
fs
je
shll
pushf
movsb
dec
shll
int3
aam
cmpsb
in
jg
pop
pop
fsubs
imul
mov
xor
cmp
imul
orl
pop
js
test
nop
xchg
pop
fdivl
mov
inc
dec
push
inc
pop
clc
pop
pusha
or
in
popa
mov
fs
xchg
daa
pop
mov
jmp
jl
fadd
push
pop
and
adc
jle
push
repz
push
neg
ret
rcrl
and
clc
cld
or
sbb
cmp
sbb
ret
mov
lret
dec
cmp
in
add
fmuls
add
mov
data16
daa
add
add
inc
fistl
ds
cmp
pop
or
cmp
add
xor
xchg
cmpb
add
adc
lahf
data16
lock
movsl
mov
jns
imul
cld
xor
cmp
dec
jnp
adc
ljmp
and
insb
jns
mov
test
add
add
sbb
inc
push
xchg
add
inc
ss
push
add
and
or
or
add
sbb
jns
cmpsb
imul
lcall
fsubl
mov
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
mov
mov
or
xchg
pop
xchg
push
push
lcall
xor
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
dec
testl
xor
xor
dec
sub
dec
shll
pop
cmp
shll
adc
dec
xlat
xor
inc
addl
ret
dec
push
shll
mov
shll
add
sbb
xor
shll
sbb
adc
shll
push
push
dec
shll
add
xor
sbb
roll
sbb
test
stos
dec
and
sub
fwait
xor
ja
xchg
or
or
adc
xor
adc
sbb
sub
inc
push
pusha
shlb
shl
jnp
insb
jae
imul
mov
push
push
dec
dec
adc
sti
fiadds
addb
xor
or
fldcw
add
stos
test
fistl
add
adc
dec
aaa
adc
adc
pop
or
or
mov
add
add
xchg
add
add
je
pop
or
or
or
xor
push
xor
adc
adc
adc
or
je
adc
inc
xor
sbb
or
sbb
xor
add
sbb
xchg
icebp
fnsave
pop
adc
adc
inc
xor
and
adc
and
xor
pop
inc
leave
push
xor
sbb
sbb
not
add
nop
xchg
lods
pop
pushf
pop
ss
clc
or
and
test
cwtl
shlb
aam
clc
adc
outsb
fsubl
inc
jne
push
dec
inc
or
jnp
cmpsb
imul
add
mov
nop
add
mov
scas
insb
add
add
xor
adc
add
or
and
in
fsubl
inc
hlt
adc
adc
cmpsl
jnp
mov
sbb
dec
in
dec
in
jo
xlat
jne
pushf
adc
pop
and
cmpsb
imul
aam
movsb
pop
and
mov
mov
fnstenv
xchg
inc
or
into
add
push
add
jbe
idivl
push
movsb
cmp
in
push
aaa
push
sbb
pop
test
mov
pop
or
sbb
insb
setl
jbe
pop
inc
mov
leave
add
jnp
pop
aam
in
pop
daa
roll
ja
push
les
pop
mov
int3
xchg
pop
and
xor
movsb
xor
and
adc
leave
or
scas
jmp
xlat
add
testl
addr16
shll
mov
enter
jmp
xlat
jne
in
inc
inc
lahf
fmuls
mov
and
xchg
mov
fcmovnbe
je
rolb
hlt
je
lods
push
pop
in
and
mov
cmp
lret
dec
loopne
arpl
mov
cmp
mov
sbb
out
aas
verw
cmp
push
mov
adc
and
add
sbb
lock
xchg
mov
adc
add
dec
push
add
adc
or
xlat
sub
add
mov
dec
push
inc
add
jmp
inc
pop
inc
or
pop
or
ret
mov
cmp
je
jl
mov
ljmp
pop
dec
dec
je
insl
jle
pop
push
or
je
sub
or
je
aad
je
ss
ljmp
je
jp
cmp
cmp
cmp
aas
cmp
out
add
sbb
sarl
adc
pop
push
jo
jb
sbb
sbb
mov
dec
je
sbb
outsb
add
xchg
add
aam
movl
cmp
call
jae
mov
outsl
arpl
adc
or
popa
jae
jae
sbb
cmp
jge
inc
mov
ja
jne
insl
sbb
sbb
bound
or
incl
popa
cmpsl
sub
mov
std
dec
aaa
sub
cmpsl
jbe
adc
mov
les
pop
imul
mov
xlat
or
loopne
inc
outsb
sti
inc
push
dec
sbb
mov
mov
pop
or
dec
or
dec
or
call
imul
add
fildl
popa
jb
jge
inc
push
out
aaa
mov
dec
subb
inc
add
push
push
adc
xchg
inc
push
lret
mov
add
sbb
jne
xor
inc
imul
add
cmovle
push
loopne
inc
mov
xor
push
outsl
outsl
insb
jns
fists
and
adc
jae
outsl
je
mov
mov
jo
add
push
xor
cs
into
add
adc
mov
imul
inc
sbb
fisttpl
addr16
adc
push
jg
jne
insb
push
jne
ss
fisubrl
xor
out
or
aaa
mov
out
mov
pop
outsl
adc
gs
mov
ss
sbb
jl
adc
xor
xor
add
push
adcb
dec
and
mov
imul
fldcw
into
push
adc
cmp
sub
dec
sub
in
or
pop
add
push
cmpsl
imul
insb
jmp
and
push
dec
add
ss
mov
inc
pop
loope
sub
dec
or
mov
or
mov
add
popa
pop
sub
inc
mov
pop
fmul
imul
es
imul
inc
push
bound
fidivs
jne
adc
inc
xor
xchg
sub
push
aas
imul
or
pop
adc
mov
adc
mov
adc
dec
push
pop
mov
int3
add
dec
inc
or
add
insl
jns
add
push
jae
fwait
loope
ret
lret
push
add
inc
adc
js
aaa
fwait
adc
fisttpl
mov
pop
imul
push
adc
enter
push
aad
in
bound
xchg
sahf
fildl
gs
adc
dec
mov
or
rolb
mov
adc
jae
jo
les
jb
mov
xlat
sub
outsb
adc
inc
or
jp
pusha
mov
or
int
mov
fdivrp
sbb
sub
push
std
lfs
out
pop
push
outsl
jae
adc
es
in
lock
sbb
test
dec
adcl
pop
mov
sbb
jl
sub
xchg
dec
leave
push
fwait
or
outsl
dec
mov
push
or
mov
sbb
test
out
cmp
insb
push
fcomi
mov
or
gs
jp
clc
popf
jns
or
insb
inc
mov
adc
test
inc
and
xor
fwait
sub
pop
sbb
sahf
push
mov
push
mov
fs
rolb
loopne
and
xor
inc
ljmp
cmpb
pop
xchg
jo
ret
dec
pop
mov
arpl
divb
inc
sbb
fcoms
xor
xor
mov
mov
outsb
push
push
push
insl
pop
push
into
insl
and
insb
sbb
push
or
adc
int
xor
and
mov
loop
push
push
out
pop
mov
adc
dec
into
pop
insb
fsubs
push
mov
andb
inc
xchg
and
pop
push
or
sub
dec
mov
push
sbb
sbb
or
fsubs
xchg
pop
add
and
xchg
push
jae
adc
pushf
dec
push
sub
mov
xor
mov
inc
cltd
push
jp
or
adc
push
pop
cld
dec
adc
dec
cs
data16
fidivs
sub
int
adc
rorl
enter
push
fsubrs
mov
push
stos
xor
shll
dec
push
out
inc
lods
mov
jo
inc
or
in
xor
jbe
shll
xor
jae
or
ja
hlt
ret
mov
xor
lods
sti
sub
jnp
pop
int
inc
dec
inc
or
mov
inc
imul
xor
push
gs
lods
ret
test
push
push
pop
sbb
data16
daa
cmovno
cltd
mov
outsl
nop
cwtl
sbb
sbb
jnp
aaa
or
inc
imul
addr16
bound
mov
cmp
dec
xchg
outsb
push
mov
fimuls
imul
inc
fldl
adc
insb
pop
and
pop
or
push
add
xor
jnp
xlat
fadd
adcl
jno
jae
popa
adc
ljmp
cmp
outsb
fwait
sbb
dec
adc
jnp
or
adc
jno
jne
push
popf
inc
mov
dec
aam
dec
imull
stos
and
out
cmc
popa
loop
and
dec
call
push
jo
xchg
adc
mov
insl
fs
les
jne
pop
ret
pop
jb
iret
pop
cmpsb
mov
loope
xchg
insb
sub
push
inc
outsl
dec
das
cmp
sbb
roll
pop
stos
inc
stos
xor
pop
movsb
mov
cmpsl
dec
sbb
pusha
movsb
mov
and
or
inc
jle
sbb
jne
je
sub
sub
inc
push
lods
sub
cmp
arpl
outsl
js
adc
cmp
push
in
push
cld
or
sbb
jo
dec
cli
es
fwait
int
pop
adc
xor
push
test
pusha
adc
dec
push
sbb
pop
dec
push
and
lods
popf
arpl
xchg
mov
adc
repz
mov
xchg
imul
jge
xchg
xorw
pop
inc
in
inc
push
arpl
dec
inc
dec
popa
insb
jae
imul
arpl
inc
icebp
pop
nop
pop
push
push
push
or
fwait
addb
fsubr
or
jle
lret
dec
mov
pusha
jb
jmp
aam
sbbb
jns
or
or
or
insl
ficompl
push
pusha
insb
ret
lret
sub
push
lret
add
mov
lds
popa
mov
mov
js
pop
shlb
push
xlat
aas
mov
and
sub
push
inc
and
fdivs
or
push
and
sbb
xlat
pop
jae
popa
or
adc
adc
or
jbe
or
push
or
imul
or
sub
arpl
or
xor
pslld
push
inc
add
dec
add
add
pop
inc
sub
add
sbb
andb
adc
or
pop
mov
or
add
add
sbb
adc
jb
push
sub
inc
lret
mov
fwait
pop
add
mov
dec
jle
rolb
add
sbb
add
lods
adc
inc
mov
sbb
sti
orb
ss
and
inc
inc
push
inc
sti
adc
insl
shlb
faddp
js
pop
fsubs
fadd
pop
cwtl
daa
sbb
in
push
ljmp
xor
mov
dec
add
fs
mov
dec
sbb
or
daa
inc
add
push
push
jae
or
dec
lcall
add
lock
add
pop
dec
leave
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
fdivl
adc
jne
adc
