push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
pop
add
mov
add
add
adc
add
mov
add
sahf
or
repz
or
add
add
add
add
add
add
add
fsubl
lret
cmc
and
and
outsl
outsl
outsl
outsl
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
mov
or
test
add
in
add
add
add
add
add
nop
add
sbbb
add
push
add
adcb
add
push
add
dec
add
dec
add
add
add
add
add
add
mov
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
mov
or
test
add
in
add
add
add
add
add
nop
add
sbbb
add
push
add
adcb
add
push
add
dec
add
dec
add
add
add
add
add
add
mov
add
xor
add
adc
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
push
or
in
add
add
add
add
add
push
add
andb
push
add
jns
dec
add
outsl
add
add
add
add
add
or
add
add
or
adc
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
data16
data16
data16
data16
data16
add
aam
cltd
aam
cltd
int3
popf
nop
enter
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
data16
add
mov
mov
lds
ret
stos
icebp
ret
stos
icebp
ret
stos
hlt
lds
int
sti
sarb
sarb
sarb
sarb
sarb
into
cltd
xchg
xchg
data16
add
mov
test
pushf
cmpb
leave
mov
fdivl
ljmp
shll
aad
cli
aam
cli
shll
shlb
shrl
xchg
xchg
data16
add
test
jl
bound
inc
arpl
pop
cmp
aaa
arpl
jp
inc
cmpsb
sbbl
jecxz
xchg
in
cmpsl
cmc
shll
aad
cli
aam
cli
aam
cli
shll
shlb
xchg
xchg
data16
add
add
inc
sub
push
sub
sub
dec
inc
inc
dec
inc
sub
dec
cmp
pop
dec
aaa
mov
lcall
mov
aam
cli
aad
cli
aad
cli
aam
cli
aam
stc
shlb
xchg
xchg
data16
add
pop
cmp
xor
test
lea
push
paddsb
sub
out
xor
inc
and
inc
sub
mov
xchg
les
aad
cli
xlat
mov
aam
cli
shll
xchg
xchg
data16
add
jl
bound
sub
ja
mov
out
push
dec
lods
mov
stc
paddsb
daa
lock
inc
and
arpl
lcall
cmpsl
cmc
shll
aad
cli
aad
cli
aad
std
sarb
data16
add
add
add
add
push
xor
fsts
sti
lea
lea
movsl
mov
mov
in
mov
mov
les
lods
mov
lock
lock
mov
leave
mov
lock
stc
aad
cli
fdivrs
mov
xchg
xchg
data16
add
add
add
add
das
fiadds
out
push
in
sar
div
cld
idiv
in
loope
int
fwait
test
sbb
ljmp
int3
out
inc
xor
cmpsb
sbbl
not
mov
fnstcw
xlat
mov
xchg
xchg
data16
add
add
jne
pop
mov
sub
push
push
cli
idiv
cli
idiv
cld
idiv
cld
repz
loopne
fwait
test
xor
xor
jp
inc
leave
mov
lock
mov
sarb
data16
add
add
push
xor
out
push
rolb
push
out
clc
jmp
cld
idiv
std
cld
cld
repz
out
out
call
loope
test
xchg
mov
stc
inc
inc
dec
push
xor
mov
mov
int
cli
fnstcw
fnstcw
xchg
xchg
data16
add
mov
mov
sub
mov
imul
clc
call
mov
sar
bnd
repz
test
cld
les
jp
rdseed
xor
cmpsb
sbbl
cli
fnstcw
fcmovnb
std
sarb
data16
add
inc
mov
pushf
inc
pop
sarb
lret
jmp
repz
xchg
pushf
inc
pop
mov
movsl
std
in
std
fmulp
hlt
lds
xchg
subl
sbb
and
pop
inc
aad
xchg
int
stc
fadd
sti
faddp
cli
fcmovnb
sti
sarb
data16
add
daa
pushf
inc
pop
pushf
inc
pop
sarb
les
fadd
in
mov
pop
add
or
jns
add
add
push
in
mov
cld
les
jge
popa
dec
xor
dec
xor
pop
dec
aaa
cmpsl
mov
shlb
vpsrld
data16
add
daa
mov
mov
rorl
in
mov
cli
lret
mov
mov
pop
or
addr16
add
pop
add
pop
add
or
addr16
add
insb
push
in
stos
xchg
in
jge
arpl
jp
sbb
push
pop
dec
aaa
leave
mov
sti
faddp
sti
sti
std
sarb
data16
add
dec
and
fisubs
cmp
cwtl
test
stos
xchg
repz
pushf
inc
pop
jns
add
add
add
add
add
add
popa
dec
out
mov
jge
arpl
jg
xor
pop
dec
aaa
mov
xor
mov
loope
sti
std
sarb
data16
add
dec
and
fisubs
cmp
mov
xchg
in
mov
test
in
mov
jp
mov
aas
mov
sub
repz
out
mov
jge
insb
push
xor
aas
inc
sbb
inc
cmpsl
mov
fadd
cld
loope
cli
loope
cld
loope
std
sarb
data16
add
rcll
in
pushf
shl
les
neg
shl
movsl
mov
xchg
fsts
cli
fdivrs
mov
stos
xchg
out
subl
inc
mov
inc
sub
shll
jecxz
cld
jecxz
cli
loope
std
sarb
data16
add
mov
in
xor
ret
jmp
int3
cli
in
cli
in
in
cmpsl
jmp
mov
repz
call
icebp
ret
stos
in
mov
clc
mov
rorl
pop
int
inc
mov
inc
sub
in
mov
in
std
in
sti
in
cld
jecxz
std
sarb
data16
add
add
dec
xor
push
in
xor
pushf
shl
in
push
in
repz
lock
repz
repz
call
clc
ret
test
std
leave
lods
stc
mov
pop
int
pop
int
dec
bound
insl
push
inc
leave
mov
mul
lret
std
out
std
out
std
in
sti
in
std
sarb
data16
add
add
test
push
in
xchg
bnd
hlt
cmpsb
test
repz
repz
push
push
stc
repz
bnd
jmp
fadd
repz
jns
popa
jb
je
int
inc
sub
call
std
call
std
out
std
in
std
sarb
data16
add
add
add
add
cmp
sti
mov
lret
int3
clc
in
in
stc
cld
repz
cld
idiv
cld
idiv
lock
fadd
shll
movsl
popa
jb
je
hlt
je
cmp
nop
jns
fadd
mov
out
std
jmp
std
call
cld
out
std
sarb
data16
add
pop
cmp
cltd
mov
cmpsb
test
mov
lock
mov
out
lods
aam
cltd
mov
cmpb
sbb
mov
mov
je
bound
test
fadd
mov
out
cld
in
fdivrp
in
fdivrp
jmp
std
jmp
clc
out
sti
sarb
data16
add
cmp
scas
mov
cmpsb
mov
cmpsb
mov
cmpsb
test
mov
xchg
mov
mov
mov
jb
cmp
nop
jns
call
fdivr
in
loope
in
loope
in
fdivrp
jmp
mull
stc
mov
data16
test
arpl
xchg
xchg
lret
lock
mov
cltd
mov
mov
mov
jl
insb
inc
pop
cmp
fscale
out
in
icebp
out
out
in
out
in
in
loope
mov
mulb
fiadds
data16
add
test
nop
jns
arpl
arpl
popa
push
inc
pop
dec
aaa
pop
cmp
pop
mov
fsincos
icebp
jmp
repz
std
out
in
out
in
mov
mulb
rolb
add
rclb
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
hlt
jmp
repz
std
out
in
cmpsl
dec
xchg
mov
data16
call
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
std
cmc
in
std
repz
out
shll
lcall
add
add
rorb
std
std
cli
cli
cli
cli
cli
cli
div
div
div
repz
in
in
in
in
in
in
in
in
in
in
in
in
out
out
in
out
out
out
shll
data16
add
dec
xchg
rorb
rclb
into
cltd
sti
into
cltd
sti
into
cltd
repz
lahf
repz
lahf
repz
lahf
ljmp
ret
ret
mov
out
movsl
data16
incl
add
incb
add
incb
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
add
add
add
and
sbb
add
add
test
jo
or
mov
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
or
test
or
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
aaa
out
mov
sbbb
or
ds
shl
fldt
clc
xchg
inc
inc
mov
in
rorb
ret
mov
xchg
push
inc
and
jmp
add
push
aam
cmp
xchg
jnp
fnsave
adc
shlb
push
push
in
faddl
mov
push
mov
mov
push
push
xor
pop
std
outsb
cmp
mov
in
shlb
mov
icebp
loope
subl
pop
out
jmp
sbb
jns
icebp
shrl
nop
lods
mov
popa
nop
jl
jg
arpl
lock
mov
fldl
push
hlt
mov
addr16
mov
inc
and
pop
cmpsl
cmp
cmp
mov
fidivs
loop
sbb
dec
xor
adc
test
outsb
pop
shll
dec
mov
mov
pop
adc
mov
mov
sub
decb
sahf
jno
ljmp
cmc
lods
jbe
ror
adc
rol
ds
lret
xchg
add
xchg
dec
add
xchg
push
cmpsl
or
js
cmp
lea
dec
push
xor
into
inc
jmp
jbe
dec
fcompl
xchg
mov
jno
pop
sbb
cmp
out
xchg
lret
mov
xchg
repnz
xchg
jbe
cld
movsb
frstor
cmc
or
sbb
sbb
test
inc
sbb
mov
out
push
lret
movsl
repnz
cld
subl
or
mov
sub
sbb
das
dec
scas
out
mov
xor
fists
pop
std
mov
push
xor
sti
stc
mov
jg
outsl
mulb
pop
cltd
pusha
adc
lock
push
fwait
cmp
and
dec
jne
mov
and
ficoml
dec
jae
mov
daa
in
pop
adc
inc
loope
stos
dec
push
inc
adc
mov
or
jecxz
inc
mov
jae
in
popa
adc
mov
xchg
jmp
scas
inc
mov
xor
imul
xchg
push
pop
push
mov
stc
sbb
ds
or
lret
into
adc
dec
movaps
ljmp
and
inc
fldcw
addr16
mov
cwtl
pop
iret
scas
or
ss
xchg
and
xchg
mov
fsubrs
lea
mov
inc
movsl
mov
inc
xchg
sub
mov
adc
cmp
mov
xchg
push
mov
addr16
cmpsb
popf
push
sbb
addb
mov
add
push
pop
xlat
pop
mov
sbb
mov
mov
cmpsb
adc
cmp
hlt
mov
out
ja
cli
or
xor
sub
pusha
mov
or
xchg
xchg
decb
enter
adc
pop
push
jno
and
cmp
scas
loopne
out
scas
xor
dec
lds
mov
cmp
cmp
mov
ret
frstor
mov
mov
mov
add
dec
adc
sub
sbb
aad
ficoms
shll
lods
sbb
mov
dec
mov
pop
mov
mov
jb
mov
cltd
int
xor
xor
adc
std
inc
outsb
cmp
cmp
int3
pop
mov
pop
aaa
flds
mov
les
popf
packuswb
fisttpl
in
gs
rcrl
sbbb
and
jns
pop
add
push
jge
popa
mov
push
xchg
inc
xor
fidivrl
imul
nop
ljmp
jge
xor
push
xor
shlb
push
gs
loopne
mov
xor
push
mov
cmp
dec
sti
pushf
cmc
add
xor
jmp
sub
fldenv
mov
mov
enter
mov
mov
lods
cmc
fdivrs
mov
lret
push
sarb
sub
jg
or
into
inc
mov
cli
jg
iret
push
sub
jnp
add
lds
rcl
sub
fsubrp
xchg
add
lods
pusha
pop
jge
fldcw
imul
xchg
ret
mov
mov
repz
pop
jae
mov
sbb
jl
adc
fwait
add
adc
xor
test
adc
push
inc
fwait
push
mov
mov
clc
pop
push
mov
or
rclb
cmp
imul
rol
das
mov
outsb
mov
inc
daa
and
mov
rorl
aas
mov
out
jns
filds
inc
int
fcmovnbe
jb
icebp
and
icebp
add
mov
pop
pop
or
imul
jmp
adc
shr
fwait
mov
enter
imul
mov
add
imull
adc
pop
and
jnp
out
scas
jno
mov
movsl
ficomps
insb
stos
pop
imul
push
cli
loope
xchg
mov
cs
repnz
xchg
ret
js
dec
rolb
les
or
mov
gs
mov
dec
movsl
mov
and
es
lds
push
sbb
gs
hlt
.byte
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
mov
or
test
add
in
add
add
add
add
add
nop
add
sbbb
add
push
add
adcb
add
push
add
dec
add
dec
add
add
add
add
add
add
mov
add
xor
add
adc
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
push
or
in
add
add
add
add
add
push
add
andb
push
add
jns
dec
add
outsl
add
add
add
add
add
or
add
add
or
adc
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
data16
data16
data16
data16
data16
add
aam
cltd
aam
cltd
int3
popf
nop
enter
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
data16
add
mov
mov
lds
ret
stos
icebp
ret
stos
icebp
ret
stos
hlt
lds
int
sti
sarb
sarb
sarb
sarb
sarb
into
cltd
xchg
xchg
data16
add
mov
test
pushf
cmpb
leave
mov
fdivl
ljmp
shll
aad
cli
aam
cli
shll
shlb
shrl
xchg
xchg
data16
add
test
jl
bound
inc
arpl
pop
cmp
aaa
arpl
jp
inc
cmpsb
sbbl
jecxz
xchg
in
cmpsl
cmc
shll
aad
cli
aam
cli
aam
cli
shll
shlb
xchg
xchg
data16
add
add
inc
sub
push
sub
sub
dec
inc
inc
dec
inc
sub
dec
cmp
pop
dec
aaa
mov
lcall
mov
aam
cli
aad
cli
aad
cli
aam
cli
aam
stc
shlb
xchg
xchg
data16
add
pop
cmp
xor
test
lea
push
paddsb
sub
out
xor
inc
and
inc
sub
mov
xchg
les
aad
cli
xlat
mov
aam
cli
shll
xchg
xchg
data16
add
jl
bound
sub
ja
mov
out
push
dec
lods
mov
stc
paddsb
daa
lock
inc
and
arpl
lcall
cmpsl
cmc
shll
aad
cli
aad
cli
aad
std
sarb
data16
add
add
add
add
push
xor
fsts
sti
lea
lea
movsl
mov
mov
in
mov
mov
les
lods
mov
lock
lock
mov
leave
mov
lock
stc
aad
cli
fdivrs
mov
xchg
xchg
data16
add
add
add
add
das
fiadds
out
push
in
sar
div
cld
idiv
in
loope
int
fwait
test
sbb
ljmp
int3
out
inc
xor
cmpsb
sbbl
not
mov
fnstcw
xlat
mov
xchg
xchg
data16
add
add
jne
pop
mov
sub
push
.byte
add
add
add
add
add
add
sub
.byte
.byte
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
mov
or
test
add
in
add
add
add
add
add
nop
add
sbbb
add
push
add
adcb
add
push
add
dec
add
dec
add
add
add
add
add
add
mov
add
xor
add
adc
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
push
or
in
add
add
add
add
add
push
add
andb
push
add
jns
dec
add
outsl
add
add
add
add
add
or
add
add
or
adc
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
data16
data16
data16
data16
data16
add
aam
cltd
aam
cltd
int3
popf
nop
enter
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
data16
add
mov
mov
lds
ret
stos
icebp
ret
stos
icebp
ret
stos
hlt
lds
int
sti
sarb
sarb
sarb
sarb
sarb
into
cltd
xchg
xchg
data16
add
mov
test
pushf
cmpb
leave
mov
fdivl
ljmp
shll
aad
cli
aam
cli
shll
shlb
shrl
xchg
xchg
data16
add
test
jl
bound
inc
arpl
pop
cmp
aaa
arpl
jp
inc
cmpsb
sbbl
jecxz
xchg
in
cmpsl
cmc
shll
aad
cli
aam
cli
aam
cli
shll
shlb
xchg
xchg
data16
add
add
inc
sub
push
sub
sub
dec
inc
inc
dec
inc
sub
dec
cmp
pop
dec
aaa
mov
lcall
mov
aam
cli
aad
cli
aad
cli
aam
cli
aam
stc
shlb
xchg
xchg
data16
add
pop
cmp
xor
test
lea
push
paddsb
sub
out
xor
inc
and
inc
sub
mov
xchg
les
aad
cli
xlat
mov
aam
cli
shll
xchg
xchg
data16
add
jl
bound
sub
ja
mov
out
push
dec
lods
mov
stc
paddsb
daa
lock
inc
and
arpl
lcall
cmpsl
cmc
shll
aad
cli
aad
cli
aad
std
sarb
data16
add
add
add
add
push
xor
fsts
sti
lea
lea
movsl
mov
mov
in
mov
mov
les
lods
mov
lock
lock
mov
leave
mov
lock
stc
aad
cli
fdivrs
mov
xchg
xchg
data16
add
add
add
add
das
.byte
.byte
.byte
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
mov
or
test
add
in
add
add
add
add
add
nop
add
sbbb
add
push
add
adcb
add
push
add
dec
add
dec
add
add
add
add
add
add
mov
add
xor
add
adc
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
push
or
in
add
add
add
add
add
push
add
andb
push
add
jns
dec
add
outsl
add
add
add
add
add
or
add
add
or
adc
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
data16
data16
data16
data16
data16
add
aam
cltd
aam
cltd
int3
popf
nop
enter
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
data16
add
mov
mov
lds
ret
stos
icebp
ret
stos
icebp
ret
stos
hlt
lds
int
sti
sarb
sarb
sarb
sarb
sarb
into
cltd
xchg
xchg
data16
add
mov
test
pushf
cmpb
leave
mov
fdivl
ljmp
shll
aad
cli
aam
cli
shll
shlb
shrl
xchg
xchg
data16
add
test
jl
bound
inc
arpl
pop
cmp
aaa
arpl
jp
inc
cmpsb
sbbl
jecxz
xchg
in
cmpsl
cmc
shll
aad
cli
aam
cli
aam
cli
shll
shlb
xchg
xchg
data16
add
add
inc
sub
push
sub
sub
dec
inc
inc
dec
inc
sub
dec
cmp
pop
dec
aaa
mov
lcall
mov
aam
cli
aad
cli
aad
cli
aam
cli
aam
stc
shlb
xchg
xchg
data16
add
pop
cmp
xor
test
lea
push
paddsb
sub
out
xor
inc
and
inc
sub
mov
xchg
les
aad
cli
xlat
mov
aam
cli
shll
xchg
xchg
data16
add
jl
bound
sub
ja
mov
out
push
dec
lods
mov
stc
paddsb
daa
lock
inc
and
arpl
lcall
cmpsl
cmc
shll
aad
cli
aad
cli
aad
std
sarb
data16
add
add
add
add
push
xor
fsts
sti
lea
lea
movsl
mov
mov
in
mov
mov
les
lods
mov
lock
lock
mov
leave
mov
lock
stc
aad
cli
fdivrs
mov
xchg
xchg
data16
add
add
add
add
das
fiadds
out
push
in
sar
div
cld
idiv
in
loope
int
fwait
test
sbb
ljmp
int3
out
inc
xor
cmpsb
sbbl
not
mov
fnstcw
xlat
mov
xchg
xchg
data16
add
add
jne
pop
mov
sub
push
push
cli
idiv
cli
idiv
cld
idiv
cld
repz
loopne
fwait
test
xor
xor
jp
inc
leave
mov
lock
mov
sarb
data16
add
add
push
xor
out
push
rolb
push
out
clc
jmp
cld
idiv
std
cld
cld
repz
out
out
call
loope
test
xchg
mov
stc
inc
inc
dec
push
xor
mov
mov
int
cli
fnstcw
fnstcw
xchg
xchg
data16
add
mov
mov
sub
mov
imul
clc
call
mov
sar
bnd
repz
test
cld
les
jp
rdseed
xor
cmpsb
sbbl
cli
fnstcw
fcmovnb
std
sarb
data16
add
inc
mov
pushf
inc
pop
sarb
lret
jmp
repz
xchg
pushf
inc
pop
mov
movsl
std
in
std
fmulp
hlt
lds
xchg
subl
sbb
and
pop
inc
aad
xchg
int
stc
fadd
sti
faddp
cli
fcmovnb
sti
sarb
data16
add
daa
pushf
inc
pop
pushf
inc
pop
sarb
les
fadd
in
mov
pop
add
or
jns
add
add
push
in
mov
cld
les
jge
popa
dec
xor
dec
xor
pop
dec
aaa
cmpsl
mov
shlb
vpsrld
data16
add
daa
mov
mov
rorl
in
mov
cli
lret
mov
mov
pop
or
addr16
add
pop
add
pop
add
or
addr16
add
insb
push
in
stos
xchg
in
jge
arpl
jp
sbb
push
pop
dec
aaa
leave
mov
sti
faddp
sti
sti
std
sarb
data16
add
dec
and
fisubs
cmp
cwtl
test
stos
xchg
repz
pushf
inc
pop
jns
add
add
add
add
add
add
popa
dec
out
mov
jge
arpl
jg
xor
pop
dec
aaa
mov
xor
mov
loope
sti
std
sarb
data16
add
dec
and
fisubs
cmp
mov
xchg
in
mov
test
in
mov
jp
mov
aas
mov
sub
repz
out
mov
jge
insb
push
xor
aas
inc
sbb
inc
cmpsl
mov
fadd
cld
loope
cli
loope
cld
loope
std
sarb
data16
add
rcll
in
pushf
shl
les
neg
shl
movsl
mov
xchg
fsts
cli
fdivrs
mov
stos
xchg
out
subl
inc
mov
inc
sub
shll
jecxz
cld
jecxz
cli
loope
std
sarb
data16
add
mov
in
xor
ret
jmp
int3
cli
in
cli
in
in
cmpsl
jmp
mov
repz
call
icebp
ret
stos
in
mov
clc
mov
rorl
pop
int
inc
mov
inc
sub
in
mov
in
std
in
sti
in
cld
jecxz
std
sarb
data16
add
add
dec
xor
push
in
xor
pushf
shl
in
push
in
repz
lock
repz
repz
call
clc
ret
test
std
leave
lods
stc
mov
pop
int
pop
int
dec
bound
insl
push
inc
leave
mov
mul
lret
std
out
std
out
std
in
sti
in
std
sarb
data16
add
add
test
push
in
xchg
bnd
hlt
cmpsb
test
repz
repz
push
push
stc
repz
bnd
jmp
fadd
repz
jns
popa
jb
je
int
inc
sub
call
std
call
std
out
std
in
std
sarb
data16
add
add
add
add
cmp
sti
mov
lret
int3
clc
in
in
stc
cld
repz
cld
idiv
cld
idiv
lock
fadd
shll
movsl
popa
jb
je
hlt
je
cmp
nop
jns
fadd
mov
out
std
jmp
std
call
cld
out
std
sarb
data16
add
pop
cmp
cltd
mov
cmpsb
test
mov
lock
mov
out
lods
aam
cltd
mov
cmpb
sbb
mov
mov
je
bound
test
fadd
mov
out
cld
in
fdivrp
in
fdivrp
jmp
std
jmp
clc
out
sti
sarb
data16
add
cmp
scas
mov
cmpsb
mov
cmpsb
mov
cmpsb
test
mov
xchg
mov
mov
mov
jb
cmp
nop
jns
call
fdivr
in
loope
in
loope
in
fdivrp
jmp
mull
stc
mov
data16
test
arpl
xchg
xchg
lret
lock
mov
cltd
mov
mov
mov
jl
insb
inc
pop
cmp
fscale
out
in
icebp
out
out
in
out
in
in
loope
mov
mulb
fiadds
data16
add
test
nop
jns
arpl
arpl
popa
push
inc
pop
dec
aaa
pop
cmp
pop
mov
fsincos
icebp
jmp
repz
std
out
in
out
in
mov
mulb
rolb
add
rclb
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
hlt
jmp
repz
std
out
in
cmpsl
dec
xchg
mov
data16
call
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
std
cmc
in
std
repz
out
shll
lcall
add
add
rorb
std
std
cli
cli
cli
cli
cli
cli
div
div
div
repz
in
in
in
in
in
in
in
in
in
in
in
in
out
out
in
out
out
out
shll
data16
add
dec
xchg
rorb
rclb
into
cltd
sti
into
cltd
sti
into
cltd
repz
lahf
repz
lahf
repz
lahf
ljmp
ret
ret
mov
out
movsl
data16
incl
add
incb
add
incb
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
add
add
add
and
sbb
add
add
test
jo
or
mov
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
or
test
or
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
aaa
out
mov
sbbb
or
ds
shl
fldt
clc
xchg
inc
inc
mov
in
rorb
ret
mov
xchg
push
inc
and
jmp
add
push
aam
cmp
xchg
jnp
fnsave
adc
shlb
push
push
in
faddl
mov
push
mov
mov
push
push
xor
pop
std
outsb
cmp
mov
in
shlb
mov
icebp
loope
subl
pop
out
jmp
sbb
jns
icebp
shrl
nop
lods
mov
popa
nop
jl
jg
arpl
lock
mov
fldl
push
hlt
mov
addr16
mov
inc
and
pop
cmpsl
cmp
cmp
mov
fidivs
loop
sbb
dec
xor
adc
test
outsb
pop
shll
dec
mov
mov
pop
adc
mov
mov
sub
decb
sahf
jno
ljmp
cmc
lods
jbe
ror
adc
rol
ds
lret
xchg
add
xchg
dec
add
xchg
push
cmpsl
or
js
cmp
lea
dec
push
xor
into
inc
jmp
jbe
dec
fcompl
xchg
mov
jno
pop
sbb
cmp
out
xchg
lret
mov
xchg
repnz
xchg
jbe
cld
movsb
frstor
cmc
or
sbb
sbb
test
inc
sbb
mov
out
push
lret
movsl
repnz
cld
subl
or
mov
sub
sbb
das
dec
scas
out
mov
xor
fists
pop
std
mov
push
xor
sti
stc
mov
jg
outsl
mulb
pop
cltd
pusha
adc
lock
push
fwait
cmp
and
dec
jne
mov
and
ficoml
dec
jae
mov
daa
in
pop
adc
inc
loope
stos
dec
push
inc
adc
mov
or
jecxz
inc
mov
jae
in
popa
adc
mov
xchg
jmp
scas
inc
mov
xor
imul
xchg
push
pop
push
mov
stc
sbb
ds
or
lret
into
adc
dec
movaps
ljmp
and
inc
fldcw
addr16
mov
cwtl
pop
iret
scas
or
ss
xchg
and
xchg
mov
fsubrs
lea
mov
inc
movsl
mov
inc
xchg
sub
mov
adc
cmp
mov
xchg
push
mov
addr16
cmpsb
popf
push
sbb
addb
mov
add
push
pop
xlat
pop
mov
sbb
mov
mov
cmpsb
adc
cmp
hlt
mov
out
ja
cli
or
xor
sub
pusha
mov
or
xchg
xchg
decb
enter
adc
pop
push
jno
and
cmp
scas
loopne
out
scas
xor
dec
lds
mov
cmp
cmp
mov
ret
frstor
mov
mov
mov
add
dec
adc
sub
sbb
aad
ficoms
shll
lods
sbb
mov
dec
mov
pop
mov
mov
jb
mov
cltd
int
xor
xor
adc
std
inc
outsb
cmp
cmp
int3
pop
mov
pop
aaa
flds
mov
les
popf
packuswb
fisttpl
in
gs
rcrl
sbbb
and
jns
pop
add
push
jge
popa
mov
push
xchg
inc
xor
fidivrl
imul
nop
ljmp
jge
xor
push
xor
shlb
push
gs
loopne
mov
xor
push
mov
cmp
dec
sti
pushf
cmc
add
xor
jmp
sub
fldenv
mov
mov
enter
mov
mov
lods
cmc
fdivrs
mov
lret
push
sarb
sub
jg
or
into
inc
mov
cli
jg
iret
push
sub
jnp
add
lds
rcl
sub
fsubrp
xchg
add
lods
pusha
pop
jge
fldcw
imul
xchg
ret
mov
mov
repz
pop
jae
mov
sbb
jl
adc
fwait
add
adc
xor
test
adc
push
inc
fwait
push
mov
mov
clc
pop
push
mov
or
rclb
cmp
imul
rol
das
mov
outsb
mov
inc
daa
and
mov
rorl
aas
mov
out
jns
filds
inc
int
fcmovnbe
jb
icebp
and
icebp
add
mov
pop
pop
or
imul
jmp
adc
shr
fwait
mov
enter
imul
mov
add
imull
adc
pop
and
jnp
out
scas
jno
mov
movsl
ficomps
insb
stos
pop
imul
push
cli
loope
xchg
mov
cs
repnz
xchg
ret
js
dec
rolb
les
or
mov
gs
mov
dec
movsl
mov
and
es
lds
push
sbb
gs
hlt
mov
insb
in
test
sub
add
jle
xor
add
sahf
dec
inc
xchg
jo
jl
or
test
iret
adc
popf
iret
mov
fdivr
test
xchg
shrl
mov
push
in
out
xchg
jb
mov
jns
cltd
cli
cld
or
xchg
fmull
or
and
pop
in
subb
mov
push
xor
rorb
lret
test
shl
pop
test
repz
dec
cmpsb
sbb
mov
mov
xchg
jne
cwtl
clc
mov
rcl
sbb
add
data16
iret
inc
mov
inc
out
stos
add
mov
movsl
lret
jno
lcall
sbb
mov
inc
add
xchg
mov
sahf
adc
and
aam
pop
outsl
xchg
inc
xor
and
or
mov
cli
pop
clc
out
outsl
ljmp
push
mov
lahf
dec
sub
inc
scas
dec
mov
inc
sub
adcl
fucom
mov
popf
clc
scas
in
aas
inc
popa
pop
js
fs
aam
jge
push
cmpsb
outsb
dec
mov
or
bound
cmp
cmp
aad
jl
push
lods
inc
dec
inc
sub
dec
xor
xor
and
fmul
into
push
ss
imul
fwait
pop
cmpsl
fmull
flds
call
shrl
inc
jbe
mov
add
insl
hlt
jae
mov
or
add
sub
movsl
out
mov
push
lock
push
loop
jmp
arpl
xchg
add
nop
arpl
mov
in
and
push
mov
and
jno
xor
mov
insb
or
inc
push
loope
mov
mov
adc
jle
cmp
nop
std
jae
lret
xor
std
arpl
insb
popf
jmp
in
inc
test
jb
xor
jle
int
mov
gs
adc
push
sbb
mov
mov
in
flds
adc
add
add
mov
inc
add
lret
or
lret
out
addr16
test
sub
add
shl
shlb
dec
and
mov
iret
xor
jo
out
in
dec
sbb
and
mov
xchg
addr16
mov
dec
dec
pop
aaa
push
ljmp
cwtl
mov
rcrl
test
gs
pop
fldl
rclb
add
jp
inc
cmp
out
stc
pop
lods
fisubs
in
sub
add
mov
mov
mov
or
int
ja
fcomi
test
ret
xlat
or
inc
cmp
lods
js
wrmsr
mov
daa
or
pop
xchg
cmp
sbb
out
popf
mov
cmp
testb
dec
je
movb
lcall
add
sub
pusha
push
out
cmpsl
in
pop
adc
xor
mov
mov
stc
fisubrl
les
popl
stc
sub
cmc
push
mov
mov
leave
fwait
ds
mov
movb
in
lcall
scas
lahf
sbb
xchg
xchg
call
sub
adc
dec
sub
fldln2
loop
lahf
xor
jp
sbb
push
data16
push
adc
jl
add
jae
dec
outsb
int
jae
pop
pop
or
inc
adc
mov
push
ret
adc
inc
xchg
test
xor
adc
push
mov
xchg
aad
imul
and
sbb
negl
add
data16
and
in
and
dec
lret
dec
pop
jmp
jecxz
sbb
and
ss
jb
push
stos
scas
insl
insl
cmp
cmp
mov
jecxz
sahf
leave
loop
hlt
pop
jb
insl
mov
in
mov
jle
loop
and
dec
mov
pop
icebp
iret
fsubr
adc
xchg
neg
mov
inc
mov
sahf
notb
decb
dec
movups
lret
xchg
xchg
sub
add
add
mov
mov
push
lds
cvtps2pd
out
sbb
repnz
pop
push
xor
ret
jp
cltd
xchg
jo
cwtl
and
or
jmp
ret
iret
mov
mov
and
mov
lret
cmpsb
add
mov
arpl
and
xor
inc
push
xchg
adcb
mov
iret
sbb
and
sbb
enter
test
cmc
mov
into
ds
push
cmp
test
fwait
lea
push
xor
jnp
nop
shrl
shrb
mov
mov
dec
or
add
xor
stc
hlt
aaa
xor
adc
test
and
dec
pop
data16
out
dec
sarl
std
insb
call
xor
xor
xor
nop
ret
push
rcll
xchg
sahf
daa
pop
cs
and
push
jns
fmuls
stc
jmp
xchg
push
clc
jmp
push
dec
leave
movsl
lret
pop
push
fsubs
cld
inc
scas
ljmp
shll
dec
or
int
popa
repnz
cmp
pop
push
cmp
sbb
fcmovnu
inc
loopw
cs
jae
lcall
pop
ret
orl
popf
sub
bound
mov
popa
xor
cltd
mov
and
aaa
push
xor
scas
jecxz
lret
jge
loop
cmp
int
or
or
popa
daa
lahf
mov
xor
out
into
jg
js
xor
adc
ret
xchg
jmp
dec
or
repnz
cmp
add
int3
leave
movsl
dec
mov
cmpl
je
cld
lods
into
or
jo
mov
dec
mov
cmp
jno
dec
lock
cmp
fdivrp
fldcw
xor
and
fcmovnbe
hlt
or
pop
jp
daa
out
mov
mov
arpl
out
cmpl
lods
sbb
iret
inc
jecxz
lds
mov
inc
or
lahf
inc
cmp
xor
pop
pusha
out
stos
push
jne
or
std
xor
mov
adc
imul
pusha
jmp
push
in
mov
mov
data16
cwtl
lods
add
inc
cmp
cltd
push
popf
xlat
not
out
ret
fwait
out
cmp
imul
bsr
adc
andl
inc
sub
cltd
data16
mov
aam
ret
mov
dec
sbb
pop
adc
dec
cwtl
movl
push
not
test
jmp
loope
int
jl
sub
ja
xchg
fstp
arpl
adc
and
in
inc
les
js
fsubrl
dec
cs
xor
mov
std
push
xor
sar
fwait
mov
xlat
mov
mov
cli
push
mov
lahf
ja
call
mov
mov
subb
dec
aas
out
xchg
adc
mov
fisubrl
inc
mov
dec
add
pop
xor
mov
test
cmp
push
stc
in
out
cltd
js
insl
pop
inc
mov
mov
dec
push
pop
xor
in
sbb
addr16
and
fwait
jle
dec
stos
xor
sbb
scas
pop
mov
outsl
push
mov
xchg
pop
rcrl
fs
hlt
pop
cli
incl
popa
or
cli
test
and
ds
or
add
inc
ss
dec
or
test
push
decl
mov
orb
fstl
out
fwait
push
add
adc
int
mov
mov
sub
inc
and
popf
pcmpeqd
ss
test
and
popf
lea
int
xchg
xchg
jbe
adc
pop
mov
xor
js
out
mov
and
add
icebp
push
test
mov
adc
adc
adc
mov
jle
push
pop
jge
lret
push
push
fcomp
cli
xchg
add
imul
sbb
xchg
jne
cmp
scas
aam
lret
jmp
jmp
insl
loope
fnstsw
sub
adc
pop
into
fwait
xor
div
insl
ja
mov
adc
out
aam
enter
icebp
xchg
pop
sahf
xor
loop
push
mov
sbb
stos
scas
push
movsl
mov
cli
and
mov
pop
mov
rcll
repnz
jae
push
jne
orl
insb
sti
insl
adc
ret
pop
loopne
cmp
mov
push
sub
repnz
imul
repnz
sub
xchg
pop
jcxz
icebp
or
cmp
pop
ret
jp
std
outsb
fld
jnp
inc
sub
andl
sbbb
nop
jmp
inc
mov
jmp
test
xchg
gs
loope
aaa
fs
jo
adc
mov
inc
mov
mov
fbstp
loopne
aaa
dec
adc
enter
std
or
mov
loopne
inc
sub
cmp
pop
lea
orl
shl
fsub
mov
lods
xor
scas
imul
push
cwtl
xor
movb
mov
cwtl
push
jmp
pop
xchg
dec
subl
test
je
pop
mov
mov
ljmp
xlat
mov
ret
xchg
iret
add
rclb
loopne
mov
rclb
popa
ljmp
testl
cltd
jb
cmp
push
dec
inc
idivl
jne
lods
pop
scas
adc
push
dec
jae
pop
icebp
repz
inc
add
jp
add
test
jbe
sbb
pop
mov
sbb
jl
cmpsb
fwait
sbb
dec
xor
xor
pop
std
push
insl
lods
call
cmp
scas
jmp
push
push
fsubl
cmc
popl
iret
bound
push
mov
dec
or
dec
dec
or
or
lahf
rcrl
test
mov
test
loopne
push
je
sbbl
dec
in
clc
out
adc
jg
mov
inc
lods
sbb
cwtl
mov
xchg
aas
imulb
push
push
cltd
mov
xchg
xchg
ret
je
fistpl
icebp
push
test
rcrl
and
in
pop
mov
cltd
adc
xchg
push
insl
loop
and
fiaddl
data16
fildl
aas
insl
shll
pusha
sbbb
jecxz
pop
sub
cwtl
cmc
decl
jmp
js
jle
push
pop
and
mov
nop
out
out
stc
dec
shll
cltd
cmpsb
fmuls
mov
fimull
lret
sub
stos
add
das
lods
ss
insb
dec
les
push
mov
xor
xor
popf
or
pop
xchg
int
push
frstor
push
or
xchg
xchg
push
sahf
mov
jae
cs
cmc
jo
fidivs
jb
and
dec
mov
pop
mov
sub
add
fs
pop
pop
push
push
push
cmp
xchg
cmc
sub
repz
mov
mov
sbb
xor
ficomps
int3
jmp
or
addr16
loopne
mov
sti
aam
daa
outsb
xor
xor
loope
adc
sub
add
xor
cltd
dec
push
out
cs
in
sub
out
jb
cs
bound
daa
and
out
sub
nop
enter
fcomp
mov
mov
xadd
jnp
rorl
push
push
adc
icebp
and
xor
and
nop
jbe
xchg
scas
mov
jbe
iret
leave
sub
stos
xchg
pushf
inc
mov
mov
iret
pop
push
mov
lods
pop
out
fistpll
mov
dec
les
adc
adc
and
dec
dec
inc
push
xchg
fidivrl
cmp
movsl
adc
xchg
mov
mov
push
loope
out
jecxz
scas
cmp
push
inc
or
pop
fmull
ret
pop
das
addr16
sub
shll
jno
push
icebp
mov
andb
je
dec
in
dec
cwtl
push
sub
push
fists
xchg
mov
sbb
shll
mov
mov
call
and
std
xor
std
mov
push
cmp
cmovge
ret
cmp
or
xor
iret
inc
pop
cld
sarb
insb
lcall
addr16
add
jno
mov
sbb
or
mov
cmpsb
cmpsb
mov
cmpsb
jmp
std
aad
pusha
gs
mov
xor
jbe
filds
dec
sub
or
imul
repz
fdiv
xchg
nop
mov
pop
or
dec
jne
sbb
xor
orl
jno
mov
and
mov
and
sbb
movl
mov
xor
lahf
push
mov
xor
xor
sub
mov
or
outsb
pop
jmp
mull
in
mov
loop
in
xchg
test
mov
pop
imul
das
or
lret
lcall
fisttps
dec
inc
xor
stos
adcl
xchg
mov
jle
std
jae
jp
lret
insb
loop
adc
or
es
mov
mull
lods
dec
stos
dec
inc
xchg
filds
cmpsl
jno
mov
fwait
dec
xchg
cli
fisubl
mov
adc
fnsave
imul
pusha
cmp
pushf
stos
mov
pop
repz
or
pop
stos
xor
pusha
mov
mov
mov
test
xor
dec
negb
ds
fwait
mov
pop
jg
cmpsb
pop
and
pop
jo
push
push
add
insb
andl
imul
sub
loop
cmc
cmp
fisubrs
and
sarb
pop
sbb
outsl
sbb
mov
inc
add
popf
xor
scas
notl
test
xor
cmc
subb
in
mov
lret
icebp
sub
sbbl
jno
lods
sub
out
ja
xor
loope
lods
mov
out
outsl
inc
je
xchg
xchg
pop
mov
jnp
sub
sbb
es
xchg
cld
pusha
inc
and
jbe
inc
push
movsb
xchg
jecxz
pop
std
roll
shlb
sub
mov
mov
sbbb
fs
gs
or
xchg
mov
sti
pop
popa
lods
inc
jbe
sub
xorb
repnz
fbstp
xchg
mov
xor
mov
cmp
iret
stos
xchg
jns
add
inc
mov
pusha
xchg
pop
repz
imul
sbbb
das
stos
dec
arpl
push
mov
cs
jp
dec
inc
jae
xchg
test
xchg
mov
xor
out
mov
mov
or
push
and
int3
mov
fwait
into
scas
mov
sub
lret
inc
lods
ja
mov
jge
clc
push
andl
mov
adc
scas
fucom
jle
mov
push
test
jg
xlat
jno
mov
push
shll
test
aam
jmp
stos
lods
jmp
push
movsl
into
stos
fwait
xchg
lods
arpl
pushl
xor
ficoml
int3
mov
dec
hlt
fs
mov
fidivl
lahf
cmpl
js
std
int3
xor
and
mov
push
xchg
inc
fstl
fadd
out
adc
gs
fs
add
add
xchg
inc
sub
adc
push
popa
mov
arpl
mov
and
mov
sbb
sbb
shrb
jnp
and
lea
divl
cmp
sbb
popf
ud2
dec
scas
push
mov
dec
cli
movsb
adc
mov
jg
pop
sub
imul
xor
std
pop
inc
jo
fbld
push
movsb
lcall
outsl
mov
xchg
mov
call
xchg
fsubrp
and
sti
lret
pop
add
movsb
push
ljmp
xchg
sbb
adc
loopne
or
mov
cs
pop
mov
adc
cmpsl
lcall
xchg
shrb
push
push
cmpsb
pop
jne
cmp
scas
push
inc
mov
bound
pop
sbb
adc
adc
dec
jno
pop
mov
pop
push
adc
dec
jl
sub
inc
out
mov
lea
pop
xchg
sub
popa
iret
cmp
mov
dec
dec
movsl
out
int3
std
subb
xlat
ljmp
nop
outsb
jmp
shl
pop
xchg
rorb
inc
in
inc
mov
xchg
mov
lcall
or
add
mov
js
push
insb
cmp
dec
mov
cld
out
jb
imul
push
xor
push
xchg
dec
movsb
lcall
loop
test
push
sbb
jmp
outsl
jge
lret
mov
jmp
es
pop
pextrw
jbe
jns
in
push
shlb
pop
push
sub
mov
mov
fstps
sbbb
js
rcll
aad
xchg
mov
push
sti
pop
add
xchg
inc
int3
and
or
add
push
xor
cld
add
cmpsl
rorl
cmpsl
push
std
pusha
aam
das
dec
lahf
aad
sub
push
andl
mov
out
push
jb
jecxz
icebp
adc
pop
mov
mov
xchg
sahf
fisttps
aas
fstpl
out
data16
imul
or
mov
popf
and
mov
cs
and
sub
jb
fmuls
ljmp
aas
imul
dec
dec
cmp
and
or
xor
mov
sbb
cmp
out
andb
repz
ljmp
jge
inc
notl
mov
adc
push
add
and
rcrl
in
sti
inc
fsub
sub
jle
sbb
or
cmpsb
scas
rol
test
divl
addr16
mov
pop
sbb
leave
lret
xchg
int3
xchg
hlt
test
les
aad
popl
int3
sbb
cmp
or
jle
and
inc
xor
bswap
jo
xor
push
fcmovnbe
insl
ds
rcrl
pop
sbb
mov
daa
mov
jae
std
cs
lcall
fmuls
mov
mov
pop
add
dec
into
cmp
hlt
subb
push
pop
xor
outsl
test
leave
fldcw
and
sub
push
mov
movsl
inc
jecxz
lds
fcoms
push
dec
push
push
sbb
mov
adc
mov
js
sub
fadds
and
lock
mov
mov
scas
js
adc
add
sbb
mov
dec
add
lods
cli
pushf
je
inc
ljmp
divl
adc
inc
loope
jecxz
xchg
incb
aam
jns
push
nop
push
cmp
sbb
sub
mov
or
adc
xor
cmp
cmp
orb
bnd
inc
adc
and
jge
imul
sub
jae
or
popa
sub
sub
lock
or
pop
je
out
fsubrl
dec
xchg
mov
mov
jmp
push
int3
cld
into
int3
sbb
adc
imulb
pusha
and
lods
ret
inc
mov
or
sub
xchg
ficoms
add
in
in
pop
mov
pushf
insb
adc
pop
cmp
movsl
jns
adc
xor
bound
movsl
outsb
mov
iret
push
push
pop
pusha
jecxz
aas
mov
mov
inc
inc
mov
sbbl
movsb
insl
push
gs
mov
inc
dec
push
push
dec
cmp
and
push
icebp
jns
or
in
add
adc
add
mov
pop
imul
in
int
je
out
push
out
xchg
sbb
outsl
mov
xor
mov
xchg
xchg
mov
int
sub
push
dec
popf
xchg
pop
inc
fs
ljmp
lea
ja
cs
adc
sbb
inc
xchg
call
or
mov
hlt
lcall
orl
pop
xchg
push
call
and
push
jl
aad
ljmp
faddl
adc
sub
lret
loopne
xchg
or
mov
loope
xchg
inc
push
add
mov
cmp
cmpsb
dec
sub
xchg
in
adc
enter
daa
sub
fcomip
or
sti
mov
adc
stc
testb
push
je
roll
adc
icebp
data16
add
leave
clc
sbb
shrb
aam
and
lock
ds
mov
ret
adc
jb
idivl
int
add
int
pop
push
inc
loop
inc
or
sbb
stos
stos
shl
mov
rcl
sub
push
fs
xor
cmp
and
rcrl
data16
insb
mov
adc
sbb
push
dec
xor
loope
ret
adc
faddl
pop
ror
cmp
mov
mov
push
mov
orb
xor
fwait
xorl
movsl
push
cmpsl
cmpsb
iret
popa
push
outsl
jae
mov
into
push
shlb
push
mov
nop
mov
outsb
mov
cmpsb
int3
out
aaa
mov
adc
in
es
xlat
bound
sub
pop
rcrl
inc
lahf
mov
mov
nop
push
lock
mov
mov
icebp
outsb
push
mov
ljmp
movb
push
rcl
imul
push
dec
cmpsb
out
arpl
pop
cmp
lods
negl
xchg
push
negl
rcl
mov
mov
popf
iret
shrl
fs
pop
sbb
cmpsb
lods
push
jae
incl
jbe
adc
mull
sbb
fistpl
mov
std
lock
add
cmp
loop
cwtl
out
cld
imul
and
ror
xchg
cmpb
mov
or
int
xchg
jno
fidivl
in
adc
scas
lea
enter
inc
pop
les
jg
fucomi
adc
into
add
mov
into
fmull
bound
dec
ffree
mov
push
mov
add
or
clc
adc
insb
push
lock
mov
into
test
mov
mov
rdpmc
dec
aas
cmpsb
mov
jmp
mov
xchg
subb
lods
jmp
cli
ficoms
aas
mov
dec
xchg
aam
mov
in
repnz
and
jae
sbb
std
xchg
xor
cmp
cmp
push
lods
out
push
cmc
mov
cld
sub
pop
ret
mov
add
pop
jg
out
les
clc
cld
or
xchg
sahf
loope
shl
insb
add
or
loope
shll
cmpsl
lret
cmc
pop
mov
mov
sbb
test
fists
rol
mov
imulb
sub
lods
in
adc
pop
popa
scas
jle
sbb
jne
pop
mov
scas
inc
cli
cmp
fistl
add
fmulp
stos
jp
outsl
and
mov
jns
shll
mov
clc
stos
mov
and
cmp
lret
xor
dec
out
les
lcall
ret
shrb
lea
mov
fisubrl
arpl
cwtl
jns
xorl
stos
jb
push
lock
mov
mov
jecxz
cmc
push
repnz
add
outsl
in
orb
and
xlat
mov
sub
add
or
mov
out
xchg
iret
dec
cmpsb
mov
adc
dec
mov
out
pushf
imul
cmp
dec
cmp
sti
mov
add
inc
cwtl
sti
movsl
dec
xor
clc
outsl
sub
xchg
or
and
jle
popa
rorb
fwait
push
sbb
mov
imulb
and
adc
mov
sbb
dec
and
fs
push
dec
ja
add
nop
cwtl
mov
adc
loope
and
faddl
test
pop
cmp
cmp
scas
leave
pop
cmpb
call
jb
lcall
es
clc
dec
arpl
out
xor
iret
push
mov
xor
jbe
aam
into
mov
scas
mov
mov
push
lods
cmp
in
mov
lcall
pusha
sub
js
sub
xchg
mov
cmp
jb
inc
xchg
sub
sub
jb
movsl
cwtl
jmp
pop
stos
mov
loop
mov
outsb
test
xchg
lea
add
jp
mov
cmc
jl
out
fsts
inc
ss
iret
or
pushf
xchg
jg
ret
lret
ss
cmp
sbb
xchg
js
test
add
sahf
ja
or
mov
fadds
stos
sub
cmpb
clc
mov
mov
mov
inc
lea
sahf
cli
jg
mov
xchg
adc
aaa
push
mov
xor
insb
daa
push
push
test
js
xchg
cld
add
mov
xchg
push
xcrypt-ofb
cmpsl
in
test
mov
out
ret
sub
mov
sbb
xor
lret
mov
sbb
push
mov
iret
xchg
jmp
iret
outsl
xor
lock
jge
fcom
or
adcl
xchg
mov
mov
lret
jnp
xchg
mov
rep
jne
xchg
sbb
loop
lods
stos
jns
rorb
mov
pop
insl
dec
xchg
adc
test
push
test
cs
xor
jecxz
lret
jge
xchg
mov
sbb
sahf
mov
bound
cld
push
imul
imul
stos
add
fmull
jo
fdivrl
mov
cmp
and
xchg
xchg
lcall
ljmp
call
and
mov
in
mov
and
insl
sub
push
pushf
fwait
mov
jecxz
push
lret
and
cmp
je
fldt
and
dec
fs
push
and
int3
pop
pop
cmpsl
mov
dec
roll
cmp
fcoml
lret
mov
inc
adc
jns
xchg
lahf
mov
fidivrs
ror
mov
divl
data16
jns
mov
mov
mov
cwtl
sahf
inc
repnz
push
jmp
jmp
lahf
in
sbb
push
lret
test
cs
cltd
aas
and
and
mov
lods
inc
sbb
mov
aad
das
pop
xchg
push
inc
aaa
lds
sbb
mov
cmp
iret
lcall
leave
cmp
xlat
stc
push
sub
aaa
mov
orl
push
mov
dec
add
sub
sahf
cmp
in
sub
int
mov
out
ss
cmp
or
leave
scas
leave
push
cmp
popa
pop
jmp
mov
lods
sbb
mov
dec
pop
aaa
dec
in
aas
jle
dec
jg
adc
stos
jge
ret
pop
repnz
ja
cmp
lahf
adc
and
jmp
sbb
mov
lds
iret
ljmp
xor
sub
ljmp
push
insl
std
popa
loop
mov
mov
inc
test
dec
mov
add
add
xlat
adc
fs
push
pusha
out
or
mov
inc
inc
mov
add
inc
daa
sbb
dec
dec
imul
hlt
mov
and
or
mov
inc
sbb
iret
popf
cltd
mov
sub
jmp
xchg
dec
xorl
insl
mov
ret
nop
sub
dec
push
xor
mov
or
fcomi
jno
dec
dec
xchg
xchg
into
xlat
scas
imul
ljmp
ds
push
das
pushf
dec
insb
and
out
push
insb
sahf
mov
int
or
insb
icebp
orb
fucomip
push
pop
jo
sahf
lods
pop
orb
xor
mov
fldt
pop
adcb
sbb
scas
inc
cmp
mov
sbb
aad
xchg
sub
mov
mov
jge
dec
pop
sbb
ss
cmc
or
fincstp
push
in
sahf
inc
dec
jecxz
repnz
cs
fwait
pop
pop
frstor
sti
xchg
mov
jns
jl
dec
sbb
push
pop
test
mov
notl
pop
add
ss
lcall
cmp
xchg
pop
mov
jne
in
pushf
out
std
inc
add
add
leave
xchg
xlat
call
sarb
fs
loop
dec
pop
push
add
cmp
es
mov
push
ficompl
mov
cmp
scas
gs
cmpsl
idivl
int3
mov
inc
mov
mov
mov
mov
dec
aad
sbb
lret
mov
sub
or
lahf
lods
sub
pop
shll
push
aad
pop
hlt
sbb
xchg
scas
clc
rolb
repz
cltd
fcomi
add
jnp
out
xchg
loop
push
int3
adcb
enter
pushf
adc
leave
fbld
rorb
jmp
cmp
scas
and
xchg
mov
adc
aas
insl
jnp
xchg
sahf
js
adcb
mov
and
fwait
ss
push
adc
mov
cmp
in
in
add
xchg
fs
arpl
sti
pop
mov
stos
mov
and
test
out
or
jne
dec
in
mov
std
scas
mov
daa
repnz
ljmp
ja
inc
jg
movl
mov
nop
pushf
pop
adcb
jne
mov
imul
test
adc
inc
rcll
addl
loop
std
mov
sbb
dec
rcr
pop
test
and
stos
out
loop
push
mov
sahf
movsl
push
dec
rcl
and
shrb
ja
inc
lea
xchg
mov
arpl
mov
or
loopne
outsb
jo
push
fisubrs
mov
pop
stc
mov
mov
push
mov
push
dec
int3
out
ja
int
push
pushf
loop
pushf
push
insb
and
xor
adc
pop
adc
mov
in
enter
scas
jl
aaa
cmp
add
pop
shll
jl
xor
test
and
sbb
jp
inc
out
in
in
test
jecxz
imul
jo,pn
lea
pop
pop
mov
aas
in
jmp
fs
mov
mov
mov
fildll
dec
and
arpl
dec
outsl
adcl
sbb
imul
pop
push
cs
aam
nop
aam
push
push
or
dec
mov
arpl
cltd
add
sub
jns
rcr
jnp
sub
imul
mov
pop
dec
push
mov
je
aam
xor
in
mov
mov
mov
mov
cmc
pop
dec
push
sub
pop
daa
mov
ja
inc
and
mov
fisttps
push
je
or
addr16
mov
mov
incb
cmp
mulb
sub
daa
xchg
sbbl
cltd
cs
outsb
call
icebp
ss
mov
dec
or
mov
pop
iret
adc
test
or
roll
mov
in
nop
add
pop
adc
adc
test
jnp
jo
push
or
push
push
push
jns
bound
xchg
mov
mov
mov
jp
push
subl
mov
cmp
rorl
adc
push
orb
jae
jecxz
call
and
lods
pop
aaa
fldenv
clc
dec
dec
sbb
insb
loopne
mov
shl
mov
orb
stc
sub
popf
mov
negb
mov
push
out
push
sub
popf
fsubp
inc
lds
in
mov
or
xchg
mov
dec
std
sub
xor
in
xchg
test
mov
iret
mov
push
dec
js
dec
repz
add
dec
rcrl
imul
jae
cmpsb
fstpl
sbb
inc
mov
andl
gs
xor
repnz
xchg
gs
inc
imul
in
orb
lock
jne
xchg
int
pop
push
pop
jle
add
fldenv
sbb
in
mov
push
imul
in
or
lods
lret
iret
test
enter
jmp
dec
jne
sub
mov
xchg
es
mov
dec
push
jl
cmc
lret
out
mov
ja
cs
mov
or
xchg
dec
lcall
push
mov
and
fwait
dec
ljmp
call
inc
xor
mov
addr16
cmp
and
or
mov
pop
movsl
cli
sti
cmpl
xor
sbb
fucomip
mov
mov
or
dec
cs
push
jae
push
mov
scas
sub
ds
jbe
mov
pop
out
out
xchg
fcoml
ret
stc
sbb
pop
pushf
bnd
ja
in
fists
adc
xor
nop
add
pusha
jae
stc
add
lds
movsl
cmpsb
sbb
mov
lods
and
lret
icebp
sub
pop
daa
sbb
jle
in
pusha
cmp
loope
dec
mov
or
stc
mov
jb
mov
in
mov
inc
xchg
mov
pop
dec
dec
js
sbb
movsl
jnp
mov
or
data16
add
outsb
mov
add
sub
xchg
fsub
lret
xchg
sti
dec
dec
sbb
jbe
loope
jb
jp
xchg
test
imull
adc
mov
lahf
xchg
aas
xlat
dec
dec
sub
lods
lock
lea
xchg
repnz
movsl
fidivs
jmp
dec
pop
sti
sti
test
pop
xor
cmp
int
inc
jbe
les
ret
inc
es
fdivrl
push
xchg
shrb
mov
and
push
mul
jp
mov
test
lods
pop
in
mov
fidivrs
mov
lcall
push
sub
xor
sahf
cmp
dec
cld
fistpll
mov
dec
and
cmp
pop
adc
xor
sbb
lret
jg
outsb
jmp
adc
mov
dec
lret
aam
cmc
std
xchg
inc
mov
jb
inc
addr16
rcrb
es
jbe
push
in
jnp
inc
divb
clc
add
pop
sub
mov
icebp
and
xchg
push
lret
ret
daa
cs
out
inc
lcall
cmp
inc
pop
cmpsl
lahf
inc
mov
mov
jae
mov
pusha
loop
fsubrl
xchg
xchg
daa
cmp
inc
sti
sbb
push
jmp
aas
pop
jae
fldl
fdivrs
inc
jle
xorb
ljmp
loope
push
sub
sub
int3
xor
lret
sbb
jne
lods
jmp
jno
adc
mov
mov
orl
stc
stos
mov
fs
out
pusha
xor
lods
pop
outsb
pop
sti
add
inc
out
xchg
xchg
and
push
neg
notb
sbb
cs
push
or
dec
jo
dec
pop
add
or
retw
fwait
mov
sub
in
sub
popa
cmp
push
cmp
jno
add
idiv
push
loope
rdtsc
and
sub
ss
rolb
inc
rorb
pandn
inc
pop
mov
add
cmp
jl
ror
jo
cwtl
jecxz
adc
addr16
loope
popf
xorl
mov
push
and
sbb
lea
xchg
jg
orps
add
mov
mov
adc
fwait
xchg
sbb
push
mov
std
es
fistpl
lret
xchg
es
cwtl
pop
jle
in
mov
and
add
xchg
dec
xchg
negb
or
add
lret
push
rolb
xorb
stos
leave
mov
enter
xchg
scas
and
jl
std
mov
test
lock
subb
cmp
in
mov
iret
lahf
fs
rcrb
mov
test
jmp
xchg
cmp
jmp
ljmp
aad
lods
sub
xor
jne
adc
and
cmp
add
xchg
jae
push
sbb
pop
xchg
mov
lcall
ja
and
sbb
in
sbb
adc
cmp
leave
fwait
clc
cmp
mov
je
add
das
xchg
push
push
xor
enter
mov
pop
mov
sahf
push
adc
movsb
adc
cmp
bound
inc
shlb
stc
dec
xorb
push
pushw
mov
scas
mov
out
add
cwtl
cmpl
inc
cltd
and
leave
cmpl
fimuls
stos
lcall
adc
loopne
pcmpgtw
lret
daa
cmp
or
daa
push
idivl
xchg
outsl
aam
das
fnsave
int
in
ror
leave
stc
mov
jne
inc
xchg
cwtl
jns
call
mov
out
imul
cmp
adc
adc
scas
hlt
mov
jno
sbb
test
pop
pop
aas
mov
shlb
aad
sbb
mov
adcl
shll
inc
roll
pop
mov
test
rcl
ja
and
outsb
cs
popa
ret
inc
add
adc
dec
sti
lahf
insb
movsb
arpl
dec
rorl
or
adc
cmpsl
ljmp
into
fucom
cmpsl
insb
into
scas
ss
and
imul
mov
xchg
sbb
adc
inc
test
test
mov
xor
mov
imul
mov
dec
push
push
mov
add
and
mov
xor
stc
mov
and
dec
pop
push
mov
mov
xchg
dec
or
and
adcb
xlat
add
cld
jle
loope
and
icebp
pop
cld
mov
imull
into
pop
add
adc
push
popl
dec
sbb
push
fnstsw
mov
or
push
lods
icebp
pop
push
jno
stc
mov
into
jp
repnz
je
or
mov
int
call
and
adc
pop
ljmp
sbb
movsb
push
popf
lods
dec
inc
mov
imul
push
dec
lods
xchg
sub
adc
inc
and
stos
xchg
and
sarb
vmovsldup
and
in
inc
sub
lret
sub
add
inc
test
push
repz
or
mov
loop
loopne
scas
test
int
add
mov
out
insb
mov
or
push
xor
push
jecxz
inc
push
push
jbe
leave
movsl
mov
mov
mov
out
push
lret
lods
jne
pop
pop
cmpsl
rcll
xchg
daa
orb
into
sbb
sarl
cmp
cltd
shlb
daa
cmp
mov
fsubr
xor
or
scas
aam
dec
adc
jle
sbb
movsl
fcmovbe
fnstcw
movsb
inc
outsl
movsb
andl
mov
imul
movb
enter
push
pop
jne
orl
je
cmp
insl
out
jmp
scas
lods
jmp
mov
or
dec
test
mov
xchg
ds
and
cmp
in
cmp
repz
push
fmull
sbb
and
lds
aas
cs
repnz
inc
and
jg
test
xchg
cmp
test
inc
push
pop
jmp
das
lods
cmp
in
jb
mov
jb
jmp
mov
inc
imul
mov
jns
inc
cmpsb
fnstenv
in
mov
pushf
aam
push
and
cmpsb
iret
mov
into
sub
and
xchg
sub
scas
hlt
add
push
aas
sahf
imul
mov
test
jecxz
mov
mov
aas
pop
cmp
dec
or
scas
mov
add
ds
aam
cwtl
fdivl
or
add
in
cli
jae
imul
lock
cmp
cmp
shlb
fistpl
add
xchg
scas
lock
in
enter
add
push
or
call
leave
in
adcb
adc
push
mov
subb
lds
mov
push
ds
scas
push
ret
inc
or
ljmp
xlat
mov
jb
add
repz
mov
inc
jge
mov
adc
pushf
in
sbb
hlt
test
test
xacquire
jbe
call
incb
cli
out
mov
jp
push
popa
pusha
repz
fsubr
loop
and
or
and
mov
sbb
sar
push
jno
or
cli
dec
movsb
xchg
mov
ja
xchg
mov
imul
bound
jp
scas
push
dec
mov
fidivs
stc
cmc
mov
loop
jl
jns
xchg
popl
push
add
jne
icebp
mov
pop
jb
push
pop
sbb
cmpsl
lcall
ss
rclb
arpl
cmpsl
mov
pop
hlt
cmp
inc
or
cwtl
test
jg
mov
and
out
jp
test
add
xchg
out
scas
adc
fwait
xlat
push
nop
ficoml
les
mov
dec
xor
sbb
andb
adc
hlt
xchg
je
jg
cwtl
push
adc
pop
loopne
test
idivb
out
in
fiadds
mov
addr16
lea
pop
inc
lods
pop
xchg
sub
push
lods
les
dec
in
cmpsb
adc
aad
mov
or
sbb
loop
mov
cmp
xor
or
in
hlt
push
push
into
loopne
movsl
out
lods
jne
xchg
sub
dec
xchg
mul
pop
je
mov
insb
push
dec
xchg
out
ljmp
xor
sbb
xlat
inc
dec
dec
fistpll
sbb
arpl
push
mov
pushf
push
sbb
jnp
mov
mov
inc
jbe
std
push
mov
mov
clc
xchg
sahf
das
dec
leave
cmpsl
call
in
cmp
negb
fs
lds
sub
sub
gs
arpl
push
iret
push
imul
xchg
mov
adc
cmpsb
adc
fwait
in
pop
imul
or
mov
jmp
dec
shrl
add
ficoml
sahf
pop
mov
push
loop
xor
pop
pop
aam
sub
jle
andb
pushf
in
push
sub
jne
inc
add
adc
dec
ds
adc
sbb
inc
sbb
mov
sbb
cli
loopne
mov
adc
enter
push
insl
and
fimuls
dec
inc
enter
adc
addr16
xor
sbb
rorb
inc
sahf
mov
push
xchg
es
arpl
leave
xor
fwait
ror
mov
and
ss
push
test
xchg
cmp
sub
adc
adc
rorb
sub
cmc
pop
mov
sbb
lret
and
aad
mov
scas
xorb
fldenv
notl
mov
and
fmull
xchg
test
ret
dec
add
cld
mov
shrb
xchg
mov
mov
jnp
outsl
cmpsb
jecxz
lret
dec
cmp
cwtl
orl
pop
daa
mov
dec
lods
xchg
pusha
enter
inc
or
cwtl
mov
mov
in
popa
adc
shlb
arpl
cmpps
lods
hlt
dec
inc
cld
add
mov
dec
cmp
loop
ljmp
pop
je
jb
dec
jns
cmp
mov
bound
mov
mov
loopne
rcrl
jnp
dec
adc
iret
or
or
mov
in
fcmove
pop
dec
or
mov
stos
push
shlb
pop
push
scas
or
xchg
pop
fistpll
xchg
sub
pop
ret
push
lods
push
sbb
jae
push
push
rcrl
jge
bound
out
pusha
xor
push
pusha
stc
pop
jae
mov
std
xchg
lret
fidivrs
mov
cmp
push
call
sbb
fs
push
out
dec
jbe
mov
pop
xchg
lods
enter
xor
cld
femms
jl
cmp
addl
andb
ljmp
cmpsl
pushf
xchg
mov
pushf
lretw
and
adcl
sbb
jb
mov
xorb
cmp
mov
inc
push
pop
scas
rclb
pop
inc
repz
out
into
pop
lahf
daa
sarl
je
pop
add
adc
push
notl
push
xor
dec
out
div
stos
stos
faddl
pushf
cmp
inc
cmp
adc
adc
jo
add
fadd
lea
lods
sbbb
mov
lret
incb
bswap
push
mov
iret
and
int
pop
lods
sub
xor
push
xchg
cmp
pusha
xchg
das
jmp
jns
ret
inc
dec
dec
mov
mov
xchg
aaa
sub
popf
cmpsl
sub
push
pop
adc
bound
scas
sahf
push
mov
add
pushf
inc
popf
cli
daa
es
mov
out
and
xchg
repnz
pop
or
jno
test
test
mov
push
mov
cmp
dec
mov
jnp
xchg
xlat
xchg
xchg
sbb
and
mov
push
adc
xchg
cmp
es
or
cmpsl
push
out
dec
mov
push
adc
ret
dec
fwait
xor
lods
enter
stos
fcmovu
sub
nopl
or
mulb
mov
mov
test
test
outsb
sbb
xchg
mov
mov
bound
jbe,pn
add
push
int
hlt
iret
aas
call
cmp
lahf
and
popf
out
adc
mov
out
xchg
xor
int3
mov
je
xor
movsl
out
dec
inc
enter
xchg
jnp
test
popa
xchg
sbb
out
mov
cmp
pop
daa
pop
add
cli
sub
imul
inc
leave
mov
or
into
or
mov
insl
add
sub
cmp
movsl
xor
sub
adc
adc
into
sub
xor
in
cmp
dec
sbb
daa
je
push
push
mov
inc
shll
xor
xchg
movsl
mov
daa
cmpsb
dec
ja
mov
inc
jl
mov
scas
daa
sbb
leave
mov
rcl
lods
sarb
aaa
push
pusha
mov
cmp
mov
xchg
int3
dec
sbb
jg
movsb
aad
dec
cli
popa
std
jge
std
movsb
cltd
incl
dec
dec
shl
jge
lret
xchg
xchg
leave
out
and
push
iret
xchg
xchg
push
push
xchg
loop
jb
jns
pop
scas
fcmovu
adc
or
popl
push
scas
test
mov
mov
pop
cmp
mov
xor
add
push
divb
sbb
cmc
fwait
aaa
mov
xchg
or
xchg
dec
mov
rolb
les
or
adc
inc
jb
mov
mov
inc
xchg
call
inc
pop
imulb
jnp
fcoms
or
mov
add
push
sbb
and
out
shrl
test
push
les
arpl
imul
es
adc
sarl
mov
mov
pop
xor
shr
inc
int
xchg
cs
hlt
jns
mov
sbb
lods
in
mov
lret
repz
and
int
sbb
sbb
hlt
jmp
mov
sub
push
jge
out
and
iret
movsl
sbbw
cmpsb
adc
pop
movsb
mov
in
sub
jge
stos
and
lret
in
and
sbbb
push
sbb
or
dec
cmp
fistl
sub
cmpsb
xchg
subl
add
sbb
loopne
or
sbb
adc
jp
int3
inc
out
pop
pop
pop
js
stos
cmpsl
iret
pop
cltd
inc
mov
rol
add
flds
fsqrt
mov
mov
or
mov
sbb
dec
jle
shl
arpl
lret
and
lea
imul
sub
call
loop
test
mov
mov
dec
mov
xor
jne
push
sub
add
or
push
outsl
sbb
and
mov
loope
mov
mov
and
push
cld
mov
dec
mov
add
stc
ja
jne
scas
imul
sub
cmp
adcb
jae
dec
xchg
scas
lret
xchg
push
jle
mov
sbb
fldpi
adc
jmp
dec
imul
xor
push
xchg
inc
inc
rcl
cld
mov
push
cmpsl
dec
loop
fcom
pop
push
aad
lahf
es
popf
test
fistpll
add
pop
leave
fidivl
inc
cwtl
inc
ja
push
sbb
cld
jnp
jle
insb
push
xor
pop
push
jae
outsl
inc
sbb
cli
daa
xchg
mov
fisubs
and
out
adc
mov
daa
adc
mov
push
data16
jne
or
in
fmull
std
orl
es
xchg
dec
mov
out
jge
sti
inc
mov
or
jb
xchg
inc
pop
lods
loopnew
pop
add
xchg
mov
inc
movsl
inc
sbb
inc
outsb
jo
adcb
jp
sub
out
imul
mov
scas
and
aaa
inc
cmpsl
imul
insl
ficoml
push
add
xlat
xor
shr
xor
mov
mov
or
loope
xor
sub
inc
movsb
sbbl
cld
movsb
sbb
popa
add
int3
rolb
lret
inc
in
addb
xor
es
sbbl
adc
sub
movsb
sub
int
xor
or
ljmp
stos
pop
sahf
mov
cmp
mov
out
shl
stos
jo
stc
mov
scas
cld
inc
mov
out
mov
sbb
push
fldcw
hlt
xchg
mov
mov
shrb
rorl
dec
rolb
sbb
scas
int
push
rcll
jge
xlat
clc
fstl
jb
push
clc
push
xor
cmpsl
mov
cltd
mov
jg
imul
mov
ljmp
add
pop
aas
jl
dec
lods
xchg
pop
mov
cmp
cwtl
pop
popa
incb
arpl
dec
jmp
stc
pop
lcall
inc
dec
ret
xchg
mov
movsb
call
pop
pop
mov
aas
dec
xor
sbb
test
push
cmp
sub
into
mov
loope
shll
or
out
lods
and
or
orl
orl
and
mov
test
mov
cmp
sub
sbb
cmpb
cmp
andb
stos
stos
pop
and
clc
es
inc
mov
adc
ds
mov
sbb
sarl
es
cmp
push
adc
and
xlat
andl
in
addr16
test
xor
inc
dec
sub
mov
sbb
ret
pop
xor
sbb
dec
xchg
jae
jg
push
mov
repnz
fucomip
aas
mov
hlt
div
gs
xor
pop
xchg
lcall
inc
dec
pop
inc
fcomip
and
in
lret
bound
shr
and
sub
popa
out
ja
mov
xor
cli
imul
int
mov
leave
cmp
add
jl
pop
aad
test
mov
les
adc
scas
mov
jle
pop
repz
dec
pop
mov
xchg
mov
jle
sahf
push
fsub
repnz
test
mov
add
sti
outsl
xchg
mov
fistps
jmp
aad
je
cmp
pop
dec
pop
mov
push
ds
mov
rol
stos
ss
jmp
popf
inc
xor
sub
scas
pop
lret
imul
push
mov
cmp
and
or
call
aad
clc
out
pop
jns
xor
jg
bound
adc
sub
lods
mov
sbb
roll
ficoml
jp
inc
cmc
inc
cmc
mov
ljmp
xchg
mov
sub
sub
adc
rcll
mov
lahf
jb
xchg
or
push
xor
dec
jo
fiaddl
jg
popa
repnz
sub
ficoml
jbe
cs
xchg
jle
xchg
or
pop
loop
pop
stos
repz
repz
enter
repz
cmpsl
xchg
push
lods
das
clc
aad
push
mov
cmp
adc
and
mov
shlb
mov
rolb
mov
push
xor
mov
xchg
or
lds
cmpsl
sub
dec
repnz
sarl
test
loope
js
sub
mov
pop
pop
arpl
inc
or
mov
leave
mov
mov
icebp
jl
int3
jge
and
call
imul
xchg
dec
hlt
cmpsb
outsb
mov
jg
jnp
sbb
pop
sbb
pop
mov
shl
gs
test
leave
outsb
les
aas
mov
lock
lahf
mov
push
or
dec
insb
mov
push
push
insb
cli
jle
mov
push
lret
fistl
and
pusha
inc
js
int
and
mov
lods
inc
inc
push
jmp
xchg
rcrb
jnp
push
ja
insb
pop
xor
fwait
cltd
push
sub
dec
xor
push
add
dec
test
orb
movsl
js
mov
clc
hlt
and
cli
or
xor
subb
push
inc
loop
in
and
mov
inc
add
mov
mov
add
test
loope
push
mov
xor
push
ljmp
adc
rcll
xchg
sarl
hlt
xor
jl
sbb
jo
repz
es
test
push
sbb
sub
ss
xor
enter
push
or
cmp
pop
pop
in
movsl
ljmp
popf
cmp
xor
das
ss
js
lahf
das
cmp
sbb
mov
out
cmp
mov
enter
pop
jne
adcl
xchg
in
add
in
loop
jecxz
popl
test
popf
or
rcr
call
lods
push
or
fisttpll
sub
xchg
pusha
mov
into
pusha
or
arpl
cmp
add
or
lcall
in
xor
scas
rcr
mov
pop
arpl
add
in
xor
aad
rorl
inc
cmp
pushf
inc
dec
dec
push
sub
or
loopne
or
jo
cwtl
nop
outsb
adc
mov
popf
cmp
push
mov
pop
les
ja
mov
pop
xor
jg
subl
idiv
aaa
jmp
adc
adc
gs
sub
lret
rorb
int3
inc
in
fiaddl
push
shl
pusha
adc
push
sub
fsts
stos
dec
testb
loopne
cs
dec
pop
ds
movsb
test
das
xlat
mov
and
cld
jae
fstpt
call
aad
pop
fnstsw
mov
push
sub
jno
in
or
lods
push
dec
mov
or
mov
xchg
lretw
aaa
imul
and
lret
or
sti
mov
inc
dec
cmp
add
mov
mov
mov
mov
in
sub
jae
psubsb
out
gs
jns
out
sarl
xlat
sbb
push
int3
mov
aam
mov
data16
mov
push
mov
dec
and
lods
lods
mov
xor
cld
loop
inc
push
into
jge
sub
dec
xor
mov
xorb
add
ja
pop
in
cmpsl
test
lret
imul
jo
scas
mov
idivl
cld
loop
repnz
cmp
fwait
in
mov
das
dec
push
mov
xor
mov
dec
push
ficompl
sahf
dec
and
push
icebp
mov
fdivr
dec
mov
xor
push
push
rep
in
inc
hlt
hlt
jno
nop
daa
cmpsb
mov
xchg
xor
subl
ja
fldcw
arpl
sbb
xchg
xchg
mov
mov
pop
popl
enter
jbe
flds
lock
sbb
jmp
mov
add
mov
roll
jge
mov
jp
xchg
dec
push
sbb
fsts
hlt
cmp
int
sub
imul
mov
aad
imul
xchg
pop
jge
shlb
iret
mov
xor
mov
dec
repz
gs
lods
mov
sbb
jae
mov
mov
inc
sbb
je
cli
ja
imul
jns
push
and
jle
clc
mov
push
jno
mov
cmp
xlat
mov
jb
xor
imul
bound
mov
fidivl
hlt
in
push
dec
mov
movsb
and
rcrl
sbb
test
jmp
fs
push
inc
clc
jns
ljmp
inc
mov
out
xchg
sub
mov
outsb
push
dec
fisubl
mov
cltd
and
xchg
jg
jno
lock
arpl
dec
add
jnp
mov
pop
outsl
adc
adc
cltd
lcall
lods
test
mov
in
sub
inc
ljmp
aas
sbb
mov
sti
sub
subl
out
jbe
insb
push
add
or
dec
hlt
xor
cmp
orb
sbb
js
hlt
pop
dec
mov
cmp
mov
sbb
mov
cmp
lock
cmpsl
pop
test
xlat
push
bswap
js
xchg
push
xor
xor
xor
pop
mov
cmp
and
aad
or
adc
lcall
xchg
xor
stc
dec
int3
add
aam
aam
ud2
dec
in
mov
daa
or
movsb
sbb
stos
mov
dec
fisttpl
push
movsl
lret
fwait
arpl
xchg
insb
fistpl
ljmp
movsb
loop
and
nop
insb
xchg
adc
adc
xchg
leave
sti
dec
xchg
lods
pop
jbe,pn
xchg
js
and
std
and
adc
xchg
inc
and
push
lds
in
outsb
inc
and
popa
into
repz
movsb
out
fs
jle
pop
in
mov
push
stos
sub
rolb
mov
xchg
fbld
sub
fsubl
orb
cmpsb
pop
cmp
fsubrl
fstpt
mov
jae
ss
into
adc
test
in
jns
pop
mov
cwtl
test
hlt
xchg
pop
loope
add
inc
fcom
mov
push
add
mov
ds
or
jp
andl
pushf
in
push
mov
fsubs
cmp
jg
mov
enter
bound
jne
lret
sbb
fs
sub
lahf
decb
es
jne
jae
xchg
push
dec
xor
lea
icebp
test
mov
pop
cmpsl
cmp
mov
inc
cmp
inc
jae
jg
das
xchg
push
stos
push
pop
mov
out
adc
test
icebp
out
fld
inc
in
adc
add
hlt
in
cmp
into
push
xor
push
jnp
push
ja
xchg
stos
jg
sbb
push
add
jmp
pop
xchg
test
into
push
cmp
or
or
icebp
je
leave
je
in
xchg
lcall
loopne
cmpsb
stc
das
shrb
cmp
sub
jns
insb
sub
jns
mov
xchg
xor
and
das
sbb
test
xchg
daa
lret
lds
mov
pop
xor
mov
mov
sub
lods
adc
sbb
loope
cmp
sar
lea
mov
ljmp
dec
jmp
cmpsl
lea
ljmp
lahf
sbb
mov
out
hlt
sub
or
lock
dec
imul
leave
push
ret
cmp
bnd
jmp
inc
ffree
jo
ret
xchg
psubsb
loope
rcrl
push
push
stc
fwait
xchg
cmpsl
les
dec
outsl
shll
xchg
lock
mov
inc
stos
jno
popa
cmpsb
xor
adc
dec
cmpsb
repz
inc
aas
xor
stc
imul
in
ret
lahf
adc
mov
jecxz
fdivrp
xchg
and
ss
jns
enter
mov
hlt
int3
inc
insb
jmp
sub
bound
aam
scas
xchg
and
aaa
or
mov
repz
icebp
and
out
push
out
out
jg
enter
fldlg2
movsb
sbb
bnd
xchg
ret
lret
jnp
fwait
fwait
mov
seto
pop
fimull
cmp
and
or
cltd
sub
lahf
mov
test
gs
sbb
fistpll
xchg
jo
push
aam
mov
cwtl
cmp
adc
fisubl
hlt
cmovp
mov
and
out
stos
sub
jmp
push
xor
cmc
adc
lcall
stos
lds
xchg
jl
cmp
les
push
testb
xor
mov
cmp
jge
testb
mov
fcompl
iret
jbe
push
pushf
cmpl
lret
xchg
gs
movsb
sbb
jnp
and
ljmp
aaa
mov
psllw
mov
jl
sbb
fstl
fbld
scas
dec
fnstsw
dec
scas
cmp
aam
outsb
and
call
mov
mov
repz
mov
mov
xchg
das
fmuls
sub
sub
xlat
mov
out
out
and
cmp
push
and
stos
div
es
shlb
lret
cmpsl
idiv
aad
lods
popa
das
or
add
sub
out
test
aad
gs
xchg
pushf
sbb
sahf
cvtdq2ps
cld
gs
movsl
jge
mov
pop
cmp
movsb
ja
xor
stos
jae
mov
mov
jno
rcrb
mov
or
faddl
cli
dec
sbb
add
jge
lret
push
xchg
repnz
mov
or
push
xor
sbb
dec
push
cs
pop
scas
sub
xchg
idivl
mov
pop
sar
cmc
por
shl
std
ljmp
stos
pop
aaa
xor
neg
pop
out
hlt
jp
and
push
sub
jae
pop
in
ja
cltd
mov
pushf
push
je
dec
jnp
sbb
fwait
insb
sub
sub
or
mov
jecxz
adc
mov
dec
push
hlt
repz
pusha
cs
jl
fs
adc
in
add
in
repz
mov
mov
adc
nop
adc
sti
cmp
stos
inc
cmpsb
cmp
xchg
rorl
imul
pop
pusha
mov
or
repz
pop
test
pop
mov
ja
int3
jns
dec
cmp
push
test
pop
cmp
fdiv
cmp
fwait
adc
ljmp
and
cmp
inc
js
in
jge
xchg
and
sbb
sbb
aaa
sti
push
mov
adc
loop
cld
mov
repz
xor
insl
jle
and
rcrb
xor
ds
testl
dec
jae
lcall
and
push
cwtl
inc
dec
xchg
ja
call
mov
or
fbld
fstpl
cmp
daa
movsl
xchg
jne
add
stos
je
in
imul
popa
cs
js
sub
mov
push
or
and
mov
cmp
lahf
mov
jbe
iret
subl
outsb
fldl
inc
outsb
push
gs
xchg
jl
lcall
fucomp
lods
rcrl
sbbl
jbe
fisttps
nop
cmp
daa
cmpsb
pop
mov
cmp
pop
push
aaa
dec
sub
pop
push
test
dec
data16
add
lcall
pop
inc
sub
mov
lods
insl
stos
dec
cs
mov
mov
xor
inc
cmpsl
jmp
out
fwait
mov
mov
subb
incl
xor
jae
adc
pop
loope
les
inc
mov
cmp
xchg
and
leave
lods
jo
nop
mov
call
hlt
fbstp
cmp
jb
or
cmp
call
aas
pop
in
or
mov
pop
dec
ret
scas
jg
bswap
jle
lcall
rorb
and
lret
sbb
pop
lret
adc
sbb
pop
cwtl
out
insb
sbb
mov
xor
xchg
test
pop
adc
aad
shll
jecxz
sub
sub
stos
push
jl
fs
or
inc
pop
add
xor
fisubrl
in
adc
lods
jp
jecxz
out
mov
add
push
mov
enter
in
lock
insb
fstl
iret
sti
ljmp
shlb
cs
xor
cmp
and
cmpsl
and
out
pop
in
mov
cmp
and
ja
stc
outsl
cwtl
dec
cmpsb
cmp
xor
pushf
mov
jl
aad
fists
mov
lret
add
lahf
pop
sub
sbb
aad
xchg
cmp
mov
pop
add
inc
andb
push
pop
in
mov
and
and
data16
xchg
rorb
mov
and
fdivrp
out
pop
xchg
xor
div
mov
std
and
dec
cmp
leave
test
cmpsb
sub
xchg
xor
xchg
xor
push
or
jae
enter
dec
jne
mov
sbbb
xchg
cli
push
dec
je
jno
iret
out
sub
sti
xchg
cmp
adc
movsb
repnz
xor
mov
in
push
sbb
int3
and
dec
lcall
lret
aam
push
push
pop
mov
das
ror
mov
mov
mov
add
fmul
test
mov
and
add
icebp
add
sub
jecxz
imul
out
bound
cld
push
ss
mov
mov
mov
insb
fimull
rcr
iret
dec
sbb
imul
adc
repnz
mov
in
fs
push
xor
insb
mov
fwait
cmp
jg
dec
les
pop
cmp
mov
sub
jne
adc
imull
in
jg
mov
sub
scas
xchg
push
rclb
in
mov
divb
xchg
inc
and
rcrb
test
mov
loope
jge
hlt
lds
mov
popf
and
pop
mov
push
jecxz
imul
out
imul
outsl
sti
iret
std
lcall
add
popa
cmp
push
sbb
insl
pop
mov
insb
in
insl
adc
or
lret
cmpsl
loopne
dec
es
lahf
lret
xor
ss
stos
fnstenv
xor
or
cmp
and
call
cmp
mov
add
mov
sbb
add
shlb
sahf
fisubrs
and
and
rcrl
or
loop
pushf
inc
inc
idivb
leave
push
dec
repnz
mov
test
push
and
sti
sbb
dec
xchg
out
ror
sbb
sbb
dec
sub
mov
mull
xlat
shlb
sub
lods
adc
shlb
xchg
fstps
and
and
ljmp
call
mov
in
jle
dec
jb
iret
jo
push
or
sbb
insb
out
mov
lea
fnstenv
dec
ds
jg
or
mov
cmp
cltd
sub
xchg
pushf
fidivl
fistps
cmp
cmp
pop
gs
jmp
pop
jne
pop
jnp
lock
cmp
jns
ja
xor
pop
and
std
xor
cmp
ret
fistps
imul
stc
test
shr
rclb
jb
pop
jb
popf
push
call
mov
push
and
jae
pop
mov
cli
insl
movsb
or
aam
aad
outsl
xor
rclb
mov
push
leave
mov
jmp
push
lret
jns
call
fbstp
in
push
adcl
xor
and
fiadds
pop
jbe
push
pop
sub
adc
cmc
or
out
enter
repz
lret
adc
gs
js
jecxz
or
lds
inc
mov
and
add
adc
inc
xor
lock
push
or
xchg
subl
mov
mov
adc
hlt
mov
sbb
insl
pusha
idivl
aad
ss
ljmp
add
xor
sbb
mov
fisubrs
dec
nop
mov
cwtl
fwait
dec
cmp
mov
push
inc
idivl
scas
jo
cmp
mov
pusha
ljmp
jl
inc
dec
sahf
jns
dec
sub
pop
push
jnp
daa
loop
mov
xor
jmp
add
mov
fcmovb
cmp
adc
fsubl
fildl
and
push
and
xchg
ljmp
sub
aam
mov
les
outsb
ja
and
cmp
fdivrl
sarl
pop
jmp
test
mov
into
out
gs
cs
mov
cmc
add
aaa
add
xorl
lea
fidivs
cmp
icebp
aas
cltd
cmp
and
lret
jo
sbb
pop
into
leave
xchg
dec
and
or
pop
lods
add
sub
mov
daa
lds
inc
insb
or
jp
out
cmpsl
ficompl
outsl
aas
pop
sarl
mov
push
sub
jmp
fiaddl
or
xchg
loopne
push
push
xchg
shl
and
addr16
sbb
jle
cli
scas
fadds
jne
fcompl
dec
shr
mov
gs
idiv
xor
mov
xor
xchg
and
push
shr
xchg
sbb
bound
adc
int3
add
test
popf
mov
aam
clc
dec
mov
mov
dec
jae
xor
leave
sbb
lods
icebp
add
mov
jl
dec
xor
lahf
add
xchg
push
hlt
sbb
lret
mov
aad
jp
sbb
loopne
fiaddl
xor
data16
rcrb
mov
pop
gs
pop
adc
neg
or
dec
les
dec
fmul
jmp
xor
sti
daa
push
jg
js
sbb
aad
add
movsb
sub
push
mov
imul
sbb
pop
pop
into
and
pop
ss
pop
mov
lret
sub
push
loopne
xchg
inc
adc
mov
jmp
mov
xchg
mov
pop
popa
addr16
cltd
dec
rclb
mov
mov
or
push
std
mov
mov
fidivs
sbb
or
push
xchg
imul
jae
mov
xchg
mov
inc
stos
gs
lods
and
push
cld
jle
xorl
jbe
mov
lock
xchg
data16
add
pop
ss
std
lcall
je
dec
mov
rolb
xchg
cmp
fs
ret
stos
call
outsb
cmc
les
xchg
test
mov
cmc
jb
jl
add
dec
stos
inc
lods
mov
jmp
out
adc
inc
out
lock
adc
cwtl
wrmsr
ja
repnz
test
fsubl
push
dec
and
fidivs
xchg
mov
enter
mov
incl
push
out
jmp
sub
cld
mov
add
cmp
jecxz
clc
cmp
xor
xor
cmovns
lods
ret
fidivrs
lcall
jae
sbb
push
lahf
sbb
loopne
in
jnp
push
call
iret
xor
stc
in
movsb
mov
or
adc
add
in
nop
pop
dec
xor
add
add
cmc
out
push
lods
cmpsb
jns
mov
sub
test
mov
mov
stos
mov
filds
and
addr16
jbe
out
mov
sbb
xor
stos
repnz
pop
ret
mov
leave
sbb
dec
loop
mov
out
adcb
mov
lret
add
in
out
inc
stos
inc
adc
out
pop
fucomp
xchg
jnp
adc
scas
inc
negl
test
xchg
add
add
andb
cmp
sub
mov
fadds
and
xchg
sub
jmp
movsl
imul
pusha
push
lret
adc
repnz
dec
pop
push
adc
dec
outsl
dec
pop
in
nop
fisubrs
lret
loopne
mov
mov
pusha
sub
inc
adc
aad
push
cmp
icebp
cmc
xor
sahf
pop
in
or
mov
mov
sahf
xor
jbe
mov
jno
mov
xchg
adc
icebp
mov
aaa
push
cwtl
mov
xchg
cli
sub
xchg
ja
fbstp
jecxz
enter
mov
mov
out
shl
add
mov
cmpsl
mov
ljmp
dec
xchg
or
sub
shrb
and
leave
ja
lcall
stos
jnp
mov
ja
call
shrl
mov
out
test
mov
lahf
mov
ret
add
rolb
mov
lret
pop
pop
in
jge
je
and
popa
inc
pop
out
fisttpl
ss
mov
push
test
aam
loope
int
ret
sub
sbbb
sarb
sub
mov
pop
add
insl
call
or
lods
xchg
jp
call
jge
add
insb
call
imul
inc
out
pusha
bound
add
mov
frstor
lds
add
lahf
jno
shlb
orl
test
sbb
xor
adc
add
jnp
mov
insl
addr16
xor
dec
out
arpl
push
dec
pop
push
mov
mov
scas
mov
lcall
adc
xor
pop
cltd
xlat
pop
sti
fisubrl
into
sbb
leave
js
dec
mov
lret
stc
rorb
mov
or
andl
sbb
add
lea
scas
cld
out
insl
mov
push
jge
mov
outsl
push
enter
fs
cmp
lock
pop
push
imul
inc
push
push
xchg
or
adc
sbb
mov
scas
sbb
mov
lahf
push
rcr
jp
jecxz
cmp
repz
push
mov
pop
sub
ss
sub
or
addb
cmp
stos
or
hlt
jns
imul
push
xor
and
aaa
pop
outsb
and
iret
scas
mov
movsl
int
jno
add
test
faddl
or
jns
and
xor
mov
cmp
add
mov
iret
jge
or
fcoml
loope
loope
pop
mov
out
sbb
sub
sub
scas
xchg
dec
jb
mov
and
push
fbstp
movsb
ret
movsl
int3
insb
mov
inc
movsl
lds
incb
dec
leave
lods
jp
cltd
pop
mov
sub
sarl
xchg
dec
cmpsb
xchg
xchg
or
mov
loope
in
shr
mov
jle
pop
and
cmpsl
in
adc
mov
or
mov
fwait
leave
iret
xor
pop
in
and
js
jo
push
aad
mov
mov
pop
fstl
ficompl
pusha
push
loop
xor
lret
in
test
sub
jbe
pop
out
cli
jne
lods
xor
bound
mov
inc
push
inc
loop
lret
stc
push
push
mov
jge
push
mov
jecxz
xchg
inc
test
xor
mov
mov
or
lds
loop
add
gs
xchg
mov
sbb
int3
fcoml
lods
jbe
cmp
loopne
push
add
dec
add
aaa
fcomip
mov
xchg
mov
add
jle
xchg
ds
aaa
mov
scas
and
mov
adc
add
daa
jnp
pop
loope
clc
lahf
data16
push
pop
icebp
mov
push
fwait
sahf
andl
movsl
rcrl
xchg
jg
xchg
sub
and
inc
push
dec
loope
mov
stc
inc
or
mov
or
nop
adc
mov
sbb
mov
leave
hlt
dec
add
test
aad
adc
clc
aad
mov
mov
popa
adc
insl
out
roll
cli
leave
and
dec
arpl
testb
fistpl
mov
das
pop
mov
fs
icebp
iret
hlt
sub
pop
jmp
xchg
into
jl
xchg
cmp
xor
xor
sub
xor
js
fs
xchg
fwait
pop
jo
sbb
cmpsl
inc
cmp
leave
mov
mov
lret
lds
pop
pushf
cli
and
or
push
pop
xchg
fs
or
jmp
add
outsb
xchg
adc
sub
add
pop
divb
gs
sbb
inc
insl
push
mov
movsb
jecxz
cmpsb
xor
outsb
or
lea
push
addl
push
cmpsb
fisttpl
stc
faddl
shlb
clc
and
ds
lods
rcl
push
pop
hlt
ret
and
pop
sbb
lahf
ja
mov
ror
ret
dec
lret
xchg
inc
jbe
add
lcall
movl
in
gs
adc
pop
movsb
inc
dec
gs
mov
jns
pop
mov
mov
icebp
ficompl
pop
leave
adcb
pushl
mov
xor
pop
cli
push
xor
dec
cmpsb
pushl
sarl
iret
inc
iret
xchg
outsl
int
sbb
or
inc
add
mov
cltd
bnd
popf
pop
xor
xchg
sar
sbb
dec
imul
dec
les
add
movsl
sbb
mov
xlat
cli
add
pop
xorl
hlt
iret
pop
ja
out
es
jmp
adc
push
xchg
xchg
call
fildl
mov
sbb
mov
leave
inc
das
inc
push
jno
pop
pusha
mov
mov
adc
add
stos
pop
movsl
stos
push
jmp
mov
les
dec
cmp
cmp
iret
data16
mov
sbbl
outsl
cmp
xchg
lcall
inc
mov
sub
fnsave
test
out
nop
mov
fnsave
inc
dec
imul
xchg
ja
xor
in
icebp
frstpm(287
stos
test
out
mov
jno
push
dec
pop
lds
fisttps
es
and
jle
cmpsb
loop
pop
jne
xchg
aad
int3
push
cmpsb
and
sbb
mov
pop
inc
icebp
mov
inc
jae
sbb
call
inc
sahf
inc
stos
clc
xchg
push
xchg
xor
sbb
out
out
mov
fnsave
pusha
and
xchg
cmp
lahf
sub
push
test
adc
int
addr16
adc
ja
outsl
lret
sti
scas
add
pusha
xchg
add
cmp
imul
fwait
sub
push
jo
stos
test
adc
mov
push
push
popf
jno
and
dec
stc
dec
push
or
and
cltd
das
xlat
add
cwtl
in
push
and
ja
fcoml
mov
aas
xchg
add
mov
lahf
mov
mov
les
adc
ja
lods
sbb
pop
mov
jg
movsl
xchg
lret
imul
dec
in
mov
mov
clc
sub
inc
xor
pop
roll
stos
cmpsl
cmc
icebp
or
and
inc
dec
pop
or
stos
lea
notb
mov
jb
jo
sub
scas
mov
xlat
stc
and
sbb
fwait
push
jmp
scas
dec
mov
sbb
cmp
and
jb
fsubs
xchg
ljmp
sub
mov
out
ret
adcl
popa
adc
xor
dec
mov
addb
ss
adcl
mov
sbb
stos
cmp
outsl
jo
dec
fwait
sbb
and
cmp
and
mov
into
inc
lds
mov
dec
or
lods
xor
aam
mov
cltd
jle
dec
fcmovne
push
nop
and
adc
mov
xor
inc
sbb
sarb
push
in
and
push
imul
adc
jbe
mov
fisubs
dec
stos
outsl
jb
les
loopne
dec
fldl
cmp
je
inc
xchg
out
inc
sub
push
jle
stos
sub
xchg
jno
lea
loop
in
enter
sub
mov
outsl
adc
leave
jns
in
push
rolb
sub
enter
daa
xchg
loope
sbb
jae
and
loopne
push
enter
fmull
lock
hlt
fidivrs
mov
jne
mov
or
mov
hlt
inc
sti
add
xchg
jmp
pushf
outsb
test
aam
cmp
mov
pop
xchg
push
dec
mov
mov
addl
aaa
lock
push
out
pop
mov
sbb
aad
jb
mov
sub
sbb
dec
sbb
into
lds
mov
cmp
lahf
sbb
xchg
mov
and
pusha
xor
pop
xor
aam
xor
pop
repz
dec
faddl
or
xchg
pop
jmp
push
sbb
push
ds
cmp
mov
jnp
push
test
inc
mov
test
sub
dec
jbe
in
pop
mov
cwtl
aam
and
and
adc
and
outsb
sbb
pop
jmp
mov
mov
mov
cmc
pusha
mov
jmp
jl
rcrl
mov
into
push
or
aam
cwtl
ja
clc
xchg
push
and
adc
jp
das
sbbl
ret
addr16
or
mov
andl
mov
mov
decb
push
iret
mov
push
pop
adc
inc
adcb
and
inc
mov
repnz
inc
or
xorb
and
out
sub
xchg
or
dec
in
ja
push
sub
lods
popl
jmp
jmp
fs
stc
mov
mov
call
push
fs
sub
or
outsl
jbe
mov
ret
cmp
jmp
push
or
iret
jl
sbb
nop
pop
pusha
fiaddl
add
pusha
jae
or
aas
mov
sbb
push
testl
into
push
inc
mov
dec
xchg
bound
lods
inc
jo
fs
loope
stos
mov
inc
ljmp
and
cmc
dec
pop
sbb
stc
dec
lret
popa
loope
mov
rcrb
lret
jns
xchg
adc
xchg
push
lea
jno
dec
jmp
xchg
push
push
or
xor
jecxz
addr16
pop
orl
and
pop
mov
lods
sahf
or
mov
mov
pop
jle
lock
jle
and
ja
push
js
pop
out
xchg
ror
push
fnstsw
leave
push
jp
fsubrs
mov
into
jno
or
push
dec
insl
mov
jmp
jecxz
mov
mov
and
jb
stos
in
push
ret
rolb
cwtl
xor
fs
mov
push
hlt
jo
stos
out
sub
daa
mov
roll
ds
mov
xor
testl
adc
mov
jecxz
pushf
fwait
mov
out
and
cmp
jp
std
in
pop
cmp
dec
sub
out
test
stos
jle
mov
mov
lret
nop
lods
mov
mov
or
push
xor
cmp
ja
repz
pop
mov
test
mov
ficompl
neg
cli
leave
mov
push
and
push
stc
ss
es
ret
mov
lret
jge
mov
jle
aam
ret
sbb
xchg
inc
test
sbb
push
insb
push
and
mov
xor
inc
push
push
cmc
loopne
mov
xor
bound
mov
fdivs
add
mov
lock
aaa
cmpsl
subl
push
add
mov
nop
loop
fistpl
aaa
sbb
or
push
inc
repz
popf
pop
or
push
push
cs
iret
pop
lds
xor
ljmp
popa
popf
sub
shrb
and
cli
sbbb
scas
lock
fsubr
pushw
push
shl
stc
rolb
mov
rcr
cmp
aam
ljmp
add
ja
outsl
push
int3
aaa
js
xchg
xorl
jb
xchg
sub
shl
popa
mov
and
pusha
sub
xchg
nop
mov
jp
xchg
lahf
fmul
jno
fstl
push
mov
fidivs
out
inc
mov
mov
dec
jnp
addr16
sbb
fs
mov
lret
imul
sahf
xor
dec
shll
in
frndint
add
mov
inc
adc
sbbb
pop
icebp
and
shrl
hlt
and
leave
leave
fcomip
sbb
jle
push
notb
out
dec
test
das
lahf
lock
adc
lods
and
popa
sbbl
cs
stc
inc
xchg
std
into
out
xchg
lds
or
mov
sbb
push
mov
call
addr16
xchg
in
and
mov
sbb
inc
adc
jnp
sahf
mov
data16
lds
ja
sti
lods
jno
imul
mov
ja
pop
pusha
adc
and
imul
pop
leave
xor
sub
mov
dec
fcomps
data16
push
lock
xor
ret
or
pop
popf
mov
inc
ljmp
inc
mov
insb
dec
icebp
or
push
push
cwtl
lret
sbb
pop
cmp
add
scas
lea
ret
rolb
add
dec
pusha
and
sbb
lret
cmp
sbb
fcomps
pop
rorl
mov
adc
sarb
repnz
mov
dec
xchg
pop
mov
adc
loope
dec
xchg
test
repnz
dec
xor
fdivr
adc
mov
inc
iret
jbe
in
lret
sub
mov
imul
sti
dec
mov
mov
push
out
imul
test
out
push
mov
push
andl
xor
into
pop
popf
lock
adc
inc
data16
imul
dec
ss
mov
inc
lea
and
ds
inc
jb
dec
in
sub
jecxz
sub
mov
jb
jge
xchg
jne
jl
sub
adc
in
loope
jne
outsb
jmp
lods
das
xlat
adc
mov
sbb
rolb
and
adc
push
lcall
mov
test
outsb
dec
and
xchg
pop
sbb
loopne
mov
dec
xor
and
sbb
ss
adc
xorl
cmp
mov
aam
pushf
into
sahf
xlat
adc
sbbl
mov
loop
ret
fisttps
lret
push
out
pop
mov
loope
ds
sbbl
jmp
and
ret
inc
adc
and
push
jbe
ret
push
nop
fimuls
sub
lea
adc
dec
test
mov
mov
daa
cmp
dec
dec
or
jmp
xchg
gs
pop
cmp
cmp
inc
adc
test
adc
rcl
scas
or
jle
arpl
filds
outsb
mov
cmc
push
sub
enter
push
cmp
orb
cwtl
push
inc
inc
ljmp
fldcw
mov
xchg
out
adc
jl
enter
dec
push
mov
or
push
or
dec
std
jecxz
xchg
inc
add
pop
pop
xor
das
test
fsub
cld
xchg
lods
add
and
popa
mov
pop
repnz
mov
pop
jmp
arpl
cmp
ret
xor
xorb
jg
push
mov
jmp
sub
xor
mov
in
pop
mov
out
insl
pop
pop
jae
sahf
scas
jle
push
mov
cmp
lahf
add
inc
fwait
mov
les
jbe
cld
into
pop
jno
sub
negb
and
xor
rorb
or
mov
inc
imul
xchg
dec
call
sub
jge
jne
xrelease
shlb
insb
test
jnp
js
int3
mov
mov
cmc
cmp
mov
xlat
inc
sbb
dec
cmp
sbb
mov
jge
adc
sub
inc
out
cli
into
aam
repnz
add
add
scas
dec
fldl
repz
sbb
push
lods
shll
mov
mov
sub
push
daa
je
shll
rcl
mov
adc
and
fwait
or
inc
aas
or
lods
addr16
lret
mov
xlat
add
mov
push
rcr
lret
pusha
das
mov
sub
dec
es
push
movsb
sbb
xor
cwtl
jnp
pop
or
or
add
inc
adc
insl
mov
pop
mov
fidivl
fists
jge
testb
push
adc
outsw
adc
cmp
shlb
daa
fistl
test
in
push
jp
jle
scas
stos
adc
jp
lds
popa
or
jo
int3
out
jae
insl
sbb
jmp
mov
mov
pop
push
jp
jl
jb
or
mov
push
test
int
cmp
rcr
xchg
add
jecxz
ss
fadds
cmp
jb
dec
enter
xchg
sub
fmul
test
es
adcl
push
jnp
icebp
sbb
mov
inc
xor
cmp
fimull
imul
shrl
xor
stc
sub
mov
adc
xor
andl
xlat
xchg
shll
pop
or
test
mov
arpl
adc
jp
andb
popa
shrb
hlt
xchg
pusha
push
jns
add
jle
fcmovbe
repz
adcl
sub
fildll
ljmp
loop
hlt
test
cwtl
jmp
dec
xchg
iretw
add
xchg
jo
ja
nop
shll
notb
shl
fstpt
inc
in
add
aas
fcompl
test
adc
pop
add
cltd
mov
gs
inc
out
mov
sbb
popa
addr16
jg
add
out
jp
sub
movsb
adc
inc
aam
pusha
repnz
loopne
into
add
pop
mov
ficoms
jg
pop
call
cmc
sahf
mov
pop
pusha
add
leave
and
xor
xor
cltd
add
lret
fistpl
lods
jge
fnsave
adc
out
jle
jne
lds
in
dec
or
dec
dec
test
adc
das
imul
pushl
mov
ret
pop
test
in
leave
add
flds
outsb
push
sbb
push
jnp
fisubrl
sbb
pop
dec
add
xor
rcll
lcall
mov
pop
shll
sub
jle
jo
mov
jp
imul
sbb
fldenv
jbe
fmull
jmp
and
cltd
fcoms
mov
pop
mov
stc
movb
sbb
std
mov
idivl
push
movsb
push
test
ficomps
imul
jmp
test
pop
mov
outsb
and
repz
hlt
mov
jge
lods
flds
imul
lods
pop
ficomps
dec
mov
rolb
cmp
mov
movsb
in
add
inc
stos
mov
andl
mov
in
jecxz
dec
test
push
shlb
bound
cmp
jle
inc
out
daa
jnp
add
aam
stos
jno
lds
cmp
push
jmp
mov
mov
aas
repz
push
ja
add
push
arpl
lock
xchg
jle
or
lock
mov
or
aad
mov
adc
adc
int3
mov
cld
or
xchg
jb
mov
icebp
sbb
mov
jmp
add
xorl
dec
jle
jns
push
mov
xchg
mov
lds
cmp
xchg
sbb
clc
xor
dec
dec
ret
pushf
push
jle
popf
imull
jle
cmp
mov
iret
sub
and
cmp
and
jb
sub
loop
mov
push
aam
adcb
mov
add
and
xlat
test
inc
xlat
mov
test
mov
rcrw
or
or
into
shr
sbb
push
mov
inc
sub
sbb
push
push
xchg
jmp
jae
scas
mov
es
dec
fnstenv
mov
cmp
stos
into
and
or
push
cmpb
push
test
stos
lcall
aaa
flds
dec
popa
stc
notl
fimull
sbb
aaa
repnz
sbb
mov
repnz
sahf
dec
pop
xchg
mov
imul
dec
mov
inc
dec
jae
push
mov
das
mov
sub
sti
jp
iret
pop
jns
hlt
pop
mov
in
pop
sbb
or
adc
icebp
lods
mov
sbb
push
mov
data16
ror
aad
sub
push
cmp
call
gs
bound
cmp
xor
divl
mov
mov
pop
cmp
mov
xchg
jae
ret
inc
into
or
scas
xor
dec
jecxz
jnp
dec
mov
sbb
mov
and
ljmp
jae
adc
pop
adc
ja
adc
imul
or
mov
cltd
enter
jno
mov
sbb
xor
and
jae
push
movsb
sub
inc
fstpl
lds
jl
push
test
stos
outsl
adcl
inc
ficoml
or
dec
stc
push
and
cmp
sti
or
dec
sub
test
ja
jg
mov
adc
rcrb
jl
push
mov
xor
adc
faddl
and
mov
pop
jmp
xor
aad
rcrl
mov
aad
repnz
sbb
inc
mov
mov
xchg
sub
adc
je
dec
push
xchg
sbb
test
out
out
dec
loopne
push
nop
int
repz
adc
jae
inc
dec
and
cmp
lret
xchg
push
xchg
loop
pop
or
jno
gs
cmpl
cmp
cmpsb
mov
fldt
sbb
or
jle
and
sbb
inc
stos
mov
lock
pop
stos
outsl
pusha
xor
mov
fcoml
dec
inc
cmpsl
out
cmc
jl
push
int
std
fisubrs
adc
das
fisttpll
sbb
rolb
icebp
sub
sub
and
pop
jae
outsl
mov
sar
xorb
sbb
rclb
add
push
cmp
sbb
cmpb
stc
popf
fistl
or
fsts
add
sub
lret
push
cmp
cli
lods
mov
mov
ja
lcall
fbstp
mov
or
add
inc
sub
xchg
mov
jbe
lret
dec
inc
pushl
add
out
fisttpll
lcall
xor
lods
mov
add
cld
jp
dec
arpl
jge
in
xchg
pop
mul
add
loope
sahf
out
in
inc
cmpsl
sbb
sub
fidivrl
mov
lahf
fistl
xor
pop
das
ss
out
and
jnp
pop
dec
or
pop
popa
test
pop
fstpt
test
insb
add
loopne
adc
dec
cmp
mov
pop
push
adc
out
jne
aam
push
iret
push
sub
xor
cwtl
jo
mov
xor
push
mov
and
arpl
or
adc
pop
mov
mov
pop
in
addr16
test
inc
subl
jo
test
sbb
adcb
mov
dec
fcoms
ja
test
pop
sahf
jmp
mov
sbb
clc
je
jl
xor
cmp
sub
pop
imul
cmpsl
inc
and
adc
pop
imull
inc
std
inc
pop
popf
or
nop
pusha
mov
test
nop
sbb
dec
aaa
fisttpl
and
push
mov
test
sti
mov
into
jnp
xchg
iret
sbb
call
rorb
sbb
sbb
int
cmpsl
pop
lds
sbb
cmp
push
aad
or
ret
je
es
notb
or
in
fs
cmpsl
int
pusha
push
mov
int3
push
lcall
pop
in
sub
cmp
bound
pushw
popa
adcl
push
push
push
test
adc
mov
lods
xchg
adc
mov
ret
xchg
movsb
lret
push
cmc
pop
cltd
jge
add
mov
iret
pop
addr16
fiadds
cmp
fwait
and
cmp
dec
jns
repz
add
adc
adc
out
mov
imul
aad
add
imul
je
jno
das
icebp
sub
insb
les
and
das
push
pop
rclb
mov
shll
and
mov
pop
and
sub
jmp
fwait
out
cmp
daa
mov
inc
bound
cmp
ds
or
and
mov
outsl
fiadds
jge
xor
and
test
push
mov
and
movsl
lret
inc
aas
jbe
das
out
or
mov
cmp
mov
jo
dec
push
imul
pop
pop
cmp
fsts
cmp
sarb
push
and
imul
loopne
repz
ret
in
int
cld
mov
popa
cltd
in
es
pop
je
and
adc
movsl
fbstp
rcl
xor
cmp
mov
mov
fdiv
sahf
call
adc
stc
dec
mov
mov
sub
daa
inc
inc
repz
pop
xor
orl
stos
sbb
int
mov
les
pushf
arpl
mov
mov
test
fnstsw
pop
jp
mov
out
stos
fstl
outsl
adc
ds
ljmp
in
cmpsb
mov
mov
sub
lock
mov
pop
mov
dec
fadds
aam
loope
cltd
nop
sbb
adc
xchg
mov
hlt
les
and
inc
jbe
les
mov
or
push
add
aam
iret
cli
push
pushf
sahf
lret
mov
mov
lea
out
dec
mov
jmp
dec
mov
scas
jl
or
call
testl
bswap
ja
out
gs
jns
add
enter
cmp
cmp
pop
call
stos
popa
sbb
adc
pushf
push
jb
inc
or
jge
mov
push
add
jmp
cwtl
fnsave
cmp
dec
in
test
lcall
jne
jno
xchg
lds
mov
jl
scas
pop
mov
in
dec
decl
sahf
add
push
adc
push
push
xor
test
cs
jbe
out
shll
lea
jmp
mov
jbe
fs
mov
adc
pop
dec
sbb
dec
scas
push
stos
sub
aas
jl
mov
ret
call
in
adc
pop
cmp
ret
inc
jmp
fistps
adc
lret
emms
pop
lock
popf
inc
add
fs
push
xor
cmpsb
adc
and
xchg
push
mov
cmp
ficomps
movsl
and
mov
inc
add
pop
pop
push
xor
push
and
xor
adc
mov
sub
jno
inc
out
dec
cmp
popf
lahf
std
insl
fwait
dec
dec
xor
mov
notl
outsl
lahf
mov
das
pushf
jnp
pop
int
lahf
xchg
mov
pop
cli
push
cmp
fidivl
mov
repz
loop
cmp
dec
shrb
bound
mov
mov
sub
jle
pusha
fdivrl
movsl
fisttpll
dec
xor
inc
xor
and
jo
cmp
cli
insl
xchg
enter
fidivl
std
outsb
daa
dec
xor
dec
test
dec
gs
push
mov
test
std
sbb
mov
mov
mov
pop
bound
loop
mov
inc
dec
test
adc
lret
mov
loopne
insb
ds
push
jge
loopne
mov
sbb
push
mov
lahf
lock
push
xchg
and
insl
add
dec
push
pop
cmp
add
pminsw
mov
mov
adc
aas
jl
stos
mov
clc
xor
fnstsw
loope
jg
fld1
pushf
inc
cmp
cli
jle
jno
decb
rcrl
mov
xor
stc
pop
popa
dec
adc
cld
sub
das
jecxz
aam
enter
cli
outsb
insb
sub
push
xchg
cmp
add
add
xchg
lcall
sub
adc
ja
insb
mov
test
push
aas
loopne
mov
inc
or
jno
and
fildll
dec
repz
loopne
push
sbb
pop
cwtl
lahf
mov
cmp
sub
je
shll
xchg
clc
sbb
pop
stc
or
push
sub
mov
aad
push
clc
test
mov
fisttps
lods
and
push
jp
fdivp
jno
aad
mov
movsl
clc
and
fistps
xor
fs
test
mov
out
ret
jo
in
repz
xchg
movsb
shrd
jmp
out
clc
xchg
pop
sahf
jb
seto
and
test
aad
cltd
mov
insl
jnp
mov
into
in
inc
push
mov
aaa
sbbl
add
jnp
sbb
push
test
es
into
ror
sbbl
ror
enter
inc
sub
mov
movsb
or
movsl
jbe
sbb
push
jo
adc
jne
lock
clc
sub
lcall
inc
insb
stos
test
loope
in
into
lods
pushf
cmpsb
in
fiaddl
in
jns
pop
cmp
cltd
test
sub
daa
fld
add
sub
mov
mov
movsl
inc
lahf
lods
arpl
dec
jnp
movsl
enter
add
mov
cli
fnstcw
add
mov
hlt
pop
aaa
lds
jmp
shll
ss
mov
jmp
stos
pop
mov
and
mov
push
push
jge
stos
push
cltd
mov
push
les
mov
mov
inc
mov
not
shrb
push
adc
dec
es
push
mov
jbe
and
sub
or
loop
cmpsb
call
dec
movsb
int
int
mov
dec
push
repz
in
shl
and
fsubs
ret
jmp
fwait
pop
cmp
pop
xchg
into
enter
inc
lods
push
int
and
xchg
sti
inc
sub
push
inc
scas
out
dec
mov
adc
pop
lcall
jge
jb
or
xchg
cmpsl
lods
test
inc
rolb
fildl
mov
out
jb
xor
mov
jmp
push
adc
or
push
iret
lahf
pop
cmc
pop
inc
ror
mov
sbb
add
insl
psrld
loope
mov
mov
cmpl
mov
repnz
mov
push
jne
cmp
fmull
push
jmp
add
or
leave
dec
add
mov
cmp
mov
je
stc
dec
cmc
lea
repnz
fwait
jge
jl
out
pop
add
pop
outsb
lods
mov
jno
inc
mov
int3
cld
and
mov
push
jo
out
xchg
pushl
nop
aam
inc
sbbb
pop
imul
or
pop
inc
dec
add
test
mov
pop
imul
jle
jb
adc
imul
pusha
leave
mov
sub
int3
mov
lods
sbb
mov
sub
ljmp
push
mov
jbe
pop
outsb
mov
push
mov
cmp
fistl
stos
mov
dec
or
test
mov
cmpb
lods
lahf
xorb
mov
mov
inc
movsb
repnz
add
sub
scas
call
inc
mov
inc
jbe
mov
cld
fisubs
rcrl
xchg
jmp
add
xchg
xchg
mov
cmpsl
jle
sbb
mov
sbb
jns
dec
or
cmp
jbe
push
and
stos
push
pop
pop
xor
and
or
ja
gs
fcmovnb
fs
mov
lock
imul
mov
inc
adc
stos
shll
pushf
mov
pushf
or
inc
push
sarb
gs
std
jge
jo
sub
adc
pop
pushf
loope
inc
xchg
fisubrs
call
xor
mov
fadds
stos
sub
adc
or
mov
movsl
in
adc
sti
pop
inc
inc
jnp
xor
xchg
adcl
add
pop
into
js
inc
jmp
orl
jns
jmp
pop
inc
fs
sub
lret
mov
jp
insl
js
mov
lahf
inc
sbb
xlat
filds
push
fisubrl
adc
fwait
inc
jmp
mov
pushf
add
aam
lods
filds
ss
sbb
mov
dec
mov
daa
je
ljmp
inc
lcall
mov
lcall
clc
cld
pop
xchg
dec
rcll
sbb
jae
fdivr
sbb
out
ljmp
clc
lds
pop
adc
lods
aad
sbb
aad
inc
inc
mov
dec
mov
ret
mov
jno
cwtl
adc
sub
jg
xlat
adc
adc
mov
in
sub
mov
stc
lcall
sbb
loop
pop
fadd
mov
stos
jno
push
add
mov
push
sub
pop
pop
adc
add
leave
dec
jb
jbe
mov
daa
gs
jg
test
scas
in
cmp
jno
mov
cs
bound
out
xor
dec
mov
mov
jecxz
aam
adc
pop
sbb
in
jle
test
ret
mov
movb
mov
cmpsl
int3
les
adc
test
stc
push
leave
adc
and
or
movsl
mov
icebp
mov
aas
xor
adc
ret
push
pop
out
or
movsb
mov
dec
inc
add
imulb
dec
pop
ret
pop
mulb
lods
pop
or
sbb
inc
mov
xlat
sbb
mov
xor
cmpsl
mov
shlb
cltd
rcll
adc
or
sbbl
mov
aad
addr16
imul
test
dec
adc
and
das
mov
jae
call
and
pop
les
inc
fidivrs
cltd
sub
mov
or
inc
inc
xor
ds
stc
add
jmp
xchg
add
add
test
sub
fisubl
jle
mov
std
outsb
aad
mov
cmpb
adc
add
lock
fld
inc
or
cli
aas
sti
xor
test
loope
popf
pop
cmp
xchg
pushf
mov
sahf
movsb
mov
cmc
cld
adc
loop
push
cmpl
stos
cmp
or
out
cmpsl
xchg
jo
imulb
mov
inc
addb
icebp
lds
mov
mov
push
scas
mov
scas
data16
sbb
jmp
jnp
and
sub
cwtl
mov
daa
lret
sbb
cmp
jns
add
xchg
imul
mov
mov
arpl
mov
test
test
negb
pop
ja
fidivl
cmpsl
xlat
add
dec
mov
xor
pop
lods
test
sub
fnstenv
neg
inc
sbb
mov
push
lods
lock
lret
push
out
sub
lret
hlt
mov
jmp
and
inc
mov
sub
aas
inc
ja
mov
push
pop
mov
loope
or
add
aaa
xor
leave
inc
daa
inc
into
insl
fwait
xchg
push
push
jne
stos
call
lahf
cli
add
sub
push
lea
rorl
inc
repnz
es
out
pop
scas
mull
or
jnp
mov
adc
xlat
xchg
out
incb
mov
outsb
push
mov
fistpl
mov
or
mov
sub
mov
sbb
add
sbb
xchg
xchg
inc
sub
js
mov
out
lcall
cmp
mov
out
mov
inc
xchg
fsubrl
pushf
add
lcall
mov
ljmp
jne
ss
test
decl
or
pop
lahf
mov
mov
std
das
lret
xor
sbb
in
mov
mov
in
out
inc
es
cltd
je
fwait
insl
sti
roll
mov
jmp
adc
ds
popf
shl
test
pushf
scas
mov
stos
hlt
insl
push
gs
je
testl
sbb
enter
cmpl
sbb
jle
mov
cmp
shrl
dec
out
push
pushf
int
cmp
pop
imul
pop
mov
mov
int3
cmp
lock
xchg
es
subl
in
int3
imul
lahf
dec
stos
imul
and
rcr
pop
out
dec
cmc
xchg
cmpl
in
in
cmp
test
out
and
pusha
adc
addl
scas
popa
lret
rolb
lahf
in
scas
xor
and
pop
or
jg
add
filds
adc
xchg
imul
add
jae
push
fwait
cltd
or
cmp
xor
add
adcb
divb
mov
outsl
xchg
mov
sub
sbb
mov
insl
xor
push
iret
imul
shlb
push
je
adc
sbb
mov
movsb
push
andl
aad
iret
pop
jbe
add
xor
hlt
sbb
popf
xchg
and
xor
loopne
mov
jecxz
shrl
xchg
xor
push
pusha
mov
mov
leave
xlat
bound
sarb
aam
mov
push
hlt
test
mov
ljmp
cmp
cltd
mov
and
std
push
add
fdiv
push
add
pop
mov
pop
test
xchg
clc
or
jb
in
sub
push
ljmp
inc
mov
ljmp
popa
push
jo
mov
add
mov
imul
fs
aaa
cmp
sbb
xchg
movsb
mov
add
jl
cmp
jns
ret
and
aam
fdivrl
mov
in
inc
popa
lcall
adc
out
nop
pop
mov
jmp
sub
cmp
sub
xor
sub
cmp
mov
outsb
leave
pop
lea
bound
mov
add
and
pop
mov
mov
sub
in
scas
imul
xchg
add
push
idivb
xlat
mov
in
jo
stc
inc
sub
xor
adc
mov
xchg
rcr
popf
mov
subl
icebp
mov
push
fdivl
inc
adc
pop
sarl
bound
fldcw
mov
dec
int
mov
data16
daa
shrl
add
pop
mov
sub
mov
or
xor
enter
mov
imul
imul
jmp
jmp
in
push
dec
les
dec
and
pop
sub
push
mov
push
jl
cmpsb
or
daa
and
repz
mov
sarb
mov
mov
xchg
dec
ret
in
cld
mov
mov
mov
xchg
cmpb
sti
repnz
lods
xchg
cltd
mov
dec
dec
aas
rcrl
sti
xchg
loop
in
push
jp
decl
inc
inc
je
sbb
std
rorb
ret
out
xor
mov
dec
idiv
data16
xor
mov
movsl
das
xchg
rorl
cmpb
mov
cmp
ucomiss
std
mov
sahf
ds
sahf
or
addr16
jmp
inc
movsl
inc
mov
mov
push
pop
imul
sub
movsb
push
or
insb
adc
outsb
xorl
out
loope
int
movsb
test
cmp
jne
fsub
lods
sbb
outsb
movsb
stos
fdivs
mov
cmc
scas
push
lea
push
push
xchg
cmpsl
pop
outsl
inc
enter
call
jg
xchg
rorb
cwtl
mov
mov
mov
rcll
xchg
mov
popf
es
dec
pop
lret
addr16
xor
add
mov
cmpsb
dec
cmp
popa
aas
fdivl
roll
popa
iret
int3
jb
mov
sub
pop
push
movsb
outsb
push
xchg
shrl
xchg
push
mov
dec
cs
or
repnz
bound
fstl
and
lcall
shlb
addr16
aaa
sub
xchg
and
lret
outsb
dec
in
out
into
jo
cmpsl
push
jl
lea
das
inc
and
mov
mov
jae
jge
mov
data16
or
out
stos
push
mov
mov
ror
add
int3
shlb
dec
lods
fs
test
jno
fcoms
subb
or
pop
leave
loope
add
and
mov
cmp
inc
mov
inc
jecxz
or
xchg
fisubrl
ljmp
sti
or
push
clc
pop
test
xchg
lret
movsb
inc
in
addb
add
std
dec
sahf
adc
sbb
or
lea
insl
or
scas
or
push
int
xchg
mov
push
stos
movsb
test
mov
sbb
mov
scas
push
insl
into
push
fistpll
in
dec
dec
jne
jns
testl
sub
ja
pushf
xor
add
test
ljmp
and
cmpps
lret
jbe
add
sbb
or
push
notl
cli
pop
sbb
js
push
rclb
xchg
lods
test
fpatan
shrl
jge
stc
out
lahf
sbb
push
fdivs
ds
push
cmpl
inc
and
xor
ficoml
push
dec
inc
cmc
xchg
orl
xchg
jbe
std
ja
jns
push
adc
xchg
mov
push
in
add
fucomip
ss
fdiv
xor
cmp
fs
jno
lahf
mov
stc
roll
xchg
xor
jle
loopne
subb
sub
bound
sub
or
inc
jb
xchg
aam
sar
and
ss
or
jl
push
call
in
cmc
dec
xor
cmp
push
pop
repnz
mov
cmp
adc
sub
mov
mov
push
pop
jg
xor
sbb
add
push
jle
xor
inc
jmp
cmp
sbb
xor
add
cmp
mov
lret
sbb
lds
iret
and
movsl
cmpsl
lret
cmp
movsb
cmp
fisttpll
mov
and
icebp
loopne
sub
adc
push
insb
std
mov
in
aas
xchg
xchg
stos
cmp
push
stos
jbe
xor
add
mov
nop
pop
jp
fs
out
arpl
call
jmp
jecxz
movsb
adc
mov
scas
push
cmp
inc
jmp
arpl
xor
aad
enter
push
lahf
mov
xchg
cmp
insl
mov
popa
or
adc
pop
sahf
cltd
aam
inc
dec
test
ret
sbb
mov
sbb
cmp
insl
insb
sahf
jae
or
scas
xchg
xor
aaa
test
cmc
mov
outsl
lock
stc
push
jl
xchg
push
mov
lods
cmc
scas
scas
je
jbe
pop
and
cmpl
mov
dec
addl
push
sbb
mov
sub
test
fsubrs
into
cmp
gs
dec
pop
pushf
testb
cmpsb
inc
push
add
sub
mov
sbb
aad
cmp
daa
pop
xchg
lret
sbb
add
ret
aaa
jnp
shll
idivl
xor
aaa
aam
outsl
dec
pop
test
or
test
ret
pusha
jmp
or
sub
jbe
bnd
push
fwait
ja
xchg
cltd
xchg
xchg
in
arpl
sub
push
fidivrl
int3
stos
xchg
xchg
and
jp
movsl
call
xor
cli
cmpsb
in
stos
lret
in
call
subb
add
or
adc
iret
dec
push
mov
lods
subb
iret
sbbb
cwtl
js
cli
mov
push
stc
pop
int3
mov
jl
inc
iret
imul
sbb
scas
and
outsl
mov
and
mov
imul
shrb
jae
lods
jb
add
and
pop
lods
dec
mov
outsb
orb
dec
jo
xchg
push
or
push
add
mov
movsl
xchg
movsb
insl
push
jg
fistpl
push
out
shlb
out
stos
rcrb
jno
aaa
or
fiadds
lret
sbb
fistpll
ljmp
cmp
mov
outsl
jmp
mov
cltd
jno
std
pop
fiaddl
outsb
dec
mov
ljmp
dec
in
rorl
dec
cld
hlt
add
movsl
push
int
test
jnp
cmp
dec
xchg
aad
mov
pop
push
pop
hlt
mov
addl
fadd
stos
push
mov
std
sahf
fistpl
mov
cwtl
popf
push
xchg
ret
clc
push
data16
dec
aas
xor
ss
leave
xchg
mov
sbb
push
in
mov
popa
xchg
sub
repnz
jbe
inc
frstor
cmpsl
xor
mov
mov
xorb
insb
inc
mov
fwait
pop
stc
les
stc
imulb
loope
sti
jle
jne
scas
mov
jl
mov
jno
mov
shlb
popa
cmp
cmp
jl
push
negl
mov
and
pop
movsb
dec
gs
jb
ss
sbb
push
sub
mov
push
cmc
pop
inc
in
push
pop
mov
and
lods
push
imul
jl
inc
imul
sub
int3
sbb
iret
ja
lret
jl
outsl
je
push
push
jp
pop
xlat
in
xchg
movsl
xor
lods
ja
pop
int
sbb
push
push
inc
or
out
add
ljmp
and
outsl
sbb
movd
addr16
scas
leave
jne
ds
xchg
cmp
inc
nop
push
lret
in
clc
fwait
jp
push
mov
inc
ficoms
insl
jb
iret
shrl
not
mov
mov
push
jmp
mov
inc
sahf
jg
mov
fwait
xchg
in
cs
int3
mov
dec
mov
sbb
xchg
cmp
xchg
test
mov
mov
lods
hlt
cltd
stc
sub
sti
jl
ret
pop
push
mov
popa
jge
add
mov
cmpsl
sar
inc
out
scas
mov
sbb
hlt
iret
in
xchg
add
iret
into
cmp
in
pop
jbe
inc
cs
add
rclb
lea
mov
stos
cs
jns
mov
testb
mov
mov
sub
sbb
cmp
mov
test
push
pop
xor
adc
push
add
mov
mov
rclb
inc
lret
sbb
mov
inc
xchg
filds
int
jb
rolb
sbb
enter
adc
imul
pop
je
mov
je
fstps
bound
lret
cmp
mov
and
push
mov
ret
xor
insb
jae
dec
ror
in
mov
fs
xchg
fwait
cmc
push
push
adc
cld
sti
ja
test
ja
ss
push
inc
sub
sbb
pusha
jmp
mov
dec
xchg
dec
mov
sub
jl
notl
cli
lahf
push
mov
push
xor
sub
inc
sbb
ss
dec
ljmp
outsb
ret
mov
clc
lds
jo
incl
dec
cmp
sbb
push
clc
bnd
add
lret
or
xchg
push
dec
es
sub
xchg
sbb
loopne
pushf
adc
sbb
test
and
test
in
pop
lods
imul
fbstp
sbb
daa
hlt
cmp
jns
jp
mov
mov
inc
imul
pop
fiaddl
xchg
jne
out
xchg
test
rclb
pop
stos
andl
sarb
push
fisubl
rcrb
adc
sbbb
iret
rorl
nop
xchg
rcr
cmp
stos
sub
sahf
mov
cmp
ret
pop
sbb
popa
lcall
or
xchg
std
or
dec
out
insb
or
and
orb
ret
lods
jno
mov
jo
mov
je
mov
mov
stc
ret
insl
in
fimull
sub
dec
cmpsl
retw
arpl
jmp
cmp
fwait
adc
repnz
jae
das
pusha
pop
jbe
ret
popa
out
cmp
mov
push
xor
jo
mulps
xchg
fwait
js
stc
dec
mov
mov
dec
jns
iret
or
jge
mov
aad
push
pop
jbe
dec
mov
out
ret
jecxz
dec
pop
mov
xlat
mov
mov
fs
fcmovnu
iret
and
sahf
mov
aad
lods
test
roll
and
lods
jg
testb
pop
test
test
mov
cmp
mov
outsl
mov
in
mov
mov
dec
jbe
xchg
mov
into
lods
outsl
mov
add
inc
adc
dec
inc
sahf
scas
inc
adc
jle
fs
mov
lock
adc
or
fsubl
lret
inc
xchg
cltd
ret
push
fucomp
mov
in
jne
stos
aaa
enter
cmp
xchg
sub
popa
jns
inc
arpl
leave
push
pop
fnsave
or
cmp
sbb
add
aad
gs
xor
sub
lret
les
jns
div
xchg
sub
es
pusha
loopne
mov
inc
les
cltd
dec
jns
mov
ret
push
jl
jecxz
cmpsb
aad
mov
ds
adc
pusha
repz
lahf
add
out
lret
xchg
jo
push
les
sbb
mov
cwtl
repnz
daa
adc
sbbl
shll
scas
test
mov
mov
movsl
lea
add
pop
xchg
push
push
adc
test
push
and
or
xchg
cmp
mov
mov
inc
sbb
mov
fnstcw
test
lods
jmp
ret
scas
rorl
pop
push
lock
jmp
xor
mov
add
jl
insb
loop
mov
lahf
loop
mov
ret
ds
sbb
jae
leave
mov
shlb
dec
push
rcll
xor
sbb
ret
cld
daa
inc
mov
jae
mov
lods
jb
adc
faddl
scas
or
stos
lock
sbb
icebp
adc
cwtl
pushf
pop
into
adc
cli
pop
cli
out
movb
lea
enter
sarb
lret
lds
jmp
shlb
add
stos
mov
or
jmp
fists
adc
out
add
mov
pop
mov
icebp
fcompl
add
mov
inc
cmp
fisttpll
iret
clc
int
aad
maxps
scas
push
nop
in
xchg
mov
lahf
pop
mov
add
push
jp
jbe
fmull
adc
and
jmp
cltd
pop
es
mov
dec
clc
lea
push
mov
push
and
scas
mov
dec
dec
mov
fwait
lahf
sbb
cwtl
lods
aas
daa
lret
mov
test
ret
lret
dec
scas
mov
add
mov
sbb
cmp
push
popa
mov
bound
mov
xchg
dec
sub
mov
mov
cmp
push
popa
lock
movsb
mov
inc
lret
iret
xchg
idiv
pop
cmp
jg
jbe
sbb
push
xchg
pop
or
icebp
adc
arpl
es
mov
test
imul
divl
mov
push
dec
call
xchg
or
add
aad
out
ret
dec
push
rorl
bound
scas
cs
iret
add
out
push
mov
mov
lret
outsl
mov
sub
dec
dec
out
cmpsl
mov
or
inc
outsb
aaa
mov
pop
in
fisttps
dec
daa
xor
iret
xchg
pop
out
xchg
dec
int
dec
mov
rolb
mov
jmp
dec
testb
jb
push
xchg
mov
mov
xchg
scas
push
fnsave
push
ja
and
test
out
adc
dec
pop
ret
out
or
mov
in
lock
jno
les
mov
sbb
jg
jbe
pushf
mov
je
inc
fsub
mov
mov
lock
mov
lods
sub
push
lds
fsubrp
lods
cmp
insb
idivl
cld
daa
push
iret
fidivrl
add
xor
pop
daa
ds
pop
push
pop
enter
jmp
inc
sti
dec
arpl
loope
sub
dec
cmp
mov
sub
jne
pop
daa
enter
das
sbb
or
xor
dec
mov
cltd
rcr
cmp
xchg
and
jnp
xor
sub
rcrb
sahf
in
je
xchg
push
out
push
imul
lods
aad
adc
test
push
divl
divb
fisttpl
insb
sbb
scas
pushf
imul
jge
out
adc
in
daa
out
mov
xor
cmp
pushf
jmp
and
mov
mov
sbb
xchg
fdiv
xchg
ret
jg
mov
in
enter
fdivl
cmp
clc
lock
xchg
add
pop
aam
jae
enter
in
push
stos
outsb
jp
and
mov
jae
nop
mov
jno
add
mov
push
lcall
lahf
psadbw
test
lods
scas
push
sub
jge
xor
add
mov
jl
popf
and
xchg
sbb
insl
sub
in
ja
xchg
dec
popf
mov
fidivs
add
imul
fisubl
js
xchg
sub
stc
mov
add
les
mov
mov
int
lret
je
dec
lahf
sbb
lock
stos
and
and
push
lock
push
out
jmp
into
fnstcw
mov
sub
xorb
pop
int
sbb
xchg
lahf
pop
push
mov
push
sub
xchg
loope
dec
in
adc
cmp
testb
in
scas
addl
pop
add
adc
in
mov
sub
mov
mov
or
ror
clc
mov
imul
test
leave
test
shrb
mov
insb
test
jg
mov
add
mov
inc
inc
adc
adc
subb
mov
fstpl
notb
push
add
loope
test
mov
and
popa
xor
fstpl
pop
jge
push
xchg
rolb
popl
daa
push
dec
jbe
mov
popa
mov
jg
popf
outsl
push
imul
shl
lods
iret
sbb
xchg
inc
mov
pop
aam
xchg
int
in
hlt
cld
jl
mov
mov
into
sti
ficompl
pushf
jae
xchg
mov
push
inc
frstor
lcall
and
cmp
push
pusha
mul
or
cmp
lret
dec
sub
pop
stos
repz
jge
clc
cmc
pop
pushl
sbb
jge
shlb
dec
outsb
out
lock
clc
pop
and
sub
pop
push
nop
mov
mov
and
push
push
pop
jmp
popf
lret
cld
jns
orl
daa
lds
dec
lea
xchg
push
mov
scas
xor
mov
cmp
test
mov
dec
mov
scas
dec
xchg
push
dec
sub
mov
imul
test
cmpsl
pop
xor
out
push
mov
repnz
nop
fnsave
mov
out
and
stc
nop
fsubs
jns
xor
stos
arpl
fs
jnp
mov
push
jo
push
into
or
and
xchg
jbe
dec
out
cwtl
imul
loope
movsl
jnp
sub
xchg
mov
mov
inc
stc
lods
fistpll
mov
mov
arpl
adc
fisttps
adc
pusha
sub
jmp
sahf
in
mov
cwtl
mov
mov
sbb
cltd
mov
outsl
jmp
add
xor
push
imul
daa
cltd
sbb
gs
add
shr
cmpb
clc
lea
out
mov
xchg
add
jge
and
icebp
movsl
lds
xchg
int3
popf
aad
lcall
sbb
mov
jo
pop
push
mov
pop
add
jp
orb
iret
inc
stos
push
mov
mov
mov
outsb
aad
fldl
xor
dec
mov
ret
lods
pushf
sub
in
and
pushf
sbb
fcmovbe
dec
scas
mov
lea
dec
jbe
cmpsb
fstps
jmp
ror
pop
push
icebp
sahf
and
xchg
ljmp
dec
out
jno
and
cmc
cmpsl
add
popl
shrl
lcall
pop
test
pop
mov
push
adc
add
std
push
lods
cmp
push
pop
imul
and
pop
mov
gs
adcl
cmc
pusha
rcrl
cwtl
mov
cmpb
xchg
sub
pop
and
jnp
int
jmp
inc
cs
mov
inc
insl
sbb
movsl
test
add
fs
mov
aad
std
lret
cmc
loop
js
mov
lret
xor
lods
push
mov
or
les
mov
jmp
jo
push
pop
outsb
xchg
cmpsl
or
sbb
sbb
clc
test
mov
sbb
les
mov
mov
mov
out
sub
mov
das
mov
std
lret
pop
fstpl
loop
pop
dec
ret
cmc
outsb
cs
or
add
xor
test
xchg
mov
push
xchg
dec
std
xchg
adc
mov
adc
in
dec
adc
hlt
jmp
xchg
filds
jl
pop
cld
mov
pop
xchg
jmp
sbb
stc
stos
popf
push
jge
push
sbb
andb
jmp
ror
mov
sub
rcrb
mov
mov
inc
jne
adc
mov
outsl
imul
test
test
xchg
movsl
mov
push
mov
jl
push
inc
jge
shl
push
mov
pushf
xchg
into
std
lret
dec
inc
bound
cmpsl
outsl
mov
ret
int
in
out
ret
mov
addr16
dec
adc
out
pusha
scas
test
mov
and
push
add
insl
in
aas
sub
in
lea
dec
sbb
lea
fs
lret
fisubl
jle
out
mov
mov
pop
in
push
fsubl
jecxz
pop
ret
pop
jp
adc
add
and
mov
xor
cmp
push
imul
push
dec
ret
pop
inc
push
mov
push
pop
or
pop
pop
push
aas
jns
jne
bts
jp
lea
jnp
sub
test
out
jmp
rcr
sbb
xchg
jo
divb
push
js
pushw
mov
jbe
gs
popf
inc
nop
xchg
lahf
jns
cmp
lock
and
and
prefetcht1
cmp
cmp
add
in
lods
dec
push
sub
adc
fstps
sub
sbb
jns
add
cli
cld
sub
inc
test
push
stc
or
enter
js
sub
and
push
pop
into
mov
xchg
inc
gs
sbb
ficoml
shll
pop
test
pop
in
sub
jge
aas
pushf
xchg
dec
cmp
call
sub
sub
fstl
fs
jecxz
lret
mov
sahf
lahf
fisubrl
add
inc
data16
push
adc
mov
arpl
jne
outsb
daa
and
cmp
pop
das
into
sbb
push
into
push
jne
sbb
fldl
or
lcall
mov
movsl
or
xor
ficompl
mov
jle
aad
adc
mov
pusha
push
stos
fs
sub
mov
into
imul
mov
leave
mov
adc
sub
inc
pop
or
in
or
mov
mov
imul
lret
jl
push
cmp
cmp
cmp
lock
pop
adc
mov
dec
jb
fstpl
or
mov
in
in
icebp
je
jecxz
idivl
fdiv
insb
subb
push
xbegin
mov
xor
pop
sbb
and
sbb
dec
pop
xchg
aas
pop
jle
shll
sti
adc
xor
out
lea
fwait
xchg
jmp
popa
ljmp
jne
jmp
mov
sub
cmp
xor
push
xor
add
ja
repz
int
sarb
mov
pop
adc
or
and
jb
fwait
xor
inc
pop
push
inc
pop
mov
pop
mov
insb
lahf
ljmp
hlt
push
inc
es
dec
adc
iret
cmpsl
int
fidivrl
fidivrs
leave
jecxz
push
int3
jge
sbb
mov
subl
out
and
xor
outsb
xor
sub
mov
int3
or
dec
lret
lds
or
loop
imul
xor
lods
test
cmc
mov
xchg
inc
ret
aas
fimuls
dec
int3
out
push
add
es
adc
out
dec
push
pop
test
sbb
repz
in
outsl
es
push
xchg
pop
jnp
mov
push
pop
inc
aaa
pushf
and
xchg
call
inc
dec
mov
ss
movsl
in
xor
das
push
push
cli
in
insl
pop
push
pop
mov
push
popa
stos
ja
aad
push
or
int3
push
push
xlat
pop
rcrb
sarb
imul
clc
sar
lods
lds
iret
xchg
xchg
iret
scas
cltd
mov
jne
lds
add
pop
inc
lret
push
push
call
outsl
shll
xchg
mov
and
jle
sarb
inc
je
gs
push
push
xchg
int3
xchg
lds
movsb
adc
pop
xchg
mov
and
mov
call
xor
inc
push
es
lahf
out
push
mov
stos
outsl
mov
rcrl
sahf
insb
fnstcw
jne
mov
pop
mov
movsb
test
fs
push
mov
adc
loop
xor
sub
rolb
sub
pop
push
std
add
fcoml
das
aas
in
cltd
stos
xchg
lea
clc
dec
cmp
std
cmp
leave
sbb
push
in
adc
inc
jp
insl
jle
adc
sbb
jge
shlb
in
dec
hlt
push
mov
into
pop
cmc
ficompl
aas
cmp
inc
jae
xchg
pushf
cmp
stos
in
cmc
xchg
and
jle
dec
insb
jbe
sub
mov
xor
clc
cmpsb
in
insb
test
shr
lods
popf
popa
sbb
stc
jo
xor
sub
mov
jmp
adc
aam
out
orl
adc
sbb
xor
mov
cmp
xor
in
xor
xchg
aam
or
mov
and
andb
mov
inc
repnz
in
sbb
xor
push
pop
dec
lret
ret
push
rcrb
push
push
pop
fisubl
dec
mov
cmp
cltd
fisttpl
psubq
adc
sahf
pop
dec
jb
xchg
into
and
mov
push
jmp
mov
movsl
jecxz
add
cmc
cmp
pop
add
je
mov
adc
cld
jg
jmp
out
popa
out
in
xor
inc
sbb
iret
syscall
add
fstpt
arpl
adc
adc
clc
out
push
xor
sbbb
ss
lea
mov
add
ret
mov
repz
icebp
cmp
or
and
xchg
adc
mov
data16
out
pushf
cmp
jae
inc
mov
lds
xor
push
mov
pop
pop
fstps
jg
adc
in
into
lea
ret
js
fiaddl
xor
push
mov
jbe
dec
pop
dec
daa
movswl
push
into
push
cltd
dec
inc
out
iret
lahf
jmp
addl
jle
sbb
rorb
inc
add
arpl
orl
repz
cmp
lcall
popf
in
and
jne
or
jp
incb
jb
stos
add
int
pop
mov
xchg
imul
push
out
sbb
inc
lcall
addl
jle
ret
sub
std
pushf
fxch
rcrl
jne
sub
mov
test
mov
scas
addb
pushf
imul
pop
dec
popf
add
ljmp
jmp
cmp
inc
xor
fistpl
mov
jno
pop
jae
dec
and
in
in
mov
sub
vmwrite
dec
out
lds
adc
lret
insb
add
mov
dec
dec
xchg
addr16
pop
mov
test
sbb
aad
dec
pop
inc
les
test
scas
pop
mov
and
jno
cwtl
adc
mov
sbb
mov
pop
pop
add
mov
jb
sti
pop
popf
lahf
jg
out
or
xchg
adc
addr16
std
out
xchg
fnstcw
popf
xchg
test
icebp
adc
outsb
inc
fstpl
addr16
jns
mov
jle
push
into
add
add
mov
adc
sti
jb
nop
mov
cltd
dec
jecxz
dec
or
xchg
mov
pop
mov
inc
in
push
or
out
repnz
mov
jb
xchg
mov
mov
ja
jae
jno
lods
fmulp
ds
pop
clc
xor
enter
cmp
insl
inc
adc
daa
cmc
addr16
scas
inc
add
jmp
pop
mov
fs
xor
jg
fimuls
mov
mov
push
dec
loopne
sub
push
or
adc
movsb
ja
inc
inc
mov
mov
push
ret
test
sbb
cld
scas
std
or
es
xor
outsl
jnp
int3
and
jmp
mov
shrb
jno
test
or
insl
push
jg
xchg
lea
dec
out
clc
popa
xor
jmp
mov
adc
gs
in
and
divb
scas
inc
jb
pop
lahf
leave
mov
sub
pop
cmc
xor
outsb
out
mov
inc
fisubl
testb
std
ficoms
jb
std
fstl
mov
push
cmp
fidivrl
loopne
frstor
test
loop
jno
cld
dec
rcr
imul
sar
jbe,pn
pop
popf
test
adc
lea
lahf
stc
xlat
push
pop
pop
cmpsb
mov
es
std
dec
add
jl
fcomp
cmc
pushf
xor
jl
popa
lods
shlb
lods
cltd
aam
inc
mov
ret
jbe
or
lahf
add
std
jns
fisubrl
mov
adc
pusha
xor
out
and
dec
pop
repz
in
bound
jb
pop
inc
outsb
mov
push
mov
mov
xor
pop
fcom
in
xor
testb
mov
lret
xlat
adc
loopne
push
out
test
xchg
mov
xor
dec
out
jecxz
lods
adc
and
pusha
in
in
out
pop
add
outsl
mov
mov
lcall
inc
add
nop
xchg
ja
repz
adc
aas
xchg
imul
or
mov
mov
add
in
int3
movsb
inc
jge
push
fisttpll
les
xchg
jno
xor
mov
pop
mov
sbb
xor
xor
cld
mov
lds
bound
dec
icebp
std
or
in
std
pop
push
lock
mov
aad
push
leave
mov
les
fcomps
or
mov
sub
lret
mov
loope
orl
or
push
xchg
test
iret
jl
add
daa
data16
dec
jmp
xlat
pop
mov
mov
pusha
cli
inc
mov
mov
cmp
dec
loope
lea
cmp
stos
clc
dec
xor
sub
cs
mov
test
lea
inc
lods
and
dec
or
sar
or
icebp
loopne
lock
arpl
dec
cmp
inc
add
inc
pop
xchg
sbb
pop
sarl
sahf
adc
xlat
jnp
pop
or
sbb
sbbl
inc
enter
jnp
push
xorl
data16
pop
js
inc
cmp
sub
int
push
xchg
fwait
or
test
out
or
jg
pop
ror
test
stc
popf
xor
pop
xchg
adc
mov
out
lcall
lret
and
sbb
xor
andb
mov
ljmp
or
lds
mov
out
test
mov
xchg
pop
adc
int
insl
xchg
insl
ret
outsl
call
mov
gs
cmp
push
dec
adc
test
push
mov
push
jo
out
shlb
fsts
xor
rclb
cmp
sbb
fs
and
and
add
mov
push
pushf
sub
jmp
loopne
push
outsl
sbbb
ds
jp
aas
dec
ret
int3
aad
into
mov
fcomip
rcrl
add
cmp
or
mov
and
popl
rorl
add
and
sahf
mov
je
mov
cmp
fs
in
shr
xchg
mov
stc
xchg
xchg
sub
ds
mov
and
mov
lds
negl
xor
push
xlat
pop
and
loopne
pop
repnz
jecxz
int3
cli
clc
mov
sarb
inc
ds
sbb
ret
xlat
sub
cmp
lcall
loopne
jns
ss
hlt
jecxz
xchg
sbb
idivb
mov
mov
mov
jmp
mull
pop
popf
inc
sub
stos
mov
loope
pushf
or
lret
add
les
adc
push
adc
push
iret
into
adc
xchg
pop
inc
cmp
jmp
test
mov
je
mov
mov
jb
lods
rol
sub
cwtl
mov
hlt
jb
xor
push
inc
sarl
je
cmp
xor
imul
repnz
or
lret
jb
mov
cs
cmp
push
add
pop
inc
icebp
mov
in
cld
cmpsl
jb
negb
les
mov
jae
lret
and
push
test
iret
xchg
xor
cmp
lret
lea
jmp
mov
rcl
jg
jge
mov
inc
test
dec
scas
jmp
mov
push
push
scas
mov
orl
or
mov
out
divl
sbb
mov
add
test
frstor
incl
mov
adc
loopne
call
push
sahf
add
icebp
imul
xchg
cs
subb
mov
dec
mov
test
adc
or
popa
mov
lret
jmp
lods
push
pop
insb
push
jae
scas
xlat
and
mov
adc
pop
hlt
add
lods
inc
imul
xchg
out
add
mov
or
sbb
adc
movsl
fiaddl
imul
mov
mov
mov
fs
mov
sub
in
sub
push
mov
mov
dec
sbb
mov
nop
out
clc
leave
push
test
lret
pop
pop
mov
test
fbstp
bswap
pop
pop
hlt
push
push
in
lret
and
fisttps
movsl
loopne
and
iret
cld
aam
mov
lret
mov
mov
out
jo
mov
pop
mov
addr16
xchg
jl
cmpsl
lds
sbb
loop
scas
in
mov
jg
out
idivb
cli
fldt
cltd
fs
cmp
enter
mov
and
jecxz
test
pop
arpl
clc
shll
test
mov
dec
inc
adc
loopne
pop
pusha
daa
xchg
jne
fildl
jg
out
pop
mov
test
daa
sbb
and
xchg
xchg
mov
and
imulb
das
and
jmp
xlat
fwait
jp
cmp
sbb
daa
sub
bound
dec
cld
jae
push
xchg
in
mov
add
mov
and
sub
adc
push
frstor
mov
inc
movb
out
jp
xchg
or
imul
jle
call
ja
enter
push
mov
xlat
lcall
insl
cmpsl
jecxz
jmp
sbb
mov
adc
loop
xchg
fld
dec
outsb
icebp
pop
jmp
mov
imul
xchg
ds
daa
cmp
loopne
xchg
push
cmpsb
cmp
and
rorb
in
sbb
push
or
jge
adc
mov
or
mov
gs
fildll
sbb
push
push
sbb
mov
hlt
dec
pop
aaa
ret
sub
push
scas
add
out
in
mov
jge
ficoms
inc
dec
sahf
arpl
dec
adcb
mov
js
mov
pusha
aas
push
adc
and
cwtl
test
insb
sahf
ds
mov
int3
push
shll
pusha
pop
fcoms
lahf
rorl
lea
outsl
inc
pop
jae
rolb
mov
mov
ljmp
push
cmp
cmpsb
in
ret
sub
jge
pop
dec
pushl
xlat
sar
das
xchg
shrb
sub
adc
icebp
mov
cmp
inc
repz
lods
dec
or
into
add
or
mov
mov
push
xor
push
dec
jge
scas
sub
cmp
subl
icebp
or
sbb
lock
cltd
lret
push
les
xor
dec
adc
mov
or
pop
push
push
adc
movsl
pop
in
mov
or
movsb
fucomp
mov
leave
jo
fwait
imul
mov
insl
xor
shrb
cmc
mov
cmp
testb
jno
push
pop
jp
pop
push
mov
fmul
xor
jge
xor
scas
push
xchg
sub
cmp
jnp
cmp
rolb
movsb
xor
push
pusha
aad
inc
insb
ja
mov
inc
aad
fcoml
mov
mov
xchg
or
ljmp
es
insl
lods
dec
jno
mov
pop
mov
cltd
mov
jnp
pop
lret
enter
sbbl
fcoml
dec
jl
push
mov
in
ficomps
adc
sub
cld
stos
dec
dec
cmp
sahf
cld
mov
mov
ss
movsl
mov
nop
pop
and
jne
dec
sub
rorl
pushl
jmp
shlb
into
push
cli
into
jno
dec
xchg
aaa
test
in
stos
shrb
aaa
cld
pop
mov
sub
add
fs
adc
ja
push
int
dec
adc
or
cltd
rorb
xchg
mov
add
or
fbld
orl
mov
ds
jmp
shl
pop
xchg
inc
outsl
arpl
out
dec
daa
and
pushf
cmp
dec
dec
or
dec
jmp
jno
pushf
lock
arpl
icebp
sub
stos
mov
in
hlt
xchg
mov
out
rcrb
sub
div
mov
lea
push
fnstsw
clc
push
ljmp
dec
add
and
cmpb
dec
push
or
xor
inc
push
inc
inc
xchg
pop
mov
sub
sti
icebp
mov
mov
xlat
push
scas
daa
jecxz
in
fiadds
into
scas
ds
xchg
and
and
mov
notl
cmp
ljmp
adc
vcvttsd2si
mov
jns
stos
mov
test
int3
push
es
ffree
xorb
inc
xor
stc
jae
sub
or
or
out
or
rorl
pop
inc
add
sbbl
and
or
push
and
in
or
mov
mov
cmp
aaa
dec
push
dec
inc
mov
fstpl
test
rcrb
mov
sbb
xchg
in
sbb
sub
xchg
jb
mov
outsl
mov
dec
data16
mov
sub
enter
outsb
scas
cmpsl
stc
sahf
sarl
gs
movsl
into
mov
ja
testb
inc
mov
sub
out
call
xor
xorl
sbb
movsb
movsb
loop
add
popf
mov
adc
enter
mov
int
pushf
imul
fs
mov
jo
mov
es
inc
xlat
pop
ja
test
pop
push
inc
rorb
jle
dec
rcrl
pop
xor
js
insb
jge
pop
addb
inc
mov
aaa
lahf
mov
xor
sar
cmp
and
fs
push
scas
ds
aam
or
cmc
or
icebp
popa
xchg
lock
lods
mov
loopne
push
stos
js
pop
dec
das
pop
pop
push
data16
mov
sti
nop
cmp
xlat
test
inc
xchg
imul
adc
xchg
or
ds
int3
pusha
or
xor
mov
jno
push
cmp
mov
jmp
sbb
ja
jno
mov
mov
aad
ret
mov
mov
int3
or
jmp
rolb
ss
aas
or
dec
test
xlat
lock
xchg
mov
inc
mov
popa
mov
mov
jge
cli
lret
jge
push
cmp
xlat
and
inc
arpl
jbe
in
iret
lahf
incb
mov
sub
push
sub
jecxz
test
loope
mov
fmuls
daa
popf
lahf
movaps
sarb
mov
cmp
jl
loop
test
ds
lods
pop
loopne
divl
lds
cmpsl
inc
xor
mov
sub
call
adc
sbb
jnp
jbe
xor
lods
cli
fisttpl
push
stc
loopne
aam
ss
ljmp
sub
add
sahf
adc
hlt
cld
sahf
sbb
xlat
jb
mov
aas
mov
call
adc
fwait
sbb
or
lret
fwait
push
add
mov
cmc
out
repnz
pop
add
in
and
imul
divl
sub
cld
cs
lahf
subb
push
and
mov
jl
add
and
mov
pusha
fstp
cmp
pop
cmp
mov
andl
sbb
sbb
mov
int3
lcall
fildl
add
jle
repz
scas
lods
loope
outsl
sbb
xorb
mov
jb
popa
in
cwtl
bound
or
rcl
test
ljmp
ret
aad
std
andb
adc
mov
movsl
push
or
ret
lahf
or
outsl
mov
cld
sbb
sub
fidivl
jp
fs
pop
outsb
test
pop
stc
daa
sub
ficomps
fdivl
add
inc
cmp
xchg
test
pop
les
adc
push
gs
dec
gs
mov
inc
fistpll
and
inc
inc
ss
add
lret
or
mov
ja
lret
in
pop
in
popa
call
sub
mov
mov
xchg
inc
lods
jno
or
jns
test
mov
ficoml
add
lock
or
ja
repz
daa
jmp
push
mov
adc
and
lret
pop
in
xchg
enter
lods
jmp
push
les
pop
push
outsb
or
insb
sub
jae
test
jle
fdivrl
adc
call
movsl
push
push
loopne
jmp
jb
orl
add
fildl
mov
gs
sub
adc
filds
push
test
cmp
repz
fwait
cltd
pusha
pop
lret
inc
adc
push
xor
adcb
jne
testl
pop
scas
xchg
ror
adc
and
cmp
pop
push
loope
addr16
mov
imul
insl
xor
sub
sti
add
sar
xchg
test
sbb
mov
add
ja
add
loopne
test
adc
shll
out
scas
pop
sahf
mov
mov
test
xchg
inc
out
out
pop
mulb
xlat
lods
andl
push
call
xor
stos
xchg
iret
cmp
les
scas
int3
sub
sub
sti
jno
mov
sti
jae
pop
cmpsl
push
jl
les
dec
jl
mov
inc
jae
add
dec
fsubrs
inc
mov
pop
jl
stos
push
test
pusha
pop
push
xor
xor
cmpb
sbb
mov
icebp
add
pop
shlb
ds
enter
int3
inc
mov
aad
les
and
mov
xchg
add
xchg
fwait
cmpsl
mov
xor
shlb
push
inc
hlt
or
or
andb
add
fldl
xlat
fimull
pop
je
add
add
mov
lods
mov
push
pop
jne
jae
imul
mov
in
xchg
es
mov
or
cmpb
sbb
fsubs
lods
std
cmpsb
jne
mov
cmpsl
xor
lods
pusha
mov
mov
rcrl
insb
cmp
mov
mov
mov
ret
in
sbb
cmp
imul
lret
out
pushf
pop
mov
and
arpl
cld
dec
popa
and
and
pop
nop
lds
jmp
jge
jecxz
sbb
pop
sub
pop
lds
add
aad
dec
mov
mov
lock
adc
sbb
dec
sub
push
out
loopne
addl
adc
jg
sti
scas
dec
cmpsl
mov
inc
sbb
jno
mov
xor
popf
add
mov
testl
cs
lea
test
out
movsb
insl
sbbl
vandps
dec
in
inc
adc
test
jge
cli
movsl
mov
cwtl
add
jae
pop
push
jbe
xlat
dec
push
daa
shlb
cmp
push
dec
imul
mov
xchg
sub
aaa
push
jb
mov
ror
rorl
or
sub
fisttpl
dec
ds
xchg
push
xchg
or
jge
data16
adc
jns
xlat
xlat
push
mov
stc
jnp
mov
into
jns
and
mov
lock
inc
sahf
lock
mov
fsubs
out
sbb
sub
mov
sbb
sbb
shrb
or
aad
pushw
dec
lds
addb
cwtl
aam
jle
jl
cmp
bound
sub
aas
pop
ficoml
test
mov
jecxz
pop
addl
lcall
int3
xor
xchg
inc
jo
fidivs
les
and
inc
mov
lahf
and
repnz
add
sbb
out
adc
bound
and
and
fimuls
out
mov
incb
sub
gs
or
xchg
push
sbb
pop
fisttpl
in
roll
imul
and
adc
xchg
inc
lea
rcr
sbb
mov
or
mov
jle
mov
ss
mov
aas
lret
imul
test
mulb
decb
fs
stos
mov
cmpsb
in
jg
popf
pop
or
fmulp
push
clc
addr16
xor
push
je
arpl
xor
vmovaps
push
popa
sub
xchg
inc
fildll
aam
sar
push
xchg
mov
stc
mov
mov
leave
xor
cmp
movsb
inc
std
lcall
iret
sbbl
into
movl
insb
jns
fidivs
aaa
push
enter
enter
lret
daa
insl
and
xchg
movl
jl
push
out
jb
xchg
addr16
mov
cld
dec
jnp
jnp
les
cmp
shrb
mov
xchg
insl
stc
jns
xor
es
jecxz
pusha
sahf
lea
adc
jg
sub
dec
mov
idivl
adc
addr16
mov
push
cmp
in
sub
pop
sti
jo
and
loope
insb
stos
and
cmc
in
fldl
ja
ja
stos
xchg
repnz
jge
mov
imul
insb
dec
xchg
pop
arpl
or
mov
jo
mov
cltd
mov
cs
out
sbb
cmp
loopne
mov
rorl
jle
repnz
jo
in
sbb
dec
fmul
mov
int
shlb
inc
xchg
xor
test
push
pop
scas
xchg
xchg
loop
lea
les
into
rorl
xchg
es
adc
jecxz
call
mov
jge
in
pop
dec
mov
pusha
filds
jne
ljmp
es
sahf
mov
jo
sahf
shll
xor
ja
cwtd
xor
push
and
or
loope
into
jge
movsb
and
std
inc
and
push
mov
out
pushf
sub
cwtl
jne
out
pop
mov
adcb
inc
sbb
fldcw
and
jb
mov
mov
outsl
daa
mul
cmp
out
xchg
inc
fildl
xor
aam
inc
fisubrl
adc
pushf
cmp
fistps
stc
insb
xor
mov
mov
cmpsl
xorb
leave
push
jg
mov
xlat
pop
loope
or
dec
lock
aas
shll
addr16
jb
pop
xor
sahf
pop
aam
clc
inc
int
rclb
lret
xchg
inc
call
pop
imul
xchg
in
fxtract
adc
xchg
xor
push
mov
inc
test
dec
pusha
add
adc
inc
adc
fs
cmp
test
bound
popf
es
out
stc
scas
mov
add
jb
ja
xchg
inc
xor
xor
arpl
ret
test
popa
icebp
hlt
arpl
das
inc
inc
pushf
fwait
stos
adc
and
mov
gs
addr16
jo
sub
add
mov
dec
xchg
xchg
lods
adc
jg
cmpsb
cli
wrmsr
jmp
int3
arpl
xchg
push
nop
stos
js
repz
push
push
sbb
and
sbb
pusha
cmpsb
mov
jb
xor
jo
or
dec
mov
insl
mov
jbe
ffree
jnp
fcomps
xor
roll
into
jno
mull
push
fistps
adc
test
inc
jg
arpl
mov
inc
dec
punpckhwd
sub
mov
and
pop
ficomps
rorb
imul
jmp
mov
sub
and
cpuid
punpckhwd
mov
int3
sahf
sub
pop
out
test
jo
xor
and
scas
lea
fisttpl
loopne
dec
mov
stc
not
jmp
test
sti
dec
pusha
out
outsl
dec
sbb
pop
es
jmp
push
sarb
xlat
outsb
cmp
mov
pop
and
loope
xor
sub
pop
pop
gs
iret
dec
rclb
sbb
lods
pop
lea
adc
cmc
sbb
or
int
cmp
gs
adc
sub
dec
xlat
cld
sbbl
mov
and
ss
daa
cmp
pop
pop
sub
xor
pop
jmp
adcb
sub
mov
xor
sub
cmp
call
cmp
jbe
adc
jmp
lods
fsubl
outsl
add
xchg
stc
arpl
inc
int3
mov
test
mov
cltd
inc
fbld
gs
cli
roll
or
sub
fstpt
and
hlt
push
cmpsb
sahf
or
push
mov
les
pushf
cmpsl
cmp
test
insb
iret
ret
push
js
lock
mov
dec
fmull
ljmp
fimuls
enter
mov
jb
fwait
arpl
xor
or
aas
xor
or
popf
xchg
stc
mov
push
clc
in
push
leave
rcr
cmpsl
adc
pushl
fidivrl
xchg
repz
mov
mull
inc
aaa
or
inc
sub
mull
jne
inc
fmul
mov
cmp
lds
imul
aaa
lret
clc
jno
test
stos
imul
or
push
add
add
push
sub
orb
xor
ljmp
out
je
xchg
pop
cmp
out
fs
inc
mov
add
cli
push
xchg
into
mov
fcoml
iret
fsub
cld
mov
or
adc
push
in
je
pop
push
fwait
pop
pop
insl
jl
mov
push
or
ss
xor
cmc
iret
mov
and
pop
cld
cltd
push
push
cmp
cmp
and
ror
sub
sub
jle
and
scas
cmp
xlat
push
pop
push
push
push
clc
in
in
movsl
xor
push
into
lds
add
je
imul
cld
test
xor
imulb
dec
push
fsubrs
cmp
movb
mov
xchg
xor
sub
sub
popa
shlb
and
nop
mov
jp
xor
into
pop
and
cld
xchg
pop
sbb
or
int3
dec
mov
jo
call
push
xor
imulb
mov
bound
les
add
jecxz
cmpsl
cmp
sub
pushl
scas
inc
inc
fdiv
out
mov
jl
inc
outsl
adc
cmp
lods
xchg
lods
cwtl
and
or
xchg
pop
testb
cmpb
lret
jb
jmp
sbb
or
int3
ss
out
mov
lods
cli
data16
sbb
nop
sar
xlat
mov
in
push
test
mov
mov
inc
daa
insl
shll
test
fwait
inc
add
cld
cmp
jle
add
cmp
stc
sub
icebp
movsl
ds
xor
pop
jp
das
or
cltd
lahf
ficoml
fdivr
inc
sbb
out
push
xchg
stc
sbb
adc
mov
push
popl
xchg
repnz
out
mov
dec
pop
les
push
jns
add
gs
sub
ss
ljmp
cmpsl
test
fcomip
lds
mov
testl
cmpsb
dec
loopne
pop
pushf
cli
int
inc
mov
lods
adc
sub
popa
adc
push
push
fstl
push
cmpsl
aam
js
adc
jnp
lahf
bnd
inc
push
daa
loope
ret
xor
nop
push
jmp
in
and
adc
pushf
inc
xchg
jge
jbe
cmpsb
and
pop
aam
sbb
mov
enter
out
mov
jo
pop
insl
aad
mov
or
loopne
push
cli
push
rcrb
mov
lret
dec
mov
outsb
fdiv
mov
mov
ss
ljmp
shrb
das
data16
xchg
sub
sub
jnp
inc
dec
cs
and
mov
ja
dec
test
shlb
lret
add
inc
shl
outsb
icebp
test
rolb
stos
addl
push
cld
fcompl
jp
xchg
mov
shlb
lahf
push
rcll
add
adc
fwait
pop
pop
push
cs
rcl
mov
stos
mov
add
xchg
insb
sbb
test
mov
mov
mov
andl
repz
ds
mov
mov
mov
fcmovbe
imul
inc
cwtl
loop
ret
mov
cmc
sbbl
iret
jnp
xor
out
xchg
and
dec
loopne
cmp
or
insl
jmp
jns
xchg
ds
or
push
jle
mov
inc
dec
push
pop
outsl
repnz
fdiv
fldenv
aas
adc
hlt
add
push
xchg
stc
and
adc
sbb
xor
pop
stc
mov
cwtl
sti
xchg
xlat
and
in
cmp
sbb
and
sub
in
dec
lret
lock
insb
cmpb
inc
lret
mov
in
hlt
pop
jns
dec
mov
in
dec
jb
out
add
test
test
sbb
mov
fdivr
mov
or
ja
inc
cs
dec
popf
pop
cmp
adc
mov
jmp
dec
stos
push
leave
jae
jp
pushf
inc
shll
lods
push
mov
pop
sti
or
out
fadds
mov
jbe
shlb
repz
xchg
sbb
mov
jl
sub
xchg
out
jno
ljmp
lods
mov
xchg
cld
pop
stc
jns
pushl
or
out
fdivs
std
scas
push
sub
test
xor
cmpsl
lahf
cmp
out
das
call
adc
stos
xor
cs
jg
aaa
adc
seto
jns
jo
push
scas
and
xor
outsl
les
add
insl
push
cld
sbb
aam
push
orl
loopne
lea
fst
addr16
imul
loop
pop
mov
rcrl
addr16
inc
in
cmp
into
adc
clc
js
inc
add
lods
sub
flds
dec
js,pn
out
std
cli
movsb
fldenv
push
push
sbb
data16
or
andl
xchg
inc
into
pop
dec
dec
std
lods
jb
xchg
push
sbb
cmp
test
push
jb
test
sub
stos
pop
clc
adc
call
ja
mov
mov
ds
add
mov
fists
xor
cmp
xchg
jne
lods
adc
loope
jno
fstps
call
into
fwait
test
inc
mov
add
and
xchg
xor
hlt
pop
pop
jo
int3
cmpsb
icebp
cltd
add
mov
xchg
adcl
sub
cmpsl
sbb
dec
fcompl
or
es
dec
outsb
lock
xchg
push
sub
push
adc
push
add
cmpsl
outsl
lods
icebp
xchg
iret
out
pop
xchg
dec
scas
addr16
sbb
stc
lock
xor
outsb
aam
imul
faddl
push
xchg
leave
cmp
push
sti
jmp
add
mov
xor
lret
pop
cmp
leave
and
ss
mov
cmpb
paddb
push
push
mov
jg
sub
cmpsl
or
shl
xchg
push
sub
inc
mov
lock
xlat
xchg
sbb
hlt
adc
sbb
jecxz
sbb
stos
icebp
outsb
jne
push
jmp
inc
adc
xor
ds
in
nop
xchg
cmpsl
and
xchg
and
xchg
call
int3
push
je
add
mov
cld
pushf
mov
scas
aas
cmpsl
mulb
cmc
mov
int3
jg
out
inc
push
jb
pop
dec
dec
xchg
push
sti
inc
addr16
jbe
mov
rcrl
cmp
call
aam
out
bound
cltd
or
inc
stos
push
aad
shrb
test
movsb
mov
rclb
mov
xchg
jecxz
xchg
push
sbb
adc
pop
dec
andl
out
and
cwtl
in
cmp
inc
jnp
lret
pop
cmp
sub
scas
add
pop
or
xor
aas
push
fisttps
es
sbb
test
adc
popf
sub
jnp
push
adc
xchg
in
popf
shrl
loope
loope
sti
sbbl
mov
imul
adc
push
in
sbb
push
adc
cltd
jl
scas
icebp
in
fwait
iret
or
and
in
clc
mov
imul
pop
stc
jg
dec
std
and
rol
or
inc
out
inc
adcb
sti
inc
inc
out
add
mov
mov
jb
scas
inc
jp
push
mov
and
dec
fsts
iret
add
lds
mov
cs
lods
stos
and
or
aas
adc
into
loop,pt
jl
int
cli
jmp
sti
xchg
adc
add
sub
sbb
sti
jl
xchg
xor
xchg
pop
dec
daa
repnz
div
lea
xchg
xchg
adc
addr16
cmp
or
stos
test
out
in
ja
and
cmp
rcrb
leave
or
jge
jo
paddd
or
xlat
dec
enter
or
sbb
repnz
insb
int
call
js
out
push
outsb
mov
jb
mov
dec
stos
push
dec
in
jl
mov
lock
in
cltd
mov
jnp
push
and
push
cltd
hlt
push
jl
add
xchg
mov
out
ret
test
adc
repnz
and
mov
jne
sahf
mov
jecxz
ficoml
mov
clc
fimuls
not
fwait
adc
std
mov
jmp
mov
inc
sbb
shlb
pop
and
dec
sbb
arpl
cmpsb
sbb
dec
sbb
insl
je
push
mov
mov
inc
lock
or
adcb
insb
dec
popf
push
inc
xlat
xchg
cmpsb
mov
aad
adc
dec
sbb
fidivl
push
cmp
sub
xchg
imul
mov
imul
jno
aaa
push
in
cli
add
push
add
pop
cmp
roll
push
and
add
popf
cmp
loopne
push
fs
cmp
ja
ret
xchg
jl
mov
sbb
outsl
rcll
out
xlat
mov
pop
xchg
mov
adc
movsl
push
jp
xor
dec
mov
inc
popa
cld
jb
stc
pop
addr16
cltd
and
mov
lods
testb
sarl
xor
mov
shr
dec
dec
pop
cld
xor
bnd
adc
mov
ljmp
mov
push
in
in
xor
inc
popa
dec
dec
or
pop
dec
repnz
shl
push
bound
mov
je
inc
addl
test
sbbl
and
dec
ljmp
or
adc
out
mov
add
imul
jge
mov
add
push
xor
stos
mov
sub
and
pop
mov
insb
daa
test
clc
in
push
mov
in
fs
adc
adcl
idiv
push
loope
pop
cmp
jge
lcall
cmp
fsubrl
fildl
or
jne
mov
and
pusha
or
sbb
jno
popf
call
repnz
push
inc
into
pop
mov
or
xor
clc
sub
push
dec
movsl
jp
out
test
js
pop
imul
push
icebp
outsb
jb
push
xchg
sbb
and
mov
mov
dec
mov
call
movsb
rorb
lahf
hlt
cmp
fcmovu
mov
or
icebp
fimull
test
push
sub
in
jbe
hlt
inc
fdivrs
int3
jmp
sbb
pushf
add
setnp
fstps
lret
and
pop
dec
sbb
pop
add
hlt
sbb
mov
push
mov
gs
cmc
sub
mov
jae
adc
and
aaa
bound
push
jbe
jbe
xchg
xchg
sub
in
dec
data16
push
xchg
rcr
aam
jp
sub
pop
push
jb
lret
cwtl
xor
rcr
fsubrs
fbstp
or
movq
adc
scas
push
fstpl
test
andb
popf
repnz
std
push
arpl
fildll
pop
mov
inc
jle
imul
pop
frndint
jmp
int3
loop
leave
dec
cltd
sbb
div
shl
aad
frstor
ret
ja
mov
pusha
pop
mov
pusha
jne
test
sbb
notl
pop
mov
mov
mov
movl
dec
stc
sahf
adc
fistpll
inc
sub
ljmp
mov
clc
aad
js
movsb
push
pop
adc
pop
cli
pushf
inc
movsl
mov
lods
push
leave
hlt
sarl
xor
and
jbe
pop
lret
add
cs
xchg
jge
sbb
test
inc
movsb
insl
sbb
sarl
mov
loopne
mov
jae
das
out
cmp
test
lds
imul
jecxz
mov
jnp
sub
sbb
std
sahf
lods
test
pop
or
mov
stos
nop
mov
mov
ret
mov
push
mull
sti
outsb
inc
jae
hlt
inc
and
cmpsb
and
and
jg
mov
scas
call
in
mov
xchg
into
pop
imul
enter
dec
adc
roll
cwtl
aaa
clc
popf
push
stc
test
stc
jbe
mov
outsl
mov
sub
icebp
and
pusha
lea
jle
add
or
push
lahf
dec
testb
xchg
popa
repnz
enter
mov
mov
or
hlt
cmpsb
adc
aas
adc
daa
mov
push
jns
imul
imulb
cs
cmp
pop
lret
cmpsl
dec
out
loop
inc
mov
movsb
push
xchg
mov
orb
test
sahf
lcall
lcall
cmp
add
imul
push
adc
push
sbb
dec
fisubs
loop
xchg
sub
filds
and
shll
jbe
xor
dec
ljmp
or
ds
inc
pop
jl
int
out
rcrb
xor
push
and
and
std
jg
mov
xor
orl
sbbb
xchg
mov
mov
lret
inc
and
rolb
jp
dec
push
jae
mov
jnp
xchg
mov
push
adc
pusha
adc
add
xor
mov
je
dec
pop
es
xor
stos
test
sub
pop
out
jle
jge
push
fisubs
daa
xchg
pop
mull
adc
andl
mov
xchg
loopne
push
sub
cmp
fildl
jne
xor
mov
orl
pop
jmp
adc
shlb
jnp
lea
sub
xchg
push
orl
mov
xchg
push
sbb
dec
sbb
daa
sub
push
dec
es
xchg
dec
mov
inc
mov
mov
test
clc
mov
pop
enter
sub
cmp
stos
pop
xchg
jle
mov
pop
add
pop
fs
mov
ret
cmp
into
outsb
sbb
cmpsb
or
jmp
jl
repz
mov
aad
xor
mov
jmp
mov
cmp
xchg
mov
sbb
sub
lret
lcall
jo
sbb
mov
pop
out
les
xor
add
mov
in
sub
addr16
inc
aad
les
cmpsb
push
add
lcallw
dec
arpl
bound
push
cwtl
add
jne
loop
lds
pop
mov
dec
mov
mov
sub
lods
inc
inc
shlb
lea
mov
and
outsl
push
daa
sub
mov
cli
and
lods
adc
jp
outsb
out
mov
and
cmp
push
in
imul
pop
sahf
cmp
push
sti
enter
ficompl
xchg
mov
scas
dec
lahf
jne
cli
pop
mov
mov
ud0
sub
inc
imul
into
dec
inc
lods
notb
add
mov
mov
scas
inc
and
jb
mov
adc
sahf
loop
enterw
mov
ss
fidivrl
in
fsubr
sub
push
shlb
test
push
flds
aas
xor
mov
mov
sub
mov
push
mov
or
push
lret
pop
mov
dec
xor
adc
xor
iret
add
mov
outsl
mov
push
jbe
adc
pop
movsl
mov
shl
rorl
shrl
fucomip
jbe
cmpsb
jmp
inc
mov
notb
or
daa
scas
inc
add
push
cmp
cmp
mov
mov
push
scas
stos
mov
push
push
push
mov
mov
sti
push
push
mov
sub
lods
icebp
or
lods
jmp
in
mov
add
cmp
dec
mov
in
cmp
inc
adc
dec
shrb
mov
repz
pop
lret
jae
cmp
jecxz
mov
jo
adc
sahf
scas
cld
adc
mov
and
jb
imul
aam
cmp
mov
int3
shll
mov
shld
xor
jno
cmp
mov
mov
in
out
mov
cmpsl
loopne
and
dec
in
shrb
jg
stos
fwait
push
sbb
mov
add
movsl
xchg
mov
lcall
sbb
arpl
add
jge
pop
clc
bound
jnp
pop
xor
ficompl
jl
je
popl
sub
les
push
aam
fcomps
dec
mov
mov
pop
and
sbb
dec
std
rorl
mov
add
enter
xor
push
pop
pop
nop
pop
mov
mov
pop
lds
jno
arpl
js
pop
inc
jge
push
stc
cli
mov
sub
cmpsl
mov
xor
xor
subb
inc
push
dec
aad
or
sub
push
dec
jae
out
xchg
cli
mov
sbb
sub
or
xchg
std
stos
mov
mov
xchg
xchg
addr16
mov
ljmp
daa
add
dec
xchg
cwtl
inc
pop
lea
pop
mov
jae
in
xchg
sub
pop
mov
out
sti
jge
and
call
scas
xor
iret
inc
lahf
shl
lcall
jp
jecxz
xchg
xchg
shll
mov
and
and
in
test
xor
call
lea
pop
leave
mov
xor
sbb
repnz
jbe
and
sub
mov
or
sub
scas
hlt
sub
inc
daa
sub
fcmovnbe
fsubrs
and
insb
cmpsl
and
mov
mov
jp
mov
sub
insb
hlt
mov
fnsave
xor
clc
or
es
xlat
int3
out
repz
aam
in
mov
in
or
lcall
ficoms
popl
and
inc
or
add
dec
imul
fidivrs
outsl
jno
sbb
ror
mov
lds
dec
imul
adc
repz
fstpt
mov
ret
push
das
xlat
stos
daa
in
sahf
hlt
dec
fcoms
cmp
sub
dec
sbb
aaa
js
lock
sub
fbstp
mov
orl
pushf
jl
jne
add
mov
or
mov
dec
sub
push
pop
movsb
lods
andb
dec
in
iret
fiadds
fildl
lods
mov
mov
insb
gs
shll
push
push
xchg
loopne
dec
es
push
cmc
mov
cmovnp
sbb
cmpsb
mov
mov
jo
mov
lock
jns,pn
hlt
adc
test
dec
jbe
test
popa
jo
int3
repz
jno
jo
loop
jns
lea
add
mov
push
aad
push
pop
cmp
jecxz
mov
pop
fucomp
int3
mov
pop
pushf
dec
mov
loope
sbb
fcmovne
test
and
xchg
repnz
aaa
pop
fldenv
sbb
adc
cmpsb
jns
outsb
xchg
sbb
ror
insl
shl
loop
add
push
or
ret
jp
or
jae
orw
mov
pop
xchg
mov
push
xlat
mov
pop
add
cmp
or
popf
mov
fildl
push
aas
out
xchg
movsl
sbb
jne
std
aam
adc
xor
insl
out
mov
adc
in
dec
jns
pushf
xchg
shl
push
xor
xchg
negb
dec
xchg
jp
lcall
or
mov
rsm
xchg
fisttps
out
dec
pusha
dec
mov
lret
stc
imul
movsb
sbb
push
test
addr16
push
ljmp
in
dec
jl
inc
pop
mov
mov
adc
adc
fwait
cmp
jo
jg
fldl
js
dec
xchg
call
fbstp
add
cld
jmp
imul
idiv
dec
shlb
or
dec
les
sbb
push
sub
adc
enter
sub
arpl
xor
dec
add
pusha
jmp
mov
push
add
inc
in
add
mov
repz
push
mov
std
sub
jmp
ss
jg
mov
je
xchg
imul
shlb
mov
push
lock
mov
cltd
pop
inc
and
dec
mov
loop
and
inc
imul
psrld
loopne
jne
cmp
out
mulb
out
xchg
sbb
xor
out
imul
add
fcmovbe
dec
dec
push
aaa
mov
push
cmp
mov
xchg
in
aaa
cmpsb
add
out
mov
movsl
jl
pop
jno
shr
lea
xchg
mov
sbb
js
aaa
sub
pop
inc
gs
mov
mov
jmp
std
fadds
and
xor
push
push
mov
cmp
adc
and
push
dec
inc
out
mov
pop
int
and
or
mov
push
and
dec
push
lods
sbb
mov
sub
addr16
xor
out
push
pop
xchg
pop
fcompl
push
xchg
inc
sbb
into
or
sbb
cmpsb
add
sahf
jb
jp
mov
fcom
add
rsqrtps
sarb
clc
cmp
test
jp
add
or
push
inc
and
push
xorl
test
dec
int
out
fcmovnbe
and
movzbl
adcl
sub
shlb
push
push
pop
leave
jmp
inc
dec
lret
lods
pushf
push
sbb
mov
sbb
ds
lods
mov
movsb
jnp
jae
push
xchg
cs
rcrl
sahf
and
outsl
xorb
into
sbb
pop
ljmp
push
push
loope
rolb
daa
mov
add
loop
mov
js
xlat
out
push
mov
pop
sub
sti
cli
mov
push
and
stos
and
dec
std
dec
data16
mov
shr
insl
push
xchg
sub
lods
cmpsl
sub
mov
std
mov
inc
xchg
pop
inc
outsl
stos
mov
fisubrs
aam
push
movsb
inc
sbb
cmp
outsb
mov
cmp
sbb
stc
cs
or
adc
stc
lret
and
push
ficompl
sub
mov
jl
dec
stos
out
repz
mov
xor
fildl
sub
aaa
arpl
in
xchg
sub
dec
sub
rclb
inc
aas
push
jbe
xchg
inc
sub
pushw
in
mov
pop
fdecstp
xchg
mov
sub
cwtl
lahf
add
inc
ret
cmp
fwait
mov
jb
pop
stos
ja
dec
inc
and
dec
popa
stos
cmp
xor
dec
mov
fwait
xchg
sub
jl
sbb
jle
mov
and
xor
cmp
add
dec
mov
shld
adc
and
adc
pusha
xor
jae
sbb
and
or
enter
and
icebp
ds
xor
pop
iretw
cli
fwait
cmp
mov
int
lock
aad
ds
je
dec
push
rcrl
jb
push
adc
mov
mov
sub
jmp
and
pop
mov
push
add
mov
xchg
cwtl
push
ret
movsl
shrb
add
mov
sub
nop
inc
or
js
fldcw
in
jb
out
jb
test
lahf
loop
mov
test
lea
arpl
jns
repz
dec
shrb
dec
cmp
adc
and
int3
movsb
test
sub
xchg
test
loope
xchg
dec
push
inc
jmp
jge
xor
lea
and
add
cmp
jg
xchg
xchg
fwait
add
inc
add
lock
fdivs
loop
jns
or
outsl
mov
cmp
mov
shrl
lock
jcxz
mov
inc
push
mov
fadd
and
add
adc
imul
movsb
cmp
cmpl
push
int3
pop
or
inc
xchg
dec
rorb
popa
stc
jle
and
mov
enter
int
pushf
adc
mov
icebp
add
jecxz
adc
adc
fwait
sub
xchg
xorl
pusha
out
sbb
or
push
pushf
adc
repnz
mov
or
jmp
add
or
data16
int3
mov
xchg
bound
lcall
xchg
jg
stos
ret
push
test
push
cld
pop
xor
adc
lods
in
push
hlt
notb
jnp
jae
sub
jge
mov
rcrb
les
mov
mov
lods
cmp
les
mov
jg
imul
xchg
sub
and
shr
xchg
mov
push
das
jae
pushf
add
xor
pop
mov
test
adc
std
cmp
push
cmp
out
fiaddl
popa
movsb
push
sub
in
les
aad
sbb
fcmove
fs
inc
fdivl
xchg
lods
mov
cmp
cld
mov
mov
pusha
push
push
inc
movsl
sub
arpl
mov
sti
and
test
fnsave
in
mov
mov
pop
or
xlat
mov
xor
or
incb
sbb
cmpsl
dec
inc
or
das
push
sbb
dec
jns
jne
test
adc
pop
in
mov
pop
and
mov
pop
call
sub
int
dec
inc
stos
aaa
inc
mov
cmp
imul
xchg
fs
mov
cltd
nopl
mov
cmp
repnz
jecxz
pop
push
pop
popa
pop
rcrb
out
or
mov
sbb
pop
movsl
imul
idivb
popf
int3
scas
push
or
imul
or
cmp
adc
cwtl
dec
or
or
stos
cli
int
xchg
xchg
pop
scas
fiadds
mov
daa
add
cmc
popf
xlat
dec
test
cmp
add
xor
fidivs
or
dec
pop
pop
jp
aad
ljmp
aad
pop
jp
pop
xchg
and
pop
fmuls
push
xchg
into
cwtl
sub
push
sbbb
dec
mov
jno
out
cmp
iret
cmc
cmp
push
push
jge
aaa
cltd
jb
shll
imul
in
int3
lods
mov
xor
adc
add
in
mov
out
aad
out
mov
in
dec
jno
lock
js
lods
xor
xor
pushf
ret
sub
jne
jecxz
in
insl
push
hlt
jle
popf
add
js
sub
dec
imul
pop
push
sti
and
mov
dec
or
dec
jge
or
dec
add
not
jp
std
push
jnp
fildll
mov
aad
shrl
jle
clc
sahf
mov
jb
jo
lea
sub
lret
xchg
jmp
dec
mov
push
rolb
insb
das
fnstsw
aad
out
mov
pop
add
inc
insb
into
add
jp
rorb
add
cli
adc
push
pop
ljmp
jmp
push
sbb
mov
test
mov
jle
push
popa
sbb
por
mov
mul
ljmp
xor
sahf
repnz
aam
jo
cmp
or
mov
sub
mov
dec
ss
test
outsb
mov
js
sub
dec
cld
fsubr
call
mov
or
stos
adc
or
jmp
lea
arpl
mov
mov
dec
mov
mov
mov
add
mov
cmp
mov
and
pop
pop
jl
into
dec
or
xchg
clc
cli
cmc
pop
ss
sbb
out
or
lea
push
repz
push
pop
iret
sahf
mov
hlt
push
out
mov
push
cli
jb
xor
sbb
dec
xchg
pop
insb
clc
cli
sahf
pop
mov
fwait
pusha
out
push
ret
cmpsl
inc
xchg
fcomps
testb
jg
or
cmc
fstpl
cs
push
ret
push
stc
jne
push
lods
xchg
xlat
adc
inc
orl
jne
loopne
xchg
loope
adc
push
xchg
adc
cmp
lods
mov
mov
subb
stos
xchg
or
xchg
push
add
dec
mov
xchg
cmpsl
pop
adc
mov
imul
notl
xor
sbbl
inc
hlt
cs
cmp
or
popf
loope
ret
inc
mov
fisubl
stos
aas
push
cmp
fldl
out
pop
sbb
jne
scas
pop
in
add
sbb
or
sar
xchg
lods
lock
mov
add
cs
sbbl
xacquire
cmc
int3
fmul
push
sub
mov
stc
dec
or
ret
dec
fisubrl
xor
je
test
shlb
or
xchg
lcall
arpl
inc
outsb
das
mov
jecxz
add
mov
adc
dec
mov
fisttps
in
sbb
jns
and
fmul
in
sbbl
call
mov
jl,pn
xlat
adcl
roll
test
xchg
orb
mov
mov
and
sbb
add
cs
xlat
mov
cmp
cltd
ss
jg
setge
adc
ror
push
push
aad
cmp
sbb
aas
call
push
stc
mov
xor
mov
js
and
sbb
mov
das
ds
lcall
and
or
test
mov
push
push
and
jmp
or
ljmp
mov
pop
xor
mov
xchg
or
fldl
sub
adc
daa
test
stc
mov
xchg
cmp
repz
aas
or
test
mov
sti
movsb
mov
test
push
push
gs
insb
adcb
pop
mov
cmpl
xor
aaa
or
stos
jp
pop
mov
es
pop
or
test
test
add
test
cmpb
aas
and
test
mov
mov
inc
inc
daa
imul
dec
dec
repz
inc
rorl
aaa
loop,pt
fwait
scas
push
mov
lods
pop
inc
jbe
or
ret
loop
cmp
shlb
mov
push
jne
jmp
int3
rcr
or
push
mov
push
inc
dec
int3
js
lods
aas
mov
imul
fnstsw
arpl
push
xorl
cld
inc
add
jp
mov
sbb
xor
inc
xchg
cmp
rclb
jmp
loope
jecxz
pop
cmp
jno
xchg
cmp
addb
cmp
mov
jmp
paddusw
sbb
into
ficoms
or
inc
nop
dec
jg
ja
in
insl
dec
dec
xchg
in
jb
xchg
adc
mov
or
xchg
jle
lret
popa
jl
sub
test
sbb
out
mov
xlat
xchg
xchg
add
clc
leave
mov
mov
sub
xchg
ljmp
pshufw
dec
add
ret
push
jl
inc
imul
es
bound
mov
loopne
push
nop
bound
sbb
jecxz
mov
clc
shrb
repnz
cld
push
xchg
xchg
mov
pushf
frstor
add
cmp
cmp
or
cmpsb
cmp
popa
popf
movsl
mov
cmp
in
jno
xlat
inc
ror
jmp
add
data16
xchg
pop
fsubrs
mov
jecxz
add
pop
mov
popf
adc
popa
add
dec
in
push
out
mov
ljmp
repz
push
xchg
pusha
push
or
or
mov
les
pop
enter
test
or
pop
jge
scas
adc
mov
bound
ljmp
sbb
mov
fisubs
pop
pop
dec
mov
cwtl
mov
daa
sub
xchg
pop
inc
fwait
inc
or
and
out
push
adcb
mov
pushf
not
jp
and
sub
push
loop
pop
mov
fs
cltd
push
stos
lock
dec
es
nop
loopne
and
mov
xor
sub
jne
arpl
xor
popf
sbb
fsubrs
mov
pop
je
dec
dec
mov
or
jo
cmpsl
xchg
inc
sub
push
add
push
jecxz
out
mov
cwtl
lcall
or
sub
jae
and
sub
psraw
sbb
lcall
mov
testb
insb
arpl
mov
xor
fldl
clc
xor
ja
into
es
bnd
outsb
push
lea
sbbb
dec
sub
movsl
in
and
cmp
push
push
stos
xchg
lahf
sbb
mov
repz
jmp
jmp
inc
mov
jo
push
pushf
mov
xlat
cmp
inc
mov
out
and
mov
xchg
xchg
lods
scas
fs
push
sub
adc
mov
test
pop
xchg
jle
dec
mov
mov
cltd
stc
adc
jmp
imul
cmp
xor
jne
insb
faddp
sub
in
imul
fcomi
test
fcmovb
jo
loop
daa
popa
mov
mov
sbbl
rcrb
je
cmp
pushl
and
in
xchg
cld
adcb
mov
pop
les
xlat
ss
sub
xchg
xchg
add
mov
idivl
leave
cmc
xor
pop
iret
jle
xor
repz
adc
int
dec
imul
mov
xlat
mov
test
mov
pop
mov
lcall
mov
jnp
add
testl
roll
lock
dec
jo
sti
in
orl
adc
ljmp
testb
pop
cmp
fs
jae
cmp
xor
xor
test
js
inc
add
call
and
lock
jns
jmp
int3
sbb
pop
jmp
cli
pop
push
pop
push
leave
aam
mov
out
movsb
pop
adc
into
mov
mov
ret
push
add
mov
repz
mov
and
cmp
mov
insl
imul
jnp
dec
ss
jmp
data16
and
jecxz
daa
and
mov
jmp
scas
ljmp
push
inc
inc
adc
push
or
clc
or
or
in
ss
xor
add
pop
mov
and
pushf
inc
push
loopne
dec
push
sarb
nop
fwait
xor
aad
sbb
int3
imul
and
lods
cmpsb
nop
stos
pop
dec
std
adc
push
scas
inc
int
push
sbb
push
mov
push
pusha
lods
js
sub
pop
mov
frstor
push
sub
mov
in
add
lea
mov
pop
ds
jns
sahf
cs
popa
sbb
mov
pop
daa
nop
ljmp
mov
pop
data16
pop
in
fs
dec
inc
call
push
dec
dec
cmp
push
push
xor
out
cmpsb
ud2
sub
scas
jg
test
ret
jo
xchg
lods
js
out
sar
xchg
popa
aad
or
dec
lcall
fcmovnb
lock
adc
add
das
clc
pop
mov
jb
cwtl
and
inc
jp
test
push
insl
pop
xchg
push
aas
xchg
cltd
pop
cli
pushf
mov
loopne
addr16
or
out
push
sbb
shlb
iret
scas
test
rcrb
xchg
and
loop
push
xchg
daa
les
cmp
cs
iret
js
out
ljmp
aaa
sbb
adc
stos
rcl
out
mov
push
mov
mov
sub
push
scas
arpl
icebp
nop
call
dec
xchg
in
loopne
outsb
lock
ret
into
sbb
xchg
sbb
sub
mov
add
mov
aam
jae
pop
add
fsubrl
pop
mov
xchg
dec
push
sbb
dec
mov
cli
add
mov
push
or
push
inc
sbb
lret
mov
cmp
and
jmp
out
cmp
adc
scas
out
mov
jp
movsb
enter
cmp
clc
in
jnp
nop
ja
and
jg
ljmp
dec
call
stos
mov
add
test
mov
fs
mov
mov
cli
mov
loopne
not
push
loop
xor
mov
ret
daa
ja
mov
cwtl
xchg
mov
hlt
push
loope
jp
dec
ret
mov
popa
and
ss
or
popf
hlt
sar
repz
in
xor
mov
fld1
shlb
mov
pop
fs
sbb
push
lret
dec
cmpsl
fsubs
mov
ljmp
sbb
test
mov
xor
mov
out
lods
push
inc
pop
mov
and
lods
imul
daa
mov
mov
or
outsl
mov
ss
cmp
push
movsl
mov
xor
arpl
and
call
cli
inc
pop
jl
xor
out
push
adc
loope
mov
mov
mov
mov
outsl
test
sub
shrb
mov
fidivl
lcall
jne
roll
inc
movsl
ss
pop
inc
sub
jb
push
inc
sarl
sbb
xor
test
out
lods
mov
adc
xlat
repz
fidivl
insl
jbe
iret
dec
lret
push
xlat
data16
jb
xor
iret
roll
leave
xchg
movsl
mov
int
jge
rep
ljmp
outsb
test
pop
xchg
je
dec
stos
sahf
push
stos
mov
or
jb
or
jne
sbb
aad
lret
mov
fnstenv
sub
inc
cs
movl
stos
xlat
iret
daa
dec
lods
arpl
jg
in
dec
xchg
insl
movsb
in
cs
or
clc
mull
dec
sahf
pop
fwait
cmpl
inc
mov
dec
out
cmp
and
sarl
jmp
push
aaa
fldt
je
dec
add
mov
cltd
aaa
fcmove
aad
mov
push
cmp
jae
scas
jns
mov
aaa
push
jl
subl
dec
scas
sbb
add
or
xchg
sub
mov
add
or
pop
out
or
arpl
inc
and
gs
enter
push
jl
mov
stc
dec
mov
test
and
xor
leave
or
aas
in
enter
mov
mov
call
sbb
movsb
fistl
popf
pop
sub
xchg
out
mov
pop
fisubrl
test
or
dec
fwait
cmp
xchg
pop
test
test
fistpl
sbb
jno
fcoms
and
add
add
pop
mov
pusha
push
mov
jp
mov
adc
push
push
xadd
xchg
into
mov
pop
fwait
inc
adc
das
ret
stos
dec
out
and
and
ss
dec
fcmovnu
and
xor
mov
insl
adc
movsb
hlt
xchg
inc
sbb
enter
cmp
lea
loopne
daa
add
mov
ja
lods
inc
lods
int3
adc
cmp
aas
mov
daa
jnp
shll
pop
cmp
add
mov
pop
test
xchg
push
adc
adcl
aas
jle
sbb
dec
and
mov
jbe
out
and
and
ja
mov
inc
lahf
add
stos
mov
add
out
in
dec
repnz
scas
pusha
mov
aam
out
push
sbb
call
rcrb
jnp
adc
sub
mov
lea
mov
pop
aaa
push
iret
std
jp
int3
sub
pop
cltd
add
mov
push
ljmp
addb
mov
push
fs
add
push
cmp
sub
sub
sub
outsb
jp
inc
out
dec
lret
outsl
jne
ljmp
into
ljmp
mov
aad
jle
cmp
roll
int
fs
xchg
loope
sub
jne
xchg
mov
scas
enter
fldcw
jg
aam
jle
xor
pop
mov
jnp
mov
cmp
aam
or
cli
adc
scas
and
pop
daa
enter
scas
lds
inc
loopne
push
enter
mov
push
repnz
arpl
outsb
mov
je
fwait
insl
adc
iret
sbb
push
stos
and
sbbb
push
cmp
mov
scas
inc
cli
or
mov
addr16
jo
and
mov
push
cld
xor
test
loop
cmpb
ja
mov
out
or
lret
inc
xchg
movsl
pop
adc
add
jl
icebp
xchg
push
icebp
xor
subl
pop
cwtl
into
mov
loop
mov
faddl
and
test
mov
mov
fstpl
jge
imull
mov
jmp
jg
addr16
cmp
ja
enter
sub
jle
mov
adc
fstpl
and
or
push
in
nop
sub
cltd
and
aad
or
ja
push
scas
cmp
arpl
mov
or
lds
into
cli
push
sahf
enter
jg
enter
add
out
in
xchg
gs
add
mov
scas
xor
shl
cmc
add
jecxz
push
shrl
out
jp
jnp
in
enter
les
push
cmpsl
mov
mov
sub
mov
pop
aaa
outsb
or
add
mov
push
mov
and
stos
xor
xor
push
adc
inc
leave
aaa
and
ljmp
loop
stos
dec
jne
loop
ret
fisubrl
push
push
addr16
or
jle
sti
push
push
xor
jmp
fdivs
pop
and
sbb
mov
push
cli
sbbl
out
subl
imul
cmc
mov
subl
out
jne
cltd
in
push
mov
lds
xor
push
fcoms
out
cmpsb
hlt
pop
test
or
and
xor
rcrl
adc
push
loope
pop
sbb
fwait
cmp
cmc
int
enter
inc
int3
dec
adc
sbb
add
dec
lahf
clc
in
inc
jne
or
fbld
fucomi
inc
std
shr
ss
movsl
or
sub
hlt
std
jp
adc
dec
mov
cld
xor
lea
imul
mov
movsl
xchg
xchg
xchg
push
and
mov
lret
aas
push
testl
cli
xor
stos
mov
mov
mov
test
cltd
push
cmpsl
push
sub
pop
jmp
dec
mov
dec
cmp
sub
push
cmp
mov
in
adc
inc
clc
inc
rclb
mov
inc
xchg
sub
cmp
ljmp
pop
mov
mov
subl
jp
xchg
adc
outsl
popa
mov
mov
mov
pop
jle
cmp
jno
sbb
or
push
adc
insb
jo
jl
lret
in
adc
sbb
push
lock
push
addr16
or
test
push
mov
push
and
test
mov
dec
mov
cli
mov
bound
lods
lds
scas
pop
lahf
scas
jl
add
rcr
imul
fs
repnz
pop
pxor
imulb
aaa
rorl
je
sahf
mov
js
push
loopne
rclb
stos
dec
xchg
sub
mov
enter
aad
rorl
sbb
outsb
jnp
pop
ja
fadd
negb
sub
mov
dec
scas
pop
pop
es
xchg
fsts
jle
scas
cmpsb
leave
cmp
mov
sbb
cwtl
icebp
xor
add
subl
in
out
sti
dec
insb
mov
aam
inc
fcmovbe
daa
scas
loop
lea
adc
jmp
mov
adc
mov
outsl
xchg
lret
stc
imul
mov
adcl
out
jmp
jno
cmpsl
cltd
adc
sahf
and
and
jmp
jge
gs
dec
and
fwait
scas
shlb
and
iret
push
fdivs
cmp
pop
jg
xchg
aam
not
push
cld
js
mov
std
jno
sahf
cmc
cmpsl
dec
cli
insb
ret
int
xor
loop
fstp
sti
call
andb
out
in
popa
popa
in
mov
xchg
xor
loop
filds
sbb
testb
in
xor
pcmpeqd
inc
lods
popf
fdivl
jl
jg
out
adc
mov
inc
inc
xor
jo
and
adc
scas
add
jmp
cmp
arpl
clc
add
out
clc
pop
cmp
dec
mov
pop
mov
xchg
sbb
repz
jo
push
dec
arpl
rcr
jb
test
bswap
sbb
jno
add
fiaddl
mov
mov
aad
insb
xlat
aad
push
xchg
fs
or
or
pop
inc
dec
sahf
popw
xchg
add
loop
pop
push
push
pop
sbb
jne
sub
xchg
mov
push
jns
pop
mov
push
pop
cmpsl
adc
xchg
jecxz
sbb
pop
sbb
inc
cli
movsl
cld
aam
ljmp
cmpb
dec
sti
std
dec
movsl
cmc
cli
adc
pusha
and
xor
scas
icebp
ror
shlb
fsubr
sbb
xchg
mov
mov
inc
dec
xchg
mov
push
pop
sbb
mov
lock
addr16
mov
mov
inc
xchg
mov
mull
add
popf
push
sarl
sub
les
jl
lods
inc
or
xor
clc
or
out
fidivrs
lahf
push
mov
jne
jmp
fisubrl
pop
lret
add
add
pusha
dec
xchg
mov
push
xor
pop
aas
mov
cld
shrb
dec
dec
loop
cmc
fsubs
mov
inc
inc
and
xchg
mov
test
adc
addr16
out
out
xchg
bound
push
or
iret
mov
jmp
cld
cmp
or
mov
fwait
test
push
and
inc
fsts
mov
push
andl
ds
cltd
das
mov
loopne
lds
cmp
mov
jne
das
jecxz
stc
jo
mov
pop
xorb
fistps
lods
cli
cmp
orb
mov
jecxz
lods
mov
mov
out
push
insl
jae
mov
dec
jecxz
movsl
and
mov
mov
mov
rcll
xor
mov
pop
fmull
mov
arpl
test
push
orb
lock
cld
rcrl
mov
sbb
outsl
jbe
dec
pushf
jecxz
xor
adc
lock
or
push
inc
and
pushf
stc
cmp
notl
lods
fidivrl
rcll
cmp
fdivl
jmp
ja
sbbl
mov
jmp
inc
sub
jmp
mov
pop
mov
mov
xchg
fstpl
add
jb
xchg
cmc
icebp
mov
inc
out
cmpsb
inc
xchg
sbb
sub
iret
mov
jle
add
inc
mov
jmp
mov
mov
fidivs
push
pop
shl
jg
je
jecxz
adc
por
pop
mov
aam
aaa
call
mov
repz
data16
xchg
or
fiaddl
sbb
fwait
dec
mov
mov
loope,pt
add
xor
test
cmc
jle
std
add
movsl
ja
sub
jmp
cmp
fisubs
lods
aas
xlat
lea
mov
mov
xchg
mov
mov
and
push
mov
pop
inc
ret
jge
ljmp
ret
out
shll
insl
cmpsl
xchg
sub
repnz
mov
stos
in
rcll
pushf
in
shrb
enter
xor
xchg
pushf
lahf
xor
lcall
inc
xorl
jmp
push
cmp
shl
inc
sarb
jne
sbb
xor
jge
ja
mov
jae
pop
push
insl
cmpsb
hlt
jle
aaa
stos
mov
sub
leave
sub
push
ds
jp
movsl
ss
push
orl
pop
inc
nop
sti
adc
xor
loop
jo
and
enter
push
mov
jecxz
mov
inc
pop
ret
or
jg
push
cmp
jnp
loope
adc
or
push
shlb
lcall
xor
out
adc
out
fisubrs
ficomps
push
xor
cmp
sti
mov
aas
inc
inc
mov
or
jne
stos
xchg
clc
mov
and
and
es
cmp
xor
in
cmc
add
xor
push
xchg
xchg
addb
lods
jns
mov
mov
inc
pop
inc
stos
cmp
mov
sbb
xchg
pop
data16
mov
sarb
jge
aad
push
xor
dec
jnp
push
xchg
mov
jae
adc
imul
xchg
xor
in
mov
movsl
fisubrs
or
fs
push
xchg
sbb
pop
gs
push
std
inc
ja
xor
mov
xorl
push
jnp
pop
push
push
pop
pop
fstpt
les
jo
imul
aad
mov
xchg
inc
in
jmp
ss
adc
dec
clc
or
and
pop
int3
pop
mov
stos
lock
mov
sbb
fildll
pusha
out
clc
mov
jb
xchg
lahf
faddp
mov
add
or
push
mov
pop
sbb
and
or
push
push
sbb
mov
mov
shlb
outsb
out
sbb
mov
and
je
out
lcall
dec
push
cld
in
lret
pop
cmp
cmp
mov
xor
fst
fadd
out
push
mov
cmp
jno
inc
add
adc
adc
mov
mov
push
pop
movsl
loopne
les
jbe
lret
pop
xchg
add
sub
rolb
push
cmp
mov
loope
xor
push
idivb
sub
test
inc
pop
lods
jmp
cs
repz
mov
xchg
xor
push
mov
push
movsb
mov
cmpsl
testb
adc
push
jmp
fsubrs
mov
adcb
sarl
rcl
push
out
int3
cs
cmp
outsb
xor
jns
mov
and
add
cmp
dec
pop
dec
and
and
pop
enter
out
sub
jns
fwait
mov
movlps
fisubl
mov
push
sbb
ljmp
es
inc
add
fistps
aas
fidivs
and
xor
xchg
loop
push
pop
and
push
mov
mov
cmc
outsb
mov
cmp
and
aam
iret
push
jbe
idivl
jbe
add
pop
out
inc
mov
popa
data16
cmp
sti
test
dec
pop
jae
clc
repnz
mov
lcall
cmp
stos
sbb
add
cmp
fwait
sbb
fcmovnb
aam
fildll
das
aad
jge
out
sbb
dec
mov
pop
inc
inc
dec
pop
add
lock
mov
sbb
push
or
pop
xorb
push
and
rorl
pop
pop
jecxz
cmp
push
in
mov
int
test
push
mov
fldt
enter
jg
into
pop
mov
fdivs
lret
inc
lods
xor
xchg
inc
rcrl
mov
xor
mov
push
push
out
push
shll
jmp
xchg
lods
subl
jb
loop
cld
and
xchg
shlb
stos
addb
and
in
sbb
rorb
dec
fbld
repz
imul
ret
xchg
mov
add
subl
lds
xor
ret
sub
enter
mov
je
fdivrl
lea
jp
or
push
rcrl
mov
cmp
pop
xor
aas
jne
jp
push
fisttpll
ja
lahf
xor
mov
sbb
mov
movsl
ffreep
rorl
or
rorb
xchg
push
push
aas
mov
adc
mov
pop
cltd
or
mov
ud2
lcall
es
sub
cmp
adc
cwtl
dec
je
pop
imul
daa
divl
mov
stos
and
xchg
sbbb
fistpll
sbb
shrl
fwait
mov
clc
in
jmp
adc
add
sbb
dec
stc
dec
dec
xchg
mov
xchg
pop
inc
sub
gs
les
rol
int
mov
out
add
mov
push
lea
push
fldl
fnstcw
mov
cs
dec
in
outsb
fstpl
fidivs
lods
fidivrs
add
push
popa
out
sub
out
lods
test
les
pop
xor
or
or
adc
or
movsb
sahf
rol
pop
pop
adc
mulb
jno
xchg
mov
pop
neg
lret
dec
and
mov
and
packuswb
cmp
insl
aad
pop
push
jecxz
cltd
loope
pop
cmp
dec
push
in
rolb
pop
jae
mov
cli
cmpsl
cmpsb
cwtl
loop
mov
loopne
cs
pop
sbb
aad
inc
daa
mov
aam
sub
dec
mov
int
je
cld
loop
adc
ds
fiaddl
inc
push
sarb
nop
and
push
aas
call
lahf
add
xchg
fistpll
sbb
sub
pop
mov
daa
repz
adc
test
sub
fdivs
cmc
mov
cmpl
fcomps
cltd
mov
in
ss
cvtps2pi
mov
pop
push
cli
adc
icebp
rcl
je
jnp
aam
mov
fs
arpl
xchg
sub
pop
xchg
cmp
fwait
push
fdiv
pop
out
cwtl
sbb
mov
adc
jecxz
test
and
adcb
mov
aas
repnz
dec
cmp
fnstsw
pusha
aaa
push
add
xor
loop
inc
mov
or
xor
inc
push
loope
and
xor
out
imul
pop
jmp
or
cmp
daa
pusha
jmp
pop
sbb
cmp
cmpsl
sti
xchg
int3
rcr
idiv
fildl
imul
jo
lret
shlb
idiv
jno
imul
dec
sub
pop
add
das
dec
lock
test
outsl
push
dec
inc
ficoms
sub
sbb
cmp
sbb
and
fsubl
shr
mov
mov
sub
and
lods
das
psubw
sahf
fidivrs
push
mov
xor
sbb
pushf
pop
inc
mov
push
cmp
into
in
xor
out
xchg
pop
adc
mov
cmpsl
sar
xchg
or
call
subl
jne
xor
adc
pop
movl
rclb
mov
inc
cmp
dec
std
push
xlat
aam
dec
inc
lods
sub
lds
xchg
mov
aas
adc
or
add
sub
mov
arpl
jge
js
jp
add
and
test
js
addr16
fsubr
or
int
fcoml
or
fcomps
lock
xchg
fimuls
imul
and
dec
jp
sbb
jo
add
clc
xchg
cld
mov
shrb
sbb
inc
push
nop
scas
enter
mov
in
popa
jl
jb
mov
out
mov
xor
inc
pusha
mov
outsl
imul
sub
gs
pop
popf
data16
mov
imul
inc
adc
loop
or
data16
insb
push
push
jae
cmp
test
movsl
sub
out
int3
adc
in
andl
mov
ss
xor
and
in
insl
in
xchg
push
test
ret
jmp
or
and
int
mov
arpl
mov
push
das
and
mov
push
int
fdivs
pushf
adc
jecxz
rorb
je
aam
adc
jne
add
call
or
sub
shrb
ja
lock
mov
jbe
push
aam
sbb
xchg
push
sub
mov
in
stos
rcl
xchg
cmp
cltd
imul
movsb
or
inc
loopne
dec
scas
sub
mov
stos
cmpsb
ret
push
ja
pop
mov
sarl
cmpsb
dec
hlt
popf
pop
shll
inc
mov
xchg
xorl
sbb
in
out
repz
mov
xchg
push
es
into
insb
decl
mov
add
cmpsl
mov
xor
mov
inc
out
movsb
in
pusha
sbb
andb
mov
xbegin
rclb
sub
push
mov
test
rorl
mov
test
and
cmp
out
test
push
fisubrl
in
push
popf
cmp
bound
shl
push
mov
les
adc
cmpsb
pop
jmp
test
andl
xor
ret
pop
rorl
loopne
push
jno
xor
out
jbe
xchg
gs
shll
inc
add
lahf
add
mov
popa
and
cwtl
pop
ret
es
fildl
out
xchg
dec
les
mov
shlb
insb
cmp
inc
pushf
cli
or
xlat
das
mov
dec
pop
test
fdivl
rcll
or
mov
mov
push
xorb
shl
mov
xchg
mov
adc
cmp
addr16
cmc
cmp
pop
xor
xchg
pop
arpl
adc
jge
and
dec
rclb
fldcw
lcall
sbb
test
stc
test
xor
dec
jmp
jbe
ret
xchg
or
lahf
loopne
push
mov
adc
inc
icebp
push
dec
inc
insl
inc
add
mov
aaa
jbe
push
mov
pop
js
mov
jmp
leave
xor
fcmovb
scas
push
xor
ja
adcb
aaa
xchg
movsb
subl
rolb
sub
daa
out
in
mov
int
stos
and
mov
mov
jb
mov
repz
insl
lahf
sub
js
int3
clc
movsl
mov
aaa
iret
das
jnp
sub
or
and
mov
lods
cld
mov
xchg
adc
adc
sti
jle
das
pop
addl
cmpsb
movsl
xchg
lret
mov
cli
pop
test
insl
sbb
cld
and
leave
bound
pop
adc
in
loop
jmp
push
mov
movsb
sbb
jno
pop
xlat
dec
ljmp
cmp
xlat
push
loop
mov
mov
cwtl
loopne
jae
fimuls
outsb
sbb
lock
rolb
jmp
mov
or
in
shlb
xor
scas
or
ds
push
dec
mov
test
or
push
popa
mov
pushf
xlat
jne
mov
sub
mov
out
push
orb
xchg
jge
cltd
enter
sbb
mov
fadds
mov
mov
inc
dec
imul
cmp
cmp
lret
stos
mov
out
aas
add
sahf
jo
test
or
push
cltd
adc
inc
or
mov
test
cli
mov
dec
xor
test
xadd
or
repnz
cmc
xchg
mov
inc
jb
test
dec
arpl
mov
in
xchg
mov
enter
lods
adc
out
push
push
leave
test
and
jbe
sarb
stc
jno
add
pop
lahf
btr
inc
push
add
xchg
push
xor
ja
icebp
orl
stc
les
inc
icebp
and
test
repz
pop
andl
int
xchg
dec
dec
xor
pushf
xor
push
loop
out
movsb
jne
xchg
popf
rol
sbb
loopne
sub
adc
ret
rol
into
and
cmp
and
sbb
aaa
adc
mov
lret
cli
push
fisubrl
mov
hlt
mov
and
add
xchg
or
mov
das
xchg
das
dec
mov
in
mov
mov
sahf
rorl
jo
lret
push
or
fdivrl
sbb
xchg
cli
stos
in
stos
leave
movsl
lock
mov
addr16
push
repz
test
ja
inc
jmp
adc
mov
or
gs
test
and
mov
push
data16
in
int
fisttpll
fs
cmpsb
cmp
andb
int
xor
test
roll
add
into
mov
sti
and
mov
push
adcl
pop
jle
cld
jecxz
and
pushf
loope
xchg
jns
mov
out
mov
and
mov
push
push
call
xor
add
sub
inc
mov
cmp
stos
dec
cmc
mov
out
push
mov
mov
cwtl
pop
adc
mov
push
push
sub
adcl
mov
leave
dec
cmpsl
unpckhps
adc
lret
repz
jp
or
cmp
pop
pusha
ds
repz
sub
int3
iret
xchg
test
mov
sub
shl
sub
stos
sbb
and
mov
jns
dec
inc
adc
hlt
mov
mov
lcall
adc
xchg
scas
ss
xlat
iret
cmp
stc
xor
mov
loope
sub
push
push
jns
lea
push
popf
mov
mov
enter
les
add
pop
sbb
shlb
call
lcall
addr16
fiadds
repz
in
cmp
bound
adc
xchg
lods
add
sbb
inc
mov
stc
pop
cmp
mov
les
addl
dec
stos
lahf
xchg
ljmp
test
fwait
mov
fs
jns
data16
ss
sbb
pop
jns
mov
and
stos
pop
lods
daa
in
into
mov
xchg
and
aam
mov
test
addr16
xlat
lds
testl
adc
pop
out
shll
xorb
jge
stos
es
sub
ret
mov
and
dec
xorl
ficompl
pop
ljmp
shll
pop
pop
cmc
out
ds
and
repnz
ret
add
pop
ret
xchg
adc
push
pop
sbb
aam
icebp
cmpsl
andb
int3
into
mov
lock
test
insl
mov
test
repz
aad
push
js
mov
andl
subl
push
jne
jne
cli
mov
cmc
sti
test
lcall
ja
addr16
es
popa
loopne
pop
movsl
jg
mov
jae
push
push
in
enter
or
inc
out
arpl
idivl
or
and
cmp
cmpsl
xchg
or
push
push
cli
in
lea
hlt
xchg
cltd
sti
cltd
jge
roll
xchg
sub
mov
inc
mov
and
inc
cmp
cmp
push
jne
div
cld
cwtl
ljmp
mov
in
pop
test
cmp
xlat
sbb
pushf
push
pusha
test
lahf
push
add
or
pop
fmull
and
out
sbb
add
ret
mov
and
pop
mov
push
jg
mov
add
repz
sub
sbb
icebp
dec
hlt
add
fisubrs
dec
call
arpl
inc
add
or
lcall
fsubrs
lret
in
add
jmp
lcall
fsubl
adc
or
movsb
push
adc
es
loop
aad
iret
js
adc
pop
mov
and
inc
cmc
je
mov
mov
mov
pop
xchg
mov
fnstsw
and
mov
xchg
test
cmp
ds
mov
sub
fsubrs
xlat
cld
and
ret
in
push
and
scas
pop
nop
adc
jp
leave
dec
arpl
cmc
cli
loop
stos
sbb
test
xchg
push
addb
sbb
fpatan
rcr
sbb
in
push
pop
xchg
sub
in
sbb
xchg
inc
or
push
sbb
pop
imul
scas
push
cs
int3
aaa
aaa
pop
pop
notl
add
inc
fisttps
jno
cmp
push
test
loop
add
jno
cmpl
popa
repz
outsl
cwtl
pop
mov
bnd
bound
xor
lods
jnp
add
iret
add
push
mov
cmp
add
mov
pop
icebp
xchg
mov
stos
and
mov
dec
outsl
xor
jmp
cltd
sub
scas
std
bound
xor
jns
gs
xor
fucomi
push
lahf
add
mov
mov
dec
dec
add
test
xchg
sub
shlb
cmc
ss
fs
filds
inc
xor
mov
xor
xor
cmpsb
mov
cli
push
clc
pop
sub
out
and
std
out
mov
jge
jae
push
xor
data16
test
orl
add
mov
test
stc
sub
test
enter
test
xchg
cmp
xchg
hlt
lock
adc
shrd
js
lods
pop
aas
out
cmp
adc
pusha
push
mov
add
out
aas
loope
popa
inc
ja
lahf
out
lret
stos
loopne
scas
sahf
in
sub
push
ljmp
mov
mov
cmp
adc
xor
sub
push
dec
sub
mov
xchg
bnd
dec
insb
jnp
stos
fnsave
enter
out
xor
push
cmpsb
pop
push
adc
jle
fsubl
dec
xor
cld
fwait
and
push
rorb
test
ficoms
xor
mov
xchg
lds
or
jae
in
ror
push
addr16
push
push
bound
sahf
sub
test
imull
test
adc
pop
mov
push
xor
fimuls
push
daa
dec
mov
jbe
and
ds
jae
pushf
and
icebp
inc
inc
rorb
push
mov
mov
aaa
dec
and
and
or
and
es
aas
lahf
sub
sbb
adc
jo
das
add
icebp
push
cmp
and
jns
pop
popa
idivb
cli
fcoml
call
push
popa
dec
pop
xchg
jle
bound
aas
sbb
inc
adc
loop
inc
mov
mov
push
mov
xor
cmp
mov
mov
push
out
shlb
popa
jae
xor
cltd
stos
mov
push
mov
out
subl
mov
stos
pop
movsb
into
dec
das
mov
push
dec
lret
ss
sub
into
or
jp
adc
cld
sbb
pop
outsl
test
and
out
arpl
push
jne
orb
inc
pop
dec
xchg
sub
sub
cmc
lcall
enter
adc
ss
imul
sahf
jl
xchg
mov
shrb
out
stos
ret
mov
fwait
gs
popf
aas
pop
jl
leave
mov
cmc
jbe
ret
jmp
in
mov
fsubl
sbb
out
subb
out
jns
lods
repnz
or
out
add
dec
leave
and
sbb
sbb
xor
not
mov
xor
ss
pop
push
xchg
xchg
dec
enter
mov
test
scas
adc
nop
shll
jb
shrb
ds
xchg
aad
fisubrs
stc
mov
push
adc
xchg
es
inc
xor
jle
mov
scas
jmp
ja
push
out
cmp
idivb
sub
aad
adc
call
jmp
movsl
inc
pop
clc
les
loopne
mov
test
adc
mov
sahf
and
adc
sbb
out
lods
enter
mov
out
jns
ret
cmp
jns
inc
sbb
lfs
inc
mov
das
fwait
ss
cld
into
shll
int3
jl
ret
jnp
adc
or
inc
shl
punpcklwd
pusha
stos
push
out
addr16
mov
es
ss
add
test
in
imull
jae
pop
and
or
ds
js
push
outsb
addr16
add
jecxz
cmp
or
and
add
inc
or
outsb
mov
lods
mov
cmp
test
ss
sbb
dec
push
lcall
stc
jle
mov
fidivl
ds
lret
cmp
add
and
pop
sbb
sbb
insb
movsl
subl
lret
sti
add
cmc
inc
cmp
inc
mov
lds
or
popf
push
ja
fnstenv
cld
repz
addl
jp
lock
xchg
outsl
push
xchg
loop
mov
std
pusha
xchg
rorl
sub
sbb
push
cmp
pop
insb
adc
mov
inc
in
jg
push
test
inc
rcll
mov
add
pop
ljmp
mov
cmp
push
mov
mov
movb
fwait
ss
mov
xor
cmp
iret
xchg
and
cmp
xor
jg
leave
jp
xor
dec
mov
lods
jnp
es
or
shrb
aam
aas
outsb
push
adc
push
lods
pop
fstl
inc
cmp
ret
fbld
or
and
add
and
pop
mov
movsl
push
jle
pop
testb
arpl
push
outsl
mov
mov
repz
lds
fnstenv
inc
push
push
push
xor
in
mov
and
and
or
sub
in
mov
jae
pop
ja
xor
les
add
imul
pop
outsb
ja
pop
bound
addr16
ret
pop
fiaddl
pop
pop
inc
ficoms
sahf
and
mov
cli
xor
shlb
xchg
gs
in
mov
out
sbb
ficoml
andl
inc
js
fstps
and
mov
push
pop
outsb
pop
dec
imul
call
out
lcall
xchg
subl
cmp
dec
ss
mov
pop
int3
sarl
adc
mov
inc
inc
xchg
fldln2
jb
aas
pusha
inc
fstp
pop
test
loopne
lahf
inc
or
enter
or
ret
xchg
aam
js
loope
test
cmpsb
xor
test
adc
pop
or
or
sti
rcr
mov
enter
sub
inc
je
jae
enter
mov
inc
dec
jle
or
jl
or
pushf
or
mov
int
jl
dec
stos
loopne
xchg
pop
push
lods
test
aam
adc
test
and
mov
test
and
push
inc
scas
insl
aam
mov
pop
scas
lret
sub
incl
negb
adc
mov
je
pop
sbb
sbb
stos
iret
xchg
fwait
shrl
mov
lods
push
lods
dec
out
cwtl
sub
mov
lock
push
ja
mov
fidivrl
xrelease
fstpl
cmpsb
xchg
sbb
sub
outsl
pop
lods
jns
or
mov
test
mov
outsb
fdiv
cmp
pop
dec
fdivl
cmc
sub
push
hlt
adc
mov
ss
cmp
lods
dec
or
leave
mov
cmp
or
lea
into
popa
cmp
push
mov
inc
int
inc
int3
sub
mov
xchg
iret
arpl
jns
mov
dec
sub
xor
dec
mov
inc
mov
cmpsl
sub
xchg
xchg
and
or
pusha
mov
imul
cmp
dec
mov
cmp
fdivl
jp
inc
adc
out
insl
arpl
int3
push
mov
push
xor
ret
adcl
cmc
dec
add
insl
add
push
mov
notb
add
push
cmpsb
out
push
test
stc
mov
ljmp
mov
pop
push
lret
dec
jl
mov
fdivrs
mov
mov
mov
mov
scas
dec
xchg
adc
adc
pop
fs
scas
and
push
mov
push
jbe
cmp
sbb
fwait
mov
mov
sbb
in
pop
adc
ret
sub
icebp
mov
in
jmp
scas
xchg
or
dec
sbb
dec
cmp
rclb
loopne
gs
aam
dec
test
cld
adc
leave
mov
sbb
cs
xchg
push
sbb
cmc
rcrb
push
xor
dec
jbe
mov
stos
lret
icebp
aaa
andb
call
arpl
mov
xchg
flds
push
xchg
mov
push
pop
mov
sbb
pop
push
iret
cmp
adc
pop
outsb
std
orl
orb
inc
frstor
and
out
cld
int
fisttpl
in
bound
push
scas
loop
call
or
prefetchwt1
jmp
imul
mov
lret
mov
push
push
daa
mov
sub
push
xchg
scas
and
dec
inc
add
out
mov
push
dec
daa
push
lret
fldt
jecxz
xor
popf
mov
dec
xlat
out
or
aaa
add
push
mov
sub
fs
xor
ret
sarb
pop
les
out
out
outsl
ret
mov
cs
shr
jb
mov
jmp
and
sbb
stos
frstor
lods
sbb
cmp
inc
mov
lahf
sahf
xchg
push
sbb
mov
outsl
aam
mov
jno
mov
add
loop
mov
push
ss
ljmp
add
ds
or
push
fcmovu
xor
ljmp
dec
xchg
and
dec
mov
xchg
or
dec
cmpl
shrl
lahf
outsb
flds
sti
ljmp
mov
ret
jne
sbb
adc
adc
jno
mov
dec
in
fisubs
fidivs
rolb
cmc
pusha
ja
push
out
test
and
sub
ss
addr16
bound
mov
out
dec
jb
xchg
jmp
test
je
pop
imul
call
xor
xchg
mov
inc
test
sbb
xor
adc
rorb
pop
mov
imul
addr16
pop
lcall
mov
sbb
inc
add
push
inc
fsubp
inc
pop
or
loop
sbb
cmp
adc
cmp
arpl
jmp
lock
mov
dec
mov
out
out
popa
js
std
cmc
sbb
pop
mov
out
mov
sub
cmp
fwait
sbb
ret
xor
dec
or
repnz
fsubs
add
test
repz
jg
pushf
test
icebp
hlt
imul
jns
inc
push
sub
add
loop
xchg
sti
clc
sbb
dec
movsb
inc
push
repnz
push
or
insl
push
cmp
xchg
call
mov
in
call
push
stos
jmp
xchg
addr16
add
sbb
add
aam
jp
jle
sbb
xor
das
cmc
lcall
lahf
outsb
mov
nop
cltd
fcoml
mov
lods
push
scas
jmp
push
stos
mov
mov
pop
xor
call
sbb
or
in
pop
jo
dec
mov
pop
mov
cmpsl
popf
jae
pop
into
fcmovu
lcall
mov
icebp
aam
mov
setge
sub
add
push
push
loop
mov
aam
cwtl
cmpsb
jp
popa
xchg
in
or
int
cmpl
popl
or
push
addr16
clc
scas
add
xchg
dec
lret
fwait
cld
xor
or
xor
jbe
push
adc
mov
jmp
dec
icebp
jle
out
jb
xor
repz
clc
and
xchg
ret
out
push
mov
movsb
or
adc
cli
sbb
test
pop
add
sub
lods
in
popa
or
fidivrs
jp
mov
xorb
xchg
push
sbb
dec
iret
pop
xorl
pop
inc
xchg
addl
fcompp
mov
pop
dec
adc
lods
call
sbb
ret
aas
out
sbb
xchg
addb
and
mov
mov
inc
andl
fwait
enter
bound
pop
push
lahf
lods
mov
sahf
daa
push
loopne
inc
jo
mov
lret
divb
out
test
inc
mov
adc
xchg
jmp
inc
mov
lods
imul
push
in
mov
or
stc
pop
ror
dec
stc
out
xor
xchg
xchg
sbb
test
mov
aas
mov
push
pop
mov
je
out
mov
lret
lret
inc
dec
add
ljmp
aas
add
rcr
jp
aas
lahf
sub
mov
jp,pn
addl
roll
adc
cwtl
xchg
adc
in
fs
das
lret
cmp
pop
shl
jne
or
mov
ss
negb
dec
xchg
insl
xchg
inc
and
das
mov
sbb
lods
ret
dec
dec
mov
mov
sahf
loop
daa
cmp
jecxz
fcmovnu
mov
or
popa
mov
jne
into
sub
shrb
xchg
push
mov
insb
push
dec
das
call
ret
popa
leave
ret
stos
test
xlat
cld
add
jl
sbb
mov
pop
sbb
sub
cmpb
mov
inc
xlat
sub
mov
movsb
or
lret
sub
sbb
int3
out
fcoml
push
out
dec
push
or
mov
pop
int3
aam
mov
les
insb
shlb
and
in
add
loopne
cmp
add
cmpsl
pop
cmpsb
jge
sub
bound
cmp
les
cmpsl
mov
lds
mov
xchg
mov
jae
fcoml
outsb
jae
nop
inc
xlat
sti
daa
lods
jns
clc
pushf
das
inc
pop
fiaddl
cs
adc
popa
aaa
fmuls
inc
subb
mov
sahf
bound
cmp
pop
loop
mov
pop
xor
jge
sahf
jle
dec
jnp
movsb
sahf
mov
mov
ja
sbb
movsb
jo
xorb
in
cli
push
push
xchg
stos
popa
loope
and
push
dec
dec
or
mov
fsts
in
clc
jmp
fwait
pop
mov
scas
mov
icebp
repnz
and
mov
mov
mov
sub
jne
mov
push
daa
ljmp
test
pop
scas
incb
jmp
inc
mov
dec
in
mov
insl
jb
jo
sbb
push
add
mov
loopne
shlb
pop
aas
push
out
xchg
xor
cli
inc
mov
sub
mov
mov
fisttpll
hlt
push
stos
mov
add
loop
popa
pop
mov
push
jno
xor
jne
adc
mov
lahf
add
jmp
sti
fstpl
and
pusha
in
lods
and
addr16
sbb
xchg
and
gs
dec
dec
out
pushf
shlb
jo
pop
cmp
sbb
mov
push
inc
lock
inc
xor
xor
ss
inc
fisubl
ljmp
les
and
fucom
stc
xor
adc
and
push
aad
push
adc
xchg
sbb
jp
ret
mov
cmpsl
aas
mov
movsb
dec
lods
adc
jg
mov
out
jnp
test
add
hlt
ss
std
enter
arpl
ljmp
or
xchg
ja
pop
adc
mov
pop
in
scas
negb
aad
dec
pop
fisttpl
fsubrs
jl
xchg
dec
popf
jmp
stos
in
adc
fwait
pop
xor
sbb
adc
jnp
cmp
dec
sub
test
insl
sub
pop
inc
outsl
jno
dec
sarb
xorl
mov
dec
lods
ss
leave
jo
jl
adc
and
daa
cmp
js
pusha
push
imul
xchg
push
mov
stos
fsts
cmpsb
add
push
iret
pushf
data16
jnp
movsl
inc
leave
jbe
and
mov
pop
rcrb
stos
jno
fldenv
test
sarl
fwait
and
xchg
dec
stos
xchg
push
sub
push
mov
cs
adc
and
cmpsb
movsb
push
ljmp
jne
mov
rcrl
leave
in
mov
test
jge
addl
mov
or
in
movsl
or
jmp
test
mov
inc
insb
scas
dec
cmp
jno
push
push
dec
xor
jns
bound
dec
test
ljmp
xchg
fs
sbb
xchg
movsl
ljmp
aad
dec
sub
lock
movsw
aad
inc
ror
xor
pop
push
xchg
xor
adc
pop
call
arpl
icebp
popa
out
push
jno
loopne
and
sub
xchg
mov
jne
inc
add
mov
notb
je
in
xchg
sahf
repz
or
cmp
or
imul
sub
push
ja
xchg
lcall
inc
cmpsl
or
pop
je
popf
imul
mov
pop
int
cmp
push
pop
pop
movsl
data16
outsb
lods
xorb
mov
inc
cmpsl
or
clc
mov
in
sbb
inc
imulb
pop
push
out
adc
mov
aaa
sub
xchg
aaa
lcall
dec
aas
je
mov
aas
jp
icebp
mov
inc
int3
jmp
xchg
cld
in
xchg
adc
pop
lods
sub
xchg
dec
icebp
rorl
mov
xchg
cmp
xchg
std
cmc
cmp
or
mov
mov
push
rcrb
sub
out
or
xchg
push
idivl
test
lret
cmp
lock
push
xor
add
push
jbe
jl
adc
shrb
es
sbb
pop
negl
xchg
stos
test
dec
repz
jg
int
sbb
in
inc
insl
jp
call
push
and
int
popa
stc
loope
jns
cmp
jl
pop
push
inc
push
or
and
aad
or
mov
or
pusha
dec
movd
jno
les
out
pop
imul
jp
or
das
mov
aad
xchg
es
ja
dec
outsl
hlt
xor
xor
ja
and
lcall
and
push
cmp
pop
imul
scas
dec
adcb
push
sar
sub
push
js
jmp
adc
outsb
push
add
sub
jmp
or
jecxz
xor
dec
mov
loopne
pop
cmp
add
mov
sub
lahf
push
rclb
cmp
add
cs
add
clc
test
movl
in
cmp
push
cmp
lret
and
lret
xor
sub
movb
sub
jo
in
orl
loop
into
filds
outsl
mov
rcll
out
sub
pop
dec
fbld
fimull
cmpsb
fisubrs
addr16
jmp
adc
push
aad
inc
mov
movl
add
stos
int
sub
push
in
lahf
adc
or
outsb
mov
push
dec
andl
cmp
and
sarl
add
std
or
leave
shlb
int3
mov
ds
xchg
mov
inc
movsl
pop
pushf
push
mov
pop
cmc
outsl
pop
xchg
into
hlt
loop
inc
inc
gs
xchg
jecxz
xor
frstor
or
mov
pop
repnz
pop
rcrb
jl
xlat
stc
xchg
inc
daa
pop
cmp
fistpl
push
std
or
mov
cmp
sbb
push
mov
repz
jbe
adc
mov
in
and
int
std
test
repnz
hlt
pop
sbb
push
jle
into
sub
adc
xchg
add
rcrl
jns
push
dec
mov
in
xor
stos
pop
jb
fnstsw
dec
aas
leave
enter
cmp
pop
cmp
inc
cli
mov
imul
push
fstpl
dec
imul
out
out
mov
movhlps
adc
vmovntps
inc
imul
sub
xor
sub
xchg
stos
or
out
xor
xchg
and
repz
push
pop
outsl
repnz
aam
inc
orb
repnz
xor
lahf
popa
test
cmp
sub
test
mov
fmull
mov
mov
mov
into
arpl
in
cmp
xor
int
lods
push
push
adc
pop
and
sbb
mov
and
cmp
or
push
and
sti
add
movsb
cltd
rcrl
mov
add
adc
popa
stos
fsubs
push
xchg
imul
push
jbe
fs
rcrl
mov
rcrl
stc
add
rcll
shl
mov
cmc
mov
pop
aas
xchg
sub
int3
ja
ret
dec
out
cmp
push
mov
enter
int3
pop
add
ss
adcl
or
sub
pop
and
insb
es
movsl
xchg
inc
lahf
or
outsb
sbb
pop
and
jp
add
hlt
out
ret
xchg
pop
in
jo
test
push
pop
push
stc
xor
cwtl
int3
cmp
stos
out
loop
lods
sbb
fcmovbe
shl
add
movsb
cmp
sbb
repz
ret
rcll
int3
lock
dec
ffreep
mov
cmp
mov
cli
pop
jecxz
jmp
inc
cmpsb
popa
add
movsl
add
aaa
jp
mov
imul
xchg
inc
xorl
leave
and
and
jge
add
fwait
imul
mov
pop
adc
cmp
ret
sbb
and
push
das
mov
or
pop
int
sbb
jmp
push
push
loopne
ret
and
push
mov
mov
rcrl
negb
mov
sbb
xorl
test
test
ror
cwtl
fwait
insl
in
js
xchg
sar
dec
push
adc
adc
pop
cmp
or
movsl
mov
fnstenv
or
pop
mov
je
int
dec
jno
or
in
arpl
cmpsl
xchg
xor
daa
dec
sbb
out
leave
aam
cltd
dec
pop
adc
lahf
in
push
xor
push
int3
jo
cmp
sub
iret
frstor
mov
xchg
int3
jl
mov
add
rorl
fsubr
add
cli
fsubrl
mov
popf
add
dec
adc
mov
dec
xor
inc
test
add
cmp
jl
dec
sub
mov
ret
repnz
insb
mov
push
ljmp
movsb
cmpsl
mov
aad
xchg
mov
mov
and
xor
pop
push
out
push
gs
decb
sub
ljmp
pop
sub
mov
icebp
sub
sbb
pop
mov
mov
sti
lahf
push
stc
ljmp
ja
mov
ds
cmc
cmp
mulb
jge
or
xchg
mov
icebp
jmp
adc
push
push
sub
addr16
aaa
jl
aaa
pop
xor
das
dec
jp
dec
movb
mov
rcr
ret
fdiv
or
sub
dec
push
movsl
mov
dec
popa
fmull
mov
enter
sti
lret
stos
in
fdivrl
xchg
stos
int
insl
or
imul
pop
fdivr
pop
jmp
xor
fcom
bound
mov
mov
xor
sbb
mov
pop
fidivs
xchg
shlb
lret
pop
outsb
in
imul
adc
or
cmp
out
fsubr
sbbl
aas
lds
add
xchg
cmp
movl
xchg
in
mov
push
inc
arpl
xor
mov
std
fdivrp
mov
inc
xchg
sbb
mov
fcomps
dec
jle
loopne
imul
mov
and
movb
xor
out
add
scas
in
leave
sbb
cmp
ret
xchg
fsts
sarl
and
out
adc
sub
push
add
cmp
cmp
fs
mov
out
rorl
repnz
inc
inc
lret
adc
mov
das
sbb
ret
outsb
add
insb
imul
mov
cli
jnp
pop
gs
std
dec
fxtract
enter
popa
cltd
push
inc
adc
fimull
pop
xchg
daa
in
loop
jns
jnp
movsl
push
mov
mov
mov
sub
add
sub
mov
imul
jns
enter
std
or
and
filds
in
inc
and
push
xchg
cmp
push
inc
ds
or
pop
adc
nop
test
pop
push
xor
jmp
dec
push
jnp
mov
inc
orb
inc
jne
roll
cmp
push
shll
js
xchg
add
inc
in
pop
movd
add
rclb
test
jmp
test
mov
je
call
mov
xchg
addr16
jbe
mov
fsubr
push
imul
inc
xor
sahf
insl
notl
scas
xor
sub
xchg
popa
mov
adc
xor
shlb
cli
and
fiaddl
push
mov
hlt
jle
add
nop
lds
xor
ret
xlat
test
adc
roll
lock
and
inc
xchg
mov
and
mov
pop
inc
pop
inc
push
add
push
sbb
and
in
xor
xor
mov
mov
adc
xor
or
movsl
push
lods
std
mov
in
pushf
gs
stc
mov
mov
xchg
bound
lods
mov
push
mov
negb
imul
rorb
mov
xor
add
inc
subl
push
das
pop
stos
xchg
aad
cld
and
cltd
cs
push
mov
lock
or
inc
or
sar
add
icebp
js
loop
pop
and
adc
pusha
xor
cmp
inc
push
sbb
es
or
rclb
stc
loopne
bnd
xor
adc
in
pop
add
jg
jecxz
push
int3
test
sbb
add
test
pop
stc
addr16
mov
shlb
ret
popf
inc
inc
mov
shrb
int3
xchg
sub
addr16
outsl
iret
and
pushf
push
or
mov
cld
mov
mov
and
loop
popf
out
cmpsl
add
pusha
cmp
dec
inc
shrl
in
push
out
aad
mov
jno
into
fdivr
mov
sarl
jmp
push
mov
cmp
leave
jmp
sahf
xor
jl
lret
out
pop
lea
lds
repnz
imul
hlt
movsb
adc
addl
mov
pop
incl
mov
mov
mov
imul
xchg
mov
gs
in
cli
jmp
lret
add
dec
mov
stos
es
scas
push
pop
xchg
es
jbe
fs
aad
cwtl
mov
sub
cmc
or
stc
add
inc
inc
aad
dec
stos
xor
int3
jb
in
es
ds
movb
mov
lcall
nop
repnz
aas
shll
sbb
outsb
out
push
sarb
mov
dec
inc
jno
mov
loope
cmp
push
mov
in
and
rolb
mov
fsub
pop
xchg
push
xor
repnz
push
add
lret
inc
imul
mov
xchg
int
lret
pop
mov
test
mov
jnp
loopne
xchg
cmp
and
out
push
mov
paddq
dec
jp
push
push
orb
mov
ror
imul
out
in
jg
imul
je
insb
out
fsub
sar
cld
sub
pusha
pushf
lret
push
loope
leave
je
sub
jecxz
xchg
add
js
fiaddl
jno
jnp
jp
mov
imul
ljmp
jge
jnp
pop
dec
xchg
inc
sbb
push
push
lock
mov
shll
scas
xchg
sahf
fwait
popf
xor
in
cmpsl
jmp
mov
adc
int3
imul
pop
orl
mov
test
scas
inc
data16
mov
add
testl
xchg
add
dec
add
fiaddl
and
and
loopne
xor
and
outsl
dec
mov
mulb
add
mov
enter
loopne
popa
bound
stc
sbb
out
jns
test
mov
clc
mov
popa
pop
or
and
xchg
jo
inc
jnp
test
pop
xor
xchg
orl
mov
mov
pop
cltd
add
jecxz
jae
sti
dec
sbb
jp
daa
adc
adc
sbb
and
repz
popf
cwtl
fmull
leave
nop
mulb
mov
loop
xchg
jmp
cmp
test
fcom
imul
sarb
mov
pop
jl
lock
ljmp
call
push
scas
lds
pop
push
pop
mov
jno
push
fcomi
repz
mov
mov
call
cld
add
dec
mov
or
xor
add
sbb
jl
insb
out
in
sbb
or
daa
loope
pop
inc
add
in
lret
push
pop
cltd
mov
aaa
std
fiaddl
pop
dec
dec
sahf
out
out
inc
loop
out
fsts
mov
cmp
dec
mov
cmp
inc
mov
push
int3
imull
inc
xchg
mov
and
xchg
jo
enter
sub
push
sbb
push
movsl
add
insb
xchg
mov
dec
xchg
cmpb
roll
popf
test
mov
xor
fildl
movl
stc
xchg
jp
add
mov
jge
xchg
mov
or
cltd
adc
sub
push
int3
push
adc
jle
mov
xor
addr16
fldenv
loope
notb
jp
jl
and
add
add
inc
jnp
push
sbbl
int3
jbe
gs
push
mov
iret
mov
inc
fwait
dec
xchg
fbld
sti
mov
or
push
lds
mov
xchg
and
loop
cmp
mov
push
movl
fwait
mov
ss
and
xor
mov
lods
inc
push
mov
pop
sbb
cmp
pop
ss
xchg
xchg
ja
pop
rol
and
enter
cs
push
jbe
sub
pop
loope
nop
adc
lret
inc
mov
loopne
fmull
xchg
pop
or
inc
cltd
dec
aas
les
push
dec
test
aam
lods
data16
mov
shlb
in
mov
and
dec
pop
mov
push
movsl
mov
xor
dec
sbbl
cmpl
lods
pop
js
cmp
push
ja
cmpsb
jno
pop
inc
pop
outsb
outsb
ds
xchg
jg
orl
orps
ret
push
push
pop
inc
and
lods
xchg
fsubrl
scas
ss
mov
xchg
ja
mov
cmp
sarl
inc
pusha
jg
jne
push
and
jmp
lds
cmp
lods
ds
xlat
js
pop
repnz
clc
xlat
ljmp
in
not
adc
cmp
or
in
in
xchg
ret
rolb
push
popf
cli
test
insl
dec
sahf
ret
add
jo
enter
and
pop
and
jno
jle
ja
adc
xor
dec
lahf
pop
dec
movsb
data16
pushf
testl
int3
in
pop
push
add
jbe
fiadds
cmpsb
mov
std
jae
xchg
cmpsl
pop
iret
xchg
js
lods
gs
jb
lds
in
clc
xor
ret
and
leave
xchg
ficoml
scas
daa
test
xchg
int3
test
stos
cmc
sub
mov
xor
shrl
js
lret
dec
push
add
rcrl
repnz
pop
lock
inc
cmp
cmp
push
xchg
cmpsl
sti
hlt
mov
int
mov
cmp
jl
mov
cmp
sbb
push
push
jae
sbb
dec
lea
xor
lret
shll
sbb
or
xchg
int3
dec
inc
push
sbb
cmp
sbb
je
out
popf
pop
or
movsb
inc
cwtl
ss
or
les
cwtl
mov
mov
pusha
mov
or
push
cmp
or
push
inc
les
pop
es
das
mov
jnp
push
sti
pop
and
negl
inc
sub
stos
sbb
push
std
jns
inc
pushf
add
jne
mov
inc
jns
jp
fs
add
ret
movsb
out
and
dec
cmp
mov
loope
ret
fisttpll
sbb
mov
into
loop
push
addr16
pop
int3
ds
sub
pop
jae
and
out
enter
test
popa
mov
out
cmp
cmp
sbb
in
lcall
jl
xor
pop
pop
xchg
mov
aam
test
jl
mov
inc
add
or
shl
ret
push
loope
cmp
inc
mov
mov
add
add
lods
mov
xchg
push
testl
mov
jnp
insb
cmpsb
sbb
dec
pop
sbb
outsl
outsl
scas
mov
ds
ret
cli
fimuls
push
mov
xchg
cs
jle
pop
les
fwait
pop
nop
sub
mov
sahf
pop
cmp
push
out
popa
add
push
scas
adc
adc
jnp
lock
idiv
or
test
lods
shlb
mov
inc
sub
jno
aas
outsl
pop
sbb
jp
arpl
in
xchg
test
sbb
pop
ret
jbe
sub
cmp
icebp
mov
movsb
aas
inc
or
shrb
mov
in
cmpsb
in
ds
mov
adcb
in
sbb
mov
in
mov
call
mov
add
mov
jle
mov
pop
push
sbb
loopne
stos
imul
sub
xlat
mov
sahf
pop
cli
push
mov
dec
mov
decl
sbb
enter
pop
and
sub
repnz
mov
inc
pop
dec
adc
pop
inc
or
mulb
xchg
xor
add
neg
pop
imul
lretw
das
add
or
xorl
stc
push
push
inc
push
mov
jecxz
icebp
fcmovu
loop
cs
mov
push
xchg
mov
stos
int
aas
das
and
mov
ss
mov
nop
mov
data16
push
je
xor
add
or
dec
or
mov
mov
add
mov
xchg
sub
mov
add
out
xor
mov
shl
out
sbb
xchg
mov
lcall
cltd
push
jne
dec
cmp
imul
xor
inc
xor
rcll
aam
xchg
lods
iret
pop
push
loop
out
xchg
inc
popa
mov
xchg
arpl
dec
sbb
jge
js
jmp
mov
sbb
adc
scas
inc
notl
sub
test
pusha
xchg
xchg
mov
xchg
push
ds
fucom
cmc
cmp
fisttpll
loope
jne
bound
adc
cmp
mov
push
sub
pop
push
aas
xor
or
xor
leave
js
out
cmp
cmpsb
out
test
or
sub
call
or
fs
stos
or
aad
dec
sbb
loop
stos
test
jne
mov
adc
mov
scas
adc
fsubrl
sarb
into
pop
xchg
mov
push
xor
mov
test
mov
jmp
dec
scas
dec
pop
insb
pop
pop
imul
fsubrs
add
in
mov
rorl
test
cmp
ljmp
ret
lcall
push
repz
call
dec
jno
inc
mov
in
shll
aaa
fldenv
or
scas
rcrb
mov
cmpsl
xor
leave
je
push
arpl
aas
cs
cltd
mov
or
mov
movzwl
call
inc
dec
nop
pusha
mov
in
or
add
jl
lahf
add
mov
xlat
stc
xchg
pop
movsl
add
adc
and
and
scas
ljmp
mov
mov
push
or
xor
rcl
pop
adc
sti
cmp
in
lods
mov
pop
push
inc
and
lahf
ljmp
sbb
test
in
or
add
mov
div
arpl
inc
xor
pop
movsl
std
aas
jae
arpl
and
outsl
add
adc
bound
iret
in
mov
popf
or
push
dec
jnp
ret
popf
xor
xor
cmp
xor
xor
sbb
test
imul
mov
das
dec
cld
mov
push
shlb
jne
mov
das
push
mov
mov
xchg
imul
mov
mov
aad
mov
movsl
jmp
insl
and
inc
cmpsl
and
aaa
mov
je
dec
dec
push
xchg
push
jne
fcoms
lods
pop
insb
push
rcrl
add
insl
je
sub
pop
and
jle
or
movsl
insb
pushl
clc
jmp
lods
lahf
mov
inc
inc
pop
fdivrp
and
inc
fidivrl
decb
cmp
pop
sbb
jge
ljmp
jo
stos
dec
and
and
pop
add
mov
int
test
pop
mov
cmp
jecxz
sub
push
push
mov
add
lea
and
xchg
lds
pop
mov
inc
sub
jnp
ficompl
outsl
shll
shr
lock
ret
and
sbb
jmp
int3
test
lea
cmp
shlb
lock
jg
gs
mov
stos
xchg
xchg
inc
xchg
xchg
inc
pop
ret
adc
arpl
or
xor
fmuls
mov
mov
sub
aas
mov
pop
scas
outsl
out
iret
sbb
xchg
jns
clc
nop
pop
aas
xchg
test
sbb
fisttpl
out
inc
add
mov
dec
popa
fwait
stc
and
or
sub
adc
adc
push
sahf
adc
stos
cmp
mov
cli
popa
inc
and
hlt
hlt
fisttpl
add
lea
repnz
cmc
cwtl
push
xchg
out
mov
fcoms
jb
test
mov
sbb
mov
popa
sub
xorl
fistps
dec
test
popf
pop
mov
cltd
stc
clc
sbb
lcall
sbb
and
or
repz
sub
ret
cmc
or
arpl
leave
sub
out
xor
mov
mov
pop
adc
subb
out
fmul
mov
iret
mov
js
inc
push
call
aad
add
mov
mov
insb
idivb
mov
sub
sarl
add
lds
push
push
xchg
subb
pop
testb
mov
push
shll
js
adc
faddl
pop
add
or
xlat
xor
sub
imul
xchg
frstor
add
sub
loope
pop
scas
mov
xor
pop
iret
push
inc
mov
jle
mov
push
push
inc
cmp
mov
dec
hlt
cmp
dec
insb
push
idiv
js
or
and
inc
popf
pop
push
lea
lock
repnz
enter
nop
mov
push
and
xchg
adc
sti
mov
pop
scas
mov
xchg
test
das
sbb
pop
dec
popf
pop
mov
sarl
jbe
int
out
jp
jp
test
leave
test
nop
add
flds
push
rorl
mov
cmp
pop
jmp
test
aam
enterw
pop
pop
mov
fldt
test
cmp
fldt
stos
pop
pusha
mov
fwait
mov
rclb
add
ljmp
mov
xchg
imul
sub
jbe
or
xlat
dec
fistpl
sbb
add
jmp
in
sbbl
and
adc
jbe
cs
push
sub
lret
gs
push
xchg
inc
mov
pop
mov
push
outsb
mov
out
push
dec
push
xchg
jp
push
lret
es
nop
test
fildll
rcr
jne
sbb
es
lock
jne
inc
in
loope
inc
jbe
out
icebp
out
xchg
mov
lret
xchg
movsb
fcmovnbe
ret
adcl
jle
mov
cmp
mov
pop
ss
fcomp
add
jne
add
sbb
fiaddl
pop
sub
pusha
xchg
add
pushf
mov
cmp
add
adc
sarl
mov
ja
imul
mov
and
dec
ret
enter
add
xchg
hlt
gs
push
leave
sti
mov
cmp
cmovno
movsb
push
sarb
dec
das
setnp
jb
in
dec
ds
add
and
pop
pop
mov
sub
push
xlat
and
ror
or
sbb
jno
jp
jns,pn
cmp
inc
cmpsb
jmp
aas
xor
repnz
push
into
mov
mov
test
andl
sahf
sub
and
jmp
rorb
sar
jns
sarb
stos
lcall
push
lcall
add
leave
out
inc
add
mov
lock
sub
jae
push
or
xor
cmp
mov
imul
pushf
rcr
lret
insb
std
fildl
mov
mov
sbb
inc
add
sbb
mov
cmp
cmp
ret
inc
test
data16
mov
ret
sti
xor
outsb
sub
mov
adc
mov
xchg
mov
and
mov
ret
pop
mov
mov
cmp
stc
inc
mov
adc
fisttpll
in
dec
or
and
scas
jle
xchg
mov
pusha
mov
mov
mov
cmpb
test
and
push
fdivs
mov
stos
pop
pop
in
xorl
outsb
mov
and
or
mov
dec
ret
mov
push
sub
loop
test
imul
mov
mov
xchg
hlt
frstor
xchg
dec
dec
xlat
mov
rcll
out
je
pop
fsts
shlb
in
xor
cmp
xor
psadbw
mov
xchg
push
sbbb
mov
wbinvd
or
scas
out
stc
mov
int3
sahf
mov
test
fldl2e
cmpsb
and
push
push
or
mov
cld
push
add
adc
test
mov
hlt
mov
mov
mov
dec
and
lret
enter
inc
push
insl
fnclex
xor
repnz
loope
rcrb
xchg
or
mov
mov
mov
adc
movsb
sub
mov
repz
wrmsr
popf
aas
insb
cmc
pop
loopne
jne
add
and
cmpsl
dec
mov
and
ljmp
pop
sub
xchg
mov
or
cs
jno
test
xchg
and
mov
cwtl
push
mov
xor
jmp
arpl
sti
mov
jb
xor
add
jo
jno
jmp
jo
into
roll
adc
push
stos
xchg
cmc
inc
mov
adc
or
data16
or
and
cli
fimull
filds
insb
dec
push
shlb
dec
xchg
fcoms
mov
int
int3
mov
popa
movsl
dec
pop
jge
or
fstpl
repnz
ret
or
push
pop
es
js
and
push
dec
aas
loopne
cmp
stc
ljmp
add
or
lods
mov
out
cmp
inc
cmp
xor
jno
mov
mov
es
adc
imul
cmp
adc
jno
aam
clc
xchg
jns
jl
cmp
mov
icebp
lea
ss
aam
cmp
int
inc
jle
ljmp
pop
pop
mov
pop
mov
stc
mov
push
adc
dec
add
pop
movsl
in
into
daa
fcomps
sahf
hlt
pop
pop
enter
add
jg
das
ja
pusha
insl
mov
addr16
icebp
es
dec
inc
stc
and
clc
sbb
mov
inc
aam
orl
xchg
push
cli
test
leave
dec
and
pop
or
jo
push
add
dec
xchg
cmp
int3
mov
int3
mov
push
xor
outsl
pop
pop
jbe
arpl
sbb
imul
bound
test
out
test
xchg
cmp
adc
cwtl
inc
loopne
pop
dec
dec
inc
int3
pop
pushf
adc
mov
pushf
xchg
cld
lcall
and
movsl
mov
maxps
dec
test
enter
ficomps
lods
mov
bound
test
fistpl
cmp
xor
into
and
ja
out
stos
xor
orb
addb
jo
icebp
arpl
jbe
add
ret
movsb
in
daa
adc
cmp
data16
mov
push
or
or
jb
push
aam
xor
jnp
mov
pop
jmp
fmull
in
mov
dec
push
mov
push
jp
pop
cmp
mov
sbb
push
xchg
js
cs
xor
mov
jmp
arpl
in
inc
int3
aas
mov
xor
jno
jp
lar
jge
orb
int3
lcall
sbb
subb
inc
mov
sar
mov
mov
in
mov
cli
mov
fistpl
mov
cltd
mov
mov
cmp
mov
mov
aam
mov
cmpsb
cld
jmp
cmc
cmp
out
test
divl
mul
fmuls
stc
cmp
cmp
into
dec
clc
repnz
ror
sbb
ss
xor
or
scas
les
dec
or
mov
repnz
cmp
in
int
or
es
imul
xchg
popf
str
dec
enter
push
mov
pop
sub
cmp
mov
inc
dec
and
ficompl
sbb
jae
adcb
mov
repz
sbb
inc
jg
jb
popa
add
mov
sarb
lock
lods
mov
and
insl
mov
lcall
fsubrs
aaa
mov
add
add
jl
push
lods
push
les
push
insb
popl
je
cmp
inc
loopne
or
insl
add
mov
mov
es
fstpt
popa
cmp
outsl
xor
outsl
mov
push
adc
cmpsl
into
popa
sub
popf
jle
sub
cmp
dec
jb
fwait
adc
jle
cmp
sarb
mov
icebp
dec
stc
inc
lahf
div
dec
cwtl
kaddb
xchg
push
leave
add
negb
sub
mov
movsb
test
lods
mov
cmpb
adc
xchg
shrl
outsb
icebp
jmp
inc
aam
gs
jmp
ds
lds
sub
mov
fidivs
sub
insl
sbb
sbb
enter
mov
dec
daa
stc
inc
push
mov
repnz
jecxz
add
cmp
lock
aaa
cld
fwait
mov
mov
add
je
cmp
jle
xchg
bound
pop
jmp
jbe
out
adc
inc
test
stos
fwait
and
dec
rorb
ficompl
fstpl
lea
outsl
pop
adc
test
pop
std
inc
mov
and
sub
mov
jbe
inc
sbb
push
jge
lret
fcomip
icebp
in
mov
adc
mov
es
mov
mov
nop
imul
inc
mov
mulb
call
test
cmp
into
push
in
jns
add
scas
add
in
negb
mov
in
pop
cmp
mov
and
js
adc
jecxz
or
jbe
jg
sbb
movsl
divb
jl
push
cmp
sbb
xor
cmp
sbb
lahf
sub
adc
mov
lock
leave
neg
pop
repnz
inc
mov
dec
sbb
or
push
sbb
repz
je
or
jne
jp
int
sti
in
pop
cmp
into
xlat
push
mov
gs
cmp
cmpsb
test
sar
lahf
or
iret
xchg
cltd
std
mov
in
repnz
in
testb
adc
push
aaa
inc
cmc
lds
mov
inc
lahf
fbstp
pop
push
popf
xchg
int3
pop
dec
pop
sub
mov
dec
jnp
dec
popa
jecxz
mov
mov
dec
jge
xor
or
gs
les
adc
and
test
push
lea
jp
mov
xchg
mov
jnp
mov
xor
mov
inc
lret
lods
shlb
mov
call
jle
fsubrl
cmp
add
ja
cmp
addl
mov
push
fmull
push
sarb
and
sub
push
adc
mov
es
shl
lahf
jae
add
xor
fstl
push
call
js
test
jnp
push
clc
hlt
aad
pop
movsl
fadds
lods
adc
jno
mov
jle
sbb
imul
pop
repz
ret
cltd
inc
icebp
mov
xchg
inc
or
sbb
loope
pop
mov
shlb
in
mov
cmp
mov
jns
mov
stos
das
sbb
or
lret
into
jns
into
pop
mov
xchg
mov
inc
imul
push
movb
mov
insl
or
cmp
dec
push
push
fsubs
mov
popa
cmp
sbb
fistps
ss
ljmp
je
test
inc
aam
jns
adc
gs
and
pop
cmpl
sbb
inc
pop
and
repnz
test
mov
fldl2t
lods
lret
or
addb
cmp
or
fcomps
and
fsubs
add
movsb
movsl
rclb
and
sub
in
jns
cwtl
popa
mov
pop
push
sbb
vmwrite
ljmp
cmp
outsl
lret
mov
dec
adc
test
sahf
aad
xchg
push
movsb
xchg
pop
adc
aaa
add
ret
in
cmp
aam
or
pop
mov
pop
mov
add
sbb
jle
pop
subl
loopne
fwait
mov
ds
stc
push
stos
push
lods
push
push
xchg
in
notl
sub
repnz
sbb
dec
pop
add
pop
xor
mov
mov
sub
out
mov
mov
and
inc
xor
stos
mov
idiv
fsubrl
fwait
lcall
sbb
adc
xlat
jecxz
jmp
inc
or
mov
lcall
mov
push
add
pop
mov
sti
and
dec
outsl
jnp
mov
nop
enter
xchg
pop
xchg
xlat
repnz
inc
or
pop
cmpsb
push
insb
js
add
gs
mov
repnz
sub
mov
mov
mov
jno
adc
pop
fidivl
pop
and
cmpsl
ret
leave
adc
sti
fwait
mov
testb
shl
dec
popf
popa
int3
popf
adc
in
dec
push
test
and
rcr
xor
sbb
movsb
arpl
ret
ret
fsub
movl
or
xor
ljmp
in
inc
sub
and
sti
popf
pop
inc
jp
jg
cli
repz
sub
and
inc
mov
sub
xor
jno
xor
mov
adc
xorb
sbb
ret
xor
jae
adc
fwait
stos
jb
enter
popf
or
jecxz
cmp
adc
subb
out
push
out
and
adc
jle
je
and
pop
cltd
test
mov
mov
jecxz
clc
lret
sbb
scas
jno
nop
or
xchg
push
ret
xor
shrl
lods
loop
cmpsb
test
sub
push
cmpl
push
in
mov
and
pushf
pop
aas
imul
cli
and
decb
inc
lock
and
and
push
pop
mov
sub
out
jbe
adc
mov
pop
pop
pop
test
testb
out
cmp
fdivs
cmc
push
mov
mov
aam
xchg
sarl
pop
pusha
pop
sub
add
xchg
jmp
mov
sub
mov
addl
sbb
mov
mul
rcrl
xchg
movsb
repnz
mov
cmp
ds
aad
cld
ret
scas
ljmp
jg
rorb
pushl
mov
sub
sbbl
ret
mov
jg
cmpsb
sub
pusha
enter
bound
mov
popa
in
dec
sbb
push
cmp
iret
mov
push
cmpsb
push
cmp
mov
rorl
lock
or
outsb
dec
adc
test
adc
cmp
xor
mov
adc
mov
xor
sub
gs
push
out
arpl
sbb
jnp
xor
mov
pop
xor
pop
das
cld
and
mov
inc
mov
xor
add
enter
and
int
ficoms
cmp
mov
in
xchg
dec
mov
enter
xchg
daa
push
out
or
popa
and
imul
int3
cwtl
das
clc
das
xor
inc
cmpsb
shll
xchg
fcmovnb
out
push
iret
or
sbb
add
roll
cmpsb
pushf
dec
mov
test
inc
adc
popf
les
lods
test
lock
jp
test
stos
sahf
sub
cmp
adc
or
jp
pop
sbbb
sahf
cmp
pop
hlt
repnz
sub
pop
divb
push
inc
inc
push
out
and
lods
incl
mov
sbb
pop
push
jecxz
cmp
push
subl
jbe
xor
jecxz
mov
cmp
and
pop
xchg
or
clc
cmp
fdivrl
or
xchg
lock
scas
jns
repz
aad
adc
aas
ds
xchg
jns
mov
xchg
dec
mov
mov
and
mov
mov
bnd
int
add
xchg
shrb
subb
mov
adc
push
adc
pop
std
xchg
je
lea
cs
fnstenv
add
mov
hlt
insb
ss
mov
lret
xor
pop
and
push
cwtl
test
push
ljmp
mov
mov
aad
inc
outsl
cmp
ja
cli
pop
test
pop
and
lods
nop
mov
mov
xchg
outsl
push
adc
stos
sbb
mov
punpckhbw
stos
data16
pop
sahf
outsb
ret
pop
sbb
dec
inc
or
jmp
js
fisubl
call
les
push
call
enter
add
mov
stos
inc
ret
out
add
mov
call
ds
mov
out
push
pop
xchg
push
stos
fistpl
cld
inc
xor
or
jge
clc
push
add
lods
imul
in
cmpsl
inc
add
mov
repz
lcall
xchg
xor
outsb
push
pop
test
in
pop
adc
out
fneni(8087
mov
orl
aad
sub
faddl
lret
mov
sub
dec
fwait
das
jns
or
mov
xchg
sub
out
rolb
popa
cld
lock
inc
shrb
and
xchg
rcr
repnz
test
mov
leave
call
jecxz
xor
sbb
pop
loop
dec
les
call
pop
enter
dec
pop
arpl
ret
lea
xor
aas
stc
push
xchg
loope
lret
ss
dec
xchg
mov
sbb
out
leave
pusha
xor
adc
lds
mov
jg
pop
rcll
loop,pt
xor
mov
add
jecxz
or
jg
call
fcompl
push
cmp
call
ja
test
mov
push
insb
scas
bound
mov
jle
cmp
cmp
insb
sub
outsl
lret
add
sbb
push
hlt
fwait
fwait
xor
rclb
popl
es
sub
add
lds
fidivrs
mov
pushf
cmpsl
js
out
mov
clc
loop
dec
outsb
imul
xor
leave
mov
mov
sbb
test
les
es
and
jbe
movsl
push
or
test
in
das
pop
pop
mov
xor
in
popf
bound
insl
sub
inc
lret
inc
jl
pushf
int
adc
rcl
inc
pop
flds
mov
aad
xor
or
hlt
fildll
adc
aad
test
or
jbe
vunpcklps
sbb
imul
js,pt
cwtl
enter
cmpsb
pop
clc
jecxz
lock
out
mov
ja
dec
mov
fsubrl
and
fists
clc
fcompl
inc
xchg
imul
int3
stos
call
lret
sarb
movsl
clc
adc
imul
pusha
adc
aas
jnp
dec
xchg
push
mov
sub
cwtl
inc
aad
loop
ljmp
sub
in
xor
loopne
scas
movsl
pop
mov
adc
out
mov
push
jmp
aam
fsubr
pop
jmp
xchg
push
dec
or
cwtl
lcall
jl
std
rdmsr
add
xlat
xchg
cmpsl
pop
xchg
mov
push
insl
jne
push
ret
push
add
int
lods
or
js
fbld
movsb
fstl
popa
fwait
fs
lret
cltd
je
adc
cmp
addr16
stos
icebp
in
out
xchg
dec
push
dec
push
addr16
jae
arpl
lods
mov
stos
std
insl
push
cmp
jne
pcmpeqd
xchg
pop
in
cmp
dec
and
mov
or
sub
dec
pusha
dec
sub
pop
sbb
jmp
aad
std
arpl
lods
xchg
cs
stos
mov
mov
xor
pop
inc
lahf
scas
mov
dec
xor
xor
sub
mov
sti
mov
inc
cld
daa
cld
test
push
sbb
jnp
clc
push
xor
xor
ret
xor
push
sbb
add
lea
cmp
pop
ret
xor
loop
call
push
shlb
add
fwait
adc
je
add
and
sbb
add
outsb
ljmp
dec
or
or
aaa
outsl
outsl
fcoml
dec
inc
das
jl
sbb
cltd
inc
jnp
fbstp
outsl
inc
mov
cld
retw
push
or
lock
es
add
cli
mov
mov
dec
scas
dec
ficomps
push
cmp
xchg
sbb
sub
dec
lods
sub
and
neg
inc
xlat
xchg
xor
xor
sbb
mov
inc
inc
xchg
fsubl
fisttpll
inc
xor
mov
adcl
sub
dec
cmp
push
int
cmp
jg
mov
std
inc
gs
push
mov
lcall
cmp
xlat
ret
mov
fisttpl
mov
jns
adc
sub
xlat
pop
add
mov
fists
sub
mov
ds
arpl
xor
lret
mov
push
shll
ja
xchg
inc
ss
xchg
mov
gs
shlb
mov
jg
ja
mov
sti
and
sarb
hlt
xor
jp
adc
cld
dec
sti
adc
fldl
cmpsl
jmp
lods
iret
scas
daa
loope
mov
jg
sub
xchg
shr
mov
sbb
outsl
aam
push
mov
xchg
push
mov
cmp
sbb
shll
rcrl
js
or
xchg
insb
mov
aad
cld
psllw
lret
mov
test
gs
cmpsl
fistps
jno
and
pushf
imul
gs
aad
xchg
mov
adc
cmp
sbb
movsb
movsb
stos
mov
or
jae
loop
cwtl
movsl
mov
sbb
xchg
mov
ds
insb
jp
xor
mull
cld
mov
sbb
scas
mov
pop
mov
or
addr16
sbb
lods
cmpsl
enter
popf
xorl
ret
sbb
sbbl
lods
and
pop
outsl
or
loop
negl
adc
fst
fidivs
pop
sub
pop
scas
add
adc
mov
mov
loopne
sub
jecxz
lods
cld
cmp
mov
mov
lock
jnp
jp
xchg
icebp
sub
es
jnp
mov
test
or
call
inc
sub
sbb
outsl
inc
cmp
mov
fmuls
fwait
outsb
mov
fcmove
or
mov
cmp
jmp
shrb
les
cs
or
sti
in
mov
add
pushf
jbe
aam
ret
nop
pop
pop
sbb
jnp
ss
leave
add
arpl
lock
mov
or
pop
movsl
mov
aam
leave
loopne
aam
cwtl
or
cmpsb
cwtl
mov
ljmp
call
push
stos
xchg
std
fnsave
hlt
iret
push
or
sub
mov
lock
jo
jae
mov
roll
add
repz
xor
test
subb
data16
fs
mov
insb
movsb
pop
scas
inc
cltd
aaa
outsb
xchg
dec
mov
sbbl
lret
cs
jmp
adc
mov
mov
pop
or
mov
shll
add
pop
sbb
ret
ret
sbb
cmp
fcmovne
daa
add
insb
arpl
jae
pop
inc
mov
inc
ljmp
scas
aas
ljmp
popf
fucomp
or
ret
pop
movsb
and
dec
push
enter
sahf
jnp
ljmp
pop
add
fistpl
add
out
int3
data16
cmpsl
sbb
je
mov
cmpsl
cmp
in
mov
insb
add
xchg
int3
sbb
out
cmp
aaa
xchg
jmp
mov
pop
fwait
popf
out
lock
pop
pop
fcompl
push
jecxz
xor
in
sub
int
ds
mov
or
arpl
xchg
lahf
les
mov
mov
xchg
pop
xchg
mov
mov
int3
pop
scas
lods
outsb
sbb
jbe
ljmp
nop
mov
lea
dec
xor
sahf
dec
sub
xor
out
mov
sbb
push
and
jns
or
cmp
add
in
xchg
xor
add
and
je
and
push
jno
jnp
or
and
iret
xor
adc
int
rorb
test
sub
cmp
sahf
insb
jae
mov
dec
mov
loop
sbb
gs
pop
cmpsb
pop
jne
sahf
bound
rolb
cli
push
xor
test
movsl
int
sbb
inc
movntq
test
lret
testl
jmp
sub
inc
roll
int
ret
lcall
sbb
cmc
lods
mov
adc
mov
ljmp
cwtl
and
test
int3
add
mov
push
movsl
ljmp
push
mov
mov
pop
pushf
cltd
jge
mov
push
fwait
mov
lock
fnstcw
aas
or
jbe
lcall
dec
addr16
cmp
lock
push
mov
push
inc
test
mov
out
mov
push
bnd
pop
enter
cli
icebp
sub
jno
je
jne,pt
jle
and
orb
es
lods
sar
or
cwtl
ret
dec
sbb
in
stc
movsl
or
push
int
cmp
int3
leave
lods
fcmovb
pop
sbb
dec
mov
gs
cs
lcall
out
xchg
mov
or
movsb
mov
jecxz
cvtps2pd
mov
in
add
or
dec
lret
out
xor
sbb
pushf
sahf
scas
cld
mov
push
jb
jae
push
sub
call
pop
test
pushw
mov
pop
dec
mov
or
outsb
jl
push
cmp
adc
dec
pop
ret
adc
xchg
lret
test
mov
cmc
fldl
imul
fdivrl
dec
or
lods
and
in
test
xchg
jg
jno
and
jne
movsl
lret
cld
in
cld
nop
xchg
and
ficoms
inc
lret
fldpi
push
cmpsl
and
pop
sub
movsb
js
cli
or
fwait
out
sub
pop
jmp
adc
jae
lcall
sub
xor
fcomps
or
or
cmpsb
aas
cwtl
or
pop
cli
fbstp
stos
rcrl
arpl
andb
mov
fadd
out
fcmovnu
inc
idiv
std
shr
das
or
xor
out
jo
cwtl
mov
mov
je
sub
push
push
push
test
xchg
jo
adc
subl
dec
dec
out
clc
inc
popf
test
pop
lcall
popa
push
or
inc
ljmp
lahf
nop
inc
lods
and
repz
popf
lods
cli
or
xchg
and
lret
inc
in
fstpl
sub
pop
lods
and
es
hlt
jg
add
or
jns
mov
lods
cmp
negl
and
in
push
fwait
mov
cld
and
sub
inc
cmp
xchg
subb
mov
mov
lret
push
xor
and
push
push
lock
mov
ret
movl
push
out
xchg
aad
add
out
inc
iret
movsb
sti
sub
xor
outsl
cmp
mov
xchg
sub
inc
mov
or
cwtl
jecxz
push
add
lock
imul
mov
fs
push
ja
sahf
inc
sub
mov
dec
push
sti
sbb
test
mov
fstps
in
js
adc
sub
pop
loopne
dec
negl
out
icebp
mov
mov
rcrl
dec
xor
xor
es
dec
mov
mov
aaa
mov
jo
jno
adc
cmpsl
adc
add
fcomip
stos
jne
test
js
leave
mov
lds
shrb
and
add
nop
mov
mov
aam
js
mov
mov
scas
adc
mov
add
mov
cwtl
mov
cs
adc
inc
pop
pop
ss
addr16
subl
mov
sub
adc
loopne
in
sbb
or
shrb
inc
jno
imul
popa
jge
mov
out
cli
clc
ss
addr16
cwtl
out
movsl
mov
sbbl
push
stos
sti
mov
lea
out
es
sub
mov
jo
das
pop
dec
and
sbb
bound
insb
lods
sbb
mov
cmp
pop
iret
dec
orl
jno
mov
ret
sti
add
mov
or
out
stos
mov
cmpsl
out
fcoml
popa
outsl
insb
mov
ret
jmp
lcall
in
fnstsw
aas
lret
xchg
mov
outsl
pop
test
pop
and
sbb
hlt
hlt
push
lock
ja
or
movsb
and
nop
sub
out
out
jmp
pushf
or
dec
jmp
lock
and
lret
cs
stos
mov
push
adc
xchg
mov
loope
mov
aaa
mov
inc
aam
jno
dec
and
and
in
and
and
aam
lret
loope
xchg
test
inc
inc
xchg
lahf
sub
popf
mov
outsb
leave
mov
int
mov
hlt
insb
rcll
imul
incb
dec
fildl
out
adc
jle
sbbl
mov
fistpll
pop
mov
mov
inc
sub
jb
mov
push
adc
cmp
fisubs
jecxz
test
dec
and
out
push
arpl
inc
xchg
add
inc
lds
xor
xchg
sub
xchg
mov
or
leave
dec
dec
or
mov
inc
outsb
sbb
sub
dec
test
cwtl
adc
hlt
loope
or
pop
xor
dec
es
movsl
ja
ret
and
loop
cltd
lds
pop
cmp
leave
repz
movsl
cltd
sbbb
mov
inc
and
mov
push
mov
jp
bound
addb
jnp
xor
jbe
stos
fnstcw
cmp
and
pusha
mov
call
icebp
and
lret
or
add
dec
jnp
js
cmp
out
test
xchg
movsl
in
shll
push
outsl
notl
pop
mov
add
call
fimuls
ss
lcall
adc
push
mov
xlat
xchg
jge
ret
lret
in
fbstp
ja
cmpsb
testl
xlat
add
pop
adc
mov
mov
mov
rcl
cmc
out
outsl
and
inc
cmp
jecxz
icebp
pop
jnp
sub
mov
aad
js
stos
and
cmp
xchg
lret
jne
or
lods
jno
bound
or
mov
cmp
sub
dec
loop
sub
sub
daa
push
adc
hlt
xchg
int3
data16
add
push
or
inc
adc
or
mov
xchg
pushf
dec
ss
pop
adc
inc
aam
push
xor
incl
shr
push
movsl
lret
push
xchg
or
push
cmp
mov
xor
mov
inc
int3
in
jge
ds
mov
rorl
ja
add
sbb
ss
cwtl
cmp
xchg
repnz
repnz
mov
ret
outsl
cmp
cmp
mov
or
jl
sub
leave
pop
lahf
mov
add
popf
cmpb
cmp
mov
cmp
add
and
outsb
stos
adc
or
add
mov
mov
test
push
subb
mov
scas
pop
stc
xor
pop
fisttpll
pop
lods
sub
pop
rolb
pop
cmp
push
popf
dec
xor
movsb
arpl
add
dec
fcompl
out
lret
xor
pop
into
test
or
mov
push
sbb
fdivrs
andb
aas
outsb
mov
inc
cmpsb
and
jnp
shrb
in
fbstp
adc
lods
fstps
clc
mov
pop
push
mov
imul
inc
xlat
gs
test
mov
push
sub
jne
arpl
cmp
decb
add
lods
jbe
lret
push
push
xchg
bound
pushf
fs
enter
jne
movsb
push
mov
push
mov
inc
xor
jns
xchg
jmp
jecxz
loope
push
sub
inc
sbb
fdivrl
icebp
pop
sub
dec
pop
stc
mov
lock
push
pop
pop
inc
push
lods
popa
mov
cs
cmpxchg
jnp
sub
sbb
jecxz
xchg
cltd
lds
filds
push
sub
sub
xor
jo
sahf
sbb
stc
mov
jae
pop
and
adc
mov
sbb
movsb
and
adc
xor
es
call
dec
inc
mov
pop
jle
adc
sub
sbb
adc
mov
jno
sub
inc
std
push
orl
lret
sub
xor
xchg
add
cmp
xchg
add
push
fisttps
dec
xchg
and
lret
lds
bound
jae
cmc
jae
sbb
das
inc
add
les
inc
dec
into
inc
mov
xchg
jge
aad
push
add
sub
inc
das
cmp
ret
push
push
test
sub
aad
insb
xchg
ja
ret
pop
aad
into
and
add
pusha
xor
or
call
mov
out
or
push
cwtl
mov
xlat
data16
xchg
mov
testl
outsl
push
mov
or
popf
mov
mov
popf
sub
flds
xor
jle
loop
dec
andl
fisubs
movsl
lret
std
push
cmp
xor
pop
fldl
xor
lock
adc
lahf
in
pop
icebp
mov
cmp
cmpsl
xchg
gs
jecxz
xchg
sbb
ja
and
mov
movsb
testb
jecxz
das
add
outsb
adc
popa
jecxz
arpl
sub
nop
gs
dec
add
pop
push
and
pop
inc
ss
jmp
sub
sub
xchg
xor
pop
fs
pop
out
jne
loop
cmp
xchg
mov
lret
mov
sub
jne
sbb
sbb
adc
fisttpll
xor
pop
pop
and
clc
jmp
mov
icebp
aas
insb
push
lock
add
cmp
rcll
imul
push
aaa
jnp
ss
lods
ss
imul
lds
out
and
fdivr
xchg
mull
sysret
loopne
fbld
push
dec
mov
test
popf
aam
mov
rol
jmp
cmp
ret
fmuls
lret
test
shlb
and
in
addr16
gs
cmp
xlat
sbb
std
hlt
les
xlat
mov
je
mov
adc
jmp
aas
jns
cmc
sub
jb
mov
cwtl
push
maskmovq
notl
add
xor
pop
in
or
data16
out
fstpt
jmp
mov
scas
add
and
dec
fwait
cmp
xor
push
subl
pop
lock
rorl
aad
mov
cmp
shlb
add
jp
imul
sub
sar
enter
fstpt
les
aas
mov
inc
into
xchg
dec
addb
ret
or
outsl
lret
sbb
stos
lods
repz
rorl
scas
jb
push
out
or
mov
mov
dec
cwtl
mov
lret
popf
fdivrs
dec
sarl
mov
cmpsb
repnz
pop
mov
xor
jge
sub
sbb
pop
stos
cli
mov
pop
inc
xchg
loopne
unpcklps
and
mov
addb
jo
hlt
push
ret
mov
mov
xor
stc
inc
shll
cmpsb
loop
dec
pop
ffree
jge
pusha
inc
mov
cmp
movntq
shlb
sbb
roll
jg
or
popa
and
or
iret
and
xchg
fwait
xchg
pop
adc
mov
sbb
imul
and
inc
fucomp
lahf
mul
stos
negl
cld
inc
inc
jmp
lret
sbb
inc
stos
mov
or
cmp
js
cmp
mov
enter
pop
fldenv
sub
fstps
dec
loope
push
pop
sub
adc
mov
shlb
xchg
int
pop
xchg
fistpll
mov
ja
hlt
cmp
push
xor
shll
test
mov
shrl
aaa
sbb
xchg
repz
push
mov
arpl
cmp
ds
sbb
fwait
rcrb
mov
and
clc
add
fnstcw
std
mov
jne
leave
in
xor
inc
inc
in
mov
arpl
bound
push
mov
int
rcll
hlt
imul
ficomps
outsl
ds
ficoms
pop
pop
push
sub
pop
in
mov
out
je
loop
into
in
mov
out
push
in
clc
mov
adc
xor
loope
and
daa
mov
mov
mov
dec
dec
pop
insb
pop
pop
mov
mov
std
mov
sbb
dec
les
mov
push
dec
fstpt
test
adc
jne
mov
ds
nop
fsincos
in
sti
jb
cli
sbb
jge
fisttpll
push
mov
test
lret
lret
ljmp
rdmsr
mov
call
push
and
mov
inc
imul
outsl
rol
repnz
outsl
add
jecxz
sbbl
mov
or
adc
imul
or
out
jnp
enter
push
jo
test
cmp
icebp
sub
pusha
jle
add
jbe
adc
mov
inc
clc
testb
push
pop
popa
popa
into
std
push
fisttpll
into
xchg
xor
fidivs
add
or
dec
mov
and
mov
stc
repnz
in
mov
ds
fidivrs
or
cmp
lods
iret
mov
rolb
scas
cmp
and
sbbl
pusha
iret
and
repz
lcall
and
xor
xchg
int3
in
iret
icebp
jae
insl
test
lahf
testl
stos
aad
in
stos
jge
aam
or
mov
insb
cmp
call
scas
icebp
and
xlat
adc
in
test
fnstenv
sbb
mov
jo
pop
adc
mov
fimull
pushf
add
iret
cld
sub
push
mov
lds
add
or
call
mov
into
xor
aaa
mov
inc
xorl
dec
out
cmp
movsb
bound
cmp
mov
into
data16
clc
xchg
add
frstor
jbe
adc
inc
testl
or
and
push
jle
je
xchg
lods
push
jb
dec
shll
mov
cmp
movsb
xchg
shlb
scas
jmp
aam
int
js
cmp
or
push
cmc
mov
mov
and
outsb
mov
out
int
pop
pop
xchg
dec
call
jo,pn
repz
sbb
pop
xor
or
push
jmp
repnz
and
pop
jecxz
mov
aam
xor
popa
les
xor
fcomps
push
sbb
or
add
sbb
int3
xchg
pop
pop
lret
movsl
pop
movsb
sub
xchg
pop
pusha
cmp
sbb
ror
js
fwait
and
pop
sti
cwtl
insl
cmp
popf
sbb
jecxz
sbbl
pop
fisubrl
loopne
push
out
dec
inc
cwtl
cltd
popa
push
push
pop
adc
out
lret
outsl
adc
mov
adcl
jmp
repz
mov
mov
loope
and
xor
sbb
insl
ss
in
xor
dec
add
scas
sbb
xchg
xchg
cmp
or
xor
out
xor
fildll
je
inc
cmc
adc
mov
dec
insl
and
sub
shlb
mov
into
inc
rol
fmuls
inc
imull
adc
pop
xchg
jp
out
insl
push
jns
test
mov
fidivrs
adc
ljmp
jmp
xchg
push
or
mov
pushl
lods
clc
ror
mov
loope
popf
jmp
push
outsb
daa
and
adc
mov
outsb
mov
call
movsl
cmpsb
dec
adc
jb
jl
pop
movsb
in
adc
ror
inc
push
sahf
xchg
ss
mov
and
xorb
jp
xlat
out
sub
mov
sbb
nop
mov
fwait
xchg
mov
xor
movsl
adc
cmp
enter
mov
movsb
inc
divl
pop
dec
adc
in
sub
ror
nop
addr16
in
push
xchg
push
and
je
push
xor
mov
adc
mov
sub
daa
adc
mov
dec
imul
cs
or
inc
ds
inc
xor
arpl
ss
mov
or
xor
iret
mov
pop
sub
lds
or
int3
test
pop
in
mov
repz
dec
leave
lret
jbe
push
data16
mov
sbb
stos
insl
or
inc
xchg
lcall
sub
scas
cmp
mov
sub
fwait
sub
inc
push
xor
imul
push
aaa
loop
test
fwait
mov
inc
outsl
or
xchg
pop
fcoms
test
pushf
and
lock
jle
aaa
das
scas
jb
shlb
jl
test
xor
sub
add
ljmp
cmpsl
jbe
inc
lea
bound
lcall
sarl
or
out
and
ja
push
lock
cmp
mov
inc
xchg
gs
jb
enter
popf
cmc
in
jg
enter
scas
xor
and
xchg
das
jbe
push
mov
inc
cmp
adc
int
and
jl
lahf
or
pop
movsb
and
xor
fs
dec
cld
movsl
xchg
and
pop
daa
mov
push
loopne
sbb
movb
and
pop
mov
jae
int3
adcl
dec
scas
sbb
lods
das
rorb
out
rorl
or
push
sbb
rol
cmpsw
sbb
cmp
in
subl
fadd
cld
sbb
mov
mov
push
mov
shll
cmp
in
aam
dec
sub
cld
popa
inc
push
pop
jecxz
fstl
inc
jmp
dec
cmc
mov
aam
in
or
jle
dec
je
jp
rclb
movb
and
xor
dec
jbe
pop
cwtl
push
call
xchg
aad
rcrl
mov
jns
inc
test
inc
in
mov
jbe
add
sar
int
mov
call
nop
or
adc
fcoml
daa
jg
push
and
ja
es
and
cmp
lcall
lcall
out
ret
addr16
cmpsb
daa
mov
or
push
test
es
insb
fcmovu
nop
sub
movsl
push
sti
mov
ss
xor
loopne
pusha
pop
sub
repz
mov
mov
in
mov
pop
int3
cmc
add
jbe
push
sub
addr16
mov
add
clc
dec
push
push
jnp
shll
lret
or
sub
cltd
cmp
push
in
out
pop
adc
sub
aad
inc
push
scas
fnsave
scas
stc
in
leave
cmpsl
insl
icebp
jg
push
fidivs
fisubl
cmp
movsl
sbb
pop
mov
jne
or
jmp
adcb
out
mov
mov
cld
hlt
jl
dec
adc
andb
insb
xor
into
test
scas
insl
out
fcompl
repz
pushf
push
popf
jge
sbb
push
clc
out
or
inc
fcoml
fmull
js
sub
pop
pop
push
je
push
popf
push
inc
iret
inc
addb
lret
dec
std
cmc
add
scas
mov
std
fimuls
mov
xchg
adc
aaa
sbb
in
popa
ret
or
lds
inc
jge
jg
stos
inc
or
or
push
out
ljmp
mov
imul
out
mov
push
test
or
xchg
clc
adc
ljmp
push
filds
cmc
nop
adc
cmp
aam
les
mov
mov
fs
lahf
and
fimuls
scas
and
push
lahf
or
pop
test
inc
lds
pop
and
add
lret
xchg
xor
mov
jecxz
mov
mov
loope
psubq
fwait
insb
nop
fs
insb
fs
xor
jmp
mov
sbb
adc
test
in
pop
test
icebp
sub
pop
jle
jnp
inc
adc
adc
jmp
xlat
pop
sub
inc
cwtl
fisttpll
cmp
add
daa
mov
sti
dec
inc
out
iret
mov
cwtl
or
and
pushf
add
mov
mov
xchg
xchg
daa
dec
out
xor
cltd
mov
cli
scas
js
inc
js
mov
push
leave
xlat
push
sbb
add
rol
aaa
xlat
dec
cmp
pop
adc
aaa
mov
sbb
pop
negl
pop
in
xchg
push
sub
cli
mov
das
test
movsl
add
pop
aas
test
sub
dec
sub
jle
testb
int
test
lods
stos
dec
mov
jp
fsubrs
xor
cltd
fildl
mov
pusha
clc
mov
cmc
mov
ds
loop
mov
ret
fcmove
dec
sbb
jge
xor
adc
cwtl
repz
cld
int3
inc
mov
or
les
and
out
mov
fs
and
repz
sbb
and
hlt
fwait
cli
popf
lret
sbb
push
mov
xchg
call
mov
or
scas
and
push
aaa
mov
jno
dec
dec
pop
loop
test
mov
std
test
jo
xchg
inc
fwait
outsl
adcl
cmp
movsb
xchg
mov
mov
dec
push
jge
dec
sbb
or
add
popa
jnp
mov
push
inc
xchg
push
test
mov
stos
push
sub
mov
sub
inc
outsl
jns
push
in
inc
pop
or
stos
sbb
pop
fwait
call
xor
mov
mov
call
or
test
shlb
cmpsl
subb
outsl
fisubs
fs
mov
and
add
mov
mov
fdivl
lret
mov
mov
lcall
xchg
ret
add
xchg
mov
addr16
insb
mov
repnz
cmc
lret
or
stc
scas
pop
inc
imul
bound
lds
mov
cmp
or
cmpsb
call
sbb
mov
out
and
out
xchg
in
push
or
mov
jno
adc
clc
stos
in
push
dec
loope
jge
jne
lds
push
and
xchg
cmp
ds
rolb
add
pop
dec
xchg
adc
add
cmp
movsb
pop
cmpsb
out
arpl
out
pop
pop
pusha
xchg
jns
js
sarl
mov
sbb
inc
arpl
cmpsl
fisubl
shrb
jge
mov
mov
insl
cmp
adc
xor
data16
in
add
inc
sub
loopne
and
and
pop
mov
or
or
mov
out
xchg
mov
daa
sub
leave
or
mov
sbb
push
cmp
cmpsb
xor
add
leave
mov
iret
cmpsb
xchg
lahf
pop
mov
cmp
lret
push
sbb
push
fistps
lcall
in
pop
roll
add
jbe
inc
or
adc
jb
adc
pop
mov
xchg
jne
les
xchg
xchg
and
sub
push
jg
imul
rcr
movsb
xchg
mov
fldt
imull
jle
lds
sbbl
fcoml
es
adc
and
addr16
xchg
sub
or
into
sub
inc
fs
shll
sahf
popf
mov
push
push
jmp
push
nop
sbb
or
mov
xor
das
inc
pop
jno
in
mov
js
enter
pushf
adc
xchg
loopne
rcll
fcoms
xchg
xor
mov
sti
dec
xchg
rcl
cld
popa
mov
mov
and
int3
repnz
mov
sbb
lods
mov
loope
xlat
sbbb
inc
xchg
lock
leave
inc
lods
inc
pop
mov
pop
or
push
call
jns
or
daa
push
sar
mov
adc
stos
call
jp
mov
cltd
push
jb
hlt
fucomp
scas
out
dec
fsubs
decl
cltd
xchg
or
jno
lds
gs
pushf
mov
lcall
inc
mov
ljmp
iret
xchg
xchg
mov
push
cmp
jecxz
pop
rorb
dec
shlb
es
in
cmp
sbb
adc
fsts
xor
sbb
sbb
push
cld
push
xchg
lods
ds
xchg
mov
out
push
imul
cmpsb
scas
js
cld
pop
inc
add
cmp
jb
lock
sub
cmp
subl
rclb
mov
pushf
rcrl
imul
jnp
jge
imul
xlat
or
mov
cmp
shlb
sub
addr16
les
test
jb
js
test
lds
sbb
add
scas
clc
data16
cmp
push
rcr
push
and
cmc
test
xor
add
pop
pop
or
cltd
call
xlat
fimuls
xchg
into
sahf
adc
fucom
push
stos
sub
push
scas
in
jge
test
popf
dec
sub
jecxz
lock
jo
loop
out
add
ret
mov
je
enter
pop
adc
outsb
pop
mov
iret
pushf
lods
xor
sub
lods
adc
out
jb
mov
mov
add
xchg
aad
mov
loop
adc
add
sbb
movsb
mov
pop
stos
jnp
les
pop
int
sub
loopne
push
cmp
jae
pop
mov
arpl
xchg
repz
cmp
test
mov
mov
stc
push
cmpsb
les
rcll
aam
sarb
cwtl
push
loop
add
sub
and
ds
or
bound
sbb
out
in
rcrl
in
stc
mov
insb
xor
jbe
pushf
aad
push
add
lcall
xchg
rcr
js
test
mov
ret
insb
jns
ret
es
adc
js
enter
popf
into
mov
dec
mov
stc
sbb
fcmovnb
dec
cmp
sbb
addb
fldenv
scas
shrl
push
aas
pop
mov
mov
mov
mov
lret
pmaxsw
sbb
mov
addr16
clc
adc
mov
outsb
pop
cmpsl
adc
sti
std
mov
stos
cmp
sub
adcb
imul
lahf
ss
imul
inc
in
incl
dec
cmp
sbb
pop
js
pop
mov
stc
cmp
mov
mov
cmp
es
cmp
push
sahf
out
sahf
mov
inc
jno
ljmp
mov
and
data16
in
jle
out
ljmp
in
pop
cltd
leave
inc
xchg
icebp
mov
movsb
pop
sub
gs
stos
cli
sub
xor
mov
cs
xchg
cmc
pop
lock
arpl
fistps
mov
pop
gs
sbb
sub
sbb
shl
das
sub
ret
pop
or
mov
gs
add
jg
negb
cmp
jg
repz
fisttpl
jo
cmc
mov
mov
cmp
or
fisubs
adc
call
lea
xor
rcll
sub
xchg
dec
xchg
jmp
sbb
enter
lods
into
cli
fwait
xchg
cmpsl
pop
pushf
push
addr16
lahf
mov
testb
xor
adc
std
push
cmpsl
enter
add
cmp
loope
and
fsubp
xchg
mov
roll
pop
push
fstl
push
out
adc
imul
aas
push
aam
or
mov
stos
stc
ja
mov
mov
in
sub
pop
popa
sahf
cmp
and
xchg
inc
mov
pushf
je
test
xor
mov
fs
cmp
dec
rolb
cltd
pop
mov
mov
dec
rcll
xorl
sbb
ljmp
cli
push
xchg
std
sub
fdivrs
dec
cmp
and
out
dec
stc
push
outsb
lock
and
mov
repz
ret
pop
test
mov
fsubl
pop
sbb
jb
lcall
mov
addr16
fidivrl
fs
push
jns
movl
xor
mov
outsl
add
lcall
inc
cli
test
adc
xor
sbb
mov
pop
testb
mov
aas
pop
cld
pop
cmp
xchg
mov
inc
push
xchg
es
es
jmp
pusha
roll
testl
cmp
sub
mov
aaa
in
sbb
sarl
sbb
sub
repz
rorl
scas
fldcw
sbb
and
negb
or
sub
jae
in
scas
out
loop
mov
mov
lods
lods
nop
sahf
fmull
mov
out
adcb
jns
add
push
xor
sbb
cmp
fnstcw
dec
or
mov
aam
in
or
mov
pop
mov
mov
add
repnz
outsb
aaa
adc
push
adc
mov
jne
inc
repz
pop
mov
or
jl
ror
mov
popa
lds
icebp
adc
push
sub
divl
in
add
adc
dec
mov
push
add
mov
mov
insl
mov
daa
jnp
ss
jp
call
xchg
in
rcl
loop
jl
push
out
aas
mov
fbld
push
popl
mov
cwtl
les
fs
shll
es
sub
dec
loopne
jg
or
push
and
ret
ja
in
mov
fucomi
cmp
jbe
es
and
push
mov
cld
jno
cmp
push
callw
out
dec
mov
jg
loope
movsl
les
mov
inc
aam
sbb
cmpsl
clc
cmp
jmp
adc
lret
push
shlb
mov
xor
xchg
and
test
lds
mov
popa
shlb
int
or
inc
cmpsb
xchg
cmp
shl
arpl
pop
cmp
fs
xchg
test
sbb
xchg
call
lds
push
out
xlat
fldt
lcall
pushf
cmp
pushf
ljmp
fs
push
es
popf
jmp
pop
hlt
repz
mov
lea
mov
psraw
xor
scas
dec
mov
xchg
mov
jnp
mov
daa
push
outsl
ds
ja
loop
inc
cwtl
xchg
add
add
sti
lods
loope
lret
pop
fwait
es
jbe
pop
sub
add
mov
cs
ret
mov
and
cltd
xchg
mov
mov
inc
enter
stos
mov
xor
or
hlt
scas
int
int3
stos
gs
sbb
xlat
cmp
jnp
sti
lods
sub
stc
pop
mov
adcb
mov
mov
cmp
cwtl
dec
icebp
pop
xchg
mov
xlat
mov
mov
nop
imull
cmp
cmp
jle
mov
stos
scas
rolb
mov
out
fisubl
cld
xchg
jnp
incl
pop
jmp
iret
je
mov
data16
hlt
and
jle
or
data16
stc
xchg
dec
mov
jp
out
cmpsb
movsb
or
sbb
out
cltd
pop
xchg
flds
cmp
stos
push
dec
or
aas
cld
lock
mov
sbb
ja
dec
mov
fidivs
test
daa
pop
call
xor
pushf
push
pop
sti
pop
scas
lea
pushf
jle
adc
lods
jmp
push
mov
xchg
in
popa
jl
fwait
enter
cmp
bound
jno
xchg
int3
mov
inc
pop
push
mov
add
adc
push
mov
fldt
bound
lahf
sbb
sbb
inc
mov
pop
mov
icebp
jl
mulb
or
mov
adc
int
cld
xor
pushw
insl
sbb
add
adc
loopne
mov
jb
cli
mov
push
in
mov
inc
nop
or
push
test
pop
xor
lock
sbb
scas
insb
stc
clc
mov
push
and
aas
dec
mov
pusha
sub
movsl
add
in
cld
sbb
cmpsl
push
jae
mov
adc
imul
push
cmpsb
adc
insl
mov
push
push
orl
push
cmc
test
mov
cmp
add
loopne
cmp
mov
xor
add
cli
imul
aas
insl
cmp
add
lahf
das
sub
and
outsb
pop
repz
daa
sbb
dec
xor
sarl
shrb
mov
sbb
and
dec
ret
adc
xlat
outsl
jbe
jo
int3
stc
scas
fldt
pop
sbb
sub
and
push
hlt
clc
fmuls
scas
pop
iret
lcall
fdivrs
pop
int3
out
pop
mov
inc
loop
aaa
dec
mov
xor
mov
gs
and
ss
add
out
test
sahf
ss
jne
inc
out
roll
sbb
nop
lea
sub
xor
jns
jl,pn
lds
pop
push
mov
fstpl
pop
pop
mov
pusha
sbb
testb
push
mov
addb
sti
rcr
mov
div
pushf
dec
jno
inc
sbb
pop
mov
stos
dec
cmpsl
cli
stc
cli
mov
sub
jne
test
jne
mov
fstl
out
jo
data16
mov
mov
jbe
adc
repz
in
jp
sbb
movsb
in
xor
push
mov
stc
xorl
movsl
jle
jg
lret
rolb
xorb
jnp
mov
xchg
test
in
shrb
xchg
mov
fistpl
test
std
push
xor
dec
add
sti
mov
imul
inc
insb
dec
lds
test
xchg
push
out
mov
inc
rolb
aam
cmp
cmp
pop
dec
lock
or
mov
ja
mov
mov
xor
sub
jno
mul
and
add
sbb
lods
sub
dec
mov
mov
fstps
adc
int3
fsubl
pop
int3
xor
clc
jge
mov
lods
imul
shrb
cmp
testb
cltd
fsubrl
mov
cmc
aaa
rcll
add
push
cs
popa
mov
jp
pop
mov
fcomi
je
mov
rcrl
xor
stos
cmpsb
dec
pop
lds
in
push
popf
cmp
fidivrl
mov
jp
xchg
or
cmp
scas
insl
daa
out
jno
and
dec
sahf
inc
push
mov
js
cmp
sahf
mov
jge
push
inc
enter
sub
dec
cmpb
adc
mov
js
aad
icebp
push
and
stos
lods
mov
jns
inc
je
xchg
or
scas
mov
push
jo
fwait
push
loope
data16
xchg
pop
fs
cmp
incb
adc
pusha
jns
das
adc
cmpsb
and
hlt
mov
cmp
out
sub
pop
nop
jg
dec
adc
in
sbbb
pop
pop
mov
add
stos
jp
imul
add
cmc
scas
add
test
dec
jbe
call
mov
pop
cmp
xchg
dec
pop
enter
fildll
divl
iret
repnz
out
xor
jbe
pop
xor
xor
inc
fdivs
subb
push
and
mov
scas
push
and
aad
mov
xor
and
aas
icebp
fiaddl
mov
push
mov
mov
rcll
jg
clc
hlt
repnz
test
dec
scas
das
push
pop
sub
jecxz
jbe
push
repnz
mov
test
or
jle
push
call
mov
or
lahf
lcall
sbb
sub
adc
dec
leave
imul
sarb
xor
out
mov
xlat
aaa
mulb
xlat
adc
lods
push
mov
insb
shl
in
shl
scas
jge
addr16
dec
je
shlb
mov
mov
jl
and
bnd
inc
sub
cmp
push
inc
sub
mov
clc
mov
push
jecxz
xchg
xchg
daa
rcrb
lods
cmp
ja
cmpsb
cli
cs
jnp
test
xchg
cmpsb
test
out
pushf
cmp
and
add
out
aad
lahf
inc
mov
popf
ja
xchg
mov
push
shrb
je
into
inc
xchg
jae
repz
xor
dec
leave
sbbl
xchg
call
rcrl
shrl
or
dec
add
mov
pop
mov
aas
inc
mov
and
pop
or
mov
loopne
dec
in
dec
sub
iret
or
add
mov
add
pop
pcmpgtb
xchg
test
int3
and
enter
lds
mov
outsb
ficoms
test
lea
xchg
aaa
repnz
popf
inc
jl
movsb
popf
push
in
jl
adc
mov
jecxz
adcb
push
add
push
cmp
inc
shll
lret
ss
sahf
pusha
pop
insl
push
xor
pop
inc
aam
jmp
inc
jg
mov
mov
mov
rcr
mov
sbb
hlt
push
xchg
jge
jb
push
aaa
repnz
mov
inc
ja
jae
repnz
pop
xor
pop
ret
movsb
decl
enter
xor
fildll
push
aad
jg
sub
pop
push
cld
sub
lods
lds
xor
mov
xor
cwtl
cmp
mov
data16
arpl
sbb
push
sbb
hlt
xor
jg
pop
ljmp
and
xchg
inc
mov
mov
mov
cmpsl
push
repnz
and
cmp
mov
jp
mov
js
outsb
xor
icebp
mov
outsb
mov
and
adc
lods
stos
test
data16
mov
xor
dec
xchg
or
sbb
fcoms
out
imul
lret
xor
add
leave
test
movsb
aaa
xchg
add
sti
cmpl
jb
jne
push
insl
pop
jp
lret
loopne
add
inc
mov
lea
das
movsb
adc
jns
pushf
mov
clc
bound
aaa
lret
sbb
push
out
sub
push
fsub
stos
pop
clc
movsb
mov
mov
jnp
stc
jbe
dec
xchg
test
mov
dec
adc
cmpl
cmp
mov
lea
pop
fxch
loop
pop
mov
xchg
mov
lods
aas
add
mov
cs
or
rolb
adc
jo
add
adc
and
cmc
jns
jle
fdivrp
mov
lcall
les
push
fistpl
mov
jnp
jns
scas
dec
test
xchg
rcr
or
insl
loop
loop
jno
imul
push
pop
jp
popf
dec
sbb
hlt
pop
inc
adc
lcall
stc
xchg
daa
mov
cltd
xor
push
pop
in
rcll
aas
clc
pop
adc
xchg
data16
arpl
pop
aaa
xchg
dec
testb
pop
setle
iret
xchg
and
lock
stos
jle
xchg
add
hlt
shrb
dec
xchg
jmp
mov
dec
shl
jecxz
mov
sbb
and
pop
and
lods
inc
leave
cmp
jns
xorl
push
cmp
shlb
xchg
push
test
mov
cmc
add
clc
jmp
ret
pop
and
test
out
in
daa
xchg
test
sbb
jle
out
jo
ficompl
xor
pop
das
test
cwtl
and
dec
aam
out
nop
dec
sub
ret
xchg
fdivs
mov
fisubs
scas
push
out
mov
lods
mov
out
gs
mov
pop
cli
mov
hlt
out
sbb
ljmp
iret
sub
xchg
aas
mov
iret
cs
push
or
fnstcw
stc
mov
mov
out
xchg
daa
push
push
repz
xchg
mov
popf
je
mov
nop
out
daa
push
xchg
pop
pop
mov
mov
inc
inc
jne
and
and
jb
repnz
aam
daa
lahf
pushf
data16
jmp
das
jmp
xor
arpl
cli
test
cwtl
lea
cs
xchg
cmpsb
cmp
mov
int
fldcw
xor
aam
sti
movsl
iret
pop
pusha
fsts
outsb
lahf
ljmp
adc
inc
push
in
outsl
push
push
cmc
push
pop
push
cmp
dec
or
fbstp
jecxz
cmp
or
leave
cld
add
xchg
pushf
cld
cmc
xor
mov
pavgw
lea
push
and
mov
arpl
mov
add
mov
inc
in
pop
mov
sub
mov
addr16
fdivl
rclb
push
sarb
inc
cmp
data16
pop
dec
data16
pop
and
jb
arpl
lock
jo
iret
and
imul
negb
pushl
xchg
insl
incl
jp
cmpsl
jno
jbe
pop
add
pop
icebp
dec
paddusw
dec
mov
mov
scas
add
mov
gs
test
jne
and
sub
mov
fndisi(8087
pop
mov
cmpsl
ljmp
push
mov
aam
adc
aam
push
push
xchg
call
jno
cmp
jmp
repnz
add
adcl
mov
ljmp
push
mov
dec
xor
icebp
lea
leave
nop
ror
xchg
jno
add
rorl
push
insb
test
cmc
fsubrs
rorl
gs
dec
or
cmpsb
cltd
lret
out
cmp
push
cwtl
lock
enter
lock
daa
aad
shrl
xor
fs
add
mov
aad
in
decb
sub
cmp
add
dec
les
xchg
jno
insb
mov
data16
adcb
sbb
imul
pop
mov
enter
push
mov
inc
sbb
insl
sahf
popf
pop
jmp
and
sbb
pop
out
popa
mov
and
dec
mov
push
fistpll
in
mov
out
hlt
lods
dec
jecxz
loope
cmpsb
cmp
les
hlt
dec
out
xor
movsb
test
mov
cli
xor
mov
sub
mov
jg
xor
mov
clc
push
add
xchg
pop
xchg
xchg
or
sbb
dec
in
cltd
mov
ret
sarl
xchg
adc
inc
mov
pop
insb
data16
arpl
cmp
add
or
je
xlat
jg
pop
push
xor
pop
outsl
cmpsl
push
add
jmp
pushf
mov
outsb
out
dec
push
adc
std
les
and
into
xchg
pop
push
pop
mov
test
test
shrl
addr16
jg
insb
stc
lods
lods
push
jno
shll
mov
sbb
push
jecxz
es
jmp
dec
lods
mov
mov
push
insb
push
mov
mov
sahf
movsb
pop
insl
cli
fdivs
into
test
rcl
mov
ds
dec
push
fsubs
shrd
leave
in
into
jae
daa
mov
cwtl
adc
lods
add
xchg
cli
addb
loop
cmp
or
push
testb
inc
inc
lods
test
mov
out
mov
add
cmp
mov
clc
enter
dec
cmpsl
pop
shrb
push
xchg
jecxz
cs
push
jle
pop
xchg
dec
cli
cs
bound
jo
call
iret
push
sbb
dec
push
lss
outsl
mov
push
push
loop
push
sub
pop
or
push
push
cmpl
inc
jbe
bound
clc
stos
cmp
cmp
stc
sbb
push
jmp
pop
cltd
xor
adc
xchg
cld
idivb
dec
push
mov
ljmp
mov
cmp
jge
shrl
push
pop
jns
cmp
enter
push
lock
dec
cmp
jae
orl
shrb
int3
sub
cltd
dec
mov
aam
xchg
fidivs
pop
or
dec
cmc
movsl
push
shrl
aam
inc
xchg
cs
test
fstl
aaa
adc
jl
mov
inc
add
xlat
sub
mov
popl
mov
fistl
ja
stos
inc
pop
std
sahf
pop
inc
fmul
push
mov
push
cltd
mov
loopne
push
hlt
lock
shrb
in
cmp
lea
andl
jno
push
loop
aad
in
aaa
lds
loop
mov
push
lock
mov
mov
ret
cmp
sahf
insl
or
insb
icebp
sub
xorb
lret
inc
push
inc
jecxz
lahf
lods
jno
jno
inc
xor
mov
mov
in
sar
popf
jecxz
jge
iret
popa
push
fadds
je
data16
sbb
fs
or
cld
add
and
push
add
mov
out
pushf
mov
jle
adc
adc
lret
cs
lret
stos
ljmp
lods
push
jne
sbb
int
jb
push
test
add
adc
cmpsl
jge
sub
mov
out
push
incl
cs
stos
test
xor
push
or
lahf
dec
scas
cmpsl
cwtl
cmp
pop
fwait
das
lahf
sti
in
test
and
cmp
pop
inc
dec
add
and
arpl
dec
push
cmp
aaa
mov
int
mov
mov
lea
lret
mov
out
mov
les
pop
mov
into
mov
je
cwtl
pop
xchg
sbb
loopne
xor
cmpsb
pop
push
pusha
stos
pop
jp
xchg
ds
xor
leave
movsb
inc
mov
cmpsl
loope
cmpsb
and
loope
pop
std
mov
sbb
xor
cmpsb
push
test
mov
gs
das
or
shrl
xor
fists
jmp
sub
cmp
std
lods
mov
das
sbb
jae
dec
mov
and
or
cmpsl
inc
rcrl
jns
aad
leave
jp
inc
inc
inc
repnz
sub
cltd
fwait
sub
sbb
or
bound
nop
mov
xor
js
fbld
jmp
inc
call
mov
std
xor
jg
test
int
or
inc
cmc
movsb
mov
sub
pop
or
and
jg
jp
jb
imulb
mov
sub
fsubrl
scas
push
adc
gs
xor
loopne
xor
cmpsb
xchg
pop
pop
fs
mov
mov
outsl
testl
out
pop
xlat
stos
jp
stos
inc
cltd
jp
mov
aas
out
adc
mov
cmp
shlb
or
insb
lret
mov
adc
ljmp
jmp
test
les
sahf
rorb
into
mov
mov
icebp
cld
inc
mov
enter
fsubrl
add
sub
adc
mov
xchg
or
jle
mov
scas
into
movsb
insb
adc
pop
add
inc
xlat
adc
push
stc
dec
arpl
xchg
fwait
xchg
xchg
or
hlt
pushf
sub
cltd
ljmp
lds
mov
filds
lret
insl
push
out
inc
mov
dec
pop
sub
repnz
xchg
insl
and
or
pop
mov
jmp
cmp
push
adc
cli
jecxz
movsl
mov
inc
aaa
adc
jl
or
shl
fstpt
ficompl
call
or
rcrl
mov
pusha
fsubrl
sbb
mov
xchg
push
testb
hlt
movl
ficoml
adc
cltd
xchg
scas
cwtl
or
inc
outsb
popa
je
pushf
mov
dec
add
or
lock
cwtl
int
lahf
adc
jge
lret
fwait
icebp
out
lcall
sbb
pop
mov
rclb
leave
xor
loopne
push
lea
adc
xchg
mov
dec
enter
dec
dec
clc
out
adc
xchg
jns
dec
cmc
sbb
ror
jno
in
jne
andb
mov
jne
and
mov
fucomip
loope
cmp
negb
lds
clc
ljmp
mov
divl
call
aaa
popa
mov
out
loop
ja
push
in
shrb
bound
lock
je
sub
xchg
arpl
loopne
sbb
gs
arpl
mov
jge
enter
mov
cld
jbe
outsb
add
jbe
dec
dec
pop
push
popa
cmp
fcomps
movsl
sbbl
movsb
sub
xchg
movsl
clc
sbb
cmp
stos
imul
add
fnsave
mov
ret
gs
inc
pop
mov
cmp
test
xchg
push
jne
cmp
sbb
sbb
inc
add
and
stos
lock
sub
pop
adc
jne
shll
loope
iret
sti
ror
push
jle
adc
stc
sub
xchg
int
je
mov
enter
xchg
xchg
cmp
cmc
jge
sub
jnp
dec
add
dec
mov
sub
dec
insl
push
test
mov
loop
dec
mov
in
push
sub
mov
xacquire
pop
idivl
push
xchg
loop
dec
loop
sbb
lods
mov
bound
cmp
imul
dec
icebp
in
xchg
mov
or
icebp
cmc
test
xor
out
in
adc
xchg
jmp
ret
push
popf
scas
xchg
enter
imul
loop
ss
inc
cmp
push
jmp
jo
insb
scas
fimuls
lea
mov
cltd
sbb
test
stos
adc
add
push
scas
sub
mov
div
int
pop
cmp
mov
dec
in
pusha
ficomps
sahf
orb
jmp
dec
inc
pop
movsb
js
mov
adc
fadds
call
leave
push
add
jmp
sbb
cmpsb
pop
sti
mov
shlb
xor
mov
pop
jo
lret
and
mov
hlt
or
in
js
xor
lods
xor
push
sbb
fwait
sub
lock
cmp
clc
xchg
addl
push
mov
pop
js
lock
icebp
push
sbb
pop
aad
cmc
push
iret
sub
mov
pop
or
sti
lcall
andb
push
fidivl
mov
icebp
and
xchg
dec
or
stc
out
mov
rolb
sub
decb
out
mov
jns
mov
popf
dec
mov
mov
push
leave
cmp
push
mov
sbb
add
vrcpps
push
int
sbb
mov
into
stc
cmp
dec
call
xchg
xchg
jne
jmp
push
mov
mov
aas
aam
cmp
stc
jb
scas
jno
pop
jge
std
jle
sub
test
cmp
mul
sub
repz
mov
cld
aas
adcb
scas
shrl
xchg
xchg
mov
sbb
mov
mov
push
test
movsb
pop
add
decl
shrl
sahf
push
dec
movsl
mov
jge
lods
rcl
push
mov
addb
stos
cmp
lahf
dec
and
ret
popa
je
add
jle
je
vunpckhps
push
stos
xlat
inc
adc
fisubs
cmp
sbb
test
cmp
mov
or
adc
mov
popf
insb
enter
js
mov
repnz
dec
cmc
in
dec
mov
aad
mov
inc
xchg
pop
pop
push
push
leave
inc
and
mov
or
out
xorb
lret
shll
fiadds
lahf
xor
test
lea
jg
push
mov
clc
imul
cmp
xor
adcb
jmp
in
lea
int
movl
movsl
sbb
sbb
mov
das
insl
fnsave
imul
pusha
sbb
cmp
push
aaa
cmp
shrl
pop
or
imul
gs
jne
scas
jns
push
cld
fcoml
add
xchg
mov
push
and
mov
inc
pop
fisubrs
push
mov
jb
mov
loope
push
cmp
mov
mov
jno
push
addr16
xchg
loopne
jmp
xchg
arpl
fldt
push
mov
int
jae
cmp
or
or
scas
not
adc
mov
jbe
add
and
dec
fdiv
sbbb
sub
sbb
push
cmp
cld
out
or
sahf
mov
push
ljmp
stos
push
pop
pop
inc
in
in
gs
shlb
jl
cmp
push
dec
xorb
cmc
and
nop
jo
xchg
nop
fsubp
adc
lods
je
shlb
or
ljmp
adc
push
inc
je
cs
or
cmc
movsb
ljmp
xchg
outsb
nop
testl
addr16
xchg
xchg
adc
arpl
and
xchg
inc
jp
xchg
or
stc
push
push
rcrl
iret
inc
or
cmp
bound
in
mov
bound
pop
call
js
inc
movsb
xlat
in
fs
mov
sub
leave
repnz
sti
lods
adc
aam
out
pop
pop
adc
xor
pop
scas
jmp
pop
push
push
xchg
lcall
fmul
das
push
out
imul
pop
cmp
icebp
pusha
loopne
mov
lret
leave
aaa
ljmp
adc
loop
mov
into
add
bound
add
stos
add
nop
and
test
nop
or
xchg
add
xor
in
adc
lds
cmp
cmp
sti
popa
push
ret
mov
into
lahf
push
popf
mov
xchg
push
cmp
sbb
pop
xor
mov
inc
fs
test
pop
fidivrs
jecxz
dec
and
or
shlb
ret
xor
and
repz
pop
xchg
dec
insl
inc
dec
cmp
cld
sbb
sub
test
std
sbb
cmp
dec
mov
insl
pusha
inc
jns
cmp
push
int3
testl
scas
popf
jns
sbb
inc
mov
les
sar
lock
ret
gs
push
and
push
xchg
xchg
push
and
in
cmp
cs
cmp
stos
lahf
push
cmp
in
cli
mov
mov
or
push
inc
and
test
xor
stos
mulb
lahf
or
mov
shrb
mov
mov
mov
fwait
push
lods
orb
jecxz
and
sti
lock
inc
mov
pop
insl
filds
and
sahf
pop
mov
jecxz
mov
rcrb
mov
sub
dec
imul
dec
aaa
jb
iret
stos
out
ficomps
xchg
cld
test
and
mov
int3
in
loope
add
adc
pop
pushf
adc
rcll
rolb
cmpsl
std
aaa
mov
shll
mov
je
lods
popf
mov
jmp
adc
jecxz
sub
or
add
dec
xor
xchg
mov
fiadds
or
jno
aad
aad
leave
mov
xchg
adc
push
mov
adc
add
sub
outsl
sub
mov
jg
orl
mov
cmpsl
vpsubb
jno
pop
test
out
push
mov
mov
jmp
sbb
popf
ja
mov
inc
and
bound
cmp
xchg
dec
aaa
aas
jmp
js
loope
aas
ret
adc
pop
mov
loope
movsl
and
repz
jge
push
shlb
bound
jb
cmpsl
mov
sbb
jnp
and
sti
push
xor
inc
xchg
lret
movsl
and
push
xchg
fdivl
addr16
and
jle
sbbl
sbb
insl
sub
and
sbb
mov
mov
loop
aad
cmp
pop
mov
pop
pop
arpl
sub
jg
movsl
out
inc
js
cmp
test
aad
push
jae
jg
mov
jnp
dec
enter
push
ret
add
push
xlat
outsl
cmp
fcmove
jge
pop
andl
mov
bound
mov
cmpsl
push
icebp
test
pop
pop
pop
mov
mov
mov
mov
fisubl
inc
xorb
lret
jle
dec
inc
mov
call
jne
mov
push
jl
pop
aas
mov
inc
dec
cmp
adc
xorl
xchg
push
pop
and
adc
aad
mov
pushf
mov
bound
ljmp
iret
or
cmp
out
cmp
movsl
hlt
push
test
addl
adc
or
mov
mov
sub
jno
sub
mov
pop
dec
enter
test
pop
clc
scas
jne
popa
pop
js
imul
add
xchg
stos
imul
xor
inc
inc
xchg
int
movsb
test
inc
imul
imul
out
imull
sub
or
lcall
insb
out
js
push
pop
loopne
jmp
sarl
or
add
mov
cmpsl
pop
xchg
call
das
les
inc
popa
or
pop
fistl
push
xchg
bound
clc
xchg
cs
ret
les
imul
popf
out
dec
popa
test
mul
mov
sub
cmp
adc
jno
jecxz
add
cmc
dec
jb
dec
pop
or
dec
add
cmp
add
aam
dec
sub
xchg
dec
cmp
dec
and
sahf
xchg
js
lahf
sbb
mov
stos
cltd
inc
mov
leave
or
sub
fucomp
aam
ljmp
sbb
jmp
movsb
and
movsb
mov
std
mov
sub
pop
movb
bound
leave
shrb
sti
add
popf
sub
mov
adc
mov
mov
lret
pop
xchg
in
dec
movsl
sarl
and
test
push
add
pop
xchg
pop
stos
rolb
insb
pushf
push
dec
insb
inc
pmulhuw
jmp
and
pop
jns
ljmp
int
push
xlat
test
mov
push
sbb
arpl
push
pop
xor
test
lea
xchg
or
ja
dec
inc
subl
out
cmpsl
mov
test
fs
xchg
jo
mov
es
mov
outsb
push
adc
mov
lcall
jge
mov
dec
mov
adc
adc
jne
mov
fdivl
frstor
test
sub
je
pop
dec
mov
cmp
jbe
push
sub
cs
push
and
jmp
dec
jae
pop
sarb
sbb
xchg
mov
hlt
mov
dec
and
test
xor
inc
mov
inc
dec
outsl
jnp
and
sbb
lods
xor
cli
pop
mov
cmp
in
jecxz
or
inc
lea
out
lock
sbb
call
lahf
mov
jl
movsl
insl
orb
push
cld
jge
nop
insb
lods
pop
in
inc
not
dec
lods
mov
pop
rcrb
mov
fwait
adc
test
bound
sub
jb
jmp
in
bound
cmp
filds
push
loopne
sub
sti
xor
mov
cwtl
aaa
fnstenv
mov
insb
lcall
inc
jge
pop
in
jns
mov
hlt
dec
pop
je
xchg
pop
hlt
sub
inc
jle
add
xor
mov
pop
adc
push
daa
pushf
dec
call
fnstsw
lret
pop
jecxz
out
leave
inc
les
push
cmp
ret
mov
lods
mov
les
hlt
std
jbe
jns
rorb
xchg
pop
pusha
rcl
pop
xchg
mov
adc
adc
loopne
dec
push
fiaddl
loop
daa
shlb
pusha
jl
xlat
loop
dec
mov
jns
dec
loope
mov
cmp
mov
adc
inc
add
push
sbb
repz
sub
out
dec
lret
mov
rcrb
loop
pop
sti
inc
mov
popf
ja
sbb
lret
sbb
fcmovnbe
xchg
jge
je
outsb
mov
sbb
jp
push
daa
and
xchg
lcall
repnz
cmp
imul
xchg
in
notb
orl
outsl
sub
hlt
pop
xlat
mov
gs
fsubr
ljmp
shl
fstpl
mov
xchg
mov
mov
iret
pop
loope
xor
cs
andl
stc
xlat
outsb
ljmp
or
repz
pop
sti
test
sbb
jno
push
and
mov
aam
notb
dec
sbb
imul
imull
call
cmp
sub
iret
push
push
mov
ljmp
into
cmpsl
sbb
mov
jge
xlat
inc
fisubrl
shl
outsl
repnz
adc
xorb
loope
xchg
shll
mov
inc
shlb
cmp
lea
in
lret
dec
cs
pop
in
sbb
fldl
lea
lods
imul
push
push
iret
inc
add
das
imul
insl
adc
dec
xchg
dec
rolb
dec
mov
aam
adc
push
lds
jp
rcrb
jne
in
inc
ret
addb
into
cld
or
dec
sti
cmc
fwait
dec
addr16
sbb
pop
fisttpl
pop
repz
inc
es
aam
fisttpll
adc
cmp
rcrl
xchg
mov
dec
jmp
cmp
add
fsub
push
mov
gs
repnz
lret
push
push
testb
les
adc
jl
stc
mov
rorl
dec
mov
xor
icebp
mov
jb
lret
icebp
in
outsl
push
mov
aaa
add
adc
fmul
fists
dec
lods
mov
aaa
mov
adc
stos
mov
cli
aaa
push
mov
xor
sbb
pop
sub
inc
push
test
cmpsl
xchg
and
pop
dec
int
enter
ljmp
lea
cltd
mov
andb
mov
je
testb
push
inc
cmpsb
and
dec
jge
and
push
cmp
or
cmp
lret
xor
daa
ss
aam
stos
sub
mov
lret
push
sti
cmc
pop
inc
lcall
jns
mov
add
mov
test
call
mov
fisttpl
popa
cwtl
adc
out
cmp
inc
lahf
jno
mov
adc
lcall
jns
mov
adc
mov
bound
ds
lcall
jp
xchg
push
mov
and
mov
pop
adc
mov
addr16
addr16
sub
enter
push
cmp
pop
lret
mov
cmc
stos
loope
pushf
test
fistpll
aad
jp
pop
mov
sbb
jl
add
pop
or
dec
sbb
lret
jno
and
xchg
fsqrt
in
loop
mov
inc
test
cmpsl
mov
mov
add
lahf
or
enter
pop
clc
cltd
dec
mov
and
movsl
push
bound
daa
test
les
inc
sub
in
imul
xchg
inc
dec
add
cmp
dec
lret
call
inc
or
shl
outsb
test
cmp
ljmp
sahf
push
adc
in
mov
adc
sbb
or
decb
dec
sbb
pushf
cmp
cmp
imul
xor
fadds
pop
rclb
push
or
push
or
xchg
push
outsl
es
ja
mov
dec
inc
insl
cmpsb
xchg
dec
ja
out
dec
lea
pushf
xchg
aas
repnz
mov
or
xor
xor
nop
cmpsl
jecxz
pop
int
lods
outsb
hlt
fbstp
insl
sbb
out
and
fiadds
dec
out
lahf
dec
out
inc
xor
pop
bound
xor
xchg
cltd
pop
add
adcb
push
out
or
cmp
dec
mov
lret
mov
in
dec
push
push
jg
in
test
subl
mov
add
icebp
push
fdivl
push
movsl
dec
push
lods
pop
std
add
cli
loop
aas
popa
pop
xchg
sbb
fwait
test
mov
es
push
pushf
adc
adcl
dec
xor
add
imul
sbb
mov
stc
arpl
scas
mov
shl
ds
push
scas
roll
sub
xor
test
aam
xchg
into
insl
dec
fcoml
enter
shrl
inc
sbb
jge
out
jl
xor
dec
ja
jbe
mov
jnp
push
sbb
rcrl
push
cs
inc
jb
fdivrs
filds
jnp
cmp
cltd
jp
insb
sahf
mov
sbb
les
addr16
insl
and
push
inc
std
adc
sub
jae
mov
lret
jle
sub
sbb
stc
jge
inc
fwait
jl
in
int
shlb
mov
push
and
sbb
jmp
repnz
dec
ss
fimuls
rcl
inc
push
xrelease
pop
dec
mov
jmp
mov
hlt
addb
pop
stos
add
in
cmp
push
ret
fwait
imul
ss
outsb
mov
test
ds
mov
add
xchg
lds
shll
sbbl
leave
stos
mov
push
push
pop
mov
xchg
sub
cmp
ja
push
xchg
repnz
xchg
add
call
or
pop
divps
push
and
sub
xchg
and
fsts
pop
lods
enter
adc
fisubrs
cmp
push
cli
xchg
cmpsl
xorb
pushf
and
cmp
lcall
je
add
mov
dec
inc
mov
cmp
jmp
loope
xlat
int
imul
inc
jmp
jbe
inc
push
fldenv
mov
arpl
pop
jge
mov
outsl
inc
mov
xor
add
loope
jne
xlat
fs
sub
in
sub
xchg
xchg
jp
xchg
dec
rclb
sbb
jo
sub
lds
gs
mov
mov
mov
mov
out
fldl
sahf
int3
dec
jle
inc
in
adc
and
dec
pop
mov
out
sub
notb
loope
adc
sahf
arpl
add
sbb
fdivrs
icebp
add
lea
or
enter
adc
ljmp
leave
cmpl
cs
sbbb
ret
mov
mov
pushf
aam
in
dec
sbb
add
int3
xor
hlt
xor
outsl
shr
test
pusha
lahf
sar
sbbb
test
into
lock
andl
adc
adc
dec
push
add
dec
jb
imulb
or
push
pop
sarl
rcll
arpl
mov
stos
pop
cmc
out
xor
adcb
decb
jnp
push
adc
add
scas
decb
inc
loope
sbb
into
mov
xchg
pop
pop
sub
mov
push
jg
pop
ds
scas
xchg
std
xor
jno
test
and
push
shlb
sub
es
sub
fucomi
jns
sarl
rorl
cmp
stos
sarl
mov
movsl
xor
js
inc
xor
stc
test
mov
mov
shrl
push
out
push
cmp
mov
stos
imulb
and
test
pop
std
or
xchg
add
xor
xor
jmp
mov
mov
and
cmp
fisubrl
in
in
add
aaa
mov
repnz
or
ror
mov
lods
ret
andb
cmp
dec
cmp
mov
push
mov
and
adc
mov
sub
fcoml
sub
jne
mov
or
xchg
popa
rorb
fisttpl
mov
pop
mov
inc
sub
in
mov
lea
xchg
bound
into
movsb
dec
xchg
sbb
add
xlat
popa
jno
mov
sahf
pop
lods
jg
ds
mov
mov
stos
inc
lods
add
and
in
test
push
and
xchg
outsb
pop
jbe
aad
or
mov
in
adc
cmp
sti
shlb
jl
xchg
lods
pusha
add
sbb
or
and
sub
push
lret
into
scas
mov
ss
and
sub
push
out
push
adc
fsubl
add
int3
gs
sub
repz
fbstp
or
shl
dec
mov
cmp
push
sbb
fdivr
stc
jbe
and
testl
adc
movsl
in
dec
dec
push
jge
insb
mov
lcall
popa
dec
mov
pop
out
addb
mov
popa
mov
sbb
jnp
mov
ljmp
imul
fsubs
adcl
mov
insb
xchg
imul
clc
mov
push
sub
fwait
or
in
data16
cmp
jmp
mov
cld
jno
sub
test
add
cmp
dec
loop
cmpsb
repnz
lods
pop
imul
push
jbe
in
clc
insb
sar
sbb
add
jge
add
add
das
bound
or
scas
ss
push
xor
adc
iret
aas
xchg
daa
or
scas
leave
or
fisubrl
jmp
scas
dec
mov
imulb
xchg
fldt
lods
outsl
test
subl
pop
arpl
push
jg
jne
lahf
mov
dec
jle
pop
shlb
out
ret
aad
adc
popa
mov
aad
xchg
lds
mov
xchg
sub
aad
dec
pop
push
or
sbb
mov
enter
add
in
push
subl
mov
inc
sbb
xchg
mov
or
xor
cmp
cmp
fdivl
test
das
cmp
fcmovnb
ror
push
sub
into
mov
out
ja
sub
lock
addr16
popw
imul
add
sub
repnz
lea
lea
pop
sbbl
xor
sbb
stos
das
les
xchg
fsubrs
xlat
or
inc
dec
dec
dec
cmc
push
rclb
inc
xor
jmp
stos
cmpsb
and
pop
sbb
rcr
add
pop
popf
test
es
lock
in
aad
stc
inc
sub
ret
push
call
push
pop
cltd
cld
jbe
and
or
or
fxch
jp
addb
mov
mov
add
sub
xchg
lret
js
lret
test
daa
insb
mov
cwtl
call
sub
jp
push
sbbl
ljmp
bound
negl
sub
or
aas
mov
or
out
ror
jecxz
pop
pop
loopne
pop
filds
adc
sub
mov
xor
inc
pop
cmpb
adc
sub
sub
cwtl
loop
inc
out
dec
sbb
imul
jae
test
mov
test
fidivl
xor
gs
dec
xor
out
inc
jg
jecxz
loope
mov
push
mov
mov
in
pop
scas
cs
repz
cmc
movl
repz
js
repnz
lret
cmp
mov
les
mov
xchg
aam
les
dec
aam
insl
pop
inc
push
xor
push
sahf
insl
sbb
cli
sti
inc
adc
xor
fimull
hlt
cmc
imul
jns
jp
ss
dec
mov
or
xchg
scas
or
cwtl
fs
push
fcomps
into
hlt
std
xchg
xor
pop
loope
inc
mov
mov
iret
add
pushf
jmp
mov
sub
mov
cmpsl
jle
ja
imul
pushf
and
sbb
imul
mov
xchg
popa
dec
xor
in
sub
ret
add
push
pop
dec
sti
cld
mov
push
push
mov
add
sub
push
push
sahf
ret
xchg
test
jge
in
pop
inc
push
fisttpll
cmp
jnp
mov
rclb
pop
pop
nop
mov
adc
lea
mov
enter
mov
cli
out
jb
cmp
fs
pop
jnp
pop
pop
push
aam
outsl
push
mov
add
sub
adc
mov
pop
data16
push
popa
jg
addb
outsl
push
sub
sti
sbb
hlt
cmp
fiadds
stos
jge
mov
sub
adc
call
in
mov
nop
test
xor
lods
sbb
cmp
cmpl
sbb
add
movsb
clc
lret
dec
mov
and
push
in
sub
jp
je
test
and
cmp
and
sbb
push
es
jb
notl
mov
lds
test
cltd
lea
addb
jb,pt
xchg
hlt
fistps
test
or
mov
dec
or
ja
inc
jne
loopne
addr16
add
mov
add
in
rclb
fcmovbe
cmp
lock
mov
cmpl
jle
xchg
dec
cltd
mov
xor
adc
sub
scas
divb
in
movsl
enter
mov
xchg
fstpl
test
ja
add
mov
dec
sar
ret
ljmp
inc
loopne
mov
jle
cmpsb
pop
xor
xchg
add
jnp
shll
aad
movsl
jb
mov
push
test
movsl
sub
xchg
lahf
insl
out
gs
sbb
repz
adc
insb
out
jle
out
cmp
mov
sub
sub
popa
add
lock
cmp
call
push
mov
dec
aad
adc
icebp
cmp
insb
cmp
push
push
rcrl
rorl
mov
jge
push
xchg
lea
test
mov
dec
jno
add
dec
lahf
mull
in
movb
jo
and
fsubl
insl
jb
mov
push
js
daa
and
ret
pop
push
xor
or
mov
sub
test
cmp
push
js
ror
xor
push
inc
adc
cmp
into
cmp
loopne
or
push
stc
lcall
dec
adc
jno
push
fnstcw
das
mov
pop
popw
sub
shrb
insb
xchg
jns
lcall
jbe
mov
out
ss
out
xchg
push
inc
or
scas
pop
pop
loop
push
rorl
inc
adc
jg
or
xchg
out
sbb
lods
ja
idivl
outsl
cli
lods
pop
cli
sbb
fwait
idiv
popf
int
push
out
pusha
sbb
sti
mov
mov
jp
xor
ja
icebp
sbb
insb
lahf
cmp
and
loop
jnp,pn
enter
nop
xchg
jo
repnz
fiadds
xchg
test
rcrl
adc
mov
jnp
rorl
dec
icebp
popa
leave
xchg
ljmp
pusha
arpl
cmp
negb
stos
lods
and
psrlq
cmp
int3
cs
adc
xor
mov
jmp
mov
ds
lcall
sbb
and
mov
or
add
out
xor
outsb
adc
stc
addr16
jno
cs
adc
mov
push
add
sbb
lock
xor
add
stc
jg
repnz
lahf
lock
aad
ljmp
aad
and
pop
inc
mov
pushf
xor
lods
fisttps
movsb
push
ret
outsl
jg
inc
iret
inc
inc
outsb
std
daa
xor
mov
insb
cmp
stos
in
add
sbb
mov
insb
pop
cmp
sbb
adc
icebp
enter
stos
mov
mov
mov
xor
cmp
xchg
sbb
stos
push
inc
and
push
xchg
sbb
call
xchg
leave
in
repz
and
test
cli
or
cmpsl
pop
out
adc
inc
push
inc
movsb
and
outsb
sarl
daa
repnz
shl
icebp
lock
ret
fcmovnbe
push
jno,pt
cli
daa
or
xchg
push
jmp
mov
pop
fmull
aam
pop
stos
inc
sub
push
mov
mov
sub
cmp
sub
cmp
std
popa
sub
inc
jno
mov
fcomps
jmp
movsb
push
or
pusha
ficoms
xchg
mov
data16
lret
cld
xor
cmpsl
arpl
fidivrl
xlat
stc
dec
leave
bound
out
xor
pop
sbbb
sahf
out
test
shrb
stc
sbb
inc
lret
call
dec
movsl
sub
add
sub
xor
cld
xchg
add
xchg
or
xchg
add
ficompl
sbb
mov
mov
lret
mov
dec
mov
loopne
xor
jecxz
jmp
pop
lret
add
mov
roll
stc
push
aas
adc
pop
bound
icebp
jns,pn
leave
xchg
int
popw
xchg
cmp
iret
xor
and
xchg
sub
stos
and
sub
dec
cltd
inc
dec
in
or
ds
daa
or
add
add
mov
inc
js
div
imul
dec
dec
pop
enter
inc
cmpsl
xchg
dec
out
daa
xchg
adc
sbb
xchg
xchg
pop
sub
int3
push
mov
or
jl
push
bound
push
aam
lret
inc
arpl
iret
addr16
mov
std
dec
adc
dec
jg
cmp
movsb
mov
dec
mov
aad
dec
jnp
jle
sbb
jmp
fldenv
mov
or
push
cmc
or
dec
xchg
inc
fisubl
test
sbb
hlt
sbb
testl
loop
hlt
lock
jmp
mov
mov
repnz
mov
cmpsb
ja
sub
fcmovb
fisttpl
mov
in
cmpsb
dec
popf
sub
push
fdecstp
push
or
sub
rcr
push
loopne
pusha
inc
cmp
dec
leave
push
imul
or
cmpsl
push
adc
shlb
outsb
cltd
cmp
addr16
mov
or
dec
mov
jecxz
jp
pop
sbb
xlat
ret
dec
lahf
mov
jbe
mov
fsts
out
xchg
inc
stc
pop
inc
add
lea
imul
pop
cwtl
ds
test
push
inc
inc
cmp
fsts
mov
repz
dec
cli
or
pushf
jl
mov
mov
dec
mov
mov
sub
fbld
pop
mov
cmp
fs
mov
ljmp
mov
or
cmp
mov
or
xor
add
add
arpl
pop
push
repz
sub
std
fcoms
xchg
scas
jb
xor
dec
gs
jmp
pop
sub
jmp
xchg
adc
dec
dec
std
xchg
movsb
mov
mov
mov
ficoms
lret
add
push
lods
jns
dec
dec
dec
les
push
js
nop
rcrl
testb
and
mov
loop
adc
cmp
popf
lahf
cmp
shl
push
xchg
xlat
xchg
addb
mov
ret
adc
orb
addr16
cmpsl
out
inc
mov
repnz
out
mov
hlt
leave
push
insl
aaa
jle
jg
iret
clc
mov
loope
popa
loop
pop
add
push
fsubrs
cwtl
rep
cmovge
lcall
ja
inc
sbb
hlt
push
push
adc
jnp
jecxz
or
psubw
xor
jb
mov
insb
adc
shlb
repz
fnstcw
loop
pop
fidivl
cs
lahf
jp
mov
lcall
ret
int3
daa
mov
adcb
in
sbb
mov
inc
addr16
in
pop
cld
push
clc
jae
int3
pop
cmp
js
cmp
hlt
sbb
add
hlt
rclb
enter
mov
fistps
loope
repz
aad
movsl
dec
xchg
test
or
rcll
dec
mov
mov
fiadds
and
btc
sbb
fidivl
cwtl
iret
sbb
push
andb
addr16
lods
cmpsb
sub
mov
inc
push
mov
repnz
inc
lret
rorl
mov
loop
xor
sbb
fsubr
pop
lcall
fwait
into
dec
add
mov
inc
scas
jge,pn
sbb
fidivrs
and
sub
repz
add
add
sbb
xor
dec
mov
dec
shl
in
push
negb
sbb
push
dec
sbb
fwait
and
and
insb
adc
push
jb
sub
sub
xchg
data16
popa
sbb
mov
das
cmp
popa
mov
fcoms
mov
sub
jg
repz
iret
sbb
sti
movsb
jp
xor
add
inc
cmp
jnp
sub
pop
fisubrl
mov
pop
add
and
mov
enter
aad
and
dec
xor
and
pop
xchg
icebp
int
pop
scas
xchg
mov
pop
xor
rolb
sti
lret
inc
fsub
or
inc
ret
std
mov
sti
sbb
mov
jmp
lret
aam
clc
mov
insl
insl
jecxz
pop
and
data16
hlt
and
dec
sub
mov
loop
or
ljmp
inc
mov
jl
pop
call
fstps
cmp
addr16
push
subl
add
daa
jno
mov
in
and
sub
lds
stos
inc
fcmovnu
shrb
lock
ja
and
push
data16
dec
add
jmp
lock
rorl
orb
sub
mov
push
and
fdivs
adcl
ljmp
cmp
or
lcall
fmull
adc
or
push
leave
push
add
dec
add
push
xchg
lods
cmp
jle
mov
cmp
lods
adc
inc
sbb
sub
mov
inc
mov
mov
in
pop
mov
sub
xchg
mov
dec
je
and
aas
pop
test
rolb
xchg
xor
mov
inc
jg
mov
jecxz
mov
push
cmp
fdivrl
sub
mov
jecxz
xor
mov
fmuls
and
push
fcompl
or
insl
inc
adc
out
jmp
ret
jae
push
pusha
mov
cmpsl
fs
mov
pop
out
inc
pop
mov
sub
dec
stos
decl
cli
inc
mov
pop
inc
movsb
rolb
nop
adc
sti
inc
xchg
and
insl
push
jmp
loope
xlat
pop
je
sub
add
inc
cmc
mov
fidivs
jge
dec
dec
push
ljmp
ss
shlb
mov
aaa
stos
cli
fnstenv
jb
pop
mov
repnz
outsl
je
loopne
aaa
ds
out
mov
sub
loope
mov
pop
inc
ficompl
and
idiv
movaps
cli
jge
xchg
outsl
es
dec
adc
add
inc
adc
mov
mov
loop
dec
les
int
fistl
in
aad
stos
and
add
out
and
adc
movsb
and
dec
dec
inc
xchg
push
ret
aad
jno
pop
sarl
lcall
sub
mov
sbb
mov
nop
scas
adc
int3
adc
movsl
setns
sarb
ljmp
movsl
mov
inc
lods
std
inc
sbb
xor
in
add
inc
inc
insb
pop
lret
insl
pop
lahf
adc
ljmp
subl
test
add
loopne
pop
notl
fcmovne
fdiv
loope
fldl
xchg
ret
or
dec
or
in
mov
push
push
stc
pushf
je
push
sbb
mov
jbe
in
jbe
repz
outsb
inc
enter
nop
mov
inc
shrb
inc
movsl
dec
push
jge
add
ficoms
pause
push
cmp
pop
shll
adc
jno
or
movsl
insb
push
mov
jb
sbb
sbb
imul
data16
cmpb
pusha
cmp
imul
xchg
rol
hlt
fbstp
push
add
scas
dec
pop
idivb
mov
sub
jmp
test
cmp
push
sub
adc
cli
scas
shlb
test
jo
mov
loopne
jb
and
pop
or
jno
dec
out
shlb
in
xchg
test
mov
cmp
psllq
mov
mov
movsb
data16
fcompl
push
addl
dec
mov
push
cmp
xchg
dec
add
sub
sub
movsb
in
dec
inc
ret
or
push
out
pop
or
jge
mov
adc
mov
jmp
test
xchg
mov
push
pusha
int3
flds
pop
cmp
jo
push
add
pushf
aad
dec
mov
pusha
cltd
cmc
adc
adc
rcrl
xchg
adc
adc
in
xor
or
test
lods
push
ss
sbb
sub
rolb
movsl
push
cmp
bts
pop
mov
push
cmp
jmp
les
call
push
mov
repnz
dec
cmp
fcmove
int3
sahf
cs
mov
sbb
gs
shrb
inc
push
inc
xchg
xchg
mov
pop
mov
cmpsl
lcall
adc
mov
lret
repnz
adc
adc
jl
lock
fcomps
aad
push
rcl
je
iret
mov
addr16
daa
mov
add
xor
icebp
popf
sub
lret
pop
adc
js
and
xor
jecxz
push
sbb
adcl
mov
cmpl
lock
ja
popf
mov
scas
punpckhdq
ret
sub
cmp
push
cmp
rolb
sti
test
jbe
or
scas
cmpsl
pop
mov
inc
sbb
repz
and
adc
push
aad
jp
push
push
insb
pop
lea
subl
call
cmp
sbb
add
lret
pop
jecxz
and
lahf
pop
cmp
pop
lds
cld
stos
mov
mov
repnz
cmc
sub
add
jg
dec
pushf
hsubpd
mov
dec
mov
or
repnz
jo
sub
ret
fs
push
push
cmp
clc
stc
jno
les
aam
cli
lret
mov
push
jno
fsubrs
mov
xor
lock
xchg
rcl
inc
mov
stos
add
xchg
sbb
inc
test
mov
push
adc
lods
loopne
xchg
ret
iret
in
add
sbb
sarl
adc
loope
or
dec
jae
shlb
leave
orb
rcr
push
jns
ljmpw
and
or
ljmp
cmp
mov
mov
jno
fcomip
or
mov
push
cld
jns
mov
cli
stc
pop
lcall
sub
paddsb
add
movsb
stos
iret
adc
in
and
jmp
in
mov
repnz
adc
pop
lds
out
lds
mov
ja
aad
jp
push
mov
mov
dec
cmp
in
das
movsb
mov
mov
ss
inc
decb
xchg
dec
mov
cmp
and
dec
lea
cmp
lods
dec
in
stos
ret
mov
mov
test
and
rorb
pop
lret
xchg
xor
arpl
jbe
in
in
adc
jns
sub
ret
dec
testb
pop
lock
cmp
xchg
adc
mov
adc
repnz
test
adc
mov
xchg
mov
xchg
fldenv
test
push
inc
push
insl
mov
jg
inc
push
das
daa
xchg
sbb
add
cmp
fsts
in
xor
push
ja
xor
insl
mov
lahf
aas
loop
nop
pop
lods
or
jb
push
out
sbb
push
and
mov
lods
jp
aaa
mov
test
jno
sub
ljmp
push
xchg
cltd
lds
test
xchg
xor
incl
adc
aaa
clc
aaa
and
arpl
xor
xor
std
dec
data16
adc
pop
inc
jo
xor
and
iret
xor
push
mov
icebp
lret
test
push
jb
dec
leave
cmp
mov
lret
sub
jle
adc
fwait
push
outsb
outsl
adc
mov
push
fsubs
sub
fildll
add
add
lods
pushf
push
mov
imul
add
fisubrs
push
or
xchg
call
pushf
mov
dec
jge
xor
adc
shrb
mov
cwtl
pusha
or
jae
pop
rclb
leave
scas
jns
mov
pop
int3
dec
imul
and
adc
out
iret
in
repnz
xorb
iret
sub
fildl
mov
xorb
xor
cmpsl
test
sahf
sub
mov
es
pusha
aad
mov
mov
loopne
lods
ret
rcll
nop
or
mov
adc
push
sub
shrb
aam
cmp
push
sbb
sbb
or
add
mov
cmp
pop
cmp
in
lock
dec
push
mov
mov
std
aas
in
mov
push
mov
sub
sbb
lock
mov
in
mov
fwait
cmp
adc
jns
mov
inc
mov
pmulhw
dec
rolb
test
jmp
les
adcl
xchg
xchg
shll
popa
fwait
sub
jl
repz
out
in
sub
add
lcall
inc
lret
push
movsb
cmp
cmc
imul
jle
in
dec
cmp
mov
lahf
push
filds
jle
adc
push
dec
jno
fldln2
push
sbb
mov
or
fistps
and
bound
lds
adc
push
add
inc
xchg
fistpll
data16
push
xor
scas
repz
loope
cmp
push
inc
call
pop
mov
aad
xchg
push
mov
imul
lock
fdivl
ret
push
minps
fwait
gs
push
jo
ds
es
mov
jecxz
xor
shll
cmp
cli
or
add
test
out
stos
push
js
cmp
je
fsubrs
xor
xor
sbbb
add
divl
sbb
inc
in
stos
mov
lcall
out
mov
and
xlat
push
scas
sub
and
out
das
std
cmp
scas
adc
out
and
icebp
cltd
dec
out
ret
xchg
pop
and
add
xchg
adc
or
inc
lret
je
mov
test
out
mov
jbe
sarb
sub
lea
cwtl
sub
pop
mov
idiv
es
push
outsb
mov
xchg
aam
ja
add
push
jecxz
fstpt
mov
inc
int
adc
and
push
adc
cld
jnp
sbb
mov
inc
fbld
xor
and
xchg
repnz
sbb
out
xchg
xchg
lcall
gs
lds
lds
or
dec
mov
cmc
jo
mov
adc
fmull
adc
pop
and
and
and
fs
fildl
mov
xor
dec
and
pop
outsl
adc
ret
inc
test
mov
bound
dec
addr16
sahf
call
inc
cmp
subb
or
push
addr16
icebp
inc
enter
cmp
clc
lret
cmp
lret
test
faddp
and
popl
sbb
fnstcw
ja
push
jg
hlt
mov
push
imul
repnz
xchg
jnp,pt
adcl
lea
lods
sbb
mov
add
ret
push
repz
jle
xchg
push
push
fs
dec
daa
in
sbb
xchg
push
cld
lahf
cmc
test
cld
test
mov
mov
clc
outsl
jmp
inc
inc
outsl
in
mov
sbb
and
and
inc
adc
jmp
stc
nop
mov
int
inc
xorl
lea
lock
dec
lock
dec
repnz
push
or
pusha
outsb
xorl
push
repnz
call
decb
popa
cwtl
push
mov
xchg
mov
push
push
mov
fsubrl
or
pop
fistpl
loopne
jb
lods
cmp
adc
push
inc
mov
out
outsl
ret
sub
and
stos
je
mov
xchg
jbe
in
js
jl
cmp
into
adc
dec
and
repz
scas
xchg
shr
xor
xchg
loope
add
cmp
or
sbb
lock
pop
popa
jne
outsb
loope
jge
push
mov
rorb
cmp
mov
xor
test
data16
bound
scas
push
ja
stos
mov
dec
mov
mov
lods
mov
adc
je
cmp
and
movb
pop
test
mov
sbb
roll
mov
addr16
inc
sarb
orb
jnp
fmul
add
scas
and
cld
lock
shlb
or
mov
jne
pop
mov
rcrb
out
mov
dec
je
jp
rcrb
das
ja
sbb
aaa
mov
push
push
jp
or
sahf
sub
or
loope
rol
jg
sbb
aad
adc
repnz
in
hlt
test
sahf
es
push
adc
xor
or
push
out
fwait
or
push
jno
xor
jne
imul
dec
dec
ret
ss
outsb
adc
mov
rclb
or
int3
hlt
movsb
cs
add
andb
or
cmp
jp
pusha
xchg
mov
outsb
cmp
lahf
movsl
inc
sar
sub
pop
xor
ficoml
adc
or
imul
divb
pushf
sbb
daa
sti
and
loopne
add
pop
sub
mov
sbb
leave
adc
xchg
dec
push
lret
cmc
push
mov
mov
cmp
pop
inc
and
mov
push
xchg
mov
push
sbb
popa
cmp
mov
mov
in
pop
fmull
fs
cmpsb
out
cmp
in
pop
enter
insb
imul
add
aam
sbb
stc
push
es
stos
lret
or
sbb
xchg
test
lods
pop
popa
ja
or
xchg
pop
pusha
iret
dec
mov
mov
in
add
lods
std
imul
mov
and
je
jecxz
out
or
cmp
ret
sar
jle,pt
into
xor
push
or
sahf
push
mov
sbb
sbb
dec
cld
mov
ljmp
and
add
imul
shrb
cs
jne
in
sbb
repz
add
fldl
outsb
pop
cmpsb
lods
in
mov
test
inc
fcoms
sub
push
fwait
scas
jmp
or
adc
jnp
inc
inc
rcr
rcrb
mov
or
xchg
popf
in
jl
ret
mov
mov
movsb
fimuls
xchg
mov
enter
repnz
jae
arpl
mov
ja
mov
inc
and
inc
cld
cwtl
sbb
frstor
xor
test
negl
loope
outsb
ret
pop
or
aaa
sub
cmp
jg
sub
int
cmpsb
out
jns
xchg
ja
scas
mov
sbbb
and
sbb
mov
inc
mov
rcrl
cmp
dec
mov
push
in
das
clc
add
imul
dec
test
xorl
test
sub
loop
call
adcl
pop
enter
add
in
mov
mov
inc
mov
pop
inc
pop
mov
sub
ret
jns
bound
aaa
dec
inc
push
or
sbb
stc
cwtl
cmp
imul
sbb
data16
cmpsl
jns
mov
and
les
mov
inc
xchg
mov
pop
cmp
cmp
mov
pushf
sub
ljmp
sub
add
inc
push
pop
add
cmpsb
pop
inc
fwait
mov
dec
aam
xchg
mov
pop
mov
xlat
rcrl
insb
xchg
xchg
mov
mov
loope
pop
stc
pop
sub
ds
shll
movl
pop
xchg
into
stc
insb
sbb
lahf
adc
adc
jmp
hlt
mov
jno
aaa
repz
enter
fcom
push
nop
lret
outsl
cmc
add
push
addr16
add
aad
aad
mov
pop
aaa
lock
add
or
dec
mov
push
imul
push
push
or
lret
mull
dec
mov
stos
je
les
es
aaa
out
sbb
repnz
mov
movsl
inc
pop
pop
push
and
and
push
sti
icebp
std
xor
mov
jmp
stos
cmp
je
hlt
cwtl
cmp
aaa
sbb
add
aaa
sub
jae
push
cltd
dec
mov
xor
cwtl
stos
jae
push
insl
insl
shl
out
sbb
jl
lods
mov
dec
inc
std
sub
int3
popf
stos
repz
jmp
shrb
xchg
loopne
repnz
test
jb
out
outsl
shrl
mov
mov
or
xor
int
cli
dec
pop
cmp
inc
dec
mov
push
scas
sbb
jge
lock
pop
leave
mov
and
mov
scas
rclb
lds
mov
sbb
scas
or
popf
jae
fisttps
pop
jmp
dec
adc
cmp
das
shlb
jbe
addl
iret
xor
out
aas
add
jle
cmpsb
mov
xchg
popa
hlt
iret
dec
cmp
cmpsb
stos
sahf
insl
push
push
lods
push
dec
push
ja
jecxz
scas
icebp
jmp
int
jp
cmp
mov
outsb
mov
sub
in
test
mov
pushf
xlat
enter
sub
sbb
scas
push
stos
mov
or
adc
xor
cli
out
pop
inc
arpl
arpl
sbb
das
push
fadds
sub
push
and
inc
add
cld
push
or
pop
push
int
sub
mov
adcb
imul
push
inc
sub
adc
imul
test
xchg
push
push
arpl
cwtl
fwait
mov
in
out
je
hlt
and
hlt
fstl
add
xchg
fs
ret
movsl
testb
or
mov
in
sbbl
enter
fists
sbb
shlb
fildl
in
cmp
dec
leave
inc
xchg
in
ret
inc
xlat
sub
mov
jne
sbb
lock
adc
subl
inc
out
ret
mov
add
hlt
jp
xor
ss
cmpsb
push
leave
dec
mov
loope
jbe
movsl
repnz
or
int
cltd
dec
int
adc
xor
scas
pop
std
xor
mov
fadd
icebp
jbe
sbb
push
jmp
adc
mov
pop
or
mov
stos
das
pop
stos
bound
mov
icebp
stc
dec
adc
or
sbbb
mov
call
cli
pop
sbb
loopne
or
ret
xor
inc
ljmp
and
loope
add
nop
sahf
sbb
cmpsl
aaa
adc
rolb
push
pop
lret
or
cmp
mov
or
test
mov
inc
add
pop
bnd
inc
fists
ja
daa
jo
ffree
mov
adc
bound
jmp
mov
pop
pop
sti
clc
add
andb
xchg
or
or
mov
jae
ss
outsl
jae
arpl
add
dec
dec
sub
xchg
je
add
pop
add
loopne
lods
out
jne
adc
stos
fstps
fsub
fstp
push
insl
xchg
subl
cmp
sti
push
mov
test
loope
jg
dec
sub
mov
fistps
sbb
xchg
mov
xor
popl
or
dec
nop
sbb
xchg
mov
or
cld
jnp
mov
iret
lds
leave
imul
imul
stc
cld
dec
push
cli
ljmp
push
repz
shll
sub
inc
rcll
outsb
mov
cmp
pop
pop
imul
leave
dec
inc
leave
nop
jl
inc
lds
pop
shll
xchg
ffree
lds
mov
notb
dec
nop
outsl
cmp
jmp
dec
add
cmpl
sub
cmp
and
scas
sub
imul
scas
nop
out
push
push
adc
mov
or
leave
inc
rorl
out
out
aaa
shlb
adc
mov
fs
sbb
add
xchg
add
jmp
mov
pop
icebp
inc
and
dec
dec
imul
mov
sub
in
jbe
adc
push
imul
js
push
mov
gs
fdivl
sarl
add
jb
call
jl
stos
je
imul
ffreep
ret
dec
push
jnp
sbb
pop
adc
fdivl
jo
xchg
push
leave
mov
ds
daa
movl
es
xor
insl
add
ljmp
sarb
jo
sbb
add
mov
stc
bswap
and
shl
jae
inc
cs
test
or
cmp
adc
mov
push
or
sbb
pop
in
test
jns
dec
inc
imul
dec
loope,pn
aam
or
cmp
mov
mov
pop
into
icebp
das
inc
or
jecxz
lds
pusha
pop
push
cmpb
ja
xchg
xchg
daa
aaa
iret
arpl
daa
popa
int3
add
push
lahf
loop
dec
mov
repnz
stos
ret
add
lods
shr
jnp
shl
cmp
xor
cmp
enter
and
aam
mov
or
adc
loope
icebp
test
inc
lds
repnz
stc
enter
jl
out
rcr
and
adc
adc
pop
cmp
jecxz
out
roll
inc
adc
xor
xor
nop
clc
ss
lret
iret
xor
adc
in
stos
fisubrs
push
cli
push
push
mov
jno
test
inc
fiaddl
test
adc
jg
mov
jnp
ljmp
adc
push
hlt
hlt
dec
mov
sub
mov
adc
mov
or
cmp
into
mov
popf
pop
addr16
mov
fwait
pusha
or
inc
jecxz
sbb
psubw
cltd
and
jo
test
or
inc
jb
sbb
mov
fdivrl
pop
cmp
out
leave
pusha
pop
mov
call
popa
xor
cmpsl
jns
pop
fwait
mov
mov
xor
int
mov
inc
xchg
js
in
push
inc
mov
rclb
mov
xchg
mov
inc
mov
sbb
sbb
push
pop
mov
xor
cmp
out
fs
out
xchg
iret
xchg
outsl
jl
mov
in
mov
js
xor
dec
pop
mov
pop
les
adc
aad
jbe
or
out
xchg
mov
cmp
add
mov
xor
insl
xor
dec
sahf
cmp
fldl
icebp
imul
stc
push
test
sub
lcall
std
jg
lock
mov
sarl
xchg
sti
out
jle
mov
out
loopne
cmp
es
add
mov
push
aad
sbb
pop
add
push
pop
sub
into
push
out
pop
xor
jge
jmp
outsl
xor
mov
call
test
push
or
and
pushf
jbe
out
es
xor
or
ret
jbe
les
jno
lock
aam
popa
data16
cld
pushf
in
mov
aaa
xchg
enter
cmpl
jmp
sar
fst
mov
jae
into
lods
sbb
jne
fsts
lods
gs
xchg
xchg
mov
mul
push
xchg
cmp
testl
or
xor
imul
les
mov
dec
dec
aaa
je
xchg
jno
jmp
pop
push
stos
mov
pop
mov
cmp
dec
out
dec
jns
bound
mov
outsb
cmp
add
sbb
out
leave
push
fwait
scas
or
ret
mov
in
cmpsl
or
push
dec
aad
pop
insb
dec
mov
inc
cwtl
mov
push
insl
and
pop
dec
mov
xor
std
cwtl
nop
jp
mov
mov
loope
movsb
xor
adc
or
les
out
xchg
dec
mov
mov
shrl
lods
jns
fidivrs
sub
xchg
inc
inc
es
cmp
push
inc
bound
xchg
rcll
mov
or
inc
xchg
xchg
testl
aas
cwtl
ja
add
in
fistpl
push
fdivrl
sbbb
repnz
sub
dec
notb
push
jno
cmp
jae
arpl
cmpsb
push
xor
pop
jg
cmpsl
push
and
bound
adc
scas
gs
jb
cld
cmp
inc
daa
add
popa
mov
mov
jge
or
nop
cmp
daa
cwtl
mov
mov
lods
xchg
loope
popf
aam
in
out
movsl
or
xchg
fdivl
test
js
sbb
lods
fisubl
jb
lods
xchg
cld
cmp
mov
lods
repnz
cmpsb
and
add
in
loope
addr16
adc
pop
hlt
in
add
pop
add
xor
repnz
popf
gs
test
cmp
push
insl
adc
sbb
and
inc
lahf
sub
fbld
fmuls
jmp
and
push
mov
mov
shll
mov
sub
mov
test
jge
xchg
push
cmpsl
in
lds
leave
mov
or
sbb
pushl
out
mov
cld
push
add
sub
ds
mov
push
out
jbe
inc
sbb
testl
mov
pushf
xchg
inc
jp
shlb
hlt
pop
adc
push
xor
or
inc
jecxz
int
jmp
je
xchg
adc
or
sbb
cmp
pop
mov
pop
ljmp
jne
mov
inc
repnz
test
xchg
rcl
sbb
mov
int3
test
popf
in
jo
shrb
jmp
mov
mov
and
out
pop
pop
sub
pop
push
jne
or
sub
or
or
or
out
mulb
cwtl
xor
push
xor
pop
movsl
or
sbb
dec
jb
aam
mov
mov
lds
push
fs
mov
mov
xchg
pop
pop
push
gs
mov
xchg
lods
cltd
data16
dec
imul
and
jns
xor
and
popf
mov
xchg
lret
lock
push
pusha
inc
je
mov
test
push
mov
sbb
xchg
cmp
jmp
mov
mov
scas
inc
sbb
jne
xor
sti
or
xor
add
andb
cltd
hlt
dec
xor
push
pop
sbb
mov
xchg
xchg
jmp
inc
xchg
xchg
push
and
fisubrl
mov
enter
addb
and
clc
xor
orb
mov
xchg
stc
int3
mov
out
and
clc
cwtl
cld
insl
pop
pop
jl
cmp
test
mov
hlt
jbe,pt
jge
shlb
idiv
mov
jmp
sub
pop
dec
aaa
jg
jg
xchg
loopne
pusha
mov
repz
lcall
and
jb
push
xor
rclb
inc
and
push
adc
sahf
add
adc
in
movsb
push
mov
insl
in
push
cmp
int3
fyl2x
int
jnp
lods
mov
stc
imul
insb
in
sbb
push
lock
inc
hlt
das
fstps
jmp
adc
pop
mov
push
icebp
xchg
jae
cltd
push
cmp
adcl
test
out
movsb
push
cmp
jg
pop
dec
cld
adc
ret
popa
imul
or
test
fidivrs
jge
mov
repnz
sub
jge
bnd
mov
jo
hlt
mov
hlt
sub
sbb
push
sbb
out
sahf
int
push
cmp
call
scas
idivl
xchg
and
jmp
mov
fwait
or
sbb
xor
out
std
loopne
xchg
stc
push
mov
lahf
push
jns
dec
loopne
pop
cmp
push
test
popf
xor
mov
cli
call
xchg
ljmp
in
cmp
out
mov
ja
ret
pushf
push
fbld
insb
add
or
mov
imul
shll
iret
test
movsl
lods
mov
xorl
daa
cltd
xor
mov
out
pop
sub
in
inc
mov
mov
add
or
fs
sti
clc
sub
mov
int3
dec
repz
ret
mov
mov
cmp
cmpsl
sbb
stos
pop
js
or
dec
sbb
xor
test
mov
sub
cltd
mov
int
lret
xchg
adc
mov
jbe
jae
mov
sub
in
stos
add
jae
ror
push
lea
inc
jg
dec
mov
in
loope
enter
stos
push
add
in
jno
scas
pop
or
fildll
xor
jbe
xorl
and
icebp
movsb
cmpsb
inc
jmp
shlb
pusha
xchg
mov
loope
adc
cmp
cwtl
inc
and
adc
data16
add
dec
js
mov
cmp
adc
iret
std
out
lret
out
sub
or
cld
mov
xor
ljmp
mov
mov
pop
popa
mov
jmp
add
daa
or
inc
outsb
pop
adc
out
pop
mov
pop
pop
xlat
push
ljmp
das
incl
mov
push
lods
popa
xor
sub
dec
cs
cmp
jmp
test
imul
dec
add
insb
daa
and
sbb
push
adc
dec
in
loopne
jmp
jmp
adc
mov
fnstenv
sbb
scas
sbb
test
pop
out
mov
lods
mov
fldenv
pop
out
mov
fisttpll
mov
fs
pop
push
fwait
adc
mov
pop
and
xor
mov
in
add
daa
xchg
xlat
sbb
cld
test
scas
add
and
int3
sahf
out
adc
mov
push
out
lods
outsl
add
mov
sub
mov
ja
fcompl
cmp
push
popf
push
inc
data16
pop
sbb
jae
loope
lcall
insl
sub
in
cs
adc
fwait
test
or
sbb
adc
pop
xchg
outsb
daa
loop
fmull
cmp
jg
out
jge
imul
push
add
xchg
mov
fstl
cmc
repz
movsb
mov
jb
xchg
sbb
data16
mov
js
or
push
or
ljmp
shlb
aas
call
adc
cmp
push
or
xchg
cmp
mov
lret
lods
mov
xorb
cld
add
adc
pop
sti
push
sbb
rolb
je
and
adc
pop
leave
leave
leave
add
cmpsl
jns
push
in
mov
lock
mov
scas
xor
mov
dec
movsb
cmp
dec
cmp
jle
or
cld
jb
fadds
adc
jl
cmpb
fwait
inc
or
sub
mov
xor
orb
pop
and
test
outsb
push
shrl
icebp
enter
rcl
sub
jbe
bound
ret
mov
cmc
mov
xchg
loop
mov
cmp
fsubl
mov
xorl
in
inc
leave
lcall
sub
mov
jo
push
dec
nop
inc
nop
aam
cltd
fnstenv
adc
jp
adc
out
loope
or
pop
xor
jo
mov
inc
inc
or
cld
call
mov
clc
add
ficompl
cli
and
jne
addr16
fidivrl
and
pop
xor
push
stc
sbb
xchg
pop
push
jecxz
and
xor
daa
jmp
mov
and
ja
or
mov
icebp
xor
mov
and
outsl
movsb
jecxz
push
mov
jl
and
push
mov
dec
fisttpll
add
fistpl
cmp
int3
rclb
inc
in
mov
rorb
int3
iret
int3
add
dec
cltd
add
stc
movsl
scas
and
dec
jo
aas
cltd
mov
int3
push
sub
leave
inc
sbb
lds
push
push
mov
lahf
mov
inc
popf
jmp
fwait
pop
xchg
pop
test
xor
sub
and
push
mov
xor
rcrl
movsb
pop
mov
test
je
sub
loop
add
loop
and
push
ljmp
or
ljmp
inc
aas
add
pusha
pop
lock
daa
fisttpl
xchg
lods
pop
lretw
sub
inc
and
pop
fcomp
hlt
pop
adc
into
jl
inc
fldt
pop
shl
fdiv
sbb
inc
mov
push
push
pusha
inc
adc
dec
into
in
test
xchg
or
out
xchg
cmp
roll
dec
push
or
push
mov
push
fldcw
xor
test
jp
cltd
call
xor
cmpsl
ret
mov
inc
and
mov
push
addr16
fucom
sbb
jbe
sub
xor
jecxz
ja
mov
scas
ds
add
int3
push
fimuls
dec
sbb
in
jge
subb
std
lret
ja
cmpsl
fisttpl
jle
sbb
mov
cli
movsl
adc
mov
sub
int3
jns
dec
push
adc
push
ds
bnd
jno
lock
cs
cmp
push
fistpl
mov
jp
xchg
inc
mov
push
cltd
add
jge
dec
add
mov
ljmp
sbb
mov
pop
pop
mov
cmpsb
mov
dec
jne
hlt
dec
or
mov
ret
and
mov
in
js
push
xor
and
jmp
test
fnstsw
mov
mov
push
test
cmp
das
imul
push
mov
test
mov
aad
into
cmp
test
sbbb
arpl
enter
enter
sbb
fimull
mov
out
mov
scas
sbb
outsl
and
scas
icebp
push
jl
jne
cmpsb
mov
jno
xchg
jl
sub
mov
adc
dec
outsl
sub
in
vpshlb
cs
stos
mov
cmpsl
sub
js
push
pop
movsl
pushf
adc
and
dec
lock
adc
fsubrs
imul
loope
and
push
xchg
lods
mov
insb
add
test
xor
jns
divl
inc
xor
and
dec
std
sbb
movsb
pop
in
fmuls
pop
xchg
loope
out
lret
inc
pop
xor
in
jp
fs
push
push
and
or
mov
sbb
mov
dec
sub
nop
pop
lea
into
push
mov
arpl
jns
xchg
lahf
daa
xor
mov
sub
loopne
pop
and
mov
inc
add
mov
test
aam
add
xchg
mov
cmpsl
mov
lods
mov
repnz
mov
aam
push
fsubrs
loop
adc
loop
in
mov
scas
xchg
push
sub
push
xchg
scas
mov
xchg
into
hlt
push
ret
pop
frstor
shrl
aam
test
mov
scas
mov
sbb
inc
jbe
sub
cmp
aam
shrb
gs
xchg
test
insb
cmpsb
and
cmc
fists
ljmp
jge
insb
cmc
cmpsb
pop
lahf
push
aas
xorb
pop
mov
lods
ds
int
adc
adcb
nop
pop
loopne
loopne
inc
andl
leave
or
push
xchg
lret
jmp
xlat
rorb
add
call
mov
sub
push
flds
insl
push
mov
push
lahf
adc
sbb
inc
pop
push
xor
subl
into
sub
loope
inc
pop
icebp
jle
inc
dec
mov
inc
adc
adc
sarb
rcll
notb
aaa
or
jl
movsb
push
int3
push
xor
ja
cmc
rcrb
sahf
mov
gs
mov
jae
push
leave
xchg
add
bnd
cwtl
shr
data16
sbb
lcall
cmp
add
dec
xor
or
mov
mov
in
lahf
scas
inc
clc
fs
cmp
outsb
insb
xchg
into
out
out
movsl
jns
push
inc
pop
lods
xchg
loop
out
xor
rolb
jne
adc
ljmp
cmp
into
aam
sbb
sti
lea
xor
add
vmwrite
mov
cwtl
test
jno
mov
xchg
xchg
lods
jl
inc
sub
iret
dec
jae
dec
mov
mov
xchg
pop
fwait
dec
push
jnp
mov
repnz
dec
jge
movsb
xchg
pop
lea
push
dec
rcrb
pop
jg
add
or
inc
pop
pop
lds
lret
mov
mov
lcall
sub
fs
jb
mov
imul
jo
and
add
dec
fcoms
push
int3
inc
push
inc
in
mov
mov
in
inc
rorl
cltd
xor
dec
aam
jp
inc
out
dec
lret
sbb
jmp
ja
mov
out
out
jno
xor
sub
dec
pop
repz
outsl
in
push
movsb
mov
push
cld
icebp
in
mov
or
imul
std
fnsave
insl
pop
ret
repz
cld
pop
or
jns
and
inc
sbb
mov
mov
add
stos
mov
insb
cmpsb
pop
pop
test
mov
xchg
adc
arpl
push
imul
mov
nop
and
test
dec
mov
mov
push
cwtl
add
mov
popf
xor
mov
jo
and
pop
idiv
pop
push
pusha
je
dec
ljmp
add
push
xor
fidivrl
mov
rcll
popa
scas
movb
pop
rolb
lds
mov
stos
and
and
js
shl
jae
xchg
iret
movsl
push
jae
mov
stos
movsb
or
enter
test
xchg
rclb
dec
mov
aad
cmc
loope
sub
out
sbb
inc
dec
fsubp
inc
mov
cmp
inc
jmp
in
dec
mov
inc
xor
cmp
lods
call
mov
xor
std
adc
add
jae
cmp
inc
jmp
test
clc
sbb
insb
xor
jnp
test
sbb
inc
jae
movsb
pop
loopne
adc
sbb
scas
pop
dec
bswap
pop
push
dec
repnz
fisubrl
mov
lds
or
xchg
daa
xchg
dec
and
mov
push
push
pop
dec
sub
jmp
roll
cmp
or
nop
aam
sub
mov
push
mov
fidivrs
mov
pushf
je
pushf
imul
jp
push
addr16
xchg
leave
notl
mov
push
cmp
sub
mov
int3
pop
mov
push
bnd
ret
les
test
rcr
mov
mov
int
call
mov
sarl
mov
cmp
sub
pop
andl
mov
jo
loop
ja
std
add
sub
cmp
test
stos
fcomps
fdivs
mov
scas
stos
mul
stos
iret
daa
inc
repnz
les
adc
sub
pop
sbb
inc
pushf
jmp
in
sbb
mov
inc
daa
lret
inc
mov
mov
and
dec
aas
in
push
aas
stc
repz
out
cmpsb
stos
sub
inc
sub
ja
push
xchg
pushf
and
ret
adc
xchg
cmpsl
ret
xor
pop
cmpsb
cmp
cmp
test
and
jb
clc
rcl
pop
or
dec
aas
jne
mov
cmp
mov
mov
pop
sti
pop
add
mov
and
mov
inc
roll
sbb
call
pop
stos
pushf
lcall
fmuls
pop
or
fiaddl
push
lock
cmp
cltd
mov
and
je
and
scas
call
aam
sbb
mov
bound
test
or
jl
cli
push
mov
lret
xor
loop
inc
fsts
sub
jmp
xor
rclb
aaa
lock
jge
push
fadd
inc
lea
jl
loopne
imull
sub
insb
loopne
push
sbb
xchg
dec
xor
scas
out
cltd
and
xor
add
dec
inc
sbb
push
mov
pop
ds
jl
pop
sub
jl
into
xchg
popf
mov
mov
jae
aaa
rclb
inc
xchg
in
mov
and
fsubs
mov
in
mov
rcl
outsl
xorl
movl
ljmp
mov
ss
imul
repz
jae
mov
or
in
sub
sarb
ljmp
sub
xor
inc
int3
mov
cld
adc
mov
rorl
mov
jmp
fadd
jmp
cmc
push
out
push
lods
out
inc
enter
jno
sbb
test
mov
adc
add
add
mov
jmp
shrl
ret
ret
push
jb
imul
mov
mov
pop
filds
insb
leave
dec
aaa
stos
mov
stos
addr16
test
imul
imul
add
mov
rcr
das
pushf
xor
fisttps
xor
adcb
adc
dec
aas
clc
lds
push
enter
and
jae
sbb
mov
pop
cmpsb
std
add
fs
imul
mov
push
shrd
cmp
jno
and
bound
loopne
push
imul
shrl
in
pop
pop
mov
jb
jae
sbb
jns
dec
cmp
outsb
jp
cld
out
mov
xchg
fnsave
mov
mov
mov
cmc
std
iret
pop
mov
sbbb
xchg
sub
pop
inc
frstor
fs
dec
dec
rcll
push
or
aas
fcmovb
dec
sbb
gs
or
pusha
repz
mov
lods
pop
mov
add
inc
mov
insl
mov
pop
xorl
xchg
push
dec
push
sub
in
movsl
call
xchg
and
fcompl
sub
pushf
es
into
in
mov
in
xchg
scas
mov
scas
fwait
sbbl
es
xchg
lds
xor
mov
push
lods
insl
rolb
push
adc
push
arpl
push
mov
lret
xlat
push
push
std
jmp
ret
in
mov
mov
jecxz
cli
dec
lea
push
dec
rorb
pop
adc
shlb
bound
mov
in
loopne
mov
add
testb
adcw
loopne
shrl
or
push
xlat
cmc
mov
adc
test
push
rcll
popf
xor
and
test
outsb
lods
insb
fldcw
sbb
add
cmpsb
sti
mov
inc
mov
pop
jl
insb
push
mov
fwait
add
popa
jne
mov
sti
aaa
jp
and
xor
movsb
insb
sub
es
divb
popf
fwait
sub
aam
mov
xor
pop
lcall
add
pop
xchg
push
push
adc
pop
nop
and
push
sahf
push
sbb
dec
xor
add
cmp
stc
lock
add
cmp
inc
push
das
sti
fimuls
push
pushf
mov
xor
inc
test
dec
adc
dec
nop
or
fwait
jb
push
sub
int
dec
jno
jno
je
and
xadd
ret
mov
mov
popf
cltd
mov
fnsave
fcoml
pop
test
xchg
rorb
movb
ja
jle
push
inc
fnstsw
sub
fwait
pop
and
adc
and
jno
ljmp
push
and
inc
test
mov
xchg
mov
imul
cmpsb
cmpsb
inc
inc
arpl
mov
jbe
cmp
cmp
jge
les
cmp
inc
movsb
cmpsl
cmp
pusha
rcrl
inc
fistps
cmp
dec
push
ss
outsb
xchg
loop
xchg
sbbl
test
es
sbb
pusha
mov
push
psrlq
pop
sub
loope
and
push
mov
nop
lods
cmp
pop
cmp
xchg
xor
fadd
mov
arpl
pop
fwait
cmp
scas
cmp
clc
mov
leave
jmp
aaa
rcrb
shrb
cmp
and
rorl
mov
sbb
sti
push
cmc
pop
sbbl
mov
fimull
adc
jne
mov
cmp
or
or
mov
mov
hlt
mov
popf
mov
lods
dec
xlat
pop
inc
lret
roll
mov
out
pop
and
cmp
inc
test
arpl
or
mov
in
pop
or
xor
xchg
and
and
jl
or
loop
dec
sub
mov
insl
addb
lea
xor
cli
es
pusha
lahf
or
sub
fsubrl
inc
shufps
cmp
jecxz
jmp
jnp
dec
repz
and
mov
out
test
rol
mov
incl
push
cmpsb
es
subl
pop
dec
ficomps
les
lcall
gs
pop
pop
lgs
sbb
aas
in
mov
aaa
jge
and
mov
stos
lea
aad
andl
fdivrp
in
pop
adc
sbb
fisttps
das
sbb
dec
sti
dec
inc
aad
lea
jp
pushf
iret
sub
xor
sub
and
jb
in
lea
jbe
xchg
cmpsb
adc
jbe
sbb
pop
xchg
scas
ljmp
cmp
sarl
or
jle
and
mov
push
imul
into
in
sbb
movsl
es
bound
add
fdivr
loop
push
and
outsb
scas
stos
xor
mov
pop
inc
mov
push
aaa
xchg
lret
lret
adc
inc
insb
jno
sub
out
xabort
scas
push
sbbb
in
sbb
mov
fsub
dec
out
push
add
roll
lretw
mov
in
jmp
pop
push
pop
dec
scas
gs
pushf
inc
mov
rcll
movl
insb
divl
mov
ret
scas
lea
mov
in
and
push
imul
loope
lcall
dec
pop
call
stc
lahf
cs
xor
xor
sbb
lahf
cmp
push
mov
loopne
stc
lahf
inc
jb,pt
fidivrl
adc
inc
out
leave
rcll
dec
sbbl
sbb
mov
mov
call
push
cmp
add
inc
lods
jg
or
jecxz
xor
loop
ss
cmp
pop
and
mov
lcall
or
or
cs
sub
mov
je
ret
push
enter
out
movsl
sahf
xchg
inc
addr16
cmp
or
mov
andb
sbbl
or
loopne
sbb
pop
sti
leave
jb
xor
dec
mov
add
les
and
sbb
je
cmp
out
pop
pop
mov
ss
jb
adc
cmp
lret
cmpl
iret
pop
cmp
push
orl
stos
insl
js
lods
loop
mov
out
mov
jne
out
xchg
les
repz
mov
and
adc
test
fildl
frstpm(287
cmpsb
ljmp
lea
xchg
aas
jns
cwtl
jmp
ss
cmpsb
push
sahf
sbb
insb
les
iret
sbb
rcrb
push
es
icebp
addr16
int
xchg
pop
out
je
mov
lret
sub
sub
jg
sahf
jne
dec
mov
dec
loope
call
sub
test
rol
jl
lock
test
frstor
sub
lock
cltd
add
xchg
stos
mov
push
dec
popf
cwtl
scas
push
lds
mov
xor
popa
cmpsb
pop
dec
fisubl
push
fincstp
dec
mov
cmp
andb
mov
lahf
psubsb
xor
ret
repz
xor
shl
sahf
lock
fstl
mull
add
xchg
adc
mov
jmp
imul
jge
pop
xor
jge
cli
lahf
jl
jae
add
jecxz
xchg
fiadds
cmpsb
stos
fcoml
xchg
cld
xor
jge
mov
lods
push
cmpsb
jne
jae
and
dec
pop
cmp
ret
add
movsb
lds
scas
aad
gs
and
or
in
cmp
jbe
sbb
jnp
andl
add
orl
enter
aad
sahf
inc
push
mov
dec
pusha
inc
fwait
ss
pushf
imul
jo
push
aas
std
push
jb
dec
sbbb
jno
movsb
mov
and
lods
and
cmpsl
jno
fsubrp
mov
ds
adc
ja
js
cmp
rcrl
xchg
in
dec
aam
fldl
xchg
cld
fimull
sahf
jmp
xchg
xchg
rol
daa
insl
aad
shlb
pop
ljmp
jb
mov
out
mov
pop
mov
jecxz
mov
dec
adc
push
xchg
sti
mov
loopne
in
adc
adc
popf
in
mov
popa
push
sub
pop
mov
add
lock
xor
mov
mov
xchg
ljmp
push
test
scas
mov
gs
push
adc
ds
pop
or
rcrb
fstps
lret
fimull
lods
sbb
inc
in
add
push
dec
mov
cmp
push
cmp
shll
sbb
sub
cmp
adc
cwtl
inc
cwtl
and
xchg
sub
std
fwait
rcr
and
xchg
cmpsb
mov
mov
add
call
notl
inc
test
loope
fisttpll
cs
ja,pt
dec
jb
rcl
loope
lret
mov
dec
es
fs
test
mov
cmpsb
test
in
shll
dec
lret
fisttps
outsb
push
and
mov
jl
jle
cmp
xor
mov
add
aad
cltd
test
aas
ffree
jb
mov
sub
pop
sahf
test
jae
test
xchg
sub
enter
xor
push
addr16
sahf
jmp
and
inc
or
sbb
ja
xor
inc
mov
jae
aaa
jns
and
ss
sahf
cltd
in
xor
pop
push
lods
xchg
jns
pop
push
push
inc
negb
stos
jns
in
cltd
data16
les
out
xor
xor
out
or
out
add
inc
enter
xchg
cmpb
xchg
mov
push
shll
push
fmul
sbb
mov
das
jge
cmp
stos
pusha
popa
mov
jae
out
push
add
mov
push
ljmp
mov
xorb
lret
imul
ljmp
aas
adc
rcrb
pop
xlat
cltd
out
loopne
in
rolb
cmp
adcb
cs
mov
or
repnz
imul
repz
loopne
mov
push
or
dec
xchg
xchg
mov
jne
faddp
or
mov
push
mov
mov
push
fnstcw
mov
xchg
xchg
xchg
sarl
push
push
iret
nop
ret
xchg
jne
sahf
inc
mov
mov
mov
mov
cs
jns
test
out
into
mov
xor
pop
repnz
or
lcall
pop
sub
roll
inc
add
aam
add
icebp
xlat
and
xor
mov
mov
ret
pop
add
dec
sbb
jge
xor
or
daa
lea
popa
mov
mov
cmp
jo
sub
sbb
pop
or
mov
push
cmp
pop
cs
xor
mov
cmp
add
xor
or
dec
xchg
popf
mov
cmp
push
fmulp
popa
test
mov
cltd
cmp
aaa
dec
xchg
popa
mov
in
pop
jl
test
mov
fcmovnb
hlt
fisubrl
mov
pushf
or
dec
jl,pn
dec
shl
add
mov
test
sub
lods
stos
cmp
movsb
rcrl
neg
in
pop
mov
adc
xor
pop
jno
xchg
and
iret
adc
sub
in
loope
filds
jmp
pop
cmpsl
lcall
adc
sub
or
add
movl
mov
push
push
adc
lret
jo
lcall
push
pop
xchg
pop
jle
push
daa
push
mov
ss
ja
int3
fnstsw
jno
mov
push
vunpckhps
add
sti
das
pop
push
xlat
push
pop
and
sbb
mov
fisubs
mov
xor
subb
push
lahf
adc
mov
push
xor
add
cmc
lret
xor
lods
ss
scas
loope
hlt
lcall
jne
and
js
mov
xchg
sti
jmp
and
mov
jo
aas
xor
sbb
imul
pop
cmpsb
cmp
push
insl
es
push
imulb
xor
mov
outsl
mov
sti
or
imulb
jno
insl
ficoml
mov
push
cmp
bound
filds
or
sub
fst
or
mov
rcrb
push
mov
sahf
mov
inc
sub
lds
int
mov
and
ljmp
movsl
rclb
add
xlat
sti
pop
sub
roll
mov
mov
incl
setnp
dec
mov
dec
and
fisubs
sbb
mov
addr16
add
xchg
jle
push
push
xchg
mov
popa
sbbl
outsb
imul
adc
pop
mov
repz
cwtl
cmp
lock
sbb
ficoms
cmp
ja
xchg
rclb
stos
lds
pop
xlat
pop
xlat
xor
repz
cs
rcrb
jbe
mov
int
cwtl
push
pushf
mov
mov
std
movsb
add
sub
dec
sub
adc
in
ds
push
out
lar
call
push
push
subb
cmpsb
or
mov
clc
cmp
jg
syscall
pop
mov
rep
or
shlb
mov
jne
in
xor
xchg
out
rcl
jbe
pop
lods
faddl
mov
adc
out
cmp
push
cmc
xchg
into
pop
cmp
leave
ret
int3
add
ja
gs
add
mov
dec
cmp
cld
ja
icebp
aaa
xchg
movsl
jbe
mov
into
inc
inc
lahf
lret
cmp
push
pop
rol
dec
mov
mov
hlt
sbb
sahf
push
fbld
or
fstpt
xlat
mov
sbb
sbb
das
call
adc
dec
stos
data16
loopne
adc
rcrl
pusha
stos
jne
mov
xor
xor
add
out
mov
mov
jno
das
sbb
push
mov
and
in
out
outsb
nop
pop
lea
inc
fmull
cmp
js
ds
sub
ret
and
and
adc
sub
aas
sub
mov
ficompl
mov
mov
fs
cli
loop
xchg
dec
jb
xor
mov
sub
xchg
mov
pop
jnp
cmp
fdivl
in
test
test
inc
adc
andb
insl
inc
adc
jge
xchg
and
mov
dec
arpl
imul
aas
and
leave
add
push
cltd
dec
or
pop
add
xor
mov
push
filds
pop
stos
and
mov
sbb
pop
pop
mov
adc
jl
mov
inc
dec
je
or
shll
out
ret
sbb
inc
imul
jns
ja
ss
fcompl
loopne
loop
dec
sahf
cmc
dec
and
cs
int3
vandnpd
shl
in
push
les
std
inc
pushf
out
inc
test
sub
mov
dec
inc
test
idivl
loope
push
adcb
in
int
push
jecxz
pop
push
push
jb
pop
lea
pop
lock
jns
cmp
sbb
mov
cmpsl
cmp
mov
mov
scas
divl
iret
cmpsl
and
out
and
scas
hlt
and
mov
adc
cmp
in
in
add
pop
mov
in
and
lock
sbb
clc
jp
in
and
cltd
cmpsl
xchg
popf
into
je
test
test
jnp
sbbl
jmp
push
dec
cmc
rolb
mov
inc
jp
in
add
ret
pop
fidivl
cli
xor
sub
enter
dec
push
into
nop
xchg
push
ss
jmp
jb
ror
pushf
dec
hlt
mov
mov
fcoml
mov
pop
out
mov
mov
stos
adc
xchg
mov
in
mov
mov
cmp
push
dec
lods
lods
dec
rolb
lret
orb
push
gs
pop
sub
mov
js
mulb
gs
ljmp
cld
insb
sub
pop
test
push
add
sti
jle
or
pop
mov
sub
sbb
add
fisubrs
pop
inc
fiaddl
or
sbb
movsl
shl
pushf
and
das
out
dec
enter
ds
sbb
fsts
lret
and
popl
int3
push
stos
add
imul
je
adcb
imul
inc
fadds
negl
sub
xchg
test
popf
rcrl
xor
xchg
dec
in
add
push
dec
pop
xchg
arpl
push
lods
jge
push
imul
ja
in
cltd
in
jmp
and
pop
mov
out
fsts
and
mov
hlt
sub
aam
jne
inc
aaa
outsb
mov
mov
nop
adc
pop
cmp
fistps
and
mov
sbb
xchg
imul
lahf
jo
cmp
into
fwait
mov
dec
fcmovnb
loope
ficompl
hlt
xchg
or
fsubrp
inc
stos
push
fwait
ljmp
xor
in
jl
mov
enter
xor
pop
mov
in
insl
cmp
xor
dec
jge
std
or
jns
jns
stc
std
scas
mov
sub
and
sub
dec
aas
iret
pushf
mov
push
enter
sbb
mov
push
cmp
adc
or
pop
cmpsb
ret
frstor
aam
fcmovne
inc
or
mov
sub
aad
xor
xchg
push
aad
xchg
mov
sbb
sti
jbe
mov
pop
jp
and
mov
shrl
and
sub
mov
push
mov
repz
imul
nop
into
sub
add
bound
sti
nop
stos
pop
frstor
lods
cld
xchg
sbb
mov
lock
andl
cld
icebp
iret
sbb
and
xor
mov
add
add
xchg
movsl
push
and
jp
rclb
popa
aam
sub
pop
out
jb
cld
lds
mov
mov
in
aad
stc
imul
rol
cli
rcrl
mov
fwait
push
leave
test
mov
loopne
and
stos
push
mov
lcall
cmp
xchg
or
insl
pushf
xchg
fs
adc
gs
fsubp
lret
mov
in
adc
daa
enter
or
fistpl
xor
pushf
jecxz
scas
sahf
rolb
adc
imul
sahf
inc
lcall
and
fwait
sub
sti
fwait
sub
xor
fld
scas
pop
inc
add
test
push
adc
das
aas
andb
push
dec
dec
popa
lods
add
pop
aam
sbb
fldcw
gs
popf
add
loop
push
mov
xor
jnp
push
xor
push
rcrb
jo
adc
inc
xchg
scas
popf
pop
fwait
push
adc
dec
popf
dec
repz
clc
push
xor
or
std
lret
mov
fidivs
mov
pop
test
cmp
bound
mov
out
sbb
jle
andl
jnp
add
dec
rcr
jecxz
jae
sbb
dec
jnp
aaa
addb
xchg
jno
mov
movsb
lods
pop
jae
dec
mov
xor
jecxz
push
inc
sahf
fwait
or
sti
daa
jecxz
in
push
or
inc
xchg
stos
cmp
clc
inc
pop
mov
cltd
ret
xchg
inc
mov
adc
std
dec
cwtl
addr16
bnd
mov
sub
pop
inc
mov
stos
adc
stc
dec
loop,pn
sbb
jge
dec
inc
mov
ja
test
dec
jo
int
scas
sahf
and
icebp
cmc
xchg
push
adc
xchg
sbb
lea
lcall
pop
cmp
in
lret
enter
add
jne
jecxz
pop
sbb
push
addb
ja
dec
ss
pop
mov
insb
mov
mov
jae
push
push
xchg
push
jge
and
arpl
mov
pop
data16
mov
notl
add
xchg
lret
enter
sbb
gs
in
into
lds
ret
sbb
lahf
mov
stos
call
or
push
sub
test
cmpsl
ja
inc
dec
pusha
mov
les
push
adc
xchg
dec
addr16
int
adc
dec
loope
sbb
aam
jae
mov
adc
ljmp
lahf
pop
andb
fucompp
dec
jecxz
mov
lock
xchg
xchg
test
fimuls
sti
insl
addl
lods
adc
fnstenv
clc
mov
cmp
jbe
mov
ret
je
mov
cmp
push
add
imul
es
mov
arpl
xorb
and
int3
data16
lock
scas
pop
frstor
fistpll
jp
pusha
xchg
ficoml
cli
cmp
inc
ljmp
xchg
ret
dec
and
cmp
fwait
movsl
rorb
xchg
sti
jge
jl
into
test
add
adc
mov
imul
mov
imul
lods
hlt
dec
testb
loope
jbe
mov
inc
dec
scas
mov
push
pop
cmp
jecxz
fld
retw
jmp
xchg
jns
push
cli
xchg
pop
push
push
xor
into
jmp
mov
adc
pop
or
jmp
push
xor
mov
cmp
js
pop
ss
pop
aad
xor
out
xlat
dec
in
movsl
push
dec
add
out
push
pop
mov
jbe
cwtl
lret
in
shrb
adc
dec
inc
ret
daa
mov
mov
cmp
mov
sub
mov
xchg
push
sub
xchg
outsl
adc
add
mov
push
cli
fwait
cmp
pop
cmp
out
dec
leave
mov
aam
test
rcl
push
sbb
cwtl
push
adc
push
push
rcll
cmp
cmp
add
dec
adc
hlt
shrb
out
sbb
xchg
pop
sub
lret
scas
cmp
sbb
das
out
xor
pushf
pushf
jp
fisubs
sub
inc
adc
aad
in
nop
scas
ret
sbb
xlat
jnp
cwtl
push
je
inc
shlb
xor
repnz
jecxz
or
js
pop
add
fstl
xchg
xchg
mov
cmpsl
int3
filds
movsb
leave
daa
lods
or
mov
inc
xchg
push
add
jbe
mov
mov
xchg
xor
pusha
jae
inc
jg
push
push
into
or
cmpsb
jmp
xchg
jle
fsubl
xchg
push
pusha
nop
sub
pop
imul
insl
pop
fnsave
jmp
cmc
lret
adc
rorl
pop
sti
movsl
inc
lea
mov
insb
inc
popf
adcb
lahf
stos
out
push
fs
sbb
gs
aas
dec
jbe
inc
int3
rorb
mov
cs
outsb
mov
mov
popa
hlt
jl
cmp
push
jecxz
push
fdivl
idiv
dec
mov
dec
inc
mov
cs
sbb
imul
adc
in
xchg
cs
pop
xor
shll
loopne
cld
pop
addr16
hlt
xchg
ljmp
push
fstpt
aad
test
imul
lret
flds
lock
mov
jp
inc
pop
sbb
stos
lea
and
repnz
mov
jg
int
mov
adc
mov
mov
inc
and
jns
int
mov
sub
cmp
imul
push
push
mov
adc
jecxz
scas
test
cmp
test
push
add
sub
and
cmp
jnp
mov
xchg
adc
push
xor
rol
pop
adc
pop
pop
mov
jecxz
lahf
xor
dec
sub
iret
mov
outsb
jns
pusha
pop
inc
bound
sbb
jbe
xchg
pusha
imul
sub
and
mov
orl
fs
pushf
rcrb
call
mov
pop
pop
xchg
xor
mov
inc
xchg
jbe
adc
xor
mov
inc
push
sub
mov
mov
pop
push
inc
pop
sub
xchg
sub
cmp
sub
test
sbb
fildll
fwait
xor
fs
pop
jbe
out
mov
push
scas
cld
sbb
mov
stos
cmp
and
push
mulb
xchg
jecxz
mov
dec
xchg
imul
fnstcw
and
push
cld
xchg
jg
lret
pop
xchg
outsl
les
aaa
add
test
addr16
out
and
push
stos
mov
in
jnp
mov
out
push
scas
lea
adc
bound
clc
inc
pop
outsl
mov
inc
stos
push
mov
insb
xchg
xor
xchg
lods
sahf
mov
mov
scas
push
adc
ja
fdiv
sbb
cmp
sub
sub
aas
ss
mov
int
mov
subl
mov
arpl
dec
inc
pop
cmp
pop
jp
pushf
out
test
jbe
into
imul
xor
jecxz
shll
idiv
push
sarl
mov
nop
dec
lahf
or
jae
je
jmp
ret
int3
gs
xchg
aam
jle
and
push
xor
jbe
dec
pop
push
pop
je
mov
stos
outsb
inc
pop
cmc
pop
mov
push
icebp
inc
mov
dec
add
adc
sahf
pop
dec
loope
mov
notl
xchg
or
out
and
fcmovnbe
movsl
mov
sub
fwait
mov
pop
scas
jns
xchg
lret
pop
or
test
push
lods
jg
jae
or
push
iret
and
xchg
push
repnz
enter
fisubs
bound
pop
or
xchg
mov
and
stos
test
mov
pusha
addr16
jle
aad
clc
pop
ficoms
jmp
fildll
xchg
lret
out
and
mov
out
xchg
mov
lods
mov
outsb
test
push
dec
std
popa
jne
movsl
sub
xchg
movsb
or
push
adc
gs
sbb
lock
int
xlat
fs
dec
xchg
push
aam
jmp
pushf
xchg
and
leave
iret
sbb
ss
lret
pop
ljmp
mov
push
fnsave
or
fdivl
loopne
sbb
pop
aas
jno
ja
dec
add
mov
and
push
ret
jnp
cmp
popw
xchg
inc
subb
scas
push
imul
mov
and
dec
jnp
inc
std
movsb
fists
int
jns
gs
adc
roll
test
andl
mov
and
lcall
das
sub
dec
dec
insb
rcrb
lods
inc
int3
pop
arpl
in
jp
mov
lret
mov
sbb
rorl
adc
pop
sub
jge
cmp
pop
scas
mov
push
mov
xor
std
jb
and
jmp
push
adc
mov
insb
into
sbbl
push
adc
push
call
repnz
xor
mov
imul
cltd
jle
push
es
in
mov
lahf
adc
and
and
mov
loop
sub
mov
arpl
add
cltd
je
push
inc
ret
rcrb
or
popa
les
jl
xchg
or
and
sub
push
pusha
adc
hlt
outsb
xor
stos
or
cmpsl
inc
mov
mov
xchg
fcomps
push
jl
pop
sbb
or
or
add
test
adc
sti
loop
jg
sub
mov
push
cmpsb
ss
pushf
mov
bound
sti
cmp
push
push
or
and
xor
insb
mov
scas
dec
test
loopne
mov
dec
lds
xor
mov
and
cmpsb
adc
clc
cmpsl
out
add
negl
jmp
loop
xchg
jne
add
call
adc
iret
cs
push
fldl
inc
rol
push
pop
adc
jg
mov
test
ficoml
add
scas
fwait
pop
imul
adc
cli
lret
xor
in
sub
add
loopne
mov
inc
in
loop
add
cwtl
fldcw
inc
pop
popa
cmovns
mov
dec
sub
shlb
aaa
fldcw
or
lret
dec
sub
sbb
mov
push
mov
pop
insl
cli
dec
xor
mov
lods
pop
rcrl
fildl
mov
xchg
adc
pop
jbe
gs
leave
stos
dec
test
in
jo
ficoms
les
mov
in
fnsave
push
add
adc
fsubrs
sbb
shl
roll
mov
sub
cwtl
arpl
and
pop
mov
mov
andl
sbb
mov
sahf
or
jg
mov
iret
mov
ficoms
popf
add
inc
xchg
repz
and
mov
mull
mov
mov
ret
cwtl
cmp
repz
sbb
add
or
xchg
xchg
xchg
sub
pop
cmpsl
and
cmpsl
mov
data16
test
push
dec
nop
shlb
xor
sbb
inc
bound
adc
cli
xchg
xchg
scas
call
insb
mov
push
lcall
xor
test
sbb
test
and
mov
insb
shr
sub
jne
jp
or
push
mov
fcmovne
dec
data16
das
dec
hlt
movsl
jg
jb
mov
insl
pop
pop
in
sub
or
xor
mov
sub
pop
inc
mov
sarl
cwtl
cltd
gs
repz
dec
cmp
scas
leave
xchg
pop
dec
sub
xor
nop
fiadds
arpl
arpl
jle
cmp
or
lods
ret
aas
fldl
mov
mov
div
mov
int
inc
das
dec
repnz
sbb
lret
mov
lea
mov
xchg
cmpsb
mov
dec
push
adc
ret
scas
insb
lret
fwait
mov
jb
lret
sub
pop
movsl
xchg
cld
mov
xchg
lret
nop
or
imul
outsb
inc
shlb
jmp
lahf
in
mov
jae
and
sub
sub
xchg
in
adc
int
xchg
add
xchg
xor
xchg
jo
jle
cmp
ss
jp
fs
nop
sbb
and
mov
call
js
fxch
mov
push
rcr
pop
mov
pop
add
or
ljmp
push
sub
enter
pop
icebp
or
cmp
mov
mov
loopne
and
mov
stos
adc
bsf
dec
ss
adc
xor
push
rcrb
mov
cmp
shll
pop
lods
mul
dec
jbe
sub
pop
in
les
dec
adc
in
nop
mov
test
cltd
cmp
dec
or
in
sbb
push
add
stos
sbb
lods
cmp
xorl
mov
or
sub
ret
push
xorl
gs
sbb
cld
inc
adc
xchg
mov
int
lock
xchg
enter
test
stos
pop
cltd
clc
call
cltd
shrb
dec
xor
or
push
popa
nop
pop
mov
xor
jo
push
mov
lea
jno
jge
and
and
stos
decb
rcll
cmpsb
mov
lret
in
mov
and
out
ds
xor
jae
jl
cmp
push
add
pop
call
addr16
jle
les
mov
sti
xor
in
adc
jae
pop
dec
ds
ret
jecxz
sub
movb
in
jge
insl
jbe
or
jp
and
test
cmp
cmp
sbb
dec
xor
nop
cld
jle
dec
sbb
sub
out
movl
sub
rcrb
adc
cwtl
rolb
push
add
test
imul
lret
into
push
out
xchg
adc
add
cmp
iret
mov
movsl
jp
push
mov
and
ljmp
rol
pop
jmp
mov
cmovae
aaa
jp
push
int
mov
pop
sbb
push
mov
in
decl
in
nop
pop
scas
cli
lahf
push
cmp
lds
jl
adc
fwait
jb
fisubrl
loop
mov
rclb
cs
lahf
mov
mov
mov
push
andl
pusha
ljmp
jle
jle
jno
add
sbb
jge
inc
outsb
gs
mov
adc
lods
shl
xchg
sbb
stc
popf
ja
fimull
xor
jae
sub
push
push
lahf
cmpb
test
jae
daa
xchg
or
mov
rolb
push
das
mov
mov
push
pop
mov
rorl
xchg
shll
inc
sub
inc
dec
jg
aad
loopne
dec
repz
loopne
adc
js
inc
iret
mov
clc
out
and
sbb
pop
push
jmp
xchg
xor
test
test
aam
or
adc
and
loopne
or
or
hlt
cli
cltd
pop
or
add
push
popa
call
fmull
in
cmp
jae
push
cs
pop
dec
add
jb
inc
inc
loope
push
or
ds
inc
jmp
arpl
fistl
push
inc
rorb
cmpsb
add
js
or
aaa
lret
cmp
fldenv
repz
or
addr16
ljmp
sub
mov
sahf
mov
cmp
add
ret
mov
cli
push
push
scas
lahf
cmp
ds
dec
popa
and
or
dec
stos
xor
adc
leave
test
sbb
cmp
sub
mov
negl
and
jge
cwtl
icebp
movsl
js
int3
aas
js
adc
push
hlt
sub
aam
mov
mov
adc
push
mov
mov
or
xor
jnp
dec
push
test
aam
add
jecxz
loop
inc
sahf
and
or
inc
hlt
fistps
rcll
in
enter
add
pop
das
push
xchg
fcmovnu
sbb
fdivrs
mov
test
and
or
xlat
push
negl
xchg
call
aas
cmp
lcall
or
in
sbb
or
push
xchg
pop
push
das
shufps
arpl
adc
outsl
dec
pop
into
mov
or
inc
mov
rcll
ljmp
dec
push
mov
inc
xchg
xor
cmp
adc
mov
subl
and
inc
test
js
jb
rcl
scas
cmp
sti
data16
xlat
jg
jp
mov
push
sbb
imull
clc
loopne
out
aas
dec
or
in
push
inc
cmc
mov
push
cmp
dec
jno
icebp
gs
mov
mov
pop
inc
adc
xor
scas
lahf
and
cmp
add
push
ja
xor
push
xor
icebp
jne
lds
fxch
mov
imul
jecxz
mov
cmp
add
fwait
out
xchg
outsb
sub
xlat
jecxz
data16
jne
xchg
mov
stos
pushf
xchg
and
lcall
aad
in
ljmp
outsb
xor
outsb
punpcklwd
push
fs
sub
filds
pop
jp
or
sbb
shll
pop
add
push
movl
ja
ds
test
std
inc
movsl
sub
add
in
daa
cwtl
mov
lcall
adc
sbb
dec
cmp
ret
mov
push
loope
adc
ror
push
movsl
filds
xchg
loope
fcomip
lcall
das
shr
mov
movsb
add
sbb
sbb
fwait
push
insb
push
xchg
add
scas
or
mov
xor
lret
subb
cli
jae
pop
scas
jno
ljmp
mov
xor
les
xor
inc
dec
or
jne
mov
arpl
repnz
or
mov
insl
rclb
pop
mov
jno
enter
xchg
ret
adc
mov
dec
push
aam
cwtl
stos
int
dec
add
in
pop
out
enter
pop
mov
sub
xchg
ljmp
xor
subl
inc
dec
int
xchg
or
mov
dec
int3
adc
sbb
sbb
lock
push
imul
mov
arpl
sub
not
loopne
mov
pop
sbb
mov
or
stc
adc
test
jmp
mov
jb
dec
call
repz
sub
arpl
ds
xor
test
hlt
ficompl
outsl
pop
dec
loop
adc
xchg
fadds
mov
sub
inc
sbb
cmp
hlt
sbb
xchg
push
xchg
mov
lods
dec
int
jb
ret
jno
push
push
insb
icebp
pop
call
xor
sbb
outsb
push
xlat
mov
out
pop
icebp
add
inc
cmpsl
in
sti
sbb
xchg
call
sbb
mov
lods
movsl
push
je
lret
mov
push
mov
fwait
push
hlt
mov
fs
stos
cmp
gs
inc
mov
sub
or
hlt
jne
inc
lea
je
cs
fiadds
popa
cmp
aas
aam
mov
pop
popa
mov
aad
mov
dec
pop
pop
sub
stos
repnz
pusha
adc
xlat
shlb
out
andl
fidivs
dec
sub
or
inc
add
mov
mov
dec
mov
mov
push
arpl
lret
xchg
cmp
pushf
mov
scas
scas
mov
xchg
mov
jg
stos
shrl
inc
insl
jecxz
and
int3
into
popa
mov
add
ret
adc
cmp
cs
into
add
fcomps
sahf
outsl
mov
test
push
xchg
xor
out
std
icebp
xor
push
out
xchg
pop
int
insb
fistpl
and
repz
repnz
leave
ss
out
sbb
rclb
out
xchg
mov
inc
test
xor
lock
lcall
lds
outsb
sti
daa
cmp
jne
jle
mov
push
dec
inc
cltd
cmpsb
inc
aam
mov
xorb
push
idivl
xlat
lds
dec
mov
mov
loopne
test
sub
push
mov
mov
adc
inc
out
loop
mov
dec
fdivrs
mov
cmpl
cvtdq2ps
mov
cli
sbb
pop
mov
jnp
mov
push
into
adc
lcallw
sbb
pop
and
adc
test
gs
adc
adc
add
repnz
add
fiadds
push
mov
stos
imul
enter
loopne
hlt
lcall
fcomi
pop
and
dec
dec
stos
leave
and
or
dec
idivl
rcrl
cmpsl
shll
lods
add
jo
jns
mov
inc
pop
add
jecxz
cld
lret
cld
push
roll
cmp
stc
add
mov
xorl
popa
andb
jo
sub
aaa
test
add
dec
inc
mov
sbb
push
mov
fldlg2
cs
inc
xchg
add
divl
nop
jecxz
mov
cmc
cmp
mov
lcall
adc
bound
data16
and
or
enter
mov
xorl
hlt
or
push
pusha
fnsave
push
je
mov
mov
add
push
jp
mov
dec
test
add
imul
mov
dec
sbb
push
loope
cs
mov
jecxz
sub
add
pop
push
add
adc
jl
push
xchg
out
adc
outsl
roll
cmpsl
scas
inc
mov
in
repnz
rcll
daa
imul
mov
jecxz
sbb
and
pop
mov
jbe
lahf
fdivs
out
cmp
js
adc
daa
fwait
scas
push
inc
push
dec
inc
sbb
add
subb
pusha
xlat
jnp
or
pop
cli
add
iret
push
mul
andb
ss
es
pop
in
ret
insl
loopne
cmp
gs
shll
push
stos
mov
stos
stos
insb
mov
lea
movsl
jle
fs
cmp
addb
push
sub
dec
add
les
insb
lods
notl
pop
pop
mov
popa
out
or
dec
out
bound
xchg
add
movsl
mov
mov
xchg
mov
add
push
mov
adc
negl
bound
movsl
xor
xchg
test
cmpsl
fwait
lea
sub
fstpl
sub
mov
das
cmpsb
aam
push
add
jae
lods
in
std
popa
mov
pop
int
push
out
and
lcall
jge
xor
add
repz
or
dec
add
or
push
jbe
push
insb
out
in
and
lahf
xor
sub
bound
mov
inc
xor
xor
imul
or
repz
sbb
and
or
imul
cmp
inc
add
cmc
out
mov
mov
mov
fiaddl
inc
mov
mov
pop
scas
data16
and
lahf
push
mov
rcrb
aam
inc
push
ljmp
stos
lds
movsl
xlat
imul
scas
sbb
xlat
ja
pop
fdivp
jb
dec
test
push
and
cmpsl
das
and
cmp
loope
loop
popa
stos
inc
es
or
mov
loopne
cmc
or
sbb
rcrl
xchg
sbbb
jbe
push
bound
movsb
jge
dec
add
insl
loop
mov
jb
jmp
add
push
sbb
xchg
popf
or
cmpsl
clc
sbb
enter
cmpsb
sub
stc
in
and
xor
inc
insb
repz
jno
pop
insl
xor
mov
cs
sbb
bound
enter
push
push
push
test
nop
stc
dec
pop
mov
sarb
stc
jecxz
ss
scas
dec
mov
push
mov
dec
and
and
push
mov
and
fsubl
sbb
jecxz
mov
push
cmp
jnp
movl
or
push
in
pop
out
cmpsb
loopne
xchg
int3
jmp
sahf
pop
mov
and
jl
out
add
sub
mov
jnp
jp
cmpxchg
jmp
mov
push
cmc
jl
lock
add
jnp
enter
mov
mov
jl
push
jo
jbe
adc
dec
jp
icebp
sub
rcrb
shll
cld
aad
inc
mov
ja
jp
mov
xchg
mov
jmp
dec
cmpsl
outsl
push
sub
mov
repz
ret
xchg
js
call
adc
jle
repz
sbbb
lds
push
jg
xor
iret
push
adc
dec
in
test
and
pop
jns
mov
sub
push
test
sbb
sub
pop
outsl
xor
xchg
xchg
pop
cmc
jae
pop
sbb
jno
xchg
sti
mov
adc
pop
imul
dec
fcoms
mov
aas
dec
or
cmc
adc
pop
sti
prefetch
or
inc
mov
outsb
xor
xor
jl
imul
rcrl
inc
cmpb
lods
dec
mov
dec
aas
inc
and
out
dec
sbb
inc
fucomip
mov
mov
add
pop
repnz
jg
xor
jg
mov
lret
mov
js
pop
and
pop
sbb
aad
fsubrl
gs
adc
sub
mov
outsl
int3
cmp
in
mov
mov
push
jne
fmul
cmpsl
and
mov
dec
aaa
jns
mov
mov
js
out
sahf
pop
xchg
xor
inc
lahf
mov
rorl
gs
inc
xor
push
and
ret
insb
dec
jp
arpl
or
fistl
cmp
cmp
inc
jp
xchg
adcl
and
mov
adc
jecxz
loope
ds
out
clc
jge
push
not
fldenv
cmpsb
or
cmp
jg
lahf
cmp
or
xchg
sub
psubsw
or
cmpsb
push
mov
inc
sbb
test
mov
sub
shrl
arpl
sub
pop
push
add
aam
loope
and
imul
inc
out
inc
inc
test
pop
insb
test
insb
jge
dec
sahf
pop
push
outsl
popa
push
mov
int
xchg
or
sub
orl
mov
jecxz
mov
fildll
xor
rclb
push
ds
adc
adc
js
movsl
or
shll
outsb
add
fcmovb
mov
push
sete
xor
ficoml
inc
inc
lret
int3
pop
lods
ja
xchg
pusha
daa
dec
sbbb
jp
out
dec
rsm
push
add
push
popa
and
adc
mov
and
test
arpl
xor
cmp
les
ficoml
cmp
imulb
mov
iret
imul
mov
add
arpl
imul
hlt
into
adc
push
sub
into
xchg
xor
insb
adcb
mov
fstpl
jb
lcall
ds
insl
jle
ss
shrl
xlat
pop
jae
cli
shll
jp
loop
ja
xchg
sbb
sbb
pushl
or
lret
xor
pop
mov
add
mov
dec
xchg
add
mov
xchg
loop
sarl
mov
mov
filds
iret
jle
inc
jecxz
fcomps
mov
lahf
sub
push
xor
dec
pop
test
pop
mov
icebp
inc
mov
ret
mov
xor
stc
sub
or
pop
pop
jns,pn
in
mov
pop
gs
cmp
push
dec
add
fnstenv
add
jne
test
xchg
outsl
ja
lret
mov
xchg
push
data16
xchg
std
ffreep
in
xchg
pop
pop
adc
jle
jae
std
pusha
pop
xchg
sbb
int
jl
ret
cltd
jne
cmp
sub
add
test
xor
mov
push
jle
or
ret
and
lods
cmp
jnp
jle
adc
fidivrl
xor
clc
push
lret
add
stos
iret
test
adc
stc
in
lret
test
xchg
lret
adc
imul
cmpl
cs
cmpsb
es
jg
ss
inc
sub
xchg
call
sbb
fisubrs
scas
dec
inc
jle
sub
call
xchg
add
push
mov
or
rorl
out
out
and
jle
jle
mov
mov
test
repnz
xchg
lods
pop
sti
pusha
mov
push
mov
mov
and
jns
popf
fucomi
jge
push
jecxz
cmpl
jns
push
xchg
xchg
xor
cs
mov
loope
gs
mov
dec
inc
pop
jl
mov
push
negb
xchg
popa
or
rcrl
lods
iret
xor
pop
into
lcall
inc
push
hlt
daa
jne
aaa
fwait
xor
sub
out
push
rcll
repnz
push
popa
gs
sbb
arpl
or
cmp
loop
and
mov
mov
pop
cwtl
pushf
cltd
xorl
testl
popf
mov
add
sti
mov
loopne
scas
dec
push
xlat
xlat
ficompl
or
ds
lods
ret
loope
jg
adc
sub
xlat
test
xchg
mov
sbb
outsb
xlat
push
cmpsl
movsb
add
mov
mov
add
sub
adc
dec
jl
cmp
pop
rcll
ficompl
pop
or
clc
jmp
shll
cltd
jle
xchg
xor
arpl
popf
arpl
shl
mov
mov
fcoms
inc
lds
lahf
adc
fnstenv
or
pusha
pop
cmp
jmp
mov
in
stc
cmp
sub
pop
lahf
mov
fwait
mov
scas
jp
adc
lea
fcoml
fadds
cwtl
xlat
lea
jg
out
test
or
xor
dec
pushf
icebp
and
pop
ljmp
sbbl
add
ret
inc
in
dec
sub
cmp
push
sar
inc
dec
iret
je
pop
xor
cmpsl
cltd
mov
test
imul
movsl
pop
fbstp
cmp
adc
and
aad
or
ja
sbb
scas
addb
push
sub
adc
mov
movsl
add
dec
and
ja
mov
js
sub
xor
inc
adc
lahf
test
jb
subb
add
pop
pop
in
adc
mov
loop
push
pop
pop
cmpsb
clc
nop
js
xchg
cmp
pop
xor
fnstenv
push
xor
testl
mov
inc
cmpsl
fcoml
test
pop
test
sbb
in
jp
cmp
mov
cld
push
popf
fdivl
rclb
mov
out
pushf
and
push
pop
sbb
ljmp
aaa
xchg
icebp
cmp
sbb
pop
mov
mov
jge
sbb
leave
aas
enter
stos
pop
xor
negl
push
jl
nop
cmp
test
stc
rorl
xchg
mov
rolb
push
mov
and
stos
pop
mov
bound
jnp
idivb
sbb
sub
adcl
xchg
mov
jno
das
movsb
sbb
mov
xchg
mov
das
call
add
pop
xor
inc
pop
fidivs
cmp
xchg
pushl
cmp
into
or
enter
xchg
inc
pop
cmpsl
movsl
ljmp
je
cmpb
imul
not
add
jp
dec
enter
fs
mov
loop
int3
ret
insb
dec
mov
jae
inc
and
pop
mov
clc
and
hlt
aas
push
pop
or
sub
pop
mov
mov
sbb
data16
inc
jbe
mov
inc
loopne
aaa
xchg
mov
mov
xchg
outsb
repnz
pop
in
fucomp
stc
cmpsl
add
std
and
and
outsl
xchg
inc
add
movsl
sub
idivb
popf
mov
xchg
sbb
sub
jns
jp
icebp
xchg
mov
sbb
andb
in
add
cmp
test
cmp
add
lret
pusha
cs
repz
and
ret
push
xor
loop
mov
cmp
cmp
lahf
pop
cmp
pop
sarl
cmp
cltd
cmp
loop
stc
lret
movsl
cmp
imul
jmp
pop
xlat
jmp
xchg
shlb
test
cli
pop
repnz
ss
and
push
or
adc
out
inc
in
repnz
mov
fnstenv
loopne
test
insl
lds
loope
cmp
push
push
rcl
cmp
ss
pop
cld
push
test
push
inc
push
inc
movsb
sti
popf
fs
pop
cmc
xor
sub
test
mov
sub
xor
sti
insl
pop
cmp
mov
incb
scas
daa
cli
dec
mov
pop
stos
call
adc
bound
mov
mov
push
out
clc
cmp
add
pop
xchg
outsl
push
inc
shrl
inc
lods
adc
sub
repz
mov
pusha
and
add
xor
push
pusha
ficoms
inc
js
xchg
jle,pn
cmp
aaa
or
xchg
and
dec
leave
xchg
outsl
sbb
lea
sarl
jne
xchg
sub
cmpsl
add
fsubrl
xlat
and
fwait
or
and
movsb
pop
inc
les
xchg
in
xchg
stos
or
push
jge
repz
in
icebp
pop
lcall
cmp
xor
mov
or
mov
mov
pop
out
repz
jbe
push
add
fstl
mov
inc
dec
or
outsb
hlt
sub
sbb
orb
sbb
aam
cld
pop
push
or
push
repnz
pop
imul
gs
mov
push
repnz
mov
cwtl
enter
test
jge
int3
inc
loope
and
cmc
mov
bnd
adc
dec
popa
fwait
jo
out
mov
inc
push
or
add
fdivrl
and
clc
popf
or
xor
dec
or
stos
mov
fs
dec
jmp
pop
mov
nop
sub
mov
jmp
cmp
mov
shlb
stos
es
arpl
xor
ds
and
pop
pop
cwtl
push
notl
stos
sbbb
and
sub
les
in
push
pop
xlat
setnp
aaa
jbe
into
cmp
into
mov
sbb
mov
movsb
pop
mov
roll
mov
inc
jle
lds
mov
inc
mov
xchg
push
je
andb
mov
xor
aad
jne
insb
add
into
rcr
int
idiv
scas
push
jnp
imul
jb
pop
je
push
fwait
pop
adc
pop
and
cwtl
mov
inc
mull
sbb
cltd
lret
clc
inc
enter
push
lahf
sub
jp
dec
xchg
sti
test
jge
add
pop
mov
and
in
mov
ja
mov
loope
aas
cli
mov
jnp
out
jge
pop
sbb
adc
pop
inc
xor
into
divl
push
xlat
add
xchg
test
outsb
sarl
mov
and
shl
or
and
adc
lcall
or
or
cld
rol
xchg
pop
and
or
dec
inc
shll
push
pop
mov
or
xchg
inc
mov
inc
fisubl
jo
rep
jno
sarb
push
fildl
aas
pop
sbb
clc
pop
dec
rcl
cmp
shlb
out
or
leave
inc
repnz
stc
mov
test
push
notb
stos
cmp
sbb
xor
mov
push
je
fs
push
push
dec
andb
addb
popa
test
push
cmp
int3
cmp
sbb
and
xchg
sbb
imul
cmp
jne
add
cmp
push
dec
loopne
or
pop
mov
dec
fisubrs
stos
pop
pop
lds
jbe
mov
push
and
andl
test
add
inc
lret
sar
int
mov
arpl
ja
cli
add
outsl
jns
stos
test
inc
js
aas
popf
aad
push
leave
push
mov
sbb
and
mov
repz
dec
leave
inc
decb
mov
fdivp
xor
lret
iret
pop
adc
inc
jmp
lods
je
or
cmp
nop
sahf
mov
clc
popf
out
pop
push
ret
je
fwait
pop
or
sbb
fmul
test
fidivrs
push
adc
fisttpll
xchg
fs
lods
mov
jmp
aam
cltd
xchg
js
pop
pop
jno
inc
xorb
mov
sub
sbb
lods
adc
mov
xchg
jb
inc
mov
jl
mov
imul
ret
xchg
jmp
and
push
jbe
dec
add
ret
lods
sahf
lock
and
cli
mov
sub
gs
pop
out
popa
icebp
pop
lods
add
sub
sahf
jae
push
sbb
cli
pop
test
ljmp
in
xchg
and
ljmp
push
fdivp
cmp
inc
jb
push
les
sbb
inc
push
filds
inc
mov
pop
mov
mov
mov
mov
jne
fdivs
sbb
mov
int3
cwtl
dec
clc
sbb
mov
and
and
add
cld
cmp
stos
out
push
cmp
aad
mov
cmp
add
scas
lret
aam
xchg
jnp
pop
push
out
mov
pushf
dec
insl
outsb
xor
and
stc
xchg
mov
or
cmp
fmull
enter
xchg
and
clc
jns
push
mull
icebp
cmp
inc
mov
adc
mov
fidivs
imul
fildl
lahf
lea
pop
or
je
movsb
arpl
cmpl
push
add
addr16
je
adc
cmpsb
iret
mov
scas
fistpl
rcll
pop
fstpt
mov
adc
std
sub
xor
push
popf
push
xchg
sbb
mov
sbb
cmp
xchg
jl
pop
lahf
je
cmp
ret
cltd
insb
jns
dec
and
lock
int3
popf
inc
push
roll
repnz
adc
mov
adc
adc
cwtl
int3
dec
test
push
cld
arpl
mov
cmpsl
lods
neg
push
lahf
ds
call
inc
lret
into
loopne
lahf
icebp
scas
lahf
and
jns
xchg
in
imull
inc
pushf
repnz
orl
shlb
xchg
inc
jns
mov
mov
sub
xor
mov
das
mov
rorl
mov
pop
lock
icebp
mov
in
jo
sub
push
push
jo
xchg
jmp
sub
daa
icebp
cmp
loopne
cmc
clc
pop
outsb
cwtl
jl
mov
jp
stos
sti
sbb
xchg
lret
cmpsl
repz
cltd
xor
data16
mov
lahf
push
stc
xchg
xlat
rcrl
in
add
int
fidivrl
adc
fisttpl
daa
aam
xchg
sarb
push
xor
call
in
jecxz
fcomp
leave
xchg
sar
xchg
cli
flds
cld
inc
mov
lds
nop
push
arpl
ret
adc
inc
jmp
xchg
fbld
std
scas
lret
jne
gs
lds
ret
scas
push
cmp
sbb
xchg
outsb
test
aaa
ret
sub
mov
xor
pop
aad
ficoms
test
scas
adc
filds
in
repz
mov
fucompp
daa
mov
push
dec
data16
jge
mov
inc
sbb
js
jecxz
xor
lds
push
jno
rorl
inc
clc
fldl
jge
add
mov
cli
out
andb
mov
ljmp
mov
xchg
iret
pusha
push
aad
stos
clc
jb
insb
rcrb
out
sbb
push
pop
xchg
fstl
dec
aad
xlat
loope
aam
out
loopne
sar
lret
add
xor
cmp
xchg
pushf
fwait
sbb
adc
cmp
pusha
push
sub
lahf
sbb
cmp
fs
or
arpl
or
push
adc
xchg
ja
push
addr16
jo
fwait
and
pop
add
pop
stos
add
jl
jbe
mov
dec
mov
enter
mov
lret
icebp
js
pop
lock
movsb
sub
addl
mov
inc
fsubrs
lret
jne
or
or
fstenv
jns
mov
sub
repz
stos
push
xchg
pop
inc
jecxz
inc
sbb
inc
fmull
arpl
idivl
sub
add
movl
or
pop
mov
sbb
inc
mov
mov
ret
pusha
sahf
jb
repz
lds
push
or
push
stc
mov
cmpsl
icebp
inc
pop
cmp
mov
test
push
inc
push
gs
and
jae
lods
push
sub
es
pop
or
xchg
jecxz
or
ror
sub
add
aas
mov
push
insb
push
rcrb
cmp
inc
std
add
pop
and
xor
cmp
and
iret
mov
inc
clc
shrl
sbb
lods
outsb
scas
push
lret
ret
ret
sub
loop
lahf
sarl
mov
pop
dec
cli
cwtl
fildll
mov
push
or
call
cli
aaa
xchg
outsl
or
adc
dec
lods
stos
pop
les
jp
roll
in
mov
lret
out
daa
mov
dec
push
mov
push
pushw
adc
loope
dec
mov
fucomip
movsb
push
inc
sbb
jecxz
out
sbbb
adc
dec
xchg
cltd
cli
mov
dec
and
jo
dec
iret
ss
loop
jae
pusha
mov
mov
nop
enter
lock
andl
out
rcr
stc
rol
xor
loope
js
inc
pop
stos
gs
mov
jmp
lock
xchg
clc
leave
lcall
add
and
cwtl
into
cmp
loopne
out
xlat
cmpsl
sahf
insl
data16
xchg
sbb
stos
lock
aam
xchg
fcoms
test
add
xchg
bnd
insl
andb
movsl
in
inc
jb
scas
mov
gs
jp
pop
into
or
push
mov
les
je
mov
cltd
divb
shlb
jge
mov
arpl
fsubrl
pop
jg
xor
dec
test
push
mov
sub
pop
xor
jp
and
sbb
dec
mov
inc
xchg
divl
xor
lret
mov
ficomps
sub
ret
add
xlat
arpl
push
inc
stos
push
inc
dec
jns
xchg
test
xlat
fisttpll
xor
pusha
mov
fs
pop
sbb
push
pop
loop
lret
jbe
and
icebp
xor
fldt
mov
adc
pop
movsl
fstl
jmp
fisubs
in
clc
xlat
sbb
xchg
icebp
sti
xchg
jge
sbb
sbb
les
jno
pop
pop
jecxz
dec
push
test
jne
int
xchg
xor
mov
nop
cmc
or
inc
or
sub
pop
adc
cmpsl
xor
xor
xchg
mov
stc
jp
dec
xchg
sbb
sub
out
hlt
xchg
sub
sti
push
icebp
icebp
mov
mov
sbbl
fs
cmp
test
icebp
mov
sar
inc
mov
ret
xchg
lock
add
push
cld
add
mov
dec
les
adc
lds
scas
inc
xchg
add
mov
xchg
test
lock
popa
imul
lret
jno
ljmp
fnsave
fiadds
jmp
test
popa
and
xchg
dec
add
push
test
ficomps
fwait
pop
mov
pushf
decl
loopne
jp
ret
push
dec
adc
rorb
cmp
jmp
or
fdivrs
in
nop
jb
push
dec
push
lcall
rolb
push
mov
xchg
fdivr
mov
and
stos
fstpl
cmpsl
fldcw
inc
add
mov
movsb
movsl
and
lods
mov
jmp
out
ret
fwait
dec
lret
cli
loope
daa
hlt
int
lahf
scas
jo
xchg
add
pop
mov
pop
shll
adc
test
incb
idivb
in
push
stos
push
cmp
es
or
add
popa
mov
add
inc
fwait
cmp
and
jno
sets
mov
jbe
mov
pop
and
add
mov
arpl
jns
lods
cmpsl
mov
adc
or
dec
sub
inc
mov
repz
push
add
gs
mov
cmc
cmp
mov
push
lahf
sbb
mov
xchg
pusha
loopne
push
test
pop
inc
jmp
cmp
mov
push
lcall
jg
mov
in
jnp
push
repz
add
inc
or
stc
xchg
es
inc
pop
cld
xorl
test
nop
jmp
xchg
pop
mov
pop
cld
dec
jnp
ljmp
mov
add
or
sarb
xchg
dec
fcoml
xlat
xchg
test
fldcw
fld
enter
aam
jle
xchg
ds
push
repz
mov
cmpsl
in
mov
scas
add
push
mov
inc
lods
and
add
and
lea
fsubrs
sbb
pop
pop
sbb
pop
lahf
outsb
mov
sbb
sub
cmpsl
push
repz
int
gs
and
mov
or
sti
imul
fs
mov
ror
call
stos
adc
inc
jo
mov
inc
xor
xor
sbb
rclb
scas
dec
cmpsb
dec
addr16
inc
jnp
sbb
lret
cmp
fstpl
int
xor
push
idivl
testl
lods
cmpsl
jecxz
cmpsb
roll
jmp
cmpsl
fsubrp
in
fwait
in
push
addr16
sbb
stos
test
add
ljmp
fst
into
and
inc
bswap
outsb
stos
mov
mov
icebp
dec
jp
test
mov
mov
jmp
scas
loop
sbb
das
mov
aam
icebp
add
loopne
pop
movsl
dec
mov
cwtl
or
jp
insl
cmpsl
push
ret
sub
mov
mov
outsl
sbb
in
shlb
lahf
pop
fisubrs
push
fnstcw
xor
jp
lods
and
push
pop
imul
xchg
cmpsl
sub
jmp
jmp
cwtl
mov
subl
mov
sbb
sbb
rclb
or
jns
pop
sbb
add
jge
sub
mov
add
popl
dec
out
scas
jmp
sbb
sbb
jle
mov
fs
sub
mov
arpl
cmp
inc
daa
inc
movl
iret
jb
add
pop
lahf
xchg
ljmp
fidivrl
loop
cmpsb
and
push
jle
cmovae
push
es
pop
cmp
cmp
pop
aaa
dec
lods
daa
idivl
adc
push
loop
jne
cmp
mov
xlat
mov
cmc
mov
inc
or
in
mov
mov
mov
les
and
inc
test
pop
dec
push
pop
out
mov
mov
jno
add
popa
into
aad
jle
xchg
jg
mov
lock
addr16
xchg
daa
mov
xor
fmul
mov
lds
test
addl
rcrl
sub
mov
test
push
adc
adc
xlat
jno
dec
cmpsb
push
ja
xchg
notb
imul
loop
ljmp
pop
inc
fists
mov
divb
and
and
rcrl
sahf
jge
dec
adc
mov
mov
pop
sub
xlat
dec
cld
sbb
fisttps
mov
push
dec
inc
dec
or
subl
jae
sbb
sbb
loopne
lds
leave
cltd
xchg
add
hlt
and
jmp
dec
add
push
data16
repz
sbb
fstpt
jo
mov
push
js
sbb
sub
xchg
dec
cmc
cmp
fcompl
push
and
xchg
pop
sub
jnp
pop
shlb
inc
push
dec
rclb
fincstp
inc
ret
pop
adc
mov
hlt
xlat
ljmp
jb
loopne
add
out
in
jbe
out
pop
mov
out
mov
lea
or
ror
aad
imul
adc
in
adc
sbb
loopne
xchg
es
mov
and
and
inc
rorb
mov
adc
cmp
and
insb
mov
pusha
pop
sub
ret
inc
sahf
aad
int
push
xchg
mov
pop
sub
bound
ss
jg
test
stc
mov
push
fistpll
cld
out
ja
push
xchg
xor
mov
dec
mov
shlb
dec
pusha
and
adc
push
imul
hlt
mov
lds
add
mov
js
jp
xorb
data16
xchg
mov
push
pop
pop
shl
decl
xchg
outsb
sbb
psllw
adc
push
shlb
je
inc
inc
xlat
lds
and
or
sbb
xorl
or
inc
mov
ds
insb
push
pushf
mov
cmp
jl
or
sbb
out
mov
sti
pop
fldcw
mov
sub
aam
mov
pop
int
jns
fcomi
pop
adc
sbb
mov
into
outsl
sub
mov
pusha
xor
lret
testl
pop
mov
fcompl
push
xor
imul
push
aaa
xchg
and
xchg
jg
popf
inc
shl
ljmp
xchg
push
jg
xchg
dec
pusha
mov
outsl
jo
jmp
negl
push
xorl
xchg
lret
ret
add
orb
push
mov
xchg
std
sub
sbb
dec
sub
and
jl
movsb
add
icebp
dec
xlat
xor
leave
cmp
mov
jl
push
outsb
jle
adc
sbb
lds
inc
push
mov
and
jp
inc
out
push
cmp
ficoml
cltd
movsb
cmpsl
enter
sbb
push
leave
pop
cmpl
mov
push
xor
inc
jp
dec
mov
es
sbb
pop
roll
subl
aaa
sbb
dec
nop
in
push
dec
ja
mov
inc
out
jbe
imul
ljmp
dec
adc
ret
cltd
dec
sub
sub
test
cmp
fs
enter
lock
push
test
cmp
push
mov
xlat
xchg
mov
in
cs
cmp
lret
aaa
das
sbb
popf
jl
call
repnz
in
mov
pop
test
mov
push
add
mulb
mov
and
sbb
mov
fs
mov
sub
add
inc
test
ds
xchg
cs
scas
sbb
ret
push
pop
jmp
aam
in
popa
iret
add
out
ljmp
ja
cmp
iret
dec
mov
push
push
out
jg
insb
jns
adc
cmp
mov
mov
mov
mov
and
insl
cmp
mov
push
sub
les
dec
js
popa
paddb
mov
int3
imull
js
enter
ret
imul
ss
jns
imul
xchg
mov
pop
call
fildll
adc
popf
popa
call
jnp
jno
jb
iret
repz
adc
in
inc
cmpb
xchg
repnz
int3
sbb
inc
jae
sbb
fs
leave
cld
mov
shrl
cli
daa
mov
out
jo
push
dec
xchg
cmpsl
das
or
or
mov
clc
push
clc
inc
sub
cmp
xchg
test
data16
dec
les
bound
jg
jle
movsb
fs
sub
lcall
sbb
sbb
out
xlat
inc
jo
movl
dec
mov
adcb
and
mov
gs
popfw
jo
sub
daa
add
mov
mov
mov
in
xchg
push
mov
pop
push
jns
das
jmp
aas
inc
lcall
pop
ja
dec
push
xor
inc
mov
movsl
repz
ds
jbe
pop
push
add
xchg
lods
and
sub
fisubl
jb
mov
jle
mov
repz
ja
mov
xor
subb
rcr
scas
xor
xor
mov
add
shll
push
sbb
lock
inc
outsb
jp
cmpsb
fidivs
pop
pop
ja
fidivl
addr16
dec
mov
arpl
mov
orl
leave
imul
mov
out
and
lock
jle
ja
cltd
ret
push
mov
lcall
lea
xor
mov
mov
ljmp
push
dec
xlat
ret
fucomp
andl
inc
jp
imul
movsw
movsb
setl
mov
mov
aam
jmp
repz
outsl
setbe
jo
leave
fimull
inc
mov
adc
es
adc
mov
arpl
adc
je
mov
pop
cmp
int3
xchg
shll
sarb
xor
cld
fcoms
mov
mov
push
cmp
add
pop
and
mov
dec
mov
std
cmpb
pusha
mov
jg
pop
es
push
inc
scas
pushf
loope
stos
sub
stos
xor
pop
je
in
xchg
cli
gs
stos
lret
adcl
into
jmp
xor
hlt
scas
fld1
push
test
jne
movsb
mov
add
and
loopne
dec
adc
loopne
and
outsb
sti
cmp
or
cmp
sbb
xchg
in
lds
mov
fnstenv
cmpsb
mov
in
add
sahf
mov
add
xchg
pop
arpl
inc
and
mov
xor
cld
bound
jnp
mov
push
sub
pop
fcomps
data16
and
addr16
sbb
lret
popl
mov
scas
pop
adc
sarb
shlb
inc
loope
daa
jp
mov
pop
mov
jns
pop
gs
jmp
sbb
mov
mov
mov
sbb
out
pop
cwtl
loop
sbb
stos
lea
mov
jl
in
jl
xchg
cmp
cmp
std
mov
mov
in
dec
in
or
cld
inc
jne
rorb
adc
add
das
je
push
cli
iret
shll
mov
aaa
in
jecxz
aam
and
push
mov
lds
fcmovb
mov
hlt
imul
in
in
int3
sub
push
ret
cmp
shlb
shrl
mov
lods
sub
movsl
movsb
fcoms
in
cli
stos
lock
xor
js
sub
sub
mov
and
sub
fidivrl
les
sbb
loop
adc
ret
addl
rclb
and
les
cmp
add
and
mov
je
jecxz
addr16
fists
call
in
addr16
dec
push
andb
ret
lock
addb
nop
mov
ret
in
xchg
mov
mov
shl
mov
add
test
adc
movsl
mov
add
cmp
or
push
leave
cmp
aad
add
nop
mov
js
dec
adc
xor
test
jecxz
add
mov
or
mov
jl
int
xor
xor
dec
push
in
push
and
out
mov
out
inc
data16
push
ficoml
xchg
jno
cmp
dec
aam
fidivl
push
pop
sub
ja
in
push
pop
std
repnz
xor
inc
cwtl
stos
pusha
in
lods
push
orb
test
inc
and
xor
fwait
aam
fsubrs
in
stos
jo
cmp
jl
outsl
cli
jge
cld
lcall
sti
inc
xor
xor
adc
js
lea
into
mov
jl
ja
mov
pop
xor
cmpsb
mov
dec
jg
icebp
cld
jg
sti
lret
into
cwtl
pop
ds
dec
lock
inc
int3
adc
shr
fcoml
test
shll
cmp
add
xchg
movsl
and
mov
mov
negb
add
repz
pop
xor
cmpsb
gs
data16
int
add
fcom
xchg
mov
daa
es
mov
ds
cmpb
mov
fisttpll
push
mov
lock
adcl
notb
jge
cmp
incl
mov
fildll
insb
mov
cmp
cld
or
into
or
push
rcr
test
out
pop
cmp
and
and
mov
push
shlb
ds
mov
pushf
out
mov
inc
or
xchg
cmp
test
mov
push
sbb
imul
or
lahf
mov
mov
ret
cmp
mov
jp
sti
or
sbb
test
into
out
pop
cmp
stc
and
scas
clc
xchg
add
cwtl
in
lods
ret
adc
adc
push
scas
aas
mov
fildl
test
xchg
dec
cmp
add
fiaddl
ss
mov
jge
mov
lret
push
mov
daa
fiaddl
or
and
lds
mov
lds
cmp
aam
inc
cmp
nop
insl
cmc
sbb
cmp
cmp
jg
cmpsl
popf
mov
jns
xchg
stos
lods
movsb
xor
loope
pop
sbb
jle
xor
sbb
xchg
testb
mov
cltd
jnp
mov
ja
mov
push
sub
add
sbb
bound
sub
dec
mov
mov
hlt
movsl
int3
jb
pop
xor
adc
inc
imul
sub
cmc
rorl
cwtl
jmp
push
and
pushf
pop
cld
cmpsb
inc
add
imul
stos
push
inc
cmp
xchg
clc
cmpsb
cmc
shr
addb
loopne
cltd
scas
daa
in
or
movsl
int
hlt
push
insl
lret
das
fidivrl
insl
cmpsb
movb
movl
push
push
arpl
adc
ror
pop
cld
dec
add
mov
js
movsb
dec
outsl
cwtl
mov
sbb
pop
outsb
sub
jmp
jae
lret
sub
sti
lret
sti
mov
adc
sbb
sbb
dec
xlat
lds
ret
in
lcall
inc
iret
mov
push
sahf
lods
pop
push
rcl
decb
add
fmul
mov
or
mov
aas
add
fstpt
mov
mov
roll
cmc
push
dec
push
mov
xchg
dec
pusha
std
cmp
cmp
push
fwait
pop
out
insl
dec
cmp
dec
repnz
das
xor
mov
negb
aas
rcrl
xor
adc
mov
pop
xchg
and
push
inc
aaa
fldt
lret
pop
cli
into
adc
mov
mov
push
push
leave
ret
hlt
push
or
movsl
imul
xchg
adc
rorl
test
loop
pop
inc
imul
stos
adc
xchg
xchg
mov
xchg
mov
pop
inc
dec
or
scas
xlat
mov
lea
mov
lds
pop
mov
cwtl
adc
push
es
sub
mov
scas
mov
es
inc
inc
push
jecxz
rcrb
in
add
daa
cs
and
ja
shrl
mov
aam
jb
xchg
sets
mov
sbb
out
fists
shlb
jge
aas
mov
add
cltd
mov
ficoml
xor
sti
xor
jb
ret
dec
or
xchg
sbb
and
imul
adc
inc
sbb
jbe
or
in
ret
shll
repz
pop
pop
jb
andps
lock
pop
xchg
mov
shlb
incl
fmul
into
inc
scas
ret
sahf
inc
jb
adc
mov
xchg
push
jmp
xorb
mov
cmp
stos
push
enter
dec
out
popa
jns
push
jb
jbe,pn
roll
je
xchg
xchg
cwtl
mov
push
xor
out
fadd
cmpsb
ds
les
leave
push
int3
inc
addr16
xor
ret
into
inc
cltd
sub
adc
push
leave
cmp
test
jnp
and
sbb
and
jmp
lret
fmul
movsb
pusha
push
xor
test
push
mov
stos
fadd
decb
cmp
mov
movsb
jnp
jmp
ljmp
cwtl
mov
jo
sub
loope
mov
shll
sub
jecxz
sarl
pop
or
add
fxch
clc
mov
sbb
icebp
pop
dec
sbb
dec
nop
push
xchg
jmp
xor
ret
pop
std
int3
aaa
cmpsb
cmpsl
mov
add
clc
in
add
popf
movsb
clc
and
or
test
pop
ret
inc
ss
sub
ss
fcoml
movsb
push
pusha
outsl
mov
jo
les
inc
sub
push
je
scas
inc
jno
xor
data16
aad
mov
pop
pop
mov
adc
ljmp
vpunpckhdq
enter
adc
jo
inc
cmp
sbb
pop
fistl
ja
lahf
push
xchg
mov
xor
dec
inc
sahf
cwtl
cmp
jle
rclb
push
fimull
fnsave
push
out
mov
sbb
lret
push
add
cld
movsl
clc
leave
add
fistps
enter
lods
outsl
sbb
adc
or
sub
iret
sahf
test
mov
fwait
sub
out
insb
xchg
aam
stos
js
jmp
loopne
sbb
inc
dec
cmpsb
push
cmpsb
jecxz
fimuls
xchg
push
sub
sti
mov
pop
lret
sarb
mov
sbb
loop
faddp
inc
pop
mov
rclb
outsl
xor
push
aad
cwtl
dec
mov
xor
inc
data16
faddp
cmp
mov
mov
inc
mov
or
fidivs
sbb
stos
mov
sub
pop
mov
xchg
jp
and
clc
mov
or
aas
fdivrl
xchg
add
mov
mov
ja
out
and
dec
xor
enter
popf
mov
jno
ret
shlb
and
adc
and
cmp
jbe
cltd
ds
sub
jg
sub
pushf
ret
mov
fsubp
xrelease
inc
loope
icebp
mov
push
mov
sbb
ljmp
in
dec
or
cmp
fstps
mov
and
sub
xor
xor
test
cmp
das
pop
in
pop
nop
cmp
mov
mov
ljmp
and
cs
sub
mov
add
outsl
pop
bound
scas
aam
imulb
push
inc
mov
or
movb
add
outsl
push
faddl
adc
mov
out
push
push
lret
scas
push
aas
into
add
cmp
mov
lods
pop
sar
in
movsb
dec
jno
into
dec
mov
mov
shr
sbb
int
lret
add
jne
jp
lods
lods
mov
fs
gs
cmc
je
or
lret
and
jb
mov
dec
sbb
imul
mov
stc
jle
jo
xchg
jb
push
fmull
pop
stos
out
mov
repnz
sbb
outsl
mov
roll
adc
xchg
mov
xor
mov
dec
inc
jne
mov
js
or
xor
fcomps
test
mov
dec
test
out
xchg
hlt
or
push
add
aas
sbb
mov
jmp
mov
repnz
sahf
push
aas
leave
scas
scas
daa
push
movsl
dec
lret
jae
leave
out
ss
nop
data16
leave
inc
cmp
int3
xor
addr16
sbb
daa
es
adc
repz
push
xor
and
sub
std
dec
ss
xlat
xor
fwait
push
inc
repz
scas
mov
fwait
ret
cmp
sbb
and
jle
adc
sbb
in
js
mov
sbb
ficoml
fsubs
adc
push
add
out
xchg
inc
jmp
test
out
in
and
xlat
mov
xor
sbb
roll
cmp
mov
jmp
mov
roll
shrl
add
data16
std
xlat
jl
sahf
mov
add
dec
out
sbb
cmpsb
cs
fbld
inc
add
add
adc
add
pop
cmp
jno
scas
xchg
sub
add
repz
lods
lret
into
ror
out
sub
fildl
mov
sub
jbe
and
out
push
test
cmp
jo
push
int3
inc
out
xchg
fildl
icebp
addr16
pusha
negb
aam
or
dec
bound
stos
or
mov
fucomp
fcomp
lods
aas
ss
xchg
and
aas
shll
dec
mov
jns
bound
xor
and
cld
and
cmp
int
sbb
addr16
mov
shl
outsl
add
ret
mulb
mov
jnp
nop
ret
pusha
sub
je
sub
wrmsr
and
push
fisubl
mov
lock
pusha
jbe
jno
cmp
adc
fmuls
cs
scas
out
add
mov
adc
jbe
push
incl
xchg
in
pop
add
scas
inc
test
mov
cmp
sti
cld
outsb
pop
cli
mov
test
jmp
fcmovb
xchg
gs
ss
mov
fdiv
sbb
popl
pop
push
imul
cmp
adc
push
adc
dec
jo
mov
mov
incb
mov
sub
sbb
push
jbe
loop
mov
in
shll
or
lret
jae
dec
pop
sub
pop
mov
mov
sbb
mov
rep
mov
scas
jl
add
icebp
aam
into
lahf
push
out
xor
inc
ret
sub
lahf
jp
xchg
xchg
dec
pop
dec
loopne
xor
lcall
mov
xchg
rcrl
enter
cmc
aad
push
mov
push
loopne
fidivrl
in
mov
cmp
sub
and
push
mov
cmpsb
dec
out
add
jae
cmpsl
pusha
nop
lret
mov
cmp
test
out
sbb
cmp
dec
adc
mov
jle
and
cmpsl
js
sub
mov
mov
dec
jecxz
ret
ds
jl
adc
cs
push
xor
mov
mov
sub
mov
add
stos
xlat
je
out
icebp
adc
mov
je
xchg
cmp
lret
rcrl
pusha
shlb
daa
js
dec
or
xor
addr16
add
out
cs
ss
andl
add
scas
xchg
test
sbb
pop
cli
lods
sub
dec
dec
in
push
jo
adc
cmp
sbb
jne
mov
cli
dec
mov
sbb
xchg
aam
in
mov
pop
cmp
xchg
mov
lret
jno
das
hlt
xchg
adc
xchg
sarl
sbb
and
or
lods
shrb
stc
pop
insb
xchg
out
mov
and
xchg
sti
out
sbb
xor
xchg
push
test
dec
popa
or
xchg
or
xlat
mov
sahf
mov
mov
or
cli
cs
push
dec
roll
lea
and
call
sarb
ret
xchg
lret
dec
lock
std
test
aas
das
xchg
js
or
ljmp
add
push
lret
into
fwait
stc
loope
xchg
fcmovnb
xchg
loop
jmp
cmpsb
or
dec
lods
inc
cmp
bound
popa
pop
arpl
ljmp
and
jne
xchg
and
lcall
insl
test
pop
add
mov
inc
and
add
mov
or
xchg
jle
add
mov
xchg
arpl
xchg
and
mov
mov
stos
leave
mov
xchg
negl
fdivrl
push
inc
pop
adc
adc
mov
jne
cmp
adc
mov
push
jb
xchg
leave
dec
sbb
xor
mov
mov
dec
test
sbb
notb
mov
push
nop
test
cmp
fcmovu
cwtl
add
lret
sbb
jno
xor
dec
sarb
push
sahf
pusha
rorl
test
push
push
mov
mov
inc
mov
jo
lods
jnp
push
mov
ret
pop
sbb
in
icebp
movsl
add
mov
pop
shll
mov
push
pop
adc
mov
jno
mov
lret
jne
jae
xor
pop
out
adc
lea
lods
cmp
repz
sbb
cwtl
cmp
stos
mov
jmp
mov
lods
push
ret
xchg
mov
mov
movsb
xor
add
inc
add
push
mov
je
mov
mov
mov
lock
imul
out
cmpb
jecxz
mov
mov
add
xchg
imul
mov
jg
inc
out
or
popf
mov
jns
dec
add
jae
pusha
cmp
xchg
hlt
pusha
cltd
lret
jae
add
mov
adc
movsb
lods
inc
mov
sbb
push
js
xor
insb
inc
sbb
add
ja
dec
scas
inc
sahf
mov
inc
lods
inc
or
sahf
cwtl
stos
in
mov
lods
add
cltd
aam
test
cmp
lods
adcl
mov
mov
jge
ss
cmp
jecxz
mov
test
sbb
daa
push
mov
xchg
xchg
lods
fucomip
addr16
adc
arpl
mov
out
cli
imul
push
cmp
jmp
std
dec
dec
push
arpl
fcomp
pop
inc
ret
mov
rorb
pop
mov
fnsetpm(287
mov
in
jle
lret
lahf
and
pushf
sbb
adcl
add
inc
repnz
cmp
sub
and
mov
dec
movsb
mov
popa
and
divb
inc
xchg
ja
lods
pop
jns
add
out
popf
lcall
shlb
imul
rclb
adc
mov
adc
test
rep
mov
xadd
sub
in
fisubs
sbb
jnp
jmp
mov
shlb
inc
sbb
rcrl
aad
popf
rolb
xchg
jbe
lret
in
add
ret
es
jne
inc
push
xchg
adc
leave
or
pop
mov
fnstcw
push
mov
call
xor
sarl
xchg
je
cmpsb
xchg
aad
out
call
inc
dec
call
sub
jne
mov
sti
data16
fwait
rorl
xchg
push
or
loop
out
jg
adc
and
xor
icebp
cmp
or
mov
insl
test
call
jne
adc
add
fwait
adc
xchg
scas
das
lods
mov
sub
pop
and
jns
or
push
das
or
pop
cs
test
gs
or
fistl
mov
sub
nop
sub
dec
sbb
lret
mov
out
fwait
lods
mov
test
inc
bound
jbe
mov
addr16
shl
xchg
stos
fistps
push
jl
rorb
mov
and
repz
roll
mov
testb
cmc
lcall
insl
adc
cmp
mov
jmp
pop
sub
insl
cli
jae
movsl
inc
sbb
mov
xor
and
adc
xor
outsl
stos
cltd
cld
xor
mov
xor
nop
cwtl
or
imul
pusha
cwtl
enter
mov
jmp
ljmp
callw
mov
loop
ljmp
ja
push
pop
add
loop
jae
xor
cmpsl
adcb
jg
into
andl
add
aas
add
pop
lods
lea
xor
enter
xor
dec
out
mov
add
notl
loop
adc
into
xor
in
or
stos
mov
je
imul
in
cmp
sub
test
mov
mov
push
push
rorb
jns
mov
mov
cltd
sbb
pop
pop
cmpsl
icebp
arpl
sahf
rol
pop
mov
out
mov
push
mov
push
testl
fwait
sub
ss
sbb
pop
jge
mov
fcmovnu
in
popf
adc
pushf
movsl
mov
push
push
or
in
inc
lock
cli
rcrb
rorl
mov
and
mov
fdiv
lods
scas
jno
adc
movsl
adc
arpl
fcmovne
das
fisttpll
xchg
xchg
out
push
repz
mov
jno
sbb
jne
fstpl
repnz
mov
in
and
shl
or
pop
test
in
insl
inc
addl
daa
testl
dec
push
or
repnz
add
xor
inc
adc
jg
cmpsb
sub
lahf
imul
call
sbb
in
mov
outsl
es
fs
mov
popf
mov
insl
xor
xchg
pop
inc
stc
push
adc
push
rol
dec
popa
sti
xor
imul
and
cwtl
mov
push
adc
int3
mov
pop
mov
sbb
mov
pop
mov
pusha
push
clc
and
shl
xor
push
pop
out
jl
and
insl
mov
rcll
add
xor
push
push
xchg
lods
sahf
or
insb
js
mov
push
rcll
sbb
into
pop
dec
push
popf
jecxz
roll
adc
ret
aam
push
idivb
daa
add
mov
push
xchg
ret
xchg
cli
out
mov
jnp
cld
fcmovnu
roll
cli
and
leave
bound
add
xlat
int3
enter
mov
mov
jmp
jecxz
mov
or
jno
xchg
std
or
stc
repz
mov
cmpsb
sub
sbb
add
push
pushf
iret
jl
testb
adc
in
adc
xor
xchg
out
mov
mov
adc
jnp
inc
add
adc
sbb
cmp
sub
out
xchg
mov
rcl
sbb
add
mov
ficomps
insl
lods
and
cmp
and
outsl
xor
push
out
dec
repnz
mov
in
insl
out
in
mov
cmp
dec
pop
jae
test
push
cltd
xor
sub
xchg
pop
mov
push
dec
xchg
test
je
sbb
sub
xchg
aam
cmpsl
das
dec
xor
in
lahf
fdiv
cmpl
inc
and
mov
inc
call
push
pop
adc
mov
push
aam
lods
push
stos
in
test
push
add
inc
fsubrs
or
pop
jnp
xchg
and
cltd
stc
out
cmp
and
popa
jo
lods
aam
pop
adc
mov
xor
ret
adc
mov
sub
mov
mov
shlb
xchg
ret
dec
adc
aaa
add
in
into
lret
cwtl
shll
fisttps
mov
imul
sbb
xchg
aad
lret
or
add
pop
btc
in
push
cltd
jnp
int3
push
movd
insb
shlb
arpl
xchg
test
lods
sub
cmpsb
mov
or
mov
in
dec
mov
sub
stos
in
add
call
or
in
ljmp
in
sub
xor
xchg
pusha
dec
sub
lcall
mov
and
aas
or
aad
aad
les
cmpsb
pop
cmp
les
mov
in
ljmp
push
jecxz
aam
je
and
pop
sub
stos
shlb
jle
rclb
rcl
fsub
movhps
ds
dec
mov
cmpb
nop
ret
pop
jge
or
or
jge
and
inc
lock
jl,pn
leave
aad
stc
sub
ds
mov
stos
xchg
das
mov
test
xchg
imul
push
lahf
cmp
xor
js
dec
stos
xor
adc
in
xchg
popa
or
repnz
dec
sbb
xorl
inc
cmp
cli
imul
gs
loop
mov
scas
mov
in
mov
mov
repnz
and
js
arpl
sbb
hlt
in
adc
std
je
dec
cmp
insb
dec
test
and
es
sub
popf
push
xchg
call
sub
and
test
inc
arpl
cmp
cs
int3
clc
stos
mov
jne
fldl
push
aas
xchg
inc
adc
sahf
movsb
mov
xchg
mov
out
sbb
in
addr16
pushf
lahf
out
ja
pop
in
adc
pusha
xor
sub
stos
pop
lcall
dec
jb
push
dec
mov
or
adc
push
stos
xchg
test
fdiv
test
push
loopne
mov
jge
inc
inc
xor
cli
push
ja
jno
cld
outsl
mov
out
test
inc
cs
add
adc
cmc
sub
pop
leave
adc
add
dec
divl
cmpl
enter
in
rolb
lret
pop
mov
add
mov
in
push
rcpps
jge
mov
mov
mov
fsubrl
dec
bound
adc
adc
rol
movsb
jmp
pushf
mov
push
insl
inc
bswap
jge
xor
lods
or
mov
push
test
cmp
daa
xor
sbb
les
xor
andb
push
lret
xor
adc
stos
adc
shlb
mov
mov
dec
mov
inc
aam
loopne
xchg
repz
cwtl
cli
pop
popl
mov
mov
mov
mov
mov
cwtl
lret
fisttpl
xchg
xchg
mov
jae
sahf
fucomp
inc
xor
mov
inc
fcmovb
sbb
push
mov
push
loope
or
shl
loopne
mov
adc
push
xor
repz
mov
stos
sub
cmc
int
mov
xchg
ja
jno
shrl
icebp
and
mov
sbb
ret
jp
ds
movsl
mov
sbb
add
rorb
inc
cmp
or
dec
jb
xchg
inc
and
pop
lods
cli
fnstcw
hlt
jo
pop
imul
jg
iret
movsb
mov
les
lds
adc
xor
lahf
in
in
sbb
montmul
cmpsb
orl
mov
add
push
pop
jne
enter
daa
push
jl
jle
fidivrs
pushf
push
push
mov
jge
mov
hlt
out
xor
int3
inc
jecxz
jbe
mov
mov
dec
mov
rcr
xchg
jnp
dec
subl
xor
pop
cwtl
push
push
push
ds
adc
arpl
pop
mov
mov
pop
bound
shlb
out
out
jp
dec
push
fdivr
mov
bound
test
fwait
pop
mov
cmp
sbb
and
repnz
add
pop
aaa
adc
inc
push
mov
outsl
push
lods
cmp
dec
cmpsl
sub
push
mov
enter
stos
mov
sbb
dec
mov
out
out
xchg
inc
fsubrl
popa
add
cmpsl
cmpl
push
testl
push
jg
jne
fdiv
cmp
jnp
in
inc
cltd
and
lds
in
aad
mov
js
push
test
cmp
sub
jecxz
add
outsl
aam
pop
mov
adc
andl
sub
xchg
add
lea
mov
sub
mov
mov
call
in
fcomp
sbb
jecxz
push
fidivrs
mov
in
cmpsl
cmp
pop
xchg
movsb
mov
lcall
push
jge
dec
inc
dec
out
shll
mov
adc
frstor
popa
push
mov
sbb
into
into
mov
mov
cli
xor
cmp
mov
nop
lock
cwtl
lods
jge
in
jl
inc
add
js
mov
fnstenv
jge
enter
leave
lods
cmp
shll
lcall
dec
adc
popf
test
enter
int
sbb
inc
lret
mov
inc
sub
mov
fcomps
ja
sub
add
pop
and
in
cmp
mov
in
lret
add
mov
mov
sbb
or
and
lcall
lahf
das
jge
mov
mov
mov
fucomp
add
pop
fsubr
pop
mov
adc
out
cwtl
mov
and
pop
xchg
lods
jne
sbb
jg
xchg
or
mov
inc
jne
xor
lods
add
mov
lods
test
fistpl
out
sar
insb
mov
adc
inc
cmpsb
aad
or
shr
sub
daa
xchg
out
mov
inc
xchg
int3
outsl
push
inc
push
push
arpl
mov
cs
es
lea
sub
xchg
shrl
inc
cmp
push
es
jecxz
inc
loopne
imul
bound
xchg
add
repz
xchg
mov
jo
dec
add
mov
dec
rcll
scas
fisubrs
adcb
inc
addr16
das
inc
cs
or
pop
xchg
dec
cwtl
repnz
dec
mov
icebp
adc
adc
and
mov
nop
add
mov
mov
sub
fcmovb
push
mov
clc
inc
mov
xor
xchg
add
xchg
ret
xor
sbb
mov
test
inc
add
xchg
filds
jecxz
mov
int
push
mov
pop
sbb
or
in
and
inc
icebp
repnz
clc
push
add
lea
adc
adc
cmpsl
out
lods
xchg
jmp
or
rcrl
mov
lods
push
out
push
aas
cmpsl
fmul
and
push
popa
sar
in
dec
les
dec
inc
or
dec
xchg
test
and
lds
fbld
shll
xchg
adcb
fistpll
cli
mov
xor
dec
scas
in
lock
aaa
inc
mov
xchg
jp
push
jle
movsb
push
jle
jae
in
jl
stos
push
jnp
addb
das
repz
jl
in
jno
push
push
fcomps
push
mov
scas
ljmp
divb
xor
mov
pop
sbb
jo
adc
jge
pop
sub
lock
fs
cmp
nop
mov
nop
bound
in
xchg
jmp
fwait
inc
enter
inc
mov
pop
ljmp
lret
pop
push
inc
loope
pop
test
xchg
mov
add
sbb
mov
ficoml
pop
lret
xchg
scas
test
adc
andb
xchg
cmp
xlat
aam
push
out
out
das
test
cmp
lods
add
inc
call
popa
jnp
mov
xor
ds
cwtl
aaa
pop
roll
and
rcll
nop
mov
add
cmp
cmp
xor
fstpt
icebp
fs
das
jge
xchg
fwait
aam
mov
cmpsb
mov
or
ljmp
mov
das
sub
and
mov
fistl
test
adc
jae
adc
sbb
pop
insl
repz
sbb
or
fs
sbb
loop
iret
ja
mov
cmp
in
pop
mov
xchg
jae
mov
mov
imul
mov
pusha
xchg
mov
arpl
lock
inc
stos
rclb
jecxz
mov
mov
fwait
xlat
jnp
sbb
andl
fildl
xchg
movsb
sbb
mov
push
add
iret
xchg
adc
out
ljmp
push
pushf
std
mov
into
fmul
das
gs
lds
mov
pop
mov
push
dec
push
loopne
jb
addr16
inc
mov
sbb
xor
inc
insb
jae
sub
pop
pushf
jb
xchg
pushf
push
or
cmp
push
inc
sarl
lods
popa
dec
pop
dec
xchg
dec
push
in
sbb
mov
outsb
and
mov
push
gs
mov
out
and
fcmovb
pop
cld
adc
test
xchg
lret
cmp
fs
sub
dec
inc
push
aam
test
je
ds
popa
xchg
add
and
jecxz
pushf
xchg
xor
cwtl
dec
pop
pop
mov
out
lods
outsb
or
movsl
and
adc
ljmp
outsb
pop
ljmp
test
in
lret
inc
jbe
addr16
jmp
sahf
push
mov
or
movsb
std
rorl
sub
out
das
iret
xchg
mov
inc
lret
mov
fwait
push
fs
mov
xor
aaa
loop
jl
cld
pop
aad
and
jle
lea
test
stos
fmull
aaa
pop
mov
test
inc
das
roll
subb
xchg
jae
cltd
sbb
add
xor
loop
push
mov
adc
loope
movsl
mov
into
mov
jge
xchg
cmp
das
stc
leave
mov
cmp
xchg
std
jno
inc
mov
mov
inc
lods
lods
or
sahf
mov
leave
imul
aam
into
xor
or
outsl
push
adc
or
mov
jno
sbb
push
lahf
mov
cmc
mov
lods
lret
aas
loop
mov
mov
jns
loopne
jb
outsl
push
or
rclb
ds
push
mov
in
and
jae
add
jbe
xchg
ss
stos
aad
dec
test
xchg
mov
jmp
add
dec
daa
xor
pop
push
rorl
stos
test
stos
mov
push
add
fnstcw
push
addb
xor
adc
pop
jmp
lret
es
mov
mov
lahf
xchg
out
ret
outsl
sbb
adc
lsl
js
ljmp
cmp
shrb
das
sub
cmp
lods
push
lahf
std
imul
loope
mov
mov
shl
popa
push
stos
rol
add
push
jp
arpl
popf
inc
arpl
mov
mov
sahf
js
ja
lds
das
pop
fwait
or
daa
cmp
push
pop
xor
in
aas
add
pop
jbe
inc
leave
jae
cwtl
out
repnz
mov
stos
movsb
xor
jae
scas
pop
out
and
sub
mov
fstps
repnz
aas
repz
aam
and
or
enter
lret
dec
jo
inc
orl
inc
fcmovb
mov
or
outsb
push
incb
and
in
or
idiv
cs
out
mov
sbb
pop
decl
pop
repnz
or
leave
push
inc
lock
repnz
push
sub
inc
mov
es
faddp
sbb
ret
test
jecxz
and
popa
fistl
inc
adc
jge
cs
xchg
aad
cmpl
js
cmp
xchg
outsb
aas
sub
pop
fldlg2
sarl
mov
or
js
adc
pushf
addr16
pop
add
xchg
mov
repnz
cltd
cmpsb
das
icebp
mov
pop
enter
push
stos
mov
and
push
mov
mov
int3
or
pop
std
mov
mov
dec
lods
lea
adc
lcall
or
mov
mov
cli
call
jb
decb
cmp
je
jne
inc
pop
out
jmp
pushf
jle
lods
pop
popf
lods
lret
mov
in
xchg
ret
fnsave
adc
mov
adc
add
fistpll
jbe
cmp
call
dec
cli
cmp
mov
inc
daa
xor
je
arpl
cwtl
fstpt
call
sub
cmp
mov
enter
iret
inc
cltd
jle
pushf
push
mov
aaa
repnz
adc
lcall
jle
jmp
sarb
in
fldenv
jno
adc
xchg
xchg
lock
insl
loope
out
xor
cmp
mov
mov
cmp
out
iret
jbe
shll
cli
push
sub
xor
push
sarl
mov
cli
or
jnp
sbb
sbb
popa
andl
test
pop
xchg
push
pop
out
add
fnstcw
enter
dec
and
adc
mov
pop
xor
add
rorb
ljmp
xchg
mov
or
in
pop
pop
push
mov
das
mov
push
cmp
test
and
das
gs
and
inc
scas
out
pop
cmpsl
jle
fdivr
dec
xchg
cmc
sti
iret
les
cmp
lcall
mov
push
sbb
fstl
dec
xchg
add
jns
dec
or
push
dec
pusha
sahf
cmpsb
xlat
lods
outsb
inc
mov
divl
pop
sbb
xor
rcrl
fs
lcall
adc
pop
jmp
cwtl
aas
movsb
shr
jae
in
lahf
int
bound
hlt
push
arpl
mov
decb
jecxz
pop
sub
sub
and
loop
sbb
cmp
push
sub
inc
leave
sub
xchg
cmp
or
or
fwait
cmpsb
jae
and
jnp
mov
popf
cmc
dec
sub
into
mov
scas
inc
xor
sub
divb
cmpsl
xchg
cli
push
subl
mov
popf
push
mov
out
bound
mov
inc
std
bound
outsb
mov
lods
mov
adc
jb
mov
add
jl
jo
movsl
dec
push
in
jge
or
int
lahf
arpl
push
mov
mov
push
inc
sub
adc
add
or
test
mov
cmpsl
mov
jmp
fistpll
sbb
jl
adc
cmp
jp
daa
cli
in
adc
outsb
inc
mov
sub
dec
xor
and
adc
mov
sahf
pop
lds
shr
jg
pop
jmp
aam
fistpl
pushf
sub
lret
and
xchg
mov
jl
push
dec
stos
hlt
push
inc
fistpll
jnp
movsb
ja
inc
xchg
cmp
cld
pop
stos
aaa
sub
jl
lret
add
and
fildl
mov
repnz
xchg
jle
jg
repnz
jbe
jmp
test
inc
xor
sub
inc
jl
xor
dec
cmc
xorb
repnz
aad
sub
sbb
add
xchg
or
jle
aad
sarl
xor
pushw
subb
or
ja
adc
ds
jb
hlt
repnz
jbe
pop
mov
push
punpckhbw
popf
pop
push
and
rorb
movsl
ljmp
or
or
mov
loope
xor
popf
mov
xor
jge
inc
push
cs
aad
inc
test
add
addr16
sub
ja
js
xor
pop
scas
rol
call
mov
ss
push
push
and
add
dec
stos
adc
and
rorb
adc
cltd
fisubs
std
or
add
or
rcr
mov
dec
movl
icebp
pop
cmpsb
add
dec
shrb
push
cs
adc
push
cltd
in
jl
adc
rorb
mov
arpl
and
out
scas
ja
int3
adc
sbb
cmp
stos
pop
out
jge
cmp
xchg
repnz
xchg
test
jge
std
add
loopne
fsub
nop
push
and
jb
dec
jae
aas
inc
cmp
adc
add
inc
in
or
jbe
push
enter
cs
xor
fiaddl
mov
cmp
adc
sub
lods
pop
jno
push
mov
jo
xor
jae
adc
addr16
sbb
adc
lock
in
rcrl
xchg
fists
inc
and
mov
shl
sbb
add
mov
loope
dec
mov
or
rorl
out
pop
fcmove
das
sbb
in
pop
jb
pusha
add
mov
lods
inc
insb
dec
push
faddl
xchg
mov
out
aas
mov
jne
mov
sub
in
jecxz
adc
ret
jp
leave
and
pop
sbb
jb
xor
inc
nop
adc
ljmp
mov
aaa
outsb
push
mov
pop
repz
out
inc
dec
das
outsl
pop
lock
mov
aad
test
push
stc
das
mov
out
into
sbb
in
and
or
inc
lret
pop
shll
fs
mov
insb
jl
cs
push
xor
scas
mov
pop
add
xor
lret
push
push
xchg
xor
xchg
or
out
pop
jns
mov
and
scas
outsl
loopne
iret
add
jecxz
sub
shll
inc
pop
gs
pop
jno
pop
and
insb
aas
jnp
mov
testl
lret
jge
iret
or
dec
and
pop
adc
addr16
pop
jge
js
adc
lock
aam
add
add
add
roll
xchg
int
mov
mov
sbb
sub
fwait
pop
arpl
ljmp
mov
cmc
push
adc
and
stc
sub
cmpsl
jl
pop
call
es
flds
sbb
cmp
inc
pop
add
dec
dec
mov
xor
jmp
pop
mov
and
inc
scas
xor
adc
cmc
xor
das
inc
leave
insb
popf
test
call
mov
fcmovbe
scas
repz
out
out
mov
push
loope
jno
lock
dec
popf
xor
add
popa
stc
in
pop
arpl
adc
cmovb
popa
mov
int
jl
push
into
cwtl
mov
jl
adc
std
movsb
sti
adc
aad
jb
pop
ret
push
mov
arpl
pop
mov
cltd
and
mov
push
mov
inc
pop
push
movsl
ror
les
inc
mov
stos
lret
dec
testl
cli
cltd
jnp
lahf
pop
popf
and
cmp
ss
jg
das
sbb
cmpb
std
add
jb
test
jb
inc
cmp
xor
repz
pop
cli
fs
sbb
xchg
imulb
sub
ljmp
aam
mov
imul
int
push
aaa
dec
orl
lock
lock
out
and
xorl
iret
ret
mov
mov
push
leave
pop
xlat
in
mov
out
fists
sub
and
pop
mov
sub
leave
sbb
in
dec
aaa
mov
jp
push
scas
inc
or
or
in
sub
inc
jae
inc
mov
je
pushfw
mov
pop
cmp
out
popa
les
bnd
iret
mov
xor
or
sub
jb
in
fwait
inc
lds
pop
out
fwait
bnd
jg
jecxz
mov
fwait
cmp
and
test
xor
test
jo
mov
test
mov
or
mov
notl
pop
hlt
adc
cmp
in
jb
fldt
add
adc
push
pusha
xchg
sub
and
push
lods
sub
cmc
hlt
insl
jecxz
pop
in
es
jp
rorl
test
repnz
xchg
mov
add
push
sub
aas
mov
mov
cmp
push
add
jbe
push
enter
movsb
test
cwtl
outsb
mov
sarl
in
jge
bound
cmpsb
mov
xchg
push
into
int3
pusha
orl
lds
lret
adc
ret
test
ljmp
dec
cwtl
int3
mov
mov
fsubs
addr16
jecxz
and
sbb
sub
xor
cs
loope
pop
mov
mov
dec
cwtl
mov
adc
test
mov
mov
fs
add
into
push
cmpsl
jp
test
push
push
loope
cmp
dec
fnsave
xchg
mov
ljmp
or
addl
stos
xor
int
or
imul
mov
add
add
pushf
jnp
loope
push
xlat
sti
and
test
mov
mov
icebp
fs
sbb
arpl
aam
pop
cmp
sub
dec
jl
test
dec
jnp
sub
fsubl
push
mov
cmpsb
mov
int3
imul
jno
xchg
push
dec
dec
shl
jns
popa
out
ds
xchg
repz
lret
jl
loop
ret
lret
sub
xor
sub
pop
scas
and
sbb
js
mov
and
add
and
cwtl
outsl
into
outsb
roll
scas
push
rorl
fistps
push
inc
sub
mov
cld
movsl
movsb
sti
add
test
or
in
sbb
mov
shll
mov
cmc
cmp
mov
xor
scas
jp
mov
cmp
lret
push
jp
shrl
sub
negb
scas
scas
int
jbe
mov
repnz
mov
jo
out
push
popf
hlt
dec
lea
cmpsb
and
inc
cmp
out
test
lods
xchg
inc
dec
icebp
popa
data16
xlat
sbb
imul
data16
jge
pop
or
lret
rorb
inc
xor
sbb
mov
adc
push
lods
xchg
popa
fucomip
and
ljmp
sub
inc
inc
mov
xchg
mov
jp
push
adc
or
sbb
xor
mov
loope
aas
into
inc
mov
inc
aas
lds
int3
cmp
or
mov
sbb
xchg
or
ss
sbb
pop
cli
jbe
sub
stos
pushf
aaa
or
inc
pop
lea
mov
lcall
out
push
fwait
jb
neg
dec
and
fldt
xor
mov
shlb
popa
cmp
rcll
in
mov
push
sub
sbb
dec
pop
lret
loopne
xchg
mov
sahf
jno
repnz
mov
testb
mov
sbb
jge
hlt
xor
test
scas
dec
sub
in
dec
test
xor
pop
cmp
jnp
ja
addr16
adcl
fs
or
push
sbb
scas
loopne
jb
lahf
add
test
mov
cmp
cmpsl
notb
mov
pop
jle
dec
test
dec
mov
mov
clc
sti
xchg
fcomps
sub
xor
fisubrs
xor
dec
jge
jg
add
mov
movb
jge
inc
loop
xor
pusha
push
aaa
and
mov
pop
or
xchg
xor
push
pop
and
outsl
movaps
dec
in
das
inc
pop
sbb
xor
loopne
test
fs
xor
or
sub
cs
clc
pop
adcl
insl
mov
inc
push
xorb
inc
sub
rol
clc
fisubrl
jecxz
stos
xchg
xchg
pushl
add
mov
xor
jecxz
jge
mov
cwtl
or
jle
jl
cmpsl
popf
pusha
dec
jle
lret
push
mov
jmp
inc
add
xchg
mov
lret
jnp
fstpl
je
xchg
pop
pushl
inc
cmpsb
mov
push
sub
jecxz
cmp
push
out
clc
scas
mov
pop
cld
push
cmp
test
sub
or
xor
test
mov
mov
xor
repnz
in
cmpb
imull
mov
fwait
push
aaa
notb
dec
mov
inc
xchg
sub
sbb
push
ret
scas
cmpsb
bound
ds
add
fidivrl
xor
pop
shll
mov
enter
pushl
lods
mov
xchg
mov
adc
inc
fwait
insb
push
push
int3
fcompl
dec
bnd
icebp
xlat
test
lea
das
shrb
cmpb
push
xor
gs
mov
mov
push
jge
xor
idiv
sub
adc
jbe
add
loopne
punpcklwd
popa
ret
ds
shll
orl
pop
je
mov
push
out
jno
outsw
negl
not
incb
sbb
jb
mov
push
or
adc
jecxz
pop
inc
outsb
add
mov
shlb
dec
or
or
out
lcall
outsb
mov
mov
lds
aas
imul
push
out
fmull
inc
push
xor
push
popf
or
jge
push
into
push
outsb
lret
jno
add
lods
lret
cwtl
mov
shll
pop
aas
fdiv
fisubrl
xchg
pop
dec
jecxz
loopne
lea
push
push
ret
rolb
fwait
mov
or
dec
in
inc
sub
repz
in
hlt
mov
shlb
aad
inc
std
sahf
mov
add
insb
add
push
adc
mov
adc
cs
sbb
or
dec
mov
jp
mov
xor
xchg
nop
mov
js
mov
fstl
fnstsw
lock
and
stos
xorl
out
pop
sbb
loop
xor
or
sti
das
ret
mov
movsl
adc
aaa
mov
pusha
jno
mov
test
lods
nop
xor
pop
xchg
pushf
jnp
xchg
dec
jle
push
leave
mov
inc
xor
adc
arpl
sahf
sbb
mov
rolb
pop
or
push
mov
je
cmpsb
inc
xor
out
loop
cmp
testb
jp
jno
adc
push
fsubrl
push
out
pop
loop
cmpsl
orl
jg
inc
mov
adc
in
jnp
push
aam
stos
mov
add
out
mov
xchg
imul
add
ss
stos
sub
push
aas
adc
cmp
pop
xchg
mov
popa
jl
lcall
sbb
or
cmp
orl
sub
loop
pop
ss
ljmp
movsb
subl
lss
mov
lahf
es
sti
sub
jb
jg
sub
mov
ljmp
and
ds
icebp
fmuls
cmp
test
sub
imul
sub
repz
ljmp
fnstsw
jnp
dec
outsb
scas
call
cmpsl
jle
cltd
sbb
loope
pop
cmp
adc
nop
aas
lret
testb
dec
call
xchg
dec
iret
ds
sbb
stos
xlat
mov
pop
xor
push
sbb
mov
jmp
mov
mov
jge
inc
test
es
test
dec
pusha
fistpl
lock
push
dec
xlat
cmpl
fcompl
fucomip
add
sbb
or
cmp
je
arpl
adc
bound
inc
decb
and
movsb
insl
shrl
jge
vorps
ss
mov
imul
mov
pop
testl
sub
iret
push
fwait
rorb
jmp
jne
or
and
cmp
lahf
add
push
mov
mov
push
jae
in
and
insl
in
jne
repnz
andb
mov
dec
and
stc
push
test
mov
xchg
and
xor
mov
xchg
outsb
xor
sahf
inc
bound
xor
mov
insb
sub
das
sub
test
and
pop
mov
in
xchg
lcall
inc
push
pop
sti
mov
ds
in
mov
mov
nop
movsb
enter
inc
cwtl
or
inc
cmpsl
mov
push
icebp
out
ja
leave
fcmovnu
fnstenv
jb
in
add
adc
sti
les
add
mov
xchg
add
ud0
mov
jnp
pop
cmp
cmp
or
outsl
ss
int
sub
pop
push
stos
sub
daa
mov
jmp
repz
scas
pop
mov
push
sbb
jno
iret
loope
mov
mov
and
add
scas
jmp
inc
and
les
inc
inc
sbb
xchg
adc
push
dec
std
sbb
mov
js
pop
cmp
leave
or
mov
mov
adc
or
xor
sub
adc
dec
sbb
pop
test
cmp
out
int3
or
std
std
aaa
in
in
daa
test
in
test
jae
into
pop
cmp
repnz
jae
out
shl
adc
mov
xchg
dec
call
leave
push
jnp
xor
mov
or
pop
aad
je
jg
push
pop
push
pop
stos
mov
mul
xor
fsubrs
outsl
lods
mov
jge
movsb
in
push
dec
inc
cwtl
fwait
xchg
sahf
push
neg
jg
call
pop
lcall
js
adc
xor
fs
daa
movsl
jmp
scas
lret
xchg
lret
or
adc
adc
adcl
mov
ret
xchg
sbb
adc
inc
xchg
sbb
popa
add
jp
or
in
add
cmp
sarl
push
sub
jg
pop
out
cmp
sub
test
btc
push
cmp
ret
dec
mov
push
adc
sbb
push
push
enter
sbb
mov
sub
mov
insb
mov
dec
xor
cmp
pop
ljmp
aam
cmp
inc
inc
mov
mov
xchg
mov
repnz
out
and
add
es
out
inc
dec
daa
add
bound
outsb
sub
popf
or
lea
stc
add
popa
sbb
dec
jbe
or
adc
testb
mov
std
int
pop
push
int3
mov
inc
repz
arpl
loopne
jecxz
mov
jl
cmpsl
aam
test
mov
dec
mov
leave
ret
dec
testl
add
dec
push
mov
and
adc
and
mov
popf
cmp
mov
mov
adc
or
mov
out
adc
jg
pop
test
dec
jb
rol
sbb
mov
cltd
movsb
push
es
imul
iret
or
lret
in
push
push
imul
iret
jno
insb
mov
outsl
add
jnp
gs
push
std
xchg
lods
stc
or
and
in
std
mov
cli
mov
xor
jg
xlat
jb
cld
es
daa
mov
nop
add
add
add
jb
fs
sbb
mov
xor
js
ljmp
push
pop
xor
test
sbbl
rcll
jne
sbbl
pop
push
arpl
pop
push
dec
shl
pop
and
jb
xchg
jmp
sbb
inc
fcomps
mov
fidivl
dec
out
out
lahf
mov
outsb
fcmovnu
push
mov
sbb
fnstenv
mov
or
dec
sub
std
sahf
es
repnz
dec
addb
es
push
jno
jge
xchg
das
std
xor
mov
out
mov
pop
sarb
and
adc
gs
rcl
movl
div
test
outsl
cltd
into
xor
jnp
push
add
loope
ret
sub
pusha
sti
inc
orb
push
dec
jecxz
dec
inc
vmread
inc
adc
sbb
test
xor
lock
lock
pop
mov
cmp
div
mov
mov
sub
xlat
sub
xor
jb
jne
ja
into
dec
sub
jo
xchg
sub
ljmp
fistpll
lock
mov
mov
push
out
sbb
sub
cmpsb
pop
sub
push
add
jo
mov
mov
sbb
sub
sbb
outsb
adc
xchg
add
enter
inc
int
dec
jecxz
scas
stos
dec
push
daa
mov
fmull
sub
push
movsb
daa
pop
xor
punpckhdq
push
xor
mov
and
mov
dec
push
inc
dec
outsl
lea
jp
aaa
push
ret
std
aam
subl
je
sub
ret
imul
and
pop
mov
fmuls
pop
sub
dec
cmc
cli
cmp
lret
mov
in
scas
mov
push
mov
xchg
cmp
xor
es
aaa
out
icebp
repnz
push
sbb
nop
sbb
testb
call
fmul
mov
fldt
jmp
mov
loopne
repnz
push
pop
mov
fildl
into
cwtl
inc
add
add
jge
imul
mov
xchg
andl
pop
je
cltd
and
fs
inc
dec
dec
dec
adc
mov
int
pushf
lods
fst
mov
dec
call
out
inc
cmp
loopne
fnstenv
jl,pn
mov
add
in
mov
pushf
mov
sbb
jae
daa
and
xchg
iret
mov
ljmp
sbb
sbb
imul
jns
or
xor
clc
lea
cmp
dec
outsb
adc
fistpll
add
cmp
stos
mov
pop
pop
inc
nop
jmp
inc
jns
lret
push
push
test
push
call
mov
les
lods
lret
out
mov
cli
fimuls
xchg
das
mov
rcll
aad
inc
icebp
xchg
pop
or
inc
jle
add
nop
out
pop
add
inc
int
inc
pusha
push
or
loop
cmpsl
sub
jne
cltd
cltd
cltd
push
test
push
aad
mov
jl
jb
fidivs
jl
dec
aaa
mov
xor
ret
in
jbe
mov
xchg
lahf
in
xchg
xchg
adc
lods
icebp
out
jge
push
jge
jae
or
in
repnz
data16
jbe
stos
mov
lock
jae
iret
or
pop
xchg
sub
inc
call
stos
mov
mov
dec
sub
jne
jge
jmp
test
jnp
ss
mov
aad
rorl
sarl
dec
jge
ss
out
inc
pop
and
popf
add
xacquire
xchg
push
pushf
push
pop
xchg
lods
mov
push
les
inc
or
lods
test
daa
dec
xchg
ss
mov
mov
aas
adc
out
push
mov
xchg
pop
push
pop
adc
ss
pop
or
mov
dec
repz
dec
cmp
imul
les
adc
xchg
jmp
push
outsb
mov
aam
add
cmp
in
inc
fiadds
and
mov
cltd
inc
and
or
mov
cmpsb
add
inc
jg
les
jne
jae
ja
xor
or
ljmp
outsl
pop
xor
xor
leave
xor
or
data16
xchg
sbb
negl
lahf
adc
push
add
xchg
lret
sbb
xchg
cmp
cmc
pop
mov
lcall
cld
shlb
lock
or
mov
sbb
mov
les
das
cmpsl
pushf
pop
jmp
mov
cmp
sbb
lret
add
insl
sbb
sbb
add
jne
lea
dec
repz
lret
arpl
popl
or
mov
iret
xor
test
push
cld
inc
movsl
into
inc
outsl
push
js
insl
loop
jno
sbb
stos
rol
nop
sbb
inc
mov
aam
mov
shll
es
mov
repz
inc
pop
or
pop
jno
dec
lcall
push
ret
or
movsl
mov
pushf
int3
inc
inc
test
mov
inc
loopne
mov
cmp
test
push
fisttps
lcall
dec
dec
scas
xchg
inc
sbb
sub
inc
pusha
sbb
movl
lds
rol
lds
test
shlb
push
xchg
push
dec
xchg
popf
js
mov
push
mov
dec
lds
pop
and
adc
xor
fdivrl
leave
popf
sub
dec
inc
dec
in
push
sar
out
jp
outsl
cmc
and
jle
cwtl
pop
jns
dec
movsl
sub
add
bound
mov
insb
rorb
mov
mov
xchg
fisttps
pop
mov
push
loope
adc
daa
cmp
mov
mov
dec
sub
mov
mov
mov
popf
xor
add
mov
imul
mov
adc
sbb
repz
popf
mov
fneni(8087
stos
out
xor
xchg
out
test
mov
jecxz
sbb
jns
or
add
scas
pop
in
pop
lods
fs
in
or
test
and
xchg
mov
xor
xlat
jno
inc
pop
push
dec
cmp
aaa
cmp
cmp
and
xor
call
ds
mov
cmp
inc
iret
jnp
out
mov
and
into
sub
add
addl
dec
inc
mov
aam
jl
mov
out
pusha
sbb
pop
ja
mov
adc
mov
test
test
sahf
sub
int
sbb
jg
mov
sbbb
imul
sti
inc
subb
jecxz
xchg
lock
sub
movb
popf
movsb
xchg
into
dec
mov
ds
lcall
cli
push
in
xchg
ss
test
adc
fwait
add
cmp
pop
push
xchg
sbb
pop
stc
pop
mov
inc
fidivrs
xchg
addl
mov
outsl
lgs
or
add
scas
into
fucomi
xor
gs
mov
bound
push
lahf
push
push
mov
nop
xor
sbb
cmc
inc
es
jne
gs
pop
and
cmp
sub
inc
movsl
test
inc
movsb
ret
ja
jns
mov
fnstcw
sti
loopne
cmp
inc
test
test
mov
stos
cltd
mov
sbb
mov
cmpsl
scas
xchg
rcll
mov
jo
or
mov
cmpsl
arpl
push
mov
cmp
imul
dec
jnp
push
push
pop
pusha
pop
pusha
inc
push
mov
sbbl
add
scas
push
repz
icebp
call
jne
jecxz
shlb
aaa
push
adcb
and
lahf
pusha
test
ds
mov
pushf
stos
pop
pop
add
ja
jle
jmp
lock
adc
ret
rcrl
fdiv
adc
call
mov
ds
pop
in
test
fcoms
push
push
sti
push
xchg
int
js
leave
aas
or
mov
insb
insb
loop
push
in
divb
push
sub
sub
insb
or
js
xlat
stos
cmpsl
mov
cltd
push
dec
movsl
int3
andl
scas
bound
sbb
out
fdivrl
movsl
out
arpl
addr16
jbe
sub
mov
or
movsb
ret
sub
icebp
nop
in
rcll
push
repnz
adc
imul
enter
fistl
jo
jmp
std
or
mov
push
dec
aam
sub
testl
sbb
aam
jge
sbb
dec
mov
in
lods
mov
mov
push
add
or
push
push
inc
or
sbb
add
imul
int
add
lds
addr16
repz
push
or
nop
sub
sti
fistpl
int
clc
jg
xchg
les
jb
mov
mov
imul
xor
cld
mov
into
mov
arpl
cltd
or
cmp
cmpsb
shll
push
mov
in
fwait
imul
dec
xchg
push
jmp
int3
testb
lcall
jae
adc
mov
add
sub
or
push
push
cmc
sahf
push
sub
mov
pop
dec
jb
scas
pop
rorl
lret
jbe
ljmp
repnz
cmp
and
sbb
cmc
call
dec
and
flds
pop
jnp
dec
popf
pop
mov
mov
stos
sbb
popa
das
lock
push
insb
xchg
data16
icebp
xchg
ret
test
cmp
repz
jnp
pop
sbbb
ja
aaa
shrb
xor
push
xorb
jge
mov
iret
push
out
mov
cmpb
add
cwtl
fwait
mov
push
movsb
inc
inc
pop
xchg
scas
in
push
leave
stc
push
int
sti
push
insl
push
mov
mov
and
or
bound
dec
sti
xlat
sbb
rol
outsl
mov
fadd
andl
jge
pop
pusha
ret
push
inc
jmp
insl
mov
fcmove
xor
pushf
repz
popa
push
add
into
pop
pop
and
fmulp
mov
sbb
imul
push
loopne
aam
pop
pop
xor
test
mov
clc
cmp
xor
rcll
cmpsl
icebp
bound
pop
outsb
pop
mov
push
pop
sti
fs
inc
xchg
jecxz
cmp
dec
xor
call
lcall
int
jbe
mov
jbe
sbb
mov
mov
cmpsb
jp
jae
xor
push
mov
int3
or
loope
sub
es
push
adc
dec
mov
jae
xchg
hlt
xchg
xor
mov
mov
cmp
aaa
jo
cmp
xlat
bound
dec
scas
lahf
xchg
scas
loopne
push
inc
popa
and
cli
jae
pop
sbb
fcoml
repz
fwait
pop
lds
cmpsb
pushf
add
xlat
test
rcl
gs
sbb
in
imul
add
incb
inc
cmpb
dec
scas
jle
les
out
fldln2
or
sbb
pop
push
subb
sub
popa
sbb
clc
cwtl
adc
arpl
enter
adc
ss
inc
loopne
loop
lds
icebp
pop
lahf
pop
out
sub
cmp
pop
jno,pt
push
add
cli
xchg
push
inc
test
pop
push
mov
xchg
gs
imul
inc
inc
add
push
pop
not
fwait
mov
xorb
jo
adc
mov
mov
add
roll
pop
scas
mov
push
pusha
scas
cmp
imul
push
inc
pop
sahf
mov
cs
movsb
cmp
inc
adc
in
or
mov
cmp
subl
or
stos
imul
pop
sahf
loope
popf
xor
or
mov
sub
jg
jl
into
adc
repz
outsb
cmp
mov
imul
xlat
dec
lret
outsl
scas
ret
adc
les
jl
pop
sub
ja
movsb
les
out
addr16
rclb
out
aam
add
lods
push
pop
jb
sub
int3
push
xchg
and
adc
jnp
icebp
scas
dec
mov
cmp
aad
push
popa
aam
xor
inc
mov
pop
orl
jp
mov
fadd
popf
sbb
or
ss
add
push
insb
jne
lock
sub
xchg
test
mov
cmc
dec
inc
movsb
xchg
iret
xchg
sbb
adc
iretw
aad
and
cli
sbb
fsubrs
xchg
stos
sub
push
shr
xchg
mov
data16
mov
nop
xor
dec
xchg
adc
sti
mov
adc
sbb
and
push
sub
jmp
or
add
std
cwtl
out
pusha
cs
sub
xchg
rol
sub
idiv
push
sub
xchg
adc
hlt
jmp
scas
mov
cs
loope
mov
push
pop
in
stc
imul
inc
ss
decl
mov
cmp
test
or
cmp
push
jnp
ret
or
daa
mov
pop
xor
out
rorb
inc
adc
sub
int
jl
push
sub
iret
jle
or
dec
rorl
mov
push
cli
daa
inc
inc
push
imul
loop
jmp
mov
mov
and
iret
inc
sbb
inc
scas
sbb
mov
fdivr
mov
aad
andb
fs
ds
push
inc
inc
mov
sar
mov
iret
cmp
adc
pop
filds
push
divb
stos
pop
testl
outsb
jmp
sbb
or
out
shll
dec
fs
mulb
or
mov
lret
jge
das
fwait
pop
dec
stos
xchg
sbb
or
in
mov
in
sbb
adc
in
ds
pop
in
mov
orl
cmp
add
dec
add
aas
pop
inc
jne
lret
adc
mov
cltd
push
iret
xchg
mov
daa
fwait
mov
pushf
data16
xchg
imul
lds
lds
jbe
or
dec
sub
jno
pop
xor
loop
sub
mov
jns
je
ja
lret
ljmp
das
mov
int
jae
inc
push
push
rcll
inc
jae
sbb
push
inc
inc
or
insl
arpl
shl
sbb
mov
mov
or
xchg
mov
dec
cmp
push
lods
aam
sbb
push
insl
seta
hlt
mov
push
mov
xchg
pop
push
insl
cltd
xchg
sbb
adc
add
and
mov
ret
mov
xor
push
stos
insl
add
xor
cli
push
xor
enter
cmp
jg
mov
fs
iret
fnop
pop
in
mov
mov
dec
xorl
push
ljmp
in
pop
rcr
cmp
cmpsb
or
test
dec
fldt
lods
movsl
fisubrs
push
adc
pop
or
mov
ja
rcll
jo
negb
fmul
bnd
cmpsb
popa
shlb
popf
bnd
aas
adc
stos
cmp
sub
dec
daa
nop
sub
jle
incl
data16
lret
mov
mov
scas
lea
insl
mov
pop
mov
je
fsubl
stos
iret
add
bound
push
lret
lods
addr16
ficomps
push
cltd
jne
adc
rclb
pop
pop
lret
jbe
xchg
mov
adc
mov
imul
leave
sub
hlt
or
adc
stc
adc
loop
lods
jae
adc
dec
sub
jl
dec
cmp
dec
lret
inc
in
std
inc
loopne
test
stc
sbb
outsb
ja
jp
xorb
das
loop
popa
sub
sbb
inc
dec
sbb
pop
xchg
xchg
rcl
xor
not
fdiv
arpl
cmpsl
mov
inc
test
in
mov
sarl
mov
pop
mov
inc
sub
dec
shrb
test
popa
push
popf
dec
and
push
sbb
aas
mov
popf
cltd
lahf
nop
ja
jge
jle
mov
cld
notl
stc
in
xchg
cwtl
mov
andb
shll
and
cs
dec
leave
push
sbb
loope
and
mov
repnz
pop
mov
and
gs
push
stos
cmp
das
imul
jns
pop
cmp
xchg
mov
call
cmp
in
adc
gs
mov
ja
inc
mov
mov
mov
and
mov
mov
inc
outsb
cmpsb
mov
lods
negl
mov
pop
arpl
adc
fistpl
loop
loope
jp
scas
jle
in
xchg
jae
xor
in
bound
xor
and
lods
inc
push
in
addr16
xchg
int3
into
popf
mov
xor
mov
xchg
jl
imul
mov
loopne
aas
or
push
cltd
push
insl
movlps
push
adc
test
adc
subl
pop
push
mov
sub
rorl
out
ss
outsl
and
cmp
sub
hlt
aad
xor
clc
ret
lret
or
data16
xchg
test
andb
aaa
mov
and
scas
ja
xor
cmp
jb
mov
add
push
mov
pop
lret
aam
xchg
jne
sub
fbld
out
pop
lods
sbb
repnz
or
push
push
sub
sub
inc
adc
sub
fsub
aaa
inc
fiaddl
pop
mov
inc
fiaddl
jno
or
out
ss
pop
scas
test
bound
ss
or
jmp
inc
add
sbb
push
cmpsb
xchg
adc
in
add
and
or
in
jnp
pop
cmpsl
insl
mov
adc
mov
adc
bound
sbbl
jns
add
sbb
xchg
pushf
or
jns
jmp
outsb
sub
adc
or
imul
adc
fidivrl
mov
jmp
pop
bound
jmp
dec
dec
pop
xchg
cld
xchg
push
xchg
aad
cmp
daa
xlat
jmp
cld
daa
mov
outsl
cmpsb
sarb
popf
stos
je
mov
negb
insb
jbe
mov
mov
push
std
cli
push
cwtl
mov
pop
rcr
loope
inc
fistps
xorb
add
dec
ljmp
sub
arpl
and
popa
sub
mov
fimull
test
jmp
sbb
movsb
pop
mov
fidivrl
push
sub
movb
dec
push
mov
mov
repz
jno
loop
rclb
adc
out
leave
xchg
test
mov
xchg
call
mov
fnsave
out
pop
push
lahf
out
dec
adc
mov
arpl
out
pop
shlb
mov
jbe
decl
inc
push
insl
or
dec
push
out
iret
js
mov
call
and
lcall
pushf
out
cmp
push
mov
xchg
push
push
vucomiss
aam
inc
dec
push
mov
pop
mov
loopne
call
adc
adc
jae
push
lock
adc
negb
sub
les
es
fs
mov
add
pop
and
add
xchg
fucomp
pop
imull
negb
cltd
push
cltd
scas
test
adc
pop
or
dec
jae
dec
shrb
movsl
into
cmpsl
lock
cs
pop
push
popa
add
dec
cmpl
mov
pop
dec
push
and
popa
mov
test
xor
dec
jns
cmp
xchg
gs
pop
std
fwait
mov
xor
testl
incb
outsl
or
push
mov
sub
xchg
lods
repz
xor
add
cmp
out
mov
int
bound
jno
or
mulb
adc
xchg
push
lock
xor
gs
xchg
jmp
rorb
cmp
sti
movsl
and
and
ds
inc
mov
jae
jne
sti
sub
ret
loop
and
push
sbb
pop
sub
mov
out
lret
int
push
sti
xor
divb
ret
xor
cld
adc
mov
pushf
neg
sub
cmpsb
fsubrs
mov
adc
clc
or
es
lcall
lods
mov
xchg
mov
lcall
test
push
stc
cmp
mov
clc
fisttps
sbb
mov
jno
pop
mov
cmp
or
pop
mov
icebp
pop
add
inc
fmull
jno
arpl
in
add
dec
and
pop
scas
mov
call
fimull
mov
cld
cmp
mov
adc
adc
push
cli
mov
popf
mov
movsb
test
jne
jne
jbe
inc
mov
sbb
or
bnd
out
cmpsb
pop
dec
clc
iret
pop
es
push
movsl
test
stc
leave
sbb
sbb
stc
and
scas
push
dec
stos
insb
cmpsb
ljmp
movsl
incb
push
dec
aas
pop
pusha
fsubrl
insl
jno
stos
push
ljmp
pop
scas
mulb
shll
scas
xor
loope
and
mov
in
outsl
mov
mov
xor
dec
icebp
cmp
or
inc
test
mov
sub
or
dec
pop
outsb
enter
xchg
cmpsl
fldt
stos
mov
outsw
daa
daa
gs
call
pop
fwait
incl
cld
shll
pop
and
enter
inc
and
call
mov
fucomip
mov
push
inc
cmp
fnstsw
cmc
jb
test
dec
cmp
adc
idivl
leave
dec
imul
outsb
clc
icebp
lahf
mov
sahf
cli
xchg
pop
cmc
pusha
mov
cld
scas
hlt
fxch
dec
mov
and
and
sbb
mov
mov
mov
inc
les
xchg
add
cmpsl
add
add
mov
adc
mov
mov
xchg
mov
cmp
mov
mov
icebp
mov
dec
lret
cwtl
and
fnstenv
cmp
imul
sub
add
jmp
jns
loopne
lods
jbe
cltd
xchg
cs
fildl
inc
clc
adc
dec
test
je
js
int3
mov
sub
sbb
sub
mov
sbbl
cmpl
fdivrl
repnz
fisubrs
mov
fildll
subw
out
leave
scas
pop
mov
sub
add
jmp
jp
mov
inc
fucom
xchg
mov
mov
aad
or
sbb
mov
popf
cwtl
lds
loop
jl
and
fldlg2
cmc
adc
loop
pop
fwait
rcr
mov
daa
test
fisubrs
inc
mov
pop
fs
adc
loope
shlb
data16
pop
add
cmp
mov
in
and
cmp
push
dec
adc
adc
jge
jnp
mov
mov
outsb
popf
push
cmc
iret
lea
lcall
sub
or
push
xchg
popf
push
scas
xlat
jns
push
inc
push
jg
int3
sub
pop
inc
push
add
in
movsl
cmp
sti
lcall
jge
int
dec
and
mov
xchg
jmp
push
pop
lret
add
lods
cwtl
pop
adc
mov
inc
dec
rcl
mov
sbb
xchg
insl
aaa
dec
bound
leave
mov
scas
mov
sarl
add
testb
push
ljmp
push
adc
aad
arpl
lahf
add
jb
movss
jo
jecxz
xchg
jp
fsubrs
sti
repz
push
cmp
adc
cmp
jne
test
inc
je
mov
pop
in
push
push
mov
jmp
xorl
ja
mov
xchg
jnp
jae
sub
test
jp
mov
stos
or
mov
loop
rclb
mulb
sbb
std
sbb
scas
and
fdivl
gs
pop
or
add
icebp
inc
adc
rcll
fdivp
jl
movsl
push
and
or
adc
mov
int3
jns
push
jo
or
ret
in
mov
sbb
rclb
ficomps
loop
fdivrl
pop
xchg
rcrl
test
faddl
ret
inc
inc
out
add
test
inc
pop
jns
mov
push
mov
xchg
pop
sub
out
xchg
pavgb
dec
mov
imul
lds
sbbb
ja
xor
addl
ret
ror
test
and
pop
mov
lods
adc
stos
ja
push
jecxz
test
push
jecxz
inc
dec
xchg
mov
and
sub
sar
jne
jecxz
mov
in
aam
ds
stos
in
inc
insb
xchg
adc
test
push
lods
js
and
lods
inc
or
adc
cmp
daa
or
test
mov
in
mov
lret
pop
fs
xchg
fildl
inc
and
sahf
mov
pop
cmpl
or
xor
xchg
sbb
sub
test
js
cmp
cltd
fucomi
pop
bound
aas
test
xchg
xchg
loope
xchg
out
jno
push
int
jmp
lea
mov
and
int3
jb
inc
mov
movsl
adc
fsub
rol
rclb
popf
inc
xchg
xor
mov
cmp
mov
test
jp
ja
fisubl
sub
fidivs
xchg
dec
jae
loopne
pop
inc
jnp
in
filds
mov
stos
mov
pop
or
ljmp
in
cli
jb
shlb
mov
fisubl
clc
cmc
inc
jo
or
sub
sub
or
in
xchg
add
jae
fdivs
xchg
and
fimull
mov
leave
mov
fistps
stos
dec
js
mov
mov
pop
enter
cld
gs
adc
lahf
dec
sbb
mov
xchg
cltd
push
daa
fdivrs
pop
scas
cld
push
int
push
loop
sbb
mov
data16
add
pop
stos
mov
adc
mov
das
stos
pop
loopne
cmp
cmp
adc
gs
mov
pop
movsl
adc
mov
mov
xor
xor
repz
fldl
dec
sbb
iret
xchg
xchg
mov
out
add
into
fwait
inc
imul
adc
fsub
insb
out
mov
mov
xor
cmp
sbb
outsb
out
push
out
mov
lret
or
and
add
lcall
xorb
push
in
flds
stc
popa
das
pop
test
out
mov
xor
adc
rcl
neg
cmp
push
jne
add
dec
aas
pop
mov
dec
fimuls
popf
sbb
inc
xor
mov
leave
or
loope
xchg
add
pusha
ss
mov
mov
test
add
mov
dec
ret
or
pop
and
pop
adc
or
lds
shrl
xlat
jo
sub
cmp
pop
sahf
lods
cli
mov
adc
jmp
adcb
sbb
test
push
cwtl
addb
rorl
repz
pop
and
fdivp
das
add
add
mov
inc
pop
popa
push
sub
dec
push
into
outsl
call
fdivr
cmp
das
addr16
inc
sbb
notb
negl
jmp
icebp
into
jns
leave
fmull
sbb
ljmp
idiv
jl
mov
add
outsb
ja
test
ss
fwait
push
fildll
mov
aad
mov
xorb
pop
pop
shl
mov
jge
or
cmp
add
std
popf
push
call
adc
test
pop
test
or
inc
sub
add
jne
fistpl
cli
hlt
cmp
cs
test
dec
negl
sahf
nop
push
push
xchg
push
movsb
idivl
rcr
push
sbb
sbb
std
inc
jne
in
gs
xor
lock
cmpsb
out
cltd
daa
lea
pop
test
push
pop
faddl
roll
push
cld
test
xor
cmp
xor
and
push
pushf
repz
loope
lea
sub
outsl
into
ret
testl
xchg
pop
mov
jbe
mov
hlt
and
call
divl
jmp
mov
out
push
jo
sub
pop
movsb
scas
cmpsl
rclb
test
imull
lahf
shlb
push
jnp
push
push
pop
sti
cmp
and
sbb
daa
push
stos
adc
popf
dec
mov
test
push
fs
lods
lret
bound
loopne
add
pop
pop
stc
or
sahf
insb
mov
xorl
xor
fisttpll
stos
and
xor
int
xor
andl
pop
lds
in
popf
xor
xchg
leave
test
sbb
jge
testl
sti
xor
push
push
js
neg
ret
lods
mov
addr16
arpl
test
sub
mov
ds
inc
cmp
into
stos
and
add
lcall
daa
mov
outsb
fwait
pushl
sub
add
lods
ret
xchg
or
xchg
leave
je
pop
loopne
push
sub
nopl
popf
jae
sbb
sbb
adc
pop
xor
pop
push
leave
and
shlb
pop
sub
jp
bound
dec
bound
jge
scas
mov
push
data16
sahf
js
test
stc
loope
movb
in
int3
or
test
mov
and
sti
xor
mov
repz
pop
mov
push
mov
pop
sub
or
push
pop
mov
mov
cli
rorb
xor
push
lods
inc
xlat
dec
aad
fsub
push
sbb
iret
add
ds
add
sub
shl
sub
mov
add
mov
ljmp
push
not
mov
mov
dec
inc
aam
inc
jp
ds
mov
jae
shr
push
mov
mov
push
sub
xchg
imul
cbtw
jmp
cmp
add
xchg
jmp
repnz
xchg
hlt
push
adc
hlt
dec
mov
sbb
popf
pop
movsl
dec
jbe
mov
stc
test
and
sbb
notb
cmp
insl
iret
adc
fadd
inc
ficoml
add
push
subb
adc
aas
orl
jecxz
cmp
stos
push
bound
cmpsb
cld
ficomps
push
jge
cmp
push
loop
pop
ret
sub
fnstsw
push
lret
pop
jecxz
addb
jno
pop
cs
mov
mov
mov
cmp
iret
mov
lret
jle
inc
fldl
hlt
inc
and
jno
push
push
imul
popf
dec
jle
mov
pushf
pushl
adc
negb
int
daa
gs
out
adc
repnz
pop
and
jbe
je
cmp
scas
jl
cmp
pusha
insl
mov
xchg
or
nop
and
inc
jne
fsubl
inc
popf
fadds
std
xchg
or
jmp
fdiv
out
in
ds
mov
clc
rorl
mov
cmpb
imul
sub
jmp
cmp
adc
stos
mov
cmp
aas
xchg
add
push
data16
dec
cmpsl
cmpsl
mov
out
and
dec
addr16
repnz
in
paddsb
inc
loopne
cwtl
or
mov
and
fs
fisubrl
leave
jg
jecxz
jp
jmp
pop
pop
mov
mov
test
sbb
loope
bound
fbld
rcr
movsb
scas
adc
pop
mov
adc
pusha
or
xor
cwtl
adc
xor
cwtl
ds
sarb
dec
mov
push
or
icebp
adc
inc
inc
push
jg
nop/reserved
ljmp
mov
popf
jno
pop
jge
ror
or
sbb
movsl
pop
inc
pop
and
push
mov
dec
loope
ret
cmp
mov
inc
pop
loopne
pop
inc
mull
pop
mov
pushf
pop
jne
adc
push
mov
das
or
dec
or
mov
adc
sti
cmc
mov
inc
pop
mov
adc
cs
cmc
insb
xchg
jnp
mov
jbe
or
mov
push
imulb
lcall
orl
mov
jne
add
popf
mov
fwait
repz
adc
pop
mov
outsl
xor
sarl
push
jb
les
rol
xchg
mov
test
jle
outsb
clc
cltd
pop
jno
xchg
and
inc
stc
and
fstps
adc
pushl
lahf
cmpsl
dec
add
repz
dec
outsb
lods
push
imull
iret
je
cmp
fs
and
insb
or
scas
out
dec
in
aas
mov
cmp
and
cmp
fisubrs
test
test
jl
ljmp
insl
je
inc
aad
mov
nop
add
push
mov
adc
cmp
movsl
and
inc
dec
pusha
or
loop
repnz
repz
enter
int
cmp
xor
fbstp
cmpsb
jmp
cli
pop
inc
xlat
fisubs
cmc
lods
push
mov
pop
jo
cmpsl
sub
fs
in
mov
xchg
test
xorb
loopne
fidivl
sub
ja
divb
adc
cmc
bound
dec
mov
adc
push
add
sub
and
aaa
mov
cltd
sbb
sbb
mov
and
mov
push
ret
xor
push
mov
cli
out
push
mov
dec
or
push
bound
cwtl
shrb
imul
outsl
movsb
pop
addl
stc
cld
pop
cmp
ljmp
in
loope
mov
int3
mov
lret
outsb
push
repnz
addr16
in
xor
jge
leave
call
add
fwait
add
int
daa
jo
int3
je
jmp
gs
jnp
pop
xor
fadds
xchg
rorb
gs
sub
jo
sbb
sti
out
mov
test
sbb
pop
in
cmpsb
jle
loop
add
lds
mov
cmp
mov
xchg
cmpsl
dec
iret
out
repz
sbb
jbe
loopne
es
or
lret
xchg
aaa
xchg
in
cmp
mov
jbe
inc
mov
mov
rorl
xorb
lock
std
fisubs
iret
movsb
jl
lods
aam
gs
fninit
cmp
push
jne
add
mov
mov
jg
pop
call
push
inc
xchg
out
or
dec
pop
rcrb
iret
jno
inc
fmuls
movaps
icebp
cmc
jb
dec
test
fs
jl
push
or
rcll
ljmp
mov
lahf
jle
mov
ret
and
sbb
mov
shrb
sbb
pop
mov
xchg
push
adc
test
dec
mov
imul
ret
push
ffree
insb
pop
ljmp
orl
cmp
mov
xchg
rcl
adc
loope
stos
pushf
jb
popa
les
lds
insb
xchg
add
or
jge
inc
sbbb
outsl
cmc
cs
ljmp
jle
pop
inc
jnp
and
cmp
into
loop
lahf
out
jp
stc
ret
rcrl
or
mov
push
repnz
mov
pusha
jno
loop
pop
sbb
pop
cmc
aas
pop
fs
daa
mov
je
js
sub
outsl
cmp
mov
movsb
lock
sub
inc
jecxz
fadds
sahf
mov
into
xchg
in
xchg
adc
scas
lret
sbb
mov
in
test
jle
stc
out
outsb
adc
xor
mov
into
cmpsl
mov
gs
mov
mov
push
jnp
mov
jo
pop
arpl
out
lock
and
jae
push
imulb
jecxz
mov
insl
pop
bound
push
fistpll
ds
dec
lods
adc
fnstenv
ljmp
push
xchg
loopne
pushf
gs
loope
movsl
cwtl
pop
daa
xor
or
repz
movsl
cmc
adc
cmc
out
or
mov
mov
orl
repz
lcall
sbb
add
cmp
imul
xlat
xchg
inc
loop
pop
arpl
out
inc
sbb
add
adc
adc
movsl
mov
shrb
rolb
cs
mov
push
and
repnz
mov
push
inc
out
test
mov
nop
inc
js
in
jo
adc
cmp
fwait
mov
and
adc
test
stc
add
test
sub
cmpb
addr16
jno
adc
cmp
notl
xor
adcb
out
push
cmpsl
push
add
movhps
push
ret
jmp
das
pop
and
cmp
outsb
lea
test
cmp
loop
in
lcall
ret
scas
idivl
xor
add
leave
or
or
sti
xor
cmpsl
sti
sahf
ljmp
aad
mov
aam
cmp
fistps
jecxz
pop
fiadds
loopne
pushf
repnz
push
add
xchg
jg,pn
mov
aad
je
xchg
lret
gs
dec
imul
dec
ds
mov
jo
loope
ret
cmp
sbb
data16
or
push
rcrl
and
mov
vmovhpd
mov
shrb
xlat
and
or
push
pop
sub
push
xor
lcall
and
mov
popf
out
add
sub
mov
mov
outsl
sbb
and
sub
mov
xchg
mov
push
stos
xor
insb
popf
xchg
xor
movsb
ss
in
adc
and
out
lret
negl
inc
push
push
out
lret
push
dec
mov
loopne
cmp
adc
cs
or
add
pop
and
les
mov
fsts
jmp
push
ss
cli
sti
push
sbb
outsl
sub
mov
mov
xchg
inc
lahf
sbb
mov
jle
lret
jge
icebp
jno
push
movl
mov
sub
dec
push
dec
leave
pusha
aas
loopne
jmp
fsubrp
cltd
add
repz
ljmp
and
insb
mov
sub
cmp
insb
jo
loopne
mov
ja
xor
jp
and
fbstp
jecxz
jp
fadd
mov
test
push
pop
sbb
cmp
in
dec
mov
mov
mov
dec
jbe
inc
decl
or
pop
adc
pop
xor
rcrb
sti
push
push
arpl
mov
imul
lret
adc
inc
roll
push
xchg
aas
aaa
jo
inc
mov
hlt
mov
xchg
inc
cmp
in
insb
mov
test
into
ret
cmp
cmpsb
and
adc
mov
orb
inc
out
clc
outsb
dec
cltd
ljmp
xlat
into
jl
jae
sbb
pop
subl
cmc
add
test
data16
aad
iret
pop
mov
jo
xor
xchg
jno
mov
sub
shl
xchg
out
and
cmp
das
insl
outsl
sbb
sbbl
test
dec
adc
mov
ret
jb
dec
frstor
in
mov
adc
fcompl
jne
dec
lods
xchg
sub
das
cs
xorb
hlt
mov
mov
stc
adc
jbe
aam
or
mov
mov
mov
fildll
jmp
sbb
mov
lods
push
mov
inc
sti
int
mov
sbb
shll
xor
out
jp
xor
pop
mov
out
cli
jl
adc
fwait
and
dec
dec
imul
pop
inc
add
push
push
nop
loope
es
sub
xchg
sub
mov
cmp
add
js
loope
test
stos
inc
lcall
add
bound
wbinvd
xor
mov
xchg
call
fwait
inc
push
mov
leave
rol
data16
cltd
leave
mov
jne
cmpb
fcoms
mov
mov
mov
sub
int3
push
lods
clc
fisubrl
jge
ds
xchg
jmp
pop
jecxz
cmp
bnd
test
fbld
scas
xchg
mov
lods
outsl
rcl
mov
or
jns
and
pop
sbb
bound
inc
clc
loope
mov
mov
out
sbb
mov
aaa
pop
or
sub
mov
inc
mov
jnp
xchg
mov
cmpsb
sti
mov
test
and
and
sub
in
dec
test
test
scas
ja
push
pop
les
dec
cmp
jecxz
jb
and
mov
xor
das
incl
daa
push
jecxz
mov
mov
inc
clc
jl
xchg
and
mov
icebp
xchg
mov
inc
repnz
out
push
mov
mov
and
xchg
jne
mov
clc
cmpsl
js
pop
cmpb
arpl
neg
dec
pusha
jno
fcompl
gs
inc
bound
es
clc
mov
ljmp
in
into
push
cmp
lcall
ja
gs
sbb
jp
cmc
in
nop
cmpsl
adc
out
repnz
lret
mov
arpl
xor
sub
inc
add
push
adc
outsb
mov
adc
gs
sub
andl
dec
mov
enterw
push
fldt
das
pop
sarl
out
fcmovb
lods
adc
movl
adc
outsl
dec
pop
sub
or
loop
mov
mov
push
cmp
mov
divb
insb
fnstsw
call
test
sub
sbb
xchg
push
mov
in
ret
fldcw
test
ja
mov
js
mov
dec
add
repz
fstpt
cli
and
xor
push
dec
add
ja
int
imul
inc
push
insl
sbb
int
xor
jno
pop
sbb
adc
sahf
mov
xchg
aad
lods
inc
jle
xchg
outsl
and
movsl
rcr
std
imul
gs
ds
add
push
sti
mov
cwtl
repnz
mov
inc
jmp
add
imul
or
inc
cmpsb
daa
out
shlb
adc
scas
imul
cmp
sbb
add
sub
hlt
pop
jno
shrb
fimull
not
out
mov
cltd
or
inc
jl
roll
jb
cs
mov
cmpsb
sbb
subb
push
pusha
mov
mov
inc
push
popl
inc
adc
pop
mov
jmp
jmp
mov
popf
mov
aad
jbe
stos
pop
jno
mov
insb
adc
pop
icebp
or
bound
test
out
out
mov
jmp
out
mov
xor
xor
stos
sub
push
push
out
mov
cwtl
sbb
iret
das
mov
sub
jne
mov
stc
scas
shr
jae
in
mov
cli
or
pop
negb
aas
les
push
lcall
xchg
xor
fwait
es
adc
mov
int
fbstp
jo
cld
lods
lahf
mov
les
lret
and
mov
leave
das
dec
or
inc
cmp
adcb
insl
add
pop
pushl
xchg
dec
jne
cwtl
and
pushf
mov
cmp
or
or
jp
hlt
jnp
inc
inc
cmp
lods
std
arpl
adc
mov
push
mov
shlb
xor
invd
out
ljmp
jbe
mov
and
fiaddl
push
call
je
adc
test
faddp
cmpsl
jg
sti
insl
and
lods
out
imul
dec
jecxz
xor
fwait
rolb
or
dec
nop
fdivl
and
lods
ljmp
dec
pop
and
mov
and
dec
mov
mov
push
enter
fmull
test
rclb
dec
mov
adc
mov
fistl
sbb
xchg
xchg
jae
jge
ds
outsl
mov
pop
bound
jno
out
add
jle
and
mov
int
sub
or
aad
ja
sarl
xor
jnp
jmp
dec
stos
icebp
shrl
xchg
mov
mov
mov
outsb
and
add
add
imul
aam
push
jns
orl
mov
xchg
sub
fs
rcrl
inc
mov
lods
mov
hlt
leave
inc
rclb
mov
lock
dec
aaa
mov
push
movsb
fsubrl
sbb
ljmp
movsb
dec
sub
pop
pushf
int3
xor
jb
ja
mov
test
cmp
test
xchg
pop
ss
push
xchg
sti
xor
mov
mov
pop
cmp
imul
ret
jne
pop
repz
dec
in
jecxz
xchg
push
jae
in
dec
add
fidivrl
xchg
sbb
mov
xor
dec
jnp
aam
mov
cltd
imul
xor
idivl
iret
cwtl
sub
cmpsl
rorl
into
adc
sub
push
cmp
cltd
push
out
arpl
notb
mov
out
jmp
xor
push
dec
sub
fdivs
bound
sbbb
repz
jns
psubsw
jle
out
push
out
popf
dec
iret
in
inc
fadds
outsl
loop
jl
leave
push
mov
ja
decl
cmc
jno
xchg
loope
lret
xlat
xchg
xchg
pop
insb
jbe
movsl
ret
pop
add
outsl
nop
mov
push
add
int3
mov
fwait
cmp
notb
mov
fadd
arpl
mov
xor
cld
incb
in
icebp
shlb
dec
mov
out
icebp
ficompl
pop
test
jg
cmp
push
cmp
lods
add
xor
leave
lds
int
sub
cmc
jecxz
push
dec
cli
xor
inc
add
subb
add
hlt
ja
xor
or
loopne
in
push
pop
iret
std
dec
mov
jo
out
fcompl
xor
add
mov
arpl
sti
movb
xchg
in
fisttps
popl
out
inc
repnz
push
negl
xor
mov
repnz
movb
jnp
jnp
and
pushf
mov
mov
inc
jmp
in
pop
lods
ret
xchg
insb
xor
je
inc
jmp
mov
sbb
cmp
jmp
dec
insb
in
loop
sbb
in
lock
and
cmp
or
dec
std
lcall
mov
inc
jge
cmpsl
push
xchg
mov
jecxz
pop
dec
jg
pop
xchg
sub
inc
fchs
jl
jne
inc
xchg
cmp
pushf
dec
or
pop
dec
adc
in
cld
add
inc
sahf
mov
mov
sbb
stos
aam
notb
loope
jne
push
rolb
xor
movsl
fstp
nop
mov
test
xchg
pop
rcrb
jae
ud2
add
jbe
mov
mov
imul
jno
dec
ss
push
cmp
add
sbb
rcrb
pop
sbbb
mov
sub
add
pop
and
addb
not
aad
es
in
int3
xlat
cmp
dec
jno
ja
mov
out
dec
aam
jno
popf
fscale
leave
dec
imul
sbb
xor
xlat
out
pop
jo
pop
ss
add
sahf
lret
repz
rclb
pushf
push
mov
gs
rcr
std
repz
or
mov
dec
and
inc
test
pop
stos
jecxz
sub
loope
mov
loop
sub
push
pop
vfrczpd
mov
adcb
cmpsl
iret
push
out
jb
mov
push
sarb
lods
mov
pop
pop
ljmp
sub
fcoml
fwait
andb
pop
jo
lcall
cmp
xchg
push
mov
rcr
cwtl
pop
push
addr16
cmc
add
les
jmp
mov
mov
cmp
inc
push
jbe
aam
in
mov
mov
push
or
mov
pop
cmp
jo
addl
stos
aas
xor
sub
sub
fs
inc
leave
cmp
leave
sbb
jle
xchg
jb
popf
repnz
cli
repz
scas
test
nop
pop
cmc
jae
imul
cmp
sub
popf
in
push
ds
or
lret
sub
mov
xchg
addr16
mov
mov
std
inc
push
repnz
push
dec
jne
ja
adc
jb
cs
pop
xchg
fwait
sti
leave
jno
cmp
xor
mov
xor
dec
cmp
adc
decl
mov
sbbb
mov
xchg
adc
push
scas
jo
mov
push
jge
aam
or
cmp
cmp
movsl
movb
pop
sbbl
mov
sub
movsl
mov
int
cwtl
fdivl
sub
push
cmp
mov
fisttps
dec
jne
dec
push
subb
mov
sbb
jae
fdivr
rcrb
and
andl
sub
cmp
sarb
popa
movsb
dec
pop
push
test
popa
dec
sti
aam
call
mov
fnstenv
fcompl
sub
jno
sub
pusha
repnz
lret
mov
lods
adc
pusha
aaa
and
or
mov
push
mov
jns
xchg
jmp
pusha
fwait
rorl
popf
xchg
addl
cs
dec
lret
cld
xor
xorb
cltd
mov
mov
pop
cmpsb
xor
pop
stos
out
sbb
test
and
arpl
mov
nop
stc
adc
insl
inc
loopne
push
xchg
sbb
xchg
icebp
daa
incb
fbld
cmp
and
jne
push
adc
mov
jb
mov
hlt
xor
imul
ret
movsl
pop
in
hlt
shlb
mov
jmp
jb
jbe
cmp
jb
movsb
sbb
push
mov
push
rorb
gs
sub
adc
int3
xchg
sahf
sbb
testb
outsb
cmp
or
ud0
mov
es
add
scas
xchg
mov
mov
lods
call
test
pop
lret
dec
mov
sub
lods
jp
je
movsl
clc
lret
cmp
fs
xchg
mov
xchg
clc
cmpsb
push
sbb
stc
fmuls
int
jmp
xchg
jmp
sbb
andl
stos
xchg
mov
add
push
lahf
push
repnz
and
dec
mov
pop
push
mov
mov
test
loopne
cmp
loop
js
and
pop
dec
mov
subb
nop
lahf
cmpsb
xchg
notl
popf
into
add
mov
test
inc
xchg
cld
mov
add
ss
sti
mov
sti
js
std
not
loop
inc
jb
fildll
ret
mov
data16
mov
xchg
sbb
sbb
xor
or
dec
cltd
out
inc
fdiv
cmp
jbe
add
or
neg
pop
mov
or
ss
cli
mov
cmpsb
xchg
das
inc
adc
repnz
and
add
mov
pop
std
mov
push
fimuls
inc
xchg
xlat
sbb
dec
dec
sbb
lock
cmc
dec
inc
xor
pushf
push
lcall
addr16
movsb
and
fucomi
loopne
sub
pop
pop
mov
leave
cmp
push
pop
jl
aad
xor
xor
fs
jle
dec
mov
mov
aad
ljmp
mov
sub
cmp
in
repnz
adc
jnp
lods
mov
movb
addr16
or
push
addr16
leave
inc
mov
mov
mov
sbb
loop
cli
sbb
lds
pop
dec
lret
out
mov
and
stos
movsl
rclb
push
in
stos
jb
mov
aas
loopne
dec
std
fs
sti
mov
and
fbld
and
jecxz
pop
jg
adc
dec
dec
mov
int
mov
ds
and
addr16
or
lods
mov
test
xlat
fbstp
xchg
cmp
ds
and
pop
idiv
nop
int
andl
jbe
pop
push
enter
sbb
mov
pop
jb
add
cmc
popa
inc
xor
imul
in
xchg
shlb
sbb
in
or
adcl
scas
and
jae
js
jo
enter
out
xor
mov
aad
cmp
clc
jae
out
jg
inc
dec
jl
mov
jmp
dec
fstl
daa
sub
inc
jbe
fldl
xor
and
stos
popf
mov
pop
sti
mov
out
or
repz
or
dec
test
les
dec
jl
push
pop
popa
jae
fistps
imul
jb
cli
jo
sub
repz
sarl
insl
enter
out
sbb
jno
ljmp
js
cmp
enter
mov
adc
lret
mov
subb
pop
lock
mov
sbb
insl
test
popf
pop
sbb
aaa
mov
mov
jbe
jl
dec
xchg
in
aam
data16
mov
push
mov
das
leave
push
das
add
jp
cmp
icebp
pop
sub
cmpsl
test
inc
add
jle
std
adc
scas
mov
xor
std
cmpsl
pop
inc
and
rclb
sub
pcmpeqw
scas
jg
pushf
xchg
gs
jne
xchg
enter
aaa
clc
mov
adc
fxch
sbb
pop
popf
je
push
into
xchg
shlb
xchg
loop
xchg
int3
dec
mov
pusha
and
lret
cmp
xor
adc
mov
add
jecxz
xchg
fadd
cmp
cli
mov
daa
mov
cmc
sahf
jg
outsb
adc
push
faddl
sub
loop
and
mov
cmpl
sti
mov
pushf
sub
mov
adc
sarb
dec
movsl
shll
push
in
xchg
outsl
adc
mov
leave
cli
mov
icebp
inc
pop
pop
lods
loopne
arpl
js
pop
mov
xor
or
sbb
dec
sub
cs
or
loope
push
jno
roll
lahf
xor
repnz
xor
or
andl
out
fldl
fcmovbe
jmp
xor
addr16
inc
sub
in
pop
inc
dec
fwait
mov
add
pop
pop
dec
push
mov
xchg
jnp
adc
cmp
xchg
mov
or
movsl
outsb
cwtl
mov
fistps
pop
inc
xchg
push
dec
outsl
mov
pushf
add
xchg
sbb
cld
xor
xorl
or
gs
ja
add
push
clc
cs
rolb
adc
rolb
jg
fwait
inc
sub
incl
push
jmp
outsl
orl
jecxz
fs
xlat
hlt
push
sub
test
adc
pop
push
mov
lock
xorl
jae
ret
loope
lcall
mov
push
lock
test
fistl
mov
push
popa
sub
adc
in
out
popa
stos
cmpsl
filds
loop
je
std
in
lock
or
xchg
push
pop
dec
add
pop
pusha
orb
pushf
mov
xlat
mov
add
dec
cmp
flds
jl
sub
push
into
push
sarl
sahf
les
aad
push
xchg
shll
or
sbb
pop
cmp
lods
or
push
mov
call
push
mov
bound
shrl
push
ror
arpl
mov
inc
fisubrl
jge
pop
xchg
xchg
pop
jmp
stos
loope
and
jp
mov
pushf
leave
arpl
dec
mov
icebp
push
xor
insl
ror
mov
popf
mov
push
lds
pop
jbe
pushf
test
mov
divb
test
arpl
addr16
shll
repz
call
jne
push
lods
idivl
inc
dec
xor
sub
out
cmp
sahf
fadd
pop
push
pop
aam
xchg
push
fwait
xchg
pop
test
jecxz
and
jbe
pop
icebp
dec
push
aas
or
adc
sbb
bound
and
mov
inc
jae
incb
push
lods
cmpsl
push
out
cmp
fistl
stos
mov
popa
pop
dec
add
rorb
lods
sub
mov
outsb
ret
mov
and
nop
xchg
addr16
mov
mov
sub
or
xchg
leave
mov
jbe
push
mov
lods
mov
incb
push
cs
icebp
lret
inc
rcrl
inc
mov
mov
mov
fisubs
ret
ror
test
push
push
mov
sub
pop
xchg
daa
mov
and
repz
out
adcl
sub
imul
ret
into
shrb
repz
xor
mov
mov
bound
nop
les
jnp
mov
add
sbb
in
cli
adc
popa
sahf
clc
hlt
pop
xchg
pop
adc
notl
and
push
xor
fldenv
sbb
fbld
mov
add
sub
and
mov
cmp
cmp
fcmovb
lret
jae
imul
sahf
mov
pop
sub
pop
rorl
xor
andb
sub
fiaddl
int
or
cmp
arpl
xchg
les
sbb
pop
mov
or
ror
outsb
loop
aad
mov
scas
fnstenv
cmpl
jno
lret
inc
pop
dec
mov
mov
dec
or
mov
cmp
mov
ficompl
stos
mov
or
subl
add
mov
or
rcr
dec
shlb
sti
lds
xor
pusha
push
and
push
mov
in
adc
test
adc
in
and
pop
inc
jge
dec
mov
out
shll
mov
xchg
sub
cmp
imul
xor
ficomps
jno
stos
and
xor
shlb
push
sbb
es
sbb
stc
jg
push
pop
test
inc
mov
stos
ret
jae
sbb
out
and
dec
out
scas
repnz
or
or
mov
xlat
loop
sbb
bound
and
ss
movb
pop
loope
inc
inc
lods
lods
das
data16
jle
mov
or
loop
sub
push
aas
xchg
sbb
adc
inc
dec
adc
sbb
xchg
or
sub
and
std
mov
xor
test
xchg
fisubrl
xor
test
movsl
mov
dec
sbb
or
xchg
cmpsb
mov
arpl
mov
jne
sub
les
push
push
lret
mov
push
lcall
imul
loop
dec
push
and
sbb
pop
ds
fucomi
cmp
cmp
mov
dec
push
popa
shl
mov
pop
xor
and
add
mov
mov
lret
dec
sbb
sar
lahf
lahf
push
pop
dec
repz
xor
sub
dec
dec
je
mov
mov
mov
ror
lods
xlat
mov
inc
out
adc
sbb
jno
shrb
mov
in
mov
or
cli
push
insl
je
and
movsl
jne
icebp
lea
out
loope
test
add
fildll
inc
fstpl
cmp
imul
lea
out
das
or
imul
mov
mov
xor
adc
push
sbb
and
rcrl
out
movsl
jb
loop
std
sub
dec
shrl
pop
arpl
push
fcmovne
dec
xchg
mov
insl
jg
or
push
mov
hlt
dec
aam
push
shlb
into
add
icebp
pop
mov
or
sub
dec
enter
adc
sbb
outsb
loopne
jmp
xchg
test
mov
ret
das
aas
add
dec
xor
inc
jae
jp
xchg
pop
rcrb
mov
mov
lret
dec
clc
int
mov
iret
push
inc
push
dec
rorb
cmc
scas
inc
and
gs
xorl
pop
adc
lea
nop
adc
outsb
push
push
fdivl
cs
jno
shrl
stc
fwait
ret
add
and
pop
stc
dec
mov
js
adc
xor
daa
mov
mov
dec
mov
out
xchg
mov
sbb
mov
jge
repnz
mov
jmp
xchg
lret
pop
out
ljmp
lds
cmp
sbb
sbb
lock
lods
imul
ret
insl
cli
xor
repnz
shlb
add
sub
and
mov
cmp
inc
cmp
or
mov
add
js
mov
es
pop
mov
mov
push
daa
std
in
add
inc
and
rcrb
arpl
add
jb
scas
or
stos
adc
inc
sahf
xchg
loope
xchg
daa
dec
xchg
bnd
push
xchg
stc
loope
leave
or
cmp
fcompl
adc
xchg
aaa
es
lahf
cmc
mov
insl
jle
fnstsw
push
mov
xchg
mov
inc
or
ret
jne
fstl
sti
leave
sub
inc
insl
test
sub
out
sbb
xchg
fisttps
dec
dec
or
js
sbb
and
ret
or
lret
lds
pushf
pop
add
lds
inc
jg
pusha
and
sahf
fwait
bound
xchg
mov
cli
jns
mov
insb
cmp
add
pop
shrb
shl
sub
jge
mov
mov
call
push
sub
push
iret
repnz
cmp
jmp
cmpsl
fwait
shl
cmp
mov
into
cmp
sbb
lds
test
lods
push
sub
outsb
gs
rcrb
scas
js
jne
push
push
cld
outsb
imull
xchg
cmp
lds
rorb
xor
dec
arpl
out
inc
iret
sub
pop
popf
jne
insl
stc
js
dec
and
mov
cmp
pop
loop
mov
cmp
mov
decb
ret
and
fstps
pop
xor
cwtl
mov
sahf
int
mov
sub
cld
or
jl
decl
adc
mov
pop
mov
test
or
push
jnp
loope
jg
mov
cmp
cmp
popf
adc
inc
xchg
mov
sbb
xlat
sbb
push
shrb
lods
fists
mov
les
popa
movsl
out
out
dec
adc
pop
insb
add
test
pop
in
enter
mov
cmp
dec
jnp
pop
push
inc
bnd
jl
or
xor
test
stos
cld
and
add
stc
addr16
in
or
xor
mov
and
int3
push
gs
mov
aaa
mov
mov
push
dec
rcrl
int
pusha
pop
adc
mov
test
mov
sub
pop
cs
sbbb
cmpsl
arpl
stc
subb
lock
ja
jns
inc
mov
lods
js
lock
push
pop
jbe
sbb
mov
cli
add
dec
sbb
stos
imul
imul
xor
pop
xor
add
push
adc
pushf
stc
lods
xchg
daa
std
and
adc
pop
mov
mov
xor
add
outsb
jns
loop
dec
subl
fdivl
mov
mov
cmp
jmp
jg
pop
sub
fcomps
mov
sub
and
rorb
dec
pop
clc
les
push
sub
cmp
call
dec
inc
and
xor
stos
subb
les
testb
mov
xchg
mov
js
rcll
fcomp
or
clc
aad
dec
inc
into
sahf
in
mov
ss
imul
nop
das
inc
jno
out
rorb
mov
xchg
addr16
fstps
pop
push
adc
enter
cmp
push
fdivs
inc
push
cmp
rcl
mov
in
adc
jns
js
sbbl
xor
insb
sub
nop
add
pushf
in
dec
and
or
adc
sbb
iret
add
inc
pop
imul
cmp
subb
movsl
lds
or
test
mov
int
mov
es
imul
or
js
rclb
lret
subl
call
and
or
mov
mov
stos
adc
lcall
and
mov
push
sbb
or
popf
xchg
data16
mov
fldlg2
jae
inc
jns
shlb
mov
andb
cmp
imul
sbb
lcall
add
jmp
data16
jno
adc
xchg
mov
and
fwait
in
mov
cs
pusha
lahf
sbb
push
in
dec
out
lea
repz
cwtl
mov
add
fwait
scas
xor
inc
push
and
pop
pushf
adc
xorb
xchg
movsb
push
add
cmpsb
xchg
xchg
push
mov
je
int
popf
out
sahf
fldcw
fwait
orl
adcb
pop
sbb
xor
sarl
cwtl
adc
add
mov
fnstcw
insl
inc
ds
lcall
xor
inc
and
mov
mov
cwtl
mov
int
xchg
daa
cmp
inc
adc
addb
loopne
push
inc
add
rol
fwait
scas
shrl
cmpl
popf
push
and
popa
xchg
jne
mov
ror
push
xor
into
daa
mov
subl
pop
xor
xchg
xlat
test
popa
arpl
out
call
push
rcrb
sub
into
sahf
push
sub
mov
ja
in
clc
pop
pop
pop
pop
pushf
xor
pusha
adc
add
dec
push
fbstp
pusha
push
cli
xchg
inc
jb
out
push
cmp
pop
jp
push
jnp
cmp
add
xor
fucom
jae
inc
push
sub
push
sbb
push
dec
cwtl
inc
push
bnd
add
popf
lcall
movsl
out
enter
sbb
ja
mov
sbb
sub
jmp
jne
js
xor
and
mov
rcll
imul
bnd
cmpsl
push
xor
cltd
mov
insl
clc
fcmovu
fsubs
pop
dec
mov
and
aas
lock
mov
jl
push
mov
nop
insb
rol
enter
jns
push
mov
pop
aaa
cmpsb
nop
iret
sub
pop
icebp
lss
scas
sbb
jg
loope
mov
mov
jg
mov
sarb
mov
rcll
aad
scas
and
rorl
mov
add
cmp
pushf
mov
mov
cltd
cli
inc
jno
hlt
cmp
cltd
sub
add
mov
sbb
push
dec
cmp
sti
test
xchg
in
xchg
fdivrl
cmp
or
call
push
cs
push
ja
pop
xchg
mov
arpl
aaa
inc
int
daa
jo
xor
xlat
or
add
jne
js
addr16
jp
sub
mov
sti
pop
andl
or
rcr
cmp
jno
in
sti
or
mov
mov
add
hlt
dec
lods
int3
shlb
lea
mov
mov
and
add
or
test
mov
mov
loope
out
arpl
mov
mov
int3
faddp
pop
loopne
xchg
dec
cmp
xor
shll
add
mov
mov
sbb
lahf
mov
and
xchg
into
or
jnp
pop
pushl
push
xchg
push
mov
cmp
lret
lret
or
mov
int
js
mull
frstor
scas
dec
jo
ret
sub
stc
or
leave
mov
rcll
pushf
outsb
aam
inc
and
and
test
xor
adc
mov
xchg
xor
sti
sub
or
inc
fucomi
cmp
popf
pop
cmp
cmc
iret
pushf
lea
inc
fidivs
sub
mov
test
adc
dec
ret
ljmp
out
jp
insl
iret
enter
lock
mov
jns
push
addr16
test
repz
xor
and
in
and
pop
movsl
pushf
in
fisttpl
add
mov
cmc
xchg
add
andb
stos
add
test
arpl
pop
sbb
into
and
int3
int
cmpsl
xchg
jno
popa
pop
push
jg
or
xchg
jmp
les
and
insb
int
cmc
sbbw
push
rorb
movsb
das
push
mov
cs
push
pushf
mov
fisubrl
or
popa
xor
jo
jnp
sbb
or
jl
pop
add
mov
outsb
pop
pop
movsl
inc
stc
ret
js
pop
mov
or
dec
mov
test
icebp
addr16
and
mov
and
inc
pop
ficomps
add
mov
push
test
aam
shr
adc
je
pop
xchg
mov
sbb
or
sub
mov
pop
into
mov
gs
dec
jmp
out
hlt
or
cmpsl
dec
adc
ret
dec
subl
pusha
in
movb
push
sub
and
push
movsl
out
adc
shl
mov
aad
in
andb
or
gs
adc
fwait
push
sub
pop
jne
lods
xchg
or
adc
sbb
jne
loop
sbb
dec
mov
pop
jl
mov
iret
leave
lahf
and
sub
xchg
ljmp
inc
adc
or
mov
sub
pushf
and
popl
lds
xor
inc
push
or
sub
out
sbb
xorb
mov
loope
jno
stc
pop
xor
fnclex
push
movsl
call
or
cli
es
add
call
fisttps
lods
mov
dec
mov
hlt
inc
insl
push
test
pop
push
test
or
cmp
loopne
lahf
out
cmpsl
inc
xor
andl
shrb
cmc
clc
push
fistps
pop
pop
sub
shlb
mov
sarb
int3
insl
ja
mov
in
xchg
mov
push
sahf
xchg
mov
dec
dec
sub
test
pop
mov
jo
adc
mov
icebp
scas
push
aad
test
sbb
and
icebp
arpl
dec
dec
xchg
inc
sahf
dec
sub
test
push
repz
repz
jge
pop
or
mov
pop
popf
cli
das
subb
cltd
xor
jecxz
fucomi
push
xor
sti
dec
popf
push
mov
push
fwait
cld
addl
mov
iret
ljmp
shll
inc
or
int
add
inc
jo
push
movsl
cmp
jae
mov
dec
dec
cmp
xor
cmp
shl
inc
mov
popa
outsb
dec
ret
cmp
and
mov
xor
pusha
test
dec
outsb
xor
fstl
mov
inc
cmpsb
xchg
jb
push
or
jno,pn
test
cmpl
mov
jmp
movsl
inc
pop
mov
in
sbb
inc
push
mov
test
aas
jp
lea
rcrb
push
adc
shll
and
sub
subb
sti
mov
sbb
je
cmp
out
jne
sub
pop
in
inc
imul
add
sarb
push
pop
pop
fistpll
xchg
ja
dec
pop
into
pop
filds
push
mov
inc
popf
cli
repz
cmpsl
notl
xchg
xchg
lods
dec
jp
push
sub
push
jne
aam
lea
in
xchg
dec
jae
inc
cmpsl
mov
or
sub
out
jmp
insb
xchg
lds
dec
cmp
imul
shrb
je
mul
int
inc
mov
sahf
inc
cmp
imul
xor
sbb
jne
xchg
notb
mov
dec
lea
movsb
in
lret
dec
mov
stc
loopne
shlb
jl
or
xor
xchg
inc
std
sub
fwait
ja
fdivs
sbb
pop
insb
pop
mov
cmc
xchg
add
lret
cmpsb
add
loope
push
adc
xchg
cmp
clc
push
mov
frstpm(287
fcoms
xchg
inc
lahf
sub
push
fcmovne
sahf
inc
mov
shll
sub
pop
and
push
adc
xchg
movsb
ret
and
adc
mov
test
sbb
je
jle
mov
rolb
inc
xor
or
xchg
and
out
jnp
fsub
pop
cmp
add
xor
daa
data16
stos
jae
push
jae
jb
aaa
fsts
lods
push
inc
insb
daa
inc
add
data16
mov
ss
clc
adc
adc
loopne
xor
sub
cmp
pop
xchg
pop
cmpb
mov
or
test
mov
rcll
mov
fcomps
sbb
push
sbb
jbe
jge
mov
ss
daa
and
push
dec
les
movsl
inc
add
add
cs
lret
call
cmp
outsl
loop
cmp
fbld
xchg
jge
inc
arpl
dec
pop
ja
mov
mov
scas
push
rcrl
ja
dec
cmp
mov
fsts
mov
dec
or
jo
cmpsb
test
in
cmpsl
jle
pusha
xor
in
stos
ss
insl
mov
repz
push
outsl
out
dec
test
std
push
adc
xor
add
mov
shl
inc
mov
mov
gs
insb
mov
cmc
jns
pushf
or
pusha
jbe
cmpsl
divl
cmp
cmp
cmp
cmp
loopne
scas
popa
out
prefetcht2
push
lahf
mov
pushf
fimuls
test
adcb
mov
add
push
sub
xorl
jno
call
mov
ja
xchg
dec
jnp
cmpsb
add
push
cltd
andb
in
pop
out
dec
mov
or
clc
xor
test
es
pop
mov
mov
push
adc
sub
and
add
outsl
in
sbb
cmc
mov
int3
and
inc
out
dec
mov
les
aas
scas
push
add
aaa
cltd
mov
mov
sbb
xlat
add
mov
bound
sbb
lock
shrl
and
jl
int
fidivs
shll
dec
push
inc
inc
cld
add
mov
xchg
inc
bound
out
sub
sub
leave
jle
xchg
shlb
mulb
aaa
icebp
daa
xlat
pop
mov
ret
lods
and
shlb
aas
pop
call
test
push
pop
pop
pushf
aas
lea
mov
repnz
leave
or
cmp
push
add
out
inc
dec
cmp
or
mov
push
ja
aam
mov
test
bound
dec
pop
ss
out
jb
jmp
pop
inc
inc
aad
stc
inc
iret
aas
jno
mov
lods
nop
dec
push
outsb
sub
out
scas
xchg
mov
jno
fisttpll
fsts
jecxz
add
jle
sbb
inc
xlat
inc
mov
pop
movsl
dec
int
and
pop
jmp
adc
pop
jg
stos
and
lret
ret
push
mov
hlt
stos
repz
shll
dec
cmp
mov
test
outsl
lahf
cmc
aam
push
leave
jg
fs
in
jp
nop
or
test
add
adc
cltd
add
push
add
andnps
lret
sub
xor
dec
ss
push
xchg
dec
adc
addr16
push
sbb
xor
dec
jle
aas
sbb
mov
mov
add
imul
popa
mov
pop
cmp
test
push
ljmp
orb
enter
leave
adc
arpl
fists
dec
cld
push
popf
mov
pop
stos
lcall
inc
push
stos
pop
adc
add
xchg
or
ss
adc
and
in
ret
loopne
out
jno
push
mov
cld
pop
shlb
movsl
adc
jo
insl
xchg
sahf
cmp
in
dec
movsb
cld
cmpsb
push
int
or
stos
push
mov
cmp
inc
jp
bound
ljmp
in
sar
fcmovbe
in
xchg
popf
pushf
icebp
or
pop
movsl
mov
pop
cmp
push
orb
sub
push
inc
hlt
stos
mov
sbb
in
lods
mov
xchg
xlat
fs
cltd
mov
movsb
shlb
dec
lock
rorb
negl
mov
scas
jmp
pop
std
mov
out
inc
in
xchg
ret
idivb
xchg
cmpsl
int
movl
enter
sub
dec
and
mov
xchg
dec
push
jecxz
arpl
mov
hlt
inc
and
repz
xor
pop
jnp
sti
jno
mov
and
ljmp
pushf
es
mov
adc
ljmp
mov
xchg
movsb
jle
or
imul
pop
dec
sbb
and
pusha
int
iret
jg
fsubl
mov
scas
test
faddl
mov
loopne
in
iret
mov
jmp
push
inc
pushf
xor
movsl
int3
mov
dec
enter
inc
js
inc
or
inc
inc
jae
test
hlt
cs
out
jp
ds
test
bound
mov
push
gs
sahf
jo
cwtl
imul
stc
xchg
fsubl
cmp
loope
js
lret
std
cmp
sti
sub
nop
nop
or
sbb
cmp
je
add
mov
push
sbb
mov
and
fsts
lock
insl
push
or
cmp
inc
fdivl
sub
fs
test
lods
xchg
mov
out
out
hlt
mov
cmp
cli
cmc
test
lods
sub
nop
outsb
ljmp
adc
mov
adc
movsb
cmp
mov
divb
aam
test
out
repnz
xchg
loop
sbb
jg
lea
push
add
setno
xchg
push
dec
daa
mov
inc
dec
mov
adc
call
ret
add
fstpl
push
cmp
lahf
punpckhwd
mov
loope
pop
and
std
outsl
loopne
sbb
in
dec
cmp
pop
pop
popf
xor
lock
outsb
movsb
push
xor
push
cmpsb
mov
ja
sti
into
sbb
inc
adc
and
xchg
adc
test
pushf
mov
xchg
in
sti
leave
jo
push
xchg
daa
repnz
mov
mov
adc
out
in
jmp
dec
mov
lea
mov
sarb
sub
sub
pop
push
out
xorl
iret
fadd
dec
jb
cmp
je
test
mov
or
sbbb
das
or
pop
ljmp
test
cmp
popa
cmpsb
mov
push
dec
xchg
mov
nop
fidivrl
add
test
aaa
ret
daa
inc
pop
and
push
nop
pop
test
dec
mov
mov
je
fstl
jbe
and
lock
mov
hlt
sub
adc
and
movsl
mov
pop
sbb
test
jge
adc
sub
mov
jge
xor
sub
pop
or
lods
int
mov
pop
pop
cmpsl
sub
xorl
mov
popf
sub
or
and
aaa
dec
add
mov
aam
mov
aad
jns
cmc
mov
or
pop
scas
lahf
xchg
repz
mov
es
cmpl
sbb
cmp
cltd
outsl
in
push
je
pop
lcall
jl
jbe
and
add
fldt
jb
push
mov
loopne
cmpsb
sti
leave
lods
xor
lock
mov
sbb
je
notb
leave
inc
int3
jmp
xchg
rol
ja
adc
arpl
sahf
icebp
sub
inc
insl
and
pop
and
subb
ds
das
cmpsb
pop
shrb
dec
dec
out
ret
ljmp
fsubr
inc
mov
sbb
xor
pop
cmp
mov
lret
push
bound
xor
loop
xor
inc
jge
cli
xor
lahf
fadds
inc
ret
xchg
add
sbb
mov
hlt
dec
test
or
mov
int3
ficompl
ja
out
push
adc
mov
xor
mov
pop
pop
cs
rcrl
popa
jb
sub
push
cmpsl
dec
sbb
dec
scas
adc
or
outsl
and
inc
imul
jne
ds
outsb
pop
hlt
les
mov
lock
dec
or
sbb
cmp
push
xlat
mov
and
outsl
imul
xor
xchg
test
je
jno
out
fisubl
sbb
loop
adc
xchg
fs
int
rcrb
in
loope
sub
ds
das
int
rcrl
xchg
fldt
mov
jo
in
dec
mov
xor
popa
test
jp
sub
in
aaa
ds
leave
aas
mov
mov
and
and
push
insb
cwtl
movsb
xchg
mov
inc
ret
negb
pop
adc
inc
mov
push
les
push
jmp
mov
mov
sub
popf
popf
stc
cmc
pop
mov
inc
cli
jg
and
or
xor
outsb
imul
add
xchg
int
aam
jbe
adc
andb
test
fst
mov
iret
xchg
mov
hlt
cmp
pop
pusha
lea
test
add
mov
enter
add
push
jnp
fs
das
pushf
inc
fisttps
sub
lea
jmp
mov
jns
call
cmpsb
cltd
xor
mov
mov
jge
mov
test
ja
sbb
push
push
outsl
lock
xor
shrb
push
idivl
push
pusha
neg
xor
outsb
mov
mov
icebp
cmp
out
movsl
cmpsl
and
cmpsl
idivb
loop
loop
aam
fwait
roll
pop
in
adc
pop
int3
sub
sub
stc
sbb
in
imul
jbe
xchg
xor
stc
dec
pop
jmp
ret
daa
mov
pop
js
dec
in
nop
cmc
lret
adc
mov
insb
and
mov
or
frstor
es
inc
or
xchg
xchg
loopne
aad
jnp
jb
pop
sbb
mov
xchg
repz
clc
pop
cmp
and
or
test
mov
lods
ljmp
mov
notl
test
in
jae
push
ret
add
sub
insb
pop
scas
scas
adc
mov
ss
cwtl
or
add
pushf
dec
ret
push
add
push
scas
inc
jnp
dec
jne
xchg
cmp
push
push
push
gs
push
push
mov
pusha
xchg
adc
mov
out
loopne
loopne
jge
jbe
sub
add
mov
mov
cmpsl
test
jg
outsb
xchg
and
jge
inc
mov
loope
lret
pop
xchg
subl
js
movsb
pop
je
sbb
repnz
pop
movl
push
enter
sti
inc
pop
rorl
push
lods
and
inc
out
outsb
cmp
xor
inc
mov
test
push
push
mov
rcrb
mov
xchg
pop
mov
xor
pop
fs
punpckhwd
stos
dec
and
push
imul
mov
aam
ret
insb
or
gs
test
lcall
popa
and
mov
adc
les
stos
outsl
lret
aad
rcrb
in
lds
loop
mov
or
rcrl
xchg
sub
or
and
cld
fnstcw
cmp
loope
rorb
jnp
sub
push
or
jge
mov
data16
cmp
or
xchg
mov
jae
xchg
push
out
inc
cmp
adc
out
pop
icebp
shr
inc
aad
jnp
fdivr
mov
push
cmp
inc
mov
fmuls
decl
push
fnsetpm(287
ret
sub
leave
lea
cltd
inc
push
shr
test
test
cli
mov
adc
call
dec
cmpsb
or
and
cmp
mov
mov
mov
and
adc
jmp
orb
ds
or
lea
lcall
add
insl
inc
xor
out
push
push
clc
cmp
pop
cmovbe
inc
lock
mov
movsl
push
movsb
add
out
fsts
sub
aas
jecxz
paddusb
sbb
cmp
in
loopne
sbb
iret
hlt
ja
pop
mov
lea
ret
push
sub
int
movsl
sbb
bound
fstl
sub
lret
stos
jmp
and
test
jne
insl
add
iret
pushf
mov
xchg
sbb
subb
push
mov
lods
lds
movsb
in
add
in
xchg
inc
in
lds
or
in
ss
nop
pop
fisubs
subb
les
outsl
popa
xchg
shl
fs
sub
lcall
in
or
pop
aas
outsl
mov
inc
cmpl
ds
sub
repz
test
subl
rcrb
xor
jno
es
fcoms
xchg
out
inc
jle
call
push
movlps
mov
cmpsl
jecxz
roll
nop
hlt
std
dec
scas
mov
add
out
cmpsl
ljmp
fcompl
mov
mov
repz
sub
or
adc
mov
cmp
mov
call
xor
fwait
push
or
mov
push
cli
cli
add
and
out
sbbl
mov
mov
in
xchg
inc
ret
jg
rorb
mov
jno
call
xchg
cmp
and
out
inc
cmpsb
ja
pop
cmp
les
cmpsb
jg
je
mov
cmp
ljmp
push
shl
sub
push
fcmovnu
cltd
inc
cmp
test
mov
lods
test
jno
lret
popa
mov
hlt
jge
rcrb
xor
inc
cmp
push
inc
hlt
jb
mov
mov
out
push
jmp
sbb
out
cltd
int3
or
loop
add
xlat
mov
fcoml
cld
cmp
call
add
imull
or
pushf
add
lock
loop
add
cmpsb
lods
rorl
mov
push
js
movsl
xchg
dec
sbb
ret
sub
or
pushf
stos
in
rcrl
outsl
jg
enter
negl
repz
and
push
mov
imulb
insb
mov
xchg
int
pop
bound
fisttpl
int3
xchg
add
ret
gs
notb
inc
test
ljmp
xchg
fcoms
ret
jle
sub
push
aad
aaa
aam
dec
and
dec
sbb
mov
push
pop
imul
pop
or
je
mull
data16
push
std
pop
rol
jnp
scas
push
dec
sar
pop
jns
xchg
sbb
xchg
dec
mov
or
adc
mov
cmp
addr16
and
test
pop
add
xchg
gs
movsb
mov
hlt
mov
pop
push
and
inc
xor
test
pop
mov
idivb
ds
test
adc
pslld
xchg
aas
push
and
inc
mov
fcmovu
inc
cmpsl
xor
popa
lea
cmp
mov
movsl
movsb
daa
inc
dec
jo
pop
fisttps
daa
mov
sub
and
xor
out
lds
sbb
aas
orb
inc
int3
test
fistps
and
ds
xor
divb
lds
jbe
add
cld
outsb
xor
lahf
out
xor
out
cmp
movsl
push
lea
add
icebp
or
ret
enter
lods
testl
scas
jbe
movsb
push
push
xor
test
sbb
movsb
repz
and
je
cs
dec
and
das
int
lock
jg
push
pop
mov
dec
pushf
jcxz
inc
mov
ret
fwait
mov
pushf
popa
xchg
pop
or
in
xchg
dec
enter
fdivrs
pop
cs
mov
lret
mov
dec
lea
inc
out
jno
jmp
pop
mov
mov
xchg
jge
ljmp
je
stos
inc
mov
ret
movsb
mov
mov
jg
add
shr
test
jne
imul
fiaddl
sti
dec
outsl
repz
xchg
xor
mov
loope
xor
repz
pop
mov
ret
sub
sbb
add
jns
jl
xlat
cmpsl
sub
xchg
jl,pn
imul
and
jb
cwtl
xchg
movsl
and
imul
xor
les
ja
sbb
shrl
movsb
cwtl
inc
faddl
sub
inc
cwtl
dec
jge
sbb
dec
dec
iret
add
addl
xor
mov
addr16
xchg
mov
lea
jge
push
loopne
mov
push
jnp
gs
xchg
mov
sti
sub
xchg
mov
or
rorb
popa
pusha
movsb
cmp
inc
lea
ljmp
push
xchg
js
mov
movsb
ja
imul
shll
sbb
or
mov
pop
push
add
addr16
call
mov
mov
xchg
test
mov
jne
lock
stos
fcompl
inc
ljmp
mov
movsb
jmp
shlb
cmp
lods
cmp
inc
into
in
mov
in
mov
cmpl
lahf
cmp
dec
ljmp
jp
out
adc
inc
jne
pop
lahf
xor
adc
dec
lret
cli
inc
adc
cmp
pop
out
mov
mov
arpl
gs
gs
sub
xor
mov
jle
cmpl
leave
leave
jno
arpl
cmp
cltd
iret
popa
addl
pushf
xchg
ja
pop
stos
mov
mov
pusha
stos
mov
je
or
and
jl
pop
mov
es
jbe
imul
jmp
push
push
pop
fmulp
icebp
ds
out
movsb
dec
inc
add
pop
sbb
or
inc
dec
gs
rcrb
push
push
lock
push
push
sbb
or
dec
dec
out
mov
lea
cmp
inc
jbe
sbb
add
or
icebp
rcr
jle
pop
je
pop
insb
out
fxch
push
xor
adc
sub
mov
or
inc
sub
push
lcall
mov
hlt
dec
xchg
scas
outsl
adc
and
cmp
xchg
jb
fwait
cmp
std
ss
mov
fsubrs
jl
ret
imul
dec
pusha
lret
mov
and
mov
fsubs
cmp
dec
pop
out
dec
and
push
mov
popa
js
mov
jl
js
xchg
in
xchg
sti
aad
pop
xchg
push
repnz
imul
pop
sahf
in
gs
and
xlat
mov
shl
stos
xor
mov
das
ljmp
popf
outsb
xchg
insb
in
mov
nop
cmp
ljmp
sbb
jbe
pop
mov
icebp
ret
lods
movsb
xchg
mov
cmc
in
cwtl
lret
das
jae
int3
and
mov
lock
inc
fwait
incl
sysret
lods
dec
jo
cli
push
inc
adc
bound
mov
das
pop
cmpsl
mov
fnstenv
jns
jnp
in
jns
xchg
into
lcall
stos
sbb
in
mov
inc
hlt
test
dec
inc
loopne
or
inc
aas
jne
cmp
popa
ret
sbb
jne
fdivl
push
jb
xor
jmp
cmp
sbb
ficoml
pop
mov
test
add
push
push
loopne
stos
out
and
or
sets
shll
lods
xchg
cmp
movsb
sbb
xor
stc
test
sbb
fiadds
clc
cmpsl
lock
cmp
mov
pop
stos
lock
and
rcll
cmp
fidivl
decb
push
and
mov
or
sbb
xor
pop
lahf
ljmp
sub
sbb
mov
mov
sahf
adc
sub
lcall
jo
je
mov
mov
jle
add
fwait
cltd
nop
jbe
stc
fildll
xor
push
xor
and
pop
pop
js
sbb
aad
sti
xchg
cltd
in
cltd
mov
inc
inc
sub
mov
inc
add
dec
xor
and
fsubs
mov
cwtl
addb
mov
mov
bts
xor
lret
sbb
enter
lds
pop
test
movsb
and
sti
adc
mov
aam
shl
loop
pop
and
loope
je
fdivrs
out
stos
push
xor
and
out
mov
add
out
adc
popf
lds
leave
dec
xlat
loopne
arpl
in
dec
sub
mov
mov
xlat
outsl
repnz
push
gs
xchg
jb
inc
mov
aad
cmp
shlb
or
ljmp
js
mov
daa
jo
mov
std
lahf
add
stos
stc
enter
aam
idivl
clc
hlt
aas
or
test
adc
andb
sbb
and
dec
mov
add
sub
loopne
and
in
adc
popa
cmpsb
call
jno
sub
xor
pop
in
rcrb
loope
adc
xor
xchg
mov
and
jge
in
xchg
add
adc
mov
jb
push
jecxz
xchg
cwtl
popa
outsb
gs
and
xchg
xchg
in
inc
inc
inc
sbb
push
repnz
cltd
mov
mov
adc
scas
jle
xlat
jecxz
sbb
dec
mov
xor
addr16
stc
push
js
fstps
jl
sub
dec
sub
add
dec
aam
push
mov
bsf
dec
lret
adc
mov
cmp
scas
push
std
in
sbb
das
jecxz
je
jecxz
xchg
xchg
inc
cld
push
jno
fdivrl
push
notb
jae
pop
pop
sbb
es
add
xor
lahf
add
nop
push
dec
inc
push
call
sbb
push
sub
shld
xchg
pop
fs
sbb
ficoml
and
cli
out
xor
cmp
mov
out
neg
xchg
cs
mov
cmp
clc
pop
cli
in
pusha
out
mov
imul
ljmp
xor
ljmp
pop
hlt
mov
lahf
jge
loop
dec
test
inc
and
sub
lock
popa
xor
imul
jp
ds
or
ficoml
inc
fsubrl
js
je
lcall
jno
scas
jbe
adc
test
pop
adc
aas
sub
js
imul
je
add
pop
out
stos
sbb
ds
js
fisubl
ljmp
cltd
lods
add
mov
sub
xor
cmp
cmp
add
or
jmp
ss
daa
sti
jmp
pop
cmp
xchg
lret
das
outsl
into
jmp
jg
or
pop
cld
xchg
xor
jle
mov
in
aaa
loopne
inc
rcrl
cli
xchg
pop
mov
jb
mov
lods
mov
fdivrp
jae
add
das
jnp
inc
mov
mov
stos
inc
dec
push
in
jne
icebp
repz
sbb
hlt
aad
inc
out
gs
clc
adc
mov
dec
cmp
dec
inc
pop
adc
pushf
sahf
or
popf
into
push
cmpps
nop
fldt
pushf
nop
pushf
pusha
dec
cmc
pop
sub
les
cmp
xchg
adc
add
in
repz
and
das
mov
mov
daa
mov
and
fsubl
pop
xchg
mov
jl
andl
sbb
sbb
jo
inc
push
cmc
mov
mov
mov
fcmovnbe
cmp
arpl
or
jl
cli
pusha
es
idiv
sahf
or
pusha
mov
sbb
adc
mov
xchg
adc
pushf
cmpsl
sub
int
mov
aaa
lods
pop
jnp
cmp
pop
cmp
testb
xchg
adc
out
jmp
push
mov
inc
push
sti
dec
push
mov
fistpl
movsb
in
andl
in
in
mov
enter
ja
xor
push
xchg
mov
push
mov
jnp
mov
hlt
push
lods
xlat
cmp
and
ret
adc
mov
mov
roll
lds
sahf
out
xchg
inc
cmp
jae
push
mov
iret
in
cs
lret
pop
stos
das
fadd
jl
xor
mov
pop
popf
push
mov
movsb
inc
addl
pop
inc
mov
in
pusha
xor
in
imul
inc
push
or
sub
out
sbb
mov
leave
dec
outsb
in
addr16
push
popf
add
sbb
aas
push
fildll
imul
cmc
stos
icebp
push
dec
inc
or
stos
stc
aaa
ret
nop
xorl
in
mov
outsl
fildl
sbb
enter
pop
scas
test
push
cmp
push
jl
mov
scas
pop
repnz
mov
mov
inc
sub
pop
adc
inc
jnp
cs
hlt
mov
pop
movsl
loop
lcall
or
sbb
xchg
xchg
int
cmp
mov
or
add
or
in
xchg
mov
in
dec
add
dec
data16
hlt
jg
inc
negl
push
bound
cmp
ss
cld
ret
inc
cli
push
dec
and
ja
in
fs
mov
clc
pusha
cmc
mov
js
stc
sub
lods
push
aaa
cltd
hlt
sbb
lods
lock
addr16
or
push
or
dec
roll
cmp
mov
call
arpl
fsubs
add
repz
pusha
inc
fisubl
xchg
dec
das
aaa
ret
std
push
sbb
scas
mov
and
icebp
lds
pop
sbb
leave
repz
lcall
xchg
fidivs
add
sub
xlat
dec
pop
jle
lret
mov
inc
inc
or
fnstcw
loop
stos
fwait
test
jl
sbb
ret
push
fs
dec
xchg
pushf
and
adc
addr16
cltd
rorb
and
lods
sbb
imul
cwtl
dec
fistps
pusha
xor
inc
mov
add
xchg
jae
push
cmp
dec
js
adc
xor
lcall
leave
cs
cmp
bound
into
in
and
inc
mov
xlat
pop
das
cmp
dec
outsb
sbb
xchg
adc
xchg
lcall
lods
in
rcrb
rcrb
pop
xchg
sbbb
enter
jg
rcrl
out
cmpsb
xchg
and
push
stos
int
pop
cmp
fstl
dec
sub
or
pop
dec
mov
mov
bound
inc
jb
cmp
jae
pushf
cli
xor
cmpb
leave
out
insb
sub
pop
pop
jno
imul
inc
pop
mov
stos
outsl
lret
jmp
jnp
jle
out
or
or
sahf
or
mov
das
adc
in
cltd
sbbb
xchg
jg
cmpsl
pop
pop
in
movsl
rcr
lret
adc
pop
inc
and
subb
xchg
movsl
or
push
pop
pop
push
push
lahf
test
mov
es
push
push
inc
mov
sbb
scas
push
mov
xor
jg
ret
sub
cmpsb
ja
pop
int3
jo
or
mov
ss
iret
xorl
sahf
popa
dec
test
jg
xor
push
stos
cli
subb
jno
dec
adc
cmp
adc
lret
lods
sub
mov
cmc
cmp
stos
mov
ss
aad
ljmp
and
mov
mov
or
add
sbb
xor
sub
lcall
pop
std
in
stos
and
mov
mov
cmpsl
or
adcl
ljmp
pop
mov
sbb
outsb
sbb
pop
pushf
jnp
inc
adc
ds
stc
sbb
cmpb
jl
mov
sbb
xchg
xor
dec
sub
sbb
mov
lcall
cvtdq2ps
lret
sbb
xchg
je
inc
inc
pop
std
aam
xchg
lret
mov
xlat
mov
rorb
push
out
or
js
xchg
negb
fucomi
lea
mov
jle
ljmp
inc
sti
xchg
fmull
lret
xchg
mov
in
adc
into
cmc
add
dec
or
test
mov
cmp
in
inc
dec
jnp
stc
cmp
inc
inc
lret
jae
clc
data16
dec
cld
roll
pop
sbb
in
testl
jo
xor
and
int3
out
inc
xchg
push
mov
ret
sbb
push
out
cmp
adc
xchg
into
dec
ret
dec
daa
je
shll
jae
lock
xchg
mov
out
mov
mov
push
ljmp
xchg
js
jecxz
or
push
add
mov
cmp
jo
pushf
xlat
jns
out
or
mov
repz
jno
push
push
data16
jecxz
outsl
cmp
cmc
adc
dec
clc
fbstp
and
xor
pop
pusha
push
and
push
mov
test
push
cmp
mov
lahf
dec
xor
xor
scas
pop
inc
push
clc
jo
cmp
bound
mov
iret
cli
push
xchg
cmp
test
nop
cmp
jae
dec
arpl
lods
sti
cmc
xchg
mov
repnz
sbb
mov
stos
fistps
push
lret
jp
or
sahf
push
mov
cmpsl
fistpll
fs
cltd
sbb
mov
sub
mov
test
adc
in
clc
jne
testl
dec
test
insl
dec
cltd
into
push
loop
xorl
or
test
jae
jno
mov
imul
add
and
mov
inc
out
jne
loope
jecxz
call
lret
or
sub
xchg
and
out
cld
les
cli
cmpsb
xchg
push
ljmp
cmpsb
int3
add
popf
fldl
cmpsb
sbb
mov
xor
in
sbb
xor
frstor
rorb
cwtl
xor
inc
push
cmp
stos
in
push
cmpsl
xor
pop
xchg
cmc
push
sbb
mov
push
movsl
outsb
cmp
stos
rcll
dec
fiadds
into
mov
xor
mov
mov
cmp
data16
mov
outsl
mov
adc
mov
mov
into
xchg
imul
sbb
shlb
inc
dec
mov
jns
add
mov
fstl
sub
mov
xor
lods
ficomps
lahf
repz
push
mov
xor
mov
pop
sbb
loope
leave
addl
es
pop
lret
scas
hlt
jge
xchg
lcall
cmp
int3
jecxz
orl
dec
pop
mov
std
xor
mov
sbb
xorb
jb
pop
nop
mov
sbb
mov
notb
test
hlt
mov
mov
out
xchg
xchg
stos
aam
aas
adc
xor
mov
pop
push
cmpsb
xchg
pop
test
lret
push
mov
add
add
lea
jnp
push
cmpl
popa
sub
out
int
and
repnz
and
ljmp
cmpsb
mov
xor
jle
jae
push
pushf
inc
outsl
mov
js
stos
xchg
aam
mov
hlt
rcrl
adc
std
cs
arpl
inc
jae
jnp
push
loop
push
into
pop
adc
ss
or
gs
adc
xchg
clc
lods
push
mov
sbbb
push
mov
push
lea
mov
jb
aaa
mov
in
cltd
adc
imul
and
fistps
idivb
push
int3
and
inc
cmp
mov
xchg
push
or
and
hlt
mov
sub
push
outsl
adc
mov
push
cmpb
lcall
dec
dec
call
pop
js
and
ds
mov
add
pop
mov
call
outsl
pop
mov
adc
mov
push
in
dec
jle
sti
add
rolb
das
fsubs
loope
sub
out
pop
jmp
mov
xchg
mov
gs
es
adc
outsl
sub
sahf
fdivrp
and
push
mov
dec
xchg
test
push
int3
cmp
or
faddp
add
stos
sbbl
in
mov
adcl
add
call
std
sti
lret
jnp
xchg
aad
std
mov
arpl
gs
push
rcrl
add
sbb
push
ret
fists
adc
loope
arpl
adc
test
xorl
push
push
sbb
inc
xchg
movsb
and
xchg
sti
lcall
inc
test
mov
dec
dec
sub
ret
roll
inc
dec
xor
aaa
sbb
in
aam
cmpsb
mov
iret
push
push
repnz
mov
lock
icebp
or
adcl
out
ret
scas
aas
rcrl
arpl
pop
addr16
xchg
and
cmp
scas
jle
mov
ds
add
xchg
jbe
gs
in
mov
xchg
mov
aad
push
dec
add
mov
imul
inc
and
stc
in
fidivl
and
xor
jb
idivl
push
loop
addb
sub
sbbl
enter
jae
dec
sbb
lcall
loopne
mov
loope
push
movsb
ds
cmc
xor
or
ds
arpl
notl
sti
fsubl
mov
jbe
sbb
frndint
push
aaa
stos
pushf
add
cmp
xchg
jne
jbe
inc
dec
loop
mov
sarb
pop
xchg
scas
pop
movl
cmp
and
mov
cltd
fdivl
imul
arpl
dec
xchg
fnsave
xchg
mov
call
dec
sub
std
push
or
lock
and
and
enter
pop
scas
nop
gs
data16
xchg
iret
ret
xor
pop
add
sub
cmp
mov
inc
rcl
cmp
jle
jg
leave
inc
xchg
loop
and
xor
xor
ret
lea
jp
adc
ja
push
push
pusha
in
fistl
pushf
push
int
mov
adc
int3
js
cli
aas
xor
add
repz
imul
ss
aaa
dec
xchg
sbb
or
and
pop
inc
mov
popf
cmp
jecxz
push
int
cmp
shlb
test
cwtl
mov
test
pop
inc
rcl
sub
nop
mov
mov
and
xchg
es
mov
mov
cwtl
out
add
or
add
int3
and
nop
js
mov
fisttpl
inc
sub
out
push
hlt
xchg
and
test
pusha
jl
inc
fiaddl
aad
jmp
fistps
mov
inc
clc
call
cmp
dec
xor
xor
daa
xor
subl
popf
outsl
data16
movsl
pop
or
inc
dec
ret
arpl
mov
mov
mov
daa
rcrl
mov
jno
mov
mov
jnp
and
inc
pop
loop
mov
cs
sarb
leave
enter
or
test
ljmp
inc
mov
negb
fmuls
rorb
pop
testl
mov
inc
pop
push
jecxz,pt
mov
ret
adc
push
insl
aas
dec
divb
stc
sub
sub
das
outsb
aad
pop
mov
std
inc
ja
push
mov
jp
and
int3
and
in
mov
stos
aaa
push
push
add
inc
out
ret
jmp
ja
dec
pop
jnp
pop
in
xchg
cmpsb
cmpsl
lock
int
frstor
sbb
popf
jg
xchg
fdivl
xchg
pop
jmp
sbb
pop
sub
lcall
push
cmp
nop
js
stos
gs
shr
fwait
inc
pop
xchg
shll
push
jae
fxch
nop
das
dec
push
push
cld
xor
mov
and
sbb
xlat
fs
fstps
int
clc
push
sub
out
mov
pop
xor
loope
mov
nop
leave
fsincos
push
fsts
push
subl
mov
fdivp
dec
clc
inc
ret
repnz
cli
jbe
push
rcr
sub
aam
mov
push
imul
imul
fwait
dec
push
cs
popf
cmpsl
jne
xor
movsl
sbb
push
fcomp
xchg
mov
push
dec
popf
repnz
adc
fsubrl
cld
mov
arpl
int3
mov
decb
jo
sbb
clc
sbbb
cmpsb
add
push
push
ret
pop
pop
push
into
gs
cli
xor
push
sbb
cmp
int
jge
ds
inc
call
nop
sbb
pushf
outsl
repz
xchg
dec
xchg
jnp
std
stos
test
mov
xchg
lods
cmp
push
push
pop
mov
adc
aas
adc
ror
xor
retw
lret
dec
fsts
jae
xchg
incb
xchg
stos
fisttps
cmpsb
and
jo
inc
ret
popa
decl
add
shll
cmpb
push
mov
sbb
inc
push
xor
mov
pushf
cltd
pusha
mov
xchg
std
xchg
pushf
mov
dec
je
loop
loopne
test
je
mov
pop
int
pop
aaa
dec
mov
adc
cwtl
sub
popa
aam
icebp
loop
xchg
dec
xor
sbb
or
adc
pop
fsts
fisubs
gs
jns
cmp
test
sahf
pusha
es
jg
iret
ror
adc
stc
jo
dec
mov
popa
inc
incb
mov
cltd
xchg
push
xchg
pop
add
dec
xchg
add
cmp
pop
lods
or
pop
mov
jbe
mov
jmp
and
mov
pop
inc
fistpll
es
jno
mov
xchg
lcall
lea
pop
cs
mov
mov
outsl
vcmpsd
dec
ret
rolb
xor
test
lret
xchg
mov
mov
outsl
push
adc
mov
add
addr16
mov
stos
idivl
cs
leave
adc
adc
mov
sbb
stos
mov
adc
int
and
rcl
sub
jo
mov
jl
cmp
lods
shll
dec
ret
lcall
out
cmp
and
adc
jae
test
imul
ja
xor
inc
mov
test
loope
cmp
inc
pop
int
movsl
dec
add
ret
enter
cmpsb
inc
push
mov
hlt
push
lret
lea
add
mov
push
fcmovu
mov
es
mov
pop
xor
and
push
mov
gs
cmp
gs
clc
sbb
mov
xor
mov
push
fldl
rep
popf
push
lret
rorb
jb
js
imul
ds
aaa
mov
out
dec
jae
je
and
ss
pop
or
int
lds
inc
push
iret
inc
mov
enter
loop
mov
and
pop
popa
cmp
sar
lods
fisttpl
gs
xchg
std
imul
fcmovbe
test
stc
ds
pop
mov
pop
stos
icebp
pop
das
inc
in
mov
mov
push
idivb
dec
xchg
jg
adc
mov
xorb
dec
test
cmp
adcb
cmp
cmpsb
fsubr
fisttps
aam
xchg
cmp
cmp
pop
jl
aaa
xor
inc
int3
mov
jp
out
aad
mov
pop
test
adc
jo
rorb
add
mov
inc
arpl
bound
jno
pop
add
and
xchg
les
je
stos
cmp
adc
loopne
inc
int
push
in
in
cld
pop
lahf
sub
mulb
dec
into
push
jmp
pop
and
lds
mov
enter
push
and
out
daa
addr16
iret
shr
jnp
jge
fisttpll
mov
dec
lret
push
mov
dec
rcl
push
push
jae
push
sbb
mov
call
jmp
sarl
dec
xor
popf
push
arpl
add
repz
inc
mov
cmpsl
stc
push
xchg
out
adcb
xor
mov
repnz
out
mov
sbb
xchg
and
aas
sti
ss
pop
call
jno
pop
or
and
fisubrs
mov
xchg
popf
test
je
jp
sbbl
pinsrw
hlt
dec
scas
add
jmp
and
call
out
add
adc
dec
cmp
inc
fldl2e
fcmovb
adc
inc
pop
push
cmpsl
and
aaa
enter
vpslld
repz
xor
fdivrl
sarl
and
mov
std
fbstp
repz
sub
push
movsl
sub
jmp
out
adc
sbb
fnstsw
subb
sbb
loope
dec
cmp
ja
leave
inc
pushf
stos
loopne
scas
je
xchg
jb
and
cld
ficomps
pop
sub
rorb
dec
das
xor
outsl
mov
ds
xor
add
mov
push
insb
mov
clc
sbb
daa
lret
mov
cmp
mov
adc
loope
and
repz
into
or
mov
and
inc
mov
mov
sub
mov
clc
push
adc
sbb
lret
and
fwait
fwait
pop
int
push
mov
pop
push
popa
call
pop
sbb
sbb
fistps
add
and
pop
add
jns
gs
fldt
and
pop
stc
dec
rorl
imul
subl
rcrb
insb
pop
push
int3
daa
es
adc
push
mov
int
jae
push
xor
push
jle
ds
jmp
xchg
decb
xor
ljmp
cld
jns
mov
inc
cmp
or
mov
mov
or
pop
gs
stos
popa
repnz
push
mov
push
xchg
cs
and
stc
negl
cltd
sub
stc
push
movsb
mov
out
data16
enter
jmp
xchg
and
pop
jl
inc
pop
and
cmc
push
dec
lcall
mov
add
mov
sub
add
push
sbb
jae
jg
sbb
sub
cli
movsb
int
test
mov
imul
cmpb
lds
sub
mov
in
mov
mov
dec
es
popa
mov
jne
cwtl
push
pop
cmpsl
imul
xchg
lret
out
test
push
pushf
cmp
cwtl
xchg
mov
in
jl
call
in
outsl
mov
out
jle
sarb
dec
xchg
lds
stos
mov
sbb
or
sub
in
pop
lds
cltd
and
mov
and
pop
lea
mov
leave
hlt
sahf
imul
jne
insl
dec
inc
mov
pop
popa
add
sbb
push
or
push
out
je
or
aam
and
cmp
lea
push
push
lahf
xor
or
jae
cmp
imul
pop
data16
sub
int3
sub
lcall
cmp
dec
mov
mov
or
imulb
sbb
adc
push
cld
out
sbbb
orl
cltd
pushf
js
out
pop
sub
dec
sbb
push
inc
loop
or
aaa
clc
pop
rclb
bound
sub
mov
lds
inc
les
rcrl
pop
mov
shll
lods
dec
or
test
lods
or
fildl
mov
divb
imul
inc
cmp
jne
sarb
xchg
mov
out
bts
sbb
in
xchg
push
bound
cmp
push
fstl
ret
mov
js
lock
insb
ud1
lcall
sub
xor
push
lahf
xchg
mov
jb
je
mov
jns
cli
sarl
inc
jae
jb
pop
in
mov
mov
mov
xchg
fidivl
pusha
pushf
sub
ja
in
push
ffree
add
xchg
mov
xchg
mov
das
aas
call
add
jg
mov
fsubrl
jbe
mov
sbb
movsb
fsubrl
mov
pop
sarb
sti
insl
cmp
movsl
iret
inc
stos
mov
adc
arpl
xchg
rcrb
cli
xchg
shrl
nop
test
fstpt
inc
stos
das
lcall
aam
test
movsb
movsl
imul
lahf
push
gs
lret
loope
scas
mov
xlat
pop
in
in
clc
into
xor
pushl
push
je
jno
sarl
mov
mov
ja
stc
les
ja
ss
add
int3
popl
sarl
lea
and
mov
jmp
mov
loopne
bound
push
pushf
shrl
dec
inc
aas
dec
aad
pushl
jae
lret
pop
and
bound
mov
out
xor
add
repnz
xor
scas
fwait
and
adc
add
ja
icebp
inc
pop
and
imul
inc
pushf
mov
repz
dec
fiaddl
cld
js
in
xchg
mov
add
mov
push
sbb
inc
sub
loop
arpl
pushf
jle
shrl
movsb
adc
sub
addr16
in
loop
andl
inc
jle
add
popl
fbld
pop
mov
sbb
cli
outsb
cmp
icebp
lcall
sub
mov
pop
stos
ljmp
lret
jnp
enter
in
push
jae
lods
push
mov
pop
xor
add
jno
cmp
arpl
xchg
or
fidivrs
loop
sub
add
aaa
scas
leave
mov
jge
cli
jl
hlt
push
dec
dec
pop
push
mov
fldenv
inc
data16
mov
xor
add
inc
fadds
lret
movsb
mov
xchg
fistps
mov
mov
add
and
pop
push
inc
add
and
mov
or
mov
aad
loope
sub
lods
pop
cmp
out
test
cld
out
push
in
or
scas
lods
adc
xchg
xchg
pop
cltd
sbb
add
call
out
and
push
push
xchg
aam
addr16
push
xchg
mov
jne
ljmp
xor
inc
jl
mov
jl
cmp
or
in
cmp
popf
and
iret
enter
mov
xor
or
cmc
or
loope
les
or
bound
and
inc
ja
hlt
data16
sub
ret
sub
inc
setl
pop
rolb
bound
mov
loop
shlb
stos
and
sbb
xor
cwtl
test
sub
push
cmpsl
sbb
cmp
sbb
xchg
movsb
test
daa
adc
xchg
nop
and
cmc
mov
mov
sahf
mov
push
lcall
rcrl
outsb
roll
pop
xor
lcall
and
push
lret
dec
movsl
mov
xor
push
stos
rcr
push
leave
push
push
stos
ss
pop
push
inc
and
das
or
cltd
sahf
sbb
lahf
push
repz
mov
mov
inc
lods
push
nop
mov
fisttpl
arpl
xchg
xor
repz
push
sbb
pusha
xor
in
stos
push
lds
or
ret
stos
loope
sarl
push
add
cmc
orb
sbb
faddl
in
cmpsl
fnstenv
xchg
bound
xchg
xor
shlb
arpl
push
pop
popf
or
out
and
insl
mov
xorl
pop
sbb
data16
testl
push
inc
fimuls
cmp
jo
jo
mov
aas
in
sarb
xchg
int
loop
mov
sub
sub
pop
mov
test
jp
dec
inc
jno
xor
or
bound
repnz
lock
fildl
push
ret
clc
push
dec
hlt
jnp
clc
maxps
jns
in
sarb
cmp
mov
inc
dec
sbb
cmp
test
aas
sarl
inc
fs
push
xchg
mov
inc
test
outsl
lods
dec
push
jmp
repz
roll
xor
test
mov
sbb
repz
jne
lahf
xor
xor
pop
lock
mov
and
push
imul
outsb
sbb
mov
jne
mov
xor
jmp
lea
sahf
sbb
cmp
pop
or
pop
push
imul
add
pop
ss
ljmp
les
jecxz
add
dec
out
lret
cmp
fists
aam
or
ss
and
les
insb
jp
and
xchg
inc
sbb
cmpsl
mov
lret
pop
mov
mov
gs
out
outsb
pop
xchg
lods
addr16
mov
icebp
push
adcb
in
int
movsb
sbb
mov
enter
scas
mov
inc
sub
aam
mov
iret
or
push
add
bound
in
lea
adc
jno
je
dec
out
and
cmpsb
out
sbb
mov
dec
dec
sahf
mov
sub
inc
mov
pop
ljmp
add
mov
xchg
lret
in
push
jns
or
push
cli
fisttpl
mov
repz
xor
jg
fnstsw
shrb
xchg
jecxz
dec
fidivl
mov
mov
fbstp
adc
into
push
sbb
mov
adc
stos
push
sbb
das
pop
cmc
jb
jo
out
jo
and
dec
fnstenv
dec
jle
js
repnz
movsl
cltd
jmp
adc
loop
mov
adc
rclb
les
movsb
jno
mov
mov
pop
mov
sub
mov
cmp
mov
add
sti
rcrl
pop
cmp
in
mov
pusha
adc
int3
inc
xor
jbe
sub
outsb
adc
push
out
mov
xchg
dec
xlat
jbe
xchg
mov
jo
jbe
popf
insl
iret
mov
je
gs
gs
xor
gs
inc
fildl
int3
lods
stos
inc
push
lahf
xchg
or
cmp
ja
ret
mov
sti
ss
xor
frstor
cs
mov
aas
fsubr
xor
sbb
and
xchg
add
fildl
std
mov
sbb
test
cwtl
gs
test
xcrypt-ctr
cmpsl
fbstp
scas
aas
mov
fmuls
jae
lds
sbb
div
and
inc
adc
test
xor
inc
pop
lcall
or
hlt
or
push
or
sti
ss
sub
movsb
or
popl
fildll
mov
add
push
insl
adc
mov
cli
cmp
lahf
aaa
test
and
xor
xchg
insl
jp
scas
mov
aaa
ret
fsubp
sbbb
fcomi
clc
test
xor
enter
dec
xchg
xchg
into
int
add
mov
xchg
jg
pushf
in
cmp
sub
ss
xor
xor
fadd
je
lock
ror
dec
pop
in
add
negl
push
insb
es
jae
subl
xor
adc
and
shlb
pop
out
fildl
dec
dec
or
sbb
scas
mov
in
inc
fldt
jp
sti
mov
jns
jns
inc
lods
mov
cmc
outsb
call
inc
jno
fldl
xchg
push
in
dec
cmp
jne
xor
inc
std
enter
divb
leave
and
ficompl
mov
xor
or
inc
loop
fs
cmp
xchg
dec
sbb
out
cs
fwait
decl
mov
femms
xchg
jmp
sub
xor
inc
call
or
mov
mov
imul
sbb
mov
js
lret
dec
mov
push
xchg
or
jecxz
jecxz
roll
aas
out
lds
dec
insb
pop
jb
push
mov
scas
or
pop
lcall
mov
and
xchg
inc
cmp
sub
into
es
jp
pop
ss
lahf
adc
push
and
dec
roll
scas
ret
mov
daa
mov
push
fistpl
sarb
and
mov
push
or
add
mov
repz
int
lahf
dec
out
mov
dec
imul
xor
jl
cwtl
jecxz
stos
arpl
int
roll
stc
notb
cmp
pusha
cmp
stc
jge
sbb
xor
out
mov
mov
mov
or
jle
jmp
adc
pushf
in
aaa
or
mov
lea
cli
filds
cli
sub
mov
loopne
outsl
mov
int
out
lds
push
mov
pop
mov
cmp
addb
mov
mov
stos
xchg
mov
call
int3
mov
test
push
mov
imul
jb
adc
push
insl
incb
outsl
arpl
jae
cmpsl
imul
mov
jecxz
xchg
lret
add
mov
or
ja
push
push
insl
addb
xchg
dec
in
jo
daa
dec
mov
fs
dec
enter
add
fcoml
mov
ret
mov
out
push
sub
cmp
mov
jbe
lock
cltd
imul
popf
cmp
cmpsb
outsb
subb
test
or
lods
add
cmp
pop
dec
sbb
fstl
pop
xchg
xchg
cmp
dec
and
lea
ljmp
jbe
xchg
jo
addr16
mov
cmpsl
call
ss
jecxz
inc
ljmp
sbb
push
std
lock
jle
in
in
mov
cmp
add
or
mov
enter
mov
stc
ljmp
rclb
ljmp
push
xchg
lods
aaa
push
dec
sbbl
or
fisubl
mov
and
xor
cmp
xchg
mov
pop
mov
iret
dec
cmp
pop
insb
and
inc
push
aas
out
xchg
xchg
dec
hlt
pop
inc
test
xchg
cmp
and
icebp
shl
inc
mov
sbb
inc
cltd
std
or
arpl
mov
add
bound
test
mov
stc
jl
mov
test
mov
out
fstps
fnstcw
test
lcall
jg
push
jp
movsb
lahf
imul
sbb
rclb
and
push
xlat
sub
sbb
push
xor
cs
aaa
mov
cmp
mov
test
pop
out
jae
icebp
scas
cli
fidivrl
or
mov
push
sar
popf
nop
jbe
notb
fstp
mov
std
or
jo
cltd
mov
pushf
in
xor
hlt
dec
jae
pop
pop
inc
cs
lods
insl
int
push
and
mov
out
lock
leave
or
xchg
mov
xchg
add
push
dec
divl
dec
push
insl
inc
dec
push
lahf
test
aas
adc
push
mov
mov
out
into
scas
repnz
adc
dec
ja
inc
ljmp
cmp
mov
adc
cli
add
scas
test
cmp
mov
xchg
fdivp
adc
es
mov
mov
xchg
pop
sub
lods
jg
lds
dec
or
imul
jbe
pop
sub
adc
and
fstpt
adc
clc
icebp
mov
int3
jp
jle
fs
out
rolb
push
test
repz
ja
nop
jnp
mov
sbb
pusha
jo
jle
stos
dec
push
sub
mov
cld
hlt
mov
in
mov
or
sarb
jno
cmp
mov
imul
ret
dec
movsl
sbb
jmp
repz
xor
nop
cli
in
adc
ja
and
mov
jbe
fnstsw
dec
popa
jmp
lea
ss
aaa
out
fldt
fldcw
notb
mov
loop
sub
out
cmp
hlt
mov
xchg
test
sbb
push
and
das
out
aaa
cmpsb
dec
mov
pushf
mov
adc
addr16
shl
movsb
das
ds
jge
repz
test
test
dec
cld
mov
das
loop
add
faddl
sbb
dec
sub
fldcw
pop
mul
mov
cmp
push
inc
fs
cmpsl
out
js
pop
mov
cmpsb
or
xor
mov
ret
sbb
lret
sbb
inc
jmp
dec
xchg
mov
not
cld
adc
test
adc
movsl
dec
mov
sbb
xor
leave
push
in
or
and
mov
mov
leave
xchg
inc
pop
cwtl
lock
loope
mov
fstl
les
inc
inc
sar
pop
or
mov
jecxz
loopne
pop
sub
or
fnstenv
xchg
fnsave
or
xchg
scas
jno
jl
cmpsl
cmpl
sub
je
rorb
cmp
adcl
repnz
xchg
sbb
pop
enter
addr16
lcall
jl
lods
mov
and
mov
adc
cmp
push
dec
test
fsts
cmp
push
jge
fwait
mov
jmp
test
pop
adc
cltd
dec
fcomip
rolb
pop
or
mov
cwtl
adc
cmpl
jge
cmc
jae
push
dec
add
add
js
jl
push
dec
cmp
int
mov
fsubl
das
mov
push
cmp
enter
jg
fmull
ja
iret
jo
inc
outsb
ds
lock
sbb
loope
push
jb
add
clc
shlb
testb
mov
sub
stos
stos
jle
stos
mov
sub
ss
mov
inc
out
pop
scas
pusha
mov
popa
out
or
insb
jecxz
int
ret
jge
in
cmc
pusha
aas
sbb
mov
movl
xchg
ja
fwait
lock
jno
mov
ljmp
pop
sub
or
xlat
pusha
add
lods
jl
mov
cmc
sbb
std
push
jle
ds
popf
hlt
pop
jl
jp
jecxz
popf
shlb
push
jo
inc
and
std
aaa
mov
xor
and
pusha
mov
loopne
sub
adc
push
cli
jnp
sub
cmp
ret
insb
in
mov
sub
lcall
cmp
outsl
sbb
and
int
jg
push
and
lds
flds
les
hlt
add
imulb
pop
xor
ror
scas
lods
int
ss
or
push
inc
mov
sub
mov
sahf
mov
jl
mov
xchg
imul
mov
mov
sbb
xor
add
bound
add
jno
notl
lea
mov
daa
and
iret
add
lcall
out
sahf
push
add
add
jmp
or
inc
rcrb
pop
test
lds
roll
xchg
mov
popf
push
and
add
outsb
mov
mov
add
push
xchg
cld
mov
iret
jbe
jns
add
mov
insb
fs
add
sbb
inc
mov
mov
imul
fdiv
movsl
push
add
test
or
outsl
and
dec
or
movsl
jne
pop
xchg
xchg
jle
mov
repz
dec
xlat
inc
xor
sbb
popa
icebp
pusha
sarl
imul
inc
cmp
push
in
into
xchg
xchg
in
mov
pop
sub
fldcw
lret
sbb
and
fidivl
ret
push
adc
hlt
rcll
pop
das
aam
sbb
mov
mov
cmp
fstps
aad
sub
push
mov
cmc
cmpsl
ds
lods
aad
icebp
out
jne
cltd
sbbl
dec
js
pop
je
lret
scas
stc
arpl
leave
into
popa
and
add
pop
loopne
sub
addr16
in
lret
imul
dec
pop
loope
leave
fdivrl
mov
imul
adc
js
mov
jnp
fbstp
jg
mov
jns
mov
js
ja
mov
pop
std
imul
mov
and
sbb
mov
leave
pop
xlat
dec
fs
pop
dec
inc
jle
dec
sbb
insb
daa
xchg
sbb
mov
clc
mov
pop
je
shlb
loope
inc
test
imul
xchg
arpl
stc
loop
and
dec
scas
dec
notb
hlt
dec
iret
push
std
popf
or
cmp
rcr
sbb
faddl
xchg
push
mov
xchg
and
jl
insb
adc
je
sub
fs
aas
dec
scas
cwtl
fiadds
or
xchg
dec
movsl
lcall
lcall
sbb
inc
xor
out
add
subl
cmp
and
sbb
mov
sysenter
aam
cld
shll
in
xchg
cmc
push
push
fidivrl
loop
push
mov
push
lods
xor
loope
sarl
fcmovnbe
dec
addr16
xor
bound
stos
add
sbb
loope
sahf
nop
or
pop
jg
les
mov
jecxz
adc
out
lock
pop
clc
or
or
pop
in
aaa
dec
jbe
in
sbb
xorl
rcll
adcb
and
loopne
xor
enter
mov
stos
cmp
jecxz
int3
clc
push
jl
jg
inc
adc
fiaddl
inc
or
pop
xchg
int3
repz
fnstcw
fsubl
rorb
adc
das
cmp
vmovd
mov
leave
jp
stos
cmpb
xor
aas
jb
icebp
cmp
jnp
outsb
daa
cwtl
cmpsb
fidivrs
shl
dec
and
mov
fcomp
and
lea
out
sub
adc
push
outsb
jmp
dec
xlat
in
sub
cwtl
mov
test
outsb
xor
mov
inc
adc
cmpsl
or
ds
std
shlb
jmp
gs
mov
into
inc
jnp
out
out
adc
iret
test
sub
out
scas
jbe
hlt
add
rcll
xor
mov
daa
repnz
inc
add
cmp
je
fdivl
inc
xlat
cmpsb
cwtl
xchg
movb
xor
xchg
bound
fdivr
mulb
in
pop
inc
std
push
ljmp
xor
pop
outsb
cmp
inc
test
mov
push
pop
xor
jne
dec
scas
mov
add
cmp
or
sub
repnz
rorl
push
ss
sub
mov
dec
dec
mov
jle
push
in
xchg
xchg
add
cmp
bound
ja
insl
pop
pop
sbb
or
imul
movsb
in
sahf
lret
loop
cmp
or
insl
mov
xchg
out
or
mov
pop
xchg
insl
scas
shrb
xchg
cmpsb
dec
mov
adc
pushf
add
jo
xchg
mov
test
add
fstpt
adc
pop
in
cmpsb
or
fcoms
jmp
jo
sbb
add
cltd
pop
cmp
jl
mov
scas
lret
ds
xchg
mov
push
fwait
add
pop
insb
sub
inc
pop
inc
insb
scas
arpl
fcoml
je
std
sbb
subb
mov
push
data16
gs
outsl
imul
popf
mov
into
pop
and
lea
jne
jb
push
pusha
clc
and
dec
outsb
sub
in
mov
sarl
les
adc
cs
ja
lahf
lods
dec
jae
scas
ret
mov
jmp
fmuls
dec
bnd
dec
enter
jae
push
jge
push
xor
loopne
inc
gs
mov
test
insl
or
lea
andl
add
mov
dec
or
pushf
jno
sti
data16
push
in
and
xchg
lret
push
std
and
mov
dec
lret
test
or
movb
push
add
xlat
mulb
repz
aaa
js
mov
push
inc
xchg
jbe
shll
sub
jg
lret
in
adc
ds
outsb
or
repz
mov
lock
and
fldl
nop
xchg
push
aam
push
fidivs
imul
out
mov
in
adc
mov
pop
dec
mov
lcall
shlb
ja
adc
jo
push
cli
rclb
mov
push
xchg
xchg
mov
push
test
mov
mov
pop
rclb
loope
shll
adc
sub
dec
sub
fucomp
mov
push
pop
push
mov
add
and
push
mov
lods
test
sbb
test
pop
lock
je
ljmp
jecxz
fwait
push
out
sbb
lock
xor
je
push
ja
inc
xchg
add
sbb
mov
add
movsb
fisttpl
loopne
stos
jl
push
push
sub
cmpsb
rcrb
add
inc
cmc
mov
out
mov
mov
dec
mov
xchg
sbb
pop
mov
cld
xor
adc
sarl
xchg
dec
inc
mov
cmp
sbb
fs
mov
jmp
adc
fists
mov
ret
jmp
mov
pop
popf
mov
push
mov
or
cmp
xor
mov
pop
xlat
push
cmc
test
imul
divl
sub
in
popf
lds
push
dec
pop
mov
sub
filds
push
test
jle
and
das
inc
test
addr16
test
or
dec
and
or
dec
jmp
xchg
mov
jnp
inc
shl
roll
lea
cld
fistpll
dec
pushf
shlb
movsb
mov
push
and
and
int3
sub
stos
scas
movsb
cltd
fwait
adc
mov
fs
xchg
push
add
mov
add
dec
add
xchg
std
and
push
lret
cld
xor
jge
adc
in
je
xor
daa
in
lret
mov
xchg
imul
adc
ffree
icebp
daa
mov
daa
mov
pushf
mov
adc
rorb
sub
jecxz
int3
orb
out
adc
pop
dec
xchg
mov
xchg
popf
test
addr16
push
add
or
enter
add
push
nop
cmp
test
push
mov
sub
push
mov
pop
pop
xor
pop
cld
call
js
or
mov
inc
pop
lret
dec
scas
lret
loop
dec
call
jle
cmpl
hlt
scas
cwtl
ds
or
sub
std
sub
xorb
aad
sub
pop
fdivl
in
or
pushf
sti
cmc
xchg
mov
shll
and
je
xchg
adc
cld
mov
stos
jmp
cmp
sbb
imul
imul
add
jle
gs
lahf
gs
fwait
roll
in
dec
sub
cmp
jge
mov
fsubrs
jl
movsb
sbb
and
aad
loopne
mov
fistl
inc
sar
and
add
pop
outsb
test
jnp
xchg
sbb
sbb
sbb
pop
aaa
cmp
outsb
xor
in
stos
cmp
jns
loope
sbb
cli
dec
jmp
push
rorl
adc
and
cmp
ja
ss
orl
sbb
xchg
fwait
les
sahf
into
sahf
xchg
jl
pop
xor
and
mov
xor
repz
xchg
jo
fldl
pop
push
out
mov
push
test
adc
mov
int
repnz
dec
icebp
icebp
shll
add
test
pop
das
jmp
not
push
jmp
out
fidivrl
test
inc
rcrl
repz
imul
imul
repnz
lahf
jmp
es
inc
xchg
jo
in
mov
pop
dec
push
roll
aam
pop
mov
scas
sahf
mov
es
lcall
pop
stos
arpl
inc
jmp
cmpsb
repnz
pop
out
repz
int3
push
mov
inc
xor
outsb
cli
and
dec
movsw
and
jno
cmp
pop
mov
test
mov
dec
pop
add
pop
jns
dec
mov
cli
xorb
cmp
inc
xor
cmp
mov
jl
movsl
pop
sbb
aam
iret
ss
je
inc
jae
mov
or
xor
inc
xchg
nop
filds
mov
clc
lahf
jle
in
addb
jl
ret
pop
add
cmp
push
in
xor
inc
fcoml
pusha
xchg
cs
loope
ret
xor
sub
sub
mov
lods
call
dec
leave
pop
xor
or
cmp
lock
or
adc
sbb
loopne
mov
in
lea
cmp
push
mov
aaa
sub
aas
or
xchg
lahf
adc
iret
lret
jb
mov
daa
jb
mov
push
cmpsl
jb
jne
adc
jns
ja
inc
mov
movsl
test
add
dec
dec
inc
es
push
jmp
xor
push
cwtl
pop
and
rclb
stc
add
xor
xchg
add
jl
gs
cmp
pop
cmp
mov
dec
fiaddl
sbb
fcomip
adc
xor
repz
inc
fildl
lcall
cwtl
imul
xor
mov
lods
add
paddusb
mov
jle
dec
sbbb
jo
pop
mov
stc
das
cs
ljmp
mov
push
push
addr16
ret
in
xor
jecxz
repnz
ja
add
incb
scas
add
dec
hlt
push
nop
dec
jge
inc
mov
leave
sahf
ds
ljmp
and
cld
dec
mov
mov
iret
scas
cmp
out
loop
xchg
lds
popf
mov
add
shlb
pop
in
test
mov
push
jb
pop
negl
add
pop
and
xchg
mov
loopne
lret
push
mov
subb
int
outsl
stc
je
imul
mov
int
and
int3
jecxz
fdiv
mov
jle
pop
lock
iret
stos
jge
in
add
fildll
les
jb
sbb
mov
cmp
cwtl
mov
jo
movsb
inc
fisubrl
jmp
or
inc
cmp
rcrb
inc
sti
or
loop
mov
aaa
int3
je
jbe
mov
push
dec
lret
loope
call
adc
push
xor
cltd
arpl
push
sbb
cmpl
sbb
daa
js
jmp
xchg
cmpsb
cmp
push
ret
sub
lret
push
push
jge
push
sub
arpl
push
arpl
test
adc
daa
in
test
das
inc
jecxz
and
sbbb
push
pop
mov
movsb
xor
mov
mov
cmp
xor
cmpsb
cmc
add
push
sbb
mov
pop
add
imul
test
pushf
lods
pop
in
shll
dec
mov
cld
or
mov
dec
rcrb
xchg
jl
cld
fdivrs
insl
push
jecxz
iret
ret
pop
or
xchg
hlt
pop
lcall
mov
dec
xor
cmp
pop
push
cwtl
cmp
cmc
add
gs
pop
jno
mov
jg
sbb
cmp
pop
rclb
bound
lret
jecxz
pop
lds
or
shrb
lds
adc
pop
jge
pop
repnz
addr16
int
out
cltd
xchg
jle
mov
nop
out
jns
cwtl
cmp
and
out
push
cmp
xchg
xchg
or
or
cmp
sub
fwait
popf
sahf
lods
jge
lret
adc
add
inc
daa
mov
repnz
mov
aaa
cltd
aam
arpl
xlat
iret
movsb
jb
xchg
mov
and
inc
imul
ret
outsb
daa
pop
insb
int
das
arpl
enter
lock
clc
push
pop
call
mulb
mov
stc
push
and
jle
or
cmpsb
andps
dec
loopne
pop
or
dec
push
push
cmp
cmp
mov
sbb
in
jns
xchg
lods
or
mov
and
or
data16
out
jmp
subl
and
scas
sub
addb
insb
leave
repnz
cmp
mov
lock
fisttpl
dec
bnd
mov
inc
out
stc
cmpsl
push
mov
repz
jae
add
jno
clc
pusha
cmpsb
jle
bound
pop
daa
popf
jecxz
out
cmp
lock
cltd
imull
push
push
cmp
shll
insl
outsl
in
jo
mov
mov
sbb
sbb
mov
les
in
push
adc
movsl
in
push
xchg
sbb
mov
dec
or
mov
mov
in
nop
xchg
mov
sub
data16
pop
mov
out
adc
enter
scas
add
mov
leave
jno
aad
cmp
roll
inc
mov
jns
aas
sbb
mov
out
shl
mov
loope
pop
in
ss
fsubl
inc
xchg
shl
jge
pushf
jnp
int3
and
mov
pusha
mov
cmpb
imul
cld
negb
inc
nop
mov
addl
xchg
sub
fcomi
mov
sarb
xor
cmpsl
pop
xorps
mov
test
imulb
mov
cwtl
les
mov
pop
repnz
jmp
jne
inc
inc
in
jmp
stc
mov
dec
xchg
or
sub
aaa
dec
ljmp
dec
adc
std
xor
add
cltd
cmc
ljmp
pusha
insl
sub
jl
mov
inc
xlat
or
nop
aaa
push
shll
and
nop
mov
push
lods
iret
ret
jp
mov
movsl
pop
lahf
jg
fsubrs
cmp
mov
aas
ja
cmp
cwtl
cwtl
ja
test
sbb
je
scas
cmpsl
inc
lcall
add
test
call
icebp
addr16
mov
xor
out
cmc
jnp
inc
lcall
xor
data16
pusha
jb
and
pop
out
mov
cmp
inc
and
les
cmpsb
cltd
dec
adc
popa
sbb
int3
jnp
push
dec
push
sbb
xchg
mov
cmp
push
rorb
and
cs
sbb
clc
shll
sub
imul
jb
and
inc
adc
pop
roll
jge
jle
pusha
mov
mov
adc
mov
fsubl
sub
xchg
aad
call
mov
adc
adc
jmp
xor
mov
pop
mov
jno
xor
or
in
and
movsl
jge
sub
fdivs
arpl
mov
fs
lock
cmp
mov
mov
push
mov
out
jmp
cmp
add
mov
out
aaa
fwait
dec
test
mov
mov
jno
mov
inc
push
dec
jge
std
out
ret
inc
mov
movsb
push
jo
clc
cmp
in
xchg
mov
scas
xchg
in
and
loope
xor
pop
icebp
adc
xor
push
jl
inc
adc
xor
xchg
loope
sbb
hlt
aam
lret
ret
adc
int
in
in
pop
imul
adc
lahf
mov
pop
sub
std
stc
lcall
xor
fwait
inc
sbb
mov
xchg
test
stos
mov
push
xor
adc
dec
insl
add
sub
ret
adc
ret
mov
dec
xor
cmp
dec
in
xchg
int
stos
sbb
das
pop
clc
pop
xchg
insb
inc
test
lock
repnz
jno
daa
stos
mov
mov
jp
test
enter
stc
sub
or
arpl
jmp
push
xchg
jnp
cli
push
lock
jne
loop
adc
fisubs
jmp
test
dec
sbb
push
mov
je
sub
fstpl
mov
mov
mov
pushl
mov
sub
add
enter
inc
sub
mov
push
push
decb
subb
sar
aaa
cmp
cmp
scas
jo
dec
outsb
and
xchg
inc
xlat
push
or
xchg
fisubrs
lcall
cs
stos
jnp
sahf
das
stos
adc
mov
push
add
lods
imul
shlb
ss
adc
lret
xchg
and
sub
mov
cmpsl
jo
lcall
cmpsb
sub
fisubrl
pop
jo
add
pop
bound
repz
inc
leave
mov
jno
add
xchg
xchg
daa
adc
addps
aaa
out
or
push
jns
push
push
jbe
pop
sbb
icebp
pop
push
and
xchg
and
xor
ljmp
jp
test
icebp
lahf
dec
imul
push
mov
push
clc
pop
mov
test
mov
rol
lods
mov
loopne
pop
lock
mov
mov
je
mov
dec
gs
movsl
push
loopne
mov
xor
mov
lahf
push
cmp
and
push
xchg
das
mov
mov
js
inc
mov
in
in
mov
repz
js
jmp
subb
fwait
outsb
mov
testb
xorl
ret
imul
fiadds
push
rcrl
loop
mov
jne
jne
iret
adc
aaa
fldl
jmp
xchg
test
ljmp
sahf
inc
or
mov
mov
in
jb
lods
pop
stc
push
fsubp
daa
xchg
repz
jo
mov
bnd
or
jmp
xor
iret
dec
iret
dec
mov
icebp
stos
mull
shlb
cltd
scas
out
unpcklps
std
xchg
sbb
jg
cld
add
lcall
lcall
andb
inc
in
jp
cli
repz
roll
pop
push
ret
lahf
popa
pop
into
imul
pusha
xor
lcall
fists
xlat
lods
fistpll
jb
pop
push
lret
xchg
and
loop
out
jno
xor
repnz
aad
pop
or
sbb
insl
test
inc
or
fldt
jne
or
mov
addr16
inc
and
fstp
dec
xor
mov
les
in
sbb
mov
mov
pop
cwtl
mov
loope
in
fwait
cmpsw
out
jo
outsl
test
andl
push
je
aad
data16
stos
adc
dec
and
add
lret
xchg
loop
and
fstpl
testb
mov
iret
mov
pushf
jo
lahf
adc
rcrb
ret
mov
aaa
add
out
jmp
mov
nop
cmp
insl
outsl
and
mov
xchg
mov
or
repnz
jmp
adc
sub
sbbb
neg
jb
rcl
xchg
cmpsl
xor
pushf
mov
jo
icebp
bnd
rorb
daa
dec
fnstsw
lea
pop
rcll
add
aas
icebp
nop
mov
aaa
ret
scas
xor
sub
ljmp
lds
jge
test
in
mov
cmp
outsl
sub
pop
cmp
push
ljmp
aad
mov
cltd
inc
sub
push
or
mov
jbe
push
mov
mov
xchg
lret
pop
mov
test
jp
fs
mov
pop
add
mov
xchg
jnp
pop
xchg
pusha
nop
test
cmp
jnp
adc
mov
adc
push
add
inc
mov
mov
add
sbb
imul
mov
dec
cld
in
jl
xchg
lret
adc
push
pop
dec
dec
es
jp
inc
mov
dec
or
lret
js
mov
movsl
repnz
dec
sbb
out
lea
mov
js
movl
imulb
fsubrs
xchg
in
sub
and
add
mov
out
daa
rcr
in
int3
notl
mov
fwait
scas
pop
xchg
pop
cmpsl
mov
mov
xchg
pop
jo
test
mov
pop
sbb
imul
je
div
cmp
jnp
je
xor
and
fisttpl
fldl
test
sub
addb
jno
stc
jb
scas
add
mov
inc
orb
xchg
jno
aam
mov
std
adc
movsb
mov
movb
ss
popf
es
jmp
dec
imul
lahf
out
in
lret
divb
in
and
daa
cli
data16
adc
mov
xor
test
xchg
pop
adc
nop
dec
jnp
jl
mov
cmc
mov
movsb
lods
pop
scas
jg
cmp
inc
cli
jecxz
frstor
push
mov
add
pop
out
mov
out
xor
leave
xchg
movsb
adc
add
data16
and
mov
testb
dec
shrb
inc
jmp
or
sub
add
aad
mov
dec
outsb
mov
mov
lea
jo
push
shlb
fisttpll
sub
pop
cmpsl
xchg
out
jb
mov
cmpsl
mov
popa
js
push
jbe
push
mov
test
repz
dec
data16
insb
adc
pop
mov
int
xor
dec
loop
cli
mov
jecxz
adc
jmp
mov
push
cmp
aas
dec
outsl
loopne
cmc
xor
mov
push
int
call
add
adc
mov
lret
cs
jmp
cmp
test
xchg
int
and
mov
insb
xchg
in
xchg
pop
xlat
push
arpl
into
sbb
sahf
outsb
lock
ret
scas
or
jbe
inc
shlb
fcomip
dec
out
leave
repz
and
test
push
mov
sub
pop
jbe
xor
lods
hlt
adc
mov
gs
sub
push
lea
imul
pop
sbb
andl
dec
int
test
cmp
je
aad
cmp
fisttps
xor
push
jns
fcoms
and
int
xor
ja
hlt
clc
pop
es
lcall
movsb
out
and
pop
jp
jge
es
test
inc
rorb
jo
sbb
jl
mov
jl
cmp
cwtl
mov
ficompl
fcom
adc
pop
jns
xlat
xchg
jns
jne
std
std
or
sub
lcall
jae
add
mov
mov
int
xchg
mov
xchg
add
push
fisubl
and
jb
dec
cmp
mul
popa
push
and
cmp
sub
push
jmp
inc
insb
push
sub
insl
pop
dec
das
fists
movsl
xor
push
call
mov
cmpb
icebp
or
pop
push
ds
add
mov
sbb
inc
pop
push
lea
xchg
lods
and
inc
jl
jb
jmp
fbstp
mov
mov
push
daa
mov
mov
imul
cmovne
push
push
xchg
das
jnp
fstpl
xor
xchg
movsl
out
sbb
repz
adc
xor
aad
dec
sarb
and
mov
pop
mov
pop
or
sub
dec
iret
adc
mov
mov
cs
ret
add
sbb
out
adc
and
daa
imull
aas
out
enter
push
jecxz
push
cmp
xor
sub
lea
cmp
and
test
dec
cmpb
cwtl
jns
jbe
add
jmp
adc
xchg
push
sti
sub
rol
mov
lahf
es
not
mov
xor
pop
jb
fimuls
incl
mov
xchg
xchg
sbb
loope
stc
aas
and
test
push
lret
sub
mov
jg
jae
aad
inc
dec
push
jbe
xchg
andb
and
pusha
sbb
and
pusha
ljmp
cltd
int3
faddp
lea
sbb
add
fbld
sub
jb
test
lock
and
xchg
add
clts
stos
and
jb
and
xor
mov
int
lret
daa
sub
ret
pop
hlt
jno
xchg
dec
mov
cli
pop
popf
fldenv
lret
mov
std
pop
clc
fnstsw
pop
lcall
inc
mov
mov
cmp
dec
inc
call
in
mov
ret
add
sub
insb
xchg
jg
push
cmp
shll
sbb
cltd
les
test
cltd
mov
inc
xor
push
cs
hlt
test
fs
jbe
stc
lcall
cmp
xchg
adcl
dec
jae
sti
inc
fnsetpm(287
in
ljmp
mov
adc
lock
sbb
inc
rol
sub
test
pop
inc
push
imul
mov
adc
add
dec
dec
jmp
outsl
mov
test
sub
lcall
arpl
and
jle
gs
rorl
subl
push
aad
mov
sti
mov
movl
in
mov
rcr
add
cmp
mov
test
pop
jne
xor
mov
mov
out
jo
mov
inc
inc
dec
jne
scas
icebp
inc
mov
movsl
bound
repz
dec
mov
ja
sub
or
jbe
je
testb
test
mov
punpcklbw
in
pop
testb
cs
mov
cmp
lahf
imul
mov
xor
push
testb
js
lahf
and
push
sbb
jo
cmp
addr16
or
rolb
and
clc
sbbb
sbb
adc
jge
jmp
fisttpll
add
xchg
push
arpl
adc
adc
lods
int3
push
fsubs
pop
mov
xor
loopne
sub
xor
out
dec
push
jmp
pop
jo
sar
addl
adcl
into
insb
sahf
repnz
mov
mov
add
stc
scas
mov
cmp
push
stos
mov
mov
popf
lcall
lds
or
pop
sub
sub
lds
ja
mov
dec
iret
pop
dec
jecxz
sbb
daa
mov
mov
xor
roll
jbe
leave
out
xchg
outsl
stos
sbb
aas
mov
out
xor
insb
lods
sarl
fcmovnb
pop
cmp
mov
ja
adc
bound
cs
dec
mov
sbb
inc
fisubrs
mov
ja
cmp
dec
push
je
sub
fmull
pop
insb
popa
push
stos
adc
stos
mov
and
mov
mov
shl
push
push
movntps
mov
mov
lea
fwait
mov
mov
fsubr
sub
jle
enter
sete
lds
les
jo
sarl
lods
daa
cwtl
ljmp
stos
add
cmc
test
lret
sub
mov
test
adc
in
adc
or
pop
rorl
dec
popa
mov
and
push
dec
sub
repnz
mov
mull
push
iret
push
add
jge
and
clc
aas
test
je
cmp
in
in
out
movsl
lret
iret
in
pop
test
add
pusha
test
fmull
pop
iret
mov
dec
dec
mov
gs
add
or
fstpl
push
adc
loope
bound
mov
jl
lea
xor
sub
add
ds
int3
fs
and
inc
testb
pop
pop
imul
aad
in
imul
and
outsb
pop
add
gs
sbb
sub
adcb
cmc
nop
push
in
dec
jo
loopne
icebp
cmpb
pop
push
arpl
push
shlb
pop
pop
or
orb
jmp
jae
xchg
loopne
xor
das
std
xchg
lahf
xor
data16
mov
xchg
and
fnstsw
pop
or
push
mov
icebp
pop
fsub
dec
roll
mov
jne
xchg
repnz
test
jb
or
mov
in
andl
dec
cmp
movsl
adc
and
xchg
fmull
sbbl
or
add
xchg
sahf
adc
dec
xchg
xor
sbb
jl
and
movsb
push
jle
sbb
dec
test
adc
mov
cltd
cmp
mov
dec
dec
test
je
mov
cmp
push
mov
jecxz
das
and
mov
ljmp
push
data16
jae
enter
into
jle
cmp
mov
mov
sub
aas
lahf
inc
aas
jbe
cs
add
cmp
push
in
jno
js
mov
inc
jmp
insb
push
call
subb
mov
fwait
sbb
xchg
push
push
and
mov
cli
add
out
mov
xlat
mov
or
mov
shll
mov
push
dec
fxch
fwait
cmpsl
xchg
leave
lret
xchg
add
aam
bnd
push
int
fsubrs
popa
mov
icebp
jge
in
mov
dec
pop
or
stos
jae
mov
bound
mov
lea
push
sahf
jge
mov
xchg
cmpsl
pop
mov
add
clc
aaa
mov
out
ret
dec
push
sub
mov
mov
iret
mov
je
mov
arpl
cmpsl
adc
add
int3
jle
and
sub
ret
shll
orb
rcll
rcrb
test
jg
pop
pop
aam
std
xchg
mov
mov
scas
pop
shl
mov
loopne
and
cltd
mov
popf
push
daa
mov
fs
aas
or
inc
push
or
hlt
bound
ja
lret
sub
jmp
mov
jo
testl
mov
ret
xor
andl
test
push
lahf
mov
push
fwait
js
cmp
dec
mov
lea
inc
mov
and
in
cmp
mov
js
xor
pop
add
js
out
lret
mov
push
cmp
mov
fwait
push
fistps
fcmovbe
add
or
rol
and
xchg
aas
sbb
dec
mov
test
dec
jg
mov
inc
add
ljmp
push
fcomi
sahf
mov
xlat
cmpsb
pushf
push
push
xchg
repnz
aam
ja
aad
pop
in
lds
pop
fldenv
outsb
icebp
cmp
bound
push
cmc
jge
xchg
daa
sti
or
adc
mov
jp
test
imul
jb
or
popf
leave
mov
mov
sbb
addl
jge
inc
sbb
xor
lcall
rcr
in
incb
scas
shlb
dec
inc
outsb
mov
jnp
xchg
sbb
sahf
sbbb
dec
in
dec
in
lds
pop
rorb
inc
out
cmp
lret
mov
imul
add
sbb
xchg
out
push
out
push
das
fsub
idivb
xchg
cmc
cmpsl
es
inc
mov
add
jecxz
adc
es
fwait
xchg
mov
shl
inc
in
stc
jae
add
inc
cmpsl
jbe
push
ret
imul
mov
ja
outsb
and
push
or
scas
sub
dec
dec
cmpsl
sbb
sub
push
cmpsl
xchg
sbb
xor
sub
in
rcrl
adc
mov
push
sub
insl
pushf
mov
leave
and
lcall
shrl
orl
or
sarb
dec
ss
cmp
mov
push
xchg
lea
push
xchg
addr16
fistps
pop
xchg
mov
into
or
or
pop
clc
mov
dec
cmp
stos
ret
jae
mov
das
jmp
imul
imul
xchg
xlat
adc
or
imul
cltd
mov
wbinvd
mov
jno
stc
inc
loop
insb
mov
adc
xchg
mov
jne
js
and
outsb
loopne
out
jbe
stos
idivl
jae
je
rcll
jne
arpl
nop
in
xor
dec
scas
mov
jg
dec
cwtl
mov
dec
xchg
mov
sub
adc
popa
mov
inc
push
cmp
shll
mov
lret
sti
dec
ds
xor
xchg
mov
xor
in
push
arpl
int3
pop
push
mov
xchg
and
cwtl
lock
nop
fdiv
push
push
mov
test
fldenv
lds
mov
mov
mov
ja
shlb
orb
lds
mov
xchg
cld
push
mov
inc
mov
mov
pop
sub
cmp
out
jl
aaa
stos
pop
pop
pop
cmpsb
and
out
cli
dec
jns
in
inc
movsl
dec
pop
ds
imul
dec
sbb
cmp
data16
or
jmp
cltd
push
xchg
sarl
mov
adc
or
popf
sahf
test
mov
pop
aam
cltd
mov
aas
popf
out
hlt
lds
es
ja
sub
into
dec
imull
or
mull
mov
xor
and
test
jecxz
hlt
cmp
in
adc
jmp
push
xor
pop
jecxz
imul
push
aam
pop
shrb
adc
fmuls
push
icebp
dec
ss
mov
xchg
xchg
outsb
add
shll
aam
out
sub
mov
xchg
out
or
mov
ret
dec
lds
add
add
repz
mov
rdmsr
ja
ds
gs
cld
xchg
mov
fnsave
out
test
inc
mov
mov
mov
adc
fsts
or
fsubrs
xchg
jae
xchg
mov
shrd
mov
cltd
mov
mov
inc
loopne
nop
sub
inc
mov
jbe
cltd
ret
mov
sbb
sbb
inc
inc
mov
jmp
sbb
out
push
pop
arpl
or
repnz
das
sub
xchg
jbe
ds
inc
aam
mov
mov
sbbb
inc
imul
mov
out
out
lock
test
aam
ret
sbbw
mov
push
popa
call
rol
sahf
and
aad
data16
pop
mov
ucomiss
or
jno
mov
fists
ret
pop
or
rclb
mov
xchg
sub
push
jle
pusha
mov
fiadds
std
jne
xchg
xchg
cmp
outsl
lock
in
out
stos
popf
push
out
jmpw
arpl
mov
adc
jnp
xor
faddp
mov
in
outsl
jb
shll
ret
xchg
mov
lds
addb
inc
aaa
push
and
mov
xor
out
fldl
in
rolb
je
ret
cmp
jmp
das
mov
js
scas
test
and
pop
js
mov
push
ss
push
out
mov
sub
jb
add
xor
sarb
clc
mov
inc
nop
mov
inc
aad
xchg
xchg
jae
pop
sub
push
inc
jb
les
addr16
mov
and
imul
scas
test
ficomps
push
pop
mov
pusha
jnp
pop
add
mov
faddp
adcl
jg
jmp
pop
fwait
dec
pop
mov
jl
mov
xchg
sbb
dec
xchg
mov
cmp
fdiv
pop
rcrl
pop
nop
xor
adc
jnp
push
mov
fistps
dec
push
out
bound
test
das
mov
dec
inc
jno
mov
jae
das
push
lcall
dec
push
inc
sbb
cmp
mov
pop
jecxz
mov
mov
xor
cmc
cltd
cmp
xor
adc
ljmp
push
in
loope
sarb
call
push
call
sub
or
xor
lret
lock
xchg
sbb
nop
lds
cmp
sti
jge
jmp
push
nop
cwtl
stos
out
mov
or
popa
fdecstp
leave
ret
test
pop
into
mov
daa
testb
cmp
sub
ret
int3
jo
lahf
inc
js
xchg
and
pop
cmpsb
sub
aas
mov
out
lock
insl
test
add
ds
into
sahf
mov
in
movsl
movsl
add
dec
cltd
dec
xlat
mov
xchg
scas
jns
xchg
jnp
scas
adc
push
cli
push
adc
dec
xlat
adc
adc
stc
daa
out
mov
shlb
ss
or
mov
and
cmpsb
cs
jle
and
xchg
mov
outsl
dec
fs
mov
rcr
jmp
lock
movsl
mov
int3
mov
xchg
ret
repnz
mov
out
or
add
xlat
movsb
clc
and
lahf
adc
jecxz
mov
cltd
rolb
sbb
adc
and
push
mov
sub
inc
popa
mov
mov
daa
mov
jne
push
popf
pushl
or
cli
or
lods
xor
rol
adcb
sub
inc
jb
or
add
add
push
cmp
push
outsb
push
dec
push
fdivrl
hlt
scas
xchg
and
call
inc
pop
jne
sbb
inc
lea
xchg
xchg
mov
or
pop
fidivs
pop
loope
std
aad
gs
push
dec
sbb
sbb
inc
stos
lcall
mov
mov
sub
push
scas
xlat
cmc
ret
cwtl
pop
lods
or
push
or
pop
push
fsubrs
add
call
lock
xor
outsl
jbe
movsb
inc
sub
xor
mov
hlt
ficomps
sbb
dec
add
mov
pop
pop
push
mov
inc
jge
dec
shll
xchg
mov
stc
lock
adc
out
aam
or
sbb
in
jb
mov
and
mov
std
adc
mov
into
xor
inc
sahf
fs
push
pop
aam
or
jo
sbb
bound
in
insb
fldcw
popa
push
sub
dec
mov
cmp
int3
mov
jo
cmp
out
aam
insb
xlat
loope
jbe
jg
loope
push
push
push
sub
inc
sarb
xor
pop
iret
lods
jo
inc
and
mov
out
repz
push
jbe
adc
sub
jge
push
or
dec
in
std
stos
lcall
sbbl
lea
fimull
fdivs
mov
xor
and
jo
cmp
add
movsb
iret
aad
mov
sbb
pop
and
popa
lods
xchg
sbbl
repz
jecxz
xor
pop
xchg
stos
stos
test
mov
mov
mov
mov
xor
mov
lea
sub
test
mov
popa
sbb
push
fsubp
inc
jecxz
and
fld
add
xchg
fimull
cmpsb
pop
rorl
pop
rcr
dec
and
and
nop
stos
adcb
movsl
int3
xchg
mov
mov
add
cmpsl
cmp
enter
jne
mov
push
divl
mov
and
add
inc
jg
cmpl
sahf
push
nop
add
mov
sbb
xlat
arpl
testb
adc
and
addr16
mov
sbb
in
xor
mov
jnp
cmpb
mov
adc
in
enter
add
inc
or
push
and
and
inc
and
int
lcall
or
inc
xor
movsl
xor
dec
dec
sub
inc
nop
push
jl
enter
push
adc
pop
push
minps
hlt
scas
sub
jnp
dec
fdivrl
jg
cmc
cli
mov
and
movsb
pop
nop
push
imul
pusha
pop
ja
xchg
mov
jno
pop
arpl
cmp
push
xlat
loop
adc
mov
sbb
test
imul
push
dec
xchg
jo
push
ficoms
aam
mov
mov
sbb
aad
test
loop
lods
outsl
out
jns
aas
and
int
add
dec
rorb
mov
mov
and
pusha
jle
lret
lock
fsubrl
push
jg
pop
in
dec
xchg
cs
mov
into
addl
or
mov
pop
fnstsw
add
pop
cli
leave
sbb
jecxz
push
cmp
push
ds
rorb
ja
sub
ds
test
mov
fcoms
jns
pushf
shlb
inc
popf
outsl
push
add
mov
inc
addr16
xor
fsubrs
mov
sub
out
pop
mov
std
dec
sbbl
testl
xor
mov
jge
out
out
cmp
sahf
fldl2e
dec
push
jns
dec
or
inc
xchg
movzbl
xchg
insl
sbb
xchg
xor
mov
push
push
dec
lret
popf
fcoms
arpl
mov
movsb
into
outsl
ret
cltd
push
and
and
inc
ss
out
add
push
pop
inc
in
lock
or
popa
rcl
dec
mov
cmc
or
add
scas
loop
in
fcoml
jecxz
sub
loopne
fsts
cmp
sbbb
dec
out
push
fstpt
insb
sbb
lea
ret
cmpsl
adc
or
push
lea
mov
popf
call
bound
ja
rol
xor
nop
pop
enter
roll
pop
cwtl
lock
jb
fisubrl
dec
adc
mov
dec
es
enter
push
imul
imul
lret
add
inc
pop
pop
dec
xorb
xor
or
push
iret
jbe
jge
mov
fldl
sub
or
mov
cmpsl
test
in
andb
mov
test
rorb
insb
inc
repnz
dec
sahf
mov
jbe
jg
aad
pop
dec
adc
daa
js
xor
add
jl
add
repnz
adc
out
inc
and
ret
mov
mov
fidivs
lahf
inc
sbb
rorl
pop
test
ret
add
inc
add
aas
das
or
adc
pop
cld
mov
shrb
js
adc
pop
mov
pop
cmp
pop
sbb
lods
xchg
popf
pop
into
mov
mov
xchg
pop
xchg
out
xchg
mov
pop
leave
jno
repz
add
dec
shrb
popf
pop
inc
pop
adc
enter
mov
xor
sub
or
and
push
lahf
out
mov
scas
clc
push
bound
push
cmp
fsubrs
outsb
icebp
je
loope
lret
hlt
dec
pop
int3
xchg
mov
ds
and
xchg
and
jl
fsub
orl
dec
jl
dec
imul
bound
push
adc
rcrl
xor
jle
sbb
jns
push
in
sub
jecxz
enter
popf
mov
or
icebp
mov
pop
sub
popa
add
push
pop
dec
pop
xor
out
pop
xchg
js
das
addb
lea
sbb
int3
cld
push
pop
fdivp
mov
decb
addl
in
and
add
loopne
popf
mov
cli
cltd
jo
jmp
cltd
jnp
mov
cmpsb
ds
xlat
in
hlt
fs
and
mov
lock
jecxz
adc
cwtl
mov
les
pop
jo
out
addr16
data16
cmp
mov
cltd
or
fstpl
sarl
mov
mov
sub
sbb
les
sub
loopne
and
cmpl
add
das
sbb
dec
int
adc
test
mov
jg
fsubr
xchg
add
test
shll
loope
sbb
ds
cld
push
ja
leave
jecxz
and
mov
jp
sahf
out
out
in
in
outsl
push
lock
mov
or
enter
mov
cltd
and
test
pop
lods
push
dec
ljmp
rolb
dec
dec
mov
arpl
cmp
or
pop
mov
mov
xchg
iret
out
xchg
data16
mov
fnstcw
out
jnp
xchg
or
dec
inc
negb
add
pcmpgtb
and
dec
xor
fs
or
pop
fisubrl
xor
jmp
cmp
pushl
in
orb
loopne
push
push
mov
scas
xorl
addr16
scas
mov
add
sbb
push
cmp
adc
mov
add
sbb
pop
frstor
mov
mov
xchg
les
push
sub
mov
dec
mov
imul
and
fdivl
mov
cmp
add
pop
cmp
mov
sub
mov
std
push
mov
imul
movsl
clc
push
xor
gs
cmp
mov
je
xchg
xor
inc
mov
xor
pushf
sbb
sub
sar
lea
cwtl
push
movsl
push
sarb
test
leave
dec
dec
xchg
subl
mov
cmp
movsb
mov
cmp
ja
xor
adc
outsl
push
or
out
cmp
jnp
add
inc
out
enter
sbb
std
lods
cmpsb
hlt
or
clc
fnsave
xchg
mov
push
js
sbb
fnstcw
fidivrl
imul
dec
stc
outsl
or
sbb
mov
pop
out
gs
xchg
clc
add
push
dec
add
jp
fistl
out
int
xchg
inc
cmpsb
push
stos
ds
mov
add
sub
shll
andl
mov
xchg
ror
jle
and
dec
lods
push
jmp
xchg
mov
add
arpl
mov
arpl
mov
scas
mov
inc
icebp
mov
nop
xchg
jae
in
cmp
jl
cmp
and
add
inc
mov
adc
pop
outsl
scas
and
adc
push
out
xor
shlb
mov
and
add
mov
in
sub
xor
cmp
outsl
lret
jbe
or
test
pusha
push
ds
add
pop
inc
sub
pop
inc
mov
jl
clc
jle
mov
pop
in
xor
jg
rorl
jmp
xchg
mov
mov
imul
adc
outsl
sbb
ds
and
in
dec
hlt
icebp
xor
dec
jge
int
daa
and
sub
cld
mov
call
push
fldenv
add
lret
aam
xor
pop
inc
xor
xchg
loope
insl
xchg
pop
push
cmp
mov
and
test
push
mov
cmpsl
sarl
ljmp
stos
mov
xchg
mov
dec
sti
sbb
fs
imul
std
add
popa
fidivs
xchg
das
ljmp
sub
mov
or
push
xor
jne
cs
mul
xor
fs
mov
inc
jo
popf
leave
out
xor
dec
dec
xor
roll
pop
sub
mov
mov
mov
cmp
ret
xchg
pop
sub
jmp
xchg
pop
mov
jae
mov
pop
sbb
lcall
int
cmp
test
out
scas
mov
or
mov
hlt
into
out
inc
data16
mov
call
jnp
add
iret
movsb
dec
aaa
int3
sbb
stc
inc
pop
jmp
shlb
in
test
adcl
lock
sub
call
outsb
cmp
lock
mov
jp
fwait
sar
sub
lret
lds
and
ret
repnz
add
sbb
jns
movsl
mov
ss
and
dec
scas
and
xchg
jge
loop
int
push
inc
fdivp
mov
mov
xor
les
mov
mov
test
je
rol
cmp
sbb
cmpsl
dec
xchg
ja
mov
in
adc
loope
inc
stos
stc
sub
sbb
adc
pop
imul
ljmp
lock
mov
xor
out
mov
cmc
jmp
inc
lods
ss
pop
push
daa
and
xchg
notb
pusha
pop
adc
xchg
loopne
and
pusha
jmp
mov
mov
orb
pop
push
lret
fwait
inc
xchg
stos
out
out
xor
popf
mov
dec
mov
pop
push
xor
sbb
mov
or
sar
shll
pop
dec
sub
and
callw
adc
rolb
inc
mov
dec
or
gs
int3
fwait
push
jle
pop
repz
stos
mov
sub
idiv
xchg
lods
jbe
cmc
mov
dec
sub
scas
aaa
call
mov
xlat
addr16
push
jle
jae
mov
dec
imull
sub
lods
into
outsb
pop
aad
ss
cmp
lods
ret
fmul
and
dec
arpl
lods
sub
movsl
fstps
imul
jae
sub
xchg
jge
popa
iret
cltd
sbb
push
pushl
cmpsb
xorb
sbb
popf
push
ret
sub
fs
cltd
adc
pop
sbb
adc
sbb
inc
pop
and
cli
sub
sub
leave
iret
sbb
orl
ljmp
clc
push
cmp
divl
or
test
sbbb
shrb
dec
into
push
push
aad
loopne
cltd
pushf
int3
cmp
mov
leave
lods
out
in
xchg
in
sbb
orb
mov
dec
mov
mov
scas
das
sub
mov
divb
jge
xchg
in
or
pusha
out
mov
pop
fsubr
jne
lea
mov
mov
scas
adc
mov
pop
lods
lret
adc
cmc
icebp
or
and
cmp
adc
xchg
jbe
mov
mov
aas
xor
sub
cltd
push
loop
inc
jecxz
pop
dec
cmp
cmp
cli
repz
mov
push
pop
fwait
inc
cmpsl
pusha
xlat
out
in
or
add
jb
lahf
xchg
mov
inc
rolb
insb
sbb
cltd
out
mov
adc
pop
adc
dec
add
sbb
into
pop
xchg
sub
cmp
mov
pop
cmp
lret
xor
fdivrp
lahf
mov
adc
shrl
jp
test
mov
cwtl
cmp
adc
mov
sub
fsts
cwtl
test
test
aas
jmp
lret
xlat
je
fs
jno
dec
sahf
ja
xchg
mov
fadd
jg
rcl
out
loop
mov
jns
xor
iret
adc
test
arpl
ja
adc
arpl
fdivl
cmpl
push
cwtl
mov
inc
xchg
sub
outsl
mov
mov
cmp
mov
js
mov
std
test
add
insb
mov
adc
mov
mov
fldenv
fimuls
int3
push
xor
dec
push
ret
and
je
jb
in
dec
test
sarl
adc
xchg
sbb
es
mov
push
or
inc
mov
jne
inc
inc
sbb
cmp
or
inc
jae
pop
pop
or
mov
mov
pushf
pop
xchg
ja
notl
mov
int
hlt
rorb
icebp
in
push
les
ljmp
fidivrl
imul
mov
cmp
les
push
cmpsb
and
or
cmp
adc
cmp
pop
xchg
sbb
icebp
insb
xor
in
sbb
mov
lcall
sub
xor
inc
pop
and
hlt
xor
fwait
mov
pop
dec
jb
movsb
or
sub
xchg
fwait
mov
xchg
jno,pn
adc
pop
outsb
mov
stos
and
cmc
xchg
cld
dec
sbb
fldenv
push
pop
bswap
jecxz
cwtl
xchg
je
stc
jo
ret
cmp
cmp
pop
xor
orb
or
and
insl
shll
cwtl
mov
sbb
fbstp
in
ficoms
into
push
push
addr16
push
imul
push
imul
adc
xor
dec
xchg
imul
jge
inc
pop
insl
aam
out
aad
arpl
xlat
mov
xchg
ja
cltd
adc
icebp
push
fwait
repnz
pop
xchg
lods
aad
outsb
movsl
sub
sbb
int3
xchg
dec
cmc
or
mov
outsl
aam
lods
jecxz
add
rclb
or
and
pop
rcll
addl
dec
xor
cmp
jns
mov
or
pop
movsb
mov
xor
stos
mov
dec
inc
mov
jbe
and
cmc
imul
push
mov
push
test
push
lret
cmp
es
add
mov
fdivrl
stos
lret
fistpll
orb
insb
imul
xchg
inc
xchg
sahf
push
mov
fucomi
xchg
cmp
and
mov
sahf
es
frstor
jo
add
stos
lods
test
stos
leave
int3
pop
xchg
test
sbbl
adc
imull
adc
ret
in
xlat
jecxz
inc
dec
adc
arpl
jns
mov
adc
negl
cmpsl
inc
jecxz
pop
push
sub
out
cmc
js
sahf
and
ret
int
inc
imul
cmpsl
mov
es
or
cwtl
jmp
xor
fiadds
add
xor
insb
mov
mov
mov
daa
push
push
sbb
js
pop
xchg
xchg
mov
xlat
iret
lock
outsb
enter
or
bound
bound
lret
push
ret
iret
lahf
test
mov
jmp
test
mov
push
cmp
imul
mov
fidivl
jnp
mov
ljmp
inc
pop
or
or
inc
shl
repnz
sbb
pop
inc
fistps
jb
loopne
fwait
inc
fmuls
sbb
test
outsb
sahf
push
out
out
sub
rorl
xchg
dec
nop
jge
sub
adc
rcr
sbb
inc
ds
mov
push
dec
mov
adc
jp
adc
ss
out
lods
mov
negb
sti
xchg
mov
sub
std
subb
cli
mov
popa
mov
xchg
mov
aas
cld
stc
pop
mov
ljmp
mov
hlt
or
je
btc
mov
test
icebp
aaa
sbb
mov
aas
sbb
adc
fstpl
pop
adc
pop
outsb
xchg
lahf
lea
sbb
dec
aad
xchg
dec
or
pop
je
xchg
xchg
mov
jmp
rcrl
dec
push
push
vsqrtsd
adc
out
jl
out
cmpsl
jno
out
fs
push
dec
pop
adc
flds
inc
and
jecxz
iret
stc
std
fnsave
adc
repnz
sub
sub
jp
pop
fwait
jns
add
inc
cli
add
ret
lret
sbb
inc
divb
jb
in
mov
pop
inc
in
out
fs
out
dec
cs
aad
mov
js
ret
imul
repnz
inc
push
inc
jg
lcall
gs
gs
xchg
lods
mov
fmul
mov
mov
add
loopne
cs
mov
mulb
sbb
mov
popa
or
movsb
xlat
push
int3
and
out
mov
xor
inc
js
cmp
jmp
add
adcb
lret
mov
jnp
pop
mov
add
or
adcb
jp
ja
leave
loop
push
dec
daa
inc
addr16
cmp
int3
cmc
mov
push
imul
cs
sbb
cmp
push
insb
cli
pop
jb
pop
test
jg
jb
shrb
repz
xor
sub
dec
les
lret
movsl
xor
enter
sti
add
mov
ret
push
sbb
pop
sarb
gs
rclb
add
or
out
in
push
and
aaa
mov
lret
mov
lret
push
cs
jg
sub
inc
call
xor
test
jmp
frstor
sti
ja
and
out
jl
outsl
sbb
dec
daa
lods
sbb
inc
daa
inc
sbb
dec
outsb
jle
sti
inc
cmpb
mov
mov
xlat
pop
mov
cwtl
and
dec
push
std
and
xchg
std
inc
mov
jae
into
jo
or
mov
shrl
xorl
push
mov
adc
xchg
inc
cli
inc
sub
mov
into
inc
out
out
dec
ja
mov
push
popf
decb
in
mov
push
push
cmpsb
aam
xlat
iret
sub
lcall
cmpsl
sub
push
add
shlb
push
mov
test
icebp
jns
cld
mov
mov
xor
cwtl
pop
mov
push
dec
jo
ss
ds
sbb
xor
push
into
xchg
out
mull
add
js
daa
mov
cmpsl
jg
mov
sbb
insl
dec
iret
add
mov
xchg
cli
sahf
dec
mov
dec
test
xchg
addr16
stos
je
push
cld
push
xlat
cmp
push
movsb
dec
stc
push
js
pusha
mov
addr16
outsl
sub
daa
in
push
ja
cmp
jb
imul
mov
dec
add
inc
sbb
sub
clc
inc
imul
jge
pop
movsl
fs
pop
pop
dec
sarb
jno
cmp
jae
dec
and
inc
xchg
in
pop
dec
xchg
stc
sbb
ret
or
sbbb
push
fwait
mov
popf
in
mov
jl
pushf
int
cmp
ret
mov
sub
sbb
mov
jmp
fs
in
fisubrs
es
or
add
inc
jno
ret
les
adc
sti
mov
dec
lock
call
sub
xchg
add
pop
das
int3
shll
add
movsb
sbb
andb
fwait
je
das
das
or
mov
flds
out
mov
loopne
insb
adc
nop
stc
out
mov
imul
or
xchg
sub
aam
jo
popf
das
jns
xchg
cmp
imul
jl
mov
or
dec
fisttpll
lcall
jmp
push
cmp
inc
in
dec
and
sub
pop
sbb
or
in
das
jnp
mov
mov
movsl
dec
jge
jmp
sbb
lahf
int3
or
stc
movsl
dec
inc
popf
xor
pusha
adc
push
mov
jl
inc
xor
aam
jle
divb
jecxz
jl
xchg
stos
fisttpl
push
lods
push
adc
sbb
popf
push
cmp
mov
std
imul
sahf
mov
aas
xor
mov
mov
cld
clc
out
js
ja
insl
sbb
mov
ja
dec
cmp
jne
jecxz
mov
jb
dec
andl
mov
inc
test
push
jno
push
jo
nop
or
lahf
pop
rol
insl
mov
lock
lds
add
jle
loopne
test
or
mov
mov
loope
mov
mov
pop
cmp
popf
and
dec
mov
fmull
es
mov
ss
lods
fimull
push
sahf
subl
int
iret
outsb
test
addr16
push
pop
nop
add
flds
call
fwait
add
aam
sti
xlat
pop
call
mov
sti
fs
test
jae
popa
shl
pop
adc
push
xchg
into
push
aas
cmp
add
pop
xor
sbb
add
cld
aad
pop
insl
pop
subl
lret
mov
mov
sbb
cmp
pop
leave
sub
xor
cmp
into
and
in
pop
xchg
outsl
test
xchg
push
jmp
ret
cmp
inc
sbbb
push
ljmp
stc
dec
fisubrs
loopne
xchg
popf
push
popf
push
fstpl
call
in
es
add
sbb
shrl
sbb
push
sub
sub
lret
outsb
call
call
push
daa
std
loop
jl
push
ret
popf
mov
mov
mov
sub
lds
cmc
es
sahf
lahf
fimuls
sbb
gs
adc
fdivs
mov
jno
jne
mov
inc
repz
insb
scas
ret
push
mov
mov
jns
std
dec
stos
xlat
xor
ljmp
test
fistps
fsubs
xor
fs
xor
fldenv
andl
inc
dec
add
in
push
or
fiadds
xor
mov
iret
imul
add
push
aam
divl
xchg
test
ljmp
jns
inc
mov
mov
jnp
mov
shl
push
adc
std
push
gs
sbb
push
je
push
data16
xor
inc
in
ds
xchg
and
pop
add
pop
nop
mov
push
sbb
cltd
add
lcall
ss
arpl
out
jmp
pop
lds
and
test
sbb
lods
shr
loop
sub
imul
aas
xor
add
loope
dec
sarl
jg
fcompl
or
add
fs
test
out
xor
cwtl
fimuls
fistl
mov
add
xor
mov
sub
aaa
popf
and
pop
fidivs
and
mov
test
sub
bound
add
jl
and
and
insl
cmp
pop
inc
test
add
pop
sub
pushf
xchg
cmp
lret
call
das
test
ja
mov
dec
int
mov
jo
xor
mov
in
in
mov
js
and
shlb
mov
je
sbb
dec
lahf
pushf
adcl
nop
xchg
jns
mov
out
push
push
jmp
mov
inc
ljmp
dec
das
and
rolb
rcr
movsb
dec
loopne
pushf
enter
das
fdiv
je
sbb
mov
loopne
dec
and
fnstsw
dec
pusha
xor
cltd
mov
out
xor
ss
fistpll
int
pop
es
and
mov
stos
out
mov
mov
shrd
jae
lods
scas
lahf
dec
dec
loope
jne
fldl
jg
or
adc
dec
lcall
pop
test
shrl
aam
pop
xchg
dec
clc
shrb
stc
test
stc
add
stc
xchg
xor
add
mov
add
mov
sub
es
inc
xor
imul
pop
add
fwait
pusha
arpl
adcl
or
push
mov
into
lret
repnz
scas
in
and
dec
data16
inc
sbb
push
jbe
xor
push
jb
cltd
xor
add
fcoml
pop
ret
jge
and
iret
das
pop
xchg
cmp
and
movsl
cmc
arpl
mov
push
pop
addr16
jns
push
leave
xchg
push
jnp
addb
flds
int3
adc
fcoml
sarl
mov
mov
adc
ret
mov
jecxz
and
add
leave
mov
fcmovbe
pop
xchg
cs
inc
xlat
cmpsb
push
mov
pop
and
stc
cs
stos
mov
xor
imul
ljmp
xor
jne
and
sub
sub
cmp
les
or
push
lcall
mov
and
cmpsl
inc
mov
mov
cmp
or
fsub
push
or
cmp
daa
or
xlat
jg
pop
rcrl
repnz
out
add
cmp
jmp
xor
loopne
dec
xor
and
loop
out
divps
inc
sarl
mov
dec
cmp
and
adcl
or
movsl
sbb
push
sub
out
mov
into
inc
lret
mov
stc
jle
pop
in
mov
xor
movsb
inc
pushf
out
aaa
stos
pop
mov
inc
sahf
in
sarb
adc
mov
jnp
movsl
adc
xlat
roll
sub
cmp
enter
and
repz
jae,pn
cltd
sar
add
data16
mov
cmp
and
pop
push
adc
jb
mov
xor
and
cmp
in
pop
sti
mov
jnp
movsl
mov
leave
cvtps2pd
out
push
subb
mov
int3
popw
xchg
enter
sbb
mov
dec
jne
adc
pop
in
je
rclb
cmp
cmpsb
hlt
mov
cmpsl
inc
push
in
and
movsl
add
pop
mov
mov
sbb
stos
outsb
icebp
insl
test
cmp
int3
adc
or
mov
adc
mov
pop
cmp
outsb
enter
fcmovbe
cmc
mov
and
subl
inc
icebp
push
dec
xor
jnp
sbb
and
inc
or
pop
in
lds
std
daa
inc
jnp
aad
sub
mov
data16
sub
lds
sbb
add
movsb
ds
jne
inc
stos
mov
repnz
xchg
sub
int3
mov
ds
mov
int
inc
xchg
sbbb
and
cmpsb
mov
lods
popa
xor
movsb
mov
addr16
xchg
fsubrp
sbb
fstpl
es
outsb
das
cld
in
lcall
jmp
test
out
js
insl
roll
jbe
and
inc
xor
jns
and
sbb
ljmp
insl
push
sub
test
out
enter
out
and
ljmp
enter
das
push
pusha
lret
mov
setbe
je
and
aas
loopne
popa
push
mov
and
movsl
bound
cmp
inc
mov
call
pop
or
scas
ljmp
dec
xchg
cmp
xchg
mov
in
sbb
out
icebp
loop
loope
or
pop
jmp
je
imul
shrl
pusha
lods
fnstcw
or
popf
mov
cmp
mov
popf
inc
stos
test
jbe
fs
xchg
mov
xchg
bound
aas
mov
mov
pop
icebp
lea
ljmp
xchg
lret
vmovq
repz
mov
xchg
adc
loop
push
sbb
adc
std
add
or
repnz
fwait
sbb
cmp
adc
xchg
add
pop
fs
int
mov
sub
leave
repnz
lahf
mov
ret
addb
rcrl
rcrb
mov
pop
repz
movsb
sub
rcrb
dec
ds
in
clc
and
sub
xor
mov
xchg
adc
inc
mov
mov
cs
mov
shll
aam
add
call
loop
push
xlat
sarl
cld
repnz
push
mov
movsl
mov
mov
pop
jge
xor
xorb
scas
or
xchg
cmp
jecxz
xchg
fwait
mov
inc
mov
mov
push
je
jnp
test
fdivl
xor
pop
fadds
add
mov
push
pop
cmp
test
addl
lahf
mov
out
mov
jecxz
and
mov
je
xchg
sbb
or
dec
pop
out
js
popf
xor
pop
aaa
scas
jmp
out
adc
inc
negl
rol
outsb
xor
mov
mov
rclb
sbb
mov
mov
xchg
imul
jbe
in
test
inc
stos
lcall
fwait
js
sub
inc
mov
adc
cs
hlt
lahf
mov
xchg
cli
lds
nop
out
andl
adc
rcll
bound
js
pop
call
jge
adc
enter
outsl
pop
jl
aam
loope
aam
icebp
push
jae
in
mov
fdivl
mov
mov
adc
cwtl
insb
popa
adc
sub
add
ljmp
dec
pop
pop
dec
js
jb
in
lcall
repnz
arpl
es
pushf
rcrb
fildl
xor
sbbl
xor
and
inc
dec
xlat
loopne
in
repnz
lea
xchg
pop
jo
adc
jmp
test
lods
mov
pop
js
mov
shlb
fstps
sbb
sub
pop
ja
xchg
iret
mov
cwtl
adcb
loop
lods
mov
mov
lods
adc
or
shl
int
sbb
je
adc
sbb
and
mov
pop
int3
fcomps
test
popf
lret
popa
add
pop
push
pop
call
aaa
mov
addr16
push
aad
jb
je
xor
push
notb
jo
jns
jb
jae
mov
lods
push
lods
mov
sub
addr16
mov
sub
lods
pushf
fimuls
sti
push
and
mov
add
cmpsb
insl
loop
aas
in
lcall
xchg
ds
aad
push
enter
cmp
sub
aas
fnstsw
add
xor
jg
in
icebp
xchg
pushf
cli
jl
incl
sub
enter
and
cwtl
mov
test
mov
sbb
cli
push
push
cmp
cmp
inc
push
inc
sub
pop
dec
jmp
shl
and
push
mull
push
js
outsb
sub
lret
enter
int3
pop
mov
mov
pop
cmc
jge
add
aaa
xor
cmpsl
dec
lock
sub
dec
push
getsec
dec
push
mov
and
jbe
daa
xchg
test
jl
aas
mov
mov
jo
fcmovbe
xor
popl
mov
xlat
lret
or
xlat
gs
jne
fcmovnu
push
inc
filds
dec
aam
imul
lret
mov
adc
stos
adc
cltd
into
mov
incl
adc
addb
xlat
leave
fbld
cmp
cmp
cli
inc
je
fnsave
stc
scas
adc
mov
daa
xchg
pop
mov
pop
jmp
leave
ret
fcomps
test
xchg
stos
dec
arpl
jecxz
jmp
js
jl
dec
pop
and
xchg
insl
insl
cmp
enter
outsb
cmpsb
lods
cltd
sub
push
imul
adc
aas
mov
xchg
pop
sbb
fildl
enter
adc
gs
nop
test
push
push
ljmp
xchg
out
xchg
and
es
cmc
cmp
cmp
movsb
xor
push
xor
adc
lods
cmpsl
mov
pop
popf
lcall
mov
add
jp
jb
xchg
sub
adc
add
outsl
addr16
idivb
jns
pop
mov
mov
push
or
jp
add
sti
lret
xchg
push
cmp
cmp
bound
mov
subl
inc
lcall
fiadds
scas
pop
stos
mov
mov
cli
popf
ret
jns
mov
mov
push
negb
jmp
icebp
mov
lret
ds
sbb
push
sub
movsb
pop
pop
push
inc
popf
loope
lahf
dec
cld
iret
cs
and
in
das
pop
ja
iret
popf
pushf
xchg
dec
mov
add
iret
hlt
pop
mov
int
ror
scas
int3
outsl
je
sub
popf
xchg
cltd
pop
or
xchg
xlat
aam
push
jecxz
loope
sub
in
enter
adc
pop
int
adc
test
inc
dec
lea
in
push
mov
fldenv
pop
movsb
adc
mov
lret
mov
outsb
or
pop
rcrl
mov
nop
out
sub
mov
out
and
out
pop
and
popf
lds
or
push
hlt
int
aam
jg
sbb
outsl
outsb
mov
out
add
je
jge
pop
push
iret
or
arpl
test
js
shrl
test
adc
cmp
cltd
ret
repz
xor
iret
fwait
push
shll
rcrb
daa
jecxz
push
jg
and
dec
rorl
mov
add
fcomip
xor
pop
stos
pop
sti
aaa
arpl
inc
push
ret
sbb
les
not
out
sbb
outsb
push
hlt
xlat
outsb
fsts
lds
mov
cmp
xchg
movsb
jno
andb
mov
outsl
leave
scas
stos
jo,pn
cmp
mov
fdivrp
test
push
into
cli
pop
out
push
jne
iret
out
pop
in
shlb
adc
xlat
das
lods
jb
idiv
mov
inc
xchg
adc
adc
sbb
cld
xchg
push
insl
adc
jmp
xchg
adc
into
xchg
and
push
mul
xor
ret
jae
lret
sbb
inc
push
xor
inc
sub
mov
and
jne
rclb
js
jb
inc
lds
inc
sub
xchg
dec
xor
lds
mov
cltd
scas
mov
enter
cmpsb
add
push
adc
xchg
arpl
add
outsl
sbb
cmpl
or
jg
cmp
adc
test
scas
push
lods
out
xchg
cld
daa
fisubl
or
add
aam
jg
xor
or
xlat
arpl
insl
sbb
mov
add
fadd
and
mov
and
xlat
insb
or
out
jge
dec
mov
or
fwait
mov
jo
cmpsl
rclb
popf
add
ss
sahf
pop
cmp
movsb
sbb
clc
pop
mov
loop
pop
repz
outsb
mov
fbld
clc
arpl
add
pop
sti
push
push
in
pop
cld
lahf
mov
js
jmp
scas
adc
cmp
xchg
push
xchg
js
sbb
cltd
ljmp
pop
lcall
cmc
ss
push
fisubs
push
cwtl
loop
aad
push
xchg
nop
cmp
in
push
movsb
test
add
fstpt
push
mov
call
push
sbb
scas
jle
and
jne
cmp
mov
mov
outsl
xor
push
xchg
hlt
dec
pop
call
insl
pop
push
movsl
mov
popa
mov
divb
mov
xchg
mov
lahf
lock
iret
pop
sahf
popf
mov
mov
repnz
pushf
arpl
jl
or
pop
ficompl
sahf
xchg
and
stos
fimull
es
jle
jecxz
add
jo
lds
notl
pop
xorl
imul
pop
les
call
das
add
xchg
orb
fstpl
mov
iret
cmp
shll
pop
mov
push
mov
test
dec
xchg
cmc
fildll
cmp
sbb
call
pop
fadd
ljmp
std
xchg
push
shrb
adc
inc
loopne
pop
mov
dec
ds
cmp
fldenv
pop
xchg
mov
mov
sbb
sbb
sahf
loope
mov
lret
ja
jbe
out
iret
mov
push
push
xorb
mov
mov
ds
sub
lds
repz
fisubl
xchg
fxch
add
mov
lods
cmp
cwtl
shll
vpmaxub
or
inc
ss
or
add
es
ljmp
mov
inc
cli
in
fstl
popa
dec
push
arpl
mov
les
adcb
sbb
rcll
dec
mov
push
jge
adc
mov
gs
mov
loop
mov
icebp
mov
jge
mov
lds
das
adc
mov
and
mov
pop
mov
xchg
test
test
nop
repz
adc
or
outsl
sub
dec
call
and
xchg
outsl
fdiv
bound
int3
pop
cmp
sbb
pop
and
pusha
popf
xor
scas
cli
cmc
push
jbe
adc
push
push
jno
adcb
pop
push
inc
pop
jg
mov
add
cmp
jecxz
jb
rolb
sbb
mov
lea
icebp
fstps
inc
jge
pushf
mov
jp
dec
insl
sbbl
aad
xlat
jo
cli
addr16
out
pop
lret
je
jp
sbbb
jg
sbb
or
popf
or
insl
push
les
cwtl
xor
adc
jo
in
fdivl
pop
in
aaa
test
divps
out
jle
dec
mov
add
orb
mov
lea
subl
aas
sahf
xor
fmul
mov
fwait
imul
cmp
fistps
mov
pop
addr16
dec
rorb
mov
fucom
mov
push
mov
adc
movsl
out
inc
stc
cs
pop
outsb
or
jp
arpl
jbe
ret
xorb
fstpt
push
xchg
inc
lcall
mov
inc
out
popa
cmp
fs
out
in
dec
mov
mov
sub
xor
fcompl
icebp
addr16
nop
mov
push
cwtl
fwait
cmp
daa
inc
pop
fs
fbstp
cmp
mov
sbb
pusha
push
ret
in
mov
jle
xchg
andb
and
dec
add
adc
push
sbb
cmp
decl
mov
mov
push
jno
push
adc
inc
daa
inc
mov
stos
in
jmp
xchg
pop
xchg
stos
pop
pop
insl
loop
popf
fcompl
dec
add
xchg
mov
aad
or
jmp
cmp
lods
jbe
pop
adc
imul
add
stos
xor
sub
adc
or
mov
xor
aas
imul
push
mov
test
sahf
dec
inc
jnp
inc
mov
mov
push
mov
sub
test
rolb
add
ffree
cmp
outsb
in
xchg
ss
pushf
test
xor
shrl
jmp
bound
adc
orl
add
inc
sub
insb
mov
es
jo
sbb
lcall
aas
sub
adc
mov
push
xor
push
repz
xchg
cld
mov
gs
popf
mov
pop
shlb
sahf
mov
and
inc
arpl
lea
add
xchg
insb
mov
pop
sbb
xchg
hlt
ficoms
gs
in
xchg
xor
test
jge
sub
cmp
pop
and
or
aam
das
sub
mov
xchg
test
mov
out
icebp
jg
lcall
shrl
std
sub
in
adc
push
xchg
pop
or
gs
rolb
mov
popf
xchg
cmpsb
fisttps
movsl
add
lods
mov
das
jns
mov
sahf
dec
lods
push
mov
stos
cmp
push
gs
xlat
pop
fdivr
add
pop
lret
mov
outsl
movsl
int3
in
jae
not
sub
pop
jecxz
pop
cmp
das
mov
mov
jp
lret
cmc
inc
ja
or
jmp
lahf
sbbb
sub
jno
mov
popf
jae
mov
jae
js
lahf
dec
jle
and
loop
in
mov
orl
xchg
scas
rcrl
enter
add
je
cmp
js
xor
and
mov
lock
xchg
mov
fbld
fdivs
outsl
lods
ds
add
out
dec
xor
mov
mov
test
mov
add
push
cmpsb
jbe
jl
out
adc
lret
rcl
iret
mov
cs
nop
in
push
sbb
test
out
push
xor
inc
in
adc
or
les
jno
int
scas
push
ss
arpl
lahf
jp
xchg
sub
arpl
mov
mov
xchg
icebp
inc
inc
out
sti
inc
inc
and
aam
sbb
and
mov
subl
mov
and
cmp
xor
pop
fiaddl
cmp
mov
outsl
outsb
push
rcrb
mov
pop
out
sub
les
or
xchg
mov
or
pop
and
push
or
fiaddl
imul
inc
in
data16
inc
push
cli
jnp
sbb
in
jmp
in
add
jbe
mov
fadd
jg
mov
and
xchg
mov
add
popf
mov
push
inc
pop
les
subl
test
ficoms
mov
das
adc
pop
les
add
jne
mov
shlb
js
jmp
mov
movsl
pop
mov
andb
or
testb
adc
and
lcall
xor
adc
rorb
imull
dec
call
inc
les
btc
or
jmp
ja
xchg
xchg
add
cs
stos
adc
or
lock
test
mov
inc
lret
in
out
and
movsl
jno
inc
lea
sub
addr16
pop
push
add
pop
sarb
jo
fadd
mov
cmp
in
loopne
nop
adc
sub
sahf
mov
call
daa
in
mov
sahf
mov
lret
lea
sub
outsl
pop
sub
sbb
cmp
mov
and
or
fsts
and
xor
lret
enter
shll
adc
in
mov
movsb
mov
test
aad
sahf
insb
push
fidivrl
imul
test
cs
repz
jbe
sub
mov
push
jmp
aam
add
leave
dec
ja
jbe
out
xchg
arpl
gs
insb
ret
xchg
cltd
fsubrs
lods
daa
push
sbb
mov
sub
into
test
jns
pushf
jnp
clc
jmp
roll
rorb
ret
in
mov
fisttps
inc
gs
sub
icebp
jno
bound
fcoml
imul
adc
into
push
xor
ret
adc
mov
push
mov
sub
jl
test
jmp
xchg
mov
mov
cli
ret
pop
pop
push
inc
push
push
pop
lods
daa
cli
inc
pop
pop
imul
mov
mov
out
ror
stc
les
mov
loope
or
lret
cmp
inc
mov
mov
movb
outsb
jbe
sbb
sub
push
or
fs
out
or
push
or
dec
fwait
xor
mov
jmp
jbe
push
adc
mov
pop
arpl
je
lcall
add
xchg
rclb
pop
sbb
lods
inc
pop
and
sti
pushf
xchg
in
adcl
addr16
dec
dec
mov
ja
ret
cmpsb
mov
push
xchg
mov
cmpsb
shr
cmc
pusha
ljmp
frstor
leave
and
nop
jbe
pop
jmp
repnz
xchg
sub
and
push
pop
aam
sahf
sbb
push
sub
mov
mov
rol
push
inc
pushf
cmpsl
pop
add
ror
int3
out
neg
xchg
test
sti
push
scas
jmp
dec
int3
insb
sbb
dec
push
jno
and
dec
add
push
push
mov
and
pop
add
daa
sti
push
or
stos
daa
in
adc
sub
cmp
aad
mov
es
or
or
sti
fisttpl
pop
imul
rcrb
insl
mov
sbb
cmc
or
sbb
rolb
inc
push
xchg
inc
cmp
and
adc
outsb
outsl
xor
loop
int3
imul
mov
cmc
cmpsb
dec
mov
xor
dec
or
xor
stc
pop
mov
or
xchg
pop
shrb
sbb
rclb
fsubr
and
mov
add
mov
mov
rcr
cmp
lds
mov
lock
and
dec
shll
jae
jge
mov
movsl
mov
mov
xchg
shrl
dec
fcoml
or
stos
loope
push
mov
inc
jnp
adc
mulb
daa
inc
jno
fdivs
out
out
xchg
add
xchg
cmpsl
mov
test
cmp
fiadds
lods
insl
pop
pop
mov
sub
movsb
hlt
push
jbe
xchg
mov
jmp
out
xchg
fisttpl
jne
movsl
mov
in
in
mov
imul
fucomip
ss
insb
roll
enter
cmp
mov
pop
scas
sbb
xchg
mov
pop
dec
pop
mov
repz
push
xchg
es
stos
dec
das
inc
ja
pop
xor
jo
call
push
cmp
fildl
inc
jge
aas
pop
adc
cmc
subl
add
or
mov
stc
pop
pop
aaa
xchg
jne
in
jge
pop
sbb
loope
and
mov
jne
mov
mov
xor
push
or
jno
inc
decb
mov
shlb
jl
adc
mov
in
and
cmp
xchg
sbb
lret
test
mov
fwait
lds
js
imul
int3
pop
jmp
imul
mov
in
jb
jae
adc
or
push
popa
lcall
ret
and
or
xchg
and
sub
push
test
sbb
icebp
cmove
popa
fistps
sti
mulb
xor
jb
push
push
repnz
dec
xchg
mov
insb
add
xchg
bound
sub
sti
push
push
testb
lahf
xor
orb
jo
xor
inc
imul
jle
mov
push
cmpsb
loopne
in
xlat
push
jne
adc
dec
enter
lods
outsb
and
sbbl
push
jnp
dec
jp
mov
stc
dec
fsubl
sub
insl
mov
icebp
pop
xchg
add
and
lods
cmpsl
mov
popa
outsb
mov
mov
sbb
xchg
aas
shrl
insl
sbb
dec
lcall
xor
adc
prefetcht0
jae
mov
in
lods
jmp
aam
mov
xchg
xor
addr16
lcall
fs
jle
or
jecxz
xchg
push
and
sti
and
testl
sbb
sub
fisttpl
mov
or
leave
pop
cmc
adc
nop
mov
push
dec
sub
in
add
xchg
push
ret
stos
mov
mov
mov
pop
bndldx
lahf
sbb
loope
sbbb
xchg
rorl
cmp
xchg
out
pushf
or
sub
and
mov
cmp
cmp
xchg
leave
and
pop
shlb
cmp
sbb
mul
std
sub
int
repnz
mov
rcl
sbb
or
inc
gs
pop
jg
push
push
add
jmp
fcos
cmp
outsl
pop
in
ja
sbb
mov
inc
setne
jp
orl
pop
jmp
sub
movsl
dec
enter
xor
jbe
pop
jbe
fidivrl
movsb
insb
or
icebp
mov
mov
dec
adc
test
add
xchg
rorl
outsl
rcrl
icebp
dec
dec
push
adc
inc
aas
add
mov
and
les
mov
rolb
ret
repz
icebp
mov
mov
sbb
data16
jbe
cmp
std
mov
mov
fidivl
sub
lcall
sbb
lea
sub
into
pushf
ss
imul
les
and
shlb
xchg
aam
orl
cmp
cmp
lret
adc
xor
cmp
pop
in
mov
mov
lock
sbbb
add
or
xor
addr16
ret
mov
jno
dec
jns
call
lcall
rol
popa
xlat
push
jg
rolb
sub
fiadds
xchg
add
insl
rcll
sub
into
mov
inc
lods
jl
inc
imul
mov
inc
das
cmp
sub
xor
xchg
mov
cmp
sbb
sub
jmp
mov
cmp
shrb
sbb
test
push
ret
pop
xchg
xchg
sbb
call
lods
lods
jno
xchg
shl
sbb
imul
pop
js
in
aas
inc
mov
or
std
mov
xchg
lea
adc
pop
mov
or
push
or
xor
repz
test
mov
rcll
lods
daa
dec
shr
aad
sub
or
fcmovb
jge
push
xchg
inc
daa
push
lahf
inc
xchg
jo
pop
popf
nop
or
mov
and
sub
add
popf
xchg
add
push
pop
pop
mov
sub
in
xchg
popa
mov
rcl
cli
lahf
enter
outsl
popf
dec
pop
push
cmp
add
iret
cmpsb
mov
push
lds
inc
wbinvd
daa
cld
mov
in
stc
adc
sbb
push
in
std
mov
es
andl
or
sbb
add
adc
mov
push
inc
mov
inc
les
lahf
mov
push
ficompl
daa
popl
in
xchg
sub
inc
cmp
stc
outsb
add
dec
mov
push
test
stos
push
add
inc
pop
xor
loope
cmpb
andl
fs
orb
inc
movsl
movsb
sti
dec
dec
and
jb
rcr
enter
add
lds
push
inc
enter
dec
popf
push
dec
add
mov
fstps
add
jg
int
mov
or
inc
xchg
cmc
or
push
mov
pop
add
gs
and
mov
pop
and
in
xchg
cli
mov
dec
outsl
ret
and
inc
aas
push
mov
scas
xor
mov
dec
fistps
in
cs
ja
je
jmp
ss
push
les
push
mov
test
push
in
push
sub
xor
xor
push
mov
pop
std
ret
sbb
xchg
rcrl
test
sub
xor
mov
mov
das
xor
iret
sahf
push
fxtract
xor
fstl
jns
pop
add
push
sbb
loopne
scas
popa
or
fwait
mov
dec
bound
cli
les
add
test
add
or
lods
mov
cmp
and
ljmp
push
loope
ja
mov
mov
xor
push
pop
push
das
jae
test
pop
mov
push
stos
jb
and
sub
adc
cmpsb
cmp
dec
mov
push
movsb
xchg
inc
cmp
out
sbb
pop
adcl
jmp
jecxz
and
fadds
jle
fldcw
xchg
jg
dec
out
in
push
pushf
cmp
mov
pop
fbld
sub
pop
mov
or
fsub
push
ficomps
clc
loope
andb
out
std
cmp
mov
dec
scas
adc
rcrb
or
jp
int
push
mov
loop
dec
cmp
je
shlb
fadds
mov
and
jle
in
cmpsl
clc
pop
xlat
data16
dec
xchg
shlb
lds
ficoml
push
lret
and
sbb
adc
mov
shl
ljmp
or
es
adcb
scas
push
stos
push
xor
rol
and
out
mov
in
repnz
pop
inc
fistpll
insb
sbbl
ds
and
movsb
dec
push
jge
pusha
test
mov
and
push
clc
cmp
jnp
sbb
repnz
ret
sub
pop
cmp
sbb
sbb
movsb
inc
mov
call
es
sub
jl
out
pop
pusha
arpl
and
add
aaa
jno
ljmp
jno
and
xchg
xchg
jne
inc
out
cld
adc
mov
pop
nop
jmp
loope
sub
scas
xor
mov
lods
aam
dec
cmpsb
mov
rol
jge
inc
sbb
les
dec
sub
mov
jbe
fcoml
jbe
sub
scas
sbb
orl
in
lcall
ljmp
fs
cmp
loop
mov
mov
sub
mov
dec
jg
sarb
inc
fucomi
xchg
jno
inc
insl
es
lahf
in
cmpsb
ret
add
jno
mov
out
aad
fdivl
clc
leave
cmp
mov
ljmp
out
sbb
test
add
mov
sbb
jbe
shl
aad
mov
in
sub
ss
enter
lcall
lock
insb
ss
mov
int3
and
movsb
cltd
dec
repz
repnz
add
xchg
fistpll
xchg
add
inc
xchg
or
sbb
mov
mov
jb
mov
push
jno
test
mov
aad
push
push
and
mov
adc
pusha
mov
or
sti
push
mov
lock
push
mov
inc
sbbl
inc
jbe
pop
js
lea
add
jp
stos
push
sbb
fndisi(8087
mov
mov
into
push
dec
jae
mov
sbb
cmpl
hlt
pop
stc
rclb
arpl
mov
ljmp
cmpl
out
bound
insb
imul
xchg
insb
movsb
mov
jae
or
std
sub
mov
sub
fstps
sub
nop
test
mov
adc
xor
sti
jno
lahf
std
adc
iret
xor
out
mov
adc
inc
pop
ret
leave
inc
push
inc
bound
cmpsb
and
in
xlat
dec
cmp
stc
add
addr16
jge
sbb
push
xchg
sbb
les
or
jbe
inc
and
add
mov
lret
out
aas
sub
inc
push
ror
shll
inc
int
mov
jmp
jle
ja
or
pusha
cmp
les
test
imul
add
int3
inc
pop
jg
das
dec
sbb
popf
pushf
pop
push
ja
xor
leave
mov
cmpsl
js
fwait
pop
aam
pop
cmpsb
or
mov
sti
insl
mov
push
mov
or
call
lret
sbb
adcl
pop
adc
mov
fisttpll
xchg
cli
sbb
mov
insb
lea
dec
xor
inc
lahf
lods
rcrb
out
jecxz
pop
push
stos
outsb
aad
xchg
insb
adc
push
mov
mov
or
mov
or
loopne
lds
ret
out
stc
imul
mov
cmp
mov
aas
mov
fiaddl
mov
mov
fstpt
pushf
jbe
add
out
lods
dec
jge
pushf
and
mov
push
dec
add
or
sbb
jns
xor
inc
fwait
jo
or
popa
ficoms
data16
dec
mov
lods
fimull
cmp
xchg
jg
push
dec
outsl
mov
notl
xor
lahf
xor
jle
ret
mov
add
and
lock
mov
add
jmp
push
jno
loop
int3
lret
cmp
ss
mov
leave
mov
hlt
insb
dec
lods
add
sbb
mov
dec
movsb
aas
and
loope
push
hlt
cwtl
pusha
aas
push
push
lret
fidivrs
rcrl
and
push
les
enter
jmp
xchg
xlat
add
imul
xor
stc
adc
cld
fs
sub
xor
pop
and
push
add
jae
imul
jb
inc
aaa
or
ret
pop
jo
aaa
lret
jne
mov
fwait
movb
stos
in
rcrl
xor
or
rclb
and
cs
cmc
dec
ja
mov
stos
mov
imul
lods
rcrb
popa
sar
aas
cmp
mov
mov
test
fs
mov
dec
mov
add
outsb
xchg
loop
sti
addr16
adc
sbb
jmp
ss
sub
pop
add
add
jmp
stos
fwait
jle
jbe
rcll
mov
test
loopne
in
es
push
inc
mov
push
or
push
mov
mov
push
pusha
inc
or
and
lods
shr
in
imul
sub
jno
push
and
pop
filds
inc
imul
xorl
out
or
pop
in
or
mov
hlt
in
mov
xchg
repz
imul
mov
outsb
mov
dec
inc
in
inc
out
daa
test
pop
fstpl
sbb
xchg
cmp
test
js
gs
lock
mov
ffree
clc
and
fwait
popa
pop
and
in
in
faddl
jge
fidivl
jmp
push
push
cwtl
rcl
test
shr
cmp
mov
pop
jnp
mov
shrl
xor
xchg
cmp
pop
movsl
push
jae
test
into
ljmp
adc
fldt
aas
rcrb
xor
js
add
add
push
xchg
mov
push
mov
and
ret
fbld
iret
aad
xchg
mov
or
cmp
test
mov
push
ret
orl
fdivl
sub
or
dec
stos
mov
inc
mov
mov
ds
daa
xor
nop
push
cmp
fs
push
add
pop
pop
popa
shll
and
dec
mov
sbb
cmpsl
stos
xor
add
xchg
imul
pop
inc
and
rorb
daa
jne
movsl
mov
sub
stos
ljmp
push
scas
aam
jo
mov
inc
mov
jg
push
fs
repz
sbb
test
xchg
data16
sub
cli
outsl
repz
stc
popa
push
in
xchg
dec
sbb
pop
inc
or
push
pusha
mov
push
mov
and
inc
pop
loop
xchg
roll
scas
and
adc
popf
mov
mov
test
movsl
loop
xchg
loope
jb
add
test
add
push
mov
xchg
mov
pop
cld
jbe
scas
ja
inc
cmp
in
outsl
push
pusha
daa
outsb
adc
and
out
mov
rol
or
call
mov
mov
fsubl
xor
sbb
nop
push
adc
repz
push
fmuls
out
xchg
cmp
sbb
cmp
mov
inc
pop
sub
pushf
stc
sbbl
decb
push
stc
xlat
mov
ss
idivl
je
jo
cwtl
popa
sbb
rolb
adc
mov
cmpsl
xchg
xchg
pop
icebp
cmp
mov
cmpsb
pop
fidivrl
scas
push
or
mov
push
lahf
pop
int3
stc
pop
add
test
or
arpl
pop
mov
dec
roll
subb
xor
and
inc
add
jo
rol
ret
mov
add
inc
dec
add
mov
rcrl
sub
aad
addl
paddsb
pop
icebp
push
into
addr16
fiaddl
lea
out
fsubrs
mulb
xor
dec
dec
scas
jne
mov
jle
lcall
jo
push
xchg
mov
mov
push
iret
lock
f2xm1
and
or
dec
push
out
aad
icebp
dec
adc
xchg
dec
jb
adc
jnp
cmp
ja
add
mov
pop
push
pop
push
inc
jge
cmc
sti
dec
mov
mov
leave
jp
insl
stos
adc
jb
push
sahf
pusha
push
mov
xor
adcl
leave
dec
add
cmpsl
mov
cmp
data16
js
nop
lods
lcall
cmp
xorps
xor
sub
repz
push
push
iret
in
adc
jmp
sub
dec
lret
pop
mov
divb
imul
les
push
jb
fwait
mov
stc
add
mov
jg
minps
mov
lahf
mov
mov
mov
dec
push
test
xor
test
or
sub
sbb
pop
pop
sub
rorb
jmp
xchg
or
hlt
test
movsl
xchg
flds
lahf
mov
sbb
lret
mov
sub
dec
mov
jle
or
jmp
aaa
push
mov
scas
jmp
and
or
jo
outsb
cmp
sbb
call
subl
xchg
les
shr
inc
loopne
xchg
push
clc
sbb
pusha
es
std
and
data16
add
and
out
cwtl
sar
mov
das
cltd
push
add
sarl
lods
rcrl
cmp
inc
enter
add
sub
aaa
fiadds
xor
imul
jb
nop
cmpsb
iret
pop
fdivr
cltd
push
ljmp
daa
xor
fdivr
shl
sbb
fwait
mov
mov
nop
xchg
ret
ds
or
ret
add
ljmp
mov
mov
leave
mov
push
mov
leave
aad
ficoml
arpl
mov
mov
fnsave
and
jg
ss
sahf
xor
sub
inc
scas
imul
movsb
mov
dec
scas
inc
movsl
pop
sbb
mov
push
pop
adc
or
jnp
int3
and
lds
sbb
hlt
sar
adc
sbb
add
adc
add
bound
push
stos
xchg
in
aas
lods
stc
outsb
shl
in
adc
ja
loopne
fdivp
add
jae
mov
fisubl
dec
hlt
or
jae
shlb
orl
into
pusha
mov
xchg
test
mov
pop
call
or
pop
push
inc
cmc
mov
jecxz
mov
shlb
out
cmc
xlat
mov
inc
cmp
jmp
je
add
xor
mov
test
pushf
loopne
cli
mov
test
jecxz
dec
iret
pushf
iret
out
mov
push
scas
xor
mov
pop
xchg
aas
testb
fwait
xor
bound
xor
xor
cmpsb
add
and
lods
push
frstor
call
pop
jb
lods
scas
lods
add
jp
jl
cmc
push
pop
xlat
dec
stc
ficoml
lret
lcall
int3
or
xchg
push
ljmp
pop
pop
sbb
push
insl
lahf
or
int3
insb
push
inc
fwait
sar
shll
stc
in
lods
pop
addr16
push
push
jbe
adc
lcall
bound
mov
jno
loope
mov
insb
fs
inc
insb
test
cmp
add
jp
out
imul
mov
aaa
sub
jbe
rolb
pusha
cmp
jno
fistpl
push
mov
aad
cli
add
mov
aas
daa
int3
pop
icebp
push
pusha
scas
bound
call
xor
pop
pop
mov
popa
dec
mov
pop
sub
cmpsl
adc
lret
test
or
repz
arpl
and
lret
ljmp
cmp
dec
roll
pop
clc
les
jmp
push
subl
cld
sub
jbe
mov
nop
push
inc
mov
incl
out
and
or
les
mov
dec
leave
repnz
jmp
mov
mov
add
sbb
lret
jae
fcomps
and
cs
fldlg2
int
pop
int3
mov
test
enter
xor
mov
lock
and
add
fnstenv
nop
jecxz
bts
pop
out
movsl
mov
data16
sub
xlat
pop
fwait
mov
and
inc
addr16
xor
mov
mov
adc
pop
push
jge
adcl
notb
xor
push
sahf
inc
test
sti
pop
pop
mov
fnstcw
sti
imul
lock
inc
mov
sub
cmp
mov
push
jae
sbb
seta
cmp
xchg
push
fcompl
xor
pop
pop
pop
arpl
fwait
lahf
testb
cwtl
sahf
cmp
ds
mov
add
ficomps
push
fdivrl
lea
lcall
adc
push
push
divl
dec
leave
ficompl
push
inc
div
push
rolb
ss
jle
push
insl
xchg
cmp
leave
sub
push
mov
frstor
stc
hlt
test
jae
cmpsl
aam
cmp
jp
sub
repz
test
dec
push
and
iret
pop
loop
test
imul
mov
mov
decb
mov
mov
out
std
lea
inc
les
sbb
and
jle
or
arpl
and
add
out
mov
leave
pop
imul
cld
mov
stos
inc
aaa
orb
pusha
adc
shr
xor
adc
sub
test
push
sub
nop
sub
cmp
bound
mov
clc
add
jnp
ljmp
mov
inc
add
pop
ds
movsl
lods
dec
test
dec
sti
fs
xchg
add
iret
arpl
pop
mov
pop
jb
ljmp
rol
das
divb
or
jae
jnp
lea
ficomps
adc
inc
mov
scas
cmp
jo
aaa
xor
lcall
xor
sahf
adc
sbb
loop
and
inc
pushf
add
mov
stos
push
jge
popf
iret
shl
pushf
add
pop
or
xor
fstp
adc
xchg
mov
cmp
sbb
ljmp
jno
pop
jae
jl
xchg
stos
cmp
inc
jno
mov
xchg
aad
xchg
inc
jmp
popf
push
xchg
out
loope
jl
pop
aad
and
adc
xchg
daa
scas
pop
in
enter
outsl
adc
test
ja
push
movsl
and
out
mov
pop
fnstenv
in
orb
jae
mov
mov
mov
stos
mov
and
or
jecxz,pt
jp
in
clc
mov
pop
mov
lods
aad
mov
jg
pop
or
sbb
ja
adc
mov
pusha
scas
jbe
adc
pop
mov
jns
test
and
sub
dec
fcomp
or
jp
mov
add
hlt
mov
lods
cli
clc
xor
cld
shlb
pop
mov
add
cmp
inc
daa
xchg
push
sti
insb
adcb
push
sbb
sub
sub
pop
cld
loopne
loope
lret
xor
pop
add
jl
std
jnp
mov
je
idivl
aad
rorb
in
scas
jg
dec
mov
mov
enter
cs
add
cmp
pand
lret
dec
fcoms
dec
loop
add
xor
cmp
das
ds
insb
and
repz
pop
mov
add
pop
inc
xlat
sbb
out
adc
and
jg
inc
shll
jecxz
pop
icebp
lds
add
dec
cmp
cmc
out
sbb
lret
aas
pop
adc
nop
mov
mov
cmp
aas
jns
xchg
int
addr16
pusha
flds
int3
push
mov
loop
movsl
arpl
dec
in
adc
rcll
xor
lcall
pop
mov
ss
in
mov
inc
jge
movsb
repz
test
add
adc
sbb
adc
fsubp
pushf
loop
call
jmp
adc
addl
adc
jle
jb
xlat
or
and
or
xor
cs
adc
jle
daa
daa
mov
mov
testb
inc
cmpsl
stos
xchg
lret
inc
dec
outsb
xchg
xor
and
testl
sub
insb
lahf
jo
fwait
aaa
loope
je
cli
jge
mov
push
les
xorb
stos
xor
jae
and
popf
push
lcall
test
and
lds
mov
jo
loop
push
insb
lods
ret
mov
jnp
inc
jge
imul
into
and
arpl
inc
pop
and
in
dec
inc
je
rorl
or
notl
and
xchg
sbb
push
shr
mov
test
pop
addl
pop
and
enter
stos
pop
imul
out
orb
imul
fimull
shr
jne
and
rorb
mov
std
ja
mov
lret
aaa
test
sbb
jbe
lods
add
xchg
ss
out
xchg
jns
inc
push
mov
mov
sub
icebp
mov
sbb
mov
or
out
cmpsb
dec
xor
xor
mov
sbb
sti
jb
push
pop
rol
push
xchg
int
repz
rcll
inc
out
inc
imul
xor
jne
movsl
add
dec
jg
and
xchg
dec
pop
in
lods
aas
pop
push
jo
sub
pop
jns
lea
pop
dec
jg
jmp
pop
test
mov
decb
fiadds
pop
xlat
ret
adc
mov
hlt
aas
or
push
xor
xor
mov
out
divb
or
dec
mov
adcb
mov
mov
cld
mov
pop
jnp
mov
mov
fs
repz
fisttpl
lret
scas
rdtsc
test
les
mov
mov
jbe
mov
test
adc
sub
jae
ljmp
cli
mov
mov
mov
add
out
mov
and
cmc
nop
lods
mov
jg
pop
adc
jns
call
in
test
lock
dec
xor
or
dec
mov
movb
mov
cmp
inc
repnz
roll
mov
mov
cmp
add
scas
jmp
or
das
dec
cmpsb
and
lods
test
repnz
into
mov
sub
test
cmp
or
pop
or
jecxz
daa
gs
sub
repnz
je
fnstcw
pop
fnstcw
pop
lods
fscale
int3
cli
push
sub
adc
enter
lahf
sbb
push
push
xchg
cmp
mov
aas
dec
sbb
sub
add
addr16
test
leave
pop
ret
scas
and
hlt
cli
fmuls
adc
sub
and
leave
rep
data16
lock
mov
cmpsb
stos
cld
cltd
cmp
mov
xchg
insl
cmp
xor
push
or
push
and
push
dec
pop
push
jl
cmp
mov
and
cmp
scas
add
sub
and
dec
rorl
xchg
push
mov
negl
jnp
push
mov
and
xchg
or
inc
inc
sbb
mov
fmuls
es
push
shlb
lahf
or
repz
lods
lcall
fistl
fldt
into
mov
add
cmp
int3
popa
and
jp
addr16
jge
sub
sbb
or
ljmp
push
movsb
sbb
mov
out
push
shlb
lock
mov
int3
and
push
mov
out
int
add
cmp
ret
dec
cmp
xchg
daa
and
inc
dec
aas
je
mov
push
repz
push
cltd
mov
mov
stc
mov
lds
ja
dec
xchg
fimuls
out
pop
sub
mov
mov
pop
mov
mov
inc
in
inc
inc
sub
mov
inc
fisubrl
fcmovbe
jno
and
mov
in
dec
cmpsb
mov
inc
mov
inc
jnp
aam
nop
cmp
jns
ret
dec
add
icebp
or
push
mov
out
sbb
sbb
lods
sbb
fst
and
mov
cmp
jmp
push
ljmp
adc
lds
in
cmpsl
gs
popa
shll
lret
mov
fisubl
push
dec
mov
xchg
adcl
lods
jge
pusha
js
sub
xor
ror
mov
xlat
jo
or
ret
jmp
pop
in
cmp
mov
rcr
jmp
lahf
loope
loope
daa
sahf
cmc
add
pop
sub
xchg
inc
sub
in
jns
imul
hlt
outsb
mov
je
adc
loopne
adc
inc
xor
ret
cmc
outsl
lret
mov
xchg
je
pop
in
mov
mov
add
pusha
shrl
idivb
movsl
sbb
rcr
fadd
mov
jo
stos
inc
mov
jecxz
mov
mov
das
negl
pop
popa
dec
or
add
ror
fildll
loop
mov
ja
xor
mov
out
mov
sub
out
sbb
rcll
imul
sbb
cmp
and
pop
and
shl
sbb
mov
sub
jne
sbb
mov
add
test
rcr
into
les
lahf
fs
ljmp
popa
aaa
and
push
cltd
add
sub
adc
jo
shr
fnstsw
mov
int
jns
pop
in
dec
fisubrs
arpl
pop
mov
mov
das
xor
icebp
mov
xchg
bound
pop
popa
inc
aam
data16
mov
jl
and
lret
add
stos
enter
and
leave
stos
fidivl
shl
pushf
sbb
imul
popf
lret
rol
cmp
xor
xchg
stos
cs
fcoms
adc
fsubs
pusha
ret
aas
popfw
adc
xchg
push
jecxz
clc
test
stc
loop
lea
jg
adc
lds
int3
inc
ljmp
in
dec
cmp
pop
pushf
inc
mov
push
adc
in
adc
subl
addb
rcl
repnz
adc
sarl
xchg
mov
pop
sub
cmp
je
or
hlt
lret
aaa
xchg
fldt
lods
dec
scas
mov
mov
push
xor
or
or
das
mov
popa
std
cmpl
pop
scas
hlt
push
mov
rcrb
cld
ss
inc
jge
push
push
inc
ss
imul
outsl
adc
xchg
arpl
fcmovu
xchg
lahf
jg
sub
roll
out
sbb
sti
daa
mov
jns
test
push
cltd
nop
imul
jo
pop
jge
push
mov
and
es
stos
inc
fistl
pop
dec
and
mov
dec
pop
mov
mov
cmp
jl
mov
lds
sub
cltd
pop
rol
enter
xor
movsb
lret
lret
sbb
add
jbe
lods
inc
inc
sub
xor
movsl
adc
test
iret
outsb
aas
or
and
xor
pop
cltd
and
mov
cld
inc
ret
bound
sahf
movb
mov
stos
testl
das
jnp
test
rorl
fcmovu
mov
jns
fisubs
push
in
sbb
cmp
xchg
clc
std
test
sub
pushf
jnp
mov
mov
stos
cmpb
into
jecxz
and
dec
pop
push
cmpsl
push
leave
or
lods
xchg
pop
add
mov
negb
lods
xchg
push
mov
out
jmp
push
add
cmp
das
dec
pop
xchg
or
cmc
xchg
mov
es
mov
add
pusha
ja
mov
cs
movsl
add
xor
push
sub
and
dec
pushl
inc
push
sub
into
cmpsl
hlt
jecxz
int3
jg
daa
jae
loop
xlat
leave
xchg
data16
lock
arpl
shll
cmp
in
dec
sub
jne
scas
mov
test
add
fisubs
test
pop
bound
xchg
dec
or
pop
jae
pusha
loope
mov
and
sbb
push
loopne
and
cli
push
inc
test
sahf
xchg
adc
movsb
jns
xchg
fdivp
inc
cmp
icebp
cmp
sub
or
inc
aas
xchg
daa
fdivl
out
fnsave
loopne
xchg
xchg
loopne
cmpl
mov
push
cs
insl
mov
mov
movsl
adc
add
fsub
repnz
scas
push
push
cmp
je
jno
sarb
push
pop
mov
ret
pop
inc
cmp
imulb
mov
and
gs
xor
xor
fistps
outsl
add
rorb
je
mov
hlt
push
inc
mulb
sub
inc
jo
das
inc
inc
mov
or
or
fs
cmc
or
mov
sub
jmp
jns
mov
sarl
and
jae
nop
bnd
push
and
aad
lret
movsl
mov
xchg
xchg
xor
mov
ds
pop
movsl
push
add
sbb
and
sbb
push
adc
jmp
push
add
lods
arpl
imul
mov
mov
jl
into
or
lods
mov
aam
jmp
es
lea
add
lods
aad
movsb
out
sbb
call
test
scas
mov
in
sub
incl
pop
cltd
xorb
sbb
push
dec
movsl
push
push
jl
mov
sub
stos
inc
sbb
or
push
subb
push
stc
sti
cmpsb
repz
into
xor
leave
mov
call
pop
out
test
int
test
mov
push
ret
das
imul
cld
aaa
bound
xchg
adc
shrl
push
mov
and
xchg
lret
pop
add
dec
dec
adcb
aam
aam
stc
xor
shll
xor
or
lahf
dec
push
inc
in
push
fyl2x
inc
cmp
dec
cmovp
jmp
test
add
outsb
add
ljmp
xor
fistl
xchg
jge
xchg
aad
mov
stc
loopne
lcall
cmp
jnp
test
dec
test
aaa
jp
cmp
sub
push
cwtl
push
sar
pop
outsl
subb
outsb
inc
jmp
js
mov
xor
push
out
xchg
mov
jecxz
in
in
ret
mulb
pop
mov
stos
ja
pop
xor
aaa
std
xor
jnp
and
mov
sub
xchg
mov
push
nop
bound
insl
pop
sbb
call
in
ds
mov
nop
insl
sbb
and
scas
push
dec
scas
stos
pop
or
loopne
sub
lret
adc
adc
and
mov
mov
and
push
pop
jle
fsubrl
mov
push
test
pop
jmp
dec
lcall
dec
push
outsl
lcall
out
outsl
fisubrl
rcll
rolb
push
je
test
push
jae
sahf
testl
push
mov
push
outsl
loope
jb
xor
jp
jg
cmp
xchg
cmp
add
out
pop
cmc
xor
mov
mov
xor
mov
and
imul
mov
shlb
into
mov
ficoms
jp
sarl
in
fdivl
cwtl
push
leave
adc
cmp
push
mov
jnp
sub
push
out
inc
cmp
inc
fcmovu
push
and
les
pop
ja
int
loope
bound
pop
mov
push
pop
test
dec
xor
jmp
addr16
mov
lock
mov
push
cli
cmpsl
das
jge
pop
xchg
loopne
sub
scas
stos
je
stos
dec
sub
jg
add
jo
ljmp
into
decl
icebp
xchg
inc
cmp
fisubs
hlt
jbe
call
mov
mov
cwtl
popf
in
xchg
mov
mov
dec
loope
cld
div
add
jmp
jae
imul
subb
rorb
addr16
and
mov
in
push
hlt
push
inc
xchg
cmp
lahf
push
or
rcl
cld
xor
and
jmp
inc
mov
mov
add
in
xchg
insl
call
push
int
int
jbe
cld
ret
stos
imul
cmp
mov
out
aas
cmp
mov
xchg
cmp
test
jg
and
jns
xlat
push
gs
es
fcomip
cmc
mov
inc
xchg
rclb
jmp
out
pop
nop
and
and
test
jnp
jnp
sub
mov
dec
mov
lods
arpl
and
in
jge
rcr
push
dec
fildll
sbb
pop
ds
inc
hlt
ds
add
jo
mov
lcall
mov
in
stc
out
loope
clc
cmp
into
push
adc
mov
test
add
and
or
aad
lea
sbb
out
mov
js
inc
xor
imul
cmpsb
repnz
pop
xchg
sti
sub
push
or
pop
jnp
pushf
in
cld
rorb
push
std
rcll
mov
or
jg
adc
xlat
std
dec
mov
xor
dec
jg
imul
lods
nop
sub
sbb
aas
arpl
jae
pop
addr16
pushf
ret
add
push
xor
dec
loopne
movl
gs
or
dec
cmp
js
dec
jno
sbb
daa
dec
dec
lret
ret
mov
insb
icebp
fsubrp
mov
pop
adc
hlt
sbb
lret
push
dec
fisubrs
inc
push
xor
aad
and
push
xor
xchg
imul
dec
sub
sub
lds
adc
out
nop
cltd
imul
ficompl
cmp
lcall
or
es
push
sahf
adc
addr16
pop
movl
sbb
cmp
push
insl
lods
cmp
mov
scas
inc
fadds
jmp
inc
mov
xor
test
sbb
in
push
xor
in
movsb
not
addb
ret
mov
aas
ret
pop
stos
fidivl
shl
arpl
mov
add
jns
sub
outsb
imul
xchg
xorl
or
out
push
mov
lcall
movsl
ljmp
ror
daa
stos
push
pop
inc
jmp
mov
mov
ret
nop
mov
sbb
xchg
sub
dec
and
adcb
adcl
mov
ror
push
or
loop
jo
in
push
imul
jl
push
and
push
insb
in
jb
xor
ret
mov
or
push
orb
scas
stos
dec
add
ret
sbb
dec
push
or
xchg
mov
mov
jecxz
mov
lahf
xchg
popa
aad
fidivl
lods
outsl
fwait
in
xchg
xchg
lods
icebp
and
sti
insb
in
pop
xorl
aam
pop
hlt
leave
mov
mov
push
mov
or
jecxz
fdiv
cmp
pop
push
rorl
lock
xchg
push
or
arpl
arpl
jg
cmc
push
out
jne
fdivl
fs
add
xchg
andl
call
call
into
popa
clc
mov
in
mov
rorl
ljmp
pop
cmpl
lret
int3
loopne
sub
jb
mov
jae
scas
das
cmp
sbb
lds
adc
pop
push
adc
dec
jg
mov
cmpb
push
adc
mov
dec
and
or
jbe
mov
shll
lea
pushf
mov
pop
pop
and
mov
jle
mov
add
pop
hlt
mov
push
mov
scas
cld
iret
mov
enter
int
enter
pop
and
xchg
sub
sahf
rcrb
or
or
dec
jecxz
dec
repnz
jno
mov
xlat
and
jae,pn
xor
jne
mov
mov
xor
pop
aam
or
jbe
je
mov
push
xor
arpl
inc
cwtl
xchg
cmc
sahf
flds
mov
push
add
lret
test
out
lea
sbb
call
test
dec
push
mov
adc
mov
das
loop
ljmp
ds
dec
sub
jne
push
xor
repnz
or
fwait
pushf
jge
mov
es
pop
jb
outsl
cmpsb
dec
hlt
add
xrelease
sbb
cwtl
mov
div
dec
jle
cs
out
cli
inc
jle
xor
lods
cmpsl
cmpsb
pop
cs
ss
mov
xchg
and
add
fists
or
xchg
sbb
jecxz
dec
cs
daa
jno
cmpsb
pop
sub
bound
sahf
mov
orl
pop
test
addr16
xchg
push
inc
mov
gs
xor
push
ja
jne
std
mov
xor
xchg
vunpcklps
fnstsw
aam
les
mov
pop
mov
mov
jb
push
or
arpl
xor
sub
or
adc
js
xlat
stos
and
and
or
fwait
out
lds
mov
call
insb
mov
jp
adc
leave
sbb
sbb
inc
sub
jnp
jae
sub
imul
repz
movsl
adc
jnp
dec
addr16
movsb
pop
out
in
out
enter
push
mov
fisttpll
ret
movsb
iret
stos
xchg
xchg
fstpl
jmp
in
rol
inc
pop
movsb
test
iret
push
xchg
push
out
dec
mov
outsb
fildl
push
dec
cld
pusha
xlat
outsb
or
popf
sub
test
inc
jns
lds
loope
jmp
movsb
mov
add
pop
xor
rcr
jns
bound
sbb
sub
xor
jo
pop
sbbb
mov
push
ja
std
jne
pusha
lds
sbb
clc
mov
ficompl
outsl
xchg
pop
imul
ja
dec
and
push
cmc
mov
push
test
gs
mov
aaa
or
xchg
cmpsl
popa
idivl
sub
subb
cli
sub
adc
add
addr16
sbb
mov
jae
dec
int3
rcrb
xorb
xchg
adc
rolb
dec
in
sysenter
sub
out
loope
and
int3
add
imul
cltd
lods
stos
mov
mov
push
xchg
je
andl
cwtl
pop
ljmp
inc
mov
daa
inc
sub
cmp
ljmp
pop
pop
inc
cld
stos
cltd
dec
and
xchg
push
sbb
sbb
add
and
mov
lds
es
loope
aad
jmp
adc
inc
into
imul
adcl
call
jne
xchg
imul
testl
add
xchg
in
mov
adc
adc
pop
ja
fldcw
aad
cmpsb
popf
xor
sarb
arpl
adc
xor
decb
jmp
aam
xor
sub
push
dec
fwait
rorb
xor
test
jecxz
add
sub
or
cmpsl
test
sub
ljmp
nop
dec
jne
xchg
enter
xorl
pop
movsl
ja
stos
ljmp
dec
push
mov
add
jnp
add
shr
push
dec
cmp
and
mov
and
in
push
dec
or
in
int
adc
inc
push
fisttps
das
adc
ja
or
add
mov
popa
xchg
std
cmc
loop
jo
mov
mov
dec
inc
xchg
scas
aaa
sub
mov
jle
pop
sbb
dec
adc
out
dec
shlb
std
sub
outsb
jmp
push
pop
aas
shlb
xlat
hlt
sbbb
add
sbb
sub
mov
jo
aas
leave
inc
adc
sub
and
repnz
jle
xor
sub
jb
lret
add
push
in
dec
lock
adc
jge
mov
aad
sbbb
or
push
xor
push
pop
addl
sub
test
xchg
jae
mov
add
andb
and
aam
out
dec
jne
out
add
mov
xchg
mov
rcr
mov
mov
push
xlat
movsb
cwtl
dec
mov
push
xor
test
iret
test
sarl
and
push
push
int3
jmp
push
insl
jae
and
lea
testl
add
lahf
loopne
scas
pop
outsb
sbb
push
sub
xor
jbe
or
imul
lret
add
dec
fildl
sti
fsubr
and
dec
aam
adc
push
into
mov
ficomps
mov
or
mov
fs
sbb
sub
mov
add
lods
cmp
sti
adc
shlb
sbb
les
xchg
lods
les
sub
outsb
sbb
mov
in
lds
pop
lds
pop
inc
xchg
xor
repz
xchg
mov
call
mov
cwtl
adc
lret
bound
data16
pop
inc
out
mov
sub
mov
ret
xor
call
inc
popa
mov
pusha
xchg
sub
xlat
bound
jbe
sbb
jo
mov
incb
inc
xchg
in
aaa
divb
scas
or
and
mov
repz
add
mov
push
stos
sahf
mov
xchg
mov
sbb
or
fldenv
xor
cltd
lret
lcall
out
shrb
and
roll
sub
mov
pop
add
inc
out
aaa
bound
inc
push
icebp
mov
inc
es
lds
adc
mov
inc
xor
mov
adcb
or
mov
sarl
orl
jge,pt
cltd
outsl
pop
cmp
or
push
sbb
lods
mov
adc
jp
fwait
inc
andl
jne
mov
cmp
sbb
in
insl
ja
je
jmp
mov
pop
cmp
jge
add
push
or
into
insl
jp,pt
js
or
mov
loop
mov
loop
repz
xchg
es
and
data16
jo
push
mov
mov
xchg
xorb
or
and
mov
jno
aam
jl
sti
lcall
jb
jp
inc
sahf
jl
pop
out
dec
sub
fadds
mov
ja
xor
sbb
lret
pop
inc
lret
push
in
adc
push
sbb
sub
inc
in
push
andb
and
pop
pop
and
data16
lret
in
out
xor
and
iret
and
sub
and
int3
push
ds
cmc
cmpb
push
adc
pop
mov
cmp
int3
pop
inc
sub
aad
fisttpll
lahf
stos
movsb
stos
fidivrl
dec
push
jnp
push
into
cmc
in
and
insb
mov
cmp
jmp
dec
push
stos
inc
xor
pop
aad
mov
mov
mov
call
cmp
int
sbb
jae
mov
sub
gs
lret
scas
jo
cltd
sub
cmc
mov
xchg
sbb
dec
dec
mov
test
repz
push
pop
add
insl
jnp
loopne
push
das
leave
divl
xchg
mov
lret
jge
das
popa
mov
dec
jno
outsl
push
dec
pushf
decl
sbb
cwtl
xorl
jmp
inc
pop
adc
xor
andps
lret
icebp
movsb
lret
call
sarb
arpl
mov
addb
loopne
fstps
sbb
xchg
jno
push
ljmp
xchg
icebp
es
leave
mov
ljmp
push
cmpsl
out
fwait
xor
jmp
sbb
daa
adc
inc
cmp
adc
xor
mov
push
jnp
lock
sbb
adc
fcompl
dec
pop
cmp
inc
loopne
pop
test
shll
cmp
pusha
or
and
pop
mov
sti
mov
add
pop
or
cli
sti
in
add
pop
jo
mov
test
aas
mov
xchg
mov
sub
push
sub
jl
popa
lds
push
jle
or
xlat
arpl
push
adc
cmp
pop
aas
xchg
push
dec
mov
jg
out
stc
in
arpl
sbb
mov
cmp
inc
sbb
cli
jae
adcb
lret
movsl
cwtl
ret
cmp
fdivrl
mov
jo
inc
loopne
inc
sarl
xchg
mov
shrb
xor
or
mov
mov
gs
push
mov
cwtl
and
jg
mov
xor
leave
jle
sbb
mull
movsb
stos
bound
in
dec
pop
fadds
insb
xchg
inc
cmpsb
mov
adc
in
fisttpl
pop
lods
sub
leave
and
add
jns
popf
dec
js
dec
ss
das
jb
pop
mov
cltd
mov
test
shll
inc
xor
lcall
lds
xchg
outsb
gs
xchg
mov
inc
xchg
daa
ret
test
psubusb
sub
fiadds
mov
pop
int
pusha
mov
inc
adc
std
jo,pn
and
int
popf
pop
shl
push
inc
mov
push
outsb
dec
outsl
sbb
jmp
dec
mov
repnz
mov
adc
sti
xchg
add
cmp
mov
or
adc
xor
ds
cmpsb
xor
shlb
out
sbb
ss
xchg
shlb
inc
xchg
and
jbe
xchg
sbb
sub
xor
jmp
fiadds
jg
and
jns
ret
and
jg
inc
xchg
scas
ds
pop
comiss
xor
andb
dec
sbb
xchg
xorb
add
rclb
jnp
or
test
lret
lods
pop
in
out
ret
int3
lods
adcl
jo
cmp
mov
pop
push
jge
jp
push
jns
pop
xchg
sbb
ljmp
les
xlat
mov
push
jl
mov
movsl
loopne
cmp
adc
outsb
jne
ljmp
push
or
xchg
jg
pop
in
pop
push
ljmp
repnz
push
les
rorb
cltd
lea
sbb
push
dec
cld
cmp
mov
movsl
mov
sub
jle
aas
jbe
sub
dec
sub
mov
adc
cmp
in
das
pop
and
mov
hlt
lcall
lock
xor
sbb
cmp
lds
enter
int3
add
cwtl
bswap
jne
pop
rcrb
mov
shll
jbe
call
lock
add
inc
inc
mov
test
in
lods
jno
arpl
mull
loopne
out
movsb
aad
adc
rcll
insl
decb
xchg
cli
test
cmp
scas
icebp
lock
mov
leave
cld
push
or
stc
jl
add
fcoml
fmul
in
ret
jb
sub
xor
and
aad
dec
mov
fidivs
xor
addl
dec
pop
xor
push
cld
dec
xchg
ds
and
mov
and
xor
or
nop
clc
jae
test
cld
xchg
push
mov
push
rcll
cli
push
mov
orb
xchg
xor
jp
mov
jno
xchg
jecxz
enter
or
jge
bound
pop
sahf
aaa
sbb
into
mov
add
xchg
inc
sar
jae
lea
dec
add
arpl
mov
lret
push
mov
cmc
in
fldt
xchg
pop
lods
sbb
mov
clc
aas
mov
repz
cmp
sub
adc
cmp
pop
insl
je
lods
xor
xor
push
inc
cmp
inc
jb
and
pop
arpl
insl
jns
and
insb
pushf
jae
das
inc
or
out
lret
or
adc
cld
inc
xchg
js
mov
lcall
inc
push
jge
shr
sub
sbb
adc
jmp
movsb
test
lock
cmp
movsl
or
and
int
pop
jnp
mov
jg
adc
cmp
jmp
and
flds
movb
push
mov
mov
push
xor
ret
sbb
and
mov
out
sti
in
mov
in
sbb
sub
sub
call
pop
cmp
in
ljmp
movsl
add
pop
shll
cmp
add
xorl
pop
pop
inc
jle
std
ja
cmpsl
sti
lret
sbbl
inc
xchg
scas
test
cmpsb
inc
sbb
dec
sahf
sahf
das
into
lds
dec
pop
in
arpl
sti
les
jmp
dec
dec
fcoml
cmc
repz
push
adc
mov
insl
add
push
push
sbb
sub
pop
mov
xchg
mov
mov
ret
mov
xchg
repz
clc
outsl
lret
mov
aad
setnp
ds
lcall
testl
cs
test
out
or
xor
cwtl
pop
adc
or
inc
jno
cs
lea
insb
xchg
xchg
ret
out
push
jbe
mov
jl
orb
nop
or
lahf
in
jno,pn
pop
pusha
pop
mov
andl
sub
movsl
js
std
insb
mov
enter
aaa
dec
ljmp
or
cmp
lock
stc
dec
inc
push
xchg
pop
dec
mov
jmp
sbb
or
pop
scas
ss
adc
adc
dec
in
sar
adc
adc
cwtl
bnd
mov
fucom
testl
push
jg
push
sbb
mov
sahf
pop
hlt
iret
aaa
fstps
scas
dec
mov
cmp
mov
fsubl
es
repnz
lahf
and
push
mov
pop
pop
and
addl
test
lret
pushf
shll
lret
fs
pop
push
loope
popl
mov
mov
xor
mov
pop
mov
call
pop
inc
sub
push
fimull
or
or
jno
iret
sbb
xchg
push
loop
aad
lret
movsb
lret
out
mov
mov
aad
dec
negb
xchg
test
cwtl
push
jb
imul
lret
fwait
cmp
jmp
dec
loop
movsb
jecxz
scas
jno
out
xor
orl
mov
xchg
sub
std
inc
sbb
out
adc
cmc
lcall
mov
sub
ljmp
dec
sbb
pop
jae
shll
cmc
sub
mov
mov
dec
sub
loop
push
mov
and
cmp
jne
ss
and
imul
push
pop
push
cmp
push
pop
pop
fadd
fs
mov
shll
insb
sub
movsb
subl
mov
shlb
shlb
push
repnz
mov
sarl
fists
popa
jle
lea
lret
data16
ret
sbb
xor
jecxz
jnp
push
pop
add
mov
subl
cmp
sbb
int
xor
mov
in
scas
pushf
jl
cmpsb
cmpsb
jb
popf
and
xchg
xchg
ja
mov
and
push
xlat
or
pop
push
adc
jo
mov
xchg
paddd
lods
mov
paddb
sahf
jns
test
mov
lahf
psubb
out
insb
push
mov
push
stos
adc
xorb
in
aas
sbb
xchg
xchg
cmc
pop
push
or
adc
cli
sbb
dec
lcall
pushf
sbb
xchg
dec
inc
inc
mov
fs
repz
dec
dec
cmp
icebp
pop
sbb
mov
out
inc
dec
mov
fsubp
mov
dec
pop
cmp
ret
xor
ret
jp
push
xor
out
pop
fnstcw
loopne
mov
fstps
lods
xchg
xchg
dec
jecxz
imul
arpl
aaa
push
xor
sahf
and
add
pop
loope
and
mov
fimuls
adc
pop
sub
jle
sbb
mov
xor
and
add
lds
mov
sbb
pop
xchg
repnz
jns
push
mov
jo
jmp
scas
data16
cli
shl
xchg
sub
xchg
stos
add
inc
fwait
call
out
push
stos
daa
mull
nop
jne
imul
cli
jg
mov
repnz
jmp
and
sbb
aam
cmpsb
add
fiadds
pop
iret
jle
cltd
repnz
pop
add
xchg
imul
loop
clc
add
inc
enter
insb
roll
out
sbb
jns
aaa
aas
les
adc
xor
pushf
pop
push
imul
sahf
popa
leave
sti
fcmovu
mov
test
or
and
adc
int3
fstps
daa
ss
je
xchg
sub
mov
mov
aad
push
out
jp
pop
adc
shrl
ja
fisttpll
jb
sti
pop
in
lahf
pushf
pop
aam
sahf
js
nop
mov
xor
loop
cltd
mov
ficoms
lcall
add
adc
aaa
mov
mov
dec
push
rcrb
xor
fmuls
xor
test
cltd
insl
call
ss
loope
xchg
cmp
test
cmpl
lods
xor
and
out
leave
sarl
xor
leave
in
dec
mov
sbb
jne
nop
leave
out
mov
stos
repnz
das
jnp
inc
repz
xor
jno
test
iret
xchg
popa
loope
std
jge
push
int3
imul
fdivp
inc
jecxz
sbb
sbb
cld
pop
pop
adc
xchg
and
push
std
add
push
or
data16
sbb
dec
sbb
push
xchg
sub
in
xorl
lahf
pop
and
add
cmp
rcll
out
ss
mov
xchg
in
sub
mov
jmp
lods
sti
inc
mov
or
out
xor
iret
negl
mov
adc
lds
fsubrs
xor
sub
and
jne
int3
fcmovbe
arpl
jnp
inc
push
outsb
xchg
filds
ja
mov
arpl
push
adc
into
mov
mov
fwait
repnz
inc
add
mov
dec
sub
push
jle
mov
sbb
imul
adc
leave
cmpsl
mov
pop
mov
push
add
cmpsb
dec
iret
sub
imul
xor
icebp
adc
push
data16
lea
je
aaa
mov
or
mov
push
aad
or
cmp
inc
call
cmp
sbbl
fwait
loope
mov
addr16
lret
loope
sbb
int
test
pop
into
mov
movsl
add
sub
lds
lret
dec
ret
mov
divl
xchg
in
sbb
sti
mov
pushf
push
call
xor
testb
jne
push
xchg
inc
or
scas
std
fbld
jne
jle
call
test
push
mov
insl
dec
stc
lcall
xchg
ljmp
mov
xor
subl
or
adc
push
sbb
fwait
and
push
mov
js
inc
test
gs
xlat
or
jmp
ds
insl
fidivs
or
mov
jp
cmp
daa
js
shl
mov
jb
decb
sub
dec
rcll
fucom
xor
fsts
push
mov
ret
test
add
pusha
inc
insb
and
add
xchg
push
xchg
jp
jg
fmull
out
test
pop
scas
adc
jle
adcb
add
fmull
sahf
push
inc
cmp
cmpsb
loope
cmp
shlb
test
or
sbb
movsl
sub
rcrb
lret
hlt
stos
jge
fidivs
into
jp
mov
pop
inc
xor
cmp
add
fildll
cmp
dec
shl
fs
in
xchg
loop
popa
mov
in
cmp
mov
push
or
mov
xor
lock
xor
cmp
les
inc
mov
pop
outsl
dec
and
dec
cld
add
loope
xchg
xor
mov
inc
fs
pop
ds
adc
lret
repnz
push
movsb
inc
mov
xchg
jbe
pop
test
lret
mov
push
fstpl
cmp
xchg
push
xor
inc
bnd
push
repnz
cmp
push
xchg
or
pop
test
or
mov
mov
das
sbb
mov
jle
aam
cmp
lcall
push
xchg
imul
push
push
mov
sti
pop
mov
stos
fdivrs
outsb
add
xor
test
lea
arpl
cmp
lea
mov
aad
dec
je
and
repnz
repz
scas
jg
lods
jmp
sahf
ds
adc
stos
push
push
loopne
xchg
fwait
cmc
add
push
cmp
or
aas
fnstsw
xor
push
pop
aaa
rorl
aam
inc
out
bound
pop
push
lock
mov
and
xor
and
push
sbb
fsubrl
inc
jns
lock
cmc
xchg
xchg
mov
pop
push
hlt
cwtl
push
pop
test
iret
fs
gs
add
inc
pusha
outsl
in
in
cmp
jae
out
mov
fists
cmc
nop
push
adc
dec
filds
mov
aad
cmp
mov
in
jmp
rclb
test
xlat
movsb
mov
call
xor
pop
xlat
jg
lods
mov
popf
pop
adc
mov
push
cmp
aad
nop
jmp
es
mulb
mov
cmpl
mov
roll
fldenv
pop
dec
pop
es
icebp
sub
das
sub
loop
pop
pop
cmp
inc
push
xor
mov
sti
pop
xchg
inc
dec
adc
test
and
das
enter
test
cltd
jl
js
addb
stc
cli
dec
pop
pop
xor
cwtl
sub
or
fisubrl
std
xchg
push
dec
insl
adcl
sub
jnp
outsb
fmulp
int
jmp
jb
clc
or
xchg
and
xchg
hlt
mov
lock
dec
push
sbbb
sti
loope
inc
out
xor
xor
shll
mov
pushf
outsb
ds
xchg
mov
push
aas
mov
lods
inc
aad
dec
movsl
cmp
sahf
xchg
lods
inc
lcall
and
cmp
daa
mov
js
jns
mov
adc
into
inc
cmpsb
lds
xor
xchg
test
out
hlt
or
push
iret
mov
jbe
bound
into
aas
jg
insl
aas
push
cmp
into
int3
pusha
and
sub
scas
mov
cmpsl
xchg
jle
mov
adc
mov
into
sbb
sbb
xor
mov
das
or
mov
stos
lret
xchg
int
adc
mov
and
stos
cwtl
aam
xchg
pop
lcall
adc
scas
lods
xor
cltd
mov
fs
fidivl
push
push
xor
mov
adc
stos
int
pop
in
sbb
mov
jbe
test
mov
push
push
cmpsl
xchg
xor
mov
in
movsb
jbe
and
dec
xchg
or
cmpl
sbb
aam
jb
pop
mov
mov
arpl
adc
jo
adc
jecxz
jbe
bound
sbb
mov
loop
in
mov
xor
sahf
repnz
sub
into
mov
dec
test
gs
xorb
out
xor
es
data16
test
js
nop
std
rcrb
mov
mov
adc
jne
fldl
outsb
fwait
add
push
adc
add
xor
pusha
in
xor
inc
push
add
xlat
ja
sbb
xor
mov
ja
jecxz
test
mov
sbb
cmp
adc
scas
lret
pushf
loopne
cld
xchg
mov
cmp
insb
push
lods
jmp
push
push
and
mov
jl
nop
fistpll
push
je
sub
repnz
shrd
gs
dec
mov
xchg
pushl
loop
jmp
mov
dec
jecxz
rcll
xlat
push
xchg
adc
dec
xor
push
lds
test
sti
push
jp
outsb
repnz
cmp
cltd
mov
cmpsl
dec
push
ret
mov
aad
ljmp
add
outsb
loopne
dec
add
push
push
loopne
shll
xorb
fstl
adc
push
dec
mov
repz
outsl
xor
mov
cmp
out
scas
ljmp
mov
adc
in
sbb
rorl
jge
sbb
cld
xor
pcmpeqd
hlt
clc
imul
popa
ljmp
lds
scas
xchg
in
loop
mov
std
cmp
xchg
stos
sbb
mov
mul
xchg
ljmp
ja
xchg
out
xor
test
shlb
push
mov
xchg
hlt
mov
push
shlb
mov
jge
pop
paddw
push
fstl
mov
adc
les
mov
xor
push
popf
stos
je
mov
adc
pop
lea
sbb
mov
jg
inc
std
or
xlat
aam
mov
cmp
decl
adc
lock
adc
lcall
or
icebp
out
shll
leave
ljmp
mov
add
loopne
daa
pop
imul
mov
xchg
push
mov
mov
in
push
mov
mov
fnsave
inc
jl
rol
mov
fs
cld
xchg
inc
les
dec
popf
outsb
pop
adc
gs
aam
sbb
mov
out
sbb
fwait
pop
in
pop
cld
and
loopne
das
jge
out
ja
sub
test
push
in
jge
mov
dec
daa
push
fcoms
stc
cmp
and
fmul
dec
sub
mov
mulb
ret
imul
mov
orl
pusha
mov
stos
jae
push
mov
bound
test
ja
add
lahf
shr
sbb
out
mov
sub
mov
scas
ret
test
lods
pop
mov
adc
pop
repz
ljmp
fwait
popf
shll
xor
and
mov
movb
mov
sub
xchg
pop
push
outsl
lret
lret
lds
and
out
lret
push
adcb
ja
add
test
stos
es
sub
push
xor
cmp
and
stc
pop
mov
mov
cmp
adc
mov
imul
jmp
mov
push
xorl
mov
and
or
dec
loope
pop
popf
stc
adc
jno
jle
loopne
ds
int
imul
mov
ss
cmp
or
out
loope
jp
enter
mov
frstor
test
pop
pop
sbb
mov
cmp
lods
adc
inc
adc
mov
xchg
sub
imul
sbb
push
out
inc
mov
adc
dec
mov
mov
mov
sbb
jg
inc
ja
mov
test
cld
mov
push
xor
shl
xor
test
stos
icebp
jg
mov
insl
sub
or
mov
push
movsl
stc
or
inc
decb
insb
loope
inc
pop
stos
xchg
mov
push
mov
adc
fistps
rolb
sbb
xor
shll
dec
call
sub
pop
adcl
ja
cmc
in
call
pop
xor
sub
sub
mov
nop
shl
js
dec
out
add
push
mov
xchg
imulb
lods
xchg
les
inc
dec
xchg
push
call
add
gs
shl
and
adc
aam
mov
insl
aas
xchg
pop
int3
cmp
add
outsl
mov
out
ret
jbe
add
test
mov
shrl
pop
xchg
fidivrl
cmpsb
lahf
aas
sbb
pushf
aad
movsb
xchg
push
out
mov
fcoml
cwtl
pop
data16
cli
call
popa
jp
insb
add
mov
xor
les
lret
jnp
jno
xchg
call
xchg
cmp
daa
ss
fisubrl
cmp
out
mov
mov
sahf
push
aas
mov
lret
adc
add
es
add
jbe
loope
leave
das
test
mov
pop
lock
inc
in
jno
ja
addl
hlt
xchg
in
fsubr
adc
xlat
add
das
mov
xchg
cmpsb
pop
in
aaa
in
cmpl
sbb
push
arpl
arpl
ds
pop
jmp
mov
out
stos
outsl
jmp
dec
lret
popa
call
xchg
rol
std
xchg
movsb
insl
bnd
icebp
adc
jecxz
addr16
inc
mov
lcall
clc
lcall
dec
leave
in
or
lods
lds
ret
xchg
adc
xchg
rcrb
xor
pop
add
out
dec
jg
adc
loop
repnz
pusha
add
push
fidivl
in
mov
or
mov
ja
xor
jmp
jmp
pusha
sbb
int
push
adc
movsl
xchg
push
cmp
js
push
in
shrb
out
sbb
jg
pop
jbe
cmc
cmpsb
adc
sbb
fucomp
inc
jp
repz
daa
fwait
pop
lahf
in
push
and
lret
cmc
mov
mov
sbb
jb
adc
mov
cmp
dec
ss
inc
movsb
push
dec
test
mov
jmp
jl
scas
into
aam
pop
daa
loop
and
pop
xchg
in
dec
outsb
pop
mov
cld
ds
stos
loopne
xchg
push
cmp
movsb
sarb
sahf
lods
jnp
outsb
fidivrl
add
mov
dec
add
sub
aam
jne
sub
lcall
jne
int
repnz
lret
pop
cwtl
or
inc
mov
sahf
arpl
sub
in
xchg
dec
mov
sub
mov
dec
sbb
and
gs
scas
mov
cli
pop
sbb
cmp
sub
out
and
rol
push
std
or
orl
sbb
out
fldenv
in
jb
outsl
inc
ljmp
cmp
mov
push
addr16
add
rorl
decl
loope
lods
lcall
leave
cld
dec
dec
sbb
movsl
pop
pop
pop
stos
arpl
dec
cmpsl
push
lea
aam
sub
mov
stos
inc
lahf
push
inc
ljmp
push
mov
mov
dec
imul
iret
rclb
insb
jmp
fs
push
test
ret
push
mov
nop
and
add
adc
shll
sbb
inc
adc
js
popa
or
cmp
add
sbb
popf
mov
int3
test
cld
into
and
int3
inc
sub
lahf
xchg
je
cmc
loope
fs
xchg
es
dec
mov
scas
sbbl
push
mov
jmp
outsl
cli
push
test
jb
sbbb
sub
sbb
sar
xchg
ja
lahf
or
dec
mov
push
dec
mov
pop
sbb
iret
popa
cmp
or
outsb
mov
pop
xor
lock
push
mov
push
pop
mov
dec
es
pop
imul
dec
or
adc
lahf
out
int3
std
push
add
pop
lds
push
adc
dec
sub
push
xchg
mov
sbb
sbb
inc
pop
lds
mov
pop
arpl
push
pushl
popf
dec
test
pop
out
xchg
jp
push
loopne
mov
jmp
mov
movsl
imul
jecxz
bound
ljmp
xlat
fs
ljmp
fs
xchg
push
fidivs
mov
insb
jo
push
mov
pop
dec
int
icebp
push
pop
shlb
sub
std
sub
and
ljmp
adc
and
mov
repz
shrb
jg
inc
pop
int3
lahf
jae
xchg
sub
inc
inc
out
dec
out
std
neg
and
cmp
pop
sub
and
in
jnp
les
shl
stc
inc
enter
lret
mov
aaa
leave
mov
and
xchg
insl
call
xchg
pop
stos
imul
jne
adc
lods
popf
mul
stc
push
cmp
cmp
push
xchg
cmpsl
fisubl
ds
orl
xor
stos
push
sar
dec
shll
push
sahf
iret
idiv
fcomps
inc
out
xor
notb
inc
pop
mov
mov
sbb
mov
fsts
and
repnz
sbb
nop
or
cmp
cltd
add
xchg
popf
jb
pusha
je
cmp
jle
shlb
movsl
addr16
insb
push
lahf
pop
lods
xlat
mov
mov
inc
ret
aam
jns
mov
es
sub
xchg
stc
fs
dec
sar
lock
movsl
add
std
pop
mov
mov
popa
out
icebp
lea
clc
data16
jnp
inc
test
test
xor
pop
in
inc
xor
mov
mull
popf
lods
xor
lods
mov
fsub
fnstcw
mov
mov
mov
xor
sub
stos
adc
fsubl
xlat
push
sti
sbb
xchg
movsl
inc
subl
push
xor
std
out
dec
pop
sbb
cmpsl
andb
pop
shll
or
mov
int3
push
cmpsl
xchg
shl
mov
xchg
jmp
add
xchg
xchg
sti
or
push
mov
shl
ficomps
out
xor
shrl
in
rorl
add
pusha
mov
cmpl
mov
int3
in
aaa
inc
scas
and
daa
jo
outsb
fdivrs
pusha
mov
cmc
or
inc
cmp
mov
shlb
lods
mov
dec
insl
jmp
iret
pop
repnz
jecxz
test
fwait
ljmp
mov
pop
cmp
inc
pusha
imul
test
add
jl
sub
repz
inc
jns
ljmp
mov
mov
lods
xor
addl
das
movsl
xchg
pop
mov
and
insl
jle
dec
cmp
xchg
xor
mov
push
cmp
xor
sub
push
stos
imul
add
in
popf
mov
xchg
scas
aas
sbb
vandps
enter
arpl
pop
jns
movsl
lods
in
or
adc
push
aam
mov
mov
or
and
nop
mov
inc
ret
sub
mov
out
cli
cmp
or
icebp
fidivrs
add
mov
inc
dec
xor
cltd
pop
inc
es
rol
mov
adc
cmp
or
repz
pop
sub
aas
je
rorl
dec
js
push
cmp
mov
push
push
sub
loop
loope
out
rorb
mov
dec
sti
in
sbb
insb
push
pop
mov
lock
xchg
add
cli
or
mov
add
jp
in
mov
pop
insl
pop
movsb
xchg
xchg
in
jp
adc
pop
mov
gs
sbbb
rcrb
or
insb
mov
xor
mov
mov
iret
call
in
out
inc
mov
std
cmpl
sbb
xchg
inc
add
xor
adcb
inc
out
mov
daa
pop
add
sub
das
pop
pop
xchg
insl
sbb
xchg
adc
mull
push
cmp
inc
cmc
dec
sbb
into
xchg
bnd
or
cmp
shrl
cmp
pop
iret
dec
jnp
stos
faddl
decl
adc
and
ret
or
xchg
pop
dec
dec
cmc
in
sub
dec
pop
sahf
shrb
dec
jnp
movsl
mov
stos
movsl
ret
dec
xchg
push
je
or
sub
xchg
pusha
adc
imul
cli
push
jge
xor
or
inc
xor
sti
inc
mov
xchg
icebp
scas
or
mov
inc
cmp
lock
sbb
xor
je
pop
jp
xchg
push
or
out
inc
push
add
add
adc
ljmp
leave
out
repz
fwait
sub
dec
jne
jno
adc
mov
fidivrs
call
je
adc
sti
mov
and
xlat
mov
enter
fmul
leave
push
sub
mov
stc
rcl
pop
fisubl
mov
arpl
inc
adc
mov
std
xchg
js
loope
push
mov
icebp
rcll
push
and
shll
mov
push
pop
pushf
fsubrl
pop
dec
mov
and
cmpsl
mov
nop
jecxz
mov
jmp
jns
decl
jg
std
cmp
mov
test
inc
add
mov
inc
je
aas
fistpll
lahf
sbb
pop
push
arpl
or
out
or
or
mov
sub
ljmp
sub
mov
adc
push
into
push
pop
nop
pop
insb
roll
push
or
cwtl
jl
dec
mov
mov
cmp
addr16
scas
xchg
inc
or
push
sub
sub
inc
push
lea
int3
popa
xchg
adc
lret
mov
add
and
mov
mov
xchg
inc
add
rclb
out
push
jge
pop
cmp
cmp
or
sbb
lods
dec
fisttpl
dec
mov
adc
adc
xchg
cltd
inc
pop
push
lcall
sbb
insb
pusha
les
call
stos
or
notb
imul
ret
mov
xchg
out
push
stc
xor
in
call
mov
rcrl
jns
orb
outsl
rcrb
adc
push
push
jbe
jmp
mov
nop
aam
clc
lahf
add
mov
mov
jno
push
cmp
cmp
or
pop
xchg
push
into
jl
mov
iret
mov
xchg
movsl
mov
insb
dec
or
movsl
cmp
mov
mov
sahf
in
mov
inc
or
mov
int
or
mov
jno
inc
in
subb
xchg
mov
and
and
adc
cmp
cmp
add
inc
jnp
inc
in
fdivs
daa
imul
and
dec
adc
lret
cmp
inc
ss
sbb
push
jl
jmp
ret
aam
xorl
ds
push
jbe
lds
mov
and
rcl
icebp
jns
out
cli
outsb
rcrb
test
shlb
dec
adc
adc
fs
xor
stos
outsl
fdivs
or
pop
loopne
das
xor
xchg
in
fdivr
lret
andb
icebp
adc
fcomps
sub
fsts
imull
xor
mov
xadd
mov
push
es
xchg
rcl
or
jecxz
pusha
mov
in
xchg
cmp
int
xchg
xchg
dec
xor
xor
mov
xchg
jae
cmp
clc
insl
mov
cld
mov
push
pop
xor
lret
mov
jle
sbb
out
add
addr16
push
pop
popa
repnz
sub
test
out
pop
daa
arpl
push
in
dec
inc
nop
jae
jbe
out
inc
test
xor
push
add
enter
rcrl
movb
ljmp
inc
in
movsl
cli
inc
push
sbb
mov
lds
stc
mov
xchg
sub
loope
push
dec
and
mov
movsl
or
decb
dec
push
stos
jbe
dec
mov
push
pop
push
shrl
lahf
xchg
cmpsb
sbb
sbb
nop
imul
mov
mov
and
pop
inc
js
test
imul
scas
sbb
jecxz
inc
jge
dec
push
adc
std
or
and
iret
sbb
hlt
icebp
or
cmc
into
sub
hlt
or
dec
fstpt
outsb
scas
mulb
stc
cli
mov
mov
imul
sub
loop
pop
pop
int3
jg
aam
mov
mov
push
inc
loope
push
dec
mov
cmp
sub
mov
xor
adc
ja
cmp
iret
pop
pop
stos
popa
fstpl
cmp
pop
push
lret
and
sar
push
sub
fdivs
je
mov
xchg
incb
mov
inc
jne
pop
rolb
jmp
sti
push
jle
and
xor
jmp
sub
xlat
dec
mov
aas
test
jle
push
test
mov
add
push
loop
cwtl
cwtl
adc
jnp
stos
and
dec
aam
sbb
dec
nop
jo
cmp
push
repz
lea
aaa
mov
js
add
bound
outsb
outsb
and
push
call
imul
outsl
sti
mov
ret
mov
into
test
js
lcall
idivb
or
test
mov
enter
pusha
push
sub
fs
cmp
xchg
fidivl
sub
sub
movl
shrb
push
lcall
ret
adc
cltd
dec
aad
push
xor
ja
rclb
fisubrl
xchg
xlat
outsl
fnstsw
arpl
xchg
je
cmp
sub
pop
and
addr16
and
in
call
int3
stos
outsl
push
loop
stos
add
lods
in
pop
cltd
or
add
stc
add
ja
adc
neg
jle
out
stc
decb
icebp
dec
mov
mov
cmp
scas
and
mov
mov
rcrl
add
nop
cld
adc
xchg
cmp
dec
je
adc
jp
mov
andl
push
push
fcmove
daa
sbb
in
sbb
sbb
sbb
repz
sub
mov
push
shl
jnp
and
aam
jo
push
xor
cmpsb
nop
jle
fldt
lret
push
ljmp
data16
jg
or
push
inc
cld
cmp
int3
je
and
sbb
cmp
xchg
stc
push
add
aad
mov
je
lret
sbb
pop
stos
pop
aas
in
cmpl
dec
mov
repz
jmp
cmp
and
imul
inc
pop
test
adc
pop
xor
cs
push
xchg
xchg
sub
xor
stos
sub
and
sbb
sti
lods
ret
push
xchg
in
pop
loope
mov
out
outsb
mov
push
enter
mov
push
jle
xor
and
mov
or
push
pop
leave
fwait
fadd
jno
lcall
push
push
rorl
es
movsb
dec
or
pop
and
lret
sub
dec
dec
mov
add
icebp
aaa
inc
add
daa
stos
loopne
add
xor
cmp
dec
in
inc
addr16
ss
scas
loope
iret
lock
addr16
push
sub
ret
andb
stos
imulb
fwait
mov
or
out
cld
xchg
lea
cld
je
push
and
mov
mov
xchg
dec
pop
adc
popa
jbe
insl
insl
cmc
cmp
test
testb
mov
adc
mov
jnp
lcall
sbb
inc
in
or
movsb
gs
lcall
pop
mov
sbb
mov
push
xor
shll
push
mov
mov
jg
scas
and
nop
loope
in
std
sub
movsb
and
fidivrl
js
or
sub
loop
aaa
push
pop
fsts
jmp
adc
dec
sub
sahf
test
pushf
addb
mov
pop
scas
into
and
inc
or
mov
cmp
lods
gs
mov
mov
fidivs
notb
inc
xchg
sub
inc
dec
dec
inc
sbb
or
xor
cmp
sub
stos
outsl
aas
dec
mov
push
mov
clc
and
cmp
xchg
ret
enter
push
cmp
jo
mov
fs
lret
sahf
push
mov
mov
dec
fisttpl
pop
loopne
jbe
mov
mov
jmp
cltd
pop
mov
push
and
shlb
jns
add
lods
icebp
pop
dec
mov
sahf
cwtl
es
fs
pop
xlat
daa
cs
sub
dec
stc
shll
adc
cmc
movb
and
dec
pop
sub
imul
sbb
sbbb
pusha
xchg
aaa
cmp
aad
enter
xchg
push
aad
xor
adc
test
insb
sbb
ja
cli
scas
outsb
sub
aaa
push
push
fldcw
movsb
rol
arpl
mov
fnstsw
pop
xchg
xor
cmp
push
dec
jecxz
jl
popa
es
les
push
add
iret
push
add
movsl
lret
push
xor
out
xor
pop
into
gs
jae
inc
and
popa
ja
aas
nop
or
repnz
icebp
sub
push
xchg
lods
fwait
pop
xchg
enter
cmp
fsubrs
mov
imul
adc
jo
mov
mov
inc
or
pop
cmp
push
sbb
mov
sti
push
xor
push
sbb
shl
push
lea
cmpsb
out
sub
idivb
lret
shl
sbb
rcrl
iret
pusha
in
add
and
adc
lods
xlat
rcrb
or
lret
ljmp
rorl
lret
or
enter
jp
mov
dec
mov
fucom
sarl
lret
mov
or
push
dec
xor
mov
mov
movsl
push
insl
cli
push
sarb
xor
pop
mov
adc
fists
cmp
fbld
repnz
cmc
insb
dec
xchg
imul
sti
iret
push
repnz
ja
mov
fildll
in
aaa
xchg
jae
sub
dec
pop
mov
rorb
std
aad
mov
cli
mov
test
cvtps2pi
out
mov
xlat
pop
sub
in
out
inc
dec
sub
xlat
jle
or
sub
jnp
mov
dec
jns
xlat
xchg
mov
rcll
clc
mov
loope
int
dec
sub
inc
bound
out
push
lret
pop
loop
sub
or
bound
push
leave
pop
rolb
sti
pop
ds
popa
jge
pop
jl
mov
or
xlat
sbb
add
scas
aas
inc
jg
clc
jae
pop
fstpt
into
enter
adcb
pop
clc
sub
stos
cmp
inc
ljmp
mov
call
xor
test
pop
pop
xor
bound
dec
in
jne
jno
dec
popf
pop
cli
mov
sbb
xchg
dec
scas
insl
jp
and
mov
inc
xlat
iret
xchg
push
adc
aaa
lock
call
shlb
iret
das
inc
push
subl
xchg
mov
push
cmp
outsb
popa
add
xor
js
xchg
lds
cs
hlt
outsb
ds
sti
jbe
xchg
pop
mov
push
sbb
mov
pop
mov
or
fbld
jecxz
mov
push
mov
out
rcrb
xor
movsb
fadds
sub
scas
xor
cltd
cmp
sbb
or
jg
push
ss
adc
std
pop
aad
adc
mov
or
out
mov
add
addr16
or
lret
dec
cld
cmp
xchg
inc
inc
mov
dec
pop
fnstsw
out
out
lds
scas
cli
mov
xor
mov
xchg
hlt
adcb
cmp
cli
sbb
subb
xor
ret
cmp
adc
fdivs
add
mov
dec
push
pop
in
add
clc
stos
jne
in
add
adc
and
fs
mov
add
lods
pushf
jle
std
shlb
pop
in
sub
xchg
test
sub
and
and
mov
nop
lahf
xchg
movsb
inc
add
mov
mov
jl
pop
mov
pusha
data16
or
cmc
popf
in
aas
dec
in
dec
dec
cmpsl
negl
or
add
mov
jle
mov
jb
or
call
mov
negl
fsubl
or
jg
orl
notb
lods
fs
pop
enter
push
out
and
inc
xchg
bound
imul
pusha
lds
roll
lock
je
add
xchg
xchg
pop
fwait
int
jb
lds
xchg
sti
mov
push
into
xor
push
or
and
and
out
clc
xchg
pushf
add
outsb
or
inc
jl
jnp
inc
or
data16
sub
mov
fists
faddl
push
mov
daa
orb
inc
push
pop
movsb
jo
and
sarl
jg
repnz
mov
sbb
mov
les
dec
stos
adc
lea
jb
mov
lods
or
movsb
mov
nop
mov
or
sbb
repz
mov
into
sbb
push
outsl
lods
xchg
xor
push
aaa
cmp
mov
push
fcmovne
pop
and
mov
in
adc
add
add
jmp
jbe
mov
push
pop
and
push
or
out
lods
sbb
xchg
aas
or
loope
xor
sbb
xrelease
pop
xchg
mov
pop
mov
xor
jo
dec
dec
dec
mov
mov
and
push
sbb
lods
mov
mov
sub
jo
clc
xor
test
add
popf
fnstsw
mov
fisubs
lods
or
adc
mov
push
jo
mov
mov
or
fcoms
rorb
repnz
mull
retw
enter
repz
add
pop
ss
dec
ret
ss
cmp
gs
jae
sbb
jle
add
add
fdivl
cmp
std
sbb
je
fcom
out
dec
bound
sub
cmpl
repz
stos
hlt
lcall
frstor
xchg
adc
or
popa
inc
pop
in
out
xchg
mov
jg
dec
out
mov
dec
shlb
fbstp
lods
jnp
pop
xchg
sbb
js
into
dec
fdivrp
add
cmp
out
test
sbb
sti
xor
add
repnz
lods
int3
fidivrl
js
ja
jb
jg
mov
repz
cmp
mov
adc
mov
sub
xorb
sbbl
pop
mov
and
loop
pop
pop
icebp
fisttpl
push
mov
and
push
ret
incb
mov
push
adc
mov
xchg
nop
xchg
loop
fwait
pushf
inc
leave
dec
mov
or
inc
mov
enter
es
push
xchg
mov
dec
cmp
mov
jmp
orl
sub
mov
xchg
adc
or
rclb
test
sub
cmc
scas
lret
cmp
data16
ret
mov
xchg
mov
dec
sub
push
xchg
insb
push
addr16
aas
dec
sub
jnp
out
pop
sbb
outsl
dec
out
sbb
orb
push
jno
fsubrs
cmpsb
mov
gs
out
add
jecxz
mov
dec
inc
mov
mov
mov
rcr
jo
mov
xor
dec
and
std
push
test
push
in
or
xor
xchg
pop
insb
sub
jb
lds
out
pop
sub
or
pop
sub
call
cld
out
sti
dec
cmp
rcl
out
lods
insb
sbb
das
push
sbb
jecxz
loop
mov
call
push
out
rcrb
ja
insl
xchg
mov
jmp
jne
pop
mov
mov
fisttps
test
in
movsl
fs
sti
xchg
cs
inc
lea
mov
pop
xchg
lret
xchg
loop
insb
mov
push
std
xor
sub
mov
lods
adc
hlt
mov
out
cmp
push
idiv
iret
mov
into
scas
in
add
lret
inc
sub
ds
mov
sbb
gs
push
adc
mov
mov
mov
xor
shrb
fistpll
cs
call
or
dec
push
cmp
mov
int3
mov
mov
xchg
cmp
jecxz
cli
adc
xchg
insb
mov
xor
and
ret
jge
pop
ret
cmp
cmpsb
add
popa
test
dec
js
and
mov
out
pop
adc
mov
fldt
mov
adc
sub
mov
test
cmp
cmc
or
xchg
push
push
jp
jg
pushf
lods
out
cmp
lcall
gs
test
and
movsb
mov
push
stos
push
jp
fsts
mov
xchg
rolb
mov
lds
into
xchg
mov
add
fbstp
jns
popa
clc
dec
js
xchg
arpl
out
inc
or
cmp
rolb
icebp
xchg
pop
inc
out
inc
xchg
pushl
inc
xor
xchg
loopne
push
jge
jl
sbb
sub
loope
lods
shlb
adc
pop
or
aam
sbb
scas
js
movb
pop
lret
mov
pop
xchg
pop
shrl
dec
mov
mov
loope
xor
mov
add
adc
pop
shll
aad
mulb
sub
sbb
in
cltd
mov
scas
or
popf
fiaddl
pop
repz
jmp
mov
in
cs
pop
add
es
push
sbb
mov
ds
cmc
mov
push
repnz
cmpl
xchg
jp
lcall
aaa
mov
push
add
inc
cmp
pop
pop
sbbb
in
adc
xchg
cmpsb
negb
mov
sub
test
lea
xchg
into
imul
dec
fwait
test
aaa
in
imul
bound
adc
stc
stos
out
imulb
mov
inc
jge
arpl
out
jecxz
repnz
mov
cmp
or
adc
or
add
xor
sar
cmc
sub
ds
jmp
inc
movsb
ret
add
dec
ss
mov
movsl
out
cltd
imull
cmpsb
lock
mov
add
lret
je
mov
shl
pop
sbb
out
mov
cwtl
jecxz
daa
mov
jb
in
mov
dec
je
sub
xcrypt-ofb
cmpsl
sub
cmp
xchg
bound
adc
call
dec
mov
mov
adc
ds
push
add
fisttps
xchg
dec
test
fcomip
rcr
adc
lods
fucom
mov
jge
fldenv
jae
jl
push
lds
loopne
inc
inc
or
mov
loope
pop
hlt
jg
outsb
and
mov
cmp
adc
call
les
lock
into
pop
mov
inc
cs
xor
sub
test
pushl
lock
and
inc
sbb
or
scas
je
cmpsb
jmp
icebp
test
inc
or
out
pop
push
in
imul
std
sub
leave
repz
das
adc
fs
dec
aad
mov
xchg
sub
jmp
mov
shll
adc
daa
jmp
inc
adcb
sbbl
scas
es
cwtl
in
pop
jle
sbb
mov
stos
aas
xor
sbb
shl
loopne
jns
adc
add
sub
out
outsb
testl
cltd
pop
jne
mov
dec
rclb
push
push
test
mov
ret
push
adc
xchg
sarb
mov
and
pop
adc
pop
lock
mov
aas
ja
push
sub
mov
cmp
stos
dec
sahf
dec
cmp
imul
clc
scas
mov
push
movsb
lret
sub
out
fs
or
lcall
mov
sbb
push
shlb
aam
xchg
fstp
mov
cmpsb
test
jmp
cltd
cwtl
sbb
add
jae
mov
add
adc
movsb
jns
in
mov
xor
bound
add
movsl
or
mov
adc
mov
or
dec
out
movsl
es
out
inc
sbb
xorb
push
jge
inc
les
adc
inc
lahf
mov
stc
inc
mov
or
inc
inc
fmul
or
inc
pop
arpl
dec
fcmovnbe
lcall
pusha
sarl
repnz
adc
and
mov
loopne
jge
loope
xchg
ja
ja
mov
mov
mov
pop
js
mov
push
cmp
pop
into
gs
outsb
jmp
and
and
mov
dec
sbb
or
lods
lock
push
scas
dec
and
cwtl
cmpsb
inc
jne
and
out
mov
std
pop
and
aaa
sub
xchg
mov
mov
cwtl
sub
jl
jl,pn
aaa
lock
out
mov
push
lea
or
lods
xchg
clc
add
inc
outsb
aam
jnp
cmc
inc
lret
xlat
push
xor
mov
and
sbb
gs
adc
jmp
sub
cs
mov
cld
idivl
dec
jbe
cmc
push
outsl
jl
and
cmpsb
mov
jo
pop
dec
cmp
xor
mov
mov
daa
pop
lds
xor
outsb
inc
pop
xchg
popa
sbb
inc
out
xchg
pop
sbb
test
mov
jmp
loopne
adc
cmpb
adc
stc
in
daa
sbb
mov
fcoms
fnstenv
test
fnsave
call
cmp
pop
jmp
sarl
ret
mov
inc
adc
sahf
push
xchg
out
mov
outsl
movsb
xor
pushf
jp
xor
sub
adc
icebp
push
scas
ret
jmp
push
popa
bound
imul
ja
or
xor
adcl
mov
mov
and
cmp
lods
pop
call
adc
add
jns
dec
or
sub
packuswb
add
inc
add
push
push
int3
jne
sbb
repnz
adc
push
xchg
push
mov
scas
mov
mull
lahf
sub
fmull
popa
aaa
ja
push
mov
mov
add
mov
inc
mov
mov
or
fidivl
lods
and
ficompl
sahf
aaa
hlt
push
xchg
mov
outsl
ja
fidivrs
daa
mov
mov
push
sub
pop
mov
dec
xchg
scas
cmp
xlat
cmp
into
in
es
cmp
inc
fiadds
push
pushf
jno
pop
mov
mov
es
fcomps
pushw
mov
adc
mov
je
or
jge
out
or
add
scas
aam
loop
lock
test
sbb
adc
xchg
add
push
dec
leave
pop
int3
das
outsl
loopne
in
sarb
inc
dec
aam
xor
imul
imul
stc
pop
pop
lods
dec
adc
test
outsl
fidivl
cmp
aam
ficomps
arpl
loop
xor
rcll
imul
mov
or
in
xor
iret
pop
int
pushf
pop
add
lcall
dec
jb
dec
push
test
dec
xchg
roll
jp
call
sbb
and
sbb
lock
jmp
add
push
mov
jecxz
and
repnz
sub
and
or
mov
repz
push
sbb
pop
cmp
sub
ja
dec
inc
fdiv
arpl
stos
lods
jg
pop
pusha
lret
jge
dec
outsl
and
mov
ds
ds
test
movsb
outsb
add
xor
jbe
push
jns
adc
jg
or
jge
and
push
shlb
outsl
dec
xchg
cmp
mov
pop
xchg
into
jo
loopne
sbb
mov
xor
outsb
jl
orb
cld
push
lea
push
mov
outsb
push
jae
mov
mov
test
fidivrl
lahf
mov
lret
mov
jnp
mov
cmc
mov
push
push
mov
push
fadd
push
cmp
jp
int
and
jnp
out
push
cli
lods
sbb
jnp
cmc
mov
fistpl
adc
xchg
jnp
loope
mov
sub
sbb
or
mov
insb
insl
pop
mov
inc
jne
mov
js
add
jno
xor
xor
cmp
cmp
sbb
inc
ljmp
push
xchg
push
sahf
stos
dec
cltd
jo
add
inc
movsb
xchg
mov
push
icebp
pop
int
mov
leave
in
stos
stos
js
fbstp
adc
pop
lds
pop
scas
nop
sbb
and
fs
adc
cmp
stos
fistl
inc
icebp
xchg
clc
mov
push
xor
sub
fdivs
les
in
xchg
fstpt
mov
ljmp
enter
je
andb
test
js,pt
lret
mov
int
imul
and
cmp
cmp
mov
sbb
sti
xchg
cmpsb
inc
fs
push
movsb
je
pop
mov
pop
jo
mov
adc
pop
pop
jge
dec
pop
dec
xor
loope
das
mov
fisttpll
jae
popa
aas
add
aad
sub
imul
inc
lea
cmp
mov
jb
faddl
hlt
xor
cmpsb
sub
adc
mov
icebp
xor
cmp
or
or
in
and
add
les
out
je
add
jno
sahf
push
mov
orb
sbbb
lods
xor
shrl
inc
mov
dec
out
pop
mov
jne
sub
inc
jbe
pop
cs
repnz
adc
jbe
adc
shl
ja
mov
add
ss
mov
sti
fdivp
sub
rolb
int
push
shlb
icebp
negb
mov
outsl
xchg
lock
mov
or
xor
test
inc
fisttpll
jnp
ds
popf
ljmp
push
pop
daa
xchg
push
mov
lds
adc
pop
insb
xor
je
subb
inc
jp
rcl
arpl
popa
in
adc
mov
js
dec
outsl
or
jge
stos
xor
add
test
dec
int3
incl
jbe,pt
mov
xlat
sbb
fbstp
adc
mov
or
inc
jecxz
leave
fs
jl
mov
xchg
aas
aas
jl
push
mov
mov
adc
pop
inc
xor
pushf
scas
xor
inc
adc
or
adcl
cmp
dec
sbb
mov
add
movsl
bound
pushf
xchg
jno
cmp
add
test
xor
faddl
inc
inc
inc
adc
mov
adc
pop
push
test
mov
fdivrs
push
jae
aam
jbe
jnp
mov
xor
mov
test
lahf
dec
lahf
or
dec
pop
scas
dec
stc
xor
aam
imul
push
add
fisttpll
aas
xchg
fildl
inc
pop
sbb
xchg
ss
cwtl
xchg
std
jle,pn
add
fcmovne
xor
pusha
pop
xchg
std
adc
push
loope
adc
mov
cmp
xchg
arpl
loope
mov
mov
sbb
cmp
pushf
nop
dec
sahf
iret
mov
xchg
jle
dec
pop
psubsw
inc
pop
inc
mov
scas
jl
add
dec
inc
sbb
sub
sbb
imul
ds
inc
fistps
leave
or
andl
lahf
out
arpl
or
lahf
sbbb
test
inc
mov
pop
shll
fs
inc
mov
pop
push
fstl
and
dec
movlhps
jne
loope
cmpsb
and
out
adc
inc
push
add
mov
cli
or
pusha
ss
ss
psrlw
repnz
dec
pop
fmul
stos
push
sarb
push
loopne
xchg
inc
mov
js
pusha
test
sbb
lods
mov
sub
sti
out
lahf
or
inc
and
cli
mov
sti
adc
dec
push
add
in
repz
cmp
cmp
cmc
imul
mov
push
sbb
push
push
imul
add
lds
sti
pop
stc
add
add
pop
pop
stc
into
das
pop
pop
jnp
sbb
stos
insl
jns
repnz
add
popl
adc
adc
ret
hlt
push
push
mov
aam
jnp
push
repnz
xchg
or
mov
or
xchg
mov
pop
fidivrs
ret
xor
aaa
out
jmp
into
mov
enter
xlat
loop
dec
mov
jecxz
jl
ja
sub
pushf
lret
cmc
inc
jg
sbb
jle
inc
cwtl
jecxz
movsl
pop
jmp
outsl
sub
es
daa
in
ljmp
lock
and
mov
test
cmp
pop
sbb
mov
test
shrb
xchg
nop
aad
xchg
scas
icebp
and
dec
ja
lahf
jno
outsb
outsl
bswap
fists
dec
mov
or
jne
mov
shl
push
stos
jbe
inc
pop
out
sbb
mov
fwait
fwait
cmpsl
and
dec
fistpl
push
mov
pop
jge
pusha
xchg
pop
jnp
scas
mov
mov
and
xchg
sbbb
fwait
sbb
mov
mov
into
movsb
xchg
inc
dec
ljmp
pop
fnsave
cmp
lret
push
sbb
cmp
sub
dec
add
sub
std
mov
pop
popf
ffreep
adc
or
or
and
or
je
aas
sbb
sub
jmp
cli
aam
jno
incl
adc
popa
in
inc
in
test
fstpl
aaa
fmull
xor
add
push
outsb
leave
adc
mov
pusha
outsb
sub
pop
sarl
adc
sbb
dec
movsb
faddl
cmpsl
mov
imul
int
das
dec
cmpsb
daa
inc
cld
mov
int
sub
cs
test
aam
cs
std
xchg
daa
jmp
sub
push
enter
inc
or
cltd
pop
pushf
add
jecxz
mov
jo
add
aam
jle
aam
inc
dec
inc
out
mov
cmp
jmp
loope
fwait
inc
les
cmp
cmp
xchg
push
js
pop
mov
push
or
lret
push
adc
sarl
sub
jge
mov
outsb
rcll
idivl
xchg
insl
xchg
cmc
addr16
lret
dec
dec
cmp
les
loope
pop
ret
jle
in
mov
call
lahf
ret
cmp
movsl
inc
xchg
cmp
mov
fcoms
repz
sbb
mov
sti
int
lret
sbb
popf
rcrb
dec
scas
and
push
push
loopne
dec
insb
pop
xor
push
outsb
sub
mov
pop
and
inc
jns
adc
dec
int3
adc
cmc
mov
pusha
xchg
sbb
push
jecxz
aad
sub
mov
ljmp
xor
ds
pop
rolb
arpl
int
loop
mov
pop
je
mov
jecxz
xor
mov
mov
inc
jecxz
in
lahf
insb
inc
sub
out
aas
and
setno
loope
cmp
or
xlat
cltd
pop
test
adc
push
cmp
add
in
xor
pop
adc
js
addr16
sbb
lahf
data16
aam
jb
cmpsb
cltd
jl
movsl
call
popa
and
ljmp
arpl
mov
inc
adc
push
pop
xchg
push
imul
hlt
dec
push
mov
imul
push
lods
les
push
sbb
xor
xchg
cmp
fisubs
stos
and
mov
push
sbb
ljmp
dec
dec
mov
sub
int
xor
or
pop
shl
test
or
sbbl
adc
sbb
fisttps
dec
sbb
test
popf
movsl
out
movb
jnp
xor
popa
fdivrs
xchg
or
jae
jnp
mov
or
test
add
stos
sbb
lods
or
je
push
jmp
or
shl
xor
ds
xlat
mov
stos
add
jne
xor
imul
push
mov
and
jno
pop
imul
roll
inc
xchg
add
stos
mov
mov
jge
mov
pop
out
aad
sub
sbb
mov
scas
and
sar
out
pop
sarl
inc
dec
int
sarb
or
ss
leave
repz
lods
cs
test
cmp
fldcw
or
lahf
pop
cmpsl
adcl
push
les
mov
popa
adc
sub
adc
inc
dec
sub
jb,pn
adc
sub
jl
pop
hlt
push
in
js
mov
fstps
and
scas
push
adc
mov
outsl
push
xchg
hlt
add
dec
cmc
cmpsb
fbstp
bswap
mov
jno
and
jne
pop
out
adc
ss
insb
pop
jg
mov
inc
cli
inc
push
fidivrl
pop
out
into
rcrl
jmp
pusha
xor
shr
negb
jle
sbb
popa
rcll
pusha
jae
lcall
lret
xor
stos
leave
mov
stc
mov
push
jne
pop
rcrb
fsin
fildl
jl
fcmovnu
inc
ja
dec
jnp,pt
mov
xor
aad
ficomps
xlat
mov
repnz
jl
mov
or
lret
jmp
pop
adc
in
dec
and
jle
xchg
xchg
sub
cmp
je
mov
or
fisubrs
sbb
lods
jge
jl
sti
gs
add
mov
cmp
sbb
aam
lea
subl
push
inc
mov
call
leave
mov
movsl
lods
cs
jno
dec
ljmp
xchg
inc
mov
gs
push
cli
dec
jns
add
push
es
test
pusha
inc
cli
ss
fcom
cld
adc
xchg
repnz
push
icebp
aad
ret
pusha
in
jle
sbb
cmp
test
fsubs
adc
fstl
or
in
fsts
lods
jl
jg
sbb
pop
mov
or
and
jnp
lcall
sub
addr16
frstor
sbb
jl
ret
dec
std
cmp
scas
insl
mov
lods
outsl
loopne
iret
iret
movsb
mov
add
push
mov
clc
repz
or
push
lea
sbb
mov
lds
mov
int
mov
out
lods
fildl
add
mov
or
mov
out
out
addr16
lock
and
out
test
mov
fsubrl
inc
icebp
or
es
loope
sub
scas
sbb
and
add
mov
cmp
cltd
enter
sbbb
outsb
add
andb
out
outsl
bound
bound
or
shlb
push
inc
mov
leave
je
out
cmovp
and
mov
jge
dec
push
mov
lds
dec
test
sbb
or
vmwrite
cli
ljmp
dec
mov
sbb
cmp
push
into
inc
mov
int
mov
fldl
jge
add
dec
mov
mov
pop
test
addr16
js
jb
pop
les
push
sub
cmpsb
pushf
ret
je
loopne
mov
push
sub
andl
add
mov
cli
stc
cmp
mov
xchg
ja
add
loopne
mov
mov
jno
ja
and
fwait
adc
pop
dec
mov
aad
dec
les
xor
push
sbb
pop
pop
cmp
push
mov
setno
push
push
xchg
mov
mov
xchg
push
jecxz
inc
adc
lods
and
lcall
out
xchg
les
xor
fmuls
call
sbb
mov
imul
aad
pop
adcl
lds
lods
adc
inc
es
pop
mov
mov
test
mov
ds
pop
sbb
fnstsw
or
jno
xchg
clc
out
mov
cmp
push
mov
stc
or
jp
pushf
pop
mov
outsl
xor
cmp
ljmp
cli
scas
cmp
push
xor
adc
sub
xchg
mov
xchg
xchg
cltd
nop
mov
or
pusha
ss
divl
pop
vmread
lea
pushf
xor
push
pop
lods
nop
jb
cmp
sarl
mov
or
insb
icebp
rcll
stc
and
push
or
dec
xor
xchg
fs
xchg
xor
daa
fidivrl
into
adc
or
inc
xchg
cmp
jo
pop
mov
adc
sbb
call
jae
pop
add
pop
frstor
add
inc
sub
rep
push
pop
out
mov
fcoml
mov
jo
sbb
and
outsl
mov
dec
adc
pop
inc
pop
addr16
jp
in
dec
rcrb
cmp
push
mov
movsl
push
pop
int
fstpl
sbb
push
jp
add
jbe
pushf
push
sbb
push
int3
in
xor
test
outsb
inc
xor
das
sahf
mov
xchg
lock
gs
in
add
xlat
repz
cli
push
pop
mov
add
mov
repnz
pop
add
adc
cmp
fstpt
sarl
sub
mov
pop
dec
imul
cld
sbb
lods
push
add
fidivl
dec
inc
or
inc
jle
push
stos
pop
fwait
lea
repnz
or
ljmp
mov
jge
inc
lods
lds
add
xchg
mov
dec
adc
mov
xor
or
sbb
inc
movl
aas
mov
push
hlt
sub
add
pop
add
leave
or
add
push
lods
cmpb
pop
fsubl
lea
insb
imul
add
insb
sub
lret
mov
int
lcall
cmpsl
jns
jns
in
xchg
dec
inc
cmp
scas
imul
jbe
sub
jl
sahf
pop
movsb
ja
movsb
pushf
aaa
pop
push
mov
or
dec
xchg
adc
into
sarb
mov
mov
imulb
cltd
stos
into
adc
sti
pop
fs
sbb
aad
aam
fadds
xchg
add
xor
fisttpl
xchg
sahf
icebp
mov
int3
loop
mov
xchg
dec
add
inc
fldcw
test
or
dec
xor
mov
fdivrl
or
pop
clc
xor
or
pop
scas
sbb
push
ficompl
lret
inc
icebp
or
adc
jecxz
nop
inc
lds
sub
push
and
cli
push
gs
stos
push
nop
inc
adc
mov
sbbb
xchg
xor
ret
xor
cmpsl
bound
shlb
icebp
add
test
jo
cld
adc
cmp
cmp
push
cmp
pop
jno
push
push
aam
subb
and
bound
xor
imul
add
mov
stos
and
inc
lods
orl
lods
adc
add
sbb
xlat
cwtl
or
cltd
inc
mov
lcall
adc
and
push
push
push
shr
rcrl
rorb
push
pop
jle
pop
test
rcrb
repz
test
adc
add
dec
pop
mov
imull
push
or
xor
aam
sub
dec
xor
and
std
push
stc
repz
mov
jae
cmp
sbb
mov
fndisi(8087
inc
push
mov
xor
or
imul
mov
cmp
or
dec
and
enter
lock
mov
sub
rcrl
pop
fcmovnu
mov
jo
push
pop
mov
iret
fistps
sbb
jno
or
ror
or
out
dec
aas
adc
mov
jo
test
mov
xchg
outsb
push
xchg
xchg
mov
jge
sub
mov
les
mov
or
std
cmp
mov
mov
mov
or
sbb
cs
mov
jb
imul
pop
add
int
sti
cltd
ret
mov
out
xchg
mov
cmpsl
cld
fsubrp
cld
cmp
cs
icebp
fdivl
and
pop
xchg
lods
fldenv
out
adc
xor
and
add
mov
out
movsl
mov
xor
sarb
jl
cmp
and
sti
out
jp
popa
loope
push
sbb
dec
test
ja
mov
shr
push
in
dec
and
jl
and
rcrb
pusha
push
cmp
scas
cmp
mov
jp
lret
adc
add
sbb
jle
or
test
fwait
cmpsl
dec
lods
rcl
pushf
fsts
cwtl
iret
cs
add
sub
sbb
pop
mov
cmpsl
ret
and
stc
fidivs
out
arpl
rcrb
jecxz
sub
add
sub
subb
mov
andb
les
sti
cs
mov
sub
loop
lea
cmp
cmpsl
sbb
push
fmuls
jle
lcall
repz
imul
lret
daa
addl
enter
mov
cmp
dec
or
mov
cmp
call
movsb
fidivs
jno
test
and
outsb
cmp
ds
lcall
js
push
lret
and
cmp
push
push
pop
and
sub
imul
push
mov
stc
jp
andb
push
daa
ljmp
insb
xchg
mov
pop
xlat
shll
cmc
mov
jae
cmpsl
test
mov
push
cwtl
popf
mov
sub
inc
add
mov
push
xor
jne
cli
fucom
addr16
out
pusha
test
and
addr16
stos
fdiv
repnz
dec
sbb
mov
in
mov
mov
jecxz
hlt
mov
add
xor
jne
inc
dec
fisubrs
push
enter
loopne
push
out
dec
fldl2e
hlt
fildll
dec
in
clc
adc
add
cmc
sub
mov
jmp
cmp
test
xchg
jb
cwtl
pop
ljmp
pop
lret
mov
daa
lret
push
cmp
jmp
outsb
jae
sub
fstpl
mov
aad
sbb
lock
add
mov
call
push
xchg
sti
and
mov
mov
add
test
out
xor
in
xchg
pop
mov
es
xchg
jnp
pop
enter
movsl
jmp
out
leave
cmpsl
or
push
xlat
jae
or
stos
imul
sub
cmp
pop
repz
in
inc
xchg
mov
xchg
rorb
stos
add
dec
inc
imul
ja
adc
out
lods
xchg
dec
pop
int3
cwtl
push
call
out
mov
dec
adc
jmp
mov
js
xchg
push
jns
dec
nop
mov
ficompl
mov
push
shlb
lods
bound
cmp
jne
lods
sti
scas
push
call
dec
repz
and
jmp
icebp
iret
push
test
mov
pop
mov
fldenv
pop
push
xchg
jmp
push
xor
dec
inc
testb
xchg
fdivs
lock
xorb
fbstp
or
jno
and
xchg
xor
jl
mov
es
and
jae
cld
mov
xor
and
fmuls
shrl
xchg
int
pop
mov
mov
lea
add
mov
stos
stc
push
dec
or
aas
loopne
inc
push
mov
push
lods
ds
adc
out
test
inc
jbe
andl
lret
out
out
ss
adc
pushf
ljmp
leave
pop
inc
mov
cmp
jp
cs
push
dec
add
pop
lret
or
cmc
cltd
xor
push
sarb
xor
sbb
movsl
and
lea
xchg
fldl
test
in
notb
int3
enter
pop
fucomip
push
jecxz
adcb
je
lock
add
repz
cmp
shrl
inc
mov
pop
movsl
xor
pop
pop
leave
xchg
mov
add
cmp
insl
mov
push
shr
repz
push
popf
dec
fs
mov
dec
std
packsswb
into
cmp
and
lret
addr16
pop
pop
lcall
pop
pop
fnstenv
out
das
mov
push
push
xor
subb
rcr
jae
mov
int3
xchg
sbb
fwait
add
inc
imull
daa
scas
pop
fstpl
icebp
dec
jecxz
add
sbb
movl
cmpsl
out
out
push
cmp
call
pop
pop
inc
push
mov
pop
js
iret
push
mov
cmp
or
sbb
mov
xor
inc
mov
aas
xor
mov
fcomps
icebp
cmp
jo
add
inc
mov
in
mov
cmp
push
mov
jl
jnp
int3
add
lret
out
dec
ret
dec
gs
adc
int3
xchg
push
in
or
cmp
pop
outsl
jge
jns
push
cld
leave
and
int
movsl
call
lahf
jle
ds
test
movsb
inc
mov
inc
mov
fistps
sub
dec
xchg
scas
and
jae
sbb
aam
sub
inc
jae
into
stos
sbb
inc
ss
out
mov
jne
xlat
pop
add
addr16
cmc
hlt
clc
push
inc
push
outsl
push
incl
sub
mov
out
jmp
fistpl
outsl
cmc
fisttpl
mov
mov
loope
mov
daa
dec
jo
pop
std
fidivrs
jo
mov
pop
or
divb
pop
jb
pop
jb
or
pushf
xchg
aad
out
jb
rorl
inc
loope
in
fsincos
enter
cld
and
aam
test
or
adc
mov
and
xchg
addr16
cld
xchg
stc
arpl
mov
inc
xchg
or
cwtl
mov
les
int3
mov
lock
iret
sahf
pop
aaa
dec
ret
mov
cld
in
push
lea
mov
xor
out
out
sbb
mov
outsb
mov
xchg
xor
jno
loope
cmpsl
mov
lods
enter
enter
push
clc
push
fiaddl
mov
rcrl
testb
mov
push
rcrb
xor
inc
xlat
test
in
xchg
or
or
xchg
loope
add
mov
leave
or
xlat
dec
iret
mov
adc
cmp
xchg
push
imul
idivl
dec
jecxz
jbe
clc
pop
scas
or
jmp
and
shl
out
outsb
cmp
mov
les
mov
stos
jbe
sahf
dec
inc
cs
sub
sbb
rorl
cli
lcall
add
xlat
adc
or
xchg
xor
jo
fcoms
mov
movl
jo
loopne
outsl
popf
subb
mov
sub
inc
ret
push
jo
mov
popw
popa
or
fwait
subb
faddp
out
aaa
mov
mov
in
jbe
stos
jle
addb
xor
push
cmp
cmp
mov
sbb
cmp
cmpsb
jg
or
jg
jne
xor
jg
dec
daa
cmpl
adc
push
mov
dec
fsubrs
push
and
divb
in
inc
fidivrs
fwait
insb
push
dec
lods
into
in
mov
cmpsb
icebp
out
xchg
jns
bound
adc
mov
je
clc
rcrb
dec
dec
aam
push
dec
in
test
mov
ds
dec
mov
mov
in
test
jl
sbb
sbb
lods
inc
cs
inc
addr16
cmp
or
pop
xchg
adc
xchg
dec
mov
mov
sub
mov
pusha
pop
push
push
jmp
sti
push
sub
mov
sbb
fidivl
sbb
jge
int3
inc
cmp
dec
pop
pushf
inc
aam
pushf
and
fs
test
jnp
add
cmpl
das
inc
js
mov
test
imul
mov
cmp
lret
jae
xor
out
aaa
add
xchg
mov
xor
add
mov
gs
shrb
xchg
loopne
xor
ret
sbb
shlb
clc
fs
cltd
adc
push
out
or
push
les
xlat
scas
mov
data16
inc
aas
jmp
enter
pusha
mov
and
push
mov
stos
leave
add
loopne
sub
jnp
loop
cmp
cmp
mov
pop
mov
dec
lret
lock
or
neg
pop
outsb
or
dec
sbb
sub
lret
cmp
hlt
mov
mov
jae
aas
mov
push
dec
mov
mov
loopne
cmpsb
sbb
cmpl
mov
dec
fsubs
sbb
cmp
dec
inc
sbb
in
addb
aad
jmp
mov
insl
mull
jnp
mov
roll
sub
adc
insb
xor
lods
pop
fs
sbb
aaa
add
mov
ret
sahf
and
fs
leave
xor
xor
mov
and
jb
push
daa
xchg
or
sbbb
add
and
cmp
pop
je
mov
lea
xor
rcll
cld
leave
mov
mov
jecxz
push
xor
out
fdivr
jb
cmp
push
and
out
dec
out
adc
inc
fiadds
cmpsl
adc
shlb
jle
xchg
outsb
mov
rolb
push
dec
xchg
xchg
jno
dec
sub
add
inc
scas
and
pusha
xlat
pusha
lret
dec
movsl
cmp
add
jmp
int
inc
add
std
sbb
iret
aad
es
bound
pusha
roll
fucomp
xchg
push
inc
sub
mov
inc
bt
cld
lret
lock
sarl
clc
andl
xchg
test
mov
rcrb
lcall
jmp
sbb
cmp
and
xor
lods
mov
stc
imul
arpl
div
inc
pop
and
lock
jle
outsb
rcl
in
dec
pop
aam
pop
clc
mov
pop
mov
sbb
jnp
inc
rorl
jnp
mov
cmpsb
pusha
cli
addr16
mov
jl
xchg
in
or
jmp
aad
scas
xchg
inc
sbb
push
jno
push
outsb
out
or
out
cmp
jns
lcall
mov
lahf
cli
add
fdivr
cmp
adc
mov
test
clc
jne
cltd
test
xor
mov
popa
addr16
xchg
cld
and
xor
and
mov
outsl
jns
aam
pop
loope
cld
roll
sahf
inc
dec
push
adc
cli
daa
jp
mov
jle
test
dec
xchg
push
cmp
xchg
rcrb
inc
aam
cmp
mov
in
mov
adc
pop
out
cmc
mov
fcomip
je
ja
js
fs
jnp
cmp
shll
mov
fldcw
jno
or
lods
or
inc
xlat
mov
mov
popa
mov
mov
push
xchg
push
lret
cld
aam
cli
and
push
test
xor
pop
pop
dec
movsb
int
pop
jge
in
aad
fnstsw
mov
aad
insb
or
fildl
icebp
andl
sub
push
andl
mov
in
inc
add
xchg
pop
clc
jbe
mul
push
pop
xchg
movsl
ret
out
subps
call
jno
fcompl
movsl
shlb
leave
imul
push
add
dec
mov
inc
orb
push
jge
hlt
int
cwtl
sahf
loop
outsb
sbb
pop
mov
cmpsl
and
jg
sbb
faddl
fucom
or
cmc
jo
pop
mov
pop
fidivs
mov
push
mov
xchg
int
mov
es
cmp
addl
jnp
loope
jbe
mov
fs
test
test
jmp
mov
mov
and
dec
inc
popf
int
mov
mov
inc
pop
fstl
pop
inc
push
mov
cli
stos
push
out
jbe
pop
push
mov
mov
loop
mov
testb
xchg
mov
xchg
pop
sub
dec
out
inc
ja
mov
adc
xchg
adc
or
add
jno
xlat
mov
adc
fstpt
jge
leave
xchg
xchg
cmpb
inc
lock
sarl
insl
inc
add
and
mov
adc
movsb
xchg
sbb
mov
rolb
test
fs
data16
test
int3
or
add
inc
and
out
push
mov
mov
inc
or
fcompl
out
mov
xor
pop
sarb
xchg
add
mov
push
jmp
inc
adc
push
inc
xchg
cs
in
popa
call
pop
jae
imul
jge
fistpl
shlb
inc
insb
and
ret
frstor
mov
jns
inc
fidivrs
out
adc
dec
xchg
mov
jns
lret
mov
push
mov
mov
mov
pop
stos
mov
mov
mov
xchg
jb
mov
lods
insb
mov
shl
pop
jecxz
mov
fsubs
xor
mov
push
xor
sbb
cmp
xchg
xor
push
leave
mov
pop
sbbl
lock
and
lcall
push
fwait
cmc
add
cwtl
jno
jecxz
daa
jg
pmulhuw
cmovns
nop
dec
fisttps
cmp
mov
add
js
adc
test
jo
jne
shrb
push
mov
mov
bound
xchg
inc
push
and
dec
rorb
dec
jle
movsb
cmp
push
push
mov
ds
std
lahf
sbb
lret
mov
test
jae
push
scas
fistl
push
cmovp
pop
push
ja
scas
iret
xchg
push
sbb
jb
cmp
adc
pop
mov
lock
es
mov
pop
add
loope
xor
push
mov
lcall
sub
dec
inc
les
cmc
insb
mov
mov
enter
xchg
inc
mov
mov
fiadds
and
shll
test
and
push
cmp
mov
leave
sub
imul
jmp
in
pop
xchg
jle
cmp
inc
out
shll
dec
in
fwait
popf
pop
pushf
xchg
inc
in
mov
pop
cld
adc
xchg
mov
sti
popa
fstpl
mov
pop
add
scas
nop
scas
sahf
or
icebp
jecxz
xlat
adc
pop
ret
int3
jge
js
repz
loopne
pop
addr16
shr
mov
push
add
or
add
cmp
je
push
adc
xor
sahf
jne
cmp
mov
clc
xchg
xchg
test
inc
int3
addr16
ljmp
xor
cs
fnstcw
daa
ja
jle
jp
out
daa
pop
ja
roll
cmpsb
dec
mov
loop
addl
inc
pop
lret
je
mov
in
adc
pop
mov
cmc
cmp
xchg
pop
ret
pop
jno
loope
mov
lods
stos
xor
push
dec
das
mov
mov
push
inc
push
insb
adcl
aad
icebp
arpl
pop
xchg
adc
les
movsb
xchg
push
in
mov
xor
cmpb
adc
mov
or
cmp
fwait
jmp
ret
loope
xlat
mov
int3
push
aam
jo
xchg
mov
lea
nop
fsubp
in
mov
stc
scas
aas
lcall
sbb
cmp
or
mov
das
rcll
cmp
shll
mov
jle
push
xor
add
push
push
sbb
mov
xchg
push
shlb
dec
test
jbe
stc
or
push
mov
mov
and
cmp
cmp
fs
hlt
sbb
sub
jge
call
mov
xor
stc
loopne
insl
dec
or
adc
xchg
faddp
mov
xor
mov
rcrl
mov
popf
xchg
dec
loope
and
or
test
jmp
fcmovnb
push
sbb
bound
mov
jns
jne
push
clc
arpl
mov
fdivs
dec
push
lahf
fnstsw
or
stos
in
and
out
and
movsb
push
cli
test
ret
lods
sub
test
sbb
cli
mov
push
in
inc
aas
popf
pusha
orl
cmpsl
mov
push
push
mov
fistpl
and
mov
hlt
push
inc
loope
fwait
mov
inc
xor
shrl
lahf
jno
sbb
jnp
repnz
pop
lret
mov
jmp
loopne
sbb
test
hlt
shrl
test
mov
clc
jns
add
ret
lea
in
clc
iret
push
push
add
inc
repnz
rcrb
daa
test
jmp
jg
or
jns
push
rclb
ja
aam
inc
mov
ficompl
aas
mov
lea
mov
mov
fcoml
iret
cli
test
sahf
fisubs
add
sbb
fwait
mov
inc
push
sbbb
add
sbb
inc
sarl
cld
mov
movsl
jmp
cmp
mov
mov
lods
push
test
pop
fs
jle
adc
mov
jmp
call
outsb
jp
frstor
mov
rol
cmp
inc
sbb
mov
cmp
mov
add
ja
pop
sahf
add
inc
push
and
lea
lcall
ret
fdivs
add
sub
jo
loope
sbb
movsl
dec
xchg
repz
push
mov
jb
mov
loop
or
shr
ror
sub
lret
push
aam
cmpsb
js
inc
int
outsb
jns
cs
and
movsb
fistl
mov
aaa
ds
mov
pushf
outsb
hlt
mov
cltd
bound
mov
fidivs
mov
inc
adc
jecxz
iret
pop
add
push
ret
cltd
pop
pusha
sahf
xchg
icebp
xchg
stos
stc
int3
mov
in
iret
loop
imul
or
jbe
dec
mov
popf
repz
xor
popf
int
lods
js
inc
and
cmpsl
int3
xchg
cmpl
mov
push
rcr
call
std
lods
cmc
dec
cmpl
pushf
int3
sub
adc
sub
fiadds
jno
jmp
testl
mov
fs
aas
push
push
pusha
dec
sub
pop
repz
lds
lret
loopne
mov
nop
xlat
add
test
and
in
pop
sbb
sbb
divb
pop
movsb
enter
loope
imul
cld
ljmp
test
test
fcoms
mov
mov
aas
cmc
rcl
mov
add
sbb
data16
dec
mov
pop
dec
pushl
cs
xor
call
dec
adc
or
ffreep
and
pop
ja
fiaddl
lods
pop
push
lret
aaa
pop
adc
dec
sub
je
sbb
pop
push
cmp
jne
repnz
mov
and
cmp
rcll
insb
pushl
mov
jo
or
and
dec
orl
fdivp
xchg
fdivs
add
push
or
dec
mov
cmpl
inc
push
test
xchg
inc
fstp
xor
mov
push
aam
jmp
xor
lock
pop
adc
or
xor
rclb
ds
xor
push
mov
fdivs
std
xchg
arpl
sub
lcall
ljmp
xchg
in
fndisi(8087
insl
cwtl
cmc
fidivrl
scas
outsl
ja
imul
into
push
xor
out
pusha
int3
pop
and
insb
bound
outsb
pop
in
gs
cwtl
jno
mov
jg
mov
pop
or
sub
push
push
call
and
outsl
xor
cld
mov
dec
cs
mov
mov
fldt
mov
scas
xchg
and
mov
clc
cmpsl
xor
sti
cmpsl
push
jbe
xchg
adcl
mov
je
dec
pop
mov
leave
pop
lock
stc
clc
push
mov
push
jb
out
dec
mov
push
leave
idivl
mov
dec
mov
addps
andb
xchg
int3
xor
rcll
outsb
pop
fsubs
cmpsl
xor
xchg
arpl
out
testb
push
add
xchg
jnp
cmp
mov
inc
gs
jmp
addr16
mov
mov
or
mov
ljmp
lods
jl
movsb
shl
enter
jle
jbe
imul
mov
inc
xor
icebp
sub
mov
and
lods
pop
sub
movsl
ficomps
pop
imul
jb
lods
sbb
fildll
inc
push
imul
ss
jle
loopne
enter
dec
imul
insb
out
mov
fs
inc
sub
jecxz
jge
xlat
push
fcompl
push
cmp
rclb
repz
loope
sahf
punpckhbw
inc
push
cs
jp
adc
cmp
sbb
sub
subl
jb
cmp
mov
mov
mov
adc
or
xchg
jecxz
loope
jle
xchg
or
or
std
push
in
icebp
mov
arpl
jmp
ljmp
imul
jmp
lods
js
adc
pop
std
mov
out
sbb
dec
xchg
jne
jns
popf
shr
or
xchg
mov
jbe
mov
lea
mov
lods
mov
cwtl
incb
adc
movsb
mov
dec
cltd
in
mov
test
cmp
mov
pop
stos
mul
mov
pop
or
pop
mov
aad
leave
mov
or
push
fistpll
xchg
mov
xor
push
jmp
pop
push
movsl
roll
cli
pusha
leave
mov
jnp
repnz
adc
sbb
sub
xchg
add
aad
push
out
cmp
or
movsl
ja
insb
mov
in
test
ljmp
repz
inc
or
arpl
imul
shll
out
movsb
cld
mov
jb
cltd
dec
inc
out
lret
imul
xchg
mov
fcmovnbe
mov
roll
jg
gs
dec
jno
pop
stc
xchg
ja
rcll
sti
or
fcomps
xchg
push
js
jmp
mov
mov
and
mov
push
lret
inc
addb
adc
cmp
lret
and
subb
fiaddl
add
imul
scas
or
int
mov
mov
jp
fs
lahf
pop
sub
out
pop
lods
dec
out
mov
pushf
cltd
mov
test
pushf
stos
or
push
add
cmpsl
push
in
mov
pop
mov
clc
xor
or
xchg
int
leave
rorl
xor
in
mov
sub
sub
or
inc
jle
addr16
sbb
lock
xchg
mov
push
ret
cmc
andl
jge
pop
cmp
mov
rcll
jecxz
xchg
rcrl
sub
sbb
movsl
or
test
daa
lcall
and
lret
imul
pop
push
jo
mov
xchg
test
push
and
ret
sub
mov
and
jae
outsb
aam
ss
fbld
xorb
sbb
fidivl
in
push
add
jo
out
aaa
mov
test
es
loope
lds
into
xchg
out
ficoml
pop
or
xorb
movsb
mov
nop
inc
jbe
sbb
aas
clc
and
in
xor
mov
sti
cmc
imul
mov
es
cmpsb
fldenv
jge
jecxz
mov
lahf
sub
xchg
inc
roll
cltd
jge
mov
psubw
nop
xor
and
push
je
mov
xorb
insb
jnp
xchg
push
lret
aas
lea
imulb
icebp
jmp
stos
rcrb
fwait
testl
mov
cmp
je
lock
imul
xchg
jb
repz
jmp
jle
jecxz
gs
fiadds
push
loop
xor
and
push
push
xchg
lea
cmpsl
stc
xor
jnp
jo
aad
xchg
icebp
int3
pop
pxor
dec
jbe
test
shl
movsb
add
xor
fldt
stos
jle
xchg
add
andb
push
test
mov
or
mov
push
inc
mov
std
inc
cmpsb
sbb
inc
pop
lds
lret
sub
sub
push
xor
js
pop
push
clc
test
dec
xchg
sub
sbb
repz
mov
inc
repz
mov
push
dec
lods
fwait
shll
std
daa
movsl
push
mov
and
inc
insl
shll
push
fsubr
test
push
push
sti
cmpsb
jmp
adc
sub
pop
std
lret
mov
pusha
cmp
fidivs
xor
sub
jns
sub
cmp
cld
repnz
sub
xlat
je
arpl
cmp
xor
out
fwait
xchg
sarl
push
mov
xchg
out
ret
inc
mov
jmp
arpl
stc
xchg
insb
push
mov
adc
dec
icebp
aam
mov
mov
push
aam
sbb
sbb
dec
xlat
ficompl
call
nop
and
loopne
insb
mov
rcll
popf
shrl
pusha
inc
dec
mov
loopne
or
sbb
cltd
xchg
rcrl
xor
push
cmp
fldenv
add
loopne
fimuls
iret
ftst
sub
xchg
out
and
out
and
or
lods
dec
dec
lea
cwtl
mov
dec
jo
lds
cmp
xchg
push
adc
jnp
xor
xor
sub
sbb
jnp
mov
pop
jns
jge
cmp
inc
mov
test
ljmp
ficomps
pop
addr16
test
fildl
andl
pop
test
shrl
mov
cmpsb
fsubs
out
lret
scas
je
notl
mov
cmp
clc
movsb
add
mov
cltd
push
dec
fucomip
adc
ret
in
or
jg
enter
icebp
and
rclb
ds
imul
xorb
cli
push
rolb
cmp
ja
sbb
pop
enter
adc
push
mov
cmpsb
sub
and
lds
icebp
add
pop
ljmp
test
jno
lret
imul
mov
fldl
mov
lods
inc
sti
cli
pop
ret
fidivrl
mov
int
mov
cwtl
in
xchg
cmp
call
dec
push
insl
mov
imul
jle
mov
adc
lods
add
push
xor
out
fimuls
mov
mov
sbb
loop
push
shrb
sub
rorb
loop
adc
dec
xor
sub
inc
pop
mul
sbbb
pushl
lcall
fnstcw
movb
in
or
andb
mov
data16
inc
stc
clc
add
stc
jne
add
push
lret
js
mov
dec
mov
dec
xchg
add
stc
dec
clc
lahf
mov
or
rorb
mov
nop
cltd
add
movsb
je
movsb
mov
sub
test
repnz
sahf
push
mov
inc
pop
scas
aas
sarl
inc
ljmp
mov
outsl
pop
pop
mov
cmp
jne
pop
or
bound
gs
std
insl
dec
dec
inc
push
pop
pop
or
mov
pop
fs
xorl
fisubrs
or
add
sub
pop
xor
mov
add
sbbb
cli
cmp
fdivl
cltd
sbb
scas
pushl
pop
push
in
in
pop
ss
dec
cmp
outsl
add
cmpsb
and
rol
xchg
xchg
xchg
jae
xchg
or
dec
cltd
cmc
cmp
push
cmp
add
cld
leave
jg
mov
repz
mov
aaa
gs
stc
out
and
scas
out
add
pop
rclb
mov
sbb
shrb
les
jge
iret
xlat
cmp
xor
jbe
and
jp
jne
out
push
sub
insb
jnp
sub
xor
pop
ret
dec
fistpl
push
cmpsb
outsb
dec
in
les
mov
pop
jae
dec
sbb
add
mov
jge
adc
outsl
xor
mov
jmp
lock
mov
mov
fwait
cmp
jb
insl
pcmpeqd
das
mov
xchg
and
mov
les
mov
enter
inc
clc
scas
cmp
mov
pop
fwait
pop
mov
mov
or
push
adc
or
es
pop
test
and
cmp
cltd
stos
ret
scas
jg
or
inc
orb
xor
xorb
loopne
dec
mov
push
aad
xchg
les
insb
pushf
ret
xor
mov
decl
dec
mov
mov
add
mov
add
outsl
push
xchg
lods
dec
testl
popa
push
xor
mov
nop
dec
ljmp
mov
fs
sub
jns
fimuls
pop
std
inc
xor
jg
ja
clc
xchg
push
rcl
mov
lea
xor
std
rclb
in
lahf
ret
lahf
movsl
add
insl
arpl
mov
lods
mov
cwtl
sti
arpl
adc
icebp
in
pop
inc
int3
loope
push
aas
pop
std
ljmp
cld
push
inc
lock
std
dec
out
sarl
cmp
clc
js
das
xor
call
stc
xor
mov
fs
cmpsb
xchg
ds
lock
dec
hlt
xchg
lock
daa
aaa
or
sbb
or
scas
add
sub
cld
mov
mov
sbb
mov
popf
loopne
ret
ss
aam
sub
lods
aad
jo
inc
push
outsl
daa
push
imul
and
popw
stos
out
and
js
arpl
push
pop
sbb
xor
push
rolb
sub
mov
cmpsl
loopne
adc
jle
test
movsl
jnp
rolb
mov
jge
sbb
aam
adc
testl
mov
bound
jp
cmp
into
pushf
mov
arpl
popa
add
mov
add
pop
dec
movsl
ds
fucomi
loope
pop
cwtl
jne
adc
fdivr
aas
mov
add
xchg
adc
push
int
jmp
pop
ja
loope
mov
pop
int3
fsts
inc
dec
fsubrs
add
mov
mov
add
sarl
aas
jb
cmp
xchg
call
xor
lods
jmp
ljmp
test
pop
cmp
cmc
and
push
notl
int3
mov
out
xchg
push
aam
sub
test
in
push
ficoms
and
or
adc
push
cmp
xor
jg
int
inc
or
cmpl
push
call
int
xor
movsb
gs
ja
xchg
sbb
stos
cld
jns
inc
gs
xor
enter
pop
dec
jne
add
lds
dec
push
mov
aam
adc
mov
lret
push
lahf
lock
fucom
in
dec
insl
imul
cmp
stos
xchg
mov
mov
bound
pop
lea
mov
or
fistpl
je
popf
mov
or
lret
xchg
addr16
fs
sarb
xchg
lock
or
sub
dec
cld
jmp
je
aas
into
sbb
sub
dec
lea
nop
cli
movb
std
sub
xchg
jnp
popf
flds
push
sti
dec
lcall
fucomi
mov
fbld
stc
fs
dec
xchg
jb
pusha
das
lods
add
or
and
jg
xor
xor
jne
imul
and
or
mov
and
mov
fidivl
jns
push
clc
inc
lcall
xchg
xchg
cmp
mov
lea
push
mov
adc
jno
cwtl
cmp
pop
xor
jnp
and
add
mov
aaa
mov
aaa
and
adc
mov
inc
jp
bound
and
xor
adc
sub
jnp
into
xorl
in
push
cwtl
mulb
mov
xor
ss
push
cmp
movsb
sbb
push
fnstsw
out
jb
test
insl
dec
ja
nop
mov
cmp
enter
int
cli
mov
in
sub
out
jecxz
mov
stc
adc
mov
xlat
stos
sahf
adc
jle
sbb
shlb
jl
cmc
loop
pop
xor
and
pop
int
dec
mov
pop
lahf
dec
ljmp
mov
sbb
lcall
lods
popf
bound
and
movsl
iret
shll
lods
mov
xlat
or
pop
mov
addr16
repnz
mov
inc
lea
mov
rcrb
mov
jge
jp
push
cmp
ljmp
xlat
mov
jg
jb
insb
mov
jg
enter
out
mov
pop
lds
or
adc
bound
cltd
cmpsb
test
mov
daa
sub
cmp
adc
pop
sub
hlt
imul
sub
sahf
sub
fs
fldt
lods
inc
flds
test
cmpsb
leave
inc
xor
pcmpgtb
lock
lea
cwtl
cmp
or
jmp
ljmp
test
sti
xchg
lds
pop
mov
sbb
sub
push
inc
mov
in
orl
sub
cmp
shll
and
stos
dec
dec
movsl
add
cltd
cmp
daa
je
mov
aam
dec
dec
lahf
pusha
pop
cmp
jl
or
dec
cmc
pop
cmp
or
fcoml
inc
aad
pop
aad
mov
and
push
in
inc
push
out
jmp
push
mov
inc
enter
pusha
dec
cli
aaa
mov
shr
dec
adc
shlb
and
in
inc
pop
xchg
fwait
xchg
or
cs
pop
data16
cmp
push
push
pop
mov
scas
xor
lea
cli
popa
je
mov
std
bound
cwtl
push
mov
mov
jg
lea
fisttpl
mov
stc
outsb
ds
lahf
mov
ja
fwait
test
shrb
mov
cmovo
ret
xor
mov
loopne
mov
and
hlt
mov
or
and
xchg
xchg
lods
jno
mov
mov
push
pushf
inc
out
sbb
lcall
call
cmpsl
mov
out
out
nop
cwtl
es
jle
sub
gs
pop
mov
loopne
stos
mov
pop
xor
jge
fmul
data16
lret
push
loop
aad
inc
fldt
jno
cmpsl
cmp
and
mov
jecxz
push
push
out
gs
push
je
dec
js
inc
mov
imul
hlt
out
push
sbb
adc
dec
jo
lods
jnp
loopne
mov
pop
inc
ficompl
mov
add
and
std
sub
shrl
cld
insb
fucom
jbe
jae
fbld
imul
push
js
loope
sbb
mov
loope
mov
or
cmp
ja
dec
inc
mov
outsl
cmp
cmp
sbb
dec
ljmp
lret
clc
sbb
leave
jge
xor
out
push
push
sub
data16
in
call
imul
sbb
inc
sbb
daa
scas
inc
push
mov
shrl
mov
aad
pop
pop
jl
mov
std
out
jo
jmp
scas
push
sub
adc
xchg
ret
mov
lahf
daa
bound
or
fcom
sbb
orb
or
mov
add
rorl
dec
and
call
out
test
dec
inc
inc
jb
es
idivl
nop
adc
das
scas
cwtl
xor
outsl
pop
or
or
mov
inc
insl
push
cli
mov
in
or
and
xchg
push
inc
cmp
inc
inc
mov
out
jecxz
add
lret
ret
cld
push
mov
cwtl
popa
mov
subl
pushf
aam
es
mov
lahf
jmp
cmp
and
test
push
lods
jne
dec
push
xchg
jns
repnz
jmp
jle
add
sub
jns
mov
pop
aaa
decb
sbb
xor
add
ret
inc
sbb
loopne
negb
inc
xchg
add
or
push
insb
mov
mov
cmpsl
pop
data16
mov
sub
aas
cmp
push
outsl
add
push
jecxz
fisubl
lods
add
adcl
add
daa
jecxz
mov
popf
mov
lods
sub
push
xchg
mov
mov
adc
cmp
je
rorb
cmpsl
mov
cli
xchg
mov
xchg
or
xor
mov
lcall
movsl
ret
mov
test
je
lcall
adc
fdivs
cmpsb
push
into
icebp
es
mov
jp
xor
xchg
dec
mov
fst
dec
add
pusha
call
mov
add
int
test
adc
xchg
and
lret
pop
gs
adc
aam
mov
stos
test
lea
aas
sbb
mov
xchg
mov
xchg
or
add
jae
test
int3
xchg
ds
xchg
sub
dec
pop
stc
mov
pop
dec
dec
bound
and
xchg
test
fldt
xor
jmp
data16
cmp
les
mov
jns
mov
sbb
inc
movsb
scas
ljmp
insb
ss
mov
xor
into
out
cld
pop
lcall
cmp
ds
fwait
dec
out
movsl
cwtl
ds
push
xor
subl
or
push
push
imul
es
and
cmpsb
aaa
push
scas
adc
fiadds
test
pop
sub
push
sub
in
test
cmc
pop
mov
imul
sbb
xchg
xchg
and
scas
push
dec
xlat
sbb
insb
dec
test
or
jbe
mov
fcoms
in
fistpll
push
jl
fsts
or
xchg
or
frstor
adc
hlt
cmp
popf
mov
loop
orb
lea
lret
cmp
sti
movsl
dec
sbb
adc
arpl
jg
mov
lds
push
or
shrb
rcrb
lahf
pop
pop
adc
fistl
jle
mov
jmp
jmp
lret
xchg
scas
stc
lahf
push
insb
addr16
dec
sub
or
insl
cmpsb
push
push
sbb
add
popf
mov
mov
inc
scas
cmc
into
push
xchg
enter
pusha
mov
cwtl
adcb
jl
lcall
divb
cmpsb
cmp
hlt
insl
fwait
jl
dec
fcmovb
fsubrl
mov
or
inc
sub
jmp
data16
rorb
mov
adc
mov
xchg
add
inc
dec
push
into
xor
imulb
sbb
addb
ja
es
cwtl
popa
and
cwtd
scas
sbb
lahf
roll
and
and
xor
dec
popa
sahf
jp
pop
or
pusha
push
out
cli
cmp
push
dec
cmp
icebp
sbb
jmp
pop
or
lock
or
imul
incb
inc
fs
and
xchg
pushf
addl
mov
mov
popa
sbb
in
cmpsb
jmp
add
mov
push
mov
das
push
cmp
inc
cltd
das
std
aas
add
aad
push
dec
mov
rcrl
lods
loop
out
pop
mov
data16
pop
lods
sub
and
mov
add
and
popa
jb
js
stc
inc
or
inc
and
cmc
imulb
ds
notb
fstps
mov
inc
jns
xchg
adc
jns
inc
sarb
into
push
mov
cmpb
cmp
decl
mov
cmp
cmp
push
sti
lods
mov
push
icebp
inc
test
subl
ficomps
add
aam
testb
ds
sub
loop
rorb
insb
repnz
cmp
in
daa
pusha
aad
insl
sub
ret
sti
inc
jmp
or
mov
push
test
pop
mov
imul
cmp
adc
repz
add
iret
dec
sub
iret
and
or
sub
stos
pop
dec
fcomps
inc
add
cs
mov
popa
push
ds
cmpsl
mov
fists
jb
std
mull
out
pop
or
pop
sbb
push
test
inc
push
pop
xlat
mov
mov
push
add
pushf
loopne
xchg
ret
jmp
das
sub
lods
sbb
xchg
js
push
sbb
cli
and
movsb
or
xor
ss
popf
and
ret
xor
cltd
jns,pn
aad
ja
mov
pushf
sub
cmp
push
in
cmp
jg
sub
movsb
stos
dec
ljmp
xor
rolb
insb
mov
or
cwtl
daa
shlb
dec
and
or
mov
addr16
xchg
js
enter
imul
add
call
jp
fwait
jb
sub
jno
sub
call
pop
outsl
push
dec
adc
jle
icebp
icebp
mov
jecxz
aam
mov
cmpsb
add
mov
cmp
xchg
mov
or
sub
mov
jmp
pop
jo
inc
jg
scas
mov
sarl
add
dec
out
aam
sti
xchg
mov
fcmove
sub
addr16
add
es
dec
xchg
arpl
ss
fistpll
sub
int3
cmp
mov
ret
mov
sub
js
mov
pop
ja
out
adc
fdivs
int
adc
xchg
sbb
fwait
dec
mov
jae
imul
dec
sbb
and
cmc
pusha
pop
mov
xor
fiaddl
sbb
push
lds
xor
pop
xchg
pop
jo
hlt
test
fmuls
push
out
xor
or
mov
lock
mov
subl
call
jb
es
lds
add
mov
mov
movsb
push
dec
pop
dec
mov
push
stos
fsubs
les
sbb
shlb
popf
pop
das
mov
xchg
mov
mov
insb
ss
rol
jbe
pop
ljmp
sub
xchg
cwtl
fs
cmc
dec
and
scas
out
cmp
idivb
push
fimull
mov
inc
push
rcrb
jne
jmp
out
and
jno
mov
pop
test
xor
ja
aas
push
rcl
sub
gs
jmp
push
push
add
dec
push
cmc
subb
sbb
test
sahf
xchg
and
xchg
test
dec
rcrb
test
jno
jnp
pop
outsl
add
inc
or
test
sub
jb
mov
test
je
leave
mov
mov
mov
test
int
mov
xor
mov
out
push
mov
rorl
dec
cmp
or
sahf
cmpl
cmpsb
xchg
sub
or
mov
rcl
mov
rorl
outsl
dec
jge
test
xor
cwtl
je
dec
fwait
xchg
and
jl
dec
ljmp
or
xor
daa
imul
ljmp
cmp
clc
xchg
mov
movsl
add
dec
push
push
fdiv
cmpsl
or
movsl
inc
loope
sub
push
cmp
cwtl
fnstsw
clc
and
imul
sarl
inc
xlat
inc
mov
leave
movsl
lcall
test
inc
push
jge
imul
or
cmp
int
imul
inc
ficompl
ret
ja
push
rorb
push
ljmp
mov
xlat
sub
sbb
lea
xlat
and
mov
mov
sbb
pop
sbb
xor
xchg
cmp
pop
sbb
clc
cld
fstpt
push
sub
pop
jmp
into
cmp
repz
sbb
into
test
cltd
mov
xchg
add
pause
adc
int3
mov
dec
dec
test
faddl
mov
xor
jnp
mov
lods
jnp
cmpsl
jae
ret
or
test
xor
clc
dec
pop
jp
int
inc
imul
mov
inc
jmp
sub
cmp
xor
jne
mov
xchg
and
mov
popa
movsl
lea
into
das
aas
shrb
mov
cs
mov
repz
popf
add
mov
test
xlat
adc
lret
jl
int3
pop
stos
adc
mov
cld
cs
adc
jge
in
iret
in
jmp
xchg
addr16
jmp
pop
repnz
mov
mov
stc
sub
pop
add
mull
jl
daa
jle
insl
imul
xchg
and
leave
mov
push
js
mov
push
pop
pop
rorl
mov
lahf
push
push
test
out
sbb
std
push
repnz
mov
das
mov
out
xchg
inc
out
scas
je
cld
push
mov
lret
cmp
xlat
rcrl
dec
cmp
mov
rcl
dec
lahf
mov
mov
lret
sub
popa
enter
sub
or
jge
les
xor
or
lods
or
mov
mov
mov
cli
lock
movsl
pop
xchg
cmpsb
mov
add
xor
in
mov
mov
in
fwait
mov
ret
sahf
push
xor
lock
mov
enter
pop
mov
cli
adc
or
subl
test
inc
and
mov
into
jle
decb
sub
and
sub
add
aad
imul
mov
aaa
aas
pop
fistpl
jg
fbstp
js
arpl
les
jne
andb
cs
das
xor
ss
xor
pop
xor
call
jnp
movsb
or
sbb
ja
adc
mov
xchg
xchg
and
or
or
je
xchg
int
sbb
popf
outsl
mov
test
lcall
pop
lcall
call
push
cltd
xchg
ret
dec
sub
xchg
xor
mov
sti
iret
cmc
xchg
lods
jae
or
mov
jo
jmp
inc
xchg
mov
pop
orb
xchg
idivl
popa
mov
test
push
sub
addb
cmpsb
sbb
ljmp
repnz
ret
ss
adc
cmpsl
jnp
or
xchg
shrb
imulb
push
fstp
fcomps
repnz
jno
mov
pop
pop
adc
add
push
cmpl
push
orb
popf
xor
mov
roll
xchg
stos
in
sub
push
scas
jo,pn
mov
subl
inc
pop
sahf
je
hlt
push
sbb
push
ret
fcompl
mov
jns
dec
dec
shll
ret
imul
xor
stos
push
call
in
std
outsl
hlt
repnz
xchg
jp
jle
into
adc
fcomps
ja
mov
xor
movsl
dec
xchg
cltd
mov
test
adc
cmp
push
outsb
ret
sahf
js
xchg
imul
adc
or
sbb
push
push
dec
addr16
iret
mov
cmp
nop
add
in
sub
push
mov
int
rclb
stos
ds
dec
xchg
adc
mov
ds
addb
adc
bound
jbe
mov
paddb
test
inc
mov
jne
clc
in
cmp
dec
mov
stos
push
xor
adc
shll
push
pop
lea
mov
stos
mov
outsb
mov
add
cld
and
into
and
push
pop
pop
jge
pop
xor
stos
lahf
iret
jae
mov
test
push
into
adc
std
and
xchg
mov
sub
sub
xchg
ds
inc
jge
mov
push
mov
rcrb
popa
lods
inc
pop
sbb
and
gs
add
jge
mov
aaa
jmp
out
inc
or
insl
sbbl
inc
fcmovne
negl
sub
pop
imul
mov
adc
outsl
mov
add
hlt
cld
xchg
cwtl
aas
bound
mov
stos
cmp
stos
icebp
test
add
leave
cmpsb
in
add
repz
pop
movsl
jecxz
aas
or
jb
lret
jns
outsb
cmc
cltd
ss
data16
dec
sbb
addl
or
in
jbe
mov
call
cltd
cwtl
adc
negb
inc
inc
sahf
das
jne
sub
dec
andl
xchg
cmp
adc
mov
jl
loopne
and
addb
sub
xor
push
out
cmp
pop
sub
add
outsl
xchg
push
and
loop
cli
repnz
lea
sub
test
dec
xchg
and
enter
movsl
loopne
ret
adc
pop
push
insb
fcmovnu
adc
or
mov
push
cmp
out
jae
sub
mov
sbbb
mov
loope
jbe
sbb
cmp
pop
push
cltd
ljmp
push
mov
jbe
cmp
call
imul
mov
pop
imul
cmpl
imul
cmpsb
add
cmp
mov
popfw
adcb
sub
dec
mov
mov
mov
aad
jno
sbb
mov
lcall
sahf
xchg
or
lret
sbb
rcrb
mov
or
xchg
push
cmp
xchg
int3
jmp
iret
mov
fidivs
cmc
repz
cmp
fs
repz
pop
scas
int3
pop
in
pop
outsl
pop
pop
cmp
mov
loopne
push
or
add
outsl
sub
xor
mov
xchg
sahf
mov
xchg
enter
xchg
shll
loope
fnstsw
dec
sub
popa
lret
lods
leave
aad
jge
mov
aaa
aaa
xor
out
lret
pop
daa
push
mov
fsubrl
xchg
jg
outsb
out
sbb
arpl
stc
sbb
idivb
fwait
cld
jb
leave
add
dec
cmp
mov
popf
aas
adc
lds
jp
add
jmp
xchg
pop
popl
mov
stc
popa
mov
lea
and
or
pop
ret
add
jle
out
fwait
mov
pop
testl
cmpl
mov
or
and
lret
add
pop
adc
movsl
xor
sbb
mov
ljmp
ficoml
ljmp
fsubr
out
adc
push
jne
fcomi
sub
add
shrl
gs
cmp
mov
dec
sub
rclb
fildll
je
enter
ja
adc
mov
lock
and
in
cmp
xbegin
inc
dec
jp
lds
jge
sub
testl
call
cmpsl
lods
andl
or
push
mov
push
mov
ret
jbe
sbb
sbb
xor
dec
mov
ljmp
xchg
cmp
cltd
mov
pop
jecxz
jns
lods
icebp
push
xor
sub
test
xor
inc
mov
mov
sub
push
adcb
ja
dec
lret
hlt
xlat
jno
pmuludq
int3
ljmp
jl
jb
mov
ds
push
lods
adc
stc
stos
movsb
movsl
xchg
mov
mov
fidivrl
mov
mov
bound
dec
xlat
jmp
add
push
mov
push
repz
add
mov
dec
xor
xor
push
sti
mov
sbb
mov
xchg
adc
cs
mov
jno
daa
lods
inc
mov
das
mov
mov
mov
dec
mov
sar
sti
stos
iret
in
ljmp
ja
pushf
shll
adc
lahf
mov
fcom
push
andl
xor
add
dec
or
subl
in
cmp
adc
in
jmp
mov
sahf
adc
jl
insl
leave
faddl
adc
ljmp
and
or
xchg
jbe
sub
fildll
sub
pusha
push
and
jbe
jbe
adc
inc
cs
sub
mov
mov
sbb
and
pop
sbb
mov
ss
fildl
cmp
lods
lea
ja
into
add
aaa
push
das
loop
sahf
jmp
cltd
mov
je
dec
ffreep
pushf
mov
out
cmc
and
scas
fwait
dec
in
bound
pop
out
or
or
lds
sti
sbb
push
fisttpl
ja
mov
enter
ficomps
out
outsb
push
dec
xor
xor
or
cmc
cmp
nop
pop
stc
xor
lock
scas
mov
mov
fistpll
jle
test
xchg
mov
in
push
xor
in
mov
mov
roll
aaa
cmc
dec
and
jg
cs
popa
pop
insb
popf
xchg
sub
adc
cmp
fcom
mov
fisubrs
mov
out
xchg
lods
add
add
mov
pop
out
iret
das
leave
xchg
or
je
inc
and
adc
lods
xor
loopne
and
adc
and
xchg
clc
ficoms
jns
stos
sbb
cld
stos
jecxz
and
sti
mov
xchg
mov
test
inc
mov
mov
or
dec
mov
sbb
std
gs
inc
imul
mov
and
pop
cld
sahf
das
in
inc
lcall
mov
fcmove
iret
mov
xchg
lahf
pop
pop
sub
outsb
lret
sub
pushf
rorb
gs
hlt
test
add
lret
jbe
inc
sub
test
add
mov
jo
push
into
add
or
cltd
xor
or
jo
pop
sub
jne
xchg
mul
movsb
push
adc
xchg
stc
das
dec
or
mov
addr16
xor
sbb
aas
test
into
xchg
sbb
mov
aam
std
mov
or
es
jl
roll
in
repnz
mov
clc
clc
enter
pop
adc
in
push
loopne
imul
sbb
mov
push
jb
fldl
sbb
outsb
jbe
push
xchg
int
adc
dec
cmp
dec
sub
inc
xchg
repnz
sub
inc
orl
fdiv
xchg
push
stc
cwtl
nop
mov
push
cmovae
cmpsl
popa
les
mov
shrl
or
clc
inc
dec
leave
or
xlat
jne
mov
loope
hlt
aam
fcoms
ret
iret
jge
mov
stos
push
daa
mov
fmul
push
xor
addl
mov
into
fistps
jp
mov
enter
scas
lods
xchg
xchg
add
mov
jmp
icebp
testl
fcoms
scas
cmp
sub
cld
adc
inc
push
arpl
popa
and
and
inc
xor
pop
mov
jecxz
stos
enter
add
dec
incl
push
sub
cltd
mov
dec
pop
fisubrl
sbb
jnp
mov
inc
jmp
test
gs
out
leave
ja
ljmp
les
inc
sbb
sub
and
test
mov
aam
jmp
mov
popf
fdivr
jge
dec
push
stos
gs
or
leave
rcrl
xor
movsb
add
push
shll
jne
addr16
out
sub
dec
mov
mov
sub
pusha
push
fmul
or
andb
ljmp
add
xchg
sub
xchg
cltd
in
mov
lock
jge
push
mov
sbb
sbb
lcall
insl
fdivp
in
outsb
popa
jp
jmp
aaa
sub
pop
inc
rorb
int3
and
xor
inc
xchg
mov
iret
lock
sbb
push
les
lods
mov
xor
mov
and
push
mov
fnsave
inc
add
add
cs
cld
and
dec
cltd
jns
xorl
ja
popa
pop
add
sub
test
sar
fistpll
inc
jp
cmp
pop
jo
hlt
sahf
mov
push
lds
sti
jno
push
fimuls
sbb
je
xlat
mov
rorb
or
cs
add
in
xor
mov
lret
std
fldcw
icebp
mov
xor
xor
in
inc
sub
nop
and
imulb
pop
sub
mov
adcb
clc
xchg
add
and
jecxz
shrl
or
xchg
add
out
sbb
xchg
sti
fistpll
fidivrs
pop
loope
push
decb
shlb
pop
fnstcw
and
icebp
mov
or
iret
lret
out
lods
aaa
popa
or
test
push
xchg
scas
adc
fmuls
test
inc
jb
in
add
sbb
into
ljmp
aad
lea
xlat
subl
dec
mov
movsb
jg
push
andb
mov
jg
pop
test
sti
aaa
loop
mov
cmpsl
cmp
mov
mov
popa
adc
sub
mov
out
sbb
xchg
enter
mov
jo
outsb
xchg
xchg
xchg
outsl
push
and
jb
mov
xrelease
icebp
aaa
push
adc
lret
mov
jmp
rol
test
mov
xchg
adc
fwait
pop
and
fcompp
xlat
jne
lds
xor
jbe
add
insl
sbb
pop
icebp
mov
sbb
in
mov
shll
or
data16
cld
or
mov
cmpsb
arpl
push
fwait
mov
dec
lret
mov
in
mov
or
ret
or
mov
movsb
and
pop
xor
xchg
dec
jmp
scas
int3
jl
fdiv
mov
pushf
rcrb
push
loopne
ret
pop
lcall
addr16
xchg
fiaddl
fidivl
push
cmp
dec
insl
pop
pop
loopne
daa
ret
test
pop
mov
adc
loop
les
arpl
xchg
loope
cmp
cmc
mov
jns
sub
cmp
arpl
mov
lret
enter
mov
adc
mov
push
push
in
add
test
and
push
jne
fwait
movsl
and
mov
sbb
mov
mov
testb
imul
or
and
aas
fadds
adc
add
xlat
pop
lods
xorb
inc
cmp
pop
lods
lods
shlb
imul
mov
mov
punpcklwd
mov
lock
dec
int3
add
fdivrs
int3
add
out
adc
and
lret
mov
mov
dec
idiv
fdivs
pop
repz
add
arpl
lock
and
out
popf
ret
pop
int
mov
inc
inc
test
mov
sahf
inc
mov
add
inc
sub
mov
jo
lcall
dec
adc
jp
repnz
mov
fsubrl
decb
sub
int
aad
mov
loope
fxch
mov
pop
pop
iret
aaa
lret
repz
pop
ret
ljmp
dec
pushf
sbb
lret
enter
or
mov
vmovaps
mov
in
or
cmp
dec
ja
into
xor
sub
sbb
add
sbb
cmpps
push
and
mov
adc
pop
ljmp
rclb
pop
cmp
adc
cmpl
dec
and
jo
inc
fildll
bound
int
inc
lods
aam
cltd
cltd
cwtl
sub
stos
pop
push
out
push
pushaw
xor
clc
leave
fsts
loop
add
add
test
bound
lret
stc
cmpsl
subb
inc
cmp
mov
or
std
push
icebp
addr16
in
dec
stos
pop
inc
iret
stos
out
repnz
mov
stc
iret
lret
stc
out
out
xor
aam
incb
pop
mov
movsb
push
jno
xchg
test
loop
enter
fiaddl
jnp
stos
pop
pop
pop
jl
or
inc
ret
sahf
icebp
popf
lods
stos
adc
adc
js
fadd
addl
mov
fwait
mov
cmp
sub
xlat
aaa
mov
scas
adc
and
rol
sahf
sub
push
jl
or
inc
adc
aam
mov
sbb
pop
inc
stc
loop
push
out
outsb
mov
dec
lret
cmp
xchg
inc
repz
stc
std
push
mov
xor
imul
mov
ja
mov
or
pop
dec
leave
out
pop
mov
insl
iret
jnp
je
xor
outsb
hlt
int3
sbb
push
dec
cmpb
adc
dec
xor
mov
es
mov
adc
xchg
fidivs
adc
leave
pusha
call
xor
shlb
mov
loope
inc
into
ret
shr
and
int
pushf
push
and
mov
and
or
out
aas
les
je
aaa
cs
sahf
popf
dec
pop
dec
inc
mov
pop
adc
add
mov
bound
xchg
sbb
push
pop
shll
jns
and
test
add
cltd
sbb
or
mov
mov
lods
or
jecxz
lret
rol
xchg
jp
jge
ds
pop
adc
pop
jmp
pop
insb
push
or
in
xchg
or
sub
hlt
xor
pushf
or
imul
or
cs
cmp
and
cmp
sub
adcl
mov
mov
mov
mov
mov
xchg
fimuls
push
clc
stos
loopne
push
sbb
push
dec
jmp
rcll
pop
sub
xchg
and
cmc
repnz
rol
mov
or
inc
pop
xchg
divl
dec
ss
pop
loope
xlat
sub
or
aas
xor
dec
xchg
mov
dec
lds
inc
mov
pop
mov
iret
stc
dec
flds
lock
push
sub
or
mov
push
icebp
xchg
test
add
and
pusha
fsubp
insb
in
shrl
rcr
testb
jle
sbb
mov
mov
xchg
adc
mov
inc
mov
dec
dec
mov
cmpsb
adc
mov
outsb
out
arpl
repnz
mov
xor
push
push
std
jmp
mov
sub
js
data16
or
testb
scas
shll
mov
mov
fstpl
repnz
aam
mov
in
cmp
push
jne
rclb
je
mov
scas
shl
sub
jnp
dec
mov
pop
cs
loopne
or
aaa
inc
mov
add
xchg
mov
xchg
mov
repz
sbb
fcmovnb
xor
ljmp
xchg
pop
ljmp
mov
jne
xchg
mov
add
sbb
cmp
ffree
sub
scas
cli
scas
xchg
movsb
push
mov
imul
sub
and
xchg
test
pop
inc
aaa
in
pop
sub
ljmp
adc
mov
pop
xchg
xor
testl
inc
call
adc
shlb
or
sub
sbb
fildl
lcall
loope
mov
jmp
aas
dec
imul
jo
xlat
fs
fadds
sbb
push
inc
mov
dec
adc
jns
push
shll
das
inc
int
dec
into
inc
mov
inc
mov
sub
inc
fdivl
pop
ret
out
or
push
jp
shll
nop
and
ficomps
cltd
pop
ss
scas
add
or
aad
jle
outsl
xchg
lret
sub
iret
xchg
rorb
aaa
pop
mov
gs
repz
jge
popf
js
daa
sub
addb
sahf
jnp
sbb
xchg
xlat
ljmp
out
ja
push
xchg
movsb
cmp
or
xchg
jbe
loop
stos
aad
std
lret
inc
pop
or
cmpsl
cs
test
cltd
cld
sub
fs
lods
dec
xorb
jnp
xchg
pop
add
push
sbb
rcrl
xchg
insl
xchg
js
or
std
imulb
cmp
decb
sarl
out
daa
xlat
aam
fildl
inc
jmp
push
std
add
mov
out
pop
and
mov
push
hlt
mov
iret
shlb
xor
sbb
and
xchg
add
jbe
mov
push
xchg
rcrl
push
cmpsl
mov
cld
ss
leave
popa
add
pop
imul
fistps
xchg
push
xor
ss
rcr
cwtl
xor
loop
loope
repz
test
push
sub
stos
popf
scas
mov
out
pop
jno
mov
xor
mov
lods
xchg
add
in
outsl
lock
insb
pop
add
iret
rorb
pop
rcll
incb
stos
pop
stc
loopne
mov
mov
outsl
jp
mov
inc
cld
and
call
or
jnp
lret
pop
cmp
cli
add
cmp
sub
inc
cmpsl
dec
mov
dec
testb
repz
cmc
cmp
in
jb
fcmovu
mov
jnp
lcall
aam
adc
imul
and
inc
xchg
out
sub
sbb
jg
mov
mov
jle
pop
xor
call
jg
dec
lret
add
fs
push
pop
xchg
push
in
ja
xor
adc
pop
test
insb
xor
roll
test
push
mov
or
repz
ja
pop
lret
pop
lods
mov
lods
cli
fcomip
cmp
bound
out
pop
cld
cmc
movsl
push
jbe
add
stc
add
outsl
bound
pusha
push
fsubr
fldln2
sbb
mov
ficompl
xorl
cltd
sbb
inc
push
xor
xchg
jp
pop
add
push
je
adc
pusha
sbb
xchg
call
pop
subb
jle
les
in
mov
call
test
cli
lcall
insb
push
sbb
scas
shll
xor
shrl
dec
repz
sbb
xchg
pop
popa
lods
aas
bound
pushf
arpl
sti
xlat
pop
dec
icebp
xor
pop
ss
jl
scas
push
jg
xor
jbe
mov
pushf
outsb
mov
bound
xor
shrb
cld
push
aas
cltd
out
in
out
das
outsl
cs
mov
xchg
mov
add
dec
jno
cld
inc
jecxz
lret
pusha
sbb
call
nop
add
test
pusha
cli
dec
ljmp
pop
push
adc
mov
aam
repz
xor
pop
xchg
test
inc
dec
mov
xchg
lret
cmp
or
mov
mov
or
leave
dec
shlb
loop
std
js
sub
push
pop
xchg
mov
sub
inc
jecxz
fsts
sub
insl
mov
cltd
xor
in
call
xchg
inc
stos
mov
jge
shll
pop
pop
jno
iret
xor
insb
add
lret
jge
repnz
push
stos
iret
jge
scas
frstor
in
xor
push
push
arpl
in
bnd
dec
ss
dec
enter
dec
mov
xchg
xor
pcmpeqw
sub
dec
in
call
daa
shlb
stc
call
pushl
mov
cmp
fimuls
std
stos
add
push
mov
out
mov
sub
xor
iret
cmp
jbe
add
loopne
insl
pop
xchg
sub
cmpsb
add
lods
cmpsl
dec
das
daa
data16
ffree
xor
xchg
adc
subl
adc
bound
repnz
jb
popf
cmc
cmp
sarl
insl
js
ficoms
dec
mov
das
shlb
mov
in
or
jmp
pushf
xchg
inc
push
xchg
cmp
sbb
jmp
sti
push
sahf
fwait
test
imul
ret
sub
cmpsl
jg
cmp
clc
push
mov
mov
rcrb
aam
lods
and
push
leave
mov
divb
mov
outsb
cmp
fadds
and
sub
mov
inc
xor
dec
mov
adc
or
rorb
mov
pop
jp
addr16
mov
add
sbb
or
and
out
inc
xor
cltd
js
dec
mov
scas
ss
xor
push
pop
outsl
fnstcw
bound
adc
fbld
adcl
jo
cld
sbb
ret
and
loop
nop
cmc
hlt
arpl
es
jmp
popa
xor
arpl
pop
cmp
mov
rorb
pop
adc
cwtl
jle
cmp
or
test
fildll
jl
fwait
mov
cmpsl
xor
mov
shrl
es
fdiv
add
lret
mov
in
push
jno
in
or
xchg
jmp
mov
xchg
add
jp
int3
shlb
add
jmp
mov
insl
and
mov
repnz
test
xchg
push
adc
enter
fdivr
add
push
mov
int
loop
cwtl
pop
mov
cmpsb
mov
inc
dec
push
add
movsl
jb
aaa
xor
adc
or
icebp
mov
dec
cwtl
sub
dec
gs
and
ljmp
sub
add
lods
mov
and
cmp
mov
jae
repz
and
jle
outsb
sbb
imul
insl
jo
insb
adc
aas
scas
add
mov
or
lret
adc
pop
xor
cmpb
imul
call
imull
daa
out
mov
mov
lret
fcoms
cmp
cmpsb
mov
cmpsl
inc
imul
sub
pop
mov
jecxz
push
jbe
and
inc
pop
inc
imul
mov
mov
mov
jbe
scas
or
adc
inc
imul
orl
adc
or
dec
int3
and
mov
push
pusha
rol
movsb
gs
mov
cmp
pop
pop
bound
push
pop
icebp
addr16
mov
push
inc
sti
cmp
andl
ljmp
mov
out
ja
mov
dec
mov
lcall
push
inc
test
test
push
popa
idiv
push
xor
imul
imul
in
jb,pn
stc
push
xchg
data16
sarb
mov
pop
mov
shlb
jmp
hlt
clc
xlat
jae
shrl
or
and
mov
jae
shll
mov
rorb
mov
in
sahf
mov
ss
sahf
fnstcw
dec
or
sub
insb
jge
addr16
and
jae
je
aad
pop
jecxz
mov
clc
cmpsb
dec
push
test
fnsave
mov
rclb
sahf
cld
cmp
rorl
fldenv
push
nop
mov
leave
pop
xchg
negl
xorb
sarl
xlat
test
xchg
mov
pop
cli
mov
and
inc
adc
lods
mov
cmp
imul
mov
out
pop
and
push
stos
push
push
mov
mov
std
pop
sub
fdivrs
dec
fdiv
pop
add
fst
bound
push
and
ja
add
popa
lret
inc
jnp
shlb
testl
ds
lahf
inc
mov
xchg
std
mov
pop
in
xor
movsb
nop
xchg
pop
push
shlb
addr16
fsts
roll
test
xchg
fbstp
aas
ljmp
pusha
xor
dec
in
movsb
popf
and
shlb
pusha
sub
iret
xor
fs
addr16
inc
pop
pop
aad
mov
and
push
cmp
int3
sub
negl
repnz
push
call
pcmpeqb
out
loope
loope
sbb
push
lret
push
lea
js
and
scas
inc
mov
and
jae
loop
iret
test
cmp
push
rcrb
hlt
push
aam
sub
insb
lods
push
sti
repnz
es
jl
test
cmp
cmpb
shlb
repnz
and
jl
gs
sub
sub
jecxz
repz
pop
sbb
or
mov
xor
decb
jne
sub
mov
push
and
xchg
xchg
out
int3
in
adc
cmpsl
test
jns
leave
cs
das
out
xor
bndldx
dec
inc
cli
push
scas
or
inc
pop
incl
arpl
xor
sbb
mov
insb
jp
shl
movsb
lods
or
repz
xor
mov
cmp
lds
testl
add
sahf
lret
mov
in
popf
add
cmpsb
dec
push
xor
leave
enter
mov
pop
mov
or
cmp
outsb
mov
push
iret
aad
pop
ret
dec
imul
ljmp
in
pop
movsb
cmp
sbb
fldcw
rclb
inc
pop
or
into
in
test
in
mov
les
add
xor
xor
mov
pmulhw
stc
sub
ja
sahf
inc
jae
dec
jmp
fcmovb
fisttpl
into
sub
fwait
sbb
inc
pop
sub
cmp
push
mov
or
mov
adc
mov
test
scas
inc
pop
flds
mov
das
shl
mov
jae
adc
jmp
cld
nop
stc
in
jg
sbb
xchg
adc
push
clc
push
mov
jnp
mov
or
clc
pusha
and
outsl
push
dec
adc
xor
dec
ret
cmp
xchg
push
lret
or
shlb
les
push
testb
js
pop
loop
imul
dec
add
fildl
rclb
fidivrl
sub
sbb
adc
fdivrp
cmpsb
adc
stc
push
lahf
movsl
cmp
adc
ret
adc
inc
scas
sarl
xor
aas
and
cmp
or
push
cmp
pop
dec
and
push
adc
fcmovu
rcr
stos
mov
adc
fsubs
dec
scas
mov
mov
ret
pop
pushf
adc
arpl
call
xchg
and
mov
mov
adc
xor
stc
lds
push
mov
dec
lock
imul
sahf
sar
cld
mov
bound
add
cwtl
popf
lea
push
out
inc
lcall
jb
xlat
sub
outsb
sti
mov
or
rorb
fsub
outsl
das
sbb
cltd
subb
stos
fists
daa
bound
insb
jle
shll
psllw
add
push
xor
jg
mov
test
nop
ljmp
and
mov
aad
mov
xchg
shll
clc
pop
test
fdiv
mov
mov
call
scas
pop
mov
pop
dec
push
and
mov
and
adc
jns
orb
cmp
jo
add
and
cs
popa
dec
cmp
mov
ret
inc
out
arpl
xchg
jns
test
fsubrs
push
jg
push
rcrl
xchg
inc
lahf
mov
mov
dec
sbb
push
jae
mov
cmp
ror
sub
cmpsl
iret
dec
xor
sbb
pop
xchg
xchg
pop
push
or
or
das
dec
mov
mov
mov
test
fidivl
out
jg
mov
and
sub
push
and
aam
push
stos
test
jge
xchg
push
stos
or
mov
mov
out
xor
cmp
popa
jno
sbb
ret
js
cmp
mov
inc
xchg
mov
mov
adc
in
lret
push
inc
pop
add
test
sbb
mov
je
jno
je
adc
add
pushf
iret
data16
imul
mov
sbb
imul
mov
push
cmp
mov
mov
mov
stc
stos
enter
aaa
pop
stc
xchg
sub
movsb
pop
outsb
loopne
pop
sub
xorb
sub
test
mov
cmp
shlb
arpl
stc
jne
mov
cmc
lahf
sub
xchg
das
and
nop
mov
xchg
cmp
dec
cmp
mov
xchg
inc
xchg
mov
arpl
cmp
enter
mov
iret
in
ds
pop
adc
in
stos
pop
or
mov
pop
cwtl
jge
mov
pop
out
inc
jbe
sub
inc
jnp
shlb
test
lds
sub
cmp
stos
push
mov
add
ds
and
test
dec
cmc
mov
out
cmp
jno
lahf
xchg
mov
sbb
in
in
leave
pop
cld
mov
or
rorl
fldt
sub
push
push
dec
idivb
sub
xchg
pushf
fcomps
mov
push
pop
xchg
shr
mov
jge
shl
xchg
aaa
pop
testl
popa
adc
inc
pop
adcl
mov
adc
fs
or
mov
add
sub
cwtl
mov
push
call
pop
mov
adc
mov
or
aad
clc
ds
fcomps
jb
mov
mov
push
test
sbb
xor
and
std
push
data16
test
rclb
addl
orps
dec
in
shlb
loopne
xor
fisubrl
xchg
mov
mov
mov
popf
or
cmp
popf
pop
repnz
fcomp
and
jg
dec
xchg
out
aad
xchg
dec
xor
mov
pop
or
bound
out
xchg
mov
cmp
ds
sti
jo
jo
push
je
mov
cltd
lcall
xor
aas
les
pop
aam
mov
sahf
jne
sub
cmp
faddp
sti
mov
push
sub
push
or
sbb
movsl
push
ret
jnp
icebp
enter
sub
dec
xor
add
cmp
mov
cmp
andl
pop
sub
out
dec
add
push
popa
jae
out
adc
jne
cmpl
add
sarl
or
add
rcrl
xchg
jnp
sbb
inc
out
fbld
std
push
insl
or
mov
add
xor
cmp
xchg
jle
pop
mov
adc
pop
cmc
xor
mov
sub
sahf
cmpsb
sbb
clc
lret
mov
roll
inc
mov
rcl
adc
pop
ss
pusha
mov
aaa
xor
rclb
sbb
stc
movsl
into
xchg
mov
mov
popa
jno
jns
in
lods
fwait
mov
dec
push
jae
out
insl
dec
and
ljmp
mov
pop
add
xchg
mov
mov
fdivrs
das
push
dec
stos
cmovge
xor
incl
and
lds
dec
aas
leave
popf
mov
idivl
inc
fdivs
fsubs
push
aad
pop
xor
xor
shl
mov
or
dec
loop
test
js
imul
shrb
cmp
xchg
xchg
hlt
jp
xlat
cmp
jo
popf
pop
mov
push
int3
dec
inc
mov
jnp
adc
les
xchg
mov
aad
seto
xchg
push
push
xchg
mov
xor
dec
mov
scas
or
inc
jle
dec
imulb
inc
cmp
mov
push
jne
push
pop
les
loopne
or
sub
sub
out
addl
add
bound
daa
mulb
inc
in
leave
je
inc
pop
pop
push
shrl
cmp
mov
cld
inc
dec
sub
push
sbb
push
aas
test
cltd
jns
mov
sbb
inc
or
add
mov
in
leave
fstpt
pop
jmp
aam
dec
dec
in
fdivs
xchg
sti
pop
insl
dec
mov
pop
je
outsb
mov
out
add
inc
mov
jae
dec
arpl
cld
das
lock
jp
lret
and
fildll
jae
pop
sbb
fidivrl
daa
fidivl
pop
pop
inc
jbe
setge
int3
cmc
xor
push
pop
repz
mov
or
jmp
xor
adcl
cli
faddl
in
xor
scas
test
pop
sbb
mov
fisttpl
stos
fsubrs
mov
inc
push
adc
lods
std
and
push
in
out
push
in
pop
stos
xchg
adc
sub
add
dec
ret
lret
sbb
pusha
fs
stos
mov
iret
push
out
hlt
cwtl
pushf
cld
imul
fstpl
les
stc
xor
push
push
jno
pop
hlt
lcall
out
pop
add
insl
scas
inc
add
je
mov
int3
insb
imul
outsb
cli
js
pop
lea
pop
and
mov
sub
rolb
fs
jnp
mov
adc
mov
xor
xchg
or
enter
or
inc
je
cmpsb
test
xchg
xchg
icebp
mov
cwtl
push
shlb
insb
and
je
and
pop
sub
adc
aam
outsl
daa
ret
pop
das
or
out
dec
mov
and
mov
jno
jp
movsb
lock
jmp
test
push
mov
lock
xchg
adc
fcmovnbe
shl
inc
into
in
in
insb
inc
mov
das
shl
aas
loop
stos
mov
inc
fwait
mov
cmc
xchg
xchg
popf
data16
fisttpll
fs
or
push
es
dec
lods
sub
mov
arpl
adc
neg
add
ret
arpl
pop
and
loop
xchg
dec
push
daa
sub
fistpll
test
mov
adcl
and
je
fwait
insb
jmp
xchg
xor
pop
shr
cmp
jmp
push
xchg
test
out
jle
sbb
int
mul
rclb
gs
xchg
inc
shl
mov
mov
rcrb
pop
jbe
pop
inc
lods
cmp
das
mov
mov
out
inc
adc
in
sbb
bound
fisttpl
add
cmp
cmc
rclb
xchg
mov
fsubl
scas
pop
shlb
int3
dec
xor
rol
mov
out
push
lcall
jg
lods
dec
hlt
fldl
push
out
pop
stos
sbb
cmpl
popa
fisubrs
dec
mov
stc
cld
sbb
mov
inc
push
popf
and
orb
test
shrb
sub
sub
lods
stos
repz
rolb
loope
push
jge
dec
loopne
jae
mov
xchg
aaa
xchg
fcomps
pop
fisubl
ficompl
xchg
jle
jg
out
test
or
add
or
pop
fstpl
insb
inc
push
notb
adc
or
mov
movsb
or
xchg
in
jae
jno
mov
mov
nop
in
pop
xor
cmc
cld
pusha
add
fiadds
adcl
jle
ja
movsb
mov
je
or
xchg
xchg
sti
add
mov
outsb
or
sti
push
ret
cltd
xchg
insb
dec
lock
push
data16
test
adc
xchg
popa
repz
pop
inc
cmpsb
ds
dec
pop
repnz
imul
das
daa
mov
jg
pop
or
into
mov
push
mov
imul
sub
add
mov
ss
test
mov
mov
dec
mov
jl
std
iret
mov
pop
xchg
mov
adc
mov
or
jge
nop
addb
movzwl
cltd
in
cmp
mov
push
cli
dec
mov
bound
psllw
int
repnz
daa
cld
insl
nop
test
lcall
xor
xor
sahf
test
les
aad
inc
xor
cli
xchg
lret
ret
pop
mov
mov
std
xor
pop
xorl
stos
addl
rcl
xchg
mov
pop
push
cwtl
jae
loopne,pn
and
xor
add
out
into
inc
xchg
pushf
ficoml
and
mov
scas
cmc
jb
cmp
xor
ds
push
and
jnp
jne
out
in
or
sbb
jmp
pop
cmpb
pop
in
out
fs
fidivrl
jae
cwtl
daa
insl
mov
pop
cmp
call
shlb
and
mov
jl
loope
jne
mov
mov
dec
loope
pop
std
or
out
outsb
out
push
pop
and
mov
add
popa
inc
pmulhw
xchg
xchg
xchg
ret
je
testl
xor
jne
loop
adc
insl
in
mov
sbbl
mov
or
push
mov
jnp
jle
adc
dec
jecxz
and
jne
fcomps
sti
cmc
scas
cmp
and
imul
out
push
jmp
repz
je
in
cmp
aad
inc
enter
mov
addb
dec
decb
stc
shll
fsubrs
ljmp
dec
sub
mov
sbb
fs
add
negb
lea
cmc
mov
sub
insl
sbb
out
fs
or
cmc
pop
cmpsl
or
jge
cmp
loopne
mov
mov
cltd
in
loopne
stos
lods
or
jl
adc
xchg
or
xor
aaa
adc
xor
jle
out
bound
add
mov
jge
xchg
cmpsb
stos
mov
cmp
push
lcall
aad
and
jmp
cmc
or
daa
inc
xchg
or
push
push
cltd
mov
pop
jns
sbb
test
rclb
or
adc
mov
incb
mov
es
adc
sub
add
fcmovne
sbb
fbstp
mov
xor
adc
mov
inc
negl
adc
inc
fbld
mov
push
mov
push
aad
xchg
mov
out
ja
imul
cmp
popf
test
xor
inc
jo
sbb
pushf
sar
sub
lock
jae
test
add
pop
sbb
lds
jecxz
inc
outsb
in
push
insl
jo
adc
push
sub
test
ja
jns
push
lods
hlt
inc
test
push
jns
daa
mov
jge
call
push
sub
xor
cmp
sub
aam
sbb
sub
mov
rcrl
test
push
ja
xor
divl
dec
push
repnz
test
in
sbb
xor
into
mov
fdivrl
jbe
lods
rorl
fisubrs
push
jae
inc
cli
repz
out
xlat
repnz
xor
push
pop
mov
in
mov
aam
push
pop
pop
inc
pusha
imul
arpl
ljmp
dec
sub
lret
icebp
ja
sub
fs
mov
data16
fdivrl
mov
data16
int
and
sub
cmc
es
xor
pop
sbb
mov
mov
sub
pusha
or
push
adc
ret
adc
sbb
stos
xchg
fcomps
inc
test
mov
ljmp
jg
cwtl
jl
repz
sbb
pop
mov
rolb
mov
jo
sti
push
in
sub
ljmp
shrb
shlb
pop
sbb
loop
mov
or
adc
lret
sahf
and
add
fisubl
jbe
sbb
push
dec
shr
into
jmp
loopne
frndint
sub
fnstcw
sbb
mov
loope
push
faddl
dec
loop
call
jg
xor
lahf
sbb
push
mov
sbb
mov
push
cmc
cmc
mov
jecxz
in
fucomi
lcall
repz
mov
jnp
lds
sti
dec
xor
fistl
loopne
shlb
scas
and
out
sbb
inc
push
cmp
cmpsb
mov
or
pop
shlb
outsb
add
sbb
std
xchg
sub
push
pop
add
in
and
lea
mov
leave
stos
pop
or
inc
add
aaa
rcll
and
bnd
push
sbb
push
mov
sbb
mov
xchg
adc
mov
sbb
and
out
adc
ljmp
add
jbe
xchg
push
pop
and
pop
jp
mov
adc
add
inc
and
imul
push
xchg
lret
xchg
inc
xchg
sti
insb
cmc
jns
popf
inc
mov
insl
mov
or
pop
das
add
sub
jecxz
inc
xchg
pop
imul
movb
bound
rolb
int3
movb
insb
ljmp
ds
pop
lds
mov
jle
pusha
and
not
lcall
aas
dec
adc
incl
dec
insl
lea
jb
mov
inc
cmpsl
sub
dec
add
fwait
pusha
and
gs
int
stc
imul
scas
rcrb
xor
lahf
mov
idiv
jne
mov
mov
mov
pushf
sub
ret
dec
pop
out
lea
outsl
bound
adc
push
push
push
fs
setp
mov
cmp
movb
mov
mov
mov
testl
je
mov
into
mov
dec
cld
lea
jne
add
imul
sub
push
add
mov
xchg
outsb
lcall
imul
cs
mov
ds
cmc
push
mov
mov
sub
cmpsb
mov
les
inc
inc
rorl
js
insl
sahf
cmc
fcmovu
mov
jne,pn
arpl
xlat
daa
cmp
lock
lahf
xchg
in
push
sahf
adc
movsl
scas
adc
and
jnp
adc
imul
cmp
aaa
lods
pop
mov
mov
push
loopne
xor
add
into
fwait
aam
xchg
add
pop
int3
ret
lock
ds
lcall
push
ja
jp
dec
add
jns
mov
mov
xchg
dec
xor
jl
inc
sbb
dec
dec
and
fsubs
inc
fs
jl
cmp
movsl
cmc
mov
dec
pop
jo
cwtl
xlat
and
sbb
mov
lds
stos
xor
decl
sub
inc
pop
sbb
cmp
sub
mov
sub
inc
jp
xchg
mov
arpl
ss
push
out
in
mov
icebp
jmp
outsb
push
hlt
mov
lods
mov
xlat
adc
fcompl
std
dec
lods
mov
lds
outsl
push
out
xchg
test
aad
cwtl
add
xchg
and
pop
or
cmp
ret
jae
cs
adc
or
xor
push
xchg
pop
fwait
mov
push
lret
lods
mov
cmc
into
and
ljmp
rclb
nop
xchg
call
cmp
mov
pop
cs
push
jle
aad
fcomps
push
inc
dec
xor
in
aas
ss
idivb
mov
out
shlb
divb
mov
and
inc
push
push
in
sbb
pop
mov
xchg
bound
int
xor
fmull
sbb
hlt
ds
add
loopne
jle
lods
cmpb
aad
inc
imul
in
sub
arpl
or
mov
mov
mov
ljmp
cmp
loope
pop
jmp
mov
pop
or
jo
repnz
int
jl
jmp
stc
mov
test
adc
cmpsl
mov
pop
iret
xchg
popf
sbb
mov
or
inc
xor
pop
std
movsl
or
inc
jge
out
test
ja
scas
pop
or
call
sbb
adc
lea
outsb
dec
or
mov
rolb
jbe
push
or
cltd
loope
ret
rcll
idivb
cmpsl
add
cmp
in
outsb
or
cld
push
out
add
lret
int3
mov
cwtl
sahf
rolb
mov
fwait
mov
outsl
adc
lahf
sarl
jmp
int3
movsl
fistl
and
jb
inc
cmp
clc
mov
add
stos
adc
fisubrl
jbe
fsubs
sbb
out
adc
mov
inc
out
inc
rorl
insl
aas
jmp
aaa
sub
adc
and
mov
push
pop
jl
mov
inc
ljmp
mov
or
fnsave
sti
mov
push
dec
lock
js
mov
in
leave
sbb
push
shrl
push
test
mov
pop
out
insb
lock
jg
insl
mov
jo
fisubs
inc
or
test
adc
pop
ret
nop
ljmp
cmp
add
addr16
adc
and
mov
es
lret
mov
in
das
cmp
inc
shll
cmp
fimuls
push
movsb
mov
notl
sbb
nop
test
addr16
mov
fucom
inc
add
mov
aas
imul
cwtl
aad
sbb
loop
lret
or
data16
push
roll
push
or
pop
out
test
adc
push
add
xchg
in
mov
adc
jle
insl
mov
cmp
repz
mov
mov
loopne
or
pop
cmp
xchg
xorb
jecxz
mov
xorl
xchg
xor
pop
push
cld
xor
fisttpll
pop
jmp
sub
xor
jno
or
or
ja
loope
fcoms
outsb
mov
notb
inc
popf
gs
icebp
sahf
jecxz
pop
stos
xor
push
cli
lret
decl
add
and
adc
fs
adc
cmc
cld
and
push
sub
sbb
imul
inc
imul
scas
inc
mov
and
push
rcr
pop
loope
dec
pop
push
dec
mov
pop
cmp
scas
cmpsl
pop
or
lahf
and
and
sbb
sbb
sub
mov
mov
push
push
ds
inc
xchg
adc
mov
jno
aam
mov
or
popa
fdivl
lret
test
imul
xor
dec
aaa
daa
fsubl
aad
frstor
fwait
sub
push
lock
sarl
jne
add
adc
insb
fbstp
in
shll
and
push
adc
sbb
xor
mov
jno
xor
xlat
nop
bound
pusha
mov
mov
xchg
sti
imul
mov
xchg
xchg
xchg
push
test
test
or
jmp
sub
int3
add
jno
mov
bound
adc
popf
lods
sub
movb
repnz
xchg
and
jno
push
rclb
jp
insb
adc
push
lret
sub
out
arpl
cmpsl
push
movsl
lods
lahf
std
test
in
mov
mov
sti
subl
sbb
das
pxor
repnz
adc
jnp
ret
outsl
movsl
fnsave
jge
lret
mov
sub
test
lcall
jp
insl
cmpsb
cli
out
addl
aaa
lods
sub
xlat
jmp
outsb
imul
push
jb
shlb
or
mov
mov
movsb
mov
or
es
bound
cmc
cmp
fdiv
cmp
xchg
ret
iret
push
outsl
sbb
jnp
pushf
mov
roll
push
int
sub
pop
test
mov
aaa
arpl
mov
imul
xor
scas
sbb
into
lods
cli
mov
cmp
adc
mov
imul
jnp
xchg
xor
dec
add
jo
popa
dec
pusha
pop
sarb
aas
enter
lcall
decl
stos
jmp
aad
ret
pop
cmp
stos
sub
insb
leave
shll
mov
sub
test
push
outsl
sbb
inc
data16
test
mov
rorl
xchg
in
pusha
xor
push
in
in
mov
das
jmp
mov
cmp
or
mov
orb
in
rorb
pusha
inc
jne
lods
rcl
repnz
sbb
sbb
out
in
push
inc
jle
inc
mov
int3
mov
mov
mov
cmp
popf
dec
sub
jo
lret
out
cmpsl
push
loope
bound
xchg
in
scas
ret
dec
mov
fcmovb
out
rol
push
mov
adc
cli
and
inc
cmpsb
and
push
ror
out
ficompl
andb
mov
dec
rol
push
icebp
add
add
adc
pop
inc
inc
dec
cmpsb
lahf
push
mov
push
push
jbe
push
jo
outsl
cmp
mov
pop
push
sbb
push
adc
je
sbb
pop
pop
xor
and
mov
or
adcl
jp
je
jp
cmpsl
jge
jnp
dec
jb
push
add
dec
xor
aam
gs
inc
aaa
scas
push
outsb
add
add
sub
mov
mov
dec
mov
es
fildl
adc
pop
mov
inc
mov
lock
push
shrb
js
mov
stc
inc
cmp
mov
xchg
cli
push
sbb
in
jmp
and
jge
sub
lods
xchg
cmc
xor
push
scas
mov
dec
xor
push
sbb
out
adc
inc
nop
sbb
lcall
add
stc
xor
mov
push
xchg
pop
push
mov
leave
sub
and
and
sarb
aad
scas
mov
movsl
or
mov
dec
sahf
sti
jb
adc
mov
mov
sbb
in
in
mov
lock
fcoms
push
and
cmp
stos
dec
jp
dec
xchg
stc
addl
popf
cmp
jnp
push
loopne
test
xor
sarl
cmp
sub
int3
stos
pusha
mov
fcomi
inc
or
jbe
sbb
arpl
ficompl
fistpll
arpl
ja
pop
xchg
js
mov
dec
mov
mov
jno
lcall
pop
jmp
idivb
jp
lea
jecxz
xchg
test
sub
pop
pop
xlat
mov
cmp
add
es
sti
jns
in
repnz
xchg
fisttpll
xchg
jl
insl
pop
cs
inc
lods
xlat
mov
push
imul
jnp
xorl
sbb
cmp
sbbl
andl
inc
outsl
mov
mov
out
jl
sub
cmp
push
mov
out
mov
std
lods
sub
push
adc
dec
or
mov
or
leave
adc
int3
cmp
pop
ds
inc
jmp
arpl
fsts
push
cmpsb
jae
xchg
fistl
dec
inc
pop
mov
inc
dec
push
scas
sub
insb
mov
in
or
pop
jae
mov
shlb
rcrb
mov
in
pop
ds
sahf
and
leave
mov
int
pop
in
mov
jne
mov
and
out
pop
sbb
pop
clc
test
ljmp
lock
iret
mov
jecxz
dec
pop
sbb
or
es
jle
fs
clc
aas
out
out
add
bound
ss
mov
je
jbe
dec
jns
and
outsl
shlb
repz
imul
or
cmp
dec
int
inc
cs
push
pop
mov
jge
imul
int3
pop
ds
jle
loope
and
aaa
cli
sub
push
movsb
inc
sbb
mov
adc
movsl
jl
cwtl
cmc
push
shr
inc
lods
dec
outsl
or
les
pop
jo
cltd
repnz
shll
sub
repz
addl
clc
push
nop
jno
sub
imul
push
lcall
mov
into
mov
mov
ficompl
daa
push
clc
mov
enter
mov
pop
fldcw
and
dec
repnz
loope
cli
adc
leave
mov
or
xchg
cmpsb
shll
pop
sbb
pop
sbbl
das
mov
pop
ss
sbb
stos
ficoml
test
call
ret
mov
ljmp
loope
or
xor
adc
test
mov
ja
cmp
adc
rcll
call
cltd
push
xchg
adc
lret
mov
repz
push
gs
ljmp
in
scas
cmp
push
cmpsb
mov
jmp
cltd
or
adc
sbb
mov
fwait
jno
iret
push
dec
ds
cmp
in
dec
movsl
insl
inc
pop
test
and
sub
push
jae
sbb
and
pop
ret
ficomps
mov
or
enter
xchg
lock
fsubr
cmp
test
jg
mov
dec
or
and
jg
jb
or
add
test
sbb
jp
cmc
mov
std
pop
std
sarl
xchg
push
dec
inc
lret
cmpsb
cltd
adcb
or
inc
sub
dec
ja
dec
adc
or
imul
ret
push
cmpsb
cwtl
repnz
mov
hlt
xchg
mov
pushf
leave
and
int
dec
dec
sub
pop
push
jnp
cmpsl
cmp
stos
add
jnp
pop
fisubs
xchg
xchg
mov
jae
mov
jle
stc
mov
mov
jg
pop
add
mov
xor
push
out
data16
inc
imul
pusha
test
mov
mov
sub
push
inc
jo
and
mov
shll
xchg
mov
xchg
imul
pushf
or
pop
xor
loopne
jb
outsb
pop
outsb
movsb
lcall
lock
xchg
lahf
leave
sub
jl
sub
aaa
dec
or
out
mov
xchg
int3
out
xor
lds
inc
push
adc
mov
dec
cmp
clc
fstp
cmp
or
repz
xor
mov
in
popf
test
xchg
aaa
and
xor
pusha
push
mov
jns
jnp
jl
in
idivb
mov
hlt
dec
js
xor
jp
pop
nop
adc
ljmp
jmp
hlt
adc
nop
pop
enter
inc
into
adc
lret
or
or
pop
push
int3
add
mov
xchg
pop
cwtl
xchg
mov
or
xchg
cmpb
je
sub
dec
xchg
cmp
fidivrs
ud1
shll
icebp
data16
mov
scas
dec
pusha
add
cli
mull
fwait
sarl
ja
testb
jmp
jae
lds
shl
test
iret
mov
shrb
push
cmp
stos
ja
std
test
mov
sub
in
mov
or
sahf
test
mov
dec
dec
in
sbb
movsl
aas
jle
loope
sbb
xor
cmpsb
add
incl
xor
push
out
bound
lea
cmp
dec
inc
lods
lock
xor
stos
punpckhwd
int
iret
cli
lea
test
mov
pop
push
movsb
xlat
mov
dec
pop
push
insb
insl
stc
not
xchg
jl
jl
lods
dec
in
mov
sbb
mov
clc
popa
push
xor
and
or
pop
or
js
cmc
xorl
sbb
adc
outsb
std
testb
je
adc
inc
sub
scas
stos
inc
int3
outsl
test
inc
cmp
leave
cmp
fbld
out
imul
pop
jne
mov
dec
mov
jo
and
fs
jmp
outsb
popl
popf
pop
mov
std
cmpsl
or
xor
nop
ja
das
aaa
add
cmpsl
cs
in
fs
xor
imul
nop
or
leave
enter
push
test
aaa
cs
dec
and
pop
cmp
pop
movsl
rcr
sub
call
xchg
cwtl
les
lods
inc
inc
pop
xchg
inc
dec
movb
call
mov
fld
jge
stos
cmpsl
xchg
out
cmp
fnstsw
les
insl
inc
inc
push
out
into
int
mov
movsb
roll
cmpsl
scas
fld
xchg
dec
or
or
mov
roll
add
outsb
cwtl
pop
cld
jp
ret
dec
push
push
js
mov
icebp
popf
push
pop
sarl
pop
lods
fadds
pop
and
rcrl
iret
xlat
or
scas
xchg
fs
cmp
xor
dec
ret
imul
fs
or
sbb
int3
test
or
dec
test
cwtl
insb
ss
mov
fcmove
test
lods
xchg
popa
adcb
iret
rorb
jnp
sbb
arpl
ret
rorb
insl
stos
aas
xchg
or
jo
icebp
push
jmp
rorb
orl
dec
sti
push
rorb
pushf
sbb
adc
es
push
scas
jns
sbb
mov
cmpsl
cmp
pop
lods
adc
fwait
xor
fbld
cmp
kxorb
repz
arpl
fstpt
mov
les
aas
nop
dec
out
pop
out
jecxz
dec
sbb
mov
xor
or
cmc
inc
sub
negb
push
mov
je
repnz
testl
sub
cmp
mov
mov
pop
fstpl
mov
push
push
cmpb
mov
mov
repnz
sarl
orb
xor
jne
adc
mov
repnz
push
test
and
mov
test
jp
and
into
fistpll
push
icebp
jmp
add
adc
cmpsl
add
add
cmpsb
pop
cmpsl
mov
mov
add
push
xchg
push
lds
cmp
and
and
cmp
test
cli
mov
xor
xor
jno
sbb
adc
mov
and
aam
or
fists
xor
pushf
sbb
addb
fcomp
cmpl
dec
dec
pop
ljmp
adc
pusha
fs
arpl
fimull
mov
or
adc
imul
rcrb
pop
cmp
and
jae
std
or
adc
call
dec
push
popa
mov
in
inc
pushf
jmp
add
mov
fsubl
jae
pop
cmp
popa
mov
les
jmp
push
and
or
cmp
fsubl
mov
adc
jnp
xor
push
xor
ret
fyl2x
fnstcw
or
ret
imul
cmp
sti
loope
repz
std
sub
fcoms
test
ss
loope
cmp
in
add
sarl
nop
cmp
icebp
aam
jno
mov
mov
loopne
test
sbb
test
mov
movsl
mov
dec
mov
cmp
lahf
movsb
mov
test
cmp
inc
mov
stos
pop
push
mov
gs
imull
es
inc
jl
xor
xor
loop
mov
sbb
stos
out
gs
xchg
inc
and
lods
pop
mov
xlat
xchg
sbb
mov
outsl
or
iret
in
clc
lret
cld
stos
add
and
or
mov
add
dec
dec
xor
cmp
loopne
es
or
xor
ljmp
fwait
cmpsb
jns
aaa
int3
xchg
jb
lahf
push
push
int3
stos
daa
xlat
push
push
push
lods
stos
mov
push
lret
cmp
dec
lahf
ret
das
outsb
sub
or
mov
cmp
xor
scas
out
xor
jmp
mov
mov
xchg
and
xor
adc
push
push
test
sbb
push
pop
mov
imul
inc
out
cmp
push
insl
mov
jge
xchg
add
test
shl
nop
test
mov
jp
push
and
or
cmp
or
pop
sub
mov
push
shll
sbb
push
adc
std
movsl
add
fucomp
sti
inc
sbb
mov
mov
fadds
test
pop
xchg
incb
movsb
mov
stos
xchg
fdivs
push
push
test
outsb
push
ss
cmp
add
sahf
scas
sub
push
jp
jae
iret
mov
pop
sub
lock
movsb
out
loop
xor
sarb
inc
repz
iret
out
orl
jnp
and
cmp
add
test
popf
fsubs
int3
cwtl
into
das
or
mov
int3
jns
dec
xor
push
in
ret
mov
lock
and
aaa
add
dec
fs
sbb
out
push
xchg
mov
pop
movsl
das
xchg
cmp
dec
sbb
xor
andb
push
pop
sub
out
lods
dec
std
int3
pop
push
aam
out
or
sub
xor
pushf
daa
sub
sbb
pop
cmpsl
jo
xor
pop
add
sahf
xchg
test
test
or
add
jns
lret
mov
jno
pop
int3
pop
icebp
jge
xchg
sahf
ror
add
lock
loop
popa
cs
fwait
sti
jmp
sub
test
test
sarl
dec
add
in
insb
sahf
push
mov
mov
out
rcrb
fcoml
mov
mov
mov
push
dec
aaa
ficoml
sbb
popf
fimull
push
nop
xchg
push
lds
insb
xchg
out
and
mov
jns
sbb
pop
stc
nop
push
outsl
stc
mov
xchg
push
and
and
pop
vminpd
mov
and
outsl
jo
and
scas
cmp
loopne
sahf
aaa
ficomps
mov
add
rcr
push
int
cmpsb
mov
push
pshufw
loop
divl
mov
and
mov
mov
adc
roll
stc
gs
stos
jb
cld
inc
and
fwait
jae
rcrl
push
fwait
add
and
ret
dec
ret
cltd
sbb
scas
push
stc
lahf
and
cmc
adc
lds
nop
idivb
xor
imul
cmp
mov
les
movsb
sbb
mov
shl
push
xorl
icebp
jns
pop
cltd
sub
pop
jae
dec
fstpt
pop
xchg
mov
xor
jp
call
xchg
and
mov
push
dec
outsb
jbe
push
js
push
test
push
frstor
push
push
enter
xchg
cmp
lea
jae
scas
in
xor
push
jne
mov
or
cmp
sub
sbb
ret
jns
jbe
push
inc
in
add
sub
add
aad
scas
cmp
add
or
xchg
ret
repnz
inc
and
fcomi
mov
adc
int
mov
int3
aad
test
out
xor
daa
mov
xor
aad
or
add
js
lds
cmp
in
aam
and
cmp
or
js
aaa
sti
adc
push
xor
mov
bound
je
pusha
in
iret
adc
arpl
adc
ljmp
cmc
fimull
int
lea
inc
mov
stos
gs
jmp
xchg
insb
or
sub
in
in
loopne
leave
fnstsw
xor
imul
test
lods
mov
cmp
jge
push
rcrl
mov
lea
and
imul
push
std
stos
jnp
sbb
xlat
mov
xchg
lea
cli
xchg
test
enter
in
jns
ret
xchg
push
sahf
sbb
cs
push
cmp
add
and
inc
aas
cli
dec
popa
cwtl
dec
xor
ffreep
and
das
nop
xchg
xchg
popa
cmp
outsl
sbb
cmc
mov
lahf
xchg
pop
outsl
loope
mov
cmp
lods
add
sub
xchg
std
insl
xor
cmpsl
push
jnp
pop
cld
xchg
lods
cld
mov
pop
icebp
mov
loop
out
xchg
adc
outsb
aam
and
push
cld
mov
aas
cltd
dec
andl
lahf
fiadds
inc
out
out
adc
aam
adc
xchg
mov
mov
int
andb
lods
mov
xchg
outsb
mov
fildll
or
pop
xor
int3
mov
ret
lcall
push
stc
sub
lahf
or
nop
aas
insl
sahf
aaa
cmp
add
mov
pushf
xchg
imulb
jae
dec
pushf
stos
mov
mov
dec
sbb
xchg
sti
in
sarb
int
xchg
jl
fwait
cmp
in
repz
shll
mov
ljmp
mov
sahf
mov
divl
arpl
sti
or
dec
pop
adc
lock
dec
aas
es
push
push
shll
push
sbb
mov
mov
and
cli
mov
addr16
mov
xor
lret
loopne
ds
inc
jecxz
dec
lds
ja
daa
lods
xchg
mov
jno
loopne
rolb
mov
sahf
xchg
add
cmp
lcall
hlt
insl
icebp
dec
adc
mov
movsl
sub
pop
pop
clc
adc
lcall
clc
mov
pop
fbld
leave
xor
jno
stc
xchg
xchg
insl
sbb
lods
leave
aad
jg
aas
or
xchg
cli
call
add
pop
xchg
sub
int3
addl
mov
data16
jne
shrl
cmp
dec
fisubrs
cmp
cwtl
push
sub
fnstsw
push
dec
mov
in
outsl
xchg
sub
push
pop
das
lret
aaa
es
inc
cmp
fidivrs
and
sarl
pop
or
push
aam
fs
pop
sub
inc
lahf
imul
hlt
xchg
mov
xchg
daa
push
cbtw
in
jecxz
or
add
mov
icebp
mov
jmp
pop
leave
xor
mov
inc
addr16
movsl
jmp
mov
sarl
add
test
xchg
arpl
loope
aas
and
dec
push
fisubrl
addr16
inc
cmp
jne
mov
push
hlt
fcomi
out
mov
adc
add
mov
lock
into
xchg
mov
ds
sbb
mov
sarb
jo
out
jo
les
xchg
xor
insl
push
je
addr16
adc
jle
addr16
fildll
ljmp
push
mov
stc
cwtl
in
test
enter
sbb
and
imul
xchg
out
xchg
hlt
jnp
mov
mov
add
and
repnz
and
lcall
add
lds
call
mov
pop
cmovne
mov
gs
adc
nop
xchg
rcr
clc
shrb
dec
arpl
add
mov
cltd
push
dec
test
and
push
and
fadds
xchg
shlb
shll
sub
pop
fsubrl
out
mov
cltd
jecxz
sbb
cli
push
mov
lret
lods
imul
loop
mov
call
add
scas
out
shlb
decb
sub
push
push
push
les
mov
clc
xor
int
mov
dec
std
in
dec
xchg
decl
fnstenv
mov
jae
rolb
or
sub
ja
jge
push
or
fsubrs
sub
lods
jnp
cmp
clc
movsb
repnz
pop
mov
dec
sub
mov
push
or
lds
adc
mov
push
pop
addr16
cld
inc
mov
sahf
rcrb
jle
gs
ss
pop
jle
in
mov
dec
dec
int3
cmp
in
cmpsl
xchg
push
pop
inc
jp
out
jge
push
or
shrw
es
cmc
shll
lock
jbe
jp
mov
test
int
ja
jecxz
fwait
sbb
mov
xchg
mov
cmp
pop
imul
sub
andl
sbb
mov
in
ret
ljmp
xchg
ret
and
les
imul
int
and
andb
adc
test
popf
movsl
mov
mov
pushf
mov
adc
lock
stos
or
cltd
jp
cli
sbb
xor
inc
outsl
pusha
popf
cmc
xchg
cli
cs
cmp
jnp
cmpl
fnsave
mov
idiv
or
xchg
add
sbb
in
push
mov
mov
mov
fstpl
outsb
push
out
push
pushf
sub
or
ret
jae
pop
pop
rorl
adc
in
jb
sub
addr16
mov
test
outsb
lret
inc
leave
or
gs
inc
jg
push
xor
int3
decl
inc
lods
sub
bswap
mov
mov
add
sub
sub
inc
fsubrs
pop
add
or
xor
flds
test
test
and
enter
mov
adcl
push
and
ret
inc
pop
addr16
jg
xlat
mov
sti
popa
roll
cmpsl
aam
push
adc
je
xlat
pop
in
or
aas
sarl
inc
inc
and
scas
jmp
insb
push
adc
stos
insb
inc
rolb
popa
rcrb
iret
sub
in
pop
daa
pop
push
xchg
xor
mov
clc
mov
ss
out
das
test
je
enter
mov
push
jae
lahf
rolb
adc
insl
leave
mov
add
imul
test
stos
sub
push
test
lods
mov
gs
hlt
lea
enter
mov
sub
mov
stos
cmc
cmp
rcr
dec
pop
int
aas
cmpsb
mov
push
push
loope
and
ret
lock
mov
in
sub
sub
cmp
mov
pop
inc
je
fldenv
fldcw
pop
sub
loopne
addr16
fnsave
loope
pop
push
mov
leave
aaa
cmp
pop
jmp
sbb
xchg
mov
xchg
call
dec
mov
fdivs
push
dec
sti
push
jns
xchg
cltd
mov
mov
in
aaa
mov
inc
stc
mov
aas
pop
jno
shll
sub
and
cld
xchg
dec
sbbb
pop
pop
sub
sub
adc
push
scas
and
repnz
enter
and
mov
dec
addl
fsubl
lock
sahf
pop
adc
fsub
hlt
sti
jmp
adc
nop
jae
rcrl
fistl
pop
cltd
pop
ljmp
xor
mov
xor
or
subl
pop
sbb
pop
cld
or
sub
push
aad
stc
pop
stos
push
sti
sbb
jo
out
and
imul
push
scas
dec
xchg
test
repz
mov
pop
sbb
bound
mov
call
mov
dec
rorl
insb
ds
mov
pop
lods
and
sub
push
ficoml
xchg
xorb
xor
xor
pop
inc
andb
mov
jmp
ljmp
cmp
mov
xchg
fidivs
shrb
stos
xchg
repnz
lock
push
inc
loopne
cmp
cmp
mov
sub
inc
ja
mov
pusha
loop
call
int3
cmp
push
pop
cmp
dec
dec
out
ss
std
inc
inc
and
push
dec
cmp
ss
adc
in
adc
and
sbb
cltd
adc
js
inc
fimuls
dec
sub
aam
in
ljmp
dec
xor
subl
sbb
out
sub
rcll
sub
xchg
jne
addb
outsl
add
rcrl
jae
faddl
mov
mov
inc
insb
pusha
std
fidivrl
shll
hlt
fisubrs
out
cmp
movsl
mov
mov
iret
push
stc
insb
ret
mov
arpl
test
push
stos
push
call
push
fs
hlt
or
mov
out
xchg
cmp
and
dec
add
xchg
stos
fnstcw
jp
xlat
cli
sbb
adc
sub
inc
cltd
xchg
cmp
push
and
jmp
lahf
shrl
adc
cmpsl
mov
xchg
jmp
pop
add
xchg
fcmovb
sbbl
mov
jno
pop
dec
sbb
jl
adc
into
shr
jnp
aad
xchg
aad
gs
mov
sbb
lret
mov
inc
decb
lock
mov
sarb
pop
jne
fnstenv
jns
xor
aam
flds
pop
add
adc
mov
jnp
mov
fs
push
mov
insl
mov
mov
dec
sub
or
mov
dec
mov
cli
xchg
int
mov
or
cwtl
sub
inc
lret
xor
cs
sub
rcrb
mov
ret
jle
pusha
sub
mov
jge
out
fs
addr16
pushf
add
cwtl
cmp
mov
gs
pop
jmp
fld
jl
push
ficoms
test
aad
lds
movsl
or
adc
adc
js
inc
xchg
loop
fwait
psubsw
mov
and
mov
push
jne
jo
js
jne
loope
in
push
movsl
imul
mov
push
sbb
dec
addb
pop
adc
add
mov
xchg
lods
add
and
xorl
push
fwait
push
cwtl
ret
add
jge
enter
pop
inc
cmpsl
pop
or
arpl
mov
enter
je
pusha
mov
add
cpuid
push
sub
testb
stos
jecxz
repz
in
mov
mov
call
jmp
daa
jae
add
inc
jns
stc
jge
les
lret
pop
out
inc
call
push
nop
jmp
movsb
and
adcb
das
jbe
xchg
xorl
mov
addr16
ljmp
lret
cmp
xlat
cmpsb
mov
cmp
sti
sub
cmp
decl
sub
mov
lods
push
xchg
jmp
loopne
das
pushf
sbb
xlat
mov
xchg
and
or
sub
nop
add
sahf
mov
jbe
xor
dec
pop
lock
adc
and
fwait
popaw
call
pop
ret
lea
cli
xchg
jmp
mov
xor
gs
aaa
shll
add
mov
jnp
dec
push
push
lds
fisubrl
hlt
mov
test
push
lock
hlt
sarl
xlat
les
mov
add
scas
data16
push
jle
addb
mov
mov
imul
jno
ds
cmp
sub
nop
in
dec
pop
lods
int3
pop
shrl
mov
in
push
dec
jecxz
xchg
inc
jmp
or
or
jnp
call
sbb
and
sbb
xlat
mov
cmp
push
rcrb
dec
mov
test
pop
fsubr
xchg
sbb
cmpb
inc
jnp
nop
lods
jl
inc
ret
ret
rcrb
data16
jmp
or
inc
lahf
push
and
sbb
imul
in
mov
cmp
pop
dec
popw
js
into
sbb
xor
test
adc
enter
les
inc
leave
repz
xor
imul
popf
dec
mov
xor
xchg
or
jne
int
and
mov
mov
out
and
imul
lea
pushf
fisttps
inc
push
std
lret
xchg
or
in
out
cmp
arpl
xor
push
cmp
mov
pushf
cld
jno
mov
dec
stos
mov
push
mov
lods
mov
imul
in
loope
pop
sub
andl
xchg
or
push
and
mov
shrl
add
sbb
xor
mov
idiv
dec
mov
pop
call
cmpb
and
mov
aas
loop
mov
lods
inc
inc
and
iret
push
and
and
mov
lea
sbb
sar
xor
push
mov
gs
inc
mov
jmp
cmpsl
push
lods
les
dec
iret
dec
sahf
pushf
inc
inc
lea
mov
and
mov
push
ret
lret
es
js
dec
push
add
les
jns
pop
xorb
lret
ss
lock
xor
das
insb
sub
jmp
lcallw
cmp
mov
xor
jg
mov
in
mov
icebp
ds
mov
xor
xlat
or
sbb
fcmovne
cmp
out
inc
stos
movsl
ret
mov
dec
push
call
inc
jp
pop
bound
addr16
mov
das
imul
dec
popf
xchg
subb
dec
lock
jno
push
out
xor
push
flds
std
push
lds
or
std
and
cs
out
xorl
test
iret
loop
cmp
scas
daa
push
cmpsb
or
push
fwait
pusha
es
and
dec
jge
fmulp
mov
outsb
jae
clc
and
xchg
in
mov
add
mov
lret
insl
fldt
xor
cmp
push
jge
mov
ds
cwtl
push
mov
xor
mov
scas
dec
inc
idivl
call
mov
test
out
into
and
mov
leave
popf
push
lea
sbb
es
dec
clc
jo
inc
lret
add
add
inc
in
faddp
fs
into
aas
iret
scas
xchg
in
xor
jmp
jno
mov
lret
or
and
nop
bound
mov
add
outsb
pop
cmp
ret
icebp
mov
xchg
or
xor
lods
add
mov
loopne
stc
and
stc
sbb
xchg
cmp
mov
ret
aas
push
outsb
mov
test
stos
pop
and
sub
pop
xchg
mov
cmpsl
inc
mov
cmp
inc
inc
jne
loop
cmc
out
sub
pop
pop
daa
lcall
roll
inc
mov
jo
popa
and
jle
mov
mov
cmpsl
xchg
xor
mov
pop
xor
xchg
mov
addl
push
mov
mov
push
pop
in
imul
lcall
cmp
out
loop
mov
bound
push
dec
pop
shrb
or
pop
sub
xor
push
dec
xor
and
sub
lock
out
sbb
call
add
test
mov
jp
scas
mov
stc
iret
sub
add
shrl
mov
cmp
and
mov
fimull
push
sub
ljmp
imul
outsb
add
jl
adc
into
sbb
mov
xrelease
scas
jnp
std
gs
in
xchg
fs
es
lods
fwait
cmp
and
loope
sti
pop
dec
push
loopne
sub
add
bound
out
dec
push
adc
jl
roll
ss
jb
mov
or
sbb
leave
mov
frstor
out
test
xchg
cmp
out
and
sbb
sub
aaa
sbb
mov
sbb
mov
pushf
outsb
cmp
pop
push
pop
lods
icebp
cmp
in
imul
rcrl
ret
lret
scas
or
nop
sbb
xor
push
dec
aas
mov
out
xor
and
sub
mov
clc
sbb
and
cmp
aam
jg
addl
das
jo
enter
pop
mov
adc
jmp
inc
and
ss
mov
mov
fcomps
inc
mov
jmp
sub
mull
push
mov
dec
jle
xor
and
or
xor
scas
and
pop
mov
xchg
cmp
cmp
daa
jnp
xlat
cwtl
push
xchg
lahf
fs
mov
sbb
sub
inc
dec
ja
aam
or
fcmovb
cltd
xlat
inc
fisttpll
fmul
mov
mov
in
rclb
scas
jmp
xor
pop
rclb
xorb
xorl
in
movsl
mov
std
xor
popl
and
mov
outsl
in
aad
mov
push
mov
mov
scas
dec
es
pusha
sbb
inc
mov
xor
jp
aas
stc
adc
test
jns
test
imul
das
mov
and
pushl
inc
ja
jb
fistpl
xchg
bound
or
xchg
dec
pop
aam
inc
lret
push
add
inc
rorl
ds
pop
add
int3
xchg
ret
fnstcw
je
sbb
cmp
jle
in
rorl
outsl
in
movsb
mov
enter
outsb
and
mov
pop
sbb
fs
pop
cli
mov
pop
inc
dec
out
insl
inc
sub
int3
lods
je
push
push
sub
jp
jae
dec
sahf
adc
iret
push
inc
adc
push
lahf
shl
pop
jg
lahf
xchg
sbbl
xchg
xlat
movsw
fwait
dec
jb
sbb
add
or
sub
xchg
push
int3
jg,pt
fisttps
fildll
fiadds
sbb
lock
je
rcl
or
sbb
mov
mov
xchg
adc
pushf
pop
pop
loope
sahf
mov
addl
jg
aad
xchg
mov
gs
pop
fstps
divl
orl
xchg
pop
push
xor
pop
addr16
imul
cltd
dec
sub
mov
pop
subb
add
push
mov
xlat
cwtl
xchg
movsb
or
mov
mov
pop
jbe
jl
sbb
mov
jle
adc
add
push
sbb
add
jne
sub
xlat
mov
pop
push
repz
mov
cmpsl
fdivs
dec
push
lret
imul
xor
inc
aad
aad
pusha
pop
jmp
xor
idivl
jl
imul
testb
sbb
pop
adc
in
lock
xchg
arpl
adc
push
sarl
loope
lea
add
into
fnstcw
cwtl
les
out
mov
mov
pushf
or
scas
aad
mov
sub
notb
mov
mov
pop
lods
jmp
mov
push
lds
inc
pop
fcmovu
or
cmc
cwtl
cs
cmp
ja
cmp
pop
jne
mov
popa
popf
in
out
xor
add
xorb
add
mov
jg
xor
and
inc
dec
jne
arpl
gs
jae
loop
popw
inc
pop
call
adc
cmp
fcmovnbe
jno
xchg
inc
xchg
addr16
sbb
pop
mov
aaa
or
inc
jmp
es
jl
cltd
mov
push
sarb
int
outsb
xchg
mov
aaa
sarb
orl
jns
imul
mov
divl
dec
shrd
ficoml
mov
adc
cltd
fwait
push
shlb
jno
popa
or
mov
push
pop
mov
mov
sbb
testl
xchg
adc
jbe
daa
xchg
jnp
clc
out
insl
sbb
dec
out
ret
xor
mov
bound
fstpt
inc
or
push
movsb
pop
fadd
cmp
mov
xor
mov
dec
add
dec
jl
mov
ja,pn
lods
in
sahf
aam
ds
dec
clc
jbe
adc
stos
call
outsl
sar
jecxz
pop
add
mov
inc
mulb
mov
lret
and
dec
sub
cmp
xchg
inc
push
jge
adc
imul
pop
je
sub
push
int
xchg
sahf
pop
pop
pop
or
fildll
xchg
daa
and
xlat
sbb
inc
pop
inc
jns
push
cltd
lds
icebp
pusha
shl
cmp
jne
in
sahf
repnz
lods
sbb
insb
iret
outsl
mov
out
mov
mov
adc
mov
mov
scas
iret
xchg
in
xchg
ret
jg
mov
lods
ret
bound
out
xchg
repz
mov
pusha
jmp
jecxz
sti
mov
sub
push
mov
pavgw
iret
mov
hlt
jle
cmp
mov
or
fisttps
jp
in
into
adc
jb
inc
fs
pop
push
dec
dec
iret
adcb
dec
cmpsl
es
dec
jo
add
dec
cmpsb
xlat
xor
cld
dec
cmp
adc
paddb
loope
cltd
sub
mov
inc
jle
sub
fs
sub
lahf
dec
xor
lods
fsub
sti
jge
jp
test
push
test
in
push
pushf
xor
push
dec
sbb
adc
inc
pop
pop
push
pop
imul
jns
lahf
rolb
pop
or
pop
lods
inc
dec
pop
dec
fwait
sbbl
and
aas
test
xor
and
add
popf
aas
sbb
push
idiv
sbb
pop
push
or
clc
fisubs
pushf
pusha
mov
test
inc
lock
mov
push
push
xchg
pop
sub
mov
push
cmp
es
fdivr
jg
movsl
in
lock
xor
jne
push
push
adc
cmp
ss
pop
scas
dec
or
dec
cmpl
aad
shrb
test
imul
jle
cmp
cwtl
fs
sub
loopne
pop
pop
add
lret
xchg
xchg
adc
mov
je
jp,pn
lcall
sbb
ljmp
xor
repnz
es
dec
cmp
lods
push
adc
add
push
sbb
mov
pop
pop
adc
lea
sbb
js
popa
push
add
inc
fdivp
jmp
lret
inc
mov
jnp
xchg
cli
add
adc
shrl
ret
cmp
pop
imul
and
pushf
xor
repz
push
ret
mov
stos
xchg
in
cmpsl
mov
dec
int
cmpsl
add
gs
lock
adc
js
lret
cwtl
jl
pop
mov
sti
dec
pop
inc
movsb
daa
xchg
hlt
push
pusha
push
in
xor
add
push
or
pmulhw
mov
sub
pop
loope
popf
pop
cltd
adc
fstpt
pusha
mov
aad
adc
lahf
lahf
xchg
mov
test
or
mov
sbb
fwait
or
pop
fmuls
dec
shrb
add
and
loopne
cs
in
push
mov
mov
add
adc
std
arpl
in
insb
sbb
jle
insl
jle
es
push
jns
daa
sub
jg
push
sti
xchg
movsb
mov
pusha
aad
test
cld
fndisi(8087
xorb
loopne
repnz
aas
stc
das
push
adc
lcall
movl
nop
cmp
sub
pop
enter
in
dec
xor
lret
mov
enter
clc
ss
add
gs
loope
aas
push
int3
in
mov
aam
es
sar
jns
test
mov
ret
repnz
sub
fcmovu
adc
push
pop
jp
adc
cmp
push
sbb
addl
es
in
xchg
gs
lea
cmp
lret
mov
or
jle
xor
xchg
dec
scas
cmp
sub
fisubrl
ds
adc
cwtl
lcall
or
rcl
pop
popf
iret
mov
out
sahf
push
hlt
in
pop
daa
xor
loope
push
inc
mov
xchg
mov
iret
ja
pop
jmp
call
out
ror
data16
scas
jmp
pop
arpl
into
jb
sub
and
jmp
out
adc
loope
push
sbb
popa
jge
add
mov
notl
xchg
mov
fs
out
cli
popa
test
ss
sub
adc
ficompl
movsb
movsl
mov
add
mov
jp
shrb
cmc
fst
data16
scas
mov
mov
dec
xchg
fwait
repnz
mov
mov
lods
lods
scas
cmp
test
add
lea
leave
xchg
xor
pop
into
adc
testl
jle
cmpsb
push
es
cmp
xor
sbb
imul
xor
aas
in
pop
je
mov
lods
rclb
fidivrs
adc
fisttps
lock
push
mov
jno
pop
mov
movsb
icebp
jb
dec
ret
push
and
pop
inc
rcrl
push
mov
mov
das
aaa
andl
mov
cmpsb
sbb
rcll
dec
sbb
and
push
sub
adc
movsb
push
loop
pop
mov
aas
push
cwtl
mov
xchg
sub
jmp
test
pop
nop
popfw
add
push
dec
pop
fadds
or
sub
int
aas
pop
ret
xchg
cs
insl
sti
mov
xor
cmp
xacquire
push
pop
jecxz
pusha
lds
pop
insb
or
aaa
or
mov
mov
ljmp
shll
ret
imul
mov
mov
lods
js
lds
repnz
inc
fsubrl
add
xor
mov
stos
inc
cmpsb
stos
and
jmp
and
xor
adc
aas
mov
imul
pop
in
push
push
fsts
cmp
repz
and
dec
pushw
outsb
pop
pop
decb
jae
push
mov
cs
xchg
fadds
mov
dec
pusha
dec
out
and
bnd
sub
pop
sti
jb
test
mov
jno
arpl
add
lret
cltd
xchg
pop
out
leave
or
xor
rcrb
xlat
ficomps
add
stc
sub
es
xor
adc
sub
int
aam
sbb
mov
pop
pop
sub
das
xchg
jge
sbb
mov
inc
loop
sub
jp
sbb
loop
nop
fs
fdivrs
hlt
xchg
inc
cmp
daa
xlat
mov
ret
pop
push
pop
dec
sbb
out
sbb
imul
mov
popa
xchg
add
shll
mov
dec
push
push
cli
mov
sub
fdivrl
mov
or
test
les
mov
mov
fcomp
sub
test
push
mov
pop
loope
out
test
mov
jmp
dec
cmpsb
out
push
aam
push
xchg
inc
jo
aas
je
jmp
or
inc
repnz
sbb
or
fidivs
imul
mov
mov
xor
and
das
rorl
adc
popa
or
out
gs
sti
add
jae
xchg
push
ret
stos
mov
pop
pop
andb
cmp
mov
and
iret
fwait
push
adc
pop
xchg
in
mov
out
insb
sqrtps
notl
pop
jnp
cmp
loop
out
ds
in
das
icebp
or
out
dec
push
mov
cmp
roll
ss
leave
xor
into
mov
popa
jecxz
adc
rorb
in
fidivrs
add
stos
nop
hlt
pop
cmp
fbstp
dec
mov
aas
lcall
imul
iret
movsl
mov
cmp
push
loopne
ds
mov
jno
push
inc
mov
pop
jmp
aam
or
lret
push
stc
pop
cwtl
dec
inc
jb
and
rcr
fcompl
cld
add
jo
lods
ficoml
mov
gs
xor
sahf
xlat
xchg
popa
fxch
popf
std
push
and
enter
mov
lods
scas
add
scas
fcmovne
add
pop
xor
xor
shlb
mov
xor
gs
adc
dec
fmull
mov
maxps
lods
sahf
xchg
cmp
fs
test
xor
jne
jno
add
cld
add
andb
inc
sarb
js
dec
lret
test
or
cmpsb
inc
out
and
or
bnd
mov
add
push
and
pop
push
fwait
aas
jle
jl
test
mov
push
int3
fldt
adc
sar
outsl
mov
sub
cld
push
aam
data16
xor
jg
dec
sahf
subb
add
mov
sbb
and
pop
lret
lock
fdivrp
loop
into
inc
mov
repz
sbb
push
mov
mul
mov
pop
notl
inc
lods
or
push
pop
and
and
cmp
push
sbb
or
loope
cmp
hlt
jb
cwtl
mov
pop
and
ret
in
cmp
jmp
mov
stc
js
shll
lcall
cmp
and
or
sub
insl
out
std
insl
sbb
xchg
pop
add
std
mov
cmpsb
out
add
into
mov
jbe
sub
mov
mov
or
dec
repnz
inc
xchg
fistl
insl
adc
add
inc
cmp
into
mov
xor
cld
mov
xchg
pop
xchg
imul
rcrl
pop
dec
insl
test
icebp
outsl
sbbl
lods
jbe
movsl
mov
xchg
repnz
nop
cmp
mov
mov
mov
fistl
mov
mov
sarb
jg
out
mov
pop
inc
sub
into
lea
test
loopne
push
mov
xchg
mov
jle
rclb
or
movsl
jb
mov
pop
jge
loopne
fisttpl
lcall
inc
lret
push
pop
ds
loop
imul
mul
and
inc
stos
mov
in
roll
addr16
ljmp
insb
adc
fcoml
mov
or
mov
xchg
into
sbb
addr16
lods
dec
pop
mov
xor
sub
out
mull
jae
sahf
icebp
loope
loope
mov
pop
jecxz
jmp
cmpsb
arpl
fstps
pop
sbb
mov
xchg
fsubs
dec
dec
inc
mov
mov
dec
mov
outsb
dec
ret
xchg
repnz
ljmp
push
fs
out
cltd
mov
paddd
push
sti
and
bound
daa
out
jns
inc
dec
sbb
xor
sub
out
mov
pop
xor
pop
sub
je,pn
push
push
ja
fsubl
icebp
fdivl
jl
cmc
cmpsb
fsubr
rorb
jg
xor
dec
data16
mulb
es
dec
add
nop
xchg
aaa
and
sub
cmpsl
jl
negl
mov
int3
xor
insb
or
popa
jl
inc
lods
xchg
out
xor
or
es
mov
shl
sub
and
add
push
arpl
jnp
pop
hlt
sahf
and
mov
js
push
js
icebp
ds
jl
rolb
add
cmpsl
movb
lret
adc
ss
sbb
repnz
inc
sub
pop
cmp
mov
std
and
jo
frstor
push
mov
out
xor
fsubs
out
xchg
inc
sub
call
incb
inc
inc
jle
sub
add
or
jb
inc
jae
pop
pop
into
ss
cmpl
cmp
nop
pop
enter
stos
mov
daa
adc
out
jb
nop
stos
leave
jns
orb
popa
pop
adc
stos
and
xchg
add
pop
ret
pusha
xchg
xlat
insl
pop
test
mov
sbb
loopne
mov
mov
jne
xchg
test
mov
dec
lea
testl
mov
fwait
jge
pop
mov
ficomps
mov
arpl
mov
jg
data16
loope
push
fistpll
xchg
jmp
inc
lods
dec
jle
cmp
jl
mov
and
jp
fisttpl
sbb
sti
xchg
subb
ljmp
rcr
mov
dec
jle
mov
cmp
daa
in
push
jbe
push
enter
xlat
xchg
in
les
sbb
sub
add
aad
ss
pop
push
xorb
sub
inc
shll
push
add
lods
inc
xchg
fidivrl
cs
add
push
loope
addr16
cld
add
push
dec
mov
dec
andl
pop
sbb
jp
ljmp
mov
leave
ljmp
pop
cli
scas
inc
lret
or
push
sbb
mov
out
loope
pop
andl
dec
mov
daa
push
add
lods
out
dec
or
xchg
enter
test
dec
shrl
outsb
mov
mov
push
roll
stos
int3
mov
insl
mov
mov
jmp
add
imul
push
fcoml
sbb
xor
in
jae
push
pop
or
inc
cmpsb
mov
mov
xorl
xor
aam
xchg
imul
fcmovbe
sub
lahf
xchg
test
sbb
xor
roll
inc
mov
pop
in
loope
add
cmp
cmpsb
xor
xor
insl
mov
imul
aam
xchg
push
loope
dec
cmp
mov
lcall
rclb
fcmovne
push
lock
cmp
test
shlb
lret
xchg
xchg
pop
cmp
jb
xchg
sbb
fdiv
dec
sbb
test
enter
pop
and
pop
fisttpll
and
out
jns
cltd
imul
push
pop
inc
xor
adc
ja
push
fwait
ja
lret
jmp
xchg
nop
test
data16
pushl
push
cmp
jg
negl
push
xorb
aam
dec
push
lods
flds
add
xchg
loope
add
sbb
and
jae
insb
pusha
cmp
rol
repz
or
add
dec
adc
mov
sub
test
lret
jl
rcl
test
popa
addr16
fsubr
add
das
sub
cmc
mov
and
cmp
js
mov
push
enter
lea
sti
int
jne
or
mov
cmc
nop
icebp
and
pop
in
xor
call
testb
jle
aam
sbb
cmc
dec
adc
inc
xchg
sbb
xor
and
lcall
lcall
out
sti
bound
xchg
mov
mov
test
sub
out
fs
sbbl
call
mov
fisubrl
test
jnp
je
test
xchg
dec
jns
xor
dec
xchg
xlat
hlt
int3
test
dec
sbbl
aad
mov
dec
inc
ljmp
imul
jmp
mov
xor
mov
and
inc
movsb
nop
or
lea
test
or
ds
jg
hlt
jne
ss
sbb
mov
push
bnd
fwait
jbe
xor
gs
and
sbb
sub
dec
adc
xchg
lods
mov
ret
movl
imul
mov
sbb
mov
scas
lret
push
dec
ss
sti
sub
xchg
mov
and
in
sub
lea
imul
xor
addr16
mov
fmulp
inc
addr16
outsb
push
push
enter
fwait
or
outsl
mov
into
fstps
or
jne
mov
dec
rcrl
icebp
push
push
mov
dec
push
dec
cmp
push
mov
and
xor
cmpsl
jl
sahf
pop
pop
jnp
insb
out
movsb
mov
xchg
fisttpl
sarl
pop
imul
sub
jmp
rcr
les
push
out
imul
je
fnsave
sarl
jnp
xor
lods
dec
dec
add
cwtl
in
into
aam
xor
aaa
jle
repnz
outsb
jle
xchg
push
mov
mov
iret
sbb
popa
andb
inc
mov
cmp
push
icebp
sub
lea
stc
sub
test
andb
cmp
cmp
sub
adc
imul
pop
or
add
bound
pop
cli
cmpsl
jb
jno
add
lds
out
std
mov
xor
push
jl
aad
sbb
cwtl
cmp
pop
aad
fmul
jne
mov
mov
movsl
mov
jo
cmp
in
lret
pop
sbb
ficoms
inc
test
mov
mov
add
inc
xchg
scas
call
xor
jnp
mov
shll
mov
push
lea
xchg
mov
cmp
outsb
mov
pop
icebp
inc
loopne
and
call
popa
pushl
jns
push
sub
idiv
push
sub
subl
gs
repz
sub
lds
add
mov
int3
neg
into
out
sbb
mov
sub
and
lret
inc
cltd
add
jl
mov
mov
or
xchg
sbb
bound
adc
orb
fmuls
addl
cmp
lods
incl
jmp
mov
add
jl
cltd
loop
jae
cltd
xchg
lods
mov
jnp
inc
pusha
test
aas
imul
movsb
mov
xchg
repnz
les
in
xlat
stos
and
jge
popl
push
mov
rorl
ret
sub
xchg
popf
and
icebp
jne
push
negl
adc
imul
cmp
jg
xchg
insb
sub
ljmp
push
adc
adc
aaa
jo
in
es
in
out
test
aaa
mov
pop
ljmp
bound
cmp
test
inc
out
bound
mov
addr16
sub
in
arpl
mov
mov
rolb
add
push
mov
jge
mov
aaa
xchg
sub
inc
mov
lds
push
mov
cs
push
sbb
mov
fmul
mov
insb
addr16
int3
mov
fisttps
add
xchg
mov
push
or
mov
cmpsb
jnp
sti
stos
push
push
sub
test
push
mov
rcrb
lds
pop
fistps
jno
popa
aad
ja
aad
and
hlt
cmp
xchg
jle
xchg
fisttpl
lods
iret
push
dec
add
pop
and
fdivrs
pop
sbbb
aaa
sub
add
loopne
sub
pop
stos
xor
pop
lds
dec
pop
dec
scas
xor
and
mov
xor
inc
mov
jno
sarb
aaa
loopne
scas
add
int
push
xchg
das
inc
or
push
xor
ljmp
sub
cltd
jecxz
dec
xor
in
loop
mov
fstpt
and
jecxz
icebp
cld
fisttpl
mov
and
out
xchg
dec
and
test
sti
pop
ljmp
loop
sbb
aad
cwtl
out
xchg
add
jo
fs
pop
sub
cmp
lret
leave
add
pop
scas
inc
xchg
loop
jno
cmc
in
sbb
pop
xchg
xchg
push
mov
je
jo
shrl
jle
rcll
jg
std
testl
and
pop
jo
mov
sub
lahf
mov
popf
and
rclb
orl
inc
arpl
scas
xchg
enter
clc
adc
inc
pop
ret
inc
xchg
xor
mov
mov
mov
rcrl
xchg
xor
jp
cs
push
sbbl
jmp
and
and
and
pusha
movsl
sub
out
mov
mov
sub
xorb
adc
jne
adc
inc
mov
mov
adc
fists
jl
bound
mov
inc
imul
cmc
outsb
and
jne
fsts
rolb
mov
pop
jl
pop
filds
jmp
jo
out
jbe
mov
sbb
dec
loope
mov
push
cli
sub
mov
insb
cmp
add
or
sub
inc
outsl
repnz
push
lock
or
or
call
jecxz
xchg
mov
or
push
lods
push
test
and
sbb
in
cltd
lock
int3
xchg
mov
pop
jp
out
push
dec
les
sub
sub
inc
lret
jne,pt
enter
fs
pop
in
aam
inc
or
ret
push
mov
movb
jp
out
lret
or
cmpsl
outsb
or
rclb
or
push
lret
pop
lods
aad
xorb
or
push
cmp
insb
outsb
mov
outsl
loopne
dec
dec
data16
lret
das
incb
xor
in
enter
stc
lahf
mov
ss
xor
xchg
scas
call
loope
mov
push
aaa
push
mov
popf
jns
cmp
ss
in
or
adc
outsl
out
pop
outsl
push
cmp
or
popf
stos
pop
push
mov
inc
test
mov
pop
mov
pop
out
repnz
cli
add
sub
push
ret
jb
scas
mov
lods
pop
dec
hlt
fdivrs
out
add
hlt
and
mov
sbb
ds
sub
push
mov
or
xchg
lret
adcb
cld
mov
out
movsb
adc
outsl
imul
pop
mov
jae
imul
pop
and
cmp
and
sbb
push
loope
mov
dec
adc
les
push
icebp
in
xchg
jne
jg
push
or
inc
mov
fiadds
sub
xchg
xchg
mov
lods
daa
xchg
dec
dec
ja
fidivl
sbb
std
push
ja
sbb
inc
sub
and
nop
adc
xchg
mov
fpatan
repnz
cmp
push
cmp
test
mov
xchg
xorl
rorl
out
cmp
inc
insl
mov
jo
pop
data16
jne
js
orb
lret
add
scas
popf
jnp
es
push
mov
push
jo
shrl
fwait
mov
sbb
cmpsl
jg
jns
cmpsb
lret
pop
ret
add
push
xchg
and
mov
nopl
fsubr
mov
mov
add
push
pop
sub
inc
xor
add
les
push
jle
adc
mov
scas
cmpsl
add
bnd
jmp
movsl
js
fsubrs
test
mov
out
pop
sbb
mov
cltd
icebp
fsubs
xor
sub
dec
icebp
es
xchg
mov
call
shrl
add
mov
sbb
mov
jle
inc
jecxz
lret
jge
cmc
shrl
xchg
mov
outsl
mov
test
les
xor
lds
xor
pop
xor
cmp
mov
fldt
faddl
cmc
sub
cli
xor
cmp
cmpsb
fdivrl
adc
cmp
jnp
fildl
lock
push
mov
fprem
lret
outsb
dec
xchg
sub
xchg
jge
sbb
inc
xchg
jmp
cmp
inc
mov
test
push
cmp
shlb
rcrb
fldenv
cs
int
xchg
mov
sbbb
fcmovnu
subb
mov
icebp
pusha
adc
mov
cli
cli
clc
xchg
stos
sub
out
sub
mov
insb
aad
outsb
lret
jle
ficoms
inc
lret
ficomps
leave
notb
pop
loopne
xchg
xor
dec
fldcw
pop
test
cmp
inc
shrl
adc
xchg
xchg
leave
jo
int3
or
adc
mov
adc
loopne
into
cltd
pop
xchg
out
and
xchg
push
scas
imull
mov
sbb
adc
xor
inc
iret
or
call
fwait
mov
popf
jmp
inc
mov
xor
mov
jecxz
pop
cltd
cld
scas
decb
dec
outsb
cmp
adc
sub
add
loopne
je
mov
loopne
imul
push
push
inc
mov
add
clc
aam
call
vshufi32x4
ret
mov
push
adc
cltd
mov
movb
loop
shl
stc
pop
cmp
imul
in
mov
jne
sbb
mov
lcall
push
insb
clc
shll
xchg
out
pop
pushf
jecxz
dec
mov
jae
loop
sub
and
scas
jle
pop
mov
clc
iret
icebp
movsb
andl
mov
sub
lcall
jg
fwait
outsb
add
arpl
mov
lea
adc
mov
push
orl
push
and
in
das
push
xchg
mov
jne
cmpsb
stos
and
jge
pop
call
push
je
jge
in
mov
jmp
inc
ja
inc
or
add
push
clc
ret
mov
jae
mov
cli
jmp
push
adc
fldenv
or
adc
lret
insb
ss
cmpb
jnp
mov
push
lcall
push
xor
ret
cmp
xor
cmp
inc
mov
js
push
cli
rclb
into
push
dec
mov
sbb
or
and
dec
mov
jnp
and
stos
sub
ja
mov
and
inc
inc
xor
lea
mov
sub
inc
and
add
aam
popf
pop
loope
movl
adc
add
sbb
pop
dec
cmp
sarl
pop
shll
push
dec
push
cmp
insb
fldl
sbb
xchg
cli
push
mov
inc
ljmp
ljmp
mov
fbld
jns
pop
adcb
jle
xor
in
xchg
pop
cmp
decb
mov
in
jmp
std
mov
mov
rcll
mov
inc
ljmp
xor
dec
jae
sub
mov
pushf
push
jae
mov
adc
ss
insb
movsb
stos
test
lock
pop
bound
loopne
mov
ja
jle
mov
mov
push
dec
loop
jg
pop
pusha
daa
scas
or
xor
jnp
lods
mov
inc
aad
lods
sbb
incl
punpcklbw
imul
leave
sahf
arpl
in
fldcw
lods
ret
pusha
add
dec
push
sbb
test
pop
jle
mov
mov
mov
xor
or
inc
rcll
or
jp
xchg
sbb
mov
push
mov
add
aaa
push
sub
sbb
mov
cld
sub
dec
fs
dec
mov
std
push
repz
inc
or
flds
mov
fimuls
jne
je,pt
ret
repz
ljmp
hlt
lret
mov
stos
xchg
inc
in
adc
and
notl
mov
pop
dec
push
mov
pop
enter
jo
inc
repnz
push
nop
mov
fnstcw
xchg
pop
lods
cmp
inc
xor
iret
aas
adc
std
pushf
adc
arpl
das
inc
push
sahf
in
pop
movb
fninit
js
xor
lods
pop
in
cli
add
dec
js
jb
and
and
aas
aaa
push
push
inc
fs
fs
sti
push
cmp
add
movsl
enter
pop
cmp
popl
inc
inc
and
arpl
jb
addl
jnp
test
dec
outsb
jnp
sbb
lahf
leave
addb
cmp
cld
cmp
jle
mov
lods
xor
pop
push
outsl
int3
push
cwtl
push
dec
aad
jb
sub
dec
pop
pop
scas
in
test
jmp
shll
popa
inc
mov
mov
cmp
cs
leave
pusha
in
mov
int3
push
lahf
rol
imul
mov
imul
push
loopne
xchg
mov
pop
mov
mov
jno
popf
imul
pop
into
fmuls
mov
jns
add
in
cli
enter
xchg
aad
push
pop
inc
and
popa
jg
outsl
subb
pusha
jecxz
push
add
xchg
outsb
aam
jge
iret
lods
ljmp
or
ficoms
outsb
add
ret
mov
and
mov
push
mov
jne
lcall
mov
mov
and
leave
xchg
mov
subb
aas
pop
jnp
push
and
hlt
jg
fidivrs
pop
lea
push
sbb
hlt
xchg
pushf
cmpsl
push
lret
fcompl
movsb
dec
cmpsb
xor
out
jno
loope
push
ljmp
sbb
aam
inc
mov
adc
cli
dec
std
stos
lahf
mov
stc
fildll
imul
fwait
stc
mov
mov
scas
mov
nop
daa
stc
xor
and
push
jl
jbe
jnp
inc
mov
leave
pop
shll
push
cmp
fwait
mov
mov
insl
jae
testl
inc
xor
xchg
insb
or
and
jp
hlt
addr16
call
mov
sbb
push
mov
pusha
pop
xchg
inc
out
stos
stos
pop
jns
sub
mov
mov
cs
cmp
and
pusha
outsl
cmp
pop
sbb
popf
lea
sahf
xchg
repz
xor
lods
jbe
sbb
mov
mov
lods
jge
xchg
inc
repz
xor
fdivrs
sbb
out
fcmovnu
cbtw
subb
orl
jne
mov
sbb
jb
test
test
lock
outsb
sbb
dec
lea
jne
fidivl
andb
sub
mulb
aam
insl
loopne
inc
lods
xor
mov
pop
mov
outsb
push
push
add
out
pop
shrb
dec
pop
leave
mov
test
sbb
outsb
sbb
iret
xchg
into
imulb
cmc
stc
ljmp
add
jne
in
mov
int
jmp
cmp
in
xlat
in
push
sub
xchg
cmp
and
mov
push
repnz
mov
dec
push
outsl
cmpl
jne
sahf
mov
mov
icebp
ret
jne
and
into
int3
je
int3
xor
test
pop
rol
mov
mov
inc
test
pop
ret
push
loopne
xchg
orl
and
enter
inc
roll
es
mov
mov
push
lret
ljmp
jmp
in
jge
mov
mov
fiadds
adcl
stos
lea
and
xor
pushf
jbe
fadd
mov
push
jg
dec
test
add
or
push
sub
mov
mov
shll
insw
xchg
imull
mov
out
pusha
cmp
or
xchg
stc
jns
cmp
mov
data16
or
add
xlat
out
bound
ljmp
sbb
push
shl
jbe
mov
lds
movsb
push
gs
lret
addr16
es
mov
popf
sarb
cmpsb
push
addl
dec
pop
repz
xchg
mov
push
test
fdiv
ja
add
xor
pop
cmp
enter
stos
adc
dec
sbb
dec
les
jnp
stos
sbb
push
outsl
and
loop
dec
cmp
pop
nop
xor
adc
fstps
add
popa
inc
adc
mov
push
add
incl
inc
clc
addr16
inc
fiadds
mov
daa
jne
lcall
or
cmpsl
inc
vcmpsd
int3
sub
cmp
push
xor
xchg
or
push
faddl
adc
and
jae
push
jns
adc
mov
aas
push
js
jb
popa
inc
idiv
pop
test
lds
nop
and
pop
lea
ljmp
push
sub
jl
lds
cli
mov
dec
fcomip
sbb
fcmovb
jp
jp
shrb
xor
jecxz
xlat
or
shl
test
pop
std
jmp
inc
ds
loope
sub
stos
mov
stc
mov
dec
jg
sbb
imul
pushf
mov
jl
call
daa
jle
or
add
loopne
dec
lcall
fwait
pop
xchg
mov
mov
stos
inc
xorb
pop
fldcw
or
enter
cmp
orl
fidivl
jne
das
sbb
mov
sub
sahf
inc
adc
adc
stos
fstl
pop
insb
lods
jle
sub
fsubl
xor
leave
test
sti
add
adc
lret
cmpsl
mov
inc
ja
aad
lods
xlat
jle
xchg
sbb
xor
dec
fidivrs
mov
loopne
push
mov
xor
pop
subb
lret
adc
imul
movsl
sti
shlb
or
cmp
lret
and
jno
cmpsb
mov
into
sub
jg
or
inc
out
xor
cli
and
jne
mov
mov
movsb
jno
add
lret
and
insb
mov
pop
nop
pop
jae
xchg
mov
hlt
les
sti
scas
adc
dec
bound
xlat
and
push
adc
inc
jnp
and
daa
out
shlb
test
xor
jle
push
mov
outsb
imul
imul
mov
dec
lret
stc
xchg
push
and
popa
sub
inc
das
cmp
push
in
xchg
dec
lods
cli
cs
rclb
cmp
inc
test
pop
adc
imul
fldl
pushf
test
jmp
xor
decl
dec
mov
ja
daa
adc
dec
incl
jl
jnp
dec
xchg
jmp
test
mov
jp
jnp
cmp
add
out
leave
scas
jecxz
add
jbe
repz
dec
lods
leave
add
inc
mov
adc
adc
inc
cmp
cmpl
sub
popf
mov
std
hlt
enter
cmpsl
dec
or
lods
mov
mov
hlt
mov
lea
add
jbe
xor
mov
push
outsb
or
lods
and
ss
push
and
pop
or
sub
call
dec
or
mov
mov
inc
inc
mov
inc
push
out
mov
mov
ds
test
in
adc
or
xchg
dec
out
cmp
fists
mov
pop
fucom
dec
pop
imull
sbb
lahf
sub
push
iret
pop
lods
je
jae
fadds
jecxz
inc
lods
in
mov
mov
push
imul
sub
inc
cs
andb
inc
test
fisttpl
sub
pop
pop
xor
pop
xchg
and
jp
push
in
cli
inc
mov
xor
jae
loopne
xchg
push
pop
mov
jmp
in
leave
int3
dec
add
pop
xor
cli
mov
xor
mov
mov
push
outsb
mov
add
sti
xchg
xchg
jp
pop
aam
push
bound
in
pushf
pop
mov
popa
in
es
push
aaa
jecxz
sub
adc
clc
into
pusha
cmpl
adc
stc
sub
outsl
popa
sub
bound
pop
scas
jo
lahf
pop
or
adc
xchg
mov
push
inc
mov
mov
call
cmp
cmc
fstpt
add
hlt
pusha
sub
sarl
fld
lcall
mov
hlt
test
pop
cmp
mov
cmp
dec
inc
fdivp
mov
fildl
pop
loope
cmp
cltd
insb
and
add
mov
push
push
adc
xlat
adc
jle
out
pop
iret
mov
pop
enter
push
xor
divb
sub
or
adc
fstl
lcall
lret
inc
jge
sub
sbb
pop
mov
aam
lods
lea
aad
jg,pn
jle
pop
cmp
jp
jecxz
sbb
xchg
fisttps
dec
cmp
pop
sahf
sbb
ds
sub
clc
les
xchg
es
xchg
out
pop
sub
cmp
jns
fcomp
imul
js
pop
adc
xor
push
xchg
js
adc
mov
clc
xor
andb
or
cltd
and
lods
mov
cmp
mov
xchg
leave
jmp
cmp
xor
adc
pop
std
mov
fidivrl
and
sub
jo
xchg
push
sbb
dec
push
aad
xchg
mov
ret
mov
pop
mov
push
ljmp
inc
xorl
lret
test
dec
xchg
insl
and
ret
adc
idivl
cmp
in
rcl
clc
sub
adc
mov
int
jo
loopne
xchg
and
push
lcall
iret
lcall
jl
lods
loop
outsl
sbb
fwait
aaa
jno
mov
and
mov
aam
std
add
nop
icebp
pusha
or
mov
fdivrl
call
test
dec
fwait
push
lock
adc
and
mov
fmuls
lret
imul
je
cld
pop
mov
adc
cs
push
pop
fcoms
jmp
sti
dec
mov
orl
cmp
sbb
push
mov
cmp
and
jp
or
popa
jb
xlat
push
and
add
push
jmp
stos
sbb
loop
das
hlt
sbb
add
jo
inc
xor
dec
shrb
cmp
arpl
jne
inc
icebp
inc
add
es
test
or
inc
cmc
add
gs
adc
aad
ret
or
int3
fwait
outsb
test
dec
movsb
mov
adc
mov
repz
scas
out
xor
es
pushf
mov
mov
addr16
out
inc
inc
imul
es
scas
ds
mov
xor
cltd
mov
lahf
xchg
pop
mov
sbb
adc
dec
scas
mov
add
pop
into
dec
cmpl
je
jmp
push
cs
jne
push
jp
aad
push
cmpsl
add
insl
dec
push
xchg
lahf
sub
stos
je
fimull
adc
xchg
idivl
clc
sub
pop
jns
push
ret
outsb
in
push
cld
jecxz
add
jmp
ret
push
push
sti
sbb
mov
test
xchg
mov
and
int3
push
add
sbb
psubsb
jns
mov
cmpsb
mov
cmpsl
jne
cmp
xor
jle
mov
mov
add
std
les
fcmovnu
ret
or
ds
out
mov
adc
mov
aaa
xor
push
scas
jge
cld
push
aam
inc
and
sete
pop
icebp
push
sub
pop
xchg
mov
xor
xor
dec
shrb
pusha
jmp
xor
xchg
test
sub
jp
shrl
pop
lds
je
jl
push
pop
cmp
adc
aas
push
pop
fiaddl
movsb
sbb
mov
mov
xor
cmp
int
repnz
std
aam
mov
sub
inc
repz
adcl
sub
movntq
out
jl
sbb
bound
push
scas
xor
cs
sbb
std
pushf
pop
jb
hlt
jnp
jl
movsl
js
ds
sbb
jnp
repnz
lods
in
jge
inc
cltd
arpl
lahf
adc
std
std
daa
and
arpl
testl
xor
lds
aaa
sbb
xlat
jle
sub
pop
xchg
fs
outsb
mov
inc
orl
xchg
adc
sub
lods
xchg
inc
sub
sbb
push
flds
fs
es
test
cmp
std
pop
pop
mov
sub
xor
inc
mov
sbb
adc
insl
sbb
mov
jmp
outsl
aad
sbb
out
out
inc
cmp
pop
xchg
jge
jmp
pop
cmc
in
and
lods
cli
xchg
inc
xor
sub
popa
stos
mov
jge
and
imul
enter
mov
dec
adc
xor
aaa
cmp
jg
or
cmp
mov
stos
outsl
pop
push
sub
cmp
sub
cmp
popf
es
dec
adc
mov
mov
xchg
lret
xchg
iret
push
xchg
mov
adcl
cmp
and
daa
int3
pop
or
notb
adc
mov
cs
sbb
pop
out
cmp
mov
and
test
aam
pop
xchg
pop
add
inc
inc
push
sub
rcl
mov
pop
mov
and
in
pop
out
dec
mov
ret
fsubs
loopne
mov
cmp
sub
mov
mov
or
or
in
arpl
push
aam
add
sub
lods
mov
ljmp
jnp
mov
loope
mov
fcmovnb
jl
int
js
dec
inc
imul
in
mov
mov
mov
sbb
xor
adc
in
mov
pop
mov
and
push
push
popa
aaa
out
mov
dec
cmc
dec
sub
push
xor
and
cld
fsubl
dec
imul
mov
repnz
fs
mov
fimull
push
inc
rcr
js
idivb
ja
jae
andb
add
ret
shlb
gs
roll
or
mov
insb
sub
lcall
repnz
imul
fildll
popf
jmp
loop
ja
inc
aam
cld
icebp
ss
adc
xor
add
cwtl
test
das
ret
jae
inc
cmp
pop
xor
pop
jp
imul
icebp
dec
push
pop
sub
dec
incl
mov
testb
mov
aaa
or
enter
push
xor
cld
fs
iret
sbb
in
dec
inc
std
add
jno
and
sbbl
push
pop
xor
fs
sub
test
je
inc
inc
leave
jno
out
jbe
jo
dec
mov
mov
popf
mov
adc
imul
dec
dec
fists
push
je
jne
push
lahf
ljmp
mov
sub
dec
es
xor
adc
adc
shlb
xchg
ds
lahf
movsb
sub
sbb
shrb
push
pusha
dec
in
push
mov
push
inc
mov
in
lea
dec
ds
xor
jmp
jo
mov
je
or
and
xchg
inc
sub
iret
test
dec
out
rcll
ds
sahf
mov
jp
imulb
pop
and
jbe
adc
push
mov
mov
ret
pop
lcall
add
test
add
pop
mov
daa
aaa
mov
mov
xor
xor
sbb
je
js
push
idiv
mov
or
sbb
mov
dec
in
inc
popf
roll
jb
adc
fs
shr
lock
pop
js
pop
inc
xorb
mov
inc
adc
ljmp
imul
out
mov
cmp
inc
cmpl
push
in
insb
je
cmp
in
inc
lds
xchg
stos
adc
or
fisubrs
pop
mov
sbb
mov
mov
scas
xor
inc
dec
push
xor
xor
lock
jno
inc
scas
jp
jnp
xor
stos
lods
setle
aam
pop
sbb
jbe
call
ficoms
jns
jns
mov
sub
push
das
int
cmpsb
pop
push
xor
pop
into
mov
mov
inc
repz
aad
xor
pop
js
and
xlat
mov
popa
mov
mov
mov
loopne
in
mov
xor
addr16
push
xchg
or
dec
addl
lcall
aas
test
shr
mov
icebp
push
sub
dec
flds
add
scas
test
stc
inc
jno
imul
sarb
xchg
push
imul
sub
subl
sub
fnstenv
fildl
stos
insb
mov
sbb
push
xchg
inc
cwtl
bnd
xor
sub
push
push
xor
nop
mov
leave
sbb
inc
push
in
sarb
js
jg
pop
sbb
or
stc
pop
xor
popf
adc
sbb
mov
out
scas
fiadds
and
sbb
sbb
mov
sbb
jmp
sahf
cmc
negl
mov
push
fwait
mov
pop
cld
xchg
sbb
or
and
push
mov
push
mov
mov
pop
stos
test
mov
outsb
mov
dec
nop
sbb
pop
mov
cmp
nop
fwait
and
jbe
jge
les
push
in
in
rcrl
adc
or
cmpl
mov
movsl
std
nop
in
outsb
insb
add
mov
add
mov
icebp
dec
sbb
into
mov
flds
lods
enter
notl
push
inc
mov
enter
sbb
lods
push
pop
add
xor
sub
mov
repnz
mov
mov
aas
cvtps2pd
jl
push
popf
nop
ret
fsubs
jne
int3
in
mov
mov
fistps
dec
inc
xor
daa
insl
call
hlt
daa
out
insl
lds
daa
cld
xchg
insb
add
push
mov
repz
imul
dec
sbb
loopne
pop
rcr
rcrb
sub
mov
mov
icebp
dec
test
dec
mov
dec
push
xor
ds
std
das
xchg
pop
sub
mov
insl
cmc
outsl
popa
clc
mov
add
aas
jae
stos
loope
cmp
mov
push
cmc
pop
in
mov
add
stc
xchg
data16
jmp
mov
adc
out
out
jne
and
movsb
mov
sub
adc
adc
xor
mov
dec
and
popa
js,pn
cwtl
sub
add
decl
in
inc
iret
jnp
out
loopne
mov
xor
adc
xor
inc
test
adc
data16
lcall
mov
mov
push
stos
jb
daa
mul
es
mov
dec
call
dec
sar
test
data16
mov
lock
cmp
sub
mov
lods
popa
cmp
idiv
adcl
cmp
lahf
xor
or
adc
mov
mov
sbb
pop
lret
ds
mov
mov
dec
rorl
mov
movsl
in
push
arpl
mov
ds
pop
jmp
out
mov
push
hlt
dec
push
pop
and
shll
cmp
mov
into
loopne
hlt
or
cli
cmc
shrb
arpl
in
pop
sti
lahf
repnz
jb
mov
shrb
mov
insb
popa
addr16
sti
pop
scas
or
mov
xchg
pop
cli
jmp
xchg
inc
jmp
and
or
mov
dec
aam
mov
adc
mov
push
rep
mov
cmp
sub
xchg
jo
xchg
push
sub
add
cwtl
out
addr16
inc
cmp
xor
sbb
inc
mov
outsb
and
sahf
jecxz
xchg
call
lret
icebp
mov
mov
rclb
out
popa
shrb
test
mov
ret
mov
mov
popf
jp
or
adc
push
testb
in
or
dec
cwtl
pushf
lods
pop
movsb
and
sarb
mov
hlt
out
inc
xor
insb
daa
mov
out
fisubs
in
stos
arpl
pop
out
xor
jmp
mov
scas
jge
mov
mov
mov
mov
sbb
or
fldcw
stos
or
sahf
pop
call
fildl
dec
imul
outsb
pop
or
or
sub
cld
dec
or
mov
sub
adc
sbb
push
je
inc
neg
mov
jae
mov
divl
mov
adc
leave
cmp
sbb
push
inc
cmp
into
fbld
inc
mov
xor
clc
lea
jne
sar
add
in
dec
ficomps
iret
inc
or
ljmp
sub
pop
cmpsl
adc
repnz
lcall
lret
xor
cmp
push
scas
scas
or
mov
fiadds
btr
push
xor
test
les
mov
ss
scas
cld
or
jge
sti
stos
cmp
dec
aas
mov
cmp
pop
or
sahf
inc
jle
test
mov
mov
ret
aaa
jnp
rorl
packsswb
inc
pop
ret
sbb
mov
push
loope
call
jnp
pop
mov
inc
sub
pop
sahf
cmp
xor
xor
scas
mov
push
mov
xor
ljmp
push
sti
fnsave
ss
int
xor
jle
add
mov
shll
dec
movsl
mov
insl
insl
out
call
sbb
sti
filds
lret
int3
insb
jo
and
repz
inc
mov
lret
adcl
data16
sahf
mov
pop
xchg
push
into
push
out
pop
mov
in
sbb
and
jmp
lock
outsb
mov
mov
mov
cmp
mov
fnstcw
sub
std
scas
push
rcl
push
leave
and
loopne
outsl
push
sub
xrelease
xor
push
fstpt
sbb
mov
sbb
or
sub
insb
nop
shl
xchg
sub
nop
subl
push
xor
push
add
jecxz
and
xchg
lods
test
push
mov
icebp
scas
push
push
aaa
xor
mov
js
xor
repz
mov
and
adc
mulb
icebp
mov
lahf
xor
aad
mov
dec
mov
sbb
pop
cli
push
push
cmp
inc
int
mov
fcmovnu
inc
push
cmpb
inc
imul
pop
subl
into
push
lahf
push
loop
inc
push
pop
xchg
push
and
xor
inc
bound
sbb
ret
scas
mov
mov
das
fcoms
inc
sbb
mov
cmp
and
jl
cwtl
ds
dec
insl
sbb
rcl
or
mov
nop
xchg
mov
std
movsl
push
xchg
push
popf
lret
push
les
ret
out
aam
addb
pop
in
fidivrs
xchg
jns
nop
je
xlat
aam
cmp
add
icebp
subl
cmp
lds
fadds
frstor
mov
cmp
xchg
inc
mov
and
cmc
and
cs
inc
aas
push
in
cli
jae
scas
ret
push
mov
lcall
hlt
lcall
aam
dec
and
outsb
pop
xchg
push
jbe,pn
and
ss
lock
sti
mov
loop
lcall
xchg
es
addl
jp
mov
sbb
sarb
sub
xchg
sub
mov
adc
mov
stc
jo
test
cmp
dec
imul
xchg
jp
push
add
mov
aas
test
lds
xchg
push
icebp
sub
push
adc
and
hlt
dec
cltd
aam
mov
or
test
in
mov
int3
fidivrl
push
cmp
call
hlt
cmp
es
shr
cmp
lret
adc
or
in
jo
xor
inc
push
ret
or
cmp
pop
jg
add
imul
xchg
mov
push
divl
mov
adc
repz
cmp
dec
xchg
pushf
in
mov
adc
add
movb
jle
stos
or
sbb
in
out
push
ffreep
push
aad
adc
out
xchg
sub
testl
mov
adc
xchg
sub
sahf
pop
push
in
lock
lret
fiaddl
je
adc
dec
add
add
push
push
sbb
cmpb
mov
mov
fcmovnu
shl
inc
js
subl
movsb
or
addl
cmp
dec
xchg
xchg
test
insb
push
mov
aam
sub
fistl
ret
and
dec
inc
ficoms
pop
mov
ret
push
repnz
xor
push
add
push
and
and
imul
subl
jge
shrl
sbb
shll
out
mov
push
test
sub
pop
rol
xor
icebp
sti
out
inc
mov
mov
and
fbld
mov
add
rcrl
ja
push
xlat
adc
sub
bound
gs
movsb
mov
ss
dec
hlt
test
push
shlb
lahf
and
cmp
sub
dec
out
daa
inc
inc
loop
imul
mov
out
shlb
xchg
sbb
add
push
leave
out
ret
pop
or
cmp
mov
pop
push
stos
and
jne
sub
add
jmp
lret
es
pop
cmp
arpl
imul
aam
dec
inc
out
inc
orl
aam
pop
mov
sbb
lods
xor
lods
in
inc
add
xchg
lea
cmp
xchg
cmp
dec
add
std
cmpsb
jl
dec
dec
nop
mov
data16
push
sub
enter
pop
inc
scas
jns,pt
mov
mov
mov
loope
loope
nop
and
push
sbb
int3
ret
add
jno
sbb
aas
addl
data16
pop
push
sbb
jno
jne
xor
lret
mov
adc
out
fs
inc
jecxz
into
mov
jge
fcmove
ja
in
xor
inc
mov
mov
push
out
cmpsb
or
pop
stc
daa
xor
xchg
mov
add
inc
or
mov
sbb
push
ret
mov
mov
loop
sub
dec
inc
mov
jb
cmp
push
xorb
cmp
mov
nop
ficoml
xor
test
fisubrs
jl
out
sbb
xchg
iret
adc
or
xchg
mov
dec
xchg
jno
mov
pop
test
adc
or
sbb
sub
lods
jae
push
sub
jb
ret
loop
mov
les
xlat
int3
shll
repz
mov
bound
fmul
stc
leave
mov
mov
pop
add
jle
jmp
xchg
mov
pop
fldcw
sub
imul
cmp
loope
inc
int
xchg
mov
lcall
sti
ss
mov
and
aam
insl
icebp
stc
push
jle
push
cli
jle
insl
call
jle
dec
fstpt
out
push
sub
sbb
inc
lea
imul
mov
nop
push
pop
mov
or
mov
test
xchg
fstpt
xchg
add
enter
sub
test
mov
cmpsb
xor
scas
out
cli
inc
jl
nop
mov
rorb
loopne
add
jle
lods
push
or
leave
cs
xchg
sub
ret
and
and
add
inc
mov
rclb
xchg
data16
lcall
mov
test
mov
pop
sbb
adc
sub
dec
lahf
rcll
loopne
sub
fs
jb
subb
xor
jl
or
cld
mov
imul
out
in
inc
mov
stc
jp
cmp
pop
test
mov
sub
sub
mov
or
sbb
shl
pop
add
pop
push
incb
test
push
loop
dec
sub
repz
mov
cmp
mov
pop
xor
mov
test
fsubrs
into
iret
ja
stc
pop
aad
adc
test
movsb
ja
dec
jle,pt
jl
mov
push
inc
shlb
cld
loope
dec
jmp
in
add
cmp
fcom
push
add
pop
test
xor
jmp
mov
call
xor
std
or
popl
sahf
stos
fnstenv
pushf
aam
cli
stc
leave
and
or
out
mov
cmpsb
and
test
stos
push
pop
add
lcall
cli
mov
xlat
imul
pusha
dec
sbb
xor
dec
loope
out
cmp
ret
sub
mov
repnz
pop
bound
rclb
hlt
pop
mov
mov
cmp
testb
mov
jge
inc
lret
dec
sbb
cmpsl
stos
mov
jnp
sub
mov
and
data16
pusha
pop
lock
pop
pushf
test
ret
xchg
or
xor
inc
lahf
sbb
dec
add
ljmp
mov
jno
loope
notl
xchg
mov
push
push
insb
jmp
daa
mov
jle
sti
mov
lods
sub
mov
add
add
aas
scas
push
ror
jmp
shld
cmp
mov
movsb
push
fimull
das
movsl
mov
out
add
mov
aas
push
pop
inc
push
lods
mov
in
jo
imul
out
inc
or
je
mov
movsb
outsl
addb
std
mov
and
out
repnz
mov
cmpsl
dec
jp
testb
andl
inc
pop
clc
add
inc
packssdw
in
popa
imul
gs
or
cmp
rcl
loop
mov
gs
and
scas
out
scas
cmpsl
int3
inc
into
xor
cmpsl
and
and
cmp
mov
jmp
push
bound
cld
and
nop
pop
pop
mov
push
jno
pusha
cmpsb
cmpsl
les
test
sub
icebp
jo
pop
in
mov
cli
pop
sbb
xchg
mov
bound
out
repnz
dec
mov
mov
mov
add
mov
sahf
mov
cli
popf
dec
mov
loop
mov
or
incb
jne
lret
xor
ljmp
xor
roll
cld
out
jmp
add
gs
fs
xor
lods
rorl
addl
sbb
xchg
in
and
loopne
xor
shl
test
gs
lret
cmp
sbb
in
pop
cltd
jmp
jl
pushl
jnp
dec
inc
push
jb
scas
scas
loope
jns
jno
mov
aam
lock
lock
push
pop
fistpl
jl
aas
xor
add
or
pop
sbb
xchg
ljmp
imul
inc
jnp
jnp
pushf
test
sub
call
ds
mov
icebp
arpl
imul
sub
pop
xchg
fldt
out
stos
mov
ss
pop
and
jp
push
movsb
push
mov
dec
push
dec
adc
ss
and
loop
dec
cs
mov
push
addr16
pop
pop
fadds
pop
xchg
cltd
rclb
in
jge
cld
or
adc
jecxz
mov
cmp
jp
sarb
push
stc
or
fdivl
inc
ret
shl
mov
mov
scas
push
jb
cmp
dec
sub
xor
out
loop
popa
or
repnz
sbb
xor
out
sbb
push
insb
test
popa
mov
mov
neg
mov
inc
cmpsb
xor
daa
stos
fcmovb
push
cltd
mov
cld
out
mov
mov
xor
push
or
mov
inc
mov
cmpsb
not
pop
call
xchg
mov
or
xchg
scas
shlb
adc
xchg
aaa
orl
insb
test
sbb
mov
test
lahf
mov
adc
int3
insb
adc
lret
cmp
rolb
xchg
push
int3
ds
andb
push
leave
dec
aas
pop
rcrl
notl
adc
pop
push
cld
scas
xor
in
cwtl
jb
imul
adc
out
mov
lea
nop
push
sarb
push
pushf
mov
fnstcw
mov
mov
adc
mov
hlt
push
cmp
adc
sbb
jbe
scas
mov
xor
sub
mov
cli
out
jl
push
sub
or
cmpsb
mov
mov
pop
pop
mov
jecxz
mov
xchg
jecxz
dec
cmp
scas
add
in
push
cmp
loopne
sub
or
cli
icebp
call
arpl
je
dec
and
sub
lahf
out
hlt
push
repz
jp
ljmp
gs
hlt
inc
out
test
add
icebp
iret
aas
jns
sub
leave
push
popf
cs
mov
cmpsl
dec
pop
dec
cmp
or
es
jmp
mov
inc
mov
pop
mov
and
xchg
add
lods
push
or
lcall
and
ja
mul
ja
imul
push
loopne
mov
inc
sbb
in
add
xchg
jnp
aam
mov
adc
jnp
inc
add
adc
add
imul
loop
dec
les
mov
cli
pop
mov
cli
ljmp
dec
das
sbb
stc
loop
fs
test
mov
mov
or
testb
push
jecxz
incl
imul
lret
inc
sub
cmp
ja
dec
dec
les
fdivs
lock
outsb
adc
dec
sbb
jmp
mov
sbb
push
add
loopne
xor
sub
jmp
push
mov
int
push
pushf
subl
or
and
stc
notl
xchg
pop
sbb
inc
in
xor
jg
je
mov
push
and
insb
jg
div
cmp
dec
add
mov
jmp
push
xor
imul
frstpm(287
lock
xchg
sarl
xor
andl
adc
outsb
stc
sub
pop
daa
out
adc
insb
push
or
jl
popf
movsb
or
mov
adc
notl
mov
fcmove
xchg
mov
hlt
adc
jo
lods
adc
dec
fwait
addb
fcoml
fmull
fmull
adc
shl
fsubrl
mov
clc
inc
popf
push
xchg
add
add
and
mov
pop
in
clc
push
fwait
test
mov
jbe
push
jo
add
pop
jecxz
and
loopne
iret
aaa
incl
scas
pop
test
push
int
jle
popa
or
mov
inc
push
das
jp
aaa
jns
mov
pop
into
clc
lock
add
pop
rdpmc
sbb
shll
int3
or
jno
aam
insl
jae
cld
fdiv
ret
sti
cltd
cmp
mov
pop
int
js
lret
roll
repnz
cld
dec
and
push
inc
jns
mov
adc
stos
adc
ret
mov
rcl
cmp
or
pop
into
xchg
lea
add
testl
test
xchg
iret
add
xchg
sub
pushl
push
sub
mov
fisttps
push
mov
jl
shll
inc
pop
or
xchg
bswap
gs
xchg
fidivrl
jl
xchg
inc
push
dec
xchg
inc
sbb
lret
mov
cltd
sub
push
xchg
push
push
cltd
cld
push
push
xchg
movb
sbb
sarl
pop
mov
sbb
addr16
xor
xchg
sarl
mov
movsl
subl
mov
mov
dec
push
dec
in
adc
rcr
fsubrl
outsb
xor
xchg
test
vsubsd
add
fiadds
scas
lret
push
ljmp
das
test
cltd
or
xor
in
lahf
and
push
test
cmp
lcall
cmp
mov
and
jo
int
mov
in
in
rorb
xchg
jns
push
test
jmp
jno
mov
xor
jo
dec
xchg
mov
cltd
mov
push
out
scas
fisubrs
rorl
rorl
pusha
ss
mov
test
out
stos
gs
pop
sbb
lret
movaps
repnz
xor
xchg
mov
mov
je
add
ss
movl
or
inc
lock
dec
dec
dec
movsb
and
jl
jae
jae
xor
xor
xor
sub
adc
into
mov
xchg
add
xor
push
xchg
jecxz
es
add
or
dec
out
mov
cmp
mov
mov
adc
jmp
xchg
sbb
clc
mov
xor
pop
or
push
mov
aaa
or
daa
xchg
sbb
xor
sub
push
dec
dec
pusha
sub
das
dec
movsl
repnz
rcrb
push
lods
push
dec
lret
test
mov
aas
cmpsl
and
dec
jbe
mov
sbb
repz
add
push
or
push
xlat
cmp
rcrl
xchg
pop
sbb
xchg
add
sti
pusha
cmpsl
mov
aam
int
pop
es
adc
sub
dec
pop
rorb
jno
fs
cmp
out
push
ljmp
lds
out
fdivrs
out
pop
xlat
push
pop
pop
jne
dec
repz
pop
insb
das
mov
xchg
fstpt
int3
cmp
xchg
inc
mov
pop
mov
xchg
xchg
fdivs
mov
push
sbb
out
pop
or
mov
mov
add
fsubrl
pop
fwait
mov
mov
mov
ss
in
test
jecxz
push
out
dec
insl
daa
bnd
fwait
jmp
rolb
cmp
cld
les
sbb
sarb
add
xchg
loop
lahf
xor
aad
cmp
loop
cli
test
cmpsb
xor
mov
xchg
sub
repz
push
lds
fcmove
sbb
les
mov
mov
jle
mov
int
inc
movsb
repnz
inc
pop
fimull
in
insl
ljmp
dec
arpl
and
fildll
add
push
dec
push
mov
and
mov
sbb
das
dec
add
sbb
fsubr
or
xchg
and
lods
lods
sub
mov
xchg
in
cmp
jecxz
les
lock
jb
mov
pushf
aaa
mov
movl
dec
test
inc
dec
cmp
sub
add
dec
outsb
and
in
dec
into
mov
push
clc
jbe
xchg
pop
ret
sti
lahf
and
jle
les
fildl
dec
sub
pop
or
mov
imul
jge
cmc
sub
aas
sti
xor
sbb
inc
jns
ljmp
jle
mov
pop
mov
scas
sub
cs
fsubs
xor
enter
ljmp
pop
test
and
std
clc
ljmp
adc
imul
sbb
cld
push
and
and
ret
push
inc
mov
lret
test
push
inc
inc
cld
adc
sub
fwait
std
pusha
xchg
call
push
or
or
les
lahf
jg
or
mov
dec
fwait
cld
mov
pop
dec
div
xor
ja
cmp
sub
dec
ds
inc
push
test
in
xchg
decl
adc
mov
pop
mov
mov
daa
orb
add
repnz
cltd
jns
scas
mov
inc
repnz
cltd
mov
in
fwait
sbb
jo
xchg
add
repz
dec
xor
pop
popa
sbb
cmc
mov
inc
mov
and
sub
insl
push
mov
repnz
cmpsb
aas
call
loope
cmc
popl
ftst
or
lret
pop
out
icebp
cwtl
fmull
cmpsl
gs
sub
ficoml
aaa
dec
inc
pop
sahf
adc
daa
or
mov
xor
inc
int3
xorl
xchg
std
outsl
pop
rcl
mov
sbb
xchg
out
sbb
test
jo
call
push
lret
scas
test
out
nop
dec
pop
inc
lcall
jo
adc
jbe
jb
decb
jae
sbb
into
insl
inc
enter
and
dec
mov
repz
int3
jne
fidivrl
xchg
sub
repnz
jne
add
imul
js
or
f2xm1
dec
out
daa
mov
sbb
cmpb
fstp
or
fstpl
fwait
or
jle
pop
sub
add
adc
scas
dec
jno,pt
aas
xchg
push
rcll
out
mov
cmc
mov
imul
mov
idiv
mov
add
aas
lods
hlt
mov
popf
popa
fidivl
pop
ret
mov
inc
push
push
stos
adc
addr16
dec
pop
add
imul
xor
pusha
pop
sub
ss
divl
int3
or
jnp
loop
mov
push
add
pushf
sbb
add
mov
and
add
sub
push
rorb
stos
hlt
inc
loope
cltd
jb
rol
sbbl
mov
jno
testb
gs
push
and
popf
and
mov
jmp
pop
movsl
inc
in
jbe
repnz
pop
mov
test
int3
mov
sub
mov
xorb
sbb
fidivrs
xorb
gs
push
mov
sarb
outsl
test
adc
inc
or
push
inc
mov
mov
insb
xor
cmpl
dec
lods
adc
xor
sub
xchg
bound
dec
imul
cmp
jmp
and
test
pop
inc
jb
rcrb
xchg
mov
in
mov
jmp
cmovg
addb
aam
cmp
and
sbb
mov
adc
fildll
imul
mov
inc
dec
mov
dec
push
inc
js
popa
in
leave
xchg
jecxz
loop
jne
sti
mov
push
adc
in
call
push
xor
ret
inc
pop
data16
je
push
push
out
loop
dec
xor
jge
inc
pop
aas
mov
pop
sbb
ss
loope
shrb
adc
adc
loop
fiaddl
lea
sarl
inc
and
cmp
jbe
dec
lods
les
cmp
pop
mov
xor
add
cmp
jmp
jbe
gs
lahf
daa
iret
push
divb
sub
push
std
cs
cmp
push
ret
xadd
adc
leave
repz
movsb
call
xor
mov
loop
jecxz
stos
mov
ljmp
dec
fucomi
sbb
mov
ja
out
jmp
lods
jle
data16
je
into
bound
fdivr
popa
js
lock
push
mov
mov
mov
jg
add
pop
mov
and
scas
neg
inc
lcall
cmp
adc
dec
add
xchg
scas
imul
inc
push
xor
stc
enter
inc
idivb
xor
bound
and
roll
or
mov
in
addl
cli
call
xor
into
push
xchg
inc
or
call
sub
mov
cltd
sub
fisttpll
mov
decb
mov
mov
inc
fs
inc
out
cmp
mov
xlat
movl
pop
leave
lock
pop
shrb
mov
jbe
popa
sbbb
lods
or
xor
js
push
cltd
adc
inc
jno
cmp
sbb
negl
scas
dec
lret
jne
iret
push
or
pushf
insb
adc
dec
loope
mov
sti
pop
adc
and
add
mov
bound
mov
rorl
mov
addl
pop
or
lds
dec
push
or
sbb
daa
add
or
xor
ja
out
loop
cmp
sbb
aaa
and
lahf
xchg
mov
repz
sbb
sub
stos
cwtl
imull
xorb
push
lods
or
int
cmp
jmp
and
dec
pop
imul
push
jbe
shrb
xor
test
push
movsl
int
sbb
sbb
mov
sbb
push
push
inc
adc
pop
mov
in
xchg
adc
mov
jne
pop
mov
ja
jp
jmp
cmp
in
inc
fcmovne
popa
sub
pop
mov
jo
lahf
xchg
cmpl
or
add
xchg
bound
loope
fbld
mov
xlat
bound
cld
or
inc
es
xchg
pusha
push
shll
mov
outsl
inc
cmp
and
add
jo
mov
push
mov
popf
mov
out
sarl
or
es
pusha
gs
mov
cmpsl
sarb
scas
clc
mov
and
pop
popf
pop
adc
repz
cltd
mov
pop
aas
int
jns
data16
movsl
add
into
dec
out
inc
mov
pop
dec
adc
orb
in
mov
pop
out
imul
mov
sbb
push
xorb
loope
andl
aam
das
sbb
mov
add
enter
ss
and
shrb
imul
pop
repnz
cmp
mov
sub
sqrtps
insl
andl
in
fs
xlat
leave
pop
test
add
or
lret
jecxz
push
adc
jns
mov
movsb
sub
cmpsl
jl
dec
in
je
sbb
xchg
or
mov
inc
leave
inc
dec
add
cwtl
stc
lds
mov
cmp
xchg
inc
and
popf
mov
jns
hlt
call
pop
xor
jns
imul
cs
push
and
mov
cltd
lds
cwtl
xorb
pop
mov
sbb
xor
lret
push
cmp
push
cmp
rolb
mov
in
jns
pop
and
loop
jecxz
push
pop
cmpsb
xor
xchg
inc
push
subl
fnstsw
movsl
xor
push
insb
or
leave
test
dec
gs
stc
rorb
loopne
dec
mov
add
mov
lret
aam
movsl
imul
xor
add
cmp
mov
cmp
push
push
pop
push
push
movsb
or
jne
pop
fldl
in
fsubr
imul
rolb
pusha
cmpsb
mov
repnz
or
mov
push
ds
ficomps
shrb
mov
cld
xlat
mov
std
or
dec
and
call
or
call
mov
cmp
icebp
out
mov
dec
in
dec
or
mov
in
push
addr16
jae
push
xor
sbb
push
jno
push
test
cmp
fxch
out
xchg
cmp
cs
lahf
add
out
lods
sbb
shl
lcall
xchg
sbb
fsub
sbb
out
dec
sahf
or
cwtl
adc
push
inc
arpl
xor
mov
sbb
test
out
adc
mov
sahf
cmp
pop
ja
ret
cmp
addr16
mov
jae
leave
jmp
dec
mov
xor
cmc
or
dec
jae
ljmp
xor
xchg
inc
mov
std
push
out
xchg
enter
pushf
idivb
push
data16
jp
cmp
pop
fsubrl
test
leave
dec
movsb
mov
lcall
cwtl
loopne
ficompl
and
pop
add
mov
push
jmp
add
popf
xlat
xchg
popa
cli
fdivs
lret
or
mov
into
repnz
aad
leave
sbb
pushf
mov
es
stos
cltd
mov
out
pushf
pop
push
xor
pop
sbb
lret
mov
and
pop
sbb
xchg
repnz
repnz
daa
fsincos
mov
sbb
ds
xchg
out
outsb
jge
iret
lret
fwait
cwtl
mov
pop
into
cmp
adc
ljmp
bound
jns
shlb
in
sbb
jl
mov
dec
pop
ja
test
ljmp
add
xor
push
insl
mov
ret
mov
rcl
aaa
aad
imul
loopne
ss
pop
popf
dec
mov
test
lea
pop
fimuls
movsl
test
lock
fadds
mov
loop
xor
repnz
scas
popf
cmp
cmpsl
jno
sbb
jo
ffreep
in
sub
cmp
cmp
cmp
jge
hlt
insb
xor
jno
pop
ss
or
icebp
jle
jg
pushf
mov
adc
inc
mov
sub
sub
in
enter
cmc
jp
data16
inc
js
add
xor
push
aad
sarl
imul
aam
inc
addl
sub
dec
sub
fistpl
push
dec
dec
les
adc
inc
insb
dec
xchg
or
mov
cmp
jno
jp
add
pop
out
insb
pop
outsb
mov
popa
cmp
xchg
jnp
xor
pop
mov
ret
pop
shll
mov
jle
adc
pop
addb
adc
out
add
inc
pop
je
xor
jbe
push
and
testl
and
pop
mov
lds
test
cmp
leave
pop
fsubrl
daa
pop
mov
cmp
cmp
pop
fisubl
cmp
sbb
and
in
gs
pop
enter
mull
sbbb
scas
add
in
xor
lds
push
fwait
shrb
pop
lret
hlt
in
push
dec
aam
cmp
inc
sbb
dec
div
or
enter
and
mov
lcall
and
dec
mov
mov
cmpsb
inc
inc
incb
sbb
bound
ljmp
mov
sbb
sbb
lret
dec
dec
add
or
into
xchg
dec
dec
jle
add
repz
xor
jae
sbb
popa
xchg
fisubl
mov
test
or
stos
jbe
mov
shl
xor
push
je
cltd
lret
test
mov
insl
fisttps
daa
pop
sahf
fistl
lret
adc
in
lock
or
aam
out
or
pop
dec
push
jl
data16
and
xlat
or
stc
out
mov
cwtl
jge
movsl
mov
lcall
aaa
mov
lods
call
or
adc
dec
or
int
add
mov
push
lahf
xor
ja
aad
clc
fwait
pushf
adc
jb
inc
mov
xlat
lahf
loope
add
mov
js
popf
ds
jmp
scas
lea
and
shlb
dec
call
fisubs
dec
or
jo
test
outsl
out
jp
mov
lods
jmp
jne
and
dec
mov
pop
push
xlat
hlt
into
xchg
jns
jo
jg
pop
push
or
mov
bound
lds
jmp
scas
sub
xchg
and
sub
adc
mov
push
and
clc
xor
ljmp
jecxz
pushf
xchg
inc
lods
imul
mov
jne
or
cmc
outsl
cmp
xor
addr16
loopne
aam
adc
fdiv
mov
sub
iret
fbld
pushl
xchg
cs
aaa
dec
xchg
cmp
and
lcall
add
fiadds
fsub
jnp
out
fisubrl
jns
cmpsb
jle
sahf
jb
sbb
pop
subl
pop
fwait
mov
or
inc
xor
and
dec
hlt
ja
ror
xor
fimull
push
xor
in
dec
or
mov
jg
lds
fildll
mov
pop
push
stos
push
jno
sbb
mov
imul
push
pop
push
adc
xchg
cld
xchg
add
mov
pop
mov
mov
jg
jge
inc
fwait
mov
xchg
mov
mov
int3
std
fbld
mov
sbb
mov
pop
mov
addr16
xor
out
adc
push
je
iret
mov
sub
ss
push
int3
xor
out
jp
arpl
pop
inc
xor
pop
clc
cmpsb
sti
jmp
cld
data16
insl
and
push
push
shlb
test
inc
out
ja
aas
inc
fstps
mov
sub
js
pop
loop
aas
in
lock
addr16
clc
fwait
insb
and
pusha
mov
mov
push
shrl
cmc
lock
add
xor
sbb
movsb
pushf
and
scas
pop
xor
mov
and
xchg
jmp
aad
pop
or
das
into
fadds
inc
enter
loop
shll
imul
xchg
icebp
cmp
cld
mov
xchg
int3
push
pop
loop
xor
stos
push
lods
std
lods
xchg
testl
xor
jnp
jno
adc
lods
and
lea
inc
xchg
adc
or
repz
stos
xor
daa
cmp
mov
ret
cmpsl
mov
test
mov
fdivrl
push
data16
jae
loopne
or
and
data16
sub
ret
dec
clc
shrl
jno
movsl
jns
aad
test
xchg
lods
insl
rorb
xchg
xchg
xlat
stos
mov
dec
stos
in
popf
js
rcll
sub
roll
aam
inc
arpl
mov
or
cmc
cltd
test
xchg
stos
and
sub
leave
push
xor
adcl
cmp
std
out
sar
lock
push
aam
adc
mov
mov
rorl
mov
in
adc
pop
into
pop
sbb
and
pop
scas
cmp
dec
cmp
mov
sbb
mov
add
xchg
cmp
mov
mov
jno
out
arpl
repz
in
je
gs
lcall
outsl
lcall
or
loopne
mov
stos
in
clc
jae
jnp
inc
mov
stos
jo
hlt
sbb
faddl
push
mov
jmp
test
ds
orl
push
loop
jb
data16
push
push
push
add
mov
cmp
lahf
aad
stos
sub
jo
add
mov
enter
pop
addr16
inc
iret
repnz
jne
fs
test
inc
adc
xor
repnz
jnp
sarl
push
adc
inc
jmp
mov
inc
sbb
or
mov
popl
iret
jl
les
jns
les
jl
push
cli
cmp
out
add
cmp
inc
clc
cmpsl
xchg
or
inc
addr16
cmp
lahf
mov
scas
leave
sbb
mov
pop
mov
movsl
mov
aam
shlb
jp
testl
movd
push
xor
aaa
cmp
cmp
push
pop
sti
sub
adc
test
push
loop
imul
sub
lds
xchg
test
or
inc
pop
mov
push
mov
jbe
test
loop
rcll
gs
outsb
clc
mov
lock
rcl
adc
dec
mov
pop
mov
mov
aad
inc
jle
sub
push
daa
movsb
jne
and
mov
push
gs
and
nop
adc
lret
dec
and
push
nop
mov
sub
sbb
daa
aam
mov
mov
mov
inc
lds
incl
xor
enter
and
out
mov
push
cs
and
mov
pop
push
mov
fs
outsl
flds
ffree
pop
mov
or
push
jg
adc
sub
mov
das
adc
inc
jbe
idiv
hlt
xchg
rcr
test
xchg
scas
mov
push
mov
pop
out
inc
adc
imulb
pushf
movsb
imul
mov
lret
out
adc
into
sbb
adc
mov
cld
or
das
dec
xchg
mov
inc
xchg
adc
xor
das
subb
push
pop
push
fisttpl
aaa
cmp
sub
mov
lcall
xchg
nop
mov
test
push
cmc
nop
ljmp
mov
jnp
in
test
addr16
aaa
inc
and
mov
popf
shlb
xor
adc
push
pop
or
rcrl
jl
fmulp
adc
push
arpl
gs
push
sub
or
xor
pop
adc
dec
mov
fdivl
fldenv
jge
add
or
inc
lock
pop
movsl
out
fcmovb
or
jne
je
mov
xchg
sbb
sarl
push
aas
repz
addr16
sub
ljmp
adc
xchg
out
push
or
cmpsl
cmpsb
jb
lcall
iret
ficompl
repz
fbstp
aaa
jb
push
and
fstpl
roll
push
jmp
cmp
jbe
notb
fpatan
xor
mov
iret
sub
add
loopne
pop
iret
inc
in
xchg
lock
sbb
xor
xchg
ret
sbb
testl
fcom
fs
lock
mov
filds
inc
mov
or
fwait
cmp
pop
inc
inc
cmp
sub
xchg
repnz
or
jg
jp
and
loope
fsubrp
or
cmp
imul
xor
or
adc
dec
jmp
and
or
fisubrl
pop
daa
jg
movsl
xor
aaa
sbbl
xchg
or
shrb
push
mov
loope
mov
aad
jne
lcall
mov
sub
pop
mov
mov
repz
das
test
jmp
jle
dec
cmp
out
mov
jge
ret
xor
call
stos
xchg
push
cs
rclb
inc
jp
nop
or
dec
push
aaa
sub
fwait
sub
ror
xor
pop
jae
fnstcw
add
loop
jmp
lods
arpl
push
ss
add
jge
movl
gs
dec
xor
cmp
les
daa
lods
inc
push
pop
sarl
stos
stos
jg
jp
mov
lods
lret
add
orb
gs
lock
mov
push
das
add
dec
rorb
lret
nop
jge
push
push
or
out
mov
sub
je
xchg
jmp
je
xor
dec
and
out
fisubs
lahf
int3
lods
pop
js
cmp
outsl
arpl
test
mov
fcoml
outsl
scas
lock
jge
sbb
ss
iret
xchg
mov
rcll
xchg
and
xchg
loope
or
cs
daa
lret
jns
xor
add
jnp
mov
add
mov
xchg
sbb
shlb
lcall
sbb
dec
nop
mul
andl
cmp
fldl
out
adc
std
sbb
add
aas
jnp
aam
call
jl
movsl
mov
les
xchg
mov
mov
mov
sbb
repnz
mov
adc
fldenv
cmc
pusha
jl
push
mov
int3
sbb
das
das
or
ss
loop
add
push
pop
jno
iret
das
or
test
sbb
aas
mov
inc
sarb
cli
dec
dec
int
addb
test
pop
adc
mov
dec
or
lahf
push
subb
int
inc
xor
xchg
gs
pushf
or
fimull
pop
xor
rcrl
and
testl
xchg
lret
push
out
jp
jne
shlb
xor
mov
into
call
lock
leave
mov
mov
insl
xor
arpl
addr16
or
xchg
je
cmp
inc
loopne
mov
dec
or
enter
test
movsb
sti
in
xlat
fwait
pop
dec
stc
mov
mov
jecxz
repnz
hlt
in
ja
mov
into
into
push
mov
or
add
dec
insl
push
imul
and
movsb
fcoml
div
in
cmp
ret
xchg
mov
adc
lds
andb
fldt
cmpsb
or
iret
cld
add
movl
inc
lea
pop
std
push
sub
sub
adc
rcll
push
and
push
outsb
outsb
adc
faddp
stos
inc
in
in
rcrb
test
push
fisubrl
ret
add
push
jae
addb
mov
or
and
movsb
or
jge
ja
into
dec
inc
outsl
mov
mov
sbbb
je
dec
sbb
sub
ja
ret
jbe
std
mov
add
mov
adc
loop
cmp
inc
sub
fstps
and
ss
add
add
fdivrl
xchg
and
inc
cli
repnz
xchg
repz
jg
sbb
jg
jle
movsl
js
lahf
jo
inc
outsb
and
mov
mov
xchg
cmp
mov
jp
inc
leave
ljmp
push
sbbb
ds
mov
repz
out
xor
adc
pusha
sbb
icebp
mov
in
scas
xlat
adc
jns
jg
sti
out
sarl
popa
xor
jb
and
and
test
mov
bound
sarl
cmp
add
pop
stos
and
push
and
fs
aaa
cmp
push
adc
int
cmc
and
sub
pop
mov
mov
pop
addr16
addr16
jne
repnz
cmpsb
mov
fucomip
out
jg
add
cltd
lods
mov
or
insl
and
push
arpl
in
jmp
lahf
mov
enter
inc
lahf
ljmp
and
jp
push
ja
cs
pop
adc
mov
inc
pushf
movsw
insl
aaa
cmp
sbb
js
jns
out
fidivrs
scas
scas
push
pushf
xchg
js
mov
mov
sub
rcll
sahf
imul
and
xor
adc
and
repz
mov
cmp
and
push
scas
or
inc
pop
aaa
test
dec
adc
sti
mov
pusha
divb
int3
in
in
xor
andl
sbb
xor
shr
in
dec
fmuls
pushf
fisubrl
adc
sub
lods
sahf
incb
jg
rolb
loop
fnstcw
rol
stos
pop
in
pop
cs
adc
mov
sub
negb
insb
and
cmp
clc
repz
xor
xchg
dec
sbb
adcb
out
fnstcw
xor
sbb
push
mov
or
in
mov
push
aam
lret
enter
mov
in
mov
aam
or
mov
dec
int
sub
es
addr16
push
movsl
out
mov
popa
lods
pop
mov
in
mov
int
loope
testl
ds
or
adc
push
push
out
pop
out
jge
jo
loopne
ss
ret
xchg
mov
push
adc
adc
dec
xlat
push
lods
xor
shlb
cmpsb
imul
sbb
out
mov
dec
pop
rcrb
and
mov
nop
xor
push
adcl
gs
testl
cmp
push
xor
test
push
cmpl
cltd
and
ja
out
shlb
xchg
cwtl
loop
cli
jl
cltd
enter
ds
dec
movsb
pop
test
in
inc
or
popf
in
or
inc
mov
js
loop
xchg
xchg
adc
cmp
into
jbe
mov
clc
jecxz
hlt
imul
xchg
int
or
in
adc
dec
push
pop
ret
imul
sub
lds
jcxz
pop
cltd
and
out
pop
mov
adc
add
jb
scas
in
jmp
or
int
fs
mov
xchg
mov
sbb
sub
jno
and
cmpsb
roll
pusha
xor
pop
xor
fcompl
dec
test
shlb
shll
repz
mov
xchg
pop
sub
imul
call
leave
cmp
xchg
repnz
or
insb
stos
pop
outsb
movsl
push
dec
xchg
push
add
sbb
or
sbb
add
in
ret
jp
aaa
cmp
adc
cmp
mov
dec
add
push
jo
rcrl
pop
sbb
sbb
ficomps
mov
outsb
mov
xchg
xor
xchg
cmp
sbb
lcall
mov
not
insb
mov
push
xor
psadbw
add
xchg
pop
decl
aad
rcrb
fisttpll
test
int
fidivrl
xor
adcb
cs
mov
insl
lcall
xlat
push
fdivr
jl
leave
sbb
imul
aad
dec
fdivrs
lods
movsl
mov
or
std
ljmp
test
inc
mov
or
pop
dec
pop
jge
lds
push
xchg
xor
jb
mov
mov
jnp,pt
fs
lcall
mov
imul
div
in
jle
xchg
aad
cmc
jb
int3
mov
cs
and
xchg
fistpll
fs
cmp
lock
orl
and
cmp
in
inc
orl
dec
xor
mov
mov
ret
imul
idiv
cmp
push
mov
add
sti
stos
aaa
jmp
push
ljmp
jns
adc
mov
or
and
icebp
xchg
subb
pop
mov
stos
jle
mov
xchg
adc
in
dec
cmp
jae
pushf
inc
out
aad
inc
push
jns
xor
and
lds
outsb
jo
fmuls
leave
mov
lea
cmpl
scas
mov
mov
fildll
in
cmp
xchg
mov
mov
cmpsl
test
pushf
movsb
adc
inc
push
add
divb
xorb
xchg
adc
xchg
jb
repnz
outsl
fld
mov
rolb
push
cltd
ja
push
comiss
cmpsb
mov
cwtl
mov
mov
sahf
sbb
or
fbld
xchg
arpl
out
gs
stc
mov
mov
ficompl
add
push
cs
adc
insl
jmp
scas
jb
ljmp
sbb
ss
icebp
aas
mov
xor
mov
or
push
pop
dec
or
pop
mov
inc
imul
scas
mov
inc
mov
shl
jnp
jmp
inc
pop
inc
or
dec
into
cli
loopnew
add
and
imul
xchg
xchg
mov
les
cmp
cmp
mov
rcrb
in
dec
sub
mov
mov
xchg
and
sahf
cmc
push
jle
or
xchg
inc
inc
outsb
add
repz
lret
gs
fcompl
dec
add
mov
dec
sub
push
in
inc
mov
leave
cwtl
andb
sbb
loopne
xor
test
add
sbb
sub
cmp
sbb
pop
pop
inc
xchg
cld
rcrl
xchg
xchg
cmpsl
outsl
ljmp
loope
push
inc
mov
sarb
jae
pop
jbe
and
fisubrl
mov
inc
adc
cld
dec
popf
testb
xor
jmp
xchg
inc
cwtl
rclb
jmp
scas
lahf
fxch
adc
es
mov
movsb
out
cld
stc
mov
and
mov
dec
cmpsb
jo
xor
es
lock
mov
lcall
test
xor
sub
mov
ret
jo
and
lret
cltd
add
sub
aam
adc
and
mov
mov
sti
xchg
mov
xchg
in
nop
cmp
sbb
push
ja
movsl
in
js
xor
repz
shlb
lret
dec
mov
lods
lret
pop
movsl
iret
shrb
inc
jge
or
lock
jecxz
xchg
dec
or
and
cwtl
inc
outsl
add
cltd
push
jne
push
stos
insb
jbe
mov
int
inc
jecxz
mov
or
sti
sbb
cli
aas
arpl
cmpsb
mov
mov
sbb
inc
cld
mov
outsl
cmp
out
cltd
cltd
push
inc
fbld
mov
and
in
std
inc
in
sub
mov
xor
andl
adc
mov
orl
push
sub
or
fcomps
sub
sub
mov
pop
xlat
push
lds
sub
pop
int3
add
std
enter
xchg
and
fwait
imul
jmp
xchg
push
imul
sbb
in
push
ljmp
ljmp
mov
xor
lea
pushf
mov
and
test
add
adc
clc
sahf
sbb
out
xor
sub
jne
sbb
fnstenv
mull
pop
push
dec
scas
insl
or
mov
clc
sub
adc
in
mov
gs
lea
xor
out
jle
mov
xor
int
rolb
scas
push
push
push
pop
or
sbb
arpl
push
out
movsb
loopne
push
jb,pn
mov
lea
aad
jl
jmp
sahf
push
std
or
scas
push
scas
in
scas
pop
push
xchg
rorb
bound
cmp
in
and
lods
push
push
icebp
out
jno
mov
mov
mov
mov
ds
daa
repz
pop
shrl
out
leave
push
fs
dec
fmull
lods
mov
add
dec
add
or
mov
sbb
mov
push
dec
add
push
in
sarl
push
inc
inc
ds
or
jns
and
arpl
push
inc
cmp
jne
aad
ja
sub
iret
jl
xchg
adc
in
jo
jnp
push
data16
sbb
sarb
sahf
pop
sub
mov
add
stos
jb
imul
fisubrs
in
push
rorb
jmp
test
daa
es
push
add
je
arpl
xchg
lds
inc
xchg
adc
fdivs
lret
xorb
xchg
out
mov
jl
mov
sbb
lock
mov
ror
jno
clc
jne
push
mov
scas
inc
es
xchg
scas
add
jns
push
add
mov
xchg
pop
push
fs
outsb
xchg
add
or
popa
in
mov
pop
and
inc
lock
das
mov
sti
mov
and
push
test
and
orb
push
pop
mov
ret
aas
jecxz
sub
fadds
sub
call
add
sub
nop
es
fidivrl
ljmp
cmp
mov
mov
adc
scas
mov
push
add
add
outsl
das
jns
dec
ds
and
push
lods
stos
sub
iret
cmc
jg
pusha
sbb
and
rcll
jmp
in
dec
mov
call
pop
jp
in
lock
sub
cmp
push
push
sub
push
mov
insl
icebp
pusha
sbb
ficomps
nop
xchg
les
cwtl
sub
jne
mov
popw
add
aaa
mov
fcomps
sbb
push
popf
lods
fwait
test
mov
sbb
and
add
adc
mov
imul
scas
insl
dec
out
daa
popf
lock
je
pop
or
pop
leave
fcomps
cmp
iret
movb
push
dec
add
nop
cmp
sbbl
addb
add
push
lock
mov
dec
inc
imul
sahf
js
mov
sarl
loopne
add
jo
iret
xchg
ds
inc
outsb
mov
enter
mov
jb
jo
jae
pop
and
and
jb
fistpll
das
mov
fcmovu
add
ret
xchg
or
add
or
or
lea
xchg
jbe
jbe
push
xor
cli
adc
add
mov
inc
nop
rcll
jno
aas
sahf
adc
out
out
push
cmp
inc
and
push
in
fdivl
pop
aas
aas
dec
cmp
and
jp
or
add
ret
lods
test
push
dec
push
sbb
jb
pop
call
aad
cmp
pop
sbb
and
enter
push
test
popf
jb
subb
xchg
arpl
mov
test
mov
xor
outsl
outsl
jnp,pt
or
pop
mov
insb
fnsave
nop
jp
data16
out
jge
xchg
jae
jmp
inc
test
ffreep
pushl
repnz
sbb
sar
pop
add
lahf
pop
mov
mov
xchg
imul
aam
jae
cltd
push
les
pop
sbb
rorl
dec
cltd
xchg
cmp
xchg
test
pop
aam
mov
sub
es
xchg
pop
cmc
data16
dec
scas
mov
lds
fiaddl
jo
shrl
sub
jg
mov
dec
repz
inc
scas
insl
nop
pop
icebp
fnsetpm(287
movsl
cmp
jne
data16
xchg
push
cmp
ljmp
xchg
inc
add
outsl
movsl
sub
or
aad
rcll
daa
pushf
aaa
je
mov
cmpsl
mov
adc
push
xchg
sub
jl
outsl
xchg
outsb
cmpsb
aaa
jg
pusha
lahf
jbe
push
pop
daa
or
push
aad
and
imul
enter
mov
popa
insl
icebp
leave
mov
stos
xchg
mov
into
xchg
mov
jg
mov
xor
subb
test
stc
xchg
gs
into
inc
or
out
xchg
stos
push
cmpsb
mov
aaa
int3
dec
mov
adc
hlt
mov
dec
mov
in
mov
sti
pop
ret
fbld
or
lahf
nop
xlat
fcompl
flds
sub
aaa
cmp
push
stc
inc
push
pop
or
and
jmp
test
cmp
idiv
jl
outsl
test
filds
sahf
mov
movsb
out
pop
jge
das
sub
sti
dec
test
jl
lret
xor
sub
in
mov
mov
pop
mov
push
test
push
scas
xor
sbb
cmpsb
xchg
mov
cld
std
push
sti
in
stos
cmc
mov
lahf
stc
aas
incl
sahf
imul
hlt
and
xor
int
insb
or
js
inc
test
sahf
push
dec
aas
cmp
fidivs
imul
push
inc
sbb
jmp
add
mov
test
lret
inc
cli
jns
xor
into
sbb
and
pop
mov
jae
es
mov
cmpsb
or
enter
test
sahf
xchg
cs
lea
and
sbb
hlt
mov
mov
mov
sub
mov
addb
rcrb
push
jecxz
inc
mov
mov
xchg
add
lods
jb
add
xchg
stos
mov
push
lods
popf
sub
repz
xor
sub
test
leave
xchg
or
hlt
jne
inc
or
test
jns
sbb
lds
movsb
cmc
nop
jo
arpl
mov
and
mov
jmp
mov
fmull
ljmp
xchg
insl
pop
adc
or
iret
scas
dec
pop
mov
push
push
mov
data16
fidivs
flds
ljmp
xchg
test
popa
pop
int3
clc
mov
add
pop
xchg
add
xor
xorl
mov
dec
inc
jns
cmp
ljmp
adc
lods
mov
fnstcw
inc
std
lcall
rorb
or
adc
lds
add
std
sub
idivb
mov
pop
fcompl
push
xor
not
push
jmp
mov
mov
pop
xchg
jb
mov
mov
push
movsb
dec
mov
dec
mov
xor
jne
rcll
xchg
fidivl
adc
xchg
sub
pusha
jl
sub
jne
mov
xor
jp
sbb
xor
sbb
mulb
dec
sbb
fistpl
inc
lea
jns
jbe
sarb
xchg
lods
add
das
pusha
ds
inc
xchg
jae
and
xchg
dec
nop
fistps
popa
clc
loope
dec
jmp
pop
fimull
fadds
inc
mov
pop
lcall
aad
int
hlt
leave
push
loop
adc
inc
shlb
or
shll
push
leave
rorl
jo
mov
insl
out
ret
popa
movsb
cmp
mov
xor
pushf
adc
jns
daa
sti
adc
or
and
pusha
jb
sbb
repnz
xchg
jne
inc
rcr
or
push
pop
mov
inc
sti
push
pushf
inc
pop
int3
dec
jb
mov
inc
sub
loop
mov
jle
pop
inc
aad
ret
mov
xchg
add
dec
cmp
xlat
arpl
ror
cmpl
mov
sub
sbb
add
cmpsl
pushf
popa
cmc
inc
mov
sbb
dec
pushf
icebp
fs
add
xchg
pop
xchg
or
adcl
fistpl
in
shrb
orb
add
or
cwtl
les
fstpl
jge
add
hlt
xchg
pusha
adc
push
mov
jbe
xor
adcb
lds
push
mov
emms
add
inc
sbb
mov
jb
mov
sub
sbb
and
ret
xchg
jb
sub
inc
xor
or
inc
cld
sbb
sarl
arpl
xor
or
icebp
rclb
mov
xor
dec
pop
pushf
xlat
sahf
out
mov
jnp
nop
mov
mov
pushf
and
add
mov
in
js
xchg
cmp
mov
cmp
mov
ret
lret
bound
xor
in
subl
int3
sub
test
mov
mov
aaa
xchg
xor
inc
scas
out
push
mov
ljmp
xor
mov
xchg
mov
xlat
mov
mov
mov
adc
mov
mov
dec
test
sbb
lods
add
mov
add
xor
out
sbb
inc
ss
and
jno
push
xor
cld
mov
mov
clc
je
lahf
sub
mov
pop
xor
cs
push
xlat
ss
jg
stos
cld
sti
movsb
xchg
or
adc
or
adc
popf
stc
mov
push
push
jae
jno
sub
ljmp
loop
push
bound
mov
pop
outsl
mov
sub
test
xchg
imul
aaa
subl
popf
fstpt
repnz
out
jo
xchg
mov
or
aam
cs
xchg
fildll
jecxz
pop
jge
fwait
shr
xchg
movsl
jnp
test
scas
ss
mov
adc
inc
arpl
inc
lds
and
lds
sahf
cltd
shrl
mov
shl
mov
int
lods
sbb
stc
xchg
stc
aad
xlat
sbb
sub
pop
fs
fimuls
stc
les
mov
push
test
and
fdivrl
ljmp
stc
shrb
push
flds
jae
insb
mov
mov
xchg
sti
xor
mov
ficompl
push
into
in
or
loopne
test
insl
iret
xor
xor
in
ror
lcall
xchg
or
push
xchg
stos
mov
cmp
adc
add
sahf
jns
clc
cld
or
inc
pop
mov
xor
adc
jl
imul
cwtl
and
out
jecxz
ss
sbb
jg
adcb
das
inc
das
or
incl
push
mov
lods
iret
mov
test
pusha
fsubp
movlps
out
iret
jns
ret
std
dec
mov
ret
andb
jae
mov
cs
js
testb
clc
imul
lea
insl
std
push
mov
mov
jne
fwait
pop
fldl2e
cmp
or
jle
mov
fdivrp
in
and
or
cmp
or
add
mov
mov
int3
cmp
iret
and
mov
adc
jmp
jo
jle
iret
mov
xchg
cltd
or
fsubrp
fstps
lret
dec
cmp
push
sti
add
popa
and
mov
pop
sbb
push
movsl
sub
mov
repz
mov
sbb
repz
lcall
add
jae
adc
arpl
mov
shrl
mov
push
gs
or
xor
insb
mov
inc
frstor
mov
les
mov
in
pusha
cmpl
int
push
test
int
mov
and
jmp
add
in
mov
mov
sbb
lcall
gs
inc
add
xor
adc
insb
or
jbe
mov
lods
xchg
add
inc
insb
and
jae
in
and
pop
mov
xchg
rcrb
outsl
movsl
xor
jae
jne
xchg
arpl
scas
std
inc
sub
jl
or
cltd
insb
roll
mov
leave
in
dec
mov
pop
mov
test
cwtl
test
aas
movsb
iret
fldl
mov
pop
lods
inc
fidivrl
jb
push
pop
mov
pusha
inc
mov
sti
mov
les
enter
xor
mov
enter
out
cmp
or
lods
jb
or
push
aaa
cmc
dec
mov
sub
inc
mov
ja
sbb
mov
jns
mov
xor
pop
cmpl
ret
jle
imul
ficomps
mov
and
cli
pop
add
inc
dec
mov
dec
xchg
rorb
add
lea
sbb
push
icebp
fcoms
jae
pop
bound
mov
fwait
adc
sub
xchg
repnz
jnp
aad
mov
mov
ljmp
fnsetpm(287
push
cmpsl
enter
dec
stos
es
pop
xchg
mov
fisttps
leave
js
xor
rcll
push
ss
ficomps
inc
jg
in
mov
frstor
mov
inc
rolb
push
orl
popf
pop
stos
adc
inc
test
pop
mov
xchg
and
fidivrs
jns
jns
enter
push
lea
icebp
mov
cld
fwait
psadbw
dec
sub
add
sbb
mov
cwtl
cmp
mov
push
jge
adc
mov
mov
push
mov
idivl
cmp
xchg
mov
dec
and
popl
mov
pusha
scas
pop
sub
imul
icebp
hlt
ljmp
and
mov
fidivl
xchg
and
das
jo
mov
cmp
arpl
dec
iret
scas
ficoml
mov
push
mov
out
fcomps
js
ror
loop
pop
mov
mov
push
clc
push
outsb
adc
jg
rcrb
movsl
jmp
lods
or
mov
jno
adc
adc
scas
mov
jae
leave
loopne
sarb
cmp
out
dec
sbb
clc
loopne
inc
rcl
inc
stos
add
xor
or
ss
mov
shl
sbb
push
out
ror
out
or
pop
inc
cmp
popa
sub
lock
sbb
test
fdivp
out
dec
adc
sbb
mov
push
xchg
push
gs
push
and
dec
mov
mov
mov
test
pop
test
nop
mov
movsb
mov
and
xchg
and
out
iret
mov
shl
xor
in
das
loope
test
lcall
orb
jge
int
mov
data16
xchg
jecxz
push
roll
icebp
jmp
call
pusha
jae
bound
test
push
lea
adc
gs
lods
pop
dec
sbb
scas
std
loopne
inc
mov
mov
lahf
stc
nop
pop
pop
cmp
popf
mov
sti
add
hlt
inc
cmp
mov
gs
add
xor
icebp
push
cwtl
xchg
jecxz
ret
jmp
push
fsubr
aam
inc
inc
sub
lretw
and
stos
and
aaa
add
push
lret
sub
inc
in
lea
lcall
and
sbb
inc
fwait
mov
jns
bound
jge
sti
sbb
loopne
ret
pop
mov
into
xor
aaa
mov
orl
jp
rolb
jb
mov
imul
les
dec
mov
in
or
test
leave
inc
int3
cli
dec
mov
mov
imul
lret
mov
dec
ret
dec
mov
xchg
cmp
stos
sbb
mov
cmp
imul
outsb
cmp
push
aaa
mov
cmpps
xor
roll
mov
lea
cli
ds
jnp
mov
mov
jo
movsl
push
in
arpl
ret
sub
sbb
mov
add
ljmp
lar
add
lods
subb
cmc
bound
xor
dec
fs
lds
adc
jb
and
mov
lret
and
pop
pop
jecxz
js
pop
fnstsw
cltd
cmp
cld
pop
fdivl
xchg
jge
and
es
fcoml
jge
subb
cmp
xchg
sub
push
jne
call
or
cwtl
movsb
inc
clc
cmp
scas
icebp
lods
movsl
das
inc
cmp
into
notl
psubusb
xor
ffreep
dec
xor
jmp
xor
movsl
in
pop
jmp
lock
loope
jecxz
sahf
je
push
cmp
aas
lock
rorb
dec
sbb
loope
loop
and
std
mov
xchg
mov
add
push
scas
mov
pop
mov
xchg
cs
cmp
out
call
sbb
leave
gs
inc
hlt
decb
pop
loopne
orl
add
xor
sbb
push
jb
in
adc
jp
cwtl
shll
mov
jge
imul
xor
in
sbb
mov
and
in
xor
and
or
shrl
stc
test
clc
in
xor
cmp
arpl
dec
mov
arpl
call
sub
inc
syscall
sub
push
mov
jmp
pusha
scas
cmp
lret
dec
push
mov
sub
enter
pop
aam
or
xor
out
aad
xchg
dec
fwait
arpl
and
ss
cmp
lret
es
inc
push
fwait
sub
adc
mov
mov
lea
mov
dec
mov
out
sub
xor
push
mov
in
test
sbb
insl
mov
insl
popa
jg
jne
cmp
cmc
inc
lcall
push
test
ja
ficompl
add
push
data16
data16
call
pop
inc
pop
hlt
loopne
ficoml
xor
stc
fmulp
dec
stc
fsts
push
sub
mov
lods
sub
fwait
sub
mov
mov
pop
pop
jae
daa
and
test
cld
out
push
or
or
addr16
ror
sub
jge
repz
mov
jnp
cmp
les
shlb
jg
dec
shlb
popa
adc
sub
jbe
shrb
cmp
xlat
fst
leave
sbb
gs
rorb
subb
fs
cmp
inc
adc
mov
movsb
add
lahf
jp
push
push
cltd
push
and
std
iret
lcall
xchg
dec
cld
sub
aad
mov
lds
pop
lahf
stos
push
jae
lret
insb
jo
pop
sarl
mov
mov
cmp
movsl
pusha
arpl
push
xlat
mov
scas
loop
ljmp
and
and
mov
or
cwtl
jg
inc
mov
negb
push
iret
in
add
test
in
mov
mov
jb
ret
and
fimull
lock
data16
xchg
mov
sbb
mov
in
mov
decl
je
dec
lds
lcall
adc
push
scas
or
jl
into
xchg
dec
or
xorl
in
jo
loop
mov
push
hlt
push
out
pushf
mov
pop
push
cmc
xor
cli
lods
imul
nop
mov
mov
xor
mov
lea
and
mov
inc
pop
repz
fucomip
imul
stos
sub
inc
test
sbbl
enter
loope
and
sbb
das
or
xor
or
fsubp
clc
xchg
pop
in
dec
xchg
pushf
push
dec
inc
adcb
lret
rorl
incl
pop
or
test
jle
sbb
mov
outsb
call
inc
add
bound
or
inc
cmp
push
push
icebp
mov
jmp
push
push
cmp
xlat
mov
jno
pop
je
sbb
iret
xchg
pop
mov
rcrl
aaa
lds
call
arpl
add
lcall
pop
dec
push
push
inc
or
mov
inc
add
xchg
sub
incl
mov
jle
jge
cmp
je
imulb
iret
ljmp
and
sbb
pop
mov
dec
arpl
mov
xchg
adc
repnz
sub
arpl
xor
jnp
jecxz
scas
xor
cmpsl
das
jg
dec
outsl
and
adc
pop
enter
xor
mov
cmp
mov
pusha
rorb
lods
cmp
shll
dec
repz
cmp
jg
test
lods
xor
mov
dec
insb
dec
and
pop
pushf
mov
xchg
repz
cmp
xchg
mov
add
xchg
push
aas
stos
lods
xchg
vrcpps
fdivrs
push
imul
cmp
jle
lods
pop
sarb
xlat
sbb
jno
mov
dec
pusha
aam
mov
lret
push
mov
mov
mov
stc
and
dec
mov
repz
mov
sbb
roll
lods
xchg
fwait
cli
mov
inc
mov
shll
fiaddl
jp
or
cltd
clc
stos
shrl
wrmsr
or
jb
jns
adc
test
push
inc
in
jo
xor
mov
xor
mul
sub
dec
lahf
push
xor
sbb
aaa
pop
outsl
fsub
sarb
or
push
lcall
imul
sub
and
rolb
into
sbb
imul
loope
adc
cs
imul
je
les
push
lret
bound
test
mov
cmp
js
xchg
xor
sbb
add
pop
movsl
cmp
ljmp
pusha
xchg
pusha
mov
mov
test
jmp
adc
jns
mov
xchg
push
push
dec
pushf
sbb
dec
int
cmp
pop
xor
pop
pop
gs
hlt
dec
push
xor
push
fprem
clc
xchg
xchg
outsl
lret
ja
sub
lock
iret
cmc
push
and
pop
pop
cwtl
fisttpl
aad
and
cmpsl
fnstsw
shll
pop
andb
lret
adcl
inc
pop
and
inc
cltd
inc
out
mov
push
adc
adc
mov
mov
xor
aaa
bound
mov
sti
bnd
add
fnstsw
je
cs
in
in
push
push
adc
inc
add
dec
je
pop
clc
in
js
and
pop
cltd
shll
int3
aas
sbb
sbb
rcr
dec
jno
mov
or
pop
add
stc
addr16
aad
mov
sub
mov
lcall
adcl
stc
mov
mov
je
push
icebp
and
pop
sbb
pop
sar
and
fwait
stc
pop
xchg
sbb
add
out
stos
and
inc
rcl
and
arpl
jb
dec
orl
das
lods
add
sbbl
xchg
movsb
xchg
add
fisttpll
xor
ljmp
or
arpl
sahf
test
mov
dec
cs
test
dec
push
rol
loope
xchg
fidivrs
jbe
outsl
inc
cmp
andl
sub
sarb
js
movsl
sbb
mov
fadds
add
sub
imul
mov
and
sbb
dec
pop
ljmp
pop
mov
iret
int3
mov
adc
cmp
cmpsl
mov
das
mov
mov
push
call
add
hlt
mov
pop
fisttps
push
mov
or
add
cltd
push
cmp
scas
lods
lahf
notl
lret
sub
xchg
ja
pop
cld
mov
xchg
dec
xchg
mov
xor
arpl
lret
das
dec
jg
or
mov
jge
jg
movsb
rcrb
hlt
push
cwtl
insl
adcl
and
lret
bound
xchg
or
rolb
inc
movsb
and
mov
lret
les
stos
mov
cli
mov
xchg
paddusw
je
push
pop
push
mov
or
les
sbb
pop
pusha
leave
lret
ljmp
repz
inc
adc
mov
bound
mov
xchg
sbb
imul
scas
test
pop
jmp
or
push
rcrb
cmp
sarl
sub
imul
movsl
add
cmp
or
xchg
mov
shrl
lret
clc
pcmpgtb
mov
insl
fcompl
fbld
imul
add
cmp
inc
fldcw
adc
mov
daa
push
or
ja
imul
pop
push
out
js
pop
lods
mov
imul
pop
push
adc
lahf
std
cmp
add
shll
leave
pop
mov
scas
test
fstps
movsl
imul
inc
xchg
push
sbb
cmp
mov
idiv
add
pop
sarb
xchg
outsl
popa
cmpsl
add
jecxz
add
sub
arpl
or
jno
ret
pop
into
rcrb
shl
cmp
inc
out
xor
and
loopne
mov
mov
cvtdq2ps
cltd
hlt
out
lea
jo
fildl
mov
lret
cmp
mov
imul
inc
insb
mov
subl
xor
outsb
outsl
popa
mov
scas
dec
lahf
lret
mov
or
jg
adc
aaa
and
ret
jg
jo
mov
aaa
dec
dec
pop
fwait
mov
gs
inc
pop
lods
xchg
and
or
pop
xchg
xchg
sahf
cwtl
mov
sbb
das
clc
lret
sbb
daa
orl
mov
dec
mov
xor
icebp
cmpsl
push
fnstenv
xor
movsl
insb
ret
mov
es
imul
cmp
in
aas
cltd
nop
push
pop
call
aas
fidivrs
and
adc
mov
ja
popl
das
dec
xor
call
and
scas
in
lock
lret
or
or
jge
xchg
sub
fs
popf
jae
jecxz
dec
in
rcr
ror
pop
jg,pn
fsubrs
xchg
mov
mov
mov
xor
add
dec
pop
rcrb
and
jmp
test
xor
sbb
cmpsw
imul
test
aam
push
dec
sub
loop
rorl
aam
dec
nop
call
mov
adc
dec
mov
in
mov
in
sbb
pop
cmp
aad
pop
cs
xor
fbld
xor
sub
aaa
mov
adc
push
jns
fistpll
xor
pop
pop
sbb
insb
xchg
inc
testb
outsb
out
lods
dec
push
dec
stos
xchg
mov
cmp
mov
sub
jmp
and
aad
pop
in
jbe
pop
out
cmp
push
ret
fisubrs
or
xor
mov
pop
xor
lcall
fsubl
in
shlb
loopne
jl
stc
call
pop
pop
insb
iret
sub
sahf
push
test
data16
pushf
into
and
and
adc
shl
into
push
outsb
gs
dec
in
pop
into
and
lret
outsl
lret
imul
sub
jb
xchg
mov
out
dec
into
cwtl
std
test
mov
popa
and
xchg
jae
xchg
frstor
jne
adc
dec
xchg
shlb
inc
lret
mov
cmpsl
ret
add
cs
pop
addl
pop
cwtl
out
ret
push
pushf
rcrb
adc
in
pop
adc
mov
push
mov
jne
dec
arpl
pop
adc
push
add
loope
aas
or
sub
rorb
or
mov
fiadds
jbe
dec
sbb
jge
sahf
xchg
mov
mov
mov
aas
xor
push
movaps
ljmp
cmp
rorb
pop
adc
sub
imul
movsb
and
mov
adc
ret
outsb
xlat
insl
mov
xchg
dec
sbb
lcall
xchg
nop
outsl
fistpl
sub
adc
cmp
cmp
cltd
scas
add
pop
xor
pop
mov
shll
pop
pop
ss
push
aas
sub
cmp
xchg
pop
cltd
sub
push
lods
mov
jle
fstps
and
roll
rorb
jg
lods
lahf
pop
or
enter
mov
xchg
sub
jne
xchg
lea
sub
gs
push
fnstenv
xor
dec
fimuls
pop
or
sbb
inc
push
cmp
mov
mov
movsl
adc
push
pop
loopne
arpl
and
add
gs
inc
imul
sar
in
scas
std
loop
or
fstl
and
in
lret
sub
sub
fisubrl
add
xchg
fdiv
pop
add
lret
cmp
je
ficompl
push
mov
dec
in
dec
mov
in
lcall
cmp
fsts
jg
add
or
andb
popa
loop
or
insb
mov
pushf
sbb
int3
mov
fisubrl
mov
jle
lret
pushf
aas
test
add
cltd
pusha
add
fdivrp
or
push
dec
test
movsb
loop
inc
lcall
movsb
rcll
and
cltd
cmpsb
cmp
mov
adc
xlat
rcll
xchg
pop
lock
pusha
movsl
cld
mov
push
add
mov
cmp
mov
aam
mov
daa
mov
sub
add
inc
out
pop
mov
inc
jle
in
cmpl
cli
negl
cmp
cmpsb
xor
cmpsb
jnp
clc
cmpsb
xchg
pop
fs
xor
mov
mov
mov
inc
mov
pop
insb
cltd
loop
pop
push
loopne
imul
nop
adc
pusha
sti
or
imull
and
cmp
insb
lret
jp
imul
sub
fisubl
pop
out
xchg
sbb
dec
mov
xor
cmpsb
pop
cs
xchg
adc
movsl
cmpl
mov
rorb
mov
andb
pop
lock
fldl
jl
jge
loopne
stos
into
gs
mov
les
cmp
pop
xor
fsubl
ja
scas
ret
cmp
and
push
mov
adc
xor
daa
ds
lock
mov
imul
je
imull
ror
sub
cmp
jle
pop
roll
add
out
jl
dec
mov
mov
mov
popf
xor
mov
add
push
cmpsb
pop
xor
lea
movsb
mov
push
jmp
lds
verr
aam
adc
mov
push
jp
shrb
repnz
adc
lcall
je,pt
cwtl
test
add
in
sbb
jmp
inc
sbb
jle
mov
lret
ss
fiadds
push
cli
nop
fwait
xor
sbb
jb
popa
addb
push
and
mov
rolb
sbb
inc
imul
hlt
dec
rorl
jge
or
divl
fcomps
fisubrs
pop
dec
movsl
xchg
push
add
das
in
shll
add
icebp
mov
cmc
mov
cmp
mov
mov
divb
pop
lret
push
daa
inc
mov
xor
leave
and
inc
fst
sbb
loopne
xor
push
sarb
fdivrl
pushf
rclb
pop
imul
adc
daa
adcb
movq
std
imul
jo
and
lods
cmp
push
iret
mov
je
enter
inc
xchg
cmp
mov
jle
imul
imul
lea
cmp
cli
push
or
fucomi
mov
mov
lods
mov
add
lds
fisubrs
ret
into
inc
mov
sbb
pop
ss
inc
mov
enter
cmp
stos
jl
xchg
out
and
xor
push
xor
push
cmp
mov
dec
add
lahf
jo
rclb
test
mov
sub
divl
jae
cwtl
imul
and
pop
lret
into
out
jmp
mov
and
sbb
out
mov
lahf
aam
pop
es
pop
mov
jbe
mov
in
popf
mov
mov
push
xchg
loop
mov
sahf
mov
inc
mov
cmc
sub
icebp
dec
add
mov
daa
int
add
cmc
xor
jae
jno
stos
andb
test
sub
pop
pop
es
xor
sbb
and
lret
push
jge
in
fidivs
dec
test
addr16
loopne
pushf
pop
sti
movsl
cmp
sbb
cmp
test
popl
cmpsl
dec
pusha
jg
push
inc
jo
pop
sbb
push
andb
mov
inc
mov
dec
enter
stos
dec
and
jmp
ja
cmpsl
cld
les
push
or
jg
ss
pushf
mov
fcmovnb
dec
mov
jmp
mov
popf
sub
or
gs
pushf
in
sub
cmp
sti
push
in
js
push
inc
fnstsw
xor
mov
mov
call
dec
xor
lods
stos
dec
push
push
xchg
es
jbe
lret
jl
mov
loop
lret
fwait
inc
push
stc
xchg
in
sbb
push
cmpb
dec
mov
xchg
stos
jne
sub
push
in
sbb
ds
inc
fcmovnbe
xor
cmp
sti
xor
aas
adc
mov
sub
orl
enter
inc
or
repnz
daa
ja
jne
add
mov
movsl
mov
out
aas
lret
fwait
jecxz
pop
or
xchg
add
and
jae
andl
push
out
insl
or
pop
pop
xchg
or
aam
cmp
lods
cmp
mov
mov
jl
add
dec
ret
push
mov
and
pop
adc
pop
mov
xchg
fistpl
insb
mulb
mov
pop
cmc
fsubrs
cmp
pushf
or
or
xor
inc
movsl
cmpsl
enter
cs
test
cmp
and
in
roll
mov
out
push
adc
rcll
inc
push
push
push
das
aaa
fstpt
inc
mov
frstor
jg
or
ja
in
lret
aad
shll
adc
inc
lahf
mov
dec
mov
or
insb
xlat
cld
cmp
test
loopne
sub
sti
mov
sbb
fs
pop
fdivs
addl
mov
stos
jae
push
imul
nop
out
test
inc
mov
int3
out
subl
inc
fucomip
sahf
lock
push
std
test
mov
jl
and
int3
mov
jb
loopne
cmp
neg
jmp
inc
dec
inc
mov
add
sub
xchg
outsl
iret
mov
mov
xor
mov
fcmovnbe
xchg
jae
adc
std
mov
repz
int3
lcall
cltd
inc
sti
scas
and
or
pop
mov
pop
mov
aaa
mov
adc
sub
and
adc
imul
lock
push
push
aas
mov
jbe
int
dec
popf
test
je
outsb
dec
cltd
mov
jge
jno
les
pop
add
dec
out
cs
iret
out
iret
mov
scas
popf
addr16
stos
pop
jmp
push
and
test
mov
xchg
outsl
xlat
ror
adc
mov
mov
sarb
repz
in
add
cmp
loop
xchg
cmp
shlb
jno
cmp
xchg
sub
test
testl
add
xchg
pop
mov
sbb
shr
or
outsb
mov
jecxz
xchg
das
push
mov
jecxz
test
push
fisubl
mov
out
or
dec
add
pop
inc
int3
es
xor
sti
sbb
mov
inc
loopne
in
insl
cltd
jb
cmp
in
ds
add
sub
and
inc
es
sub
mov
hlt
in
rolb
push
dec
js
or
mov
repz
push
push
pop
sarl
lcall
sbb
mov
int
cmc
out
pop
nop
les
lret
and
sbb
popa
jge
cmp
sbb
aaa
fnstsw
xor
in
and
nop
imul
dec
inc
inc
jg
std
push
xor
add
lahf
sub
movsl
pop
mov
fldl
clc
sbb
pop
xchg
push
sbb
ret
cld
xchg
bound
mov
mov
push
xor
fcomps
or
shll
movsb
xlat
pop
andl
fwait
mov
xor
or
push
push
stos
cmp
icebp
mov
mov
cmp
xor
mov
cmp
jle
jg
cmp
cli
ljmp
push
loop
inc
mov
mov
or
sub
cmp
mov
dec
cmp
lods
out
outsl
inc
push
push
fldt
rol
negb
ss
mov
sbb
in
cmc
out
aam
jle
or
cmp
cmp
outsl
jl
lret
es
sub
mov
insb
rcl
push
shlb
push
clc
sti
add
mov
in
aad
push
or
mov
ret
movsl
mov
ljmp
and
push
dec
push
cmp
jns
jo
mov
xor
gs
adc
lock
jle
mov
scas
in
pop
pushfw
push
loopne
sub
pop
sub
inc
cmp
repz
outsb
mov
clc
push
ss
cli
adc
fs
fcoms
xor
dec
test
xchg
push
imul
pop
andb
testb
and
adc
int3
jnp
cltd
jns
dec
lock
push
adc
ror
sub
or
vpavgw
faddp
mov
rolb
mov
dec
icebp
pop
test
add
cmpsl
mov
shrb
xchg
test
jne
out
mov
pop
xchg
xchg
sbbl
ret
cwtl
mov
data16
mov
icebp
xchg
iret
icebp
mulb
outsl
pop
push
sbb
cli
mov
subl
roll
cmpsl
cmp
incb
xor
and
ja
xchg
adc
bound
mov
pop
cmp
das
cli
ja
in
mov
cltd
add
or
pop
repz
cs
gs
rcll
cmp
bound
sahf
or
outsb
rclb
jl
sub
test
lcall
jl
addb
scas
call
in
xor
cmp
popa
outsl
into
adc
push
lcall
repnz
sahf
mov
outsb
mov
or
push
add
lds
bound
addr16
sbb
scas
mov
cmp
imulb
jbe
cmp
cmc
pop
pop
cmpsl
jnp
rolb
scas
xor
cmpsl
faddl
fdivp
cmp
stos
out
ljmp
enter
and
call
adc
and
jnp
push
mov
shrb
mov
cmp
sbb
xchg
adc
mov
fmull
and
sti
cwtl
xchg
pop
movsb
xchg
aas
lods
loop
xchg
ss
push
das
cli
scas
pusha
jmp
jecxz
mov
xor
ss
xchg
movsl
inc
push
imul
daa
addr16
in
int3
pop
push
out
aaa
mov
push
and
xchg
fsubrl
out
out
sub
or
mov
aas
cmpsl
pop
insl
cmpsb
mov
call
and
shll
and
cmp
dec
gs
sbb
push
inc
xchg
push
inc
add
pop
scas
enter
pushfw
gs
lods
xchg
cltd
addr16
clc
push
sub
enter
test
xor
test
nopl
daa
sbb
andb
ret
jp,pn
fists
cld
adc
hlt
mov
pop
scas
mov
or
out
mov
sub
leave
fists
mov
push
inc
cmp
les
incb
mov
cli
insl
cltd
fistpl
xchg
or
cmp
dec
xorl
add
jae
mov
aam
aad
push
call
das
xchg
pop
ficoml
stos
sub
or
pop
jecxz
pop
xlat
pop
cmpsl
add
int
sub
mov
push
dec
int3
aad
sti
dec
pop
data16
fdivs
sub
pop
push
test
pop
mov
push
insb
scas
ja
or
lcall
xor
sbb
xor
out
add
loopne
xlat
ljmp
out
mov
sub
push
fs
pushl
pop
mov
xor
es
fcmovne
sub
rolb
pop
outsl
imul
sbb
outsl
arpl
lock
pop
icebp
fistpl
sub
pop
lcall
cmpsl
mov
sbb
pop
movsb
jo
setp
scas
stos
enter
fcmovne
mov
addb
sbb
test
nop
dec
inc
cli
movsb
cmpsb
mov
shlb
push
ljmp
data16
adc
fwait
insb
filds
mov
leave
testl
lahf
add
dec
mov
xchg
adc
push
add
pop
dec
mov
pop
xor
sbb
scas
xor
dec
test
scas
sub
insl
call
mov
and
movsb
adc
adc
cmp
pop
adc
adcl
mov
pop
pusha
push
lret
sub
mov
outsl
jb
mov
mov
stc
jae
or
inc
push
sti
cmp
pushf
out
movsl
mov
enter
xor
xchg
cmc
insb
pop
shrl
in
jae
push
in
adc
jnp
and
add
fsub
out
xchg
mov
or
ret
rorb
xchg
push
cmc
repnz
mov
adc
jmp
adc
push
push
mov
aad
push
push
dec
add
mov
mov
push
sbb
fidivrl
xchg
add
loope
sbb
pop
sbb
dec
or
ss
push
lea
mov
mov
and
add
incl
adc
in
loop
adc
mov
jmp
lds
aam
fs
jno
mov
negb
sub
cmp
cmp
push
inc
adc
mov
stc
stos
sarb
xchg
mov
pop
mov
xor
xor
loopne
xor
mov
xor
adc
dec
mov
xor
loop
fmull
xchg
dec
inc
mov
cmp
jmp
lahf
jbe
xorb
insb
xor
loopne
adc
test
movsb
out
or
outsb
dec
test
and
lock
push
in
pop
cmp
cs
dec
xlat
xchg
xchg
shrb
pop
push
xor
int
jnp
mov
pusha
dec
dec
sar
mov
add
stos
repz
sub
gs
iret
mov
lods
xlat
gs
data16
lea
xchg
dec
pop
das
sub
sub
icebp
xchg
cmpl
cmpsl
iret
call
add
stos
cmp
ficomps
and
push
outsl
test
mov
out
ljmp
testl
outsl
adc
popf
fwait
pusha
stos
adc
pop
nop
test
rolb
repnz
xor
test
cwtl
mov
mov
bound
inc
xchg
add
sbb
inc
hlt
sub
xchg
jbe
or
sbb
frstor
mov
cmp
or
dec
dec
jmp
pop
std
les
dec
pop
ss
jno
sbb
cmpsb
mov
stc
fs
lods
inc
or
std
test
je
ljmp
test
hlt
sub
mov
lods
push
add
es
add
add
cltd
jecxz
xchg
sub
scas
leave
or
scas
js
mov
mov
jmp
sbb
cmc
mov
pusha
adc
push
testl
add
xchg
or
imul
mov
loopne
sub
add
mull
xorb
or
mov
mov
sahf
sti
sbb
dec
push
mov
cld
mov
xchg
dec
and
push
ret
add
int
ret
sbb
add
jo
add
lahf
mov
das
inc
scas
test
addr16
shlb
in
sti
or
add
test
fwait
cmpb
push
push
ret
add
inc
push
ja
fidivrs
or
das
bound
mov
xor
aad
add
iret
es
push
sahf
gs
inc
add
mov
and
movsb
fucom
mov
int3
adc
mov
mov
xchg
outsl
jl
mul
mov
cmp
sub
out
mov
xchg
xor
out
and
in
cli
dec
mov
insb
loope
add
ror
cld
loop
sbb
jb
adc
add
dec
aaa
adc
add
jmp
mov
push
mov
scas
fcmovnbe
push
lcall
out
adc
jns
int3
in
mov
sar
dec
enter
xor
int
cmp
aam
lcall
xchg
repz
insb
jle
inc
and
jns
mov
or
xchg
insb
aaa
jae
das
pop
mov
aas
insl
jecxz
mov
pop
cs
push
mov
mov
stos
fnstcw
scas
add
and
xchg
jecxz
and
sbb
out
xchg
leave
cmpsb
or
inc
sti
xchg
or
and
jb
push
lret
pushf
mov
ja
shr
mov
lock
mov
inc
popf
cmpb
lock
cli
mov
jbe
ljmp
jb
ja
outsl
movsl
outsb
sbb
push
cmpl
test
push
fs
add
enter
sbbb
or
pusha
pop
cmp
xor
call
push
mov
jecxz
test
std
or
outsl
scas
into
stos
cmp
fistl
shrb
mov
lret
pop
jg
rcrb
pusha
inc
xchg
lods
rorl
push
jecxz
mov
mov
mov
pop
xor
lcall
scas
into
or
lods
out
aad
fwait
pop
pop
das
inc
xchg
lret
iret
and
mov
insb
jnp
rolb
and
out
and
fnstenv
pop
dec
and
and
ds
fmull
aam
cmpsl
or
fstpl
cmp
add
out
add
jmp
pushf
fisttpll
push
subl
lock
mov
movl
ficoml
jno
hlt
cmp
fmull
dec
push
mov
jl
sbb
ljmp
mov
and
pop
jl
push
adc
mov
fcomip
shll
loope
sub
lods
pop
iret
lret
mov
pop
and
insl
call
xor
adc
je
jno
xchg
repz
add
mov
inc
and
out
ret
mov
cmp
shl
mov
cmp
fs
and
dec
mov
mov
bound
hlt
cs
cmpsb
mov
cmp
enter
push
incl
mov
and
xchg
ljmp
repz
jmp
push
cld
pop
add
jns
cltd
out
push
mov
enter
jae
dec
pop
stos
ss
mov
out
int
arpl
scas
add
adc
enter
movb
repnz
out
clc
mov
mov
rol
sub
sahf
jle
fiaddl
adc
push
mov
out
pop
dec
neg
jmp
nop
jecxz
mov
std
movsb
movsl
xor
dec
xchg
test
cmpsb
orl
test
jno
ret
outsb
pop
push
lods
orb
rcrb
mov
out
adc
cmpsb
adcb
push
pop
aaa
inc
roll
fiaddl
pop
pusha
jbe
xchg
mov
in
add
lds
adc
xor
stos
mov
dec
xor
add
and
fwait
mov
mov
xchg
mov
repnz
push
popf
aad
jle
mov
sahf
inc
xchg
sub
cmp
fcompl
and
sub
mov
das
inc
out
mov
mov
xor
in
sub
ret
xchg
arpl
mov
pop
lea
mov
sti
fs
adc
xchg
fiaddl
dec
and
js
mov
das
xchg
cs
xchg
push
cld
add
xchg
ret
pop
push
mov
mov
mov
pop
mov
xor
cmp
inc
sub
push
dec
jns
xchg
test
mov
lahf
aad
and
add
aaa
out
orl
jnp
scas
pusha
xor
mov
cmpsb
xchg
enter
cli
xchg
ljmp
xor
sbb
and
fnsave
sbbb
or
into
jp
enter
mov
add
orb
or
jne
aaa
mov
pop
enter
and
add
je
sub
fs
dec
xor
or
pop
mov
dec
mov
mov
mov
adc
enter
in
mov
rcrl
in
mov
in
popa
push
scas
xchg
jnp
or
inc
jae
push
cmp
pop
inc
jmp
pop
and
inc
repz
cmpsb
xchg
test
xchg
shl
gs
fistl
fcomi
dec
dec
rol
add
fnstcw
xor
addb
and
inc
mov
and
xchg
and
mov
dec
and
mov
sbb
test
dec
mov
je
mov
out
filds
jo
sarb
sarl
test
mov
jbe
jl
scas
mov
leave
mov
movsb
pop
rclb
jl
popf
fninit
dec
inc
inc
scas
int3
stc
ja
loop
mov
fidivrl
stos
les
fsts
hlt
test
cmc
stos
mov
cmp
inc
and
lcall
pop
mov
rclb
movsl
aad
popa
push
data16
enter
xor
sbb
mov
or
sub
movntq
mov
cmc
pop
add
int3
addr16
in
add
adc
inc
inc
outsb
sbb
sbb
jmp
pop
mov
dec
ret
add
push
cmp
mov
testl
shlb
sti
lock
je
xchg
xchg
shr
jl
rcl
out
mov
lret
int3
mov
jnp
lods
xchg
jne
jl
in
aad
lcall
push
shrl
arpl
jno
xor
or
pop
and
in
mov
stos
lock
add
jbe
rcl
dec
mov
in
pop
or
pop
mov
shl
push
xchg
jl
data16
movsl
inc
test
mov
mov
mov
xchg
adc
mov
rcll
inc
fwait
xchg
fdivrs
mov
sub
scas
mov
pop
fsubl
cwtl
es
cmp
mov
cmp
out
je
mov
adc
test
in
fcoml
in
jle
mov
jb
mov
hlt
fwait
mov
imul
mov
jmp
pop
mulb
rorb
shrb
dec
test
stos
push
cwtl
mov
mov
jns
out
hlt
mov
lahf
mov
pushf
add
icebp
les
int3
out
pop
gs
xchg
lods
nop
jno
push
loopne
pushl
mov
out
fidivrl
jg
jp
add
lods
add
gs
jmp
inc
call
dec
les
xchg
mov
cmp
and
pop
lcall
icebp
rolb
arpl
pop
and
or
mov
inc
test
mov
jp
mov
push
repnz
adc
jmp
lcall
ja
inc
lea
insb
sbb
subl
mov
sub
sar
sahf
lret
inc
and
push
push
sahf
mov
jb
outsb
and
into
push
shl
js
fildll
sbb
push
addb
lret
jne
lock
aam
std
decb
mov
xchg
dec
or
rcrl
push
dec
add
dec
mov
jmp
inc
aaa
push
sub
loop
xacquire
jno
jge
aam
jl
xchg
test
xor
test
pushf
subb
or
mov
jl
or
lret
insl
mov
sbb
xorb
xchg
sarb
stos
cmpl
lea
xor
test
jns
cld
frstor
loope
push
test
popf
add
testb
cmp
jmp
inc
dec
movsb
mov
xchg
insb
fstpt
ret
pop
push
dec
xor
jno
push
je
fsqrt
orl
in
mov
and
push
pop
xor
fdivr
dec
shrb
ret
sbb
call
sub
inc
stos
or
xchg
in
push
add
push
mov
and
fsubrp
mov
cmp
repnz
in
sbb
cmp
push
daa
xrelease
lock
mov
xchg
mov
dec
fcmovne
xchg
aam
xor
xchg
add
mov
std
adc
ss
repnz
pusha
jg
xor
lea
add
test
xor
sub
and
cmp
jb
imul
movsb
pop
mov
add
imul
push
mov
notl
sbb
outsb
pop
fisubrl
sbb
jnp
fs
popf
inc
pop
imul
fimull
pop
stc
in
xor
pushl
out
loope
cmp
andb
jge
stos
dec
xlat
imul
pop
fucom
jp
xor
pop
sub
and
cwtl
lea
pop
sub
adc
xchg
jecxz
loop
std
int3
and
xchg
aaa
push
or
sub
push
je
adc
inc
xchg
stos
adc
push
ss
or
repnz
into
and
cmc
jl
gs
outsb
jge
or
movsl
sbb
push
mov
pop
arpl
negb
mov
nop
loopne
in
mov
icebp
sub
lods
mov
sbb
movsl
cmpsb
stos
ret
lcall
test
pop
movsb
into
inc
jle
out
inc
sub
pop
mov
imul
sub
xchg
das
fcmove
xchg
cltd
pusha
in
cld
add
jns
push
mov
add
pop
xchg
fisubrs
dec
aam
mov
mov
imul
mov
repnz
mov
mov
mov
xchg
in
cmp
bound
sti
jecxz
call
push
std
inc
mov
pop
sarl
cmp
push
cmp
push
ja
xchg
cltd
or
gs
repz
sbbl
cmp
fmuls
aam
lret
push
test
fs
xchg
xchg
adc
cltd
movsb
fs
js
imul
or
loop
jb
adc
repz
mov
in
mov
cmpsb
xor
je
imul
movsb
mov
int3
enter
push
test
mov
xor
cmp
mov
in
test
cmpsb
outsl
cwtl
pop
sbb
push
lods
je
xchg
jo
jge
adc
mov
fldl
lahf
jb
nop
int
inc
inc
arpl
or
ret
in
rorb
std
xor
sarl
loope
mov
dec
ficoml
inc
pop
sbbl
mov
push
aam
arpl
stos
adc
arpl
enter
ds
add
clc
jle
pop
pusha
cmpb
lock
popf
orl
cld
js
pop
in
push
fwait
pop
shrb
dec
fnstenv
lock
sub
and
dec
roll
ret
xor
jns
cmpl
xchg
lock
inc
xor
inc
xchg
insl
leave
and
mov
sbb
movsb
pushf
inc
mov
std
ja
fsubrl
leave
aam
aaa
test
ljmp
xor
pop
es
clc
lahf
iret
cmp
mov
and
mov
std
or
int3
adc
dec
xorb
mov
insb
cmpsb
xchg
dec
push
shll
push
add
sbb
jg
jle
icebp
rcl
lock
inc
jbe
or
mov
push
xchg
insl
push
stc
imul
dec
mov
sbbl
mov
cs
add
aas
mov
outsb
jecxz
mov
push
scas
pop
imul
pop
ficomps
es
adc
jl
aaa
neg
push
nop
imul
mov
cmp
sarb
imul
lcallw
jmp
repnz
xchg
lret
push
jnp
xor
mov
faddp
cwtl
stc
dec
aas
ljmp
movsl
pop
mov
loop
sti
sub
out
icebp
dec
test
ret
into
inc
movsb
push
adc
inc
add
sbb
and
mov
jg
push
mov
xchg
sub
cmp
and
shll
xchg
jne
movzbl
xrelease
test
push
enter
mov
mov
xchg
add
outsb
inc
dec
test
iret
divl
out
lock
gs
xchg
or
lret
stc
mov
lret
mov
jbe
cmpxchg
stos
push
push
jo
sub
popa
pushaw
push
enter
adc
popf
pop
es
aad
std
mov
ret
cld
and
dec
inc
mov
enter
out
fxch
ja
lods
ja
add
mov
andb
lret
cld
sub
and
leave
mov
movsl
sub
push
mov
xor
add
sub
in
rclb
inc
xor
add
sbb
fwait
hlt
and
popa
and
mov
je
insb
push
push
addr16
fwait
call
inc
add
cmp
mov
scas
daa
pushf
in
sahf
mov
xchg
cmp
pop
fs
sbb
int3
xchg
sarb
setns
stc
sahf
fmull
fwait
sub
jns
cmp
xchg
in
sarl
in
jge
leave
lcall
js
push
mov
fstpl
sbbl
push
sbb
popa
push
std
xlat
push
add
in
mov
xchg
push
je
das
add
insl
inc
fiadds
jle
shl
and
mov
pop
sub
xchg
adc
pusha
cwtl
mov
lods
bound
test
out
xchg
pop
test
adc
dec
push
push
jno
inc
jo
pop
jb
arpl
shr
fstl
mov
cmc
push
adcl
cmpsb
mov
lret
jg
repnz
mov
and
rep
fmulp
or
inc
sbb
or
adc
add
adc
test
mov
adc
stc
push
sub
add
or
subl
push
cmp
jne
in
and
mov
mov
xchg
sub
add
add
jg
maskmovq
testl
xor
jle
push
inc
mov
cmp
inc
sub
leave
adc
mov
fbstp
push
dec
ret
ljmp
and
and
stc
pop
jno
and
and
dec
or
or
inc
lret
stos
gs
sbb
in
fwait
jb
into
fisubs
jbe
movsb
das
les
mov
push
mov
dec
mov
loop
out
xchg
add
test
jge
push
js
rcrl
lcall
test
popf
cmp
or
pop
push
push
pop
sbb
xor
cmp
loop
jo
xor
rorl
adc
push
push
loope
mov
mov
mov
out
int3
or
xlat
out
dec
sub
sbb
dec
icebp
outsl
xchg
pop
dec
jnp
dec
test
push
and
test
fmuls
jbe
add
imul
or
inc
xchg
push
sbb
loope
jnp
roll
push
sbb
mov
fidivs
jno
xchg
adc
jg
je
inc
push
or
dec
xor
adc
js
xor
mov
jl
cmpsl
sti
outsl
jns
icebp
cmp
mov
fidivrs
lret
or
mov
and
paddusw
loop
orl
scas
xor
int
insb
mov
mov
pop
sbb
das
adc
pushf
inc
push
fsubrs
icebp
jmp
xor
mov
mov
cli
and
out
rcrl
rclb
push
mov
sub
int
ds
jp
adc
lret
bound
mov
pop
pop
adc
adc
pop
push
stos
xchg
add
movsl
icebp
sub
aad
lahf
mov
loope
lods
xchg
push
jle
cltd
insl
pop
into
xchg
shrl
aaa
cmc
movsb
icebp
shrl
pop
sbb
jge
rorl
ret
stos
iret
inc
push
jmp
mov
jmp
test
inc
xorb
cmp
je
inc
mov
mov
jo
movsb
neg
jp
push
leave
push
int
test
adc
sub
mov
pop
aaa
lahf
subb
jle
sarb
test
popa
pop
cmpsl
clc
nop
in
add
mov
mov
iret
lock
mov
les
push
jle
push
push
xchg
mov
pop
je
mov
test
aaa
sub
lods
jp
stc
xlat
stos
outsl
xchg
aas
or
or
push
scas
xor
xor
cmp
sub
lcall
or
mov
mov
mov
or
add
pop
jne
je
mov
repz
aas
adc
sbb
push
ret
adc
sbb
pop
or
pop
or
sbb
adc
add
mov
jg
stos
fs
xchg
pop
lahf
jecxz
sbb
pop
xor
out
xor
cmp
or
cmpsl
orl
je
dec
scas
nop
xchg
in
fcomp
fwait
xchg
stc
vpcmpd
add
cmp
xchg
sub
stc
daa
les
mov
or
data16
scas
ret
popf
cltd
mov
ret
adc
sbbb
sbbb
jecxz
pop
add
stc
mov
mov
mov
icebp
mov
push
mov
out
cmc
jl
sti
fwait
sbb
sahf
shrb
push
mov
jne
cmp
adc
sbb
test
loopne
test
adc
fistl
sarb
cli
xor
sub
cmpb
jmp
xchg
xchg
pusha
push
xchg
dec
std
adc
bnd
pop
in
mov
mov
and
lret
ljmp
add
call
jp
cmpsb
pop
je
filds
mov
mov
jp
cld
sub
inc
pop
mov
fwait
out
push
out
je
jnp
lcall
pop
leave
sbb
mov
enter
sahf
adc
inc
shl
and
outsb
xor
jae
inc
pop
pop
fwait
mov
fadds
popa
enter
call
cmpsl
sbb
cwtl
jmp
cmp
rorb
mov
lods
push
fdivrs
mov
pop
xchg
mov
roll
outsl
sub
int
jne
loopne
test
shlb
pop
pop
mov
push
aas
test
dec
test
jmp
stc
fs
xor
lret
lret
test
das
dec
iret
cltd
int
fs
push
push
lcall
stos
fld
fidivl
xchg
rep
inc
cmp
jp
sbb
scas
dec
mov
jg
ret
or
add
jnp
pop
inc
cltd
and
movsb
mov
dec
test
aad
xchg
mov
aaa
inc
mov
add
xchg
or
cmp
std
cs
mov
add
mov
lods
mov
das
mov
push
adc
add
out
aaa
jg
ja
ret
cwtl
and
jbe
faddp
jp
dec
or
cmp
pop
test
enter
add
gs
aam
scas
jb
dec
loop
stc
mov
sbb
adc
aad
ret
pop
roll
push
mov
popa
mov
pushf
dec
mov
pop
sub
loopne
sub
sub
pop
mov
pop
mov
inc
sbb
fnsave
push
cmp
or
cmpl
notl
inc
loop
sbb
pop
cld
aam
pop
mov
imul
pop
inc
inc
cmp
adc
jle
aad
lods
push
mov
jns
cmp
cmp
add
cmpsl
pop
push
pusha
dec
push
in
lcall
cmp
idivb
cmp
or
stc
lods
jp
push
add
imul
pop
imul
pop
xor
lahf
adc
pop
push
mov
enter
imul
mov
cwtl
pop
cmp
mov
jmp
incb
loope
push
sbbb
cmp
shlb
jns
mov
shrl
cmpsb
pop
xchg
adc
leave
adc
inc
pusha
xor
ja
icebp
pop
push
roll
xchg
aad
ret
lahf
pop
mov
sbb
cmpb
lods
or
lcall
jno
loop
lds
push
clts
fisubrl
xchg
push
dec
cmp
xor
mov
scas
icebp
scas
lea
sbb
daa
push
pop
ja
subl
out
outsb
cmp
mov
sbb
mov
fldl
call
scas
mov
pop
jmp
fldt
xchg
test
sti
fisttpll
pop
ljmp
jecxz
int
lds
mov
sub
and
inc
jo
loopne
inc
in
fnstenv
or
xchg
dec
pushf
int3
inc
mov
push
stos
andb
movsb
bound
rorb
xchg
sbb
pop
jge
push
xor
rclb
pop
adc
arpl
or
or
push
adc
ret
jmp
inc
pushf
jno
popa
je
ffreep
fsts
jnp
dec
cmp
mov
cs
sbb
dec
aam
sub
mov
shrb
sti
movsb
push
lods
mov
shll
outsl
lock
inc
inc
adc
ffreep
jl
mov
lret
pop
jb
pop
insb
popf
mov
cltd
and
or
mov
pop
call
jne
insb
pusha
sbb
pop
call
dec
cmpsl
sbb
pop
jmp
fcompl
cmpsb
or
sahf
or
leave
add
add
loope
push
lods
push
hlt
mov
jb
rorl
pop
lods
addl
jne
inc
mov
dec
push
inc
mov
pop
filds
sub
lods
stos
gs
imul
orb
dec
sbb
in
lock
fnstsw
mov
xchg
inc
sti
jns
xor
incl
push
out
sbb
cmp
addr16
les
movsb
repnz
jnp
push
xchg
add
popa
test
and
mov
push
jae
int3
mov
jp
mov
mov
insb
jmp
out
mov
pop
jb
mov
jmp
sbb
gs
inc
test
xlat
fadds
ret
test
sub
lds
mov
sub
lea
or
arpl
shl
fcmovne
lfs
pushf
push
xchg
inc
jg
xchg
shr
fcoml
test
in
push
clc
outsb
push
push
call
xchg
or
stos
mov
aaa
out
imull
xlat
jmp
sub
adc
ret
lahf
jl
dec
neg
mov
mov
pop
aas
adc
pop
xchg
orb
pop
or
dec
cmp
or
xchg
js
pop
mov
cmc
lahf
data16
xlat
push
sub
and
imul
xorb
mov
aam
push
cmp
imul
mov
test
lret
js
cmp
and
sbb
sub
add
inc
in
outsl
push
ljmp
ja
jb
les
push
int3
jle
xchg
popf
xor
ss
gs
mov
test
adc
or
dec
xchg
jge
push
mov
fnsave
xchg
lods
pop
mov
sub
aaa
xchg
bound
fildll
mov
or
orb
pushf
mov
pop
cmp
and
in
cs
clc
icebp
push
movsl
movaps
xchg
pop
ret
test
xchg
dec
inc
loopne
jecxz
push
xor
fildll
xlat
mov
inc
push
and
sub
gs
mov
pop
mov
enter
repz
fadd
sbb
dec
and
aaa
aad
pop
lret
push
or
movsl
in
in
hlt
shrl
mov
xor
sub
lret
int3
add
cwtl
movsl
push
sub
xor
sbb
mov
cs
jg
cmp
jb
or
arpl
pop
xchg
mov
jne
outsb
sub
test
cmc
les
icebp
add
add
xchg
icebp
jle
fisubrs
add
es
mov
dec
data16
ret
xchg
ljmp
in
xchg
lcall
mov
xchg
sub
xchg
fimull
sbb
into
mov
inc
jl
in
das
xlat
xlat
dec
xchg
dec
fistpll
daa
xchg
js
int3
add
lds
mov
enter
xchg
fmull
dec
lcall
jae
arpl
jp
xchg
loopne
mov
test
les
mov
fldenv
insl
dec
and
test
shrl
and
nop
pop
push
lret
and
jg
mov
and
push
mov
add
enter
lret
or
in
xor
jecxz
cmc
push
fdivr
dec
in
mov
push
das
and
jle
jno
sub
aam
lret
jl
insl
inc
mov
sub
mov
outsl
shrb
int
mov
add
stc
jb
xchg
xor
mov
nop
mov
cmp
jg
jo
dec
xor
in
orl
dec
pop
sub
mov
cmp
xchg
adc
xor
iret
ret
jl
jmp
andb
jbe
imul
addr16
push
jge
jge
xchg
xlat
mov
push
fs
sbb
inc
push
addr16
jb
leave
fdivrl
mov
cmp
dec
inc
jle
sub
rorl
scas
cli
pop
cld
movsb
mov
sbb
clc
push
sub
and
push
insl
arpl
jo
shll
inc
cmp
jae
aad
stos
pop
and
lret
add
pushf
sub
push
xchg
orl
add
and
xchg
pusha
call
in
lahf
leave
lds
ja
cmpsl
imul
dec
fdivl
mov
or
inc
or
mov
addr16
add
ret
xor
imul
repz
outsl
hlt
cmc
xchg
in
pop
les
push
mov
das
insl
mov
mov
pop
mov
pusha
and
jmp
daa
sbb
outsl
sub
icebp
test
pop
mov
int3
aas
sbb
inc
push
cld
sub
jb
mov
test
or
repz
mov
mov
pop
pop
ja
test
jnp
mov
xchg
inc
movsl
jle
jmp
test
xor
divl
jp
jge
xor
divb
das
scas
sub
dec
push
adcl
in
data16
shll
out
loop
cmp
cmp
ret
jecxz
mov
and
icebp
clc
mov
inc
push
fisttpll
mov
iret
inc
clc
movsb
cmpsb
hlt
ret
std
es
leave
xor
push
dec
inc
testb
adc
leave
xor
sub
add
jle
gs
repnz
sbb
add
orb
add
dec
add
mov
adc
or
outsb
dec
and
loopne
sub
out
inc
js
adc
and
jmp
cmp
inc
cmp
jp
jg
pop
es
insb
adc
int3
mov
ja
in
mov
fs
movsl
mov
xchg
es
inc
and
negb
xor
pop
roll
ficoms
push
int3
xor
cmp
scas
mov
or
stos
test
ret
imul
xchg
push
mov
xorl
sbb
arpl
lds
ljmp
rclb
mov
xor
xchg
xchg
pop
aas
fimuls
xchg
ljmp
sahf
xor
and
xor
aad
or
pop
orl
xchg
pop
iret
imul
vmwrite
jl
xchg
or
fwait
pop
mov
fsts
push
test
testl
push
imul
scas
inc
xchg
shll
outsb
inc
and
pop
jae
leave
add
cmp
mov
pop
pop
mov
and
add
aad
adc
mov
push
jne
adc
loop
das
jbe
iret
pop
cmp
movsl
sub
loopne
sub
xchg
mov
aam
rorl
sub
mov
inc
push
cli
ret
xchg
cmp
adc
cmp
sbb
adc
lods
lods
sub
inc
mov
shrl
sub
mov
fwait
in
mov
loopne
jbe
jo
push
jne
cmp
mov
shr
cmp
sub
mov
sbb
repnz
in
pop
mov
mov
sbb
inc
sub
and
pop
neg
xchg
jae
mov
std
adc
icebp
push
sub
scas
clc
repnz
xor
cld
es
mov
and
adc
mov
inc
fnsave
mov
enter
mov
loopne
cmp
sub
ja
cs
push
or
mov
jle
inc
ja
dec
rcr
add
push
dec
repz
cmp
jne
movl
xchg
mov
pop
xlat
jne
pushf
sub
scas
or
sub
mov
fcompl
mov
rorl
sahf
or
in
cli
pop
sub
arpl
fnstsw
mov
mov
pop
mov
adc
loope
insb
orl
mov
jmp
push
jle
mov
je
mov
xchg
xor
push
adc
push
hlt
scas
lea
ffree
iret
repnz
add
in
mov
xchg
pop
int
mov
icebp
pusha
jbe
test
loopne
mov
sbb
lahf
adc
xor
aam
or
imul
xchg
jg
ljmp
dec
dec
nop
jg
mov
xchg
mov
cmp
lahf
and
xlat
shll
xor
jbe
in
push
xchg
jno
fdivrl
cld
pop
mov
fsubs
jl
pop
cs
mov
je
scas
std
cmc
and
fldcw
xchg
mov
or
mov
out
sbb
stos
gs
aaa
mov
cmpb
push
add
pop
inc
dec
xor
push
pause
push
mov
icebp
inc
sub
inc
jne
lret
or
enter
push
jg
pop
daa
mov
dec
pusha
test
mov
sahf
fwait
gs
xchg
mov
xchg
gs
nop
fbstp
shll
sar
aam
add
shl
mov
cltd
pop
and
rcr
sub
rorl
leave
mov
fwait
xchg
test
push
inc
sub
sbb
sbb
push
push
or
shlb
cmp
fistps
fbld
in
cwtl
fs
mov
int
add
and
les
jmp
imulb
aas
ror
cmp
ret
vhsubps
add
xchg
dec
xchg
out
mov
subl
pop
out
push
sbb
dec
js
adc
push
imul
lods
xor
sub
lods
pop
add
and
enter
in
ljmp
mov
ja
inc
add
out
or
ja
pop
and
cld
add
pop
repnz
addr16
ds
inc
inc
xchg
pop
mov
out
dec
stos
sbb
mov
and
add
fwait
ret
pop
sbb
movsl
cmp
jbe
into
mov
imul
jbe
pop
push
xor
fld
shlb
fs
out
jecxz
xchg
sahf
pop
sti
xor
and
xchg
mov
mov
insl
xor
xor
push
lds
shlb
xchg
xchg
test
imul
sub
push
aas
stc
sti
inc
das
dec
shll
pop
fnstenv
pop
xchg
rcrb
insb
fisubl
inc
ljmp
xor
xor
imul
cmp
mov
inc
js
adc
sub
out
popf
hlt
aam
cmp
fwait
mov
mov
hlt
push
mov
imul
push
mov
rcrl
pop
andl
cltd
mov
mov
xchg
into
add
adc
xlat
push
out
pop
pop
cltd
or
sbb
add
mov
or
lock
sbb
inc
insb
sub
xchg
ret
jmp
repz
cmp
mov
sahf
adcl
aaa
pop
int
repz
xor
jnp
mov
sbb
movsl
clc
mov
out
jle
mov
or
lahf
cltd
mov
and
jne
and
rcl
cmp
mov
sbb
push
ljmp
pusha
jmp
mov
inc
dec
mov
insb
out
out
pop
inc
jg
jg
xchg
fisubl
icebp
push
jl
lods
cmpsl
xchg
add
jmp
ds
cmpsl
fwait
dec
inc
mov
jae
push
je
je
xlat
repz
test
and
ja
sbb
pop
and
mov
mov
or
insb
call
dec
cmp
cmp
cmp
mov
repnz
mov
xchg
push
inc
shll
cmp
xchg
popa
nop
sub
xchg
vmcall
jnp
xchg
sub
lahf
push
aaa
jp
sbb
sbb
inc
fldcw
jo
mov
mov
or
jo
daa
push
mov
fcomps
repnz
mov
jmp
lds
test
lds
xchg
nop
add
push
jne
mov
push
les
pushl
lods
mov
push
scas
cmp
in
lret
xor
les
mov
mov
test
dec
test
mov
imul
lahf
test
mov
push
push
cmp
cmp
add
mov
cmp
or
mov
outsb
pop
dec
das
adc
les
pop
add
sbb
cmp
stos
mov
icebp
jo
and
xchg
pop
dec
sub
and
fwait
xchg
loope
adc
lods
mov
jbe
pop
out
sub
loop
sub
in
insl
mov
cmp
cmp
add
mov
test
sbb
add
das
cmc
jo
roll
jg
inc
lret
sub
xor
inc
jnp
pcmpgtw
sbb
arpl
push
insl
inc
lcall
adcl
inc
jge
call
push
push
and
pop
and
sub
loop
stos
ja
fs
sbb
and
call
iret
mov
push
inc
jecxz
insb
add
popa
cmpsl
fstps
cmp
xorb
cmp
xor
jp
push
stos
xchg
hlt
aad
jne
push
xor
jo
inc
lea
mov
hlt
cld
fldl2t
push
inc
hlt
addr16
les
das
mov
inc
insb
orl
ss
mov
in
jo
fdivrs
and
cmp
mov
push
bound
sbb
into
xor
out
xchg
push
or
add
inc
and
push
jb
xor
pop
lahf
fcoml
mov
sbb
push
mov
sub
adc
sbb
popa
stos
daa
or
sub
adc
inc
arpl
push
push
call
subb
call
stos
hlt
adc
jg
ror
and
mov
jge
shrb
jbe
jne
dec
inc
sbb
jne
xchg
shr
jg
mov
mov
iret
xchg
bsr
shl
add
adc
xchg
sub
xchg
add
das
gs
sbbb
xor
dec
add
lods
les
movsl
sarl
es
and
add
popa
mov
sbb
jbe
sub
nop
push
inc
in
dec
or
jl
mov
jg
lock
dec
popa
rorb
fisubrs
xor
les
adc
ret
or
fcomps
loop
xchg
jbe
js
cmp
push
les
out
ljmp
sub
lahf
loopne
addl
gs
jg
inc
leave
add
jne
shlb
mov
mov
sti
inc
xor
push
dec
pop
or
ljmp
inc
shl
sub
inc
andl
push
das
or
stc
pop
aad
ret
push
mov
sbb
hlt
mov
sbb
xchg
leave
ja
aad
xlat
jp
and
mov
inc
mov
stos
push
push
mov
pop
stos
or
push
in
push
gs
int3
push
negb
imul
test
out
aas
xor
inc
inc
dec
ds
dec
or
aas
push
cmpsl
sti
push
mov
mov
fidivrl
and
xchg
fwait
je
sbb
insl
fcompl
fcomip
movsb
repnz
pop
repz
leave
rcrb
je
mov
dec
mov
mov
movsl
ss
inc
aaa
sahf
clc
fwait
sbb
and
rcll
sub
push
push
mov
imul
or
xor
loopne
add
ds
push
inc
sub
xchg
xchg
in
xchg
cmp
std
mov
enter
inc
sbb
pop
ja
shll
pop
xor
xor
mov
jo
push
and
out
hlt
jl
shl
leave
cmc
es
jecxz
dec
fsubs
fidivrl
mov
outsb
jbe
push
cwtl
lds
fbstp
jae
out
jnp
cmp
adcb
movsl
push
sub
loope
inc
pop
outsl
popf
jbe
inc
mov
je
mov
sbb
mov
xchg
scas
push
loop
mov
or
pop
mov
into
int3
mov
rcr
xchg
rcrl
rcll
xchg
dec
test
mov
push
sub
mov
in
add
outsb
fldcw
xlat
adc
in
insb
jp
mov
lock
out
outsb
jb
xorl
push
js
mov
daa
rcll
lcall
sub
xchg
adc
adc
call
mov
daa
xor
faddp
outsl
test
fnstcw
test
push
js
mov
outsl
pushf
adc
enter
out
loope
imull
sbb
lds
sbb
and
push
ds
fcoml
imul
adc
imul
jge
cmp
mov
movsb
xorl
sub
cli
mov
lods
inc
xchg
lea
fsub
ja
sti
bnd
sbb
in
into
or
and
xchg
jle
cli
pop
push
xorb
ljmp
fbstp
iret
sub
data16
add
sub
xchg
ret
mov
push
rolb
and
aad
inc
inc
mov
and
cmp
sbb
out
mov
daa
adc
test
lock
stos
lret
fdiv
push
out
outsl
rclb
push
mov
rcl
rclb
mov
pop
mov
outsb
aad
adc
shl
addb
mov
and
pop
push
dec
sbb
sahf
dec
sbb
test
pop
or
out
sub
ja
inc
ljmp
sub
push
dec
aas
mov
loopne
or
int
mov
fs
sub
push
rolb
dec
adc
out
push
mov
call
sbb
push
lock
xchg
dec
or
fadds
pop
pop
sbb
arpl
into
call
dec
jo
paddq
aad
mov
shrb
inc
xlat
popf
popf
js
dec
pop
add
sub
loopne
cmp
xor
icebp
xchg
popa
dec
add
jb
sub
jo
push
addr16
pop
lret
sti
shll
inc
sbb
repnz
fimull
cmp
ljmp
xchg
out
adc
mov
add
mov
mov
sarl
int
fwait
nop
and
push
xchg
rol
mov
pop
and
pop
decl
cld
or
decl
dec
pop
aaa
outsb
add
sahf
stc
test
std
push
adc
xchg
and
sub
aam
pop
mov
rcrl
xchg
pop
out
xchg
xchg
jmp
sbb
xchg
dec
aam
adc
leave
pop
adc
stos
lret
pop
lds
xchg
cmc
nop
test
int
loop
add
fiadds
mov
out
fstpl
in
xorb
and
cmpsl
jno
sbb
xchg
dec
pushf
mov
adc
cmpsb
and
xchg
bound
cmpsb
and
push
outsl
jnp
add
push
scas
aam
mov
or
push
cmc
loope
fwait
mov
stc
cmp
xchg
or
arpl
pop
ror
mov
xchg
jo
mov
jnp
hlt
fucomp
popa
js
xor
ljmp
addr16
pushf
cmpsb
test
push
popa
in
sti
sub
adc
and
dec
out
pushf
icebp
jle
ficompl
nop
push
sbb
xchg
je
cltd
repnz
insl
jle
shl
add
and
xchg
and
pop
mov
sbb
sbb
dec
push
setb
lods
adcb
jmp
fsqrt
lock
jmp
push
pop
pop
test
int3
cmp
mov
jmp
push
idivl
stc
add
shr
jmp
outsl
or
adc
test
fisubl
fnstcw
into
pusha
inc
cmp
lods
imul
pop
pop
add
adc
xor
in
ss
sbb
rep
out
popa
mov
mov
dec
mov
dec
mov
adc
lea
mov
insb
jb
inc
adc
insl
pop
sub
sahf
adc
adc
xor
lods
shl
sbb
cmp
aam
jae
out
hlt
lret
push
les
pop
je
push
cmp
jg
test
clc
pop
pop
mov
inc
dec
jno
stc
ds
sbb
mov
ss
or
inc
frstor
stos
iret
lods
or
jmp
push
jle
jp
and
xor
push
fstps
jle
stc
lahf
ss
mov
xlat
mov
lret
fiaddl
stc
push
imul
je
mov
in
test
arpl
pop
das
icebp
xor
cmp
and
mov
mov
idivl
aam
ud1
or
test
xchg
mov
roll
xor
sbb
jmp
fwait
mov
and
popa
mov
mov
add
add
ss
add
fnstcw
adc
or
and
or
sbb
jae
lahf
push
push
xorl
inc
xlat
inc
or
add
jnp
stos
jo
and
and
jo
leave
xor
xchg
sub
lcall
cmp
push
sub
negb
fdivp
push
xor
andl
cmp
xor
adc
daa
mov
test
pop
jne
pop
out
mov
ljmp
fstpt
mov
cmp
dec
rorb
pop
int
orb
ja
insb
and
mov
or
cli
cmp
rcll
cmp
cmpl
stos
lods
subl
push
xchg
inc
push
fildll
xor
das
jge
jp
jl
lret
scas
call
call
xchg
push
adc
xor
aad
add
push
scas
out
negl
out
fs
addr16
ljmp
enter
pop
push
jnp
or
dec
fwait
mov
sahf
sbb
lea
imul
pop
xchg
dec
repnz
repnz
repz
or
test
mov
loop
cs
inc
in
push
xchg
nop
pop
inc
nop
fcmovnu
dec
insb
stos
mov
aam
fcmovb
arpl
ret
and
fisubl
insl
inc
lock
xchg
mov
iret
cmp
push
or
int
mov
nop
bound
and
push
ss
sbb
mov
cld
cmpsb
or
cmp
push
push
incb
jp
inc
push
jl
stc
lret
lret
rcrb
jbe
adc
cld
mov
scas
and
mov
jo
stos
push
fsubs
in
ljmp
sahf
sbb
inc
notl
imul
pop
scas
mov
in
jbe
out
es
notl
ds
ds
scas
out
es
sbb
jne
push
add
aaa
jle
xlat
fiadds
mov
enter
mov
cmp
xor
xor
mov
andl
push
pusha
jbe
xchg
inc
inc
add
into
stos
outsl
mov
cmp
test
mov
jge
xchg
dec
adc
lock
mov
out
cwtl
lock
out
lahf
pop
dec
jno
std
xchg
sub
cmp
cmp
or
stc
push
mov
in
jno
and
or
pop
test
and
lock
rcrl
jae
push
adc
add
add
in
jne
and
sbb
popf
out
xchg
cmp
or
stos
mov
or
add
into
adc
xor
sahf
and
push
pop
mov
dec
jmp
and
pop
lock
inc
repz
lds
lret
xor
or
std
mov
lret
push
jle
mov
addl
ret
leavew
push
push
addr16
sub
lret
cs
stc
imul
in
mov
jae
push
popa
add
sti
hlt
add
jge
in
cmpsl
add
jo
pop
push
inc
dec
btcl
and
inc
ret
adc
mov
jl
lret
xlat
or
mov
loope
sub
fcmovne
lock
adcb
cmp
pushf
jo
mov
enter
scas
jns
or
fwait
es
xor
addr16
and
pop
rcll
push
in
aad
in
aam
popl
test
pop
push
mov
js
int
push
fisttpll
fld
mov
xchg
jecxz
lods
out
pop
mov
or
mov
mov
cli
mov
xor
dec
fiadds
xchg
cmp
push
xorb
xchg
jecxz
cmc
xor
push
mov
sub
and
stc
or
inc
mov
sbb
aad
and
repnz
mov
mov
pop
mov
cmp
push
jb
mov
aad
js
or
mov
nop
aad
pop
les
push
ret
sbb
popa
cmpsl
imull
adc
shll
sub
lret
cld
sti
and
inc
fnstsw
dec
and
jne
jmp
jb
stos
lock
mov
fmulp
cld
xchg
inc
sub
int3
iret
inc
inc
cmp
popa
test
push
add
adc
sahf
adc
aaa
fistl
xchg
dec
mov
test
mov
and
mov
add
mov
pop
push
sub
inc
loopne
arpl
lods
mov
xor
js
sahf
pop
jbe
push
sbb
push
addr16
call
lcall
sub
fisubs
push
imul
jbe
xchg
in
inc
mov
test
icebp
and
imul
rcrl
fnstenv
test
xchg
sub
in
popf
push
sbb
jno
ret
mov
sub
or
push
push
lds
sahf
adc
imul
and
jecxz
mov
dec
int
add
sbb
pop
mov
pop
dec
ffree
or
fsts
cmp
repz
fisubrl
xchg
ret
xchg
push
push
call
cld
test
loopne
repnz
and
push
xchg
es
mov
pop
push
cli
jns
daa
aas
sbb
push
or
mov
mov
sbb
lret
dec
fcoml
sub
rcll
notl
mov
daa
std
lds
sahf
jle
jno
or
xor
mov
shll
test
lock
imul
xchg
out
nop
or
cwtl
xchg
mov
ds
cmp
je
pushf
lret
negl
mov
adc
les
enter
lock
fcomp
sbb
orb
gs
test
push
sbb
jge
xor
cmp
pop
out
pushl
pop
jmp
dec
mov
outsl
mov
nop
push
mov
aad
pop
or
or
lea
jno
daa
push
stc
scas
jle
das
push
adc
and
or
outsb
repz
sub
pop
jg
adc
repz
pop
enter
test
xchg
jns
jno
je
and
pop
insb
sahf
xorl
mov
or
shlb
imul
dec
push
gs
shl
jg
jecxz
xchg
enter
std
cmp
jae
add
fisubrl
daa
push
sub
test
xchg
mov
or
jno
ds
adc
out
loop
mov
repz
jl
sbb
or
aas
cwtl
pop
xchg
sbb
mov
inc
adcb
push
dec
mul
and
xchg
lock
mov
popf
mov
ljmp
inc
mov
neg
loop
jecxz
adc
jge
popf
jae
insb
jle
adc
inc
lcall
mov
xchg
adc
in
add
jp
inc
and
ret
xchg
xor
adc
aam
flds
pop
iret
es
out
icebp
pop
jnp
sub
pop
dec
outsl
mov
idiv
fstpt
rorl
mov
xchg
xor
fnstsw
scas
popa
bsf
lds
pop
xchg
lods
fisttps
inc
dec
jmp
mov
jne
pop
push
aaa
xorl
jge
cmp
inc
cmp
lock
in
jns
ret
ret
adcb
sbb
idiv
xor
and
in
mov
mov
xor
or
or
mov
push
xor
inc
cmpsl
mov
cmpb
jle
int
gs
fiaddl
mov
xchg
lret
in
jmp
lds
sbb
mov
push
mov
jne
lcall
int3
push
in
push
scas
sbb
push
jecxz
scas
int
add
jmp
iret
push
in
add
mov
lcall
movsb
imul
lcall
or
sub
cli
lret
cs
inc
xchg
and
scas
movsb
sbb
fnstenv
rolb
lds
push
insl
add
jns
jmp
and
push
xchg
xchg
mov
stos
adc
pop
sub
aad
and
or
jp
out
arpl
lcall
fistps
sbb
inc
clc
or
mov
lahf
arpl
sahf
mov
bound
jp
cltd
jb
lcall
sahf
mov
mov
ljmp
adc
enter
sub
test
jmp
pop
xor
mov
sub
ret
xchg
mov
pushf
mov
out
insl
xor
icebp
data16
out
jg
sbb
fnsave
orl
loope
inc
in
neg
ja
pushf
dec
test
icebp
and
lea
push
xchg
repnz
jns
xchg
test
ss
dec
scas
dec
cli
js
adc
outsb
cld
xor
inc
ret
and
mov
sbb
push
pop
sbb
push
ja
loope
and
call
or
sub
cmp
lds
xchg
inc
stc
lahf
jns
add
lret
fistpll
hlt
fs
icebp
outsb
paddd
vcvtsd2si
push
or
adc
cmp
pop
mov
cmp
mov
mov
push
in
push
loopne
sbb
bound
out
push
sbb
cmp
push
std
sbb
dec
xchg
push
jns
or
pop
enter
popa
out
sub
cmp
cmp
repz
add
inc
mov
inc
arpl
push
repz
imul
pop
sbb
mov
push
pop
je
sub
push
push
das
inc
rolb
cmp
stc
jge
cmpsl
and
sub
test
xchg
and
inc
cli
mov
enter
sahf
push
dec
or
or
cmp
fs
adc
mov
pop
cmp
or
movsl
mov
fildll
aam
dec
jp
sbb
jmp
test
and
mov
lock
pop
lcall
mov
cmp
rclb
dec
adc
fcoms
mov
test
push
push
dec
adc
mov
cmp
imul
and
mov
mov
je
push
and
cltd
aaa
and
dec
mov
or
pop
pop
lods
dec
cltd
dec
or
mov
sbbl
xchg
shlb
sbb
js
lret
sub
fs
clc
movsb
insl
shrb
jne
jo
jo
mov
mov
jb
mov
jmp
adc
mov
mov
cmp
and
dec
and
cmc
aaa
push
sbb
pop
lret
adc
sarb
cld
inc
dec
push
mov
jl
or
pop
insb
test
sub
inc
jno
lea
in
cmp
mov
xlat
sub
test
in
inc
jmp
fldt
shll
in
xchg
js
lea
sti
mov
popfw
sbb
shll
lods
aad
pop
adc
adc
mov
sbb
lahf
jmp
adc
mov
shrl
sarb
sahf
sbb
jg
fsub
rolb
mov
mov
mov
cmpsl
aas
xlat
test
xor
shll
or
inc
jg
bound
inc
push
enter
sbb
addr16
fnstcw
add
add
and
cli
push
xor
mov
pushf
mov
iret
mov
xor
pop
mov
jg
jo
dec
pop
mov
cmp
cmp
push
lock
mov
mov
mov
or
popa
imul
xor
in
cli
xchg
adc
inc
int3
in
inc
mov
push
icebp
inc
lcall
adc
mov
sbb
sbb
mov
sub
mov
int
mul
adc
pushf
sub
cmpsb
inc
mov
por
or
pop
cmp
mov
mov
in
push
rolb
repz
jo
jge
in
fistpll
mov
jl
jmp
or
dec
jnp
mov
push
inc
push
push
movsl
mov
sbb
jnp
push
rcll
xlat
movsl
lahf
test
test
popf
jns
stc
jns
ret
lcall
in
mov
mov
and
jle
mov
mov
aaa
inc
inc
jle
push
xor
mov
xor
sti
jo
loop
xor
adc
adc
jl
into
mov
sbb
daa
jae
roll
add
and
loopne
mov
int3
bound
cs
sti
sahf
and
sar
jge
insb
sub
fsubrl
rclb
aad
insb
and
mov
fnstenv
xor
jns
pop
ficoml
jne
pop
movsb
pop
mov
orb
nop
loopne
jno
andl
push
out
cli
out
mov
cltd
mov
movsl
frstor
mov
pop
in
addb
push
pusha
lock
jg
mov
xchg
enter
mov
xor
mov
cmp
enter
xor
stos
stc
fdivl
shlb
outsl
mov
jle
push
insb
sub
stc
jb
popf
inc
mov
add
sbb
and
mov
sbb
pusha
jp
repz
mov
push
push
sub
jecxz
add
mov
mov
repnz
cmp
pop
adc
addr16
roll
jmp
rorl
ror
or
jno
pop
push
sarl
out
aad
movsb
arpl
repnz
mov
sub
incl
and
lock
addb
adc
sbb
adc
and
dec
add
jg
and
cltd
cmp
movsl
orl
xchg
and
lea
hlt
sti
pop
jmp
dec
les
push
mov
add
cmpsl
outsl
fisubrs
mov
xor
jge
fsubp
roll
test
pop
xor
aaa
push
inc
push
inc
jbe
rcrl
jmp
fucom
sbb
leave
jge
xchg
add
sbb
push
shrl
negb
xchg
add
jnp
push
mov
sub
dec
icebp
inc
fucompp
add
inc
sbb
scas
mov
adc
and
sbb
int
mov
cmp
or
daa
fndisi(8087
ljmp
cmp
scas
fldt
mov
popa
jbe
adc
jmp
or
mov
pusha
dec
adc
push
mov
mov
cli
cmpsb
lcall
sub
out
pop
into
inc
addr16
xlat
arpl
cmp
mov
in
fstpl
psubw
ja
push
test
cmpsl
out
or
push
dec
push
mov
mov
repz
push
cmpsl
pop
sti
cwtl
out
or
xchg
pop
xorb
xor
pop
dec
data16
jb
lods
fistps
pop
pop
rorb
sbb
mull
shll
adc
jbe
inc
jae
fistl
push
jg
bnd
jmp
push
data16
movsb
fldt
ss
fbld
inc
and
dec
pop
cli
cs
insb
inc
jbe
xlat
insl
mov
xor
and
das
sub
xor
cltd
es
loop
pop
insb
mov
addr16
xor
xor
inc
clc
movsb
call
add
aam
pop
xchg
mov
mov
arpl
fmul
push
popf
fwait
enter
cmp
push
push
fcoml
imul
mov
mov
mov
je
dec
cs
mov
ret
pop
mov
and
cmp
ret
pop
std
dec
sbbl
outsb
cmp
cltd
shll
sbb
mov
stc
mov
inc
lahf
adc
loopne
je
repz
aad
inc
lret
inc
lahf
push
addr16
jl
fldl
xchg
mov
ret
mov
mov
push
lret
xchg
stos
sbb
xor
outsl
ds
sti
dec
out
pop
movsl
loop
xor
and
insb
cli
or
mov
push
pop
sarb
push
pop
fs
lock
cmp
mov
add
call
mov
add
xchg
pop
xor
push
das
push
outsb
push
inc
loope
inc
std
mov
insl
and
out
out
jnp
scas
testl
mov
mov
push
or
out
inc
xor
xlat
pop
jp,pn
mov
mov
xchg
jo
add
divl
in
pop
push
mov
out
ja
cmpsl
cmc
jne
inc
nop
je
movsl
andl
decl
ja
outsl
and
add
lea
mov
imul
mov
fwait
and
movsb
jmp
jp
pop
ljmp
pop
dec
inc
fidivrs
push
dec
sbbl
adc
ljmp
xchg
mov
jns
push
xor
in
outsb
aam
cmpsb
xchg
arpl
add
hlt
test
jmp
movsb
in
pop
push
shrd
test
sub
mov
inc
lahf
mov
jge
ljmp
mov
mov
adc
sub
mov
xor
call
inc
loope
jb
pop
xchg
dec
xor
movsb
jns
and
xor
cld
in
mov
call
and
cmp
pop
gs
fnsave
lret
add
lods
out
mov
and
pop
fxch
inc
adc
dec
cmc
mov
out
aaa
movsl
mov
cmpsb
sub
lret
pop
test
adc
push
adc
incb
negl
test
pop
mov
sahf
inc
lock
pushl
mov
xor
pushf
pop
imul
fwait
inc
xchg
icebp
mov
subl
mov
lods
xchg
mov
mov
xor
push
ljmp
stc
fsubrl
scas
rclb
iret
into
xchg
sub
cmp
rdpmc
mov
imul
movsb
add
mov
pusha
add
jmp
imul
adc
mov
into
pop
mov
xorb
cwtl
adc
shr
imul
mov
ret
pop
lret
adc
xchg
cmp
xchg
xlat
gs
sbb
mov
xor
cli
pop
mov
lods
jge
ret
pop
mov
loope
jl
pop
mov
bound
xchg
jnp
push
outsb
xchg
seta
xchg
fwait
xor
ljmp
sbb
cmp
pop
shlb
adc
jge
int
xor
loopne
scas
mov
jp
mov
xchg
rcrl
nop
fisttpll
jle
rcrl
fwait
or
mov
icebp
push
es
fwait
hlt
test
rolb
push
dec
repnz
add
push
outsl
xchg
xchg
sbb
xor
and
pop
xchg
xor
cwtl
out
jne
testb
stc
mov
shlb
aas
dec
aam
cmp
adc
xor
stos
jg
mov
icebp
cmp
rorb
int
addl
cli
push
sub
les
negl
xchg
aas
xchg
ja
xchg
lock
cmp
inc
add
dec
pushf
mov
stos
pop
inc
mov
addr16
mov
adc
pusha
jae
subl
repz
into
stos
xchg
inc
push
jno
loop
dec
cmpsl
xor
mov
enter
push
andb
stos
mull
fcmovnu
mov
movsl
fdivl
in
and
lods
push
test
stos
inc
cmp
out
jb
lds
cs
filds
ds
cmpsl
fisubrs
cmp
inc
adc
ss
call
mov
pushf
movsl
je
or
test
push
xchg
sub
imul
rclb
int
mov
mov
jo
sub
insl
popf
push
in
ret
nop
sbb
sub
orl
inc
mull
xchg
scas
jecxz
pop
add
sub
or
add
jle
and
dec
scas
xor
fists
and
xor
xchg
or
stc
into
in
inc
pop
and
in
fsubr
dec
cltd
loop
dec
dec
push
pop
inc
cmp
ds
loope
xor
lea
psrld
pop
xor
mov
imul
add
dec
cmp
mov
lock
mov
mov
sar
sbb
xchg
call
nop
push
sbb
mov
add
fs
cmp
add
pop
add
jle
xchg
test
push
and
fnstcw
mov
jp
jl
movsl
cmp
adc
cmp
iret
push
xbegin
leave
sbb
clc
and
sub
inc
mov
mov
bound
into
mov
push
das
cmp
mov
rcr
ret
sub
ds
cli
fldcw
je
add
sub
pop
in
leave
fs
sub
xor
les
rolb
hlt
in
mov
andb
mov
lds
mov
push
and
cmpsl
adc
cmp
push
pop
cmp
mov
mov
movsb
lcall
push
push
push
add
test
xchg
mov
mov
ret
push
in
ja
test
cs
push
mov
and
movsb
clc
js
aaa
xchg
pop
push
xor
xchg
ret
lods
mov
pop
daa
jecxz
add
pushl
scas
xor
aad
add
sub
inc
xor
dec
inc
xor
call
jb
add
push
dec
mov
adc
cltd
push
inc
mov
fisttpll
push
cmpsl
les
movsl
jle
pop
stos
cmp
test
fbld
sub
sub
popf
adc
hlt
inc
inc
cmp
dec
bound
nop
into
cmpsb
inc
jg
adc
jl
dec
shr
dec
adc
pusha
out
or
lds
ja
adc
cmc
cmp
movsb
xor
sub
dec
mov
push
jbe
popf
pop
fwait
push
fwait
arpl
push
jmp
sbb
sub
adc
xchg
dec
repnz
jg
push
xor
js
arpl
mov
std
pop
dec
lret
xchg
cmpsb
mov
jecxz
or
test
push
jb
aad
inc
test
loopne
jno
pop
and
jecxz
rclb
add
into
sub
mov
or
gs
or
pop
cld
push
fsubl
fiaddl
das
test
inc
and
mov
jb
push
fwait
xchg
or
scas
cs
sbb
iret
add
out
cmpsb
push
fcompl
fwait
and
clc
icebp
xor
or
stos
xor
jl
pop
add
mov
dec
pop
imul
adc
mov
divb
inc
pop
jae
push
orb
add
orl
jle
dec
lret
xchg
jnp
pop
insb
pushw
insl
mov
xor
cmp
add
jmp
int
sbb
or
jl
cmp
dec
adc
movsb
xchg
push
sbb
dec
lahf
cmp
pop
scas
insl
mov
cmp
fmuls
int3
mov
cmp
popa
mov
mov
pop
ljmp
loop
test
cmp
sub
in
mov
loope
inc
sub
pop
add
push
inc
fbld
push
inc
inc
pop
jle
xor
adc
outsl
push
inc
push
or
xchg
or
inc
fildl
in
dec
lock
roll
pop
loop
arpl
inc
jmp
add
in
pop
inc
dec
mov
lods
sbb
or
mov
pop
jge
dec
mov
in
pop
mov
stos
test
pop
push
cs
jo
stos
xor
adc
cmp
call
xchg
sbb
mov
xchg
dec
leave
mov
cwtl
jbe
in
sub
mov
cltd
cs
bound
enter
rorb
add
push
pop
xchg
setl
sub
mov
jecxz
fsubs
mov
jge
lds
popa
loope
test
pop
leave
mov
in
movl
mov
add
push
and
xchg
iret
pop
insb
cmp
push
fiaddl
ljmp
inc
aam
push
push
arpl
mov
mov
adc
push
idivb
xor
inc
and
fiadds
push
or
movsb
sub
xchg
add
adc
pop
outsl
jo
mov
or
sahf
sysexit
insb
outsl
add
icebp
and
push
stos
ret
loopne
ret
xor
cltd
mov
adc
mov
add
jo
mov
pop
iret
daa
in
pop
loope
and
push
push
out
mov
xor
ficoml
divb
jbe
call
sbb
pop
pop
int3
jecxz
ds
leave
sti
dec
adc
pushf
dec
inc
shlb
in
test
out
xchg
jo
adc
sub
mov
scas
jge
sub
stos
xchg
cmp
insb
scas
xor
dec
mov
dec
adc
xor
leave
pop
or
fwait
xor
add
or
mov
das
sbb
mov
mov
ja
dec
pop
aaa
mov
mov
out
jns
xor
jb
test
mov
mov
xor
xor
mov
lds
or
add
arpl
xlat
lea
cmp
jbe
mov
cmp
fs
sub
les
test
sahf
dec
add
int3
scas
repnz
imul
cmp
and
or
mov
adc
mov
sbb
std
testl
sbb
test
cmp
inc
adc
jbe
mov
enter
adc
cld
pop
nop
and
cmp
sub
mov
lock
xor
sub
sarb
dec
xor
out
cld
arpl
popf
sbb
adc
fldt
or
test
push
fcmovbe
xchg
mov
mov
jo
fs
les
jmp
add
cmp
mov
std
jecxz
sub
leave
cmp
and
cmp
adc
addr16
imul
cmp
add
sub
add
xchg
add
js
mov
test
xor
fldlg2
aaa
sub
ret
shlb
xlat
shrb
int3
int
fistpl
jns
sub
outsl
insl
hlt
fdivrs
add
jnp
pop
push
test
sub
lea
fdivrs
stos
popf
push
sub
jnp
mov
scas
push
jle
insb
jnp
mov
sub
iret
loope
in
push
dec
xchg
imul
lahf
sbb
lcall
cmpsl
sbb
or
jnp,pt
arpl
mov
push
in
sbbb
jb
rolb
outsl
mov
jmp
pop
jmp
test
mov
mov
push
dec
mov
popa
dec
in
pop
add
jecxz
jmp
jle
aad
cmpsb
pop
rcll
outsb
xchg
push
adc
fstps
pop
clc
pushf
lahf
repz
or
dec
mov
stos
mov
stos
lret
dec
dec
xchg
nop
mov
shl
rorb
mov
enter
pop
cmp
xchg
jecxz
loopne
pop
mov
adc
movsb
push
add
cmp
mov
cmp
jl
leave
pop
jb
cmp
pop
push
jb
mov
movsb
stc
pop
and
cmp
ret
jecxz
jp
nop
add
fstps
mov
test
popa
cmp
jbe
test
mov
mov
int3
adc
lods
sub
xor
mov
or
arpl
pop
sub
mov
je
dec
push
lods
imul
ds
in
dec
dec
outsb
sbb
fwait
ror
es
lds
in
xchg
mov
inc
mov
inc
dec
xchg
clc
les
mov
pop
fimull
or
cmpsl
adc
rcrl
lcall
mov
and
ret
fidivrs
popa
stos
rorb
push
test
mov
outsl
cmp
and
sub
lahf
cmp
rolb
stos
adc
jo
mov
test
xchg
sbb
data16
shrb
inc
addb
adc
sub
inc
mov
mov
push
mov
mov
inc
inc
cmpsb
sarl
clc
inc
inc
arpl
les
mov
stos
jbe
or
push
mov
push
sbb
stc
add
jae
pop
xchg
scas
add
lcall
mov
sbb
mov
popf
sarl
inc
mov
xchg
mov
rol
cli
nop
xor
dec
lock
out
xchg
cmpsb
ljmp
push
les
lods
imul
xchg
jno
xchg
xor
hlt
mov
cmc
call
aaa
or
mov
inc
lret
addb
pop
out
psllq
cwtl
xchg
cli
movsb
xor
repz
pop
add
pop
fnstsw
fistpl
js
jl
and
and
shll
nop
cmp
cmp
pop
and
enter
mov
jbe
je
or
adc
div
add
lea
out
xchg
push
ja
fldenv
inc
adc
xor
sti
sub
and
xor
shlb
stos
push
dec
push
push
pop
adc
loop
cmp
das
cmpl
bound
mov
std
mov
scas
ss
sub
insb
lcall
xor
xchg
outsb
clc
enter
in
mov
dec
sti
pop
mov
jg
repz
shrl
or
out
jnp
std
out
pop
cmp
or
enter
pop
int3
imul
out
xor
or
movsb
xor
mov
icebp
rorb
jno
es
mov
testl
or
rep
into
mov
cmp
in
scas
cltd
popa
mov
lret
in
popf
fisubrs
neg
adc
add
fisubrl
jns
push
push
fdivl
adc
pop
push
jb
mov
dec
shlb
jne
and
cmp
pop
fisubrl
lcall
ss
adc
orl
jbe
ljmp
lods
inc
mov
test
ljmp
jge
sub
adc
xchg
test
arpl
enter
xchg
ja
xor
inc
mov
add
sbb
add
jns
leave
pop
in
add
adc
mov
mov
mov
xchg
mov
gs
or
xchg
fwait
mov
and
xchg
push
pop
pop
lret
xor
add
ret
movsl
cld
ja
bnd
insb
jmp
imul
in
negl
mov
in
into
dec
imul
xchg
push
push
add
stos
nop
fldl
xor
cli
lret
sbb
add
je
cs
lea
lods
mov
jnp
mov
cmpsl
inc
mov
hlt
les
insl
xorl
dec
inc
pop
xchg
push
aaa
mov
add
dec
sbb
lret
pop
aaa
pop
test
pop
sbb
inc
mov
enter
or
xchg
imul
push
sbb
das
xchg
in
xor
xorb
inc
in
outsb
cmp
and
mov
rclb
and
out
aaa
stos
out
sub
xorb
pop
sub
push
pop
ljmp
jp
sub
cmpsl
es
movsb
int
dec
aad
inc
xchg
adc
mov
repz
shrl
push
xchg
xchg
mov
xchg
add
jae
mov
cli
jbe
or
call
aaa
subl
movsl
or
and
in
popf
jb
stos
loop
bnd
xor
fbstp
dec
or
inc
inc
inc
push
xor
imul
enter
cmp
push
out
sarb
and
ficomps
pushf
or
js
xor
jno
outsb
out
enter
fucomip
and
lcall
insl
xchg
jge
mov
imul
xor
dec
inc
scas
pop
and
loop
sbb
addr16
jecxz
inc
inc
mov
pop
ret
test
xchg
call
out
sub
in
cld
cmp
test
cmp
shl
cmp
movl
and
stos
inc
inc
in
jg
call
cmp
fst
xchg
sub
mov
adc
in
cwtl
rorl
ret
jecxz
gs
mov
test
ret
mov
mov
clc
xor
add
lahf
imul
es
cltd
add
jae
ljmp
std
add
or
ss
int
cmp
fidivrl
hlt
movsb
add
mov
pop
lcall
sub
in
or
ljmp
push
mov
or
into
sbb
lcall
jnp
dec
nop
xchg
pop
test
push
xchg
pop
outsb
xlat
int
popf
pop
syscall
add
mov
stc
fcomps
in
enter
scas
xor
mov
sub
stc
or
jp
push
popf
orb
mov
lods
lods
and
out
arpl
jbe
sub
and
lock
bound
enter
and
push
mov
divl
jae
dec
insb
push
jg
fmuls
sarl
nop
sub
mov
fisttpll
imul
popf
sub
std
and
out
add
divb
shrl
jns
pusha
mov
daa
mov
daa
xchg
dec
loope
sbb
and
fistl
cltd
adc
icebp
adc
adc
mov
rclb
negl
pop
sbb
push
enter
xchg
mov
outsb
mov
test
out
addr16
popa
jmp
addr16
movsl
pop
add
dec
imul
or
add
jo
adc
in
test
rolb
popl
pop
scas
outsb
push
mov
dec
loopnew
mov
push
cld
push
in
lahf
ljmp
push
adc
imul
mov
cwtl
movsl
push
mov
imul
loop
mov
pop
sti
sbb
cmp
jno
fisubs
mov
dec
mov
dec
fwait
mov
mov
iret
add
arpl
enter
test
test
cs
mov
adc
add
inc
xor
test
mov
add
add
jne
sbb
cli
mov
fwait
stc
and
inc
ret
out
adc
xchg
inc
movsl
sbb
and
and
sbb
jns,pn
and
mov
in
adc
repz
shr
sbb
sub
push
sbb
push
popf
cmp
cmp
fidivrl
into
psubusb
push
adc
jle
and
add
sarl
add
stos
lds
movsl
cmp
dec
inc
dec
push
inc
stc
or
iret
push
in
pusha
sub
lea
push
mov
pop
rcr
sbb
cltd
sti
stc
aad
pop
imul
inc
push
test
int
lcall
adc
test
xchg
cmc
and
mov
dec
inc
enter
pushf
sbb
jp
call
mov
or
jnp
mov
int
mov
fstps
loope
mov
fstl
lret
insb
push
mov
jg
test
jge
or
xor
pop
popa
xor
and
loopne
add
pop
mov
xor
enter
das
rorb
push
test
ret
aad
pushf
scas
std
decb
mov
lret
movb
pushf
in
ret
cmpsb
lods
mov
les
mov
sbb
data16
scas
jp
xchg
sti
mov
aaa
cmpsb
into
pop
ss
lods
imul
adc
or
sub
cmp
mov
roll
mov
jo
adc
inc
mov
fs
mov
inc
cmp
pop
adc
repnz
adc
dec
jbe
in
mov
jbe
xlat
pop
sbb
out
sub
call
mov
mull
lret
pop
mov
stmxcsr
loope
jae
rorb
in
inc
cmp
inc
stos
sub
mov
out
sbb
pop
in
test
sbb
mov
adc
sub
aam
cli
sahf
inc
lahf
inc
dec
jmp
and
idivl
jg
adc
push
insl
push
das
dec
xor
cmp
outsb
xorb
lods
and
test
lock
scas
cmpsb
mov
xchg
adc
cmp
test
xor
repz
test
icebp
mov
jg
fcomp
mov
in
and
pop
aam
jg
es
xchg
ret
aad
xor
ret
cmp
push
mov
pushf
fisttpl
popf
aam
lods
cmpsb
push
sbb
mov
dec
mov
xor
adc
sbb
sbb
int
jb
lds
inc
push
xor
shlb
add
inc
das
push
push
and
cltd
xor
push
jnp
cmp
cmpsl
push
jnp
dec
xchg
in
or
cmpsb
loope
je
add
xchg
int3
push
test
xor
xchg
xor
dec
cmp
mov
fisubs
mov
cmpsb
or
mov
or
jne
cmpsb
jge
inc
and
add
push
sarb
and
loop
je
insb
mov
inc
shrb
mov
pusha
call
test
push
sbb
cld
xchg
scas
add
and
pop
es
jnp
sub
fwait
das
pushf
outsl
push
cld
xor
pop
cmp
lock
push
cmp
mov
je
sub
inc
lcall
push
mov
bound
mov
lock
movsb
dec
std
sbb
lods
stc
pop
sub
std
pop
jp
mov
cmpl
adc
inc
out
mov
add
mov
inc
lahf
sbb
mov
cld
nopl
sbb
mov
aad
xor
sbb
xchg
stc
pop
and
jmp
daa
mov
add
aam
aad
out
or
push
gs
aaa
test
shlb
mov
push
sub
jl
iret
xchg
lret
adcl
xchg
or
push
dec
idivl
insb
loopne
and
push
push
cli
pop
repz
cmp
fninit
sub
pop
stc
push
sti
jbe
loopne
por
push
pop
mov
enter
lret
push
std
sub
pusha
cmp
cmpsl
push
push
roll
inc
jg
inc
sbb
jmp
mov
inc
push
enter
and
jnp
and
push
lock
popa
pop
subb
mov
repnz
movsl
jb
jno
out
movhps
dec
sar
cmp
jl
mov
cld
mov
repz
in
arpl
lds
mov
das
popfw
ds
repz
dec
cmpsb
int
in
cltd
mov
pushl
test
xchg
lcall
rolb
clc
sub
inc
mov
push
mov
jno
enter
loop
imul
lahf
loope
scas
aad
outsl
into
rcr
dec
push
mov
xchg
mov
push
mov
pop
xor
and
out
repz
hlt
mov
fldl
dec
sub
mov
sbb
sbb
push
mov
jle
jp
out
mov
outsl
or
xorb
xchg
cli
and
pop
les
andl
lock
adcl
sbb
xorl
loop
dec
fnstenv
gs
mov
and
imul
das
sahf
lahf
cmp
ljmp
cmp
pop
push
call
xor
es
in
mov
pop
test
cmp
xchg
mov
out
in
mov
sub
cmp
jne
iret
sub
pop
dec
insl
hlt
ss
sbb
cmpsl
popa
add
xchg
push
mov
gs
push
jbe
jbe
mov
mov
hlt
jmp
pop
dec
sbb
add
add
aad
loopne
lds
and
test
movsl
lea
push
lret
in
jecxz
mov
pusha
cld
loopne
in
loop
and
push
xorl
xchg
push
ret
shlb
mov
lret
in
xor
mov
sub
xchg
or
sub
jnp
xor
fs
leave
iret
cs
adc
test
fs
daa
xchg
pop
adc
insl
outsb
stos
lds
sub
lds
dec
mov
xor
inc
test
xchg
sbb
ja
push
testl
ja
sbb
sarl
dec
movsb
push
test
nop
mov
sbb
sub
and
fistpll
xchg
inc
push
wbinvd
shl
loop
lods
loop
imul
test
xchg
or
and
mov
adc
xor
mov
cltd
rclb
xchg
xor
jg
jnp
sub
imul
hlt
cld
ds
test
repnz
addb
mov
sub
add
mov
mov
xchg
add
outsl
jecxz
stc
inc
leave
pop
xchg
dec
xor
ja
sub
pop
mov
leave
push
loope
inc
pusha
sbbl
push
pop
xchg
xor
sub
aam
or
or
jae
ret
out
fldcw
push
and
mov
pop
add
jle
aad
add
sub
dec
and
mov
dec
or
and
adc
fistl
stc
jg
and
pop
cmp
push
cmp
fdivrp
mov
shlb
push
push
dec
ficoms
aas
xchg
fists
aad
jne
fwait
out
jmp
mull
jbe
sbb
jno
sub
ror
gs
cmp
add
mov
push
mov
addb
fsubrs
cmp
mov
cltd
xlat
movsb
sar
hlt
js
mov
jne
and
cmp
pop
inc
and
mov
cmp
mov
pusha
add
push
arpl
ds
sub
cmpsl
push
push
orb
push
mov
lock
icebp
int3
sub
inc
cmp
movntps
dec
pop
mov
lret
in
in
inc
mov
test
lods
and
imul
cmp
mov
hlt
std
loope
and
adc
add
insb
stos
xchg
push
sbb
negl
movsb
and
mov
out
add
inc
cmp
rcl
push
clc
sub
sti
imul
mov
sbb
mov
sbb
ja
jb
sbb
out
pop
xor
and
out
fs
aad
push
dec
movsb
insl
mov
fildll
jns
mov
fsubrl
shl
popa
sbb
stos
cmp
or
pop
cmp
out
mov
push
pop
xor
mov
outsl
mov
xor
pop
push
mov
repz
adc
loope
sbb
fisubrs
hlt
out
push
jb
inc
orl
shr
neg
jl
push
pushf
xlat
mov
sub
xor
shlb
mov
fmull
hlt
sbb
fwait
push
bnd
fstps
inc
fildll
push
mov
xchg
call
pushf
or
sub
cld
xlat
repnz
rorb
or
jne
ss
popa
xchg
or
inc
insl
mov
adc
or
icebp
je
pop
and
mov
push
adc
cmc
aam
jge
jp
and
lds
jns
cmp
icebp
test
cmc
or
cltd
push
mov
pop
pop
sbbb
lods
pop
dec
jb
imul
stc
movsb
dec
daa
hlt
aam
push
add
dec
inc
push
andb
ror
imulb
sbbb
jg
stc
ret
hlt
mov
pop
test
ljmp
test
push
arpl
xor
stos
pop
outsb
or
pop
cmp
push
lret
out
mov
and
enter
repz
sbb
mov
or
add
push
xchg
xchg
cltd
mov
cmpsl
loope
js
or
and
sub
cmpsb
jae
cmp
cs
or
mov
and
dec
mov
es
sub
ljmp
outsb
and
xor
fildl
outsl
aas
call
ds
divb
divb
pop
and
dec
lret
jo
mov
popa
cmp
aam
fisttpll
or
mov
lds
mov
dec
test
pusha
dec
mov
add
push
push
xchg
addr16
sbb
mov
inc
jbe
subl
adc
ja
test
call
imul
add
push
mov
xor
clc
mov
ret
or
data16
lahf
arpl
jle
popa
cmp
movsb
int3
ds
xor
xorl
int3
lea
add
xor
daa
cld
decb
xor
repnz
mov
iret
or
fst
out
popf
inc
lret
xlat
popa
lea
lret
and
les
mov
shl
push
push
inc
inc
shll
test
and
mov
dec
cld
shlb
ret
movsb
sbb
dec
sub
lods
out
pushf
inc
dec
push
adc
jo
sub
jl
sub
lock
iret
lcall
repnz
jne
mov
les
mov
lock
mov
push
ja
mov
int3
pop
bound
lret
push
fwait
dec
add
mov
loope
jmp
cmp
adc
jae
sbb
test
push
loopne
lods
lret
loope
sub
add
or
inc
data16
lds
ret
push
dec
pop
xor
rorb
sub
mov
ds
inc
mov
jmp
ret
add
xchg
aad
xchg
clc
jns
sbb
mov
push
mov
addr16
stos
lods
adc
test
cmpsl
insl
mov
push
mov
cmc
neg
fsubrl
sbb
lea
sbb
fldcw
add
pushf
jmp
xchg
shr
rcrl
or
jo
xchg
mov
add
in
or
cwtl
cmpsl
sbb
mov
cmp
aaa
dec
mov
mov
jge
lcall
fbstp
sub
ret
fmuls
fnstcw
stos
addr16
cmp
xorb
out
mov
sub
int
mov
xchg
push
push
dec
push
xchg
cmp
jmp
pop
in
lods
sbb
xor
dec
cmpsb
and
cmp
mov
loopne
mov
fstl
fsts
lock
loopne
and
dec
shrl
mov
or
jmp
pushf
jmp
sbb
jne
fsub
daa
push
pop
pop
push
mov
daa
inc
aad
jecxz
jbe
dec
stos
leave
fstl
jne
adc
adc
lret
lret
dec
jge
pop
or
mov
adc
push
xchg
jecxz
jno
fistps
dec
ficomps
push
cltd
fdivr
shll
ds
mov
pop
fimull
lds
adc
mov
sbb
lock
mov
mov
adc
stc
repnz
sarl
jb
loope
xorb
mov
lcall
stos
popa
add
jbe
or
xor
sti
gs
sar
mov
add
pop
test
int3
and
mov
adc
or
ss
mov
rcl
jae
dec
xlat
dec
cmp
mov
add
scas
xchg
cld
or
mov
cmp
dec
roll
adc
mov
dec
das
push
mov
jp
and
and
add
loop
movsl
xor
aam
add
ret
imul
pop
punpckhdq
neg
push
adc
pop
dec
enter
cmpsb
lock
rclb
int3
cmpsl
mov
into
popf
out
das
mov
pop
pop
sub
adc
out
lahf
and
push
iret
xchg
mov
fdivrl
xchg
sbb
push
or
fwait
sub
pop
xorl
and
js
imul
addr16
insb
or
inc
shll
xor
sub
or
sbb
xlat
or
inc
jmp
sbb
dec
ljmp
mov
lcall
out
daa
xor
mov
insb
jno
or
add
mov
sub
and
lods
push
mov
setle
ret
in
xchg
cmc
jne
jecxz
sub
inc
in
lods
mov
xor
inc
in
pop
mov
mov
sbb
lret
cmp
xchg
data16
xor
scas
pop
call
jle
push
jl
or
xlat
cmp
movsb
sbb
sub
into
lock
lods
adc
fsubrs
and
test
popa
outsb
or
outsl
mov
in
pop
stc
push
mov
xor
inc
dec
ret
mov
add
sub
mov
call
out
aas
test
xchg
xchg
das
pop
cmp
xlat
dec
jae
loope
test
xor
fcmovnbe
imul
cmpsb
push
sbb
jns
clc
dec
js
test
jle
jp
das
je
dec
and
mov
sti
push
scas
xchg
test
pop
add
sbb
jne
cmpsl
or
enter
jno
or
inc
clc
daa
push
jl
sahf
addl
add
add
dec
adc
aam
icebp
mov
xchg
cmp
add
ljmp
dec
imul
stos
jno
scas
push
popa
lea
push
pop
or
inc
lds
clc
pop
inc
sub
cmp
cmpsb
icebp
subb
pop
xor
or
outsl
mov
pop
pop
jl
and
cwtl
push
pop
repz
mov
pop
bnd
push
in
dec
xor
fstps
das
xor
mov
fiadds
call
idivl
push
inc
mov
outsl
outsb
psraw
ret
push
push
sbb
xor
sub
xorb
loopne
mov
loop
mov
in
movsl
gs
mov
xor
scas
inc
and
in
out
nop
fistpll
mov
test
mov
mov
arpl
jmp
and
rclb
jp
fldz
enter
mov
dec
cmpsb
lret
xchg
fmull
adc
inc
dec
and
dec
xor
lea
cltd
sbb
push
loope
js
sbb
mov
push
iret
inc
out
fcomip
jb
dec
scas
sbb
adc
mov
sub
adc
pop
push
jb
orl
imul
or
inc
scas
jbe
adc
scas
jl
sarb
mov
imul
sbb
adc
sbb
sub
gs
es
ficompl
mov
into
repz
push
mov
cltd
stos
dec
js
pop
pusha
push
dec
pop
inc
dec
jns
sub
dec
mov
cltd
test
xor
in
mov
call
adc
mov
shll
mov
pop
and
sti
nop
push
push
mov
lds
adc
lea
mov
adc
sbb
sub
int
mov
and
xchg
sub
dec
ret
or
lods
xchg
mov
loope
outsl
stos
movsl
inc
or
pushf
push
inc
mov
xor
dec
fldl
lea
xor
or
jne
pop
nop
into
cmp
xchg
aad
imul
mov
xor
orb
and
ss
aaa
or
iret
xchg
popf
jg
shrb
sbb
ljmp
xchg
cmc
popa
lods
icebp
xchg
js
jbe
cltd
mov
test
jne
fcos
daa
adc
in
in
jnp
in
jb
mov
mov
mov
inc
stos
xchg
repnz
mov
aam
xchg
cmp
aad
mov
mov
aad
push
in
jle
jb
dec
dec
shll
adc
insb
in
test
dec
repz
add
jmp
push
push
lea
mov
dec
xor
jge
insl
mov
or
and
lahf
enter
mov
mov
push
jge
mov
mov
outsb
sbb
pop
mov
outsb
and
mov
pop
into
sub
push
xchg
push
nop
std
mov
pop
mov
jmp
mov
les
mov
inc
cli
inc
xor
lea
std
lcall
ja
das
adc
stc
adc
ret
lret
push
ja
fcmovbe
mov
push
lcall
and
lahf
xchg
pop
mov
pop
or
test
rcrb
xchg
inc
cmp
or
inc
push
lahf
mov
jae
cmp
jb
mov
push
sub
pop
push
in
and
xlat
adc
xchg
sub
mov
mov
lds
movsb
mov
dec
mov
pop
mov
or
jae
es
cmp
das
mov
push
push
mov
push
xchg
xchg
pop
push
push
inc
stos
sub
mov
fmuls
mov
iret
sub
testl
lds
jmp
sub
sub
jl
imul
fwait
and
sub
mov
testb
mov
iret
inc
bound
jno
out
sbb
dec
mov
out
out
stc
dec
jno
mov
xlat
cld
add
lods
mov
or
mov
cmp
js
jbe
xchg
scas
lods
adc
fsubl
inc
sub
cmp
inc
pop
imul
loopne
sti
inc
mov
add
adc
or
out
pop
push
sub
pop
cmp
fmuls
xlat
aaa
aaa
push
jne
test
push
aaa
in
lcall
stos
add
jbe
icebp
out
push
sti
les
inc
inc
sar
pop
adc
dec
push
inc
push
cmpsb
adc
dec
ja
cltd
dec
aaa
out
mov
ds
inc
mov
out
inc
mov
mov
xor
inc
fsubrs
leave
cmp
xchg
jmp
loopne
sti
addb
in
filds
mov
mov
cld
sbb
pop
push
and
xor
lret
push
rolb
pop
mov
repz
aaa
cmc
sub
jmp
testl
push
fs
jge
jae
dec
loope
mov
and
push
test
adc
aad
pop
sbb
int
add
xor
mov
xor
loop
aam
xchg
loopne
imul
mov
mov
ljmp
loope
jne
or
xchg
pop
add
xor
js
out
push
adcl
cli
push
sub
ljmp
push
lock
push
repz
jecxz
dec
in
sarb
lret
insl
or
lret
pop
mov
ja
inc
push
out
sbb
test
xchg
pop
mov
fidivrs
mov
roll
nop
or
push
xor
cmpsl
pusha
mov
xchg
add
xchg
add
nop
cmp
aam
int3
xor
into
inc
dec
dec
dec
out
adc
pop
mov
sub
ret
cmpsb
xor
nop
mov
clc
jecxz
sahf
arpl
cmpsb
stos
cltd
jmp
lcall
je
adc
inc
insl
out
outsb
cmpsb
add
and
outsb
fstps
xlat
pop
gs
or
fdivs
lcall
test
loope
push
in
cmc
fs
push
xor
testl
add
inc
sub
adc
aad
fs
addb
stc
pop
pop
jmp
pop
cmp
and
sub
pop
sahf
scas
add
sub
cmpsb
gs
xchg
sbb
pop
push
test
enter
mov
in
dec
sarl
fisttpll
or
inc
test
jp
dec
mov
nop
fadds
mov
lahf
lods
lcall
call
cwtl
mov
push
stos
inc
int
ljmp
mov
bound
adc
add
dec
and
shl
pusha
and
fsts
dec
or
cmp
sbb
loopne
rol
shlb
loopne
in
popa
mov
or
lock
xor
ds
movsb
pop
xor
lea
mov
mov
std
test
lcall
loope
xorl
jns
sarb
addr16
pop
xchg
pop
xchg
addr16
rclb
mov
jge
mov
mov
dec
daa
iret
add
dec
addb
fcoml
shll
or
cmp
out
leave
test
inc
aad
sub
mov
arpl
ffreep
data16
xor
dec
roll
loope
cmp
xchg
inc
add
sti
aam
hlt
daa
lods
adc
sub
bound
mov
dec
in
out
testb
sbb
mov
stos
adc
movsl
sbb
sub
lods
mov
adc
mov
dec
stos
mov
outsl
jg
lret
loop
pop
imul
int
test
cltd
mov
aaa
xchg
or
das
mov
sbb
movsb
lret
inc
mov
fcmovnb
mov
sub
xor
jl
dec
insl
sbbl
jo
imul
cmp
add
sbb
and
and
test
dec
mov
scas
daa
cwtl
fiadds
in
mov
push
lcall
fldt
push
xorl
lods
and
std
lds
xchg
dec
ja
jg
jge
repz
inc
sar
pop
fstpl
icebp
jb
push
cs
stos
lcall
push
fdivr
or
push
dec
es
fcoms
negb
cld
lock
js
ja
call
mov
mov
sub
sbb
inc
xlat
loopne
jb
jl
cmp
dec
or
adc
jle
xor
scas
or
adc
lock
cmp
mov
imull
adc
jmp
cltd
int3
and
mov
xor
sub
divl
push
daa
xlat
jge
xchg
pop
cmp
rcll
xchg
mov
das
arpl
jle
mov
aad
ret
adc
hlt
call
add
mov
jo
iret
jbe
cmp
sbb
in
pop
inc
inc
movsl
out
add
cltd
push
or
nop
jle
into
popa
xchg
push
pop
rcl
inc
lahf
pop
xor
jno
scas
dec
xchg
xchg
rolb
js
jno
push
incb
jmp
pop
adc
pop
repz
lock
mov
xchg
ljmp
imull
cmp
rolb
fdivl
cmpsb
in
jge
fadds
sbb
push
adc
jae
test
neg
fisubs
push
jno
ja
adc
loopne
sbb
orb
add
leave
test
mov
mov
jle
inc
cmp
sbb
rcll
into
pop
es
imul
cmp
add
adc
jbe
cmp
or
fstpl
xchg
jmp
mov
ss
push
jl
adc
mov
and
hlt
lahf
push
into
xor
mov
or
popa
add
outsl
and
or
rcll
fwait
push
cld
shll
cmpsl
fnstenv
int3
add
inc
scas
push
cmc
mov
jl
iret
scas
lret
push
insl
repz
adc
clc
call
mull
out
adc
outsb
mov
dec
sbb
sub
roll
addr16
push
pop
jecxz
jns
lock
jne
popf
xor
test
cmp
out
dec
call
stc
adc
jbe
cli
out
mov
lds
call
out
dec
mov
clc
pop
pop
ljmp
ljmp
outsb
mov
dec
sub
incl
mov
sarl
push
cmpsb
jb
xchg
insl
xchg
addb
cmc
rcll
xchg
popa
pop
cmp
pusha
sub
xchg
int
mov
push
sbb
push
mov
push
jmp
test
aaa
ja
jae
or
fiadds
ljmp
subl
stc
outsb
rcrl
mov
xchg
iret
aad
mov
sub
negl
cmp
mov
in
lea
mov
repz
mov
mov
loope
outsl
ret
decb
push
cmp
movsb
stos
lds
ret
mov
inc
mull
pop
cmpsb
jbe
push
jbe
test
test
add
sub
out
mov
imul
adc
fisubrs
dec
outsb
jo
mov
adc
mov
sbb
out
jne
lret
lret
mov
jno
pop
xor
lret
adc
dec
incl
scas
je
gs
nop
jg
pop
pushf
dec
dec
notb
push
push
popa
lods
xor
outsb
pusha
xchg
out
push
jg
adc
test
lea
cltd
and
jmp
cli
cld
mov
filds
mov
mov
mov
adc
jnp
pusha
and
stos
ret
inc
cmp
and
aad
xchg
sub
fs
cld
inc
leave
test
sbb
pusha
mov
lds
aad
adc
nop
or
xchg
mov
js
mov
cmpsl
or
out
mov
push
jno
stos
orb
stos
stos
testb
mov
pop
in
fwait
loopne
jmpw
mov
jle
push
mov
jl
mov
sub
sub
xchg
pop
pop
mov
mov
ficomps
pop
mov
leave
mov
ss
ljmp
cs
dec
sub
sahf
jg
fldl
jp
jne
mov
hlt
stc
pop
out
outsb
jecxz
xchg
pop
dec
les
push
sbb
xchg
pop
inc
rol
jle
add
xchg
lea
leave
fiaddl
xor
test
lahf
or
inc
push
test
stos
out
adc
mov
nop
xor
mov
leave
inc
dec
in
sbb
imul
adc
fwait
into
dec
popf
dec
cmc
das
enter
sub
sub
jno
fisubl
daa
or
jo
xlat
insb
lret
hlt
loop
imul
fs
sub
dec
cmp
clc
push
addr16
push
adc
dec
cmc
dec
cmp
aaa
dec
mov
daa
sbb
stos
int3
dec
pushf
call
adc
insl
popf
jb
loopne
scas
loope
mov
and
in
sbb
jo
mov
cmc
mov
sub
test
dec
lock
ss
test
cltd
setne
outsb
xor
sbb
xor
jns
movsl
inc
dec
pop
bound
sbb
lds
fimull
mov
push
lahf
mov
sbb
mov
lea
cs
iret
xchg
fidivrs
aam
aad
pushf
sti
insl
inc
nop
xchg
out
call
push
push
sti
out
and
lea
xchg
sbb
dec
repnz
mov
pop
push
or
mov
cwtl
mov
or
mov
in
xor
in
jne
lret
pusha
cltd
xchg
mov
xchg
movsb
pop
es
leave
aam
jb
cmpsb
js
sahf
pop
outsl
pusha
xor
mov
dec
cli
addr16
sarb
sbb
in
rcll
jae
sahf
xchg
int3
xchg
cwtl
jae
jg
push
cld
cmp
mov
repnz
adc
inc
pusha
fwait
xor
outsb
jge
bound
mov
loope
imul
jg
xchg
aad
lea
pop
and
not
mov
xchg
lcall
mov
xchg
mov
aad
stos
pop
lds
lods
movl
xor
js
and
aam
xchg
sbb
test
notl
and
cmp
imul
shrb
arpl
xor
mov
shrl
mov
push
jl
bound
ret
cli
xor
rcll
lods
cmpsl
insl
xlat
lods
gs
pop
ret
cwtl
fistpll
icebp
mulb
cltd
shl
jne
xchg
pop
cmp
push
repnz
mov
adc
xor
test
movsl
hlt
mov
mov
adc
adc
imul
fwait
jns
jae
dec
lahf
xor
or
fldcw
cmp
jno
aam
xor
cmpl
into
loopne
add
popf
popf
dec
mov
inc
push
jl
jmp
aaa
pop
out
je
fdivs
mov
aam
sub
inc
xor
mov
out
mov
jbe
push
xchg
mov
jnp
pop
adc
cwtl
dec
push
xor
push
pop
popf
mov
scas
scas
jbe
ss
mov
mov
xchg
lret
dec
scas
aam
das
jl
pop
loopne
mov
scas
xorl
pop
jecxz
loop
cmp
mov
out
loopne
add
pop
inc
hlt
imul
push
in
fcomi
xorb
out
cmpsb
test
ret
sbb
fldcw
jl
lret
dec
aaa
or
cmp
scas
movsl
sub
jno
sub
xor
mov
cmp
fs
push
sbb
in
pop
ret
pop
cld
xchg
inc
leave
mov
ja
jmp
js
lods
and
fs
movsl
cmc
add
jnp
or
rorl
dec
push
jae
and
adc
xor
out
ljmp
push
cmp
cld
push
pop
ja
popa
mov
sti
jno
fistps
scas
sub
scas
sub
aas
add
adc
pop
gs
pop
sbb
shlb
popa
mov
mov
sub
iret
popa
orb
addr16
test
es
movsb
mov
in
dec
sub
xor
adcl
test
sub
jno
inc
xlat
das
xchg
ljmp
sbb
adc
cmp
test
sbb
dec
push
in
add
cli
xchg
aad
mov
in
mov
lds
leave
and
sub
fxch
push
out
xchg
xchg
inc
sub
xchg
add
push
inc
imull
insb
insb
adc
aam
out
adc
sarb
test
lods
sarl
repz
jnp
push
in
add
popf
mov
dec
fneni(8087
add
pop
push
sub
inc
fldl
addb
cmpsl
jmp
les
mov
sbb
inc
lods
sahf
rcr
leave
andb
or
cmp
scas
call
loope
and
mov
mov
clc
out
cmp
out
arpl
xor
adc
dec
ljmp
mov
sub
movsl
pop
fxch
cs
lock
addr16
out
dec
add
xchg
push
inc
scas
stc
das
jnp
testb
or
pop
inc
jnp
movsb
test
insl
push
in
lods
nop
sti
mov
mov
mov
or
das
xchg
ret
xchg
and
cmc
test
jl
ds
push
ficoms
hlt
xor
out
sarb
pop
into
cwtl
push
mov
xor
sub
gs
xchg
xchg
cmp
and
sub
fwait
into
int
mov
cmp
jnp
pop
repz
fimuls
inc
mov
add
cmp
inc
dec
dec
fidivrl
xchg
pop
cwtl
test
popl
aaa
dec
sti
ror
jmp
xor
stc
sub
xor
jle
mov
inc
in
add
fld
push
movsb
xchg
movsl
adc
inc
dec
xchg
cld
pop
fldcw
push
lods
or
cmp
leave
dec
scas
out
or
rorb
mov
js
push
inc
insl
push
push
push
xor
xchg
sub
mov
dec
enter
test
outsl
add
push
jp
lds
pop
pusha
test
testl
mov
add
int3
repnz
mov
cmp
andl
adc
mov
xor
cmp
icebp
xchg
test
xlat
pop
imul
jg
add
pop
push
sti
mov
and
jne
adc
sarl
pop
adc
xchg
push
pop
clc
orl
cmp
pop
adc
pop
shr
hlt
cmp
pop
inc
cmpsl
mov
adc
jae
mov
and
pop
adc
cmpsb
inc
gs
xchg
xor
fistps
jnp
je
sbb
test
jne
cltd
cmpsl
or
hlt
dec
adc
out
pop
sahf
rol
arpl
jmp
inc
clc
xchg
test
inc
sub
push
cmp
out
pop
lods
scas
aaa
out
testb
dec
sub
and
push
daa
and
aas
inc
stos
sbb
cmpsb
jbe
push
test
cmc
add
lahf
inc
movsb
sbb
sub
jo
mov
mov
lock
xor
add
out
sub
cmp
sbb
aam
cmpb
dec
ret
mov
mov
push
loope
cmp
ljmp
and
push
mov
ss
adc
xor
data16
fnstcw
ss
xor
inc
mov
xchg
imul
int3
cmp
push
mov
in
cmp
xor
loop
dec
ds
sarl
xor
lods
shrl
dec
pop
andb
cwtl
mov
mov
add
and
add
enter
cmp
push
dec
inc
cwtl
insb
xchg
jns
sub
adc
xchg
mov
mov
jl
sub
sub
dec
in
push
fisttpll
lahf
fisubs
int3
add
mov
xor
mov
pop
rclb
jg
mov
or
adc
es
jno
mov
das
push
add
mov
arpl
pop
clc
inc
loop
mov
clc
and
mov
adc
sbb
out
pop
aaa
jne
jmp
fimull
cld
push
lods
pusha
fs
lea
test
sub
jns
mov
lea
push
and
jae
cmpsb
scas
or
rcll
push
mov
fsubrp
rclb
pop
lcall
fiadds
lods
pop
xor
sbb
pop
jnp
or
jmp
sbb
loop
sbb
outsl
mov
pop
mov
sub
lret
fstl
pop
push
mov
adc
fidivl
out
jne
sahf
xchg
cmp
pop
mov
push
test
roll
aam
ja
mov
dec
xor
mov
lret
js,pn
inc
add
sbb
add
aam
jo
jns
add
add
js
fadds
mov
loopne
icebp
dec
stos
xchg
dec
ret
jge
inc
flds
and
dec
add
stc
add
iret
xor
mov
insb
jecxz
es
jecxz
int3
mov
xchg
stos
add
lods
cmpsb
xchg
pop
jmp
mov
iret
rorb
xor
push
and
mov
sub
adc
sub
jb
lock
test
jo
cld
jl
mov
push
clc
mov
push
and
mov
std
decb
jae
jo
mov
mov
or
or
inc
fisubl
in
xor
aam
aaa
push
subb
out
xchg
mov
arpl
stc
aad
int
sub
pop
inc
jno
dec
xchg
mov
fdecstp
mov
jb
sbb
cmp
inc
outsb
cmpb
jp
les
sti
stos
scas
xchg
aas
mov
scas
jo
inc
out
jg
bound
inc
ret
adc
dec
push
notl
shll
ret
jbe
cmpsl
xchg
test
bound
cwtl
shlb
lret
mov
popf
lock
and
ja
fstps
sbbl
mov
jl
lods
movsl
or
xchg
jecxz
rsqrtps
jl
out
sahf
mov
out
loopne
out
pop
cld
pop
imul
or
inc
xor
xchg
fs
mov
hlt
jg
stc
sbb
lcall
int
and
adc
mov
and
aas
jle
cmpb
mov
push
mov
adc
outsb
sub
pop
cmpsb
jl
cmp
rcrb
arpl
jbe
mov
xchg
ds
add
jge
mov
pop
jae
jne
loopne
lret
aad
lret
mov
xchg
jg
or
jp
xchg
push
jl
cmpsl
cli
adc
lods
inc
popf
mov
sub
ljmp
jo
mov
pusha
jecxz
fwait
pushf
std
clc
push
xchg
sete
cld
sbb
in
cmp
mov
popf
stos
enter
dec
roll
mov
mov
xchg
lods
jmp
jp
lret
or
adc
cmp
mov
inc
loopne
out
cld
cmp
push
dec
test
mov
sti
roll
pop
pusha
sub
xorb
pop
cmpsl
fpatan
add
xchg
mov
stos
mov
mov
mov
loopne
sub
jle
leave
cltd
or
shll
mov
fadds
mov
sub
fisubs
das
xchg
lock
mov
icebp
rolb
lds
lods
add
mov
cwtl
mov
push
in
arpl
cmpsb
mov
adc
push
dec
cs
int3
or
adcl
test
or
outsb
gs
loop
rorb
inc
scas
lods
and
arpl
out
pop
stc
stc
mov
fwait
pop
or
pop
push
dec
cmp
mov
popf
mov
cmp
lea
ss
pop
mov
into
lcall
imul
xchg
arpl
dec
xchg
sub
jb
pusha
cwtl
mov
mov
push
mov
ljmp
cmpsw
mov
dec
mov
xchg
test
or
aad
mov
xchg
popf
xchg
inc
movsb
add
xor
aaa
xchg
scas
jecxz
insb
mov
lods
bnd
lods
pop
mov
incb
inc
icebp
lock
sbb
xor
sub
jno
inc
sti
sub
scas
push
inc
test
xor
pop
rcl
leave
insb
jmp
jne
adc
inc
mov
lds
movsl
pop
scas
and
lahf
xlat
mov
sub
lahf
push
data16
movsb
out
pushl
aas
stos
xor
pop
xchg
cmc
mov
cmp
out
test
xchg
inc
jecxz
fidivl
mov
cld
xchg
cmpl
jp
or
push
cmp
es
pop
test
and
dec
add
sub
sbb
push
lds
and
adc
dec
rorl
orb
jbe
xor
push
dec
xor
int
adc
jne
in
mov
daa
outsl
xlat
xor
jmp
fstpt
dec
outsb
push
aaa
push
push
outsb
aas
addl
jae
call
or
xchg
push
gs
or
lcall
mov
cmp
adc
aam
sbbb
adc
roll
inc
scas
pop
xor
out
subl
out
and
lahf
int3
jae
sbb
scas
pushf
lea
pusha
mov
xlat
pop
fdivrs
mov
xchg
loop
and
fidivl
add
pop
xor
jle
dec
cmp
pop
stc
outsb
add
mov
jne
inc
cmp
mov
xchg
flds
popf
fdivl
xchg
int3
pop
ja
insb
daa
pop
cmc
xchg
push
xchg
mov
mov
pop
repnz
mov
mov
mov
mov
inc
cltd
pop
adc
int3
dec
notb
jmp
inc
in
xor
ret
xchg
sar
arpl
or
es
clc
inc
and
pop
inc
jbe
ret
pusha
in
and
xlat
push
mov
subb
je
adc
sub
mov
cmp
stc
fildll
xchg
mov
gs
aam
mov
xchg
dec
in
sbb
lods
clc
or
out
mov
cmpsb
sahf
mov
add
adc
dec
adc
lret
pop
int
in
or
test
imul
shll
push
outsl
inc
imul
lea
push
imulb
gs
mov
divps
sub
mov
jo
addr16
mov
rclb
or
popf
daa
mov
jns
test
sub
dec
pop
mov
aaa
mov
pop
popl
dec
pushf
fscale
dec
test
or
sbb
lahf
flds
xchg
cmpsl
pop
test
jno
lods
lea
inc
sub
inc
not
stc
ret
cmp
mov
mov
xor
pop
je
xor
mov
pop
aam
fdivs
jns
test
lods
imul
mov
dec
jno
cwtl
in
dec
or
iret
cmpsl
incb
pop
call
adc
xchg
mov
nop
je
xchg
js
loope
dec
or
add
aad
dec
sub
and
pop
popf
mov
cmp
push
push
or
rcrl
imul
imul
add
add
sbb
add
sub
fs
jecxz
int3
lods
testb
pop
mov
fsubl
mov
call
and
and
es
mov
mov
xor
adc
popa
shrl
mov
pushf
addr16
mov
add
xor
mov
push
jnp
fs
add
xor
cltd
lret
out
push
fildl
jle
or
stos
cmp
fwait
and
sub
push
inc
jmp
dec
inc
cmp
and
cmp
add
or
or
movsb
lock
adc
xor
in
hlt
in
mov
push
incb
lods
pop
ljmp
ljmp
adc
or
add
mov
popf
cmp
cli
mov
stos
inc
mov
shrb
jg
mov
and
negb
fisttps
mov
fchs
or
xchg
or
in
stc
call
scas
das
mov
dec
push
in
sarl
mov
das
xor
fdivrp
mov
xchg
les
mov
movsl
or
das
fld
cltd
pop
cmp
push
mov
loope
and
mov
jbe
addr16
add
xor
pop
cs
int3
or
pushf
pop
xchg
gs
inc
push
push
or
std
lods
inc
lret
jbe
outsb
popf
test
dec
inc
lea
shll
fldcw
push
push
push
pop
push
jle
mov
cmpsl
cmp
out
push
clc
adc
fmul
jecxz
ficoml
mov
pop
je
sarl
push
sti
sti
cmpsb
jo
cmp
fists
imul
pop
bound
imul
cltd
mov
jmp
imul
push
loope
mov
iret
mov
repnz
fsincos
loopne
sbb
inc
pop
push
pop
cld
mov
ret
je
pop
xor
jns
add
in
mov
jge
sub
push
insl
test
cmp
dec
add
xchg
jmp
adc
dec
iret
xor
sbb
cmp
push
sub
add
pop
ret
pop
daa
je
and
iret
cwtl
mov
xchg
push
pop
xor
jp
push
fsubr
aam
cltd
ja
jl
shl
mov
dec
gs
jecxz
test
test
sub
hlt
or
icebp
inc
jmp
stos
stos
and
xor
push
or
or
cmp
call
mov
and
inc
data16
or
push
call
test
inc
scas
jno
xchg
in
arpl
jo
mov
mov
test
ss
xchg
les
nop
fsts
jnp
lds
mov
or
fwait
inc
dec
repz
lock
fs
or
into
fidivs
loop
pop
movsb
and
aas
push
mov
mov
mov
push
hlt
xorl
sbb
mov
mov
mov
jne
stos
icebp
xor
adc
jge
in
mov
pop
imull
test
lds
sbb
mov
mov
jo
fdivr
sub
leave
mov
mov
ljmp
dec
sub
push
ds
push
sub
add
xchg
in
mov
mov
push
mov
adc
fsubrl
push
push
cld
in
and
inc
mov
inc
ret
sbb
fcompl
pop
rcr
jae
icebp
fimuls
cmc
sti
stc
sbb
jae
push
mov
push
out
arpl
rcl
or
pop
inc
xchg
in
out
xor
loop
jge
hlt
pusha
dec
xor
add
mov
test
sub
dec
fcomi
out
or
fisttpl
jbe
pop
mov
xor
test
add
scas
andb
adcl
lea
mov
dec
pushf
insl
out
or
inc
loope
push
test
pop
dec
fsubrp
xor
and
nop
add
jmp
test
jne
sub
jge
or
psubd
xor
faddl
mov
ljmp
cmp
sub
xor
paddsw
cmp
adc
sbb
jp
bound
out
fucomip
mov
in
jmp
jns
lods
ss
movsb
aam
cld
fwait
inc
ror
or
cltd
xchg
and
push
ds
dec
adcb
mov
stos
dec
in
loop
je
jb
add
cmp
into
adc
fbstp
insl
xchg
cmp
mov
xchg
fcompl
cmp
pop
scas
test
mov
mov
sbb
cmp
shll
mov
out
cs
enter
xchg
push
cld
push
jns
leave
mov
loope
aaa
cmp
pop
xlat
push
addr16
js
lea
mov
clc
rolb
or
cmp
adc
inc
and
cmp
and
into
dec
cmp
xor
dec
jge
jnp
pushf
rolb
pop
push
inc
imul
push
dec
rclb
sbb
and
cmc
xchg
int
bound
dec
shll
sti
dec
movsl
jbe
jp
cmp
fnstsw
dec
mov
dec
add
cmpsl
xor
movsb
jge
dec
push
dec
ds
pop
lcall
andb
jno
into
dec
pop
arpl
icebp
repnz
leave
fcmovnbe
cmp
ret
rcrb
cmp
xor
mov
shll
push
dec
addl
ja
jge
fcmove
jo
enter
sub
es
dec
cmp
add
jo
pop
sbb
imul
aad
insl
pop
cwtl
push
push
loope
das
out
xchg
call
adc
das
repnz
push
cmc
shlb
aaa
push
std
mov
mov
fwait
pop
ljmp
dec
insb
inc
out
or
pusha
pop
int3
test
or
ror
ja
mov
aam
mov
jmp
sahf
nop
aad
aad
lods
repz
pushf
aam
sub
pop
fdivr
cltd
subl
xchg
insl
pop
movsb
popa
je
dec
mov
clc
cmc
mov
mov
add
cmp
xchg
std
push
pop
sahf
sub
notl
xchg
push
add
fs
rolb
cwtl
jle
cmp
das
and
ret
pop
inc
cmp
pop
mov
lret
cmpsl
int
gs
and
test
out
sbbb
add
jge
sbb
lea
pop
dec
sub
pop
fnsave
cmpsb
ss
and
cmp
les
in
add
in
adc
sbb
loope
scas
xchg
movsl
pop
sub
mov
jle
inc
push
add
fs
rcrl
shr
sbb
sub
movsb
ret
pop
push
mov
dec
fistl
sbb
lock
xchg
data16
xchg
xchg
fmull
gs
and
push
dec
xor
stos
cmp
lods
fwait
or
push
ss
inc
std
pop
imul
enter
jns
adc
sbb
aaa
aam
cmp
mov
imul
mov
scas
and
rcr
cmp
sub
xor
decl
pop
sbb
sahf
xchg
repnz
sub
cmpsb
aam
enter
hlt
sbb
cmpl
and
popf
stc
loop
incb
les
iret
xchg
into
mov
stos
aaa
cltd
mov
rorb
ljmp
push
push
and
loope
cmp
and
negb
jnp
xchg
in
or
sahf
cwtl
adc
inc
adc
xchg
pop
ds
add
mov
lcall
fcmovu
xor
xor
xor
iret
push
mov
jno
shrl
fnstcw
fnstcw
iret
les
inc
sub
lods
lcall
push
mov
pop
std
push
xor
ljmp
les
and
and
or
fbld
in
pop
lahf
pusha
sbb
insl
aad
sti
aas
jb
cld
dec
mov
ret
add
sbb
and
xchg
sahf
xchg
hlt
dec
out
nop
outsb
push
push
push
cmpsb
stos
lock
insb
fwait
stc
sub
pop
int3
jle
faddl
xor
lea
or
jl
inc
sbb
pop
mov
lods
sub
sti
sarb
jae
mov
shl
ret
xchg
fdivs
cwtl
adc
mov
mov
lret
or
push
jnp
sbb
or
imul
pop
jg
and
icebp
scas
inc
fsts
mov
out
insl
cmp
mov
test
dec
insl
inc
test
push
lret
fisubrl
ljmp
pop
and
adc
and
dec
cs
clc
push
test
mov
push
add
test
sti
mov
or
bound
cmp
pop
cmp
icebp
xorl
in
xor
filds
xchg
inc
adcl
ja
and
pop
mov
push
insl
dec
sar
sahf
ficoml
bound
std
or
rclb
dec
lahf
hlt
gs
xchg
sub
push
add
sub
push
or
lahf
cltd
push
push
inc
repnz
push
mov
hlt
jle
xchg
inc
sbb
cli
push
addr16
jo
inc
xchg
call
aas
sbb
int3
push
mov
push
aam
loopne
pop
int
jne
cmc
jae
push
imul
fwait
xor
sub
pop
stos
add
loope
jae
aam
jne
cmpb
jb
xor
pop
cmovl
xor
scas
cli
call
in
inc
loopne
loop
pop
negl
int3
std
in
std
inc
hlt
cmpsl
loope
cmp
movsb
filds
sti
xchg
test
mov
lods
arpl
xchg
sbb
rcll
adc
push
aad
add
aam
adc
sbb
popaw
popa
jo
jp
push
repnz
imul
subl
xchg
push
pushf
jmp
push
or
xchg
mov
xor
imul
lods
and
mov
or
pop
mov
cltd
in
pop
stos
sti
scas
mov
mov
mov
cwtl
lods
push
dec
rorb
mov
imul
push
fstpt
and
dec
add
adc
icebp
inc
mov
inc
stc
sti
sbb
js
cltd
hlt
js
leave
or
fistpl
xchg
add
pop
fsubp
adc
std
pop
aaa
rorb
aas
fwait
mov
dec
mov
fistpll
and
into
ja
and
cli
das
sub
into
loop
adc
repz
adc
and
aas
mov
jl
inc
ret
xlat
lods
aam
js
repz
sti
add
adc
outsl
and
adc
aam
es
inc
mov
and
in
jne
cmpsl
ret
inc
push
xchg
push
xlat
dec
mov
loopne
insb
dec
int3
pop
push
mov
stos
jp
xor
sbb
mov
xor
push
das
sub
pop
sub
dec
mov
inc
mov
ds
aaa
add
jge
mov
xlat
lret
imul
dec
inc
jo
jg
aad
jo
adc
popa
loop
shrl
mov
nop
inc
adc
test
in
push
loop
cltd
jbe
sub
lahf
xchg
lret
repz
jo
pop
xlat
es
test
out
sbb
xchg
out
lahf
out
lods
mov
adc
push
imul
mov
push
jmp
mov
dec
jns
xor
movsl
fcomps
cwtl
lock
inc
and
or
jl
js
divl
sahf
clc
add
jle
stc
leave
sub
scas
mov
jle
and
adc
sbb
je
add
pop
int3
pop
dec
bound
mov
xor
mov
aas
mul
sub
inc
mov
add
enter
cwtl
fimuls
adc
movsb
pop
mov
push
cwtl
aam
mov
lret
inc
test
mov
or
jne
movsb
sti
xchg
dec
push
ds
repz
sbb
adc
daa
rcrb
mov
or
outsb
orl
insb
cwtl
fnstenv
mov
roll
push
enter
jg
xchg
mov
imul
xorl
jno
jge
jb
xchg
jge
and
push
cmp
imul
aaa
jnp
jle
sbb
adc
mov
adc
mov
mov
aam
jns
inc
int
pop
push
inc
jl
pop
jno
enter
pop
aam
icebp
inc
pop
data16
movsb
je
test
insl
aaa
js
xchg
fcmovu
jnp
cmp
call
fdivs
cmp
hlt
mov
pop
into
and
xchg
sti
jmp
sbb
iret
in
xor
jge
shl
xor
add
cmp
mov
cmp
lods
sub
jecxz
adc
cs
xlat
das
mov
outsb
testl
cmp
cmpsb
xchg
ffreep
ret
jmp
ja
inc
xchg
lock
movsl
test
jg
xor
adc
adc
mov
in
cmp
pop
negb
mov
out
xchg
shlb
push
ret
in
call
ss
sub
popa
sbb
clc
cld
add
push
test
sbb
popf
test
fcmovnb
lret
pop
adc
mov
add
jno
add
in
ret
push
xor
fdivl
mov
pop
loope
adc
push
aad
test
loope
pop
ds
mov
lods
icebp
sub
xchg
shlb
scas
add
xor
push
out
lret
xor
cmpsb
xor
std
pop
push
mov
js
enter
add
cmp
inc
mov
sbb
cwtl
and
pop
subl
call
mov
test
mov
aaa
std
loop
lds
xor
jnp
mov
xchg
aad
jg
stos
div
lret
sub
decl
add
ds
jae
pop
add
pop
cmpsl
inc
inc
pop
fmull
cwtl
adc
pop
pop
xchg
and
outsb
mov
test
fldt
adcb
int3
mov
les
mov
xchg
into
jns
xor
dec
fildll
ljmp
xor
or
into
pop
jmp
inc
jb
mov
mov
adc
mov
jge
das
movsb
mov
and
xchg
cmpb
adc
das
daa
cltd
rorl
out
jns
jg
lds
out
fnstcw
out
mov
mov
test
pop
xchg
sahf
stos
js
shrb
mov
rolb
int3
dec
push
mov
mov
int3
push
mov
insb
ljmp
jl
adc
pop
fsub
aad
push
pop
mov
pop
add
xchg
or
scas
mov
js
add
idivl
test
fsubrl
lret
xchg
call
xchg
or
sbb
popa
adc
pop
xor
push
cld
xor
and
repz
jge
mov
adc
stos
sub
push
icebp
lret
lret
push
pusha
add
add
fidivrs
sbb
push
js
inc
shlb
sbb
inc
inc
ja
ljmp
or
jae
leave
jns
js
rcr
das
scas
dec
inc
adc
mov
repnz
sahf
movsl
xchg
add
scas
scas
adc
lcall
rorl
insb
xor
js
xlat
ret
dec
jmp
insb
inc
test
insb
adc
fucomi
out
jl
inc
jae
push
add
inc
cmp
mov
repz
xlat
and
and
mov
pusha
lcall
das
mov
push
nop
or
adc
int3
jae
scas
add
es
imul
jb
adc
pop
dec
add
stc
rorb
bound
daa
loopne
inc
mov
lds
test
out
movsb
shll
add
imul
pushl
xor
jno
data16
jne
mov
add
mov
push
ss
add
mov
out
outsl
xchg
dec
pop
ret
dec
sbb
test
lock
inc
sahf
fists
push
testl
rcrb
mov
mov
xor
dec
adc
xchg
dec
pop
shl
pop
jl
xor
and
aaa
sbb
fwait
loopne
inc
pusha
mov
cmp
pop
jmp
cwtl
sub
imul
fdiv
or
lds
inc
push
aas
cmp
lahf
push
cmp
mov
and
std
sub
sbb
sbb
adc
call
cmpsb
mov
cmp
push
sub
or
rcrb
xchg
jbe
or
inc
mov
fwait
xor
cmp
jnp
sbb
punpckhbw
btr
cmovb
push
lahf
scas
fwait
push
test
bswap
xchg
xchg
out
std
add
sub
cmp
popa
rol
push
push
jmp
repz
xlat
filds
pop
push
mov
das
jnp
mov
in
or
out
bound
fwait
es
clc
dec
inc
inc
inc
insb
dec
aad
fmull
xor
push
clc
daa
fcom
bound
insb
pop
cli
mov
or
adc
push
insb
and
xor
cld
jns
ror
test
bound
cwtl
and
pushf
pop
inc
loopne
push
mov
mov
push
sbb
jecxz
mov
cmp
adc
cmpsl
sahf
inc
lcall
or
rcrl
adc
ds
sarb
test
gs
lret
les
xchg
sub
inc
inc
mov
mov
mov
mov
shlb
push
add
dec
inc
pop
xor
mov
jae
pop
xchg
daa
arpl
and
and
ljmp
pop
xchg
mov
xchg
lret
fisttps
mov
mov
neg
pop
outsb
sahf
inc
xor
test
imul
clc
out
sbb
les
add
pop
daa
jmp
inc
pushf
xchg
sti
in
lea
out
xchg
loopnew
test
inc
push
sti
push
pop
rcrl
ljmp
shlb
jbe
dec
hlt
or
loope
mov
inc
adc
rorb
cmp
mov
xor
sbb
xor
xor
bswap
sub
cld
inc
mov
push
sbb
scas
addr16
jp
cmp
xchg
mov
push
addr16
adc
mov
and
cmovs
inc
shr
outsl
in
mov
adc
insl
jnp
ljmp
arpl
lret
fcmovnu
sbb
iret
xor
cmp
jg
clc
push
pop
mov
xlat
rep
movsl
inc
mov
cmp
shlb
or
push
arpl
jno
in
and
je
stc
xor
dec
mov
call
sti
sahf
mov
sbb
shlb
scas
xchg
daa
pop
jg
xchg
pop
cmp
dec
inc
mov
jecxz
xchg
push
repnz
rcl
les
add
push
mov
sub
push
ljmp
jp
lds
xor
xchg
stos
rolb
add
xchg
pop
sbb
jns
sbb
sahf
cmp
mov
lods
cmc
sti
sub
mov
and
mov
mov
dec
or
mov
and
mov
clc
jecxz
cmpsb
in
in
sbbl
and
sarl
dec
mov
inc
cmpsb
call
push
test
sub
pop
or
jns
xchg
cs
sub
inc
jno
out
stos
cltd
mov
cs
lea
mov
shl
add
loopne
cs
scas
outsb
sub
sbb
sub
lock
mov
enter
pop
jne
mov
or
aam
repz
mov
bound
jo
sti
inc
mov
jnp
nop
cmp
outsl
push
xlat
add
mov
pop
xchg
pop
out
push
xor
repnz
cmpsb
aad
mov
mov
jmp
and
and
add
test
in
cmp
jnp
jge
pop
ss
popf
fbstp
add
xor
nop
sbb
fcoml
sub
subb
lret
pop
and
jmp
mov
mov
cmp
inc
cmp
sbb
adc
push
mov
sbb
shll
adc
jp
daa
adc
aas
or
cmp
out
xor
out
fidivs
fildl
lds
ret
jne
adc
mov
add
enter
pop
addl
lock
inc
ljmp
mov
fdivrs
mov
inc
sub
icebp
push
repz
and
ret
out
jge
sar
outsl
xchg
test
or
add
push
xchg
int3
test
scas
stos
jecxz
push
scas
jecxz
popa
test
dec
test
sti
xlat
xchg
jnp
mov
lret
outsl
mov
in
push
out
jb
stc
ud2
add
insb
dec
aad
pop
mov
in
lea
sub
inc
pop
shrl
xor
mov
adc
les
icebp
fstpl
movsb
push
std
mov
pusha
or
mov
fldt
mov
xor
inc
xchg
lret
dec
ja
pop
push
cmp
call
and
jne
mov
mov
push
out
cmp
stos
mov
vpunpckhwd
out
pop
repnz
lods
pushf
fldenv
dec
xchg
repz
pushf
rcl
add
test
xchg
nop
in
loop
push
sbb
mov
xor
mov
sub
cld
push
or
pop
lcall
push
sti
mov
sub
lds
pop
add
loopne
call
cmp
test
mov
sti
sbb
sbb
pop
ss
pop
lock
mov
mov
xchg
cmp
or
mov
add
out
outsl
cld
add
lea
cmp
loope
cmp
ljmp
stos
daa
repz
and
rcr
inc
add
push
push
adc
out
gs
gs
sbb
std
jns
scas
jp
or
mov
jno
popf
mov
shlb
andl
mov
cwtl
test
sbb
adc
loope
movsb
test
mov
aam
add
xor
out
sbb
out
push
xor
sub
cmpsb
adc
mov
dec
cmp
mov
jmp
insl
push
dec
pushf
add
jecxz
das
out
mov
shr
sbb
outsl
mov
mov
out
adc
lds
sar
lcall
sub
pusha
jno
data16
jg
pop
lret
imul
or
lock
xchg
push
out
mov
pop
les
ja
xor
mov
test
adc
ficomps
int
jp
dec
imul
leave
dec
mov
pushf
ljmp
rclb
out
test
mov
mov
mov
fnstsw
sbb
xor
push
sbb
dec
out
popl
addr16
cmpsb
pop
ss
mov
pop
data16
fmull
in
out
sbb
daa
mov
or
fistpl
fsubs
imul
push
cs
popa
outsl
add
cmc
dec
sub
jge
jmp
cli
fwait
hlt
xor
add
mov
mov
scas
lret
rcl
popa
sbb
loope
mov
dec
ficoms
dec
cmpsb
mov
inc
sub
into
xchg
fstpl
cwtl
imul
rcrb
pop
lcall
xchg
mov
mov
insb
and
ljmp
data16
pushf
cmpsb
rcrb
mov
push
sbb
mov
pop
adc
xchg
test
inc
jg
rcl
pusha
or
adc
cli
push
movl
jae
xor
and
and
xchg
pop
sub
daa
push
mov
into
push
push
pop
icebp
sub
adc
mov
cmc
popf
push
sbb
stos
mov
sub
out
ss
push
mov
xchg
dec
add
aad
push
data16
ja
add
xchg
jp
mov
pop
adc
cmp
jnp
sub
insl
in
mov
aas
outsl
adc
adc
aas
mov
sahf
mov
call
ret
add
cmp
cmc
lds
jmp
mov
inc
dec
mov
ss
pop
sti
test
repnz
dec
add
mov
mov
inc
jle
mov
imul
cmp
or
cmp
dec
and
push
imul
mov
pop
ficomps
ret
int
int
mov
mov
push
push
adc
adc
adc
test
sti
cld
lods
dec
or
insl
mov
cli
mov
ds
mov
aam
push
mov
ss
xor
add
movsb
test
stc
jecxz
imul
mov
sub
lock
pop
inc
cmp
jl
jo
inc
ja
inc
xor
inc
pop
out
pop
repnz
jecxz
jo
dec
bound
lods
add
insl
ds
push
adc
pop
and
fs
sub
mov
addr16
call
hlt
pop
stos
insb
test
inc
movsl
mov
ljmp
lcall
xor
aam
mov
lds
jae
xchg
pop
hlt
push
out
or
ljmp
rolb
stos
fldt
scas
scas
mov
lock
cmp
push
dec
sub
outsl
push
mov
sbb
mov
adc
pop
scas
cmc
pop
inc
mov
je
in
adc
clc
sub
mov
adc
repz
mov
add
fadds
sub
pop
mov
adc
cli
aam
aas
mov
dec
mov
icebp
dec
add
push
dec
arpl
sub
sbbb
mov
inc
push
add
std
mov
mul
faddl
sbb
in
fldt
add
gs
adcl
add
sub
jno
adc
ds
lds
enter
rol
pop
cmovg
in
shl
jge
mov
iret
addr16
jnp
and
xor
mov
mov
sbb
mov
pop
into
mov
xchg
pop
xchg
xchg
repnz
mov
dec
nop
cwtl
jno
inc
lcall
jbe
popa
out
or
and
lret
nop
icebp
jecxz
xor
jno
mov
int3
sbb
cmp
mov
or
adc
add
sub
gs
dec
jp
push
shll
mov
jmpw
addl
stos
push
xchg
repz
rcl
mov
mov
fidivrl
das
cld
test
lods
in
and
ljmp
pop
shl
mov
xchg
das
scas
jbe
mov
push
sbb
outsb
sahf
pop
push
push
xor
push
lods
vcvtpd2psx
lret
or
mov
jno
mov
daa
mov
out
arpl
fnstsw
cmpsl
lcall
xor
xchg
mov
add
int3
jg
clc
jne
enter
bound
mov
jno
dec
leave
test
icebp
dec
mov
or
ljmp
cmpl
dec
mov
xchg
mov
into
pop
ja
mov
xchg
cld
add
aam
popf
lahf
call
movsl
xchg
pop
ljmp
xchg
mov
not
or
icebp
sbbb
loop
mov
cwtl
int
clc
scas
pop
cmp
lret
add
xchg
xchg
xchg
mov
test
in
push
mov
xchg
inc
mov
out
pushf
insb
in
lahf
add
mov
filds
mov
mov
cmp
clc
cmc
fwait
mov
pop
jecxz
mov
arpl
lock
sbb
xchg
lret
in
inc
xchg
outsb
inc
jg
cmpsb
push
push
jge
stc
or
cwtl
divb
in
xchg
mov
out
arpl
cmp
mov
shrl
and
sbb
dec
xchg
xchg
rorb
scas
cmp
jns
pop
sbb
jnp
cmc
pop
pop
sbb
cmp
mov
push
and
adc
mov
or
xor
sbb
xchg
mov
dec
xchg
aas
sbbl
test
xor
in
cmp
xlat
pop
inc
cmp
dec
test
add
out
adc
push
xchg
cld
mov
leave
fsubrl
out
inc
sub
cmc
push
insb
enter
mov
sbb
decl
subb
cs
add
js
addr16
pop
dec
sbb
pop
or
lock
push
adc
inc
push
hlt
lcall
push
xchg
nop
ljmp
arpl
rorb
lods
jmp
call
aam
rclb
mov
lock
cwtl
xchg
sbb
dec
sbb
popf
pop
stos
mov
mov
xchg
ret
fildll
add
add
mov
xchg
mov
and
adc
lds
dec
test
add
lods
scas
push
push
mov
mov
push
out
ds
or
ret
arpl
cltd
xor
addr16
cmpsb
cmp
aas
sbb
popfw
mov
mov
testb
mov
ret
add
add
imul
jge
fsubrs
fwait
and
sbb
xchg
dec
mov
cltd
xchg
mov
adc
and
jl
aad
outsb
or
inc
mov
inc
btc
test
mov
in
mov
sub
mov
outsb
push
inc
and
cmp
out
gs
fxch
loop
test
add
bound
mov
cmpsb
mov
call
hlt
mov
insl
test
addr16
adc
pop
jecxz
fsts
addr16
jl
sar
xchg
xchg
outsb
ds
sti
test
lcall
test
cmp
int3
dec
lcall
fbld
jno
dec
mov
cmc
fwait
cmpsb
mov
clc
testl
mov
call
push
and
sarl
sbbb
arpl
jmp
inc
inc
scas
repz
aad
push
pop
push
call
inc
lcall
imul
add
add
je
or
hlt
mov
mov
jnp
and
cwtl
ss
xor
cmp
cld
pop
xor
stos
pop
and
push
add
aad
rcl
xchg
or
aaa
push
addl
cmp
mov
sbb
movsb
xor
mov
add
pop
mov
xor
jg
shl
lods
dec
mov
rcrb
into
gs
jp
test
inc
sub
aaa
aad
dec
aaa
sbb
movb
inc
dec
ljmp
xlat
imul
lods
jb
pop
push
xor
movsl
sbb
ljmp
push
adc
add
push
adc
sub
ret
popf
pop
mov
mov
loopne
repz
push
fldt
test
jnp
nop
pop
sub
int
div
enter
stos
fwait
stos
sahf
mov
sti
jecxz
aam
xor
gs
push
lock
jae
dec
cltd
popa
cmp
insb
int3
and
fnstenv
xor
push
xor
add
adc
sub
sar
in
int
movsb
loope
ret
imul
xor
data16
insl
int3
and
jg
mov
inc
xor
push
das
jge
inc
cld
mov
scas
and
xlat
sbbb
test
or
fsubs
js
or
cmp
hlt
adc
lea
dec
psubusw
inc
adc
mov
sbb
mov
jns
inc
clc
icebp
fs
sub
test
sahf
xchg
xchg
push
rclb
push
adc
mov
push
mov
aad
inc
out
or
out
mov
pop
stos
dec
test
jmp
fs
cmp
sub
aam
add
xchg
sbb
in
lods
popf
mov
lret
mov
out
repz
ret
mov
xlat
inc
rcrb
gs
dec
test
xor
cmp
mov
dec
push
jecxz
xchg
fidivrs
jns
dec
cmp
cmp
xor
cmpsb
cmp
out
ja
add
pop
mov
mov
in
les
push
mov
in
pusha
mov
xlat
stc
pop
jge
out
push
and
stos
jns
cmpsl
fbstp
xchg
push
mov
inc
sbbl
ja
cmp
mov
push
flds
ljmp
or
into
addr16
add
das
adc
pop
movsb
jg
sub
sub
ljmp
filds
fmull
push
sahf
leave
jl
addr16
lea
inc
sbb
adc
pop
push
pop
mov
jg
inc
sbb
adc
add
in
or
sub
xor
mov
inc
mov
jmp
jle
and
scas
jge
cld
cwtl
inc
and
adc
imul
repnz
xchg
jecxz
popf
test
cmc
and
jp
mov
cmp
push
adc
xor
xchg
or
cmp
and
testl
imul
jno
xchg
repz
or
add
and
loope
inc
decl
lret
sbb
gs
sti
in
pop
inc
mov
sbb
jg
inc
jbe
jbe
pusha
ljmp
shrl
jb
mov
ret
mov
pop
aaa
popf
pop
mov
insb
inc
push
shrl
scas
pop
push
imul
sbb
and
jg
pop
aad
ja
xor
lds
imul
ljmp
sbb
jno
mov
mov
testl
mov
sbb
sub
call
ja
enter
push
mov
jne
out
repnz
pop
ja
lds
jbe
mov
xor
call
mov
pop
xchg
addb
icebp
push
in
mov
inc
push
add
mov
mov
out
inc
shr
cmpsl
jp
addl
add
adc
cmp
test
sbb
jg
mov
inc
pop
jg
xorl
fildll
push
sbb
inc
and
sub
xchg
mov
push
pop
test
pushf
dec
mov
sbbl
sbb
cmp
mov
std
jns
push
loope
mov
iret
fs
cmpsb
int
jg
and
pop
sub
inc
and
inc
fs
not
mov
push
pop
mov
xor
lods
mov
push
xchg
push
xchg
xchg
in
nop
faddl
imul
js
sbb
sub
ficoms
and
adc
scas
xchg
jge
xorb
cmp
push
push
and
jecxz
mov
bound
mov
popa
sbbl
into
imul
adc
mov
orl
cmp
pusha
xor
ja
cmp
inc
xor
push
addr16
popa
in
ja
mov
dec
or
jecxz
sub
ret
clc
or
lods
ljmp
imul
dec
push
sub
hlt
cmp
movsl
clc
mov
out
lods
js
je
outsb
xchg
sti
mov
pusha
sub
lock
aam
ja
or
lret
push
int3
inc
xor
jnp
jnp
hlt
xchg
jle
pushl
pop
and
popf
pushf
xor
jge
in
ret
jno
cmp
jno
repnz
jecxz
xlat
dec
push
xchg
push
aas
std
sub
jno
or
mov
push
sub
mov
fistps
mov
icebp
daa
jno
jecxz
dec
mov
or
jnp
das
mov
adc
out
iret
aad
xchg
mov
lret
mov
loopne
mov
leave
sti
mov
pop
in
and
sub
jnp
ret
jae
ss
mov
hlt
mov
pop
hlt
lock
test
mov
xchg
out
xchg
dec
out
insb
andl
mov
add
stc
jp
dec
cmc
loop
and
dec
mov
hlt
loope
xchg
ljmp
mov
push
sbb
sub
jne
in
outsl
je
xor
rcll
inc
inc
faddl
sbb
cs
gs
and
push
arpl
stos
and
xlat
mov
je
outsl
add
mov
inc
add
shrb
icebp
test
insb
mov
jb
xor
shl
dec
std
and
pop
mov
ljmp
nop/reserved
scas
inc
repnz
xor
adc
xor
cld
lods
and
in
mov
add
pushf
mov
sbb
rcr
adc
sub
sub
adc
adc
vpsraw
insb
sub
or
jmp
push
jne
sub
push
aas
shlb
movsb
repnz
dec
jb
cmp
dec
mov
mov
int
and
adc
inc
js
aas
xchg
aas
adc
jecxz
push
xadd
jns
sbb
mov
mov
mov
and
push
subl
sub
xor
push
jg
orl
lret
add
mov
fwait
jg
ret
popa
adc
xor
dec
adc
les
lea
imul
repz
repnz
pop
clc
mov
cmp
xchg
mov
fists
incl
xor
lahf
and
loop
cmp
fiaddl
mov
sbb
testb
icebp
mov
mov
lret
pop
arpl
mov
add
ljmp
add
dec
xor
push
std
push
and
cmp
mov
mov
push
aaa
sbb
sbb
stos
testl
in
xchg
stc
or
pop
pop
mov
xchg
jnp
jns
xchg
daa
add
std
sub
pop
xlat
fcomp
lods
cmpl
sub
mov
gs
mov
mov
subb
arpl
inc
push
ficoml
pop
add
mov
mov
loop
lods
leave
jmp
jmp
mov
sbb
hlt
pop
push
pop
shl
inc
pushf
test
dec
repnz
sub
lcall
xchg
push
sti
mov
push
mov
fsubrs
mov
pop
out
fs
push
mov
jbe
aaa
add
push
xchg
mov
or
pushf
gs
dec
cltd
sub
ss
cwtl
mov
das
hlt
cmp
cmpsl
push
loop
sub
pop
jbe
and
leave
bound
and
ret
jns
push
testb
sub
sbb
and
repnz
ds
or
dec
cmp
ret
inc
jns
nop
rcr
popa
dec
push
test
addr16
xor
jns
sbb
test
adc
mov
or
ds
rol
in
pop
shl
daa
cmp
fnstsw
add
aaa
jnp
fbld
fs
sti
std
pop
mov
xchg
shlb
xchg
ret
sub
push
lock
push
xchg
ss
outsb
rol
sub
cmp
das
sahf
adc
sbb
xchg
pop
aad
sarb
sbb
push
jl
xchg
hlt
jnp
xchg
into
mov
ja
icebp
pop
or
addr16
repz
lods
push
popf
adc
push
add
pop
fsubl
stos
jmp
scas
lret
loope
xor
sub
push
ret
fcmovnb
test
add
popf
rolb
insb
xor
push
pop
fisubs
iret
hlt
inc
insl
fs
dec
arpl
andl
or
es
insb
fucomp
jg
and
je
std
push
or
les
xchg
mov
movsl
int3
mov
push
xchg
jmp
xor
mov
dec
and
aas
inc
adcl
adc
fnstcw
add
ret
xchg
xor
je
fdiv
cwtl
jb
and
mov
shr
mov
sbb
xchg
jne
iret
scas
xchg
int
ds
push
cli
popa
imul
lret
ret
mov
fistpll
dec
popa
cmp
cltd
fwait
push
leave
jbe
pop
ret
mov
mov
sbb
jecxz
sub
fsts
sbb
push
and
xor
mov
pop
dec
repz
mov
test
add
int3
icebp
mov
sbb
sbb
scas
scas
insl
pop
in
outsb
push
and
and
rcl
mov
insl
xchg
loopne
cltd
les
js
imul
mov
imul
test
adc
fcmovu
das
insb
jmp
jmp
xchg
jmp
xchg
pop
jnp
test
ljmp
insb
xor
push
dec
dec
pop
imul
mov
aaa
mov
push
ss
inc
enter
shlb
adc
nop
cli
scas
or
jmp
dec
dec
stos
mov
fbstp
adc
push
jo
pop
push
cmp
inc
xlat
add
pop
inc
clc
xchg
mov
pop
sar
xor
js
out
sbb
mov
and
icebp
mov
dec
out
sub
dec
sub
scas
ret
outsb
enter
fsubl
push
adc
mov
jp
mov
lock
int3
jae
push
dec
cltd
cmpps
sub
fwait
mov
sti
xor
sub
push
imull
call
addr16
stos
adc
test
test
ficoml
or
aam
int
mov
mov
mov
je
pop
mov
int3
shl
xor
adc
in
arpl
inc
jmp
jns
ss
pusha
lret
pop
dec
fdivl
fsubrs
inc
cmpsl
arpl
pop
cs
and
and
stos
xchg
hlt
mov
mov
inc
cwtl
fmull
imul
sti
lods
popf
pop
loope
cmp
mov
shrb
mov
cmpsb
adcl
and
mov
adc
sbb
ljmp
dec
out
int
lahf
xchg
sbb
sbb
lret
inc
push
cmp
fdivs
scas
push
cli
je
sti
and
and
in
cmpsb
lods
cmp
cmp
sub
push
popf
mov
outsb
cmpsb
ficoml
mov
fidivs
daa
stos
xlat
xchg
jne
fimull
inc
aaa
mov
iret
mov
sbb
sarl
mov
cwtl
push
cld
xor
call
fsubrp
lods
xchg
mov
xor
and
dec
icebp
adc
out
sahf
inc
add
std
lea
jnp
xor
cmp
mov
enter
pushf
mov
xchg
mov
lods
jo
cmpsb
ret
lret
clc
clc
or
adc
sbb
sbb
push
icebp
mov
xchg
in
out
mov
or
ficompl
dec
cmp
jmp
xor
sub
lods
mov
mov
pop
mov
std
stos
xor
xor
aaa
or
mov
clc
mov
out
cmpsb
mov
sbb
mov
adcb
pop
fildl
in
in
cmc
int3
adc
repnz
mov
lret
xorl
sahf
pop
and
ret
mov
push
movsb
pop
call
jne
mov
dec
sti
mov
adc
lods
mov
cmpsb
movsb
mov
inc
mov
fisubs
pop
xor
popf
pop
mov
dec
jb
push
or
or
and
add
adc
add
mov
cmp
das
cmpsl
arpl
jmp
inc
orl
outsb
out
gs
call
add
push
jge
or
pop
or
and
xchg
fsubrs
xchg
mov
test
and
adc
xchg
lret
fldcw
jae
movsl
mov
and
daa
in
fcmovne
inc
lea
movsl
test
lret
cmc
add
jmp
repnz
mov
ret
mov
mov
sub
mov
test
inc
jne
data16
jnp
nop
out
mov
das
sbb
aad
fs
inc
and
addr16
enter
aam
xor
movsl
les
repnz
sbb
sub
mov
cmp
cmpsl
mov
xchg
jbe
push
pop
pusha
icebp
mov
cmp
jo
push
cmp
loopne
stos
mov
pop
mov
lret
mov
or
push
pusha
cs
jb
mov
hlt
xchg
lea
xchg
mov
mov
in
dec
ds
adcl
sbb
jmp
cmp
subb
sbb
lods
add
jl
jl
dec
mov
add
cmp
inc
sub
mov
mov
cmpsb
ret
adc
fcompl
xchg
shll
cmp
fnsave
into
add
into
cmp
xor
xchg
ljmp
add
mov
daa
addr16
aam
icebp
into
ficoml
xchg
std
mov
cld
repnz
ret
loope
repz
mov
test
jo
push
push
cmpsb
cmp
xlat
inc
cmp
push
inc
pop
mov
dec
mov
sub
je
popa
lret
ret
sub
addr16
add
ja
or
sahf
outsb
or
dec
popf
fwait
lcall
fsubrl
lret
in
and
sbb
mov
or
ret
pushf
in
insb
adc
addr16
xor
adc
sub
and
xor
test
xchg
sub
cld
insl
into
push
push
ret
int3
pusha
mov
imul
sar
mov
sbb
xlat
lea
pop
test
or
stos
or
and
or
fidivs
movsb
dec
push
cmp
adc
gs
adcb
mov
or
icebp
or
hlt
pop
dec
pop
clc
loopne
sbb
mov
mov
dec
sub
adcl
or
fmuls
mov
pop
movsl
test
aam
cwtl
std
mov
or
jo
mov
adc
out
lcall
imul
lahf
sbb
rcrb
mov
bound
dec
mov
sub
jne
movsb
jb
gs
xor
gs
cltd
sti
cmp
or
and
push
popf
pop
jge
test
repnz
pop
fdivs
movb
dec
xchg
inc
lret
fs
or
or
mov
bound
or
pop
imul
dec
stc
add
stc
aam
dec
push
in
xor
cmp
into
cmp
xchg
pop
int
cmp
shrb
pop
fs
out
fwait
cld
in
inc
int3
bound
inc
mov
aam
dec
shll
sbb
mov
out
dec
sub
rcll
xor
aaa
movsb
cmp
lret
pop
push
mov
sub
mov
fxch
adc
fadd
add
repz
add
enter
mov
shll
in
push
fs
shrl
sbb
jge
pop
jecxz
fsts
decl
or
cmp
jno
fstps
or
test
in
sbb
add
adc
push
ret
add
lock
pop
mov
pop
mov
in
in
rorb
and
out
add
xchg
pop
lret
sub
aad
jmp
add
and
int3
inc
jo
cwtl
xchg
inc
jo
sbb
insl
adc
pop
and
or
xchg
and
std
jecxz
sbb
ds
pop
lods
sbb
cmp
repz
pop
fbld
dec
outsl
roll
jne
movsb
jb
imul
leave
cmpsl
clc
jb
cmp
add
das
jmp
scas
push
adc
push
pop
xchg
insl
jb
decl
mov
inc
pushf
mov
pop
addl
sub
push
dec
fimuls
pop
mov
loop
xor
test
pop
sbb
add
daa
div
cmp
jg
in
stos
cmc
lock
xorb
adc
adc
xor
push
push
fldt
mov
lcall
out
popa
xor
cmp
movsb
pop
push
fisttpl
outsb
cli
iret
aam
add
shlb
test
outsl
pop
cmp
dec
xor
cmpsl
mov
fisttpl
sub
iret
pop
xor
testl
test
stos
fisttps
jmp
into
in
mov
stc
mov
lcall
mov
dec
push
leave
dec
mov
inc
movsl
popa
pop
sbb
mov
jb
packssdw
add
xchg
and
xor
mov
pop
outsl
mov
movsb
mov
or
addr16
lock
or
adc
loopne
xor
in
sub
fiadds
shr
jns
dec
sub
in
lods
sub
dec
lahf
je
fdivrs
cmp
adc
js
mov
out
cltd
cwtl
or
fwait
add
in
std
aam
fwait
mov
dec
push
mov
enter
es
jbe
mov
stc
mov
xor
sub
out
call
cmpb
xchg
sbb
rorl
dec
insl
lret
sbb
fs
int3
lahf
push
pop
push
xor
aad
cld
pop
scas
out
fisubrl
stos
push
mov
pop
fisttpl
repz
in
add
mov
or
cmp
xchg
and
ror
pushl
jns
mov
jbe
push
loope
push
dec
and
nop
push
lea
sbb
sub
in
push
push
xchg
movsl
adc
mov
loop
lea
sub
dec
iret
pushl
adc
and
gs
xchg
and
loop,pn
insl
addr16
sti
daa
lock
mov
leave
mov
lds
popa
fadds
hlt
int
lock
nop
lock
std
cmc
in
push
cs
aas
ficompl
cmp
test
out
pop
loopne
int3
xor
mov
xchg
jne
sbb
in
stos
dec
pop
pop
adc
insl
repnz
pop
add
adc
insl
data16
xor
push
int
cmc
xchg
add
and
push
mov
lods
xor
sub
or
push
aas
mov
fs
pop
mov
dec
pop
scas
iret
les
pop
iret
pop
popf
out
cmp
nop
popf
cmp
loop
cs
push
jns,pt
setp
hlt
js
sbb
test
imull
ljmp
ja
cs
nop
add
xor
push
adc
js
adc
xchg
stc
mov
inc
mov
inc
pop
jmp
es
iret
sahf
push
insb
cltd
push
sbb
add
ret
out
addr16
sbb
call
sarl
cmp
dec
sahf
add
pop
jae
pop
dec
movsl
insl
mov
push
inc
ret
sbb
adc
sbb
mov
test
sbb
jns
pop
push
push
adc
pop
cld
xor
jecxz
mov
jb
pop
mov
iret
pop
fimuls
inc
sub
aad
call
push
loopne
mov
jns
xchg
cmp
mov
test
adc
cld
stos
jge
mov
pushf
xor
push
ja
mov
dec
imul
push
or
push
or
pop
es
jmp
sub
or
or
dec
adc
push
mov
jnp
lcall
mov
pusha
and
and
sub
jge
bound
mov
push
and
or
cmp
imul
push
data16
test
push
cmp
cld
add
mov
mov
mov
jo
xor
xchg
int3
and
xchg
shl
xchg
jae
mov
fsubrl
call
rolb
push
in
cs
push
dec
mov
fwait
ljmp
mov
mov
pushf
daa
pop
lret
sbb
mov
mov
jno
imul
rolb
sti
jne
insb
repz
cmp
gs
mov
enter
pop
jno
inc
mov
cmpsb
push
pop
inc
xor
add
jp
and
push
lret
xor
cs
mov
pushf
or
test
aad
push
sti
cs
jne
sbb
push
movntps
mov
add
jno
xchg
adc
xor
xor
jg
inc
sbb
and
sub
data16
mov
xchg
cmp
leave
fistpll
adc
repnz
mov
lret
jno
popf
rcll
dec
mov
ret
fistpll
test
add
xor
sub
sbb
mov
sbb
push
imul
adc
jb
repz
daa
lods
xchg
fldl
dec
mov
jne
fists
mov
push
pop
loop
sub
and
xor
lods
mov
mov
jno
push
or
lcall
popa
cmp
push
mov
fs
mov
pop
pop
sbb
and
dec
mov
insb
xchg
and
mov
mov
pop
cmc
mov
adc
or
or
sahf
sbb
fldl
adcl
cld
lock
shr
leave
mov
pop
repnz
sub
mov
rol
test
adc
std
sbb
inc
xchg
mov
inc
adc
mov
cmc
andl
in
je
js
add
or
outsb
jb
adcb
mov
add
cwtl
test
aas
into
pop
pop
mov
popa
sub
aam
dec
xor
testb
std
mov
sbb
pop
mov
mov
xchg
xchg
fisttps
jmp
sub
mov
lea
mov
pop
pop
ja
out
js
mov
xchg
push
xor
ds
or
mov
data16
call
std
or
out
add
pop
mov
popf
push
jb
mov
fstps
inc
sbb
in
push
lods
mov
cmpsb
leave
xchg
shl
push
arpl
pop
cmp
stc
mov
ljmp
cmp
mov
jl
ret
lods
cmpsb
stos
stos
and
mov
into
scas
xchg
jecxz
inc
arpl
jge
mov
fimuls
mov
daa
cmp
fwait
jecxz
outsl
mov
dec
sbb
cmp
aas
insb
push
or
or
mov
push
sub
daa
mov
mov
sbb
fldt
cmp
int3
mov
and
push
aaa
es
pop
pushf
idivl
adc
mov
push
mov
pop
lea
adcb
jb
jo
sub
cmpsb
imul
leave
jmp
loopne
cli
sahf
repnz
push
sbbl
sub
sbb
rcll
icebp
pop
out
jmp
iret
jle
div
lods
paddw
aam
mov
mov
adc
imul
sub
mov
jecxz
jge
pop
dec
sbb
mov
cmpsl
jg
lret
adc
inc
test
mov
pushl
out
mov
sub
push
repz
cmpsb
mov
ljmp
cmp
xor
pop
cmpb
sub
pop
in
lcall
aaa
movsl
dec
nop
mov
add
pop
loope
sbb
mov
aas
jne
out
pop
mov
mov
and
sub
mov
fwait
jle
push
adc
mov
sbb
mov
mov
in
push
push
jp
pop
scas
jne
pop
loopne
dec
sahf
mov
cld
jg
loope
mov
aad
cmp
out
aaa
out
add
or
cld
mov
jp
ljmp
mov
pop
mov
cmp
mov
call
and
or
and
repz
add
pop
jg
insl
insb
imul
lcall
pusha
pop
sbb
mov
insb
adc
adc
cmpsb
jbe
dec
xor
adc
mov
fisttps
adcl
push
aad
leave
call
pop
or
in
mov
and
xor
xchg
push
and
jb
jmp
dec
cs
and
and
xchg
shl
xor
inc
mov
int
loop
push
mov
pop
lahf
dec
adc
inc
outsl
mov
xchg
mov
and
fidivs
adc
aaa
ja
jne
mov
out
sub
sub
inc
mov
pop
cli
adc
lods
fstpt
out
push
sahf
xchg
sbb
pop
mov
out
pop
mov
jmp
ljmp
ret
mov
mov
scas
mov
clc
lds
mov
mov
mov
jnp
push
pop
dec
jmp
call
sar
scas
xchg
xchg
jge
or
fcmovnbe
cmpsb
in
pop
mov
bswap
popa
xchg
xchg
mov
xchg
and
movsb
int
fiadds
in
das
gs
std
cli
ljmp
test
jo
dec
add
mov
repz
fisubrs
xchg
out
mov
xchg
dec
pop
mov
in
mov
shlb
fsubrl
sub
js
xor
dec
lods
sbb
xor
out
jp
dec
sub
pop
imul
scas
lret
sbb
xor
sbb
xor
lret
lods
sbb
out
pop
cmp
imulb
jle
lret
lcall
into
call
insb
out
test
cmp
ds
dec
lcall
mov
jbe
or
lds
push
bound
test
dec
mov
aas
push
adc
inc
clc
mov
add
mov
mov
inc
sbbb
pop
in
bound
jle
and
test
test
push
mov
jge
add
pusha
and
xchg
xchg
cmpsl
shl
scas
fistps
lret
ja
lahf
xchg
cmpsl
sub
pusha
hlt
cs
addb
jg
mov
mov
call
sub
dec
adc
adc
jo
pop
adc
jl
xchg
jg
sub
out
jbe
loope
lods
sbb
mov
cli
jnp
stos
push
into
clc
or
aaa
and
iret
jne
push
inc
or
mov
pushf
sub
addr16
push
and
call
sub
xchg
std
movl
mov
sub
in
adc
sub
rolb
xchg
mov
out
andb
or
andb
cwtl
fistpll
xchg
cmpsb
and
jno
repnz
add
loopne
pop
movsb
sbb
hlt
daa
cmp
pop
adc
orps
mov
or
mov
mov
pushf
jnp
pop
sbb
add
sbbb
xchg
xchg
pop
sub
decl
test
std
sbb
mov
fldenv
out
mov
jecxz
jl
in
lds
pop
mov
test
adc
mov
in
pushf
pop
sbb
in
rclb
sbbl
fs
cmp
mov
inc
dec
xor
xchg
loop
push
inc
sbb
xchg
stos
dec
or
sahf
adc
in
mov
stos
popf
and
xchg
sub
jae
cmpsb
sarb
xor
fmul
lahf
bound
jmp
hlt
mov
popa
ja
push
pop
ss
fsubrl
scas
cmp
insl
jp
mov
inc
mov
stos
or
push
pop
into
mov
imul
mov
scas
jmp
push
push
push
and
xor
vpminsw
jmp
xor
sbb
les
xchg
fdivs
adc
mov
add
cmp
inc
into
outsl
loop
lahf
xor
push
in
push
fwait
push
pop
je
arpl
test
ss
movsb
clc
xor
dec
out
idivl
push
pop
dec
fwait
adc
mov
mov
out
or
or
xor
ds
in
jno
int3
imul
jmp
push
adc
cmpsl
aad
or
sub
cwtl
mov
loopne
movsl
push
adc
sbb
test
push
dec
add
iret
test
int
mov
push
dec
or
cli
mov
out
test
sbb
sarb
bound
lock
pop
out
cs
clc
loop
daa
out
neg
inc
push
xor
xchg
dec
pop
add
pop
push
lock
enter
lret
push
push
push
scas
out
call
sub
dec
andb
mov
out
das
daa
mov
cmp
cld
imul
mov
mul
xchg
test
or
xchg
mov
cmp
ja
pushf
test
loop
scas
pushf
ds
jge
jne
ss
push
pop
inc
loopne
ja
xor
data16
xor
loopne
int3
nop
daa
loopne
dec
cmpsl
subb
push
scas
in
fidivrl
into
push
loop
cld
sbb
push
mov
repz
xchg
add
lret
or
inc
insb
addr16
seta
push
inc
stos
lret
push
dec
pop
out
adc
cmpl
pop
std
pop
mov
int3
add
jmp
mov
std
dec
add
jns
xchg
cmp
push
fldenv
cmp
cli
bound
xor
ds
xchg
and
xor
jle
xchg
scas
adc
mov
push
scas
fnsave
lcall
pusha
in
push
and
das
aaa
testb
shlb
fldt
leave
call
xor
push
xor
inc
movsl
div
shll
cmpb
add
cmp
lea
fcom
out
pop
mov
push
mov
cmp
xor
jle
dec
fisttps
daa
in
cwtl
movsb
or
js
cmp
mov
jno
stos
xlat
daa
div
scas
mov
inc
mov
pop
movsb
mov
jb
add
dec
jg
dec
aam
or
or
push
or
cltd
icebp
pop
push
lret
inc
mov
shrl
lcall
adc
dec
or
or
inc
jle
cltd
testl
movsb
in
push
addl
add
in
call
in
add
jge
dec
mov
add
sub
cltd
xor
in
loopne
pshufw
call
and
fs
push
push
rclb
jns
inc
testb
stc
shlb
or
mulb
fldcw
push
shrl
dec
jmp
adc
fmull
outsb
iret
lods
js
dec
orb
call
add
adc
mov
cmp
pop
test
sub
call
fwait
in
movsb
inc
sarl
mov
inc
pop
ret
popa
dec
xchg
stos
jns
pop
aad
loop
cmp
xchg
cmpsl
xchg
pop
jp
jae
mov
test
dec
jg
mov
inc
mov
sbb
aad
xchg
movsl
cmpl
adc
mov
mulb
cmp
addr16
sub
pop
jmp
fisttpll
xchg
movl
mov
jo
inc
jge
leave
leave
in
das
insb
adc
into
mov
add
sbb
jns
dec
push
pop
pop
pusha
mov
sarb
scas
and
pop
mov
sbb
in
push
inc
dec
in
lret
stos
das
jo
or
mov
aas
incb
xor
lock
into
mov
cli
mov
xchg
leave
mov
inc
or
add
and
lods
fwait
aad
dec
add
incl
xchg
pop
das
movsb
and
lahf
stc
cmpsl
push
loop
js
test
xchg
aad
adc
mov
icebp
es
mov
sub
sub
mov
dec
fadds
jno
cmpb
sub
xchg
rcl
mov
sub
or
sub
pop
or
push
jo
lret
xchg
xor
xor
aad
aaa
fwait
leave
or
push
insb
inc
in
shl
jp
or
dec
push
cli
cld
movsb
outsb
or
xlat
mov
pusha
sbb
sti
xor
das
jbe
sbb
popf
push
lods
lahf
ret
cwtl
fucomi
dec
std
mov
popf
push
div
arpl
frstor
adc
shll
outsl
in
rcrl
inc
out
xchg
subb
ljmp
ret
pop
fldcw
addr16
pop
dec
sub
push
or
nop
sbb
cmpsl
pop
call
mov
add
addl
mov
pop
push
cmc
icebp
mov
sar
xor
iret
call
or
push
jg
hlt
mov
adc
pop
jecxz
inc
pop
jno
sub
push
enter
popf
or
mov
push
inc
scas
aam
loop
es
mov
mov
cli
loop
insl
and
xor
out
inc
repz
mov
incb
xchg
addr16
out
xchg
pop
ret
ficoml
in
adc
push
mov
inc
adc
sub
pop
push
dec
fsubr
jle
dec
add
dec
dec
ja
xor
dec
sahf
jg
mov
add
dec
sarl
into
xlat
and
test
jl
nop
ret
jmp
out
addl
lret
ljmp
ljmp
inc
aas
xorb
push
xchg
adc
or
pop
aas
add
xchg
stos
insb
xchg
ss
lods
xlat
push
fdivr
ret
mov
mov
and
add
cmp
or
and
inc
movl
rcrw
cmpsb
out
faddl
in
das
scas
push
ja
out
lret
jo
inc
sub
ret
inc
xor
cltd
cmp
mov
fchs
lret
fdiv
dec
inc
testl
xor
push
or
sarl
ficoms
and
jne
lcall
subl
imul
jecxz
push
cmpsb
punpcklwd
jecxz
mov
hlt
pop
test
in
loop
into
jg
jbe
int
fdiv
das
popa
pop
cmp
repz
jg
fldenv
divb
jne
testl
push
addb
cmp
repnz
mov
xchg
sub
repz
xchg
aas
cmp
pop
sbb
in
jbe
jns
testb
hlt
dec
fcmovu
loop
jno
cmp
fimuls
pusha
pop
dec
ret
into
mov
sbb
mov
subl
sub
or
and
std
sbb
fildll
sahf
jno
mov
mov
mov
aad
xor
ja
mov
push
int3
in
pop
cmp
pop
cmc
or
stc
insb
inc
and
fldenv
jmp
mov
addr16
dec
rcrl
orb
xchg
push
cmpsl
pop
aas
roll
dec
shlb
mov
popa
and
inc
sub
aad
hlt
test
int
fiaddl
lret
bound
or
push
fwait
push
aad
pop
xor
sub
cs
sub
dec
fwait
xchg
sub
insl
insb
cmpb
xor
xchg
jl
stos
pop
inc
daa
add
push
in
pop
push
push
or
ss
ret
sti
int
sbb
decl
jg
sbb
sub
push
std
inc
popf
shlb
ror
adc
jmp
jmp
adc
fs
mov
pop
push
cli
scas
jecxz
ds
test
or
or
loope
xor
loop
adc
subl
lds
ret
mov
pop
jo
mov
or
movsl
inc
lret
cmp
lods
int3
lahf
das
leave
incl
ljmp
call
pop
and
adc
adc
cmp
mov
mov
mov
js
shlb
jbe
cld
scas
cmpsb
lods
dec
push
cmp
outsl
test
call
mov
rol
xor
into
imul
pop
leave
pushf
or
push
daa
sahf
negb
xor
xchg
outsl
jnp
and
pop
insl
xchg
lahf
lock
push
insb
adc
ljmp
xor
push
add
mov
lahf
jg
in
push
test
and
add
movsb
cmpl
adc
xchg
push
test
adc
or
or
mov
sub
lods
scas
or
inc
xchg
stos
out
push
gs
hlt
imul
pop
lcall
sbb
lock
adc
jno
test
or
inc
mov
add
dec
push
mov
out
cmp
push
mov
push
jl
orb
scas
pop
cli
jnp
cmp
repz
push
inc
and
adc
fucomp
sbb
jae
lds
sub
mov
xchg
adc
jecxz
jl
jmp
std
test
sub
jecxz
sti
inc
mov
stos
mov
dec
add
imull
cli
test
clc
sbb
fwait
movsl
lds
inc
or
add
lods
mov
lock
lods
ds
loope
testb
fmull
dec
adc
repnz
adc
mov
pushf
adc
push
cmp
xchg
mov
xor
adc
ret
rcrl
lock
xor
push
and
andl
mov
lcall
cmp
pop
cltd
cmp
xchg
adc
push
pop
sbb
pop
pop
daa
cmpsb
cmp
stos
clc
rcr
xor
adc
pop
push
mov
outsl
fistps
pop
mov
into
shlb
ret
ret
cmpsb
fsub
dec
push
mov
pop
mov
xchg
push
rcrl
inc
nop
mov
push
cmpsb
push
ret
jo
pop
jmp
mov
andb
xlat
pop
sbb
pop
arpl
jmp
push
cmp
dec
icebp
insl
std
adc
test
loope
lcall
fsubrp
inc
jns
push
inc
into
mov
cmp
mov
mull
pop
and
test
jg
jecxz
fnstsw
sub
adc
jne
mov
scas
cmc
idivb
loope
adc
and
mov
xor
push
popf
xchg
pop
sub
int3
inc
jnp
add
es
stos
fcmovbe
rcrb
adc
iret
pushf
orb
imul
and
dec
push
shrb
out
dec
mov
shl
sub
pop
mov
ret
ret
xor
xchg
mov
inc
je
shl
je
sub
popf
in
cli
dec
xor
xor
jae
ds
stos
xor
lods
das
dec
xlat
jbe
xor
sub
lods
pop
test
and
leave
jmp
repz
test
divl
adc
push
loop
cmp
jo
lret
mov
push
leave
and
mov
inc
cmpsl
mov
dec
out
xor
adc
sub
js
in
mov
mov
mov
lret
fs
dec
int3
push
cmp
loop
sbb
jae
sbb
pop
std
xorb
inc
sub
ret
mov
xchg
inc
loopne
sti
cld
movsl
add
cmp
jno
xor
mov
and
cmpsb
mov
push
xor
sahf
xlat
push
dec
push
js
mov
xchg
add
popl
cs
js
adc
imul
pusha
xor
pop
cmc
mov
out
jg
shrb
popa
xchg
inc
dec
pop
lret
fisubrs
dec
scas
negb
test
test
notl
pusha
xor
repnz
push
add
jbe
push
inc
repnz
xbegin
lock
addr16
mov
clc
into
cmp
xchg
inc
mov
add
mov
inc
cmp
ja
inc
dec
ds
cmp
cmp
flds
es
sbb
mov
scas
ffree
cld
mov
sbb
roll
mov
pop
leave
pop
mov
ficoml
or
sbb
xor
push
aam
adc
push
push
push
push
cmp
lods
inc
cmp
push
jno
mov
or
mov
xchg
mov
ja
mov
repnz
test
adc
aaa
push
jp
dec
movq
jne
or
arpl
cmp
mov
sarl
add
mov
rcrl
push
cmp
mov
mov
inc
ret
ja
mov
push
stc
jne
jmp
loopne
jnp
jl
xchg
outsb
mov
cltd
cmpsb
fiadds
pusha
scas
imul
dec
outsl
adc
insl
sbbl
orb
out
adc
or
popf
sub
ljmp
lret
fsubrl
mov
adc
mov
jge
test
xor
sbb
jae
xlat
inc
test
out
aad
sbb
mov
and
ljmp
xchg
and
insb
loope
aaa
sub
jo
imull
mov
insb
mov
xchg
pop
sbb
jno
sbb
int
sub
cltd
mov
xchg
add
clc
push
bound
in
in
mov
mov
outsl
lock
mov
mov
lahf
nop
stc
xchg
loope
in
pop
cmc
push
push
ret
jge
cmpsl
sbb
gs
incb
lods
mov
mov
push
pop
dec
std
or
mov
push
cmc
int
mov
lds
sbb
jp
jg
mov
sub
test
or
int3
xchg
ficoml
out
pop
sahf
cmp
dec
outsl
int3
mov
inc
push
and
icebp
out
pop
sub
inc
fwait
adc
mov
shlb
mov
arpl
roll
das
sbb
mov
cmc
mov
outsb
cmpsl
into
push
subl
sbb
mov
push
lret
sbb
les
loopne
inc
into
and
imul
scas
sub
and
cli
or
mov
test
jne
jp
dec
rorl
cltd
adc
mov
lea
cmpsl
push
jl
ds
xchg
push
in
and
addr16
xchg
rcl
fldenv
sbb
fmul
jb
pushw
cltd
xchg
push
jo
rcl
pop
sbbb
sbb
out
jns
clc
or
or
in
dec
fbstp
cmp
jno
adc
sahf
xlat
xchg
dec
js
dec
xchg
sub
add
push
lahf
enter
fcom
sub
and
adc
and
movsb
jns
es
loope
test
pop
cmpsl
popf
sbb
popf
inc
xchg
mov
lcall
mov
fwait
movsb
mov
loopne
jo
in
test
push
shl
mov
stos
dec
jbe
push
inc
xor
cs
clc
imul
xor
adc
adc
sbb
cltd
and
mov
or
mov
daa
mov
mov
jbe
in
adc
jg
push
ret
js
ljmp
or
mov
addr16
outsl
setne
mov
les
bound
add
sbb
adc
xchg
mov
push
jg
push
mov
jmp
and
or
add
sub
cmp
cmp
sbb
push
sub
scas
hlt
push
insb
scas
and
or
sub
ljmp
sbb
inc
loop
jl
jmp
sbb
std
test
xchg
out
push
and
mov
ss
clc
outsl
nop
adc
fistpl
iret
mov
add
sub
mov
daa
roll
insl
pushf
cmp
fs
pop
aad
js
in
sahf
sub
in
or
push
adc
shll
push
rcrb
xor
add
push
or
mov
gs
sbb
lock
fwait
xor
or
leave
cmpsl
push
add
add
aaa
lds
or
lods
out
mov
inc
jbe
and
pop
cmc
jmp
je
lods
cmpsb
aam
icebp
jno
dec
mov
fcmovnbe
shlb
jl
and
sbb
cmpsl
outsb
mov
pushf
mov
aaa
cltd
aas
inc
jbe
lahf
adc
push
adc
jns
and
dec
inc
clc
pop
mov
dec
je
jmp
mov
jbe
cmp
aas
xchg
clc
into
xlat
dec
cld
ljmp
mov
push
insb
lahf
lcall
enter
es
sub
cli
hlt
nop
in
in
adc
add
and
push
fisttpl
xor
lret
mov
clc
cs
inc
push
cmp
jmp
xchg
aam
leave
subl
add
mov
popa
mov
pop
push
fistpl
jae
addr16
and
into
test
push
test
loopne
pop
in
daa
push
aam
aaa
lds
dec
dec
inc
js
notb
pop
js
adc
int3
pop
add
push
inc
xor
xor
scas
scas
cmp
or
xchg
mov
lods
roll
sar
mov
stos
insb
mov
inc
mov
mov
push
add
dec
cmp
gs
imul
add
sbb
jae
sbb
cmp
rcrb
mov
stos
cli
and
pop
outsl
lods
adcl
jmp
outsb
push
dec
add
jae
ljmp
xchg
das
jecxz
addr16
lods
mov
in
push
jl
rorl
or
ret
ljmp
add
cmp
jb
je
pushf
dec
pop
sub
int3
inc
mov
lahf
sbb
enter
pushf
neg
ficompl
sbb
mov
push
mov
fisubrl
loop
adc
shlb
lods
push
sub
pop
inc
mov
popf
inc
testl
jmp
lcall
clc
pop
adc
adc
out
sbb
xchg
daa
pop
inc
mov
int
lcall
fadds
cmp
sbb
inc
imul
mov
push
and
mov
pop
xchg
sub
faddp
mov
cmp
sub
and
jae
xchg
or
icebp
xor
push
lods
sbb
lods
cmp
sarb
jns
cmp
sahf
push
flds
aam
rcrb
icebp
or
sub
push
test
sub
pop
adc
dec
sub
push
xor
jno
int3
fs
push
repz
mov
jge
or
mov
mov
pop
test
jl
rcll
mov
fisttpl
cli
iret
je
imul
repz
cmp
inc
jnp
xor
jl
mov
jb
repnz
and
arpl
sar
iret
stos
cmpsb
ja
fs
or
cmc
mov
jmp
int
fmull
lret
lret
inc
jbe
rclb
ljmp
jb
push
cltd
sbb
ds
cld
call
lret
xchg
push
ficoms
repz
frstor
jmp
incb
push
gs
lock
xchg
data16
xchg
stc
fistl
cmpsb
fs
pop
aad
cmc
je
dec
mov
arpl
xor
jl
arpl
sahf
lret
ret
cmp
loopne
pop
push
sahf
and
xor
mov
sbb
movsb
cmp
mov
sarl
aaa
or
addb
adc
out
jnp
adcb
out
mov
test
enter
aas
inc
jmp
push
leave
sbb
jg
jo
fsubrs
mov
aad
adc
dec
arpl
dec
es
rolb
cmp
mov
cld
or
cltd
xchg
addr16
bound
mov
sysexit
xchg
jl
mov
dec
xchg
add
mov
clts
dec
out
xchg
dec
dec
mov
inc
add
adc
jae
jle
sbb
inc
xlat
mov
jecxz
stos
sbb
or
mov
mov
fldl
movsl
repnz
cmp
pop
ret
cltd
ljmp
and
xor
and
sar
xor
mov
fs
lret
es
stc
adc
xchg
icebp
dec
or
sub
in
mov
push
int
shrl
je
xchg
push
xor
dec
test
dec
imul
fdivr
push
nop
scas
jle
inc
imul
inc
inc
pop
leave
push
jmp
pop
mov
orl
fyl2xp1
cwtl
dec
aas
add
popf
xchg
cmpb
sub
mov
xchg
sbb
push
cmp
cmp
ffreep
adc
fildl
inc
sbb
xlat
or
out
jo
test
and
test
jmp
push
add
sbb
dec
and
cmp
sbb
xchg
cmp
or
push
push
add
mov
inc
sbb
dec
leave
sbb
xchg
inc
mov
jns
jecxz
jge
jge
push
fs
xchg
adc
xchg
iret
lea
iret
movl
inc
pop
mov
inc
int3
test
push
push
addr16
cmc
test
insb
inc
call
pop
daa
mov
lds
shlb
js
mov
jmp
mov
mov
sbbl
xor
insl
les
and
add
push
mov
mov
dec
fbld
movsl
ljmp
mov
cmc
mov
lret
add
jle
lods
cmp
push
or
fs
cmp
sub
ss
adc
cli
push
sub
xchg
inc
stos
xchg
jg
add
pop
xchg
mov
pop
push
jbe
loopne
mov
inc
movsl
mov
push
cmp
push
and
cmpsb
or
push
mov
mov
pop
int
adc
dec
and
xor
xchg
or
mov
jno
lock
pusha
cmp
sarl
insl
sub
cmpsb
aaa
iret
sub
mov
dec
fnstcw
movsb
shll
lods
jmp
cmp
adc
and
call
out
push
pop
xchg
cmp
mov
xor
in
xor
or
nop
shl
ret
mov
adc
ljmp
test
mov
jbe
nop
sarl
cltd
ret
mov
push
lods
sub
aaa
aaa
aam
lret
cmp
cld
data16
adc
fstpt
add
loopne
cld
mov
inc
jae
and
out
pusha
push
push
test
es
pop
xchg
mov
icebp
into
das
mull
repnz
xlat
xchg
dec
cmpsb
fistps
adc
fidivs
sbb
shrb
jmp
cmp
out
ret
out
out
sti
fimuls
lock
imul
mov
insl
or
mov
sub
dec
ss
and
aam
dec
jmp
sahf
js
orb
adc
pop
mov
add
add
cmp
in
cltd
loope
pop
inc
std
pop
push
aam
mov
negb
icebp
jb
xchg
imul
sbb
dec
inc
cmp
jb
xchg
cmpsb
rorl
push
fucomi
inc
out
mov
and
shlb
bound
test
pop
syscall
add
enter
lret
lea
cmp
loopne
adc
add
or
icebp
mov
je
and
add
jmp
xchg
and
push
test
sub
lret
cld
nop
dec
leave
dec
sub
sub
scas
mov
out
aam
jp
inc
test
fisubl
lock
mov
xchg
aaa
lret
adc
aam
out
mov
or
sbb
push
movsl
sub
inc
cmpsb
popf
xchg
cmp
pop
dec
dec
pop
iret
movsb
test
xor
mov
sub
idivb
or
mov
loopne
sub
movsl
sub
push
fstps
sub
cmp
gs
or
push
mov
cli
imul
test
and
icebp
push
shll
fwait
movsl
lock
mov
aam
js
enter
sub
adc
adc
imul
in
sahf
push
jg
inc
add
lods
or
nop
cmpsl
xor
jo
mov
jne
pop
repz
jbe
in
xchg
adc
popf
push
cld
cmp
out
xchg
mov
jg
clc
imul
in
loop
adc
lcall
or
loop
sbb
pop
lds
fdivrl
leave
jmp
cli
int3
lods
add
or
pop
test
mov
stc
push
test
mov
lret
pop
add
gs
mov
call
pop
sti
and
adc
sub
cmp
out
es
mov
add
fldlg2
lods
insb
pop
mov
inc
mov
and
lahf
sub
je
and
xor
mov
clc
mov
loopne
pop
push
loope
or
fcoml
jo
andb
sbb
test
fdivrl
push
mov
and
lea
popa
int
dec
loope
pop
sbb
and
xchg
xchg
scas
nop
cmp
cmp
aad
fsts
or
lds
nop
mov
fisubrl
dec
repz
lock
outsl
cltd
sbb
xor
in
cmp
pop
cmp
mov
lret
lods
movsl
arpl
cmp
int
or
int3
testb
sahf
mov
xor
fcoml
add
sub
push
fcomps
stos
sti
test
inc
icebp
dec
and
mov
dec
outsl
push
xorl
mov
pop
or
data16
xchg
stos
mov
lahf
dec
xchg
pop
mov
lcall
pop
add
and
dec
rorl
xor
and
adc
sub
rolb
ret
sbb
mov
mov
ja
dec
cmp
pop
jecxz
jg
xor
mov
movsl
sbb
mov
lds
fcoms
lods
push
mov
dec
jae
movsl
inc
pop
repz
pushf
stos
dec
mov
push
js
addl
leave
sahf
rcll
repnz
mov
xchg
xor
xchg
adc
fsub
fsubrs
add
sahf
xchg
fisttps
addl
inc
bound
add
pop
pushf
dec
sbb
mov
and
add
push
xlat
call
pop
popf
cli
pop
sbbb
push
bound
hlt
inc
fs
push
clc
pusha
sub
pop
sti
mov
ja
lods
xor
shl
pop
xchg
mov
or
outsl
sti
sub
mov
jns
push
jo
cmc
std
adc
pop
adc
jae
push
dec
test
sarl
mov
sub
hlt
cltd
mov
pusha
jbe
cs
aaa
jno,pt
xchg
mov
fs
icebp
pop
mov
outsb
jb
insb
das
and
fldt
add
pop
stos
xor
xchg
lcall
bound
inc
pop
mov
and
add
ror
sbb
lret
ds
dec
xchg
xchg
push
lods
adc
iret
fcoml
cmp
dec
lods
pop
in
adc
adc
dec
push
push
xor
pop
and
std
in
mov
cltd
das
rorl
aam
in
dec
test
adc
ss
lret
push
push
clc
aaa
xchg
mov
or
pop
inc
jle
mov
mov
gs
imul
push
jle
repz
and
stos
mov
fmull
fldt
sbb
mov
fstps
mov
push
xchg
repz
or
cmovp
sbb
pop
push
lea
pop
cli
fsts
pop
lock
cld
jmp
pop
cwtl
inc
mov
mov
push
sub
mov
dec
cmp
pop
adc
jg
stos
xchg
iret
inc
loopne
scas
sub
dec
ffree
jg
es
cwtl
mov
les
sub
cmp
pushf
in
mov
addr16
mov
mov
mov
repnz
inc
mov
inc
frstor
xor
jle
iret
jo
dec
mov
les
int
das
into
test
sbb
dec
ljmp
mov
insl
dec
mov
adc
cltd
adc
out
jae
das
dec
in
fwait
and
push
mov
jno
adc
iret
sbb
jmp
or
and
ja
fs
jno
clc
sub
popa
test
fidivl
or
push
lock
add
mov
js
add
outsb
fisttpl
mov
sahf
inc
inc
inc
or
ljmp
push
lret
sbbl
xchg
inc
aas
push
add
dec
sub
sbb
fdivl
data16
add
or
pop
ja
insl
loopne
repz
fisttpll
mov
lret
pop
cmpsb
mov
adc
dec
push
xchg
add
push
sahf
mov
aas
add
aas
mov
rcll
cmp
push
push
ss
or
pushf
mov
sti
and
ret
jae
push
mov
in
pop
repz
stos
pop
jle
out
jb
jp
sub
mov
adc
sbb
lahf
dec
sbb
fs
jae
outsl
sbb
sub
mov
xchg
and
inc
shr
stc
adc
movsl
or
aad
or
mov
addr16
xchg
add
sbb
loopne
sbb
sti
and
xor
xchg
decb
mov
cmc
jg
dec
mov
arpl
mov
mov
incl
sub
inc
dec
test
xchg
xor
ljmp
add
rorl
mov
push
lock
movsl
mov
out
push
inc
or
outsb
into
or
sub
andl
sti
jp
lea
or
jno
cmc
nop
pushf
je
inc
inc
sub
test
jmp
enter
xor
loopne
rorl
jne
adc
push
outsl
jmp
leave
pusha
mov
lret
pop
mov
jbe
jg
xor
mov
cltd
mov
clc
ds
pop
stos
in
cmp
mov
shlb
jo
and
adc
jp
out
testb
dec
sti
sbb
lods
mov
je
dec
cmc
divl
cmp
stc
notl
xor
pop
jmp
dec
mov
pop
es
lea
stos
movsb
rclb
lret
push
pop
sub
xchg
shll
inc
or
sbb
adc
into
sub
jno
push
push
jmp
sahf
xchg
cmp
rcrb
sti
data16
or
jns
notb
in
sbb
pop
iret
sbb
and
or
imul
push
adc
push
sbbb
push
fucomp
mov
pop
cmpsb
mov
sub
clc
ret
push
cltd
pop
or
das
std
in
jae
mov
lret
jbe
leave
jp
daa
xchg
inc
push
adc
mov
mov
fistl
push
adcb
push
andb
and
repz
loop
out
or
xor
xchg
mov
push
xchg
popf
cmp
mov
inc
pop
outsl
loope
add
pop
push
cmp
sub
scas
jmp
movsl
hlt
inc
in
ror
push
jo
jbe
popa
imul
scas
xchg
into
imull
fnsave
dec
cmp
aam
add
xchg
lret
test
xchg
mov
mov
mov
xchg
inc
roll
push
std
mov
jno
cmp
jg
enter
mov
and
ficompl
mov
xchg
mov
aaa
xor
push
stc
dec
or
xor
mov
mov
lea
pop
xchg
inc
push
inc
imul
dec
test
dec
dec
adc
xor
popa
push
mov
fwait
cmp
push
test
mov
jge
dec
xchg
out
mov
sbb
sbb
icebp
add
repz
pop
scas
xor
cmpsb
sub
test
mov
sbb
add
ret
xchg
pop
inc
xchg
gs
pop
xor
in
in
out
pusha
push
mov
mov
jo
cmp
repnz
dec
pop
in
mov
adc
mov
pop
dec
mov
or
test
es
aas
xor
cmc
mov
cli
out
or
mov
add
inc
push
and
iret
mov
jbe
fdivs
bound
jno
cmp
mov
jb
xlat
push
jae
push
jno
rcrl
int
push
adc
int3
dec
sub
jne
insb
mov
aas
call
adc
ss
xchg
xchg
jnp,pt
xor
outsl
jb
push
mov
push
rcrl
fcom
fiaddl
test
and
xchg
pop
out
sub
jo
outsb
adc
cmp
dec
and
dec
cmp
subl
bound
or
test
jbe
push
xor
pop
or
dec
fsubrs
or
mov
dec
cmp
adc
inc
popa
xchg
lret
cld
jno
out
push
lea
push
loop
pop
sbb
std
mov
sub
adc
les
imul
hlt
mov
push
cmp
cmpsb
jno
lods
dec
add
inc
ds
stos
push
or
movsb
or
test
mov
aam
xchg
stos
addl
sbb
ljmp
jp
incb
mov
pop
mov
xchg
inc
pop
lea
dec
iret
mov
xchg
clc
test
xchg
out
mov
sbbb
dec
sbb
mov
repz
sti
mov
sbb
ret
dec
arpl
fs
xchg
add
xor
leave
out
cmp
mov
outsb
out
xorl
mov
lods
jo
imul
fcomps
push
jbe
daa
daa
mov
mov
jl
loop
out
mov
lcall
lds
inc
test
stos
jmp
out
call
sbb
in
pushf
data16
push
lcall
out
jmp
pop
push
dec
aad
xor
mov
movsl
adc
push
outsl
xor
mov
mov
jp
inc
xor
jmp
cmpsl
mov
xor
iret
out
push
dec
xchg
pop
scas
jo
leave
and
adc
mov
xchg
lret
mov
out
dec
ljmp
jnp
orl
xchg
and
fdivs
in
sbb
pop
sub
cs
cmp
push
stos
aam
cli
in
xchg
and
xor
sub
xor
mov
mov
pop
adc
pop
mov
cli
and
pop
shlb
loop
rorl
add
or
mov
pop
outsl
mov
adc
leave
test
jnp
and
xchg
popf
cmp
dec
pop
loope
and
or
and
lret
mov
jmp
cltd
outsb
xor
adc
fsubrl
add
sbb
cmc
mov
or
push
mov
mov
push
mov
dec
adc
hlt
mov
adc
loop
mov
jne
add
pop
jb
and
out
mov
xor
cli
mov
cmpsl
orl
xor
popf
scas
push
out
ljmp
push
adc
jo
or
outsl
lods
mov
jge
pop
xor
mov
imul
aas
pushf
xlat
sbb
ja
add
fisubl
call
notl
or
push
call
adc
push
sbb
fimuls
xchg
mov
gs
movsl
lock
mov
scas
sub
pop
adcl
out
push
cmpsb
inc
outsb
ficoml
pop
cmp
cmp
add
jp
lret
push
cmpsl
xchg
cmp
sbb
sub
stos
cmp
pusha
stos
movsb
loope
daa
inc
mov
adc
mov
xor
iret
ss
or
mov
adc
out
adc
xchg
cmp
pop
test
xor
or
mov
sub
ss
fwait
sbb
push
pop
cmpl
insl
lcall
dec
loop
ds
out
es
mov
pop
bound
mov
mov
jge
arpl
out
or
into
jb
cmp
repz
mov
sbb
aad
mov
mov
pop
xchg
daa
fsubl
mov
shlb
out
paddw
sub
push
mov
aaa
jl
popf
in
mov
jp
jnp
test
out
or
test
gs
adc
sbb
add
lock
add
es
push
adcb
jb
orl
jo
push
push
xchg
sbb
repz
xchg
call
pop
dec
sahf
call
test
sahf
ds
rclb
lods
mov
xor
imul
mov
push
ss
filds
call
add
aam
mov
je
dec
xchg
sub
cmc
subb
into
js
out
jle
addr16
sub
adc
leave
lret
pop
push
repnz
cmp
sbb
jae
cwtl
push
sbb
jbe
jmp
rcrb
enter
fdivrl
mov
add
clc
pusha
xorl
fcomps
mov
fldl
call
or
xor
popa
push
cmpsl
or
push
aam
in
cs
mov
hlt
add
and
popa
push
lret
push
jg
sub
mov
pop
pop
stos
loop
or
push
daa
test
out
pusha
mov
outsb
add
xchg
push
sub
aam
push
jg
mov
mov
jne
mov
sub
fnstcw
iret
js
lods
fstps
xlat
mov
and
sub
push
sub
cmp
inc
outsl
mov
inc
xor
sbb
push
frstor
adc
sub
lods
test
xchg
in
xchg
imul
or
xchg
gs
aad
cmp
mov
nop
xor
mov
adc
adc
lcall
std
jns
stos
mov
push
jae
aad
sbb
dec
outsl
xor
testb
loop
and
sbb
inc
fistpll
or
jle
mov
std
les
cs
imul
arpl
adc
adc
lret
push
popf
stos
clc
inc
repz
negb
sbb
push
adc
mov
mov
loopne
mov
mov
or
inc
add
movsl
fs
mov
mov
mov
pop
jle
scas
xor
jle
jb
aam
pop
push
push
fisttpl
dec
mov
popf
push
lret
js
xchg
aad
test
mov
sbb
out
inc
loope
adc
jbe
scas
jo
mov
add
ss
nop
inc
or
xchg
xchg
push
mov
dec
cmp
inc
xor
popf
lods
cmp
xlat
add
int3
mov
cmp
xlat
and
jmp
xchg
push
cld
add
sub
adc
int3
loopne
cmc
pop
stos
and
stos
fsts
cmc
or
movsl
aaa
push
jl
cmp
sbbb
fcoms
rcrb
dec
jno
fcmovu
pop
daa
or
mov
cmpl
add
mov
test
sbb
and
insl
loopne
xchg
xchg
es
push
imul
add
loop
test
das
jo
mov
add
sarb
rorb
sbb
adc
in
mov
add
popf
mov
test
adc
xchg
js
shlb
pop
jmp
push
adc
and
and
scas
or
insl
push
aas
in
pop
mov
fs
push
mov
roll
and
sub
dec
jnp
mov
test
hlt
ret
mov
cmp
xchg
mov
leave
ret
in
repz
arpl
jg
in
scas
loopne
mov
in
daa
cmpsl
ljmp
mov
imul
sbb
dec
popf
aad
and
mov
dec
mov
mov
jp
jne
sub
mov
xor
test
mov
hlt
cld
mov
or
xor
push
imul
push
adc
fldenv
loopne
add
xchg
cmp
in
adc
popa
push
nop
xchg
lods
sbb
lahf
pop
rcrl
test
dec
sbb
insb
ficoml
call
pop
xchg
mov
shlb
sbb
dec
ljmp
jge
ss
je
jae
loop
aad
cmp
add
push
sub
mov
pushf
cmpsl
loope
pop
sub
xchg
push
fidivl
and
inc
dec
inc
cld
jne
pop
fs
out
pop
aad
mov
movsb
rcrb
sbb
or
ljmp
inc
imul
cmpsb
cmp
sti
xor
inc
pop
xchg
push
and
dec
lock
ljmp
or
outsb
mov
fwait
outsl
pop
pop
rorb
xlat
xchg
push
fwait
lock
mov
push
jnp
push
push
inc
enter
fwait
pop
mov
dec
dec
stos
in
sbb
jl
ficompl
fstpt
and
cli
push
sbb
out
jno
jno
cwtl
pop
addr16
pop
scas
dec
pop
mov
inc
outsl
cmp
shlb
cmp
push
and
clc
fldl
int3
cld
test
je
xchg
push
fildll
adc
fwait
call
int
enter
xchg
hlt
repz
inc
mov
mov
out
popf
add
hlt
mov
sbb
test
leave
or
movd
cwtl
fmuls
mov
sbb
loop
mov
in
dec
inc
or
sti
lcall
insl
push
clc
in
addl
xchg
jne
rclb
ja
lret
call
test
addl
pop
icebp
sahf
sbbl
dec
xor
push
repz
in
je
mov
dec
sub
jae
loopne
mov
jae
fstp
outsl
inc
les
in
xor
add
pop
and
push
cmc
loopne
aam
in
jbe
fwait
aam
nop
mov
inc
aam
out
movsb
xchg
inc
add
inc
push
ficomps
mov
jmp
mov
iret
sub
jns
adc
sbb
aas
aaa
jo
cld
test
pop
push
inc
daa
inc
mov
pusha
loopne
jge
daa
leave
aam
sbb
pusha
icebp
nop
xchg
jge
idivb
jle
jp
iret
aas
jb
icebp
mov
pop
jns
jb
hlt
in
sbbl
jb
test
insw
sbb
mov
and
sbb
mov
and
popf
adc
dec
pop
arpl
adc
fsub
xchg
out
sbb
ds
loope
testl
lods
add
imul
jb
pop
cmp
loop
push
adc
xor
stc
sub
leave
out
dec
stos
push
lahf
xor
aas
or
jo
add
enter
mov
cmpsl
xor
jge
stos
adc
int3
pop
cld
inc
ret
orb
jne
and
scas
ja
mov
and
fadds
loopne
aad
lock
shlb
jl
mov
sbb
aaa
cmc
sbb
movsl
popl
and
mov
jns
and
fisttps
call
fisttps
pop
jge
movl
ljmp
inc
outsb
mov
or
xchg
push
loopne
sub
daa
cs
ret
fwait
cmpsb
xor
hlt
leave
lahf
inc
pop
add
sbb
data16
pop
sub
dec
outsl
ret
adc
jg
mov
rcr
scas
ds
js
pop
shrb
ficoml
call
rorb
push
mov
mov
mov
sbb
filds
lahf
sub
in
popf
push
insl
mov
push
sub
adc
mov
mov
mov
fstl
cltd
es
cmp
dec
int3
jecxz
repnz
inc
std
dec
mov
mov
xchg
pop
add
aad
cmp
fwait
lock
int3
out
sbb
xchg
mov
pop
and
dec
in
test
fs
nop
or
xchg
push
into
jns
jl
inc
out
fsubrs
aad
push
and
movsl
rorb
mov
mov
pushf
cld
add
enter
pushf
out
jb
sub
enter
and
loop
in
mov
dec
add
mov
pop
or
rcll
out
pop
inc
dec
push
add
shll
aas
leave
arpl
cli
pop
push
ja
adc
jne
dec
mov
sub
ja
add
mov
adcb
fistpll
icebp
aam
or
test
lock
aad
mov
mov
inc
push
loop
cs
loop
dec
cmp
loope
pusha
aad
in
in
mov
sbb
test
mov
out
enter
in
inc
xchg
out
aas
scas
out
sbb
mov
test
sar
dec
hlt
or
es
cmp
mov
cmc
stos
ret
fstpt
cmp
xlat
mov
testb
repnz
mov
lods
and
xor
in
cmovle
rcrl
push
or
je
andl
aad
or
add
mov
pushf
or
stos
jmp
mov
jae
push
mov
mov
les
ss
test
inc
daa
gs
push
adc
adc
push
cmp
clc
insl
xchg
cmp
mov
fidivrl
push
loope
mov
add
jmp
inc
data16
lcall
xor
sub
dec
pop
pop
stos
mov
in
mov
push
dec
or
jae
mov
jp
sbb
mov
insl
xchg
push
inc
xchg
repz
sbb
add
pop
sarb
mov
sub
cmc
hlt
pop
push
enter
ds
enter
lds
int3
cli
stos
push
lcall
dec
xor
push
or
push
and
cmc
stc
jecxz
mov
push
repnz
loopne
pop
test
leave
mov
xor
dec
jnp
lcall
in
je
lahf
xchg
cltd
in
pop
mov
sbb
pop
cmp
jecxz,pt
dec
loop
xor
pop
xchg
sbbb
insl
jns
negb
mov
repz
aaa
adc
xor
out
insb
push
pop
outsb
fadd
gs
jns
push
cmp
test
mov
xor
and
or
stc
sub
jns
cmp
test
pop
jp
xlat
inc
shlb
inc
xor
inc
or
aas
jge
cwtl
sti
mov
nop
sbb
and
fsubl
aam
out
decl
pop
push
fs
xchg
or
adcb
push
mov
lcall
sbb
push
fcomps
cmp
cmp
fs
sbbb
shll
int3
pop
push
push
out
fs
mov
dec
sub
xchg
mov
and
pop
fidivrl
pop
inc
push
jo
data16
push
or
fs
rcrl
out
mov
imul
push
push
aad
push
mov
or
inc
inc
pop
out
dec
and
movmskps
insl
pop
ss
fwait
dec
stc
pop
inc
leave
sbb
mov
fnsave
xor
cmp
mov
das
cmp
dec
movsb
jg
sbb
cmpsb
xchg
insb
and
mov
das
jo
shrl
inc
popf
adc
jmp
push
pop
push
jmp
adc
imul
insb
xchg
ret
jge
pop
aas
cmp
sbb
into
lret
mov
xchg
lods
or
push
es
sbb
or
sub
pop
pop
xchg
pop
dec
outsb
popa
pushf
or
push
lods
or
in
cmpsb
test
lea
repnz
xor
mov
ds
adcl
jl
dec
cmp
cmp
mov
fwait
in
inc
stos
sub
addb
mov
test
sahf
jecxz
cmpsl
repz
pusha
jo
popf
fwait
sub
push
cld
dec
movsb
in
sub
repnz
je
dec
shrl
jne
adc
jae
and
pop
je
stos
sbb
imul
cmc
arpl
xchg
add
mov
ljmp
cs
ljmp
xor
mov
icebp
jmp
insl
xor
fadds
xchg
pushf
xchg
jg
insl
cmp
je
sub
mov
out
inc
hlt
addr16
pop
sti
adc
dec
push
out
sbb
jb
push
jb
stc
call
xor
mov
rcrb
push
push
cmpsb
dec
fwait
hlt
call
data16
movsb
lea
jo
push
inc
jmp
inc
cld
mov
push
movsb
js
test
cmp
jp
popf
add
popf
out
lods
daa
repnz
fwait
loop
xchg
out
add
inc
push
nop
xchg
inc
adc
inc
rcrl
clc
or
mov
jno
hlt
cmp
inc
inc
push
rol
pop
fdivrs
push
in
mov
or
cwtl
add
insb
inc
xor
jns
dec
mov
add
cli
and
ja
inc
ret
add
xchg
adc
je
and
dec
daa
jmp
js
sti
cmp
cmp
pushf
pop
jno
js
arpl
push
and
popf
add
nop
std
inc
inc
jae
aas
shl
xor
jmp
data16
sub
fucomi
push
push
push
xlat
jle
inc
loopne
sub
jno
popf
cmp
push
push
add
push
lahf
mov
lods
fcomps
mov
call
jne
enter
aad
push
shlb
inc
cli
adcl
pushf
mov
ret
pop
add
push
add
mov
mov
notl
mov
mov
fwait
xchg
mov
loope
add
mov
popf
xchg
mov
adc
call
xchg
mov
sub
cmp
test
inc
cmpsb
test
cmp
jge
enter
and
ja
sbb
mov
fdiv
sbb
dec
int3
loopne
fdivl
add
testb
loopne
pop
daa
inc
push
sbb
inc
inc
or
fdivp
jbe
jmp
incb
pop
sahf
add
mov
fiadds
fstpt
fucomip
mov
test
lret
cmp
mov
sbb
out
adc
cmp
fsubrs
xor
scas
mov
xchg
dec
jne
push
cmp
loop
enter
repnz
pop
aam
test
cmpsb
xor
out
or
out
ss
and
cld
push
or
inc
mov
or
xchg
arpl
and
jmp
add
popa
in
push
jno
stos
mov
hlt
cltd
xchg
outsb
mov
gs
and
cmp
and
mov
out
sbb
cmpsb
cmpb
xchg
mov
jmp
xchg
std
sbb
lcall
push
push
mov
pop
dec
test
dec
cmp
push
xchg
or
and
or
push
mov
xchg
cbtw
imul
addb
ss
jo
xchg
dec
ret
in
xlat
xchg
jg
inc
jle
lods
aad
or
cld
test
sub
and
push
push
mov
ljmp
fidivs
push
push
or
test
hlt
sbb
push
iret
jge
imul
sbb
push
dec
incb
fcmovnb
cmpsb
into
int
lea
jecxz
adcb
jecxz
clc
jecxz
ja
mov
sahf
scas
sub
fdivrl
mov
mov
stos
or
mov
nop
popf
jno
mov
fwait
sbb
ljmp
mov
mov
or
imul
cltd
mov
les
adc
jne
test
add
test
andb
adc
jae
sbb
fsub
inc
ret
test
adc
inc
hlt
enterw
pushf
cmp
dec
xchg
bound
jg
sub
mulb
lahf
or
mov
testb
outsb
mov
lret
sbb
stc
andl
ljmp
test
inc
cmpsb
push
inc
scas
mov
or
mov
mov
and
iret
out
rclb
aaa
movsl
lcall
fisubrs
push
sub
xchg
xchg
fstpt
mov
pop
mov
mov
cmpsl
cmp
xchg
movl
jecxz
or
imul
repz
lods
mov
pop
sub
cmp
push
ficoml
jg
hlt
push
imul
scas
out
mov
pop
cmp
arpl
inc
xchg
mov
mov
fs
mov
push
inc
sbb
sub
xor
mov
mov
rorb
lods
adc
adc
fsubs
nop
sub
push
stos
int
pop
push
xor
maxps
cmpsb
sub
std
repz
adc
and
sub
push
or
xchg
cs
fidivrs
cmpsl
pop
mov
jnp
mov
daa
pop
movsl
adc
push
xor
push
movsl
shl
outsb
sub
sbb
push
dec
scas
dec
lock
movsb
dec
psrlq
adc
fucomip
loop
dec
outsl
mov
push
jb
pop
or
loopne
adcb
int3
jae
inc
loopne
pop
mov
mov
or
les
fcmovb
xchg
stos
in
dec
adc
fiaddl
jmp
pop
test
in
xor
movsl
cld
sbb
xlat
jno
test
adc
call
cmpsb
ljmp
ficoms
mov
mov
int
mov
xor
pop
sub
sbb
ficompl
push
jo
xor
int
dec
sbb
int3
test
aam
jns
inc
add
jmp
lods
cmp
mov
rcrb
push
iret
scas
cmpsl
xor
cs
cmp
jp
in
push
ror
int
out
inc
ret
iret
jb
fisubl
popa
mov
or
jle
orb
cmp
cmp
loopne
jns
outsb
scas
mov
scas
jbe
mov
call
jo
mov
xor
inc
xor
add
fstps
cmp
xchg
dec
movsb
out
repnz
and
in
rcrl
dec
xor
push
mov
stos
test
inc
xor
cli
daa
inc
sbb
xchg
jp
mov
insb
cmp
js
dec
add
aaa
lret
cmp
jge
or
pop
xchg
loop
cmp
push
sahf
sub
jp
sub
cmpb
jmp
fs
add
enter
pop
outsb
sub
mov
bound
shlb
dec
xor
movsb
mov
push
ja
aas
add
fs
imul
jne
call
jp
mov
dec
notb
or
jecxz
jle
jg
dec
add
fsubs
sbb
lret
fisubl
and
pop
sub
nop
dec
inc
push
xchg
ret
fcmovnbe
add
add
dec
mov
sub
push
out
sbb
jle
jbe
cmp
repnz
loope
cmpsl
les
xchg
dec
cli
testl
cmpsl
dec
sbb
and
mull
enter
mov
adcb
js
jae
jb
icebp
jae
aad
jae
movsb
jne
mov
loope
out
adcl
ficoms
faddl
leave
pop
std
imulb
adc
repnz
jae
and
ret
imul
repz
clc
je
cmc
fcoml
cmpsb
mov
add
mov
cmp
loop
mov
cmpsl
das
fwait
inc
cmp
lods
icebp
das
aas
inc
dec
inc
mov
pop
fisttpl
pop
inc
shl
into
dec
and
adc
fldl2t
xor
push
fs
je
inc
mov
fiadds
or
in
inc
jmp
or
jnp
loope
mov
sti
inc
or
sbb
xchg
or
mov
push
inc
or
dec
push
out
rol
jnp
dec
add
xchg
fidivrs
addr16
rolb
jl
add
push
mov
inc
xchg
mov
outsl
sub
push
inc
push
lret
add
ret
in
mov
inc
adc
or
cmpsb
jo
mov
mov
mov
mov
out
mov
cltd
test
jp
mov
inc
add
sub
xchg
pop
fisttps
popf
ret
lea
xchg
hlt
bound
pop
outsb
cmpsb
and
mov
and
cmp
shrl
pop
xor
jecxz
mov
dec
sbbb
inc
sub
push
imul
add
in
jp
xchg
pop
sbb
loopne
jge
int3
lea
repz
cmp
test
cmp
adc
clc
aam
cmp
shlb
ficompl
in
sahf
out
fdivrl
mov
clc
push
out
iret
popf
xchg
stc
mov
push
adcb
xchg
rolb
loopne
or
je
fld
stos
mov
pop
stos
cltd
pop
cld
inc
jae
cli
push
sbb
cltd
cmp
cld
stc
sbb
mov
sbbl
movsb
das
mov
push
adc
mov
push
xor
fimuls
pop
adc
or
lret
pop
jg
xchg
add
cmpsl
xchg
pop
aas
out
test
cmp
inc
imul
rorl
jae
adc
in
add
pop
lahf
sub
lahf
xor
inc
or
inc
jmp
out
loop
ljmp
mov
or
scas
jbe
in
mov
jg
inc
lea
cld
incb
call
lods
cmpsb
sbb
lret
sub
push
fildl
addr16
jne
scas
pop
jo
jl
repnz
jmp
outsl
add
dec
dec
mov
in
push
jle
insb
lahf
xchg
rorb
adc
cs
fsub
and
adc
mov
cmp
and
outsb
and
shlb
xchg
inc
pop
or
fs
inc
out
hlt
decb
mov
dec
pushf
out
decl
js
jae
in
xor
mov
jno
sub
sahf
fcoml
pop
ljmp
jnp
xor
fadds
test
rcll
daa
fldenv
repz
xlat
loope
mov
ja
lret
sub
sahf
les
test
push
stos
pop
xor
sub
loopne
jns
and
mov
xchg
mov
push
add
push
pusha
sbb
ljmp
imul
ljmp
push
lock
pop
inc
inc
in
cmpsl
xor
cltd
out
jae
and
mov
shlb
je
lods
clc
add
jg
call
aas
test
add
outsl
enter
or
mov
test
lds
jns
loop
and
or
movsl
sarb
mov
ss
iret
pop
gs
jmp
xchg
jns
xchg
std
push
push
mov
fimuls
jp
stos
cmpsl
fimuls
clc
or
push
xlat
sti
xchg
repnz
mov
mov
pop
and
and
lds
and
out
call
mov
mov
mov
movsb
push
popa
xor
repnz
fmuls
jmp
and
jle
dec
jne
stos
or
push
bound
mov
push
cmp
pop
jae
fnsave
xor
scas
mov
mov
aam
popa
mov
add
cmp
bound
ljmp
sub
push
jnp
in
loopne
dec
push
inc
imul
inc
push
fscale
addb
mov
push
cmpsb
mov
sbb
jge
outsl
inc
aam
xchg
and
and
loopne
pushf
push
repz
pop
and
jmp
repz
std
out
xchg
insb
loopne
nop
scas
pop
inc
mov
dec
rorl
pop
jae
push
loope
icebp
lods
pop
call
out
and
leave
or
add
add
cli
jle
xchg
adc
inc
push
xchg
lret
shll
das
jmp
jnp
pop
push
nop
rcrb
cmpsb
and
mov
dec
adc
add
mov
ret
xchg
sub
dec
fwait
stos
mov
out
repz
cmp
fnsave
popf
pushf
icebp
dec
push
popa
out
test
psllw
das
pop
sub
jnp
push
or
xchg
or
pop
std
arpl
sbb
movsl
aas
push
mov
inc
mov
leave
xchg
sbb
lahf
fists
psllq
outsl
sub
popf
push
push
int3
rcrb
or
xchg
and
cmc
setbe
inc
mov
sbb
fdiv
mov
inc
jecxz
loop
mov
shlb
ret
sub
repnz
xchg
jnp
neg
jle
mov
imul
hlt
sbb
xor
jecxz
imul
mov
and
ljmp
jl
xor
icebp
fstpl
and
mov
add
fs
lret
cmp
orl
xchg
jg
lret
insl
sbb
out
idivb
lods
push
pop
adc
pop
pop
popa
sub
jp
mov
out
incb
mov
lret
pop
rcrl
sbb
or
lods
shrl
shlb
ljmp
pop
vpshuflw
jmp
test
insl
jne
xchg
sahf
add
fiaddl
jg
fsubl
jge
insl
fsub
dec
mov
xchg
sub
std
repz
adc
int3
aaa
dec
fmuls
sub
aam
hlt
inc
iret
inc
push
fsubrs
subb
sub
aad
clc
fdivrs
scas
mov
mov
lret
or
sub
dec
dec
fisubl
into
and
pusha
data16
cwtl
cmp
je
ffree
leave
aam
jno
inc
xor
ret
shrl
push
in
movsl
mov
aad
insb
mov
shlb
push
sub
mov
cld
inc
mov
dec
sahf
and
mov
scas
inc
pop
aad
push
int3
lock
xor
add
leave
sbb
bound
mov
fsubrl
scas
pusha
mov
test
aaa
xchg
adc
aas
pop
and
adc
ja
push
sbb
stc
mov
popa
inc
pop
xchg
aam
push
sbb
mov
ja
mov
jno
es
arpl
ret
and
movsl
adc
jmp
or
cwtl
mov
movsl
inc
xlat
xchg
shl
movsb
push
std
and
sbb
lds
popa
nop
add
inc
sbb
dec
ror
lahf
sbb
aaa
cmp
bound
sahf
lahf
cmpsb
jecxz
lea
aad
outsb
push
mov
inc
dec
ret
pop
pop
jmp
bound
fs
stc
out
and
imull
mov
or
aaa
ret
mov
lret
sbb
popa
and
pop
and
call
inc
xor
arpl
sub
adc
dec
sub
or
lcall
mov
aad
push
xchg
mov
scas
arpl
data16
adc
inc
push
mov
or
mov
dec
lea
int3
jg
jle
lods
sub
in
xchg
daa
inc
add
outsb
and
leave
and
in
jnp
jmp
test
jg
test
das
xchg
sub
jo,pt
shr
dec
aam
fnstsw
cmc
ja
fs
stos
jle
add
into
fisttpl
pop
lret
fwait
stos
dec
stos
dec
mov
cmp
xlat
mov
sub
and
xor
cs
xchg
leave
fcmovb
xchg
and
out
mov
mov
repz
cmp
push
push
xchg
push
cld
add
add
arpl
and
cmp
sarb
and
mov
testb
dec
xchg
shl
cmp
outsb
inc
clc
dec
rcrl
lds
aaa
inc
xor
push
sub
add
xor
push
mov
adc
pop
fisubrl
jbe
imul
inc
xlat
push
pushf
adc
push
outsl
jmp
jle
sbb
arpl
scas
xchg
jmp
rcll
test
mov
dec
or
lods
rcrl
jecxz
popa
mov
adc
push
push
jo
pop
loopne
and
push
pop
lods
push
mov
sbb
test
and
nop
out
les
lea
jae
inc
sub
push
iret
insl
pop
push
push
adc
cs
sbb
pop
mov
mov
pushf
mov
dec
sbb
or
jae
loopne
or
stc
mov
or
sub
adc
loopnew
js
ds
cmp
mov
jns
ljmp
rol
xor
dec
adc
jle
sbb
rcrl
dec
xor
lods
push
dec
pop
cli
test
sahf
cmp
pop
sub
add
sahf
sub
jno
jno
xchg
or
mov
inc
dec
jbe
fwait
sbbb
xchg
mov
add
and
ror
push
bound
fisttps
rcr
jnp
pop
test
loopne,pn
mov
xor
pusha
mov
jp
and
not
enter
rcl
cltd
or
sti
mov
jp
loope
jmp
mov
inc
sub
jns
lods
bound
aad
test
xchg
xchg
mov
ret
and
jb
lret
adc
lret
sub
jns
mov
in
scas
xchg
or
lret
sbb
add
mov
push
lret
adc
push
lcall
xchg
lods
sbb
std
incl
repz
inc
push
pop
or
mov
nop
mov
mov
add
dec
movsb
bound
popa
mov
lea
jb
mov
in
je
test
add
dec
mov
push
lods
xchg
insb
mov
mov
rclb
or
cmpsb
in
inc
je
fsubrs
aas
into
pushf
test
cmpsl
stos
insl
stos
loope
add
rcll
cmpsb
test
aaa
orb
pop
sub
ja
sahf
lret
std
xor
sarb
mov
push
mov
add
stos
pop
sbb
loopne
lods
les
stos
and
stc
fbld
pop
pushf
outsl
inc
sbb
sbb
scas
and
stc
lock
movsb
fistpl
fcmovnb
cmp
mov
mov
das
cmp
xor
pop
daa
lods
repz
aad
retw
push
outsb
rcr
outsb
push
fidivs
mov
lret
lahf
in
inc
sbb
cmp
out
fisubrs
pop
cmp
pop
loop
dec
cmpsb
cmp
xor
and
clc
mov
lret
cs
xor
int
cmp
jns
push
mov
call
test
push
test
mov
loope
sbb
lock
mov
jbe
pop
cmc
cmpsl
xchg
adc
cltd
popf
out
mov
lahf
mov
dec
es
addl
sbbb
cmp
pop
cwtl
sub
jge
or
sbb
notb
mov
mov
leave
xchg
sub
pop
xchg
div
loope
jl
ss
std
jmp
xchg
cmp
int3
sbbb
dec
neg
add
repz
push
pop
or
or
xor
mov
insl
ret
in
inc
shlb
hlt
xor
stos
pop
gs
mov
and
iret
add
lods
enter
sub
loope
stc
lret
xchg
sahf
pop
fstl
imul
lea
add
pushf
or
fmull
pop
leave
ljmp
cmc
cmpsl
sahf
fldt
lods
sub
dec
call
xchg
push
xor
mov
notb
scas
cmpsl
add
mov
sarl
loope
xchg
dec
clc
mov
aas
jge
je
add
sbb
inc
adc
rclb
inc
popa
push
jo
daa
stc
inc
sbb
xchg
lahf
cmp
fcmovu
stos
stos
inc
or
fiadds
inc
inc
and
fldl
lock
mov
dec
ret
scas
sub
mov
push
pusha
int3
loopne
sub
aad
jne
fiadds
ret
xor
mov
popa
lret
sbb
stos
push
psubq
xchg
jno
pop
lret
test
std
mov
inc
dec
jl
pop
call
xor
add
insb
in
push
in
repz
out
or
xchg
sbbl
roll
mov
mov
clc
loope
sub
push
mov
pushf
push
inc
xchg
imul
xor
cmc
bound
les
test
sbb
sub
addr16
add
gs
popa
pop
push
mov
xchg
outsl
inc
sub
subl
and
in
popa
push
paddq
cmp
lahf
loop
xchg
dec
cmp
pop
push
les
or
cmp
mov
aas
xchg
std
sub
dec
add
pop
inc
in
and
in
jmp
sbb
inc
sbbb
fistpll
movsl
pop
mov
mov
orl
cmpsb
lret
enter
xchg
mov
jae
mov
sub
push
add
push
push
rcll
xchg
fmul
sbb
out
add
jb
add
clc
es
fsubs
inc
lods
mov
mov
lds
insb
scas
cwtl
movsb
push
pop
enter
xchg
and
xchg
in
xorl
add
push
clc
stos
mov
cmp
imull
insl
scas
mov
cmc
imull
imul
adc
hlt
xor
pop
mov
sarb
fdivr
loopne
fnstsw
or
push
dec
dec
push
mov
xor
push
gs
cmp
adc
and
js
xor
jno
cmpsb
test
xchg
jge
pop
bound
loop
pop
xchg
shlb
int3
rcr
enter
mov
push
xor
push
iret
out
call
in
imul
xor
lahf
out
mov
hlt
repz
inc
dec
movsl
das
inc
aam
cmpsl
mov
inc
aaa
cmp
in
mov
push
loop
add
cmp
mov
je
adc
adc
icebp
push
push
adc
sar
add
fwait
xchg
test
add
mov
in
data16
push
aad
int3
sub
and
mov
xchg
nop
mov
lret
inc
xor
adc
pop
or
popa
insb
pop
lods
inc
add
jns
cmp
int
or
xchg
push
loopne
lock
pop
mov
and
out
push
aad
outsl
jnp
mov
adc
mov
push
repz
push
fiaddl
ds
leave
pop
xchg
mov
push
cmovne
cmp
arpl
sbb
xor
push
test
pushl
mov
dec
cmp
cltd
mov
xchg
outsb
xor
out
xchg
lods
fisubs
inc
adc
fldenv
xchg
mov
pop
lcall
mov
loop
jae
lods
push
cmpb
das
mov
and
mov
adc
les
xchg
pop
inc
pop
pop
enter
pop
mov
xchg
push
xchg
xlat
in
jmp
cmp
push
pop
mov
cmp
outsl
inc
sbb
mov
outsb
xchg
xchg
xlat
lret
fwait
add
fsts
pop
jle
adc
out
jg
xchg
lahf
inc
test
jae
or
sub
test
inc
inc
xchg
mov
cld
ds
mov
mov
cmp
dec
xchg
jmp
sub
loopne
push
lcall
in
stos
sub
stos
adc
iret
pop
les
jge
mov
cmp
lods
ja
scas
in
pushf
sub
iret
out
cld
mov
outsb
cmp
adc
cmc
push
cltd
lods
loopne
push
in
or
aaa
sahf
jne
shrb
mov
add
pusha
into
and
jae
mov
adc
lahf
into
jns
sbb
gs
push
adc
lock
dec
add
jns
stc
pushf
sbb
jbe
push
sbb
jg
loope
test
adc
mov
out
mov
test
pop
into
xchg
mov
aad
pop
pop
mov
outsb
mov
ss
sti
insb
xchg
mov
ret
mov
sbb
inc
insb
in
or
cmp
push
in
fsubrs
xchg
std
dec
ss
push
mov
loop
fs
inc
jge
mov
sahf
push
stos
mov
mov
inc
mov
adc
rep
or
negb
js
and
mov
mov
or
shrb
cltd
push
scas
sbb
push
rolb
or
popl
sub
inc
fisttpl
sbb
aas
in
stc
pop
cmp
cmp
js
dec
or
push
jns
bound
stc
shlb
test
mov
xchg
pop
cmp
in
shlb
bound
xchg
jl
mov
adc
or
mov
sub
inc
xor
inc
sbb
ss
shlb
sbb
sbb
add
ds
mov
xchg
xorb
in
push
lret
push
mov
and
pop
mov
and
cmpsl
aas
test
rcrb
dec
loope
mov
pop
jmp
jb
lock
sbb
mov
mov
mov
mov
cs
jmp
push
cmpsl
mov
push
adc
cmc
mov
clc
negb
mov
mov
mov
mov
out
sbb
rclb
xchg
inc
xlat
push
adcl
mov
stos
add
sub
or
or
fwait
sbb
out
xlat
mov
inc
es
bsf
cmpsl
mov
mov
mov
cli
cltd
push
push
pop
pop
out
pop
int3
jge
popf
xchg
or
mov
mov
test
shld
jns
jae
mov
add
push
jae
repz
out
aas
loop
std
andb
ds
cwtl
stos
outsb
test
cmpsl
or
fcoml
adc
xchg
gs
mov
scas
out
xchg
stos
xchg
imul
sbb
test
or
fdivs
sub
sbb
rorb
cmp
sbb
daa
imul
dec
mov
mov
loope
add
pop
mov
cmp
and
push
xchg
test
jmp
repnz
mov
ljmp
push
dec
out
mov
xchg
dec
inc
mov
or
cwtl
jp
mov
inc
subb
loope
dec
push
pusha
shrb
push
add
xlat
mov
lret
ja
lahf
nop
ficomps
arpl
cmp
cmc
pop
decb
outsl
adc
jno
pop
mov
testl
mov
mov
sbb
sbb
dec
add
cmpsb
test
addr16
negb
popa
mov
adc
call
test
test
in
movsb
fwait
mov
loopne
lds
test
xchg
sbb
push
xchg
insl
aad
mov
js
sbb
pandn
pusha
stos
and
xchg
mov
mov
icebp
int
lcall
rclb
inc
into
dec
mov
out
int
push
bound
xor
push
cwtl
iret
and
jl
xchg
leave
iret
and
stos
in
or
mov
xor
aaa
iret
fadds
xchg
out
fadds
sbb
add
mov
or
fcom
js
lods
sbb
in
nop
fdivrl
imul
cmpsl
leave
repz
mov
je
incl
aad
xor
fildll
sub
inc
gs
sahf
nop
sbb
cmpsb
add
iret
xchg
mov
mov
dec
mov
out
cmpsl
test
ret
xchg
xchg
sbb
xchg
arpl
sub
mov
pop
iret
pop
jge
ljmp
imul
arpl
iret
xor
lret
shll
subl
loopne
test
mov
fmul
cmp
and
fcmovnu
inc
dec
dec
aas
enter
ss
lret
jmp
shl
pushf
lret
xchg
dec
test
int3
rclb
inc
and
nopl
xor
xorb
into
push
lods
fs
pop
stos
fdivrs
jge
inc
fwait
outsb
roll
xor
stc
dec
jns
push
pop
xchg
mov
sti
ss
ret
daa
dec
mov
lock
aas
sub
in
cltd
dec
and
mov
sarb
aaa
je
xor
clc
cmp
popf
inc
pop
inc
sub
xor
unpcklps
paddd
lret
shr
mov
fsts
test
lret
push
xchg
scas
loop
xor
and
les
or
dec
inc
mov
pushf
scas
mov
or
push
jp
xlat
fcomp
jbe
sbb
sahf
nop
ljmp
and
mov
adc
jno
rcl
push
pop
jp
ja
jp
outsw
je
and
andl
xor
out
mov
hlt
cmp
sbb
in
xchg
xchg
orb
arpl
outsb
xor
mov
xor
xor
mov
mov
pop
adc
in
push
mov
lahf
inc
xor
sub
stos
repnz
xor
popa
pusha
nop
pop
popf
adc
paddb
push
cmp
cmc
scas
stos
push
popf
cli
pusha
jmp
jmp
orb
lock
daa
push
pushf
cld
in
mov
push
xchg
cld
inc
shl
dec
test
sahf
dec
and
aaa
loop
pop
adc
les
push
loop
or
lods
pop
loopne
nop
inc
inc
arpl
jg
xchg
ds
mov
sub
or
rorb
mov
nop
jmp
rcrb
ja
inc
jmp
test
mov
sbb
pop
cmp
out
stos
sbb
or
aas
adc
dec
cltd
push
sub
popa
xchg
sub
pop
sbb
pop
fdivrl
test
xlat
sysenter
push
cmp
xchg
outsl
mov
and
imul
or
xor
sub
shll
call
sub
sbb
sbb
xor
jno
aam
imul
pop
dec
ja
loop
clc
inc
inc
aaa
xor
icebp
mov
hlt
mov
mov
out
negb
cmp
xchg
shrb
push
mov
hlt
xchg
jmp
mov
xor
ret
mov
mov
incl
mov
leave
cmp
repnz
push
cli
xlat
jl
pusha
mov
inc
jecxz
mov
insl
mov
jns
xor
xor
cmp
and
movsb
or
rcll
mov
enter
jae
addb
pop
or
enter
add
fwait
jp
inc
xor
mov
pop
jg
pushf
xchg
in
push
mov
iret
imul
lea
push
pop
xor
push
cmp
cwtl
mov
mov
rorb
hlt
aas
out
cmp
add
inc
jo
cmp
push
inc
loopne
cltd
fdivr
pop
fldcw
es
data16
pop
aam
xor
out
push
dec
call
cld
ljmp
repz
jne
mov
cmpsl
sbb
test
lock
pop
test
jle
add
cmp
adc
inc
stos
push
sub
xlat
aas
dec
xor
stos
add
pusha
aaa
adc
jecxz
xchg
add
sub
cmp
call
jae
fisttpll
pop
repz
inc
xchg
dec
fdiv
xbegin
pop
mov
cmpsb
leave
pop
xchg
rcrb
mov
cmp
loope
addr16
out
xor
add
push
dec
mov
sbb
addr16
dec
cmp
cwtl
ss
lea
sbb
enter
push
icebp
sbb
mov
mov
mov
shlb
xchg
aad
cmpsl
mov
add
das
imul
push
mov
add
iret
sub
inc
fildl
daa
enter
cmc
sub
je
sti
sbb
inc
in
push
sub
sub
in
xchg
arpl
in
std
sub
les
dec
and
push
cmp
sub
repz
push
ljmp
dec
mov
cmc
inc
outsl
mov
in
or
cld
mov
stc
cmpsl
sbbb
pop
test
add
push
inc
pop
jle
xlat
roll
mov
xchg
push
sbb
push
jmp
loop
loope
in
mov
shll
cld
add
les
pop
mov
aam
adc
push
loopne
mov
stc
cmp
mov
xor
es
fwait
movsb
jle
and
jmp
jo
adc
jno
pop
push
fdiv
xchg
and
xor
pop
fsubrl
pop
or
xchg
das
sub
xchg
jle
xchg
sti
imul
inc
push
fwait
push
dec
subb
mov
xor
mov
xor
or
rcrb
sahf
xchg
test
jbe
mov
shrb
cwtl
popa
loope
sub
ret
push
stos
lods
int
pusha
jns
fmulp
push
stos
mov
movsb
dec
sub
push
mov
pop
rclb
mov
mov
push
mov
mov
add
insl
jmp
aas
jns
addr16
lea
or
jns
movsb
lcall
sub
test
sbbl
jge
test
je
push
or
mov
outsb
mov
cmpsb
lea
stos
and
enter
xor
dec
push
cmp
xchg
fcompl
scas
xor
test
mov
cmpsb
dec
in
out
inc
je
cmc
pushw
push
sub
push
mov
outsl
in
jg
lcall
orl
xchg
jnp
cwtl
test
sub
push
movsb
mov
xchg
push
pop
loop
nop
sbb
mov
lret
cmp
and
pop
mov
pop
adc
mov
xor
sbb
repz
xor
rorl
xor
adc
dec
pop
cmp
or
xchg
push
repnz
mov
mov
shl
fdivrp
in
dec
rcl
popf
fnstcw
add
cmp
cmc
out
dec
pushf
bound
inc
sbb
cmpsl
jmp
pop
jg
add
sub
daa
xchg
in
int3
xchg
sti
test
cld
jle
icebp
mov
xlat
clc
xorb
jbe
xchg
push
jecxz
mov
inc
sbb
loope
pop
inc
jbe
stc
sarb
push
and
xor
dec
pmaxsw
mov
push
mov
int3
filds
cltd
push
lock
push
jne
out
adc
cmpsb
std
push
mov
push
mov
bound
push
lea
dec
mov
insb
xor
ret
hlt
xchg
out
jo
jb
rclb
push
and
adc
jae
cltd
add
lret
cltd
dec
inc
inc
fwait
ret
ret
inc
pop
push
aad
test
leave
adc
inc
jno
out
mov
cs
mov
aas
out
cmp
cmp
and
mov
xchg
or
std
pop
out
test
daa
jl
push
or
xchg
cmc
divl
std
xor
addr16
test
dec
ss
or
iret
js
fcomip
mov
adcb
xchg
out
jmp
inc
inc
rolb
and
xchg
pop
leave
and
lea
mov
test
xor
stos
orl
popf
les
sub
and
cmpsl
fnstcw
push
mov
imul
jmp
xor
add
test
punpcklwd
shlb
cmpsl
out
xchg
fnstenv
inc
ljmp
mov
mov
fimuls
testb
jp
cs
mull
int
dec
in
outsl
mov
outsl
xchg
mov
aas
andps
and
scas
add
cmc
inc
insb
adc
lea
mov
ja
in
bound
cltd
cmp
cmp
pop
jmp
push
fdivl
inc
fistpll
push
rcrl
frstor
enter
inc
adc
mov
shr
test
in
cmp
xchg
in
jnp
xchg
add
and
loope
movsl
adc
sahf
dec
push
fistl
ss
adc
jle
repz
dec
cmp
and
cli
jecxz
fisttps
mov
adc
xor
shlb
sti
ror
cmp
mov
ficompl
lods
push
ret
in
sub
add
arpl
js
and
movsl
lods
aam
ficoms
sbb
or
sbb
xlat
out
adc
les
push
adc
xchg
inc
jg
stc
and
and
mov
jb
dec
push
xchg
dec
push
mov
movsb
inc
xor
fmul
nop
inc
adc
les
scas
loope
outsl
or
push
cmp
or
lds
xchg
sti
mov
xchg
pop
dec
sub
das
pop
dec
push
push
mov
inc
jnp
add
arpl
sbb
jp
ret
jns
or
mov
xchg
lret
fcmovnb
flds
cmp
add
mov
sub
inc
pop
outsb
stc
fisubrl
data16
pop
jl
out
dec
pop
xor
xor
xchg
movsb
push
inc
xor
add
add
jbe
and
fcmove
mov
insl
imul
mov
fxch
xchg
pop
mov
push
test
test
sbb
pop
lods
ljmp
imul
jg
lret
pop
xchg
xor
and
imul
xor
loop
adc
aam
xchg
sub
stc
xchg
outsl
out
push
adc
dec
jns
adc
pop
inc
adc
sbb
out
xchg
push
out
dec
aas
inc
push
imul
and
push
mov
jle
cs
pop
and
mov
add
faddl
mov
cmp
loope
ret
js
or
lret
push
mov
data16
repz
mov
dec
dec
imul
out
test
out
mov
cmpsb
addr16
or
push
lcall
add
iret
aas
jo
push
jnp
dec
xor
in
sub
xchg
pop
mov
pop
add
inc
mov
mov
cmp
cmp
jmp
mov
cltd
dec
pop
mov
or
pop
xor
test
icebp
xlat
out
inc
imul
sub
lea
lods
ror
pushf
pusha
sub
mov
xor
arpl
push
repz
lcall
pop
test
jmp
dec
push
lahf
das
sub
push
adcl
xchg
add
xor
dec
mov
jecxz
insb
xchg
adc
mov
mov
dec
cli
mov
push
jnp
testb
or
test
push
mov
xchg
pop
jae
fs
jg
xor
cwtl
push
sub
repnz
iret
xor
aas
inc
punpcklwd
insl
movl
sbb
sub
mov
sti
insb
sbb
inc
and
jae
mov
inc
xchg
repnz
fldcw
out
sub
out
xchg
mov
jb
or
ss
into
test
sahf
adc
cmc
mov
mov
or
or
lret
setb
js
out
mov
daa
mov
mov
pop
mov
mov
repz
pop
outsl
cwtl
ds
insl
push
mov
in
mov
jmp
test
add
outsb
mov
iret
adc
mov
sbb
dec
shll
les
mov
ds
popa
lcall
gs
lahf
mov
jbe
push
rep
push
dec
negb
movsb
out
cmp
pushf
popa
adc
pop
call
stos
mov
push
fwait
cmp
sub
shrb
out
mov
pop
cmc
sub
out
shl
out
and
stc
jb
pop
adc
xchg
xchg
push
pop
or
cltd
popf
ss
in
clc
repnz
fimuls
adc
xchg
inc
sbb
nop
sub
incl
inc
jns
sahf
jnp
dec
fisubs
loope
call
std
push
dec
ljmp
lahf
cmp
nop
inc
adc
push
repz
push
mov
fsubrl
flds
ficoms
int3
add
adc
xor
daa
outsl
adc
lcall
dec
out
lea
mov
push
testb
lahf
aad
sub
mov
xchg
lods
lret
cs
call
movsb
pusha
cld
ja
xor
cmp
seto
imul
jmp
out
jo
mov
pop
dec
jmp
int
jecxz
aaa
insb
adc
jne
push
push
sbbl
ljmp
enter
sub
pop
ret
ja
xor
mov
das
jbe
notb
push
popa
pusha
or
and
test
sub
adc
ret
mov
xchg
add
rep
push
js
cmc
out
add
dec
pop
sti
xchg
and
pop
xchg
repnz
stos
jb
rolb
inc
outsl
es
subb
aas
sub
pop
xchg
rorl
ret
mov
xor
sub
std
clc
pop
mov
fsubs
sbb
outsl
call
lcall
enter
lods
cmp
xchg
and
cs
mov
fistpll
in
ret
cwtl
mov
jecxz
movsb
in
loopne
mov
add
loopne
mov
aad
inc
cmp
rcrl
mov
sub
in
out
test
mov
movq
xchg
add
mov
xor
test
insb
mov
rcrb
movl
jnp
shll
popf
jb
mov
push
mov
inc
xchg
xchg
cld
insl
jae
and
in
bound
jno
inc
pop
fadds
or
dec
push
jge
mov
mov
inc
and
push
jle
and
in
inc
mov
add
mov
orb
inc
xchg
jnp
nop
in
adc
movsb
std
ss
rdpmc
mov
lods
inc
xor
hlt
dec
pop
mov
xchg
lods
mov
out
or
lock
insl
sub
fsubr
ljmp
dec
adc
lods
lods
aam
pop
repnz
test
lcall
insl
jo
ja
pop
jg
mov
mov
int3
mov
or
dec
lods
mov
mov
arpl
aaa
push
dec
je
dec
jecxz
ja
out
jle
add
jo
sub
jmp
in
cmpsb
ljmp
xchg
adc
ret
pop
mov
pop
cmpsb
pop
sbb
icebp
mov
dec
push
repnz
orb
xchg
xchg
or
and
incb
leave
pop
xor
into
xor
dec
mov
inc
popf
clc
jle
js
into
js
in
cld
sub
in
jp
mov
clc
pop
mov
push
cmp
push
std
shlb
adc
int
sbb
out
cmpsl
jnp
lock
sti
mov
jns
and
inc
ja
jl
jne
mov
fmull
pusha
mov
jb
in
rorl
xlat
cmp
scas
xchg
xchg
mov
sub
pop
mov
fs
rolb
dec
movsb
mov
aad
xchg
jg
popf
cltd
mov
add
test
mov
push
mov
mov
xor
inc
int3
sub
mov
clc
and
inc
push
and
jp
fldenv
jne
sbb
fildl
shrb
cltd
xchg
add
rcrl
out
xchg
stc
push
movsb
adc
nop
sub
mov
int3
add
test
lea
push
adc
jo
ds
and
stos
xlat
or
push
out
lea
out
xlat
in
cmp
push
add
jns
lds
scas
ret
out
int3
push
loop
imul
add
lret
cltd
inc
jge
push
sbb
out
sbb
or
xor
mov
in
mov
xchg
pop
jae
mov
incl
cwtl
pop
cmc
int3
rol
mov
jle
fdivrs
addr16
les
les
mov
sbb
mov
fcompl
je
mov
imul
and
xor
jp
sub
jo
jbe
je
lods
xchg
sti
cli
pushf
ja
sub
mov
test
adc
enter
or
es
into
mov
sti
ret
push
dec
out
mov
add
push
jne
mov
mov
xor
orb
push
outsb
jmp
in
and
push
sbb
insb
push
and
mov
pop
dec
mov
negl
fldl
pushf
lods
mov
popa
rclb
divl
inc
push
clc
pop
call
sbb
push
es
cli
pushf
lods
icebp
sub
movsl
std
hlt
sbb
scas
pop
mov
jmp
fdivp
lods
mov
dec
or
push
push
cli
in
lods
xchg
jno
in
xor
cmp
add
sub
pop
mov
xor
rcr
mov
loopne
lods
jnp
fisubl
call
mov
and
sub
jmp
cld
inc
sahf
sub
lea
mov
push
aad
movsl
daa
icebp
lret
mov
pop
add
jl,pn
fstp
dec
add
adc
add
ret
mov
std
adc
pop
pusha
out
mov
push
mov
pop
and
sub
dec
repz
cmp
mov
scas
jl
jmp
addr16
or
fildll
sbb
adc
cltd
test
cwtl
pop
repnz
in
jae
cmc
dec
outsb
mov
into
push
testb
or
cmp
inc
scas
mov
outsl
imul
in
ds
mov
sahf
sbb
lret
pop
jne
sbb
inc
xchg
cmpsl
rorb
outsl
dec
imul
mov
cmp
add
js
fwait
sub
dec
test
mov
cmp
mov
mov
fldz
insb
and
lret
adc
fistpl
jle
mov
lret
insb
or
test
mov
or
pusha
js
jae
into
outsl
ret
lods
enter
push
cmp
and
push
fucomi
ljmp
dec
sbb
out
das
xchg
pop
add
xchg
pop
and
cmc
pop
jb
fmuls
andl
sub
jno
test
cmp
adc
jno
inc
fcoms
fisttpl
and
mov
adc
nop
iret
aad
and
xor
mov
inc
mov
cs
cmp
mov
jno
mov
or
ljmp
jecxz
loop
test
inc
repz
sahf
and
pop
push
lcall
fs
xchg
mov
xor
into
clc
repnz
pushf
adc
int
push
adc
jo
xor
out
jae
adc
mov
test
adcl
stos
pop
lahf
mov
mov
das
add
ret
xor
clc
xchg
cmp
int3
mov
mov
add
mov
nop
lret
fdivr
push
repz
sub
fs
cmp
notb
jne
cmp
cmpl
sbb
pop
fistpll
pop
sub
lret
clc
adc
sbb
movsl
add
and
pop
mov
and
inc
xchg
jo
pop
stos
test
push
sub
sbb
cmpb
pop
lea
xor
inc
and
aas
decb
push
xor
cmp
xor
arpl
cmpsl
imulb
cmpsl
adc
imul
scas
and
mov
xor
pushf
orb
mov
jns
rcrl
dec
jl
adc
shlb
mov
pop
sarb
popa
fisubs
scas
jne
jbe
jnp
add
sahf
js
add
shr
sbbl
mov
sbb
cli
cmc
cwtl
fs
add
arpl
inc
or
mov
pop
dec
add
cltd
pop
fbstp
pop
mov
or
or
xor
push
mov
fistpl
mov
dec
pusha
sbb
jb
sbb
test
jecxz
cmp
adc
fcmovb
adc
inc
push
pop
sbb
jns
jo
repz
scas
fucom
inc
mov
lcall
xchg
lret
add
outsl
mov
pusha
xorl
push
and
movsb
gs
ficomps
aaa
push
icebp
ret
mov
push
pop
fdivl
insb
jle
pop
repz
es
shlb
ret
sbb
pop
aam
pop
call
cmp
movsb
in
stos
dec
loop
xor
loope
pop
int3
adc
mov
icebp
inc
or
imul
ud0
push
pop
lea
xor
int3
adc
jp
adc
arpl
jl
jl
nop
sbb
cmpsl
in
cmc
shr
sarb
sbb
cld
push
js
push
mov
idiv
gs
xchg
push
xchg
xchg
lock
mov
sahf
data16
fidivl
xor
mov
sub
push
jno
test
stc
in
mov
std
jne
out
inc
sub
imul
sbb
cltd
sbb
sub
push
add
idivl
adc
xchg
lcall
mov
je
pop
out
sbb
xchg
push
testl
and
pop
in
dec
mov
lret
jl
dec
arpl
sbb
adc
jns
subl
dec
and
xchg
sub
ds
cwtl
mov
push
cld
fadd
scas
mov
scas
aam
dec
push
sbb
pop
mov
sub
or
lea
subb
pushf
xchg
dec
mov
icebp
sbb
pusha
adc
neg
mov
mov
cmpsb
sub
jge
addr16
jmp
mov
aaa
sti
nop
dec
cmp
push
loope
inc
push
jecxz
xchg
sub
adcb
movsb
imul
dec
testl
push
cli
sti
cmp
xor
imul
jmp
into
cs
jo
clc
test
inc
in
pop
fisubrl
dec
in
xchg
adc
cmpl
mov
cli
cli
xor
adc
pop
sub
outsl
adc
pop
out
cmpsb
jg
sbb
mov
fcomi
push
pusha
bound
xor
jne
sarl
daa
add
xor
in
popl
mov
imul
stos
sbb
fsub
std
mov
outsb
call
mov
sar
loopne
mov
mov
or
cld
inc
jp
add
test
enter
loope
mov
pop
ljmp
jno
mov
pop
popa
sbb
pop
xchg
mov
or
in
sbb
mov
mov
pop
stos
cld
mov
pop
mov
pop
xchg
loope
sbb
mulb
loop
mov
sbbb
fisttpll
sub
outsb
cmpsl
test
ss
push
sub
in
xacquire
push
mov
jbe
test
not
mov
out
sub
push
movsb
sub
js
cmpsb
and
jmp
push
jnp
or
and
out
ret
orl
fstpl
add
push
pop
pop
fs
sbb
jp
aam
out
xor
push
add
pop
loop
inc
sbb
mov
push
or
imul
sub
pop
ret
and
sarl
and
stc
scas
shll
cmp
fwait
andb
pop
pushf
push
mov
cmp
push
insb
mov
loop
int
fisttps
inc
push
jne
adc
sbb
notl
out
sar
lahf
cli
addr16
stos
in
xchg
aad
sub
fwait
mov
jmp
dec
mov
pop
xchg
xchg
adc
xchg
orb
mull
shll
cld
pop
pop
sub
stos
sbb
andl
sub
test
jge
dec
mov
push
in
xorb
mov
mull
sbb
mov
adc
jbe
nop
mov
arpl
insb
loopne
sbb
inc
repz
repz
ja
inc
push
add
jmp
mov
shrb
es
iret
stos
pop
dec
xor
cmp
mov
in
add
jp
jl
push
xchg
push
adcb
dec
movsb
rcr
add
and
aaa
adc
loope
or
mov
sbb
ljmp
pushf
adc
call
xlat
inc
xor
mov
xlat
pushf
out
push
in
push
xchg
cmc
cmp
push
dec
movl
add
insl
repz
cmp
jb
js
incl
adc
cmpsl
xchg
xchg
inc
cmp
jmp
stos
dec
lcall
mov
dec
xchg
mov
mov
fidivl
test
setge
shll
test
pop
stc
push
cmp
xchg
jecxz
hlt
cld
push
jne
inc
adc
push
fdivrl
movsb
mov
mov
dec
pusha
repz
lods
icebp
popf
push
jge
mov
mov
xlat
pop
jle
cmp
xlat
adc
in
sub
sbb
ljmp
push
sbb
adc
hlt
icebp
je
and
sbb
xchg
nop
iret
popa
pop
inc
mov
popf
sti
scas
aaa
aam
subb
mov
daa
rorl
cld
std
sti
push
lret
dec
jne
jmp
je
outsl
test
in
outsl
fistl
nop
adc
ds
jns
cmp
nop
fbstp
lods
mov
insl
cmc
jnp
xor
rcrl
aaa
add
mov
cmpsb
dec
rclb
and
add
cwtl
push
scas
scas
jecxz
aam
mov
push
push
mov
arpl
outsl
mov
add
icebp
dec
xchg
out
cltd
je,pt
imull
push
fisttps
xor
fidivs
xlat
es
jo
or
push
jbe
push
fcmovnu
outsb
or
sub
push
aad
leave
es
test
adc
dec
fcom
fcompl
push
iret
mov
fidivrl
and
dec
xchg
pop
and
ja
daa
inc
sbb
mov
movsb
xchg
in
stos
or
insl
ja
pop
jno
and
add
inc
push
cmp
xchg
mov
dec
add
pop
stos
pop
jo
mov
dec
je
test
daa
lcall
ret
lock
scas
pop
bound
aam
in
dec
lods
in
cmc
sbb
add
adc
dec
out
dec
sbb
push
mov
in
insb
xchg
hlt
adc
cmc
mov
hlt
push
mov
popf
lret
sarb
push
pop
push
sbb
sub
xor
mov
cmpsb
ret
xor
loope
mov
ljmp
mov
push
decb
mov
push
mov
cmpsb
int
lods
mov
pop
lret
or
add
jle
test
mov
sub
pop
xchg
cmpsb
sub
mov
fadds
push
lret
incl
mul
jbe
or
push
pop
or
lea
push
subl
pop
sbb
insl
inc
fcmovb
mov
lret
cwtl
or
shrl
dec
jo
out
cmp
repnz
add
jbe
mov
xorb
test
divl
ret
push
jle
mov
mov
adc
xchg
sub
mov
push
jae
jl
arpl
mov
inc
cmp
or
and
outsb
cltd
mov
aaa
pop
xlat
adc
rcrb
ret
popf
hlt
ss
push
movsl
repnz
add
mov
jns
cli
cld
jne
push
in
dec
or
xor
push
data16
call
sbb
arpl
cmp
adc
xchg
shl
sub
popa
push
mov
shlb
pop
cmc
test
stos
int3
shll
cltd
add
leave
mulb
adcb
jno
repnz
test
xchg
push
sbb
in
sbb
fadds
dec
stc
mov
mov
cltd
push
cmpsb
or
in
clc
shr
jae
jg
outsb
orb
lret
cmp
dec
movsl
inc
lods
stos
pop
jmp
jnp
push
xchg
xchg
xor
pop
in
xlat
sbb
add
push
test
loop
jo
stos
repz
mov
sub
lahf
adc
pop
bound
sub
add
xlat
sbb
int
adc
stos
dec
add
pop
adc
lds
sarb
fisubs
sbb
pop
aad
shrl
ret
xor
popa
cld
xlat
mov
or
mov
push
stos
mov
scas
mov
and
inc
xor
in
outsl
cltd
add
adc
push
pop
cmp
sub
outsb
ljmp
mov
sub
fcmovnb
addr16
pusha
mov
sbbl
dec
nop
pop
and
xchg
movsb
int
xlat
push
xor
sub
add
addr16
or
cli
inc
ds
out
and
adc
mov
lret
xbegin
xchg
shrb
js
adc
arpl
cltd
sub
adc
fldcw
pop
and
mov
std
cmc
cli
push
stc
into
dec
ret
out
jne
dec
out
or
or
inc
sbb
fcomps
dec
xchg
mov
sub
xchg
movsl
jl
cmc
scas
inc
sti
xorl
lret
or
or
ds
lea
xor
push
xorl
push
mov
and
fcomps
inc
std
xchg
adc
loop
sub
dec
rorl
lods
jecxz
push
mov
sbb
repz
repnz
add
or
sub
jo
leave
daa
add
lahf
lds
bound
ljmp
cmpsb
or
push
pop
push
imul
mov
lods
pop
add
cwtl
or
pop
pop
out
push
pop
jnp
inc
jge
dec
jns
pusha
js
mov
hlt
mov
outsb
lods
mov
dec
push
ret
push
adc
pop
cmpsl
mov
push
or
js
test
repz
les
mov
repnz
repnz
xchg
neg
aaa
cwtl
cmp
negb
dec
push
pop
push
cmp
sbb
cmp
cmp
sbb
cmp
sub
dec
dec
push
push
dec
ljmp
push
push
sbb
enter
push
push
cmp
push
and
inc
out
mov
jle
das
pushf
xor
in
fucompp
lret
cwtl
or
lods
lods
fisubrl
out
pop
and
les
sub
lret
ret
and
ficoms
test
je
inc
sbb
mov
int
pop
out
mov
mov
push
scas
and
les
repnz
scas
mov
cmp
mov
in
pop
jge
xchg
sub
mov
and
das
ret
jp
lret
mov
ja
xor
stos
mov
and
dec
jae
cmpsl
lcall
ds
jb
fsubl
and
das
mov
mov
push
pop
jnp
cmp
pop
jge
jbe
pop
and
imul
pop
lahf
leave
push
inc
sbb
inc
and
sbb
dec
add
jns
and
xchg
mov
pop
mov
into
mov
mov
and
jne
mov
mulb
mov
hlt
lods
or
repnz
shlb
lea
cs
outsb
loop
pop
mov
insb
mov
fisttps
xchg
lock
bound
add
and
out
dec
adc
inc
jecxz
mov
inc
mov
mov
mov
addb
shr
fsubr
add
jl
sar
adc
and
push
pusha
mov
pop
popf
loope
cld
subl
lods
push
shll
xchg
into
and
dec
lcall
mov
enter
loopne
insl
ret
addr16
or
cli
int3
cwtl
fmulp
loop
insl
out
add
std
push
mov
mov
fisttps
xchg
adc
push
mov
cltd
adc
popa
pop
mov
lahf
dec
aaa
lret
push
or
adc
pop
push
sar
sbb
inc
daa
fdivrs
repz
inc
ja
mov
aad
std
out
mov
andb
jmp
setg
push
jb
mov
inc
roll
imul
mov
cmc
faddp
mov
xchg
pushf
add
inc
mov
push
les
mov
jae
pop
add
sbb
cmp
xchg
adc
mov
pop
dec
shll
add
cmpsl
insl
dec
imull
xchg
aad
scas
ret
mov
dec
xchg
push
mov
xor
sbb
call
mov
xchg
mov
pop
call
lret
sbb
sub
mov
aaa
or
pop
aad
insl
push
and
test
cmc
fisubl
xchg
outsl
test
inc
mov
lahf
jno
ret
test
mov
pop
jge
dec
iret
xor
addb
cmp
shrb
addb
mov
push
faddl
rol
cmpsl
xor
in
sbb
xor
mov
pusha
cmp
push
in
jecxz
daa
ljmp
mov
inc
xchg
movsb
ljmp
enter
inc
popf
push
xchg
mov
mov
into
mov
imul
xlat
push
jmp
sub
cli
sbb
icebp
sbb
xor
sbb
rolb
cs
lcall
mov
lds
mov
pop
sbbb
pop
jp
jo
cld
mov
addr16
mov
stos
add
mov
ja
mov
jg
test
add
add
push
mov
cmpsb
out
sub
cmpsl
aas
jge
popf
push
mov
jp
jecxz
mov
std
adc
imul
mov
fdivrs
movsl
push
push
mov
mov
sub
adc
fs
pop
jo
loope
cmp
xor
mov
mov
outsl
addr16
sbb
sahf
cmovae
rcl
and
cld
addr16
add
lea
fcmovb
ss
lea
add
sarb
dec
xchg
cmp
and
lcall
ret
add
mov
aas
insl
sbb
add
xor
cmp
push
ret
ret
fiaddl
pop
mov
inc
nop
add
sub
leave
pop
add
xor
cmp
mov
pop
sub
loope
mov
lods
movsb
pop
xlat
enter
sarl
nop
inc
adc
sub
push
fldcw
insb
xchg
test
pusha
jne
add
insl
cwtl
sbb
aad
bnd
das
and
out
mov
adc
mov
pop
inc
push
loope
orb
repz
mov
push
roll
cmpsl
popa
or
mov
jnp
fstps
mov
jnp
sbb
leave
and
repnz
xor
or
sti
fsts
arpl
xchg
popf
xchg
jmp
in
ja
mov
jg
nop
mov
fwait
jns
aas
push
cli
xor
loopne
pop
lret
sbb
in
xlat
xorl
jne
or
out
mov
jnp
sahf
add
cwtl
lahf
and
jg
das
cmp
adc
xor
loopne
lock
ss
dec
add
lock
bound
sub
cmpsb
popf
adc
adc
xor
jecxz
mov
lds
int3
cs
repnz
out
push
addr16
lods
arpl
leave
stos
inc
dec
mov
xor
pop
push
adc
mov
popl
xor
xor
in
or
and
in
xlat
push
outsl
inc
xchg
xor
jno
inc
push
mov
cld
jle
push
add
dec
xchg
das
push
movsb
ret
mov
push
repz
xorl
pop
inc
imul
push
mov
mov
loopne
push
dec
dec
shlb
adc
imul
nop
mov
jo
loopne
mov
and
shrl
es
repz
loopne
xor
dec
leave
cmp
das
or
cmp
cs
jg
xchg
loopne
loopne
pop
test
int3
sbb
sbb
cmp
cmp
cli
xchg
sti
and
pop
xor
ror
popf
imul
jns
sbbl
or
jg
mov
nop
in
pop
pop
jne
push
jp
outsb
jge,pn
fdivl
mov
sub
push
in
sub
sub
fcoms
in
mov
fistl
rorb
fst
dec
ss
push
loop
orb
cmp
es
add
dec
cwtl
fdivrp
loopne
gs
xchg
xchg
pushf
rcll
lods
icebp
shl
add
scas
leave
ret
jle
lahf
sub
inc
insb
cmpb
push
mov
mov
mov
xchg
jecxz
mov
js
adc
mov
call
fisttps
sbb
jmp
pop
adc
iret
jmp
test
mov
shl
mov
pop
rcrl
and
pop
sbb
jns
lahf
jb
fmull
dec
int3
jg
or
insl
stos
cmpsl
imul
xlat
mov
mov
jp
inc
dec
jns
cmp
aam
push
ret
ret
inc
fiadds
pop
jns
mov
aam
addb
dec
mov
fdivr
cmp
sbb
and
popl
fwait
bound
cltd
mov
loopne
mov
mov
jbe,pn
xorl
lret
in
mov
ljmp
out
push
les
mov
insb
xchg
loopne
mov
int
jle
add
jmp
aad
lods
cmp
inc
out
adc
pminsw
ss
int3
xor
pop
push
xchg
cmc
jns
popl
or
call
mov
dec
repnz
sub
xor
lret
jo
xrelease
fstps
pop
rcll
movsb
in
pop
testl
jno
jecxz
adc
pop
test
movsl
sbb
mov
mov
fwait
insl
pusha
in
or
inc
push
xchg
fistpll
sbb
adc
dec
pop
xor
aad
sub
ret
push
pop
bound
jl
push
push
test
mov
enter
into
pushf
lods
fldt
sub
lahf
dec
fisubrl
ret
insb
cmp
lret
je
mov
lods
incl
jbe
jl
inc
dec
sub
dec
hlt
cld
jecxz
add
sarl
inc
adc
movsl
jnp
mov
and
ret
and
imul
cmp
shl
or
mov
mov
sbb
ret
dec
rol
mov
lcall
in
push
push
lods
push
int
mov
jmp
lods
fxch
sbb
xor
test
xor
mov
mov
repz
comiss
lret
and
cli
add
std
out
mov
rorl
inc
jl
or
or
mov
add
adc
pop
fiaddl
cli
ja
mov
into
push
repz
ljmp
int3
pop
insb
xchg
scas
call
jb
les
xor
push
mov
add
mov
ja
lods
das
in
jecxz
and
lret
push
fdivl
dec
nop
in
call
mov
push
ljmp
and
push
out
cwtl
mov
adc
loopne
fsubl
mov
inc
push
pop
outsb
fs
add
inc
fcmovnbe
ss
incb
dec
stos
mov
push
adc
jns
cmp
arpl
xor
ss
imul
ret
pop
mov
hlt
pusha
or
or
sbbl
push
pusha
jmp
das
testb
pushf
icebp
insl
push
cmc
xchg
lods
dec
mov
rol
out
pop
ret
test
adc
jmp
inc
cltd
adc
or
cltd
sbb
xor
movsb
mov
arpl
rcr
xchg
sahf
and
sarb
mov
cmp
popa
jl
stos
imul
push
mov
add
push
push
ljmp
dec
aam
or
cmp
je
adc
divb
push
fdivrs
dec
ss
sbb
jno
sub
sarl
xor
inc
ficoms
jo
mov
mov
mov
mov
fadds
xor
sub
lahf
imul
pop
sbb
insb
lds
addr16
xchg
sbb
out
leave
daa
cmpb
xchg
imul
or
jmp
xor
dec
xchg
push
lahf
and
or
pop
add
pusha
mov
xchg
jmp
fcomps
fldcw
out
dec
imul
push
in
pop
pop
scas
mov
mov
cmp
test
rcr
cmpsl
or
add
jmp
lea
mov
sub
mov
aas
inc
mov
sub
addr16
dec
out
out
cltd
sahf
shl
and
add
push
sub
or
or
or
aaa
jnp
or
sub
and
add
stc
sbbb
mov
aas
sbb
pop
mov
and
sahf
adc
pushf
lds
adc
jno
jmp
movsb
negb
cld
and
sbb
out
lods
or
cwtl
fwait
shrb
pop
lahf
int
movb
test
divl
shr
jne
add
das
bound
roll
xchg
add
push
dec
add
jne
shl
mov
cmp
lcall
lods
imul
mov
ret
sub
sbbb
cs
fistl
mov
sub
cwtl
in
adc
and
pop
xor
sahf
adc
inc
add
jle
jl
sbb
pusha
xchg
dec
and
sub
jg
sahf
add
test
jl
push
push
aaa
push
mov
enter
pop
dec
mov
fldt
mov
and
insl
push
or
repnz
and
xchg
sbb
in
pop
imul
imulb
xchg
inc
or
sahf
xchg
add
sub
xchg
jg
pop
movsl
mov
int
stc
scas
and
int
jno
jle
add
lea
add
push
pop
mov
jb
je
out
mov
push
adc
cwtl
jne
sbb
cmp
cmp
and
ret
xor
aas
or
mov
pop
repnz
jnp
loop
fistl
aam
cld
mov
mov
sbb
aam
push
ljmp
pop
fwait
mov
seta
lret
imul
and
or
loope
inc
mov
icebp
call
or
mov
aas
or
xchg
decl
mov
hlt
pop
add
xor
adc
insl
jo
mov
addr16
fisttps
ficompl
stc
xchg
push
rcr
rcl
cld
enter
mov
mov
out
add
add
mov
inc
add
bound
push
cmp
add
mov
sub
jmp
pop
pop
xor
xor
mov
ret
push
jmp
dec
sub
adcl
and
mov
and
cmp
outsb
ds
pop
push
pop
xor
sbb
xchg
cltd
call
in
out
adc
cmp
mov
les
fstpt
sub
inc
adc
aas
cmp
stos
lcall
cmpsl
fucom
fwait
mov
sti
jg
lds
and
or
das
or
shl
movsl
imul
ljmp
ret
push
xor
arpl
adc
dec
jecxz
jp
adc
popa
gs
lret
pop
mov
xchg
xchg
and
out
dec
push
imul
mov
jae
cld
mov
pop
je
cmpsb
fbstp
inc
sbb
les
ret
lcall
push
cmc
popf
in
and
jbe
push
mov
ja
mov
mov
ja
rolb
xorb
sbb
out
imul
add
or
sbb
aad
nop
dec
das
pop
std
dec
out
sbb
movsb
arpl
or
fistps
lret
pop
negb
clc
push
sbb
pusha
cmpl
scas
push
xchg
lcall
xor
into
mov
sbb
mov
xlat
sub
enter
call
push
mov
adc
sahf
daa
adc
popf
xchg
dec
mov
cmp
mov
lock
sub
das
dec
dec
mov
pop
int
roll
jnp
mov
lret
push
stos
jecxz
fdivr
fstp
push
ljmp
sbbl
mov
adc
loope
adc
inc
into
cwtl
frstor
push
inc
dec
loop
into
incl
inc
mov
out
cld
test
jge
fadds
add
ds
lret
mov
lret
or
xor
movups
xchg
fstenv
out
jne
jmp
xor
xor
data16
insl
dec
sahf
shlb
in
pop
jge
and
pop
in
fs
int
lock
xchg
push
lea
mov
dec
into
sub
icebp
mov
add
add
cltd
leave
sbbl
aaa
lret
hlt
std
pop
xchg
xchg
pop
fisubl
shlb
enter
inc
add
stos
out
insl
pop
and
push
imull
aaa
sub
enter
jo
mov
ret
push
cmp
inc
test
jg
addr16
dec
ljmp
movsb
mov
jecxz
mov
sbb
dec
lahf
add
popf
jmp
icebp
in
clc
aam
cmp
jo
push
adc
pop
jb
repz
into
hlt
mov
lret
aam
or
test
rorb
push
cmp
sbb
rcrl
cli
clc
cmpsl
jg
in
out
push
loope
shll
fisttpl
add
repnz
mov
test
mov
xchg
lods
mov
ret
mov
xor
ljmp
inc
lcall
xchg
push
mov
mov
adc
dec
mov
sbb
or
inc
cs
shrb
jbe
push
and
stos
cmpsl
sti
out
push
les
ficomps
push
out
aad
not
dec
push
dec
jl
rclb
shlb
inc
cli
fcmove
pop
sub
jmp
pop
jb
mov
fidivl
shlb
jo
testl
cmpsl
cs
inc
push
cmpsb
xor
int
and
imul
sbb
cmp
jle
lock
cmp
add
dec
pop
mov
ret
lret
xor
and
cld
jnp
adc
mov
enter
arpl
mov
fnstenv
sub
call
mov
add
fidivl
inc
scas
cmc
add
pop
mov
cmp
test
in
in
test
cmp
push
pop
fdivrl
gs
daa
jecxz
and
jnp
test
out
ja
sbbb
js
mov
ss
xor
fstpt
jbe
push
mov
pop
mov
orl
sub
jecxz
mov
adc
jmp
and
mov
shrb
rcl
inc
in
mov
dec
jl
xchg
in
cmp
cmp
xchg
dec
call
clc
or
jo
repnz
push
ljmp
lods
and
iret
mov
cmp
scas
in
push
jmp
aam
xchg
fmul
insl
test
sbb
aad
lret
add
dec
mov
inc
pop
pop
lods
xor
out
imul
rorl
fsts
pop
mov
cs
adc
dec
mov
sahf
sbb
or
sub
jle
xchg
leave
and
int
sub
pop
lret
subl
push
mov
sahf
outsb
or
cmp
mov
push
cmp
pop
mov
out
insl
or
movsl
stc
sub
pop
add
fs
pop
repnz
jge
inc
ret
imulb
inc
movsl
out
and
lcall
jno
cmp
fbstp
mov
ret
testb
je
cmp
addr16
inc
add
sbb
rorb
jnp
mov
push
dec
dec
mov
ja
inc
fistpl
and
popf
popa
fucomi
pop
and
inc
mov
les
push
adc
pop
into
or
pop
xchg
les
aam
and
lahf
mov
push
decb
xchg
push
adc
mov
int
in
mov
inc
sti
xchg
sub
sbb
jl
aas
add
and
in
pop
cmp
mov
fdivrs
and
data16
mov
test
add
les
je
repz
sub
ret
int3
add
fistpll
cmp
sarl
jl
icebp
sub
shrl
push
jge
fs
push
icebp
fidivs
push
fmuls
rorl
out
cmc
std
mov
xor
inc
call
gs
and
inc
xor
and
jp
aam
mov
pushl
mov
xchg
mov
test
mov
fadd
sub
test
jns
and
testb
jnp
jno
or
pop
adc
push
shlb
subb
aaa
mov
push
and
xor
mov
scas
and
arpl
jb
inc
outsb
clc
call
cmp
mov
xor
cmp
add
ja
fnsave
mov
fwait
call
xchg
inc
in
mov
rorb
pushf
dec
adcl
and
decl
sub
sbb
cmp
ret
ljmp
outsb
sbbl
jne
mov
mov
fdivl
pop
outsb
repz
xchg
push
ret
int
mov
cmpsb
push
or
mov
xchg
jecxz
hlt
pop
add
jl
cmc
sti
mov
lock
aam
mov
mov
out
push
ficoml
mov
pop
icebp
cld
inc
movsl
stc
mov
mov
push
test
bound
mov
inc
mov
mov
push
push
data16
imull
fistl
mov
pop
jb
sub
cmp
js
xchg
repz
punpckhdq
je
ret
mov
lea
dec
test
adc
scas
rcrl
es
repnz
mov
cld
gs
test
iret
scas
subb
sub
out
roll
lahf
pop
jmp
mov
jns,pt
fidivs
imul
cmp
mov
lods
pushf
int
outsl
lret
push
sbb
lds
dec
mov
xchg
add
inc
movsb
jge
inc
ror
adc
pop
xor
imul
xchg
ja
xchg
sarb
add
sbb
pop
bound
aas
aad
adc
add
lods
pop
pop
mov
ret
pop
dec
aaa
cs
cmp
iret
cmp
shll
shlb
pop
jnp
push
lret
mov
andl
xchg
push
test
aaa
scas
addr16
inc
mov
inc
add
pop
lret
aad
cmpsb
adc
fs
xor
pop
hlt
or
dec
cmp
fimuls
cmp
add
jmp
add
mov
andb
pusha
leave
push
cli
fwait
cmc
adc
or
adc
fwait
outsl
dec
cmp
ljmp
mov
data16
cltd
aas
je
test
stc
pop
lcall
cmp
fmuls
dec
mov
aad
pop
pop
and
fnstsw
jbe
sub
jl
mov
jg
inc
dec
pop
inc
xor
jmp
push
add
xor
mov
ja
inc
bound
jae
ret
pop
push
mov
cmp
cld
xor
gs
pop
inc
mov
outsb
push
jmp
inc
jecxz
push
jb
adc
aas
sti
pop
adc
xchg
dec
push
fimuls
es
fbld
lahf
pop
and
stos
jg
ret
push
pop
jg
inc
adc
rcr
adc
stc
xorl
test
movsl
adc
roll
adc
push
mov
fldt
rol
hlt
xchg
je
xchg
rcrb
pusha
pop
xchg
and
cmp
or
dec
cltd
push
cltd
jo
cmc
cmpsl
dec
xor
adcb
adcb
or
repnz
cmpsl
inc
js
xchg
lock
enter
sbb
sub
mov
dec
dec
subb
into
loop
scas
cs
mul
leave
push
push
test
sahf
sub
xor
stos
ret
push
ja
shl
lret
imull
loope
shlb
cwtl
inc
ret
mov
push
sbb
push
test
push
cmp
and
fdivrl
and
notl
test
je
jge
loopne
in
inc
mov
pop
add
notb
loope
jp
int
ret
push
data16
xchg
mov
arpl
lods
pop
out
fldl
push
mov
dec
int3
xor
shll
or
test
repz
xchg
xchg
lods
aaa
je
lret
outsb
je
mov
bound
adc
jl
jle
cwtl
add
or
sahf
popa
movl
aaa
arpl
jg
aaa
xor
sbb
lret
mov
cmpsl
sar
inc
jl
push
dec
xchg
cmpsb
ljmp
add
lods
cmpsb
lds
and
orl
xchg
xchg
gs
push
shl
jecxz
pop
or
in
mov
mov
js
or
std
negl
rol
in
xchg
mov
cmp
psrlq
and
bswap
mov
mov
in
sub
js
or
int3
jmp
adc
out
test
daa
incb
xchg
jp
dec
dec
xchg
xchg
cmpsl
roll
lea
addr16
insl
lea
cmpsb
xlat
shlb
int3
or
and
xorl
fmul
cmp
pop
sahf
push
dec
jo
cmp
sub
mov
enter
scas
rcll
bound
lahf
fdivr
inc
or
dec
into
push
les
xor
addb
and
pop
iret
pop
pop
xor
adc
xlat
in
cmp
gs
dec
data16
sub
xchg
pop
mov
sbb
push
jno
test
push
dec
pop
xor
test
mov
icebp
or
inc
mov
mov
cmc
enter
repz
gs
mov
imul
sbb
insb
xlat
mov
icebp
pop
popf
ss
rclb
jge
xor
xchg
or
shl
testb
je
lods
sbb
testb
mov
dec
adc
insb
sahf
fldt
xor
rolb
adc
adc
and
add
mov
pushf
cmpl
popf
je
jbe
xorb
in
aad
das
clc
sub
mov
test
ja
test
jp
pop
push
xor
shll
xchg
inc
lods
popf
sub
push
xor
orl
pop
movsl
loope
jnp
in
jb
leave
jle
leave
in
int
xchg
jmp
arpl
imulb
mov
pop
repnz
sti
sub
popa
sbb
ljmp
xor
mov
sahf
imul
sti
push
movsb
inc
rol
mov
pop
mov
xchg
jl
xor
shll
mov
subl
aam
sbb
shlb
pop
outsl
sti
push
dec
push
jp
push
add
outsl
js
add
and
push
fcoms
pop
movsl
mov
dec
mov
cmp
push
or
add
or
pop
aam
notb
jp
jge
addb
jns
roll
xchg
cmp
xchg
lret
push
loopne
cmp
fcompl
cmp
pop
cmp
mov
add
test
xchg
out
cmp
sub
cmpsl
push
xlat
outsb
mov
mov
sbb
mov
dec
sub
xchg
cs
dec
sub
inc
mov
xchg
cmp
xor
mov
sarl
inc
call
outsl
pop
movsl
mov
out
insl
mov
push
jae
xchg
mov
mov
push
pop
enter
xchg
jmp
jge
lret
adcb
and
adc
xor
mov
aaa
xchg
jne
daa
xchg
sub
adc
sub
lea
lret
mov
lcall
gs
sbb
pop
and
mov
sbb
int3
daa
jnp
push
inc
je
jecxz
icebp
push
pop
lahf
test
dec
int
outsb
add
mov
sbb
xchg
cld
xchg
pushf
or
jmp
lret
int3
insb
faddl
jbe
loop
out
adc
and
mov
movsb
out
jo
push
push
mov
adc
mov
aas
jle
cli
insl
or
or
sbb
into
pop
ror
in
mov
xchg
sti
jmp
cmp
pop
fimull
mov
dec
xor
sbb
or
mov
pusha
sti
push
icebp
inc
sub
dec
leave
fdivrs
push
rcrl
or
mov
sbb
ror
cmp
fcomp
or
call
jp
js
loope
mov
ss
and
jo
loope
xor
ss
enter
repnz
cltd
cmp
jg
xor
inc
lds
push
push
jge
pop
pop
add
xor
sbb
icebp
xchg
aad
sbb
inc
ss
in
push
pop
imul
xchg
and
mov
inc
dec
dec
arpl
pop
bound
ror
shlb
mov
sbb
stos
pop
shrl
test
out
out
repnz
pop
nopl
test
inc
inc
cmp
fisttpll
pushf
jb
ljmp
out
xchg
dec
cli
cld
mov
setg
jmp
mov
dec
adc
and
das
andl
imul
adc
popf
mov
sbb
mov
pop
jns
subl
sub
or
int3
subb
negb
xchg
addr16
sahf
cmp
cs
idivl
ficoms
je
jmp
inc
xchg
lods
data16
xor
and
jne
push
popa
pop
rcr
fiadds
cwtl
movsb
xchg
xchg
lods
int
cwtl
mov
xchg
cld
add
push
xor
mov
sbb
sti
pop
mov
add
sahf
addr16
scas
notl
sbb
pop
mov
cltd
jmp
and
inc
adc
data16
sahf
xor
aaa
pop
fsubs
inc
cmp
pop
scas
sbb
adc
das
add
inc
and
add
jns
push
je
cmc
cwtl
mov
mov
mov
push
mov
pop
jae
jmp
mov
shl
ds
jle
push
movsl
insb
cltd
sti
das
incb
push
mov
push
adcb
cmpsb
pop
jg
pusha
xor
cmp
cwtl
push
jb
mov
cmc
test
insl
cmpsl
add
in
je
sub
int3
movsl
mov
in
pop
or
push
imul
test
in
aaa
sub
pop
jnp
ror
push
pop
cmp
push
jmp
sbb
repnz
loopne
loopne
cmp
xchg
faddl
cmpsl
cld
jno
test
movsb
movsb
xor
push
mov
adc
stos
cmc
out
punpcklwd
add
sbb
inc
sbb
cmp
sahf
xor
aam
jg
xor
sbb
jns
sub
es
jp
mov
xchg
fistpl
js
jb
adc
push
andl
mov
sti
sbb
sub
shl
sub
pop
sti
arpl
shlb
test
stos
adc
push
dec
sbb
setle
mov
fldl
lcall
mov
mov
loopne
sbb
ljmp
jp
pop
push
movsb
adc
and
fbstp
nop
cli
sub
movsl
and
fistps
insb
clc
or
push
test
movsb
roll
sbb
in
cmc
mov
shr
mov
aad
sub
mov
das
or
jg
and
push
xor
sahf
adcl
pop
push
decb
inc
inc
hlt
fcoml
repnz
mov
shrb
mov
cmp
xor
hlt
adc
testl
lock
scas
inc
jmp
ss
mov
aam
or
lcall
push
xor
aam
aaa
sbb
push
mov
pop
push
icebp
pop
lcall
push
idivl
xchg
mov
cltd
sbb
mov
mov
cmp
sub
mov
insl
stos
ja
outsb
pusha
mov
push
cmp
sub
push
dec
out
sbb
cwtl
outsb
loop
jns
mov
adc
andl
pop
sbb
std
seta
iret
sub
cmc
insb
mov
ror
imul
push
and
outsl
dec
sub
lods
cmc
jge
das
nop
dec
jbe
adc
inc
enter
pop
jbe
add
mov
push
lea
ret
sub
add
cmp
jae
gs
pop
mov
in
jmp
lret
fwait
mov
pushf
int3
mov
mov
es
inc
mov
sti
mov
mov
sub
iret
pop
pop
mov
adc
inc
sub
push
mov
stos
cmp
push
or
pop
jge
dec
and
leave
inc
scas
or
add
and
sbbl
sub
mov
cmp
rcll
mov
outsl
mov
xor
sub
je
fs
aad
jbe
sbb
pusha
sub
aas
xchg
xorl
lcall
cmp
jle
clc
jp
mulb
das
cmp
inc
nop
or
call
mov
subl
stc
sti
mov
xchg
sti
sbb
adc
lret
mov
dec
pop
sbb
fmul
js
xchg
clc
daa
xchg
fs
jno
not
popf
mov
fld
cmp
sbb
xlat
push
jno
add
xor
fs
not
mov
sti
orb
jb
pop
and
in
pop
popf
rorb
call
aad
mov
jmp
ret
pop
sbb
xchg
sahf
jae
cmp
leave
inc
pop
adc
mov
jl
mov
lret
clc
movb
and
push
ljmp
insl
cmpsl
mov
mov
mov
jmp
or
outsl
and
or
xchg
pop
pusha
cmp
insl
jbe
mov
sbb
sbb
nop
push
je
loop
push
leave
fsubs
and
xor
mov
adc
sub
ja
das
cmp
scas
fwait
jne
scas
ljmp
roll
sbb
les
fiadds
push
fdivrs
cltd
cmpsl
mov
out
adc
enter
inc
inc
imul
ret
or
fists
aad
xor
xor
jp
movsb
je
xchg
and
ror
jmp
jb
xchg
lods
dec
mov
shll
push
inc
insb
xchg
fisubs
sbb
pop
std
lcall
mov
icebp
mov
test
pop
xchg
cmc
mov
cmp
ds
cmp
mov
mov
out
ffree
adc
dec
bound
sbb
sub
aad
aas
add
sub
addr16
in
sub
movsb
faddp
jbe
jecxz
add
cmp
daa
shr
dec
push
decl
inc
cld
sahf
sbb
inc
pop
andb
inc
out
push
sbb
shl
mov
aad
sub
or
test
sbb
or
loopne
mov
adc
int
jmp
pop
add
xchg
push
outsl
and
sbb
dec
add
outsb
or
hlt
sbb
in
and
add
test
nop
or
and
outsb
repz
push
notb
sub
dec
loope
lcall
push
imulb
hlt
outsb
add
mov
insb
adc
adc
mov
inc
adc
sbb
test
icebp
subb
leave
test
into
je
xor
cmp
stos
cs
into
xchg
stos
xchg
jp
lock
icebp
outsb
adc
in
sbb
or
cmp
and
sahf
mov
push
icebp
pop
xor
pop
lret
mov
mov
int3
add
repz
push
sti
push
dec
dec
or
cld
mov
dec
imul
xor
cmp
mov
cli
test
sbb
inc
xor
pop
push
dec
stos
cmp
shl
jb
aam
scas
test
cli
arpl
inc
mov
or
inc
lods
fcoms
pop
movsl
inc
xlat
or
or
daa
cwtl
mov
jl
xor
ret
mov
sbb
cmpl
mov
and
fsubrl
mov
mov
xor
inc
push
jl
xchg
dec
stc
add
std
sbb
cmpsb
clc
adc
iret
add
jl
jecxz
mov
in
aam
mov
lcall
out
hlt
roll
cli
jno
add
fstpl
mov
into
pop
fstpl
inc
push
xchg
xor
fcmovb
lds
push
cmp
push
jne
lahf
mov
lret
fldt
xchg
mov
daa
sbb
push
xorb
sti
jbe
jmp
add
in
sbb
push
sti
and
mov
push
adc
push
xorl
pop
mov
loop
cmp
push
call
scas
mov
aad
pop
dec
lret
data16
mov
and
popa
pop
jo
std
in
test
mov
cs
fidivrl
jae
mov
repnz
cmp
arpl
sbb
lods
xchg
jnp
int3
ljmp
cmp
jge
and
rcl
and
in
add
arpl
ja
in
cmp
bound
shl
jbe
ficoms
mov
push
hlt
pop
jl
xchg
movsl
adc
mov
jne
es
jge
rolb
push
mov
int
movsl
lea
icebp
pop
in
in
in
inc
sar
mov
add
in
jne
adc
push
das
ja
pop
inc
xchg
mov
outsl
sahf
and
push
test
ljmp
in
aam
repnz
pop
test
mov
js
mov
jns
int3
xchg
xor
push
aam
shll
roll
xor
cmp
mov
outsw
xchg
icebp
and
cmpsl
cltd
arpl
add
cmp
push
movsl
xor
add
enter
add
stos
repz
adc
push
mov
mov
push
mov
sub
mov
jb
mov
lods
xlat
or
add
fucomip
mov
stos
cmpsb
cwtl
insb
pop
icebp
dec
cld
shll
jecxz
imul
jl
shll
push
add
addr16
movsb
cmp
cli
std
xor
pusha
stos
xchg
mov
int
cmp
popf
lret
movsb
sbb
cwtl
mov
lret
jbe
sti
jns
iret
adc
jl
test
les
pop
mov
jmp
inc
test
pop
std
out
inc
mov
loopne
add
sbb
mov
adcl
add
jmp
sbb
and
push
fwait
push
stos
cmp
inc
fldl
stos
push
subl
xor
sub
fnstcw
mov
inc
stos
rcl
mov
and
xchg
push
roll
clc
scas
mov
loope
and
or
push
push
ljmp
dec
aam
hlt
cmp
adc
std
sub
xchg
loop
sbb
cmp
es
out
inc
popf
leave
pop
xchg
mov
fnstcw
out
enter
cwtl
shlb
jp
cmp
loopne
scas
mov
inc
dec
lahf
mov
in
call
and
xchg
mov
and
and
mov
push
movsl
test
adc
inc
pusha
push
xchg
popf
fsubl
pop
aaa
xchg
xchg
dec
in
stos
or
xchg
and
push
sbb
aaa
imul
rclb
cmpsb
push
arpl
test
test
xchg
fnstenv
shll
mov
xchg
stos
xor
mov
into
outsl
xor
into
fbstp
movsb
add
pop
lea
repz
fldcw
xlat
imul
cmp
or
cli
ljmp
add
inc
in
dec
stos
lods
dec
pop
or
jnp
mov
scas
fcmovb
call
aam
mov
inc
dec
lods
push
push
push
pop
jge
mov
test
lods
arpl
jns
pop
pop
fnstcw
sub
insl
cld
sbb
cmp
rep
ss
jmp
call
std
push
jl
dec
mov
and
sbb
pop
xor
addb
loopne
xchg
outsb
push
loopne
xor
push
in
mov
fsubrs
push
mov
icebp
xchg
sub
std
test
std
in
or
xchg
and
repnz
stc
sbb
loopne
fadds
sub
inc
insl
nop
mov
jg
dec
xor
inc
out
gs
adc
jp,pt
jg
sbb
sbb
fidivs
dec
and
jmp
xor
sti
popa
shlb
lea
or
out
xor
clc
adc
test
inc
mov
jae
std
test
mov
xor
cltd
cmpl
cmp
divb
fistl
popf
pop
insb
xlat
inc
xchg
out
enter
jns
in
cltd
sti
add
out
lock
sbb
mov
rcrl
aas
int
jne
dec
es
jae
sbb
aaa
fwait
mov
outsl
mov
adc
jo
pop
ret
xor
sbb
inc
jns
lret
inc
lea
sub
nop
cwtl
xchg
popa
xchg
add
xchg
jmp
fwait
lea
push
out
mov
inc
push
pop
ficoms
pusha
mov
les
test
mov
hlt
mov
mov
data16
fstps
out
dec
jge
adc
pushf
test
fdivrs
test
and
xchg
mov
dec
adc
test
mov
sub
dec
insb
push
jp
inc
imul
push
cwtl
out
imul
push
mov
and
dec
js
xorl
cltd
jl
cld
inc
jno
fwait
popa
das
inc
cmpl
loopne
xor
cld
cmp
mov
mov
add
nop
mov
jae
loope
fs
cld
jmp
mov
subb
imul
mov
or
movsb
leave
push
cmpsl
roll
xor
loop
xchg
pop
jecxz
lret
outsl
cmp
fdivl
lods
cmp
mov
rcl
insl
jno
andb
jns
xchg
mov
ds
xor
jnp
jns
enter
sbb
clc
arpl
mov
cld
fcoms
iret
inc
cmp
cs
loop
mov
and
icebp
out
mov
pop
arpl
loope
int
dec
rorl
jnp
testl
ret
dec
leave
mov
mov
in
insl
jle
lock
add
ret
in
xor
rcr
dec
pop
cmp
pusha
data16
pop
push
out
adc
jge
mov
ljmp
sbb
xchg
pop
test
jecxz
cwtl
mov
dec
je
call
jnp
pushf
cmc
dec
cmp
dec
shrl
ficoms
bound
lods
mov
xchg
dec
popa
jle
push
movsb
sarl
mov
sub
test
test
mov
test
sbb
xor
dec
mov
js
cwtl
sbb
adc
mov
push
add
scas
stc
les
mov
and
push
mov
jg
sbbl
in
sbbl
pop
pop
jo
xor
addb
cli
and
mov
dec
arpl
mov
cmpsl
fimull
lret
iret
enter
xor
or
ja
sbb
dec
test
lret
shrb
insb
ja
add
sub
mov
sub
push
xor
push
inc
adc
add
xchg
mov
movsl
mov
push
dec
xchg
jle
sub
dec
dec
adcb
pop
nop
mov
test
or
ljmp
int
xchg
cltd
jp
in
insb
mov
pusha
sub
inc
bound
jnp
and
jg
cmpsl
dec
push
das
sbb
push
lods
add
mov
pop
cltd
jns
mov
nop
gs
xor
popf
pop
iret
rolb
push
sbb
or
or
cs
dec
cmp
fcoml
xor
mov
test
and
xchg
dec
cmp
mov
jnp
lea
adc
jecxz
fsubl
mov
mov
jmp
cmp
shlb
push
add
fldl
sbb
xor
rclb
jl
inc
jl
push
adc
cmp
fldcw
cmp
jbe
add
dec
pop
sbb
add
pushw
adc
xor
dec
pushf
and
iret
mov
std
jne
cmpsb
push
cmpsl
adc
cmp
cs
xor
cltd
roll
push
sarl
dec
mov
cmp
sub
jmp
adc
out
test
ss
jmp
jae
sub
push
sbb
or
je
mov
jl
daa
inc
outsl
mov
adc
ss
inc
rcr
adc
shll
jp
popf
movsl
mov
pop
adc
add
scas
aaa
dec
inc
in
in
pop
ret
adc
sti
js
and
scas
sbb
dec
push
jmp
nop
sbb
aam
sbb
ror
sbb
dec
push
jno
dec
and
fs
lds
addr16
inc
in
mov
push
pop
test
dec
bound
sbb
xlat
push
pop
dec
pop
inc
repz
ljmp
fdivrs
or
cmpsl
sub
popa
ficompl
pop
push
pop
pop
imul
add
cmp
or
test
xchg
mov
jge
push
les
and
scas
repz
and
ljmp
mov
aam
xor
enter
dec
int3
nop
mov
aas
adc
inc
xchg
cmp
popa
jbe
xor
adc
or
sub
movsl
or
mov
cld
pop
scas
xchg
jnp,pt
fnstenv
push
inc
leave
inc
repnz
xchg
push
mov
adc
outsl
rorb
repz
aad
rclb
cltd
jge
cmpsl
and
jbe
mov
outsb
loopne
mov
aaa
inc
fstpl
outsb
push
loopne
es
mov
test
rcll
sub
sbb
xchg
sbb
fcoms
dec
mov
into
movsl
and
mov
add
adc
mov
push
shrl
inc
jmp
out
insl
mov
xor
dec
test
sub
dec
inc
out
jg
test
jecxz
stos
into
out
aas
lock
xor
imul
and
sub
mov
push
int
shlb
popa
mov
cmp
test
out
cmp
popf
enter
xlat
jge
dec
daa
mov
pusha
xchg
fnstenv
jb
jo
push
les
jecxz
xor
adc
sbb
scas
cld
or
lods
sub
scas
and
test
dec
shll
push
sti
jg
inc
idivb
leave
mov
icebp
fs
and
sbb
sbb
fstps
popa
mov
or
or
xorb
fsubrl
sbb
fwait
jb
sub
mov
lock
mov
mov
jmp
mov
mov
in
and
lock
xchg
sbb
loopne
mov
or
pop
orb
sbb
iret
jbe
std
pop
mulb
xor
lock
mov
test
or
pusha
addr16
imul
pop
pop
xchg
inc
xor
xlat
repz
sahf
testl
cltd
daa
outsb
out
popa
repnz
lea
add
lea
stos
mov
leave
dec
repnz
sub
shll
adc
pop
mov
fcmove
lcall
adc
jmp
jge
inc
push
aas
inc
les
outsl
jae
mov
js
mov
sarl
inc
jg
add
push
pop
inc
mov
mov
jae
pushf
push
clc
daa
gs
into
dec
sbb
adc
mov
cmc
lods
push
ds
test
fsts
pop
scas
icebp
cmp
cmpsb
and
les
js
mov
insb
insl
mov
xor
adcb
sub
es
xchg
int
and
arpl
sbb
sar
mov
pop
lahf
xor
xor
ret
pop
pop
out
adc
jno
cmpb
repnz
sbbl
xor
sub
lock
push
test
pusha
test
rorl
clc
adc
jo
repnz
pop
xchg
inc
hlt
test
movsb
call
fs
test
rorb
add
js
stos
pop
push
faddl
cmp
push
xor
pop
or
dec
adc
gs
sub
andl
je
pop
jle
in
or
test
push
test
inc
popf
mov
xchg
aad
pop
aam
xor
jge
jge
in
fxch
popf
add
sti
fmuls
and
arpl
sbb
mov
sub
movsl
mov
pop
lods
faddl
stos
and
pop
repz
mov
or
dec
and
nop
cmpsb
sahf
mov
add
sub
cmpl
mov
iret
repnz
iret
mov
inc
inc
add
int3
out
inc
mov
push
xchg
fsubs
loope
sbb
cmp
mov
lock
pushf
movsb
sub
movsl
mov
or
mov
aaa
movsb
mov
cmpsl
mov
ficoms
icebp
cwtl
sub
je
lea
add
add
lret
sub
cltd
gs
sahf
pop
sub
iret
or
pop
jl
rcll
xchg
lcall
sbb
xchg
jne
notb
rol
out
sbb
sbb
sbb
pop
out
push
mov
pop
xchg
dec
subl
addr16
jmp
dec
jecxz
lret
mov
mov
ret
mov
add
push
mov
jb
scas
push
mov
cli
data16
insb
test
dec
mov
orb
add
add
rolb
test
add
xor
jecxz
sbb
fcmovne
in
cli
and
hlt
nop
out
testl
outsb
arpl
bnd
jae
jbe
mov
loop
cmp
xor
les
mov
xor
mov
jnp
jmp
dec
cmp
mov
add
repz
or
jno
bound
fnstsw
jle
pop
sbbl
mov
xchg
sbb
mov
or
add
cmpsl
popa
jns
push
pop
fisttpll
jge
mov
lods
xor
inc
push
push
xchg
mov
push
movsl
mov
fmuls
ret
lahf
and
mov
test
push
push
test
jo
jns
jae
mov
out
mov
movl
imul
inc
xchg
repnz
mov
clc
icebp
fnstcw
dec
and
fisttps
lret
jbe
xchg
xor
fwait
popa
in
outsl
inc
mov
xchg
sub
leave
aaa
inc
xor
popa
xchg
popa
xor
cmpsl
insb
inc
mov
jecxz
inc
mov
cmpsl
int3
les
movsb
adc
jb
xchg
mov
mov
mov
insl
cmp
out
sbb
or
lds
pop
dec
or
jmp
iret
movsl
int3
mov
cli
jns
lock
push
jno
and
int
decb
fldl
data16
sub
pop
shrb
dec
cmp
test
neg
push
jge
sti
popa
imul
jo
in
adc
into
jno
es
test
or
daa
fbstp
or
and
clc
inc
cmp
es
adc
mov
and
inc
xor
rcll
dec
mov
int
out
fucomp
ror
stos
and
movb
xchg
fdivrp
arpl
sub
add
lds
vpaddusw
mov
mov
jb
test
mov
push
lahf
add
pop
ljmp
push
and
jge
jbe
pusha
dec
dec
cmpsl
sbb
les
rorl
jl
shl
dec
push
dec
push
xchg
mov
cmpl
xchg
sbb
add
mov
push
outsl
mov
je
and
icebp
int3
das
lds
in
pop
aas
xor
push
pop
fdivrs
push
lret
cmp
inc
lcall
mov
aad
test
mov
lods
fmulp
fucom
rclb
inc
repnz
out
or
add
or
push
cmp
pop
add
aaa
lcall
xchg
in
fsts
dec
loope
insb
pop
pop
adc
xor
orl
fs
bswap
int
dec
sub
scas
mov
sahf
mov
ja
jae
inc
push
xchg
stc
mov
loop
ljmp
jle
test
es
cmp
outsb
sarl
int3
xchg
mov
cmp
mov
and
pop
xchg
lods
inc
jo
mov
pop
and
mov
sbb
and
lock
jmp
mov
popa
dec
iret
test
sbbl
push
push
xchg
jns
nop
out
lahf
push
out
jp
push
sbb
test
int3
pop
dec
mov
xchg
movsl
aas
inc
aad
sub
sub
jl
movzwl
fs
mov
jg
cld
lret
roll
push
inc
mov
fstps
dec
push
mov
sbb
outsl
in
int3
in
inc
adc
aas
repnz
outsl
push
pop
lcall
aad
pop
testb
adc
aaa
testb
call
aad
dec
daa
test
bound
test
jge
pop
aaa
adc
pushl
jne,pt
push
shll
lea
repnz
movb
out
jge
mov
das
mov
ja
xor
push
jg
and
stos
int
idiv
jmp
scas
sub
mov
sbb
mov
pushl
cmp
pop
movsb
daa
mov
sbb
lcall
dec
pop
popa
cmp
mov
or
nop
xchg
ss
imul
lcall
mov
mulb
aas
nop
ret
push
cmpsb
stc
mov
daa
cmp
ds
cmpsb
push
add
mov
mov
test
arpl
xor
dec
sub
pop
sbb
add
es
sbb
daa
jae
and
pop
cmp
bound
nop
subw
push
xchg
adc
xor
movsb
test
xchg
mov
sub
push
lcall
inc
pop
in
popf
rcr
out
cmc
movsl
bound
jl
xchg
sahf
pop
repnz
lds
pop
pushf
movsl
aam
add
sub
andb
arpl
das
jns
jae
or
scas
cltd
adc
fidivrl
repz
out
sbb
dec
xor
mov
idivl
loope
push
ficoml
scas
cmpb
js
push
dec
xlat
jae
sti
cwtl
add
shll
aaa
mov
sahf
js
test
jge
lahf
cmp
scas
mov
and
or
cltd
mov
jmp
pop
lods
cmpb
aam
test
inc
lahf
cs
sbb
xor
fisubs
mov
cmp
xor
jns
call
popf
popa
lcall
stos
mov
call
out
stos
jmp
out
pop
push
daa
sbb
test
daa
cmp
dec
xorl
inc
mov
and
ret
sarl
or
pusha
mov
sub
aam
inc
mov
jno
jbe
push
jno
dec
sti
pop
jg
sub
cmpsl
daa
sbb
pop
loopne
dec
gs
adc
ljmp
jne
rcrl
scas
in
call
mov
jp
fidivrs
or
mov
inc
mov
cmpsl
fwait
adc
lcall
jmp
lods
sub
inc
stos
inc
lods
sbb
test
pop
into
pop
daa
pop
fmuls
addr16
push
jp
push
shlb
push
push
push
and
test
mov
inc
aas
into
jo
imul
jmp
push
sahf
cmpsl
idivb
pop
movsb
push
adc
add
xorb
cli
sub
rolb
fnstenv
dec
adc
mov
mov
daa
sub
in
pop
ds
in
aam
ficomps
leave
xor
mov
or
pop
arpl
dec
pop
mov
jnp
addb
and
push
mov
in
adc
pop
clc
cmp
addr16
repz
lea
stos
fcos
pushf
rcrl
repz
sub
xor
fs
fsubl
sbb
rolb
adc
push
nop
test
pop
dec
rolw
cmp
cmc
out
pop
lods
cmp
push
ret
mov
in
fcmovnb
not
vcomiss
fwait
xchg
cmp
push
mov
insb
mov
fbstp
and
mov
xor
std
add
inc
push
andl
es
xor
mov
push
xchg
mov
aam
into
lcall
imul
mov
mov
nop
xor
dec
pop
iret
mov
jl
cmp
jg
mov
and
ret
int3
cmpsb
lea
cltd
sbb
push
dec
es
dec
invd
mov
xchg
sti
lds
arpl
mov
sub
nop
sbb
xchg
mov
ja
push
jb
outsl
movsl
adc
std
mov
cmp
movsl
rorl
hlt
mov
gs
dec
adc
push
jecxz
adc
dec
int3
ficomps
cmp
sub
dec
cmp
shlb
pop
int
popf
jb
test
add
in
xchg
jl
ret
lock
mov
jl
loopne
mov
and
add
adcb
outsb
mov
dec
adc
aad
dec
jmp
into
out
inc
pop
adc
xor
repz
pop
dec
cmp
or
ss
push
testb
sbb
mov
and
addr16
or
mov
and
jbe
lcall
int
stos
dec
repnz
xor
leave
cld
sti
push
mov
mov
mov
out
add
xor
xchg
mov
mov
mov
add
icebp
cltd
pop
jmp
jbe
sub
repz
sbb
inc
cmp
sbb
movsb
sbb
pop
pop
add
fcomps
rcll
push
cld
jp
adc
adc
push
mov
sbb
outsb
jmp
xor
mov
mov
jne
rclb
scas
mov
mov
sub
add
inc
ds
movsl
adc
dec
hlt
mov
std
je
arpl
not
subl
inc
enter
cmp
push
repz
inc
testl
push
pop
mov
std
rclb
jecxz
pop
mov
push
mov
jne
testb
es
pushf
push
xor
push
aaa
sbbl
cmpsw
je
mov
add
xor
jl
dec
repnz
mov
ds
loop
pop
dec
mov
dec
jne
jmp
cmpsb
mov
or
mov
pop
cmp
or
test
jl
jne
jge
push
cwtl
mov
cwtl
je
and
mov
cmpsl
push
adc
fbld
clc
or
ret
add
or
inc
sbb
jp
les
out
xchg
xor
xor
aad
aaa
mov
out
sub
shlb
push
insl
add
cmpsb
popl
shlb
or
push
fscale
pop
cmpsb
sti
mov
pop
stc
xor
cmp
pop
out
mov
add
mov
scas
imul
jp
sahf
jb
cwtl
jp
stos
pop
adc
inc
out
orb
cmp
icebp
movsl
xchg
shr
lahf
xor
aad
pop
jle
dec
adc
loopne
xchg
insb
in
lods
pop
ds
in
and
push
fidivrs
ljmp
mov
mov
aas
or
iret
mov
jmp
inc
inc
cmp
shrb
add
addr16
nop
lock
test
dec
xor
divb
in
rcll
mov
adc
pop
and
ret
and
outsb
rep
xchg
xor
pop
dec
cmp
mov
mov
pop
sub
pop
push
adc
loope
lahf
xor
xchg
push
stos
pushf
movsb
arpl
fldenv
or
imul
fisubrl
and
mov
lods
stos
mov
fisubl
mov
in
mov
icebp
insb
xchg
inc
push
adc
xor
pop
lret
gs
and
stc
lcall
int
mov
scas
sahf
stos
ret
imul
ss
xor
enter
sbbl
adc
pop
inc
pop
loope
pop
adc
out
insl
cld
and
and
stos
pop
push
dec
in
js
data16
mov
push
fs
add
inc
mov
mov
cmc
inc
mov
cmp
jl
aam
pop
fildl
and
adc
mov
inc
adc
imul
in
ljmp
sub
cltd
lahf
das
je
aas
adc
pop
xchg
pop
dec
sbb
or
fdivrs
in
cwtl
rcrb
and
shlb
xchg
ljmp
jae
inc
mov
mov
lcall
pop
push
mov
call
sub
sub
test
lcall
fstl
jnp
ds
xchg
pusha
lea
and
cltd
fdivl
cmpsl
aad
xor
jg
adc
sub
push
mov
popf
pushf
addr16
sti
sbb
loop
pop
je
das
sub
xor
mul
sarb
scas
data16
outsl
jno
fsubrl
push
test
jle
inc
adc
loope
mov
adc
add
jle
xlat
test
mov
mov
push
mov
es
addr16
or
rolb
mov
mov
lret
js
mov
mov
mov
stc
add
rolb
repz
dec
aas
mov
ss
pop
xchg
push
loopne
mov
clc
mov
cmc
fnsave
rorb
scas
mov
jp
cli
cwtl
repz
mov
out
dec
xchg
aad
cmp
fistl
movsl
add
mov
push
jmp
ret
pop
mov
cmc
inc
scas
ds
jae
inc
sub
in
cmpsb
or
xchg
leave
xor
sbb
aas
pop
loop
fadds
bound
inc
movb
sub
aas
sub
cmp
hlt
stos
in
fwait
jle
jae
pop
lcall
and
pusha
in
sbb
push
dec
sub
sbb
dec
movsl
xchg
fsub
iret
ret
enter
mov
jb
mov
flds
xchg
and
xchg
repz
xchg
push
sub
mov
lret
mov
jnp
push
inc
push
nop
cvtdq2ps
in
pop
add
cli
stos
dec
xor
jbe
mov
mov
lods
xchg
inc
enter
sbb
popf
fadds
xor
mov
sar
push
sub
out
adc
mov
sub
outsl
aad
push
std
dec
adc
inc
cmp
mov
ds
loope
cwtl
xor
out
outsl
nop
popf
cmpl
cmp
aad
adc
pop
jne
js
jno
imul
add
mov
inc
lods
cmpsl
inc
push
sub
push
mov
or
gs
adc
xor
xor
mov
fsubrl
dec
push
adc
and
rcr
adc
push
mov
scas
insb
cmp
pop
mov
mov
test
mov
lret
int3
pop
and
je
arpl
fnsave
insb
call
popa
pop
push
loope
cmp
ds
cmp
push
cmp
pop
mov
jg
sbb
pusha
adc
in
mov
js
pushf
nop
sahf
pop
sbb
mov
mov
push
push
and
push
loop
adc
jbe
xchg
push
jnp
adc
cld
mov
and
sahf
mov
or
mov
es
dec
cmpsb
je
ds
jbe
nop
mov
push
dec
call
jno
adcb
sahf
clc
cli
pop
pop
scas
movsl
or
mov
xchg
push
cmpsl
adc
sbb
aam
and
dec
stos
out
fistl
add
idivl
and
mov
push
jb
push
pop
sahf
sub
testl
fimuls
outsl
cmpsl
es
jg
movsb
and
mov
inc
push
dec
fsub
imul
pop
lahf
leave
pusha
xchg
mov
push
xor
int3
xchg
stc
insl
or
shlb
dec
mov
jae
ja
jns
xlat
lods
cli
repz
or
xor
mov
jge
add
aas
icebp
sub
sub
push
sarl
adc
add
dec
data16
xorb
sbb
inc
lock
daa
cld
repnz
shrl
jb
rorl
add
aam
mov
iret
mov
enter
and
lea
cmpsb
and
add
inc
into
mov
int3
jge
add
xlat
sub
repz
pop
pop
fwait
add
jge
lock
lock
das
push
fs
pusha
ljmp
xor
cmc
xor
xchg
push
adc
and
cmp
push
sub
sbb
rclb
fnstcw
fsubrl
out
ss
or
popa
xor
dec
or
fildl
cli
rolb
imul
incl
out
jge
jle
subb
insb
jecxz
or
pop
js
je
addr16
das
imul
pop
shrl
in
mov
cmpb
push
rorl
int
cwtl
inc
je
sub
cwtl
out
in
addl
and
cli
mov
lods
xchg
add
scas
in
add
cltd
call
pop
pop
ja
dec
out
lods
push
and
shlb
or
push
fsubs
push
aas
xchg
xor
pop
xor
push
xor
dec
lcall
cmp
xchg
daa
pop
aad
test
js
adc
pop
jge
scas
push
jae
add
cli
sbb
inc
sub
xchg
sbb
push
xor
jp
cmp
ss
push
arpl
sbbl
test
out
scas
adc
jmp
pusha
sbb
dec
aaa
out
fidivrl
pop
add
aas
push
lcall
push
sbb
and
xorb
inc
dec
or
adc
add
dec
fsubr
mov
ret
aam
loope
ret
jne
inc
xchg
je
stos
mov
ret
xor
stos
cmp
xchg
and
cwtl
xchg
movsb
je
ret
cmp
jno
jnp
cmpsl
dec
fs
lret
sub
and
mov
movsl
andb
adc
cltd
push
jbe
fiaddl
in
les
test
pause
cmp
or
push
sahf
lcall
outsb
push
jmp
in
xor
outsl
cmp
ret
pop
sub
pop
and
xor
addr16
into
aaa
or
fs
pop
mov
clc
leave
push
insb
in
test
fcoml
lcall
and
ja
in
das
cmp
mov
scas
scas
sub
cli
divb
jnp
mov
or
xchg
sub
jne
jnp
or
imul
adc
inc
in
mov
add
cmp
outsb
pop
lcall
xor
imul
inc
adc
popf
and
push
push
fcompl
jno
call
pusha
in
jecxz
js
pushf
in
scas
push
inc
cmp
loop
popa
les
js
ljmp
icebp
loopne
shll
add
rorb
jnp
sbb
mov
and
test
push
cltd
push
cmp
xor
dec
pusha
int
xchg
dec
or
into
shlb
mov
les
pop
sub
push
call
pop
or
mov
xor
bound
dec
js
sarl
and
iret
daa
push
xor
sbb
fxch
pop
insb
lds
mov
mov
jno
mov
jmp
mov
fisttpll
sub
push
in
es
jl
xchg
mov
jbe
add
ud2
mov
jge
mov
imul
stos
mov
dec
insl
in
mov
clc
data16
into
pop
movsl
push
test
fs
dec
push
add
jecxz
add
hlt
rorb
push
rorb
xor
or
aam
or
ljmp
mov
adc
xchg
icebp
mov
imul
out
sbb
push
mov
mov
add
shr
cld
dec
mov
arpl
cld
mov
popa
dec
cs
push
mov
rorb
cmp
jb
xor
out
popl
fistpll
aad
pop
cmp
sar
lods
xchg
shll
loope
xchg
arpl
dec
int3
mov
cmc
push
stc
jl
pop
or
xchg
cmpsl
xchg
dec
xchg
dec
cli
cmp
cmp
jge
sbb
xchg
shl
stos
leave
movsb
push
movsl
xlat
add
add
call
inc
xchg
ljmp
mov
xchg
ficomps
pop
cmpsl
pop
or
lret
ss
sbb
scas
icebp
pop
mov
inc
or
mov
into
push
sahf
add
inc
outsb
pop
sbbb
xchg
ret
fdivr
inc
in
adc
sub
cmp
push
xor
mov
cld
dec
nop
sub
adc
mov
gs
or
sahf
inc
cmpsl
sbb
cmp
int
pop
shr
mov
test
mov
fisttps
push
pop
xchg
enter
mov
xlat
dec
push
push
xor
in
push
test
adc
sar
inc
and
imul
pop
fld
add
inc
mov
push
cmpsl
and
mov
psubd
sbb
stc
jmp
in
cmp
adc
sbb
imul
ficompl
mov
mov
xor
mov
lock
mov
fsts
in
and
inc
push
outsl
aad
xor
movsb
insb
jg
mov
and
pop
pop
push
outsl
pop
mov
fs
lds
sti
clc
sbb
fcomps
sub
mov
cmp
imul
mov
scas
pop
pop
dec
shll
pop
icebp
cli
xor
imul
pop
add
les
push
push
xchg
and
loop
jmp
inc
orb
mov
es
shlb
pop
adc
das
ja
xor
cwtl
pop
push
sahf
dec
notb
mov
add
mov
jae
sahf
cld
mov
adc
mov
notb
fidivrs
cld
insb
bound
mov
xchg
fistpll
push
ljmp
sbb
aad
in
or
arpl
jnp
scas
pop
aaa
jmp
aad
lahf
rorl
pushf
add
add
inc
inc
subb
inc
gs
dec
fs
pop
aad
xor
cwtl
mov
les
dec
push
xchg
and
xor
or
out
cmp
filds
test
arpl
or
dec
les
shlb
in
pop
xor
nop
cmc
mov
push
jo
pop
into
push
xor
dec
outsl
mov
sarb
scas
xchg
fdivs
mov
sub
divb
sbbb
rcll
mov
mov
aas
mov
scas
inc
out
fnsave
add
js
stos
cmp
popf
dec
lock
rolb
ret
mov
packuswb
sub
mov
lods
mov
addl
lock
mov
xchg
lds
pop
adc
jg
stos
sbb
std
outsl
imul
movsl
aad
push
mov
in
mov
sbb
bnd
orb
jecxz
pusha
mov
mov
lods
adc
mov
mov
push
lods
insl
movsl
aam
sbb
inc
test
pop
mov
sti
imul
inc
in
mov
ljmp
cltd
mov
in
cli
xor
pop
out
outsl
sub
add
fistpll
mov
xor
and
push
xlat
mov
and
and
mov
pop
dec
fldt
in
jno
adc
mov
rcr
push
bound
dec
aaa
push
cld
aas
sbb
dec
xchg
xchg
movsb
and
push
push
popf
xorb
movsl
insb
test
mov
and
push
lea
divps
push
dec
pop
adc
insl
icebp
push
repz
sahf
inc
or
enter
push
cwtl
cmc
lods
ror
fisubs
and
add
cltd
popa
sbb
insl
loop
dec
out
sahf
mov
insl
or
mov
aas
sub
pop
xor
ss
aam
mov
shll
scas
call
adc
and
mov
sbb
dec
mov
fimuls
subb
repnz
fadds
mov
add
in
mov
xchg
jo
iret
popf
out
jg
stos
fucomi
xchg
push
pop
test
sbb
outsb
mov
push
data16
xlat
adc
and
enter
lods
push
cwtl
xchg
test
mov
stos
ljmp
dec
or
push
out
cmp
inc
adc
dec
fdivl
les
into
sub
sbb
mov
das
mov
xchg
insb
inc
add
into
in
cmp
sbb
push
inc
push
pop
hlt
rclb
xchg
clc
jbe
fistpl
shrb
xchg
push
mov
mov
jge
rdmsr
ficoml
out
aas
mov
push
xchg
inc
sahf
jb
dec
dec
xchg
mov
push
sahf
aam
loop
cwtl
rolb
into
jns
pop
xor
test
adc
neg
cmp
lds
mov
test
mov
aam
jno
sub
das
dec
repnz
mov
xor
push
pop
pop
test
jb
insl
std
sbb
push
push
inc
or
or
repnz
popf
inc
popf
xor
int3
stos
inc
sbb
jnp,pt
mov
pop
enter
cltd
aad
int3
repnz
daa
std
push
mov
aad
clc
inc
cli
fs
or
stos
xchg
mov
push
out
sar
faddl
jae
inc
hlt
cmp
jns
adc
dec
pop
mov
andb
jecxz
in
lods
negl
jl
xchg
sbb
subw
mov
repz
sbb
pop
gs
lcall
inc
xchg
daa
push
jmp
or
inc
jb
imul
mov
adc
inc
sub
sub
negl
adc
jle
repnz
es
enter
cmp
sbb
cmp
divb
outsb
je
popa
out
inc
popf
popw
cmp
mov
mov
mov
cmp
xor
mov
js
rcll
mov
xor
outsb
xchg
jns
push
mov
mov
mov
lea
jp
mov
cmp
cmp
fstl
adc
mov
outsb
jno
sub
data16
lds
add
shll
dec
jg
mov
fscale
and
mov
jns
xor
fidivl
daa
andb
hlt
mov
jmp
sbb
sarl
dec
jbe
stc
jecxz
daa
sub
mov
in
movl
arpl
push
jns
push
mov
aaa
sbb
std
jmp
int
mov
lods
cvtdq2ps
push
or
popf
stos
or
jg
add
and
xchg
push
adc
push
and
negb
dec
movsl
loope
mov
add
fmuls
in
sbb
ja
movsb
int
repz
cwtl
mov
mov
mov
xor
cltd
testl
jg
ret
ret
xchg
jge
lret
das
mov
mov
test
loope
push
cmp
xlat
test
bound
mov
cmpsb
fildl
adc
into
int
xchg
lods
add
fldenv
and
mov
or
jge
lods
xor
add
orl
adc
add
roll
push
inc
mov
sbb
xchg
push
incl
push
mov
jo
pop
sub
dec
cld
sbbl
mov
icebp
daa
mov
push
out
jge
jecxz
adc
mov
jmp
pop
lahf
push
or
insb
movsb
sbb
cmp
mov
movsl
lods
dec
lret
iret
ficompl
mov
and
xor
enter
push
negb
cmp
sbb
es
fcomps
enter
inc
pop
jmp
mov
mov
adc
adc
adc
loope
out
insl
xchg
mov
stos
cmp
mov
xor
mov
jle
jp
pop
push
jno
jno
je
jne
lret
cmpl
adc
mov
lea
ja
xor
or
pop
sub
mov
hlt
mov
shlb
adc
lret
int
mov
ds
ja
mov
pop
xor
mulb
loope
xchg
fistl
flds
rcll
test
jle
xchg
xchg
stc
daa
fcom
int3
pop
and
mov
fmul
aam
inc
leave
xchg
ljmp
insl
lods
jb
fs
mov
testb
std
mov
inc
sbb
xchg
sub
mov
mov
xor
fwait
out
mov
int
add
mov
mov
out
xlat
ret
loopne
pop
xchg
mov
daa
mov
dec
inc
inc
cmpsl
jp
mov
in
or
jns
std
xchg
adc
push
or
cwtl
push
and
or
test
das
loope
mov
xor
or
mov
jnp
addl
inc
sarl
xchg
sub
das
or
jmp
cmp
lcall
mov
cmc
lret
fs
fsubr
xchg
and
je
test
push
pop
pop
add
lcall
dec
popf
outsb
mov
sbb
outsb
es
jbe
orl
cmpsb
orl
mov
pop
jno
dec
lret
xor
pop
push
or
pop
movsl
cmp
shrl
inc
out
stc
push
out
sar
dec
pop
pop
sub
mov
sbb
cltd
and
sub
or
test
test
push
push
fldenv
or
loop
dec
dec
pop
sbb
xchg
xor
add
sbb
mov
lret
add
fcomp
jno
scas
mov
xchg
sub
cmp
jg
dec
in
add
arpl
outsb
inc
mov
add
mov
mov
ljmp
fwait
xchg
xchg
dec
cmp
int3
cmpsl
pop
enter
ret
mov
rcll
push
cli
add
adc
mov
push
aas
push
xchg
xchg
sbb
jae
insb
into
xor
or
mull
stos
inc
call
fldcw
inc
daa
add
lods
callw
addr16
push
cmp
mov
shlb
daa
lcall
and
cmp
mov
jbe
mov
mov
or
cmpsb
cmp
or
js
cmc
mov
test
add
inc
lahf
ffreep
loop
fldl2t
sub
jg
sbb
in
mov
outsl
test
jb
and
add
pop
sbb
push
movsb
shr
imul
push
and
sub
push
bound
mov
dec
dec
add
lea
mov
push
js
jle
pop
lea
push
call
adc
comiss
xchg
mov
or
imul
push
roll
xor
fdivrp
cmc
rcll
inc
pop
lock
jmp
pop
fld
fwait
xor
loope
or
repz
ret
xor
add
dec
scas
pop
daa
push
sbb
and
mov
sbb
mov
xor
dec
insb
jbe
out
mov
or
or
mov
jb
std
push
push
pop
push
scas
pushw
daa
pushf
arpl
scas
fnsave
push
cs
and
and
test
xor
in
aas
ljmp
push
sbb
inc
test
sti
xchg
or
das
sti
addr16
ja
sbb
jp
and
int3
pop
sub
sti
pop
mov
adc
mov
stos
push
pop
js
enter
mov
add
sar
pop
shll
andl
pop
jmp
sahf
scas
push
mov
pop
mov
popf
push
add
adc
scas
sub
jae
clc
fstpl
add
insl
mov
add
xchg
inc
mov
inc
in
cmpsb
add
xchg
xchg
dec
dec
mov
ret
test
sbb
in
pop
ss
dec
rclb
pusha
lea
push
cmp
out
daa
das
pop
cmp
jnp
les
mov
mov
popa
push
pop
fxam
inc
scas
test
jbe
or
bnd
std
mov
out
add
icebp
cmp
movsb
jmp
aaa
cs
filds
sbb
push
or
std
int
mov
jmp
adc
add
add
sbb
pushl
lcall
mov
add
daa
cld
lods
jb
dec
pusha
or
nopl
mov
mov
mov
scas
jmp
push
sbb
shrl
inc
or
in
vmovupd
xor
stc
dec
int
cwtl
cmpsb
shlb
test
into
lock
movsb
fidivrs
pop
and
xor
sti
subb
cmp
xor
xlat
out
test
ss
adc
rolb
mov
shl
xor
and
test
push
jle
cld
sbb
popf
push
lods
xchg
pushf
mov
sbb
leave
add
mov
push
lods
inc
fbld
es
lds
xchg
stos
in
jmp
negb
nop
push
insl
imul
popa
sbb
roll
or
or
dec
adc
push
push
or
rcrl
shr
jae
pop
popa
arpl
iret
in
cmp
clc
pop
div
inc
push
out
push
push
ljmp
movsl
jae
lods
test
or
rcrb
add
gs
dec
dec
repz
decb
daa
and
push
iret
negl
xchg
dec
cld
clc
mov
xorl
push
pop
jne
jl
js
sbb
pop
pop
pop
push
sub
divl
adc
outsl
fstpt
insb
lret
sbb
adc
int
lcall
movsb
mov
inc
push
pop
push
add
fildll
fsubp
daa
ss
ljmp
scas
fwait
jl
fistl
cld
cltd
xchg
int3
popa
jae
and
test
into
insl
adc
xor
test
loop
popf
imull
xchg
mov
mov
push
pop
jns
jb
mov
push
xor
leave
cmp
mov
fdiv
lret
hlt
cmp
data16
in
sub
sbb
dec
fldenv
call
push
adc
and
hlt
insl
pop
push
data16
add
jb
sub
inc
pop
rolb
sub
inc
das
inc
jno
cwtl
shll
lds
jmp
mov
jo
jl
xchg
xor
mov
rol
fstpt
into
push
cmpb
cmp
aad
push
in
mov
rorl
pop
mov
add
gs
and
hlt
movsl
jbe
nop
jae
add
xchg
jo
int
fiadds
and
lcall
mov
jae
adc
or
scas
pushw
lds
dec
outsl
add
xchg
les
es
enter
ds
fstl
mov
cs
push
sbb
inc
and
mov
xchg
fstl
xorl
fwait
dec
push
clc
push
lcall
jo
or
gs
dec
jle
cli
sub
sahf
push
flds
dec
popa
cmp
mov
mov
or
sub
mov
inc
call
pop
js
outsl
push
mov
dec
stos
sub
cmc
sub
push
push
xor
mov
sub
push
sbb
mov
pop
xchg
mov
mov
scas
call
dec
sub
jo
adc
out
push
int
mov
sbbb
xlat
mov
dec
pusha
push
into
sbb
out
imul
mov
cmp
aam
out
cmpsb
or
xchg
mov
mov
sbb
mov
je
mov
cmp
mov
lods
add
xchg
test
mov
cld
in
push
scas
scas
ret
cmp
fmuls
imul
shr
adc
mov
dec
je
mov
ja
test
sbb
xchg
into
test
pop
std
cmp
lods
lods
xchg
shll
xor
sahf
add
les
push
xor
shll
fcmove
hlt
pop
and
sti
pushf
insl
pop
hlt
sbb
dec
mov
xor
cmp
add
lret
insl
cmp
icebp
lods
xchg
push
jb
push
mov
repnz
bound
xor
mov
lock
sub
inc
sub
lcall
js
xchg
pop
orb
sub
pushf
jmp
xchg
addl
stc
lret
out
lods
mov
scas
leave
cmpsb
mov
test
pusha
mov
rcl
out
and
xor
and
dec
mov
push
push
stos
xor
out
jl
sub
mov
mov
jne
test
gs
out
mov
mov
mov
ret
flds
inc
fwait
call
nop
sub
fstl
cmc
insb
push
fldl
aad
sbb
jg
loopne
dec
data16
cs
jl
shll
dec
and
push
sub
cmp
sbb
subb
or
adc
adc
fsubr
enter
rol
mov
repnz
add
sbb
int
fiaddl
pop
sub
mov
xchg
xchg
push
into
dec
adc
outsb
jns
sub
out
mov
mov
inc
sti
pop
add
sti
push
sahf
adc
repnz
imul
aam
mov
stos
sbb
rclb
gs
iret
stc
and
arpl
bswap
mov
xchg
pop
push
xor
xor
shrb
mov
xchg
movsl
stos
fisttps
add
add
cmpsl
adc
mov
xchg
cmc
test
and
cmpsb
test
mov
testl
popf
mov
addl
jl
dec
outsb
mov
bound
push
pop
pop
jo
sbb
push
pusha
mov
lret
sub
sbb
js
lock
jge
push
call
or
addr16
fiaddl
fdivp
mov
xor
shlb
subl
ss
test
mov
xor
jg
int3
dec
and
imul
cmpsl
mov
popa
jecxz
fimull
aas
dec
sti
outsb
mov
pop
fldenv
enter
dec
or
push
jp
fisttps
pusha
cmp
adcl
or
imull
or
sbb
xor
jl
xor
mov
mov
test
mov
in
pop
add
or
das
test
fistpll
sahf
mov
inc
dec
insb
ss
mov
jecxz
loopne
mov
jae
subl
push
loop
inc
test
fstpl
insl
xor
or
outsl
xchg
rorl
and
sub
inc
out
jle
cmp
sub
jl
mov
popf
xor
and
stos
mov
pop
xchg
mov
xchg
scas
test
jp
mov
test
in
inc
leave
jge
popf
scas
pop
and
dec
cli
jns
cltd
test
out
lret
popa
xor
xor
pop
dec
mov
ret
es
decb
pop
dec
mov
addr16
jbe
mov
xor
rorl
inc
idivl
bound
icebp
mov
jae
xchg
mov
orl
int3
add
das
pop
pop
and
stc
dec
divl
cmp
xchg
and
std
adc
push
mov
imull
aas
cmpsl
jge
xchg
xchg
push
push
aam
mov
rep
push
jmp
inc
fistpl
cwtl
sub
stc
mov
mov
pop
clc
xchg
cli
and
xchg
shlb
mov
jae
arpl
jbe
jns
inc
xlat
fcmove
dec
pushf
xchg
or
cmpsl
popa
shll
sti
aam
pmulhuw
mov
pusha
push
pop
add
mov
cmp
popa
pop
dec
je
mov
ljmp
add
xor
fwait
jge
lds
dec
ss
fsubrs
jmp
or
lahf
inc
add
adc
sti
ss
bound
mov
stos
je
jl
mov
pop
pop
or
movsl
ds
mov
in
or
fstps
inc
lahf
or
add
enter
cld
adc
pop
or
dec
cmpl
push
push
rorl
mov
mov
sub
rcr
push
leave
roll
mov
sti
pop
loope
aad
mov
dec
xchg
and
jecxz
cmp
inc
xor
xor
pop
jb
sub
adc
jb
mov
adc
ret
insl
repnz
int3
push
xor
jae
mov
pop
sub
or
stc
push
xor
fbstp
clc
cmp
xchg
fsubrp
and
xchg
xlat
aam
xor
cli
shrb
adcl
aaa
or
add
andl
test
jecxz
cwtl
cwtl
mov
in
bound
push
clc
gs
data16
jecxz
test
es
push
test
fs
cmp
es
inc
adc
mov
scas
push
pop
add
andl
lcall
nop
or
enter
mov
arpl
leave
lcall
pop
lret
lock
in
mov
sar
inc
insb
mov
mov
imul
jno
mov
inc
popf
push
test
mov
xchg
pop
shrl
jp
lods
jne
push
call
insb
stc
or
push
aad
fwait
xor
sbb
loope
cwtl
incb
iret
in
movsb
mov
push
xchg
and
lret
lods
jbe
fsubr
mov
sub
iret
inc
pop
dec
pop
sub
push
nop
insb
jmp
clc
dec
mov
adc
pusha
imul
loopne
push
adc
mov
push
lds
add
mov
cmp
inc
add
mov
pop
ficompl
mov
insl
mov
out
lds
push
lds
fadds
lret
out
xor
test
scas
mov
mov
insl
xchg
cmc
ja
aad
mov
pop
ficompl
jbe
mov
pop
js
xor
cli
or
sub
push
shl
push
add
xchg
sub
push
daa
ja
push
lret
xor
das
sbb
mov
scas
lods
xchg
in
ficoml
rcl
orb
jle
pop
shlb
cmpsl
inc
dec
and
mov
xor
outsl
xor
js
mov
mov
popa
inc
xchg
cmp
je
mov
subl
add
xor
fwait
or
dec
mov
bound
icebp
outsl
iret
jb
ret
out
sbb
cmp
mov
push
dec
dec
ljmp
inc
mov
or
rclb
stc
inc
cs
inc
mov
fcoms
xchg
add
fsub
mov
inc
sbb
xchg
cmp
push
push
out
rcrb
mov
movsl
daa
fnsave
ret
sbb
rcrb
insb
in
stc
sub
hlt
icebp
loope
mov
jne
mov
scas
test
lock
mov
sub
pop
dec
inc
aam
iret
sbb
int
popf
and
imul
leave
mov
pop
sbb
xchg
out
mov
mov
xor
icebp
int3
dec
xchg
push
inc
faddl
sti
test
ret
or
cmp
jle
jecxz
jo
addl
jl
xchg
orb
inc
jl
mov
sarb
mov
push
jae
push
mov
jns
fs
push
cltd
iret
xor
adc
xchg
jmp
int3
dec
dec
xorl
outsb
mov
out
les
xor
mov
xchg
push
movsb
jl
sarl
cmpsb
pushf
adc
jno
dec
popa
icebp
sbb
mov
adc
dec
jo
jecxz
sarl
pop
or
cmp
dec
mov
inc
mov
add
repz
sub
les
xchg
add
rclb
and
aad
and
inc
int
dec
sti
xchg
sbb
shrl
fldenv
inc
sbb
aaa
jae
icebp
xor
fdivrl
mov
bound
and
or
inc
and
icebp
cmp
outsl
shll
insl
push
pop
jle
jne
pop
pop
mov
adc
push
mov
call
lock
in
sbb
andb
gs
mov
sbb
mov
pop
dec
cmp
shrb
xchg
cli
mov
cmpsl
in
adc
sub
push
outsb
repz
jns
jge
dec
dec
jae
push
xchg
pop
jae
xchg
iret
inc
cli
fcoml
insb
and
jle
dec
dec
mov
xor
mov
xchg
in
dec
mov
xor
mov
adc
mov
int3
xchg
cmp
les
das
mov
mov
cs
mov
les
pushf
mov
cmp
test
arpl
cmp
and
shlb
test
arpl
lret
lea
lds
jp
int
jp,pn
stc
push
mov
or
mov
adcl
fcomp
pop
xlat
inc
mov
mov
repnz
loope
xchg
push
ds
add
adc
adc
lock
xor
pop
jmp
cmp
dec
jns
rolb
in
jmp
mov
ss
jbe
mov
pop
mov
cmp
stc
push
adc
sub
push
jle
sarl
pop
cld
test
pop
mov
mov
add
adc
mov
sbb
cmp
in
cwtl
int3
jecxz
xchg
push
xor
sub
or
mov
add
cmp
rolb
ret
mov
lret
jnp
pop
std
xchg
mov
pop
sbb
pop
in
out
dec
xor
or
shll
sbb
daa
xor
sbbb
loope
negl
loope
das
adc
in
testl
les
sub
int3
jecxz
mov
xchg
stos
sahf
inc
xor
cld
leave
cmp
jne
movsb
imul
aad
test
jge
stc
mov
aam
std
int
mov
outsl
into
push
insl
inc
xor
fildll
mov
data16
adcl
push
andb
cmp
in
adc
into
fcmove
scas
and
sub
stos
add
test
xchg
dec
mov
mov
pop
daa
rcrl
mov
and
inc
and
mov
sbb
push
adc
imul
lods
loope
movb
jle
mov
adc
ret
cli
or
sub
dec
cmc
popf
loopne
mov
and
insl
push
and
xchg
ja
pop
jle
mov
lods
mov
int
movsl
adcl
and
jg
mov
adc
cmp
xchg
or
out
dec
jp
sbb
mov
cld
jle
sub
adc
pop
xchg
xchg
jl
pop
mov
push
push
shrb
rcrl
sub
lahf
shl
xchg
aas
in
xchg
mov
loop
push
cli
push
add
cmpsl
rorb
or
xchg
cltd
leave
hlt
clc
push
scas
lahf
dec
test
in
push
sahf
pop
mov
dec
mov
adc
dec
test
lahf
mov
cmp
ret
mov
lods
sub
mov
subl
xor
dec
orl
xchg
movsl
xchg
xor
xor
in
insl
outsb
cmp
stos
jns
je
add
pop
or
out
es
mov
cmp
incb
das
xchg
pop
stos
and
add
hlt
rolb
or
mov
pop
mov
rcrl
or
in
ja
movsl
and
add
or
mov
test
frstor
push
xlat
enter
or
bound
andb
stc
jae
paddb
mov
ds
cltd
dec
in
mov
andb
lret
cmpsb
push
cmp
xchg
iret
xchg
insl
mov
aas
jg
and
mov
cltd
add
ds
lods
call
jle
add
fnsave
mov
mov
loope
cmp
arpl
mov
jmp
repz
adc
aaa
leave
fsubs
ss
fwait
bound
enter
mov
pop
fldt
ret
imull
rcr
or
imul
lods
mov
out
or
ret
aam
sbb
sbb
rclb
and
repz
inc
mov
loopne
xchg
fistl
add
lret
mov
aam
es
icebp
push
pop
mov
repz
dec
call
pop
and
cwtl
cmp
lea
mov
adc
cmc
pop
loope
dec
mov
sbb
imul
es
test
sarb
ficompl
cwtl
mov
int
das
xor
das
stc
inc
mov
adc
std
mov
mov
call
stos
jmp
pop
or
xchg
stos
mov
addr16
xorb
push
std
cmp
mov
insb
xchg
mov
fistpll
nop
jle
js
lret
add
inc
mov
iret
or
pop
in
in
inc
jae
inc
cli
lods
xchg
rclb
loop
jnp
clc
rol
inc
push
out
pop
push
adc
andb
int
in
push
dec
popa
ret
repnz
cs
xchg
cmpsb
out
lcall
jb
fs
cltd
or
mov
insb
std
fwait
mov
ds
mov
push
into
es
mov
popa
sbb
je
hlt
gs
call
imul
fwait
or
mov
stc
test
cmp
out
fnsave
fadds
lret
pushl
mov
adc
ror
sahf
mov
mov
je
xchg
jg
mov
mov
dec
lods
imul
push
fiaddl
lods
xor
clc
gs
gs
shlb
sti
subl
loop
mov
mov
xchg
sbb
mov
lods
sbb
or
iret
xlat
pusha
in
sbb
das
dec
push
les
or
arpl
mov
mov
jns
sub
andl
rclb
lcall
push
pop
jg
mov
dec
test
popa
xor
add
xchg
mov
inc
push
outsl
dec
push
popf
lock
jo
push
mov
cmp
fst
mov
cmpsl
sub
div
ljmp
cltd
pop
dec
mov
add
inc
fistps
outsl
mov
les
mov
ljmp
xchg
jg
sbb
cwtl
std
jo
push
pop
jo
repnz
aam
movsl
shl
fwait
mov
imul
loope
or
xchg
xor
stos
push
add
mov
sahf
sti
dec
dec
stos
xor
movsb
repz
adc
xchg
fst
insl
push
xor
xchg
gs
push
int3
xor
imul
lcall
push
aaa
jo
pop
mov
xor
dec
repnz
dec
dec
push
push
push
mov
std
bound
out
cmpsb
loop
je
inc
mov
scas
jo
push
insl
scas
aas
cmc
popa
test
inc
xor
jns
jo
xlat
movsb
dec
pop
mov
inc
fstpt
xchg
push
arpl
mov
add
inc
insl
rclb
ljmp
cli
sbb
sub
mov
and
cmp
lcall
or
gs
jmp
jl
insb
dec
sbb
adc
rorl
sub
stos
roll
pop
outsb
std
gs
sbb
add
xor
or
cmp
add
xor
sbb
cmp
lcall
pop
pop
cmp
fs
lcall
cwtl
jmp
xor
sbb
lods
jle
mov
iret
xchg
in
xchg
popf
push
mov
jo
movsb
xor
or
sub
or
sbb
fcomps
dec
pop
sub
leave
pop
mov
push
push
cltd
stc
mov
enter
mov
mov
or
sti
shl
mov
outsb
dec
mov
sahf
leave
repnz
mov
push
mov
data16
mov
pop
clc
stos
and
cltd
fwait
pop
je
ja
fcomp
shlb
int3
push
repz
lret
inc
in
test
mov
xorl
into
push
adc
jne
movsb
call
pop
fnstenv
aam
inc
fmuls
inc
imul
pop
lea
stc
xlat
sub
or
call
sub
mov
push
inc
sbb
repnz
sbb
sub
inc
pop
js
cwtl
test
outsb
lods
popf
mov
imul
push
jno
add
call
fsubs
jne
shl
cmp
fstl
sti
mov
sbb
inc
outsl
xor
in
inc
or
add
cs
or
mov
popf
pop
sbb
loop
xchg
les
lods
jg
jmp
mov
inc
jecxz
adc
fisubrl
movl
mov
mov
movsl
add
xchg
lods
lods
inc
mov
mov
push
ds
js
int3
sub
pop
movsl
xor
lods
sub
inc
stc
xchg
fcmovnu
rcl
les
cs
mov
shll
mov
cmpsl
pushf
clc
fsts
ja
mov
add
jecxz
das
fisttpl
adc
call
mov
insb
jmp
push
cmp
sarl
loop
repnz
loop
imul
cld
les
cmp
pushf
loopne
push
push
dec
jb
jp
pop
cmp
add
fldcw
jb
lods
xchg
and
or
inc
pop
std
mov
int
dec
in
dec
xorl
pop
leave
lret
dec
movl
imul
and
aam
and
adc
mov
jg
cmp
inc
push
add
pop
dec
cmp
notl
je
push
lahf
and
cli
popl
jecxz
xchg
mov
dec
adc
and
dec
push
pop
scas
dec
test
dec
or
imulb
iret
push
xchg
int
push
ja
push
cli
or
jl
push
xchg
sub
es
dec
push
int
dec
popa
xor
push
lds
movsb
rorb
shlb
movsl
pop
xchg
cmc
or
cli
pop
out
repz
inc
and
or
std
xor
adc
push
and
fldenv
jge
scas
jno
lods
xchg
cli
movsb
in
repnz
es
and
rcll
xchg
bound
daa
gs
ret
rorb
push
and
dec
mov
jg
jae
loopne
movsl
aaa
test
addr16
push
out
and
mov
dec
mov
cmp
lods
sub
xchg
imul
fstl
scas
adc
out
push
lret
loopne
sub
mov
lds
cltd
mov
mov
hlt
sbb
fwait
add
pop
insl
pop
pop
mov
das
popf
ret
sbb
jmp
or
popa
nop
dec
fcmovbe
in
daa
xor
aaa
cmp
lahf
data16
mov
ja
mov
add
or
add
ret
cmp
iret
fldt
lods
push
xor
push
mov
push
nop
pop
ss
mov
scas
dec
xor
dec
xchg
add
xor
jle
movsb
inc
aam
in
lods
xor
arpl
adc
cmpsl
cs
pop
xor
adc
pop
cs
not
dec
add
fistps
xchg
push
inc
mov
test
pop
mov
shrb
outsb
shrl
popf
call
mov
xor
jne
xchg
jne
outsb
dec
cld
mov
jne
scas
push
and
sbb
inc
addr16
movsl
dec
inc
xor
xor
jle
mov
ret
jnp
xchg
mov
shrb
std
xlat
call
xor
cmp
fs
mov
inc
test
test
cmp
jo
icebp
sub
movsb
mov
xor
sbb
mov
pushf
mov
stos
mov
xchg
leave
insb
cmp
jb
cmp
sub
pusha
popf
pusha
popf
inc
sub
in
dec
int3
dec
dec
xlat
shrl
mov
cltd
inc
xchg
ss
ficoml
popf
sbb
sbb
ffreep
inc
lcall
les
push
lods
imul
xchg
scas
movsl
dec
sbb
call
jb
and
adc
lods
fdivs
xchg
dec
test
hlt
sbb
fildll
shlb
stos
dec
repz
xlat
fs
ljmp
fwait
cmpsl
ja
outsb
lds
pop
mov
jo
inc
popl
jne
in
les
mov
push
inc
xor
pop
pop
push
je
fimull
push
repz
sbb
push
test
sub
mov
or
cmpsb
jmp
or
xchg
mov
sub
add
scas
mov
push
dec
xor
aas
jnp
xor
xchg
xchg
pushf
xor
outsb
add
iret
dec
jne
sti
jbe
mulb
insl
das
je
imul
sub
dec
xchg
gs
test
xchg
adc
pop
ljmp
enter
insl
fstps
mov
loop
pop
or
mov
dec
jle
mov
enter
lds
scas
and
push
adc
call
push
or
inc
iret
fs
or
pop
out
push
test
smsw
es
adc
insl
mull
out
in
rcl
add
inc
jne
in
xchg
lahf
lods
mov
int3
das
mov
cmc
scas
dec
out
mov
cltd
xor
fldt
hlt
mov
insb
jge
xor
cmp
sbb
cmp
and
lahf
imul
mov
mov
dec
adc
test
sub
enter
test
adc
add
sub
inc
imul
push
shll
loope
aad
jge
sub
ret
xor
jb
loope
or
sahf
jns
sbb
insb
mov
cs
push
push
xor
dec
xchg
and
mov
or
imul
add
mov
pmaxsw
mov
repz
add
mov
int
mov
mov
data16
stc
xor
and
sub
lds
andl
loope
pop
add
xor
scas
sbb
fcoms
or
push
std
loope
mov
fs
dec
xor
cmp
dec
pop
cmp
dec
nop
pusha
dec
adc
faddp
jecxz
int
xor
enter
clc
dec
add
sbb
pop
test
test
out
push
jnp
sub
sub
inc
dec
xchg
popa
jnp
inc
cmp
imul
sbb
or
mov
pop
mov
and
cli
jo
pop
subl
les
roll
cmp
icebp
ss
movsb
pop
dec
xor
js
in
pop
ds
aad
stos
mov
jmp
and
arpl
neg
loopne
cmp
mov
das
add
sub
inc
lock
aam
mov
ljmp
pop
cmp
xchg
sti
js
imul
subl
push
jns
add
popa
mov
jg
outsl
mov
repnz
mov
in
repz
mov
dec
and
fld
sub
fcompl
loop
mov
in
arpl
test
lahf
sub
dec
aam
dec
dec
push
popa
pop
int3
hlt
push
stc
sbb
cli
sub
xchg
out
lcall
jo
ds
jp
sarb
cli
clc
out
out
push
xor
popa
call
cmpsb
pop
fadd
imul
dec
mov
cmp
test
xchg
clc
mov
stos
pop
xchg
or
adc
lret
popa
mov
inc
adc
dec
jg
push
cld
jo
mov
dec
jnp
mov
jge
pop
xor
bound
sbb
call
jno
fists
test
mov
test
lds
inc
or
in
or
cmp
sbb
jge
movsb
or
xor
sahf
adc
iret
rolb
inc
pop
mov
arpl
inc
pop
cmpl
aaa
out
dec
nop
cwtl
cmp
push
clc
inc
ret
in
add
addr16
ds
fmuls
orl
pop
xchg
ds
sub
dec
xor
cltd
imul
cmp
sti
xchg
jo
cmp
pusha
pushf
xlat
jns
push
jg
call
popf
fdivr
cli
xchg
adc
nop
and
dec
enter
sbb
into
repnz
into
mov
cmp
jg
leave
stos
repnz
adc
sub
aam
dec
frstor
jecxz
jno
mov
inc
sahf
addr16
ret
imul
repz
in
fs
cmp
ret
js
hlt
xchg
and
inc
in
jo
cmpb
xor
add
pusha
mov
xor
dec
pop
lcall
xor
cltd
scas
addr16
decb
ja
cmp
mov
iret
popa
xchg
adc
push
sub
push
ljmp
xchg
xor
aam
cmp
insl
cli
cs
clc
lods
pop
enter
je
ret
sbb
sbb
rclb
xor
lcall
pusha
cmp
pop
mov
fmull
xchg
xchg
jge
div
out
jbe
push
push
movsb
subl
hlt
adc
in
mov
fisubs
fwait
ret
sahf
push
out
jg
dec
push
mov
xchg
jb
push
movb
scas
lds
std
bound
jmp
xchg
clc
rcr
push
or
cmp
cs
and
dec
sysexit
add
pop
inc
or
ficoml
or
cmp
pmaxub
out
outsl
pop
pop
leave
cmp
and
lret
in
sbb
add
aas
mov
dec
dec
js
dec
imul
cmp
out
push
push
add
pop
stc
mov
aad
push
mov
xchg
mov
test
sub
imul
push
data16
push
push
je
or
and
lds
push
xlat
xchg
sub
jae
arpl
cmp
push
in
ss
rcrb
pop
data16
xchg
pop
or
pop
adc
xchg
push
sub
lret
clc
cmp
and
outsl
icebp
add
sub
ds
inc
mov
stos
out
and
cld
in
sub
dec
inc
fstl
test
les
loopne
shll
jne
scas
cs
xor
addr16
xor
aas
ficoms
mov
xlat
push
xor
jno
loopne
dec
mulb
stc
dec
shll
enter
je
shlb
icebp
add
imul
test
test
in
lcall
popf
inc
lock
push
pop
pop
aam
pop
orl
iret
mov
cmp
jp
mov
push
imul
pop
cwtl
jo
mov
stos
jmp
fsubrs
rcrl
sbb
cwtl
dec
mov
pop
ljmp
fwait
or
or
shll
xchg
mov
scas
adc
imul
and
ret
daa
mov
cld
mov
lret
xor
xchg
or
cmpsb
xor
data16
mov
mov
xchg
adcb
dec
fidivl
gs
cld
call
jg
xchg
pop
mov
jnp
adc
inc
and
mov
aam
lods
cmp
xor
lds
push
fcoms
cltd
pop
mov
mov
inc
movsl
lea
cld
outsb
jmp
hlt
test
nop
push
push
leave
sti
push
subb
lods
flds
push
movsb
mov
jp
xchg
adc
inc
popf
fs
aam
and
sub
aas
mov
addr16
add
outsb
adc
das
xchg
test
push
xchg
aad
test
pop
orb
add
add
rcrb
daa
xlat
xchg
mov
mov
dec
jmp
inc
jb
xor
es
in
push
imul
xlat
jmp
rorl
sub
popa
int
push
pushf
neg
pop
push
mov
jo
push
jp
push
enter
rcl
adc
sub
call
xchg
pop
in
adc
push
adc
adc
sub
cmp
cmp
dec
jae
or
fisubrs
leave
mov
dec
mov
lahf
fcmovb
pop
inc
mov
test
sbb
jecxz
push
cmp
inc
cmc
stc
pop
cmp
idivl
pop
in
pop
clc
dec
inc
sub
jecxz
cs
sub
clc
lds
or
les
pushf
rcll
mov
cltd
cmp
pusha
or
mov
movsb
fisttpll
and
jb
dec
out
cli
and
stc
in
lret
xchg
push
mov
adc
mov
push
jmp
das
sbb
sbb
mov
ja
int
inc
inc
and
data16
imul
dec
push
or
cmpb
jne
out
inc
rorb
and
je
shlb
adc
inc
jge
and
inc
or
bound
jne
xchg
sub
pop
push
popa
ljmp
fdivs
mov
jno
cwtl
incb
clc
push
mov
mov
test
mov
inc
in
shlb
xchg
push
lea
jne
xchg
iret
add
xor
mov
fnstcw
stc
mov
scas
or
dec
inc
mov
imul
shlb
mov
lea
xor
negb
pushf
mov
mov
xchg
add
lock
or
sbb
jb
push
fwait
js
dec
xor
xchg
inc
ret
pop
and
push
cmc
sarl
and
adc
dec
sahf
push
sub
or
push
jbe
xchg
adc
add
dec
fidivrs
push
dec
pop
imul
ret
movsl
mov
cwtl
in
mov
jge
inc
mov
pop
push
lret
xchg
bound
dec
mov
jno
ror
mov
scas
jns
sti
mov
fcompl
sbb
pop
test
jns
out
cmp
insl
sbb
pop
or
clc
popf
test
outsb
aam
jge
loope
cmp
fsubl
out
stos
dec
outsl
cmp
in
mov
aam
pushf
inc
sub
sub
out
mov
xlat
xchg
mov
sbb
xor
sahf
lods
pop
pop
or
popa
sub
call
outsb
test
xor
xor
repnz
test
movl
das
movsl
sub
sbb
adc
or
and
jae
sbb
add
adc
iret
pop
nop
mov
xor
lock
jb
stos
cltd
loope
ret
or
lea
xor
cmpsb
mov
add
push
fsin
repnz
add
into
xor
gs
sub
inc
sbb
enter
jnp
xor
popf
mov
inc
shrl
nop
repnz
cmp
leave
bound
pavgw
andb
ljmp
push
adcb
jne
outsl
ljmp
dec
movsl
mov
das
add
xor
sub
xchg
stos
cmp
lock
mov
nop
sub
xchg
rorl
jbe
test
outsl
fidivs
fsubrl
jns
into
sbb
movsb
jmp
pop
popa
jmp
adc
loopne
mov
test
insb
add
mov
test
jae
cmc
lret
mov
cltd
push
dec
pop
mov
mov
f2xm1
inc
jno
pushf
mov
in
jmp
xorl
jns
push
xbegin
popa
testl
in
or
mov
fcompl
clc
pop
test
out
mov
lea
leave
outsl
rcrb
pop
pop
dec
outsb
xor
das
xchg
pop
negl
aas
pop
mov
xor
add
out
pop
cmp
xchg
int
fildl
push
push
dec
sbb
dec
scas
arpl
int
test
jne
sub
sarb
push
daa
jge
mov
sbb
arpl
add
push
pop
frstor
xchg
cmp
cmpsl
ds
xor
out
add
idivl
sub
aad
rclb
stos
or
decb
ljmp
sahf
cmp
lods
ss
inc
sub
mulb
mov
dec
dec
adc
jl
dec
imul
sbb
ret
mov
in
mov
cltd
sbb
jb
push
aam
popa
fstps
xchg
add
adc
mov
imul
push
fdivs
sbb
data16
push
xor
push
jo
mov
sbb
and
repnz
inc
sbb
xchg
sahf
push
mov
test
ja
pop
add
in
push
and
pop
push
lock
inc
sahf
movsb
add
xchg
cltd
ret
int
push
sub
sub
add
stos
cmc
jo
mov
hlt
jmp
jl
xchg
addr16
std
mov
xchg
add
icebp
ja
fcoml
scas
adc
sti
mov
mov
sbb
lcall
add
sbb
daa
pop
mov
or
adc
mov
in
lret
loope
fdiv
jmp
xchg
add
repnz
push
xchg
jo
mov
aad
daa
dec
ret
stc
sbb
push
enter
shr
in
mov
push
cmpsl
inc
je
push
pusha
ss
xchg
xchg
jbe
push
fucomp
sbb
in
std
das
jbe
adc
mov
mov
cmp
xchg
iret
or
jno
xchg
and
mov
xchg
shrb
pop
pop
mov
mov
sbb
push
sbb
insl
in
rol
into
cwtl
add
rcrb
jecxz
mov
and
push
pop
dec
arpl
popa
push
sbb
cmp
push
adc
jnp
cltd
jo
mov
mov
das
push
pushf
sahf
incb
in
mov
sub
and
cmp
rcll
dec
clc
xchg
add
imul
dec
in
add
xchg
pop
mov
pop
std
or
lret
push
stc
lahf
lcall
xchg
push
inc
addr16
adc
cmp
add
out
sbb
rolb
test
stc
inc
or
lods
sbb
aad
fcmovnu
out
addr16
mov
pop
lock
roll
addr16
lods
xor
pop
fldl
push
ja
lock
divb
push
sti
aad
lds
dec
mov
mov
ret
enter
je
pop
aaa
sti
or
testb
pop
pop
xor
cmc
mov
cmp
pop
push
cs
adc
sti
out
mov
xchg
mov
fxch
jle
lods
sbb
stos
stos
or
pop
dec
mov
and
mov
lock
push
scas
fldt
repz
mov
loopne
scas
rcll
add
cltd
cmp
or
push
cwtl
js
mov
sahf
dec
and
jae
lret
leave
add
xor
mov
inc
dec
sbb
push
popa
jae
cmpsb
jl
out
add
popf
sbb
daa
add
negl
jbe
inc
inc
imul
es
outsl
out
mov
clc
jmp
mov
dec
cltd
jb
lods
adc
xlat
js
fimull
fdivl
jo
dec
mov
xor
mov
mov
aaa
mov
out
mov
scas
dec
dec
lcall
cmovl
cmc
orl
xchg
mov
xor
mov
adc
movsl
add
repz
xchg
add
jo
xchg
mov
and
test
pop
icebp
int
imul
mov
gs
lahf
fists
fwait
sbb
push
cmc
imul
lahf
jno
jmp
push
cltd
fsubs
xchg
loope
sarl
fwait
or
icebp
andb
xchg
movsb
and
xchg
xor
mov
jb
in
mov
mov
clc
call
adc
rorb
pop
cmpsb
cmp
sbb
push
out
sar
std
mov
mov
xor
inc
xchg
das
dec
repz
inc
or
jb
push
dec
xchg
sub
push
jae
fwait
lcall
ljmp
inc
mov
mov
insl
xor
dec
out
imul
rol
jne
loope
cmpsl
out
inc
loope
add
xor
add
scas
out
push
xor
hlt
jle
mov
insb
cmp
inc
pushf
cs
lcall
cli
adc
jp
sti
sub
mov
stos
std
xor
inc
push
push
push
push
cmp
addr16
xchg
fs
je
jl
cmpl
sbb
lea
xchg
adc
and
sahf
and
inc
sbb
fs
lahf
repz
mov
pop
dec
int3
adc
mov
jmp
aad
mov
push
or
repnz
loop
push
or
or
mov
mov
cltd
jno
prefetch
or
ja
pop
inc
jno
add
or
sub
mov
mov
add
jb
adc
push
push
fcoms
push
jp
aaa
cmp
xchg
in
add
jne
adc
or
jb
lods
shlb
nop
jecxz
pop
mov
sbb
ret
mov
lea
pop
aaa
push
test
test
push
aad
add
aam
cmp
lret
fcompl
inc
lret
mov
lret
js
xor
inc
out
pop
insl
rorb
clc
cmp
push
loopne
hlt
inc
ror
add
imul
push
cwtl
push
js
mov
xchg
dec
repz
fists
imul
in
clc
std
cmp
mov
cmp
lods
and
lods
stc
icebp
lds
mov
or
cltd
bound
fucomi
data16
jb
mov
test
lret
adc
sbb
call
aam
das
xor
mov
je
dec
iret
pop
push
jnp
lret
pop
cltd
sub
les
pushl
out
in
shrl
sahf
and
xor
lret
popw
sbbl
pop
or
jl
stos
mov
aam
ljmp
adc
outsb
ds
pushf
shlb
mov
mov
push
add
pop
fildll
incl
inc
xchg
pop
imul
decl
lret
jge
mov
rcrb
mov
std
insb
mov
lret
jno
aaa
xor
pusha
xor
lret
mov
mov
in
pop
dec
idivl
and
pop
arpl
xor
mov
adc
xchg
pop
pushf
ds
inc
cltd
or
and
dec
out
lret
push
lahf
adc
insb
das
sbb
lret
outsb
cmp
or
cmpsb
cld
es
lret
inc
jbe
dec
addl
mov
repnz
aad
xor
or
sub
add
je
mov
popa
pop
cmp
push
ljmp
mov
mov
sbb
ds
cli
pop
gs
loope
test
add
loop
cwtl
flds
jne
lods
out
mov
jmp
pop
jmp
movsb
repz
jl
push
mov
jl
xchg
movsb
in
pop
cmc
jne
arpl
cmpsb
jnp,pt
jl
mov
pop
mov
cmp
inc
iret
xor
cmovno
arpl
cwtl
jle
ficompl
repnz
dec
jecxz
mov
arpl
jg
testl
adc
mov
aaa
out
imul
addb
and
loope
push
lret
jmp
xchg
xchg
mov
jge
xchg
fnsave
jl
sub
lds
add
push
stc
negb
jmp
push
adc
pop
es
into
mov
movsl
or
add
test
loop
scas
push
xchg
jge
in
movsb
adc
decb
test
cld
les
aas
inc
adc
subb
jbe
or
sub
es
push
add
out
pushf
rcrb
aaa
mov
nop
cld
and
sbb
mov
movsb
xchg
sbb
sub
sbb
out
adc
dec
cwtl
jbe
lods
fisubs
jg
add
sbb
outsl
adc
pop
outsl
cmp
push
pop
cmp
imul
dec
lret
cmp
jbe
xchg
rcr
pop
ja
inc
es
xchg
fs
das
dec
ret
and
inc
idivb
fsts
inc
cmpsl
clc
rorl
push
jae
push
das
push
pushf
sub
addr16
lods
sbb
jae
adc
push
push
ret
adc
mulb
loope
mov
clc
std
mov
xchg
ja
mov
push
jp
mov
mov
je
jo
ss
mov
cmp
pop
and
inc
imul
add
ja
icebp
ljmp
mov
repz
push
lea
scas
in
xchg
push
pop
push
push
test
sub
test
shl
stos
or
pushf
outsb
loope
jp
push
test
add
sbb
nop
push
aas
lods
xor
arpl
cmpsb
cmp
sbb
bsf
dec
test
xchg
seto
jae
xor
fsubs
stos
mov
in
inc
cs
jns
cmp
mov
pop
jge
shl
in
pop
sahf
push
out
sarb
xchg
outsb
pop
and
imul
mov
xor
adc
and
in
bound
jecxz
ss
bnd
imul
sbb
ds
ljmp
pop
aaa
mov
mov
jge
jl
ret
xor
stos
lret
xor
int
dec
cmpsb
mov
xor
push
rorb
je
mov
repz
xchg
sti
or
bnd
xchg
mov
or
jg
add
mov
jb
jne
jmp
daa
adcb
addr16
xchg
pop
dec
add
add
shr
mov
lahf
in
in
sub
out
aam
cwtl
and
inc
jp
in
in
lods
inc
mov
cmc
std
add
jecxz
sub
sbb
mov
cli
mov
test
aas
cmp
es
cmp
test
pop
add
dec
roll
lds
gs
dec
testl
and
std
inc
pop
inc
jg
mov
addl
xor
adc
je
and
adc
push
and
icebp
mov
scas
fiaddl
sbb
lock
rcll
stc
add
sbb
jmp
popa
aam
lock
mov
cmp
mov
fcomps
mov
rorb
insb
cmp
xchg
ss
movsl
out
in
jo
insb
xor
pop
fs
fnstcw
lods
inc
fnsave
test
fwait
shll
popf
dec
movsb
ret
pop
xor
pop
push
in
aad
nop
cmp
int3
rorb
push
sub
pusha
fcomip
out
sbb
movsb
xor
jb
ds
iret
add
inc
mov
cmc
and
sub
cmc
mov
jbe
jge
jle
xchg
lock
outsb
scas
add
repnz
lock
jl
jmp
aas
xchg
loopne
enter
imul
in
arpl
daa
or
jno
xor
sub
les
lods
das
cmp
adc
sahf
adc
scas
push
xchg
dec
lds
test
push
push
lds
cmp
inc
mov
mov
mov
mov
mov
jnp
ret
cld
mov
dec
flds
sub
addr16
xor
or
push
jbe
faddl
mov
movsl
enter
add
out
and
ds
imul
iret
incl
push
xor
sbb
pop
push
sub
cmp
and
into
data16
and
push
scas
sub
sarl
test
pop
bound
rolb
jecxz
mov
adc
mov
mov
es
sub
popf
xchg
icebp
inc
dec
fs
clc
and
lea
inc
push
mov
and
call
ficoms
jg
cmp
or
pushf
mov
mov
popa
sub
and
or
mov
jmp
or
xchg
js
mov
movsb
jae
xor
pop
fisubrs
jg
or
sub
inc
adc
sbb
es
repnz
jae
push
shlb
mov
mov
jmp
pop
inc
stos
loopne
scas
sub
daa
cmp
add
enter
or
cwtl
cmp
lret
mov
push
popl
push
sbb
jns
out
ret
sbb
jge
jns
sbb
daa
cmp
andl
pushf
sub
add
or
push
sub
jns
cmp
xor
mov
jecxz
aam
ret
mov
lods
test
gs
xor
push
iret
mov
insb
fldcw
mov
sub
pusha
icebp
test
adc
jg
mov
loopne
repz
xchg
dec
fsts
shlb
push
adc
stos
xlat
fstpt
pop
jne
inc
test
pop
mov
movsl
xchg
or
xchg
or
sbb
inc
movsl
clc
inc
lods
add
ja
xor
test
jmp
sarb
call
subl
jge
and
sbb
push
rclb
jb
insb
mov
pop
xlat
outsb
pop
scas
mov
cld
sub
cmpsb
fsubl
les
fcmovu
into
or
lea
fstl
xor
idiv
subl
pop
inc
test
sub
movsb
pop
lods
push
sbb
inc
and
insl
in
push
icebp
movl
cmpsl
out
fidivrs
test
mov
in
jmp
hlt
mov
mov
push
mov
fisttpl
lds
fidivl
cmc
stos
in
fldt
push
mov
pop
rcrl
add
shrb
movzwl
push
ss
pop
out
insl
mov
insb
jne
adc
add
cmp
mov
mov
or
mov
popf
je
xchg
and
push
pop
jnp
xlat
push
add
or
aam
sarb
pop
push
stc
sti
cmp
jnp
repz
pop
cmpb
mov
pop
adc
fiaddl
sub
mov
pop
xlat
mov
test
dec
mov
and
mov
cmc
ret
adc
lea
sbb
mov
pop
shrl
test
mov
xor
mov
sbb
mov
jbe
nop
jns
lods
adc
shl
sub
testl
pop
insl
xchg
sbb
aas
icebp
jnp
or
mov
loope
sahf
push
mov
push
adc
pop
neg
or
inc
push
loope
outsl
int
xor
push
dec
mov
arpl
roll
iret
fbstp
ret
pop
inc
cld
inc
clc
mov
inc
mov
mov
or
mov
fisttpll
push
les
sbb
mov
sbb
rorl
popa
mov
cmpl
stos
in
or
cmp
push
cmp
fwait
mov
popl
mov
xchg
test
repz
insb
cmc
hlt
cmc
and
jge
das
push
lret
or
addr16
push
mov
add
call
lds
xor
cmp
out
cmpsb
in
aad
add
lret
in
test
repnz
sbb
movl
jmp
es
xor
imul
inc
or
stos
rcr
daa
sub
roll
adc
addl
movsl
push
sarb
orl
outsb
jnp
xor
sub
mov
cmpb
andl
dec
daa
jns
shrb
ja
add
cwtl
fnsave
fldcw
sahf
cli
mov
inc
xor
cltd
push
in
inc
pop
aas
jno
xchg
and
neg
jae
lcall
mov
or
aam
mov
jb
outsl
imul
pushf
scas
ljmp
pop
inc
call
bswap
cltd
adc
jno
es
stos
mov
push
mov
imul
testb
mov
add
push
push
fwait
ja
cwtl
jo
pop
pop
cmpsb
and
jbe
jmp
rol
xchg
pop
insb
out
xchg
in
cmp
push
sbb
sbb
enter
daa
jp
mov
lret
jle
hlt
ja
fidivrl
lods
and
mov
or
test
xchg
pop
insb
push
orl
sub
in
icebp
nop
lahf
mov
outsb
sbb
sub
jbe
push
repnz
jne
fwait
nop
pop
sub
fwait
jb
push
pop
movsb
popa
mov
pushf
mov
sbb
cwtl
popa
fnstcw
or
pop
jge
inc
fsubrp
dec
or
add
dec
sub
scas
lock
mov
in
cs
in
xchg
mov
push
pop
pop
jle
xor
xorl
scas
push
sahf
inc
fistps
or
inc
mov
das
cmp
add
rclb
cmp
subl
in
xor
dec
add
dec
push
mov
shll
pushl
push
daa
cmp
ljmp
mov
or
lret
mov
adc
sbb
jecxz
movsb
inc
or
or
mov
jb
setle
jecxz
and
sbb
jnp
pusha
mov
jne
mov
or
jno
arpl
std
into
mov
or
pop
or
test
cmp
mov
int
push
aad
xor
push
sbb
imul
sarb
in
sub
mull
iret
pop
icebp
mov
dec
hlt
sbb
cmovp
dec
xchg
adc
inc
imul
pop
or
fmull
setge
mov
stc
out
sub
sub
mov
dec
psllq
repnz
xor
jbe
repz
jne
sbb
in
cli
setl
sub
mov
xor
aaa
mov
pop
lock
pop
and
ljmp
ret
mov
loope
dec
pop
dec
fisttps
cld
pop
pop
idivb
or
pop
dec
in
scas
loope
dec
xchg
cmpb
adc
aad
sbb
ret
test
movsl
xor
shll
cs
mov
out
sub
xor
mov
jmp
rcrb
xchg
lea
or
pop
cmp
xor
popf
mov
push
es
pop
out
stos
sub
imull
ret
stos
cmp
push
mov
jmp
mov
cmp
pop
cmp
iret
mov
or
xor
lea
add
dec
mov
mov
sbb
xchg
jns
pop
cmp
loop
fldl
jmp
das
jle
mov
add
mov
mov
data16
test
cmc
and
mov
adc
dec
insl
and
movsl
sub
jle
mov
jg
sbb
scas
fbstp
ror
divb
jmp
int
mov
mov
clc
sbb
cmp
inc
inc
add
ret
inc
xor
or
jp
cmpsl
adc
les
leave
daa
pop
cmp
pushf
and
sbb
dec
lret
dec
mov
inc
and
push
dec
sbb
loop
and
mov
testb
jae
pop
dec
psrld
std
jae
aam
add
aas
jecxz
add
lahf
ss
rclb
test
inc
jns
push
jl
dec
shrl
ret
push
or
sub
add
xor
aas
out
lea
sbb
loope
lock
fistl
rolb
jne
mov
test
jb
test
xchg
mov
mov
and
push
dec
into
adc
fisttpl
mov
and
shrl
xor
scas
mov
lock
mov
mov
mov
cmc
div
scas
push
jns
jnp
inc
mov
inc
stos
scas
je
pop
int
cmp
cltd
pop
xchg
adc
outsb
mov
test
lret
je
cmpsl
pushf
cmpsb
inc
sarl
ret
adc
es
mull
wrmsr
mov
movsb
stos
adc
sbb
mov
je
cs
jae
test
jle
mov
daa
sbb
es
adc
stos
xchg
imul
cwtl
sub
lods
movsbl
mov
xlat
sbb
repnz
stos
fidivs
mov
cmp
jecxz
adc
push
xchg
mov
cs
mov
lea
movsb
mov
xchg
lds
fucomp
mov
shlb
int3
mov
push
xchg
pop
sub
cbtw
movsl
imul
cld
das
mov
ds
add
dec
clc
aad
je
fs
xor
jl
jle
ret
push
sub
in
in
xchg
dec
jecxz
xchg
pop
decl
inc
dec
push
lds
inc
push
mov
movsl
das
gs
stos
sbb
jno
insb
repz
inc
push
adc
pop
push
push
arpl
mov
jbe
js
test
sahf
pop
mov
add
xchg
add
add
fpatan
aaa
popa
test
jne
fs
test
jno
imull
sub
xlat
lods
data16
loopne
jle
in
jmp
push
das
add
or
jne
xchg
into
pop
pop
xlat
mov
sahf
add
in
sbbl
add
int
inc
dec
add
and
or
fildll
cmpsb
inc
repz
lea
or
scas
out
outsl
cmpsb
or
subl
cmpsl
cmc
xchg
jl
pop
ret
add
cmp
cmpsl
mov
imul
sub
dec
leave
sub
std
stc
sbb
fs
divl
and
xchg
loopne
popaw
xor
outsb
pop
aad
push
and
rcrb
loop
inc
hlt
std
cmp
xchg
movsl
add
fcoms
fcoms
inc
xor
push
dec
in
aas
jmp
clc
iret
ja
xor
jp
mov
lds
push
adc
mov
cmpsb
outsb
mov
mov
xor
push
pop
or
push
ss
mov
jp
cmpb
or
into
mov
inc
mov
out
iret
xor
xor
movsb
aaa
mov
fwait
ljmp
sub
pop
dec
mov
pop
cmp
xchg
mov
push
sub
in
mov
outsl
fsub
testl
lods
fincstp
pop
add
popf
inc
adc
pusha
scas
sub
mov
mov
das
sbb
int
ljmp
pop
jns
sbb
mov
mov
popa
jl
mov
pop
pop
cmpsb
scas
cwtl
test
and
or
test
jp
popf
mov
data16
test
movsb
scas
addl
adc
jno
mov
movsl
pop
int
rclb
push
xor
shrb
push
mov
cmp
arpl
aaa
mov
ds
loope
lock
cmc
and
mov
adc
mov
adc
mov
mov
mov
in
sub
inc
cmp
add
sub
icebp
fdiv
cld
out
adc
stc
cmp
hlt
jne
mov
idivb
ss
fcompl
mov
ss
mov
test
out
and
dec
aas
fstps
add
push
pop
ja
pop
scas
and
call
or
stos
push
mov
mov
aas
xor
push
std
and
int
lods
in
lcall
ret
inc
jmp
insb
xchg
ja
sub
loop
inc
dec
sbb
stc
lods
xlat
test
sub
outsl
xchg
data16
orl
movsl
inc
inc
or
out
into
rcrb
push
cli
subl
aad
inc
cs
ds
sarl
xor
pop
cli
movsl
add
cltd
add
loope
push
mov
mov
push
cmp
enter
sahf
or
jle
leave
std
rcrb
popa
dec
jb
lahf
pop
mov
dec
pusha
push
jae
sbb
mov
pop
cli
pushf
xchg
ficompl
lock
popa
pop
call
push
arpl
aad
push
mov
cmp
cltd
popf
in
push
adc
aad
mov
lock
mov
mov
xchg
pop
jns
and
mull
rcrl
outsl
aas
sub
adc
mov
xchg
adc
andl
insb
push
cmp
ret
bound
dec
dec
inc
xlat
leave
push
xor
dec
push
sbb
imul
mov
jecxz
out
xchg
adc
push
stos
mov
lock
mov
adc
inc
pop
cmp
xchg
xor
iret
push
lahf
push
pop
xor
fimull
scas
sub
enter
xchg
fdivrs
adc
jb
mov
ja
loopne
ja
jb
lock
mov
jl
sahf
es
cmc
imul
pop
sub
xor
iret
clc
gs
iret
mov
popf
mov
mov
ret
dec
mov
mov
mov
and
jbe
out
jg
push
add
rorl
outsb
push
jp
lods
dec
and
adc
xor
hlt
jae
loop
insl
shl
push
sub
lock
mov
pop
inc
pop
xchg
ja
jge
jo
fld
xor
xor
jecxz
ret
xor
ret
xlat
dec
shlb
pop
aad
xlat
fiadds
or
imul
rorb
and
lods
xor
addb
into
pushf
adc
cmp
dec
add
in
mov
movsl
cmp
iret
pop
lods
xor
mov
mov
push
add
sbb
fsubrs
xchg
lcall
or
xchg
daa
mov
outsb
in
mov
cmp
and
add
dec
lret
inc
dec
sbb
jg
or
sub
repnz
ss
daa
ljmp
mov
lock
test
and
popf
pop
inc
nop
inc
mov
ja
and
in
shrl
nop
popf
mov
sub
lret
fcmovbe
xor
and
rolb
dec
mov
mov
dec
mov
xor
shl
push
mov
imul
hlt
mov
adc
mov
ss
sub
inc
in
dec
fildl
mov
adc
mov
pop
inc
insl
mov
fstps
jnp
rolb
cmp
jb
adc
pop
xor
in
aas
test
loope
ja
mov
test
rcrb
mov
iret
fmull
sti
std
push
dec
push
jb
scas
push
jbe
pop
imul
rep
out
sub
and
loop
or
xchg
loope
push
std
or
pop
sub
es
sub
gs
push
mov
outsb
lods
iret
addl
cli
in
notb
nop
pusha
jnp
je
fdivr
xchg
jo
mov
mov
pop
ja
sbb
and
fdivrs
mov
out
shl
call
cmpsb
lret
adc
stos
inc
movsl
and
cmpsl
lods
pop
fisubs
out
out
push
ficompl
aas
xor
sbb
daa
fldenv
aam
int
xchg
out
daa
xchg
sbb
test
push
lret
xor
push
mov
jecxz
xchg
ja
push
add
xchg
jecxz
gs
dec
lods
xor
cmc
pop
dec
lcall
or
or
out
daa
jle
cmpl
sbb
into
es
push
sub
out
or
fisubs
cmc
rorb
or
imul
les
jnp
cltd
push
stos
mov
fidivs
mov
sub
nop
fisubrl
clc
rol
cmp
mov
loope
sub
mov
and
cmp
add
out
xchg
andl
cmp
cmp
push
pop
sub
cmp
xor
xchg
out
mov
pop
push
in
scas
jecxz
add
mov
sti
jnp
ds
fsubrs
aad
mov
lcall
cmp
leave
ret
mov
and
int3
data16
js
test
inc
testb
imulb
xor
fiadds
leave
addl
fisttpl
aam
mov
push
arpl
add
push
cmp
shrl
inc
or
or
push
lret
sub
lcall
and
insl
scas
repz
adc
pop
mov
lds
and
cmp
push
push
dec
and
xchg
lods
jnp
add
dec
daa
and
pop
sub
fisubrs
movsb
jge
cmp
popa
pop
jno
mov
movsl
insb
daa
fimull
mov
ja
insb
popa
lods
or
cmp
mov
xchg
xor
xchg
xor
jne
cld
fwait
in
subl
adc
dec
stos
addr16
aas
adc
lcall
dec
iret
aam
pusha
mov
dec
insl
add
mov
xchg
test
popa
ds
std
paddsb
cmp
sub
cmpsl
icebp
out
mov
fldt
push
test
xor
rcrl
pop
sub
daa
inc
int3
lods
je
jae
into
insl
inc
aaa
add
out
mov
inc
push
test
jg
xor
in
test
pop
jge
fimuls
shrb
xchg
push
sbb
mov
out
xchg
adc
xchg
pop
push
into
xchg
imul
movb
pop
ljmp
or
nop
leave
fnstcw
gs
iret
repz
dec
hlt
add
jo
mov
mov
cmc
icebp
xor
or
pop
adc
mov
lret
and
cs
out
pop
jo
or
aas
fiadds
iret
mov
ret
lcall
pop
jb
shrb
out
pop
fisubs
xchg
ja
stc
ds
mull
rorb
ds
loopne
xchg
add
pop
sahf
inc
fs
ljmp
movsb
sub
add
jns
loopne
int3
icebp
mov
mov
stos
rolb
std
orl
inc
pushl
outsb
mov
dec
jmp
mov
roll
imul
xor
mov
sahf
push
aas
imul
iret
cmpsl
addl
xor
sbb
cmp
ret
xor
and
imul
and
pop
popf
push
cld
mov
fwait
loop
adc
sbb
mov
dec
jnp
xor
test
addr16
sbb
mov
jecxz
addr16
daa
hlt
sub
fisubl
xchg
dec
adc
loop
xor
psllq
popf
and
push
jg
sbb
negl
mov
pop
iret
repnz
test
xor
xor
mov
rcrb
mov
adc
push
std
insb
leave
push
inc
cmp
in
ljmp
or
sti
dec
dec
iret
pop
arpl
push
or
das
clc
add
lea
movsl
push
rolb
sti
movsl
mov
pop
dec
cmpsl
jne
pop
sbb
dec
scas
mov
pop
stos
insl
jns
jp
ja
xor
je
sbb
repnz
mov
inc
fcomi
loopne
jno
and
jmp
adc
mov
adc
stc
in
adc
test
pop
mov
mov
mov
or
sahf
xchg
popa
imul
jle
xor
sub
cmp
loopne
push
fbld
ror
xchg
jge
je
and
jl
repnz
push
pop
roll
jge
inc
xor
inc
leave
fisttps
cmp
notl
jmp
hlt
ficomps
xchg
jnp
into
mov
adc
dec
xchg
cmp
xchg
pushf
add
pop
and
push
scas
ret
pop
cmpsb
rcrl
xor
fldcw
mov
bound
das
xchg
adc
enter
loopne
jb
mov
pop
mov
ds
cmpsb
fxtract
adc
adc
mov
or
negl
xor
jg
ret
sub
jne
and
mov
das
lcall
adc
push
call
pop
out
stc
andb
mov
cmp
out
push
je
test
add
insl
mov
xchg
jae
push
lea
lcall
push
jbe
jg
cmc
sahf
stos
and
mov
add
mov
arpl
loopne
aaa
jp
addr16
imul
cmp
inc
ret
lret
xor
jnp
sbbl
pop
mov
movl
mov
addl
mov
push
mov
mov
sub
clc
outsl
rcll
ja
popa
jb
cld
ds
mov
out
insb
outsl
xchg
xchg
adc
cmpsl
arpl
jne
push
dec
push
pop
rcl
mov
xor
faddl
inc
decl
add
inc
test
inc
outsl
lcall
fucom
sub
imul
sahf
xchg
mov
rorb
int
and
ret
adc
xor
movsb
pop
andb
outsl
xchg
mov
outsl
aaa
xchg
or
negb
ja
movsb
mov
icebp
arpl
lcall
mov
ljmp
sahf
jnp
xor
or
push
add
insb
sub
sbbb
mov
cmpsb
out
inc
and
push
and
dec
mov
in
xchg
mov
xor
ljmp
pop
inc
inc
cmc
les
dec
push
sbb
in
sar
sub
stc
mov
adc
pop
push
ja
out
mov
xor
cmp
dec
xchg
mov
loop
popa
fidivrs
add
mov
data16
push
fdivrs
fnstcw
and
dec
mov
jecxz
test
lods
in
out
sbbb
jmp
inc
cmc
test
cmp
sub
jmp
ficomps
sbb
pop
sbb
jg
inc
std
fnstcw
lods
call
mov
cltd
or
movsl
cmp
lock
sub
filds
jg
cmp
jle
or
icebp
pop
jns
xor
mov
bnd
hlt
lret
sbb
sub
packsswb
lret
cmpsb
and
pop
cmp
dec
xorl
add
int
mov
push
rcrb
fmulp
xchg
mov
mov
ret
push
xchg
inc
out
std
mov
add
jae
test
mov
mov
inc
shr
and
jmp
mov
xchg
xor
sub
cmp
adc
mov
mov
cmp
dec
xor
jne
pop
add
inc
push
sub
orb
frstor
icebp
and
aam
fildl
pop
gs
sarl
fucomi
pop
rcrl
mov
inc
xchg
push
push
sub
pop
pop
hlt
ljmp
push
pop
xchg
mov
pop
lods
cmpsb
lret
mov
adc
subb
xchg
add
popf
sahf
out
imul
mov
jmp
dec
sub
mov
pop
ficoml
repnz
fcompl
data16
inc
jge
mov
int
sub
mov
jo
lret
popa
add
inc
mov
icebp
pop
lock
mov
lret
lea
int3
in
insb
fsubp
fdivrs
push
outsb
loop
inc
mov
push
add
xchg
push
push
rcll
dec
jo
pop
add
out
cmp
xor
push
jb
jne
stc
mov
into
addl
cmp
mov
lcall
int
aad
jne
and
push
jg
mov
or
and
dec
xchg
ds
mov
push
jl
xchg
fisubl
and
xor
jle
cmp
and
adc
xchg
and
push
fbstp
mov
clc
orl
shlb
mov
out
rcr
aaa
or
sub
inc
aad
cmpsb
aas
inc
jecxz
sbb
movsl
or
jbe
outsb
adc
mov
das
cmp
shl
dec
sti
xor
push
mov
jae
cmp
dec
lret
and
mov
loop
rcl
bound
lret
xchg
rorb
mov
mov
insb
mov
xchg
mov
insb
adc
adc
dec
insl
xor
cwtl
pop
imul
les
pop
xor
repz
mov
repnz
cmp
movsb
and
xor
xor
and
ret
lret
cmp
and
inc
dec
cwtl
mov
loopne
dec
push
lods
pop
jmp
call
mov
cmp
aad
mov
es
ret
loop
xchg
shl
in
pop
call
add
pop
push
push
jnp
adc
xchg
push
inc
xor
mov
das
xchg
sub
or
ds
cmp
and
and
data16
incb
jecxz
shrb
imul
pop
and
or
frstor
fadds
cmc
mov
pushf
pop
cmc
jl
roll
xor
mov
mov
jbe
popa
mov
sbb
dec
lahf
cmp
jge
int3
adc
pop
lret
xchg
jnp
jno
sub
sbb
or
jecxz
and
sbb
and
stos
sub
jp
shr
cmp
sarb
xchg
aad
adc
xchg
sahf
cmp
aam
mov
je
js
or
popf
test
jbe
mov
cmpsb
adcb
xor
sub
std
sbb
out
aas
push
mov
mov
insl
or
mov
lret
xor
xchg
xor
adc
es
cs
pusha
mov
fwait
clc
jge
and
cmc
in
testb
push
jge
ljmp
and
adc
leave
mov
and
cld
mov
sbb
out
dec
dec
inc
icebp
inc
sbb
push
push
pop
pushf
jo
push
or
leave
and
fs
push
inc
push
or
or
loopne
mov
test
push
mov
ds
outsl
stos
aam
lock
nop
fcoms
jb
cli
call
loope
les
and
sbb
ret
mov
cmp
cmpsl
mov
or
inc
fdivs
std
cmp
dec
cli
push
cwtl
jge
sbb
std
test
ss
dec
or
mov
jl
mov
icebp
mov
xchg
jmp
pop
jno
jecxz
mov
hlt
xchg
and
and
lds
mov
cmpsb
aam
movsl
mov
and
test
mov
dec
sbb
inc
lret
ds
movl
mov
pop
test
mov
dec
add
fistpl
cmp
les
ljmp
cmpsl
mov
add
sahf
jle
dec
pop
adc
into
jnp
xchg
xlat
xchg
fdivs
push
jg
or
adc
out
jle
jne
cli
popf
xor
cmp
mov
mov
sahf
pop
jnp
fcoms
mov
in
xchg
mov
pusha
out
clc
mov
xor
xchg
adc
xchg
pushf
aad
mull
sub
decl
jmp
mov
arpl
lret
inc
and
inc
inc
jp
xor
inc
lret
stc
adc
aad
push
push
scas
and
sub
adcb
subb
push
pop
pop
cmp
jl
mov
popa
or
or
xor
jp
outsb
cmc
sbb
jle
sbb
cmpsl
sbb
adc
popa
fstpt
fcom
mov
fbld
lock
mov
into
cmpsb
xor
add
cltd
lea
loopne
loop
pusha
lods
in
ljmp
mov
test
test
sub
clc
mov
pop
js
pop
loop
testl
and
cli
mov
addr16
movsl
cmc
mov
ret
push
mov
outsb
cmp
push
sbbb
rorb
lea
add
lret
fwait
orl
push
jmp
cld
call
adc
popa
mov
test
push
out
ljmp
test
shrl
xor
out
mov
aam
and
dec
subb
or
movsl
andl
mov
mov
call
mov
rcrl
and
shl
std
call
ror
pop
shll
jle
lcall
mov
stos
jp
mov
bound
push
sub
jge
xchg
call
pop
or
inc
das
dec
arpl
sub
mov
fmull
mov
and
sub
lds
into
and
mov
aaa
mov
jnp
adc
push
mov
fidivl
mov
insb
in
xor
call
mov
sub
jno
xchg
aad
mov
pop
popa
sbb
dec
punpckhbw
das
repz
das
cmpsl
xor
sbb
inc
into
xchg
push
push
mov
test
mov
aaa
or
mov
mov
sti
mov
mov
testb
xchg
addl
mov
les
xchg
mov
adc
lahf
xchg
pusha
es
sub
or
sti
ss
rol
jbe
fisubrl
push
dec
ficoml
or
stos
sub
test
dec
lods
out
adc
push
repnz
pop
pop
push
inc
scas
ja
repnz
push
pop
cltd
pop
pop
cli
les
add
or
mov
xor
test
cmpb
pushl
popf
fwait
jecxz
sub
pop
icebp
xchg
adc
daa
aaa
jae
loopne
fldt
scas
fisttpll
adc
daa
dec
loopne
js
add
mov
daa
sub
or
mov
sbb
out
dec
lret
mov
xchg
dec
cli
add
jl
notl
js
xchg
cld
test
mov
dec
push
mov
fisttps
mov
push
and
enter
lret
test
std
inc
jo
aas
lea
dec
out
jecxz
xchg
out
and
push
or
xchg
int
insb
mov
in
sbb
jb
jbe
pop
or
gs
fldenv
das
sbb
int3
mov
sub
jg
orl
nop
jmp
and
mov
jns
mov
cmp
sbb
shr
cld
sub
mov
or
mov
popf
jae
jg
dec
jno
mov
call
sub
jmp
or
jo
insl
lods
or
data16
jmp
lcall
dec
sahf
lock
shl
insb
and
jle
lret
pop
imul
inc
shrb
sub
push
push
xor
jns
icebp
mov
mov
cmp
mov
lret
das
sub
and
xor
mov
lcall
insb
xchg
popa
jne
push
movsl
out
loop
sub
dec
out
mov
jp
movsb
sbb
sub
ret
sbb
loopne
mov
and
sub
push
add
or
jge
test
jns
stos
xor
pop
xor
imul
pop
shrl
inc
jle
jge
outsl
fdivs
mov
pop
pop
aad
jle
push
cmp
dec
inc
pop
inc
dec
jle
in
or
xchg
xor
outsb
fcmovnb
outsb
mov
cmp
xchg
jg
andb
xor
imul
sbb
ds
adc
sub
push
pop
add
and
mulps
jp
sbb
sub
mov
mov
mov
test
pop
stc
xchg
les
push
and
jp
xor
push
xchg
pop
data16
mov
cmp
mov
xchg
pop
out
in
mov
addl
sub
daa
jno
idivl
adc
pop
lahf
nop
jle
jno
mov
lret
lcall
fistpll
into
sbbl
inc
adc
mov
outsb
cmpsl
dec
or
fwait
xchg
pop
mov
sub
mov
xchg
xor
inc
mov
test
call
cwtl
loopne
mov
cld
mov
dec
lret
test
lahf
and
xor
push
sbb
push
js
loope
ljmp
repz
cmpsl
int3
xchg
mov
pop
add
pop
fmuls
xchg
pusha
stos
mov
and
push
inc
add
shr
enter
jmp
js
ljmp
cli
adc
lahf
mov
inc
dec
test
lods
enter
inc
subb
sbb
call
jnp
lock
sub
mov
mov
lods
outsl
pop
mov
lods
xchg
pop
push
cmc
sub
iret
lods
lret
fstpl
mov
mov
jb
lea
add
addr16
and
les
xchg
call
es
repz
add
push
testl
and
movsb
std
mov
jg
mov
es
jno
ss
int
sub
rcl
mov
adc
mov
imul
sub
clc
dec
push
pop
cltd
cmp
shll
cmp
adc
mov
sub
ret
xor
xor
sub
pushf
jmp
mov
push
adc
cld
shll
dec
mov
add
in
mov
das
aas
arpl
enter
sbbl
clc
adc
subl
out
mov
imul
lock
lds
jns
movsb
fdivl
icebp
cmp
add
inc
fsubrl
outsl
jg
into
and
mov
test
js
addl
xchg
outsl
xor
push
or
leave
push
adc
scas
clc
sti
das
pop
imul
mov
jle
and
or
mov
into
mov
inc
push
or
in
lahf
sbb
mov
rolb
fdivl
inc
arpl
xor
scas
lea
into
shrl
push
xchg
jge
sarl
shlb
aam
out
inc
pop
push
push
int3
jecxz
cltd
mov
test
out
mov
mov
cmp
pop
xor
aad
stc
jg
sbb
add
inc
sbb
fsubrl
inc
daa
out
mov
ss
cmp
xchg
dec
into
or
jl
jno
fdivr
push
subb
dec
xchg
int
idivl
ljmp
pushf
cltd
fnstenv
dec
cmc
sbb
ds
sahf
data16
fistpll
loope
ror
fldt
inc
popf
and
fstpt
or
or
insl
stc
mov
jae
in
and
and
pop
xchg
repz
mov
push
gs
jne
jl
lret
push
xor
in
mov
add
aam
pop
mov
and
out
out
test
adc
mov
incb
push
insl
or
mov
pop
jnp
nop
aad
xor
enter
aaa
mov
std
cmpxchg
sbb
mov
call
and
mov
cmpsb
pushf
pusha
scas
xorb
mov
loop
lret
iret
clc
out
aam
sub
sbb
mov
mov
lea
and
pushf
fs
add
pop
ja
xor
aaa
fdivs
out
pop
xchg
lahf
jae
test
int3
repz
or
sti
fiaddl
dec
ss
cmp
inc
call
xor
fcmovbe
jmp
insl
sbbb
xchg
ss
leave
pop
mov
cli
add
and
mov
adc
aam
nop
fcmovu
les
scas
dec
xchg
push
pusha
movsl
test
mov
xchg
lret
sub
testb
mov
into
pop
in
fistpll
inc
and
jecxz
pop
mov
enter
mov
jnp
push
aas
leave
sbb
xor
rcrb
push
mov
cmp
test
es
nop
gs
cld
or
and
pop
mov
sub
and
lret
mov
jmp
lds
ss
ficoml
ds
scas
add
int3
xchg
dec
mov
idiv
gs
jle
pop
std
dec
mov
bound
les
push
inc
mov
fcomip
jge
dec
dec
imul
loopne
xor
xchg
adc
scas
leave
add
notb
jp
add
jns
mov
mov
in
push
gs
or
jl
push
hlt
dec
pop
sbb
push
or
add
mov
aam
mov
xchg
ret
xchg
pop
ret
xor
jo
es
int3
xchg
mov
test
jp
mov
fwait
push
cmpsb
movsl
jge
xor
xor
test
fcompl
or
rclb
jo
repz
mov
adc
loop
push
lea
das
or
cltd
jp
and
push
mov
jge
push
mov
inc
insb
inc
inc
jmp
outsb
or
mov
pop
lock
shr
lea
fdivs
jge
mov
clc
or
push
movsb
cltd
jno
aas
lret
lret
push
xchg
fldcw
dec
ljmp
cli
jnp
pop
in
ret
add
jl
and
bswap
call
mov
movsb
movsb
bound
nop
pop
cld
jno
mov
outsb
jp
cmp
loop
jl
cmpb
test
loope
nop
imul
or
dec
sbb
sbb
test
shll
arpl
and
and
sbb
adc
aam
inc
cmpsb
data16
jg
pop
mov
mov
jne
fiadds
jp
mov
jns
inc
mov
xchg
fwait
add
clc
cmpl
mov
cs
push
je
pop
adc
xchg
lret
aam
jmp
pop
or
in
adc
in
jnp
xchg
add
lret
jnp
mov
sbb
lcall
dec
push
adc
xchg
jo
cltd
adc
xor
jmp
std
xchg
ret
repnz
pop
sbb
xchg
icebp
bound
xor
fldl
subb
fldl
sbb
ss
jp
cld
dec
movsb
test
and
adc
es
orb
and
mov
xor
das
test
sub
jae
push
inc
leave
test
mov
pop
jg
sub
sbb
push
mov
in
aas
sahf
and
pusha
in
out
or
xchg
scas
sub
sti
aad
dec
add
ret
sub
pop
negl
mov
fdiv
sub
in
and
adc
cmpsl
test
int
sahf
aad
bound
lcall
iret
fnstsw
js
pop
jae
mov
push
psubsw
mov
arpl
mov
outsb
dec
add
sub
popf
clc
jle
rorl
sub
imul
rcll
pop
icebp
and
test
sbb
xchg
cltd
mov
out
out
inc
cmp
daa
clc
mov
dec
scas
sub
sub
mulb
inc
lock
test
fcompp
rcrl
lods
jnp
popf
addl
fisttpll
sbb
ja
or
pop
inc
loop
xchg
pop
and
pop
sub
mov
daa
add
rep
outsl
cmp
shr
sbb
xchg
mov
fstpl
sub
leave
fnsave
mov
push
fs
testl
ja
fwait
andb
das
pop
call
cwtl
cmp
in
pusha
sub
fimull
push
mov
sub
out
sbb
dec
ja
int3
jmp
mov
repz
adc
inc
sub
push
es
sbb
mov
out
and
xchg
and
insb
inc
adc
cmpsb
or
push
mov
hlt
loop
test
pushf
cmp
jp
fcomp
push
test
js
mov
nop
rcll
or
cmp
xchg
adc
sbb
outsl
mov
in
icebp
movntps
sub
push
cmp
or
mov
aam
dec
mov
pop
fcomps
mov
mov
jb
push
xchg
push
sbb
lods
xchg
xchg
mov
jb
popf
jg
fwait
lahf
adc
jge
mov
cwtl
push
push
inc
or
xchg
subl
imul
dec
lods
sahf
out
add
pop
inc
movsl
nop
shr
push
mov
pushf
jae
int3
sub
pop
js
cltd
scas
lock
outsl
sti
jns,pt
push
out
leave
push
cmp
or
fwait
xchg
enter
imulb
mov
fucom
popf
ror
fisubs
adc
jbe
insl
pop
fisubrl
int3
jne
es
and
xor
in
ja
test
fidivrl
pop
scas
int3
ljmp
mov
ret
xchg
push
xchg
clc
mov
orb
or
add
jl
movsb
jle
sub
cmp
in
push
out
sar
frstor
jg
test
mov
push
sbb
push
dec
jb
pusha
and
and
imul
inc
mov
dec
lahf
or
xchg
add
mov
pop
push
add
gs
mov
xchg
sbb
mov
sub
xorl
jae
mov
sub
mov
inc
adc
push
mov
mov
xchg
add
cmp
mov
lds
cmp
jno
jle
jecxz
sbb
pop
and
add
pop
xchg
mov
dec
or
mov
dec
dec
in
popf
adc
push
mov
flds
cld
imull
in
inc
pushf
pop
arpl
out
bnd
cwtl
jne
testl
test
xor
rcl
jne
cltd
imul
std
cmp
movl
rclb
movsl
or
inc
insl
xchg
xchg
and
add
test
xchg
movl
mov
cli
aaa
in
andb
xor
pushl
mov
les
xchg
jno
mov
push
cmp
or
pop
in
add
xor
outsb
lods
add
idivl
sub
mov
movsl
push
jb
daa
hlt
into
jb
dec
push
stos
xchg
adc
sbb
cld
fld
mov
ljmp
scas
fnstsw
mov
mov
lock
and
outsl
mov
shrl
push
mov
das
sarl
and
movb
repz
std
test
and
xlat
into
mov
jae
xor
ret
xlat
add
fs
xchg
int
ss
xor
adc
cmpsl
cmpsl
inc
sbb
out
outsl
xchg
es
ja
mov
jns
leave
repnz
xor
inc
xor
jns
fucomip
repz
pop
add
xor
cmc
cli
out
out
mov
push
in
inc
lcall
inc
xchg
xchg
fmul
pop
scas
add
mov
xor
fisttpl
sbb
aas
and
imulb
inc
arpl
xor
into
dec
mov
ja
mov
mov
dec
ret
adc
sub
jb
cs
ds
push
or
push
ljmp
in
pusha
sbb
addr16
jp
jo
jle
xchg
faddp
lock
jg
daa
pop
repnz
test
adc
aas
cmp
rorb
adc
or
jns
adc
rcrb
mov
lahf
add
jl
cmc
sbb
or
inc
cwtl
stos
sahf
and
js
fnstsw
pop
daa
enter
imul
xor
jo
push
add
add
mov
jae
outsb
jne
aad
and
cmp
add
xor
insl
mov
sub
nop
pop
imul
sub
or
ds
cld
jno
getsec
xchg
xchg
icebp
xchg
mov
ds
test
fsubs
push
idivb
fwait
lcall
sbb
pop
jno
insl
clc
stos
sub
jmp
push
add
mov
lods
test
cmpsb
mov
into
lret
mov
and
sub
shrl
mov
ret
fsubs
jno
xor
scas
pop
loopne
addr16
call
sub
std
cmp
dec
or
bound
outsl
push
mov
sbb
int3
sbb
lds
nop
adc
cmpsb
mov
inc
in
gs
or
inc
and
das
dec
ficomps
sub
shr
jmp
cmp
inc
inc
mov
mov
push
fwait
test
dec
in
out
mov
inc
icebp
mov
pusha
sbb
push
jo
scas
pop
nop
icebp
pop
mov
inc
cmpsl
xchg
rclb
inc
ret
lea
pop
stos
dec
xor
stc
test
les
lods
xor
nop
stc
add
push
mov
mov
loope
out
hlt
sarl
out
xor
lahf
push
push
pop
shr
pop
push
or
lods
dec
ds
xchg
repz
fnstsw
das
xor
or
cli
out
std
out
out
dec
repz
ja
cmp
popa
iret
les
inc
int3
adc
jno
js
cmp
insb
push
push
cmp
decb
mov
lret
sbb
popa
jmp
in
xor
adc
pop
ret
aas
setne
sbb
and
repnz
pop
jg
arpl
and
cmpsb
cmp
and
mov
add
int
push
add
xor
addr16
mov
enter
negl
jge
add
pushf
aaa
mov
fidivrs
xor
orl
out
pop
pop
ss
jmp
jb
shr
sbb
jne
lea
jbe
lock
inc
or
push
add
notb
xchg
lret
enter
pop
js
xor
loopne
push
pop
inc
jge
jo
pop
fs
pop
cltd
dec
hlt
pop
push
rcrb
xorl
mov
out
enter
lds
cmp
mov
pop
add
push
int3
in
dec
mov
pop
scas
mov
inc
push
das
mov
or
cmp
movsl
arpl
sub
and
xchg
test
and
pop
xor
cs
jnp
mov
xchg
sub
jmp
iret
aad
or
push
outsb
and
fwait
inc
push
xchg
xchg
mull
cmp
mov
das
mov
mov
jb
mov
jno
dec
lret
jne
xor
push
aad
cli
data16
jb
pop
loopne
popf
mov
or
imul
daa
dec
cwtl
jl
or
mov
add
mov
push
das
adc
xchg
lds
inc
mov
lock
jmp
stos
sub
jg
xchg
xor
call
std
lret
and
mov
jnp
mov
sbb
faddl
mov
sbb
rep
dec
adc
and
es
cmpsb
bound
subb
inc
cmp
push
xor
in
jbe
dec
mov
gs
loopne
iret
loopne
ret
ret
jbe
hlt
cmpsl
cld
mov
sarb
jnp
push
sbb
jo
add
pop
fisttpl
inc
push
cmp
add
dec
jg
push
xchg
int
inc
testb
lds
inc
cmpsl
xchg
dec
scas
adc
lods
push
ret
cli
mov
adc
push
popf
arpl
mov
fiaddl
and
into
movsb
mov
bsf
and
addr16
push
int3
add
es
sbb
adc
mov
mov
cmpsb
push
stos
pusha
fistl
jge
insl
dec
fidivrl
mov
insb
int3
mov
sti
adcl
jl
fs
push
or
imul
adc
addr16
xor
push
jecxz
icebp
mov
out
mov
shlb
cmp
pop
push
mov
mov
mov
out
es
and
mov
push
push
add
cmp
stc
aad
fisttpll
shll
lds
sti
in
sbbl
mov
pop
jne
mov
fcompl
xor
or
into
iret
das
jne
jmp
cmp
fidivs
mov
jne
aaa
addr16
jp
jnp
shl
mov
jae
or
int3
mov
js
push
jae
dec
shll
loopne
test
push
push
loop
or
mov
imul
test
outsb
sbb
lock
sub
dec
outsb
mov
clc
rolb
aam
fwait
ds
sbb
scas
out
xor
jmp
or
xchg
and
in
push
xor
shrb
mov
popf
or
and
ds
insb
and
bound
loope
in
sub
mov
dec
aaa
pop
add
incl
fs
imul
and
test
pusha
fisubrl
mov
mov
jno
daa
jne
push
test
mov
jmp
popf
cmc
loopne
enter
dec
ret
xchg
stos
adc
xorb
repz
rep
div
pop
jo
out
adcb
pusha
pop
popa
lahf
mov
cltd
int
pop
jp
pop
sbb
test
lea
dec
push
jne
pop
dec
mov
mov
push
mov
pop
lods
push
mov
cmp
mov
sbb
out
sbb
sti
inc
xlat
push
push
pop
std
dec
dec
push
mov
add
into
mov
test
add
or
fcmovu
aaa
rcl
repnz
push
xchg
jnp
stc
jb
enter
xor
test
mov
or
aas
xchg
stc
cmp
call
fs
lahf
icebp
mov
xor
mov
dec
ror
cmpl
pushl
das
push
sub
jno
adc
xchg
daa
ljmp
lret
push
and
cmp
jg
inc
bound
mov
ja
dec
rcrl
add
jno
pop
xchg
jl
fisttpll
sbb
mov
add
add
icebp
and
push
jo
sub
push
adc
mov
faddl
sbb
push
or
sbb
dec
sub
out
cmp
inc
mov
or
or
jl
adc
jbe
in
lods
xchg
sub
ret
dec
dec
push
xchg
aaa
dec
outsl
testl
pop
dec
push
mov
loope
fnstcw
mov
mov
in
outsl
loop
insb
and
sbb
fcmove
xchg
cmpsb
push
push
xor
lds
movsl
andb
xchg
jecxz
adc
int3
adc
cwtl
cmp
addr16
sbb
adc
shll
mov
push
cmp
out
dec
outsl
stos
movsb
imul
lret
pop
adc
jmp
and
jle
in
cmpsl
or
data16
loope
push
fwait
xchg
xor
sub
jge
shll
test
subb
pop
pop
add
aaa
iret
dec
adc
test
lock
bound
fists
bound
push
sub
xchg
sub
mov
cmp
scas
xchg
jmp
fimuls
dec
or
int3
in
popf
lret
rol
xchg
out
jmp
scas
mov
out
pop
in
mov
notb
cmp
stos
fistpl
push
jmp
pop
nop
pop
push
fistps
sar
add
mov
mov
out
idivb
daa
adc
in
pop
cmp
cmp
daa
cmpsb
push
test
mov
aad
lea
bound
or
fdivrs
pop
outsb
sub
leave
fsubrp
adc
dec
lock
mulb
pop
jne
pop
mov
and
les
sub
push
xchg
xchg
cmp
test
mov
pop
pop
mov
mov
iret
and
mov
fwait
into
or
mov
jp
jbe
cld
insb
std
dec
enter
scas
jge
aas
dec
hlt
adc
push
jb
jl
test
fisubs
push
sub
push
xchg
pusha
jp
fldt
cmc
jno
addr16
je
mov
dec
adc
test
stc
cwtl
cmpsb
lods
outsb
inc
jno
daa
in
pop
cmp
sub
cwtl
adc
push
add
xchg
mov
in
push
xor
aas
addr16
cmp
cmp
inc
sub
fimull
aas
scas
shrb
and
iret
shrb
xchg
dec
outsl
dec
bswap
cmp
dec
popf
outsl
adc
out
out
lahf
xchg
loopne
push
pop
imul
pop
adc
int
mov
cmp
ret
lahf
jge
adc
inc
aad
push
push
loop
cmp
andl
clc
mov
rcrb
xor
call
subl
jne
dec
jne
out
aad
pop
pop
add
sub
insb
leave
push
push
lds
pop
push
jl
xor
pop
rcll
pop
mov
clc
clc
jmp
dec
pop
into
adcl
sub
ret
push
add
xor
pop
mov
ljmp
into
imul
test
loope
inc
xchg
and
loope
lahf
popf
sub
in
add
xorb
push
lods
and
fldt
aam
jb
inc
pusha
movsl
sti
xchg
sub
dec
fnstcw
out
leave
fisttpll
xchg
cmc
incl
jns
test
mov
leave
and
pop
shll
shlb
xchg
xor
clc
dec
jmp
push
sahf
sub
xor
in
lock
ret
jo
adc
mov
repz
arpl
clc
fnstcw
dec
outsb
mov
jecxz
mov
shlb
mov
add
in
test
popa
fdivs
and
test
xchg
adc
push
in
cmp
dec
mov
xchg
push
mov
ljmp
dec
xchg
mov
and
dec
cmp
xor
dec
mov
es
repz
pop
stc
ficomps
and
ret
xchg
jns
rorb
into
cmp
pmuludq
enter
cmc
mov
mov
cwtl
cmp
and
jb
sub
movsl
inc
arpl
and
mov
sub
sti
xchg
dec
pop
mov
inc
ret
fs
andb
ror
inc
outsb
cmpsl
gs
loopne
cs
dec
or
or
cltd
cld
xor
push
xchg
incl
lock
jbe
xor
push
jge
push
jge
xchg
inc
mov
pop
mov
pop
adcb
cli
aam
pop
jmp
inc
mov
pop
pop
xchg
das
aas
mov
mov
adc
jno
xchg
adc
aaa
lods
sahf
ret
lods
sub
mov
sub
lret
ljmp
xor
hlt
leave
rorb
movsb
fdivrp
mov
add
jmp
cmc
sti
es
mov
push
loop
dec
test
xor
loope
scas
xor
mov
icebp
jge
mov
popa
mov
fists
jbe
add
xorb
ficoms
sub
mov
loopne
rclb
or
fisubrl
inc
sub
mov
push
hlt
xor
dec
xor
mov
add
stc
push
add
nop
or
das
adc
pushf
fdiv
xor
jmp
cmp
pusha
sub
ret
xchg
adc
dec
jo
fsubrl
mov
dec
cmp
jnp
call
pop
shll
stos
push
mov
or
hlt
push
xchg
lods
ja
sub
xor
rcll
push
xchg
rcrl
mov
sahf
into
divl
dec
sbb
aam
mov
dec
jmp
jb
fsub
sbbl
mov
push
xor
movsb
or
mov
xlat
repz
jecxz
rolb
jge
pop
sbb
cmp
mov
fiadds
sub
fistl
fucomi
test
jne
jnp
adc
aad
sbb
arpl
push
xchg
cs
mov
lds
add
xchg
arpl
shrl
aaa
cmp
add
sarb
pop
fdivs
outsl
ss
lea
mov
in
aaa
fadd
inc
jne
movsb
in
pop
int3
fidivs
insl
popa
add
add
mov
pop
cmp
inc
loope
pusha
in
mov
xchg
sub
scas
jmp
or
rorl
cmp
shlb
mul
lods
mov
sbb
cmp
rol
in
inc
gs
lea
rcll
repnz
xor
arpl
push
lahf
call
aas
sub
cmpsl
xchg
sahf
mov
jecxz
push
sub
mov
lahf
push
jmp
es
dec
lcall
or
push
sbb
movsl
sub
test
pop
push
xchg
push
dec
aas
jge
mov
dec
call
jnp
ds
out
xor
xchg
mov
leave
pop
jns
loopne
push
add
pop
dec
mov
and
push
push
loop
push
jg
cld
sub
xor
adc
shrb
push
enter
mov
cmpsl
stos
repnz
in
jo
cli
xchg
add
ljmp
bound
data16
cwtl
fwait
jle
push
jbe
ljmp
loopne
mov
cmpsl
inc
loope
push
cmp
ror
shlb
adc
je
mov
ret
pop
cmp
push
cli
mov
xor
lahf
jae
repz
iret
dec
mov
push
mov
sbb
jecxz
mov
fs
dec
fsubl
arpl
adc
push
out
stos
scas
repz
out
fs
jo
sbb
fnsetpm(287
shll
popf
in
xchg
out
mov
mov
jae
mov
int3
or
les
add
dec
add
push
jb
xchg
add
fcoms
push
mov
pushf
or
loop
mov
nop
ljmp
adc
jbe
scas
fisubrs
push
sbb
aas
pop
jp
cld
push
mov
es
sahf
movsb
imul
pop
dec
or
int3
mull
movsb
inc
xchg
stos
rcr
test
movsl
jl
stos
pop
sub
pop
in
lretw
pop
into
cltd
stos
sub
sbb
xchg
pop
push
rcrb
cmp
imul
call
data16
xor
cmc
push
jns
fldenv
insl
push
arpl
add
sub
inc
rclb
adc
inc
pop
rorl
pop
shll
fcmovb
pop
mov
scas
nop
inc
into
inc
adc
fists
insl
shl
jne
pop
jge
xchg
fcmovu
dec
add
or
xchg
sbb
scas
sahf
jecxz
daa
cmp
gs
test
pusha
jae
lods
loopne
jle
sbb
leave
push
push
xchg
stc
cmc
xchg
push
inc
fcomp
jge
adc
sbb
xchg
aaa
push
cmp
jle
cmpsl
jecxz
mov
push
mov
mov
lcall
gs
lret
call
or
sbb
imul
jne
enter
aas
ds
sbb
cmp
adc
aam
sbb
xchg
divl
pusha
push
dec
adc
aad
jne
xchg
pop
xchg
insl
fs
rolb
cs
mov
xor
mov
out
arpl
mov
mov
loopne
in
xchg
mov
mov
mov
sbb
mov
fdivp
adc
and
adc
mov
test
adc
repnz
mov
lds
lcall
fsts
out
ljmp
std
fcompl
jbe
cwtl
ja
mov
inc
pop
or
adc
push
sub
sub
jmp
fidivs
mov
ljmp
lods
stos
jne
shll
mov
fimull
mov
mov
mov
jo
mov
sbb
in
adc
scas
loop
nop
lods
cmp
xlat
push
outsb
imul
imul
fwait
inc
sbb
adc
mov
lods
pop
pop
or
mov
or
pop
pushf
ja
dec
imul
in
push
cwtl
xor
lret
mov
push
add
loop
jg
inc
lock
loop
out
xchg
jne
cmc
push
dec
fucomip
push
fsubs
adc
push
int
pop
jno
aas
or
sub
lods
je
addr16
sbb
insb
dec
stos
jo
jbe
sysexit
fnsave
push
loope
fsubp
dec
adc
pop
inc
fcoml
pop
xchg
cmp
push
xchg
push
lds
insb
xor
mov
mov
jge
mov
jns
jne
pushf
arpl
scas
cmc
loop
mov
out
sub
pop
jp
mov
rcr
cmp
mov
inc
mov
arpl
leave
cltd
and
out
mov
mov
es
xlat
ljmp
fistpll
push
xchg
cwtl
in
rcrb
into
movsl
xor
jbe
ret
iret
dec
outsl
pop
or
xchg
xlat
mov
push
ljmp
dec
insl
addr16
fisubs
das
das
pop
mov
std
movsl
cmpsl
mov
cmpsl
int3
xchg
ficomps
test
jno
inc
scas
lret
int3
lahf
ja
fwait
jge
stc
mov
leave
xchg
jbe
insb
or
cmp
dec
int
adc
xchg
sbb
cwtd
pop
cmp
push
fs
idiv
inc
xor
sahf
int
sub
sahf
testl
cmp
dec
aas
jp
pop
out
inc
xor
sub
cwtl
mov
mov
pop
inc
pop
js
sub
or
inc
cmp
mov
movsb
inc
push
dec
stc
stos
fisttpl
fistl
cmp
mov
lock
mov
push
xor
in
inc
pop
jmp
and
scas
cmp
sarl
mov
cmc
pop
js
lock
xchg
vmread
xchg
mov
push
xor
mov
dec
aas
ja
cmp
xor
scas
push
jl
imul
adc
in
pop
xchg
dec
mov
loope
add
mov
push
test
sub
xor
dec
filds
push
cli
repz
cmpl
shr
pushf
push
mov
repnz
pop
addl
cwtl
xchg
jo
inc
or
std
shlb
mov
ja
add
push
mov
mov
imul
jns
mov
dec
jno
dec
and
clc
mov
push
repz
sbb
mov
push
out
jno
push
adc
pop
pop
iret
cmp
fwait
or
cwtl
in
pop
out
adc
and
push
cs
add
pop
js
rcrl
jne
adc
dec
lods
jns
inc
cwtl
lods
cs
xchg
ret
repnz
jle
dec
lock
in
lret
mov
push
ja
jle
cmp
lea
xchg
aaa
and
sbb
or
mov
rorb
cmc
or
shrb
inc
pushf
fisttpl
stc
jnp
daa
sub
sbb
stc
pop
ljmp
mov
inc
mov
ja
mov
rorb
pushf
in
inc
or
in
sbb
push
ret
and
shl
lock
mov
jecxz
mov
and
hlt
mov
push
lcall
pop
rcl
sbb
test
pop
mov
lahf
mov
jo
inc
pop
sti
cmp
mov
mov
dec
mov
jno
lahf
or
adc
test
loopne
rolb
dec
push
add
dec
in
pop
xchg
sub
les
sti
dec
push
stos
popa
lea
test
aaa
pop
mov
sub
popf
mov
mov
scas
mov
sub
hlt
and
ret
push
mov
and
mov
pop
lahf
push
add
push
mov
cmp
or
mov
pusha
add
lods
sub
jl
jno
jnp
clc
jno
mov
fisubs
pop
mov
stos
jo
push
mov
push
cwtl
push
inc
mov
mov
sub
mov
das
and
pop
pop
dec
cmp
dec
jp
or
enter
xor
scas
mov
notl
fcmovu
aad
in
jmp
dec
jno
mov
push
push
xchg
pop
gs
xchg
sbb
dec
dec
imul
push
test
lahf
jg
ret
fsubp
sbb
es
pop
sarb
and
mov
lahf
jns
shl
cmp
push
fisubl
inc
sbb
cwtl
xlat
jg
mov
or
or
inc
mov
or
mov
inc
ret
aaa
push
jmp
icebp
shlb
push
push
dec
les
pop
push
lret
ss
sahf
popf
mov
xlat
fxch
sbb
mov
dec
sub
or
decb
pop
stos
mov
xchg
jecxz
push
fwait
addr16
fucomip
in
mov
rcrb
mov
je
push
bound
jo
jae
aad
fdivrl
lds
nop
leave
or
ficoms
cmpsl
outsl
leave
cli
jl
pusha
insl
cmpsb
test
loope
enter
mov
out
mov
ljmp
les
xchg
mov
out
pusha
jmp
mov
call
jns
mov
repz
mov
pushf
add
clc
lret
lods
mov
sub
pop
sub
cmpl
repz
cmpsb
mov
mov
shl
ret
imull
jno
movsl
icebp
pushf
fwait
jo
xchg
fmull
sub
lahf
loopne
lahf
fimull
lahf
cs
test
xchg
cmc
stos
dec
ja
or
push
scas
push
sbb
gs
lods
dec
pop
xchg
xchg
ljmp
js
insl
ljmp
adc
pop
xchg
pop
stc
inc
inc
test
lret
idiv
mov
fisubrs
push
push
dec
mov
loope
adc
jo
fcomps
neg
mov
xor
xor
mov
imul
and
mov
inc
add
lods
divb
jb
push
scas
xor
dec
xchg
out
mov
dec
add
out
mov
and
iret
mov
insl
repz
pop
rcr
ds
mov
fsub
ja
loopne
mov
mov
or
xchg
shlb
scas
hlt
lcall
in
lods
test
pushf
cmp
jnp
cmp
add
out
hlt
inc
add
cli
or
lds
pushf
sub
and
sub
sarl
rcl
mov
insl
orl
sbb
push
adc
lods
xchg
xor
ret
sbb
test
mov
cmp
outsb
test
cltd
jp
andb
fadds
push
dec
out
out
test
sbb
testl
sarl
sub
push
push
call
mov
imul
pop
ja
pop
jg
rcrb
sub
daa
jge
out
hlt
mov
add
popf
cmp
bound
jecxz
jae
test
sti
adc
mov
or
mov
mov
and
fidivrl
push
clc
mov
add
loop
mov
push
jnp
repnz
cs
subb
jl
pop
in
sarb
jge
lret
lock
sub
cwtl
dec
cmp
repnz
jl
popa
insb
push
movb
xchg
sbb
loope
and
rcll
jae
pop
ja
xor
xchg
jecxz
add
imul
loopne
cmp
jle
orb
xchg
nop
in
aas
add
and
aad
and
popa
cmp
pop
mov
outsl
lahf
das
add
lahf
inc
sub
xchg
push
jmp
and
sbb
push
mov
mov
aaa
adc
jmp
pop
cld
jp
or
xor
cmp
pop
ss
addb
mov
rcll
mov
ja
pop
xor
mov
dec
call
shl
pop
jae
insb
mov
cltd
cwtl
or
cmp
dec
push
mov
lahf
mov
jecxz
sub
mov
or
lcall
call
jmp
je
insb
push
or
ret
js
mov
and
cmp
mov
xchg
jb,pt
or
xchg
shlb
add
fincstp
dec
mov
stos
int3
xor
sbb
inc
sub
push
add
popl
loop
xchg
lock
sub
gs
adc
or
repnz
sbb
pushf
jns
ja
outsl
and
and
and
test
js
faddl
xchg
out
bound
push
add
daa
pusha
les
pop
sti
shlb
dec
mov
mov
pop
mov
imul
jns
call
dec
mov
or
ja
loop
aas
pushf
out
js
in
loop
mov
les
mov
dec
mov
negl
insb
lahf
std
popf
cmc
jae
ja
xor
faddl
sub
cmp
bound
jo
xchg
pop
cmp
dec
mov
data16
mov
fstpt
rcr
lds
dec
mov
mov
dec
lahf
dec
inc
dec
gs
popf
xchg
jge
je
mov
xor
pop
jecxz
addr16
jmp
in
add
add
imul
sahf
or
cmc
int
movsl
data16
arpl
jl
push
cli
out
cmc
sbb
mov
fidivrs
fisubrs
aad
push
rcrl
xor
aad
mov
fldcw
in
lret
add
iret
dec
cmp
aas
fists
mov
mov
xchg
ds
add
cmp
xor
rcll
push
or
aam
adc
out
push
js
cmpsb
lcall
add
mov
cmp
aam
pusha
adc
mov
aad
outsb
lea
clc
pop
repz
or
mul
in
or
mov
aas
loop
fstpt
inc
mov
dec
sub
mov
lods
aad
loop
aad
popf
daa
hlt
sbb
jno
movsl
inc
stos
jnp
jg
jmp
dec
mov
mov
movsb
fdivp
scas
jmp
mov
dec
cmp
cmpl
pop
lcall
imul
fisubrs
dec
cmp
xchg
out
je
sub
stos
push
xor
jne
xchg
or
add
add
js
pop
dec
and
stc
mov
mov
and
insb
push
out
int3
sbb
xchg
dec
sarl
xchg
cmp
test
dec
lret
lret
lret
jb
addl
cmpsl
fistpl
fst
and
sub
xchg
icebp
push
adc
insb
or
mov
sub
arpl
lock
push
das
inc
jge
mov
bswap
push
fwait
dec
je
nop
mov
pop
cmpsb
and
jecxz
jb
mov
cmp
mov
clc
dec
push
rcll
data16
imul
and
insb
scas
push
incb
xor
mov
sub
inc
push
shrl
popf
inc
mov
in
lcall
pop
nop
das
outsb
sub
cmpsl
lret
outsb
cmp
orl
cmp
outsl
pusha
pop
inc
mov
ja
cmpsb
popa
push
mov
cli
notb
push
jne
ja
cmp
inc
dec
stos
xchg
gs
or
jnp
and
dec
test
push
pop
or
inc
mov
pop
lret
std
shlb
ljmp
aas
xor
clc
push
mov
dec
mov
lock
out
jbe
cmp
lcall
sbb
js
dec
ljmp
cld
nop
dec
pop
data16
cmp
mov
test
push
hlt
pop
sbb
ret
add
fdivl
daa
push
out
cmp
stos
in
mov
in
mov
fwait
into
or
xor
push
lods
je
out
fisttpl
aad
movsb
adc
xor
std
in
push
mov
ja
or
jbe
rcrl
add
jnp
or
pop
aaa
out
mov
mov
cs
mov
fists
xchg
inc
sub
adc
dec
and
loop
jecxz
clc
lret
inc
outsl
test
mov
fmuls
outsb
pop
mov
test
or
push
and
and
adc
jg
inc
xchg
push
cmpsl
shll
mov
lock
shlb
cltd
aad
scas
mov
scas
aaa
orl
push
das
fucomip
add
mov
or
je
dec
stc
dec
outsl
cmp
adc
sbb
push
jns
mov
xor
and
xor
inc
pop
pop
xor
in
mov
push
mov
add
sub
incb
arpl
cmp
out
in
fdivrp
inc
idiv
adc
lds
cmp
add
fstps
jp
push
dec
outsl
dec
add
cmp
lds
dec
add
sub
daa
xchg
inc
jns
adc
xchg
std
sub
push
neg
loopne
jmp
imul
rcrl
cltd
adc
add
cs
mov
xor
jp
enter
gs
cmp
push
in
test
push
ret
mov
sbb
mov
clc
cmp
loop
ljmp
int3
or
push
imul
sbb
shll
mov
sub
ret
lods
leave
ret
stos
scas
insb
add
scas
lods
sbb
jno
dec
dec
dec
or
dec
xchg
pushf
into
xchg
add
leave
sti
push
aas
in
jno
inc
stc
es
dec
cli
setnp
add
sub
enter
sbb
xchg
pusha
pop
dec
xchg
inc
lcallw
aam
add
les
arpl
fnstcw
sub
sbb
xchg
stos
lods
sub
jp
jae
push
stos
stos
fwait
pop
mull
es
les
sbb
push
xchg
push
mov
into
sbb
in
imull
jno
adc
push
xchg
xor
test
adc
cs
xchg
leave
dec
ret
pop
dec
jp
push
and
push
mov
dec
aad
out
xor
jb
icebp
mov
jnp
inc
mov
mov
pop
popa
call
jae
jge
insb
loopne
push
pop
cmp
mov
faddl
cwtl
pop
mov
inc
jecxz
pop
push
xchg
xchg
mov
imul
or
and
xor
jb
lret
or
adc
leave
sbb
sbb
dec
call
mov
pop
cmc
xchg
add
cmpsl
cmp
and
pop
fisubrs
adc
mov
adc
test
icebp
outsl
fidivl
xchg
in
rorb
cli
sub
lods
pop
xchg
vmwrite
bnd
inc
mull
mov
shl
fcmovne
mov
cwtl
shll
leave
movsl
loope
es
mov
outsb
in
sub
in
mov
mov
out
push
and
mov
jae
mov
push
pop
push
push
ret
lcall
mov
xchg
adc
adc
daa
std
and
sub
xchg
mov
jb
pop
mov
push
push
out
ja
xchg
stos
in
xlat
push
stos
call
ret
lahf
xorb
icebp
fwait
mov
ficomps
out
dec
mov
bound
jae
ss
mov
outsb
sbb
add
add
imul
es
mov
sbb
sub
or
test
mov
push
xor
mov
cltd
jo,pn
mov
dec
or
jp
push
xor
loopne
clc
enter
in
cmp
mov
addr16
fcmovnbe
xchg
out
lret
stc
sub
es
cmp
jns
sahf
dec
enter
movsb
stc
in
lds
test
mov
cmp
mov
sbb
jae
inc
mov
rorl
and
mov
jmp
jne
test
xchg
lret
lcall
pop
inc
mov
mov
sub
sbb
jne
shrl
mov
shll
mov
jne
jg
gs
lock
or
out
and
push
lods
fnsave
xor
push
dec
xchg
fwait
pop
adc
adc
pop
lahf
das
pop
in
scas
clc
lret
jg
cmp
loope
sbb
jle
xor
lods
scas
out
pop
inc
mov
pushf
ljmp
bound
cmpsb
inc
mov
loop
mov
shl
dec
pop
fadds
cmc
xor
jl
sub
push
xor
pop
adc
xor
insb
cmc
test
push
or
in
lds
push
loopne
sti
int
leave
dec
jo
sbb
adc
pushl
or
jbe
sar
mov
test
push
negb
sub
in
add
cmp
xor
lahf
xchg
mov
xor
push
mov
ror
mov
lods
out
pop
lock
cmc
pop
nop
adc
add
imul
mov
dec
fsubs
xor
jecxz
cmp
ds
in
pop
adc
jle
cmp
pop
imul
xchg
into
scas
push
je
mov
xchg
loopne
fsubl
cmpsl
test
test
jae
mov
or
shr
in
mov
stc
push
loope
add
push
movl
jecxz
inc
jnp
stos
iret
aaa
inc
loope
pop
inc
test
out
xchg
mov
mov
add
test
cmp
inc
fwait
jne
jno
aam
outsl
ds
bound
jecxz
xlat
test
cmp
decb
and
inc
rcrb
dec
lods
pop
mov
imul
adc
pop
inc
lahf
aad
nop
nop
insb
adc
je
addl
pop
lods
stos
add
fsubp
cmp
and
pop
scas
lock
ret
insl
outsl
inc
movsb
sub
jmp
mov
jnp
fdivs
mov
popa
mov
jp
pop
jl
cmp
cld
js
xchg
dec
xchg
jl
add
js
sub
lret
leave
in
push
adc
icebp
call
ljmp
xor
pop
std
push
sbb
jmp
sti
add
mov
jnp
inc
aaa
fs
ret
pop
aaa
insl
add
mov
lahf
jae
in
nop
and
sbbl
inc
xchg
xor
pusha
mov
imul
aas
call
pusha
or
imul
adc
and
mov
dec
out
je
adc
add
push
bound
xchg
xor
sbb
mov
sub
lcall
add
in
gs
mov
sbb
push
xchg
add
xor
fnstsw
nop
mov
mov
outsb
imul
jecxz
xor
int3
push
stc
popa
sbb
icebp
jl
ret
cmpb
call
sahf
ljmp
xchg
adc
pop
arpl
jne
inc
cmp
pop
and
icebp
call
push
mov
cvttps2pi
clc
fisttpl
imul
fnstcw
cmp
xlat
leave
faddl
xor
add
fsts
pushf
iret
sahf
lea
xchg
mov
cld
sti
or
arpl
mov
lcall
cmpsl
and
jmp
cwtl
xor
cli
push
loopne
scas
inc
addr16
adc
cmpsb
xor
repz
stc
cwtl
cli
arpl
leave
jbe
cmp
add
call
dec
xlat
or
or
call
cmp
testl
and
cmp
dec
fdivrl
stos
dec
jp
out
pop
outsb
xchg
push
push
sub
push
cmc
and
loop
xor
xor
fnsave
aas
daa
cli
or
mov
push
sbb
jle
add
pop
jae
lret
or
push
insl
adc
push
push
lock
mov
cmpsl
sub
jae
sbb
push
scas
cltd
call
sub
repz
inc
rorl
xchg
pop
push
jb
dec
jmp
inc
inc
jbe
mov
lret
mov
aas
cld
fs
mov
or
aam
mov
imul
or
stos
add
mov
xchg
jbe
push
mov
cli
fdivrs
mov
pop
inc
cmpsl
cwtl
pop
inc
xchg
ret
ss
cmp
into
mov
stc
int3
inc
dec
fwait
fwait
in
and
fimuls
cli
jbe
or
insb
ret
or
int3
insb
out
fnstenv
cltd
insl
ffreep
lret
outsl
subb
rorb
addr16
fadds
mov
cld
pop
lods
dec
in
xor
pop
lods
lahf
clc
in
gs
fs
ss
fwait
and
add
loopne
out
sti
std
lret
lret
jno
movsl
cmp
enter
ret
sbb
outsl
jae
mov
mov
and
pop
sbb
cmp
das
cs
fsubrs
sar
mov
ffreep
hlt
xchg
fsubr
xor
arpl
popf
or
mov
push
daa
inc
cmpsb
and
movsl
ret
cli
jg
icebp
push
or
aam
and
jp
inc
insl
enter
bound
test
dec
pop
jne
les
jg
clc
sahf
js
popf
ja
inc
mov
int
cmc
out
push
xor
jo
pusha
shlb
ds
or
push
outsb
jbe
test
adc
stos
into
cmp
arpl
jecxz
add
std
std
fsubrp
sbb
shr
xchg
aad
pop
int
inc
mov
and
mov
cmp
out
faddl
mov
fdivr
sbb
cmp
pop
sbb
lds
add
push
push
fwait
testl
dec
push
mov
and
inc
fsubs
sbb
or
add
push
dec
sub
loopne
adc
cmpb
cmp
add
cmp
jnp
cmp
push
movsb
insl
mov
cmc
rcll
lea
jle
int3
mov
aam
sub
out
fs
inc
cmp
cmpsb
outsb
sbb
ret
pop
mov
sbb
adc
pop
adc
mov
gs
insb
sbb
push
popf
ror
mov
mov
sbb
mov
and
pop
pop
inc
xchg
gs
inc
or
dec
xchg
sbb
je
inc
adc
ret
ss
mov
and
stos
mov
pop
test
lock
dec
pop
hlt
into
pusha
mov
subl
cmp
mov
sbb
insl
in
lods
mov
loope
add
xchg
adc
insl
or
fnsave
imul
push
mov
pop
pushf
pop
mov
ret
jns
lret
mov
fcoms
fcmovu
aam
dec
gs
nop
cmp
mov
jg
mov
sub
push
pop
push
pop
sub
sub
dec
das
sbbb
stos
stos
movsb
je
enter
popf
cmp
inc
mov
dec
imul
mov
mov
flds
jl
scas
add
outsl
push
xchg
dec
xchg
addb
and
insb
cwtl
jge
xlat
ret
mov
jbe
add
sbb
stos
sub
lahf
mov
mov
ljmp
dec
add
cwtl
clc
push
cmc
jle
lds
inc
mov
pop
shlb
adcl
ljmp
cltd
js
sub
jns
add
ret
pop
jb
mov
mov
push
adc
push
rcrb
xchg
sarl
popa
mov
stos
fs
mov
cld
cmp
daa
pop
push
stos
adc
out
cltd
hlt
and
mov
leave
popf
mov
jnp
enter
ret
imul
mov
call
mov
mov
pop
adc
into
insb
je
movsb
mov
jno
xor
lods
ret
mov
adc
xor
ss
imul
add
lods
testl
icebp
sbb
push
push
inc
or
pop
sub
add
test
int3
in
icebp
mov
push
sub
mov
or
jbe
add
lods
cmpsb
stos
dec
bound
mov
pop
out
add
outsl
incb
fnstcw
jmp
mov
mov
cld
aam
push
divl
aaa
shrb
ret
push
daa
xor
jle
insl
cli
mov
shrl
or
pop
std
hlt
into
in
dec
dec
jge
push
fwait
stos
push
dec
test
pusha
add
lods
daa
jo
inc
mov
sbb
cmp
mov
cmc
xchg
lock
xchg
xchg
test
sbb
pop
arpl
push
fistpll
das
pop
rcl
loopne
cltd
adc
js
jne
push
outsb
inc
cld
mov
pop
hlt
repz
js
mov
fdivrs
loopne
pop
fdivr
ret
jo
adc
les
outsb
xlat
cwtl
xor
ds
sbb
mov
inc
std
mov
in
out
cmp
repz
mov
push
stos
lods
cli
pop
loop
stos
jb
dec
and
mov
xchg
jo
jp
pop
dec
push
jg,pn
mov
jb
mov
cmp
push
pop
mov
clc
mov
outsb
lds
push
lcall
dec
popa
dec
jl
dec
pop
push
divl
lahf
loopne
sbb
cltd
mov
fstpt
jmp
fsts
std
daa
mov
xor
int
mov
ret
call
add
pop
dec
sbb
mov
xchg
pop
inc
sahf
add
xor
aad
dec
pop
sbb
mov
lock
and
es
push
sar
sub
stos
sbb
xchg
test
jae
or
xor
xlat
xchg
test
add
repnz
cmpsb
mov
cmpsb
pop
daa
fs
cltd
test
mov
pop
cld
sbb
test
rcrl
jmp
add
xchg
xor
pop
and
repnz
arpl
ljmp
iret
shll
push
lods
push
mov
fbld
mov
ljmp
out
outsb
stos
subb
or
sub
sub
mov
xchg
xchg
dec
push
fisttpll
push
repnz
jo
add
and
lea
dec
shrb
mov
or
dec
pop
sbb
ret
inc
shl
movsl
into
jne
pop
cmp
aas
adc
scas
sahf
ret
inc
jb
pushf
dec
fisubrs
test
mov
cmpsl
jmp
pusha
sbb
cmpsb
scas
mov
cmpsb
loope
dec
xor
out
sbb
leave
test
mov
subps
sbb
cmpb
popf
push
jg
cmpsl
dec
stc
sub
push
add
das
push
jno
or
add
lahf
mov
outsb
inc
cmpsb
pushf
xor
in
or
add
fucomp
mov
sub
sbb
xchg
lea
fisttpll
sbb
jno
adc
fidivrl
aad
sahf
loope
dec
cmc
mov
mov
or
lods
jg
ja
bound
dec
clc
and
scas
jno
mov
inc
test
lret
push
cmp
jecxz
adc
xor
jno
sbb
pop
xorl
push
jge
imul
jmp
ljmp
cmc
xchg
push
repnz
xchg
out
ljmp
je
mov
inc
jmp
xor
lock
mov
mov
and
sbb
fldl
test
push
mov
rsm
push
mov
sbb
imul
shll
push
movsb
jnp
pop
mov
rcll
push
andb
and
mov
movsb
mov
mov
add
movsl
inc
sub
cmp
neg
mov
push
jle
push
cli
out
aam
xor
pop
iret
mov
mov
loopne
push
ja
jle
divb
insl
shll
xchg
orl
pop
or
xor
inc
ret
cmp
xor
dec
jnp
mov
sub
sbb
inc
dec
faddl
loop
xchg
bswap
xchg
flds
or
or
cwtl
mov
cmp
push
pop
cmp
fs
mov
jecxz
lds
xchg
shll
and
lret
jle
inc
mov
in
inc
cmp
data16
push
in
add
mov
decl
popf
cmc
clc
lret
scas
or
mov
ret
ret
or
aam
stc
and
sub
sub
arpl
fisubrs
loop
pop
jle
add
mov
aad
cmp
addr16
xchg
xchg
xchg
cmpsb
adc
jl
sbb
stc
pop
adc
xchg
adc
jg
loopne
dec
or
xchg
insl
subb
sarb
mov
push
movsb
jnp
in
mov
imul
arpl
lahf
sbb
jno
dec
pop
jns
or
lea
out
lcall
dec
fimuls
pop
in
jmp
jne
xchg
and
cmp
dec
push
cwtl
adc
mov
pushf
push
fstpt
xor
cmpsl
xchg
inc
xchg
xor
mov
ljmp
mov
sub
dec
sub
xor
aaa
cltd
xor
sbb
or
sbb
mull
out
push
gs
cmpsb
insb
cmp
xor
mov
cwtl
push
icebp
sbbb
into
mov
insb
jecxz
fisubs
xchg
sub
fsubrl
adc
cmp
cmp
adc
xchg
sub
add
xchg
dec
jae
jno
movsl
subb
or
jne
les
cltd
xchg
jge
outsl
cli
jne
pop
jb
cmpsl
ja
mov
cmc
pop
adc
dec
xchg
mov
icebp
lods
fistps
fxch
inc
cltd
jmp
btr
push
cmp
lods
mov
mov
add
sub
inc
mov
mov
ret
pop
loop
shll
lret
sbb
pop
adc
mov
jg
fdivrp
mov
adc
scas
stos
xor
cmpsl
pop
xor
sbbb
ret
jne
sbb
xchg
sbb
push
hlt
arpl
repz
mov
mov
dec
sahf
fsubs
xlat
cld
pop
or
lcall
adc
sbb
push
stos
lods
stos
scas
into
adcl
arpl
dec
filds
dec
jg
inc
mov
ficompl
dec
pop
repz
loop
andb
dec
nop
arpl
bound
mov
jg
stos
pop
sbb
ss
addr16
pop
aad
lret
lods
in
or
dec
cmpsb
ja
mov
sbb
dec
in
add
lods
lret
dec
in
stc
in
testl
out
insl
leave
push
shr
std
int3
or
ret
shlb
scas
xchg
dec
push
xchg
add
imul
or
add
adc
mov
pop
mov
xor
or
sbbb
inc
push
lods
fisubs
sti
lahf
je
rcr
mov
sti
xor
repnz
call
jbe
daa
enter
mov
mov
out
jge
sub
jo
xchg
sahf
ds
xor
xor
cmp
xor
adc
fcmove
fnstsw
dec
jl
sbb
adc
gs
into
ret
push
in
dec
subb
out
add
adc
push
popa
ret
push
aad
into
mov
bswap
imul
repz
mov
xchg
fbld
cmpsb
pop
sub
push
and
cmp
sub
nop
sub
mov
pusha
das
xchg
daa
les
push
xchg
xchg
push
sbb
or
lret
mov
sub
mov
jae
fcoms
lret
in
push
xchg
stos
in
push
jmp
or
fwait
out
sbb
xor
in
jge
push
cmpsl
outsl
push
mov
xchg
sub
add
or
aas
imul
pop
fcomps
js
sbb
cmp
pop
repnz
mov
adc
cwtl
lret
sub
pushf
xchg
mov
pop
cmc
test
or
std
dec
out
sub
aas
icebp
xor
dec
pop
inc
pop
cmp
xor
ficomps
xor
stc
jb
jle
je
mov
sub
dec
push
loope
cli
test
cmp
loopne
xor
pop
sub
in
cli
mov
dec
shlb
pop
jp
lahf
sub
or
ret
and
addr16
ljmp
inc
jb
dec
push
aam
mov
mov
imul
jne
jmp
icebp
mov
mov
mov
rolb
jge
add
bound
loop
int3
sbb
mov
jg
test
inc
les
pop
subb
jnp
stos
push
dec
or
cwtl
or
shlb
int
add
in
sub
lods
xchg
iret
push
lds
popf
lea
pop
mov
push
jb
mov
add
push
xor
xchg
popa
mov
push
jmp
test
and
insb
inc
xchg
sub
loope
jle
cli
stc
lds
adc
mov
add
mov
pop
stos
fcompl
xchg
and
mov
push
test
jo
pop
pop
xchg
fwait
xchg
or
mov
daa
lds
fbld
push
js
mov
mov
jnp
mov
mov
cld
stos
sbb
cmp
lods
jo
sti
push
sbb
cmp
and
and
lods
add
popf
jno
dec
mov
lock
cld
lds
adc
fs
aad
push
pop
scas
cmp
xchg
scas
in
nop
push
xchg
mov
cvtps2pd
loopne
or
ds
movsl
push
xor
sub
arpl
lahf
push
loopne
push
int
jecxz
cmpsb
mov
push
std
cmc
rolb
xchg
les
add
mov
flds
and
sub
and
xor
aam
mov
jo
icebp
test
and
jmp
and
mov
dec
rorl
jae
ja
pop
loop
xchg
call
add
push
sbb
sbb
in
dec
dec
frstor
xchg
inc
xchg
cmp
mov
push
xchg
cli
psubsb
xchg
push
mov
jg
leave
rcll
rorl
cmpsl
shrb
mov
inc
popa
loope
je
ja
rolb
stos
jmp
into
jge
or
loopne
mov
jle
dec
clc
movsl
test
cmc
ljmp
sti
ret
stc
test
sub
dec
add
mov
call
jp
test
fnsave
cmp
addr16
add
stc
in
pop
imul
je
rcrl
stc
pop
add
jmp
cmp
sub
arpl
popa
mov
fisubrl
and
dec
fndisi(8087
xchg
lret
xchg
mov
sub
in
cmp
nop
push
dec
add
callw
and
je
jmp
jno
add
inc
test
cmp
jne
adc
clc
js
ja
fnstsw
es
xor
ss
arpl
rcl
mov
cltd
pop
mov
cmc
ficoml
rolb
push
push
lock
adc
cld
arpl
jg
cwtl
pop
mov
nop
adc
sarl
arpl
std
pop
pop
cmpsl
sbbl
imul
lock
mov
xchg
mov
call
adc
cli
adc
sahf
xor
cmp
jns
pop
pop
mov
mov
repz
gs
dec
notl
jmp
cmp
ret
or
inc
mov
cmc
test
pop
bound
xchg
lret
dec
addr16
push
lods
addl
sbb
and
arpl
mov
mov
mov
mov
pop
ljmp
mov
lahf
or
mov
pop
lret
add
lods
cmpsb
mov
mov
cmp
test
mov
dec
mov
jmp
push
xchg
shrb
outsb
aaa
loop
dec
call
movd
push
xor
cmp
outsw
and
outsl
mov
adc
aaa
scas
add
sub
push
in
js
push
or
rorl
add
or
outsl
aaa
push
adc
xchg
mov
lret
cmc
int
jno
mov
adc
out
jg
stos
inc
mov
divl
popl
sti
es
cwtl
or
repnz
rorb
lcall
add
jge
sbb
ss
inc
fcmove
jo
xor
and
xchg
imul
push
lret
ficompl
jp
ficoms
pop
jge
inc
lea
cmpsl
lret
mov
mov
xor
xchg
xor
outsl
xor
or
adc
mov
scas
mov
fidivs
in
fdivr
sub
push
inc
pop
hlt
dec
mov
imull
xchg
push
push
outsb
repnz
frstor
rolb
push
pop
and
add
ret
daa
decb
xchg
cmpsl
inc
movsl
lods
pop
into
pusha
fisttpl
sbb
aad
loop
gs
int3
sar
sti
adc
ds
xor
add
push
out
pop
and
test
pop
add
adc
dec
insb
mov
jb
pop
stos
lahf
aas
data16
ljmp
fstl
mov
outsl
test
repz
je
loopne
repz
out
lock
sbb
mov
add
bound
scas
mov
je
mov
repnz
icebp
sahf
jb
je
push
push
in
out
lock
les
dec
cmpsl
fnstenv
sbb
ret
inc
mov
lret
xor
not
leave
rorl
fwait
mul
fdivrs
lret
call
mov
jns
addr16
js
mov
xor
sub
fnstsw
push
mov
push
xchg
not
cmp
lods
cmp
cmpsb
mov
scas
fs
mov
xchg
sub
int
fistpll
or
fcomp
int3
rclb
mov
in
aam
lods
push
adc
js
es
leave
jns,pn
jl
jbe
and
xor
lcall
adc
ret
popf
inc
scas
adc
pop
movsb
arpl
xchg
call
les
jo
xchg
add
mov
xchg
inc
xchg
cmp
push
ffreep
lret
mov
repz
push
pop
imul
cld
sub
adc
leave
test
inc
add
mov
out
cwtl
hlt
out
data16
dec
dec
xchg
xor
dec
out
dec
and
mov
cmp
sub
inc
adc
cli
repnz
negl
fisubl
pop
push
jl
cmp
jg
das
sbbb
mov
jbe
cmp
xor
sub
vmcall
sbb
sbb
or
mov
dec
push
mov
mov
jb
lds
adc
jae
clc
push
xchg
sbb
fisubs
inc
ljmp
sub
lcall
pop
js
add
nop
xchg
and
in
inc
ret
ja
mov
jbe
fcmove
xor
mulb
cmp
mov
mov
xorb
push
add
sub
and
popl
jp
cmp
add
pop
xchg
fisttpll
pop
push
shr
jp
daa
in
loop
cmc
add
imul
sbb
push
xor
loopne
out
mov
ret
scas
mov
add
paddsb
fstpt
or
adcl
xchg
mov
aaa
cmp
mov
loop
rcll
fprem
es
outsl
adc
push
hlt
or
xchg
jmp
cmp
addr16
enter
fisttpll
iret
lds
jge
and
dec
jo
es
pop
lea
les
mov
js
in
repz
sub
insl
and
jo
testb
push
jnp
mov
cltd
inc
pop
sti
aaa
testl
lret
repnz
push
pcmpeqd
push
jo
push
push
mov
inc
pop
insl
subl
and
fcoms
jg
jb
das
jae
adc
mov
add
and
mov
dec
test
sbbb
jb
lret
cmp
mov
dec
and
ljmp
icebp
int3
inc
sbb
lret
pop
jo
shll
push
imul
inc
xchg
out
pop
mov
xor
jecxz
push
loop
or
pop
js
xor
daa
jb
jns
out
pop
je
cmp
dec
lds
into
sbb
leave
jb
aaa
xchg
mov
cli
sbb
or
bound
flds
inc
mov
mov
sub
xchg
inc
add
pop
jecxz
mov
fisubrl
fs
outsb
lret
lods
sbb
lcall
jae
repnz
fsubs
sbb
aam
or
push
jl
mov
pushf
xchg
mov
stc
sub
and
in
call
pop
int3
js
dec
xor
test
xchg
xchg
int3
rol
movsl
int
jne
addr16
xchg
add
pop
leave
rorl
out
outsb
jecxz
cwtl
stos
ret
push
pop
mov
sti
loop
cmc
aas
ja
xlat
dec
inc
mov
xchg
fsubrs
js
xchg
add
into
xchg
and
adc
repnz
add
lods
hlt
call
mov
movzbl
in
mov
mov
fdivrl
push
sarb
xlat
sub
or
fimuls
test
in
sub
and
push
scas
popf
push
lret
push
shll
sti
mov
lods
hlt
push
cmpsl
fbld
in
imul
mov
cmp
or
inc
cmpsb
xor
cmpsl
xor
adc
dec
adc
cmp
mov
cld
ret
in
rcrl
xchg
xchg
test
and
cmpsb
sti
dec
dec
test
cld
fidivrl
ret
in
or
jo
jo
sub
lea
leave
push
inc
xchg
mov
lret
test
aad
inc
sahf
add
aaa
jge
addl
sub
push
cmp
mov
cwtl
mov
outsl
outsl
mov
test
mov
je
es
jne
xchg
and
int
cli
pop
movsb
lea
ja
mov
lret
lret
stos
je
sbb
push
xchg
ja
pusha
sub
cmp
push
std
adc
add
ljmp
mov
mov
add
jl
arpl
pop
outsb
sub
mov
sub
cwtl
add
stos
mov
addl
xor
mov
pop
aad
cwtl
imul
adc
jae
scas
dec
repz
cmpl
cld
and
jp
adc
pop
iret
shlb
add
mov
or
ss
repz
jecxz
mov
adc
or
sub
sbb
sbbb
shll
jns
das
popa
int3
cmp
scas
push
int
and
and
and
adcb
jb
data16
repnz
add
jb
push
lret
sahf
and
flds
std
cmp
insl
into
cmpsb
mov
xchg
or
jb
jle
inc
xlat
aam
cmpsl
movsl
cmp
test
dec
cmp
lcall
ret
popa
inc
aad
add
arpl
pop
pop
dec
pop
daa
orl
mov
or
in
clc
xchg
lods
dec
cli
adcl
jae
cli
sbb
hlt
aad
inc
add
pop
jle
ja,pt
jmp
xchg
rorl
mov
sarb
mov
push
inc
idivl
sub
mov
std
lahf
shlb
cmp
int
pop
pop
arpl
add
or
jnp
inc
xchg
push
int3
mov
lcall
mov
sub
das
stos
push
mov
and
push
arpl
repnz
pop
stos
fcompl
testb
xor
jp
aas
xlat
test
dec
in
cmpsl
cmpsb
jbe
inc
bound
roll
dec
mov
nop
gs
adc
inc
or
loope
mov
push
adc
xor
ret
lret
sub
aaa
xor
pushf
mov
cs
call
ret
sbb
clc
ret
cmp
xchg
cmp
pop
fnsave
shl
sbb
cmp
adc
or
pop
push
adc
addr16
pop
xchg
jo
dec
push
dec
in
into
push
dec
call
mov
and
sub
sbb
xor
pop
cmp
or
push
and
add
shlb
out
testb
fcmovbe
das
into
and
mov
sub
dec
mov
ljmp
cld
imul
ja
xchg
cmp
xor
pop
xor
repz
shlb
out
cmc
scas
cmp
iret
out
iret
ss
test
test
lods
pushf
xchg
inc
jae
push
scas
insb
add
mov
pop
adc
in
jge
pop
mov
or
sahf
inc
or
fbstp
aam
lret
push
add
in
mov
into
push
cltd
xor
inc
fs
mov
mov
push
jg
inc
dec
mov
pushf
lds
stc
lret
dec
cltd
je
test
sbb
fcoml
xchg
cmp
or
jnp
jge
lods
adc
lods
push
pop
or
cwtl
lcall
into
push
jnp
push
negl
lret
stos
and
or
pop
sub
dec
fidivrs
sub
roll
adc
sbb
fwait
mov
xchg
push
in
loopne
fdiv
imul
sahf
cld
fxch
call
out
push
mov
lock
jbe
fwait
pushw
popa
add
rorl
jecxz
mov
add
enter
mov
mov
jg
xor
mov
push
mov
test
sbb
adc
das
push
shrb
sbb
in
cmp
fadds
mov
scas
into
sbbl
in
sar
sbb
in
jbe
jns
adc
std
pushf
jae
mov
fstpt
je
enter
int
push
jae
fs
rcl
decb
pop
js
mov
sbbl
or
inc
out
dec
mov
mov
jb
negb
fisubrl
add
imul
pop
xor
in
adc
cmp
scas
imul
pop
bnd
push
int3
pop
sub
inc
pop
stos
mov
xlat
xchg
pop
testb
mov
std
test
dec
pop
xor
pop
test
out
outsb
and
out
pushf
arpl
sub
mov
jo
and
mov
push
sbb
std
push
insl
sar
cmp
outsl
jmp
inc
sub
call
mov
mov
or
xor
sbb
jne
cmovne
sahf
mov
xchg
iret
mov
and
loope
pushf
xchg
inc
add
sahf
sub
xchg
mov
dec
fdivrl
push
lahf
ljmp
mov
repz
shlb
mov
xchg
cmp
cmp
lods
orb
xorl
cltd
aaa
cmc
xor
jns
lds
mov
mov
sub
popa
push
xchg
pop
push
xchg
add
loopne
mov
aas
not
mov
das
push
popa
jmp
fsubr
push
mov
insb
pop
push
lret
cmc
sub
rclb
sub
xor
mov
push
fwait
pop
movsb
sbb
int
mov
stos
out
insl
orl
pop
stc
fs
das
sub
pop
imul
jo
in
es
xchg
test
jb
lcall
jo
mov
out
jns
xor
sahf
inc
lahf
in
aaa
pop
xchg
dec
and
dec
and
sub
inc
pop
push
imul
in
push
popf
jg
push
inc
jl
lods
in
cld
popa
inc
inc
jb
out
jle
mov
pop
or
popa
jns
push
pushf
ss
jo
sbb
f2xm1
pop
mov
jl
ss
ds
cltd
mov
out
xorl
dec
dec
gs
mov
loop
aam
idiv
xor
jb
pusha
stc
sti
dec
lahf
arpl
rcll
push
xor
js
fidivrs
shr
cmc
mov
or
pop
mov
adc
iret
adc
scas
dec
call
push
out
int3
sbb
ret
scas
dec
sti
gs
xchg
sbb
sub
andl
sub
aam
stos
mov
pop
lahf
das
aam
orl
push
push
rcrb
pop
fildl
call
inc
sub
cld
cmpsl
rclb
inc
ja
pop
gs
out
push
jne
inc
sbb
adc
push
movsl
ficoms
shl
cld
cld
inc
sbb
fstpl
dec
lcall
stos
xor
outsb
scas
popl
or
mov
push
in
call
scas
add
or
jge
mov
dec
leave
popf
loop
mov
mov
mov
ds
cmp
xor
pop
stc
and
out
dec
mov
jmp
xchg
bsr
imul
loop
pushf
xchg
ja
test
adc
outsl
xor
mov
jbe
jno
insb
ret
dec
push
mov
jecxz
pop
test
std
or
ffreep
sub
fadds
sbb
scas
pop
mov
lcall
iret
mov
test
dec
out
cmp
lret
xor
shr
push
cltd
rcrl
mov
sbb
xlat
clc
in
scas
push
aad
jl
and
cs
sbb
enter
dec
imul
aad
cmp
or
loopne
ljmp
xor
imul
or
cld
push
cld
fwait
pop
push
or
in
and
pop
cmp
push
fistps
pop
js
push
mov
dec
rcr
push
sbb
scas
xchg
das
and
cli
in
out
mov
cmc
xor
xchg
dec
out
stos
ret
lds
enter
xor
pushf
push
call
movsl
mov
pop
dec
xchg
or
cld
or
fidivrs
int3
shrb
addr16
push
pop
mov
arpl
push
ljmp
cltd
outsl
lahf
cmpl
arpl
pusha
out
movsb
pop
mov
jae
pop
or
dec
and
mov
pop
mov
lea
ret
xchg
mov
add
pop
xchg
mov
lods
popl
out
sub
into
mov
jge
inc
xlat
test
aas
mov
fdivrs
loop
in
jmp
jb
push
cwtl
pop
mov
sub
lcall
xlat
addl
mov
test
dec
imull
dec
sti
jge
movlps
add
cmp
test
ja
into
loopne
jne
outsb
je
push
adc
and
roll
or
mov
rcl
ret
push
icebp
jle
mov
repnz
adc
adc
xor
fs
cmpsl
bound
call
fisttpl
push
dec
add
scas
push
repnz
repnz
cmpsb
jnp
dec
jp
cmc
pop
and
loop
dec
std
add
sbb
cmovns
adc
pop
mov
movsb
gs
jecxz
fsubr
aas
outsl
pop
adc
or
fisttps
popa
add
ja
push
jle
pop
je
repz
jecxz
movsl
pop
ret
lock
popf
arpl
test
push
jl
fiadds
cmpsb
push
mov
jo
sub
cmp
sub
dec
adc
in
stos
mov
pop
pop
js
in
mov
fwait
aam
mov
js
sahf
int3
mov
fists
into
sub
add
incl
pusha
or
into
xor
sub
mov
gs
pop
cmpl
ss
inc
cmp
gs
daa
sub
stc
mov
lods
scas
inc
or
popf
adc
pop
jl
scas
mov
repz
jnp
divb
in
mov
jo
dec
pop
mov
and
insl
rorl
ds
pusha
ljmp
xor
fs
aas
addb
aam
sbb
xchg
and
dec
add
mov
dec
xchg
sbb
sbb
xchg
inc
shll
lcall
add
stos
insl
pop
or
dec
mov
test
pop
xor
fdivrp
jg
mov
push
mov
pop
lock
push
inc
popa
repz
stc
inc
sub
mov
test
jnp
or
jo
and
xor
pop
ret
lock
sahf
jbe
lahf
bound
lret
xchg
outsb
cmp
fildll
in
cwtl
shll
push
sub
or
push
push
mov
clc
cli
test
xor
sbb
ds
add
sahf
sbb
mov
inc
aam
jno
lds
push
inc
out
mov
mov
mov
stos
push
into
mov
xchg
ss
aad
push
adc
pop
sarl
jl
shll
in
sub
cli
jb
addb
mov
mov
repnz
cs
mov
sub
lea
loop
adc
sbb
jns
mov
jb
xchg
inc
scas
xchg
mov
add
decb
cmp
pusha
pop
out
scas
pop
xor
mov
mov
rcll
mov
mov
adc
jge
jecxz
adc
lcall
sub
inc
je
out
sbb
jb
push
test
loopne
pop
movsb
sti
mov
sub
jnp
stos
mov
cmpsb
pop
mov
movsl
adc
cvtpi2ps
and
sbb
adc
cmp
mov
out
cmpsl
xchg
stos
mov
test
or
in
scas
iret
mov
rolb
pop
stc
push
adc
sahf
push
loopne
xchg
cmp
std
jg
xor
shl
hlt
call
mov
or
stos
rcl
mov
out
jb
dec
and
int3
fidivrl
andl
mov
cmp
fidivrl
xor
ficompl
dec
cltd
subl
mov
and
ja
outsb
stc
mov
jns
push
test
mov
arpl
mov
push
je
lret
jp
aaa
inc
mov
mov
jnp
or
in
adc
add
popa
movsl
mov
jmp
popa
test
ret
or
cmpsl
clc
clc
inc
xchg
lds
pmaddwd
inc
inc
lcall
flds
xchg
in
jmp
enter
pop
std
xor
or
aaa
add
insb
dec
dec
fs
or
lahf
rol
jns
rcrl
les
rcll
sub
mov
push
stc
cmp
fsub
inc
xchg
mov
mov
jo
daa
add
fnstenv
iret
or
adc
fstpl
cltd
icebp
mov
outsl
mov
sub
push
cmc
outsl
stc
xlat
pop
mov
push
xchg
and
in
popf
push
mov
xchg
fdivr
popa
in
jnp
push
out
sub
cmp
jge
in
imul
cmp
dec
mov
adc
pop
scas
mov
push
scas
aaa
mov
mov
inc
or
mov
mov
je
dec
mov
mov
or
jl
xchg
mov
lret
ror
push
pop
ret
cmp
call
cs
scas
int
fcoml
dec
mov
or
shrl
cltd
push
paddd
daa
and
lock
sbb
subl
hlt
shl
fistl
sub
lods
mov
repnz
mov
dec
insb
push
pop
lods
push
adc
and
cld
shrl
adc
das
in
aad
lret
aad
dec
and
xchg
push
dec
pop
xor
imul
aam
cmpsb
sbb
jo
test
and
add
jne
cld
sbbb
mov
shlb
mov
push
jbe
lcall
push
inc
add
fbld
push
rcl
inc
mov
movsb
test
adcb
call
filds
clc
test
add
jo
movsl
lods
jmp
sbb
pop
inc
imulb
xchg
dec
cwtl
out
cmpsb
and
pushf
mov
add
adcb
jb
addb
cmp
xchg
sub
imul
sub
xor
add
mov
gs
push
jp
shll
jmp
es
rclb
lea
lds
xor
out
in
push
jg
and
push
mov
mov
repnz
in
push
mov
dec
repz
int
adc
cwtl
outsb
xor
imul
cmp
fnstcw
cld
in
and
loop
leave
btr
cmpl
fwait
inc
push
aam
inc
fsts
popa
adc
pop
mov
adc
lret
dec
lock
mov
cmc
mov
cmp
sbb
dec
jo
cmpsb
cmpsb
loope
imul
int
jmp
inc
out
jmp
arpl
imul
xor
test
jns
lret
mov
jle
adc
cmp
push
nop
jg
scas
lret
test
mov
js
cwtl
dec
in
pusha
xor
mov
loopne
push
xlat
pop
xchg
sub
sbb
and
test
cmp
jnp
cmpsl
mov
lea
mov
sbb
int3
scas
push
push
adc
das
jle
adc
rorl
sarb
pop
and
std
mov
mov
mov
shl
or
pop
sbb
stos
rclb
sti
imul
pop
loop
icebp
cltd
ljmp
sbb
mov
pushf
out
bound
outsl
ljmp
or
cmc
cld
int
inc
jmp
cmpsl
jbe
lock
negb
fdivp
jb
into
fucomip
sub
sbb
push
push
pop
sub
out
mov
lret
mov
pop
aad
ds
cwtl
pop
dec
sub
into
hlt
nop
outsb
scas
sbb
cli
cmp
cmc
popf
dec
pop
stc
repz
fstps
adc
sub
jg
xor
leave
in
stos
out
mov
adc
mov
lods
pop
cltd
jecxz
xchg
push
sub
addl
inc
sub
pusha
jmp
fsubrl
call
xor
pop
insl
fldt
mov
fistl
out
outsl
sub
enter
sbb
xchg
icebp
out
pushf
in
mov
xor
mov
mov
je
add
out
hlt
sbb
mov
sbb
pop
es
mov
lods
and
mov
sub
mov
clc
pop
jmp
inc
sbb
pop
lret
mov
cltd
jbe
addb
mov
rcrb
test
movsl
negl
lods
cmc
push
cmpsl
jae
push
jg
addr16
mov
jecxz
inc
mov
lds
mov
jbe
out
inc
push
or
decl
push
hlt
adc
and
int
dec
jns
shll
jge
push
push
enter
xchg
inc
popa
loop
jp
in
jle
loopne
jne
movsl
xchg
sbb
push
dec
rcll
jge
add
mov
add
pop
mov
test
imul
insb
testl
ret
cmp
mov
iret
push
add
test
cwtl
jo
loope
mov
lret
test
xor
jo
or
push
stc
sbb
mov
shll
repz
or
ja
lock
inc
repz
and
xchg
pop
lods
sti
les
inc
lahf
xor
in
push
sub
pop
outsb
test
sbb
daa
pop
and
add
jnp
shl
mov
push
arpl
add
jne
popf
in
int3
jle
push
inc
mov
jge
xchg
cmpsl
jno
into
dec
lods
cmp
lret
je
lahf
pop
movsb
fidivrs
pop
in
lea
bound
xor
es
xchg
inc
or
cmpl
jge
lahf
cmp
jmp
pop
mov
jmp
ljmp
or
mov
cli
jge
pop
fisttps
push
fldt
xchg
and
mov
inc
test
outsb
jp
inc
and
jg
adc
jo
pop
adc
push
imulb
sti
div
or
xor
mov
fildll
ficompl
pop
lret
pop
add
adc
addr16
mov
dec
and
push
and
push
hlt
cltd
hlt
test
test
mov
push
and
dec
mov
or
xchg
bnd
dec
mov
movsb
xchg
rcrl
repnz
pusha
pop
sub
jae
and
mov
call
mov
pop
dec
push
pushf
jp
jecxz
jl
movl
clc
xor
sbb
stos
pushf
std
lea
mov
outsb
call
scas
sub
lods
sahf
daa
out
sbb
mov
bound
insl
xor
loopne
xchg
mov
addb
stos
cmc
hlt
jg
push
into
int
add
inc
xchg
pop
hlt
jge
jo
push
and
test
xor
shrl
movsl
call
and
or
mov
mov
sub
inc
insb
cmp
lret
enter
imul
push
push
in
cmp
push
test
lods
int3
testb
hlt
push
ret
add
jmp
cmp
cld
inc
aas
jae
dec
inc
add
or
sbb
insl
mov
mov
data16
jecxz
lcall
mov
push
mov
movsl
mov
push
or
out
mov
jecxz
mov
jne
sbb
repnz
daa
insl
scas
add
pop
pop
jae
and
fidivrs
mov
mov
sbb
mov
insb
imul
jbe
minps
push
xor
jo
mov
in
shll
fwait
les
call
dec
cmp
jno
cmp
xor
mov
jnp
add
push
sbbb
daa
aad
mov
dec
jg
ja
test
adc
xlat
cmp
push
adc
fdivs
cli
mov
popa
arpl
lea
ret
inc
in
dec
loopne
dec
mov
xlat
jmp
movsl
push
sahf
pushf
or
mov
pop
jb
add
aam
mov
ss
fiaddl
insl
xor
pop
imul
out
pop
scas
sti
sarl
mov
cmp
addr16
jmp
fs
fldcw
jae
clc
and
mov
stc
mov
cmp
xor
and
jge
jno
outsl
les
repz
popf
sub
add
sbb
enter
rcll
pop
ljmp
pop
push
lods
xchg
add
fwait
loopne
ret
jbe
sub
gs
sbb
dec
inc
cmp
and
jge
pushf
sbb
mov
aad
xchg
pcmpgtd
fnstenv
int3
paddw
mov
loop
xchg
xchg
ds
dec
xchg
or
pop
int
sahf
push
push
inc
dec
or
dec
mov
lea
adc
mov
xor
imul
rorl
jae
lahf
pop
lds
jmp
popf
mov
pop
fs
xchg
sbb
mov
mov
fidivrl
push
and
and
dec
push
das
enter
push
jb
pushf
loopnew
xchg
repnz
ret
inc
mov
mov
jge
daa
mov
test
xchg
sub
sub
repnz
mov
lar
fidivs
cmpsb
int3
lock
lret
sub
fldcw
push
sbb
clc
rolb
pusha
sub
add
sub
subb
out
iret
cli
aam
faddl
sub
dec
pushf
adc
fnsave
loopne
aas
and
push
jne
std
cmp
dec
mov
push
xchg
jg
xor
lea
lods
sub
pop
stc
insb
mov
cmp
xchg
xchg
popf
shll
lock
pop
shr
pushf
sti
es
dec
lret
sahf
mov
jae
insb
out
nop
mull
push
xor
in
and
int
jecxz
mov
rcl
cmc
loopne
pop
ficoml
mov
hlt
ret
ljmp
popa
jp
xchg
sbb
pop
xchg
mov
gs
movsl
enter
js
cld
cmp
ja
mov
fimuls
xor
pop
xchg
in
adc
rclb
dec
cmp
mov
mov
out
dec
mov
out
movb
jl
sub
incb
dec
cmovnp
lahf
xor
bound
push
imul
inc
test
xor
adc
cmp
scas
sbb
jp
xchg
sbb
shll
dec
repz
jge
fistpll
lret
adc
xchg
push
xlat
iret
les
fptan
xor
dec
xchg
jecxz
push
fcmovnb
mov
out
movsb
call
jg
cs
cli
jecxz
sub
jo
popa
jae
aas
pop
xor
es
xchg
je
jp
sub
mov
mov
imul
mov
push
xor
cmp
pusha
mov
icebp
rclb
ja
and
imul
and
xchg
add
mov
iret
adc
and
movsl
sub
add
pusha
adc
inc
cmp
negl
cmpsl
data16
cltd
scas
nop
and
stc
jmp
adc
imul
movsl
pusha
sahf
adc
data16
std
push
bound
push
or
xchg
add
inc
mov
dec
repnz
or
dec
js
mov
pushf
lret
aam
imul
ljmp
in
or
sti
mov
xchg
xchg
lods
into
cmpsb
mov
aad
cmc
aas
cld
icebp
cmp
test
hlt
jne
xchg
cmp
sbb
cltd
fldcw
mov
push
popl
lret
jo
and
ffreep
dec
out
mov
stos
call
fcomp
mov
mov
cmp
pop
pop
jp
aam
mov
inc
pop
lods
add
aam
sbb
mov
and
sbb
mov
adc
pushf
dec
dec
call
push
sbb
cmp
add
pop
rolb
pushf
pop
movsl
push
adc
cmc
popa
movsb
enter
mov
cmp
mov
mov
es
dec
jns
fidivrl
pop
mov
cltd
sbb
xchg
ljmp
or
mov
and
arpl
repnz
mov
stos
inc
sbb
ret
sub
mov
mov
xchg
stos
int
cld
adc
testb
lahf
sub
pop
jmp
lcall
aad
mov
test
dec
and
imulb
lds
inc
lock
adc
cwtl
jle
push
shl
xor
cld
fcoml
push
mov
xchg
xor
push
jne
cld
movsl
insl
xor
xor
test
cmpsl
sub
lds
xchg
mov
inc
jnp
cmp
imul
inc
push
push
mov
imul
push
into
shr
xchg
push
into
xchg
in
pushf
and
fsubl
sub
movsl
mov
ffreep
int3
jle
jge
int
fcompl
rcrl
jle
add
dec
xchg
cli
inc
mov
in
mov
in
add
adc
and
cmp
je
imul
sbb
bound
pop
mov
adc
jbe
pop
in
in
inc
rcrb
cmp
and
jge
and
push
clc
cmp
ljmp
ds
js
add
or
cmc
cs
inc
je
fsubp
int3
daa
xchg
mov
int3
mov
out
inc
sahf
loopne
push
lock
popa
jo
dec
orb
xchg
adc
push
shlb
scas
mov
sbb
or
sub
push
fdivrs
outsl
call
movsl
testl
aas
mov
jbe
mov
mov
pop
call
js
push
andb
pop
jo
das
mov
es
movsb
mov
cmpsb
dec
sub
int
mov
cltd
enter
inc
mov
cmp
loopne
pop
loop
rorl
jmp
cmp
ret
mov
inc
ss
mov
loopne
imul
inc
movsl
push
inc
fsubs
scas
ja
pop
inc
or
xlat
repz
sub
sbb
or
mov
lret
idivl
jns
push
mov
iret
rcrb
adc
xor
xchg
jg
jo
ror
jne
sahf
mov
call
nop
mov
lret
mov
adc
cmp
notl
pop
aam
insl
stos
cmp
and
out
addr16
loop
inc
mov
fs
into
push
outsb
lret
jmp
push
lea
outsl
popf
add
shl
and
arpl
jbe
rcrb
in
xchg
addr16
repnz
outsl
popa
outsl
imul
stos
lods
loop
xor
hlt
adc
push
arpl
cmpsb
cmc
sub
mov
pusha
fcmovnb
call
stos
push
dec
mov
stos
out
iret
sub
fs
dec
mov
xchg
and
adc
cli
lock
mov
mov
adcl
sub
imul
stos
pop
daa
mov
fwait
inc
pop
imul
jbe
sbb
insb
lods
inc
push
inc
adc
test
dec
mov
push
sub
xor
add
sub
in
fmuls
cmpsl
das
mov
push
mov
push
lret
lret
add
hlt
cld
imul
inc
pushf
sub
inc
sbb
jns
sbb
fmull
ja
mov
adcl
inc
or
mov
or
pop
into
cwtl
or
ds
pop
lds
mov
pop
in
cmpsl
xlat
adc
xor
push
cmp
xchg
or
lahf
shll
lcall
inc
push
push
outsb
inc
scas
frstor
daa
sub
dec
fcoms
sbb
sbb
cmp
or
xchg
imul
imul
sub
jmp
imul
jae
jmp
xchg
jg
and
xchg
push
pushf
test
pop
jb
gs
jmp
adc
sbb
ss
dec
mov
insb
test
pop
stos
ss
mov
jnp
lods
clc
adc
xchg
add
add
cmpsl
outsl
clc
mov
push
into
mov
loop
rcrl
pop
cmpsb
int3
push
ja
adc
test
cmpsb
jbe
mov
fistl
mov
cmpsl
jmp
movsb
pop
sbb
lods
adcl
cmpb
pop
fiaddl
scas
sar
cmpsl
lea
in
pop
xchg
cs
adc
flds
jnp
iret
aad
dec
loopne,pt
aaa
arpl
and
bound
xchg
inc
insl
mov
mov
mov
fwait
dec
xor
mov
shl
mov
cmp
leave
shlb
out
ret
stc
in
push
or
jbe
mov
cmp
fs
jecxz
ljmp
pop
jmp
loope
aas
test
or
mov
pop
mov
aad
xchg
jne
xchg
cmp
xchg
iret
test
cld
sub
dec
data16
push
xchg
pusha
xchg
add
daa
stc
popf
xchg
fdivr
test
ljmp
data16
dec
mov
sti
sbb
sub
imul
adc
dec
in
loope
cmp
adc
lahf
or
imul
jae
out
inc
sub
cli
push
ss
ret
add
mov
xchg
adc
jp
mov
sahf
ja
push
mov
sbb
adc
jmp
mov
jmp
cli
sbb
pop
pop
cbtw
jne
lcall
jo
stc
inc
adc
mov
je
xlat
sbb
setge
dec
or
fistpl
push
mov
dec
cmpl
je
cmp
inc
mov
cmp
repz
fisubrl
movsl
mov
shrl
sub
mov
es
daa
rclb
or
push
dec
imul
cmp
loopne
inc
mov
in
jecxz
clc
jnp
sbb
pop
mov
xchg
mov
adc
clc
movsb
and
cltd
mov
mov
int3
jbe
mov
pop
rorl
cmpsb
stos
sub
xlat
mov
inc
sub
mov
push
sbb
xchg
aas
inc
sub
shll
in
cmpsb
sbb
xor
scas
jbe
out
mov
cmc
insl
mov
jns
fldt
insl
sub
push
nop
xchg
into
pop
movsl
stos
ljmp
fstps
bound
push
pop
int
pop
test
insb
pop
inc
in
push
add
and
scas
sub
sub
scas
mov
pop
sbb
dec
into
pop
inc
and
pop
dec
ret
and
xor
pop
jae
xor
out
add
add
scas
dec
pushf
cltd
pop
mov
pop
mov
push
xchg
sub
lods
lds
fyl2x
cmp
pusha
addr16
and
test
adc
sub
pusha
daa
repnz
ja
pushf
pop
ja
sub
jecxz
les
mov
rolb
divb
je
inc
jns
jp
das
pop
les
dec
lret
ss
aam
mov
pop
fimuls
insl
push
sahf
orb
xchg
push
mov
mov
movsl
pop
repz
adc
jns
push
sub
xor
fs
into
out
dec
stos
mov
gs
sub
jl
adc
mov
sub
xchg
mov
aad
in
cli
adc
dec
sub
mov
xor
sub
mov
cmp
cmp
stc
xor
nop
sub
mov
sub
les
sub
xlat
or
cmp
cld
push
pop
pop
incl
leave
ret
lcall
fs
cmp
sbb
test
stc
test
insl
sbb
push
or
mov
add
popa
add
ljmp
sahf
test
mov
dec
pop
aas
push
pop
and
pop
xor
fsubs
lods
mov
fdivl
cmp
mov
outsl
subl
inc
ljmp
test
repnz
add
movsl
js
jge
pop
and
xor
jae
push
pop
mov
sarb
mov
loop
in
xchg
lea
loopne
shl
iret
out
mov
mov
push
es
pushf
rcrl
nop
stc
cld
xchg
xchg
popa
sbb
push
mov
inc
add
sahf
inc
hlt
leave
mov
pop
inc
mov
cmp
cmove
shlb
or
jle
in
shrl
jae
loop
aam
and
ss
push
fwait
cmp
dec
mov
push
xchg
sbb
jns
jae
outsb
and
pop
xor
jno
jo
add
mov
ss
cs
mov
inc
icebp
imul
jnp
in
jmp
xor
fsubr
aad
adc
and
ret
pop
into
pop
pop
lock
imul
jmp
jmp
mov
in
aam
test
jo
cltd
mov
pop
jne
in
or
inc
sbbl
add
outsl
sbb
add
mov
stos
push
cmpl
push
pop
mov
and
loop
add
xchg
cmp
scas
lret
adc
mov
dec
or
jle
push
popa
dec
pop
mov
das
int3
sahf
xchg
pop
lock
in
fcomp
dec
mov
sub
call
dec
inc
xor
inc
pushf
jo
in
das
leave
add
sub
jb
and
cmpsb
xchg
fdivs
inc
inc
leave
ss
dec
dec
push
decl
and
jo
and
mov
or
test
rcl
push
aad
ret
pop
jp
scas
test
pop
dec
mov
fistps
and
repnz
fnsave
dec
cltd
mov
stos
jle
and
fdiv
mov
adc
iret
repz
out
push
stos
loopne
clc
fbld
sbb
nop
and
push
cwtl
add
das
inc
ficomps
xchg
sub
and
mov
mov
fdivrl
jbe
cmc
xchg
jle
pop
movsb
mov
mov
inc
push
sub
enter
jl
loopne
jno
pop
jl
add
push
mov
inc
fdivr
push
mov
imul
push
mov
lods
push
outsb
mov
mov
pop
or
mov
in
cltd
or
dec
lret
pop
fisubrs
ljmp
stc
mov
mov
rcrl
mov
out
mov
push
push
push
sub
int3
cmpsl
mov
fistpll
sbb
lahf
push
cmc
push
insl
xlat
jae
pop
mov
leave
mov
ret
mov
xchg
pop
ja
inc
incl
dec
stos
dec
xchg
outsb
daa
xorb
mov
testb
aad
mov
push
dec
mov
jge
mov
test
fists
movl
mov
mov
loopne
iret
dec
rcrl
aad
fdivr
xor
test
movsb
mov
adc
aaa
pop
jno
inc
dec
sub
dec
cld
inc
lods
push
add
jp
lods
pop
stos
fs
push
fdivrs
ret
mov
cli
jecxz
inc
mov
pushf
mov
mov
out
cmp
call
sbbl
xor
cld
les
inc
sub
lret
dec
loopne
insl
and
out
xor
loope
repnz
test
sti
pop
and
mov
cmc
cltd
cld
and
xchg
inc
sahf
push
xorb
aas
mov
stos
div
xor
jmp
push
inc
decl
fbstp
aad
cwtl
pop
addr16
les
lea
and
sub
sbb
mov
rcll
pop
mov
push
filds
push
dec
cltd
adc
arpl
iret
push
and
bound
aas
sahf
push
or
sti
inc
and
push
ret
pop
push
xor
adc
test
or
push
adc
call
das
rolb
inc
dec
jno
ljmp
inc
dec
xchg
sbb
push
jnp
push
push
xor
repnz
ficomps
jae
mov
lods
std
dec
test
xchg
pusha
mov
nop
and
cmpsl
xor
ds
movsl
stos
adc
sbb
and
imul
xchg
jb
jno
test
mov
mov
mov
pop
in
cmp
lock
add
xchg
lds
out
dec
cld
add
sub
dec
pop
pop
enter
pop
arpl
sub
jo
cmp
outsb
push
or
je
mov
popf
data16
and
in
dec
aas
sbb
xchg
xor
or
pop
mov
fsubrp
sbb
or
or
or
test
adc
lock
cmp
and
pusha
jge
repnz
xchg
mov
test
sti
xlat
out
push
je
inc
cli
es
jne
sbb
jg
adc
push
cmp
add
pop
mov
jle
jae
sahf
inc
push
imulb
sub
insl
scas
aam
in
push
outsb
xor
popa
push
scas
inc
ds
scas
test
jbe
push
inc
jb
inc
repz
cltd
pop
xchg
cltd
jp
dec
xchg
pop
mov
je
pop
push
cld
shrb
in
repz
cmp
out
out
je
ret
mov
gs
dec
add
xor
jo
sub
fstps
xlat
repnz
mov
insb
loopne
insl
aas
cmpl
sahf
mov
addr16
xor
add
int
mov
dec
jp
jo
loopne
aad
clc
pop
cmp
inc
mov
xchg
dec
negb
ret
add
out
clc
out
mov
xchg
out
lock
les
fwait
cmp
out
movsl
ret
js
test
popl
and
xchg
cmpsl
mov
and
mov
or
push
mov
in
es
adc
pop
add
in
lock
push
sti
xchg
movsl
fbstp
dec
mov
or
push
addl
mov
ljmp
sbb
add
ret
ja
stc
loop
mov
call
mov
mov
jbe
xor
fldt
sbb
push
sbb
leave
jns
lcall
loope,pt
adc
iret
push
cli
pushf
xlat
das
mov
mov
lds
mov
outsl
push
jp
and
call
xacquire
ffree
mov
push
es
inc
push
lea
mov
lahf
mov
push
mov
ret
push
sbbl
das
xor
pop
and
pop
clc
xor
and
das
leave
out
bound
and
lds
hlt
int3
es
mov
mov
dec
push
cmp
sub
cmp
dec
fmul
jmp
rclb
es
xchg
jnp
jae
loop
xor
add
scas
pop
xlat
dec
xchg
mov
vshufps
sub
cwtl
cs
mov
aad
daa
add
test
add
mov
ljmp
pop
jo
sbb
jecxz
ljmp
mov
dec
stos
xchg
add
subb
dec
cwtl
js
pop
int
mov
push
and
stc
mov
rclb
in
jmp
or
push
mov
in
sahf
sbb
js
or
aaa
and
xchg
and
and
jg
ja
outsl
mov
int3
mov
inc
mov
push
sub
mov
dec
lahf
add
leave
add
movsb
pusha
jb
add
mov
cmp
xchg
jo
aad
xchg
sahf
insl
cmp
repz
push
and
insb
add
add
stc
xchg
sbb
mov
adcb
mov
jne
sub
lcall
movsl
inc
movsb
std
out
loop
mov
fistpl
dec
fstpt
faddp
mov
shlb
cmp
cmp
incb
loop
loope
mov
sub
or
xchg
sub
add
js
out
push
cmc
inc
and
fldt
add
or
outsl
mov
and
ffree
mov
sub
int3
xchg
inc
or
inc
adc
jecxz
push
jmp
and
ret
ret
push
jle
and
xor
add
les
sahf
inc
test
idivl
push
xor
inc
xchg
ss
pop
sbb
mov
ja
adc
loop
mulb
mov
cmp
and
xor
rorb
sub
mov
adc
xor
scas
dec
incl
pop
loope
add
jnp
out
aam
jne
mov
inc
pop
or
jle
test
mov
pop
and
sub
test
pop
pop
movsb
rorl
out
push
bsr
fwait
pop
dec
js
lock
gs
sbb
cmp
daa
jae
imul
icebp
repz
mov
movsl
add
cmpsl
call
mov
jle
aaa
popa
inc
and
sub
imul
popf
jnp
mov
push
scas
jl
stos
mov
test
xor
mov
xor
add
movsl
dec
xchg
loopne
popa
ljmp
aas
pusha
std
imul
or
stc
lock
bnd
shlb
cmp
cmpsl
mov
fidivl
js
addb
out
and
jle
lea
or
mov
and
leave
shlb
scas
mov
flds
mov
ret
xchg
mov
or
or
jg
mov
daa
inc
test
stc
sub
shll
jp
lret
inc
push
mov
in
sub
or
adc
cld
inc
ljmp
cmc
aas
mov
cwtl
out
sahf
orb
cltd
test
push
call
ret
arpl
cmpsb
loop
pop
push
sbb
leave
xchg
flds
fldpi
sbb
iret
cmc
mov
lea
stc
xor
pop
or
xlat
fstl
mov
lahf
cmpsb
clc
lds
xor
fisttpll
js
push
add
mov
xchg
cmp
jge
pop
movsl
dec
inc
clc
sub
mov
aad
mov
xor
push
jp
push
adc
stc
jp
pop
push
jbe
mov
xor
sub
jns
movsl
mov
sbb
xchg
or
xor
xchg
mov
data16
mov
push
sbb
in
jp
movsl
xchg
fcoml
repz
adc
in
es
stos
mov
pop
stos
stc
icebp
jl
idivl
out
js
sbb
inc
in
fisttpl
ror
or
mov
xor
cmp
lds
movsb
gs
ljmp
loopne
mov
bound
int
into
sbb
clc
jne
adc
sub
lock
dec
loopne
das
inc
push
dec
add
cmpsl
mov
xchg
fldt
and
jmp
sti
cli
sbbb
sub
mov
mov
test
sub
and
fs
jno
inc
mov
neg
xchg
jmp
sub
lods
or
dec
lea
mov
dec
mov
mov
daa
int
dec
in
aaa
iret
mov
xor
pop
in
aad
mov
fbstp
pop
aas
sub
in
inc
mov
imul
lds
int
into
les
in
lret
push
push
adc
and
adc
push
scas
cmpb
ja
mov
adc
jp
xlat
sub
insb
inc
push
adc
nop
sub
aam
push
mov
ds
insb
and
push
test
pusha
fstcw
jns
call
pop
push
pop
push
dec
icebp
push
out
std
aad
add
shrl
sbb
dec
hlt
sti
xor
rclb
xchg
ja
push
cmp
mov
mov
sub
popa
push
adc
test
lods
jle
in
stos
stc
mov
outsb
call
scas
test
xlat
in
loope
inc
insl
mov
jg
int
xchg
outsl
dec
data16
sub
jae
nop
dec
push
lret
or
fxch
pushf
out
in
pop
dec
fs
add
ret
filds
and
push
pop
cli
mov
or
arpl
sarb
mov
add
stos
jnp
mov
je
jbe
push
sub
loopne
jae
jecxz
lcall
ss
push
sbb
pushf
jecxz
data16
ja
stos
dec
xor
xchg
fcompl
ret
sub
cmp
jge
pop
jle
jmp
movsl
lret
outsb
lret
jnp
mov
mov
and
je
int
push
lods
mov
std
loop
fimull
fwait
jg
sbbb
dec
out
aaa
add
jg
pop
cmp
lock
push
push
mov
dec
cmp
insl
jb
pop
cmp
pop
fldcw
clc
push
xchg
push
pop
pop
push
loope
in
push
sub
sbb
mov
testb
mov
sbb
rolb
inc
dec
lods
in
call
jge
lret
orb
sub
mov
adc
cli
addr16
xor
xor
mov
sahf
hlt
dec
in
inc
movsl
or
cmp
test
mov
push
jle
dec
cltd
and
cmp
dec
imul
test
iret
lds
int3
mov
adc
dec
in
pushf
xor
lret
aaa
insl
pop
into
xchg
repnz
cmpsb
mov
pop
cmp
sahf
cld
cli
inc
adc
in
ds
shlb
pusha
ss
daa
sbb
pop
adc
adc
mov
push
or
loopne
repz
pop
cmp
das
or
fmuls
scas
and
aam
cs
mov
xchg
jns
popa
inc
mov
sub
xchg
inc
mov
adc
aam
idivl
fidivs
enter
movsb
or
roll
mov
and
in
int
sbb
xor
xchg
rorl
jae
sarl
nop
lods
mov
mov
push
stos
in
leave
sbb
lock
icebp
jle
popf
lahf
jg
out
cli
jp
mov
pop
imul
mov
sbb
mov
xlat
jmp
push
push
cli
out
sub
mov
int
jb
add
push
push
pop
xor
sbbl
or
sbb
test
das
cli
hlt
mov
lods
cmpsl
fs
enter
add
fldcw
dec
sahf
and
scas
aaa
subb
imul
mov
xor
scas
push
or
mov
sub
mov
pop
lea
das
and
stc
jbe
adc
data16
adcl
rorb
addr16
inc
add
fldcw
imull
fcoml
js
xchg
lds
jae,pn
jge
rol
add
jp
in
cltd
push
mov
orb
and
xchg
roll
push
cmp
sbb
int3
mov
cmp
or
sub
rclb
sub
adc
imul
scas
xlat
push
fs
addl
bound
mov
mov
push
push
hlt
mov
std
sahf
icebp
and
inc
cmpsb
push
fmull
cltd
stos
outsl
sub
sbb
add
mov
js
imul
jne
or
xlat
mov
sub
jl
lock
dec
mull
jnp
dec
popf
loop
push
dec
lods
pop
pop
push
cmp
ja
add
addr16
mov
insl
out
or
mov
pop
and
lcall
imul
mov
addl
ret
leave
dec
aad
in
mov
or
int3
rolb
aad
xchg
push
jmp
lods
fs
outsl
shrb
test
sub
add
xor
sbb
dec
aam
and
data16
or
push
cld
dec
sbb
push
ljmp
push
es
pop
jns
pop
mov
mov
mov
ss
add
pop
mov
inc
cmp
jmp
lahf
cmp
push
jle
dec
rep
test
imul
mov
mov
and
xor
ds
lea
jecxz
lea
lods
dec
mov
enter
mov
dec
push
fs
or
cmp
pop
test
adc
push
shll
fs
add
inc
dec
pop
test
ljmp
cmp
lret
cwtl
jecxz
stos
or
rcrw
jmp
lea
daa
loopne
shlb
loope
enter
ja
testl
std
cmp
popa
jl
push
cmpsb
out
cld
mov
jge
mov
inc
or
add
add
inc
add
dec
out
pop
xor
dec
stc
mov
dec
insb
jbe
mov
push
loopne,pn
pop
cmp
dec
fdivp
loope
inc
push
sbb
mov
push
out
loop
enter
cld
or
mov
fldl2e
jge
or
scas
adc
lret
pop
push
cmp
push
mov
test
xchg
or
outsb
aad
adcb
push
cmc
sub
leave
ret
xchg
jmp
loop
pop
lahf
push
adc
lods
mov
mov
imul
insb
or
cmp
fisubl
test
xlat
or
pop
jnp
mov
sbb
fwait
mov
pop
inc
cmp
push
pop
hlt
lcall
or
fcomps
mov
std
movsl
cwtl
mov
rorl
mov
xchg
jge
imul
add
mov
and
enter
mov
cmp
jl
jb
mov
and
add
dec
push
mov
ss
es
mov
mov
pop
sbb
mov
subl
repz
movsb
cs
xorb
stc
repnz
int
add
je
and
cmpsl
mov
popf
add
test
cltd
data16
add
mov
roll
or
dec
and
jno
ret
inc
movsl
or
lahf
loope
aaa
outsl
out
outsl
mov
cs
arpl
lcall
or
ret
stc
xor
ds
xor
loopne
out
aaa
mov
mov
insb
das
sahf
and
push
lock
orb
and
dec
ja
adc
xchg
js
daa
jmp
mov
inc
sbb
repz
jmp
add
cld
sbb
push
xchg
out
jno
cmpsl
js
pushl
fwait
sbb
cmp
outsl
xor
pop
icebp
or
daa
mov
jmp
and
pop
mov
adc
outsl
jb
outsl
inc
dec
mov
dec
int3
lcall
inc
mov
cmpsb
dec
adc
sbb
add
ret
pop
es
jae
sub
xchg
add
repnz
mov
fucomip
and
scas
push
push
int
mov
push
movsb
stos
jno
ret
test
mov
jge
sti
lods
cwtl
mov
sahf
xchg
xchg
push
push
cmp
fidivrl
lret
sub
pop
leave
sti
stos
data16
test
inc
mov
mov
pop
push
mov
cmp
pop
dec
adc
cmp
jecxz
lcall
sub
dec
mov
sbb
nop
out
sbb
cmp
imul
stos
enter
aaa
mov
addr16
mov
outsl
fwait
lret
inc
sub
jmp
testl
pop
push
inc
sti
mov
stos
int3
pushf
imul
call
jecxz
movsl
jecxz
ja
mov
jnp
fistl
lcall
sub
in
stos
mov
add
pop
jbe
mov
jecxz
xchg
loopne
cmp
xor
pop
adc
stos
push
mov
fdivl
lods
sti
sub
inc
out
popf
aad
jecxz
cltd
xchg
cwtl
xchg
imul
in
leave
mov
test
mov
filds
test
mov
mov
or
std
push
scas
adc
xchg
cmp
out
test
lret
pop
repnz
cwtl
dec
pop
pop
lahf
cmp
pop
pusha
mov
loop
mov
aas
mov
fimuls
imul
ljmp
mov
jmp
pop
pushf
outsl
loope
mov
push
or
or
inc
das
jg
push
ret
fiadds
push
adc
and
pop
aad
push
mov
jno
out
clc
into
imul
mov
in
out
push
rorl
mov
out
add
adc
cmp
sbb
inc
and
xor
sub
sub
jmp
inc
inc
rolb
xor
inc
ret
in
sti
xor
gs
xchg
jl
sub
or
xor
dec
adc
ret
mov
test
jnp
cld
push
in
stos
pushf
data16
xor
cmp
mov
push
xor
into
adc
xchg
fcomip
push
jb
inc
pop
mov
sahf
fbstp
jnp
arpl
pushf
jl
cmp
cmp
dec
jmp
adc
icebp
xor
loop
test
mov
push
rcll
orl
cmp
lock
jge
jnp
shlb
es
mov
adc
push
call
sbbb
inc
dec
jo
dec
add
in
popa
cmp
insb
stc
cmp
dec
hlt
loopne
inc
leave
xor
sub
or
sub
jge
push
cmpsb
aaa
mov
mov
lock
shll
push
xchg
mov
ljmp
jl
fmuls
and
sbb
push
stos
cmp
ret
dec
loop
js
or
iret
daa
xor
mov
dec
ljmp
addb
pop
pop
in
mov
or
and
sub
cmc
in
insb
xor
sahf
insl
cmp
popf
mov
test
or
ftst
mov
sbb
mov
adc
imul
or
pop
pop
js
test
sub
adc
into
loope
fstl
or
jmp
sbb
cmp
andl
inc
jns
dec
mov
xchg
sbb
adc
cmp
or
nop
ljmp
pop
mov
or
roll
xchg
js
loope
sbb
fmull
push
mov
inc
sbb
xor
movd
sub
xor
je
subb
xor
rep
cmpsl
or
dec
outsl
das
lock
push
fbstp
mov
mov
jbe
mov
adc
enter
ret
add
sti
pop
or
mov
inc
das
imul
aas
lret
out
jnp
das
or
mov
jae
mov
cmp
outsl
mov
inc
and
les
sub
aas
enter
mov
stos
pop
sti
mov
add
mov
lods
outsl
xchg
dec
mov
xchg
ret
xchg
push
lea
or
popf
test
aad
inc
mulb
or
adc
lahf
mov
push
aam
xchg
and
jmp
fiadds
cmpsb
push
dec
insb
adc
out
stc
pop
test
sub
xor
hlt
aaa
ljmp
and
jno
jb
xchg
sbb
out
push
out
xchg
mov
xchg
xacquire
iret
mov
push
or
popa
push
mov
push
cmp
jmp
fistpl
add
dec
xchg
ret
lcall
in
sub
out
jmp
test
pop
jno
adc
mov
pop
add
mov
jle
pop
ljmp
jg
gs
inc
retw
cmp
pop
rcl
popf
cmp
insl
mov
adcb
mov
mov
mov
jnp
jg
dec
addl
imul
xor
mov
inc
pop
push
pusha
pop
aad
pusha
mov
push
mov
cmpsl
cmp
pop
ja
cltd
jmp
dec
je
jae
hlt
pop
stc
aaa
arpl
pop
int3
cmpsb
in
int3
dec
dec
sbb
aas
nop
cs
sbb
cmpl
xor
pop
jb
dec
out
jbe
xchg
dec
add
je
cmp
ja
push
test
jo
sbb
es
jbe
cmp
add
lea
inc
sbb
inc
sub
xor
leave
jne
insb
dec
fwait
xchg
inc
xchg
imul
repnz
jbe
out
std
je
add
push
mov
fldt
scas
aaa
fmuls
shl
jnp
xor
mov
lahf
inc
or
cltd
or
call
inc
xchg
aaa
xchg
std
pop
shll
mov
push
outsl
mov
xlat
xlat
data16
js
sti
mov
insl
inc
dec
adcb
xchg
bswap
shlb
dec
cmp
ret
push
jns
les
fildll
xor
add
fldt
mov
jne
rcl
out
outsb
jno
adc
xor
cmp
add
or
pop
mov
outsb
gs
cld
std
js
inc
or
cld
test
jb
lcall
adc
xor
jle
inc
dec
int3
pushf
cmp
sti
test
sub
jae
add
lret
xchg
push
aam
xchg
aaa
push
xor
sub
cmpsl
push
xchg
adc
addr16
xlat
add
jne
adc
loop
ret
stos
addr16
ss
ret
inc
lds
add
or
pop
js
mov
sar
jle
bound
add
ds
lahf
and
add
fildl
jg
pop
jo
mov
fs
flds
rol
dec
pop
popa
pop
push
jnp
mov
dec
cmp
adc
push
sti
mov
inc
loop
mov
push
mov
andb
imul
push
ficoml
adc
sub
cmp
iret
addr16
or
mov
mov
jnp
aad
mov
fiaddl
data16
jo
xchg
lcall
cmp
pop
daa
ficoms
in
xchg
sbb
dec
jge
loope
in
and
iret
or
dec
clc
cmpsl
or
rcrl
xor
mov
sbb
push
cmp
jg
cmp
icebp
lret
cmp
inc
mov
aad
cmp
mov
imul
fmul
sub
sbb
ficoml
push
movsb
aad
xchg
movsl
push
or
cli
sub
rorl
mov
or
ret
xchg
and
sub
ljmp
mov
mov
mov
loope
push
nop
das
daa
andb
or
mov
sub
out
lret
hlt
mov
dec
adc
test
movsl
jbe
xor
sahf
fs
gs
lea
int
mov
or
xchg
push
cld
loope
arpl
adc
xchg
int3
pop
sbb
mov
push
ret
addr16
pop
out
sti
jg
jp
sub
shlb
js
mov
pop
jle
std
inc
cld
jg
in
pop
stc
mov
out
xchg
jo
fstps
repnz
jno
sbb
mov
fisubrl
and
xor
cltd
data16
xor
push
xor
and
add
mov
stos
add
repnz
jge
gs
push
lods
xchg
and
xchg
pop
sub
test
rclb
add
push
aad
or
cli
inc
int
xor
push
ja
jns
mov
out
std
pusha
lret
sbb
pop
sbb
imul
shlb
adc
inc
movl
jno
pmulhw
lret
xchg
popf
gs
out
mov
and
adc
dec
adc
clc
test
aaa
push
test
sbb
test
lret
push
mov
cmp
hlt
mov
jbe
or
add
xchg
popf
insb
roll
rorl
dec
stos
jmp
es
ret
cmpsl
out
and
arpl
mull
or
pop
push
lret
ljmp
sub
fimull
lcall
xchg
add
mov
imul
pop
mov
cwtl
xchg
outsb
les
loop
fistps
std
pop
outsb
shr
loopne
cltd
cmp
and
and
pop
sbb
pop
jnp
iret
stos
pop
popa
hlt
aas
push
mov
mov
cmp
add
sarl
sbb
testb
adc
lret
popf
push
adc
mov
shlb
sub
xlat
iret
push
shlb
pop
movsb
ss
sbb
sbb
pop
adc
outsl
hlt
imul
adc
mov
call
add
lea
aaa
ljmp
lock
andl
mov
inc
popf
stc
test
movsb
loopne
mulb
jnp
mov
fdiv
repnz
sbbl
iret
dec
xor
pop
sbb
mov
and
mov
sub
mov
sbb
pop
int
mov
mov
push
jnp
sub
stos
clc
std
xchg
xchg
cltd
fiadds
mov
cld
or
adc
sbb
sahf
xchg
pop
jb
push
pop
xor
add
fists
pop
pop
loop
jne
lcall
dec
xchg
pop
xchg
xchg
insb
ret
sarb
sub
bound
fisubrs
xlat
push
add
pop
aaa
mov
sbb
jg
outsb
mov
jl
xor
mov
out
ss
and
and
sub
in
dec
sbb
sbb
rcrb
xchg
sbb
mov
fnstcw
data16
and
pushf
cli
loop
std
and
ljmp
xchg
cmpsb
ljmp
hlt
mov
stos
sbb
push
jbe
sbb
jae
sub
sbb
mov
pop
jno
jmp
push
dec
mov
and
ds
inc
sub
movsb
outsl
jne
xchg
sbb
fists
loope
or
sbb
test
dec
aam
push
jb
push
jp
cld
gs
repz
hlt
adc
subb
jne
lcall
icebp
cmp
mov
jno
xor
inc
mov
test
pop
pushl
cmpl
or
enter
sub
mov
add
es
sub
xchg
jbe
cmp
out
pop
xlat
jb
sbb
sub
dec
xor
mov
sbb
cmp
mov
and
xchg
jns
or
adc
in
mov
arpl
mov
mov
pop
cld
xchg
dec
xchg
xchg
push
out
fmulp
inc
jne
and
dec
pop
jb
jb
and
pop
sbb
lock
cs
bound
or
mov
out
adc
nop
adc
ficoml
add
push
mov
adc
sbb
mov
shl
int3
mov
or
js
cld
mov
push
or
shrl
loopne
rcrl
gs
pop
xor
mov
daa
jbe
hlt
test
inc
mov
add
daa
lahf
loop
sub
jb
inc
jg
jl
lock
and
cmpl
adc
mov
inc
std
outsl
cwtl
nop
jb
mov
in
neg
jmp
mov
lea
retw
mov
mov
sub
mov
cmp
sarb
sbb
sbb
fucomip
rcll
lcall
lods
mov
mov
shlb
xchg
orb
pop
int
jne
push
jl
xchg
das
push
push
push
sub
fwait
jns
fildl
into
in
or
hlt
push
bound
mov
mov
repz
sub
cmc
adc
push
popf
js
lahf
jns
push
push
sbb
xchg
mov
lds
fmull
inc
push
add
mov
adc
xor
jp
jge
repnz
jp
sbb
pushl
push
xor
stos
sub
rclb
jl
xchg
sub
andl
icebp
lods
adcb
sub
mov
mov
pop
shll
outsl
imul
hlt
orb
hlt
mov
mov
mov
ficomps
stc
stos
dec
daa
in
out
lcall
std
fs
outsb
ljmp
sbb
mov
jge
jns
cmpsl
pop
pop
dec
xlat
orb
aaa
ja
adc
pop
mov
push
xchg
loopne,pn
das
cmpsb
iret
adc
inc
and
adc
mov
mov
movsl
aam
mov
aas
test
mov
int3
shl
into
sbb
stos
data16
xor
jns
pop
xchg
mov
pop
imul
popf
aaa
sub
pop
fdivrl
push
sub
ret
dec
xchg
test
repz
jnp
cmp
inc
pop
je
dec
fistl
rcrl
sbb
add
pop
cmp
mov
stos
sub
xor
out
icebp
mov
sbb
pop
dec
lcall
pop
jecxz
je
outsb
add
cwtl
dec
sbb
cmpsb
and
mov
add
stos
sbb
mov
movsl
mov
add
ret
stos
push
xchg
lret
stos
sbb
cld
sub
out
mov
ficompl
aas
or
inc
xchg
xor
cmp
adc
imul
jecxz
and
add
cmp
iret
idivb
cld
lahf
loop
xor
gs
insb
mov
xchg
push
push
and
fucomi
mov
scas
inc
xchg
mov
dec
xchg
add
idivl
in
in
int
and
xchg
lret
fnstenv
pop
mov
cli
stos
or
fwait
pop
push
sub
stos
test
sarl
ja
fwait
cmp
or
jae
inc
mov
push
add
sub
sub
pop
jecxz
xor
mov
shrb
mov
dec
lret
insl
or
xchg
inc
mov
cmp
rep
clc
repnz
clc
pop
or
jmp
inc
mov
sarb
cmp
cmpsb
call
gs
or
shlb
or
movsl
jl
push
jecxz
cmpsl
test
inc
push
cs
and
jle
clc
cmp
iret
adc
mov
push
pop
enter
imul
cwtl
pop
push
pop
jmp
inc
imul
xor
test
jecxz
divl
inc
mov
rcll
sahf
mov
sbb
pop
pop
lahf
test
add
and
mov
inc
mov
sub
dec
sahf
insb
add
add
imul
or
jg
stc
jge
mov
lea
adc
popf
mov
mov
cmc
mov
jge
sbb
cwtl
push
xchg
rorl
jb
jle
mov
cmp
mov
and
dec
xlat
xor
add
iret
cmp
rorl
inc
iret
lods
xchg
lock
sbb
loopne
out
mov
or
jg
cmp
sbb
scas
dec
rcrl
adc
fs
pop
or
cld
sub
push
xor
pop
test
cmp
mov
sub
adc
lock
test
and
and
adcb
ds
fisubl
jmp
inc
pop
mov
push
cli
and
sahf
pop
push
imul
loopne
jo
jb
cwtl
lret
iret
cmp
or
aam
fnstsw
dec
or
into
imul
xchg
hlt
sahf
icebp
push
cmp
gs
jbe
into
xchg
mov
cld
sbb
jmp
add
stc
jns
adc
sub
std
insl
mov
xor
cwtl
push
xor
out
jle
into
clc
ss
mov
in
dec
out
and
shlb
sub
das
mov
mov
pop
push
mov
cmp
adc
mov
testl
pop
mov
imul
mov
lea
and
call
mov
nop
aas
mov
mov
test
sub
pop
fiaddl
mov
test
xchg
add
xchg
iret
jbe
or
mov
dec
cld
in
jae
xorl
inc
psubq
mov
pop
test
mov
inc
mov
dec
ret
cmp
pop
mov
cmp
out
scas
in
clc
xor
sub
mov
cli
xor
xor
jo
mov
xchg
and
out
mov
arpl
push
into
ror
movsl
pop
movsb
je
hlt
mov
ljmp
jnp
inc
xchg
push
lahf
cmp
into
push
imul
ds
mov
arpl
sbb
xor
mov
sbb
lcall
sbbl
sar
stc
pushf
popf
outsl
pop
lahf
and
push
adc
jae
test
sbb
dec
loope
sub
jb
into
adc
outsb
mov
or
xorb
test
push
add
mov
out
pop
sahf
xor
cwtl
jnp
mov
mov
add
inc
jmp
loopne
call
jge
enter
fiaddl
cwtl
iret
cmp
test
mov
adc
hlt
fwait
adc
clc
dec
jmp
sub
push
add
scas
pop
ficoms
xchg
pop
adc
xchg
jne
je
lahf
xchg
aaa
adc
lret
add
add
push
fs
std
test
cmp
out
mov
shl
loop
loopne
and
addr16
add
in
add
cwtl
push
jne
push
ss
dec
es
add
addr16
jecxz
icebp
icebp
sbb
or
or
pop
jns
pushf
arpl
pop
mov
add
add
xchg
push
and
jp
push
jo
or
inc
rorl
inc
rol
mov
mov
aad
jnp
js
cmpsl
or
int
cmp
mov
ja
loop
lcall
frstpm(287
sbb
adc
repnz
mov
mov
and
out
lods
sub
add
out
ja
mov
scas
and
ss
push
aam
add
inc
jp
dec
pop
lock
hlt
int3
and
inc
ja
movsb
push
add
push
pop
dec
sub
or
out
addl
jg
mov
movsb
scas
pop
out
lcall
mov
pushf
mov
adc
sub
ret
sbb
out
mov
ftst
lods
mov
lea
and
movsb
scas
dec
xor
cmp
inc
sub
inc
outsb
mov
inc
cmp
push
xchg
ss
pop
mov
inc
mov
pop
pushf
xchg
sub
sbb
aad
inc
shl
iret
fprem1
inc
mov
cmc
mov
dec
xor
dec
icebp
mov
xor
js
xchg
dec
dec
push
xchg
push
icebp
lret
loope
lods
test
pop
dec
xlat
decb
pop
scas
adcl
jge
sbbb
jmp
push
xorb
fcompl
mov
jle
xchg
sub
ret
jno
test
sbb
xchg
pop
sub
jne
jp
jbe
ficompl
or
xchg
fbld
mov
push
call
ficoms
das
dec
test
sbb
mov
cli
imul
mov
neg
pop
popl
mov
mov
jl
out
sbb
mulps
add
sbb
loop
ljmp
jns
add
sbb
mov
leave
mulb
push
fndisi(8087
inc
lods
out
jmpw
pushf
or
push
shlb
dec
shll
bnd
jbe
fistps
push
je
out
dec
pop
inc
cmp
push
pop
mov
mov
sbb
mov
daa
inc
jecxz
pop
movsl
lahf
xchg
cli
sub
repz
xchg
xchg
ret
mov
pop
call
add
adc
jns
inc
pop
shll
ss
sahf
cmp
or
insl
jmp
push
lea
scas
loop
test
mov
sub
inc
mov
pop
push
and
xchg
jecxz
push
and
cs
repnz
mov
pop
ja
shlb
pop
sbb
mov
insl
add
lahf
addr16
bound
pop
daa
or
push
cmpl
fstpl
xor
rolb
sbb
out
adc
leave
push
arpl
dec
cmc
push
ret
into
sarb
mov
add
rcll
add
cmp
pop
mov
pop
pop
leave
jl
or
or
lcall
and
mov
and
out
lock
xor
push
mov
lcall
addb
sbb
dec
rep
sub
int3
xlat
xchg
imulb
ljmp
inc
lds
sbb
push
pop
mov
mov
dec
mov
stc
imul
nop
jb
xor
or
push
or
sti
jp
subb
mov
imul
xchg
mov
test
and
lea
int
xchg
inc
jl
jno
mov
push
movsb
xor
mov
sub
mov
pop
mov
sahf
lock
push
punpckhdq
mov
push
addr16
sub
in
insb
push
adc
cli
int
ljmp
fwait
push
push
stos
rcrb
xor
mov
add
pop
cmp
push
aad
cltd
mov
orl
mov
xor
in
in
mov
insb
push
sahf
aas
cmpb
int3
incb
cmp
or
in
xchg
fwait
aaa
mov
in
out
mov
dec
cmp
mov
mov
test
cmp
shrl
jle
sbb
int3
pop
lds
clc
insb
pop
dec
cmp
fiaddl
mov
clc
xchg
dec
pop
mov
pop
hlt
lcall
test
jecxz
data16
adc
mov
push
jg
adc
mov
inc
jge
xchg
push
adc
gs
sbb
ljmp
enter
push
cwtl
nop
stos
cmpl
or
imul
mov
xchg
loope
inc
aaa
test
fidivrl
jp
push
pop
sbb
push
es
ja
fstl
bound
mov
mov
lret
je
sbb
push
push
add
add
fdivs
sbb
inc
push
ret
jne
and
bound
into
xor
cmp
int
ds
jb
xchg
lods
jp
cld
mov
imul
push
scas
jns
loope
lahf
ds
inc
xor
fdivrs
dec
sbb
mov
pop
jmp
aaa
imul
sbbb
lea
pop
push
ljmp
mov
mov
cmpb
xchg
cmpsl
adc
jbe
mov
add
inc
fs
rclb
cmp
inc
and
lcall
stc
imul
jmp
xchg
iret
loope
xchg
shrl
inc
xchg
cmp
loopne
idivb
sbb
xchg
push
imul
lods
jmp
dec
mov
out
leave
fmul
cli
icebp
push
cmp
test
ret
jmp
ljmp
adc
les
divb
add
mov
lcallw
sahf
mov
sbb
xor
test
stc
ja
les
das
scas
pop
jnp
sar
mov
ds
imul
jp
fisttpl
sub
dec
pop
cmp
gs
xor
or
insb
mov
std
adc
pop
mov
jle
shr
sbb
cmpsb
imul
sbb
lock
and
xor
ljmp
outsb
les
pop
push
in
scas
pop
outsl
add
repz
loopne
mov
sahf
ds
dec
ja
push
loopne
ja
je
mov
mov
popa
into
xchg
push
test
jo
cmp
test
xchg
pop
pop
repnz
cmc
push
mov
ret
mov
bound
jno
add
adc
fmulp
adc
out
ret
scas
rcr
or
sbb
lods
mov
cwtl
xor
sbb
mov
jp
nop
test
lds
jp
movsl
pop
mov
je
dec
xchg
inc
adc
sbb
imul
mov
stc
subb
rcrb
adc
dec
mov
jbe
fcmovbe
dec
rolb
cmp
lds
addl
sub
xchg
ret
out
add
adc
dec
scas
stos
mov
sbbb
inc
xchg
or
mov
aad
fldenv
int3
mov
cli
xchg
test
lcall
pusha
or
ds
aaa
mov
pop
sbb
shll
cmpsb
movsb
inc
lods
xchg
push
lret
les
cmpl
jb
cmpsl
cmp
mov
mov
mov
icebp
ret
call
addr16
adc
inc
jmp
jle
rcll
mov
pop
xlat
cmc
sbb
push
push
js
mov
mov
push
arpl
xchg
sub
push
push
in
mov
insb
roll
adc
jge
jbe
jns
shrb
adc
pop
fwait
adc
mov
xor
dec
and
jp
mov
sub
aam
mov
roll
jmp
ret
pusha
mov
mov
adc
cmp
jne
fs
mov
scas
pushf
cmp
jns
mov
cli
and
ss
ds
cli
aad
cld
dec
xchg
sbb
int
fimull
or
call
lcall
inc
mov
jge
push
push
xor
adc
popa
pusha
mov
mov
cld
add
inc
adc
in
ret
mov
and
dec
push
popa
rolb
jo
sbb
and
xchg
inc
xchg
rcl
bound
imul
mov
cmp
inc
pop
fisubl
dec
jb
mov
pop
cwtl
jne
mov
icebp
xchg
leave
inc
xor
and
adc
loope,pn
or
xor
push
lahf
cmp
popf
push
xlat
gs
pop
lock
mov
lahf
add
sub
stos
pop
rol
hlt
xchg
bound
orl
dec
les
dec
out
sub
mov
out
das
cmpl
jmp
repnz
ss
cmp
dec
dec
sbb
pop
jecxz
lcall
lret
mov
xchg
ret
fwait
xchg
xchg
fcoml
rcrb
xor
out
test
hlt
or
cmp
inc
push
cltd
mov
mov
mov
lcall
mov
cli
push
in
inc
mov
pop
popa
inc
dec
scas
and
jmp
pop
jns
repnz
lock
sarb
pushf
jne
in
lret
push
jmp
shr
sbb
cltd
dec
adc
jb
mov
xchg
sbb
test
icebp
mov
nop
and
daa
fs
dec
scas
and
vmovaps
inc
js
test
loope
adc
cmpsl
dec
mov
cmc
roll
add
bound
pop
shlb
lds
arpl
loope
lods
add
aaa
cli
std
rcrl
arpl
jae
dec
sbb
dec
test
push
out
incb
clc
addb
stos
cmc
push
inc
popf
and
push
iret
lods
jns
hlt
fldenv
mov
cmp
add
sbb
test
inc
repz
loopne
sub
test
repnz
sbb
mov
fsubrl
sub
sbb
push
cmp
mov
push
adc
inc
sarl
mov
out
insb
cli
scas
mov
jb
jmp
xchg
pushf
sti
pushf
push
sub
jno
lahf
dec
pop
aad
jne
jo
inc
in
js
sbb
fbld
je
cmp
and
cli
movsl
shll
ljmp
mov
xor
push
xor
adc
rcrb
and
mov
lods
add
test
movsl
add
outsl
pop
add
cmp
cmp
ds
in
inc
repnz
cmp
xor
and
movb
pop
mov
aaa
push
cmp
mov
cmp
mov
xchg
imul
js
mov
inc
mov
pop
das
dec
loopne
aad
lods
sbb
adc
mov
push
out
data16
lods
fcomip
add
dec
push
cmpsb
mov
shl
mov
xchg
add
sub
shrl
mov
jecxz
xlat
push
imul
scas
movsl
fs
cmpsl
and
dec
xchg
xor
fimuls
insl
dec
stos
dec
cld
xchg
dec
call
outsb
sahf
mov
jge
iret
sahf
xchg
aad
mov
outsb
popa
addr16
add
pusha
mov
adc
stc
jbe
rcrl
sbb
mov
mov
sbb
mov
jno
sbb
into
adc
jmp
dec
adc
rcrb
mov
jmp
jae
sahf
pop
mov
imul
or
mov
out
repnz
stos
ds
insl
dec
xlat
dec
sbb
adc
and
mov
mov
into
dec
cs
nop
loopne
rclb
lahf
inc
lahf
decb
data16
and
or
in
and
outsb
je
sbb
ftst
test
loopne
gs
or
xchg
add
sbb
cmp
lahf
sub
jae
mov
repz
outsl
inc
dec
subl
call
adc
xor
pop
or
rolb
sarb
adc
xchg
inc
pop
fimuls
ds
leave
mov
lea
push
mov
mov
sbb
fcom
cwtl
lea
xlat
mov
loop
into
fsubl
cmp
je
inc
sbb
insb
fsubrl
or
ss
repnz
cmp
stos
lcall
out
adc
call
frstor
mov
outsl
pcmpgtd
pop
mov
mov
push
pusha
iret
les
data16
jg
jecxz
sub
jmp
rol
fiadds
jmp
jnp
or
mov
out
nop
test
mov
xor
sub
xchg
xchg
fisubrl
or
mov
mov
out
sbb
roll
push
pop
and
adc
push
mov
mov
arpl
mov
xchg
pushf
pop
xor
mov
push
mov
hlt
out
mov
and
loopne
das
mov
test
imul
mov
mov
shll
pop
lea
sbb
aaa
inc
or
jle
pop
push
jb
lahf
push
push
rorl
xor
mov
jbe
movntps
test
mov
mov
mov
cld
and
pop
es
mov
cli
xlat
pusha
cmpsl
pop
dec
xor
push
leave
dec
xchg
mov
xor
pop
lret
fcoms
repnz
jl
push
test
mov
and
cmpsb
pop
inc
fisubrl
push
mov
test
push
mov
mov
push
add
imul
sbb
out
sub
mov
inc
shrl
std
pop
cld
mov
dec
sub
cwtl
jl
xor
negl
inc
xor
dec
xlat
pop
or
inc
mov
loop
dec
mov
jmp
xchg
mov
push
xor
cs
ret
dec
or
popf
inc
imulb
inc
pop
clc
jmp
inc
add
ret
into
cmp
loop
cs
push
mov
cmp
aas
es
sbb
aas
pop
xchg
out
ffreep
arpl
jp
add
mov
mov
or
add
out
test
inc
jno
pop
dec
test
movsb
loopne
fcmovnbe
filds
dec
cs
pop
loopne
sbb
stc
mov
cmp
stc
adc
inc
or
aam
jmp
outsl
sub
or
xor
inc
dec
stos
mov
mov
inc
push
lea
ret
mov
aas
xor
inc
into
test
xchg
icebp
jmp
out
lods
and
and
call
lahf
ja
sub
cld
add
sub
mov
jbe
jbe
sub
pop
outsl
xor
roll
mov
sbbl
jo
pop
mov
sbb
push
hlt
test
movsl
sbb
ss
mov
or
in
xchg
test
sub
mov
insl
out
jecxz
adc
mov
fwait
jo
adc
adc
std
aas
mov
pop
sbb
fwait
ds
push
and
ja
cwtl
negl
cmc
in
mov
cmp
loopw
test
into
fcomi
pop
push
mov
mov
gs
mov
je
cwtl
or
sub
cwtl
stos
fnstsw
jl
cli
in
jg
xchg
out
lahf
inc
push
sbb
adc
push
cmp
adc
xchg
inc
xchg
js
andnps
dec
test
movsl
stos
lea
lods
lret
ret
scas
jecxz
adc
fistl
sti
rcrb
inc
shr
mov
mov
leave
lahf
jo
loope
jno
mov
dec
push
sub
push
push
sbb
lds
mov
mov
shrl
lret
jno
pop
or
and
mov
shr
dec
jnp
scas
cmp
add
outsl
jp
pop
xchg
dec
add
les
lods
push
mov
pop
dec
jecxz
mov
dec
rcrl
xchg
xchg
xor
mov
mov
test
mov
lahf
xor
cmp
imul
and
stc
xor
jl
ja
jns
outsb
xchg
subb
clc
fstl
mov
pushf
mov
ds
rolb
stos
mov
and
and
fs
aad
lods
cmp
pop
imul
cmp
std
test
mov
xchg
mov
call
lods
cmp
jecxz
or
cmp
dec
cmp
jl
or
dec
aaa
sub
inc
jmp
inc
fwait
push
mov
lods
sub
sub
mov
adc
add
adc
sti
jae
shll
leave
mov
sahf
bound
pop
enter
aaa
push
cmp
and
and
inc
push
lods
and
mov
add
cmpsl
pop
out
enter
dec
adc
clc
mov
lock
es
mov
or
mov
or
push
and
jne
mov
add
add
aaa
lcall
lret
xor
fdiv
popa
stos
xchg
ficoms
push
in
nop
push
in
enter
push
jle
fdivrs
ret
mov
mov
cmpsb
lahf
mov
pusha
or
pop
push
iret
push
pushf
cli
inc
cmpl
push
imul
and
inc
aaa
add
pop
iret
sub
cltd
xchg
push
loop
test
adc
xor
iret
arpl
iret
cmp
dec
sti
jp
cmc
adc
dec
ret
and
mov
out
pop
adc
popf
push
xchg
daa
or
js
xor
cmp
jge
xor
inc
cltd
push
cmp
sub
push
out
pop
inc
push
sbb
ss
jecxz
dec
xchg
and
or
in
rolb
ljmp
les
cli
inc
mov
cmpl
push
je
iret
or
sub
mov
lcall
push
mov
inc
scas
in
mov
bound
aam
pop
pop
sbb
enter
loopne
shl
iret
decl
cs
mov
in
cs
dec
test
out
jb
les
fwait
push
lods
mov
mov
call
jae
out
mov
aam
mov
push
movsl
push
xchg
es
pop
imul
and
sub
popa
inc
inc
jmp
jle
mull
jp
add
adc
ss
lcall
mov
mov
sbb
fwait
xchg
sub
aad
or
ret
movsl
rol
shrl
test
push
mov
sbb
fadd
dec
and
sub
xchg
inc
ds
aam
loope
leave
push
jbe
repz
mov
testb
push
pop
lods
imul
lea
fisttps
inc
nop
leave
mov
xor
cmp
adc
in
push
shr
pop
jb
sub
xchg
xor
and
mov
int
cmc
and
call
leave
addl
test
push
je
out
cmpsb
rcll
lea
lcall
add
gs
xor
jns
pop
mov
pop
faddl
jo
leave
das
mov
and
jo
in
int
sub
shlb
and
xor
xchg
inc
fistpl
sub
vaddps
add
pop
les
push
jp
xchg
inc
inc
out
xchg
test
cmpsb
data16
in
sub
push
repnz
add
rcl
enter
xchg
test
sub
dec
mov
push
out
cmp
mov
mov
jb
lcall
mov
mov
mov
mov
jne
leave
lcall
fucomp
cmp
loop
jno
adc
cwtl
push
pop
sahf
sub
xchg
in
mov
cmp
mov
js
shlb
in
sahf
lret
mov
fcmovnbe
rorl
sbb
add
std
xchg
add
mov
mov
push
pop
or
mov
out
push
mov
dec
out
pop
or
mov
fs
fstpl
das
out
ret
sarb
xor
dec
mov
adc
or
js
fistl
shrl
js
xor
push
movsb
movsb
fucomp
icebp
xor
aaa
fwait
fwait
sarb
add
lcall
xor
jb
sti
or
sub
cwtl
mov
addr16
and
js
pop
sub
loop
in
push
sar
sti
mov
cmp
insb
xor
loop
push
pop
dec
mov
sbb
jbe
mov
pop
imul
cwtl
jbe
xor
mov
jl
lock
mov
fnstcw
pop
sub
add
mov
cmpb
sahf
sbb
xor
orl
xchg
sbb
enter
mov
push
stos
or
cmp
inc
idivb
daa
push
jno
mov
sbb
loop
or
test
cmp
pop
lock
mov
nop
mov
pushf
fistpll
jp
mov
jmp
into
int
pusha
mov
cli
out
jg
ja
loopne
outsl
adc
arpl
adc
mov
cld
xchg
xchg
or
out
or
lahf
pop
dec
ja
arpl
ret
and
jb
pop
jbe
mov
idivl
aaa
sub
cmc
xchg
mov
std
lods
imul
shl
movsl
adc
jmp
aad
jno
test
sub
in
mov
sbb
cmpsl
xor
stos
shlb
jg
xlat
mov
movsl
mov
dec
popf
aaa
notb
jae
xor
repz
pop
mov
push
jns
mov
dec
jns
inc
es
ss
mov
sbb
sbb
inc
xor
xlat
sbb
lret
movsb
test
jmp
jmp
or
push
lcall
cmp
sub
popa
or
jae
sbb
mov
lock
and
jg
jl
or
std
or
ss
mov
sarl
xchg
clc
jg
mov
xchg
scas
mov
sbb
mov
xor
repz
stos
jnp
icebp
in
test
mov
pop
dec
adc
in
bound
add
add
push
xlat
jns
adc
lret
dec
mov
das
mov
decl
es
arpl
insb
xchg
in
aam
adc
or
stc
cld
leave
xchg
xor
jne
jecxz
call
imul
stos
loop
cmp
daa
fisubrl
movsb
testl
sti
sbb
int
push
ret
fstl
mov
dec
sahf
pop
rcl
es
mov
bound
jne
fsubrl
xor
fistps
test
push
imul
cs
adc
cltd
in
mov
sahf
mov
jae
mov
xlat
add
xor
jle
scas
pop
xor
imul
in
loop
rolb
loope
sahf
arpl
aaa
mov
les
fldenv
clc
mov
or
sbb
fwait
popf
bound
aam
inc
std
dec
aas
aas
jnp
cmp
hlt
xor
in
add
fstpl
loope
cmp
fistpl
shlb
dec
mov
sub
add
sub
pop
out
lahf
and
dec
outsb
frstor
aaa
mov
mov
pop
popa
xchg
mov
pop
mov
popa
mov
vmulsd
or
movsl
mov
jbe
pop
mov
in
push
mov
adc
or
xor
or
lahf
pop
loope
pop
cs
ljmp
push
mov
lea
hlt
hlt
cmc
xchg
jle
mov
xchg
xor
sub
inc
mov
jp
in
imul
add
dec
arpl
call
popf
jmp
rorb
xor
inc
lods
mov
xchg
pop
ja
std
lds
pop
ficomps
scas
cmpsl
or
and
xchg
jp
sar
xchg
inc
test
push
fs
fists
dec
xor
es
iret
adc
fwait
in
push
xor
pop
mov
xchg
push
push
pushf
mov
mov
negb
fwait
mov
xchg
adc
lods
arpl
insb
popf
rcr
mov
sti
and
mov
outsl
mov
mov
mov
push
mov
pop
test
inc
incb
pop
pushf
sbb
sahf
popf
add
mov
cmp
ds
push
dec
adc
xor
fcoms
ret
iret
aad
add
mov
push
mov
pop
out
les
insl
decb
mov
shlb
repnz
mov
mov
clc
stos
mov
xchg
inc
inc
in
mov
push
inc
testb
and
xchg
sub
or
pop
adc
inc
ss
loopne
xchg
and
dec
push
dec
mov
sbb
add
sbb
mov
sahf
dec
popa
pop
repz
outsl
add
dec
ds
cmpb
es
testl
imul
dec
daa
pop
cwtl
ljmp
push
es
push
clc
sub
mov
cmp
mov
mov
push
ljmp
mov
and
cmc
bound
cld
mov
add
call
adc
scas
xor
sbb
add
pushf
dec
insl
in
sbb
rcrl
add
mov
inc
push
das
shll
sbb
aas
out
add
lahf
inc
out
sahf
sbbl
inc
movsl
ja
pop
sbb
ret
jl
cltd
fiadds
call
loopne
popf
aad
xor
mov
inc
mov
fisubrs
sahf
ret
or
mov
or
inc
leave
sahf
loope
xchg
add
mov
enter
sub
aas
iret
add
stc
hlt
pop
jno
xor
aaa
filds
dec
inc
imul
shl
fidivrs
bound
popa
mov
cs
lods
sahf
or
mov
dec
jbe
mov
xchg
sbb
mov
in
data16
lret
push
and
pop
lcall
jb
sub
inc
mov
mov
inc
fisttps
push
clc
add
mov
cmp
or
add
mov
dec
mov
xor
ret
dec
mov
sub
lods
mov
dec
sbb
pop
or
inc
sbb
ficomps
popw
int3
hlt
jge
mov
outsw
ljmp
pusha
push
dec
rcr
cmp
cmc
or
icebp
mov
add
sbb
xor
push
jne
mov
and
gs
rcr
pop
xor
inc
dec
loop
push
lods
sbb
popa
xor
dec
inc
xchg
adc
les
jmp
push
imul
dec
sub
pushf
int
stc
pop
mov
mov
mov
xor
push
outsl
pop
daa
or
push
addl
xchg
add
es
int3
inc
mov
fs
movsb
shll
lds
dec
cmpsl
rclb
add
into
icebp
mov
idiv
call
push
out
cmc
push
adc
cmp
movsl
push
pop
out
mov
or
es
lret
lds
ljmp
ds
enter
fidivs
std
or
or
ret
add
lock
inc
ja
jp
and
lret
fs
push
push
or
ds
and
inc
push
mov
dec
fisubrs
sub
ret
into
adc
hlt
shrb
pop
psrad
stos
fimull
jns
inc
pop
scas
mov
scas
insl
mov
mov
sahf
jo
or
mov
mov
push
jb
fldenv
in
shll
movsb
test
cmc
dec
in
lahf
outsl
adc
insl
xor
mov
addr16
cmpb
mov
inc
or
outsl
popa
std
sbb
mov
dec
pop
inc
inc
inc
lea
pusha
and
or
ret
and
jbe
xchg
sub
mov
cmpsb
mov
cld
xchg
inc
push
cltd
cmp
jnp
sub
jbe
lods
mov
addr16
xlat
mov
sbb
pop
repz
push
cwtl
sbb
mov
test
xchg
test
andl
es
sub
es
int3
les
test
popa
ja
int3
jno
pop
push
xchg
mov
sub
cmpsb
dec
arpl
pop
sbb
fsubp
pop
pop
jnp
stos
pop
popf
cld
sub
or
pushf
pop
das
sbb
lock
mov
js
and
test
incl
adcb
inc
cmp
fldl
xchg
inc
mov
outsb
jp
mov
imul
jmp
and
rorl
out
push
jnp
and
mov
mov
in
adc
jnp
hlt
mov
cmp
nop
dec
push
cmp
insb
jl
xor
into
adc
divl
lods
into
fs
cmpsl
testb
hlt
add
and
pop
lods
scas
test
pop
mov
clc
jns
push
dec
out
mov
xchg
lea
jl
outsb
push
fsubrs
fs
popf
filds
sub
subb
ja
enter
mov
sbb
insb
lods
or
sbb
pop
int
aaa
popa
dec
call
inc
cmpsb
xor
out
cmp
std
pop
xor
pop
add
hlt
insl
cld
add
jl
das
add
xchg
sbb
fwait
xchg
lods
mov
mov
hlt
rcrl
sti
pop
sub
xor
adc
aam
sub
sub
sub
push
xchg
in
mov
outsl
icebp
insb
jge
push
scas
mov
ss
mov
test
pop
mov
das
ljmp
add
rol
mov
mov
icebp
xor
inc
pop
inc
rol
push
lret
repz
fisubrl
sbb
dec
add
addl
inc
push
mov
stc
pop
loopne
ljmp
pop
std
cmpsl
nop
xchg
iret
fldln2
inc
sbb
lods
push
push
sahf
mov
jl
stos
jns
imul
aas
dec
dec
mov
lret
sbb
pop
mov
cmp
or
out
cmpsb
fs
movsb
scas
pop
xor
cwtl
das
stc
arpl
sbb
sbb
fwait
push
xchg
xchg
dec
jno
mov
inc
mov
lret
into
packssdw
clc
fldenv
insl
push
scas
sti
or
or
lods
xorl
inc
push
and
in
scas
cwtl
and
jmp
lret
push
int3
mov
divb
pop
rorb
sub
loopne
jae
hlt
cmp
jb
inc
or
test
stc
dec
sub
mov
mov
mov
or
xor
outsl
pop
sti
jecxz
push
xor
mov
jo
mov
loop
and
sub
rcrb
pop
mov
cwtl
cltd
adc
push
repnz
cld
jecxz
mov
test
pop
mov
insb
popa
inc
sarl
pop
shlb
mov
mov
dec
fisttpll
adc
jmp
stos
xor
xor
cs
ljmp
leave
pop
sbb
insl
int3
rclb
mov
mov
arpl
adc
jae
decl
roll
lods
xchg
jl
loopne
cmc
dec
aad
in
mov
pop
jno
stc
mov
mov
mov
mov
insb
mov
jl
cmp
cmpb
or
nop
movsl
jle
fwait
mov
sbb
mov
mov
lret
lock
in
fisubl
sarl
lret
push
fstpl
push
jmp
cmpsb
push
jnp
insl
sarb
add
xchg
scas
cmp
mov
xor
ljmp
add
stos
rclb
xlat
into
mov
mov
cmc
xor
cwtl
out
sbb
fistpll
pop
pop
and
jecxz
stos
jne
sub
jp
mov
imul
int3
mov
jmp
es
push
cmpsb
mov
filds
lret
add
sbb
ror
nop
icebp
jp
mov
jecxz
sbb
ja
loop
jecxz
adc
outsl
cmp
in
lods
inc
sub
pop
jae
arpl
and
mov
inc
les
pop
lcall
mov
mov
mov
mov
arpl
mov
push
xchg
sub
bound
cli
pop
xor
repnz
into
leave
fucom
ss
movsb
xchg
push
push
dec
lds
pop
pop
inc
or
jae
aaa
mov
das
rorl
std
mov
sbb
fucomp
and
or
xchg
inc
inc
mov
push
sub
cmpb
sbbl
dec
xchg
jae
lods
jae
test
popw
sub
jg
into
scas
add
dec
cs
adc
test
mov
lss
dec
mov
lods
fldcw
cmp
fs
ds
or
mov
adc
hlt
adc
ss
pause
jbe
push
dec
sbb
lods
jbe
imul
hlt
push
sub
sti
or
test
mov
cmp
adc
push
test
mov
fstpl
or
push
andb
fs
out
bound
enter
push
test
ret
xor
dec
dec
aad
dec
call
cmc
jae
gs
iret
imul
ja
fs
in
mov
xor
xchg
dec
outsb
and
adc
cmp
lds
jmp
push
cmpsl
call
in
push
fcoms
mov
push
push
mov
hlt
sahf
stos
callw
mov
stos
and
loop
mov
jnp
xor
imul
inc
and
push
xor
add
sbb
or
and
pop
data16
imulb
cmpsl
pop
lock
scas
adc
shl
mov
add
adc
imull
push
lods
cmp
es
out
pop
cmpsl
and
dec
fwait
mov
mov
je
movl
mov
sbb
test
pop
movsl
das
rolb
xor
fwait
mov
push
sbbl
jno
fidivrl
sbb
pop
aam
adc
sti
xchg
jno
out
call
pop
out
mov
pop
clc
jno
pop
divl
js
sub
scas
push
outsl
xor
sub
mov
imul
ss
jnp
addr16
cltd
decl
ljmp
push
pop
call
ret
xchg
push
jg
lret
iret
icebp
sub
pusha
xor
mov
xchg
add
lods
iret
adc
xchg
cmp
mov
xor
sahf
pop
insl
jmp
es
jge
pop
push
clc
lock
dec
xor
in
lock
pop
fldt
aad
gs
xchg
cwtl
adc
pop
xchg
pop
mov
push
cld
ja
rcrl
pop
add
cmpsb
and
lret
mov
cmp
mov
or
arpl
xchg
mov
lret
jmp
xlat
loope
orb
cmpsl
cld
xchg
sbb
outsl
dec
rorb
sbb
add
mov
out
cmc
sbb
sub
or
ds
sbb
call
xor
lods
test
aad
jle
subb
inc
add
cli
ds
dec
sub
mov
ds
aad
sub
pusha
fisttps
mov
jl
add
or
mov
insl
jecxz
sbb
popf
scas
xor
fldenv
fdiv
scas
in
outsl
inc
bound
stc
sbb
mov
jg
dec
pop
hlt
dec
mov
lock
sbb
gs
dec
jg
mov
inc
xchg
lret
xlat
lods
cmp
movsl
stc
inc
jns
jmp
fcompl
sub
jns
les
popf
sbb
pusha
leave
sbb
es
inc
jbe
and
addr16
insb
dec
cmp
jb
push
ret
adc
out
mov
adc
mov
es
sub
xor
lret
xchg
into
and
or
and
add
mov
adc
or
xor
ljmp
out
insl
mov
scas
movsb
mov
push
push
fsts
pop
or
push
mov
sar
mov
addl
sahf
shll
inc
xchg
loope
cmp
enter
xor
mov
repz
les
sub
mov
repnz
test
rcrl
sbb
jbe
adc
or
stos
push
nop
hlt
shl
xchg
orl
mov
icebp
dec
xchg
adc
jbe
mov
jle
lret
fs
dec
push
sti
es
push
jo
xchg
lods
lret
sbb
push
aam
xrelease
into
and
stc
scas
sbb
pop
pusha
add
add
sbb
sbb
push
cmp
jnp
enter
ret
sbb
mov
scas
aam
push
fstpt
sbb
cltd
addb
or
out
inc
jne
inc
sbb
inc
adc
inc
mov
fwait
cld
xor
xlat
clc
negl
mov
cmpsb
int
cmp
inc
mov
sbb
in
xchg
out
pop
and
mov
xchg
push
push
cli
jns
pop
fs
gs
mov
lret
rcrb
adc
mov
adc
and
xor
popf
js
dec
sbb
inc
mov
sub
or
dec
icebp
and
daa
sub
and
cwtl
xchg
ret
ret
push
aad
cltd
nop
sub
pop
into
fldl
dec
pop
je
inc
xchg
xchg
daa
jecxz
xor
inc
mov
test
mov
push
into
pop
add
jle
xor
push
xor
xchg
mov
int
sub
jne
mov
enter
add
ljmp
outsl
mov
xchg
arpl
adc
mov
nop
or
test
add
xor
adc
or
mov
or
or
mov
or
test
lahf
lcall
jb
int
or
sub
ds
clc
in
jmp
fiaddl
jne
pop
xchg
cmp
into
es
jge
mov
xchg
push
mov
loopne
rolb
fs
add
loop
fldt
dec
xor
mov
in
cmp
pop
aam
insl
mov
shl
cmpsl
cld
lret
cltd
xor
sub
mov
scas
xor
cld
xchg
pop
jnp
sbb
les
insb
add
xlat
loope
push
mov
addb
call
mov
jb
mov
lock
xorb
push
inc
xchg
test
shrb
stos
or
and
aam
mov
pop
loop
out
sub
lcall
jmp
cmc
cltd
mov
jns
notl
loopne
adc
cmp
lea
cmc
addb
mov
es
movsb
mov
xchg
push
leave
sti
insb
out
push
popa
faddp
addr16
mov
jmp
sbb
out
fiadds
lea
inc
sub
rol
out
popa
pop
cmc
test
mov
adc
shlb
pop
outsb
add
push
inc
movsb
cmp
mov
xchg
push
adc
cmc
lret
cmp
in
inc
mov
out
outsb
cmp
jl
sbb
and
pop
aaa
and
sub
lret
dec
dec
lods
lahf
lock
sub
dec
push
mov
and
fcoms
sub
push
sbb
pop
jbe
stos
out
gs
dec
dec
mov
mov
nop
dec
or
xchg
mov
fistps
repz
neg
jo
mov
push
shrb
bound
into
add
jae
add
sti
push
aam
xchg
push
xchg
jle
adc
cld
xchg
ret
xchg
pusha
bound
pushf
mov
push
hlt
mov
xchg
pop
push
jno
mov
addb
pop
popf
daa
bound
dec
or
in
gs
shll
cmpl
dec
adc
mov
mov
fwait
or
xchg
in
or
sub
ds
stos
lahf
sub
adc
stc
pop
push
into
test
pop
out
or
adc
jne
gs
test
jo
dec
xchg
ja
xchg
push
mulb
sub
and
sbb
or
movntq
xchg
ror
pusha
xor
jle
fstpl
outsl
xchg
jle
daa
jo
fs
loop
movsl
cmpsl
shrb
decl
popf
xchg
jno
pop
and
push
test
push
push
jnp
sahf
loop
xchg
lret
enter
insb
add
mov
fldl
and
inc
and
dec
push
and
xchg
je
and
or
push
cmp
clc
sahf
jle
pop
lret
or
gs
jmp
xchg
stc
jmp
push
or
push
addl
repz
ret
inc
sub
das
aaa
and
jns
add
out
mov
jnp
sbb
scas
inc
push
outsl
dec
push
cmp
jecxz
mov
es
stos
jb
das
scas
mov
mov
cli
ret
sbb
pop
mov
adc
and
xorl
fld
or
and
aad
out
clc
jno
repnz
in
mov
xchg
mov
fcoms
daa
cld
push
sub
dec
bound
aad
mov
or
cli
outsl
mov
ja
jg
push
cli
mov
ja
mov
leave
in
lret
push
mov
int3
jp
mov
jae
fnstenv
int3
cmp
and
jo
cmp
arpl
rcrl
ret
outsl
enter
loope
or
adc
outsb
adc
sbb
sub
jne
sbb
sbb
dec
enter
xchg
cmp
xchg
shr
xchg
cli
hlt
dec
or
push
test
pop
xor
adc
lea
ss
pop
out
push
xchg
adc
test
mov
adc
jg
adc
cmpsb
or
ret
and
sub
imul
cs
out
cmpsb
lock
cltd
loop
ja
xchg
jmp
sbb
prefetcht2
sbb
test
xchg
jne
xchg
adcb
jecxz
mov
nop
fwait
xor
cmpsl
mov
loope
push
push
cmpsl
scas
sbb
arpl
push
xchg
insb
mov
sub
jp
mov
aas
or
rcrl
nop
sbb
jmp
insb
test
movsl
mov
movaps
jl
mov
sbb
push
jl
mov
xchg
mov
stos
test
or
xchg
sub
out
cmpsb
xor
add
and
inc
push
movsl
pop
inc
push
jbe
mov
push
loope
movsb
inc
lcall
aas
jbe
inc
inc
dec
xchg
mov
add
adc
lea
pop
adc
pushf
leave
rclb
fsubrl
xchg
dec
cmp
addb
sbb
and
mov
and
mov
push
mov
inc
mov
je
ret
add
jae
das
orl
xchg
popf
cwtl
jae
cmp
stos
outsl
push
or
daa
inc
xchg
repz
frstor
jp
mov
jns
outsl
xor
cmpsb
push
sub
mov
jbe
jecxz
xor
scas
xor
ds
mov
lea
jnp
scas
inc
test
xor
iret
cmpsb
cmpb
cmp
lret
mov
sti
or
adc
leave
adc
ror
xor
and
aaa
loope
xor
pop
mov
sub
mov
sbb
or
addr16
adc
enter
pop
lock
aad
in
push
addb
mov
shlb
ljmp
mov
sbb
push
mov
mov
popl
insb
fwait
add
xor
adc
inc
out
shlb
fsubr
loopne
lcall
inc
jo
xchg
mov
stos
mov
sub
jg
xchg
mov
test
mov
push
sub
dec
sub
into
cmc
repnz
mov
in
xchg
dec
cld
push
sub
sub
ljmp
les
add
cs
arpl
sti
push
push
jecxz
cmp
push
pop
insl
inc
inc
mov
insb
xchg
pop
movsb
dec
ss
mov
aad
das
aad
je
aad
addr16
inc
cli
or
int
aad
adc
ja
xor
push
pushf
jbe
shlb
xor
push
dec
mov
jno
mov
repnz
xchg
imul
jae
js
clc
mov
scas
add
inc
sub
sbb
inc
daa
mov
jecxz
xor
cltd
or
jg
xchg
jecxz
and
mov
shll
push
push
out
xchg
jp
xchg
daa
xchg
mov
rol
lcall
fadd
and
insl
cmp
add
insl
testb
xor
add
xchg
fs
ds
add
inc
or
cmc
inc
adc
xchg
inc
lods
cwtl
mov
clc
xor
mov
adc
scas
pop
call
pop
sti
push
mov
shrb
mov
mov
mov
mov
rcll
xor
and
cmp
cmc
cwtl
movsb
fdivr
sub
mov
rclb
scas
movsl
cmp
lret
les
inc
xor
add
mov
adc
dec
push
movsl
jno
add
cmp
mov
cmc
decb
jno
push
adc
cmp
pushf
lea
push
push
jno
rcr
sub
xchg
add
stos
stos
mov
sbb
insl
mov
and
xor
imul
das
mov
shrl
mov
jno
sarl
and
jmp
pop
dec
inc
cwtl
xor
aas
mov
cmp
es
jg
imul
dec
les
lea
jecxz
adc
and
mov
dec
stos
push
lds
jae
lods
and
lods
mov
in
test
push
adc
test
jle
jmp
sub
mulb
and
sub
std
inc
push
popf
icebp
dec
xlat
mov
dec
xor
cmpsl
cmp
sub
mov
lds
adc
mov
push
in
add
jbe
adc
add
into
sub
add
add
xlat
or
aaa
fadds
jne
sbb
sub
push
and
in
xchg
adc
add
aad
fidivrl
xor
add
sbb
call
lods
xchg
test
mov
adc
push
aaa
ljmp
js
dec
add
push
xchg
xchg
mov
xadd
push
or
sbb
mov
push
dec
ss
outsl
xchg
ja
sub
adc
dec
jecxz
push
in
adc
xchg
cmp
bound
jb
push
pop
out
int
xor
movsl
mov
adc
sub
fadd
mov
ja
insb
pusha
pop
mov
fs
inc
or
test
push
mov
adcb
scas
scas
pop
cld
cmpsl
or
mov
stos
arpl
mov
push
pop
jmp
jno
add
xlat
bound
int
pushf
aad
and
call
xor
call
pushf
lods
pop
adc
xorb
sub
outsl
pop
sub
cmpl
fbstp
insb
push
int3
xlat
mov
cmc
and
mov
mov
push
fistpll
mov
int
pop
mulb
lds
popa
mov
mov
sahf
cmpsb
inc
in
mov
test
sbb
loopne
mov
inc
xchg
sarl
outsb
push
pop
adc
push
mov
shlb
sbb
cmpsb
or
cmp
push
iret
sbb
xor
leave
push
inc
pop
out
pop
xor
and
xchg
cmp
sub
jmp
inc
ret
sbb
fs
jbe
in
pop
mov
popl
std
loopne
out
xor
ret
or
mov
addr16
stc
mov
cs
ljmp
mov
mov
stos
or
and
std
data16
cmp
pop
add
icebp
pop
mov
insb
mov
inc
sbb
ret
mov
mov
and
push
jno
jno
or
arpl
fsubs
nop
mov
pop
insl
sub
ret
bound
jo
or
clc
jae
fnsave
adc
sub
xchg
adc
cmpsl
and
xlat
and
mov
jae
les
rcll
adc
cld
inc
dec
scas
mov
repz
xchg
push
stc
mov
pop
lcall
add
fdivl
xchg
ficoml
jb
fistpll
enter
imul
mulb
mov
jo
xchg
scas
cmp
adc
jge
aas
hlt
cmp
sbb
add
push
arpl
lcall
cmp
mov
js
iret
push
dec
pop
inc
insl
std
les
add
sbb
fcomps
mov
ret
scas
rclb
or
xor
outsl
clc
mov
out
add
jns
or
mov
stc
movsb
clc
mov
call
xchg
mov
mov
cmpsl
dec
imul
add
in
sbb
das
xlat
sbb
movsl
scas
mov
sub
cld
mov
pop
and
pop
ret
cs
add
test
and
dec
inc
mov
jle
sbbb
sahf
out
repz
pop
pop
push
or
sahf
popf
sbb
lret
mov
roll
push
clc
dec
js
fs
sub
adc
ret
lds
cmc
sub
mov
sbb
xor
scas
jge
mov
icebp
or
in
mov
adc
adc
mov
cmp
fisttpll
lahf
in
mov
daa
push
insl
mov
xchg
popf
sbb
and
lock
sbb
push
jbe
xchg
dec
pop
add
jmp
andl
aaa
push
fcmovb
shl
sbb
push
bound
int
dec
call
daa
sbb
sub
xchg
xor
mov
aas
xorl
sbb
cmc
jae
fbstp
lret
jno
stos
in
xor
es
insl
mov
pushf
mov
in
mov
jg
jg
fistpl
dec
pop
push
ss
sbb
cmpsl
or
or
sbb
movsb
cltd
test
mov
outsb
fstps
pop
mov
mov
jns
or
lahf
cmp
add
fildll
xor
iret
push
ficoms
shrb
xor
sbb
mov
aas
lret
push
call
cmp
loop
xchg
push
or
sbb
je
neg
push
or
jle
ja
std
or
push
pushf
dec
jge
dec
sub
xchg
cmpsb
loope
xchg
sbb
mov
dec
fidivs
and
sbb
pop
pusha
push
push
test
or
lret
jne
sbb
push
dec
jecxz
xchg
jp
jnp
leave
adc
xchg
addb
sahf
dec
xchg
fstpl
lea
mov
mov
or
sbb
dec
fmuls
jmp
jle
mov
fcoms
push
nop
faddl
xchg
sub
in
imul
jae
mov
fsubs
add
fnstsw
xlat
loop
or
pop
jp
adc
xor
dec
adcl
xor
push
push
sbb
cmp
dec
dec
push
mov
add
test
cmp
lods
jne
jns
push
adc
dec
test
lret
xor
push
shlb
stc
dec
ret
cmp
pop
aam
mov
add
lods
outsl
and
mov
jl
pop
loop
cmp
adc
jg
xor
sbb
adc
cmpsb
or
cmp
fdiv
mov
les
jge
inc
and
ror
icebp
shlb
mov
mov
xor
jl
cmp
add
in
xchg
jnp
lods
mov
test
jle
push
pop
inc
adc
ja
rolb
test
push
cmpsl
mov
cmpsb
call
push
ljmp
loope
outsl
xor
inc
out
dec
into
mov
pop
push
js
ss
dec
std
outsl
out
daa
push
push
dec
clc
aas
mov
pusha
test
or
movsb
mov
mov
icebp
jae
jmp
test
push
mov
add
aaa
push
gs
mov
mov
mov
imul
mov
and
add
pop
mov
jmp
clc
cli
in
outsb
scas
jb
sti
jl
test
inc
push
shl
cmp
ljmp
cmp
and
test
dec
test
xor
out
or
cmp
test
lret
cs
xchg
inc
aam
mov
lea
lahf
jmp
xor
imul
jmp
mov
pop
ljmp
aas
je
jnp
adc
aad
aas
addr16
jecxz
sbb
mov
fmull
imulb
sar
mov
mov
outsl
xor
adc
icebp
ja
rcl
arpl
test
and
ret
pop
cwtl
stc
sbb
xor
ficomps
xor
daa
lds
addb
and
add
repnz
xlat
cmp
in
test
add
ss
shll
pop
addr16
sarl
fs
push
leave
in
jge
mov
mov
shrl
xor
cmpsb
mov
leave
out
shr
xchg
adc
sbb
mov
negl
sub
pushf
cli
in
add
pop
mov
scas
push
and
mov
xor
add
pop
mov
fstpt
add
dec
inc
dec
xchg
das
pop
test
mov
fs
xor
xchg
jge
sar
mov
xchg
ret
lock
sbb
and
push
sbb
cld
loope
dec
cld
pop
jbe
dec
sbb
in
push
cmp
add
and
pop
in
jne
js
add
mov
mov
xor
sub
cmpsl
pop
ret
inc
ljmp
in
add
xchg
sahf
mov
cltd
xchg
scas
pop
xchg
inc
jg
sbb
cmp
pop
mov
mov
or
test
push
mov
sub
fwait
add
mov
leave
cmp
cmp
add
jp
or
mov
add
jge
mov
mov
sbb
xor
shl
fisttps
mov
pop
xor
pop
shll
stos
pop
inc
adc
aaa
inc
xchg
aas
int
shrb
shlb
pop
repz
fsubr
leave
leave
inc
xorl
test
push
rcrb
and
sub
cltd
mov
std
xor
adc
rol
lret
notb
iret
xchg
xor
push
stos
sub
leave
dec
test
jle
clc
dec
xor
cmp
cmp
jmp
fs
inc
sub
gs
push
jbe
repnz
and
push
mov
xchg
push
mov
jae
jae
bound
push
mov
add
nop
popa
int3
out
push
lea
mov
icebp
mov
fisttpll
inc
or
cltd
or
push
clc
push
mov
xchg
sub
movsl
mov
cmp
cwtl
test
push
inc
ljmp
inc
enter
jo
mov
ja
sub
jo
sarl
lock
aaa
nop
scas
xor
fsubrp
ljmp
cltd
mov
fsubr
jns
aad
test
out
sbb
cmp
pusha
mov
imul
lods
xchg
js
movl
jge
or
mov
and
adc
imul
arpl
xor
int
fwait
movsb
in
out
push
popa
fsubl
mov
add
mov
inc
icebp
jb
divl
cmp
rorw
adc
subb
xchg
fsubrl
out
xchg
sbb
mov
fsub
xlat
call
mov
ss
dec
and
dec
xor
push
xlat
test
and
test
add
sbb
cwtl
cmc
cmpl
pop
mov
mov
push
xchg
cmp
or
test
sub
jns
pop
push
sbb
sbbb
push
push
fstl
pusha
cltd
lock
or
pusha
lods
arpl
subl
adc
mov
push
fs
sbb
sub
out
inc
sub
insl
retw
outsl
ret
add
sbb
dec
mov
pop
sub
out
xchg
sti
adc
hlt
ret
cmp
shll
push
cwtl
lcall
xlat
add
lods
test
out
pop
ss
fwait
xor
bound
xor
out
jecxz
and
mov
negl
sbb
mov
bound
cmp
ss
leave
push
jbe
sbb
int3
rol
sahf
xor
sub
movsb
movsb
add
pop
cmp
mov
inc
int
adc
xor
pop
mov
cltd
and
adc
es
xchg
daa
cli
push
addr16
shrl
xchg
mov
jp
adc
cmpsl
xor
jge
mov
jno
sub
dec
data16
add
mov
ss
nop
xor
iret
scas
mov
jmp
subl
jle
pop
sub
mov
pusha
xor
sub
mov
jg
shlb
dec
outsl
ret
lods
mov
out
dec
lock
inc
and
fisubl
sub
aas
adc
xorl
es
cmp
jmp
adc
jno
mov
push
xor
dec
mov
mov
mov
sbb
mov
push
cmc
inc
dec
push
mov
add
xchg
ljmp
faddl
adc
out
inc
add
or
out
adc
sbb
inc
sbb
popf
idivb
movsl
roll
in
and
imul
enter
mov
cmp
mov
jle
mov
lods
lods
push
stos
mov
outsl
mov
mov
cmp
pop
inc
into
xor
add
push
lods
in
or
cltd
sbb
xchg
pop
sub
push
popf
arpl
adc
jp
es
mov
sarb
sar
push
sbb
adc
daa
pop
sub
jmp
scas
jno
push
ret
pop
xchg
sti
loop
lahf
insb
orl
inc
cmp
jp
data16
push
push
mov
rcll
fld
jecxz
jp
sbb
cmp
add
sub
dec
mov
inc
jmp
add
clc
js
fistl
sbb
adc
xchg
add
shrl
orl
stos
mov
sbb
arpl
call
mov
test
lahf
adc
in
mov
jp
int
aaa
adcb
cmp
insl
pop
addr16
push
jp
lock
push
inc
cltd
xchg
rol
popf
loop
mov
fisubl
ss
inc
cmovae
scas
pop
mov
subb
inc
lahf
push
jecxz
in
lods
sub
mov
xchg
jno
jnp
xchg
imul
xor
cli
aam
dec
jmp
lret
jmp
pop
scas
outsl
scas
popa
loop
mov
pop
neg
cld
sahf
into
and
lods
jecxz
std
cli
xchg
inc
in
push
scas
add
mov
cld
add
bound
cld
int3
jns
adc
cmpsl
xchg
repnz
jbe
test
arpl
shlb
mov
xchg
sbb
repnz
decb
jecxz
sub
mov
in
sub
divb
pop
cltd
jmp
sbb
dec
push
fdivs
cs
sbb
test
leave
xor
sbb
leave
int
lcall
dec
cmp
mov
idivb
gs
loop
or
call
divb
mov
xorb
xchg
mov
inc
in
xor
shll
cs
jl
inc
mov
jl
or
push
call
shl
push
push
jo
test
pop
hlt
mov
sbb
repz
lods
xchg
mov
aas
jbe
push
into
call
je
and
outsl
rolb
jge
addb
lds
mov
and
daa
pop
xor
aam
shrb
lret
add
pop
movsb
mov
ljmp
out
inc
int3
push
gs
push
cmp
push
jbe
pop
adc
fisubl
aaa
pop
loopne
lret
ret
cmp
ds
add
out
xlat
pop
mov
mov
mov
test
jecxz
push
ds
dec
mov
in
mov
pop
fsub
push
adc
aad
and
lea
inc
jae
inc
lcall
mov
sub
repz
push
les
aaa
data16
mov
subb
adc
sahf
test
add
inc
sub
sahf
adc
lods
test
fistpll
jns
stc
dec
mov
inc
cwtl
or
insl
aas
cmp
hlt
repnz
push
scas
push
clc
xchg
xor
sub
cmp
dec
xchg
sbb
mov
jne
add
pusha
iret
test
jne
stos
push
shll
icebp
js
cmp
cvtps2pi
movsb
mov
sbb
sbb
mov
push
sub
aaa
fstpt
and
jne
inc
push
add
pop
in
dec
test
xlat
pushf
rcll
dec
nop
out
mov
push
test
sub
cmp
ljmp
imul
or
pop
stos
ds
push
pop
pop
or
adc
jle
adc
sbb
ss
cmp
sbb
inc
sarl
fsubrs
mov
popf
adc
pop
jge
fcompl
jae
and
lock
mov
cmpsb
mov
sti
and
ret
call
dec
pusha
mov
push
call
mov
jg
fdivr
das
add
div
mov
cld
xchg
lcall
sbb
dec
enter
xor
dec
les
loope
imul
push
or
push
out
pop
dec
sub
xchg
and
adc
lock
stos
mov
or
dec
dec
out
xchg
mov
jns
mov
sbb
lock
lret
insb
jge
ficoms
push
bound
mov
in
mov
push
adc
xor
xchg
push
pop
pop
adc
rcl
add
aad
sub
mov
mov
fimuls
add
jns
cmp
lods
cltd
or
mulb
and
idivb
movl
stc
push
out
loop
out
dec
push
xorl
xchg
dec
mov
aas
arpl
jno
add
outsl
cltd
mov
lods
mov
inc
int3
xchg
adc
cmp
lods
insl
mov
push
or
out
jo
mov
mov
mov
in
ficompl
sub
or
sahf
sbb
jbe
sbb
inc
adc
stos
test
mov
sub
mov
push
arpl
mov
dec
jl
dec
pusha
fwait
jns
mov
push
sub
xorb
lods
jne
mov
pop
inc
out
and
iret
test
jge
roll
ds
repnz
ret
xchg
mov
adcb
divb
pop
test
cltd
fwait
lea
mov
adc
arpl
adc
xchg
push
ds
jp
imul
insb
lds
xchg
push
leave
adc
add
std
cmpsb
jl
into
jne
lret
add
xchg
push
movsl
dec
es
push
loope
or
pop
add
jmp
sub
fmull
pop
sbb
rclb
cmp
cmpsl
cwtl
js
icebp
aas
call
xor
int3
adc
dec
loope
out
jne
push
scas
addb
repz
das
fildll
xor
push
ret
gs
rorl
sahf
dec
and
mov
das
jle
sbb
sahf
cltd
dec
popl
idivl
mov
mov
movsw
fs
xchg
xchg
rcll
fwait
fimull
push
mov
and
and
stc
arpl
aas
int
cmp
mov
mov
inc
clc
mov
mov
adc
cli
sbb
mov
fidivs
sbb
cmpsb
ret
jmp
addb
add
scas
outsl
inc
cmp
xor
imul
mov
xchg
shrl
and
mov
imul
or
lret
std
imul
mov
mov
xor
mov
ret
dec
pop
xor
pop
jmp
mov
sub
xchg
jp
mov
out
mov
xor
lds
in
dec
addr16
xor
shr
mov
xchg
icebp
inc
sbb
lea
bound
cltd
lahf
daa
cmp
loope
add
or
add
add
iret
mov
rcll
jo
or
add
sub
aas
incl
jecxz
fldl
leave
in
push
fldl
push
push
inc
orb
sub
push
lock
cld
mov
jp
mov
pop
out
or
rcrl
mov
sub
cmp
outsb
jecxz
rcr
call
cmp
dec
jb
call
out
inc
xor
xor
movsl
pushf
mov
subb
in
and
xor
nopl
ss
xor
pushf
lods
and
add
lahf
outsb
fdiv
js
gs
jae
stc
dec
das
dec
rcrb
adc
ret
fsubrs
sbb
push
lret
push
adc
jo
fs
inc
pop
sub
add
ljmp
insl
jl
imul
mov
cld
into
jns
into
sbb
pushf
aas
mov
sbb
xor
out
test
shll
sub
aaa
imul
gs
insb
call
push
fstl
push
out
insb
mov
std
and
dec
loopne
lea
mov
pop
aad
lds
pop
ljmp
fwait
hlt
add
add
stos
mov
or
lret
pop
stos
lret
adc
leave
push
pop
push
push
jb
sbb
sahf
mov
ja
sbb
in
cltd
adc
push
inc
movsb
jne
stos
push
loopne
mov
andl
addr16
sub
sub
cmp
push
cs
push
push
mov
or
out
adc
adcl
cmp
xor
pop
fcoml
mov
lods
ds
jae
sub
pop
imul
aas
in
jle
clc
sbb
push
mov
ss
adc
xchg
movsl
pop
aad
out
cmpsl
push
call
adc
jo
cwtl
dec
pop
popf
jae
pop
jg
scas
pop
lahf
iret
or
and
xchg
shrb
aam
mov
jle
dec
shlw
ljmp
int3
je
add
add
lahf
in
adc
fsubrl
push
push
arpl
xchg
add
adc
test
enter
iretw
cltd
pop
cmpsl
dec
xor
out
ja
or
cmpl
jl
in
push
xchg
outsl
mov
fs
mov
test
dec
outsb
mov
fstps
fsubl
mov
mov
mov
mov
clc
jge
testl
sub
mov
add
mov
jecxz
xchg
pop
scas
rcl
out
stc
inc
and
dec
mov
enter
fcoml
jmp
in
adc
fcmovnb
pop
out
mov
test
or
ret
hlt
mov
jge
add
push
repnz
push
xchg
jne
test
cmpsl
jnp
cld
and
inc
aaa
addl
nop
ret
mov
jg
mov
push
push
push
and
lock
in
ss
push
ds
shrl
and
inc
mov
dec
xor
jne
in
inc
sub
cmp
xorl
jle
test
daa
lock
insl
jb
insb
adc
in
xchg
add
or
pop
and
and
movsb
lahf
int3
fimull
fimuls
test
enter
add
pop
push
mov
loope
scas
dec
fwait
in
flds
pop
and
or
jle
cs
stc
adc
out
out
dec
jg
popf
push
add
adc
xchg
shlb
jo
movsl
push
jle
ror
addl
fisubl
push
add
idivl
bound
push
fwait
push
adc
aaa
or
ja
push
push
lods
mov
jns
jns
add
push
fidivrs
hlt
cmc
fsubrs
dec
mov
imul
nop
push
mov
push
movsl
cwtl
mov
test
rorb
ljmp
cmpsb
test
mov
pusha
mov
test
stos
enter
notl
adc
adc
push
pop
in
mov
repz
xchg
dec
inc
and
push
or
push
sub
mov
loop
dec
test
fidivl
jbe
arpl
push
xchg
mov
scas
movsl
xchg
sub
hlt
lret
loopne
inc
add
test
pop
cwtl
and
jbe
jns
daa
pop
xchg
sub
jbe
cmp
ljmp
mov
add
sbb
sarl
pop
inc
sbbl
pop
call
add
sbb
pop
cs
idiv
shl
mov
cmp
jl
jo
pop
xor
mov
adc
ss
and
xchg
jnp
add
mov
cmp
or
push
es
xrelease
outsl
fcmovnu
int3
in
adc
mov
or
insl
sbb
xor
inc
cld
push
jl
lret
mov
daa
pushf
sbb
cmp
in
jnp
out
mov
mull
sbb
lods
jge
xchg
adc
jmp
cmp
sar
aad
ja
xor
clc
or
call
pop
add
movl
fdivrl
fucomp
sarb
pop
xor
adc
sub
xlat
mov
dec
inc
jbe
inc
jnp
jl
jbe
jb
mov
adc
test
push
stos
call
or
dec
fistpl
push
push
and
loope
int3
dec
push
inc
out
adc
jno
gs
xor
mov
push
dec
xchg
movsb
stos
xor
flds
adc
stos
jae
jo
cwtl
subb
lcall
movsl
stos
pop
jbe
push
aam
sbb
js
mov
cmp
mov
xchg
data16
ja
out
sarl
cli
insb
scas
lcall
popa
mov
mov
cmpl
cmpsb
pop
xchg
outsl
push
inc
shll
jg
or
out
fidivl
sahf
fnstsw
testl
sbb
push
ljmp
repz
ret
xlat
mov
dec
lcall
inc
cmp
icebp
popf
xchg
inc
sbb
mov
xchg
divb
stc
insl
loopne
push
sbb
mov
add
aaa
lods
rolb
lods
call
ljmp
push
or
popl
mov
sbb
jb
xchg
stos
lea
dec
test
cmp
icebp
cmpsb
or
stos
mov
ret
inc
incl
mov
push
jae
mov
shlb
push
and
inc
push
sahf
in
fcomp
enter
in
scas
sub
outsl
je
jecxz
cmp
lret
leave
mov
xor
sbbl
sub
aad
hlt
iret
push
add
jns
shl
fnstcw
mov
jbe
mov
xor
jmp
and
outsl
imul
lahf
pop
psrlw
inc
mull
aad
push
cmp
pop
rorl
sbb
sbb
rcrb
cltd
lds
sahf
push
cmpsb
jb
sub
div
sbb
jecxz
rolb
or
hlt
xchg
leave
mov
test
sar
lcall
and
mov
push
lods
adc
cltd
sti
insb
xchg
stos
inc
inc
cmpsl
jb
das
push
loope
lret
out
mov
sbbb
xchg
loop,pt
leave
or
and
repz
shlb
xor
xchg
mov
ljmp
cwtl
jg
add
mov
xor
mov
mov
cmp
pop
dec
int
adcl
mov
xchg
mov
mov
ret
lret
push
add
push
in
sbb
xor
popa
or
cmpsb
mov
sbb
push
sub
je
xchg
stos
xchg
jns
clc
inc
sub
xor
pop
das
pop
push
add
push
clc
cmpsl
inc
mov
sub
imulb
and
add
out
mov
call
push
and
nop
aas
push
sbb
mov
aas
sahf
addr16
int3
add
dec
cmp
jbe
mov
push
cmpsb
ds
push
aaa
shr
xchg
mov
sub
jnp
xor
mov
mov
xor
xchg
sub
pop
or
sahf
gs
jb
lahf
imul
xchg
icebp
push
fadd
jns
jns
adc
mov
xor
push
clc
xchg
pop
jns
cmpsb
subb
cmp
mov
inc
stos
inc
push
push
mov
adc
imul
fistpl
es
enter
sbb
xlat
sub
cld
xor
pop
lods
shlb
in
dec
sbb
mov
test
xor
std
sbb
or
xlat
out
jg
xor
add
mov
rorb
leave
sub
cs
iret
sub
sbb
enter
leave
divb
dec
jno
rcr
adc
jecxz
push
xchg
cmpsl
sbb
sub
cmc
push
cwtl
pop
mov
scas
sbb
sti
loop
bound
imul
lods
jo
xchg
lock
add
sub
inc
idivl
push
xchg
push
mov
aad
ret
lcall
push
or
mov
cltd
push
mov
inc
int3
aas
sahf
imul
clc
lcall
xchg
daa
dec
xchg
inc
adc
sub
mov
ljmp
fcoml
imul
call
jle
fs
in
ret
push
stc
mov
and
inc
xor
int
mov
pop
bound
inc
frstor
mov
jo
xor
ss
mov
fnstenv
xchg
out
lods
movsl
dec
jecxz
adc
repz
inc
repnz
data16
icebp
xchg
pusha
mov
jle
xor
fwait
push
sti
or
or
xor
jb
push
out
xor
pop
xchg
cltd
outsl
out
call
int3
adc
pop
jmp
test
cmp
data16
xor
je
pop
dec
shll
mov
pop
push
ficomps
xor
movsb
add
enter
bound
sub
mov
aas
adc
sahf
fiaddl
mov
jle
hlt
push
add
pusha
es
adc
movsb
inc
shr
data16
sub
adc
in
sbb
mov
pop
jecxz
lods
iret
fmull
daa
cltd
and
mov
popl
dec
lods
jns
movsl
cmp
push
and
sbb
in
mov
sub
inc
pop
mov
rcl
outsl
jbe
aad
sbb
outsb
xchg
push
mov
pushf
mov
cmpsl
pop
push
pop
test
outsb
xor
in
mov
cmp
or
out
aaa
xchg
test
cmp
add
jg
adc
cmp
add
int
jl
mov
ret
loope
or
pop
lock
sahf
jp
mov
fidivrl
mov
or
mov
pop
cmp
inc
cld
push
mov
in
add
jp
icebp
nop
jp
adc
dec
fsub
jno
aas
div
sbb
jns
mov
inc
ret
mov
std
push
mov
daa
mov
imul
push
sbb
clc
push
xor
out
daa
pushf
mov
cmp
inc
out
insl
or
mov
cwtl
mov
loope
movsl
aas
daa
adc
scas
ret
inc
es
inc
push
or
aas
mov
stos
push
in
call
int3
sub
jecxz
mov
xor
flds
mov
cmp
push
incl
and
xor
lock
push
dec
push
add
mov
lret
mov
jnp
rcll
pop
and
cwtl
shlb
mov
xor
sahf
mov
xor
mov
cmp
test
jns
jle
push
xchg
mov
jnp
push
jmp
fmuls
lcall
jo
pop
insb
or
loope
mov
and
mov
push
cmp
pop
cs
mov
pop
mov
addb
fcoml
inc
out
das
push
and
dec
fwait
lcall
lock
or
jmp
mov
push
mov
or
xchg
mov
shlb
repnz
int3
mov
cld
inc
and
push
xchg
sarl
add
adc
sbbl
add
movl
add
mov
mov
pop
or
xor
int3
adc
or
push
std
cmpsl
mov
add
cli
pushf
adc
cmpsb
daa
push
fdivp
xchg
mov
stos
jmp
in
pop
push
sbb
adc
xchg
loopne
int3
jle
and
mov
inc
movsb
mov
adc
dec
bswap
test
lret
shrl
inc
add
popa
pop
add
jo
sbb
cmp
xor
push
sub
in
frstor
xlat
in
cmp
push
fnsetpm(287
push
fildll
inc
aaa
loope
jl
rorb
enter
repz
mov
insb
inc
std
mov
ljmp
lea
icebp
add
push
js
push
hlt
add
stc
test
push
mov
jle
adc
daa
or
scas
push
mov
lahf
aas
pop
in
xchg
xchg
jg
test
fstl
imull
push
popa
out
repz
or
inc
fisubs
cmp
dec
hlt
inc
push
xchg
xchg
and
xchg
lock
rclb
aad
lret
mov
lahf
nop
mov
rcr
dec
pushf
ljmp
fwait
cmp
imul
out
jp
jb
xlat
dec
cmp
sub
addr16
jmp
into
mov
adc
sub
jno
xor
jne
adc
jo
insl
sbb
and
pop
das
hlt
dec
or
stos
pusha
jmp
jae
sub
repz
clc
push
loope
xchg
mov
xor
pop
mov
jg
mov
rolb
cmp
pop
adc
jmp
je
mov
stos
push
idiv
iret
xchg
mov
inc
cmp
adcb
add
lcall
dec
insl
pop
sarl
orl
xor
out
jbe
lods
sbb
jbe
dec
hlt
xchg
jo
mov
lods
daa
out
subl
cmp
sub
jg
stos
idiv
inc
xchg
cwtl
leave
add
dec
mov
fisubs
xor
adc
sub
lahf
and
push
and
in
int
inc
or
loop
inc
adc
inc
icebp
pop
push
xchg
mov
mov
ret
scas
mov
push
sbb
ret
sahf
dec
add
lcall
out
inc
ds
sbb
sub
inc
mov
enter
arpl
pop
sbbb
das
fmull
push
adc
xor
insl
add
push
jbe
inc
dec
imul
or
imul
mov
adc
mov
or
and
pop
xchg
ds
xchg
sbb
insb
pop
xchg
and
add
in
mov
push
adc
lahf
mov
jecxz
js
out
mov
xchg
add
rcrl
pusha
xor
dec
jp
icebp
out
jecxz
scas
xchg
rcrl
inc
jnp
xchg
mov
out
ss
lgs
xlat
xorl
leave
dec
gs
lods
movsb
test
or
mov
pop
iret
out
mov
mov
test
cmc
rcl
pushf
pop
into
sbb
adc
popf
xchg
and
push
push
cmc
jbe
mov
or
test
ja
sahf
mov
in
int3
cltd
adc
pop
and
xchg
fisttpl
cmp
push
imul
fcmovu
shrb
outsl
shll
mov
into
outsb
push
xchg
mov
jo
mov
lcall
in
in
fistpl
movsb
loopne
push
insl
mov
std
aaa
cmp
inc
bswap
ret
cli
into
add
fidivs
sub
pop
nop
hlt
mov
fistps
leave
jo
movsb
sbb
insl
push
mov
cs
add
dec
cmp
ficompl
test
jg
add
mov
sub
fadds
xchg
ljmp
pop
pop
add
insb
mov
dec
pop
cltd
mov
and
inc
inc
sbb
ret
cmc
xor
cmp
pop
jle
fdivrs
outsb
and
dec
cmp
div
jg
push
xor
repz
rorl
dec
scas
jne
cmp
mov
call
jb
ret
jne
jl
repnz
scas
ffreep
dec
sbb
ss
dec
add
stos
divl
jae
imul
push
dec
sbb
shr
add
xchg
jge
rcl
popf
insb
loope
pop
outsb
pop
rcr
mov
aad
fnstcw
or
adcl
daa
sbb
mov
mov
rorl
repnz
scas
test
mov
jp
mov
inc
addr16
xor
in
and
std
lea
fs
repz
sbb
ja
fwait
sti
mov
aam
xchg
inc
ljmp
mov
sbb
and
arpl
pop
fisubrs
cli
xor
push
int3
pop
jo
sbb
xchg
icebp
cmp
mull
nop
into
sub
adc
test
cltd
out
mov
daa
mov
sbbl
sahf
ret
dec
jp
mov
scas
ljmp
or
lods
addr16
mov
cmp
iret
mov
in
dec
cli
mov
xlat
nop
mov
mov
dec
jg
mov
inc
movsb
jp
xchg
pop
jle
cltd
std
rep
enter
fbld
inc
pop
in
in
sti
lahf
or
sub
aaa
int
dec
lods
xchg
xorl
or
insb
fdivrs
jge
flds
popa
lret
out
stos
dec
mov
cs
inc
dec
jae
loope
inc
jns
frstor
fidivl
push
cmp
sub
aam
shlb
aaa
test
nop
push
sbb
lahf
test
rcrl
mov
jns
jle
jno
arpl
mull
addr16
fidivrs
test
outsl
imul
sub
out
jns
add
mov
mov
lret
and
cmp
xchg
lret
fistpl
xor
cld
out
in
je
cltd
jne
in
dec
mov
jb
sbbb
sbb
movsb
aaa
inc
sbb
mov
mov
mov
sbb
add
sarb
sub
out
js
and
sub
pop
iret
ds
popa
ljmp
sub
sub
gs
stc
popa
sbb
icebp
mov
push
daa
lret
adc
mov
jb
ja
or
call
lods
in
cs
sub
aam
in
fisttpll
arpl
ror
xchg
insl
adc
in
xchg
add
shll
in
fisubrl
bound
iret
and
lock
fisttps
movsl
add
and
daa
and
add
xchg
aad
pavgb
mov
sbbb
jne
fstpl
or
rorb
int
pop
fdecstp
fildll
in
jne
xchg
xchg
mov
jno
xor
cld
sbb
and
shlb
shrb
xor
and
cmc
add
stos
fdivrs
xchg
inc
stos
imul
sbb
lea
ljmp
pop
fdivl
or
push
leave
int
dec
lea
nop
idiv
or
jmp
adc
inc
mov
push
loopne
mov
xor
sbb
xor
lods
aas
dec
xchg
dec
xchg
ja
fyl2x
cltd
push
pop
outsb
cmc
pop
out
fidivl
aaa
je
in
mov
mov
lods
cmp
add
dec
inc
shlb
mov
and
je
inc
faddl
adc
in
adc
xor
insb
push
popf
insb
fmull
inc
inc
iret
std
clc
sahf
inc
outsb
sub
in
push
inc
data16
dec
or
push
jae
rcr
daa
mov
ret
dec
mov
or
sbb
or
mov
gs
std
mov
test
testb
mov
jbe
push
mov
outsb
icebp
cmc
je
test
aam
loop
shl
int
cmp
add
pushf
sbb
out
mov
in
in
gs
dec
test
xor
gs
jns
adc
xor
lcall
pushf
sub
loopne
xor
fimuls
mov
push
sahf
mov
sub
aam
adc
push
mov
enter
jnp
out
jne
jp
pop
sbb
and
in
jno
pop
fsubl
jo
push
xlat
push
or
rcr
dec
dec
xor
sub
jg
mov
jno
push
mov
or
neg
popf
cmpsl
cmpsl
mov
adc
scas
push
fbstp
push
loope
daa
mov
lcall
xor
test
stc
or
pop
push
leave
xchg
icebp
fiaddl
xchg
jmp
scas
stc
push
push
xchg
lods
and
ficoml
pop
dec
fists
lods
shll
push
aam
mov
inc
cmp
xchg
push
xor
sub
cli
popf
mov
in
xchg
lret
shrb
pop
in
xchg
add
lret
shrb
add
xor
ja
fs
dec
sub
std
sar
adc
pusha
fistpl
clc
cmp
dec
inc
arpl
xor
push
sbb
mov
mov
ss
add
mov
push
pop
shr
repnz
mov
cmovs
out
repz
rorl
jb
test
lods
jne
xor
fs
je
mov
pushf
pop
xchg
out
xchg
ljmp
inc
jmp
cld
insb
out
cwtl
and
lock
adc
mov
popa
xor
mov
inc
pop
aad
jne
out
hlt
fstpl
imul
adc
fnstcw
std
or
jne
fmuls
or
jl
hlt
xchg
pop
mov
add
or
arpl
insb
data16
cmp
inc
add
jno
dec
jle
inc
fcoms
cmpsb
cmp
into
and
into
out
sbb
int3
xor
mov
lret
cmpb
fstpt
adc
fwait
ret
mov
loope
repz
or
xchg
adc
cmp
add
dec
mov
loop
mov
or
and
and
jno
jb
or
lcall
mov
inc
xor
and
and
lret
addl
sub
fistpl
cmp
pop
jl
sub
inc
mov
sbb
ud2
ret
out
test
xchg
cmp
jmp
int3
scas
inc
lds
cmp
mov
imulb
ljmp
or
ret
adc
mov
lahf
or
je
rcrb
or
mov
movsl
jnp
in
xchg
adc
jae
sti
inc
dec
adc
jns
and
mov
push
jb
pop
and
xor
sub
aam
imul
adc
repnz
aas
into
pop
jl
dec
cmp
pop
lea
xor
aaa
leave
sub
sub
cmp
sarl
pop
add
jno
cltd
adc
cwtl
int
mov
dec
int
sti
lret
lcall
mov
pop
les
cltd
xchg
out
in
or
ret
mov
xorb
daa
insl
cmp
iret
xchg
mov
dec
mov
dec
xchg
fnstcw
mov
xchg
mov
ret
xchg
gs
ret
test
sbb
out
xor
lcall
inc
sbb
mov
mov
sbb
adc
and
cwtl
mov
dec
sub
movb
push
xchg
and
scas
cmp
pop
mov
dec
scas
leave
push
adc
jp
and
repz
das
daa
sub
adc
movsb
leave
aas
lods
cmpl
jne
out
push
scas
xor
cmpsb
cmpsb
out
inc
fcmovbe
cmp
popa
sub
mov
es
adc
inc
popf
jns
out
cltd
shlb
int
ret
nop
jle
push
sbb
dec
xchg
mov
add
sahf
adc
mov
in
push
xchg
rcrb
shr
lret
or
out
ss
mov
mov
lea
sbb
push
jmp
mov
movsl
addb
dec
test
jnp
mov
or
adc
pop
pop
fistl
mov
pop
dec
mov
out
adc
sahf
scas
push
push
and
out
push
sti
pop
fs
sti
in
inc
or
ficoms
sbb
pushf
mov
and
scas
and
ds
cwtl
add
pop
int
dec
cltd
push
jmp
mov
out
rcrb
lods
sub
shl
mov
inc
cmp
xor
sbb
mov
mov
in
xor
mov
sub
sbb
dec
add
pusha
jbe
inc
pop
jb
jns
fdivs
jl
bound
cmpsb
out
xacquire
xor
jle
fisubs
test
inc
mov
mov
jecxz
stos
xor
neg
mov
push
lods
mov
dec
dec
add
pop
mov
sub
adc
mov
imul
or
clc
and
mov
jbe
hlt
out
push
push
dec
or
pushf
push
cvtps2pd
in
sbb
mov
call
pop
cmpsb
pop
ja
in
lcall
fwait
inc
mov
mov
mov
fwait
push
jae
push
adc
lods
mov
adc
sub
push
inc
push
mov
stos
pusha
inc
leave
cwtl
inc
mov
rcr
sub
ret
and
jle
dec
aam
add
insl
dec
loopne
push
jge
xor
jae
scas
push
popf
pop
mov
ds
rolb
mov
sbb
or
mov
insb
mov
test
inc
dec
aas
fdivl
xchg
mov
mov
lds
dec
adc
sub
push
jecxz
cmp
mov
xor
xchg
and
repnz
sub
gs
andl
cmc
cmp
dec
ja
adc
or
insb
shrb
push
xor
mov
mov
mov
fldcw
mov
lcall
dec
stos
inc
mov
push
and
sub
pop
das
pop
in
aad
es
mov
or
and
xor
loopne
mov
or
pop
fiaddl
loope
xchg
shll
jae
sahf
jb
mov
sub
sti
imul
pop
xchg
int3
aad
xor
mov
mov
mov
call
daa
aaa
xchg
fs
fistpll
imul
cltd
testb
jl
xor
xchg
jne
inc
jbe
pusha
dec
sbbb
dec
pandn
mov
inc
adcb
gs
mov
jp
popa
cmpl
mov
test
out
xor
movl
and
xchg
mov
js
inc
xchg
mov
hlt
jl
add
imul
jecxz
outsl
jo
in
das
lcall
xor
cs
repz
ret
lcall
test
xchg
or
mov
adc
testb
pop
mov
popf
test
or
int
jb
lock
jmp
shl
mov
aas
fst
jmp
push
cmp
mov
fsubl
test
je
jns
outsl
sbb
fld1
inc
int
lds
ret
loope
xchg
dec
repnz
and
iret
mov
ja
push
mov
lods
push
inc
xchg
and
pop
add
mov
add
push
sub
int3
imulb
enter
mov
inc
add
mov
mov
leave
sbb
push
inc
mov
leave
test
jb
cmpsb
fimull
dec
add
scas
addr16
das
cmp
cmp
ret
pop
cli
pop
cmc
scas
insl
cmp
sub
idivb
jno
jns
xor
inc
bound
xor
es
je
stos
clc
mov
ja
and
cmp
dec
xchg
pop
cmp
mov
lret
std
mov
jge
jg
push
sbb
jne
hlt
out
neg
movsb
cmp
popf
sub
mov
fiaddl
mov
scas
in
jl
popa
xorb
mov
inc
push
inc
sub
cmp
mov
sbb
sub
aas
call
xchg
pushf
dec
test
repz
and
adc
fwait
inc
cmp
nop
fs
xorb
shr
inc
int
and
test
es
loope
and
xor
rcr
inc
cmp
and
mov
lahf
sbb
lods
sub
push
lahf
jmp
dec
bound
xlat
and
sbb
lods
ds
inc
cmp
or
jmp
cmpsb
mov
test
pusha
into
jne
jno
imul
rolb
movsb
sti
sarl
mov
xchg
jo
and
dec
jne
aaa
pop
mov
add
or
leave
xor
orb
xor
cld
outsb
lds
inc
jmp
mov
inc
inc
iret
aam
aas
sub
int3
push
fisubl
sub
stos
push
dec
shll
inc
xor
adc
and
lods
insb
loopne
out
scas
repnz
nop
mov
inc
jecxz
cmp
pushf
leave
mov
inc
dec
mov
mov
in
push
push
push
stos
ret
or
add
sub
out
mov
cs
jno
movsb
testb
jg
hlt
mov
test
int3
lret
xchg
repz
cmp
dec
mov
pop
testb
adc
cmp
and
mov
mov
mov
cld
icebp
or
aad
leave
in
jbe
mov
dec
push
popa
ss
jg
mov
xor
lea
outsb
cmpsl
inc
test
clc
das
xchg
dec
enter
mov
arpl
imul
cmp
je
jmp
jno
iret
sbb
mov
popf
push
push
or
mov
sbb
stos
mov
cmp
adc
push
pop
loopne
call
repz
and
sub
call
loope
testb
push
ja
push
stos
xor
mov
jg
jbe
out
movsb
rolb
imul
mov
pop
and
dec
mov
jmp
and
mov
cmpsb
fnstenv
out
daa
lret
retw
hlt
cmp
outsb
mov
adc
repnz
movsb
pop
lcall
gs
pop
test
nop
cld
jg
sahf
dec
push
testb
xchg
ret
lods
push
aad
std
xchg
inc
push
cmp
jle
or
sti
sub
adc
fildl
int3
adc
inc
push
mov
cmpsb
std
ss
sahf
xchg
mov
test
add
loopne
jmp
inc
pop
fdivrl
jae
sti
lock
push
aam
iret
sub
add
cmp
jecxz
mov
mov
mov
sbb
sub
ret
lods
sbbl
jg
outsl
mov
arpl
pminsw
enter
and
pop
xor
repz
enter
lock
push
sub
inc
pop
jnp
imul
inc
ljmp
jb
lods
inc
faddp
mov
dec
incl
sar
or
sbb
mov
cmp
fbstp
sub
pop
xchg
jecxz
in
xchg
fildll
ljmp
addl
movsb
add
push
clc
cmp
clc
mov
loop
mov
js
lcall
cs
and
stos
sahf
jecxz
imul
pop
sbb
scas
inc
mov
fwait
pop
int3
cmp
or
stc
fisubrs
arpl
inc
test
lock
xchg
scas
and
fldl
add
push
sbb
repz
arpl
xchg
xchg
dec
push
mov
out
rclb
shl
mov
mov
or
lods
in
jle
mov
nop
cltd
xchg
fcomp
sbb
lcall
les
xor
into
xor
cmpsl
fisubrl
cltd
adc
ficompl
dec
movsb
push
div
mov
lock
repz
stos
mov
fstpl
das
push
sbb
pop
and
loop
adc
xchg
adc
ds
int3
or
dec
mov
movsb
mov
aam
sub
leave
mov
pop
ja
adc
loope
cmpsl
pop
mov
cmp
dec
jnp
add
jmp
push
pop
dec
fwait
dec
sub
sub
out
push
in
mov
jne
jb
ds
shrb
add
jae
repz
loop
mov
mov
lahf
aas
movsl
sarl
lods
outsl
imul
dec
jge
xorl
cmc
inc
dec
inc
or
mov
cmpl
cmp
sbb
mov
add
and
ss
cld
jne
clc
daa
in
iret
jmp
xchg
nop
pop
push
addr16
imul
adc
in
or
daa
pop
or
imull
ljmp
adc
dec
daa
adc
imul
mov
cld
jmp
std
ja
dec
mov
rorb
lret
mov
sti
push
xor
gs
je
add
aaa
mov
inc
shl
jp
cmpsb
mov
sbb
fcomp
lcall
sarl
mov
xchg
outsb
loopne
mov
pop
pop
xchg
add
mov
les
xchg
cmp
fnsave
adc
push
cmp
xor
ljmp
lods
xor
sub
mov
pop
sti
test
jp
push
push
mov
or
pusha
shll
inc
and
ljmp
test
test
mov
int3
sahf
jno
mov
jae
and
adc
je
insb
lock
xchg
in
sub
mov
pop
fcmovnu
sahf
xor
loopne
jecxz
cltd
pop
out
jns
dec
lods
out
lret
or
mov
mov
fs
adc
repnz
cmp
arpl
lcall
pop
and
in
push
inc
test
push
lret
xchg
sub
push
and
stos
inc
mov
out
sub
inc
sub
je
cmpsl
adc
ret
and
cmp
loop
or
mov
imulb
movsb
fwait
xor
gs
add
fcmovne
jecxz
addr16
pop
adc
insl
in
mov
out
pop
repz
cwtl
int
ss
jae
dec
ljmp
or
jl
js
push
aaa
xor
stos
cmc
daa
xor
xchg
cmp
test
into
aad
sub
ret
dec
out
cmpsl
push
ljmp
jg
pusha
test
dec
scas
dec
jns
repnz
dec
gs
add
rcr
inc
push
aas
mov
mov
scas
pop
aam
fmulp
ret
xchg
mov
gs
mov
repz
add
and
into
movsl
in
jmp
aaa
dec
cld
jbe
clc
seta
adc
shll
daa
in
inc
repnz
xchg
mov
mov
push
nop
add
xor
add
add
xchg
fimull
add
mov
pop
jbe
or
pop
xchg
outsl
decl
pop
enter
fiadds
xchg
sahf
cmp
sbb
mov
mov
in
repnz
push
dec
sub
add
push
arpl
stc
adc
cmc
jmp
push
dec
testl
inc
call
je
xchg
mov
sbb
mov
inc
jno
testb
shll
xor
addb
nop
fs
adc
dec
hlt
test
mov
mull
and
cltd
and
push
sub
push
pop
and
cld
add
pop
cwtl
lret
push
mov
aas
outsb
daa
add
xor
popa
cmc
jge
sbb
or
push
xor
dec
xchg
dec
in
js
dec
sbb
stc
jle
or
in
adc
in
clc
mov
addr16
xor
inc
subl
or
cli
sbb
mov
mov
inc
pop
xor
les
outsl
fcomps
inc
lea
arpl
cmp
test
loope
cmp
js
ds
jnp
scas
jecxz
add
jbe
jae
in
lret
pop
sahf
cmp
push
cmp
jle
push
daa
adc
mov
and
mov
repnz
jnp
or
scas
push
mov
mov
out
adc
pusha
adc
cmp
push
mov
jno
cmp
and
out
mov
mov
loope
lahf
popa
push
push
xor
bound
adc
xor
push
out
push
lret
clc
outsl
faddl
sub
sub
inc
mov
lock
int
push
out
es
mov
arpl
ror
push
mov
jmp
cmpsb
mov
xchg
cmp
daa
xchg
es
and
stos
push
mov
and
mov
out
repnz
mov
sbb
lods
add
stos
jne
push
and
data16
mov
mov
subb
popl
mov
push
jb
ja
or
add
insl
cmp
and
les
mov
iret
into
push
push
push
xor
mov
movsl
or
repz
imul
xlat
mov
push
push
dec
pop
in
add
cld
or
shrb
add
jne
pop
fs
into
daa
cmpsb
clc
xchg
or
jb
cltd
add
aas
mov
shl
insl
fimuls
cs
aas
in
or
stos
mov
ret
jmp
push
dec
mov
cltd
pop
pop
inc
popl
fidivs
xchg
loop
jne
jo
js
gs
pop
jnp
mov
adc
aad
in
cwtl
fstpl
ss
pop
push
les
in
jg
aaa
test
pop
sarb
ror
mov
das
repnz
fs
dec
mov
aaa
jecxz
adc
pop
xor
dec
push
dec
push
in
jns
sbb
fwait
sub
and
sarb
add
and
data16
lret
xchg
xor
mov
mov
push
shl
test
jmp
xchg
rorb
fwait
add
xor
or
xchg
icebp
imul
cmp
xchg
fsubrs
iret
jmp
pop
jbe
out
sub
cmpsl
pop
push
cmp
xchg
cmc
mov
jmp
xchg
add
dec
adcb
aaa
repnz
jp
imul
in
push
pop
xor
hlt
or
popf
pop
cld
in
adc
xchg
fdivrp
pcmpeqd
sti
imul
xor
pop
dec
jp
push
dec
xchg
xchg
ror
inc
loop
dec
enter
xchg
je
mov
add
sti
adc
stc
add
mov
popf
pop
insb
in
adc
in
adc
outsb
mov
stc
in
xor
fcmovu
or
call
ja
aad
ffreep
imul
jae
loope
xchg
enter
test
inc
pop
dec
adc
inc
adc
pop
dec
pop
lcall
sub
hlt
fwait
lds
ds
jb
repz
pop
inc
cli
push
or
fsts
cs
mov
out
or
pop
xchg
enter
aaa
jne
test
data16
and
or
xor
call
cmp
cmp
rclb
popf
dec
out
dec
sbb
divl
pop
sub
mov
jnp
push
lcall
jne
or
mov
out
test
dec
sub
sub
lahf
xor
inc
push
xor
outsl
inc
mov
loop
lods
inc
arpl
int
dec
jnp,pn
pop
lock
insl
fcomi
ss
pop
aam
push
jmp
pop
cld
push
sub
xlat
enter
xor
jne
mov
repz
xchg
dec
push
stos
xor
insl
or
lds
and
stos
add
add
sti
xchg
xor
fcomps
out
mov
out
je
in
adcl
js
inc
mov
in
aas
test
mov
adc
repz
push
and
jmp
sub
and
int3
cmp
dec
and
jb
stc
dec
sub
sbb
xchg
push
mov
mov
push
cmp
pop
dec
mov
inc
aam
add
dec
add
push
adc
jbe
mov
pop
ror
bound
icebp
sbb
outsl
dec
inc
scas
out
loop
sar
mov
shll
mov
xchg
sbb
adc
repz
ja
outsb
cli
outsb
icebp
mov
or
stos
sub
ds
sub
mov
push
push
xor
sub
xlat
test
jno
jne
mov
jne
sti
cs
mov
adcb
jp
stos
dec
out
sbb
sbb
jae
push
out
or
push
sub
or
pop
inc
icebp
jno
pop
imul
sub
sub
std
xchg
add
call
mov
push
dec
push
cmp
cmpsb
add
test
push
stc
and
push
pop
lfs
jle
ds
mov
xchg
push
lahf
push
stos
push
fbld
popa
lea
dec
fnstenv
dec
test
pusha
popf
rol
aaa
pop
inc
cwtl
or
fwait
in
cld
adc
sbb
lods
ds
jg
sbb
jmp
insb
fwait
add
repz
rcr
sub
jge
movsl
cltd
and
out
mov
push
sub
lock
sbb
mov
or
mov
imul
xchg
mov
pop
sub
xchg
push
push
push
pop
dec
or
add
inc
xor
and
mov
sar
xor
cwtl
imulb
cmp
das
xchg
add
insl
mov
out
mov
lret
mov
jo
push
push
cmp
lods
mov
pop
nop
sub
iret
sub
add
cmp
add
mov
shrl
leave
or
test
fwait
mov
inc
pop
arpl
add
aaa
or
pop
mov
fsubl
push
repnz
xchg
or
sbb
aam
add
sub
stc
jb
test
jge
ror
and
add
cmp
cmc
lcall
outsb
xchg
jmp
pushf
xchg
imul
insl
jbe
xchg
push
out
sahf
xchg
faddl
into
sbb
daa
pop
lahf
mov
inc
fcmovb
mov
imull
jl
sbbl
xor
fmull
mov
adc
pop
sub
push
pop
mov
mov
popa
and
mov
rorb
aas
dec
orb
imul
pop
jns
inc
fwait
adc
lock
insb
in
jecxz
xor
cmp
sub
sbb
and
mov
lret
adc
mov
cmp
stc
arpl
loop
cmpsb
lgs
ja
add
jl
lahf
xor
adc
xor
mov
xchg
cmp
dec
mov
pop
add
aaa
mov
fstpt
mov
or
mov
ja
xchg
push
out
add
test
mov
popf
xorl
inc
sub
mov
test
sbb
mov
addb
lock
push
std
dec
pushf
push
push
add
aas
repnz
cltd
sahf
jmp
cmpsb
flds
scas
in
cwtl
orb
pop
lret
sbb
mov
mov
in
xlat
lret
dec
jle
jno
pop
scas
pusha
xor
sub
or
call
sbb
arpl
std
in
mov
shlb
dec
fistpl
cmp
outsl
add
pop
fadds
test
sbb
leave
mov
fidivrs
mov
rorb
xor
pop
inc
lcall
imul
inc
sub
test
jns
add
dec
inc
lret
or
rolb
pop
mov
xchg
cld
divb
jle
sub
ffree
or
in
insl
push
xchg
sti
sti
adc
cltd
in
cli
ds
mov
sbb
insb
ss
lcall
lcall
stos
add
fimuls
cld
aam
sbb
jle
jge
inc
sbb
mov
mov
jae
enter
aam
lock
mov
stos
out
mov
loope
adc
ror
inc
adc
inc
mov
in
mov
mov
cmc
fcoml
or
sbb
lret
dec
cmp
jmp
aas
leave
shrb
pop
add
push
or
js
std
lea
sub
cmp
test
pushf
adc
rcrb
pop
in
mov
pop
icebp
adc
cmpsl
into
xor
outsl
je
pusha
inc
aad
jp
test
shl
fnstsw
bound
push
lahf
rolb
dec
pop
in
jmp
pop
gs
das
cltd
scas
mov
sbb
lret
push
push
cld
test
std
call
jg
iret
xchg
mov
pop
add
popa
clc
ds
mov
xor
xchg
pusha
jge
sbb
inc
pushf
fnstcw
dec
mov
inc
mov
add
mul
mov
jle
insl
pop
enter
mov
xchg
stc
push
orb
sbb
jae
mov
or
aad
pop
int3
and
cmp
jl
adc
and
cld
ret
lea
outsb
push
into
ja
add
shll
or
xchg
adc
dec
adc
mov
in
mov
ja
jle
pop
cmpsl
or
sub
es
dec
shl
sub
ret
and
xchg
lods
or
iret
fsubp
mov
cmp
mov
pop
adc
filds
fwait
xchg
in
loop
fstpl
fdivrl
bound
dec
jne
fisttpl
xchg
aad
loopne
in
call
ljmp
ljmp
and
testb
push
in
or
xor
xchg
and
pop
mov
xor
cmpb
dec
or
xchg
pushf
dec
cmpl
mov
add
popl
adc
test
nop
and
pop
popa
sub
pop
cmp
inc
mov
fcmovu
les
lea
dec
adc
xor
test
pop
cmp
mov
xor
dec
jg
mulb
cmp
push
mov
ret
fs
imul
ss
sti
ret
clc
mov
mov
cwtl
adc
cmp
adc
lock
dec
es
pop
imul
fldln2
pop
stos
inc
scas
loopne
aam
icebp
sahf
cmp
xchg
in
scas
out
xor
pushf
dec
xor
jmp
pop
addr16
pop
fsubr
insl
rcr
adc
mov
jbe
mov
sub
or
mov
or
cmp
addr16
mov
ljmp
scas
xchg
je
fadd
push
insl
cld
jno
out
jmp
int
clc
dec
rorl
jmp
xor
sbb
mov
sub
pop
cmp
int3
add
lcall
and
xor
ficoml
mov
mov
fstpt
ja
fbld
inc
daa
push
pop
cmp
pusha
data16
lods
fucomp
cwtl
jnp
dec
pop
hlt
sarl
xor
pop
sbbb
int
insb
fnstenv
dec
jo
mov
mov
push
test
jb
mov
push
xchg
int3
mov
fstpt
inc
clc
mov
cwtl
cmp
inc
xchg
test
cmp
xor
fidivs
cmp
jmp
mov
js
shll
xor
cmc
movsb
stos
sbb
or
js
sahf
push
sub
sbb
in
adc
lods
xorb
mov
scas
xor
sti
int3
jge
ja
adc
xchg
mov
cli
cmp
cmp
push
leave
ss
jns
pushf
test
inc
jno
in
and
xchg
inc
push
scas
mov
dec
sub
add
jae
xchg
insl
adc
test
shl
ja
mov
add
fmuls
mov
mov
fnstsw
je
jbe
push
or
push
sbb
sub
insb
push
inc
fwait
and
outsb
sti
popf
lods
movsb
lahf
push
into
jo
mov
xchg
jge
scas
mov
testl
xchg
xor
pop
or
push
sbb
fwait
sbb
nop
je
sbb
fcoml
gs
fs
dec
adc
dec
jmp
mov
sbb
mov
mov
dec
aam
mov
cld
test
loop
test
xchg
inc
sub
add
das
sub
sbb
insl
jbe
repnz
mov
jl
xor
fsubl
mul
test
int
mov
push
in
in
scas
js
jp
adc
inc
sub
jg
imul
jnp
mov
in
imul
ret
sub
nop
movsl
xor
push
sbb
je
pop
movsl
jge
sub
xchg
and
cmp
and
addb
stos
dec
in
loop
lods
and
cltd
fsubl
push
mov
jae
pop
fsubrs
dec
sbb
add
insb
popf
mov
inc
dec
movsl
sahf
xchg
int
xor
cmp
or
cwtl
mov
mov
ret
out
cmpb
movsb
lret
fs
cld
pop
lea
fldl
lahf
and
mov
hlt
test
cmp
sub
lods
cmpsl
add
lods
push
push
xchg
ja
xchg
lock
nop
mov
sub
push
mov
int
iret
cmc
enter
outsl
push
in
mov
jne
xor
push
aaa
jecxz
lret
outsl
jmp
in
sub
dec
mov
mov
lea
mov
xchg
aas
cmpsl
shlb
and
lret
sub
jo
lcall
popf
push
and
pusha
add
jle
cmp
lods
jmp
sbb
add
cmpsb
test
fwait
jg
int3
sbb
shll
test
add
test
mov
jno
addb
add
lock
rorb
lahf
mov
out
shll
adc
and
mov
push
add
pop
xlat
mov
cli
xchg
out
sbb
in
lea
rorb
xchg
xor
fldl
fs
iret
and
test
mov
outsb
dec
pop
cmp
nop
xchg
sub
addl
jg
xchg
xor
sti
pop
mov
adc
sbb
inc
shrb
loope
push
ret
xchg
and
mov
rcrl
imul
pop
test
scas
mov
iret
test
jo
es
enter
roll
sub
mov
inc
or
xor
sub
jns
test
iret
js
sbb
sub
call
fs
or
lods
mov
test
jl
mov
dec
add
sbb
add
pop
popa
cmc
push
hlt
sbb
imul
xchg
repnz
push
outsb
daa
xor
mov
cmc
push
xor
sbb
sarl
sbb
sarl
cltd
dec
jne
push
pop
enter
repnz
xor
call
filds
xchg
xor
xchg
jo
jmp
aaa
fdivl
push
mov
push
test
dec
xor
sbb
jns
fcompl
dec
mov
ds
ret
shrl
mov
or
xor
sbb
fwait
sub
sti
repnz
dec
outsl
fs
or
mov
aas
dec
sbb
in
add
in
mov
movsb
inc
and
pop
fisubrl
ds
andb
dec
jnp
mov
out
xchg
rep
pop
pop
pop
jbe
nop
stos
mov
jbe
loopne
or
cmp
scas
jnp
jl
dec
mov
sbb
cmpsl
xor
sbb
and
cmpb
add
insb
mov
jmp
cmp
dec
hlt
aas
pushf
or
outsb
cmp
imul
lock
inc
cli
fs
test
dec
xor
int
aaa
jne
das
stc
stos
imul
push
data16
push
stos
xor
cwtl
xor
xchg
shrb
adc
mov
js
pop
arpl
pushf
in
xor
clc
dec
pop
lods
add
or
mov
push
jbe
cltd
sub
es
inc
aas
jne
push
xor
ja
lret
fs
movsl
push
imull
mov
sub
jmp
aad
or
sbb
add
xlat
in
lcall
daa
push
adc
mov
jge
int
push
xorl
push
pop
outsl
les
rclb
push
popf
push
cmp
dec
cmp
mov
loope
das
push
cmpsb
sbb
cmp
xchg
andb
sbb
mov
jp
cmp
fwait
mov
sub
push
ljmp
gs
add
icebp
cmp
ljmp
fsubp
arpl
adcb
mov
push
imul
shll
int
adc
inc
push
fwait
add
shrb
mov
add
push
mov
cmp
add
test
loop
xor
inc
push
jmp
mov
push
scas
sbb
dec
xchg
jmp
dec
adc
popf
mov
dec
insl
filds
adc
out
out
test
movb
mov
xor
lods
xchg
movl
push
push
test
loope
mov
add
in
inc
cmp
fists
aaa
xlat
push
in
mov
jmp
invd
fiaddl
sbb
sbb
out
jl
adcb
js
loopne
movsb
flds
push
sub
xchg
test
jno
lds
xchg
gs
xchg
jo
xlat
jecxz
cld
stc
insb
and
test
adc
mov
imul
mov
push
scas
and
mov
cmc
adc
xor
shlb
pop
xor
pop
jecxz
fistps
and
int
sub
and
cli
lahf
and
test
fldl
or
mov
push
jno
fidivs
fnstsw
adc
dec
mov
das
pop
mov
aad
arpl
clc
add
ss
mov
scas
sahf
enter
mov
pusha
out
push
std
js
adc
pop
test
popf
sub
sbbb
mov
lahf
mov
cmp
jle
sarl
push
call
pop
repz
add
rcl
inc
nop
and
sahf
jb
pop
and
leave
cmpsl
out
push
jo
daa
scas
shl
enter
mov
sub
mov
in
xchg
stc
out
inc
inc
jl
pusha
scas
xor
jg
and
or
and
jne
ss
xchg
push
insl
adc
bound
cmpsb
out
ret
loope
jge
lret
ret
dec
iret
movsb
out
ljmp
and
sub
out
bound
pop
dec
addr16
xor
sarl
aas
xor
jo
push
out
imul
fsubrs
push
mov
mov
test
or
inc
dec
pop
bound
jns
jecxz
test
ljmp
xorl
mov
jl
xor
daa
push
sub
dec
bound
hlt
xchg
fdivl
sub
xchg
ds
push
or
inc
cwtl
std
sub
push
jbe
std
and
and
jp
adc
sbb
imul
adc
jg
adc
andb
xchg
pop
shrl
dec
cmpsl
imul
sub
push
ljmp
cmp
lock
insl
mov
js,pt
dec
pop
fsubs
jnp
or
mov
fldt
mov
xlat
jb
outsb
outsb
or
jnp
mov
pop
xlat
ljmp
ds
mov
inc
nop
inc
xchg
dec
add
lods
lods
adc
cs
push
lea
shlb
and
enter
mov
out
jg
jne
push
lahf
js
dec
jo
mov
popa
pop
fistps
push
xor
test
sub
adc
int3
loope
xchg
lret
pushf
and
fnstenv
add
scas
inc
push
or
andl
xchg
push
cmp
jge
sbb
andl
shlb
push
fadds
rorl
jecxz
andb
in
stos
mov
fcomps
mull
dec
jp
sub
addl
fidivrl
lock
in
hlt
push
sbbb
sbb
mov
add
arpl
cmpb
sub
push
push
xor
xor
cmp
or
jge
sbb
icebp
push
inc
jecxz,pn
adc
jnp
cli
lahf
push
jnp
ret
lcall
je
fwait
fimuls
push
ficoms
loope,pn
scas
hlt
xchg
loop
xchg
fsub
dec
xchg
mov
gs
pushf
xor
adc
sbb
push
int3
dec
dec
jb
ret
mov
pusha
scas
scas
imul
stos
aas
in
pop
and
dec
movsl
les
aad
sahf
lods
daa
jmp
and
pop
push
xchg
into
lret
mov
xchg
sbb
jg
aad
push
pop
mov
insl
lds
lea
mov
leave
lea
jbe
xchg
popa
push
xchg
mov
sub
iret
hlt
and
and
mov
nop
int
sbb
cli
mov
insb
pusha
push
ret
inc
enter
repnz
sbb
mov
fsts
fisubs
insl
fwait
stos
aam
frstor
pop
ja
dec
js
xlat
mov
rolb
pusha
movl
cmp
clc
push
mov
mov
jg
add
popf
bnd
mov
adc
scas
hlt
scas
in
stos
loope
xor
push
xor
ror
inc
sub
add
push
das
data16
outsb
repnz
mov
cmpsl
adc
and
rclb
inc
negl
cs
adcb
xchg
mov
movl
and
jno
mov
lret
pop
jno
aas
or
cmp
int
repz
ret
xchg
cltd
addl
push
jle
in
test
ja
mov
test
andb
adc
dec
lock
mov
gs
sub
nop
or
neg
xor
xchg
jecxz
dec
inc
jecxz
mov
xor
jmp
sub
out
sahf
push
pop
sbb
adc
sub
xor
addr16
jge
mov
loope
out
sbbb
sarl
stc
xchg
mov
dec
mov
mov
sarb
adc
cmc
adc
mov
popf
test
das
jle
mov
xor
mov
clc
sbbl
sbb
xchg
adc
stos
mov
lcall
notb
sbb
xor
xor
leave
fistl
popf
pop
mov
shrl
pushf
jl
out
push
lret
or
pop
movsb
cwtl
mov
mov
scas
mov
xor
ficompl
or
adc
test
mov
inc
lds
cmp
lock
mov
ret
jae
add
das
lea
test
jl
daa
int3
roll
jae
mov
jecxz
adc
fisubrl
dec
and
sub
loopne
repz
lock
pop
mov
inc
pusha
popa
fnstenv
cmp
push
or
sbb
jmp
inc
sti
push
xor
cli
sub
fdivrs
and
lret
sub
gs
cwtl
cmp
xor
inc
sbb
push
sub
pop
fisubrs
mov
lock
sub
xor
rcr
mov
in
int
xchg
cmp
dec
rcrl
cld
cmp
lds
inc
mov
icebp
in
dec
add
pop
and
das
and
adc
pop
dec
xchg
stc
xchg
and
xor
shrl
sub
jns
addr16
mov
lds
mov
enter
data16
stc
fimuls
xor
dec
sahf
push
in
outsl
xor
pop
adc
jl
inc
pop
outsb
push
out
test
jae
mov
imul
and
sub
dec
std
cmp
push
pop
movsb
push
push
aad
fildll
pop
ljmp
mov
sub
mov
cmp
sbb
and
dec
aad
push
js
int3
mov
mov
dec
mov
rol
mov
daa
push
loopne
xor
lahf
lods
jl
or
inc
mov
pop
mov
push
xchg
mov
sahf
push
push
fmuls
pop
add
add
out
les
add
insb
lcall
loope
sahf
mov
xor
leave
push
jl
add
push
push
cmp
push
push
mov
mov
jg
stos
test
inc
inc
xchg
in
aas
je
mov
inc
mov
sbb
test
push
stc
shrb
cwtl
aas
or
leave
jb
flds
push
push
xchg
sahf
insl
jo
pop
mov
jnp
mov
push
and
cli
jo
cmp
loopne
or
mov
leave
mov
sub
imul
in
fstl
mov
es
mov
sbb
pop
testl
push
in
add
add
imul
int3
mov
ds
jae
pop
sbb
fildll
adc
cmc
push
into
push
loopne
mov
inc
pop
jo
xchg
fistpll
adc
sub
lret
call
xor
cmp
and
repnz
test
dec
sub
inc
bound
mov
xchg
adc
push
stos
pop
popf
mov
push
or
lahf
dec
in
jns
inc
stc
xlat
arpl
incl
cmpsb
xchg
push
jno
xchg
imulb
ret
lret
mov
lret
jb
ljmp
lcall
scas
lea
out
inc
inc
clc
xchg
es
lds
and
out
jmp
mov
lea
fadd
jecxz
sbbl
int3
adc
loope
and
add
es
mov
mov
add
fs
xor
add
lea
arpl
and
imul
lea
mov
pushf
call
cs
sbb
jle
mov
pop
push
int
pop
sub
lahf
aad
add
rclb
sub
mov
jp
test
sub
inc
fistl
fisubrl
jnp
insl
inc
mov
in
mov
aaa
insb
lret
divl
outsl
push
loop
rsm
sbb
xchg
ja
mov
xchg
cmp
test
lret
mov
cmpsl
repnz
movsb
fwait
in
lds
orl
inc
jp
out
clc
and
aam
popf
inc
mov
add
outsl
mov
mov
repnz
xor
notb
jae
aad
jns
pop
pop
das
scas
cltd
mov
out
push
push
nop
repz
ja
dec
cwtl
and
dec
push
cmpsl
push
push
inc
pop
adc
xor
lea
mov
arpl
shrl
mov
pop
in
pushf
add
jmp
add
cwtl
test
push
mov
jae
outsb
leave
xchg
ror
pop
mov
sbb
sub
loopne
test
pop
pop
cmp
dec
pop
mov
push
add
out
add
and
add
add
in
adc
mov
inc
xchg
xchg
out
sbb
rcr
aaa
aas
insl
aaa
jge
cmc
pop
pop
adc
fildll
pop
stos
jmp
jns
dec
xchg
test
std
mov
js
ljmp
rcr
xchg
cmpsb
sbb
scas
mov
push
call
popa
gs
push
lahf
rclb
sub
jnp
and
pop
ljmp
aas
adc
xchg
mov
jl
das
pop
push
popf
out
pop
adc
adc
mov
push
sbb
out
xor
jecxz,pt
leave
cld
out
mov
and
jecxz
mov
in
in
push
cld
inc
sub
mov
xchg
das
fistl
sbb
pop
pushf
mov
inc
mov
xor
sub
testl
js
push
lods
sarl
fucomp
es
jnp
incb
fistps
pop
xchg
xor
xchg
fwait
xor
lret
add
xor
int3
ljmp
add
ret
pushf
ja
aad
adc
arpl
clc
fcompl
cmc
jb
out
sar
dec
or
inc
std
dec
push
enter
fiadds
mov
fisttpll
fistps
pushf
and
xor
enter
outsb
add
or
pushf
ret
adc
cmp
mov
adc
mov
ds
loope
push
out
mov
xlat
lods
mov
or
xchg
xchg
sub
xlat
push
push
dec
fwait
stos
data16
mov
xor
or
cmp
shll
int
inc
jmp
cmc
cli
testl
xchg
insl
add
and
cmp
cmc
xchg
gs
inc
push
je
scas
test
and
mov
pop
cmpsb
xor
mov
cmp
sbb
lock
outsb
in
xchg
pop
fwait
adc
or
enter
stos
mov
dec
ljmp
mov
sbb
mov
lods
out
and
lock
mov
cli
insb
and
and
push
inc
fstpl
test
dec
enter
xlat
sub
adc
insl
dec
mov
insb
push
pop
hlt
int3
je
std
fidivl
xchg
adc
mov
mov
out
in
cli
mov
jae
cmp
mov
imul
and
add
xor
xchg
dec
or
shrl
inc
add
mov
mov
ret
sub
icebp
xlat
test
xchg
or
xor
xchg
aaa
sub
int3
pushf
mov
in
je
jmp
into
movsl
sub
pop
push
enter
aad
adc
fs
push
inc
icebp
outsb
cmp
jle
or
stos
push
ret
jecxz
lret
test
ss
in
cmp
pop
adc
xor
inc
xor
fildll
xor
xchg
adc
push
outsl
xor
mov
aas
aam
cmp
inc
jnp
pop
mov
pop
les
out
out
popf
jle
icebp
mov
test
mov
in
mov
scas
imul
and
jle
fistl
xchg
mull
mov
xor
jp
mov
lea
and
pop
test
push
lcall
mov
inc
loope
loopne
call
xchg
sbb
ja
jae
js
into
sbb
jmp
cwtl
push
dec
pusha
mov
jno
and
dec
and
xchg
and
icebp
out
ficoml
inc
jbe
mov
or
mov
pop
mov
rolb
pop
mov
fisttpl
fimull
enter
das
repz
cmp
mov
int
imul
and
jb
js
add
ds
fdivl
pop
jp
rcrb
nop
push
imul
call
lahf
push
mov
pop
sub
jl
fisubs
jl
cwtl
fs
pop
or
cmp
xor
dec
and
mov
cltd
rol
shll
pop
dec
lahf
cmpsl
addr16
movsl
ret
sbb
test
int
pop
xor
into
xlat
inc
aam
test
mov
pop
popf
loopne
gs
jge
in
cmpsl
cmp
inc
mov
notl
dec
ds
cmp
outsb
sub
jae
hlt
lods
addb
mov
push
pop
iret
loopne
jp
mov
insl
mov
cmpsb
das
lret
cltd
shll
jbe
lods
sbb
sub
push
adc
adc
jge
sbb
cld
imul
cmp
mov
sbb
inc
repnz
inc
push
sub
sbb
mov
mov
loope
mov
push
stos
mov
jecxz
dec
mov
push
sub
jge
adcb
subb
or
push
xchg
mov
sarl
mov
xchg
add
outsl
cmp
push
xor
inc
mov
in
in
mov
mov
hlt
jmp
adc
dec
lea
cwtl
stos
clc
sti
pushl
fiadds
mov
adc
cmp
xor
mov
mov
sbb
inc
push
popf
xor
cs
mov
adc
pop
scas
and
je
icebp
dec
xor
jl
cmp
imul
add
sti
sbb
pop
pop
mov
icebp
pop
rol
rorb
aas
or
stc
imul
or
and
or
push
sbb
out
add
cwtl
push
shl
out
sub
ljmp
xor
das
jl
pop
flds
xchg
loope
fs
mov
mov
or
xor
mov
les
add
sub
das
js
or
and
push
cmp
frstor
jl
dec
dec
mov
popa
mov
xchg
mov
dec
es
pusha
and
add
out
xchg
popf
hlt
dec
inc
int3
fists
in
mov
add
sbb
mov
sub
repz
xor
sbb
xchg
mov
stos
lcall
movsl
inc
outsl
test
out
pop
and
jno
inc
push
out
pop
jae
xchg
or
lock
lret
adc
mov
call
add
jno
xor
xchg
xchg
dec
push
add
loop
shrl
add
pop
mov
dec
imul
xor
fs
imul
add
mov
lods
mov
daa
mov
mov
xchg
faddl
test
push
mov
jb
sti
shrl
fistl
sarl
dec
repz
jmp
enter
lock
xor
or
jae
lahf
jmp
mov
cmp
js
push
cmp
imul
mov
add
out
popa
cmc
scas
push
inc
cmp
and
push
xor
int
es
mov
cmp
mov
xchg
filds
or
in
test
cmp
inc
xchg
push
test
in
int3
adc
pop
lret
cmpb
cmpsb
cmc
lret
lret
lret
outsb
hlt
iret
pop
xlat
pushf
and
xchg
jecxz
mov
jne
cltd
in
enter
mov
xchg
mov
pop
jbe
sbb
cli
fisubl
add
sub
mul
movsb
inc
aam
mov
idivb
int
mov
lahf
out
enter
ficoml
shrl
xor
push
push
int
push
mov
lds
or
lods
bound
imul
jp
adc
mov
xor
xchg
pushf
xchg
imul
push
inc
out
pop
sub
mov
clc
xlat
mov
xor
xlat
into
dec
pop
add
mov
aas
lcall
mov
and
call
fiaddl
dec
mov
and
inc
xchg
push
in
pop
dec
data16
ror
je
fnstcw
and
sahf
leave
andl
and
pop
repnz
in
xor
push
sub
xchg
inc
adc
sub
push
fildl
mov
cmp
inc
mov
xchg
xchg
pop
add
cs
mov
lahf
out
mov
in
jmp
insb
add
rcr
out
push
jns
inc
out
popa
mov
push
scas
bnd
add
jge
mov
jg
cs
shrl
sarb
outsl
loope,pt
xchg
or
outsl
xor
test
fiadds
sbb
dec
in
shr
xor
sbb
outsb
mov
inc
pushw
and
xchg
scas
pop
adc
and
xchg
rcll
inc
imul
sar
imul
dec
out
cmp
rorb
xchg
call
mov
cs
cmp
stc
loop
fs
xchg
jmp
xchg
pop
fstp
es
lods
dec
cmp
pop
nop
xchg
cmp
mov
jecxz
lahf
jl
pop
push
aad
popl
setno
xor
cmc
rcr
call
lcall
cld
dec
in
arpl
psubw
outsl
jns
mov
fcomip
repnz
sub
inc
pop
xor
aaa
cmpsl
sbb
sbb
cmp
xchg
sbb
shlb
jae
fmull
xlat
dec
clc
adc
xchg
mov
pop
cld
outsb
loop
stc
jmp
mov
ret
jl
adc
xchg
jmp
mov
ss
mov
inc
and
pop
xchg
mov
test
fisubrl
in
push
outsl
jno
in
rcl
or
xchg
xlat
addb
push
cmp
sbb
cmp
xor
push
jle
dec
add
push
pop
jo
jg
xchg
mov
dec
xchg
pop
sub
shl
out
ljmp
ds
mov
inc
xchg
xchg
sar
adc
jno
scas
ss
or
sub
xor
loopne
pop
jns
sbb
cmp
test
cli
in
cltd
repnz
pop
test
cmpsb
xchg
mov
adc
adc
mov
push
into
test
cmc
imul
jnp
mov
xchg
inc
sub
mov
cwtl
mov
in
pop
in
or
popa
push
test
add
xor
call
ret
inc
and
mov
movsl
inc
clc
xchg
push
cmp
daa
mov
dec
aas
jnp
cs
adc
add
fisubs
aas
push
sub
mov
cld
jo
sbb
aam
scas
negb
insl
xor
lods
ds
mov
jle
add
gs
in
incl
mov
and
mov
outsl
cmp
mov
xor
cmc
cmpsb
xorl
fwait
js
mov
cmpsl
cltd
fnstcw
push
xchg
es
out
push
cmp
out
mov
push
jbe
and
iret
mov
insb
cmp
repz
cmp
jne
jb
xchg
mov
std
cmp
cli
pop
test
and
mov
stc
jp
lret
imul
mov
adc
jle
sub
nop
fistps
dec
lret
addr16
dec
sbb
sahf
out
adc
or
fldt
push
test
adc
popf
and
cltd
xorb
adc
pop
sbb
bound
cmp
daa
sub
fucom
stos
mov
cmc
push
pusha
jp
mov
sub
mov
push
cmp
dec
shlb
dec
bound
mov
cmp
faddl
loope
inc
ret
or
xchg
and
and
push
pop
fs
ss
mov
les
ljmp
cmp
int3
cld
in
nop
cltd
std
outsb
icebp
pusha
sbb
mov
push
out
xor
or
in
and
jle
insb
sub
mov
jmp
dec
pop
sbb
cmp
fwait
dec
lar
jge
pop
cmp
mov
pop
jo
mov
inc
int3
jne
xchg
sub
test
fldl
mov
push
mov
mov
fsub
imul
inc
cmp
cli
mov
pop
jp
imul
mov
testb
add
or
rorb
arpl
sub
scas
pop
cmp
xchg
sub
cwtl
aas
pop
shl
ss
pushf
xchg
scas
add
shufps
mov
nop
adc
xchg
mov
xlat
xlat
mov
dec
adc
sub
mov
orl
out
cwtl
cmp
mov
cltd
xor
xchg
pop
loop
mov
lock
arpl
js
in
mov
lods
dec
nop
orl
ret
sub
or
lds
nop
js
and
pusha
ja
psadbw
leave
mov
lahf
mov
inc
cmpsb
or
jmp
and
fstpl
inc
outsb
lods
repnz
xlat
or
mov
xchg
xor
or
lock
push
roll
pop
mov
push
popf
inc
mov
hlt
lahf
push
out
dec
outsb
in
mov
jmp
and
fldcw
push
push
add
inc
sti
fisttps
loope
test
andl
mov
shlb
cld
add
lahf
outsl
fstpl
orl
scas
fsubs
or
push
mov
jb
je
push
ss
test
in
stos
mov
push
dec
push
mov
clc
mov
adc
ret
sbb
pop
les
scas
outsb
xor
rcrb
add
push
dec
insl
jge
push
adc
dec
jo
call
jne
mov
mov
inc
xor
xchg
jns
inc
popf
mov
pop
adc
adc
js
sub
test
mov
aad
fstpl
gs
cwtl
mov
dec
push
xchg
cld
pop
jge
jb
mov
insb
sbb
and
mov
lret
fcom
lret
fldcw
pop
enter
jo
add
xor
rep
jle
xorb
movsb
fisttpll
notb
and
xchg
mov
add
pop
pop
rcr
jbe
add
sub
mov
xchg
jl
stos
fisttps
mul
cltd
fwait
cmc
ja
pop
in
fldt
sub
in
popf
out
mov
xchg
idivb
xchg
aam
sub
movsb
push
dec
outsb
out
sub
andb
cmc
or
arpl
push
push
int3
xor
mov
and
mov
bound
out
inc
add
mov
adc
loope
adc
out
and
and
mov
mov
inc
add
pop
mov
add
insl
stos
aaa
pop
xchg
pop
mov
mov
xchg
into
fimull
shl
push
sbb
push
les
mov
add
xchg
aam
enter
jmp
push
jmp
xlat
rcr
mov
mov
pop
ret
push
and
decl
mov
mov
mov
push
mov
dec
pop
add
or
stos
mov
out
std
loopne
cmc
mov
inc
lock
push
push
push
mov
daa
dec
movsb
pop
cmp
sbb
jae
in
push
rcll
pop
aad
call
push
sub
pop
ds
push
sbb
mov
out
fnstcw
mov
sbb
nop
lret
filds
or
jle
mov
aam
and
in
mov
cwtl
dec
and
rcll
movsl
mov
and
cmp
je
in
ds
stos
cvtpi2ps
dec
add
ret
push
xchg
and
sahf
lret
in
leave
insb
cmc
push
mov
add
or
inc
mov
mov
icebp
jmp
sbb
pop
lods
cmp
and
push
jge
sub
add
mov
into
enter
or
or
notb
sbb
jmp
outsl
add
insl
repnz
xor
cmp
in
scas
dec
lock
fstl
xchg
mov
or
add
sbbb
mov
sub
mov
push
xchg
mov
aad
add
and
fbld
arpl
ds
and
mov
push
fcomps
in
mov
adc
clc
jmp
into
adc
mul
push
jmp
fldt
mov
cmc
mov
push
sub
out
inc
sarb
cmp
mov
int3
repz
das
xor
ret
pop
test
cmp
popf
cwtl
jb
pop
push
es
imul
inc
pop
loop
jb
push
or
add
xor
jno
sub
or
sub
fstl
aaa
cmpsb
push
sbb
addr16
daa
aam
loope
and
and
mov
adc
popf
stc
fidivrl
mov
data16
jmp
mov
push
popf
rorb
mov
sbb
roll
and
push
jp
sub
sahf
sbb
pop
jecxz
sub
mov
mov
jb
inc
push
je
or
pop
cmp
cmp
cmp
push
fcmovne
int3
rcrb
mov
mov
mov
ret
aam
cwtl
pop
xchg
ss
shrl
sarl
sub
lret
add
lahf
cmp
cmc
out
sub
xchg
sbb
aaa
adcb
jecxz
gs
push
mov
and
cmp
pop
mov
dec
cmp
dec
out
insl
add
cld
xchg
sub
in
fdivrl
and
pop
mov
and
xchg
pushf
loop
shl
pushf
iret
dec
push
sbb
cmp
testb
ret
jle
data16
addr16
rorl
out
adcl
cmc
and
adc
imul
test
push
lods
mov
sbb
pop
cld
push
or
push
sahf
cmp
imul
push
loopne
jecxz
nop
les
aad
inc
aaa
enter
and
lods
rol
mov
pop
pop
test
fnstcw
jmp
add
adcb
cmp
push
xor
add
inc
movsb
jnp
dec
lds
sub
mov
push
sbb
sub
push
cltd
mov
in
neg
cltd
pop
imul
mov
dec
push
rorl
adc
xor
sbb
les
fbld
mov
mov
ror
dec
sub
shrl
addr16
jl
or
ja
shll
adc
jbe
arpl
push
mov
ljmp
push
movsb
movsb
lahf
test
fwait
js
xchg
sbb
add
and
out
rclb
mov
sahf
push
sbb
pop
cmp
lock
call
pop
xchg
faddl
fstps
scas
std
lret
mov
sarb
std
shlb
pop
add
bound
repnz
cmp
testl
ret
call
dec
sysexit
xlat
pop
mov
nop
push
popf
imul
xor
pushf
lods
sbb
popl
enter
pop
xor
out
push
ret
add
loop
dec
mov
cmc
mov
loope
daa
es
imul
fld
or
or
or
pop
subb
sbb
add
push
ror
push
jp
and
jmp
fs
shlb
imul
cmpsl
xchg
sub
cld
lcall
sti
push
pop
inc
inc
xchg
fdivs
js
dec
lods
jecxz
out
fiadds
cs
cld
pop
xor
push
pop
pop
mov
hlt
push
loopne
rcl
imul
hlt
enter
jo
and
test
es
outsl
sub
pop
cwtl
mov
dec
pop
stos
mov
sbb
test
xor
ljmp
lret
fs
cmpsl
addb
les
pop
push
mov
dec
adc
fstps
fistps
mov
aaa
mov
leave
shrb
cmp
aam
sub
cwtl
jb
pop
testl
and
push
xor
aas
push
push
jecxz
out
jle
cmc
data16
in
dec
rorb
stos
sbb
ret
enter
adc
loope
andl
mov
cwtl
loop
inc
push
xchg
mov
std
out
sbb
add
aas
cmp
pushf
push
sub
ljmp
pop
clc
jge
pusha
or
xchg
les
lock
movsl
push
dec
pop
push
dec
je
cmp
sbb
fwait
sbb
flds
nop
cmp
in
stos
cltd
fbstp
push
lret
dec
xchg
in
cli
andb
jbe
inc
add
xchg
push
mov
popa
jbe
push
data16
lods
mov
sti
ret
jo
lea
test
out
jbe
mov
dec
fnstcw
xor
xor
cmp
rorl
jp
repnz
sub
or
add
pushf
scas
push
xchg
out
xor
sub
and
jmp
cmp
pushl
mov
push
xor
cmp
adc
xchg
stc
es
jno
push
clc
inc
enter
cmpb
dec
push
out
xor
jmp
pop
test
add
mov
out
or
andl
sub
xor
pcmpeqd
sahf
dec
mov
xchg
scas
lods
fwait
mov
fmul
dec
adc
dec
sub
add
sarl
xchg
cmp
std
test
pop
push
push
in
lret
movsl
enter
mov
push
in
popa
mov
xor
cmc
dec
jnp
push
mov
inc
dec
fadds
sbb
dec
stos
aas
call
fcompl
mov
mov
lods
test
in
adc
mov
or
arpl
adc
lret
mov
ret
mov
xchg
sti
adc
jo
or
insl
daa
mov
push
pop
jno
cmp
cld
test
ret
sub
nop
push
out
das
dec
mov
xor
xor
mov
mov
jg
pop
xorl
out
repz
pop
add
clc
adc
cmc
popa
mov
push
repnz
ljmp
jle
inc
xlat
movsl
add
cs
mov
mov
pop
test
scas
jae
loop
mov
sub
ja
popf
sahf
adc
test
dec
cmp
imul
fsubl
es
mov
add
mov
bound
mov
push
jl
sarb
xchg
sub
sahf
lahf
ljmpw
jmp
dec
pop
xchg
mov
out
nop
push
jl
ffreep
or
std
push
rolb
cld
mull
loop
fldt
xchg
into
adc
shlb
bound
lahf
rcll
fildll
outsl
testb
push
cmpsl
incl
inc
mov
adc
add
lock
icebp
gs
pop
ror
bound
idivl
mov
stos
inc
out
fists
fisttpll
adcb
adc
mov
sub
jne
pop
and
xor
dec
pop
stos
push
int3
into
lods
fs
movsw
mov
ficomps
or
xchg
dec
in
xchg
fsubrl
ds
add
pop
arpl
xchg
and
rolb
pop
stos
fnstsw
aas
js
not
xor
mov
test
mov
pusha
out
jp
jno
xor
imul
lcall
ja
mov
push
popa
inc
out
in
push
outsb
stc
pop
test
faddl
cltd
cwtl
mov
push
hlt
mov
mov
in
mov
cmp
xchg
push
inc
arpl
mov
sbb
mov
ja
pushf
ret
aas
sub
das
clc
add
xor
loopne
les
jo
addr16
or
jo
mov
dec
test
xchg
mov
jo
sbb
lds
mov
mov
aad
or
push
push
in
mov
sub
adc
xor
outsl
pop
push
popa
stc
lock
rorb
push
xor
fisubl
or
lret
add
jae
sbb
add
adcb
stos
push
sub
aas
icebp
test
sub
movsb
dec
hlt
jp
sbb
pop
daa
inc
lods
inc
xorl
popf
cltd
clc
xor
adc
mov
inc
xchg
daa
mov
and
mov
mull
xchg
jmp
cmpsl
pop
sbb
cmp
out
pop
sbb
sti
xchg
mov
mov
cmp
jbe
ljmp
les
and
xchg
pop
arpl
mov
mov
popa
outsb
sub
and
ffreep
subl
ss
mov
sar
dec
jg
sub
inc
cmp
jmp
ss
push
xchg
xchg
mov
inc
inc
or
dec
cmp
pop
rcrb
fsub
repnz
lods
mov
cmp
add
dec
inc
inc
pop
adc
je
popf
mov
mov
pop
jb
dec
jns
lret
xor
dec
mov
adc
out
mov
push
rcr
daa
jne
outsl
sar
fwait
scas
xlat
imul
sub
shlb
sarl
or
lret
sbb
aad
aam
test
repnz
mov
xchg
inc
push
loopne
imul
ror
xor
addr16
push
and
pop
ret
xchg
out
cmp
push
or
or
call
aaa
adc
push
cld
mov
and
cmp
mov
js
fcompl
mov
lock
rorl
enter
int3
cmp
test
mov
scas
sub
jl
rcrl
popf
int3
jns
mov
mov
dec
sub
inc
hlt
add
pop
sub
or
ret
js
push
into
lret
sub
push
test
loopne
shrl
inc
in
scas
sub
and
fcomps
cld
and
fwait
enter
int3
jmp
shll
movsb
pop
push
jb
repz
pop
das
lret
sbb
loope
clc
sub
cmp
sbb
mov
pop
out
lods
cmc
outsl
aas
sti
and
jmp
dec
add
jmp
add
add
push
divb
push
or
mov
rcl
mov
aad
std
out
popf
lock
test
sub
lds
jl
cmp
stc
popf
es
mov
mov
adc
lea
sti
add
ss
or
pop
loope
adc
ja
pop
rcrb
div
out
push
xchg
xor
test
gs
and
mov
cli
out
out
outsb
pop
aam
jne
cli
cltd
fs
shll
inc
cmp
push
jno
inc
push
lret
push
int
aaa
repz
mov
mov
daa
mov
xchg
cmp
ds
cld
and
scas
arpl
sbbb
hlt
jmp
outsl
jns
cli
mov
xchg
pop
cmp
add
stos
or
iret
or
stc
adc
pop
repnz
sub
subb
arpl
or
inc
repz
jnp
imul
fildll
shrb
daa
pusha
gs
cmp
fisttps
mov
push
lret
jl
inc
std
repz
cmp
bound
and
test
inc
inc
and
pop
inc
mov
lock
in
cmp
inc
mov
lea
mov
mov
and
mov
je
loopne
stc
pop
shl
movsb
fisubs
inc
outsl
icebp
pop
outsb
hlt
or
mov
rcr
ret
ret
pop
testb
nop
lds
shr
ret
xchg
adcl
movsb
inc
pop
mov
bound
add
sahf
xchg
lahf
cs
fdivp
pushf
jae
dec
dec
dec
or
jl
aas
push
fistpl
cmp
shrl
push
cmp
jle
cmp
popa
add
sbb
xor
pop
jge
int3
jecxz
sub
xor
jno
mov
test
push
mov
sub
movsb
mov
dec
sarl
mov
loop
fwait
pop
mov
pop
sbb
dec
arpl
xchg
or
hlt
hlt
jo
mov
sti
imul
loopne
roll
aaa
mov
pop
lods
std
shl
jp
out
or
add
mov
adc
xchg
push
clc
push
push
aam
jbe
in
cmp
push
nop
idivb
or
test
pop
out
adc
out
pop
pushf
das
mov
fdivrp
cli
jge
andl
cs
sbb
add
mov
push
sub
add
add
and
cmpsl
sub
outsl
mov
jae
repz
jno
sub
and
int3
mov
jle
jbe
sbb
data16
or
out
dec
loope
mov
loope
jp
arpl
add
in
cli
pop
popl
and
mov
test
repnz
out
hlt
arpl
sub
mov
sbb
jo
pop
mov
stos
add
mov
push
jecxz
xor
mov
jns
inc
aas
repnz
scas
popa
imull
out
mov
in
aaa
mov
div
dec
inc
fs
adc
xorb
scas
xchg
xacquire
lock
mov
cmp
push
inc
int
xchg
sub
add
inc
ss
mov
cmpsb
mov
mov
cmp
loope
out
mov
out
cld
in
sub
jnp
ljmp
ret
mov
ret
xor
sahf
xchg
jbe
push
pop
push
enter
or
cmp
in
mov
divb
lret
fs
jne
and
in
push
xor
adc
jle
inc
jle
dec
push
cltd
push
lcall
lahf
sub
mov
xor
or
xor
fldcw
add
dec
jns
mov
fs
push
nop
aam
jae
xor
insb
or
lods
jne
rcll
dec
sbb
inc
or
std
ljmp
adc
repz
arpl
mov
mov
push
repnz
test
daa
mov
mov
adc
dec
jne
out
push
jbe
fidivrs
mov
dec
sahf
cmp
jno
cs
lcall
loopne
xorb
xor
mov
out
xchg
int3
add
cmp
int3
or
insb
cli
jbe
je
jmp
jmp
mov
insl
jno
xor
xchg
test
fwait
cmp
dec
pop
mov
or
into
mov
push
fs
into
push
adc
mov
mov
push
xchg
xlat
jo
push
aam
imul
push
outsl
xlat
xor
daa
ds
test
xchg
add
out
jbe
call
ja
insb
pop
xorl
and
jg
data16
sti
aam
rol
int
and
imul
push
adc
inc
or
in
inc
cld
scas
fsubrl
dec
stos
xchg
jmp
or
scas
sub
pusha
dec
lret
or
push
movhlps
enter
popf
jp
into
pop
hlt
fisttps
clc
mov
hlt
daa
mov
je
sub
xor
push
lock
or
cltd
mov
mov
insb
popa
loopne
add
jnp
imul
cmpsl
mov
mov
pop
test
sub
mov
add
int
dec
xor
pop
arpl
iret
cli
sbb
jge
and
mov
adc
imul
or
into
sbb
nop
adc
aad
cld
fwait
aam
mov
mov
call
insb
push
dec
xchg
nop
jns
mov
cmp
xchg
sub
fsubs
out
sub
lods
lret
sub
repz
mov
sub
jne
push
in
pop
or
inc
in
loop
sub
inc
jne
push
or
xchg
test
ficoml
push
xchg
clc
push
repz
lahf
mov
xor
in
adc
mov
mov
push
in
mov
xor
mov
push
sbb
xchg
cmc
test
xchg
aaa
pop
sahf
mov
mov
pop
dec
mov
out
rcll
je
cmpsl
addr16
std
push
inc
jo
gs
mov
mov
pop
stos
dec
loope
rcll
ljmp
mov
mov
fdivl
add
mov
xchg
rolb
std
ljmp
push
lods
xor
xchg
sub
push
cmp
mov
pop
rcl
aad
mov
xorl
jecxz
sti
loope
jno
out
add
ds
or
rol
xchg
aas
scas
add
lea
scas
xchg
int3
adc
and
test
int3
aam
add
int
gs
es
push
add
cmp
cltd
xor
jecxz
test
adc
mov
fistl
xchg
push
jge
cmpsl
jge
shll
mov
dec
lea
mov
test
or
add
xor
sub
sbb
sahf
je
testl
pop
inc
ljmp
xchg
inc
add
dec
add
test
repz
rcll
inc
popf
daa
stc
add
into
lret
push
test
adc
hlt
cwtl
jb
stos
scas
or
dec
loop
mull
ljmp
mov
lock
mov
js
mov
xor
push
and
pop
lods
inc
push
iret
es
cmp
stos
aas
shrl
dec
int3
jmp
orl
mov
mov
cmp
hlt
fmuls
lcall
roll
lock
xchg
out
rorb
mov
imul
cwtl
xor
dec
cli
test
xlat
push
add
outsb
mov
ljmp
cmc
aas
dec
xchg
jb
pushf
mov
sub
mov
push
shr
insl
dec
pop
das
lret
mov
outsl
insb
xchg
mov
add
and
imul
clc
out
loope
adcl
cmp
lret
psubsb
pusha
cli
mov
in
inc
dec
test
mov
pop
pop
clc
xchg
and
loopne
and
adcb
xchg
xorb
cmp
dec
push
mov
mov
subl
xor
adc
pop
out
iret
lret
adc
adc
pop
push
or
cli
xchg
xchg
mov
and
xor
mov
sbb
pushf
out
sbb
and
and
xchg
cmp
movsb
jecxz
push
mov
data16
push
ds
outsl
enter
arpl
mov
cmp
inc
dec
js
push
out
decl
push
mov
jne
movsl
mov
xchg
cld
shr
cmp
lahf
or
dec
jle
imul
xchg
cs
jne
cli
mov
into
cmp
push
packsswb
testw
adc
sbb
mov
out
lcall
jo
and
or
cltd
add
mov
les
sahf
loop
push
icebp
imul
adc
test
out
loopne
in
paddb
add
aaa
cmp
sbb
pop
ss
test
lret
cmovb
outsl
ljmp
mov
dec
or
push
xor
ret
std
adc
es
iret
xchg
int
jnp
sub
clc
or
pusha
ljmp
lods
jmp
push
enter
iret
into
dec
popf
test
arpl
and
dec
mov
pop
loop
das
jl
push
fisubrs
sahf
jb
xor
data16
lods
sahf
cmp
mov
sub
mov
pop
mov
in
mov
lock
out
and
aad
xchg
lahf
jb
add
sbb
in
fwait
cmp
sahf
aas
ljmp
imul
xor
fdivrs
push
mov
movsl
or
outsb
jmp
pop
or
mov
or
cmp
lock
cmp
pop
jae
imul
xor
jmp
adc
fimuls
ds
pushf
jmp
mov
sbb
enter
xchg
shl
mov
sbb
std
or
push
inc
lods
fisubl
or
xor
into
ret
add
mov
mov
push
lock
loop
cmp
in
testl
ret
cmpsl
mov
inc
mov
push
inc
jo
sbb
jo
xor
adc
adc
xchg
cmp
mov
leave
jg
pushf
mov
popa
xchg
fisubrs
rclb
clc
stc
call
jmp
add
mov
test
imul
inc
addl
scas
push
cs
popa
push
nop
sub
sub
pop
pushl
sbb
sbb
fldenv
xor
sbb
sub
sub
and
fwait
mov
sub
fidivrl
ficompl
popa
jns
adc
lods
scas
push
xchg
cmp
mov
outsb
arpl
sub
or
inc
cmp
xor
push
push
pop
or
movsb
negl
scas
aam
fucomip
cli
out
jae
arpl
cmp
cmp
inc
jle
push
sub
push
push
int3
std
inc
pushf
lods
stc
leave
and
pop
mov
pushf
jo
adc
test
push
and
jle
inc
cmp
popa
je
fistpl
jmp
dec
adc
push
jb
jg
rolb
aas
sbb
out
aam
or
dec
je
mul
aaa
mov
fbstp
sbb
jge
xor
mov
lds
scas
stc
inc
mov
mov
fdivrl
xlat
inc
inc
popa
cmp
cli
xchg
pop
into
push
dec
int3
popf
inc
mov
xor
lret
xchg
ror
out
add
xchg
cmc
cpuid
xor
fwait
in
in
je
push
and
lcall
shlb
mov
movsl
and
lods
mov
and
push
inc
in
and
xchg
lahf
cs
dec
sbb
and
insl
lret
mov
shrb
imul
dec
movsl
mov
mov
xchg
add
xchg
xchg
or
outsb
mov
stos
pop
out
loope
mov
stos
inc
xchg
shll
jl
mov
cmpsl
repnz
adc
pop
popa
jo
fcomps
mov
add
bound
je
nop
idivb
mov
xor
mov
nopl
ja
aam
or
pop
cmp
xor
ljmp
mov
int3
mov
xor
call
jbe
add
dec
sub
jecxz
mov
mov
xor
and
ds
pop
cmp
add
jecxz
xchg
sub
ja
or
fistpll
sbb
push
movsl
push
cmp
mov
fiadds
jp
int
test
mov
cmpsl
lahf
jns
in
arpl
pusha
cmp
or
rcrl
cld
test
outsl
push
jne
mov
in
xor
loop
lea
push
pusha
shl
fucomip
adc
test
clc
loop
pusha
sbb
imul
xor
and
xchg
out
loopne
xor
repz
xchg
ja
ret
movb
leave
rolb
adc
push
push
out
xchg
hlt
test
push
pushf
jge
or
push
xor
mov
ja
sub
pop
lret
lds
ja
repnz
jmp
leave
and
out
stos
dec
or
cmp
fmul
sub
stos
das
sub
loope
cmp
xchg
add
push
scas
les
cmp
dec
outsb
lods
ljmp
repz
jge
dec
inc
mov
enter
adc
mov
enter
sub
mov
xor
jecxz
jge
inc
lods
test
stos
lcall
idivb
mov
and
clc
xor
adc
pop
mov
imul
or
int
inc
mov
out
lret
packsswb
sbb
inc
mov
inc
mov
repnz
add
dec
add
xorl
cmpsb
ss
sbb
pop
icebp
cmp
inc
mov
out
cmp
push
mov
ret
cmp
dec
adc
call
jae
ds
test
fs
mov
push
and
mov
sti
mov
and
mov
pop
sub
loope
es
mov
pop
dec
dec
addr16
mov
call
jae
xorb
and
mov
das
inc
inc
lret
into
insb
pop
test
pop
sbb
icebp
mov
xor
fldt
subb
test
mov
fisubrl
scas
leave
mov
cld
lock
inc
xor
popf
clc
test
rep
mov
jge
and
mov
xchg
xor
mov
dec
jb
mov
fninit
xchg
cltd
movsb
adc
sbb
or
adc
xchg
stos
xor
sub
clc
or
mov
push
mov
sti
inc
fwait
xlat
push
mov
pop
pop
mov
adc
xchg
xchg
insl
lret
xchg
enter
cmp
loop
pop
inc
fcmovne
das
mov
orb
adc
jae
sub
adc
lret
push
pusha
mov
lret
sub
cmp
jp
sbb
mov
jg
mov
ja
add
sti
shlb
mov
movl
adc
jns
insb
pop
and
adc
pop
outsl
leave
movsl
loope
sbb
daa
mov
inc
or
mov
fs
xchg
inc
dec
in
and
mov
inc
adc
orb
pushf
int
sub
sbb
add
sahf
xchg
scas
test
leave
test
outsl
push
ret
ljmp
lahf
or
sub
pop
int
adc
in
adc
out
inc
scas
jbe
test
insl
cmp
adc
and
dec
add
push
push
pop
adc
sbb
jmp
jl
dec
jno
jl
movsb
ret
jle
mov
push
mov
mov
test
mov
mov
daa
movsl
xorb
cmp
dec
out
andb
jmp
push
add
pop
aas
rclb
jbe
xchg
lret
mov
or
or
xor
push
std
fnstenv
dec
stos
or
aas
fxch
cmpsb
push
clc
sub
dec
pushf
adc
pop
inc
pop
sbb
int3
cltd
cmp
or
std
sub
and
xor
jo
dec
adc
std
cmc
sbb
xor
dec
xchg
imul
arpl
jnp
mov
out
mov
cmp
pusha
dec
lock
hlt
ss
pop
mov
mov
jge
xor
lods
test
sub
inc
sarl
shll
das
dec
ret
dec
push
fstps
xchg
sbb
cli
mov
sub
clc
sbb
adc
jmp
mov
sub
subl
fistl
jae
jne
push
xor
cmp
shl
call
xchg
cmpsb
dec
mov
adc
fcomip
xor
shr
dec
cmp
inc
jg
sbb
mov
testl
repz
pop
fwait
sub
cs
insb
mov
jl
pop
mov
pop
push
jge
push
lret
sbb
mov
add
test
add
jnp
out
cmp
cmp
call
mov
inc
inc
dec
popa
jecxz
aaa
cli
dec
loopne
rcrb
and
test
and
adc
movl
jl
jl
mov
mov
inc
mov
flds
repz
xchg
add
push
cmp
iret
outsb
bnd
dec
xchg
mov
shrl
jno
arpl
aad
cltd
mov
push
mov
sbb
in
or
lea
sbb
push
xor
and
nop
stos
fisttps
stos
add
outsb
imul
pop
pusha
cmp
pop
es
pop
arpl
pop
xchg
xchg
sbb
xchg
jae
push
mov
push
lods
inc
add
inc
ds
clc
mov
pop
pop
inc
push
inc
mov
jge
add
push
mov
pop
pop
imul
fwait
das
sub
inc
loopne
lds
mov
push
sti
movsl
mov
icebp
xchg
dec
or
pushf
iret
xor
xchg
out
in
dec
adc
in
int
adc
ret
jge
lret
jno
sbb
dec
push
sbb
shll
or
dec
sti
mov
loope
dec
jo
cmp
mov
xor
shll
and
push
icebp
in
icebp
adc
repnz
mov
push
insl
and
add
bound
dec
pop
pop
outsb
aaa
xor
xor
rcr
jno
jne
pop
push
ret
mov
pop
repz
daa
pop
mov
push
repnz
mov
hlt
lahf
cmp
inc
dec
xor
pop
mov
mov
xor
test
dec
cld
or
sarl
ds
add
or
ja
sbb
stos
inc
sbb
int3
push
xchg
flds
pop
insb
push
sub
data16
push
insb
xchg
int3
inc
roll
ss
call
pop
xor
cmpsb
push
int3
jns
hlt
lea
shrb
push
push
xchg
jns
jo
pop
das
jecxz
push
test
sbb
cmp
ror
push
dec
inc
fmuls
aad
dec
jge
scas
sbb
adc
jnp
adc
loopne
repnz
mov
mov
rcrb
or
or
ret
jns
xor
into
cmp
jmp
sahf
jns
call
xor
dec
ss
test
out
push
push
sahf
xor
push
push
jns
sbb
imul
cwtl
popa
inc
bound
test
pop
jl
mov
lods
pop
and
adc
mov
in
push
mov
testl
aaa
mov
pop
mov
scas
cmc
into
loopne
loop
inc
xchg
jl
jge
mov
mov
mov
in
mov
lcall
mov
cmp
push
outsl
cmp
outsl
dec
adc
inc
pop
stc
insb
lock
sbb
push
nop
fidivl
out
into
incl
mov
out
jp
cwtl
mov
in
cmp
sahf
mov
decl
jp
pop
pop
add
or
mov
leave
pop
inc
cmp
into
jns
add
pop
and
pusha
or
mov
test
es
sub
xor
pushf
in
push
pop
sub
and
xchg
sub
loopne
test
nop
and
sub
lock
mov
xchg
jg
mov
sti
jecxz
aam
dec
push
ds
xchg
or
hlt
jmp
jg
mov
sbb
movsl
jg,pt
xor
add
ja
leave
jg
mov
into
lea
es
adc
int
fiadds
subb
stos
shl
or
jae
lea
in
or
push
aaa
mov
shrb
imulb
out
rcrb
dec
xlat
fcomps
or
inc
jg
js
xor
add
sbb
pusha
rclb
scas
iret
add
test
aam
cmpsl
push
jo
push
dec
xchg
clc
repz
cltd
fimuls
loop
movsb
pop
mov
jns
stos
or
lods
in
jmp
mov
inc
mov
movsb
sub
xlat
push
lods
loop
cltd
sub
jb
enter
rolb
movsb
shl
repnz
jge
lret
inc
bound
clc
push
repnz
mov
cmpxchg
out
andl
out
inc
enter
and
push
es
and
adc
lret
add
nop
cwtl
out
lahf
or
mov
ds
fwait
stos
mov
jmp
cmp
or
cmp
xorb
repz
pop
sbb
pop
fadds
pshufw
jb
das
or
adc
mov
or
pop
and
or
xor
enter
sub
mov
mov
mov
push
shll
jno
iret
xchg
les
pusha
mov
divl
adc
movsb
xor
jmp
lahf
ret
int
or
dec
xchg
jg
cmp
lds
sub
xchg
or
jge
out
lret
inc
xchg
jp
pop
clc
xchg
cmp
adc
xor
or
add
jae
mov
adc
cmp
cmp
dec
int3
dec
aas
cmp
fwait
cmp
stos
xchg
scas
pop
aam
dec
daa
cmp
dec
std
push
xorb
movsl
adcl
mov
out
mov
jae
dec
dec
bound
mov
icebp
addr16
fidivrs
leave
pop
xchg
dec
fdivp
mov
adc
xchg
scas
inc
adc
lcall
insb
xor
fdivl
xchg
jmp
lcall
repz
mov
das
popf
mov
jb
jbe
cltd
ljmp
xchg
test
fwait
pop
inc
sub
dec
fnsave
mov
pop
scas
cmp
std
repz
mov
mov
jp
inc
or
dec
push
sub
leave
jns
sub
cld
pop
mov
inc
ret
fidivl
lret
xchg
mov
jg
inc
push
ds
insl
outsb
adcl
gs
div
mov
or
xchg
xor
jnp
xlat
sarb
cmp
insl
dec
inc
sub
iret
or
lret
xchg
pushf
pop
imul
and
add
imul
mov
adc
xor
add
sub
pusha
pop
roll
lock
dec
ja
les
lds
jmp
in
sbb
jle
mov
pop
lret
cli
cmpsl
push
jno
leave
aaa
jo
outsb
cmp
cs
aas
pop
cmp
mov
movsb
mov
jle
aaa
fcomp
imul
add
idivb
pop
cpuid
ds
movsl
mov
push
xchg
mov
lcall
lahf
shrb
jl
out
mov
pop
mul
int
jmp
iret
mov
ss
xchg
mov
js
pop
push
cmp
sbb
lret
sbb
pop
push
fistl
push
and
or
movsb
add
push
dec
xlat
push
fisttps
pop
sub
in
icebp
ljmp
mov
pop
fiadds
sub
aas
pop
shrb
hlt
ret
outsb
add
xchg
aas
addr16
rcll
jo
sub
dec
outsl
addb
push
test
jb
mov
push
jmp
or
inc
cmc
xchg
mov
or
dec
push
ret
ds
mov
popf
fabs
push
ret
das
mov
xor
mov
xor
adc
xchg
mov
and
push
pop
dec
lcall
inc
cmp
push
sub
sub
roll
popf
in
test
push
jmp
repz
stos
inc
pop
sub
test
ljmp
add
je
ret
jle
push
shlb
icebp
xor
andl
and
cmpsl
mov
scas
dec
xchg
test
dec
leave
icebp
and
cmpl
cs
imul
add
fbstp
icebp
shlb
lahf
mov
in
jp
push
sar
fcompl
cmp
xchg
cmp
push
ficompl
lahf
sbb
or
sbbb
mov
int
movl
stc
mov
inc
pop
int3
cmp
push
xchg
xchg
inc
mov
push
notb
jl
fistpl
mov
fiaddl
nop
jl
xor
ds
push
push
in
loope,pt
movsb
loopne
cmp
fmull
or
add
lcall
mov
add
pop
mov
daa
lods
fstpl
outsb
push
pop
je
clc
jmp
adc
sarb
pop
or
fiadds
inc
xchg
mov
cmp
movd
shrb
pop
in
int
dec
jmp
test
xchg
stos
cs
cwtl
ja
cmp
adc
lret
pop
inc
loopne
pop
popa
icebp
loopne
fs
out
push
jb
rolb
adc
dec
xor
cld
mov
fisttpll
push
int
dec
or
mov
xchg
dec
je
or
adc
mov
lods
fiaddl
in
int3
pop
mov
sbb
xchg
fnstenv
push
movb
adc
or
or
cwtl
test
lcall
movsl
das
jmp
out
mov
cmpsb
insl
fisubl
ss
iret
xchg
call
negl
out
fwait
sbb
pop
mov
adc
roll
ljmp
xchg
dec
addr16
xchg
inc
pushl
mov
mov
jle
gs
shlb
and
aaa
cmp
dec
leave
inc
or
fwait
cmp
dec
mov
insb
and
cmp
out
xor
add
hlt
jb
jns
int3
ret
xor
imul
and
mov
add
inc
push
imul
nop
mov
cmp
test
enter
addr16
and
cli
pop
xchg
mov
scas
insl
pop
push
push
scas
call
scas
and
mov
push
or
repnz
mov
add
cltd
movsb
fidivs
xchg
mov
stos
notb
push
pop
daa
aaa
orl
sarb
dec
dec
bound
jp
shrl
jg
sub
jb
adc
mov
jae
xor
scas
int
sub
pop
in
mov
xchg
cmp
hlt
jmp
int3
xor
jno
adc
dec
addr16
pop
shll
aaa
jmp
mov
fisubs
mov
ret
cli
js
and
pop
mov
cmp
jo
repz
popf
das
xchg
iret
dec
mov
adc
in
xchg
outsl
loope
stos
out
cmpsl
ret
xor
cmpsb
iret
psubusw
int
test
push
sub
fdivrl
cs
ret
enter
jp
mov
mov
mov
jg
out
je
dec
push
repnz
or
push
jp
mov
outsb
addb
xchg
inc
lahf
test
mov
mov
and
push
incl
mov
inc
mov
cwtl
and
ja
les
sti
push
add
lret
dec
push
pop
jp
mov
roll
dec
fcompl
sarb
xchg
jns
mov
push
lret
mov
fisttpl
dec
ret
pop
es
jo
and
loope
leave
cld
mov
lds
mov
lea
mov
sub
addr16
mov
std
leave
jb
cmp
or
pop
outsl
jecxz
cmc
dec
xchg
inc
sub
sarl
sbb
imul
cmp
xchg
hlt
and
push
inc
loopne
mov
shr
xor
aaa
test
mov
lcall
cmp
or
movsb
cmc
push
out
xor
and
imul
jb
mov
addr16
stos
xchg
pop
jo
dec
hlt
mov
mov
or
jl
dec
jnp
sbb
ret
sub
sub
sahf
loope
lock
push
inc
sub
rcrl
lods
jecxz
jb
addr16
jle
mov
jge
push
and
xor
or
jbe
cld
mov
mov
sbb
repnz
sub
sahf
addl
jo
push
xchg
fistpl
xor
pop
and
setno
sub
icebp
mov
mov
pop
dec
sbb
popa
sbb
jns
outsl
jl
outsl
clc
xchg
mov
ss
push
ret
fsubrl
push
cli
xor
pop
and
shll
push
aad
call
cmp
inc
or
cmp
daa
sub
fldenv
lods
jl
push
dec
jp
mov
lretw
test
test
xor
lods
sub
xor
stos
mov
mov
mov
fidivs
jno
dec
or
scas
into
jnp
rcrl
or
sub
js
adc
dec
sub
lret
lret
xchg
scas
push
lods
and
scas
scas
mov
push
xchg
sub
icebp
sbb
fmul
inc
jp
lretw
jle
lret
lret
push
mov
adc
sub
cmp
pop
jmp
xchg
jp
pop
mov
push
adc
repnz
xchg
sub
fildll
sbb
pop
lret
hlt
jp
rol
dec
aam
ds
ljmp
les
int3
leave
mov
sub
pop
lea
pop
lods
fsubrs
adc
stos
outsl
push
in
xchg
jbe
scas
sub
cmp
cmp
push
test
sbb
aaa
mov
stc
sbb
jae
cltd
push
mov
cmp
lock
inc
inc
sbb
push
sub
shrd
xlat
sub
outsb
arpl
mov
test
sarb
rorb
mov
xor
fs
inc
adc
fdivl
imul
fldl
dec
dec
in
push
xchg
outsl
mov
and
inc
int3
jno
dec
mov
subb
pop
sahf
ss
mov
les
notl
in
mov
loope
mov
sti
aam
add
fisttpl
pop
addb
sbb
sbb
test
cmp
imul
mov
add
mov
test
call
pop
sbb
das
fmuls
adc
rcr
jnp
loope
lods
decl
inc
insl
fs
ds
mov
scas
filds
loope
xchg
push
xlat
adc
cmova
idiv
and
sbbl
imul
dec
or
shrb
imul
in
ljmp
adc
je
shl
cld
jl
call
push
int
xor
jbe
mov
sbb
pop
lcall
xor
cmp
mov
test
stos
daa
cmp
sub
stc
adc
mov
shll
leave
outsb
xchg
push
sub
outsb
mov
xlat
jg
bound
mov
icebp
xchg
sub
sub
xor
fs
cmpsb
in
or
stos
icebp
jp
cmpsb
sbb
in
scas
mov
inc
push
push
inc
mov
outsl
jne
pop
sbb
ret
gs
cmp
push
sub
xchg
jg
shlb
ffree
fstps
cli
lret
daa
lods
mull
loop
push
jo
mov
stc
cs
adc
repnz
lret
movsb
mov
xor
xchg
mov
pop
test
aas
ror
and
jne
das
loopne
dec
les
or
out
xchg
mov
add
inc
mov
pop
cmp
and
andb
dec
jno
adc
andb
int3
sbb
mov
mov
push
mov
scas
fldz
pop
stc
jns
cli
scas
cmp
adc
push
lret
inc
nop
jo
aaa
icebp
fldenv
mov
xchg
xor
pop
loop
aaa
sbbb
xchg
icebp
outsb
cmpsl
repnz
in
sbb
cmp
fisttpl
or
loop
stc
rcll
jae
les
xchg
and
push
jbe
pop
daa
aaa
lods
sub
mov
mov
sbb
push
xor
fistps
fidivrs
popa
out
int
inc
insb
push
push
fdivl
adc
add
fbstp
or
test
jb
pop
ja
ficomps
and
lret
mov
nop
inc
in
cmpl
je
cmp
and
in
aad
ja
push
mov
lret
imul
ljmp
fisubrs
clc
jnp
ret
sub
rorl
sub
out
push
jge
mov
mov
cltd
jbe
push
shll
jmp
mov
sub
cmp
push
sbb
xor
fidivrs
or
xlat
loopne
push
mov
mov
add
sar
sub
jge
cli
enter
adc
int
leave
iret
jne
jne
mov
les
mov
and
into
out
ret
push
or
xor
mov
xchg
icebp
mov
sub
lret
jp
dec
xor
jecxz
in
fldl
mov
xor
call
add
inc
mov
mov
loope
xor
sahf
fsubrp
xor
sub
adc
xor
sti
push
movsb
mov
or
clc
data16
in
scas
fiaddl
shll
imul
sub
add
pop
mov
nop
in
int3
lock
ds
shll
mov
lods
int3
sbb
xchg
sets
test
push
pop
inc
gs
out
xor
outsb
cmp
cld
dec
push
mov
ljmp
xchg
push
stc
std
icebp
xor
cmpsl
or
mov
and
ret
int3
lret
and
js
xchg
or
sbb
stos
shll
xor
xchg
inc
inc
out
pop
or
sub
sub
into
lahf
ljmp
or
sub
inc
add
addr16
sbb
jae
gs
les
ja
arpl
push
adc
push
mov
cmpsb
fsubl
mov
mov
mov
mov
xor
loopne
lcall
subl
mov
push
ja
lods
cwtl
sbb
andb
push
pop
les
lcall
es
push
inc
xor
imul
fcoms
ret
dec
and
ljmp
push
push
mov
and
repz
sbb
lea
insl
cmp
mov
xchg
adc
xchg
add
add
data16
xchg
mov
popf
clc
mov
movsl
in
cmpsb
push
int3
repnz
mov
shlb
add
pop
stos
pop
aas
hlt
mov
jo
jecxz
jle
rolb
or
xchg
test
fldl
and
addr16
xor
pop
mov
add
push
in
jno
push
lods
jle
jle
ffree
inc
mov
xor
loope
lret
jecxz
xchg
jp
fimuls
pop
and
lods
roll
rorb
sbb
test
mov
xchg
inc
mov
cmp
push
faddl
dec
xchg
pop
lds
cmp
xchg
aam
cmpsb
xchg
jge
or
sub
xchg
pop
sbb
nop
jmp
mov
pop
pop
cmp
mov
fsubr
add
pop
fisubrs
mov
stc
loop
push
sub
mov
cld
xchg
dec
pop
adc
push
es
add
loop
popa
lds
out
sub
lds
jno
in
insl
loope
mov
adc
dec
sub
xchg
jle
shll
xorl
and
adc
sbb
push
loop
imul
add
mov
add
leave
out
fidivrs
push
js
pop
repz
mov
into
test
daa
into
mov
push
cmp
mov
movsb
sub
adc
cli
xor
lds
cwtl
sbb
lods
shrb
pop
stc
jmp
mov
notl
roll
out
std
fstps
dec
pop
popf
aam
xchg
clc
test
into
cmp
rolb
popf
pop
dec
xor
popf
outsl
xchg
repnz
cwtl
cmc
stos
and
ljmp
addr16
out
adc
scas
into
ret
popa
jne
dec
dec
mov
xor
popf
mov
ds
push
mov
lahf
ret
ds
or
and
xchg
repnz
mov
jne
arpl
rcr
fistl
mov
push
xchg
jb
mov
lds
add
call
pop
pop
mov
and
enter
dec
iret
xchg
push
or
inc
mov
xchg
loop
inc
xchg
inc
out
mov
ret
ret
clc
or
xor
imulb
mov
dec
shll
scas
xchg
jle
sahf
in
roll
sbb
lds
mov
aam
add
lret
dec
mov
int
sti
mov
insb
frndint
xor
popf
fistl
lret
hlt
or
ja
push
mov
ja
loopne
aas
insb
pop
cli
stos
mov
cwtl
pushf
sub
hlt
cmpsl
inc
dec
add
jecxz
cmp
pop
cmpsl
loope
daa
out
add
in
je
sahf
pop
ljmp
sbb
pop
test
cltd
jl
dec
idivb
jns
std
xor
mov
stos
repz
subb
mov
mov
js
jmp
push
call
pop
ficompl
cmpsb
jl
or
xor
jmp
pushf
or
in
icebp
jns
rcrl
mov
mov
int
std
out
fstpl
or
imul
fldcw
cmp
mov
and
mov
test
jge
f2xm1
ja
jg
orl
loope
cmp
push
mov
and
mov
add
int
call
repz
aaa
das
fdivrl
ss
push
adc
movsl
jb
mov
mov
roll
push
sbb
dec
cmp
dec
pop
testl
jno
repz
mov
and
mov
mov
imul
lods
inc
sbb
and
jecxz
push
xlat
sub
outsl
mov
in
sub
fcompp
inc
cmp
or
insb
bound
test
mov
xlat
pop
inc
adc
dec
pop
xor
xchg
int
sarb
xor
or
test
jmp
adc
sbb
sarl
rcll
adc
leave
inc
and
jl
rcpps
sub
in
jbe
ja
stos
mov
stos
inc
aaa
push
cld
jmp
push
xor
popa
mov
cmp
pop
fadd
movsb
out
movsb
jmp
xor
pusha
cmp
xor
outsb
pop
pop
pop
push
test
popa
sub
and
mov
into
or
inc
xlat
repnz
rcll
scas
xchg
aas
incb
insb
push
or
mov
imul
cld
cmp
sub
lds
cmp
test
jg
xor
dec
outsb
idivl
xlat
add
sub
xbegin
push
mov
mov
in
arpl
out
pop
xor
popf
push
sarl
pop
cmc
out
insl
nop
xchg
in
mul
pop
rcrb
bound
imulb
add
cltd
mov
lock
add
rolb
push
xchg
jno
cmp
or
andl
lock
ret
adc
cmp
inc
fadds
pop
cmp
iret
add
ficoml
das
xor
inc
mov
xchg
out
lock
mov
enter
imul
fisubl
fsts
lcall
sarb
je
cmp
and
mov
sarl
add
mov
ficoms
xchg
ret
dec
shl
push
or
cs
jp,pt
es
adc
or
ret
sbb
xor
mov
pop
cltd
repnz
data16
daa
mov
and
scas
inc
popa
mov
cmp
repnz
movsb
enter
jmp
es
popf
and
lahf
divb
mov
lods
and
fisttpl
mov
aaa
cmpsb
jg
cmp
in
cli
push
mov
cli
mov
inc
lahf
cli
aad
dec
faddl
sub
xchg
mov
pushf
xchg
in
pop
xchg
shll
adc
add
sbb
ljmp
mov
sub
pop
xlat
and
push
adc
cmp
divl
enter
pop
xor
ja
idivb
andb
rolb
xchg
lea
dec
dec
js
jne
xchg
dec
pusha
inc
and
push
addb
stc
lcall
pop
adc
int3
les
movsl
fistpll
dec
push
daa
shll
cld
punpckhdq
and
jns
clc
xor
push
dec
loop
dec
adc
aaa
movsl
mov
push
mov
fldenv
mov
and
mov
mov
stc
cmc
mov
sub
popa
cmc
cmp
adc
fsubrs
pop
inc
inc
mov
add
je
mov
xor
stos
lods
mov
shld
int3
iret
faddl
xlat
fs
and
jmp
clc
pusha
jp
or
and
sbb
ja
xchg
xchg
fidivrs
xor
fwait
jle
xchg
mov
cs
sub
add
in
xor
cltd
sub
fnsave
or
data16
call
and
cmp
xsha256
cmpsb
roll
sub
pop
xchg
xchg
mov
xor
xor
pop
mov
loop
stc
mov
and
mov
mov
inc
rol
cmp
add
int3
jmp
hlt
lret
xor
outsl
std
fdivs
scas
xchg
mov
jle
dec
push
bound
jo
int3
sub
xor
lea
jno
xchg
iret
inc
push
mov
fadd
mov
clc
xchg
cmp
test
insb
popa
dec
push
fs
clc
ficoms
or
clc
lods
xchg
push
mov
cmp
sub
sub
or
rclb
inc
and
mov
xchg
sbb
lods
loopne
repz
mov
test
fists
jl
cli
fwait
cmpsb
aaa
mov
add
icebp
in
ljmp
shrb
rcrb
call
xchg
xor
xchg
sbb
es
sbb
hlt
mov
loopne
sbb
mov
bound
mov
or
cmpb
dec
mov
mov
lret
stc
pop
ss
in
cwtl
lock
pop
mov
aad
imul
push
sub
mov
data16
fldt
rolb
cli
fptan
sub
sub
push
fistpl
adc
jge
inc
pusha
inc
iret
or
mov
xor
movsl
lahf
xchg
add
lret
push
mov
mov
aas
std
imulb
push
loop
xchg
cmpb
pop
add
pop
xchg
add
cltd
movsb
xor
cli
adc
mov
lahf
inc
xchg
pop
mov
aaa
jbe
inc
cmp
rcrb
mul
fisubrl
iret
pop
lds
push
lds
jg
icebp
popf
fsubrl
cli
cmp
shrl
fwait
adc
jg
dec
xchg
in
movsl
xchg
adc
xor
rol
nop
mov
aam
cmp
shll
mov
stc
push
cmp
adcb
mov
pusha
jbe
adc
xchg
into
cmp
push
xchg
mov
jb
jnp
or
sub
insb
andl
jae
scas
xor
clc
fmull
xor
cltd
xchg
ret
pop
jb
cld
loope
lcall
mov
or
fcmovu
icebp
cld
pusha
rcr
negb
mov
sahf
or
xor
aad
sbb
pop
push
cmpsl
je
jge
cmp
inc
bound
in
daa
sbb
mov
sub
xchg
dec
imul
popa
sub
push
fmuls
aam
clc
jnp
iret
outsl
mov
test
push
testl
adc
mov
fiaddl
and
lods
pop
stc
movsl
shl
arpl
sbb
dec
xchg
mov
xor
xchg
mov
adc
scas
popa
jns
into
enter
hlt
mov
pop
scas
clc
fistpll
inc
les
pusha
jno
aam
jmp
fwait
cmpl
loopne
stos
or
dec
mov
and
loop
adc
sti
loopne
cmc
rolb
sahf
rclb
mov
cld
je
nop
lret
push
lods
sub
arpl
cs
das
insb
test
jo
sbb
and
xchg
jp
dec
fdivp
mov
jb
push
imul
addr16
xor
shrb
xor
rclb
pop
and
fsubp
mov
stos
and
jmp
or
int3
add
lods
adc
nop
cli
lcall
jecxz
pop
leave
lcall
insl
cmp
scas
outsb
hlt
inc
into
mov
and
push
lea
int3
je
mov
xchg
pop
jb
rorl
pop
cmp
adc
mov
in
cmp
sbb
mov
sub
nop
xlat
cmp
mov
hlt
pop
notrack
fwait
int3
int
xchg
rcr
cltd
cmp
pop
push
jl
rcrb
or
xchg
mov
fisttpl
cwtl
das
sbb
popf
lahf
mov
push
cmp
xor
das
into
mov
int
jne
sbb
mov
mov
or
dec
pop
cmpsb
sbb
jo
lds
sub
sti
out
ss
sub
and
stos
inc
inc
ficomps
pop
mov
or
dec
in
repnz
movsl
adc
mov
adc
rclb
in
xchg
leave
inc
add
vmread
cmpb
mov
in
or
mov
mov
jmp
or
inc
mov
xchg
jmp
pop
cmp
cmp
sbb
dec
int3
sbb
out
fnclex
cmpb
jp
clc
sbb
icebp
mov
sti
mov
mov
xlat
lea
cmp
xchg
in
inc
fildl
adc
loope
fnsave
enter
mov
into
loope
xchg
dec
cwtl
enter
mov
and
std
mov
cmp
cmp
sbb
xorl
add
insb
or
gs
out
test
scas
call
cmp
push
lea
ret
sahf
test
fwait
xor
mov
sbb
ss
mov
lret
js
sahf
push
bound
leave
sarb
cmp
push
dec
les
sbb
nop
inc
xchg
xor
jp
pop
inc
stos
cmpsb
mov
call
jae
adc
sub
fwait
mov
mov
cmc
clc
mov
jnp
cmp
xchg
test
adcl
lret
movsl
xor
add
jbe
test
aam
mov
hlt
dec
movsb
mov
jecxz
xchg
repz
dec
insl
jmp
adc
shlb
xorb
mov
xor
test
fwait
in
pop
imul
in
jge
pop
in
out
dec
xlat
test
cmp
mov
pop
adc
sub
adc
dec
push
ss
iret
js
int3
out
add
inc
mov
push
push
mov
jno
push
xor
stc
jmp
fwait
test
repnz
dec
insb
xor
lods
shl
ret
movsl
aam
jns
ss
cli
popa
shl
pop
mov
pop
cwtl
and
push
sbb
adc
insl
insl
ficoms
rol
sub
cmp
popf
mov
cmpsl
jae
fs
adc
pop
mov
and
mov
pop
out
pop
inc
xchg
ja
ret
jg
sahf
push
dec
fwait
test
call
int3
ss
lea
sub
sbb
bswap
pop
sub
loop
aam
push
movsl
call
adc
pop
pop
leave
mov
leave
adc
pop
mov
stos
imul
sub
gs
ds
sub
or
sub
cmp
sbb
and
or
or
push
dec
cltd
and
imul
aaa
xlat
shlb
insb
and
int3
mov
push
fidivrs
jmp
pop
pop
pop
mov
mov
call
fsubr
inc
pop
lock
ja
pop
or
mov
icebp
ret
cmpb
mulb
lcall
dec
scas
lahf
mov
ds
mov
cmp
mov
push
pop
push
or
vcvtdq2ps
xorb
adc
lods
jne
lock
mov
jl
dec
outsb
addr16
inc
cmpsl
loop
scas
and
out
sarl
icebp
pop
pop
mov
pop
xor
pushf
pop
movsl
push
sahf
adc
out
or
jno
mov
lock
mov
testb
lahf
decl
loop
lcall
and
sbb
xor
in
mov
roll
inc
fucomi
cmp
cmp
ja
add
out
mov
pop
inc
mov
shll
push
add
pop
xchg
scas
jecxz
xchg
mov
rolb
movsb
mov
lea
testb
fisttps
pop
sub
lods
lds
incb
mov
and
push
push
lahf
or
sbb
scas
rep
clc
mov
adc
adc
mov
roll
mov
xlat
sbb
pushf
mov
rolb
cmp
sbb
or
repz
mov
scas
jmp
test
test
ljmp
push
aam
in
repz
push
adc
jle
xor
cmpsb
cld
sbb
in
sub
jno
xor
mov
fdivrp
sub
ficoms
push
push
popf
out
std
repnz
sahf
dec
and
mov
or
test
out
test
ja
mov
addr16
jge
dec
mov
xchg
cld
cmp
cs
lock
cmp
push
adc
inc
pusha
mov
nop
mov
fstpl
mov
sbb
sbb
inc
test
js
shlb
mov
inc
xor
lret
push
or
pop
enter
mov
and
loope
pop
aas
test
repnz
inc
mov
push
dec
subl
fcompl
pop
mov
and
lea
inc
adc
jbe
or
std
dec
cwtl
jne
inc
leave
shrl
push
imul
aas
adc
enter
mov
rorb
sar
cmpsb
jl
pop
cmp
push
inc
lcall
aad
std
and
loopne
aas
pop
inc
sub
or
fisubs
jns
je
jl
fs
push
mov
jle
pop
adc
sar
pushf
push
add
mov
loope
int3
dec
jbe
ljmp
pop
ror
add
ficomps
movd
insl
ljmp
inc
jl
movl
enter
xor
sub
fwait
popf
mov
push
and
jo
inc
push
jbe
fcoms
sbb
int
inc
sub
mov
int
pop
push
addr16
jb
mov
or
popa
xlat
dec
loopne
sbb
cs
xor
gs
les
out
addr16
jl
xchg
addr16
aaa
and
xor
imul
fnsave
lret
xchg
leave
ss
movb
ljmp
ljmp
and
xor
enter
mov
xchg
cmpsl
cmp
mov
cwtl
cmp
push
lcall
jmp
ficoml
insb
pusha
dec
pop
push
jo
lods
sti
xchg
cmc
and
push
andb
and
dec
jmp
jge
sarl
pop
out
test
scas
pop
mov
test
fs
pop
les
arpl
jae
cmp
mov
mov
jb
decb
flds
adc
ljmp
and
insb
rorb
xor
adcl
push
xor
rol
mov
sub
inc
test
jle
pop
mov
popa
xchg
mov
aam
pop
fidivs
adc
int
insb
pop
outsb
or
mov
sub
push
or
cmp
dec
repnz
in
jne
std
jg
mov
jmp
repz
lods
push
sub
testb
enter
mov
push
lret
jge
out
test
in
test
mov
xchg
jg
xor
mov
jne
lods
jb
jle
repz
mov
add
lcall
push
pop
lods
cld
adc
mov
xor
jnp
repnz
fbld
imull
and
sahf
pop
sbb
pop
divl
cmp
out
push
sub
mov
fisttps
test
mov
add
sub
jns
rcr
in
je
cmpsb
xor
jecxz
dec
roll
xchg
sbb
mov
gs
mov
and
lret
ljmp
mov
dec
push
mov
loopne
cmpsl
and
aam
int
add
ljmp
push
or
xchg
mov
stos
es
incb
ds
push
pop
hlt
jmp
xchg
cltd
fs
negl
pop
sbb
and
cmp
mov
into
inc
lahf
push
cli
fsubrl
int
push
scas
inc
and
mov
fnstenv
mov
test
jbe
call
pushf
add
mov
pop
sub
mov
aaa
inc
in
std
je
jo
ret
and
rorb
arpl
out
fbstp
push
test
pushf
jno
and
or
xchg
pop
lret
je
std
mov
or
inc
push
loope
mov
xchg
jl
jp
push
mov
rclb
sub
jne
ds
pop
mov
in
fs
pop
adc
add
inc
mov
popl
mov
in
cmpsl
stos
lock
test
mov
rol
cmpsl
shrb
push
fldcw
mov
xchg
xchg
adc
imul
fnsave
inc
dec
lahf
out
leave
xchg
movsb
incb
push
sahf
dec
jle
jb
push
push
stos
adc
jle
jno
enter
inc
dec
mov
push
cld
shl
scas
mov
mov
mov
xor
and
aaa
sbb
rcrl
cmovno
test
lcall
and
sub
pop
andb
cmp
xchg
cwtl
ficoml
push
mov
fisubrs
lods
add
xlat
insb
arpl
out
stc
xchg
lret
push
inc
enter
pusha
clc
or
xor
xchg
loopne
xchg
push
shrb
push
or
push
icebp
or
mulb
cli
stos
mov
xchg
cmp
popl
jnp
addl
repz
lock
push
test
sub
call
scas
fiaddl
dec
adc
jb
cmp
dec
cs
mov
jno
fincstp
xor
lahf
mov
or
ret
jbe
popa
lret
or
mov
imul
mov
pop
mov
xchg
mov
mov
add
push
icebp
mov
jo
lahf
mov
in
daa
xor
dec
std
ss
push
xlat
cmpb
in
clc
jmp
fistpl
dec
sub
pushf
mov
shll
cmp
addl
fistl
fnsave
repz
movsl
mov
mov
jae
lahf
dec
mov
mov
stc
int
jns
out
es
dec
fidivl
ret
fistps
out
repz
iret
cmp
lods
pusha
fs
pop
fnstenv
jl
loope
das
push
sub
repz
jmp
mov
and
in
fldenv
or
leave
push
shll
dec
and
testb
sub
inc
pop
lret
stos
lahf
xchg
jg
mov
aad
adc
xchg
cmp
jecxz
insb
xchg
lods
popf
lods
pop
sub
or
jp
push
push
int3
pop
push
bound
rolb
sub
mov
mov
mov
mov
pop
inc
cmpsl
push
mov
inc
mov
inc
lret
mov
jae
push
xor
das
and
xchg
adc
sbbb
mov
or
cltd
xor
loopne
and
adc
mov
push
dec
fbld
xor
add
xorl
xor
sub
movq
jo
dec
pop
and
cmp
add
sbb
fstps
jp
repz
push
cmp
into
cli
or
jns
sbb
dec
fsubs
mov
dec
dec
lcall
and
cmp
xlat
sahf
cmp
cmp
xor
add
sub
insl
mov
daa
push
rclb
adc
mov
sbb
cmp
into
adc
push
js
xchg
push
mov
push
mov
and
in
fisubs
dec
arpl
addr16
daa
mov
int
lods
pusha
and
lock
shrl
imul
fwait
jg
or
fadd
aas
cmp
fdivl
mov
imul
cmp
bound
adc
mov
out
daa
lods
mov
dec
cmp
dec
inc
mov
stos
sub
mov
iret
add
rcrb
in
jp
mov
repz
loop
mov
adc
testb
push
pop
xchg
xor
sahf
into
mov
xchg
adc
push
mov
jecxz
rclb
mov
fcoml
inc
and
sub
rcl
in
sbb
hlt
ja
movsb
dec
bound
repnz
in
hlt
lcall
rclb
sub
mov
mov
movsl
dec
insl
push
add
leave
dec
gs
sub
popa
add
mov
inc
sub
pop
adc
in
xor
das
mov
xchg
ljmp
jl
movsl
push
mov
jmp
popa
aaa
add
imul
aam
addr16
mov
xor
dec
sbb
fsubrl
test
mov
lidtl
inc
xor
fisttps
mov
sbb
cmp
test
mov
jne
or
fcoms
loopne
in
lods
mov
and
das
clc
out
jb
dec
cld
jnp
icebp
hlt
stos
lea
jecxz
add
clc
shr
cmp
inc
arpl
pushl
mov
adc
mov
push
lret
repz
jle
and
loopne
inc
push
mov
cmp
or
xchg
iret
mov
mov
inc
mov
rcll
sbb
gs
inc
jno
mov
ljmp
cltd
or
loope
lds
cmc
inc
fbstp
push
and
int
mov
into
jp
pop
push
cld
imul
aad
loope
imul
sbb
clc
or
add
es
dec
std
bound
push
add
mov
mov
pusha
sub
mov
mov
test
sub
or
mov
adc
sub
mov
nop
mov
inc
loope
repnz
fadd
pop
or
testl
xchg
adc
lock
fiaddl
add
pop
adc
mov
in
cmp
out
int
divl
orl
loopne
jg
rcrl
jno
sbb
push
add
in
out
lcall
adc
fildl
sbbb
aad
add
mov
sub
mov
nop
mov
fmull
sub
mov
fwait
addr16
test
mov
pop
mov
test
and
fidivrl
fstpt
data16
and
xor
call
add
or
es
cmpsl
lods
xchg
inc
mov
in
sub
mov
mov
cmp
and
mov
or
pop
jg
pop
jo
mov
pop
movsl
insl
nop
inc
or
adc
sbb
jno
mov
popf
int3
push
nop
or
insb
aaa
push
sub
mov
inc
das
mov
fsubl
outsb
inc
sub
scas
lcall
mov
lods
sbb
mov
add
or
or
fistps
mov
fistl
dec
test
sub
test
call
inc
or
std
jno
mov
fldcw
adc
aad
sbb
fildll
ss
fistpl
adc
cmc
stc
mov
xchg
jo
sbb
cmpsb
jg
les
xchg
mov
in
dec
fdivs
in
scas
lret
pop
call
mov
xchg
add
lea
lods
or
arpl
aad
ljmp
pop
push
movsb
fcmovu
or
lods
pusha
cmpsb
add
sbb
hlt
inc
into
shrl
pop
movsl
js
dec
mov
cmp
xchg
push
push
iret
cmp
lock
js
sub
sahf
data16
jmp
mov
mov
mov
repnz
cwtl
adc
test
lret
mov
ret
aam
jae
jecxz
dec
xor
mov
in
jo
cmp
jmp
fwait
and
push
dec
test
add
mov
pop
std
and
rcll
data16
mov
mov
push
cmp
xchg
mov
mov
aad
cmpsl
sbb
into
mov
imul
shl
xbegin
arpl
adc
mov
or
pop
in
dec
lahf
pop
sub
mov
sub
repnz
addb
xchg
lcall
adc
lret
sti
jns
xchg
mov
int3
in
inc
pop
sarb
mov
jmp
push
idiv
iret
xor
mov
cltd
test
dec
xchg
divb
stos
xchg
lcall
sti
je
pop
jp
mov
mov
and
dec
jmp
mov
insb
push
pop
test
sub
ficoms
mov
add
sbb
shl
jg
cmp
push
xchg
mov
push
sbb
mov
sub
and
pop
shr
adc
int
adc
fsubl
test
daa
lcall
xchg
cwtl
pop
jmp
fcomi
ficomps
rcll
in
push
mov
xchg
jb
inc
cmc
mov
daa
pushf
pop
mov
mov
cmp
leave
nop
shll
test
inc
dec
and
out
imul
addr16
push
inc
mov
stos
inc
insl
out
imulb
adcb
cs
gs
xor
enter
pop
xchg
xchg
pop
mov
dec
jnp
sub
dec
mov
sub
or
aaa
xor
mov
jl
rorl
rcrb
pop
or
daa
mov
fnstcw
jle
and
inc
xchg
lcall
scas
fmul
and
jp
or
xchg
jg
inc
sbb
fcoml
cmp
in
aaa
cs
inc
jbe
scas
ljmp
into
cmpsb
aam
xor
data16
jg
testl
in
ret
adc
clc
dec
fldl
fistps
notrack
arpl
out
pushf
imul
add
mov
sbb
inc
mov
dec
inc
in
iret
mov
jb
dec
jmp
mov
xchg
sar
pop
and
dec
xchg
das
jmp
sbbl
jne
scas
cli
dec
push
fmull
mov
or
shl
lret
push
push
insb
rcrl
sbb
in
shrl
pop
pusha
push
ss
mov
sub
data16
inc
das
loopne
mov
jmp
movsb
pop
iret
inc
imul
stos
arpl
mov
jno
sub
adc
cmpsl
mov
mov
out
mov
cmp
cmp
sub
das
cs
stc
adc
dec
pop
dec
into
or
or
inc
out
pop
subl
dec
xchg
push
xor
fsts
jno
test
test
shll
test
or
pop
in
pusha
cmp
ds
inc
mov
test
out
dec
iret
movsb
loop
dec
in
mov
mov
shll
movsb
lea
push
leave
pusha
cmp
xchg
inc
daa
lcall
push
push
in
mov
clc
jecxz
dec
out
jl
pop
or
ficoml
in
jne
push
bound
pop
in
and
repnz
jmp
add
inc
bound
or
daa
pusha
xchg
adc
nop
sahf
in
rcrb
loopne
dec
cmp
popf
jp
ds
jmp
add
mov
push
out
hlt
cmp
jp
cmp
insb
lods
cmp
add
mov
int
jge
aad
and
mov
test
xor
sbb
adc
lea
andl
mov
movsl
fsubs
and
cmc
cwtl
fs
out
or
das
lret
enter
xor
cwtl
sbbl
mov
dec
xchg
sahf
ds
xor
ss
data16
and
cmc
jmp
mov
aad
inc
outsb
add
out
dec
es
mov
out
enter
gs
pop
pusha
mov
cld
fsts
into
cmpsb
pusha
mov
push
into
fisubs
pop
or
push
jmp
gs
or
lock
cmp
fldt
adc
cld
in
stos
mov
fs
fadds
idivb
pop
push
stos
add
std
inc
loop
aad
fldenv
test
jmp
xor
data16
cli
and
dec
adc
inc
add
add
inc
ds
repnz
mov
mov
lea
movb
roll
mov
es
das
cmpsl
push
lahf
repz
xor
cltd
out
out
cwtl
test
inc
cli
xor
cmpb
stos
aam
cmp
lcall
push
push
push
rcl
add
add
pushf
or
sub
jae
mov
cmpsb
fistpll
xor
cmp
sub
xlat
inc
jnp
ljmp
sbb
xchg
loope
imul
addb
das
cli
fistps
sub
add
loopne
xchg
mov
addr16
movsb
ds
lahf
cmpsb
ja
mov
aad
scas
mov
ljmp
mov
ret
lea
or
mov
push
arpl
jnp
add
mov
lea
jb
xlat
or
icebp
out
lock
test
cmp
sti
cmp
pop
mov
pop
into
dec
into
xchg
dec
inc
iret
cwtl
mov
ja
xlat
mov
lds
in
jp
cwtl
outsl
repz
lods
mov
notl
or
sub
dec
dec
xchg
mov
jecxz
lods
push
lret
sub
jno
lods
pop
aaa
daa
outsl
jnp
add
or
insb
insb
pop
sti
cmpsl
movl
imul
call
or
sub
js
cmp
cmpb
movsb
out
add
sti
push
shlb
xlat
dec
or
daa
pop
cmp
cmp
push
sarl
mov
sub
adc
cmp
lods
sub
in
adcb
jb
daa
mov
xor
adc
mov
movsb
xor
cmpsb
out
xor
sbb
sbb
je
imul
bnd
xchg
test
dec
pop
repz
or
loopne
ljmp
dec
imul
not
ret
sar
sub
cs
dec
push
push
or
push
cmpsb
inc
mov
in
popa
mov
inc
pushf
sarb
jne
fildll
loop
leave
inc
adc
xchg
fwait
cwtl
in
out
mov
add
cmp
std
cwtl
mov
xchg
push
add
xor
ljmp
mov
cwtl
push
dec
xchg
leave
xor
stos
inc
add
in
or
ret
jle
mov
mov
lret
imul
std
out
jb
sbb
das
mov
sbb
outsb
push
dec
pop
mov
fyl2xp1
mov
push
adc
test
jno
aam
sub
sbb
xchg
sub
xchg
sti
ja
or
in
xor
std
dec
les
or
xor
jmp
mov
test
sub
inc
ss
call
mov
mov
shl
fstl
push
andl
add
mov
aaa
aad
or
cwtl
stos
cmp
push
icebp
adc
mov
movsl
repnz
fsub
push
cmpsb
out
dec
cmpsb
sbb
js
pop
lret
enter
or
jnp
xor
xor
je
pop
jmp
shll
shll
divb
in
fistps
mov
sub
and
in
add
pop
imul
hlt
mov
mov
xor
xor
jp
loope
add
xlat
adc
fucom
sti
pop
lahf
push
pop
das
jb
dec
dec
xchg
daa
xchg
dec
lods
in
push
fcoms
mov
je
fs
xor
pop
pop
jno
out
daa
and
subb
out
mov
mov
or
int3
mov
and
mov
pop
lods
pop
int3
sarb
or
leave
adc
sti
push
jmp
lods
fistps
fildl
mov
mov
rolb
hlt
shrl
push
pushf
add
and
iret
das
sahf
jns
stc
fwait
pusha
push
jnp
adc
adc
and
pop
inc
bound
movsb
inc
jecxz
in
push
vmwrite
cs
addr16
push
test
cmp
pop
addr16
mov
lahf
jne
jbe
jb
xor
and
fcompl
cmp
daa
aad
ja
push
mov
aas
pushf
insl
aas
clc
rorl
je
rcl
sub
cmpsl
mov
mov
test
jbe
popl
stos
movsl
xor
cmpsl
adc
mov
xchg
aas
xor
jmp
pop
es
sub
xchg
mov
clc
xchg
out
adc
jnp
fstpl
adc
xor
mov
push
outsb
cmp
imul
sahf
mov
popa
loopne
cmpl
mov
rcrl
jge
repnz
cmp
ret
mov
cmp
pusha
nop
pop
cmp
xchg
dec
jg
add
cltd
cmp
push
xlat
cltd
pop
out
jnp
add
cmc
out
nop
movsl
inc
mov
lcall
es
push
jp
adc
add
mov
clc
xchg
stos
fcmovnb
and
pushf
daa
lock
fildl
test
mov
ror
incl
leave
mov
popf
outsb
push
mov
shll
iret
push
jo
pop
push
fistpll
lock
lcall
xor
xor
xor
nop
sahf
int
pop
test
test
mov
push
jg
ljmp
loopne
dec
adc
stos
stos
xchg
or
mov
outsb
das
and
xchg
movsl
fisubl
repnz
sahf
push
jnp
fnstcw
cmp
xchg
je
xchg
adc
test
icebp
push
xor
lret
mov
jl
scas
adc
lods
jne
in
lea
jne
sub
imul
jo
daa
push
in
dec
adc
aad
push
sarl
xor
out
pop
lcall
sub
hlt
mov
xor
and
dec
sub
in
xchg
jle
sub
ja
dec
xchg
inc
cltd
sub
mov
jge
popf
dec
jmp
xor
add
out
xor
mov
and
push
dec
aas
mov
xchg
loop
cs
mov
les
pushl
xchg
fs
mov
nop
decb
dec
out
sub
mov
pop
sub
cwtl
popf
pop
cmp
out
xor
orl
sti
pop
mov
jmp
jl
in
push
and
in
jecxz
dec
call
out
or
jo
and
imul
cmp
outsb
int
aas
mov
and
das
and
xlat
arpl
or
ret
inc
cmp
inc
into
cmp
popw
push
mov
mov
lret
movsb
push
imul
xchg
dec
sbbb
jbe
ret
pusha
fnstenv
mov
push
ss
jmp
and
jle
aas
inc
xor
nop
xor
pop
xchg
rorl
xchg
dec
cmc
gs
shll
pop
sub
aaa
adc
pop
push
pop
in
sbb
push
repz
aam
sti
fdivs
dec
jl
adc
push
aaa
mov
mov
out
bound
mov
outsl
in
cltd
test
mov
adc
jbe
push
loop
pop
inc
mov
jae
pop
inc
push
jae
xchg
mov
adc
mov
jno
xchg
jmp
mov
popf
seta
push
inc
cwtl
mov
jno
int3
mov
push
and
inc
push
mov
hlt
movsl
addr16
push
add
and
movsl
jne
sbb
pop
jl
inc
mov
scas
xchg
int
jp
dec
sbb
repnz
sti
cltd
mov
shll
test
popf
or
xchg
fadds
fimull
pop
jge
fmull
ret
repz
jo
jle
clc
nop
out
aas
ror
clc
dec
and
jnp
das
push
out
and
arpl
mov
loopne
xor
mov
mov
ret
xchg
jecxz
addr16
dec
cmp
iret
cld
dec
les
fiaddl
xor
insl
aad
scas
jo
lods
ss
js
hlt
clc
add
adc
pop
xchg
in
adc
hlt
sub
cmp
jle
pop
lcall
outsb
sub
cs
or
jnp
repnz
fnstcw
and
dec
xchg
add
clc
xor
je
mov
std
mov
dec
mul
enter
cmp
mov
mov
andl
jo
xor
not
shrb
inc
les
and
testb
test
pop
or
add
shlb
jno
mov
push
cmp
or
add
mov
lret
hlt
mov
xchg
imul
sbb
imul
js
data16
iret
cld
aas
jle
pop
or
inc
push
mov
jne
sbb
mov
lds
imul
hlt
xor
inc
aam
jno
jecxz
movsb
or
std
loope
fwait
test
enter
mov
bnd
sub
mov
mov
cs
mov
pusha
scas
insl
adc
jp
inc
out
xchg
pop
and
and
dec
scas
sarl
into
or
pop
pop
mov
pop
jno
jg
mov
mov
outsl
inc
in
add
and
sub
sbbb
cmpsl
mov
inc
sub
sbbb
ret
xor
and
cmpsb
in
scas
in
fdecstp
cld
mov
enter
ret
outsl
xchg
cmpsl
flds
pop
dec
sub
sub
loope
xor
push
fsubrs
mov
pop
cmp
dec
into
pop
xchg
xchg
mov
cmp
xor
rep
lret
jbe
lcall
push
inc
lahf
adc
daa
jns
cmp
cli
rcl
hlt
aas
or
test
cmc
leave
out
mov
ss
push
adc
scas
arpl
sbb
subb
xchg
xchg
mov
or
aad
iret
xor
adc
sub
or
arpl
in
into
inc
xchg
or
cmp
orb
mov
add
mov
enter
out
sub
sub
iret
sub
and
dec
enter
movl
jb
into
nop
scas
push
xlat
cmpsl
push
inc
inc
inc
dec
ficoms
fldenv
inc
imul
mov
popf
bound
push
mov
out
arpl
add
mov
jmp
outsl
pop
lock
cmp
ffreep
inc
or
mov
sub
xor
jbe
cmp
mov
or
scas
test
jecxz
jbe
mov
call
les
mov
fistl
stc
adc
ret
test
xchg
jl
std
lret
stc
or
pusha
loopne
outsb
mov
dec
xchg
jno
push
xor
out
test
lahf
loope
pusha
or
pushf
sahf
mov
ret
pop
jae
aam
rcrl
shl
lea
les
mov
cmc
lahf
xchg
jae
cltd
pop
outsb
icebp
mov
ja
aas
dec
adc
inc
sbb
fnstcw
mov
pop
es
sub
add
insl
test
lret
mov
adc
aas
cmpsb
add
lcall
sbb
test
sub
xchg
add
lods
in
aad
loopne
mov
mov
leave
sub
mov
aam
mov
lds
lods
fsts
inc
icebp
enter
mov
mov
in
js
sub
fcomi
mov
mov
das
sti
fcoms
mov
cmp
fistl
or
cwtd
fisubrs
sbb
sbb
clc
xor
sub
mov
xchg
or
es
mov
push
insl
sub
inc
clc
jmp
ljmp
xchg
or
lahf
pop
lahf
out
stos
xchg
or
imul
ficompl
sarl
test
mov
ret
push
or
push
sub
adcb
jmp
fstpt
add
or
cmp
js
push
ficoms
inc
xchg
adc
xor
dec
mov
sbb
xchg
jecxz
lock
mov
cmp
test
sti
xor
ret
push
in
stos
sbb
mov
adc
into
sub
dec
push
push
gs
xor
cmc
mov
cmpsb
jp
xchg
out
adc
or
dec
or
aas
push
dec
pop
shll
lret
xor
pop
cmp
dec
and
adc
adc
jne
mov
dec
scas
shlb
sbb
push
nop
rorl
inc
xor
mov
ds
iret
jne
leave
mov
lods
jl
push
cmp
pushf
movsb
sarl
pop
sbb
sub
xlat
fs
out
adc
mov
lret
mov
out
lret
jno
mov
mov
rol
mov
mov
cli
mov
add
xchg
dec
pop
xchg
jl
inc
pop
int3
pop
sbb
mov
stos
fidivl
jge
aaa
les
xlat
pop
fwait
loopne
ret
push
sub
and
inc
xchg
mov
sbb
loopne
jne
incl
jmp
or
push
dec
cltd
jb
dec
outsb
jl
mov
sbb
in
jp
sbb
stos
mov
sbb
mov
out
in
addb
stc
fwait
xchg
sahf
or
add
push
sbb
fstpl
fdivrl
jle
sbb
mov
into
sbb
push
cwtl
xor
lods
ds
fidivl
jae
nop
sbb
loop
jne
testl
lea
jg
xchg
or
ror
das
cmp
les
in
addr16
jmp
cmpsb
icebp
fadd
test
xor
fucomi
ds
clc
adc
lahf
xchg
scas
test
dec
sub
stos
or
ror
pop
cwtl
jae
out
ds
lcall
cwtl
lock
fistl
adc
in
xor
inc
push
cmpsl
cmp
xchg
leave
ja
dec
pop
out
stos
mov
dec
jp
negb
jns
addr16
bound
inc
in
imul
cmpsl
add
lods
xor
jecxz
sbb
in
inc
inc
mov
xor
pusha
int3
lret
xchg
fadd
dec
jg
imul
push
push
fs
adc
sub
test
xchg
mov
and
mov
mov
dec
push
push
idiv
aam
cmovae
adc
and
pop
sub
sbb
xchg
in
mov
sub
cmc
dec
adc
jp
les
mov
mov
and
pop
xor
fsubrl
in
loope
daa
cmpsl
xor
mov
push
dec
popf
fisttpl
cli
ja
cmp
loopne
hlt
je
sbb
les
shll
xor
fsts
mov
mov
sub
cmpsl
pop
scas
push
std
lahf
movb
sbb
rcl
dec
sub
jne
jbe
pop
mov
loopne
push
push
adc
inc
and
pusha
mov
sub
cmp
cmpsb
icebp
push
aam
mov
addr16
and
xchg
ftst
imul
xchg
aas
and
clc
sbb
fidivrs
push
enter
xchg
test
inc
inc
adc
dec
and
jbe
jmp
jmp
lea
ret
cwtl
jmp
mov
jns
sbb
enter
inc
xlat
enter
dec
and
xor
pop
mov
fstps
in
stos
jmp
and
insl
fsubs
test
xchg
bound
jge
mov
les
sub
pop
pop
pop
in
mov
push
cld
xor
xchg
pop
push
loope
icebp
int3
fadd
cmp
shr
add
sahf
out
pop
sub
jae
xchg
int3
add
sbb
sbbb
xlat
push
push
cmc
add
push
fdivr
cwtl
jl
out
mov
fildll
mov
repz
mov
xchg
push
push
mov
stos
inc
repnz
jle
cli
addb
inc
jnp
or
lret
adc
mov
add
cmp
es
xchg
mov
push
dec
cltd
xor
push
jp
push
mov
and
ss
cmp
sbb
cli
push
xor
movsl
inc
je
sahf
adc
jne
decl
add
jg,pt
fimull
jno
outsl
mov
cli
cmp
mov
sahf
jl
sbb
push
ret
ror
ret
aas
mov
mov
aaa
cmp
outsl
jno
and
inc
jnp
shll
bound
aaa
and
xor
xor
mov
and
je
sbb
ljmp
in
mov
stc
loope
xchg
sub
xchg
enter
cli
mov
ds
jmp
fcoms
and
and
or
mov
pop
xor
fsubrl
cmpsl
fcmovb
addr16
loopne
arpl
lods
sbb
imul
aam
sbb
sbb
adc
rcl
add
xchg
dec
jmp
mov
dec
lcall
lret
insb
inc
lahf
pop
movq
jno
test
mov
mov
cltd
into
shll
push
push
jge
sub
mov
sub
out
ss
test
in
movsl
jle
scas
sub
lods
and
orl
xchg
lret
arpl
ljmp
mov
push
in
ficomps
inc
cmp
pop
test
pop
out
push
sub
add
dec
repnz
xchg
icebp
cmp
jae
sub
cmp
out
into
jg
les
mov
movsl
sarb
jg
cmp
pop
scas
xchg
movsl
imul
fs
out
jg
divb
xor
mov
ror
rol
xchg
test
mov
sbb
add
insb
pop
inc
in
dec
ret
cmp
fcomps
jge
lahf
call
inc
mov
nop
test
out
in
and
adc
adc
sbb
fcompl
sbb
in
adc
arpl
fwait
push
or
or
leave
insb
jbe
xchg
in
cmp
je
or
ja
hlt
pop
cmc
mov
xor
pop
mov
fidivrl
jp
push
into
cmpl
pop
pop
dec
test
in
dec
iret
repnz
mov
dec
mov
negl
jl
push
add
jg
xor
mov
fwait
enter
cmp
sbb
test
mov
push
pop
xchg
sbb
xor
outsb
fisubrs
stc
add
les
add
cmp
push
cmpsl
mov
insl
loop
in
test
mov
adc
sbb
sub
push
aad
push
pop
sub
xchg
sbb
sub
and
xchg
jns
js
or
pusha
push
out
or
cli
xchg
aaa
rclb
mov
mov
pushf
add
and
inc
test
fcoml
jecxz
out
inc
mov
mov
mov
and
loopne
test
or
and
mov
inc
and
aas
out
sbb
mov
mov
pushf
jecxz
xchg
pop
cmp
pop
inc
mov
leave
adcb
add
or
clc
add
push
mov
inc
daa
adc
lcall
inc
mov
clc
add
xchg
addr16
fcmovnbe
inc
inc
cli
sub
mov
scas
pushf
cwtl
imul
aad
jo
cmp
std
out
outsb
out
shll
je
shrb
repz
and
pop
mov
outsl
aaa
out
ret
and
xlat
aaa
outsl
cltd
insl
mov
rcr
mov
jno
mov
mov
in
lods
or
cmp
jbe
lods
xlat
jg
int3
movsl
stos
inc
xchg
out
aam
mov
pop
rcrl
cmp
or
and
inc
jg
mov
nop
sbb
rol
dec
testl
scas
repnz
pop
xchg
repz
inc
xchg
inc
xor
decb
push
inc
pop
aad
xchg
aas
aas
and
sub
ljmp
ds
dec
nop
pop
mov
mov
mov
mov
mov
xor
and
in
pop
ljmp
insb
pop
pop
outsb
stos
mov
jae
repz
daa
loopne
aad
test
pop
mov
outsl
in
mov
insb
sub
out
jp
sbbb
pusha
mov
or
xor
pop
lret
mov
xchg
lret
imul
cmp
mov
pop
mov
cwtl
movsl
ret
bound
add
inc
push
cs
mov
rcrl
pop
cmc
jae
xchg
lock
xchg
jno
shrl
dec
sbb
loopne
sub
loope
addl
cltd
test
sbb
fists
hlt
lea
jg
pop
repz
dec
push
clc
lock
dec
cmpsb
xor
jmp
leave
les
cld
mov
mov
jb
mov
mov
xor
sarb
ror
out
add
mov
inc
mov
pop
push
test
rorb
jl
lea
aaa
mov
jb
rcl
and
mov
lret
dec
push
jo
and
int3
mov
and
orb
or
or
and
mov
es
aas
mov
pcmpeqd
mov
imul
jno
lods
icebp
sbb
xchg
clc
shrb
inc
test
outsb
or
cmpsl
mov
inc
rcr
scas
aaa
xchg
and
sbb
dec
or
fyl2xp1
xorl
mov
xor
sbb
cmp
and
jbe
fsts
cmp
arpl
xchg
lea
int
mov
out
xchg
sar
push
imul
cmpsb
sub
inc
jl
out
insb
jmp
mov
pop
cmp
mov
mov
mov
lods
imul
and
addr16
mov
fs
pextrw
pushf
movl
mov
and
and
xor
push
mov
outsb
and
push
repz
push
cmp
lret
popf
leave
bound
int3
sbb
ret
mov
call
jmp
inc
cmp
jae
mov
fwait
pop
dec
test
ret
lcall
inc
ljmp
and
xchg
jl
outsb
lret
packsswb
das
test
adcl
jne
sbb
mov
adc
xchg
in
pushf
jo
xlat
ret
push
fcmovbe
add
in
and
int
dec
mov
data16
mov
icebp
push
clc
ret
inc
fcoms
push
xor
fucompp
ljmp
push
pop
movsb
jae
lods
add
sbb
xchg
popf
mov
ljmp
adcl
push
movsl
jae
pop
imul
out
insb
test
pop
cmp
mov
movsb
ret
inc
mov
dec
mov
mov
or
test
add
inc
sub
or
iret
pop
iret
rcl
imul
adc
in
repnz
negb
add
xor
and
stc
lcall
dec
aaa
jge
mov
mov
dec
aas
movsl
scas
aaa
scas
sbb
dec
cmp
push
pusha
int3
shll
fsubr
lahf
add
notl
add
xchg
movsl
insb
mov
idivl
push
out
xor
fcomps
test
int
pop
dec
adc
in
inc
sub
addr16
ret
xor
push
scas
int
shl
push
ss
sahf
mov
mov
sub
pop
cltd
mov
int
insl
pop
mov
cmp
dec
jae
cmpsl
notl
or
test
push
in
int
mov
cmp
xchg
test
dec
stos
or
push
shlb
adc
add
jne
jmp
xor
jle
cs
push
je
push
pop
jge
fsubrl
iret
loop
push
jae
arpl
add
add
cltd
push
dec
xchg
jnp
pop
lret
mov
test
loop
js
ret
pop
pop
mov
fstpt
int
and
lret
pop
xchg
mov
inc
push
popa
rcrb
push
jl
pop
jbe
add
rcrl
push
aas
andl
in
push
adc
divb
mov
xchg
mov
lods
test
mov
cmp
int3
daa
mov
enter
lahf
cmp
popf
outsb
sub
or
popa
rep
jae
divb
sbb
jg
fstpl
inc
stos
jno
out
jmp
cmpsb
pop
and
or
mov
pop
in
aas
sti
dec
push
mov
out
pop
mov
pop
ja
jb
jno
or
fisubl
test
test
in
movsl
gs
pop
imul
lret
sub
cs
cld
jnp
xlat
std
jae
pop
clc
xchg
sbb
mov
xchg
sbb
xchg
xor
pop
push
jo
cltd
mov
cmp
cmc
rclb
imul
out
jae
push
xchg
stc
dec
fdivs
xchg
jle
inc
add
lock
adcl
jae
and
push
mov
cmp
std
mov
cwtl
lcall
popa
es
cli
mov
fisttpll
pop
cmc
imul
add
lds
cmc
iret
lahf
cmc
aad
sub
jnp
mov
xchg
jmp
inc
push
add
add
addl
stos
add
in
into
pushf
pop
mov
dec
ret
sbb
daa
movsb
movsl
mov
fimuls
gs
movsl
fsubr
xorl
fistps
mov
mov
push
test
add
fs
xchg
push
rcrl
aaa
arpl
jns
pop
das
mov
push
movsl
push
adc
dec
mov
not
xchg
in
mov
out
popf
jecxz
incl
push
xor
dec
daa
mov
cmp
ret
xorl
jbe
aad
fucomip
mov
push
les
mov
mov
cmpsl
leave
arpl
add
push
fstl
nop
cli
mov
jl
inc
push
mov
lret
cmc
in
ja
or
cmp
and
or
push
push
test
or
push
xchg
fdivrs
out
push
enter
addr16
xchg
addr16
cmp
repz
lock
lcall
lds
clc
pop
or
scas
ljmp
mov
ljmp
jg
outsb
xor
mov
clc
pop
adc
sbb
inc
test
scas
sub
sbb
mov
mov
gs
sbb
test
in
push
cmpsb
jl
jle
sub
dec
int
pop
stc
pop
arpl
mov
test
clc
movsb
outsb
xor
arpl
xchg
xchg
pop
cmp
shlb
cmp
mov
and
fldcw
lret
cmp
movsl
mov
xor
leave
xchg
jb
pop
jno
dec
add
xchg
mov
xchg
cvtdq2ps
cmp
out
test
dec
xchg
adc
sbb
pop
cmp
mov
ret
push
adc
lds
in
in
mov
loopne
push
xchg
cmp
dec
mov
testb
jns
mov
jo
test
push
jmp
or
enter
jle
xchg
cltd
insl
pop
dec
loop
imul
out
test
add
bound
fnstcw
pop
cli
mov
pop
jle
and
faddl
inc
adc
lldt
sbb
jmp
pop
cmpsl
fildl
testb
sbb
mov
cs
outsl
shl
sbb
and
hlt
sahf
rorl
pop
cmp
or
lcall
xchg
mov
mov
xchg
stc
dec
xlat
leave
shlb
jge
std
call
and
xchg
arpl
inc
mulb
push
xchg
lcall
lds
fstl
lods
sbb
push
jbe
adc
mov
push
jno
mov
pop
pop
bound
insl
jp
jne
adc
filds
dec
add
sbb
jle
cmpsb
xchg
daa
and
movsb
ja
sub
out
aam
or
ljmp
adc
cmp
fcmovnb
sub
leave
ds
push
and
cmp
lret
ret
aaa
pop
fisttpll
faddp
or
mov
jle
push
cmc
imul
fmull
pop
loopne
jmp
leave
hlt
sbb
dec
in
pop
push
mov
gs
lea
enter
xchg
loop
adc
sahf
pop
cmp
inc
and
das
les
shlb
cli
lcall
jecxz
inc
push
cld
jns
icebp
dec
pop
cmpsl
loope
and
push
push
mov
je
and
lods
rclb
push
add
pop
jo
aam
pop
and
xchg
je
push
cmp
lcall
cli
and
dec
or
sub
test
mov
adc
mov
in
sti
frstor
clc
test
fimull
mulb
cld
sub
dec
repz
mov
pop
mov
jae
inc
pop
scas
inc
inc
ret
ret
cmpsl
sub
push
or
push
aas
lret
jp
pop
into
cmp
xchg
pop
jge
mov
xchg
ret
fcomi
jns
add
or
test
mov
scas
cld
test
iret
lcall
fstpl
add
arpl
mov
adc
add
es
pop
fstp
out
mov
outsl
xchg
out
sbb
jl
ss
lods
pop
lods
sbb
lss
sti
push
clc
cmp
out
or
fld
mov
jmp
out
push
mov
jo
mov
rorl
inc
or
ud1
bnd
mov
push
and
ret
jno
xchg
fidivs
movsl
xor
cmp
jge
push
fs
jle
in
notb
clc
jne
and
xor
std
fldenv
mov
sub
inc
aaa
test
or
out
add
cmp
loopne
or
iret
sbb
push
jecxz
into
fwait
mov
cltd
jno
mov
push
mov
fadd
in
or
repz
in
jge
fsubrl
cltd
wbinvd
inc
pop
mov
xlat
push
lahf
jp
into
mov
jns
icebp
mov
push
sub
or
push
xchg
pop
cmp
xor
leave
add
xchg
fldenv
aaa
jns
sqrtps
jmp
and
xchg
sub
scas
inc
mov
mov
xchg
scas
add
xor
test
rcr
ja
mov
lock
and
shrb
imul
cmp
popf
push
adc
sub
push
xor
add
sbbb
xchg
in
mov
iret
xor
adc
pop
shlb
mov
add
and
sahf
push
push
stos
push
mov
or
cmp
inc
jp
sub
outsb
push
std
xor
in
xor
stc
nop
mov
ja
sahf
sub
adc
sub
dec
jo
ljmp
inc
lea
psraw
jmp
sbb
sbb
in
test
mov
mov
add
dec
into
cmp
std
push
gs
mov
and
lahf
sbb
das
adc
es
xchg
or
inc
ret
dec
ret
sub
add
sbb
adc
add
push
dec
or
sbb
data16
loop
stos
mov
mov
add
mov
xchg
rol
in
sub
adc
mov
rcr
inc
stos
or
mov
mov
clc
and
outsl
imul
mov
mov
jmp
adc
lods
sub
fcmovbe
adc
inc
aam
scas
pop
sbb
dec
or
xchg
mov
sbb
test
jnp
loop
jmp
dec
or
add
sub
jle
xchg
dec
push
jmp
aas
push
movsl
movsb
xor
pop
stc
dec
cmp
pusha
mov
mov
movsl
push
ss
cmp
mov
das
cmpsl
jle
mov
das
fwait
or
mov
inc
adc
push
cmpsb
lret
dec
int
push
lods
mov
fstpl
mov
push
mov
dec
mov
sti
orl
pop
or
xor
xlat
loop
repz
out
imul
es
fidivl
pop
iret
fstl
xor
dec
mov
push
cmpsl
bound
dec
pusha
sahf
pop
cmp
movb
and
pop
aas
fisttpl
xchg
jge
nop
jp
nop
or
inc
pop
rcrl
dec
loope
popf
xchg
adc
pop
push
in
imul
mov
rcr
push
jle
or
push
das
cmp
pop
pop
lds
and
call
scas
sahf
pop
shlb
icebp
pop
cld
or
lea
and
jge
outsl
lds
jns
aam
mov
add
mov
loopne
test
push
je
stos
inc
test
insl
fdivrl
ja
mov
in
jecxz
cmpsb
mov
mov
aas
pop
mov
pop
xchg
cmp
xor
out
add
xchg
push
rcrb
leave
cwtl
push
adc
and
scas
push
ds
jns
push
ret
sub
push
pop
cmpsb
mov
icebp
sub
dec
movsb
push
add
into
gs
dec
test
cmp
stos
cmpb
sub
popf
mov
out
pop
scas
jl
out
cmp
mov
cmpsb
sbb
fwait
mov
and
into
fisubs
push
xor
out
fbstp
adc
jmp
cli
test
js
inc
fsubp
sub
sub
push
icebp
gs
mov
mov
icebp
pop
adc
clc
pop
lret
dec
pop
xchg
std
add
inc
xor
int3
push
cld
pop
pusha
pop
and
aaa
or
mov
push
and
dec
inc
xor
pop
jl
add
mov
lds
mov
sub
les
jle
adc
aas
push
mov
aaa
add
xor
cmp
mov
popf
scas
mov
out
dec
xor
loope
pop
adc
pop
flds
push
in
xchg
push
push
cmpsl
fiadds
xor
lea
inc
mov
push
mov
jl
jecxz
xor
mov
mov
insl
or
xchg
ror
leave
lret
adc
push
testl
push
shr
mov
dec
inc
mov
mov
js
xchg
push
cltd
dec
xchg
shr
rol
ss
pushf
das
fildl
xor
jmp
arpl
inc
stos
mov
int3
in
pop
xor
in
cmp
dec
inc
stos
or
sbb
cltd
add
sti
cwtl
ficompl
or
mov
sub
push
cmpsb
cmp
clc
mov
fbstp
mov
mov
xor
jp
dec
add
cmpsb
or
push
xor
or
and
cmc
cs
dec
loopne
aas
mov
pusha
test
test
inc
push
and
mov
and
cmp
dec
sbb
gs
mov
lods
scas
sub
xlat
mov
push
popf
pop
cld
mov
jmp
jns
movsb
ret
push
sbb
dec
dec
scas
xor
cltd
jnp
adc
mov
aam
subb
xchg
sbb
jg
mulb
sbb
mov
cmpsb
gs
mov
rolb
out
aas
dec
push
push
adc
push
aas
cwtl
fisubl
in
xchg
jge
xchg
mov
and
push
push
mov
negb
sbb
mov
ljmp
xor
dec
insl
or
insb
rcrl
movsl
dec
cmp
imul
add
push
sbb
mov
sarb
cli
int
loopne
push
add
js
loope
jecxz
push
arpl
sub
ljmp
ljmp
jle
nop
pop
and
int
mov
cmp
pop
cmp
mov
push
dec
repz
push
fwait
sub
hlt
lds
sub
cmp
mov
rclb
mov
std
mov
mov
fwait
ljmp
test
xor
mov
add
rolb
mov
fwait
mov
insl
cmovbe
jo
inc
jo
push
cmp
mov
mov
loopne
xor
je
mov
add
arpl
cmp
andl
pop
mov
sbb
cltd
mov
mov
pop
xchg
inc
jnp
stos
out
mov
bound
dec
cld
sti
mov
test
std
jnp
hlt
shll
dec
sbb
push
xchg
gs
push
mov
sbb
ja
fwait
inc
push
aam
xor
lahf
movsb
stc
sub
rcrl
imul
adc
das
pop
int
jg
test
cmp
add
outsl
aaa
xchg
fs
int3
pop
push
or
add
mov
cmp
or
pop
hlt
sarb
dec
aas
or
add
and
ss
add
lock
push
pop
repnz
mov
or
add
jnp
push
push
pop
daa
push
int3
clc
fwait
pop
in
mov
incb
push
ja
in
mov
or
aaa
fwait
lret
scas
push
testl
shll
addl
or
xchg
push
adc
scas
ret
ret
stc
lea
jp
sbb
lods
xchg
inc
jl
les
mov
and
sub
jo
cmp
fwait
push
cmp
test
cmp
in
scas
fistps
jnp
int3
mov
es
cs
je
and
addr16
dec
in
dec
lock
xor
mov
sti
addr16
cmp
push
push
pop
testb
mov
jb
dec
lcall
or
add
nop
repnz
dec
mov
icebp
inc
fucomp
or
sbb
rcrl
ud2
lret
push
push
arpl
sarb
xor
sarb
sub
insb
nop
cmpsl
shrl
push
or
or
sahf
pop
jmp
je
out
mov
hlt
push
icebp
mov
std
jns
cli
in
into
jl
hlt
inc
leave
ja
jae
push
hlt
xor
push
cmp
sbb
mov
jno
lods
ret
sub
movsb
repnz
inc
in
inc
data16
xor
testb
xor
sub
inc
and
or
jmp
jge
jo
sbb
hlt
aam
insb
cwtl
jmp
ss
jno
mov
das
and
jmp
shrb
cmc
jo
call
mov
xchg
arpl
outsb
scas
fbstp
ret
cmpsb
add
rcrb
xor
sbb
mov
lock
pop
aad
subl
or
shlb
loopne
addr16
rcr
rol
imul
mov
ficomps
or
imul
mov
mov
jnp
or
fwait
stc
jae
add
sbb
test
add
push
into
xchg
sbb
or
lahf
pop
shlb
xchg
inc
fstps
jb
enter
push
test
jmp
mov
cmpsl
xor
add
lcall
inc
rolb
adc
outsl
inc
xchg
roll
dec
das
inc
or
sub
cmp
popa
mov
je
sub
aaa
into
push
dec
bound
pop
cmpsb
pushf
xor
pop
scas
dec
int
js
lock
mov
add
jne
inc
testb
mov
jno
sub
jb
ror
pop
push
cmpsl
jp
mov
out
push
shll
xor
imul
loopne
rcll
push
ds
inc
adc
and
ficomps
sbb
inc
xlat
jb
addr16
out
add
mov
outsl
arpl
jle
fmull
in
pusha
andl
mov
push
stos
in
fcomip
movsl
sub
mov
xchg
mov
mov
cmp
sub
sub
bound
dec
sub
loop
dec
ss
cmp
hlt
inc
fsubrs
lahf
push
sub
out
in
jp
sbb
fwait
cmp
cmp
push
int3
adc
ret
test
popf
fnstenv
xchg
jmp
add
daa
ds
data16
cmpl
jne
mov
aam
fstp
imul
mov
call
cmpl
loope
out
cmp
js
and
cmp
jbe
mov
xchg
inc
sbb
in
fiadds
sbb
hlt
push
and
ds
inc
fs
out
mov
mov
mov
iret
adc
jae
or
loopne
loope
aaa
outsl
push
dec
ret
lea
out
gs
popf
mov
mov
jge
faddl
adc
lds
jecxz
add
dec
aad
fwait
mov
repnz
lock
xchg
fisttpl
dec
and
mov
dec
insl
jae
cmpsl
xchg
dec
sub
mov
mov
test
xor
xor
fimull
add
sub
cmp
sbb
js
mov
loopne
mov
out
lcall
out
test
repz
add
lods
sub
or
push
dec
mov
divb
lock
decb
sahf
lahf
dec
add
cld
mov
mov
test
xor
adc
stos
add
push
adc
xor
test
out
push
rcrb
xor
jge
jne
jl
xor
cltd
xchg
lcall
in
js
adc
mov
and
cld
ret
xchg
ficompl
pop
and
test
bound
hlt
insb
sbb
mov
sub
mov
leave
adc
xor
imul
jmp
pop
adc
mov
pop
repz
xchg
out
lods
mov
sub
or
das
pop
and
insb
out
movsb
cld
sbb
sbb
mov
decb
sbb
add
out
rorl
mov
adc
movsl
mov
fildll
and
push
dec
push
andl
cmp
imul
inc
inc
mov
xor
movsb
push
stc
mov
pusha
sbb
fnstenv
and
jg
pusha
in
out
movsl
inc
test
iret
push
push
pushf
ret
xchg
rol
or
sbb
jb
or
sub
xor
pop
dec
cmpsl
fidivl
jmp
insb
scas
mov
lret
sbb
dec
int3
aaa
dec
outsb
enter
popf
outsl
pop
ds
imul
sub
test
nop
dec
and
jno
cs
push
dec
push
sub
jmp
cltd
rcrb
mov
movsl
adc
xor
repnz
fbld
mov
push
push
das
mov
bound
mov
cmp
jmp
dec
add
xor
adc
popf
push
lods
faddl
ret
scas
subb
mov
ja
scas
xchg
adc
repnz
mov
fsubs
cmp
dec
pop
jo
mov
mov
sahf
test
fdivl
call
je
icebp
dec
ds
or
push
sbb
mov
inc
in
jae
adc
aam
icebp
shl
push
sbbb
add
int3
pushf
out
xchg
lock
or
sbb
push
test
stos
loope
xchg
inc
notb
mov
sti
add
jmp
cmp
xchg
xlat
mov
dec
jecxz
lahf
das
std
adc
or
in
imul
adc
cmpsb
subl
mov
pop
idivl
rcrl
fidivrl
and
cltd
test
addb
stc
out
xchg
mov
mov
mov
ffreep
sti
sub
leave
ror
ret
xor
jne
push
int
dec
and
stc
lods
push
cmp
and
cmpsl
push
ja
in
adc
or
fs
shrb
push
loop
add
sbb
pushf
insl
mov
div
and
pop
dec
and
pop
xchg
and
das
xor
xchg
popf
jae
mov
in
jno
sbb
push
fsubl
mov
icebp
std
ret
out
lea
dec
push
pop
je
pushf
xchg
pushf
and
jb
inc
push
pop
xchg
rcr
ds
pop
lret
jns
or
daa
jle
daa
jecxz
and
repnz
jae
and
dec
lret
or
mov
jecxz
addr16
pop
adc
xor
mov
inc
xchg
dec
shl
sbbl
mov
dec
int
jo
xchg
inc
out
das
scas
ret
adc
popf
mov
add
rolb
inc
rcrl
in
aaa
dec
jbe
std
lea
adc
sub
icebp
dec
hlt
test
cmp
fninit
cmp
into
mov
and
repnz
mov
das
sub
push
fdivl
dec
popw
push
dec
popl
ja
mov
xor
les
sbbb
into
fs
inc
loop
jecxz
and
adc
add
push
rolb
lods
std
ficoms
lret
std
sbb
addr16
arpl
pop
add
add
mov
subl
clc
xchg
cmpsb
int
inc
mov
add
sahf
or
mov
jge
sub
mov
int3
in
dec
adc
ret
stos
mov
faddl
inc
xor
pop
adc
mov
and
mov
ficoml
push
mov
dec
data16
mov
add
imul
sbb
and
inc
mov
inc
or
or
mov
out
inc
out
aam
sub
daa
js
jl
dec
test
out
nop
iret
and
lods
push
loopne
int
aaa
xlat
lret
into
lods
pop
cmp
add
push
sbb
sub
adc
or
jnp
sarb
pop
push
mov
pop
jno
push
lret
ds
ret
loope
hlt
cltd
gs
cmp
push
loope
inc
inc
and
xor
pop
stc
xor
sub
adc
inc
inc
aad
jns
mov
lahf
mov
arpl
mov
mov
ja
aas
or
bound
addr16
pop
insl
outsb
ja
gs
ss
ret
js
adc
movl
push
ret
sbb
or
mov
mov
lods
pop
sub
jmp
fwait
adc
pop
mov
insb
xchg
cmc
adc
push
mov
test
push
cmp
pop
or
xlat
cltd
das
imul
ljmp
movsb
cmp
adc
push
inc
popa
push
rcll
dec
fwait
aam
fsubl
stos
popa
mov
ror
cmp
orl
pop
dec
bound
out
sbbb
mov
out
call
sysret
fwait
or
adc
sub
outsb
cmp
sbb
je
fwait
push
faddl
loopne
push
cmp
inc
cmp
addb
and
ss
mov
mov
rolb
mov
iret
jae
enter
xchg
aas
dec
mov
stos
mov
xor
insb
cld
adc
arpl
insb
std
push
push
jae
dec
xchg
mov
xchg
xor
dec
std
push
pop
std
es
into
sbb
xchg
mov
insb
clc
push
mov
cmp
mov
jle
mov
lret
lret
add
les
call
bound
mov
add
lahf
rcrl
repz
enter
or
cli
neg
adc
insl
stos
lods
cmp
repnz
sub
in
leave
inc
rorb
fnstcw
leave
inc
xchg
or
stos
sub
inc
mov
je
js
test
lea
aam
jle
xchg
push
outsb
sbb
lret
inc
cmp
test
fcmovbe
sub
lcall
clc
leave
pop
push
sub
ss
jb
xchg
iret
nop
push
ja
je
adcb
push
mov
int3
sub
or
adc
dec
repnz
push
in
daa
incl
mov
loopne
lds
jbe
sub
cmpsb
pushf
inc
fadd
cwtl
or
mov
or
stc
into
mov
xor
mov
or
es
addr16
pop
or
push
xchg
jno
ljmp
fisttpll
mov
ja
inc
test
adc
out
das
out
ret
or
cld
out
xor
mov
add
or
imul
pop
push
xchg
shlb
movsb
out
aam
sti
dec
mov
jae
test
in
mov
lcall
data16
inc
dec
fldenv
ljmp
xchg
iret
fistl
in
mov
xor
jp
mov
jmp
insl
dec
adcb
dec
mulb
push
fwait
xchg
inc
lea
cmpsb
shll
push
add
sub
cmp
push
rorl
pop
xor
out
movsl
add
and
sbb
scas
xor
int3
lods
sub
sti
negb
pushf
adc
push
lahf
movl
pop
movsb
jl
stc
sub
bound
filds
pusha
add
xchg
mov
addb
pop
push
or
jae
cmc
pop
inc
cmp
and
imul
int
loop
lahf
lods
jge
aaa
jns
or
mov
enter
mov
adc
inc
lret
inc
clc
aad
stos
and
mov
lret
loop
scas
loop
and
daa
popa
and
aas
repz
insb
mov
mov
mov
sbb
and
inc
jno
mov
aad
cmp
xchg
xor
aad
stos
pop
inc
test
xor
fs
movsl
xor
sbb
push
add
cmp
inc
dec
mov
stc
add
ljmp
repz
push
mov
or
cmp
xchg
ret
push
cmpl
fsubrl
push
jmp
mov
inc
inc
sub
rcrl
push
xchg
shlb
xchg
inc
dec
ret
inc
jmp
push
and
mov
loopne
popf
add
loop
in
add
movsl
or
add
pop
dec
imul
into
insb
inc
je
or
push
aad
mov
lret
inc
shrb
xchg
adc
es
jg
test
and
pop
data16
pop
leave
push
movsl
sti
dec
jne
fmul
aam
add
xchg
adc
stc
lahf
fs
sbb
stos
aad
clc
insl
xchg
pop
cmc
pushf
addb
adc
loope
xor
pop
enter
mov
jno
sub
imul
and
jbe
and
lret
nop
xchg
push
pusha
inc
xor
leave
pop
daa
test
ret
loope
pusha
xor
add
mov
inc
xchg
jl
dec
cmc
push
dec
stos
ja
loopne
mov
sub
and
pop
fimull
popa
cmp
or
lea
mov
push
test
sbb
mov
push
lea
mov
fcompl
pop
out
fistpll
and
adc
dec
pop
push
test
ret
mov
daa
loopne
sbbl
jmp
mov
or
xor
cmp
and
mov
dec
cmc
pop
add
in
inc
cmp
lahf
dec
ret
cmpsl
imull
jae
sbb
and
insl
dec
mov
adc
ds
jnp
mov
and
pop
nop
nop
andl
leave
mov
mov
inc
imul
push
and
mov
fwait
inc
int
lds
sub
adc
jne
fs
jmp
cmp
xchg
jo
test
mov
mov
xchg
xor
pop
mov
jge
in
xchg
aas
js
push
push
cmpsl
stc
sub
mov
cmpsl
cltd
sub
fcoml
inc
add
jle
shr
push
jmp
dec
adc
dec
xchg
push
xor
ficoml
dec
mov
test
je
test
rolb
and
pop
cwtl
sbb
fisubrs
mov
jne
outsl
fs
sub
incb
fadds
insl
jae
pop
out
xor
jmp
dec
inc
jg
push
adc
xchg
add
jge
dec
in
fs
stos
push
daa
inc
jecxz
jns
mov
dec
cli
pop
xor
fiaddl
rcrl
add
push
xchg
insl
jp
pop
stc
sbb
push
lcall
xchg
pusha
test
fstps
cmc
xor
xchg
push
ljmp
sbb
push
out
jle
inc
movsb
iret
sahf
xor
lahf
mov
fsubs
inc
push
rorb
shrb
outsb
cltd
sub
xchg
lret
cmp
call
loop
adc
push
fisttpll
icebp
sub
mov
xchg
icebp
xor
adc
mov
pop
or
lcall
jae
cwtl
xor
push
sti
int3
inc
les
sub
push
xor
pop
out
xor
in
shll
and
fsts
push
cmp
jne
and
and
out
sbb
push
mulb
or
cmp
lcall
push
incl
mov
adc
mov
cmp
and
xlat
dec
jmp
imul
sbbl
xchg
decl
pusha
loopne
pop
leave
mov
xchg
loope
lret
push
and
loop
es
pop
add
fldcw
push
mov
sbb
xor
shr
movsb
outsb
pushf
push
repnz
popa
add
rclb
xchg
cwtl
add
sbb
les
fisubs
out
or
pop
mov
mov
stos
ret
xor
push
insb
and
out
cmc
xchg
ja
mov
add
cltd
mov
pop
adc
push
pushl
jno
mov
repnz
mov
pop
fsts
sbb
mov
rolb
stc
and
mov
mov
inc
js
or
fcomps
fnsave
inc
and
aaa
jae
scas
or
out
sbb
mov
daa
icebp
flds
cmp
leave
shlb
cmp
repz
cmp
add
fdivp
mov
mov
inc
fxch
ja
adc
push
jg
adc
xchg
addb
insb
push
sbb
inc
inc
ficoml
cmp
mov
daa
pop
jle
out
bound
ja
or
dec
imul
loop
inc
repnz
in
xchg
enter
rol
xchg
cs
or
inc
ja
add
fstl
sub
jns
and
lods
fadds
clc
xor
nop
mov
push
loop
add
arpl
enter
enter
scas
icebp
imul
cmp
movsl
scas
hlt
xchg
mul
test
das
leave
fidivrs
mov
fmul
out
fcomps
adc
gs
cmpsl
cmp
pop
xor
mov
mov
in
xchg
js
scas
arpl
cmp
sarl
mov
sub
xchg
js
add
adc
ss
xlat
imul
pop
sub
push
push
mov
pop
enter
iret
mov
loope
sub
sbb
mov
mov
pop
xchg
test
cmpsb
push
cmpsl
sbb
pop
jl
addl
pop
pop
out
jae
insb
call
mov
xor
sbb
loopne
jnp
push
inc
outsl
add
dec
add
inc
mov
jb
add
std
cmp
daa
mov
cmpsb
rcll
sub
out
gs
cmpsb
andb
icebp
shll
int3
cli
pop
dec
xor
int3
lock
or
call
pop
aad
shlb
mov
or
pop
icebp
jnp
lods
negb
jno
punpckhbw
sub
xchg
dec
mov
cmp
hlt
dec
aam
roll
pop
push
out
xchg
jbe
push
int3
mov
repnz
and
imul
push
aas
xchg
pusha
mov
fcomps
fidivl
mov
dec
rcll
mov
mov
push
sbb
pop
cmpsl
cmpsl
or
xlat
mov
rol
push
sbb
iret
lret
sbb
test
scas
pushf
lea
cmpsb
xchg
mov
mov
lret
stos
sub
push
mov
lds
cmovae
ftst
xchg
nop
stos
sub
xorl
adc
ljmp
cmp
mov
mov
mov
jg
sub
decl
gs
xchg
jnp
lds
mov
rclb
pop
out
push
xchg
sbb
cmpsl
adc
or
jmp
inc
hlt
inc
ret
push
in
shl
mov
add
jmp
ret
lret
jle
push
xor
rorl
sbb
pushf
pop
pop
jns
sub
add
ljmp
shlb
lcall
push
fwait
test
jne
out
push
shll
add
jns
in
push
dec
xor
sahf
or
cwtl
pusha
add
and
lods
leave
rorl
arpl
xchg
bound
rcrb
lcall
mov
and
mov
and
jns
fcomp
xchg
push
cmp
adc
ds
and
shlb
jnp
cmpsb
test
xchg
iret
mov
push
jle
jg
mov
addr16
test
int3
cli
scas
and
pop
into
loopne
stos
mov
mov
int3
xchg
push
jne
enter
push
icebp
cmp
push
lods
bound
rcl
cmp
lds
mov
cltd
xchg
nop
in
nop
sbb
pop
int
push
jp
negl
jo
stos
ja
aas
out
pop
dec
inc
sbbb
clc
pop
xor
mov
pop
mov
pop
fcoml
push
mov
testb
roll
or
lds
mov
call
jg
dec
ljmp
xor
stos
repnz
mov
dec
jle
jmp
fiaddl
inc
adc
push
push
aad
sub
mov
adc
insl
push
sbb
aam
scas
xchg
pop
cwtl
sbb
dec
lods
cmp
xor
subb
and
push
mov
ds
sub
xchg
rcll
push
mov
xor
dec
inc
leave
out
faddl
sbb
push
mov
insl
jnp
mov
sbb
out
jb
loop
test
xor
sub
jb
xchg
call
out
faddl
test
out
inc
sub
adc
repz
stc
push
and
dec
fisttps
seto
xchg
and
push
adc
xchg
add
leave
cli
xor
sub
ret
aam
and
cmp
jne
insb
enter
or
shl
les
cwtl
pop
ret
add
jno
aad
xor
cmc
movsb
sub
xchg
arpl
decb
les
pop
dec
lcall
inc
mov
xlat
push
sbb
orb
loope
adc
leave
imul
into
or
das
push
int3
or
sub
fidivrs
jbe
fdivr
in
mov
int3
outsl
enter
xor
push
hlt
pop
xor
mov
mov
or
js
repz
mov
fcompl
bound
into
lea
push
pop
cld
xorl
test
or
mov
inc
nop
mov
mov
add
test
fisubrl
push
or
xchg
xchg
sar
jecxz
jmp
pusha
lcall
movsl
jbe
xchg
adc
adc
mov
mov
jbe
and
fidivl
dec
xor
xor
inc
or
jne
out
jns
fs
repz
xor
xchg
xor
fistps
push
sbb
notl
and
sbb
sub
mov
fiadds
dec
fiadds
jae
or
repz
jge
addr16
js
mov
mov
cmpsl
dec
enter
outsb
in
xchg
cmc
imul
fs
lea
mov
cmpb
sarl
into
into
jmp
xchg
xor
push
mov
cmp
cmovnp
aaa
jp
xor
test
in
ds
adc
lea
popf
in
push
sbb
add
inc
fldenv
xor
es
rcr
push
mov
inc
xchg
xor
sub
mov
jg
jle
sub
repnz
pop
cwtl
adcl
sbb
or
enter
mov
mov
mov
std
arpl
adc
jecxz
sbb
cmpsb
sub
mov
sub
sbb
cmp
fdivrl
sub
cmpsb
in
fyl2xp1
outsl
push
call
std
push
call
push
dec
add
pop
cli
fists
jmp
popf
or
imul
jb
js
push
xor
pop
adcl
icebp
push
xlat
sub
fidivrl
scas
shlb
sahf
loope
cmp
cmc
shrb
push
cmpsb
call
push
iret
mov
dec
mov
jno
ds
call
mov
fistl
bound
xchg
mov
mov
scas
lods
push
or
scas
mov
xchg
xchg
ja
xor
dec
flds
sbb
lret
jno
shlb
mov
lcall
popf
push
inc
das
and
adc
sbb
das
jmp
mov
sub
out
fcmovb
inc
sub
ja
xor
scas
das
cmpl
fstpl
das
mov
aad
add
and
faddl
pop
mov
je
jmp
sbb
in
rorb
or
jne
push
dec
jae
pop
fcmovbe
dec
mov
out
adc
adc
loopne
mov
lahf
or
out
fimuls
rclb
decl
sub
xor
jnp
jp
xchg
jo
add
push
popf
cmp
or
int3
icebp
mov
outsb
cmp
cmp
movb
int
hlt
out
mov
lcall
adc
cmp
sub
and
pop
mov
mov
dec
ljmp
pop
das
pop
hlt
in
clc
jno
dec
cmp
dec
mov
insl
xchg
adc
xchg
nop
cmp
pop
mov
stc
xchg
push
pusha
je
movsl
add
shl
push
sbb
jecxz
and
mov
bound
mov
rcll
sub
aaa
mov
popf
in
xor
ds
add
xlat
sbb
and
mov
pop
adc
xchg
mov
push
jo
pop
dec
das
sahf
mov
stc
and
sbb
xchg
ds
sub
hlt
inc
mov
clc
cmpsl
cli
cmpsl
lret
adc
aaa
lea
xorb
outsb
xchg
sbb
pusha
and
cmc
ret
add
inc
sbb
aas
inc
jo
and
daa
imul
scas
lock
mov
pop
int
popa
mov
jmp
leave
negb
jae
dec
enter
or
into
fistpll
add
sti
mov
jb
jae
mov
add
cmc
dec
xor
add
cmp
cmp
decb
or
leave
push
push
xlat
jecxz
aam
daa
lock
call
jmp
xor
pop
inc
and
aad
ljmp
std
dec
aam
iret
sbb
adc
je
cs
jmp
iret
jle
xchg
mov
jae
xchg
ja
pop
shrb
sub
adc
jmp
or
lcall
cmp
pop
js
daa
fistpl
fisttps
push
or
sub
pop
sbb
adc
xchg
outsl
or
mov
mov
xlat
aas
jo
mov
aas
fsubrs
cmp
aad
add
cmc
lret
outsl
inc
inc
test
mov
mov
add
mov
xchg
stos
or
test
ja
std
movsb
je
bound
into
sbb
pushf
lahf
lods
lods
mov
scas
pusha
vpcmpgtb
cli
cmpb
loope
adc
data16
push
xchg
jbe
outsl
dec
mov
cltd
inc
dec
pop
test
in
lods
and
xor
cld
push
jl
mov
lahf
sbb
sbb
xchg
imul
jecxz
imul
jne
pop
and
in
lcall
push
add
jbe
into
clc
cmp
mov
jmp
aad
fbstp
mov
test
dec
test
sti
stc
inc
add
jp
sub
fidivrl
cmp
push
dec
mov
imulb
dec
testl
xchg
fsubl
mov
shr
add
test
pop
pop
sbb
sub
jbe
jnp
fucomi
mov
sub
les
pushl
leave
xchg
sbb
ss
fdivrl
dec
adc
movsl
mov
pop
push
cld
mov
push
jnp
jge
push
dec
insl
pop
push
lock
add
stos
ds
mov
ds
in
xor
xor
sbb
add
and
mov
xchg
jno
scas
sub
push
int3
scas
push
notl
lea
rorl
add
into
sbb
lods
jmp
sarl
ja
call
and
jg
sub
lds
je
fcmovne
cmc
jle
test
outsl
or
xlat
aam
mov
cli
cmp
js
or
pop
mov
push
rcr
in
jmp
adc
mov
ljmp
fists
mov
call
fstl
stos
notb
push
shlb
fistpll
dec
call
or
ljmp
adc
icebp
inc
sub
mov
inc
cmp
lahf
bswap
lahf
mov
xchg
movsb
testb
js
sub
cli
lahf
rcr
cmc
int
push
cmp
sub
jle
adc
sub
fcomps
arpl
mov
std
insl
add
int3
xchg
cmc
mov
leave
jl
mov
push
dec
inc
xor
xchg
dec
xchg
or
rcl
jno
cltd
xor
mov
push
or
cmpsl
iret
sbb
xlat
cwtl
inc
int
fsub
push
stos
sub
jns
sti
ret
jle
xlat
jge
jnp
lock
or
and
xor
push
les
mov
xor
in
roll
imul
rcrb
mov
cs
mov
mov
inc
popl
push
in
aaa
enter
push
or
jb
das
inc
sahf
sub
sub
jmp
repnz
out
pusha
add
movsl
pop
daa
repz
stos
or
std
inc
sbb
lock
mov
sbb
outsl
xor
fists
pop
pop
add
lods
ret
mov
mov
ficoml
mov
and
loop
clc
pop
xchg
adc
fs
sub
mov
test
enter
leave
out
lret
sbb
inc
sbb
pop
clc
jmp
mov
dec
dec
frstor
nop
mov
or
dec
insl
sbb
mov
pop
pop
adc
mov
push
jo
cmp
sbb
and
lock
inc
xchg
jnp
sbb
daa
rclb
lahf
ss
xor
jnp
fwait
cltd
je
lret
cmp
add
or
test
rorb
xchg
add
and
xchg
push
pop
sbb
lea
adc
sub
cs
subl
repz
std
out
xor
pop
push
pop
push
mov
pop
ss
popf
das
adc
jne
jle
mov
stos
jg
mov
repz
sbb
add
sub
lcall
sbb
mov
mov
or
mov
out
pop
mov
sti
gs
mov
sbbl
jnp
mov
ss
in
dec
inc
pop
scas
enter
and
push
cltd
les
push
adc
daa
sub
lea
jnp
adc
fcmovb
in
inc
push
pop
xchg
dec
xlat
or
outsb
sub
mov
jne
mov
inc
sahf
dec
fs
cwtl
mov
pushf
jp
lret
cmp
cmpsb
fcoms
lock
xchg
call
fwait
jmp
xor
inc
xor
daa
in
loope
lahf
repz
and
xorl
aad
aaa
out
jae
out
lcall
ljmp
and
xchg
mov
test
fwait
cmp
and
sub
fcmovnbe
addr16
mov
fsub
sub
sbb
mov
mov
sbb
test
xchg
fildl
frstor
adcl
xchg
mov
pop
call
fisttpl
sbb
inc
adc
jae
mov
pop
stos
arpl
jl
xchg
and
insl
mov
orb
fadds
jp
in
dec
stos
cmpsb
cli
mov
scas
xchg
or
jg
loopne
aad
rol
and
push
cs
lods
xor
mov
ret
mov
jp
sbb
imul
daa
popf
stos
pop
or
sbb
aas
ror
scas
sub
int3
jmp
push
aas
fwait
mov
xchg
ficoml
std
shlb
mulb
shr
push
addb
int3
clc
fimuls
mov
dec
sub
and
fwait
mov
adc
rorb
scas
pushf
push
call
push
mov
mov
inc
out
gs
push
mov
loope
cmpsl
xchg
in
pop
stos
mov
and
leave
in
mov
dec
add
loope
and
fdiv
insb
xchg
mov
or
xchg
push
pop
mov
xor
adcb
sbb
lea
dec
sbb
and
in
ret
push
in
stos
jno
adc
ror
adc
setl
scas
mov
sarb
dec
mov
loop
aaa
daa
inc
shr
or
nop
lahf
pop
insl
loop
xchg
inc
fldcw
cmp
cmp
or
pop
cwtl
arpl
mov
lods
inc
dec
cmp
cmp
and
add
test
stos
push
sbb
scas
pop
mov
mov
cmpsl
int
jns
aaa
enter
and
adc
mov
aam
xchg
ljmp
mov
add
dec
jl
mov
mov
out
jnp
movsl
jg
pop
cmp
pop
fdivl
negb
cmp
sbb
fisttpl
xchg
add
scas
jl
or
repz
dec
push
and
or
pop
sbb
push
cli
cmp
push
call
cmp
pop
shrl
loop
add
push
sti
addb
movsb
xor
push
lcall
or
popa
sbb
out
add
in
aaa
push
repz
jae
jle
es
mov
mov
es
inc
jle
lods
and
mov
xchg
or
lea
je
rolb
mov
in
cmp
cmpsl
cld
sbb
jo
dec
mov
or
data16
xor
lcall
aaa
jb
xlat
arpl
lcall
inc
xor
add
push
xchg
repz
jo
dec
push
in
subb
push
arpl
dec
popa
stos
cmpl
es
dec
inc
dec
sbb
sbb
outsl
popa
lods
les
mov
and
jbe
aaa
pop
mov
insb
gs
jb
cmp
mov
dec
ret
xchg
shl
gs
std
scas
jns
adcl
aam
lods
adc
andl
dec
inc
xorb
je
or
add
pop
lds
stc
jl
push
lods
or
sbb
data16
mov
adc
ljmp
sub
push
int
pop
mov
call
sahf
loop
add
repz
lock
push
scas
mov
and
add
int
push
push
fstpl
aas
out
adc
sarl
lds
scas
in
add
jle
leave
xor
pop
sbb
cmpsl
mov
sti
daa
jp
stos
jb
cmp
pop
out
stos
adc
mov
les
push
sbb
pop
jae,pn
push
cmc
or
adc
sbb
or
aas
adc
inc
jl
std
pop
sub
or
int
fcoms
cld
icebp
inc
andb
fisttps
jp
aam
or
push
loop
rorb
pusha
inc
add
cmp
mov
out
iret
mov
cmpsl
mov
or
ror
or
lods
xchg
call
xchg
pop
jecxz
fwait
shlb
pop
adc
arpl
push
adc
addr16
add
neg
jmp
pop
int
movsl
mov
sub
lcall
inc
mov
push
mov
xor
ljmp
aad
push
sbb
std
je
jl
sub
popf
mov
xor
sbb
movb
xchg
sub
add
xor
shlb
loopne
stc
pop
push
test
fisubl
sahf
idivb
sbb
cld
inc
jno
std
popa
sti
ss
mov
mov
arpl
movsl
cmp
mov
push
in
insb
add
cmp
enter
adc
imul
xchg
fcmovne
push
cmpsb
and
lods
cwtl
movsb
hlt
cmp
js
mov
mov
out
icebp
cmpsb
aaa
lock
pushf
cmp
cmp
pop
hlt
push
adcl
mov
add
inc
mov
lock
leave
icebp
dec
fisubrs
lret
int
mov
inc
push
xchg
stc
scas
cmp
daa
mov
mov
xchg
and
push
add
xchg
jle
xchg
mov
sub
jl
repnz
out
arpl
subb
inc
jge
jmp
mov
add
jge
xor
popa
add
add
fdivrl
xchg
push
jg
in
cmp
enter
stos
sub
or
test
inc
xor
jns
pop
inc
push
or
or
or
and
push
xchg
repz
fidivrl
outsl
int
lds
inc
cmp
in
daa
mov
pop
mov
mov
es
cmp
es
dec
arpl
push
outsb
cmp
loope
fmul
cmp
mov
pushf
test
nop
and
and
add
sti
notl
mov
add
and
and
mov
dec
mov
mov
outsb
mov
aad
push
dec
test
in
dec
in
mov
or
add
cltd
dec
fstpl
ljmp
das
das
insl
fwait
insb
xchg
jecxz
mov
jp
pop
inc
test
lret
scas
ds
mov
jp
jb
addr16
sub
enter
gs
shlb
mov
add
mov
jge
int
negl
lea
scas
push
cmp
fbstp
cltd
jl
dec
or
lods
fs
lcall
shlb
lret
mov
js
mov
stc
mov
xlat
popa
pusha
in
aad
rorb
lret
xchg
sub
in
pop
cli
sub
sub
jle
stos
or
cld
jmp
adc
adc
jnp
pushf
aam
aaa
dec
mov
cmp
fwait
ret
mov
loop
popf
shlb
jge
std
repz
adc
add
push
sbbl
pop
jmp
cmp
int
ret
xchg
inc
xchg
jae
enter
sub
popf
clc
int3
ret
imull
pop
test
jle
jmp
nop
dec
sbb
mov
push
cmp
jl
inc
faddp
xchg
push
xchg
mov
mov
ss
xor
cld
pop
jbe
in
rclb
xchg
push
jmp
xchg
out
cmpsl
or
inc
add
mov
jg
xchg
pop
inc
xor
popf
lea
dec
sbb
mov
lcall
jns
cmpsl
cmp
in
leave
jmp
cltd
push
int
out
fldenv
cmp
loop
pusha
rorb
jmp
mov
imul
bound
insl
or
test
pop
mov
jg
sbb
xchg
jno
inc
push
xchg
dec
pop
filds
jne
mov
imul
repz
cltd
mov
or
mov
sbb
cli
jle
adc
sbb
pushf
adc
inc
add
insb
fwait
les
stos
jle
aad
cmp
sub
clc
sahf
add
imul
popf
sub
enter
dec
inc
pop
stos
ret
bound
push
cli
roll
lods
shll
dec
fcmovnbe
ror
mov
pop
sahf
adc
pop
in
cmp
xchg
or
xor
cmp
loop
pop
push
pop
adc
xor
push
je
out
stc
popf
stc
sbb
or
cmp
lcall
jecxz
push
out
fisttpll
andb
pop
aad
sub
dec
inc
ret
cmpsl
aad
xor
pop
jae
je
mov
dec
mov
in
mov
mov
jp
add
cmp
std
test
fdivs
inc
push
insb
mov
inc
xchg
insb
pop
addr16
mov
insl
jecxz
mov
loope
out
cmpsl
push
ljmp
inc
and
shll
subl
push
push
ja
aas
cwtl
mov
ret
push
xchg
dec
outsb
imul
sbb
out
and
ljmp
in
mov
test
or
test
xlat
lret
sarl
jl
jb
es
loopne
insb
push
cmp
sbb
mov
sbb
adc
xchg
pushf
mov
mov
faddl
int3
inc
sti
pop
adc
xchg
adc
mov
inc
sub
mov
pop
repz
sbb
mov
sub
and
test
xchg
xchg
add
push
pop
mov
and
fisttpl
test
add
sub
movsb
push
iret
cld
and
lea
jge
shll
xchg
roll
out
xor
sub
mov
int
enter
das
push
pop
jecxz
stc
mov
stos
xchg
add
inc
inc
dec
mov
mov
rcrl
out
cltd
rcll
mov
mov
aas
mov
jle
or
sub
pop
pop
cmpsb
cli
mov
outsl
cmpsl
icebp
pop
xchg
stos
pop
lods
in
int
push
and
dec
dec
cltd
das
fimull
adcb
out
shll
mov
mov
dec
dec
cwtl
test
lds
fwait
xchg
pop
ret
in
shl
adcl
out
or
je
dec
inc
push
aaa
cli
in
inc
add
inc
lods
mov
test
jg
push
sub
popa
les
dec
lock
mov
dec
int
dec
je
inc
push
xchg
test
jbe
xchg
jp
adc
lds
jo
mov
test
cs
inc
scas
enter
xor
mov
jmp
call
movsl
stos
icebp
stos
jno
ds
adcb
jmp
int
mov
in
jne
pop
cmp
fcoms
inc
mov
jno
jg,pn
xor
lock
lahf
aas
or
lds
out
test
insl
jbe
nop
jge
popf
mov
dec
stc
jge
xchg
fidivl
xchg
addb
add
jo
faddl
cld
call
sahf
and
lock
lock
call
jnp
push
out
in
shll
lea
xor
jl,pt
ret
test
fsts
cmp
sahf
add
int3
fucomp
adc
mov
fsubr
push
push
jne
in
roll
sub
pop
fiadds
inc
lea
sbb
push
inc
jb
pop
stc
jecxz
push
ds
sub
xor
nop
shlb
lods
push
lock
in
mov
push
jmp
xchg
test
jno
push
das
insl
nop
repz
or
cmp
mov
dec
mov
sbb
mov
pop
loope
push
test
movsl
fwait
adc
or
out
mov
mulb
adc
mov
pop
in
xor
into
dec
pop
daa
andl
outsl
add
test
cmp
icebp
bound
sbb
pop
xor
adc
sub
sar
sbb
add
fcoms
test
cmpsl
xor
test
xchg
push
shlb
outsb
mov
js
aaa
pop
xchg
lret
in
test
inc
push
fsubl
das
inc
adc
dec
or
xor
xchg
push
lahf
mov
bnd
lds
pop
ljmp
push
into
or
rcrl
pop
xor
insb
pop
movsl
mov
push
mov
lcall
inc
sub
xchg
in
xor
dec
push
mov
jae
out
loop
xchg
aad
aaa
mov
filds
movsl
aad
insl
addr16
push
sub
xchg
xchg
push
lds
dec
scas
or
outsl
sub
sub
adc
adc
cli
fs
push
cmp
imul
lods
pop
test
fucomip
test
mov
jo
cmp
mov
add
arpl
mov
hlt
mov
leave
add
xor
bound
and
jle
rorb
lahf
cmp
inc
call
int3
shrl
daa
and
dec
in
sub
aaa
mov
jbe
inc
nop
xchg
or
shll
pop
jl
add
push
scas
add
ret
aaa
push
mov
adc
push
mov
nop
pop
jmp
out
sub
decb
cmpsl
rorl
call
inc
movsl
daa
inc
cmpsb
or
ja
dec
pop
sub
stos
enter
mov
add
mov
inc
push
sti
jnp
mov
sahf
mov
inc
inc
stos
pop
cmp
ss
out
mov
adc
and
nop
lods
mov
shrb
std
scas
jnp
lret
sarb
or
les
aas
or
adc
pop
mov
loop
jp
xor
inc
mov
push
xor
rorl
clc
gs
mov
fidivl
fdivrl
out
movsb
cmpsb
sbb
pop
pop
jle
into
loopne
outsb
sub
out
dec
out
and
xchg
adcb
mov
xor
xchg
jecxz
xlat
das
ds
sub
or
pop
xchg
pop
add
bound
cmpl
and
jp
jl
cmp
xlat
jl
pop
clc
test
ljmp
adc
pop
dec
test
cmpl
mov
push
sub
pop
adc
ds
cmp
in
inc
and
clc
jb
pop
cmpb
sbbl
xchg
push
in
pop
xchg
add
inc
xchg
add
sahf
dec
in
outsb
inc
shll
fwait
inc
mov
fcmovnb
or
test
xchg
and
cmp
adc
fsub
ret
adc
cwtl
in
into
lock
mov
adc
outsb
xchg
pop
insb
mov
pushl
cmp
mov
nop
mov
pop
repnz
fldcw
cmp
pop
mov
dec
add
or
pop
mov
js
pop
jp
rorl
lcall
js
out
sbb
int3
fsubs
and
insb
push
pop
test
inc
jmp
xchg
mov
mov
push
inc
jle
mov
sti
loopne
mov
rcll
xchg
add
cs
inc
cmp
sub
pop
xor
pop
lock
add
push
pop
add
inc
popf
loopne
scas
push
mov
cld
sbb
lea
repz
scas
xor
ja
xor
out
stos
cld
icebp
ljmp
mov
mov
mov
repnz
inc
loop
pop
jb
sbb
enter
mov
jno
pop
mov
xor
scas
pushf
arpl
sub
inc
movsl
lock
cli
out
sahf
loope
mov
fistps
push
sub
fmuls
push
and
leave
jno
cmpsl
mov
sub
push
icebp
stos
call
leave
addb
jle
test
mov
pop
mov
adc
int
or
out
mov
loop
push
scas
sbb
fs
scas
inc
mov
sti
out
addr16
sbb
jp
jge
inc
call
out
push
sbb
cwtd
xor
rol
sbb
nop
dec
push
or
shlb
adc
in
repnz
mov
pop
xchg
es
xlat
movl
mov
cs
pop
inc
decb
add
iret
insb
les
icebp
data16
loop
lcall
enter
cmp
stos
movsl
aad
add
leave
xor
xchg
lret
adc
lock
outsb
je
and
cmc
addr16
push
adc
jbe
in
push
and
jo
jne
and
push
js
into
test
fimull
nop
inc
icebp
mov
jg
incl
mov
and
test
push
mov
lds
mov
lahf
xchg
xchg
mov
dec
subl
lret
mov
loope
jecxz
pop
xchg
add
sub
mov
stc
lahf
lock
xchg
out
mov
sub
sub
mov
imul
xchg
out
cmpsl
xor
xchg
jl
loopne
fisttps
ds
repnz
sub
sahf
cmpsl
dec
jb
sub
in
adc
inc
xor
and
lock
imul
fidivrs
mov
xchg
xchg
lods
test
out
cmp
loopne
add
lods
daa
push
jb
sbb
and
inc
add
adc
mov
xor
jno
mov
pop
aad
mov
mov
test
das
mov
dec
cmp
inc
jecxz
push
lahf
jl
imul
inc
inc
aam
xchg
cmp
int
pop
xchg
pop
rolb
aas
push
mov
push
in
in
cmp
sub
mov
andb
imul
lahf
mov
fnstcw
mov
push
adc
xchg
in
shlb
icebp
aas
in
jne
fs
nop
xchg
mov
jmp
mov
sub
cmpsl
pop
dec
adc
insb
fldl
mov
ret
dec
repz
mov
cmc
push
cs
out
pusha
xchg
movsl
mov
ficompl
addb
data16
ret
and
ljmp
repnz
scas
arpl
xchg
add
mov
pusha
jne
outsb
jnp
orl
dec
sbb
xlat
mov
lods
and
inc
in
loope
fimuls
aaa
cmpsb
xchg
sar
int
cmp
into
xor
lea
out
add
push
adcb
cmp
jle
test
loopne
push
lods
les
jb
and
filds
mov
push
mov
pop
rcrb
jp
adc
dec
std
outsb
in
cld
sub
sbb
adc
mov
inc
dec
ds
mov
jnp
lret
cmp
jg
mov
mov
push
js
stos
into
dec
stos
dec
mov
lret
cmp
movsb
or
cmp
inc
or
dec
sub
cli
test
mov
pop
or
das
dec
dec
dec
shl
scas
or
sarb
in
test
fs
xchg
mov
push
inc
add
lret
xchg
push
pop
and
inc
mov
js
sbb
ljmp
inc
add
cs
pop
rorb
sahf
mov
sbb
sub
or
add
stc
loopne
cld
and
pop
xchg
popa
mov
sbb
pop
cmpsl
add
test
clc
aaa
xor
fcom
dec
mov
dec
sub
inc
push
aam
inc
pop
daa
loop
or
add
mov
cli
imulb
push
xchg
mov
insl
std
flds
jmp
filds
push
adc
daa
xorb
pusha
sahf
sub
lods
incl
lret
fwait
push
sub
nop
or
sub
adc
orb
push
dec
push
pop
clc
sbb
ret
sbb
mov
pop
fdivrl
addr16
mov
xchg
jg
jnp
and
or
loop
sbb
pushf
inc
mov
jmp
sub
or
pop
xchg
ss
dec
into
jne
pop
dec
add
in
std
cltd
je
sbb
xchg
insb
test
jno
scas
imul
sub
sub
mov
flds
imul
aad
and
icebp
fsubl
jmp
cmpsb
dec
xor
mov
ja
pop
icebp
ret
arpl
loopne
xchg
das
jno
iret
sbb
in
addr16
ja
imull
shrl
mov
mov
mov
aas
inc
ljmp
adc
mov
jne
cmp
xor
dec
lcall
inc
sbb
cwtl
pop
stos
out
xor
aas
xchg
mov
xchg
push
add
fdivrl
push
lahf
push
mov
add
inc
cmp
pop
jbe
cs
jge
frstor
mov
int3
notb
fidivs
divl
pusha
or
jmp
stc
es
adc
mov
out
movsb
and
mov
or
into
daa
dec
dec
in
fcoms
inc
sbb
mov
push
jg
push
aad
cli
stos
sub
pop
dec
lcall
int
test
in
int
jg
mov
movsl
scas
mov
pavgb
fiadds
fimull
mulb
jmp
jl
arpl
and
dec
cli
test
add
jbe
dec
nop
xchg
push
mov
fadds
daa
xlat
subb
clc
mov
adc
adc
sbb
push
gs
cli
inc
addr16
xor
les
aaa
dec
cmp
xlat
push
fldenv
lock
test
or
sbb
ds
jp
mov
push
mov
push
ret
xchg
outsb
nop
and
xor
push
notl
adc
mov
push
gs
clc
adc
sub
push
sbb
sub
add
xor
fcmove
out
int3
inc
das
cmp
test
mov
ss
inc
adc
test
sbb
or
fnstsw
scas
les
cwtl
adc
cmp
xchg
or
pop
adc
in
sahf
sbb
cli
or
inc
mov
in
das
aam
addr16
pop
loopne
adc
out
sti
mov
jg
adc
xor
arpl
push
or
lock
mov
jne
popl
inc
xchg
mov
xchg
test
push
adc
xor
mov
nop
filds
sub
add
das
or
push
cwtl
test
pop
cmp
ficoms
cmc
fucomip
add
stos
ljmp
sbb
lahf
sub
loopne
mov
divl
cwtl
mov
mov
fidivs
jb
testb
mov
loope
dec
add
or
sub
mov
pop
loop
sbb
mov
add
out
pop
mov
mov
outsb
xor
sub
pop
mov
cmpsl
test
add
fbstp
add
mov
fdivr
add
aad
dec
mov
mov
data16
sbb
ret
adc
push
ja
add
sub
sub
sub
jns
loopne,pn
int
cwtl
jmp
xor
hlt
xchg
in
scas
ds
pop
xchg
xor
jecxz
add
dec
subb
mov
jge
bound
jp
lcall
push
cld
cmp
fildll
xchg
push
sbb
sbb
mov
and
les
jnp
add
sub
cld
stos
out
or
pusha
pop
cld
std
sbb
scas
cmc
in
rorb
popl
insl
iret
cmpb
rorl
mov
aad
pop
mov
pusha
aad
mov
imul
and
jmp
movsl
mov
aaa
jae
adc
xchg
sub
sub
enter
in
pop
lock
out
shll
inc
cmp
faddl
xor
sbb
fxtract
mov
jle
je
jne
mov
loopne
push
sub
mov
popf
jo
pusha
push
mov
adc
mov
cmpsb
lock
daa
add
lret
adc
outsb
das
lret
add
mov
push
lock
and
fdivl
ret
and
mov
ret
pusha
push
mov
lds
mov
add
cmp
mov
push
jle
inc
into
scas
jecxz
xchg
push
pop
pop
lcall
add
or
jb
pusha
movsb
out
jne
lcall
inc
xor
dec
jmp
pusha
jo
or
pop
mov
call
xor
or
sahf
bound
cmp
or
cmp
and
pop
call
sbb
loop
add
adc
out
xor
decb
cld
push
addl
fnstsw
ss
mov
push
sub
sub
xorb
arpl
xor
dec
mov
xchg
mov
dec
adc
mov
cmp
xor
aam
pop
adc
fcomip
jns
mov
pop
sub
xchg
inc
xchg
cmpsb
stc
push
hlt
or
or
inc
js
or
adc
jl
shrl
pop
cltd
sbb
or
dec
scas
and
adc
int3
lds
lea
es
inc
mov
js
lods
cs
insl
xchg
cs
sbb
mov
push
or
fcmovbe
fdivr
sbb
pop
aam
lcall
mov
add
iret
adc
jb
stos
inc
test
mov
sbb
sbbb
fcmovbe
add
cmp
arpl
addr16
stc
mov
shll
pop
xchg
andb
xlat
shlb
dec
gs
nop
stos
clc
outsl
push
jmp
aam
leave
icebp
xor
inc
mov
add
add
sub
incb
or
pop
bound
call
int3
push
bnd
fistl
sbb
int
mov
test
cmpl
outsb
int
or
movsl
lock
scas
aad
cmc
mov
xor
mov
and
sbb
adc
cld
jns
dec
out
mov
aad
sti
outsl
rorl
mov
cld
lock
mov
jo
jmp
xor
dec
inc
pusha
push
sbb
xchg
movsl
idiv
pop
xchg
pop
xor
or
es
dec
mov
mov
out
addr16
pusha
jg
lahf
loopne
cwtl
mov
popa
iret
pop
fmul
inc
ret
shrl
push
test
add
ficomps
arpl
lods
out
es
mov
dec
out
aad
or
dec
pop
jo
push
loopne
setge
jb
xor
dec
or
jne
mov
and
sbb
dec
ja
lods
std
xor
mov
adc
dec
jo
jno
in
les
jb
mov
aad
xchg
mov
jmp
push
clc
xchg
jno
and
arpl
imul
icebp
sbb
lods
push
jb
inc
and
jnp
inc
cmp
inc
and
test
daa
pop
jae
dec
mov
push
dec
jbe
outsl
jecxz
out
scas
aam
inc
push
xchg
jg
adc
aam
lock
faddl
cmp
mov
js
jp
jae
cmovae
andl
and
fstpt
cmp
arpl
repnz
sub
jmp
es
cmp
and
sub
sahf
mulb
cld
lahf
xchg
inc
ret
lods
stc
int
loopne
loope
mov
push
outsb
arpl
pop
mov
jp
fs
test
les
mov
inc
mov
sub
in
xor
sub
cmp
sub
in
adc
aad
cmp
ljmp
push
fsubr
ret
imul
stos
push
pop
cmp
imul
mov
popa
mov
cltd
jmp
enter
xchg
push
clc
outsb
bound
inc
sbb
mov
mov
aam
pop
movsb
fisttpl
sbb
sub
bound
stos
insl
mov
dec
popa
mov
loop
setge
jb
mov
jle
dec
ds
in
mov
sbb
xor
adc
xor
push
sub
jb
pusha
loope
push
orb
es
mov
lods
test
imul
ds
cmpl
iret
push
and
and
es
test
js
aaa
sbb
cld
xlat
ret
pop
rolb
jg
sub
sbb
mov
mov
pop
scas
push
bound
stos
aad
ret
xor
sbb
inc
sbb
push
stos
fwait
cmp
inc
adc
cmpb
pop
xor
jmp
enter
cltd
stos
mov
jo
sub
adc
stc
sbb
push
lcall
add
fcmovb
or
cmp
int3
xor
jbe
mov
sub
pop
addl
inc
bnd
jge
stos
or
push
mov
aaa
jae
bound
leave
cltd
pop
jp
mov
sub
fwait
mov
cmp
jb
sub
aad
bound
pop
mov
sbb
jle
push
cmpsb
imul
add
mov
sysexit
and
aas
cmp
loop
push
pop
lcall
inc
jl
xchg
fwait
ffreep
sub
dec
mov
sahf
stc
push
call
imul
push
lods
mov
loope
pusha
mov
test
and
sbb
jne
and
and
das
add
les
jg
cmp
push
ss
cmp
aad
adcb
inc
std
mov
push
cmp
ret
inc
call
out
fdivrl
push
add
testb
inc
pop
or
fisubs
xchg
sub
cwtl
and
jg
add
or
push
push
mov
movsb
add
mov
pop
repz
scas
mov
aaa
and
inc
xor
mov
sbb
xchg
in
outsb
sub
fxam
sbbb
xchg
daa
out
adc
les
xchg
jb
xor
dec
xor
lcall
imul
jg
arpl
xor
test
int3
arpl
out
frstpm(287
repnz
pushf
dec
jno
notl
xchg
in
outsb
cmpsb
fisubs
into
popf
scas
dec
fisubrs
ret
aaa
push
fdivrl
call
xchg
push
in
inc
in
in
enter
rcll
movsl
inc
mov
loop
in
stc
fisttps
test
stos
or
test
mov
enter
inc
cld
fsubl
mov
xchg
ljmp
sar
xchg
xor
cld
mov
sbb
stos
cld
push
sub
add
jge
push
sbb
and
jecxz
fstps
xchg
cmp
xor
lahf
scas
inc
mov
jmp
xor
adc
pop
or
adc
ss
xor
pop
sbb
pop
mov
outsl
mov
je
fcomps
arpl
or
idivb
cmpsl
test
out
cmpsb
lods
and
sbb
faddp
fisubl
pop
loope
movsb
mov
mov
ja
arpl
pop
dec
mov
mov
lret
rcrl
mov
inc
jae
xlat
faddl
dec
fwait
pushl
movsb
cmpsl
mov
xchg
outsb
test
jge
loope
push
xchg
xchg
cmp
fistps
inc
xchg
pop
scas
jg
fdivr
push
rcl
ror
jecxz
lcall
xor
dec
ret
test
je
sub
mov
pop
dec
or
inc
out
and
dec
dec
out
test
pop
popf
push
sbb
int3
and
mov
mov
data16
add
lds
push
lret
in
decb
push
popf
mov
cmp
std
jno
jno
arpl
mov
pusha
fcoms
leave
push
cmp
fadd
mov
xchg
data16
pop
inc
mov
inc
or
rclb
mov
jp
jg
fimuls
and
cmp
cli
fdiv
adc
and
xor
mov
incl
movsb
inc
pop
jbe
pop
gs
xor
add
mov
sbb
push
popf
xor
pop
jno
jecxz
movsb
hlt
je
dec
daa
test
in
push
lahf
inc
insl
pop
dec
leave
jmp
call
add
imul
sub
jns
fcom
fstpt
mov
mov
movsl
jg
sub
jecxz
pop
les
lds
mov
rolb
pop
xchg
cmc
mov
pop
cltd
sub
or
push
mov
xor
or
ljmp
addb
icebp
cwtl
loop
imul
cmpsl
pop
or
cli
dec
xor
push
mov
mov
repz
scas
icebp
imul
push
add
mov
rol
cld
leave
iret
xchg
nop
sti
scas
mov
inc
repz
cmp
or
loop
xchg
cmpl
xchg
ret
outsl
adc
mov
sti
movsb
scas
sub
add
sti
jg
xchg
pusha
add
or
jne
shll
daa
cmpsb
test
fwait
pop
or
pop
mov
call
push
jne
xlat
mov
mov
aam
std
add
mov
xchg
fsubr
jbe
xor
jge
fmuls
subl
dec
cmc
jecxz
jg
jge
push
pop
cli
mov
pop
fcoms
xchg
loop
shl
rorl
xorb
mov
push
jae
xchg
adc
inc
jne
andl
push
inc
filds
push
jb
xlat
imul
loop
inc
mov
mov
mov
aam
push
add
pusha
psrlq
aam
cmp
loop
xchg
inc
inc
es
sbb
sbb
bnd
cmp
std
lods
addr16
addr16
loope
lods
lret
movsl
dec
push
push
cmp
cmp
push
xchg
movb
fisttps
stos
test
lret
and
enter
lret
push
dec
hlt
stos
ret
scas
mov
movsl
sbb
sbb
and
mov
pushf
cmp
cmp
or
add
dec
sbb
sbb
mov
dec
add
lahf
shlb
or
mov
sar
scas
mov
jg
mov
popf
rcl
cmp
xor
test
in
dec
es
repnz
adc
xchg
push
pop
das
aas
mov
mov
fcompl
dec
mov
hlt
dec
dec
nop
xchg
dec
lret
and
mov
je
mov
xor
icebp
xor
pop
pop
lret
icebp
mov
in
jmp
or
pushf
xchg
xor
in
add
bound
sub
push
dec
rol
cmp
out
lea
rol
xchg
jne
xor
adc
scas
sbb
mov
dec
push
stos
sbb
dec
outsb
js
cmpsl
add
push
mov
mov
ljmp
push
dec
pop
repz
ret
jo
std
dec
shrl
inc
jle
and
clc
jecxz
push
movsb
cmp
push
arpl
inc
repnz
das
sub
dec
jbe
mov
pop
jnp
lea
fcmovbe
adcb
addb
sub
adc
into
leave
aaa
and
je
hlt
or
mov
push
lock
or
push
scas
lret
dec
aad
xor
or
stos
mov
int
cmp
cmpsb
movsb
pop
addb
cli
out
fsubrs
jne
pop
cmp
cmpsl
lods
subl
cmp
push
add
and
cs
push
mov
cs
xor
out
fs
dec
pop
push
pop
int3
push
jne
sub
pop
inc
mov
pop
push
mov
sbb
clc
mov
icebp
jae
xchg
mov
mov
add
les
sub
and
int
aaa
jns
fdivl
js
mov
cmpsl
pop
sub
jns
push
push
xchg
adc
sbb
jmp
or
out
in
in
dec
cld
dec
addl
pushf
scas
cwtl
jp
ret
movsb
sub
xor
xchg
sub
shlb
add
out
hlt
aad
cmp
xchg
aad
out
lods
inc
pushf
push
or
rolb
xchg
imul
inc
jnp
es
push
lods
xlat
repnz
and
data16
add
push
pop
mov
cmp
clc
dec
xchg
xchg
mov
repz
xchg
xchg
jo
mov
mov
test
or
mov
and
or
push
fidivs
rcrl
test
add
inc
in
push
les
mov
xchg
or
popf
xchg
pop
xchg
ficoms
test
inc
adc
fidivrs
adc
insb
adc
fildl
mov
cmp
ret
fdivs
jbe
adc
sbb
fiaddl
popf
mov
shlb
mov
popa
std
pop
es
cs
jg
out
pop
xor
inc
pop
fisubrl
xor
mov
fwait
sbb
lds
dec
scas
clc
test
adc
push
adcb
pop
xor
icebp
and
xchg
outsl
jne
jb
ret
cmc
stos
jmp
bound
mov
mov
mov
xorl
addr16
push
into
mov
popf
leave
sti
adc
push
into
pushf
leave
inc
shr
xor
mov
adc
dec
enter
adc
cmp
dec
sub
pop
lds
jno
test
inc
nop
mov
sbb
hlt
dec
ljmp
push
lahf
clc
sbb
mov
add
inc
xchg
push
add
mov
mov
ficoml
xchg
mov
inc
mov
pop
add
rol
ds
loop
xor
aas
dec
xor
inc
push
lahf
cmc
jno
jb
subl
sub
xchg
sub
push
out
jmp
push
shrb
es
lret
loope
hlt
mov
push
jge
addr16
jno
push
mov
aaa
mov
jp
pop
lods
mov
leave
cmp
subl
mov
lret
pop
scas
dec
and
clc
getsec
lea
adc
mov
test
mov
int3
jo
inc
mov
addr16
cmpsl
mov
lret
jmp
aaa
repz
dec
out
or
mov
mov
mov
arpl
leave
pop
fdivr
inc
insl
ret
or
bound
pop
aas
hlt
popf
lds
sub
ljmp
jmp
add
mov
in
jns
es
cltd
mov
aam
in
movsb
js
and
shl
loope
pop
daa
lcall
jg
mov
aaa
xor
arpl
jne
ds
sbb
mov
mov
push
mov
sbb
or
ljmp
pop
xor
pop
xchg
outsl
jge
xor
or
ret
inc
sub
aad
or
es
andb
jl
fistps
icebp
cli
mov
aas
and
fcomps
dec
xchg
ss
out
fucom
movsb
pushw
aaa
nop
push
xor
test
and
push
jmp
outsb
xchg
sub
fwait
xor
mov
testb
mov
sbb
sbb
mov
loopne
sub
mov
xor
pop
in
push
cmp
stos
out
popf
sbb
xor
push
jnp
mov
outsl
inc
cmp
cltd
pop
mov
lahf
ss
and
or
jnp
add
mov
ret
aad
in
mov
cmpsl
mov
shl
inc
xor
mov
adc
mov
pusha
fsqrt
addb
pop
and
mov
int
sub
hlt
or
adcl
push
sub
mov
pop
jle
or
xor
fbstp
inc
popa
pushw
popf
nop
inc
iret
je
enter
adc
test
call
stos
dec
push
test
xchg
pop
xlat
fistpll
pop
and
inc
iret
push
repnz
je
in
mov
xchg
mov
jmp
leave
popf
hlt
and
push
fistps
xchg
mov
dec
aad
jmp
and
or
pop
cwtl
adc
and
mov
les
repz
pop
pop
sbb
int
movsb
jl
ja
pop
je
paddsb
in
jge
lock
pop
faddl
pop
lcall
mov
rcr
xor
mov
jle
lcall
pop
xchg
int
mov
movsb
mov
fldcw
movsb
mov
aaa
int3
xor
dec
cmp
es
insb
sub
mov
adc
sub
sbb
or
fdivrp
scas
pop
adc
xor
fisubl
add
hlt
data16
test
ret
stc
sahf
push
int
jge
or
loopne
xchg
aas
shlb
pop
bound
xor
or
lret
test
pop
inc
lcall
push
lods
push
adc
or
jmp
insl
jle,pn
cld
call
outsl
je
test
or
mov
mov
dec
sub
jne
xchg
fldt
adc
lods
fldl
leave
mov
lret
addl
inc
pop
sahf
in
iret
cltd
push
mov
cmp
aaa
iret
mov
push
mov
mov
mov
sbb
daa
in
or
cmpl
ss
dec
fiaddl
mov
mov
sbb
jb
ja
cltd
cmpsb
dec
lea
imul
scas
and
pop
add
imul
aas
fldpi
dec
mov
cmpsl
jb
repnz
xlat
xor
lret
sub
jecxz
cwtl
xor
psrlw
cmp
insl
push
or
inc
sbb
push
mov
or
add
iret
jb
mov
lods
test
cmpsb
lods
or
scas
lret
test
out
jmp
fisubs
out
cwtl
pop
cs
fisubrl
or
push
cwtl
inc
pop
popa
mov
cmp
xchg
mov
and
pop
sub
mov
xchg
aaa
mov
insb
and
fisttps
jl
adc
sti
push
mov
mov
rcr
arpl
sub
inc
test
mov
pop
inc
pop
mov
sbb
and
fisttps
dec
test
mov
movsb
nop
addr16
inc
fdivrp
nop
scas
clc
in
rcrb
mov
gs
mov
dec
jge
cmp
movsl
dec
push
ljmp
pop
cmp
adc
rcrl
adc
loope
dec
rorl
shr
sbb
lods
cmp
adc
cmp
pop
jo
sbb
int
popa
xchg
xchg
pop
sbb
leave
fdivl
sti
or
add
bnd
je
mov
sbb
pushf
enter
je
push
jle
mov
cmpsb
cmp
scas
push
into
xorl
ror
negb
popa
cltd
mov
fisttpl
mov
icebp
jb
pop
sub
jno
icebp
insl
jne
inc
das
jnp
movsb
test
sbb
sbb
sub
mov
in
js
out
aam
in
loop
lret
lods
clc
insl
das
out
adc
jbe
push
imul
subl
insb
ficomps
out
sbb
das
push
xor
mov
imul
pop
es
pop
les
sahf
lcall
dec
mov
enter
and
das
out
sbb
std
es
ss
enter
mov
pop
jecxz
jo
fsubrs
jns
pushl
push
mov
movsl
jle
lods
adc
xchg
dec
cmpsl
mov
fwait
sub
fmul
or
and
xor
adc
ds
mov
test
mov
xchg
cld
cmp
aad
stos
lods
test
mov
mov
lock
adc
lcall
stos
fisttps
test
mov
cli
pop
pop
orb
gs
mov
mov
das
into
dec
scas
cld
lds
gs
pop
fldt
rol
lds
push
lcall
sti
outsl
popa
pop
js
outsb
mov
jmp
mov
iret
push
aaa
ret
mov
push
or
stos
add
fidivrs
out
loopne
jle
xchg
jbe
mov
xchg
cli
dec
insb
ret
add
inc
xchg
out
mov
push
repz
data16
shrl
xchg
cs
in
dec
test
mov
loopne
popl
and
outsl
xor
lret
sti
cli
outsb
dec
sbb
ret
fxtract
jl
cmp
mov
lods
mov
lea
pop
out
subl
sbb
repz
lods
sbbl
in
mov
dec
sbb
add
adc
xor
mov
mov
adc
ljmp
mov
cmp
mov
les
je
cmpsb
mov
sahf
dec
aaa
push
ret
int
clc
sbb
out
out
pop
out
pop
fcoms
sbb
adc
add
cld
mov
jp
insl
dec
push
out
in
je
pop
jb
jge
push
push
jmp
addr16
adc
push
pop
inc
jge
imul
inc
xlat
icebp
add
roll
dec
sti
stos
cmc
cmp
sbb
sbb
stos
pop
sti
mov
pushf
push
jns
add
out
jmp
adc
aam
pop
outsl
aad
fsts
stos
enter
add
cmp
sbb
and
mov
push
pop
push
mov
sbb
pop
mov
ret
sarl
push
cmp
or
xchg
fdivrs
mov
pop
fisttps
jge
lcall
mov
dec
dec
jo
stos
int3
push
data16
inc
pop
push
jne
sbb
push
inc
pop
inc
adc
mov
add
xor
cmc
pop
rorl
cmc
mov
xor
push
fsub
jne
cmp
arpl
cwtl
mov
fbld
in
xor
cli
xchg
mov
and
or
xchg
repz
mov
scas
jne
fidivrs
and
mov
les
fistpl
mov
adc
add
insl
ljmp
stos
xor
inc
insb
daa
mov
xchg
lock
cmpsl
xchg
in
negb
pop
push
pop
aaa
loopne
lahf
lret
mov
mov
call
rorl
lret
rorl
icebp
sub
lahf
in
cs
add
clc
adc
insl
shl
daa
aas
pusha
out
pop
jmp
mov
ss
xchg
push
dec
push
movsb
mov
xchg
mov
es
xor
xchg
mov
lea
in
scas
in
xorb
cmc
inc
mov
xor
imul
sbb
adc
popf
stos
mov
iret
push
iret
std
xchg
add
test
lret
pop
out
enter
xor
leave
daa
sub
mov
pop
mov
shll
cli
je
int3
jp
inc
sub
push
testb
mov
mov
in
lret
test
xchg
cmp
sub
add
mov
int3
jmp
ret
sarl
stc
adc
jecxz
pop
out
push
leave
out
fwait
rcll
addb
add
cs
cmpsb
xchg
and
es
lahf
or
mov
js
sub
dec
jbe
out
scas
lock
sbb
fwait
push
dec
adc
out
push
cmp
pop
push
xchg
ret
cmp
inc
repz
jle
mov
cmp
enter
test
stos
fwait
lahf
sbb
ljmp
pop
fadd
mov
mov
insb
inc
inc
jo
dec
dec
aad
es
inc
dec
add
dec
sbb
jae
fs
push
xchg
dec
push
mov
into
sub
shlb
push
pop
mov
add
mov
inc
jmp
sub
add
out
xlat
fnsave
fs
les
sub
pop
or
cltd
and
xchg
dec
cmp
xor
shll
stc
lahf
testb
xor
mul
fndisi(8087
sub
sbb
insb
cli
add
pop
jl
dec
ljmp
mov
je
inc
shll
movsb
lds
out
scas
jne
sub
inc
shl
clc
dec
adc
clc
push
addr16
imul
sbb
cltd
mov
sub
mov
jle
in
or
xchg
xor
dec
jmp
lahf
pop
imul
pusha
fisttpll
gs
faddl
sahf
cld
push
ret
leave
add
stos
and
movsb
das
addl
insb
mov
repz
inc
inc
push
aaa
sub
sbb
rcr
cwtl
jl
cli
pop
xchg
aaa
jo
mov
scas
cmpsb
pop
mov
add
xchg
jne
lds
inc
dec
mov
imul
adc
out
pop
ss
xorb
adc
mov
jne
sbb
push
imul
inc
fsubl
or
jge
cmp
inc
adc
test
or
mov
stos
mov
sbb
lods
push
lock
push
mov
mov
push
push
idivb
sub
adc
arpl
pop
data16
cld
sub
or
push
xchg
les
cs
test
lret
pop
repnz
pop
imul
xor
sub
jns
in
push
sbb
mov
pop
daa
sub
cmp
mov
mov
cmc
inc
jg
mov
icebp
fcomi
cmp
pop
jmp
jbe
shrl
cli
jnp
mov
xlat
in
dec
dec
sti
and
scas
stos
add
mov
mov
push
or
lds
lret
loopne
xor
stos
fwait
mov
int
cmpsl
push
loop
sbb
loopne
ret
xchg
out
mov
dec
mov
dec
aas
sub
push
outsb
cld
jecxz
loop
insl
mov
lods
test
jbe
int3
sub
jae
and
xlat
sub
dec
cmp
push
imull
fwait
aas
mov
rorl
lods
ljmp
or
mov
stos
or
pop
js
inc
pop
imul
pop
mov
inc
mov
cmpsl
sbb
xchg
sbb
cmp
or
fisubs
add
xlat
arpl
aad
fiadds
pop
adc
pop
push
pusha
dec
add
push
mov
out
aam
movsb
xchg
aas
dec
dec
sti
rcrb
cmp
faddp
loopne
out
mov
mov
push
cmp
mov
popa
scas
xor
pop
stos
sbb
jae
outsl
mov
rolb
movsl
add
xor
daa
lock
ljmp
cmp
and
aaa
daa
subl
enter
and
add
or
lret
jne
pop
aam
imul
push
pop
ret
push
jo
jle
ret
xor
and
sarb
std
xor
dec
dec
sub
and
sahf
out
dec
les
adc
loopne
hlt
inc
fcoml
rorl
jle
lock
jne
lds
xorl
xchg
adc
icebp
lcall
cmc
inc
fsts
in
push
xchg
inc
test
xchg
repnz
popf
mov
pop
sarl
xchg
leave
cs
add
pop
sub
pushf
xor
cld
mov
sub
xchg
popf
jp
loop
xlat
add
adc
mov
xchg
aaa
pop
mov
nop
shl
push
jg
jp
push
lods
sbb
pop
out
and
popl
sarl
mov
adc
imul
cmpsb
xchg
or
push
mov
in
fstl
popa
insl
inc
mov
sbb
push
sub
lds
and
mov
sub
pmulhw
bnd
cmpsl
popa
mov
pushf
sbb
pushf
mov
lods
mov
jae
daa
mov
mov
ja
cmc
add
pop
in
or
scas
mov
data16
or
in
mov
shl
stos
pop
push
cwtl
out
adc
pop
aaa
sbbb
mov
test
lahf
lods
and
sbb
fistpl
mov
andl
aas
cmp
call
arpl
pop
arpl
clc
ret
rcrb
popa
dec
out
gs
mov
mov
fisttpl
cli
repnz
movsl
cmpb
xchg
jmp
rcll
subl
into
test
and
rcll
enter
jg
sbb
rcrl
inc
call
dec
movsl
shl
pop
std
pop
sub
jnp
add
lret
test
iret
mov
test
fsubrp
xor
aas
push
push
rcll
jge
ss
mov
cmp
add
push
popf
out
adc
mov
loop
lock
sub
mov
and
or
iret
ret
adc
insb
sbb
test
push
sti
adc
test
mov
mov
jae
sbb
rcrb
test
fistpl
int3
sub
pop
iret
dec
fimull
or
pop
ljmp
push
jle
fs
mov
cwtl
jmp
adc
jnp
or
movsl
gs
mov
in
jl
jno
lahf
jecxz
sbb
xchg
popf
mov
icebp
test
pop
stos
int3
mov
push
dec
dec
pop
pop
xor
loop
adc
mov
shr
int
cwtl
cmp
and
mov
iret
fisttpl
sahf
xlat
inc
inc
xchg
push
mov
xchg
hlt
arpl
or
add
lret
bound
and
add
xchg
aad
cli
jmp
test
xlat
cmpsl
inc
or
shll
mov
xor
pop
scas
lcall
mul
shlb
mov
outsb
push
pop
lret
jo
adc
push
mov
xlat
adc
lods
adc
push
lods
in
and
push
mov
pusha
sub
leave
test
xlat
stos
test
and
test
in
jb
shrb
push
xchg
pushf
pop
sti
mov
bound
jbe
jmp
add
fsubrl
mov
btr
cmp
or
popa
cwtl
std
fs
jnp
test
hlt
in
mov
inc
and
push
mov
out
cmpsl
cli
xchg
lcall
int
es
inc
mov
cmpsb
adc
int
nop
es
jmp
imul
dec
jmp
xchg
aaa
add
les
les
ss
cwtl
fsubs
jle
loop
ljmp
dec
call
dec
xlat
pop
in
adc
jnp
js
js
adc
je
pop
negl
sub
sub
add
push
cli
xor
xchg
push
cmp
inc
sub
sbb
sahf
iret
sbb
fiadds
test
shll
negl
adc
xor
aad
nop
inc
jne
mov
adc
push
pop
push
mov
jmp
xchg
out
pop
psubsw
fstp
ss
es
lret
pop
add
pop
subl
push
stos
xor
mov
jnp
push
or
mov
in
jmp
jg
sbb
adc
or
mov
push
pusha
subl
into
or
cmp
repnz
push
jp
call
out
arpl
aam
mov
repnz
lahf
ja
ja
aad
icebp
repz
dec
jmp
loope
in
xlat
hlt
lods
cmp
pop
test
out
cltd
dec
sbb
out
mov
faddp
cwtl
push
jg
jnp
inc
pop
nop
sahf
in
inc
jg
cs
and
xchg
outsl
xor
jle
scas
dec
repnz
cld
shlb
call
faddl
mov
ss
mov
cmpsl
xchg
jne
cltd
loop
adc
push
xor
sbb
cmpsb
mov
sub
mov
adc
out
push
mov
lea
fs
xchg
adc
push
loope
out
ficoms
loopne
jo
outsb
stos
sub
pusha
push
cmpl
mov
mov
adcb
cmp
pop
test
pop
shll
in
push
push
int
dec
inc
and
sub
mov
test
inc
outsb
mov
mov
jmp
mov
push
into
dec
sub
jnp
dec
negb
in
push
xor
mov
shrb
out
daa
lods
aad
adc
xchg
out
dec
out
mov
and
aam
pop
repnz
arpl
rolb
mov
mov
jge
adc
cmc
outsb
into
shlb
int3
mov
push
jmp
fcomps
sbb
lret
lods
lea
loop
aam
and
cmp
add
adc
repz
pmulhw
fs
fsubrp
cld
mov
addr16
repz
adc
popa
clc
pusha
sub
push
subl
sub
mov
mov
adc
loope
jmp
into
orl
fistps
ud2
sub
adc
pop
and
pop
bnd
rclb
push
das
mov
or
mov
data16
mov
shll
mov
fildll
jg
or
rcll
int
inc
js
cwtl
addr16
inc
adc
push
fisubl
loop
cltd
jmp
test
inc
das
mov
dec
push
dec
mov
mov
pop
fwait
cmc
negb
aam
dec
jno
iret
sub
jmp
mov
fstpl
push
push
sub
push
lret
cmc
fdivs
pop
fidivs
or
xor
jp
xchg
push
jbe
sbb
hlt
sbb
xchg
mov
cwtl
mov
pop
xor
jno
inc
out
pop
sbb
leave
push
ret
arpl
xorl
inc
xchg
pop
adc
adc
inc
jnp
or
mov
inc
imul
fdivs
mov
daa
in
stc
out
cmp
lods
cvtps2pi
test
mov
cvtps2pi
int
aaa
mov
ss
jecxz
cmp
push
pop
inc
divb
push
adc
xchg
jle
push
inc
test
push
into
addr16
pop
xor
addr16
jb
sahf
dec
push
push
jg
xchg
jns
movb
dec
mov
mov
repz
cmc
iret
push
lods
jge
and
jle
jb
shrl
pop
in
jge
mov
ficoms
sub
sbb
test
adc
mov
out
lods
scas
pop
out
sub
fadds
movsb
fs
sbb
cmp
mov
fidivl
push
iret
mov
mov
mov
adc
sbb
stos
adc
jae
call
jo
jmp
data16
add
test
dec
test
or
orb
mov
or
xor
test
or
ret
add
xor
push
xlat
pop
rorb
fs
scas
lods
lcall
mov
shrl
xor
mov
xchg
inc
jp
xchg
push
loope
sub
jp
mul
lret
lcall
mov
xchg
sbb
cltd
fnstcw
xchg
inc
xchg
push
sbb
in
repnz
lret
sub
adc
cmpsb
jne
in
test
out
xchg
push
imul
sbb
sub
adc
lods
ja
push
dec
pop
and
fwait
int
gs
popa
fstp
pop
or
jmp
shll
xchg
add
in
mov
pop
cmp
dec
xorl
setno
jb
inc
xchg
mov
jae
pop
adc
packssdw
aas
xchg
push
sbb
daa
out
xchg
les
jecxz
fsubrl
fdivr
int
dec
mov
inc
clc
shll
and
and
nop
push
aaa
lcall
fsubrl
mov
lahf
roll
aaa
outsb
push
xchg
pop
pop
inc
lods
lods
insb
call
test
dec
push
mov
push
in
dec
jnp
sbb
xchg
fistl
mov
mov
pop
jmp
imul
sahf
inc
popf
out
lods
repnz
mull
add
faddp
mov
inc
inc
dec
outsb
add
xchg
data16
or
pop
in
pusha
cmp
pop
xchg
sub
push
mov
dec
dec
jb
jno
ret
mov
imul
scas
jae
loope
adcl
subb
xor
bound
lds
out
js
outsl
loop
xor
add
and
mov
push
and
pop
dec
sbb
loop
insl
mov
clc
pop
pop
aad
inc
out
sub
mov
mov
pop
popa
adc
sub
cli
adc
pop
ljmp
mov
daa
jge
movsl
rolb
and
scas
mov
adc
xchg
test
sub
xchg
in
jne
dec
pop
adc
xor
inc
aaa
pop
in
mov
lods
push
pop
das
jl
xchg
scas
int3
imul
sub
and
inc
lcall
xchg
add
and
xor
push
mov
pop
add
sti
inc
mov
imul
enter
inc
ss
enter
mov
xor
push
xor
not
mov
inc
mov
pusha
pop
mov
and
cmp
xchg
mov
movsb
out
adc
xor
sbb
aas
sbb
lds
pop
enter
inc
scas
sbb
pop
dec
or
pop
test
xchg
pop
jbe
sahf
sbb
mov
mov
xor
and
adc
add
mov
test
lret
push
mov
mov
push
arpl
out
jle
inc
cmp
rolb
adc
arpl
data16
sbb
loop
fisttpll
ja
cmp
pop
inc
sbbb
ds
mov
add
sbb
or
sbb
iret
inc
mov
xor
loopne
dec
jmp
inc
nop
mov
jp
into
jecxz
mov
jns
mov
shlb
mov
sub
xchg
and
or
jo
or
outsl
sti
cmp
mov
mov
xabort
adc
repnz
addr16
es
push
mov
mov
mov
mov
cmpsl
aad
repz
or
sbb
adc
inc
stc
insl
dec
dec
out
pop
repz
test
arpl
jo
repz
scas
inc
mov
sahf
orb
addl
xchg
dec
sarl
cwtl
xchg
sub
lock
and
jle
pop
and
xor
leave
mov
mov
subb
xchg
clc
hlt
negb
popf
mov
aad
mov
sub
fwait
or
push
int3
xchg
in
dec
mov
iret
aaa
pop
lock
stos
mov
inc
push
push
mov
mov
add
jnp
jmp
pop
push
inc
or
and
adc
fstpt
fs
cmp
into
into
fidivl
aad
outsb
loope
mov
sbb
mov
out
mov
add
shl
inc
sbb
je
das
push
jbe
leave
lcall
test
scas
pop
add
lea
fnstenv
divl
ds
mov
mov
sti
mov
dec
push
or
call
adc
mov
or
nop
xor
test
push
mov
fcoml
sahf
icebp
xor
mov
test
jmp
arpl
jo
mov
mov
inc
jne
repnz
sub
call
idiv
inc
xor
inc
sub
enter
sub
js
pop
enter
sub
shr
mov
int
mov
adc
xor
xchg
push
push
shlb
pusha
insl
mov
outsl
lock
push
xor
js
push
pop
add
gs
push
adc
lock
out
jmp
call
lcall
push
and
add
cmp
xchg
out
sahf
dec
cmp
mov
and
rcll
jecxz
cmc
sbb
pushf
push
sbb
mov
sub
out
in
or
mov
fcoml
sub
dec
mov
pop
fwait
shrb
mov
pop
pop
dec
sbb
sub
mov
and
jl
ret
aas
inc
in
add
mov
mov
and
or
jb
add
inc
lret
mov
jns
cld
sahf
lods
ljmp
stos
cs
jecxz
test
pop
testl
je
mov
inc
icebp
push
sub
int3
mov
fcomi
inc
call
push
pusha
xor
push
sub
mov
popf
out
cli
fists
cld
jg
pop
dec
and
add
jnp
add
leave
daa
nop
jl
andb
jno
jp
and
hlt
fwait
add
xor
sub
pop
cltd
xchg
push
xorl
adc
ret
pop
adc
push
jg
mov
cld
imul
xchg
mov
cmp
jb
xorl
add
push
pop
xchg
push
inc
mov
lds
mov
pop
and
mov
adc
sbb
scas
adc
loope
push
mov
lds
scas
bound
sbb
mov
sub
pop
out
jge
jnp
lds
lock
cmp
cmp
nop
negb
jg
dec
clc
cld
int
pop
pop
adcb
fwait
fs
rclb
add
push
sarl
cmp
daa
arpl
imul
mov
in
scas
call
out
test
lods
adc
repnz
sbb
mov
and
movsl
cmpsl
cmp
push
sub
sbb
in
xor
or
fimull
je
cmc
aas
scas
pushf
push
addr16
pop
dec
arpl
push
sahf
gs
je
loopne
inc
mov
xchg
dec
sbb
xor
outsb
out
mov
enter
test
sub
rcl
mov
loope
mov
dec
xchg
sbb
leave
mov
xchg
dec
sub
dec
movsb
or
inc
adc
xor
mov
gs
jno
jnp
adc
sbb
sbb
pop
pop
xchg
adc
push
fnstcw
pop
lcall
testl
nop
inc
mov
stc
pcmpgtw
adc
aam
mov
aam
ret
scas
xor
inc
xor
and
repnz
or
clc
push
mov
loop
xor
pop
mov
shl
fmuls
xor
aad
loope
stc
xor
push
fimull
lea
popf
jp
sub
call
mov
outsl
push
pop
std
and
pushf
mov
xchg
cmp
int
mov
in
outsb
mov
imul
shll
outsl
add
stc
jns
shrb
adc
insb
mov
dec
lret
insl
aaa
mov
stc
in
xlat
cld
mov
fisttps
in
lret
out
loope
gs
push
dec
stc
adc
jge
dec
fisttpll
sbb
test
aaa
addr16
jp
xor
jno
shlb
dec
int
mov
stc
dec
xlat
clc
pop
ret
lea
xchg
xor
mov
push
adc
insb
sub
dec
clc
cltd
leave
and
data16
sti
jns
fcmovu
jg
decb
in
loopne
and
add
out
push
in
mov
arpl
or
inc
inc
rolb
xchg
test
mov
xor
mov
xchg
ret
rclb
inc
loope
mov
mov
iret
xor
into
and
pusha
insb
or
add
loop
fsubrl
lahf
popf
xchg
mov
dec
fidivs
shl
sbb
push
adc
les
jmp
mov
movsb
jbe
test
sbb
xchg
scas
cmp
inc
pop
js
nop
or
sbb
push
mov
and
and
mov
mov
incl
push
test
fcompl
push
or
inc
inc
or
xor
mov
mov
and
cmc
pop
push
mov
xchg
cwtl
add
jns
xor
daa
mov
and
enter
inc
dec
testl
mov
and
sarb
mov
dec
cltd
lcall
push
dec
xchg
aad
jbe
xchg
xor
ret
pushf
jne
push
insl
pop
or
cmpb
test
lods
gs
pop
stos
jno
call
push
cli
outsb
pop
pop
mov
sbb
pop
negl
das
shll
push
jg
adcl
mov
jecxz
mov
sbb
outsl
dec
repnz
mov
sub
push
sbb
popa
or
mov
xor
imul
inc
mov
iret
push
fistpl
aam
outsl
cmp
dec
pop
add
add
ja
mov
dec
xor
lds
mov
pop
scas
lahf
inc
frstor
leave
or
and
dec
negb
sbb
mov
dec
pop
leave
loop
adc
popf
icebp
std
xchg
sub
aaa
sbb
fmuls
sub
repz
ror
adc
in
inc
js
int3
aam
add
jae
cwtl
mov
in
dec
jne
mov
mov
aas
xchg
das
ret
add
mov
jns
js
mov
xchg
mov
mov
fistpl
mov
icebp
sub
cmp
push
mov
shll
sahf
movsl
movsb
shl
arpl
push
insb
inc
fnstcw
bound
mov
push
cld
xchg
xor
mov
xchg
add
rcrl
xchg
lret
fwait
out
jae
inc
or
sbb
jbe
sbb
or
adc
fmul
addl
js
mov
aaa
pop
call
xor
orb
stos
push
data16
fdivl
fcompl
sbb
leave
pushf
xor
int3
adc
popa
adc
dec
ljmp
sub
lds
dec
adc
pop
addr16
dec
and
add
and
sub
push
push
mov
adc
std
insb
sbb
sbb
xchg
es
adc
icebp
inc
pop
ret
dec
mov
mov
xchg
sbb
clc
mov
fwait
in
in
outsl
mov
pushf
stos
push
inc
add
xchg
arpl
xor
dec
gs
leave
adc
popf
shll
push
nop
fidivl
movsl
push
mov
cmp
xor
popa
pop
cli
les
xor
in
addb
lahf
in
cld
cmc
ds
ljmp
inc
fnsave
inc
cmp
mov
jnp
popf
hlt
pop
and
dec
cli
mov
xchg
sahf
pop
int
xchg
inc
mov
cltd
or
mov
push
sub
out
adc
or
loop
cmpsb
adc
adc
sbb
cld
in
cmpsb
mov
les
mov
jns
repz
insb
pop
cwtl
sbb
push
stc
mov
inc
in
sahf
push
add
bound
cs
sbb
jno
pop
jle
aad
sbb
dec
sti
ljmp
xchg
jp
sbb
repnz
xlat
cmp
pop
int3
xor
push
add
cmc
pop
jae
int
cs
add
push
sbb
inc
dec
popf
jno
inc
outsb
call
xchg
xchg
cmp
lock
rol
mov
pop
inc
dec
inc
ret
mov
adc
in
cmp
add
push
pop
sub
orb
adc
pushf
popf
movsl
mov
scas
sbb
scas
cmp
jne
xor
mov
shl
scas
xor
or
dec
jmp
dec
jmp
mov
push
sbb
hlt
pop
mov
adc
int
iret
mov
pusha
fldl
jnp
jnp
sbb
enter
lcall
nop
repz
icebp
out
and
not
xchg
incl
loop
popl
roll
or
inc
test
xchg
xor
js
aas
pop
popf
mov
js
and
lret
insb
pushf
mov
imul
sbb
mov
fdivrl
dec
hlt
stc
mov
clc
xor
icebp
ffree
stc
cmp
pushf
cmp
fwait
call
lret
jl
inc
cmp
adc
stos
addr16
fidivrs
pop
loope
sbb
or
xor
xchg
int
cltd
stos
test
cmc
fwait
sbb
cmp
enter
imul
int
cmp
mov
insb
daa
mov
lcall
das
mull
out
inc
outsl
insb
cmc
cmp
bound
jbe
jno
jns
xorl
inc
lods
mov
movsb
ret
loope
out
jne
loopne
js
hlt
daa
stos
xchg
and
jecxz
xor
push
sbb
out
orb
mov
sbb
pop
and
pop
negb
out
hlt
loop
aas
sarb
jmp
fnsave
xlat
pop
ljmp
jae
push
daa
jl
mov
adc
pop
les
push
pop
movsb
xchg
sahf
inc
inc
repz
push
aaa
inc
bound
and
test
cmp
sub
pop
es
dec
cmp
imul
mov
cmp
clc
adc
test
insl
push
xchg
mov
icebp
adc
neg
jbe
clc
and
fnstenv
loope
shl
cmp
fmull
aam
fmull
pop
push
xchg
mov
inc
or
int
data16
subl
fidivrs
push
push
mov
loop
sub
testl
movsb
cmp
add
or
daa
in
addr16
push
adc
pop
push
stos
cmp
shrl
cld
call
mov
aas
insb
cld
inc
pop
and
mov
cmp
psubusb
and
cmpsl
mov
or
jl
mov
xchg
in
jnp
push
xor
mov
inc
mov
arpl
loop
xor
or
and
gs
jmp
getsec
xorl
stos
fcoml
adc
or
repz
int
dec
push
add
xchg
xchg
sbb
sub
pushf
fildll
dec
jne
ja
jle
adcb
mov
cmp
jno
sub
push
xchg
push
outsl
dec
lahf
xor
jp
test
in
nop
pusha
in
dec
dec
dec
fwait
sub
sahf
add
push
cwtl
or
xchg
aad
inc
test
dec
cmp
in
mov
push
clc
jge
pop
adc
popf
xor
dec
lods
mov
int
shlb
and
sub
jg
jne
mov
or
mov
push
xchg
and
hlt
inc
or
leave
leave
dec
frstor
adc
mov
cmp
in
in
scas
mov
push
nop
sahf
fwait
or
into
jmp
pop
stc
cld
outsl
jbe
push
jns
lret
dec
sbb
mov
dec
aaa
xchg
adc
ljmp
pop
test
sbb
jb
mov
gs
adc
jecxz
xchg
pop
arpl
cltd
data16
lods
mov
add
cwtl
std
es
rcll
mov
mov
cmp
bound
ljmp
mov
sub
in
and
popa
pop
std
sub
add
popf
mov
out
push
movsb
dec
cmp
mov
sbb
enter
js
nop
xchg
stc
repz
jl
cltd
add
inc
add
pop
pop
push
mov
aam
lock
adc
mov
into
scas
adc
leave
aad
outsb
add
or
mov
push
lret
mov
imul
lret
mov
fwait
jb
pusha
and
jne
insb
dec
lock
and
and
mov
int
push
sarl
lods
xchg
mov
mov
mov
mov
out
or
inc
pop
jno
cmp
mov
or
mov
lret
fildl
stc
sbb
adc
push
cmp
rorl
gs
testl
sub
incb
cmp
and
sub
pop
pop
or
nop
test
in
sbb
fs
push
ret
mov
aaa
or
fbld
loope
nop
xchg
xorb
addl
jmp
scas
cmp
adc
imulb
insl
xchg
pusha
dec
ljmp
inc
icebp
sbb
mov
in
test
push
imul
int
fistpl
xchg
int3
pop
push
pop
push
shlb
test
out
fistl
jns
fwait
dec
cltd
testb
lcall
lds
push
bound
xchg
les
cmc
loopne
inc
lock
addr16
xchg
or
cmc
or
or
pop
rorb
push
push
push
xchg
pop
dec
and
or
dec
cmp
mov
lock
push
fwait
bound
jmp
xor
sahf
pushf
jno
add
dec
gs
sbb
dec
push
in
lods
xchg
push
outsb
dec
pop
es
mov
scas
test
jnp
aaa
movsb
pop
pushf
sbbb
xchg
out
decl
lock
adc
xchg
pop
pop
out
test
xchg
pop
push
fwait
lds
dec
bound
orb
add
popa
cmp
mov
js
and
adc
xchg
push
cld
out
and
xchg
mov
add
ljmp
int3
cmp
cmp
xchg
jmp
out
call
xchg
icebp
jg
dec
fs
xchg
ds
xor
addr16
gs
dec
push
movsb
jg
mov
sahf
fldl
cs
mov
mov
lock
adc
pushf
outsl
xor
stos
jbe
gs
imul
xchg
pop
setg
pop
call
test
sub
jge
rcl
xchg
lret
cmp
repz
imul
sub
sbb
scas
pop
pop
fs
sub
xchg
loop
icebp
push
and
arpl
xchg
cmpsb
cltd
sub
cld
rcl
hlt
or
push
xchg
popf
out
js
push
test
xchg
js
std
adc
xorb
stos
add
ljmp
mov
daa
ja
mov
mov
mov
rcrl
and
daa
in
adc
sub
pop
mov
push
mov
inc
push
fsubl
addr16
mov
mov
jbe
andb
scas
bound
and
mov
fistps
fstps
or
mov
jg
loopne
push
cmp
fcoml
pop
sub
dec
pop
imul
lret
out
dec
andb
push
pop
ja
arpl
cmp
pop
adc
pop
clc
push
ljmp
aam
outsb
popa
lods
int3
mov
xchg
out
add
dec
scas
outsl
xor
data16
pusha
je
xor
jns
push
imul
mov
and
jo
xor
push
push
iret
sti
das
or
outsb
cmp
and
jp
dec
mov
or
mov
sub
jmp
sbb
push
inc
cmpsb
xchg
test
pusha
out
xchg
jno
sub
adc
or
xor
test
cld
inc
ljmp
fnstenv
test
popf
jle
mov
pop
xchg
cld
sbb
xor
das
lret
or
xchg
sbb
cmp
je
test
sub
push
xchg
cmp
pop
mov
sarb
in
jbe
lods
cmp
lock
cmpb
outsl
pop
pop
and
sahf
adc
and
mov
es
sub
das
imul
sbb
pop
jnp
ret
gs
pop
daa
or
cwtl
pop
pop
push
or
lods
cmpsl
jnp
icebp
or
inc
pop
push
pop
lret
mov
paddusw
fdivs
enter
pop
and
fidivrs
mov
sub
cmpsl
adcb
in
mov
adc
dec
xlat
jnp
mov
lahf
jge
std
out
adc
xchg
mov
mov
lock
adc
andl
xor
rolb
or
or
movsl
repnz
inc
into
insl
cld
fimull
shll
mov
out
jp
int
cs
lods
push
insl
push
hlt
cli
xlat
jecxz
les
jmp
test
cli
xchg
sub
cmp
insb
sti
dec
dec
shll
jp
orl
daa
cmp
cwtl
pusha
inc
and
jb
mov
mov
daa
insb
es
ja
xor
xor
sub
xor
repnz
adcl
cmp
jl
xor
ds
sbb
sbb
mov
cmp
mov
inc
jno
enter
push
mov
xchg
push
sub
push
mov
mov
in
sub
lods
pop
mov
adc
sahf
cltd
pop
jnp
lea
push
and
xchg
jne
cs
pop
sub
lret
js
mov
lods
or
cmp
mov
lret
push
add
data16
mov
mov
sar
push
mov
sbb
bound
pop
push
lret
cltd
or
test
push
mov
not
ja
enter
fsubrs
imul
pop
lods
fs
mov
je
jnp
adc
das
movsb
pushf
mov
lcall
or
adc
loop
xor
subb
shrb
loopne
testl
adc
aad
cmpsl
fwait
inc
insb
scas
sub
mov
dec
scas
xchg
mov
in
or
or
mov
lahf
dec
insb
mull
and
or
mov
mov
mov
lcall
and
clc
cmp
xchg
lret
into
imul
pop
inc
jne
and
mov
adc
push
xor
sub
adc
in
insb
aas
sbb
stos
sub
inc
jge
cli
jno
push
jge
je
lds
fcmovnbe
or
dec
pop
test
inc
into
xchg
inc
inc
orb
jle
je
js
arpl
in
xchg
sub
and
xchg
outsl
in
idivb
mov
mov
xchg
hlt
mov
ds
stc
inc
dec
add
or
lock
repnz
add
and
testl
jne
mov
or
pop
xchg
mov
test
dec
out
cmp
es
mov
les
out
pop
push
sub
push
stc
sbb
add
push
ljmp
sbb
dec
and
and
mov
hlt
add
jne
xor
jo
idivb
insb
ja
insb
paddsb
jle
pushf
lock
icebp
push
lock
add
push
mov
insl
cld
push
cs
repz
push
andl
into
push
mov
and
jne
xor
cmp
inc
push
jl
orl
mov
xchg
fildl
les
jne
lods
mov
push
adc
and
sbb
pop
rorb
lcall
std
ret
mov
mov
xchg
fiadds
push
xchg
mov
ljmp
sub
xchg
sbb
scas
mov
xchg
mov
fisttpll
test
sbb
and
mov
ficompl
es
mov
aam
jge
aam
push
hlt
xchg
js
dec
mov
pop
adc
aas
clc
sub
loop
or
xchg
and
inc
shll
pop
fldenv
stc
sub
xchg
add
mov
scas
or
jns
pop
cmp
out
jl
test
js
fwait
cmpsb
jnp
xchg
sar
lret
jecxz
int
push
push
imul
cld
xor
push
jbe
lret
lods
cmp
loope
and
cltd
ret
das
cmp
test
dec
dec
mov
dec
lods
mov
imul
mov
ja
mov
ds
int3
int3
in
in
cmp
mov
in
stc
dec
adc
xchg
mov
aas
fstps
sub
lret
stos
lock
or
icebp
adc
jg
lcall
cltd
test
ds
sbb
sub
repnz
xor
mov
push
rolb
out
jb
cmc
icebp
ret
jne
sarb
xchg
out
and
mov
in
xlat
xor
xlat
sahf
inc
pop
pop
push
je
xor
int3
idiv
in
inc
add
fcoml
enter
js
testb
daa
adc
sbb
arpl
cmp
popl
out
mov
dec
xchg
scas
pop
pop
sub
ret
call
aas
jge
xchg
fwait
pop
xchg
or
dec
mov
mov
mov
cmp
jne
nop
test
incb
loopne
xchg
jne
insb
popa
into
inc
fsubrs
and
push
adc
cmpsl
push
xlat
rcll
fldcw
add
popf
or
push
inc
shll
dec
push
add
loop
push
inc
shrl
rcll
pop
insb
shll
pop
cltd
fidivl
incl
or
cmp
mov
sbb
mov
push
daa
xor
cld
jnp
mov
dec
insl
fisttpll
jle
imul
xchg
je
bound
lods
cmp
and
push
pushf
jo
mov
addr16
and
addl
mov
aas
jecxz
pusha
mov
subb
loopne
int3
xlat
bound
in
test
or
out
sub
fwait
cmp
data16
aam
lcall
stos
nop
jp
lea
lods
cmp
sub
xor
out
movsb
xchg
popf
enter
sahf
sub
jge
mov
xor
loope
bound
adc
xlat
shrl
aas
adc
cli
imul
mov
jle
aaa
push
rcll
jecxz
mov
sbb
gs
mov
xor
insl
mov
sub
je
bound
lods
andl
dec
lea
inc
popa
or
adc
loop
cli
xor
push
sub
pop
lods
mov
add
in
adc
pop
mov
cmp
test
hlt
clc
rcrb
xlat
sub
mov
mov
mov
or
repz
ss
mov
push
jg
or
cmp
addr16
pop
mov
mov
test
push
fists
or
and
inc
mov
jl
jle
rclb
add
adc
sub
xor
dec
sub
mov
clc
xchg
arpl
cld
fadd
rolb
scas
clc
lods
push
pop
test
mov
fucomi
sub
xchg
in
clc
sbb
inc
adc
inc
xchg
cmc
sahf
pop
xor
inc
aad
frstor
add
adcb
xor
inc
or
loopne,pt
ljmp
ret
sbb
test
fisubrs
lods
dec
das
rorl
dec
push
jg
pop
push
xor
shll
dec
lods
imul
aam
or
lock
aam
cs
mov
ja
xchg
enter
in
mov
js
pop
push
sbb
addr16
pop
xor
or
cs
add
xlat
popa
cmp
dec
jnp
or
pop
and
in
xchg
xor
bound
pop
xor
lcall
and
pop
lahf
insb
addl
fisubrs
sti
mov
mov
jo
mov
imul
aam
clc
dec
repnz
fstpt
fildll
and
cli
loopne
xor
dec
leave
push
push
dec
inc
aam
das
leave
cmp
dec
mov
cmp
inc
orb
je
mov
jg
scas
in
xor
mov
js
pop
pop
push
fwait
popa
jp
aaa
or
jnp
dec
popa
fists
jl
mov
xchg
cmc
push
and
sbb
repnz
fs
imul
mov
int3
stos
push
sbb
fwait
xchg
lods
insl
or
and
xchg
add
cld
movsl
jo
lods
in
adc
mov
adc
out
pop
mov
fiadds
and
pop
or
sbb
sahf
mov
dec
aaa
ss
mov
pop
lods
sbb
lahf
pop
dec
pop
jnp
sub
jmp
xchg
xor
sbb
cmp
fcmovbe
inc
mov
inc
aas
pop
xor
insb
scas
cld
in
mov
pop
xlat
mov
cld
mov
in
nop
or
and
xchg
push
and
aaa
inc
mov
cwtl
sbb
orb
jge
add
pop
mov
adc
insb
lock
outsb
xchg
popf
lahf
push
or
push
pushf
in
jbe
cmc
test
add
xor
xchg
dec
sahf
pop
je
std
cmp
inc
add
popf
je
loope
pop
mov
inc
xchg
jmp
daa
pshufw
out
outsb
add
inc
dec
sbb
cs
arpl
pop
sbb
scas
jmp
xlat
gs
xlat
rolb
pop
test
js
push
fs
ds
cltd
mov
into
sti
nop
xor
push
aam
shrl
adcb
or
xchg
fsubrl
ficompl
pop
scas
and
sub
lods
das
aas
cmc
xor
adc
shll
jo
mov
mov
xor
mov
ficoml
push
jg
cmc
cmp
stc
sub
popf
aad
shr
mov
dec
mov
hlt
mov
adc
sbb
imul
pop
data16
filds
inc
ja
addr16
aas
add
pop
fldcw
dec
jecxz
push
dec
pop
or
out
imul
add
mov
data16
ja
mov
push
mov
shlb
fdivs
xor
pusha
xor
and
or
xor
gs
xlat
lret
mov
xchg
adc
cmp
cmp
lods
push
inc
int
inc
shll
test
push
push
jns
mov
add
inc
pusha
fidivrl
loopne
jno
call
mov
icebp
adc
out
mov
sbb
sbb
mov
aas
lods
scas
bound
mov
dec
or
shlb
pop
aaa
fucomp
arpl
mov
in
sarl
dec
fnsave
xchg
or
negb
movsb
inc
push
add
xchg
jne
or
xchg
aas
aam
or
jne
arpl
loopne
pop
ljmp
xor
popa
fistpl
loop
cmpsb
push
dec
leave
inc
jl
xchg
lcall
push
mov
xchg
cmpb
mov
xor
movsl
outsl
lea
cld
pop
inc
push
sbb
dec
fisubrs
or
add
nop
pop
test
pusha
pop
xor
es
test
imul
test
mov
jnp
or
mov
xor
nop
in
scas
xchg
mov
lock
aad
sti
mov
push
mov
or
cmp
xor
pusha
pop
dec
or
push
jne
add
scas
sbb
sub
aaa
stos
dec
push
aas
lahf
loop
lahf
ja
jns
lods
cltd
data16
and
cmp
aam
ffree
cmp
push
and
repz
cmpsl
mov
xchg
xchg
cli
ret
dec
call
sub
xchg
fs
popa
int
pop
pop
mov
push
pop
add
in
movsb
cmp
insl
ss
mov
nop
or
xchg
pusha
cwtl
xchg
clc
clc
dec
pop
cmp
jmp
mov
mov
pushf
xabort
iret
inc
push
cwtl
addr16
xchg
or
mov
and
sahf
stos
out
xor
sbb
test
add
iret
insl
jnp
mov
push
sbb
pushf
ror
inc
fsubrl
add
add
pusha
repz
divb
dec
inc
cmpb
mov
popf
shll
xchg
dec
add
mov
scas
sbb
xchg
pop
xor
outsl
sahf
add
aam
inc
sahf
movsl
xor
mov
ffreep
lds
pop
test
int
repz
movb
push
push
mov
stos
lret
std
inc
xor
and
test
pushf
addr16
inc
aad
jno
in
or
inc
sbb
int3
add
test
bound
bound
test
or
pop
fisttps
fcoml
jle
adcb
outsb
push
cltd
fcomps
aas
mov
cmpsb
add
sub
sub
pusha
mov
adc
push
enter
dec
pop
mov
inc
pusha
mov
mov
mov
fisubl
stos
xor
sub
add
cmp
xor
movsl
std
addr16
xchg
inc
scas
out
mov
dec
sbb
push
jge
jg
sahf
pop
sbb
sbb
dec
mov
mov
cmpsb
call
inc
mov
adc
fidivl
je
call
sbb
incl
idivb
rorb
shr
loop
or
sarl
mov
sbb
push
push
xor
jecxz
out
fiadds
shlb
movl
add
cmp
fcmovu
aad
cmpsb
std
adc
int3
popf
in
outsb
insb
dec
stos
rclb
mov
xchg
cmp
push
add
in
cmp
mov
push
pop
ret
mov
mov
inc
xor
fistps
cmpsb
enter
mov
inc
jns
cli
dec
or
popf
mov
aam
hlt
inc
lea
cmp
add
fldenv
movsl
or
les
ss
int3
xchg
andb
stc
dec
lret
cmp
int
fwait
pusha
pop
mov
cmp
sbb
es
ja
dec
mov
inc
mov
addl
ja
mov
test
ss
hlt
stos
inc
mov
pushf
lret
orb
sub
imul
shll
sub
hlt
dec
aaa
mov
bswap
jle
push
and
cmp
adc
push
iret
arpl
add
cmp
rorb
pop
ret
and
fdiv
insb
xlat
jb
lds
fdivrp
adc
adc
sahf
int
aaa
xchg
lock
mov
bound
pop
cmpsl
xchg
xchg
subl
out
les
push
lahf
loopne
sbbb
inc
pop
or
lahf
mov
clc
andb
stos
lds
pop
gs
cli
or
sbb
sub
lahf
push
stc
pop
iret
xchg
int3
imul
dec
es
test
push
cmpb
sub
dec
test
pop
fs
dec
lcall
lock
ficompl
push
add
mov
jg
push
mov
outsb
push
lds
andb
inc
popf
and
push
lea
jo
push
jl
daa
or
movsl
leave
cmp
cwtl
add
inc
in
lds
push
cmc
cmp
inc
lcall
xchg
cmp
test
cmc
xchg
out
mov
mov
inc
fucom
sub
cmp
lret
mulb
pusha
ljmp
dec
nop
push
inc
andl
sti
and
lods
out
mov
dec
bound
pop
imul
cmpsl
lret
cmc
dec
cli
dec
aas
nop
xchg
xchg
iret
incl
lods
cmp
outsl
inc
jb
cmp
test
and
jle
iret
das
icebp
test
mov
jo
subb
lods
insb
xor
jmp
bt
sub
clc
mov
fsts
mov
in
push
sbbb
mov
dec
pop
xor
dec
adc
sbb
out
xchg
push
xor
ljmp
nop
pop
mov
jns
cmpsl
mov
cmp
je
lcall
and
or
xchg
cmp
shlb
and
movsl
insl
push
testb
push
lret
pop
data16
adc
xor
mov
inc
sub
fcmovnu
inc
xor
push
dec
cli
out
stos
dec
in
cld
add
mov
mov
test
aad
or
mov
xchg
cmpsl
sub
imul
add
into
in
movsb
insl
adc
dec
dec
mov
bound
xor
outsl
dec
push
enter
inc
mov
mov
aaa
xor
mov
sub
and
sub
mov
pop
data16
ret
xor
xchg
stos
jecxz
sbb
adc
ret
loop,pt
or
add
mov
mov
push
add
repz
jae
out
sbbb
adcl
sbb
mov
pop
pop
dec
push
jbe
mov
test
aam
jl
push
jg
mov
xchg
repz
lret
sbb
adc
popf
mulb
in
push
xchg
pop
aaa
mov
jae
xchg
es
test
lahf
xchg
fdiv
dec
insb
inc
pop
sbb
xor
cli
xor
in
fcoms
xor
cmovge
dec
add
jae
aaa
in
rclb
out
mov
dec
loope
popl
adcb
pop
mulb
stos
xchg
sbb
cld
add
aas
xor
xchg
lds
inc
sub
imul
loopne
das
pusha
lret
xor
inc
dec
jns
mov
jmp
lahf
loope
sub
push
and
std
cmp
and
jo
fsubl
mov
cpuid
or
add
cmp
mov
rolb
repz
clc
mov
xchg
or
rcrb
push
lahf
aaa
popf
inc
mov
aas
jo
mov
push
or
notb
jb
fstps
ljmp
add
dec
int
and
mov
sahf
dec
movsb
int
pop
es
adc
in
mov
sub
dec
push
cli
cwtl
jecxz
xchg
and
add
imul
fnstcw
gs
ret
in
mov
adc
adc
enter
pushf
fs
jp
or
dec
adcl
jle
pushf
push
outsb
cmpsl
cmp
cli
fisttpll
and
add
hlt
or
cmp
in
jle
aaa
mov
and
jbe
roll
fwait
sbb
inc
lcall
lods
outsb
cltd
inc
sbb
mov
sub
xlat
pop
lock
shlb
cmpl
xor
mov
mov
mov
mov
or
outsb
icebp
xchg
mov
push
jno
dec
and
push
addr16
inc
xchg
jb
and
xchg
xchg
push
sbb
iret
push
cmpsb
in
push
jo
mov
jne
insl
and
outsb
cmp
sarb
flds
push
sbbb
jbe
in
xchg
push
ret
jge
push
pop
jmp
sbb
leave
insl
pusha
cmpsl
inc
jns
adc
jno
sbb
jl
scas
int
out
jp
dec
pop
jne
xchg
nop
ficomps
xor
call
mov
mov
adc
push
mov
sbb
imulb
aaa
mov
popl
push
sbb
push
inc
push
in
add
jno
imul
mov
or
adc
outsb
push
cmpsl
aaa
push
push
cmc
iret
and
arpl
mov
jbe
lods
jb
fwait
jle
push
testl
out
jb
jno
movsb
sbb
push
push
js
add
mov
cld
mov
mov
mov
movsb
cli
fsubl
insb
cmp
add
cmc
add
pop
mov
xchg
push
je
pusha
cmp
lahf
sbb
dec
movl
aam
adc
and
mull
jns
fldln2
mov
outsl
push
outsl
divps
popa
lock
es
xchg
das
push
mov
stos
lock
push
test
cwtl
test
inc
xor
adc
or
jge
jns
pop
lret
mov
jecxz
roll
stos
mov
ljmp
xchg
icebp
das
jno
xchg
or
mov
rorb
les
ljmp
cltd
ja
pop
xchg
subb
and
loopne
push
shll
sub
sbb
rcrb
jl
cmp
xor
add
inc
and
cmpsl
xchg
arpl
fldl
hlt
es
notb
and
push
xchg
adc
bound
push
pop
xchg
repz
lcall
mov
sub
aad
add
or
mov
jecxz
pop
cmp
xchg
push
add
ret
inc
jge
adc
fldl
scas
insb
movsb
cmpsb
dec
js
sahf
xor
sbb
je
ret
enter
xorl
mov
loope
lods
jg
bound
leave
cmp
js
fistpll
or
subb
popl
mov
in
push
test
push
scas
and
pop
ret
mov
mov
push
rcll
adcb
mov
push
int3
mov
xchg
and
and
fmulp
add
dec
and
ds
fadd
pushf
mov
jmp
ret
pop
jg
and
lcall
adc
leave
xor
mov
filds
xrelease
mull
adc
xchg
loope
int3
add
sti
push
sahf
pop
cmp
pop
mov
push
xchg
xor
jg
xor
sbbl
pop
and
jecxz
inc
push
push
dec
out
add
scas
stos
mov
sbb
mov
jno
sbb
push
xor
jmp
push
int3
adcb
and
rol
pop
mov
stos
xchg
xchg
mov
out
sbb
fidivrs
mov
inc
push
jns
sarl
jnp
sbb
jge
push
add
pop
daa
pop
test
pop
push
sub
add
dec
int3
gs
repnz
dec
inc
in
jns
lds
dec
jge
jb
mov
rorb
inc
pop
pop
loop
mov
sbb
mov
sbb
aad
scas
push
or
out
pop
bound
cmp
mov
insl
mov
push
xor
or
and
sub
sbb
pop
mov
and
adc
inc
add
xorb
icebp
jbe
xlat
sbb
jnp
in
or
lea
stos
fsubl
stc
in
shl
scas
pop
mov
pop
stos
fisttpll
test
repz
push
cmp
or
sbb
mov
sbb
or
inc
es
fucomi
lods
add
jecxz
lahf
popa
mov
xor
inc
add
divb
xor
imul
movsl
sahf
mov
adc
xor
push
mov
add
daa
lds
pop
sbb
sbb
sbb
test
insl
bsr
jae
mov
fldenv
popf
adc
and
ss
and
out
das
dec
arpl
push
shr
mov
push
xchg
stc
xchg
pusha
pop
mov
pop
mov
push
pushf
inc
mov
dec
cs
mov
scas
scas
lds
mov
sahf
add
cmpl
xchg
mov
test
cltd
es
andl
add
das
mov
nop
pop
adc
cmp
test
addr16
push
adc
cwtl
sbb
jle
pop
jno
leave
dec
sarb
pop
cmpsb
jbe
mov
xchg
in
scas
into
jp
ja
adc
lea
cmpsl
leave
push
jle
lea
movd
cli
xchg
repz
xchg
mov
mov
mov
jns
push
aas
mov
mov
sub
adc
add
jmp
cmp
fwait
std
sarb
sub
push
jae
stos
orl
in
mov
scas
mov
dec
mov
pop
cwtl
orl
shrb
aad
jecxz
enter
pop
mov
fcompl
jbe
push
ret
mov
pop
hlt
test
xor
jbe
mov
int3
xlat
mov
and
fists
cmp
mov
arpl
dec
repnz
shrl
into
lcall
fmul
and
jge
vmovd
and
pusha
adc
adcb
lcall
sbb
xor
cmpsb
mov
jmp
inc
subl
outsb
clc
mov
fwait
pop
or
fidivl
mov
lods
call
and
add
push
clc
fs
ret
push
int
push
ljmp
sbb
fcmovnbe
movsl
addl
icebp
movsb
mov
xchg
test
lahf
or
aas
and
adc
push
dec
lret
hlt
xor
fstps
pop
andb
jmp
sbb
negl
mov
sbb
jb
cmp
and
stos
in
jnp
xchg
mov
loope
into
pop
add
js
dec
adc
stos
jg
aaa
out
inc
repnz
fldenv
in
negl
or
push
mov
inc
ret
inc
int3
mov
rcrl
push
sub
lock
xchg
push
outsb
adc
or
push
mov
fistps
jmp
mov
inc
push
push
jg
rol
xchg
mov
cli
imul
lea
cltd
ja
mov
ret
sub
sub
mov
cmp
aaa
in
push
push
pop
mull
les
outsl
and
fcmovnbe
nop
jmp
out
push
imull
test
aad
xchg
and
jo
popf
jmp
push
aas
cmp
sbb
data16
sbb
xchg
pop
int3
sbb
sbb
dec
in
fiadds
mov
std
add
inc
ror
cvtpi2ps
xchg
addl
mov
inc
lcall
pushf
mov
fisubrl
pop
pop
loope
icebp
xor
popf
and
cmp
dec
push
and
mov
fisttps
push
sub
ret
mov
jnp
inc
mov
dec
orb
sbb
add
mov
pop
leave
iret
inc
insl
push
das
dec
test
shl
push
cmp
add
inc
dec
and
in
pop
mov
mov
sbb
cmpsb
mov
lret
insb
push
or
pop
adc
push
push
lcall
and
stos
divl
cmp
nop
cs
jne
inc
sub
mov
movsl
push
movsl
mov
out
loope
mov
fbstp
orl
stos
push
xchg
or
cmp
negl
push
xbegin
adc
cmpsb
mov
or
jg
fimuls
out
addr16
ss
xor
cmp
stos
cmpsb
cltd
fisubrs
push
mov
cmp
ror
cmp
insb
addr16
xchg
bound
xor
mov
push
mov
out
imull
bound
movsl
lock
mov
push
jge
stc
leave
add
add
insb
fcomps
cwtl
cmp
and
mov
dec
repz
mov
imul
lock
pop
imul
xor
mov
scas
inc
dec
sbb
add
jg
repz
adc
jno
subb
out
and
cmp
cmp
jge
into
insw
inc
dec
ret
outsb
push
repz
fld
sti
jle
stos
mov
int
and
iret
fwait
rorl
pop
sarl
mov
jbe
or
push
inc
loop
les
mov
fisubl
inc
mov
dec
dec
pop
pop
mov
pop
jbe,pt
out
or
mov
adc
sbb
mov
es
es
movsb
insb
or
fsub
fisttps
mov
cld
mov
mov
ret
cwtl
adc
cmpsl
arpl
jl
add
cmp
dec
and
mov
or
xchg
in
xchg
xchg
jp
mov
inc
mov
pushf
scas
gs
mov
loop
xchg
mov
dec
aaa
xor
pop
pcmpgtd
icebp
jg
add
lret
fwait
cmpsb
sbb
clc
pop
into
cs
xchg
push
enter
push
icebp
cmp
int
loopne
or
lahf
lds
js
jns
push
out
jmp
out
mov
ljmp
stos
sub
pop
cmp
je
hlt
add
cltd
xor
repz
pop
out
sub
and
jmpw
adc
loope
imul
jl
lea
roll
out
inc
scas
and
inc
stos
and
and
pop
push
mov
xchg
lcall
je
lcall
xor
das
ss
test
insl
cmpsb
xor
adc
lock
add
push
ret
bound
push
xchg
jbe
pop
sbb
movb
mov
insb
sub
insl
inc
and
mov
pop
lret
and
lahf
lock
or
sbb
jne
icebp
cmpsb
sub
in
mov
cmp
mov
xor
ja
cmp
push
addl
jecxz
push
lcall
in
adc
push
nop
xchg
popf
inc
xor
outsb
test
adc
out
jecxz
in
and
imul
push
movl
pop
sub
ja
or
jae
imul
mov
inc
hlt
es
in
dec
gs
cmp
pop
int3
ret
adc
je
jge
fidivrl
jecxz
out
lds
xchg
shrl
js
jns
add
imul
idiv
ds
sbb
fildll
push
jno
lret
sbb
sub
and
cmpsb
adc
out
mov
imul
int
pop
push
cld
dec
repz
stos
mov
ljmp
jge
fistpll
ret
aam
into
ljmp
inc
aad
cmp
pop
lods
cmp
or
xchg
jp
inc
mov
cmp
xchg
xor
fdecstp
filds
xor
iret
mov
jg
imul
sub
inc
iret
stos
xor
movsb
fimull
flds
push
or
stc
cli
xor
lret
repnz
xchg
sbb
xor
ret
outsl
sub
in
xor
out
lea
push
pop
shrl
je
or
push
sbb
ljmp
mov
push
fisttps
dec
jno
scas
mov
inc
adc
les
jmp
in
xchg
add
xor
push
jecxz
lock
test
sub
cltd
test
sub
mov
repz
incl
xchg
xchg
dec
jp
es
repnz
cmc
stos
push
in
push
fcompl
jbe
sub
pop
ljmp
faddl
xor
cmp
test
nop
je
adc
xorl
ds
cs
cltd
xchg
fisubrl
cmpsb
dec
imul
and
notl
mov
sbb
cli
xchg
aas
lea
inc
popa
pop
mov
fcoms
rcr
mov
icebp
in
adc
roll
mov
out
mov
repz
mov
scas
test
flds
sbb
push
mov
xchg
lods
loop
sub
pushf
mov
int3
add
inc
inc
add
cmp
xor
fwait
pop
xor
mov
add
xor
push
jle
add
shr
jle
and
jnp
or
jle
xchg
xchg
mov
mov
mov
or
pushf
mov
cmpsl
rolb
ror
sbb
pop
and
cmova
pop
out
sti
mov
mov
adc
mov
push
mul
push
lret
frstor
scas
fld
insb
sub
aad
mov
shlb
testl
add
and
call
cmp
add
ficoms
arpl
pop
outsl
jmp
loop
jl
in
gs
or
dec
mov
out
xchg
pop
scas
xor
jg
inc
jp
cmp
jge
xchg
or
icebp
sahf
cmp
mov
outsb
or
cld
in
xlat
lock
enter
jb
xchg
notb
pop
adc
in
roll
mov
jno
push
or
mov
jecxz
sub
arpl
pop
cmp
mov
sub
mov
inc
test
loopne
jle
movsl
add
xor
or
cmp
shll
sub
aaa
shl
mov
cli
jne
add
cmp
jecxz
adc
pop
test
aas
aad
xchg
adc
aam
sti
jo
andl
cmp
in
and
cmp
pop
inc
sarl
test
int
add
or
popa
adc
mov
lock
mov
out
mov
cltd
ja
mov
sbb
test
ret
push
gs
int3
jp
push
adc
cmpsl
inc
arpl
popa
into
xor
or
dec
rclb
cmp
aad
lret
cmp
adc
repnz
cltd
xchg
sti
fiaddl
roll
orl
shlb
imul
and
stos
sbb
popa
cmc
ds
sbb
in
shlb
mov
outsl
mov
xchg
repz
mov
ss
ret
es
and
shl
sbb
and
shl
int
and
xchg
ds
lret
in
aaa
shrb
movsl
mov
mov
cmp
push
sub
pushf
je
cmp
cltd
sub
test
ljmp
into
repz
pop
pop
fcoml
aam
andl
jg
sbb
mov
mov
jle
lods
loop
xor
lea
mov
cmp
xchg
addr16
pop
aaa
and
jmp
jo
push
roll
or
pop
leave
add
push
and
add
mov
dec
cmp
xor
jno
xor
jmp
nop
add
sub
mov
icebp
addr16
and
push
sub
pop
cmp
mov
sbb
mov
mov
divb
mov
xor
shlb
push
mov
leave
push
int
xor
inc
pop
mov
add
test
jns
fistl
test
nop
mov
aaa
pop
jp
flds
fmuls
lcall
loop
add
push
jo
jbe
and
push
inc
inc
mov
insb
imul
inc
fadd
sbb
in
push
ds
and
add
inc
xchg
xor
movsl
add
xor
inc
xchg
js
xchg
dec
test
mov
pusha
subb
push
add
xchg
or
addr16
dec
arpl
dec
push
pushf
sbb
lret
cli
mov
filds
jbe
jns
ja
divl
adcl
lods
mov
in
call
pop
push
mov
neg
int
out
ds
lock
cmp
cmp
pop
in
iret
int
mov
mov
out
push
lods
outsb
jg
or
jecxz
jp
fdivrs
xchg
fwait
aas
push
das
outsb
add
cli
int
leave
mov
test
sbb
pop
lods
popa
aam
mov
data16
sub
dec
aam
fsubs
push
in
cmp
scas
sti
lret
pop
mov
into
pop
std
pop
int
xchg
mov
es
movsb
in
loope
js
inc
mov
xor
jo
push
mov
daa
or
push
repz
jl
xor
dec
dec
hlt
fwait
shlb
mov
mov
fbstp
movsb
mov
adc
es
aad
sbb
ds
xlat
jnp
clc
js
mov
push
adc
loop
lcall
mov
cmp
pop
adc
mov
stos
ret
imul
out
in
je
push
nop
daa
imul
mov
or
loope
and
mov
out
inc
data16
lds
loop
cltd
and
pop
fucomp
out
and
xchg
cmpsb
aad
les
ret
sub
xor
rclb
add
mov
dec
mov
add
loopne
scas
xor
inc
add
fwait
push
add
xor
inc
mov
mov
mov
scas
xchg
movsb
pop
mov
mov
pop
push
hlt
push
xchg
xor
push
xchg
mov
add
out
xchg
push
inc
push
xchg
mov
add
movsl
fadd
repz
jbe
scas
arpl
lods
les
xchg
mov
imull
sbb
fnstsw
jno
dec
insl
pushf
fcompl
pop
pop
and
bnd
call
inc
inc
movsb
push
sahf
push
fmulp
stos
pop
add
filds
adc
repz
sub
int3
push
mov
add
sub
pushf
lret
add
stos
cmp
les
adcl
fs
xchg
bnd
inc
jmp
inc
cmpsl
test
sbb
sbb
popa
aad
jnp
incb
mov
call
outsb
into
in
push
out
fisubrl
inc
int
mov
mov
dec
mov
pushf
mov
shrl
mov
arpl
out
test
repnz
dec
jb
inc
xorl
jmp
idivb
out
sbb
test
js
hlt
push
int
jne
iret
cmp
jno
push
cmc
sti
aas
push
incb
gs
lcall
cld
or
mov
test
ds
pop
test
cli
push
jns
aad
add
frstor
imul
lahf
dec
jae
inc
cmp
in
dec
push
dec
enter
ja
push
add
xchg
sbb
inc
push
jae,pn
jnp
or
hlt
xchg
divb
jmp
xchg
and
mov
and
push
xchg
js
movsb
pusha
cmp
pop
mov
ss
pop
lret
xchg
std
adc
lcall
ja
pop
or
cmp
pop
or
adc
imul
into
out
mov
push
test
inc
je
and
in
loope
or
mov
sub
out
divl
jg
jo
pop
les
mov
add
lret
xlat
divl
loop
cmp
xor
cld
lcall
xor
mov
xchg
loope
inc
je
int3
cmp
mov
xchg
fs
push
sub
xchg
push
faddl
push
push
mov
in
sbbl
xchg
loope
mov
popf
or
add
mov
and
xchg
cld
jp
or
sub
fldenv
pop
lret
adc
pop
xorb
lcall
mov
xchg
sbbl
out
test
mov
or
nop
jno
jb
add
or
dec
push
jge
dec
movsl
enter
cmc
dec
xchg
inc
xor
dec
int
inc
mull
in
inc
sub
dec
lret
cmp
mov
ficoms
and
or
sti
pop
xor
out
jmp
dec
sub
jnp
add
repnz
and
xlat
lea
je
insl
mov
lcall
jg
xor
mov
pop
add
jno
mov
ret
jns
mov
movsb
xchg
int
xlat
insb
inc
adc
js
adc
call
mov
aad
pushf
sbbl
insl
jne
mul
xchg
lret
and
icebp
add
incb
sub
sbb
stos
push
push
jnp
arpl
jbe
mov
adc
and
clc
sarl
inc
push
data16
cmp
pop
aam
cmp
outsb
or
sbb
rol
outsl
lds
in
pop
pop
cmc
nop
mov
cwtl
push
lcall
mov
in
loope
lret
add
mov
xlat
rorl
in
test
mov
jp
in
insb
lods
dec
cmpsb
xchg
imul
mov
push
cmp
in
inc
add
mov
pop
lock
rclb
cli
inc
sbb
or
mov
cmp
jae
cmp
lods
and
cmp
lret
jbe
icebp
mov
add
cmp
cmc
cmc
inc
sub
pop
in
lods
adc
adc
xchg
sbb
mov
cltd
mov
fs
pop
mov
cli
rorl
or
pop
loope
mov
xor
cltd
inc
fdivrs
dec
outsl
dec
mov
adc
movsb
mov
int
call
sti
cmpsb
mov
pop
sbb
mov
and
addr16
push
mov
mov
push
mov
in
test
rcrl
xchg
je
je
dec
loop
jae
jnp
lret
daa
sbb
fs
fisttpl
xchg
sbb
xchg
ret
pop
aaa
iret
fnstsw
dec
daa
xchg
pop
add
std
repz
jmp
lock
mov
insl
stos
aam
es
out
xchg
xchg
mov
test
clc
or
xor
xchg
mov
push
ljmp
dec
out
xchg
pop
adc
mov
scas
ss
aam
imul
test
add
imul
pop
xchg
mov
dec
test
mov
les
and
sbb
push
pop
add
sub
and
test
xchg
sub
incl
xchg
add
mov
mov
sub
ffreep
jnp
mov
test
das
pop
sbb
lea
adc
repnz
into
mov
imul
jbe
dec
aam
out
movsl
pushf
mov
sahf
push
fimuls
clc
fnstcw
jb
dec
iret
fmuls
ficoms
inc
jnp
jle
push
xor
xor
dec
inc
inc
push
cmp
inc
sbb
in
call
pop
lock
adc
ds
xchg
pop
sbb
add
arpl
popf
nop
push
mov
cmp
xorl
test
dec
push
loopne
iret
sub
add
and
fwait
xchg
sbb
push
into
out
jns
lret
pusha
sti
jbe
andl
and
ds
imul
pop
pop
sbb
adc
mov
es
cmp
sbb
pop
inc
cs
cmpsl
subb
inc
push
cmp
insl
jns,pn
shll
into
repz
jae
ficompl
adc
fbld
push
and
fcmovnb
out
test
orb
mov
or
sti
inc
fcompl
and
nop
mov
mov
arpl
jmp
loope
stos
pop
pop
out
test
push
jg
inc
notb
push
adc
sbb
int3
sbb
imul
mov
shll
movsb
stos
lcall
aas
fisubrs
psubq
cmp
sti
pop
stos
in
push
inc
cmp
sub
cmpsb
mov
dec
out
cltd
sar
sbb
in
xchg
xchg
cli
adc
fildl
daa
sub
test
and
adc
ds
fs
cmp
sub
incl
sub
mov
clc
lock
stos
xchg
call
repnz
mov
cmp
in
or
fcompl
and
push
adc
aas
mov
add
push
xor
lcall
jmp
mov
roll
imul
shll
notl
sti
jb
xchg
mov
cmp
loope
push
sub
mov
ljmp
pop
les
mov
xchg
es
ret
icebp
push
push
in
mov
adc
rorl
sarb
data16
dec
addb
arpl
andl
fwait
pop
mov
lcall
jns
xor
pusha
addr16
mov
into
lods
icebp
hlt
and
enter
not
sub
xchg
sbb
popf
inc
outsl
mov
dec
and
mov
dec
dec
push
mov
xor
roll
stos
das
push
repz
sub
rorb
mov
out
stos
aam
cltd
lock
lahf
outsb
mov
jle
jnp
mov
out
cmp
pop
popa
sbb
lods
ljmp
mov
inc
jbe
or
cmp
inc
nop
xor
adc
push
aad
mov
das
mov
adc
stos
mov
out
pop
movsb
and
outsl
sti
or
mov
dec
mov
adc
add
jecxz
icebp
daa
hlt
test
mulb
mov
push
dec
adc
es
popa
js
shl
xor
and
es
hlt
lcall
inc
add
xor
mov
les
push
out
mov
cmp
lea
mov
xor
jmp
jecxz
fidivs
mov
mov
adc
subl
iret
sbb
mov
push
jb
outsb
push
inc
ljmp
insl
jl
lock
mov
lds
sub
inc
or
or
loop
sbb
fadds
fwait
mov
inc
imul
stos
lea
sbb
pop
cmpl
xor
repnz
int
mov
sub
mov
lods
and
test
or
in
shll
jp
adc
jecxz
lret
pop
inc
stos
clc
loop
sbb
and
and
cltd
ret
jno
mov
lea
xchg
add
dec
cli
sub
xor
inc
add
or
outsb
std
fxch
fstpl
add
xor
cwtl
mov
mov
call
cmp
cmp
mov
popa
dec
icebp
fcompl
add
xor
push
movsb
imul
or
adc
mov
xlat
dec
sub
cltd
into
cltd
aam
sbb
adc
or
test
jae
cmp
shrl
int3
enter
movsb
mov
pusha
push
jnp
hlt
adc
mov
ret
mov
mov
and
lods
mov
sbb
dec
les
jle
fldenv
stc
dec
lcall
outsb
adc
rep
repz
jne
std
mov
and
jge
jae
mov
movntq
ficoml
clc
xchg
inc
mov
jl
inc
jge
jns
jle
fsts
xchg
lods
jnp
je
and
jecxz
out
mov
clc
mov
repz
inc
sub
dec
lods
iret
mov
mov
sbb
in
add
push
icebp
fnstenv
lahf
mov
rorl
pop
cld
mov
dec
insl
mov
mov
mov
push
sub
out
call
sbb
aas
pop
inc
push
mov
out
pop
add
add
ret
scas
es
inc
push
cltd
aaa
mov
xchg
jo
lahf
lret
sahf
loope
mov
vxorps
mov
and
jnp
cbtw
jmp
mov
xchg
xor
gs
decb
or
je
push
sar
out
outsb
mov
test
mov
addr16
mov
incb
sbb
test
enter
test
or
int3
rclb
ffreep
sbb
jl
mov
xchg
mov
mov
insb
aas
pop
or
and
shr
sub
xchg
pop
xchg
mov
and
adc
fwait
and
add
shll
loopne
lret
push
aad
inc
push
out
mov
jne
add
inc
lods
and
pop
ljmp
and
and
fdivrl
pop
ficompl
fstps
jp
cmp
outsl
pop
xchg
jmp
gs
addr16
xchg
push
push
and
sub
in
or
mov
inc
aaa
lea
cld
mov
jo
clc
gs
imul
pop
inc
sub
dec
cmc
xchg
dec
jbe
sbbb
sub
pusha
mov
push
xor
xchg
std
push
fwait
mov
and
movsl
test
xor
push
cwtl
test
call
ret
sub
push
push
sub
xchg
aad
sbbl
lcall
mov
int
adc
xor
into
ss
dec
mov
test
pop
rcl
mov
push
xlat
adc
enter
sub
pop
mulb
out
cli
or
or
lock
fildl
mov
sub
lds
pop
sbb
or
neg
inc
or
jnp
push
and
xchg
aam
movsb
std
cmp
imul
adc
outsb
in
jne
das
out
dec
cmpsl
pop
inc
ljmp
insl
js
push
adcl
rcrl
call
pop
jg
xchg
sub
sub
xlat
out
push
in
rcr
and
ljmp
sub
mov
mov
arpl
and
outsl
fs
xchg
mov
stos
loop
loope
push
mov
jg
cmp
xor
mov
lods
inc
mov
stos
fcmovu
fsts
aad
cmpl
dec
sahf
aad
xchg
fsubr
dec
dec
faddl
and
xacquire
mov
adc
in
mov
pop
adc
test
out
xor
mov
mov
iret
fs
inc
ds
enter
in
and
push
mov
xor
ljmp
xchg
mov
dec
jb
jnp
sbb
ss
xor
mov
jmp
or
je
arpl
add
cmc
int
add
mov
sbb
or
pop
sti
xchg
adc
mov
fmuls
scas
fisttps
out
outsb
leave
aam
pop
pop
stos
movsl
mov
vsqrtss
sub
test
movsl
cmp
scas
dec
lret
inc
xchg
adc
xchg
hlt
frstor
addb
cmp
inc
gs
adc
lcall
inc
lret
cmp
and
int
stc
arpl
mov
sahf
hlt
es
or
insl
addr16
adc
les
out
scas
repz
mov
jmp
sti
ds
scas
sbbl
mov
out
iret
popf
inc
xchg
popl
push
sbbb
out
and
fcomp
mov
ffree
rcrl
cmp
or
out
scas
add
sub
dec
cld
aaa
outsb
outsl
sbb
and
and
fiaddl
adc
sub
dec
sub
das
insl
cs
pop
and
xchg
xor
es
out
clc
and
stos
add
shld
push
lea
jne
std
int
lcall
xor
or
push
pop
adc
nop
test
sbb
lret
imul
shrl
cmpsb
and
xor
sub
into
cld
push
inc
xchg
ret
fisubrs
cmp
cli
sbb
pop
in
fs
stos
ja
push
and
mov
mov
xchg
xchg
pusha
les
or
pop
std
sbb
xchg
sbb
mov
nop
daa
push
ss
sub
mov
stc
mov
dec
mov
and
sbb
data16
cmp
and
subl
inc
mov
mov
jne
mov
ss
jl
outsl
fnstcw
pop
dec
cmpsl
mov
cld
adc
sbb
xchg
icebp
jg
fdivrs
rcrb
jl
adc
push
ljmp
aam
cmp
outsb
xchg
sub
add
pop
cmp
dec
cmpsb
and
insl
cmpsb
fimull
push
fadd
clc
imul
movsb
jnp
dec
sbb
mov
xchg
add
pop
in
pop
cmp
mov
insb
pop
call
adc
mov
call
jbe
inc
or
fwait
les
mov
dec
sub
xlat
call
andb
cmc
test
lahf
int3
fmuls
outsl
inc
test
lahf
xchg
loopne
mov
xchg
inc
pop
lods
jl
sbb
cmpsb
addr16
cmpsl
cmp
push
pop
mov
ret
jns
in
dec
lods
lods
in
out
sub
pop
mov
xchg
testb
cmp
into
cmpsl
xor
and
sub
xchg
jns
ret
scas
sbb
lret
add
push
and
mov
bound
sub
jmp
mov
iret
ja
rcl
dec
std
jnp
jb
adc
dec
lock
insl
test
inc
xor
sub
inc
jg
hlt
hlt
adc
iret
sub
scas
jmp
adc
sub
gs
cs
clc
sbb
lea
xchg
dec
xor
sbb
pusha
pop
mulb
test
cmpsb
ficompl
push
sub
arpl
imul
add
add
arpl
add
xor
push
or
ss
aad
loopne
test
and
pop
xchg
pop
adc
popf
scas
jo
ret
push
stc
adcl
nop
add
mov
enter
int3
push
add
testb
fst
dec
pushf
inc
fsubrs
push
nop
cmc
out
mov
out
sbb
out
add
inc
clc
and
push
gs
bound
jecxz
cmpxchg
lcall
mov
fdivr
rcll
dec
mov
nop
sub
mov
ror
sahf
sbb
mov
movups
stc
lods
leave
out
bnd
test
cmpsb
je
mov
inc
inc
jg
sbb
cmp
jbe
mov
mov
mov
xor
mov
mov
xor
outsl
jmp
imul
pop
icebp
mov
xor
test
sbb
cld
mov
test
mov
and
cld
stos
inc
cs
push
fstps
lahf
jmp
jge
stos
mov
push
mov
jl
je
sarl
adc
and
jle
lret
xor
or
pop
into
mov
adc
mov
lods
outsb
aad
adc
push
mov
mov
movsb
and
test
cmp
jg,pt
add
push
lock
add
push
add
int3
imul
pop
leave
add
pop
cmp
cs
movsb
inc
pop
or
mov
or
sub
movsb
adc
fs
movsl
ds
nop
add
xchg
fcoml
pop
lea
lds
mov
adc
add
add
sbb
mov
pop
and
sub
aad
or
inc
jp
pop
jp
dec
inc
movsl
int
orb
lret
fmull
mov
or
pop
rcrl
lcall
insl
xlat
cmp
adc
xchg
xchg
in
imul
shlb
jge
out
pop
call
nop
mov
dec
jg
ja
jl
es
fcmovbe
mov
les
clc
mov
andb
sbb
jp
cmpsl
cmpsb
mov
in
arpl
xchg
mov
cmpsb
jne
stos
js
adc
xchg
sbb
xor
pop
adc
sub
mov
clc
lods
out
mov
dec
movups
xchg
rolb
mov
insl
sub
lcall
mov
inc
push
les
push
xor
xchg
daa
lea
dec
sbb
sub
xchg
mov
mov
lods
ret
nop
pop
dec
inc
andl
bound
xor
mov
pusha
inc
xchg
addl
js
icebp
lea
dec
into
mov
mov
pop
jbe
mov
xor
xchg
add
iret
adc
xor
pop
enter
xlat
jge
cli
xchg
inc
inc
dec
movsl
mov
sahf
dec
cmp
scas
sahf
xchg
adc
clc
cmp
xor
xchg
push
cmpsb
push
outsb
dec
jg,pn
in
cmp
pusha
push
pusha
pop
pop
pop
adc
js
sub
jp
ljmp
or
adc
lods
fldcw
cmp
pop
dec
pop
dec
mov
push
jb
lock
and
adc
roll
jo
cmp
pop
add
and
mov
data16
mov
push
jmp
xor
mov
inc
sbb
shlb
adc
out
stc
mov
pop
xchg
inc
in
pop
pop
insl
mov
mov
sbb
addb
add
sbb
lcall
jecxz
stc
xchg
xchg
enter
pop
push
orl
sub
das
push
in
int3
inc
fisubrl
decb
fs
sub
lea
jl
lret
popa
xlat
mov
jbe
inc
sub
and
les
dec
mov
rcll
jae
jl
adc
pop
cld
adc
insl
imul
add
shlb
sbb
imul
xor
xchg
jns
daa
arpl
lods
aam
pop
xor
scas
xor
aas
pop
mov
pop
jns
add
outsb
dec
out
testb
mov
sahf
cli
fnstsw
aas
dec
adc
aad
mov
mov
or
xchg
imul
fstp
popf
push
adc
cs
xor
test
je
pop
add
push
inc
cmpl
popa
mov
mov
outsl
sub
nop
xchg
popw
roll
mov
xchg
pop
loopne
andl
loop
sbb
sahf
in
ds
fdivs
jge
popf
sbbb
int3
sbb
cwtl
fstpt
imul
push
loop
push
addb
mov
sub
lock
xor
cmpsb
push
stc
xchg
fsubrl
aas
pushf
cli
cld
jne
fwait
mov
lds
dec
mov
cmp
inc
pop
add
mov
test
dec
or
jmp
jmp
xchg
sbb
lcall
sub
add
repz
loope
sbb
shl
std
pop
mov
cli
jecxz
dec
sbb
inc
and
push
push
fadds
clc
push
adc
push
clc
mov
stc
loope
mov
sti
add
loopne
inc
and
imul
je
negl
cmp
or
loope
mov
cwtl
in
mov
add
add
xchg
inc
test
cltd
aam
pusha
and
inc
add
dec
das
out
lods
call
pop
mull
lods
sbbl
fisubrl
arpl
jmp
cltd
mov
jae
mov
adc
lret
cmp
rclb
enter
mov
or
xor
push
jmp
inc
lahf
sbb
mov
mov
aaa
iret
ljmp
cmp
movsb
jmp
jle
push
cmpsl
inc
xor
add
mov
jl
mov
sti
fmull
sbb
mov
in
jecxz
push
jp
adc
xor
outsl
test
aad
push
jnp
sbb
into
in
stos
sbb
movq
mov
loope
sahf
je
and
add
push
mov
sub
aaa
stos
mov
xor
das
outsb
ss
jg
iret
and
add
jle
add
into
mov
xchg
aam
mov
xor
outsl
sub
test
push
mov
pop
inc
jmp
stc
rcll
mov
ds
ret
push
add
xchg
jae
js
push
mov
out
rcr
xor
pushl
adc
rorl
lods
inc
dec
xor
cmpsb
mov
lods
or
xor
jge
or
jno
cld
cmp
or
enter
mov
sbb
fs
xchg
sbb
fldt
test
hlt
ljmp
repz
jns
addr16
cmpsb
mov
fs
testb
sub
cli
in
sub
cmp
js
push
push
roll
addr16
cmp
jae
and
je
mov
or
jns
js
pop
inc
lds
imul
stos
and
sbb
inc
mov
lock
call
andb
pop
shll
mov
mov
add
lret
inc
popf
rolb
sahf
pop
cmp
pop
xchg
fnstenv
sbb
mov
lock
lock
aas
inc
cmp
add
pop
mov
push
cmp
mov
pushf
ret
inc
xchg
pop
jp
adc
mov
xor
sub
popa
jne
dec
sti
insb
inc
pop
roll
mov
mov
fsubs
inc
push
pop
push
ret
cmp
fsubr
sti
add
in
mov
jl
or
shr
cmp
ret
popf
addr16
daa
cmpsb
lods
adc
xchg
inc
inc
cmp
jmp
sub
push
adc
xlat
pop
int3
mov
nop
or
push
mov
jbe
dec
pop
lcall
outsb
sub
sbb
sbb
sub
jbe
xchg
or
aad
lea
sub
xor
loope
fs
sahf
dec
stos
mov
lods
push
jge
shlb
mov
lret
call
aad
cmp
repz
test
lcall
xor
add
sarb
loop
and
push
fistpll
fcmovnbe
int
jmp
lods
mov
or
je
sbb
push
sub
push
push
inc
or
pop
insb
pop
jno
adc
hlt
mov
xchg
sub
cmp
leave
jle
loopne
push
inc
inc
push
mov
sub
xchg
pop
aad
add
add
ret
inc
fwait
pop
inc
inc
sub
cltd
sub
adc
jns
outsb
xor
jb
cmp
in
inc
push
mov
mov
icebp
out
rcll
nop
dec
sti
sbb
je
or
jecxz
call
or
jl
mov
out
xor
scas
pop
stos
mov
jmp
enter
in
lds
xchg
pushf
adc
out
hlt
push
dec
mov
lea
mov
push
adc
pushf
jmp
or
incb
imul
inc
ja
xchg
xchg
in
cmpsl
adc
xchg
jnp
or
dec
loopne
xchg
adc
dec
jne
pop
dec
add
aam
stos
jle
leave
or
loop
and
aam
nop
add
push
push
pop
mov
add
lods
loopne
xchg
movsb
and
dec
mov
adc
fs
pop
add
sbb
repz
sahf
sbb
inc
push
mov
xlat
mov
lods
add
gs
stos
daa
fldt
iret
stos
and
pushf
mov
jecxz
shrb
movsl
dec
pop
xchg
mov
or
mov
push
adc
popf
pop
movsl
pop
mov
daa
inc
int
mov
ffree
mov
loope
mov
add
pop
roll
inc
push
inc
add
nop
jg
push
mov
xchg
add
xor
les
xchg
xor
xchg
mov
sbb
and
sahf
filds
xor
jne
sbb
pop
mov
dec
cmpl
imul
sub
dec
ja
inc
faddl
jno
mov
and
mov
xchg
sbb
testb
push
pop
and
mov
aad
pushl
mov
fisttps
lret
out
xorl
popf
scas
shlb
ret
gs
mov
inc
sbb
into
in
sub
stos
fninit
stc
or
add
cmp
xlat
cmc
shll
sub
mov
sbb
lods
push
push
jp
stos
xchg
mov
int3
andb
dec
ja
test
jb
push
shll
out
mov
cld
xor
dec
cs
ret
add
xchg
sbb
mov
or
cmpsl
mov
mov
outsl
js
cmp
insl
sbb
dec
repz
fildl
ret
cmp
rorl
mov
test
add
pop
pop
sub
ret
je
lds
jae
imulb
ja,pt
pop
cld
jne
jl
cmpsb
nop
sub
sti
andl
cs
pop
jle
in
je
mov
mov
int
insb
lret
ret
dec
jp
sub
outsl
out
pop
cli
in
push
fs
popa
xchg
jae
mov
out
adc
es
mov
cmp
inc
dec
pop
mov
ds
cmpb
jl
clc
push
cmpsw
push
mov
scas
popa
orb
in
repz
fwait
mov
or
pop
ds
dec
testl
sub
push
loopne
fsts
rcr
inc
rcr
lock
cmc
out
pop
cltd
das
out
jae
push
jnp
jo
lahf
ret
xchg
fsts
leave
syscall
outsb
mov
pop
outsl
add
call
test
adc
bound
mov
lds
mov
cmp
cltd
pop
enter
xorb
scas
add
inc
dec
pop
jno
xchg
jae
mov
sti
popa
add
fimull
cmpsl
mov
gs
insl
in
xchg
insb
adc
mov
stos
jmp
jae
decl
pushf
sarl
or
jb
adc
sub
and
test
pop
push
sub
pushf
ljmp
jne
sub
insl
dec
adc
std
adc
mov
icebp
flds
mov
xor
pop
shlb
push
out
insl
jnp
stos
xor
sarl
cmp
dec
scas
call
mov
xchg
xchg
inc
sbb
clc
out
sbbb
mov
pushf
rclb
daa
jecxz
inc
jns
jne
iret
mov
cmp
sbbl
adc
adc
test
adc
sbb
addr16
add
or
mov
jns
shll
cwtl
pop
dec
mov
mov
call
pop
or
push
jg
mov
mov
call
jmp
aaa
sub
mov
pop
sub
test
mov
popf
jmp
out
push
loop
cld
shll
push
jbe
mov
add
les
jb
or
divb
loopne
push
jg
cmc
enter
arpl
jo
or
cld
or
int
cmp
popa
aas
inc
repz
ret
jge
and
mov
xchg
lods
out
cli
xchg
sbb
movsl
rcll
sti
push
xchg
ret
and
mov
ja
sub
jg
lods
pusha
push
push
loop
outsl
call
mov
fcmovnu
dec
aaa
jb
gs
or
out
cmp
and
fs
fwait
pop
jnp
jo
push
test
mov
shl
addl
enter
in
adc
fbstp
movsb
and
mov
add
xor
pop
fs
out
movl
inc
add
xchg
fisttpl
lock
cmc
pop
out
test
into
push
cmpsl
fmuls
lods
xor
mov
lcall
add
adc
and
imul
leave
push
lods
cmp
and
fisttpl
mov
sub
and
fidivrl
ror
push
mov
mov
data16
fsts
pop
adc
and
mov
aam
cwtl
xchg
nop
lret
out
adc
xor
in
inc
push
in
aas
jnp
cmpsl
mov
arpl
lret
xor
mov
leave
aad
jmp
add
add
sbb
jb
push
mov
jb
xchg
das
dec
je
pop
pop
push
fcomps
ret
mov
sub
ljmp
mov
loop
movsl
or
mov
push
add
sbb
jmp
dec
jp
lcall
sub
pushf
push
jns
inc
hlt
enter
pop
or
push
out
jg
push
rclb
pop
ss
nop
scas
push
das
jnp
or
testb
test
rcrb
xchg
daa
dec
gs
mov
sbb
xor
cmpsl
push
lds
dec
dec
cli
sbb
fidivl
arpl
and
out
mov
aaa
frstor
add
xchg
pushf
enter
mov
mov
rol
out
shll
pop
pop
xchg
andb
xchg
pushl
insl
inc
dec
dec
test
jecxz
dec
mov
andb
jnp
je
arpl
jp
sbbl
dec
repz
pop
andl
clc
enter
cmc
xor
out
addr16
hlt
sbb
mov
ret
imul
lods
sub
and
clc
lret
dec
add
out
scas
xchg
shl
inc
xchg
adc
sub
cmp
cmp
fidivs
or
push
lods
fisubs
lret
dec
adcl
cmp
adc
jo
std
cmc
hlt
inc
jl
iret
int3
jbe
inc
mov
rcll
jecxz
in
pop
les
scas
shll
xchg
in
mov
and
inc
mov
add
cmc
lcall
jle
rolb
and
dec
xor
inc
dec
cmp
fcmovnu
dec
mov
fadds
imul
xchg
or
sbb
adc
add
stos
sti
sub
mov
mov
jmp
sub
inc
add
lret
jmp
xor
jl
sahf
push
inc
xor
mov
ja
out
stos
fisttpl
pop
jns
inc
push
clc
aad
adc
aam
cli
xchg
dec
loop
pushf
lcall
pop
mov
or
xchg
or
cmp
pop
in
out
jno
repnz
fsub
dec
inc
mov
and
lahf
fscale
mov
in
popa
or
mov
mov
and
mov
dec
imul
mov
and
xchg
add
rolb
into
mov
stos
hlt
ret
out
jbe
ret
roll
adc
dec
aaa
iret
hlt
push
icebp
ja
jl
in
inc
stos
shlb
jl
bound
sub
xlat
loope
cmpb
mov
pushf
add
mov
mov
inc
idivb
dec
stos
mov
xchg
mov
mov
sti
mov
hlt
lock
pop
fisubrs
lock
aas
pop
mov
xchg
into
mov
inc
mov
dec
shll
mov
sub
loop
sbb
inc
push
adc
inc
inc
inc
cmp
push
dec
or
xor
jmp
fs
xchg
das
cmp
adc
jle
and
sbb
mov
cs
jmp
das
lahf
js
rcrb
or
sbb
fdivl
and
cwtl
jns
dec
pop
lret
sub
xchg
jo
movsb
movsb
inc
cmpsl
int
nop
aaa
mov
mov
mov
add
ja
xor
ljmp
cltd
push
xchg
fdivrl
xchg
mov
fwait
push
mov
outsl
jnp
hlt
lret
loop
xor
push
enter
mov
xchg
fsubrs
mov
dec
mov
js
cmpsb
push
or
cmp
out
leave
xor
xor
or
mov
pop
out
mov
ret
mov
jae
lcall
add
mov
into
mov
sub
dec
movsb
subl
lods
adc
stos
adc
push
sahf
scas
out
xor
scas
out
pop
or
inc
push
test
add
inc
pop
bound
or
mov
adc
gs
mov
ret
add
xor
pop
adc
mov
out
imul
icebp
push
jl
jae
and
sbb
test
xchg
add
iret
mov
jns
pop
and
stc
stc
stos
sub
push
mov
mov
in
test
push
aam
lods
push
mov
fsubr
pop
push
add
insl
mov
mov
sbb
jne
mov
lds
sbb
enter
clc
dec
stc
cmp
mov
jg
call
mov
xor
dec
lods
add
pop
mov
setae
out
aaa
push
mov
sub
mov
and
dec
jecxz
sbb
pavgw
xor
les
fwait
mov
jae
mov
sub
iret
add
dec
jno
and
dec
dec
mov
and
repnz
inc
push
push
or
movsb
sub
xor
test
dec
lea
mov
jns
jae
adc
xor
fstpt
ss
out
iret
rolb
dec
hlt
and
add
jae
out
push
mov
test
jl
jmp
testb
cltd
nop
dec
cmp
mov
cmp
xor
sbb
dec
adc
jae
enter
push
sbb
inc
xchg
movzwl
aaa
adc
je
push
sub
pushl
dec
out
dec
loope
sti
push
aaa
dec
push
sahf
imul
xor
jno
lea
jg
sti
aas
push
add
inc
test
loopne
ss
pop
stos
add
xor
cli
mov
into
push
loopne
and
mov
pop
add
or
sub
dec
xor
and
cmpsb
cwtl
xor
incl
rcrl
cmc
push
test
loope
push
pop
dec
pop
xchg
inc
movsl
fsubl
cmp
std
push
cld
mov
xchg
nop
cmp
stos
push
popa
mov
jb
loop
push
xchg
out
testl
fdivrl
jmp
sbb
cmpb
ds
mov
cs
cwtl
insl
mov
xchg
sub
mov
jo
ret
flds
pop
xor
clc
cmp
ret
cmp
gs
cmp
dec
mov
push
arpl
pop
vshufpd
mov
jnp
inc
lcall
pop
inc
and
or
daa
outsb
cmp
push
pop
movl
pop
sub
bound
or
lock
std
push
mov
xor
and
int3
xor
loope
adc
adc
fiadds
pop
inc
loopne
inc
rsm
jmp
in
jl
iret
movsl
jne
pusha
out
or
jmp
sbb
jbe
inc
stc
xor
in
popf
pop
int
sub
sbb
xchg
into
xor
pop
mov
mov
jo
cld
dec
ret
or
dec
jge
sbb
int
popf
imul
jns
ret
das
jns
inc
xchg
iret
leave
movb
aas
les
or
nop
pop
dec
scas
js
mov
call
pop
cmc
pop
repnz
adc
pop
mov
addr16
outsl
subb
mov
es
leave
loope
ss
je
xchg
push
loopne
dec
mov
inc
jge
repnz
and
subl
pop
pop
inc
mov
pop
adc
push
aaa
outsl
repnz
xor
sbb
push
jo
movsl
ret
aad
sahf
xor
sbb
jp
or
cmpb
loopne
imull
test
sbb
push
bound
push
stc
frstor
or
decl
inc
fsubs
xor
fdivp
adc
pop
xchg
cmpsb
xlat
inc
out
movsb
sarl
or
xchg
out
xor
push
sbb
inc
subl
dec
push
mov
mov
jg
and
jno
testb
push
push
mov
sahf
ret
insl
ret
and
pop
loope
insl
dec
cltd
dec
fnclex
lods
jns
ja
je
ret
xor
mov
cmp
add
push
mov
loop
mov
jae
clc
outsl
sub
jle
mov
ret
pop
push
xlat
xlat
lahf
jecxz
xchg
icebp
mov
cwtl
mov
and
push
cmpxchg8b
icebp
adc
sti
dec
das
cs
add
and
jp
mov
jle
movsb
jbe
mov
cmp
push
rorb
push
adc
mov
jge
lock
int
or
adc
mov
jmp
cmp
inc
sub
jnp
enter
and
pop
adc
jmp
xchg
pusha
sbb
sahf
dec
cmp
test
mov
cs
movsl
mov
mov
loopne
dec
movsb
inc
pop
sub
mull
lods
and
mov
xor
movsb
xchg
xchg
push
push
push
inc
push
ss
fdivr
push
imul
lds
xchg
pop
lds
lods
jl
rorb
jp
int
jo
test
insl
mov
arpl
dec
filds
and
sti
imul
cwtl
inc
dec
cmp
jbe
adc
xor
mov
mov
sub
loop
sbb
dec
lea
test
fiadds
notl
test
out
adc
cmp
jp
pusha
cmp
xor
inc
inc
lea
xor
pushl
int3
jmp
add
and
popf
mov
adcb
push
sub
xor
cmp
dec
cmp
out
xchg
jno
xchg
adc
fwait
sbb
mov
aaa
xchg
out
sbb
xlat
adc
add
addb
test
push
add
fistps
ds
loope
scas
mov
aas
inc
gs
adc
mov
cmpsl
int
xlat
xchg
pop
loope
outsl
and
movsl
cwtl
cmp
and
fcoml
sbb
or
ja
icebp
fcomi
lret
mov
faddl
ds
insb
push
adc
jns
movsl
mov
ret
jmp
loop
rcrb
jo
jns
sahf
icebp
mov
enter
ret
sbb
lcall
fwait
orl
ds
jbe
cmp
in
jb
mov
jae
xor
jp
es
or
aad
jge
mov
jl
fistpll
je
pusha
aam
mov
mov
jne
push
clc
mov
loope
movsl
sbb
sbb
fmuls
jp
incb
xor
jecxz
imul
outsb
js
xchg
roll
sti
and
lds
sub
int
fdivl
mov
xchg
push
fsubrl
rcl
cmp
ljmp
sti
inc
rorb
and
enter
add
mov
and
imul
fstpl
mov
popa
xor
aam
push
je
sbb
cli
sti
mov
lcall
test
mov
or
pop
xchg
insl
inc
xchg
pop
in
dec
scas
dec
lret
aaa
jle
add
pusha
movsl
mov
xor
jl
cmp
fistl
cmp
and
xchg
addl
rol
cmc
mov
sbb
sub
faddl
cmp
push
dec
andb
mov
sbb
loope
aam
push
jge
push
sub
sarb
call
add
inc
cmpsl
movsl
cmp
sub
mov
rcll
inc
ljmp
add
movsb
int
iret
push
gs
push
gs
inc
or
mov
or
js
lret
mov
push
adcl
movsl
push
fisttps
fiadds
or
sub
shl
cli
sub
push
mov
or
cltd
push
les
mov
ds
xor
or
push
jo
inc
cmpsl
adc
jge
add
add
daa
pop
popa
aaa
pop
sbb
fldenv
push
and
adc
out
test
testl
mov
jnp
test
adc
sbb
test
xchg
cmp
mov
ret
gs
sub
cld
or
enter
pop
out
add
sarl
insb
iret
les
lods
in
pop
punpckldq
mov
movsl
div
dec
cs
mov
xor
jecxz
push
fwait
dec
add
icebp
adc
mov
std
mov
lahf
sti
and
ror
mov
rclb
clc
test
lds
add
xor
out
inc
enter
ret
jb
aas
call
stc
dec
ss
or
jle
dec
gs
loop
pusha
jecxz
stos
es
xor
pop
lret
mov
pop
xchg
mov
cli
mov
sbb
push
es
cwtl
pop
nop
sbb
cmpsl
inc
add
push
xor
sbb
jge
inc
cmp
sub
ljmp
insl
push
sbb
int
lret
pushf
lahf
mov
ja
insb
xor
inc
ja
mov
add
add
je
outsb
ret
lock
movsl
popa
out
xor
shrb
jb
in
inc
dec
out
add
std
inc
push
cwtl
mov
adc
sub
xor
sarl
frstor
movsb
pshufw
dec
lret
shll
lahf
jp
out
mov
incb
out
lds
cwtl
mov
mov
lahf
cltd
push
or
mov
xor
enter
fisubs
push
mov
sub
sub
lock
jbe
aas
pop
push
leave
dec
sub
and
test
sti
xchg
pop
mov
sahf
xchg
push
test
dec
popl
ljmp
jae
jo
addr16
cmp
cmp
call
shll
add
dec
and
inc
pop
ret
out
es
outsb
add
xor
daa
cmp
ret
inc
je
lds
in
loopne
inc
jmp
cs
xchg
sbb
push
lock
xor
stos
scas
jle
pop
xor
inc
pop
inc
cmp
in
stos
mov
sarb
or
and
out
mov
insl
xor
dec
inc
loopne
test
pushf
out
in
popa
jmp
sub
int
pop
and
aaa
add
xchg
jne
shlb
movsb
test
inc
adc
xlat
ds
nop
loopne
sub
outsl
lea
inc
mov
scas
push
xor
cmove
adc
les
sbb
jp
jmp
roll
outsb
in
xchg
imul
mov
inc
sbb
push
lcall
ret
sbb
sub
xchg
sub
xor
mov
sub
cmp
sbbl
and
xchg
sahf
icebp
mov
fs
cmp
shll
cmp
cltd
in
inc
jle
pushf
dec
mov
ss
cmpb
popf
fildll
pop
sarl
mov
imul
test
ret
rclb
cmp
stos
sbb
js
lock
lds
insb
lret
imul
mov
in
insl
cmpsl
clc
std
jbe
xor
fisubrl
add
push
cmp
inc
cmp
cmp
jns
ss
xchg
shl
mov
jle
fnop
push
xor
inc
cltd
movsl
sbb
out
pushf
xor
bound
fistpl
add
jge
test
jae
cmp
je
push
jle
push
dec
mov
imul
fisubrl
dec
sub
stc
xor
pop
dec
mov
and
sahf
lods
pop
jbe
fiaddl
movsb
mov
push
out
jge
lods
xor
push
lods
adc
repnz
fwait
shrl
shll
mov
mov
cmpsb
xchg
sbb
out
js
pop
ljmp
adc
arpl
dec
scas
test
mov
push
fsub
inc
cmp
push
pop
xlat
mov
add
jle
stos
lcall
pop
call
inc
fcmovb
nop
movsb
sbb
sub
insl
incb
ds
push
scas
add
cmp
sbb
pop
imul
faddl
or
lahf
jge
cmp
stos
adc
call
cmp
and
fstpt
jp
xchg
jl
mov
fcom
push
adc
or
lods
or
out
pop
mov
dec
int3
mov
dec
je
iret
xor
and
push
pusha
dec
int3
push
cmp
mov
jns
lret
push
lock
shll
sub
icebp
and
leave
ret
ret
mov
out
fisttpll
push
stos
cli
inc
leave
test
popa
dec
inc
pop
sbb
jae
inc
sub
aas
sarb
pop
lods
xor
xorl
sbb
add
cmpb
mov
sahf
enter
push
cltd
cs
jg
test
mov
aad
pop
cmp
loope
stos
push
in
add
clc
mov
cltd
mov
xchg
jne
fwait
jo
push
mov
lock
or
mov
arpl
fistpl
dec
pop
mov
jmp
pushf
in
test
loope
orb
addr16
hlt
fcoms
shr
stc
jl
push
add
adc
xchg
push
pop
andl
or
inc
add
ds
aad
rorl
fcoms
inc
stc
adc
fidivrs
aad
inc
or
popf
and
sub
call
push
test
shr
jno
mov
das
imul
arpl
sbb
pop
pop
test
jno
cmp
inc
in
sbb
movsb
lods
stc
addr16
test
leave
lods
sub
out
aad
jnp
outsl
neg
aam
scas
inc
popf
mov
dec
fldl2t
jb
push
loope
outsw
cmp
xchg
xor
xlat
sub
or
and
pop
outsl
jne
loope
sbb
aaa
or
and
xor
cmp
add
stc
cwtl
mov
push
and
sti
or
push
mov
in
add
sti
es
pusha
mov
aad
xchg
dec
nop
cmp
or
xchg
push
cmp
or
xor
leave
sub
xor
xor
dec
mov
leave
xor
xor
mov
call
std
cmpsl
fwait
xlat
inc
mov
aam
iret
insl
xor
adc
adc
pop
lahf
fistps
mov
shll
jns
cmp
adc
jge
mov
dec
dec
mov
outsl
xor
mov
test
imul
cmp
out
int
lea
or
in
pop
push
and
daa
in
cli
addl
add
add
dec
jge
scas
shrb
out
mov
pop
lret
cmp
sub
mov
adcb
dec
fsubs
jnp
repz
xor
inc
imul
in
xor
adc
lea
mov
push
testl
jg
add
dec
inc
jnp
mov
popf
in
mov
and
xor
sub
divl
inc
push
add
pop
jnp
or
pusha
jnp
adcb
popa
leave
scas
adcb
push
sbb
add
insl
outsb
inc
aad
jg
aas
mov
das
lahf
sub
out
xchg
insb
icebp
in
ror
das
inc
daa
xor
mov
xor
scas
in
pop
pop
push
lret
aas
fs
and
xchg
out
mov
loope
add
mov
dec
mov
cld
and
aas
xlat
jle
stos
jecxz
mov
in
push
in
mov
fwait
lret
addr16
fsubrl
add
stos
fs
mov
je
js
mov
or
xor
dec
adc
sub
inc
sti
clc
mov
imul
jae
insb
imul
adc
ficompl
or
loopne
repz
dec
or
cmp
pushf
and
imul
mov
push
sub
push
sbb
into
and
pop
outsb
inc
outsb
movsb
ficomps
adc
cmp
orl
cmpsb
maxps
cmpsb
jle
cmp
dec
mov
jl
push
enter
gs
mov
ror
or
orl
fiaddl
cld
outsb
mov
out
aam
jl
push
cmp
lret
stos
arpl
xor
inc
repnz
subl
inc
xlat
push
mov
push
loopne
sub
movsb
inc
add
mov
ljmp
cmpsl
or
sarb
push
jb
add
and
je
jns
sbb
mov
pop
outsb
or
stos
cmp
lcall
repz
add
jmp
mov
sub
and
or
pop
mov
xchg
int
mov
and
hlt
roll
mov
nop
dec
pop
jno
and
mov
das
mov
fwait
pushf
add
in
adc
scas
cmpsb
loop
dec
or
test
dec
pop
dec
pop
mov
cmp
insl
stos
aaa
mov
fldcw
push
pop
fisttpll
call
xchg
jecxz
push
clc
pop
shll
aam
or
mov
int
pop
in
mov
add
or
rcr
xchg
adc
cli
push
add
xchg
add
sbbb
pop
pop
mov
cmp
mov
js
sub
imul
jae
iret
jp
cli
jae
sub
arpl
inc
cltd
test
scas
cmp
mov
pop
sub
fsubs
ficomps
mov
ds
mov
or
pop
xor
adc
clc
rcrl
inc
cmpb
shr
aas
sub
lahf
push
enter
loope
mov
xchg
std
inc
jnp
test
es
lods
jg
xor
mov
push
push
xchg
cmp
jns
or
inc
mov
or
jne
or
fldt
sbb
testb
in
daa
xchg
out
jmp
mov
push
into
fwait
repnz
ja
cmc
mov
imul
addr16
cmp
iret
dec
mov
int3
js
cli
push
lds
ret
jge
mov
pop
aad
mull
in
mov
dec
sbb
cltd
xchg
cmpsl
fbld
mov
and
dec
dec
lcall
push
je
jne
cmp
into
sahf
push
lahf
and
pop
out
xchg
jae
cmpsb
xor
inc
mov
xchg
pop
xchg
mov
sub
mov
idivb
test
inc
scas
and
adc
pusha
lcall
dec
daa
stc
jmp
mov
aas
xchg
std
jl
push
je
jae
popa
shl
inc
sub
out
arpl
fstl
bnd
test
daa
adc
mov
jl
add
repz
mov
xchg
adc
cmp
xchg
xchg
push
fucomip
enter
outsb
sarb
lret
mov
mov
lods
aaa
outsb
vmread
aam
cwtl
sbb
popf
es
outsl
pop
xchg
and
repnz
das
add
imul
lcall
and
mov
leave
int3
mov
je
jne
movsl
jmp
lods
and
cli
xchg
out
xor
inc
jmp
lcall
push
xchg
cmpsl
fisttps
mov
sbb
pushf
lods
sbb
mov
pop
cmc
push
ret
dec
mov
pushf
sbb
mov
ja
out
jno
cmp
ds
adc
dec
hlt
movsb
sub
jmp
inc
push
rorl
mov
and
jmp
xor
mov
fidivs
adc
or
inc
sub
cmc
stos
push
jecxz
test
fiadds
repnz
jne
int
pop
idivl
ficomps
movsb
mov
sarb
and
popf
mov
icebp
outsl
jno
jns
cmc
clc
scas
scas
stc
aaa
mov
jo
mov
in
mov
popf
jae
sbb
xchg
sbb
call
or
add
es
fwait
mov
push
mov
xor
popl
scas
lahf
jae
jge
inc
lcall
jb
imul
nop
scas
data16
rorb
ds
cmp
loop
pop
enter
pop
mov
sub
adc
cli
lock
loopne
jl
jbe
outsl
push
jl
shlb
aam
sub
jb
loope
stc
sub
xchg
inc
scas
adc
inc
mov
addr16
add
subl
bound
fiadds
or
hlt
xor
mov
cmp
sub
push
and
aas
pusha
mov
jmp
lahf
pusha
rorb
jp
es
jmp
lret
adc
int
jnp
fdivs
test
jle
or
repnz
lret
cli
mov
js
cs
hlt
scas
insb
cmpsl
inc
sbb
xchg
repz
icebp
lods
repnz
inc
jns
stos
vmaxpd
mov
mov
ljmp
in
add
xor
testb
mov
in
lock
push
fldenv
jmp
sbb
mov
adc
sub
ret
fstpl
inc
aaa
push
add
addr16
out
mov
stos
out
stc
jge
sub
sub
aaa
ret
and
xchg
ret
mov
test
adc
xchg
pop
out
addr16
out
mov
jbe
xor
lret
shll
adc
dec
or
push
das
aas
pop
push
xchg
adc
icebp
lods
inc
sbb
sbbl
xor
outsb
in
cmp
lcall
and
and
fists
inc
or
jmp
or
imul
and
push
sbb
mov
out
subl
decb
fistpl
ror
jbe
push
pop
mov
sub
xchg
jbe
pop
xor
cltd
int3
in
inc
pop
filds
cmpsl
mov
adc
jbe
je
xor
cmp
sbb
inc
adc
dec
ret
lahf
notb
jl
nop
inc
scas
lcall
movsl
pop
sub
fwait
mov
push
push
scas
mov
repz
fwait
or
out
loope
scas
xchg
dec
insb
ficompl
jg
jle
in
fldcw
and
mov
pop
mov
push
xor
add
repnz
pop
daa
mov
adc
cmp
into
jg
pusha
xor
sub
aaa
das
test
jne
fwait
pop
push
inc
xchg
cmpsb
cli
xor
cmp
inc
adc
repz
push
sub
jl
fcoms
sahf
outsl
outsl
scas
xchg
push
loop,pt
pop
rcl
fildl
xor
call
lret
or
icebp
dec
dec
std
pop
int
dec
or
int
and
mov
lods
pop
pop
inc
cmpsb
pop
mov
mov
sbbl
lods
and
jne
mov
data16
in
in
xor
cmpsl
into
cli
int3
jg
push
xchg
xor
mov
cmpsl
jno
cmp
and
nop
dec
ja
jle
test
notl
lahf
push
sbb
scas
aas
mov
jmp
cmpsb
mov
jne
or
xchg
loopne
xor
pusha
or
test
lret
sub
movsb
sub
arpl
js
xrelease
pop
divl
jb
in
inc
adc
into
nop
mov
clc
pop
iret
sbb
pop
pop
dec
popf
cld
or
inc
stos
mov
repz
push
dec
jnp
shll
int3
repz
push
or
lods
dec
flds
pusha
mov
dec
lret
scas
jo
mov
in
and
fldt
adc
sbbl
filds
fs
or
sub
repnz
xor
push
insl
hlt
mov
mov
aaa
and
fcoml
ljmp
loopne
inc
sub
mov
jmp
aad
andl
imul
icebp
pop
xor
mov
icebp
data16
dec
xor
ficomps
aad
lea
pop
ficomps
imul
repnz
gs
stos
dec
add
add
push
pop
call
cli
xchg
pop
stc
rcl
lret
fsubrl
pusha
sbb
mov
cmp
mov
cmpsl
cld
enter
xor
or
sub
push
dec
jno
data16
scas
mov
xor
jne
xor
pop
popf
aad
mov
dec
idivb
lea
int3
fldt
and
inc
into
jbe
sbb
adc
popa
inc
inc
sub
loopne
push
lock
lods
xor
fnstenv
mov
sub
push
mov
test
loop
enter
adc
cmp
add
adc
ficomps
stc
mov
xchg
sub
addb
mov
cld
in
pop
insb
mov
enter
mov
cli
pop
mov
movsl
mov
lret
cmp
sbb
or
bound
add
psubusw
mov
popa
repnz
or
pushf
fwait
cmc
test
mov
and
inc
icebp
add
loope
mov
aaa
iret
aaa
mov
pop
inc
mov
mov
cmp
pop
test
jmp
int
lds
cmp
xchg
fwait
sbb
add
mov
xor
cs
inc
bound
addr16
loopne
adcl
cli
or
arpl
inc
sti
ss
mov
mov
std
sahf
inc
stos
xor
icebp
pop
xor
lret
mov
inc
pop
adc
cs
xchg
sarl
mov
cmp
repz
mov
pushf
ss
adc
sbb
mov
cmp
cmpsl
std
movsl
push
xlat
adc
and
pop
push
xor
lea
dec
loop
cmpsb
mov
inc
lret
mov
jecxz
stos
sub
or
lods
jbe
cmpb
push
mov
nop
xchg
cwtl
pop
sbb
mov
inc
scas
out
rorl
fcom
or
iret
or
mov
push
fnsave
int
cmpsl
imul
jno
enter
mov
pop
pop
lret
dec
pop
lret
lcall
sarb
sub
fiadds
aas
dec
add
adc
push
mov
dec
xchg
cmp
cld
xor
imulb
mov
cli
lea
into
fidivs
int3
je
mov
test
loop
sar
xorb
jmp
sbb
xor
das
std
stos
jp
jno
and
je
mov
rolb
xchg
pushf
ds
push
or
cmp
pusha
or
jecxz
push
fs
repz
and
dec
mov
movsb
out
xor
lods
mov
sbb
xor
pop
hlt
lds
pop
mov
adc
imul
cmpb
mov
test
call
cltd
fdivrp
in
mov
fimull
mov
mov
jl
ret
out
mov
test
adc
loopne
mov
pop
daa
jo
mov
pop
decb
cmp
cmpsb
or
mov
push
call
sub
lcall
jb
add
lods
cmpsl
shl
mov
pop
and
loopne
adc
inc
aaa
cmc
cmp
in
cltd
jl
aaa
ss
ret
sub
mov
and
dec
out
sbb
sub
out
shr
seta
mov
cli
xchg
jae
iret
arpl
jne
imul
insl
push
lock
add
inc
dec
push
adc
mov
out
loopne
sub
std
xchg
pop
aad
pop
jno
jmp
jl
push
repnz
push
andl
mov
movsl
outsl
mov
cmpsb
xchg
push
movsb
jno
in
mov
jg
mov
cld
out
rol
jl
int3
mov
mov
and
dec
jecxz
xchg
mov
mov
cmpsl
jo
call
shrb
or
mov
cmp
cltd
push
add
cltd
pop
rol
jmp
mov
xchg
aam
into
in
dec
sbb
xor
push
ret
mov
xchg
add
nop
add
push
inc
or
int3
out
inc
mov
lea
sbb
lret
push
incl
mov
dec
jecxz
clc
stos
shrl
add
push
mov
test
add
mov
test
cmp
cwtl
or
mov
cmc
mov
push
dec
loope
jne
pop
fptan
inc
adc
test
adc
push
pop
lods
inc
mov
mov
push
punpcklbw
add
int3
dec
testb
ljmp
xchg
popa
mov
adc
lahf
and
xor
pusha
iret
fwait
jg
negb
outsb
inc
cmpl
add
jne
sbb
popa
in
inc
stos
cmc
divb
lahf
les
xchg
dec
xchg
cwtl
scas
and
cs
movsb
xchg
dec
push
add
sbb
je
jnp
pusha
cmpsl
jmp
dec
inc
cmp
jnp
add
sti
mov
xchg
fcmovbe
inc
jge
pop
sub
push
leave
pop
out
gs
push
pop
fisttpll
idivb
lret
cwtl
sbb
rclb
jl
aad
movsb
loope
sti
arpl
mov
jne
sti
scas
jge
fldenv
rcrl
xor
adc
imul
or
inc
push
nop
push
aas
and
cltd
cmp
les
pop
dec
inc
cmp
out
adc
cmc
sub
nop
inc
addr16
in
pop
mov
push
fistl
test
fcmovbe
int3
vaddss
mov
jp
mov
jmp
mov
or
mov
clc
in
cmp
xchg
aad
mov
sbbb
insb
mov
mov
lods
mov
leave
mov
dec
mov
jno
add
cmpsl
mov
and
xor
push
mov
loop
push
push
push
jb
imul
adc
lds
inc
inc
fimuls
iret
fwait
sti
addb
inc
jo
xor
into
ret
jle
push
addr16
xchg
fbstp
push
mov
or
imul
adc
test
dec
fidivs
aaa
stos
cmpsl
popf
leave
lret
pop
shlb
outsl
push
and
loop
cmpsl
xchg
or
mov
call
iret
adc
mov
xor
cmp
sub
bswap
jne
jecxz
in
shll
mov
push
inc
dec
pop
lods
adc
mov
pop
pop
lods
fisubrl
jbe
mov
pop
pop
push
jecxz
jmp
xchg
cmp
adc
ja
sbbb
adc
or
hlt
int3
push
stos
stos
pop
add
shrd
xchg
adc
std
sub
adc
jne
mov
add
fldcw
pop
jg
jno
pop
addr16
sub
xchg
and
pop
lods
imul
add
pop
or
and
or
jecxz
jmp
popa
inc
jp
ds
xorb
push
mov
rcl
or
aam
and
lock
push
jge
mov
pop
aaa
call
push
mov
test
or
scas
jno
pop
push
jl
mov
pop
sub
adc
dec
mov
ret
mov
ss
popf
fimuls
push
cld
jg
fidivs
sub
add
sbb
xchg
mov
clc
add
jle
sub
and
jge
out
stos
daa
repz
call
xchg
int3
lds
mov
add
mov
cmp
rcrb
adc
test
out
mov
mov
and
cmp
pop
pusha
and
cmp
cmpsb
add
aaa
fwait
loopne
lret
dec
pop
mov
push
xlat
or
idivb
or
mulps
rcrb
mov
mov
mov
push
mul
sbb
mov
push
sarb
nop
das
add
mov
movl
jge
sub
mov
mov
stc
dec
jo
mov
addr16
pop
jl
and
xor
cwtl
add
jnp
xor
push
js
adc
dec
push
daa
sbb
js
mov
cmpsb
aam
mov
cmp
dec
mov
add
jbe
cmc
push
jmp
idivb
mov
jl
hlt
or
insb
nop
xchg
nop
adc
fdivrl
fcmovne
sti
outsb
push
mulb
std
lret
rorb
or
inc
mov
sbb
sti
bound
jmp
dec
stos
pusha
xchg
dec
and
call
push
popa
xor
lods
loop
out
lret
imul
mov
imul
cltd
mov
je
js
imul
pop
push
aaa
jge
mov
inc
ret
out
cmp
or
cmpl
push
and
inc
jmp
imul
sbb
xchg
mov
cld
xchg
inc
xor
lods
xchg
add
cmc
mov
ja
fidivs
pop
sub
leave
repz
and
and
pusha
or
rclb
arpl
pusha
adc
test
clc
adc
add
test
daa
imul
test
push
jae
daa
mov
rclb
aas
packssdw
xor
jg
testb
push
outsb
add
lret
pop
dec
outsl
das
jns
cs
int3
cmpsb
sti
mov
lods
repz
sub
jge
mov
out
sub
xor
mov
int3
adc
scas
lea
mov
mov
mov
loopne
sub
in
in
sbb
in
out
dec
pop
inc
and
cmpsb
mov
ret
mov
mov
cmp
fistl
hlt
inc
loop
push
push
jp
mov
push
mov
add
jo
dec
sahf
push
inc
cmp
xchg
push
stc
insl
outsb
jb
sahf
arpl
pop
push
push
and
cmp
repnz
adc
push
cmpsb
dec
dec
shr
pop
pop
mov
lcall
test
insb
adc
sbb
ja
add
aad
aaa
xchg
xlat
push
mov
fwait
gs
pop
lock
ljmp
sbb
xlat
sub
ljmp
popa
out
jbe
pop
cli
pop
test
inc
ss
adc
mov
mov
insb
dec
and
push
out
js
lahf
pop
sub
cmc
ret
movsb
xor
pop
adc
jp
idivl
push
push
je
orb
pop
ljmp
jbe
gs
mov
je
xorl
movsb
mov
adc
xchg
cmpsl
pop
xchg
test
or
inc
loop
xchg
aas
mov
xchg
adc
std
stc
outsb
sub
push
out
sbb
mov
lret
sbb
and
push
adc
in
addl
pop
xchg
int
xchg
aaa
jae
lahf
mov
fst
bnd
test
mov
push
xor
adc
jle
adc
inc
fisubrl
pop
inc
lds
jno
pop
movsb
add
mov
inc
cmp
cs
mov
or
shlb
fwait
push
sub
mov
data16
inc
pop
adc
imul
fucomp
movsl
into
pop
or
or
pop
mov
lds
lods
jbe
push
or
scas
cs
jmp
mov
adc
imul
fwait
notl
shlb
dec
mov
inc
lret
and
inc
jge
mov
inc
and
push
iret
add
ds
inc
cli
rcr
hlt
add
xor
test
lods
or
sti
addr16
filds
adc
incl
mov
mov
jle
aad
cli
push
mov
repnz
lea
jbe
cmpsl
jns
jae
mov
out
repz
pop
cmp
xor
insl
jb
out
out
sub
sub
mov
cli
popf
shrb
pop
xchg
aad
adc
mov
mov
cli
outsl
cli
std
xchg
cmp
mov
adc
adc
cmp
jnp
outsl
mov
push
test
icebp
cmp
scas
sbbb
shll
xchg
movsl
and
jl
mov
cmc
mov
test
cmp
std
stc
push
loop
fsubr
xchg
mov
pop
in
dec
rorb
ficompl
cmpsb
aas
daa
mov
repz
sti
std
pop
test
jg
nop
sar
and
loopne
frstor
jle
dec
shl
and
ret
and
popa
lea
jg
aaa
jmp
sub
cmp
sbb
lcall
mov
pop
out
cmp
pop
mov
mov
imul
bound
es
dec
lock
mov
xchg
xor
inc
int3
lret
push
int3
pop
js
cmc
aad
call
cmc
xchg
lods
push
jle
sbb
rorb
xchg
and
icebp
xchg
gs
sbb
sub
or
fidivs
push
sbb
jne
addr16
ret
aas
or
dec
mov
jne
push
inc
cmove
pop
jmp
push
cltd
lahf
ja
insl
ja
cmpsl
jns
push
out
jns
mov
mov
adc
push
stc
xor
movsb
mov
sub
mov
xor
sub
cmpsl
insb
push
jmp
inc
dec
add
xlat
adc
je
jnp
aam
enter
sub
outsl
lods
inc
rclb
jecxz
sbb
cmp
and
dec
aad
cltd
pop
cltd
sbb
mov
out
adc
pop
jb
jle
fldl
adc
cli
xchg
arpl
inc
pop
ret
stc
out
in
daa
dec
cmp
mov
cmp
out
sub
outsb
bound
jl
xchg
xor
sbb
sarb
andb
enter
leave
pop
imul
gs
fdivrp
sbb
inc
and
jae
sub
movsb
fwait
lahf
mov
cmpb
mov
test
pop
lods
mov
lcall
ss
loope
ds
xchg
sbb
jge
stc
cwtl
pop
fldt
mov
dec
icebp
jmp
mov
mov
and
jbe
out
mov
repz
sub
test
fsubrl
pusha
gs
jbe
jmp
mov
bound
xor
xchg
cmp
cmp
test
fbstp
sbb
in
daa
lea
loope
jl
test
xor
jle
pop
aas
popa
sahf
and
mov
outsb
into
jg
insb
dec
jg
loopne
mov
inc
js
cmp
pop
mov
insl
xor
mov
adc
push
mov
sbb
or
sar
jns
shr
sbb
xor
xor
arpl
shlb
pop
xchg
or
dec
and
lock
imul
cmp
jp
pop
call
mov
cli
inc
cltd
xchg
inc
outsl
fwait
movsl
pop
dec
mov
popf
in
pushf
push
adc
mov
imulb
dec
stc
sub
hlt
sbb
outsl
pop
pusha
mov
mov
cs
jl
push
cld
jno
pop
xchg
mov
mov
fnsave
out
repz
inc
addr16
cmp
lea
jmp
add
in
loopne
mov
shr
mov
adc
mov
out
jae
xchg
push
stos
dec
ss
int
pushf
insb
arpl
dec
jp
arpl
int
mov
push
rorb
ret
sub
insl
loope
jle
fcmovb
hlt
ja
jno
xor
and
dec
xchg
pop
sbb
lahf
outsl
push
mov
push
div
mov
dec
lea
out
imul
loope
pop
mov
xchg
sti
push
aaa
aaa
insw
jge
cli
test
push
inc
xor
scas
test
mov
sbb
out
movsl
mov
popa
jge
ljmp
and
xor
xchg
hlt
jp
push
testb
loope
dec
pop
push
adc
mov
and
pusha
das
adc
xchg
pop
xchg
xchg
fs
mov
adc
mov
cmp
xchg
sub
test
add
popf
sbb
mov
call
insl
or
das
dec
or
xor
mov
mov
aaa
dec
cmpsl
add
mov
push
sbb
lock
mov
xchg
xchg
dec
or
repz
or
jnp
add
cmp
mov
pop
adc
xchg
mov
push
mov
jns
push
cmp
mov
shr
mov
dec
arpl
and
pop
cmp
std
pop
addr16
clc
pop
or
hlt
push
dec
push
push
int3
sub
jl
scas
in
sahf
mov
fdivr
int
jbe
mov
adc
push
outsb
dec
mov
dec
gs
adc
cmp
mov
test
jnp
cmpsb
rcll
jb
dec
loope
std
or
fnstenv
stc
out
rorb
ficoms
jne
adc
scas
insb
mov
pop
repnz
jle
pop
aad
sti
push
mov
add
mov
cmpsb
dec
sbb
push
mov
pusha
outsl
push
push
fiaddl
push
jb
pop
cmpsl
scas
loop
in
scas
scas
addr16
ljmp
repz
int
fisubrs
sahf
push
adc
jne,pt
fistpll
push
add
push
pop
adc
mov
cmp
cmp
cmp
xchg
ss
mov
shll
add
push
add
mov
mov
xor
scas
dec
out
mov
cmp
cmp
cmc
mov
aas
jns
add
xor
xor
insl
mov
jl
pop
jbe
repz
std
insb
aas
and
fcomps
mov
jae
popa
repz
push
test
or
xor
sbb
pop
insb
loop
sub
jmp
inc
lods
sbb
sbb
ljmp
scas
test
mov
dec
ljmp
xor
mov
movsl
out
push
sbbl
adc
dec
mov
test
outsb
pushf
test
cltd
rolb
data16
in
jge
test
mov
sub
jg
sbb
iret
cmp
adcb
xchg
xchg
jmp
mov
adc
out
fcmovnu
adc
and
mov
mov
pop
in
ljmp
cmp
pop
jbe
inc
jmp
mov
xchg
or
mov
adc
mov
mov
push
test
inc
mov
push
arpl
jecxz
mov
mov
mov
je
xlat
push
ret
aas
loopne
pop
cltd
pop
fcmovbe
and
push
pop
outsb
dec
arpl
mov
stc
push
lret
mov
jne
xchg
jae
lret
push
pop
inc
loop
cli
lret
sub
enter
sbb
sbb
cltd
cltd
incl
out
lock
jns
adcl
pushf
imul
and
xchg
cmpsl
push
in
mov
push
xchg
insb
push
mov
mov
mov
pop
ljmp
jmp
mov
lds
mov
stos
sub
bound
fisttpll
or
inc
bound
and
aaa
xor
loop
push
xor
bnd
fldl
pushf
jbe
ficomps
cmp
lret
gs
outsb
jl
pop
into
cltd
mov
jp
push
mov
fildll
das
ret
push
inc
pushl
shll
fmuls
sti
lods
lea
movsb
out
and
ss
lret
rcrb
pop
ja
mov
ret
and
xor
fwait
aas
stc
cmpsb
lods
les
out
int3
mov
and
sbb
dec
sbb
push
mov
mov
insb
sub
repnz
adc
or
mov
out
scas
ss
out
bnd
xchg
pop
jge
adc
mov
lcall
inc
push
sbb
es
es
cmc
adc
inc
gs
sbb
mov
ds
and
int
pop
jmp
xorb
mov
add
cmp
pop
xchg
jl
jmp
packuswb
insl
call
es
sub
rcr
stos
mov
in
addr16
imulb
xor
aas
mov
xor
lods
lret
imul
or
dec
mov
push
xor
fsubrs
ja
sbb
lea
fucomi
cmp
jecxz
mull
push
push
aam
jno
aaa
and
sub
inc
jne
incl
loopne
dec
dec
imulb
pop
dec
cli
lods
cwtl
fildll
dec
test
aas
or
aam
and
adc
sbb
jnp
lea
cwtl
cmp
jecxz
jmp
leave
sub
cmpb
jmp
addl
sbb
push
scas
mov
cwtl
mov
pop
cld
mov
es
ds
jb
out
in
pop
xchg
and
or
rcl
adc
inc
mov
push
jns
popa
add
and
jge
ffreep
fadd
pop
cmp
mov
call
inc
fldt
cmc
sbb
int3
fstl
decl
adc
scas
jmp
clc
xlat
lock
orb
mov
xor
mov
bound
sbb
jg
adc
jns
lods
pop
fdivs
pop
jbe
cmp
pop
ficoms
cltd
ljmp
stos
lret
mov
clc
mov
xor
mov
insl
xchg
ja
aam
ret
xlat
lret
mov
inc
pop
fildl
pop
stos
sbb
insl
cmpsl
scas
arpl
sub
lods
pop
ja
xchg
ja
shrl
sub
adc
xchg
inc
popa
popa
rorl
jno
xchg
mov
std
pop
mov
iret
sbb
mov
dec
xlat
xchg
mov
into
push
cmp
cmp
push
inc
lods
xchg
pop
dec
jg
inc
dec
push
jbe
and
cmp
imul
lock
push
mov
inc
xor
addr16
aad
or
movsl
outsl
dec
pusha
test
cmp
mov
xor
rcrb
sbb
subl
outsl
or
mov
rcr
and
push
fstpt
rclb
xchg
cmp
lret
bound
pop
fnstsw
sbb
pop
or
mov
jne
in
les
add
cwtl
jno
xorl
push
sbb
xchg
out
aam
adc
test
push
xor
bound
dec
push
sbb
out
sbb
sub
and
xor
pop
and
push
xchg
out
mov
dec
hlt
aad
std
in
bswap
xor
push
xchg
xchg
xchg
xchg
mov
imul
mov
mov
jnp
pop
in
js
push
xchg
xchg
or
mov
nop
push
xchg
ljmp
orl
sbb
addr16
cmpsl
fwait
mov
dec
and
or
int3
repnz
insl
xor
adc
in
incl
sti
subb
roll
mov
push
cmp
testl
sub
adc
cmp
or
test
jo
test
lret
sbb
sti
xchg
lcall
cmp
es
pop
jae
bound
sub
inc
repnz
dec
and
sub
lods
stc
push
add
cmp
push
sub
or
sub
cmp
leave
add
mull
adc
or
jle
push
jg
sub
sbb
jg
pop
push
lret
int3
mov
mov
push
int
andb
aas
jge
mov
out
sub
call
pop
push
sbb
scas
hlt
mov
iret
fwait
outsl
and
jb
inc
mov
ljmp
faddl
mov
ret
inc
stc
or
lods
cmpsl
sbb
and
mov
jo
cmp
dec
arpl
aas
adc
inc
std
scas
gs
and
cwtl
in
fs
dec
daa
jo
rcrb
pop
out
or
mov
outsl
aam
test
std
mov
lock
adc
cmpsb
ljmp
inc
or
cmpsl
clc
movsb
cmp
jp
cmp
adc
xchg
scas
pop
inc
adc
jl
ficoml
mov
push
sbb
xor
pop
mov
loopne
xor
jl
sbb
lahf
pop
repz
adc
or
int3
push
mov
xor
fdivs
jae
fadds
jmp
jecxz
inc
xor
fsubrs
jmp
gs
xsha1
cmpsb
leave
ljmp
xor
in
dec
andl
test
leave
mov
adc
and
je
adc
inc
outsb
mov
test
cmp
es
inc
in
or
dec
aad
bound
out
fbld
ficomps
test
dec
jg
mov
push
ds
mov
push
jle
std
pop
lods
push
sbb
out
mov
mov
push
adc
testb
add
mov
iret
hlt
jecxz
es
mov
icebp
inc
out
in
and
outsb
scas
cld
push
sub
fsubrp
aas
jp
xchg
fcmovbe
inc
dec
pop
sub
sub
loop
je
loopne
in
add
out
add
fildl
jbe
xchg
stos
lret
nop
loop
pop
in
leave
jecxz
sbb
cmpsl
jg
mov
repz
out
adcl
mov
shll
xor
movsl
pop
in
icebp
popa
mov
sbb
mov
notb
sbb
adc
test
mov
cmp
mov
repz
jbe
int3
fbld
add
sbb
mov
mov
push
lea
out
push
adc
inc
or
xor
mov
sub
lds
push
test
cmc
fucomp
pop
mov
lret
es
and
dec
mov
cmc
int3
hlt
pusha
icebp
shrl
cmc
stos
pop
pop
xchg
clc
loopne
cltd
fst
mov
cmp
cmp
int
mov
lret
test
int3
sub
mov
mov
sub
push
das
sbb
xchg
add
lea
cmp
or
stos
hlt
dec
add
imul
je
cmpsl
cmp
mov
icebp
cmp
mov
or
rorb
push
stos
addl
cltd
mov
cmp
adc
jl
inc
jmp
cmp
adc
std
push
mov
adc
fdivrl
cmp
scas
in
jnp
inc
pop
sub
push
pop
mov
sub
lods
fmul
loope
xor
mov
insb
jnp
movsb
xchg
insb
mov
aaa
sbb
rorb
loope
sbb
mov
stos
neg
jg
mov
fld
into
stos
and
jge
sbb
movsb
addr16
cwtl
ret
scas
in
sub
pop
das
mov
lahf
xchg
sbb
push
adc
fwait
das
mov
push
rcl
rcr
mulb
or
pop
hlt
lds
sub
addr16
xor
fmul
dec
outsb
or
and
sbb
test
std
lods
pop
fwait
fs
jge
xchg
mov
mov
push
cs
inc
pop
pop
pop
mov
test
push
jno
gs
aaa
shlw
push
insb
decb
cs
imul
push
cmpsl
mov
mov
inc
adc
roll
mov
mov
popa
insb
orb
into
adc
lock
lret
data16
lea
addl
sbb
aas
cmp
and
fistl
sbb
pop
jno
push
xchg
pop
xchg
rcrb
dec
out
lods
add
push
add
sbb
lahf
mov
mov
insb
cmp
mov
adc
or
cs
sbb
jb
cld
mov
jb
fcompl
mov
cmp
sbb
push
push
outsb
pop
xor
cmpb
push
stos
xor
iret
lock
jb
shlb
mov
rolb
push
imul
jmp
mov
mull
mov
lods
gs
sub
hlt
fs
movsl
lret
rclb
mov
add
ds
xchg
neg
inc
cmp
jae
cmpsl
pushl
icebp
fistps
cltd
adc
xor
inc
adc
aad
fwait
arpl
mov
sbb
ror
inc
in
test
push
pushf
int3
add
inc
mov
and
dec
movsl
sbb
xchg
arpl
push
add
cli
arpl
jae
cmp
into
mov
leave
xor
icebp
mov
xchg
xchg
icebp
jne
movsl
jno
filds
xchg
out
imul
fs
cltd
add
rclb
xrelease
lock
jle
mov
fsubs
in
filds
dec
gs
and
cmp
sbb
insb
mov
sub
push
jns
enter
cltd
dec
cmp
test
clc
xor
and
pop
inc
mov
sbb
adc
xchg
out
xor
loop
or
in
mov
sbb
sti
sub
in
insl
sbb
push
xchg
sub
xor
or
test
cmp
lea
mov
fldt
add
ljmp
scas
mov
clc
repnz
mov
aam
scas
repz
xor
ret
data16
outsb
xor
ljmp
pop
rcrl
cmp
fwait
xchg
pushw
mov
jbe
out
repnz
dec
mov
out
xor
popa
cld
popf
sbb
and
push
mov
clc
std
add
inc
xchg
add
iret
adc
mov
cmp
loopne
push
ds
daa
in
repz
sub
cld
aad
cmpsb
sub
sub
or
addr16
insl
cmpsl
lcall
sub
lods
mov
xchg
lock
jl
jnp
stos
fistps
rcll
divb
mov
pop
fcmovnbe
sbb
mov
jle
lret
push
ljmp
aad
xor
push
lods
leave
addb
js
sub
cmpsl
and
pop
lret
mov
in
nop
daa
push
inc
add
flds
ss
add
fidivs
xor
call
mov
dec
inc
decb
push
mov
xchg
xchg
cmp
clc
jbe
pop
pop
in
xor
outsb
xor
dec
test
xchg
into
jmp
popf
mov
sbb
sub
fs
int
insb
sbb
lods
mov
sbb
addl
xchg
cmp
in
mov
cmp
inc
mov
into
or
sbb
in
lds
add
cmpsl
inc
lds
xchg
in
mov
and
jg
fcmovb
les
repnz
mov
xchg
xchg
scas
adc
cmp
dec
adc
fnsave
add
mov
xorb
jo
jnp
out
mov
and
outsb
adc
push
pop
pop
mov
loopne
faddl
cmpsb
pop
mov
aad
dec
pop
sub
mov
sbb
adc
idivb
daa
mov
pop
lahf
push
xchg
bound
enter
pop
js
jns
cmp
stc
mov
xlat
xor
push
cli
or
jge
sub
jge
dec
movsb
faddl
dec
sti
mov
inc
mov
xchg
sub
add
fsubrs
rorl
push
cmp
jp
aad
cmp
mov
inc
imul
jae
popf
add
ss
cli
orl
call
cmp
xor
push
add
out
sbb
lret
loopne
and
adc
inc
popf
sbb
int3
mov
jmp
pop
jae
push
sub
dec
adc
add
sub
mov
or
je
xchg
fisubrl
or
sahf
push
scas
sub
adc
ja
or
stc
popf
dec
mov
push
fnstsw
mov
add
repnz
ret
std
daa
adc
test
adc
lret
rcl
push
insl
lods
cs
stc
inc
and
xor
lret
inc
cli
jl
int3
xchg
dec
bound
push
or
fwait
push
fidivs
ja
scas
insl
sub
jle
std
mov
push
add
jle
test
out
mov
fs
sahf
cmp
sbb
jg
loopne
pop
outsl
es
movsb
add
arpl
adc
xchg
ficomps
cmp
xor
pop
xchg
xor
repz
push
cmovae
push
fwait
rcrb
loopne
lea
lret
ret
jecxz
scas
push
mov
pushf
fisttpll
out
mov
mov
arpl
xchg
sub
xor
cld
shlb
xor
subl
fs
xchg
je
les
aaa
add
xor
por
push
repz
add
popa
ss
loopne
cmc
fsubrl
ds
adc
cmp
out
imul
outsl
fisttpll
aam
adc
and
hlt
lock
stc
fists
mov
bound
std
imul
ret
aaa
int
int3
xchg
lods
or
push
fsubs
pushw
cmc
aaa
mov
xchg
xor
xchg
xchg
jl
test
mov
addr16
pop
mov
mov
orb
daa
push
stos
adc
repnz
or
xchg
aas
xchg
mov
and
mov
inc
pushf
xchg
xor
push
inc
or
mov
flds
loop
xor
jge
xor
xchg
xchg
das
pop
in
fistpll
mov
sub
lret
mov
pop
adc
xor
loope
fcmovne
cmpsb
test
jle
dec
notb
or
xor
sub
stc
pop
lea
data16
sbb
out
jne
push
mov
outsb
adc
addr16
push
jbe
in
and
es
adc
test
and
push
or
push
cmp
es
xorl
cmpsl
out
fsubr
enter
les
insb
ret
mov
call
pop
addr16
xchg
dec
sbb
adc
testb
mov
push
iret
mov
cmp
mov
lods
mov
loop
pushf
aam
popa
stos
inc
je
and
jno
out
or
fiaddl
adc
out
and
xchg
jecxz
and
xor
flds
cwtl
inc
xor
cmpsb
inc
shrb
cmp
jle
pop
mov
xchg
and
jl
das
dec
shlb
or
pop
dec
ficomps
push
xor
shl
lds
pop
ficoms
enter
pushf
int3
lods
inc
jl
and
test
push
mov
xor
stc
pop
fwait
push
stos
jns
jo
sub
mov
repnz
in
rolb
mov
sub
insl
xchg
pop
stc
scas
je
jle
loop
sarl
aas
shlb
adc
imul
cwtl
in
outsb
insl
push
jb
shr
sub
lea
faddp
xor
test
cmpsb
adc
daa
cmp
pop
sbb
sbbl
in
bound
movl
jnp
or
fiadds
in
mov
dec
fists
xor
scas
fs
adc
ja
out
push
inc
shll
pushf
imul
push
cmc
mov
jno
xchg
outsb
cmp
add
xor
jmp
pushf
push
call
push
cmc
scas
dec
fs
pop
out
inc
loope
imul
test
add
add
mov
xchg
out
hlt
or
and
pop
xor
fucomi
out
aas
icebp
cmpl
mov
or
lret
adc
inc
push
or
sbb
jnp
enter
xor
movsl
adc
es
pop
sbb
dec
add
rcrl
adcl
xchg
jmp
sbb
mov
inc
bnd
sbb
add
popf
sahf
leave
jo
mov
dec
cltd
sub
loop
add
out
outsb
mov
adc
jg
sbb
xor
in
dec
pop
mov
mov
xchg
xor
aaa
add
adc
mov
or
outsl
cld
mov
and
int
pop
pop
sub
fucomp
cmp
cmp
enter
inc
mov
inc
sbb
sti
repnz
xor
add
je
int3
inc
aaa
mov
pop
push
adc
ret
sahf
int3
enter
iret
test
inc
lea
inc
mov
sub
adc
aaa
xor
sarb
pop
xchg
adc
out
jno
and
push
jnp
xor
push
sub
js
pop
or
pusha
fwait
add
xchg
push
in
cmp
sti
add
test
inc
dec
push
icebp
jmp
and
and
xor
and
stos
jg
imul
and
add
dec
mov
sti
pop
into
inc
jg
xor
enter
cmp
mov
pusha
mov
cmp
or
jecxz
jg
mov
jmp
hlt
out
subl
stc
rcrb
lahf
roll
mov
ja
fbld
push
vxorps
jns
aas
jb
jl
ja
mov
inc
cwtl
dec
adc
cmpsb
jecxz
repz
jmp
push
bound
lods
mov
sbb
add
cmp
lods
push
movb
arpl
aas
sub
push
imul
ret
inc
sbb
pop
das
je
test
jp
xor
sbb
popa
in
popf
mov
aas
lahf
out
dec
test
fstp
icebp
jl
jns
cmp
dec
ror
or
inc
sub
add
xchg
fwait
stc
scas
mov
cli
and
jg
add
sbb
pop
dec
inc
sti
fnstcw
enter
pop
and
adc
xchg
cmp
adc
pop
jne
ret
push
add
addr16
mov
xchg
gs
mov
mov
test
lock
rorl
sbb
mov
insl
cmp
xchg
lods
and
mov
cs
and
stos
mov
jo
shrl
imul
out
fisubs
pop
test
or
push
pop
inc
ret
cs
test
outsb
adc
and
shl
jecxz
test
insb
fists
je
fidivl
mov
mov
out
mov
movsl
jmp
inc
mov
aas
push
data16
cmpsb
mov
fdivrs
jno
cmpsb
sbb
xchg
test
lock
inc
adc
out
sbb
dec
jl
pop
inc
adc
lret
imul
je
mov
push
pusha
mov
pop
mov
aad
push
ds
xor
push
shr
stos
sub
das
cmp
fadds
push
mov
jl
pop
lret
jo
loopne
popa
jb
shll
loope
mov
popw
cmp
mov
or
sub
push
aam
xor
ja
sbb
mov
mov
fisttps
addb
in
fdivl
lods
inc
jae
das
orb
les
and
outsb
imul
or
dec
xchg
inc
and
out
out
gs
mov
jmp
fxch
push
pop
inc
jp
cmp
mov
fyl2x
leave
add
and
mov
cmc
xchg
mov
jl
xchg
add
jmp
jne
insl
mov
fwait
cld
repnz
push
inc
dec
insl
mov
lahf
add
dec
sub
pusha
cmpsb
aaa
pop
push
fdivr
orb
cmc
imull
les
mov
cmpsl
repnz
sub
add
inc
sub
lcall
out
add
push
lods
cmpsb
popf
cmc
ss
repnz
imul
xor
repnz
dec
test
mov
add
scas
stos
mov
dec
pop
rorl
adc
push
fstps
testl
push
stos
dec
xchg
aam
sub
xor
iret
push
loope
insl
int3
lret
scas
es
fcmovnb
xor
lahf
pusha
mov
popf
cmpsl
rcrb
lret
and
lcall
xor
jb
sbbb
ret
hlt
cmp
aaa
jp
mov
ljmp
aas
into
jne
sub
in
stos
pop
xlat
mov
cmp
inc
shrl
fwait
js
inc
mov
sbb
dec
push
xor
cmp
fwait
xchg
jne
lods
mov
sbb
addb
xorl
hlt
adc
shlb
mov
js
sbb
stos
rcll
nop
cmpsl
repz
addb
add
mov
cmp
fwait
pop
jb
dec
xchg
and
test
fistpll
loop
test
or
lret
add
fwait
jbe
dec
sbb
mov
stos
test
pop
mov
aam
cmp
jne
xlat
call
dec
mov
nop
stos
shlb
mov
sbb
and
lahf
fs
sub
adc
sbb
mov
inc
ljmp
orb
push
clc
bnd
pop
rorl
cmp
outsb
xchg
lahf
icebp
int
popa
pop
mov
ret
notb
mov
cmp
into
arpl
adc
mov
mov
lret
pop
test
out
adc
xchg
add
sar
jae
push
movsl
pusha
das
adc
dec
push
jo
int3
add
adc
mov
les
outsb
mov
mov
jno
pop
adc
mov
fdivp
std
sbb
popa
in
mov
mov
loope,pn
aas
jo
addr16
cmp
dec
sahf
mov
xor
icebp
add
jns
cli
shl
fsubs
dec
aam
xrelease
mov
scas
in
adc
mov
jbe
xchg
push
icebp
sub
out
loopne
inc
stc
sub
pop
xor
jge
lcall
adc
mov
fisttpl
rcrb
pop
adc
push
ret
jns
shrb
in
push
fidivrs
lahf
xchg
inc
xchg
dec
and
dec
xor
and
ret
shlb
add
enter
imul
cmp
xor
cmp
negb
dec
lds
xchg
outsb
or
inc
mov
fcomi
sbb
into
gs
push
enter
mov
test
out
and
cmp
out
mov
out
and
xchg
pop
jne
lea
add
popa
fpatan
repz
pop
adc
fdiv
sub
lret
mov
sub
shlb
sbb
mov
dec
and
ja
in
push
orb
mov
dec
jmp
scas
add
pop
das
xchg
je
dec
je
stc
adc
inc
and
outsl
aam
lods
cmp
push
jbe
dec
mov
out
push
adc
mov
fisubs
repz
push
sbb
xlat
into
jbe
push
cld
ljmp
or
inc
xor
sbb
mov
and
xor
arpl
int3
and
adc
out
xlat
movsb
mov
dec
repz
hlt
in
sbb
ret
loope
loop
push
inc
mov
pop
pushf
or
dec
xchg
adc
jno
pop
enter
xor
jl
xlat
sbb
rorb
push
iret
and
fs
or
jg
jb
jo
lret
jecxz
repz
xor
lods
cwtl
nop
js
fld
push
fsts
rclb
scas
jbe
ss
out
into
push
jo
std
and
pop
mov
cmpsb
xchg
scas
or
test
jb
inc
jl
or
lret
nop
pushf
int3
insl
jb
std
pop
xchg
xlat
loopne
ficompl
and
les
out
sub
adc
xor
or
sbb
test
push
nop
lods
test
xlat
scas
and
xor
out
enterw
js
movsl
daa
push
movsl
xchg
popf
pop
jmp
lods
imul
int
aam
add
popl
xchg
pop
sbb
pop
addr16
sbb
mov
mov
nop
mov
outsb
mov
stc
dec
jp
je
mov
iret
add
imul
dec
fbstp
bound
popf
rol
shlb
pop
mov
add
jmp
mov
lods
jg
cmp
fdivl
insb
cs
xchg
xchg
pop
xlat
xor
aas
mov
ds
inc
out
cmp
push
push
fwait
stc
loop
xorl
add
insb
sub
and
mov
cmp
in
lds
test
mov
in
int
cmp
out
repz
fs
mov
jne
daa
popa
fcomps
dec
jae
dec
jg
jnp
push
js
lcall
xchg
outsb
gs
jecxz
test
and
or
pop
insl
fmull
push
int3
xorb
sahf
sub
out
fsubl
scas
fstps
mov
mov
call
xchg
mov
out
inc
inc
sub
in
or
in
sahf
adc
dec
fistpl
mov
insb
push
mov
pop
mov
jecxz
clc
fdivp
hlt
sbb
lock
pop
pusha
add
xor
fisubrl
mov
fdivrs
bound
cmp
ds
loope
negl
push
lock
push
fiaddl
mov
loope
das
jbe
and
xor
iret
daa
cmp
cld
daa
iret
cld
push
dec
xor
jbe
ss
pop
sub
mov
push
inc
das
and
fdivr
push
sub
fnstcw
pusha
stc
rclb
sub
outsl
stos
dec
inc
int
maskmovq
negl
pop
loopne
add
mov
pop
ret
xlat
push
negw
dec
je
js
ret
stos
inc
pushf
out
cmp
and
jae
pop
loopne
sbb
adc
pusha
jns
popa
xchg
xlat
enter
dec
dec
sarb
int3
je
ds
mov
mov
or
xchg
adc
ja
mov
or
mov
and
or
sarl
inc
push
aas
sbbb
jb
mov
stos
mov
mov
je
add
jle
cmp
dec
adc
js
xor
dec
iret
popa
cmp
ret
cmc
inc
adc
loope
sahf
clc
pusha
xchg
in
xchg
sti
sbb
cmc
mov
test
mov
jl
push
cmpb
in
stos
cmc
pop
test
ja
cli
mov
jle
fstl
sbb
js
lret
adc
and
aam
int
sbb
add
bound
lods
and
jb
cmp
inc
mov
inc
insb
jns
stos
sbbb
sbb
popf
push
sbb
nop
rorb
dec
stos
test
imul
push
out
add
and
mov
or
arpl
mov
fldt
outsl
inc
jmp
mov
fisubrs
movsb
call
bnd
call
jle
cmp
aaa
or
and
cmp
inc
mov
push
cmp
or
fdivrs
shlb
add
and
repnz
mov
mov
fwait
jo
js
pop
mov
mov
push
dec
or
and
mov
dec
fcompl
loope
call
outsb
sub
sbb
push
cs
add
push
xchg
rcll
movsb
sbb
push
das
imul
dec
push
xor
call
lcall
pop
adc
ss
stos
sub
dec
inc
popf
mov
rcrl
out
xchg
dec
jb
fcmovnb
leave
popa
repnz
xor
sbb
sbb
in
lahf
in
scas
mov
movsb
fucomp
sub
test
cltd
cmp
inc
scas
into
push
pop
aad
push
imul
es
arpl
adc
xchg
adc
and
adc
int3
ss
popf
rorl
push
loopne
lods
lret
aas
outsb
aaa
and
add
cli
cmp
lods
pop
mov
jge
fcompl
adcl
and
or
mov
notl
ss
adcl
adc
cmp
aaa
fstps
xchg
aam
test
nop
dec
cmp
repnz
mov
inc
jmp
jne
cmp
out
clc
lds
xor
xchg
xor
in
in
leave
out
and
xchg
call
push
out
ds
cmpsb
mov
movsb
jle
in
std
shlb
push
stos
in
cmp
adc
push
or
call
pop
shlb
loopne
cwtl
dec
bound
lcall
jl
xchg
leave
in
or
loopne
mov
test
insl
jns
push
cs
pop
mov
gs
xor
push
and
lret
push
or
push
and
imul
inc
es
fs
hlt
pop
xchg
mov
pop
xchg
add
and
ret
mov
out
sub
bswap
sbb
xchg
jp
dec
addb
pop
dec
mov
inc
ja
stos
cmpsl
insl
shll
aam
push
cmpb
and
loop
cmpsb
out
js
and
and
orb
cwtl
shl
mov
ror
rcl
test
gs
stc
fsubl
int
xor
mov
rol
aaa
jne
arpl
lock
jb
inc
stos
in
out
push
test
push
and
jnp
xor
adc
mov
call
add
in
fisubrl
stc
das
jns
adc
popa
loopne
loop
aam
mov
inc
nop
add
add
jge
scas
gs
cmp
sbb
jb
movsb
loop
dec
or
jne
scas
test
adc
nop
inc
imull
adc
lret
scas
and
inc
adc
int
jno
add
dec
mov
fiaddl
cmp
xchg
lcall
in
mov
jl
ss
lea
mov
in
xor
xor
mov
enter
xor
inc
fists
cltd
bts
lret
pop
adc
mov
mov
scas
cmp
movsl
or
dec
push
dec
inc
lret
lods
mov
movb
stc
inc
shll
clc
loope
jecxz
movsb
push
sbb
sbb
and
enter
cld
js
mov
data16
push
push
cwtl
mov
cs
and
jb
es
insl
mov
rcrb
stos
pusha
lret
or
insb
ds
fchs
pop
jo
clc
push
in
sbb
push
loope
insl
sbb
leave
add
add
ja
mov
inc
mov
xor
or
lahf
sbb
daa
jnp
arpl
inc
inc
mov
adc
mov
pop
or
orb
lock
inc
mov
sbb
and
and
add
jb
jge
xchg
pop
jmp
or
dec
sbb
pop
cmp
rclb
cmp
dec
mov
rcll
mov
scas
or
sbb
xchg
leave
stc
repz
and
xor
adc
push
push
scas
mov
push
hlt
xchg
push
mov
dec
mov
js
roll
fcoms
ss
fcompl
insb
xor
add
pop
adc
push
rcrl
js
add
inc
mov
mul
adc
pop
mov
lds
cwtl
mov
cmc
in
sub
add
sbb
mov
or
or
out
popa
inc
mov
mov
and
addr16
add
adc
adc
jl
cmp
es
jnp
fsubrl
jae
fs
iret
loope
ror
ss
sahf
cwtl
rorb
repz
mov
adc
push
pop
je
mov
pushf
insb
xchg
push
dec
aaa
jns
xchg
push
mov
mov
and
int
loop
lock
jle
test
movsb
ja
arpl
inc
pusha
and
ljmp
inc
stos
pop
fs
loopne
popa
lahf
scas
fldt
adc
ss
nop
addl
push
mov
jbe
pop
mov
call
lea
ja
bound
mov
cmp
sbb
jno
adc
cltd
sti
push
xchg
mov
lods
or
push
out
sub
repnz
outsb
xor
push
push
and
repz
insl
in
cmp
xchg
aam
ffree
cmp
lds
jnp
mov
rcr
push
mov
das
pop
or
ret
aas
stos
jo
and
das
in
inc
lahf
pcmpeqw
and
sbb
dec
std
jecxz
int3
cwtl
stos
lods
sbbb
mov
mov
pop
sub
xor
mov
sbb
mov
out
mov
jmp
cmp
std
loope
ljmp
scas
pop
mov
mov
out
cwtl
sbb
mov
and
fs
test
mov
push
mul
adc
sbb
push
inc
lods
lods
lods
push
insl
subb
in
mov
nop
cmp
jg
lock
in
adc
roll
rclb
add
xchg
sbb
je
mov
jae
adc
mov
stc
jp
or
adc
adc
andb
cmpsb
stc
cmc
jae
or
sbb
fcmovbe
outsl
lcall
cli
xchg
jp
xchg
pushf
ljmp
in
ror
xchg
sub
sbb
jecxz
int
or
jl
mov
lds
cmp
ss
sbb
sti
scas
lcall
push
pop
pushf
ret
xchg
cmp
mov
and
lahf
inc
xchg
jns
daa
push
shlb
ds
dec
adc
fstpt
imul
jo
xorl
jno
mov
pusha
loope
repz
dec
ljmp
int3
sbb
int3
in
and
jnp
fisubrl
xchg
jae
out
or
bound
scas
or
dec
fcmove
por
jnp
xchg
jg
cmp
mov
paddq
xor
dec
add
or
int3
dec
and
test
sub
or
les
stos
xchg
pop
leave
and
sarb
dec
jns
push
mov
inc
lods
lcall
push
push
std
sub
in
xchg
cmp
insl
iret
xchg
and
push
insl
clc
xchg
adc
cmp
pop
mov
adc
lea
ss
movsb
mov
lock
andb
pop
push
test
jo
loope
icebp
stc
stc
lods
fcoms
pop
lret
subb
xlat
and
leave
frstor
lock
nop
pop
xor
mov
push
scas
cmp
cwtl
push
inc
dec
ror
in
jp
push
dec
fsts
and
bound
aas
fwait
sbb
outsl
push
sub
lcall
mov
lcall
jb
lret
adc
enter
inc
dec
into
cmpsl
loopne
cmpsl
and
in
mov
enter
inc
mov
jns
pop
sbb
stos
and
mov
sarb
mov
add
hlt
jnp
stos
clc
push
and
aaa
jnp
mov
out
pop
stos
mov
rorb
inc
pop
mov
call
and
dec
in
push
mov
pop
gs
imull
dec
jge
jg,pn
jnp
cmp
push
jl
xchg
mov
jg
or
mov
mov
stos
jl
or
push
mov
dec
mov
movsb
inc
lret
lahf
pop
mov
loope
mov
cmp
mov
sub
int3
cld
pop
mov
mov
test
fbld
jg
mov
mov
and
repz
imul
add
push
jae
push
bound
push
inc
jmp
pop
ljmp
mov
pop
std
fdivrs
adc
and
adc
dec
lods
jge
mov
xchg
xchg
push
dec
in
cmp
cmpb
xchg
or
mov
xchg
sbb
jne
xorb
scas
loop
jne
in
or
sarl
sbb
xchg
sbb
xor
jle
out
xchg
pop
das
rcrl
sub
mov
stc
pop
rclb
mov
inc
dec
push
lcall
lcall
icebp
data16
sbb
popf
sbb
mov
clc
shrb
in
loope
push
pop
sub
jle
jno
pop
mov
les
cwtl
lea
gs
add
adc
std
sarl
aaa
mov
xchg
dec
xchg
mov
push
jne
ds
jb
test
test
pop
lahf
in
xadd
cmp
cmp
pop
sbb
cmp
movsl
cmp
sbb
loope
jne
xchg
fcompl
js
mov
in
dec
dec
inc
inc
in
cmpsb
inc
daa
mov
js
jo
hlt
jle
fcmovb
mov
jo
leave
loop
mov
jnp
xor
addr16
in
adc
das
test
add
jo
adc
sbb
xor
jmp
ljmp
mov
push
mov
inc
add
test
in
add
or
xchg
xlat
push
mov
es
jmp
jnp
adc
or
xchg
pop
xchg
jns
mov
inc
lea
out
xor
mov
out
xchg
jg
lds
sub
jle
mov
cmp
adc
cld
sbb
cltd
outsb
jmp
test
pop
xor
rorl
movl
mov
stos
es
divl
ret
lcall
je
and
mov
and
jge
mov
out
shlb
pop
adc
cmp
dec
cmp
pop
pop
rol
mov
push
sbb
les
inc
sub
into
jne
cs
or
xchg
inc
xor
adc
dec
xchg
lods
mov
mov
in
andb
es
jns
xor
aaa
push
dec
leave
fwait
jmp
sarl
lret
call
push
inc
std
rcll
call
sub
and
imul
andl
jnp
pop
insb
lds
xorl
mov
mov
mov
cmp
jmp
loopne
addl
lcall
ret
pop
sbb
imul
mov
insb
fistps
cmp
jge
jbe
mov
adc
out
jmp
clc
fdivs
jnp
lock
sarb
pop
fdivrl
jb
xchg
xchg
and
outsb
movsl
cld
push
enter
lcall
mov
inc
dec
out
xchg
pusha
fldcw
fistpll
xor
fadds
sub
push
sbb
ds
adc
push
insl
ss
xchg
movsb
inc
into
in
dec
inc
test
mov
mov
inc
jo
mull
pop
push
cltd
sub
ss
mov
fisttpl
sbb
xor
mov
ret
addr16
out
mov
popa
xchg
cli
sbb
jbe
inc
jno
lahf
dec
pushf
jecxz
xchg
loope
clc
daa
shlb
sub
add
out
xor
xchg
popf
pop
adc
and
or
inc
ret
sbb
mov
in
pusha
pop
adc
sbb
add
mov
das
xor
sub
jg
daa
sbb
out
ljmp
xchg
fxch
xor
sub
add
cwtl
sbb
or
in
mov
pop
pop
into
push
push
testl
out
cmc
repnz
xor
xchg
stc
rcrl
jg
cmpsb
sbb
sub
add
sbb
mov
loop
or
fcoml
mov
or
pushf
add
adc
pusha
cwtl
jns
nop
mov
inc
out
and
sub
and
andb
xor
sbb
faddl
in
inc
mov
or
push
jp
dec
aad
icebp
popl
mov
xchg
outsl
mov
outsb
aas
pop
stos
adcl
or
movsl
pusha
xchg
jne
cmp
and
lds
push
pop
mov
mov
sbb
lods
xchg
out
fstps
sub
mov
fnsave
out
stc
dec
add
cmp
mov
fimuls
cmp
inc
adc
fwait
cmc
test
pusha
xorl
cmpsl
mov
dec
test
push
sub
dec
inc
inc
pop
je
mov
jg
leave
push
mov
add
mov
xchg
or
xchg
jg
cwtl
add
xor
and
push
pop
out
loop
arpl
xchg
pusha
jle
mov
mov
mov
in
mov
cmpsb
ret
pusha
aam
mov
stos
jne
movsb
bound
loopne
jecxz
ficoml
mov
inc
inc
inc
sub
pop
test
addl
hlt
and
sahf
and
mov
xchg
or
mov
fsubrl
jle
or
rep
jl
dec
mov
into
sub
out
cmpl
or
adc
cmp
mov
stos
shufps
stos
test
dec
shll
daa
xor
es
add
xchg
pop
push
push
imul
incl
ret
lahf
or
insl
sub
clc
xchg
sub
out
pushl
mov
daa
inc
mov
add
sub
ror
scas
data16
lods
jg
mov
cmp
out
in
mov
leave
int3
push
cltd
popf
jecxz
jb
icebp
sub
ja
mov
jmp
mov
push
adc
mov
movsb
mov
sbb
sbbl
orl
dec
ds
rcll
inc
in
orb
stos
push
jb
test
dec
iret
in
call
cmp
add
loope
jne
pop
mov
push
xchg
in
mov
icebp
repz
aas
mov
jge
test
xchg
imul
adc
pop
cld
inc
push
outsb
inc
inc
adc
push
mov
lret
jle
aaa
imul
lds
lods
loopne
rol
scas
xor
out
sub
in
sbb
arpl
adcl
mov
sub
cmp
xchg
in
lea
adc
ficoms
cmp
ss
cmp
mov
aaa
lds
sbb
xor
inc
inc
test
push
es
and
dec
out
adc
mov
push
popa
movnti
pop
inc
adc
cmpsl
fs
cmp
pop
repnz
cmpsb
andb
js
call
xchg
pop
shrb
jb
add
jl
div
std
in
stos
repz
gs
lea
ja
add
aaa
cmp
sbb
cmp
shrl
call
sub
in
inc
sbb
sbb
sbb
testl
ret
cmpsb
aas
push
mov
repz
loop
lods
or
cmpsb
cmp
je
repz
outsl
ss
out
into
cmp
call
push
lahf
xor
aaa
jns
ds
mov
push
int3
cmpsb
sbb
xor
cmp
mov
hlt
sub
aam
push
xchg
sahf
fisttpll
cmp
xchg
cmp
push
push
and
fcmovu
sbb
dec
xchg
inc
mov
shlb
out
enter
inc
jmp
sub
cmp
push
pop
out
das
aas
stos
and
sbb
jmp
add
fisttpl
jno
mov
shl
rol
cli
xchg
cmp
push
or
orl
andb
lock
sub
xchg
frstor
les
inc
inc
fsubr
gs
mov
add
lds
inc
rol
sahf
in
cmp
dec
mov
jg
add
les
mov
cwtl
xchg
fs
bound
cmp
add
jns
out
adc
mov
mov
stos
mov
arpl
dec
mov
rcrl
and
jmp
leave
sub
loopne
mov
xchg
aam
xor
pop
push
fildll
orl
leave
stos
jge
adc
cwtl
mov
pop
das
xchg
gs
inc
enter
inc
sub
mov
es
adc
mov
xor
fsubs
jns
xchg
mov
sub
adc
pop
in
out
cmp
cs
popa
cld
xchg
inc
fwait
cmp
mov
ror
add
and
pop
jbe
adc
adc
push
inc
ja
lcall
lret
outsl
insb
mov
stos
cwtl
sbb
cwtl
xchg
ret
pop
jg
iret
daa
cli
lret
fs
divl
bound
popa
aaa
pop
data16
mov
movsl
mov
call
scas
jmp
insb
xchg
in
fs
mov
lcall
xor
or
and
int
in
sbb
ret
loopne
cli
mov
mov
in
stos
cmp
bound
mov
inc
xor
mov
ret
xlat
pop
fwait
shll
mov
andb
mov
mov
xchg
dec
rcrl
shlb
ret
xchg
xor
sbb
ret
js
call
sub
es
ja
idiv
mov
cwtl
pop
repz
jno
sbb
xchg
incb
daa
test
loop
rorl
inc
cmpl
ja
out
inc
ja
xor
repz
dec
adc
xchg
jge
shlb
cmp
dec
jmp
stos
mov
popl
int
cli
pop
outsb
in
mull
cmp
sub
and
ss
lahf
sub
xor
test
icebp
fwait
hlt
or
add
in
fsubs
inc
xchg
xlat
adc
xorb
cmp
jmp
outsb
negb
adc
smsw
sbbl
andl
jmp
inc
leave
xor
inc
dec
mov
fisttpl
lea
add
adc
je
shll
pop
sbb
fprem1
sbb
mov
jle
std
cmp
outsl
imul
pop
outsb
jecxz
mov
ss
cwtl
outsb
dec
stc
lock
add
pop
scas
daa
sbb
scas
fsts
xor
push
ficomps
mov
jmp
unpckhps
jecxz
add
loope
xor
and
sub
dec
mov
in
orl
cwtl
rcr
lcall
pop
popf
jecxz
cmp
pop
inc
pushf
imul
inc
leave
rcrl
pushl
fisttpl
cld
push
mov
mov
dec
push
int
sahf
rolb
xchg
dec
and
mov
xor
xor
jge
xor
ftst
cs
jns
lret
xchg
test
scas
repnz
mov
idivl
stos
lret
jge
push
mov
pop
je
add
dec
adc
xor
inc
mov
dec
mov
jb
add
cmpsl
sub
or
popl
mov
inc
in
leave
aam
add
pop
pushf
je
test
ja
sub
rcll
sub
inc
icebp
movsl
sub
jnp
add
mov
fs
mov
lock
addr16
jecxz
arpl
popf
or
pop
sub
and
subb
push
sbb
xor
xor
push
insb
cltd
xor
outsl
pop
aaa
sub
mov
dec
add
pop
mov
xchg
fcompl
stos
mov
or
pop
inc
in
adc
xor
sbb
fisubl
jl
mov
dec
loope
dec
adc
and
lret
ss
adc
xchg
js
test
roll
jo
jg
mov
cld
subb
bound
aaa
and
cmp
inc
divb
rcrl
arpl
adc
cmp
xor
mov
psubsb
sbb
and
mov
dec
shlb
xchg
fldl
loope
xchg
jns
add
mov
psubusw
xor
mov
repz
hlt
lret
mov
std
and
ret
stc
fldenv
ds
cmp
scas
inc
test
insb
ljmp
jmp
dec
adc
incl
rorl
rolb
and
sub
jbe
mov
and
xchg
mov
cwtl
xchg
mov
mov
jge
jnp
pop
push
imul
cmp
jge
sub
stc
dec
out
add
subl
in
mov
rcl
cmp
stc
mov
push
mov
xchg
jle
or
xor
adc
sbb
ror
shlb
sbb
push
mov
stos
mov
scas
repnz
fs
xor
mov
adcb
shl
push
mov
lock
mov
inc
cmp
ljmp
sub
jns
and
popa
mov
cmp
mov
ja
adc
pop
loopne
sbb
icebp
push
test
xlat
cmpsb
fiadds
mov
addr16
in
and
push
mov
inc
or
sti
dec
mov
xchg
sbb
and
idivb
adc
popa
cmp
mov
inc
mov
pop
sub
jnp
push
lret
outsl
lea
dec
push
add
fisttps
shll
pop
inc
xor
lahf
idivb
repnz
addb
aad
pop
lret
dec
addr16
push
push
push
push
or
sub
push
add
or
repnz
sahf
xor
sbb
dec
inc
jg
in
scas
xchg
or
inc
mov
loopne
inc
les
andb
in
lahf
mov
mov
rcrl
cmpsl
mov
test
out
test
dec
in
loop
in
clc
sub
pop
adc
sub
das
popa
js
pop
xchg
mov
aas
xor
inc
inc
sbb
neg
fsubrs
jae
iret
cmp
popf
in
mov
xor
andl
pop
pop
cwtl
jo
dec
xchg
inc
popf
fistl
push
je
mov
mov
dec
arpl
into
sbb
cmp
pop
jge
cmp
loop
xchg
inc
ja
ljmp
xchg
mov
fadds
jge
rcl
cwtl
nop
mov
jno
cmp
imul
mov
dec
jmp
cmp
push
or
std
shll
lods
inc
mov
pop
mov
lds
cld
and
sub
setle
fisubs
sub
into
or
ret
jb
stos
mov
mov
int3
fldt
lea
lds
int
dec
outsl
pop
mov
push
xchg
loope
xchg
aam
sbbl
xchg
mov
imul
sub
sbb
push
xchg
scas
das
jle
rcll
cwtl
mov
add
in
and
dec
xchg
xor
rcrb
mov
cmpsb
pop
in
cwtl
jno
loope
jbe
int3
cli
out
stc
in
fwait
mov
sub
mov
push
mov
adc
imul
pusha
xchg
nop
jnp
mov
js
shrl
movsb
shr
jl
fdivrp
mov
pushf
nop
and
gs
mov
push
sub
pop
pop
push
push
dec
adc
imul
push
xchg
lock
pushf
jmp
pop
push
push
and
sbb
mov
das
in
sub
add
lea
push
jmp
cmp
addr16
xor
fistps
xor
add
std
jl
fsubp
pop
leave
insl
push
outsl
fldenv
jl
mov
popf
ss
aaa
dec
xchg
jmp
pop
mov
pop
aas
inc
call
in
insl
jmp
cmp
sub
aas
icebp
xor
pushf
bound
divb
inc
xchg
dec
lods
dec
int3
aad
data16
clc
dec
mov
jb
pop
mov
mov
bound
cmp
xchg
xchg
cwtl
das
leave
jbe
cmp
int3
mulb
ret
cmpsl
lahf
bound
data16
subl
inc
adc
test
ret
in
mov
out
jbe
xchg
sbb
jmp
scas
test
cli
fistpl
dec
xchg
sete
fimuls
int3
mov
mov
jo
cmp
scas
add
xlat
add
repnz
ret
stos
add
cmpsl
push
cmp
imul
xor
iret
push
inc
and
mov
mov
sbb
stos
pop
rcrb
loopne
jno
popf
xor
mov
nop
xchg
bound
das
shrl
and
shrb
inc
mov
jo
sbb
in
enter
pop
enter
out
scas
push
or
sbbb
fstpl
jo
adc
hlt
shlb
jl
dec
dec
movsl
cld
xlat
jge
inc
inc
sbbb
loope
xchg
stos
cmp
int3
push
mov
enter
pop
push
jb
pop
dec
hlt
aad
leave
fdiv
fdivrs
arpl
cwtl
inc
mov
push
movsb
push
add
or
jo
xchg
sub
ret
rorb
inc
out
pop
mov
movsl
cltd
mov
xor
jmp
psubb
mov
loope
or
inc
rolb
dec
test
rcll
ret
aaa
pop
insb
xchg
loop
and
inc
ljmp
push
mov
cs
js
inc
mov
in
xor
imul
inc
jo
stc
mov
aas
cmp
hlt
hlt
mov
sub
clc
pop
mov
jge
cmp
loop
sbb
jecxz
repnz
mov
dec
daa
or
ret
leave
xlat
pop
loop
mov
aas
cmp
das
mov
or
pusha
inc
mov
fstpt
addr16
fs
pop
insb
pop
pop
daa
push
jp
push
lods
mov
movsb
adc
insl
in
xor
in
mov
inc
inc
mov
mov
xor
jno
jl
sbbb
xchg
test
dec
sub
ret
imul
add
pop
nop
repnz
cld
call
pop
mov
lret
mov
push
xchg
fucomi
mov
mov
adc
stc
and
adc
fstpt
mov
mov
rolb
addr16
nop
lea
mov
inc
mov
mov
fstl
or
push
push
and
add
test
movsb
adc
loopne
pop
cmp
ss
dec
fcmove
mov
jmp
mov
aaa
pop
sub
in
jne
mov
or
movsl
ds
mov
js
repz
pop
lcall
jb
inc
sbb
cltd
test
mov
sti
outsb
insl
push
dec
push
loop
mov
lea
out
loope
xor
cltd
pop
subl
outsl
cs
lds
notl
outsl
ret
jb
xchg
add
mov
push
push
xchg
test
push
mov
jnp
jnp
mull
push
jb
pop
pop
fwait
and
push
jge
fidivs
pop
sbb
push
xchg
repz
pop
mov
add
popa
push
shrb
shl
aaa
xor
or
fwait
and
arpl
inc
ret
in
jecxz
loope
cmc
jmp
mov
and
cs
cmp
hlt
loop
dec
fsubrs
daa
cmc
rolb
fbld
jge
and
icebp
sahf
mov
xor
lret
sti
cmp
dec
pop
cmp
movsl
cwtl
lea
inc
popa
cmc
ss
xchg
mov
in
jb
aad
jbe
jnp
xor
cmp
outsb
cmp
or
add
pop
cmc
pop
lahf
cmp
sbb
lods
pop
aad
popa
iret
das
or
fimull
jmp
xor
sub
enter
lret
sbb
div
adc
cmp
test
fmul
jp
hlt
sbb
in
mov
dec
lcall
push
add
xchg
flds
dec
xor
lret
mov
sbb
push
pop
push
pop
fiadds
xor
add
lahf
pop
push
add
mov
lock
icebp
dec
insl
subl
ret
fwait
inc
push
std
scas
mov
mov
and
jg
orb
pop
pusha
jge
nop
cmp
outsb
cmp
jg
ret
inc
lahf
xor
adc
imul
jmp
inc
adc
insb
dec
adc
cwtl
cli
mov
fucomp
push
xor
push
inc
mov
xchg
insl
cs
jmp
daa
add
stc
daa
cmp
outsl
sub
xchg
jae
bound
mov
call
dec
gs
inc
xlat
popf
push
sahf
and
sub
lret
push
xorl
loop
mov
lret
jl
ds
bound
dec
sub
jp
push
popf
scas
add
mov
dec
inc
out
in
xor
xchg
sti
cmp
negb
lods
mov
mov
pushf
popa
fsubrs
fisubl
mull
adc
xorl
add
dec
sub
inc
int3
dec
lds
adcb
sub
inc
pop
es
xor
jg
cmpl
mov
jne
and
pop
jb
jne
xchg
fldcw
in
mov
dec
add
js
outsl
xchg
jl
scas
mov
pusha
pushf
lcall
fcomip
cwtl
pop
cmp
out
jae
push
xor
pop
push
mov
cmp
cmp
aad
jmp
add
clc
aas
imul
jmp
push
sub
jecxz
xor
mull
cld
mov
sub
jnp
aaa
pop
ret
pop
dec
testl
std
in
jb
lahf
cmpb
jecxz
jne
gs
and
lea
ds
jg
movsl
or
inc
mov
pop
ret
fadds
xchg
shr
pop
jecxz
mov
mov
adc
stos
xchg
dec
insb
aad
dec
clc
mov
lods
and
std
add
test
jne
aas
ret
sub
pop
cmp
add
push
ret
cli
in
insl
push
adc
outsb
cwtl
mov
movsl
mov
roll
sbb
cmpsb
dec
sub
outsl
jge
or
fmuls
inc
repz
iret
mov
mov
test
fs
ret
or
xchg
call
adc
stc
dec
ja
xor
cli
push
inc
sbb
fimuls
xchg
shr
enter
aad
sub
dec
mov
and
ret
int3
hlt
loope
lock
icebp
adcl
mov
mov
xchg
movsb
pop
jb
cs
dec
jbe
cmp
or
les
xor
adc
sub
lret
jno
imul
xchg
xor
cmp
out
lods
int3
inc
mov
popa
jmp
xlat
outsb
mov
fsubr
fstpl
pop
add
sbb
xor
leave
leave
jo
pop
add
sbb
jbe
js
add
and
lods
mov
pop
cmp
mov
test
mov
addb
hlt
push
fmuls
int
xlat
scas
push
orl
aaa
std
popf
push
dec
cwtl
movsb
ss
pushf
popl
sti
lea
xor
movsb
ja
sbb
xbegin
mov
icebp
iret
pop
icebp
pusha
out
jns
movsl
imul
out
push
inc
add
in
push
xor
mov
clc
dec
fdivs
adc
cmp
lods
sub
pop
mov
push
jge
and
bound
xchg
sub
jg
fcmove
aad
cli
pop
loope
ret
out
lret
jg
push
mov
or
xchg
daa
mov
or
dec
imul
lods
gs
push
popf
jp
rol
mov
nop
jns
push
lods
into
cmp
iret
sbb
shll
push
mov
mov
cmp
daa
jne
adc
pop
aam
mov
ja
pop
int3
sbb
sub
push
add
xor
pop
sbbl
int3
std
jmp
jns
aad
insl
pop
xchg
cmpsb
mov
ret
jb
add
hlt
mov
scas
ret
mov
mov
fiaddl
dec
lods
repnz
addb
testl
mov
mov
adc
inc
loopne
lds
inc
pushf
add
pop
jmp
pushf
loope
stos
add
cltd
lret
and
leave
mov
imul
pop
jmp
mov
mov
add
add
arpl
inc
shl
cli
xor
leave
into
push
sbb
or
inc
aad
pop
jmp
cmp
ljmp
cmpsl
mov
cltd
ret
mov
inc
xchg
xchg
and
cltd
mov
xchg
push
pop
repz
xchg
ljmp
aaa
xor
test
xchg
hlt
fildll
mov
add
pop
jae
sbb
add
filds
int
add
movsb
and
cli
xchg
fsubrl
push
filds
dec
mov
mov
sub
or
cmp
inc
divb
cmp
cld
iret
stc
cmp
cmp
lock
addr16
mov
lea
std
push
sarb
adc
push
movsb
jg
adc
ret
xor
rol
lods
lcall
sub
imul
repz
and
mov
sub
int3
test
vpmulhuw
and
ds
mov
dec
jne
lods
ret
mov
pop
lds
clc
sbb
jbe
push
mov
in
push
pop
adc
xchg
push
popf
xchg
cmp
jns
pshufw
add
daa
aad
test
xor
inc
mov
mov
cmp
lret
sti
sbb
dec
idivb
popa
shrb
incb
jnp
stc
lods
out
lret
rorl
adc
popf
mov
inc
adc
outsb
sub
js
mov
iret
roll
mov
scas
add
jb
call
push
mov
xlat
pop
lea
ret
mov
shll
arpl
out
push
and
cs
dec
idiv
mov
leave
int3
outsb
xor
sub
mov
push
rolb
cmp
mov
inc
cmp
fwait
arpl
leave
and
mov
mov
call
scas
loopne
and
push
jb
xchg
faddl
scas
sbb
cmc
fstpt
mulb
test
mov
cwtl
movsb
push
pop
add
mov
addl
and
out
test
push
xchg
sbbb
mov
jno
xchg
ret
insb
sub
hlt
sub
sub
mov
out
adc
sbb
sbb
cmp
jl
xchg
lahf
cld
mov
pop
fistpl
in
es
cltd
mov
mov
jne
xchg
xchg
push
pop
add
out
push
inc
stos
psadbw
mov
dec
out
mov
sbbl
jne
lret
or
repnz
lods
mov
inc
push
popf
cmp
testb
jp
mov
lea
mov
lds
mov
push
jns
out
xor
push
imul
dec
push
mov
popf
inc
imul
jne
xchg
lret
push
jo
gs
push
pop
fwait
repz
jmp
jmp
inc
js
and
loope
loop
icebp
adc
adc
scas
xchg
jae,pt
inc
jno
sarl
push
jp
ret
cmp
ds
pop
cmp
xlat
mul
jmp
in
jge
fistps
icebp
cs
mov
je
pop
jmp
addr16
cmp
pushf
xchg
outsb
int
nop
push
sbb
in
adc
ja
addr16
and
pushf
push
mov
das
dec
mov
sbb
jp
lock
and
push
jns
jb
xchg
xor
jno
pop
movsl
jo
xchg
and
and
pop
mov
dec
das
dec
scas
push
push
inc
in
inc
pop
mov
ret
mov
cmp
stos
loope
sbb
sbb
mov
outsl
dec
xchg
inc
mov
mov
pop
in
mov
sbb
lret
pop
or
push
enter
cwtl
pop
loope
les
mov
cmp
mov
xchg
jp
push
dec
into
loopne
mov
add
push
std
dec
pop
xchg
pop
pop
inc
push
jne
and
add
sbb
mov
stc
push
icebp
push
xchg
mov
add
rolb
push
mov
test
pop
testl
mov
push
add
loope
mov
jne
mov
sub
sub
sarb
lea
and
outsb
mov
mov
in
stos
ja
cmp
sub
add
dec
decb
js
mov
popf
mov
mov
popf
out
out
stos
pop
out
xchg
jge
push
jbe
dec
mov
ds
out
mov
stos
bound
mov
pushf
push
call
or
je
xlat
mov
test
ds
and
cmp
testl
fwait
dec
push
add
dec
cmc
shlb
jo
xchg
lret
ss
pop
jl
inc
lcall
addr16
in
ds
imul
leave
pop
insl
aad
repz
sbb
inc
mov
inc
and
jo
dec
outsl
mov
fisubrl
pushf
in
mov
xchg
or
cmc
xchg
and
cld
add
popa
mov
ror
sub
pop
in
mov
scas
jnp
cli
pop
xchg
adc
xchg
push
push
es
and
push
jmp
ret
sub
mov
mov
mov
aas
movsl
enter
pmulhw
add
cmp
adc
fimull
popa
sbb
cmpsl
insb
push
dec
fwait
leave
enter
mov
or
add
inc
out
xchg
mov
or
xor
mov
jbe
andb
js
inc
stos
xchg
inc
inc
imulb
mov
xchg
outsl
push
mov
jmp
fwait
jge
leave
es
dec
push
mov
jle
inc
push
icebp
stc
je
andl
movb
leave
inc
inc
mov
sbbb
cmc
jecxz
mov
add
mov
pop
pusha
outsb
push
stos
and
ret
mov
dec
sbb
adc
xchg
xchg
mov
ret
sbb
push
fisttps
lods
cmp
sbb
jns
stos
adc
adc
push
jb
iret
sbb
mov
inc
lret
pushf
xor
shrl
sub
mov
cmp
insb
shl
mov
mov
imul
add
loop
ss
loope
cmc
xorl
int
xchg
sbb
roll
cli
fldl
mov
js
jmp
mov
sbb
fsubrl
mov
fld1
mov
and
jmp
pop
sbb
jmp
mov
and
add
xchg
inc
mov
int3
sub
pop
in
push
or
mov
rorb
xor
adc
dec
lds
mov
fdivl
cmp
xchg
fwait
jge
xchg
xchg
and
add
fcmovne
jge
inc
adc
jmp
inc
stos
jg
jp
push
movsl
adc
sub
popf
fcompl
cmp
cmp
push
mov
jae
push
test
or
orb
mov
cmp
enter
sub
dec
xor
dec
mov
hlt
mov
pop
lea
aam
jno
andl
push
mov
insl
lcall
fsubl
shll
addl
jecxz
ret
dec
hlt
bound
push
bound
aaa
les
vucomiss
insb
shlb
sub
pop
mov
cmp
leave
sub
jp
xor
inc
pop
mov
fcomp
cli
jo
loop
mov
lds
outsl
mov
stos
sbb
mov
mov
jno
cmpsb
jnp
imul
sbb
pop
sub
imul
xor
pop
inc
repz
add
jecxz
pop
sti
pop
dec
cmpl
pop
push
push
pusha
mov
out
dec
sub
add
mov
cmp
dec
jo
cmc
pop
xchg
outsl
add
dec
xchg
pop
jge,pn
xor
jo
call
push
fnsave
pop
test
test
mov
sub
sti
xor
mov
sub
loop
and
mov
or
and
cmp
out
mov
ss
or
pop
sbb
out
mov
sub
imul
ret
neg
fnstenv
scas
out
iret
xor
xor
jne
adc
imul
sbb
dec
fstpl
ds
aaa
pop
push
sbb
xor
stos
cmc
xlat
adc
push
mov
mov
xchg
aam
or
sbb
push
mov
insb
or
out
dec
cmp
add
mov
push
mov
scas
or
push
cmp
pushf
iret
xor
adcb
pop
shlb
inc
lahf
adc
xchg
push
mov
xchg
les
dec
sub
test
sub
insb
inc
mov
or
jge
scas
mov
pop
or
inc
sbbb
fstpt
mov
add
mov
xor
sbb
je
clc
ret
jb
jno
lods
lods
pop
lret
mov
xor
dec
jmp
pushf
mov
xchg
dec
rolb
mov
jo
test
lds
test
mov
stc
cwtl
add
lahf
and
fcoms
jae
jb
cs
in
jb
adc
push
mov
lock
ja
shlb
xchg
imul
popa
cmp
mov
mov
push
pop
push
sub
xor
add
lret
pop
rolb
xchg
imul
int3
fcom
shl
mov
inc
sub
out
pop
data16
push
lret
cs
idivb
xlat
sub
fcmovu
sub
sarb
adc
jl
leave
sbb
aaa
fstpl
sbb
lock
call
xor
lret
jmp
loope
push
rcl
inc
cld
fimuls
les
scas
or
jae
movsl
scas
int3
inc
mov
inc
fistl
mov
addb
mov
pusha
subb
out
push
sbb
cmpsb
outsl
push
sti
test
call
pop
scas
dec
xor
ror
pop
out
cwtl
icebp
push
xor
inc
add
inc
mov
or
or
push
fs
fldcw
sbb
mov
stos
loop
loop
mov
cmp
jb
outsl
and
mov
pushf
mov
rolb
cmc
int
mov
cmp
or
mov
pop
gs
jns
fsubrl
in
or
xchg
int
or
sub
adc
scas
popa
pop
insl
mov
mov
and
cmp
mov
push
jnp
xchg
pop
pop
xor
insb
sbb
fmull
push
dec
or
sub
mov
add
aam
mov
mov
ret
fwait
imul
sub
std
jne
int3
inc
mov
pop
jns
push
mov
and
mov
ret
das
call
sbb
es
sahf
test
push
je
dec
mov
in
or
sbb
std
jo
cltd
or
fs
pop
mov
sub
mov
xor
xlat
add
dec
jge
fisttpl
jge
ja
push
push
adc
mov
mov
leave
lret
cmp
cs
mov
adc
pop
jns
js
jp
std
inc
test
aam
xchg
repnz
fimuls
or
xor
out
adc
mov
xor
es
out
mov
cmp
pop
pop
pop
in
out
push
popf
push
pop
pop
jns
movsb
adc
jae
sub
lret
sbb
int
mov
lahf
shlb
sub
mov
push
js
sbb
and
cli
popa
xor
leavew
and
lods
cmpl
stc
cmpsb
scas
dec
cmc
adc
jae
sub
cld
lret
sbb
sub
mov
cld
xlat
shr
xor
jge
dec
mov
rcrb
adc
into
insl
cmp
sub
rcrb
mov
xor
push
sub
mov
aad
xor
loope
lods
or
ljmp
aaa
stc
lods
jecxz
cld
xchg
nop
lea
mov
pop
or
jo
adc
dec
xchg
pop
das
nop
fstpl
sub
rorb
or
outsl
cmp
gs
ror
and
mov
outsl
rclb
sub
int3
jg
es
cmp
xchg
enter
clc
test
cmp
push
adc
mov
adc
ret
push
inc
shlb
sbb
cld
lds
dec
cmp
fwait
bound
mov
fcompl
lahf
add
sub
cmp
inc
addl
mov
cmp
add
rclb
jnp
cmp
sahf
pop
dec
rcrb
std
add
shl
xor
ret
scas
sub
sti
or
sbb
lret
fdivs
pop
fldenv
xor
or
or
sbb
push
clc
lret
xchg
push
push
mov
and
mov
mov
enter
lds
cli
xchg
or
leave
das
adcl
mov
cmp
jp
roll
push
out
xor
rcll
iret
xor
push
adc
shl
mov
outsl
inc
sahf
ljmp
sahf
xchg
sub
scas
adc
cmp
cmpsb
out
adc
gs
sti
push
mov
xchg
mov
mov
push
imul
xchg
cmp
js
jl
jle
dec
jb
pop
mov
mov
pop
shl
pusha
lcall
xor
sub
arpl
movb
push
sbb
or
int3
push
inc
or
pop
lock
jae
xor
inc
dec
sub
imul
dec
fdivrl
add
xor
int
popa
mov
test
add
fxch
sti
adc
cltd
cmpsb
jge
repnz
mov
push
push
fbld
in
loop
jmp
mov
cmp
mov
pop
into
xchg
push
in
mov
pop
outsb
mov
dec
loope
sbb
out
jns
mov
jg
cmp
push
ss
xor
and
or
and
imul
mov
sub
mov
imul
fsubs
jns
jns
jno
or
sbbb
nop
mov
mov
or
std
sub
sbb
mov
aam
test
or
pop
pop
pop
push
xchg
cmp
xor
cmc
mov
adc
pop
rorb
mov
out
or
or
lods
lret
mov
sbb
out
outsl
iret
sbb
jle
jno
xchg
adc
sar
inc
ds
les
xchg
inc
and
in
outsl
sarb
iret
sbb
mov
push
jp
lret
inc
sbb
xchg
sbb
inc
push
ficompl
push
aas
push
leave
je
push
or
gs
cmp
stc
and
xor
out
mov
xor
push
fldl
add
cmpsb
pop
lock
adc
and
leave
mov
pop
pop
add
cld
jge
aaa
xchg
inc
stc
jbe
sbb
add
cmpl
xchg
dec
les
sbb
hlt
xor
ds
inc
or
cmpsl
add
sbb
sbb
pop
push
stos
sub
jl
bound
adcl
pop
int
in
pushf
xor
lods
mov
jmp
sub
cmp
stc
subl
xor
dec
in
fcompl
sub
jns
lds
lahf
pop
out
xor
lock
fs
mov
lret
inc
or
push
and
nop
mov
lea
inc
fistl
imul
mov
das
scas
mov
imul
pop
add
push
cmp
jmp
xor
cltd
cs
inc
fwait
dec
xchg
into
inc
pop
dec
push
or
fiadds
jp
dec
xor
mov
jg
xor
pop
mov
aaa
frstor
negl
int
xor
push
jge
outsl
mov
push
insl
int3
pop
mov
jmp
aas
aas
aad
inc
inc
nop
xchg
int
cmpsl
cmc
hlt
outsl
push
dec
mov
push
jge
ret
sarl
stos
mov
es
adc
out
cs
xchg
add
jo
imul
js
pop
push
jge
push
mov
push
sbb
push
fisttps
repz
clc
fistl
inc
add
aam
call
ss
xor
jmp
addl
and
cmc
mov
sbb
sbb
jns
sub
and
les
sbb
bound
dec
std
fldt
xchg
aad
adc
cmp
mov
mov
ss
pushf
enter
jp
push
cs
mov
or
xchg
mov
in
out
xchg
int3
loop
mov
jg
outsl
lret
jno
mov
adc
jnp
fiadds
icebp
imull
jl
inc
jle
push
jbe
xchg
cmp
push
or
inc
aaa
and
jle
add
cmc
movsl
mov
xchg
add
cmpsl
verr
push
lods
pop
cs
repz
sub
sbb
pop
ss
inc
sahf
or
cli
lods
add
lea
dec
bnd
inc
dec
lds
test
mov
sbb
mov
sbb
add
imul
orb
pop
test
dec
dec
push
imull
push
je
adc
jecxz
pusha
and
xor
test
mov
je
in
adc
xchg
sbb
out
clc
pusha
fldenv
pop
outsl
insb
loopne
stos
sub
cltd
xchg
pop
dec
adc
xchg
scas
cwtl
cmp
test
out
sub
out
jmp
xchg
mov
jae
out
cmpb
icebp
mov
orl
nop
push
mov
cmpsb
add
jl
jmp
push
in
xchg
test
inc
push
xchg
in
mov
dec
pop
lods
mov
sub
imul
movsl
cld
ljmp
arpl
popf
in
sbb
jnp
push
xor
ja
adc
mov
iret
jnp
lds
adc
pop
jbe
push
pop
inc
shll
xchg
test
int
cmp
mov
sub
push
ljmp
lock
mov
jle
aam
push
fsts
mov
call
jmp
inc
scas
pop
inc
and
outsl
jecxz
neg
mov
out
fildl
lods
sti
mov
and
mov
lcall
mov
xchg
in
aam
flds
cmp
push
cmp
pop
cmpsb
cmp
pushf
adc
xchg
mov
cmp
clc
xchg
add
cmpsb
pop
dec
sub
scas
ficoml
daa
dec
jae
insb
jecxz
and
sub
iret
cmp
inc
pop
cmp
sahf
xchg
xor
inc
adc
fsts
das
push
mov
or
add
nop
movsb
in
push
jns
mov
sbb
mov
cmp
mov
or
lahf
pop
lds
inc
sbb
addr16
out
dec
stos
lea
shl
sarl
mov
fcomps
sub
sti
and
js
test
sbb
outsb
xchg
cs
jmp
int
adc
push
inc
out
lods
cld
je
insb
mov
pop
fists
or
xor
fwait
lcall
pusha
sbb
negl
ret
js
decb
mov
pop
adc
pop
cmp
inc
stos
dec
out
xchg
mov
jle
add
cmp
mov
mov
aas
sbb
inc
mov
fbstp
js
sbb
int
push
mov
lock
popf
cmp
mov
fadd
jl
jnp
ja
and
sub
adc
sub
push
adc
jbe
pusha
cmp
xchg
and
push
jg
sub
scas
mov
sub
repz
fistps
inc
mov
jl
fwait
push
js
push
data16
fwait
jnp
ss
and
mov
into
daa
ds
in
out
xor
dec
mov
xor
push
xor
cmp
jb
pop
lods
push
insl
lcall
test
dec
ljmp
dec
popa
test
push
or
addr16
push
ljmp
inc
iret
nop
xor
mov
movl
xchg
xchg
inc
add
mov
mov
mov
cmc
sub
int3
jbe
jb
add
fadds
in
sahf
xor
testl
mov
jae
cmpb
test
rcrb
shll
and
ret
shll
movsl
hlt
dec
sti
xor
mov
add
adc
stos
xchg
int
int3
push
test
movntq
out
mov
inc
gs
pop
jp
test
rcl
fsubl
rcrl
jecxz
pop
out
shlb
cli
push
jecxz
mov
sbb
stos
add
in
mov
pop
add
jl
insl
lahf
mov
adc
pop
xchg
bound
pop
fwait
arpl
jno
or
outsb
test
imull
push
int3
mov
imul
mov
and
adc
cmp
and
mov
or
xor
mov
fsubrl
push
push
mov
hlt
fs
daa
cli
dec
mov
xchg
jg,pn
cmp
stos
mov
jmp
cmp
rcl
mov
cltd
sbb
cs
or
rcl
jns
sbb
rorb
pop
out
idivl
cwtl
pop
bound
jb
dec
inc
jecxz
mov
xlat
adc
aas
repnz
or
add
lea
loope
sub
movsb
push
pop
pop
scas
inc
insl
jge
lret
and
pushf
into
fiaddl
xor
push
add
and
lret
pop
stos
or
out
xchg
lret
mov
xor
dec
or
adc
scas
cmp
push
pop
inc
add
mov
in
mov
fcmovnbe
pop
daa
rcl
or
mov
loopne
push
lcall
sub
jp
dec
outsb
andl
enter
es
jb
ret
out
or
mov
jmp
mov
pop
jmp
lahf
xchg
insl
in
and
add
mov
aas
cmp
mov
sbb
xchg
jl
mov
test
cmp
in
add
mov
adc
fildll
outsl
lds
pop
push
mov
mov
xchg
mov
sti
lahf
data16
daa
pop
jae
stos
inc
push
mov
push
jmp
repz
push
mov
xchg
mov
inc
adc
xor
insl
out
loopne
lahf
stos
jbe
shll
mov
push
jle
test
fwait
or
pop
lds
inc
jno
push
loopne
sbb
inc
sub
movsl
dec
xchg
push
iret
sub
lods
jne
inc
pop
ficoms
rclb
mov
adc
mov
shll
out
jmp
xor
jle
mov
ja
mov
repz
clc
dec
or
add
movsb
cmpl
stc
or
jb
andb
stos
or
push
pop
out
dec
or
xor
jecxz
jmp
mull
je
es
mov
pop
jns
sbb
popa
xor
dec
insl
ficompl
jl
push
data16
movlps
sbb
xchg
rol
dec
sbb
cmp
imul
cli
rorb
or
scas
push
cmp
mov
mov
jbe
sbb
pop
in
mov
cltd
scas
aas
cmp
sbb
pusha
push
icebp
pop
xor
dec
jg
push
in
jmp
movsl
inc
lcall
jle
dec
sbb
or
scas
push
pusha
push
aas
int3
fidivrl
pop
js
push
push
insl
mov
pop
or
mov
jne
notl
jne
xor
leave
stos
mov
repz
dec
fwait
test
adc
or
xor
scas
cmpsb
decl
and
aaa
mov
stc
xchg
cmp
test
dec
inc
sbb
popf
adc
ret
fwait
inc
inc
push
sti
xchg
sahf
jae
mov
jle
pushf
jmp
mov
shlb
loop
mov
fdivrs
and
in
ja
pop
leave
pusha
loope
jle
bound
inc
data16
fwait
xor
inc
inc
cs
dec
inc
xchg
sbb
cli
sahf
inc
addr16
push
pop
std
fsts
cld
mov
dec
pop
push
mov
mov
push
dec
jbe
call
scas
push
push
cmp
and
push
sub
cmp
jbe
cmc
mov
leave
in
mov
in
pop
test
test
or
xor
add
mov
hlt
cwtl
pop
fildl
pop
lret
outsl
cli
xor
js
in
mov
add
and
sbb
outsb
mov
icebp
sub
test
imul
xor
rcll
cltd
push
mov
dec
int
movsl
dec
cmc
push
imulb
jnp
pop
jmp
pop
xor
xchg
add
xor
nop
add
inc
ss
cmp
lret
bound
movsb
mov
and
repnz
inc
jne
pop
jmp
fdivs
sub
rorb
push
imulb
ret
jge
push
jp
stos
cmpsl
fnstcw
andb
and
lret
pushf
mov
pop
adc
pop
ret
inc
pushf
lock
fildll
gs
and
movsb
mov
fcoms
mov
or
inc
stos
insb
daa
negb
js
mov
jne
and
sub
add
mov
xlat
or
pop
addb
mov
icebp
rcrl
aam
mov
xchg
mov
or
shll
mov
cwtl
jge
xor
andb
pop
jb
jge
js
stc
push
xchg
push
jmp
std
mov
xchg
sub
jg
in
jle
jo
cmpsb
jnp
je
jmp
mov
pop
push
mov
rcl
push
sti
or
movsl
mov
faddp
into
and
fadds
cmp
mov
add
pop
jg
add
or
pop
rcll
mov
mov
sub
pusha
hlt
dec
cmp
out
jo
hlt
cmpsl
popa
dec
dec
addr16
and
jle
je
pop
bound
xlat
pop
rorb
sbb
mov
sub
pop
test
add
mov
imul
jns
lock
mov
mov
xchg
cli
jp
mov
in
lahf
test
cli
sub
cwtl
stos
clc
xor
jecxz
mov
sub
fldt
xor
dec
insb
cmpsl
xchg
pusha
repz
xor
pop
clc
or
pop
cltd
cmp
out
jge
ljmp
in
xor
imul
and
mov
add
cltd
lret
rcll
clc
pop
sub
jbe
fwait
push
jnp
xchg
insl
lcall
mov
jo
cmp
sub
or
scas
mov
mov
pusha
fdivs
fistl
xchg
out
cmc
cltd
inc
pop
sahf
cmp
scas
js
xor
push
test
add
loop
dec
jae
jmp
daa
rcrb
mov
pop
aam
dec
decl
mov
dec
jmp
xlat
push
dec
data16
ja
das
shll
movsb
scas
xor
into
sub
mov
insl
adc
inc
fdivrs
xchg
lret
clc
imul
adc
lods
pop
cli
cltd
add
mov
cli
cmc
rolb
test
push
hlt
in
pop
das
dec
scas
add
test
scas
jne
and
jp
add
in
inc
push
mov
and
or
fs
jge
lahf
outsl
nop
dec
insl
lret
mov
adc
add
ja
xchg
dec
jecxz
cmpl
pop
test
xchg
jl
int
pop
pop
insb
mov
xchg
mov
push
ret
xlat
and
fistpll
insl
test
scas
in
sub
mov
xchg
dec
sarb
movsb
rolb
fdivrs
add
aas
out
pop
mov
subb
arpl
lock
dec
popa
test
mov
or
cwtl
lret
or
int
ja
sbb
push
test
movsb
cmpb
cmc
jne
mov
bound
sbb
test
dec
mov
jnp
imul
pop
dec
movsl
sbb
or
xor
stos
or
movsb
pop
pop
sub
es
enter
push
cmp
pop
add
push
lods
loopne
add
mov
sub
cli
and
shl
fnstsw
xchg
adcl
ljmp
jecxz
xlat
jns
mul
mov
jecxz
aad
adc
aaa
adc
or
imul
lock
ret
mov
loope
add
adc
test
pop
aas
mov
and
stc
mov
into
xchg
add
nop
dec
jp
xor
adc
cmp
push
mov
cld
adc
xorb
push
daa
or
mov
dec
xchg
mov
stos
iret
arpl
xchg
jae
aam
out
push
mov
mov
xlat
adc
cmpsb
mov
cmp
into
enter
push
sbb
repnz
cmp
rorb
jnp
mov
jbe
popa
xchg
vcvtdq2pd
mov
jmp
jmp
dec
in
sbb
jnp
fs
adc
xor
loopne
add
es
sbb
pop
out
pop
sub
pop
ficoml
std
sub
or
iret
xor
dec
insl
cmp
aam
mov
stc
stos
fstp
xorl
sti
cmp
xchg
and
cmp
aad
mul
sbb
aaa
jno
adc
dec
sbb
cmc
enter
maskmovq
setae
popf
bound
pop
testl
pop
adc
stos
loopne
cmp
mov
bound
clc
lret
push
cltd
cmpsl
pop
adc
push
mov
lock
push
outsb
mov
andb
cmp
das
subl
movsb
jmp
cmp
push
test
stos
pushf
pop
ja
fwait
in
lahf
mov
test
mov
mov
mov
in
adc
mov
shll
cld
out
lret
jge
and
xor
jno
xor
mov
sti
mov
outsb
sbb
icebp
fimull
xor
insb
icebp
insb
out
movsl
jne
xor
pop
rcrl
jecxz
add
push
fs
in
xor
arpl
es
lds
jo,pt
dec
adc
cmpsb
fmul
sbb
nop
sbb
js
enter
popa
je
or
xor
ds
fistpll
call
or
rep
mov
pop
xor
arpl
mov
mov
fcomip
push
outsl
inc
rcrl
sbb
push
jp
jg
cmc
mov
push
int
dec
push
cmpsb
rorl
sbb
push
test
add
inc
repnz
mov
scas
inc
xchg
and
mov
sub
cmp
pusha
xor
fildll
arpl
rol
clc
js
mov
xchg
leave
sbb
gs
or
xor
sarb
push
loop
movntq
mov
mov
push
cwtl
repnz
inc
cmc
pop
fsubrl
cld
sbbl
bound
mov
icebp
xchg
or
cmp
outsl
repz
sti
fcmovnb
hlt
insb
ror
addr16
mov
lret
rol
cld
rorb
xchg
cmp
mov
lahf
dec
jb
addr16
pop
add
xchg
or
in
mov
pushf
inc
aad
lahf
insl
xor
jb
les
cs
mov
mov
xchg
sbb
addr16
sahf
inc
in
push
loope
pop
pop
outsl
scas
xor
push
imul
xchg
lock
aad
pop
xchg
insl
data16
jge
pop
stos
pop
xor
nop
cmp
insl
mov
adc
arpl
in
std
es
dec
aas
and
cwtl
dec
std
std
mov
mov
jmp
in
mov
popf
leave
js
xchg
mov
xorb
es
loopne
repnz
push
or
mov
stc
sbb
adc
push
or
imul
loope
xchg
mov
mov
popf
mov
xchg
xor
negl
jae
movsl
iret
enter
ror
push
movntq
and
outsl
mov
cmp
xchg
cmp
pop
aaa
lret
pop
pop
repnz
shll
cli
daa
jmp
outsl
xor
scas
loope
sub
sbb
add
js
in
xchg
sarl
lret
sub
outsb
jnp
mov
lahf
bound
xchg
mov
sub
pop
movsb
pop
les
lea
cld
mov
test
mov
jecxz
mov
ja
cmpsb
cmp
repnz
push
adc
out
insb
adc
lcall
adc
divl
and
mov
out
mov
enter
push
fistpll
cmpsb
lcall
rorl
notb
mov
rcrb
and
add
popl
sub
fldl
cmp
std
les
leave
ljmp
dec
adc
jp
aas
jmp
dec
das
das
sub
je
push
adc
xchg
sahf
frndint
stos
popf
scas
inc
fwait
cli
insb
movsb
sbb
arpl
dec
mov
sahf
push
loope
ljmp
mov
and
cmpsb
mov
mov
jmp
mov
jb
sarb
in
jecxz
xor
mov
sbb
in
loope
dec
fstps
and
xchg
js
in
adc
mov
mov
cmp
inc
imul
repnz
xor
jo
mov
sbbl
or
movsl
cmpsb
das
fwait
jge
les
clc
mov
hlt
xchg
cmc
in
insl
jno
xor
cmpl
loope
dec
lock
add
mov
andl
mov
cmc
xchg
ret
adc
rcll
das
push
es
mov
mov
lahf
mov
jo
andb
mov
cs
pop
jbe
cmp
push
sub
enter
int
jae
sub
scas
and
and
mov
fwait
add
fsts
scas
aas
repz
jge
aad
mov
data16
push
sbb
dec
xor
in
bound
fs
mov
pushf
adc
movswl
inc
sub
or
dec
sub
dec
mov
cmp
mov
and
shrb
loopne
mov
pop
dec
cmpsl
pusha
and
mov
cmp
add
data16
pop
inc
push
fdiv
mov
fs
loop
les
push
scas
pop
das
repnz
lret
test
testb
scas
mov
addl
jle
and
scas
mov
nop
or
ret
mov
les
sbb
and
sarb
jae
push
inc
or
dec
enter
inc
pop
call
and
out
iret
push
in
fwait
adc
lods
cwtl
and
and
mov
insb
or
ret
in
loop
jnp
mov
adc
inc
nop
aas
ficompl
outsb
mov
adc
loope
fidivrs
hlt
pop
mov
mov
mov
sub
cmp
or
mov
and
mov
cmp
les
mov
repz
and
pop
jnp
outsl
out
sbb
shlb
cmp
test
out
imul
fldt
push
and
pop
ja
push
sub
loop
sbb
cmp
and
pop
sub
push
stos
or
gs
pop
es
mov
sti
xor
push
or
negl
jo
test
orl
outsl
mov
hlt
inc
jecxz
fistl
clc
fsubl
test
ret
imul
fs
adc
jb
push
repnz
sti
adc
lock
pop
push
out
push
push
lret
xor
test
mov
mov
adc
cltd
mov
add
pop
sub
shr
fwait
or
sub
popf
adc
mov
lret
mov
filds
mov
enter
arpl
mov
pusha
out
cli
jp
push
fdivr
movsl
sbb
xchg
loopne
jmp
stc
push
mov
xchg
fnstcw
testl
rcrb
incb
or
sbb
lods
rorb
jmp
sub
jno
or
pop
lea
jae
subb
lds
mov
rclb
insb
or
adc
ret
jge
mov
dec
rclb
rol
mov
shl
imul
pop
lea
pop
mov
mov
popf
sbb
sbb
ljmp
inc
orb
and
inc
push
fs
xor
add
test
nop
jmp
movsl
out
jge
jne
jnp
stc
ljmp
xchg
out
xorl
rol
pop
das
ficompl
sahf
lahf
insb
fsts
call
push
xor
xchg
movsl
or
pop
hlt
add
push
xlat
mov
enter
mov
mov
mov
inc
popa
jo
fisubs
inc
test
sub
cltd
popa
sti
mov
sub
out
repz
mov
testb
add
in
adc
pop
fsts
mov
into
les
xlat
jmp
ret
mov
cmc
test
aas
mov
lock
mov
add
cmp
cmpsb
adc
lahf
mov
xchg
stos
xor
adc
push
adc
mov
std
loopne
mov
idivb
xchg
lret
addl
jle
push
pop
jp
xor
outsb
jno
shrb
rcl
mov
test
and
inc
test
mov
adc
fs
dec
outsl
push
adc
xchg
int3
inc
rcr
dec
lods
sahf
mov
or
mov
ret
gs
xor
imull
mov
jns
dec
push
movsb
in
sub
xor
stos
xor
adc
mov
push
cmp
and
insb
dec
pop
pop
dec
mov
scas
jns
andb
gs
pushl
xchg
adc
jg
pop
shr
fnstcw
cmc
dec
stc
mov
sub
out
lret
jl
sti
aas
push
inc
clc
popf
cli
push
xchg
test
sub
dec
nop
jmp
imul
insl
or
aas
jae
mov
mov
std
scas
fidivl
xchg
cltd
mov
aaa
sub
push
cwtl
loope
stc
rclb
cld
sub
mov
push
dec
mov
cmp
adc
bound
xor
testl
mov
jle
push
cmp
lret
sub
lods
repz
pop
bound
cmp
mov
imul
cmpsb
sbb
stos
sbb
aam
push
cmpsl
add
test
push
pop
in
jp
ss
cs
jno
iret
mov
fwait
xlat
pop
xor
loop
jg
mov
mov
or
lcall
pop
push
data16
jns
movaps
popf
jne
and
adc
lods
pop
icebp
rclb
setg
inc
jge
aam
ja
mov
xchg
ja
sbb
in
sub
lea
ljmp
cmpsl
dec
cmc
sub
mov
je
xor
shll
imul
sub
cmpsb
ret
add
xor
dec
and
mov
or
cmpxchg
cwtl
hlt
xchg
loop
daa
push
ljmp
sub
clc
xor
sub
and
inc
std
dec
lds
mov
mov
popf
xchg
insb
cli
cmc
hlt
adc
ljmp
adc
push
sub
push
adc
or
inc
add
mov
add
adc
fdivrl
and
adc
int3
sarl
fsub
out
mov
ljmp
cs
push
jle
in
fstpl
mov
and
cmp
mov
roll
andl
dec
in
repnz
mov
ret
enter
sti
sbb
xchg
pop
int
fistpll
xor
cmpsl
pop
or
addr16
notb
cmp
cmpsl
scas
mov
lcall
dec
inc
call
insl
mov
dec
and
scas
nop
movsb
and
push
insl
aad
sbb
insb
insl
pop
ja
incb
push
add
test
jb
in
add
roll
mov
sbb
lret
adc
outsl
fidivs
cmp
sbb
aam
mov
pushf
cmpsl
and
andb
ja
jne
in
sub
push
shlb
sbb
shll
bound
ja
cwtl
repz
std
sub
cmp
aad
inc
push
mov
dec
pop
add
mov
nop
aas
leave
call
std
sbb
push
loopne
fmull
or
fcmovne
aad
mov
dec
lods
lahf
inc
cmp
sti
pop
sbb
pop
daa
inc
fdivrp
jg
dec
scas
jns
mov
or
xchg
into
in
out
inc
push
sub
sub
pop
std
and
fdivl
lds
xor
mov
inc
pop
adc
xchg
je
add
cmp
pop
cmp
sbb
fistpl
jb
push
in
sti
fistl
add
jne
out
and
jmp
repz
jo
or
adc
pop
jb
push
add
je
mov
cmp
jnp
sbb
and
push
lahf
sysenter
mov
pop
dec
xchg
jmp
dec
dec
xor
lea
jle
daa
mov
fidivl
icebp
mov
out
sbb
cmc
sbb
jne
sub
scas
es
fcomps
push
fisubs
sbb
test
lea
xchg
insl
incb
push
push
jp
xchg
lcall
ljmp
test
mov
xor
adc
fsubrl
sbb
mov
inc
mov
inc
mov
push
aad
pusha
mov
pop
adc
dec
aaa
push
xchg
inc
js
or
scas
nop
or
mov
xor
nop
leave
shlb
outsb
sbb
ret
inc
push
inc
insl
enter
jl
imul
xchg
js
lahf
out
int
pop
and
or
and
jne
bound
cs
mov
insb
cmp
sbb
sarl
fmul
dec
inc
sub
in
xchg
mov
cltd
into
mov
mov
inc
shr
fprem
mov
xor
pop
xchg
pop
dec
stos
push
inc
loope
fwait
xchg
repnz
lods
hlt
mov
jbe
pop
and
rolb
pop
fnstsw
jl
dec
pop
inc
xorl
dec
jns
pop
xor
push
mov
lds
cmp
xchg
jge
fisubs
dec
push
leave
lods
push
xor
pop
pop
cmp
or
adc
jne
and
sbb
push
jmp
nop
nop
popa
jnp
xchg
cwtl
push
dec
dec
cli
popf
outsb
mov
inc
sarl
jnp
and
lea
outsb
cmp
push
push
sbb
xor
mov
or
movsb
mov
sub
xchg
ficomps
mov
icebp
pop
xlat
outsl
cmovge
sub
test
je
jo
or
out
lock
dec
mov
adc
dec
xchg
mov
xchg
push
and
jg
into
xchg
mov
aam
jne
xchg
jnp
jecxz
imul
nop
loop
leave
test
inc
rorb
sti
mov
popf
hlt
xchg
jns
cld
adc
push
lahf
je
pop
lret
and
shlb
addr16
jle
cmp
mov
ja
push
hlt
lock
leave
ljmp
testb
das
xchg
jle
cmp
inc
lret
in
insl
push
pushl
lds
mov
xchg
xchg
or
or
insl
adc
pop
and
pop
mov
lahf
shlb
mov
jno
std
stc
xchg
aad
adc
int
popl
clc
sbb
pop
int
push
popf
dec
repnz
ss
dec
mov
aam
repnz
into
test
cmp
or
jge
cmc
sub
and
or
cli
outsb
adc
add
jmp
shrl
dec
roll
mov
jns
pop
adc
or
sbb
fiaddl
sub
mov
dec
xchg
push
enter
mov
jno
push
inc
outsb
int3
mov
cmp
jl
push
mov
fs
push
sbb
mov
pop
mov
push
jecxz
je
push
fists
sti
push
pop
cmp
addr16
adc
cltd
jmp
add
pop
enter
negl
rcrb
adc
gs
mov
jg
sub
fs
imul
pop
xor
push
cmpsb
push
mov
loop
popa
push
lds
stos
push
loopne
jge
insl
and
mov
add
incl
das
jmp
mov
daa
mov
scas
dec
inc
jno
lret
out
sbb
sub
dec
pop
add
mov
nop
adc
mov
adc
or
push
ffree
or
push
add
xor
shl
push
inc
in
outsb
jnp
cmp
add
pop
jmp
mov
scas
mov
cmpsl
inc
mov
les
xchg
orb
dec
jmp
lahf
push
mov
bound
aam
jmp
ret
mov
or
pop
leave
lods
mov
aad
testl
daa
enter
jo
add
push
inc
inc
test
jbe
mov
lea
dec
in
repz
sub
imul
jb
cmp
and
mov
fucomi
in
dec
lcall
inc
ljmp
cmc
insl
mov
mov
xchg
xor
sti
aam
lods
jne
out
jl
mov
subl
cmc
mov
and
or
cs
fcoml
mov
xchg
add
sbb
mov
fwait
decb
push
das
mov
je
testb
and
fs
and
fs
and
cmp
mov
int3
mov
int
push
scas
push
jne
mov
jp
cld
int3
fistpll
adc
cmp
nop
aad
outsb
shll
fisttpl
push
pop
xchg
jp
ret
adc
loope
inc
inc
mov
mov
adc
mov
sbb
insl
jge
or
pop
push
cmp
xor
out
sub
fiadds
mov
jmp
rorb
sti
mov
jecxz
lock
dec
xor
pushf
pop
mov
mov
lcall
cmp
or
mov
cmpsl
and
mov
lcall
jb
push
push
insl
xchg
pop
or
xchg
dec
jmp
fs
out
mul
lods
movsl
jne
das
outsb
scas
das
lret
dec
adc
dec
sub
in
mov
stos
jb
cmp
insl
or
mov
adc
out
inc
sbb
jl
out
int3
push
pop
and
jo
in
xor
rcll
push
iret
lcall
xchg
mov
cmpsb
or
cmp
pop
out
jbe
jge
inc
idivb
sti
jbe
mov
push
out
jg
mov
pop
and
aas
mov
push
lcall
inc
push
fisubrl
push
cmp
sti
iret
or
cmpsb
jno
push
insl
inc
sub
adc
repnz
fcmove
lret
ss
daa
icebp
icebp
cwtl
aas
cmpb
mov
or
dec
jo
cmp
pop
das
sbb
adcl
mov
rorb
or
ror
fcmove
xor
test
jge
int
leave
or
sub
int3
aad
rorl
test
and
addr16
mov
sub
xor
sub
dec
daa
mov
pop
mov
or
lods
dec
mov
inc
addr16
mov
mov
xchg
arpl
or
mov
lea
pop
test
cmp
pop
mov
jmp
idivb
push
mov
clc
sti
xchg
fisttpll
ja
mov
int
jb
mov
push
mov
mov
nop
jne
cmp
jo
ffree
test
jl
cmp
out
popf
fdivl
nop
cmp
dec
xor
lea
cmp
jl
dec
lcall
shlb
rol
test
decb
out
test
fildl
mov
sahf
jo
and
push
test
and
addl
and
dec
stos
jmp
rcrl
jge
adcb
les
xchg
popa
daa
pop
sub
cld
dec
enter
sub
ror
and
push
dec
fsub
stos
lret
adc
int
arpl
mov
ss
in
jno
push
jb
test
int3
clc
leave
or
test
mov
mov
inc
shrb
dec
pop
xchg
push
mov
mov
stos
inc
pop
push
jle
sub
imul
xchg
int3
xor
movsb
cli
mov
jp
jge
nop
fdivl
sub
cltd
dec
outsb
xchg
fsubl
repnz
popa
sbb
pop
clc
hlt
mov
jne
sti
mov
push
negb
inc
pusha
jl
and
cltd
inc
pop
xchg
jae
add
sbb
lds
or
test
mov
xchg
jnp
sub
stos
negb
bound
lret
adc
xchg
popa
loop
cmp
out
pushf
sub
push
rcl
cmp
xor
dec
xor
repz
das
or
movsl
aaa
dec
imul
out
dec
push
clc
jnp
inc
adc
push
lahf
jns
mov
out
imul
gs
es
inc
jnp
xchg
ror
insb
out
sbb
sarl
nop
xor
cli
lods
hlt
and
rorb
fisttps
int
arpl
and
out
and
cmpsl
out
push
lods
dec
add
pop
les
add
shrd
adc
dec
adc
les
leave
fwait
dec
mov
cmp
push
lods
imul
orl
lods
icebp
lods
and
jecxz
mov
adc
mov
push
mov
mov
inc
pop
popf
jmp
inc
jae
cmp
rclb
inc
and
testb
mov
popf
int
sbb
fstpt
dec
mov
dec
mov
pop
mov
xor
mov
cmc
imull
sbb
scas
pop
add
fnsave
aad
and
out
mov
cltd
rcrb
jbe
shll
int
fsubrl
jle
clc
je
sub
xor
test
inc
shl
insl
push
mull
lock
add
sub
add
sbb
jo
xor
xchg
icebp
add
test
mov
lret
in
sub
test
cli
cmpl
mov
test
cli
movsb
and
cmpsb
xor
jo
jmp
fnstsw
pushf
ret
mov
js
mov
mov
test
call
insl
pop
xor
push
roll
inc
cmp
cmpsl
sbbb
sbb
sbb
or
shlb
mov
ds
add
stc
jne
push
and
mov
jle
jmp
addl
in
in
or
add
cmp
in
fs
add
mov
mov
insl
repnz
cmp
loop
stc
stos
xorb
mov
xchg
jae
mov
mov
ljmp
xor
movsb
cmc
loopne
adc
mov
test
pop
and
inc
stos
ds
lods
or
xchg
mov
cs
adc
inc
into
xchg
in
jbe
inc
scas
cmp
or
int
clc
subl
movsl
xchg
orb
add
inc
push
jno
shrb
jne
imul
mov
decl
inc
xchg
push
icebp
mov
icebp
and
add
call
and
and
imul
call
jmp
jno
testl
fistl
or
adcl
adc
stc
jo
pop
jl
push
fimuls
stc
iret
mov
loope
and
shrd
and
pop
lret
repnz
xor
mov
flds
push
cmp
sbb
mov
aam
pop
ret
cmpsl
les
inc
jb
loop
cwtl
fwait
mov
sahf
roll
test
aas
out
call
addb
jl
lods
cmp
mov
loopne
imul
jo
testl
test
and
and
mov
jl
or
pop
add
cmp
add
pop
lret
dec
sub
or
outsl
sub
prefetchw
or
adc
cmp
cmc
pop
sbb
and
rorl
jns
repnz
mov
dec
cmpsl
das
xchg
shrb
js
cmc
and
or
clc
les
pop
jle
adc
fnstcw
push
jl
dec
and
adc
jge
popf
mov
leave
loopne
jmp
jle
into
push
shrb
sub
cli
mov
stos
xorl
xchg
xor
jns
fs
pop
or
test
pop
mov
mov
xchg
arpl
or
sahf
pop
jb
add
je
pop
add
cwtl
push
cltd
push
push
into
mov
insb
ret
enter
int3
jno
push
sbb
iret
mov
fwait
imul
dec
inc
push
call
xor
daa
cld
cld
sbb
rorb
fldl
adc
out
pop
jne
leave
addr16
pop
jbe
mov
das
outsl
sub
addl
cmpsb
ljmp
shl
jne
mov
push
std
inc
adc
sub
data16
test
jecxz
repz
jg
jle
mov
push
dec
pop
movsb
cmpsb
andl
mov
fmull
lahf
inc
push
int3
roll
test
mov
cmpsl
pop
ljmp
cli
mov
mov
jl
mov
fwait
insb
sbb
xchg
enter
mov
ret
subl
adc
xlat
call
jmp
mov
lahf
clc
add
fadd
rorb
push
mov
addb
int
and
jno
adc
xchg
in
test
icebp
push
inc
and
scas
lock
push
xor
mov
inc
jnp
subb
out
stos
iret
and
in
xchg
mov
insl
mov
jns
xchg
pop
mov
fwait
repz
mov
fwait
or
cwtl
ret
fdivr
ja
gs
es
or
inc
out
out
sub
add
jno
orb
ficoml
add
cmpsl
mov
inc
push
sub
out
pushf
inc
ds
sbb
jae
roll
imul
push
mov
push
js
mov
out
call
hlt
pop
les
ljmp
fucomi
jae
lds
test
out
ret
ret
test
add
rolb
jne
inc
or
lock
push
xor
xchg
out
lret
leave
pop
daa
dec
and
in
out
fwait
add
xchg
clc
mov
mov
outsb
or
pop
out
mov
cmc
mov
sbb
dec
sarb
xor
leave
add
test
mov
aaa
stos
push
shrl
mov
jo
cmp
fisttps
sbbb
stos
sub
data16
out
dec
imul
sar
jmp
rcll
push
push
push
pop
and
ja
dec
stos
das
stc
pop
mov
jge
inc
fdivl
iret
cld
pusha
imul
addr16
pop
add
nop
lea
xor
xlat
movsb
xor
cld
repnz
scas
in
inc
dec
push
and
dec
jns
push
mov
push
jno
mov
adc
testb
push
stos
mov
xchg
roll
mov
pop
push
sti
inc
out
aas
dec
sbb
cli
hlt
push
xor
fisubrl
cld
out
ret
ss
push
mov
les
movsb
out
pop
xchg
inc
das
jle
add
push
cwtl
sbb
jno
inc
out
mov
pop
xor
dec
dec
rcrl
ret
pop
cli
aad
sbb
inc
xor
inc
push
mov
and
popf
push
mov
push
xchg
xchg
xor
sbb
adc
and
jmp
and
lret
fisttps
daa
insb
ret
stos
inc
or
call
and
ret
movsb
sub
push
jge
xchg
cld
and
mov
imul
outsl
cmp
mov
mov
and
mov
lea
mov
rcr
ss
xchg
call
push
push
jne
ljmp
shr
lds
mov
dec
cmc
inc
push
clc
lret
aaa
or
xor
jecxz
add
mov
rcrl
pop
gs
stc
xchg
xor
test
dec
push
fucom
shr
pusha
movsl
push
or
ljmp
addr16
push
fdivs
aam
cmp
sbb
pushf
stos
xorb
inc
or
out
and
mov
into
aad
in
mov
cmpsl
push
je
xor
iret
shrb
cs
and
push
add
cwtl
js
jge
adc
std
dec
cld
mov
aam
xchg
jecxz
xchg
jp
lock
leave
in
push
pusha
and
lods
pusha
push
rcrl
pop
pop
bound
xlat
or
sbb
cmpsl
cmp
and
push
in
and
hlt
shlb
xor
mov
adc
dec
inc
xor
fs
dec
jle
jle
dec
sbb
mov
xor
push
sbb
xlat
mov
add
mov
arpl
mov
mov
lods
xorl
mov
mov
in
fisttpl
mov
dec
mov
mov
sub
add
arpl
xorl
jnp
add
mov
sbbb
lret
inc
mov
add
insl
pop
js
mov
movsl
push
and
mov
push
testb
fidivrs
into
decb
push
fmuls
aad
adc
cmp
cmp
cmp
in
add
mov
mov
fs
pop
pop
aaa
inc
bound
add
test
hlt
jns
outsl
js
je
in
and
sarb
incl
rcrb
stc
lret
xor
dec
cmp
and
addr16
mov
mov
out
movsl
in
jle
xchg
aad
xrelease
jp
mov
sahf
loop
iret
lcall
cld
shlb
pusha
adc
mov
popa
push
push
add
dec
imul
mov
in
and
scas
xlat
push
dec
pop
gs
scas
inc
pop
outsl
int
scas
sub
and
out
or
jmp
push
iret
clc
pop
outsl
jae
je
jae
adc
mov
add
jnp
dec
lds
sar
leave
jp
notb
popf
mov
sub
gs
fstps
mov
pop
lahf
aam
pop
mov
mov
jmp
inc
pop
insb
jge
aaa
and
ja
testl
shlb
xchg
cmp
pop
mov
mov
push
out
jg
sub
dec
es
dec
push
jns
mov
loop
pop
fmul
push
push
int3
add
js
nop
mov
push
test
movsl
sbb
lods
fcmovbe
aam
pop
popf
fnsave
inc
mov
stc
andl
fisubrl
dec
cmc
in
aad
add
or
fisubrl
add
test
imul
jno
imul
in
xchg
mov
pusha
push
pop
mov
push
loope
sbb
mov
pop
adc
popf
push
add
je
mov
cs
fsts
cld
mov
ljmp
sbb
aas
inc
int
movsl
loop
adc
pusha
xor
xor
enter
mov
cmp
imul
lahf
dec
mov
repz
stc
test
sbb
into
add
add
fildl
mov
and
cld
imul
hlt
push
cli
adc
test
int
ljmp
mov
xchg
or
and
push
shlb
or
leave
sbb
mov
xchg
fbstp
xor
adc
or
jo
mov
inc
pop
pop
mov
cmc
popf
mov
vsubpd
in
test
into
cmp
mov
mov
cmp
pop
leave
sti
push
cs
pop
mov
xor
mov
out
insl
into
sbb
ficoml
jmp
xor
lret
dec
xchg
or
in
sub
sbb
outsb
xchg
inc
adc
xlat
ss
ja
or
add
rorl
scas
xor
jns
dec
outsw
xor
in
cs
pushf
mov
push
pop
or
movsb
sti
xlat
arpl
stos
xor
stc
popa
pop
leave
lcall
pop
imul
out
jns
andb
daa
add
push
add
cmp
adc
sbb
fcomp
adc
add
int3
sbb
pop
and
lods
mov
jae
mov
xchg
adc
jnp
and
sub
push
inc
movsl
mov
lret
sbb
sti
jo
gs
dec
mov
cmp
sub
repz
pop
and
sbb
pop
lret
adc
cmp
out
aaa
lcall
jmp
sar
sub
stc
add
jo
inc
jmp
lahf
dec
repz
sbb
stc
xchg
push
jp
rcrl
lcall
lahf
insb
stos
jne
in
push
dec
enter
and
loopne
xchg
scas
in
arpl
jle
and
adc
je
inc
mov
aad
adc
dec
sub
pop
out
and
testl
mov
das
and
xor
xchg
mov
adc
movsb
aaa
ljmp
push
nop
cmp
pop
push
inc
pop
jae
mov
cmp
mov
push
mov
push
jb
lods
and
and
jne
jl
mov
adc
sub
pop
shrl
pop
outsb
aaa
test
rcrb
aad
loope
sbb
jne
mov
xor
sbb
xor
jle
jl
in
pushf
cmpsb
xchg
mov
outsb
cmp
bound
fimuls
xchg
arpl
add
jg
sub
cmp
js
fsubrl
mov
je
test
lock
lahf
pop
xchg
cmc
sbb
test
cmp
adc
dec
push
and
push
push
fbstp
push
in
adc
ret
repnz
out
pop
lods
fsts
bound
test
mov
les
adc
sub
jbe
add
cwtl
push
imul
adc
leave
sub
sahf
fidivs
jecxz
or
pusha
cmp
out
sbb
xchg
mov
mov
test
dec
loope
repnz
push
fnsave
sub
in
xchg
clc
call
in
sar
iret
in
es
add
js
mov
testl
in
popf
mov
cltd
mov
cmpsl
or
popa
sbb
push
and
or
popf
call
dec
xor
shrl
xchg
and
negl
cmp
int3
ds
iret
dec
repz
inc
push
jns
mov
xlat
xchg
push
fstpl
push
out
int3
aam
xor
sarl
xchg
mov
je
push
fists
dec
pop
inc
mov
pop
insb
mov
pop
outsl
outsl
dec
jno
xor
sub
cmp
out
inc
pop
in
hlt
ja
lods
xchg
jl
mov
aam
scas
dec
dec
sub
es
pop
scas
rorb
jg
fwait
call
lock
out
or
mov
cmp
lea
lahf
mov
xchg
lea
mov
fcmovbe
repz
fldcw
loop
jb
cmp
push
sbb
mul
jl
movsb
xor
pop
sub
add
cmp
les
dec
dec
xor
int3
fimull
mov
jg
xchg
pop
lcall
call
les
lea
xchg
lea
inc
rorb
imul
sub
jns
frstor
push
xchg
sub
sub
sub
test
pop
shlb
mov
addr16
sbb
fwait
repnz
pop
adcl
mov
or
shlb
cli
or
movsl
adc
ret
cmpsb
mov
and
cltd
fwait
mov
std
push
push
pop
lods
dec
sbb
add
test
lret
fistl
jb
push
cwtl
sbb
add
lret
mov
lods
lret
lea
add
ljmp
mov
mov
negb
scas
leave
fisubl
lret
cld
loopne
xchg
xchg
bound
adc
jge
mov
dec
mov
push
dec
adc
cld
iret
xbegin
movsl
popa
xlat
xor
outsb
pcmpeqb
enter
mov
mov
xor
repz
popf
imul
jo
sarb
or
dec
sbb
and
pop
jnp
sub
ret
jmp
dec
ret
pop
loope
dec
daa
mov
dec
aam
mov
lods
sbb
dec
pop
cmp
lods
cvtpi2ps
fnsave
fnstenv
cmp
inc
lods
jmp
ret
mov
not
cmp
mov
stos
lds
cwtl
ss
out
add
push
out
push
incl
mov
xchg
loope
andb
inc
and
imul
test
fs
jmp
add
imul
pop
loop
lock
enter
sbb
xchg
mov
je
fnstenv
adc
cmpsl
lahf
lahf
repnz
shl
sahf
pop
fstpl
and
mov
in
into
jnp
andl
fwait
addb
fsubrs
xor
shrl
mov
sbb
xchg
cmpl
mov
xchg
jmp
call
daa
inc
clc
mov
xchg
test
xchg
inc
add
sub
or
mov
jecxz
push
cwtl
jno
repz
lds
cmp
call
mov
loop
cs
and
out
pop
xchg
jecxz
mov
imul
jno
outsb
testb
xor
mov
inc
cmp
fcmovb
pusha
and
add
push
adc
test
mov
cmc
xchg
fwait
addb
xor
lock
xor
in
and
mov
xor
mov
add
es
cmp
into
cmpb
adcl
ret
aad
xor
adc
jo
mov
stc
scas
jecxz
enter
xor
push
xor
int
jae
outsb
mov
cmp
pop
arpl
and
xor
sub
add
inc
adc
mov
sub
outsb
subb
sahf
mov
fldcw
fdivs
and
cwtl
std
or
ja
pop
inc
scas
cmc
sbb
pop
mov
aaa
clc
push
test
test
adc
sbbb
mov
les
add
mov
mov
xchg
arpl
mov
lock
sub
sarl
add
dec
pop
inc
mov
cli
sub
adc
and
xchg
js
xorl
popaw
aas
xchg
or
into
and
in
lret
sbbl
test
mov
nop
in
ret
xchg
pushf
jmp
sahf
enter
lds
and
out
mov
dec
pop
xor
fwait
mov
fisttpl
ret
loop
stos
inc
jge
jle
add
cld
js
push
mov
test
add
xchg
dec
in
stos
lret
lods
sti
pop
or
push
iret
fucomip
mov
sbb
fmuls
lret
mov
cld
xor
ja
dec
jno
jne
test
in
jle
or
add
mov
push
mov
and
jnp
loop
leave
je
add
int3
mov
jmp
fiaddl
out
or
nop
jnp
fstpt
mov
clc
shrb
cmpsb
inc
mov
cmp
xor
cltd
leave
mov
jle
dec
int
inc
add
pop
push
dec
sbb
pop
jns
push
adc
or
test
cmp
subb
nop
pop
jecxz
mov
in
sbb
rorb
sub
int3
mov
fs
das
outsl
sbbl
sub
daa
xchg
xchg
test
push
cmp
sub
sbb
mov
jmp
fs
sbb
dec
sub
in
add
dec
imul
stos
out
clc
call
scas
jge
adc
jg
pop
and
testl
sub
adc
sub
mov
lock
mov
dec
popf
push
jp
inc
sub
int3
bswap
enter
ret
pop
mov
dec
sbb
and
rolb
push
jle
fldcw
sbb
out
js
xor
cmpb
icebp
mov
dec
insl
jp
pop
das
mov
daa
mov
adc
push
mov
out
aas
addr16
ror
stos
add
pop
push
ja
in
mov
aas
push
.byte
pop
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
mov
or
test
add
in
add
add
add
add
add
nop
add
sbbb
add
push
add
adcb
add
push
add
dec
add
dec
add
add
add
add
add
add
mov
add
xor
add
adc
add
in
add
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
inc
add
dec
add
inc
add
add
add
add
add
add
add
add
add
push
or
in
add
add
add
add
add
push
add
andb
push
add
jns
dec
add
outsl
add
add
add
add
add
or
add
add
or
adc
add
in
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
data16
data16
data16
data16
data16
add
aam
cltd
aam
cltd
int3
popf
nop
enter
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
data16
add
mov
mov
lds
ret
stos
icebp
ret
stos
icebp
ret
stos
hlt
lds
int
sti
sarb
sarb
sarb
sarb
sarb
into
cltd
xchg
xchg
data16
add
mov
test
pushf
cmpb
leave
mov
fdivl
ljmp
shll
aad
cli
aam
cli
shll
shlb
shrl
xchg
xchg
data16
add
test
jl
bound
inc
arpl
pop
cmp
aaa
arpl
jp
inc
cmpsb
sbbl
jecxz
xchg
in
cmpsl
cmc
shll
aad
cli
aam
cli
aam
cli
shll
shlb
xchg
xchg
data16
add
add
inc
sub
push
sub
sub
dec
inc
inc
dec
inc
sub
dec
cmp
pop
dec
aaa
mov
lcall
mov
aam
cli
aad
cli
aad
cli
aam
cli
aam
stc
shlb
xchg
xchg
data16
add
pop
cmp
xor
test
lea
push
paddsb
sub
out
xor
inc
and
inc
sub
mov
xchg
les
aad
cli
xlat
mov
aam
cli
shll
xchg
xchg
data16
add
jl
bound
sub
ja
mov
out
push
dec
lods
mov
stc
paddsb
daa
lock
inc
and
arpl
lcall
cmpsl
cmc
shll
aad
cli
aad
cli
aad
std
sarb
data16
add
add
add
add
push
xor
fsts
sti
lea
lea
movsl
mov
mov
in
mov
mov
les
lods
mov
lock
lock
mov
leave
mov
lock
stc
aad
cli
fdivrs
mov
xchg
xchg
data16
add
add
add
add
das
fiadds
out
push
in
sar
div
cld
idiv
in
loope
int
fwait
test
sbb
ljmp
int3
out
inc
xor
cmpsb
sbbl
not
mov
fnstcw
xlat
mov
xchg
xchg
data16
add
add
jne
pop
mov
sub
push
push
cli
idiv
cli
idiv
cld
idiv
cld
repz
loopne
fwait
test
xor
xor
jp
inc
leave
mov
lock
mov
sarb
data16
add
add
push
xor
out
push
rolb
push
out
clc
jmp
cld
idiv
std
cld
cld
repz
out
out
call
loope
test
xchg
mov
stc
inc
inc
dec
push
xor
mov
mov
int
cli
fnstcw
fnstcw
xchg
xchg
data16
add
mov
mov
sub
mov
imul
clc
call
mov
sar
bnd
repz
test
cld
les
jp
rdseed
xor
cmpsb
sbbl
cli
fnstcw
fcmovnb
std
sarb
data16
add
inc
mov
pushf
inc
pop
sarb
lret
jmp
repz
xchg
pushf
inc
pop
mov
movsl
std
in
std
fmulp
hlt
lds
xchg
subl
sbb
and
pop
inc
aad
xchg
int
stc
fadd
sti
faddp
cli
fcmovnb
sti
sarb
data16
add
daa
pushf
inc
pop
pushf
inc
pop
sarb
les
fadd
in
mov
pop
add
or
jns
add
add
push
in
mov
cld
les
jge
popa
dec
xor
dec
xor
pop
dec
aaa
cmpsl
mov
shlb
vpsrld
data16
add
daa
mov
mov
rorl
in
mov
cli
lret
mov
mov
pop
or
addr16
add
pop
add
pop
add
or
addr16
add
insb
push
in
stos
xchg
in
jge
arpl
jp
sbb
push
pop
dec
aaa
leave
mov
sti
faddp
sti
sti
std
sarb
data16
add
dec
and
fisubs
cmp
cwtl
test
stos
xchg
repz
pushf
inc
pop
jns
add
add
add
add
add
add
popa
dec
out
mov
jge
arpl
jg
xor
pop
dec
aaa
mov
xor
mov
loope
sti
std
sarb
data16
add
dec
and
fisubs
cmp
mov
xchg
in
mov
test
in
mov
jp
mov
aas
mov
sub
repz
out
mov
jge
insb
push
xor
aas
inc
sbb
inc
cmpsl
mov
fadd
cld
loope
cli
loope
cld
loope
std
sarb
data16
add
rcll
in
pushf
shl
les
neg
shl
movsl
mov
xchg
fsts
cli
fdivrs
mov
stos
xchg
out
subl
inc
mov
inc
sub
shll
jecxz
cld
jecxz
cli
loope
std
sarb
data16
add
mov
in
xor
ret
jmp
int3
cli
in
cli
in
in
cmpsl
jmp
mov
repz
call
icebp
ret
stos
in
mov
clc
mov
rorl
pop
int
inc
mov
inc
sub
in
mov
in
std
in
sti
in
cld
jecxz
std
sarb
data16
add
add
dec
xor
push
in
xor
pushf
shl
in
push
in
repz
lock
repz
repz
call
clc
ret
test
std
leave
lods
stc
mov
pop
int
pop
int
dec
bound
insl
push
inc
leave
mov
mul
lret
std
out
std
out
std
in
sti
in
std
sarb
data16
add
add
test
push
in
xchg
bnd
hlt
cmpsb
test
repz
repz
push
push
stc
repz
bnd
jmp
fadd
repz
jns
popa
jb
je
int
inc
sub
call
std
call
std
out
std
in
std
sarb
data16
add
add
add
add
cmp
sti
mov
lret
int3
clc
in
in
stc
cld
repz
cld
idiv
cld
idiv
lock
fadd
shll
movsl
popa
jb
je
hlt
je
cmp
nop
jns
fadd
mov
out
std
jmp
std
call
cld
out
std
sarb
data16
add
pop
cmp
cltd
mov
cmpsb
test
mov
lock
mov
out
lods
aam
cltd
mov
cmpb
sbb
mov
mov
je
bound
test
fadd
mov
out
cld
in
fdivrp
in
fdivrp
jmp
std
jmp
clc
out
sti
sarb
data16
add
cmp
scas
mov
cmpsb
mov
cmpsb
mov
cmpsb
test
mov
xchg
mov
mov
mov
jb
cmp
nop
jns
call
fdivr
in
loope
in
loope
in
fdivrp
jmp
mull
stc
mov
data16
test
arpl
xchg
xchg
lret
lock
mov
cltd
mov
mov
mov
jl
insb
inc
pop
cmp
fscale
out
in
icebp
out
out
in
out
in
in
loope
mov
mulb
fiadds
data16
add
test
nop
jns
arpl
arpl
popa
push
inc
pop
dec
aaa
pop
cmp
pop
mov
fsincos
icebp
jmp
repz
std
out
in
out
in
mov
mulb
rolb
add
rclb
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
hlt
jmp
repz
std
out
in
cmpsl
dec
xchg
mov
data16
call
std
cld
cld
cli
cld
idiv
cli
idiv
cli
idiv
stc
repz
stc
repz
div
push
out
std
cmc
in
std
cmc
in
std
repz
out
shll
lcall
add
add
rorb
std
std
cli
cli
cli
cli
cli
cli
div
div
div
repz
in
in
in
in
in
in
in
in
in
in
in
in
out
out
in
out
out
out
shll
data16
add
dec
xchg
rorb
rclb
into
cltd
sti
into
cltd
sti
into
cltd
repz
lahf
repz
lahf
repz
lahf
ljmp
ret
ret
mov
out
movsl
data16
incl
add
incb
add
incb
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
add
add
add
and
sbb
add
add
test
jo
or
mov
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
or
test
or
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
aaa
out
mov
sbbb
or
ds
shl
fldt
clc
xchg
inc
inc
mov
in
rorb
ret
mov
xchg
push
inc
and
jmp
add
push
aam
cmp
xchg
jnp
fnsave
adc
shlb
push
push
in
faddl
mov
push
mov
mov
push
push
xor
pop
std
outsb
cmp
mov
in
shlb
mov
icebp
loope
subl
pop
out
jmp
sbb
jns
icebp
shrl
nop
lods
mov
popa
nop
jl
jg
arpl
lock
mov
fldl
push
hlt
mov
addr16
mov
inc
and
pop
cmpsl
cmp
cmp
mov
fidivs
loop
sbb
dec
xor
adc
test
outsb
pop
shll
dec
mov
mov
pop
adc
mov
mov
sub
decb
sahf
jno
ljmp
cmc
lods
jbe
ror
adc
rol
ds
lret
xchg
add
xchg
dec
add
xchg
push
cmpsl
or
js
cmp
lea
dec
push
xor
into
inc
jmp
jbe
dec
fcompl
xchg
mov
jno
pop
sbb
cmp
out
xchg
lret
mov
xchg
repnz
xchg
jbe
cld
movsb
frstor
cmc
or
sbb
sbb
test
inc
sbb
mov
out
push
lret
movsl
repnz
cld
subl
or
mov
sub
sbb
das
dec
scas
out
mov
xor
fists
pop
std
mov
push
xor
sti
stc
mov
jg
outsl
mulb
pop
cltd
pusha
adc
lock
push
fwait
cmp
and
dec
jne
mov
and
ficoml
dec
jae
mov
daa
in
pop
adc
inc
loope
stos
dec
push
inc
adc
mov
or
jecxz
inc
mov
jae
in
popa
adc
mov
xchg
jmp
scas
inc
mov
xor
imul
xchg
push
pop
push
mov
stc
sbb
ds
or
lret
into
adc
dec
movaps
ljmp
and
inc
fldcw
addr16
mov
cwtl
pop
iret
scas
or
ss
xchg
and
xchg
mov
fsubrs
lea
mov
inc
movsl
mov
inc
xchg
sub
mov
adc
cmp
mov
xchg
push
mov
addr16
cmpsb
popf
push
sbb
addb
mov
add
push
pop
xlat
pop
mov
sbb
mov
mov
cmpsb
adc
cmp
hlt
mov
out
ja
cli
or
xor
sub
pusha
mov
or
xchg
xchg
decb
enter
adc
pop
push
jno
and
cmp
scas
loopne
out
scas
xor
dec
lds
mov
cmp
cmp
mov
ret
frstor
mov
mov
mov
add
dec
adc
sub
sbb
aad
ficoms
shll
lods
sbb
mov
dec
mov
pop
mov
mov
jb
mov
cltd
int
xor
xor
adc
std
inc
outsb
cmp
cmp
int3
pop
mov
pop
aaa
flds
mov
les
popf
packuswb
fisttpl
in
gs
rcrl
sbbb
and
jns
pop
add
push
jge
popa
mov
push
xchg
inc
xor
fidivrl
imul
nop
ljmp
jge
xor
push
xor
shlb
push
gs
loopne
mov
xor
push
mov
cmp
dec
sti
pushf
cmc
add
xor
jmp
sub
fldenv
mov
mov
enter
mov
mov
lods
cmc
fdivrs
mov
lret
push
sarb
sub
jg
or
into
inc
mov
cli
jg
iret
push
sub
jnp
add
lds
rcl
sub
fsubrp
xchg
add
lods
pusha
pop
jge
fldcw
imul
xchg
ret
mov
mov
repz
pop
jae
mov
sbb
jl
adc
fwait
add
adc
xor
test
adc
push
inc
fwait
push
mov
mov
clc
pop
push
mov
or
rclb
cmp
imul
rol
das
mov
outsb
mov
inc
daa
and
mov
rorl
aas
mov
out
jns
filds
inc
int
fcmovnbe
jb
icebp
and
icebp
add
mov
pop
pop
or
imul
jmp
adc
shr
fwait
mov
enter
imul
mov
add
imull
adc
pop
and
jnp
out
scas
jno
mov
movsl
ficomps
insb
stos
pop
imul
push
cli
loope
xchg
mov
cs
repnz
xchg
ret
js
dec
rolb
les
or
mov
gs
mov
dec
movsl
mov
and
es
lds
push
sbb
gs
hlt
mov
insb
in
test
sub
add
jle
xor
add
sahf
dec
inc
xchg
jo
jl
or
test
iret
adc
popf
iret
mov
fdivr
test
xchg
shrl
mov
push
in
out
xchg
jb
mov
jns
cltd
cli
cld
or
xchg
fmull
or
and
pop
in
subb
mov
push
xor
rorb
lret
test
shl
pop
test
repz
dec
cmpsb
sbb
mov
mov
xchg
jne
cwtl
clc
mov
rcl
sbb
add
data16
iret
inc
mov
inc
out
stos
add
mov
movsl
lret
jno
lcall
sbb
mov
inc
add
xchg
mov
sahf
adc
and
aam
pop
outsl
xchg
inc
xor
and
or
mov
cli
pop
clc
out
outsl
ljmp
push
mov
lahf
dec
sub
inc
scas
dec
mov
inc
sub
adcl
fucom
mov
popf
clc
scas
in
aas
inc
popa
pop
js
fs
aam
jge
push
cmpsb
outsb
dec
mov
or
bound
cmp
cmp
aad
jl
push
lods
inc
dec
inc
sub
dec
xor
xor
and
fmul
into
push
ss
imul
fwait
pop
cmpsl
fmull
flds
call
shrl
inc
jbe
mov
add
insl
hlt
jae
mov
or
add
sub
movsl
out
mov
push
lock
push
loop
jmp
arpl
xchg
add
nop
arpl
mov
in
and
push
mov
and
jno
xor
mov
insb
or
inc
push
loope
mov
mov
adc
jle
cmp
nop
std
jae
lret
xor
std
arpl
insb
popf
jmp
in
inc
test
jb
xor
jle
int
mov
gs
adc
push
sbb
mov
mov
in
flds
adc
add
add
mov
inc
add
lret
or
lret
out
addr16
test
sub
add
shl
shlb
dec
and
mov
iret
xor
jo
out
in
dec
sbb
and
mov
xchg
addr16
mov
dec
dec
pop
aaa
push
ljmp
cwtl
mov
rcrl
test
gs
pop
fldl
rclb
add
jp
inc
cmp
out
stc
pop
lods
fisubs
in
sub
add
mov
mov
mov
or
int
ja
fcomi
test
ret
xlat
or
inc
cmp
lods
js
wrmsr
mov
daa
or
pop
xchg
cmp
sbb
out
popf
mov
cmp
testb
dec
je
movb
lcall
add
sub
pusha
push
out
cmpsl
in
pop
adc
xor
mov
mov
stc
fisubrl
les
popl
stc
sub
cmc
push
mov
mov
leave
fwait
ds
mov
movb
in
lcall
scas
lahf
sbb
xchg
xchg
call
sub
adc
dec
sub
fldln2
loop
lahf
xor
jp
sbb
push
data16
push
adc
jl
add
jae
dec
outsb
int
jae
pop
pop
or
inc
adc
mov
push
ret
adc
inc
xchg
test
xor
adc
push
mov
xchg
aad
imul
and
sbb
negl
add
data16
and
in
and
dec
lret
dec
pop
jmp
jecxz
sbb
and
ss
jb
push
stos
scas
insl
insl
cmp
cmp
mov
jecxz
sahf
leave
loop
hlt
pop
jb
insl
mov
in
mov
jle
loop
and
dec
mov
pop
icebp
iret
fsubr
adc
xchg
neg
mov
inc
mov
sahf
notb
decb
dec
movups
lret
xchg
xchg
sub
add
add
mov
mov
push
lds
cvtps2pd
out
sbb
repnz
pop
push
xor
ret
jp
cltd
xchg
jo
cwtl
and
or
jmp
ret
iret
mov
mov
and
mov
lret
cmpsb
add
mov
arpl
and
xor
inc
push
xchg
adcb
mov
iret
sbb
and
sbb
enter
test
cmc
mov
into
ds
push
cmp
test
fwait
lea
push
xor
jnp
nop
shrl
shrb
mov
mov
dec
or
add
xor
stc
hlt
aaa
xor
adc
test
and
dec
pop
data16
out
dec
sarl
std
insb
call
xor
xor
xor
nop
ret
push
rcll
xchg
sahf
daa
pop
cs
and
push
jns
fmuls
stc
jmp
xchg
push
clc
jmp
push
dec
leave
movsl
lret
pop
push
fsubs
cld
inc
scas
ljmp
shll
dec
or
int
popa
repnz
cmp
pop
push
cmp
sbb
fcmovnu
inc
loopw
cs
jae
lcall
pop
ret
orl
popf
sub
bound
mov
popa
xor
cltd
mov
and
aaa
push
xor
scas
jecxz
lret
jge
loop
cmp
int
or
or
popa
daa
lahf
mov
xor
out
into
jg
js
xor
adc
ret
xchg
jmp
dec
or
repnz
cmp
add
int3
leave
movsl
dec
mov
cmpl
je
cld
lods
into
or
jo
mov
dec
mov
cmp
jno
dec
lock
cmp
fdivrp
fldcw
xor
and
fcmovnbe
hlt
or
pop
jp
daa
out
mov
mov
arpl
out
cmpl
lods
sbb
iret
inc
jecxz
lds
mov
inc
or
lahf
inc
cmp
xor
pop
pusha
out
stos
push
jne
or
std
xor
mov
adc
imul
pusha
jmp
push
in
mov
mov
data16
cwtl
lods
add
inc
cmp
cltd
push
popf
xlat
not
out
ret
fwait
out
cmp
imul
bsr
adc
andl
inc
sub
cltd
data16
mov
aam
ret
mov
dec
sbb
pop
adc
dec
cwtl
movl
push
not
test
jmp
loope
int
jl
sub
ja
xchg
fstp
arpl
adc
and
in
inc
les
js
fsubrl
dec
cs
xor
mov
std
push
xor
sar
fwait
mov
xlat
mov
mov
cli
push
mov
lahf
ja
call
mov
mov
subb
dec
aas
out
xchg
adc
mov
fisubrl
inc
mov
dec
add
pop
xor
mov
test
cmp
push
stc
in
out
cltd
js
insl
pop
inc
mov
mov
dec
push
pop
xor
in
sbb
addr16
and
fwait
jle
dec
stos
xor
sbb
scas
pop
mov
outsl
push
mov
xchg
pop
rcrl
fs
hlt
pop
cli
incl
popa
or
cli
test
and
ds
or
add
inc
ss
dec
or
test
push
decl
mov
orb
fstl
out
fwait
push
add
adc
int
mov
mov
sub
inc
and
popf
pcmpeqd
ss
test
and
popf
lea
int
xchg
xchg
jbe
adc
pop
mov
xor
js
out
mov
and
add
icebp
push
test
mov
adc
adc
adc
mov
jle
push
pop
jge
lret
push
push
fcomp
cli
xchg
add
imul
sbb
xchg
jne
cmp
scas
aam
lret
jmp
jmp
insl
loope
fnstsw
sub
adc
pop
into
fwait
xor
div
insl
ja
mov
adc
out
aam
enter
icebp
xchg
pop
sahf
xor
loop
push
mov
sbb
stos
scas
push
movsl
mov
cli
and
mov
pop
mov
rcll
repnz
jae
push
jne
orl
insb
sti
insl
adc
ret
pop
loopne
cmp
mov
push
sub
repnz
imul
repnz
sub
xchg
pop
jcxz
icebp
or
cmp
pop
ret
jp
std
outsb
fld
jnp
inc
sub
andl
sbbb
nop
jmp
inc
mov
jmp
test
xchg
gs
loope
aaa
fs
jo
adc
mov
inc
mov
mov
fbstp
loopne
aaa
dec
adc
enter
std
or
mov
loopne
inc
sub
cmp
pop
lea
orl
shl
fsub
mov
lods
xor
scas
imul
push
cwtl
xor
movb
mov
cwtl
push
jmp
pop
xchg
dec
subl
test
je
pop
mov
mov
ljmp
xlat
mov
ret
xchg
iret
add
rclb
loopne
mov
rclb
popa
ljmp
testl
cltd
jb
cmp
push
dec
inc
idivl
jne
lods
pop
scas
adc
push
dec
jae
pop
icebp
repz
inc
add
jp
add
test
jbe
sbb
pop
mov
sbb
jl
cmpsb
fwait
sbb
dec
xor
xor
pop
std
push
insl
lods
call
cmp
scas
jmp
push
push
fsubl
cmc
popl
iret
bound
push
mov
dec
or
dec
dec
or
or
lahf
rcrl
test
mov
test
loopne
push
je
sbbl
dec
in
clc
out
adc
jg
mov
inc
lods
sbb
cwtl
mov
xchg
aas
imulb
push
push
cltd
mov
xchg
xchg
ret
je
fistpl
icebp
push
test
rcrl
and
in
pop
mov
cltd
adc
xchg
push
insl
loop
and
fiaddl
data16
fildl
aas
insl
shll
pusha
sbbb
jecxz
pop
sub
cwtl
cmc
decl
jmp
js
jle
push
pop
and
mov
nop
out
out
stc
dec
shll
cltd
cmpsb
fmuls
mov
fimull
lret
sub
stos
add
das
lods
ss
insb
dec
les
push
mov
xor
xor
popf
or
pop
xchg
int
push
frstor
push
or
xchg
xchg
push
sahf
mov
jae
cs
cmc
jo
fidivs
jb
and
dec
mov
pop
mov
sub
add
fs
pop
pop
push
push
push
cmp
xchg
cmc
sub
repz
mov
mov
sbb
xor
ficomps
int3
jmp
or
addr16
loopne
mov
sti
aam
daa
outsb
xor
xor
loope
adc
sub
add
xor
cltd
dec
push
out
cs
in
sub
out
jb
cs
bound
daa
and
out
sub
nop
enter
fcomp
mov
mov
xadd
jnp
rorl
push
push
adc
icebp
and
xor
and
nop
jbe
xchg
scas
mov
jbe
iret
leave
sub
stos
xchg
pushf
inc
mov
mov
iret
pop
push
mov
lods
pop
out
fistpll
mov
dec
les
adc
adc
and
dec
dec
inc
push
xchg
fidivrl
cmp
movsl
adc
xchg
mov
mov
push
loope
out
jecxz
scas
cmp
push
inc
or
pop
fmull
ret
pop
das
addr16
sub
shll
jno
push
icebp
mov
andb
je
dec
in
dec
cwtl
push
sub
push
fists
xchg
mov
sbb
shll
mov
mov
call
and
std
xor
std
mov
push
cmp
cmovge
ret
cmp
or
xor
iret
inc
pop
cld
sarb
insb
lcall
addr16
add
jno
mov
sbb
or
mov
cmpsb
cmpsb
mov
cmpsb
jmp
std
aad
pusha
gs
mov
xor
jbe
filds
dec
sub
or
imul
repz
fdiv
xchg
nop
mov
pop
or
dec
jne
sbb
xor
orl
jno
mov
and
mov
and
sbb
movl
mov
xor
lahf
push
mov
xor
xor
sub
mov
or
outsb
pop
jmp
mull
in
mov
loop
in
xchg
test
mov
pop
imul
das
or
lret
lcall
fisttps
dec
inc
xor
stos
adcl
xchg
mov
jle
std
jae
jp
lret
insb
loop
adc
or
es
mov
mull
lods
dec
stos
dec
inc
xchg
filds
cmpsl
jno
mov
fwait
dec
xchg
cli
fisubl
mov
adc
fnsave
imul
pusha
cmp
pushf
stos
mov
pop
repz
or
pop
stos
xor
pusha
mov
mov
mov
test
xor
dec
negb
ds
fwait
mov
pop
jg
cmpsb
pop
and
pop
jo
push
push
add
insb
andl
imul
sub
loop
cmc
cmp
fisubrs
and
sarb
pop
sbb
outsl
sbb
mov
inc
add
popf
xor
scas
notl
test
xor
cmc
subb
in
mov
lret
icebp
sub
sbbl
jno
lods
sub
out
ja
xor
loope
lods
mov
out
outsl
inc
je
xchg
xchg
pop
mov
jnp
sub
sbb
es
xchg
cld
pusha
inc
and
jbe
inc
push
movsb
xchg
jecxz
pop
std
roll
shlb
sub
mov
mov
sbbb
fs
gs
or
xchg
mov
sti
pop
popa
lods
inc
jbe
sub
xorb
repnz
fbstp
xchg
mov
xor
mov
cmp
iret
stos
xchg
jns
add
inc
mov
pusha
xchg
pop
repz
imul
sbbb
das
stos
dec
arpl
push
mov
cs
jp
dec
inc
jae
xchg
test
xchg
mov
xor
out
mov
mov
or
push
and
int3
mov
fwait
into
scas
mov
sub
lret
inc
lods
ja
mov
jge
clc
push
andl
mov
adc
scas
fucom
jle
mov
push
test
jg
xlat
jno
mov
push
shll
test
aam
jmp
stos
lods
jmp
push
movsl
into
stos
fwait
xchg
lods
arpl
pushl
xor
ficoml
int3
mov
dec
hlt
fs
mov
fidivl
lahf
cmpl
js
std
int3
xor
and
mov
push
xchg
inc
fstl
fadd
out
adc
gs
fs
add
add
xchg
inc
sub
adc
push
popa
mov
arpl
mov
and
mov
sbb
sbb
shrb
jnp
and
lea
divl
cmp
sbb
popf
ud2
dec
scas
push
mov
dec
cli
movsb
adc
mov
jg
pop
sub
imul
xor
std
pop
inc
jo
fbld
push
movsb
lcall
outsl
mov
xchg
mov
call
xchg
fsubrp
and
sti
lret
pop
add
movsb
push
ljmp
xchg
sbb
adc
loopne
or
mov
cs
pop
mov
adc
cmpsl
lcall
xchg
shrb
push
push
cmpsb
pop
jne
cmp
scas
push
inc
mov
bound
pop
sbb
adc
adc
dec
jno
pop
mov
pop
push
adc
dec
jl
sub
inc
out
mov
lea
pop
xchg
sub
popa
iret
cmp
mov
dec
dec
movsl
out
int3
std
subb
xlat
ljmp
nop
outsb
jmp
shl
pop
xchg
rorb
inc
in
inc
mov
xchg
mov
lcall
or
add
mov
js
push
insb
cmp
dec
mov
cld
out
jb
imul
push
xor
push
xchg
dec
movsb
lcall
loop
test
push
sbb
jmp
outsl
jge
lret
mov
jmp
es
pop
pextrw
jbe
jns
in
push
shlb
pop
push
sub
mov
mov
fstps
sbbb
js
rcll
aad
xchg
mov
push
sti
pop
add
xchg
inc
int3
and
or
add
push
xor
cld
add
cmpsl
rorl
cmpsl
push
std
pusha
aam
das
dec
lahf
aad
sub
push
andl
mov
out
push
jb
jecxz
icebp
adc
pop
mov
mov
xchg
sahf
fisttps
aas
fstpl
out
data16
imul
or
mov
popf
and
mov
cs
and
sub
jb
fmuls
ljmp
aas
imul
dec
dec
cmp
and
or
xor
mov
sbb
cmp
out
andb
repz
ljmp
jge
inc
notl
mov
adc
push
add
and
rcrl
in
sti
inc
fsub
sub
jle
sbb
or
cmpsb
scas
rol
test
divl
addr16
mov
pop
sbb
leave
lret
xchg
int3
xchg
hlt
test
les
aad
popl
int3
sbb
cmp
or
jle
and
inc
xor
bswap
jo
xor
push
fcmovnbe
insl
ds
rcrl
pop
sbb
mov
daa
mov
jae
std
cs
lcall
fmuls
mov
mov
pop
add
dec
into
cmp
hlt
subb
push
pop
xor
outsl
test
leave
fldcw
and
sub
push
mov
movsl
inc
jecxz
lds
fcoms
push
dec
push
push
sbb
mov
adc
mov
js
sub
fadds
and
lock
mov
mov
scas
js
adc
add
sbb
mov
dec
add
lods
cli
pushf
je
inc
ljmp
divl
adc
inc
loope
jecxz
xchg
incb
aam
jns
push
nop
push
cmp
sbb
sub
mov
or
adc
xor
cmp
cmp
orb
bnd
inc
adc
and
jge
imul
sub
jae
or
popa
sub
sub
lock
or
pop
je
out
fsubrl
dec
xchg
mov
mov
jmp
push
int3
cld
into
int3
sbb
adc
imulb
pusha
and
lods
ret
inc
mov
or
sub
xchg
ficoms
add
in
in
pop
mov
pushf
insb
adc
pop
cmp
movsl
jns
adc
xor
bound
movsl
outsb
mov
iret
push
push
pop
pusha
jecxz
aas
mov
mov
inc
inc
mov
sbbl
movsb
insl
push
gs
mov
inc
dec
push
push
dec
cmp
and
push
icebp
jns
or
in
add
adc
add
mov
pop
imul
in
int
je
out
push
out
xchg
sbb
outsl
mov
xor
mov
xchg
xchg
mov
int
sub
push
dec
popf
xchg
pop
inc
fs
ljmp
lea
ja
cs
adc
sbb
inc
xchg
call
or
mov
hlt
lcall
orl
pop
xchg
push
call
and
push
jl
aad
ljmp
faddl
adc
sub
lret
loopne
xchg
or
mov
loope
xchg
inc
push
add
mov
cmp
cmpsb
dec
sub
xchg
in
adc
enter
daa
sub
fcomip
or
sti
mov
adc
stc
testb
push
je
roll
adc
icebp
data16
add
leave
clc
sbb
shrb
aam
and
lock
ds
mov
ret
adc
jb
idivl
int
add
int
pop
push
inc
loop
inc
or
sbb
stos
stos
shl
mov
rcl
sub
push
fs
xor
cmp
and
rcrl
data16
insb
mov
adc
sbb
push
dec
xor
loope
ret
adc
faddl
pop
ror
cmp
mov
mov
push
mov
orb
xor
fwait
xorl
movsl
push
cmpsl
cmpsb
iret
popa
push
outsl
jae
mov
into
push
shlb
push
mov
nop
mov
outsb
mov
cmpsb
int3
out
aaa
mov
adc
in
es
xlat
bound
sub
pop
rcrl
inc
lahf
mov
mov
nop
push
lock
mov
mov
icebp
outsb
push
mov
ljmp
movb
push
rcl
imul
push
dec
cmpsb
out
arpl
pop
cmp
lods
negl
xchg
push
negl
rcl
mov
mov
popf
iret
shrl
fs
pop
sbb
cmpsb
lods
push
jae
incl
jbe
adc
mull
sbb
fistpl
mov
std
lock
add
cmp
loop
cwtl
out
cld
imul
and
ror
xchg
cmpb
mov
or
int
xchg
jno
fidivl
in
adc
scas
lea
enter
inc
pop
les
jg
fucomi
adc
into
add
mov
into
fmull
bound
dec
ffree
mov
push
mov
add
or
clc
adc
insb
push
lock
mov
into
test
mov
mov
rdpmc
dec
aas
cmpsb
mov
jmp
mov
xchg
subb
lods
jmp
cli
ficoms
aas
mov
dec
xchg
aam
mov
in
repnz
and
jae
sbb
std
xchg
xor
cmp
cmp
push
lods
out
push
cmc
mov
cld
sub
pop
ret
mov
add
pop
jg
out
les
clc
cld
or
xchg
sahf
loope
shl
insb
add
or
loope
shll
cmpsl
lret
cmc
pop
mov
mov
sbb
test
fists
rol
mov
imulb
sub
lods
in
adc
pop
popa
scas
jle
sbb
jne
pop
mov
scas
inc
cli
cmp
fistl
add
fmulp
stos
jp
outsl
and
mov
jns
shll
mov
clc
stos
mov
and
cmp
lret
xor
dec
out
les
lcall
ret
shrb
lea
mov
fisubrl
arpl
cwtl
jns
xorl
stos
jb
push
lock
mov
mov
jecxz
cmc
push
repnz
add
outsl
in
orb
and
xlat
mov
sub
add
or
mov
out
xchg
iret
dec
cmpsb
mov
adc
dec
mov
out
pushf
imul
cmp
dec
cmp
sti
mov
add
inc
cwtl
sti
movsl
dec
xor
clc
outsl
sub
xchg
or
and
jle
popa
rorb
fwait
push
sbb
mov
imulb
and
adc
mov
sbb
dec
and
fs
push
dec
ja
add
nop
cwtl
mov
adc
loope
and
faddl
test
pop
cmp
cmp
scas
leave
pop
cmpb
call
jb
lcall
es
clc
dec
arpl
out
xor
iret
push
mov
xor
jbe
aam
into
mov
scas
mov
mov
push
lods
cmp
in
mov
lcall
pusha
sub
js
sub
xchg
mov
cmp
jb
inc
xchg
sub
sub
jb
movsl
cwtl
jmp
pop
stos
mov
loop
mov
outsb
test
xchg
lea
add
jp
mov
cmc
jl
out
fsts
inc
ss
iret
or
pushf
xchg
jg
ret
lret
ss
cmp
sbb
xchg
js
test
add
sahf
ja
or
mov
fadds
stos
sub
cmpb
clc
mov
mov
mov
inc
lea
sahf
cli
jg
mov
xchg
adc
aaa
push
mov
xor
insb
daa
push
push
test
js
xchg
cld
add
mov
xchg
push
xcrypt-ofb
cmpsl
in
test
mov
out
ret
sub
mov
sbb
xor
lret
mov
sbb
push
mov
iret
xchg
jmp
iret
outsl
xor
lock
jge
fcom
or
adcl
xchg
mov
mov
lret
jnp
xchg
mov
rep
jne
xchg
sbb
loop
lods
stos
jns
rorb
mov
pop
insl
dec
xchg
adc
test
push
test
cs
xor
jecxz
lret
jge
xchg
mov
sbb
sahf
mov
bound
cld
push
imul
imul
stos
add
fmull
jo
fdivrl
mov
cmp
and
xchg
xchg
lcall
ljmp
call
and
mov
in
mov
and
insl
sub
push
pushf
fwait
mov
jecxz
push
lret
and
cmp
je
fldt
and
dec
fs
push
and
int3
pop
pop
cmpsl
mov
dec
roll
cmp
fcoml
lret
mov
inc
adc
jns
xchg
lahf
mov
fidivrs
ror
mov
divl
data16
jns
mov
mov
mov
cwtl
sahf
inc
repnz
push
jmp
jmp
lahf
in
sbb
push
lret
test
cs
cltd
aas
and
and
mov
lods
inc
sbb
mov
aad
das
pop
xchg
push
inc
aaa
lds
sbb
mov
cmp
iret
lcall
leave
cmp
xlat
stc
push
sub
aaa
mov
orl
push
mov
dec
add
sub
sahf
cmp
in
sub
int
mov
out
ss
cmp
or
leave
scas
leave
push
cmp
popa
pop
jmp
mov
lods
sbb
mov
dec
pop
aaa
dec
in
aas
jle
dec
jg
adc
stos
jge
ret
pop
repnz
ja
cmp
lahf
adc
and
jmp
sbb
mov
lds
iret
ljmp
xor
sub
ljmp
push
insl
std
popa
loop
mov
mov
inc
test
dec
mov
add
add
xlat
adc
fs
push
pusha
out
or
mov
inc
inc
mov
add
inc
daa
sbb
dec
dec
imul
hlt
mov
and
or
mov
inc
sbb
iret
popf
cltd
mov
sub
jmp
xchg
dec
xorl
insl
mov
ret
nop
sub
dec
push
xor
mov
or
fcomi
jno
dec
dec
xchg
xchg
into
xlat
scas
imul
ljmp
ds
push
das
pushf
dec
insb
and
out
push
insb
sahf
mov
int
or
insb
icebp
orb
fucomip
push
pop
jo
sahf
lods
pop
orb
xor
mov
fldt
pop
adcb
sbb
scas
inc
cmp
mov
sbb
aad
xchg
sub
mov
mov
jge
dec
pop
sbb
ss
cmc
or
fincstp
push
in
sahf
inc
dec
jecxz
repnz
cs
fwait
pop
pop
frstor
sti
xchg
mov
jns
jl
dec
sbb
push
pop
test
mov
notl
pop
add
ss
lcall
cmp
xchg
pop
mov
jne
in
pushf
out
std
inc
add
add
leave
xchg
xlat
call
sarb
fs
loop
dec
pop
push
add
cmp
es
mov
push
ficompl
mov
cmp
scas
gs
cmpsl
idivl
int3
mov
inc
mov
mov
mov
mov
dec
aad
sbb
lret
mov
sub
or
lahf
lods
sub
pop
shll
push
aad
pop
hlt
sbb
xchg
scas
clc
rolb
repz
cltd
fcomi
add
jnp
out
xchg
loop
push
int3
adcb
enter
pushf
adc
leave
fbld
rorb
jmp
cmp
scas
and
xchg
mov
adc
aas
insl
jnp
xchg
sahf
js
adcb
mov
and
fwait
ss
push
adc
mov
cmp
in
in
add
xchg
fs
arpl
sti
pop
mov
stos
mov
and
test
out
or
jne
dec
in
mov
std
scas
mov
daa
repnz
ljmp
ja
inc
jg
movl
mov
nop
pushf
pop
adcb
jne
mov
imul
test
adc
inc
rcll
addl
loop
std
mov
sbb
dec
rcr
pop
test
and
stos
out
loop
push
mov
sahf
movsl
push
dec
rcl
and
shrb
ja
inc
lea
xchg
mov
arpl
mov
or
loopne
outsb
jo
push
fisubrs
mov
pop
stc
mov
mov
push
mov
push
dec
int3
out
ja
int
push
pushf
loop
pushf
push
insb
and
xor
adc
pop
adc
mov
in
enter
scas
jl
aaa
cmp
add
pop
shll
jl
xor
test
and
sbb
jp
inc
out
in
in
test
jecxz
imul
jo,pn
lea
pop
pop
mov
aas
in
jmp
fs
mov
mov
mov
fildll
dec
and
arpl
dec
outsl
adcl
sbb
imul
pop
push
cs
aam
nop
aam
push
push
or
dec
mov
arpl
cltd
add
sub
jns
rcr
jnp
sub
imul
mov
pop
dec
push
mov
je
aam
xor
in
mov
mov
mov
mov
cmc
pop
dec
push
sub
pop
daa
mov
ja
inc
and
mov
fisttps
push
je
or
addr16
mov
mov
incb
cmp
mulb
sub
daa
xchg
sbbl
cltd
cs
outsb
call
icebp
ss
mov
dec
or
mov
pop
iret
adc
test
or
roll
mov
in
nop
add
pop
adc
adc
test
jnp
jo
push
or
push
push
push
jns
bound
xchg
mov
mov
mov
jp
push
subl
mov
cmp
rorl
adc
push
orb
jae
jecxz
call
and
lods
pop
aaa
fldenv
clc
dec
dec
sbb
insb
loopne
mov
shl
mov
orb
stc
sub
popf
mov
negb
mov
push
out
push
sub
popf
fsubp
inc
lds
in
mov
or
xchg
mov
dec
std
sub
xor
in
xchg
test
mov
iret
mov
push
dec
js
dec
repz
add
dec
rcrl
imul
jae
cmpsb
fstpl
sbb
inc
mov
andl
gs
xor
repnz
xchg
gs
inc
imul
in
orb
lock
jne
xchg
int
pop
push
pop
jle
add
fldenv
sbb
in
mov
push
imul
in
or
lods
lret
iret
test
enter
jmp
dec
jne
sub
mov
xchg
es
mov
dec
push
jl
cmc
lret
out
mov
ja
cs
mov
or
xchg
dec
lcall
push
mov
and
fwait
dec
ljmp
call
inc
xor
mov
addr16
cmp
and
or
mov
pop
movsl
cli
sti
cmpl
xor
sbb
fucomip
mov
mov
or
dec
cs
push
jae
push
mov
scas
sub
ds
jbe
mov
pop
out
out
xchg
fcoml
ret
stc
sbb
pop
pushf
bnd
ja
in
fists
adc
xor
nop
add
pusha
jae
stc
add
lds
movsl
cmpsb
sbb
mov
lods
and
lret
icebp
sub
pop
daa
sbb
jle
in
pusha
cmp
loope
dec
mov
or
stc
mov
jb
mov
in
mov
inc
xchg
mov
pop
dec
dec
js
sbb
movsl
jnp
mov
or
data16
add
outsb
mov
add
sub
xchg
fsub
lret
xchg
sti
dec
dec
sbb
jbe
loope
jb
jp
xchg
test
imull
adc
mov
lahf
xchg
aas
xlat
dec
dec
sub
lods
lock
lea
xchg
repnz
movsl
fidivs
jmp
dec
pop
sti
sti
test
pop
xor
cmp
int
inc
jbe
les
ret
inc
es
fdivrl
push
xchg
shrb
mov
and
push
mul
jp
mov
test
lods
pop
in
mov
fidivrs
mov
lcall
push
sub
xor
sahf
cmp
dec
cld
fistpll
mov
dec
and
cmp
pop
adc
xor
sbb
lret
jg
outsb
jmp
adc
mov
dec
lret
aam
cmc
std
xchg
inc
mov
jb
inc
addr16
rcrb
es
jbe
push
in
jnp
inc
divb
clc
add
pop
sub
mov
icebp
and
xchg
push
lret
ret
daa
cs
out
inc
lcall
cmp
inc
pop
cmpsl
lahf
inc
mov
mov
jae
mov
pusha
loop
fsubrl
xchg
xchg
daa
cmp
inc
sti
sbb
push
jmp
aas
pop
jae
fldl
fdivrs
inc
jle
xorb
ljmp
loope
push
sub
sub
int3
xor
lret
sbb
jne
lods
jmp
jno
adc
mov
mov
orl
stc
stos
mov
fs
out
pusha
xor
lods
pop
outsb
pop
sti
add
inc
out
xchg
xchg
and
push
neg
notb
sbb
cs
push
or
dec
jo
dec
pop
add
or
retw
fwait
mov
sub
in
sub
popa
cmp
push
cmp
jno
add
idiv
push
loope
rdtsc
and
sub
ss
rolb
inc
rorb
pandn
inc
pop
mov
add
cmp
jl
ror
jo
cwtl
jecxz
adc
addr16
loope
popf
xorl
mov
push
and
sbb
lea
xchg
jg
orps
add
mov
mov
adc
fwait
xchg
sbb
push
mov
std
es
fistpl
lret
xchg
es
cwtl
pop
jle
in
mov
and
add
xchg
dec
xchg
negb
or
add
lret
push
rolb
xorb
stos
leave
mov
enter
xchg
scas
and
jl
std
mov
test
lock
subb
cmp
in
mov
iret
lahf
fs
rcrb
mov
test
jmp
xchg
cmp
jmp
ljmp
aad
lods
sub
xor
jne
adc
and
cmp
add
xchg
jae
push
sbb
pop
xchg
mov
lcall
ja
and
sbb
in
sbb
adc
cmp
leave
fwait
clc
cmp
mov
je
add
das
xchg
push
push
xor
enter
mov
pop
mov
sahf
push
adc
movsb
adc
cmp
bound
inc
shlb
stc
dec
xorb
push
pushw
mov
scas
mov
out
add
cwtl
cmpl
inc
cltd
and
leave
cmpl
fimuls
stos
lcall
adc
loopne
pcmpgtw
lret
daa
cmp
or
daa
push
idivl
xchg
outsl
aam
das
fnsave
int
in
ror
leave
stc
mov
jne
inc
xchg
cwtl
jns
call
mov
out
imul
cmp
adc
adc
scas
hlt
mov
jno
sbb
test
pop
pop
aas
mov
shlb
aad
sbb
mov
adcl
shll
inc
roll
pop
mov
test
rcl
ja
and
outsb
cs
popa
ret
inc
add
adc
dec
sti
lahf
insb
movsb
arpl
dec
rorl
or
adc
cmpsl
ljmp
into
fucom
cmpsl
insb
into
scas
ss
and
imul
mov
xchg
sbb
adc
inc
test
test
mov
xor
mov
imul
mov
dec
push
push
mov
add
and
mov
xor
stc
mov
and
dec
pop
push
mov
mov
xchg
dec
or
and
adcb
xlat
add
cld
jle
loope
and
icebp
pop
cld
mov
imull
into
pop
add
adc
push
popl
dec
sbb
push
fnstsw
mov
or
push
lods
icebp
pop
push
jno
stc
mov
into
jp
repnz
je
or
mov
int
call
and
adc
pop
ljmp
sbb
movsb
push
popf
lods
dec
inc
mov
imul
push
dec
lods
xchg
sub
adc
inc
and
stos
xchg
and
sarb
vmovsldup
and
in
inc
sub
lret
sub
add
inc
test
push
repz
or
mov
loop
loopne
scas
test
int
add
mov
out
insb
mov
or
push
xor
push
jecxz
inc
push
push
jbe
leave
movsl
mov
mov
mov
out
push
lret
lods
jne
pop
pop
cmpsl
rcll
xchg
daa
orb
into
sbb
sarl
cmp
cltd
shlb
daa
cmp
mov
fsubr
xor
or
scas
aam
dec
adc
jle
sbb
movsl
fcmovbe
fnstcw
movsb
inc
outsl
movsb
andl
mov
imul
movb
enter
push
pop
jne
orl
je
cmp
insl
out
jmp
scas
lods
jmp
mov
or
dec
test
mov
xchg
ds
and
cmp
in
cmp
repz
push
fmull
sbb
and
lds
aas
cs
repnz
inc
and
jg
test
xchg
cmp
test
inc
push
pop
jmp
das
lods
cmp
in
jb
mov
jb
jmp
mov
inc
imul
mov
jns
inc
cmpsb
fnstenv
in
mov
pushf
aam
push
and
cmpsb
iret
mov
into
sub
and
xchg
sub
scas
hlt
add
push
aas
sahf
imul
mov
test
jecxz
mov
mov
aas
pop
cmp
dec
or
scas
mov
add
ds
aam
cwtl
fdivl
or
add
in
cli
jae
imul
lock
cmp
cmp
shlb
fistpl
add
xchg
scas
lock
in
enter
add
push
or
call
leave
in
adcb
adc
push
mov
subb
lds
mov
push
ds
scas
push
ret
inc
or
ljmp
xlat
mov
jb
add
repz
mov
inc
jge
mov
adc
pushf
in
sbb
hlt
test
test
xacquire
jbe
call
incb
cli
out
mov
jp
push
popa
pusha
repz
fsubr
loop
and
or
and
mov
sbb
sar
push
jno
or
cli
dec
movsb
xchg
mov
ja
xchg
mov
imul
bound
jp
scas
push
dec
mov
fidivs
stc
cmc
mov
loop
jl
jns
xchg
popl
push
add
jne
icebp
mov
pop
jb
push
pop
sbb
cmpsl
lcall
ss
rclb
arpl
cmpsl
mov
pop
hlt
cmp
inc
or
cwtl
test
jg
mov
and
out
jp
test
add
xchg
out
scas
adc
fwait
xlat
push
nop
ficoml
les
mov
dec
xor
sbb
andb
adc
hlt
xchg
je
jg
cwtl
push
adc
pop
loopne
test
idivb
out
in
fiadds
mov
addr16
lea
pop
inc
lods
pop
xchg
sub
push
lods
les
dec
in
cmpsb
adc
aad
mov
or
sbb
loop
mov
cmp
xor
or
in
hlt
push
push
into
loopne
movsl
out
lods
jne
xchg
sub
dec
xchg
mul
pop
je
mov
insb
push
dec
xchg
out
ljmp
xor
sbb
xlat
inc
dec
dec
fistpll
sbb
arpl
push
mov
pushf
push
sbb
jnp
mov
mov
inc
jbe
std
push
mov
mov
clc
xchg
sahf
das
dec
leave
cmpsl
call
in
cmp
negb
fs
lds
sub
sub
gs
arpl
push
iret
push
imul
xchg
mov
adc
cmpsb
adc
fwait
in
pop
imul
or
mov
jmp
dec
shrl
add
ficoml
sahf
pop
mov
push
loop
xor
pop
pop
aam
sub
jle
andb
pushf
in
push
sub
jne
inc
add
adc
dec
ds
adc
sbb
inc
sbb
mov
sbb
cli
loopne
mov
adc
enter
push
insl
and
fimuls
dec
inc
enter
adc
addr16
xor
sbb
rorb
inc
sahf
mov
push
xchg
es
arpl
leave
xor
fwait
ror
mov
and
ss
push
test
xchg
cmp
sub
adc
adc
rorb
sub
cmc
pop
mov
sbb
lret
and
aad
mov
scas
xorb
fldenv
notl
mov
and
fmull
xchg
test
ret
dec
add
cld
mov
shrb
xchg
mov
mov
jnp
outsl
cmpsb
jecxz
lret
dec
cmp
cwtl
orl
pop
daa
mov
dec
lods
xchg
pusha
enter
inc
or
cwtl
mov
mov
in
popa
adc
shlb
arpl
cmpps
lods
hlt
dec
inc
cld
add
mov
dec
cmp
loop
ljmp
pop
je
jb
dec
jns
cmp
mov
bound
mov
mov
loopne
rcrl
jnp
dec
adc
iret
or
or
mov
in
fcmove
pop
dec
or
mov
stos
push
shlb
pop
push
scas
or
xchg
pop
fistpll
xchg
sub
pop
ret
push
lods
push
sbb
jae
push
push
rcrl
jge
bound
out
pusha
xor
push
pusha
stc
pop
jae
mov
std
xchg
lret
fidivrs
mov
cmp
push
call
sbb
fs
push
out
dec
jbe
mov
pop
xchg
lods
enter
xor
cld
femms
jl
cmp
addl
andb
ljmp
cmpsl
pushf
xchg
mov
pushf
lretw
and
adcl
sbb
jb
mov
xorb
cmp
mov
inc
push
pop
scas
rclb
pop
inc
repz
out
into
pop
lahf
daa
sarl
je
pop
add
adc
push
notl
push
xor
dec
out
div
stos
stos
faddl
pushf
cmp
inc
cmp
adc
adc
jo
add
fadd
lea
lods
sbbb
mov
lret
incb
bswap
push
mov
iret
and
int
pop
lods
sub
xor
push
xchg
cmp
pusha
xchg
das
jmp
jns
ret
inc
dec
dec
mov
mov
xchg
aaa
sub
popf
cmpsl
sub
push
pop
adc
bound
scas
sahf
push
mov
add
pushf
inc
popf
cli
daa
es
mov
out
and
xchg
repnz
pop
or
jno
test
test
mov
push
mov
cmp
dec
mov
jnp
xchg
xlat
xchg
xchg
sbb
and
mov
push
adc
xchg
cmp
es
or
cmpsl
push
out
dec
mov
push
adc
ret
dec
fwait
xor
lods
enter
stos
fcmovu
sub
nopl
or
mulb
mov
mov
test
test
outsb
sbb
xchg
mov
mov
bound
jbe,pn
add
push
int
hlt
iret
aas
call
cmp
lahf
and
popf
out
adc
mov
out
xchg
xor
int3
mov
je
xor
movsl
out
dec
inc
enter
xchg
jnp
test
popa
xchg
sbb
out
mov
cmp
pop
daa
pop
add
cli
sub
imul
inc
leave
mov
or
into
or
mov
insl
add
sub
cmp
movsl
xor
sub
adc
adc
into
sub
xor
in
cmp
dec
sbb
daa
je
push
push
mov
inc
shll
xor
xchg
movsl
mov
daa
cmpsb
dec
ja
mov
inc
jl
mov
scas
daa
sbb
leave
mov
rcl
lods
sarb
aaa
push
pusha
mov
cmp
mov
xchg
int3
dec
sbb
jg
movsb
aad
dec
cli
popa
std
jge
std
movsb
cltd
incl
dec
dec
shl
jge
lret
xchg
xchg
leave
out
and
push
iret
xchg
xchg
push
push
xchg
loop
jb
jns
pop
scas
fcmovu
adc
or
popl
push
scas
test
mov
mov
pop
cmp
mov
xor
add
push
divb
sbb
cmc
fwait
aaa
mov
xchg
or
xchg
dec
mov
rolb
les
or
adc
inc
jb
mov
mov
inc
xchg
call
inc
pop
imulb
jnp
fcoms
or
mov
add
push
sbb
and
out
shrl
test
push
les
arpl
imul
es
adc
sarl
mov
mov
pop
xor
shr
inc
int
xchg
cs
hlt
jns
mov
sbb
lods
in
mov
lret
repz
and
int
sbb
sbb
hlt
jmp
mov
sub
push
jge
out
and
iret
movsl
sbbw
cmpsb
adc
pop
movsb
mov
in
sub
jge
stos
and
lret
in
and
sbbb
push
sbb
or
dec
cmp
fistl
sub
cmpsb
xchg
subl
add
sbb
loopne
or
sbb
adc
jp
int3
inc
out
pop
pop
pop
js
stos
cmpsl
iret
pop
cltd
inc
mov
rol
add
flds
fsqrt
mov
mov
or
mov
sbb
dec
jle
shl
arpl
lret
and
lea
imul
sub
call
loop
test
mov
mov
dec
mov
xor
jne
push
sub
add
or
push
outsl
sbb
and
mov
loope
mov
mov
and
push
cld
mov
dec
mov
add
stc
ja
jne
scas
imul
sub
cmp
adcb
jae
dec
xchg
scas
lret
xchg
push
jle
mov
sbb
fldpi
adc
jmp
dec
imul
xor
push
xchg
inc
inc
rcl
cld
mov
push
cmpsl
dec
loop
fcom
pop
push
aad
lahf
es
popf
test
fistpll
add
pop
leave
fidivl
inc
cwtl
inc
ja
push
sbb
cld
jnp
jle
insb
push
xor
pop
push
jae
outsl
inc
sbb
cli
daa
xchg
mov
fisubs
and
out
adc
mov
daa
adc
mov
push
data16
jne
or
in
fmull
std
orl
es
xchg
dec
mov
out
jge
sti
inc
mov
or
jb
xchg
inc
pop
lods
loopnew
pop
add
xchg
mov
inc
movsl
inc
sbb
inc
outsb
jo
adcb
jp
sub
out
imul
mov
scas
and
aaa
inc
cmpsl
imul
insl
ficoml
push
add
xlat
xor
shr
xor
mov
mov
or
loope
xor
sub
inc
movsb
sbbl
cld
movsb
sbb
popa
add
int3
rolb
lret
inc
in
addb
xor
es
sbbl
adc
sub
movsb
sub
int
xor
or
ljmp
stos
pop
sahf
mov
cmp
mov
out
shl
stos
jo
stc
mov
scas
cld
inc
mov
out
mov
sbb
push
fldcw
hlt
xchg
mov
mov
shrb
rorl
dec
rolb
sbb
scas
int
push
rcll
jge
xlat
clc
fstl
jb
push
clc
push
xor
cmpsl
mov
cltd
mov
jg
imul
mov
ljmp
add
pop
aas
jl
dec
lods
xchg
pop
mov
cmp
cwtl
pop
popa
incb
arpl
dec
jmp
stc
pop
lcall
inc
dec
ret
xchg
mov
movsb
call
pop
pop
mov
aas
dec
xor
sbb
test
push
cmp
sub
into
mov
loope
shll
or
out
lods
and
or
orl
orl
and
mov
test
mov
cmp
sub
sbb
cmpb
cmp
andb
stos
stos
pop
and
clc
es
inc
mov
adc
ds
mov
sbb
sarl
es
cmp
push
adc
and
xlat
andl
in
addr16
test
xor
inc
dec
sub
mov
sbb
ret
pop
xor
sbb
dec
xchg
jae
jg
push
mov
repnz
fucomip
aas
mov
hlt
div
gs
xor
pop
xchg
lcall
inc
dec
pop
inc
fcomip
and
in
lret
bound
shr
and
sub
popa
out
ja
mov
xor
cli
imul
int
mov
leave
cmp
add
jl
pop
aad
test
mov
les
adc
scas
mov
jle
pop
repz
dec
pop
mov
xchg
mov
jle
sahf
push
fsub
repnz
test
mov
add
sti
outsl
xchg
mov
fistps
jmp
aad
je
cmp
pop
dec
pop
mov
push
ds
mov
rol
stos
ss
jmp
popf
inc
xor
sub
scas
pop
lret
imul
push
mov
cmp
and
or
call
aad
clc
out
pop
jns
xor
jg
bound
adc
sub
lods
mov
sbb
roll
ficoml
jp
inc
cmc
inc
cmc
mov
ljmp
xchg
mov
sub
sub
adc
rcll
mov
lahf
jb
xchg
or
push
xor
dec
jo
fiaddl
jg
popa
repnz
sub
ficoml
jbe
cs
xchg
jle
xchg
or
pop
loop
pop
stos
repz
repz
enter
repz
cmpsl
xchg
push
lods
das
clc
aad
push
mov
cmp
adc
and
mov
shlb
mov
rolb
mov
push
xor
mov
xchg
or
lds
cmpsl
sub
dec
repnz
sarl
test
loope
js
sub
mov
pop
pop
arpl
inc
or
mov
leave
mov
mov
icebp
jl
int3
jge
and
call
imul
xchg
dec
hlt
cmpsb
outsb
mov
jg
jnp
sbb
pop
sbb
pop
mov
shl
gs
test
leave
outsb
les
aas
mov
lock
lahf
mov
push
or
dec
insb
mov
push
push
insb
cli
jle
mov
push
lret
fistl
and
pusha
inc
js
int
and
mov
lods
inc
inc
push
jmp
xchg
rcrb
jnp
push
ja
insb
pop
xor
fwait
cltd
push
sub
dec
xor
push
add
dec
test
orb
movsl
js
mov
clc
hlt
and
cli
or
xor
subb
push
inc
loop
in
and
mov
inc
add
mov
mov
add
test
loope
push
mov
xor
push
ljmp
adc
rcll
xchg
sarl
hlt
xor
jl
sbb
jo
repz
es
test
push
sbb
sub
ss
xor
enter
push
or
cmp
pop
pop
in
movsl
ljmp
popf
cmp
xor
das
ss
js
lahf
das
cmp
sbb
mov
out
cmp
mov
enter
pop
jne
adcl
xchg
in
add
in
loop
jecxz
popl
test
popf
or
rcr
call
lods
push
or
fisttpll
sub
xchg
pusha
mov
into
pusha
or
arpl
cmp
add
or
lcall
in
xor
scas
rcr
mov
pop
arpl
add
in
xor
aad
rorl
inc
cmp
pushf
inc
dec
dec
push
sub
or
loopne
or
jo
cwtl
nop
outsb
adc
mov
popf
cmp
push
mov
pop
les
ja
mov
pop
xor
jg
subl
idiv
aaa
jmp
adc
adc
gs
sub
lret
rorb
int3
inc
in
fiaddl
push
shl
pusha
adc
push
sub
fsts
stos
dec
testb
loopne
cs
dec
pop
ds
movsb
test
das
xlat
mov
and
cld
jae
fstpt
call
aad
pop
fnstsw
mov
push
sub
jno
in
or
lods
push
dec
mov
or
mov
xchg
lretw
aaa
imul
and
lret
or
sti
mov
inc
dec
cmp
add
mov
mov
mov
mov
in
sub
jae
psubsb
out
gs
jns
out
sarl
xlat
sbb
push
int3
mov
aam
mov
data16
mov
push
mov
dec
and
lods
lods
mov
xor
cld
loop
inc
push
into
jge
sub
dec
xor
mov
xorb
add
ja
pop
in
cmpsl
test
lret
imul
jo
scas
mov
idivl
cld
loop
repnz
cmp
fwait
in
mov
das
dec
push
mov
xor
mov
dec
push
ficompl
sahf
dec
and
push
icebp
mov
fdivr
dec
mov
xor
push
push
rep
in
inc
hlt
hlt
jno
nop
daa
cmpsb
mov
xchg
xor
subl
ja
fldcw
arpl
sbb
xchg
xchg
mov
mov
pop
popl
enter
jbe
flds
lock
sbb
jmp
mov
add
mov
roll
jge
mov
jp
xchg
dec
push
sbb
fsts
hlt
cmp
int
sub
imul
mov
aad
imul
xchg
pop
jge
shlb
iret
mov
xor
mov
dec
repz
gs
lods
mov
sbb
jae
mov
mov
inc
sbb
je
cli
ja
imul
jns
push
and
jle
clc
mov
push
jno
mov
cmp
xlat
mov
jb
xor
imul
bound
mov
fidivl
hlt
in
push
dec
mov
movsb
and
rcrl
sbb
test
jmp
fs
push
inc
clc
jns
ljmp
inc
mov
out
xchg
sub
mov
outsb
push
dec
fisubl
mov
cltd
and
xchg
jg
jno
lock
arpl
dec
add
jnp
mov
pop
outsl
adc
adc
cltd
lcall
lods
test
mov
in
sub
inc
ljmp
aas
sbb
mov
sti
sub
subl
out
jbe
insb
push
add
or
dec
hlt
xor
cmp
orb
sbb
js
hlt
pop
dec
mov
cmp
mov
sbb
mov
cmp
lock
cmpsl
pop
test
xlat
push
bswap
js
xchg
push
xor
xor
xor
pop
mov
cmp
and
aad
or
adc
lcall
xchg
xor
stc
dec
int3
add
aam
aam
ud2
dec
in
mov
daa
or
movsb
sbb
stos
mov
dec
fisttpl
push
movsl
lret
fwait
arpl
xchg
insb
fistpl
ljmp
movsb
loop
and
nop
insb
xchg
adc
adc
xchg
leave
sti
dec
xchg
lods
pop
jbe,pn
xchg
js
and
std
and
adc
xchg
inc
and
push
lds
in
outsb
inc
and
popa
into
repz
movsb
out
fs
jle
pop
in
mov
push
stos
sub
rolb
mov
xchg
fbld
sub
fsubl
orb
cmpsb
pop
cmp
fsubrl
fstpt
mov
jae
ss
into
adc
test
in
jns
pop
mov
cwtl
test
hlt
xchg
pop
loope
add
inc
fcom
mov
push
add
mov
ds
or
jp
andl
pushf
in
push
mov
fsubs
cmp
jg
mov
enter
bound
jne
lret
sbb
fs
sub
lahf
decb
es
jne
jae
xchg
push
dec
xor
lea
icebp
test
mov
pop
cmpsl
cmp
mov
inc
cmp
inc
jae
jg
das
xchg
push
stos
push
pop
mov
out
adc
test
icebp
out
fld
inc
in
adc
add
hlt
in
cmp
into
push
xor
push
jnp
push
ja
xchg
stos
jg
sbb
push
add
jmp
pop
xchg
test
into
push
cmp
or
or
icebp
je
leave
je
in
xchg
lcall
loopne
cmpsb
stc
das
shrb
cmp
sub
jns
insb
sub
jns
mov
xchg
xor
and
das
sbb
test
xchg
daa
lret
lds
mov
pop
xor
mov
mov
sub
lods
adc
sbb
loope
cmp
sar
lea
mov
ljmp
dec
jmp
cmpsl
lea
ljmp
lahf
sbb
mov
out
hlt
sub
or
lock
dec
imul
leave
push
ret
cmp
bnd
jmp
inc
ffree
jo
ret
xchg
psubsb
loope
rcrl
push
push
stc
fwait
xchg
cmpsl
les
dec
outsl
shll
xchg
lock
mov
inc
stos
jno
popa
cmpsb
xor
adc
dec
cmpsb
repz
inc
aas
xor
stc
imul
in
ret
lahf
adc
mov
jecxz
fdivrp
xchg
and
ss
jns
enter
mov
hlt
int3
inc
insb
jmp
sub
bound
aam
scas
xchg
and
aaa
or
mov
repz
icebp
and
out
push
out
out
jg
enter
fldlg2
movsb
sbb
bnd
xchg
ret
lret
jnp
fwait
fwait
mov
seto
pop
fimull
cmp
and
or
cltd
sub
lahf
mov
test
gs
sbb
fistpll
xchg
jo
push
aam
mov
cwtl
cmp
adc
fisubl
hlt
cmovp
mov
and
out
stos
sub
jmp
push
xor
cmc
adc
lcall
stos
lds
xchg
jl
cmp
les
push
testb
xor
mov
cmp
jge
testb
mov
fcompl
iret
jbe
push
pushf
cmpl
lret
xchg
gs
movsb
sbb
jnp
and
ljmp
aaa
mov
psllw
mov
jl
sbb
fstl
fbld
scas
dec
fnstsw
dec
scas
cmp
aam
outsb
and
call
mov
mov
repz
mov
mov
xchg
das
fmuls
sub
sub
xlat
mov
out
out
and
cmp
push
and
stos
div
es
shlb
lret
cmpsl
idiv
aad
lods
popa
das
or
add
sub
out
test
aad
gs
xchg
pushf
sbb
sahf
cvtdq2ps
cld
gs
movsl
jge
mov
pop
cmp
movsb
ja
xor
stos
jae
mov
mov
jno
rcrb
mov
or
faddl
cli
dec
sbb
add
jge
lret
push
xchg
repnz
mov
or
push
xor
sbb
dec
push
cs
pop
scas
sub
xchg
idivl
mov
pop
sar
cmc
por
shl
std
ljmp
stos
pop
aaa
xor
neg
pop
out
hlt
jp
and
push
sub
jae
pop
in
ja
cltd
mov
pushf
push
je
dec
jnp
sbb
fwait
insb
sub
sub
or
mov
jecxz
adc
mov
dec
push
hlt
repz
pusha
cs
jl
fs
adc
in
add
in
repz
mov
mov
adc
nop
adc
sti
cmp
stos
inc
cmpsb
cmp
xchg
rorl
imul
pop
pusha
mov
or
repz
pop
test
pop
mov
ja
int3
jns
dec
cmp
push
test
pop
cmp
fdiv
cmp
fwait
adc
ljmp
and
cmp
inc
js
in
jge
xchg
and
sbb
sbb
aaa
sti
push
mov
adc
loop
cld
mov
repz
xor
insl
jle
and
rcrb
xor
ds
testl
dec
jae
lcall
and
push
cwtl
inc
dec
xchg
ja
call
mov
or
fbld
fstpl
cmp
daa
movsl
xchg
jne
add
stos
je
in
imul
popa
cs
js
sub
mov
push
or
and
mov
cmp
lahf
mov
jbe
iret
subl
outsb
fldl
inc
outsb
push
gs
xchg
jl
lcall
fucomp
lods
rcrl
sbbl
jbe
fisttps
nop
cmp
daa
cmpsb
pop
mov
cmp
pop
push
aaa
dec
sub
pop
push
test
dec
data16
add
lcall
pop
inc
sub
mov
lods
insl
stos
dec
cs
mov
mov
xor
inc
cmpsl
jmp
out
fwait
mov
mov
subb
incl
xor
jae
adc
pop
loope
les
inc
mov
cmp
xchg
and
leave
lods
jo
nop
mov
call
hlt
fbstp
cmp
jb
or
cmp
call
aas
pop
in
or
mov
pop
dec
ret
scas
jg
bswap
jle
lcall
rorb
and
lret
sbb
pop
lret
adc
sbb
pop
cwtl
out
insb
sbb
mov
xor
xchg
test
pop
adc
aad
shll
jecxz
sub
sub
stos
push
jl
fs
or
inc
pop
add
xor
fisubrl
in
adc
lods
jp
jecxz
out
mov
add
push
mov
enter
in
lock
insb
fstl
iret
sti
ljmp
shlb
cs
xor
cmp
and
cmpsl
and
out
pop
in
mov
cmp
and
ja
stc
outsl
cwtl
dec
cmpsb
cmp
xor
pushf
mov
jl
aad
fists
mov
lret
add
lahf
pop
sub
sbb
aad
xchg
cmp
mov
pop
add
inc
andb
push
pop
in
mov
and
and
data16
xchg
rorb
mov
and
fdivrp
out
pop
xchg
xor
div
mov
std
and
dec
cmp
leave
test
cmpsb
sub
xchg
xor
xchg
xor
push
or
jae
enter
dec
jne
mov
sbbb
xchg
cli
push
dec
je
jno
iret
out
sub
sti
xchg
cmp
adc
movsb
repnz
xor
mov
in
push
sbb
int3
and
dec
lcall
lret
aam
push
push
pop
mov
das
ror
mov
mov
mov
add
fmul
test
mov
and
add
icebp
add
sub
jecxz
imul
out
bound
cld
push
ss
mov
mov
mov
insb
fimull
rcr
iret
dec
sbb
imul
adc
repnz
mov
in
fs
push
xor
insb
mov
fwait
cmp
jg
dec
les
pop
cmp
mov
sub
jne
adc
imull
in
jg
mov
sub
scas
xchg
push
rclb
in
mov
divb
xchg
inc
and
rcrb
test
mov
loope
jge
hlt
lds
mov
popf
and
pop
mov
push
jecxz
imul
out
imul
outsl
sti
iret
std
lcall
add
popa
cmp
push
sbb
insl
pop
mov
insb
in
insl
adc
or
lret
cmpsl
loopne
dec
es
lahf
lret
xor
ss
stos
fnstenv
xor
or
cmp
and
call
cmp
mov
add
mov
sbb
add
shlb
sahf
fisubrs
and
and
rcrl
or
loop
pushf
inc
inc
idivb
leave
push
dec
repnz
mov
test
push
and
sti
sbb
dec
xchg
out
ror
sbb
sbb
dec
sub
mov
mull
xlat
shlb
sub
lods
adc
shlb
xchg
fstps
and
and
ljmp
call
mov
in
jle
dec
jb
iret
jo
push
or
sbb
insb
out
mov
lea
fnstenv
dec
ds
jg
or
mov
cmp
cltd
sub
xchg
pushf
fidivl
fistps
cmp
cmp
pop
gs
jmp
pop
jne
pop
jnp
lock
cmp
jns
ja
xor
pop
and
std
xor
cmp
ret
fistps
imul
stc
test
shr
rclb
jb
pop
jb
popf
push
call
mov
push
and
jae
pop
mov
cli
insl
movsb
or
aam
aad
outsl
xor
rclb
mov
push
leave
mov
jmp
push
lret
jns
call
fbstp
in
push
adcl
xor
and
fiadds
pop
jbe
push
pop
sub
adc
cmc
or
out
enter
repz
lret
adc
gs
js
jecxz
or
lds
inc
mov
and
add
adc
inc
xor
lock
push
or
xchg
subl
mov
mov
adc
hlt
mov
sbb
insl
pusha
idivl
aad
ss
ljmp
add
xor
sbb
mov
fisubrs
dec
nop
mov
cwtl
fwait
dec
cmp
mov
push
inc
idivl
scas
jo
cmp
mov
pusha
ljmp
jl
inc
dec
sahf
jns
dec
sub
pop
push
jnp
daa
loop
mov
xor
jmp
add
mov
fcmovb
cmp
adc
fsubl
fildl
and
push
and
xchg
ljmp
sub
aam
mov
les
outsb
ja
and
cmp
fdivrl
sarl
pop
jmp
test
mov
into
out
gs
cs
mov
cmc
add
aaa
add
xorl
lea
fidivs
cmp
icebp
aas
cltd
cmp
and
lret
jo
sbb
pop
into
leave
xchg
dec
and
or
pop
lods
add
sub
mov
daa
lds
inc
insb
or
jp
out
cmpsl
ficompl
outsl
aas
pop
sarl
mov
push
sub
jmp
fiaddl
or
xchg
loopne
push
push
xchg
shl
and
addr16
sbb
jle
cli
scas
fadds
jne
fcompl
dec
shr
mov
gs
idiv
xor
mov
xor
xchg
and
push
shr
xchg
sbb
bound
adc
int3
add
test
popf
mov
aam
clc
dec
mov
mov
dec
jae
xor
leave
sbb
lods
icebp
add
mov
jl
dec
xor
lahf
add
xchg
push
hlt
sbb
lret
mov
aad
jp
sbb
loopne
fiaddl
xor
data16
rcrb
mov
pop
gs
pop
adc
neg
or
dec
les
dec
fmul
jmp
xor
sti
daa
push
jg
js
sbb
aad
add
movsb
sub
push
mov
imul
sbb
pop
pop
into
and
pop
ss
pop
mov
lret
sub
push
loopne
xchg
inc
adc
mov
jmp
mov
xchg
mov
pop
popa
addr16
cltd
dec
rclb
mov
mov
or
push
std
mov
mov
fidivs
sbb
or
push
xchg
imul
jae
mov
xchg
mov
inc
stos
gs
lods
and
push
cld
jle
xorl
jbe
mov
lock
xchg
data16
add
pop
ss
std
lcall
je
dec
mov
rolb
xchg
cmp
fs
ret
stos
call
outsb
cmc
les
xchg
test
mov
cmc
jb
jl
add
dec
stos
inc
lods
mov
jmp
out
adc
inc
out
lock
adc
cwtl
wrmsr
ja
repnz
test
fsubl
push
dec
and
fidivs
xchg
mov
enter
mov
incl
push
out
jmp
sub
cld
mov
add
cmp
jecxz
clc
cmp
xor
xor
cmovns
lods
ret
fidivrs
lcall
jae
sbb
push
lahf
sbb
loopne
in
jnp
push
call
iret
xor
stc
in
movsb
mov
or
adc
add
in
nop
pop
dec
xor
add
add
cmc
out
push
lods
cmpsb
jns
mov
sub
test
mov
mov
stos
mov
filds
and
addr16
jbe
out
mov
sbb
xor
stos
repnz
pop
ret
mov
leave
sbb
dec
loop
mov
out
adcb
mov
lret
add
in
out
inc
stos
inc
adc
out
pop
fucomp
xchg
jnp
adc
scas
inc
negl
test
xchg
add
add
andb
cmp
sub
mov
fadds
and
xchg
sub
jmp
movsl
imul
pusha
push
lret
adc
repnz
dec
pop
push
adc
dec
outsl
dec
pop
in
nop
fisubrs
lret
loopne
mov
mov
pusha
sub
inc
adc
aad
push
cmp
icebp
cmc
xor
sahf
pop
in
or
mov
mov
sahf
xor
jbe
mov
jno
mov
xchg
adc
icebp
mov
aaa
push
cwtl
mov
xchg
cli
sub
xchg
ja
fbstp
jecxz
enter
mov
mov
out
shl
add
mov
cmpsl
mov
ljmp
dec
xchg
or
sub
shrb
and
leave
ja
lcall
stos
jnp
mov
ja
call
shrl
mov
out
test
mov
lahf
mov
ret
add
rolb
mov
lret
pop
pop
in
jge
je
and
popa
inc
pop
out
fisttpl
ss
mov
push
test
aam
loope
int
ret
sub
sbbb
sarb
sub
mov
pop
add
insl
call
or
lods
xchg
jp
call
jge
add
insb
call
imul
inc
out
pusha
bound
add
mov
frstor
lds
add
lahf
jno
shlb
orl
test
sbb
xor
adc
add
jnp
mov
insl
addr16
xor
dec
out
arpl
push
dec
pop
push
mov
mov
scas
mov
lcall
adc
xor
pop
cltd
xlat
pop
sti
fisubrl
into
sbb
leave
js
dec
mov
lret
stc
rorb
mov
or
andl
sbb
add
lea
scas
cld
out
insl
mov
push
jge
mov
outsl
push
enter
fs
cmp
lock
pop
push
imul
inc
push
push
xchg
or
adc
sbb
mov
scas
sbb
mov
lahf
push
rcr
jp
jecxz
cmp
repz
push
mov
pop
sub
ss
sub
or
addb
cmp
stos
or
hlt
jns
imul
push
xor
and
aaa
pop
outsb
and
iret
scas
mov
movsl
int
jno
add
test
faddl
or
jns
and
xor
mov
cmp
add
mov
iret
jge
or
fcoml
loope
loope
pop
mov
out
sbb
sub
sub
scas
xchg
dec
jb
mov
and
push
fbstp
movsb
ret
movsl
int3
insb
mov
inc
movsl
lds
incb
dec
leave
lods
jp
cltd
pop
mov
sub
sarl
xchg
dec
cmpsb
xchg
xchg
or
mov
loope
in
shr
mov
jle
pop
and
cmpsl
in
adc
mov
or
mov
fwait
leave
iret
xor
pop
in
and
js
jo
push
aad
mov
mov
pop
fstl
ficompl
pusha
push
loop
xor
lret
in
test
sub
jbe
pop
out
cli
jne
lods
xor
bound
mov
inc
push
inc
loop
lret
stc
push
push
mov
jge
push
mov
jecxz
xchg
inc
test
xor
mov
mov
or
lds
loop
add
gs
xchg
mov
sbb
int3
fcoml
lods
jbe
cmp
loopne
push
add
dec
add
aaa
fcomip
mov
xchg
mov
add
jle
xchg
ds
aaa
mov
scas
and
mov
adc
add
daa
jnp
pop
loope
clc
lahf
data16
push
pop
icebp
mov
push
fwait
sahf
andl
movsl
rcrl
xchg
jg
xchg
sub
and
inc
push
dec
loope
mov
stc
inc
or
mov
or
nop
adc
mov
sbb
mov
leave
hlt
dec
add
test
aad
adc
clc
aad
mov
mov
popa
adc
insl
out
roll
cli
leave
and
dec
arpl
testb
fistpl
mov
das
pop
mov
fs
icebp
iret
hlt
sub
pop
jmp
xchg
into
jl
xchg
cmp
xor
xor
sub
xor
js
fs
xchg
fwait
pop
jo
sbb
cmpsl
inc
cmp
leave
mov
mov
lret
lds
pop
pushf
cli
and
or
push
pop
xchg
fs
or
jmp
add
outsb
xchg
adc
sub
add
pop
divb
gs
sbb
inc
insl
push
mov
movsb
jecxz
cmpsb
xor
outsb
or
lea
push
addl
push
cmpsb
fisttpl
stc
faddl
shlb
clc
and
ds
lods
rcl
push
pop
hlt
ret
and
pop
sbb
lahf
ja
mov
ror
ret
dec
lret
xchg
inc
jbe
add
lcall
movl
in
gs
adc
pop
movsb
inc
dec
gs
mov
jns
pop
mov
mov
icebp
ficompl
pop
leave
adcb
pushl
mov
xor
pop
cli
push
xor
dec
cmpsb
pushl
sarl
iret
inc
iret
xchg
outsl
int
sbb
or
inc
add
mov
cltd
bnd
popf
pop
xor
xchg
sar
sbb
dec
imul
dec
les
add
movsl
sbb
mov
xlat
cli
add
pop
xorl
hlt
iret
pop
ja
out
es
jmp
adc
push
xchg
xchg
call
fildl
mov
sbb
mov
leave
inc
das
inc
push
jno
pop
pusha
mov
mov
adc
add
stos
pop
movsl
stos
push
jmp
mov
les
dec
cmp
cmp
iret
data16
mov
sbbl
outsl
cmp
xchg
lcall
inc
mov
sub
fnsave
test
out
nop
mov
fnsave
inc
dec
imul
xchg
ja
xor
in
icebp
frstpm(287
stos
test
out
mov
jno
push
dec
pop
lds
fisttps
es
and
jle
cmpsb
loop
pop
jne
xchg
aad
int3
push
cmpsb
and
sbb
mov
pop
inc
icebp
mov
inc
jae
sbb
call
inc
sahf
inc
stos
clc
xchg
push
xchg
xor
sbb
out
out
mov
fnsave
pusha
and
xchg
cmp
lahf
sub
push
test
adc
int
addr16
adc
ja
outsl
lret
sti
scas
add
pusha
xchg
add
cmp
imul
fwait
sub
push
jo
stos
test
adc
mov
push
push
popf
jno
and
dec
stc
dec
push
or
and
cltd
das
xlat
add
cwtl
in
push
and
ja
fcoml
mov
aas
xchg
add
mov
lahf
mov
mov
les
adc
ja
lods
sbb
pop
mov
jg
movsl
xchg
lret
imul
dec
in
mov
mov
clc
sub
inc
xor
pop
roll
stos
cmpsl
cmc
icebp
or
and
inc
dec
pop
or
stos
lea
notb
mov
jb
jo
sub
scas
mov
xlat
stc
and
sbb
fwait
push
jmp
scas
dec
mov
sbb
cmp
and
jb
fsubs
xchg
ljmp
sub
mov
out
ret
adcl
popa
adc
xor
dec
mov
addb
ss
adcl
mov
sbb
stos
cmp
outsl
jo
dec
fwait
sbb
and
cmp
and
mov
into
inc
lds
mov
dec
or
lods
xor
aam
mov
cltd
jle
dec
fcmovne
push
nop
and
adc
mov
xor
inc
sbb
sarb
push
in
and
push
imul
adc
jbe
mov
fisubs
dec
stos
outsl
jb
les
loopne
dec
fldl
cmp
je
inc
xchg
out
inc
sub
push
jle
stos
sub
xchg
jno
lea
loop
in
enter
sub
mov
outsl
adc
leave
jns
in
push
rolb
sub
enter
daa
xchg
loope
sbb
jae
and
loopne
push
enter
fmull
lock
hlt
fidivrs
mov
jne
mov
or
mov
hlt
inc
sti
add
xchg
jmp
pushf
outsb
test
aam
cmp
mov
pop
xchg
push
dec
mov
mov
addl
aaa
lock
push
out
pop
mov
sbb
aad
jb
mov
sub
sbb
dec
sbb
into
lds
mov
cmp
lahf
sbb
xchg
mov
and
pusha
xor
pop
xor
aam
xor
pop
repz
dec
faddl
or
xchg
pop
jmp
push
sbb
push
ds
cmp
mov
jnp
push
test
inc
mov
test
sub
dec
jbe
in
pop
mov
cwtl
aam
and
and
adc
and
outsb
sbb
pop
jmp
mov
mov
mov
cmc
pusha
mov
jmp
jl
rcrl
mov
into
push
or
aam
cwtl
ja
clc
xchg
push
and
adc
jp
das
sbbl
ret
addr16
or
mov
andl
mov
mov
decb
push
iret
mov
push
pop
adc
inc
adcb
and
inc
mov
repnz
inc
or
xorb
and
out
sub
xchg
or
dec
in
ja
push
sub
lods
popl
jmp
jmp
fs
stc
mov
mov
call
push
fs
sub
or
outsl
jbe
mov
ret
cmp
jmp
push
or
iret
jl
sbb
nop
pop
pusha
fiaddl
add
pusha
jae
or
aas
mov
sbb
push
testl
into
push
inc
mov
dec
xchg
bound
lods
inc
jo
fs
loope
stos
mov
inc
ljmp
and
cmc
dec
pop
sbb
stc
dec
lret
popa
loope
mov
rcrb
lret
jns
xchg
adc
xchg
push
lea
jno
dec
jmp
xchg
push
push
or
xor
jecxz
addr16
pop
orl
and
pop
mov
lods
sahf
or
mov
mov
pop
jle
lock
jle
and
ja
push
js
pop
out
xchg
ror
push
fnstsw
leave
push
jp
fsubrs
mov
into
jno
or
push
dec
insl
mov
jmp
jecxz
mov
mov
and
jb
stos
in
push
ret
rolb
cwtl
xor
fs
mov
push
hlt
jo
stos
out
sub
daa
mov
roll
ds
mov
xor
testl
adc
mov
jecxz
pushf
fwait
mov
out
and
cmp
jp
std
in
pop
cmp
dec
sub
out
test
stos
jle
mov
mov
lret
nop
lods
mov
mov
or
push
xor
cmp
ja
repz
pop
mov
test
mov
ficompl
neg
cli
leave
mov
push
and
push
stc
ss
es
ret
mov
lret
jge
mov
jle
aam
ret
sbb
xchg
inc
test
sbb
push
insb
push
and
mov
xor
inc
push
push
cmc
loopne
mov
xor
bound
mov
fdivs
add
mov
lock
aaa
cmpsl
subl
push
add
mov
nop
loop
fistpl
aaa
sbb
or
push
inc
repz
popf
pop
or
push
push
cs
iret
pop
lds
xor
ljmp
popa
popf
sub
shrb
and
cli
sbbb
scas
lock
fsubr
pushw
push
shl
stc
rolb
mov
rcr
cmp
aam
ljmp
add
ja
outsl
push
int3
aaa
js
xchg
xorl
jb
xchg
sub
shl
popa
mov
and
pusha
sub
xchg
nop
mov
jp
xchg
lahf
fmul
jno
fstl
push
mov
fidivs
out
inc
mov
mov
dec
jnp
addr16
sbb
fs
mov
lret
imul
sahf
xor
dec
shll
in
frndint
add
mov
inc
adc
sbbb
pop
icebp
and
shrl
hlt
and
leave
leave
fcomip
sbb
jle
push
notb
out
dec
test
das
lahf
lock
adc
lods
and
popa
sbbl
cs
stc
inc
xchg
std
into
out
xchg
lds
or
mov
sbb
push
mov
call
addr16
xchg
in
and
mov
sbb
inc
adc
jnp
sahf
mov
data16
lds
ja
sti
lods
jno
imul
mov
ja
pop
pusha
adc
and
imul
pop
leave
xor
sub
mov
dec
fcomps
data16
push
lock
xor
ret
or
pop
popf
mov
inc
ljmp
inc
mov
insb
dec
icebp
or
push
push
cwtl
lret
sbb
pop
cmp
add
scas
lea
ret
rolb
add
dec
pusha
and
sbb
lret
cmp
sbb
fcomps
pop
rorl
mov
adc
sarb
repnz
mov
dec
xchg
pop
mov
adc
loope
dec
xchg
test
repnz
dec
xor
fdivr
adc
mov
inc
iret
jbe
in
lret
sub
mov
imul
sti
dec
mov
mov
push
out
imul
test
out
push
mov
push
andl
xor
into
pop
popf
lock
adc
inc
data16
imul
dec
ss
mov
inc
lea
and
ds
inc
jb
dec
in
sub
jecxz
sub
mov
jb
jge
xchg
jne
jl
sub
adc
in
loope
jne
outsb
jmp
lods
das
xlat
adc
mov
sbb
rolb
and
adc
push
lcall
mov
test
outsb
dec
and
xchg
pop
sbb
loopne
mov
dec
xor
and
sbb
ss
adc
xorl
cmp
mov
aam
pushf
into
sahf
xlat
adc
sbbl
mov
loop
ret
fisttps
lret
push
out
pop
mov
loope
ds
sbbl
jmp
and
ret
inc
adc
and
push
jbe
ret
push
nop
fimuls
sub
lea
adc
dec
test
mov
mov
daa
cmp
dec
dec
or
jmp
xchg
gs
pop
cmp
cmp
inc
adc
test
adc
rcl
scas
or
jle
arpl
filds
outsb
mov
cmc
push
sub
enter
push
cmp
orb
cwtl
push
inc
inc
ljmp
fldcw
mov
xchg
out
adc
jl
enter
dec
push
mov
or
push
or
dec
std
jecxz
xchg
inc
add
pop
pop
xor
das
test
fsub
cld
xchg
lods
add
and
popa
mov
pop
repnz
mov
pop
jmp
arpl
cmp
ret
xor
xorb
jg
push
mov
jmp
sub
xor
mov
in
pop
mov
out
insl
pop
pop
jae
sahf
scas
jle
push
mov
cmp
lahf
add
inc
fwait
mov
les
jbe
cld
into
pop
jno
sub
negb
and
xor
rorb
or
mov
inc
imul
xchg
dec
call
sub
jge
jne
xrelease
shlb
insb
test
jnp
js
int3
mov
mov
cmc
cmp
mov
xlat
inc
sbb
dec
cmp
sbb
mov
jge
adc
sub
inc
out
cli
into
aam
repnz
add
add
scas
dec
fldl
repz
sbb
push
lods
shll
mov
mov
sub
push
daa
je
shll
rcl
mov
adc
and
fwait
or
inc
aas
or
lods
addr16
lret
mov
xlat
add
mov
push
rcr
lret
pusha
das
mov
sub
dec
es
push
movsb
sbb
xor
cwtl
jnp
pop
or
or
add
inc
adc
insl
mov
pop
mov
fidivl
fists
jge
testb
push
adc
outsw
adc
cmp
shlb
daa
fistl
test
in
push
jp
jle
scas
stos
adc
jp
lds
popa
or
jo
int3
out
jae
insl
sbb
jmp
mov
mov
pop
push
jp
jl
jb
or
mov
push
test
int
cmp
rcr
xchg
add
jecxz
ss
fadds
cmp
jb
dec
enter
xchg
sub
fmul
test
es
adcl
push
jnp
icebp
sbb
mov
inc
xor
cmp
fimull
imul
shrl
xor
stc
sub
mov
adc
xor
andl
xlat
xchg
shll
pop
or
test
mov
arpl
adc
jp
andb
popa
shrb
hlt
xchg
pusha
push
jns
add
jle
fcmovbe
repz
adcl
sub
fildll
ljmp
loop
hlt
test
cwtl
jmp
dec
xchg
iretw
add
xchg
jo
ja
nop
shll
notb
shl
fstpt
inc
in
add
aas
fcompl
test
adc
pop
add
cltd
mov
gs
inc
out
mov
sbb
popa
addr16
jg
add
out
jp
sub
movsb
adc
inc
aam
pusha
repnz
loopne
into
add
pop
mov
ficoms
jg
pop
call
cmc
sahf
mov
pop
pusha
add
leave
and
xor
xor
cltd
add
lret
fistpl
lods
jge
fnsave
adc
out
jle
jne
lds
in
dec
or
dec
dec
test
adc
das
imul
pushl
mov
ret
pop
test
in
leave
add
flds
outsb
push
sbb
push
jnp
fisubrl
sbb
pop
dec
add
xor
rcll
lcall
mov
pop
shll
sub
jle
jo
mov
jp
imul
sbb
fldenv
jbe
fmull
jmp
and
cltd
fcoms
mov
pop
mov
stc
movb
sbb
std
mov
idivl
push
movsb
push
test
ficomps
imul
jmp
test
pop
mov
outsb
and
repz
hlt
mov
jge
lods
flds
imul
lods
pop
ficomps
dec
mov
rolb
cmp
mov
movsb
in
add
inc
stos
mov
andl
mov
in
jecxz
dec
test
push
shlb
bound
cmp
jle
inc
out
daa
jnp
add
aam
stos
jno
lds
cmp
push
jmp
mov
mov
aas
repz
push
ja
add
push
arpl
lock
xchg
jle
or
lock
mov
or
aad
mov
adc
adc
int3
mov
cld
or
xchg
jb
mov
icebp
sbb
mov
jmp
add
xorl
dec
jle
jns
push
mov
xchg
mov
lds
cmp
xchg
sbb
clc
xor
dec
dec
ret
pushf
push
jle
popf
imull
jle
cmp
mov
iret
sub
and
cmp
and
jb
sub
loop
mov
push
aam
adcb
mov
add
and
xlat
test
inc
xlat
mov
test
mov
rcrw
or
or
into
shr
sbb
push
mov
inc
sub
sbb
push
push
xchg
jmp
jae
scas
mov
es
dec
fnstenv
mov
cmp
stos
into
and
or
push
cmpb
push
test
stos
lcall
aaa
flds
dec
popa
stc
notl
fimull
sbb
aaa
repnz
sbb
mov
repnz
sahf
dec
pop
xchg
mov
imul
dec
mov
inc
dec
jae
push
mov
das
mov
sub
sti
jp
iret
pop
jns
hlt
pop
mov
in
pop
sbb
or
adc
icebp
lods
mov
sbb
push
mov
data16
ror
aad
sub
push
cmp
call
gs
bound
cmp
xor
divl
mov
mov
pop
cmp
mov
xchg
jae
ret
inc
into
or
scas
xor
dec
jecxz
jnp
dec
mov
sbb
mov
and
ljmp
jae
adc
pop
adc
ja
adc
imul
or
mov
cltd
enter
jno
mov
sbb
xor
and
jae
push
movsb
sub
inc
fstpl
lds
jl
push
test
stos
outsl
adcl
inc
ficoml
or
dec
stc
push
and
cmp
sti
or
dec
sub
test
ja
jg
mov
adc
rcrb
jl
push
mov
xor
adc
faddl
and
mov
pop
jmp
xor
aad
rcrl
mov
aad
repnz
sbb
inc
mov
mov
xchg
sub
adc
je
dec
push
xchg
sbb
test
out
out
dec
loopne
push
nop
int
repz
adc
jae
inc
dec
and
cmp
lret
xchg
push
xchg
loop
pop
or
jno
gs
cmpl
cmp
cmpsb
mov
fldt
sbb
or
jle
and
sbb
inc
stos
mov
lock
pop
stos
outsl
pusha
xor
mov
fcoml
dec
inc
cmpsl
out
cmc
jl
push
int
std
fisubrs
adc
das
fisttpll
sbb
rolb
icebp
sub
sub
and
pop
jae
outsl
mov
sar
xorb
sbb
rclb
add
push
cmp
sbb
cmpb
stc
popf
fistl
or
fsts
add
sub
lret
push
cmp
cli
lods
mov
mov
ja
lcall
fbstp
mov
or
add
inc
sub
xchg
mov
jbe
lret
dec
inc
pushl
add
out
fisttpll
lcall
xor
lods
mov
add
cld
jp
dec
arpl
jge
in
xchg
pop
mul
add
loope
sahf
out
in
inc
cmpsl
sbb
sub
fidivrl
mov
lahf
fistl
xor
pop
das
ss
out
and
jnp
pop
dec
or
pop
popa
test
pop
fstpt
test
insb
add
loopne
adc
dec
cmp
mov
pop
push
adc
out
jne
aam
push
iret
push
sub
xor
cwtl
jo
mov
xor
push
mov
and
arpl
or
adc
pop
mov
mov
pop
in
addr16
test
inc
subl
jo
test
sbb
adcb
mov
dec
fcoms
ja
test
pop
sahf
jmp
mov
sbb
clc
je
jl
xor
cmp
sub
pop
imul
cmpsl
inc
and
adc
pop
imull
inc
std
inc
pop
popf
or
nop
pusha
mov
test
nop
sbb
dec
aaa
fisttpl
and
push
mov
test
sti
mov
into
jnp
xchg
iret
sbb
call
rorb
sbb
sbb
int
cmpsl
pop
lds
sbb
cmp
push
aad
or
ret
je
es
notb
or
in
fs
cmpsl
int
pusha
push
mov
int3
push
lcall
pop
in
sub
cmp
bound
pushw
popa
adcl
push
push
push
test
adc
mov
lods
xchg
adc
mov
ret
xchg
movsb
lret
push
cmc
pop
cltd
jge
add
mov
iret
pop
addr16
fiadds
cmp
fwait
and
cmp
dec
jns
repz
add
adc
adc
out
mov
imul
aad
add
imul
je
jno
das
icebp
sub
insb
les
and
das
push
pop
rclb
mov
shll
and
mov
pop
and
sub
jmp
fwait
out
cmp
daa
mov
inc
bound
cmp
ds
or
and
mov
outsl
fiadds
jge
xor
and
test
push
mov
and
movsl
lret
inc
aas
jbe
das
out
or
mov
cmp
mov
jo
dec
push
imul
pop
pop
cmp
fsts
cmp
sarb
push
and
imul
loopne
repz
ret
in
int
cld
mov
popa
cltd
in
es
pop
je
and
adc
movsl
fbstp
rcl
xor
cmp
mov
mov
fdiv
sahf
call
adc
stc
dec
mov
mov
sub
daa
inc
inc
repz
pop
xor
orl
stos
sbb
int
mov
les
pushf
arpl
mov
mov
test
fnstsw
pop
jp
mov
out
stos
fstl
outsl
adc
ds
ljmp
in
cmpsb
mov
mov
sub
lock
mov
pop
mov
dec
fadds
aam
loope
cltd
nop
sbb
adc
xchg
mov
hlt
les
and
inc
jbe
les
mov
or
push
add
aam
iret
cli
push
pushf
sahf
lret
mov
mov
lea
out
dec
mov
jmp
dec
mov
scas
jl
or
call
testl
bswap
ja
out
gs
jns
add
enter
cmp
cmp
pop
call
stos
popa
sbb
adc
pushf
push
jb
inc
or
jge
mov
push
add
jmp
cwtl
fnsave
cmp
dec
in
test
lcall
jne
jno
xchg
lds
mov
jl
scas
pop
mov
in
dec
decl
sahf
add
push
adc
push
push
xor
test
cs
jbe
out
shll
lea
jmp
mov
jbe
fs
mov
adc
pop
dec
sbb
dec
scas
push
stos
sub
aas
jl
mov
ret
call
in
adc
pop
cmp
ret
inc
jmp
fistps
adc
lret
emms
pop
lock
popf
inc
add
fs
push
xor
cmpsb
adc
and
xchg
push
mov
cmp
ficomps
movsl
and
mov
inc
add
pop
pop
push
xor
push
and
xor
adc
mov
sub
jno
inc
out
dec
cmp
popf
lahf
std
insl
fwait
dec
dec
xor
mov
notl
outsl
lahf
mov
das
pushf
jnp
pop
int
lahf
xchg
mov
pop
cli
push
cmp
fidivl
mov
repz
loop
cmp
dec
shrb
bound
mov
mov
sub
jle
pusha
fdivrl
movsl
fisttpll
dec
xor
inc
xor
and
jo
cmp
cli
insl
xchg
enter
fidivl
std
outsb
daa
dec
xor
dec
test
dec
gs
push
mov
test
std
sbb
mov
mov
mov
pop
bound
loop
mov
inc
dec
test
adc
lret
mov
loopne
insb
ds
push
jge
loopne
mov
sbb
push
mov
lahf
lock
push
xchg
and
insl
add
dec
push
pop
cmp
add
pminsw
mov
mov
adc
aas
jl
stos
mov
clc
xor
fnstsw
loope
jg
fld1
pushf
inc
cmp
cli
jle
jno
decb
rcrl
mov
xor
stc
pop
popa
dec
adc
cld
sub
das
jecxz
aam
enter
cli
outsb
insb
sub
push
xchg
cmp
add
add
xchg
lcall
sub
adc
ja
insb
mov
test
push
aas
loopne
mov
inc
or
jno
and
fildll
dec
repz
loopne
push
sbb
pop
cwtl
lahf
mov
cmp
sub
je
shll
xchg
clc
sbb
pop
stc
or
push
sub
mov
aad
push
clc
test
mov
fisttps
lods
and
push
jp
fdivp
jno
aad
mov
movsl
clc
and
fistps
xor
fs
test
mov
out
ret
jo
in
repz
xchg
movsb
shrd
jmp
out
clc
xchg
pop
sahf
jb
seto
and
test
aad
cltd
mov
insl
jnp
mov
into
in
inc
push
mov
aaa
sbbl
add
jnp
sbb
push
test
es
into
ror
sbbl
ror
enter
inc
sub
mov
movsb
or
movsl
jbe
sbb
push
jo
adc
jne
lock
clc
sub
lcall
inc
insb
stos
test
loope
in
into
lods
pushf
cmpsb
in
fiaddl
in
jns
pop
cmp
cltd
test
sub
daa
fld
add
sub
mov
mov
movsl
inc
lahf
lods
arpl
dec
jnp
movsl
enter
add
mov
cli
fnstcw
add
mov
hlt
pop
aaa
lds
jmp
shll
ss
mov
jmp
stos
pop
mov
and
mov
push
push
jge
stos
push
cltd
mov
push
les
mov
mov
inc
mov
not
shrb
push
adc
dec
es
push
mov
jbe
and
sub
or
loop
cmpsb
call
dec
movsb
int
int
mov
dec
push
repz
in
shl
and
fsubs
ret
jmp
fwait
pop
cmp
pop
xchg
into
enter
inc
lods
push
int
and
xchg
sti
inc
sub
push
inc
scas
out
dec
mov
adc
pop
lcall
jge
jb
or
xchg
cmpsl
lods
test
inc
rolb
fildl
mov
out
jb
xor
mov
jmp
push
adc
or
push
iret
lahf
pop
cmc
pop
inc
ror
mov
sbb
add
insl
psrld
loope
mov
mov
cmpl
mov
repnz
mov
push
jne
cmp
fmull
push
jmp
add
or
leave
dec
add
mov
cmp
mov
je
stc
dec
cmc
lea
repnz
fwait
jge
jl
out
pop
add
pop
outsb
lods
mov
jno
inc
mov
int3
cld
and
mov
push
jo
out
xchg
pushl
nop
aam
inc
sbbb
pop
imul
or
pop
inc
dec
add
test
mov
pop
imul
jle
jb
adc
imul
pusha
leave
mov
sub
int3
mov
lods
sbb
mov
sub
ljmp
push
mov
jbe
pop
outsb
mov
push
mov
cmp
fistl
stos
mov
dec
or
test
mov
cmpb
lods
lahf
xorb
mov
mov
inc
movsb
repnz
add
sub
scas
call
inc
mov
inc
jbe
mov
cld
fisubs
rcrl
xchg
jmp
add
xchg
xchg
mov
cmpsl
jle
sbb
mov
sbb
jns
dec
or
cmp
jbe
push
and
stos
push
pop
pop
xor
and
or
ja
gs
fcmovnb
fs
mov
lock
imul
mov
inc
adc
stos
shll
pushf
mov
pushf
or
inc
push
sarb
gs
std
jge
jo
sub
adc
pop
pushf
loope
inc
xchg
fisubrs
call
xor
mov
fadds
stos
sub
adc
or
mov
movsl
in
adc
sti
pop
inc
inc
jnp
xor
xchg
adcl
add
pop
into
js
inc
jmp
orl
jns
jmp
pop
inc
fs
sub
lret
mov
jp
insl
js
mov
lahf
inc
sbb
xlat
filds
push
fisubrl
adc
fwait
inc
jmp
mov
pushf
add
aam
lods
filds
ss
sbb
mov
dec
mov
daa
je
ljmp
inc
lcall
mov
lcall
clc
cld
pop
xchg
dec
rcll
sbb
jae
fdivr
sbb
out
ljmp
clc
lds
pop
adc
lods
aad
sbb
aad
inc
inc
mov
dec
mov
ret
mov
jno
cwtl
adc
sub
jg
xlat
adc
adc
mov
in
sub
mov
stc
lcall
sbb
loop
pop
fadd
mov
stos
jno
push
add
mov
push
sub
pop
pop
adc
add
leave
dec
jb
jbe
mov
daa
gs
jg
test
scas
in
cmp
jno
mov
cs
bound
out
xor
dec
mov
mov
jecxz
aam
adc
pop
sbb
in
jle
test
ret
mov
movb
mov
cmpsl
int3
les
adc
test
stc
push
leave
adc
and
or
movsl
mov
icebp
mov
aas
xor
adc
ret
push
pop
out
or
movsb
mov
dec
inc
add
imulb
dec
pop
ret
pop
mulb
lods
pop
or
sbb
inc
mov
xlat
sbb
mov
xor
cmpsl
mov
shlb
cltd
rcll
adc
or
sbbl
mov
aad
addr16
imul
test
dec
adc
and
das
mov
jae
call
and
pop
les
inc
fidivrs
cltd
sub
mov
or
inc
inc
xor
ds
stc
add
jmp
xchg
add
add
test
sub
fisubl
jle
mov
std
outsb
aad
mov
cmpb
adc
add
lock
fld
inc
or
cli
aas
sti
xor
test
loope
popf
pop
cmp
xchg
pushf
mov
sahf
movsb
mov
cmc
cld
adc
loop
push
cmpl
stos
cmp
or
out
cmpsl
xchg
jo
imulb
mov
inc
addb
icebp
lds
mov
mov
push
scas
mov
scas
data16
sbb
jmp
jnp
and
sub
cwtl
mov
daa
lret
sbb
cmp
jns
add
xchg
imul
mov
mov
arpl
mov
test
test
negb
pop
ja
fidivl
cmpsl
xlat
add
dec
mov
xor
pop
lods
test
sub
fnstenv
neg
inc
sbb
mov
push
lods
lock
lret
push
out
sub
lret
hlt
mov
jmp
and
inc
mov
sub
aas
inc
ja
mov
push
pop
mov
loope
or
add
aaa
xor
leave
inc
daa
inc
into
insl
fwait
xchg
push
push
jne
stos
call
lahf
cli
add
sub
push
lea
rorl
inc
repnz
es
out
pop
scas
mull
or
jnp
mov
adc
xlat
xchg
out
incb
mov
outsb
push
mov
fistpl
mov
or
mov
sub
mov
sbb
add
sbb
xchg
xchg
inc
sub
js
mov
out
lcall
cmp
mov
out
mov
inc
xchg
fsubrl
pushf
add
lcall
mov
ljmp
jne
ss
test
decl
or
pop
lahf
mov
mov
std
das
lret
xor
sbb
in
mov
mov
in
out
inc
es
cltd
je
fwait
insl
sti
roll
mov
jmp
adc
ds
popf
shl
test
pushf
scas
mov
stos
hlt
insl
push
gs
je
testl
sbb
enter
cmpl
sbb
jle
mov
cmp
shrl
dec
out
push
pushf
int
cmp
pop
imul
pop
mov
mov
int3
cmp
lock
xchg
es
subl
in
int3
imul
lahf
dec
stos
imul
and
rcr
pop
out
dec
cmc
xchg
cmpl
in
in
cmp
test
out
and
pusha
adc
addl
scas
popa
lret
rolb
lahf
in
scas
xor
and
pop
or
jg
add
filds
adc
xchg
imul
add
jae
push
fwait
cltd
or
cmp
xor
add
adcb
divb
mov
outsl
xchg
mov
sub
sbb
mov
insl
xor
push
iret
imul
shlb
push
je
adc
sbb
mov
movsb
push
andl
aad
iret
pop
jbe
add
xor
hlt
sbb
popf
xchg
and
xor
loopne
mov
jecxz
shrl
xchg
xor
push
pusha
mov
mov
leave
xlat
bound
sarb
aam
mov
push
hlt
test
mov
ljmp
cmp
cltd
mov
and
std
push
add
fdiv
push
add
pop
mov
pop
test
xchg
clc
or
jb
in
sub
push
ljmp
inc
mov
ljmp
popa
push
jo
mov
add
mov
imul
fs
aaa
cmp
sbb
xchg
movsb
mov
add
jl
cmp
jns
ret
and
aam
fdivrl
mov
in
inc
popa
lcall
adc
out
nop
pop
mov
jmp
sub
cmp
sub
xor
sub
cmp
mov
outsb
leave
pop
lea
bound
mov
add
and
pop
mov
mov
sub
in
scas
imul
xchg
add
push
idivb
xlat
mov
in
jo
stc
inc
sub
xor
adc
mov
xchg
rcr
popf
mov
subl
icebp
mov
push
fdivl
inc
adc
pop
sarl
bound
fldcw
mov
dec
int
mov
data16
daa
shrl
add
pop
mov
sub
mov
or
xor
enter
mov
imul
imul
jmp
jmp
in
push
dec
les
dec
and
pop
sub
push
mov
push
jl
cmpsb
or
daa
and
repz
mov
sarb
mov
mov
xchg
dec
ret
in
cld
mov
mov
mov
xchg
cmpb
sti
repnz
lods
xchg
cltd
mov
dec
dec
aas
rcrl
sti
xchg
loop
in
push
jp
decl
inc
inc
je
sbb
std
rorb
ret
out
xor
mov
dec
idiv
data16
xor
mov
movsl
das
xchg
rorl
cmpb
mov
cmp
ucomiss
std
mov
sahf
ds
sahf
or
addr16
jmp
inc
movsl
inc
mov
mov
push
pop
imul
sub
movsb
push
or
insb
adc
outsb
xorl
out
loope
int
movsb
test
cmp
jne
fsub
lods
sbb
outsb
movsb
stos
fdivs
mov
cmc
scas
push
lea
push
push
xchg
cmpsl
pop
outsl
inc
enter
call
jg
xchg
rorb
cwtl
mov
mov
mov
rcll
xchg
mov
popf
es
dec
pop
lret
addr16
xor
add
mov
cmpsb
dec
cmp
popa
aas
fdivl
roll
popa
iret
int3
jb
mov
sub
pop
push
movsb
outsb
push
xchg
shrl
xchg
push
mov
dec
cs
or
repnz
bound
fstl
and
lcall
shlb
addr16
aaa
sub
xchg
and
lret
outsb
dec
in
out
into
jo
cmpsl
push
jl
lea
das
inc
and
mov
mov
jae
jge
mov
data16
or
out
stos
push
mov
mov
ror
add
int3
shlb
dec
lods
fs
test
jno
fcoms
subb
or
pop
leave
loope
add
and
mov
cmp
inc
mov
inc
jecxz
or
xchg
fisubrl
ljmp
sti
or
push
clc
pop
test
xchg
lret
movsb
inc
in
addb
add
std
dec
sahf
adc
sbb
or
lea
insl
or
scas
or
push
int
xchg
mov
push
stos
movsb
test
mov
sbb
mov
scas
push
insl
into
push
fistpll
in
dec
dec
jne
jns
testl
sub
ja
pushf
xor
add
test
ljmp
and
cmpps
lret
jbe
add
sbb
or
push
notl
cli
pop
sbb
js
push
rclb
xchg
lods
test
fpatan
shrl
jge
stc
out
lahf
sbb
push
fdivs
ds
push
cmpl
inc
and
xor
ficoml
push
dec
inc
cmc
xchg
orl
xchg
jbe
std
ja
jns
push
adc
xchg
mov
push
in
add
fucomip
ss
fdiv
xor
cmp
fs
jno
lahf
mov
stc
roll
xchg
xor
jle
loopne
subb
sub
bound
sub
or
inc
jb
xchg
aam
sar
and
ss
or
jl
push
call
in
cmc
dec
xor
cmp
push
pop
repnz
mov
cmp
adc
sub
mov
mov
push
pop
jg
xor
sbb
add
push
jle
xor
inc
jmp
cmp
sbb
xor
add
cmp
mov
lret
sbb
lds
iret
and
movsl
cmpsl
lret
cmp
movsb
cmp
fisttpll
mov
and
icebp
loopne
sub
adc
push
insb
std
mov
in
aas
xchg
xchg
stos
cmp
push
stos
jbe
xor
add
mov
nop
pop
jp
fs
out
arpl
call
jmp
jecxz
movsb
adc
mov
scas
push
cmp
inc
jmp
arpl
xor
aad
enter
push
lahf
mov
xchg
cmp
insl
mov
popa
or
adc
pop
sahf
cltd
aam
inc
dec
test
ret
sbb
mov
sbb
cmp
insl
insb
sahf
jae
or
scas
xchg
xor
aaa
test
cmc
mov
outsl
lock
stc
push
jl
xchg
push
mov
lods
cmc
scas
scas
je
jbe
pop
and
cmpl
mov
dec
addl
push
sbb
mov
sub
test
fsubrs
into
cmp
gs
dec
pop
pushf
testb
cmpsb
inc
push
add
sub
mov
sbb
aad
cmp
daa
pop
xchg
lret
sbb
add
ret
aaa
jnp
shll
idivl
xor
aaa
aam
outsl
dec
pop
test
or
test
ret
pusha
jmp
or
sub
jbe
bnd
push
fwait
ja
xchg
cltd
xchg
xchg
in
arpl
sub
push
fidivrl
int3
stos
xchg
xchg
and
jp
movsl
call
xor
cli
cmpsb
in
stos
lret
in
call
subb
add
or
adc
iret
dec
push
mov
lods
subb
iret
sbbb
cwtl
js
cli
mov
push
stc
pop
int3
mov
jl
inc
iret
imul
sbb
scas
and
outsl
mov
and
mov
imul
shrb
jae
lods
jb
add
and
pop
lods
dec
mov
outsb
orb
dec
jo
xchg
push
or
push
add
mov
movsl
xchg
movsb
insl
push
jg
fistpl
push
out
shlb
out
stos
rcrb
jno
aaa
or
fiadds
lret
sbb
fistpll
ljmp
cmp
mov
outsl
jmp
mov
cltd
jno
std
pop
fiaddl
outsb
dec
mov
ljmp
dec
in
rorl
dec
cld
hlt
add
movsl
push
int
test
jnp
cmp
dec
xchg
aad
mov
pop
push
pop
hlt
mov
addl
fadd
stos
push
mov
std
sahf
fistpl
mov
cwtl
popf
push
xchg
ret
clc
push
data16
dec
aas
xor
ss
leave
xchg
mov
sbb
push
in
mov
popa
xchg
sub
repnz
jbe
inc
frstor
cmpsl
xor
mov
mov
xorb
insb
inc
mov
fwait
pop
stc
les
stc
imulb
loope
sti
jle
jne
scas
mov
jl
mov
jno
mov
shlb
popa
cmp
cmp
jl
push
negl
mov
and
pop
movsb
dec
gs
jb
ss
sbb
push
sub
mov
push
cmc
pop
inc
in
push
pop
mov
and
lods
push
imul
jl
inc
imul
sub
int3
sbb
iret
ja
lret
jl
outsl
je
push
push
jp
pop
xlat
in
xchg
movsl
xor
lods
ja
pop
int
sbb
push
push
inc
or
out
add
ljmp
and
outsl
sbb
movd
addr16
scas
leave
jne
ds
xchg
cmp
inc
nop
push
lret
in
clc
fwait
jp
push
mov
inc
ficoms
insl
jb
iret
shrl
not
mov
mov
push
jmp
mov
inc
sahf
jg
mov
fwait
xchg
in
cs
int3
mov
dec
mov
sbb
xchg
cmp
xchg
test
mov
mov
lods
hlt
cltd
stc
sub
sti
jl
ret
pop
push
mov
popa
jge
add
mov
cmpsl
sar
inc
out
scas
mov
sbb
hlt
iret
in
xchg
add
iret
into
cmp
in
pop
jbe
inc
cs
add
rclb
lea
mov
stos
cs
jns
mov
testb
mov
mov
sub
sbb
cmp
mov
test
push
pop
xor
adc
push
add
mov
mov
rclb
inc
lret
sbb
mov
inc
xchg
filds
int
jb
rolb
sbb
enter
adc
imul
pop
je
mov
je
fstps
bound
lret
cmp
mov
and
push
mov
ret
xor
insb
jae
dec
ror
in
mov
fs
xchg
fwait
cmc
push
push
adc
cld
sti
ja
test
ja
ss
push
inc
sub
sbb
pusha
jmp
mov
dec
xchg
dec
mov
sub
jl
notl
cli
lahf
push
mov
push
xor
sub
inc
sbb
ss
dec
ljmp
outsb
ret
mov
clc
lds
jo
incl
dec
cmp
sbb
push
clc
bnd
add
lret
or
xchg
push
dec
es
sub
xchg
sbb
loopne
pushf
adc
sbb
test
and
test
in
pop
lods
imul
fbstp
sbb
daa
hlt
cmp
jns
jp
mov
mov
inc
imul
pop
fiaddl
xchg
jne
out
xchg
test
rclb
pop
stos
andl
sarb
push
fisubl
rcrb
adc
sbbb
iret
rorl
nop
xchg
rcr
cmp
stos
sub
sahf
mov
cmp
ret
pop
sbb
popa
lcall
or
xchg
std
or
dec
out
insb
or
and
orb
ret
lods
jno
mov
jo
mov
je
mov
mov
stc
ret
insl
in
fimull
sub
dec
cmpsl
retw
arpl
jmp
cmp
fwait
adc
repnz
jae
das
pusha
pop
jbe
ret
popa
out
cmp
mov
push
xor
jo
mulps
xchg
fwait
js
stc
dec
mov
mov
dec
jns
iret
or
jge
mov
aad
push
pop
jbe
dec
mov
out
ret
jecxz
dec
pop
mov
xlat
mov
mov
fs
fcmovnu
iret
and
sahf
mov
aad
lods
test
roll
and
lods
jg
testb
pop
test
test
mov
cmp
mov
outsl
mov
in
mov
mov
dec
jbe
xchg
mov
into
lods
outsl
mov
add
inc
adc
dec
inc
sahf
scas
inc
adc
jle
fs
mov
lock
adc
or
fsubl
lret
inc
xchg
cltd
ret
push
fucomp
mov
in
jne
stos
aaa
enter
cmp
xchg
sub
popa
jns
inc
arpl
leave
push
pop
fnsave
or
cmp
sbb
add
aad
gs
xor
sub
lret
les
jns
div
xchg
sub
es
pusha
loopne
mov
inc
les
cltd
dec
jns
mov
ret
push
jl
jecxz
cmpsb
aad
mov
ds
adc
pusha
repz
lahf
add
out
lret
xchg
jo
push
les
sbb
mov
cwtl
repnz
daa
adc
sbbl
shll
scas
test
mov
mov
movsl
lea
add
pop
xchg
push
push
adc
test
push
and
or
xchg
cmp
mov
mov
inc
sbb
mov
fnstcw
test
lods
jmp
ret
scas
rorl
pop
push
lock
jmp
xor
mov
add
jl
insb
loop
mov
lahf
loop
mov
ret
ds
sbb
jae
leave
mov
shlb
dec
push
rcll
xor
sbb
ret
cld
daa
inc
mov
jae
mov
lods
jb
adc
faddl
scas
or
stos
lock
sbb
icebp
adc
cwtl
pushf
pop
into
adc
cli
pop
cli
out
movb
lea
enter
sarb
lret
lds
jmp
shlb
add
stos
mov
or
jmp
fists
adc
out
add
mov
pop
mov
icebp
fcompl
add
mov
inc
cmp
fisttpll
iret
clc
int
aad
maxps
scas
push
nop
in
xchg
mov
lahf
pop
mov
add
push
jp
jbe
fmull
adc
and
jmp
cltd
pop
es
mov
dec
clc
lea
push
mov
push
and
scas
mov
dec
dec
mov
fwait
lahf
sbb
cwtl
lods
aas
daa
lret
mov
test
ret
lret
dec
scas
mov
add
mov
sbb
cmp
push
popa
mov
bound
mov
xchg
dec
sub
mov
mov
cmp
push
popa
lock
movsb
mov
inc
lret
iret
xchg
idiv
pop
cmp
jg
jbe
sbb
push
xchg
pop
or
icebp
adc
arpl
es
mov
test
imul
divl
mov
push
dec
call
xchg
or
add
aad
out
ret
dec
push
rorl
bound
scas
cs
iret
add
out
push
mov
mov
lret
outsl
mov
sub
dec
dec
out
cmpsl
mov
or
inc
outsb
aaa
mov
pop
in
fisttps
dec
daa
xor
iret
xchg
pop
out
xchg
dec
int
dec
mov
rolb
mov
jmp
dec
testb
jb
push
xchg
mov
mov
xchg
scas
push
fnsave
push
ja
and
test
out
adc
dec
pop
ret
out
or
mov
in
lock
jno
les
mov
sbb
jg
jbe
pushf
mov
je
inc
fsub
mov
mov
lock
mov
lods
sub
push
lds
fsubrp
lods
cmp
insb
idivl
cld
daa
push
iret
fidivrl
add
xor
pop
daa
ds
pop
push
pop
enter
jmp
inc
sti
dec
arpl
loope
sub
dec
cmp
mov
sub
jne
pop
daa
enter
das
sbb
or
xor
dec
mov
cltd
rcr
cmp
xchg
and
jnp
xor
sub
rcrb
sahf
in
je
xchg
push
out
push
imul
lods
aad
adc
test
push
divl
divb
fisttpl
insb
sbb
scas
pushf
imul
jge
out
adc
in
daa
out
mov
xor
cmp
pushf
jmp
and
mov
mov
sbb
xchg
fdiv
xchg
ret
jg
mov
in
enter
fdivl
cmp
clc
lock
xchg
add
pop
aam
jae
enter
in
push
stos
outsb
jp
and
mov
jae
nop
mov
jno
add
mov
push
lcall
lahf
psadbw
test
lods
scas
push
sub
jge
xor
add
mov
jl
popf
and
xchg
sbb
insl
sub
in
ja
xchg
dec
popf
mov
fidivs
add
imul
fisubl
js
xchg
sub
stc
mov
add
les
mov
mov
int
lret
je
dec
lahf
sbb
lock
stos
and
and
push
lock
push
out
jmp
into
fnstcw
mov
sub
xorb
pop
int
sbb
xchg
lahf
pop
push
mov
push
sub
xchg
loope
dec
in
adc
cmp
testb
in
scas
addl
pop
add
adc
in
mov
sub
mov
mov
or
ror
clc
mov
imul
test
leave
test
shrb
mov
insb
test
jg
mov
add
mov
inc
inc
adc
adc
subb
mov
fstpl
notb
push
add
loope
test
mov
and
popa
xor
fstpl
pop
jge
push
xchg
rolb
popl
daa
push
dec
jbe
mov
popa
mov
jg
popf
outsl
push
imul
shl
lods
iret
sbb
xchg
inc
mov
pop
aam
xchg
int
in
hlt
cld
jl
mov
mov
into
sti
ficompl
pushf
jae
xchg
mov
push
inc
frstor
lcall
and
cmp
push
pusha
mul
or
cmp
lret
dec
sub
pop
stos
repz
jge
clc
cmc
pop
pushl
sbb
jge
shlb
dec
outsb
out
lock
clc
pop
and
sub
pop
push
nop
mov
mov
and
push
push
pop
jmp
popf
lret
cld
jns
orl
daa
lds
dec
lea
xchg
push
mov
scas
xor
mov
cmp
test
mov
dec
mov
scas
dec
xchg
push
dec
sub
mov
imul
test
cmpsl
pop
xor
out
push
mov
repnz
nop
fnsave
mov
out
and
stc
nop
fsubs
jns
xor
stos
arpl
fs
jnp
mov
push
jo
push
into
or
and
xchg
jbe
dec
out
cwtl
imul
loope
movsl
jnp
sub
xchg
mov
mov
inc
stc
lods
fistpll
mov
mov
arpl
adc
fisttps
adc
pusha
sub
jmp
sahf
in
mov
cwtl
mov
mov
sbb
cltd
mov
outsl
jmp
add
xor
push
imul
daa
cltd
sbb
gs
add
shr
cmpb
clc
lea
out
mov
xchg
add
jge
and
icebp
movsl
lds
xchg
int3
popf
aad
lcall
sbb
mov
jo
pop
push
mov
pop
add
jp
orb
iret
inc
stos
push
mov
mov
mov
outsb
aad
fldl
xor
dec
mov
ret
lods
pushf
sub
in
and
pushf
sbb
fcmovbe
dec
scas
mov
lea
dec
jbe
cmpsb
fstps
jmp
ror
pop
push
icebp
sahf
and
xchg
ljmp
dec
out
jno
and
cmc
cmpsl
add
popl
shrl
lcall
pop
test
pop
mov
push
adc
add
std
push
lods
cmp
push
pop
imul
and
pop
mov
gs
adcl
cmc
pusha
rcrl
cwtl
mov
cmpb
xchg
sub
pop
and
jnp
int
jmp
inc
cs
mov
inc
insl
sbb
movsl
test
add
fs
mov
aad
std
lret
cmc
loop
js
mov
lret
xor
lods
push
mov
or
les
mov
jmp
jo
push
pop
outsb
xchg
cmpsl
or
sbb
sbb
clc
test
mov
sbb
les
mov
mov
mov
out
sub
mov
das
mov
std
lret
pop
fstpl
loop
pop
dec
ret
cmc
outsb
cs
or
add
xor
test
xchg
mov
push
xchg
dec
std
xchg
adc
mov
adc
in
dec
adc
hlt
jmp
xchg
filds
jl
pop
cld
mov
pop
xchg
jmp
sbb
stc
stos
popf
push
jge
push
sbb
andb
jmp
ror
mov
sub
rcrb
mov
mov
inc
jne
adc
mov
outsl
imul
test
test
xchg
movsl
mov
push
mov
jl
push
inc
jge
shl
push
mov
pushf
xchg
into
std
lret
dec
inc
bound
cmpsl
outsl
mov
ret
int
in
out
ret
mov
addr16
dec
adc
out
pusha
scas
test
mov
and
push
add
insl
in
aas
sub
in
lea
dec
sbb
lea
fs
lret
fisubl
jle
out
mov
mov
pop
in
push
fsubl
jecxz
pop
ret
pop
jp
adc
add
and
mov
xor
cmp
push
imul
push
dec
ret
pop
inc
push
mov
push
pop
or
pop
pop
push
aas
jns
jne
bts
jp
lea
jnp
sub
test
out
jmp
rcr
sbb
xchg
jo
divb
push
js
pushw
mov
jbe
gs
popf
inc
nop
xchg
lahf
jns
cmp
lock
and
and
prefetcht1
cmp
cmp
add
in
lods
dec
push
sub
adc
fstps
sub
sbb
jns
add
cli
cld
sub
inc
test
push
stc
or
enter
js
sub
and
push
pop
into
mov
xchg
inc
gs
sbb
ficoml
shll
pop
test
pop
in
sub
jge
aas
pushf
xchg
dec
cmp
call
sub
sub
fstl
fs
jecxz
lret
mov
sahf
lahf
fisubrl
add
inc
data16
push
adc
mov
arpl
jne
outsb
daa
and
cmp
pop
das
into
sbb
push
into
push
jne
sbb
fldl
or
lcall
mov
movsl
or
xor
ficompl
mov
jle
aad
adc
mov
pusha
push
stos
fs
sub
mov
into
imul
mov
leave
mov
adc
sub
inc
pop
or
in
or
mov
mov
imul
lret
jl
push
cmp
cmp
cmp
lock
pop
adc
mov
dec
jb
fstpl
or
mov
in
in
icebp
je
jecxz
idivl
fdiv
insb
subb
push
xbegin
mov
xor
pop
sbb
and
sbb
dec
pop
xchg
aas
pop
jle
shll
sti
adc
xor
out
lea
fwait
xchg
jmp
popa
ljmp
jne
jmp
mov
sub
cmp
xor
push
xor
add
ja
repz
int
sarb
mov
pop
adc
or
and
jb
fwait
xor
inc
pop
push
inc
pop
mov
pop
mov
insb
lahf
ljmp
hlt
push
inc
es
dec
adc
iret
cmpsl
int
fidivrl
fidivrs
leave
jecxz
push
int3
jge
sbb
mov
subl
out
and
xor
outsb
xor
sub
mov
int3
or
dec
lret
lds
or
loop
imul
xor
lods
test
cmc
mov
xchg
inc
ret
aas
fimuls
dec
int3
out
push
add
es
adc
out
dec
push
pop
test
sbb
repz
in
outsl
es
push
xchg
pop
jnp
mov
push
pop
inc
aaa
pushf
and
xchg
call
inc
dec
mov
ss
movsl
in
xor
das
push
push
cli
in
insl
pop
push
pop
mov
push
popa
stos
ja
aad
push
or
int3
push
push
xlat
pop
rcrb
sarb
imul
clc
sar
lods
lds
iret
xchg
xchg
iret
scas
cltd
mov
jne
lds
add
pop
inc
lret
push
push
call
outsl
shll
xchg
mov
and
jle
sarb
inc
je
gs
push
push
xchg
int3
xchg
lds
movsb
adc
pop
xchg
mov
and
mov
call
xor
inc
push
es
lahf
out
push
mov
stos
outsl
mov
rcrl
sahf
insb
fnstcw
jne
mov
pop
mov
movsb
test
fs
push
mov
adc
loop
xor
sub
rolb
sub
pop
push
std
add
fcoml
das
aas
in
cltd
stos
xchg
lea
clc
dec
cmp
std
cmp
leave
sbb
push
in
adc
inc
jp
insl
jle
adc
sbb
jge
shlb
in
dec
hlt
push
mov
into
pop
cmc
ficompl
aas
cmp
inc
jae
xchg
pushf
cmp
stos
in
cmc
xchg
and
jle
dec
insb
jbe
sub
mov
xor
clc
cmpsb
in
insb
test
shr
lods
popf
popa
sbb
stc
jo
xor
sub
mov
jmp
adc
aam
out
orl
adc
sbb
xor
mov
cmp
xor
in
xor
xchg
aam
or
mov
and
andb
mov
inc
repnz
in
sbb
xor
push
pop
dec
lret
ret
push
rcrb
push
push
pop
fisubl
dec
mov
cmp
cltd
fisttpl
psubq
adc
sahf
pop
dec
jb
xchg
into
and
mov
push
jmp
mov
movsl
jecxz
add
cmc
cmp
pop
add
je
mov
adc
cld
jg
jmp
out
popa
out
in
xor
inc
sbb
iret
syscall
add
fstpt
arpl
adc
adc
clc
out
push
xor
sbbb
ss
lea
mov
add
ret
mov
repz
icebp
cmp
or
and
xchg
adc
mov
data16
out
pushf
cmp
jae
inc
mov
lds
xor
push
mov
pop
pop
fstps
jg
adc
in
into
lea
ret
js
fiaddl
xor
push
mov
jbe
dec
pop
dec
daa
movswl
push
into
push
cltd
dec
inc
out
iret
lahf
jmp
addl
jle
sbb
rorb
inc
add
arpl
orl
repz
cmp
lcall
popf
in
and
jne
or
jp
incb
jb
stos
add
int
pop
mov
xchg
imul
push
out
sbb
inc
lcall
addl
jle
ret
sub
std
pushf
fxch
rcrl
jne
sub
mov
test
mov
scas
addb
pushf
imul
pop
dec
popf
add
ljmp
jmp
cmp
inc
xor
fistpl
mov
jno
pop
jae
dec
and
in
in
mov
sub
vmwrite
dec
out
lds
adc
lret
insb
add
mov
dec
dec
xchg
addr16
pop
mov
test
sbb
aad
dec
pop
inc
les
test
scas
pop
mov
and
jno
cwtl
adc
mov
sbb
mov
pop
pop
add
mov
jb
sti
pop
popf
lahf
jg
out
or
xchg
adc
addr16
std
out
xchg
fnstcw
popf
xchg
test
icebp
adc
outsb
inc
fstpl
addr16
jns
mov
jle
push
into
add
add
mov
adc
sti
jb
nop
mov
cltd
dec
jecxz
dec
or
xchg
mov
pop
mov
inc
in
push
or
out
repnz
mov
jb
xchg
mov
mov
ja
jae
jno
lods
fmulp
ds
pop
clc
xor
enter
cmp
insl
inc
adc
daa
cmc
addr16
scas
inc
add
jmp
pop
mov
fs
xor
jg
fimuls
mov
mov
push
dec
loopne
sub
push
or
adc
movsb
ja
inc
inc
mov
mov
push
ret
test
sbb
cld
scas
std
or
es
xor
outsl
jnp
int3
and
jmp
mov
shrb
jno
test
or
insl
push
jg
xchg
lea
dec
out
clc
popa
xor
jmp
mov
adc
gs
in
and
divb
scas
inc
jb
pop
lahf
leave
mov
sub
pop
cmc
xor
outsb
out
mov
inc
fisubl
testb
std
ficoms
jb
std
fstl
mov
push
cmp
fidivrl
loopne
frstor
test
loop
jno
cld
dec
rcr
imul
sar
jbe,pn
pop
popf
test
adc
lea
lahf
stc
xlat
push
pop
pop
cmpsb
mov
es
std
dec
add
jl
fcomp
cmc
pushf
xor
jl
popa
lods
shlb
lods
cltd
aam
inc
mov
ret
jbe
or
lahf
add
std
jns
fisubrl
mov
adc
pusha
xor
out
and
dec
pop
repz
in
bound
jb
pop
inc
outsb
mov
push
mov
mov
xor
pop
fcom
in
xor
testb
mov
lret
xlat
adc
loopne
push
out
test
xchg
mov
xor
dec
out
jecxz
lods
adc
and
pusha
in
in
out
pop
add
outsl
mov
mov
lcall
inc
add
nop
xchg
ja
repz
adc
aas
xchg
imul
or
mov
mov
add
in
int3
movsb
inc
jge
push
fisttpll
les
xchg
jno
xor
mov
pop
mov
sbb
xor
xor
cld
mov
lds
bound
dec
icebp
std
or
in
std
pop
push
lock
mov
aad
push
leave
mov
les
fcomps
or
mov
sub
lret
mov
loope
orl
or
push
xchg
test
iret
jl
add
daa
data16
dec
jmp
xlat
pop
mov
mov
pusha
cli
inc
mov
mov
cmp
dec
loope
lea
cmp
stos
clc
dec
xor
sub
cs
mov
test
lea
inc
lods
and
dec
or
sar
or
icebp
loopne
lock
arpl
dec
cmp
inc
add
inc
pop
xchg
sbb
pop
sarl
sahf
adc
xlat
jnp
pop
or
sbb
sbbl
inc
enter
jnp
push
xorl
data16
pop
js
inc
cmp
sub
int
push
xchg
fwait
or
test
out
or
jg
pop
ror
test
stc
popf
xor
pop
xchg
adc
mov
out
lcall
lret
and
sbb
xor
andb
mov
ljmp
or
lds
mov
out
test
mov
xchg
pop
adc
int
insl
xchg
insl
ret
outsl
call
mov
gs
cmp
push
dec
adc
test
push
mov
push
jo
out
shlb
fsts
xor
rclb
cmp
sbb
fs
and
and
add
mov
push
pushf
sub
jmp
loopne
push
outsl
sbbb
ds
jp
aas
dec
ret
int3
aad
into
mov
fcomip
rcrl
add
cmp
or
mov
and
popl
rorl
add
and
sahf
mov
je
mov
cmp
fs
in
shr
xchg
mov
stc
xchg
xchg
sub
ds
mov
and
mov
lds
negl
xor
push
xlat
pop
and
loopne
pop
repnz
jecxz
int3
cli
clc
mov
sarb
inc
ds
sbb
ret
xlat
sub
cmp
lcall
loopne
jns
ss
hlt
jecxz
xchg
sbb
idivb
mov
mov
mov
jmp
mull
pop
popf
inc
sub
stos
mov
loope
pushf
or
lret
add
les
adc
push
adc
push
iret
into
adc
xchg
pop
inc
cmp
jmp
test
mov
je
mov
mov
jb
lods
rol
sub
cwtl
mov
hlt
jb
xor
push
inc
sarl
je
cmp
xor
imul
repnz
or
lret
jb
mov
cs
cmp
push
add
pop
inc
icebp
mov
in
cld
cmpsl
jb
negb
les
mov
jae
lret
and
push
test
iret
xchg
xor
cmp
lret
lea
jmp
mov
rcl
jg
jge
mov
inc
test
dec
scas
jmp
mov
push
push
scas
mov
orl
or
mov
out
divl
sbb
mov
add
test
frstor
incl
mov
adc
loopne
call
push
sahf
add
icebp
imul
xchg
cs
subb
mov
dec
mov
test
adc
or
popa
mov
lret
jmp
lods
push
pop
insb
push
jae
scas
xlat
and
mov
adc
pop
hlt
add
lods
inc
imul
xchg
out
add
mov
or
sbb
adc
movsl
fiaddl
imul
mov
mov
mov
fs
mov
sub
in
sub
push
mov
mov
dec
sbb
mov
nop
out
clc
leave
push
test
lret
pop
pop
mov
test
fbstp
bswap
pop
pop
hlt
push
push
in
lret
and
fisttps
movsl
loopne
and
iret
cld
aam
mov
lret
mov
mov
out
jo
mov
pop
mov
addr16
xchg
jl
cmpsl
lds
sbb
loop
scas
in
mov
jg
out
idivb
cli
fldt
cltd
fs
cmp
enter
mov
and
jecxz
test
pop
arpl
clc
shll
test
mov
dec
inc
adc
loopne
pop
pusha
daa
xchg
jne
fildl
jg
out
pop
mov
test
daa
sbb
and
xchg
xchg
mov
and
imulb
das
and
jmp
xlat
fwait
jp
cmp
sbb
daa
sub
bound
dec
cld
jae
push
xchg
in
mov
add
mov
and
sub
adc
push
frstor
mov
inc
movb
out
jp
xchg
or
imul
jle
call
ja
enter
push
mov
xlat
lcall
insl
cmpsl
jecxz
jmp
sbb
mov
adc
loop
xchg
fld
dec
outsb
icebp
pop
jmp
mov
imul
xchg
ds
daa
cmp
loopne
xchg
push
cmpsb
cmp
and
rorb
in
sbb
push
or
jge
adc
mov
or
mov
gs
fildll
sbb
push
push
sbb
mov
hlt
dec
pop
aaa
ret
sub
push
scas
add
out
in
mov
jge
ficoms
inc
dec
sahf
arpl
dec
adcb
mov
js
mov
pusha
aas
push
adc
and
cwtl
test
insb
sahf
ds
mov
int3
push
shll
pusha
pop
fcoms
lahf
rorl
lea
outsl
inc
pop
jae
rolb
mov
mov
ljmp
push
cmp
cmpsb
in
ret
sub
jge
pop
dec
pushl
xlat
sar
das
xchg
shrb
sub
adc
icebp
mov
cmp
inc
repz
lods
dec
or
into
add
or
mov
mov
push
xor
push
dec
jge
scas
sub
cmp
subl
icebp
or
sbb
lock
cltd
lret
push
les
xor
dec
adc
mov
or
pop
push
push
adc
movsl
pop
in
mov
or
movsb
fucomp
mov
leave
jo
fwait
imul
mov
insl
xor
shrb
cmc
mov
cmp
testb
jno
push
pop
jp
pop
push
mov
fmul
xor
jge
xor
scas
push
xchg
sub
cmp
jnp
cmp
rolb
movsb
xor
push
pusha
aad
inc
insb
ja
mov
inc
aad
fcoml
mov
mov
xchg
or
ljmp
es
insl
lods
dec
jno
mov
pop
mov
cltd
mov
jnp
pop
lret
enter
sbbl
fcoml
dec
jl
push
mov
in
ficomps
adc
sub
cld
stos
dec
dec
cmp
sahf
cld
mov
mov
ss
movsl
mov
nop
pop
and
jne
dec
sub
rorl
pushl
jmp
shlb
into
push
cli
into
jno
dec
xchg
aaa
test
in
stos
shrb
aaa
cld
pop
mov
sub
add
fs
adc
ja
push
int
dec
adc
or
cltd
rorb
xchg
mov
add
or
fbld
orl
mov
ds
jmp
shl
pop
xchg
inc
outsl
arpl
out
dec
daa
and
pushf
cmp
dec
dec
or
dec
jmp
jno
pushf
lock
arpl
icebp
sub
stos
mov
in
hlt
xchg
mov
out
rcrb
sub
div
mov
lea
push
fnstsw
clc
push
ljmp
dec
add
and
cmpb
dec
push
or
xor
inc
push
inc
inc
xchg
pop
mov
sub
sti
icebp
mov
mov
xlat
push
scas
daa
jecxz
in
fiadds
into
scas
ds
xchg
and
and
mov
notl
cmp
ljmp
adc
vcvttsd2si
mov
jns
stos
mov
test
int3
push
es
ffree
xorb
inc
xor
stc
jae
sub
or
or
out
or
rorl
pop
inc
add
sbbl
and
or
push
and
in
or
mov
mov
cmp
aaa
dec
push
dec
inc
mov
fstpl
test
rcrb
mov
sbb
xchg
in
sbb
sub
xchg
jb
mov
outsl
mov
dec
data16
mov
sub
enter
outsb
scas
cmpsl
stc
sahf
sarl
gs
movsl
into
mov
ja
testb
inc
mov
sub
out
call
xor
xorl
sbb
movsb
movsb
loop
add
popf
mov
adc
enter
mov
int
pushf
imul
fs
mov
jo
mov
es
inc
xlat
pop
ja
test
pop
push
inc
rorb
jle
dec
rcrl
pop
xor
js
insb
jge
pop
addb
inc
mov
aaa
lahf
mov
xor
sar
cmp
and
fs
push
scas
ds
aam
or
cmc
or
icebp
popa
xchg
lock
lods
mov
loopne
push
stos
js
pop
dec
das
pop
pop
push
data16
mov
sti
nop
cmp
xlat
test
inc
xchg
imul
adc
xchg
or
ds
int3
pusha
or
xor
mov
jno
push
cmp
mov
jmp
sbb
ja
jno
mov
mov
aad
ret
mov
mov
int3
or
jmp
rolb
ss
aas
or
dec
test
xlat
lock
xchg
mov
inc
mov
popa
mov
mov
jge
cli
lret
jge
push
cmp
xlat
and
inc
arpl
jbe
in
iret
lahf
incb
mov
sub
push
sub
jecxz
test
loope
mov
fmuls
daa
popf
lahf
movaps
sarb
mov
cmp
jl
loop
test
ds
lods
pop
loopne
divl
lds
cmpsl
inc
xor
mov
sub
call
adc
sbb
jnp
jbe
xor
lods
cli
fisttpl
push
stc
loopne
aam
ss
ljmp
sub
add
sahf
adc
hlt
cld
sahf
sbb
xlat
jb
mov
aas
mov
call
adc
fwait
sbb
or
lret
fwait
push
add
mov
cmc
out
repnz
pop
add
in
and
imul
divl
sub
cld
cs
lahf
subb
push
and
mov
jl
add
and
mov
pusha
fstp
cmp
pop
cmp
mov
andl
sbb
sbb
mov
int3
lcall
fildl
add
jle
repz
scas
lods
loope
outsl
sbb
xorb
mov
jb
popa
in
cwtl
bound
or
rcl
test
ljmp
ret
aad
std
andb
adc
mov
movsl
push
or
ret
lahf
or
outsl
mov
cld
sbb
sub
fidivl
jp
fs
pop
outsb
test
pop
stc
daa
sub
ficomps
fdivl
add
inc
cmp
xchg
test
pop
les
adc
push
gs
dec
gs
mov
inc
fistpll
and
inc
inc
ss
add
lret
or
mov
ja
lret
in
pop
in
popa
call
sub
mov
mov
xchg
inc
lods
jno
or
jns
test
mov
ficoml
add
lock
or
ja
repz
daa
jmp
push
mov
adc
and
lret
pop
in
xchg
enter
lods
jmp
push
les
pop
push
outsb
or
insb
sub
jae
test
jle
fdivrl
adc
call
movsl
push
push
loopne
jmp
jb
orl
add
fildl
mov
gs
sub
adc
filds
push
test
cmp
repz
fwait
cltd
pusha
pop
lret
inc
adc
push
xor
adcb
jne
testl
pop
scas
xchg
ror
adc
and
cmp
pop
push
loope
addr16
mov
imul
insl
xor
sub
sti
add
sar
xchg
test
sbb
mov
add
ja
add
loopne
test
adc
shll
out
scas
pop
sahf
mov
mov
test
xchg
inc
out
out
pop
mulb
xlat
lods
andl
push
call
xor
stos
xchg
iret
cmp
les
scas
int3
sub
sub
sti
jno
mov
sti
jae
pop
cmpsl
push
jl
les
dec
jl
mov
inc
jae
add
dec
fsubrs
inc
mov
pop
jl
stos
push
test
pusha
pop
push
xor
xor
cmpb
sbb
mov
icebp
add
pop
shlb
ds
enter
int3
inc
mov
aad
les
and
mov
xchg
add
xchg
fwait
cmpsl
mov
xor
shlb
push
inc
hlt
or
or
andb
add
fldl
xlat
fimull
pop
je
add
add
mov
lods
mov
push
pop
jne
jae
imul
mov
in
xchg
es
mov
or
cmpb
sbb
fsubs
lods
std
cmpsb
jne
mov
cmpsl
xor
lods
pusha
mov
mov
rcrl
insb
cmp
mov
mov
mov
ret
in
sbb
cmp
imul
lret
out
pushf
pop
mov
and
arpl
cld
dec
popa
and
and
pop
nop
lds
jmp
jge
jecxz
sbb
pop
sub
pop
lds
add
aad
dec
mov
mov
lock
adc
sbb
dec
sub
push
out
loopne
addl
adc
jg
sti
scas
dec
cmpsl
mov
inc
sbb
jno
mov
xor
popf
add
mov
testl
cs
lea
test
out
movsb
insl
sbbl
vandps
dec
in
inc
adc
test
jge
cli
movsl
mov
cwtl
add
jae
pop
push
jbe
xlat
dec
push
daa
shlb
cmp
push
dec
imul
mov
xchg
sub
aaa
push
jb
mov
ror
rorl
or
sub
fisttpl
dec
ds
xchg
push
xchg
or
jge
data16
adc
jns
xlat
xlat
push
mov
stc
jnp
mov
into
jns
and
mov
lock
inc
sahf
lock
mov
fsubs
out
sbb
sub
mov
sbb
sbb
shrb
or
aad
pushw
dec
lds
addb
cwtl
aam
jle
jl
cmp
bound
sub
aas
pop
ficoml
test
mov
jecxz
pop
addl
lcall
int3
xor
xchg
inc
jo
fidivs
les
and
inc
mov
lahf
and
repnz
add
sbb
out
adc
bound
and
and
fimuls
out
mov
incb
sub
gs
or
xchg
push
sbb
pop
fisttpl
in
roll
imul
and
adc
xchg
inc
lea
rcr
sbb
mov
or
mov
jle
mov
ss
mov
aas
lret
imul
test
mulb
decb
fs
stos
mov
cmpsb
in
jg
popf
pop
or
fmulp
push
clc
addr16
xor
push
je
arpl
xor
vmovaps
push
popa
sub
xchg
inc
fildll
aam
sar
push
xchg
mov
stc
mov
mov
leave
xor
cmp
movsb
inc
std
lcall
iret
sbbl
into
movl
insb
jns
fidivs
aaa
push
enter
enter
lret
daa
insl
and
xchg
movl
jl
push
out
jb
xchg
addr16
mov
cld
dec
jnp
jnp
les
cmp
shrb
mov
xchg
insl
stc
jns
xor
es
jecxz
pusha
sahf
lea
adc
jg
sub
dec
mov
idivl
adc
addr16
mov
push
cmp
in
sub
pop
sti
jo
and
loope
insb
stos
and
cmc
in
fldl
ja
ja
stos
xchg
repnz
jge
mov
imul
insb
dec
xchg
pop
arpl
or
mov
jo
mov
cltd
mov
cs
out
sbb
cmp
loopne
mov
rorl
jle
repnz
jo
in
sbb
dec
fmul
mov
int
shlb
inc
xchg
xor
test
push
pop
scas
xchg
xchg
loop
lea
les
into
rorl
xchg
es
adc
jecxz
call
mov
jge
in
pop
dec
mov
pusha
filds
jne
ljmp
es
sahf
mov
jo
sahf
shll
xor
ja
cwtd
xor
push
and
or
loope
into
jge
movsb
and
std
inc
and
push
mov
out
pushf
sub
cwtl
jne
out
pop
mov
adcb
inc
sbb
fldcw
and
jb
mov
mov
outsl
daa
mul
cmp
out
xchg
inc
fildl
xor
aam
inc
fisubrl
adc
pushf
cmp
fistps
stc
insb
xor
mov
mov
cmpsl
xorb
leave
push
jg
mov
xlat
pop
loope
or
dec
lock
aas
shll
addr16
jb
pop
xor
sahf
pop
aam
clc
inc
int
rclb
lret
xchg
inc
call
pop
imul
xchg
in
fxtract
adc
xchg
xor
push
mov
inc
test
dec
pusha
add
adc
inc
adc
fs
cmp
test
bound
popf
es
out
stc
scas
mov
add
jb
ja
xchg
inc
xor
xor
arpl
ret
test
popa
icebp
hlt
arpl
das
inc
inc
pushf
fwait
stos
adc
and
mov
gs
addr16
jo
sub
add
mov
dec
xchg
xchg
lods
adc
jg
cmpsb
cli
wrmsr
jmp
int3
arpl
xchg
push
nop
stos
js
repz
push
push
sbb
and
sbb
pusha
cmpsb
mov
jb
xor
jo
or
dec
mov
insl
mov
jbe
ffree
jnp
fcomps
xor
roll
into
jno
mull
push
fistps
adc
test
inc
jg
arpl
mov
inc
dec
punpckhwd
sub
mov
and
pop
ficomps
rorb
imul
jmp
mov
sub
and
cpuid
punpckhwd
mov
int3
sahf
sub
pop
out
test
jo
xor
and
scas
lea
fisttpl
loopne
dec
mov
stc
not
jmp
test
sti
dec
pusha
out
outsl
dec
sbb
pop
es
jmp
push
sarb
xlat
outsb
cmp
mov
pop
and
loope
xor
sub
pop
pop
gs
iret
dec
rclb
sbb
lods
pop
lea
adc
cmc
sbb
or
int
cmp
gs
adc
sub
dec
xlat
cld
sbbl
mov
and
ss
daa
cmp
pop
pop
sub
xor
pop
jmp
adcb
sub
mov
xor
sub
cmp
call
cmp
jbe
adc
jmp
lods
fsubl
outsl
add
xchg
stc
arpl
inc
int3
mov
test
mov
cltd
inc
fbld
gs
cli
roll
or
sub
fstpt
and
hlt
push
cmpsb
sahf
or
push
mov
les
pushf
cmpsl
cmp
test
insb
iret
ret
push
js
lock
mov
dec
fmull
ljmp
fimuls
enter
mov
jb
fwait
arpl
xor
or
aas
xor
or
popf
xchg
stc
mov
push
clc
in
push
leave
rcr
cmpsl
adc
pushl
fidivrl
xchg
repz
mov
mull
inc
aaa
or
inc
sub
mull
jne
inc
fmul
mov
cmp
lds
imul
aaa
lret
clc
jno
test
stos
imul
or
push
add
add
push
sub
orb
xor
ljmp
out
je
xchg
pop
cmp
out
fs
inc
mov
add
cli
push
xchg
into
mov
fcoml
iret
fsub
cld
mov
or
adc
push
in
je
pop
push
fwait
pop
pop
insl
jl
mov
push
or
ss
xor
cmc
iret
mov
and
pop
cld
cltd
push
push
cmp
cmp
and
ror
sub
sub
jle
and
scas
cmp
xlat
push
pop
push
push
push
clc
in
in
movsl
xor
push
into
lds
add
je
imul
cld
test
xor
imulb
dec
push
fsubrs
cmp
movb
mov
xchg
xor
sub
sub
popa
shlb
and
nop
mov
jp
xor
into
pop
and
cld
xchg
pop
sbb
or
int3
dec
mov
jo
call
push
xor
imulb
mov
bound
les
add
jecxz
cmpsl
cmp
sub
pushl
scas
inc
inc
fdiv
out
mov
jl
inc
outsl
adc
cmp
lods
xchg
lods
cwtl
and
or
xchg
pop
testb
cmpb
lret
jb
jmp
sbb
or
int3
ss
out
mov
lods
cli
data16
sbb
nop
sar
xlat
mov
in
push
test
mov
mov
inc
daa
insl
shll
test
fwait
inc
add
cld
cmp
jle
add
cmp
stc
sub
icebp
movsl
ds
xor
pop
jp
das
or
cltd
lahf
ficoml
fdivr
inc
sbb
out
push
xchg
stc
sbb
adc
mov
push
popl
xchg
repnz
out
mov
dec
pop
les
push
jns
add
gs
sub
ss
ljmp
cmpsl
test
fcomip
lds
mov
testl
cmpsb
dec
loopne
pop
pushf
cli
int
inc
mov
lods
adc
sub
popa
adc
push
push
fstl
push
cmpsl
aam
js
adc
jnp
lahf
bnd
inc
push
daa
loope
ret
xor
nop
push
jmp
in
and
adc
pushf
inc
xchg
jge
jbe
cmpsb
and
pop
aam
sbb
mov
enter
out
mov
jo
pop
insl
aad
mov
or
loopne
push
cli
push
rcrb
mov
lret
dec
mov
outsb
fdiv
mov
mov
ss
ljmp
shrb
das
data16
xchg
sub
sub
jnp
inc
dec
cs
and
mov
ja
dec
test
shlb
lret
add
inc
shl
outsb
icebp
test
rolb
stos
addl
push
cld
fcompl
jp
xchg
mov
shlb
lahf
push
rcll
add
adc
fwait
pop
pop
push
cs
rcl
mov
stos
mov
add
xchg
insb
sbb
test
mov
mov
mov
andl
repz
ds
mov
mov
mov
fcmovbe
imul
inc
cwtl
loop
ret
mov
cmc
sbbl
iret
jnp
xor
out
xchg
and
dec
loopne
cmp
or
insl
jmp
jns
xchg
ds
or
push
jle
mov
inc
dec
push
pop
outsl
repnz
fdiv
fldenv
aas
adc
hlt
add
push
xchg
stc
and
adc
sbb
xor
pop
stc
mov
cwtl
sti
xchg
xlat
and
in
cmp
sbb
and
sub
in
dec
lret
lock
insb
cmpb
inc
lret
mov
in
hlt
pop
jns
dec
mov
in
dec
jb
out
add
test
test
sbb
mov
fdivr
mov
or
ja
inc
cs
dec
popf
pop
cmp
adc
mov
jmp
dec
stos
push
leave
jae
jp
pushf
inc
shll
lods
push
mov
pop
sti
or
out
fadds
mov
jbe
shlb
repz
xchg
sbb
mov
jl
sub
xchg
out
jno
ljmp
lods
mov
xchg
cld
pop
stc
jns
pushl
or
out
fdivs
std
scas
push
sub
test
xor
cmpsl
lahf
cmp
out
das
call
adc
stos
xor
cs
jg
aaa
adc
seto
jns
jo
push
scas
and
xor
outsl
les
add
insl
push
cld
sbb
aam
push
orl
loopne
lea
fst
addr16
imul
loop
pop
mov
rcrl
addr16
inc
in
cmp
into
adc
clc
js
inc
add
lods
sub
flds
dec
js,pn
out
std
cli
movsb
fldenv
push
push
sbb
data16
or
andl
xchg
inc
into
pop
dec
dec
std
lods
jb
xchg
push
sbb
cmp
test
push
jb
test
sub
stos
pop
clc
adc
call
ja
mov
mov
ds
add
mov
fists
xor
cmp
xchg
jne
lods
adc
loope
jno
fstps
call
into
fwait
test
inc
mov
add
and
xchg
xor
hlt
pop
pop
jo
int3
cmpsb
icebp
cltd
add
mov
xchg
adcl
sub
cmpsl
sbb
dec
fcompl
or
es
dec
outsb
lock
xchg
push
sub
push
adc
push
add
cmpsl
outsl
lods
icebp
xchg
iret
out
pop
xchg
dec
scas
addr16
sbb
stc
lock
xor
outsb
aam
imul
faddl
push
xchg
leave
cmp
push
sti
jmp
add
mov
xor
lret
pop
cmp
leave
and
ss
mov
cmpb
paddb
push
push
mov
jg
sub
cmpsl
or
shl
xchg
push
sub
inc
mov
lock
xlat
xchg
sbb
hlt
adc
sbb
jecxz
sbb
stos
icebp
outsb
jne
push
jmp
inc
adc
xor
ds
in
nop
xchg
cmpsl
and
xchg
and
xchg
call
int3
push
je
add
mov
cld
pushf
mov
scas
aas
cmpsl
mulb
cmc
mov
int3
jg
out
inc
push
jb
pop
dec
dec
xchg
push
sti
inc
addr16
jbe
mov
rcrl
cmp
call
aam
out
bound
cltd
or
inc
stos
push
aad
shrb
test
movsb
mov
rclb
mov
xchg
jecxz
xchg
push
sbb
adc
pop
dec
andl
out
and
cwtl
in
cmp
inc
jnp
lret
pop
cmp
sub
scas
add
pop
or
xor
aas
push
fisttps
es
sbb
test
adc
popf
sub
jnp
push
adc
xchg
in
popf
shrl
loope
loope
sti
sbbl
mov
imul
adc
push
in
sbb
push
adc
cltd
jl
scas
icebp
in
fwait
iret
or
and
in
clc
mov
imul
pop
stc
jg
dec
std
and
rol
or
inc
out
inc
adcb
sti
inc
inc
out
add
mov
mov
jb
scas
inc
jp
push
mov
and
dec
fsts
iret
add
lds
mov
cs
lods
stos
and
or
aas
adc
into
loop,pt
jl
int
cli
jmp
sti
xchg
adc
add
sub
sbb
sti
jl
xchg
xor
xchg
pop
dec
daa
repnz
div
lea
xchg
xchg
adc
addr16
cmp
or
stos
test
out
in
ja
and
cmp
rcrb
leave
or
jge
jo
paddd
or
xlat
dec
enter
or
sbb
repnz
insb
int
call
js
out
push
outsb
mov
jb
mov
dec
stos
push
dec
in
jl
mov
lock
in
cltd
mov
jnp
push
and
push
cltd
hlt
push
jl
add
xchg
mov
out
ret
test
adc
repnz
and
mov
jne
sahf
mov
jecxz
ficoml
mov
clc
fimuls
not
fwait
adc
std
mov
jmp
mov
inc
sbb
shlb
pop
and
dec
sbb
arpl
cmpsb
sbb
dec
sbb
insl
je
push
mov
mov
inc
lock
or
adcb
insb
dec
popf
push
inc
xlat
xchg
cmpsb
mov
aad
adc
dec
sbb
fidivl
push
cmp
sub
xchg
imul
mov
imul
jno
aaa
push
in
cli
add
push
add
pop
cmp
roll
push
and
add
popf
cmp
loopne
push
fs
cmp
ja
ret
xchg
jl
mov
sbb
outsl
rcll
out
xlat
mov
pop
xchg
mov
adc
movsl
push
jp
xor
dec
mov
inc
popa
cld
jb
stc
pop
addr16
cltd
and
mov
lods
testb
sarl
xor
mov
shr
dec
dec
pop
cld
xor
bnd
adc
mov
ljmp
mov
push
in
in
xor
inc
popa
dec
dec
or
pop
dec
repnz
shl
push
bound
mov
je
inc
addl
test
sbbl
and
dec
ljmp
or
adc
out
mov
add
imul
jge
mov
add
push
xor
stos
mov
sub
and
pop
mov
insb
daa
test
clc
in
push
mov
in
fs
adc
adcl
idiv
push
loope
pop
cmp
jge
lcall
cmp
fsubrl
fildl
or
jne
mov
and
pusha
or
sbb
jno
popf
call
repnz
push
inc
into
pop
mov
or
xor
clc
sub
push
dec
movsl
jp
out
test
js
pop
imul
push
icebp
outsb
jb
push
xchg
sbb
and
mov
mov
dec
mov
call
movsb
rorb
lahf
hlt
cmp
fcmovu
mov
or
icebp
fimull
test
push
sub
in
jbe
hlt
inc
fdivrs
int3
jmp
sbb
pushf
add
setnp
fstps
lret
and
pop
dec
sbb
pop
add
hlt
sbb
mov
push
mov
gs
cmc
sub
mov
jae
adc
and
aaa
bound
push
jbe
jbe
xchg
xchg
sub
in
dec
data16
push
xchg
rcr
aam
jp
sub
pop
push
jb
lret
cwtl
xor
rcr
fsubrs
fbstp
or
movq
adc
scas
push
fstpl
test
andb
popf
repnz
std
push
arpl
fildll
pop
mov
inc
jle
imul
pop
frndint
jmp
int3
loop
leave
dec
cltd
sbb
div
shl
aad
frstor
ret
ja
mov
pusha
pop
mov
pusha
jne
test
sbb
notl
pop
mov
mov
mov
movl
dec
stc
sahf
adc
fistpll
inc
sub
ljmp
mov
clc
aad
js
movsb
push
pop
adc
pop
cli
pushf
inc
movsl
mov
lods
push
leave
hlt
sarl
xor
and
jbe
pop
lret
add
cs
xchg
jge
sbb
test
inc
movsb
insl
sbb
sarl
mov
loopne
mov
jae
das
out
cmp
test
lds
imul
jecxz
mov
jnp
sub
sbb
std
sahf
lods
test
pop
or
mov
stos
nop
mov
mov
ret
mov
push
mull
sti
outsb
inc
jae
hlt
inc
and
cmpsb
and
and
jg
mov
scas
call
in
mov
xchg
into
pop
imul
enter
dec
adc
roll
cwtl
aaa
clc
popf
push
stc
test
stc
jbe
mov
outsl
mov
sub
icebp
and
pusha
lea
jle
add
or
push
lahf
dec
testb
xchg
popa
repnz
enter
mov
mov
or
hlt
cmpsb
adc
aas
adc
daa
mov
push
jns
imul
imulb
cs
cmp
pop
lret
cmpsl
dec
out
loop
inc
mov
movsb
push
xchg
mov
orb
test
sahf
lcall
lcall
cmp
add
imul
push
adc
push
sbb
dec
fisubs
loop
xchg
sub
filds
and
shll
jbe
xor
dec
ljmp
or
ds
inc
pop
jl
int
out
rcrb
xor
push
and
and
std
jg
mov
xor
orl
sbbb
xchg
mov
mov
lret
inc
and
rolb
jp
dec
push
jae
mov
jnp
xchg
mov
push
adc
pusha
adc
add
xor
mov
je
dec
pop
es
xor
stos
test
sub
pop
out
jle
jge
push
fisubs
daa
xchg
pop
mull
adc
andl
mov
xchg
loopne
push
sub
cmp
fildl
jne
xor
mov
orl
pop
jmp
adc
shlb
jnp
lea
sub
xchg
push
orl
mov
xchg
push
sbb
dec
sbb
daa
sub
push
dec
es
xchg
dec
mov
inc
mov
mov
test
clc
mov
pop
enter
sub
cmp
stos
pop
xchg
jle
mov
pop
add
pop
fs
mov
ret
cmp
into
outsb
sbb
cmpsb
or
jmp
jl
repz
mov
aad
xor
mov
jmp
mov
cmp
xchg
mov
sbb
sub
lret
lcall
jo
sbb
mov
pop
out
les
xor
add
mov
in
sub
addr16
inc
aad
les
cmpsb
push
add
lcallw
dec
arpl
bound
push
cwtl
add
jne
loop
lds
pop
mov
dec
mov
mov
sub
lods
inc
inc
shlb
lea
mov
and
outsl
push
daa
sub
mov
cli
and
lods
adc
jp
outsb
out
mov
and
cmp
push
in
imul
pop
sahf
cmp
push
sti
enter
ficompl
xchg
mov
scas
dec
lahf
jne
cli
pop
mov
mov
ud0
sub
inc
imul
into
dec
inc
lods
notb
add
mov
mov
scas
inc
and
jb
mov
adc
sahf
loop
enterw
mov
ss
fidivrl
in
fsubr
sub
push
shlb
test
push
flds
aas
xor
mov
mov
sub
mov
push
mov
or
push
lret
pop
mov
dec
xor
adc
xor
iret
add
mov
outsl
mov
push
jbe
adc
pop
movsl
mov
shl
rorl
shrl
fucomip
jbe
cmpsb
jmp
inc
mov
notb
or
daa
scas
inc
add
push
cmp
cmp
mov
mov
push
scas
stos
mov
push
push
push
mov
mov
sti
push
push
mov
sub
lods
icebp
or
lods
jmp
in
mov
add
cmp
dec
mov
in
cmp
inc
adc
dec
shrb
mov
repz
pop
lret
jae
cmp
jecxz
mov
jo
adc
sahf
scas
cld
adc
mov
and
jb
imul
aam
cmp
mov
int3
shll
mov
shld
xor
jno
cmp
mov
mov
in
out
mov
cmpsl
loopne
and
dec
in
shrb
jg
stos
fwait
push
sbb
mov
add
movsl
xchg
mov
lcall
sbb
arpl
add
jge
pop
clc
bound
jnp
pop
xor
ficompl
jl
je
popl
sub
les
push
aam
fcomps
dec
mov
mov
pop
and
sbb
dec
std
rorl
mov
add
enter
xor
push
pop
pop
nop
pop
mov
mov
pop
lds
jno
arpl
js
pop
inc
jge
push
stc
cli
mov
sub
cmpsl
mov
xor
xor
subb
inc
push
dec
aad
or
sub
push
dec
jae
out
xchg
cli
mov
sbb
sub
or
xchg
std
stos
mov
mov
xchg
xchg
addr16
mov
ljmp
daa
add
dec
xchg
cwtl
inc
pop
lea
pop
mov
jae
in
xchg
sub
pop
mov
out
sti
jge
and
call
scas
xor
iret
inc
lahf
shl
lcall
jp
jecxz
xchg
xchg
shll
mov
and
and
in
test
xor
call
lea
pop
leave
mov
xor
sbb
repnz
jbe
and
sub
mov
or
sub
scas
hlt
sub
inc
daa
sub
fcmovnbe
fsubrs
and
insb
cmpsl
and
mov
mov
jp
mov
sub
insb
hlt
mov
fnsave
xor
clc
or
es
xlat
int3
out
repz
aam
in
mov
in
or
lcall
ficoms
popl
and
inc
or
add
dec
imul
fidivrs
outsl
jno
sbb
ror
mov
lds
dec
imul
adc
repz
fstpt
mov
ret
push
das
xlat
stos
daa
in
sahf
hlt
dec
fcoms
cmp
sub
dec
sbb
aaa
js
lock
sub
fbstp
mov
orl
pushf
jl
jne
add
mov
or
mov
dec
sub
push
pop
movsb
lods
andb
dec
in
iret
fiadds
fildl
lods
mov
mov
insb
gs
shll
push
push
xchg
loopne
dec
es
push
cmc
mov
cmovnp
sbb
cmpsb
mov
mov
jo
mov
lock
jns,pn
hlt
adc
test
dec
jbe
test
popa
jo
int3
repz
jno
jo
loop
jns
lea
add
mov
push
aad
push
pop
cmp
jecxz
mov
pop
fucomp
int3
mov
pop
pushf
dec
mov
loope
sbb
fcmovne
test
and
xchg
repnz
aaa
pop
fldenv
sbb
adc
cmpsb
jns
outsb
xchg
sbb
ror
insl
shl
loop
add
push
or
ret
jp
or
jae
orw
mov
pop
xchg
mov
push
xlat
mov
pop
add
cmp
or
popf
mov
fildl
push
aas
out
xchg
movsl
sbb
jne
std
aam
adc
xor
insl
out
mov
adc
in
dec
jns
pushf
xchg
shl
push
xor
xchg
negb
dec
xchg
jp
lcall
or
mov
rsm
xchg
fisttps
out
dec
pusha
dec
mov
lret
stc
imul
movsb
sbb
push
test
addr16
push
ljmp
in
dec
jl
inc
pop
mov
mov
adc
adc
fwait
cmp
jo
jg
fldl
js
dec
xchg
call
fbstp
add
cld
jmp
imul
idiv
dec
shlb
or
dec
les
sbb
push
sub
adc
enter
sub
arpl
xor
dec
add
pusha
jmp
mov
push
add
inc
in
add
mov
repz
push
mov
std
sub
jmp
ss
jg
mov
je
xchg
imul
shlb
mov
push
lock
mov
cltd
pop
inc
and
dec
mov
loop
and
inc
imul
psrld
loopne
jne
cmp
out
mulb
out
xchg
sbb
xor
out
imul
add
fcmovbe
dec
dec
push
aaa
mov
push
cmp
mov
xchg
in
aaa
cmpsb
add
out
mov
movsl
jl
pop
jno
shr
lea
xchg
mov
sbb
js
aaa
sub
pop
inc
gs
mov
mov
jmp
std
fadds
and
xor
push
push
mov
cmp
adc
and
push
dec
inc
out
mov
pop
int
and
or
mov
push
and
dec
push
lods
sbb
mov
sub
addr16
xor
out
push
pop
xchg
pop
fcompl
push
xchg
inc
sbb
into
or
sbb
cmpsb
add
sahf
jb
jp
mov
fcom
add
rsqrtps
sarb
clc
cmp
test
jp
add
or
push
inc
and
push
xorl
test
dec
int
out
fcmovnbe
and
movzbl
adcl
sub
shlb
push
push
pop
leave
jmp
inc
dec
lret
lods
pushf
push
sbb
mov
sbb
ds
lods
mov
movsb
jnp
jae
push
xchg
cs
rcrl
sahf
and
outsl
xorb
into
sbb
pop
ljmp
push
push
loope
rolb
daa
mov
add
loop
mov
js
xlat
out
push
mov
pop
sub
sti
cli
mov
push
and
stos
and
dec
std
dec
data16
mov
shr
insl
push
xchg
sub
lods
cmpsl
sub
mov
std
mov
inc
xchg
pop
inc
outsl
stos
mov
fisubrs
aam
push
movsb
inc
sbb
cmp
outsb
mov
cmp
sbb
stc
cs
or
adc
stc
lret
and
push
ficompl
sub
mov
jl
dec
stos
out
repz
mov
xor
fildl
sub
aaa
arpl
in
xchg
sub
dec
sub
rclb
inc
aas
push
jbe
xchg
inc
sub
pushw
in
mov
pop
fdecstp
xchg
mov
sub
cwtl
lahf
add
inc
ret
cmp
fwait
mov
jb
pop
stos
ja
dec
inc
and
dec
popa
stos
cmp
xor
dec
mov
fwait
xchg
sub
jl
sbb
jle
mov
and
xor
cmp
add
dec
mov
shld
adc
and
adc
pusha
xor
jae
sbb
and
or
enter
and
icebp
ds
xor
pop
iretw
cli
fwait
cmp
mov
int
lock
aad
ds
je
dec
push
rcrl
jb
push
adc
mov
mov
sub
jmp
and
pop
mov
push
add
mov
xchg
cwtl
push
ret
movsl
shrb
add
mov
sub
nop
inc
or
js
fldcw
in
jb
out
jb
test
lahf
loop
mov
test
lea
arpl
jns
repz
dec
shrb
dec
cmp
adc
and
int3
movsb
test
sub
xchg
test
loope
xchg
dec
push
inc
jmp
jge
xor
lea
and
add
cmp
jg
xchg
xchg
fwait
add
inc
add
lock
fdivs
loop
jns
or
outsl
mov
cmp
mov
shrl
lock
jcxz
mov
inc
push
mov
fadd
and
add
adc
imul
movsb
cmp
cmpl
push
int3
pop
or
inc
xchg
dec
rorb
popa
stc
jle
and
mov
enter
int
pushf
adc
mov
icebp
add
jecxz
adc
adc
fwait
sub
xchg
xorl
pusha
out
sbb
or
push
pushf
adc
repnz
mov
or
jmp
add
or
data16
int3
mov
xchg
bound
lcall
xchg
jg
stos
ret
push
test
push
cld
pop
xor
adc
lods
in
push
hlt
notb
jnp
jae
sub
jge
mov
rcrb
les
mov
mov
lods
cmp
les
mov
jg
imul
xchg
sub
and
shr
xchg
mov
push
das
jae
pushf
add
xor
pop
mov
test
adc
std
cmp
push
cmp
out
fiaddl
popa
movsb
push
sub
in
les
aad
sbb
fcmove
fs
inc
fdivl
xchg
lods
mov
cmp
cld
mov
mov
pusha
push
push
inc
movsl
sub
arpl
mov
sti
and
test
fnsave
in
mov
mov
pop
or
xlat
mov
xor
or
incb
sbb
cmpsl
dec
inc
or
das
push
sbb
dec
jns
jne
test
adc
pop
in
mov
pop
and
mov
pop
call
sub
int
dec
inc
stos
aaa
inc
mov
cmp
imul
xchg
fs
mov
cltd
nopl
mov
cmp
repnz
jecxz
pop
push
pop
popa
pop
rcrb
out
or
mov
sbb
pop
movsl
imul
idivb
popf
int3
scas
push
or
imul
or
cmp
adc
cwtl
dec
or
or
stos
cli
int
xchg
xchg
pop
scas
fiadds
mov
daa
add
cmc
popf
xlat
dec
test
cmp
add
xor
fidivs
or
dec
pop
pop
jp
aad
ljmp
aad
pop
jp
pop
xchg
and
pop
fmuls
push
xchg
into
cwtl
sub
push
sbbb
dec
mov
jno
out
cmp
iret
cmc
cmp
push
push
jge
aaa
cltd
jb
shll
imul
in
int3
lods
mov
xor
adc
add
in
mov
out
aad
out
mov
in
dec
jno
lock
js
lods
xor
xor
pushf
ret
sub
jne
jecxz
in
insl
push
hlt
jle
popf
add
js
sub
dec
imul
pop
push
sti
and
mov
dec
or
dec
jge
or
dec
add
not
jp
std
push
jnp
fildll
mov
aad
shrl
jle
clc
sahf
mov
jb
jo
lea
sub
lret
xchg
jmp
dec
mov
push
rolb
insb
das
fnstsw
aad
out
mov
pop
add
inc
insb
into
add
jp
rorb
add
cli
adc
push
pop
ljmp
jmp
push
sbb
mov
test
mov
jle
push
popa
sbb
por
mov
mul
ljmp
xor
sahf
repnz
aam
jo
cmp
or
mov
sub
mov
dec
ss
test
outsb
mov
js
sub
dec
cld
fsubr
call
mov
or
stos
adc
or
jmp
lea
arpl
mov
mov
dec
mov
mov
mov
add
mov
cmp
mov
and
pop
pop
jl
into
dec
or
xchg
clc
cli
cmc
pop
ss
sbb
out
or
lea
push
repz
push
pop
iret
sahf
mov
hlt
push
out
mov
push
cli
jb
xor
sbb
dec
xchg
pop
insb
clc
cli
sahf
pop
mov
fwait
pusha
out
push
ret
cmpsl
inc
xchg
fcomps
testb
jg
or
cmc
fstpl
cs
push
ret
push
stc
jne
push
lods
xchg
xlat
adc
inc
orl
jne
loopne
xchg
loope
adc
push
xchg
adc
cmp
lods
mov
mov
subb
stos
xchg
or
xchg
push
add
dec
mov
xchg
cmpsl
pop
adc
mov
imul
notl
xor
sbbl
inc
hlt
cs
cmp
or
popf
loope
ret
inc
mov
fisubl
stos
aas
push
cmp
fldl
out
pop
sbb
jne
scas
pop
in
add
sbb
or
sar
xchg
lods
lock
mov
add
cs
sbbl
xacquire
cmc
int3
fmul
push
sub
mov
stc
dec
or
ret
dec
fisubrl
xor
je
test
shlb
or
xchg
lcall
arpl
inc
outsb
das
mov
jecxz
add
mov
adc
dec
mov
fisttps
in
sbb
jns
and
fmul
in
sbbl
call
mov
jl,pn
xlat
adcl
roll
test
xchg
orb
mov
mov
and
sbb
add
cs
xlat
mov
cmp
cltd
ss
jg
setge
adc
ror
push
push
aad
cmp
sbb
aas
call
push
stc
mov
xor
mov
js
and
sbb
mov
das
ds
lcall
and
or
test
mov
push
push
and
jmp
or
ljmp
mov
pop
xor
mov
xchg
or
fldl
sub
adc
daa
test
stc
mov
xchg
cmp
repz
aas
or
test
mov
sti
movsb
mov
test
push
push
gs
insb
adcb
pop
mov
cmpl
xor
aaa
or
stos
jp
pop
mov
es
pop
or
test
test
add
test
cmpb
aas
and
test
mov
mov
inc
inc
daa
imul
dec
dec
repz
inc
rorl
aaa
loop,pt
fwait
scas
push
mov
lods
pop
inc
jbe
or
ret
loop
cmp
shlb
mov
push
jne
jmp
int3
rcr
or
push
mov
push
inc
dec
int3
js
lods
aas
mov
imul
fnstsw
arpl
push
xorl
cld
inc
add
jp
mov
sbb
xor
inc
xchg
cmp
rclb
jmp
loope
jecxz
pop
cmp
jno
xchg
cmp
addb
cmp
mov
jmp
paddusw
sbb
into
ficoms
or
inc
nop
dec
jg
ja
in
insl
dec
dec
xchg
in
jb
xchg
adc
mov
or
xchg
jle
lret
popa
jl
sub
test
sbb
out
mov
xlat
xchg
xchg
add
clc
leave
mov
mov
sub
xchg
ljmp
pshufw
dec
add
ret
push
jl
inc
imul
es
bound
mov
loopne
push
nop
bound
sbb
jecxz
mov
clc
shrb
repnz
cld
push
xchg
xchg
mov
pushf
frstor
add
cmp
cmp
or
cmpsb
cmp
popa
popf
movsl
mov
cmp
in
jno
xlat
inc
ror
jmp
add
data16
xchg
pop
fsubrs
mov
jecxz
add
pop
mov
popf
adc
popa
add
dec
in
push
out
mov
ljmp
repz
push
xchg
pusha
push
or
or
mov
les
pop
enter
test
or
pop
jge
scas
adc
mov
bound
ljmp
sbb
mov
fisubs
pop
pop
dec
mov
cwtl
mov
daa
sub
xchg
pop
inc
fwait
inc
or
and
out
push
adcb
mov
pushf
not
jp
and
sub
push
loop
pop
mov
fs
cltd
push
stos
lock
dec
es
nop
loopne
and
mov
xor
sub
jne
arpl
xor
popf
sbb
fsubrs
mov
pop
je
dec
dec
mov
or
jo
cmpsl
xchg
inc
sub
push
add
push
jecxz
out
mov
cwtl
lcall
or
sub
jae
and
sub
psraw
sbb
lcall
mov
testb
insb
arpl
mov
xor
fldl
clc
xor
ja
into
es
bnd
outsb
push
lea
sbbb
dec
sub
movsl
in
and
cmp
push
push
stos
xchg
lahf
sbb
mov
repz
jmp
jmp
inc
mov
jo
push
pushf
mov
xlat
cmp
inc
mov
out
and
mov
xchg
xchg
lods
scas
fs
push
sub
adc
mov
test
pop
xchg
jle
dec
mov
mov
cltd
stc
adc
jmp
imul
cmp
xor
jne
insb
faddp
sub
in
imul
fcomi
test
fcmovb
jo
loop
daa
popa
mov
mov
sbbl
rcrb
je
cmp
pushl
and
in
xchg
cld
adcb
mov
pop
les
xlat
ss
sub
xchg
xchg
add
mov
idivl
leave
cmc
xor
pop
iret
jle
xor
repz
adc
int
dec
imul
mov
xlat
mov
test
mov
pop
mov
lcall
mov
jnp
add
testl
roll
lock
dec
jo
sti
in
orl
adc
ljmp
testb
pop
cmp
fs
jae
cmp
xor
xor
test
js
inc
add
call
and
lock
jns
jmp
int3
sbb
pop
jmp
cli
pop
push
pop
push
leave
aam
mov
out
movsb
pop
adc
into
mov
mov
ret
push
add
mov
repz
mov
and
cmp
mov
insl
imul
jnp
dec
ss
jmp
data16
and
jecxz
daa
and
mov
jmp
scas
ljmp
push
inc
inc
adc
push
or
clc
or
or
in
ss
xor
add
pop
mov
and
pushf
inc
push
loopne
dec
push
sarb
nop
fwait
xor
aad
sbb
int3
imul
and
lods
cmpsb
nop
stos
pop
dec
std
adc
push
scas
inc
int
push
sbb
push
mov
push
pusha
lods
js
sub
pop
mov
frstor
push
sub
mov
in
add
lea
mov
pop
ds
jns
sahf
cs
popa
sbb
mov
pop
daa
nop
ljmp
mov
pop
data16
pop
in
fs
dec
inc
call
push
dec
dec
cmp
push
push
xor
out
cmpsb
ud2
sub
scas
jg
test
ret
jo
xchg
lods
js
out
sar
xchg
popa
aad
or
dec
lcall
fcmovnb
lock
adc
add
das
clc
pop
mov
jb
cwtl
and
inc
jp
test
push
insl
pop
xchg
push
aas
xchg
cltd
pop
cli
pushf
mov
loopne
addr16
or
out
push
sbb
shlb
iret
scas
test
rcrb
xchg
and
loop
push
xchg
daa
les
cmp
cs
iret
js
out
ljmp
aaa
sbb
adc
stos
rcl
out
mov
push
mov
mov
sub
push
scas
arpl
icebp
nop
call
dec
xchg
in
loopne
outsb
lock
ret
into
sbb
xchg
sbb
sub
mov
add
mov
aam
jae
pop
add
fsubrl
pop
mov
xchg
dec
push
sbb
dec
mov
cli
add
mov
push
or
push
inc
sbb
lret
mov
cmp
and
jmp
out
cmp
adc
scas
out
mov
jp
movsb
enter
cmp
clc
in
jnp
nop
ja
and
jg
ljmp
dec
call
stos
mov
add
test
mov
fs
mov
mov
cli
mov
loopne
not
push
loop
xor
mov
ret
daa
ja
mov
cwtl
xchg
mov
hlt
push
loope
jp
dec
ret
mov
popa
and
ss
or
popf
hlt
sar
repz
in
xor
mov
fld1
shlb
mov
pop
fs
sbb
push
lret
dec
cmpsl
fsubs
mov
ljmp
sbb
test
mov
xor
mov
out
lods
push
inc
pop
mov
and
lods
imul
daa
mov
mov
or
outsl
mov
ss
cmp
push
movsl
mov
xor
arpl
and
call
cli
inc
pop
jl
xor
out
push
adc
loope
mov
mov
mov
mov
outsl
test
sub
shrb
mov
fidivl
lcall
jne
roll
inc
movsl
ss
pop
inc
sub
jb
push
inc
sarl
sbb
xor
test
out
lods
mov
adc
xlat
repz
fidivl
insl
jbe
iret
dec
lret
push
xlat
data16
jb
xor
iret
roll
leave
xchg
movsl
mov
int
jge
rep
ljmp
outsb
test
pop
xchg
je
dec
stos
sahf
push
stos
mov
or
jb
or
jne
sbb
aad
lret
mov
fnstenv
sub
inc
cs
movl
stos
xlat
iret
daa
dec
lods
arpl
jg
in
dec
xchg
insl
movsb
in
cs
or
clc
mull
dec
sahf
pop
fwait
cmpl
inc
mov
dec
out
cmp
and
sarl
jmp
push
aaa
fldt
je
dec
add
mov
cltd
aaa
fcmove
aad
mov
push
cmp
jae
scas
jns
mov
aaa
push
jl
subl
dec
scas
sbb
add
or
xchg
sub
mov
add
or
pop
out
or
arpl
inc
and
gs
enter
push
jl
mov
stc
dec
mov
test
and
xor
leave
or
aas
in
enter
mov
mov
call
sbb
movsb
fistl
popf
pop
sub
xchg
out
mov
pop
fisubrl
test
or
dec
fwait
cmp
xchg
pop
test
test
fistpl
sbb
jno
fcoms
and
add
add
pop
mov
pusha
push
mov
jp
mov
adc
push
push
xadd
xchg
into
mov
pop
fwait
inc
adc
das
ret
stos
dec
out
and
and
ss
dec
fcmovnu
and
xor
mov
insl
adc
movsb
hlt
xchg
inc
sbb
enter
cmp
lea
loopne
daa
add
mov
ja
lods
inc
lods
int3
adc
cmp
aas
mov
daa
jnp
shll
pop
cmp
add
mov
pop
test
xchg
push
adc
adcl
aas
jle
sbb
dec
and
mov
jbe
out
and
and
ja
mov
inc
lahf
add
stos
mov
add
out
in
dec
repnz
scas
pusha
mov
aam
out
push
sbb
call
rcrb
jnp
adc
sub
mov
lea
mov
pop
aaa
push
iret
std
jp
int3
sub
pop
cltd
add
mov
push
ljmp
addb
mov
push
fs
add
push
cmp
sub
sub
sub
outsb
jp
inc
out
dec
lret
outsl
jne
ljmp
into
ljmp
mov
aad
jle
cmp
roll
int
fs
xchg
loope
sub
jne
xchg
mov
scas
enter
fldcw
jg
aam
jle
xor
pop
mov
jnp
mov
cmp
aam
or
cli
adc
scas
and
pop
daa
enter
scas
lds
inc
loopne
push
enter
mov
push
repnz
arpl
outsb
mov
je
fwait
insl
adc
iret
sbb
push
stos
and
sbbb
push
cmp
mov
scas
inc
cli
or
mov
addr16
jo
and
mov
push
cld
xor
test
loop
cmpb
ja
mov
out
or
lret
inc
xchg
movsl
pop
adc
add
jl
icebp
xchg
push
icebp
xor
subl
pop
cwtl
into
mov
loop
mov
faddl
and
test
mov
mov
fstpl
jge
imull
mov
jmp
jg
addr16
cmp
ja
enter
sub
jle
mov
adc
fstpl
and
or
push
in
nop
sub
cltd
and
aad
or
ja
push
scas
cmp
arpl
mov
or
lds
into
cli
push
sahf
enter
jg
enter
add
out
in
xchg
gs
add
mov
scas
xor
shl
cmc
add
jecxz
push
shrl
out
jp
jnp
in
enter
les
push
cmpsl
mov
mov
sub
mov
pop
aaa
outsb
or
add
mov
push
mov
and
stos
xor
xor
push
adc
inc
leave
aaa
and
ljmp
loop
stos
dec
jne
loop
ret
fisubrl
push
push
addr16
or
jle
sti
push
push
xor
jmp
fdivs
pop
and
sbb
mov
push
cli
sbbl
out
subl
imul
cmc
mov
subl
out
jne
cltd
in
push
mov
lds
xor
push
fcoms
out
cmpsb
hlt
pop
test
or
and
xor
rcrl
adc
push
loope
pop
sbb
fwait
cmp
cmc
int
enter
inc
int3
dec
adc
sbb
add
dec
lahf
clc
in
inc
jne
or
fbld
fucomi
inc
std
shr
ss
movsl
or
sub
hlt
std
jp
adc
dec
mov
cld
xor
lea
imul
mov
movsl
xchg
xchg
xchg
push
and
mov
lret
aas
push
testl
cli
xor
stos
mov
mov
mov
test
cltd
push
cmpsl
push
sub
pop
jmp
dec
mov
dec
cmp
sub
push
cmp
mov
in
adc
inc
clc
inc
rclb
mov
inc
xchg
sub
cmp
ljmp
pop
mov
mov
subl
jp
xchg
adc
outsl
popa
mov
mov
mov
pop
jle
cmp
jno
sbb
or
push
adc
insb
jo
jl
lret
in
adc
sbb
push
lock
push
addr16
or
test
push
mov
push
and
test
mov
dec
mov
cli
mov
bound
lods
lds
scas
pop
lahf
scas
jl
add
rcr
imul
fs
repnz
pop
pxor
imulb
aaa
rorl
je
sahf
mov
js
push
loopne
rclb
stos
dec
xchg
sub
mov
enter
aad
rorl
sbb
outsb
jnp
pop
ja
fadd
negb
sub
mov
dec
scas
pop
pop
es
xchg
fsts
jle
scas
cmpsb
leave
cmp
mov
sbb
cwtl
icebp
xor
add
subl
in
out
sti
dec
insb
mov
aam
inc
fcmovbe
daa
scas
loop
lea
adc
jmp
mov
adc
mov
outsl
xchg
lret
stc
imul
mov
adcl
out
jmp
jno
cmpsl
cltd
adc
sahf
and
and
jmp
jge
gs
dec
and
fwait
scas
shlb
and
iret
push
fdivs
cmp
pop
jg
xchg
aam
not
push
cld
js
mov
std
jno
sahf
cmc
cmpsl
dec
cli
insb
ret
int
xor
loop
fstp
sti
call
andb
out
in
popa
popa
in
mov
xchg
xor
loop
filds
sbb
testb
in
xor
pcmpeqd
inc
lods
popf
fdivl
jl
jg
out
adc
mov
inc
inc
xor
jo
and
adc
scas
add
jmp
cmp
arpl
clc
add
out
clc
pop
cmp
dec
mov
pop
mov
xchg
sbb
repz
jo
push
dec
arpl
rcr
jb
test
bswap
sbb
jno
add
fiaddl
mov
mov
aad
insb
xlat
aad
push
xchg
fs
or
or
pop
inc
dec
sahf
popw
xchg
add
loop
pop
push
push
pop
sbb
jne
sub
xchg
mov
push
jns
pop
mov
push
pop
cmpsl
adc
xchg
jecxz
sbb
pop
sbb
inc
cli
movsl
cld
aam
ljmp
cmpb
dec
sti
std
dec
movsl
cmc
cli
adc
pusha
and
xor
scas
icebp
ror
shlb
fsubr
sbb
xchg
mov
mov
inc
dec
xchg
mov
push
pop
sbb
mov
lock
addr16
mov
mov
inc
xchg
mov
mull
add
popf
push
sarl
sub
les
jl
lods
inc
or
xor
clc
or
out
fidivrs
lahf
push
mov
jne
jmp
fisubrl
pop
lret
add
add
pusha
dec
xchg
mov
push
xor
pop
aas
mov
cld
shrb
dec
dec
loop
cmc
fsubs
mov
inc
inc
and
xchg
mov
test
adc
addr16
out
out
xchg
bound
push
or
iret
mov
jmp
cld
cmp
or
mov
fwait
test
push
and
inc
fsts
mov
push
andl
ds
cltd
das
mov
loopne
lds
cmp
mov
jne
das
jecxz
stc
jo
mov
pop
xorb
fistps
lods
cli
cmp
orb
mov
jecxz
lods
mov
mov
out
push
insl
jae
mov
dec
jecxz
movsl
and
mov
mov
mov
rcll
xor
mov
pop
fmull
mov
arpl
test
push
orb
lock
cld
rcrl
mov
sbb
outsl
jbe
dec
pushf
jecxz
xor
adc
lock
or
push
inc
and
pushf
stc
cmp
notl
lods
fidivrl
rcll
cmp
fdivl
jmp
ja
sbbl
mov
jmp
inc
sub
jmp
mov
pop
mov
mov
xchg
fstpl
add
jb
xchg
cmc
icebp
mov
inc
out
cmpsb
inc
xchg
sbb
sub
iret
mov
jle
add
inc
mov
jmp
mov
mov
fidivs
push
pop
shl
jg
je
jecxz
adc
por
pop
mov
aam
aaa
call
mov
repz
data16
xchg
or
fiaddl
sbb
fwait
dec
mov
mov
loope,pt
add
xor
test
cmc
jle
std
add
movsl
ja
sub
jmp
cmp
fisubs
lods
aas
xlat
lea
mov
mov
xchg
mov
mov
and
push
mov
pop
inc
ret
jge
ljmp
ret
out
shll
insl
cmpsl
xchg
sub
repnz
mov
stos
in
rcll
pushf
in
shrb
enter
xor
xchg
pushf
lahf
xor
lcall
inc
xorl
jmp
push
cmp
shl
inc
sarb
jne
sbb
xor
jge
ja
mov
jae
pop
push
insl
cmpsb
hlt
jle
aaa
stos
mov
sub
leave
sub
push
ds
jp
movsl
ss
push
orl
pop
inc
nop
sti
adc
xor
loop
jo
and
enter
push
mov
jecxz
mov
inc
pop
ret
or
jg
push
cmp
jnp
loope
adc
or
push
shlb
lcall
xor
out
adc
out
fisubrs
ficomps
push
xor
cmp
sti
mov
aas
inc
inc
mov
or
jne
stos
xchg
clc
mov
and
and
es
cmp
xor
in
cmc
add
xor
push
xchg
xchg
addb
lods
jns
mov
mov
inc
pop
inc
stos
cmp
mov
sbb
xchg
pop
data16
mov
sarb
jge
aad
push
xor
dec
jnp
push
xchg
mov
jae
adc
imul
xchg
xor
in
mov
movsl
fisubrs
or
fs
push
xchg
sbb
pop
gs
push
std
inc
ja
xor
mov
xorl
push
jnp
pop
push
push
pop
pop
fstpt
les
jo
imul
aad
mov
xchg
inc
in
jmp
ss
adc
dec
clc
or
and
pop
int3
pop
mov
stos
lock
mov
sbb
fildll
pusha
out
clc
mov
jb
xchg
lahf
faddp
mov
add
or
push
mov
pop
sbb
and
or
push
push
sbb
mov
mov
shlb
outsb
out
sbb
mov
and
je
out
lcall
dec
push
cld
in
lret
pop
cmp
cmp
mov
xor
fst
fadd
out
push
mov
cmp
jno
inc
add
adc
adc
mov
mov
push
pop
movsl
loopne
les
jbe
lret
pop
xchg
add
sub
rolb
push
cmp
mov
loope
xor
push
idivb
sub
test
inc
pop
lods
jmp
cs
repz
mov
xchg
xor
push
mov
push
movsb
mov
cmpsl
testb
adc
push
jmp
fsubrs
mov
adcb
sarl
rcl
push
out
int3
cs
cmp
outsb
xor
jns
mov
and
add
cmp
dec
pop
dec
and
and
pop
enter
out
sub
jns
fwait
mov
movlps
fisubl
mov
push
sbb
ljmp
es
inc
add
fistps
aas
fidivs
and
xor
xchg
loop
push
pop
and
push
mov
mov
cmc
outsb
mov
cmp
and
aam
iret
push
jbe
idivl
jbe
add
pop
out
inc
mov
popa
data16
cmp
sti
test
dec
pop
jae
clc
repnz
mov
lcall
cmp
stos
sbb
add
cmp
fwait
sbb
fcmovnb
aam
fildll
das
aad
jge
out
sbb
dec
mov
pop
inc
inc
dec
pop
add
lock
mov
sbb
push
or
pop
xorb
push
and
rorl
pop
pop
jecxz
cmp
push
in
mov
int
test
push
mov
fldt
enter
jg
into
pop
mov
fdivs
lret
inc
lods
xor
xchg
inc
rcrl
mov
xor
mov
push
push
out
push
shll
jmp
xchg
lods
subl
jb
loop
cld
and
xchg
shlb
stos
addb
and
in
sbb
rorb
dec
fbld
repz
imul
ret
xchg
mov
add
subl
lds
xor
ret
sub
enter
mov
je
fdivrl
lea
jp
or
push
rcrl
mov
cmp
pop
xor
aas
jne
jp
push
fisttpll
ja
lahf
xor
mov
sbb
mov
movsl
ffreep
rorl
or
rorb
xchg
push
push
aas
mov
adc
mov
pop
cltd
or
mov
ud2
lcall
es
sub
cmp
adc
cwtl
dec
je
pop
imul
daa
divl
mov
stos
and
xchg
sbbb
fistpll
sbb
shrl
fwait
mov
clc
in
jmp
adc
add
sbb
dec
stc
dec
dec
xchg
mov
xchg
pop
inc
sub
gs
les
rol
int
mov
out
add
mov
push
lea
push
fldl
fnstcw
mov
cs
dec
in
outsb
fstpl
fidivs
lods
fidivrs
add
push
popa
out
sub
out
lods
test
les
pop
xor
or
or
adc
or
movsb
sahf
rol
pop
pop
adc
mulb
jno
xchg
mov
pop
neg
lret
dec
and
mov
and
packuswb
cmp
insl
aad
pop
push
jecxz
cltd
loope
pop
cmp
dec
push
in
rolb
pop
jae
mov
cli
cmpsl
cmpsb
cwtl
loop
mov
loopne
cs
pop
sbb
aad
inc
daa
mov
aam
sub
dec
mov
int
je
cld
loop
adc
ds
fiaddl
inc
push
sarb
nop
and
push
aas
call
lahf
add
xchg
fistpll
sbb
sub
pop
mov
daa
repz
adc
test
sub
fdivs
cmc
mov
cmpl
fcomps
cltd
mov
in
ss
cvtps2pi
mov
pop
push
cli
adc
icebp
rcl
je
jnp
aam
mov
fs
arpl
xchg
sub
pop
xchg
cmp
fwait
push
fdiv
pop
out
cwtl
sbb
mov
adc
jecxz
test
and
adcb
mov
aas
repnz
dec
cmp
fnstsw
pusha
aaa
push
add
xor
loop
inc
mov
or
xor
inc
push
loope
and
xor
out
imul
pop
jmp
or
cmp
daa
pusha
jmp
pop
sbb
cmp
cmpsl
sti
xchg
int3
rcr
idiv
fildl
imul
jo
lret
shlb
idiv
jno
imul
dec
sub
pop
add
das
dec
lock
test
outsl
push
dec
inc
ficoms
sub
sbb
cmp
sbb
and
fsubl
shr
mov
mov
sub
and
lods
das
psubw
sahf
fidivrs
push
mov
xor
sbb
pushf
pop
inc
mov
push
cmp
into
in
xor
out
xchg
pop
adc
mov
cmpsl
sar
xchg
or
call
subl
jne
xor
adc
pop
movl
rclb
mov
inc
cmp
dec
std
push
xlat
aam
dec
inc
lods
sub
lds
xchg
mov
aas
adc
or
add
sub
mov
arpl
jge
js
jp
add
and
test
js
addr16
fsubr
or
int
fcoml
or
fcomps
lock
xchg
fimuls
imul
and
dec
jp
sbb
jo
add
clc
xchg
cld
mov
shrb
sbb
inc
push
nop
scas
enter
mov
in
popa
jl
jb
mov
out
mov
xor
inc
pusha
mov
outsl
imul
sub
gs
pop
popf
data16
mov
imul
inc
adc
loop
or
data16
insb
push
push
jae
cmp
test
movsl
sub
out
int3
adc
in
andl
mov
ss
xor
and
in
insl
in
xchg
push
test
ret
jmp
or
and
int
mov
arpl
mov
push
das
and
mov
push
int
fdivs
pushf
adc
jecxz
rorb
je
aam
adc
jne
add
call
or
sub
shrb
ja
lock
mov
jbe
push
aam
sbb
xchg
push
sub
mov
in
stos
rcl
xchg
cmp
cltd
imul
movsb
or
inc
loopne
dec
scas
sub
mov
stos
cmpsb
ret
push
ja
pop
mov
sarl
cmpsb
dec
hlt
popf
pop
shll
inc
mov
xchg
xorl
sbb
in
out
repz
mov
xchg
push
es
into
insb
decl
mov
add
cmpsl
mov
xor
mov
inc
out
movsb
in
pusha
sbb
andb
mov
xbegin
rclb
sub
push
mov
test
rorl
mov
test
and
cmp
out
test
push
fisubrl
in
push
popf
cmp
bound
shl
push
mov
les
adc
cmpsb
pop
jmp
test
andl
xor
ret
pop
rorl
loopne
push
jno
xor
out
jbe
xchg
gs
shll
inc
add
lahf
add
mov
popa
and
cwtl
pop
ret
es
fildl
out
xchg
dec
les
mov
shlb
insb
cmp
inc
pushf
cli
or
xlat
das
mov
dec
pop
test
fdivl
rcll
or
mov
mov
push
xorb
shl
mov
xchg
mov
adc
cmp
addr16
cmc
cmp
pop
xor
xchg
pop
arpl
adc
jge
and
dec
rclb
fldcw
lcall
sbb
test
stc
test
xor
dec
jmp
jbe
ret
xchg
or
lahf
loopne
push
mov
adc
inc
icebp
push
dec
inc
insl
inc
add
mov
aaa
jbe
push
mov
pop
js
mov
jmp
leave
xor
fcmovb
scas
push
xor
ja
adcb
aaa
xchg
movsb
subl
rolb
sub
daa
out
in
mov
int
stos
and
mov
mov
jb
mov
repz
insl
lahf
sub
js
int3
clc
movsl
mov
aaa
iret
das
jnp
sub
or
and
mov
lods
cld
mov
xchg
adc
adc
sti
jle
das
pop
addl
cmpsb
movsl
xchg
lret
mov
cli
pop
test
insl
sbb
cld
and
leave
bound
pop
adc
in
loop
jmp
push
mov
movsb
sbb
jno
pop
xlat
dec
ljmp
cmp
xlat
push
loop
mov
mov
cwtl
loopne
jae
fimuls
outsb
sbb
lock
rolb
jmp
mov
or
in
shlb
xor
scas
or
ds
push
dec
mov
test
or
push
popa
mov
pushf
xlat
jne
mov
sub
mov
out
push
orb
xchg
jge
cltd
enter
sbb
mov
fadds
mov
mov
inc
dec
imul
cmp
cmp
lret
stos
mov
out
aas
add
sahf
jo
test
or
push
cltd
adc
inc
or
mov
test
cli
mov
dec
xor
test
xadd
or
repnz
cmc
xchg
mov
inc
jb
test
dec
arpl
mov
in
xchg
mov
enter
lods
adc
out
push
push
leave
test
and
jbe
sarb
stc
jno
add
pop
lahf
btr
inc
push
add
xchg
push
xor
ja
icebp
orl
stc
les
inc
icebp
and
test
repz
pop
andl
int
xchg
dec
dec
xor
pushf
xor
push
loop
out
movsb
jne
xchg
popf
rol
sbb
loopne
sub
adc
ret
rol
into
and
cmp
and
sbb
aaa
adc
mov
lret
cli
push
fisubrl
mov
hlt
mov
and
add
xchg
or
mov
das
xchg
das
dec
mov
in
mov
mov
sahf
rorl
jo
lret
push
or
fdivrl
sbb
xchg
cli
stos
in
stos
leave
movsl
lock
mov
addr16
push
repz
test
ja
inc
jmp
adc
mov
or
gs
test
and
mov
push
data16
in
int
fisttpll
fs
cmpsb
cmp
andb
int
xor
test
roll
add
into
mov
sti
and
mov
push
adcl
pop
jle
cld
jecxz
and
pushf
loope
xchg
jns
mov
out
mov
and
mov
push
push
call
xor
add
sub
inc
mov
cmp
stos
dec
cmc
mov
out
push
mov
mov
cwtl
pop
adc
mov
push
push
sub
adcl
mov
leave
dec
cmpsl
unpckhps
adc
lret
repz
jp
or
cmp
pop
pusha
ds
repz
sub
int3
iret
xchg
test
mov
sub
shl
sub
stos
sbb
and
mov
jns
dec
inc
adc
hlt
mov
mov
lcall
adc
xchg
scas
ss
xlat
iret
cmp
stc
xor
mov
loope
sub
push
push
jns
lea
push
popf
mov
mov
enter
les
add
pop
sbb
shlb
call
lcall
addr16
fiadds
repz
in
cmp
bound
adc
xchg
lods
add
sbb
inc
mov
stc
pop
cmp
mov
les
addl
dec
stos
lahf
xchg
ljmp
test
fwait
mov
fs
jns
data16
ss
sbb
pop
jns
mov
and
stos
pop
lods
daa
in
into
mov
xchg
and
aam
mov
test
addr16
xlat
lds
testl
adc
pop
out
shll
xorb
jge
stos
es
sub
ret
mov
and
dec
xorl
ficompl
pop
ljmp
shll
pop
pop
cmc
out
ds
and
repnz
ret
add
pop
ret
xchg
adc
push
pop
sbb
aam
icebp
cmpsl
andb
int3
into
mov
lock
test
insl
mov
test
repz
aad
push
js
mov
andl
subl
push
jne
jne
cli
mov
cmc
sti
test
lcall
ja
addr16
es
popa
loopne
pop
movsl
jg
mov
jae
push
push
in
enter
or
inc
out
arpl
idivl
or
and
cmp
cmpsl
xchg
or
push
push
cli
in
lea
hlt
xchg
cltd
sti
cltd
jge
roll
xchg
sub
mov
inc
mov
and
inc
cmp
cmp
push
jne
div
cld
cwtl
ljmp
mov
in
pop
test
cmp
xlat
sbb
pushf
push
pusha
test
lahf
push
add
or
pop
fmull
and
out
sbb
add
ret
mov
and
pop
mov
push
jg
mov
add
repz
sub
sbb
icebp
dec
hlt
add
fisubrs
dec
call
arpl
inc
add
or
lcall
fsubrs
lret
in
add
jmp
lcall
fsubl
adc
or
movsb
push
adc
es
loop
aad
iret
js
adc
pop
mov
and
inc
cmc
je
mov
mov
mov
pop
xchg
mov
fnstsw
and
mov
xchg
test
cmp
ds
mov
sub
fsubrs
xlat
cld
and
ret
in
push
and
scas
pop
nop
adc
jp
leave
dec
arpl
cmc
cli
loop
stos
sbb
test
xchg
push
addb
sbb
fpatan
rcr
sbb
in
push
pop
xchg
sub
in
sbb
xchg
inc
or
push
sbb
pop
imul
scas
push
cs
int3
aaa
aaa
pop
pop
notl
add
inc
fisttps
jno
cmp
push
test
loop
add
jno
cmpl
popa
repz
outsl
cwtl
pop
mov
bnd
bound
xor
lods
jnp
add
iret
add
push
mov
cmp
add
mov
pop
icebp
xchg
mov
stos
and
mov
dec
outsl
xor
jmp
cltd
sub
scas
std
bound
xor
jns
gs
xor
fucomi
push
lahf
add
mov
mov
dec
dec
add
test
xchg
sub
shlb
cmc
ss
fs
filds
inc
xor
mov
xor
xor
cmpsb
mov
cli
push
clc
pop
sub
out
and
std
out
mov
jge
jae
push
xor
data16
test
orl
add
mov
test
stc
sub
test
enter
test
xchg
cmp
xchg
hlt
lock
adc
shrd
js
lods
pop
aas
out
cmp
adc
pusha
push
mov
add
out
aas
loope
popa
inc
ja
lahf
out
lret
stos
loopne
scas
sahf
in
sub
push
ljmp
mov
mov
cmp
adc
xor
sub
push
dec
sub
mov
xchg
bnd
dec
insb
jnp
stos
fnsave
enter
out
xor
push
cmpsb
pop
push
adc
jle
fsubl
dec
xor
cld
fwait
and
push
rorb
test
ficoms
xor
mov
xchg
lds
or
jae
in
ror
push
addr16
push
push
bound
sahf
sub
test
imull
test
adc
pop
mov
push
xor
fimuls
push
daa
dec
mov
jbe
and
ds
jae
pushf
and
icebp
inc
inc
rorb
push
mov
mov
aaa
dec
and
and
or
and
es
aas
lahf
sub
sbb
adc
jo
das
add
icebp
push
cmp
and
jns
pop
popa
idivb
cli
fcoml
call
push
popa
dec
pop
xchg
jle
bound
aas
sbb
inc
adc
loop
inc
mov
mov
push
mov
xor
cmp
mov
mov
push
out
shlb
popa
jae
xor
cltd
stos
mov
push
mov
out
subl
mov
stos
pop
movsb
into
dec
das
mov
push
dec
lret
ss
sub
into
or
jp
adc
cld
sbb
pop
outsl
test
and
out
arpl
push
jne
orb
inc
pop
dec
xchg
sub
sub
cmc
lcall
enter
adc
ss
imul
sahf
jl
xchg
mov
shrb
out
stos
ret
mov
fwait
gs
popf
aas
pop
jl
leave
mov
cmc
jbe
ret
jmp
in
mov
fsubl
sbb
out
subb
out
jns
lods
repnz
or
out
add
dec
leave
and
sbb
sbb
xor
not
mov
xor
ss
pop
push
xchg
xchg
dec
enter
mov
test
scas
adc
nop
shll
jb
shrb
ds
xchg
aad
fisubrs
stc
mov
push
adc
xchg
es
inc
xor
jle
mov
scas
jmp
ja
push
out
cmp
idivb
sub
aad
adc
call
jmp
movsl
inc
pop
clc
les
loopne
mov
test
adc
mov
sahf
and
adc
sbb
out
lods
enter
mov
out
jns
ret
cmp
jns
inc
sbb
lfs
inc
mov
das
fwait
ss
cld
into
shll
int3
jl
ret
jnp
adc
or
inc
shl
punpcklwd
pusha
stos
push
out
addr16
mov
es
ss
add
test
in
imull
jae
pop
and
or
ds
js
push
outsb
addr16
add
jecxz
cmp
or
and
add
inc
or
outsb
mov
lods
mov
cmp
test
ss
sbb
dec
push
lcall
stc
jle
mov
fidivl
ds
lret
cmp
add
and
pop
sbb
sbb
insb
movsl
subl
lret
sti
add
cmc
inc
cmp
inc
mov
lds
or
popf
push
ja
fnstenv
cld
repz
addl
jp
lock
xchg
outsl
push
xchg
loop
mov
std
pusha
xchg
rorl
sub
sbb
push
cmp
pop
insb
adc
mov
inc
in
jg
push
test
inc
rcll
mov
add
pop
ljmp
mov
cmp
push
mov
mov
movb
fwait
ss
mov
xor
cmp
iret
xchg
and
cmp
xor
jg
leave
jp
xor
dec
mov
lods
jnp
es
or
shrb
aam
aas
outsb
push
adc
push
lods
pop
fstl
inc
cmp
ret
fbld
or
and
add
and
pop
mov
movsl
push
jle
pop
testb
arpl
push
outsl
mov
mov
repz
lds
fnstenv
inc
push
push
push
xor
in
mov
and
and
or
sub
in
mov
jae
pop
ja
xor
les
add
imul
pop
outsb
ja
pop
bound
addr16
ret
pop
fiaddl
pop
pop
inc
ficoms
sahf
and
mov
cli
xor
shlb
xchg
gs
in
mov
out
sbb
ficoml
andl
inc
js
fstps
and
mov
push
pop
outsb
pop
dec
imul
call
out
lcall
xchg
subl
cmp
dec
ss
mov
pop
int3
sarl
adc
mov
inc
inc
xchg
fldln2
jb
aas
pusha
inc
fstp
pop
test
loopne
lahf
inc
or
enter
or
ret
xchg
aam
js
loope
test
cmpsb
xor
test
adc
pop
or
or
sti
rcr
mov
enter
sub
inc
je
jae
enter
mov
inc
dec
jle
or
jl
or
pushf
or
mov
int
jl
dec
stos
loopne
xchg
pop
push
lods
test
aam
adc
test
and
mov
test
and
push
inc
scas
insl
aam
mov
pop
scas
lret
sub
incl
negb
adc
mov
je
pop
sbb
sbb
stos
iret
xchg
fwait
shrl
mov
lods
push
lods
dec
out
cwtl
sub
mov
lock
push
ja
mov
fidivrl
xrelease
fstpl
cmpsb
xchg
sbb
sub
outsl
pop
lods
jns
or
mov
test
mov
outsb
fdiv
cmp
pop
dec
fdivl
cmc
sub
push
hlt
adc
mov
ss
cmp
lods
dec
or
leave
mov
cmp
or
lea
into
popa
cmp
push
mov
inc
int
inc
int3
sub
mov
xchg
iret
arpl
jns
mov
dec
sub
xor
dec
mov
inc
mov
cmpsl
sub
xchg
xchg
and
or
pusha
mov
imul
cmp
dec
mov
cmp
fdivl
jp
inc
adc
out
insl
arpl
int3
push
mov
push
xor
ret
adcl
cmc
dec
add
insl
add
push
mov
notb
add
push
cmpsb
out
push
test
stc
mov
ljmp
mov
pop
push
lret
dec
jl
mov
fdivrs
mov
mov
mov
mov
scas
dec
xchg
adc
adc
pop
fs
scas
and
push
mov
push
jbe
cmp
sbb
fwait
mov
mov
sbb
in
pop
adc
ret
sub
icebp
mov
in
jmp
scas
xchg
or
dec
sbb
dec
cmp
rclb
loopne
gs
aam
dec
test
cld
adc
leave
mov
sbb
cs
xchg
push
sbb
cmc
rcrb
push
xor
dec
jbe
mov
stos
lret
icebp
aaa
andb
call
arpl
mov
xchg
flds
push
xchg
mov
push
pop
mov
sbb
pop
push
iret
cmp
adc
pop
outsb
std
orl
orb
inc
frstor
and
out
cld
int
fisttpl
in
bound
push
scas
loop
call
or
prefetchwt1
jmp
imul
mov
lret
mov
push
push
daa
mov
sub
push
xchg
scas
and
dec
inc
add
out
mov
push
dec
daa
push
lret
fldt
jecxz
xor
popf
mov
dec
xlat
out
or
aaa
add
push
mov
sub
fs
xor
ret
sarb
pop
les
out
out
outsl
ret
mov
cs
shr
jb
mov
jmp
and
sbb
stos
frstor
lods
sbb
cmp
inc
mov
lahf
sahf
xchg
push
sbb
mov
outsl
aam
mov
jno
mov
add
loop
mov
push
ss
ljmp
add
ds
or
push
fcmovu
xor
ljmp
dec
xchg
and
dec
mov
xchg
or
dec
cmpl
shrl
lahf
outsb
flds
sti
ljmp
mov
ret
jne
sbb
adc
adc
jno
mov
dec
in
fisubs
fidivs
rolb
cmc
pusha
ja
push
out
test
and
sub
ss
addr16
bound
mov
out
dec
jb
xchg
jmp
test
je
pop
imul
call
xor
xchg
mov
inc
test
sbb
xor
adc
rorb
pop
mov
imul
addr16
pop
lcall
mov
sbb
inc
add
push
inc
fsubp
inc
pop
or
loop
sbb
cmp
adc
cmp
arpl
jmp
lock
mov
dec
mov
out
out
popa
js
std
cmc
sbb
pop
mov
out
mov
sub
cmp
fwait
sbb
ret
xor
dec
or
repnz
fsubs
add
test
repz
jg
pushf
test
icebp
hlt
imul
jns
inc
push
sub
add
loop
xchg
sti
clc
sbb
dec
movsb
inc
push
repnz
push
or
insl
push
cmp
xchg
call
mov
in
call
push
stos
jmp
xchg
addr16
add
sbb
add
aam
jp
jle
sbb
xor
das
cmc
lcall
lahf
outsb
mov
nop
cltd
fcoml
mov
lods
push
scas
jmp
push
stos
mov
mov
pop
xor
call
sbb
or
in
pop
jo
dec
mov
pop
mov
cmpsl
popf
jae
pop
into
fcmovu
lcall
mov
icebp
aam
mov
setge
sub
add
push
push
loop
mov
aam
cwtl
cmpsb
jp
popa
xchg
in
or
int
cmpl
popl
or
push
addr16
clc
scas
add
xchg
dec
lret
fwait
cld
xor
or
xor
jbe
push
adc
mov
jmp
dec
icebp
jle
out
jb
xor
repz
clc
and
xchg
ret
out
push
mov
movsb
or
adc
cli
sbb
test
pop
add
sub
lods
in
popa
or
fidivrs
jp
mov
xorb
xchg
push
sbb
dec
iret
pop
xorl
pop
inc
xchg
addl
fcompp
mov
pop
dec
adc
lods
call
sbb
ret
aas
out
sbb
xchg
addb
and
mov
mov
inc
andl
fwait
enter
bound
pop
push
lahf
lods
mov
sahf
daa
push
loopne
inc
jo
mov
lret
divb
out
test
inc
mov
adc
xchg
jmp
inc
mov
lods
imul
push
in
mov
or
stc
pop
ror
dec
stc
out
xor
xchg
xchg
sbb
test
mov
aas
mov
push
pop
mov
je
out
mov
lret
lret
inc
dec
add
ljmp
aas
add
rcr
jp
aas
lahf
sub
mov
jp,pn
addl
roll
adc
cwtl
xchg
adc
in
fs
das
lret
cmp
pop
shl
jne
or
mov
ss
negb
dec
xchg
insl
xchg
inc
and
das
mov
sbb
lods
ret
dec
dec
mov
mov
sahf
loop
daa
cmp
jecxz
fcmovnu
mov
or
popa
mov
jne
into
sub
shrb
xchg
push
mov
insb
push
dec
das
call
ret
popa
leave
ret
stos
test
xlat
cld
add
jl
sbb
mov
pop
sbb
sub
cmpb
mov
inc
xlat
sub
mov
movsb
or
lret
sub
sbb
int3
out
fcoml
push
out
dec
push
or
mov
pop
int3
aam
mov
les
insb
shlb
and
in
add
loopne
cmp
add
cmpsl
pop
cmpsb
jge
sub
bound
cmp
les
cmpsl
mov
lds
mov
xchg
mov
jae
fcoml
outsb
jae
nop
inc
xlat
sti
daa
lods
jns
clc
pushf
das
inc
pop
fiaddl
cs
adc
popa
aaa
fmuls
inc
subb
mov
sahf
bound
cmp
pop
loop
mov
pop
xor
jge
sahf
jle
dec
jnp
movsb
sahf
mov
mov
ja
sbb
movsb
jo
xorb
in
cli
push
push
xchg
stos
popa
loope
and
push
dec
dec
or
mov
fsts
in
clc
jmp
fwait
pop
mov
scas
mov
icebp
repnz
and
mov
mov
mov
sub
jne
mov
push
daa
ljmp
test
pop
scas
incb
jmp
inc
mov
dec
in
mov
insl
jb
jo
sbb
push
add
mov
loopne
shlb
pop
aas
push
out
xchg
xor
cli
inc
mov
sub
mov
mov
fisttpll
hlt
push
stos
mov
add
loop
popa
pop
mov
push
jno
xor
jne
adc
mov
lahf
add
jmp
sti
fstpl
and
pusha
in
lods
and
addr16
sbb
xchg
and
gs
dec
dec
out
pushf
shlb
jo
pop
cmp
sbb
mov
push
inc
lock
inc
xor
xor
ss
inc
fisubl
ljmp
les
and
fucom
stc
xor
adc
and
push
aad
push
adc
xchg
sbb
jp
ret
mov
cmpsl
aas
mov
movsb
dec
lods
adc
jg
mov
out
jnp
test
add
hlt
ss
std
enter
arpl
ljmp
or
xchg
ja
pop
adc
mov
pop
in
scas
negb
aad
dec
pop
fisttpl
fsubrs
jl
xchg
dec
popf
jmp
stos
in
adc
fwait
pop
xor
sbb
adc
jnp
cmp
dec
sub
test
insl
sub
pop
inc
outsl
jno
dec
sarb
xorl
mov
dec
lods
ss
leave
jo
jl
adc
and
daa
cmp
js
pusha
push
imul
xchg
push
mov
stos
fsts
cmpsb
add
push
iret
pushf
data16
jnp
movsl
inc
leave
jbe
and
mov
pop
rcrb
stos
jno
fldenv
test
sarl
fwait
and
xchg
dec
stos
xchg
push
sub
push
mov
cs
adc
and
cmpsb
movsb
push
ljmp
jne
mov
rcrl
leave
in
mov
test
jge
addl
mov
or
in
movsl
or
jmp
test
mov
inc
insb
scas
dec
cmp
jno
push
push
dec
xor
jns
bound
dec
test
ljmp
xchg
fs
sbb
xchg
movsl
ljmp
aad
dec
sub
lock
movsw
aad
inc
ror
xor
pop
push
xchg
xor
adc
pop
call
arpl
icebp
popa
out
push
jno
loopne
and
sub
xchg
mov
jne
inc
add
mov
notb
je
in
xchg
sahf
repz
or
cmp
or
imul
sub
push
ja
xchg
lcall
inc
cmpsl
or
pop
je
popf
imul
mov
pop
int
cmp
push
pop
pop
movsl
data16
outsb
lods
xorb
mov
inc
cmpsl
or
clc
mov
in
sbb
inc
imulb
pop
push
out
adc
mov
aaa
sub
xchg
aaa
lcall
dec
aas
je
mov
aas
jp
icebp
mov
inc
int3
jmp
xchg
cld
in
xchg
adc
pop
lods
sub
xchg
dec
icebp
rorl
mov
xchg
cmp
xchg
std
cmc
cmp
or
mov
mov
push
rcrb
sub
out
or
xchg
push
idivl
test
lret
cmp
lock
push
xor
add
push
jbe
jl
adc
shrb
es
sbb
pop
negl
xchg
stos
test
dec
repz
jg
int
sbb
in
inc
insl
jp
call
push
and
int
popa
stc
loope
jns
cmp
jl
pop
push
inc
push
or
and
aad
or
mov
or
pusha
dec
movd
jno
les
out
pop
imul
jp
or
das
mov
aad
xchg
es
ja
dec
outsl
hlt
xor
xor
ja
and
lcall
and
push
cmp
pop
imul
scas
dec
adcb
push
sar
sub
push
js
jmp
adc
outsb
push
add
sub
jmp
or
jecxz
xor
dec
mov
loopne
pop
cmp
add
mov
sub
lahf
push
rclb
cmp
add
cs
add
clc
test
movl
in
cmp
push
cmp
lret
and
lret
xor
sub
movb
sub
jo
in
orl
loop
into
filds
outsl
mov
rcll
out
sub
pop
dec
fbld
fimull
cmpsb
fisubrs
addr16
jmp
adc
push
aad
inc
mov
movl
add
stos
int
sub
push
in
lahf
adc
or
outsb
mov
push
dec
andl
cmp
and
sarl
add
std
or
leave
shlb
int3
mov
ds
xchg
mov
inc
movsl
pop
pushf
push
mov
pop
cmc
outsl
pop
xchg
into
hlt
loop
inc
inc
gs
xchg
jecxz
xor
frstor
or
mov
pop
repnz
pop
rcrb
jl
xlat
stc
xchg
inc
daa
pop
cmp
fistpl
push
std
or
mov
cmp
sbb
push
mov
repz
jbe
adc
mov
in
and
int
std
test
repnz
hlt
pop
sbb
push
jle
into
sub
adc
xchg
add
rcrl
jns
push
dec
mov
in
xor
stos
pop
jb
fnstsw
dec
aas
leave
enter
cmp
pop
cmp
inc
cli
mov
imul
push
fstpl
dec
imul
out
out
mov
movhlps
adc
vmovntps
inc
imul
sub
xor
sub
xchg
stos
or
out
xor
xchg
and
repz
push
pop
outsl
repnz
aam
inc
orb
repnz
xor
lahf
popa
test
cmp
sub
test
mov
fmull
mov
mov
mov
into
arpl
in
cmp
xor
int
lods
push
push
adc
pop
and
sbb
mov
and
cmp
or
push
and
sti
add
movsb
cltd
rcrl
mov
add
adc
popa
stos
fsubs
push
xchg
imul
push
jbe
fs
rcrl
mov
rcrl
stc
add
rcll
shl
mov
cmc
mov
pop
aas
xchg
sub
int3
ja
ret
dec
out
cmp
push
mov
enter
int3
pop
add
ss
adcl
or
sub
pop
and
insb
es
movsl
xchg
inc
lahf
or
outsb
sbb
pop
and
jp
add
hlt
out
ret
xchg
pop
in
jo
test
push
pop
push
stc
xor
cwtl
int3
cmp
stos
out
loop
lods
sbb
fcmovbe
shl
add
movsb
cmp
sbb
repz
ret
rcll
int3
lock
dec
ffreep
mov
cmp
mov
cli
pop
jecxz
jmp
inc
cmpsb
popa
add
movsl
add
aaa
jp
mov
imul
xchg
inc
xorl
leave
and
and
jge
add
fwait
imul
mov
pop
adc
cmp
ret
sbb
and
push
das
mov
or
pop
int
sbb
jmp
push
push
loopne
ret
and
push
mov
mov
rcrl
negb
mov
sbb
xorl
test
test
ror
cwtl
fwait
insl
in
js
xchg
sar
dec
push
adc
adc
pop
cmp
or
movsl
mov
fnstenv
or
pop
mov
je
int
dec
jno
or
in
arpl
cmpsl
xchg
xor
daa
dec
sbb
out
leave
aam
cltd
dec
pop
adc
lahf
in
push
xor
push
int3
jo
cmp
sub
iret
frstor
mov
xchg
int3
jl
mov
add
rorl
fsubr
add
cli
fsubrl
mov
popf
add
dec
adc
mov
dec
xor
inc
test
add
cmp
jl
dec
sub
mov
ret
repnz
insb
mov
push
ljmp
movsb
cmpsl
mov
aad
xchg
mov
mov
and
xor
pop
push
out
push
gs
decb
sub
ljmp
pop
sub
mov
icebp
sub
sbb
pop
mov
mov
sti
lahf
push
stc
ljmp
ja
mov
ds
cmc
cmp
mulb
jge
or
xchg
mov
icebp
jmp
adc
push
push
sub
addr16
aaa
jl
aaa
pop
xor
das
dec
jp
dec
movb
mov
rcr
ret
fdiv
or
sub
dec
push
movsl
mov
dec
popa
fmull
mov
enter
sti
lret
stos
in
fdivrl
xchg
stos
int
insl
or
imul
pop
fdivr
pop
jmp
xor
fcom
bound
mov
mov
xor
sbb
mov
pop
fidivs
xchg
shlb
lret
pop
outsb
in
imul
adc
or
cmp
out
fsubr
sbbl
aas
lds
add
xchg
cmp
movl
xchg
in
mov
push
inc
arpl
xor
mov
std
fdivrp
mov
inc
xchg
sbb
mov
fcomps
dec
jle
loopne
imul
mov
and
movb
xor
out
add
scas
in
leave
sbb
cmp
ret
xchg
fsts
sarl
and
out
adc
sub
push
add
cmp
cmp
fs
mov
out
rorl
repnz
inc
inc
lret
adc
mov
das
sbb
ret
outsb
add
insb
imul
mov
cli
jnp
pop
gs
std
dec
fxtract
enter
popa
cltd
push
inc
adc
fimull
pop
xchg
daa
in
loop
jns
jnp
movsl
push
mov
mov
mov
sub
add
sub
mov
imul
jns
enter
std
or
and
filds
in
inc
and
push
xchg
cmp
push
inc
ds
or
pop
adc
nop
test
pop
push
xor
jmp
dec
push
jnp
mov
inc
orb
inc
jne
roll
cmp
push
shll
js
xchg
add
inc
in
pop
movd
add
rclb
test
jmp
test
mov
je
call
mov
xchg
addr16
jbe
mov
fsubr
push
imul
inc
xor
sahf
insl
notl
scas
xor
sub
xchg
popa
mov
adc
xor
shlb
cli
and
fiaddl
push
mov
hlt
jle
add
nop
lds
xor
ret
xlat
test
adc
roll
lock
and
inc
xchg
mov
and
mov
pop
inc
pop
inc
push
add
push
sbb
and
in
xor
xor
mov
mov
adc
xor
or
movsl
push
lods
std
mov
in
pushf
gs
stc
mov
mov
xchg
bound
lods
mov
push
mov
negb
imul
rorb
mov
xor
add
inc
subl
push
das
pop
stos
xchg
aad
cld
and
cltd
cs
push
mov
lock
or
inc
or
sar
add
icebp
js
loop
pop
and
adc
pusha
xor
cmp
inc
push
sbb
es
or
rclb
stc
loopne
bnd
xor
adc
in
pop
add
jg
jecxz
push
int3
test
sbb
add
test
pop
stc
addr16
mov
shlb
ret
popf
inc
inc
mov
shrb
int3
xchg
sub
addr16
outsl
iret
and
pushf
push
or
mov
cld
mov
mov
and
loop
popf
out
cmpsl
add
pusha
cmp
dec
inc
shrl
in
push
out
aad
mov
jno
into
fdivr
mov
sarl
jmp
push
mov
cmp
leave
jmp
sahf
xor
jl
lret
out
pop
lea
lds
repnz
imul
hlt
movsb
adc
addl
mov
pop
incl
mov
mov
mov
imul
xchg
mov
gs
in
cli
jmp
lret
add
dec
mov
stos
es
scas
push
pop
xchg
es
jbe
fs
aad
cwtl
mov
sub
cmc
or
stc
add
inc
inc
aad
dec
stos
xor
int3
jb
in
es
ds
movb
mov
lcall
nop
repnz
aas
shll
sbb
outsb
out
push
sarb
mov
dec
inc
jno
mov
loope
cmp
push
mov
in
and
rolb
mov
fsub
pop
xchg
push
xor
repnz
push
add
lret
inc
imul
mov
xchg
int
lret
pop
mov
test
mov
jnp
loopne
xchg
cmp
and
out
push
mov
paddq
dec
jp
push
push
orb
mov
ror
imul
out
in
jg
imul
je
insb
out
fsub
sar
cld
sub
pusha
pushf
lret
push
loope
leave
je
sub
jecxz
xchg
add
js
fiaddl
jno
jnp
jp
mov
imul
ljmp
jge
jnp
pop
dec
xchg
inc
sbb
push
push
lock
mov
shll
scas
xchg
sahf
fwait
popf
xor
in
cmpsl
jmp
mov
adc
int3
imul
pop
orl
mov
test
scas
inc
data16
mov
add
testl
xchg
add
dec
add
fiaddl
and
and
loopne
xor
and
outsl
dec
mov
mulb
add
mov
enter
loopne
popa
bound
stc
sbb
out
jns
test
mov
clc
mov
popa
pop
or
and
xchg
jo
inc
jnp
test
pop
xor
xchg
orl
mov
mov
pop
cltd
add
jecxz
jae
sti
dec
sbb
jp
daa
adc
adc
sbb
and
repz
popf
cwtl
fmull
leave
nop
mulb
mov
loop
xchg
jmp
cmp
test
fcom
imul
sarb
mov
pop
jl
lock
ljmp
call
push
scas
lds
pop
push
pop
mov
jno
push
fcomi
repz
mov
mov
call
cld
add
dec
mov
or
xor
add
sbb
jl
insb
out
in
sbb
or
daa
loope
pop
inc
add
in
lret
push
pop
cltd
mov
aaa
std
fiaddl
pop
dec
dec
sahf
out
out
inc
loop
out
fsts
mov
cmp
dec
mov
cmp
inc
mov
push
int3
imull
inc
xchg
mov
and
xchg
jo
enter
sub
push
sbb
push
movsl
add
insb
xchg
mov
dec
xchg
cmpb
roll
popf
test
mov
xor
fildl
movl
stc
xchg
jp
add
mov
jge
xchg
mov
or
cltd
adc
sub
push
int3
push
adc
jle
mov
xor
addr16
fldenv
loope
notb
jp
jl
and
add
add
inc
jnp
push
sbbl
int3
jbe
gs
push
mov
iret
mov
inc
fwait
dec
xchg
fbld
sti
mov
or
push
lds
mov
xchg
and
loop
cmp
mov
push
movl
fwait
mov
ss
and
xor
mov
lods
inc
push
mov
pop
sbb
cmp
pop
ss
xchg
xchg
ja
pop
rol
and
enter
cs
push
jbe
sub
pop
loope
nop
adc
lret
inc
mov
loopne
fmull
xchg
pop
or
inc
cltd
dec
aas
les
push
dec
test
aam
lods
data16
mov
shlb
in
mov
and
dec
pop
mov
push
movsl
mov
xor
dec
sbbl
cmpl
lods
pop
js
cmp
push
ja
cmpsb
jno
pop
inc
pop
outsb
outsb
ds
xchg
jg
orl
orps
ret
push
push
pop
inc
and
lods
xchg
fsubrl
scas
ss
mov
xchg
ja
mov
cmp
sarl
inc
pusha
jg
jne
push
and
jmp
lds
cmp
lods
ds
xlat
js
pop
repnz
clc
xlat
ljmp
in
not
adc
cmp
or
in
in
xchg
ret
rolb
push
popf
cli
test
insl
dec
sahf
ret
add
jo
enter
and
pop
and
jno
jle
ja
adc
xor
dec
lahf
pop
dec
movsb
data16
pushf
testl
int3
in
pop
push
add
jbe
fiadds
cmpsb
mov
std
jae
xchg
cmpsl
pop
iret
xchg
js
lods
gs
jb
lds
in
clc
xor
ret
and
leave
xchg
ficoml
scas
daa
test
xchg
int3
test
stos
cmc
sub
mov
xor
shrl
js
lret
dec
push
add
rcrl
repnz
pop
lock
inc
cmp
cmp
push
xchg
cmpsl
sti
hlt
mov
int
mov
cmp
jl
mov
cmp
sbb
push
push
jae
sbb
dec
lea
xor
lret
shll
sbb
or
xchg
int3
dec
inc
push
sbb
cmp
sbb
je
out
popf
pop
or
movsb
inc
cwtl
ss
or
les
cwtl
mov
mov
pusha
mov
or
push
cmp
or
push
inc
les
pop
es
das
mov
jnp
push
sti
pop
and
negl
inc
sub
stos
sbb
push
std
jns
inc
pushf
add
jne
mov
inc
jns
jp
fs
add
ret
movsb
out
and
dec
cmp
mov
loope
ret
fisttpll
sbb
mov
into
loop
push
addr16
pop
int3
ds
sub
pop
jae
and
out
enter
test
popa
mov
out
cmp
cmp
sbb
in
lcall
jl
xor
pop
pop
xchg
mov
aam
test
jl
mov
inc
add
or
shl
ret
push
loope
cmp
inc
mov
mov
add
add
lods
mov
xchg
push
testl
mov
jnp
insb
cmpsb
sbb
dec
pop
sbb
outsl
outsl
scas
mov
ds
ret
cli
fimuls
push
mov
xchg
cs
jle
pop
les
fwait
pop
nop
sub
mov
sahf
pop
cmp
push
out
popa
add
push
scas
adc
adc
jnp
lock
idiv
or
test
lods
shlb
mov
inc
sub
jno
aas
outsl
pop
sbb
jp
arpl
in
xchg
test
sbb
pop
ret
jbe
sub
cmp
icebp
mov
movsb
aas
inc
or
shrb
mov
in
cmpsb
in
ds
mov
adcb
in
sbb
mov
in
mov
call
mov
add
mov
jle
mov
pop
push
sbb
loopne
stos
imul
sub
xlat
mov
sahf
pop
cli
push
mov
dec
mov
decl
sbb
enter
pop
and
sub
repnz
mov
inc
pop
dec
adc
pop
inc
or
mulb
xchg
xor
add
neg
pop
imul
lretw
das
add
or
xorl
stc
push
push
inc
push
mov
jecxz
icebp
fcmovu
loop
cs
mov
push
xchg
mov
stos
int
aas
das
and
mov
ss
mov
nop
mov
data16
push
je
xor
add
or
dec
or
mov
mov
add
mov
xchg
sub
mov
add
out
xor
mov
shl
out
sbb
xchg
mov
lcall
cltd
push
jne
dec
cmp
imul
xor
inc
xor
rcll
aam
xchg
lods
iret
pop
push
loop
out
xchg
inc
popa
mov
xchg
arpl
dec
sbb
jge
js
jmp
mov
sbb
adc
scas
inc
notl
sub
test
pusha
xchg
xchg
mov
xchg
push
ds
fucom
cmc
cmp
fisttpll
loope
jne
bound
adc
cmp
mov
push
sub
pop
push
aas
xor
or
xor
leave
js
out
cmp
cmpsb
out
test
or
sub
call
or
fs
stos
or
aad
dec
sbb
loop
stos
test
jne
mov
adc
mov
scas
adc
fsubrl
sarb
into
pop
xchg
mov
push
xor
mov
test
mov
jmp
dec
scas
dec
pop
insb
pop
pop
imul
fsubrs
add
in
mov
rorl
test
cmp
ljmp
ret
lcall
push
repz
call
dec
jno
inc
mov
in
shll
aaa
fldenv
or
scas
rcrb
mov
cmpsl
xor
leave
je
push
arpl
aas
cs
cltd
mov
or
mov
movzwl
call
inc
dec
nop
pusha
mov
in
or
add
jl
lahf
add
mov
xlat
stc
xchg
pop
movsl
add
adc
and
and
scas
ljmp
mov
mov
push
or
xor
rcl
pop
adc
sti
cmp
in
lods
mov
pop
push
inc
and
lahf
ljmp
sbb
test
in
or
add
mov
div
arpl
inc
xor
pop
movsl
std
aas
jae
arpl
and
outsl
add
adc
bound
iret
in
mov
popf
or
push
dec
jnp
ret
popf
xor
xor
cmp
xor
xor
sbb
test
imul
mov
das
dec
cld
mov
push
shlb
jne
mov
das
push
mov
mov
xchg
imul
mov
mov
aad
mov
movsl
jmp
insl
and
inc
cmpsl
and
aaa
mov
je
dec
dec
push
xchg
push
jne
fcoms
lods
pop
insb
push
rcrl
add
insl
je
sub
pop
and
jle
or
movsl
insb
pushl
clc
jmp
lods
lahf
mov
inc
inc
pop
fdivrp
and
inc
fidivrl
decb
cmp
pop
sbb
jge
ljmp
jo
stos
dec
and
and
pop
add
mov
int
test
pop
mov
cmp
jecxz
sub
push
push
mov
add
lea
and
xchg
lds
pop
mov
inc
sub
jnp
ficompl
outsl
shll
shr
lock
ret
and
sbb
jmp
int3
test
lea
cmp
shlb
lock
jg
gs
mov
stos
xchg
xchg
inc
xchg
xchg
inc
pop
ret
adc
arpl
or
xor
fmuls
mov
mov
sub
aas
mov
pop
scas
outsl
out
iret
sbb
xchg
jns
clc
nop
pop
aas
xchg
test
sbb
fisttpl
out
inc
add
mov
dec
popa
fwait
stc
and
or
sub
adc
adc
push
sahf
adc
stos
cmp
mov
cli
popa
inc
and
hlt
hlt
fisttpl
add
lea
repnz
cmc
cwtl
push
xchg
out
mov
fcoms
jb
test
mov
sbb
mov
popa
sub
xorl
fistps
dec
test
popf
pop
mov
cltd
stc
clc
sbb
lcall
sbb
and
or
repz
sub
ret
cmc
or
arpl
leave
sub
out
xor
mov
mov
pop
adc
subb
out
fmul
mov
iret
mov
js
inc
push
call
aad
add
mov
mov
insb
idivb
mov
sub
sarl
add
lds
push
push
xchg
subb
pop
testb
mov
push
shll
js
adc
faddl
pop
add
or
xlat
xor
sub
imul
xchg
frstor
add
sub
loope
pop
scas
mov
xor
pop
iret
push
inc
mov
jle
mov
push
push
inc
cmp
mov
dec
hlt
cmp
dec
insb
push
idiv
js
or
and
inc
popf
pop
push
lea
lock
repnz
enter
nop
mov
push
and
xchg
adc
sti
mov
pop
scas
mov
xchg
test
das
sbb
pop
dec
popf
pop
mov
sarl
jbe
int
out
jp
jp
test
leave
test
nop
add
flds
push
rorl
mov
cmp
pop
jmp
test
aam
enterw
pop
pop
mov
fldt
test
cmp
fldt
stos
pop
pusha
mov
fwait
mov
rclb
add
ljmp
mov
xchg
imul
sub
jbe
or
xlat
dec
fistpl
sbb
add
jmp
in
sbbl
and
adc
jbe
cs
push
sub
lret
gs
push
xchg
inc
mov
pop
mov
push
outsb
mov
out
push
dec
push
xchg
jp
push
lret
es
nop
test
fildll
rcr
jne
sbb
es
lock
jne
inc
in
loope
inc
jbe
out
icebp
out
xchg
mov
lret
xchg
movsb
fcmovnbe
ret
adcl
jle
mov
cmp
mov
pop
ss
fcomp
add
jne
add
sbb
fiaddl
pop
sub
pusha
xchg
add
pushf
mov
cmp
add
adc
sarl
mov
ja
imul
mov
and
dec
ret
enter
add
xchg
hlt
gs
push
leave
sti
mov
cmp
cmovno
movsb
push
sarb
dec
das
setnp
jb
in
dec
ds
add
and
pop
pop
mov
sub
push
xlat
and
ror
or
sbb
jno
jp
jns,pn
cmp
inc
cmpsb
jmp
aas
xor
repnz
push
into
mov
mov
test
andl
sahf
sub
and
jmp
rorb
sar
jns
sarb
stos
lcall
push
lcall
add
leave
out
inc
add
mov
lock
sub
jae
push
or
xor
cmp
mov
imul
pushf
rcr
lret
insb
std
fildl
mov
mov
sbb
inc
add
sbb
mov
cmp
cmp
ret
inc
test
data16
mov
ret
sti
xor
outsb
sub
mov
adc
mov
xchg
mov
and
mov
ret
pop
mov
mov
cmp
stc
inc
mov
adc
fisttpll
in
dec
or
and
scas
jle
xchg
mov
pusha
mov
mov
mov
cmpb
test
and
push
fdivs
mov
stos
pop
pop
in
xorl
outsb
mov
and
or
mov
dec
ret
mov
push
sub
loop
test
imul
mov
mov
xchg
hlt
frstor
xchg
dec
dec
xlat
mov
rcll
out
je
pop
fsts
shlb
in
xor
cmp
xor
psadbw
mov
xchg
push
sbbb
mov
wbinvd
or
scas
out
stc
mov
int3
sahf
mov
test
fldl2e
cmpsb
and
push
push
or
mov
cld
push
add
adc
test
mov
hlt
mov
mov
mov
dec
and
lret
enter
inc
push
insl
fnclex
xor
repnz
loope
rcrb
xchg
or
mov
mov
mov
adc
movsb
sub
mov
repz
wrmsr
popf
aas
insb
cmc
pop
loopne
jne
add
and
cmpsl
dec
mov
and
ljmp
pop
sub
xchg
mov
or
cs
jno
test
xchg
and
mov
cwtl
push
mov
xor
jmp
arpl
sti
mov
jb
xor
add
jo
jno
jmp
jo
into
roll
adc
push
stos
xchg
cmc
inc
mov
adc
or
data16
or
and
cli
fimull
filds
insb
dec
push
shlb
dec
xchg
fcoms
mov
int
int3
mov
popa
movsl
dec
pop
jge
or
fstpl
repnz
ret
or
push
pop
es
js
and
push
dec
aas
loopne
cmp
stc
ljmp
add
or
lods
mov
out
cmp
inc
cmp
xor
jno
mov
mov
es
adc
imul
cmp
adc
jno
aam
clc
xchg
jns
jl
cmp
mov
icebp
lea
ss
aam
cmp
int
inc
jle
ljmp
pop
pop
mov
pop
mov
stc
mov
push
adc
dec
add
pop
movsl
in
into
daa
fcomps
sahf
hlt
pop
pop
enter
add
jg
das
ja
pusha
insl
mov
addr16
icebp
es
dec
inc
stc
and
clc
sbb
mov
inc
aam
orl
xchg
push
cli
test
leave
dec
and
pop
or
jo
push
add
dec
xchg
cmp
int3
mov
int3
mov
push
xor
outsl
pop
pop
jbe
arpl
sbb
imul
bound
test
out
test
xchg
cmp
adc
cwtl
inc
loopne
pop
dec
dec
inc
int3
pop
pushf
adc
mov
pushf
xchg
cld
lcall
and
movsl
mov
maxps
dec
test
enter
ficomps
lods
mov
bound
test
fistpl
cmp
xor
into
and
ja
out
stos
xor
orb
addb
jo
icebp
arpl
jbe
add
ret
movsb
in
daa
adc
cmp
data16
mov
push
or
or
jb
push
aam
xor
jnp
mov
pop
jmp
fmull
in
mov
dec
push
mov
push
jp
pop
cmp
mov
sbb
push
xchg
js
cs
xor
mov
jmp
arpl
in
inc
int3
aas
mov
xor
jno
jp
lar
jge
orb
int3
lcall
sbb
subb
inc
mov
sar
mov
mov
in
mov
cli
mov
fistpl
mov
cltd
mov
mov
cmp
mov
mov
aam
mov
cmpsb
cld
jmp
cmc
cmp
out
test
divl
mul
fmuls
stc
cmp
cmp
into
dec
clc
repnz
ror
sbb
ss
xor
or
scas
les
dec
or
mov
repnz
cmp
in
int
or
es
imul
xchg
popf
str
dec
enter
push
mov
pop
sub
cmp
mov
inc
dec
and
ficompl
sbb
jae
adcb
mov
repz
sbb
inc
jg
jb
popa
add
mov
sarb
lock
lods
mov
and
insl
mov
lcall
fsubrs
aaa
mov
add
add
jl
push
lods
push
les
push
insb
popl
je
cmp
inc
loopne
or
insl
add
mov
mov
es
fstpt
popa
cmp
outsl
xor
outsl
mov
push
adc
cmpsl
into
popa
sub
popf
jle
sub
cmp
dec
jb
fwait
adc
jle
cmp
sarb
mov
icebp
dec
stc
inc
lahf
div
dec
cwtl
kaddb
xchg
push
leave
add
negb
sub
mov
movsb
test
lods
mov
cmpb
adc
xchg
shrl
outsb
icebp
jmp
inc
aam
gs
jmp
ds
lds
sub
mov
fidivs
sub
insl
sbb
sbb
enter
mov
dec
daa
stc
inc
push
mov
repnz
jecxz
add
cmp
lock
aaa
cld
fwait
mov
mov
add
je
cmp
jle
xchg
bound
pop
jmp
jbe
out
adc
inc
test
stos
fwait
and
dec
rorb
ficompl
fstpl
lea
outsl
pop
adc
test
pop
std
inc
mov
and
sub
mov
jbe
inc
sbb
push
jge
lret
fcomip
icebp
in
mov
adc
mov
es
mov
mov
nop
imul
inc
mov
mulb
call
test
cmp
into
push
in
jns
add
scas
add
in
negb
mov
in
pop
cmp
mov
and
js
adc
jecxz
or
jbe
jg
sbb
movsl
divb
jl
push
cmp
sbb
xor
cmp
sbb
lahf
sub
adc
mov
lock
leave
neg
pop
repnz
inc
mov
dec
sbb
or
push
sbb
repz
je
or
jne
jp
int
sti
in
pop
cmp
into
xlat
push
mov
gs
cmp
cmpsb
test
sar
lahf
or
iret
xchg
cltd
std
mov
in
repnz
in
testb
adc
push
aaa
inc
cmc
lds
mov
inc
lahf
fbstp
pop
push
popf
xchg
int3
pop
dec
pop
sub
mov
dec
jnp
dec
popa
jecxz
mov
mov
dec
jge
xor
or
gs
les
adc
and
test
push
lea
jp
mov
xchg
mov
jnp
mov
xor
mov
inc
lret
lods
shlb
mov
call
jle
fsubrl
cmp
add
ja
cmp
addl
mov
push
fmull
push
sarb
and
sub
push
adc
mov
es
shl
lahf
jae
add
xor
fstl
push
call
js
test
jnp
push
clc
hlt
aad
pop
movsl
fadds
lods
adc
jno
mov
jle
sbb
imul
pop
repz
ret
cltd
inc
icebp
mov
xchg
inc
or
sbb
loope
pop
mov
shlb
in
mov
cmp
mov
jns
mov
stos
das
sbb
or
lret
into
jns
into
pop
mov
xchg
mov
inc
imul
push
movb
mov
insl
or
cmp
dec
push
push
fsubs
mov
popa
cmp
sbb
fistps
ss
ljmp
je
test
inc
aam
jns
adc
gs
and
pop
cmpl
sbb
inc
pop
and
repnz
test
mov
fldl2t
lods
lret
or
addb
cmp
or
fcomps
and
fsubs
add
movsb
movsl
rclb
and
sub
in
jns
cwtl
popa
mov
pop
push
sbb
vmwrite
ljmp
cmp
outsl
lret
mov
dec
adc
test
sahf
aad
xchg
push
movsb
xchg
pop
adc
aaa
add
ret
in
cmp
aam
or
pop
mov
pop
mov
add
sbb
jle
pop
subl
loopne
fwait
mov
ds
stc
push
stos
push
lods
push
push
xchg
in
notl
sub
repnz
sbb
dec
pop
add
pop
xor
mov
mov
sub
out
mov
mov
and
inc
xor
stos
mov
idiv
fsubrl
fwait
lcall
sbb
adc
xlat
jecxz
jmp
inc
or
mov
lcall
mov
push
add
pop
mov
sti
and
dec
outsl
jnp
mov
nop
enter
xchg
pop
xchg
xlat
repnz
inc
or
pop
cmpsb
push
insb
js
add
gs
mov
repnz
sub
mov
mov
mov
jno
adc
pop
fidivl
pop
and
cmpsl
ret
leave
adc
sti
fwait
mov
testb
shl
dec
popf
popa
int3
popf
adc
in
dec
push
test
and
rcr
xor
sbb
movsb
arpl
ret
ret
fsub
movl
or
xor
ljmp
in
inc
sub
and
sti
popf
pop
inc
jp
jg
cli
repz
sub
and
inc
mov
sub
xor
jno
xor
mov
adc
xorb
sbb
ret
xor
jae
adc
fwait
stos
jb
enter
popf
or
jecxz
cmp
adc
subb
out
push
out
and
adc
jle
je
and
pop
cltd
test
mov
mov
jecxz
clc
lret
sbb
scas
jno
nop
or
xchg
push
ret
xor
shrl
lods
loop
cmpsb
test
sub
push
cmpl
push
in
mov
and
pushf
pop
aas
imul
cli
and
decb
inc
lock
and
and
push
pop
mov
sub
out
jbe
adc
mov
pop
pop
pop
test
testb
out
cmp
fdivs
cmc
push
mov
mov
aam
xchg
sarl
pop
pusha
pop
sub
add
xchg
jmp
mov
sub
mov
addl
sbb
mov
mul
rcrl
xchg
movsb
repnz
mov
cmp
ds
aad
cld
ret
scas
ljmp
jg
rorb
pushl
mov
sub
sbbl
ret
mov
jg
cmpsb
sub
pusha
enter
bound
mov
popa
in
dec
sbb
push
cmp
iret
mov
push
cmpsb
push
cmp
mov
rorl
lock
or
outsb
dec
adc
test
adc
cmp
xor
mov
adc
mov
xor
sub
gs
push
out
arpl
sbb
jnp
xor
mov
pop
xor
pop
das
cld
and
mov
inc
mov
xor
add
enter
and
int
ficoms
cmp
mov
in
xchg
dec
mov
enter
xchg
daa
push
out
or
popa
and
imul
int3
cwtl
das
clc
das
xor
inc
cmpsb
shll
xchg
fcmovnb
out
push
iret
or
sbb
add
roll
cmpsb
pushf
dec
mov
test
inc
adc
popf
les
lods
test
lock
jp
test
stos
sahf
sub
cmp
adc
or
jp
pop
sbbb
sahf
cmp
pop
hlt
repnz
sub
pop
divb
push
inc
inc
push
out
and
lods
incl
mov
sbb
pop
push
jecxz
cmp
push
subl
jbe
xor
jecxz
mov
cmp
and
pop
xchg
or
clc
cmp
fdivrl
or
xchg
lock
scas
jns
repz
aad
adc
aas
ds
xchg
jns
mov
xchg
dec
mov
mov
and
mov
mov
bnd
int
add
xchg
shrb
subb
mov
adc
push
adc
pop
std
xchg
je
lea
cs
fnstenv
add
mov
hlt
insb
ss
mov
lret
xor
pop
and
push
cwtl
test
push
ljmp
mov
mov
aad
inc
outsl
cmp
ja
cli
pop
test
pop
and
lods
nop
mov
mov
xchg
outsl
push
adc
stos
sbb
mov
punpckhbw
stos
data16
pop
sahf
outsb
ret
pop
sbb
dec
inc
or
jmp
js
fisubl
call
les
push
call
enter
add
mov
stos
inc
ret
out
add
mov
call
ds
mov
out
push
pop
xchg
push
stos
fistpl
cld
inc
xor
or
jge
clc
push
add
lods
imul
in
cmpsl
inc
add
mov
repz
lcall
xchg
xor
outsb
push
pop
test
in
pop
adc
out
fneni(8087
mov
orl
aad
sub
faddl
lret
mov
sub
dec
fwait
das
jns
or
mov
xchg
sub
out
rolb
popa
cld
lock
inc
shrb
and
xchg
rcr
repnz
test
mov
leave
call
jecxz
xor
sbb
pop
loop
dec
les
call
pop
enter
dec
pop
arpl
ret
lea
xor
aas
stc
push
xchg
loope
lret
ss
dec
xchg
mov
sbb
out
leave
pusha
xor
adc
lds
mov
jg
pop
rcll
loop,pt
xor
mov
add
jecxz
or
jg
call
fcompl
push
cmp
call
ja
test
mov
push
insb
scas
bound
mov
jle
cmp
cmp
insb
sub
outsl
lret
add
sbb
push
hlt
fwait
fwait
xor
rclb
popl
es
sub
add
lds
fidivrs
mov
pushf
cmpsl
js
out
mov
clc
loop
dec
outsb
imul
xor
leave
mov
mov
sbb
test
les
es
and
jbe
movsl
push
or
test
in
das
pop
pop
mov
xor
in
popf
bound
insl
sub
inc
lret
inc
jl
pushf
int
adc
rcl
inc
pop
flds
mov
aad
xor
or
hlt
fildll
adc
aad
test
or
jbe
vunpcklps
sbb
imul
js,pt
cwtl
enter
cmpsb
pop
clc
jecxz
lock
out
mov
ja
dec
mov
fsubrl
and
fists
clc
fcompl
inc
xchg
imul
int3
stos
call
lret
sarb
movsl
clc
adc
imul
pusha
adc
aas
jnp
dec
xchg
push
mov
sub
cwtl
inc
aad
loop
ljmp
sub
in
xor
loopne
scas
movsl
pop
mov
adc
out
mov
push
jmp
aam
fsubr
pop
jmp
xchg
push
dec
or
cwtl
lcall
jl
std
rdmsr
add
xlat
xchg
cmpsl
pop
xchg
mov
push
insl
jne
push
ret
push
add
int
lods
or
js
fbld
movsb
fstl
popa
fwait
fs
lret
cltd
je
adc
cmp
addr16
stos
icebp
in
out
xchg
dec
push
dec
push
addr16
jae
arpl
lods
mov
stos
std
insl
push
cmp
jne
pcmpeqd
xchg
pop
in
cmp
dec
and
mov
or
sub
dec
pusha
dec
sub
pop
sbb
jmp
aad
std
arpl
lods
xchg
cs
stos
mov
mov
xor
pop
inc
lahf
scas
mov
dec
xor
xor
sub
mov
sti
mov
inc
cld
daa
cld
test
push
sbb
jnp
clc
push
xor
xor
ret
xor
push
sbb
add
lea
cmp
pop
ret
xor
loop
call
push
shlb
add
fwait
adc
je
add
and
sbb
add
outsb
ljmp
dec
or
or
aaa
outsl
outsl
fcoml
dec
inc
das
jl
sbb
cltd
inc
jnp
fbstp
outsl
inc
mov
cld
retw
push
or
lock
es
add
cli
mov
mov
dec
scas
dec
ficomps
push
cmp
xchg
sbb
sub
dec
lods
sub
and
neg
inc
xlat
xchg
xor
xor
sbb
mov
inc
inc
xchg
fsubl
fisttpll
inc
xor
mov
adcl
sub
dec
cmp
push
int
cmp
jg
mov
std
inc
gs
push
mov
lcall
cmp
xlat
ret
mov
fisttpl
mov
jns
adc
sub
xlat
pop
add
mov
fists
sub
mov
ds
arpl
xor
lret
mov
push
shll
ja
xchg
inc
ss
xchg
mov
gs
shlb
mov
jg
ja
mov
sti
and
sarb
hlt
xor
jp
adc
cld
dec
sti
adc
fldl
cmpsl
jmp
lods
iret
scas
daa
loope
mov
jg
sub
xchg
shr
mov
sbb
outsl
aam
push
mov
xchg
push
mov
cmp
sbb
shll
rcrl
js
or
xchg
insb
mov
aad
cld
psllw
lret
mov
test
gs
cmpsl
fistps
jno
and
pushf
imul
gs
aad
xchg
mov
adc
cmp
sbb
movsb
movsb
stos
mov
or
jae
loop
cwtl
movsl
mov
sbb
xchg
mov
ds
insb
jp
xor
mull
cld
mov
sbb
scas
mov
pop
mov
or
addr16
sbb
lods
cmpsl
enter
popf
xorl
ret
sbb
sbbl
lods
and
pop
outsl
or
loop
negl
adc
fst
fidivs
pop
sub
pop
scas
add
adc
mov
mov
loopne
sub
jecxz
lods
cld
cmp
mov
mov
lock
jnp
jp
xchg
icebp
sub
es
jnp
mov
test
or
call
inc
sub
sbb
outsl
inc
cmp
mov
fmuls
fwait
outsb
mov
fcmove
or
mov
cmp
jmp
shrb
les
cs
or
sti
in
mov
add
pushf
jbe
aam
ret
nop
pop
pop
sbb
jnp
ss
leave
add
arpl
lock
mov
or
pop
movsl
mov
aam
leave
loopne
aam
cwtl
or
cmpsb
cwtl
mov
ljmp
call
push
stos
xchg
std
fnsave
hlt
iret
push
or
sub
mov
lock
jo
jae
mov
roll
add
repz
xor
test
subb
data16
fs
mov
insb
movsb
pop
scas
inc
cltd
aaa
outsb
xchg
dec
mov
sbbl
lret
cs
jmp
adc
mov
mov
pop
or
mov
shll
add
pop
sbb
ret
ret
sbb
cmp
fcmovne
daa
add
insb
arpl
jae
pop
inc
mov
inc
ljmp
scas
aas
ljmp
popf
fucomp
or
ret
pop
movsb
and
dec
push
enter
sahf
jnp
ljmp
pop
add
fistpl
add
out
int3
data16
cmpsl
sbb
je
mov
cmpsl
cmp
in
mov
insb
add
xchg
int3
sbb
out
cmp
aaa
xchg
jmp
mov
pop
fwait
popf
out
lock
pop
pop
fcompl
push
jecxz
xor
in
sub
int
ds
mov
or
arpl
xchg
lahf
les
mov
mov
xchg
pop
xchg
mov
mov
int3
pop
scas
lods
outsb
sbb
jbe
ljmp
nop
mov
lea
dec
xor
sahf
dec
sub
xor
out
mov
sbb
push
and
jns
or
cmp
add
in
xchg
xor
add
and
je
and
push
jno
jnp
or
and
iret
xor
adc
int
rorb
test
sub
cmp
sahf
insb
jae
mov
dec
mov
loop
sbb
gs
pop
cmpsb
pop
jne
sahf
bound
rolb
cli
push
xor
test
movsl
int
sbb
inc
movntq
test
lret
testl
jmp
sub
inc
roll
int
ret
lcall
sbb
cmc
lods
mov
adc
mov
ljmp
cwtl
and
test
int3
add
mov
push
movsl
ljmp
push
mov
mov
pop
pushf
cltd
jge
mov
push
fwait
mov
lock
fnstcw
aas
or
jbe
lcall
dec
addr16
cmp
lock
push
mov
push
inc
test
mov
out
mov
push
bnd
pop
enter
cli
icebp
sub
jno
je
jne,pt
jle
and
orb
es
lods
sar
or
cwtl
ret
dec
sbb
in
stc
movsl
or
push
int
cmp
int3
leave
lods
fcmovb
pop
sbb
dec
mov
gs
cs
lcall
out
xchg
mov
or
movsb
mov
jecxz
cvtps2pd
mov
in
add
or
dec
lret
out
xor
sbb
pushf
sahf
scas
cld
mov
push
jb
jae
push
sub
call
pop
test
pushw
mov
pop
dec
mov
or
outsb
jl
push
cmp
adc
dec
pop
ret
adc
xchg
lret
test
mov
cmc
fldl
imul
fdivrl
dec
or
lods
and
in
test
xchg
jg
jno
and
jne
movsl
lret
cld
in
cld
nop
xchg
and
ficoms
inc
lret
fldpi
push
cmpsl
and
pop
sub
movsb
js
cli
or
fwait
out
sub
pop
jmp
adc
jae
lcall
sub
xor
fcomps
or
or
cmpsb
aas
cwtl
or
pop
cli
fbstp
stos
rcrl
arpl
andb
mov
fadd
out
fcmovnu
inc
idiv
std
shr
das
or
xor
out
jo
cwtl
mov
mov
je
sub
push
push
push
test
xchg
jo
adc
subl
dec
dec
out
clc
inc
popf
test
pop
lcall
popa
push
or
inc
ljmp
lahf
nop
inc
lods
and
repz
popf
lods
cli
or
xchg
and
lret
inc
in
fstpl
sub
pop
lods
and
es
hlt
jg
add
or
jns
mov
lods
cmp
negl
and
in
push
fwait
mov
cld
and
sub
inc
cmp
xchg
subb
mov
mov
lret
push
xor
and
push
push
lock
mov
ret
movl
push
out
xchg
aad
add
out
inc
iret
movsb
sti
sub
xor
outsl
cmp
mov
xchg
sub
inc
mov
or
cwtl
jecxz
push
add
lock
imul
mov
fs
push
ja
sahf
inc
sub
mov
dec
push
sti
sbb
test
mov
fstps
in
js
adc
sub
pop
loopne
dec
negl
out
icebp
mov
mov
rcrl
dec
xor
xor
es
dec
mov
mov
aaa
mov
jo
jno
adc
cmpsl
adc
add
fcomip
stos
jne
test
js
leave
mov
lds
shrb
and
add
nop
mov
mov
aam
js
mov
mov
scas
adc
mov
add
mov
cwtl
mov
cs
adc
inc
pop
pop
ss
addr16
subl
mov
sub
adc
loopne
in
sbb
or
shrb
inc
jno
imul
popa
jge
mov
out
cli
clc
ss
addr16
cwtl
out
movsl
mov
sbbl
push
stos
sti
mov
lea
out
es
sub
mov
jo
das
pop
dec
and
sbb
bound
insb
lods
sbb
mov
cmp
pop
iret
dec
orl
jno
mov
ret
sti
add
mov
or
out
stos
mov
cmpsl
out
fcoml
popa
outsl
insb
mov
ret
jmp
lcall
in
fnstsw
aas
lret
xchg
mov
outsl
pop
test
pop
and
sbb
hlt
hlt
push
lock
ja
or
movsb
and
nop
sub
out
out
jmp
pushf
or
dec
jmp
lock
and
lret
cs
stos
mov
push
adc
xchg
mov
loope
mov
aaa
mov
inc
aam
jno
dec
and
and
in
and
and
aam
lret
loope
xchg
test
inc
inc
xchg
lahf
sub
popf
mov
outsb
leave
mov
int
mov
hlt
insb
rcll
imul
incb
dec
fildl
out
adc
jle
sbbl
mov
fistpll
pop
mov
mov
inc
sub
jb
mov
push
adc
cmp
fisubs
jecxz
test
dec
and
out
push
arpl
inc
xchg
add
inc
lds
xor
xchg
sub
xchg
mov
or
leave
dec
dec
or
mov
inc
outsb
sbb
sub
dec
test
cwtl
adc
hlt
loope
or
pop
xor
dec
es
movsl
ja
ret
and
loop
cltd
lds
pop
cmp
leave
repz
movsl
cltd
sbbb
mov
inc
and
mov
push
mov
jp
bound
addb
jnp
xor
jbe
stos
fnstcw
cmp
and
pusha
mov
call
icebp
and
lret
or
add
dec
jnp
js
cmp
out
test
xchg
movsl
in
shll
push
outsl
notl
pop
mov
add
call
fimuls
ss
lcall
adc
push
mov
xlat
xchg
jge
ret
lret
in
fbstp
ja
cmpsb
testl
xlat
add
pop
adc
mov
mov
mov
rcl
cmc
out
outsl
and
inc
cmp
jecxz
icebp
pop
jnp
sub
mov
aad
js
stos
and
cmp
xchg
lret
jne
or
lods
jno
bound
or
mov
cmp
sub
dec
loop
sub
sub
daa
push
adc
hlt
xchg
int3
data16
add
push
or
inc
adc
or
mov
xchg
pushf
dec
ss
pop
adc
inc
aam
push
xor
incl
shr
push
movsl
lret
push
xchg
or
push
cmp
mov
xor
mov
inc
int3
in
jge
ds
mov
rorl
ja
add
sbb
ss
cwtl
cmp
xchg
repnz
repnz
mov
ret
outsl
cmp
cmp
mov
or
jl
sub
leave
pop
lahf
mov
add
popf
cmpb
cmp
mov
cmp
add
and
outsb
stos
adc
or
add
mov
mov
test
push
subb
mov
scas
pop
stc
xor
pop
fisttpll
pop
lods
sub
pop
rolb
pop
cmp
push
popf
dec
xor
movsb
arpl
add
dec
fcompl
out
lret
xor
pop
into
test
or
mov
push
sbb
fdivrs
andb
aas
outsb
mov
inc
cmpsb
and
jnp
shrb
in
fbstp
adc
lods
fstps
clc
mov
pop
push
mov
imul
inc
xlat
gs
test
mov
push
sub
jne
arpl
cmp
decb
add
lods
jbe
lret
push
push
xchg
bound
pushf
fs
enter
jne
movsb
push
mov
push
mov
inc
xor
jns
xchg
jmp
jecxz
loope
push
sub
inc
sbb
fdivrl
icebp
pop
sub
dec
pop
stc
mov
lock
push
pop
pop
inc
push
lods
popa
mov
cs
cmpxchg
jnp
sub
sbb
jecxz
xchg
cltd
lds
filds
push
sub
sub
xor
jo
sahf
sbb
stc
mov
jae
pop
and
adc
mov
sbb
movsb
and
adc
xor
es
call
dec
inc
mov
pop
jle
adc
sub
sbb
adc
mov
jno
sub
inc
std
push
orl
lret
sub
xor
xchg
add
cmp
xchg
add
push
fisttps
dec
xchg
and
lret
lds
bound
jae
cmc
jae
sbb
das
inc
add
les
inc
dec
into
inc
mov
xchg
jge
aad
push
add
sub
inc
das
cmp
ret
push
push
test
sub
aad
insb
xchg
ja
ret
pop
aad
into
and
add
pusha
xor
or
call
mov
out
or
push
cwtl
mov
xlat
data16
xchg
mov
testl
outsl
push
mov
or
popf
mov
mov
popf
sub
flds
xor
jle
loop
dec
andl
fisubs
movsl
lret
std
push
cmp
xor
pop
fldl
xor
lock
adc
lahf
in
pop
icebp
mov
cmp
cmpsl
xchg
gs
jecxz
xchg
sbb
ja
and
mov
movsb
testb
jecxz
das
add
outsb
adc
popa
jecxz
arpl
sub
nop
gs
dec
add
pop
push
and
pop
inc
ss
jmp
sub
sub
xchg
xor
pop
fs
pop
out
jne
loop
cmp
xchg
mov
lret
mov
sub
jne
sbb
sbb
adc
fisttpll
xor
pop
pop
and
clc
jmp
mov
icebp
aas
insb
push
lock
add
cmp
rcll
imul
push
aaa
jnp
ss
lods
ss
imul
lds
out
and
fdivr
xchg
mull
sysret
loopne
fbld
push
dec
mov
test
popf
aam
mov
rol
jmp
cmp
ret
fmuls
lret
test
shlb
and
in
addr16
gs
cmp
xlat
sbb
std
hlt
les
xlat
mov
je
mov
adc
jmp
aas
jns
cmc
sub
jb
mov
cwtl
push
maskmovq
notl
add
xor
pop
in
or
data16
out
fstpt
jmp
mov
scas
add
and
dec
fwait
cmp
xor
push
subl
pop
lock
rorl
aad
mov
cmp
shlb
add
jp
imul
sub
sar
enter
fstpt
les
aas
mov
inc
into
xchg
dec
addb
ret
or
outsl
lret
sbb
stos
lods
repz
rorl
scas
jb
push
out
or
mov
mov
dec
cwtl
mov
lret
popf
fdivrs
dec
sarl
mov
cmpsb
repnz
pop
mov
xor
jge
sub
sbb
pop
stos
cli
mov
pop
inc
xchg
loopne
unpcklps
and
mov
addb
jo
hlt
push
ret
mov
mov
xor
stc
inc
shll
cmpsb
loop
dec
pop
ffree
jge
pusha
inc
mov
cmp
movntq
shlb
sbb
roll
jg
or
popa
and
or
iret
and
xchg
fwait
xchg
pop
adc
mov
sbb
imul
and
inc
fucomp
lahf
mul
stos
negl
cld
inc
inc
jmp
lret
sbb
inc
stos
mov
or
cmp
js
cmp
mov
enter
pop
fldenv
sub
fstps
dec
loope
push
pop
sub
adc
mov
shlb
xchg
int
pop
xchg
fistpll
mov
ja
hlt
cmp
push
xor
shll
test
mov
shrl
aaa
sbb
xchg
repz
push
mov
arpl
cmp
ds
sbb
fwait
rcrb
mov
and
clc
add
fnstcw
std
mov
jne
leave
in
xor
inc
inc
in
mov
arpl
bound
push
mov
int
rcll
hlt
imul
ficomps
outsl
ds
ficoms
pop
pop
push
sub
pop
in
mov
out
je
loop
into
in
mov
out
push
in
clc
mov
adc
xor
loope
and
daa
mov
mov
mov
dec
dec
pop
insb
pop
pop
mov
mov
std
mov
sbb
dec
les
mov
push
dec
fstpt
test
adc
jne
mov
ds
nop
fsincos
in
sti
jb
cli
sbb
jge
fisttpll
push
mov
test
lret
lret
ljmp
rdmsr
mov
call
push
and
mov
inc
imul
outsl
rol
repnz
outsl
add
jecxz
sbbl
mov
or
adc
imul
or
out
jnp
enter
push
jo
test
cmp
icebp
sub
pusha
jle
add
jbe
adc
mov
inc
clc
testb
push
pop
popa
popa
into
std
push
fisttpll
into
xchg
xor
fidivs
add
or
dec
mov
and
mov
stc
repnz
in
mov
ds
fidivrs
or
cmp
lods
iret
mov
rolb
scas
cmp
and
sbbl
pusha
iret
and
repz
lcall
and
xor
xchg
int3
in
iret
icebp
jae
insl
test
lahf
testl
stos
aad
in
stos
jge
aam
or
mov
insb
cmp
call
scas
icebp
and
xlat
adc
in
test
fnstenv
sbb
mov
jo
pop
adc
mov
fimull
pushf
add
iret
cld
sub
push
mov
lds
add
or
call
mov
into
xor
aaa
mov
inc
xorl
dec
out
cmp
movsb
bound
cmp
mov
into
data16
clc
xchg
add
frstor
jbe
adc
inc
testl
or
and
push
jle
je
xchg
lods
push
jb
dec
shll
mov
cmp
movsb
xchg
shlb
scas
jmp
aam
int
js
cmp
or
push
cmc
mov
mov
and
outsb
mov
out
int
pop
pop
xchg
dec
call
jo,pn
repz
sbb
pop
xor
or
push
jmp
repnz
and
pop
jecxz
mov
aam
xor
popa
les
xor
fcomps
push
sbb
or
add
sbb
int3
xchg
pop
pop
lret
movsl
pop
movsb
sub
xchg
pop
pusha
cmp
sbb
ror
js
fwait
and
pop
sti
cwtl
insl
cmp
popf
sbb
jecxz
sbbl
pop
fisubrl
loopne
push
out
dec
inc
cwtl
cltd
popa
push
push
pop
adc
out
lret
outsl
adc
mov
adcl
jmp
repz
mov
mov
loope
and
xor
sbb
insl
ss
in
xor
dec
add
scas
sbb
xchg
xchg
cmp
or
xor
out
xor
fildll
je
inc
cmc
adc
mov
dec
insl
and
sub
shlb
mov
into
inc
rol
fmuls
inc
imull
adc
pop
xchg
jp
out
insl
push
jns
test
mov
fidivrs
adc
ljmp
jmp
xchg
push
or
mov
pushl
lods
clc
ror
mov
loope
popf
jmp
push
outsb
daa
and
adc
mov
outsb
mov
call
movsl
cmpsb
dec
adc
jb
jl
pop
movsb
in
adc
ror
inc
push
sahf
xchg
ss
mov
and
xorb
jp
xlat
out
sub
mov
sbb
nop
mov
fwait
xchg
mov
xor
movsl
adc
cmp
enter
mov
movsb
inc
divl
pop
dec
adc
in
sub
ror
nop
addr16
in
push
xchg
push
and
je
push
xor
mov
adc
mov
sub
daa
adc
mov
dec
imul
cs
or
inc
ds
inc
xor
arpl
ss
mov
or
xor
iret
mov
pop
sub
lds
or
int3
test
pop
in
mov
repz
dec
leave
lret
jbe
push
data16
mov
sbb
stos
insl
or
inc
xchg
lcall
sub
scas
cmp
mov
sub
fwait
sub
inc
push
xor
imul
push
aaa
loop
test
fwait
mov
inc
outsl
or
xchg
pop
fcoms
test
pushf
and
lock
jle
aaa
das
scas
jb
shlb
jl
test
xor
sub
add
ljmp
cmpsl
jbe
inc
lea
bound
lcall
sarl
or
out
and
ja
push
lock
cmp
mov
inc
xchg
gs
jb
enter
popf
cmc
in
jg
enter
scas
xor
and
xchg
das
jbe
push
mov
inc
cmp
adc
int
and
jl
lahf
or
pop
movsb
and
xor
fs
dec
cld
movsl
xchg
and
pop
daa
mov
push
loopne
sbb
movb
and
pop
mov
jae
int3
adcl
dec
scas
sbb
lods
das
rorb
out
rorl
or
push
sbb
rol
cmpsw
sbb
cmp
in
subl
fadd
cld
sbb
mov
mov
push
mov
shll
cmp
in
aam
dec
sub
cld
popa
inc
push
pop
jecxz
fstl
inc
jmp
dec
cmc
mov
aam
in
or
jle
dec
je
jp
rclb
movb
and
xor
dec
jbe
pop
cwtl
push
call
xchg
aad
rcrl
mov
jns
inc
test
inc
in
mov
jbe
add
sar
int
mov
call
nop
or
adc
fcoml
daa
jg
push
and
ja
es
and
cmp
lcall
lcall
out
ret
addr16
cmpsb
daa
mov
or
push
test
es
insb
fcmovu
nop
sub
movsl
push
sti
mov
ss
xor
loopne
pusha
pop
sub
repz
mov
mov
in
mov
pop
int3
cmc
add
jbe
push
sub
addr16
mov
add
clc
dec
push
push
jnp
shll
lret
or
sub
cltd
cmp
push
in
out
pop
adc
sub
aad
inc
push
scas
fnsave
scas
stc
in
leave
cmpsl
insl
icebp
jg
push
fidivs
fisubl
cmp
movsl
sbb
pop
mov
jne
or
jmp
adcb
out
mov
mov
cld
hlt
jl
dec
adc
andb
insb
xor
into
test
scas
insl
out
fcompl
repz
pushf
push
popf
jge
sbb
push
clc
out
or
inc
fcoml
fmull
js
sub
pop
pop
push
je
push
popf
push
inc
iret
inc
addb
lret
dec
std
cmc
add
scas
mov
std
fimuls
mov
xchg
adc
aaa
sbb
in
popa
ret
or
lds
inc
jge
jg
stos
inc
or
or
push
out
ljmp
mov
imul
out
mov
push
test
or
xchg
clc
adc
ljmp
push
filds
cmc
nop
adc
cmp
aam
les
mov
mov
fs
lahf
and
fimuls
scas
and
push
lahf
or
pop
test
inc
lds
pop
and
add
lret
xchg
xor
mov
jecxz
mov
mov
loope
psubq
fwait
insb
nop
fs
insb
fs
xor
jmp
mov
sbb
adc
test
in
pop
test
icebp
sub
pop
jle
jnp
inc
adc
adc
jmp
xlat
pop
sub
inc
cwtl
fisttpll
cmp
add
daa
mov
sti
dec
inc
out
iret
mov
cwtl
or
and
pushf
add
mov
mov
xchg
xchg
daa
dec
out
xor
cltd
mov
cli
scas
js
inc
js
mov
push
leave
xlat
push
sbb
add
rol
aaa
xlat
dec
cmp
pop
adc
aaa
mov
sbb
pop
negl
pop
in
xchg
push
sub
cli
mov
das
test
movsl
add
pop
aas
test
sub
dec
sub
jle
testb
int
test
lods
stos
dec
mov
jp
fsubrs
xor
cltd
fildl
mov
pusha
clc
mov
cmc
mov
ds
loop
mov
ret
fcmove
dec
sbb
jge
xor
adc
cwtl
repz
cld
int3
inc
mov
or
les
and
out
mov
fs
and
repz
sbb
and
hlt
fwait
cli
popf
lret
sbb
push
mov
xchg
call
mov
or
scas
and
push
aaa
mov
jno
dec
dec
pop
loop
test
mov
std
test
jo
xchg
inc
fwait
outsl
adcl
cmp
movsb
xchg
mov
mov
dec
push
jge
dec
sbb
or
add
popa
jnp
mov
push
inc
xchg
push
test
mov
stos
push
sub
mov
sub
inc
outsl
jns
push
in
inc
pop
or
stos
sbb
pop
fwait
call
xor
mov
mov
call
or
test
shlb
cmpsl
subb
outsl
fisubs
fs
mov
and
add
mov
mov
fdivl
lret
mov
mov
lcall
xchg
ret
add
xchg
mov
addr16
insb
mov
repnz
cmc
lret
or
stc
scas
pop
inc
imul
bound
lds
mov
cmp
or
cmpsb
call
sbb
mov
out
and
out
xchg
in
push
or
mov
jno
adc
clc
stos
in
push
dec
loope
jge
jne
lds
push
and
xchg
cmp
ds
rolb
add
pop
dec
xchg
adc
add
cmp
movsb
pop
cmpsb
out
arpl
out
pop
pop
pusha
xchg
jns
js
sarl
mov
sbb
inc
arpl
cmpsl
fisubl
shrb
jge
mov
mov
insl
cmp
adc
xor
data16
in
add
inc
sub
loopne
and
and
pop
mov
or
or
mov
out
xchg
mov
daa
sub
leave
or
mov
sbb
push
cmp
cmpsb
xor
add
leave
mov
iret
cmpsb
xchg
lahf
pop
mov
cmp
lret
push
sbb
push
fistps
lcall
in
pop
roll
add
jbe
inc
or
adc
jb
adc
pop
mov
xchg
jne
les
xchg
xchg
and
sub
push
jg
imul
rcr
movsb
xchg
mov
fldt
imull
jle
lds
sbbl
fcoml
es
adc
and
addr16
xchg
sub
or
into
sub
inc
fs
shll
sahf
popf
mov
push
push
jmp
push
nop
sbb
or
mov
xor
das
inc
pop
jno
in
mov
js
enter
pushf
adc
xchg
loopne
rcll
fcoms
xchg
xor
mov
sti
dec
xchg
rcl
cld
popa
mov
mov
and
int3
repnz
mov
sbb
lods
mov
loope
xlat
sbbb
inc
xchg
lock
leave
inc
lods
inc
pop
mov
pop
or
push
call
jns
or
daa
push
sar
mov
adc
stos
call
jp
mov
cltd
push
jb
hlt
fucomp
scas
out
dec
fsubs
decl
cltd
xchg
or
jno
lds
gs
pushf
mov
lcall
inc
mov
ljmp
iret
xchg
xchg
mov
push
cmp
jecxz
pop
rorb
dec
shlb
es
in
cmp
sbb
adc
fsts
xor
sbb
sbb
push
cld
push
xchg
lods
ds
xchg
mov
out
push
imul
cmpsb
scas
js
cld
pop
inc
add
cmp
jb
lock
sub
cmp
subl
rclb
mov
pushf
rcrl
imul
jnp
jge
imul
xlat
or
mov
cmp
shlb
sub
addr16
les
test
jb
js
test
lds
sbb
add
scas
clc
data16
cmp
push
rcr
push
and
cmc
test
xor
add
pop
pop
or
cltd
call
xlat
fimuls
xchg
into
sahf
adc
fucom
push
stos
sub
push
scas
in
jge
test
popf
dec
sub
jecxz
lock
jo
loop
out
add
ret
mov
je
enter
pop
adc
outsb
pop
mov
iret
pushf
lods
xor
sub
lods
adc
out
jb
mov
mov
add
xchg
aad
mov
loop
adc
add
sbb
movsb
mov
pop
stos
jnp
les
pop
int
sub
loopne
push
cmp
jae
pop
mov
arpl
xchg
repz
cmp
test
mov
mov
stc
push
cmpsb
les
rcll
aam
sarb
cwtl
push
loop
add
sub
and
ds
or
bound
sbb
out
in
rcrl
in
stc
mov
insb
xor
jbe
pushf
aad
push
add
lcall
xchg
rcr
js
test
mov
ret
insb
jns
ret
es
adc
js
enter
popf
into
mov
dec
mov
stc
sbb
fcmovnb
dec
cmp
sbb
addb
fldenv
scas
shrl
push
aas
pop
mov
mov
mov
mov
lret
pmaxsw
sbb
mov
addr16
clc
adc
mov
outsb
pop
cmpsl
adc
sti
std
mov
stos
cmp
sub
adcb
imul
lahf
ss
imul
inc
in
incl
dec
cmp
sbb
pop
js
pop
mov
stc
cmp
mov
mov
cmp
es
cmp
push
sahf
out
sahf
mov
inc
jno
ljmp
mov
and
data16
in
jle
out
ljmp
in
pop
cltd
leave
inc
xchg
icebp
mov
movsb
pop
sub
gs
stos
cli
sub
xor
mov
cs
xchg
cmc
pop
lock
arpl
fistps
mov
pop
gs
sbb
sub
sbb
shl
das
sub
ret
pop
or
mov
gs
add
jg
negb
cmp
jg
repz
fisttpl
jo
cmc
mov
mov
cmp
or
fisubs
adc
call
lea
xor
rcll
sub
xchg
dec
xchg
jmp
sbb
enter
lods
into
cli
fwait
xchg
cmpsl
pop
pushf
push
addr16
lahf
mov
testb
xor
adc
std
push
cmpsl
enter
add
cmp
loope
and
fsubp
xchg
mov
roll
pop
push
fstl
push
out
adc
imul
aas
push
aam
or
mov
stos
stc
ja
mov
mov
in
sub
pop
popa
sahf
cmp
and
xchg
inc
mov
pushf
je
test
xor
mov
fs
cmp
dec
rolb
cltd
pop
mov
mov
dec
rcll
xorl
sbb
ljmp
cli
push
xchg
std
sub
fdivrs
dec
cmp
and
out
dec
stc
push
outsb
lock
and
mov
repz
ret
pop
test
mov
fsubl
pop
sbb
jb
lcall
mov
addr16
fidivrl
fs
push
jns
movl
xor
mov
outsl
add
lcall
inc
cli
test
adc
xor
sbb
mov
pop
testb
mov
aas
pop
cld
pop
cmp
xchg
mov
inc
push
xchg
es
es
jmp
pusha
roll
testl
cmp
sub
mov
aaa
in
sbb
sarl
sbb
sub
repz
rorl
scas
fldcw
sbb
and
negb
or
sub
jae
in
scas
out
loop
mov
mov
lods
lods
nop
sahf
fmull
mov
out
adcb
jns
add
push
xor
sbb
cmp
fnstcw
dec
or
mov
aam
in
or
mov
pop
mov
mov
add
repnz
outsb
aaa
adc
push
adc
mov
jne
inc
repz
pop
mov
or
jl
ror
mov
popa
lds
icebp
adc
push
sub
divl
in
add
adc
dec
mov
push
add
mov
mov
insl
mov
daa
jnp
ss
jp
call
xchg
in
rcl
loop
jl
push
out
aas
mov
fbld
push
popl
mov
cwtl
les
fs
shll
es
sub
dec
loopne
jg
or
push
and
ret
ja
in
mov
fucomi
cmp
jbe
es
and
push
mov
cld
jno
cmp
push
callw
out
dec
mov
jg
loope
movsl
les
mov
inc
aam
sbb
cmpsl
clc
cmp
jmp
adc
lret
push
shlb
mov
xor
xchg
and
test
lds
mov
popa
shlb
int
or
inc
cmpsb
xchg
cmp
shl
arpl
pop
cmp
fs
xchg
test
sbb
xchg
call
lds
push
out
xlat
fldt
lcall
pushf
cmp
pushf
ljmp
fs
push
es
popf
jmp
pop
hlt
repz
mov
lea
mov
psraw
xor
scas
dec
mov
xchg
mov
jnp
mov
daa
push
outsl
ds
ja
loop
inc
cwtl
xchg
add
add
sti
lods
loope
lret
pop
fwait
es
jbe
pop
sub
add
mov
cs
ret
mov
and
cltd
xchg
mov
mov
inc
enter
stos
mov
xor
or
hlt
scas
int
int3
stos
gs
sbb
xlat
cmp
jnp
sti
lods
sub
stc
pop
mov
adcb
mov
mov
cmp
cwtl
dec
icebp
pop
xchg
mov
xlat
mov
mov
nop
imull
cmp
cmp
jle
mov
stos
scas
rolb
mov
out
fisubl
cld
xchg
jnp
incl
pop
jmp
iret
je
mov
data16
hlt
and
jle
or
data16
stc
xchg
dec
mov
jp
out
cmpsb
movsb
or
sbb
out
cltd
pop
xchg
flds
cmp
stos
push
dec
or
aas
cld
lock
mov
sbb
ja
dec
mov
fidivs
test
daa
pop
call
xor
pushf
push
pop
sti
pop
scas
lea
pushf
jle
adc
lods
jmp
push
mov
xchg
in
popa
jl
fwait
enter
cmp
bound
jno
xchg
int3
mov
inc
pop
push
mov
add
adc
push
mov
fldt
bound
lahf
sbb
sbb
inc
mov
pop
mov
icebp
jl
mulb
or
mov
adc
int
cld
xor
pushw
insl
sbb
add
adc
loopne
mov
jb
cli
mov
push
in
mov
inc
nop
or
push
test
pop
xor
lock
sbb
scas
insb
stc
clc
mov
push
and
aas
dec
mov
pusha
sub
movsl
add
in
cld
sbb
cmpsl
push
jae
mov
adc
imul
push
cmpsb
adc
insl
mov
push
push
orl
push
cmc
test
mov
cmp
add
loopne
cmp
mov
xor
add
cli
imul
aas
insl
cmp
add
lahf
das
sub
and
outsb
pop
repz
daa
sbb
dec
xor
sarl
shrb
mov
sbb
and
dec
ret
adc
xlat
outsl
jbe
jo
int3
stc
scas
fldt
pop
sbb
sub
and
push
hlt
clc
fmuls
scas
pop
iret
lcall
fdivrs
pop
int3
out
pop
mov
inc
loop
aaa
dec
mov
xor
mov
gs
and
ss
add
out
test
sahf
ss
jne
inc
out
roll
sbb
nop
lea
sub
xor
jns
jl,pn
lds
pop
push
mov
fstpl
pop
pop
mov
pusha
sbb
testb
push
mov
addb
sti
rcr
mov
div
pushf
dec
jno
inc
sbb
pop
mov
stos
dec
cmpsl
cli
stc
cli
mov
sub
jne
test
jne
mov
fstl
out
jo
data16
mov
mov
jbe
adc
repz
in
jp
sbb
movsb
in
xor
push
mov
stc
xorl
movsl
jle
jg
lret
rolb
xorb
jnp
mov
xchg
test
in
shrb
xchg
mov
fistpl
test
std
push
xor
dec
add
sti
mov
imul
inc
insb
dec
lds
test
xchg
push
out
mov
inc
rolb
aam
cmp
cmp
pop
dec
lock
or
mov
ja
mov
mov
xor
sub
jno
mul
and
add
sbb
lods
sub
dec
mov
mov
fstps
adc
int3
fsubl
pop
int3
xor
clc
jge
mov
lods
imul
shrb
cmp
testb
cltd
fsubrl
mov
cmc
aaa
rcll
add
push
cs
popa
mov
jp
pop
mov
fcomi
je
mov
rcrl
xor
stos
cmpsb
dec
pop
lds
in
push
popf
cmp
fidivrl
mov
jp
xchg
or
cmp
scas
insl
daa
out
jno
and
dec
sahf
inc
push
mov
js
cmp
sahf
mov
jge
push
inc
enter
sub
dec
cmpb
adc
mov
js
aad
icebp
push
and
stos
lods
mov
jns
inc
je
xchg
or
scas
mov
push
jo
fwait
push
loope
data16
xchg
pop
fs
cmp
incb
adc
pusha
jns
das
adc
cmpsb
and
hlt
mov
cmp
out
sub
pop
nop
jg
dec
adc
in
sbbb
pop
pop
mov
add
stos
jp
imul
add
cmc
scas
add
test
dec
jbe
call
mov
pop
cmp
xchg
dec
pop
enter
fildll
divl
iret
repnz
out
xor
jbe
pop
xor
xor
inc
fdivs
subb
push
and
mov
scas
push
and
aad
mov
xor
and
aas
icebp
fiaddl
mov
push
mov
mov
rcll
jg
clc
hlt
repnz
test
dec
scas
das
push
pop
sub
jecxz
jbe
push
repnz
mov
test
or
jle
push
call
mov
or
lahf
lcall
sbb
sub
adc
dec
leave
imul
sarb
xor
out
mov
xlat
aaa
mulb
xlat
adc
lods
push
mov
insb
shl
in
shl
scas
jge
addr16
dec
je
shlb
mov
mov
jl
and
bnd
inc
sub
cmp
push
inc
sub
mov
clc
mov
push
jecxz
xchg
xchg
daa
rcrb
lods
cmp
ja
cmpsb
cli
cs
jnp
test
xchg
cmpsb
test
out
pushf
cmp
and
add
out
aad
lahf
inc
mov
popf
ja
xchg
mov
push
shrb
je
into
inc
xchg
jae
repz
xor
dec
leave
sbbl
xchg
call
rcrl
shrl
or
dec
add
mov
pop
mov
aas
inc
mov
and
pop
or
mov
loopne
dec
in
dec
sub
iret
or
add
mov
add
pop
pcmpgtb
xchg
test
int3
and
enter
lds
mov
outsb
ficoms
test
lea
xchg
aaa
repnz
popf
inc
jl
movsb
popf
push
in
jl
adc
mov
jecxz
adcb
push
add
push
cmp
inc
shll
lret
ss
sahf
pusha
pop
insl
push
xor
pop
inc
aam
jmp
inc
jg
mov
mov
mov
rcr
mov
sbb
hlt
push
xchg
jge
jb
push
aaa
repnz
mov
inc
ja
jae
repnz
pop
xor
pop
ret
movsb
decl
enter
xor
fildll
push
aad
jg
sub
pop
push
cld
sub
lods
lds
xor
mov
xor
cwtl
cmp
mov
data16
arpl
sbb
push
sbb
hlt
xor
jg
pop
ljmp
and
xchg
inc
mov
mov
mov
cmpsl
push
repnz
and
cmp
mov
jp
mov
js
outsb
xor
icebp
mov
outsb
mov
and
adc
lods
stos
test
data16
mov
xor
dec
xchg
or
sbb
fcoms
out
imul
lret
xor
add
leave
test
movsb
aaa
xchg
add
sti
cmpl
jb
jne
push
insl
pop
jp
lret
loopne
add
inc
mov
lea
das
movsb
adc
jns
pushf
mov
clc
bound
aaa
lret
sbb
push
out
sub
push
fsub
stos
pop
clc
movsb
mov
mov
jnp
stc
jbe
dec
xchg
test
mov
dec
adc
cmpl
cmp
mov
lea
pop
fxch
loop
pop
mov
xchg
mov
lods
aas
add
mov
cs
or
rolb
adc
jo
add
adc
and
cmc
jns
jle
fdivrp
mov
lcall
les
push
fistpl
mov
jnp
jns
scas
dec
test
xchg
rcr
or
insl
loop
loop
jno
imul
push
pop
jp
popf
dec
sbb
hlt
pop
inc
adc
lcall
stc
xchg
daa
mov
cltd
xor
push
pop
in
rcll
aas
clc
pop
adc
xchg
data16
arpl
pop
aaa
xchg
dec
testb
pop
setle
iret
xchg
and
lock
stos
jle
xchg
add
hlt
shrb
dec
xchg
jmp
mov
dec
shl
jecxz
mov
sbb
and
pop
and
lods
inc
leave
cmp
jns
xorl
push
cmp
shlb
xchg
push
test
mov
cmc
add
clc
jmp
ret
pop
and
test
out
in
daa
xchg
test
sbb
jle
out
jo
ficompl
xor
pop
das
test
cwtl
and
dec
aam
out
nop
dec
sub
ret
xchg
fdivs
mov
fisubs
scas
push
out
mov
lods
mov
out
gs
mov
pop
cli
mov
hlt
out
sbb
ljmp
iret
sub
xchg
aas
mov
iret
cs
push
or
fnstcw
stc
mov
mov
out
xchg
daa
push
push
repz
xchg
mov
popf
je
mov
nop
out
daa
push
xchg
pop
pop
mov
mov
inc
inc
jne
and
and
jb
repnz
aam
daa
lahf
pushf
data16
jmp
das
jmp
xor
arpl
cli
test
cwtl
lea
cs
xchg
cmpsb
cmp
mov
int
fldcw
xor
aam
sti
movsl
iret
pop
pusha
fsts
outsb
lahf
ljmp
adc
inc
push
in
outsl
push
push
cmc
push
pop
push
cmp
dec
or
fbstp
jecxz
cmp
or
leave
cld
add
xchg
pushf
cld
cmc
xor
mov
pavgw
lea
push
and
mov
arpl
mov
add
mov
inc
in
pop
mov
sub
mov
addr16
fdivl
rclb
push
sarb
inc
cmp
data16
pop
dec
data16
pop
and
jb
arpl
lock
jo
iret
and
imul
negb
pushl
xchg
insl
incl
jp
cmpsl
jno
jbe
pop
add
pop
icebp
dec
paddusw
dec
mov
mov
scas
add
mov
gs
test
jne
and
sub
mov
fndisi(8087
pop
mov
cmpsl
ljmp
push
mov
aam
adc
aam
push
push
xchg
call
jno
cmp
jmp
repnz
add
adcl
mov
ljmp
push
mov
dec
xor
icebp
lea
leave
nop
ror
xchg
jno
add
rorl
push
insb
test
cmc
fsubrs
rorl
gs
dec
or
cmpsb
cltd
lret
out
cmp
push
cwtl
lock
enter
lock
daa
aad
shrl
xor
fs
add
mov
aad
in
decb
sub
cmp
add
dec
les
xchg
jno
insb
mov
data16
adcb
sbb
imul
pop
mov
enter
push
mov
inc
sbb
insl
sahf
popf
pop
jmp
and
sbb
pop
out
popa
mov
and
dec
mov
push
fistpll
in
mov
out
hlt
lods
dec
jecxz
loope
cmpsb
cmp
les
hlt
dec
out
xor
movsb
test
mov
cli
xor
mov
sub
mov
jg
xor
mov
clc
push
add
xchg
pop
xchg
xchg
or
sbb
dec
in
cltd
mov
ret
sarl
xchg
adc
inc
mov
pop
insb
data16
arpl
cmp
add
or
je
xlat
jg
pop
push
xor
pop
outsl
cmpsl
push
add
jmp
pushf
mov
outsb
out
dec
push
adc
std
les
and
into
xchg
pop
push
pop
mov
test
test
shrl
addr16
jg
insb
stc
lods
lods
push
jno
shll
mov
sbb
push
jecxz
es
jmp
dec
lods
mov
mov
push
insb
push
mov
mov
sahf
movsb
pop
insl
cli
fdivs
into
test
rcl
mov
ds
dec
push
fsubs
shrd
leave
in
into
jae
daa
mov
cwtl
adc
lods
add
xchg
cli
addb
loop
cmp
or
push
testb
inc
inc
lods
test
mov
out
mov
add
cmp
mov
clc
enter
dec
cmpsl
pop
shrb
push
xchg
jecxz
cs
push
jle
pop
xchg
dec
cli
cs
bound
jo
call
iret
push
sbb
dec
push
lss
outsl
mov
push
push
loop
push
sub
pop
or
push
push
cmpl
inc
jbe
bound
clc
stos
cmp
cmp
stc
sbb
push
jmp
pop
cltd
xor
adc
xchg
cld
idivb
dec
push
mov
ljmp
mov
cmp
jge
shrl
push
pop
jns
cmp
enter
push
lock
dec
cmp
jae
orl
shrb
int3
sub
cltd
dec
mov
aam
xchg
fidivs
pop
or
dec
cmc
movsl
push
shrl
aam
inc
xchg
cs
test
fstl
aaa
adc
jl
mov
inc
add
xlat
sub
mov
popl
mov
fistl
ja
stos
inc
pop
std
sahf
pop
inc
fmul
push
mov
push
cltd
mov
loopne
push
hlt
lock
shrb
in
cmp
lea
andl
jno
push
loop
aad
in
aaa
lds
loop
mov
push
lock
mov
mov
ret
cmp
sahf
insl
or
insb
icebp
sub
xorb
lret
inc
push
inc
jecxz
lahf
lods
jno
jno
inc
xor
mov
mov
in
sar
popf
jecxz
jge
iret
popa
push
fadds
je
data16
sbb
fs
or
cld
add
and
push
add
mov
out
pushf
mov
jle
adc
adc
lret
cs
lret
stos
ljmp
lods
push
jne
sbb
int
jb
push
test
add
adc
cmpsl
jge
sub
mov
out
push
incl
cs
stos
test
xor
push
or
lahf
dec
scas
cmpsl
cwtl
cmp
pop
fwait
das
lahf
sti
in
test
and
cmp
pop
inc
dec
add
and
arpl
dec
push
cmp
aaa
mov
int
mov
mov
lea
lret
mov
out
mov
les
pop
mov
into
mov
je
cwtl
pop
xchg
sbb
loopne
xor
cmpsb
pop
push
pusha
stos
pop
jp
xchg
ds
xor
leave
movsb
inc
mov
cmpsl
loope
cmpsb
and
loope
pop
std
mov
sbb
xor
cmpsb
push
test
mov
gs
das
or
shrl
xor
fists
jmp
sub
cmp
std
lods
mov
das
sbb
jae
dec
mov
and
or
cmpsl
inc
rcrl
jns
aad
leave
jp
inc
inc
inc
repnz
sub
cltd
fwait
sub
sbb
or
bound
nop
mov
xor
js
fbld
jmp
inc
call
mov
std
xor
jg
test
int
or
inc
cmc
movsb
mov
sub
pop
or
and
jg
jp
jb
imulb
mov
sub
fsubrl
scas
push
adc
gs
xor
loopne
xor
cmpsb
xchg
pop
pop
fs
mov
mov
outsl
testl
out
pop
xlat
stos
jp
stos
inc
cltd
jp
mov
aas
out
adc
mov
cmp
shlb
or
insb
lret
mov
adc
ljmp
jmp
test
les
sahf
rorb
into
mov
mov
icebp
cld
inc
mov
enter
fsubrl
add
sub
adc
mov
xchg
or
jle
mov
scas
into
movsb
insb
adc
pop
add
inc
xlat
adc
push
stc
dec
arpl
xchg
fwait
xchg
xchg
or
hlt
pushf
sub
cltd
ljmp
lds
mov
filds
lret
insl
push
out
inc
mov
dec
pop
sub
repnz
xchg
insl
and
or
pop
mov
jmp
cmp
push
adc
cli
jecxz
movsl
mov
inc
aaa
adc
jl
or
shl
fstpt
ficompl
call
or
rcrl
mov
pusha
fsubrl
sbb
mov
xchg
push
testb
hlt
movl
ficoml
adc
cltd
xchg
scas
cwtl
or
inc
outsb
popa
je
pushf
mov
dec
add
or
lock
cwtl
int
lahf
adc
jge
lret
fwait
icebp
out
lcall
sbb
pop
mov
rclb
leave
xor
loopne
push
lea
adc
xchg
mov
dec
enter
dec
dec
clc
out
adc
xchg
jns
dec
cmc
sbb
ror
jno
in
jne
andb
mov
jne
and
mov
fucomip
loope
cmp
negb
lds
clc
ljmp
mov
divl
call
aaa
popa
mov
out
loop
ja
push
in
shrb
bound
lock
je
sub
xchg
arpl
loopne
sbb
gs
arpl
mov
jge
enter
mov
cld
jbe
outsb
add
jbe
dec
dec
pop
push
popa
cmp
fcomps
movsl
sbbl
movsb
sub
xchg
movsl
clc
sbb
cmp
stos
imul
add
fnsave
mov
ret
gs
inc
pop
mov
cmp
test
xchg
push
jne
cmp
sbb
sbb
inc
add
and
stos
lock
sub
pop
adc
jne
shll
loope
iret
sti
ror
push
jle
adc
stc
sub
xchg
int
je
mov
enter
xchg
xchg
cmp
cmc
jge
sub
jnp
dec
add
dec
mov
sub
dec
insl
push
test
mov
loop
dec
mov
in
push
sub
mov
xacquire
pop
idivl
push
xchg
loop
dec
loop
sbb
lods
mov
bound
cmp
imul
dec
icebp
in
xchg
mov
or
icebp
cmc
test
xor
out
in
adc
xchg
jmp
ret
push
popf
scas
xchg
enter
imul
loop
ss
inc
cmp
push
jmp
jo
insb
scas
fimuls
lea
mov
cltd
sbb
test
stos
adc
add
push
scas
sub
mov
div
int
pop
cmp
mov
dec
in
pusha
ficomps
sahf
orb
jmp
dec
inc
pop
movsb
js
mov
adc
fadds
call
leave
push
add
jmp
sbb
cmpsb
pop
sti
mov
shlb
xor
mov
pop
jo
lret
and
mov
hlt
or
in
js
xor
lods
xor
push
sbb
fwait
sub
lock
cmp
clc
xchg
addl
push
mov
pop
js
lock
icebp
push
sbb
pop
aad
cmc
push
iret
sub
mov
pop
or
sti
lcall
andb
push
fidivl
mov
icebp
and
xchg
dec
or
stc
out
mov
rolb
sub
decb
out
mov
jns
mov
popf
dec
mov
mov
push
leave
cmp
push
mov
sbb
add
vrcpps
push
int
sbb
mov
into
stc
cmp
dec
call
xchg
xchg
jne
jmp
push
mov
mov
aas
aam
cmp
stc
jb
scas
jno
pop
jge
std
jle
sub
test
cmp
mul
sub
repz
mov
cld
aas
adcb
scas
shrl
xchg
xchg
mov
sbb
mov
mov
push
test
movsb
pop
add
decl
shrl
sahf
push
dec
movsl
mov
jge
lods
rcl
push
mov
addb
stos
cmp
lahf
dec
and
ret
popa
je
add
jle
je
vunpckhps
push
stos
xlat
inc
adc
fisubs
cmp
sbb
test
cmp
mov
or
adc
mov
popf
insb
enter
js
mov
repnz
dec
cmc
in
dec
mov
aad
mov
inc
xchg
pop
pop
push
push
leave
inc
and
mov
or
out
xorb
lret
shll
fiadds
lahf
xor
test
lea
jg
push
mov
clc
imul
cmp
xor
adcb
jmp
in
lea
int
movl
movsl
sbb
sbb
mov
das
insl
fnsave
imul
pusha
sbb
cmp
push
aaa
cmp
shrl
pop
or
imul
gs
jne
scas
jns
push
cld
fcoml
add
xchg
mov
push
and
mov
inc
pop
fisubrs
push
mov
jb
mov
loope
push
cmp
mov
mov
jno
push
addr16
xchg
loopne
jmp
xchg
arpl
fldt
push
mov
int
jae
cmp
or
or
scas
not
adc
mov
jbe
add
and
dec
fdiv
sbbb
sub
sbb
push
cmp
cld
out
or
sahf
mov
push
ljmp
stos
push
pop
pop
inc
in
in
gs
shlb
jl
cmp
push
dec
xorb
cmc
and
nop
jo
xchg
nop
fsubp
adc
lods
je
shlb
or
ljmp
adc
push
inc
je
cs
or
cmc
movsb
ljmp
xchg
outsb
nop
testl
addr16
xchg
xchg
adc
arpl
and
xchg
inc
jp
xchg
or
stc
push
push
rcrl
iret
inc
or
cmp
bound
in
mov
bound
pop
call
js
inc
movsb
xlat
in
fs
mov
sub
leave
repnz
sti
lods
adc
aam
out
pop
pop
adc
xor
pop
scas
jmp
pop
push
push
xchg
lcall
fmul
das
push
out
imul
pop
cmp
icebp
pusha
loopne
mov
lret
leave
aaa
ljmp
adc
loop
mov
into
add
bound
add
stos
add
nop
and
test
nop
or
xchg
add
xor
in
adc
lds
cmp
cmp
sti
popa
push
ret
mov
into
lahf
push
popf
mov
xchg
push
cmp
sbb
pop
xor
mov
inc
fs
test
pop
fidivrs
jecxz
dec
and
or
shlb
ret
xor
and
repz
pop
xchg
dec
insl
inc
dec
cmp
cld
sbb
sub
test
std
sbb
cmp
dec
mov
insl
pusha
inc
jns
cmp
push
int3
testl
scas
popf
jns
sbb
inc
mov
les
sar
lock
ret
gs
push
and
push
xchg
xchg
push
and
in
cmp
cs
cmp
stos
lahf
push
cmp
in
cli
mov
mov
or
push
inc
and
test
xor
stos
mulb
lahf
or
mov
shrb
mov
mov
mov
fwait
push
lods
orb
jecxz
and
sti
lock
inc
mov
pop
insl
filds
and
sahf
pop
mov
jecxz
mov
rcrb
mov
sub
dec
imul
dec
aaa
jb
iret
stos
out
ficomps
xchg
cld
test
and
mov
int3
in
loope
add
adc
pop
pushf
adc
rcll
rolb
cmpsl
std
aaa
mov
shll
mov
je
lods
popf
mov
jmp
adc
jecxz
sub
or
add
dec
xor
xchg
mov
fiadds
or
jno
aad
aad
leave
mov
xchg
adc
push
mov
adc
add
sub
outsl
sub
mov
jg
orl
mov
cmpsl
vpsubb
jno
pop
test
out
push
mov
mov
jmp
sbb
popf
ja
mov
inc
and
bound
cmp
xchg
dec
aaa
aas
jmp
js
loope
aas
ret
adc
pop
mov
loope
movsl
and
repz
jge
push
shlb
bound
jb
cmpsl
mov
sbb
jnp
and
sti
push
xor
inc
xchg
lret
movsl
and
push
xchg
fdivl
addr16
and
jle
sbbl
sbb
insl
sub
and
sbb
mov
mov
loop
aad
cmp
pop
mov
pop
pop
arpl
sub
jg
movsl
out
inc
js
cmp
test
aad
push
jae
jg
mov
jnp
dec
enter
push
ret
add
push
xlat
outsl
cmp
fcmove
jge
pop
andl
mov
bound
mov
cmpsl
push
icebp
test
pop
pop
pop
mov
mov
mov
mov
fisubl
inc
xorb
lret
jle
dec
inc
mov
call
jne
mov
push
jl
pop
aas
mov
inc
dec
cmp
adc
xorl
xchg
push
pop
and
adc
aad
mov
pushf
mov
bound
ljmp
iret
or
cmp
out
cmp
movsl
hlt
push
test
addl
adc
or
mov
mov
sub
jno
sub
mov
pop
dec
enter
test
pop
clc
scas
jne
popa
pop
js
imul
add
xchg
stos
imul
xor
inc
inc
xchg
int
movsb
test
inc
imul
imul
out
imull
sub
or
lcall
insb
out
js
push
pop
loopne
jmp
sarl
or
add
mov
cmpsl
pop
xchg
call
das
les
inc
popa
or
pop
fistl
push
xchg
bound
clc
xchg
cs
ret
les
imul
popf
out
dec
popa
test
mul
mov
sub
cmp
adc
jno
jecxz
add
cmc
dec
jb
dec
pop
or
dec
add
cmp
add
aam
dec
sub
xchg
dec
cmp
dec
and
sahf
xchg
js
lahf
sbb
mov
stos
cltd
inc
mov
leave
or
sub
fucomp
aam
ljmp
sbb
jmp
movsb
and
movsb
mov
std
mov
sub
pop
movb
bound
leave
shrb
sti
add
popf
sub
mov
adc
mov
mov
lret
pop
xchg
in
dec
movsl
sarl
and
test
push
add
pop
xchg
pop
stos
rolb
insb
pushf
push
dec
insb
inc
pmulhuw
jmp
and
pop
jns
ljmp
int
push
xlat
test
mov
push
sbb
arpl
push
pop
xor
test
lea
xchg
or
ja
dec
inc
subl
out
cmpsl
mov
test
fs
xchg
jo
mov
es
mov
outsb
push
adc
mov
lcall
jge
mov
dec
mov
adc
adc
jne
mov
fdivl
frstor
test
sub
je
pop
dec
mov
cmp
jbe
push
sub
cs
push
and
jmp
dec
jae
pop
sarb
sbb
xchg
mov
hlt
mov
dec
and
test
xor
inc
mov
inc
dec
outsl
jnp
and
sbb
lods
xor
cli
pop
mov
cmp
in
jecxz
or
inc
lea
out
lock
sbb
call
lahf
mov
jl
movsl
insl
orb
push
cld
jge
nop
insb
lods
pop
in
inc
not
dec
lods
mov
pop
rcrb
mov
fwait
adc
test
bound
sub
jb
jmp
in
bound
cmp
filds
push
loopne
sub
sti
xor
mov
cwtl
aaa
fnstenv
mov
insb
lcall
inc
jge
pop
in
jns
mov
hlt
dec
pop
je
xchg
pop
hlt
sub
inc
jle
add
xor
mov
pop
adc
push
daa
pushf
dec
call
fnstsw
lret
pop
jecxz
out
leave
inc
les
push
cmp
ret
mov
lods
mov
les
hlt
std
jbe
jns
rorb
xchg
pop
pusha
rcl
pop
xchg
mov
adc
adc
loopne
dec
push
fiaddl
loop
daa
shlb
pusha
jl
xlat
loop
dec
mov
jns
dec
loope
mov
cmp
mov
adc
inc
add
push
sbb
repz
sub
out
dec
lret
mov
rcrb
loop
pop
sti
inc
mov
popf
ja
sbb
lret
sbb
fcmovnbe
xchg
jge
je
outsb
mov
sbb
jp
push
daa
and
xchg
lcall
repnz
cmp
imul
xchg
in
notb
orl
outsl
sub
hlt
pop
xlat
mov
gs
fsubr
ljmp
shl
fstpl
mov
xchg
mov
mov
iret
pop
loope
xor
cs
andl
stc
xlat
outsb
ljmp
or
repz
pop
sti
test
sbb
jno
push
and
mov
aam
notb
dec
sbb
imul
imull
call
cmp
sub
iret
push
push
mov
ljmp
into
cmpsl
sbb
mov
jge
xlat
inc
fisubrl
shl
outsl
repnz
adc
xorb
loope
xchg
shll
mov
inc
shlb
cmp
lea
in
lret
dec
cs
pop
in
sbb
fldl
lea
lods
imul
push
push
iret
inc
add
das
imul
insl
adc
dec
xchg
dec
rolb
dec
mov
aam
adc
push
lds
jp
rcrb
jne
in
inc
ret
addb
into
cld
or
dec
sti
cmc
fwait
dec
addr16
sbb
pop
fisttpl
pop
repz
inc
es
aam
fisttpll
adc
cmp
rcrl
xchg
mov
dec
jmp
cmp
add
fsub
push
mov
gs
repnz
lret
push
push
testb
les
adc
jl
stc
mov
rorl
dec
mov
xor
icebp
mov
jb
lret
icebp
in
outsl
push
mov
aaa
add
adc
fmul
fists
dec
lods
mov
aaa
mov
adc
stos
mov
cli
aaa
push
mov
xor
sbb
pop
sub
inc
push
test
cmpsl
xchg
and
pop
dec
int
enter
ljmp
lea
cltd
mov
andb
mov
je
testb
push
inc
cmpsb
and
dec
jge
and
push
cmp
or
cmp
lret
xor
daa
ss
aam
stos
sub
mov
lret
push
sti
cmc
pop
inc
lcall
jns
mov
add
mov
test
call
mov
fisttpl
popa
cwtl
adc
out
cmp
inc
lahf
jno
mov
adc
lcall
jns
mov
adc
mov
bound
ds
lcall
jp
xchg
push
mov
and
mov
pop
adc
mov
addr16
addr16
sub
enter
push
cmp
pop
lret
mov
cmc
stos
loope
pushf
test
fistpll
aad
jp
pop
mov
sbb
jl
add
pop
or
dec
sbb
lret
jno
and
xchg
fsqrt
in
loop
mov
inc
test
cmpsl
mov
mov
add
lahf
or
enter
pop
clc
cltd
dec
mov
and
movsl
push
bound
daa
test
les
inc
sub
in
imul
xchg
inc
dec
add
cmp
dec
lret
call
inc
or
shl
outsb
test
cmp
ljmp
sahf
push
adc
in
mov
adc
sbb
or
decb
dec
sbb
pushf
cmp
cmp
imul
xor
fadds
pop
rclb
push
or
push
or
xchg
push
outsl
es
ja
mov
dec
inc
insl
cmpsb
xchg
dec
ja
out
dec
lea
pushf
xchg
aas
repnz
mov
or
xor
xor
nop
cmpsl
jecxz
pop
int
lods
outsb
hlt
fbstp
insl
sbb
out
and
fiadds
dec
out
lahf
dec
out
inc
xor
pop
bound
xor
xchg
cltd
pop
add
adcb
push
out
or
cmp
dec
mov
lret
mov
in
dec
push
push
jg
in
test
subl
mov
add
icebp
push
fdivl
push
movsl
dec
push
lods
pop
std
add
cli
loop
aas
popa
pop
xchg
sbb
fwait
test
mov
es
push
pushf
adc
adcl
dec
xor
add
imul
sbb
mov
stc
arpl
scas
mov
shl
ds
push
scas
roll
sub
xor
test
aam
xchg
into
insl
dec
fcoml
enter
shrl
inc
sbb
jge
out
jl
xor
dec
ja
jbe
mov
jnp
push
sbb
rcrl
push
cs
inc
jb
fdivrs
filds
jnp
cmp
cltd
jp
insb
sahf
mov
sbb
les
addr16
insl
and
push
inc
std
adc
sub
jae
mov
lret
jle
sub
sbb
stc
jge
inc
fwait
jl
in
int
shlb
mov
push
and
sbb
jmp
repnz
dec
ss
fimuls
rcl
inc
push
xrelease
pop
dec
mov
jmp
mov
hlt
addb
pop
stos
add
in
cmp
push
ret
fwait
imul
ss
outsb
mov
test
ds
mov
add
xchg
lds
shll
sbbl
leave
stos
mov
push
push
pop
mov
xchg
sub
cmp
ja
push
xchg
repnz
xchg
add
call
or
pop
divps
push
and
sub
xchg
and
fsts
pop
lods
enter
adc
fisubrs
cmp
push
cli
xchg
cmpsl
xorb
pushf
and
cmp
lcall
je
add
mov
dec
inc
mov
cmp
jmp
loope
xlat
int
imul
inc
jmp
jbe
inc
push
fldenv
mov
arpl
pop
jge
mov
outsl
inc
mov
xor
add
loope
jne
xlat
fs
sub
in
sub
xchg
xchg
jp
xchg
dec
rclb
sbb
jo
sub
lds
gs
mov
mov
mov
mov
out
fldl
sahf
int3
dec
jle
inc
in
adc
and
dec
pop
mov
out
sub
notb
loope
adc
sahf
arpl
add
sbb
fdivrs
icebp
add
lea
or
enter
adc
ljmp
leave
cmpl
cs
sbbb
ret
mov
mov
pushf
aam
in
dec
sbb
add
int3
xor
hlt
xor
outsl
shr
test
pusha
lahf
sar
sbbb
test
into
lock
andl
adc
adc
dec
push
add
dec
jb
imulb
or
push
pop
sarl
rcll
arpl
mov
stos
pop
cmc
out
xor
adcb
decb
jnp
push
adc
add
scas
decb
inc
loope
sbb
into
mov
xchg
pop
pop
sub
mov
push
jg
pop
ds
scas
xchg
std
xor
jno
test
and
push
shlb
sub
es
sub
fucomi
jns
sarl
rorl
cmp
stos
sarl
mov
movsl
xor
js
inc
xor
stc
test
mov
mov
shrl
push
out
push
cmp
mov
stos
imulb
and
test
pop
std
or
xchg
add
xor
xor
jmp
mov
mov
and
cmp
fisubrl
in
in
add
aaa
mov
repnz
or
ror
mov
lods
ret
andb
cmp
dec
cmp
mov
push
mov
and
adc
mov
sub
fcoml
sub
jne
mov
or
xchg
popa
rorb
fisttpl
mov
pop
mov
inc
sub
in
mov
lea
xchg
bound
into
movsb
dec
xchg
sbb
add
xlat
popa
jno
mov
sahf
pop
lods
jg
ds
mov
mov
stos
inc
lods
add
and
in
test
push
and
xchg
outsb
pop
jbe
aad
or
mov
in
adc
cmp
sti
shlb
jl
xchg
lods
pusha
add
sbb
or
and
sub
push
lret
into
scas
mov
ss
and
sub
push
out
push
adc
fsubl
add
int3
gs
sub
repz
fbstp
or
shl
dec
mov
cmp
push
sbb
fdivr
stc
jbe
and
testl
adc
movsl
in
dec
dec
push
jge
insb
mov
lcall
popa
dec
mov
pop
out
addb
mov
popa
mov
sbb
jnp
mov
ljmp
imul
fsubs
adcl
mov
insb
xchg
imul
clc
mov
push
sub
fwait
or
in
data16
cmp
jmp
mov
cld
jno
sub
test
add
cmp
dec
loop
cmpsb
repnz
lods
pop
imul
push
jbe
in
clc
insb
sar
sbb
add
jge
add
add
das
bound
or
scas
ss
push
xor
adc
iret
aas
xchg
daa
or
scas
leave
or
fisubrl
jmp
scas
dec
mov
imulb
xchg
fldt
lods
outsl
test
subl
pop
arpl
push
jg
jne
lahf
mov
dec
jle
pop
shlb
out
ret
aad
adc
popa
mov
aad
xchg
lds
mov
xchg
sub
aad
dec
pop
push
or
sbb
mov
enter
add
in
push
subl
mov
inc
sbb
xchg
mov
or
xor
cmp
cmp
fdivl
test
das
cmp
fcmovnb
ror
push
sub
into
mov
out
ja
sub
lock
addr16
popw
imul
add
sub
repnz
lea
lea
pop
sbbl
xor
sbb
stos
das
les
xchg
fsubrs
xlat
or
inc
dec
dec
dec
cmc
push
rclb
inc
xor
jmp
stos
cmpsb
and
pop
sbb
rcr
add
pop
popf
test
es
lock
in
aad
stc
inc
sub
ret
push
call
push
pop
cltd
cld
jbe
and
or
or
fxch
jp
addb
mov
mov
add
sub
xchg
lret
js
lret
test
daa
insb
mov
cwtl
call
sub
jp
push
sbbl
ljmp
bound
negl
sub
or
aas
mov
or
out
ror
jecxz
pop
pop
loopne
pop
filds
adc
sub
mov
xor
inc
pop
cmpb
adc
sub
sub
cwtl
loop
inc
out
dec
sbb
imul
jae
test
mov
test
fidivl
xor
gs
dec
xor
out
inc
jg
jecxz
loope
mov
push
mov
mov
in
pop
scas
cs
repz
cmc
movl
repz
js
repnz
lret
cmp
mov
les
mov
xchg
aam
les
dec
aam
insl
pop
inc
push
xor
push
sahf
insl
sbb
cli
sti
inc
adc
xor
fimull
hlt
cmc
imul
jns
jp
ss
dec
mov
or
xchg
scas
or
cwtl
fs
push
fcomps
into
hlt
std
xchg
xor
pop
loope
inc
mov
mov
iret
add
pushf
jmp
mov
sub
mov
cmpsl
jle
ja
imul
pushf
and
sbb
imul
mov
xchg
popa
dec
xor
in
sub
ret
add
push
pop
dec
sti
cld
mov
push
push
mov
add
sub
push
push
sahf
ret
xchg
test
jge
in
pop
inc
push
fisttpll
cmp
jnp
mov
rclb
pop
pop
nop
mov
adc
lea
mov
enter
mov
cli
out
jb
cmp
fs
pop
jnp
pop
pop
push
aam
outsl
push
mov
add
sub
adc
mov
pop
data16
push
popa
jg
addb
outsl
push
sub
sti
sbb
hlt
cmp
fiadds
stos
jge
mov
sub
adc
call
in
mov
nop
test
xor
lods
sbb
cmp
cmpl
sbb
add
movsb
clc
lret
dec
mov
and
push
in
sub
jp
je
test
and
cmp
and
sbb
push
es
jb
notl
mov
lds
test
cltd
lea
addb
jb,pt
xchg
hlt
fistps
test
or
mov
dec
or
ja
inc
jne
loopne
addr16
add
mov
add
in
rclb
fcmovbe
cmp
lock
mov
cmpl
jle
xchg
dec
cltd
mov
xor
adc
sub
scas
divb
in
movsl
enter
mov
xchg
fstpl
test
ja
add
mov
dec
sar
ret
ljmp
inc
loopne
mov
jle
cmpsb
pop
xor
xchg
add
jnp
shll
aad
movsl
jb
mov
push
test
movsl
sub
xchg
lahf
insl
out
gs
sbb
repz
adc
insb
out
jle
out
cmp
mov
sub
sub
popa
add
lock
cmp
call
push
mov
dec
aad
adc
icebp
cmp
insb
cmp
push
push
rcrl
rorl
mov
jge
push
xchg
lea
test
mov
dec
jno
add
dec
lahf
mull
in
movb
jo
and
fsubl
insl
jb
mov
push
js
daa
and
ret
pop
push
xor
or
mov
sub
test
cmp
push
js
ror
xor
push
inc
adc
cmp
into
cmp
loopne
or
push
stc
lcall
dec
adc
jno
push
fnstcw
das
mov
pop
popw
sub
shrb
insb
xchg
jns
lcall
jbe
mov
out
ss
out
xchg
push
inc
or
scas
pop
pop
loop
push
rorl
inc
adc
jg
or
xchg
out
sbb
lods
ja
idivl
outsl
cli
lods
pop
cli
sbb
fwait
idiv
popf
int
push
out
pusha
sbb
sti
mov
mov
jp
xor
ja
icebp
sbb
insb
lahf
cmp
and
loop
jnp,pn
enter
nop
xchg
jo
repnz
fiadds
xchg
test
rcrl
adc
mov
jnp
rorl
dec
icebp
popa
leave
xchg
ljmp
pusha
arpl
cmp
negb
stos
lods
and
psrlq
cmp
int3
cs
adc
xor
mov
jmp
mov
ds
lcall
sbb
and
mov
or
add
out
xor
outsb
adc
stc
addr16
jno
cs
adc
mov
push
add
sbb
lock
xor
add
stc
jg
repnz
lahf
lock
aad
ljmp
aad
and
pop
inc
mov
pushf
xor
lods
fisttps
movsb
push
ret
outsl
jg
inc
iret
inc
inc
outsb
std
daa
xor
mov
insb
cmp
stos
in
add
sbb
mov
insb
pop
cmp
sbb
adc
icebp
enter
stos
mov
mov
mov
xor
cmp
xchg
sbb
stos
push
inc
and
push
xchg
sbb
call
xchg
leave
in
repz
and
test
cli
or
cmpsl
pop
out
adc
inc
push
inc
movsb
and
outsb
sarl
daa
repnz
shl
icebp
lock
ret
fcmovnbe
push
jno,pt
cli
daa
or
xchg
push
jmp
mov
pop
fmull
aam
pop
stos
inc
sub
push
mov
mov
sub
cmp
sub
cmp
std
popa
sub
inc
jno
mov
fcomps
jmp
movsb
push
or
pusha
ficoms
xchg
mov
data16
lret
cld
xor
cmpsl
arpl
fidivrl
xlat
stc
dec
leave
bound
out
xor
pop
sbbb
sahf
out
test
shrb
stc
sbb
inc
lret
call
dec
movsl
sub
add
sub
xor
cld
xchg
add
xchg
or
xchg
add
ficompl
sbb
mov
mov
lret
mov
dec
mov
loopne
xor
jecxz
jmp
pop
lret
add
mov
roll
stc
push
aas
adc
pop
bound
icebp
jns,pn
leave
xchg
int
popw
xchg
cmp
iret
xor
and
xchg
sub
stos
and
sub
dec
cltd
inc
dec
in
or
ds
daa
or
add
add
mov
inc
js
div
imul
dec
dec
pop
enter
inc
cmpsl
xchg
dec
out
daa
xchg
adc
sbb
xchg
xchg
pop
sub
int3
push
mov
or
jl
push
bound
push
aam
lret
inc
arpl
iret
addr16
mov
std
dec
adc
dec
jg
cmp
movsb
mov
dec
mov
aad
dec
jnp
jle
sbb
jmp
fldenv
mov
or
push
cmc
or
dec
xchg
inc
fisubl
test
sbb
hlt
sbb
testl
loop
hlt
lock
jmp
mov
mov
repnz
mov
cmpsb
ja
sub
fcmovb
fisttpl
mov
in
cmpsb
dec
popf
sub
push
fdecstp
push
or
sub
rcr
push
loopne
pusha
inc
cmp
dec
leave
push
imul
or
cmpsl
push
adc
shlb
outsb
cltd
cmp
addr16
mov
or
dec
mov
jecxz
jp
pop
sbb
xlat
ret
dec
lahf
mov
jbe
mov
fsts
out
xchg
inc
stc
pop
inc
add
lea
imul
pop
cwtl
ds
test
push
inc
inc
cmp
fsts
mov
repz
dec
cli
or
pushf
jl
mov
mov
dec
mov
mov
sub
fbld
pop
mov
cmp
fs
mov
ljmp
mov
or
cmp
mov
or
xor
add
add
arpl
pop
push
repz
sub
std
fcoms
xchg
scas
jb
xor
dec
gs
jmp
pop
sub
jmp
xchg
adc
dec
dec
std
xchg
movsb
mov
mov
mov
ficoms
lret
add
push
lods
jns
dec
dec
dec
les
push
js
nop
rcrl
testb
and
mov
loop
adc
cmp
popf
lahf
cmp
shl
push
xchg
xlat
xchg
addb
mov
ret
adc
orb
addr16
cmpsl
out
inc
mov
repnz
out
mov
hlt
leave
push
insl
aaa
jle
jg
iret
clc
mov
loope
popa
loop
pop
add
push
fsubrs
cwtl
rep
cmovge
lcall
ja
inc
sbb
hlt
push
push
adc
jnp
jecxz
or
psubw
xor
jb
mov
insb
adc
shlb
repz
fnstcw
loop
pop
fidivl
cs
lahf
jp
mov
lcall
ret
int3
daa
mov
adcb
in
sbb
mov
inc
addr16
in
pop
cld
push
clc
jae
int3
pop
cmp
js
cmp
hlt
sbb
add
hlt
rclb
enter
mov
fistps
loope
repz
aad
movsl
dec
xchg
test
or
rcll
dec
mov
mov
fiadds
and
btc
sbb
fidivl
cwtl
iret
sbb
push
andb
addr16
lods
cmpsb
sub
mov
inc
push
mov
repnz
inc
lret
rorl
mov
loop
xor
sbb
fsubr
pop
lcall
fwait
into
dec
add
mov
inc
scas
jge,pn
sbb
fidivrs
and
sub
repz
add
add
sbb
xor
dec
mov
dec
shl
in
push
negb
sbb
push
dec
sbb
fwait
and
and
insb
adc
push
jb
sub
sub
xchg
data16
popa
sbb
mov
das
cmp
popa
mov
fcoms
mov
sub
jg
repz
iret
sbb
sti
movsb
jp
xor
add
inc
cmp
jnp
sub
pop
fisubrl
mov
pop
add
and
mov
enter
aad
and
dec
xor
and
pop
xchg
icebp
int
pop
scas
xchg
mov
pop
xor
rolb
sti
lret
inc
fsub
or
inc
ret
std
mov
sti
sbb
mov
jmp
lret
aam
clc
mov
insl
insl
jecxz
pop
and
data16
hlt
and
dec
sub
mov
loop
or
ljmp
inc
mov
jl
pop
call
fstps
cmp
addr16
push
subl
add
daa
jno
mov
in
and
sub
lds
stos
inc
fcmovnu
shrb
lock
ja
and
push
data16
dec
add
jmp
lock
rorl
orb
sub
mov
push
and
fdivs
adcl
ljmp
cmp
or
lcall
fmull
adc
or
push
leave
push
add
dec
add
push
xchg
lods
cmp
jle
mov
cmp
lods
adc
inc
sbb
sub
mov
inc
mov
mov
in
pop
mov
sub
xchg
mov
dec
je
and
aas
pop
test
rolb
xchg
xor
mov
inc
jg
mov
jecxz
mov
push
cmp
fdivrl
sub
mov
jecxz
xor
mov
fmuls
and
push
fcompl
or
insl
inc
adc
out
jmp
ret
jae
push
pusha
mov
cmpsl
fs
mov
pop
out
inc
pop
mov
sub
dec
stos
decl
cli
inc
mov
pop
inc
movsb
rolb
nop
adc
sti
inc
xchg
and
insl
push
jmp
loope
xlat
pop
je
sub
add
inc
cmc
mov
fidivs
jge
dec
dec
push
ljmp
ss
shlb
mov
aaa
stos
cli
fnstenv
jb
pop
mov
repnz
outsl
je
loopne
aaa
ds
out
mov
sub
loope
mov
pop
inc
ficompl
and
idiv
movaps
cli
jge
xchg
outsl
es
dec
adc
add
inc
adc
mov
mov
loop
dec
les
int
fistl
in
aad
stos
and
add
out
and
adc
movsb
and
dec
dec
inc
xchg
push
ret
aad
jno
pop
sarl
lcall
sub
mov
sbb
mov
nop
scas
adc
int3
adc
movsl
setns
sarb
ljmp
movsl
mov
inc
lods
std
inc
sbb
xor
in
add
inc
inc
insb
pop
lret
insl
pop
lahf
adc
ljmp
subl
test
add
loopne
pop
notl
fcmovne
fdiv
loope
fldl
xchg
ret
or
dec
or
in
mov
push
push
stc
pushf
je
push
sbb
mov
jbe
in
jbe
repz
outsb
inc
enter
nop
mov
inc
shrb
inc
movsl
dec
push
jge
add
ficoms
pause
push
cmp
pop
shll
adc
jno
or
movsl
insb
push
mov
jb
sbb
sbb
imul
data16
cmpb
pusha
cmp
imul
xchg
rol
hlt
fbstp
push
add
scas
dec
pop
idivb
mov
sub
jmp
test
cmp
push
sub
adc
cli
scas
shlb
test
jo
mov
loopne
jb
and
pop
or
jno
dec
out
shlb
in
xchg
test
mov
cmp
psllq
mov
mov
movsb
data16
fcompl
push
addl
dec
mov
push
cmp
xchg
dec
add
sub
sub
movsb
in
dec
inc
ret
or
push
out
pop
or
jge
mov
adc
mov
jmp
test
xchg
mov
push
pusha
int3
flds
pop
cmp
jo
push
add
pushf
aad
dec
mov
pusha
cltd
cmc
adc
adc
rcrl
xchg
adc
adc
in
xor
or
test
lods
push
ss
sbb
sub
rolb
movsl
push
cmp
bts
pop
mov
push
cmp
jmp
les
call
push
mov
repnz
dec
cmp
fcmove
int3
sahf
cs
mov
sbb
gs
shrb
inc
push
inc
xchg
xchg
mov
pop
mov
cmpsl
lcall
adc
mov
lret
repnz
adc
adc
jl
lock
fcomps
aad
push
rcl
je
iret
mov
addr16
daa
mov
add
xor
icebp
popf
sub
lret
pop
adc
js
and
xor
jecxz
push
sbb
adcl
mov
cmpl
lock
ja
popf
mov
scas
punpckhdq
ret
sub
cmp
push
cmp
rolb
sti
test
jbe
or
scas
cmpsl
pop
mov
inc
sbb
repz
and
adc
push
aad
jp
push
push
insb
pop
lea
subl
call
cmp
sbb
add
lret
pop
jecxz
and
lahf
pop
cmp
pop
lds
cld
stos
mov
mov
repnz
cmc
sub
add
jg
dec
pushf
hsubpd
mov
dec
mov
or
repnz
jo
sub
ret
fs
push
push
cmp
clc
stc
jno
les
aam
cli
lret
mov
push
jno
fsubrs
mov
xor
lock
xchg
rcl
inc
mov
stos
add
xchg
sbb
inc
test
mov
push
adc
lods
loopne
xchg
ret
iret
in
add
sbb
sarl
adc
loope
or
dec
jae
shlb
leave
orb
rcr
push
jns
ljmpw
and
or
ljmp
cmp
mov
mov
jno
fcomip
or
mov
push
cld
jns
mov
cli
stc
pop
lcall
sub
paddsb
add
movsb
stos
iret
adc
in
and
jmp
in
mov
repnz
adc
pop
lds
out
lds
mov
ja
aad
jp
push
mov
mov
dec
cmp
in
das
movsb
mov
mov
ss
inc
decb
xchg
dec
mov
cmp
and
dec
lea
cmp
lods
dec
in
stos
ret
mov
mov
test
and
rorb
pop
lret
xchg
xor
arpl
jbe
in
in
adc
jns
sub
ret
dec
testb
pop
lock
cmp
xchg
adc
mov
adc
repnz
test
adc
mov
xchg
mov
xchg
fldenv
test
push
inc
push
insl
mov
jg
inc
push
das
daa
xchg
sbb
add
cmp
fsts
in
xor
push
ja
xor
insl
mov
lahf
aas
loop
nop
pop
lods
or
jb
push
out
sbb
push
and
mov
lods
jp
aaa
mov
test
jno
sub
ljmp
push
xchg
cltd
lds
test
xchg
xor
incl
adc
aaa
clc
aaa
and
arpl
xor
xor
std
dec
data16
adc
pop
inc
jo
xor
and
iret
xor
push
mov
icebp
lret
test
push
jb
dec
leave
cmp
mov
lret
sub
jle
adc
fwait
push
outsb
outsl
adc
mov
push
fsubs
sub
fildll
add
add
lods
pushf
push
mov
imul
add
fisubrs
push
or
xchg
call
pushf
mov
dec
jge
xor
adc
shrb
mov
cwtl
pusha
or
jae
pop
rclb
leave
scas
jns
mov
pop
int3
dec
imul
and
adc
out
iret
in
repnz
xorb
iret
sub
fildl
mov
xorb
xor
cmpsl
test
sahf
sub
mov
es
pusha
aad
mov
mov
loopne
lods
ret
rcll
nop
or
mov
adc
push
sub
shrb
aam
cmp
push
sbb
sbb
or
add
mov
cmp
pop
cmp
in
lock
dec
push
mov
mov
std
aas
in
mov
push
mov
sub
sbb
lock
mov
in
mov
fwait
cmp
adc
jns
mov
inc
mov
pmulhw
dec
rolb
test
jmp
les
adcl
xchg
xchg
shll
popa
fwait
sub
jl
repz
out
in
sub
add
lcall
inc
lret
push
movsb
cmp
cmc
imul
jle
in
dec
cmp
mov
lahf
push
filds
jle
adc
push
dec
jno
fldln2
push
sbb
mov
or
fistps
and
bound
lds
adc
push
add
inc
xchg
fistpll
data16
push
xor
scas
repz
loope
cmp
push
inc
call
pop
mov
aad
xchg
push
mov
imul
lock
fdivl
ret
push
minps
fwait
gs
push
jo
ds
es
mov
jecxz
xor
shll
cmp
cli
or
add
test
out
stos
push
js
cmp
je
fsubrs
xor
xor
sbbb
add
divl
sbb
inc
in
stos
mov
lcall
out
mov
and
xlat
push
scas
sub
and
out
das
std
cmp
scas
adc
out
and
icebp
cltd
dec
out
ret
xchg
pop
and
add
xchg
adc
or
inc
lret
je
mov
test
out
mov
jbe
sarb
sub
lea
cwtl
sub
pop
mov
idiv
es
push
outsb
mov
xchg
aam
ja
add
push
jecxz
fstpt
mov
inc
int
adc
and
push
adc
cld
jnp
sbb
mov
inc
fbld
xor
and
xchg
repnz
sbb
out
xchg
xchg
lcall
gs
lds
lds
or
dec
mov
cmc
jo
mov
adc
fmull
adc
pop
and
and
and
fs
fildl
mov
xor
dec
and
pop
outsl
adc
ret
inc
test
mov
bound
dec
addr16
sahf
call
inc
cmp
subb
or
push
addr16
icebp
inc
enter
cmp
clc
lret
cmp
lret
test
faddp
and
popl
sbb
fnstcw
ja
push
jg
hlt
mov
push
imul
repnz
xchg
jnp,pt
adcl
lea
lods
sbb
mov
add
ret
push
repz
jle
xchg
push
push
fs
dec
daa
in
sbb
xchg
push
cld
lahf
cmc
test
cld
test
mov
mov
clc
outsl
jmp
inc
inc
outsl
in
mov
sbb
and
and
inc
adc
jmp
stc
nop
mov
int
inc
xorl
lea
lock
dec
lock
dec
repnz
push
or
pusha
outsb
xorl
push
repnz
call
decb
popa
cwtl
push
mov
xchg
mov
push
push
mov
fsubrl
or
pop
fistpl
loopne
jb
lods
cmp
adc
push
inc
mov
out
outsl
ret
sub
and
stos
je
mov
xchg
jbe
in
js
jl
cmp
into
adc
dec
and
repz
scas
xchg
shr
xor
xchg
loope
add
cmp
or
sbb
lock
pop
popa
jne
outsb
loope
jge
push
mov
rorb
cmp
mov
xor
test
data16
bound
scas
push
ja
stos
mov
dec
mov
mov
lods
mov
adc
je
cmp
and
movb
pop
test
mov
sbb
roll
mov
addr16
inc
sarb
orb
jnp
fmul
add
scas
and
cld
lock
shlb
or
mov
jne
pop
mov
rcrb
out
mov
dec
je
jp
rcrb
das
ja
sbb
aaa
mov
push
push
jp
or
sahf
sub
or
loope
rol
jg
sbb
aad
adc
repnz
in
hlt
test
sahf
es
push
adc
xor
or
push
out
fwait
or
push
jno
xor
jne
imul
dec
dec
ret
ss
outsb
adc
mov
rclb
or
int3
hlt
movsb
cs
add
andb
or
cmp
jp
pusha
xchg
mov
outsb
cmp
lahf
movsl
inc
sar
sub
pop
xor
ficoml
adc
or
imul
divb
pushf
sbb
daa
sti
and
loopne
add
pop
sub
mov
sbb
leave
adc
xchg
dec
push
lret
cmc
push
mov
mov
cmp
pop
inc
and
mov
push
xchg
mov
push
sbb
popa
cmp
mov
mov
in
pop
fmull
fs
cmpsb
out
cmp
in
pop
enter
insb
imul
add
aam
sbb
stc
push
es
stos
lret
or
sbb
xchg
test
lods
pop
popa
ja
or
xchg
pop
pusha
iret
dec
mov
mov
in
add
lods
std
imul
mov
and
je
jecxz
out
or
cmp
ret
sar
jle,pt
into
xor
push
or
sahf
push
mov
sbb
sbb
dec
cld
mov
ljmp
and
add
imul
shrb
cs
jne
in
sbb
repz
add
fldl
outsb
pop
cmpsb
lods
in
mov
test
inc
fcoms
sub
push
fwait
scas
jmp
or
adc
jnp
inc
inc
rcr
rcrb
mov
or
xchg
popf
in
jl
ret
mov
mov
movsb
fimuls
xchg
mov
enter
repnz
jae
arpl
mov
ja
mov
inc
and
inc
cld
cwtl
sbb
frstor
xor
test
negl
loope
outsb
ret
pop
or
aaa
sub
cmp
jg
sub
int
cmpsb
out
jns
xchg
ja
scas
mov
sbbb
and
sbb
mov
inc
mov
rcrl
cmp
dec
mov
push
in
das
clc
add
imul
dec
test
xorl
test
sub
loop
call
adcl
pop
enter
add
in
mov
mov
inc
mov
pop
inc
pop
mov
sub
ret
jns
bound
aaa
dec
inc
push
or
sbb
stc
cwtl
cmp
imul
sbb
data16
cmpsl
jns
mov
and
les
mov
inc
xchg
mov
pop
cmp
cmp
mov
pushf
sub
ljmp
sub
add
inc
push
pop
add
cmpsb
pop
inc
fwait
mov
dec
aam
xchg
mov
pop
mov
xlat
rcrl
insb
xchg
xchg
mov
mov
loope
pop
stc
pop
sub
ds
shll
movl
pop
xchg
into
stc
insb
sbb
lahf
adc
adc
jmp
hlt
mov
jno
aaa
repz
enter
fcom
push
nop
lret
outsl
cmc
add
push
addr16
add
aad
aad
mov
pop
aaa
lock
add
or
dec
mov
push
imul
push
push
or
lret
mull
dec
mov
stos
je
les
es
aaa
out
sbb
repnz
mov
movsl
inc
pop
pop
push
and
and
push
sti
icebp
std
xor
mov
jmp
stos
cmp
je
hlt
cwtl
cmp
aaa
sbb
add
aaa
sub
jae
push
cltd
dec
mov
xor
cwtl
stos
jae
push
insl
insl
shl
out
sbb
jl
lods
mov
dec
inc
std
sub
int3
popf
stos
repz
jmp
shrb
xchg
loopne
repnz
test
jb
out
outsl
shrl
mov
mov
or
xor
int
cli
dec
pop
cmp
inc
dec
mov
push
scas
sbb
jge
lock
pop
leave
mov
and
mov
scas
rclb
lds
mov
sbb
scas
or
popf
jae
fisttps
pop
jmp
dec
adc
cmp
das
shlb
jbe
addl
iret
xor
out
aas
add
jle
cmpsb
mov
xchg
popa
hlt
iret
dec
cmp
cmpsb
stos
sahf
insl
push
push
lods
push
dec
push
ja
jecxz
scas
icebp
jmp
int
jp
cmp
mov
outsb
mov
sub
in
test
mov
pushf
xlat
enter
sub
sbb
scas
push
stos
mov
or
adc
xor
cli
out
pop
inc
arpl
arpl
sbb
das
push
fadds
sub
push
and
inc
add
cld
push
or
pop
push
int
sub
mov
adcb
imul
push
inc
sub
adc
imul
test
xchg
push
push
arpl
cwtl
fwait
mov
in
out
je
hlt
and
hlt
fstl
add
xchg
fs
ret
movsl
testb
or
mov
in
sbbl
enter
fists
sbb
shlb
fildl
in
cmp
dec
leave
inc
xchg
in
ret
inc
xlat
sub
mov
jne
sbb
lock
adc
subl
inc
out
ret
mov
add
hlt
jp
xor
ss
cmpsb
push
leave
dec
mov
loope
jbe
movsl
repnz
or
int
cltd
dec
int
adc
xor
scas
pop
std
xor
mov
fadd
icebp
jbe
sbb
push
jmp
adc
mov
pop
or
mov
stos
das
pop
stos
bound
mov
icebp
stc
dec
adc
or
sbbb
mov
call
cli
pop
sbb
loopne
or
ret
xor
inc
ljmp
and
loope
add
nop
sahf
sbb
cmpsl
aaa
adc
rolb
push
pop
lret
or
cmp
mov
or
test
mov
inc
add
pop
bnd
inc
fists
ja
daa
jo
ffree
mov
adc
bound
jmp
mov
pop
pop
sti
clc
add
andb
xchg
or
or
mov
jae
ss
outsl
jae
arpl
add
dec
dec
sub
xchg
je
add
pop
add
loopne
lods
out
jne
adc
stos
fstps
fsub
fstp
push
insl
xchg
subl
cmp
sti
push
mov
test
loope
jg
dec
sub
mov
fistps
sbb
xchg
mov
xor
popl
or
dec
nop
sbb
xchg
mov
or
cld
jnp
mov
iret
lds
leave
imul
imul
stc
cld
dec
push
cli
ljmp
push
repz
shll
sub
inc
rcll
outsb
mov
cmp
pop
pop
imul
leave
dec
inc
leave
nop
jl
inc
lds
pop
shll
xchg
ffree
lds
mov
notb
dec
nop
outsl
cmp
jmp
dec
add
cmpl
sub
cmp
and
scas
sub
imul
scas
nop
out
push
push
adc
mov
or
leave
inc
rorl
out
out
aaa
shlb
adc
mov
fs
sbb
add
xchg
add
jmp
mov
pop
icebp
inc
and
dec
dec
imul
mov
sub
in
jbe
adc
push
imul
js
push
mov
gs
fdivl
sarl
add
jb
call
jl
stos
je
imul
ffreep
ret
dec
push
jnp
sbb
pop
adc
fdivl
jo
xchg
push
leave
mov
ds
daa
movl
es
xor
insl
add
ljmp
sarb
jo
sbb
add
mov
stc
bswap
and
shl
jae
inc
cs
test
or
cmp
adc
mov
push
or
sbb
pop
in
test
jns
dec
inc
imul
dec
loope,pn
aam
or
cmp
mov
mov
pop
into
icebp
das
inc
or
jecxz
lds
pusha
pop
push
cmpb
ja
xchg
xchg
daa
aaa
iret
arpl
daa
popa
int3
add
push
lahf
loop
dec
mov
repnz
stos
ret
add
lods
shr
jnp
shl
cmp
xor
cmp
enter
and
aam
mov
or
adc
loope
icebp
test
inc
lds
repnz
stc
enter
jl
out
rcr
and
adc
adc
pop
cmp
jecxz
out
roll
inc
adc
xor
xor
nop
clc
ss
lret
iret
xor
adc
in
stos
fisubrs
push
cli
push
push
mov
jno
test
inc
fiaddl
test
adc
jg
mov
jnp
ljmp
adc
push
hlt
hlt
dec
mov
sub
mov
adc
mov
or
cmp
into
mov
popf
pop
addr16
mov
fwait
pusha
or
inc
jecxz
sbb
psubw
cltd
and
jo
test
or
inc
jb
sbb
mov
fdivrl
pop
cmp
out
leave
pusha
pop
mov
call
popa
xor
cmpsl
jns
pop
fwait
mov
mov
xor
int
mov
inc
xchg
js
in
push
inc
mov
rclb
mov
xchg
mov
inc
mov
sbb
sbb
push
pop
mov
xor
cmp
out
fs
out
xchg
iret
xchg
outsl
jl
mov
in
mov
js
xor
dec
pop
mov
pop
les
adc
aad
jbe
or
out
xchg
mov
cmp
add
mov
xor
insl
xor
dec
sahf
cmp
fldl
icebp
imul
stc
push
test
sub
lcall
std
jg
lock
mov
sarl
xchg
sti
out
jle
mov
out
loopne
cmp
es
add
mov
push
aad
sbb
pop
add
push
pop
sub
into
push
out
pop
xor
jge
jmp
outsl
xor
mov
call
test
push
or
and
pushf
jbe
out
es
xor
or
ret
jbe
les
jno
lock
aam
popa
data16
cld
pushf
in
mov
aaa
xchg
enter
cmpl
jmp
sar
fst
mov
jae
into
lods
sbb
jne
fsts
lods
gs
xchg
xchg
mov
mul
push
xchg
cmp
testl
or
xor
imul
les
mov
dec
dec
aaa
je
xchg
jno
jmp
pop
push
stos
mov
pop
mov
cmp
dec
out
dec
jns
bound
mov
outsb
cmp
add
sbb
out
leave
push
fwait
scas
or
ret
mov
in
cmpsl
or
push
dec
aad
pop
insb
dec
mov
inc
cwtl
mov
push
insl
and
pop
dec
mov
xor
std
cwtl
nop
jp
mov
mov
loope
movsb
xor
adc
or
les
out
xchg
dec
mov
mov
shrl
lods
jns
fidivrs
sub
xchg
inc
inc
es
cmp
push
inc
bound
xchg
rcll
mov
or
inc
xchg
xchg
testl
aas
cwtl
ja
add
in
fistpl
push
fdivrl
sbbb
repnz
sub
dec
notb
push
jno
cmp
jae
arpl
cmpsb
push
xor
pop
jg
cmpsl
push
and
bound
adc
scas
gs
jb
cld
cmp
inc
daa
add
popa
mov
mov
jge
or
nop
cmp
daa
cwtl
mov
mov
lods
xchg
loope
popf
aam
in
out
movsl
or
xchg
fdivl
test
js
sbb
lods
fisubl
jb
lods
xchg
cld
cmp
mov
lods
repnz
cmpsb
and
add
in
loope
addr16
adc
pop
hlt
in
add
pop
add
xor
repnz
popf
gs
test
cmp
push
insl
adc
sbb
and
inc
lahf
sub
fbld
fmuls
jmp
and
push
mov
mov
shll
mov
sub
mov
test
jge
xchg
push
cmpsl
in
lds
leave
mov
or
sbb
pushl
out
mov
cld
push
add
sub
ds
mov
push
out
jbe
inc
sbb
testl
mov
pushf
xchg
inc
jp
shlb
hlt
pop
adc
push
xor
or
inc
jecxz
int
jmp
je
xchg
adc
or
sbb
cmp
pop
mov
pop
ljmp
jne
mov
inc
repnz
test
xchg
rcl
sbb
mov
int3
test
popf
in
jo
shrb
jmp
mov
mov
and
out
pop
pop
sub
pop
push
jne
or
sub
or
or
or
out
mulb
cwtl
xor
push
xor
pop
movsl
or
sbb
dec
jb
aam
mov
mov
lds
push
fs
mov
mov
xchg
pop
pop
push
gs
mov
xchg
lods
cltd
data16
dec
imul
and
jns
xor
and
popf
mov
xchg
lret
lock
push
pusha
inc
je
mov
test
push
mov
sbb
xchg
cmp
jmp
mov
mov
scas
inc
sbb
jne
xor
sti
or
xor
add
andb
cltd
hlt
dec
xor
push
pop
sbb
mov
xchg
xchg
jmp
inc
xchg
xchg
push
and
fisubrl
mov
enter
addb
and
clc
xor
orb
mov
xchg
stc
int3
mov
out
and
clc
cwtl
cld
insl
pop
pop
jl
cmp
test
mov
hlt
jbe,pt
jge
shlb
idiv
mov
jmp
sub
pop
dec
aaa
jg
jg
xchg
loopne
pusha
mov
repz
lcall
and
jb
push
xor
rclb
inc
and
push
adc
sahf
add
adc
in
movsb
push
mov
insl
in
push
cmp
int3
fyl2x
int
jnp
lods
mov
stc
imul
insb
in
sbb
push
lock
inc
hlt
das
fstps
jmp
adc
pop
mov
push
icebp
xchg
jae
cltd
push
cmp
adcl
test
out
movsb
push
cmp
jg
pop
dec
cld
adc
ret
popa
imul
or
test
fidivrs
jge
mov
repnz
sub
jge
bnd
mov
jo
hlt
mov
hlt
sub
sbb
push
sbb
out
sahf
int
push
cmp
call
scas
idivl
xchg
and
jmp
mov
fwait
or
sbb
xor
out
std
loopne
xchg
stc
push
mov
lahf
push
jns
dec
loopne
pop
cmp
push
test
popf
xor
mov
cli
call
xchg
ljmp
in
cmp
out
mov
ja
ret
pushf
push
fbld
insb
add
or
mov
imul
shll
iret
test
movsl
lods
mov
xorl
daa
cltd
xor
mov
out
pop
sub
in
inc
mov
mov
add
or
fs
sti
clc
sub
mov
int3
dec
repz
ret
mov
mov
cmp
cmpsl
sbb
stos
pop
js
or
dec
sbb
xor
test
mov
sub
cltd
mov
int
lret
xchg
adc
mov
jbe
jae
mov
sub
in
stos
add
jae
ror
push
lea
inc
jg
dec
mov
in
loope
enter
stos
push
add
in
jno
scas
pop
or
fildll
xor
jbe
xorl
and
icebp
movsb
cmpsb
inc
jmp
shlb
pusha
xchg
mov
loope
adc
cmp
cwtl
inc
and
adc
data16
add
dec
js
mov
cmp
adc
iret
std
out
lret
out
sub
or
cld
mov
xor
ljmp
mov
mov
pop
popa
mov
jmp
add
daa
or
inc
outsb
pop
adc
out
pop
mov
pop
pop
xlat
push
ljmp
das
incl
mov
push
lods
popa
xor
sub
dec
cs
cmp
jmp
test
imul
dec
add
insb
daa
and
sbb
push
adc
dec
in
loopne
jmp
jmp
adc
mov
fnstenv
sbb
scas
sbb
test
pop
out
mov
lods
mov
fldenv
pop
out
mov
fisttpll
mov
fs
pop
push
fwait
adc
mov
pop
and
xor
mov
in
add
daa
xchg
xlat
sbb
cld
test
scas
add
and
int3
sahf
out
adc
mov
push
out
lods
outsl
add
mov
sub
mov
ja
fcompl
cmp
push
popf
push
inc
data16
pop
sbb
jae
loope
lcall
insl
sub
in
cs
adc
fwait
test
or
sbb
adc
pop
xchg
outsb
daa
loop
fmull
cmp
jg
out
jge
imul
push
add
xchg
mov
fstl
cmc
repz
movsb
mov
jb
xchg
sbb
data16
mov
js
or
push
or
ljmp
shlb
aas
call
adc
cmp
push
or
xchg
cmp
mov
lret
lods
mov
xorb
cld
add
adc
pop
sti
push
sbb
rolb
je
and
adc
pop
leave
leave
leave
add
cmpsl
jns
push
in
mov
lock
mov
scas
xor
mov
dec
movsb
cmp
dec
cmp
jle
or
cld
jb
fadds
adc
jl
cmpb
fwait
inc
or
sub
mov
xor
orb
pop
and
test
outsb
push
shrl
icebp
enter
rcl
sub
jbe
bound
ret
mov
cmc
mov
xchg
loop
mov
cmp
fsubl
mov
xorl
in
inc
leave
lcall
sub
mov
jo
push
dec
nop
inc
nop
aam
cltd
fnstenv
adc
jp
adc
out
loope
or
pop
xor
jo
mov
inc
inc
or
cld
call
mov
clc
add
ficompl
cli
and
jne
addr16
fidivrl
and
pop
xor
push
stc
sbb
xchg
pop
push
jecxz
and
xor
daa
jmp
mov
and
ja
or
mov
icebp
xor
mov
and
outsl
movsb
jecxz
push
mov
jl
and
push
mov
dec
fisttpll
add
fistpl
cmp
int3
rclb
inc
in
mov
rorb
int3
iret
int3
add
dec
cltd
add
stc
movsl
scas
and
dec
jo
aas
cltd
mov
int3
push
sub
leave
inc
sbb
lds
push
push
mov
lahf
mov
inc
popf
jmp
fwait
pop
xchg
pop
test
xor
sub
and
push
mov
xor
rcrl
movsb
pop
mov
test
je
sub
loop
add
loop
and
push
ljmp
or
ljmp
inc
aas
add
pusha
pop
lock
daa
fisttpl
xchg
lods
pop
lretw
sub
inc
and
pop
fcomp
hlt
pop
adc
into
jl
inc
fldt
pop
shl
fdiv
sbb
inc
mov
push
push
pusha
inc
adc
dec
into
in
test
xchg
or
out
xchg
cmp
roll
dec
push
or
push
mov
push
fldcw
xor
test
jp
cltd
call
xor
cmpsl
ret
mov
inc
and
mov
push
addr16
fucom
sbb
jbe
sub
xor
jecxz
ja
mov
scas
ds
add
int3
push
fimuls
dec
sbb
in
jge
subb
std
lret
ja
cmpsl
fisttpl
jle
sbb
mov
cli
movsl
adc
mov
sub
int3
jns
dec
push
adc
push
ds
bnd
jno
lock
cs
cmp
push
fistpl
mov
jp
xchg
inc
mov
push
cltd
add
jge
dec
add
mov
ljmp
sbb
mov
pop
pop
mov
cmpsb
mov
dec
jne
hlt
dec
or
mov
ret
and
mov
in
js
push
xor
and
jmp
test
fnstsw
mov
mov
push
test
cmp
das
imul
push
mov
test
mov
aad
into
cmp
test
sbbb
arpl
enter
enter
sbb
fimull
mov
out
mov
scas
sbb
outsl
and
scas
icebp
push
jl
jne
cmpsb
mov
jno
xchg
jl
sub
mov
adc
dec
outsl
sub
in
vpshlb
cs
stos
mov
cmpsl
sub
js
push
pop
movsl
pushf
adc
and
dec
lock
adc
fsubrs
imul
loope
and
push
xchg
lods
mov
insb
add
test
xor
jns
divl
inc
xor
and
dec
std
sbb
movsb
pop
in
fmuls
pop
xchg
loope
out
lret
inc
pop
xor
in
jp
fs
push
push
and
or
mov
sbb
mov
dec
sub
nop
pop
lea
into
push
mov
arpl
jns
xchg
lahf
daa
xor
mov
sub
loopne
pop
and
mov
inc
add
mov
test
aam
add
xchg
mov
cmpsl
mov
lods
mov
repnz
mov
aam
push
fsubrs
loop
adc
loop
in
mov
scas
xchg
push
sub
push
xchg
scas
mov
xchg
into
hlt
push
ret
pop
frstor
shrl
aam
test
mov
scas
mov
sbb
inc
jbe
sub
cmp
aam
shrb
gs
xchg
test
insb
cmpsb
and
cmc
fists
ljmp
jge
insb
cmc
cmpsb
pop
lahf
push
aas
xorb
pop
mov
lods
ds
int
adc
adcb
nop
pop
loopne
loopne
inc
andl
leave
or
push
xchg
lret
jmp
xlat
rorb
add
call
mov
sub
push
flds
insl
push
mov
push
lahf
adc
sbb
inc
pop
push
xor
subl
into
sub
loope
inc
pop
icebp
jle
inc
dec
mov
inc
adc
adc
sarb
rcll
notb
aaa
or
jl
movsb
push
int3
push
xor
ja
cmc
rcrb
sahf
mov
gs
mov
jae
push
leave
xchg
add
bnd
cwtl
shr
data16
sbb
lcall
cmp
add
dec
xor
or
mov
mov
in
lahf
scas
inc
clc
fs
cmp
outsb
insb
xchg
into
out
out
movsl
jns
push
inc
pop
lods
xchg
loop
out
xor
rolb
jne
adc
ljmp
cmp
into
aam
sbb
sti
lea
xor
add
vmwrite
mov
cwtl
test
jno
mov
xchg
xchg
lods
jl
inc
sub
iret
dec
jae
dec
mov
mov
xchg
pop
fwait
dec
push
jnp
mov
repnz
dec
jge
movsb
xchg
pop
lea
push
dec
rcrb
pop
jg
add
or
inc
pop
pop
lds
lret
mov
mov
lcall
sub
fs
jb
mov
imul
jo
and
add
dec
fcoms
push
int3
inc
push
inc
in
mov
mov
in
inc
rorl
cltd
xor
dec
aam
jp
inc
out
dec
lret
sbb
jmp
ja
mov
out
out
jno
xor
sub
dec
pop
repz
outsl
in
push
movsb
mov
push
cld
icebp
in
mov
or
imul
std
fnsave
insl
pop
ret
repz
cld
pop
or
jns
and
inc
sbb
mov
mov
add
stos
mov
insb
cmpsb
pop
pop
test
mov
xchg
adc
arpl
push
imul
mov
nop
and
test
dec
mov
mov
push
cwtl
add
mov
popf
xor
mov
jo
and
pop
idiv
pop
push
pusha
je
dec
ljmp
add
push
xor
fidivrl
mov
rcll
popa
scas
movb
pop
rolb
lds
mov
stos
and
and
js
shl
jae
xchg
iret
movsl
push
jae
mov
stos
movsb
or
enter
test
xchg
rclb
dec
mov
aad
cmc
loope
sub
out
sbb
inc
dec
fsubp
inc
mov
cmp
inc
jmp
in
dec
mov
inc
xor
cmp
lods
call
mov
xor
std
adc
add
jae
cmp
inc
jmp
test
clc
sbb
insb
xor
jnp
test
sbb
inc
jae
movsb
pop
loopne
adc
sbb
scas
pop
dec
bswap
pop
push
dec
repnz
fisubrl
mov
lds
or
xchg
daa
xchg
dec
and
mov
push
push
pop
dec
sub
jmp
roll
cmp
or
nop
aam
sub
mov
push
mov
fidivrs
mov
pushf
je
pushf
imul
jp
push
addr16
xchg
leave
notl
mov
push
cmp
sub
mov
int3
pop
mov
push
bnd
ret
les
test
rcr
mov
mov
int
call
mov
sarl
mov
cmp
sub
pop
andl
mov
jo
loop
ja
std
add
sub
cmp
test
stos
fcomps
fdivs
mov
scas
stos
mul
stos
iret
daa
inc
repnz
les
adc
sub
pop
sbb
inc
pushf
jmp
in
sbb
mov
inc
daa
lret
inc
mov
mov
and
dec
aas
in
push
aas
stc
repz
out
cmpsb
stos
sub
inc
sub
ja
push
xchg
pushf
and
ret
adc
xchg
cmpsl
ret
xor
pop
cmpsb
cmp
cmp
test
and
jb
clc
rcl
pop
or
dec
aas
jne
mov
cmp
mov
mov
pop
sti
pop
add
mov
and
mov
inc
roll
sbb
call
pop
stos
pushf
lcall
fmuls
pop
or
fiaddl
push
lock
cmp
cltd
mov
and
je
and
scas
call
aam
sbb
mov
bound
test
or
jl
cli
push
mov
lret
xor
loop
inc
fsts
sub
jmp
xor
rclb
aaa
lock
jge
push
fadd
inc
lea
jl
loopne
imull
sub
insb
loopne
push
sbb
xchg
dec
xor
scas
out
cltd
and
xor
add
dec
inc
sbb
push
mov
pop
ds
jl
pop
sub
jl
into
xchg
popf
mov
mov
jae
aaa
rclb
inc
xchg
in
mov
and
fsubs
mov
in
mov
rcl
outsl
xorl
movl
ljmp
mov
ss
imul
repz
jae
mov
or
in
sub
sarb
ljmp
sub
xor
inc
int3
mov
cld
adc
mov
rorl
mov
jmp
fadd
jmp
cmc
push
out
push
lods
out
inc
enter
jno
sbb
test
mov
adc
add
add
mov
jmp
shrl
ret
ret
push
jb
imul
mov
mov
pop
filds
insb
leave
dec
aaa
stos
mov
stos
addr16
test
imul
imul
add
mov
rcr
das
pushf
xor
fisttps
xor
adcb
adc
dec
aas
clc
lds
push
enter
and
jae
sbb
mov
pop
cmpsb
std
add
fs
imul
mov
push
shrd
cmp
jno
and
bound
loopne
push
imul
shrl
in
pop
pop
mov
jb
jae
sbb
jns
dec
cmp
outsb
jp
cld
out
mov
xchg
fnsave
mov
mov
mov
cmc
std
iret
pop
mov
sbbb
xchg
sub
pop
inc
frstor
fs
dec
dec
rcll
push
or
aas
fcmovb
dec
sbb
gs
or
pusha
repz
mov
lods
pop
mov
add
inc
mov
insl
mov
pop
xorl
xchg
push
dec
push
sub
in
movsl
call
xchg
and
fcompl
sub
pushf
es
into
in
mov
in
xchg
scas
mov
scas
fwait
sbbl
es
xchg
lds
xor
mov
push
lods
insl
rolb
push
adc
push
arpl
push
mov
lret
xlat
push
push
std
jmp
ret
in
mov
mov
jecxz
cli
dec
lea
push
dec
rorb
pop
adc
shlb
bound
mov
in
loopne
mov
add
testb
adcw
loopne
shrl
or
push
xlat
cmc
mov
adc
test
push
rcll
popf
xor
and
test
outsb
lods
insb
fldcw
sbb
add
cmpsb
sti
mov
inc
mov
pop
jl
insb
push
mov
fwait
add
popa
jne
mov
sti
aaa
jp
and
xor
movsb
insb
sub
es
divb
popf
fwait
sub
aam
mov
xor
pop
lcall
add
pop
xchg
push
push
adc
pop
nop
and
push
sahf
push
sbb
dec
xor
add
cmp
stc
lock
add
cmp
inc
push
das
sti
fimuls
push
pushf
mov
xor
inc
test
dec
adc
dec
nop
or
fwait
jb
push
sub
int
dec
jno
jno
je
and
xadd
ret
mov
mov
popf
cltd
mov
fnsave
fcoml
pop
test
xchg
rorb
movb
ja
jle
push
inc
fnstsw
sub
fwait
pop
and
adc
and
jno
ljmp
push
and
inc
test
mov
xchg
mov
imul
cmpsb
cmpsb
inc
inc
arpl
mov
jbe
cmp
cmp
jge
les
cmp
inc
movsb
cmpsl
cmp
pusha
rcrl
inc
fistps
cmp
dec
push
ss
outsb
xchg
loop
xchg
sbbl
test
es
sbb
pusha
mov
push
psrlq
pop
sub
loope
and
push
mov
nop
lods
cmp
pop
cmp
xchg
xor
fadd
mov
arpl
pop
fwait
cmp
scas
cmp
clc
mov
leave
jmp
aaa
rcrb
shrb
cmp
and
rorl
mov
sbb
sti
push
cmc
pop
sbbl
mov
fimull
adc
jne
mov
cmp
or
or
mov
mov
hlt
mov
popf
mov
lods
dec
xlat
pop
inc
lret
roll
mov
out
pop
and
cmp
inc
test
arpl
or
mov
in
pop
or
xor
xchg
and
and
jl
or
loop
dec
sub
mov
insl
addb
lea
xor
cli
es
pusha
lahf
or
sub
fsubrl
inc
shufps
cmp
jecxz
jmp
jnp
dec
repz
and
mov
out
test
rol
mov
incl
push
cmpsb
es
subl
pop
dec
ficomps
les
lcall
gs
pop
pop
lgs
sbb
aas
in
mov
aaa
jge
and
mov
stos
lea
aad
andl
fdivrp
in
pop
adc
sbb
fisttps
das
sbb
dec
sti
dec
inc
aad
lea
jp
pushf
iret
sub
xor
sub
and
jb
in
lea
jbe
xchg
cmpsb
adc
jbe
sbb
pop
xchg
scas
ljmp
cmp
sarl
or
jle
and
mov
push
imul
into
in
sbb
movsl
es
bound
add
fdivr
loop
push
and
outsb
scas
stos
xor
mov
pop
inc
mov
push
aaa
xchg
lret
lret
adc
inc
insb
jno
sub
out
xabort
scas
push
sbbb
in
sbb
mov
fsub
dec
out
push
add
roll
lretw
mov
in
jmp
pop
push
pop
dec
scas
gs
pushf
inc
mov
rcll
movl
insb
divl
mov
ret
scas
lea
mov
in
and
push
imul
loope
lcall
dec
pop
call
stc
lahf
cs
xor
xor
sbb
lahf
cmp
push
mov
loopne
stc
lahf
inc
jb,pt
fidivrl
adc
inc
out
leave
rcll
dec
sbbl
sbb
mov
mov
call
push
cmp
add
inc
lods
jg
or
jecxz
xor
loop
ss
cmp
pop
and
mov
lcall
or
or
cs
sub
mov
je
ret
push
enter
out
movsl
sahf
xchg
inc
addr16
cmp
or
mov
andb
sbbl
or
loopne
sbb
pop
sti
leave
jb
xor
dec
mov
add
les
and
sbb
je
cmp
out
pop
pop
mov
ss
jb
adc
cmp
lret
cmpl
iret
pop
cmp
push
orl
stos
insl
js
lods
loop
mov
out
mov
jne
out
xchg
les
repz
mov
and
adc
test
fildl
frstpm(287
cmpsb
ljmp
lea
xchg
aas
jns
cwtl
jmp
ss
cmpsb
push
sahf
sbb
insb
les
iret
sbb
rcrb
push
es
icebp
addr16
int
xchg
pop
out
je
mov
lret
sub
sub
jg
sahf
jne
dec
mov
dec
loope
call
sub
test
rol
jl
lock
test
frstor
sub
lock
cltd
add
xchg
stos
mov
push
dec
popf
cwtl
scas
push
lds
mov
xor
popa
cmpsb
pop
dec
fisubl
push
fincstp
dec
mov
cmp
andb
mov
lahf
psubsb
xor
ret
repz
xor
shl
sahf
lock
fstl
mull
add
xchg
adc
mov
jmp
imul
jge
pop
xor
jge
cli
lahf
jl
jae
add
jecxz
xchg
fiadds
cmpsb
stos
fcoml
xchg
cld
xor
jge
mov
lods
push
cmpsb
jne
jae
and
dec
pop
cmp
ret
add
movsb
lds
scas
aad
gs
and
or
in
cmp
jbe
sbb
jnp
andl
add
orl
enter
aad
sahf
inc
push
mov
dec
pusha
inc
fwait
ss
pushf
imul
jo
push
aas
std
push
jb
dec
sbbb
jno
movsb
mov
and
lods
and
cmpsl
jno
fsubrp
mov
ds
adc
ja
js
cmp
rcrl
xchg
in
dec
aam
fldl
xchg
cld
fimull
sahf
jmp
xchg
xchg
rol
daa
insl
aad
shlb
pop
ljmp
jb
mov
out
mov
pop
mov
jecxz
mov
dec
adc
push
xchg
sti
mov
loopne
in
adc
adc
popf
in
mov
popa
push
sub
pop
mov
add
lock
xor
mov
mov
xchg
ljmp
push
test
scas
mov
gs
push
adc
ds
pop
or
rcrb
fstps
lret
fimull
lods
sbb
inc
in
add
push
dec
mov
cmp
push
cmp
shll
sbb
sub
cmp
adc
cwtl
inc
cwtl
and
xchg
sub
std
fwait
rcr
and
xchg
cmpsb
mov
mov
add
call
notl
inc
test
loope
fisttpll
cs
ja,pt
dec
jb
rcl
loope
lret
mov
dec
es
fs
test
mov
cmpsb
test
in
shll
dec
lret
fisttps
outsb
push
and
mov
jl
jle
cmp
xor
mov
add
aad
cltd
test
aas
ffree
jb
mov
sub
pop
sahf
test
jae
test
xchg
sub
enter
xor
push
addr16
sahf
jmp
and
inc
or
sbb
ja
xor
inc
mov
jae
aaa
jns
and
ss
sahf
cltd
in
xor
pop
push
lods
xchg
jns
pop
push
push
inc
negb
stos
jns
in
cltd
data16
les
out
xor
xor
out
or
out
add
inc
enter
xchg
cmpb
xchg
mov
push
shll
push
fmul
sbb
mov
das
jge
cmp
stos
pusha
popa
mov
jae
out
push
add
mov
push
ljmp
mov
xorb
lret
imul
ljmp
aas
adc
rcrb
pop
xlat
cltd
out
loopne
in
rolb
cmp
adcb
cs
mov
or
repnz
imul
repz
loopne
mov
push
or
dec
xchg
xchg
mov
jne
faddp
or
mov
push
mov
mov
push
fnstcw
mov
xchg
xchg
xchg
sarl
push
push
iret
nop
ret
xchg
jne
sahf
inc
mov
mov
mov
mov
cs
jns
test
out
into
mov
xor
pop
repnz
or
lcall
pop
sub
roll
inc
add
aam
add
icebp
xlat
and
xor
mov
mov
ret
pop
add
dec
sbb
jge
xor
or
daa
lea
popa
mov
mov
cmp
jo
sub
sbb
pop
or
mov
push
cmp
pop
cs
xor
mov
cmp
add
xor
or
dec
xchg
popf
mov
cmp
push
fmulp
popa
test
mov
cltd
cmp
aaa
dec
xchg
popa
mov
in
pop
jl
test
mov
fcmovnb
hlt
fisubrl
mov
pushf
or
dec
jl,pn
dec
shl
add
mov
test
sub
lods
stos
cmp
movsb
rcrl
neg
in
pop
mov
adc
xor
pop
jno
xchg
and
iret
adc
sub
in
loope
filds
jmp
pop
cmpsl
lcall
adc
sub
or
add
movl
mov
push
push
adc
lret
jo
lcall
push
pop
xchg
pop
jle
push
daa
push
mov
ss
ja
int3
fnstsw
jno
mov
push
vunpckhps
add
sti
das
pop
push
xlat
push
pop
and
sbb
mov
fisubs
mov
xor
subb
push
lahf
adc
mov
push
xor
add
cmc
lret
xor
lods
ss
scas
loope
hlt
lcall
jne
and
js
mov
xchg
sti
jmp
and
mov
jo
aas
xor
sbb
imul
pop
cmpsb
cmp
push
insl
es
push
imulb
xor
mov
outsl
mov
sti
or
imulb
jno
insl
ficoml
mov
push
cmp
bound
filds
or
sub
fst
or
mov
rcrb
push
mov
sahf
mov
inc
sub
lds
int
mov
and
ljmp
movsl
rclb
add
xlat
sti
pop
sub
roll
mov
mov
incl
setnp
dec
mov
dec
and
fisubs
sbb
mov
addr16
add
xchg
jle
push
push
xchg
mov
popa
sbbl
outsb
imul
adc
pop
mov
repz
cwtl
cmp
lock
sbb
ficoms
cmp
ja
xchg
rclb
stos
lds
pop
xlat
pop
xlat
xor
repz
cs
rcrb
jbe
mov
int
cwtl
push
pushf
mov
mov
std
movsb
add
sub
dec
sub
adc
in
ds
push
out
lar
call
push
push
subb
cmpsb
or
mov
clc
cmp
jg
syscall
pop
mov
rep
or
shlb
mov
jne
in
xor
xchg
out
rcl
jbe
pop
lods
faddl
mov
adc
out
cmp
push
cmc
xchg
into
pop
cmp
leave
ret
int3
add
ja
gs
add
mov
dec
cmp
cld
ja
icebp
aaa
xchg
movsl
jbe
mov
into
inc
inc
lahf
lret
cmp
push
pop
rol
dec
mov
mov
hlt
sbb
sahf
push
fbld
or
fstpt
xlat
mov
sbb
sbb
das
call
adc
dec
stos
data16
loopne
adc
rcrl
pusha
stos
jne
mov
xor
xor
add
out
mov
mov
jno
das
sbb
push
mov
and
in
out
outsb
nop
pop
lea
inc
fmull
cmp
js
ds
sub
ret
and
and
adc
sub
aas
sub
mov
ficompl
mov
mov
fs
cli
loop
xchg
dec
jb
xor
mov
sub
xchg
mov
pop
jnp
cmp
fdivl
in
test
test
inc
adc
andb
insl
inc
adc
jge
xchg
and
mov
dec
arpl
imul
aas
and
leave
add
push
cltd
dec
or
pop
add
xor
mov
push
filds
pop
stos
and
mov
sbb
pop
pop
mov
adc
jl
mov
inc
dec
je
or
shll
out
ret
sbb
inc
imul
jns
ja
ss
fcompl
loopne
loop
dec
sahf
cmc
dec
and
cs
int3
vandnpd
shl
in
push
les
std
inc
pushf
out
inc
test
sub
mov
dec
inc
test
idivl
loope
push
adcb
in
int
push
jecxz
pop
push
push
jb
pop
lea
pop
lock
jns
cmp
sbb
mov
cmpsl
cmp
mov
mov
scas
divl
iret
cmpsl
and
out
and
scas
hlt
and
mov
adc
cmp
in
in
add
pop
mov
in
and
lock
sbb
clc
jp
in
and
cltd
cmpsl
xchg
popf
into
je
test
test
jnp
sbbl
jmp
push
dec
cmc
rolb
mov
inc
jp
in
add
ret
pop
fidivl
cli
xor
sub
enter
dec
push
into
nop
xchg
push
ss
jmp
jb
ror
pushf
dec
hlt
mov
mov
fcoml
mov
pop
out
mov
mov
stos
adc
xchg
mov
in
mov
mov
cmp
push
dec
lods
lods
dec
rolb
lret
orb
push
gs
pop
sub
mov
js
mulb
gs
ljmp
cld
insb
sub
pop
test
push
add
sti
jle
or
pop
mov
sub
sbb
add
fisubrs
pop
inc
fiaddl
or
sbb
movsl
shl
pushf
and
das
out
dec
enter
ds
sbb
fsts
lret
and
popl
int3
push
stos
add
imul
je
adcb
imul
inc
fadds
negl
sub
xchg
test
popf
rcrl
xor
xchg
dec
in
add
push
dec
pop
xchg
arpl
push
lods
jge
push
imul
ja
in
cltd
in
jmp
and
pop
mov
out
fsts
and
mov
hlt
sub
aam
jne
inc
aaa
outsb
mov
mov
nop
adc
pop
cmp
fistps
and
mov
sbb
xchg
imul
lahf
jo
cmp
into
fwait
mov
dec
fcmovnb
loope
ficompl
hlt
xchg
or
fsubrp
inc
stos
push
fwait
ljmp
xor
in
jl
mov
enter
xor
pop
mov
in
insl
cmp
xor
dec
jge
std
or
jns
jns
stc
std
scas
mov
sub
and
sub
dec
aas
iret
pushf
mov
push
enter
sbb
mov
push
cmp
adc
or
pop
cmpsb
ret
frstor
aam
fcmovne
inc
or
mov
sub
aad
xor
xchg
push
aad
xchg
mov
sbb
sti
jbe
mov
pop
jp
and
mov
shrl
and
sub
mov
push
mov
repz
imul
nop
into
sub
add
bound
sti
nop
stos
pop
frstor
lods
cld
xchg
sbb
mov
lock
andl
cld
icebp
iret
sbb
and
xor
mov
add
add
xchg
movsl
push
and
jp
rclb
popa
aam
sub
pop
out
jb
cld
lds
mov
mov
in
aad
stc
imul
rol
cli
rcrl
mov
fwait
push
leave
test
mov
loopne
and
stos
push
mov
lcall
cmp
xchg
or
insl
pushf
xchg
fs
adc
gs
fsubp
lret
mov
in
adc
daa
enter
or
fistpl
xor
pushf
jecxz
scas
sahf
rolb
adc
imul
sahf
inc
lcall
and
fwait
sub
sti
fwait
sub
xor
fld
scas
pop
inc
add
test
push
adc
das
aas
andb
push
dec
dec
popa
lods
add
pop
aam
sbb
fldcw
gs
popf
add
loop
push
mov
xor
jnp
push
xor
push
rcrb
jo
adc
inc
xchg
scas
popf
pop
fwait
push
adc
dec
popf
dec
repz
clc
push
xor
or
std
lret
mov
fidivs
mov
pop
test
cmp
bound
mov
out
sbb
jle
andl
jnp
add
dec
rcr
jecxz
jae
sbb
dec
jnp
aaa
addb
xchg
jno
mov
movsb
lods
pop
jae
dec
mov
xor
jecxz
push
inc
sahf
fwait
or
sti
daa
jecxz
in
push
or
inc
xchg
stos
cmp
clc
inc
pop
mov
cltd
ret
xchg
inc
mov
adc
std
dec
cwtl
addr16
bnd
mov
sub
pop
inc
mov
stos
adc
stc
dec
loop,pn
sbb
jge
dec
inc
mov
ja
test
dec
jo
int
scas
sahf
and
icebp
cmc
xchg
push
adc
xchg
sbb
lea
lcall
pop
cmp
in
lret
enter
add
jne
jecxz
pop
sbb
push
addb
ja
dec
ss
pop
mov
insb
mov
mov
jae
push
push
xchg
push
jge
and
arpl
mov
pop
data16
mov
notl
add
xchg
lret
enter
sbb
gs
in
into
lds
ret
sbb
lahf
mov
stos
call
or
push
sub
test
cmpsl
ja
inc
dec
pusha
mov
les
push
adc
xchg
dec
addr16
int
adc
dec
loope
sbb
aam
jae
mov
adc
ljmp
lahf
pop
andb
fucompp
dec
jecxz
mov
lock
xchg
xchg
test
fimuls
sti
insl
addl
lods
adc
fnstenv
clc
mov
cmp
jbe
mov
ret
je
mov
cmp
push
add
imul
es
mov
arpl
xorb
and
int3
data16
lock
scas
pop
frstor
fistpll
jp
pusha
xchg
ficoml
cli
cmp
inc
ljmp
xchg
ret
dec
and
cmp
fwait
movsl
rorb
xchg
sti
jge
jl
into
test
add
adc
mov
imul
mov
imul
lods
hlt
dec
testb
loope
jbe
mov
inc
dec
scas
mov
push
pop
cmp
jecxz
fld
retw
jmp
xchg
jns
push
cli
xchg
pop
push
push
xor
into
jmp
mov
adc
pop
or
jmp
push
xor
mov
cmp
js
pop
ss
pop
aad
xor
out
xlat
dec
in
movsl
push
dec
add
out
push
pop
mov
jbe
cwtl
lret
in
shrb
adc
dec
inc
ret
daa
mov
mov
cmp
mov
sub
mov
xchg
push
sub
xchg
outsl
adc
add
mov
push
cli
fwait
cmp
pop
cmp
out
dec
leave
mov
aam
test
rcl
push
sbb
cwtl
push
adc
push
push
rcll
cmp
cmp
add
dec
adc
hlt
shrb
out
sbb
xchg
pop
sub
lret
scas
cmp
sbb
das
out
xor
pushf
pushf
jp
fisubs
sub
inc
adc
aad
in
nop
scas
ret
sbb
xlat
jnp
cwtl
push
je
inc
shlb
xor
repnz
jecxz
or
js
pop
add
fstl
xchg
xchg
mov
cmpsl
int3
filds
movsb
leave
daa
lods
or
mov
inc
xchg
push
add
jbe
mov
mov
xchg
xor
pusha
jae
inc
jg
push
push
into
or
cmpsb
jmp
xchg
jle
fsubl
xchg
push
pusha
nop
sub
pop
imul
insl
pop
fnsave
jmp
cmc
lret
adc
rorl
pop
sti
movsl
inc
lea
mov
insb
inc
popf
adcb
lahf
stos
out
push
fs
sbb
gs
aas
dec
jbe
inc
int3
rorb
mov
cs
outsb
mov
mov
popa
hlt
jl
cmp
push
jecxz
push
fdivl
idiv
dec
mov
dec
inc
mov
cs
sbb
imul
adc
in
xchg
cs
pop
xor
shll
loopne
cld
pop
addr16
hlt
xchg
ljmp
push
fstpt
aad
test
imul
lret
flds
lock
mov
jp
inc
pop
sbb
stos
lea
and
repnz
mov
jg
int
mov
adc
mov
mov
inc
and
jns
int
mov
sub
cmp
imul
push
push
mov
adc
jecxz
scas
test
cmp
test
push
add
sub
and
cmp
jnp
mov
xchg
adc
push
xor
rol
pop
adc
pop
pop
mov
jecxz
lahf
xor
dec
sub
iret
mov
outsb
jns
pusha
pop
inc
bound
sbb
jbe
xchg
pusha
imul
sub
and
mov
orl
fs
pushf
rcrb
call
mov
pop
pop
xchg
xor
mov
inc
xchg
jbe
adc
xor
mov
inc
push
sub
mov
mov
pop
push
inc
pop
sub
xchg
sub
cmp
sub
test
sbb
fildll
fwait
xor
fs
pop
jbe
out
mov
push
scas
cld
sbb
mov
stos
cmp
and
push
mulb
xchg
jecxz
mov
dec
xchg
imul
fnstcw
and
push
cld
xchg
jg
lret
pop
xchg
outsl
les
aaa
add
test
addr16
out
and
push
stos
mov
in
jnp
mov
out
push
scas
lea
adc
bound
clc
inc
pop
outsl
mov
inc
stos
push
mov
insb
xchg
xor
xchg
lods
sahf
mov
mov
scas
push
adc
ja
fdiv
sbb
cmp
sub
sub
aas
ss
mov
int
mov
subl
mov
arpl
dec
inc
pop
cmp
pop
jp
pushf
out
test
jbe
into
imul
xor
jecxz
shll
idiv
push
sarl
mov
nop
dec
lahf
or
jae
je
jmp
ret
int3
gs
xchg
aam
jle
and
push
xor
jbe
dec
pop
push
pop
je
mov
stos
outsb
inc
pop
cmc
pop
mov
push
icebp
inc
mov
dec
add
adc
sahf
pop
dec
loope
mov
notl
xchg
or
out
and
fcmovnbe
movsl
mov
sub
fwait
mov
pop
scas
jns
xchg
lret
pop
or
test
push
lods
jg
jae
or
push
iret
and
xchg
push
repnz
enter
fisubs
bound
pop
or
xchg
mov
and
stos
test
mov
pusha
addr16
jle
aad
clc
pop
ficoms
jmp
fildll
xchg
lret
out
and
mov
out
xchg
mov
lods
mov
outsb
test
push
dec
std
popa
jne
movsl
sub
xchg
movsb
or
push
adc
gs
sbb
lock
int
xlat
fs
dec
xchg
push
aam
jmp
pushf
xchg
and
leave
iret
sbb
ss
lret
pop
ljmp
mov
push
fnsave
or
fdivl
loopne
sbb
pop
aas
jno
ja
dec
add
mov
and
push
ret
jnp
cmp
popw
xchg
inc
subb
scas
push
imul
mov
and
dec
jnp
inc
std
movsb
fists
int
jns
gs
adc
roll
test
andl
mov
and
lcall
das
sub
dec
dec
insb
rcrb
lods
inc
int3
pop
arpl
in
jp
mov
lret
mov
sbb
rorl
adc
pop
sub
jge
cmp
pop
scas
mov
push
mov
xor
std
jb
and
jmp
push
adc
mov
insb
into
sbbl
push
adc
push
call
repnz
xor
mov
imul
cltd
jle
push
es
in
mov
lahf
adc
and
and
mov
loop
sub
mov
arpl
add
cltd
je
push
inc
ret
rcrb
or
popa
les
jl
xchg
or
and
sub
push
pusha
adc
hlt
outsb
xor
stos
or
cmpsl
inc
mov
mov
xchg
fcomps
push
jl
pop
sbb
or
or
add
test
adc
sti
loop
jg
sub
mov
push
cmpsb
ss
pushf
mov
bound
sti
cmp
push
push
or
and
xor
insb
mov
scas
dec
test
loopne
mov
dec
lds
xor
mov
and
cmpsb
adc
clc
cmpsl
out
add
negl
jmp
loop
xchg
jne
add
call
adc
iret
cs
push
fldl
inc
rol
push
pop
adc
jg
mov
test
ficoml
add
scas
fwait
pop
imul
adc
cli
lret
xor
in
sub
add
loopne
mov
inc
in
loop
add
cwtl
fldcw
inc
pop
popa
cmovns
mov
dec
sub
shlb
aaa
fldcw
or
lret
dec
sub
sbb
mov
push
mov
pop
insl
cli
dec
xor
mov
lods
pop
rcrl
fildl
mov
xchg
adc
pop
jbe
gs
leave
stos
dec
test
in
jo
ficoms
les
mov
in
fnsave
push
add
adc
fsubrs
sbb
shl
roll
mov
sub
cwtl
arpl
and
pop
mov
mov
andl
sbb
mov
sahf
or
jg
mov
iret
mov
ficoms
popf
add
inc
xchg
repz
and
mov
mull
mov
mov
ret
cwtl
cmp
repz
sbb
add
or
xchg
xchg
xchg
sub
pop
cmpsl
and
cmpsl
mov
data16
test
push
dec
nop
shlb
xor
sbb
inc
bound
adc
cli
xchg
xchg
scas
call
insb
mov
push
lcall
xor
test
sbb
test
and
mov
insb
shr
sub
jne
jp
or
push
mov
fcmovne
dec
data16
das
dec
hlt
movsl
jg
jb
mov
insl
pop
pop
in
sub
or
xor
mov
sub
pop
inc
mov
sarl
cwtl
cltd
gs
repz
dec
cmp
scas
leave
xchg
pop
dec
sub
xor
nop
fiadds
arpl
arpl
jle
cmp
or
lods
ret
aas
fldl
mov
mov
div
mov
int
inc
das
dec
repnz
sbb
lret
mov
lea
mov
xchg
cmpsb
mov
dec
push
adc
ret
scas
insb
lret
fwait
mov
jb
lret
sub
pop
movsl
xchg
cld
mov
xchg
lret
nop
or
imul
outsb
inc
shlb
jmp
lahf
in
mov
jae
and
sub
sub
xchg
in
adc
int
xchg
add
xchg
xor
xchg
jo
jle
cmp
ss
jp
fs
nop
sbb
and
mov
call
js
fxch
mov
push
rcr
pop
mov
pop
add
or
ljmp
push
sub
enter
pop
icebp
or
cmp
mov
mov
loopne
and
mov
stos
adc
bsf
dec
ss
adc
xor
push
rcrb
mov
cmp
shll
pop
lods
mul
dec
jbe
sub
pop
in
les
dec
adc
in
nop
mov
test
cltd
cmp
dec
or
in
sbb
push
add
stos
sbb
lods
cmp
xorl
mov
or
sub
ret
push
xorl
gs
sbb
cld
inc
adc
xchg
mov
int
lock
xchg
enter
test
stos
pop
cltd
clc
call
cltd
shrb
dec
xor
or
push
popa
nop
pop
mov
xor
jo
push
mov
lea
jno
jge
and
and
stos
decb
rcll
cmpsb
mov
lret
in
mov
and
out
ds
xor
jae
jl
cmp
push
add
pop
call
addr16
jle
les
mov
sti
xor
in
adc
jae
pop
dec
ds
ret
jecxz
sub
movb
in
jge
insl
jbe
or
jp
and
test
cmp
cmp
sbb
dec
xor
nop
cld
jle
dec
sbb
sub
out
movl
sub
rcrb
adc
cwtl
rolb
push
add
test
imul
lret
into
push
out
xchg
adc
add
cmp
iret
mov
movsl
jp
push
mov
and
ljmp
rol
pop
jmp
mov
cmovae
aaa
jp
push
int
mov
pop
sbb
push
mov
in
decl
in
nop
pop
scas
cli
lahf
push
cmp
lds
jl
adc
fwait
jb
fisubrl
loop
mov
rclb
cs
lahf
mov
mov
mov
push
andl
pusha
ljmp
jle
jle
jno
add
sbb
jge
inc
outsb
gs
mov
adc
lods
shl
xchg
sbb
stc
popf
ja
fimull
xor
jae
sub
push
push
lahf
cmpb
test
jae
daa
xchg
or
mov
rolb
push
das
mov
mov
push
pop
mov
rorl
xchg
shll
inc
sub
inc
dec
jg
aad
loopne
dec
repz
loopne
adc
js
inc
iret
mov
clc
out
and
sbb
pop
push
jmp
xchg
xor
test
test
aam
or
adc
and
loopne
or
or
hlt
cli
cltd
pop
or
add
push
popa
call
fmull
in
cmp
jae
push
cs
pop
dec
add
jb
inc
inc
loope
push
or
ds
inc
jmp
arpl
fistl
push
inc
rorb
cmpsb
add
js
or
aaa
lret
cmp
fldenv
repz
or
addr16
ljmp
sub
mov
sahf
mov
cmp
add
ret
mov
cli
push
push
scas
lahf
cmp
ds
dec
popa
and
or
dec
stos
xor
adc
leave
test
sbb
cmp
sub
mov
negl
and
jge
cwtl
icebp
movsl
js
int3
aas
js
adc
push
hlt
sub
aam
mov
mov
adc
push
mov
mov
or
xor
jnp
dec
push
test
aam
add
jecxz
loop
inc
sahf
and
or
inc
hlt
fistps
rcll
in
enter
add
pop
das
push
xchg
fcmovnu
sbb
fdivrs
mov
test
and
or
xlat
push
negl
xchg
call
aas
cmp
lcall
or
in
sbb
or
push
xchg
pop
push
das
shufps
arpl
adc
outsl
dec
pop
into
mov
or
inc
mov
rcll
ljmp
dec
push
mov
inc
xchg
xor
cmp
adc
mov
subl
and
inc
test
js
jb
rcl
scas
cmp
sti
data16
xlat
jg
jp
mov
push
sbb
imull
clc
loopne
out
aas
dec
or
in
push
inc
cmc
mov
push
cmp
dec
jno
icebp
gs
mov
mov
pop
inc
adc
xor
scas
lahf
and
cmp
add
push
ja
xor
push
xor
icebp
jne
lds
fxch
mov
imul
jecxz
mov
cmp
add
fwait
out
xchg
outsb
sub
xlat
jecxz
data16
jne
xchg
mov
stos
pushf
xchg
and
lcall
aad
in
ljmp
outsb
xor
outsb
punpcklwd
push
fs
sub
filds
pop
jp
or
sbb
shll
pop
add
push
movl
ja
ds
test
std
inc
movsl
sub
add
in
daa
cwtl
mov
lcall
adc
sbb
dec
cmp
ret
mov
push
loope
adc
ror
push
movsl
filds
xchg
loope
fcomip
lcall
das
shr
mov
movsb
add
sbb
sbb
fwait
push
insb
push
xchg
add
scas
or
mov
xor
lret
subb
cli
jae
pop
scas
jno
ljmp
mov
xor
les
xor
inc
dec
or
jne
mov
arpl
repnz
or
mov
insl
rclb
pop
mov
jno
enter
xchg
ret
adc
mov
dec
push
aam
cwtl
stos
int
dec
add
in
pop
out
enter
pop
mov
sub
xchg
ljmp
xor
subl
inc
dec
int
xchg
or
mov
dec
int3
adc
sbb
sbb
lock
push
imul
mov
arpl
sub
not
loopne
mov
pop
sbb
mov
or
stc
adc
test
jmp
mov
jb
dec
call
repz
sub
arpl
ds
xor
test
hlt
ficompl
outsl
pop
dec
loop
adc
xchg
fadds
mov
sub
inc
sbb
cmp
hlt
sbb
xchg
push
xchg
mov
lods
dec
int
jb
ret
jno
push
push
insb
icebp
pop
call
xor
sbb
outsb
push
xlat
mov
out
pop
icebp
add
inc
cmpsl
in
sti
sbb
xchg
call
sbb
mov
lods
movsl
push
je
lret
mov
push
mov
fwait
push
hlt
mov
fs
stos
cmp
gs
inc
mov
sub
or
hlt
jne
inc
lea
je
cs
fiadds
popa
cmp
aas
aam
mov
pop
popa
mov
aad
mov
dec
pop
pop
sub
stos
repnz
pusha
adc
xlat
shlb
out
andl
fidivs
dec
sub
or
inc
add
mov
mov
dec
mov
mov
push
arpl
lret
xchg
cmp
pushf
mov
scas
scas
mov
xchg
mov
jg
stos
shrl
inc
insl
jecxz
and
int3
into
popa
mov
add
ret
adc
cmp
cs
into
add
fcomps
sahf
outsl
mov
test
push
xchg
xor
out
std
icebp
xor
push
out
xchg
pop
int
insb
fistpl
and
repz
repnz
leave
ss
out
sbb
rclb
out
xchg
mov
inc
test
xor
lock
lcall
lds
outsb
sti
daa
cmp
jne
jle
mov
push
dec
inc
cltd
cmpsb
inc
aam
mov
xorb
push
idivl
xlat
lds
dec
mov
mov
loopne
test
sub
push
mov
mov
adc
inc
out
loop
mov
dec
fdivrs
mov
cmpl
cvtdq2ps
mov
cli
sbb
pop
mov
jnp
mov
push
into
adc
lcallw
sbb
pop
and
adc
test
gs
adc
adc
add
repnz
add
fiadds
push
mov
stos
imul
enter
loopne
hlt
lcall
fcomi
pop
and
dec
dec
stos
leave
and
or
dec
idivl
rcrl
cmpsl
shll
lods
add
jo
jns
mov
inc
pop
add
jecxz
cld
lret
cld
push
roll
cmp
stc
add
mov
xorl
popa
andb
jo
sub
aaa
test
add
dec
inc
mov
sbb
push
mov
fldlg2
cs
inc
xchg
add
divl
nop
jecxz
mov
cmc
cmp
mov
lcall
adc
bound
data16
and
or
enter
mov
xorl
hlt
or
push
pusha
fnsave
push
je
mov
mov
add
push
jp
mov
dec
test
add
imul
mov
dec
sbb
push
loope
cs
mov
jecxz
sub
add
pop
push
add
adc
jl
push
xchg
out
adc
outsl
roll
cmpsl
scas
inc
mov
in
repnz
rcll
daa
imul
mov
jecxz
sbb
and
pop
mov
jbe
lahf
fdivs
out
cmp
js
adc
daa
fwait
scas
push
inc
push
dec
inc
sbb
add
subb
pusha
xlat
jnp
or
pop
cli
add
iret
push
mul
andb
ss
es
pop
in
ret
insl
loopne
cmp
gs
shll
push
stos
mov
stos
stos
insb
mov
lea
movsl
jle
fs
cmp
addb
push
sub
dec
add
les
insb
lods
notl
pop
pop
mov
popa
out
or
dec
out
bound
xchg
add
movsl
mov
mov
xchg
mov
add
push
mov
adc
negl
bound
movsl
xor
xchg
test
cmpsl
fwait
lea
sub
fstpl
sub
mov
das
cmpsb
aam
push
add
jae
lods
in
std
popa
mov
pop
int
push
out
and
lcall
jge
xor
add
repz
or
dec
add
or
push
jbe
push
insb
out
in
and
lahf
xor
sub
bound
mov
inc
xor
xor
imul
or
repz
sbb
and
or
imul
cmp
inc
add
cmc
out
mov
mov
mov
fiaddl
inc
mov
mov
pop
scas
data16
and
lahf
push
mov
rcrb
aam
inc
push
ljmp
stos
lds
movsl
xlat
imul
scas
sbb
xlat
ja
pop
fdivp
jb
dec
test
push
and
cmpsl
das
and
cmp
loope
loop
popa
stos
inc
es
or
mov
loopne
cmc
or
sbb
rcrl
xchg
sbbb
jbe
push
bound
movsb
jge
dec
add
insl
loop
mov
jb
jmp
add
push
sbb
xchg
popf
or
cmpsl
clc
sbb
enter
cmpsb
sub
stc
in
and
xor
inc
insb
repz
jno
pop
insl
xor
mov
cs
sbb
bound
enter
push
push
push
test
nop
stc
dec
pop
mov
sarb
stc
jecxz
ss
scas
dec
mov
push
mov
dec
and
and
push
mov
and
fsubl
sbb
jecxz
mov
push
cmp
jnp
movl
or
push
in
pop
out
cmpsb
loopne
xchg
int3
jmp
sahf
pop
mov
and
jl
out
add
sub
mov
jnp
jp
cmpxchg
jmp
mov
push
cmc
jl
lock
add
jnp
enter
mov
mov
jl
push
jo
jbe
adc
dec
jp
icebp
sub
rcrb
shll
cld
aad
inc
mov
ja
jp
mov
xchg
mov
jmp
dec
cmpsl
outsl
push
sub
mov
repz
ret
xchg
js
call
adc
jle
repz
sbbb
lds
push
jg
xor
iret
push
adc
dec
in
test
and
pop
jns
mov
sub
push
test
sbb
sub
pop
outsl
xor
xchg
xchg
pop
cmc
jae
pop
sbb
jno
xchg
sti
mov
adc
pop
imul
dec
fcoms
mov
aas
dec
or
cmc
adc
pop
sti
prefetch
or
inc
mov
outsb
xor
xor
jl
imul
rcrl
inc
cmpb
lods
dec
mov
dec
aas
inc
and
out
dec
sbb
inc
fucomip
mov
mov
add
pop
repnz
jg
xor
jg
mov
lret
mov
js
pop
and
pop
sbb
aad
fsubrl
gs
adc
sub
mov
outsl
int3
cmp
in
mov
mov
push
jne
fmul
cmpsl
and
mov
dec
aaa
jns
mov
mov
js
out
sahf
pop
xchg
xor
inc
lahf
mov
rorl
gs
inc
xor
push
and
ret
insb
dec
jp
arpl
or
fistl
cmp
cmp
inc
jp
xchg
adcl
and
mov
adc
jecxz
loope
ds
out
clc
jge
push
not
fldenv
cmpsb
or
cmp
jg
lahf
cmp
or
xchg
sub
psubsw
or
cmpsb
push
mov
inc
sbb
test
mov
sub
shrl
arpl
sub
pop
push
add
aam
loope
and
imul
inc
out
inc
inc
test
pop
insb
test
insb
jge
dec
sahf
pop
push
outsl
popa
push
mov
int
xchg
or
sub
orl
mov
jecxz
mov
fildll
xor
rclb
push
ds
adc
adc
js
movsl
or
shll
outsb
add
fcmovb
mov
push
sete
xor
ficoml
inc
inc
lret
int3
pop
lods
ja
xchg
pusha
daa
dec
sbbb
jp
out
dec
rsm
push
add
push
popa
and
adc
mov
and
test
arpl
xor
cmp
les
ficoml
cmp
imulb
mov
iret
imul
mov
add
arpl
imul
hlt
into
adc
push
sub
into
xchg
xor
insb
adcb
mov
fstpl
jb
lcall
ds
insl
jle
ss
shrl
xlat
pop
jae
cli
shll
jp
loop
ja
xchg
sbb
sbb
pushl
or
lret
xor
pop
mov
add
mov
dec
xchg
add
mov
xchg
loop
sarl
mov
mov
filds
iret
jle
inc
jecxz
fcomps
mov
lahf
sub
push
xor
dec
pop
test
pop
mov
icebp
inc
mov
ret
mov
xor
stc
sub
or
pop
pop
jns,pn
in
mov
pop
gs
cmp
push
dec
add
fnstenv
add
jne
test
xchg
outsl
ja
lret
mov
xchg
push
data16
xchg
std
ffreep
in
xchg
pop
pop
adc
jle
jae
std
pusha
pop
xchg
sbb
int
jl
ret
cltd
jne
cmp
sub
add
test
xor
mov
push
jle
or
ret
and
lods
cmp
jnp
jle
adc
fidivrl
xor
clc
push
lret
add
stos
iret
test
adc
stc
in
lret
test
xchg
lret
adc
imul
cmpl
cs
cmpsb
es
jg
ss
inc
sub
xchg
call
sbb
fisubrs
scas
dec
inc
jle
sub
call
xchg
add
push
mov
or
rorl
out
out
and
jle
jle
mov
mov
test
repnz
xchg
lods
pop
sti
pusha
mov
push
mov
mov
and
jns
popf
fucomi
jge
push
jecxz
cmpl
jns
push
xchg
xchg
xor
cs
mov
loope
gs
mov
dec
inc
pop
jl
mov
push
negb
xchg
popa
or
rcrl
lods
iret
xor
pop
into
lcall
inc
push
hlt
daa
jne
aaa
fwait
xor
sub
out
push
rcll
repnz
push
popa
gs
sbb
arpl
or
cmp
loop
and
mov
mov
pop
cwtl
pushf
cltd
xorl
testl
popf
mov
add
sti
mov
loopne
scas
dec
push
xlat
xlat
ficompl
or
ds
lods
ret
loope
jg
adc
sub
xlat
test
xchg
mov
sbb
outsb
xlat
push
cmpsl
movsb
add
mov
mov
add
sub
adc
dec
jl
cmp
pop
rcll
ficompl
pop
or
clc
jmp
shll
cltd
jle
xchg
xor
arpl
popf
arpl
shl
mov
mov
fcoms
inc
lds
lahf
adc
fnstenv
or
pusha
pop
cmp
jmp
mov
in
stc
cmp
sub
pop
lahf
mov
fwait
mov
scas
jp
adc
lea
fcoml
fadds
cwtl
xlat
lea
jg
out
test
or
xor
dec
pushf
icebp
and
pop
ljmp
sbbl
add
ret
inc
in
dec
sub
cmp
push
sar
inc
dec
iret
je
pop
xor
cmpsl
cltd
mov
test
imul
movsl
pop
fbstp
cmp
adc
and
aad
or
ja
sbb
scas
addb
push
sub
adc
mov
movsl
add
dec
and
ja
mov
js
sub
xor
inc
adc
lahf
test
jb
subb
add
pop
pop
in
adc
mov
loop
push
pop
pop
cmpsb
clc
nop
js
xchg
cmp
pop
xor
fnstenv
push
xor
testl
mov
inc
cmpsl
fcoml
test
pop
test
sbb
in
jp
cmp
mov
cld
push
popf
fdivl
rclb
mov
out
pushf
and
push
pop
sbb
ljmp
aaa
xchg
icebp
cmp
sbb
pop
mov
mov
jge
sbb
leave
aas
enter
stos
pop
xor
negl
push
jl
nop
cmp
test
stc
rorl
xchg
mov
rolb
push
mov
and
stos
pop
mov
bound
jnp
idivb
sbb
sub
adcl
xchg
mov
jno
das
movsb
sbb
mov
xchg
mov
das
call
add
pop
xor
inc
pop
fidivs
cmp
xchg
pushl
cmp
into
or
enter
xchg
inc
pop
cmpsl
movsl
ljmp
je
cmpb
imul
not
add
jp
dec
enter
fs
mov
loop
int3
ret
insb
dec
mov
jae
inc
and
pop
mov
clc
and
hlt
aas
push
pop
or
sub
pop
mov
mov
sbb
data16
inc
jbe
mov
inc
loopne
aaa
xchg
mov
mov
xchg
outsb
repnz
pop
in
fucomp
stc
cmpsl
add
std
and
and
outsl
xchg
inc
add
movsl
sub
idivb
popf
mov
xchg
sbb
sub
jns
jp
icebp
xchg
mov
sbb
andb
in
add
cmp
test
cmp
add
lret
pusha
cs
repz
and
ret
push
xor
loop
mov
cmp
cmp
lahf
pop
cmp
pop
sarl
cmp
cltd
cmp
loop
stc
lret
movsl
cmp
imul
jmp
pop
xlat
jmp
xchg
shlb
test
cli
pop
repnz
ss
and
push
or
adc
out
inc
in
repnz
mov
fnstenv
loopne
test
insl
lds
loope
cmp
push
push
rcl
cmp
ss
pop
cld
push
test
push
inc
push
inc
movsb
sti
popf
fs
pop
cmc
xor
sub
test
mov
sub
xor
sti
insl
pop
cmp
mov
incb
scas
daa
cli
dec
mov
pop
stos
call
adc
bound
mov
mov
push
out
clc
cmp
add
pop
xchg
outsl
push
inc
shrl
inc
lods
adc
sub
repz
mov
pusha
and
add
xor
push
pusha
ficoms
inc
js
xchg
jle,pn
cmp
aaa
or
xchg
and
dec
leave
xchg
outsl
sbb
lea
sarl
jne
xchg
sub
cmpsl
add
fsubrl
xlat
and
fwait
or
and
movsb
pop
inc
les
xchg
in
xchg
stos
or
push
jge
repz
in
icebp
pop
lcall
cmp
xor
mov
or
mov
mov
pop
out
repz
jbe
push
add
fstl
mov
inc
dec
or
outsb
hlt
sub
sbb
orb
sbb
aam
cld
pop
push
or
push
repnz
pop
imul
gs
mov
push
repnz
mov
cwtl
enter
test
jge
int3
inc
loope
and
cmc
mov
bnd
adc
dec
popa
fwait
jo
out
mov
inc
push
or
add
fdivrl
and
clc
popf
or
xor
dec
or
stos
mov
fs
dec
jmp
pop
mov
nop
sub
mov
jmp
cmp
mov
shlb
stos
es
arpl
xor
ds
and
pop
pop
cwtl
push
notl
stos
sbbb
and
sub
les
in
push
pop
xlat
setnp
aaa
jbe
into
cmp
into
mov
sbb
mov
movsb
pop
mov
roll
mov
inc
jle
lds
mov
inc
mov
xchg
push
je
andb
mov
xor
aad
jne
insb
add
into
rcr
int
idiv
scas
push
jnp
imul
jb
pop
je
push
fwait
pop
adc
pop
and
cwtl
mov
inc
mull
sbb
cltd
lret
clc
inc
enter
push
lahf
sub
jp
dec
xchg
sti
test
jge
add
pop
mov
and
in
mov
ja
mov
loope
aas
cli
mov
jnp
out
jge
pop
sbb
adc
pop
inc
xor
into
divl
push
xlat
add
xchg
test
outsb
sarl
mov
and
shl
or
and
adc
lcall
or
or
cld
rol
xchg
pop
and
or
dec
inc
shll
push
pop
mov
or
xchg
inc
mov
inc
fisubl
jo
rep
jno
sarb
push
fildl
aas
pop
sbb
clc
pop
dec
rcl
cmp
shlb
out
or
leave
inc
repnz
stc
mov
test
push
notb
stos
cmp
sbb
xor
mov
push
je
fs
push
push
dec
andb
addb
popa
test
push
cmp
int3
cmp
sbb
and
xchg
sbb
imul
cmp
jne
add
cmp
push
dec
loopne
or
pop
mov
dec
fisubrs
stos
pop
pop
lds
jbe
mov
push
and
andl
test
add
inc
lret
sar
int
mov
arpl
ja
cli
add
outsl
jns
stos
test
inc
js
aas
popf
aad
push
leave
push
mov
sbb
and
mov
repz
dec
leave
inc
decb
mov
fdivp
xor
lret
iret
pop
adc
inc
jmp
lods
je
or
cmp
nop
sahf
mov
clc
popf
out
pop
push
ret
je
fwait
pop
or
sbb
fmul
test
fidivrs
push
adc
fisttpll
xchg
fs
lods
mov
jmp
aam
cltd
xchg
js
pop
pop
jno
inc
xorb
mov
sub
sbb
lods
adc
mov
xchg
jb
inc
mov
jl
mov
imul
ret
xchg
jmp
and
push
jbe
dec
add
ret
lods
sahf
lock
and
cli
mov
sub
gs
pop
out
popa
icebp
pop
lods
add
sub
sahf
jae
push
sbb
cli
pop
test
ljmp
in
xchg
and
ljmp
push
fdivp
cmp
inc
jb
push
les
sbb
inc
push
filds
inc
mov
pop
mov
mov
mov
mov
jne
fdivs
sbb
mov
int3
cwtl
dec
clc
sbb
mov
and
and
add
cld
cmp
stos
out
push
cmp
aad
mov
cmp
add
scas
lret
aam
xchg
jnp
pop
push
out
mov
pushf
dec
insl
outsb
xor
and
stc
xchg
mov
or
cmp
fmull
enter
xchg
and
clc
jns
push
mull
icebp
cmp
inc
mov
adc
mov
fidivs
imul
fildl
lahf
lea
pop
or
je
movsb
arpl
cmpl
push
add
addr16
je
adc
cmpsb
iret
mov
scas
fistpl
rcll
pop
fstpt
mov
adc
std
sub
xor
push
popf
push
xchg
sbb
mov
sbb
cmp
xchg
jl
pop
lahf
je
cmp
ret
cltd
insb
jns
dec
and
lock
int3
popf
inc
push
roll
repnz
adc
mov
adc
adc
cwtl
int3
dec
test
push
cld
arpl
mov
cmpsl
lods
neg
push
lahf
ds
call
inc
lret
into
loopne
lahf
icebp
scas
lahf
and
jns
xchg
in
imull
inc
pushf
repnz
orl
shlb
xchg
inc
jns
mov
mov
sub
xor
mov
das
mov
rorl
mov
pop
lock
icebp
mov
in
jo
sub
push
push
jo
xchg
jmp
sub
daa
icebp
cmp
loopne
cmc
clc
pop
outsb
cwtl
jl
mov
jp
stos
sti
sbb
xchg
lret
cmpsl
repz
cltd
xor
data16
mov
lahf
push
stc
xchg
xlat
rcrl
in
add
int
fidivrl
adc
fisttpl
daa
aam
xchg
sarb
push
xor
call
in
jecxz
fcomp
leave
xchg
sar
xchg
cli
flds
cld
inc
mov
lds
nop
push
arpl
ret
adc
inc
jmp
xchg
fbld
std
scas
lret
jne
gs
lds
ret
scas
push
cmp
sbb
xchg
outsb
test
aaa
ret
sub
mov
xor
pop
aad
ficoms
test
scas
adc
filds
in
repz
mov
fucompp
daa
mov
push
dec
data16
jge
mov
inc
sbb
js
jecxz
xor
lds
push
jno
rorl
inc
clc
fldl
jge
add
mov
cli
out
andb
mov
ljmp
mov
xchg
iret
pusha
push
aad
stos
clc
jb
insb
rcrb
out
sbb
push
pop
xchg
fstl
dec
aad
xlat
loope
aam
out
loopne
sar
lret
add
xor
cmp
xchg
pushf
fwait
sbb
adc
cmp
pusha
push
sub
lahf
sbb
cmp
fs
or
arpl
or
push
adc
xchg
ja
push
addr16
jo
fwait
and
pop
add
pop
stos
add
jl
jbe
mov
dec
mov
enter
mov
lret
icebp
js
pop
lock
movsb
sub
addl
mov
inc
fsubrs
lret
jne
or
or
fstenv
jns
mov
sub
repz
stos
push
xchg
pop
inc
jecxz
inc
sbb
inc
fmull
arpl
idivl
sub
add
movl
or
pop
mov
sbb
inc
mov
mov
ret
pusha
sahf
jb
repz
lds
push
or
push
stc
mov
cmpsl
icebp
inc
pop
cmp
mov
test
push
inc
push
gs
and
jae
lods
push
sub
es
pop
or
xchg
jecxz
or
ror
sub
add
aas
mov
push
insb
push
rcrb
cmp
inc
std
add
pop
and
xor
cmp
and
iret
mov
inc
clc
shrl
sbb
lods
outsb
scas
push
lret
ret
ret
sub
loop
lahf
sarl
mov
pop
dec
cli
cwtl
fildll
mov
push
or
call
cli
aaa
xchg
outsl
or
adc
dec
lods
stos
pop
les
jp
roll
in
mov
lret
out
daa
mov
dec
push
mov
push
pushw
adc
loope
dec
mov
fucomip
movsb
push
inc
sbb
jecxz
out
sbbb
adc
dec
xchg
cltd
cli
mov
dec
and
jo
dec
iret
ss
loop
jae
pusha
mov
mov
nop
enter
lock
andl
out
rcr
stc
rol
xor
loope
js
inc
pop
stos
gs
mov
jmp
lock
xchg
clc
leave
lcall
add
and
cwtl
into
cmp
loopne
out
xlat
cmpsl
sahf
insl
data16
xchg
sbb
stos
lock
aam
xchg
fcoms
test
add
xchg
bnd
insl
andb
movsl
in
inc
jb
scas
mov
gs
jp
pop
into
or
push
mov
les
je
mov
cltd
divb
shlb
jge
mov
arpl
fsubrl
pop
jg
xor
dec
test
push
mov
sub
pop
xor
jp
and
sbb
dec
mov
inc
xchg
divl
xor
lret
mov
ficomps
sub
ret
add
xlat
arpl
push
inc
stos
push
inc
dec
jns
xchg
test
xlat
fisttpll
xor
pusha
mov
fs
pop
sbb
push
pop
loop
lret
jbe
and
icebp
xor
fldt
mov
adc
pop
movsl
fstl
jmp
fisubs
in
clc
xlat
sbb
xchg
icebp
sti
xchg
jge
sbb
sbb
les
jno
pop
pop
jecxz
dec
push
test
jne
int
xchg
xor
mov
nop
cmc
or
inc
or
sub
pop
adc
cmpsl
xor
xor
xchg
mov
stc
jp
dec
xchg
sbb
sub
out
hlt
xchg
sub
sti
push
icebp
icebp
mov
mov
sbbl
fs
cmp
test
icebp
mov
sar
inc
mov
ret
xchg
lock
add
push
cld
add
mov
dec
les
adc
lds
scas
inc
xchg
add
mov
xchg
test
lock
popa
imul
lret
jno
ljmp
fnsave
fiadds
jmp
test
popa
and
xchg
dec
add
push
test
ficomps
fwait
pop
mov
pushf
decl
loopne
jp
ret
push
dec
adc
rorb
cmp
jmp
or
fdivrs
in
nop
jb
push
dec
push
lcall
rolb
push
mov
xchg
fdivr
mov
and
stos
fstpl
cmpsl
fldcw
inc
add
mov
movsb
movsl
and
lods
mov
jmp
out
ret
fwait
dec
lret
cli
loope
daa
hlt
int
lahf
scas
jo
xchg
add
pop
mov
pop
shll
adc
test
incb
idivb
in
push
stos
push
cmp
es
or
add
popa
mov
add
inc
fwait
cmp
and
jno
sets
mov
jbe
mov
pop
and
add
mov
arpl
jns
lods
cmpsl
mov
adc
or
dec
sub
inc
mov
repz
push
add
gs
mov
cmc
cmp
mov
push
lahf
sbb
mov
xchg
pusha
loopne
push
test
pop
inc
jmp
cmp
mov
push
lcall
jg
mov
in
jnp
push
repz
add
inc
or
stc
xchg
es
inc
pop
cld
xorl
test
nop
jmp
xchg
pop
mov
pop
cld
dec
jnp
ljmp
mov
add
or
sarb
xchg
dec
fcoml
xlat
xchg
test
fldcw
fld
enter
aam
jle
xchg
ds
push
repz
mov
cmpsl
in
mov
scas
add
push
mov
inc
lods
and
add
and
lea
fsubrs
sbb
pop
pop
sbb
pop
lahf
outsb
mov
sbb
sub
cmpsl
push
repz
int
gs
and
mov
or
sti
imul
fs
mov
ror
call
stos
adc
inc
jo
mov
inc
xor
xor
sbb
rclb
scas
dec
cmpsb
dec
addr16
inc
jnp
sbb
lret
cmp
fstpl
int
xor
push
idivl
testl
lods
cmpsl
jecxz
cmpsb
roll
jmp
cmpsl
fsubrp
in
fwait
in
push
addr16
sbb
stos
test
add
ljmp
fst
into
and
inc
bswap
outsb
stos
mov
mov
icebp
dec
jp
test
mov
mov
jmp
scas
loop
sbb
das
mov
aam
icebp
add
loopne
pop
movsl
dec
mov
cwtl
or
jp
insl
cmpsl
push
ret
sub
mov
mov
outsl
sbb
in
shlb
lahf
pop
fisubrs
push
fnstcw
xor
jp
lods
and
push
pop
imul
xchg
cmpsl
sub
jmp
jmp
cwtl
mov
subl
mov
sbb
sbb
rclb
or
jns
pop
sbb
add
jge
sub
mov
add
popl
dec
out
scas
jmp
sbb
sbb
jle
mov
fs
sub
mov
arpl
cmp
inc
daa
inc
movl
iret
jb
add
pop
lahf
xchg
ljmp
fidivrl
loop
cmpsb
and
push
jle
cmovae
push
es
pop
cmp
cmp
pop
aaa
dec
lods
daa
idivl
adc
push
loop
jne
cmp
mov
xlat
mov
cmc
mov
inc
or
in
mov
mov
mov
les
and
inc
test
pop
dec
push
pop
out
mov
mov
jno
add
popa
into
aad
jle
xchg
jg
mov
lock
addr16
xchg
daa
mov
xor
fmul
mov
lds
test
addl
rcrl
sub
mov
test
push
adc
adc
xlat
jno
dec
cmpsb
push
ja
xchg
notb
imul
loop
ljmp
pop
inc
fists
mov
divb
and
and
rcrl
sahf
jge
dec
adc
mov
mov
pop
sub
xlat
dec
cld
sbb
fisttps
mov
push
dec
inc
dec
or
subl
jae
sbb
sbb
loopne
lds
leave
cltd
xchg
add
hlt
and
jmp
dec
add
push
data16
repz
sbb
fstpt
jo
mov
push
js
sbb
sub
xchg
dec
cmc
cmp
fcompl
push
and
xchg
pop
sub
jnp
pop
shlb
inc
push
dec
rclb
fincstp
inc
ret
pop
adc
mov
hlt
xlat
ljmp
jb
loopne
add
out
in
jbe
out
pop
mov
out
mov
lea
or
ror
aad
imul
adc
in
adc
sbb
loopne
xchg
es
mov
and
and
inc
rorb
mov
adc
cmp
and
insb
mov
pusha
pop
sub
ret
inc
sahf
aad
int
push
xchg
mov
pop
sub
bound
ss
jg
test
stc
mov
push
fistpll
cld
out
ja
push
xchg
xor
mov
dec
mov
shlb
dec
pusha
and
adc
push
imul
hlt
mov
lds
add
mov
js
jp
xorb
data16
xchg
mov
push
pop
pop
shl
decl
xchg
outsb
sbb
psllw
adc
push
shlb
je
inc
inc
xlat
lds
and
or
sbb
xorl
or
inc
mov
ds
insb
push
pushf
mov
cmp
jl
or
sbb
out
mov
sti
pop
fldcw
mov
sub
aam
mov
pop
int
jns
fcomi
pop
adc
sbb
mov
into
outsl
sub
mov
pusha
xor
lret
testl
pop
mov
fcompl
push
xor
imul
push
aaa
xchg
and
xchg
jg
popf
inc
shl
ljmp
xchg
push
jg
xchg
dec
pusha
mov
outsl
jo
jmp
negl
push
xorl
xchg
lret
ret
add
orb
push
mov
xchg
std
sub
sbb
dec
sub
and
jl
movsb
add
icebp
dec
xlat
xor
leave
cmp
mov
jl
push
outsb
jle
adc
sbb
lds
inc
push
mov
and
jp
inc
out
push
cmp
ficoml
cltd
movsb
cmpsl
enter
sbb
push
leave
pop
cmpl
mov
push
xor
inc
jp
dec
mov
es
sbb
pop
roll
subl
aaa
sbb
dec
nop
in
push
dec
ja
mov
inc
out
jbe
imul
ljmp
dec
adc
ret
cltd
dec
sub
sub
test
cmp
fs
enter
lock
push
test
cmp
push
mov
xlat
xchg
mov
in
cs
cmp
lret
aaa
das
sbb
popf
jl
call
repnz
in
mov
pop
test
mov
push
add
mulb
mov
and
sbb
mov
fs
mov
sub
add
inc
test
ds
xchg
cs
scas
sbb
ret
push
pop
jmp
aam
in
popa
iret
add
out
ljmp
ja
cmp
iret
dec
mov
push
push
out
jg
insb
jns
adc
cmp
mov
mov
mov
mov
and
insl
cmp
mov
push
sub
les
dec
js
popa
paddb
mov
int3
imull
js
enter
ret
imul
ss
jns
imul
xchg
mov
pop
call
fildll
adc
popf
popa
call
jnp
jno
jb
iret
repz
adc
in
inc
cmpb
xchg
repnz
int3
sbb
inc
jae
sbb
fs
leave
cld
mov
shrl
cli
daa
mov
out
jo
push
dec
xchg
cmpsl
das
or
or
mov
clc
push
clc
inc
sub
cmp
xchg
test
data16
dec
les
bound
jg
jle
movsb
fs
sub
lcall
sbb
sbb
out
xlat
inc
jo
movl
dec
mov
adcb
and
mov
gs
popfw
jo
sub
daa
add
mov
mov
mov
in
xchg
push
mov
pop
push
jns
das
jmp
aas
inc
lcall
pop
ja
dec
push
xor
inc
mov
movsl
repz
ds
jbe
pop
push
add
xchg
lods
and
sub
fisubl
jb
mov
jle
mov
repz
ja
mov
xor
subb
rcr
scas
xor
xor
mov
add
shll
push
sbb
lock
inc
outsb
jp
cmpsb
fidivs
pop
pop
ja
fidivl
addr16
dec
mov
arpl
mov
orl
leave
imul
mov
out
and
lock
jle
ja
cltd
ret
push
mov
lcall
lea
xor
mov
mov
ljmp
push
dec
xlat
ret
fucomp
andl
inc
jp
imul
movsw
movsb
setl
mov
mov
aam
jmp
repz
outsl
setbe
jo
leave
fimull
inc
mov
adc
es
adc
mov
arpl
adc
je
mov
pop
cmp
int3
xchg
shll
sarb
xor
cld
fcoms
mov
mov
push
cmp
add
pop
and
mov
dec
mov
std
cmpb
pusha
mov
jg
pop
es
push
inc
scas
pushf
loope
stos
sub
stos
xor
pop
je
in
xchg
cli
gs
stos
lret
adcl
into
jmp
xor
hlt
scas
fld1
push
test
jne
movsb
mov
add
and
loopne
dec
adc
loopne
and
outsb
sti
cmp
or
cmp
sbb
xchg
in
lds
mov
fnstenv
cmpsb
mov
in
add
sahf
mov
add
xchg
pop
arpl
inc
and
mov
xor
cld
bound
jnp
mov
push
sub
pop
fcomps
data16
and
addr16
sbb
lret
popl
mov
scas
pop
adc
sarb
shlb
inc
loope
daa
jp
mov
pop
mov
jns
pop
gs
jmp
sbb
mov
mov
mov
sbb
out
pop
cwtl
loop
sbb
stos
lea
mov
jl
in
jl
xchg
cmp
cmp
std
mov
mov
in
dec
in
or
cld
inc
jne
rorb
adc
add
das
je
push
cli
iret
shll
mov
aaa
in
jecxz
aam
and
push
mov
lds
fcmovb
mov
hlt
imul
in
in
int3
sub
push
ret
cmp
shlb
shrl
mov
lods
sub
movsl
movsb
fcoms
in
cli
stos
lock
xor
js
sub
sub
mov
and
sub
fidivrl
les
sbb
loop
adc
ret
addl
rclb
and
les
cmp
add
and
mov
je
jecxz
addr16
fists
call
in
addr16
dec
push
andb
ret
lock
addb
nop
mov
ret
in
xchg
mov
mov
shl
mov
add
test
adc
movsl
mov
add
cmp
or
push
leave
cmp
aad
add
nop
mov
js
dec
adc
xor
test
jecxz
add
mov
or
mov
jl
int
xor
xor
dec
push
in
push
and
out
mov
out
inc
data16
push
ficoml
xchg
jno
cmp
dec
aam
fidivl
push
pop
sub
ja
in
push
pop
std
repnz
xor
inc
cwtl
stos
pusha
in
lods
push
orb
test
inc
and
xor
fwait
aam
fsubrs
in
stos
jo
cmp
jl
outsl
cli
jge
cld
lcall
sti
inc
xor
xor
adc
js
lea
into
mov
jl
ja
mov
pop
xor
cmpsb
mov
dec
jg
icebp
cld
jg
sti
lret
into
cwtl
pop
ds
dec
lock
inc
int3
adc
shr
fcoml
test
shll
cmp
add
xchg
movsl
and
mov
mov
negb
add
repz
pop
xor
cmpsb
gs
data16
int
add
fcom
xchg
mov
daa
es
mov
ds
cmpb
mov
fisttpll
push
mov
lock
adcl
notb
jge
cmp
incl
mov
fildll
insb
mov
cmp
cld
or
into
or
push
rcr
test
out
pop
cmp
and
and
mov
push
shlb
ds
mov
pushf
out
mov
inc
or
xchg
cmp
test
mov
push
sbb
imul
or
lahf
mov
mov
ret
cmp
mov
jp
sti
or
sbb
test
into
out
pop
cmp
stc
and
scas
clc
xchg
add
cwtl
in
lods
ret
adc
adc
push
scas
aas
mov
fildl
test
xchg
dec
cmp
add
fiaddl
ss
mov
jge
mov
lret
push
mov
daa
fiaddl
or
and
lds
mov
lds
cmp
aam
inc
cmp
nop
insl
cmc
sbb
cmp
cmp
jg
cmpsl
popf
mov
jns
xchg
stos
lods
movsb
xor
loope
pop
sbb
jle
xor
sbb
xchg
testb
mov
cltd
jnp
mov
ja
mov
push
sub
add
sbb
bound
sub
dec
mov
mov
hlt
movsl
int3
jb
pop
xor
adc
inc
imul
sub
cmc
rorl
cwtl
jmp
push
and
pushf
pop
cld
cmpsb
inc
add
imul
stos
push
inc
cmp
xchg
clc
cmpsb
cmc
shr
addb
loopne
cltd
scas
daa
in
or
movsl
int
hlt
push
insl
lret
das
fidivrl
insl
cmpsb
movb
movl
push
push
arpl
adc
ror
pop
cld
dec
add
mov
js
movsb
dec
outsl
cwtl
mov
sbb
pop
outsb
sub
jmp
jae
lret
sub
sti
lret
sti
mov
adc
sbb
sbb
dec
xlat
lds
ret
in
lcall
inc
iret
mov
push
sahf
lods
pop
push
rcl
decb
add
fmul
mov
or
mov
aas
add
fstpt
mov
mov
roll
cmc
push
dec
push
mov
xchg
dec
pusha
std
cmp
cmp
push
fwait
pop
out
insl
dec
cmp
dec
repnz
das
xor
mov
negb
aas
rcrl
xor
adc
mov
pop
xchg
and
push
inc
aaa
fldt
lret
pop
cli
into
adc
mov
mov
push
push
leave
ret
hlt
push
or
movsl
imul
xchg
adc
rorl
test
loop
pop
inc
imul
stos
adc
xchg
xchg
mov
xchg
mov
pop
inc
dec
or
scas
xlat
mov
lea
mov
lds
pop
mov
cwtl
adc
push
es
sub
mov
scas
mov
es
inc
inc
push
jecxz
rcrb
in
add
daa
cs
and
ja
shrl
mov
aam
jb
xchg
sets
mov
sbb
out
fists
shlb
jge
aas
mov
add
cltd
mov
ficoml
xor
sti
xor
jb
ret
dec
or
xchg
sbb
and
imul
adc
inc
sbb
jbe
or
in
ret
shll
repz
pop
pop
jb
andps
lock
pop
xchg
mov
shlb
incl
fmul
into
inc
scas
ret
sahf
inc
jb
adc
mov
xchg
push
jmp
xorb
mov
cmp
stos
push
enter
dec
out
popa
jns
push
jb
jbe,pn
roll
je
xchg
xchg
cwtl
mov
push
xor
out
fadd
cmpsb
ds
les
leave
push
int3
inc
addr16
xor
ret
into
inc
cltd
sub
adc
push
leave
cmp
test
jnp
and
sbb
and
jmp
lret
fmul
movsb
pusha
push
xor
test
push
mov
stos
fadd
decb
cmp
mov
movsb
jnp
jmp
ljmp
cwtl
mov
jo
sub
loope
mov
shll
sub
jecxz
sarl
pop
or
add
fxch
clc
mov
sbb
icebp
pop
dec
sbb
dec
nop
push
xchg
jmp
xor
ret
pop
std
int3
aaa
cmpsb
cmpsl
mov
add
clc
in
add
popf
movsb
clc
and
or
test
pop
ret
inc
ss
sub
ss
fcoml
movsb
push
pusha
outsl
mov
jo
les
inc
sub
push
je
scas
inc
jno
xor
data16
aad
mov
pop
pop
mov
adc
ljmp
vpunpckhdq
enter
adc
jo
inc
cmp
sbb
pop
fistl
ja
lahf
push
xchg
mov
xor
dec
inc
sahf
cwtl
cmp
jle
rclb
push
fimull
fnsave
push
out
mov
sbb
lret
push
add
cld
movsl
clc
leave
add
fistps
enter
lods
outsl
sbb
adc
or
sub
iret
sahf
test
mov
fwait
sub
out
insb
xchg
aam
stos
js
jmp
loopne
sbb
inc
dec
cmpsb
push
cmpsb
jecxz
fimuls
xchg
push
sub
sti
mov
pop
lret
sarb
mov
sbb
loop
faddp
inc
pop
mov
rclb
outsl
xor
push
aad
cwtl
dec
mov
xor
inc
data16
faddp
cmp
mov
mov
inc
mov
or
fidivs
sbb
stos
mov
sub
pop
mov
xchg
jp
and
clc
mov
or
aas
fdivrl
xchg
add
mov
mov
ja
out
and
dec
xor
enter
popf
mov
jno
ret
shlb
and
adc
and
cmp
jbe
cltd
ds
sub
jg
sub
pushf
ret
mov
fsubp
xrelease
inc
loope
icebp
mov
push
mov
sbb
ljmp
in
dec
or
cmp
fstps
mov
and
sub
xor
xor
test
cmp
das
pop
in
pop
nop
cmp
mov
mov
ljmp
and
cs
sub
mov
add
outsl
pop
bound
scas
aam
imulb
push
inc
mov
or
movb
add
outsl
push
faddl
adc
mov
out
push
push
lret
scas
push
aas
into
add
cmp
mov
lods
pop
sar
in
movsb
dec
jno
into
dec
mov
mov
shr
sbb
int
lret
add
jne
jp
lods
lods
mov
fs
gs
cmc
je
or
lret
and
jb
mov
dec
sbb
imul
mov
stc
jle
jo
xchg
jb
push
fmull
pop
stos
out
mov
repnz
sbb
outsl
mov
roll
adc
xchg
mov
xor
mov
dec
inc
jne
mov
js
or
xor
fcomps
test
mov
dec
test
out
xchg
hlt
or
push
add
aas
sbb
mov
jmp
mov
repnz
sahf
push
aas
leave
scas
scas
daa
push
movsl
dec
lret
jae
leave
out
ss
nop
data16
leave
inc
cmp
int3
xor
addr16
sbb
daa
es
adc
repz
push
xor
and
sub
std
dec
ss
xlat
xor
fwait
push
inc
repz
scas
mov
fwait
ret
cmp
sbb
and
jle
adc
sbb
in
js
mov
sbb
ficoml
fsubs
adc
push
add
out
xchg
inc
jmp
test
out
in
and
xlat
mov
xor
sbb
roll
cmp
mov
jmp
mov
roll
shrl
add
data16
std
xlat
jl
sahf
mov
add
dec
out
sbb
cmpsb
cs
fbld
inc
add
add
adc
add
pop
cmp
jno
scas
xchg
sub
add
repz
lods
lret
into
ror
out
sub
fildl
mov
sub
jbe
and
out
push
test
cmp
jo
push
int3
inc
out
xchg
fildl
icebp
addr16
pusha
negb
aam
or
dec
bound
stos
or
mov
fucomp
fcomp
lods
aas
ss
xchg
and
aas
shll
dec
mov
jns
bound
xor
and
cld
and
cmp
int
sbb
addr16
mov
shl
outsl
add
ret
mulb
mov
jnp
nop
ret
pusha
sub
je
sub
wrmsr
and
push
fisubl
mov
lock
pusha
jbe
jno
cmp
adc
fmuls
cs
scas
out
add
mov
adc
jbe
push
incl
xchg
in
pop
add
scas
inc
test
mov
cmp
sti
cld
outsb
pop
cli
mov
test
jmp
fcmovb
xchg
gs
ss
mov
fdiv
sbb
popl
pop
push
imul
cmp
adc
push
adc
dec
jo
mov
mov
incb
mov
sub
sbb
push
jbe
loop
mov
in
shll
or
lret
jae
dec
pop
sub
pop
mov
mov
sbb
mov
rep
mov
scas
jl
add
icebp
aam
into
lahf
push
out
xor
inc
ret
sub
lahf
jp
xchg
xchg
dec
pop
dec
loopne
xor
lcall
mov
xchg
rcrl
enter
cmc
aad
push
mov
push
loopne
fidivrl
in
mov
cmp
sub
and
push
mov
cmpsb
dec
out
add
jae
cmpsl
pusha
nop
lret
mov
cmp
test
out
sbb
cmp
dec
adc
mov
jle
and
cmpsl
js
sub
mov
mov
dec
jecxz
ret
ds
jl
adc
cs
push
xor
mov
mov
sub
mov
add
stos
xlat
je
out
icebp
adc
mov
je
xchg
cmp
lret
rcrl
pusha
shlb
daa
js
dec
or
xor
addr16
add
out
cs
ss
andl
add
scas
xchg
test
sbb
pop
cli
lods
sub
dec
dec
in
push
jo
adc
cmp
sbb
jne
mov
cli
dec
mov
sbb
xchg
aam
in
mov
pop
cmp
xchg
mov
lret
jno
das
hlt
xchg
adc
xchg
sarl
sbb
and
or
lods
shrb
stc
pop
insb
xchg
out
mov
and
xchg
sti
out
sbb
xor
xchg
push
test
dec
popa
or
xchg
or
xlat
mov
sahf
mov
mov
or
cli
cs
push
dec
roll
lea
and
call
sarb
ret
xchg
lret
dec
lock
std
test
aas
das
xchg
js
or
ljmp
add
push
lret
into
fwait
stc
loope
xchg
fcmovnb
xchg
loop
jmp
cmpsb
or
dec
lods
inc
cmp
bound
popa
pop
arpl
ljmp
and
jne
xchg
and
lcall
insl
test
pop
add
mov
inc
and
add
mov
or
xchg
jle
add
mov
xchg
arpl
xchg
and
mov
mov
stos
leave
mov
xchg
negl
fdivrl
push
inc
pop
adc
adc
mov
jne
cmp
adc
mov
push
jb
xchg
leave
dec
sbb
xor
mov
mov
dec
test
sbb
notb
mov
push
nop
test
cmp
fcmovu
cwtl
add
lret
sbb
jno
xor
dec
sarb
push
sahf
pusha
rorl
test
push
push
mov
mov
inc
mov
jo
lods
jnp
push
mov
ret
pop
sbb
in
icebp
movsl
add
mov
pop
shll
mov
push
pop
adc
mov
jno
mov
lret
jne
jae
xor
pop
out
adc
lea
lods
cmp
repz
sbb
cwtl
cmp
stos
mov
jmp
mov
lods
push
ret
xchg
mov
mov
movsb
xor
add
inc
add
push
mov
je
mov
mov
mov
lock
imul
out
cmpb
jecxz
mov
mov
add
xchg
imul
mov
jg
inc
out
or
popf
mov
jns
dec
add
jae
pusha
cmp
xchg
hlt
pusha
cltd
lret
jae
add
mov
adc
movsb
lods
inc
mov
sbb
push
js
xor
insb
inc
sbb
add
ja
dec
scas
inc
sahf
mov
inc
lods
inc
or
sahf
cwtl
stos
in
mov
lods
add
cltd
aam
test
cmp
lods
adcl
mov
mov
jge
ss
cmp
jecxz
mov
test
sbb
daa
push
mov
xchg
xchg
lods
fucomip
addr16
adc
arpl
mov
out
cli
imul
push
cmp
jmp
std
dec
dec
push
arpl
fcomp
pop
inc
ret
mov
rorb
pop
mov
fnsetpm(287
mov
in
jle
lret
lahf
and
pushf
sbb
adcl
add
inc
repnz
cmp
sub
and
mov
dec
movsb
mov
popa
and
divb
inc
xchg
ja
lods
pop
jns
add
out
popf
lcall
shlb
imul
rclb
adc
mov
adc
test
rep
mov
xadd
sub
in
fisubs
sbb
jnp
jmp
mov
shlb
inc
sbb
rcrl
aad
popf
rolb
xchg
jbe
lret
in
add
ret
es
jne
inc
push
xchg
adc
leave
or
pop
mov
fnstcw
push
mov
call
xor
sarl
xchg
je
cmpsb
xchg
aad
out
call
inc
dec
call
sub
jne
mov
sti
data16
fwait
rorl
xchg
push
or
loop
out
jg
adc
and
xor
icebp
cmp
or
mov
insl
test
call
jne
adc
add
fwait
adc
xchg
scas
das
lods
mov
sub
pop
and
jns
or
push
das
or
pop
cs
test
gs
or
fistl
mov
sub
nop
sub
dec
sbb
lret
mov
out
fwait
lods
mov
test
inc
bound
jbe
mov
addr16
shl
xchg
stos
fistps
push
jl
rorb
mov
and
repz
roll
mov
testb
cmc
lcall
insl
adc
cmp
mov
jmp
pop
sub
insl
cli
jae
movsl
inc
sbb
mov
xor
and
adc
xor
outsl
stos
cltd
cld
xor
mov
xor
nop
cwtl
or
imul
pusha
cwtl
enter
mov
jmp
ljmp
callw
mov
loop
ljmp
ja
push
pop
add
loop
jae
xor
cmpsl
adcb
jg
into
andl
add
aas
add
pop
lods
lea
xor
enter
xor
dec
out
mov
add
notl
loop
adc
into
xor
in
or
stos
mov
je
imul
in
cmp
sub
test
mov
mov
push
push
rorb
jns
mov
mov
cltd
sbb
pop
pop
cmpsl
icebp
arpl
sahf
rol
pop
mov
out
mov
push
mov
push
testl
fwait
sub
ss
sbb
pop
jge
mov
fcmovnu
in
popf
adc
pushf
movsl
mov
push
push
or
in
inc
lock
cli
rcrb
rorl
mov
and
mov
fdiv
lods
scas
jno
adc
movsl
adc
arpl
fcmovne
das
fisttpll
xchg
xchg
out
push
repz
mov
jno
sbb
jne
fstpl
repnz
mov
in
and
shl
or
pop
test
in
insl
inc
addl
daa
testl
dec
push
or
repnz
add
xor
inc
adc
jg
cmpsb
sub
lahf
imul
call
sbb
in
mov
outsl
es
fs
mov
popf
mov
insl
xor
xchg
pop
inc
stc
push
adc
push
rol
dec
popa
sti
xor
imul
and
cwtl
mov
push
adc
int3
mov
pop
mov
sbb
mov
pop
mov
pusha
push
clc
and
shl
xor
push
pop
out
jl
and
insl
mov
rcll
add
xor
push
push
xchg
lods
sahf
or
insb
js
mov
push
rcll
sbb
into
pop
dec
push
popf
jecxz
roll
adc
ret
aam
push
idivb
daa
add
mov
push
xchg
ret
xchg
cli
out
mov
jnp
cld
fcmovnu
roll
cli
and
leave
bound
add
xlat
int3
enter
mov
mov
jmp
jecxz
mov
or
jno
xchg
std
or
stc
repz
mov
cmpsb
sub
sbb
add
push
pushf
iret
jl
testb
adc
in
adc
xor
xchg
out
mov
mov
adc
jnp
inc
add
adc
sbb
cmp
sub
out
xchg
mov
rcl
sbb
add
mov
ficomps
insl
lods
and
cmp
and
outsl
xor
push
out
dec
repnz
mov
in
insl
out
in
mov
cmp
dec
pop
jae
test
push
cltd
xor
sub
xchg
pop
mov
push
dec
xchg
test
je
sbb
sub
xchg
aam
cmpsl
das
dec
xor
in
lahf
fdiv
cmpl
inc
and
mov
inc
call
push
pop
adc
mov
push
aam
lods
push
stos
in
test
push
add
inc
fsubrs
or
pop
jnp
xchg
and
cltd
stc
out
cmp
and
popa
jo
lods
aam
pop
adc
mov
xor
ret
adc
mov
sub
mov
mov
shlb
xchg
ret
dec
adc
aaa
add
in
into
lret
cwtl
shll
fisttps
mov
imul
sbb
xchg
aad
lret
or
add
pop
btc
in
push
cltd
jnp
int3
push
movd
insb
shlb
arpl
xchg
test
lods
sub
cmpsb
mov
or
mov
in
dec
mov
sub
stos
in
add
call
or
in
ljmp
in
sub
xor
xchg
pusha
dec
sub
lcall
mov
and
aas
or
aad
aad
les
cmpsb
pop
cmp
les
mov
in
ljmp
push
jecxz
aam
je
and
pop
sub
stos
shlb
jle
rclb
rcl
fsub
movhps
ds
dec
mov
cmpb
nop
ret
pop
jge
or
or
jge
and
inc
lock
jl,pn
leave
aad
stc
sub
ds
mov
stos
xchg
das
mov
test
xchg
imul
push
lahf
cmp
xor
js
dec
stos
xor
adc
in
xchg
popa
or
repnz
dec
sbb
xorl
inc
cmp
cli
imul
gs
loop
mov
scas
mov
in
mov
mov
repnz
and
js
arpl
sbb
hlt
in
adc
std
je
dec
cmp
insb
dec
test
and
es
sub
popf
push
xchg
call
sub
and
test
inc
arpl
cmp
cs
int3
clc
stos
mov
jne
fldl
push
aas
xchg
inc
adc
sahf
movsb
mov
xchg
mov
out
sbb
in
addr16
pushf
lahf
out
ja
pop
in
adc
pusha
xor
sub
stos
pop
lcall
dec
jb
push
dec
mov
or
adc
push
stos
xchg
test
fdiv
test
push
loopne
mov
jge
inc
inc
xor
cli
push
ja
jno
cld
outsl
mov
out
test
inc
cs
add
adc
cmc
sub
pop
leave
adc
add
dec
divl
cmpl
enter
in
rolb
lret
pop
mov
add
mov
in
push
rcpps
jge
mov
mov
mov
fsubrl
dec
bound
adc
adc
rol
movsb
jmp
pushf
mov
push
insl
inc
bswap
jge
xor
lods
or
mov
push
test
cmp
daa
xor
sbb
les
xor
andb
push
lret
xor
adc
stos
adc
shlb
mov
mov
dec
mov
inc
aam
loopne
xchg
repz
cwtl
cli
pop
popl
mov
mov
mov
mov
mov
cwtl
lret
fisttpl
xchg
xchg
mov
jae
sahf
fucomp
inc
xor
mov
inc
fcmovb
sbb
push
mov
push
loope
or
shl
loopne
mov
adc
push
xor
repz
mov
stos
sub
cmc
int
mov
xchg
ja
jno
shrl
icebp
and
mov
sbb
ret
jp
ds
movsl
mov
sbb
add
rorb
inc
cmp
or
dec
jb
xchg
inc
and
pop
lods
cli
fnstcw
hlt
jo
pop
imul
jg
iret
movsb
mov
les
lds
adc
xor
lahf
in
in
sbb
montmul
cmpsb
orl
mov
add
push
pop
jne
enter
daa
push
jl
jle
fidivrs
pushf
push
push
mov
jge
mov
hlt
out
xor
int3
inc
jecxz
jbe
mov
mov
dec
mov
rcr
xchg
jnp
dec
subl
xor
pop
cwtl
push
push
push
ds
adc
arpl
pop
mov
mov
pop
bound
shlb
out
out
jp
dec
push
fdivr
mov
bound
test
fwait
pop
mov
cmp
sbb
and
repnz
add
pop
aaa
adc
inc
push
mov
outsl
push
lods
cmp
dec
cmpsl
sub
push
mov
enter
stos
mov
sbb
dec
mov
out
out
xchg
inc
fsubrl
popa
add
cmpsl
cmpl
push
testl
push
jg
jne
fdiv
cmp
jnp
in
inc
cltd
and
lds
in
aad
mov
js
push
test
cmp
sub
jecxz
add
outsl
aam
pop
mov
adc
andl
sub
xchg
add
lea
mov
sub
mov
mov
call
in
fcomp
sbb
jecxz
push
fidivrs
mov
in
cmpsl
cmp
pop
xchg
movsb
mov
lcall
push
jge
dec
inc
dec
out
shll
mov
adc
frstor
popa
push
mov
sbb
into
into
mov
mov
cli
xor
cmp
mov
nop
lock
cwtl
lods
jge
in
jl
inc
add
js
mov
fnstenv
jge
enter
leave
lods
cmp
shll
lcall
dec
adc
popf
test
enter
int
sbb
inc
lret
mov
inc
sub
mov
fcomps
ja
sub
add
pop
and
in
cmp
mov
in
lret
add
mov
mov
sbb
or
and
lcall
lahf
das
jge
mov
mov
mov
fucomp
add
pop
fsubr
pop
mov
adc
out
cwtl
mov
and
pop
xchg
lods
jne
sbb
jg
xchg
or
mov
inc
jne
xor
lods
add
mov
lods
test
fistpl
out
sar
insb
mov
adc
inc
cmpsb
aad
or
shr
sub
daa
xchg
out
mov
inc
xchg
int3
outsl
push
inc
push
push
arpl
mov
cs
es
lea
sub
xchg
shrl
inc
cmp
push
es
jecxz
inc
loopne
imul
bound
xchg
add
repz
xchg
mov
jo
dec
add
mov
dec
rcll
scas
fisubrs
adcb
inc
addr16
das
inc
cs
or
pop
xchg
dec
cwtl
repnz
dec
mov
icebp
adc
adc
and
mov
nop
add
mov
mov
sub
fcmovb
push
mov
clc
inc
mov
xor
xchg
add
xchg
ret
xor
sbb
mov
test
inc
add
xchg
filds
jecxz
mov
int
push
mov
pop
sbb
or
in
and
inc
icebp
repnz
clc
push
add
lea
adc
adc
cmpsl
out
lods
xchg
jmp
or
rcrl
mov
lods
push
out
push
aas
cmpsl
fmul
and
push
popa
sar
in
dec
les
dec
inc
or
dec
xchg
test
and
lds
fbld
shll
xchg
adcb
fistpll
cli
mov
xor
dec
scas
in
lock
aaa
inc
mov
xchg
jp
push
jle
movsb
push
jle
jae
in
jl
stos
push
jnp
addb
das
repz
jl
in
jno
push
push
fcomps
push
mov
scas
ljmp
divb
xor
mov
pop
sbb
jo
adc
jge
pop
sub
lock
fs
cmp
nop
mov
nop
bound
in
xchg
jmp
fwait
inc
enter
inc
mov
pop
ljmp
lret
pop
push
inc
loope
pop
test
xchg
mov
add
sbb
mov
ficoml
pop
lret
xchg
scas
test
adc
andb
xchg
cmp
xlat
aam
push
out
out
das
test
cmp
lods
add
inc
call
popa
jnp
mov
xor
ds
cwtl
aaa
pop
roll
and
rcll
nop
mov
add
cmp
cmp
xor
fstpt
icebp
fs
das
jge
xchg
fwait
aam
mov
cmpsb
mov
or
ljmp
mov
das
sub
and
mov
fistl
test
adc
jae
adc
sbb
pop
insl
repz
sbb
or
fs
sbb
loop
iret
ja
mov
cmp
in
pop
mov
xchg
jae
mov
mov
imul
mov
pusha
xchg
mov
arpl
lock
inc
stos
rclb
jecxz
mov
mov
fwait
xlat
jnp
sbb
andl
fildl
xchg
movsb
sbb
mov
push
add
iret
xchg
adc
out
ljmp
push
pushf
std
mov
into
fmul
das
gs
lds
mov
pop
mov
push
dec
push
loopne
jb
addr16
inc
mov
sbb
xor
inc
insb
jae
sub
pop
pushf
jb
xchg
pushf
push
or
cmp
push
inc
sarl
lods
popa
dec
pop
dec
xchg
dec
push
in
sbb
mov
outsb
and
mov
push
gs
mov
out
and
fcmovb
pop
cld
adc
test
xchg
lret
cmp
fs
sub
dec
inc
push
aam
test
je
ds
popa
xchg
add
and
jecxz
pushf
xchg
xor
cwtl
dec
pop
pop
mov
out
lods
outsb
or
movsl
and
adc
ljmp
outsb
pop
ljmp
test
in
lret
inc
jbe
addr16
jmp
sahf
push
mov
or
movsb
std
rorl
sub
out
das
iret
xchg
mov
inc
lret
mov
fwait
push
fs
mov
xor
aaa
loop
jl
cld
pop
aad
and
jle
lea
test
stos
fmull
aaa
pop
mov
test
inc
das
roll
subb
xchg
jae
cltd
sbb
add
xor
loop
push
mov
adc
loope
movsl
mov
into
mov
jge
xchg
cmp
das
stc
leave
mov
cmp
xchg
std
jno
inc
mov
mov
inc
lods
lods
or
sahf
mov
leave
imul
aam
into
xor
or
outsl
push
adc
or
mov
jno
sbb
push
lahf
mov
cmc
mov
lods
lret
aas
loop
mov
mov
jns
loopne
jb
outsl
push
or
rclb
ds
push
mov
in
and
jae
add
jbe
xchg
ss
stos
aad
dec
test
xchg
mov
jmp
add
dec
daa
xor
pop
push
rorl
stos
test
stos
mov
push
add
fnstcw
push
addb
xor
adc
pop
jmp
lret
es
mov
mov
lahf
xchg
out
ret
outsl
sbb
adc
lsl
js
ljmp
cmp
shrb
das
sub
cmp
lods
push
lahf
std
imul
loope
mov
mov
shl
popa
push
stos
rol
add
push
jp
arpl
popf
inc
arpl
mov
mov
sahf
js
ja
lds
das
pop
fwait
or
daa
cmp
push
pop
xor
in
aas
add
pop
jbe
inc
leave
jae
cwtl
out
repnz
mov
stos
movsb
xor
jae
scas
pop
out
and
sub
mov
fstps
repnz
aas
repz
aam
and
or
enter
lret
dec
jo
inc
orl
inc
fcmovb
mov
or
outsb
push
incb
and
in
or
idiv
cs
out
mov
sbb
pop
decl
pop
repnz
or
leave
push
inc
lock
repnz
push
sub
inc
mov
es
faddp
sbb
ret
test
jecxz
and
popa
fistl
inc
adc
jge
cs
xchg
aad
cmpl
js
cmp
xchg
outsb
aas
sub
pop
fldlg2
sarl
mov
or
js
adc
pushf
addr16
pop
add
xchg
mov
repnz
cltd
cmpsb
das
icebp
mov
pop
enter
push
stos
mov
and
push
mov
mov
int3
or
pop
std
mov
mov
dec
lods
lea
adc
lcall
or
mov
mov
cli
call
jb
decb
cmp
je
jne
inc
pop
out
jmp
pushf
jle
lods
pop
popf
lods
lret
mov
in
xchg
ret
fnsave
adc
mov
adc
add
fistpll
jbe
cmp
call
dec
cli
cmp
mov
inc
daa
xor
je
arpl
cwtl
fstpt
call
sub
cmp
mov
enter
iret
inc
cltd
jle
pushf
push
mov
aaa
repnz
adc
lcall
jle
jmp
sarb
in
fldenv
jno
adc
xchg
xchg
lock
insl
loope
out
xor
cmp
mov
mov
cmp
out
iret
jbe
shll
cli
push
sub
xor
push
sarl
mov
cli
or
jnp
sbb
sbb
popa
andl
test
pop
xchg
push
pop
out
add
fnstcw
enter
dec
and
adc
mov
pop
xor
add
rorb
ljmp
xchg
mov
or
in
pop
pop
push
mov
das
mov
push
cmp
test
and
das
gs
and
inc
scas
out
pop
cmpsl
jle
fdivr
dec
xchg
cmc
sti
iret
les
cmp
lcall
mov
push
sbb
fstl
dec
xchg
add
jns
dec
or
push
dec
pusha
sahf
cmpsb
xlat
lods
outsb
inc
mov
divl
pop
sbb
xor
rcrl
fs
lcall
adc
pop
jmp
cwtl
aas
movsb
shr
jae
in
lahf
int
bound
hlt
push
arpl
mov
decb
jecxz
pop
sub
sub
and
loop
sbb
cmp
push
sub
inc
leave
sub
xchg
cmp
or
or
fwait
cmpsb
jae
and
jnp
mov
popf
cmc
dec
sub
into
mov
scas
inc
xor
sub
divb
cmpsl
xchg
cli
push
subl
mov
popf
push
mov
out
bound
mov
inc
std
bound
outsb
mov
lods
mov
adc
jb
mov
add
jl
jo
movsl
dec
push
in
jge
or
int
lahf
arpl
push
mov
mov
push
inc
sub
adc
add
or
test
mov
cmpsl
mov
jmp
fistpll
sbb
jl
adc
cmp
jp
daa
cli
in
adc
outsb
inc
mov
sub
dec
xor
and
adc
mov
sahf
pop
lds
shr
jg
pop
jmp
aam
fistpl
pushf
sub
lret
and
xchg
mov
jl
push
dec
stos
hlt
push
inc
fistpll
jnp
movsb
ja
inc
xchg
cmp
cld
pop
stos
aaa
sub
jl
lret
add
and
fildl
mov
repnz
xchg
jle
jg
repnz
jbe
jmp
test
inc
xor
sub
inc
jl
xor
dec
cmc
xorb
repnz
aad
sub
sbb
add
xchg
or
jle
aad
sarl
xor
pushw
subb
or
ja
adc
ds
jb
hlt
repnz
jbe
pop
mov
push
punpckhbw
popf
pop
push
and
rorb
movsl
ljmp
or
or
mov
loope
xor
popf
mov
xor
jge
inc
push
cs
aad
inc
test
add
addr16
sub
ja
js
xor
pop
scas
rol
call
mov
ss
push
push
and
add
dec
stos
adc
and
rorb
adc
cltd
fisubs
std
or
add
or
rcr
mov
dec
movl
icebp
pop
cmpsb
add
dec
shrb
push
cs
adc
push
cltd
in
jl
adc
rorb
mov
arpl
and
out
scas
ja
int3
adc
sbb
cmp
stos
pop
out
jge
cmp
xchg
repnz
xchg
test
jge
std
add
loopne
fsub
nop
push
and
jb
dec
jae
aas
inc
cmp
adc
add
inc
in
or
jbe
push
enter
cs
xor
fiaddl
mov
cmp
adc
sub
lods
pop
jno
push
mov
jo
xor
jae
adc
addr16
sbb
adc
lock
in
rcrl
xchg
fists
inc
and
mov
shl
sbb
add
mov
loope
dec
mov
or
rorl
out
pop
fcmove
das
sbb
in
pop
jb
pusha
add
mov
lods
inc
insb
dec
push
faddl
xchg
mov
out
aas
mov
jne
mov
sub
in
jecxz
adc
ret
jp
leave
and
pop
sbb
jb
xor
inc
nop
adc
ljmp
mov
aaa
outsb
push
mov
pop
repz
out
inc
dec
das
outsl
pop
lock
mov
aad
test
push
stc
das
mov
out
into
sbb
in
and
or
inc
lret
pop
shll
fs
mov
insb
jl
cs
push
xor
scas
mov
pop
add
xor
lret
push
push
xchg
xor
xchg
or
out
pop
jns
mov
and
scas
outsl
loopne
iret
add
jecxz
sub
shll
inc
pop
gs
pop
jno
pop
and
insb
aas
jnp
mov
testl
lret
jge
iret
or
dec
and
pop
adc
addr16
pop
jge
js
adc
lock
aam
add
add
add
roll
xchg
int
mov
mov
sbb
sub
fwait
pop
arpl
ljmp
mov
cmc
push
adc
and
stc
sub
cmpsl
jl
pop
call
es
flds
sbb
cmp
inc
pop
add
dec
dec
mov
xor
jmp
pop
mov
and
inc
scas
xor
adc
cmc
xor
das
inc
leave
insb
popf
test
call
mov
fcmovbe
scas
repz
out
out
mov
push
loope
jno
lock
dec
popf
xor
add
popa
stc
in
pop
arpl
adc
cmovb
popa
mov
int
jl
push
into
cwtl
mov
jl
adc
std
movsb
sti
adc
aad
jb
pop
ret
push
mov
arpl
pop
mov
cltd
and
mov
push
mov
inc
pop
push
movsl
ror
les
inc
mov
stos
lret
dec
testl
cli
cltd
jnp
lahf
pop
popf
and
cmp
ss
jg
das
sbb
cmpb
std
add
jb
test
jb
inc
cmp
xor
repz
pop
cli
fs
sbb
xchg
imulb
sub
ljmp
aam
mov
imul
int
push
aaa
dec
orl
lock
lock
out
and
xorl
iret
ret
mov
mov
push
leave
pop
xlat
in
mov
out
fists
sub
and
pop
mov
sub
leave
sbb
in
dec
aaa
mov
jp
push
scas
inc
or
or
in
sub
inc
jae
inc
mov
je
pushfw
mov
pop
cmp
out
popa
les
bnd
iret
mov
xor
or
sub
jb
in
fwait
inc
lds
pop
out
fwait
bnd
jg
jecxz
mov
fwait
cmp
and
test
xor
test
jo
mov
test
mov
or
mov
notl
pop
hlt
adc
cmp
in
jb
fldt
add
adc
push
pusha
xchg
sub
and
push
lods
sub
cmc
hlt
insl
jecxz
pop
in
es
jp
rorl
test
repnz
xchg
mov
add
push
sub
aas
mov
mov
cmp
push
add
jbe
push
enter
movsb
test
cwtl
outsb
mov
sarl
in
jge
bound
cmpsb
mov
xchg
push
into
int3
pusha
orl
lds
lret
adc
ret
test
ljmp
dec
cwtl
int3
mov
mov
fsubs
addr16
jecxz
and
sbb
sub
xor
cs
loope
pop
mov
mov
dec
cwtl
mov
adc
test
mov
mov
fs
add
into
push
cmpsl
jp
test
push
push
loope
cmp
dec
fnsave
xchg
mov
ljmp
or
addl
stos
xor
int
or
imul
mov
add
add
pushf
jnp
loope
push
xlat
sti
and
test
mov
mov
icebp
fs
sbb
arpl
aam
pop
cmp
sub
dec
jl
test
dec
jnp
sub
fsubl
push
mov
cmpsb
mov
int3
imul
jno
xchg
push
dec
dec
shl
jns
popa
out
ds
xchg
repz
lret
jl
loop
ret
lret
sub
xor
sub
pop
scas
and
sbb
js
mov
and
add
and
cwtl
outsl
into
outsb
roll
scas
push
rorl
fistps
push
inc
sub
mov
cld
movsl
movsb
sti
add
test
or
in
sbb
mov
shll
mov
cmc
cmp
mov
xor
scas
jp
mov
cmp
lret
push
jp
shrl
sub
negb
scas
scas
int
jbe
mov
repnz
mov
jo
out
push
popf
hlt
dec
lea
cmpsb
and
inc
cmp
out
test
lods
xchg
inc
dec
icebp
popa
data16
xlat
sbb
imul
data16
jge
pop
or
lret
rorb
inc
xor
sbb
mov
adc
push
lods
xchg
popa
fucomip
and
ljmp
sub
inc
inc
mov
xchg
mov
jp
push
adc
or
sbb
xor
mov
loope
aas
into
inc
mov
inc
aas
lds
int3
cmp
or
mov
sbb
xchg
or
ss
sbb
pop
cli
jbe
sub
stos
pushf
aaa
or
inc
pop
lea
mov
lcall
out
push
fwait
jb
neg
dec
and
fldt
xor
mov
shlb
popa
cmp
rcll
in
mov
push
sub
sbb
dec
pop
lret
loopne
xchg
mov
sahf
jno
repnz
mov
testb
mov
sbb
jge
hlt
xor
test
scas
dec
sub
in
dec
test
xor
pop
cmp
jnp
ja
addr16
adcl
fs
or
push
sbb
scas
loopne
jb
lahf
add
test
mov
cmp
cmpsl
notb
mov
pop
jle
dec
test
dec
mov
mov
clc
sti
xchg
fcomps
sub
xor
fisubrs
xor
dec
jge
jg
add
mov
movb
jge
inc
loop
xor
pusha
push
aaa
and
mov
pop
or
xchg
xor
push
pop
and
outsl
movaps
dec
in
das
inc
pop
sbb
xor
loopne
test
fs
xor
or
sub
cs
clc
pop
adcl
insl
mov
inc
push
xorb
inc
sub
rol
clc
fisubrl
jecxz
stos
xchg
xchg
pushl
add
mov
xor
jecxz
jge
mov
cwtl
or
jle
jl
cmpsl
popf
pusha
dec
jle
lret
push
mov
jmp
inc
add
xchg
mov
lret
jnp
fstpl
je
xchg
pop
pushl
inc
cmpsb
mov
push
sub
jecxz
cmp
push
out
clc
scas
mov
pop
cld
push
cmp
test
sub
or
xor
test
mov
mov
xor
repnz
in
cmpb
imull
mov
fwait
push
aaa
notb
dec
mov
inc
xchg
sub
sbb
push
ret
scas
cmpsb
bound
ds
add
fidivrl
xor
pop
shll
mov
enter
pushl
lods
mov
xchg
mov
adc
inc
fwait
insb
push
push
int3
fcompl
dec
bnd
icebp
xlat
test
lea
das
shrb
cmpb
push
xor
gs
mov
mov
push
jge
xor
idiv
sub
adc
jbe
add
loopne
punpcklwd
popa
ret
ds
shll
orl
pop
je
mov
push
out
jno
outsw
negl
not
incb
sbb
jb
mov
push
or
adc
jecxz
pop
inc
outsb
add
mov
shlb
dec
or
or
out
lcall
outsb
mov
mov
lds
aas
imul
push
out
fmull
inc
push
xor
push
popf
or
jge
push
into
push
outsb
lret
jno
add
lods
lret
cwtl
mov
shll
pop
aas
fdiv
fisubrl
xchg
pop
dec
jecxz
loopne
lea
push
push
ret
rolb
fwait
mov
or
dec
in
inc
sub
repz
in
hlt
mov
shlb
aad
inc
std
sahf
mov
add
insb
add
push
adc
mov
adc
cs
sbb
or
dec
mov
jp
mov
xor
xchg
nop
mov
js
mov
fstl
fnstsw
lock
and
stos
xorl
out
pop
sbb
loop
xor
or
sti
das
ret
mov
movsl
adc
aaa
mov
pusha
jno
mov
test
lods
nop
xor
pop
xchg
pushf
jnp
xchg
dec
jle
push
leave
mov
inc
xor
adc
arpl
sahf
sbb
mov
rolb
pop
or
push
mov
je
cmpsb
inc
xor
out
loop
cmp
testb
jp
jno
adc
push
fsubrl
push
out
pop
loop
cmpsl
orl
jg
inc
mov
adc
in
jnp
push
aam
stos
mov
add
out
mov
xchg
imul
add
ss
stos
sub
push
aas
adc
cmp
pop
xchg
mov
popa
jl
lcall
sbb
or
cmp
orl
sub
loop
pop
ss
ljmp
movsb
subl
lss
mov
lahf
es
sti
sub
jb
jg
sub
mov
ljmp
and
ds
icebp
fmuls
cmp
test
sub
imul
sub
repz
ljmp
fnstsw
jnp
dec
outsb
scas
call
cmpsl
jle
cltd
sbb
loope
pop
cmp
adc
nop
aas
lret
testb
dec
call
xchg
dec
iret
ds
sbb
stos
xlat
mov
pop
xor
push
sbb
mov
jmp
mov
mov
jge
inc
test
es
test
dec
pusha
fistpl
lock
push
dec
xlat
cmpl
fcompl
fucomip
add
sbb
or
cmp
je
arpl
adc
bound
inc
decb
and
movsb
insl
shrl
jge
vorps
ss
mov
imul
mov
pop
testl
sub
iret
push
fwait
rorb
jmp
jne
or
and
cmp
lahf
add
push
mov
mov
push
jae
in
and
insl
in
jne
repnz
andb
mov
dec
and
stc
push
test
mov
xchg
and
xor
mov
xchg
outsb
xor
sahf
inc
bound
xor
mov
insb
sub
das
sub
test
and
pop
mov
in
xchg
lcall
inc
push
pop
sti
mov
ds
in
mov
mov
nop
movsb
enter
inc
cwtl
or
inc
cmpsl
mov
push
icebp
out
ja
leave
fcmovnu
fnstenv
jb
in
add
adc
sti
les
add
mov
xchg
add
ud0
mov
jnp
pop
cmp
cmp
or
outsl
ss
int
sub
pop
push
stos
sub
daa
mov
jmp
repz
scas
pop
mov
push
sbb
jno
iret
loope
mov
mov
and
add
scas
jmp
inc
and
les
inc
inc
sbb
xchg
adc
push
dec
std
sbb
mov
js
pop
cmp
leave
or
mov
mov
adc
or
xor
sub
adc
dec
sbb
pop
test
cmp
out
int3
or
std
std
aaa
in
in
daa
test
in
test
jae
into
pop
cmp
repnz
jae
out
shl
adc
mov
xchg
dec
call
leave
push
jnp
xor
mov
or
pop
aad
je
jg
push
pop
push
pop
stos
mov
mul
xor
fsubrs
outsl
lods
mov
jge
movsb
in
push
dec
inc
cwtl
fwait
xchg
sahf
push
neg
jg
call
pop
lcall
js
adc
xor
fs
daa
movsl
jmp
scas
lret
xchg
lret
or
adc
adc
adcl
mov
ret
xchg
sbb
adc
inc
xchg
sbb
popa
add
jp
or
in
add
cmp
sarl
push
sub
jg
pop
out
cmp
sub
test
btc
push
cmp
ret
dec
mov
push
adc
sbb
push
push
enter
sbb
mov
sub
mov
insb
mov
dec
xor
cmp
pop
ljmp
aam
cmp
inc
inc
mov
mov
xchg
mov
repnz
out
and
add
es
out
inc
dec
daa
add
bound
outsb
sub
popf
or
lea
stc
add
popa
sbb
dec
jbe
or
adc
testb
mov
std
int
pop
push
int3
mov
inc
repz
arpl
loopne
jecxz
mov
jl
cmpsl
aam
test
mov
dec
mov
leave
ret
dec
testl
add
dec
push
mov
and
adc
and
mov
popf
cmp
mov
mov
adc
or
mov
out
adc
jg
pop
test
dec
jb
rol
sbb
mov
cltd
movsb
push
es
imul
iret
or
lret
in
push
push
imul
iret
jno
insb
mov
outsl
add
jnp
gs
push
std
xchg
lods
stc
or
and
in
std
mov
cli
mov
xor
jg
xlat
jb
cld
es
daa
mov
nop
add
add
add
jb
fs
sbb
mov
xor
js
ljmp
push
pop
xor
test
sbbl
rcll
jne
sbbl
pop
push
arpl
pop
push
dec
shl
pop
and
jb
xchg
jmp
sbb
inc
fcomps
mov
fidivl
dec
out
out
lahf
mov
outsb
fcmovnu
push
mov
sbb
fnstenv
mov
or
dec
sub
std
sahf
es
repnz
dec
addb
es
push
jno
jge
xchg
das
std
xor
mov
out
mov
pop
sarb
and
adc
gs
rcl
movl
div
test
outsl
cltd
into
xor
jnp
push
add
loope
ret
sub
pusha
sti
inc
orb
push
dec
jecxz
dec
inc
vmread
inc
adc
sbb
test
xor
lock
lock
pop
mov
cmp
div
mov
mov
sub
xlat
sub
xor
jb
jne
ja
into
dec
sub
jo
xchg
sub
ljmp
fistpll
lock
mov
mov
push
out
sbb
sub
cmpsb
pop
sub
push
add
jo
mov
mov
sbb
sub
sbb
outsb
adc
xchg
add
enter
inc
int
dec
jecxz
scas
stos
dec
push
daa
mov
fmull
sub
push
movsb
daa
pop
xor
punpckhdq
push
xor
mov
and
mov
dec
push
inc
dec
outsl
lea
jp
aaa
push
ret
std
aam
subl
je
sub
ret
imul
and
pop
mov
fmuls
pop
sub
dec
cmc
cli
cmp
lret
mov
in
scas
mov
push
mov
xchg
cmp
xor
es
aaa
out
icebp
repnz
push
sbb
nop
sbb
testb
call
fmul
mov
fldt
jmp
mov
loopne
repnz
push
pop
mov
fildl
into
cwtl
inc
add
add
jge
imul
mov
xchg
andl
pop
je
cltd
and
fs
inc
dec
dec
dec
adc
mov
int
pushf
lods
fst
mov
dec
call
out
inc
cmp
loopne
fnstenv
jl,pn
mov
add
in
mov
pushf
mov
sbb
jae
daa
and
xchg
iret
mov
ljmp
sbb
sbb
imul
jns
or
xor
clc
lea
cmp
dec
outsb
adc
fistpll
add
cmp
stos
mov
pop
pop
inc
nop
jmp
inc
jns
lret
push
push
test
push
call
mov
les
lods
lret
out
mov
cli
fimuls
xchg
das
mov
rcll
aad
inc
icebp
xchg
pop
or
inc
jle
add
nop
out
pop
add
inc
int
inc
pusha
push
or
loop
cmpsl
sub
jne
cltd
cltd
cltd
push
test
push
aad
mov
jl
jb
fidivs
jl
dec
aaa
mov
xor
ret
in
jbe
mov
xchg
lahf
in
xchg
xchg
adc
lods
icebp
out
jge
push
jge
jae
or
in
repnz
data16
jbe
stos
mov
lock
jae
iret
or
pop
xchg
sub
inc
call
stos
mov
mov
dec
sub
jne
jge
jmp
test
jnp
ss
mov
aad
rorl
sarl
dec
jge
ss
out
inc
pop
and
popf
add
xacquire
xchg
push
pushf
push
pop
xchg
lods
mov
push
les
inc
or
lods
test
daa
dec
xchg
ss
mov
mov
aas
adc
out
push
mov
xchg
pop
push
pop
adc
ss
pop
or
mov
dec
repz
dec
cmp
imul
les
adc
xchg
jmp
push
outsb
mov
aam
add
cmp
in
inc
fiadds
and
mov
cltd
inc
and
or
mov
cmpsb
add
inc
jg
les
jne
jae
ja
xor
or
ljmp
outsl
pop
xor
xor
leave
xor
or
data16
xchg
sbb
negl
lahf
adc
push
add
xchg
lret
sbb
xchg
cmp
cmc
pop
mov
lcall
cld
shlb
lock
or
mov
sbb
mov
les
das
cmpsl
pushf
pop
jmp
mov
cmp
sbb
lret
add
insl
sbb
sbb
add
jne
lea
dec
repz
lret
arpl
popl
or
mov
iret
xor
test
push
cld
inc
movsl
into
inc
outsl
push
js
insl
loop
jno
sbb
stos
rol
nop
sbb
inc
mov
aam
mov
shll
es
mov
repz
inc
pop
or
pop
jno
dec
lcall
push
ret
or
movsl
mov
pushf
int3
inc
inc
test
mov
inc
loopne
mov
cmp
test
push
fisttps
lcall
dec
dec
scas
xchg
inc
sbb
sub
inc
pusha
sbb
movl
lds
rol
lds
test
shlb
push
xchg
push
dec
xchg
popf
js
mov
push
mov
dec
lds
pop
and
adc
xor
fdivrl
leave
popf
sub
dec
inc
dec
in
push
sar
out
jp
outsl
cmc
and
jle
cwtl
pop
jns
dec
movsl
sub
add
bound
mov
insb
rorb
mov
mov
xchg
fisttps
pop
mov
push
loope
adc
daa
cmp
mov
mov
dec
sub
mov
mov
mov
popf
xor
add
mov
imul
mov
adc
sbb
repz
popf
mov
fneni(8087
stos
out
xor
xchg
out
test
mov
jecxz
sbb
jns
or
add
scas
pop
in
pop
lods
fs
in
or
test
and
xchg
mov
xor
xlat
jno
inc
pop
push
dec
cmp
aaa
cmp
cmp
and
xor
call
ds
mov
cmp
inc
iret
jnp
out
mov
and
into
sub
add
addl
dec
inc
mov
aam
jl
mov
out
pusha
sbb
pop
ja
mov
adc
mov
test
test
sahf
sub
int
sbb
jg
mov
sbbb
imul
sti
inc
subb
jecxz
xchg
lock
sub
movb
popf
movsb
xchg
into
dec
mov
ds
lcall
cli
push
in
xchg
ss
test
adc
fwait
add
cmp
pop
push
xchg
sbb
pop
stc
pop
mov
inc
fidivrs
xchg
addl
mov
outsl
lgs
or
add
scas
into
fucomi
xor
gs
mov
bound
push
lahf
push
push
mov
nop
xor
sbb
cmc
inc
es
jne
gs
pop
and
cmp
sub
inc
movsl
test
inc
movsb
ret
ja
jns
mov
fnstcw
sti
loopne
cmp
inc
test
test
mov
stos
cltd
mov
sbb
mov
cmpsl
scas
xchg
rcll
mov
jo
or
mov
cmpsl
arpl
push
mov
cmp
imul
dec
jnp
push
push
pop
pusha
pop
pusha
inc
push
mov
sbbl
add
scas
push
repz
icebp
call
jne
jecxz
shlb
aaa
push
adcb
and
lahf
pusha
test
ds
mov
pushf
stos
pop
pop
add
ja
jle
jmp
lock
adc
ret
rcrl
fdiv
adc
call
mov
ds
pop
in
test
fcoms
push
push
sti
push
xchg
int
js
leave
aas
or
mov
insb
insb
loop
push
in
divb
push
sub
sub
insb
or
js
xlat
stos
cmpsl
mov
cltd
push
dec
movsl
int3
andl
scas
bound
sbb
out
fdivrl
movsl
out
arpl
addr16
jbe
sub
mov
or
movsb
ret
sub
icebp
nop
in
rcll
push
repnz
adc
imul
enter
fistl
jo
jmp
std
or
mov
push
dec
aam
sub
testl
sbb
aam
jge
sbb
dec
mov
in
lods
mov
mov
push
add
or
push
push
inc
or
sbb
add
imul
int
add
lds
addr16
repz
push
or
nop
sub
sti
fistpl
int
clc
jg
xchg
les
jb
mov
mov
imul
xor
cld
mov
into
mov
arpl
cltd
or
cmp
cmpsb
shll
push
mov
in
fwait
imul
dec
xchg
push
jmp
int3
testb
lcall
jae
adc
mov
add
sub
or
push
push
cmc
sahf
push
sub
mov
pop
dec
jb
scas
pop
rorl
lret
jbe
ljmp
repnz
cmp
and
sbb
cmc
call
dec
and
flds
pop
jnp
dec
popf
pop
mov
mov
stos
sbb
popa
das
lock
push
insb
xchg
data16
icebp
xchg
ret
test
cmp
repz
jnp
pop
sbbb
ja
aaa
shrb
xor
push
xorb
jge
mov
iret
push
out
mov
cmpb
add
cwtl
fwait
mov
push
movsb
inc
inc
pop
xchg
scas
in
push
leave
stc
push
int
sti
push
insl
push
mov
mov
and
or
bound
dec
sti
xlat
sbb
rol
outsl
mov
fadd
andl
jge
pop
pusha
ret
push
inc
jmp
insl
mov
fcmove
xor
pushf
repz
popa
push
add
into
pop
pop
and
fmulp
mov
sbb
imul
push
loopne
aam
pop
pop
xor
test
mov
clc
cmp
xor
rcll
cmpsl
icebp
bound
pop
outsb
pop
mov
push
pop
sti
fs
inc
xchg
jecxz
cmp
dec
xor
call
lcall
int
jbe
mov
jbe
sbb
mov
mov
cmpsb
jp
jae
xor
push
mov
int3
or
loope
sub
es
push
adc
dec
mov
jae
xchg
hlt
xchg
xor
mov
mov
cmp
aaa
jo
cmp
xlat
bound
dec
scas
lahf
xchg
scas
loopne
push
inc
popa
and
cli
jae
pop
sbb
fcoml
repz
fwait
pop
lds
cmpsb
pushf
add
xlat
test
rcl
gs
sbb
in
imul
add
incb
inc
cmpb
dec
scas
jle
les
out
fldln2
or
sbb
pop
push
subb
sub
popa
sbb
clc
cwtl
adc
arpl
enter
adc
ss
inc
loopne
loop
lds
icebp
pop
lahf
pop
out
sub
cmp
pop
jno,pt
push
add
cli
xchg
push
inc
test
pop
push
mov
xchg
gs
imul
inc
inc
add
push
pop
not
fwait
mov
xorb
jo
adc
mov
mov
add
roll
pop
scas
mov
push
pusha
scas
cmp
imul
push
inc
pop
sahf
mov
cs
movsb
cmp
inc
adc
in
or
mov
cmp
subl
or
stos
imul
pop
sahf
loope
popf
xor
or
mov
sub
jg
jl
into
adc
repz
outsb
cmp
mov
imul
xlat
dec
lret
outsl
scas
ret
adc
les
jl
pop
sub
ja
movsb
les
out
addr16
rclb
out
aam
add
lods
push
pop
jb
sub
int3
push
xchg
and
adc
jnp
icebp
scas
dec
mov
cmp
aad
push
popa
aam
xor
inc
mov
pop
orl
jp
mov
fadd
popf
sbb
or
ss
add
push
insb
jne
lock
sub
xchg
test
mov
cmc
dec
inc
movsb
xchg
iret
xchg
sbb
adc
iretw
aad
and
cli
sbb
fsubrs
xchg
stos
sub
push
shr
xchg
mov
data16
mov
nop
xor
dec
xchg
adc
sti
mov
adc
sbb
and
push
sub
jmp
or
add
std
cwtl
out
pusha
cs
sub
xchg
rol
sub
idiv
push
sub
xchg
adc
hlt
jmp
scas
mov
cs
loope
mov
push
pop
in
stc
imul
inc
ss
decl
mov
cmp
test
or
cmp
push
jnp
ret
or
daa
mov
pop
xor
out
rorb
inc
adc
sub
int
jl
push
sub
iret
jle
or
dec
rorl
mov
push
cli
daa
inc
inc
push
imul
loop
jmp
mov
mov
and
iret
inc
sbb
inc
scas
sbb
mov
fdivr
mov
aad
andb
fs
ds
push
inc
inc
mov
sar
mov
iret
cmp
adc
pop
filds
push
divb
stos
pop
testl
outsb
jmp
sbb
or
out
shll
dec
fs
mulb
or
mov
lret
jge
das
fwait
pop
dec
stos
xchg
sbb
or
in
mov
in
sbb
adc
in
ds
pop
in
mov
orl
cmp
add
dec
add
aas
pop
inc
jne
lret
adc
mov
cltd
push
iret
xchg
mov
daa
fwait
mov
pushf
data16
xchg
imul
lds
lds
jbe
or
dec
sub
jno
pop
xor
loop
sub
mov
jns
je
ja
lret
ljmp
das
mov
int
jae
inc
push
push
rcll
inc
jae
sbb
push
inc
inc
or
insl
arpl
shl
sbb
mov
mov
or
xchg
mov
dec
cmp
push
lods
aam
sbb
push
insl
seta
hlt
mov
push
mov
xchg
pop
push
insl
cltd
xchg
sbb
adc
add
and
mov
ret
mov
xor
push
stos
insl
add
xor
cli
push
xor
enter
cmp
jg
mov
fs
iret
fnop
pop
in
mov
mov
dec
xorl
push
ljmp
in
pop
rcr
cmp
cmpsb
or
test
dec
fldt
lods
movsl
fisubrs
push
adc
pop
or
mov
ja
rcll
jo
negb
fmul
bnd
cmpsb
popa
shlb
popf
bnd
aas
adc
stos
cmp
sub
dec
daa
nop
sub
jle
incl
data16
lret
mov
mov
scas
lea
insl
mov
pop
mov
je
fsubl
stos
iret
add
bound
push
lret
lods
addr16
ficomps
push
cltd
jne
adc
rclb
pop
pop
lret
jbe
xchg
mov
adc
mov
imul
leave
sub
hlt
or
adc
stc
adc
loop
lods
jae
adc
dec
sub
jl
dec
cmp
dec
lret
inc
in
std
inc
loopne
test
stc
sbb
outsb
ja
jp
xorb
das
loop
popa
sub
sbb
inc
dec
sbb
pop
xchg
xchg
rcl
xor
not
fdiv
arpl
cmpsl
mov
inc
test
in
mov
sarl
mov
pop
mov
inc
sub
dec
shrb
test
popa
push
popf
dec
and
push
sbb
aas
mov
popf
cltd
lahf
nop
ja
jge
jle
mov
cld
notl
stc
in
xchg
cwtl
mov
andb
shll
and
cs
dec
leave
push
sbb
loope
and
mov
repnz
pop
mov
and
gs
push
stos
cmp
das
imul
jns
pop
cmp
xchg
mov
call
cmp
in
adc
gs
mov
ja
inc
mov
mov
mov
and
mov
mov
inc
outsb
cmpsb
mov
lods
negl
mov
pop
arpl
adc
fistpl
loop
loope
jp
scas
jle
in
xchg
jae
xor
in
bound
xor
and
lods
inc
push
in
addr16
xchg
int3
into
popf
mov
xor
mov
xchg
jl
imul
mov
loopne
aas
or
push
cltd
push
insl
movlps
push
adc
test
adc
subl
pop
push
mov
sub
rorl
out
ss
outsl
and
cmp
sub
hlt
aad
xor
clc
ret
lret
or
data16
xchg
test
andb
aaa
mov
and
scas
ja
xor
cmp
jb
mov
add
push
mov
pop
lret
aam
xchg
jne
sub
fbld
out
pop
lods
sbb
repnz
or
push
push
sub
sub
inc
adc
sub
fsub
aaa
inc
fiaddl
pop
mov
inc
fiaddl
jno
or
out
ss
pop
scas
test
bound
ss
or
jmp
inc
add
sbb
push
cmpsb
xchg
adc
in
add
and
or
in
jnp
pop
cmpsl
insl
mov
adc
mov
adc
bound
sbbl
jns
add
sbb
xchg
pushf
or
jns
jmp
outsb
sub
adc
or
imul
adc
fidivrl
mov
jmp
pop
bound
jmp
dec
dec
pop
xchg
cld
xchg
push
xchg
aad
cmp
daa
xlat
jmp
cld
daa
mov
outsl
cmpsb
sarb
popf
stos
je
mov
negb
insb
jbe
mov
mov
push
std
cli
push
cwtl
mov
pop
rcr
loope
inc
fistps
xorb
add
dec
ljmp
sub
arpl
and
popa
sub
mov
fimull
test
jmp
sbb
movsb
pop
mov
fidivrl
push
sub
movb
dec
push
mov
mov
repz
jno
loop
rclb
adc
out
leave
xchg
test
mov
xchg
call
mov
fnsave
out
pop
push
lahf
out
dec
adc
mov
arpl
out
pop
shlb
mov
jbe
decl
inc
push
insl
or
dec
push
out
iret
js
mov
call
and
lcall
pushf
out
cmp
push
mov
xchg
push
push
vucomiss
aam
inc
dec
push
mov
pop
mov
loopne
call
adc
adc
jae
push
lock
adc
negb
sub
les
es
fs
mov
add
pop
and
add
xchg
fucomp
pop
imull
negb
cltd
push
cltd
scas
test
adc
pop
or
dec
jae
dec
shrb
movsl
into
cmpsl
lock
cs
pop
push
popa
add
dec
cmpl
mov
pop
dec
push
and
popa
mov
test
xor
dec
jns
cmp
xchg
gs
pop
std
fwait
mov
xor
testl
incb
outsl
or
push
mov
sub
xchg
lods
repz
xor
add
cmp
out
mov
int
bound
jno
or
mulb
adc
xchg
push
lock
xor
gs
xchg
jmp
rorb
cmp
sti
movsl
and
and
ds
inc
mov
jae
jne
sti
sub
ret
loop
and
push
sbb
pop
sub
mov
out
lret
int
push
sti
xor
divb
ret
xor
cld
adc
mov
pushf
neg
sub
cmpsb
fsubrs
mov
adc
clc
or
es
lcall
lods
mov
xchg
mov
lcall
test
push
stc
cmp
mov
clc
fisttps
sbb
mov
jno
pop
mov
cmp
or
pop
mov
icebp
pop
add
inc
fmull
jno
arpl
in
add
dec
and
pop
scas
mov
call
fimull
mov
cld
cmp
mov
adc
adc
push
cli
mov
popf
mov
movsb
test
jne
jne
jbe
inc
mov
sbb
or
bnd
out
cmpsb
pop
dec
clc
iret
pop
es
push
movsl
test
stc
leave
sbb
sbb
stc
and
scas
push
dec
stos
insb
cmpsb
ljmp
movsl
incb
push
dec
aas
pop
pusha
fsubrl
insl
jno
stos
push
ljmp
pop
scas
mulb
shll
scas
xor
loope
and
mov
in
outsl
mov
mov
xor
dec
icebp
cmp
or
inc
test
mov
sub
or
dec
pop
outsb
enter
xchg
cmpsl
fldt
stos
mov
outsw
daa
daa
gs
call
pop
fwait
incl
cld
shll
pop
and
enter
inc
and
call
mov
fucomip
mov
push
inc
cmp
fnstsw
cmc
jb
test
dec
cmp
adc
idivl
leave
dec
imul
outsb
clc
icebp
lahf
mov
sahf
cli
xchg
pop
cmc
pusha
mov
cld
scas
hlt
fxch
dec
mov
and
and
sbb
mov
mov
mov
inc
les
xchg
add
cmpsl
add
add
mov
adc
mov
mov
xchg
mov
cmp
mov
mov
icebp
mov
dec
lret
cwtl
and
fnstenv
cmp
imul
sub
add
jmp
jns
loopne
lods
jbe
cltd
xchg
cs
fildl
inc
clc
adc
dec
test
je
js
int3
mov
sub
sbb
sub
mov
sbbl
cmpl
fdivrl
repnz
fisubrs
mov
fildll
subw
out
leave
scas
pop
mov
sub
add
jmp
jp
mov
inc
fucom
xchg
mov
mov
aad
or
sbb
mov
popf
cwtl
lds
loop
jl
and
fldlg2
cmc
adc
loop
pop
fwait
rcr
mov
daa
test
fisubrs
inc
mov
pop
fs
adc
loope
shlb
data16
pop
add
cmp
mov
in
and
cmp
push
dec
adc
adc
jge
jnp
mov
mov
outsb
popf
push
cmc
iret
lea
lcall
sub
or
push
xchg
popf
push
scas
xlat
jns
push
inc
push
jg
int3
sub
pop
inc
push
add
in
movsl
cmp
sti
lcall
jge
int
dec
and
mov
xchg
jmp
push
pop
lret
add
lods
cwtl
pop
adc
mov
inc
dec
rcl
mov
sbb
xchg
insl
aaa
dec
bound
leave
mov
scas
mov
sarl
add
testb
push
ljmp
push
adc
aad
arpl
lahf
add
jb
movss
jo
jecxz
xchg
jp
fsubrs
sti
repz
push
cmp
adc
cmp
jne
test
inc
je
mov
pop
in
push
push
mov
jmp
xorl
ja
mov
xchg
jnp
jae
sub
test
jp
mov
stos
or
mov
loop
rclb
mulb
sbb
std
sbb
scas
and
fdivl
gs
pop
or
add
icebp
inc
adc
rcll
fdivp
jl
movsl
push
and
or
adc
mov
int3
jns
push
jo
or
ret
in
mov
sbb
rclb
ficomps
loop
fdivrl
pop
xchg
rcrl
test
faddl
ret
inc
inc
out
add
test
inc
pop
jns
mov
push
mov
xchg
pop
sub
out
xchg
pavgb
dec
mov
imul
lds
sbbb
ja
xor
addl
ret
ror
test
and
pop
mov
lods
adc
stos
ja
push
jecxz
test
push
jecxz
inc
dec
xchg
mov
and
sub
sar
jne
jecxz
mov
in
aam
ds
stos
in
inc
insb
xchg
adc
test
push
lods
js
and
lods
inc
or
adc
cmp
daa
or
test
mov
in
mov
lret
pop
fs
xchg
fildl
inc
and
sahf
mov
pop
cmpl
or
xor
xchg
sbb
sub
test
js
cmp
cltd
fucomi
pop
bound
aas
test
xchg
xchg
loope
xchg
out
jno
push
int
jmp
lea
mov
and
int3
jb
inc
mov
movsl
adc
fsub
rol
rclb
popf
inc
xchg
xor
mov
cmp
mov
test
jp
ja
fisubl
sub
fidivs
xchg
dec
jae
loopne
pop
inc
jnp
in
filds
mov
stos
mov
pop
or
ljmp
in
cli
jb
shlb
mov
fisubl
clc
cmc
inc
jo
or
sub
sub
or
in
xchg
add
jae
fdivs
xchg
and
fimull
mov
leave
mov
fistps
stos
dec
js
mov
mov
pop
enter
cld
gs
adc
lahf
dec
sbb
mov
xchg
cltd
push
daa
fdivrs
pop
scas
cld
push
int
push
loop
sbb
mov
data16
add
pop
stos
mov
adc
mov
das
stos
pop
loopne
cmp
cmp
adc
gs
mov
pop
movsl
adc
mov
mov
xor
xor
repz
fldl
dec
sbb
iret
xchg
xchg
mov
out
add
into
fwait
inc
imul
adc
fsub
insb
out
mov
mov
xor
cmp
sbb
outsb
out
push
out
mov
lret
or
and
add
lcall
xorb
push
in
flds
stc
popa
das
pop
test
out
mov
xor
adc
rcl
neg
cmp
push
jne
add
dec
aas
pop
mov
dec
fimuls
popf
sbb
inc
xor
mov
leave
or
loope
xchg
add
pusha
ss
mov
mov
test
add
mov
dec
ret
or
pop
and
pop
adc
or
lds
shrl
xlat
jo
sub
cmp
pop
sahf
lods
cli
mov
adc
jmp
adcb
sbb
test
push
cwtl
addb
rorl
repz
pop
and
fdivp
das
add
add
mov
inc
pop
popa
push
sub
dec
push
into
outsl
call
fdivr
cmp
das
addr16
inc
sbb
notb
negl
jmp
icebp
into
jns
leave
fmull
sbb
ljmp
idiv
jl
mov
add
outsb
ja
test
ss
fwait
push
fildll
mov
aad
mov
xorb
pop
pop
shl
mov
jge
or
cmp
add
std
popf
push
call
adc
test
pop
test
or
inc
sub
add
jne
fistpl
cli
hlt
cmp
cs
test
dec
negl
sahf
nop
push
push
xchg
push
movsb
idivl
rcr
push
sbb
sbb
std
inc
jne
in
gs
xor
lock
cmpsb
out
cltd
daa
lea
pop
test
push
pop
faddl
roll
push
cld
test
xor
cmp
xor
and
push
pushf
repz
loope
lea
sub
outsl
into
ret
testl
xchg
pop
mov
jbe
mov
hlt
and
call
divl
jmp
mov
out
push
jo
sub
pop
movsb
scas
cmpsl
rclb
test
imull
lahf
shlb
push
jnp
push
push
pop
sti
cmp
and
sbb
daa
push
stos
adc
popf
dec
mov
test
push
fs
lods
lret
bound
loopne
add
pop
pop
stc
or
sahf
insb
mov
xorl
xor
fisttpll
stos
and
xor
int
xor
andl
pop
lds
in
popf
xor
xchg
leave
test
sbb
jge
testl
sti
xor
push
push
js
neg
ret
lods
mov
addr16
arpl
test
sub
mov
ds
inc
cmp
into
stos
and
add
lcall
daa
mov
outsb
fwait
pushl
sub
add
lods
ret
xchg
or
xchg
leave
je
pop
loopne
push
sub
nopl
popf
jae
sbb
sbb
adc
pop
xor
pop
push
leave
and
shlb
pop
sub
jp
bound
dec
bound
jge
scas
mov
push
data16
sahf
js
test
stc
loope
movb
in
int3
or
test
mov
and
sti
xor
mov
repz
pop
mov
push
mov
pop
sub
or
push
pop
mov
mov
cli
rorb
xor
push
lods
inc
xlat
dec
aad
fsub
push
sbb
iret
add
ds
add
sub
shl
sub
mov
add
mov
ljmp
push
not
mov
mov
dec
inc
aam
inc
jp
ds
mov
jae
shr
push
mov
mov
push
sub
xchg
imul
cbtw
jmp
cmp
add
xchg
jmp
repnz
xchg
hlt
push
adc
hlt
dec
mov
sbb
popf
pop
movsl
dec
jbe
mov
stc
test
and
sbb
notb
cmp
insl
iret
adc
fadd
inc
ficoml
add
push
subb
adc
aas
orl
jecxz
cmp
stos
push
bound
cmpsb
cld
ficomps
push
jge
cmp
push
loop
pop
ret
sub
fnstsw
push
lret
pop
jecxz
addb
jno
pop
cs
mov
mov
mov
cmp
iret
mov
lret
jle
inc
fldl
hlt
inc
and
jno
push
push
imul
popf
dec
jle
mov
pushf
pushl
adc
negb
int
daa
gs
out
adc
repnz
pop
and
jbe
je
cmp
scas
jl
cmp
pusha
insl
mov
xchg
or
nop
and
inc
jne
fsubl
inc
popf
fadds
std
xchg
or
jmp
fdiv
out
in
ds
mov
clc
rorl
mov
cmpb
imul
sub
jmp
cmp
adc
stos
mov
cmp
aas
xchg
add
push
data16
dec
cmpsl
cmpsl
mov
out
and
dec
addr16
repnz
in
paddsb
inc
loopne
cwtl
or
mov
and
fs
fisubrl
leave
jg
jecxz
jp
jmp
pop
pop
mov
mov
test
sbb
loope
bound
fbld
rcr
movsb
scas
adc
pop
mov
adc
pusha
or
xor
cwtl
adc
xor
cwtl
ds
sarb
dec
mov
push
or
icebp
adc
inc
inc
push
jg
nop/reserved
ljmp
mov
popf
jno
pop
jge
ror
or
sbb
movsl
pop
inc
pop
and
push
mov
dec
loope
ret
cmp
mov
inc
pop
loopne
pop
inc
mull
pop
mov
pushf
pop
jne
adc
push
mov
das
or
dec
or
mov
adc
sti
cmc
mov
inc
pop
mov
adc
cs
cmc
insb
xchg
jnp
mov
jbe
or
mov
push
imulb
lcall
orl
mov
jne
add
popf
mov
fwait
repz
adc
pop
mov
outsl
xor
sarl
push
jb
les
rol
xchg
mov
test
jle
outsb
clc
cltd
pop
jno
xchg
and
inc
stc
and
fstps
adc
pushl
lahf
cmpsl
dec
add
repz
dec
outsb
lods
push
imull
iret
je
cmp
fs
and
insb
or
scas
out
dec
in
aas
mov
cmp
and
cmp
fisubrs
test
test
jl
ljmp
insl
je
inc
aad
mov
nop
add
push
mov
adc
cmp
movsl
and
inc
dec
pusha
or
loop
repnz
repz
enter
int
cmp
xor
fbstp
cmpsb
jmp
cli
pop
inc
xlat
fisubs
cmc
lods
push
mov
pop
jo
cmpsl
sub
fs
in
mov
xchg
test
xorb
loopne
fidivl
sub
ja
divb
adc
cmc
bound
dec
mov
adc
push
add
sub
and
aaa
mov
cltd
sbb
sbb
mov
and
mov
push
ret
xor
push
mov
cli
out
push
mov
dec
or
push
bound
cwtl
shrb
imul
outsl
movsb
pop
addl
stc
cld
pop
cmp
ljmp
in
loope
mov
int3
mov
lret
outsb
push
repnz
addr16
in
xor
jge
leave
call
add
fwait
add
int
daa
jo
int3
je
jmp
gs
jnp
pop
xor
fadds
xchg
rorb
gs
sub
jo
sbb
sti
out
mov
test
sbb
pop
in
cmpsb
jle
loop
add
lds
mov
cmp
mov
xchg
cmpsl
dec
iret
out
repz
sbb
jbe
loopne
es
or
lret
xchg
aaa
xchg
in
cmp
mov
jbe
inc
mov
mov
rorl
xorb
lock
std
fisubs
iret
movsb
jl
lods
aam
gs
fninit
cmp
push
jne
add
mov
mov
jg
pop
call
push
inc
xchg
out
or
dec
pop
rcrb
iret
jno
inc
fmuls
movaps
icebp
cmc
jb
dec
test
fs
jl
push
or
rcll
ljmp
mov
lahf
jle
mov
ret
and
sbb
mov
shrb
sbb
pop
mov
xchg
push
adc
test
dec
mov
imul
ret
push
ffree
insb
pop
ljmp
orl
cmp
mov
xchg
rcl
adc
loope
stos
pushf
jb
popa
les
lds
insb
xchg
add
or
jge
inc
sbbb
outsl
cmc
cs
ljmp
jle
pop
inc
jnp
and
cmp
into
loop
lahf
out
jp
stc
ret
rcrl
or
mov
push
repnz
mov
pusha
jno
loop
pop
sbb
pop
cmc
aas
pop
fs
daa
mov
je
js
sub
outsl
cmp
mov
movsb
lock
sub
inc
jecxz
fadds
sahf
mov
into
xchg
in
xchg
adc
scas
lret
sbb
mov
in
test
jle
stc
out
outsb
adc
xor
mov
into
cmpsl
mov
gs
mov
mov
push
jnp
mov
jo
pop
arpl
out
lock
and
jae
push
imulb
jecxz
mov
insl
pop
bound
push
fistpll
ds
dec
lods
adc
fnstenv
ljmp
push
xchg
loopne
pushf
gs
loope
movsl
cwtl
pop
daa
xor
or
repz
movsl
cmc
adc
cmc
out
or
mov
mov
orl
repz
lcall
sbb
add
cmp
imul
xlat
xchg
inc
loop
pop
arpl
out
inc
sbb
add
adc
adc
movsl
mov
shrb
rolb
cs
mov
push
and
repnz
mov
push
inc
out
test
mov
nop
inc
js
in
jo
adc
cmp
fwait
mov
and
adc
test
stc
add
test
sub
cmpb
addr16
jno
adc
cmp
notl
xor
adcb
out
push
cmpsl
push
add
movhps
push
ret
jmp
das
pop
and
cmp
outsb
lea
test
cmp
loop
in
lcall
ret
scas
idivl
xor
add
leave
or
or
sti
xor
cmpsl
sti
sahf
ljmp
aad
mov
aam
cmp
fistps
jecxz
pop
fiadds
loopne
pushf
repnz
push
add
xchg
jg,pn
mov
aad
je
xchg
lret
gs
dec
imul
dec
ds
mov
jo
loope
ret
cmp
sbb
data16
or
push
rcrl
and
mov
vmovhpd
mov
shrb
xlat
and
or
push
pop
sub
push
xor
lcall
and
mov
popf
out
add
sub
mov
mov
outsl
sbb
and
sub
mov
xchg
mov
push
stos
xor
insb
popf
xchg
xor
movsb
ss
in
adc
and
out
lret
negl
inc
push
push
out
lret
push
dec
mov
loopne
cmp
adc
cs
or
add
pop
and
les
mov
fsts
jmp
push
ss
cli
sti
push
sbb
outsl
sub
mov
mov
xchg
inc
lahf
sbb
mov
jle
lret
jge
icebp
jno
push
movl
mov
sub
dec
push
dec
leave
pusha
aas
loopne
jmp
fsubrp
cltd
add
repz
ljmp
and
insb
mov
sub
cmp
insb
jo
loopne
mov
ja
xor
jp
and
fbstp
jecxz
jp
fadd
mov
test
push
pop
sbb
cmp
in
dec
mov
mov
mov
dec
jbe
inc
decl
or
pop
adc
pop
xor
rcrb
sti
push
push
arpl
mov
imul
lret
adc
inc
roll
push
xchg
aas
aaa
jo
inc
mov
hlt
mov
xchg
inc
cmp
in
insb
mov
test
into
ret
cmp
cmpsb
and
adc
mov
orb
inc
out
clc
outsb
dec
cltd
ljmp
xlat
into
jl
jae
sbb
pop
subl
cmc
add
test
data16
aad
iret
pop
mov
jo
xor
xchg
jno
mov
sub
shl
xchg
out
and
cmp
das
insl
outsl
sbb
sbbl
test
dec
adc
mov
ret
jb
dec
frstor
in
mov
adc
fcompl
jne
dec
lods
xchg
sub
das
cs
xorb
hlt
mov
mov
stc
adc
jbe
aam
or
mov
mov
mov
fildll
jmp
sbb
mov
lods
push
mov
inc
sti
int
mov
sbb
shll
xor
out
jp
xor
pop
mov
out
cli
jl
adc
fwait
and
dec
dec
imul
pop
inc
add
push
push
nop
loope
es
sub
xchg
sub
mov
cmp
add
js
loope
test
stos
inc
lcall
add
bound
wbinvd
xor
mov
xchg
call
fwait
inc
push
mov
leave
rol
data16
cltd
leave
mov
jne
cmpb
fcoms
mov
mov
mov
sub
int3
push
lods
clc
fisubrl
jge
ds
xchg
jmp
pop
jecxz
cmp
bnd
test
fbld
scas
xchg
mov
lods
outsl
rcl
mov
or
jns
and
pop
sbb
bound
inc
clc
loope
mov
mov
out
sbb
mov
aaa
pop
or
sub
mov
inc
mov
jnp
xchg
mov
cmpsb
sti
mov
test
and
and
sub
in
dec
test
test
scas
ja
push
pop
les
dec
cmp
jecxz
jb
and
mov
xor
das
incl
daa
push
jecxz
mov
mov
inc
clc
jl
xchg
and
mov
icebp
xchg
mov
inc
repnz
out
push
mov
mov
and
xchg
jne
mov
clc
cmpsl
js
pop
cmpb
arpl
neg
dec
pusha
jno
fcompl
gs
inc
bound
es
clc
mov
ljmp
in
into
push
cmp
lcall
ja
gs
sbb
jp
cmc
in
nop
cmpsl
adc
out
repnz
lret
mov
arpl
xor
sub
inc
add
push
adc
outsb
mov
adc
gs
sub
andl
dec
mov
enterw
push
fldt
das
pop
sarl
out
fcmovb
lods
adc
movl
adc
outsl
dec
pop
sub
or
loop
mov
mov
push
cmp
mov
divb
insb
fnstsw
call
test
sub
sbb
xchg
push
mov
in
ret
fldcw
test
ja
mov
js
mov
dec
add
repz
fstpt
cli
and
xor
push
dec
add
ja
int
imul
inc
push
insl
sbb
int
xor
jno
pop
sbb
adc
sahf
mov
xchg
aad
lods
inc
jle
xchg
outsl
and
movsl
rcr
std
imul
gs
ds
add
push
sti
mov
cwtl
repnz
mov
inc
jmp
add
imul
or
inc
cmpsb
daa
out
shlb
adc
scas
imul
cmp
sbb
add
sub
hlt
pop
jno
shrb
fimull
not
out
mov
cltd
or
inc
jl
roll
jb
cs
mov
cmpsb
sbb
subb
push
pusha
mov
mov
inc
push
popl
inc
adc
pop
mov
jmp
jmp
mov
popf
mov
aad
jbe
stos
pop
jno
mov
insb
adc
pop
icebp
or
bound
test
out
out
mov
jmp
out
mov
xor
xor
stos
sub
push
push
out
mov
cwtl
sbb
iret
das
mov
sub
jne
mov
stc
scas
shr
jae
in
mov
cli
or
pop
negb
aas
les
push
lcall
xchg
xor
fwait
es
adc
mov
int
fbstp
jo
cld
lods
lahf
mov
les
lret
and
mov
leave
das
dec
or
inc
cmp
adcb
insl
add
pop
pushl
xchg
dec
jne
cwtl
and
pushf
mov
cmp
or
or
jp
hlt
jnp
inc
inc
cmp
lods
std
arpl
adc
mov
push
mov
shlb
xor
invd
out
ljmp
jbe
mov
and
fiaddl
push
call
je
adc
test
faddp
cmpsl
jg
sti
insl
and
lods
out
imul
dec
jecxz
xor
fwait
rolb
or
dec
nop
fdivl
and
lods
ljmp
dec
pop
and
mov
and
dec
mov
mov
push
enter
fmull
test
rclb
dec
mov
adc
mov
fistl
sbb
xchg
xchg
jae
jge
ds
outsl
mov
pop
bound
jno
out
add
jle
and
mov
int
sub
or
aad
ja
sarl
xor
jnp
jmp
dec
stos
icebp
shrl
xchg
mov
mov
mov
outsb
and
add
add
imul
aam
push
jns
orl
mov
xchg
sub
fs
rcrl
inc
mov
lods
mov
hlt
leave
inc
rclb
mov
lock
dec
aaa
mov
push
movsb
fsubrl
sbb
ljmp
movsb
dec
sub
pop
pushf
int3
xor
jb
ja
mov
test
cmp
test
xchg
pop
ss
push
xchg
sti
xor
mov
mov
pop
cmp
imul
ret
jne
pop
repz
dec
in
jecxz
xchg
push
jae
in
dec
add
fidivrl
xchg
sbb
mov
xor
dec
jnp
aam
mov
cltd
imul
xor
idivl
iret
cwtl
sub
cmpsl
rorl
into
adc
sub
push
cmp
cltd
push
out
arpl
notb
mov
out
jmp
xor
push
dec
sub
fdivs
bound
sbbb
repz
jns
psubsw
jle
out
push
out
popf
dec
iret
in
inc
fadds
outsl
loop
jl
leave
push
mov
ja
decl
cmc
jno
xchg
loope
lret
xlat
xchg
xchg
pop
insb
jbe
movsl
ret
pop
add
outsl
nop
mov
push
add
int3
mov
fwait
cmp
notb
mov
fadd
arpl
mov
xor
cld
incb
in
icebp
shlb
dec
mov
out
icebp
ficompl
pop
test
jg
cmp
push
cmp
lods
add
xor
leave
lds
int
sub
cmc
jecxz
push
dec
cli
xor
inc
add
subb
add
hlt
ja
xor
or
loopne
in
push
pop
iret
std
dec
mov
jo
out
fcompl
xor
add
mov
arpl
sti
movb
xchg
in
fisttps
popl
out
inc
repnz
push
negl
xor
mov
repnz
movb
jnp
jnp
and
pushf
mov
mov
inc
jmp
in
pop
lods
ret
xchg
insb
xor
je
inc
jmp
mov
sbb
cmp
jmp
dec
insb
in
loop
sbb
in
lock
and
cmp
or
dec
std
lcall
mov
inc
jge
cmpsl
push
xchg
mov
jecxz
pop
dec
jg
pop
xchg
sub
inc
fchs
jl
jne
inc
xchg
cmp
pushf
dec
or
pop
dec
adc
in
cld
add
inc
sahf
mov
mov
sbb
stos
aam
notb
loope
jne
push
rolb
xor
movsl
fstp
nop
mov
test
xchg
pop
rcrb
jae
ud2
add
jbe
mov
mov
imul
jno
dec
ss
push
cmp
add
sbb
rcrb
pop
sbbb
mov
sub
add
pop
and
addb
not
aad
es
in
int3
xlat
cmp
dec
jno
ja
mov
out
dec
aam
jno
popf
fscale
leave
dec
imul
sbb
xor
xlat
out
pop
jo
pop
ss
add
sahf
lret
repz
rclb
pushf
push
mov
gs
rcr
std
repz
or
mov
dec
and
inc
test
pop
stos
jecxz
sub
loope
mov
loop
sub
push
pop
vfrczpd
mov
adcb
cmpsl
iret
push
out
jb
mov
push
sarb
lods
mov
pop
pop
ljmp
sub
fcoml
fwait
andb
pop
jo
lcall
cmp
xchg
push
mov
rcr
cwtl
pop
push
addr16
cmc
add
les
jmp
mov
mov
cmp
inc
push
jbe
aam
in
mov
mov
push
or
mov
pop
cmp
jo
addl
stos
aas
xor
sub
sub
fs
inc
leave
cmp
leave
sbb
jle
xchg
jb
popf
repnz
cli
repz
scas
test
nop
pop
cmc
jae
imul
cmp
sub
popf
in
push
ds
or
lret
sub
mov
xchg
addr16
mov
mov
std
inc
push
repnz
push
dec
jne
ja
adc
jb
cs
pop
xchg
fwait
sti
leave
jno
cmp
xor
mov
xor
dec
cmp
adc
decl
mov
sbbb
mov
xchg
adc
push
scas
jo
mov
push
jge
aam
or
cmp
cmp
movsl
movb
pop
sbbl
mov
sub
movsl
mov
int
cwtl
fdivl
sub
push
cmp
mov
fisttps
dec
jne
dec
push
subb
mov
sbb
jae
fdivr
rcrb
and
andl
sub
cmp
sarb
popa
movsb
dec
pop
push
test
popa
dec
sti
aam
call
mov
fnstenv
fcompl
sub
jno
sub
pusha
repnz
lret
mov
lods
adc
pusha
aaa
and
or
mov
push
mov
jns
xchg
jmp
pusha
fwait
rorl
popf
xchg
addl
cs
dec
lret
cld
xor
xorb
cltd
mov
mov
pop
cmpsb
xor
pop
stos
out
sbb
test
and
arpl
mov
nop
stc
adc
insl
inc
loopne
push
xchg
sbb
xchg
icebp
daa
incb
fbld
cmp
and
jne
push
adc
mov
jb
mov
hlt
xor
imul
ret
movsl
pop
in
hlt
shlb
mov
jmp
jb
jbe
cmp
jb
movsb
sbb
push
mov
push
rorb
gs
sub
adc
int3
xchg
sahf
sbb
testb
outsb
cmp
or
ud0
mov
es
add
scas
xchg
mov
mov
lods
call
test
pop
lret
dec
mov
sub
lods
jp
je
movsl
clc
lret
cmp
fs
xchg
mov
xchg
clc
cmpsb
push
sbb
stc
fmuls
int
jmp
xchg
jmp
sbb
andl
stos
xchg
mov
add
push
lahf
push
repnz
and
dec
mov
pop
push
mov
mov
test
loopne
cmp
loop
js
and
pop
dec
mov
subb
nop
lahf
cmpsb
xchg
notl
popf
into
add
mov
test
inc
xchg
cld
mov
add
ss
sti
mov
sti
js
std
not
loop
inc
jb
fildll
ret
mov
data16
mov
xchg
sbb
sbb
xor
or
dec
cltd
out
inc
fdiv
cmp
jbe
add
or
neg
pop
mov
or
ss
cli
mov
cmpsb
xchg
das
inc
adc
repnz
and
add
mov
pop
std
mov
push
fimuls
inc
xchg
xlat
sbb
dec
dec
sbb
lock
cmc
dec
inc
xor
pushf
push
lcall
addr16
movsb
and
fucomi
loopne
sub
pop
pop
mov
leave
cmp
push
pop
jl
aad
xor
xor
fs
jle
dec
mov
mov
aad
ljmp
mov
sub
cmp
in
repnz
adc
jnp
lods
mov
movb
addr16
or
push
addr16
leave
inc
mov
mov
mov
sbb
loop
cli
sbb
lds
pop
dec
lret
out
mov
and
stos
movsl
rclb
push
in
stos
jb
mov
aas
loopne
dec
std
fs
sti
mov
and
fbld
and
jecxz
pop
jg
adc
dec
dec
mov
int
mov
ds
and
addr16
or
lods
mov
test
xlat
fbstp
xchg
cmp
ds
and
pop
idiv
nop
int
andl
jbe
pop
push
enter
sbb
mov
pop
jb
add
cmc
popa
inc
xor
imul
in
xchg
shlb
sbb
in
or
adcl
scas
and
jae
js
jo
enter
out
xor
mov
aad
cmp
clc
jae
out
jg
inc
dec
jl
mov
jmp
dec
fstl
daa
sub
inc
jbe
fldl
xor
and
stos
popf
mov
pop
sti
mov
out
or
repz
or
dec
test
les
dec
jl
push
pop
popa
jae
fistps
imul
jb
cli
jo
sub
repz
sarl
insl
enter
out
sbb
jno
ljmp
js
cmp
enter
mov
adc
lret
mov
subb
pop
lock
mov
sbb
insl
test
popf
pop
sbb
aaa
mov
mov
jbe
jl
dec
xchg
in
aam
data16
mov
push
mov
das
leave
push
das
add
jp
cmp
icebp
pop
sub
cmpsl
test
inc
add
jle
std
adc
scas
mov
xor
std
cmpsl
pop
inc
and
rclb
sub
pcmpeqw
scas
jg
pushf
xchg
gs
jne
xchg
enter
aaa
clc
mov
adc
fxch
sbb
pop
popf
je
push
into
xchg
shlb
xchg
loop
xchg
int3
dec
mov
pusha
and
lret
cmp
xor
adc
mov
add
jecxz
xchg
fadd
cmp
cli
mov
daa
mov
cmc
sahf
jg
outsb
adc
push
faddl
sub
loop
and
mov
cmpl
sti
mov
pushf
sub
mov
adc
sarb
dec
movsl
shll
push
in
xchg
outsl
adc
mov
leave
cli
mov
icebp
inc
pop
pop
lods
loopne
arpl
js
pop
mov
xor
or
sbb
dec
sub
cs
or
loope
push
jno
roll
lahf
xor
repnz
xor
or
andl
out
fldl
fcmovbe
jmp
xor
addr16
inc
sub
in
pop
inc
dec
fwait
mov
add
pop
pop
dec
push
mov
xchg
jnp
adc
cmp
xchg
mov
or
movsl
outsb
cwtl
mov
fistps
pop
inc
xchg
push
dec
outsl
mov
pushf
add
xchg
sbb
cld
xor
xorl
or
gs
ja
add
push
clc
cs
rolb
adc
rolb
jg
fwait
inc
sub
incl
push
jmp
outsl
orl
jecxz
fs
xlat
hlt
push
sub
test
adc
pop
push
mov
lock
xorl
jae
ret
loope
lcall
mov
push
lock
test
fistl
mov
push
popa
sub
adc
in
out
popa
stos
cmpsl
filds
loop
je
std
in
lock
or
xchg
push
pop
dec
add
pop
pusha
orb
pushf
mov
xlat
mov
add
dec
cmp
flds
jl
sub
push
into
push
sarl
sahf
les
aad
push
xchg
shll
or
sbb
pop
cmp
lods
or
push
mov
call
push
mov
bound
shrl
push
ror
arpl
mov
inc
fisubrl
jge
pop
xchg
xchg
pop
jmp
stos
loope
and
jp
mov
pushf
leave
arpl
dec
mov
icebp
push
xor
insl
ror
mov
popf
mov
push
lds
pop
jbe
pushf
test
mov
divb
test
arpl
addr16
shll
repz
call
jne
push
lods
idivl
inc
dec
xor
sub
out
cmp
sahf
fadd
pop
push
pop
aam
xchg
push
fwait
xchg
pop
test
jecxz
and
jbe
pop
icebp
dec
push
aas
or
adc
sbb
bound
and
mov
inc
jae
incb
push
lods
cmpsl
push
out
cmp
fistl
stos
mov
popa
pop
dec
add
rorb
lods
sub
mov
outsb
ret
mov
and
nop
xchg
addr16
mov
mov
sub
or
xchg
leave
mov
jbe
push
mov
lods
mov
incb
push
cs
icebp
lret
inc
rcrl
inc
mov
mov
mov
fisubs
ret
ror
test
push
push
mov
sub
pop
xchg
daa
mov
and
repz
out
adcl
sub
imul
ret
into
shrb
repz
xor
mov
mov
bound
nop
les
jnp
mov
add
sbb
in
cli
adc
popa
sahf
clc
hlt
pop
xchg
pop
adc
notl
and
push
xor
fldenv
sbb
fbld
mov
add
sub
and
mov
cmp
cmp
fcmovb
lret
jae
imul
sahf
mov
pop
sub
pop
rorl
xor
andb
sub
fiaddl
int
or
cmp
arpl
xchg
les
sbb
pop
mov
or
ror
outsb
loop
aad
mov
scas
fnstenv
cmpl
jno
lret
inc
pop
dec
mov
mov
dec
or
mov
cmp
mov
ficompl
stos
mov
or
subl
add
mov
or
rcr
dec
shlb
sti
lds
xor
pusha
push
and
push
mov
in
adc
test
adc
in
and
pop
inc
jge
dec
mov
out
shll
mov
xchg
sub
cmp
imul
xor
ficomps
jno
stos
and
xor
shlb
push
sbb
es
sbb
stc
jg
push
pop
test
inc
mov
stos
ret
jae
sbb
out
and
dec
out
scas
repnz
or
or
mov
xlat
loop
sbb
bound
and
ss
movb
pop
loope
inc
inc
lods
lods
das
data16
jle
mov
or
loop
sub
push
aas
xchg
sbb
adc
inc
dec
adc
sbb
xchg
or
sub
and
std
mov
xor
test
xchg
fisubrl
xor
test
movsl
mov
dec
sbb
or
xchg
cmpsb
mov
arpl
mov
jne
sub
les
push
push
lret
mov
push
lcall
imul
loop
dec
push
and
sbb
pop
ds
fucomi
cmp
cmp
mov
dec
push
popa
shl
mov
pop
xor
and
add
mov
mov
lret
dec
sbb
sar
lahf
lahf
push
pop
dec
repz
xor
sub
dec
dec
je
mov
mov
mov
ror
lods
xlat
mov
inc
out
adc
sbb
jno
shrb
mov
in
mov
or
cli
push
insl
je
and
movsl
jne
icebp
lea
out
loope
test
add
fildll
inc
fstpl
cmp
imul
lea
out
das
or
imul
mov
mov
xor
adc
push
sbb
and
rcrl
out
movsl
jb
loop
std
sub
dec
shrl
pop
arpl
push
fcmovne
dec
xchg
mov
insl
jg
or
push
mov
hlt
dec
aam
push
shlb
into
add
icebp
pop
mov
or
sub
dec
enter
adc
sbb
outsb
loopne
jmp
xchg
test
mov
ret
das
aas
add
dec
xor
inc
jae
jp
xchg
pop
rcrb
mov
mov
lret
dec
clc
int
mov
iret
push
inc
push
dec
rorb
cmc
scas
inc
and
gs
xorl
pop
adc
lea
nop
adc
outsb
push
push
fdivl
cs
jno
shrl
stc
fwait
ret
add
and
pop
stc
dec
mov
js
adc
xor
daa
mov
mov
dec
mov
out
xchg
mov
sbb
mov
jge
repnz
mov
jmp
xchg
lret
pop
out
ljmp
lds
cmp
sbb
sbb
lock
lods
imul
ret
insl
cli
xor
repnz
shlb
add
sub
and
mov
cmp
inc
cmp
or
mov
add
js
mov
es
pop
mov
mov
push
daa
std
in
add
inc
and
rcrb
arpl
add
jb
scas
or
stos
adc
inc
sahf
xchg
loope
xchg
daa
dec
xchg
bnd
push
xchg
stc
loope
leave
or
cmp
fcompl
adc
xchg
aaa
es
lahf
cmc
mov
insl
jle
fnstsw
push
mov
xchg
mov
inc
or
ret
jne
fstl
sti
leave
sub
inc
insl
test
sub
out
sbb
xchg
fisttps
dec
dec
or
js
sbb
and
ret
or
lret
lds
pushf
pop
add
lds
inc
jg
pusha
and
sahf
fwait
bound
xchg
mov
cli
jns
mov
insb
cmp
add
pop
shrb
shl
sub
jge
mov
mov
call
push
sub
push
iret
repnz
cmp
jmp
cmpsl
fwait
shl
cmp
mov
into
cmp
sbb
lds
test
lods
push
sub
outsb
gs
rcrb
scas
js
jne
push
push
cld
outsb
imull
xchg
cmp
lds
rorb
xor
dec
arpl
out
inc
iret
sub
pop
popf
jne
insl
stc
js
dec
and
mov
cmp
pop
loop
mov
cmp
mov
decb
ret
and
fstps
pop
xor
cwtl
mov
sahf
int
mov
sub
cld
or
jl
decl
adc
mov
pop
mov
test
or
push
jnp
loope
jg
mov
cmp
cmp
popf
adc
inc
xchg
mov
sbb
xlat
sbb
push
shrb
lods
fists
mov
les
popa
movsl
out
out
dec
adc
pop
insb
add
test
pop
in
enter
mov
cmp
dec
jnp
pop
push
inc
bnd
jl
or
xor
test
stos
cld
and
add
stc
addr16
in
or
xor
mov
and
int3
push
gs
mov
aaa
mov
mov
push
dec
rcrl
int
pusha
pop
adc
mov
test
mov
sub
pop
cs
sbbb
cmpsl
arpl
stc
subb
lock
ja
jns
inc
mov
lods
js
lock
push
pop
jbe
sbb
mov
cli
add
dec
sbb
stos
imul
imul
xor
pop
xor
add
push
adc
pushf
stc
lods
xchg
daa
std
and
adc
pop
mov
mov
xor
add
outsb
jns
loop
dec
subl
fdivl
mov
mov
cmp
jmp
jg
pop
sub
fcomps
mov
sub
and
rorb
dec
pop
clc
les
push
sub
cmp
call
dec
inc
and
xor
stos
subb
les
testb
mov
xchg
mov
js
rcll
fcomp
or
clc
aad
dec
inc
into
sahf
in
mov
ss
imul
nop
das
inc
jno
out
rorb
mov
xchg
addr16
fstps
pop
push
adc
enter
cmp
push
fdivs
inc
push
cmp
rcl
mov
in
adc
jns
js
sbbl
xor
insb
sub
nop
add
pushf
in
dec
and
or
adc
sbb
iret
add
inc
pop
imul
cmp
subb
movsl
lds
or
test
mov
int
mov
es
imul
or
js
rclb
lret
subl
call
and
or
mov
mov
stos
adc
lcall
and
mov
push
sbb
or
popf
xchg
data16
mov
fldlg2
jae
inc
jns
shlb
mov
andb
cmp
imul
sbb
lcall
add
jmp
data16
jno
adc
xchg
mov
and
fwait
in
mov
cs
pusha
lahf
sbb
push
in
dec
out
lea
repz
cwtl
mov
add
fwait
scas
xor
inc
push
and
pop
pushf
adc
xorb
xchg
movsb
push
add
cmpsb
xchg
xchg
push
mov
je
int
popf
out
sahf
fldcw
fwait
orl
adcb
pop
sbb
xor
sarl
cwtl
adc
add
mov
fnstcw
insl
inc
ds
lcall
xor
inc
and
mov
mov
cwtl
mov
int
xchg
daa
cmp
inc
adc
addb
loopne
push
inc
add
rol
fwait
scas
shrl
cmpl
popf
push
and
popa
xchg
jne
mov
ror
push
xor
into
daa
mov
subl
pop
xor
xchg
xlat
test
popa
arpl
out
call
push
rcrb
sub
into
sahf
push
sub
mov
ja
in
clc
pop
pop
pop
pop
pushf
xor
pusha
adc
add
dec
push
fbstp
pusha
push
cli
xchg
inc
jb
out
push
cmp
pop
jp
push
jnp
cmp
add
xor
fucom
jae
inc
push
sub
push
sbb
push
dec
cwtl
inc
push
bnd
add
popf
lcall
movsl
out
enter
sbb
ja
mov
sbb
sub
jmp
jne
js
xor
and
mov
rcll
imul
bnd
cmpsl
push
xor
cltd
mov
insl
clc
fcmovu
fsubs
pop
dec
mov
and
aas
lock
mov
jl
push
mov
nop
insb
rol
enter
jns
push
mov
pop
aaa
cmpsb
nop
iret
sub
pop
icebp
lss
scas
sbb
jg
loope
mov
mov
jg
mov
sarb
mov
rcll
aad
scas
and
rorl
mov
add
cmp
pushf
mov
mov
cltd
cli
inc
jno
hlt
cmp
cltd
sub
add
mov
sbb
push
dec
cmp
sti
test
xchg
in
xchg
fdivrl
cmp
or
call
push
cs
push
ja
pop
xchg
mov
arpl
aaa
inc
int
daa
jo
xor
xlat
or
add
jne
js
addr16
jp
sub
mov
sti
pop
andl
or
rcr
cmp
jno
in
sti
or
mov
mov
add
hlt
dec
lods
int3
shlb
lea
mov
mov
and
add
or
test
mov
mov
loope
out
arpl
mov
mov
int3
faddp
pop
loopne
xchg
dec
cmp
xor
shll
add
mov
mov
sbb
lahf
mov
and
xchg
into
or
jnp
pop
pushl
push
xchg
push
mov
cmp
lret
lret
or
mov
int
js
mull
frstor
scas
dec
jo
ret
sub
stc
or
leave
mov
rcll
pushf
outsb
aam
inc
and
and
test
xor
adc
mov
xchg
xor
sti
sub
or
inc
fucomi
cmp
popf
pop
cmp
cmc
iret
pushf
lea
inc
fidivs
sub
mov
test
adc
dec
ret
ljmp
out
jp
insl
iret
enter
lock
mov
jns
push
addr16
test
repz
xor
and
in
and
pop
movsl
pushf
in
fisttpl
add
mov
cmc
xchg
add
andb
stos
add
test
arpl
pop
sbb
into
and
int3
int
cmpsl
xchg
jno
popa
pop
push
jg
or
xchg
jmp
les
and
insb
int
cmc
sbbw
push
rorb
movsb
das
push
mov
cs
push
pushf
mov
fisubrl
or
popa
xor
jo
jnp
sbb
or
jl
pop
add
mov
outsb
pop
pop
movsl
inc
stc
ret
js
pop
mov
or
dec
mov
test
icebp
addr16
and
mov
and
inc
pop
ficomps
add
mov
push
test
aam
shr
adc
je
pop
xchg
mov
sbb
or
sub
mov
pop
into
mov
gs
dec
jmp
out
hlt
or
cmpsl
dec
adc
ret
dec
subl
pusha
in
movb
push
sub
and
push
movsl
out
adc
shl
mov
aad
in
andb
or
gs
adc
fwait
push
sub
pop
jne
lods
xchg
or
adc
sbb
jne
loop
sbb
dec
mov
pop
jl
mov
iret
leave
lahf
and
sub
xchg
ljmp
inc
adc
or
mov
sub
pushf
and
popl
lds
xor
inc
push
or
sub
out
sbb
xorb
mov
loope
jno
stc
pop
xor
fnclex
push
movsl
call
or
cli
es
add
call
fisttps
lods
mov
dec
mov
hlt
inc
insl
push
test
pop
push
test
or
cmp
loopne
lahf
out
cmpsl
inc
xor
andl
shrb
cmc
clc
push
fistps
pop
pop
sub
shlb
mov
sarb
int3
insl
ja
mov
in
xchg
mov
push
sahf
xchg
mov
dec
dec
sub
test
pop
mov
jo
adc
mov
icebp
scas
push
aad
test
sbb
and
icebp
arpl
dec
dec
xchg
inc
sahf
dec
sub
test
push
repz
repz
jge
pop
or
mov
pop
popf
cli
das
subb
cltd
xor
jecxz
fucomi
push
xor
sti
dec
popf
push
mov
push
fwait
cld
addl
mov
iret
ljmp
shll
inc
or
int
add
inc
jo
push
movsl
cmp
jae
mov
dec
dec
cmp
xor
cmp
shl
inc
mov
popa
outsb
dec
ret
cmp
and
mov
xor
pusha
test
dec
outsb
xor
fstl
mov
inc
cmpsb
xchg
jb
push
or
jno,pn
test
cmpl
mov
jmp
movsl
inc
pop
mov
in
sbb
inc
push
mov
test
aas
jp
lea
rcrb
push
adc
shll
and
sub
subb
sti
mov
sbb
je
cmp
out
jne
sub
pop
in
inc
imul
add
sarb
push
pop
pop
fistpll
xchg
ja
dec
pop
into
pop
filds
push
mov
inc
popf
cli
repz
cmpsl
notl
xchg
xchg
lods
dec
jp
push
sub
push
jne
aam
lea
in
xchg
dec
jae
inc
cmpsl
mov
or
sub
out
jmp
insb
xchg
lds
dec
cmp
imul
shrb
je
mul
int
inc
mov
sahf
inc
cmp
imul
xor
sbb
jne
xchg
notb
mov
dec
lea
movsb
in
lret
dec
mov
stc
loopne
shlb
jl
or
xor
xchg
inc
std
sub
fwait
ja
fdivs
sbb
pop
insb
pop
mov
cmc
xchg
add
lret
cmpsb
add
loope
push
adc
xchg
cmp
clc
push
mov
frstpm(287
fcoms
xchg
inc
lahf
sub
push
fcmovne
sahf
inc
mov
shll
sub
pop
and
push
adc
xchg
movsb
ret
and
adc
mov
test
sbb
je
jle
mov
rolb
inc
xor
or
xchg
and
out
jnp
fsub
pop
cmp
add
xor
daa
data16
stos
jae
push
jae
jb
aaa
fsts
lods
push
inc
insb
daa
inc
add
data16
mov
ss
clc
adc
adc
loopne
xor
sub
cmp
pop
xchg
pop
cmpb
mov
or
test
mov
rcll
mov
fcomps
sbb
push
sbb
jbe
jge
mov
ss
daa
and
push
dec
les
movsl
inc
add
add
cs
lret
call
cmp
outsl
loop
cmp
fbld
xchg
jge
inc
arpl
dec
pop
ja
mov
mov
scas
push
rcrl
ja
dec
cmp
mov
fsts
mov
dec
or
jo
cmpsb
test
in
cmpsl
jle
pusha
xor
in
stos
ss
insl
mov
repz
push
outsl
out
dec
test
std
push
adc
xor
add
mov
shl
inc
mov
mov
gs
insb
mov
cmc
jns
pushf
or
pusha
jbe
cmpsl
divl
cmp
cmp
cmp
cmp
loopne
scas
popa
out
prefetcht2
push
lahf
mov
pushf
fimuls
test
adcb
mov
add
push
sub
xorl
jno
call
mov
ja
xchg
dec
jnp
cmpsb
add
push
cltd
andb
in
pop
out
dec
mov
or
clc
xor
test
es
pop
mov
mov
push
adc
sub
and
add
outsl
in
sbb
cmc
mov
int3
and
inc
out
dec
mov
les
aas
scas
push
add
aaa
cltd
mov
mov
sbb
xlat
add
mov
bound
sbb
lock
shrl
and
jl
int
fidivs
shll
dec
push
inc
inc
cld
add
mov
xchg
inc
bound
out
sub
sub
leave
jle
xchg
shlb
mulb
aaa
icebp
daa
xlat
pop
mov
ret
lods
and
shlb
aas
pop
call
test
push
pop
pop
pushf
aas
lea
mov
repnz
leave
or
cmp
push
add
out
inc
dec
cmp
or
mov
push
ja
aam
mov
test
bound
dec
pop
ss
out
jb
jmp
pop
inc
inc
aad
stc
inc
iret
aas
jno
mov
lods
nop
dec
push
outsb
sub
out
scas
xchg
mov
jno
fisttpll
fsts
jecxz
add
jle
sbb
inc
xlat
inc
mov
pop
movsl
dec
int
and
pop
jmp
adc
pop
jg
stos
and
lret
ret
push
mov
hlt
stos
repz
shll
dec
cmp
mov
test
outsl
lahf
cmc
aam
push
leave
jg
fs
in
jp
nop
or
test
add
adc
cltd
add
push
add
andnps
lret
sub
xor
dec
ss
push
xchg
dec
adc
addr16
push
sbb
xor
dec
jle
aas
sbb
mov
mov
add
imul
popa
mov
pop
cmp
test
push
ljmp
orb
enter
leave
adc
arpl
fists
dec
cld
push
popf
mov
pop
stos
lcall
inc
push
stos
pop
adc
add
xchg
or
ss
adc
and
in
ret
loopne
out
jno
push
mov
cld
pop
shlb
movsl
adc
jo
insl
xchg
sahf
cmp
in
dec
movsb
cld
cmpsb
push
int
or
stos
push
mov
cmp
inc
jp
bound
ljmp
in
sar
fcmovbe
in
xchg
popf
pushf
icebp
or
pop
movsl
mov
pop
cmp
push
orb
sub
push
inc
hlt
stos
mov
sbb
in
lods
mov
xchg
xlat
fs
cltd
mov
movsb
shlb
dec
lock
rorb
negl
mov
scas
jmp
pop
std
mov
out
inc
in
xchg
ret
idivb
xchg
cmpsl
int
movl
enter
sub
dec
and
mov
xchg
dec
push
jecxz
arpl
mov
hlt
inc
and
repz
xor
pop
jnp
sti
jno
mov
and
ljmp
pushf
es
mov
adc
ljmp
mov
xchg
movsb
jle
or
imul
pop
dec
sbb
and
pusha
int
iret
jg
fsubl
mov
scas
test
faddl
mov
loopne
in
iret
mov
jmp
push
inc
pushf
xor
movsl
int3
mov
dec
enter
inc
js
inc
or
inc
inc
jae
test
hlt
cs
out
jp
ds
test
bound
mov
push
gs
sahf
jo
cwtl
imul
stc
xchg
fsubl
cmp
loope
js
lret
std
cmp
sti
sub
nop
nop
or
sbb
cmp
je
add
mov
push
sbb
mov
and
fsts
lock
insl
push
or
cmp
inc
fdivl
sub
fs
test
lods
xchg
mov
out
out
hlt
mov
cmp
cli
cmc
test
lods
sub
nop
outsb
ljmp
adc
mov
adc
movsb
cmp
mov
divb
aam
test
out
repnz
xchg
loop
sbb
jg
lea
push
add
setno
xchg
push
dec
daa
mov
inc
dec
mov
adc
call
ret
add
fstpl
push
cmp
lahf
punpckhwd
mov
loope
pop
and
std
outsl
loopne
sbb
in
dec
cmp
pop
pop
popf
xor
lock
outsb
movsb
push
xor
push
cmpsb
mov
ja
sti
into
sbb
inc
adc
and
xchg
adc
test
pushf
mov
xchg
in
sti
leave
jo
push
xchg
daa
repnz
mov
mov
adc
out
in
jmp
dec
mov
lea
mov
sarb
sub
sub
pop
push
out
xorl
iret
fadd
dec
jb
cmp
je
test
mov
or
sbbb
das
or
pop
ljmp
test
cmp
popa
cmpsb
mov
push
dec
xchg
mov
nop
fidivrl
add
test
aaa
ret
daa
inc
pop
and
push
nop
pop
test
dec
mov
mov
je
fstl
jbe
and
lock
mov
hlt
sub
adc
and
movsl
mov
pop
sbb
test
jge
adc
sub
mov
jge
xor
sub
pop
or
lods
int
mov
pop
pop
cmpsl
sub
xorl
mov
popf
sub
or
and
aaa
dec
add
mov
aam
mov
aad
jns
cmc
mov
or
pop
scas
lahf
xchg
repz
mov
es
cmpl
sbb
cmp
cltd
outsl
in
push
je
pop
lcall
jl
jbe
and
add
fldt
jb
push
mov
loopne
cmpsb
sti
leave
lods
xor
lock
mov
sbb
je
notb
leave
inc
int3
jmp
xchg
rol
ja
adc
arpl
sahf
icebp
sub
inc
insl
and
pop
and
subb
ds
das
cmpsb
pop
shrb
dec
dec
out
ret
ljmp
fsubr
inc
mov
sbb
xor
pop
cmp
mov
lret
push
bound
xor
loop
xor
inc
jge
cli
xor
lahf
fadds
inc
ret
xchg
add
sbb
mov
hlt
dec
test
or
mov
int3
ficompl
ja
out
push
adc
mov
xor
mov
pop
pop
cs
rcrl
popa
jb
sub
push
cmpsl
dec
sbb
dec
scas
adc
or
outsl
and
inc
imul
jne
ds
outsb
pop
hlt
les
mov
lock
dec
or
sbb
cmp
push
xlat
mov
and
outsl
imul
xor
xchg
test
je
jno
out
fisubl
sbb
loop
adc
xchg
fs
int
rcrb
in
loope
sub
ds
das
int
rcrl
xchg
fldt
mov
jo
in
dec
mov
xor
popa
test
jp
sub
in
aaa
ds
leave
aas
mov
mov
and
and
push
insb
cwtl
movsb
xchg
mov
inc
ret
negb
pop
adc
inc
mov
push
les
push
jmp
mov
mov
sub
popf
popf
stc
cmc
pop
mov
inc
cli
jg
and
or
xor
outsb
imul
add
xchg
int
aam
jbe
adc
andb
test
fst
mov
iret
xchg
mov
hlt
cmp
pop
pusha
lea
test
add
mov
enter
add
push
jnp
fs
das
pushf
inc
fisttps
sub
lea
jmp
mov
jns
call
cmpsb
cltd
xor
mov
mov
jge
mov
test
ja
sbb
push
push
outsl
lock
xor
shrb
push
idivl
push
pusha
neg
xor
outsb
mov
mov
icebp
cmp
out
movsl
cmpsl
and
cmpsl
idivb
loop
loop
aam
fwait
roll
pop
in
adc
pop
int3
sub
sub
stc
sbb
in
imul
jbe
xchg
xor
stc
dec
pop
jmp
ret
daa
mov
pop
js
dec
in
nop
cmc
lret
adc
mov
insb
and
mov
or
frstor
es
inc
or
xchg
xchg
loopne
aad
jnp
jb
pop
sbb
mov
xchg
repz
clc
pop
cmp
and
or
test
mov
lods
ljmp
mov
notl
test
in
jae
push
ret
add
sub
insb
pop
scas
scas
adc
mov
ss
cwtl
or
add
pushf
dec
ret
push
add
push
scas
inc
jnp
dec
jne
xchg
cmp
push
push
push
gs
push
push
mov
pusha
xchg
adc
mov
out
loopne
loopne
jge
jbe
sub
add
mov
mov
cmpsl
test
jg
outsb
xchg
and
jge
inc
mov
loope
lret
pop
xchg
subl
js
movsb
pop
je
sbb
repnz
pop
movl
push
enter
sti
inc
pop
rorl
push
lods
and
inc
out
outsb
cmp
xor
inc
mov
test
push
push
mov
rcrb
mov
xchg
pop
mov
xor
pop
fs
punpckhwd
stos
dec
and
push
imul
mov
aam
ret
insb
or
gs
test
lcall
popa
and
mov
adc
les
stos
outsl
lret
aad
rcrb
in
lds
loop
mov
or
rcrl
xchg
sub
or
and
cld
fnstcw
cmp
loope
rorb
jnp
sub
push
or
jge
mov
data16
cmp
or
xchg
mov
jae
xchg
push
out
inc
cmp
adc
out
pop
icebp
shr
inc
aad
jnp
fdivr
mov
push
cmp
inc
mov
fmuls
decl
push
fnsetpm(287
ret
sub
leave
lea
cltd
inc
push
shr
test
test
cli
mov
adc
call
dec
cmpsb
or
and
cmp
mov
mov
mov
and
adc
jmp
orb
ds
or
lea
lcall
add
insl
inc
xor
out
push
push
clc
cmp
pop
cmovbe
inc
lock
mov
movsl
push
movsb
add
out
fsts
sub
aas
jecxz
paddusb
sbb
cmp
in
loopne
sbb
iret
hlt
ja
pop
mov
lea
ret
push
sub
int
movsl
sbb
bound
fstl
sub
lret
stos
jmp
and
test
jne
insl
add
iret
pushf
mov
xchg
sbb
subb
push
mov
lods
lds
movsb
in
add
in
xchg
inc
in
lds
or
in
ss
nop
pop
fisubs
subb
les
outsl
popa
xchg
shl
fs
sub
lcall
in
or
pop
aas
outsl
mov
inc
cmpl
ds
sub
repz
test
subl
rcrb
xor
jno
es
fcoms
xchg
out
inc
jle
call
push
movlps
mov
cmpsl
jecxz
roll
nop
hlt
std
dec
scas
mov
add
out
cmpsl
ljmp
fcompl
mov
mov
repz
sub
or
adc
mov
cmp
mov
call
xor
fwait
push
or
mov
push
cli
cli
add
and
out
sbbl
mov
mov
in
xchg
inc
ret
jg
rorb
mov
jno
call
xchg
cmp
and
out
inc
cmpsb
ja
pop
cmp
les
cmpsb
jg
je
mov
cmp
ljmp
push
shl
sub
push
fcmovnu
cltd
inc
cmp
test
mov
lods
test
jno
lret
popa
mov
hlt
jge
rcrb
xor
inc
cmp
push
inc
hlt
jb
mov
mov
out
push
jmp
sbb
out
cltd
int3
or
loop
add
xlat
mov
fcoml
cld
cmp
call
add
imull
or
pushf
add
lock
loop
add
cmpsb
lods
rorl
mov
push
js
movsl
xchg
dec
sbb
ret
sub
or
pushf
stos
in
rcrl
outsl
jg
enter
negl
repz
and
push
mov
imulb
insb
mov
xchg
int
pop
bound
fisttpl
int3
xchg
add
ret
gs
notb
inc
test
ljmp
xchg
fcoms
ret
jle
sub
push
aad
aaa
aam
dec
and
dec
sbb
mov
push
pop
imul
pop
or
je
mull
data16
push
std
pop
rol
jnp
scas
push
dec
sar
pop
jns
xchg
sbb
xchg
dec
mov
or
adc
mov
cmp
addr16
and
test
pop
add
xchg
gs
movsb
mov
hlt
mov
pop
push
and
inc
xor
test
pop
mov
idivb
ds
test
adc
pslld
xchg
aas
push
and
inc
mov
fcmovu
inc
cmpsl
xor
popa
lea
cmp
mov
movsl
movsb
daa
inc
dec
jo
pop
fisttps
daa
mov
sub
and
xor
out
lds
sbb
aas
orb
inc
int3
test
fistps
and
ds
xor
divb
lds
jbe
add
cld
outsb
xor
lahf
out
xor
out
cmp
movsl
push
lea
add
icebp
or
ret
enter
lods
testl
scas
jbe
movsb
push
push
xor
test
sbb
movsb
repz
and
je
cs
dec
and
das
int
lock
jg
push
pop
mov
dec
pushf
jcxz
inc
mov
ret
fwait
mov
pushf
popa
xchg
pop
or
in
xchg
dec
enter
fdivrs
pop
cs
mov
lret
mov
dec
lea
inc
out
jno
jmp
pop
mov
mov
xchg
jge
ljmp
je
stos
inc
mov
ret
movsb
mov
mov
jg
add
shr
test
jne
imul
fiaddl
sti
dec
outsl
repz
xchg
xor
mov
loope
xor
repz
pop
mov
ret
sub
sbb
add
jns
jl
xlat
cmpsl
sub
xchg
jl,pn
imul
and
jb
cwtl
xchg
movsl
and
imul
xor
les
ja
sbb
shrl
movsb
cwtl
inc
faddl
sub
inc
cwtl
dec
jge
sbb
dec
dec
iret
add
addl
xor
mov
addr16
xchg
mov
lea
jge
push
loopne
mov
push
jnp
gs
xchg
mov
sti
sub
xchg
mov
or
rorb
popa
pusha
movsb
cmp
inc
lea
ljmp
push
xchg
js
mov
movsb
ja
imul
shll
sbb
or
mov
pop
push
add
addr16
call
mov
mov
xchg
test
mov
jne
lock
stos
fcompl
inc
ljmp
mov
movsb
jmp
shlb
cmp
lods
cmp
inc
into
in
mov
in
mov
cmpl
lahf
cmp
dec
ljmp
jp
out
adc
inc
jne
pop
lahf
xor
adc
dec
lret
cli
inc
adc
cmp
pop
out
mov
mov
arpl
gs
gs
sub
xor
mov
jle
cmpl
leave
leave
jno
arpl
cmp
cltd
iret
popa
addl
pushf
xchg
ja
pop
stos
mov
mov
pusha
stos
mov
je
or
and
jl
pop
mov
es
jbe
imul
jmp
push
push
pop
fmulp
icebp
ds
out
movsb
dec
inc
add
pop
sbb
or
inc
dec
gs
rcrb
push
push
lock
push
push
sbb
or
dec
dec
out
mov
lea
cmp
inc
jbe
sbb
add
or
icebp
rcr
jle
pop
je
pop
insb
out
fxch
push
xor
adc
sub
mov
or
inc
sub
push
lcall
mov
hlt
dec
xchg
scas
outsl
adc
and
cmp
xchg
jb
fwait
cmp
std
ss
mov
fsubrs
jl
ret
imul
dec
pusha
lret
mov
and
mov
fsubs
cmp
dec
pop
out
dec
and
push
mov
popa
js
mov
jl
js
xchg
in
xchg
sti
aad
pop
xchg
push
repnz
imul
pop
sahf
in
gs
and
xlat
mov
shl
stos
xor
mov
das
ljmp
popf
outsb
xchg
insb
in
mov
nop
cmp
ljmp
sbb
jbe
pop
mov
icebp
ret
lods
movsb
xchg
mov
cmc
in
cwtl
lret
das
jae
int3
and
mov
lock
inc
fwait
incl
sysret
lods
dec
jo
cli
push
inc
adc
bound
mov
das
pop
cmpsl
mov
fnstenv
jns
jnp
in
jns
xchg
into
lcall
stos
sbb
in
mov
inc
hlt
test
dec
inc
loopne
or
inc
aas
jne
cmp
popa
ret
sbb
jne
fdivl
push
jb
xor
jmp
cmp
sbb
ficoml
pop
mov
test
add
push
push
loopne
stos
out
and
or
sets
shll
lods
xchg
cmp
movsb
sbb
xor
stc
test
sbb
fiadds
clc
cmpsl
lock
cmp
mov
pop
stos
lock
and
rcll
cmp
fidivl
decb
push
and
mov
or
sbb
xor
pop
lahf
ljmp
sub
sbb
mov
mov
sahf
adc
sub
lcall
jo
je
mov
mov
jle
add
fwait
cltd
nop
jbe
stc
fildll
xor
push
xor
and
pop
pop
js
sbb
aad
sti
xchg
cltd
in
cltd
mov
inc
inc
sub
mov
inc
add
dec
xor
and
fsubs
mov
cwtl
addb
mov
mov
bts
xor
lret
sbb
enter
lds
pop
test
movsb
and
sti
adc
mov
aam
shl
loop
pop
and
loope
je
fdivrs
out
stos
push
xor
and
out
mov
add
out
adc
popf
lds
leave
dec
xlat
loopne
arpl
in
dec
sub
mov
mov
xlat
outsl
repnz
push
gs
xchg
jb
inc
mov
aad
cmp
shlb
or
ljmp
js
mov
daa
jo
mov
std
lahf
add
stos
stc
enter
aam
idivl
clc
hlt
aas
or
test
adc
andb
sbb
and
dec
mov
add
sub
loopne
and
in
adc
popa
cmpsb
call
jno
sub
xor
pop
in
rcrb
loope
adc
xor
xchg
mov
and
jge
in
xchg
add
adc
mov
jb
push
jecxz
xchg
cwtl
popa
outsb
gs
and
xchg
xchg
in
inc
inc
inc
sbb
push
repnz
cltd
mov
mov
adc
scas
jle
xlat
jecxz
sbb
dec
mov
xor
addr16
stc
push
js
fstps
jl
sub
dec
sub
add
dec
aam
push
mov
bsf
dec
lret
adc
mov
cmp
scas
push
std
in
sbb
das
jecxz
je
jecxz
xchg
xchg
inc
cld
push
jno
fdivrl
push
notb
jae
pop
pop
sbb
es
add
xor
lahf
add
nop
push
dec
inc
push
call
sbb
push
sub
shld
xchg
pop
fs
sbb
ficoml
and
cli
out
xor
cmp
mov
out
neg
xchg
cs
mov
cmp
clc
pop
cli
in
pusha
out
mov
imul
ljmp
xor
ljmp
pop
hlt
mov
lahf
jge
loop
dec
test
inc
and
sub
lock
popa
xor
imul
jp
ds
or
ficoml
inc
fsubrl
js
je
lcall
jno
scas
jbe
adc
test
pop
adc
aas
sub
js
imul
je
add
pop
out
stos
sbb
ds
js
fisubl
ljmp
cltd
lods
add
mov
sub
xor
cmp
cmp
add
or
jmp
ss
daa
sti
jmp
pop
cmp
xchg
lret
das
outsl
into
jmp
jg
or
pop
cld
xchg
xor
jle
mov
in
aaa
loopne
inc
rcrl
cli
xchg
pop
mov
jb
mov
lods
mov
fdivrp
jae
add
das
jnp
inc
mov
mov
stos
inc
dec
push
in
jne
icebp
repz
sbb
hlt
aad
inc
out
gs
clc
adc
mov
dec
cmp
dec
inc
pop
adc
pushf
sahf
or
popf
into
push
cmpps
nop
fldt
pushf
nop
pushf
pusha
dec
cmc
pop
sub
les
cmp
xchg
adc
add
in
repz
and
das
mov
mov
daa
mov
and
fsubl
pop
xchg
mov
jl
andl
sbb
sbb
jo
inc
push
cmc
mov
mov
mov
fcmovnbe
cmp
arpl
or
jl
cli
pusha
es
idiv
sahf
or
pusha
mov
sbb
adc
mov
xchg
adc
pushf
cmpsl
sub
int
mov
aaa
lods
pop
jnp
cmp
pop
cmp
testb
xchg
adc
out
jmp
push
mov
inc
push
sti
dec
push
mov
fistpl
movsb
in
andl
in
in
mov
enter
ja
xor
push
xchg
mov
push
mov
jnp
mov
hlt
push
lods
xlat
cmp
and
ret
adc
mov
mov
roll
lds
sahf
out
xchg
inc
cmp
jae
push
mov
iret
in
cs
lret
pop
stos
das
fadd
jl
xor
mov
pop
popf
push
mov
movsb
inc
addl
pop
inc
mov
in
pusha
xor
in
imul
inc
push
or
sub
out
sbb
mov
leave
dec
outsb
in
addr16
push
popf
add
sbb
aas
push
fildll
imul
cmc
stos
icebp
push
dec
inc
or
stos
stc
aaa
ret
nop
xorl
in
mov
outsl
fildl
sbb
enter
pop
scas
test
push
cmp
push
jl
mov
scas
pop
repnz
mov
mov
inc
sub
pop
adc
inc
jnp
cs
hlt
mov
pop
movsl
loop
lcall
or
sbb
xchg
xchg
int
cmp
mov
or
add
or
in
xchg
mov
in
dec
add
dec
data16
hlt
jg
inc
negl
push
bound
cmp
ss
cld
ret
inc
cli
push
dec
and
ja
in
fs
mov
clc
pusha
cmc
mov
js
stc
sub
lods
push
aaa
cltd
hlt
sbb
lods
lock
addr16
or
push
or
dec
roll
cmp
mov
call
arpl
fsubs
add
repz
pusha
inc
fisubl
xchg
dec
das
aaa
ret
std
push
sbb
scas
mov
and
icebp
lds
pop
sbb
leave
repz
lcall
xchg
fidivs
add
sub
xlat
dec
pop
jle
lret
mov
inc
inc
or
fnstcw
loop
stos
fwait
test
jl
sbb
ret
push
fs
dec
xchg
pushf
and
adc
addr16
cltd
rorb
and
lods
sbb
imul
cwtl
dec
fistps
pusha
xor
inc
mov
add
xchg
jae
push
cmp
dec
js
adc
xor
lcall
leave
cs
cmp
bound
into
in
and
inc
mov
xlat
pop
das
cmp
dec
outsb
sbb
xchg
adc
xchg
lcall
lods
in
rcrb
rcrb
pop
xchg
sbbb
enter
jg
rcrl
out
cmpsb
xchg
and
push
stos
int
pop
cmp
fstl
dec
sub
or
pop
dec
mov
mov
bound
inc
jb
cmp
jae
pushf
cli
xor
cmpb
leave
out
insb
sub
pop
pop
jno
imul
inc
pop
mov
stos
outsl
lret
jmp
jnp
jle
out
or
or
sahf
or
mov
das
adc
in
cltd
sbbb
xchg
jg
cmpsl
pop
pop
in
movsl
rcr
lret
adc
pop
inc
and
subb
xchg
movsl
or
push
pop
pop
push
push
lahf
test
mov
es
push
push
inc
mov
sbb
scas
push
mov
xor
jg
ret
sub
cmpsb
ja
pop
int3
jo
or
mov
ss
iret
xorl
sahf
popa
dec
test
jg
xor
push
stos
cli
subb
jno
dec
adc
cmp
adc
lret
lods
sub
mov
cmc
cmp
stos
mov
ss
aad
ljmp
and
mov
mov
or
add
sbb
xor
sub
lcall
pop
std
in
stos
and
mov
mov
cmpsl
or
adcl
ljmp
pop
mov
sbb
outsb
sbb
pop
pushf
jnp
inc
adc
ds
stc
sbb
cmpb
jl
mov
sbb
xchg
xor
dec
sub
sbb
mov
lcall
cvtdq2ps
lret
sbb
xchg
je
inc
inc
pop
std
aam
xchg
lret
mov
xlat
mov
rorb
push
out
or
js
xchg
negb
fucomi
lea
mov
jle
ljmp
inc
sti
xchg
fmull
lret
xchg
mov
in
adc
into
cmc
add
dec
or
test
mov
cmp
in
inc
dec
jnp
stc
cmp
inc
inc
lret
jae
clc
data16
dec
cld
roll
pop
sbb
in
testl
jo
xor
and
int3
out
inc
xchg
push
mov
ret
sbb
push
out
cmp
adc
xchg
into
dec
ret
dec
daa
je
shll
jae
lock
xchg
mov
out
mov
mov
push
ljmp
xchg
js
jecxz
or
push
add
mov
cmp
jo
pushf
xlat
jns
out
or
mov
repz
jno
push
push
data16
jecxz
outsl
cmp
cmc
adc
dec
clc
fbstp
and
xor
pop
pusha
push
and
push
mov
test
push
cmp
mov
lahf
dec
xor
xor
scas
pop
inc
push
clc
jo
cmp
bound
mov
iret
cli
push
xchg
cmp
test
nop
cmp
jae
dec
arpl
lods
sti
cmc
xchg
mov
repnz
sbb
mov
stos
fistps
push
lret
jp
or
sahf
push
mov
cmpsl
fistpll
fs
cltd
sbb
mov
sub
mov
test
adc
in
clc
jne
testl
dec
test
insl
dec
cltd
into
push
loop
xorl
or
test
jae
jno
mov
imul
add
and
mov
inc
out
jne
loope
jecxz
call
lret
or
sub
xchg
and
out
cld
les
cli
cmpsb
xchg
push
ljmp
cmpsb
int3
add
popf
fldl
cmpsb
sbb
mov
xor
in
sbb
xor
frstor
rorb
cwtl
xor
inc
push
cmp
stos
in
push
cmpsl
xor
pop
xchg
cmc
push
sbb
mov
push
movsl
outsb
cmp
stos
rcll
dec
fiadds
into
mov
xor
mov
mov
cmp
data16
mov
outsl
mov
adc
mov
mov
into
xchg
imul
sbb
shlb
inc
dec
mov
jns
add
mov
fstl
sub
mov
xor
lods
ficomps
lahf
repz
push
mov
xor
mov
pop
sbb
loope
leave
addl
es
pop
lret
scas
hlt
jge
xchg
lcall
cmp
int3
jecxz
orl
dec
pop
mov
std
xor
mov
sbb
xorb
jb
pop
nop
mov
sbb
mov
notb
test
hlt
mov
mov
out
xchg
xchg
stos
aam
aas
adc
xor
mov
pop
push
cmpsb
xchg
pop
test
lret
push
mov
add
add
lea
jnp
push
cmpl
popa
sub
out
int
and
repnz
and
ljmp
cmpsb
mov
xor
jle
jae
push
pushf
inc
outsl
mov
js
stos
xchg
aam
mov
hlt
rcrl
adc
std
cs
arpl
inc
jae
jnp
push
loop
push
into
pop
adc
ss
or
gs
adc
xchg
clc
lods
push
mov
sbbb
push
mov
push
lea
mov
jb
aaa
mov
in
cltd
adc
imul
and
fistps
idivb
push
int3
and
inc
cmp
mov
xchg
push
or
and
hlt
mov
sub
push
outsl
adc
mov
push
cmpb
lcall
dec
dec
call
pop
js
and
ds
mov
add
pop
mov
call
outsl
pop
mov
adc
mov
push
in
dec
jle
sti
add
rolb
das
fsubs
loope
sub
out
pop
jmp
mov
xchg
mov
gs
es
adc
outsl
sub
sahf
fdivrp
and
push
mov
dec
xchg
test
push
int3
cmp
or
faddp
add
stos
sbbl
in
mov
adcl
add
call
std
sti
lret
jnp
xchg
aad
std
mov
arpl
gs
push
rcrl
add
sbb
push
ret
fists
adc
loope
arpl
adc
test
xorl
push
push
sbb
inc
xchg
movsb
and
xchg
sti
lcall
inc
test
mov
dec
dec
sub
ret
roll
inc
dec
xor
aaa
sbb
in
aam
cmpsb
mov
iret
push
push
repnz
mov
lock
icebp
or
adcl
out
ret
scas
aas
rcrl
arpl
pop
addr16
xchg
and
cmp
scas
jle
mov
ds
add
xchg
jbe
gs
in
mov
xchg
mov
aad
push
dec
add
mov
imul
inc
and
stc
in
fidivl
and
xor
jb
idivl
push
loop
addb
sub
sbbl
enter
jae
dec
sbb
lcall
loopne
mov
loope
push
movsb
ds
cmc
xor
or
ds
arpl
notl
sti
fsubl
mov
jbe
sbb
frndint
push
aaa
stos
pushf
add
cmp
xchg
jne
jbe
inc
dec
loop
mov
sarb
pop
xchg
scas
pop
movl
cmp
and
mov
cltd
fdivl
imul
arpl
dec
xchg
fnsave
xchg
mov
call
dec
sub
std
push
or
lock
and
and
enter
pop
scas
nop
gs
data16
xchg
iret
ret
xor
pop
add
sub
cmp
mov
inc
rcl
cmp
jle
jg
leave
inc
xchg
loop
and
xor
xor
ret
lea
jp
adc
ja
push
push
pusha
in
fistl
pushf
push
int
mov
adc
int3
js
cli
aas
xor
add
repz
imul
ss
aaa
dec
xchg
sbb
or
and
pop
inc
mov
popf
cmp
jecxz
push
int
cmp
shlb
test
cwtl
mov
test
pop
inc
rcl
sub
nop
mov
mov
and
xchg
es
mov
mov
cwtl
out
add
or
add
int3
and
nop
js
mov
fisttpl
inc
sub
out
push
hlt
xchg
and
test
pusha
jl
inc
fiaddl
aad
jmp
fistps
mov
inc
clc
call
cmp
dec
xor
xor
daa
xor
subl
popf
outsl
data16
movsl
pop
or
inc
dec
ret
arpl
mov
mov
mov
daa
rcrl
mov
jno
mov
mov
jnp
and
inc
pop
loop
mov
cs
sarb
leave
enter
or
test
ljmp
inc
mov
negb
fmuls
rorb
pop
testl
mov
inc
pop
push
jecxz,pt
mov
ret
adc
push
insl
aas
dec
divb
stc
sub
sub
das
outsb
aad
pop
mov
std
inc
ja
push
mov
jp
and
int3
and
in
mov
stos
aaa
push
push
add
inc
out
ret
jmp
ja
dec
pop
jnp
pop
in
xchg
cmpsb
cmpsl
lock
int
frstor
sbb
popf
jg
xchg
fdivl
xchg
pop
jmp
sbb
pop
sub
lcall
push
cmp
nop
js
stos
gs
shr
fwait
inc
pop
xchg
shll
push
jae
fxch
nop
das
dec
push
push
cld
xor
mov
and
sbb
xlat
fs
fstps
int
clc
push
sub
out
mov
pop
xor
loope
mov
nop
leave
fsincos
push
fsts
push
subl
mov
fdivp
dec
clc
inc
ret
repnz
cli
jbe
push
rcr
sub
aam
mov
push
imul
imul
fwait
dec
push
cs
popf
cmpsl
jne
xor
movsl
sbb
push
fcomp
xchg
mov
push
dec
popf
repnz
adc
fsubrl
cld
mov
arpl
int3
mov
decb
jo
sbb
clc
sbbb
cmpsb
add
push
push
ret
pop
pop
push
into
gs
cli
xor
push
sbb
cmp
int
jge
ds
inc
call
nop
sbb
pushf
outsl
repz
xchg
dec
xchg
jnp
std
stos
test
mov
xchg
lods
cmp
push
push
pop
mov
adc
aas
adc
ror
xor
retw
lret
dec
fsts
jae
xchg
incb
xchg
stos
fisttps
cmpsb
and
jo
inc
ret
popa
decl
add
shll
cmpb
push
mov
sbb
inc
push
xor
mov
pushf
cltd
pusha
mov
xchg
std
xchg
pushf
mov
dec
je
loop
loopne
test
je
mov
pop
int
pop
aaa
dec
mov
adc
cwtl
sub
popa
aam
icebp
loop
xchg
dec
xor
sbb
or
adc
pop
fsts
fisubs
gs
jns
cmp
test
sahf
pusha
es
jg
iret
ror
adc
stc
jo
dec
mov
popa
inc
incb
mov
cltd
xchg
push
xchg
pop
add
dec
xchg
add
cmp
pop
lods
or
pop
mov
jbe
mov
jmp
and
mov
pop
inc
fistpll
es
jno
mov
xchg
lcall
lea
pop
cs
mov
mov
outsl
vcmpsd
dec
ret
rolb
xor
test
lret
xchg
mov
mov
outsl
push
adc
mov
add
addr16
mov
stos
idivl
cs
leave
adc
adc
mov
sbb
stos
mov
adc
int
and
rcl
sub
jo
mov
jl
cmp
lods
shll
dec
ret
lcall
out
cmp
and
adc
jae
test
imul
ja
xor
inc
mov
test
loope
cmp
inc
pop
int
movsl
dec
add
ret
enter
cmpsb
inc
push
mov
hlt
push
lret
lea
add
mov
push
fcmovu
mov
es
mov
pop
xor
and
push
mov
gs
cmp
gs
clc
sbb
mov
xor
mov
push
fldl
rep
popf
push
lret
rorb
jb
js
imul
ds
aaa
mov
out
dec
jae
je
and
ss
pop
or
int
lds
inc
push
iret
inc
mov
enter
loop
mov
and
pop
popa
cmp
sar
lods
fisttpl
gs
xchg
std
imul
fcmovbe
test
stc
ds
pop
mov
pop
stos
icebp
pop
das
inc
in
mov
mov
push
idivb
dec
xchg
jg
adc
mov
xorb
dec
test
cmp
adcb
cmp
cmpsb
fsubr
fisttps
aam
xchg
cmp
cmp
pop
jl
aaa
xor
inc
int3
mov
jp
out
aad
mov
pop
test
adc
jo
rorb
add
mov
inc
arpl
bound
jno
pop
add
and
xchg
les
je
stos
cmp
adc
loopne
inc
int
push
in
in
cld
pop
lahf
sub
mulb
dec
into
push
jmp
pop
and
lds
mov
enter
push
and
out
daa
addr16
iret
shr
jnp
jge
fisttpll
mov
dec
lret
push
mov
dec
rcl
push
push
jae
push
sbb
mov
call
jmp
sarl
dec
xor
popf
push
arpl
add
repz
inc
mov
cmpsl
stc
push
xchg
out
adcb
xor
mov
repnz
out
mov
sbb
xchg
and
aas
sti
ss
pop
call
jno
pop
or
and
fisubrs
mov
xchg
popf
test
je
jp
sbbl
pinsrw
hlt
dec
scas
add
jmp
and
call
out
add
adc
dec
cmp
inc
fldl2e
fcmovb
adc
inc
pop
push
cmpsl
and
aaa
enter
vpslld
repz
xor
fdivrl
sarl
and
mov
std
fbstp
repz
sub
push
movsl
sub
jmp
out
adc
sbb
fnstsw
subb
sbb
loope
dec
cmp
ja
leave
inc
pushf
stos
loopne
scas
je
xchg
jb
and
cld
ficomps
pop
sub
rorb
dec
das
xor
outsl
mov
ds
xor
add
mov
push
insb
mov
clc
sbb
daa
lret
mov
cmp
mov
adc
loope
and
repz
into
or
mov
and
inc
mov
mov
sub
mov
clc
push
adc
sbb
lret
and
fwait
fwait
pop
int
push
mov
pop
push
popa
call
pop
sbb
sbb
fistps
add
and
pop
add
jns
gs
fldt
and
pop
stc
dec
rorl
imul
subl
rcrb
insb
pop
push
int3
daa
es
adc
push
mov
int
jae
push
xor
push
jle
ds
jmp
xchg
decb
xor
ljmp
cld
jns
mov
inc
cmp
or
mov
mov
or
pop
gs
stos
popa
repnz
push
mov
push
xchg
cs
and
stc
negl
cltd
sub
stc
push
movsb
mov
out
data16
enter
jmp
xchg
and
pop
jl
inc
pop
and
cmc
push
dec
lcall
mov
add
mov
sub
add
push
sbb
jae
jg
sbb
sub
cli
movsb
int
test
mov
imul
cmpb
lds
sub
mov
in
mov
mov
dec
es
popa
mov
jne
cwtl
push
pop
cmpsl
imul
xchg
lret
out
test
push
pushf
cmp
cwtl
xchg
mov
in
jl
call
in
outsl
mov
out
jle
sarb
dec
xchg
lds
stos
mov
sbb
or
sub
in
pop
lds
cltd
and
mov
and
pop
lea
mov
leave
hlt
sahf
imul
jne
insl
dec
inc
mov
pop
popa
add
sbb
push
or
push
out
je
or
aam
and
cmp
lea
push
push
lahf
xor
or
jae
cmp
imul
pop
data16
sub
int3
sub
lcall
cmp
dec
mov
mov
or
imulb
sbb
adc
push
cld
out
sbbb
orl
cltd
pushf
js
out
pop
sub
dec
sbb
push
inc
loop
or
aaa
clc
pop
rclb
bound
sub
mov
lds
inc
les
rcrl
pop
mov
shll
lods
dec
or
test
lods
or
fildl
mov
divb
imul
inc
cmp
jne
sarb
xchg
mov
out
bts
sbb
in
xchg
push
bound
cmp
push
fstl
ret
mov
js
lock
insb
ud1
lcall
sub
xor
push
lahf
xchg
mov
jb
je
mov
jns
cli
sarl
inc
jae
jb
pop
in
mov
mov
mov
xchg
fidivl
pusha
pushf
sub
ja
in
push
ffree
add
xchg
mov
xchg
mov
das
aas
call
add
jg
mov
fsubrl
jbe
mov
sbb
movsb
fsubrl
mov
pop
sarb
sti
insl
cmp
movsl
iret
inc
stos
mov
adc
arpl
xchg
rcrb
cli
xchg
shrl
nop
test
fstpt
inc
stos
das
lcall
aam
test
movsb
movsl
imul
lahf
push
gs
lret
loope
scas
mov
xlat
pop
in
in
clc
into
xor
pushl
push
je
jno
sarl
mov
mov
ja
stc
les
ja
ss
add
int3
popl
sarl
lea
and
mov
jmp
mov
loopne
bound
push
pushf
shrl
dec
inc
aas
dec
aad
pushl
jae
lret
pop
and
bound
mov
out
xor
add
repnz
xor
scas
fwait
and
adc
add
ja
icebp
inc
pop
and
imul
inc
pushf
mov
repz
dec
fiaddl
cld
js
in
xchg
mov
add
mov
push
sbb
inc
sub
loop
arpl
pushf
jle
shrl
movsb
adc
sub
addr16
in
loop
andl
inc
jle
add
popl
fbld
pop
mov
sbb
cli
outsb
cmp
icebp
lcall
sub
mov
pop
stos
ljmp
lret
jnp
enter
in
push
jae
lods
push
mov
pop
xor
add
jno
cmp
arpl
xchg
or
fidivrs
loop
sub
add
aaa
scas
leave
mov
jge
cli
jl
hlt
push
dec
dec
pop
push
mov
fldenv
inc
data16
mov
xor
add
inc
fadds
lret
movsb
mov
xchg
fistps
mov
mov
add
and
pop
push
inc
add
and
mov
or
mov
aad
loope
sub
lods
pop
cmp
out
test
cld
out
push
in
or
scas
lods
adc
xchg
xchg
pop
cltd
sbb
add
call
out
and
push
push
xchg
aam
addr16
push
xchg
mov
jne
ljmp
xor
inc
jl
mov
jl
cmp
or
in
cmp
popf
and
iret
enter
mov
xor
or
cmc
or
loope
les
or
bound
and
inc
ja
hlt
data16
sub
ret
sub
inc
setl
pop
rolb
bound
mov
loop
shlb
stos
and
sbb
xor
cwtl
test
sub
push
cmpsl
sbb
cmp
sbb
xchg
movsb
test
daa
adc
xchg
nop
and
cmc
mov
mov
sahf
mov
push
lcall
rcrl
outsb
roll
pop
xor
lcall
and
push
lret
dec
movsl
mov
xor
push
stos
rcr
push
leave
push
push
stos
ss
pop
push
inc
and
das
or
cltd
sahf
sbb
lahf
push
repz
mov
mov
inc
lods
push
nop
mov
fisttpl
arpl
xchg
xor
repz
push
sbb
pusha
xor
in
stos
push
lds
or
ret
stos
loope
sarl
push
add
cmc
orb
sbb
faddl
in
cmpsl
fnstenv
xchg
bound
xchg
xor
shlb
arpl
push
pop
popf
or
out
and
insl
mov
xorl
pop
sbb
data16
testl
push
inc
fimuls
cmp
jo
jo
mov
aas
in
sarb
xchg
int
loop
mov
sub
sub
pop
mov
test
jp
dec
inc
jno
xor
or
bound
repnz
lock
fildl
push
ret
clc
push
dec
hlt
jnp
clc
maxps
jns
in
sarb
cmp
mov
inc
dec
sbb
cmp
test
aas
sarl
inc
fs
push
xchg
mov
inc
test
outsl
lods
dec
push
jmp
repz
roll
xor
test
mov
sbb
repz
jne
lahf
xor
xor
pop
lock
mov
and
push
imul
outsb
sbb
mov
jne
mov
xor
jmp
lea
sahf
sbb
cmp
pop
or
pop
push
imul
add
pop
ss
ljmp
les
jecxz
add
dec
out
lret
cmp
fists
aam
or
ss
and
les
insb
jp
and
xchg
inc
sbb
cmpsl
mov
lret
pop
mov
mov
gs
out
outsb
pop
xchg
lods
addr16
mov
icebp
push
adcb
in
int
movsb
sbb
mov
enter
scas
mov
inc
sub
aam
mov
iret
or
push
add
bound
in
lea
adc
jno
je
dec
out
and
cmpsb
out
sbb
mov
dec
dec
sahf
mov
sub
inc
mov
pop
ljmp
add
mov
xchg
lret
in
push
jns
or
push
cli
fisttpl
mov
repz
xor
jg
fnstsw
shrb
xchg
jecxz
dec
fidivl
mov
mov
fbstp
adc
into
push
sbb
mov
adc
stos
push
sbb
das
pop
cmc
jb
jo
out
jo
and
dec
fnstenv
dec
jle
js
repnz
movsl
cltd
jmp
adc
loop
mov
adc
rclb
les
movsb
jno
mov
mov
pop
mov
sub
mov
cmp
mov
add
sti
rcrl
pop
cmp
in
mov
pusha
adc
int3
inc
xor
jbe
sub
outsb
adc
push
out
mov
xchg
dec
xlat
jbe
xchg
mov
jo
jbe
popf
insl
iret
mov
je
gs
gs
xor
gs
inc
fildl
int3
lods
stos
inc
push
lahf
xchg
or
cmp
ja
ret
mov
sti
ss
xor
frstor
cs
mov
aas
fsubr
xor
sbb
and
xchg
add
fildl
std
mov
sbb
test
cwtl
gs
test
xcrypt-ctr
cmpsl
fbstp
scas
aas
mov
fmuls
jae
lds
sbb
div
and
inc
adc
test
xor
inc
pop
lcall
or
hlt
or
push
or
sti
ss
sub
movsb
or
popl
fildll
mov
add
push
insl
adc
mov
cli
cmp
lahf
aaa
test
and
xor
xchg
insl
jp
scas
mov
aaa
ret
fsubp
sbbb
fcomi
clc
test
xor
enter
dec
xchg
xchg
into
int
add
mov
xchg
jg
pushf
in
cmp
sub
ss
xor
xor
fadd
je
lock
ror
dec
pop
in
add
negl
push
insb
es
jae
subl
xor
adc
and
shlb
pop
out
fildl
dec
dec
or
sbb
scas
mov
in
inc
fldt
jp
sti
mov
jns
jns
inc
lods
mov
cmc
outsb
call
inc
jno
fldl
xchg
push
in
dec
cmp
jne
xor
inc
std
enter
divb
leave
and
ficompl
mov
xor
or
inc
loop
fs
cmp
xchg
dec
sbb
out
cs
fwait
decl
mov
femms
xchg
jmp
sub
xor
inc
call
or
mov
mov
imul
sbb
mov
js
lret
dec
mov
push
xchg
or
jecxz
jecxz
roll
aas
out
lds
dec
insb
pop
jb
push
mov
scas
or
pop
lcall
mov
and
xchg
inc
cmp
sub
into
es
jp
pop
ss
lahf
adc
push
and
dec
roll
scas
ret
mov
daa
mov
push
fistpl
sarb
and
mov
push
or
add
mov
repz
int
lahf
dec
out
mov
dec
imul
xor
jl
cwtl
jecxz
stos
arpl
int
roll
stc
notb
cmp
pusha
cmp
stc
jge
sbb
xor
out
mov
mov
mov
or
jle
jmp
adc
pushf
in
aaa
or
mov
lea
cli
filds
cli
sub
mov
loopne
outsl
mov
int
out
lds
push
mov
pop
mov
cmp
addb
mov
mov
stos
xchg
mov
call
int3
mov
test
push
mov
imul
jb
adc
push
insl
incb
outsl
arpl
jae
cmpsl
imul
mov
jecxz
xchg
lret
add
mov
or
ja
push
push
insl
addb
xchg
dec
in
jo
daa
dec
mov
fs
dec
enter
add
fcoml
mov
ret
mov
out
push
sub
cmp
mov
jbe
lock
cltd
imul
popf
cmp
cmpsb
outsb
subb
test
or
lods
add
cmp
pop
dec
sbb
fstl
pop
xchg
xchg
cmp
dec
and
lea
ljmp
jbe
xchg
jo
addr16
mov
cmpsl
call
ss
jecxz
inc
ljmp
sbb
push
std
lock
jle
in
in
mov
cmp
add
or
mov
enter
mov
stc
ljmp
rclb
ljmp
push
xchg
lods
aaa
push
dec
sbbl
or
fisubl
mov
and
xor
cmp
xchg
mov
pop
mov
iret
dec
cmp
pop
insb
and
inc
push
aas
out
xchg
xchg
dec
hlt
pop
inc
test
xchg
cmp
and
icebp
shl
inc
mov
sbb
inc
cltd
std
or
arpl
mov
add
bound
test
mov
stc
jl
mov
test
mov
out
fstps
fnstcw
test
lcall
jg
push
jp
movsb
lahf
imul
sbb
rclb
and
push
xlat
sub
sbb
push
xor
cs
aaa
mov
cmp
mov
test
pop
out
jae
icebp
scas
cli
fidivrl
or
mov
push
sar
popf
nop
jbe
notb
fstp
mov
std
or
jo
cltd
mov
pushf
in
xor
hlt
dec
jae
pop
pop
inc
cs
lods
insl
int
push
and
mov
out
lock
leave
or
xchg
mov
xchg
add
push
dec
divl
dec
push
insl
inc
dec
push
lahf
test
aas
adc
push
mov
mov
out
into
scas
repnz
adc
dec
ja
inc
ljmp
cmp
mov
adc
cli
add
scas
test
cmp
mov
xchg
fdivp
adc
es
mov
mov
xchg
pop
sub
lods
jg
lds
dec
or
imul
jbe
pop
sub
adc
and
fstpt
adc
clc
icebp
mov
int3
jp
jle
fs
out
rolb
push
test
repz
ja
nop
jnp
mov
sbb
pusha
jo
jle
stos
dec
push
sub
mov
cld
hlt
mov
in
mov
or
sarb
jno
cmp
mov
imul
ret
dec
movsl
sbb
jmp
repz
xor
nop
cli
in
adc
ja
and
mov
jbe
fnstsw
dec
popa
jmp
lea
ss
aaa
out
fldt
fldcw
notb
mov
loop
sub
out
cmp
hlt
mov
xchg
test
sbb
push
and
das
out
aaa
cmpsb
dec
mov
pushf
mov
adc
addr16
shl
movsb
das
ds
jge
repz
test
test
dec
cld
mov
das
loop
add
faddl
sbb
dec
sub
fldcw
pop
mul
mov
cmp
push
inc
fs
cmpsl
out
js
pop
mov
cmpsb
or
xor
mov
ret
sbb
lret
sbb
inc
jmp
dec
xchg
mov
not
cld
adc
test
adc
movsl
dec
mov
sbb
xor
leave
push
in
or
and
mov
mov
leave
xchg
inc
pop
cwtl
lock
loope
mov
fstl
les
inc
inc
sar
pop
or
mov
jecxz
loopne
pop
sub
or
fnstenv
xchg
fnsave
or
xchg
scas
jno
jl
cmpsl
cmpl
sub
je
rorb
cmp
adcl
repnz
xchg
sbb
pop
enter
addr16
lcall
jl
lods
mov
and
mov
adc
cmp
push
dec
test
fsts
cmp
push
jge
fwait
mov
jmp
test
pop
adc
cltd
dec
fcomip
rolb
pop
or
mov
cwtl
adc
cmpl
jge
cmc
jae
push
dec
add
add
js
jl
push
dec
cmp
int
mov
fsubl
das
mov
push
cmp
enter
jg
fmull
ja
iret
jo
inc
outsb
ds
lock
sbb
loope
push
jb
add
clc
shlb
testb
mov
sub
stos
stos
jle
stos
mov
sub
ss
mov
inc
out
pop
scas
pusha
mov
popa
out
or
insb
jecxz
int
ret
jge
in
cmc
pusha
aas
sbb
mov
movl
xchg
ja
fwait
lock
jno
mov
ljmp
pop
sub
or
xlat
pusha
add
lods
jl
mov
cmc
sbb
std
push
jle
ds
popf
hlt
pop
jl
jp
jecxz
popf
shlb
push
jo
inc
and
std
aaa
mov
xor
and
pusha
mov
loopne
sub
adc
push
cli
jnp
sub
cmp
ret
insb
in
mov
sub
lcall
cmp
outsl
sbb
and
int
jg
push
and
lds
flds
les
hlt
add
imulb
pop
xor
ror
scas
lods
int
ss
or
push
inc
mov
sub
mov
sahf
mov
jl
mov
xchg
imul
mov
mov
sbb
xor
add
bound
add
jno
notl
lea
mov
daa
and
iret
add
lcall
out
sahf
push
add
add
jmp
or
inc
rcrb
pop
test
lds
roll
xchg
mov
popf
push
and
add
outsb
mov
mov
add
push
xchg
cld
mov
iret
jbe
jns
add
mov
insb
fs
add
sbb
inc
mov
mov
imul
fdiv
movsl
push
add
test
or
outsl
and
dec
or
movsl
jne
pop
xchg
xchg
jle
mov
repz
dec
xlat
inc
xor
sbb
popa
icebp
pusha
sarl
imul
inc
cmp
push
in
into
xchg
xchg
in
mov
pop
sub
fldcw
lret
sbb
and
fidivl
ret
push
adc
hlt
rcll
pop
das
aam
sbb
mov
mov
cmp
fstps
aad
sub
push
mov
cmc
cmpsl
ds
lods
aad
icebp
out
jne
cltd
sbbl
dec
js
pop
je
lret
scas
stc
arpl
leave
into
popa
and
add
pop
loopne
sub
addr16
in
lret
imul
dec
pop
loope
leave
fdivrl
mov
imul
adc
js
mov
jnp
fbstp
jg
mov
jns
mov
js
ja
mov
pop
std
imul
mov
and
sbb
mov
leave
pop
xlat
dec
fs
pop
dec
inc
jle
dec
sbb
insb
daa
xchg
sbb
mov
clc
mov
pop
je
shlb
loope
inc
test
imul
xchg
arpl
stc
loop
and
dec
scas
dec
notb
hlt
dec
iret
push
std
popf
or
cmp
rcr
sbb
faddl
xchg
push
mov
xchg
and
jl
insb
adc
je
sub
fs
aas
dec
scas
cwtl
fiadds
or
xchg
dec
movsl
lcall
lcall
sbb
inc
xor
out
add
subl
cmp
and
sbb
mov
sysenter
aam
cld
shll
in
xchg
cmc
push
push
fidivrl
loop
push
mov
push
lods
xor
loope
sarl
fcmovnbe
dec
addr16
xor
bound
stos
add
sbb
loope
sahf
nop
or
pop
jg
les
mov
jecxz
adc
out
lock
pop
clc
or
or
pop
in
aaa
dec
jbe
in
sbb
xorl
rcll
adcb
and
loopne
xor
enter
mov
stos
cmp
jecxz
int3
clc
push
jl
jg
inc
adc
fiaddl
inc
or
pop
xchg
int3
repz
fnstcw
fsubl
rorb
adc
das
cmp
vmovd
mov
leave
jp
stos
cmpb
xor
aas
jb
icebp
cmp
jnp
outsb
daa
cwtl
cmpsb
fidivrs
shl
dec
and
mov
fcomp
and
lea
out
sub
adc
push
outsb
jmp
dec
xlat
in
sub
cwtl
mov
test
outsb
xor
mov
inc
adc
cmpsl
or
ds
std
shlb
jmp
gs
mov
into
inc
jnp
out
out
adc
iret
test
sub
out
scas
jbe
hlt
add
rcll
xor
mov
daa
repnz
inc
add
cmp
je
fdivl
inc
xlat
cmpsb
cwtl
xchg
movb
xor
xchg
bound
fdivr
mulb
in
pop
inc
std
push
ljmp
xor
pop
outsb
cmp
inc
test
mov
push
pop
xor
jne
dec
scas
mov
add
cmp
or
sub
repnz
rorl
push
ss
sub
mov
dec
dec
mov
jle
push
in
xchg
xchg
add
cmp
bound
ja
insl
pop
pop
sbb
or
imul
movsb
in
sahf
lret
loop
cmp
or
insl
mov
xchg
out
or
mov
pop
xchg
insl
scas
shrb
xchg
cmpsb
dec
mov
adc
pushf
add
jo
xchg
mov
test
add
fstpt
adc
pop
in
cmpsb
or
fcoms
jmp
jo
sbb
add
cltd
pop
cmp
jl
mov
scas
lret
ds
xchg
mov
push
fwait
add
pop
insb
sub
inc
pop
inc
insb
scas
arpl
fcoml
je
std
sbb
subb
mov
push
data16
gs
outsl
imul
popf
mov
into
pop
and
lea
jne
jb
push
pusha
clc
and
dec
outsb
sub
in
mov
sarl
les
adc
cs
ja
lahf
lods
dec
jae
scas
ret
mov
jmp
fmuls
dec
bnd
dec
enter
jae
push
jge
push
xor
loopne
inc
gs
mov
test
insl
or
lea
andl
add
mov
dec
or
pushf
jno
sti
data16
push
in
and
xchg
lret
push
std
and
mov
dec
lret
test
or
movb
push
add
xlat
mulb
repz
aaa
js
mov
push
inc
xchg
jbe
shll
sub
jg
lret
in
adc
ds
outsb
or
repz
mov
lock
and
fldl
nop
xchg
push
aam
push
fidivs
imul
out
mov
in
adc
mov
pop
dec
mov
lcall
shlb
ja
adc
jo
push
cli
rclb
mov
push
xchg
xchg
mov
push
test
mov
mov
pop
rclb
loope
shll
adc
sub
dec
sub
fucomp
mov
push
pop
push
mov
add
and
push
mov
lods
test
sbb
test
pop
lock
je
ljmp
jecxz
fwait
push
out
sbb
lock
xor
je
push
ja
inc
xchg
add
sbb
mov
add
movsb
fisttpl
loopne
stos
jl
push
push
sub
cmpsb
rcrb
add
inc
cmc
mov
out
mov
mov
dec
mov
xchg
sbb
pop
mov
cld
xor
adc
sarl
xchg
dec
inc
mov
cmp
sbb
fs
mov
jmp
adc
fists
mov
ret
jmp
mov
pop
popf
mov
push
mov
or
cmp
xor
mov
pop
xlat
push
cmc
test
imul
divl
sub
in
popf
lds
push
dec
pop
mov
sub
filds
push
test
jle
and
das
inc
test
addr16
test
or
dec
and
or
dec
jmp
xchg
mov
jnp
inc
shl
roll
lea
cld
fistpll
dec
pushf
shlb
movsb
mov
push
and
and
int3
sub
stos
scas
movsb
cltd
fwait
adc
mov
fs
xchg
push
add
mov
add
dec
add
xchg
std
and
push
lret
cld
xor
jge
adc
in
je
xor
daa
in
lret
mov
xchg
imul
adc
ffree
icebp
daa
mov
daa
mov
pushf
mov
adc
rorb
sub
jecxz
int3
orb
out
adc
pop
dec
xchg
mov
xchg
popf
test
addr16
push
add
or
enter
add
push
nop
cmp
test
push
mov
sub
push
mov
pop
pop
xor
pop
cld
call
js
or
mov
inc
pop
lret
dec
scas
lret
loop
dec
call
jle
cmpl
hlt
scas
cwtl
ds
or
sub
std
sub
xorb
aad
sub
pop
fdivl
in
or
pushf
sti
cmc
xchg
mov
shll
and
je
xchg
adc
cld
mov
stos
jmp
cmp
sbb
imul
imul
add
jle
gs
lahf
gs
fwait
roll
in
dec
sub
cmp
jge
mov
fsubrs
jl
movsb
sbb
and
aad
loopne
mov
fistl
inc
sar
and
add
pop
outsb
test
jnp
xchg
sbb
sbb
sbb
pop
aaa
cmp
outsb
xor
in
stos
cmp
jns
loope
sbb
cli
dec
jmp
push
rorl
adc
and
cmp
ja
ss
orl
sbb
xchg
fwait
les
sahf
into
sahf
xchg
jl
pop
xor
and
mov
xor
repz
xchg
jo
fldl
pop
push
out
mov
push
test
adc
mov
int
repnz
dec
icebp
icebp
shll
add
test
pop
das
jmp
not
push
jmp
out
fidivrl
test
inc
rcrl
repz
imul
imul
repnz
lahf
jmp
es
inc
xchg
jo
in
mov
pop
dec
push
roll
aam
pop
mov
scas
sahf
mov
es
lcall
pop
stos
arpl
inc
jmp
cmpsb
repnz
pop
out
repz
int3
push
mov
inc
xor
outsb
cli
and
dec
movsw
and
jno
cmp
pop
mov
test
mov
dec
pop
add
pop
jns
dec
mov
cli
xorb
cmp
inc
xor
cmp
mov
jl
movsl
pop
sbb
aam
iret
ss
je
inc
jae
mov
or
xor
inc
xchg
nop
filds
mov
clc
lahf
jle
in
addb
jl
ret
pop
add
cmp
push
in
xor
inc
fcoml
pusha
xchg
cs
loope
ret
xor
sub
sub
mov
lods
call
dec
leave
pop
xor
or
cmp
lock
or
adc
sbb
loopne
mov
in
lea
cmp
push
mov
aaa
sub
aas
or
xchg
lahf
adc
iret
lret
jb
mov
daa
jb
mov
push
cmpsl
jb
jne
adc
jns
ja
inc
mov
movsl
test
add
dec
dec
inc
es
push
jmp
xor
push
cwtl
pop
and
rclb
stc
add
xor
xchg
add
jl
gs
cmp
pop
cmp
mov
dec
fiaddl
sbb
fcomip
adc
xor
repz
inc
fildl
lcall
cwtl
imul
xor
mov
lods
add
paddusb
mov
jle
dec
sbbb
jo
pop
mov
stc
das
cs
ljmp
mov
push
push
addr16
ret
in
xor
jecxz
repnz
ja
add
incb
scas
add
dec
hlt
push
nop
dec
jge
inc
mov
leave
sahf
ds
ljmp
and
cld
dec
mov
mov
iret
scas
cmp
out
loop
xchg
lds
popf
mov
add
shlb
pop
in
test
mov
push
jb
pop
negl
add
pop
and
xchg
mov
loopne
lret
push
mov
subb
int
outsl
stc
je
imul
mov
int
and
int3
jecxz
fdiv
mov
jle
pop
lock
iret
stos
jge
in
add
fildll
les
jb
sbb
mov
cmp
cwtl
mov
jo
movsb
inc
fisubrl
jmp
or
inc
cmp
rcrb
inc
sti
or
loop
mov
aaa
int3
je
jbe
mov
push
dec
lret
loope
call
adc
push
xor
cltd
arpl
push
sbb
cmpl
sbb
daa
js
jmp
xchg
cmpsb
cmp
push
ret
sub
lret
push
push
jge
push
sub
arpl
push
arpl
test
adc
daa
in
test
das
inc
jecxz
and
sbbb
push
pop
mov
movsb
xor
mov
mov
cmp
xor
cmpsb
cmc
add
push
sbb
mov
pop
add
imul
test
pushf
lods
pop
in
shll
dec
mov
cld
or
mov
dec
rcrb
xchg
jl
cld
fdivrs
insl
push
jecxz
iret
ret
pop
or
xchg
hlt
pop
lcall
mov
dec
xor
cmp
pop
push
cwtl
cmp
cmc
add
gs
pop
jno
mov
jg
sbb
cmp
pop
rclb
bound
lret
jecxz
pop
lds
or
shrb
lds
adc
pop
jge
pop
repnz
addr16
int
out
cltd
xchg
jle
mov
nop
out
jns
cwtl
cmp
and
out
push
cmp
xchg
xchg
or
or
cmp
sub
fwait
popf
sahf
lods
jge
lret
adc
add
inc
daa
mov
repnz
mov
aaa
cltd
aam
arpl
xlat
iret
movsb
jb
xchg
mov
and
inc
imul
ret
outsb
daa
pop
insb
int
das
arpl
enter
lock
clc
push
pop
call
mulb
mov
stc
push
and
jle
or
cmpsb
andps
dec
loopne
pop
or
dec
push
push
cmp
cmp
mov
sbb
in
jns
xchg
lods
or
mov
and
or
data16
out
jmp
subl
and
scas
sub
addb
insb
leave
repnz
cmp
mov
lock
fisttpl
dec
bnd
mov
inc
out
stc
cmpsl
push
mov
repz
jae
add
jno
clc
pusha
cmpsb
jle
bound
pop
daa
popf
jecxz
out
cmp
lock
cltd
imull
push
push
cmp
shll
insl
outsl
in
jo
mov
mov
sbb
sbb
mov
les
in
push
adc
movsl
in
push
xchg
sbb
mov
dec
or
mov
mov
in
nop
xchg
mov
sub
data16
pop
mov
out
adc
enter
scas
add
mov
leave
jno
aad
cmp
roll
inc
mov
jns
aas
sbb
mov
out
shl
mov
loope
pop
in
ss
fsubl
inc
xchg
shl
jge
pushf
jnp
int3
and
mov
pusha
mov
cmpb
imul
cld
negb
inc
nop
mov
addl
xchg
sub
fcomi
mov
sarb
xor
cmpsl
pop
xorps
mov
test
imulb
mov
cwtl
les
mov
pop
repnz
jmp
jne
inc
inc
in
jmp
stc
mov
dec
xchg
or
sub
aaa
dec
ljmp
dec
adc
std
xor
add
cltd
cmc
ljmp
pusha
insl
sub
jl
mov
inc
xlat
or
nop
aaa
push
shll
and
nop
mov
push
lods
iret
ret
jp
mov
movsl
pop
lahf
jg
fsubrs
cmp
mov
aas
ja
cmp
cwtl
cwtl
ja
test
sbb
je
scas
cmpsl
inc
lcall
add
test
call
icebp
addr16
mov
xor
out
cmc
jnp
inc
lcall
xor
data16
pusha
jb
and
pop
out
mov
cmp
inc
and
les
cmpsb
cltd
dec
adc
popa
sbb
int3
jnp
push
dec
push
sbb
xchg
mov
cmp
push
rorb
and
cs
sbb
clc
shll
sub
imul
jb
and
inc
adc
pop
roll
jge
jle
pusha
mov
mov
adc
mov
fsubl
sub
xchg
aad
call
mov
adc
adc
jmp
xor
mov
pop
mov
jno
xor
or
in
and
movsl
jge
sub
fdivs
arpl
mov
fs
lock
cmp
mov
mov
push
mov
out
jmp
cmp
add
mov
out
aaa
fwait
dec
test
mov
mov
jno
mov
inc
push
dec
jge
std
out
ret
inc
mov
movsb
push
jo
clc
cmp
in
xchg
mov
scas
xchg
in
and
loope
xor
pop
icebp
adc
xor
push
jl
inc
adc
xor
xchg
loope
sbb
hlt
aam
lret
ret
adc
int
in
in
pop
imul
adc
lahf
mov
pop
sub
std
stc
lcall
xor
fwait
inc
sbb
mov
xchg
test
stos
mov
push
xor
adc
dec
insl
add
sub
ret
adc
ret
mov
dec
xor
cmp
dec
in
xchg
int
stos
sbb
das
pop
clc
pop
xchg
insb
inc
test
lock
repnz
jno
daa
stos
mov
mov
jp
test
enter
stc
sub
or
arpl
jmp
push
xchg
jnp
cli
push
lock
jne
loop
adc
fisubs
jmp
test
dec
sbb
push
mov
je
sub
fstpl
mov
mov
mov
pushl
mov
sub
add
enter
inc
sub
mov
push
push
decb
subb
sar
aaa
cmp
cmp
scas
jo
dec
outsb
and
xchg
inc
xlat
push
or
xchg
fisubrs
lcall
cs
stos
jnp
sahf
das
stos
adc
mov
push
add
lods
imul
shlb
ss
adc
lret
xchg
and
sub
mov
cmpsl
jo
lcall
cmpsb
sub
fisubrl
pop
jo
add
pop
bound
repz
inc
leave
mov
jno
add
xchg
xchg
daa
adc
addps
aaa
out
or
push
jns
push
push
jbe
pop
sbb
icebp
pop
push
and
xchg
and
xor
ljmp
jp
test
icebp
lahf
dec
imul
push
mov
push
clc
pop
mov
test
mov
rol
lods
mov
loopne
pop
lock
mov
mov
je
mov
dec
gs
movsl
push
loopne
mov
xor
mov
lahf
push
cmp
and
push
xchg
das
mov
mov
js
inc
mov
in
in
mov
repz
js
jmp
subb
fwait
outsb
mov
testb
xorl
ret
imul
fiadds
push
rcrl
loop
mov
jne
jne
iret
adc
aaa
fldl
jmp
xchg
test
ljmp
sahf
inc
or
mov
mov
in
jb
lods
pop
stc
push
fsubp
daa
xchg
repz
jo
mov
bnd
or
jmp
xor
iret
dec
iret
dec
mov
icebp
stos
mull
shlb
cltd
scas
out
unpcklps
std
xchg
sbb
jg
cld
add
lcall
lcall
andb
inc
in
jp
cli
repz
roll
pop
push
ret
lahf
popa
pop
into
imul
pusha
xor
lcall
fists
xlat
lods
fistpll
jb
pop
push
lret
xchg
and
loop
out
jno
xor
repnz
aad
pop
or
sbb
insl
test
inc
or
fldt
jne
or
mov
addr16
inc
and
fstp
dec
xor
mov
les
in
sbb
mov
mov
pop
cwtl
mov
loope
in
fwait
cmpsw
out
jo
outsl
test
andl
push
je
aad
data16
stos
adc
dec
and
add
lret
xchg
loop
and
fstpl
testb
mov
iret
mov
pushf
jo
lahf
adc
rcrb
ret
mov
aaa
add
out
jmp
mov
nop
cmp
insl
outsl
and
mov
xchg
mov
or
repnz
jmp
adc
sub
sbbb
neg
jb
rcl
xchg
cmpsl
xor
pushf
mov
jo
icebp
bnd
rorb
daa
dec
fnstsw
lea
pop
rcll
add
aas
icebp
nop
mov
aaa
ret
scas
xor
sub
ljmp
lds
jge
test
in
mov
cmp
outsl
sub
pop
cmp
push
ljmp
aad
mov
cltd
inc
sub
push
or
mov
jbe
push
mov
mov
xchg
lret
pop
mov
test
jp
fs
mov
pop
add
mov
xchg
jnp
pop
xchg
pusha
nop
test
cmp
jnp
adc
mov
adc
push
add
inc
mov
mov
add
sbb
imul
mov
dec
cld
in
jl
xchg
lret
adc
push
pop
dec
dec
es
jp
inc
mov
dec
or
lret
js
mov
movsl
repnz
dec
sbb
out
lea
mov
js
movl
imulb
fsubrs
xchg
in
sub
and
add
mov
out
daa
rcr
in
int3
notl
mov
fwait
scas
pop
xchg
pop
cmpsl
mov
mov
xchg
pop
jo
test
mov
pop
sbb
imul
je
div
cmp
jnp
je
xor
and
fisttpl
fldl
test
sub
addb
jno
stc
jb
scas
add
mov
inc
orb
xchg
jno
aam
mov
std
adc
movsb
mov
movb
ss
popf
es
jmp
dec
imul
lahf
out
in
lret
divb
in
and
daa
cli
data16
adc
mov
xor
test
xchg
pop
adc
nop
dec
jnp
jl
mov
cmc
mov
movsb
lods
pop
scas
jg
cmp
inc
cli
jecxz
frstor
push
mov
add
pop
out
mov
out
xor
leave
xchg
movsb
adc
add
data16
and
mov
testb
dec
shrb
inc
jmp
or
sub
add
aad
mov
dec
outsb
mov
mov
lea
jo
push
shlb
fisttpll
sub
pop
cmpsl
xchg
out
jb
mov
cmpsl
mov
popa
js
push
jbe
push
mov
test
repz
dec
data16
insb
adc
pop
mov
int
xor
dec
loop
cli
mov
jecxz
adc
jmp
mov
push
cmp
aas
dec
outsl
loopne
cmc
xor
mov
push
int
call
add
adc
mov
lret
cs
jmp
cmp
test
xchg
int
and
mov
insb
xchg
in
xchg
pop
xlat
push
arpl
into
sbb
sahf
outsb
lock
ret
scas
or
jbe
inc
shlb
fcomip
dec
out
leave
repz
and
test
push
mov
sub
pop
jbe
xor
lods
hlt
adc
mov
gs
sub
push
lea
imul
pop
sbb
andl
dec
int
test
cmp
je
aad
cmp
fisttps
xor
push
jns
fcoms
and
int
xor
ja
hlt
clc
pop
es
lcall
movsb
out
and
pop
jp
jge
es
test
inc
rorb
jo
sbb
jl
mov
jl
cmp
cwtl
mov
ficompl
fcom
adc
pop
jns
xlat
xchg
jns
jne
std
std
or
sub
lcall
jae
add
mov
mov
int
xchg
mov
xchg
add
push
fisubl
and
jb
dec
cmp
mul
popa
push
and
cmp
sub
push
jmp
inc
insb
push
sub
insl
pop
dec
das
fists
movsl
xor
push
call
mov
cmpb
icebp
or
pop
push
ds
add
mov
sbb
inc
pop
push
lea
xchg
lods
and
inc
jl
jb
jmp
fbstp
mov
mov
push
daa
mov
mov
imul
cmovne
push
push
xchg
das
jnp
fstpl
xor
xchg
movsl
out
sbb
repz
adc
xor
aad
dec
sarb
and
mov
pop
mov
pop
or
sub
dec
iret
adc
mov
mov
cs
ret
add
sbb
out
adc
and
daa
imull
aas
out
enter
push
jecxz
push
cmp
xor
sub
lea
cmp
and
test
dec
cmpb
cwtl
jns
jbe
add
jmp
adc
xchg
push
sti
sub
rol
mov
lahf
es
not
mov
xor
pop
jb
fimuls
incl
mov
xchg
xchg
sbb
loope
stc
aas
and
test
push
lret
sub
mov
jg
jae
aad
inc
dec
push
jbe
xchg
andb
and
pusha
sbb
and
pusha
ljmp
cltd
int3
faddp
lea
sbb
add
fbld
sub
jb
test
lock
and
xchg
add
clts
stos
and
jb
and
xor
mov
int
lret
daa
sub
ret
pop
hlt
jno
xchg
dec
mov
cli
pop
popf
fldenv
lret
mov
std
pop
clc
fnstsw
pop
lcall
inc
mov
mov
cmp
dec
inc
call
in
mov
ret
add
sub
insb
xchg
jg
push
cmp
shll
sbb
cltd
les
test
cltd
mov
inc
xor
push
cs
hlt
test
fs
jbe
stc
lcall
cmp
xchg
adcl
dec
jae
sti
inc
fnsetpm(287
in
ljmp
mov
adc
lock
sbb
inc
rol
sub
test
pop
inc
push
imul
mov
adc
add
dec
dec
jmp
outsl
mov
test
sub
lcall
arpl
and
jle
gs
rorl
subl
push
aad
mov
sti
mov
movl
in
mov
rcr
add
cmp
mov
test
pop
jne
xor
mov
mov
out
jo
mov
inc
inc
dec
jne
scas
icebp
inc
mov
movsl
bound
repz
dec
mov
ja
sub
or
jbe
je
testb
test
mov
punpcklbw
in
pop
testb
cs
mov
cmp
lahf
imul
mov
xor
push
testb
js
lahf
and
push
sbb
jo
cmp
addr16
or
rolb
and
clc
sbbb
sbb
adc
jge
jmp
fisttpll
add
xchg
push
arpl
adc
adc
lods
int3
push
fsubs
pop
mov
xor
loopne
sub
xor
out
dec
push
jmp
pop
jo
sar
addl
adcl
into
insb
sahf
repnz
mov
mov
add
stc
scas
mov
cmp
push
stos
mov
mov
popf
lcall
lds
or
pop
sub
sub
lds
ja
mov
dec
iret
pop
dec
jecxz
sbb
daa
mov
mov
xor
roll
jbe
leave
out
xchg
outsl
stos
sbb
aas
mov
out
xor
insb
lods
sarl
fcmovnb
pop
cmp
mov
ja
adc
bound
cs
dec
mov
sbb
inc
fisubrs
mov
ja
cmp
dec
push
je
sub
fmull
pop
insb
popa
push
stos
adc
stos
mov
and
mov
mov
shl
push
push
movntps
mov
mov
lea
fwait
mov
mov
fsubr
sub
jle
enter
sete
lds
les
jo
sarl
lods
daa
cwtl
ljmp
stos
add
cmc
test
lret
sub
mov
test
adc
in
adc
or
pop
rorl
dec
popa
mov
and
push
dec
sub
repnz
mov
mull
push
iret
push
add
jge
and
clc
aas
test
je
cmp
in
in
out
movsl
lret
iret
in
pop
test
add
pusha
test
fmull
pop
iret
mov
dec
dec
mov
gs
add
or
fstpl
push
adc
loope
bound
mov
jl
lea
xor
sub
add
ds
int3
fs
and
inc
testb
pop
pop
imul
aad
in
imul
and
outsb
pop
add
gs
sbb
sub
adcb
cmc
nop
push
in
dec
jo
loopne
icebp
cmpb
pop
push
arpl
push
shlb
pop
pop
or
orb
jmp
jae
xchg
loopne
xor
das
std
xchg
lahf
xor
data16
mov
xchg
and
fnstsw
pop
or
push
mov
icebp
pop
fsub
dec
roll
mov
jne
xchg
repnz
test
jb
or
mov
in
andl
dec
cmp
movsl
adc
and
xchg
fmull
sbbl
or
add
xchg
sahf
adc
dec
xchg
xor
sbb
jl
and
movsb
push
jle
sbb
dec
test
adc
mov
cltd
cmp
mov
dec
dec
test
je
mov
cmp
push
mov
jecxz
das
and
mov
ljmp
push
data16
jae
enter
into
jle
cmp
mov
mov
sub
aas
lahf
inc
aas
jbe
cs
add
cmp
push
in
jno
js
mov
inc
jmp
insb
push
call
subb
mov
fwait
sbb
xchg
push
push
and
mov
cli
add
out
mov
xlat
mov
or
mov
shll
mov
push
dec
fxch
fwait
cmpsl
xchg
leave
lret
xchg
add
aam
bnd
push
int
fsubrs
popa
mov
icebp
jge
in
mov
dec
pop
or
stos
jae
mov
bound
mov
lea
push
sahf
jge
mov
xchg
cmpsl
pop
mov
add
clc
aaa
mov
out
ret
dec
push
sub
mov
mov
iret
mov
je
mov
arpl
cmpsl
adc
add
int3
jle
and
sub
ret
shll
orb
rcll
rcrb
test
jg
pop
pop
aam
std
xchg
mov
mov
scas
pop
shl
mov
loopne
and
cltd
mov
popf
push
daa
mov
fs
aas
or
inc
push
or
hlt
bound
ja
lret
sub
jmp
mov
jo
testl
mov
ret
xor
andl
test
push
lahf
mov
push
fwait
js
cmp
dec
mov
lea
inc
mov
and
in
cmp
mov
js
xor
pop
add
js
out
lret
mov
push
cmp
mov
fwait
push
fistps
fcmovbe
add
or
rol
and
xchg
aas
sbb
dec
mov
test
dec
jg
mov
inc
add
ljmp
push
fcomi
sahf
mov
xlat
cmpsb
pushf
push
push
xchg
repnz
aam
ja
aad
pop
in
lds
pop
fldenv
outsb
icebp
cmp
bound
push
cmc
jge
xchg
daa
sti
or
adc
mov
jp
test
imul
jb
or
popf
leave
mov
mov
sbb
addl
jge
inc
sbb
xor
lcall
rcr
in
incb
scas
shlb
dec
inc
outsb
mov
jnp
xchg
sbb
sahf
sbbb
dec
in
dec
in
lds
pop
rorb
inc
out
cmp
lret
mov
imul
add
sbb
xchg
out
push
out
push
das
fsub
idivb
xchg
cmc
cmpsl
es
inc
mov
add
jecxz
adc
es
fwait
xchg
mov
shl
inc
in
stc
jae
add
inc
cmpsl
jbe
push
ret
imul
mov
ja
outsb
and
push
or
scas
sub
dec
dec
cmpsl
sbb
sub
push
cmpsl
xchg
sbb
xor
sub
in
rcrl
adc
mov
push
sub
insl
pushf
mov
leave
and
lcall
shrl
orl
or
sarb
dec
ss
cmp
mov
push
xchg
lea
push
xchg
addr16
fistps
pop
xchg
mov
into
or
or
pop
clc
mov
dec
cmp
stos
ret
jae
mov
das
jmp
imul
imul
xchg
xlat
adc
or
imul
cltd
mov
wbinvd
mov
jno
stc
inc
loop
insb
mov
adc
xchg
mov
jne
js
and
outsb
loopne
out
jbe
stos
idivl
jae
je
rcll
jne
arpl
nop
in
xor
dec
scas
mov
jg
dec
cwtl
mov
dec
xchg
mov
sub
adc
popa
mov
inc
push
cmp
shll
mov
lret
sti
dec
ds
xor
xchg
mov
xor
in
push
arpl
int3
pop
push
mov
xchg
and
cwtl
lock
nop
fdiv
push
push
mov
test
fldenv
lds
mov
mov
mov
ja
shlb
orb
lds
mov
xchg
cld
push
mov
inc
mov
mov
pop
sub
cmp
out
jl
aaa
stos
pop
pop
pop
cmpsb
and
out
cli
dec
jns
in
inc
movsl
dec
pop
ds
imul
dec
sbb
cmp
data16
or
jmp
cltd
push
xchg
sarl
mov
adc
or
popf
sahf
test
mov
pop
aam
cltd
mov
aas
popf
out
hlt
lds
es
ja
sub
into
dec
imull
or
mull
mov
xor
and
test
jecxz
hlt
cmp
in
adc
jmp
push
xor
pop
jecxz
imul
push
aam
pop
shrb
adc
fmuls
push
icebp
dec
ss
mov
xchg
xchg
outsb
add
shll
aam
out
sub
mov
xchg
out
or
mov
ret
dec
lds
add
add
repz
mov
rdmsr
ja
ds
gs
cld
xchg
mov
fnsave
out
test
inc
mov
mov
mov
adc
fsts
or
fsubrs
xchg
jae
xchg
mov
shrd
mov
cltd
mov
mov
inc
loopne
nop
sub
inc
mov
jbe
cltd
ret
mov
sbb
sbb
inc
inc
mov
jmp
sbb
out
push
pop
arpl
or
repnz
das
sub
xchg
jbe
ds
inc
aam
mov
mov
sbbb
inc
imul
mov
out
out
lock
test
aam
ret
sbbw
mov
push
popa
call
rol
sahf
and
aad
data16
pop
mov
ucomiss
or
jno
mov
fists
ret
pop
or
rclb
mov
xchg
sub
push
jle
pusha
mov
fiadds
std
jne
xchg
xchg
cmp
outsl
lock
in
out
stos
popf
push
out
jmpw
arpl
mov
adc
jnp
xor
faddp
mov
in
outsl
jb
shll
ret
xchg
mov
lds
addb
inc
aaa
push
and
mov
xor
out
fldl
in
rolb
je
ret
cmp
jmp
das
mov
js
scas
test
and
pop
js
mov
push
ss
push
out
mov
sub
jb
add
xor
sarb
clc
mov
inc
nop
mov
inc
aad
xchg
xchg
jae
pop
sub
push
inc
jb
les
addr16
mov
and
imul
scas
test
ficomps
push
pop
mov
pusha
jnp
pop
add
mov
faddp
adcl
jg
jmp
pop
fwait
dec
pop
mov
jl
mov
xchg
sbb
dec
xchg
mov
cmp
fdiv
pop
rcrl
pop
nop
xor
adc
jnp
push
mov
fistps
dec
push
out
bound
test
das
mov
dec
inc
jno
mov
jae
das
push
lcall
dec
push
inc
sbb
cmp
mov
pop
jecxz
mov
mov
xor
cmc
cltd
cmp
xor
adc
ljmp
push
in
loope
sarb
call
push
call
sub
or
xor
lret
lock
xchg
sbb
nop
lds
cmp
sti
jge
jmp
push
nop
cwtl
stos
out
mov
or
popa
fdecstp
leave
ret
test
pop
into
mov
daa
testb
cmp
sub
ret
int3
jo
lahf
inc
js
xchg
and
pop
cmpsb
sub
aas
mov
out
lock
insl
test
add
ds
into
sahf
mov
in
movsl
movsl
add
dec
cltd
dec
xlat
mov
xchg
scas
jns
xchg
jnp
scas
adc
push
cli
push
adc
dec
xlat
adc
adc
stc
daa
out
mov
shlb
ss
or
mov
and
cmpsb
cs
jle
and
xchg
mov
outsl
dec
fs
mov
rcr
jmp
lock
movsl
mov
int3
mov
xchg
ret
repnz
mov
out
or
add
xlat
movsb
clc
and
lahf
adc
jecxz
mov
cltd
rolb
sbb
adc
and
push
mov
sub
inc
popa
mov
mov
daa
mov
jne
push
popf
pushl
or
cli
or
lods
xor
rol
adcb
sub
inc
jb
or
add
add
push
cmp
push
outsb
push
dec
push
fdivrl
hlt
scas
xchg
and
call
inc
pop
jne
sbb
inc
lea
xchg
xchg
mov
or
pop
fidivs
pop
loope
std
aad
gs
push
dec
sbb
sbb
inc
stos
lcall
mov
mov
sub
push
scas
xlat
cmc
ret
cwtl
pop
lods
or
push
or
pop
push
fsubrs
add
call
lock
xor
outsl
jbe
movsb
inc
sub
xor
mov
hlt
ficomps
sbb
dec
add
mov
pop
pop
push
mov
inc
jge
dec
shll
xchg
mov
stc
lock
adc
out
aam
or
sbb
in
jb
mov
and
mov
std
adc
mov
into
xor
inc
sahf
fs
push
pop
aam
or
jo
sbb
bound
in
insb
fldcw
popa
push
sub
dec
mov
cmp
int3
mov
jo
cmp
out
aam
insb
xlat
loope
jbe
jg
loope
push
push
push
sub
inc
sarb
xor
pop
iret
lods
jo
inc
and
mov
out
repz
push
jbe
adc
sub
jge
push
or
dec
in
std
stos
lcall
sbbl
lea
fimull
fdivs
mov
xor
and
jo
cmp
add
movsb
iret
aad
mov
sbb
pop
and
popa
lods
xchg
sbbl
repz
jecxz
xor
pop
xchg
stos
stos
test
mov
mov
mov
mov
xor
mov
lea
sub
test
mov
popa
sbb
push
fsubp
inc
jecxz
and
fld
add
xchg
fimull
cmpsb
pop
rorl
pop
rcr
dec
and
and
nop
stos
adcb
movsl
int3
xchg
mov
mov
add
cmpsl
cmp
enter
jne
mov
push
divl
mov
and
add
inc
jg
cmpl
sahf
push
nop
add
mov
sbb
xlat
arpl
testb
adc
and
addr16
mov
sbb
in
xor
mov
jnp
cmpb
mov
adc
in
enter
add
inc
or
push
and
and
inc
and
int
lcall
or
inc
xor
movsl
xor
dec
dec
sub
inc
nop
push
jl
enter
push
adc
pop
push
minps
hlt
scas
sub
jnp
dec
fdivrl
jg
cmc
cli
mov
and
movsb
pop
nop
push
imul
pusha
pop
ja
xchg
mov
jno
pop
arpl
cmp
push
xlat
loop
adc
mov
sbb
test
imul
push
dec
xchg
jo
push
ficoms
aam
mov
mov
sbb
aad
test
loop
lods
outsl
out
jns
aas
and
int
add
dec
rorb
mov
mov
and
pusha
jle
lret
lock
fsubrl
push
jg
pop
in
dec
xchg
cs
mov
into
addl
or
mov
pop
fnstsw
add
pop
cli
leave
sbb
jecxz
push
cmp
push
ds
rorb
ja
sub
ds
test
mov
fcoms
jns
pushf
shlb
inc
popf
outsl
push
add
mov
inc
addr16
xor
fsubrs
mov
sub
out
pop
mov
std
dec
sbbl
testl
xor
mov
jge
out
out
cmp
sahf
fldl2e
dec
push
jns
dec
or
inc
xchg
movzbl
xchg
insl
sbb
xchg
xor
mov
push
push
dec
lret
popf
fcoms
arpl
mov
movsb
into
outsl
ret
cltd
push
and
and
inc
ss
out
add
push
pop
inc
in
lock
or
popa
rcl
dec
mov
cmc
or
add
scas
loop
in
fcoml
jecxz
sub
loopne
fsts
cmp
sbbb
dec
out
push
fstpt
insb
sbb
lea
ret
cmpsl
adc
or
push
lea
mov
popf
call
bound
ja
rol
xor
nop
pop
enter
roll
pop
cwtl
lock
jb
fisubrl
dec
adc
mov
dec
es
enter
push
imul
imul
lret
add
inc
pop
pop
dec
xorb
xor
or
push
iret
jbe
jge
mov
fldl
sub
or
mov
cmpsl
test
in
andb
mov
test
rorb
insb
inc
repnz
dec
sahf
mov
jbe
jg
aad
pop
dec
adc
daa
js
xor
add
jl
add
repnz
adc
out
inc
and
ret
mov
mov
fidivs
lahf
inc
sbb
rorl
pop
test
ret
add
inc
add
aas
das
or
adc
pop
cld
mov
shrb
js
adc
pop
mov
pop
cmp
pop
sbb
lods
xchg
popf
pop
into
mov
mov
xchg
pop
xchg
out
xchg
mov
pop
leave
jno
repz
add
dec
shrb
popf
pop
inc
pop
adc
enter
mov
xor
sub
or
and
push
lahf
out
mov
scas
clc
push
bound
push
cmp
fsubrs
outsb
icebp
je
loope
lret
hlt
dec
pop
int3
xchg
mov
ds
and
xchg
and
jl
fsub
orl
dec
jl
dec
imul
bound
push
adc
rcrl
xor
jle
sbb
jns
push
in
sub
jecxz
enter
popf
mov
or
icebp
mov
pop
sub
popa
add
push
pop
dec
pop
xor
out
pop
xchg
js
das
addb
lea
sbb
int3
cld
push
pop
fdivp
mov
decb
addl
in
and
add
loopne
popf
mov
cli
cltd
jo
jmp
cltd
jnp
mov
cmpsb
ds
xlat
in
hlt
fs
and
mov
lock
jecxz
adc
cwtl
mov
les
pop
jo
out
addr16
data16
cmp
mov
cltd
or
fstpl
sarl
mov
mov
sub
sbb
les
sub
loopne
and
cmpl
add
das
sbb
dec
int
adc
test
mov
jg
fsubr
xchg
add
test
shll
loope
sbb
ds
cld
push
ja
leave
jecxz
and
mov
jp
sahf
out
out
in
in
outsl
push
lock
mov
or
enter
mov
cltd
and
test
pop
lods
push
dec
ljmp
rolb
dec
dec
mov
arpl
cmp
or
pop
mov
mov
xchg
iret
out
xchg
data16
mov
fnstcw
out
jnp
xchg
or
dec
inc
negb
add
pcmpgtb
and
dec
xor
fs
or
pop
fisubrl
xor
jmp
cmp
pushl
in
orb
loopne
push
push
mov
scas
xorl
addr16
scas
mov
add
sbb
push
cmp
adc
mov
add
sbb
pop
frstor
mov
mov
xchg
les
push
sub
mov
dec
mov
imul
and
fdivl
mov
cmp
add
pop
cmp
mov
sub
mov
std
push
mov
imul
movsl
clc
push
xor
gs
cmp
mov
je
xchg
xor
inc
mov
xor
pushf
sbb
sub
sar
lea
cwtl
push
movsl
push
sarb
test
leave
dec
dec
xchg
subl
mov
cmp
movsb
mov
cmp
ja
xor
adc
outsl
push
or
out
cmp
jnp
add
inc
out
enter
sbb
std
lods
cmpsb
hlt
or
clc
fnsave
xchg
mov
push
js
sbb
fnstcw
fidivrl
imul
dec
stc
outsl
or
sbb
mov
pop
out
gs
xchg
clc
add
push
dec
add
jp
fistl
out
int
xchg
inc
cmpsb
push
stos
ds
mov
add
sub
shll
andl
mov
xchg
ror
jle
and
dec
lods
push
jmp
xchg
mov
add
arpl
mov
arpl
mov
scas
mov
inc
icebp
mov
nop
xchg
jae
in
cmp
jl
cmp
and
add
inc
mov
adc
pop
outsl
scas
and
adc
push
out
xor
shlb
mov
and
add
mov
in
sub
xor
cmp
outsl
lret
jbe
or
test
pusha
push
ds
add
pop
inc
sub
pop
inc
mov
jl
clc
jle
mov
pop
in
xor
jg
rorl
jmp
xchg
mov
mov
imul
adc
outsl
sbb
ds
and
in
dec
hlt
icebp
xor
dec
jge
int
daa
and
sub
cld
mov
call
push
fldenv
add
lret
aam
xor
pop
inc
xor
xchg
loope
insl
xchg
pop
push
cmp
mov
and
test
push
mov
cmpsl
sarl
ljmp
stos
mov
xchg
mov
dec
sti
sbb
fs
imul
std
add
popa
fidivs
xchg
das
ljmp
sub
mov
or
push
xor
jne
cs
mul
xor
fs
mov
inc
jo
popf
leave
out
xor
dec
dec
xor
roll
pop
sub
mov
mov
mov
cmp
ret
xchg
pop
sub
jmp
xchg
pop
mov
jae
mov
pop
sbb
lcall
int
cmp
test
out
scas
mov
or
mov
hlt
into
out
inc
data16
mov
call
jnp
add
iret
movsb
dec
aaa
int3
sbb
stc
inc
pop
jmp
shlb
in
test
adcl
lock
sub
call
outsb
cmp
lock
mov
jp
fwait
sar
sub
lret
lds
and
ret
repnz
add
sbb
jns
movsl
mov
ss
and
dec
scas
and
xchg
jge
loop
int
push
inc
fdivp
mov
mov
xor
les
mov
mov
test
je
rol
cmp
sbb
cmpsl
dec
xchg
ja
mov
in
adc
loope
inc
stos
stc
sub
sbb
adc
pop
imul
ljmp
lock
mov
xor
out
mov
cmc
jmp
inc
lods
ss
pop
push
daa
and
xchg
notb
pusha
pop
adc
xchg
loopne
and
pusha
jmp
mov
mov
orb
pop
push
lret
fwait
inc
xchg
stos
out
out
xor
popf
mov
dec
mov
pop
push
xor
sbb
mov
or
sar
shll
pop
dec
sub
and
callw
adc
rolb
inc
mov
dec
or
gs
int3
fwait
push
jle
pop
repz
stos
mov
sub
idiv
xchg
lods
jbe
cmc
mov
dec
sub
scas
aaa
call
mov
xlat
addr16
push
jle
jae
mov
dec
imull
sub
lods
into
outsb
pop
aad
ss
cmp
lods
ret
fmul
and
dec
arpl
lods
sub
movsl
fstps
imul
jae
sub
xchg
jge
popa
iret
cltd
sbb
push
pushl
cmpsb
xorb
sbb
popf
push
ret
sub
fs
cltd
adc
pop
sbb
adc
sbb
inc
pop
and
cli
sub
sub
leave
iret
sbb
orl
ljmp
clc
push
cmp
divl
or
test
sbbb
shrb
dec
into
push
push
aad
loopne
cltd
pushf
int3
cmp
mov
leave
lods
out
in
xchg
in
sbb
orb
mov
dec
mov
mov
scas
das
sub
mov
divb
jge
xchg
in
or
pusha
out
mov
pop
fsubr
jne
lea
mov
mov
scas
adc
mov
pop
lods
lret
adc
cmc
icebp
or
and
cmp
adc
xchg
jbe
mov
mov
aas
xor
sub
cltd
push
loop
inc
jecxz
pop
dec
cmp
cmp
cli
repz
mov
push
pop
fwait
inc
cmpsl
pusha
xlat
out
in
or
add
jb
lahf
xchg
mov
inc
rolb
insb
sbb
cltd
out
mov
adc
pop
adc
dec
add
sbb
into
pop
xchg
sub
cmp
mov
pop
cmp
lret
xor
fdivrp
lahf
mov
adc
shrl
jp
test
mov
cwtl
cmp
adc
mov
sub
fsts
cwtl
test
test
aas
jmp
lret
xlat
je
fs
jno
dec
sahf
ja
xchg
mov
fadd
jg
rcl
out
loop
mov
jns
xor
iret
adc
test
arpl
ja
adc
arpl
fdivl
cmpl
push
cwtl
mov
inc
xchg
sub
outsl
mov
mov
cmp
mov
js
mov
std
test
add
insb
mov
adc
mov
mov
fldenv
fimuls
int3
push
xor
dec
push
ret
and
je
jb
in
dec
test
sarl
adc
xchg
sbb
es
mov
push
or
inc
mov
jne
inc
inc
sbb
cmp
or
inc
jae
pop
pop
or
mov
mov
pushf
pop
xchg
ja
notl
mov
int
hlt
rorb
icebp
in
push
les
ljmp
fidivrl
imul
mov
cmp
les
push
cmpsb
and
or
cmp
adc
cmp
pop
xchg
sbb
icebp
insb
xor
in
sbb
mov
lcall
sub
xor
inc
pop
and
hlt
xor
fwait
mov
pop
dec
jb
movsb
or
sub
xchg
fwait
mov
xchg
jno,pn
adc
pop
outsb
mov
stos
and
cmc
xchg
cld
dec
sbb
fldenv
push
pop
bswap
jecxz
cwtl
xchg
je
stc
jo
ret
cmp
cmp
pop
xor
orb
or
and
insl
shll
cwtl
mov
sbb
fbstp
in
ficoms
into
push
push
addr16
push
imul
push
imul
adc
xor
dec
xchg
imul
jge
inc
pop
insl
aam
out
aad
arpl
xlat
mov
xchg
ja
cltd
adc
icebp
push
fwait
repnz
pop
xchg
lods
aad
outsb
movsl
sub
sbb
int3
xchg
dec
cmc
or
mov
outsl
aam
lods
jecxz
add
rclb
or
and
pop
rcll
addl
dec
xor
cmp
jns
mov
or
pop
movsb
mov
xor
stos
mov
dec
inc
mov
jbe
and
cmc
imul
push
mov
push
test
push
lret
cmp
es
add
mov
fdivrl
stos
lret
fistpll
orb
insb
imul
xchg
inc
xchg
sahf
push
mov
fucomi
xchg
cmp
and
mov
sahf
es
frstor
jo
add
stos
lods
test
stos
leave
int3
pop
xchg
test
sbbl
adc
imull
adc
ret
in
xlat
jecxz
inc
dec
adc
arpl
jns
mov
adc
negl
cmpsl
inc
jecxz
pop
push
sub
out
cmc
js
sahf
and
ret
int
inc
imul
cmpsl
mov
es
or
cwtl
jmp
xor
fiadds
add
xor
insb
mov
mov
mov
daa
push
push
sbb
js
pop
xchg
xchg
mov
xlat
iret
lock
outsb
enter
or
bound
bound
lret
push
ret
iret
lahf
test
mov
jmp
test
mov
push
cmp
imul
mov
fidivl
jnp
mov
ljmp
inc
pop
or
or
inc
shl
repnz
sbb
pop
inc
fistps
jb
loopne
fwait
inc
fmuls
sbb
test
outsb
sahf
push
out
out
sub
rorl
xchg
dec
nop
jge
sub
adc
rcr
sbb
inc
ds
mov
push
dec
mov
adc
jp
adc
ss
out
lods
mov
negb
sti
xchg
mov
sub
std
subb
cli
mov
popa
mov
xchg
mov
aas
cld
stc
pop
mov
ljmp
mov
hlt
or
je
btc
mov
test
icebp
aaa
sbb
mov
aas
sbb
adc
fstpl
pop
adc
pop
outsb
xchg
lahf
lea
sbb
dec
aad
xchg
dec
or
pop
je
xchg
xchg
mov
jmp
rcrl
dec
push
push
vsqrtsd
adc
out
jl
out
cmpsl
jno
out
fs
push
dec
pop
adc
flds
inc
and
jecxz
iret
stc
std
fnsave
adc
repnz
sub
sub
jp
pop
fwait
jns
add
inc
cli
add
ret
lret
sbb
inc
divb
jb
in
mov
pop
inc
in
out
fs
out
dec
cs
aad
mov
js
ret
imul
repnz
inc
push
inc
jg
lcall
gs
gs
xchg
lods
mov
fmul
mov
mov
add
loopne
cs
mov
mulb
sbb
mov
popa
or
movsb
xlat
push
int3
and
out
mov
xor
inc
js
cmp
jmp
add
adcb
lret
mov
jnp
pop
mov
add
or
adcb
jp
ja
leave
loop
push
dec
daa
inc
addr16
cmp
int3
cmc
mov
push
imul
cs
sbb
cmp
push
insb
cli
pop
jb
pop
test
jg
jb
shrb
repz
xor
sub
dec
les
lret
movsl
xor
enter
sti
add
mov
ret
push
sbb
pop
sarb
gs
rclb
add
or
out
in
push
and
aaa
mov
lret
mov
lret
push
cs
jg
sub
inc
call
xor
test
jmp
frstor
sti
ja
and
out
jl
outsl
sbb
dec
daa
lods
sbb
inc
daa
inc
sbb
dec
outsb
jle
sti
inc
cmpb
mov
mov
xlat
pop
mov
cwtl
and
dec
push
std
and
xchg
std
inc
mov
jae
into
jo
or
mov
shrl
xorl
push
mov
adc
xchg
inc
cli
inc
sub
mov
into
inc
out
out
dec
ja
mov
push
popf
decb
in
mov
push
push
cmpsb
aam
xlat
iret
sub
lcall
cmpsl
sub
push
add
shlb
push
mov
test
icebp
jns
cld
mov
mov
xor
cwtl
pop
mov
push
dec
jo
ss
ds
sbb
xor
push
into
xchg
out
mull
add
js
daa
mov
cmpsl
jg
mov
sbb
insl
dec
iret
add
mov
xchg
cli
sahf
dec
mov
dec
test
xchg
addr16
stos
je
push
cld
push
xlat
cmp
push
movsb
dec
stc
push
js
pusha
mov
addr16
outsl
sub
daa
in
push
ja
cmp
jb
imul
mov
dec
add
inc
sbb
sub
clc
inc
imul
jge
pop
movsl
fs
pop
pop
dec
sarb
jno
cmp
jae
dec
and
inc
xchg
in
pop
dec
xchg
stc
sbb
ret
or
sbbb
push
fwait
mov
popf
in
mov
jl
pushf
int
cmp
ret
mov
sub
sbb
mov
jmp
fs
in
fisubrs
es
or
add
inc
jno
ret
les
adc
sti
mov
dec
lock
call
sub
xchg
add
pop
das
int3
shll
add
movsb
sbb
andb
fwait
je
das
das
or
mov
flds
out
mov
loopne
insb
adc
nop
stc
out
mov
imul
or
xchg
sub
aam
jo
popf
das
jns
xchg
cmp
imul
jl
mov
or
dec
fisttpll
lcall
jmp
push
cmp
inc
in
dec
and
sub
pop
sbb
or
in
das
jnp
mov
mov
movsl
dec
jge
jmp
sbb
lahf
int3
or
stc
movsl
dec
inc
popf
xor
pusha
adc
push
mov
jl
inc
xor
aam
jle
divb
jecxz
jl
xchg
stos
fisttpl
push
lods
push
adc
sbb
popf
push
cmp
mov
std
imul
sahf
mov
aas
xor
mov
mov
cld
clc
out
js
ja
insl
sbb
mov
ja
dec
cmp
jne
jecxz
mov
jb
dec
andl
mov
inc
test
push
jno
push
jo
nop
or
lahf
pop
rol
insl
mov
lock
lds
add
jle
loopne
test
or
mov
mov
loope
mov
mov
pop
cmp
popf
and
dec
mov
fmull
es
mov
ss
lods
fimull
push
sahf
subl
int
iret
outsb
test
addr16
push
pop
nop
add
flds
call
fwait
add
aam
sti
xlat
pop
call
mov
sti
fs
test
jae
popa
shl
pop
adc
push
xchg
into
push
aas
cmp
add
pop
xor
sbb
add
cld
aad
pop
insl
pop
subl
lret
mov
mov
sbb
cmp
pop
leave
sub
xor
cmp
into
and
in
pop
xchg
outsl
test
xchg
push
jmp
ret
cmp
inc
sbbb
push
ljmp
stc
dec
fisubrs
loopne
xchg
popf
push
popf
push
fstpl
call
in
es
add
sbb
shrl
sbb
push
sub
sub
lret
outsb
call
call
push
daa
std
loop
jl
push
ret
popf
mov
mov
mov
sub
lds
cmc
es
sahf
lahf
fimuls
sbb
gs
adc
fdivs
mov
jno
jne
mov
inc
repz
insb
scas
ret
push
mov
mov
jns
std
dec
stos
xlat
xor
ljmp
test
fistps
fsubs
xor
fs
xor
fldenv
andl
inc
dec
add
in
push
or
fiadds
xor
mov
iret
imul
add
push
aam
divl
xchg
test
ljmp
jns
inc
mov
mov
jnp
mov
shl
push
adc
std
push
gs
sbb
push
je
push
data16
xor
inc
in
ds
xchg
and
pop
add
pop
nop
mov
push
sbb
cltd
add
lcall
ss
arpl
out
jmp
pop
lds
and
test
sbb
lods
shr
loop
sub
imul
aas
xor
add
loope
dec
sarl
jg
fcompl
or
add
fs
test
out
xor
cwtl
fimuls
fistl
mov
add
xor
mov
sub
aaa
popf
and
pop
fidivs
and
mov
test
sub
bound
add
jl
and
and
insl
cmp
pop
inc
test
add
pop
sub
pushf
xchg
cmp
lret
call
das
test
ja
mov
dec
int
mov
jo
xor
mov
in
in
mov
js
and
shlb
mov
je
sbb
dec
lahf
pushf
adcl
nop
xchg
jns
mov
out
push
push
jmp
mov
inc
ljmp
dec
das
and
rolb
rcr
movsb
dec
loopne
pushf
enter
das
fdiv
je
sbb
mov
loopne
dec
and
fnstsw
dec
pusha
xor
cltd
mov
out
xor
ss
fistpll
int
pop
es
and
mov
stos
out
mov
mov
shrd
jae
lods
scas
lahf
dec
dec
loope
jne
fldl
jg
or
adc
dec
lcall
pop
test
shrl
aam
pop
xchg
dec
clc
shrb
stc
test
stc
add
stc
xchg
xor
add
mov
add
mov
sub
es
inc
xor
imul
pop
add
fwait
pusha
arpl
adcl
or
push
mov
into
lret
repnz
scas
in
and
dec
data16
inc
sbb
push
jbe
xor
push
jb
cltd
xor
add
fcoml
pop
ret
jge
and
iret
das
pop
xchg
cmp
and
movsl
cmc
arpl
mov
push
pop
addr16
jns
push
leave
xchg
push
jnp
addb
flds
int3
adc
fcoml
sarl
mov
mov
adc
ret
mov
jecxz
and
add
leave
mov
fcmovbe
pop
xchg
cs
inc
xlat
cmpsb
push
mov
pop
and
stc
cs
stos
mov
xor
imul
ljmp
xor
jne
and
sub
sub
cmp
les
or
push
lcall
mov
and
cmpsl
inc
mov
mov
cmp
or
fsub
push
or
cmp
daa
or
xlat
jg
pop
rcrl
repnz
out
add
cmp
jmp
xor
loopne
dec
xor
and
loop
out
divps
inc
sarl
mov
dec
cmp
and
adcl
or
movsl
sbb
push
sub
out
mov
into
inc
lret
mov
stc
jle
pop
in
mov
xor
movsb
inc
pushf
out
aaa
stos
pop
mov
inc
sahf
in
sarb
adc
mov
jnp
movsl
adc
xlat
roll
sub
cmp
enter
and
repz
jae,pn
cltd
sar
add
data16
mov
cmp
and
pop
push
adc
jb
mov
xor
and
cmp
in
pop
sti
mov
jnp
movsl
mov
leave
cvtps2pd
out
push
subb
mov
int3
popw
xchg
enter
sbb
mov
dec
jne
adc
pop
in
je
rclb
cmp
cmpsb
hlt
mov
cmpsl
inc
push
in
and
movsl
add
pop
mov
mov
sbb
stos
outsb
icebp
insl
test
cmp
int3
adc
or
mov
adc
mov
pop
cmp
outsb
enter
fcmovbe
cmc
mov
and
subl
inc
icebp
push
dec
xor
jnp
sbb
and
inc
or
pop
in
lds
std
daa
inc
jnp
aad
sub
mov
data16
sub
lds
sbb
add
movsb
ds
jne
inc
stos
mov
repnz
xchg
sub
int3
mov
ds
mov
int
inc
xchg
sbbb
and
cmpsb
mov
lods
popa
xor
movsb
mov
addr16
xchg
fsubrp
sbb
fstpl
es
outsb
das
cld
in
lcall
jmp
test
out
js
insl
roll
jbe
and
inc
xor
jns
and
sbb
ljmp
insl
push
sub
test
out
enter
out
and
ljmp
enter
das
push
pusha
lret
mov
setbe
je
and
aas
loopne
popa
push
mov
and
movsl
bound
cmp
inc
mov
call
pop
or
scas
ljmp
dec
xchg
cmp
xchg
mov
in
sbb
out
icebp
loop
loope
or
pop
jmp
je
imul
shrl
pusha
lods
fnstcw
or
popf
mov
cmp
mov
popf
inc
stos
test
jbe
fs
xchg
mov
xchg
bound
aas
mov
mov
pop
icebp
lea
ljmp
xchg
lret
vmovq
repz
mov
xchg
adc
loop
push
sbb
adc
std
add
or
repnz
fwait
sbb
cmp
adc
xchg
add
pop
fs
int
mov
sub
leave
repnz
lahf
mov
ret
addb
rcrl
rcrb
mov
pop
repz
movsb
sub
rcrb
dec
ds
in
clc
and
sub
xor
mov
xchg
adc
inc
mov
mov
cs
mov
shll
aam
add
call
loop
push
xlat
sarl
cld
repnz
push
mov
movsl
mov
mov
pop
jge
xor
xorb
scas
or
xchg
cmp
jecxz
xchg
fwait
mov
inc
mov
mov
push
je
jnp
test
fdivl
xor
pop
fadds
add
mov
push
pop
cmp
test
addl
lahf
mov
out
mov
jecxz
and
mov
je
xchg
sbb
or
dec
pop
out
js
popf
xor
pop
aaa
scas
jmp
out
adc
inc
negl
rol
outsb
xor
mov
mov
rclb
sbb
mov
mov
xchg
imul
jbe
in
test
inc
stos
lcall
fwait
js
sub
inc
mov
adc
cs
hlt
lahf
mov
xchg
cli
lds
nop
out
andl
adc
rcll
bound
js
pop
call
jge
adc
enter
outsl
pop
jl
aam
loope
aam
icebp
push
jae
in
mov
fdivl
mov
mov
adc
cwtl
insb
popa
adc
sub
add
ljmp
dec
pop
pop
dec
js
jb
in
lcall
repnz
arpl
es
pushf
rcrb
fildl
xor
sbbl
xor
and
inc
dec
xlat
loopne
in
repnz
lea
xchg
pop
jo
adc
jmp
test
lods
mov
pop
js
mov
shlb
fstps
sbb
sub
pop
ja
xchg
iret
mov
cwtl
adcb
loop
lods
mov
mov
lods
adc
or
shl
int
sbb
je
adc
sbb
and
mov
pop
int3
fcomps
test
popf
lret
popa
add
pop
push
pop
call
aaa
mov
addr16
push
aad
jb
je
xor
push
notb
jo
jns
jb
jae
mov
lods
push
lods
mov
sub
addr16
mov
sub
lods
pushf
fimuls
sti
push
and
mov
add
cmpsb
insl
loop
aas
in
lcall
xchg
ds
aad
push
enter
cmp
sub
aas
fnstsw
add
xor
jg
in
icebp
xchg
pushf
cli
jl
incl
sub
enter
and
cwtl
mov
test
mov
sbb
cli
push
push
cmp
cmp
inc
push
inc
sub
pop
dec
jmp
shl
and
push
mull
push
js
outsb
sub
lret
enter
int3
pop
mov
mov
pop
cmc
jge
add
aaa
xor
cmpsl
dec
lock
sub
dec
push
getsec
dec
push
mov
and
jbe
daa
xchg
test
jl
aas
mov
mov
jo
fcmovbe
xor
popl
mov
xlat
lret
or
xlat
gs
jne
fcmovnu
push
inc
filds
dec
aam
imul
lret
mov
adc
stos
adc
cltd
into
mov
incl
adc
addb
xlat
leave
fbld
cmp
cmp
cli
inc
je
fnsave
stc
scas
adc
mov
daa
xchg
pop
mov
pop
jmp
leave
ret
fcomps
test
xchg
stos
dec
arpl
jecxz
jmp
js
jl
dec
pop
and
xchg
insl
insl
cmp
enter
outsb
cmpsb
lods
cltd
sub
push
imul
adc
aas
mov
xchg
pop
sbb
fildl
enter
adc
gs
nop
test
push
push
ljmp
xchg
out
xchg
and
es
cmc
cmp
cmp
movsb
xor
push
xor
adc
lods
cmpsl
mov
pop
popf
lcall
mov
add
jp
jb
xchg
sub
adc
add
outsl
addr16
idivb
jns
pop
mov
mov
push
or
jp
add
sti
lret
xchg
push
cmp
cmp
bound
mov
subl
inc
lcall
fiadds
scas
pop
stos
mov
mov
cli
popf
ret
jns
mov
mov
push
negb
jmp
icebp
mov
lret
ds
sbb
push
sub
movsb
pop
pop
push
inc
popf
loope
lahf
dec
cld
iret
cs
and
in
das
pop
ja
iret
popf
pushf
xchg
dec
mov
add
iret
hlt
pop
mov
int
ror
scas
int3
outsl
je
sub
popf
xchg
cltd
pop
or
xchg
xlat
aam
push
jecxz
loope
sub
in
enter
adc
pop
int
adc
test
inc
dec
lea
in
push
mov
fldenv
pop
movsb
adc
mov
lret
mov
outsb
or
pop
rcrl
mov
nop
out
sub
mov
out
and
out
pop
and
popf
lds
or
push
hlt
int
aam
jg
sbb
outsl
outsb
mov
out
add
je
jge
pop
push
iret
or
arpl
test
js
shrl
test
adc
cmp
cltd
ret
repz
xor
iret
fwait
push
shll
rcrb
daa
jecxz
push
jg
and
dec
rorl
mov
add
fcomip
xor
pop
stos
pop
sti
aaa
arpl
inc
push
ret
sbb
les
not
out
sbb
outsb
push
hlt
xlat
outsb
fsts
lds
mov
cmp
xchg
movsb
jno
andb
mov
outsl
leave
scas
stos
jo,pn
cmp
mov
fdivrp
test
push
into
cli
pop
out
push
jne
iret
out
pop
in
shlb
adc
xlat
das
lods
jb
idiv
mov
inc
xchg
adc
adc
sbb
cld
xchg
push
insl
adc
jmp
xchg
adc
into
xchg
and
push
mul
xor
ret
jae
lret
sbb
inc
push
xor
inc
sub
mov
and
jne
rclb
js
jb
inc
lds
inc
sub
xchg
dec
xor
lds
mov
cltd
scas
mov
enter
cmpsb
add
push
adc
xchg
arpl
add
outsl
sbb
cmpl
or
jg
cmp
adc
test
scas
push
lods
out
xchg
cld
daa
fisubl
or
add
aam
jg
xor
or
xlat
arpl
insl
sbb
mov
add
fadd
and
mov
and
xlat
insb
or
out
jge
dec
mov
or
fwait
mov
jo
cmpsl
rclb
popf
add
ss
sahf
pop
cmp
movsb
sbb
clc
pop
mov
loop
pop
repz
outsb
mov
fbld
clc
arpl
add
pop
sti
push
push
in
pop
cld
lahf
mov
js
jmp
scas
adc
cmp
xchg
push
xchg
js
sbb
cltd
ljmp
pop
lcall
cmc
ss
push
fisubs
push
cwtl
loop
aad
push
xchg
nop
cmp
in
push
movsb
test
add
fstpt
push
mov
call
push
sbb
scas
jle
and
jne
cmp
mov
mov
outsl
xor
push
xchg
hlt
dec
pop
call
insl
pop
push
movsl
mov
popa
mov
divb
mov
xchg
mov
lahf
lock
iret
pop
sahf
popf
mov
mov
repnz
pushf
arpl
jl
or
pop
ficompl
sahf
xchg
and
stos
fimull
es
jle
jecxz
add
jo
lds
notl
pop
xorl
imul
pop
les
call
das
add
xchg
orb
fstpl
mov
iret
cmp
shll
pop
mov
push
mov
test
dec
xchg
cmc
fildll
cmp
sbb
call
pop
fadd
ljmp
std
xchg
push
shrb
adc
inc
loopne
pop
mov
dec
ds
cmp
fldenv
pop
xchg
mov
mov
sbb
sbb
sahf
loope
mov
lret
ja
jbe
out
iret
mov
push
push
xorb
mov
mov
ds
sub
lds
repz
fisubl
xchg
fxch
add
mov
lods
cmp
cwtl
shll
vpmaxub
or
inc
ss
or
add
es
ljmp
mov
inc
cli
in
fstl
popa
dec
push
arpl
mov
les
adcb
sbb
rcll
dec
mov
push
jge
adc
mov
gs
mov
loop
mov
icebp
mov
jge
mov
lds
das
adc
mov
and
mov
pop
mov
xchg
test
test
nop
repz
adc
or
outsl
sub
dec
call
and
xchg
outsl
fdiv
bound
int3
pop
cmp
sbb
pop
and
pusha
popf
xor
scas
cli
cmc
push
jbe
adc
push
push
jno
adcb
pop
push
inc
pop
jg
mov
add
cmp
jecxz
jb
rolb
sbb
mov
lea
icebp
fstps
inc
jge
pushf
mov
jp
dec
insl
sbbl
aad
xlat
jo
cli
addr16
out
pop
lret
je
jp
sbbb
jg
sbb
or
popf
or
insl
push
les
cwtl
xor
adc
jo
in
fdivl
pop
in
aaa
test
divps
out
jle
dec
mov
add
orb
mov
lea
subl
aas
sahf
xor
fmul
mov
fwait
imul
cmp
fistps
mov
pop
addr16
dec
rorb
mov
fucom
mov
push
mov
adc
movsl
out
inc
stc
cs
pop
outsb
or
jp
arpl
jbe
ret
xorb
fstpt
push
xchg
inc
lcall
mov
inc
out
popa
cmp
fs
out
in
dec
mov
mov
sub
xor
fcompl
icebp
addr16
nop
mov
push
cwtl
fwait
cmp
daa
inc
pop
fs
fbstp
cmp
mov
sbb
pusha
push
ret
in
mov
jle
xchg
andb
and
dec
add
adc
push
sbb
cmp
decl
mov
mov
push
jno
push
adc
inc
daa
inc
mov
stos
in
jmp
xchg
pop
xchg
stos
pop
pop
insl
loop
popf
fcompl
dec
add
xchg
mov
aad
or
jmp
cmp
lods
jbe
pop
adc
imul
add
stos
xor
sub
adc
or
mov
xor
aas
imul
push
mov
test
sahf
dec
inc
jnp
inc
mov
mov
push
mov
sub
test
rolb
add
ffree
cmp
outsb
in
xchg
ss
pushf
test
xor
shrl
jmp
bound
adc
orl
add
inc
sub
insb
mov
es
jo
sbb
lcall
aas
sub
adc
mov
push
xor
push
repz
xchg
cld
mov
gs
popf
mov
pop
shlb
sahf
mov
and
inc
arpl
lea
add
xchg
insb
mov
pop
sbb
xchg
hlt
ficoms
gs
in
xchg
xor
test
jge
sub
cmp
pop
and
or
aam
das
sub
mov
xchg
test
mov
out
icebp
jg
lcall
shrl
std
sub
in
adc
push
xchg
pop
or
gs
rolb
mov
popf
xchg
cmpsb
fisttps
movsl
add
lods
mov
das
jns
mov
sahf
dec
lods
push
mov
stos
cmp
push
gs
xlat
pop
fdivr
add
pop
lret
mov
outsl
movsl
int3
in
jae
not
sub
pop
jecxz
pop
cmp
das
mov
mov
jp
lret
cmc
inc
ja
or
jmp
lahf
sbbb
sub
jno
mov
popf
jae
mov
jae
js
lahf
dec
jle
and
loop
in
mov
orl
xchg
scas
rcrl
enter
add
je
cmp
js
xor
and
mov
lock
xchg
mov
fbld
fdivs
outsl
lods
ds
add
out
dec
xor
mov
mov
test
mov
add
push
cmpsb
jbe
jl
out
adc
lret
rcl
iret
mov
cs
nop
in
push
sbb
test
out
push
xor
inc
in
adc
or
les
jno
int
scas
push
ss
arpl
lahf
jp
xchg
sub
arpl
mov
mov
xchg
icebp
inc
inc
out
sti
inc
inc
and
aam
sbb
and
mov
subl
mov
and
cmp
xor
pop
fiaddl
cmp
mov
outsl
outsb
push
rcrb
mov
pop
out
sub
les
or
xchg
mov
or
pop
and
push
or
fiaddl
imul
inc
in
data16
inc
push
cli
jnp
sbb
in
jmp
in
add
jbe
mov
fadd
jg
mov
and
xchg
mov
add
popf
mov
push
inc
pop
les
subl
test
ficoms
mov
das
adc
pop
les
add
jne
mov
shlb
js
jmp
mov
movsl
pop
mov
andb
or
testb
adc
and
lcall
xor
adc
rorb
imull
dec
call
inc
les
btc
or
jmp
ja
xchg
xchg
add
cs
stos
adc
or
lock
test
mov
inc
lret
in
out
and
movsl
jno
inc
lea
sub
addr16
pop
push
add
pop
sarb
jo
fadd
mov
cmp
in
loopne
nop
adc
sub
sahf
mov
call
daa
in
mov
sahf
mov
lret
lea
sub
outsl
pop
sub
sbb
cmp
mov
and
or
fsts
and
xor
lret
enter
shll
adc
in
mov
movsb
mov
test
aad
sahf
insb
push
fidivrl
imul
test
cs
repz
jbe
sub
mov
push
jmp
aam
add
leave
dec
ja
jbe
out
xchg
arpl
gs
insb
ret
xchg
cltd
fsubrs
lods
daa
push
sbb
mov
sub
into
test
jns
pushf
jnp
clc
jmp
roll
rorb
ret
in
mov
fisttps
inc
gs
sub
icebp
jno
bound
fcoml
imul
adc
into
push
xor
ret
adc
mov
push
mov
sub
jl
test
jmp
xchg
mov
mov
cli
ret
pop
pop
push
inc
push
push
pop
lods
daa
cli
inc
pop
pop
imul
mov
mov
out
ror
stc
les
mov
loope
or
lret
cmp
inc
mov
mov
movb
outsb
jbe
sbb
sub
push
or
fs
out
or
push
or
dec
fwait
xor
mov
jmp
jbe
push
adc
mov
pop
arpl
je
lcall
add
xchg
rclb
pop
sbb
lods
inc
pop
and
sti
pushf
xchg
in
adcl
addr16
dec
dec
mov
ja
ret
cmpsb
mov
push
xchg
mov
cmpsb
shr
cmc
pusha
ljmp
frstor
leave
and
nop
jbe
pop
jmp
repnz
xchg
sub
and
push
pop
aam
sahf
sbb
push
sub
mov
mov
rol
push
inc
pushf
cmpsl
pop
add
ror
int3
out
neg
xchg
test
sti
push
scas
jmp
dec
int3
insb
sbb
dec
push
jno
and
dec
add
push
push
mov
and
pop
add
daa
sti
push
or
stos
daa
in
adc
sub
cmp
aad
mov
es
or
or
sti
fisttpl
pop
imul
rcrb
insl
mov
sbb
cmc
or
sbb
rolb
inc
push
xchg
inc
cmp
and
adc
outsb
outsl
xor
loop
int3
imul
mov
cmc
cmpsb
dec
mov
xor
dec
or
xor
stc
pop
mov
or
xchg
pop
shrb
sbb
rclb
fsubr
and
mov
add
mov
mov
rcr
cmp
lds
mov
lock
and
dec
shll
jae
jge
mov
movsl
mov
mov
xchg
shrl
dec
fcoml
or
stos
loope
push
mov
inc
jnp
adc
mulb
daa
inc
jno
fdivs
out
out
xchg
add
xchg
cmpsl
mov
test
cmp
fiadds
lods
insl
pop
pop
mov
sub
movsb
hlt
push
jbe
xchg
mov
jmp
out
xchg
fisttpl
jne
movsl
mov
in
in
mov
imul
fucomip
ss
insb
roll
enter
cmp
mov
pop
scas
sbb
xchg
mov
pop
dec
pop
mov
repz
push
xchg
es
stos
dec
das
inc
ja
pop
xor
jo
call
push
cmp
fildl
inc
jge
aas
pop
adc
cmc
subl
add
or
mov
stc
pop
pop
aaa
xchg
jne
in
jge
pop
sbb
loope
and
mov
jne
mov
mov
xor
push
or
jno
inc
decb
mov
shlb
jl
adc
mov
in
and
cmp
xchg
sbb
lret
test
mov
fwait
lds
js
imul
int3
pop
jmp
imul
mov
in
jb
jae
adc
or
push
popa
lcall
ret
and
or
xchg
and
sub
push
test
sbb
icebp
cmove
popa
fistps
sti
mulb
xor
jb
push
push
repnz
dec
xchg
mov
insb
add
xchg
bound
sub
sti
push
push
testb
lahf
xor
orb
jo
xor
inc
imul
jle
mov
push
cmpsb
loopne
in
xlat
push
jne
adc
dec
enter
lods
outsb
and
sbbl
push
jnp
dec
jp
mov
stc
dec
fsubl
sub
insl
mov
icebp
pop
xchg
add
and
lods
cmpsl
mov
popa
outsb
mov
mov
sbb
xchg
aas
shrl
insl
sbb
dec
lcall
xor
adc
prefetcht0
jae
mov
in
lods
jmp
aam
mov
xchg
xor
addr16
lcall
fs
jle
or
jecxz
xchg
push
and
sti
and
testl
sbb
sub
fisttpl
mov
or
leave
pop
cmc
adc
nop
mov
push
dec
sub
in
add
xchg
push
ret
stos
mov
mov
mov
pop
bndldx
lahf
sbb
loope
sbbb
xchg
rorl
cmp
xchg
out
pushf
or
sub
and
mov
cmp
cmp
xchg
leave
and
pop
shlb
cmp
sbb
mul
std
sub
int
repnz
mov
rcl
sbb
or
inc
gs
pop
jg
push
push
add
jmp
fcos
cmp
outsl
pop
in
ja
sbb
mov
inc
setne
jp
orl
pop
jmp
sub
movsl
dec
enter
xor
jbe
pop
jbe
fidivrl
movsb
insb
or
icebp
mov
mov
dec
adc
test
add
xchg
rorl
outsl
rcrl
icebp
dec
dec
push
adc
inc
aas
add
mov
and
les
mov
rolb
ret
repz
icebp
mov
mov
sbb
data16
jbe
cmp
std
mov
mov
fidivl
sub
lcall
sbb
lea
sub
into
pushf
ss
imul
les
and
shlb
xchg
aam
orl
cmp
cmp
lret
adc
xor
cmp
pop
in
mov
mov
lock
sbbb
add
or
xor
addr16
ret
mov
jno
dec
jns
call
lcall
rol
popa
xlat
push
jg
rolb
sub
fiadds
xchg
add
insl
rcll
sub
into
mov
inc
lods
jl
inc
imul
mov
inc
das
cmp
sub
xor
xchg
mov
cmp
sbb
sub
jmp
mov
cmp
shrb
sbb
test
push
ret
pop
xchg
xchg
sbb
call
lods
lods
jno
xchg
shl
sbb
imul
pop
js
in
aas
inc
mov
or
std
mov
xchg
lea
adc
pop
mov
or
push
or
xor
repz
test
mov
rcll
lods
daa
dec
shr
aad
sub
or
fcmovb
jge
push
xchg
inc
daa
push
lahf
inc
xchg
jo
pop
popf
nop
or
mov
and
sub
add
popf
xchg
add
push
pop
pop
mov
sub
in
xchg
popa
mov
rcl
cli
lahf
enter
outsl
popf
dec
pop
push
cmp
add
iret
cmpsb
mov
push
lds
inc
wbinvd
daa
cld
mov
in
stc
adc
sbb
push
in
std
mov
es
andl
or
sbb
add
adc
mov
push
inc
mov
inc
les
lahf
mov
push
ficompl
daa
popl
in
xchg
sub
inc
cmp
stc
outsb
add
dec
mov
push
test
stos
push
add
inc
pop
xor
loope
cmpb
andl
fs
orb
inc
movsl
movsb
sti
dec
dec
and
jb
rcr
enter
add
lds
push
inc
enter
dec
popf
push
dec
add
mov
fstps
add
jg
int
mov
or
inc
xchg
cmc
or
push
mov
pop
add
gs
and
mov
pop
and
in
xchg
cli
mov
dec
outsl
ret
and
inc
aas
push
mov
scas
xor
mov
dec
fistps
in
cs
ja
je
jmp
ss
push
les
push
mov
test
push
in
push
sub
xor
xor
push
mov
pop
std
ret
sbb
xchg
rcrl
test
sub
xor
mov
mov
das
xor
iret
sahf
push
fxtract
xor
fstl
jns
pop
add
push
sbb
loopne
scas
popa
or
fwait
mov
dec
bound
cli
les
add
test
add
or
lods
mov
cmp
and
ljmp
push
loope
ja
mov
mov
xor
push
pop
push
das
jae
test
pop
mov
push
stos
jb
and
sub
adc
cmpsb
cmp
dec
mov
push
movsb
xchg
inc
cmp
out
sbb
pop
adcl
jmp
jecxz
and
fadds
jle
fldcw
xchg
jg
dec
out
in
push
pushf
cmp
mov
pop
fbld
sub
pop
mov
or
fsub
push
ficomps
clc
loope
andb
out
std
cmp
mov
dec
scas
adc
rcrb
or
jp
int
push
mov
loop
dec
cmp
je
shlb
fadds
mov
and
jle
in
cmpsl
clc
pop
xlat
data16
dec
xchg
shlb
lds
ficoml
push
lret
and
sbb
adc
mov
shl
ljmp
or
es
adcb
scas
push
stos
push
xor
rol
and
out
mov
in
repnz
pop
inc
fistpll
insb
sbbl
ds
and
movsb
dec
push
jge
pusha
test
mov
and
push
clc
cmp
jnp
sbb
repnz
ret
sub
pop
cmp
sbb
sbb
movsb
inc
mov
call
es
sub
jl
out
pop
pusha
arpl
and
add
aaa
jno
ljmp
jno
and
xchg
xchg
jne
inc
out
cld
adc
mov
pop
nop
jmp
loope
sub
scas
xor
mov
lods
aam
dec
cmpsb
mov
rol
jge
inc
sbb
les
dec
sub
mov
jbe
fcoml
jbe
sub
scas
sbb
orl
in
lcall
ljmp
fs
cmp
loop
mov
mov
sub
mov
dec
jg
sarb
inc
fucomi
xchg
jno
inc
insl
es
lahf
in
cmpsb
ret
add
jno
mov
out
aad
fdivl
clc
leave
cmp
mov
ljmp
out
sbb
test
add
mov
sbb
jbe
shl
aad
mov
in
sub
ss
enter
lcall
lock
insb
ss
mov
int3
and
movsb
cltd
dec
repz
repnz
add
xchg
fistpll
xchg
add
inc
xchg
or
sbb
mov
mov
jb
mov
push
jno
test
mov
aad
push
push
and
mov
adc
pusha
mov
or
sti
push
mov
lock
push
mov
inc
sbbl
inc
jbe
pop
js
lea
add
jp
stos
push
sbb
fndisi(8087
mov
mov
into
push
dec
jae
mov
sbb
cmpl
hlt
pop
stc
rclb
arpl
mov
ljmp
cmpl
out
bound
insb
imul
xchg
insb
movsb
mov
jae
or
std
sub
mov
sub
fstps
sub
nop
test
mov
adc
xor
sti
jno
lahf
std
adc
iret
xor
out
mov
adc
inc
pop
ret
leave
inc
push
inc
bound
cmpsb
and
in
xlat
dec
cmp
stc
add
addr16
jge
sbb
push
xchg
sbb
les
or
jbe
inc
and
add
mov
lret
out
aas
sub
inc
push
ror
shll
inc
int
mov
jmp
jle
ja
or
pusha
cmp
les
test
imul
add
int3
inc
pop
jg
das
dec
sbb
popf
pushf
pop
push
ja
xor
leave
mov
cmpsl
js
fwait
pop
aam
pop
cmpsb
or
mov
sti
insl
mov
push
mov
or
call
lret
sbb
adcl
pop
adc
mov
fisttpll
xchg
cli
sbb
mov
insb
lea
dec
xor
inc
lahf
lods
rcrb
out
jecxz
pop
push
stos
outsb
aad
xchg
insb
adc
push
mov
mov
or
mov
or
loopne
lds
ret
out
stc
imul
mov
cmp
mov
aas
mov
fiaddl
mov
mov
fstpt
pushf
jbe
add
out
lods
dec
jge
pushf
and
mov
push
dec
add
or
sbb
jns
xor
inc
fwait
jo
or
popa
ficoms
data16
dec
mov
lods
fimull
cmp
xchg
jg
push
dec
outsl
mov
notl
xor
lahf
xor
jle
ret
mov
add
and
lock
mov
add
jmp
push
jno
loop
int3
lret
cmp
ss
mov
leave
mov
hlt
insb
dec
lods
add
sbb
mov
dec
movsb
aas
and
loope
push
hlt
cwtl
pusha
aas
push
push
lret
fidivrs
rcrl
and
push
les
enter
jmp
xchg
xlat
add
imul
xor
stc
adc
cld
fs
sub
xor
pop
and
push
add
jae
imul
jb
inc
aaa
or
ret
pop
jo
aaa
lret
jne
mov
fwait
movb
stos
in
rcrl
xor
or
rclb
and
cs
cmc
dec
ja
mov
stos
mov
imul
lods
rcrb
popa
sar
aas
cmp
mov
mov
test
fs
mov
dec
mov
add
outsb
xchg
loop
sti
addr16
adc
sbb
jmp
ss
sub
pop
add
add
jmp
stos
fwait
jle
jbe
rcll
mov
test
loopne
in
es
push
inc
mov
push
or
push
mov
mov
push
pusha
inc
or
and
lods
shr
in
imul
sub
jno
push
and
pop
filds
inc
imul
xorl
out
or
pop
in
or
mov
hlt
in
mov
xchg
repz
imul
mov
outsb
mov
dec
inc
in
inc
out
daa
test
pop
fstpl
sbb
xchg
cmp
test
js
gs
lock
mov
ffree
clc
and
fwait
popa
pop
and
in
in
faddl
jge
fidivl
jmp
push
push
cwtl
rcl
test
shr
cmp
mov
pop
jnp
mov
shrl
xor
xchg
cmp
pop
movsl
push
jae
test
into
ljmp
adc
fldt
aas
rcrb
xor
js
add
add
push
xchg
mov
push
mov
and
ret
fbld
iret
aad
xchg
mov
or
cmp
test
mov
push
ret
orl
fdivl
sub
or
dec
stos
mov
inc
mov
mov
ds
daa
xor
nop
push
cmp
fs
push
add
pop
pop
popa
shll
and
dec
mov
sbb
cmpsl
stos
xor
add
xchg
imul
pop
inc
and
rorb
daa
jne
movsl
mov
sub
stos
ljmp
push
scas
aam
jo
mov
inc
mov
jg
push
fs
repz
sbb
test
xchg
data16
sub
cli
outsl
repz
stc
popa
push
in
xchg
dec
sbb
pop
inc
or
push
pusha
mov
push
mov
and
inc
pop
loop
xchg
roll
scas
and
adc
popf
mov
mov
test
movsl
loop
xchg
loope
jb
add
test
add
push
mov
xchg
mov
pop
cld
jbe
scas
ja
inc
cmp
in
outsl
push
pusha
daa
outsb
adc
and
out
mov
rol
or
call
mov
mov
fsubl
xor
sbb
nop
push
adc
repz
push
fmuls
out
xchg
cmp
sbb
cmp
mov
inc
pop
sub
pushf
stc
sbbl
decb
push
stc
xlat
mov
ss
idivl
je
jo
cwtl
popa
sbb
rolb
adc
mov
cmpsl
xchg
xchg
pop
icebp
cmp
mov
cmpsb
pop
fidivrl
scas
push
or
mov
push
lahf
pop
int3
stc
pop
add
test
or
arpl
pop
mov
dec
roll
subb
xor
and
inc
add
jo
rol
ret
mov
add
inc
dec
add
mov
rcrl
sub
aad
addl
paddsb
pop
icebp
push
into
addr16
fiaddl
lea
out
fsubrs
mulb
xor
dec
dec
scas
jne
mov
jle
lcall
jo
push
xchg
mov
mov
push
iret
lock
f2xm1
and
or
dec
push
out
aad
icebp
dec
adc
xchg
dec
jb
adc
jnp
cmp
ja
add
mov
pop
push
pop
push
inc
jge
cmc
sti
dec
mov
mov
leave
jp
insl
stos
adc
jb
push
sahf
pusha
push
mov
xor
adcl
leave
dec
add
cmpsl
mov
cmp
data16
js
nop
lods
lcall
cmp
xorps
xor
sub
repz
push
push
iret
in
adc
jmp
sub
dec
lret
pop
mov
divb
imul
les
push
jb
fwait
mov
stc
add
mov
jg
minps
mov
lahf
mov
mov
mov
dec
push
test
xor
test
or
sub
sbb
pop
pop
sub
rorb
jmp
xchg
or
hlt
test
movsl
xchg
flds
lahf
mov
sbb
lret
mov
sub
dec
mov
jle
or
jmp
aaa
push
mov
scas
jmp
and
or
jo
outsb
cmp
sbb
call
subl
xchg
les
shr
inc
loopne
xchg
push
clc
sbb
pusha
es
std
and
data16
add
and
out
cwtl
sar
mov
das
cltd
push
add
sarl
lods
rcrl
cmp
inc
enter
add
sub
aaa
fiadds
xor
imul
jb
nop
cmpsb
iret
pop
fdivr
cltd
push
ljmp
daa
xor
fdivr
shl
sbb
fwait
mov
mov
nop
xchg
ret
ds
or
ret
add
ljmp
mov
mov
leave
mov
push
mov
leave
aad
ficoml
arpl
mov
mov
fnsave
and
jg
ss
sahf
xor
sub
inc
scas
imul
movsb
mov
dec
scas
inc
movsl
pop
sbb
mov
push
pop
adc
or
jnp
int3
and
lds
sbb
hlt
sar
adc
sbb
add
adc
add
bound
push
stos
xchg
in
aas
lods
stc
outsb
shl
in
adc
ja
loopne
fdivp
add
jae
mov
fisubl
dec
hlt
or
jae
shlb
orl
into
pusha
mov
xchg
test
mov
pop
call
or
pop
push
inc
cmc
mov
jecxz
mov
shlb
out
cmc
xlat
mov
inc
cmp
jmp
je
add
xor
mov
test
pushf
loopne
cli
mov
test
jecxz
dec
iret
pushf
iret
out
mov
push
scas
xor
mov
pop
xchg
aas
testb
fwait
xor
bound
xor
xor
cmpsb
add
and
lods
push
frstor
call
pop
jb
lods
scas
lods
add
jp
jl
cmc
push
pop
xlat
dec
stc
ficoml
lret
lcall
int3
or
xchg
push
ljmp
pop
pop
sbb
push
insl
lahf
or
int3
insb
push
inc
fwait
sar
shll
stc
in
lods
pop
addr16
push
push
jbe
adc
lcall
bound
mov
jno
loope
mov
insb
fs
inc
insb
test
cmp
add
jp
out
imul
mov
aaa
sub
jbe
rolb
pusha
cmp
jno
fistpl
push
mov
aad
cli
add
mov
aas
daa
int3
pop
icebp
push
pusha
scas
bound
call
xor
pop
pop
mov
popa
dec
mov
pop
sub
cmpsl
adc
lret
test
or
repz
arpl
and
lret
ljmp
cmp
dec
roll
pop
clc
les
jmp
push
subl
cld
sub
jbe
mov
nop
push
inc
mov
incl
out
and
or
les
mov
dec
leave
repnz
jmp
mov
mov
add
sbb
lret
jae
fcomps
and
cs
fldlg2
int
pop
int3
mov
test
enter
xor
mov
lock
and
add
fnstenv
nop
jecxz
bts
pop
out
movsl
mov
data16
sub
xlat
pop
fwait
mov
and
inc
addr16
xor
mov
mov
adc
pop
push
jge
adcl
notb
xor
push
sahf
inc
test
sti
pop
pop
mov
fnstcw
sti
imul
lock
inc
mov
sub
cmp
mov
push
jae
sbb
seta
cmp
xchg
push
fcompl
xor
pop
pop
pop
arpl
fwait
lahf
testb
cwtl
sahf
cmp
ds
mov
add
ficomps
push
fdivrl
lea
lcall
adc
push
push
divl
dec
leave
ficompl
push
inc
div
push
rolb
ss
jle
push
insl
xchg
cmp
leave
sub
push
mov
frstor
stc
hlt
test
jae
cmpsl
aam
cmp
jp
sub
repz
test
dec
push
and
iret
pop
loop
test
imul
mov
mov
decb
mov
mov
out
std
lea
inc
les
sbb
and
jle
or
arpl
and
add
out
mov
leave
pop
imul
cld
mov
stos
inc
aaa
orb
pusha
adc
shr
xor
adc
sub
test
push
sub
nop
sub
cmp
bound
mov
clc
add
jnp
ljmp
mov
inc
add
pop
ds
movsl
lods
dec
test
dec
sti
fs
xchg
add
iret
arpl
pop
mov
pop
jb
ljmp
rol
das
divb
or
jae
jnp
lea
ficomps
adc
inc
mov
scas
cmp
jo
aaa
xor
lcall
xor
sahf
adc
sbb
loop
and
inc
pushf
add
mov
stos
push
jge
popf
iret
shl
pushf
add
pop
or
xor
fstp
adc
xchg
mov
cmp
sbb
ljmp
jno
pop
jae
jl
xchg
stos
cmp
inc
jno
mov
xchg
aad
xchg
inc
jmp
popf
push
xchg
out
loope
jl
pop
aad
and
adc
xchg
daa
scas
pop
in
enter
outsl
adc
test
ja
push
movsl
and
out
mov
pop
fnstenv
in
orb
jae
mov
mov
mov
stos
mov
and
or
jecxz,pt
jp
in
clc
mov
pop
mov
lods
aad
mov
jg
pop
or
sbb
ja
adc
mov
pusha
scas
jbe
adc
pop
mov
jns
test
and
sub
dec
fcomp
or
jp
mov
add
hlt
mov
lods
cli
clc
xor
cld
shlb
pop
mov
add
cmp
inc
daa
xchg
push
sti
insb
adcb
push
sbb
sub
sub
pop
cld
loopne
loope
lret
xor
pop
add
jl
std
jnp
mov
je
idivl
aad
rorb
in
scas
jg
dec
mov
mov
enter
cs
add
cmp
pand
lret
dec
fcoms
dec
loop
add
xor
cmp
das
ds
insb
and
repz
pop
mov
add
pop
inc
xlat
sbb
out
adc
and
jg
inc
shll
jecxz
pop
icebp
lds
add
dec
cmp
cmc
out
sbb
lret
aas
pop
adc
nop
mov
mov
cmp
aas
jns
xchg
int
addr16
pusha
flds
int3
push
mov
loop
movsl
arpl
dec
in
adc
rcll
xor
lcall
pop
mov
ss
in
mov
inc
jge
movsb
repz
test
add
adc
sbb
adc
fsubp
pushf
loop
call
jmp
adc
addl
adc
jle
jb
xlat
or
and
or
xor
cs
adc
jle
daa
daa
mov
mov
testb
inc
cmpsl
stos
xchg
lret
inc
dec
outsb
xchg
xor
and
testl
sub
insb
lahf
jo
fwait
aaa
loope
je
cli
jge
mov
push
les
xorb
stos
xor
jae
and
popf
push
lcall
test
and
lds
mov
jo
loop
push
insb
lods
ret
mov
jnp
inc
jge
imul
into
and
arpl
inc
pop
and
in
dec
inc
je
rorl
or
notl
and
xchg
sbb
push
shr
mov
test
pop
addl
pop
and
enter
stos
pop
imul
out
orb
imul
fimull
shr
jne
and
rorb
mov
std
ja
mov
lret
aaa
test
sbb
jbe
lods
add
xchg
ss
out
xchg
jns
inc
push
mov
mov
sub
icebp
mov
sbb
mov
or
out
cmpsb
dec
xor
xor
mov
sbb
sti
jb
push
pop
rol
push
xchg
int
repz
rcll
inc
out
inc
imul
xor
jne
movsl
add
dec
jg
and
xchg
dec
pop
in
lods
aas
pop
push
jo
sub
pop
jns
lea
pop
dec
jg
jmp
pop
test
mov
decb
fiadds
pop
xlat
ret
adc
mov
hlt
aas
or
push
xor
xor
mov
out
divb
or
dec
mov
adcb
mov
mov
cld
mov
pop
jnp
mov
mov
fs
repz
fisttpl
lret
scas
rdtsc
test
les
mov
mov
jbe
mov
test
adc
sub
jae
ljmp
cli
mov
mov
mov
add
out
mov
and
cmc
nop
lods
mov
jg
pop
adc
jns
call
in
test
lock
dec
xor
or
dec
mov
movb
mov
cmp
inc
repnz
roll
mov
mov
cmp
add
scas
jmp
or
das
dec
cmpsb
and
lods
test
repnz
into
mov
sub
test
cmp
or
pop
or
jecxz
daa
gs
sub
repnz
je
fnstcw
pop
fnstcw
pop
lods
fscale
int3
cli
push
sub
adc
enter
lahf
sbb
push
push
xchg
cmp
mov
aas
dec
sbb
sub
add
addr16
test
leave
pop
ret
scas
and
hlt
cli
fmuls
adc
sub
and
leave
rep
data16
lock
mov
cmpsb
stos
cld
cltd
cmp
mov
xchg
insl
cmp
xor
push
or
push
and
push
dec
pop
push
jl
cmp
mov
and
cmp
scas
add
sub
and
dec
rorl
xchg
push
mov
negl
jnp
push
mov
and
xchg
or
inc
inc
sbb
mov
fmuls
es
push
shlb
lahf
or
repz
lods
lcall
fistl
fldt
into
mov
add
cmp
int3
popa
and
jp
addr16
jge
sub
sbb
or
ljmp
push
movsb
sbb
mov
out
push
shlb
lock
mov
int3
and
push
mov
out
int
add
cmp
ret
dec
cmp
xchg
daa
and
inc
dec
aas
je
mov
push
repz
push
cltd
mov
mov
stc
mov
lds
ja
dec
xchg
fimuls
out
pop
sub
mov
mov
pop
mov
mov
inc
in
inc
inc
sub
mov
inc
fisubrl
fcmovbe
jno
and
mov
in
dec
cmpsb
mov
inc
mov
inc
jnp
aam
nop
cmp
jns
ret
dec
add
icebp
or
push
mov
out
sbb
sbb
lods
sbb
fst
and
mov
cmp
jmp
push
ljmp
adc
lds
in
cmpsl
gs
popa
shll
lret
mov
fisubl
push
dec
mov
xchg
adcl
lods
jge
pusha
js
sub
xor
ror
mov
xlat
jo
or
ret
jmp
pop
in
cmp
mov
rcr
jmp
lahf
loope
loope
daa
sahf
cmc
add
pop
sub
xchg
inc
sub
in
jns
imul
hlt
outsb
mov
je
adc
loopne
adc
inc
xor
ret
cmc
outsl
lret
mov
xchg
je
pop
in
mov
mov
add
pusha
shrl
idivb
movsl
sbb
rcr
fadd
mov
jo
stos
inc
mov
jecxz
mov
mov
das
negl
pop
popa
dec
or
add
ror
fildll
loop
mov
ja
xor
mov
out
mov
sub
out
sbb
rcll
imul
sbb
cmp
and
pop
and
shl
sbb
mov
sub
jne
sbb
mov
add
test
rcr
into
les
lahf
fs
ljmp
popa
aaa
and
push
cltd
add
sub
adc
jo
shr
fnstsw
mov
int
jns
pop
in
dec
fisubrs
arpl
pop
mov
mov
das
xor
icebp
mov
xchg
bound
pop
popa
inc
aam
data16
mov
jl
and
lret
add
stos
enter
and
leave
stos
fidivl
shl
pushf
sbb
imul
popf
lret
rol
cmp
xor
xchg
stos
cs
fcoms
adc
fsubs
pusha
ret
aas
popfw
adc
xchg
push
jecxz
clc
test
stc
loop
lea
jg
adc
lds
int3
inc
ljmp
in
dec
cmp
pop
pushf
inc
mov
push
adc
in
adc
subl
addb
rcl
repnz
adc
sarl
xchg
mov
pop
sub
cmp
je
or
hlt
lret
aaa
xchg
fldt
lods
dec
scas
mov
mov
push
xor
or
or
das
mov
popa
std
cmpl
pop
scas
hlt
push
mov
rcrb
cld
ss
inc
jge
push
push
inc
ss
imul
outsl
adc
xchg
arpl
fcmovu
xchg
lahf
jg
sub
roll
out
sbb
sti
daa
mov
jns
test
push
cltd
nop
imul
jo
pop
jge
push
mov
and
es
stos
inc
fistl
pop
dec
and
mov
dec
pop
mov
mov
cmp
jl
mov
lds
sub
cltd
pop
rol
enter
xor
movsb
lret
lret
sbb
add
jbe
lods
inc
inc
sub
xor
movsl
adc
test
iret
outsb
aas
or
and
xor
pop
cltd
and
mov
cld
inc
ret
bound
sahf
movb
mov
stos
testl
das
jnp
test
rorl
fcmovu
mov
jns
fisubs
push
in
sbb
cmp
xchg
clc
std
test
sub
pushf
jnp
mov
mov
stos
cmpb
into
jecxz
and
dec
pop
push
cmpsl
push
leave
or
lods
xchg
pop
add
mov
negb
lods
xchg
push
mov
out
jmp
push
add
cmp
das
dec
pop
xchg
or
cmc
xchg
mov
es
mov
add
pusha
ja
mov
cs
movsl
add
xor
push
sub
and
dec
pushl
inc
push
sub
into
cmpsl
hlt
jecxz
int3
jg
daa
jae
loop
xlat
leave
xchg
data16
lock
arpl
shll
cmp
in
dec
sub
jne
scas
mov
test
add
fisubs
test
pop
bound
xchg
dec
or
pop
jae
pusha
loope
mov
and
sbb
push
loopne
and
cli
push
inc
test
sahf
xchg
adc
movsb
jns
xchg
fdivp
inc
cmp
icebp
cmp
sub
or
inc
aas
xchg
daa
fdivl
out
fnsave
loopne
xchg
xchg
loopne
cmpl
mov
push
cs
insl
mov
mov
movsl
adc
add
fsub
repnz
scas
push
push
cmp
je
jno
sarb
push
pop
mov
ret
pop
inc
cmp
imulb
mov
and
gs
xor
xor
fistps
outsl
add
rorb
je
mov
hlt
push
inc
mulb
sub
inc
jo
das
inc
inc
mov
or
or
fs
cmc
or
mov
sub
jmp
jns
mov
sarl
and
jae
nop
bnd
push
and
aad
lret
movsl
mov
xchg
xchg
xor
mov
ds
pop
movsl
push
add
sbb
and
sbb
push
adc
jmp
push
add
lods
arpl
imul
mov
mov
jl
into
or
lods
mov
aam
jmp
es
lea
add
lods
aad
movsb
out
sbb
call
test
scas
mov
in
sub
incl
pop
cltd
xorb
sbb
push
dec
movsl
push
push
jl
mov
sub
stos
inc
sbb
or
push
subb
push
stc
sti
cmpsb
repz
into
xor
leave
mov
call
pop
out
test
int
test
mov
push
ret
das
imul
cld
aaa
bound
xchg
adc
shrl
push
mov
and
xchg
lret
pop
add
dec
dec
adcb
aam
aam
stc
xor
shll
xor
or
lahf
dec
push
inc
in
push
fyl2x
inc
cmp
dec
cmovp
jmp
test
add
outsb
add
ljmp
xor
fistl
xchg
jge
xchg
aad
mov
stc
loopne
lcall
cmp
jnp
test
dec
test
aaa
jp
cmp
sub
push
cwtl
push
sar
pop
outsl
subb
outsb
inc
jmp
js
mov
xor
push
out
xchg
mov
jecxz
in
in
ret
mulb
pop
mov
stos
ja
pop
xor
aaa
std
xor
jnp
and
mov
sub
xchg
mov
push
nop
bound
insl
pop
sbb
call
in
ds
mov
nop
insl
sbb
and
scas
push
dec
scas
stos
pop
or
loopne
sub
lret
adc
adc
and
mov
mov
and
push
pop
jle
fsubrl
mov
push
test
pop
jmp
dec
lcall
dec
push
outsl
lcall
out
outsl
fisubrl
rcll
rolb
push
je
test
push
jae
sahf
testl
push
mov
push
outsl
loope
jb
xor
jp
jg
cmp
xchg
cmp
add
out
pop
cmc
xor
mov
mov
xor
mov
and
imul
mov
shlb
into
mov
ficoms
jp
sarl
in
fdivl
cwtl
push
leave
adc
cmp
push
mov
jnp
sub
push
out
inc
cmp
inc
fcmovu
push
and
les
pop
ja
int
loope
bound
pop
mov
push
pop
test
dec
xor
jmp
addr16
mov
lock
mov
push
cli
cmpsl
das
jge
pop
xchg
loopne
sub
scas
stos
je
stos
dec
sub
jg
add
jo
ljmp
into
decl
icebp
xchg
inc
cmp
fisubs
hlt
jbe
call
mov
mov
cwtl
popf
in
xchg
mov
mov
dec
loope
cld
div
add
jmp
jae
imul
subb
rorb
addr16
and
mov
in
push
hlt
push
inc
xchg
cmp
lahf
push
or
rcl
cld
xor
and
jmp
inc
mov
mov
add
in
xchg
insl
call
push
int
int
jbe
cld
ret
stos
imul
cmp
mov
out
aas
cmp
mov
xchg
cmp
test
jg
and
jns
xlat
push
gs
es
fcomip
cmc
mov
inc
xchg
rclb
jmp
out
pop
nop
and
and
test
jnp
jnp
sub
mov
dec
mov
lods
arpl
and
in
jge
rcr
push
dec
fildll
sbb
pop
ds
inc
hlt
ds
add
jo
mov
lcall
mov
in
stc
out
loope
clc
cmp
into
push
adc
mov
test
add
and
or
aad
lea
sbb
out
mov
js
inc
xor
imul
cmpsb
repnz
pop
xchg
sti
sub
push
or
pop
jnp
pushf
in
cld
rorb
push
std
rcll
mov
or
jg
adc
xlat
std
dec
mov
xor
dec
jg
imul
lods
nop
sub
sbb
aas
arpl
jae
pop
addr16
pushf
ret
add
push
xor
dec
loopne
movl
gs
or
dec
cmp
js
dec
jno
sbb
daa
dec
dec
lret
ret
mov
insb
icebp
fsubrp
mov
pop
adc
hlt
sbb
lret
push
dec
fisubrs
inc
push
xor
aad
and
push
xor
xchg
imul
dec
sub
sub
lds
adc
out
nop
cltd
imul
ficompl
cmp
lcall
or
es
push
sahf
adc
addr16
pop
movl
sbb
cmp
push
insl
lods
cmp
mov
scas
inc
fadds
jmp
inc
mov
xor
test
sbb
in
push
xor
in
movsb
not
addb
ret
mov
aas
ret
pop
stos
fidivl
shl
arpl
mov
add
jns
sub
outsb
imul
xchg
xorl
or
out
push
mov
lcall
movsl
ljmp
ror
daa
stos
push
pop
inc
jmp
mov
mov
ret
nop
mov
sbb
xchg
sub
dec
and
adcb
adcl
mov
ror
push
or
loop
jo
in
push
imul
jl
push
and
push
insb
in
jb
xor
ret
mov
or
push
orb
scas
stos
dec
add
ret
sbb
dec
push
or
xchg
mov
mov
jecxz
mov
lahf
xchg
popa
aad
fidivl
lods
outsl
fwait
in
xchg
xchg
lods
icebp
and
sti
insb
in
pop
xorl
aam
pop
hlt
leave
mov
mov
push
mov
or
jecxz
fdiv
cmp
pop
push
rorl
lock
xchg
push
or
arpl
arpl
jg
cmc
push
out
jne
fdivl
fs
add
xchg
andl
call
call
into
popa
clc
mov
in
mov
rorl
ljmp
pop
cmpl
lret
int3
loopne
sub
jb
mov
jae
scas
das
cmp
sbb
lds
adc
pop
push
adc
dec
jg
mov
cmpb
push
adc
mov
dec
and
or
jbe
mov
shll
lea
pushf
mov
pop
pop
and
mov
jle
mov
add
pop
hlt
mov
push
mov
scas
cld
iret
mov
enter
int
enter
pop
and
xchg
sub
sahf
rcrb
or
or
dec
jecxz
dec
repnz
jno
mov
xlat
and
jae,pn
xor
jne
mov
mov
xor
pop
aam
or
jbe
je
mov
push
xor
arpl
inc
cwtl
xchg
cmc
sahf
flds
mov
push
add
lret
test
out
lea
sbb
call
test
dec
push
mov
adc
mov
das
loop
ljmp
ds
dec
sub
jne
push
xor
repnz
or
fwait
pushf
jge
mov
es
pop
jb
outsl
cmpsb
dec
hlt
add
xrelease
sbb
cwtl
mov
div
dec
jle
cs
out
cli
inc
jle
xor
lods
cmpsl
cmpsb
pop
cs
ss
mov
xchg
and
add
fists
or
xchg
sbb
jecxz
dec
cs
daa
jno
cmpsb
pop
sub
bound
sahf
mov
orl
pop
test
addr16
xchg
push
inc
mov
gs
xor
push
ja
jne
std
mov
xor
xchg
vunpcklps
fnstsw
aam
les
mov
pop
mov
mov
jb
push
or
arpl
xor
sub
or
adc
js
xlat
stos
and
and
or
fwait
out
lds
mov
call
insb
mov
jp
adc
leave
sbb
sbb
inc
sub
jnp
jae
sub
imul
repz
movsl
adc
jnp
dec
addr16
movsb
pop
out
in
out
enter
push
mov
fisttpll
ret
movsb
iret
stos
xchg
xchg
fstpl
jmp
in
rol
inc
pop
movsb
test
iret
push
xchg
push
out
dec
mov
outsb
fildl
push
dec
cld
pusha
xlat
outsb
or
popf
sub
test
inc
jns
lds
loope
jmp
movsb
mov
add
pop
xor
rcr
jns
bound
sbb
sub
xor
jo
pop
sbbb
mov
push
ja
std
jne
pusha
lds
sbb
clc
mov
ficompl
outsl
xchg
pop
imul
ja
dec
and
push
cmc
mov
push
test
gs
mov
aaa
or
xchg
cmpsl
popa
idivl
sub
subb
cli
sub
adc
add
addr16
sbb
mov
jae
dec
int3
rcrb
xorb
xchg
adc
rolb
dec
in
sysenter
sub
out
loope
and
int3
add
imul
cltd
lods
stos
mov
mov
push
xchg
je
andl
cwtl
pop
ljmp
inc
mov
daa
inc
sub
cmp
ljmp
pop
pop
inc
cld
stos
cltd
dec
and
xchg
push
sbb
sbb
add
and
mov
lds
es
loope
aad
jmp
adc
inc
into
imul
adcl
call
jne
xchg
imul
testl
add
xchg
in
mov
adc
adc
pop
ja
fldcw
aad
cmpsb
popf
xor
sarb
arpl
adc
xor
decb
jmp
aam
xor
sub
push
dec
fwait
rorb
xor
test
jecxz
add
sub
or
cmpsl
test
sub
ljmp
nop
dec
jne
xchg
enter
xorl
pop
movsl
ja
stos
ljmp
dec
push
mov
add
jnp
add
shr
push
dec
cmp
and
mov
and
in
push
dec
or
in
int
adc
inc
push
fisttps
das
adc
ja
or
add
mov
popa
xchg
std
cmc
loop
jo
mov
mov
dec
inc
xchg
scas
aaa
sub
mov
jle
pop
sbb
dec
adc
out
dec
shlb
std
sub
outsb
jmp
push
pop
aas
shlb
xlat
hlt
sbbb
add
sbb
sub
mov
jo
aas
leave
inc
adc
sub
and
repnz
jle
xor
sub
jb
lret
add
push
in
dec
lock
adc
jge
mov
aad
sbbb
or
push
xor
push
pop
addl
sub
test
xchg
jae
mov
add
andb
and
aam
out
dec
jne
out
add
mov
xchg
mov
rcr
mov
mov
push
xlat
movsb
cwtl
dec
mov
push
xor
test
iret
test
sarl
and
push
push
int3
jmp
push
insl
jae
and
lea
testl
add
lahf
loopne
scas
pop
outsb
sbb
push
sub
xor
jbe
or
imul
lret
add
dec
fildl
sti
fsubr
and
dec
aam
adc
push
into
mov
ficomps
mov
or
mov
fs
sbb
sub
mov
add
lods
cmp
sti
adc
shlb
sbb
les
xchg
lods
les
sub
outsb
sbb
mov
in
lds
pop
lds
pop
inc
xchg
xor
repz
xchg
mov
call
mov
cwtl
adc
lret
bound
data16
pop
inc
out
mov
sub
mov
ret
xor
call
inc
popa
mov
pusha
xchg
sub
xlat
bound
jbe
sbb
jo
mov
incb
inc
xchg
in
aaa
divb
scas
or
and
mov
repz
add
mov
push
stos
sahf
mov
xchg
mov
sbb
or
fldenv
xor
cltd
lret
lcall
out
shrb
and
roll
sub
mov
pop
add
inc
out
aaa
bound
inc
push
icebp
mov
inc
es
lds
adc
mov
inc
xor
mov
adcb
or
mov
sarl
orl
jge,pt
cltd
outsl
pop
cmp
or
push
sbb
lods
mov
adc
jp
fwait
inc
andl
jne
mov
cmp
sbb
in
insl
ja
je
jmp
mov
pop
cmp
jge
add
push
or
into
insl
jp,pt
js
or
mov
loop
mov
loop
repz
xchg
es
and
data16
jo
push
mov
mov
xchg
xorb
or
and
mov
jno
aam
jl
sti
lcall
jb
jp
inc
sahf
jl
pop
out
dec
sub
fadds
mov
ja
xor
sbb
lret
pop
inc
lret
push
in
adc
push
sbb
sub
inc
in
push
andb
and
pop
pop
and
data16
lret
in
out
xor
and
iret
and
sub
and
int3
push
ds
cmc
cmpb
push
adc
pop
mov
cmp
int3
pop
inc
sub
aad
fisttpll
lahf
stos
movsb
stos
fidivrl
dec
push
jnp
push
into
cmc
in
and
insb
mov
cmp
jmp
dec
push
stos
inc
xor
pop
aad
mov
mov
mov
call
cmp
int
sbb
jae
mov
sub
gs
lret
scas
jo
cltd
sub
cmc
mov
xchg
sbb
dec
dec
mov
test
repz
push
pop
add
insl
jnp
loopne
push
das
leave
divl
xchg
mov
lret
jge
das
popa
mov
dec
jno
outsl
push
dec
pushf
decl
sbb
cwtl
xorl
jmp
inc
pop
adc
xor
andps
lret
icebp
movsb
lret
call
sarb
arpl
mov
addb
loopne
fstps
sbb
xchg
jno
push
ljmp
xchg
icebp
es
leave
mov
ljmp
push
cmpsl
out
fwait
xor
jmp
sbb
daa
adc
inc
cmp
adc
xor
mov
push
jnp
lock
sbb
adc
fcompl
dec
pop
cmp
inc
loopne
pop
test
shll
cmp
pusha
or
and
pop
mov
sti
mov
add
pop
or
cli
sti
in
add
pop
jo
mov
test
aas
mov
xchg
mov
sub
push
sub
jl
popa
lds
push
jle
or
xlat
arpl
push
adc
cmp
pop
aas
xchg
push
dec
mov
jg
out
stc
in
arpl
sbb
mov
cmp
inc
sbb
cli
jae
adcb
lret
movsl
cwtl
ret
cmp
fdivrl
mov
jo
inc
loopne
inc
sarl
xchg
mov
shrb
xor
or
mov
mov
gs
push
mov
cwtl
and
jg
mov
xor
leave
jle
sbb
mull
movsb
stos
bound
in
dec
pop
fadds
insb
xchg
inc
cmpsb
mov
adc
in
fisttpl
pop
lods
sub
leave
and
add
jns
popf
dec
js
dec
ss
das
jb
pop
mov
cltd
mov
test
shll
inc
xor
lcall
lds
xchg
outsb
gs
xchg
mov
inc
xchg
daa
ret
test
psubusb
sub
fiadds
mov
pop
int
pusha
mov
inc
adc
std
jo,pn
and
int
popf
pop
shl
push
inc
mov
push
outsb
dec
outsl
sbb
jmp
dec
mov
repnz
mov
adc
sti
xchg
add
cmp
mov
or
adc
xor
ds
cmpsb
xor
shlb
out
sbb
ss
xchg
shlb
inc
xchg
and
jbe
xchg
sbb
sub
xor
jmp
fiadds
jg
and
jns
ret
and
jg
inc
xchg
scas
ds
pop
comiss
xor
andb
dec
sbb
xchg
xorb
add
rclb
jnp
or
test
lret
lods
pop
in
out
ret
int3
lods
adcl
jo
cmp
mov
pop
push
jge
jp
push
jns
pop
xchg
sbb
ljmp
les
xlat
mov
push
jl
mov
movsl
loopne
cmp
adc
outsb
jne
ljmp
push
or
xchg
jg
pop
in
pop
push
ljmp
repnz
push
les
rorb
cltd
lea
sbb
push
dec
cld
cmp
mov
movsl
mov
sub
jle
aas
jbe
sub
dec
sub
mov
adc
cmp
in
das
pop
and
mov
hlt
lcall
lock
xor
sbb
cmp
lds
enter
int3
add
cwtl
bswap
jne
pop
rcrb
mov
shll
jbe
call
lock
add
inc
inc
mov
test
in
lods
jno
arpl
mull
loopne
out
movsb
aad
adc
rcll
insl
decb
xchg
cli
test
cmp
scas
icebp
lock
mov
leave
cld
push
or
stc
jl
add
fcoml
fmul
in
ret
jb
sub
xor
and
aad
dec
mov
fidivs
xor
addl
dec
pop
xor
push
cld
dec
xchg
ds
and
mov
and
xor
or
nop
clc
jae
test
cld
xchg
push
mov
push
rcll
cli
push
mov
orb
xchg
xor
jp
mov
jno
xchg
jecxz
enter
or
jge
bound
pop
sahf
aaa
sbb
into
mov
add
xchg
inc
sar
jae
lea
dec
add
arpl
mov
lret
push
mov
cmc
in
fldt
xchg
pop
lods
sbb
mov
clc
aas
mov
repz
cmp
sub
adc
cmp
pop
insl
je
lods
xor
xor
push
inc
cmp
inc
jb
and
pop
arpl
insl
jns
and
insb
pushf
jae
das
inc
or
out
lret
or
adc
cld
inc
xchg
js
mov
lcall
inc
push
jge
shr
sub
sbb
adc
jmp
movsb
test
lock
cmp
movsl
or
and
int
pop
jnp
mov
jg
adc
cmp
jmp
and
flds
movb
push
mov
mov
push
xor
ret
sbb
and
mov
out
sti
in
mov
in
sbb
sub
sub
call
pop
cmp
in
ljmp
movsl
add
pop
shll
cmp
add
xorl
pop
pop
inc
jle
std
ja
cmpsl
sti
lret
sbbl
inc
xchg
scas
test
cmpsb
inc
sbb
dec
sahf
sahf
das
into
lds
dec
pop
in
arpl
sti
les
jmp
dec
dec
fcoml
cmc
repz
push
adc
mov
insl
add
push
push
sbb
sub
pop
mov
xchg
mov
mov
ret
mov
xchg
repz
clc
outsl
lret
mov
aad
setnp
ds
lcall
testl
cs
test
out
or
xor
cwtl
pop
adc
or
inc
jno
cs
lea
insb
xchg
xchg
ret
out
push
jbe
mov
jl
orb
nop
or
lahf
in
jno,pn
pop
pusha
pop
mov
andl
sub
movsl
js
std
insb
mov
enter
aaa
dec
ljmp
or
cmp
lock
stc
dec
inc
push
xchg
pop
dec
mov
jmp
sbb
or
pop
scas
ss
adc
adc
dec
in
sar
adc
adc
cwtl
bnd
mov
fucom
testl
push
jg
push
sbb
mov
sahf
pop
hlt
iret
aaa
fstps
scas
dec
mov
cmp
mov
fsubl
es
repnz
lahf
and
push
mov
pop
pop
and
addl
test
lret
pushf
shll
lret
fs
pop
push
loope
popl
mov
mov
xor
mov
pop
mov
call
pop
inc
sub
push
fimull
or
or
jno
iret
sbb
xchg
push
loop
aad
lret
movsb
lret
out
mov
mov
aad
dec
negb
xchg
test
cwtl
push
jb
imul
lret
fwait
cmp
jmp
dec
loop
movsb
jecxz
scas
jno
out
xor
orl
mov
xchg
sub
std
inc
sbb
out
adc
cmc
lcall
mov
sub
ljmp
dec
sbb
pop
jae
shll
cmc
sub
mov
mov
dec
sub
loop
push
mov
and
cmp
jne
ss
and
imul
push
pop
push
cmp
push
pop
pop
fadd
fs
mov
shll
insb
sub
movsb
subl
mov
shlb
shlb
push
repnz
mov
sarl
fists
popa
jle
lea
lret
data16
ret
sbb
xor
jecxz
jnp
push
pop
add
mov
subl
cmp
sbb
int
xor
mov
in
scas
pushf
jl
cmpsb
cmpsb
jb
popf
and
xchg
xchg
ja
mov
and
push
xlat
or
pop
push
adc
jo
mov
xchg
paddd
lods
mov
paddb
sahf
jns
test
mov
lahf
psubb
out
insb
push
mov
push
stos
adc
xorb
in
aas
sbb
xchg
xchg
cmc
pop
push
or
adc
cli
sbb
dec
lcall
pushf
sbb
xchg
dec
inc
inc
mov
fs
repz
dec
dec
cmp
icebp
pop
sbb
mov
out
inc
dec
mov
fsubp
mov
dec
pop
cmp
ret
xor
ret
jp
push
xor
out
pop
fnstcw
loopne
mov
fstps
lods
xchg
xchg
dec
jecxz
imul
arpl
aaa
push
xor
sahf
and
add
pop
loope
and
mov
fimuls
adc
pop
sub
jle
sbb
mov
xor
and
add
lds
mov
sbb
pop
xchg
repnz
jns
push
mov
jo
jmp
scas
data16
cli
shl
xchg
sub
xchg
stos
add
inc
fwait
call
out
push
stos
daa
mull
nop
jne
imul
cli
jg
mov
repnz
jmp
and
sbb
aam
cmpsb
add
fiadds
pop
iret
jle
cltd
repnz
pop
add
xchg
imul
loop
clc
add
inc
enter
insb
roll
out
sbb
jns
aaa
aas
les
adc
xor
pushf
pop
push
imul
sahf
popa
leave
sti
fcmovu
mov
test
or
and
adc
int3
fstps
daa
ss
je
xchg
sub
mov
mov
aad
push
out
jp
pop
adc
shrl
ja
fisttpll
jb
sti
pop
in
lahf
pushf
pop
aam
sahf
js
nop
mov
xor
loop
cltd
mov
ficoms
lcall
add
adc
aaa
mov
mov
dec
push
rcrb
xor
fmuls
xor
test
cltd
insl
call
ss
loope
xchg
cmp
test
cmpl
lods
xor
and
out
leave
sarl
xor
leave
in
dec
mov
sbb
jne
nop
leave
out
mov
stos
repnz
das
jnp
inc
repz
xor
jno
test
iret
xchg
popa
loope
std
jge
push
int3
imul
fdivp
inc
jecxz
sbb
sbb
cld
pop
pop
adc
xchg
and
push
std
add
push
or
data16
sbb
dec
sbb
push
xchg
sub
in
xorl
lahf
pop
and
add
cmp
rcll
out
ss
mov
xchg
in
sub
mov
jmp
lods
sti
inc
mov
or
out
xor
iret
negl
mov
adc
lds
fsubrs
xor
sub
and
jne
int3
fcmovbe
arpl
jnp
inc
push
outsb
xchg
filds
ja
mov
arpl
push
adc
into
mov
mov
fwait
repnz
inc
add
mov
dec
sub
push
jle
mov
sbb
imul
adc
leave
cmpsl
mov
pop
mov
push
add
cmpsb
dec
iret
sub
imul
xor
icebp
adc
push
data16
lea
je
aaa
mov
or
mov
push
aad
or
cmp
inc
call
cmp
sbbl
fwait
loope
mov
addr16
lret
loope
sbb
int
test
pop
into
mov
movsl
add
sub
lds
lret
dec
ret
mov
divl
xchg
in
sbb
sti
mov
pushf
push
call
xor
testb
jne
push
xchg
inc
or
scas
std
fbld
jne
jle
call
test
push
mov
insl
dec
stc
lcall
xchg
ljmp
mov
xor
subl
or
adc
push
sbb
fwait
and
push
mov
js
inc
test
gs
xlat
or
jmp
ds
insl
fidivs
or
mov
jp
cmp
daa
js
shl
mov
jb
decb
sub
dec
rcll
fucom
xor
fsts
push
mov
ret
test
add
pusha
inc
insb
and
add
xchg
push
xchg
jp
jg
fmull
out
test
pop
scas
adc
jle
adcb
add
fmull
sahf
push
inc
cmp
cmpsb
loope
cmp
shlb
test
or
sbb
movsl
sub
rcrb
lret
hlt
stos
jge
fidivs
into
jp
mov
pop
inc
xor
cmp
add
fildll
cmp
dec
shl
fs
in
xchg
loop
popa
mov
in
cmp
mov
push
or
mov
xor
lock
xor
cmp
les
inc
mov
pop
outsl
dec
and
dec
cld
add
loope
xchg
xor
mov
inc
fs
pop
ds
adc
lret
repnz
push
movsb
inc
mov
xchg
jbe
pop
test
lret
mov
push
fstpl
cmp
xchg
push
xor
inc
bnd
push
repnz
cmp
push
xchg
or
pop
test
or
mov
mov
das
sbb
mov
jle
aam
cmp
lcall
push
xchg
imul
push
push
mov
sti
pop
mov
stos
fdivrs
outsb
add
xor
test
lea
arpl
cmp
lea
mov
aad
dec
je
and
repnz
repz
scas
jg
lods
jmp
sahf
ds
adc
stos
push
push
loopne
xchg
fwait
cmc
add
push
cmp
or
aas
fnstsw
xor
push
pop
aaa
rorl
aam
inc
out
bound
pop
push
lock
mov
and
xor
and
push
sbb
fsubrl
inc
jns
lock
cmc
xchg
xchg
mov
pop
push
hlt
cwtl
push
pop
test
iret
fs
gs
add
inc
pusha
outsl
in
in
cmp
jae
out
mov
fists
cmc
nop
push
adc
dec
filds
mov
aad
cmp
mov
in
jmp
rclb
test
xlat
movsb
mov
call
xor
pop
xlat
jg
lods
mov
popf
pop
adc
mov
push
cmp
aad
nop
jmp
es
mulb
mov
cmpl
mov
roll
fldenv
pop
dec
pop
es
icebp
sub
das
sub
loop
pop
pop
cmp
inc
push
xor
mov
sti
pop
xchg
inc
dec
adc
test
and
das
enter
test
cltd
jl
js
addb
stc
cli
dec
pop
pop
xor
cwtl
sub
or
fisubrl
std
xchg
push
dec
insl
adcl
sub
jnp
outsb
fmulp
int
jmp
jb
clc
or
xchg
and
xchg
hlt
mov
lock
dec
push
sbbb
sti
loope
inc
out
xor
xor
shll
mov
pushf
outsb
ds
xchg
mov
push
aas
mov
lods
inc
aad
dec
movsl
cmp
sahf
xchg
lods
inc
lcall
and
cmp
daa
mov
js
jns
mov
adc
into
inc
cmpsb
lds
xor
xchg
test
out
hlt
or
push
iret
mov
jbe
bound
into
aas
jg
insl
aas
push
cmp
into
int3
pusha
and
sub
scas
mov
cmpsl
xchg
jle
mov
adc
mov
into
sbb
sbb
xor
mov
das
or
mov
stos
lret
xchg
int
adc
mov
and
stos
cwtl
aam
xchg
pop
lcall
adc
scas
lods
xor
cltd
mov
fs
fidivl
push
push
xor
mov
adc
stos
int
pop
in
sbb
mov
jbe
test
mov
push
push
cmpsl
xchg
xor
mov
in
movsb
jbe
and
dec
xchg
or
cmpl
sbb
aam
jb
pop
mov
mov
arpl
adc
jo
adc
jecxz
jbe
bound
sbb
mov
loop
in
mov
xor
sahf
repnz
sub
into
mov
dec
test
gs
xorb
out
xor
es
data16
test
js
nop
std
rcrb
mov
mov
adc
jne
fldl
outsb
fwait
add
push
adc
add
xor
pusha
in
xor
inc
push
add
xlat
ja
sbb
xor
mov
ja
jecxz
test
mov
sbb
cmp
adc
scas
lret
pushf
loopne
cld
xchg
mov
cmp
insb
push
lods
jmp
push
push
and
mov
jl
nop
fistpll
push
je
sub
repnz
shrd
gs
dec
mov
xchg
pushl
loop
jmp
mov
dec
jecxz
rcll
xlat
push
xchg
adc
dec
xor
push
lds
test
sti
push
jp
outsb
repnz
cmp
cltd
mov
cmpsl
dec
push
ret
mov
aad
ljmp
add
outsb
loopne
dec
add
push
push
loopne
shll
xorb
fstl
adc
push
dec
mov
repz
outsl
xor
mov
cmp
out
scas
ljmp
mov
adc
in
sbb
rorl
jge
sbb
cld
xor
pcmpeqd
hlt
clc
imul
popa
ljmp
lds
scas
xchg
in
loop
mov
std
cmp
xchg
stos
sbb
mov
mul
xchg
ljmp
ja
xchg
out
xor
test
shlb
push
mov
xchg
hlt
mov
push
shlb
mov
jge
pop
paddw
push
fstl
mov
adc
les
mov
xor
push
popf
stos
je
mov
adc
pop
lea
sbb
mov
jg
inc
std
or
xlat
aam
mov
cmp
decl
adc
lock
adc
lcall
or
icebp
out
shll
leave
ljmp
mov
add
loopne
daa
pop
imul
mov
xchg
push
mov
mov
in
push
mov
mov
fnsave
inc
jl
rol
mov
fs
cld
xchg
inc
les
dec
popf
outsb
pop
adc
gs
aam
sbb
mov
out
sbb
fwait
pop
in
pop
cld
and
loopne
das
jge
out
ja
sub
test
push
in
jge
mov
dec
daa
push
fcoms
stc
cmp
and
fmul
dec
sub
mov
mulb
ret
imul
mov
orl
pusha
mov
stos
jae
push
mov
bound
test
ja
add
lahf
shr
sbb
out
mov
sub
mov
scas
ret
test
lods
pop
mov
adc
pop
repz
ljmp
fwait
popf
shll
xor
and
mov
movb
mov
sub
xchg
pop
push
outsl
lret
lret
lds
and
out
lret
push
adcb
ja
add
test
stos
es
sub
push
xor
cmp
and
stc
pop
mov
mov
cmp
adc
mov
imul
jmp
mov
push
xorl
mov
and
or
dec
loope
pop
popf
stc
adc
jno
jle
loopne
ds
int
imul
mov
ss
cmp
or
out
loope
jp
enter
mov
frstor
test
pop
pop
sbb
mov
cmp
lods
adc
inc
adc
mov
xchg
sub
imul
sbb
push
out
inc
mov
adc
dec
mov
mov
mov
sbb
jg
inc
ja
mov
test
cld
mov
push
xor
shl
xor
test
stos
icebp
jg
mov
insl
sub
or
mov
push
movsl
stc
or
inc
decb
insb
loope
inc
pop
stos
xchg
mov
push
mov
adc
fistps
rolb
sbb
xor
shll
dec
call
sub
pop
adcl
ja
cmc
in
call
pop
xor
sub
sub
mov
nop
shl
js
dec
out
add
push
mov
xchg
imulb
lods
xchg
les
inc
dec
xchg
push
call
add
gs
shl
and
adc
aam
mov
insl
aas
xchg
pop
int3
cmp
add
outsl
mov
out
ret
jbe
add
test
mov
shrl
pop
xchg
fidivrl
cmpsb
lahf
aas
sbb
pushf
aad
movsb
xchg
push
out
mov
fcoml
cwtl
pop
data16
cli
call
popa
jp
insb
add
mov
xor
les
lret
jnp
jno
xchg
call
xchg
cmp
daa
ss
fisubrl
cmp
out
mov
mov
sahf
push
aas
mov
lret
adc
add
es
add
jbe
loope
leave
das
test
mov
pop
lock
inc
in
jno
ja
addl
hlt
xchg
in
fsubr
adc
xlat
add
das
mov
xchg
cmpsb
pop
in
aaa
in
cmpl
sbb
push
arpl
arpl
ds
pop
jmp
mov
out
stos
outsl
jmp
dec
lret
popa
call
xchg
rol
std
xchg
movsb
insl
bnd
icebp
adc
jecxz
addr16
inc
mov
lcall
clc
lcall
dec
leave
in
or
lods
lds
ret
xchg
adc
xchg
rcrb
xor
pop
add
out
dec
jg
adc
loop
repnz
pusha
add
push
fidivl
in
mov
or
mov
ja
xor
jmp
jmp
pusha
sbb
int
push
adc
movsl
xchg
push
cmp
js
push
in
shrb
out
sbb
jg
pop
jbe
cmc
cmpsb
adc
sbb
fucomp
inc
jp
repz
daa
fwait
pop
lahf
in
push
and
lret
cmc
mov
mov
sbb
jb
adc
mov
cmp
dec
ss
inc
movsb
push
dec
test
mov
jmp
jl
scas
into
aam
pop
daa
loop
and
pop
xchg
in
dec
outsb
pop
mov
cld
ds
stos
loopne
xchg
push
cmp
movsb
sarb
sahf
lods
jnp
outsb
fidivrl
add
mov
dec
add
sub
aam
jne
sub
lcall
jne
int
repnz
lret
pop
cwtl
or
inc
mov
sahf
arpl
sub
in
xchg
dec
mov
sub
mov
dec
sbb
and
gs
scas
mov
cli
pop
sbb
cmp
sub
out
and
rol
push
std
or
orl
sbb
out
fldenv
in
jb
outsl
inc
ljmp
cmp
mov
push
addr16
add
rorl
decl
loope
lods
lcall
leave
cld
dec
dec
sbb
movsl
pop
pop
pop
stos
arpl
dec
cmpsl
push
lea
aam
sub
mov
stos
inc
lahf
push
inc
ljmp
push
mov
mov
dec
imul
iret
rclb
insb
jmp
fs
push
test
ret
push
mov
nop
and
add
adc
shll
sbb
inc
adc
js
popa
or
cmp
add
sbb
popf
mov
int3
test
cld
into
and
int3
inc
sub
lahf
xchg
je
cmc
loope
fs
xchg
es
dec
mov
scas
sbbl
push
mov
jmp
outsl
cli
push
test
jb
sbbb
sub
sbb
sar
xchg
ja
lahf
or
dec
mov
push
dec
mov
pop
sbb
iret
popa
cmp
or
outsb
mov
pop
xor
lock
push
mov
push
pop
mov
dec
es
pop
imul
dec
or
adc
lahf
out
int3
std
push
add
pop
lds
push
adc
dec
sub
push
xchg
mov
sbb
sbb
inc
pop
lds
mov
pop
arpl
push
pushl
popf
dec
test
pop
out
xchg
jp
push
loopne
mov
jmp
mov
movsl
imul
jecxz
bound
ljmp
xlat
fs
ljmp
fs
xchg
push
fidivs
mov
insb
jo
push
mov
pop
dec
int
icebp
push
pop
shlb
sub
std
sub
and
ljmp
adc
and
mov
repz
shrb
jg
inc
pop
int3
lahf
jae
xchg
sub
inc
inc
out
dec
out
std
neg
and
cmp
pop
sub
and
in
jnp
les
shl
stc
inc
enter
lret
mov
aaa
leave
mov
and
xchg
insl
call
xchg
pop
stos
imul
jne
adc
lods
popf
mul
stc
push
cmp
cmp
push
xchg
cmpsl
fisubl
ds
orl
xor
stos
push
sar
dec
shll
push
sahf
iret
idiv
fcomps
inc
out
xor
notb
inc
pop
mov
mov
sbb
mov
fsts
and
repnz
sbb
nop
or
cmp
cltd
add
xchg
popf
jb
pusha
je
cmp
jle
shlb
movsl
addr16
insb
push
lahf
pop
lods
xlat
mov
mov
inc
ret
aam
jns
mov
es
sub
xchg
stc
fs
dec
sar
lock
movsl
add
std
pop
mov
mov
popa
out
icebp
lea
clc
data16
jnp
inc
test
test
xor
pop
in
inc
xor
mov
mull
popf
lods
xor
lods
mov
fsub
fnstcw
mov
mov
mov
xor
sub
stos
adc
fsubl
xlat
push
sti
sbb
xchg
movsl
inc
subl
push
xor
std
out
dec
pop
sbb
cmpsl
andb
pop
shll
or
mov
int3
push
cmpsl
xchg
shl
mov
xchg
jmp
add
xchg
xchg
sti
or
push
mov
shl
ficomps
out
xor
shrl
in
rorl
add
pusha
mov
cmpl
mov
int3
in
aaa
inc
scas
and
daa
jo
outsb
fdivrs
pusha
mov
cmc
or
inc
cmp
mov
shlb
lods
mov
dec
insl
jmp
iret
pop
repnz
jecxz
test
fwait
ljmp
mov
pop
cmp
inc
pusha
imul
test
add
jl
sub
repz
inc
jns
ljmp
mov
mov
lods
xor
addl
das
movsl
xchg
pop
mov
and
insl
jle
dec
cmp
xchg
xor
mov
push
cmp
xor
sub
push
stos
imul
add
in
popf
mov
xchg
scas
aas
sbb
vandps
enter
arpl
pop
jns
movsl
lods
in
or
adc
push
aam
mov
mov
or
and
nop
mov
inc
ret
sub
mov
out
cli
cmp
or
icebp
fidivrs
add
mov
inc
dec
xor
cltd
pop
inc
es
rol
mov
adc
cmp
or
repz
pop
sub
aas
je
rorl
dec
js
push
cmp
mov
push
push
sub
loop
loope
out
rorb
mov
dec
sti
in
sbb
insb
push
pop
mov
lock
xchg
add
cli
or
mov
add
jp
in
mov
pop
insl
pop
movsb
xchg
xchg
in
jp
adc
pop
mov
gs
sbbb
rcrb
or
insb
mov
xor
mov
mov
iret
call
in
out
inc
mov
std
cmpl
sbb
xchg
inc
add
xor
adcb
inc
out
mov
daa
pop
add
sub
das
pop
pop
xchg
insl
sbb
xchg
adc
mull
push
cmp
inc
cmc
dec
sbb
into
xchg
bnd
or
cmp
shrl
cmp
pop
iret
dec
jnp
stos
faddl
decl
adc
and
ret
or
xchg
pop
dec
dec
cmc
in
sub
dec
pop
sahf
shrb
dec
jnp
movsl
mov
stos
movsl
ret
dec
xchg
push
je
or
sub
xchg
pusha
adc
imul
cli
push
jge
xor
or
inc
xor
sti
inc
mov
xchg
icebp
scas
or
mov
inc
cmp
lock
sbb
xor
je
pop
jp
xchg
push
or
out
inc
push
add
add
adc
ljmp
leave
out
repz
fwait
sub
dec
jne
jno
adc
mov
fidivrs
call
je
adc
sti
mov
and
xlat
mov
enter
fmul
leave
push
sub
mov
stc
rcl
pop
fisubl
mov
arpl
inc
adc
mov
std
xchg
js
loope
push
mov
icebp
rcll
push
and
shll
mov
push
pop
pushf
fsubrl
pop
dec
mov
and
cmpsl
mov
nop
jecxz
mov
jmp
jns
decl
jg
std
cmp
mov
test
inc
add
mov
inc
je
aas
fistpll
lahf
sbb
pop
push
arpl
or
out
or
or
mov
sub
ljmp
sub
mov
adc
push
into
push
pop
nop
pop
insb
roll
push
or
cwtl
jl
dec
mov
mov
cmp
addr16
scas
xchg
inc
or
push
sub
sub
inc
push
lea
int3
popa
xchg
adc
lret
mov
add
and
mov
mov
xchg
inc
add
rclb
out
push
jge
pop
cmp
cmp
or
sbb
lods
dec
fisttpl
dec
mov
adc
adc
xchg
cltd
inc
pop
push
lcall
sbb
insb
pusha
les
call
stos
or
notb
imul
ret
mov
xchg
out
push
stc
xor
in
call
mov
rcrl
jns
orb
outsl
rcrb
adc
push
push
jbe
jmp
mov
nop
aam
clc
lahf
add
mov
mov
jno
push
cmp
cmp
or
pop
xchg
push
into
jl
mov
iret
mov
xchg
movsl
mov
insb
dec
or
movsl
cmp
mov
mov
sahf
in
mov
inc
or
mov
int
or
mov
jno
inc
in
subb
xchg
mov
and
and
adc
cmp
cmp
add
inc
jnp
inc
in
fdivs
daa
imul
and
dec
adc
lret
cmp
inc
ss
sbb
push
jl
jmp
ret
aam
xorl
ds
push
jbe
lds
mov
and
rcl
icebp
jns
out
cli
outsb
rcrb
test
shlb
dec
adc
adc
fs
xor
stos
outsl
fdivs
or
pop
loopne
das
xor
xchg
in
fdivr
lret
andb
icebp
adc
fcomps
sub
fsts
imull
xor
mov
xadd
mov
push
es
xchg
rcl
or
jecxz
pusha
mov
in
xchg
cmp
int
xchg
xchg
dec
xor
xor
mov
xchg
jae
cmp
clc
insl
mov
cld
mov
push
pop
xor
lret
mov
jle
sbb
out
add
addr16
push
pop
popa
repnz
sub
test
out
pop
daa
arpl
push
in
dec
inc
nop
jae
jbe
out
inc
test
xor
push
add
enter
rcrl
movb
ljmp
inc
in
movsl
cli
inc
push
sbb
mov
lds
stc
mov
xchg
sub
loope
push
dec
and
mov
movsl
or
decb
dec
push
stos
jbe
dec
mov
push
pop
push
shrl
lahf
xchg
cmpsb
sbb
sbb
nop
imul
mov
mov
and
pop
inc
js
test
imul
scas
sbb
jecxz
inc
jge
dec
push
adc
std
or
and
iret
sbb
hlt
icebp
or
cmc
into
sub
hlt
or
dec
fstpt
outsb
scas
mulb
stc
cli
mov
mov
imul
sub
loop
pop
pop
int3
jg
aam
mov
mov
push
inc
loope
push
dec
mov
cmp
sub
mov
xor
adc
ja
cmp
iret
pop
pop
stos
popa
fstpl
cmp
pop
push
lret
and
sar
push
sub
fdivs
je
mov
xchg
incb
mov
inc
jne
pop
rolb
jmp
sti
push
jle
and
xor
jmp
sub
xlat
dec
mov
aas
test
jle
push
test
mov
add
push
loop
cwtl
cwtl
adc
jnp
stos
and
dec
aam
sbb
dec
nop
jo
cmp
push
repz
lea
aaa
mov
js
add
bound
outsb
outsb
and
push
call
imul
outsl
sti
mov
ret
mov
into
test
js
lcall
idivb
or
test
mov
enter
pusha
push
sub
fs
cmp
xchg
fidivl
sub
sub
movl
shrb
push
lcall
ret
adc
cltd
dec
aad
push
xor
ja
rclb
fisubrl
xchg
xlat
outsl
fnstsw
arpl
xchg
je
cmp
sub
pop
and
addr16
and
in
call
int3
stos
outsl
push
loop
stos
add
lods
in
pop
cltd
or
add
stc
add
ja
adc
neg
jle
out
stc
decb
icebp
dec
mov
mov
cmp
scas
and
mov
mov
rcrl
add
nop
cld
adc
xchg
cmp
dec
je
adc
jp
mov
andl
push
push
fcmove
daa
sbb
in
sbb
sbb
sbb
repz
sub
mov
push
shl
jnp
and
aam
jo
push
xor
cmpsb
nop
jle
fldt
lret
push
ljmp
data16
jg
or
push
inc
cld
cmp
int3
je
and
sbb
cmp
xchg
stc
push
add
aad
mov
je
lret
sbb
pop
stos
pop
aas
in
cmpl
dec
mov
repz
jmp
cmp
and
imul
inc
pop
test
adc
pop
xor
cs
push
xchg
xchg
sub
xor
stos
sub
and
sbb
sti
lods
ret
push
xchg
in
pop
loope
mov
out
outsb
mov
push
enter
mov
push
jle
xor
and
mov
or
push
pop
leave
fwait
fadd
jno
lcall
push
push
rorl
es
movsb
dec
or
pop
and
lret
sub
dec
dec
mov
add
icebp
aaa
inc
add
daa
stos
loopne
add
xor
cmp
dec
in
inc
addr16
ss
scas
loope
iret
lock
addr16
push
sub
ret
andb
stos
imulb
fwait
mov
or
out
cld
xchg
lea
cld
je
push
and
mov
mov
xchg
dec
pop
adc
popa
jbe
insl
insl
cmc
cmp
test
testb
mov
adc
mov
jnp
lcall
sbb
inc
in
or
movsb
gs
lcall
pop
mov
sbb
mov
push
xor
shll
push
mov
mov
jg
scas
and
nop
loope
in
std
sub
movsb
and
fidivrl
js
or
sub
loop
aaa
push
pop
fsts
jmp
adc
dec
sub
sahf
test
pushf
addb
mov
pop
scas
into
and
inc
or
mov
cmp
lods
gs
mov
mov
fidivs
notb
inc
xchg
sub
inc
dec
dec
inc
sbb
or
xor
cmp
sub
stos
outsl
aas
dec
mov
push
mov
clc
and
cmp
xchg
ret
enter
push
cmp
jo
mov
fs
lret
sahf
push
mov
mov
dec
fisttpl
pop
loopne
jbe
mov
mov
jmp
cltd
pop
mov
push
and
shlb
jns
add
lods
icebp
pop
dec
mov
sahf
cwtl
es
fs
pop
xlat
daa
cs
sub
dec
stc
shll
adc
cmc
movb
and
dec
pop
sub
imul
sbb
sbbb
pusha
xchg
aaa
cmp
aad
enter
xchg
push
aad
xor
adc
test
insb
sbb
ja
cli
scas
outsb
sub
aaa
push
push
fldcw
movsb
rol
arpl
mov
fnstsw
pop
xchg
xor
cmp
push
dec
jecxz
jl
popa
es
les
push
add
iret
push
add
movsl
lret
push
xor
out
xor
pop
into
gs
jae
inc
and
popa
ja
aas
nop
or
repnz
icebp
sub
push
xchg
lods
fwait
pop
xchg
enter
cmp
fsubrs
mov
imul
adc
jo
mov
mov
inc
or
pop
cmp
push
sbb
mov
sti
push
xor
push
sbb
shl
push
lea
cmpsb
out
sub
idivb
lret
shl
sbb
rcrl
iret
pusha
in
add
and
adc
lods
xlat
rcrb
or
lret
ljmp
rorl
lret
or
enter
jp
mov
dec
mov
fucom
sarl
lret
mov
or
push
dec
xor
mov
mov
movsl
push
insl
cli
push
sarb
xor
pop
mov
adc
fists
cmp
fbld
repnz
cmc
insb
dec
xchg
imul
sti
iret
push
repnz
ja
mov
fildll
in
aaa
xchg
jae
sub
dec
pop
mov
rorb
std
aad
mov
cli
mov
test
cvtps2pi
out
mov
xlat
pop
sub
in
out
inc
dec
sub
xlat
jle
or
sub
jnp
mov
dec
jns
xlat
xchg
mov
rcll
clc
mov
loope
int
dec
sub
inc
bound
out
push
lret
pop
loop
sub
or
bound
push
leave
pop
rolb
sti
pop
ds
popa
jge
pop
jl
mov
or
xlat
sbb
add
scas
aas
inc
jg
clc
jae
pop
fstpt
into
enter
adcb
pop
clc
sub
stos
cmp
inc
ljmp
mov
call
xor
test
pop
pop
xor
bound
dec
in
jne
jno
dec
popf
pop
cli
mov
sbb
xchg
dec
scas
insl
jp
and
mov
inc
xlat
iret
xchg
push
adc
aaa
lock
call
shlb
iret
das
inc
push
subl
xchg
mov
push
cmp
outsb
popa
add
xor
js
xchg
lds
cs
hlt
outsb
ds
sti
jbe
xchg
pop
mov
push
sbb
mov
pop
mov
or
fbld
jecxz
mov
push
mov
out
rcrb
xor
movsb
fadds
sub
scas
xor
cltd
cmp
sbb
or
jg
push
ss
adc
std
pop
aad
adc
mov
or
out
mov
add
addr16
or
lret
dec
cld
cmp
xchg
inc
inc
mov
dec
pop
fnstsw
out
out
lds
scas
cli
mov
xor
mov
xchg
hlt
adcb
cmp
cli
sbb
subb
xor
ret
cmp
adc
fdivs
add
mov
dec
push
pop
in
add
clc
stos
jne
in
add
adc
and
fs
mov
add
lods
pushf
jle
std
shlb
pop
in
sub
xchg
test
sub
and
and
mov
nop
lahf
xchg
movsb
inc
add
mov
mov
jl
pop
mov
pusha
data16
or
cmc
popf
in
aas
dec
in
dec
dec
cmpsl
negl
or
add
mov
jle
mov
jb
or
call
mov
negl
fsubl
or
jg
orl
notb
lods
fs
pop
enter
push
out
and
inc
xchg
bound
imul
pusha
lds
roll
lock
je
add
xchg
xchg
pop
fwait
int
jb
lds
xchg
sti
mov
push
into
xor
push
or
and
and
out
clc
xchg
pushf
add
outsb
or
inc
jl
jnp
inc
or
data16
sub
mov
fists
faddl
push
mov
daa
orb
inc
push
pop
movsb
jo
and
sarl
jg
repnz
mov
sbb
mov
les
dec
stos
adc
lea
jb
mov
lods
or
movsb
mov
nop
mov
or
sbb
repz
mov
into
sbb
push
outsl
lods
xchg
xor
push
aaa
cmp
mov
push
fcmovne
pop
and
mov
in
adc
add
add
jmp
jbe
mov
push
pop
and
push
or
out
lods
sbb
xchg
aas
or
loope
xor
sbb
xrelease
pop
xchg
mov
pop
mov
xor
jo
dec
dec
dec
mov
mov
and
push
sbb
lods
mov
mov
sub
jo
clc
xor
test
add
popf
fnstsw
mov
fisubs
lods
or
adc
mov
push
jo
mov
mov
or
fcoms
rorb
repnz
mull
retw
enter
repz
add
pop
ss
dec
ret
ss
cmp
gs
jae
sbb
jle
add
add
fdivl
cmp
std
sbb
je
fcom
out
dec
bound
sub
cmpl
repz
stos
hlt
lcall
frstor
xchg
adc
or
popa
inc
pop
in
out
xchg
mov
jg
dec
out
mov
dec
shlb
fbstp
lods
jnp
pop
xchg
sbb
js
into
dec
fdivrp
add
cmp
out
test
sbb
sti
xor
add
repnz
lods
int3
fidivrl
js
ja
jb
jg
mov
repz
cmp
mov
adc
mov
sub
xorb
sbbl
pop
mov
and
loop
pop
pop
icebp
fisttpl
push
mov
and
push
ret
incb
mov
push
adc
mov
xchg
nop
xchg
loop
fwait
pushf
inc
leave
dec
mov
or
inc
mov
enter
es
push
xchg
mov
dec
cmp
mov
jmp
orl
sub
mov
xchg
adc
or
rclb
test
sub
cmc
scas
lret
cmp
data16
ret
mov
xchg
mov
dec
sub
push
xchg
insb
push
addr16
aas
dec
sub
jnp
out
pop
sbb
outsl
dec
out
sbb
orb
push
jno
fsubrs
cmpsb
mov
gs
out
add
jecxz
mov
dec
inc
mov
mov
mov
rcr
jo
mov
xor
dec
and
std
push
test
push
in
or
xor
xchg
pop
insb
sub
jb
lds
out
pop
sub
or
pop
sub
call
cld
out
sti
dec
cmp
rcl
out
lods
insb
sbb
das
push
sbb
jecxz
loop
mov
call
push
out
rcrb
ja
insl
xchg
mov
jmp
jne
pop
mov
mov
fisttps
test
in
movsl
fs
sti
xchg
cs
inc
lea
mov
pop
xchg
lret
xchg
loop
insb
mov
push
std
xor
sub
mov
lods
adc
hlt
mov
out
cmp
push
idiv
iret
mov
into
scas
in
add
lret
inc
sub
ds
mov
sbb
gs
push
adc
mov
mov
mov
xor
shrb
fistpll
cs
call
or
dec
push
cmp
mov
int3
mov
mov
xchg
cmp
jecxz
cli
adc
xchg
insb
mov
xor
and
ret
jge
pop
ret
cmp
cmpsb
add
popa
test
dec
js
and
mov
out
pop
adc
mov
fldt
mov
adc
sub
mov
test
cmp
cmc
or
xchg
push
push
jp
jg
pushf
lods
out
cmp
lcall
gs
test
and
movsb
mov
push
stos
push
jp
fsts
mov
xchg
rolb
mov
lds
into
xchg
mov
add
fbstp
jns
popa
clc
dec
js
xchg
arpl
out
inc
or
cmp
rolb
icebp
xchg
pop
inc
out
inc
xchg
pushl
inc
xor
xchg
loopne
push
jge
jl
sbb
sub
loope
lods
shlb
adc
pop
or
aam
sbb
scas
js
movb
pop
lret
mov
pop
xchg
pop
shrl
dec
mov
mov
loope
xor
mov
add
adc
pop
shll
aad
mulb
sub
sbb
in
cltd
mov
scas
or
popf
fiaddl
pop
repz
jmp
mov
in
cs
pop
add
es
push
sbb
mov
ds
cmc
mov
push
repnz
cmpl
xchg
jp
lcall
aaa
mov
push
add
inc
cmp
pop
pop
sbbb
in
adc
xchg
cmpsb
negb
mov
sub
test
lea
xchg
into
imul
dec
fwait
test
aaa
in
imul
bound
adc
stc
stos
out
imulb
mov
inc
jge
arpl
out
jecxz
repnz
mov
cmp
or
adc
or
add
xor
sar
cmc
sub
ds
jmp
inc
movsb
ret
add
dec
ss
mov
movsl
out
cltd
imull
cmpsb
lock
mov
add
lret
je
mov
shl
pop
sbb
out
mov
cwtl
jecxz
daa
mov
jb
in
mov
dec
je
sub
xcrypt-ofb
cmpsl
sub
cmp
xchg
bound
adc
call
dec
mov
mov
adc
ds
push
add
fisttps
xchg
dec
test
fcomip
rcr
adc
lods
fucom
mov
jge
fldenv
jae
jl
push
lds
loopne
inc
inc
or
mov
loope
pop
hlt
jg
outsb
and
mov
cmp
adc
call
les
lock
into
pop
mov
inc
cs
xor
sub
test
pushl
lock
and
inc
sbb
or
scas
je
cmpsb
jmp
icebp
test
inc
or
out
pop
push
in
imul
std
sub
leave
repz
das
adc
fs
dec
aad
mov
xchg
sub
jmp
mov
shll
adc
daa
jmp
inc
adcb
sbbl
scas
es
cwtl
in
pop
jle
sbb
mov
stos
aas
xor
sbb
shl
loopne
jns
adc
add
sub
out
outsb
testl
cltd
pop
jne
mov
dec
rclb
push
push
test
mov
ret
push
adc
xchg
sarb
mov
and
pop
adc
pop
lock
mov
aas
ja
push
sub
mov
cmp
stos
dec
sahf
dec
cmp
imul
clc
scas
mov
push
movsb
lret
sub
out
fs
or
lcall
mov
sbb
push
shlb
aam
xchg
fstp
mov
cmpsb
test
jmp
cltd
cwtl
sbb
add
jae
mov
add
adc
movsb
jns
in
mov
xor
bound
add
movsl
or
mov
adc
mov
or
dec
out
movsl
es
out
inc
sbb
xorb
push
jge
inc
les
adc
inc
lahf
mov
stc
inc
mov
or
inc
inc
fmul
or
inc
pop
arpl
dec
fcmovnbe
lcall
pusha
sarl
repnz
adc
and
mov
loopne
jge
loope
xchg
ja
ja
mov
mov
mov
pop
js
mov
push
cmp
pop
into
gs
outsb
jmp
and
and
mov
dec
sbb
or
lods
lock
push
scas
dec
and
cwtl
cmpsb
inc
jne
and
out
mov
std
pop
and
aaa
sub
xchg
mov
mov
cwtl
sub
jl
jl,pn
aaa
lock
out
mov
push
lea
or
lods
xchg
clc
add
inc
outsb
aam
jnp
cmc
inc
lret
xlat
push
xor
mov
and
sbb
gs
adc
jmp
sub
cs
mov
cld
idivl
dec
jbe
cmc
push
outsl
jl
and
cmpsb
mov
jo
pop
dec
cmp
xor
mov
mov
daa
pop
lds
xor
outsb
inc
pop
xchg
popa
sbb
inc
out
xchg
pop
sbb
test
mov
jmp
loopne
adc
cmpb
adc
stc
in
daa
sbb
mov
fcoms
fnstenv
test
fnsave
call
cmp
pop
jmp
sarl
ret
mov
inc
adc
sahf
push
xchg
out
mov
outsl
movsb
xor
pushf
jp
xor
sub
adc
icebp
push
scas
ret
jmp
push
popa
bound
imul
ja
or
xor
adcl
mov
mov
and
cmp
lods
pop
call
adc
add
jns
dec
or
sub
packuswb
add
inc
add
push
push
int3
jne
sbb
repnz
adc
push
xchg
push
mov
scas
mov
mull
lahf
sub
fmull
popa
aaa
ja
push
mov
mov
add
mov
inc
mov
mov
or
fidivl
lods
and
ficompl
sahf
aaa
hlt
push
xchg
mov
outsl
ja
fidivrs
daa
mov
mov
push
sub
pop
mov
dec
xchg
scas
cmp
xlat
cmp
into
in
es
cmp
inc
fiadds
push
pushf
jno
pop
mov
mov
es
fcomps
pushw
mov
adc
mov
je
or
jge
out
or
add
scas
aam
loop
lock
test
sbb
adc
xchg
add
push
dec
leave
pop
int3
das
outsl
loopne
in
sarb
inc
dec
aam
xor
imul
imul
stc
pop
pop
lods
dec
adc
test
outsl
fidivl
cmp
aam
ficomps
arpl
loop
xor
rcll
imul
mov
or
in
xor
iret
pop
int
pushf
pop
add
lcall
dec
jb
dec
push
test
dec
xchg
roll
jp
call
sbb
and
sbb
lock
jmp
add
push
mov
jecxz
and
repnz
sub
and
or
mov
repz
push
sbb
pop
cmp
sub
ja
dec
inc
fdiv
arpl
stos
lods
jg
pop
pusha
lret
jge
dec
outsl
and
mov
ds
ds
test
movsb
outsb
add
xor
jbe
push
jns
adc
jg
or
jge
and
push
shlb
outsl
dec
xchg
cmp
mov
pop
xchg
into
jo
loopne
sbb
mov
xor
outsb
jl
orb
cld
push
lea
push
mov
outsb
push
jae
mov
mov
test
fidivrl
lahf
mov
lret
mov
jnp
mov
cmc
mov
push
push
mov
push
fadd
push
cmp
jp
int
and
jnp
out
push
cli
lods
sbb
jnp
cmc
mov
fistpl
adc
xchg
jnp
loope
mov
sub
sbb
or
mov
insb
insl
pop
mov
inc
jne
mov
js
add
jno
xor
xor
cmp
cmp
sbb
inc
ljmp
push
xchg
push
sahf
stos
dec
cltd
jo
add
inc
movsb
xchg
mov
push
icebp
pop
int
mov
leave
in
stos
stos
js
fbstp
adc
pop
lds
pop
scas
nop
sbb
and
fs
adc
cmp
stos
fistl
inc
icebp
xchg
clc
mov
push
xor
sub
fdivs
les
in
xchg
fstpt
mov
ljmp
enter
je
andb
test
js,pt
lret
mov
int
imul
and
cmp
cmp
mov
sbb
sti
xchg
cmpsb
inc
fs
push
movsb
je
pop
mov
pop
jo
mov
adc
pop
pop
jge
dec
pop
dec
xor
loope
das
mov
fisttpll
jae
popa
aas
add
aad
sub
imul
inc
lea
cmp
mov
jb
faddl
hlt
xor
cmpsb
sub
adc
mov
icebp
xor
cmp
or
or
in
and
add
les
out
je
add
jno
sahf
push
mov
orb
sbbb
lods
xor
shrl
inc
mov
dec
out
pop
mov
jne
sub
inc
jbe
pop
cs
repnz
adc
jbe
adc
shl
ja
mov
add
ss
mov
sti
fdivp
sub
rolb
int
push
shlb
icebp
negb
mov
outsl
xchg
lock
mov
or
xor
test
inc
fisttpll
jnp
ds
popf
ljmp
push
pop
daa
xchg
push
mov
lds
adc
pop
insb
xor
je
subb
inc
jp
rcl
arpl
popa
in
adc
mov
js
dec
outsl
or
jge
stos
xor
add
test
dec
int3
incl
jbe,pt
mov
xlat
sbb
fbstp
adc
mov
or
inc
jecxz
leave
fs
jl
mov
xchg
aas
aas
jl
push
mov
mov
adc
pop
inc
xor
pushf
scas
xor
inc
adc
or
adcl
cmp
dec
sbb
mov
add
movsl
bound
pushf
xchg
jno
cmp
add
test
xor
faddl
inc
inc
inc
adc
mov
adc
pop
push
test
mov
fdivrs
push
jae
aam
jbe
jnp
mov
xor
mov
test
lahf
dec
lahf
or
dec
pop
scas
dec
stc
xor
aam
imul
push
add
fisttpll
aas
xchg
fildl
inc
pop
sbb
xchg
ss
cwtl
xchg
std
jle,pn
add
fcmovne
xor
pusha
pop
xchg
std
adc
push
loope
adc
mov
cmp
xchg
arpl
loope
mov
mov
sbb
cmp
pushf
nop
dec
sahf
iret
mov
xchg
jle
dec
pop
psubsw
inc
pop
inc
mov
scas
jl
add
dec
inc
sbb
sub
sbb
imul
ds
inc
fistps
leave
or
andl
lahf
out
arpl
or
lahf
sbbb
test
inc
mov
pop
shll
fs
inc
mov
pop
push
fstl
and
dec
movlhps
jne
loope
cmpsb
and
out
adc
inc
push
add
mov
cli
or
pusha
ss
ss
psrlw
repnz
dec
pop
fmul
stos
push
sarb
push
loopne
xchg
inc
mov
js
pusha
test
sbb
lods
mov
sub
sti
out
lahf
or
inc
and
cli
mov
sti
adc
dec
push
add
in
repz
cmp
cmp
cmc
imul
mov
push
sbb
push
push
imul
add
lds
sti
pop
stc
add
add
pop
pop
stc
into
das
pop
pop
jnp
sbb
stos
insl
jns
repnz
add
popl
adc
adc
ret
hlt
push
push
mov
aam
jnp
push
repnz
xchg
or
mov
or
xchg
mov
pop
fidivrs
ret
xor
aaa
out
jmp
into
mov
enter
xlat
loop
dec
mov
jecxz
jl
ja
sub
pushf
lret
cmc
inc
jg
sbb
jle
inc
cwtl
jecxz
movsl
pop
jmp
outsl
sub
es
daa
in
ljmp
lock
and
mov
test
cmp
pop
sbb
mov
test
shrb
xchg
nop
aad
xchg
scas
icebp
and
dec
ja
lahf
jno
outsb
outsl
bswap
fists
dec
mov
or
jne
mov
shl
push
stos
jbe
inc
pop
out
sbb
mov
fwait
fwait
cmpsl
and
dec
fistpl
push
mov
pop
jge
pusha
xchg
pop
jnp
scas
mov
mov
and
xchg
sbbb
fwait
sbb
mov
mov
into
movsb
xchg
inc
dec
ljmp
pop
fnsave
cmp
lret
push
sbb
cmp
sub
dec
add
sub
std
mov
pop
popf
ffreep
adc
or
or
and
or
je
aas
sbb
sub
jmp
cli
aam
jno
incl
adc
popa
in
inc
in
test
fstpl
aaa
fmull
xor
add
push
outsb
leave
adc
mov
pusha
outsb
sub
pop
sarl
adc
sbb
dec
movsb
faddl
cmpsl
mov
imul
int
das
dec
cmpsb
daa
inc
cld
mov
int
sub
cs
test
aam
cs
std
xchg
daa
jmp
sub
push
enter
inc
or
cltd
pop
pushf
add
jecxz
mov
jo
add
aam
jle
aam
inc
dec
inc
out
mov
cmp
jmp
loope
fwait
inc
les
cmp
cmp
xchg
push
js
pop
mov
push
or
lret
push
adc
sarl
sub
jge
mov
outsb
rcll
idivl
xchg
insl
xchg
cmc
addr16
lret
dec
dec
cmp
les
loope
pop
ret
jle
in
mov
call
lahf
ret
cmp
movsl
inc
xchg
cmp
mov
fcoms
repz
sbb
mov
sti
int
lret
sbb
popf
rcrb
dec
scas
and
push
push
loopne
dec
insb
pop
xor
push
outsb
sub
mov
pop
and
inc
jns
adc
dec
int3
adc
cmc
mov
pusha
xchg
sbb
push
jecxz
aad
sub
mov
ljmp
xor
ds
pop
rolb
arpl
int
loop
mov
pop
je
mov
jecxz
xor
mov
mov
inc
jecxz
in
lahf
insb
inc
sub
out
aas
and
setno
loope
cmp
or
xlat
cltd
pop
test
adc
push
cmp
add
in
xor
pop
adc
js
addr16
sbb
lahf
data16
aam
jb
cmpsb
cltd
jl
movsl
call
popa
and
ljmp
arpl
mov
inc
adc
push
pop
xchg
push
imul
hlt
dec
push
mov
imul
push
lods
les
push
sbb
xor
xchg
cmp
fisubs
stos
and
mov
push
sbb
ljmp
dec
dec
mov
sub
int
xor
or
pop
shl
test
or
sbbl
adc
sbb
fisttps
dec
sbb
test
popf
movsl
out
movb
jnp
xor
popa
fdivrs
xchg
or
jae
jnp
mov
or
test
add
stos
sbb
lods
or
je
push
jmp
or
shl
xor
ds
xlat
mov
stos
add
jne
xor
imul
push
mov
and
jno
pop
imul
roll
inc
xchg
add
stos
mov
mov
jge
mov
pop
out
aad
sub
sbb
mov
scas
and
sar
out
pop
sarl
inc
dec
int
sarb
or
ss
leave
repz
lods
cs
test
cmp
fldcw
or
lahf
pop
cmpsl
adcl
push
les
mov
popa
adc
sub
adc
inc
dec
sub
jb,pn
adc
sub
jl
pop
hlt
push
in
js
mov
fstps
and
scas
push
adc
mov
outsl
push
xchg
hlt
add
dec
cmc
cmpsb
fbstp
bswap
mov
jno
and
jne
pop
out
adc
ss
insb
pop
jg
mov
inc
cli
inc
push
fidivrl
pop
out
into
rcrl
jmp
pusha
xor
shr
negb
jle
sbb
popa
rcll
pusha
jae
lcall
lret
xor
stos
leave
mov
stc
mov
push
jne
pop
rcrb
fsin
fildl
jl
fcmovnu
inc
ja
dec
jnp,pt
mov
xor
aad
ficomps
xlat
mov
repnz
jl
mov
or
lret
jmp
pop
adc
in
dec
and
jle
xchg
xchg
sub
cmp
je
mov
or
fisubrs
sbb
lods
jge
jl
sti
gs
add
mov
cmp
sbb
aam
lea
subl
push
inc
mov
call
leave
mov
movsl
lods
cs
jno
dec
ljmp
xchg
inc
mov
gs
push
cli
dec
jns
add
push
es
test
pusha
inc
cli
ss
fcom
cld
adc
xchg
repnz
push
icebp
aad
ret
pusha
in
jle
sbb
cmp
test
fsubs
adc
fstl
or
in
fsts
lods
jl
jg
sbb
pop
mov
or
and
jnp
lcall
sub
addr16
frstor
sbb
jl
ret
dec
std
cmp
scas
insl
mov
lods
outsl
loopne
iret
iret
movsb
mov
add
push
mov
clc
repz
or
push
lea
sbb
mov
lds
mov
int
mov
out
lods
fildl
add
mov
or
mov
out
out
addr16
lock
and
out
test
mov
fsubrl
inc
icebp
or
es
loope
sub
scas
sbb
and
add
mov
cmp
cltd
enter
sbbb
outsb
add
andb
out
outsl
bound
bound
or
shlb
push
inc
mov
leave
je
out
cmovp
and
mov
jge
dec
push
mov
lds
dec
test
sbb
or
vmwrite
cli
ljmp
dec
mov
sbb
cmp
push
into
inc
mov
int
mov
fldl
jge
add
dec
mov
mov
pop
test
addr16
js
jb
pop
les
push
sub
cmpsb
pushf
ret
je
loopne
mov
push
sub
andl
add
mov
cli
stc
cmp
mov
xchg
ja
add
loopne
mov
mov
jno
ja
and
fwait
adc
pop
dec
mov
aad
dec
les
xor
push
sbb
pop
pop
cmp
push
mov
setno
push
push
xchg
mov
mov
xchg
push
jecxz
inc
adc
lods
and
lcall
out
xchg
les
xor
fmuls
call
sbb
mov
imul
aad
pop
adcl
lds
lods
adc
inc
es
pop
mov
mov
test
mov
ds
pop
sbb
fnstsw
or
jno
xchg
clc
out
mov
cmp
push
mov
stc
or
jp
pushf
pop
mov
outsl
xor
cmp
ljmp
cli
scas
cmp
push
xor
adc
sub
xchg
mov
xchg
xchg
cltd
nop
mov
or
pusha
ss
divl
pop
vmread
lea
pushf
xor
push
pop
lods
nop
jb
cmp
sarl
mov
or
insb
icebp
rcll
stc
and
push
or
dec
xor
xchg
fs
xchg
xor
daa
fidivrl
into
adc
or
inc
xchg
cmp
jo
pop
mov
adc
sbb
call
jae
pop
add
pop
frstor
add
inc
sub
rep
push
pop
out
mov
fcoml
mov
jo
sbb
and
outsl
mov
dec
adc
pop
inc
pop
addr16
jp
in
dec
rcrb
cmp
push
mov
movsl
push
pop
int
fstpl
sbb
push
jp
add
jbe
pushf
push
sbb
push
int3
in
xor
test
outsb
inc
xor
das
sahf
mov
xchg
lock
gs
in
add
xlat
repz
cli
push
pop
mov
add
mov
repnz
pop
add
adc
cmp
fstpt
sarl
sub
mov
pop
dec
imul
cld
sbb
lods
push
add
fidivl
dec
inc
or
inc
jle
push
stos
pop
fwait
lea
repnz
or
ljmp
mov
jge
inc
lods
lds
add
xchg
mov
dec
adc
mov
xor
or
sbb
inc
movl
aas
mov
push
hlt
sub
add
pop
add
leave
or
add
push
lods
cmpb
pop
fsubl
lea
insb
imul
add
insb
sub
lret
mov
int
lcall
cmpsl
jns
jns
in
xchg
dec
inc
cmp
scas
imul
jbe
sub
jl
sahf
pop
movsb
ja
movsb
pushf
aaa
pop
push
mov
or
dec
xchg
adc
into
sarb
mov
mov
imulb
cltd
stos
into
adc
sti
pop
fs
sbb
aad
aam
fadds
xchg
add
xor
fisttpl
xchg
sahf
icebp
mov
int3
loop
mov
xchg
dec
add
inc
fldcw
test
or
dec
xor
mov
fdivrl
or
pop
clc
xor
or
pop
scas
sbb
push
ficompl
lret
inc
icebp
or
adc
jecxz
nop
inc
lds
sub
push
and
cli
push
gs
stos
push
nop
inc
adc
mov
sbbb
xchg
xor
ret
xor
cmpsl
bound
shlb
icebp
add
test
jo
cld
adc
cmp
cmp
push
cmp
pop
jno
push
push
aam
subb
and
bound
xor
imul
add
mov
stos
and
inc
lods
orl
lods
adc
add
sbb
xlat
cwtl
or
cltd
inc
mov
lcall
adc
and
push
push
push
shr
rcrl
rorb
push
pop
jle
pop
test
rcrb
repz
test
adc
add
dec
pop
mov
imull
push
or
xor
aam
sub
dec
xor
and
std
push
stc
repz
mov
jae
cmp
sbb
mov
fndisi(8087
inc
push
mov
xor
or
imul
mov
cmp
or
dec
and
enter
lock
mov
sub
rcrl
pop
fcmovnu
mov
jo
push
pop
mov
iret
fistps
sbb
jno
or
ror
or
out
dec
aas
adc
mov
jo
test
mov
xchg
outsb
push
xchg
xchg
mov
jge
sub
mov
les
mov
or
std
cmp
mov
mov
mov
or
sbb
cs
mov
jb
imul
pop
add
int
sti
cltd
ret
mov
out
xchg
mov
cmpsl
cld
fsubrp
cld
cmp
cs
icebp
fdivl
and
pop
xchg
lods
fldenv
out
adc
xor
and
add
mov
out
movsl
mov
xor
sarb
jl
cmp
and
sti
out
jp
popa
loope
push
sbb
dec
test
ja
mov
shr
push
in
dec
and
jl
and
rcrb
pusha
push
cmp
scas
cmp
mov
jp
lret
adc
add
sbb
jle
or
test
fwait
cmpsl
dec
lods
rcl
pushf
fsts
cwtl
iret
cs
add
sub
sbb
pop
mov
cmpsl
ret
and
stc
fidivs
out
arpl
rcrb
jecxz
sub
add
sub
subb
mov
andb
les
sti
cs
mov
sub
loop
lea
cmp
cmpsl
sbb
push
fmuls
jle
lcall
repz
imul
lret
daa
addl
enter
mov
cmp
dec
or
mov
cmp
call
movsb
fidivs
jno
test
and
outsb
cmp
ds
lcall
js
push
lret
and
cmp
push
push
pop
and
sub
imul
push
mov
stc
jp
andb
push
daa
ljmp
insb
xchg
mov
pop
xlat
shll
cmc
mov
jae
cmpsl
test
mov
push
cwtl
popf
mov
sub
inc
add
mov
push
xor
jne
cli
fucom
addr16
out
pusha
test
and
addr16
stos
fdiv
repnz
dec
sbb
mov
in
mov
mov
jecxz
hlt
mov
add
xor
jne
inc
dec
fisubrs
push
enter
loopne
push
out
dec
fldl2e
hlt
fildll
dec
in
clc
adc
add
cmc
sub
mov
jmp
cmp
test
xchg
jb
cwtl
pop
ljmp
pop
lret
mov
daa
lret
push
cmp
jmp
outsb
jae
sub
fstpl
mov
aad
sbb
lock
add
mov
call
push
xchg
sti
and
mov
mov
add
test
out
xor
in
xchg
pop
mov
es
xchg
jnp
pop
enter
movsl
jmp
out
leave
cmpsl
or
push
xlat
jae
or
stos
imul
sub
cmp
pop
repz
in
inc
xchg
mov
xchg
rorb
stos
add
dec
inc
imul
ja
adc
out
lods
xchg
dec
pop
int3
cwtl
push
call
out
mov
dec
adc
jmp
mov
js
xchg
push
jns
dec
nop
mov
ficompl
mov
push
shlb
lods
bound
cmp
jne
lods
sti
scas
push
call
dec
repz
and
jmp
icebp
iret
push
test
mov
pop
mov
fldenv
pop
push
xchg
jmp
push
xor
dec
inc
testb
xchg
fdivs
lock
xorb
fbstp
or
jno
and
xchg
xor
jl
mov
es
and
jae
cld
mov
xor
and
fmuls
shrl
xchg
int
pop
mov
mov
lea
add
mov
stos
stc
push
dec
or
aas
loopne
inc
push
mov
push
lods
ds
adc
out
test
inc
jbe
andl
lret
out
out
ss
adc
pushf
ljmp
leave
pop
inc
mov
cmp
jp
cs
push
dec
add
pop
lret
or
cmc
cltd
xor
push
sarb
xor
sbb
movsl
and
lea
xchg
fldl
test
in
notb
int3
enter
pop
fucomip
push
jecxz
adcb
je
lock
add
repz
cmp
shrl
inc
mov
pop
movsl
xor
pop
pop
leave
xchg
mov
add
cmp
insl
mov
push
shr
repz
push
popf
dec
fs
mov
dec
std
packsswb
into
cmp
and
lret
addr16
pop
pop
lcall
pop
pop
fnstenv
out
das
mov
push
push
xor
subb
rcr
jae
mov
int3
xchg
sbb
fwait
add
inc
imull
daa
scas
pop
fstpl
icebp
dec
jecxz
add
sbb
movl
cmpsl
out
out
push
cmp
call
pop
pop
inc
push
mov
pop
js
iret
push
mov
cmp
or
sbb
mov
xor
inc
mov
aas
xor
mov
fcomps
icebp
cmp
jo
add
inc
mov
in
mov
cmp
push
mov
jl
jnp
int3
add
lret
out
dec
ret
dec
gs
adc
int3
xchg
push
in
or
cmp
pop
outsl
jge
jns
push
cld
leave
and
int
movsl
call
lahf
jle
ds
test
movsb
inc
mov
inc
mov
fistps
sub
dec
xchg
scas
and
jae
sbb
aam
sub
inc
jae
into
stos
sbb
inc
ss
out
mov
jne
xlat
pop
add
addr16
cmc
hlt
clc
push
inc
push
outsl
push
incl
sub
mov
out
jmp
fistpl
outsl
cmc
fisttpl
mov
mov
loope
mov
daa
dec
jo
pop
std
fidivrs
jo
mov
pop
or
divb
pop
jb
pop
jb
or
pushf
xchg
aad
out
jb
rorl
inc
loope
in
fsincos
enter
cld
and
aam
test
or
adc
mov
and
xchg
addr16
cld
xchg
stc
arpl
mov
inc
xchg
or
cwtl
mov
les
int3
mov
lock
iret
sahf
pop
aaa
dec
ret
mov
cld
in
push
lea
mov
xor
out
out
sbb
mov
outsb
mov
xchg
xor
jno
loope
cmpsl
mov
lods
enter
enter
push
clc
push
fiaddl
mov
rcrl
testb
mov
push
rcrb
xor
inc
xlat
test
in
xchg
or
or
xchg
loope
add
mov
leave
or
xlat
dec
iret
mov
adc
cmp
xchg
push
imul
idivl
dec
jecxz
jbe
clc
pop
scas
or
jmp
and
shl
out
outsb
cmp
mov
les
mov
stos
jbe
sahf
dec
inc
cs
sub
sbb
rorl
cli
lcall
add
xlat
adc
or
xchg
xor
jo
fcoms
mov
movl
jo
loopne
outsl
popf
subb
mov
sub
inc
ret
push
jo
mov
popw
popa
or
fwait
subb
faddp
out
aaa
mov
mov
in
jbe
stos
jle
addb
xor
push
cmp
cmp
mov
sbb
cmp
cmpsb
jg
or
jg
jne
xor
jg
dec
daa
cmpl
adc
push
mov
dec
fsubrs
push
and
divb
in
inc
fidivrs
fwait
insb
push
dec
lods
into
in
mov
cmpsb
icebp
out
xchg
jns
bound
adc
mov
je
clc
rcrb
dec
dec
aam
push
dec
in
test
mov
ds
dec
mov
mov
in
test
jl
sbb
sbb
lods
inc
cs
inc
addr16
cmp
or
pop
xchg
adc
xchg
dec
mov
mov
sub
mov
pusha
pop
push
push
jmp
sti
push
sub
mov
sbb
fidivl
sbb
jge
int3
inc
cmp
dec
pop
pushf
inc
aam
pushf
and
fs
test
jnp
add
cmpl
das
inc
js
mov
test
imul
mov
cmp
lret
jae
xor
out
aaa
add
xchg
mov
xor
add
mov
gs
shrb
xchg
loopne
xor
ret
sbb
shlb
clc
fs
cltd
adc
push
out
or
push
les
xlat
scas
mov
data16
inc
aas
jmp
enter
pusha
mov
and
push
mov
stos
leave
add
loopne
sub
jnp
loop
cmp
cmp
mov
pop
mov
dec
lret
lock
or
neg
pop
outsb
or
dec
sbb
sub
lret
cmp
hlt
mov
mov
jae
aas
mov
push
dec
mov
mov
loopne
cmpsb
sbb
cmpl
mov
dec
fsubs
sbb
cmp
dec
inc
sbb
in
addb
aad
jmp
mov
insl
mull
jnp
mov
roll
sub
adc
insb
xor
lods
pop
fs
sbb
aaa
add
mov
ret
sahf
and
fs
leave
xor
xor
mov
and
jb
push
daa
xchg
or
sbbb
add
and
cmp
pop
je
mov
lea
xor
rcll
cld
leave
mov
mov
jecxz
push
xor
out
fdivr
jb
cmp
push
and
out
dec
out
adc
inc
fiadds
cmpsl
adc
shlb
jle
xchg
outsb
mov
rolb
push
dec
xchg
xchg
jno
dec
sub
add
inc
scas
and
pusha
xlat
pusha
lret
dec
movsl
cmp
add
jmp
int
inc
add
std
sbb
iret
aad
es
bound
pusha
roll
fucomp
xchg
push
inc
sub
mov
inc
bt
cld
lret
lock
sarl
clc
andl
xchg
test
mov
rcrb
lcall
jmp
sbb
cmp
and
xor
lods
mov
stc
imul
arpl
div
inc
pop
and
lock
jle
outsb
rcl
in
dec
pop
aam
pop
clc
mov
pop
mov
sbb
jnp
inc
rorl
jnp
mov
cmpsb
pusha
cli
addr16
mov
jl
xchg
in
or
jmp
aad
scas
xchg
inc
sbb
push
jno
push
outsb
out
or
out
cmp
jns
lcall
mov
lahf
cli
add
fdivr
cmp
adc
mov
test
clc
jne
cltd
test
xor
mov
popa
addr16
xchg
cld
and
xor
and
mov
outsl
jns
aam
pop
loope
cld
roll
sahf
inc
dec
push
adc
cli
daa
jp
mov
jle
test
dec
xchg
push
cmp
xchg
rcrb
inc
aam
cmp
mov
in
mov
adc
pop
out
cmc
mov
fcomip
je
ja
js
fs
jnp
cmp
shll
mov
fldcw
jno
or
lods
or
inc
xlat
mov
mov
popa
mov
mov
push
xchg
push
lret
cld
aam
cli
and
push
test
xor
pop
pop
dec
movsb
int
pop
jge
in
aad
fnstsw
mov
aad
insb
or
fildl
icebp
andl
sub
push
andl
mov
in
inc
add
xchg
pop
clc
jbe
mul
push
pop
xchg
movsl
ret
out
subps
call
jno
fcompl
movsl
shlb
leave
imul
push
add
dec
mov
inc
orb
push
jge
hlt
int
cwtl
sahf
loop
outsb
sbb
pop
mov
cmpsl
and
jg
sbb
faddl
fucom
or
cmc
jo
pop
mov
pop
fidivs
mov
push
mov
xchg
int
mov
es
cmp
addl
jnp
loope
jbe
mov
fs
test
test
jmp
mov
mov
and
dec
inc
popf
int
mov
mov
inc
pop
fstl
pop
inc
push
mov
cli
stos
push
out
jbe
pop
push
mov
mov
loop
mov
testb
xchg
mov
xchg
pop
sub
dec
out
inc
ja
mov
adc
xchg
adc
or
add
jno
xlat
mov
adc
fstpt
jge
leave
xchg
xchg
cmpb
inc
lock
sarl
insl
inc
add
and
mov
adc
movsb
xchg
sbb
mov
rolb
test
fs
data16
test
int3
or
add
inc
and
out
push
mov
mov
inc
or
fcompl
out
mov
xor
pop
sarb
xchg
add
mov
push
jmp
inc
adc
push
inc
xchg
cs
in
popa
call
pop
jae
imul
jge
fistpl
shlb
inc
insb
and
ret
frstor
mov
jns
inc
fidivrs
out
adc
dec
xchg
mov
jns
lret
mov
push
mov
mov
mov
pop
stos
mov
mov
mov
xchg
jb
mov
lods
insb
mov
shl
pop
jecxz
mov
fsubs
xor
mov
push
xor
sbb
cmp
xchg
xor
push
leave
mov
pop
sbbl
lock
and
lcall
push
fwait
cmc
add
cwtl
jno
jecxz
daa
jg
pmulhuw
cmovns
nop
dec
fisttps
cmp
mov
add
js
adc
test
jo
jne
shrb
push
mov
mov
bound
xchg
inc
push
and
dec
rorb
dec
jle
movsb
cmp
push
push
mov
ds
std
lahf
sbb
lret
mov
test
jae
push
scas
fistl
push
cmovp
pop
push
ja
scas
iret
xchg
push
sbb
jb
cmp
adc
pop
mov
lock
es
mov
pop
add
loope
xor
push
mov
lcall
sub
dec
inc
les
cmc
insb
mov
mov
enter
xchg
inc
mov
mov
fiadds
and
shll
test
and
push
cmp
mov
leave
sub
imul
jmp
in
pop
xchg
jle
cmp
inc
out
shll
dec
in
fwait
popf
pop
pushf
xchg
inc
in
mov
pop
cld
adc
xchg
mov
sti
popa
fstpl
mov
pop
add
scas
nop
scas
sahf
or
icebp
jecxz
xlat
adc
pop
ret
int3
jge
js
repz
loopne
pop
addr16
shr
mov
push
add
or
add
cmp
je
push
adc
xor
sahf
jne
cmp
mov
clc
xchg
xchg
test
inc
int3
addr16
ljmp
xor
cs
fnstcw
daa
ja
jle
jp
out
daa
pop
ja
roll
cmpsb
dec
mov
loop
addl
inc
pop
lret
je
mov
in
adc
pop
mov
cmc
cmp
xchg
pop
ret
pop
jno
loope
mov
lods
stos
xor
push
dec
das
mov
mov
push
inc
push
insb
adcl
aad
icebp
arpl
pop
xchg
adc
les
movsb
xchg
push
in
mov
xor
cmpb
adc
mov
or
cmp
fwait
jmp
ret
loope
xlat
mov
int3
push
aam
jo
xchg
mov
lea
nop
fsubp
in
mov
stc
scas
aas
lcall
sbb
cmp
or
mov
das
rcll
cmp
shll
mov
jle
push
xor
add
push
push
sbb
mov
xchg
push
shlb
dec
test
jbe
stc
or
push
mov
mov
and
cmp
cmp
fs
hlt
sbb
sub
jge
call
mov
xor
stc
loopne
insl
dec
or
adc
xchg
faddp
mov
xor
mov
rcrl
mov
popf
xchg
dec
loope
and
or
test
jmp
fcmovnb
push
sbb
bound
mov
jns
jne
push
clc
arpl
mov
fdivs
dec
push
lahf
fnstsw
or
stos
in
and
out
and
movsb
push
cli
test
ret
lods
sub
test
sbb
cli
mov
push
in
inc
aas
popf
pusha
orl
cmpsl
mov
push
push
mov
fistpl
and
mov
hlt
push
inc
loope
fwait
mov
inc
xor
shrl
lahf
jno
sbb
jnp
repnz
pop
lret
mov
jmp
loopne
sbb
test
hlt
shrl
test
mov
clc
jns
add
ret
lea
in
clc
iret
push
push
add
inc
repnz
rcrb
daa
test
jmp
jg
or
jns
push
rclb
ja
aam
inc
mov
ficompl
aas
mov
lea
mov
mov
fcoml
iret
cli
test
sahf
fisubs
add
sbb
fwait
mov
inc
push
sbbb
add
sbb
inc
sarl
cld
mov
movsl
jmp
cmp
mov
mov
lods
push
test
pop
fs
jle
adc
mov
jmp
call
outsb
jp
frstor
mov
rol
cmp
inc
sbb
mov
cmp
mov
add
ja
pop
sahf
add
inc
push
and
lea
lcall
ret
fdivs
add
sub
jo
loope
sbb
movsl
dec
xchg
repz
push
mov
jb
mov
loop
or
shr
ror
sub
lret
push
aam
cmpsb
js
inc
int
outsb
jns
cs
and
movsb
fistl
mov
aaa
ds
mov
pushf
outsb
hlt
mov
cltd
bound
mov
fidivs
mov
inc
adc
jecxz
iret
pop
add
push
ret
cltd
pop
pusha
sahf
xchg
icebp
xchg
stos
stc
int3
mov
in
iret
loop
imul
or
jbe
dec
mov
popf
repz
xor
popf
int
lods
js
inc
and
cmpsl
int3
xchg
cmpl
mov
push
rcr
call
std
lods
cmc
dec
cmpl
pushf
int3
sub
adc
sub
fiadds
jno
jmp
testl
mov
fs
aas
push
push
pusha
dec
sub
pop
repz
lds
lret
loopne
mov
nop
xlat
add
test
and
in
pop
sbb
sbb
divb
pop
movsb
enter
loope
imul
cld
ljmp
test
test
fcoms
mov
mov
aas
cmc
rcl
mov
add
sbb
data16
dec
mov
pop
dec
pushl
cs
xor
call
dec
adc
or
ffreep
and
pop
ja
fiaddl
lods
pop
push
lret
aaa
pop
adc
dec
sub
je
sbb
pop
push
cmp
jne
repnz
mov
and
cmp
rcll
insb
pushl
mov
jo
or
and
dec
orl
fdivp
xchg
fdivs
add
push
or
dec
mov
cmpl
inc
push
test
xchg
inc
fstp
xor
mov
push
aam
jmp
xor
lock
pop
adc
or
xor
rclb
ds
xor
push
mov
fdivs
std
xchg
arpl
sub
lcall
ljmp
xchg
in
fndisi(8087
insl
cwtl
cmc
fidivrl
scas
outsl
ja
imul
into
push
xor
out
pusha
int3
pop
and
insb
bound
outsb
pop
in
gs
cwtl
jno
mov
jg
mov
pop
or
sub
push
push
call
and
outsl
xor
cld
mov
dec
cs
mov
mov
fldt
mov
scas
xchg
and
mov
clc
cmpsl
xor
sti
cmpsl
push
jbe
xchg
adcl
mov
je
dec
pop
mov
leave
pop
lock
stc
clc
push
mov
push
jb
out
dec
mov
push
leave
idivl
mov
dec
mov
addps
andb
xchg
int3
xor
rcll
outsb
pop
fsubs
cmpsl
xor
xchg
arpl
out
testb
push
add
xchg
jnp
cmp
mov
inc
gs
jmp
addr16
mov
mov
or
mov
ljmp
lods
jl
movsb
shl
enter
jle
jbe
imul
mov
inc
xor
icebp
sub
mov
and
lods
pop
sub
movsl
ficomps
pop
imul
jb
lods
sbb
fildll
inc
push
imul
ss
jle
loopne
enter
dec
imul
insb
out
mov
fs
inc
sub
jecxz
jge
xlat
push
fcompl
push
cmp
rclb
repz
loope
sahf
punpckhbw
inc
push
cs
jp
adc
cmp
sbb
sub
subl
jb
cmp
mov
mov
mov
adc
or
xchg
jecxz
loope
jle
xchg
or
or
std
push
in
icebp
mov
arpl
jmp
ljmp
imul
jmp
lods
js
adc
pop
std
mov
out
sbb
dec
xchg
jne
jns
popf
shr
or
xchg
mov
jbe
mov
lea
mov
lods
mov
cwtl
incb
adc
movsb
mov
dec
cltd
in
mov
test
cmp
mov
pop
stos
mul
mov
pop
or
pop
mov
aad
leave
mov
or
push
fistpll
xchg
mov
xor
push
jmp
pop
push
movsl
roll
cli
pusha
leave
mov
jnp
repnz
adc
sbb
sub
xchg
add
aad
push
out
cmp
or
movsl
ja
insb
mov
in
test
ljmp
repz
inc
or
arpl
imul
shll
out
movsb
cld
mov
jb
cltd
dec
inc
out
lret
imul
xchg
mov
fcmovnbe
mov
roll
jg
gs
dec
jno
pop
stc
xchg
ja
rcll
sti
or
fcomps
xchg
push
js
jmp
mov
mov
and
mov
push
lret
inc
addb
adc
cmp
lret
and
subb
fiaddl
add
imul
scas
or
int
mov
mov
jp
fs
lahf
pop
sub
out
pop
lods
dec
out
mov
pushf
cltd
mov
test
pushf
stos
or
push
add
cmpsl
push
in
mov
pop
mov
clc
xor
or
xchg
int
leave
rorl
xor
in
mov
sub
sub
or
inc
jle
addr16
sbb
lock
xchg
mov
push
ret
cmc
andl
jge
pop
cmp
mov
rcll
jecxz
xchg
rcrl
sub
sbb
movsl
or
test
daa
lcall
and
lret
imul
pop
push
jo
mov
xchg
test
push
and
ret
sub
mov
and
jae
outsb
aam
ss
fbld
xorb
sbb
fidivl
in
push
add
jo
out
aaa
mov
test
es
loope
lds
into
xchg
out
ficoml
pop
or
xorb
movsb
mov
nop
inc
jbe
sbb
aas
clc
and
in
xor
mov
sti
cmc
imul
mov
es
cmpsb
fldenv
jge
jecxz
mov
lahf
sub
xchg
inc
roll
cltd
jge
mov
psubw
nop
xor
and
push
je
mov
xorb
insb
jnp
xchg
push
lret
aas
lea
imulb
icebp
jmp
stos
rcrb
fwait
testl
mov
cmp
je
lock
imul
xchg
jb
repz
jmp
jle
jecxz
gs
fiadds
push
loop
xor
and
push
push
xchg
lea
cmpsl
stc
xor
jnp
jo
aad
xchg
icebp
int3
pop
pxor
dec
jbe
test
shl
movsb
add
xor
fldt
stos
jle
xchg
add
andb
push
test
mov
or
mov
push
inc
mov
std
inc
cmpsb
sbb
inc
pop
lds
lret
sub
sub
push
xor
js
pop
push
clc
test
dec
xchg
sub
sbb
repz
mov
inc
repz
mov
push
dec
lods
fwait
shll
std
daa
movsl
push
mov
and
inc
insl
shll
push
fsubr
test
push
push
sti
cmpsb
jmp
adc
sub
pop
std
lret
mov
pusha
cmp
fidivs
xor
sub
jns
sub
cmp
cld
repnz
sub
xlat
je
arpl
cmp
xor
out
fwait
xchg
sarl
push
mov
xchg
out
ret
inc
mov
jmp
arpl
stc
xchg
insb
push
mov
adc
dec
icebp
aam
mov
mov
push
aam
sbb
sbb
dec
xlat
ficompl
call
nop
and
loopne
insb
mov
rcll
popf
shrl
pusha
inc
dec
mov
loopne
or
sbb
cltd
xchg
rcrl
xor
push
cmp
fldenv
add
loopne
fimuls
iret
ftst
sub
xchg
out
and
out
and
or
lods
dec
dec
lea
cwtl
mov
dec
jo
lds
cmp
xchg
push
adc
jnp
xor
xor
sub
sbb
jnp
mov
pop
jns
jge
cmp
inc
mov
test
ljmp
ficomps
pop
addr16
test
fildl
andl
pop
test
shrl
mov
cmpsb
fsubs
out
lret
scas
je
notl
mov
cmp
clc
movsb
add
mov
cltd
push
dec
fucomip
adc
ret
in
or
jg
enter
icebp
and
rclb
ds
imul
xorb
cli
push
rolb
cmp
ja
sbb
pop
enter
adc
push
mov
cmpsb
sub
and
lds
icebp
add
pop
ljmp
test
jno
lret
imul
mov
fldl
mov
lods
inc
sti
cli
pop
ret
fidivrl
mov
int
mov
cwtl
in
xchg
cmp
call
dec
push
insl
mov
imul
jle
mov
adc
lods
add
push
xor
out
fimuls
mov
mov
sbb
loop
push
shrb
sub
rorb
loop
adc
dec
xor
sub
inc
pop
mul
sbbb
pushl
lcall
fnstcw
movb
in
or
andb
mov
data16
inc
stc
clc
add
stc
jne
add
push
lret
js
mov
dec
mov
dec
xchg
add
stc
dec
clc
lahf
mov
or
rorb
mov
nop
cltd
add
movsb
je
movsb
mov
sub
test
repnz
sahf
push
mov
inc
pop
scas
aas
sarl
inc
ljmp
mov
outsl
pop
pop
mov
cmp
jne
pop
or
bound
gs
std
insl
dec
dec
inc
push
pop
pop
or
mov
pop
fs
xorl
fisubrs
or
add
sub
pop
xor
mov
add
sbbb
cli
cmp
fdivl
cltd
sbb
scas
pushl
pop
push
in
in
pop
ss
dec
cmp
outsl
add
cmpsb
and
rol
xchg
xchg
xchg
jae
xchg
or
dec
cltd
cmc
cmp
push
cmp
add
cld
leave
jg
mov
repz
mov
aaa
gs
stc
out
and
scas
out
add
pop
rclb
mov
sbb
shrb
les
jge
iret
xlat
cmp
xor
jbe
and
jp
jne
out
push
sub
insb
jnp
sub
xor
pop
ret
dec
fistpl
push
cmpsb
outsb
dec
in
les
mov
pop
jae
dec
sbb
add
mov
jge
adc
outsl
xor
mov
jmp
lock
mov
mov
fwait
cmp
jb
insl
pcmpeqd
das
mov
xchg
and
mov
les
mov
enter
inc
clc
scas
cmp
mov
pop
fwait
pop
mov
mov
or
push
adc
or
es
pop
test
and
cmp
cltd
stos
ret
scas
jg
or
inc
orb
xor
xorb
loopne
dec
mov
push
aad
xchg
les
insb
pushf
ret
xor
mov
decl
dec
mov
mov
add
mov
add
outsl
push
xchg
lods
dec
testl
popa
push
xor
mov
nop
dec
ljmp
mov
fs
sub
jns
fimuls
pop
std
inc
xor
jg
ja
clc
xchg
push
rcl
mov
lea
xor
std
rclb
in
lahf
ret
lahf
movsl
add
insl
arpl
mov
lods
mov
cwtl
sti
arpl
adc
icebp
in
pop
inc
int3
loope
push
aas
pop
std
ljmp
cld
push
inc
lock
std
dec
out
sarl
cmp
clc
js
das
xor
call
stc
xor
mov
fs
cmpsb
xchg
ds
lock
dec
hlt
xchg
lock
daa
aaa
or
sbb
or
scas
add
sub
cld
mov
mov
sbb
mov
popf
loopne
ret
ss
aam
sub
lods
aad
jo
inc
push
outsl
daa
push
imul
and
popw
stos
out
and
js
arpl
push
pop
sbb
xor
push
rolb
sub
mov
cmpsl
loopne
adc
jle
test
movsl
jnp
rolb
mov
jge
sbb
aam
adc
testl
mov
bound
jp
cmp
into
pushf
mov
arpl
popa
add
mov
add
pop
dec
movsl
ds
fucomi
loope
pop
cwtl
jne
adc
fdivr
aas
mov
add
xchg
adc
push
int
jmp
pop
ja
loope
mov
pop
int3
fsts
inc
dec
fsubrs
add
mov
mov
add
sarl
aas
jb
cmp
xchg
call
xor
lods
jmp
ljmp
test
pop
cmp
cmc
and
push
notl
int3
mov
out
xchg
push
aam
sub
test
in
push
ficoms
and
or
adc
push
cmp
xor
jg
int
inc
or
cmpl
push
call
int
xor
movsb
gs
ja
xchg
sbb
stos
cld
jns
inc
gs
xor
enter
pop
dec
jne
add
lds
dec
push
mov
aam
adc
mov
lret
push
lahf
lock
fucom
in
dec
insl
imul
cmp
stos
xchg
mov
mov
bound
pop
lea
mov
or
fistpl
je
popf
mov
or
lret
xchg
addr16
fs
sarb
xchg
lock
or
sub
dec
cld
jmp
je
aas
into
sbb
sub
dec
lea
nop
cli
movb
std
sub
xchg
jnp
popf
flds
push
sti
dec
lcall
fucomi
mov
fbld
stc
fs
dec
xchg
jb
pusha
das
lods
add
or
and
jg
xor
xor
jne
imul
and
or
mov
and
mov
fidivl
jns
push
clc
inc
lcall
xchg
xchg
cmp
mov
lea
push
mov
adc
jno
cwtl
cmp
pop
xor
jnp
and
add
mov
aaa
mov
aaa
and
adc
mov
inc
jp
bound
and
xor
adc
sub
jnp
into
xorl
in
push
cwtl
mulb
mov
xor
ss
push
cmp
movsb
sbb
push
fnstsw
out
jb
test
insl
dec
ja
nop
mov
cmp
enter
int
cli
mov
in
sub
out
jecxz
mov
stc
adc
mov
xlat
stos
sahf
adc
jle
sbb
shlb
jl
cmc
loop
pop
xor
and
pop
int
dec
mov
pop
lahf
dec
ljmp
mov
sbb
lcall
lods
popf
bound
and
movsl
iret
shll
lods
mov
xlat
or
pop
mov
addr16
repnz
mov
inc
lea
mov
rcrb
mov
jge
jp
push
cmp
ljmp
xlat
mov
jg
jb
insb
mov
jg
enter
out
mov
pop
lds
or
adc
bound
cltd
cmpsb
test
mov
daa
sub
cmp
adc
pop
sub
hlt
imul
sub
sahf
sub
fs
fldt
lods
inc
flds
test
cmpsb
leave
inc
xor
pcmpgtb
lock
lea
cwtl
cmp
or
jmp
ljmp
test
sti
xchg
lds
pop
mov
sbb
sub
push
inc
mov
in
orl
sub
cmp
shll
and
stos
dec
dec
movsl
add
cltd
cmp
daa
je
mov
aam
dec
dec
lahf
pusha
pop
cmp
jl
or
dec
cmc
pop
cmp
or
fcoml
inc
aad
pop
aad
mov
and
push
in
inc
push
out
jmp
push
mov
inc
enter
pusha
dec
cli
aaa
mov
shr
dec
adc
shlb
and
in
inc
pop
xchg
fwait
xchg
or
cs
pop
data16
cmp
push
push
pop
mov
scas
xor
lea
cli
popa
je
mov
std
bound
cwtl
push
mov
mov
jg
lea
fisttpl
mov
stc
outsb
ds
lahf
mov
ja
fwait
test
shrb
mov
cmovo
ret
xor
mov
loopne
mov
and
hlt
mov
or
and
xchg
xchg
lods
jno
mov
mov
push
pushf
inc
out
sbb
lcall
call
cmpsl
mov
out
out
nop
cwtl
es
jle
sub
gs
pop
mov
loopne
stos
mov
pop
xor
jge
fmul
data16
lret
push
loop
aad
inc
fldt
jno
cmpsl
cmp
and
mov
jecxz
push
push
out
gs
push
je
dec
js
inc
mov
imul
hlt
out
push
sbb
adc
dec
jo
lods
jnp
loopne
mov
pop
inc
ficompl
mov
add
and
std
sub
shrl
cld
insb
fucom
jbe
jae
fbld
imul
push
js
loope
sbb
mov
loope
mov
or
cmp
ja
dec
inc
mov
outsl
cmp
cmp
sbb
dec
ljmp
lret
clc
sbb
leave
jge
xor
out
push
push
sub
data16
in
call
imul
sbb
inc
sbb
daa
scas
inc
push
mov
shrl
mov
aad
pop
pop
jl
mov
std
out
jo
jmp
scas
push
sub
adc
xchg
ret
mov
lahf
daa
bound
or
fcom
sbb
orb
or
mov
add
rorl
dec
and
call
out
test
dec
inc
inc
jb
es
idivl
nop
adc
das
scas
cwtl
xor
outsl
pop
or
or
mov
inc
insl
push
cli
mov
in
or
and
xchg
push
inc
cmp
inc
inc
mov
out
jecxz
add
lret
ret
cld
push
mov
cwtl
popa
mov
subl
pushf
aam
es
mov
lahf
jmp
cmp
and
test
push
lods
jne
dec
push
xchg
jns
repnz
jmp
jle
add
sub
jns
mov
pop
aaa
decb
sbb
xor
add
ret
inc
sbb
loopne
negb
inc
xchg
add
or
push
insb
mov
mov
cmpsl
pop
data16
mov
sub
aas
cmp
push
outsl
add
push
jecxz
fisubl
lods
add
adcl
add
daa
jecxz
mov
popf
mov
lods
sub
push
xchg
mov
mov
adc
cmp
je
rorb
cmpsl
mov
cli
xchg
mov
xchg
or
xor
mov
lcall
movsl
ret
mov
test
je
lcall
adc
fdivs
cmpsb
push
into
icebp
es
mov
jp
xor
xchg
dec
mov
fst
dec
add
pusha
call
mov
add
int
test
adc
xchg
and
lret
pop
gs
adc
aam
mov
stos
test
lea
aas
sbb
mov
xchg
mov
xchg
or
add
jae
test
int3
xchg
ds
xchg
sub
dec
pop
stc
mov
pop
dec
dec
bound
and
xchg
test
fldt
xor
jmp
data16
cmp
les
mov
jns
mov
sbb
inc
movsb
scas
ljmp
insb
ss
mov
xor
into
out
cld
pop
lcall
cmp
ds
fwait
dec
out
movsl
cwtl
ds
push
xor
subl
or
push
push
imul
es
and
cmpsb
aaa
push
scas
adc
fiadds
test
pop
sub
push
sub
in
test
cmc
pop
mov
imul
sbb
xchg
xchg
and
scas
push
dec
xlat
sbb
insb
dec
test
or
jbe
mov
fcoms
in
fistpll
push
jl
fsts
or
xchg
or
frstor
adc
hlt
cmp
popf
mov
loop
orb
lea
lret
cmp
sti
movsl
dec
sbb
adc
arpl
jg
mov
lds
push
or
shrb
rcrb
lahf
pop
pop
adc
fistl
jle
mov
jmp
jmp
lret
xchg
scas
stc
lahf
push
insb
addr16
dec
sub
or
insl
cmpsb
push
push
sbb
add
popf
mov
mov
inc
scas
cmc
into
push
xchg
enter
pusha
mov
cwtl
adcb
jl
lcall
divb
cmpsb
cmp
hlt
insl
fwait
jl
dec
fcmovb
fsubrl
mov
or
inc
sub
jmp
data16
rorb
mov
adc
mov
xchg
add
inc
dec
push
into
xor
imulb
sbb
addb
ja
es
cwtl
popa
and
cwtd
scas
sbb
lahf
roll
and
and
xor
dec
popa
sahf
jp
pop
or
pusha
push
out
cli
cmp
push
dec
cmp
icebp
sbb
jmp
pop
or
lock
or
imul
incb
inc
fs
and
xchg
pushf
addl
mov
mov
popa
sbb
in
cmpsb
jmp
add
mov
push
mov
das
push
cmp
inc
cltd
das
std
aas
add
aad
push
dec
mov
rcrl
lods
loop
out
pop
mov
data16
pop
lods
sub
and
mov
add
and
popa
jb
js
stc
inc
or
inc
and
cmc
imulb
ds
notb
fstps
mov
inc
jns
xchg
adc
jns
inc
sarb
into
push
mov
cmpb
cmp
decl
mov
cmp
cmp
push
sti
lods
mov
push
icebp
inc
test
subl
ficomps
add
aam
testb
ds
sub
loop
rorb
insb
repnz
cmp
in
daa
pusha
aad
insl
sub
ret
sti
inc
jmp
or
mov
push
test
pop
mov
imul
cmp
adc
repz
add
iret
dec
sub
iret
and
or
sub
stos
pop
dec
fcomps
inc
add
cs
mov
popa
push
ds
cmpsl
mov
fists
jb
std
mull
out
pop
or
pop
sbb
push
test
inc
push
pop
xlat
mov
mov
push
add
pushf
loopne
xchg
ret
jmp
das
sub
lods
sbb
xchg
js
push
sbb
cli
and
movsb
or
xor
ss
popf
and
ret
xor
cltd
jns,pn
aad
ja
mov
pushf
sub
cmp
push
in
cmp
jg
sub
movsb
stos
dec
ljmp
xor
rolb
insb
mov
or
cwtl
daa
shlb
dec
and
or
mov
addr16
xchg
js
enter
imul
add
call
jp
fwait
jb
sub
jno
sub
call
pop
outsl
push
dec
adc
jle
icebp
icebp
mov
jecxz
aam
mov
cmpsb
add
mov
cmp
xchg
mov
or
sub
mov
jmp
pop
jo
inc
jg
scas
mov
sarl
add
dec
out
aam
sti
xchg
mov
fcmove
sub
addr16
add
es
dec
xchg
arpl
ss
fistpll
sub
int3
cmp
mov
ret
mov
sub
js
mov
pop
ja
out
adc
fdivs
int
adc
xchg
sbb
fwait
dec
mov
jae
imul
dec
sbb
and
cmc
pusha
pop
mov
xor
fiaddl
sbb
push
lds
xor
pop
xchg
pop
jo
hlt
test
fmuls
push
out
xor
or
mov
lock
mov
subl
call
jb
es
lds
add
mov
mov
movsb
push
dec
pop
dec
mov
push
stos
fsubs
les
sbb
shlb
popf
pop
das
mov
xchg
mov
mov
insb
ss
rol
jbe
pop
ljmp
sub
xchg
cwtl
fs
cmc
dec
and
scas
out
cmp
idivb
push
fimull
mov
inc
push
rcrb
jne
jmp
out
and
jno
mov
pop
test
xor
ja
aas
push
rcl
sub
gs
jmp
push
push
add
dec
push
cmc
subb
sbb
test
sahf
xchg
and
xchg
test
dec
rcrb
test
jno
jnp
pop
outsl
add
inc
or
test
sub
jb
mov
test
je
leave
mov
mov
mov
test
int
mov
xor
mov
out
push
mov
rorl
dec
cmp
or
sahf
cmpl
cmpsb
xchg
sub
or
mov
rcl
mov
rorl
outsl
dec
jge
test
xor
cwtl
je
dec
fwait
xchg
and
jl
dec
ljmp
or
xor
daa
imul
ljmp
cmp
clc
xchg
mov
movsl
add
dec
push
push
fdiv
cmpsl
or
movsl
inc
loope
sub
push
cmp
cwtl
fnstsw
clc
and
imul
sarl
inc
xlat
inc
mov
leave
movsl
lcall
test
inc
push
jge
imul
or
cmp
int
imul
inc
ficompl
ret
ja
push
rorb
push
ljmp
mov
xlat
sub
sbb
lea
xlat
and
mov
mov
sbb
pop
sbb
xor
xchg
cmp
pop
sbb
clc
cld
fstpt
push
sub
pop
jmp
into
cmp
repz
sbb
into
test
cltd
mov
xchg
add
pause
adc
int3
mov
dec
dec
test
faddl
mov
xor
jnp
mov
lods
jnp
cmpsl
jae
ret
or
test
xor
clc
dec
pop
jp
int
inc
imul
mov
inc
jmp
sub
cmp
xor
jne
mov
xchg
and
mov
popa
movsl
lea
into
das
aas
shrb
mov
cs
mov
repz
popf
add
mov
test
xlat
adc
lret
jl
int3
pop
stos
adc
mov
cld
cs
adc
jge
in
iret
in
jmp
xchg
addr16
jmp
pop
repnz
mov
mov
stc
sub
pop
add
mull
jl
daa
jle
insl
imul
xchg
and
leave
mov
push
js
mov
push
pop
pop
rorl
mov
lahf
push
push
test
out
sbb
std
push
repnz
mov
das
mov
out
xchg
inc
out
scas
je
cld
push
mov
lret
cmp
xlat
rcrl
dec
cmp
mov
rcl
dec
lahf
mov
mov
lret
sub
popa
enter
sub
or
jge
les
xor
or
lods
or
mov
mov
mov
cli
lock
movsl
pop
xchg
cmpsb
mov
add
xor
in
mov
mov
in
fwait
mov
ret
sahf
push
xor
lock
mov
enter
pop
mov
cli
adc
or
subl
test
inc
and
mov
into
jle
decb
sub
and
sub
add
aad
imul
mov
aaa
aas
pop
fistpl
jg
fbstp
js
arpl
les
jne
andb
cs
das
xor
ss
xor
pop
xor
call
jnp
movsb
or
sbb
ja
adc
mov
xchg
xchg
and
or
or
je
xchg
int
sbb
popf
outsl
mov
test
lcall
pop
lcall
call
push
cltd
xchg
ret
dec
sub
xchg
xor
mov
sti
iret
cmc
xchg
lods
jae
or
mov
jo
jmp
inc
xchg
mov
pop
orb
xchg
idivl
popa
mov
test
push
sub
addb
cmpsb
sbb
ljmp
repnz
ret
ss
adc
cmpsl
jnp
or
xchg
shrb
imulb
push
fstp
fcomps
repnz
jno
mov
pop
pop
adc
add
push
cmpl
push
orb
popf
xor
mov
roll
xchg
stos
in
sub
push
scas
jo,pn
mov
subl
inc
pop
sahf
je
hlt
push
sbb
push
ret
fcompl
mov
jns
dec
dec
shll
ret
imul
xor
stos
push
call
in
std
outsl
hlt
repnz
xchg
jp
jle
into
adc
fcomps
ja
mov
xor
movsl
dec
xchg
cltd
mov
test
adc
cmp
push
outsb
ret
sahf
js
xchg
imul
adc
or
sbb
push
push
dec
addr16
iret
mov
cmp
nop
add
in
sub
push
mov
int
rclb
stos
ds
dec
xchg
adc
mov
ds
addb
adc
bound
jbe
mov
paddb
test
inc
mov
jne
clc
in
cmp
dec
mov
stos
push
xor
adc
shll
push
pop
lea
mov
stos
mov
outsb
mov
add
cld
and
into
and
push
pop
pop
jge
pop
xor
stos
lahf
iret
jae
mov
test
push
into
adc
std
and
xchg
mov
sub
sub
xchg
ds
inc
jge
mov
push
mov
rcrb
popa
lods
inc
pop
sbb
and
gs
add
jge
mov
aaa
jmp
out
inc
or
insl
sbbl
inc
fcmovne
negl
sub
pop
imul
mov
adc
outsl
mov
add
hlt
cld
xchg
cwtl
aas
bound
mov
stos
cmp
stos
icebp
test
add
leave
cmpsb
in
add
repz
pop
movsl
jecxz
aas
or
jb
lret
jns
outsb
cmc
cltd
ss
data16
dec
sbb
addl
or
in
jbe
mov
call
cltd
cwtl
adc
negb
inc
inc
sahf
das
jne
sub
dec
andl
xchg
cmp
adc
mov
jl
loopne
and
addb
sub
xor
push
out
cmp
pop
sub
add
outsl
xchg
push
and
loop
cli
repnz
lea
sub
test
dec
xchg
and
enter
movsl
loopne
ret
adc
pop
push
insb
fcmovnu
adc
or
mov
push
cmp
out
jae
sub
mov
sbbb
mov
loope
jbe
sbb
cmp
pop
push
cltd
ljmp
push
mov
jbe
cmp
call
imul
mov
pop
imul
cmpl
imul
cmpsb
add
cmp
mov
popfw
adcb
sub
dec
mov
mov
mov
aad
jno
sbb
mov
lcall
sahf
xchg
or
lret
sbb
rcrb
mov
or
xchg
push
cmp
xchg
int3
jmp
iret
mov
fidivs
cmc
repz
cmp
fs
repz
pop
scas
int3
pop
in
pop
outsl
pop
pop
cmp
mov
loopne
push
or
add
outsl
sub
xor
mov
xchg
sahf
mov
xchg
enter
xchg
shll
loope
fnstsw
dec
sub
popa
lret
lods
leave
aad
jge
mov
aaa
aaa
xor
out
lret
pop
daa
push
mov
fsubrl
xchg
jg
outsb
out
sbb
arpl
stc
sbb
idivb
fwait
cld
jb
leave
add
dec
cmp
mov
popf
aas
adc
lds
jp
add
jmp
xchg
pop
popl
mov
stc
popa
mov
lea
and
or
pop
ret
add
jle
out
fwait
mov
pop
testl
cmpl
mov
or
and
lret
add
pop
adc
movsl
xor
sbb
mov
ljmp
ficoml
ljmp
fsubr
out
adc
push
jne
fcomi
sub
add
shrl
gs
cmp
mov
dec
sub
rclb
fildll
je
enter
ja
adc
mov
lock
and
in
cmp
xbegin
inc
dec
jp
lds
jge
sub
testl
call
cmpsl
lods
andl
or
push
mov
push
mov
ret
jbe
sbb
sbb
xor
dec
mov
ljmp
xchg
cmp
cltd
mov
pop
jecxz
jns
lods
icebp
push
xor
sub
test
xor
inc
mov
mov
sub
push
adcb
ja
dec
lret
hlt
xlat
jno
pmuludq
int3
ljmp
jl
jb
mov
ds
push
lods
adc
stc
stos
movsb
movsl
xchg
mov
mov
fidivrl
mov
mov
bound
dec
xlat
jmp
add
push
mov
push
repz
add
mov
dec
xor
xor
push
sti
mov
sbb
mov
xchg
adc
cs
mov
jno
daa
lods
inc
mov
das
mov
mov
mov
dec
mov
sar
sti
stos
iret
in
ljmp
ja
pushf
shll
adc
lahf
mov
fcom
push
andl
xor
add
dec
or
subl
in
cmp
adc
in
jmp
mov
sahf
adc
jl
insl
leave
faddl
adc
ljmp
and
or
xchg
jbe
sub
fildll
sub
pusha
push
and
jbe
jbe
adc
inc
cs
sub
mov
mov
sbb
and
pop
sbb
mov
ss
fildl
cmp
lods
lea
ja
into
add
aaa
push
das
loop
sahf
jmp
cltd
mov
je
dec
ffreep
pushf
mov
out
cmc
and
scas
fwait
dec
in
bound
pop
out
or
or
lds
sti
sbb
push
fisttpl
ja
mov
enter
ficomps
out
outsb
push
dec
xor
xor
or
cmc
cmp
nop
pop
stc
xor
lock
scas
mov
mov
fistpll
jle
test
xchg
mov
in
push
xor
in
mov
mov
roll
aaa
cmc
dec
and
jg
cs
popa
pop
insb
popf
xchg
sub
adc
cmp
fcom
mov
fisubrs
mov
out
xchg
lods
add
add
mov
pop
out
iret
das
leave
xchg
or
je
inc
and
adc
lods
xor
loopne
and
adc
and
xchg
clc
ficoms
jns
stos
sbb
cld
stos
jecxz
and
sti
mov
xchg
mov
test
inc
mov
mov
or
dec
mov
sbb
std
gs
inc
imul
mov
and
pop
cld
sahf
das
in
inc
lcall
mov
fcmove
iret
mov
xchg
lahf
pop
pop
sub
outsb
lret
sub
pushf
rorb
gs
hlt
test
add
lret
jbe
inc
sub
test
add
mov
jo
push
into
add
or
cltd
xor
or
jo
pop
sub
jne
xchg
mul
movsb
push
adc
xchg
stc
das
dec
or
mov
addr16
xor
sbb
aas
test
into
xchg
sbb
mov
aam
std
mov
or
es
jl
roll
in
repnz
mov
clc
clc
enter
pop
adc
in
push
loopne
imul
sbb
mov
push
jb
fldl
sbb
outsb
jbe
push
xchg
int
adc
dec
cmp
dec
sub
inc
xchg
repnz
sub
inc
orl
fdiv
xchg
push
stc
cwtl
nop
mov
push
cmovae
cmpsl
popa
les
mov
shrl
or
clc
inc
dec
leave
or
xlat
jne
mov
loope
hlt
aam
fcoms
ret
iret
jge
mov
stos
push
daa
mov
fmul
push
xor
addl
mov
into
fistps
jp
mov
enter
scas
lods
xchg
xchg
add
mov
jmp
icebp
testl
fcoms
scas
cmp
sub
cld
adc
inc
push
arpl
popa
and
and
inc
xor
pop
mov
jecxz
stos
enter
add
dec
incl
push
sub
cltd
mov
dec
pop
fisubrl
sbb
jnp
mov
inc
jmp
test
gs
out
leave
ja
ljmp
les
inc
sbb
sub
and
test
mov
aam
jmp
mov
popf
fdivr
jge
dec
push
stos
gs
or
leave
rcrl
xor
movsb
add
push
shll
jne
addr16
out
sub
dec
mov
mov
sub
pusha
push
fmul
or
andb
ljmp
add
xchg
sub
xchg
cltd
in
mov
lock
jge
push
mov
sbb
sbb
lcall
insl
fdivp
in
outsb
popa
jp
jmp
aaa
sub
pop
inc
rorb
int3
and
xor
inc
xchg
mov
iret
lock
sbb
push
les
lods
mov
xor
mov
and
push
mov
fnsave
inc
add
add
cs
cld
and
dec
cltd
jns
xorl
ja
popa
pop
add
sub
test
sar
fistpll
inc
jp
cmp
pop
jo
hlt
sahf
mov
push
lds
sti
jno
push
fimuls
sbb
je
xlat
mov
rorb
or
cs
add
in
xor
mov
lret
std
fldcw
icebp
mov
xor
xor
in
inc
sub
nop
and
imulb
pop
sub
mov
adcb
clc
xchg
add
and
jecxz
shrl
or
xchg
add
out
sbb
xchg
sti
fistpll
fidivrs
pop
loope
push
decb
shlb
pop
fnstcw
and
icebp
mov
or
iret
lret
out
lods
aaa
popa
or
test
push
xchg
scas
adc
fmuls
test
inc
jb
in
add
sbb
into
ljmp
aad
lea
xlat
subl
dec
mov
movsb
jg
push
andb
mov
jg
pop
test
sti
aaa
loop
mov
cmpsl
cmp
mov
mov
popa
adc
sub
mov
out
sbb
xchg
enter
mov
jo
outsb
xchg
xchg
xchg
outsl
push
and
jb
mov
xrelease
icebp
aaa
push
adc
lret
mov
jmp
rol
test
mov
xchg
adc
fwait
pop
and
fcompp
xlat
jne
lds
xor
jbe
add
insl
sbb
pop
icebp
mov
sbb
in
mov
shll
or
data16
cld
or
mov
cmpsb
arpl
push
fwait
mov
dec
lret
mov
in
mov
or
ret
or
mov
movsb
and
pop
xor
xchg
dec
jmp
scas
int3
jl
fdiv
mov
pushf
rcrb
push
loopne
ret
pop
lcall
addr16
xchg
fiaddl
fidivl
push
cmp
dec
insl
pop
pop
loopne
daa
ret
test
pop
mov
adc
loop
les
arpl
xchg
loope
cmp
cmc
mov
jns
sub
cmp
arpl
mov
lret
enter
mov
adc
mov
push
push
in
add
test
and
push
jne
fwait
movsl
and
mov
sbb
mov
mov
testb
imul
or
and
aas
fadds
adc
add
xlat
pop
lods
xorb
inc
cmp
pop
lods
lods
shlb
imul
mov
mov
punpcklwd
mov
lock
dec
int3
add
fdivrs
int3
add
out
adc
and
lret
mov
mov
dec
idiv
fdivs
pop
repz
add
arpl
lock
and
out
popf
ret
pop
int
mov
inc
inc
test
mov
sahf
inc
mov
add
inc
sub
mov
jo
lcall
dec
adc
jp
repnz
mov
fsubrl
decb
sub
int
aad
mov
loope
fxch
mov
pop
pop
iret
aaa
lret
repz
pop
ret
ljmp
dec
pushf
sbb
lret
enter
or
mov
vmovaps
mov
in
or
cmp
dec
ja
into
xor
sub
sbb
add
sbb
cmpps
push
and
mov
adc
pop
ljmp
rclb
pop
cmp
adc
cmpl
dec
and
jo
inc
fildll
bound
int
inc
lods
aam
cltd
cltd
cwtl
sub
stos
pop
push
out
push
pushaw
xor
clc
leave
fsts
loop
add
add
test
bound
lret
stc
cmpsl
subb
inc
cmp
mov
or
std
push
icebp
addr16
in
dec
stos
pop
inc
iret
stos
out
repnz
mov
stc
iret
lret
stc
out
out
xor
aam
incb
pop
mov
movsb
push
jno
xchg
test
loop
enter
fiaddl
jnp
stos
pop
pop
pop
jl
or
inc
ret
sahf
icebp
popf
lods
stos
adc
adc
js
fadd
addl
mov
fwait
mov
cmp
sub
xlat
aaa
mov
scas
adc
and
rol
sahf
sub
push
jl
or
inc
adc
aam
mov
sbb
pop
inc
stc
loop
push
out
outsb
mov
dec
lret
cmp
xchg
inc
repz
stc
std
push
mov
xor
imul
mov
ja
mov
or
pop
dec
leave
out
pop
mov
insl
iret
jnp
je
xor
outsb
hlt
int3
sbb
push
dec
cmpb
adc
dec
xor
mov
es
mov
adc
xchg
fidivs
adc
leave
pusha
call
xor
shlb
mov
loope
inc
into
ret
shr
and
int
pushf
push
and
mov
and
or
out
aas
les
je
aaa
cs
sahf
popf
dec
pop
dec
inc
mov
pop
adc
add
mov
bound
xchg
sbb
push
pop
shll
jns
and
test
add
cltd
sbb
or
mov
mov
lods
or
jecxz
lret
rol
xchg
jp
jge
ds
pop
adc
pop
jmp
pop
insb
push
or
in
xchg
or
sub
hlt
xor
pushf
or
imul
or
cs
cmp
and
cmp
sub
adcl
mov
mov
mov
mov
mov
xchg
fimuls
push
clc
stos
loopne
push
sbb
push
dec
jmp
rcll
pop
sub
xchg
and
cmc
repnz
rol
mov
or
inc
pop
xchg
divl
dec
ss
pop
loope
xlat
sub
or
aas
xor
dec
xchg
mov
dec
lds
inc
mov
pop
mov
iret
stc
dec
flds
lock
push
sub
or
mov
push
icebp
xchg
test
add
and
pusha
fsubp
insb
in
shrl
rcr
testb
jle
sbb
mov
mov
xchg
adc
mov
inc
mov
dec
dec
mov
cmpsb
adc
mov
outsb
out
arpl
repnz
mov
xor
push
push
std
jmp
mov
sub
js
data16
or
testb
scas
shll
mov
mov
fstpl
repnz
aam
mov
in
cmp
push
jne
rclb
je
mov
scas
shl
sub
jnp
dec
mov
pop
cs
loopne
or
aaa
inc
mov
add
xchg
mov
xchg
mov
repz
sbb
fcmovnb
xor
ljmp
xchg
pop
ljmp
mov
jne
xchg
mov
add
sbb
cmp
ffree
sub
scas
cli
scas
xchg
movsb
push
mov
imul
sub
and
xchg
test
pop
inc
aaa
in
pop
sub
ljmp
adc
mov
pop
xchg
xor
testl
inc
call
adc
shlb
or
sub
sbb
fildl
lcall
loope
mov
jmp
aas
dec
imul
jo
xlat
fs
fadds
sbb
push
inc
mov
dec
adc
jns
push
shll
das
inc
int
dec
into
inc
mov
inc
mov
sub
inc
fdivl
pop
ret
out
or
push
jp
shll
nop
and
ficomps
cltd
pop
ss
scas
add
or
aad
jle
outsl
xchg
lret
sub
iret
xchg
rorb
aaa
pop
mov
gs
repz
jge
popf
js
daa
sub
addb
sahf
jnp
sbb
xchg
xlat
ljmp
out
ja
push
xchg
movsb
cmp
or
xchg
jbe
loop
stos
aad
std
lret
inc
pop
or
cmpsl
cs
test
cltd
cld
sub
fs
lods
dec
xorb
jnp
xchg
pop
add
push
sbb
rcrl
xchg
insl
xchg
js
or
std
imulb
cmp
decb
sarl
out
daa
xlat
aam
fildl
inc
jmp
push
std
add
mov
out
pop
and
mov
push
hlt
mov
iret
shlb
xor
sbb
and
xchg
add
jbe
mov
push
xchg
rcrl
push
cmpsl
mov
cld
ss
leave
popa
add
pop
imul
fistps
xchg
push
xor
ss
rcr
cwtl
xor
loop
loope
repz
test
push
sub
stos
popf
scas
mov
out
pop
jno
mov
xor
mov
lods
xchg
add
in
outsl
lock
insb
pop
add
iret
rorb
pop
rcll
incb
stos
pop
stc
loopne
mov
mov
outsl
jp
mov
inc
cld
and
call
or
jnp
lret
pop
cmp
cli
add
cmp
sub
inc
cmpsl
dec
mov
dec
testb
repz
cmc
cmp
in
jb
fcmovu
mov
jnp
lcall
aam
adc
imul
and
inc
xchg
out
sub
sbb
jg
mov
mov
jle
pop
xor
call
jg
dec
lret
add
fs
push
pop
xchg
push
in
ja
xor
adc
pop
test
insb
xor
roll
test
push
mov
or
repz
ja
pop
lret
pop
lods
mov
lods
cli
fcomip
cmp
bound
out
pop
cld
cmc
movsl
push
jbe
add
stc
add
outsl
bound
pusha
push
fsubr
fldln2
sbb
mov
ficompl
xorl
cltd
sbb
inc
push
xor
xchg
jp
pop
add
push
je
adc
pusha
sbb
xchg
call
pop
subb
jle
les
in
mov
call
test
cli
lcall
insb
push
sbb
scas
shll
xor
shrl
dec
repz
sbb
xchg
pop
popa
lods
aas
bound
pushf
arpl
sti
xlat
pop
dec
icebp
xor
pop
ss
jl
scas
push
jg
xor
jbe
mov
pushf
outsb
mov
bound
xor
shrb
cld
push
aas
cltd
out
in
out
das
outsl
cs
mov
xchg
mov
add
dec
jno
cld
inc
jecxz
lret
pusha
sbb
call
nop
add
test
pusha
cli
dec
ljmp
pop
push
adc
mov
aam
repz
xor
pop
xchg
test
inc
dec
mov
xchg
lret
cmp
or
mov
mov
or
leave
dec
shlb
loop
std
js
sub
push
pop
xchg
mov
sub
inc
jecxz
fsts
sub
insl
mov
cltd
xor
in
call
xchg
inc
stos
mov
jge
shll
pop
pop
jno
iret
xor
insb
add
lret
jge
repnz
push
stos
iret
jge
scas
frstor
in
xor
push
push
arpl
in
bnd
dec
ss
dec
enter
dec
mov
xchg
xor
pcmpeqw
sub
dec
in
call
daa
shlb
stc
call
pushl
mov
cmp
fimuls
std
stos
add
push
mov
out
mov
sub
xor
iret
cmp
jbe
add
loopne
insl
pop
xchg
sub
cmpsb
add
lods
cmpsl
dec
das
daa
data16
ffree
xor
xchg
adc
subl
adc
bound
repnz
jb
popf
cmc
cmp
sarl
insl
js
ficoms
dec
mov
das
shlb
mov
in
or
jmp
pushf
xchg
inc
push
xchg
cmp
sbb
jmp
sti
push
sahf
fwait
test
imul
ret
sub
cmpsl
jg
cmp
clc
push
mov
mov
rcrb
aam
lods
and
push
leave
mov
divb
mov
outsb
cmp
fadds
and
sub
mov
inc
xor
dec
mov
adc
or
rorb
mov
pop
jp
addr16
mov
add
sbb
or
and
out
inc
xor
cltd
js
dec
mov
scas
ss
xor
push
pop
outsl
fnstcw
bound
adc
fbld
adcl
jo
cld
sbb
ret
and
loop
nop
cmc
hlt
arpl
es
jmp
popa
xor
arpl
pop
cmp
mov
rorb
pop
adc
cwtl
jle
cmp
or
test
fildll
jl
fwait
mov
cmpsl
xor
mov
shrl
es
fdiv
add
lret
mov
in
push
jno
in
or
xchg
jmp
mov
xchg
add
jp
int3
shlb
add
jmp
mov
insl
and
mov
repnz
test
xchg
push
adc
enter
fdivr
add
push
mov
int
loop
cwtl
pop
mov
cmpsb
mov
inc
dec
push
add
movsl
jb
aaa
xor
adc
or
icebp
mov
dec
cwtl
sub
dec
gs
and
ljmp
sub
add
lods
mov
and
cmp
mov
jae
repz
and
jle
outsb
sbb
imul
insl
jo
insb
adc
aas
scas
add
mov
or
lret
adc
pop
xor
cmpb
imul
call
imull
daa
out
mov
mov
lret
fcoms
cmp
cmpsb
mov
cmpsl
inc
imul
sub
pop
mov
jecxz
push
jbe
and
inc
pop
inc
imul
mov
mov
mov
jbe
scas
or
adc
inc
imul
orl
adc
or
dec
int3
and
mov
push
pusha
rol
movsb
gs
mov
cmp
pop
pop
bound
push
pop
icebp
addr16
mov
push
inc
sti
cmp
andl
ljmp
mov
out
ja
mov
dec
mov
lcall
push
inc
test
test
push
popa
idiv
push
xor
imul
imul
in
jb,pn
stc
push
xchg
data16
sarb
mov
pop
mov
shlb
jmp
hlt
clc
xlat
jae
shrl
or
and
mov
jae
shll
mov
rorb
mov
in
sahf
mov
ss
sahf
fnstcw
dec
or
sub
insb
jge
addr16
and
jae
je
aad
pop
jecxz
mov
clc
cmpsb
dec
push
test
fnsave
mov
rclb
sahf
cld
cmp
rorl
fldenv
push
nop
mov
leave
pop
xchg
negl
xorb
sarl
xlat
test
xchg
mov
pop
cli
mov
and
inc
adc
lods
mov
cmp
imul
mov
out
pop
and
push
stos
push
push
mov
mov
std
pop
sub
fdivrs
dec
fdiv
pop
add
fst
bound
push
and
ja
add
popa
lret
inc
jnp
shlb
testl
ds
lahf
inc
mov
xchg
std
mov
pop
in
xor
movsb
nop
xchg
pop
push
shlb
addr16
fsts
roll
test
xchg
fbstp
aas
ljmp
pusha
xor
dec
in
movsb
popf
and
shlb
pusha
sub
iret
xor
fs
addr16
inc
pop
pop
aad
mov
and
push
cmp
int3
sub
negl
repnz
push
call
pcmpeqb
out
loope
loope
sbb
push
lret
push
lea
js
and
scas
inc
mov
and
jae
loop
iret
test
cmp
push
rcrb
hlt
push
aam
sub
insb
lods
push
sti
repnz
es
jl
test
cmp
cmpb
shlb
repnz
and
jl
gs
sub
sub
jecxz
repz
pop
sbb
or
mov
xor
decb
jne
sub
mov
push
and
xchg
xchg
out
int3
in
adc
cmpsl
test
jns
leave
cs
das
out
xor
bndldx
dec
inc
cli
push
scas
or
inc
pop
incl
arpl
xor
sbb
mov
insb
jp
shl
movsb
lods
or
repz
xor
mov
cmp
lds
testl
add
sahf
lret
mov
in
popf
add
cmpsb
dec
push
xor
leave
enter
mov
pop
mov
or
cmp
outsb
mov
push
iret
aad
pop
ret
dec
imul
ljmp
in
pop
movsb
cmp
sbb
fldcw
rclb
inc
pop
or
into
in
test
in
mov
les
add
xor
xor
mov
pmulhw
stc
sub
ja
sahf
inc
jae
dec
jmp
fcmovb
fisttpl
into
sub
fwait
sbb
inc
pop
sub
cmp
push
mov
or
mov
adc
mov
test
scas
inc
pop
flds
mov
das
shl
mov
jae
adc
jmp
cld
nop
stc
in
jg
sbb
xchg
adc
push
clc
push
mov
jnp
mov
or
clc
pusha
and
outsl
push
dec
adc
xor
dec
ret
cmp
xchg
push
lret
or
shlb
les
push
testb
js
pop
loop
imul
dec
add
fildl
rclb
fidivrl
sub
sbb
adc
fdivrp
cmpsb
adc
stc
push
lahf
movsl
cmp
adc
ret
adc
inc
scas
sarl
xor
aas
and
cmp
or
push
cmp
pop
dec
and
push
adc
fcmovu
rcr
stos
mov
adc
fsubs
dec
scas
mov
mov
ret
pop
pushf
adc
arpl
call
xchg
and
mov
mov
adc
xor
stc
lds
push
mov
dec
lock
imul
sahf
sar
cld
mov
bound
add
cwtl
popf
lea
push
out
inc
lcall
jb
xlat
sub
outsb
sti
mov
or
rorb
fsub
outsl
das
sbb
cltd
subb
stos
fists
daa
bound
insb
jle
shll
psllw
add
push
xor
jg
mov
test
nop
ljmp
and
mov
aad
mov
xchg
shll
clc
pop
test
fdiv
mov
mov
call
scas
pop
mov
pop
dec
push
and
mov
and
adc
jns
orb
cmp
jo
add
and
cs
popa
dec
cmp
mov
ret
inc
out
arpl
xchg
jns
test
fsubrs
push
jg
push
rcrl
xchg
inc
lahf
mov
mov
dec
sbb
push
jae
mov
cmp
ror
sub
cmpsl
iret
dec
xor
sbb
pop
xchg
xchg
pop
push
or
or
das
dec
mov
mov
mov
test
fidivl
out
jg
mov
and
sub
push
and
aam
push
stos
test
jge
xchg
push
stos
or
mov
mov
out
xor
cmp
popa
jno
sbb
ret
js
cmp
mov
inc
xchg
mov
mov
adc
in
lret
push
inc
pop
add
test
sbb
mov
je
jno
je
adc
add
pushf
iret
data16
imul
mov
sbb
imul
mov
push
cmp
mov
mov
mov
stc
stos
enter
aaa
pop
stc
xchg
sub
movsb
pop
outsb
loopne
pop
sub
xorb
sub
test
mov
cmp
shlb
arpl
stc
jne
mov
cmc
lahf
sub
xchg
das
and
nop
mov
xchg
cmp
dec
cmp
mov
xchg
inc
xchg
mov
arpl
cmp
enter
mov
iret
in
ds
pop
adc
in
stos
pop
or
mov
pop
cwtl
jge
mov
pop
out
inc
jbe
sub
inc
jnp
shlb
test
lds
sub
cmp
stos
push
mov
add
ds
and
test
dec
cmc
mov
out
cmp
jno
lahf
xchg
mov
sbb
in
in
leave
pop
cld
mov
or
rorl
fldt
sub
push
push
dec
idivb
sub
xchg
pushf
fcomps
mov
push
pop
xchg
shr
mov
jge
shl
xchg
aaa
pop
testl
popa
adc
inc
pop
adcl
mov
adc
fs
or
mov
add
sub
cwtl
mov
push
call
pop
mov
adc
mov
or
aad
clc
ds
fcomps
jb
mov
mov
push
test
sbb
xor
and
std
push
data16
test
rclb
addl
orps
dec
in
shlb
loopne
xor
fisubrl
xchg
mov
mov
mov
popf
or
cmp
popf
pop
repnz
fcomp
and
jg
dec
xchg
out
aad
xchg
dec
xor
mov
pop
or
bound
out
xchg
mov
cmp
ds
sti
jo
jo
push
je
mov
cltd
lcall
xor
aas
les
pop
aam
mov
sahf
jne
sub
cmp
faddp
sti
mov
push
sub
push
or
sbb
movsl
push
ret
jnp
icebp
enter
sub
dec
xor
add
cmp
mov
cmp
andl
pop
sub
out
dec
add
push
popa
jae
out
adc
jne
cmpl
add
sarl
or
add
rcrl
xchg
jnp
sbb
inc
out
fbld
std
push
insl
or
mov
add
xor
cmp
xchg
jle
pop
mov
adc
pop
cmc
xor
mov
sub
sahf
cmpsb
sbb
clc
lret
mov
roll
inc
mov
rcl
adc
pop
ss
pusha
mov
aaa
xor
rclb
sbb
stc
movsl
into
xchg
mov
mov
popa
jno
jns
in
lods
fwait
mov
dec
push
jae
out
insl
dec
and
ljmp
mov
pop
add
xchg
mov
mov
fdivrs
das
push
dec
stos
cmovge
xor
incl
and
lds
dec
aas
leave
popf
mov
idivl
inc
fdivs
fsubs
push
aad
pop
xor
xor
shl
mov
or
dec
loop
test
js
imul
shrb
cmp
xchg
xchg
hlt
jp
xlat
cmp
jo
popf
pop
mov
push
int3
dec
inc
mov
jnp
adc
les
xchg
mov
aad
seto
xchg
push
push
xchg
mov
xor
dec
mov
scas
or
inc
jle
dec
imulb
inc
cmp
mov
push
jne
push
pop
les
loopne
or
sub
sub
out
addl
add
bound
daa
mulb
inc
in
leave
je
inc
pop
pop
push
shrl
cmp
mov
cld
inc
dec
sub
push
sbb
push
aas
test
cltd
jns
mov
sbb
inc
or
add
mov
in
leave
fstpt
pop
jmp
aam
dec
dec
in
fdivs
xchg
sti
pop
insl
dec
mov
pop
je
outsb
mov
out
add
inc
mov
jae
dec
arpl
cld
das
lock
jp
lret
and
fildll
jae
pop
sbb
fidivrl
daa
fidivl
pop
pop
inc
jbe
setge
int3
cmc
xor
push
pop
repz
mov
or
jmp
xor
adcl
cli
faddl
in
xor
scas
test
pop
sbb
mov
fisttpl
stos
fsubrs
mov
inc
push
adc
lods
std
and
push
in
out
push
in
pop
stos
xchg
adc
sub
add
dec
ret
lret
sbb
pusha
fs
stos
mov
iret
push
out
hlt
cwtl
pushf
cld
imul
fstpl
les
stc
xor
push
push
jno
pop
hlt
lcall
out
pop
add
insl
scas
inc
add
je
mov
int3
insb
imul
outsb
cli
js
pop
lea
pop
and
mov
sub
rolb
fs
jnp
mov
adc
mov
xor
xchg
or
enter
or
inc
je
cmpsb
test
xchg
xchg
icebp
mov
cwtl
push
shlb
insb
and
je
and
pop
sub
adc
aam
outsl
daa
ret
pop
das
or
out
dec
mov
and
mov
jno
jp
movsb
lock
jmp
test
push
mov
lock
xchg
adc
fcmovnbe
shl
inc
into
in
in
insb
inc
mov
das
shl
aas
loop
stos
mov
inc
fwait
mov
cmc
xchg
xchg
popf
data16
fisttpll
fs
or
push
es
dec
lods
sub
mov
arpl
adc
neg
add
ret
arpl
pop
and
loop
xchg
dec
push
daa
sub
fistpll
test
mov
adcl
and
je
fwait
insb
jmp
xchg
xor
pop
shr
cmp
jmp
push
xchg
test
out
jle
sbb
int
mul
rclb
gs
xchg
inc
shl
mov
mov
rcrb
pop
jbe
pop
inc
lods
cmp
das
mov
mov
out
inc
adc
in
sbb
bound
fisttpl
add
cmp
cmc
rclb
xchg
mov
fsubl
scas
pop
shlb
int3
dec
xor
rol
mov
out
push
lcall
jg
lods
dec
hlt
fldl
push
out
pop
stos
sbb
cmpl
popa
fisubrs
dec
mov
stc
cld
sbb
mov
inc
push
popf
and
orb
test
shrb
sub
sub
lods
stos
repz
rolb
loope
push
jge
dec
loopne
jae
mov
xchg
aaa
xchg
fcomps
pop
fisubl
ficompl
xchg
jle
jg
out
test
or
add
or
pop
fstpl
insb
inc
push
notb
adc
or
mov
movsb
or
xchg
in
jae
jno
mov
mov
nop
in
pop
xor
cmc
cld
pusha
add
fiadds
adcl
jle
ja
movsb
mov
je
or
xchg
xchg
sti
add
mov
outsb
or
sti
push
ret
cltd
xchg
insb
dec
lock
push
data16
test
adc
xchg
popa
repz
pop
inc
cmpsb
ds
dec
pop
repnz
imul
das
daa
mov
jg
pop
or
into
mov
push
mov
imul
sub
add
mov
ss
test
mov
mov
dec
mov
jl
std
iret
mov
pop
xchg
mov
adc
mov
or
jge
nop
addb
movzwl
cltd
in
cmp
mov
push
cli
dec
mov
bound
psllw
int
repnz
daa
cld
insl
nop
test
lcall
xor
xor
sahf
test
les
aad
inc
xor
cli
xchg
lret
ret
pop
mov
mov
std
xor
pop
xorl
stos
addl
rcl
xchg
mov
pop
push
cwtl
jae
loopne,pn
and
xor
add
out
into
inc
xchg
pushf
ficoml
and
mov
scas
cmc
jb
cmp
xor
ds
push
and
jnp
jne
out
in
or
sbb
jmp
pop
cmpb
pop
in
out
fs
fidivrl
jae
cwtl
daa
insl
mov
pop
cmp
call
shlb
and
mov
jl
loope
jne
mov
mov
dec
loope
pop
std
or
out
outsb
out
push
pop
and
mov
add
popa
inc
pmulhw
xchg
xchg
xchg
ret
je
testl
xor
jne
loop
adc
insl
in
mov
sbbl
mov
or
push
mov
jnp
jle
adc
dec
jecxz
and
jne
fcomps
sti
cmc
scas
cmp
and
imul
out
push
jmp
repz
je
in
cmp
aad
inc
enter
mov
addb
dec
decb
stc
shll
fsubrs
ljmp
dec
sub
mov
sbb
fs
add
negb
lea
cmc
mov
sub
insl
sbb
out
fs
or
cmc
pop
cmpsl
or
jge
cmp
loopne
mov
mov
cltd
in
loopne
stos
lods
or
jl
adc
xchg
or
xor
aaa
adc
xor
jle
out
bound
add
mov
jge
xchg
cmpsb
stos
mov
cmp
push
lcall
aad
and
jmp
cmc
or
daa
inc
xchg
or
push
push
cltd
mov
pop
jns
sbb
test
rclb
or
adc
mov
incb
mov
es
adc
sub
add
fcmovne
sbb
fbstp
mov
xor
adc
mov
inc
negl
adc
inc
fbld
mov
push
mov
push
aad
xchg
mov
out
ja
imul
cmp
popf
test
xor
inc
jo
sbb
pushf
sar
sub
lock
jae
test
add
pop
sbb
lds
jecxz
inc
outsb
in
push
insl
jo
adc
push
sub
test
ja
jns
push
lods
hlt
inc
test
push
jns
daa
mov
jge
call
push
sub
xor
cmp
sub
aam
sbb
sub
mov
rcrl
test
push
ja
xor
divl
dec
push
repnz
test
in
sbb
xor
into
mov
fdivrl
jbe
lods
rorl
fisubrs
push
jae
inc
cli
repz
out
xlat
repnz
xor
push
pop
mov
in
mov
aam
push
pop
pop
inc
pusha
imul
arpl
ljmp
dec
sub
lret
icebp
ja
sub
fs
mov
data16
fdivrl
mov
data16
int
and
sub
cmc
es
xor
pop
sbb
mov
mov
sub
pusha
or
push
adc
ret
adc
sbb
stos
xchg
fcomps
inc
test
mov
ljmp
jg
cwtl
jl
repz
sbb
pop
mov
rolb
mov
jo
sti
push
in
sub
ljmp
shrb
shlb
pop
sbb
loop
mov
or
adc
lret
sahf
and
add
fisubl
jbe
sbb
push
dec
shr
into
jmp
loopne
frndint
sub
fnstcw
sbb
mov
loope
push
faddl
dec
loop
call
jg
xor
lahf
sbb
push
mov
sbb
mov
push
cmc
cmc
mov
jecxz
in
fucomi
lcall
repz
mov
jnp
lds
sti
dec
xor
fistl
loopne
shlb
scas
and
out
sbb
inc
push
cmp
cmpsb
mov
or
pop
shlb
outsb
add
sbb
std
xchg
sub
push
pop
add
in
and
lea
mov
leave
stos
pop
or
inc
add
aaa
rcll
and
bnd
push
sbb
push
mov
sbb
mov
xchg
adc
mov
sbb
and
out
adc
ljmp
add
jbe
xchg
push
pop
and
pop
jp
mov
adc
add
inc
and
imul
push
xchg
lret
xchg
inc
xchg
sti
insb
cmc
jns
popf
inc
mov
insl
mov
or
pop
das
add
sub
jecxz
inc
xchg
pop
imul
movb
bound
rolb
int3
movb
insb
ljmp
ds
pop
lds
mov
jle
pusha
and
not
lcall
aas
dec
adc
incl
dec
insl
lea
jb
mov
inc
cmpsl
sub
dec
add
fwait
pusha
and
gs
int
stc
imul
scas
rcrb
xor
lahf
mov
idiv
jne
mov
mov
mov
pushf
sub
ret
dec
pop
out
lea
outsl
bound
adc
push
push
push
fs
setp
mov
cmp
movb
mov
mov
mov
testl
je
mov
into
mov
dec
cld
lea
jne
add
imul
sub
push
add
mov
xchg
outsb
lcall
imul
cs
mov
ds
cmc
push
mov
mov
sub
cmpsb
mov
les
inc
inc
rorl
js
insl
sahf
cmc
fcmovu
mov
jne,pn
arpl
xlat
daa
cmp
lock
lahf
xchg
in
push
sahf
adc
movsl
scas
adc
and
jnp
adc
imul
cmp
aaa
lods
pop
mov
mov
push
loopne
xor
add
into
fwait
aam
xchg
add
pop
int3
ret
lock
ds
lcall
push
ja
jp
dec
add
jns
mov
mov
xchg
dec
xor
jl
inc
sbb
dec
dec
and
fsubs
inc
fs
jl
cmp
movsl
cmc
mov
dec
pop
jo
cwtl
xlat
and
sbb
mov
lds
stos
xor
decl
sub
inc
pop
sbb
cmp
sub
mov
sub
inc
jp
xchg
mov
arpl
ss
push
out
in
mov
icebp
jmp
outsb
push
hlt
mov
lods
mov
xlat
adc
fcompl
std
dec
lods
mov
lds
outsl
push
out
xchg
test
aad
cwtl
add
xchg
and
pop
or
cmp
ret
jae
cs
adc
or
xor
push
xchg
pop
fwait
mov
push
lret
lods
mov
cmc
into
and
ljmp
rclb
nop
xchg
call
cmp
mov
pop
cs
push
jle
aad
fcomps
push
inc
dec
xor
in
aas
ss
idivb
mov
out
shlb
divb
mov
and
inc
push
push
in
sbb
pop
mov
xchg
bound
int
xor
fmull
sbb
hlt
ds
add
loopne
jle
lods
cmpb
aad
inc
imul
in
sub
arpl
or
mov
mov
mov
ljmp
cmp
loope
pop
jmp
mov
pop
or
jo
repnz
int
jl
jmp
stc
mov
test
adc
cmpsl
mov
pop
iret
xchg
popf
sbb
mov
or
inc
xor
pop
std
movsl
or
inc
jge
out
test
ja
scas
pop
or
call
sbb
adc
lea
outsb
dec
or
mov
rolb
jbe
push
or
cltd
loope
ret
rcll
idivb
cmpsl
add
cmp
in
outsb
or
cld
push
out
add
lret
int3
mov
cwtl
sahf
rolb
mov
fwait
mov
outsl
adc
lahf
sarl
jmp
int3
movsl
fistl
and
jb
inc
cmp
clc
mov
add
stos
adc
fisubrl
jbe
fsubs
sbb
out
adc
mov
inc
out
inc
rorl
insl
aas
jmp
aaa
sub
adc
and
mov
push
pop
jl
mov
inc
ljmp
mov
or
fnsave
sti
mov
push
dec
lock
js
mov
in
leave
sbb
push
shrl
push
test
mov
pop
out
insb
lock
jg
insl
mov
jo
fisubs
inc
or
test
adc
pop
ret
nop
ljmp
cmp
add
addr16
adc
and
mov
es
lret
mov
in
das
cmp
inc
shll
cmp
fimuls
push
movsb
mov
notl
sbb
nop
test
addr16
mov
fucom
inc
add
mov
aas
imul
cwtl
aad
sbb
loop
lret
or
data16
push
roll
push
or
pop
out
test
adc
push
add
xchg
in
mov
adc
jle
insl
mov
cmp
repz
mov
mov
loopne
or
pop
cmp
xchg
xorb
jecxz
mov
xorl
xchg
xor
pop
push
cld
xor
fisttpll
pop
jmp
sub
xor
jno
or
or
ja
loope
fcoms
outsb
mov
notb
inc
popf
gs
icebp
sahf
jecxz
pop
stos
xor
push
cli
lret
decl
add
and
adc
fs
adc
cmc
cld
and
push
sub
sbb
imul
inc
imul
scas
inc
mov
and
push
rcr
pop
loope
dec
pop
push
dec
mov
pop
cmp
scas
cmpsl
pop
or
lahf
and
and
sbb
sbb
sub
mov
mov
push
push
ds
inc
xchg
adc
mov
jno
aam
mov
or
popa
fdivl
lret
test
imul
xor
dec
aaa
daa
fsubl
aad
frstor
fwait
sub
push
lock
sarl
jne
add
adc
insb
fbstp
in
shll
and
push
adc
sbb
xor
mov
jno
xor
xlat
nop
bound
pusha
mov
mov
xchg
sti
imul
mov
xchg
xchg
xchg
push
test
test
or
jmp
sub
int3
add
jno
mov
bound
adc
popf
lods
sub
movb
repnz
xchg
and
jno
push
rclb
jp
insb
adc
push
lret
sub
out
arpl
cmpsl
push
movsl
lods
lahf
std
test
in
mov
mov
sti
subl
sbb
das
pxor
repnz
adc
jnp
ret
outsl
movsl
fnsave
jge
lret
mov
sub
test
lcall
jp
insl
cmpsb
cli
out
addl
aaa
lods
sub
xlat
jmp
outsb
imul
push
jb
shlb
or
mov
mov
movsb
mov
or
es
bound
cmc
cmp
fdiv
cmp
xchg
ret
iret
push
outsl
sbb
jnp
pushf
mov
roll
push
int
sub
pop
test
mov
aaa
arpl
mov
imul
xor
scas
sbb
into
lods
cli
mov
cmp
adc
mov
imul
jnp
xchg
xor
dec
add
jo
popa
dec
pusha
pop
sarb
aas
enter
lcall
decl
stos
jmp
aad
ret
pop
cmp
stos
sub
insb
leave
shll
mov
sub
test
push
outsl
sbb
inc
data16
test
mov
rorl
xchg
in
pusha
xor
push
in
in
mov
das
jmp
mov
cmp
or
mov
orb
in
rorb
pusha
inc
jne
lods
rcl
repnz
sbb
sbb
out
in
push
inc
jle
inc
mov
int3
mov
mov
mov
cmp
popf
dec
sub
jo
lret
out
cmpsl
push
loope
bound
xchg
in
scas
ret
dec
mov
fcmovb
out
rol
push
mov
adc
cli
and
inc
cmpsb
and
push
ror
out
ficompl
andb
mov
dec
rol
push
icebp
add
add
adc
pop
inc
inc
dec
cmpsb
lahf
push
mov
push
push
jbe
push
jo
outsl
cmp
mov
pop
push
sbb
push
adc
je
sbb
pop
pop
xor
and
mov
or
adcl
jp
je
jp
cmpsl
jge
jnp
dec
jb
push
add
dec
xor
aam
gs
inc
aaa
scas
push
outsb
add
add
sub
mov
mov
dec
mov
es
fildl
adc
pop
mov
inc
mov
lock
push
shrb
js
mov
stc
inc
cmp
mov
xchg
cli
push
sbb
in
jmp
and
jge
sub
lods
xchg
cmc
xor
push
scas
mov
dec
xor
push
sbb
out
adc
inc
nop
sbb
lcall
add
stc
xor
mov
push
xchg
pop
push
mov
leave
sub
and
and
sarb
aad
scas
mov
movsl
or
mov
dec
sahf
sti
jb
adc
mov
mov
sbb
in
in
mov
lock
fcoms
push
and
cmp
stos
dec
jp
dec
xchg
stc
addl
popf
cmp
jnp
push
loopne
test
xor
sarl
cmp
sub
int3
stos
pusha
mov
fcomi
inc
or
jbe
sbb
arpl
ficompl
fistpll
arpl
ja
pop
xchg
js
mov
dec
mov
mov
jno
lcall
pop
jmp
idivb
jp
lea
jecxz
xchg
test
sub
pop
pop
xlat
mov
cmp
add
es
sti
jns
in
repnz
xchg
fisttpll
xchg
jl
insl
pop
cs
inc
lods
xlat
mov
push
imul
jnp
xorl
sbb
cmp
sbbl
andl
inc
outsl
mov
mov
out
jl
sub
cmp
push
mov
out
mov
std
lods
sub
push
adc
dec
or
mov
or
leave
adc
int3
cmp
pop
ds
inc
jmp
arpl
fsts
push
cmpsb
jae
xchg
fistl
dec
inc
pop
mov
inc
dec
push
scas
sub
insb
mov
in
or
pop
jae
mov
shlb
rcrb
mov
in
pop
ds
sahf
and
leave
mov
int
pop
in
mov
jne
mov
and
out
pop
sbb
pop
clc
test
ljmp
lock
iret
mov
jecxz
dec
pop
sbb
or
es
jle
fs
clc
aas
out
out
add
bound
ss
mov
je
jbe
dec
jns
and
outsl
shlb
repz
imul
or
cmp
dec
int
inc
cs
push
pop
mov
jge
imul
int3
pop
ds
jle
loope
and
aaa
cli
sub
push
movsb
inc
sbb
mov
adc
movsl
jl
cwtl
cmc
push
shr
inc
lods
dec
outsl
or
les
pop
jo
cltd
repnz
shll
sub
repz
addl
clc
push
nop
jno
sub
imul
push
lcall
mov
into
mov
mov
ficompl
daa
push
clc
mov
enter
mov
pop
fldcw
and
dec
repnz
loope
cli
adc
leave
mov
or
xchg
cmpsb
shll
pop
sbb
pop
sbbl
das
mov
pop
ss
sbb
stos
ficoml
test
call
ret
mov
ljmp
loope
or
xor
adc
test
mov
ja
cmp
adc
rcll
call
cltd
push
xchg
adc
lret
mov
repz
push
gs
ljmp
in
scas
cmp
push
cmpsb
mov
jmp
cltd
or
adc
sbb
mov
fwait
jno
iret
push
dec
ds
cmp
in
dec
movsl
insl
inc
pop
test
and
sub
push
jae
sbb
and
pop
ret
ficomps
mov
or
enter
xchg
lock
fsubr
cmp
test
jg
mov
dec
or
and
jg
jb
or
add
test
sbb
jp
cmc
mov
std
pop
std
sarl
xchg
push
dec
inc
lret
cmpsb
cltd
adcb
or
inc
sub
dec
ja
dec
adc
or
imul
ret
push
cmpsb
cwtl
repnz
mov
hlt
xchg
mov
pushf
leave
and
int
dec
dec
sub
pop
push
jnp
cmpsl
cmp
stos
add
jnp
pop
fisubs
xchg
xchg
mov
jae
mov
jle
stc
mov
mov
jg
pop
add
mov
xor
push
out
data16
inc
imul
pusha
test
mov
mov
sub
push
inc
jo
and
mov
shll
xchg
mov
xchg
imul
pushf
or
pop
xor
loopne
jb
outsb
pop
outsb
movsb
lcall
lock
xchg
lahf
leave
sub
jl
sub
aaa
dec
or
out
mov
xchg
int3
out
xor
lds
inc
push
adc
mov
dec
cmp
clc
fstp
cmp
or
repz
xor
mov
in
popf
test
xchg
aaa
and
xor
pusha
push
mov
jns
jnp
jl
in
idivb
mov
hlt
dec
js
xor
jp
pop
nop
adc
ljmp
jmp
hlt
adc
nop
pop
enter
inc
into
adc
lret
or
or
pop
push
int3
add
mov
xchg
pop
cwtl
xchg
mov
or
xchg
cmpb
je
sub
dec
xchg
cmp
fidivrs
ud1
shll
icebp
data16
mov
scas
dec
pusha
add
cli
mull
fwait
sarl
ja
testb
jmp
jae
lds
shl
test
iret
mov
shrb
push
cmp
stos
ja
std
test
mov
sub
in
mov
or
sahf
test
mov
dec
dec
in
sbb
movsl
aas
jle
loope
sbb
xor
cmpsb
add
incl
xor
push
out
bound
lea
cmp
dec
inc
lods
lock
xor
stos
punpckhwd
int
iret
cli
lea
test
mov
pop
push
movsb
xlat
mov
dec
pop
push
insb
insl
stc
not
xchg
jl
jl
lods
dec
in
mov
sbb
mov
clc
popa
push
xor
and
or
pop
or
js
cmc
xorl
sbb
adc
outsb
std
testb
je
adc
inc
sub
scas
stos
inc
int3
outsl
test
inc
cmp
leave
cmp
fbld
out
imul
pop
jne
mov
dec
mov
jo
and
fs
jmp
outsb
popl
popf
pop
mov
std
cmpsl
or
xor
nop
ja
das
aaa
add
cmpsl
cs
in
fs
xor
imul
nop
or
leave
enter
push
test
aaa
cs
dec
and
pop
cmp
pop
movsl
rcr
sub
call
xchg
cwtl
les
lods
inc
inc
pop
xchg
inc
dec
movb
call
mov
fld
jge
stos
cmpsl
xchg
out
cmp
fnstsw
les
insl
inc
inc
push
out
into
int
mov
movsb
roll
cmpsl
scas
fld
xchg
dec
or
or
mov
roll
add
outsb
cwtl
pop
cld
jp
ret
dec
push
push
js
mov
icebp
popf
push
pop
sarl
pop
lods
fadds
pop
and
rcrl
iret
xlat
or
scas
xchg
fs
cmp
xor
dec
ret
imul
fs
or
sbb
int3
test
or
dec
test
cwtl
insb
ss
mov
fcmove
test
lods
xchg
popa
adcb
iret
rorb
jnp
sbb
arpl
ret
rorb
insl
stos
aas
xchg
or
jo
icebp
push
jmp
rorb
orl
dec
sti
push
rorb
pushf
sbb
adc
es
push
scas
jns
sbb
mov
cmpsl
cmp
pop
lods
adc
fwait
xor
fbld
cmp
kxorb
repz
arpl
fstpt
mov
les
aas
nop
dec
out
pop
out
jecxz
dec
sbb
mov
xor
or
cmc
inc
sub
negb
push
mov
je
repnz
testl
sub
cmp
mov
mov
pop
fstpl
mov
push
push
cmpb
mov
mov
repnz
sarl
orb
xor
jne
adc
mov
repnz
push
test
and
mov
test
jp
and
into
fistpll
push
icebp
jmp
add
adc
cmpsl
add
add
cmpsb
pop
cmpsl
mov
mov
add
push
xchg
push
lds
cmp
and
and
cmp
test
cli
mov
xor
xor
jno
sbb
adc
mov
and
aam
or
fists
xor
pushf
sbb
addb
fcomp
cmpl
dec
dec
pop
ljmp
adc
pusha
fs
arpl
fimull
mov
or
adc
imul
rcrb
pop
cmp
and
jae
std
or
adc
call
dec
push
popa
mov
in
inc
pushf
jmp
add
mov
fsubl
jae
pop
cmp
popa
mov
les
jmp
push
and
or
cmp
fsubl
mov
adc
jnp
xor
push
xor
ret
fyl2x
fnstcw
or
ret
imul
cmp
sti
loope
repz
std
sub
fcoms
test
ss
loope
cmp
in
add
sarl
nop
cmp
icebp
aam
jno
mov
mov
loopne
test
sbb
test
mov
movsl
mov
dec
mov
cmp
lahf
movsb
mov
test
cmp
inc
mov
stos
pop
push
mov
gs
imull
es
inc
jl
xor
xor
loop
mov
sbb
stos
out
gs
xchg
inc
and
lods
pop
mov
xlat
xchg
sbb
mov
outsl
or
iret
in
clc
lret
cld
stos
add
and
or
mov
add
dec
dec
xor
cmp
loopne
es
or
xor
ljmp
fwait
cmpsb
jns
aaa
int3
xchg
jb
lahf
push
push
int3
stos
daa
xlat
push
push
push
lods
stos
mov
push
lret
cmp
dec
lahf
ret
das
outsb
sub
or
mov
cmp
xor
scas
out
xor
jmp
mov
mov
xchg
and
xor
adc
push
push
test
sbb
push
pop
mov
imul
inc
out
cmp
push
insl
mov
jge
xchg
add
test
shl
nop
test
mov
jp
push
and
or
cmp
or
pop
sub
mov
push
shll
sbb
push
adc
std
movsl
add
fucomp
sti
inc
sbb
mov
mov
fadds
test
pop
xchg
incb
movsb
mov
stos
xchg
fdivs
push
push
test
outsb
push
ss
cmp
add
sahf
scas
sub
push
jp
jae
iret
mov
pop
sub
lock
movsb
out
loop
xor
sarb
inc
repz
iret
out
orl
jnp
and
cmp
add
test
popf
fsubs
int3
cwtl
into
das
or
mov
int3
jns
dec
xor
push
in
ret
mov
lock
and
aaa
add
dec
fs
sbb
out
push
xchg
mov
pop
movsl
das
xchg
cmp
dec
sbb
xor
andb
push
pop
sub
out
lods
dec
std
int3
pop
push
aam
out
or
sub
xor
pushf
daa
sub
sbb
pop
cmpsl
jo
xor
pop
add
sahf
xchg
test
test
or
add
jns
lret
mov
jno
pop
int3
pop
icebp
jge
xchg
sahf
ror
add
lock
loop
popa
cs
fwait
sti
jmp
sub
test
test
sarl
dec
add
in
insb
sahf
push
mov
mov
out
rcrb
fcoml
mov
mov
mov
push
dec
aaa
ficoml
sbb
popf
fimull
push
nop
xchg
push
lds
insb
xchg
out
and
mov
jns
sbb
pop
stc
nop
push
outsl
stc
mov
xchg
push
and
and
pop
vminpd
mov
and
outsl
jo
and
scas
cmp
loopne
sahf
aaa
ficomps
mov
add
rcr
push
int
cmpsb
mov
push
pshufw
loop
divl
mov
and
mov
mov
adc
roll
stc
gs
stos
jb
cld
inc
and
fwait
jae
rcrl
push
fwait
add
and
ret
dec
ret
cltd
sbb
scas
push
stc
lahf
and
cmc
adc
lds
nop
idivb
xor
imul
cmp
mov
les
movsb
sbb
mov
shl
push
xorl
icebp
jns
pop
cltd
sub
pop
jae
dec
fstpt
pop
xchg
mov
xor
jp
call
xchg
and
mov
push
dec
outsb
jbe
push
js
push
test
push
frstor
push
push
enter
xchg
cmp
lea
jae
scas
in
xor
push
jne
mov
or
cmp
sub
sbb
ret
jns
jbe
push
inc
in
add
sub
add
aad
scas
cmp
add
or
xchg
ret
repnz
inc
and
fcomi
mov
adc
int
mov
int3
aad
test
out
xor
daa
mov
xor
aad
or
add
js
lds
cmp
in
aam
and
cmp
or
js
aaa
sti
adc
push
xor
mov
bound
je
pusha
in
iret
adc
arpl
adc
ljmp
cmc
fimull
int
lea
inc
mov
stos
gs
jmp
xchg
insb
or
sub
in
in
loopne
leave
fnstsw
xor
imul
test
lods
mov
cmp
jge
push
rcrl
mov
lea
and
imul
push
std
stos
jnp
sbb
xlat
mov
xchg
lea
cli
xchg
test
enter
in
jns
ret
xchg
push
sahf
sbb
cs
push
cmp
add
and
inc
aas
cli
dec
popa
cwtl
dec
xor
ffreep
and
das
nop
xchg
xchg
popa
cmp
outsl
sbb
cmc
mov
lahf
xchg
pop
outsl
loope
mov
cmp
lods
add
sub
xchg
std
insl
xor
cmpsl
push
jnp
pop
cld
xchg
lods
cld
mov
pop
icebp
mov
loop
out
xchg
adc
outsb
aam
and
push
cld
mov
aas
cltd
dec
andl
lahf
fiadds
inc
out
out
adc
aam
adc
xchg
mov
mov
int
andb
lods
mov
xchg
outsb
mov
fildll
or
pop
xor
int3
mov
ret
lcall
push
stc
sub
lahf
or
nop
aas
insl
sahf
aaa
cmp
add
mov
pushf
xchg
imulb
jae
dec
pushf
stos
mov
mov
dec
sbb
xchg
sti
in
sarb
int
xchg
jl
fwait
cmp
in
repz
shll
mov
ljmp
mov
sahf
mov
divl
arpl
sti
or
dec
pop
adc
lock
dec
aas
es
push
push
shll
push
sbb
mov
mov
and
cli
mov
addr16
mov
xor
lret
loopne
ds
inc
jecxz
dec
lds
ja
daa
lods
xchg
mov
jno
loopne
rolb
mov
sahf
xchg
add
cmp
lcall
hlt
insl
icebp
dec
adc
mov
movsl
sub
pop
pop
clc
adc
lcall
clc
mov
pop
fbld
leave
xor
jno
stc
xchg
xchg
insl
sbb
lods
leave
aad
jg
aas
or
xchg
cli
call
add
pop
xchg
sub
int3
addl
mov
data16
jne
shrl
cmp
dec
fisubrs
cmp
cwtl
push
sub
fnstsw
push
dec
mov
in
outsl
xchg
sub
push
pop
das
lret
aaa
es
inc
cmp
fidivrs
and
sarl
pop
or
push
aam
fs
pop
sub
inc
lahf
imul
hlt
xchg
mov
xchg
daa
push
cbtw
in
jecxz
or
add
mov
icebp
mov
jmp
pop
leave
xor
mov
inc
addr16
movsl
jmp
mov
sarl
add
test
xchg
arpl
loope
aas
and
dec
push
fisubrl
addr16
inc
cmp
jne
mov
push
hlt
fcomi
out
mov
adc
add
mov
lock
into
xchg
mov
ds
sbb
mov
sarb
jo
out
jo
les
xchg
xor
insl
push
je
addr16
adc
jle
addr16
fildll
ljmp
push
mov
stc
cwtl
in
test
enter
sbb
and
imul
xchg
out
xchg
hlt
jnp
mov
mov
add
and
repnz
and
lcall
add
lds
call
mov
pop
cmovne
mov
gs
adc
nop
xchg
rcr
clc
shrb
dec
arpl
add
mov
cltd
push
dec
test
and
push
and
fadds
xchg
shlb
shll
sub
pop
fsubrl
out
mov
cltd
jecxz
sbb
cli
push
mov
lret
lods
imul
loop
mov
call
add
scas
out
shlb
decb
sub
push
push
push
les
mov
clc
xor
int
mov
dec
std
in
dec
xchg
decl
fnstenv
mov
jae
rolb
or
sub
ja
jge
push
or
fsubrs
sub
lods
jnp
cmp
clc
movsb
repnz
pop
mov
dec
sub
mov
push
or
lds
adc
mov
push
pop
addr16
cld
inc
mov
sahf
rcrb
jle
gs
ss
pop
jle
in
mov
dec
dec
int3
cmp
in
cmpsl
xchg
push
pop
inc
jp
out
jge
push
or
shrw
es
cmc
shll
lock
jbe
jp
mov
test
int
ja
jecxz
fwait
sbb
mov
xchg
mov
cmp
pop
imul
sub
andl
sbb
mov
in
ret
ljmp
xchg
ret
and
les
imul
int
and
andb
adc
test
popf
movsl
mov
mov
pushf
mov
adc
lock
stos
or
cltd
jp
cli
sbb
xor
inc
outsl
pusha
popf
cmc
xchg
cli
cs
cmp
jnp
cmpl
fnsave
mov
idiv
or
xchg
add
sbb
in
push
mov
mov
mov
fstpl
outsb
push
out
push
pushf
sub
or
ret
jae
pop
pop
rorl
adc
in
jb
sub
addr16
mov
test
outsb
lret
inc
leave
or
gs
inc
jg
push
xor
int3
decl
inc
lods
sub
bswap
mov
mov
add
sub
sub
inc
fsubrs
pop
add
or
xor
flds
test
test
and
enter
mov
adcl
push
and
ret
inc
pop
addr16
jg
xlat
mov
sti
popa
roll
cmpsl
aam
push
adc
je
xlat
pop
in
or
aas
sarl
inc
inc
and
scas
jmp
insb
push
adc
stos
insb
inc
rolb
popa
rcrb
iret
sub
in
pop
daa
pop
push
xchg
xor
mov
clc
mov
ss
out
das
test
je
enter
mov
push
jae
lahf
rolb
adc
insl
leave
mov
add
imul
test
stos
sub
push
test
lods
mov
gs
hlt
lea
enter
mov
sub
mov
stos
cmc
cmp
rcr
dec
pop
int
aas
cmpsb
mov
push
push
loope
and
ret
lock
mov
in
sub
sub
cmp
mov
pop
inc
je
fldenv
fldcw
pop
sub
loopne
addr16
fnsave
loope
pop
push
mov
leave
aaa
cmp
pop
jmp
sbb
xchg
mov
xchg
call
dec
mov
fdivs
push
dec
sti
push
jns
xchg
cltd
mov
mov
in
aaa
mov
inc
stc
mov
aas
pop
jno
shll
sub
and
cld
xchg
dec
sbbb
pop
pop
sub
sub
adc
push
scas
and
repnz
enter
and
mov
dec
addl
fsubl
lock
sahf
pop
adc
fsub
hlt
sti
jmp
adc
nop
jae
rcrl
fistl
pop
cltd
pop
ljmp
xor
mov
xor
or
subl
pop
sbb
pop
cld
or
sub
push
aad
stc
pop
stos
push
sti
sbb
jo
out
and
imul
push
scas
dec
xchg
test
repz
mov
pop
sbb
bound
mov
call
mov
dec
rorl
insb
ds
mov
pop
lods
and
sub
push
ficoml
xchg
xorb
xor
xor
pop
inc
andb
mov
jmp
ljmp
cmp
mov
xchg
fidivs
shrb
stos
xchg
repnz
lock
push
inc
loopne
cmp
cmp
mov
sub
inc
ja
mov
pusha
loop
call
int3
cmp
push
pop
cmp
dec
dec
out
ss
std
inc
inc
and
push
dec
cmp
ss
adc
in
adc
and
sbb
cltd
adc
js
inc
fimuls
dec
sub
aam
in
ljmp
dec
xor
subl
sbb
out
sub
rcll
sub
xchg
jne
addb
outsl
add
rcrl
jae
faddl
mov
mov
inc
insb
pusha
std
fidivrl
shll
hlt
fisubrs
out
cmp
movsl
mov
mov
iret
push
stc
insb
ret
mov
arpl
test
push
stos
push
call
push
fs
hlt
or
mov
out
xchg
cmp
and
dec
add
xchg
stos
fnstcw
jp
xlat
cli
sbb
adc
sub
inc
cltd
xchg
cmp
push
and
jmp
lahf
shrl
adc
cmpsl
mov
xchg
jmp
pop
add
xchg
fcmovb
sbbl
mov
jno
pop
dec
sbb
jl
adc
into
shr
jnp
aad
xchg
aad
gs
mov
sbb
lret
mov
inc
decb
lock
mov
sarb
pop
jne
fnstenv
jns
xor
aam
flds
pop
add
adc
mov
jnp
mov
fs
push
mov
insl
mov
mov
dec
sub
or
mov
dec
mov
cli
xchg
int
mov
or
cwtl
sub
inc
lret
xor
cs
sub
rcrb
mov
ret
jle
pusha
sub
mov
jge
out
fs
addr16
pushf
add
cwtl
cmp
mov
gs
pop
jmp
fld
jl
push
ficoms
test
aad
lds
movsl
or
adc
adc
js
inc
xchg
loop
fwait
psubsw
mov
and
mov
push
jne
jo
js
jne
loope
in
push
movsl
imul
mov
push
sbb
dec
addb
pop
adc
add
mov
xchg
lods
add
and
xorl
push
fwait
push
cwtl
ret
add
jge
enter
pop
inc
cmpsl
pop
or
arpl
mov
enter
je
pusha
mov
add
cpuid
push
sub
testb
stos
jecxz
repz
in
mov
mov
call
jmp
daa
jae
add
inc
jns
stc
jge
les
lret
pop
out
inc
call
push
nop
jmp
movsb
and
adcb
das
jbe
xchg
xorl
mov
addr16
ljmp
lret
cmp
xlat
cmpsb
mov
cmp
sti
sub
cmp
decl
sub
mov
lods
push
xchg
jmp
loopne
das
pushf
sbb
xlat
mov
xchg
and
or
sub
nop
add
sahf
mov
jbe
xor
dec
pop
lock
adc
and
fwait
popaw
call
pop
ret
lea
cli
xchg
jmp
mov
xor
gs
aaa
shll
add
mov
jnp
dec
push
push
lds
fisubrl
hlt
mov
test
push
lock
hlt
sarl
xlat
les
mov
add
scas
data16
push
jle
addb
mov
mov
imul
jno
ds
cmp
sub
nop
in
dec
pop
lods
int3
pop
shrl
mov
in
push
dec
jecxz
xchg
inc
jmp
or
or
jnp
call
sbb
and
sbb
xlat
mov
cmp
push
rcrb
dec
mov
test
pop
fsubr
xchg
sbb
cmpb
inc
jnp
nop
lods
jl
inc
ret
ret
rcrb
data16
jmp
or
inc
lahf
push
and
sbb
imul
in
mov
cmp
pop
dec
popw
js
into
sbb
xor
test
adc
enter
les
inc
leave
repz
xor
imul
popf
dec
mov
xor
xchg
or
jne
int
and
mov
mov
out
and
imul
lea
pushf
fisttps
inc
push
std
lret
xchg
or
in
out
cmp
arpl
xor
push
cmp
mov
pushf
cld
jno
mov
dec
stos
mov
push
mov
lods
mov
imul
in
loope
pop
sub
andl
xchg
or
push
and
mov
shrl
add
sbb
xor
mov
idiv
dec
mov
pop
call
cmpb
and
mov
aas
loop
mov
lods
inc
inc
and
iret
push
and
and
mov
lea
sbb
sar
xor
push
mov
gs
inc
mov
jmp
cmpsl
push
lods
les
dec
iret
dec
sahf
pushf
inc
inc
lea
mov
and
mov
push
ret
lret
es
js
dec
push
add
les
jns
pop
xorb
lret
ss
lock
xor
das
insb
sub
jmp
lcallw
cmp
mov
xor
jg
mov
in
mov
icebp
ds
mov
xor
xlat
or
sbb
fcmovne
cmp
out
inc
stos
movsl
ret
mov
dec
push
call
inc
jp
pop
bound
addr16
mov
das
imul
dec
popf
xchg
subb
dec
lock
jno
push
out
xor
push
flds
std
push
lds
or
std
and
cs
out
xorl
test
iret
loop
cmp
scas
daa
push
cmpsb
or
push
fwait
pusha
es
and
dec
jge
fmulp
mov
outsb
jae
clc
and
xchg
in
mov
add
mov
lret
insl
fldt
xor
cmp
push
jge
mov
ds
cwtl
push
mov
xor
mov
scas
dec
inc
idivl
call
mov
test
out
into
and
mov
leave
popf
push
lea
sbb
es
dec
clc
jo
inc
lret
add
add
inc
in
faddp
fs
into
aas
iret
scas
xchg
in
xor
jmp
jno
mov
lret
or
and
nop
bound
mov
add
outsb
pop
cmp
ret
icebp
mov
xchg
or
xor
lods
add
mov
loopne
stc
and
stc
sbb
xchg
cmp
mov
ret
aas
push
outsb
mov
test
stos
pop
and
sub
pop
xchg
mov
cmpsl
inc
mov
cmp
inc
inc
jne
loop
cmc
out
sub
pop
pop
daa
lcall
roll
inc
mov
jo
popa
and
jle
mov
mov
cmpsl
xchg
xor
mov
pop
xor
xchg
mov
addl
push
mov
mov
push
pop
in
imul
lcall
cmp
out
loop
mov
bound
push
dec
pop
shrb
or
pop
sub
xor
push
dec
xor
and
sub
lock
out
sbb
call
add
test
mov
jp
scas
mov
stc
iret
sub
add
shrl
mov
cmp
and
mov
fimull
push
sub
ljmp
imul
outsb
add
jl
adc
into
sbb
mov
xrelease
scas
jnp
std
gs
in
xchg
fs
es
lods
fwait
cmp
and
loope
sti
pop
dec
push
loopne
sub
add
bound
out
dec
push
adc
jl
roll
ss
jb
mov
or
sbb
leave
mov
frstor
out
test
xchg
cmp
out
and
sbb
sub
aaa
sbb
mov
sbb
mov
pushf
outsb
cmp
pop
push
pop
lods
icebp
cmp
in
imul
rcrl
ret
lret
scas
or
nop
sbb
xor
push
dec
aas
mov
out
xor
and
sub
mov
clc
sbb
and
cmp
aam
jg
addl
das
jo
enter
pop
mov
adc
jmp
inc
and
ss
mov
mov
fcomps
inc
mov
jmp
sub
mull
push
mov
dec
jle
xor
and
or
xor
scas
and
pop
mov
xchg
cmp
cmp
daa
jnp
xlat
cwtl
push
xchg
lahf
fs
mov
sbb
sub
inc
dec
ja
aam
or
fcmovb
cltd
xlat
inc
fisttpll
fmul
mov
mov
in
rclb
scas
jmp
xor
pop
rclb
xorb
xorl
in
movsl
mov
std
xor
popl
and
mov
outsl
in
aad
mov
push
mov
mov
scas
dec
es
pusha
sbb
inc
mov
xor
jp
aas
stc
adc
test
jns
test
imul
das
mov
and
pushl
inc
ja
jb
fistpl
xchg
bound
or
xchg
dec
pop
aam
inc
lret
push
add
inc
rorl
ds
pop
add
int3
xchg
ret
fnstcw
je
sbb
cmp
jle
in
rorl
outsl
in
movsb
mov
enter
outsb
and
mov
pop
sbb
fs
pop
cli
mov
pop
inc
dec
out
insl
inc
sub
int3
lods
je
push
push
sub
jp
jae
dec
sahf
adc
iret
push
inc
adc
push
lahf
shl
pop
jg
lahf
xchg
sbbl
xchg
xlat
movsw
fwait
dec
jb
sbb
add
or
sub
xchg
push
int3
jg,pt
fisttps
fildll
fiadds
sbb
lock
je
rcl
or
sbb
mov
mov
xchg
adc
pushf
pop
pop
loope
sahf
mov
addl
jg
aad
xchg
mov
gs
pop
fstps
divl
orl
xchg
pop
push
xor
pop
addr16
imul
cltd
dec
sub
mov
pop
subb
add
push
mov
xlat
cwtl
xchg
movsb
or
mov
mov
pop
jbe
jl
sbb
mov
jle
adc
add
push
sbb
add
jne
sub
xlat
mov
pop
push
repz
mov
cmpsl
fdivs
dec
push
lret
imul
xor
inc
aad
aad
pusha
pop
jmp
xor
idivl
jl
imul
testb
sbb
pop
adc
in
lock
xchg
arpl
adc
push
sarl
loope
lea
add
into
fnstcw
cwtl
les
out
mov
mov
pushf
or
scas
aad
mov
sub
notb
mov
mov
pop
lods
jmp
mov
push
lds
inc
pop
fcmovu
or
cmc
cwtl
cs
cmp
ja
cmp
pop
jne
mov
popa
popf
in
out
xor
add
xorb
add
mov
jg
xor
and
inc
dec
jne
arpl
gs
jae
loop
popw
inc
pop
call
adc
cmp
fcmovnbe
jno
xchg
inc
xchg
addr16
sbb
pop
mov
aaa
or
inc
jmp
es
jl
cltd
mov
push
sarb
int
outsb
xchg
mov
aaa
sarb
orl
jns
imul
mov
divl
dec
shrd
ficoml
mov
adc
cltd
fwait
push
shlb
jno
popa
or
mov
push
pop
mov
mov
sbb
testl
xchg
adc
jbe
daa
xchg
jnp
clc
out
insl
sbb
dec
out
ret
xor
mov
bound
fstpt
inc
or
push
movsb
pop
fadd
cmp
mov
xor
mov
dec
add
dec
jl
mov
ja,pn
lods
in
sahf
aam
ds
dec
clc
jbe
adc
stos
call
outsl
sar
jecxz
pop
add
mov
inc
mulb
mov
lret
and
dec
sub
cmp
xchg
inc
push
jge
adc
imul
pop
je
sub
push
int
xchg
sahf
pop
pop
pop
or
fildll
xchg
daa
and
xlat
sbb
inc
pop
inc
jns
push
cltd
lds
icebp
pusha
shl
cmp
jne
in
sahf
repnz
lods
sbb
insb
iret
outsl
mov
out
mov
mov
adc
mov
mov
scas
iret
xchg
in
xchg
ret
jg
mov
lods
ret
bound
out
xchg
repz
mov
pusha
jmp
jecxz
sti
mov
sub
push
mov
pavgw
iret
mov
hlt
jle
cmp
mov
or
fisttps
jp
in
into
adc
jb
inc
fs
pop
push
dec
dec
iret
adcb
dec
cmpsl
es
dec
jo
add
dec
cmpsb
xlat
xor
cld
dec
cmp
adc
paddb
loope
cltd
sub
mov
inc
jle
sub
fs
sub
lahf
dec
xor
lods
fsub
sti
jge
jp
test
push
test
in
push
pushf
xor
push
dec
sbb
adc
inc
pop
pop
push
pop
imul
jns
lahf
rolb
pop
or
pop
lods
inc
dec
pop
dec
fwait
sbbl
and
aas
test
xor
and
add
popf
aas
sbb
push
idiv
sbb
pop
push
or
clc
fisubs
pushf
pusha
mov
test
inc
lock
mov
push
push
xchg
pop
sub
mov
push
cmp
es
fdivr
jg
movsl
in
lock
xor
jne
push
push
adc
cmp
ss
pop
scas
dec
or
dec
cmpl
aad
shrb
test
imul
jle
cmp
cwtl
fs
sub
loopne
pop
pop
add
lret
xchg
xchg
adc
mov
je
jp,pn
lcall
sbb
ljmp
xor
repnz
es
dec
cmp
lods
push
adc
add
push
sbb
mov
pop
pop
adc
lea
sbb
js
popa
push
add
inc
fdivp
jmp
lret
inc
mov
jnp
xchg
cli
add
adc
shrl
ret
cmp
pop
imul
and
pushf
xor
repz
push
ret
mov
stos
xchg
in
cmpsl
mov
dec
int
cmpsl
add
gs
lock
adc
js
lret
cwtl
jl
pop
mov
sti
dec
pop
inc
movsb
daa
xchg
hlt
push
pusha
push
in
xor
add
push
or
pmulhw
mov
sub
pop
loope
popf
pop
cltd
adc
fstpt
pusha
mov
aad
adc
lahf
lahf
xchg
mov
test
or
mov
sbb
fwait
or
pop
fmuls
dec
shrb
add
and
loopne
cs
in
push
mov
mov
add
adc
std
arpl
in
insb
sbb
jle
insl
jle
es
push
jns
daa
sub
jg
push
sti
xchg
movsb
mov
pusha
aad
test
cld
fndisi(8087
xorb
loopne
repnz
aas
stc
das
push
adc
lcall
movl
nop
cmp
sub
pop
enter
in
dec
xor
lret
mov
enter
clc
ss
add
gs
loope
aas
push
int3
in
mov
aam
es
sar
jns
test
mov
ret
repnz
sub
fcmovu
adc
push
pop
jp
adc
cmp
push
sbb
addl
es
in
xchg
gs
lea
cmp
lret
mov
or
jle
xor
xchg
dec
scas
cmp
sub
fisubrl
ds
adc
cwtl
lcall
or
rcl
pop
popf
iret
mov
out
sahf
push
hlt
in
pop
daa
xor
loope
push
inc
mov
xchg
mov
iret
ja
pop
jmp
call
out
ror
data16
scas
jmp
pop
arpl
into
jb
sub
and
jmp
out
adc
loope
push
sbb
popa
jge
add
mov
notl
xchg
mov
fs
out
cli
popa
test
ss
sub
adc
ficompl
movsb
movsl
mov
add
mov
jp
shrb
cmc
fst
data16
scas
mov
mov
dec
xchg
fwait
repnz
mov
mov
lods
lods
scas
cmp
test
add
lea
leave
xchg
xor
pop
into
adc
testl
jle
cmpsb
push
es
cmp
xor
sbb
imul
xor
aas
in
pop
je
mov
lods
rclb
fidivrs
adc
fisttps
lock
push
mov
jno
pop
mov
movsb
icebp
jb
dec
ret
push
and
pop
inc
rcrl
push
mov
mov
das
aaa
andl
mov
cmpsb
sbb
rcll
dec
sbb
and
push
sub
adc
movsb
push
loop
pop
mov
aas
push
cwtl
mov
xchg
sub
jmp
test
pop
nop
popfw
add
push
dec
pop
fadds
or
sub
int
aas
pop
ret
xchg
cs
insl
sti
mov
xor
cmp
xacquire
push
pop
jecxz
pusha
lds
pop
insb
or
aaa
or
mov
mov
ljmp
shll
ret
imul
mov
mov
lods
js
lds
repnz
inc
fsubrl
add
xor
mov
stos
inc
cmpsb
stos
and
jmp
and
xor
adc
aas
mov
imul
pop
in
push
push
fsts
cmp
repz
and
dec
pushw
outsb
pop
pop
decb
jae
push
mov
cs
xchg
fadds
mov
dec
pusha
dec
out
and
bnd
sub
pop
sti
jb
test
mov
jno
arpl
add
lret
cltd
xchg
pop
out
leave
or
xor
rcrb
xlat
ficomps
add
stc
sub
es
xor
adc
sub
int
aam
sbb
mov
pop
pop
sub
das
xchg
jge
sbb
mov
inc
loop
sub
jp
sbb
loop
nop
fs
fdivrs
hlt
xchg
inc
cmp
daa
xlat
mov
ret
pop
push
pop
dec
sbb
out
sbb
imul
mov
popa
xchg
add
shll
mov
dec
push
push
cli
mov
sub
fdivrl
mov
or
test
les
mov
mov
fcomp
sub
test
push
mov
pop
loope
out
test
mov
jmp
dec
cmpsb
out
push
aam
push
xchg
inc
jo
aas
je
jmp
or
inc
repnz
sbb
or
fidivs
imul
mov
mov
xor
and
das
rorl
adc
popa
or
out
gs
sti
add
jae
xchg
push
ret
stos
mov
pop
pop
andb
cmp
mov
and
iret
fwait
push
adc
pop
xchg
in
mov
out
insb
sqrtps
notl
pop
jnp
cmp
loop
out
ds
in
das
icebp
or
out
dec
push
mov
cmp
roll
ss
leave
xor
into
mov
popa
jecxz
adc
rorb
in
fidivrs
add
stos
nop
hlt
pop
cmp
fbstp
dec
mov
aas
lcall
imul
iret
movsl
mov
cmp
push
loopne
ds
mov
jno
push
inc
mov
pop
jmp
aam
or
lret
push
stc
pop
cwtl
dec
inc
jb
and
rcr
fcompl
cld
add
jo
lods
ficoml
mov
gs
xor
sahf
xlat
xchg
popa
fxch
popf
std
push
and
enter
mov
lods
scas
add
scas
fcmovne
add
pop
xor
xor
shlb
mov
xor
gs
adc
dec
fmull
mov
maxps
lods
sahf
xchg
cmp
fs
test
xor
jne
jno
add
cld
add
andb
inc
sarb
js
dec
lret
test
or
cmpsb
inc
out
and
or
bnd
mov
add
push
and
pop
push
fwait
aas
jle
jl
test
mov
push
int3
fldt
adc
sar
outsl
mov
sub
cld
push
aam
data16
xor
jg
dec
sahf
subb
add
mov
sbb
and
pop
lret
lock
fdivrp
loop
into
inc
mov
repz
sbb
push
mov
mul
mov
pop
notl
inc
lods
or
push
pop
and
and
cmp
push
sbb
or
loope
cmp
hlt
jb
cwtl
mov
pop
and
ret
in
cmp
jmp
mov
stc
js
shll
lcall
cmp
and
or
sub
insl
out
std
insl
sbb
xchg
pop
add
std
mov
cmpsb
out
add
into
mov
jbe
sub
mov
mov
or
dec
repnz
inc
xchg
fistl
insl
adc
add
inc
cmp
into
mov
xor
cld
mov
xchg
pop
xchg
imul
rcrl
pop
dec
insl
test
icebp
outsl
sbbl
lods
jbe
movsl
mov
xchg
repnz
nop
cmp
mov
mov
mov
fistl
mov
mov
sarb
jg
out
mov
pop
inc
sub
into
lea
test
loopne
push
mov
xchg
mov
jle
rclb
or
movsl
jb
mov
pop
jge
loopne
fisttpl
lcall
inc
lret
push
pop
ds
loop
imul
mul
and
inc
stos
mov
in
roll
addr16
ljmp
insb
adc
fcoml
mov
or
mov
xchg
into
sbb
addr16
lods
dec
pop
mov
xor
sub
out
mull
jae
sahf
icebp
loope
loope
mov
pop
jecxz
jmp
cmpsb
arpl
fstps
pop
sbb
mov
xchg
fsubs
dec
dec
inc
mov
mov
dec
mov
outsb
dec
ret
xchg
repnz
ljmp
push
fs
out
cltd
mov
paddd
push
sti
and
bound
daa
out
jns
inc
dec
sbb
xor
sub
out
mov
pop
xor
pop
sub
je,pn
push
push
ja
fsubl
icebp
fdivl
jl
cmc
cmpsb
fsubr
rorb
jg
xor
dec
data16
mulb
es
dec
add
nop
xchg
aaa
and
sub
cmpsl
jl
negl
mov
int3
xor
insb
or
popa
jl
inc
lods
xchg
out
xor
or
es
mov
shl
sub
and
add
push
arpl
jnp
pop
hlt
sahf
and
mov
js
push
js
icebp
ds
jl
rolb
add
cmpsl
movb
lret
adc
ss
sbb
repnz
inc
sub
pop
cmp
mov
std
and
jo
frstor
push
mov
out
xor
fsubs
out
xchg
inc
sub
call
incb
inc
inc
jle
sub
add
or
jb
inc
jae
pop
pop
into
ss
cmpl
cmp
nop
pop
enter
stos
mov
daa
adc
out
jb
nop
stos
leave
jns
orb
popa
pop
adc
stos
and
xchg
add
pop
ret
pusha
xchg
xlat
insl
pop
test
mov
sbb
loopne
mov
mov
jne
xchg
test
mov
dec
lea
testl
mov
fwait
jge
pop
mov
ficomps
mov
arpl
mov
jg
data16
loope
push
fistpll
xchg
jmp
inc
lods
dec
jle
cmp
jl
mov
and
jp
fisttpl
sbb
sti
xchg
subb
ljmp
rcr
mov
dec
jle
mov
cmp
daa
in
push
jbe
push
enter
xlat
xchg
in
les
sbb
sub
add
aad
ss
pop
push
xorb
sub
inc
shll
push
add
lods
inc
xchg
fidivrl
cs
add
push
loope
addr16
cld
add
push
dec
mov
dec
andl
pop
sbb
jp
ljmp
mov
leave
ljmp
pop
cli
scas
inc
lret
or
push
sbb
mov
out
loope
pop
andl
dec
mov
daa
push
add
lods
out
dec
or
xchg
enter
test
dec
shrl
outsb
mov
mov
push
roll
stos
int3
mov
insl
mov
mov
jmp
add
imul
push
fcoml
sbb
xor
in
jae
push
pop
or
inc
cmpsb
mov
mov
xorl
xor
aam
xchg
imul
fcmovbe
sub
lahf
xchg
test
sbb
xor
roll
inc
mov
pop
in
loope
add
cmp
cmpsb
xor
xor
insl
mov
imul
aam
xchg
push
loope
dec
cmp
mov
lcall
rclb
fcmovne
push
lock
cmp
test
shlb
lret
xchg
xchg
pop
cmp
jb
xchg
sbb
fdiv
dec
sbb
test
enter
pop
and
pop
fisttpll
and
out
jns
cltd
imul
push
pop
inc
xor
adc
ja
push
fwait
ja
lret
jmp
xchg
nop
test
data16
pushl
push
cmp
jg
negl
push
xorb
aam
dec
push
lods
flds
add
xchg
loope
add
sbb
and
jae
insb
pusha
cmp
rol
repz
or
add
dec
adc
mov
sub
test
lret
jl
rcl
test
popa
addr16
fsubr
add
das
sub
cmc
mov
and
cmp
js
mov
push
enter
lea
sti
int
jne
or
mov
cmc
nop
icebp
and
pop
in
xor
call
testb
jle
aam
sbb
cmc
dec
adc
inc
xchg
sbb
xor
and
lcall
lcall
out
sti
bound
xchg
mov
mov
test
sub
out
fs
sbbl
call
mov
fisubrl
test
jnp
je
test
xchg
dec
jns
xor
dec
xchg
xlat
hlt
int3
test
dec
sbbl
aad
mov
dec
inc
ljmp
imul
jmp
mov
xor
mov
and
inc
movsb
nop
or
lea
test
or
ds
jg
hlt
jne
ss
sbb
mov
push
bnd
fwait
jbe
xor
gs
and
sbb
sub
dec
adc
xchg
lods
mov
ret
movl
imul
mov
sbb
mov
scas
lret
push
dec
ss
sti
sub
xchg
mov
and
in
sub
lea
imul
xor
addr16
mov
fmulp
inc
addr16
outsb
push
push
enter
fwait
or
outsl
mov
into
fstps
or
jne
mov
dec
rcrl
icebp
push
push
mov
dec
push
dec
cmp
push
mov
and
xor
cmpsl
jl
sahf
pop
pop
jnp
insb
out
movsb
mov
xchg
fisttpl
sarl
pop
imul
sub
jmp
rcr
les
push
out
imul
je
fnsave
sarl
jnp
xor
lods
dec
dec
add
cwtl
in
into
aam
xor
aaa
jle
repnz
outsb
jle
xchg
push
mov
mov
iret
sbb
popa
andb
inc
mov
cmp
push
icebp
sub
lea
stc
sub
test
andb
cmp
cmp
sub
adc
imul
pop
or
add
bound
pop
cli
cmpsl
jb
jno
add
lds
out
std
mov
xor
push
jl
aad
sbb
cwtl
cmp
pop
aad
fmul
jne
mov
mov
movsl
mov
jo
cmp
in
lret
pop
sbb
ficoms
inc
test
mov
mov
add
inc
xchg
scas
call
xor
jnp
mov
shll
mov
push
lea
xchg
mov
cmp
outsb
mov
pop
icebp
inc
loopne
and
call
popa
pushl
jns
push
sub
idiv
push
sub
subl
gs
repz
sub
lds
add
mov
int3
neg
into
out
sbb
mov
sub
and
lret
inc
cltd
add
jl
mov
mov
or
xchg
sbb
bound
adc
orb
fmuls
addl
cmp
lods
incl
jmp
mov
add
jl
cltd
loop
jae
cltd
xchg
lods
mov
jnp
inc
pusha
test
aas
imul
movsb
mov
xchg
repnz
les
in
xlat
stos
and
jge
popl
push
mov
rorl
ret
sub
xchg
popf
and
icebp
jne
push
negl
adc
imul
cmp
jg
xchg
insb
sub
ljmp
push
adc
adc
aaa
jo
in
es
in
out
test
aaa
mov
pop
ljmp
bound
cmp
test
inc
out
bound
mov
addr16
sub
in
arpl
mov
mov
rolb
add
push
mov
jge
mov
aaa
xchg
sub
inc
mov
lds
push
mov
cs
push
sbb
mov
fmul
mov
insb
addr16
int3
mov
fisttps
add
xchg
mov
push
or
mov
cmpsb
jnp
sti
stos
push
push
sub
test
push
mov
rcrb
lds
pop
fistps
jno
popa
aad
ja
aad
and
hlt
cmp
xchg
jle
xchg
fisttpl
lods
iret
push
dec
add
pop
and
fdivrs
pop
sbbb
aaa
sub
add
loopne
sub
pop
stos
xor
pop
lds
dec
pop
dec
scas
xor
and
mov
xor
inc
mov
jno
sarb
aaa
loopne
scas
add
int
push
xchg
das
inc
or
push
xor
ljmp
sub
cltd
jecxz
dec
xor
in
loop
mov
fstpt
and
jecxz
icebp
cld
fisttpl
mov
and
out
xchg
dec
and
test
sti
pop
ljmp
loop
sbb
aad
cwtl
out
xchg
add
jo
fs
pop
sub
cmp
lret
leave
add
pop
scas
inc
xchg
loop
jno
cmc
in
sbb
pop
xchg
xchg
push
mov
je
jo
shrl
jle
rcll
jg
std
testl
and
pop
jo
mov
sub
lahf
mov
popf
and
rclb
orl
inc
arpl
scas
xchg
enter
clc
adc
inc
pop
ret
inc
xchg
xor
mov
mov
mov
rcrl
xchg
xor
jp
cs
push
sbbl
jmp
and
and
and
pusha
movsl
sub
out
mov
mov
sub
xorb
adc
jne
adc
inc
mov
mov
adc
fists
jl
bound
mov
inc
imul
cmc
outsb
and
jne
fsts
rolb
mov
pop
jl
pop
filds
jmp
jo
out
jbe
mov
sbb
dec
loope
mov
push
cli
sub
mov
insb
cmp
add
or
sub
inc
outsl
repnz
push
lock
or
or
call
jecxz
xchg
mov
or
push
lods
push
test
and
sbb
in
cltd
lock
int3
xchg
mov
pop
jp
out
push
dec
les
sub
sub
inc
lret
jne,pt
enter
fs
pop
in
aam
inc
or
ret
push
mov
movb
jp
out
lret
or
cmpsl
outsb
or
rclb
or
push
lret
pop
lods
aad
xorb
or
push
cmp
insb
outsb
mov
outsl
loopne
dec
dec
data16
lret
das
incb
xor
in
enter
stc
lahf
mov
ss
xor
xchg
scas
call
loope
mov
push
aaa
push
mov
popf
jns
cmp
ss
in
or
adc
outsl
out
pop
outsl
push
cmp
or
popf
stos
pop
push
mov
inc
test
mov
pop
mov
pop
out
repnz
cli
add
sub
push
ret
jb
scas
mov
lods
pop
dec
hlt
fdivrs
out
add
hlt
and
mov
sbb
ds
sub
push
mov
or
xchg
lret
adcb
cld
mov
out
movsb
adc
outsl
imul
pop
mov
jae
imul
pop
and
cmp
and
sbb
push
loope
mov
dec
adc
les
push
icebp
in
xchg
jne
jg
push
or
inc
mov
fiadds
sub
xchg
xchg
mov
lods
daa
xchg
dec
dec
ja
fidivl
sbb
std
push
ja
sbb
inc
sub
and
nop
adc
xchg
mov
fpatan
repnz
cmp
push
cmp
test
mov
xchg
xorl
rorl
out
cmp
inc
insl
mov
jo
pop
data16
jne
js
orb
lret
add
scas
popf
jnp
es
push
mov
push
jo
shrl
fwait
mov
sbb
cmpsl
jg
jns
cmpsb
lret
pop
ret
add
push
xchg
and
mov
nopl
fsubr
mov
mov
add
push
pop
sub
inc
xor
add
les
push
jle
adc
mov
scas
cmpsl
add
bnd
jmp
movsl
js
fsubrs
test
mov
out
pop
sbb
mov
cltd
icebp
fsubs
xor
sub
dec
icebp
es
xchg
mov
call
shrl
add
mov
sbb
mov
jle
inc
jecxz
lret
jge
cmc
shrl
xchg
mov
outsl
mov
test
les
xor
lds
xor
pop
xor
cmp
mov
fldt
faddl
cmc
sub
cli
xor
cmp
cmpsb
fdivrl
adc
cmp
jnp
fildl
lock
push
mov
fprem
lret
outsb
dec
xchg
sub
xchg
jge
sbb
inc
xchg
jmp
cmp
inc
mov
test
push
cmp
shlb
rcrb
fldenv
cs
int
xchg
mov
sbbb
fcmovnu
subb
mov
icebp
pusha
adc
mov
cli
cli
clc
xchg
stos
sub
out
sub
mov
insb
aad
outsb
lret
jle
ficoms
inc
lret
ficomps
leave
notb
pop
loopne
xchg
xor
dec
fldcw
pop
test
cmp
inc
shrl
adc
xchg
xchg
leave
jo
int3
or
adc
mov
adc
loopne
into
cltd
pop
xchg
out
and
xchg
push
scas
imull
mov
sbb
adc
xor
inc
iret
or
call
fwait
mov
popf
jmp
inc
mov
xor
mov
jecxz
pop
cltd
cld
scas
decb
dec
outsb
cmp
adc
sub
add
loopne
je
mov
loopne
imul
push
push
inc
mov
add
clc
aam
call
vshufi32x4
ret
mov
push
adc
cltd
mov
movb
loop
shl
stc
pop
cmp
imul
in
mov
jne
sbb
mov
lcall
push
insb
clc
shll
xchg
out
pop
pushf
jecxz
dec
mov
jae
loop
sub
and
scas
jle
pop
mov
clc
iret
icebp
movsb
andl
mov
sub
lcall
jg
fwait
outsb
add
arpl
mov
lea
adc
mov
push
orl
push
and
in
das
push
xchg
mov
jne
cmpsb
stos
and
jge
pop
call
push
je
jge
in
mov
jmp
inc
ja
inc
or
add
push
clc
ret
mov
jae
mov
cli
jmp
push
adc
fldenv
or
adc
lret
insb
ss
cmpb
jnp
mov
push
lcall
push
xor
ret
cmp
xor
cmp
inc
mov
js
push
cli
rclb
into
push
dec
mov
sbb
or
and
dec
mov
jnp
and
stos
sub
ja
mov
and
inc
inc
xor
lea
mov
sub
inc
and
add
aam
popf
pop
loope
movl
adc
add
sbb
pop
dec
cmp
sarl
pop
shll
push
dec
push
cmp
insb
fldl
sbb
xchg
cli
push
mov
inc
ljmp
ljmp
mov
fbld
jns
pop
adcb
jle
xor
in
xchg
pop
cmp
decb
mov
in
jmp
std
mov
mov
rcll
mov
inc
ljmp
xor
dec
jae
sub
mov
pushf
push
jae
mov
adc
ss
insb
movsb
stos
test
lock
pop
bound
loopne
mov
ja
jle
mov
mov
push
dec
loop
jg
pop
pusha
daa
scas
or
xor
jnp
lods
mov
inc
aad
lods
sbb
incl
punpcklbw
imul
leave
sahf
arpl
in
fldcw
lods
ret
pusha
add
dec
push
sbb
test
pop
jle
mov
mov
mov
xor
or
inc
rcll
or
jp
xchg
sbb
mov
push
mov
add
aaa
push
sub
sbb
mov
cld
sub
dec
fs
dec
mov
std
push
repz
inc
or
flds
mov
fimuls
jne
je,pt
ret
repz
ljmp
hlt
lret
mov
stos
xchg
inc
in
adc
and
notl
mov
pop
dec
push
mov
pop
enter
jo
inc
repnz
push
nop
mov
fnstcw
xchg
pop
lods
cmp
inc
xor
iret
aas
adc
std
pushf
adc
arpl
das
inc
push
sahf
in
pop
movb
fninit
js
xor
lods
pop
in
cli
add
dec
js
jb
and
and
aas
aaa
push
push
inc
fs
fs
sti
push
cmp
add
movsl
enter
pop
cmp
popl
inc
inc
and
arpl
jb
addl
jnp
test
dec
outsb
jnp
sbb
lahf
leave
addb
cmp
cld
cmp
jle
mov
lods
xor
pop
push
outsl
int3
push
cwtl
push
dec
aad
jb
sub
dec
pop
pop
scas
in
test
jmp
shll
popa
inc
mov
mov
cmp
cs
leave
pusha
in
mov
int3
push
lahf
rol
imul
mov
imul
push
loopne
xchg
mov
pop
mov
mov
jno
popf
imul
pop
into
fmuls
mov
jns
add
in
cli
enter
xchg
aad
push
pop
inc
and
popa
jg
outsl
subb
pusha
jecxz
push
add
xchg
outsb
aam
jge
iret
lods
ljmp
or
ficoms
outsb
add
ret
mov
and
mov
push
mov
jne
lcall
mov
mov
and
leave
xchg
mov
subb
aas
pop
jnp
push
and
hlt
jg
fidivrs
pop
lea
push
sbb
hlt
xchg
pushf
cmpsl
push
lret
fcompl
movsb
dec
cmpsb
xor
out
jno
loope
push
ljmp
sbb
aam
inc
mov
adc
cli
dec
std
stos
lahf
mov
stc
fildll
imul
fwait
stc
mov
mov
scas
mov
nop
daa
stc
xor
and
push
jl
jbe
jnp
inc
mov
leave
pop
shll
push
cmp
fwait
mov
mov
insl
jae
testl
inc
xor
xchg
insb
or
and
jp
hlt
addr16
call
mov
sbb
push
mov
pusha
pop
xchg
inc
out
stos
stos
pop
jns
sub
mov
mov
cs
cmp
and
pusha
outsl
cmp
pop
sbb
popf
lea
sahf
xchg
repz
xor
lods
jbe
sbb
mov
mov
lods
jge
xchg
inc
repz
xor
fdivrs
sbb
out
fcmovnu
cbtw
subb
orl
jne
mov
sbb
jb
test
test
lock
outsb
sbb
dec
lea
jne
fidivl
andb
sub
mulb
aam
insl
loopne
inc
lods
xor
mov
pop
mov
outsb
push
push
add
out
pop
shrb
dec
pop
leave
mov
test
sbb
outsb
sbb
iret
xchg
into
imulb
cmc
stc
ljmp
add
jne
in
mov
int
jmp
cmp
in
xlat
in
push
sub
xchg
cmp
and
mov
push
repnz
mov
dec
push
outsl
cmpl
jne
sahf
mov
mov
icebp
ret
jne
and
into
int3
je
int3
xor
test
pop
rol
mov
mov
inc
test
pop
ret
push
loopne
xchg
orl
and
enter
inc
roll
es
mov
mov
push
lret
ljmp
jmp
in
jge
mov
mov
fiadds
adcl
stos
lea
and
xor
pushf
jbe
fadd
mov
push
jg
dec
test
add
or
push
sub
mov
mov
shll
insw
xchg
imull
mov
out
pusha
cmp
or
xchg
stc
jns
cmp
mov
data16
or
add
xlat
out
bound
ljmp
sbb
push
shl
jbe
mov
lds
movsb
push
gs
lret
addr16
es
mov
popf
sarb
cmpsb
push
addl
dec
pop
repz
xchg
mov
push
test
fdiv
ja
add
xor
pop
cmp
enter
stos
adc
dec
sbb
dec
les
jnp
stos
sbb
push
outsl
and
loop
dec
cmp
pop
nop
xor
adc
fstps
add
popa
inc
adc
mov
push
add
incl
inc
clc
addr16
inc
fiadds
mov
daa
jne
lcall
or
cmpsl
inc
vcmpsd
int3
sub
cmp
push
xor
xchg
or
push
faddl
adc
and
jae
push
jns
adc
mov
aas
push
js
jb
popa
inc
idiv
pop
test
lds
nop
and
pop
lea
ljmp
push
sub
jl
lds
cli
mov
dec
fcomip
sbb
fcmovb
jp
jp
shrb
xor
jecxz
xlat
or
shl
test
pop
std
jmp
inc
ds
loope
sub
stos
mov
stc
mov
dec
jg
sbb
imul
pushf
mov
jl
call
daa
jle
or
add
loopne
dec
lcall
fwait
pop
xchg
mov
mov
stos
inc
xorb
pop
fldcw
or
enter
cmp
orl
fidivl
jne
das
sbb
mov
sub
sahf
inc
adc
adc
stos
fstl
pop
insb
lods
jle
sub
fsubl
xor
leave
test
sti
add
adc
lret
cmpsl
mov
inc
ja
aad
lods
xlat
jle
xchg
sbb
xor
dec
fidivrs
mov
loopne
push
mov
xor
pop
subb
lret
adc
imul
movsl
sti
shlb
or
cmp
lret
and
jno
cmpsb
mov
into
sub
jg
or
inc
out
xor
cli
and
jne
mov
mov
movsb
jno
add
lret
and
insb
mov
pop
nop
pop
jae
xchg
mov
hlt
les
sti
scas
adc
dec
bound
xlat
and
push
adc
inc
jnp
and
daa
out
shlb
test
xor
jle
push
mov
outsb
imul
imul
mov
dec
lret
stc
xchg
push
and
popa
sub
inc
das
cmp
push
in
xchg
dec
lods
cli
cs
rclb
cmp
inc
test
pop
adc
imul
fldl
pushf
test
jmp
xor
decl
dec
mov
ja
daa
adc
dec
incl
jl
jnp
dec
xchg
jmp
test
mov
jp
jnp
cmp
add
out
leave
scas
jecxz
add
jbe
repz
dec
lods
leave
add
inc
mov
adc
adc
inc
cmp
cmpl
sub
popf
mov
std
hlt
enter
cmpsl
dec
or
lods
mov
mov
hlt
mov
lea
add
jbe
xor
mov
push
outsb
or
lods
and
ss
push
and
pop
or
sub
call
dec
or
mov
mov
inc
inc
mov
inc
push
out
mov
mov
ds
test
in
adc
or
xchg
dec
out
cmp
fists
mov
pop
fucom
dec
pop
imull
sbb
lahf
sub
push
iret
pop
lods
je
jae
fadds
jecxz
inc
lods
in
mov
mov
push
imul
sub
inc
cs
andb
inc
test
fisttpl
sub
pop
pop
xor
pop
xchg
and
jp
push
in
cli
inc
mov
xor
jae
loopne
xchg
push
pop
mov
jmp
in
leave
int3
dec
add
pop
xor
cli
mov
xor
mov
mov
push
outsb
mov
add
sti
xchg
xchg
jp
pop
aam
push
bound
in
pushf
pop
mov
popa
in
es
push
aaa
jecxz
sub
adc
clc
into
pusha
cmpl
adc
stc
sub
outsl
popa
sub
bound
pop
scas
jo
lahf
pop
or
adc
xchg
mov
push
inc
mov
mov
call
cmp
cmc
fstpt
add
hlt
pusha
sub
sarl
fld
lcall
mov
hlt
test
pop
cmp
mov
cmp
dec
inc
fdivp
mov
fildl
pop
loope
cmp
cltd
insb
and
add
mov
push
push
adc
xlat
adc
jle
out
pop
iret
mov
pop
enter
push
xor
divb
sub
or
adc
fstl
lcall
lret
inc
jge
sub
sbb
pop
mov
aam
lods
lea
aad
jg,pn
jle
pop
cmp
jp
jecxz
sbb
xchg
fisttps
dec
cmp
pop
sahf
sbb
ds
sub
clc
les
xchg
es
xchg
out
pop
sub
cmp
jns
fcomp
imul
js
pop
adc
xor
push
xchg
js
adc
mov
clc
xor
andb
or
cltd
and
lods
mov
cmp
mov
xchg
leave
jmp
cmp
xor
adc
pop
std
mov
fidivrl
and
sub
jo
xchg
push
sbb
dec
push
aad
xchg
mov
ret
mov
pop
mov
push
ljmp
inc
xorl
lret
test
dec
xchg
insl
and
ret
adc
idivl
cmp
in
rcl
clc
sub
adc
mov
int
jo
loopne
xchg
and
push
lcall
iret
lcall
jl
lods
loop
outsl
sbb
fwait
aaa
jno
mov
and
mov
aam
std
add
nop
icebp
pusha
or
mov
fdivrl
call
test
dec
fwait
push
lock
adc
and
mov
fmuls
lret
imul
je
cld
pop
mov
adc
cs
push
pop
fcoms
jmp
sti
dec
mov
orl
cmp
sbb
push
mov
cmp
and
jp
or
popa
jb
xlat
push
and
add
push
jmp
stos
sbb
loop
das
hlt
sbb
add
jo
inc
xor
dec
shrb
cmp
arpl
jne
inc
icebp
inc
add
es
test
or
inc
cmc
add
gs
adc
aad
ret
or
int3
fwait
outsb
test
dec
movsb
mov
adc
mov
repz
scas
out
xor
es
pushf
mov
mov
addr16
out
inc
inc
imul
es
scas
ds
mov
xor
cltd
mov
lahf
xchg
pop
mov
sbb
adc
dec
scas
mov
add
pop
into
dec
cmpl
je
jmp
push
cs
jne
push
jp
aad
push
cmpsl
add
insl
dec
push
xchg
lahf
sub
stos
je
fimull
adc
xchg
idivl
clc
sub
pop
jns
push
ret
outsb
in
push
cld
jecxz
add
jmp
ret
push
push
sti
sbb
mov
test
xchg
mov
and
int3
push
add
sbb
psubsb
jns
mov
cmpsb
mov
cmpsl
jne
cmp
xor
jle
mov
mov
add
std
les
fcmovnu
ret
or
ds
out
mov
adc
mov
aaa
xor
push
scas
jge
cld
push
aam
inc
and
sete
pop
icebp
push
sub
pop
xchg
mov
xor
xor
dec
shrb
pusha
jmp
xor
xchg
test
sub
jp
shrl
pop
lds
je
jl
push
pop
cmp
adc
aas
push
pop
fiaddl
movsb
sbb
mov
mov
xor
cmp
int
repnz
std
aam
mov
sub
inc
repz
adcl
sub
movntq
out
jl
sbb
bound
push
scas
xor
cs
sbb
std
pushf
pop
jb
hlt
jnp
jl
movsl
js
ds
sbb
jnp
repnz
lods
in
jge
inc
cltd
arpl
lahf
adc
std
std
daa
and
arpl
testl
xor
lds
aaa
sbb
xlat
jle
sub
pop
xchg
fs
outsb
mov
inc
orl
xchg
adc
sub
lods
xchg
inc
sub
sbb
push
flds
fs
es
test
cmp
std
pop
pop
mov
sub
xor
inc
mov
sbb
adc
insl
sbb
mov
jmp
outsl
aad
sbb
out
out
inc
cmp
pop
xchg
jge
jmp
pop
cmc
in
and
lods
cli
xchg
inc
xor
sub
popa
stos
mov
jge
and
imul
enter
mov
dec
adc
xor
aaa
cmp
jg
or
cmp
mov
stos
outsl
pop
push
sub
cmp
sub
cmp
popf
es
dec
adc
mov
mov
xchg
lret
xchg
iret
push
xchg
mov
adcl
cmp
and
daa
int3
pop
or
notb
adc
mov
cs
sbb
pop
out
cmp
mov
and
test
aam
pop
xchg
pop
add
inc
inc
push
sub
rcl
mov
pop
mov
and
in
pop
out
dec
mov
ret
fsubs
loopne
mov
cmp
sub
mov
mov
or
or
in
arpl
push
aam
add
sub
lods
mov
ljmp
jnp
mov
loope
mov
fcmovnb
jl
int
js
dec
inc
imul
in
mov
mov
mov
sbb
xor
adc
in
mov
pop
mov
and
push
push
popa
aaa
out
mov
dec
cmc
dec
sub
push
xor
and
cld
fsubl
dec
imul
mov
repnz
fs
mov
fimull
push
inc
rcr
js
idivb
ja
jae
andb
add
ret
shlb
gs
roll
or
mov
insb
sub
lcall
repnz
imul
fildll
popf
jmp
loop
ja
inc
aam
cld
icebp
ss
adc
xor
add
cwtl
test
das
ret
jae
inc
cmp
pop
xor
pop
jp
imul
icebp
dec
push
pop
sub
dec
incl
mov
testb
mov
aaa
or
enter
push
xor
cld
fs
iret
sbb
in
dec
inc
std
add
jno
and
sbbl
push
pop
xor
fs
sub
test
je
inc
inc
leave
jno
out
jbe
jo
dec
mov
mov
popf
mov
adc
imul
dec
dec
fists
push
je
jne
push
lahf
ljmp
mov
sub
dec
es
xor
adc
adc
shlb
xchg
ds
lahf
movsb
sub
sbb
shrb
push
pusha
dec
in
push
mov
push
inc
mov
in
lea
dec
ds
xor
jmp
jo
mov
je
or
and
xchg
inc
sub
iret
test
dec
out
rcll
ds
sahf
mov
jp
imulb
pop
and
jbe
adc
push
mov
mov
ret
pop
lcall
add
test
add
pop
mov
daa
aaa
mov
mov
xor
xor
sbb
je
js
push
idiv
mov
or
sbb
mov
dec
in
inc
popf
roll
jb
adc
fs
shr
lock
pop
js
pop
inc
xorb
mov
inc
adc
ljmp
imul
out
mov
cmp
inc
cmpl
push
in
insb
je
cmp
in
inc
lds
xchg
stos
adc
or
fisubrs
pop
mov
sbb
mov
mov
scas
xor
inc
dec
push
xor
xor
lock
jno
inc
scas
jp
jnp
xor
stos
lods
setle
aam
pop
sbb
jbe
call
ficoms
jns
jns
mov
sub
push
das
int
cmpsb
pop
push
xor
pop
into
mov
mov
inc
repz
aad
xor
pop
js
and
xlat
mov
popa
mov
mov
mov
loopne
in
mov
xor
addr16
push
xchg
or
dec
addl
lcall
aas
test
shr
mov
icebp
push
sub
dec
flds
add
scas
test
stc
inc
jno
imul
sarb
xchg
push
imul
sub
subl
sub
fnstenv
fildl
stos
insb
mov
sbb
push
xchg
inc
cwtl
bnd
xor
sub
push
push
xor
nop
mov
leave
sbb
inc
push
in
sarb
js
jg
pop
sbb
or
stc
pop
xor
popf
adc
sbb
mov
out
scas
fiadds
and
sbb
sbb
mov
sbb
jmp
sahf
cmc
negl
mov
push
fwait
mov
pop
cld
xchg
sbb
or
and
push
mov
push
mov
mov
pop
stos
test
mov
outsb
mov
dec
nop
sbb
pop
mov
cmp
nop
fwait
and
jbe
jge
les
push
in
in
rcrl
adc
or
cmpl
mov
movsl
std
nop
in
outsb
insb
add
mov
add
mov
icebp
dec
sbb
into
mov
flds
lods
enter
notl
push
inc
mov
enter
sbb
lods
push
pop
add
xor
sub
mov
repnz
mov
mov
aas
cvtps2pd
jl
push
popf
nop
ret
fsubs
jne
int3
in
mov
mov
fistps
dec
inc
xor
daa
insl
call
hlt
daa
out
insl
lds
daa
cld
xchg
insb
add
push
mov
repz
imul
dec
sbb
loopne
pop
rcr
rcrb
sub
mov
mov
icebp
dec
test
dec
mov
dec
push
xor
ds
std
das
xchg
pop
sub
mov
insl
cmc
outsl
popa
clc
mov
add
aas
jae
stos
loope
cmp
mov
push
cmc
pop
in
mov
add
stc
xchg
data16
jmp
mov
adc
out
out
jne
and
movsb
mov
sub
adc
adc
xor
mov
dec
and
popa
js,pn
cwtl
sub
add
decl
in
inc
iret
jnp
out
loopne
mov
xor
adc
xor
inc
test
adc
data16
lcall
mov
mov
push
stos
jb
daa
mul
es
mov
dec
call
dec
sar
test
data16
mov
lock
cmp
sub
mov
lods
popa
cmp
idiv
adcl
cmp
lahf
xor
or
adc
mov
mov
sbb
pop
lret
ds
mov
mov
dec
rorl
mov
movsl
in
push
arpl
mov
ds
pop
jmp
out
mov
push
hlt
dec
push
pop
and
shll
cmp
mov
into
loopne
hlt
or
cli
cmc
shrb
arpl
in
pop
sti
lahf
repnz
jb
mov
shrb
mov
insb
popa
addr16
sti
pop
scas
or
mov
xchg
pop
cli
jmp
xchg
inc
jmp
and
or
mov
dec
aam
mov
adc
mov
push
rep
mov
cmp
sub
xchg
jo
xchg
push
sub
add
cwtl
out
addr16
inc
cmp
xor
sbb
inc
mov
outsb
and
sahf
jecxz
xchg
call
lret
icebp
mov
mov
rclb
out
popa
shrb
test
mov
ret
mov
mov
popf
jp
or
adc
push
testb
in
or
dec
cwtl
pushf
lods
pop
movsb
and
sarb
mov
hlt
out
inc
xor
insb
daa
mov
out
fisubs
in
stos
arpl
pop
out
xor
jmp
mov
scas
jge
mov
mov
mov
mov
sbb
or
fldcw
stos
or
sahf
pop
call
fildl
dec
imul
outsb
pop
or
or
sub
cld
dec
or
mov
sub
adc
sbb
push
je
inc
neg
mov
jae
mov
divl
mov
adc
leave
cmp
sbb
push
inc
cmp
into
fbld
inc
mov
xor
clc
lea
jne
sar
add
in
dec
ficomps
iret
inc
or
ljmp
sub
pop
cmpsl
adc
repnz
lcall
lret
xor
cmp
push
scas
scas
or
mov
fiadds
btr
push
xor
test
les
mov
ss
scas
cld
or
jge
sti
stos
cmp
dec
aas
mov
cmp
pop
or
sahf
inc
jle
test
mov
mov
ret
aaa
jnp
rorl
packsswb
inc
pop
ret
sbb
mov
push
loope
call
jnp
pop
mov
inc
sub
pop
sahf
cmp
xor
xor
scas
mov
push
mov
xor
ljmp
push
sti
fnsave
ss
int
xor
jle
add
mov
shll
dec
movsl
mov
insl
insl
out
call
sbb
sti
filds
lret
int3
insb
jo
and
repz
inc
mov
lret
adcl
data16
sahf
mov
pop
xchg
push
into
push
out
pop
mov
in
sbb
and
jmp
lock
outsb
mov
mov
mov
cmp
mov
fnstcw
sub
std
scas
push
rcl
push
leave
and
loopne
outsl
push
sub
xrelease
xor
push
fstpt
sbb
mov
sbb
or
sub
insb
nop
shl
xchg
sub
nop
subl
push
xor
push
add
jecxz
and
xchg
lods
test
push
mov
icebp
scas
push
push
aaa
xor
mov
js
xor
repz
mov
and
adc
mulb
icebp
mov
lahf
xor
aad
mov
dec
mov
sbb
pop
cli
push
push
cmp
inc
int
mov
fcmovnu
inc
push
cmpb
inc
imul
pop
subl
into
push
lahf
push
loop
inc
push
pop
xchg
push
and
xor
inc
bound
sbb
ret
scas
mov
mov
das
fcoms
inc
sbb
mov
cmp
and
jl
cwtl
ds
dec
insl
sbb
rcl
or
mov
nop
xchg
mov
std
movsl
push
xchg
push
popf
lret
push
les
ret
out
aam
addb
pop
in
fidivrs
xchg
jns
nop
je
xlat
aam
cmp
add
icebp
subl
cmp
lds
fadds
frstor
mov
cmp
xchg
inc
mov
and
cmc
and
cs
inc
aas
push
in
cli
jae
scas
ret
push
mov
lcall
hlt
lcall
aam
dec
and
outsb
pop
xchg
push
jbe,pn
and
ss
lock
sti
mov
loop
lcall
xchg
es
addl
jp
mov
sbb
sarb
sub
xchg
sub
mov
adc
mov
stc
jo
test
cmp
dec
imul
xchg
jp
push
add
mov
aas
test
lds
xchg
push
icebp
sub
push
adc
and
hlt
dec
cltd
aam
mov
or
test
in
mov
int3
fidivrl
push
cmp
call
hlt
cmp
es
shr
cmp
lret
adc
or
in
jo
xor
inc
push
ret
or
cmp
pop
jg
add
imul
xchg
mov
push
divl
mov
adc
repz
cmp
dec
xchg
pushf
in
mov
adc
add
movb
jle
stos
or
sbb
in
out
push
ffreep
push
aad
adc
out
xchg
sub
testl
mov
adc
xchg
sub
sahf
pop
push
in
lock
lret
fiaddl
je
adc
dec
add
add
push
push
sbb
cmpb
mov
mov
fcmovnu
shl
inc
js
subl
movsb
or
addl
cmp
dec
xchg
xchg
test
insb
push
mov
aam
sub
fistl
ret
and
dec
inc
ficoms
pop
mov
ret
push
repnz
xor
push
add
push
and
and
imul
subl
jge
shrl
sbb
shll
out
mov
push
test
sub
pop
rol
xor
icebp
sti
out
inc
mov
mov
and
fbld
mov
add
rcrl
ja
push
xlat
adc
sub
bound
gs
movsb
mov
ss
dec
hlt
test
push
shlb
lahf
and
cmp
sub
dec
out
daa
inc
inc
loop
imul
mov
out
shlb
xchg
sbb
add
push
leave
out
ret
pop
or
cmp
mov
pop
push
stos
and
jne
sub
add
jmp
lret
es
pop
cmp
arpl
imul
aam
dec
inc
out
inc
orl
aam
pop
mov
sbb
lods
xor
lods
in
inc
add
xchg
lea
cmp
xchg
cmp
dec
add
std
cmpsb
jl
dec
dec
nop
mov
data16
push
sub
enter
pop
inc
scas
jns,pt
mov
mov
mov
loope
loope
nop
and
push
sbb
int3
ret
add
jno
sbb
aas
addl
data16
pop
push
sbb
jno
jne
xor
lret
mov
adc
out
fs
inc
jecxz
into
mov
jge
fcmove
ja
in
xor
inc
mov
mov
push
out
cmpsb
or
pop
stc
daa
xor
xchg
mov
add
inc
or
mov
sbb
push
ret
mov
mov
loop
sub
dec
inc
mov
jb
cmp
push
xorb
cmp
mov
nop
ficoml
xor
test
fisubrs
jl
out
sbb
xchg
iret
adc
or
xchg
mov
dec
xchg
jno
mov
pop
test
adc
or
sbb
sub
lods
jae
push
sub
jb
ret
loop
mov
les
xlat
int3
shll
repz
mov
bound
fmul
stc
leave
mov
mov
pop
add
jle
jmp
xchg
mov
pop
fldcw
sub
imul
cmp
loope
inc
int
xchg
mov
lcall
sti
ss
mov
and
aam
insl
icebp
stc
push
jle
push
cli
jle
insl
call
jle
dec
fstpt
out
push
sub
sbb
inc
lea
imul
mov
nop
push
pop
mov
or
mov
test
xchg
fstpt
xchg
add
enter
sub
test
mov
cmpsb
xor
scas
out
cli
inc
jl
nop
mov
rorb
loopne
add
jle
lods
push
or
leave
cs
xchg
sub
ret
and
and
add
inc
mov
rclb
xchg
data16
lcall
mov
test
mov
pop
sbb
adc
sub
dec
lahf
rcll
loopne
sub
fs
jb
subb
xor
jl
or
cld
mov
imul
out
in
inc
mov
stc
jp
cmp
pop
test
mov
sub
sub
mov
or
sbb
shl
pop
add
pop
push
incb
test
push
loop
dec
sub
repz
mov
cmp
mov
pop
xor
mov
test
fsubrs
into
iret
ja
stc
pop
aad
adc
test
movsb
ja
dec
jle,pt
jl
mov
push
inc
shlb
cld
loope
dec
jmp
in
add
cmp
fcom
push
add
pop
test
xor
jmp
mov
call
xor
std
or
popl
sahf
stos
fnstenv
pushf
aam
cli
stc
leave
and
or
out
mov
cmpsb
and
test
stos
push
pop
add
lcall
cli
mov
xlat
imul
pusha
dec
sbb
xor
dec
loope
out
cmp
ret
sub
mov
repnz
pop
bound
rclb
hlt
pop
mov
mov
cmp
testb
mov
jge
inc
lret
dec
sbb
cmpsl
stos
mov
jnp
sub
mov
and
data16
pusha
pop
lock
pop
pushf
test
ret
xchg
or
xor
inc
lahf
sbb
dec
add
ljmp
mov
jno
loope
notl
xchg
mov
push
push
insb
jmp
daa
mov
jle
sti
mov
lods
sub
mov
add
add
aas
scas
push
ror
jmp
shld
cmp
mov
movsb
push
fimull
das
movsl
mov
out
add
mov
aas
push
pop
inc
push
lods
mov
in
jo
imul
out
inc
or
je
mov
movsb
outsl
addb
std
mov
and
out
repnz
mov
cmpsl
dec
jp
testb
andl
inc
pop
clc
add
inc
packssdw
in
popa
imul
gs
or
cmp
rcl
loop
mov
gs
and
scas
out
scas
cmpsl
int3
inc
into
xor
cmpsl
and
and
cmp
mov
jmp
push
bound
cld
and
nop
pop
pop
mov
push
jno
pusha
cmpsb
cmpsl
les
test
sub
icebp
jo
pop
in
mov
cli
pop
sbb
xchg
mov
bound
out
repnz
dec
mov
mov
mov
add
mov
sahf
mov
cli
popf
dec
mov
loop
mov
or
incb
jne
lret
xor
ljmp
xor
roll
cld
out
jmp
add
gs
fs
xor
lods
rorl
addl
sbb
xchg
in
and
loopne
xor
shl
test
gs
lret
cmp
sbb
in
pop
cltd
jmp
jl
pushl
jnp
dec
inc
push
jb
scas
scas
loope
jns
jno
mov
aam
lock
lock
push
pop
fistpl
jl
aas
xor
add
or
pop
sbb
xchg
ljmp
imul
inc
jnp
jnp
pushf
test
sub
call
ds
mov
icebp
arpl
imul
sub
pop
xchg
fldt
out
stos
mov
ss
pop
and
jp
push
movsb
push
mov
dec
push
dec
adc
ss
and
loop
dec
cs
mov
push
addr16
pop
pop
fadds
pop
xchg
cltd
rclb
in
jge
cld
or
adc
jecxz
mov
cmp
jp
sarb
push
stc
or
fdivl
inc
ret
shl
mov
mov
scas
push
jb
cmp
dec
sub
xor
out
loop
popa
or
repnz
sbb
xor
out
sbb
push
insb
test
popa
mov
mov
neg
mov
inc
cmpsb
xor
daa
stos
fcmovb
push
cltd
mov
cld
out
mov
mov
xor
push
or
mov
inc
mov
cmpsb
not
pop
call
xchg
mov
or
xchg
scas
shlb
adc
xchg
aaa
orl
insb
test
sbb
mov
test
lahf
mov
adc
int3
insb
adc
lret
cmp
rolb
xchg
push
int3
ds
andb
push
leave
dec
aas
pop
rcrl
notl
adc
pop
push
cld
scas
xor
in
cwtl
jb
imul
adc
out
mov
lea
nop
push
sarb
push
pushf
mov
fnstcw
mov
mov
adc
mov
hlt
push
cmp
adc
sbb
jbe
scas
mov
xor
sub
mov
cli
out
jl
push
sub
or
cmpsb
mov
mov
pop
pop
mov
jecxz
mov
xchg
jecxz
dec
cmp
scas
add
in
push
cmp
loopne
sub
or
cli
icebp
call
arpl
je
dec
and
sub
lahf
out
hlt
push
repz
jp
ljmp
gs
hlt
inc
out
test
add
icebp
iret
aas
jns
sub
leave
push
popf
cs
mov
cmpsl
dec
pop
dec
cmp
or
es
jmp
mov
inc
mov
pop
mov
and
xchg
add
lods
push
or
lcall
and
ja
mul
ja
imul
push
loopne
mov
inc
sbb
in
add
xchg
jnp
aam
mov
adc
jnp
inc
add
adc
add
imul
loop
dec
les
mov
cli
pop
mov
cli
ljmp
dec
das
sbb
stc
loop
fs
test
mov
mov
or
testb
push
jecxz
incl
imul
lret
inc
sub
cmp
ja
dec
dec
les
fdivs
lock
outsb
adc
dec
sbb
jmp
mov
sbb
push
add
loopne
xor
sub
jmp
push
mov
int
push
pushf
subl
or
and
stc
notl
xchg
pop
sbb
inc
in
xor
jg
je
mov
push
and
insb
jg
div
cmp
dec
add
mov
jmp
push
xor
imul
frstpm(287
lock
xchg
sarl
xor
andl
adc
outsb
stc
sub
pop
daa
out
adc
insb
push
or
jl
popf
movsb
or
mov
adc
notl
mov
fcmove
xchg
mov
hlt
adc
jo
lods
adc
dec
fwait
addb
fcoml
fmull
fmull
adc
shl
fsubrl
mov
clc
inc
popf
push
xchg
add
add
and
mov
pop
in
clc
push
fwait
test
mov
jbe
push
jo
add
pop
jecxz
and
loopne
iret
aaa
incl
scas
pop
test
push
int
jle
popa
or
mov
inc
push
das
jp
aaa
jns
mov
pop
into
clc
lock
add
pop
rdpmc
sbb
shll
int3
or
jno
aam
insl
jae
cld
fdiv
ret
sti
cltd
cmp
mov
pop
int
js
lret
roll
repnz
cld
dec
and
push
inc
jns
mov
adc
stos
adc
ret
mov
rcl
cmp
or
pop
into
xchg
lea
add
testl
test
xchg
iret
add
xchg
sub
pushl
push
sub
mov
fisttps
push
mov
jl
shll
inc
pop
or
xchg
bswap
gs
xchg
fidivrl
jl
xchg
inc
push
dec
xchg
inc
sbb
lret
mov
cltd
sub
push
xchg
push
push
cltd
cld
push
push
xchg
movb
sbb
sarl
pop
mov
sbb
addr16
xor
xchg
sarl
mov
movsl
subl
mov
mov
dec
push
dec
in
adc
rcr
fsubrl
outsb
xor
xchg
test
vsubsd
add
fiadds
scas
lret
push
ljmp
das
test
cltd
or
xor
in
lahf
and
push
test
cmp
lcall
cmp
mov
and
jo
int
mov
in
in
rorb
xchg
jns
push
test
jmp
jno
mov
xor
jo
dec
xchg
mov
cltd
mov
push
out
scas
fisubrs
rorl
rorl
pusha
ss
mov
test
out
stos
gs
pop
sbb
lret
movaps
repnz
xor
xchg
mov
mov
je
add
ss
movl
or
inc
lock
dec
dec
dec
movsb
and
jl
jae
jae
xor
xor
xor
sub
adc
into
mov
xchg
add
xor
push
xchg
jecxz
es
add
or
dec
out
mov
cmp
mov
mov
adc
jmp
xchg
sbb
clc
mov
xor
pop
or
push
mov
aaa
or
daa
xchg
sbb
xor
sub
push
dec
dec
pusha
sub
das
dec
movsl
repnz
rcrb
push
lods
push
dec
lret
test
mov
aas
cmpsl
and
dec
jbe
mov
sbb
repz
add
push
or
push
xlat
cmp
rcrl
xchg
pop
sbb
xchg
add
sti
pusha
cmpsl
mov
aam
int
pop
es
adc
sub
dec
pop
rorb
jno
fs
cmp
out
push
ljmp
lds
out
fdivrs
out
pop
xlat
push
pop
pop
jne
dec
repz
pop
insb
das
mov
xchg
fstpt
int3
cmp
xchg
inc
mov
pop
mov
xchg
xchg
fdivs
mov
push
sbb
out
pop
or
mov
mov
add
fsubrl
pop
fwait
mov
mov
mov
ss
in
test
jecxz
push
out
dec
insl
daa
bnd
fwait
jmp
rolb
cmp
cld
les
sbb
sarb
add
xchg
loop
lahf
xor
aad
cmp
loop
cli
test
cmpsb
xor
mov
xchg
sub
repz
push
lds
fcmove
sbb
les
mov
mov
jle
mov
int
inc
movsb
repnz
inc
pop
fimull
in
insl
ljmp
dec
arpl
and
fildll
add
push
dec
push
mov
and
mov
sbb
das
dec
add
sbb
fsubr
or
xchg
and
lods
lods
sub
mov
xchg
in
cmp
jecxz
les
lock
jb
mov
pushf
aaa
mov
movl
dec
test
inc
dec
cmp
sub
add
dec
outsb
and
in
dec
into
mov
push
clc
jbe
xchg
pop
ret
sti
lahf
and
jle
les
fildl
dec
sub
pop
or
mov
imul
jge
cmc
sub
aas
sti
xor
sbb
inc
jns
ljmp
jle
mov
pop
mov
scas
sub
cs
fsubs
xor
enter
ljmp
pop
test
and
std
clc
ljmp
adc
imul
sbb
cld
push
and
and
ret
push
inc
mov
lret
test
push
inc
inc
cld
adc
sub
fwait
std
pusha
xchg
call
push
or
or
les
lahf
jg
or
mov
dec
fwait
cld
mov
pop
dec
div
xor
ja
cmp
sub
dec
ds
inc
push
test
in
xchg
decl
adc
mov
pop
mov
mov
daa
orb
add
repnz
cltd
jns
scas
mov
inc
repnz
cltd
mov
in
fwait
sbb
jo
xchg
add
repz
dec
xor
pop
popa
sbb
cmc
mov
inc
mov
and
sub
insl
push
mov
repnz
cmpsb
aas
call
loope
cmc
popl
ftst
or
lret
pop
out
icebp
cwtl
fmull
cmpsl
gs
sub
ficoml
aaa
dec
inc
pop
sahf
adc
daa
or
mov
xor
inc
int3
xorl
xchg
std
outsl
pop
rcl
mov
sbb
xchg
out
sbb
test
jo
call
push
lret
scas
test
out
nop
dec
pop
inc
lcall
jo
adc
jbe
jb
decb
jae
sbb
into
insl
inc
enter
and
dec
mov
repz
int3
jne
fidivrl
xchg
sub
repnz
jne
add
imul
js
or
f2xm1
dec
out
daa
mov
sbb
cmpb
fstp
or
fstpl
fwait
or
jle
pop
sub
add
adc
scas
dec
jno,pt
aas
xchg
push
rcll
out
mov
cmc
mov
imul
mov
idiv
mov
add
aas
lods
hlt
mov
popf
popa
fidivl
pop
ret
mov
inc
push
push
stos
adc
addr16
dec
pop
add
imul
xor
pusha
pop
sub
ss
divl
int3
or
jnp
loop
mov
push
add
pushf
sbb
add
mov
and
add
sub
push
rorb
stos
hlt
inc
loope
cltd
jb
rol
sbbl
mov
jno
testb
gs
push
and
popf
and
mov
jmp
pop
movsl
inc
in
jbe
repnz
pop
mov
test
int3
mov
sub
mov
xorb
sbb
fidivrs
xorb
gs
push
mov
sarb
outsl
test
adc
inc
or
push
inc
mov
mov
insb
xor
cmpl
dec
lods
adc
xor
sub
xchg
bound
dec
imul
cmp
jmp
and
test
pop
inc
jb
rcrb
xchg
mov
in
mov
jmp
cmovg
addb
aam
cmp
and
sbb
mov
adc
fildll
imul
mov
inc
dec
mov
dec
push
inc
js
popa
in
leave
xchg
jecxz
loop
jne
sti
mov
push
adc
in
call
push
xor
ret
inc
pop
data16
je
push
push
out
loop
dec
xor
jge
inc
pop
aas
mov
pop
sbb
ss
loope
shrb
adc
adc
loop
fiaddl
lea
sarl
inc
and
cmp
jbe
dec
lods
les
cmp
pop
mov
xor
add
cmp
jmp
jbe
gs
lahf
daa
iret
push
divb
sub
push
std
cs
cmp
push
ret
xadd
adc
leave
repz
movsb
call
xor
mov
loop
jecxz
stos
mov
ljmp
dec
fucomi
sbb
mov
ja
out
jmp
lods
jle
data16
je
into
bound
fdivr
popa
js
lock
push
mov
mov
mov
jg
add
pop
mov
and
scas
neg
inc
lcall
cmp
adc
dec
add
xchg
scas
imul
inc
push
xor
stc
enter
inc
idivb
xor
bound
and
roll
or
mov
in
addl
cli
call
xor
into
push
xchg
inc
or
call
sub
mov
cltd
sub
fisttpll
mov
decb
mov
mov
inc
fs
inc
out
cmp
mov
xlat
movl
pop
leave
lock
pop
shrb
mov
jbe
popa
sbbb
lods
or
xor
js
push
cltd
adc
inc
jno
cmp
sbb
negl
scas
dec
lret
jne
iret
push
or
pushf
insb
adc
dec
loope
mov
sti
pop
adc
and
add
mov
bound
mov
rorl
mov
addl
pop
or
lds
dec
push
or
sbb
daa
add
or
xor
ja
out
loop
cmp
sbb
aaa
and
lahf
xchg
mov
repz
sbb
sub
stos
cwtl
imull
xorb
push
lods
or
int
cmp
jmp
and
dec
pop
imul
push
jbe
shrb
xor
test
push
movsl
int
sbb
sbb
mov
sbb
push
push
inc
adc
pop
mov
in
xchg
adc
mov
jne
pop
mov
ja
jp
jmp
cmp
in
inc
fcmovne
popa
sub
pop
mov
jo
lahf
xchg
cmpl
or
add
xchg
bound
loope
fbld
mov
xlat
bound
cld
or
inc
es
xchg
pusha
push
shll
mov
outsl
inc
cmp
and
add
jo
mov
push
mov
popf
mov
out
sarl
or
es
pusha
gs
mov
cmpsl
sarb
scas
clc
mov
and
pop
popf
pop
adc
repz
cltd
mov
pop
aas
int
jns
data16
movsl
add
into
dec
out
inc
mov
pop
dec
adc
orb
in
mov
pop
out
imul
mov
sbb
push
xorb
loope
andl
aam
das
sbb
mov
add
enter
ss
and
shrb
imul
pop
repnz
cmp
mov
sub
sqrtps
insl
andl
in
fs
xlat
leave
pop
test
add
or
lret
jecxz
push
adc
jns
mov
movsb
sub
cmpsl
jl
dec
in
je
sbb
xchg
or
mov
inc
leave
inc
dec
add
cwtl
stc
lds
mov
cmp
xchg
inc
and
popf
mov
jns
hlt
call
pop
xor
jns
imul
cs
push
and
mov
cltd
lds
cwtl
xorb
pop
mov
sbb
xor
lret
push
cmp
push
cmp
rolb
mov
in
jns
pop
and
loop
jecxz
push
pop
cmpsb
xor
xchg
inc
push
subl
fnstsw
movsl
xor
push
insb
or
leave
test
dec
gs
stc
rorb
loopne
dec
mov
add
mov
lret
aam
movsl
imul
xor
add
cmp
mov
cmp
push
push
pop
push
push
movsb
or
jne
pop
fldl
in
fsubr
imul
rolb
pusha
cmpsb
mov
repnz
or
mov
push
ds
ficomps
shrb
mov
cld
xlat
mov
std
or
dec
and
call
or
call
mov
cmp
icebp
out
mov
dec
in
dec
or
mov
in
push
addr16
jae
push
xor
sbb
push
jno
push
test
cmp
fxch
out
xchg
cmp
cs
lahf
add
out
lods
sbb
shl
lcall
xchg
sbb
fsub
sbb
out
dec
sahf
or
cwtl
adc
push
inc
arpl
xor
mov
sbb
test
out
adc
mov
sahf
cmp
pop
ja
ret
cmp
addr16
mov
jae
leave
jmp
dec
mov
xor
cmc
or
dec
jae
ljmp
xor
xchg
inc
mov
std
push
out
xchg
enter
pushf
idivb
push
data16
jp
cmp
pop
fsubrl
test
leave
dec
movsb
mov
lcall
cwtl
loopne
ficompl
and
pop
add
mov
push
jmp
add
popf
xlat
xchg
popa
cli
fdivs
lret
or
mov
into
repnz
aad
leave
sbb
pushf
mov
es
stos
cltd
mov
out
pushf
pop
push
xor
pop
sbb
lret
mov
and
pop
sbb
xchg
repnz
repnz
daa
fsincos
mov
sbb
ds
xchg
out
outsb
jge
iret
lret
fwait
cwtl
mov
pop
into
cmp
adc
ljmp
bound
jns
shlb
in
sbb
jl
mov
dec
pop
ja
test
ljmp
add
xor
push
insl
mov
ret
mov
rcl
aaa
aad
imul
loopne
ss
pop
popf
dec
mov
test
lea
pop
fimuls
movsl
test
lock
fadds
mov
loop
xor
repnz
scas
popf
cmp
cmpsl
jno
sbb
jo
ffreep
in
sub
cmp
cmp
cmp
jge
hlt
insb
xor
jno
pop
ss
or
icebp
jle
jg
pushf
mov
adc
inc
mov
sub
sub
in
enter
cmc
jp
data16
inc
js
add
xor
push
aad
sarl
imul
aam
inc
addl
sub
dec
sub
fistpl
push
dec
dec
les
adc
inc
insb
dec
xchg
or
mov
cmp
jno
jp
add
pop
out
insb
pop
outsb
mov
popa
cmp
xchg
jnp
xor
pop
mov
ret
pop
shll
mov
jle
adc
pop
addb
adc
out
add
inc
pop
je
xor
jbe
push
and
testl
and
pop
mov
lds
test
cmp
leave
pop
fsubrl
daa
pop
mov
cmp
cmp
pop
fisubl
cmp
sbb
and
in
gs
pop
enter
mull
sbbb
scas
add
in
xor
lds
push
fwait
shrb
pop
lret
hlt
in
push
dec
aam
cmp
inc
sbb
dec
div
or
enter
and
mov
lcall
and
dec
mov
mov
cmpsb
inc
inc
incb
sbb
bound
ljmp
mov
sbb
sbb
lret
dec
dec
add
or
into
xchg
dec
dec
jle
add
repz
xor
jae
sbb
popa
xchg
fisubl
mov
test
or
stos
jbe
mov
shl
xor
push
je
cltd
lret
test
mov
insl
fisttps
daa
pop
sahf
fistl
lret
adc
in
lock
or
aam
out
or
pop
dec
push
jl
data16
and
xlat
or
stc
out
mov
cwtl
jge
movsl
mov
lcall
aaa
mov
lods
call
or
adc
dec
or
int
add
mov
push
lahf
xor
ja
aad
clc
fwait
pushf
adc
jb
inc
mov
xlat
lahf
loope
add
mov
js
popf
ds
jmp
scas
lea
and
shlb
dec
call
fisubs
dec
or
jo
test
outsl
out
jp
mov
lods
jmp
jne
and
dec
mov
pop
push
xlat
hlt
into
xchg
jns
jo
jg
pop
push
or
mov
bound
lds
jmp
scas
sub
xchg
and
sub
adc
mov
push
and
clc
xor
ljmp
jecxz
pushf
xchg
inc
lods
imul
mov
jne
or
cmc
outsl
cmp
xor
addr16
loopne
aam
adc
fdiv
mov
sub
iret
fbld
pushl
xchg
cs
aaa
dec
xchg
cmp
and
lcall
add
fiadds
fsub
jnp
out
fisubrl
jns
cmpsb
jle
sahf
jb
sbb
pop
subl
pop
fwait
mov
or
inc
xor
and
dec
hlt
ja
ror
xor
fimull
push
xor
in
dec
or
mov
jg
lds
fildll
mov
pop
push
stos
push
jno
sbb
mov
imul
push
pop
push
adc
xchg
cld
xchg
add
mov
pop
mov
mov
jg
jge
inc
fwait
mov
xchg
mov
mov
int3
std
fbld
mov
sbb
mov
pop
mov
addr16
xor
out
adc
push
je
iret
mov
sub
ss
push
int3
xor
out
jp
arpl
pop
inc
xor
pop
clc
cmpsb
sti
jmp
cld
data16
insl
and
push
push
shlb
test
inc
out
ja
aas
inc
fstps
mov
sub
js
pop
loop
aas
in
lock
addr16
clc
fwait
insb
and
pusha
mov
mov
push
shrl
cmc
lock
add
xor
sbb
movsb
pushf
and
scas
pop
xor
mov
and
xchg
jmp
aad
pop
or
das
into
fadds
inc
enter
loop
shll
imul
xchg
icebp
cmp
cld
mov
xchg
int3
push
pop
loop
xor
stos
push
lods
std
lods
xchg
testl
xor
jnp
jno
adc
lods
and
lea
inc
xchg
adc
or
repz
stos
xor
daa
cmp
mov
ret
cmpsl
mov
test
mov
fdivrl
push
data16
jae
loopne
or
and
data16
sub
ret
dec
clc
shrl
jno
movsl
jns
aad
test
xchg
lods
insl
rorb
xchg
xchg
xlat
stos
mov
dec
stos
in
popf
js
rcll
sub
roll
aam
inc
arpl
mov
or
cmc
cltd
test
xchg
stos
and
sub
leave
push
xor
adcl
cmp
std
out
sar
lock
push
aam
adc
mov
mov
rorl
mov
in
adc
pop
into
pop
sbb
and
pop
scas
cmp
dec
cmp
mov
sbb
mov
add
xchg
cmp
mov
mov
jno
out
arpl
repz
in
je
gs
lcall
outsl
lcall
or
loopne
mov
stos
in
clc
jae
jnp
inc
mov
stos
jo
hlt
sbb
faddl
push
mov
jmp
test
ds
orl
push
loop
jb
data16
push
push
push
add
mov
cmp
lahf
aad
stos
sub
jo
add
mov
enter
pop
addr16
inc
iret
repnz
jne
fs
test
inc
adc
xor
repnz
jnp
sarl
push
adc
inc
jmp
mov
inc
sbb
or
mov
popl
iret
jl
les
jns
les
jl
push
cli
cmp
out
add
cmp
inc
clc
cmpsl
xchg
or
inc
addr16
cmp
lahf
mov
scas
leave
sbb
mov
pop
mov
movsl
mov
aam
shlb
jp
testl
movd
push
xor
aaa
cmp
cmp
push
pop
sti
sub
adc
test
push
loop
imul
sub
lds
xchg
test
or
inc
pop
mov
push
mov
jbe
test
loop
rcll
gs
outsb
clc
mov
lock
rcl
adc
dec
mov
pop
mov
mov
aad
inc
jle
sub
push
daa
movsb
jne
and
mov
push
gs
and
nop
adc
lret
dec
and
push
nop
mov
sub
sbb
daa
aam
mov
mov
mov
inc
lds
incl
xor
enter
and
out
mov
push
cs
and
mov
pop
push
mov
fs
outsl
flds
ffree
pop
mov
or
push
jg
adc
sub
mov
das
adc
inc
jbe
idiv
hlt
xchg
rcr
test
xchg
scas
mov
push
mov
pop
out
inc
adc
imulb
pushf
movsb
imul
mov
lret
out
adc
into
sbb
adc
mov
cld
or
das
dec
xchg
mov
inc
xchg
adc
xor
das
subb
push
pop
push
fisttpl
aaa
cmp
sub
mov
lcall
xchg
nop
mov
test
push
cmc
nop
ljmp
mov
jnp
in
test
addr16
aaa
inc
and
mov
popf
shlb
xor
adc
push
pop
or
rcrl
jl
fmulp
adc
push
arpl
gs
push
sub
or
xor
pop
adc
dec
mov
fdivl
fldenv
jge
add
or
inc
lock
pop
movsl
out
fcmovb
or
jne
je
mov
xchg
sbb
sarl
push
aas
repz
addr16
sub
ljmp
adc
xchg
out
push
or
cmpsl
cmpsb
jb
lcall
iret
ficompl
repz
fbstp
aaa
jb
push
and
fstpl
roll
push
jmp
cmp
jbe
notb
fpatan
xor
mov
iret
sub
add
loopne
pop
iret
inc
in
xchg
lock
sbb
xor
xchg
ret
sbb
testl
fcom
fs
lock
mov
filds
inc
mov
or
fwait
cmp
pop
inc
inc
cmp
sub
xchg
repnz
or
jg
jp
and
loope
fsubrp
or
cmp
imul
xor
or
adc
dec
jmp
and
or
fisubrl
pop
daa
jg
movsl
xor
aaa
sbbl
xchg
or
shrb
push
mov
loope
mov
aad
jne
lcall
mov
sub
pop
mov
mov
repz
das
test
jmp
jle
dec
cmp
out
mov
jge
ret
xor
call
stos
xchg
push
cs
rclb
inc
jp
nop
or
dec
push
aaa
sub
fwait
sub
ror
xor
pop
jae
fnstcw
add
loop
jmp
lods
arpl
push
ss
add
jge
movl
gs
dec
xor
cmp
les
daa
lods
inc
push
pop
sarl
stos
stos
jg
jp
mov
lods
lret
add
orb
gs
lock
mov
push
das
add
dec
rorb
lret
nop
jge
push
push
or
out
mov
sub
je
xchg
jmp
je
xor
dec
and
out
fisubs
lahf
int3
lods
pop
js
cmp
outsl
arpl
test
mov
fcoml
outsl
scas
lock
jge
sbb
ss
iret
xchg
mov
rcll
xchg
and
xchg
loope
or
cs
daa
lret
jns
xor
add
jnp
mov
add
mov
xchg
sbb
shlb
lcall
sbb
dec
nop
mul
andl
cmp
fldl
out
adc
std
sbb
add
aas
jnp
aam
call
jl
movsl
mov
les
xchg
mov
mov
mov
sbb
repnz
mov
adc
fldenv
cmc
pusha
jl
push
mov
int3
sbb
das
das
or
ss
loop
add
push
pop
jno
iret
das
or
test
sbb
aas
mov
inc
sarb
cli
dec
dec
int
addb
test
pop
adc
mov
dec
or
lahf
push
subb
int
inc
xor
xchg
gs
pushf
or
fimull
pop
xor
rcrl
and
testl
xchg
lret
push
out
jp
jne
shlb
xor
mov
into
call
lock
leave
mov
mov
insl
xor
arpl
addr16
or
xchg
je
cmp
inc
loopne
mov
dec
or
enter
test
movsb
sti
in
xlat
fwait
pop
dec
stc
mov
mov
jecxz
repnz
hlt
in
ja
mov
into
into
push
mov
or
add
dec
insl
push
imul
and
movsb
fcoml
div
in
cmp
ret
xchg
mov
adc
lds
andb
fldt
cmpsb
or
iret
cld
add
movl
inc
lea
pop
std
push
sub
sub
adc
rcll
push
and
push
outsb
outsb
adc
faddp
stos
inc
in
in
rcrb
test
push
fisubrl
ret
add
push
jae
addb
mov
or
and
movsb
or
jge
ja
into
dec
inc
outsl
mov
mov
sbbb
je
dec
sbb
sub
ja
ret
jbe
std
mov
add
mov
adc
loop
cmp
inc
sub
fstps
and
ss
add
add
fdivrl
xchg
and
inc
cli
repnz
xchg
repz
jg
sbb
jg
jle
movsl
js
lahf
jo
inc
outsb
and
mov
mov
xchg
cmp
mov
jp
inc
leave
ljmp
push
sbbb
ds
mov
repz
out
xor
adc
pusha
sbb
icebp
mov
in
scas
xlat
adc
jns
jg
sti
out
sarl
popa
xor
jb
and
and
test
mov
bound
sarl
cmp
add
pop
stos
and
push
and
fs
aaa
cmp
push
adc
int
cmc
and
sub
pop
mov
mov
pop
addr16
addr16
jne
repnz
cmpsb
mov
fucomip
out
jg
add
cltd
lods
mov
or
insl
and
push
arpl
in
jmp
lahf
mov
enter
inc
lahf
ljmp
and
jp
push
ja
cs
pop
adc
mov
inc
pushf
movsw
insl
aaa
cmp
sbb
js
jns
out
fidivrs
scas
scas
push
pushf
xchg
js
mov
mov
sub
rcll
sahf
imul
and
xor
adc
and
repz
mov
cmp
and
push
scas
or
inc
pop
aaa
test
dec
adc
sti
mov
pusha
divb
int3
in
in
xor
andl
sbb
xor
shr
in
dec
fmuls
pushf
fisubrl
adc
sub
lods
sahf
incb
jg
rolb
loop
fnstcw
rol
stos
pop
in
pop
cs
adc
mov
sub
negb
insb
and
cmp
clc
repz
xor
xchg
dec
sbb
adcb
out
fnstcw
xor
sbb
push
mov
or
in
mov
push
aam
lret
enter
mov
in
mov
aam
or
mov
dec
int
sub
es
addr16
push
movsl
out
mov
popa
lods
pop
mov
in
mov
int
loope
testl
ds
or
adc
push
push
out
pop
out
jge
jo
loopne
ss
ret
xchg
mov
push
adc
adc
dec
xlat
push
lods
xor
shlb
cmpsb
imul
sbb
out
mov
dec
pop
rcrb
and
mov
nop
xor
push
adcl
gs
testl
cmp
push
xor
test
push
cmpl
cltd
and
ja
out
shlb
xchg
cwtl
loop
cli
jl
cltd
enter
ds
dec
movsb
pop
test
in
inc
or
popf
in
or
inc
mov
js
loop
xchg
xchg
adc
cmp
into
jbe
mov
clc
jecxz
hlt
imul
xchg
int
or
in
adc
dec
push
pop
ret
imul
sub
lds
jcxz
pop
cltd
and
out
pop
mov
adc
add
jb
scas
in
jmp
or
int
fs
mov
xchg
mov
sbb
sub
jno
and
cmpsb
roll
pusha
xor
pop
xor
fcompl
dec
test
shlb
shll
repz
mov
xchg
pop
sub
imul
call
leave
cmp
xchg
repnz
or
insb
stos
pop
outsb
movsl
push
dec
xchg
push
add
sbb
or
sbb
add
in
ret
jp
aaa
cmp
adc
cmp
mov
dec
add
push
jo
rcrl
pop
sbb
sbb
ficomps
mov
outsb
mov
xchg
xor
xchg
cmp
sbb
lcall
mov
not
insb
mov
push
xor
psadbw
add
xchg
pop
decl
aad
rcrb
fisttpll
test
int
fidivrl
xor
adcb
cs
mov
insl
lcall
xlat
push
fdivr
jl
leave
sbb
imul
aad
dec
fdivrs
lods
movsl
mov
or
std
ljmp
test
inc
mov
or
pop
dec
pop
jge
lds
push
xchg
xor
jb
mov
mov
jnp,pt
fs
lcall
mov
imul
div
in
jle
xchg
aad
cmc
jb
int3
mov
cs
and
xchg
fistpll
fs
cmp
lock
orl
and
cmp
in
inc
orl
dec
xor
mov
mov
ret
imul
idiv
cmp
push
mov
add
sti
stos
aaa
jmp
push
ljmp
jns
adc
mov
or
and
icebp
xchg
subb
pop
mov
stos
jle
mov
xchg
adc
in
dec
cmp
jae
pushf
inc
out
aad
inc
push
jns
xor
and
lds
outsb
jo
fmuls
leave
mov
lea
cmpl
scas
mov
mov
fildll
in
cmp
xchg
mov
mov
cmpsl
test
pushf
movsb
adc
inc
push
add
divb
xorb
xchg
adc
xchg
jb
repnz
outsl
fld
mov
rolb
push
cltd
ja
push
comiss
cmpsb
mov
cwtl
mov
mov
sahf
sbb
or
fbld
xchg
arpl
out
gs
stc
mov
mov
ficompl
add
push
cs
adc
insl
jmp
scas
jb
ljmp
sbb
ss
icebp
aas
mov
xor
mov
or
push
pop
dec
or
pop
mov
inc
imul
scas
mov
inc
mov
shl
jnp
jmp
inc
pop
inc
or
dec
into
cli
loopnew
add
and
imul
xchg
xchg
mov
les
cmp
cmp
mov
rcrb
in
dec
sub
mov
mov
xchg
and
sahf
cmc
push
jle
or
xchg
inc
inc
outsb
add
repz
lret
gs
fcompl
dec
add
mov
dec
sub
push
in
inc
mov
leave
cwtl
andb
sbb
loopne
xor
test
add
sbb
sub
cmp
sbb
pop
pop
inc
xchg
cld
rcrl
xchg
xchg
cmpsl
outsl
ljmp
loope
push
inc
mov
sarb
jae
pop
jbe
and
fisubrl
mov
inc
adc
cld
dec
popf
testb
xor
jmp
xchg
inc
cwtl
rclb
jmp
scas
lahf
fxch
adc
es
mov
movsb
out
cld
stc
mov
and
mov
dec
cmpsb
jo
xor
es
lock
mov
lcall
test
xor
sub
mov
ret
jo
and
lret
cltd
add
sub
aam
adc
and
mov
mov
sti
xchg
mov
xchg
in
nop
cmp
sbb
push
ja
movsl
in
js
xor
repz
shlb
lret
dec
mov
lods
lret
pop
movsl
iret
shrb
inc
jge
or
lock
jecxz
xchg
dec
or
and
cwtl
inc
outsl
add
cltd
push
jne
push
stos
insb
jbe
mov
int
inc
jecxz
mov
or
sti
sbb
cli
aas
arpl
cmpsb
mov
mov
sbb
inc
cld
mov
outsl
cmp
out
cltd
cltd
push
inc
fbld
mov
and
in
std
inc
in
sub
mov
xor
andl
adc
mov
orl
push
sub
or
fcomps
sub
sub
mov
pop
xlat
push
lds
sub
pop
int3
add
std
enter
xchg
and
fwait
imul
jmp
xchg
push
imul
sbb
in
push
ljmp
ljmp
mov
xor
lea
pushf
mov
and
test
add
adc
clc
sahf
sbb
out
xor
sub
jne
sbb
fnstenv
mull
pop
push
dec
scas
insl
or
mov
clc
sub
adc
in
mov
gs
lea
xor
out
jle
mov
xor
int
rolb
scas
push
push
push
pop
or
sbb
arpl
push
out
movsb
loopne
push
jb,pn
mov
lea
aad
jl
jmp
sahf
push
std
or
scas
push
scas
in
scas
pop
push
xchg
rorb
bound
cmp
in
and
lods
push
push
icebp
out
jno
mov
mov
mov
mov
ds
daa
repz
pop
shrl
out
leave
push
fs
dec
fmull
lods
mov
add
dec
add
or
mov
sbb
mov
push
dec
add
push
in
sarl
push
inc
inc
ds
or
jns
and
arpl
push
inc
cmp
jne
aad
ja
sub
iret
jl
xchg
adc
in
jo
jnp
push
data16
sbb
sarb
sahf
pop
sub
mov
add
stos
jb
imul
fisubrs
in
push
rorb
jmp
test
daa
es
push
add
je
arpl
xchg
lds
inc
xchg
adc
fdivs
lret
xorb
xchg
out
mov
jl
mov
sbb
lock
mov
ror
jno
clc
jne
push
mov
scas
inc
es
xchg
scas
add
jns
push
add
mov
xchg
pop
push
fs
outsb
xchg
add
or
popa
in
mov
pop
and
inc
lock
das
mov
sti
mov
and
push
test
and
orb
push
pop
mov
ret
aas
jecxz
sub
fadds
sub
call
add
sub
nop
es
fidivrl
ljmp
cmp
mov
mov
adc
scas
mov
push
add
add
outsl
das
jns
dec
ds
and
push
lods
stos
sub
iret
cmc
jg
pusha
sbb
and
rcll
jmp
in
dec
mov
call
pop
jp
in
lock
sub
cmp
push
push
sub
push
mov
insl
icebp
pusha
sbb
ficomps
nop
xchg
les
cwtl
sub
jne
mov
popw
add
aaa
mov
fcomps
sbb
push
popf
lods
fwait
test
mov
sbb
and
add
adc
mov
imul
scas
insl
dec
out
daa
popf
lock
je
pop
or
pop
leave
fcomps
cmp
iret
movb
push
dec
add
nop
cmp
sbbl
addb
add
push
lock
mov
dec
inc
imul
sahf
js
mov
sarl
loopne
add
jo
iret
xchg
ds
inc
outsb
mov
enter
mov
jb
jo
jae
pop
and
and
jb
fistpll
das
mov
fcmovu
add
ret
xchg
or
add
or
or
lea
xchg
jbe
jbe
push
xor
cli
adc
add
mov
inc
nop
rcll
jno
aas
sahf
adc
out
out
push
cmp
inc
and
push
in
fdivl
pop
aas
aas
dec
cmp
and
jp
or
add
ret
lods
test
push
dec
push
sbb
jb
pop
call
aad
cmp
pop
sbb
and
enter
push
test
popf
jb
subb
xchg
arpl
mov
test
mov
xor
outsl
outsl
jnp,pt
or
pop
mov
insb
fnsave
nop
jp
data16
out
jge
xchg
jae
jmp
inc
test
ffreep
pushl
repnz
sbb
sar
pop
add
lahf
pop
mov
mov
xchg
imul
aam
jae
cltd
push
les
pop
sbb
rorl
dec
cltd
xchg
cmp
xchg
test
pop
aam
mov
sub
es
xchg
pop
cmc
data16
dec
scas
mov
lds
fiaddl
jo
shrl
sub
jg
mov
dec
repz
inc
scas
insl
nop
pop
icebp
fnsetpm(287
movsl
cmp
jne
data16
xchg
push
cmp
ljmp
xchg
inc
add
outsl
movsl
sub
or
aad
rcll
daa
pushf
aaa
je
mov
cmpsl
mov
adc
push
xchg
sub
jl
outsl
xchg
outsb
cmpsb
aaa
jg
pusha
lahf
jbe
push
pop
daa
or
push
aad
and
imul
enter
mov
popa
insl
icebp
leave
mov
stos
xchg
mov
into
xchg
mov
jg
mov
xor
subb
test
stc
xchg
gs
into
inc
or
out
xchg
stos
push
cmpsb
mov
aaa
int3
dec
mov
adc
hlt
mov
dec
mov
in
mov
sti
pop
ret
fbld
or
lahf
nop
xlat
fcompl
flds
sub
aaa
cmp
push
stc
inc
push
pop
or
and
jmp
test
cmp
idiv
jl
outsl
test
filds
sahf
mov
movsb
out
pop
jge
das
sub
sti
dec
test
jl
lret
xor
sub
in
mov
mov
pop
mov
push
test
push
scas
xor
sbb
cmpsb
xchg
mov
cld
std
push
sti
in
stos
cmc
mov
lahf
stc
aas
incl
sahf
imul
hlt
and
xor
int
insb
or
js
inc
test
sahf
push
dec
aas
cmp
fidivs
imul
push
inc
sbb
jmp
add
mov
test
lret
inc
cli
jns
xor
into
sbb
and
pop
mov
jae
es
mov
cmpsb
or
enter
test
sahf
xchg
cs
lea
and
sbb
hlt
mov
mov
mov
sub
mov
addb
rcrb
push
jecxz
inc
mov
mov
xchg
add
lods
jb
add
xchg
stos
mov
push
lods
popf
sub
repz
xor
sub
test
leave
xchg
or
hlt
jne
inc
or
test
jns
sbb
lds
movsb
cmc
nop
jo
arpl
mov
and
mov
jmp
mov
fmull
ljmp
xchg
insl
pop
adc
or
iret
scas
dec
pop
mov
push
push
mov
data16
fidivs
flds
ljmp
xchg
test
popa
pop
int3
clc
mov
add
pop
xchg
add
xor
xorl
mov
dec
inc
jns
cmp
ljmp
adc
lods
mov
fnstcw
inc
std
lcall
rorb
or
adc
lds
add
std
sub
idivb
mov
pop
fcompl
push
xor
not
push
jmp
mov
mov
pop
xchg
jb
mov
mov
push
movsb
dec
mov
dec
mov
xor
jne
rcll
xchg
fidivl
adc
xchg
sub
pusha
jl
sub
jne
mov
xor
jp
sbb
xor
sbb
mulb
dec
sbb
fistpl
inc
lea
jns
jbe
sarb
xchg
lods
add
das
pusha
ds
inc
xchg
jae
and
xchg
dec
nop
fistps
popa
clc
loope
dec
jmp
pop
fimull
fadds
inc
mov
pop
lcall
aad
int
hlt
leave
push
loop
adc
inc
shlb
or
shll
push
leave
rorl
jo
mov
insl
out
ret
popa
movsb
cmp
mov
xor
pushf
adc
jns
daa
sti
adc
or
and
pusha
jb
sbb
repnz
xchg
jne
inc
rcr
or
push
pop
mov
inc
sti
push
pushf
inc
pop
int3
dec
jb
mov
inc
sub
loop
mov
jle
pop
inc
aad
ret
mov
xchg
add
dec
cmp
xlat
arpl
ror
cmpl
mov
sub
sbb
add
cmpsl
pushf
popa
cmc
inc
mov
sbb
dec
pushf
icebp
fs
add
xchg
pop
xchg
or
adcl
fistpl
in
shrb
orb
add
or
cwtl
les
fstpl
jge
add
hlt
xchg
pusha
adc
push
mov
jbe
xor
adcb
lds
push
mov
emms
add
inc
sbb
mov
jb
mov
sub
sbb
and
ret
xchg
jb
sub
inc
xor
or
inc
cld
sbb
sarl
arpl
xor
or
icebp
rclb
mov
xor
dec
pop
pushf
xlat
sahf
out
mov
jnp
nop
mov
mov
pushf
and
add
mov
in
js
xchg
cmp
mov
cmp
mov
ret
lret
bound
xor
in
subl
int3
sub
test
mov
mov
aaa
xchg
xor
inc
scas
out
push
mov
ljmp
xor
mov
xchg
mov
xlat
mov
mov
mov
adc
mov
mov
dec
test
sbb
lods
add
mov
add
xor
out
sbb
inc
ss
and
jno
push
xor
cld
mov
mov
clc
je
lahf
sub
mov
pop
xor
cs
push
xlat
ss
jg
stos
cld
sti
movsb
xchg
or
adc
or
adc
popf
stc
mov
push
push
jae
jno
sub
ljmp
loop
push
bound
mov
pop
outsl
mov
sub
test
xchg
imul
aaa
subl
popf
fstpt
repnz
out
jo
xchg
mov
or
aam
cs
xchg
fildll
jecxz
pop
jge
fwait
shr
xchg
movsl
jnp
test
scas
ss
mov
adc
inc
arpl
inc
lds
and
lds
sahf
cltd
shrl
mov
shl
mov
int
lods
sbb
stc
xchg
stc
aad
xlat
sbb
sub
pop
fs
fimuls
stc
les
mov
push
test
and
fdivrl
ljmp
stc
shrb
push
flds
jae
insb
mov
mov
xchg
sti
xor
mov
ficompl
push
into
in
or
loopne
test
insl
iret
xor
xor
in
ror
lcall
xchg
or
push
xchg
stos
mov
cmp
adc
add
sahf
jns
clc
cld
or
inc
pop
mov
xor
adc
jl
imul
cwtl
and
out
jecxz
ss
sbb
jg
adcb
das
inc
das
or
incl
push
mov
lods
iret
mov
test
pusha
fsubp
movlps
out
iret
jns
ret
std
dec
mov
ret
andb
jae
mov
cs
js
testb
clc
imul
lea
insl
std
push
mov
mov
jne
fwait
pop
fldl2e
cmp
or
jle
mov
fdivrp
in
and
or
cmp
or
add
mov
mov
int3
cmp
iret
and
mov
adc
jmp
jo
jle
iret
mov
xchg
cltd
or
fsubrp
fstps
lret
dec
cmp
push
sti
add
popa
and
mov
pop
sbb
push
movsl
sub
mov
repz
mov
sbb
repz
lcall
add
jae
adc
arpl
mov
shrl
mov
push
gs
or
xor
insb
mov
inc
frstor
mov
les
mov
in
pusha
cmpl
int
push
test
int
mov
and
jmp
add
in
mov
mov
sbb
lcall
gs
inc
add
xor
adc
insb
or
jbe
mov
lods
xchg
add
inc
insb
and
jae
in
and
pop
mov
xchg
rcrb
outsl
movsl
xor
jae
jne
xchg
arpl
scas
std
inc
sub
jl
or
cltd
insb
roll
mov
leave
in
dec
mov
pop
mov
test
cwtl
test
aas
movsb
iret
fldl
mov
pop
lods
inc
fidivrl
jb
push
pop
mov
pusha
inc
mov
sti
mov
les
enter
xor
mov
enter
out
cmp
or
lods
jb
or
push
aaa
cmc
dec
mov
sub
inc
mov
ja
sbb
mov
jns
mov
xor
pop
cmpl
ret
jle
imul
ficomps
mov
and
cli
pop
add
inc
dec
mov
dec
xchg
rorb
add
lea
sbb
push
icebp
fcoms
jae
pop
bound
mov
fwait
adc
sub
xchg
repnz
jnp
aad
mov
mov
ljmp
fnsetpm(287
push
cmpsl
enter
dec
stos
es
pop
xchg
mov
fisttps
leave
js
xor
rcll
push
ss
ficomps
inc
jg
in
mov
frstor
mov
inc
rolb
push
orl
popf
pop
stos
adc
inc
test
pop
mov
xchg
and
fidivrs
jns
jns
enter
push
lea
icebp
mov
cld
fwait
psadbw
dec
sub
add
sbb
mov
cwtl
cmp
mov
push
jge
adc
mov
mov
push
mov
idivl
cmp
xchg
mov
dec
and
popl
mov
pusha
scas
pop
sub
imul
icebp
hlt
ljmp
and
mov
fidivl
xchg
and
das
jo
mov
cmp
arpl
dec
iret
scas
ficoml
mov
push
mov
out
fcomps
js
ror
loop
pop
mov
mov
push
clc
push
outsb
adc
jg
rcrb
movsl
jmp
lods
or
mov
jno
adc
adc
scas
mov
jae
leave
loopne
sarb
cmp
out
dec
sbb
clc
loopne
inc
rcl
inc
stos
add
xor
or
ss
mov
shl
sbb
push
out
ror
out
or
pop
inc
cmp
popa
sub
lock
sbb
test
fdivp
out
dec
adc
sbb
mov
push
xchg
push
gs
push
and
dec
mov
mov
mov
test
pop
test
nop
mov
movsb
mov
and
xchg
and
out
iret
mov
shl
xor
in
das
loope
test
lcall
orb
jge
int
mov
data16
xchg
jecxz
push
roll
icebp
jmp
call
pusha
jae
bound
test
push
lea
adc
gs
lods
pop
dec
sbb
scas
std
loopne
inc
mov
mov
lahf
stc
nop
pop
pop
cmp
popf
mov
sti
add
hlt
inc
cmp
mov
gs
add
xor
icebp
push
cwtl
xchg
jecxz
ret
jmp
push
fsubr
aam
inc
inc
sub
lretw
and
stos
and
aaa
add
push
lret
sub
inc
in
lea
lcall
and
sbb
inc
fwait
mov
jns
bound
jge
sti
sbb
loopne
ret
pop
mov
into
xor
aaa
mov
orl
jp
rolb
jb
mov
imul
les
dec
mov
in
or
test
leave
inc
int3
cli
dec
mov
mov
imul
lret
mov
dec
ret
dec
mov
xchg
cmp
stos
sbb
mov
cmp
imul
outsb
cmp
push
aaa
mov
cmpps
xor
roll
mov
lea
cli
ds
jnp
mov
mov
jo
movsl
push
in
arpl
ret
sub
sbb
mov
add
ljmp
lar
add
lods
subb
cmc
bound
xor
dec
fs
lds
adc
jb
and
mov
lret
and
pop
pop
jecxz
js
pop
fnstsw
cltd
cmp
cld
pop
fdivl
xchg
jge
and
es
fcoml
jge
subb
cmp
xchg
sub
push
jne
call
or
cwtl
movsb
inc
clc
cmp
scas
icebp
lods
movsl
das
inc
cmp
into
notl
psubusb
xor
ffreep
dec
xor
jmp
xor
movsl
in
pop
jmp
lock
loope
jecxz
sahf
je
push
cmp
aas
lock
rorb
dec
sbb
loope
loop
and
std
mov
xchg
mov
add
push
scas
mov
pop
mov
xchg
cs
cmp
out
call
sbb
leave
gs
inc
hlt
decb
pop
loopne
orl
add
xor
sbb
push
jb
in
adc
jp
cwtl
shll
mov
jge
imul
xor
in
sbb
mov
and
in
xor
and
or
shrl
stc
test
clc
in
xor
cmp
arpl
dec
mov
arpl
call
sub
inc
syscall
sub
push
mov
jmp
pusha
scas
cmp
lret
dec
push
mov
sub
enter
pop
aam
or
xor
out
aad
xchg
dec
fwait
arpl
and
ss
cmp
lret
es
inc
push
fwait
sub
adc
mov
mov
lea
mov
dec
mov
out
sub
xor
push
mov
in
test
sbb
insl
mov
insl
popa
jg
jne
cmp
cmc
inc
lcall
push
test
ja
ficompl
add
push
data16
data16
call
pop
inc
pop
hlt
loopne
ficoml
xor
stc
fmulp
dec
stc
fsts
push
sub
mov
lods
sub
fwait
sub
mov
mov
pop
pop
jae
daa
and
test
cld
out
push
or
or
addr16
ror
sub
jge
repz
mov
jnp
cmp
les
shlb
jg
dec
shlb
popa
adc
sub
jbe
shrb
cmp
xlat
fst
leave
sbb
gs
rorb
subb
fs
cmp
inc
adc
mov
movsb
add
lahf
jp
push
push
cltd
push
and
std
iret
lcall
xchg
dec
cld
sub
aad
mov
lds
pop
lahf
stos
push
jae
lret
insb
jo
pop
sarl
mov
mov
cmp
movsl
pusha
arpl
push
xlat
mov
scas
loop
ljmp
and
and
mov
or
cwtl
jg
inc
mov
negb
push
iret
in
add
test
in
mov
mov
jb
ret
and
fimull
lock
data16
xchg
mov
sbb
mov
in
mov
decl
je
dec
lds
lcall
adc
push
scas
or
jl
into
xchg
dec
or
xorl
in
jo
loop
mov
push
hlt
push
out
pushf
mov
pop
push
cmc
xor
cli
lods
imul
nop
mov
mov
xor
mov
lea
and
mov
inc
pop
repz
fucomip
imul
stos
sub
inc
test
sbbl
enter
loope
and
sbb
das
or
xor
or
fsubp
clc
xchg
pop
in
dec
xchg
pushf
push
dec
inc
adcb
lret
rorl
incl
pop
or
test
jle
sbb
mov
outsb
call
inc
add
bound
or
inc
cmp
push
push
icebp
mov
jmp
push
push
cmp
xlat
mov
jno
pop
je
sbb
iret
xchg
pop
mov
rcrl
aaa
lds
call
arpl
add
lcall
pop
dec
push
push
inc
or
mov
inc
add
xchg
sub
incl
mov
jle
jge
cmp
je
imulb
iret
ljmp
and
sbb
pop
mov
dec
arpl
mov
xchg
adc
repnz
sub
arpl
xor
jnp
jecxz
scas
xor
cmpsl
das
jg
dec
outsl
and
adc
pop
enter
xor
mov
cmp
mov
pusha
rorb
lods
cmp
shll
dec
repz
cmp
jg
test
lods
xor
mov
dec
insb
dec
and
pop
pushf
mov
xchg
repz
cmp
xchg
mov
add
xchg
push
aas
stos
lods
xchg
vrcpps
fdivrs
push
imul
cmp
jle
lods
pop
sarb
xlat
sbb
jno
mov
dec
pusha
aam
mov
lret
push
mov
mov
mov
stc
and
dec
mov
repz
mov
sbb
roll
lods
xchg
fwait
cli
mov
inc
mov
shll
fiaddl
jp
or
cltd
clc
stos
shrl
wrmsr
or
jb
jns
adc
test
push
inc
in
jo
xor
mov
xor
mul
sub
dec
lahf
push
xor
sbb
aaa
pop
outsl
fsub
sarb
or
push
lcall
imul
sub
and
rolb
into
sbb
imul
loope
adc
cs
imul
je
les
push
lret
bound
test
mov
cmp
js
xchg
xor
sbb
add
pop
movsl
cmp
ljmp
pusha
xchg
pusha
mov
mov
test
jmp
adc
jns
mov
xchg
push
push
dec
pushf
sbb
dec
int
cmp
pop
xor
pop
pop
gs
hlt
dec
push
xor
push
fprem
clc
xchg
xchg
outsl
lret
ja
sub
lock
iret
cmc
push
and
pop
pop
cwtl
fisttpl
aad
and
cmpsl
fnstsw
shll
pop
andb
lret
adcl
inc
pop
and
inc
cltd
inc
out
mov
push
adc
adc
mov
mov
xor
aaa
bound
mov
sti
bnd
add
fnstsw
je
cs
in
in
push
push
adc
inc
add
dec
je
pop
clc
in
js
and
pop
cltd
shll
int3
aas
sbb
sbb
rcr
dec
jno
mov
or
pop
add
stc
addr16
aad
mov
sub
mov
lcall
adcl
stc
mov
mov
je
push
icebp
and
pop
sbb
pop
sar
and
fwait
stc
pop
xchg
sbb
add
out
stos
and
inc
rcl
and
arpl
jb
dec
orl
das
lods
add
sbbl
xchg
movsb
xchg
add
fisttpll
xor
ljmp
or
arpl
sahf
test
mov
dec
cs
test
dec
push
rol
loope
xchg
fidivrs
jbe
outsl
inc
cmp
andl
sub
sarb
js
movsl
sbb
mov
fadds
add
sub
imul
mov
and
sbb
dec
pop
ljmp
pop
mov
iret
int3
mov
adc
cmp
cmpsl
mov
das
mov
mov
push
call
add
hlt
mov
pop
fisttps
push
mov
or
add
cltd
push
cmp
scas
lods
lahf
notl
lret
sub
xchg
ja
pop
cld
mov
xchg
dec
xchg
mov
xor
arpl
lret
das
dec
jg
or
mov
jge
jg
movsb
rcrb
hlt
push
cwtl
insl
adcl
and
lret
bound
xchg
or
rolb
inc
movsb
and
mov
lret
les
stos
mov
cli
mov
xchg
paddusw
je
push
pop
push
mov
or
les
sbb
pop
pusha
leave
lret
ljmp
repz
inc
adc
mov
bound
mov
xchg
sbb
imul
scas
test
pop
jmp
or
push
rcrb
cmp
sarl
sub
imul
movsl
add
cmp
or
xchg
mov
shrl
lret
clc
pcmpgtb
mov
insl
fcompl
fbld
imul
add
cmp
inc
fldcw
adc
mov
daa
push
or
ja
imul
pop
push
out
js
pop
lods
mov
imul
pop
push
adc
lahf
std
cmp
add
shll
leave
pop
mov
scas
test
fstps
movsl
imul
inc
xchg
push
sbb
cmp
mov
idiv
add
pop
sarb
xchg
outsl
popa
cmpsl
add
jecxz
add
sub
arpl
or
jno
ret
pop
into
rcrb
shl
cmp
inc
out
xor
and
loopne
mov
mov
cvtdq2ps
cltd
hlt
out
lea
jo
fildl
mov
lret
cmp
mov
imul
inc
insb
mov
subl
xor
outsb
outsl
popa
mov
scas
dec
lahf
lret
mov
or
jg
adc
aaa
and
ret
jg
jo
mov
aaa
dec
dec
pop
fwait
mov
gs
inc
pop
lods
xchg
and
or
pop
xchg
xchg
sahf
cwtl
mov
sbb
das
clc
lret
sbb
daa
orl
mov
dec
mov
xor
icebp
cmpsl
push
fnstenv
xor
movsl
insb
ret
mov
es
imul
cmp
in
aas
cltd
nop
push
pop
call
aas
fidivrs
and
adc
mov
ja
popl
das
dec
xor
call
and
scas
in
lock
lret
or
or
jge
xchg
sub
fs
popf
jae
jecxz
dec
in
rcr
ror
pop
jg,pn
fsubrs
xchg
mov
mov
mov
xor
add
dec
pop
rcrb
and
jmp
test
xor
sbb
cmpsw
imul
test
aam
push
dec
sub
loop
rorl
aam
dec
nop
call
mov
adc
dec
mov
in
mov
in
sbb
pop
cmp
aad
pop
cs
xor
fbld
xor
sub
aaa
mov
adc
push
jns
fistpll
xor
pop
pop
sbb
insb
xchg
inc
testb
outsb
out
lods
dec
push
dec
stos
xchg
mov
cmp
mov
sub
jmp
and
aad
pop
in
jbe
pop
out
cmp
push
ret
fisubrs
or
xor
mov
pop
xor
lcall
fsubl
in
shlb
loopne
jl
stc
call
pop
pop
insb
iret
sub
sahf
push
test
data16
pushf
into
and
and
adc
shl
into
push
outsb
gs
dec
in
pop
into
and
lret
outsl
lret
imul
sub
jb
xchg
mov
out
dec
into
cwtl
std
test
mov
popa
and
xchg
jae
xchg
frstor
jne
adc
dec
xchg
shlb
inc
lret
mov
cmpsl
ret
add
cs
pop
addl
pop
cwtl
out
ret
push
pushf
rcrb
adc
in
pop
adc
mov
push
mov
jne
dec
arpl
pop
adc
push
add
loope
aas
or
sub
rorb
or
mov
fiadds
jbe
dec
sbb
jge
sahf
xchg
mov
mov
mov
aas
xor
push
movaps
ljmp
cmp
rorb
pop
adc
sub
imul
movsb
and
mov
adc
ret
outsb
xlat
insl
mov
xchg
dec
sbb
lcall
xchg
nop
outsl
fistpl
sub
adc
cmp
cmp
cltd
scas
add
pop
xor
pop
mov
shll
pop
pop
ss
push
aas
sub
cmp
xchg
pop
cltd
sub
push
lods
mov
jle
fstps
and
roll
rorb
jg
lods
lahf
pop
or
enter
mov
xchg
sub
jne
xchg
lea
sub
gs
push
fnstenv
xor
dec
fimuls
pop
or
sbb
inc
push
cmp
mov
mov
movsl
adc
push
pop
loopne
arpl
and
add
gs
inc
imul
sar
in
scas
std
loop
or
fstl
and
in
lret
sub
sub
fisubrl
add
xchg
fdiv
pop
add
lret
cmp
je
ficompl
push
mov
dec
in
dec
mov
in
lcall
cmp
fsts
jg
add
or
andb
popa
loop
or
insb
mov
pushf
sbb
int3
mov
fisubrl
mov
jle
lret
pushf
aas
test
add
cltd
pusha
add
fdivrp
or
push
dec
test
movsb
loop
inc
lcall
movsb
rcll
and
cltd
cmpsb
cmp
mov
adc
xlat
rcll
xchg
pop
lock
pusha
movsl
cld
mov
push
add
mov
cmp
mov
aam
mov
daa
mov
sub
add
inc
out
pop
mov
inc
jle
in
cmpl
cli
negl
cmp
cmpsb
xor
cmpsb
jnp
clc
cmpsb
xchg
pop
fs
xor
mov
mov
mov
inc
mov
pop
insb
cltd
loop
pop
push
loopne
imul
nop
adc
pusha
sti
or
imull
and
cmp
insb
lret
jp
imul
sub
fisubl
pop
out
xchg
sbb
dec
mov
xor
cmpsb
pop
cs
xchg
adc
movsl
cmpl
mov
rorb
mov
andb
pop
lock
fldl
jl
jge
loopne
stos
into
gs
mov
les
cmp
pop
xor
fsubl
ja
scas
ret
cmp
and
push
mov
adc
xor
daa
ds
lock
mov
imul
je
imull
ror
sub
cmp
jle
pop
roll
add
out
jl
dec
mov
mov
mov
popf
xor
mov
add
push
cmpsb
pop
xor
lea
movsb
mov
push
jmp
lds
verr
aam
adc
mov
push
jp
shrb
repnz
adc
lcall
je,pt
cwtl
test
add
in
sbb
jmp
inc
sbb
jle
mov
lret
ss
fiadds
push
cli
nop
fwait
xor
sbb
jb
popa
addb
push
and
mov
rolb
sbb
inc
imul
hlt
dec
rorl
jge
or
divl
fcomps
fisubrs
pop
dec
movsl
xchg
push
add
das
in
shll
add
icebp
mov
cmc
mov
cmp
mov
mov
divb
pop
lret
push
daa
inc
mov
xor
leave
and
inc
fst
sbb
loopne
xor
push
sarb
fdivrl
pushf
rclb
pop
imul
adc
daa
adcb
movq
std
imul
jo
and
lods
cmp
push
iret
mov
je
enter
inc
xchg
cmp
mov
jle
imul
imul
lea
cmp
cli
push
or
fucomi
mov
mov
lods
mov
add
lds
fisubrs
ret
into
inc
mov
sbb
pop
ss
inc
mov
enter
cmp
stos
jl
xchg
out
and
xor
push
xor
push
cmp
mov
dec
add
lahf
jo
rclb
test
mov
sub
divl
jae
cwtl
imul
and
pop
lret
into
out
jmp
mov
and
sbb
out
mov
lahf
aam
pop
es
pop
mov
jbe
mov
in
popf
mov
mov
push
xchg
loop
mov
sahf
mov
inc
mov
cmc
sub
icebp
dec
add
mov
daa
int
add
cmc
xor
jae
jno
stos
andb
test
sub
pop
pop
es
xor
sbb
and
lret
push
jge
in
fidivs
dec
test
addr16
loopne
pushf
pop
sti
movsl
cmp
sbb
cmp
test
popl
cmpsl
dec
pusha
jg
push
inc
jo
pop
sbb
push
andb
mov
inc
mov
dec
enter
stos
dec
and
jmp
ja
cmpsl
cld
les
push
or
jg
ss
pushf
mov
fcmovnb
dec
mov
jmp
mov
popf
sub
or
gs
pushf
in
sub
cmp
sti
push
in
js
push
inc
fnstsw
xor
mov
mov
call
dec
xor
lods
stos
dec
push
push
xchg
es
jbe
lret
jl
mov
loop
lret
fwait
inc
push
stc
xchg
in
sbb
push
cmpb
dec
mov
xchg
stos
jne
sub
push
in
sbb
ds
inc
fcmovnbe
xor
cmp
sti
xor
aas
adc
mov
sub
orl
enter
inc
or
repnz
daa
ja
jne
add
mov
movsl
mov
out
aas
lret
fwait
jecxz
pop
or
xchg
add
and
jae
andl
push
out
insl
or
pop
pop
xchg
or
aam
cmp
lods
cmp
mov
mov
jl
add
dec
ret
push
mov
and
pop
adc
pop
mov
xchg
fistpl
insb
mulb
mov
pop
cmc
fsubrs
cmp
pushf
or
or
xor
inc
movsl
cmpsl
enter
cs
test
cmp
and
in
roll
mov
out
push
adc
rcll
inc
push
push
push
das
aaa
fstpt
inc
mov
frstor
jg
or
ja
in
lret
aad
shll
adc
inc
lahf
mov
dec
mov
or
insb
xlat
cld
cmp
test
loopne
sub
sti
mov
sbb
fs
pop
fdivs
addl
mov
stos
jae
push
imul
nop
out
test
inc
mov
int3
out
subl
inc
fucomip
sahf
lock
push
std
test
mov
jl
and
int3
mov
jb
loopne
cmp
neg
jmp
inc
dec
inc
mov
add
sub
xchg
outsl
iret
mov
mov
xor
mov
fcmovnbe
xchg
jae
adc
std
mov
repz
int3
lcall
cltd
inc
sti
scas
and
or
pop
mov
pop
mov
aaa
mov
adc
sub
and
adc
imul
lock
push
push
aas
mov
jbe
int
dec
popf
test
je
outsb
dec
cltd
mov
jge
jno
les
pop
add
dec
out
cs
iret
out
iret
mov
scas
popf
addr16
stos
pop
jmp
push
and
test
mov
xchg
outsl
xlat
ror
adc
mov
mov
sarb
repz
in
add
cmp
loop
xchg
cmp
shlb
jno
cmp
xchg
sub
test
testl
add
xchg
pop
mov
sbb
shr
or
outsb
mov
jecxz
xchg
das
push
mov
jecxz
test
push
fisubl
mov
out
or
dec
add
pop
inc
int3
es
xor
sti
sbb
mov
inc
loopne
in
insl
cltd
jb
cmp
in
ds
add
sub
and
inc
es
sub
mov
hlt
in
rolb
push
dec
js
or
mov
repz
push
push
pop
sarl
lcall
sbb
mov
int
cmc
out
pop
nop
les
lret
and
sbb
popa
jge
cmp
sbb
aaa
fnstsw
xor
in
and
nop
imul
dec
inc
inc
jg
std
push
xor
add
lahf
sub
movsl
pop
mov
fldl
clc
sbb
pop
xchg
push
sbb
ret
cld
xchg
bound
mov
mov
push
xor
fcomps
or
shll
movsb
xlat
pop
andl
fwait
mov
xor
or
push
push
stos
cmp
icebp
mov
mov
cmp
xor
mov
cmp
jle
jg
cmp
cli
ljmp
push
loop
inc
mov
mov
or
sub
cmp
mov
dec
cmp
lods
out
outsl
inc
push
push
fldt
rol
negb
ss
mov
sbb
in
cmc
out
aam
jle
or
cmp
cmp
outsl
jl
lret
es
sub
mov
insb
rcl
push
shlb
push
clc
sti
add
mov
in
aad
push
or
mov
ret
movsl
mov
ljmp
and
push
dec
push
cmp
jns
jo
mov
xor
gs
adc
lock
jle
mov
scas
in
pop
pushfw
push
loopne
sub
pop
sub
inc
cmp
repz
outsb
mov
clc
push
ss
cli
adc
fs
fcoms
xor
dec
test
xchg
push
imul
pop
andb
testb
and
adc
int3
jnp
cltd
jns
dec
lock
push
adc
ror
sub
or
vpavgw
faddp
mov
rolb
mov
dec
icebp
pop
test
add
cmpsl
mov
shrb
xchg
test
jne
out
mov
pop
xchg
xchg
sbbl
ret
cwtl
mov
data16
mov
icebp
xchg
iret
icebp
mulb
outsl
pop
push
sbb
cli
mov
subl
roll
cmpsl
cmp
incb
xor
and
ja
xchg
adc
bound
mov
pop
cmp
das
cli
ja
in
mov
cltd
add
or
pop
repz
cs
gs
rcll
cmp
bound
sahf
or
outsb
rclb
jl
sub
test
lcall
jl
addb
scas
call
in
xor
cmp
popa
outsl
into
adc
push
lcall
repnz
sahf
mov
outsb
mov
or
push
add
lds
bound
addr16
sbb
scas
mov
cmp
imulb
jbe
cmp
cmc
pop
pop
cmpsl
jnp
rolb
scas
xor
cmpsl
faddl
fdivp
cmp
stos
out
ljmp
enter
and
call
adc
and
jnp
push
mov
shrb
mov
cmp
sbb
xchg
adc
mov
fmull
and
sti
cwtl
xchg
pop
movsb
xchg
aas
lods
loop
xchg
ss
push
das
cli
scas
pusha
jmp
jecxz
mov
xor
ss
xchg
movsl
inc
push
imul
daa
addr16
in
int3
pop
push
out
aaa
mov
push
and
xchg
fsubrl
out
out
sub
or
mov
aas
cmpsl
pop
insl
cmpsb
mov
call
and
shll
and
cmp
dec
gs
sbb
push
inc
xchg
push
inc
add
pop
scas
enter
pushfw
gs
lods
xchg
cltd
addr16
clc
push
sub
enter
test
xor
test
nopl
daa
sbb
andb
ret
jp,pn
fists
cld
adc
hlt
mov
pop
scas
mov
or
out
mov
sub
leave
fists
mov
push
inc
cmp
les
incb
mov
cli
insl
cltd
fistpl
xchg
or
cmp
dec
xorl
add
jae
mov
aam
aad
push
call
das
xchg
pop
ficoml
stos
sub
or
pop
jecxz
pop
xlat
pop
cmpsl
add
int
sub
mov
push
dec
int3
aad
sti
dec
pop
data16
fdivs
sub
pop
push
test
pop
mov
push
insb
scas
ja
or
lcall
xor
sbb
xor
out
add
loopne
xlat
ljmp
out
mov
sub
push
fs
pushl
pop
mov
xor
es
fcmovne
sub
rolb
pop
outsl
imul
sbb
outsl
arpl
lock
pop
icebp
fistpl
sub
pop
lcall
cmpsl
mov
sbb
pop
movsb
jo
setp
scas
stos
enter
fcmovne
mov
addb
sbb
test
nop
dec
inc
cli
movsb
cmpsb
mov
shlb
push
ljmp
data16
adc
fwait
insb
filds
mov
leave
testl
lahf
add
dec
mov
xchg
adc
push
add
pop
dec
mov
pop
xor
sbb
scas
xor
dec
test
scas
sub
insl
call
mov
and
movsb
adc
adc
cmp
pop
adc
adcl
mov
pop
pusha
push
lret
sub
mov
outsl
jb
mov
mov
stc
jae
or
inc
push
sti
cmp
pushf
out
movsl
mov
enter
xor
xchg
cmc
insb
pop
shrl
in
jae
push
in
adc
jnp
and
add
fsub
out
xchg
mov
or
ret
rorb
xchg
push
cmc
repnz
mov
adc
jmp
adc
push
push
mov
aad
push
push
dec
add
mov
mov
push
sbb
fidivrl
xchg
add
loope
sbb
pop
sbb
dec
or
ss
push
lea
mov
mov
and
add
incl
adc
in
loop
adc
mov
jmp
lds
aam
fs
jno
mov
negb
sub
cmp
cmp
push
inc
adc
mov
stc
stos
sarb
xchg
mov
pop
mov
xor
xor
loopne
xor
mov
xor
adc
dec
mov
xor
loop
fmull
xchg
dec
inc
mov
cmp
jmp
lahf
jbe
xorb
insb
xor
loopne
adc
test
movsb
out
or
outsb
dec
test
and
lock
push
in
pop
cmp
cs
dec
xlat
xchg
xchg
shrb
pop
push
xor
int
jnp
mov
pusha
dec
dec
sar
mov
add
stos
repz
sub
gs
iret
mov
lods
xlat
gs
data16
lea
xchg
dec
pop
das
sub
sub
icebp
xchg
cmpl
cmpsl
iret
call
add
stos
cmp
ficomps
and
push
outsl
test
mov
out
ljmp
testl
outsl
adc
popf
fwait
pusha
stos
adc
pop
nop
test
rolb
repnz
xor
test
cwtl
mov
mov
bound
inc
xchg
add
sbb
inc
hlt
sub
xchg
jbe
or
sbb
frstor
mov
cmp
or
dec
dec
jmp
pop
std
les
dec
pop
ss
jno
sbb
cmpsb
mov
stc
fs
lods
inc
or
std
test
je
ljmp
test
hlt
sub
mov
lods
push
add
es
add
add
cltd
jecxz
xchg
sub
scas
leave
or
scas
js
mov
mov
jmp
sbb
cmc
mov
pusha
adc
push
testl
add
xchg
or
imul
mov
loopne
sub
add
mull
xorb
or
mov
mov
sahf
sti
sbb
dec
push
mov
cld
mov
xchg
dec
and
push
ret
add
int
ret
sbb
add
jo
add
lahf
mov
das
inc
scas
test
addr16
shlb
in
sti
or
add
test
fwait
cmpb
push
push
ret
add
inc
push
ja
fidivrs
or
das
bound
mov
xor
aad
add
iret
es
push
sahf
gs
inc
add
mov
and
movsb
fucom
mov
int3
adc
mov
mov
xchg
outsl
jl
mul
mov
cmp
sub
out
mov
xchg
xor
out
and
in
cli
dec
mov
insb
loope
add
ror
cld
loop
sbb
jb
adc
add
dec
aaa
adc
add
jmp
mov
push
mov
scas
fcmovnbe
push
lcall
out
adc
jns
int3
in
mov
sar
dec
enter
xor
int
cmp
aam
lcall
xchg
repz
insb
jle
inc
and
jns
mov
or
xchg
insb
aaa
jae
das
pop
mov
aas
insl
jecxz
mov
pop
cs
push
mov
mov
stos
fnstcw
scas
add
and
xchg
jecxz
and
sbb
out
xchg
leave
cmpsb
or
inc
sti
xchg
or
and
jb
push
lret
pushf
mov
ja
shr
mov
lock
mov
inc
popf
cmpb
lock
cli
mov
jbe
ljmp
jb
ja
outsl
movsl
outsb
sbb
push
cmpl
test
push
fs
add
enter
sbbb
or
pusha
pop
cmp
xor
call
push
mov
jecxz
test
std
or
outsl
scas
into
stos
cmp
fistl
shrb
mov
lret
pop
jg
rcrb
pusha
inc
xchg
lods
rorl
push
jecxz
mov
mov
mov
pop
xor
lcall
scas
into
or
lods
out
aad
fwait
pop
pop
das
inc
xchg
lret
iret
and
mov
insb
jnp
rolb
and
out
and
fnstenv
pop
dec
and
and
ds
fmull
aam
cmpsl
or
fstpl
cmp
add
out
add
jmp
pushf
fisttpll
push
subl
lock
mov
movl
ficoml
jno
hlt
cmp
fmull
dec
push
mov
jl
sbb
ljmp
mov
and
pop
jl
push
adc
mov
fcomip
shll
loope
sub
lods
pop
iret
lret
mov
pop
and
insl
call
xor
adc
je
jno
xchg
repz
add
mov
inc
and
out
ret
mov
cmp
shl
mov
cmp
fs
and
dec
mov
mov
bound
hlt
cs
cmpsb
mov
cmp
enter
push
incl
mov
and
xchg
ljmp
repz
jmp
push
cld
pop
add
jns
cltd
out
push
mov
enter
jae
dec
pop
stos
ss
mov
out
int
arpl
scas
add
adc
enter
movb
repnz
out
clc
mov
mov
rol
sub
sahf
jle
fiaddl
adc
push
mov
out
pop
dec
neg
jmp
nop
jecxz
mov
std
movsb
movsl
xor
dec
xchg
test
cmpsb
orl
test
jno
ret
outsb
pop
push
lods
orb
rcrb
mov
out
adc
cmpsb
adcb
push
pop
aaa
inc
roll
fiaddl
pop
pusha
jbe
xchg
mov
in
add
lds
adc
xor
stos
mov
dec
xor
add
and
fwait
mov
mov
xchg
mov
repnz
push
popf
aad
jle
mov
sahf
inc
xchg
sub
cmp
fcompl
and
sub
mov
das
inc
out
mov
mov
xor
in
sub
ret
xchg
arpl
mov
pop
lea
mov
sti
fs
adc
xchg
fiaddl
dec
and
js
mov
das
xchg
cs
xchg
push
cld
add
xchg
ret
pop
push
mov
mov
mov
pop
mov
xor
cmp
inc
sub
push
dec
jns
xchg
test
mov
lahf
aad
and
add
aaa
out
orl
jnp
scas
pusha
xor
mov
cmpsb
xchg
enter
cli
xchg
ljmp
xor
sbb
and
fnsave
sbbb
or
into
jp
enter
mov
add
orb
or
jne
aaa
mov
pop
enter
and
add
je
sub
fs
dec
xor
or
pop
mov
dec
mov
mov
mov
adc
enter
in
mov
rcrl
in
mov
in
popa
push
scas
xchg
jnp
or
inc
jae
push
cmp
pop
inc
jmp
pop
and
inc
repz
cmpsb
xchg
test
xchg
shl
gs
fistl
fcomi
dec
dec
rol
add
fnstcw
xor
addb
and
inc
mov
and
xchg
and
mov
dec
and
mov
sbb
test
dec
mov
je
mov
out
filds
jo
sarb
sarl
test
mov
jbe
jl
scas
mov
leave
mov
movsb
pop
rclb
jl
popf
fninit
dec
inc
inc
scas
int3
stc
ja
loop
mov
fidivrl
stos
les
fsts
hlt
test
cmc
stos
mov
cmp
inc
and
lcall
pop
mov
rclb
movsl
aad
popa
push
data16
enter
xor
sbb
mov
or
sub
movntq
mov
cmc
pop
add
int3
addr16
in
add
adc
inc
inc
outsb
sbb
sbb
jmp
pop
mov
dec
ret
add
push
cmp
mov
testl
shlb
sti
lock
je
xchg
xchg
shr
jl
rcl
out
mov
lret
int3
mov
jnp
lods
xchg
jne
jl
in
aad
lcall
push
shrl
arpl
jno
xor
or
pop
and
in
mov
stos
lock
add
jbe
rcl
dec
mov
in
pop
or
pop
mov
shl
push
xchg
jl
data16
movsl
inc
test
mov
mov
mov
xchg
adc
mov
rcll
inc
fwait
xchg
fdivrs
mov
sub
scas
mov
pop
fsubl
cwtl
es
cmp
mov
cmp
out
je
mov
adc
test
in
fcoml
in
jle
mov
jb
mov
hlt
fwait
mov
imul
mov
jmp
pop
mulb
rorb
shrb
dec
test
stos
push
cwtl
mov
mov
jns
out
hlt
mov
lahf
mov
pushf
add
icebp
les
int3
out
pop
gs
xchg
lods
nop
jno
push
loopne
pushl
mov
out
fidivrl
jg
jp
add
lods
add
gs
jmp
inc
call
dec
les
xchg
mov
cmp
and
pop
lcall
icebp
rolb
arpl
pop
and
or
mov
inc
test
mov
jp
mov
push
repnz
adc
jmp
lcall
ja
inc
lea
insb
sbb
subl
mov
sub
sar
sahf
lret
inc
and
push
push
sahf
mov
jb
outsb
and
into
push
shl
js
fildll
sbb
push
addb
lret
jne
lock
aam
std
decb
mov
xchg
dec
or
rcrl
push
dec
add
dec
mov
jmp
inc
aaa
push
sub
loop
xacquire
jno
jge
aam
jl
xchg
test
xor
test
pushf
subb
or
mov
jl
or
lret
insl
mov
sbb
xorb
xchg
sarb
stos
cmpl
lea
xor
test
jns
cld
frstor
loope
push
test
popf
add
testb
cmp
jmp
inc
dec
movsb
mov
xchg
insb
fstpt
ret
pop
push
dec
xor
jno
push
je
fsqrt
orl
in
mov
and
push
pop
xor
fdivr
dec
shrb
ret
sbb
call
sub
inc
stos
or
xchg
in
push
add
push
mov
and
fsubrp
mov
cmp
repnz
in
sbb
cmp
push
daa
xrelease
lock
mov
xchg
mov
dec
fcmovne
xchg
aam
xor
xchg
add
mov
std
adc
ss
repnz
pusha
jg
xor
lea
add
test
xor
sub
and
cmp
jb
imul
movsb
pop
mov
add
imul
push
mov
notl
sbb
outsb
pop
fisubrl
sbb
jnp
fs
popf
inc
pop
imul
fimull
pop
stc
in
xor
pushl
out
loope
cmp
andb
jge
stos
dec
xlat
imul
pop
fucom
jp
xor
pop
sub
and
cwtl
lea
pop
sub
adc
xchg
jecxz
loop
std
int3
and
xchg
aaa
push
or
sub
push
je
adc
inc
xchg
stos
adc
push
ss
or
repnz
into
and
cmc
jl
gs
outsb
jge
or
movsl
sbb
push
mov
pop
arpl
negb
mov
nop
loopne
in
mov
icebp
sub
lods
mov
sbb
movsl
cmpsb
stos
ret
lcall
test
pop
movsb
into
inc
jle
out
inc
sub
pop
mov
imul
sub
xchg
das
fcmove
xchg
cltd
pusha
in
cld
add
jns
push
mov
add
pop
xchg
fisubrs
dec
aam
mov
mov
imul
mov
repnz
mov
mov
mov
xchg
in
cmp
bound
sti
jecxz
call
push
std
inc
mov
pop
sarl
cmp
push
cmp
push
ja
xchg
cltd
or
gs
repz
sbbl
cmp
fmuls
aam
lret
push
test
fs
xchg
xchg
adc
cltd
movsb
fs
js
imul
or
loop
jb
adc
repz
mov
in
mov
cmpsb
xor
je
imul
movsb
mov
int3
enter
push
test
mov
xor
cmp
mov
in
test
cmpsb
outsl
cwtl
pop
sbb
push
lods
je
xchg
jo
jge
adc
mov
fldl
lahf
jb
nop
int
inc
inc
arpl
or
ret
in
rorb
std
xor
sarl
loope
mov
dec
ficoml
inc
pop
sbbl
mov
push
aam
arpl
stos
adc
arpl
enter
ds
add
clc
jle
pop
pusha
cmpb
lock
popf
orl
cld
js
pop
in
push
fwait
pop
shrb
dec
fnstenv
lock
sub
and
dec
roll
ret
xor
jns
cmpl
xchg
lock
inc
xor
inc
xchg
insl
leave
and
mov
sbb
movsb
pushf
inc
mov
std
ja
fsubrl
leave
aam
aaa
test
ljmp
xor
pop
es
clc
lahf
iret
cmp
mov
and
mov
std
or
int3
adc
dec
xorb
mov
insb
cmpsb
xchg
dec
push
shll
push
add
sbb
jg
jle
icebp
rcl
lock
inc
jbe
or
mov
push
xchg
insl
push
stc
imul
dec
mov
sbbl
mov
cs
add
aas
mov
outsb
jecxz
mov
push
scas
pop
imul
pop
ficomps
es
adc
jl
aaa
neg
push
nop
imul
mov
cmp
sarb
imul
lcallw
jmp
repnz
xchg
lret
push
jnp
xor
mov
faddp
cwtl
stc
dec
aas
ljmp
movsl
pop
mov
loop
sti
sub
out
icebp
dec
test
ret
into
inc
movsb
push
adc
inc
add
sbb
and
mov
jg
push
mov
xchg
sub
cmp
and
shll
xchg
jne
movzbl
xrelease
test
push
enter
mov
mov
xchg
add
outsb
inc
dec
test
iret
divl
out
lock
gs
xchg
or
lret
stc
mov
lret
mov
jbe
cmpxchg
stos
push
push
jo
sub
popa
pushaw
push
enter
adc
popf
pop
es
aad
std
mov
ret
cld
and
dec
inc
mov
enter
out
fxch
ja
lods
ja
add
mov
andb
lret
cld
sub
and
leave
mov
movsl
sub
push
mov
xor
add
sub
in
rclb
inc
xor
add
sbb
fwait
hlt
and
popa
and
mov
je
insb
push
push
addr16
fwait
call
inc
add
cmp
mov
scas
daa
pushf
in
sahf
mov
xchg
cmp
pop
fs
sbb
int3
xchg
sarb
setns
stc
sahf
fmull
fwait
sub
jns
cmp
xchg
in
sarl
in
jge
leave
lcall
js
push
mov
fstpl
sbbl
push
sbb
popa
push
std
xlat
push
add
in
mov
xchg
push
je
das
add
insl
inc
fiadds
jle
shl
and
mov
pop
sub
xchg
adc
pusha
cwtl
mov
lods
bound
test
out
xchg
pop
test
adc
dec
push
push
jno
inc
jo
pop
jb
arpl
shr
fstl
mov
cmc
push
adcl
cmpsb
mov
lret
jg
repnz
mov
and
rep
fmulp
or
inc
sbb
or
adc
add
adc
test
mov
adc
stc
push
sub
add
or
subl
push
cmp
jne
in
and
mov
mov
xchg
sub
add
add
jg
maskmovq
testl
xor
jle
push
inc
mov
cmp
inc
sub
leave
adc
mov
fbstp
push
dec
ret
ljmp
and
and
stc
pop
jno
and
and
dec
or
or
inc
lret
stos
gs
sbb
in
fwait
jb
into
fisubs
jbe
movsb
das
les
mov
push
mov
dec
mov
loop
out
xchg
add
test
jge
push
js
rcrl
lcall
test
popf
cmp
or
pop
push
push
pop
sbb
xor
cmp
loop
jo
xor
rorl
adc
push
push
loope
mov
mov
mov
out
int3
or
xlat
out
dec
sub
sbb
dec
icebp
outsl
xchg
pop
dec
jnp
dec
test
push
and
test
fmuls
jbe
add
imul
or
inc
xchg
push
sbb
loope
jnp
roll
push
sbb
mov
fidivs
jno
xchg
adc
jg
je
inc
push
or
dec
xor
adc
js
xor
mov
jl
cmpsl
sti
outsl
jns
icebp
cmp
mov
fidivrs
lret
or
mov
and
paddusw
loop
orl
scas
xor
int
insb
mov
mov
pop
sbb
das
adc
pushf
inc
push
fsubrs
icebp
jmp
xor
mov
mov
cli
and
out
rcrl
rclb
push
mov
sub
int
ds
jp
adc
lret
bound
mov
pop
pop
adc
adc
pop
push
stos
xchg
add
movsl
icebp
sub
aad
lahf
mov
loope
lods
xchg
push
jle
cltd
insl
pop
into
xchg
shrl
aaa
cmc
movsb
icebp
shrl
pop
sbb
jge
rorl
ret
stos
iret
inc
push
jmp
mov
jmp
test
inc
xorb
cmp
je
inc
mov
mov
jo
movsb
neg
jp
push
leave
push
int
test
adc
sub
mov
pop
aaa
lahf
subb
jle
sarb
test
popa
pop
cmpsl
clc
nop
in
add
mov
mov
iret
lock
mov
les
push
jle
push
push
xchg
mov
pop
je
mov
test
aaa
sub
lods
jp
stc
xlat
stos
outsl
xchg
aas
or
or
push
scas
xor
xor
cmp
sub
lcall
or
mov
mov
mov
or
add
pop
jne
je
mov
repz
aas
adc
sbb
push
ret
adc
sbb
pop
or
pop
or
sbb
adc
add
mov
jg
stos
fs
xchg
pop
lahf
jecxz
sbb
pop
xor
out
xor
cmp
or
cmpsl
orl
je
dec
scas
nop
xchg
in
fcomp
fwait
xchg
stc
vpcmpd
add
cmp
xchg
sub
stc
daa
les
mov
or
data16
scas
ret
popf
cltd
mov
ret
adc
sbbb
sbbb
jecxz
pop
add
stc
mov
mov
mov
icebp
mov
push
mov
out
cmc
jl
sti
fwait
sbb
sahf
shrb
push
mov
jne
cmp
adc
sbb
test
loopne
test
adc
fistl
sarb
cli
xor
sub
cmpb
jmp
xchg
xchg
pusha
push
xchg
dec
std
adc
bnd
pop
in
mov
mov
and
lret
ljmp
add
call
jp
cmpsb
pop
je
filds
mov
mov
jp
cld
sub
inc
pop
mov
fwait
out
push
out
je
jnp
lcall
pop
leave
sbb
mov
enter
sahf
adc
inc
shl
and
outsb
xor
jae
inc
pop
pop
fwait
mov
fadds
popa
enter
call
cmpsl
sbb
cwtl
jmp
cmp
rorb
mov
lods
push
fdivrs
mov
pop
xchg
mov
roll
outsl
sub
int
jne
loopne
test
shlb
pop
pop
mov
push
aas
test
dec
test
jmp
stc
fs
xor
lret
lret
test
das
dec
iret
cltd
int
fs
push
push
lcall
stos
fld
fidivl
xchg
rep
inc
cmp
jp
sbb
scas
dec
mov
jg
ret
or
add
jnp
pop
inc
cltd
and
movsb
mov
dec
test
aad
xchg
mov
aaa
inc
mov
add
xchg
or
cmp
std
cs
mov
add
mov
lods
mov
das
mov
push
adc
add
out
aaa
jg
ja
ret
cwtl
and
jbe
faddp
jp
dec
or
cmp
pop
test
enter
add
gs
aam
scas
jb
dec
loop
stc
mov
sbb
adc
aad
ret
pop
roll
push
mov
popa
mov
pushf
dec
mov
pop
sub
loopne
sub
sub
pop
mov
pop
mov
inc
sbb
fnsave
push
cmp
or
cmpl
notl
inc
loop
sbb
pop
cld
aam
pop
mov
imul
pop
inc
inc
cmp
adc
jle
aad
lods
push
mov
jns
cmp
cmp
add
cmpsl
pop
push
pusha
dec
push
in
lcall
cmp
idivb
cmp
or
stc
lods
jp
push
add
imul
pop
imul
pop
xor
lahf
adc
pop
push
mov
enter
imul
mov
cwtl
pop
cmp
mov
jmp
incb
loope
push
sbbb
cmp
shlb
jns
mov
shrl
cmpsb
pop
xchg
adc
leave
adc
inc
pusha
xor
ja
icebp
pop
push
roll
xchg
aad
ret
lahf
pop
mov
sbb
cmpb
lods
or
lcall
jno
loop
lds
push
clts
fisubrl
xchg
push
dec
cmp
xor
mov
scas
icebp
scas
lea
sbb
daa
push
pop
ja
subl
out
outsb
cmp
mov
sbb
mov
fldl
call
scas
mov
pop
jmp
fldt
xchg
test
sti
fisttpll
pop
ljmp
jecxz
int
lds
mov
sub
and
inc
jo
loopne
inc
in
fnstenv
or
xchg
dec
pushf
int3
inc
mov
push
stos
andb
movsb
bound
rorb
xchg
sbb
pop
jge
push
xor
rclb
pop
adc
arpl
or
or
push
adc
ret
jmp
inc
pushf
jno
popa
je
ffreep
fsts
jnp
dec
cmp
mov
cs
sbb
dec
aam
sub
mov
shrb
sti
movsb
push
lods
mov
shll
outsl
lock
inc
inc
adc
ffreep
jl
mov
lret
pop
jb
pop
insb
popf
mov
cltd
and
or
mov
pop
call
jne
insb
pusha
sbb
pop
call
dec
cmpsl
sbb
pop
jmp
fcompl
cmpsb
or
sahf
or
leave
add
add
loope
push
lods
push
hlt
mov
jb
rorl
pop
lods
addl
jne
inc
mov
dec
push
inc
mov
pop
filds
sub
lods
stos
gs
imul
orb
dec
sbb
in
lock
fnstsw
mov
xchg
inc
sti
jns
xor
incl
push
out
sbb
cmp
addr16
les
movsb
repnz
jnp
push
xchg
add
popa
test
and
mov
push
jae
int3
mov
jp
mov
mov
insb
jmp
out
mov
pop
jb
mov
jmp
sbb
gs
inc
test
xlat
fadds
ret
test
sub
lds
mov
sub
lea
or
arpl
shl
fcmovne
lfs
pushf
push
xchg
inc
jg
xchg
shr
fcoml
test
in
push
clc
outsb
push
push
call
xchg
or
stos
mov
aaa
out
imull
xlat
jmp
sub
adc
ret
lahf
jl
dec
neg
mov
mov
pop
aas
adc
pop
xchg
orb
pop
or
dec
cmp
or
xchg
js
pop
mov
cmc
lahf
data16
xlat
push
sub
and
imul
xorb
mov
aam
push
cmp
imul
mov
test
lret
js
cmp
and
sbb
sub
add
inc
in
outsl
push
ljmp
ja
jb
les
push
int3
jle
xchg
popf
xor
ss
gs
mov
test
adc
or
dec
xchg
jge
push
mov
fnsave
xchg
lods
pop
mov
sub
aaa
xchg
bound
fildll
mov
or
orb
pushf
mov
pop
cmp
and
in
cs
clc
icebp
push
movsl
movaps
xchg
pop
ret
test
xchg
dec
inc
loopne
jecxz
push
xor
fildll
xlat
mov
inc
push
and
sub
gs
mov
pop
mov
enter
repz
fadd
sbb
dec
and
aaa
aad
pop
lret
push
or
movsl
in
in
hlt
shrl
mov
xor
sub
lret
int3
add
cwtl
movsl
push
sub
xor
sbb
mov
cs
jg
cmp
jb
or
arpl
pop
xchg
mov
jne
outsb
sub
test
cmc
les
icebp
add
add
xchg
icebp
jle
fisubrs
add
es
mov
dec
data16
ret
xchg
ljmp
in
xchg
lcall
mov
xchg
sub
xchg
fimull
sbb
into
mov
inc
jl
in
das
xlat
xlat
dec
xchg
dec
fistpll
daa
xchg
js
int3
add
lds
mov
enter
xchg
fmull
dec
lcall
jae
arpl
jp
xchg
loopne
mov
test
les
mov
fldenv
insl
dec
and
test
shrl
and
nop
pop
push
lret
and
jg
mov
and
push
mov
add
enter
lret
or
in
xor
jecxz
cmc
push
fdivr
dec
in
mov
push
das
and
jle
jno
sub
aam
lret
jl
insl
inc
mov
sub
mov
outsl
shrb
int
mov
add
stc
jb
xchg
xor
mov
nop
mov
cmp
jg
jo
dec
xor
in
orl
dec
pop
sub
mov
cmp
xchg
adc
xor
iret
ret
jl
jmp
andb
jbe
imul
addr16
push
jge
jge
xchg
xlat
mov
push
fs
sbb
inc
push
addr16
jb
leave
fdivrl
mov
cmp
dec
inc
jle
sub
rorl
scas
cli
pop
cld
movsb
mov
sbb
clc
push
sub
and
push
insl
arpl
jo
shll
inc
cmp
jae
aad
stos
pop
and
lret
add
pushf
sub
push
xchg
orl
add
and
xchg
pusha
call
in
lahf
leave
lds
ja
cmpsl
imul
dec
fdivl
mov
or
inc
or
mov
addr16
add
ret
xor
imul
repz
outsl
hlt
cmc
xchg
in
pop
les
push
mov
das
insl
mov
mov
pop
mov
pusha
and
jmp
daa
sbb
outsl
sub
icebp
test
pop
mov
int3
aas
sbb
inc
push
cld
sub
jb
mov
test
or
repz
mov
mov
pop
pop
ja
test
jnp
mov
xchg
inc
movsl
jle
jmp
test
xor
divl
jp
jge
xor
divb
das
scas
sub
dec
push
adcl
in
data16
shll
out
loop
cmp
cmp
ret
jecxz
mov
and
icebp
clc
mov
inc
push
fisttpll
mov
iret
inc
clc
movsb
cmpsb
hlt
ret
std
es
leave
xor
push
dec
inc
testb
adc
leave
xor
sub
add
jle
gs
repnz
sbb
add
orb
add
dec
add
mov
adc
or
outsb
dec
and
loopne
sub
out
inc
js
adc
and
jmp
cmp
inc
cmp
jp
jg
pop
es
insb
adc
int3
mov
ja
in
mov
fs
movsl
mov
xchg
es
inc
and
negb
xor
pop
roll
ficoms
push
int3
xor
cmp
scas
mov
or
stos
test
ret
imul
xchg
push
mov
xorl
sbb
arpl
lds
ljmp
rclb
mov
xor
xchg
xchg
pop
aas
fimuls
xchg
ljmp
sahf
xor
and
xor
aad
or
pop
orl
xchg
pop
iret
imul
vmwrite
jl
xchg
or
fwait
pop
mov
fsts
push
test
testl
push
imul
scas
inc
xchg
shll
outsb
inc
and
pop
jae
leave
add
cmp
mov
pop
pop
mov
and
add
aad
adc
mov
push
jne
adc
loop
das
jbe
iret
pop
cmp
movsl
sub
loopne
sub
xchg
mov
aam
rorl
sub
mov
inc
push
cli
ret
xchg
cmp
adc
cmp
sbb
adc
lods
lods
sub
inc
mov
shrl
sub
mov
fwait
in
mov
loopne
jbe
jo
push
jne
cmp
mov
shr
cmp
sub
mov
sbb
repnz
in
pop
mov
mov
sbb
inc
sub
and
pop
neg
xchg
jae
mov
std
adc
icebp
push
sub
scas
clc
repnz
xor
cld
es
mov
and
adc
mov
inc
fnsave
mov
enter
mov
loopne
cmp
sub
ja
cs
push
or
mov
jle
inc
ja
dec
rcr
add
push
dec
repz
cmp
jne
movl
xchg
mov
pop
xlat
jne
pushf
sub
scas
or
sub
mov
fcompl
mov
rorl
sahf
or
in
cli
pop
sub
arpl
fnstsw
mov
mov
pop
mov
adc
loope
insb
orl
mov
jmp
push
jle
mov
je
mov
xchg
xor
push
adc
push
hlt
scas
lea
ffree
iret
repnz
add
in
mov
xchg
pop
int
mov
icebp
pusha
jbe
test
loopne
mov
sbb
lahf
adc
xor
aam
or
imul
xchg
jg
ljmp
dec
dec
nop
jg
mov
xchg
mov
cmp
lahf
and
xlat
shll
xor
jbe
in
push
xchg
jno
fdivrl
cld
pop
mov
fsubs
jl
pop
cs
mov
je
scas
std
cmc
and
fldcw
xchg
mov
or
mov
out
sbb
stos
gs
aaa
mov
cmpb
push
add
pop
inc
dec
xor
push
pause
push
mov
icebp
inc
sub
inc
jne
lret
or
enter
push
jg
pop
daa
mov
dec
pusha
test
mov
sahf
fwait
gs
xchg
mov
xchg
gs
nop
fbstp
shll
sar
aam
add
shl
mov
cltd
pop
and
rcr
sub
rorl
leave
mov
fwait
xchg
test
push
inc
sub
sbb
sbb
push
push
or
shlb
cmp
fistps
fbld
in
cwtl
fs
mov
int
add
and
les
jmp
imulb
aas
ror
cmp
ret
vhsubps
add
xchg
dec
xchg
out
mov
subl
pop
out
push
sbb
dec
js
adc
push
imul
lods
xor
sub
lods
pop
add
and
enter
in
ljmp
mov
ja
inc
add
out
or
ja
pop
and
cld
add
pop
repnz
addr16
ds
inc
inc
xchg
pop
mov
out
dec
stos
sbb
mov
and
add
fwait
ret
pop
sbb
movsl
cmp
jbe
into
mov
imul
jbe
pop
push
xor
fld
shlb
fs
out
jecxz
xchg
sahf
pop
sti
xor
and
xchg
mov
mov
insl
xor
xor
push
lds
shlb
xchg
xchg
test
imul
sub
push
aas
stc
sti
inc
das
dec
shll
pop
fnstenv
pop
xchg
rcrb
insb
fisubl
inc
ljmp
xor
xor
imul
cmp
mov
inc
js
adc
sub
out
popf
hlt
aam
cmp
fwait
mov
mov
hlt
push
mov
imul
push
mov
rcrl
pop
andl
cltd
mov
mov
xchg
into
add
adc
xlat
push
out
pop
pop
cltd
or
sbb
add
mov
or
lock
sbb
inc
insb
sub
xchg
ret
jmp
repz
cmp
mov
sahf
adcl
aaa
pop
int
repz
xor
jnp
mov
sbb
movsl
clc
mov
out
jle
mov
or
lahf
cltd
mov
and
jne
and
rcl
cmp
mov
sbb
push
ljmp
pusha
jmp
mov
inc
dec
mov
insb
out
out
pop
inc
jg
jg
xchg
fisubl
icebp
push
jl
lods
cmpsl
xchg
add
jmp
ds
cmpsl
fwait
dec
inc
mov
jae
push
je
je
xlat
repz
test
and
ja
sbb
pop
and
mov
mov
or
insb
call
dec
cmp
cmp
cmp
mov
repnz
mov
xchg
push
inc
shll
cmp
xchg
popa
nop
sub
xchg
vmcall
jnp
xchg
sub
lahf
push
aaa
jp
sbb
sbb
inc
fldcw
jo
mov
mov
or
jo
daa
push
mov
fcomps
repnz
mov
jmp
lds
test
lds
xchg
nop
add
push
jne
mov
push
les
pushl
lods
mov
push
scas
cmp
in
lret
xor
les
mov
mov
test
dec
test
mov
imul
lahf
test
mov
push
push
cmp
cmp
add
mov
cmp
or
mov
outsb
pop
dec
das
adc
les
pop
add
sbb
cmp
stos
mov
icebp
jo
and
xchg
pop
dec
sub
and
fwait
xchg
loope
adc
lods
mov
jbe
pop
out
sub
loop
sub
in
insl
mov
cmp
cmp
add
mov
test
sbb
add
das
cmc
jo
roll
jg
inc
lret
sub
xor
inc
jnp
pcmpgtw
sbb
arpl
push
insl
inc
lcall
adcl
inc
jge
call
push
push
and
pop
and
sub
loop
stos
ja
fs
sbb
and
call
iret
mov
push
inc
jecxz
insb
add
popa
cmpsl
fstps
cmp
xorb
cmp
xor
jp
push
stos
xchg
hlt
aad
jne
push
xor
jo
inc
lea
mov
hlt
cld
fldl2t
push
inc
hlt
addr16
les
das
mov
inc
insb
orl
ss
mov
in
jo
fdivrs
and
cmp
mov
push
bound
sbb
into
xor
out
xchg
push
or
add
inc
and
push
jb
xor
pop
lahf
fcoml
mov
sbb
push
mov
sub
adc
sbb
popa
stos
daa
or
sub
adc
inc
arpl
push
push
call
subb
call
stos
hlt
adc
jg
ror
and
mov
jge
shrb
jbe
jne
dec
inc
sbb
jne
xchg
shr
jg
mov
mov
iret
xchg
bsr
shl
add
adc
xchg
sub
xchg
add
das
gs
sbbb
xor
dec
add
lods
les
movsl
sarl
es
and
add
popa
mov
sbb
jbe
sub
nop
push
inc
in
dec
or
jl
mov
jg
lock
dec
popa
rorb
fisubrs
xor
les
adc
ret
or
fcomps
loop
xchg
jbe
js
cmp
push
les
out
ljmp
sub
lahf
loopne
addl
gs
jg
inc
leave
add
jne
shlb
mov
mov
sti
inc
xor
push
dec
pop
or
ljmp
inc
shl
sub
inc
andl
push
das
or
stc
pop
aad
ret
push
mov
sbb
hlt
mov
sbb
xchg
leave
ja
aad
xlat
jp
and
mov
inc
mov
stos
push
push
mov
pop
stos
or
push
in
push
gs
int3
push
negb
imul
test
out
aas
xor
inc
inc
dec
ds
dec
or
aas
push
cmpsl
sti
push
mov
mov
fidivrl
and
xchg
fwait
je
sbb
insl
fcompl
fcomip
movsb
repnz
pop
repz
leave
rcrb
je
mov
dec
mov
mov
movsl
ss
inc
aaa
sahf
clc
fwait
sbb
and
rcll
sub
push
push
mov
imul
or
xor
loopne
add
ds
push
inc
sub
xchg
xchg
in
xchg
cmp
std
mov
enter
inc
sbb
pop
ja
shll
pop
xor
xor
mov
jo
push
and
out
hlt
jl
shl
leave
cmc
es
jecxz
dec
fsubs
fidivrl
mov
outsb
jbe
push
cwtl
lds
fbstp
jae
out
jnp
cmp
adcb
movsl
push
sub
loope
inc
pop
outsl
popf
jbe
inc
mov
je
mov
sbb
mov
xchg
scas
push
loop
mov
or
pop
mov
into
int3
mov
rcr
xchg
rcrl
rcll
xchg
dec
test
mov
push
sub
mov
in
add
outsb
fldcw
xlat
adc
in
insb
jp
mov
lock
out
outsb
jb
xorl
push
js
mov
daa
rcll
lcall
sub
xchg
adc
adc
call
mov
daa
xor
faddp
outsl
test
fnstcw
test
push
js
mov
outsl
pushf
adc
enter
out
loope
imull
sbb
lds
sbb
and
push
ds
fcoml
imul
adc
imul
jge
cmp
mov
movsb
xorl
sub
cli
mov
lods
inc
xchg
lea
fsub
ja
sti
bnd
sbb
in
into
or
and
xchg
jle
cli
pop
push
xorb
ljmp
fbstp
iret
sub
data16
add
sub
xchg
ret
mov
push
rolb
and
aad
inc
inc
mov
and
cmp
sbb
out
mov
daa
adc
test
lock
stos
lret
fdiv
push
out
outsl
rclb
push
mov
rcl
rclb
mov
pop
mov
outsb
aad
adc
shl
addb
mov
and
pop
push
dec
sbb
sahf
dec
sbb
test
pop
or
out
sub
ja
inc
ljmp
sub
push
dec
aas
mov
loopne
or
int
mov
fs
sub
push
rolb
dec
adc
out
push
mov
call
sbb
push
lock
xchg
dec
or
fadds
pop
pop
sbb
arpl
into
call
dec
jo
paddq
aad
mov
shrb
inc
xlat
popf
popf
js
dec
pop
add
sub
loopne
cmp
xor
icebp
xchg
popa
dec
add
jb
sub
jo
push
addr16
pop
lret
sti
shll
inc
sbb
repnz
fimull
cmp
ljmp
xchg
out
adc
mov
add
mov
mov
sarl
int
fwait
nop
and
push
xchg
rol
mov
pop
and
pop
decl
cld
or
decl
dec
pop
aaa
outsb
add
sahf
stc
test
std
push
adc
xchg
and
sub
aam
pop
mov
rcrl
xchg
pop
out
xchg
xchg
jmp
sbb
xchg
dec
aam
adc
leave
pop
adc
stos
lret
pop
lds
xchg
cmc
nop
test
int
loop
add
fiadds
mov
out
fstpl
in
xorb
and
cmpsl
jno
sbb
xchg
dec
pushf
mov
adc
cmpsb
and
xchg
bound
cmpsb
and
push
outsl
jnp
add
push
scas
aam
mov
or
push
cmc
loope
fwait
mov
stc
cmp
xchg
or
arpl
pop
ror
mov
xchg
jo
mov
jnp
hlt
fucomp
popa
js
xor
ljmp
addr16
pushf
cmpsb
test
push
popa
in
sti
sub
adc
and
dec
out
pushf
icebp
jle
ficompl
nop
push
sbb
xchg
je
cltd
repnz
insl
jle
shl
add
and
xchg
and
pop
mov
sbb
sbb
dec
push
setb
lods
adcb
jmp
fsqrt
lock
jmp
push
pop
pop
test
int3
cmp
mov
jmp
push
idivl
stc
add
shr
jmp
outsl
or
adc
test
fisubl
fnstcw
into
pusha
inc
cmp
lods
imul
pop
pop
add
adc
xor
in
ss
sbb
rep
out
popa
mov
mov
dec
mov
dec
mov
adc
lea
mov
insb
jb
inc
adc
insl
pop
sub
sahf
adc
adc
xor
lods
shl
sbb
cmp
aam
jae
out
hlt
lret
push
les
pop
je
push
cmp
jg
test
clc
pop
pop
mov
inc
dec
jno
stc
ds
sbb
mov
ss
or
inc
frstor
stos
iret
lods
or
jmp
push
jle
jp
and
xor
push
fstps
jle
stc
lahf
ss
mov
xlat
mov
lret
fiaddl
stc
push
imul
je
mov
in
test
arpl
pop
das
icebp
xor
cmp
and
mov
mov
idivl
aam
ud1
or
test
xchg
mov
roll
xor
sbb
jmp
fwait
mov
and
popa
mov
mov
add
add
ss
add
fnstcw
adc
or
and
or
sbb
jae
lahf
push
push
xorl
inc
xlat
inc
or
add
jnp
stos
jo
and
and
jo
leave
xor
xchg
sub
lcall
cmp
push
sub
negb
fdivp
push
xor
andl
cmp
xor
adc
daa
mov
test
pop
jne
pop
out
mov
ljmp
fstpt
mov
cmp
dec
rorb
pop
int
orb
ja
insb
and
mov
or
cli
cmp
rcll
cmp
cmpl
stos
lods
subl
push
xchg
inc
push
fildll
xor
das
jge
jp
jl
lret
scas
call
call
xchg
push
adc
xor
aad
add
push
scas
out
negl
out
fs
addr16
ljmp
enter
pop
push
jnp
or
dec
fwait
mov
sahf
sbb
lea
imul
pop
xchg
dec
repnz
repnz
repz
or
test
mov
loop
cs
inc
in
push
xchg
nop
pop
inc
nop
fcmovnu
dec
insb
stos
mov
aam
fcmovb
arpl
ret
and
fisubl
insl
inc
lock
xchg
mov
iret
cmp
push
or
int
mov
nop
bound
and
push
ss
sbb
mov
cld
cmpsb
or
cmp
push
push
incb
jp
inc
push
jl
stc
lret
lret
rcrb
jbe
adc
cld
mov
scas
and
mov
jo
stos
push
fsubs
in
ljmp
sahf
sbb
inc
notl
imul
pop
scas
mov
in
jbe
out
es
notl
ds
ds
scas
out
es
sbb
jne
push
add
aaa
jle
xlat
fiadds
mov
enter
mov
cmp
xor
xor
mov
andl
push
pusha
jbe
xchg
inc
inc
add
into
stos
outsl
mov
cmp
test
mov
jge
xchg
dec
adc
lock
mov
out
cwtl
lock
out
lahf
pop
dec
jno
std
xchg
sub
cmp
cmp
or
stc
push
mov
in
jno
and
or
pop
test
and
lock
rcrl
jae
push
adc
add
add
in
jne
and
sbb
popf
out
xchg
cmp
or
stos
mov
or
add
into
adc
xor
sahf
and
push
pop
mov
dec
jmp
and
pop
lock
inc
repz
lds
lret
xor
or
std
mov
lret
push
jle
mov
addl
ret
leavew
push
push
addr16
sub
lret
cs
stc
imul
in
mov
jae
push
popa
add
sti
hlt
add
jge
in
cmpsl
add
jo
pop
push
inc
dec
btcl
and
inc
ret
adc
mov
jl
lret
xlat
or
mov
loope
sub
fcmovne
lock
adcb
cmp
pushf
jo
mov
enter
scas
jns
or
fwait
es
xor
addr16
and
pop
rcll
push
in
aad
in
aam
popl
test
pop
push
mov
js
int
push
fisttpll
fld
mov
xchg
jecxz
lods
out
pop
mov
or
mov
mov
cli
mov
xor
dec
fiadds
xchg
cmp
push
xorb
xchg
jecxz
cmc
xor
push
mov
sub
and
stc
or
inc
mov
sbb
aad
and
repnz
mov
mov
pop
mov
cmp
push
jb
mov
aad
js
or
mov
nop
aad
pop
les
push
ret
sbb
popa
cmpsl
imull
adc
shll
sub
lret
cld
sti
and
inc
fnstsw
dec
and
jne
jmp
jb
stos
lock
mov
fmulp
cld
xchg
inc
sub
int3
iret
inc
inc
cmp
popa
test
push
add
adc
sahf
adc
aaa
fistl
xchg
dec
mov
test
mov
and
mov
add
mov
pop
push
sub
inc
loopne
arpl
lods
mov
xor
js
sahf
pop
jbe
push
sbb
push
addr16
call
lcall
sub
fisubs
push
imul
jbe
xchg
in
inc
mov
test
icebp
and
imul
rcrl
fnstenv
test
xchg
sub
in
popf
push
sbb
jno
ret
mov
sub
or
push
push
lds
sahf
adc
imul
and
jecxz
mov
dec
int
add
sbb
pop
mov
pop
dec
ffree
or
fsts
cmp
repz
fisubrl
xchg
ret
xchg
push
push
call
cld
test
loopne
repnz
and
push
xchg
es
mov
pop
push
cli
jns
daa
aas
sbb
push
or
mov
mov
sbb
lret
dec
fcoml
sub
rcll
notl
mov
daa
std
lds
sahf
jle
jno
or
xor
mov
shll
test
lock
imul
xchg
out
nop
or
cwtl
xchg
mov
ds
cmp
je
pushf
lret
negl
mov
adc
les
enter
lock
fcomp
sbb
orb
gs
test
push
sbb
jge
xor
cmp
pop
out
pushl
pop
jmp
dec
mov
outsl
mov
nop
push
mov
aad
pop
or
or
lea
jno
daa
push
stc
scas
jle
das
push
adc
and
or
outsb
repz
sub
pop
jg
adc
repz
pop
enter
test
xchg
jns
jno
je
and
pop
insb
sahf
xorl
mov
or
shlb
imul
dec
push
gs
shl
jg
jecxz
xchg
enter
std
cmp
jae
add
fisubrl
daa
push
sub
test
xchg
mov
or
jno
ds
adc
out
loop
mov
repz
jl
sbb
or
aas
cwtl
pop
xchg
sbb
mov
inc
adcb
push
dec
mul
and
xchg
lock
mov
popf
mov
ljmp
inc
mov
neg
loop
jecxz
adc
jge
popf
jae
insb
jle
adc
inc
lcall
mov
xchg
adc
in
add
jp
inc
and
ret
xchg
xor
adc
aam
flds
pop
iret
es
out
icebp
pop
jnp
sub
pop
dec
outsl
mov
idiv
fstpt
rorl
mov
xchg
xor
fnstsw
scas
popa
bsf
lds
pop
xchg
lods
fisttps
inc
dec
jmp
mov
jne
pop
push
aaa
xorl
jge
cmp
inc
cmp
lock
in
jns
ret
ret
adcb
sbb
idiv
xor
and
in
mov
mov
xor
or
or
mov
push
xor
inc
cmpsl
mov
cmpb
jle
int
gs
fiaddl
mov
xchg
lret
in
jmp
lds
sbb
mov
push
mov
jne
lcall
int3
push
in
push
scas
sbb
push
jecxz
scas
int
add
jmp
iret
push
in
add
mov
lcall
movsb
imul
lcall
or
sub
cli
lret
cs
inc
xchg
and
scas
movsb
sbb
fnstenv
rolb
lds
push
insl
add
jns
jmp
and
push
xchg
xchg
mov
stos
adc
pop
sub
aad
and
or
jp
out
arpl
lcall
fistps
sbb
inc
clc
or
mov
lahf
arpl
sahf
mov
bound
jp
cltd
jb
lcall
sahf
mov
mov
ljmp
adc
enter
sub
test
jmp
pop
xor
mov
sub
ret
xchg
mov
pushf
mov
out
insl
xor
icebp
data16
out
jg
sbb
fnsave
orl
loope
inc
in
neg
ja
pushf
dec
test
icebp
and
lea
push
xchg
repnz
jns
xchg
test
ss
dec
scas
dec
cli
js
adc
outsb
cld
xor
inc
ret
and
mov
sbb
push
pop
sbb
push
ja
loope
and
call
or
sub
cmp
lds
xchg
inc
stc
lahf
jns
add
lret
fistpll
hlt
fs
icebp
outsb
paddd
vcvtsd2si
push
or
adc
cmp
pop
mov
cmp
mov
mov
push
in
push
loopne
sbb
bound
out
push
sbb
cmp
push
std
sbb
dec
xchg
push
jns
or
pop
enter
popa
out
sub
cmp
cmp
repz
add
inc
mov
inc
arpl
push
repz
imul
pop
sbb
mov
push
pop
je
sub
push
push
das
inc
rolb
cmp
stc
jge
cmpsl
and
sub
test
xchg
and
inc
cli
mov
enter
sahf
push
dec
or
or
cmp
fs
adc
mov
pop
cmp
or
movsl
mov
fildll
aam
dec
jp
sbb
jmp
test
and
mov
lock
pop
lcall
mov
cmp
rclb
dec
adc
fcoms
mov
test
push
push
dec
adc
mov
cmp
imul
and
mov
mov
je
push
and
cltd
aaa
and
dec
mov
or
pop
pop
lods
dec
cltd
dec
or
mov
sbbl
xchg
shlb
sbb
js
lret
sub
fs
clc
movsb
insl
shrb
jne
jo
jo
mov
mov
jb
mov
jmp
adc
mov
mov
cmp
and
dec
and
cmc
aaa
push
sbb
pop
lret
adc
sarb
cld
inc
dec
push
mov
jl
or
pop
insb
test
sub
inc
jno
lea
in
cmp
mov
xlat
sub
test
in
inc
jmp
fldt
shll
in
xchg
js
lea
sti
mov
popfw
sbb
shll
lods
aad
pop
adc
adc
mov
sbb
lahf
jmp
adc
mov
shrl
sarb
sahf
sbb
jg
fsub
rolb
mov
mov
mov
cmpsl
aas
xlat
test
xor
shll
or
inc
jg
bound
inc
push
enter
sbb
addr16
fnstcw
add
add
and
cli
push
xor
mov
pushf
mov
iret
mov
xor
pop
mov
jg
jo
dec
pop
mov
cmp
cmp
push
lock
mov
mov
mov
or
popa
imul
xor
in
cli
xchg
adc
inc
int3
in
inc
mov
push
icebp
inc
lcall
adc
mov
sbb
sbb
mov
sub
mov
int
mul
adc
pushf
sub
cmpsb
inc
mov
por
or
pop
cmp
mov
mov
in
push
rolb
repz
jo
jge
in
fistpll
mov
jl
jmp
or
dec
jnp
mov
push
inc
push
push
movsl
mov
sbb
jnp
push
rcll
xlat
movsl
lahf
test
test
popf
jns
stc
jns
ret
lcall
in
mov
mov
and
jle
mov
mov
aaa
inc
inc
jle
push
xor
mov
xor
sti
jo
loop
xor
adc
adc
jl
into
mov
sbb
daa
jae
roll
add
and
loopne
mov
int3
bound
cs
sti
sahf
and
sar
jge
insb
sub
fsubrl
rclb
aad
insb
and
mov
fnstenv
xor
jns
pop
ficoml
jne
pop
movsb
pop
mov
orb
nop
loopne
jno
andl
push
out
cli
out
mov
cltd
mov
movsl
frstor
mov
pop
in
addb
push
pusha
lock
jg
mov
xchg
enter
mov
xor
mov
cmp
enter
xor
stos
stc
fdivl
shlb
outsl
mov
jle
push
insb
sub
stc
jb
popf
inc
mov
add
sbb
and
mov
sbb
pusha
jp
repz
mov
push
push
sub
jecxz
add
mov
mov
repnz
cmp
pop
adc
addr16
roll
jmp
rorl
ror
or
jno
pop
push
sarl
out
aad
movsb
arpl
repnz
mov
sub
incl
and
lock
addb
adc
sbb
adc
and
dec
add
jg
and
cltd
cmp
movsl
orl
xchg
and
lea
hlt
sti
pop
jmp
dec
les
push
mov
add
cmpsl
outsl
fisubrs
mov
xor
jge
fsubp
roll
test
pop
xor
aaa
push
inc
push
inc
jbe
rcrl
jmp
fucom
sbb
leave
jge
xchg
add
sbb
push
shrl
negb
xchg
add
jnp
push
mov
sub
dec
icebp
inc
fucompp
add
inc
sbb
scas
mov
adc
and
sbb
int
mov
cmp
or
daa
fndisi(8087
ljmp
cmp
scas
fldt
mov
popa
jbe
adc
jmp
or
mov
pusha
dec
adc
push
mov
mov
cli
cmpsb
lcall
sub
out
pop
into
inc
addr16
xlat
arpl
cmp
mov
in
fstpl
psubw
ja
push
test
cmpsl
out
or
push
dec
push
mov
mov
repz
push
cmpsl
pop
sti
cwtl
out
or
xchg
pop
xorb
xor
pop
dec
data16
jb
lods
fistps
pop
pop
rorb
sbb
mull
shll
adc
jbe
inc
jae
fistl
push
jg
bnd
jmp
push
data16
movsb
fldt
ss
fbld
inc
and
dec
pop
cli
cs
insb
inc
jbe
xlat
insl
mov
xor
and
das
sub
xor
cltd
es
loop
pop
insb
mov
addr16
xor
xor
inc
clc
movsb
call
add
aam
pop
xchg
mov
mov
arpl
fmul
push
popf
fwait
enter
cmp
push
push
fcoml
imul
mov
mov
mov
je
dec
cs
mov
ret
pop
mov
and
cmp
ret
pop
std
dec
sbbl
outsb
cmp
cltd
shll
sbb
mov
stc
mov
inc
lahf
adc
loopne
je
repz
aad
inc
lret
inc
lahf
push
addr16
jl
fldl
xchg
mov
ret
mov
mov
push
lret
xchg
stos
sbb
xor
outsl
ds
sti
dec
out
pop
movsl
loop
xor
and
insb
cli
or
mov
push
pop
sarb
push
pop
fs
lock
cmp
mov
add
call
mov
add
xchg
pop
xor
push
das
push
outsb
push
inc
loope
inc
std
mov
insl
and
out
out
jnp
scas
testl
mov
mov
push
or
out
inc
xor
xlat
pop
jp,pn
mov
mov
xchg
jo
add
divl
in
pop
push
mov
out
ja
cmpsl
cmc
jne
inc
nop
je
movsl
andl
decl
ja
outsl
and
add
lea
mov
imul
mov
fwait
and
movsb
jmp
jp
pop
ljmp
pop
dec
inc
fidivrs
push
dec
sbbl
adc
ljmp
xchg
mov
jns
push
xor
in
outsb
aam
cmpsb
xchg
arpl
add
hlt
test
jmp
movsb
in
pop
push
shrd
test
sub
mov
inc
lahf
mov
jge
ljmp
mov
mov
adc
sub
mov
xor
call
inc
loope
jb
pop
xchg
dec
xor
movsb
jns
and
xor
cld
in
mov
call
and
cmp
pop
gs
fnsave
lret
add
lods
out
mov
and
pop
fxch
inc
adc
dec
cmc
mov
out
aaa
movsl
mov
cmpsb
sub
lret
pop
test
adc
push
adc
incb
negl
test
pop
mov
sahf
inc
lock
pushl
mov
xor
pushf
pop
imul
fwait
inc
xchg
icebp
mov
subl
mov
lods
xchg
mov
mov
xor
push
ljmp
stc
fsubrl
scas
rclb
iret
into
xchg
sub
cmp
rdpmc
mov
imul
movsb
add
mov
pusha
add
jmp
imul
adc
mov
into
pop
mov
xorb
cwtl
adc
shr
imul
mov
ret
pop
lret
adc
xchg
cmp
xchg
xlat
gs
sbb
mov
xor
cli
pop
mov
lods
jge
ret
pop
mov
loope
jl
pop
mov
bound
xchg
jnp
push
outsb
xchg
seta
xchg
fwait
xor
ljmp
sbb
cmp
pop
shlb
adc
jge
int
xor
loopne
scas
mov
jp
mov
xchg
rcrl
nop
fisttpll
jle
rcrl
fwait
or
mov
icebp
push
es
fwait
hlt
test
rolb
push
dec
repnz
add
push
outsl
xchg
xchg
sbb
xor
and
pop
xchg
xor
cwtl
out
jne
testb
stc
mov
shlb
aas
dec
aam
cmp
adc
xor
stos
jg
mov
icebp
cmp
rorb
int
addl
cli
push
sub
les
negl
xchg
aas
xchg
ja
xchg
lock
cmp
inc
add
dec
pushf
mov
stos
pop
inc
mov
addr16
mov
adc
pusha
jae
subl
repz
into
stos
xchg
inc
push
jno
loop
dec
cmpsl
xor
mov
enter
push
andb
stos
mull
fcmovnu
mov
movsl
fdivl
in
and
lods
push
test
stos
inc
cmp
out
jb
lds
cs
filds
ds
cmpsl
fisubrs
cmp
inc
adc
ss
call
mov
pushf
movsl
je
or
test
push
xchg
sub
imul
rclb
int
mov
mov
jo
sub
insl
popf
push
in
ret
nop
sbb
sub
orl
inc
mull
xchg
scas
jecxz
pop
add
sub
or
add
jle
and
dec
scas
xor
fists
and
xor
xchg
or
stc
into
in
inc
pop
and
in
fsubr
dec
cltd
loop
dec
dec
push
pop
inc
cmp
ds
loope
xor
lea
psrld
pop
xor
mov
imul
add
dec
cmp
mov
lock
mov
mov
sar
sbb
xchg
call
nop
push
sbb
mov
add
fs
cmp
add
pop
add
jle
xchg
test
push
and
fnstcw
mov
jp
jl
movsl
cmp
adc
cmp
iret
push
xbegin
leave
sbb
clc
and
sub
inc
mov
mov
bound
into
mov
push
das
cmp
mov
rcr
ret
sub
ds
cli
fldcw
je
add
sub
pop
in
leave
fs
sub
xor
les
rolb
hlt
in
mov
andb
mov
lds
mov
push
and
cmpsl
adc
cmp
push
pop
cmp
mov
mov
movsb
lcall
push
push
push
add
test
xchg
mov
mov
ret
push
in
ja
test
cs
push
mov
and
movsb
clc
js
aaa
xchg
pop
push
xor
xchg
ret
lods
mov
pop
daa
jecxz
add
pushl
scas
xor
aad
add
sub
inc
xor
dec
inc
xor
call
jb
add
push
dec
mov
adc
cltd
push
inc
mov
fisttpll
push
cmpsl
les
movsl
jle
pop
stos
cmp
test
fbld
sub
sub
popf
adc
hlt
inc
inc
cmp
dec
bound
nop
into
cmpsb
inc
jg
adc
jl
dec
shr
dec
adc
pusha
out
or
lds
ja
adc
cmc
cmp
movsb
xor
sub
dec
mov
push
jbe
popf
pop
fwait
push
fwait
arpl
push
jmp
sbb
sub
adc
xchg
dec
repnz
jg
push
xor
js
arpl
mov
std
pop
dec
lret
xchg
cmpsb
mov
jecxz
or
test
push
jb
aad
inc
test
loopne
jno
pop
and
jecxz
rclb
add
into
sub
mov
or
gs
or
pop
cld
push
fsubl
fiaddl
das
test
inc
and
mov
jb
push
fwait
xchg
or
scas
cs
sbb
iret
add
out
cmpsb
push
fcompl
fwait
and
clc
icebp
xor
or
stos
xor
jl
pop
add
mov
dec
pop
imul
adc
mov
divb
inc
pop
jae
push
orb
add
orl
jle
dec
lret
xchg
jnp
pop
insb
pushw
insl
mov
xor
cmp
add
jmp
int
sbb
or
jl
cmp
dec
adc
movsb
xchg
push
sbb
dec
lahf
cmp
pop
scas
insl
mov
cmp
fmuls
int3
mov
cmp
popa
mov
mov
pop
ljmp
loop
test
cmp
sub
in
mov
loope
inc
sub
pop
add
push
inc
fbld
push
inc
inc
pop
jle
xor
adc
outsl
push
inc
push
or
xchg
or
inc
fildl
in
dec
lock
roll
pop
loop
arpl
inc
jmp
add
in
pop
inc
dec
mov
lods
sbb
or
mov
pop
jge
dec
mov
in
pop
mov
stos
test
pop
push
cs
jo
stos
xor
adc
cmp
call
xchg
sbb
mov
xchg
dec
leave
mov
cwtl
jbe
in
sub
mov
cltd
cs
bound
enter
rorb
add
push
pop
xchg
setl
sub
mov
jecxz
fsubs
mov
jge
lds
popa
loope
test
pop
leave
mov
in
movl
mov
add
push
and
xchg
iret
pop
insb
cmp
push
fiaddl
ljmp
inc
aam
push
push
arpl
mov
mov
adc
push
idivb
xor
inc
and
fiadds
push
or
movsb
sub
xchg
add
adc
pop
outsl
jo
mov
or
sahf
sysexit
insb
outsl
add
icebp
and
push
stos
ret
loopne
ret
xor
cltd
mov
adc
mov
add
jo
mov
pop
iret
daa
in
pop
loope
and
push
push
out
mov
xor
ficoml
divb
jbe
call
sbb
pop
pop
int3
jecxz
ds
leave
sti
dec
adc
pushf
dec
inc
shlb
in
test
out
xchg
jo
adc
sub
mov
scas
jge
sub
stos
xchg
cmp
insb
scas
xor
dec
mov
dec
adc
xor
leave
pop
or
fwait
xor
add
or
mov
das
sbb
mov
mov
ja
dec
pop
aaa
mov
mov
out
jns
xor
jb
test
mov
mov
xor
xor
mov
lds
or
add
arpl
xlat
lea
cmp
jbe
mov
cmp
fs
sub
les
test
sahf
dec
add
int3
scas
repnz
imul
cmp
and
or
mov
adc
mov
sbb
std
testl
sbb
test
cmp
inc
adc
jbe
mov
enter
adc
cld
pop
nop
and
cmp
sub
mov
lock
xor
sub
sarb
dec
xor
out
cld
arpl
popf
sbb
adc
fldt
or
test
push
fcmovbe
xchg
mov
mov
jo
fs
les
jmp
add
cmp
mov
std
jecxz
sub
leave
cmp
and
cmp
adc
addr16
imul
cmp
add
sub
add
xchg
add
js
mov
test
xor
fldlg2
aaa
sub
ret
shlb
xlat
shrb
int3
int
fistpl
jns
sub
outsl
insl
hlt
fdivrs
add
jnp
pop
push
test
sub
lea
fdivrs
stos
popf
push
sub
jnp
mov
scas
push
jle
insb
jnp
mov
sub
iret
loope
in
push
dec
xchg
imul
lahf
sbb
lcall
cmpsl
sbb
or
jnp,pt
arpl
mov
push
in
sbbb
jb
rolb
outsl
mov
jmp
pop
jmp
test
mov
mov
push
dec
mov
popa
dec
in
pop
add
jecxz
jmp
jle
aad
cmpsb
pop
rcll
outsb
xchg
push
adc
fstps
pop
clc
pushf
lahf
repz
or
dec
mov
stos
mov
stos
lret
dec
dec
xchg
nop
mov
shl
rorb
mov
enter
pop
cmp
xchg
jecxz
loopne
pop
mov
adc
movsb
push
add
cmp
mov
cmp
jl
leave
pop
jb
cmp
pop
push
jb
mov
movsb
stc
pop
and
cmp
ret
jecxz
jp
nop
add
fstps
mov
test
popa
cmp
jbe
test
mov
mov
int3
adc
lods
sub
xor
mov
or
arpl
pop
sub
mov
je
dec
push
lods
imul
ds
in
dec
dec
outsb
sbb
fwait
ror
es
lds
in
xchg
mov
inc
mov
inc
dec
xchg
clc
les
mov
pop
fimull
or
cmpsl
adc
rcrl
lcall
mov
and
ret
fidivrs
popa
stos
rorb
push
test
mov
outsl
cmp
and
sub
lahf
cmp
rolb
stos
adc
jo
mov
test
xchg
sbb
data16
shrb
inc
addb
adc
sub
inc
mov
mov
push
mov
mov
inc
inc
cmpsb
sarl
clc
inc
inc
arpl
les
mov
stos
jbe
or
push
mov
push
sbb
stc
add
jae
pop
xchg
scas
add
lcall
mov
sbb
mov
popf
sarl
inc
mov
xchg
mov
rol
cli
nop
xor
dec
lock
out
xchg
cmpsb
ljmp
push
les
lods
imul
xchg
jno
xchg
xor
hlt
mov
cmc
call
aaa
or
mov
inc
lret
addb
pop
out
psllq
cwtl
xchg
cli
movsb
xor
repz
pop
add
pop
fnstsw
fistpl
js
jl
and
and
shll
nop
cmp
cmp
pop
and
enter
mov
jbe
je
or
adc
div
add
lea
out
xchg
push
ja
fldenv
inc
adc
xor
sti
sub
and
xor
shlb
stos
push
dec
push
push
pop
adc
loop
cmp
das
cmpl
bound
mov
std
mov
scas
ss
sub
insb
lcall
xor
xchg
outsb
clc
enter
in
mov
dec
sti
pop
mov
jg
repz
shrl
or
out
jnp
std
out
pop
cmp
or
enter
pop
int3
imul
out
xor
or
movsb
xor
mov
icebp
rorb
jno
es
mov
testl
or
rep
into
mov
cmp
in
scas
cltd
popa
mov
lret
in
popf
fisubrs
neg
adc
add
fisubrl
jns
push
push
fdivl
adc
pop
push
jb
mov
dec
shlb
jne
and
cmp
pop
fisubrl
lcall
ss
adc
orl
jbe
ljmp
lods
inc
mov
test
ljmp
jge
sub
adc
xchg
test
arpl
enter
xchg
ja
xor
inc
mov
add
sbb
add
jns
leave
pop
in
add
adc
mov
mov
mov
xchg
mov
gs
or
xchg
fwait
mov
and
xchg
push
pop
pop
lret
xor
add
ret
movsl
cld
ja
bnd
insb
jmp
imul
in
negl
mov
in
into
dec
imul
xchg
push
push
add
stos
nop
fldl
xor
cli
lret
sbb
add
je
cs
lea
lods
mov
jnp
mov
cmpsl
inc
mov
hlt
les
insl
xorl
dec
inc
pop
xchg
push
aaa
mov
add
dec
sbb
lret
pop
aaa
pop
test
pop
sbb
inc
mov
enter
or
xchg
imul
push
sbb
das
xchg
in
xor
xorb
inc
in
outsb
cmp
and
mov
rclb
and
out
aaa
stos
out
sub
xorb
pop
sub
push
pop
ljmp
jp
sub
cmpsl
es
movsb
int
dec
aad
inc
xchg
adc
mov
repz
shrl
push
xchg
xchg
mov
xchg
add
jae
mov
cli
jbe
or
call
aaa
subl
movsl
or
and
in
popf
jb
stos
loop
bnd
xor
fbstp
dec
or
inc
inc
inc
push
xor
imul
enter
cmp
push
out
sarb
and
ficomps
pushf
or
js
xor
jno
outsb
out
enter
fucomip
and
lcall
insl
xchg
jge
mov
imul
xor
dec
inc
scas
pop
and
loop
sbb
addr16
jecxz
inc
inc
mov
pop
ret
test
xchg
call
out
sub
in
cld
cmp
test
cmp
shl
cmp
movl
and
stos
inc
inc
in
jg
call
cmp
fst
xchg
sub
mov
adc
in
cwtl
rorl
ret
jecxz
gs
mov
test
ret
mov
mov
clc
xor
add
lahf
imul
es
cltd
add
jae
ljmp
std
add
or
ss
int
cmp
fidivrl
hlt
movsb
add
mov
pop
lcall
sub
in
or
ljmp
push
mov
or
into
sbb
lcall
jnp
dec
nop
xchg
pop
test
push
xchg
pop
outsb
xlat
int
popf
pop
syscall
add
mov
stc
fcomps
in
enter
scas
xor
mov
sub
stc
or
jp
push
popf
orb
mov
lods
lods
and
out
arpl
jbe
sub
and
lock
bound
enter
and
push
mov
divl
jae
dec
insb
push
jg
fmuls
sarl
nop
sub
mov
fisttpll
imul
popf
sub
std
and
out
add
divb
shrl
jns
pusha
mov
daa
mov
daa
xchg
dec
loope
sbb
and
fistl
cltd
adc
icebp
adc
adc
mov
rclb
negl
pop
sbb
push
enter
xchg
mov
outsb
mov
test
out
addr16
popa
jmp
addr16
movsl
pop
add
dec
imul
or
add
jo
adc
in
test
rolb
popl
pop
scas
outsb
push
mov
dec
loopnew
mov
push
cld
push
in
lahf
ljmp
push
adc
imul
mov
cwtl
movsl
push
mov
imul
loop
mov
pop
sti
sbb
cmp
jno
fisubs
mov
dec
mov
dec
fwait
mov
mov
iret
add
arpl
enter
test
test
cs
mov
adc
add
inc
xor
test
mov
add
add
jne
sbb
cli
mov
fwait
stc
and
inc
ret
out
adc
xchg
inc
movsl
sbb
and
and
sbb
jns,pn
and
mov
in
adc
repz
shr
sbb
sub
push
sbb
push
popf
cmp
cmp
fidivrl
into
psubusb
push
adc
jle
and
add
sarl
add
stos
lds
movsl
cmp
dec
inc
dec
push
inc
stc
or
iret
push
in
pusha
sub
lea
push
mov
pop
rcr
sbb
cltd
sti
stc
aad
pop
imul
inc
push
test
int
lcall
adc
test
xchg
cmc
and
mov
dec
inc
enter
pushf
sbb
jp
call
mov
or
jnp
mov
int
mov
fstps
loope
mov
fstl
lret
insb
push
mov
jg
test
jge
or
xor
pop
popa
xor
and
loopne
add
pop
mov
xor
enter
das
rorb
push
test
ret
aad
pushf
scas
std
decb
mov
lret
movb
pushf
in
ret
cmpsb
lods
mov
les
mov
sbb
data16
scas
jp
xchg
sti
mov
aaa
cmpsb
into
pop
ss
lods
imul
adc
or
sub
cmp
mov
roll
mov
jo
adc
inc
mov
fs
mov
inc
cmp
pop
adc
repnz
adc
dec
jbe
in
mov
jbe
xlat
pop
sbb
out
sub
call
mov
mull
lret
pop
mov
stmxcsr
loope
jae
rorb
in
inc
cmp
inc
stos
sub
mov
out
sbb
pop
in
test
sbb
mov
adc
sub
aam
cli
sahf
inc
lahf
inc
dec
jmp
and
idivl
jg
adc
push
insl
push
das
dec
xor
cmp
outsb
xorb
lods
and
test
lock
scas
cmpsb
mov
xchg
adc
cmp
test
xor
repz
test
icebp
mov
jg
fcomp
mov
in
and
pop
aam
jg
es
xchg
ret
aad
xor
ret
cmp
push
mov
pushf
fisttpl
popf
aam
lods
cmpsb
push
sbb
mov
dec
mov
xor
adc
sbb
sbb
int
jb
lds
inc
push
xor
shlb
add
inc
das
push
push
and
cltd
xor
push
jnp
cmp
cmpsl
push
jnp
dec
xchg
in
or
cmpsb
loope
je
add
xchg
int3
push
test
xor
xchg
xor
dec
cmp
mov
fisubs
mov
cmpsb
or
mov
or
jne
cmpsb
jge
inc
and
add
push
sarb
and
loop
je
insb
mov
inc
shrb
mov
pusha
call
test
push
sbb
cld
xchg
scas
add
and
pop
es
jnp
sub
fwait
das
pushf
outsl
push
cld
xor
pop
cmp
lock
push
cmp
mov
je
sub
inc
lcall
push
mov
bound
mov
lock
movsb
dec
std
sbb
lods
stc
pop
sub
std
pop
jp
mov
cmpl
adc
inc
out
mov
add
mov
inc
lahf
sbb
mov
cld
nopl
sbb
mov
aad
xor
sbb
xchg
stc
pop
and
jmp
daa
mov
add
aam
aad
out
or
push
gs
aaa
test
shlb
mov
push
sub
jl
iret
xchg
lret
adcl
xchg
or
push
dec
idivl
insb
loopne
and
push
push
cli
pop
repz
cmp
fninit
sub
pop
stc
push
sti
jbe
loopne
por
push
pop
mov
enter
lret
push
std
sub
pusha
cmp
cmpsl
push
push
roll
inc
jg
inc
sbb
jmp
mov
inc
push
enter
and
jnp
and
push
lock
popa
pop
subb
mov
repnz
movsl
jb
jno
out
movhps
dec
sar
cmp
jl
mov
cld
mov
repz
in
arpl
lds
mov
das
popfw
ds
repz
dec
cmpsb
int
in
cltd
mov
pushl
test
xchg
lcall
rolb
clc
sub
inc
mov
push
mov
jno
enter
loop
imul
lahf
loope
scas
aad
outsl
into
rcr
dec
push
mov
xchg
mov
push
mov
pop
xor
and
out
repz
hlt
mov
fldl
dec
sub
mov
sbb
sbb
push
mov
jle
jp
out
mov
outsl
or
xorb
xchg
cli
and
pop
les
andl
lock
adcl
sbb
xorl
loop
dec
fnstenv
gs
mov
and
imul
das
sahf
lahf
cmp
ljmp
cmp
pop
push
call
xor
es
in
mov
pop
test
cmp
xchg
mov
out
in
mov
sub
cmp
jne
iret
sub
pop
dec
insl
hlt
ss
sbb
cmpsl
popa
add
xchg
push
mov
gs
push
jbe
jbe
mov
mov
hlt
jmp
pop
dec
sbb
add
add
aad
loopne
lds
and
test
movsl
lea
push
lret
in
jecxz
mov
pusha
cld
loopne
in
loop
and
push
xorl
xchg
push
ret
shlb
mov
lret
in
xor
mov
sub
xchg
or
sub
jnp
xor
fs
leave
iret
cs
adc
test
fs
daa
xchg
pop
adc
insl
outsb
stos
lds
sub
lds
dec
mov
xor
inc
test
xchg
sbb
ja
push
testl
ja
sbb
sarl
dec
movsb
push
test
nop
mov
sbb
sub
and
fistpll
xchg
inc
push
wbinvd
shl
loop
lods
loop
imul
test
xchg
or
and
mov
adc
xor
mov
cltd
rclb
xchg
xor
jg
jnp
sub
imul
hlt
cld
ds
test
repnz
addb
mov
sub
add
mov
mov
xchg
add
outsl
jecxz
stc
inc
leave
pop
xchg
dec
xor
ja
sub
pop
mov
leave
push
loope
inc
pusha
sbbl
push
pop
xchg
xor
sub
aam
or
or
jae
ret
out
fldcw
push
and
mov
pop
add
jle
aad
add
sub
dec
and
mov
dec
or
and
adc
fistl
stc
jg
and
pop
cmp
push
cmp
fdivrp
mov
shlb
push
push
dec
ficoms
aas
xchg
fists
aad
jne
fwait
out
jmp
mull
jbe
sbb
jno
sub
ror
gs
cmp
add
mov
push
mov
addb
fsubrs
cmp
mov
cltd
xlat
movsb
sar
hlt
js
mov
jne
and
cmp
pop
inc
and
mov
cmp
mov
pusha
add
push
arpl
ds
sub
cmpsl
push
push
orb
push
mov
lock
icebp
int3
sub
inc
cmp
movntps
dec
pop
mov
lret
in
in
inc
mov
test
lods
and
imul
cmp
mov
hlt
std
loope
and
adc
add
insb
stos
xchg
push
sbb
negl
movsb
and
mov
out
add
inc
cmp
rcl
push
clc
sub
sti
imul
mov
sbb
mov
sbb
ja
jb
sbb
out
pop
xor
and
out
fs
aad
push
dec
movsb
insl
mov
fildll
jns
mov
fsubrl
shl
popa
sbb
stos
cmp
or
pop
cmp
out
mov
push
pop
xor
mov
outsl
mov
xor
pop
push
mov
repz
adc
loope
sbb
fisubrs
hlt
out
push
jb
inc
orl
shr
neg
jl
push
pushf
xlat
mov
sub
xor
shlb
mov
fmull
hlt
sbb
fwait
push
bnd
fstps
inc
fildll
push
mov
xchg
call
pushf
or
sub
cld
xlat
repnz
rorb
or
jne
ss
popa
xchg
or
inc
insl
mov
adc
or
icebp
je
pop
and
mov
push
adc
cmc
aam
jge
jp
and
lds
jns
cmp
icebp
test
cmc
or
cltd
push
mov
pop
pop
sbbb
lods
pop
dec
jb
imul
stc
movsb
dec
daa
hlt
aam
push
add
dec
inc
push
andb
ror
imulb
sbbb
jg
stc
ret
hlt
mov
pop
test
ljmp
test
push
arpl
xor
stos
pop
outsb
or
pop
cmp
push
lret
out
mov
and
enter
repz
sbb
mov
or
add
push
xchg
xchg
cltd
mov
cmpsl
loope
js
or
and
sub
cmpsb
jae
cmp
cs
or
mov
and
dec
mov
es
sub
ljmp
outsb
and
xor
fildl
outsl
aas
call
ds
divb
divb
pop
and
dec
lret
jo
mov
popa
cmp
aam
fisttpll
or
mov
lds
mov
dec
test
pusha
dec
mov
add
push
push
xchg
addr16
sbb
mov
inc
jbe
subl
adc
ja
test
call
imul
add
push
mov
xor
clc
mov
ret
or
data16
lahf
arpl
jle
popa
cmp
movsb
int3
ds
xor
xorl
int3
lea
add
xor
daa
cld
decb
xor
repnz
mov
iret
or
fst
out
popf
inc
lret
xlat
popa
lea
lret
and
les
mov
shl
push
push
inc
inc
shll
test
and
mov
dec
cld
shlb
ret
movsb
sbb
dec
sub
lods
out
pushf
inc
dec
push
adc
jo
sub
jl
sub
lock
iret
lcall
repnz
jne
mov
les
mov
lock
mov
push
ja
mov
int3
pop
bound
lret
push
fwait
dec
add
mov
loope
jmp
cmp
adc
jae
sbb
test
push
loopne
lods
lret
loope
sub
add
or
inc
data16
lds
ret
push
dec
pop
xor
rorb
sub
mov
ds
inc
mov
jmp
ret
add
xchg
aad
xchg
clc
jns
sbb
mov
push
mov
addr16
stos
lods
adc
test
cmpsl
insl
mov
push
mov
cmc
neg
fsubrl
sbb
lea
sbb
fldcw
add
pushf
jmp
xchg
shr
rcrl
or
jo
xchg
mov
add
in
or
cwtl
cmpsl
sbb
mov
cmp
aaa
dec
mov
mov
jge
lcall
fbstp
sub
ret
fmuls
fnstcw
stos
addr16
cmp
xorb
out
mov
sub
int
mov
xchg
push
push
dec
push
xchg
cmp
jmp
pop
in
lods
sbb
xor
dec
cmpsb
and
cmp
mov
loopne
mov
fstl
fsts
lock
loopne
and
dec
shrl
mov
or
jmp
pushf
jmp
sbb
jne
fsub
daa
push
pop
pop
push
mov
daa
inc
aad
jecxz
jbe
dec
stos
leave
fstl
jne
adc
adc
lret
lret
dec
jge
pop
or
mov
adc
push
xchg
jecxz
jno
fistps
dec
ficomps
push
cltd
fdivr
shll
ds
mov
pop
fimull
lds
adc
mov
sbb
lock
mov
mov
adc
stc
repnz
sarl
jb
loope
xorb
mov
lcall
stos
popa
add
jbe
or
xor
sti
gs
sar
mov
add
pop
test
int3
and
mov
adc
or
ss
mov
rcl
jae
dec
xlat
dec
cmp
mov
add
scas
xchg
cld
or
mov
cmp
dec
roll
adc
mov
dec
das
push
mov
jp
and
and
add
loop
movsl
xor
aam
add
ret
imul
pop
punpckhdq
neg
push
adc
pop
dec
enter
cmpsb
lock
rclb
int3
cmpsl
mov
into
popf
out
das
mov
pop
pop
sub
adc
out
lahf
and
push
iret
xchg
mov
fdivrl
xchg
sbb
push
or
fwait
sub
pop
xorl
and
js
imul
addr16
insb
or
inc
shll
xor
sub
or
sbb
xlat
or
inc
jmp
sbb
dec
ljmp
mov
lcall
out
daa
xor
mov
insb
jno
or
add
mov
sub
and
lods
push
mov
setle
ret
in
xchg
cmc
jne
jecxz
sub
inc
in
lods
mov
xor
inc
in
pop
mov
mov
sbb
lret
cmp
xchg
data16
xor
scas
pop
call
jle
push
jl
or
xlat
cmp
movsb
sbb
sub
into
lock
lods
adc
fsubrs
and
test
popa
outsb
or
outsl
mov
in
pop
stc
push
mov
xor
inc
dec
ret
mov
add
sub
mov
call
out
aas
test
xchg
xchg
das
pop
cmp
xlat
dec
jae
loope
test
xor
fcmovnbe
imul
cmpsb
push
sbb
jns
clc
dec
js
test
jle
jp
das
je
dec
and
mov
sti
push
scas
xchg
test
pop
add
sbb
jne
cmpsl
or
enter
jno
or
inc
clc
daa
push
jl
sahf
addl
add
add
dec
adc
aam
icebp
mov
xchg
cmp
add
ljmp
dec
imul
stos
jno
scas
push
popa
lea
push
pop
or
inc
lds
clc
pop
inc
sub
cmp
cmpsb
icebp
subb
pop
xor
or
outsl
mov
pop
pop
jl
and
cwtl
push
pop
repz
mov
pop
bnd
push
in
dec
xor
fstps
das
xor
mov
fiadds
call
idivl
push
inc
mov
outsl
outsb
psraw
ret
push
push
sbb
xor
sub
xorb
loopne
mov
loop
mov
in
movsl
gs
mov
xor
scas
inc
and
in
out
nop
fistpll
mov
test
mov
mov
arpl
jmp
and
rclb
jp
fldz
enter
mov
dec
cmpsb
lret
xchg
fmull
adc
inc
dec
and
dec
xor
lea
cltd
sbb
push
loope
js
sbb
mov
push
iret
inc
out
fcomip
jb
dec
scas
sbb
adc
mov
sub
adc
pop
push
jb
orl
imul
or
inc
scas
jbe
adc
scas
jl
sarb
mov
imul
sbb
adc
sbb
sub
gs
es
ficompl
mov
into
repz
push
mov
cltd
stos
dec
js
pop
pusha
push
dec
pop
inc
dec
jns
sub
dec
mov
cltd
test
xor
in
mov
call
adc
mov
shll
mov
pop
and
sti
nop
push
push
mov
lds
adc
lea
mov
adc
sbb
sub
int
mov
and
xchg
sub
dec
ret
or
lods
xchg
mov
loope
outsl
stos
movsl
inc
or
pushf
push
inc
mov
xor
dec
fldl
lea
xor
or
jne
pop
nop
into
cmp
xchg
aad
imul
mov
xor
orb
and
ss
aaa
or
iret
xchg
popf
jg
shrb
sbb
ljmp
xchg
cmc
popa
lods
icebp
xchg
js
jbe
cltd
mov
test
jne
fcos
daa
adc
in
in
jnp
in
jb
mov
mov
mov
inc
stos
xchg
repnz
mov
aam
xchg
cmp
aad
mov
mov
aad
push
in
jle
jb
dec
dec
shll
adc
insb
in
test
dec
repz
add
jmp
push
push
lea
mov
dec
xor
jge
insl
mov
or
and
lahf
enter
mov
mov
push
jge
mov
mov
outsb
sbb
pop
mov
outsb
and
mov
pop
into
sub
push
xchg
push
nop
std
mov
pop
mov
jmp
mov
les
mov
inc
cli
inc
xor
lea
std
lcall
ja
das
adc
stc
adc
ret
lret
push
ja
fcmovbe
mov
push
lcall
and
lahf
xchg
pop
mov
pop
or
test
rcrb
xchg
inc
cmp
or
inc
push
lahf
mov
jae
cmp
jb
mov
push
sub
pop
push
in
and
xlat
adc
xchg
sub
mov
mov
lds
movsb
mov
dec
mov
pop
mov
or
jae
es
cmp
das
mov
push
push
mov
push
xchg
xchg
pop
push
push
inc
stos
sub
mov
fmuls
mov
iret
sub
testl
lds
jmp
sub
sub
jl
imul
fwait
and
sub
mov
testb
mov
iret
inc
bound
jno
out
sbb
dec
mov
out
out
stc
dec
jno
mov
xlat
cld
add
lods
mov
or
mov
cmp
js
jbe
xchg
scas
lods
adc
fsubl
inc
sub
cmp
inc
pop
imul
loopne
sti
inc
mov
add
adc
or
out
pop
push
sub
pop
cmp
fmuls
xlat
aaa
aaa
push
jne
test
push
aaa
in
lcall
stos
add
jbe
icebp
out
push
sti
les
inc
inc
sar
pop
adc
dec
push
inc
push
cmpsb
adc
dec
ja
cltd
dec
aaa
out
mov
ds
inc
mov
out
inc
mov
mov
xor
inc
fsubrs
leave
cmp
xchg
jmp
loopne
sti
addb
in
filds
mov
mov
cld
sbb
pop
push
and
xor
lret
push
rolb
pop
mov
repz
aaa
cmc
sub
jmp
testl
push
fs
jge
jae
dec
loope
mov
and
push
test
adc
aad
pop
sbb
int
add
xor
mov
xor
loop
aam
xchg
loopne
imul
mov
mov
ljmp
loope
jne
or
xchg
pop
add
xor
js
out
push
adcl
cli
push
sub
ljmp
push
lock
push
repz
jecxz
dec
in
sarb
lret
insl
or
lret
pop
mov
ja
inc
push
out
sbb
test
xchg
pop
mov
fidivrs
mov
roll
nop
or
push
xor
cmpsl
pusha
mov
xchg
add
xchg
add
nop
cmp
aam
int3
xor
into
inc
dec
dec
dec
out
adc
pop
mov
sub
ret
cmpsb
xor
nop
mov
clc
jecxz
sahf
arpl
cmpsb
stos
cltd
jmp
lcall
je
adc
inc
insl
out
outsb
cmpsb
add
and
outsb
fstps
xlat
pop
gs
or
fdivs
lcall
test
loope
push
in
cmc
fs
push
xor
testl
add
inc
sub
adc
aad
fs
addb
stc
pop
pop
jmp
pop
cmp
and
sub
pop
sahf
scas
add
sub
cmpsb
gs
xchg
sbb
pop
push
test
enter
mov
in
dec
sarl
fisttpll
or
inc
test
jp
dec
mov
nop
fadds
mov
lahf
lods
lcall
call
cwtl
mov
push
stos
inc
int
ljmp
mov
bound
adc
add
dec
and
shl
pusha
and
fsts
dec
or
cmp
sbb
loopne
rol
shlb
loopne
in
popa
mov
or
lock
xor
ds
movsb
pop
xor
lea
mov
mov
std
test
lcall
loope
xorl
jns
sarb
addr16
pop
xchg
pop
xchg
addr16
rclb
mov
jge
mov
mov
dec
daa
iret
add
dec
addb
fcoml
shll
or
cmp
out
leave
test
inc
aad
sub
mov
arpl
ffreep
data16
xor
dec
roll
loope
cmp
xchg
inc
add
sti
aam
hlt
daa
lods
adc
sub
bound
mov
dec
in
out
testb
sbb
mov
stos
adc
movsl
sbb
sub
lods
mov
adc
mov
dec
stos
mov
outsl
jg
lret
loop
pop
imul
int
test
cltd
mov
aaa
xchg
or
das
mov
sbb
movsb
lret
inc
mov
fcmovnb
mov
sub
xor
jl
dec
insl
sbbl
jo
imul
cmp
add
sbb
and
and
test
dec
mov
scas
daa
cwtl
fiadds
in
mov
push
lcall
fldt
push
xorl
lods
and
std
lds
xchg
dec
ja
jg
jge
repz
inc
sar
pop
fstpl
icebp
jb
push
cs
stos
lcall
push
fdivr
or
push
dec
es
fcoms
negb
cld
lock
js
ja
call
mov
mov
sub
sbb
inc
xlat
loopne
jb
jl
cmp
dec
or
adc
jle
xor
scas
or
adc
lock
cmp
mov
imull
adc
jmp
cltd
int3
and
mov
xor
sub
divl
push
daa
xlat
jge
xchg
pop
cmp
rcll
xchg
mov
das
arpl
jle
mov
aad
ret
adc
hlt
call
add
mov
jo
iret
jbe
cmp
sbb
in
pop
inc
inc
movsl
out
add
cltd
push
or
nop
jle
into
popa
xchg
push
pop
rcl
inc
lahf
pop
xor
jno
scas
dec
xchg
xchg
rolb
js
jno
push
incb
jmp
pop
adc
pop
repz
lock
mov
xchg
ljmp
imull
cmp
rolb
fdivl
cmpsb
in
jge
fadds
sbb
push
adc
jae
test
neg
fisubs
push
jno
ja
adc
loopne
sbb
orb
add
leave
test
mov
mov
jle
inc
cmp
sbb
rcll
into
pop
es
imul
cmp
add
adc
jbe
cmp
or
fstpl
xchg
jmp
mov
ss
push
jl
adc
mov
and
hlt
lahf
push
into
xor
mov
or
popa
add
outsl
and
or
rcll
fwait
push
cld
shll
cmpsl
fnstenv
int3
add
inc
scas
push
cmc
mov
jl
iret
scas
lret
push
insl
repz
adc
clc
call
mull
out
adc
outsb
mov
dec
sbb
sub
roll
addr16
push
pop
jecxz
jns
lock
jne
popf
xor
test
cmp
out
dec
call
stc
adc
jbe
cli
out
mov
lds
call
out
dec
mov
clc
pop
pop
ljmp
ljmp
outsb
mov
dec
sub
incl
mov
sarl
push
cmpsb
jb
xchg
insl
xchg
addb
cmc
rcll
xchg
popa
pop
cmp
pusha
sub
xchg
int
mov
push
sbb
push
mov
push
jmp
test
aaa
ja
jae
or
fiadds
ljmp
subl
stc
outsb
rcrl
mov
xchg
iret
aad
mov
sub
negl
cmp
mov
in
lea
mov
repz
mov
mov
loope
outsl
ret
decb
push
cmp
movsb
stos
lds
ret
mov
inc
mull
pop
cmpsb
jbe
push
jbe
test
test
add
sub
out
mov
imul
adc
fisubrs
dec
outsb
jo
mov
adc
mov
sbb
out
jne
lret
lret
mov
jno
pop
xor
lret
adc
dec
incl
scas
je
gs
nop
jg
pop
pushf
dec
dec
notb
push
push
popa
lods
xor
outsb
pusha
xchg
out
push
jg
adc
test
lea
cltd
and
jmp
cli
cld
mov
filds
mov
mov
mov
adc
jnp
pusha
and
stos
ret
inc
cmp
and
aad
xchg
sub
fs
cld
inc
leave
test
sbb
pusha
mov
lds
aad
adc
nop
or
xchg
mov
js
mov
cmpsl
or
out
mov
push
jno
stos
orb
stos
stos
testb
mov
pop
in
fwait
loopne
jmpw
mov
jle
push
mov
jl
mov
sub
sub
xchg
pop
pop
mov
mov
ficomps
pop
mov
leave
mov
ss
ljmp
cs
dec
sub
sahf
jg
fldl
jp
jne
mov
hlt
stc
pop
out
outsb
jecxz
xchg
pop
dec
les
push
sbb
xchg
pop
inc
rol
jle
add
xchg
lea
leave
fiaddl
xor
test
lahf
or
inc
push
test
stos
out
adc
mov
nop
xor
mov
leave
inc
dec
in
sbb
imul
adc
fwait
into
dec
popf
dec
cmc
das
enter
sub
sub
jno
fisubl
daa
or
jo
xlat
insb
lret
hlt
loop
imul
fs
sub
dec
cmp
clc
push
addr16
push
adc
dec
cmc
dec
cmp
aaa
dec
mov
daa
sbb
stos
int3
dec
pushf
call
adc
insl
popf
jb
loopne
scas
loope
mov
and
in
sbb
jo
mov
cmc
mov
sub
test
dec
lock
ss
test
cltd
setne
outsb
xor
sbb
xor
jns
movsl
inc
dec
pop
bound
sbb
lds
fimull
mov
push
lahf
mov
sbb
mov
lea
cs
iret
xchg
fidivrs
aam
aad
pushf
sti
insl
inc
nop
xchg
out
call
push
push
sti
out
and
lea
xchg
sbb
dec
repnz
mov
pop
push
or
mov
cwtl
mov
or
mov
in
xor
in
jne
lret
pusha
cltd
xchg
mov
xchg
movsb
pop
es
leave
aam
jb
cmpsb
js
sahf
pop
outsl
pusha
xor
mov
dec
cli
addr16
sarb
sbb
in
rcll
jae
sahf
xchg
int3
xchg
cwtl
jae
jg
push
cld
cmp
mov
repnz
adc
inc
pusha
fwait
xor
outsb
jge
bound
mov
loope
imul
jg
xchg
aad
lea
pop
and
not
mov
xchg
lcall
mov
xchg
mov
aad
stos
pop
lds
lods
movl
xor
js
and
aam
xchg
sbb
test
notl
and
cmp
imul
shrb
arpl
xor
mov
shrl
mov
push
jl
bound
ret
cli
xor
rcll
lods
cmpsl
insl
xlat
lods
gs
pop
ret
cwtl
fistpll
icebp
mulb
cltd
shl
jne
xchg
pop
cmp
push
repnz
mov
adc
xor
test
movsl
hlt
mov
mov
adc
adc
imul
fwait
jns
jae
dec
lahf
xor
or
fldcw
cmp
jno
aam
xor
cmpl
into
loopne
add
popf
popf
dec
mov
inc
push
jl
jmp
aaa
pop
out
je
fdivs
mov
aam
sub
inc
xor
mov
out
mov
jbe
push
xchg
mov
jnp
pop
adc
cwtl
dec
push
xor
push
pop
popf
mov
scas
scas
jbe
ss
mov
mov
xchg
lret
dec
scas
aam
das
jl
pop
loopne
mov
scas
xorl
pop
jecxz
loop
cmp
mov
out
loopne
add
pop
inc
hlt
imul
push
in
fcomi
xorb
out
cmpsb
test
ret
sbb
fldcw
jl
lret
dec
aaa
or
cmp
scas
movsl
sub
jno
sub
xor
mov
cmp
fs
push
sbb
in
pop
ret
pop
cld
xchg
inc
leave
mov
ja
jmp
js
lods
and
fs
movsl
cmc
add
jnp
or
rorl
dec
push
jae
and
adc
xor
out
ljmp
push
cmp
cld
push
pop
ja
popa
mov
sti
jno
fistps
scas
sub
scas
sub
aas
add
adc
pop
gs
pop
sbb
shlb
popa
mov
mov
sub
iret
popa
orb
addr16
test
es
movsb
mov
in
dec
sub
xor
adcl
test
sub
jno
inc
xlat
das
xchg
ljmp
sbb
adc
cmp
test
sbb
dec
push
in
add
cli
xchg
aad
mov
in
mov
lds
leave
and
sub
fxch
push
out
xchg
xchg
inc
sub
xchg
add
push
inc
imull
insb
insb
adc
aam
out
adc
sarb
test
lods
sarl
repz
jnp
push
in
add
popf
mov
dec
fneni(8087
add
pop
push
sub
inc
fldl
addb
cmpsl
jmp
les
mov
sbb
inc
lods
sahf
rcr
leave
andb
or
cmp
scas
call
loope
and
mov
mov
clc
out
cmp
out
arpl
xor
adc
dec
ljmp
mov
sub
movsl
pop
fxch
cs
lock
addr16
out
dec
add
xchg
push
inc
scas
stc
das
jnp
testb
or
pop
inc
jnp
movsb
test
insl
push
in
lods
nop
sti
mov
mov
mov
or
das
xchg
ret
xchg
and
cmc
test
jl
ds
push
ficoms
hlt
xor
out
sarb
pop
into
cwtl
push
mov
xor
sub
gs
xchg
xchg
cmp
and
sub
fwait
into
int
mov
cmp
jnp
pop
repz
fimuls
inc
mov
add
cmp
inc
dec
dec
fidivrl
xchg
pop
cwtl
test
popl
aaa
dec
sti
ror
jmp
xor
stc
sub
xor
jle
mov
inc
in
add
fld
push
movsb
xchg
movsl
adc
inc
dec
xchg
cld
pop
fldcw
push
lods
or
cmp
leave
dec
scas
out
or
rorb
mov
js
push
inc
insl
push
push
push
xor
xchg
sub
mov
dec
enter
test
outsl
add
push
jp
lds
pop
pusha
test
testl
mov
add
int3
repnz
mov
cmp
andl
adc
mov
xor
cmp
icebp
xchg
test
xlat
pop
imul
jg
add
pop
push
sti
mov
and
jne
adc
sarl
pop
adc
xchg
push
pop
clc
orl
cmp
pop
adc
pop
shr
hlt
cmp
pop
inc
cmpsl
mov
adc
jae
mov
and
pop
adc
cmpsb
inc
gs
xchg
xor
fistps
jnp
je
sbb
test
jne
cltd
cmpsl
or
hlt
dec
adc
out
pop
sahf
rol
arpl
jmp
inc
clc
xchg
test
inc
sub
push
cmp
out
pop
lods
scas
aaa
out
testb
dec
sub
and
push
daa
and
aas
inc
stos
sbb
cmpsb
jbe
push
test
cmc
add
lahf
inc
movsb
sbb
sub
jo
mov
mov
lock
xor
add
out
sub
cmp
sbb
aam
cmpb
dec
ret
mov
mov
push
loope
cmp
ljmp
and
push
mov
ss
adc
xor
data16
fnstcw
ss
xor
inc
mov
xchg
imul
int3
cmp
push
mov
in
cmp
xor
loop
dec
ds
sarl
xor
lods
shrl
dec
pop
andb
cwtl
mov
mov
add
and
add
enter
cmp
push
dec
inc
cwtl
insb
xchg
jns
sub
adc
xchg
mov
mov
jl
sub
sub
dec
in
push
fisttpll
lahf
fisubs
int3
add
mov
xor
mov
pop
rclb
jg
mov
or
adc
es
jno
mov
das
push
add
mov
arpl
pop
clc
inc
loop
mov
clc
and
mov
adc
sbb
out
pop
aaa
jne
jmp
fimull
cld
push
lods
pusha
fs
lea
test
sub
jns
mov
lea
push
and
jae
cmpsb
scas
or
rcll
push
mov
fsubrp
rclb
pop
lcall
fiadds
lods
pop
xor
sbb
pop
jnp
or
jmp
sbb
loop
sbb
outsl
mov
pop
mov
sub
lret
fstl
pop
push
mov
adc
fidivl
out
jne
sahf
xchg
cmp
pop
mov
push
test
roll
aam
ja
mov
dec
xor
mov
lret
js,pn
inc
add
sbb
add
aam
jo
jns
add
add
js
fadds
mov
loopne
icebp
dec
stos
xchg
dec
ret
jge
inc
flds
and
dec
add
stc
add
iret
xor
mov
insb
jecxz
es
jecxz
int3
mov
xchg
stos
add
lods
cmpsb
xchg
pop
jmp
mov
iret
rorb
xor
push
and
mov
sub
adc
sub
jb
lock
test
jo
cld
jl
mov
push
clc
mov
push
and
mov
std
decb
jae
jo
mov
mov
or
or
inc
fisubl
in
xor
aam
aaa
push
subb
out
xchg
mov
arpl
stc
aad
int
sub
pop
inc
jno
dec
xchg
mov
fdecstp
mov
jb
sbb
cmp
inc
outsb
cmpb
jp
les
sti
stos
scas
xchg
aas
mov
scas
jo
inc
out
jg
bound
inc
ret
adc
dec
push
notl
shll
ret
jbe
cmpsl
xchg
test
bound
cwtl
shlb
lret
mov
popf
lock
and
ja
fstps
sbbl
mov
jl
lods
movsl
or
xchg
jecxz
rsqrtps
jl
out
sahf
mov
out
loopne
out
pop
cld
pop
imul
or
inc
xor
xchg
fs
mov
hlt
jg
stc
sbb
lcall
int
and
adc
mov
and
aas
jle
cmpb
mov
push
mov
adc
outsb
sub
pop
cmpsb
jl
cmp
rcrb
arpl
jbe
mov
xchg
ds
add
jge
mov
pop
jae
jne
loopne
lret
aad
lret
mov
xchg
jg
or
jp
xchg
push
jl
cmpsl
cli
adc
lods
inc
popf
mov
sub
ljmp
jo
mov
pusha
jecxz
fwait
pushf
std
clc
push
xchg
sete
cld
sbb
in
cmp
mov
popf
stos
enter
dec
roll
mov
mov
xchg
lods
jmp
jp
lret
or
adc
cmp
mov
inc
loopne
out
cld
cmp
push
dec
test
mov
sti
roll
pop
pusha
sub
xorb
pop
cmpsl
fpatan
add
xchg
mov
stos
mov
mov
mov
loopne
sub
jle
leave
cltd
or
shll
mov
fadds
mov
sub
fisubs
das
xchg
lock
mov
icebp
rolb
lds
lods
add
mov
cwtl
mov
push
in
arpl
cmpsb
mov
adc
push
dec
cs
int3
or
adcl
test
or
outsb
gs
loop
rorb
inc
scas
lods
and
arpl
out
pop
stc
stc
mov
fwait
pop
or
pop
push
dec
cmp
mov
popf
mov
cmp
lea
ss
pop
mov
into
lcall
imul
xchg
arpl
dec
xchg
sub
jb
pusha
cwtl
mov
mov
push
mov
ljmp
cmpsw
mov
dec
mov
xchg
test
or
aad
mov
xchg
popf
xchg
inc
movsb
add
xor
aaa
xchg
scas
jecxz
insb
mov
lods
bnd
lods
pop
mov
incb
inc
icebp
lock
sbb
xor
sub
jno
inc
sti
sub
scas
push
inc
test
xor
pop
rcl
leave
insb
jmp
jne
adc
inc
mov
lds
movsl
pop
scas
and
lahf
xlat
mov
sub
lahf
push
data16
movsb
out
pushl
aas
stos
xor
pop
xchg
cmc
mov
cmp
out
test
xchg
inc
jecxz
fidivl
mov
cld
xchg
cmpl
jp
or
push
cmp
es
pop
test
and
dec
add
sub
sbb
push
lds
and
adc
dec
rorl
orb
jbe
xor
push
dec
xor
int
adc
jne
in
mov
daa
outsl
xlat
xor
jmp
fstpt
dec
outsb
push
aaa
push
push
outsb
aas
addl
jae
call
or
xchg
push
gs
or
lcall
mov
cmp
adc
aam
sbbb
adc
roll
inc
scas
pop
xor
out
subl
out
and
lahf
int3
jae
sbb
scas
pushf
lea
pusha
mov
xlat
pop
fdivrs
mov
xchg
loop
and
fidivl
add
pop
xor
jle
dec
cmp
pop
stc
outsb
add
mov
jne
inc
cmp
mov
xchg
flds
popf
fdivl
xchg
int3
pop
ja
insb
daa
pop
cmc
xchg
push
xchg
mov
mov
pop
repnz
mov
mov
mov
mov
inc
cltd
pop
adc
int3
dec
notb
jmp
inc
in
xor
ret
xchg
sar
arpl
or
es
clc
inc
and
pop
inc
jbe
ret
pusha
in
and
xlat
push
mov
subb
je
adc
sub
mov
cmp
stc
fildll
xchg
mov
gs
aam
mov
xchg
dec
in
sbb
lods
clc
or
out
mov
cmpsb
sahf
mov
add
adc
dec
adc
lret
pop
int
in
or
test
imul
shll
push
outsl
inc
imul
lea
push
imulb
gs
mov
divps
sub
mov
jo
addr16
mov
rclb
or
popf
daa
mov
jns
test
sub
dec
pop
mov
aaa
mov
pop
popl
dec
pushf
fscale
dec
test
or
sbb
lahf
flds
xchg
cmpsl
pop
test
jno
lods
lea
inc
sub
inc
not
stc
ret
cmp
mov
mov
xor
pop
je
xor
mov
pop
aam
fdivs
jns
test
lods
imul
mov
dec
jno
cwtl
in
dec
or
iret
cmpsl
incb
pop
call
adc
xchg
mov
nop
je
xchg
js
loope
dec
or
add
aad
dec
sub
and
pop
popf
mov
cmp
push
push
or
rcrl
imul
imul
add
add
sbb
add
sub
fs
jecxz
int3
lods
testb
pop
mov
fsubl
mov
call
and
and
es
mov
mov
xor
adc
popa
shrl
mov
pushf
addr16
mov
add
xor
mov
push
jnp
fs
add
xor
cltd
lret
out
push
fildl
jle
or
stos
cmp
fwait
and
sub
push
inc
jmp
dec
inc
cmp
and
cmp
add
or
or
movsb
lock
adc
xor
in
hlt
in
mov
push
incb
lods
pop
ljmp
ljmp
adc
or
add
mov
popf
cmp
cli
mov
stos
inc
mov
shrb
jg
mov
and
negb
fisttps
mov
fchs
or
xchg
or
in
stc
call
scas
das
mov
dec
push
in
sarl
mov
das
xor
fdivrp
mov
xchg
les
mov
movsl
or
das
fld
cltd
pop
cmp
push
mov
loope
and
mov
jbe
addr16
add
xor
pop
cs
int3
or
pushf
pop
xchg
gs
inc
push
push
or
std
lods
inc
lret
jbe
outsb
popf
test
dec
inc
lea
shll
fldcw
push
push
push
pop
push
jle
mov
cmpsl
cmp
out
push
clc
adc
fmul
jecxz
ficoml
mov
pop
je
sarl
push
sti
sti
cmpsb
jo
cmp
fists
imul
pop
bound
imul
cltd
mov
jmp
imul
push
loope
mov
iret
mov
repnz
fsincos
loopne
sbb
inc
pop
push
pop
cld
mov
ret
je
pop
xor
jns
add
in
mov
jge
sub
push
insl
test
cmp
dec
add
xchg
jmp
adc
dec
iret
xor
sbb
cmp
push
sub
add
pop
ret
pop
daa
je
and
iret
cwtl
mov
xchg
push
pop
xor
jp
push
fsubr
aam
cltd
ja
jl
shl
mov
dec
gs
jecxz
test
test
sub
hlt
or
icebp
inc
jmp
stos
stos
and
xor
push
or
or
cmp
call
mov
and
inc
data16
or
push
call
test
inc
scas
jno
xchg
in
arpl
jo
mov
mov
test
ss
xchg
les
nop
fsts
jnp
lds
mov
or
fwait
inc
dec
repz
lock
fs
or
into
fidivs
loop
pop
movsb
and
aas
push
mov
mov
mov
push
hlt
xorl
sbb
mov
mov
mov
jne
stos
icebp
xor
adc
jge
in
mov
pop
imull
test
lds
sbb
mov
mov
jo
fdivr
sub
leave
mov
mov
ljmp
dec
sub
push
ds
push
sub
add
xchg
in
mov
mov
push
mov
adc
fsubrl
push
push
cld
in
and
inc
mov
inc
ret
sbb
fcompl
pop
rcr
jae
icebp
fimuls
cmc
sti
stc
sbb
jae
push
mov
push
out
arpl
rcl
or
pop
inc
xchg
in
out
xor
loop
jge
hlt
pusha
dec
xor
add
mov
test
sub
dec
fcomi
out
or
fisttpl
jbe
pop
mov
xor
test
add
scas
andb
adcl
lea
mov
dec
pushf
insl
out
or
inc
loope
push
test
pop
dec
fsubrp
xor
and
nop
add
jmp
test
jne
sub
jge
or
psubd
xor
faddl
mov
ljmp
cmp
sub
xor
paddsw
cmp
adc
sbb
jp
bound
out
fucomip
mov
in
jmp
jns
lods
ss
movsb
aam
cld
fwait
inc
ror
or
cltd
xchg
and
push
ds
dec
adcb
mov
stos
dec
in
loop
je
jb
add
cmp
into
adc
fbstp
insl
xchg
cmp
mov
xchg
fcompl
cmp
pop
scas
test
mov
mov
sbb
cmp
shll
mov
out
cs
enter
xchg
push
cld
push
jns
leave
mov
loope
aaa
cmp
pop
xlat
push
addr16
js
lea
mov
clc
rolb
or
cmp
adc
inc
and
cmp
and
into
dec
cmp
xor
dec
jge
jnp
pushf
rolb
pop
push
inc
imul
push
dec
rclb
sbb
and
cmc
xchg
int
bound
dec
shll
sti
dec
movsl
jbe
jp
cmp
fnstsw
dec
mov
dec
add
cmpsl
xor
movsb
jge
dec
push
dec
ds
pop
lcall
andb
jno
into
dec
pop
arpl
icebp
repnz
leave
fcmovnbe
cmp
ret
rcrb
cmp
xor
mov
shll
push
dec
addl
ja
jge
fcmove
jo
enter
sub
es
dec
cmp
add
jo
pop
sbb
imul
aad
insl
pop
cwtl
push
push
loope
das
out
xchg
call
adc
das
repnz
push
cmc
shlb
aaa
push
std
mov
mov
fwait
pop
ljmp
dec
insb
inc
out
or
pusha
pop
int3
test
or
ror
ja
mov
aam
mov
jmp
sahf
nop
aad
aad
lods
repz
pushf
aam
sub
pop
fdivr
cltd
subl
xchg
insl
pop
movsb
popa
je
dec
mov
clc
cmc
mov
mov
add
cmp
xchg
std
push
pop
sahf
sub
notl
xchg
push
add
fs
rolb
cwtl
jle
cmp
das
and
ret
pop
inc
cmp
pop
mov
lret
cmpsl
int
gs
and
test
out
sbbb
add
jge
sbb
lea
pop
dec
sub
pop
fnsave
cmpsb
ss
and
cmp
les
in
add
in
adc
sbb
loope
scas
xchg
movsl
pop
sub
mov
jle
inc
push
add
fs
rcrl
shr
sbb
sub
movsb
ret
pop
push
mov
dec
fistl
sbb
lock
xchg
data16
xchg
xchg
fmull
gs
and
push
dec
xor
stos
cmp
lods
fwait
or
push
ss
inc
std
pop
imul
enter
jns
adc
sbb
aaa
aam
cmp
mov
imul
mov
scas
and
rcr
cmp
sub
xor
decl
pop
sbb
sahf
xchg
repnz
sub
cmpsb
aam
enter
hlt
sbb
cmpl
and
popf
stc
loop
incb
les
iret
xchg
into
mov
stos
aaa
cltd
mov
rorb
ljmp
push
push
and
loope
cmp
and
negb
jnp
xchg
in
or
sahf
cwtl
adc
inc
adc
xchg
pop
ds
add
mov
lcall
fcmovu
xor
xor
xor
iret
push
mov
jno
shrl
fnstcw
fnstcw
iret
les
inc
sub
lods
lcall
push
mov
pop
std
push
xor
ljmp
les
and
and
or
fbld
in
pop
lahf
pusha
sbb
insl
aad
sti
aas
jb
cld
dec
mov
ret
add
sbb
and
xchg
sahf
xchg
hlt
dec
out
nop
outsb
push
push
push
cmpsb
stos
lock
insb
fwait
stc
sub
pop
int3
jle
faddl
xor
lea
or
jl
inc
sbb
pop
mov
lods
sub
sti
sarb
jae
mov
shl
ret
xchg
fdivs
cwtl
adc
mov
mov
lret
or
push
jnp
sbb
or
imul
pop
jg
and
icebp
scas
inc
fsts
mov
out
insl
cmp
mov
test
dec
insl
inc
test
push
lret
fisubrl
ljmp
pop
and
adc
and
dec
cs
clc
push
test
mov
push
add
test
sti
mov
or
bound
cmp
pop
cmp
icebp
xorl
in
xor
filds
xchg
inc
adcl
ja
and
pop
mov
push
insl
dec
sar
sahf
ficoml
bound
std
or
rclb
dec
lahf
hlt
gs
xchg
sub
push
add
sub
push
or
lahf
cltd
push
push
inc
repnz
push
mov
hlt
jle
xchg
inc
sbb
cli
push
addr16
jo
inc
xchg
call
aas
sbb
int3
push
mov
push
aam
loopne
pop
int
jne
cmc
jae
push
imul
fwait
xor
sub
pop
stos
add
loope
jae
aam
jne
cmpb
jb
xor
pop
cmovl
xor
scas
cli
call
in
inc
loopne
loop
pop
negl
int3
std
in
std
inc
hlt
cmpsl
loope
cmp
movsb
filds
sti
xchg
test
mov
lods
arpl
xchg
sbb
rcll
adc
push
aad
add
aam
adc
sbb
popaw
popa
jo
jp
push
repnz
imul
subl
xchg
push
pushf
jmp
push
or
xchg
mov
xor
imul
lods
and
mov
or
pop
mov
cltd
in
pop
stos
sti
scas
mov
mov
mov
cwtl
lods
push
dec
rorb
mov
imul
push
fstpt
and
dec
add
adc
icebp
inc
mov
inc
stc
sti
sbb
js
cltd
hlt
js
leave
or
fistpl
xchg
add
pop
fsubp
adc
std
pop
aaa
rorb
aas
fwait
mov
dec
mov
fistpll
and
into
ja
and
cli
das
sub
into
loop
adc
repz
adc
and
aas
mov
jl
inc
ret
xlat
lods
aam
js
repz
sti
add
adc
outsl
and
adc
aam
es
inc
mov
and
in
jne
cmpsl
ret
inc
push
xchg
push
xlat
dec
mov
loopne
insb
dec
int3
pop
push
mov
stos
jp
xor
sbb
mov
xor
push
das
sub
pop
sub
dec
mov
inc
mov
ds
aaa
add
jge
mov
xlat
lret
imul
dec
inc
jo
jg
aad
jo
adc
popa
loop
shrl
mov
nop
inc
adc
test
in
push
loop
cltd
jbe
sub
lahf
xchg
lret
repz
jo
pop
xlat
es
test
out
sbb
xchg
out
lahf
out
lods
mov
adc
push
imul
mov
push
jmp
mov
dec
jns
xor
movsl
fcomps
cwtl
lock
inc
and
or
jl
js
divl
sahf
clc
add
jle
stc
leave
sub
scas
mov
jle
and
adc
sbb
je
add
pop
int3
pop
dec
bound
mov
xor
mov
aas
mul
sub
inc
mov
add
enter
cwtl
fimuls
adc
movsb
pop
mov
push
cwtl
aam
mov
lret
inc
test
mov
or
jne
movsb
sti
xchg
dec
push
ds
repz
sbb
adc
daa
rcrb
mov
or
outsb
orl
insb
cwtl
fnstenv
mov
roll
push
enter
jg
xchg
mov
imul
xorl
jno
jge
jb
xchg
jge
and
push
cmp
imul
aaa
jnp
jle
sbb
adc
mov
adc
mov
mov
aam
jns
inc
int
pop
push
inc
jl
pop
jno
enter
pop
aam
icebp
inc
pop
data16
movsb
je
test
insl
aaa
js
xchg
fcmovu
jnp
cmp
call
fdivs
cmp
hlt
mov
pop
into
and
xchg
sti
jmp
sbb
iret
in
xor
jge
shl
xor
add
cmp
mov
cmp
lods
sub
jecxz
adc
cs
xlat
das
mov
outsb
testl
cmp
cmpsb
xchg
ffreep
ret
jmp
ja
inc
xchg
lock
movsl
test
jg
xor
adc
adc
mov
in
cmp
pop
negb
mov
out
xchg
shlb
push
ret
in
call
ss
sub
popa
sbb
clc
cld
add
push
test
sbb
popf
test
fcmovnb
lret
pop
adc
mov
add
jno
add
in
ret
push
xor
fdivl
mov
pop
loope
adc
push
aad
test
loope
pop
ds
mov
lods
icebp
sub
xchg
shlb
scas
add
xor
push
out
lret
xor
cmpsb
xor
std
pop
push
mov
js
enter
add
cmp
inc
mov
sbb
cwtl
and
pop
subl
call
mov
test
mov
aaa
std
loop
lds
xor
jnp
mov
xchg
aad
jg
stos
div
lret
sub
decl
add
ds
jae
pop
add
pop
cmpsl
inc
inc
pop
fmull
cwtl
adc
pop
pop
xchg
and
outsb
mov
test
fldt
adcb
int3
mov
les
mov
xchg
into
jns
xor
dec
fildll
ljmp
xor
or
into
pop
jmp
inc
jb
mov
mov
adc
mov
jge
das
movsb
mov
and
xchg
cmpb
adc
das
daa
cltd
rorl
out
jns
jg
lds
out
fnstcw
out
mov
mov
test
pop
xchg
sahf
stos
js
shrb
mov
rolb
int3
dec
push
mov
mov
int3
push
mov
insb
ljmp
jl
adc
pop
fsub
aad
push
pop
mov
pop
add
xchg
or
scas
mov
js
add
idivl
test
fsubrl
lret
xchg
call
xchg
or
sbb
popa
adc
pop
xor
push
cld
xor
and
repz
jge
mov
adc
stos
sub
push
icebp
lret
lret
push
pusha
add
add
fidivrs
sbb
push
js
inc
shlb
sbb
inc
inc
ja
ljmp
or
jae
leave
jns
js
rcr
das
scas
dec
inc
adc
mov
repnz
sahf
movsl
xchg
add
scas
scas
adc
lcall
rorl
insb
xor
js
xlat
ret
dec
jmp
insb
inc
test
insb
adc
fucomi
out
jl
inc
jae
push
add
inc
cmp
mov
repz
xlat
and
and
mov
pusha
lcall
das
mov
push
nop
or
adc
int3
jae
scas
add
es
imul
jb
adc
pop
dec
add
stc
rorb
bound
daa
loopne
inc
mov
lds
test
out
movsb
shll
add
imul
pushl
xor
jno
data16
jne
mov
add
mov
push
ss
add
mov
out
outsl
xchg
dec
pop
ret
dec
sbb
test
lock
inc
sahf
fists
push
testl
rcrb
mov
mov
xor
dec
adc
xchg
dec
pop
shl
pop
jl
xor
and
aaa
sbb
fwait
loopne
inc
pusha
mov
cmp
pop
jmp
cwtl
sub
imul
fdiv
or
lds
inc
push
aas
cmp
lahf
push
cmp
mov
and
std
sub
sbb
sbb
adc
call
cmpsb
mov
cmp
push
sub
or
rcrb
xchg
jbe
or
inc
mov
fwait
xor
cmp
jnp
sbb
punpckhbw
btr
cmovb
push
lahf
scas
fwait
push
test
bswap
xchg
xchg
out
std
add
sub
cmp
popa
rol
push
push
jmp
repz
xlat
filds
pop
push
mov
das
jnp
mov
in
or
out
bound
fwait
es
clc
dec
inc
inc
inc
insb
dec
aad
fmull
xor
push
clc
daa
fcom
bound
insb
pop
cli
mov
or
adc
push
insb
and
xor
cld
jns
ror
test
bound
cwtl
and
pushf
pop
inc
loopne
push
mov
mov
push
sbb
jecxz
mov
cmp
adc
cmpsl
sahf
inc
lcall
or
rcrl
adc
ds
sarb
test
gs
lret
les
xchg
sub
inc
inc
mov
mov
mov
mov
shlb
push
add
dec
inc
pop
xor
mov
jae
pop
xchg
daa
arpl
and
and
ljmp
pop
xchg
mov
xchg
lret
fisttps
mov
mov
neg
pop
outsb
sahf
inc
xor
test
imul
clc
out
sbb
les
add
pop
daa
jmp
inc
pushf
xchg
sti
in
lea
out
xchg
loopnew
test
inc
push
sti
push
pop
rcrl
ljmp
shlb
jbe
dec
hlt
or
loope
mov
inc
adc
rorb
cmp
mov
xor
sbb
xor
xor
bswap
sub
cld
inc
mov
push
sbb
scas
addr16
jp
cmp
xchg
mov
push
addr16
adc
mov
and
cmovs
inc
shr
outsl
in
mov
adc
insl
jnp
ljmp
arpl
lret
fcmovnu
sbb
iret
xor
cmp
jg
clc
push
pop
mov
xlat
rep
movsl
inc
mov
cmp
shlb
or
push
arpl
jno
in
and
je
stc
xor
dec
mov
call
sti
sahf
mov
sbb
shlb
scas
xchg
daa
pop
jg
xchg
pop
cmp
dec
inc
mov
jecxz
xchg
push
repnz
rcl
les
add
push
mov
sub
push
ljmp
jp
lds
xor
xchg
stos
rolb
add
xchg
pop
sbb
jns
sbb
sahf
cmp
mov
lods
cmc
sti
sub
mov
and
mov
mov
dec
or
mov
and
mov
clc
jecxz
cmpsb
in
in
sbbl
and
sarl
dec
mov
inc
cmpsb
call
push
test
sub
pop
or
jns
xchg
cs
sub
inc
jno
out
stos
cltd
mov
cs
lea
mov
shl
add
loopne
cs
scas
outsb
sub
sbb
sub
lock
mov
enter
pop
jne
mov
or
aam
repz
mov
bound
jo
sti
inc
mov
jnp
nop
cmp
outsl
push
xlat
add
mov
pop
xchg
pop
out
push
xor
repnz
cmpsb
aad
mov
mov
jmp
and
and
add
test
in
cmp
jnp
jge
pop
ss
popf
fbstp
add
xor
nop
sbb
fcoml
sub
subb
lret
pop
and
jmp
mov
mov
cmp
inc
cmp
sbb
adc
push
mov
sbb
shll
adc
jp
daa
adc
aas
or
cmp
out
xor
out
fidivs
fildl
lds
ret
jne
adc
mov
add
enter
pop
addl
lock
inc
ljmp
mov
fdivrs
mov
inc
sub
icebp
push
repz
and
ret
out
jge
sar
outsl
xchg
test
or
add
push
xchg
int3
test
scas
stos
jecxz
push
scas
jecxz
popa
test
dec
test
sti
xlat
xchg
jnp
mov
lret
outsl
mov
in
push
out
jb
stc
ud2
add
insb
dec
aad
pop
mov
in
lea
sub
inc
pop
shrl
xor
mov
adc
les
icebp
fstpl
movsb
push
std
mov
pusha
or
mov
fldt
mov
xor
inc
xchg
lret
dec
ja
pop
push
cmp
call
and
jne
mov
mov
push
out
cmp
stos
mov
vpunpckhwd
out
pop
repnz
lods
pushf
fldenv
dec
xchg
repz
pushf
rcl
add
test
xchg
nop
in
loop
push
sbb
mov
xor
mov
sub
cld
push
or
pop
lcall
push
sti
mov
sub
lds
pop
add
loopne
call
cmp
test
mov
sti
sbb
sbb
pop
ss
pop
lock
mov
mov
xchg
cmp
or
mov
add
out
outsl
cld
add
lea
cmp
loope
cmp
ljmp
stos
daa
repz
and
rcr
inc
add
push
push
adc
out
gs
gs
sbb
std
jns
scas
jp
or
mov
jno
popf
mov
shlb
andl
mov
cwtl
test
sbb
adc
loope
movsb
test
mov
aam
add
xor
out
sbb
out
push
xor
sub
cmpsb
adc
mov
dec
cmp
mov
jmp
insl
push
dec
pushf
add
jecxz
das
out
mov
shr
sbb
outsl
mov
mov
out
adc
lds
sar
lcall
sub
pusha
jno
data16
jg
pop
lret
imul
or
lock
xchg
push
out
mov
pop
les
ja
xor
mov
test
adc
ficomps
int
jp
dec
imul
leave
dec
mov
pushf
ljmp
rclb
out
test
mov
mov
mov
fnstsw
sbb
xor
push
sbb
dec
out
popl
addr16
cmpsb
pop
ss
mov
pop
data16
fmull
in
out
sbb
daa
mov
or
fistpl
fsubs
imul
push
cs
popa
outsl
add
cmc
dec
sub
jge
jmp
cli
fwait
hlt
xor
add
mov
mov
scas
lret
rcl
popa
sbb
loope
mov
dec
ficoms
dec
cmpsb
mov
inc
sub
into
xchg
fstpl
cwtl
imul
rcrb
pop
lcall
xchg
mov
mov
insb
and
ljmp
data16
pushf
cmpsb
rcrb
mov
push
sbb
mov
pop
adc
xchg
test
inc
jg
rcl
pusha
or
adc
cli
push
movl
jae
xor
and
and
xchg
pop
sub
daa
push
mov
into
push
push
pop
icebp
sub
adc
mov
cmc
popf
push
sbb
stos
mov
sub
out
ss
push
mov
xchg
dec
add
aad
push
data16
ja
add
xchg
jp
mov
pop
adc
cmp
jnp
sub
insl
in
mov
aas
outsl
adc
adc
aas
mov
sahf
mov
call
ret
add
cmp
cmc
lds
jmp
mov
inc
dec
mov
ss
pop
sti
test
repnz
dec
add
mov
mov
inc
jle
mov
imul
cmp
or
cmp
dec
and
push
imul
mov
pop
ficomps
ret
int
int
mov
mov
push
push
adc
adc
adc
test
sti
cld
lods
dec
or
insl
mov
cli
mov
ds
mov
aam
push
mov
ss
xor
add
movsb
test
stc
jecxz
imul
mov
sub
lock
pop
inc
cmp
jl
jo
inc
ja
inc
xor
inc
pop
out
pop
repnz
jecxz
jo
dec
bound
lods
add
insl
ds
push
adc
pop
and
fs
sub
mov
addr16
call
hlt
pop
stos
insb
test
inc
movsl
mov
ljmp
lcall
xor
aam
mov
lds
jae
xchg
pop
hlt
push
out
or
ljmp
rolb
stos
fldt
scas
scas
mov
lock
cmp
push
dec
sub
outsl
push
mov
sbb
mov
adc
pop
scas
cmc
pop
inc
mov
je
in
adc
clc
sub
mov
adc
repz
mov
add
fadds
sub
pop
mov
adc
cli
aam
aas
mov
dec
mov
icebp
dec
add
push
dec
arpl
sub
sbbb
mov
inc
push
add
std
mov
mul
faddl
sbb
in
fldt
add
gs
adcl
add
sub
jno
adc
ds
lds
enter
rol
pop
cmovg
in
shl
jge
mov
iret
addr16
jnp
and
xor
mov
mov
sbb
mov
pop
into
mov
xchg
pop
xchg
xchg
repnz
mov
dec
nop
cwtl
jno
inc
lcall
jbe
popa
out
or
and
lret
nop
icebp
jecxz
xor
jno
mov
int3
sbb
cmp
mov
or
adc
add
sub
gs
dec
jp
push
shll
mov
jmpw
addl
stos
push
xchg
repz
rcl
mov
mov
fidivrl
das
cld
test
lods
in
and
ljmp
pop
shl
mov
xchg
das
scas
jbe
mov
push
sbb
outsb
sahf
pop
push
push
xor
push
lods
vcvtpd2psx
lret
or
mov
jno
mov
daa
mov
out
arpl
fnstsw
cmpsl
lcall
xor
xchg
mov
add
int3
jg
clc
jne
enter
bound
mov
jno
dec
leave
test
icebp
dec
mov
or
ljmp
cmpl
dec
mov
xchg
mov
into
pop
ja
mov
xchg
cld
add
aam
popf
lahf
call
movsl
xchg
pop
ljmp
xchg
mov
not
or
icebp
sbbb
loop
mov
cwtl
int
clc
scas
pop
cmp
lret
add
xchg
xchg
xchg
mov
test
in
push
mov
xchg
inc
mov
out
pushf
insb
in
lahf
add
mov
filds
mov
mov
cmp
clc
cmc
fwait
mov
pop
jecxz
mov
arpl
lock
sbb
xchg
lret
in
inc
xchg
outsb
inc
jg
cmpsb
push
push
jge
stc
or
cwtl
divb
in
xchg
mov
out
arpl
cmp
mov
shrl
and
sbb
dec
xchg
xchg
rorb
scas
cmp
jns
pop
sbb
jnp
cmc
pop
pop
sbb
cmp
mov
push
and
adc
mov
or
xor
sbb
xchg
mov
dec
xchg
aas
sbbl
test
xor
in
cmp
xlat
pop
inc
cmp
dec
test
add
out
adc
push
xchg
cld
mov
leave
fsubrl
out
inc
sub
cmc
push
insb
enter
mov
sbb
decl
subb
cs
add
js
addr16
pop
dec
sbb
pop
or
lock
push
adc
inc
push
hlt
lcall
push
xchg
nop
ljmp
arpl
rorb
lods
jmp
call
aam
rclb
mov
lock
cwtl
xchg
sbb
dec
sbb
popf
pop
stos
mov
mov
xchg
ret
fildll
add
add
mov
xchg
mov
and
adc
lds
dec
test
add
lods
scas
push
push
mov
mov
push
out
ds
or
ret
arpl
cltd
xor
addr16
cmpsb
cmp
aas
sbb
popfw
mov
mov
testb
mov
ret
add
add
imul
jge
fsubrs
fwait
and
sbb
xchg
dec
mov
cltd
xchg
mov
adc
and
jl
aad
outsb
or
inc
mov
inc
btc
test
mov
in
mov
sub
mov
outsb
push
inc
and
cmp
out
gs
fxch
loop
test
add
bound
mov
cmpsb
mov
call
hlt
mov
insl
test
addr16
adc
pop
jecxz
fsts
addr16
jl
sar
xchg
xchg
outsb
ds
sti
test
lcall
test
cmp
int3
dec
lcall
fbld
jno
dec
mov
cmc
fwait
cmpsb
mov
clc
testl
mov
call
push
and
sarl
sbbb
arpl
jmp
inc
inc
scas
repz
aad
push
pop
push
call
inc
lcall
imul
add
add
je
or
hlt
mov
mov
jnp
and
cwtl
ss
xor
cmp
cld
pop
xor
stos
pop
and
push
add
aad
rcl
xchg
or
aaa
push
addl
cmp
mov
sbb
movsb
xor
mov
add
pop
mov
xor
jg
shl
lods
dec
mov
rcrb
into
gs
jp
test
inc
sub
aaa
aad
dec
aaa
sbb
movb
inc
dec
ljmp
xlat
imul
lods
jb
pop
push
xor
movsl
sbb
ljmp
push
adc
add
push
adc
sub
ret
popf
pop
mov
mov
loopne
repz
push
fldt
test
jnp
nop
pop
sub
int
div
enter
stos
fwait
stos
sahf
mov
sti
jecxz
aam
xor
gs
push
lock
jae
dec
cltd
popa
cmp
insb
int3
and
fnstenv
xor
push
xor
add
adc
sub
sar
in
int
movsb
loope
ret
imul
xor
data16
insl
int3
and
jg
mov
inc
xor
push
das
jge
inc
cld
mov
scas
and
xlat
sbbb
test
or
fsubs
js
or
cmp
hlt
adc
lea
dec
psubusw
inc
adc
mov
sbb
mov
jns
inc
clc
icebp
fs
sub
test
sahf
xchg
xchg
push
rclb
push
adc
mov
push
mov
aad
inc
out
or
out
mov
pop
stos
dec
test
jmp
fs
cmp
sub
aam
add
xchg
sbb
in
lods
popf
mov
lret
mov
out
repz
ret
mov
xlat
inc
rcrb
gs
dec
test
xor
cmp
mov
dec
push
jecxz
xchg
fidivrs
jns
dec
cmp
cmp
xor
cmpsb
cmp
out
ja
add
pop
mov
mov
in
les
push
mov
in
pusha
mov
xlat
stc
pop
jge
out
push
and
stos
jns
cmpsl
fbstp
xchg
push
mov
inc
sbbl
ja
cmp
mov
push
flds
ljmp
or
into
addr16
add
das
adc
pop
movsb
jg
sub
sub
ljmp
filds
fmull
push
sahf
leave
jl
addr16
lea
inc
sbb
adc
pop
push
pop
mov
jg
inc
sbb
adc
add
in
or
sub
xor
mov
inc
mov
jmp
jle
and
scas
jge
cld
cwtl
inc
and
adc
imul
repnz
xchg
jecxz
popf
test
cmc
and
jp
mov
cmp
push
adc
xor
xchg
or
cmp
and
testl
imul
jno
xchg
repz
or
add
and
loope
inc
decl
lret
sbb
gs
sti
in
pop
inc
mov
sbb
jg
inc
jbe
jbe
pusha
ljmp
shrl
jb
mov
ret
mov
pop
aaa
popf
pop
mov
insb
inc
push
shrl
scas
pop
push
imul
sbb
and
jg
pop
aad
ja
xor
lds
imul
ljmp
sbb
jno
mov
mov
testl
mov
sbb
sub
call
ja
enter
push
mov
jne
out
repnz
pop
ja
lds
jbe
mov
xor
call
mov
pop
xchg
addb
icebp
push
in
mov
inc
push
add
mov
mov
out
inc
shr
cmpsl
jp
addl
add
adc
cmp
test
sbb
jg
mov
inc
pop
jg
xorl
fildll
push
sbb
inc
and
sub
xchg
mov
push
pop
test
pushf
dec
mov
sbbl
sbb
cmp
mov
std
jns
push
loope
mov
iret
fs
cmpsb
int
jg
and
pop
sub
inc
and
inc
fs
not
mov
push
pop
mov
xor
lods
mov
push
xchg
push
xchg
xchg
in
nop
faddl
imul
js
sbb
sub
ficoms
and
adc
scas
xchg
jge
xorb
cmp
push
push
and
jecxz
mov
bound
mov
popa
sbbl
into
imul
adc
mov
orl
cmp
pusha
xor
ja
cmp
inc
xor
push
addr16
popa
in
ja
mov
dec
or
jecxz
sub
ret
clc
or
lods
ljmp
imul
dec
push
sub
hlt
cmp
movsl
clc
mov
out
lods
js
je
outsb
xchg
sti
mov
pusha
sub
lock
aam
ja
or
lret
push
int3
inc
xor
jnp
jnp
hlt
xchg
jle
pushl
pop
and
popf
pushf
xor
jge
in
ret
jno
cmp
jno
repnz
jecxz
xlat
dec
push
xchg
push
aas
std
sub
jno
or
mov
push
sub
mov
fistps
mov
icebp
daa
jno
jecxz
dec
mov
or
jnp
das
mov
adc
out
iret
aad
xchg
mov
lret
mov
loopne
mov
leave
sti
mov
pop
in
and
sub
jnp
ret
jae
ss
mov
hlt
mov
pop
hlt
lock
test
mov
xchg
out
xchg
dec
out
insb
andl
mov
add
stc
jp
dec
cmc
loop
and
dec
mov
hlt
loope
xchg
ljmp
mov
push
sbb
sub
jne
in
outsl
je
xor
rcll
inc
inc
faddl
sbb
cs
gs
and
push
arpl
stos
and
xlat
mov
je
outsl
add
mov
inc
add
shrb
icebp
test
insb
mov
jb
xor
shl
dec
std
and
pop
mov
ljmp
nop/reserved
scas
inc
repnz
xor
adc
xor
cld
lods
and
in
mov
add
pushf
mov
sbb
rcr
adc
sub
sub
adc
adc
vpsraw
insb
sub
or
jmp
push
jne
sub
push
aas
shlb
movsb
repnz
dec
jb
cmp
dec
mov
mov
int
and
adc
inc
js
aas
xchg
aas
adc
jecxz
push
xadd
jns
sbb
mov
mov
mov
and
push
subl
sub
xor
push
jg
orl
lret
add
mov
fwait
jg
ret
popa
adc
xor
dec
adc
les
lea
imul
repz
repnz
pop
clc
mov
cmp
xchg
mov
fists
incl
xor
lahf
and
loop
cmp
fiaddl
mov
sbb
testb
icebp
mov
mov
lret
pop
arpl
mov
add
ljmp
add
dec
xor
push
std
push
and
cmp
mov
mov
push
aaa
sbb
sbb
stos
testl
in
xchg
stc
or
pop
pop
mov
xchg
jnp
jns
xchg
daa
add
std
sub
pop
xlat
fcomp
lods
cmpl
sub
mov
gs
mov
mov
subb
arpl
inc
push
ficoml
pop
add
mov
mov
loop
lods
leave
jmp
jmp
mov
sbb
hlt
pop
push
pop
shl
inc
pushf
test
dec
repnz
sub
lcall
xchg
push
sti
mov
push
mov
fsubrs
mov
pop
out
fs
push
mov
jbe
aaa
add
push
xchg
mov
or
pushf
gs
dec
cltd
sub
ss
cwtl
mov
das
hlt
cmp
cmpsl
push
loop
sub
pop
jbe
and
leave
bound
and
ret
jns
push
testb
sub
sbb
and
repnz
ds
or
dec
cmp
ret
inc
jns
nop
rcr
popa
dec
push
test
addr16
xor
jns
sbb
test
adc
mov
or
ds
rol
in
pop
shl
daa
cmp
fnstsw
add
aaa
jnp
fbld
fs
sti
std
pop
mov
xchg
shlb
xchg
ret
sub
push
lock
push
xchg
ss
outsb
rol
sub
cmp
das
sahf
adc
sbb
xchg
pop
aad
sarb
sbb
push
jl
xchg
hlt
jnp
xchg
into
mov
ja
icebp
pop
or
addr16
repz
lods
push
popf
adc
push
add
pop
fsubl
stos
jmp
scas
lret
loope
xor
sub
push
ret
fcmovnb
test
add
popf
rolb
insb
xor
push
pop
fisubs
iret
hlt
inc
insl
fs
dec
arpl
andl
or
es
insb
fucomp
jg
and
je
std
push
or
les
xchg
mov
movsl
int3
mov
push
xchg
jmp
xor
mov
dec
and
aas
inc
adcl
adc
fnstcw
add
ret
xchg
xor
je
fdiv
cwtl
jb
and
mov
shr
mov
sbb
xchg
jne
iret
scas
xchg
int
ds
push
cli
popa
imul
lret
ret
mov
fistpll
dec
popa
cmp
cltd
fwait
push
leave
jbe
pop
ret
mov
mov
sbb
jecxz
sub
fsts
sbb
push
and
xor
mov
pop
dec
repz
mov
test
add
int3
icebp
mov
sbb
sbb
scas
scas
insl
pop
in
outsb
push
and
and
rcl
mov
insl
xchg
loopne
cltd
les
js
imul
mov
imul
test
adc
fcmovu
das
insb
jmp
jmp
xchg
jmp
xchg
pop
jnp
test
ljmp
insb
xor
push
dec
dec
pop
imul
mov
aaa
mov
push
ss
inc
enter
shlb
adc
nop
cli
scas
or
jmp
dec
dec
stos
mov
fbstp
adc
push
jo
pop
push
cmp
inc
xlat
add
pop
inc
clc
xchg
mov
pop
sar
xor
js
out
sbb
mov
and
icebp
mov
dec
out
sub
dec
sub
scas
ret
outsb
enter
fsubl
push
adc
mov
jp
mov
lock
int3
jae
push
dec
cltd
cmpps
sub
fwait
mov
sti
xor
sub
push
imull
call
addr16
stos
adc
test
test
ficoml
or
aam
int
mov
mov
mov
je
pop
mov
int3
shl
xor
adc
in
arpl
inc
jmp
jns
ss
pusha
lret
pop
dec
fdivl
fsubrs
inc
cmpsl
arpl
pop
cs
and
and
stos
xchg
hlt
mov
mov
inc
cwtl
fmull
imul
sti
lods
popf
pop
loope
cmp
mov
shrb
mov
cmpsb
adcl
and
mov
adc
sbb
ljmp
dec
out
int
lahf
xchg
sbb
sbb
lret
inc
push
cmp
fdivs
scas
push
cli
je
sti
and
and
in
cmpsb
lods
cmp
cmp
sub
push
popf
mov
outsb
cmpsb
ficoml
mov
fidivs
daa
stos
xlat
xchg
jne
fimull
inc
aaa
mov
iret
mov
sbb
sarl
mov
cwtl
push
cld
xor
call
fsubrp
lods
xchg
mov
xor
and
dec
icebp
adc
out
sahf
inc
add
std
lea
jnp
xor
cmp
mov
enter
pushf
mov
xchg
mov
lods
jo
cmpsb
ret
lret
clc
clc
or
adc
sbb
sbb
push
icebp
mov
xchg
in
out
mov
or
ficompl
dec
cmp
jmp
xor
sub
lods
mov
mov
pop
mov
std
stos
xor
xor
aaa
or
mov
clc
mov
out
cmpsb
mov
sbb
mov
adcb
pop
fildl
in
in
cmc
int3
adc
repnz
mov
lret
xorl
sahf
pop
and
ret
mov
push
movsb
pop
call
jne
mov
dec
sti
mov
adc
lods
mov
cmpsb
movsb
mov
inc
mov
fisubs
pop
xor
popf
pop
mov
dec
jb
push
or
or
and
add
adc
add
mov
cmp
das
cmpsl
arpl
jmp
inc
orl
outsb
out
gs
call
add
push
jge
or
pop
or
and
xchg
fsubrs
xchg
mov
test
and
adc
xchg
lret
fldcw
jae
movsl
mov
and
daa
in
fcmovne
inc
lea
movsl
test
lret
cmc
add
jmp
repnz
mov
ret
mov
mov
sub
mov
test
inc
jne
data16
jnp
nop
out
mov
das
sbb
aad
fs
inc
and
addr16
enter
aam
xor
movsl
les
repnz
sbb
sub
mov
cmp
cmpsl
mov
xchg
jbe
push
pop
pusha
icebp
mov
cmp
jo
push
cmp
loopne
stos
mov
pop
mov
lret
mov
or
push
pusha
cs
jb
mov
hlt
xchg
lea
xchg
mov
mov
in
dec
ds
adcl
sbb
jmp
cmp
subb
sbb
lods
add
jl
jl
dec
mov
add
cmp
inc
sub
mov
mov
cmpsb
ret
adc
fcompl
xchg
shll
cmp
fnsave
into
add
into
cmp
xor
xchg
ljmp
add
mov
daa
addr16
aam
icebp
into
ficoml
xchg
std
mov
cld
repnz
ret
loope
repz
mov
test
jo
push
push
cmpsb
cmp
xlat
inc
cmp
push
inc
pop
mov
dec
mov
sub
je
popa
lret
ret
sub
addr16
add
ja
or
sahf
outsb
or
dec
popf
fwait
lcall
fsubrl
lret
in
and
sbb
mov
or
ret
pushf
in
insb
adc
addr16
xor
adc
sub
and
xor
test
xchg
sub
cld
insl
into
push
push
ret
int3
pusha
mov
imul
sar
mov
sbb
xlat
lea
pop
test
or
stos
or
and
or
fidivs
movsb
dec
push
cmp
adc
gs
adcb
mov
or
icebp
or
hlt
pop
dec
pop
clc
loopne
sbb
mov
mov
dec
sub
adcl
or
fmuls
mov
pop
movsl
test
aam
cwtl
std
mov
or
jo
mov
adc
out
lcall
imul
lahf
sbb
rcrb
mov
bound
dec
mov
sub
jne
movsb
jb
gs
xor
gs
cltd
sti
cmp
or
and
push
popf
pop
jge
test
repnz
pop
fdivs
movb
dec
xchg
inc
lret
fs
or
or
mov
bound
or
pop
imul
dec
stc
add
stc
aam
dec
push
in
xor
cmp
into
cmp
xchg
pop
int
cmp
shrb
pop
fs
out
fwait
cld
in
inc
int3
bound
inc
mov
aam
dec
shll
sbb
mov
out
dec
sub
rcll
xor
aaa
movsb
cmp
lret
pop
push
mov
sub
mov
fxch
adc
fadd
add
repz
add
enter
mov
shll
in
push
fs
shrl
sbb
jge
pop
jecxz
fsts
decl
or
cmp
jno
fstps
or
test
in
sbb
add
adc
push
ret
add
lock
pop
mov
pop
mov
in
in
rorb
and
out
add
xchg
pop
lret
sub
aad
jmp
add
and
int3
inc
jo
cwtl
xchg
inc
jo
sbb
insl
adc
pop
and
or
xchg
and
std
jecxz
sbb
ds
pop
lods
sbb
cmp
repz
pop
fbld
dec
outsl
roll
jne
movsb
jb
imul
leave
cmpsl
clc
jb
cmp
add
das
jmp
scas
push
adc
push
pop
xchg
insl
jb
decl
mov
inc
pushf
mov
pop
addl
sub
push
dec
fimuls
pop
mov
loop
xor
test
pop
sbb
add
daa
div
cmp
jg
in
stos
cmc
lock
xorb
adc
adc
xor
push
push
fldt
mov
lcall
out
popa
xor
cmp
movsb
pop
push
fisttpl
outsb
cli
iret
aam
add
shlb
test
outsl
pop
cmp
dec
xor
cmpsl
mov
fisttpl
sub
iret
pop
xor
testl
test
stos
fisttps
jmp
into
in
mov
stc
mov
lcall
mov
dec
push
leave
dec
mov
inc
movsl
popa
pop
sbb
mov
jb
packssdw
add
xchg
and
xor
mov
pop
outsl
mov
movsb
mov
or
addr16
lock
or
adc
loopne
xor
in
sub
fiadds
shr
jns
dec
sub
in
lods
sub
dec
lahf
je
fdivrs
cmp
adc
js
mov
out
cltd
cwtl
or
fwait
add
in
std
aam
fwait
mov
dec
push
mov
enter
es
jbe
mov
stc
mov
xor
sub
out
call
cmpb
xchg
sbb
rorl
dec
insl
lret
sbb
fs
int3
lahf
push
pop
push
xor
aad
cld
pop
scas
out
fisubrl
stos
push
mov
pop
fisttpl
repz
in
add
mov
or
cmp
xchg
and
ror
pushl
jns
mov
jbe
push
loope
push
dec
and
nop
push
lea
sbb
sub
in
push
push
xchg
movsl
adc
mov
loop
lea
sub
dec
iret
pushl
adc
and
gs
xchg
and
loop,pn
insl
addr16
sti
daa
lock
mov
leave
mov
lds
popa
fadds
hlt
int
lock
nop
lock
std
cmc
in
push
cs
aas
ficompl
cmp
test
out
pop
loopne
int3
xor
mov
xchg
jne
sbb
in
stos
dec
pop
pop
adc
insl
repnz
pop
add
adc
insl
data16
xor
push
int
cmc
xchg
add
and
push
mov
lods
xor
sub
or
push
aas
mov
fs
pop
mov
dec
pop
scas
iret
les
pop
iret
pop
popf
out
cmp
nop
popf
cmp
loop
cs
push
jns,pt
setp
hlt
js
sbb
test
imull
ljmp
ja
cs
nop
add
xor
push
adc
js
adc
xchg
stc
mov
inc
mov
inc
pop
jmp
es
iret
sahf
push
insb
cltd
push
sbb
add
ret
out
addr16
sbb
call
sarl
cmp
dec
sahf
add
pop
jae
pop
dec
movsl
insl
mov
push
inc
ret
sbb
adc
sbb
mov
test
sbb
jns
pop
push
push
adc
pop
cld
xor
jecxz
mov
jb
pop
mov
iret
pop
fimuls
inc
sub
aad
call
push
loopne
mov
jns
xchg
cmp
mov
test
adc
cld
stos
jge
mov
pushf
xor
push
ja
mov
dec
imul
push
or
push
or
pop
es
jmp
sub
or
or
dec
adc
push
mov
jnp
lcall
mov
pusha
and
and
sub
jge
bound
mov
push
and
or
cmp
imul
push
data16
test
push
cmp
cld
add
mov
mov
mov
jo
xor
xchg
int3
and
xchg
shl
xchg
jae
mov
fsubrl
call
rolb
push
in
cs
push
dec
mov
fwait
ljmp
mov
mov
pushf
daa
pop
lret
sbb
mov
mov
jno
imul
rolb
sti
jne
insb
repz
cmp
gs
mov
enter
pop
jno
inc
mov
cmpsb
push
pop
inc
xor
add
jp
and
push
lret
xor
cs
mov
pushf
or
test
aad
push
sti
cs
jne
sbb
push
movntps
mov
add
jno
xchg
adc
xor
xor
jg
inc
sbb
and
sub
data16
mov
xchg
cmp
leave
fistpll
adc
repnz
mov
lret
jno
popf
rcll
dec
mov
ret
fistpll
test
add
xor
sub
sbb
mov
sbb
push
imul
adc
jb
repz
daa
lods
xchg
fldl
dec
mov
jne
fists
mov
push
pop
loop
sub
and
xor
lods
mov
mov
jno
push
or
lcall
popa
cmp
push
mov
fs
mov
pop
pop
sbb
and
dec
mov
insb
xchg
and
mov
mov
pop
cmc
mov
adc
or
or
sahf
sbb
fldl
adcl
cld
lock
shr
leave
mov
pop
repnz
sub
mov
rol
test
adc
std
sbb
inc
xchg
mov
inc
adc
mov
cmc
andl
in
je
js
add
or
outsb
jb
adcb
mov
add
cwtl
test
aas
into
pop
pop
mov
popa
sub
aam
dec
xor
testb
std
mov
sbb
pop
mov
mov
xchg
xchg
fisttps
jmp
sub
mov
lea
mov
pop
pop
ja
out
js
mov
xchg
push
xor
ds
or
mov
data16
call
std
or
out
add
pop
mov
popf
push
jb
mov
fstps
inc
sbb
in
push
lods
mov
cmpsb
leave
xchg
shl
push
arpl
pop
cmp
stc
mov
ljmp
cmp
mov
jl
ret
lods
cmpsb
stos
stos
and
mov
into
scas
xchg
jecxz
inc
arpl
jge
mov
fimuls
mov
daa
cmp
fwait
jecxz
outsl
mov
dec
sbb
cmp
aas
insb
push
or
or
mov
push
sub
daa
mov
mov
sbb
fldt
cmp
int3
mov
and
push
aaa
es
pop
pushf
idivl
adc
mov
push
mov
pop
lea
adcb
jb
jo
sub
cmpsb
imul
leave
jmp
loopne
cli
sahf
repnz
push
sbbl
sub
sbb
rcll
icebp
pop
out
jmp
iret
jle
div
lods
paddw
aam
mov
mov
adc
imul
sub
mov
jecxz
jge
pop
dec
sbb
mov
cmpsl
jg
lret
adc
inc
test
mov
pushl
out
mov
sub
push
repz
cmpsb
mov
ljmp
cmp
xor
pop
cmpb
sub
pop
in
lcall
aaa
movsl
dec
nop
mov
add
pop
loope
sbb
mov
aas
jne
out
pop
mov
mov
and
sub
mov
fwait
jle
push
adc
mov
sbb
mov
mov
in
push
push
jp
pop
scas
jne
pop
loopne
dec
sahf
mov
cld
jg
loope
mov
aad
cmp
out
aaa
out
add
or
cld
mov
jp
ljmp
mov
pop
mov
cmp
mov
call
and
or
and
repz
add
pop
jg
insl
insb
imul
lcall
pusha
pop
sbb
mov
insb
adc
adc
cmpsb
jbe
dec
xor
adc
mov
fisttps
adcl
push
aad
leave
call
pop
or
in
mov
and
xor
xchg
push
and
jb
jmp
dec
cs
and
and
xchg
shl
xor
inc
mov
int
loop
push
mov
pop
lahf
dec
adc
inc
outsl
mov
xchg
mov
and
fidivs
adc
aaa
ja
jne
mov
out
sub
sub
inc
mov
pop
cli
adc
lods
fstpt
out
push
sahf
xchg
sbb
pop
mov
out
pop
mov
jmp
ljmp
ret
mov
mov
scas
mov
clc
lds
mov
mov
mov
jnp
push
pop
dec
jmp
call
sar
scas
xchg
xchg
jge
or
fcmovnbe
cmpsb
in
pop
mov
bswap
popa
xchg
xchg
mov
xchg
and
movsb
int
fiadds
in
das
gs
std
cli
ljmp
test
jo
dec
add
mov
repz
fisubrs
xchg
out
mov
xchg
dec
pop
mov
in
mov
shlb
fsubrl
sub
js
xor
dec
lods
sbb
xor
out
jp
dec
sub
pop
imul
scas
lret
sbb
xor
sbb
xor
lret
lods
sbb
out
pop
cmp
imulb
jle
lret
lcall
into
call
insb
out
test
cmp
ds
dec
lcall
mov
jbe
or
lds
push
bound
test
dec
mov
aas
push
adc
inc
clc
mov
add
mov
mov
inc
sbbb
pop
in
bound
jle
and
test
test
push
mov
jge
add
pusha
and
xchg
xchg
cmpsl
shl
scas
fistps
lret
ja
lahf
xchg
cmpsl
sub
pusha
hlt
cs
addb
jg
mov
mov
call
sub
dec
adc
adc
jo
pop
adc
jl
xchg
jg
sub
out
jbe
loope
lods
sbb
mov
cli
jnp
stos
push
into
clc
or
aaa
and
iret
jne
push
inc
or
mov
pushf
sub
addr16
push
and
call
sub
xchg
std
movl
mov
sub
in
adc
sub
rolb
xchg
mov
out
andb
or
andb
cwtl
fistpll
xchg
cmpsb
and
jno
repnz
add
loopne
pop
movsb
sbb
hlt
daa
cmp
pop
adc
orps
mov
or
mov
mov
pushf
jnp
pop
sbb
add
sbbb
xchg
xchg
pop
sub
decl
test
std
sbb
mov
fldenv
out
mov
jecxz
jl
in
lds
pop
mov
test
adc
mov
in
pushf
pop
sbb
in
rclb
sbbl
fs
cmp
mov
inc
dec
xor
xchg
loop
push
inc
sbb
xchg
stos
dec
or
sahf
adc
in
mov
stos
popf
and
xchg
sub
jae
cmpsb
sarb
xor
fmul
lahf
bound
jmp
hlt
mov
popa
ja
push
pop
ss
fsubrl
scas
cmp
insl
jp
mov
inc
mov
stos
or
push
pop
into
mov
imul
mov
scas
jmp
push
push
push
and
xor
vpminsw
jmp
xor
sbb
les
xchg
fdivs
adc
mov
add
cmp
inc
into
outsl
loop
lahf
xor
push
in
push
fwait
push
pop
je
arpl
test
ss
movsb
clc
xor
dec
out
idivl
push
pop
dec
fwait
adc
mov
mov
out
or
or
xor
ds
in
jno
int3
imul
jmp
push
adc
cmpsl
aad
or
sub
cwtl
mov
loopne
movsl
push
adc
sbb
test
push
dec
add
iret
test
int
mov
push
dec
or
cli
mov
out
test
sbb
sarb
bound
lock
pop
out
cs
clc
loop
daa
out
neg
inc
push
xor
xchg
dec
pop
add
pop
push
lock
enter
lret
push
push
push
scas
out
call
sub
dec
andb
mov
out
das
daa
mov
cmp
cld
imul
mov
mul
xchg
test
or
xchg
mov
cmp
ja
pushf
test
loop
scas
pushf
ds
jge
jne
ss
push
pop
inc
loopne
ja
xor
data16
xor
loopne
int3
nop
daa
loopne
dec
cmpsl
subb
push
scas
in
fidivrl
into
push
loop
cld
sbb
push
mov
repz
xchg
add
lret
or
inc
insb
addr16
seta
push
inc
stos
lret
push
dec
pop
out
adc
cmpl
pop
std
pop
mov
int3
add
jmp
mov
std
dec
add
jns
xchg
cmp
push
fldenv
cmp
cli
bound
xor
ds
xchg
and
xor
jle
xchg
scas
adc
mov
push
scas
fnsave
lcall
pusha
in
push
and
das
aaa
testb
shlb
fldt
leave
call
xor
push
xor
inc
movsl
div
shll
cmpb
add
cmp
lea
fcom
out
pop
mov
push
mov
cmp
xor
jle
dec
fisttps
daa
in
cwtl
movsb
or
js
cmp
mov
jno
stos
xlat
daa
div
scas
mov
inc
mov
pop
movsb
mov
jb
add
dec
jg
dec
aam
or
or
push
or
cltd
icebp
pop
push
lret
inc
mov
shrl
lcall
adc
dec
or
or
inc
jle
cltd
testl
movsb
in
push
addl
add
in
call
in
add
jge
dec
mov
add
sub
cltd
xor
in
loopne
pshufw
call
and
fs
push
push
rclb
jns
inc
testb
stc
shlb
or
mulb
fldcw
push
shrl
dec
jmp
adc
fmull
outsb
iret
lods
js
dec
orb
call
add
adc
mov
cmp
pop
test
sub
call
fwait
in
movsb
inc
sarl
mov
inc
pop
ret
popa
dec
xchg
stos
jns
pop
aad
loop
cmp
xchg
cmpsl
xchg
pop
jp
jae
mov
test
dec
jg
mov
inc
mov
sbb
aad
xchg
movsl
cmpl
adc
mov
mulb
cmp
addr16
sub
pop
jmp
fisttpll
xchg
movl
mov
jo
inc
jge
leave
leave
in
das
insb
adc
into
mov
add
sbb
jns
dec
push
pop
pop
pusha
mov
sarb
scas
and
pop
mov
sbb
in
push
inc
dec
in
lret
stos
das
jo
or
mov
aas
incb
xor
lock
into
mov
cli
mov
xchg
leave
mov
inc
or
add
and
lods
fwait
aad
dec
add
incl
xchg
pop
das
movsb
and
lahf
stc
cmpsl
push
loop
js
test
xchg
aad
adc
mov
icebp
es
mov
sub
sub
mov
dec
fadds
jno
cmpb
sub
xchg
rcl
mov
sub
or
sub
pop
or
push
jo
lret
xchg
xor
xor
aad
aaa
fwait
leave
or
push
insb
inc
in
shl
jp
or
dec
push
cli
cld
movsb
outsb
or
xlat
mov
pusha
sbb
sti
xor
das
jbe
sbb
popf
push
lods
lahf
ret
cwtl
fucomi
dec
std
mov
popf
push
div
arpl
frstor
adc
shll
outsl
in
rcrl
inc
out
xchg
subb
ljmp
ret
pop
fldcw
addr16
pop
dec
sub
push
or
nop
sbb
cmpsl
pop
call
mov
add
addl
mov
pop
push
cmc
icebp
mov
sar
xor
iret
call
or
push
jg
hlt
mov
adc
pop
jecxz
inc
pop
jno
sub
push
enter
popf
or
mov
push
inc
scas
aam
loop
es
mov
mov
cli
loop
insl
and
xor
out
inc
repz
mov
incb
xchg
addr16
out
xchg
pop
ret
ficoml
in
adc
push
mov
inc
adc
sub
pop
push
dec
fsubr
jle
dec
add
dec
dec
ja
xor
dec
sahf
jg
mov
add
dec
sarl
into
xlat
and
test
jl
nop
ret
jmp
out
addl
lret
ljmp
ljmp
inc
aas
xorb
push
xchg
adc
or
pop
aas
add
xchg
stos
insb
xchg
ss
lods
xlat
push
fdivr
ret
mov
mov
and
add
cmp
or
and
inc
movl
rcrw
cmpsb
out
faddl
in
das
scas
push
ja
out
lret
jo
inc
sub
ret
inc
xor
cltd
cmp
mov
fchs
lret
fdiv
dec
inc
testl
xor
push
or
sarl
ficoms
and
jne
lcall
subl
imul
jecxz
push
cmpsb
punpcklwd
jecxz
mov
hlt
pop
test
in
loop
into
jg
jbe
int
fdiv
das
popa
pop
cmp
repz
jg
fldenv
divb
jne
testl
push
addb
cmp
repnz
mov
xchg
sub
repz
xchg
aas
cmp
pop
sbb
in
jbe
jns
testb
hlt
dec
fcmovu
loop
jno
cmp
fimuls
pusha
pop
dec
ret
into
mov
sbb
mov
subl
sub
or
and
std
sbb
fildll
sahf
jno
mov
mov
mov
aad
xor
ja
mov
push
int3
in
pop
cmp
pop
cmc
or
stc
insb
inc
and
fldenv
jmp
mov
addr16
dec
rcrl
orb
xchg
push
cmpsl
pop
aas
roll
dec
shlb
mov
popa
and
inc
sub
aad
hlt
test
int
fiaddl
lret
bound
or
push
fwait
push
aad
pop
xor
sub
cs
sub
dec
fwait
xchg
sub
insl
insb
cmpb
xor
xchg
jl
stos
pop
inc
daa
add
push
in
pop
push
push
or
ss
ret
sti
int
sbb
decl
jg
sbb
sub
push
std
inc
popf
shlb
ror
adc
jmp
jmp
adc
fs
mov
pop
push
cli
scas
jecxz
ds
test
or
or
loope
xor
loop
adc
subl
lds
ret
mov
pop
jo
mov
or
movsl
inc
lret
cmp
lods
int3
lahf
das
leave
incl
ljmp
call
pop
and
adc
adc
cmp
mov
mov
mov
js
shlb
jbe
cld
scas
cmpsb
lods
dec
push
cmp
outsl
test
call
mov
rol
xor
into
imul
pop
leave
pushf
or
push
daa
sahf
negb
xor
xchg
outsl
jnp
and
pop
insl
xchg
lahf
lock
push
insb
adc
ljmp
xor
push
add
mov
lahf
jg
in
push
test
and
add
movsb
cmpl
adc
xchg
push
test
adc
or
or
mov
sub
lods
scas
or
inc
xchg
stos
out
push
gs
hlt
imul
pop
lcall
sbb
lock
adc
jno
test
or
inc
mov
add
dec
push
mov
out
cmp
push
mov
push
jl
orb
scas
pop
cli
jnp
cmp
repz
push
inc
and
adc
fucomp
sbb
jae
lds
sub
mov
xchg
adc
jecxz
jl
jmp
std
test
sub
jecxz
sti
inc
mov
stos
mov
dec
add
imull
cli
test
clc
sbb
fwait
movsl
lds
inc
or
add
lods
mov
lock
lods
ds
loope
testb
fmull
dec
adc
repnz
adc
mov
pushf
adc
push
cmp
xchg
mov
xor
adc
ret
rcrl
lock
xor
push
and
andl
mov
lcall
cmp
pop
cltd
cmp
xchg
adc
push
pop
sbb
pop
pop
daa
cmpsb
cmp
stos
clc
rcr
xor
adc
pop
push
mov
outsl
fistps
pop
mov
into
shlb
ret
ret
cmpsb
fsub
dec
push
mov
pop
mov
xchg
push
rcrl
inc
nop
mov
push
cmpsb
push
ret
jo
pop
jmp
mov
andb
xlat
pop
sbb
pop
arpl
jmp
push
cmp
dec
icebp
insl
std
adc
test
loope
lcall
fsubrp
inc
jns
push
inc
into
mov
cmp
mov
mull
pop
and
test
jg
jecxz
fnstsw
sub
adc
jne
mov
scas
cmc
idivb
loope
adc
and
mov
xor
push
popf
xchg
pop
sub
int3
inc
jnp
add
es
stos
fcmovbe
rcrb
adc
iret
pushf
orb
imul
and
dec
push
shrb
out
dec
mov
shl
sub
pop
mov
ret
ret
xor
xchg
mov
inc
je
shl
je
sub
popf
in
cli
dec
xor
xor
jae
ds
stos
xor
lods
das
dec
xlat
jbe
xor
sub
lods
pop
test
and
leave
jmp
repz
test
divl
adc
push
loop
cmp
jo
lret
mov
push
leave
and
mov
inc
cmpsl
mov
dec
out
xor
adc
sub
js
in
mov
mov
mov
lret
fs
dec
int3
push
cmp
loop
sbb
jae
sbb
pop
std
xorb
inc
sub
ret
mov
xchg
inc
loopne
sti
cld
movsl
add
cmp
jno
xor
mov
and
cmpsb
mov
push
xor
sahf
xlat
push
dec
push
js
mov
xchg
add
popl
cs
js
adc
imul
pusha
xor
pop
cmc
mov
out
jg
shrb
popa
xchg
inc
dec
pop
lret
fisubrs
dec
scas
negb
test
test
notl
pusha
xor
repnz
push
add
jbe
push
inc
repnz
xbegin
lock
addr16
mov
clc
into
cmp
xchg
inc
mov
add
mov
inc
cmp
ja
inc
dec
ds
cmp
cmp
flds
es
sbb
mov
scas
ffree
cld
mov
sbb
roll
mov
pop
leave
pop
mov
ficoml
or
sbb
xor
push
aam
adc
push
push
push
push
cmp
lods
inc
cmp
push
jno
mov
or
mov
xchg
mov
ja
mov
repnz
test
adc
aaa
push
jp
dec
movq
jne
or
arpl
cmp
mov
sarl
add
mov
rcrl
push
cmp
mov
mov
inc
ret
ja
mov
push
stc
jne
jmp
loopne
jnp
jl
xchg
outsb
mov
cltd
cmpsb
fiadds
pusha
scas
imul
dec
outsl
adc
insl
sbbl
orb
out
adc
or
popf
sub
ljmp
lret
fsubrl
mov
adc
mov
jge
test
xor
sbb
jae
xlat
inc
test
out
aad
sbb
mov
and
ljmp
xchg
and
insb
loope
aaa
sub
jo
imull
mov
insb
mov
xchg
pop
sbb
jno
sbb
int
sub
cltd
mov
xchg
add
clc
push
bound
in
in
mov
mov
outsl
lock
mov
mov
lahf
nop
stc
xchg
loope
in
pop
cmc
push
push
ret
jge
cmpsl
sbb
gs
incb
lods
mov
mov
push
pop
dec
std
or
mov
push
cmc
int
mov
lds
sbb
jp
jg
mov
sub
test
or
int3
xchg
ficoml
out
pop
sahf
cmp
dec
outsl
int3
mov
inc
push
and
icebp
out
pop
sub
inc
fwait
adc
mov
shlb
mov
arpl
roll
das
sbb
mov
cmc
mov
outsb
cmpsl
into
push
subl
sbb
mov
push
lret
sbb
les
loopne
inc
into
and
imul
scas
sub
and
cli
or
mov
test
jne
jp
dec
rorl
cltd
adc
mov
lea
cmpsl
push
jl
ds
xchg
push
in
and
addr16
xchg
rcl
fldenv
sbb
fmul
jb
pushw
cltd
xchg
push
jo
rcl
pop
sbbb
sbb
out
jns
clc
or
or
in
dec
fbstp
cmp
jno
adc
sahf
xlat
xchg
dec
js
dec
xchg
sub
add
push
lahf
enter
fcom
sub
and
adc
and
movsb
jns
es
loope
test
pop
cmpsl
popf
sbb
popf
inc
xchg
mov
lcall
mov
fwait
movsb
mov
loopne
jo
in
test
push
shl
mov
stos
dec
jbe
push
inc
xor
cs
clc
imul
xor
adc
adc
sbb
cltd
and
mov
or
mov
daa
mov
mov
jbe
in
adc
jg
push
ret
js
ljmp
or
mov
addr16
outsl
setne
mov
les
bound
add
sbb
adc
xchg
mov
push
jg
push
mov
jmp
and
or
add
sub
cmp
cmp
sbb
push
sub
scas
hlt
push
insb
scas
and
or
sub
ljmp
sbb
inc
loop
jl
jmp
sbb
std
test
xchg
out
push
and
mov
ss
clc
outsl
nop
adc
fistpl
iret
mov
add
sub
mov
daa
roll
insl
pushf
cmp
fs
pop
aad
js
in
sahf
sub
in
or
push
adc
shll
push
rcrb
xor
add
push
or
mov
gs
sbb
lock
fwait
xor
or
leave
cmpsl
push
add
add
aaa
lds
or
lods
out
mov
inc
jbe
and
pop
cmc
jmp
je
lods
cmpsb
aam
icebp
jno
dec
mov
fcmovnbe
shlb
jl
and
sbb
cmpsl
outsb
mov
pushf
mov
aaa
cltd
aas
inc
jbe
lahf
adc
push
adc
jns
and
dec
inc
clc
pop
mov
dec
je
jmp
mov
jbe
cmp
aas
xchg
clc
into
xlat
dec
cld
ljmp
mov
push
insb
lahf
lcall
enter
es
sub
cli
hlt
nop
in
in
adc
add
and
push
fisttpl
xor
lret
mov
clc
cs
inc
push
cmp
jmp
xchg
aam
leave
subl
add
mov
popa
mov
pop
push
fistpl
jae
addr16
and
into
test
push
test
loopne
pop
in
daa
push
aam
aaa
lds
dec
dec
inc
js
notb
pop
js
adc
int3
pop
add
push
inc
xor
xor
scas
scas
cmp
or
xchg
mov
lods
roll
sar
mov
stos
insb
mov
inc
mov
mov
push
add
dec
cmp
gs
imul
add
sbb
jae
sbb
cmp
rcrb
mov
stos
cli
and
pop
outsl
lods
adcl
jmp
outsb
push
dec
add
jae
ljmp
xchg
das
jecxz
addr16
lods
mov
in
push
jl
rorl
or
ret
ljmp
add
cmp
jb
je
pushf
dec
pop
sub
int3
inc
mov
lahf
sbb
enter
pushf
neg
ficompl
sbb
mov
push
mov
fisubrl
loop
adc
shlb
lods
push
sub
pop
inc
mov
popf
inc
testl
jmp
lcall
clc
pop
adc
adc
out
sbb
xchg
daa
pop
inc
mov
int
lcall
fadds
cmp
sbb
inc
imul
mov
push
and
mov
pop
xchg
sub
faddp
mov
cmp
sub
and
jae
xchg
or
icebp
xor
push
lods
sbb
lods
cmp
sarb
jns
cmp
sahf
push
flds
aam
rcrb
icebp
or
sub
push
test
sub
pop
adc
dec
sub
push
xor
jno
int3
fs
push
repz
mov
jge
or
mov
mov
pop
test
jl
rcll
mov
fisttpl
cli
iret
je
imul
repz
cmp
inc
jnp
xor
jl
mov
jb
repnz
and
arpl
sar
iret
stos
cmpsb
ja
fs
or
cmc
mov
jmp
int
fmull
lret
lret
inc
jbe
rclb
ljmp
jb
push
cltd
sbb
ds
cld
call
lret
xchg
push
ficoms
repz
frstor
jmp
incb
push
gs
lock
xchg
data16
xchg
stc
fistl
cmpsb
fs
pop
aad
cmc
je
dec
mov
arpl
xor
jl
arpl
sahf
lret
ret
cmp
loopne
pop
push
sahf
and
xor
mov
sbb
movsb
cmp
mov
sarl
aaa
or
addb
adc
out
jnp
adcb
out
mov
test
enter
aas
inc
jmp
push
leave
sbb
jg
jo
fsubrs
mov
aad
adc
dec
arpl
dec
es
rolb
cmp
mov
cld
or
cltd
xchg
addr16
bound
mov
sysexit
xchg
jl
mov
dec
xchg
add
mov
clts
dec
out
xchg
dec
dec
mov
inc
add
adc
jae
jle
sbb
inc
xlat
mov
jecxz
stos
sbb
or
mov
mov
fldl
movsl
repnz
cmp
pop
ret
cltd
ljmp
and
xor
and
sar
xor
mov
fs
lret
es
stc
adc
xchg
icebp
dec
or
sub
in
mov
push
int
shrl
je
xchg
push
xor
dec
test
dec
imul
fdivr
push
nop
scas
jle
inc
imul
inc
inc
pop
leave
push
jmp
pop
mov
orl
fyl2xp1
cwtl
dec
aas
add
popf
xchg
cmpb
sub
mov
xchg
sbb
push
cmp
cmp
ffreep
adc
fildl
inc
sbb
xlat
or
out
jo
test
and
test
jmp
push
add
sbb
dec
and
cmp
sbb
xchg
cmp
or
push
push
add
mov
inc
sbb
dec
leave
sbb
xchg
inc
mov
jns
jecxz
jge
jge
push
fs
xchg
adc
xchg
iret
lea
iret
movl
inc
pop
mov
inc
int3
test
push
push
addr16
cmc
test
insb
inc
call
pop
daa
mov
lds
shlb
js
mov
jmp
mov
mov
sbbl
xor
insl
les
and
add
push
mov
mov
dec
fbld
movsl
ljmp
mov
cmc
mov
lret
add
jle
lods
cmp
push
or
fs
cmp
sub
ss
adc
cli
push
sub
xchg
inc
stos
xchg
jg
add
pop
xchg
mov
pop
push
jbe
loopne
mov
inc
movsl
mov
push
cmp
push
and
cmpsb
or
push
mov
mov
pop
int
adc
dec
and
xor
xchg
or
mov
jno
lock
pusha
cmp
sarl
insl
sub
cmpsb
aaa
iret
sub
mov
dec
fnstcw
movsb
shll
lods
jmp
cmp
adc
and
call
out
push
pop
xchg
cmp
mov
xor
in
xor
or
nop
shl
ret
mov
adc
ljmp
test
mov
jbe
nop
sarl
cltd
ret
mov
push
lods
sub
aaa
aaa
aam
lret
cmp
cld
data16
adc
fstpt
add
loopne
cld
mov
inc
jae
and
out
pusha
push
push
test
es
pop
xchg
mov
icebp
into
das
mull
repnz
xlat
xchg
dec
cmpsb
fistps
adc
fidivs
sbb
shrb
jmp
cmp
out
ret
out
out
sti
fimuls
lock
imul
mov
insl
or
mov
sub
dec
ss
and
aam
dec
jmp
sahf
js
orb
adc
pop
mov
add
add
cmp
in
cltd
loope
pop
inc
std
pop
push
aam
mov
negb
icebp
jb
xchg
imul
sbb
dec
inc
cmp
jb
xchg
cmpsb
rorl
push
fucomi
inc
out
mov
and
shlb
bound
test
pop
syscall
add
enter
lret
lea
cmp
loopne
adc
add
or
icebp
mov
je
and
add
jmp
xchg
and
push
test
sub
lret
cld
nop
dec
leave
dec
sub
sub
scas
mov
out
aam
jp
inc
test
fisubl
lock
mov
xchg
aaa
lret
adc
aam
out
mov
or
sbb
push
movsl
sub
inc
cmpsb
popf
xchg
cmp
pop
dec
dec
pop
iret
movsb
test
xor
mov
sub
idivb
or
mov
loopne
sub
movsl
sub
push
fstps
sub
cmp
gs
or
push
mov
cli
imul
test
and
icebp
push
shll
fwait
movsl
lock
mov
aam
js
enter
sub
adc
adc
imul
in
sahf
push
jg
inc
add
lods
or
nop
cmpsl
xor
jo
mov
jne
pop
repz
jbe
in
xchg
adc
popf
push
cld
cmp
out
xchg
mov
jg
clc
imul
in
loop
adc
lcall
or
loop
sbb
pop
lds
fdivrl
leave
jmp
cli
int3
lods
add
or
pop
test
mov
stc
push
test
mov
lret
pop
add
gs
mov
call
pop
sti
and
adc
sub
cmp
out
es
mov
add
fldlg2
lods
insb
pop
mov
inc
mov
and
lahf
sub
je
and
xor
mov
clc
mov
loopne
pop
push
loope
or
fcoml
jo
andb
sbb
test
fdivrl
push
mov
and
lea
popa
int
dec
loope
pop
sbb
and
xchg
xchg
scas
nop
cmp
cmp
aad
fsts
or
lds
nop
mov
fisubrl
dec
repz
lock
outsl
cltd
sbb
xor
in
cmp
pop
cmp
mov
lret
lods
movsl
arpl
cmp
int
or
int3
testb
sahf
mov
xor
fcoml
add
sub
push
fcomps
stos
sti
test
inc
icebp
dec
and
mov
dec
outsl
push
xorl
mov
pop
or
data16
xchg
stos
mov
lahf
dec
xchg
pop
mov
lcall
pop
add
and
dec
rorl
xor
and
adc
sub
rolb
ret
sbb
mov
mov
ja
dec
cmp
pop
jecxz
jg
xor
mov
movsl
sbb
mov
lds
fcoms
lods
push
mov
dec
jae
movsl
inc
pop
repz
pushf
stos
dec
mov
push
js
addl
leave
sahf
rcll
repnz
mov
xchg
xor
xchg
adc
fsub
fsubrs
add
sahf
xchg
fisttps
addl
inc
bound
add
pop
pushf
dec
sbb
mov
and
add
push
xlat
call
pop
popf
cli
pop
sbbb
push
bound
hlt
inc
fs
push
clc
pusha
sub
pop
sti
mov
ja
lods
xor
shl
pop
xchg
mov
or
outsl
sti
sub
mov
jns
push
jo
cmc
std
adc
pop
adc
jae
push
dec
test
sarl
mov
sub
hlt
cltd
mov
pusha
jbe
cs
aaa
jno,pt
xchg
mov
fs
icebp
pop
mov
outsb
jb
insb
das
and
fldt
add
pop
stos
xor
xchg
lcall
bound
inc
pop
mov
and
add
ror
sbb
lret
ds
dec
xchg
xchg
push
lods
adc
iret
fcoml
cmp
dec
lods
pop
in
adc
adc
dec
push
push
xor
pop
and
std
in
mov
cltd
das
rorl
aam
in
dec
test
adc
ss
lret
push
push
clc
aaa
xchg
mov
or
pop
inc
jle
mov
mov
gs
imul
push
jle
repz
and
stos
mov
fmull
fldt
sbb
mov
fstps
mov
push
xchg
repz
or
cmovp
sbb
pop
push
lea
pop
cli
fsts
pop
lock
cld
jmp
pop
cwtl
inc
mov
mov
push
sub
mov
dec
cmp
pop
adc
jg
stos
xchg
iret
inc
loopne
scas
sub
dec
ffree
jg
es
cwtl
mov
les
sub
cmp
pushf
in
mov
addr16
mov
mov
mov
repnz
inc
mov
inc
frstor
xor
jle
iret
jo
dec
mov
les
int
das
into
test
sbb
dec
ljmp
mov
insl
dec
mov
adc
cltd
adc
out
jae
das
dec
in
fwait
and
push
mov
jno
adc
iret
sbb
jmp
or
and
ja
fs
jno
clc
sub
popa
test
fidivl
or
push
lock
add
mov
js
add
outsb
fisttpl
mov
sahf
inc
inc
inc
or
ljmp
push
lret
sbbl
xchg
inc
aas
push
add
dec
sub
sbb
fdivl
data16
add
or
pop
ja
insl
loopne
repz
fisttpll
mov
lret
pop
cmpsb
mov
adc
dec
push
xchg
add
push
sahf
mov
aas
add
aas
mov
rcll
cmp
push
push
ss
or
pushf
mov
sti
and
ret
jae
push
mov
in
pop
repz
stos
pop
jle
out
jb
jp
sub
mov
adc
sbb
lahf
dec
sbb
fs
jae
outsl
sbb
sub
mov
xchg
and
inc
shr
stc
adc
movsl
or
aad
or
mov
addr16
xchg
add
sbb
loopne
sbb
sti
and
xor
xchg
decb
mov
cmc
jg
dec
mov
arpl
mov
mov
incl
sub
inc
dec
test
xchg
xor
ljmp
add
rorl
mov
push
lock
movsl
mov
out
push
inc
or
outsb
into
or
sub
andl
sti
jp
lea
or
jno
cmc
nop
pushf
je
inc
inc
sub
test
jmp
enter
xor
loopne
rorl
jne
adc
push
outsl
jmp
leave
pusha
mov
lret
pop
mov
jbe
jg
xor
mov
cltd
mov
clc
ds
pop
stos
in
cmp
mov
shlb
jo
and
adc
jp
out
testb
dec
sti
sbb
lods
mov
je
dec
cmc
divl
cmp
stc
notl
xor
pop
jmp
dec
mov
pop
es
lea
stos
movsb
rclb
lret
push
pop
sub
xchg
shll
inc
or
sbb
adc
into
sub
jno
push
push
jmp
sahf
xchg
cmp
rcrb
sti
data16
or
jns
notb
in
sbb
pop
iret
sbb
and
or
imul
push
adc
push
sbbb
push
fucomp
mov
pop
cmpsb
mov
sub
clc
ret
push
cltd
pop
or
das
std
in
jae
mov
lret
jbe
leave
jp
daa
xchg
inc
push
adc
mov
mov
fistl
push
adcb
push
andb
and
repz
loop
out
or
xor
xchg
mov
push
xchg
popf
cmp
mov
inc
pop
outsl
loope
add
pop
push
cmp
sub
scas
jmp
movsl
hlt
inc
in
ror
push
jo
jbe
popa
imul
scas
xchg
into
imull
fnsave
dec
cmp
aam
add
xchg
lret
test
xchg
mov
mov
mov
xchg
inc
roll
push
std
mov
jno
cmp
jg
enter
mov
and
ficompl
mov
xchg
mov
aaa
xor
push
stc
dec
or
xor
mov
mov
lea
pop
xchg
inc
push
inc
imul
dec
test
dec
dec
adc
xor
popa
push
mov
fwait
cmp
push
test
mov
jge
dec
xchg
out
mov
sbb
sbb
icebp
add
repz
pop
scas
xor
cmpsb
sub
test
mov
sbb
add
ret
xchg
pop
inc
xchg
gs
pop
xor
in
in
out
pusha
push
mov
mov
jo
cmp
repnz
dec
pop
in
mov
adc
mov
pop
dec
mov
or
test
es
aas
xor
cmc
mov
cli
out
or
mov
add
inc
push
and
iret
mov
jbe
fdivs
bound
jno
cmp
mov
jb
xlat
push
jae
push
jno
rcrl
int
push
adc
int3
dec
sub
jne
insb
mov
aas
call
adc
ss
xchg
xchg
jnp,pt
xor
outsl
jb
push
mov
push
rcrl
fcom
fiaddl
test
and
xchg
pop
out
sub
jo
outsb
adc
cmp
dec
and
dec
cmp
subl
bound
or
test
jbe
push
xor
pop
or
dec
fsubrs
or
mov
dec
cmp
adc
inc
popa
xchg
lret
cld
jno
out
push
lea
push
loop
pop
sbb
std
mov
sub
adc
les
imul
hlt
mov
push
cmp
cmpsb
jno
lods
dec
add
inc
ds
stos
push
or
movsb
or
test
mov
aam
xchg
stos
addl
sbb
ljmp
jp
incb
mov
pop
mov
xchg
inc
pop
lea
dec
iret
mov
xchg
clc
test
xchg
out
mov
sbbb
dec
sbb
mov
repz
sti
mov
sbb
ret
dec
arpl
fs
xchg
add
xor
leave
out
cmp
mov
outsb
out
xorl
mov
lods
jo
imul
fcomps
push
jbe
daa
daa
mov
mov
jl
loop
out
mov
lcall
lds
inc
test
stos
jmp
out
call
sbb
in
pushf
data16
push
lcall
out
jmp
pop
push
dec
aad
xor
mov
movsl
adc
push
outsl
xor
mov
mov
jp
inc
xor
jmp
cmpsl
mov
xor
iret
out
push
dec
xchg
pop
scas
jo
leave
and
adc
mov
xchg
lret
mov
out
dec
ljmp
jnp
orl
xchg
and
fdivs
in
sbb
pop
sub
cs
cmp
push
stos
aam
cli
in
xchg
and
xor
sub
xor
mov
mov
pop
adc
pop
mov
cli
and
pop
shlb
loop
rorl
add
or
mov
pop
outsl
mov
adc
leave
test
jnp
and
xchg
popf
cmp
dec
pop
loope
and
or
and
lret
mov
jmp
cltd
outsb
xor
adc
fsubrl
add
sbb
cmc
mov
or
push
mov
mov
push
mov
dec
adc
hlt
mov
adc
loop
mov
jne
add
pop
jb
and
out
mov
xor
cli
mov
cmpsl
orl
xor
popf
scas
push
out
ljmp
push
adc
jo
or
outsl
lods
mov
jge
pop
xor
mov
imul
aas
pushf
xlat
sbb
ja
add
fisubl
call
notl
or
push
call
adc
push
sbb
fimuls
xchg
mov
gs
movsl
lock
mov
scas
sub
pop
adcl
out
push
cmpsb
inc
outsb
ficoml
pop
cmp
cmp
add
jp
lret
push
cmpsl
xchg
cmp
sbb
sub
stos
cmp
pusha
stos
movsb
loope
daa
inc
mov
adc
mov
xor
iret
ss
or
mov
adc
out
adc
xchg
cmp
pop
test
xor
or
mov
sub
ss
fwait
sbb
push
pop
cmpl
insl
lcall
dec
loop
ds
out
es
mov
pop
bound
mov
mov
jge
arpl
out
or
into
jb
cmp
repz
mov
sbb
aad
mov
mov
pop
xchg
daa
fsubl
mov
shlb
out
paddw
sub
push
mov
aaa
jl
popf
in
mov
jp
jnp
test
out
or
test
gs
adc
sbb
add
lock
add
es
push
adcb
jb
orl
jo
push
push
xchg
sbb
repz
xchg
call
pop
dec
sahf
call
test
sahf
ds
rclb
lods
mov
xor
imul
mov
push
ss
filds
call
add
aam
mov
je
dec
xchg
sub
cmc
subb
into
js
out
jle
addr16
sub
adc
leave
lret
pop
push
repnz
cmp
sbb
jae
cwtl
push
sbb
jbe
jmp
rcrb
enter
fdivrl
mov
add
clc
pusha
xorl
fcomps
mov
fldl
call
or
xor
popa
push
cmpsl
or
push
aam
in
cs
mov
hlt
add
and
popa
push
lret
push
jg
sub
mov
pop
pop
stos
loop
or
push
daa
test
out
pusha
mov
outsb
add
xchg
push
sub
aam
push
jg
mov
mov
jne
mov
sub
fnstcw
iret
js
lods
fstps
xlat
mov
and
sub
push
sub
cmp
inc
outsl
mov
inc
xor
sbb
push
frstor
adc
sub
lods
test
xchg
in
xchg
imul
or
xchg
gs
aad
cmp
mov
nop
xor
mov
adc
adc
lcall
std
jns
stos
mov
push
jae
aad
sbb
dec
outsl
xor
testb
loop
and
sbb
inc
fistpll
or
jle
mov
std
les
cs
imul
arpl
adc
adc
lret
push
popf
stos
clc
inc
repz
negb
sbb
push
adc
mov
mov
loopne
mov
mov
or
inc
add
movsl
fs
mov
mov
mov
pop
jle
scas
xor
jle
jb
aam
pop
push
push
fisttpl
dec
mov
popf
push
lret
js
xchg
aad
test
mov
sbb
out
inc
loope
adc
jbe
scas
jo
mov
add
ss
nop
inc
or
xchg
xchg
push
mov
dec
cmp
inc
xor
popf
lods
cmp
xlat
add
int3
mov
cmp
xlat
and
jmp
xchg
push
cld
add
sub
adc
int3
loopne
cmc
pop
stos
and
stos
fsts
cmc
or
movsl
aaa
push
jl
cmp
sbbb
fcoms
rcrb
dec
jno
fcmovu
pop
daa
or
mov
cmpl
add
mov
test
sbb
and
insl
loopne
xchg
xchg
es
push
imul
add
loop
test
das
jo
mov
add
sarb
rorb
sbb
adc
in
mov
add
popf
mov
test
adc
xchg
js
shlb
pop
jmp
push
adc
and
and
scas
or
insl
push
aas
in
pop
mov
fs
push
mov
roll
and
sub
dec
jnp
mov
test
hlt
ret
mov
cmp
xchg
mov
leave
ret
in
repz
arpl
jg
in
scas
loopne
mov
in
daa
cmpsl
ljmp
mov
imul
sbb
dec
popf
aad
and
mov
dec
mov
mov
jp
jne
sub
mov
xor
test
mov
hlt
cld
mov
or
xor
push
imul
push
adc
fldenv
loopne
add
xchg
cmp
in
adc
popa
push
nop
xchg
lods
sbb
lahf
pop
rcrl
test
dec
sbb
insb
ficoml
call
pop
xchg
mov
shlb
sbb
dec
ljmp
jge
ss
je
jae
loop
aad
cmp
add
push
sub
mov
pushf
cmpsl
loope
pop
sub
xchg
push
fidivl
and
inc
dec
inc
cld
jne
pop
fs
out
pop
aad
mov
movsb
rcrb
sbb
or
ljmp
inc
imul
cmpsb
cmp
sti
xor
inc
pop
xchg
push
and
dec
lock
ljmp
or
outsb
mov
fwait
outsl
pop
pop
rorb
xlat
xchg
push
fwait
lock
mov
push
jnp
push
push
inc
enter
fwait
pop
mov
dec
dec
stos
in
sbb
jl
ficompl
fstpt
and
cli
push
sbb
out
jno
jno
cwtl
pop
addr16
pop
scas
dec
pop
mov
inc
outsl
cmp
shlb
cmp
push
and
clc
fldl
int3
cld
test
je
xchg
push
fildll
adc
fwait
call
int
enter
xchg
hlt
repz
inc
mov
mov
out
popf
add
hlt
mov
sbb
test
leave
or
movd
cwtl
fmuls
mov
sbb
loop
mov
in
dec
inc
or
sti
lcall
insl
push
clc
in
addl
xchg
jne
rclb
ja
lret
call
test
addl
pop
icebp
sahf
sbbl
dec
xor
push
repz
in
je
mov
dec
sub
jae
loopne
mov
jae
fstp
outsl
inc
les
in
xor
add
pop
and
push
cmc
loopne
aam
in
jbe
fwait
aam
nop
mov
inc
aam
out
movsb
xchg
inc
add
inc
push
ficomps
mov
jmp
mov
iret
sub
jns
adc
sbb
aas
aaa
jo
cld
test
pop
push
inc
daa
inc
mov
pusha
loopne
jge
daa
leave
aam
sbb
pusha
icebp
nop
xchg
jge
idivb
jle
jp
iret
aas
jb
icebp
mov
pop
jns
jb
hlt
in
sbbl
jb
test
insw
sbb
mov
and
sbb
mov
and
popf
adc
dec
pop
arpl
adc
fsub
xchg
out
sbb
ds
loope
testl
lods
add
imul
jb
pop
cmp
loop
push
adc
xor
stc
sub
leave
out
dec
stos
push
lahf
xor
aas
or
jo
add
enter
mov
cmpsl
xor
jge
stos
adc
int3
pop
cld
inc
ret
orb
jne
and
scas
ja
mov
and
fadds
loopne
aad
lock
shlb
jl
mov
sbb
aaa
cmc
sbb
movsl
popl
and
mov
jns
and
fisttps
call
fisttps
pop
jge
movl
ljmp
inc
outsb
mov
or
xchg
push
loopne
sub
daa
cs
ret
fwait
cmpsb
xor
hlt
leave
lahf
inc
pop
add
sbb
data16
pop
sub
dec
outsl
ret
adc
jg
mov
rcr
scas
ds
js
pop
shrb
ficoml
call
rorb
push
mov
mov
mov
sbb
filds
lahf
sub
in
popf
push
insl
mov
push
sub
adc
mov
mov
mov
fstl
cltd
es
cmp
dec
int3
jecxz
repnz
inc
std
dec
mov
mov
xchg
pop
add
aad
cmp
fwait
lock
int3
out
sbb
xchg
mov
pop
and
dec
in
test
fs
nop
or
xchg
push
into
jns
jl
inc
out
fsubrs
aad
push
and
movsl
rorb
mov
mov
pushf
cld
add
enter
pushf
out
jb
sub
enter
and
loop
in
mov
dec
add
mov
pop
or
rcll
out
pop
inc
dec
push
add
shll
aas
leave
arpl
cli
pop
push
ja
adc
jne
dec
mov
sub
ja
add
mov
adcb
fistpll
icebp
aam
or
test
lock
aad
mov
mov
inc
push
loop
cs
loop
dec
cmp
loope
pusha
aad
in
in
mov
sbb
test
mov
out
enter
in
inc
xchg
out
aas
scas
out
sbb
mov
test
sar
dec
hlt
or
es
cmp
mov
cmc
stos
ret
fstpt
cmp
xlat
mov
testb
repnz
mov
lods
and
xor
in
cmovle
rcrl
push
or
je
andl
aad
or
add
mov
pushf
or
stos
jmp
mov
jae
push
mov
mov
les
ss
test
inc
daa
gs
push
adc
adc
push
cmp
clc
insl
xchg
cmp
mov
fidivrl
push
loope
mov
add
jmp
inc
data16
lcall
xor
sub
dec
pop
pop
stos
mov
in
mov
push
dec
or
jae
mov
jp
sbb
mov
insl
xchg
push
inc
xchg
repz
sbb
add
pop
sarb
mov
sub
cmc
hlt
pop
push
enter
ds
enter
lds
int3
cli
stos
push
lcall
dec
xor
push
or
push
and
cmc
stc
jecxz
mov
push
repnz
loopne
pop
test
leave
mov
xor
dec
jnp
lcall
in
je
lahf
xchg
cltd
in
pop
mov
sbb
pop
cmp
jecxz,pt
dec
loop
xor
pop
xchg
sbbb
insl
jns
negb
mov
repz
aaa
adc
xor
out
insb
push
pop
outsb
fadd
gs
jns
push
cmp
test
mov
xor
and
or
stc
sub
jns
cmp
test
pop
jp
xlat
inc
shlb
inc
xor
inc
or
aas
jge
cwtl
sti
mov
nop
sbb
and
fsubl
aam
out
decl
pop
push
fs
xchg
or
adcb
push
mov
lcall
sbb
push
fcomps
cmp
cmp
fs
sbbb
shll
int3
pop
push
push
out
fs
mov
dec
sub
xchg
mov
and
pop
fidivrl
pop
inc
push
jo
data16
push
or
fs
rcrl
out
mov
imul
push
push
aad
push
mov
or
inc
inc
pop
out
dec
and
movmskps
insl
pop
ss
fwait
dec
stc
pop
inc
leave
sbb
mov
fnsave
xor
cmp
mov
das
cmp
dec
movsb
jg
sbb
cmpsb
xchg
insb
and
mov
das
jo
shrl
inc
popf
adc
jmp
push
pop
push
jmp
adc
imul
insb
xchg
ret
jge
pop
aas
cmp
sbb
into
lret
mov
xchg
lods
or
push
es
sbb
or
sub
pop
pop
xchg
pop
dec
outsb
popa
pushf
or
push
lods
or
in
cmpsb
test
lea
repnz
xor
mov
ds
adcl
jl
dec
cmp
cmp
mov
fwait
in
inc
stos
sub
addb
mov
test
sahf
jecxz
cmpsl
repz
pusha
jo
popf
fwait
sub
push
cld
dec
movsb
in
sub
repnz
je
dec
shrl
jne
adc
jae
and
pop
je
stos
sbb
imul
cmc
arpl
xchg
add
mov
ljmp
cs
ljmp
xor
mov
icebp
jmp
insl
xor
fadds
xchg
pushf
xchg
jg
insl
cmp
je
sub
mov
out
inc
hlt
addr16
pop
sti
adc
dec
push
out
sbb
jb
push
jb
stc
call
xor
mov
rcrb
push
push
cmpsb
dec
fwait
hlt
call
data16
movsb
lea
jo
push
inc
jmp
inc
cld
mov
push
movsb
js
test
cmp
jp
popf
add
popf
out
lods
daa
repnz
fwait
loop
xchg
out
add
inc
push
nop
xchg
inc
adc
inc
rcrl
clc
or
mov
jno
hlt
cmp
inc
inc
push
rol
pop
fdivrs
push
in
mov
or
cwtl
add
insb
inc
xor
jns
dec
mov
add
cli
and
ja
inc
ret
add
xchg
adc
je
and
dec
daa
jmp
js
sti
cmp
cmp
pushf
pop
jno
js
arpl
push
and
popf
add
nop
std
inc
inc
jae
aas
shl
xor
jmp
data16
sub
fucomi
push
push
push
xlat
jle
inc
loopne
sub
jno
popf
cmp
push
push
add
push
lahf
mov
lods
fcomps
mov
call
jne
enter
aad
push
shlb
inc
cli
adcl
pushf
mov
ret
pop
add
push
add
mov
mov
notl
mov
mov
fwait
xchg
mov
loope
add
mov
popf
xchg
mov
adc
call
xchg
mov
sub
cmp
test
inc
cmpsb
test
cmp
jge
enter
and
ja
sbb
mov
fdiv
sbb
dec
int3
loopne
fdivl
add
testb
loopne
pop
daa
inc
push
sbb
inc
inc
or
fdivp
jbe
jmp
incb
pop
sahf
add
mov
fiadds
fstpt
fucomip
mov
test
lret
cmp
mov
sbb
out
adc
cmp
fsubrs
xor
scas
mov
xchg
dec
jne
push
cmp
loop
enter
repnz
pop
aam
test
cmpsb
xor
out
or
out
ss
and
cld
push
or
inc
mov
or
xchg
arpl
and
jmp
add
popa
in
push
jno
stos
mov
hlt
cltd
xchg
outsb
mov
gs
and
cmp
and
mov
out
sbb
cmpsb
cmpb
xchg
mov
jmp
xchg
std
sbb
lcall
push
push
mov
pop
dec
test
dec
cmp
push
xchg
or
and
or
push
mov
xchg
cbtw
imul
addb
ss
jo
xchg
dec
ret
in
xlat
xchg
jg
inc
jle
lods
aad
or
cld
test
sub
and
push
push
mov
ljmp
fidivs
push
push
or
test
hlt
sbb
push
iret
jge
imul
sbb
push
dec
incb
fcmovnb
cmpsb
into
int
lea
jecxz
adcb
jecxz
clc
jecxz
ja
mov
sahf
scas
sub
fdivrl
mov
mov
stos
or
mov
nop
popf
jno
mov
fwait
sbb
ljmp
mov
mov
or
imul
cltd
mov
les
adc
jne
test
add
test
andb
adc
jae
sbb
fsub
inc
ret
test
adc
inc
hlt
enterw
pushf
cmp
dec
xchg
bound
jg
sub
mulb
lahf
or
mov
testb
outsb
mov
lret
sbb
stc
andl
ljmp
test
inc
cmpsb
push
inc
scas
mov
or
mov
mov
and
iret
out
rclb
aaa
movsl
lcall
fisubrs
push
sub
xchg
xchg
fstpt
mov
pop
mov
mov
cmpsl
cmp
xchg
movl
jecxz
or
imul
repz
lods
mov
pop
sub
cmp
push
ficoml
jg
hlt
push
imul
scas
out
mov
pop
cmp
arpl
inc
xchg
mov
mov
fs
mov
push
inc
sbb
sub
xor
mov
mov
rorb
lods
adc
adc
fsubs
nop
sub
push
stos
int
pop
push
xor
maxps
cmpsb
sub
std
repz
adc
and
sub
push
or
xchg
cs
fidivrs
cmpsl
pop
mov
jnp
mov
daa
pop
movsl
adc
push
xor
push
movsl
shl
outsb
sub
sbb
push
dec
scas
dec
lock
movsb
dec
psrlq
adc
fucomip
loop
dec
outsl
mov
push
jb
pop
or
loopne
adcb
int3
jae
inc
loopne
pop
mov
mov
or
les
fcmovb
xchg
stos
in
dec
adc
fiaddl
jmp
pop
test
in
xor
movsl
cld
sbb
xlat
jno
test
adc
call
cmpsb
ljmp
ficoms
mov
mov
int
mov
xor
pop
sub
sbb
ficompl
push
jo
xor
int
dec
sbb
int3
test
aam
jns
inc
add
jmp
lods
cmp
mov
rcrb
push
iret
scas
cmpsl
xor
cs
cmp
jp
in
push
ror
int
out
inc
ret
iret
jb
fisubl
popa
mov
or
jle
orb
cmp
cmp
loopne
jns
outsb
scas
mov
scas
jbe
mov
call
jo
mov
xor
inc
xor
add
fstps
cmp
xchg
dec
movsb
out
repnz
and
in
rcrl
dec
xor
push
mov
stos
test
inc
xor
cli
daa
inc
sbb
xchg
jp
mov
insb
cmp
js
dec
add
aaa
lret
cmp
jge
or
pop
xchg
loop
cmp
push
sahf
sub
jp
sub
cmpb
jmp
fs
add
enter
pop
outsb
sub
mov
bound
shlb
dec
xor
movsb
mov
push
ja
aas
add
fs
imul
jne
call
jp
mov
dec
notb
or
jecxz
jle
jg
dec
add
fsubs
sbb
lret
fisubl
and
pop
sub
nop
dec
inc
push
xchg
ret
fcmovnbe
add
add
dec
mov
sub
push
out
sbb
jle
jbe
cmp
repnz
loope
cmpsl
les
xchg
dec
cli
testl
cmpsl
dec
sbb
and
mull
enter
mov
adcb
js
jae
jb
icebp
jae
aad
jae
movsb
jne
mov
loope
out
adcl
ficoms
faddl
leave
pop
std
imulb
adc
repnz
jae
and
ret
imul
repz
clc
je
cmc
fcoml
cmpsb
mov
add
mov
cmp
loop
mov
cmpsl
das
fwait
inc
cmp
lods
icebp
das
aas
inc
dec
inc
mov
pop
fisttpl
pop
inc
shl
into
dec
and
adc
fldl2t
xor
push
fs
je
inc
mov
fiadds
or
in
inc
jmp
or
jnp
loope
mov
sti
inc
or
sbb
xchg
or
mov
push
inc
or
dec
push
out
rol
jnp
dec
add
xchg
fidivrs
addr16
rolb
jl
add
push
mov
inc
xchg
mov
outsl
sub
push
inc
push
lret
add
ret
in
mov
inc
adc
or
cmpsb
jo
mov
mov
mov
mov
out
mov
cltd
test
jp
mov
inc
add
sub
xchg
pop
fisttps
popf
ret
lea
xchg
hlt
bound
pop
outsb
cmpsb
and
mov
and
cmp
shrl
pop
xor
jecxz
mov
dec
sbbb
inc
sub
push
imul
add
in
jp
xchg
pop
sbb
loopne
jge
int3
lea
repz
cmp
test
cmp
adc
clc
aam
cmp
shlb
ficompl
in
sahf
out
fdivrl
mov
clc
push
out
iret
popf
xchg
stc
mov
push
adcb
xchg
rolb
loopne
or
je
fld
stos
mov
pop
stos
cltd
pop
cld
inc
jae
cli
push
sbb
cltd
cmp
cld
stc
sbb
mov
sbbl
movsb
das
mov
push
adc
mov
push
xor
fimuls
pop
adc
or
lret
pop
jg
xchg
add
cmpsl
xchg
pop
aas
out
test
cmp
inc
imul
rorl
jae
adc
in
add
pop
lahf
sub
lahf
xor
inc
or
inc
jmp
out
loop
ljmp
mov
or
scas
jbe
in
mov
jg
inc
lea
cld
incb
call
lods
cmpsb
sbb
lret
sub
push
fildl
addr16
jne
scas
pop
jo
jl
repnz
jmp
outsl
add
dec
dec
mov
in
push
jle
insb
lahf
xchg
rorb
adc
cs
fsub
and
adc
mov
cmp
and
outsb
and
shlb
xchg
inc
pop
or
fs
inc
out
hlt
decb
mov
dec
pushf
out
decl
js
jae
in
xor
mov
jno
sub
sahf
fcoml
pop
ljmp
jnp
xor
fadds
test
rcll
daa
fldenv
repz
xlat
loope
mov
ja
lret
sub
sahf
les
test
push
stos
pop
xor
sub
loopne
jns
and
mov
xchg
mov
push
add
push
pusha
sbb
ljmp
imul
ljmp
push
lock
pop
inc
inc
in
cmpsl
xor
cltd
out
jae
and
mov
shlb
je
lods
clc
add
jg
call
aas
test
add
outsl
enter
or
mov
test
lds
jns
loop
and
or
movsl
sarb
mov
ss
iret
pop
gs
jmp
xchg
jns
xchg
std
push
push
mov
fimuls
jp
stos
cmpsl
fimuls
clc
or
push
xlat
sti
xchg
repnz
mov
mov
pop
and
and
lds
and
out
call
mov
mov
mov
movsb
push
popa
xor
repnz
fmuls
jmp
and
jle
dec
jne
stos
or
push
bound
mov
push
cmp
pop
jae
fnsave
xor
scas
mov
mov
aam
popa
mov
add
cmp
bound
ljmp
sub
push
jnp
in
loopne
dec
push
inc
imul
inc
push
fscale
addb
mov
push
cmpsb
mov
sbb
jge
outsl
inc
aam
xchg
and
and
loopne
pushf
push
repz
pop
and
jmp
repz
std
out
xchg
insb
loopne
nop
scas
pop
inc
mov
dec
rorl
pop
jae
push
loope
icebp
lods
pop
call
out
and
leave
or
add
add
cli
jle
xchg
adc
inc
push
xchg
lret
shll
das
jmp
jnp
pop
push
nop
rcrb
cmpsb
and
mov
dec
adc
add
mov
ret
xchg
sub
dec
fwait
stos
mov
out
repz
cmp
fnsave
popf
pushf
icebp
dec
push
popa
out
test
psllw
das
pop
sub
jnp
push
or
xchg
or
pop
std
arpl
sbb
movsl
aas
push
mov
inc
mov
leave
xchg
sbb
lahf
fists
psllq
outsl
sub
popf
push
push
int3
rcrb
or
xchg
and
cmc
setbe
inc
mov
sbb
fdiv
mov
inc
jecxz
loop
mov
shlb
ret
sub
repnz
xchg
jnp
neg
jle
mov
imul
hlt
sbb
xor
jecxz
imul
mov
and
ljmp
jl
xor
icebp
fstpl
and
mov
add
fs
lret
cmp
orl
xchg
jg
lret
insl
sbb
out
idivb
lods
push
pop
adc
pop
pop
popa
sub
jp
mov
out
incb
mov
lret
pop
rcrl
sbb
or
lods
shrl
shlb
ljmp
pop
vpshuflw
jmp
test
insl
jne
xchg
sahf
add
fiaddl
jg
fsubl
jge
insl
fsub
dec
mov
xchg
sub
std
repz
adc
int3
aaa
dec
fmuls
sub
aam
hlt
inc
iret
inc
push
fsubrs
subb
sub
aad
clc
fdivrs
scas
mov
mov
lret
or
sub
dec
dec
fisubl
into
and
pusha
data16
cwtl
cmp
je
ffree
leave
aam
jno
inc
xor
ret
shrl
push
in
movsl
mov
aad
insb
mov
shlb
push
sub
mov
cld
inc
mov
dec
sahf
and
mov
scas
inc
pop
aad
push
int3
lock
xor
add
leave
sbb
bound
mov
fsubrl
scas
pusha
mov
test
aaa
xchg
adc
aas
pop
and
adc
ja
push
sbb
stc
mov
popa
inc
pop
xchg
aam
push
sbb
mov
ja
mov
jno
es
arpl
ret
and
movsl
adc
jmp
or
cwtl
mov
movsl
inc
xlat
xchg
shl
movsb
push
std
and
sbb
lds
popa
nop
add
inc
sbb
dec
ror
lahf
sbb
aaa
cmp
bound
sahf
lahf
cmpsb
jecxz
lea
aad
outsb
push
mov
inc
dec
ret
pop
pop
jmp
bound
fs
stc
out
and
imull
mov
or
aaa
ret
mov
lret
sbb
popa
and
pop
and
call
inc
xor
arpl
sub
adc
dec
sub
or
lcall
mov
aad
push
xchg
mov
scas
arpl
data16
adc
inc
push
mov
or
mov
dec
lea
int3
jg
jle
lods
sub
in
xchg
daa
inc
add
outsb
and
leave
and
in
jnp
jmp
test
jg
test
das
xchg
sub
jo,pt
shr
dec
aam
fnstsw
cmc
ja
fs
stos
jle
add
into
fisttpl
pop
lret
fwait
stos
dec
stos
dec
mov
cmp
xlat
mov
sub
and
xor
cs
xchg
leave
fcmovb
xchg
and
out
mov
mov
repz
cmp
push
push
xchg
push
cld
add
add
arpl
and
cmp
sarb
and
mov
testb
dec
xchg
shl
cmp
outsb
inc
clc
dec
rcrl
lds
aaa
inc
xor
push
sub
add
xor
push
mov
adc
pop
fisubrl
jbe
imul
inc
xlat
push
pushf
adc
push
outsl
jmp
jle
sbb
arpl
scas
xchg
jmp
rcll
test
mov
dec
or
lods
rcrl
jecxz
popa
mov
adc
push
push
jo
pop
loopne
and
push
pop
lods
push
mov
sbb
test
and
nop
out
les
lea
jae
inc
sub
push
iret
insl
pop
push
push
adc
cs
sbb
pop
mov
mov
pushf
mov
dec
sbb
or
jae
loopne
or
stc
mov
or
sub
adc
loopnew
js
ds
cmp
mov
jns
ljmp
rol
xor
dec
adc
jle
sbb
rcrl
dec
xor
lods
push
dec
pop
cli
test
sahf
cmp
pop
sub
add
sahf
sub
jno
jno
xchg
or
mov
inc
dec
jbe
fwait
sbbb
xchg
mov
add
and
ror
push
bound
fisttps
rcr
jnp
pop
test
loopne,pn
mov
xor
pusha
mov
jp
and
not
enter
rcl
cltd
or
sti
mov
jp
loope
jmp
mov
inc
sub
jns
lods
bound
aad
test
xchg
xchg
mov
ret
and
jb
lret
adc
lret
sub
jns
mov
in
scas
xchg
or
lret
sbb
add
mov
push
lret
adc
push
lcall
xchg
lods
sbb
std
incl
repz
inc
push
pop
or
mov
nop
mov
mov
add
dec
movsb
bound
popa
mov
lea
jb
mov
in
je
test
add
dec
mov
push
lods
xchg
insb
mov
mov
rclb
or
cmpsb
in
inc
je
fsubrs
aas
into
pushf
test
cmpsl
stos
insl
stos
loope
add
rcll
cmpsb
test
aaa
orb
pop
sub
ja
sahf
lret
std
xor
sarb
mov
push
mov
add
stos
pop
sbb
loopne
lods
les
stos
and
stc
fbld
pop
pushf
outsl
inc
sbb
sbb
scas
and
stc
lock
movsb
fistpl
fcmovnb
cmp
mov
mov
das
cmp
xor
pop
daa
lods
repz
aad
retw
push
outsb
rcr
outsb
push
fidivs
mov
lret
lahf
in
inc
sbb
cmp
out
fisubrs
pop
cmp
pop
loop
dec
cmpsb
cmp
xor
and
clc
mov
lret
cs
xor
int
cmp
jns
push
mov
call
test
push
test
mov
loope
sbb
lock
mov
jbe
pop
cmc
cmpsl
xchg
adc
cltd
popf
out
mov
lahf
mov
dec
es
addl
sbbb
cmp
pop
cwtl
sub
jge
or
sbb
notb
mov
mov
leave
xchg
sub
pop
xchg
div
loope
jl
ss
std
jmp
xchg
cmp
int3
sbbb
dec
neg
add
repz
push
pop
or
or
xor
mov
insl
ret
in
inc
shlb
hlt
xor
stos
pop
gs
mov
and
iret
add
lods
enter
sub
loope
stc
lret
xchg
sahf
pop
fstl
imul
lea
add
pushf
or
fmull
pop
leave
ljmp
cmc
cmpsl
sahf
fldt
lods
sub
dec
call
xchg
push
xor
mov
notb
scas
cmpsl
add
mov
sarl
loope
xchg
dec
clc
mov
aas
jge
je
add
sbb
inc
adc
rclb
inc
popa
push
jo
daa
stc
inc
sbb
xchg
lahf
cmp
fcmovu
stos
stos
inc
or
fiadds
inc
inc
and
fldl
lock
mov
dec
ret
scas
sub
mov
push
pusha
int3
loopne
sub
aad
jne
fiadds
ret
xor
mov
popa
lret
sbb
stos
push
psubq
xchg
jno
pop
lret
test
std
mov
inc
dec
jl
pop
call
xor
add
insb
in
push
in
repz
out
or
xchg
sbbl
roll
mov
mov
clc
loope
sub
push
mov
pushf
push
inc
xchg
imul
xor
cmc
bound
les
test
sbb
sub
addr16
add
gs
popa
pop
push
mov
xchg
outsl
inc
sub
subl
and
in
popa
push
paddq
cmp
lahf
loop
xchg
dec
cmp
pop
push
les
or
cmp
mov
aas
xchg
std
sub
dec
add
pop
inc
in
and
in
jmp
sbb
inc
sbbb
fistpll
movsl
pop
mov
mov
orl
cmpsb
lret
enter
xchg
mov
jae
mov
sub
push
add
push
push
rcll
xchg
fmul
sbb
out
add
jb
add
clc
es
fsubs
inc
lods
mov
mov
lds
insb
scas
cwtl
movsb
push
pop
enter
xchg
and
xchg
in
xorl
add
push
clc
stos
mov
cmp
imull
insl
scas
mov
cmc
imull
imul
adc
hlt
xor
pop
mov
sarb
fdivr
loopne
fnstsw
or
push
dec
dec
push
mov
xor
push
gs
cmp
adc
and
js
xor
jno
cmpsb
test
xchg
jge
pop
bound
loop
pop
xchg
shlb
int3
rcr
enter
mov
push
xor
push
iret
out
call
in
imul
xor
lahf
out
mov
hlt
repz
inc
dec
movsl
das
inc
aam
cmpsl
mov
inc
aaa
cmp
in
mov
push
loop
add
cmp
mov
je
adc
adc
icebp
push
push
adc
sar
add
fwait
xchg
test
add
mov
in
data16
push
aad
int3
sub
and
mov
xchg
nop
mov
lret
inc
xor
adc
pop
or
popa
insb
pop
lods
inc
add
jns
cmp
int
or
xchg
push
loopne
lock
pop
mov
and
out
push
aad
outsl
jnp
mov
adc
mov
push
repz
push
fiaddl
ds
leave
pop
xchg
mov
push
cmovne
cmp
arpl
sbb
xor
push
test
pushl
mov
dec
cmp
cltd
mov
xchg
outsb
xor
out
xchg
lods
fisubs
inc
adc
fldenv
xchg
mov
pop
lcall
mov
loop
jae
lods
push
cmpb
das
mov
and
mov
adc
les
xchg
pop
inc
pop
pop
enter
pop
mov
xchg
push
xchg
xlat
in
jmp
cmp
push
pop
mov
cmp
outsl
inc
sbb
mov
outsb
xchg
xchg
xlat
lret
fwait
add
fsts
pop
jle
adc
out
jg
xchg
lahf
inc
test
jae
or
sub
test
inc
inc
xchg
mov
cld
ds
mov
mov
cmp
dec
xchg
jmp
sub
loopne
push
lcall
in
stos
sub
stos
adc
iret
pop
les
jge
mov
cmp
lods
ja
scas
in
pushf
sub
iret
out
cld
mov
outsb
cmp
adc
cmc
push
cltd
lods
loopne
push
in
or
aaa
sahf
jne
shrb
mov
add
pusha
into
and
jae
mov
adc
lahf
into
jns
sbb
gs
push
adc
lock
dec
add
jns
stc
pushf
sbb
jbe
push
sbb
jg
loope
test
adc
mov
out
mov
test
pop
into
xchg
mov
aad
pop
pop
mov
outsb
mov
ss
sti
insb
xchg
mov
ret
mov
sbb
inc
insb
in
or
cmp
push
in
fsubrs
xchg
std
dec
ss
push
mov
loop
fs
inc
jge
mov
sahf
push
stos
mov
mov
inc
mov
adc
rep
or
negb
js
and
mov
mov
or
shrb
cltd
push
scas
sbb
push
rolb
or
popl
sub
inc
fisttpl
sbb
aas
in
stc
pop
cmp
cmp
js
dec
or
push
jns
bound
stc
shlb
test
mov
xchg
pop
cmp
in
shlb
bound
xchg
jl
mov
adc
or
mov
sub
inc
xor
inc
sbb
ss
shlb
sbb
sbb
add
ds
mov
xchg
xorb
in
push
lret
push
mov
and
pop
mov
and
cmpsl
aas
test
rcrb
dec
loope
mov
pop
jmp
jb
lock
sbb
mov
mov
mov
mov
cs
jmp
push
cmpsl
mov
push
adc
cmc
mov
clc
negb
mov
mov
mov
mov
out
sbb
rclb
xchg
inc
xlat
push
adcl
mov
stos
add
sub
or
or
fwait
sbb
out
xlat
mov
inc
es
bsf
cmpsl
mov
mov
mov
cli
cltd
push
push
pop
pop
out
pop
int3
jge
popf
xchg
or
mov
mov
test
shld
jns
jae
mov
add
push
jae
repz
out
aas
loop
std
andb
ds
cwtl
stos
outsb
test
cmpsl
or
fcoml
adc
xchg
gs
mov
scas
out
xchg
stos
xchg
imul
sbb
test
or
fdivs
sub
sbb
rorb
cmp
sbb
daa
imul
dec
mov
mov
loope
add
pop
mov
cmp
and
push
xchg
test
jmp
repnz
mov
ljmp
push
dec
out
mov
xchg
dec
inc
mov
or
cwtl
jp
mov
inc
subb
loope
dec
push
pusha
shrb
push
add
xlat
mov
lret
ja
lahf
nop
ficomps
arpl
cmp
cmc
pop
decb
outsl
adc
jno
pop
mov
testl
mov
mov
sbb
sbb
dec
add
cmpsb
test
addr16
negb
popa
mov
adc
call
test
test
in
movsb
fwait
mov
loopne
lds
test
xchg
sbb
push
xchg
insl
aad
mov
js
sbb
pandn
pusha
stos
and
xchg
mov
mov
icebp
int
lcall
rclb
inc
into
dec
mov
out
int
push
bound
xor
push
cwtl
iret
and
jl
xchg
leave
iret
and
stos
in
or
mov
xor
aaa
iret
fadds
xchg
out
fadds
sbb
add
mov
or
fcom
js
lods
sbb
in
nop
fdivrl
imul
cmpsl
leave
repz
mov
je
incl
aad
xor
fildll
sub
inc
gs
sahf
nop
sbb
cmpsb
add
iret
xchg
mov
mov
dec
mov
out
cmpsl
test
ret
xchg
xchg
sbb
xchg
arpl
sub
mov
pop
iret
pop
jge
ljmp
imul
arpl
iret
xor
lret
shll
subl
loopne
test
mov
fmul
cmp
and
fcmovnu
inc
dec
dec
aas
enter
ss
lret
jmp
shl
pushf
lret
xchg
dec
test
int3
rclb
inc
and
nopl
xor
xorb
into
push
lods
fs
pop
stos
fdivrs
jge
inc
fwait
outsb
roll
xor
stc
dec
jns
push
pop
xchg
mov
sti
ss
ret
daa
dec
mov
lock
aas
sub
in
cltd
dec
and
mov
sarb
aaa
je
xor
clc
cmp
popf
inc
pop
inc
sub
xor
unpcklps
paddd
lret
shr
mov
fsts
test
lret
push
xchg
scas
loop
xor
and
les
or
dec
inc
mov
pushf
scas
mov
or
push
jp
xlat
fcomp
jbe
sbb
sahf
nop
ljmp
and
mov
adc
jno
rcl
push
pop
jp
ja
jp
outsw
je
and
andl
xor
out
mov
hlt
cmp
sbb
in
xchg
xchg
orb
arpl
outsb
xor
mov
xor
xor
mov
mov
pop
adc
in
push
mov
lahf
inc
xor
sub
stos
repnz
xor
popa
pusha
nop
pop
popf
adc
paddb
push
cmp
cmc
scas
stos
push
popf
cli
pusha
jmp
jmp
orb
lock
daa
push
pushf
cld
in
mov
push
xchg
cld
inc
shl
dec
test
sahf
dec
and
aaa
loop
pop
adc
les
push
loop
or
lods
pop
loopne
nop
inc
inc
arpl
jg
xchg
ds
mov
sub
or
rorb
mov
nop
jmp
rcrb
ja
inc
jmp
test
mov
sbb
pop
cmp
out
stos
sbb
or
aas
adc
dec
cltd
push
sub
popa
xchg
sub
pop
sbb
pop
fdivrl
test
xlat
sysenter
push
cmp
xchg
outsl
mov
and
imul
or
xor
sub
shll
call
sub
sbb
sbb
xor
jno
aam
imul
pop
dec
ja
loop
clc
inc
inc
aaa
xor
icebp
mov
hlt
mov
mov
out
negb
cmp
xchg
shrb
push
mov
hlt
xchg
jmp
mov
xor
ret
mov
mov
incl
mov
leave
cmp
repnz
push
cli
xlat
jl
pusha
mov
inc
jecxz
mov
insl
mov
jns
xor
xor
cmp
and
movsb
or
rcll
mov
enter
jae
addb
pop
or
enter
add
fwait
jp
inc
xor
mov
pop
jg
pushf
xchg
in
push
mov
iret
imul
lea
push
pop
xor
push
cmp
cwtl
mov
mov
rorb
hlt
aas
out
cmp
add
inc
jo
cmp
push
inc
loopne
cltd
fdivr
pop
fldcw
es
data16
pop
aam
xor
out
push
dec
call
cld
ljmp
repz
jne
mov
cmpsl
sbb
test
lock
pop
test
jle
add
cmp
adc
inc
stos
push
sub
xlat
aas
dec
xor
stos
add
pusha
aaa
adc
jecxz
xchg
add
sub
cmp
call
jae
fisttpll
pop
repz
inc
xchg
dec
fdiv
xbegin
pop
mov
cmpsb
leave
pop
xchg
rcrb
mov
cmp
loope
addr16
out
xor
add
push
dec
mov
sbb
addr16
dec
cmp
cwtl
ss
lea
sbb
enter
push
icebp
sbb
mov
mov
mov
shlb
xchg
aad
cmpsl
mov
add
das
imul
push
mov
add
iret
sub
inc
fildl
daa
enter
cmc
sub
je
sti
sbb
inc
in
push
sub
sub
in
xchg
arpl
in
std
sub
les
dec
and
push
cmp
sub
repz
push
ljmp
dec
mov
cmc
inc
outsl
mov
in
or
cld
mov
stc
cmpsl
sbbb
pop
test
add
push
inc
pop
jle
xlat
roll
mov
xchg
push
sbb
push
jmp
loop
loope
in
mov
shll
cld
add
les
pop
mov
aam
adc
push
loopne
mov
stc
cmp
mov
xor
es
fwait
movsb
jle
and
jmp
jo
adc
jno
pop
push
fdiv
xchg
and
xor
pop
fsubrl
pop
or
xchg
das
sub
xchg
jle
xchg
sti
imul
inc
push
fwait
push
dec
subb
mov
xor
mov
xor
or
rcrb
sahf
xchg
test
jbe
mov
shrb
cwtl
popa
loope
sub
ret
push
stos
lods
int
pusha
jns
fmulp
push
stos
mov
movsb
dec
sub
push
mov
pop
rclb
mov
mov
push
mov
mov
add
insl
jmp
aas
jns
addr16
lea
or
jns
movsb
lcall
sub
test
sbbl
jge
test
je
push
or
mov
outsb
mov
cmpsb
lea
stos
and
enter
xor
dec
push
cmp
xchg
fcompl
scas
xor
test
mov
cmpsb
dec
in
out
inc
je
cmc
pushw
push
sub
push
mov
outsl
in
jg
lcall
orl
xchg
jnp
cwtl
test
sub
push
movsb
mov
xchg
push
pop
loop
nop
sbb
mov
lret
cmp
and
pop
mov
pop
adc
mov
xor
sbb
repz
xor
rorl
xor
adc
dec
pop
cmp
or
xchg
push
repnz
mov
mov
shl
fdivrp
in
dec
rcl
popf
fnstcw
add
cmp
cmc
out
dec
pushf
bound
inc
sbb
cmpsl
jmp
pop
jg
add
sub
daa
xchg
in
int3
xchg
sti
test
cld
jle
icebp
mov
xlat
clc
xorb
jbe
xchg
push
jecxz
mov
inc
sbb
loope
pop
inc
jbe
stc
sarb
push
and
xor
dec
pmaxsw
mov
push
mov
int3
filds
cltd
push
lock
push
jne
out
adc
cmpsb
std
push
mov
push
mov
bound
push
lea
dec
mov
insb
xor
ret
hlt
xchg
out
jo
jb
rclb
push
and
adc
jae
cltd
add
lret
cltd
dec
inc
inc
fwait
ret
ret
inc
pop
push
aad
test
leave
adc
inc
jno
out
mov
cs
mov
aas
out
cmp
cmp
and
mov
xchg
or
std
pop
out
test
daa
jl
push
or
xchg
cmc
divl
std
xor
addr16
test
dec
ss
or
iret
js
fcomip
mov
adcb
xchg
out
jmp
inc
inc
rolb
and
xchg
pop
leave
and
lea
mov
test
xor
stos
orl
popf
les
sub
and
cmpsl
fnstcw
push
mov
imul
jmp
xor
add
test
punpcklwd
shlb
cmpsl
out
xchg
fnstenv
inc
ljmp
mov
mov
fimuls
testb
jp
cs
mull
int
dec
in
outsl
mov
outsl
xchg
mov
aas
andps
and
scas
add
cmc
inc
insb
adc
lea
mov
ja
in
bound
cltd
cmp
cmp
pop
jmp
push
fdivl
inc
fistpll
push
rcrl
frstor
enter
inc
adc
mov
shr
test
in
cmp
xchg
in
jnp
xchg
add
and
loope
movsl
adc
sahf
dec
push
fistl
ss
adc
jle
repz
dec
cmp
and
cli
jecxz
fisttps
mov
adc
xor
shlb
sti
ror
cmp
mov
ficompl
lods
push
ret
in
sub
add
arpl
js
and
movsl
lods
aam
ficoms
sbb
or
sbb
xlat
out
adc
les
push
adc
xchg
inc
jg
stc
and
and
mov
jb
dec
push
xchg
dec
push
mov
movsb
inc
xor
fmul
nop
inc
adc
les
scas
loope
outsl
or
push
cmp
or
lds
xchg
sti
mov
xchg
pop
dec
sub
das
pop
dec
push
push
mov
inc
jnp
add
arpl
sbb
jp
ret
jns
or
mov
xchg
lret
fcmovnb
flds
cmp
add
mov
sub
inc
pop
outsb
stc
fisubrl
data16
pop
jl
out
dec
pop
xor
xor
xchg
movsb
push
inc
xor
add
add
jbe
and
fcmove
mov
insl
imul
mov
fxch
xchg
pop
mov
push
test
test
sbb
pop
lods
ljmp
imul
jg
lret
pop
xchg
xor
and
imul
xor
loop
adc
aam
xchg
sub
stc
xchg
outsl
out
push
adc
dec
jns
adc
pop
inc
adc
sbb
out
xchg
push
out
dec
aas
inc
push
imul
and
push
mov
jle
cs
pop
and
mov
add
faddl
mov
cmp
loope
ret
js
or
lret
push
mov
data16
repz
mov
dec
dec
imul
out
test
out
mov
cmpsb
addr16
or
push
lcall
add
iret
aas
jo
push
jnp
dec
xor
in
sub
xchg
pop
mov
pop
add
inc
mov
mov
cmp
cmp
jmp
mov
cltd
dec
pop
mov
or
pop
xor
test
icebp
xlat
out
inc
imul
sub
lea
lods
ror
pushf
pusha
sub
mov
xor
arpl
push
repz
lcall
pop
test
jmp
dec
push
lahf
das
sub
push
adcl
xchg
add
xor
dec
mov
jecxz
insb
xchg
adc
mov
mov
dec
cli
mov
push
jnp
testb
or
test
push
mov
xchg
pop
jae
fs
jg
xor
cwtl
push
sub
repnz
iret
xor
aas
inc
punpcklwd
insl
movl
sbb
sub
mov
sti
insb
sbb
inc
and
jae
mov
inc
xchg
repnz
fldcw
out
sub
out
xchg
mov
jb
or
ss
into
test
sahf
adc
cmc
mov
mov
or
or
lret
setb
js
out
mov
daa
mov
mov
pop
mov
mov
repz
pop
outsl
cwtl
ds
insl
push
mov
in
mov
jmp
test
add
outsb
mov
iret
adc
mov
sbb
dec
shll
les
mov
ds
popa
lcall
gs
lahf
mov
jbe
push
rep
push
dec
negb
movsb
out
cmp
pushf
popa
adc
pop
call
stos
mov
push
fwait
cmp
sub
shrb
out
mov
pop
cmc
sub
out
shl
out
and
stc
jb
pop
adc
xchg
xchg
push
pop
or
cltd
popf
ss
in
clc
repnz
fimuls
adc
xchg
inc
sbb
nop
sub
incl
inc
jns
sahf
jnp
dec
fisubs
loope
call
std
push
dec
ljmp
lahf
cmp
nop
inc
adc
push
repz
push
mov
fsubrl
flds
ficoms
int3
add
adc
xor
daa
outsl
adc
lcall
dec
out
lea
mov
push
testb
lahf
aad
sub
mov
xchg
lods
lret
cs
call
movsb
pusha
cld
ja
xor
cmp
seto
imul
jmp
out
jo
mov
pop
dec
jmp
int
jecxz
aaa
insb
adc
jne
push
push
sbbl
ljmp
enter
sub
pop
ret
ja
xor
mov
das
jbe
notb
push
popa
pusha
or
and
test
sub
adc
ret
mov
xchg
add
rep
push
js
cmc
out
add
dec
pop
sti
xchg
and
pop
xchg
repnz
stos
jb
rolb
inc
outsl
es
subb
aas
sub
pop
xchg
rorl
ret
mov
xor
sub
std
clc
pop
mov
fsubs
sbb
outsl
call
lcall
enter
lods
cmp
xchg
and
cs
mov
fistpll
in
ret
cwtl
mov
jecxz
movsb
in
loopne
mov
add
loopne
mov
aad
inc
cmp
rcrl
mov
sub
in
out
test
mov
movq
xchg
add
mov
xor
test
insb
mov
rcrb
movl
jnp
shll
popf
jb
mov
push
mov
inc
xchg
xchg
cld
insl
jae
and
in
bound
jno
inc
pop
fadds
or
dec
push
jge
mov
mov
inc
and
push
jle
and
in
inc
mov
add
mov
orb
inc
xchg
jnp
nop
in
adc
movsb
std
ss
rdpmc
mov
lods
inc
xor
hlt
dec
pop
mov
xchg
lods
mov
out
or
lock
insl
sub
fsubr
ljmp
dec
adc
lods
lods
aam
pop
repnz
test
lcall
insl
jo
ja
pop
jg
mov
mov
int3
mov
or
dec
lods
mov
mov
arpl
aaa
push
dec
je
dec
jecxz
ja
out
jle
add
jo
sub
jmp
in
cmpsb
ljmp
xchg
adc
ret
pop
mov
pop
cmpsb
pop
sbb
icebp
mov
dec
push
repnz
orb
xchg
xchg
or
and
incb
leave
pop
xor
into
xor
dec
mov
inc
popf
clc
jle
js
into
js
in
cld
sub
in
jp
mov
clc
pop
mov
push
cmp
push
std
shlb
adc
int
sbb
out
cmpsl
jnp
lock
sti
mov
jns
and
inc
ja
jl
jne
mov
fmull
pusha
mov
jb
in
rorl
xlat
cmp
scas
xchg
xchg
mov
sub
pop
mov
fs
rolb
dec
movsb
mov
aad
xchg
jg
popf
cltd
mov
add
test
mov
push
mov
mov
xor
inc
int3
sub
mov
clc
and
inc
push
and
jp
fldenv
jne
sbb
fildl
shrb
cltd
xchg
add
rcrl
out
xchg
stc
push
movsb
adc
nop
sub
mov
int3
add
test
lea
push
adc
jo
ds
and
stos
xlat
or
push
out
lea
out
xlat
in
cmp
push
add
jns
lds
scas
ret
out
int3
push
loop
imul
add
lret
cltd
inc
jge
push
sbb
out
sbb
or
xor
mov
in
mov
xchg
pop
jae
mov
incl
cwtl
pop
cmc
int3
rol
mov
jle
fdivrs
addr16
les
les
mov
sbb
mov
fcompl
je
mov
imul
and
xor
jp
sub
jo
jbe
je
lods
xchg
sti
cli
pushf
ja
sub
mov
test
adc
enter
or
es
into
mov
sti
ret
push
dec
out
mov
add
push
jne
mov
mov
xor
orb
push
outsb
jmp
in
and
push
sbb
insb
push
and
mov
pop
dec
mov
negl
fldl
pushf
lods
mov
popa
rclb
divl
inc
push
clc
pop
call
sbb
push
es
cli
pushf
lods
icebp
sub
movsl
std
hlt
sbb
scas
pop
mov
jmp
fdivp
lods
mov
dec
or
push
push
cli
in
lods
xchg
jno
in
xor
cmp
add
sub
pop
mov
xor
rcr
mov
loopne
lods
jnp
fisubl
call
mov
and
sub
jmp
cld
inc
sahf
sub
lea
mov
push
aad
movsl
daa
icebp
lret
mov
pop
add
jl,pn
fstp
dec
add
adc
add
ret
mov
std
adc
pop
pusha
out
mov
push
mov
pop
and
sub
dec
repz
cmp
mov
scas
jl
jmp
addr16
or
fildll
sbb
adc
cltd
test
cwtl
pop
repnz
in
jae
cmc
dec
outsb
mov
into
push
testb
or
cmp
inc
scas
mov
outsl
imul
in
ds
mov
sahf
sbb
lret
pop
jne
sbb
inc
xchg
cmpsl
rorb
outsl
dec
imul
mov
cmp
add
js
fwait
sub
dec
test
mov
cmp
mov
mov
fldz
insb
and
lret
adc
fistpl
jle
mov
lret
insb
or
test
mov
or
pusha
js
jae
into
outsl
ret
lods
enter
push
cmp
and
push
fucomi
ljmp
dec
sbb
out
das
xchg
pop
add
xchg
pop
and
cmc
pop
jb
fmuls
andl
sub
jno
test
cmp
adc
jno
inc
fcoms
fisttpl
and
mov
adc
nop
iret
aad
and
xor
mov
inc
mov
cs
cmp
mov
jno
mov
or
ljmp
jecxz
loop
test
inc
repz
sahf
and
pop
push
lcall
fs
xchg
mov
xor
into
clc
repnz
pushf
adc
int
push
adc
jo
xor
out
jae
adc
mov
test
adcl
stos
pop
lahf
mov
mov
das
add
ret
xor
clc
xchg
cmp
int3
mov
mov
add
mov
nop
lret
fdivr
push
repz
sub
fs
cmp
notb
jne
cmp
cmpl
sbb
pop
fistpll
pop
sub
lret
clc
adc
sbb
movsl
add
and
pop
mov
and
inc
xchg
jo
pop
stos
test
push
sub
sbb
cmpb
pop
lea
xor
inc
and
aas
decb
push
xor
cmp
xor
arpl
cmpsl
imulb
cmpsl
adc
imul
scas
and
mov
xor
pushf
orb
mov
jns
rcrl
dec
jl
adc
shlb
mov
pop
sarb
popa
fisubs
scas
jne
jbe
jnp
add
sahf
js
add
shr
sbbl
mov
sbb
cli
cmc
cwtl
fs
add
arpl
inc
or
mov
pop
dec
add
cltd
pop
fbstp
pop
mov
or
or
xor
push
mov
fistpl
mov
dec
pusha
sbb
jb
sbb
test
jecxz
cmp
adc
fcmovb
adc
inc
push
pop
sbb
jns
jo
repz
scas
fucom
inc
mov
lcall
xchg
lret
add
outsl
mov
pusha
xorl
push
and
movsb
gs
ficomps
aaa
push
icebp
ret
mov
push
pop
fdivl
insb
jle
pop
repz
es
shlb
ret
sbb
pop
aam
pop
call
cmp
movsb
in
stos
dec
loop
xor
loope
pop
int3
adc
mov
icebp
inc
or
imul
ud0
push
pop
lea
xor
int3
adc
jp
adc
arpl
jl
jl
nop
sbb
cmpsl
in
cmc
shr
sarb
sbb
cld
push
js
push
mov
idiv
gs
xchg
push
xchg
xchg
lock
mov
sahf
data16
fidivl
xor
mov
sub
push
jno
test
stc
in
mov
std
jne
out
inc
sub
imul
sbb
cltd
sbb
sub
push
add
idivl
adc
xchg
lcall
mov
je
pop
out
sbb
xchg
push
testl
and
pop
in
dec
mov
lret
jl
dec
arpl
sbb
adc
jns
subl
dec
and
xchg
sub
ds
cwtl
mov
push
cld
fadd
scas
mov
scas
aam
dec
push
sbb
pop
mov
sub
or
lea
subb
pushf
xchg
dec
mov
icebp
sbb
pusha
adc
neg
mov
mov
cmpsb
sub
jge
addr16
jmp
mov
aaa
sti
nop
dec
cmp
push
loope
inc
push
jecxz
xchg
sub
adcb
movsb
imul
dec
testl
push
cli
sti
cmp
xor
imul
jmp
into
cs
jo
clc
test
inc
in
pop
fisubrl
dec
in
xchg
adc
cmpl
mov
cli
cli
xor
adc
pop
sub
outsl
adc
pop
out
cmpsb
jg
sbb
mov
fcomi
push
pusha
bound
xor
jne
sarl
daa
add
xor
in
popl
mov
imul
stos
sbb
fsub
std
mov
outsb
call
mov
sar
loopne
mov
mov
or
cld
inc
jp
add
test
enter
loope
mov
pop
ljmp
jno
mov
pop
popa
sbb
pop
xchg
mov
or
in
sbb
mov
mov
pop
stos
cld
mov
pop
mov
pop
xchg
loope
sbb
mulb
loop
mov
sbbb
fisttpll
sub
outsb
cmpsl
test
ss
push
sub
in
xacquire
push
mov
jbe
test
not
mov
out
sub
push
movsb
sub
js
cmpsb
and
jmp
push
jnp
or
and
out
ret
orl
fstpl
add
push
pop
pop
fs
sbb
jp
aam
out
xor
push
add
pop
loop
inc
sbb
mov
push
or
imul
sub
pop
ret
and
sarl
and
stc
scas
shll
cmp
fwait
andb
pop
pushf
push
mov
cmp
push
insb
mov
loop
int
fisttps
inc
push
jne
adc
sbb
notl
out
sar
lahf
cli
addr16
stos
in
xchg
aad
sub
fwait
mov
jmp
dec
mov
pop
xchg
xchg
adc
xchg
orb
mull
shll
cld
pop
pop
sub
stos
sbb
andl
sub
test
jge
dec
mov
push
in
xorb
mov
mull
sbb
mov
adc
jbe
nop
mov
arpl
insb
loopne
sbb
inc
repz
repz
ja
inc
push
add
jmp
mov
shrb
es
iret
stos
pop
dec
xor
cmp
mov
in
add
jp
jl
push
xchg
push
adcb
dec
movsb
rcr
add
and
aaa
adc
loope
or
mov
sbb
ljmp
pushf
adc
call
xlat
inc
xor
mov
xlat
pushf
out
push
in
push
xchg
cmc
cmp
push
dec
movl
add
insl
repz
cmp
jb
js
incl
adc
cmpsl
xchg
xchg
inc
cmp
jmp
stos
dec
lcall
mov
dec
xchg
mov
mov
fidivl
test
setge
shll
test
pop
stc
push
cmp
xchg
jecxz
hlt
cld
push
jne
inc
adc
push
fdivrl
movsb
mov
mov
dec
pusha
repz
lods
icebp
popf
push
jge
mov
mov
xlat
pop
jle
cmp
xlat
adc
in
sub
sbb
ljmp
push
sbb
adc
hlt
icebp
je
and
sbb
xchg
nop
iret
popa
pop
inc
mov
popf
sti
scas
aaa
aam
subb
mov
daa
rorl
cld
std
sti
push
lret
dec
jne
jmp
je
outsl
test
in
outsl
fistl
nop
adc
ds
jns
cmp
nop
fbstp
lods
mov
insl
cmc
jnp
xor
rcrl
aaa
add
mov
cmpsb
dec
rclb
and
add
cwtl
push
scas
scas
jecxz
aam
mov
push
push
mov
arpl
outsl
mov
add
icebp
dec
xchg
out
cltd
je,pt
imull
push
fisttps
xor
fidivs
xlat
es
jo
or
push
jbe
push
fcmovnu
outsb
or
sub
push
aad
leave
es
test
adc
dec
fcom
fcompl
push
iret
mov
fidivrl
and
dec
xchg
pop
and
ja
daa
inc
sbb
mov
movsb
xchg
in
stos
or
insl
ja
pop
jno
and
add
inc
push
cmp
xchg
mov
dec
add
pop
stos
pop
jo
mov
dec
je
test
daa
lcall
ret
lock
scas
pop
bound
aam
in
dec
lods
in
cmc
sbb
add
adc
dec
out
dec
sbb
push
mov
in
insb
xchg
hlt
adc
cmc
mov
hlt
push
mov
popf
lret
sarb
push
pop
push
sbb
sub
xor
mov
cmpsb
ret
xor
loope
mov
ljmp
mov
push
decb
mov
push
mov
cmpsb
int
lods
mov
pop
lret
or
add
jle
test
mov
sub
pop
xchg
cmpsb
sub
mov
fadds
push
lret
incl
mul
jbe
or
push
pop
or
lea
push
subl
pop
sbb
insl
inc
fcmovb
mov
lret
cwtl
or
shrl
dec
jo
out
cmp
repnz
add
jbe
mov
xorb
test
divl
ret
push
jle
mov
mov
adc
xchg
sub
mov
push
jae
jl
arpl
mov
inc
cmp
or
and
outsb
cltd
mov
aaa
pop
xlat
adc
rcrb
ret
popf
hlt
ss
push
movsl
repnz
add
mov
jns
cli
cld
jne
push
in
dec
or
xor
push
data16
call
sbb
arpl
cmp
adc
xchg
shl
sub
popa
push
mov
shlb
pop
cmc
test
stos
int3
shll
cltd
add
leave
mulb
adcb
jno
repnz
test
xchg
push
sbb
in
sbb
fadds
dec
stc
mov
mov
cltd
push
cmpsb
or
in
clc
shr
jae
jg
outsb
orb
lret
cmp
dec
movsl
inc
lods
stos
pop
jmp
jnp
push
xchg
xchg
xor
pop
in
xlat
sbb
add
push
test
loop
jo
stos
repz
mov
sub
lahf
adc
pop
bound
sub
add
xlat
sbb
int
adc
stos
dec
add
pop
adc
lds
sarb
fisubs
sbb
pop
aad
shrl
ret
xor
popa
cld
xlat
mov
or
mov
push
stos
mov
scas
mov
and
inc
xor
in
outsl
cltd
add
adc
push
pop
cmp
sub
outsb
ljmp
mov
sub
fcmovnb
addr16
pusha
mov
sbbl
dec
nop
pop
and
xchg
movsb
int
xlat
push
xor
sub
add
addr16
or
cli
inc
ds
out
and
adc
mov
lret
xbegin
xchg
shrb
js
adc
arpl
cltd
sub
adc
fldcw
pop
and
mov
std
cmc
cli
push
stc
into
dec
ret
out
jne
dec
out
or
or
inc
sbb
fcomps
dec
xchg
mov
sub
xchg
movsl
jl
cmc
scas
inc
sti
xorl
lret
or
or
ds
lea
xor
push
xorl
push
mov
and
fcomps
inc
std
xchg
adc
loop
sub
dec
rorl
lods
jecxz
push
mov
sbb
repz
repnz
add
or
sub
jo
leave
daa
add
lahf
lds
bound
ljmp
cmpsb
or
push
pop
push
imul
mov
lods
pop
add
cwtl
or
pop
pop
out
push
pop
jnp
inc
jge
dec
jns
pusha
js
mov
hlt
mov
outsb
lods
mov
dec
push
ret
push
adc
pop
cmpsl
mov
push
or
js
test
repz
les
mov
repnz
repnz
xchg
neg
aaa
cwtl
cmp
negb
dec
push
pop
push
cmp
sbb
cmp
cmp
sbb
cmp
sub
dec
dec
push
push
dec
ljmp
push
push
sbb
enter
push
push
cmp
push
and
inc
out
mov
jle
das
pushf
xor
in
fucompp
lret
cwtl
or
lods
lods
fisubrl
out
pop
and
les
sub
lret
ret
and
ficoms
test
je
inc
sbb
mov
int
pop
out
mov
mov
push
scas
and
les
repnz
scas
mov
cmp
mov
in
pop
jge
xchg
sub
mov
and
das
ret
jp
lret
mov
ja
xor
stos
mov
and
dec
jae
cmpsl
lcall
ds
jb
fsubl
and
das
mov
mov
push
pop
jnp
cmp
pop
jge
jbe
pop
and
imul
pop
lahf
leave
push
inc
sbb
inc
and
sbb
dec
add
jns
and
xchg
mov
pop
mov
into
mov
mov
and
jne
mov
mulb
mov
hlt
lods
or
repnz
shlb
lea
cs
outsb
loop
pop
mov
insb
mov
fisttps
xchg
lock
bound
add
and
out
dec
adc
inc
jecxz
mov
inc
mov
mov
mov
addb
shr
fsubr
add
jl
sar
adc
and
push
pusha
mov
pop
popf
loope
cld
subl
lods
push
shll
xchg
into
and
dec
lcall
mov
enter
loopne
insl
ret
addr16
or
cli
int3
cwtl
fmulp
loop
insl
out
add
std
push
mov
mov
fisttps
xchg
adc
push
mov
cltd
adc
popa
pop
mov
lahf
dec
aaa
lret
push
or
adc
pop
push
sar
sbb
inc
daa
fdivrs
repz
inc
ja
mov
aad
std
out
mov
andb
jmp
setg
push
jb
mov
inc
roll
imul
mov
cmc
faddp
mov
xchg
pushf
add
inc
mov
push
les
mov
jae
pop
add
sbb
cmp
xchg
adc
mov
pop
dec
shll
add
cmpsl
insl
dec
imull
xchg
aad
scas
ret
mov
dec
xchg
push
mov
xor
sbb
call
mov
xchg
mov
pop
call
lret
sbb
sub
mov
aaa
or
pop
aad
insl
push
and
test
cmc
fisubl
xchg
outsl
test
inc
mov
lahf
jno
ret
test
mov
pop
jge
dec
iret
xor
addb
cmp
shrb
addb
mov
push
faddl
rol
cmpsl
xor
in
sbb
xor
mov
pusha
cmp
push
in
jecxz
daa
ljmp
mov
inc
xchg
movsb
ljmp
enter
inc
popf
push
xchg
mov
mov
into
mov
imul
xlat
push
jmp
sub
cli
sbb
icebp
sbb
xor
sbb
rolb
cs
lcall
mov
lds
mov
pop
sbbb
pop
jp
jo
cld
mov
addr16
mov
stos
add
mov
ja
mov
jg
test
add
add
push
mov
cmpsb
out
sub
cmpsl
aas
jge
popf
push
mov
jp
jecxz
mov
std
adc
imul
mov
fdivrs
movsl
push
push
mov
mov
sub
adc
fs
pop
jo
loope
cmp
xor
mov
mov
outsl
addr16
sbb
sahf
cmovae
rcl
and
cld
addr16
add
lea
fcmovb
ss
lea
add
sarb
dec
xchg
cmp
and
lcall
ret
add
mov
aas
insl
sbb
add
xor
cmp
push
ret
ret
fiaddl
pop
mov
inc
nop
add
sub
leave
pop
add
xor
cmp
mov
pop
sub
loope
mov
lods
movsb
pop
xlat
enter
sarl
nop
inc
adc
sub
push
fldcw
insb
xchg
test
pusha
jne
add
insl
cwtl
sbb
aad
bnd
das
and
out
mov
adc
mov
pop
inc
push
loope
orb
repz
mov
push
roll
cmpsl
popa
or
mov
jnp
fstps
mov
jnp
sbb
leave
and
repnz
xor
or
sti
fsts
arpl
xchg
popf
xchg
jmp
in
ja
mov
jg
nop
mov
fwait
jns
aas
push
cli
xor
loopne
pop
lret
sbb
in
xlat
xorl
jne
or
out
mov
jnp
sahf
add
cwtl
lahf
and
jg
das
cmp
adc
xor
loopne
lock
ss
dec
add
lock
bound
sub
cmpsb
popf
adc
adc
xor
jecxz
mov
lds
int3
cs
repnz
out
push
addr16
lods
arpl
leave
stos
inc
dec
mov
xor
pop
push
adc
mov
popl
xor
xor
in
or
and
in
xlat
push
outsl
inc
xchg
xor
jno
inc
push
mov
cld
jle
push
add
dec
xchg
das
push
movsb
ret
mov
push
repz
xorl
pop
inc
imul
push
mov
mov
loopne
push
dec
dec
shlb
adc
imul
nop
mov
jo
loopne
mov
and
shrl
es
repz
loopne
xor
dec
leave
cmp
das
or
cmp
cs
jg
xchg
loopne
loopne
pop
test
int3
sbb
sbb
cmp
cmp
cli
xchg
sti
and
pop
xor
ror
popf
imul
jns
sbbl
or
jg
mov
nop
in
pop
pop
jne
push
jp
outsb
jge,pn
fdivl
mov
sub
push
in
sub
sub
fcoms
in
mov
fistl
rorb
fst
dec
ss
push
loop
orb
cmp
es
add
dec
cwtl
fdivrp
loopne
gs
xchg
xchg
pushf
rcll
lods
icebp
shl
add
scas
leave
ret
jle
lahf
sub
inc
insb
cmpb
push
mov
mov
mov
xchg
jecxz
mov
js
adc
mov
call
fisttps
sbb
jmp
pop
adc
iret
jmp
test
mov
shl
mov
pop
rcrl
and
pop
sbb
jns
lahf
jb
fmull
dec
int3
jg
or
insl
stos
cmpsl
imul
xlat
mov
mov
jp
inc
dec
jns
cmp
aam
push
ret
ret
inc
fiadds
pop
jns
mov
aam
addb
dec
mov
fdivr
cmp
sbb
and
popl
fwait
bound
cltd
mov
loopne
mov
mov
jbe,pn
xorl
lret
in
mov
ljmp
out
push
les
mov
insb
xchg
loopne
mov
int
jle
add
jmp
aad
lods
cmp
inc
out
adc
pminsw
ss
int3
xor
pop
push
xchg
cmc
jns
popl
or
call
mov
dec
repnz
sub
xor
lret
jo
xrelease
fstps
pop
rcll
movsb
in
pop
testl
jno
jecxz
adc
pop
test
movsl
sbb
mov
mov
fwait
insl
pusha
in
or
inc
push
xchg
fistpll
sbb
adc
dec
pop
xor
aad
sub
ret
push
pop
bound
jl
push
push
test
mov
enter
into
pushf
lods
fldt
sub
lahf
dec
fisubrl
ret
insb
cmp
lret
je
mov
lods
incl
jbe
jl
inc
dec
sub
dec
hlt
cld
jecxz
add
sarl
inc
adc
movsl
jnp
mov
and
ret
and
imul
cmp
shl
or
mov
mov
sbb
ret
dec
rol
mov
lcall
in
push
push
lods
push
int
mov
jmp
lods
fxch
sbb
xor
test
xor
mov
mov
repz
comiss
lret
and
cli
add
std
out
mov
rorl
inc
jl
or
or
mov
add
adc
pop
fiaddl
cli
ja
mov
into
push
repz
ljmp
int3
pop
insb
xchg
scas
call
jb
les
xor
push
mov
add
mov
ja
lods
das
in
jecxz
and
lret
push
fdivl
dec
nop
in
call
mov
push
ljmp
and
push
out
cwtl
mov
adc
loopne
fsubl
mov
inc
push
pop
outsb
fs
add
inc
fcmovnbe
ss
incb
dec
stos
mov
push
adc
jns
cmp
arpl
xor
ss
imul
ret
pop
mov
hlt
pusha
or
or
sbbl
push
pusha
jmp
das
testb
pushf
icebp
insl
push
cmc
xchg
lods
dec
mov
rol
out
pop
ret
test
adc
jmp
inc
cltd
adc
or
cltd
sbb
xor
movsb
mov
arpl
rcr
xchg
sahf
and
sarb
mov
cmp
popa
jl
stos
imul
push
mov
add
push
push
ljmp
dec
aam
or
cmp
je
adc
divb
push
fdivrs
dec
ss
sbb
jno
sub
sarl
xor
inc
ficoms
jo
mov
mov
mov
mov
fadds
xor
sub
lahf
imul
pop
sbb
insb
lds
addr16
xchg
sbb
out
leave
daa
cmpb
xchg
imul
or
jmp
xor
dec
xchg
push
lahf
and
or
pop
add
pusha
mov
xchg
jmp
fcomps
fldcw
out
dec
imul
push
in
pop
pop
scas
mov
mov
cmp
test
rcr
cmpsl
or
add
jmp
lea
mov
sub
mov
aas
inc
mov
sub
addr16
dec
out
out
cltd
sahf
shl
and
add
push
sub
or
or
or
aaa
jnp
or
sub
and
add
stc
sbbb
mov
aas
sbb
pop
mov
and
sahf
adc
pushf
lds
adc
jno
jmp
movsb
negb
cld
and
sbb
out
lods
or
cwtl
fwait
shrb
pop
lahf
int
movb
test
divl
shr
jne
add
das
bound
roll
xchg
add
push
dec
add
jne
shl
mov
cmp
lcall
lods
imul
mov
ret
sub
sbbb
cs
fistl
mov
sub
cwtl
in
adc
and
pop
xor
sahf
adc
inc
add
jle
jl
sbb
pusha
xchg
dec
and
sub
jg
sahf
add
test
jl
push
push
aaa
push
mov
enter
pop
dec
mov
fldt
mov
and
insl
push
or
repnz
and
xchg
sbb
in
pop
imul
imulb
xchg
inc
or
sahf
xchg
add
sub
xchg
jg
pop
movsl
mov
int
stc
scas
and
int
jno
jle
add
lea
add
push
pop
mov
jb
je
out
mov
push
adc
cwtl
jne
sbb
cmp
cmp
and
ret
xor
aas
or
mov
pop
repnz
jnp
loop
fistl
aam
cld
mov
mov
sbb
aam
push
ljmp
pop
fwait
mov
seta
lret
imul
and
or
loope
inc
mov
icebp
call
or
mov
aas
or
xchg
decl
mov
hlt
pop
add
xor
adc
insl
jo
mov
addr16
fisttps
ficompl
stc
xchg
push
rcr
rcl
cld
enter
mov
mov
out
add
add
mov
inc
add
bound
push
cmp
add
mov
sub
jmp
pop
pop
xor
xor
mov
ret
push
jmp
dec
sub
adcl
and
mov
and
cmp
outsb
ds
pop
push
pop
xor
sbb
xchg
cltd
call
in
out
adc
cmp
mov
les
fstpt
sub
inc
adc
aas
cmp
stos
lcall
cmpsl
fucom
fwait
mov
sti
jg
lds
and
or
das
or
shl
movsl
imul
ljmp
ret
push
xor
arpl
adc
dec
jecxz
jp
adc
popa
gs
lret
pop
mov
xchg
xchg
and
out
dec
push
imul
mov
jae
cld
mov
pop
je
cmpsb
fbstp
inc
sbb
les
ret
lcall
push
cmc
popf
in
and
jbe
push
mov
ja
mov
mov
ja
rolb
xorb
sbb
out
imul
add
or
sbb
aad
nop
dec
das
pop
std
dec
out
sbb
movsb
arpl
or
fistps
lret
pop
negb
clc
push
sbb
pusha
cmpl
scas
push
xchg
lcall
xor
into
mov
sbb
mov
xlat
sub
enter
call
push
mov
adc
sahf
daa
adc
popf
xchg
dec
mov
cmp
mov
lock
sub
das
dec
dec
mov
pop
int
roll
jnp
mov
lret
push
stos
jecxz
fdivr
fstp
push
ljmp
sbbl
mov
adc
loope
adc
inc
into
cwtl
frstor
push
inc
dec
loop
into
incl
inc
mov
out
cld
test
jge
fadds
add
ds
lret
mov
lret
or
xor
movups
xchg
fstenv
out
jne
jmp
xor
xor
data16
insl
dec
sahf
shlb
in
pop
jge
and
pop
in
fs
int
lock
xchg
push
lea
mov
dec
into
sub
icebp
mov
add
add
cltd
leave
sbbl
aaa
lret
hlt
std
pop
xchg
xchg
pop
fisubl
shlb
enter
inc
add
stos
out
insl
pop
and
push
imull
aaa
sub
enter
jo
mov
ret
push
cmp
inc
test
jg
addr16
dec
ljmp
movsb
mov
jecxz
mov
sbb
dec
lahf
add
popf
jmp
icebp
in
clc
aam
cmp
jo
push
adc
pop
jb
repz
into
hlt
mov
lret
aam
or
test
rorb
push
cmp
sbb
rcrl
cli
clc
cmpsl
jg
in
out
push
loope
shll
fisttpl
add
repnz
mov
test
mov
xchg
lods
mov
ret
mov
xor
ljmp
inc
lcall
xchg
push
mov
mov
adc
dec
mov
sbb
or
inc
cs
shrb
jbe
push
and
stos
cmpsl
sti
out
push
les
ficomps
push
out
aad
not
dec
push
dec
jl
rclb
shlb
inc
cli
fcmove
pop
sub
jmp
pop
jb
mov
fidivl
shlb
jo
testl
cmpsl
cs
inc
push
cmpsb
xor
int
and
imul
sbb
cmp
jle
lock
cmp
add
dec
pop
mov
ret
lret
xor
and
cld
jnp
adc
mov
enter
arpl
mov
fnstenv
sub
call
mov
add
fidivl
inc
scas
cmc
add
pop
mov
cmp
test
in
in
test
cmp
push
pop
fdivrl
gs
daa
jecxz
and
jnp
test
out
ja
sbbb
js
mov
ss
xor
fstpt
jbe
push
mov
pop
mov
orl
sub
jecxz
mov
adc
jmp
and
mov
shrb
rcl
inc
in
mov
dec
jl
xchg
in
cmp
cmp
xchg
dec
call
clc
or
jo
repnz
push
ljmp
lods
and
iret
mov
cmp
scas
in
push
jmp
aam
xchg
fmul
insl
test
sbb
aad
lret
add
dec
mov
inc
pop
pop
lods
xor
out
imul
rorl
fsts
pop
mov
cs
adc
dec
mov
sahf
sbb
or
sub
jle
xchg
leave
and
int
sub
pop
lret
subl
push
mov
sahf
outsb
or
cmp
mov
push
cmp
pop
mov
out
insl
or
movsl
stc
sub
pop
add
fs
pop
repnz
jge
inc
ret
imulb
inc
movsl
out
and
lcall
jno
cmp
fbstp
mov
ret
testb
je
cmp
addr16
inc
add
sbb
rorb
jnp
mov
push
dec
dec
mov
ja
inc
fistpl
and
popf
popa
fucomi
pop
and
inc
mov
les
push
adc
pop
into
or
pop
xchg
les
aam
and
lahf
mov
push
decb
xchg
push
adc
mov
int
in
mov
inc
sti
xchg
sub
sbb
jl
aas
add
and
in
pop
cmp
mov
fdivrs
and
data16
mov
test
add
les
je
repz
sub
ret
int3
add
fistpll
cmp
sarl
jl
icebp
sub
shrl
push
jge
fs
push
icebp
fidivs
push
fmuls
rorl
out
cmc
std
mov
xor
inc
call
gs
and
inc
xor
and
jp
aam
mov
pushl
mov
xchg
mov
test
mov
fadd
sub
test
jns
and
testb
jnp
jno
or
pop
adc
push
shlb
subb
aaa
mov
push
and
xor
mov
scas
and
arpl
jb
inc
outsb
clc
call
cmp
mov
xor
cmp
add
ja
fnsave
mov
fwait
call
xchg
inc
in
mov
rorb
pushf
dec
adcl
and
decl
sub
sbb
cmp
ret
ljmp
outsb
sbbl
jne
mov
mov
fdivl
pop
outsb
repz
xchg
push
ret
int
mov
cmpsb
push
or
mov
xchg
jecxz
hlt
pop
add
jl
cmc
sti
mov
lock
aam
mov
mov
out
push
ficoml
mov
pop
icebp
cld
inc
movsl
stc
mov
mov
push
test
bound
mov
inc
mov
mov
push
push
data16
imull
fistl
mov
pop
jb
sub
cmp
js
xchg
repz
punpckhdq
je
ret
mov
lea
dec
test
adc
scas
rcrl
es
repnz
mov
cld
gs
test
iret
scas
subb
sub
out
roll
lahf
pop
jmp
mov
jns,pt
fidivs
imul
cmp
mov
lods
pushf
int
outsl
lret
push
sbb
lds
dec
mov
xchg
add
inc
movsb
jge
inc
ror
adc
pop
xor
imul
xchg
ja
xchg
sarb
add
sbb
pop
bound
aas
aad
adc
add
lods
pop
pop
mov
ret
pop
dec
aaa
cs
cmp
iret
cmp
shll
shlb
pop
jnp
push
lret
mov
andl
xchg
push
test
aaa
scas
addr16
inc
mov
inc
add
pop
lret
aad
cmpsb
adc
fs
xor
pop
hlt
or
dec
cmp
fimuls
cmp
add
jmp
add
mov
andb
pusha
leave
push
cli
fwait
cmc
adc
or
adc
fwait
outsl
dec
cmp
ljmp
mov
data16
cltd
aas
je
test
stc
pop
lcall
cmp
fmuls
dec
mov
aad
pop
pop
and
fnstsw
jbe
sub
jl
mov
jg
inc
dec
pop
inc
xor
jmp
push
add
xor
mov
ja
inc
bound
jae
ret
pop
push
mov
cmp
cld
xor
gs
pop
inc
mov
outsb
push
jmp
inc
jecxz
push
jb
adc
aas
sti
pop
adc
xchg
dec
push
fimuls
es
fbld
lahf
pop
and
stos
jg
ret
push
pop
jg
inc
adc
rcr
adc
stc
xorl
test
movsl
adc
roll
adc
push
mov
fldt
rol
hlt
xchg
je
xchg
rcrb
pusha
pop
xchg
and
cmp
or
dec
cltd
push
cltd
jo
cmc
cmpsl
dec
xor
adcb
adcb
or
repnz
cmpsl
inc
js
xchg
lock
enter
sbb
sub
mov
dec
dec
subb
into
loop
scas
cs
mul
leave
push
push
test
sahf
sub
xor
stos
ret
push
ja
shl
lret
imull
loope
shlb
cwtl
inc
ret
mov
push
sbb
push
test
push
cmp
and
fdivrl
and
notl
test
je
jge
loopne
in
inc
mov
pop
add
notb
loope
jp
int
ret
push
data16
xchg
mov
arpl
lods
pop
out
fldl
push
mov
dec
int3
xor
shll
or
test
repz
xchg
xchg
lods
aaa
je
lret
outsb
je
mov
bound
adc
jl
jle
cwtl
add
or
sahf
popa
movl
aaa
arpl
jg
aaa
xor
sbb
lret
mov
cmpsl
sar
inc
jl
push
dec
xchg
cmpsb
ljmp
add
lods
cmpsb
lds
and
orl
xchg
xchg
gs
push
shl
jecxz
pop
or
in
mov
mov
js
or
std
negl
rol
in
xchg
mov
cmp
psrlq
and
bswap
mov
mov
in
sub
js
or
int3
jmp
adc
out
test
daa
incb
xchg
jp
dec
dec
xchg
xchg
cmpsl
roll
lea
addr16
insl
lea
cmpsb
xlat
shlb
int3
or
and
xorl
fmul
cmp
pop
sahf
push
dec
jo
cmp
sub
mov
enter
scas
rcll
bound
lahf
fdivr
inc
or
dec
into
push
les
xor
addb
and
pop
iret
pop
pop
xor
adc
xlat
in
cmp
gs
dec
data16
sub
xchg
pop
mov
sbb
push
jno
test
push
dec
pop
xor
test
mov
icebp
or
inc
mov
mov
cmc
enter
repz
gs
mov
imul
sbb
insb
xlat
mov
icebp
pop
popf
ss
rclb
jge
xor
xchg
or
shl
testb
je
lods
sbb
testb
mov
dec
adc
insb
sahf
fldt
xor
rolb
adc
adc
and
add
mov
pushf
cmpl
popf
je
jbe
xorb
in
aad
das
clc
sub
mov
test
ja
test
jp
pop
push
xor
shll
xchg
inc
lods
popf
sub
push
xor
orl
pop
movsl
loope
jnp
in
jb
leave
jle
leave
in
int
xchg
jmp
arpl
imulb
mov
pop
repnz
sti
sub
popa
sbb
ljmp
xor
mov
sahf
imul
sti
push
movsb
inc
rol
mov
pop
mov
xchg
jl
xor
shll
mov
subl
aam
sbb
shlb
pop
outsl
sti
push
dec
push
jp
push
add
outsl
js
add
and
push
fcoms
pop
movsl
mov
dec
mov
cmp
push
or
add
or
pop
aam
notb
jp
jge
addb
jns
roll
xchg
cmp
xchg
lret
push
loopne
cmp
fcompl
cmp
pop
cmp
mov
add
test
xchg
out
cmp
sub
cmpsl
push
xlat
outsb
mov
mov
sbb
mov
dec
sub
xchg
cs
dec
sub
inc
mov
xchg
cmp
xor
mov
sarl
inc
call
outsl
pop
movsl
mov
out
insl
mov
push
jae
xchg
mov
mov
push
pop
enter
xchg
jmp
jge
lret
adcb
and
adc
xor
mov
aaa
xchg
jne
daa
xchg
sub
adc
sub
lea
lret
mov
lcall
gs
sbb
pop
and
mov
sbb
int3
daa
jnp
push
inc
je
jecxz
icebp
push
pop
lahf
test
dec
int
outsb
add
mov
sbb
xchg
cld
xchg
pushf
or
jmp
lret
int3
insb
faddl
jbe
loop
out
adc
and
mov
movsb
out
jo
push
push
mov
adc
mov
aas
jle
cli
insl
or
or
sbb
into
pop
ror
in
mov
xchg
sti
jmp
cmp
pop
fimull
mov
dec
xor
sbb
or
mov
pusha
sti
push
icebp
inc
sub
dec
leave
fdivrs
push
rcrl
or
mov
sbb
ror
cmp
fcomp
or
call
jp
js
loope
mov
ss
and
jo
loope
xor
ss
enter
repnz
cltd
cmp
jg
xor
inc
lds
push
push
jge
pop
pop
add
xor
sbb
icebp
xchg
aad
sbb
inc
ss
in
push
pop
imul
xchg
and
mov
inc
dec
dec
arpl
pop
bound
ror
shlb
mov
sbb
stos
pop
shrl
test
out
out
repnz
pop
nopl
test
inc
inc
cmp
fisttpll
pushf
jb
ljmp
out
xchg
dec
cli
cld
mov
setg
jmp
mov
dec
adc
and
das
andl
imul
adc
popf
mov
sbb
mov
pop
jns
subl
sub
or
int3
subb
negb
xchg
addr16
sahf
cmp
cs
idivl
ficoms
je
jmp
inc
xchg
lods
data16
xor
and
jne
push
popa
pop
rcr
fiadds
cwtl
movsb
xchg
xchg
lods
int
cwtl
mov
xchg
cld
add
push
xor
mov
sbb
sti
pop
mov
add
sahf
addr16
scas
notl
sbb
pop
mov
cltd
jmp
and
inc
adc
data16
sahf
xor
aaa
pop
fsubs
inc
cmp
pop
scas
sbb
adc
das
add
inc
and
add
jns
push
je
cmc
cwtl
mov
mov
mov
push
mov
pop
jae
jmp
mov
shl
ds
jle
push
movsl
insb
cltd
sti
das
incb
push
mov
push
adcb
cmpsb
pop
jg
pusha
xor
cmp
cwtl
push
jb
mov
cmc
test
insl
cmpsl
add
in
je
sub
int3
movsl
mov
in
pop
or
push
imul
test
in
aaa
sub
pop
jnp
ror
push
pop
cmp
push
jmp
sbb
repnz
loopne
loopne
cmp
xchg
faddl
cmpsl
cld
jno
test
movsb
movsb
xor
push
mov
adc
stos
cmc
out
punpcklwd
add
sbb
inc
sbb
cmp
sahf
xor
aam
jg
xor
sbb
jns
sub
es
jp
mov
xchg
fistpl
js
jb
adc
push
andl
mov
sti
sbb
sub
shl
sub
pop
sti
arpl
shlb
test
stos
adc
push
dec
sbb
setle
mov
fldl
lcall
mov
mov
loopne
sbb
ljmp
jp
pop
push
movsb
adc
and
fbstp
nop
cli
sub
movsl
and
fistps
insb
clc
or
push
test
movsb
roll
sbb
in
cmc
mov
shr
mov
aad
sub
mov
das
or
jg
and
push
xor
sahf
adcl
pop
push
decb
inc
inc
hlt
fcoml
repnz
mov
shrb
mov
cmp
xor
hlt
adc
testl
lock
scas
inc
jmp
ss
mov
aam
or
lcall
push
xor
aam
aaa
sbb
push
mov
pop
push
icebp
pop
lcall
push
idivl
xchg
mov
cltd
sbb
mov
mov
cmp
sub
mov
insl
stos
ja
outsb
pusha
mov
push
cmp
sub
push
dec
out
sbb
cwtl
outsb
loop
jns
mov
adc
andl
pop
sbb
std
seta
iret
sub
cmc
insb
mov
ror
imul
push
and
outsl
dec
sub
lods
cmc
jge
das
nop
dec
jbe
adc
inc
enter
pop
jbe
add
mov
push
lea
ret
sub
add
cmp
jae
gs
pop
mov
in
jmp
lret
fwait
mov
pushf
int3
mov
mov
es
inc
mov
sti
mov
mov
sub
iret
pop
pop
mov
adc
inc
sub
push
mov
stos
cmp
push
or
pop
jge
dec
and
leave
inc
scas
or
add
and
sbbl
sub
mov
cmp
rcll
mov
outsl
mov
xor
sub
je
fs
aad
jbe
sbb
pusha
sub
aas
xchg
xorl
lcall
cmp
jle
clc
jp
mulb
das
cmp
inc
nop
or
call
mov
subl
stc
sti
mov
xchg
sti
sbb
adc
lret
mov
dec
pop
sbb
fmul
js
xchg
clc
daa
xchg
fs
jno
not
popf
mov
fld
cmp
sbb
xlat
push
jno
add
xor
fs
not
mov
sti
orb
jb
pop
and
in
pop
popf
rorb
call
aad
mov
jmp
ret
pop
sbb
xchg
sahf
jae
cmp
leave
inc
pop
adc
mov
jl
mov
lret
clc
movb
and
push
ljmp
insl
cmpsl
mov
mov
mov
jmp
or
outsl
and
or
xchg
pop
pusha
cmp
insl
jbe
mov
sbb
sbb
nop
push
je
loop
push
leave
fsubs
and
xor
mov
adc
sub
ja
das
cmp
scas
fwait
jne
scas
ljmp
roll
sbb
les
fiadds
push
fdivrs
cltd
cmpsl
mov
out
adc
enter
inc
inc
imul
ret
or
fists
aad
xor
xor
jp
movsb
je
xchg
and
ror
jmp
jb
xchg
lods
dec
mov
shll
push
inc
insb
xchg
fisubs
sbb
pop
std
lcall
mov
icebp
mov
test
pop
xchg
cmc
mov
cmp
ds
cmp
mov
mov
out
ffree
adc
dec
bound
sbb
sub
aad
aas
add
sub
addr16
in
sub
movsb
faddp
jbe
jecxz
add
cmp
daa
shr
dec
push
decl
inc
cld
sahf
sbb
inc
pop
andb
inc
out
push
sbb
shl
mov
aad
sub
or
test
sbb
or
loopne
mov
adc
int
jmp
pop
add
xchg
push
outsl
and
sbb
dec
add
outsb
or
hlt
sbb
in
and
add
test
nop
or
and
outsb
repz
push
notb
sub
dec
loope
lcall
push
imulb
hlt
outsb
add
mov
insb
adc
adc
mov
inc
adc
sbb
test
icebp
subb
leave
test
into
je
xor
cmp
stos
cs
into
xchg
stos
xchg
jp
lock
icebp
outsb
adc
in
sbb
or
cmp
and
sahf
mov
push
icebp
pop
xor
pop
lret
mov
mov
int3
add
repz
push
sti
push
dec
dec
or
cld
mov
dec
imul
xor
cmp
mov
cli
test
sbb
inc
xor
pop
push
dec
stos
cmp
shl
jb
aam
scas
test
cli
arpl
inc
mov
or
inc
lods
fcoms
pop
movsl
inc
xlat
or
or
daa
cwtl
mov
jl
xor
ret
mov
sbb
cmpl
mov
and
fsubrl
mov
mov
xor
inc
push
jl
xchg
dec
stc
add
std
sbb
cmpsb
clc
adc
iret
add
jl
jecxz
mov
in
aam
mov
lcall
out
hlt
roll
cli
jno
add
fstpl
mov
into
pop
fstpl
inc
push
xchg
xor
fcmovb
lds
push
cmp
push
jne
lahf
mov
lret
fldt
xchg
mov
daa
sbb
push
xorb
sti
jbe
jmp
add
in
sbb
push
sti
and
mov
push
adc
push
xorl
pop
mov
loop
cmp
push
call
scas
mov
aad
pop
dec
lret
data16
mov
and
popa
pop
jo
std
in
test
mov
cs
fidivrl
jae
mov
repnz
cmp
arpl
sbb
lods
xchg
jnp
int3
ljmp
cmp
jge
and
rcl
and
in
add
arpl
ja
in
cmp
bound
shl
jbe
ficoms
mov
push
hlt
pop
jl
xchg
movsl
adc
mov
jne
es
jge
rolb
push
mov
int
movsl
lea
icebp
pop
in
in
in
inc
sar
mov
add
in
jne
adc
push
das
ja
pop
inc
xchg
mov
outsl
sahf
and
push
test
ljmp
in
aam
repnz
pop
test
mov
js
mov
jns
int3
xchg
xor
push
aam
shll
roll
xor
cmp
mov
outsw
xchg
icebp
and
cmpsl
cltd
arpl
add
cmp
push
movsl
xor
add
enter
add
stos
repz
adc
push
mov
mov
push
mov
sub
mov
jb
mov
lods
xlat
or
add
fucomip
mov
stos
cmpsb
cwtl
insb
pop
icebp
dec
cld
shll
jecxz
imul
jl
shll
push
add
addr16
movsb
cmp
cli
std
xor
pusha
stos
xchg
mov
int
cmp
popf
lret
movsb
sbb
cwtl
mov
lret
jbe
sti
jns
iret
adc
jl
test
les
pop
mov
jmp
inc
test
pop
std
out
inc
mov
loopne
add
sbb
mov
adcl
add
jmp
sbb
and
push
fwait
push
stos
cmp
inc
fldl
stos
push
subl
xor
sub
fnstcw
mov
inc
stos
rcl
mov
and
xchg
push
roll
clc
scas
mov
loope
and
or
push
push
ljmp
dec
aam
hlt
cmp
adc
std
sub
xchg
loop
sbb
cmp
es
out
inc
popf
leave
pop
xchg
mov
fnstcw
out
enter
cwtl
shlb
jp
cmp
loopne
scas
mov
inc
dec
lahf
mov
in
call
and
xchg
mov
and
and
mov
push
movsl
test
adc
inc
pusha
push
xchg
popf
fsubl
pop
aaa
xchg
xchg
dec
in
stos
or
xchg
and
push
sbb
aaa
imul
rclb
cmpsb
push
arpl
test
test
xchg
fnstenv
shll
mov
xchg
stos
xor
mov
into
outsl
xor
into
fbstp
movsb
add
pop
lea
repz
fldcw
xlat
imul
cmp
or
cli
ljmp
add
inc
in
dec
stos
lods
dec
pop
or
jnp
mov
scas
fcmovb
call
aam
mov
inc
dec
lods
push
push
push
pop
jge
mov
test
lods
arpl
jns
pop
pop
fnstcw
sub
insl
cld
sbb
cmp
rep
ss
jmp
call
std
push
jl
dec
mov
and
sbb
pop
xor
addb
loopne
xchg
outsb
push
loopne
xor
push
in
mov
fsubrs
push
mov
icebp
xchg
sub
std
test
std
in
or
xchg
and
repnz
stc
sbb
loopne
fadds
sub
inc
insl
nop
mov
jg
dec
xor
inc
out
gs
adc
jp,pt
jg
sbb
sbb
fidivs
dec
and
jmp
xor
sti
popa
shlb
lea
or
out
xor
clc
adc
test
inc
mov
jae
std
test
mov
xor
cltd
cmpl
cmp
divb
fistl
popf
pop
insb
xlat
inc
xchg
out
enter
jns
in
cltd
sti
add
out
lock
sbb
mov
rcrl
aas
int
jne
dec
es
jae
sbb
aaa
fwait
mov
outsl
mov
adc
jo
pop
ret
xor
sbb
inc
jns
lret
inc
lea
sub
nop
cwtl
xchg
popa
xchg
add
xchg
jmp
fwait
lea
push
out
mov
inc
push
pop
ficoms
pusha
mov
les
test
mov
hlt
mov
mov
data16
fstps
out
dec
jge
adc
pushf
test
fdivrs
test
and
xchg
mov
dec
adc
test
mov
sub
dec
insb
push
jp
inc
imul
push
cwtl
out
imul
push
mov
and
dec
js
xorl
cltd
jl
cld
inc
jno
fwait
popa
das
inc
cmpl
loopne
xor
cld
cmp
mov
mov
add
nop
mov
jae
loope
fs
cld
jmp
mov
subb
imul
mov
or
movsb
leave
push
cmpsl
roll
xor
loop
xchg
pop
jecxz
lret
outsl
cmp
fdivl
lods
cmp
mov
rcl
insl
jno
andb
jns
xchg
mov
ds
xor
jnp
jns
enter
sbb
clc
arpl
mov
cld
fcoms
iret
inc
cmp
cs
loop
mov
and
icebp
out
mov
pop
arpl
loope
int
dec
rorl
jnp
testl
ret
dec
leave
mov
mov
in
insl
jle
lock
add
ret
in
xor
rcr
dec
pop
cmp
pusha
data16
pop
push
out
adc
jge
mov
ljmp
sbb
xchg
pop
test
jecxz
cwtl
mov
dec
je
call
jnp
pushf
cmc
dec
cmp
dec
shrl
ficoms
bound
lods
mov
xchg
dec
popa
jle
push
movsb
sarl
mov
sub
test
test
mov
test
sbb
xor
dec
mov
js
cwtl
sbb
adc
mov
push
add
scas
stc
les
mov
and
push
mov
jg
sbbl
in
sbbl
pop
pop
jo
xor
addb
cli
and
mov
dec
arpl
mov
cmpsl
fimull
lret
iret
enter
xor
or
ja
sbb
dec
test
lret
shrb
insb
ja
add
sub
mov
sub
push
xor
push
inc
adc
add
xchg
mov
movsl
mov
push
dec
xchg
jle
sub
dec
dec
adcb
pop
nop
mov
test
or
ljmp
int
xchg
cltd
jp
in
insb
mov
pusha
sub
inc
bound
jnp
and
jg
cmpsl
dec
push
das
sbb
push
lods
add
mov
pop
cltd
jns
mov
nop
gs
xor
popf
pop
iret
rolb
push
sbb
or
or
cs
dec
cmp
fcoml
xor
mov
test
and
xchg
dec
cmp
mov
jnp
lea
adc
jecxz
fsubl
mov
mov
jmp
cmp
shlb
push
add
fldl
sbb
xor
rclb
jl
inc
jl
push
adc
cmp
fldcw
cmp
jbe
add
dec
pop
sbb
add
pushw
adc
xor
dec
pushf
and
iret
mov
std
jne
cmpsb
push
cmpsl
adc
cmp
cs
xor
cltd
roll
push
sarl
dec
mov
cmp
sub
jmp
adc
out
test
ss
jmp
jae
sub
push
sbb
or
je
mov
jl
daa
inc
outsl
mov
adc
ss
inc
rcr
adc
shll
jp
popf
movsl
mov
pop
adc
add
scas
aaa
dec
inc
in
in
pop
ret
adc
sti
js
and
scas
sbb
dec
push
jmp
nop
sbb
aam
sbb
ror
sbb
dec
push
jno
dec
and
fs
lds
addr16
inc
in
mov
push
pop
test
dec
bound
sbb
xlat
push
pop
dec
pop
inc
repz
ljmp
fdivrs
or
cmpsl
sub
popa
ficompl
pop
push
pop
pop
imul
add
cmp
or
test
xchg
mov
jge
push
les
and
scas
repz
and
ljmp
mov
aam
xor
enter
dec
int3
nop
mov
aas
adc
inc
xchg
cmp
popa
jbe
xor
adc
or
sub
movsl
or
mov
cld
pop
scas
xchg
jnp,pt
fnstenv
push
inc
leave
inc
repnz
xchg
push
mov
adc
outsl
rorb
repz
aad
rclb
cltd
jge
cmpsl
and
jbe
mov
outsb
loopne
mov
aaa
inc
fstpl
outsb
push
loopne
es
mov
test
rcll
sub
sbb
xchg
sbb
fcoms
dec
mov
into
movsl
and
mov
add
adc
mov
push
shrl
inc
jmp
out
insl
mov
xor
dec
test
sub
dec
inc
out
jg
test
jecxz
stos
into
out
aas
lock
xor
imul
and
sub
mov
push
int
shlb
popa
mov
cmp
test
out
cmp
popf
enter
xlat
jge
dec
daa
mov
pusha
xchg
fnstenv
jb
jo
push
les
jecxz
xor
adc
sbb
scas
cld
or
lods
sub
scas
and
test
dec
shll
push
sti
jg
inc
idivb
leave
mov
icebp
fs
and
sbb
sbb
fstps
popa
mov
or
or
xorb
fsubrl
sbb
fwait
jb
sub
mov
lock
mov
mov
jmp
mov
mov
in
and
lock
xchg
sbb
loopne
mov
or
pop
orb
sbb
iret
jbe
std
pop
mulb
xor
lock
mov
test
or
pusha
addr16
imul
pop
pop
xchg
inc
xor
xlat
repz
sahf
testl
cltd
daa
outsb
out
popa
repnz
lea
add
lea
stos
mov
leave
dec
repnz
sub
shll
adc
pop
mov
fcmove
lcall
adc
jmp
jge
inc
push
aas
inc
les
outsl
jae
mov
js
mov
sarl
inc
jg
add
push
pop
inc
mov
mov
jae
pushf
push
clc
daa
gs
into
dec
sbb
adc
mov
cmc
lods
push
ds
test
fsts
pop
scas
icebp
cmp
cmpsb
and
les
js
mov
insb
insl
mov
xor
adcb
sub
es
xchg
int
and
arpl
sbb
sar
mov
pop
lahf
xor
xor
ret
pop
pop
out
adc
jno
cmpb
repnz
sbbl
xor
sub
lock
push
test
pusha
test
rorl
clc
adc
jo
repnz
pop
xchg
inc
hlt
test
movsb
call
fs
test
rorb
add
js
stos
pop
push
faddl
cmp
push
xor
pop
or
dec
adc
gs
sub
andl
je
pop
jle
in
or
test
push
test
inc
popf
mov
xchg
aad
pop
aam
xor
jge
jge
in
fxch
popf
add
sti
fmuls
and
arpl
sbb
mov
sub
movsl
mov
pop
lods
faddl
stos
and
pop
repz
mov
or
dec
and
nop
cmpsb
sahf
mov
add
sub
cmpl
mov
iret
repnz
iret
mov
inc
inc
add
int3
out
inc
mov
push
xchg
fsubs
loope
sbb
cmp
mov
lock
pushf
movsb
sub
movsl
mov
or
mov
aaa
movsb
mov
cmpsl
mov
ficoms
icebp
cwtl
sub
je
lea
add
add
lret
sub
cltd
gs
sahf
pop
sub
iret
or
pop
jl
rcll
xchg
lcall
sbb
xchg
jne
notb
rol
out
sbb
sbb
sbb
pop
out
push
mov
pop
xchg
dec
subl
addr16
jmp
dec
jecxz
lret
mov
mov
ret
mov
add
push
mov
jb
scas
push
mov
cli
data16
insb
test
dec
mov
orb
add
add
rolb
test
add
xor
jecxz
sbb
fcmovne
in
cli
and
hlt
nop
out
testl
outsb
arpl
bnd
jae
jbe
mov
loop
cmp
xor
les
mov
xor
mov
jnp
jmp
dec
cmp
mov
add
repz
or
jno
bound
fnstsw
jle
pop
sbbl
mov
xchg
sbb
mov
or
add
cmpsl
popa
jns
push
pop
fisttpll
jge
mov
lods
xor
inc
push
push
xchg
mov
push
movsl
mov
fmuls
ret
lahf
and
mov
test
push
push
test
jo
jns
jae
mov
out
mov
movl
imul
inc
xchg
repnz
mov
clc
icebp
fnstcw
dec
and
fisttps
lret
jbe
xchg
xor
fwait
popa
in
outsl
inc
mov
xchg
sub
leave
aaa
inc
xor
popa
xchg
popa
xor
cmpsl
insb
inc
mov
jecxz
inc
mov
cmpsl
int3
les
movsb
adc
jb
xchg
mov
mov
mov
insl
cmp
out
sbb
or
lds
pop
dec
or
jmp
iret
movsl
int3
mov
cli
jns
lock
push
jno
and
int
decb
fldl
data16
sub
pop
shrb
dec
cmp
test
neg
push
jge
sti
popa
imul
jo
in
adc
into
jno
es
test
or
daa
fbstp
or
and
clc
inc
cmp
es
adc
mov
and
inc
xor
rcll
dec
mov
int
out
fucomp
ror
stos
and
movb
xchg
fdivrp
arpl
sub
add
lds
vpaddusw
mov
mov
jb
test
mov
push
lahf
add
pop
ljmp
push
and
jge
jbe
pusha
dec
dec
cmpsl
sbb
les
rorl
jl
shl
dec
push
dec
push
xchg
mov
cmpl
xchg
sbb
add
mov
push
outsl
mov
je
and
icebp
int3
das
lds
in
pop
aas
xor
push
pop
fdivrs
push
lret
cmp
inc
lcall
mov
aad
test
mov
lods
fmulp
fucom
rclb
inc
repnz
out
or
add
or
push
cmp
pop
add
aaa
lcall
xchg
in
fsts
dec
loope
insb
pop
pop
adc
xor
orl
fs
bswap
int
dec
sub
scas
mov
sahf
mov
ja
jae
inc
push
xchg
stc
mov
loop
ljmp
jle
test
es
cmp
outsb
sarl
int3
xchg
mov
cmp
mov
and
pop
xchg
lods
inc
jo
mov
pop
and
mov
sbb
and
lock
jmp
mov
popa
dec
iret
test
sbbl
push
push
xchg
jns
nop
out
lahf
push
out
jp
push
sbb
test
int3
pop
dec
mov
xchg
movsl
aas
inc
aad
sub
sub
jl
movzwl
fs
mov
jg
cld
lret
roll
push
inc
mov
fstps
dec
push
mov
sbb
outsl
in
int3
in
inc
adc
aas
repnz
outsl
push
pop
lcall
aad
pop
testb
adc
aaa
testb
call
aad
dec
daa
test
bound
test
jge
pop
aaa
adc
pushl
jne,pt
push
shll
lea
repnz
movb
out
jge
mov
das
mov
ja
xor
push
jg
and
stos
int
idiv
jmp
scas
sub
mov
sbb
mov
pushl
cmp
pop
movsb
daa
mov
sbb
lcall
dec
pop
popa
cmp
mov
or
nop
xchg
ss
imul
lcall
mov
mulb
aas
nop
ret
push
cmpsb
stc
mov
daa
cmp
ds
cmpsb
push
add
mov
mov
test
arpl
xor
dec
sub
pop
sbb
add
es
sbb
daa
jae
and
pop
cmp
bound
nop
subw
push
xchg
adc
xor
movsb
test
xchg
mov
sub
push
lcall
inc
pop
in
popf
rcr
out
cmc
movsl
bound
jl
xchg
sahf
pop
repnz
lds
pop
pushf
movsl
aam
add
sub
andb
arpl
das
jns
jae
or
scas
cltd
adc
fidivrl
repz
out
sbb
dec
xor
mov
idivl
loope
push
ficoml
scas
cmpb
js
push
dec
xlat
jae
sti
cwtl
add
shll
aaa
mov
sahf
js
test
jge
lahf
cmp
scas
mov
and
or
cltd
mov
jmp
pop
lods
cmpb
aam
test
inc
lahf
cs
sbb
xor
fisubs
mov
cmp
xor
jns
call
popf
popa
lcall
stos
mov
call
out
stos
jmp
out
pop
push
daa
sbb
test
daa
cmp
dec
xorl
inc
mov
and
ret
sarl
or
pusha
mov
sub
aam
inc
mov
jno
jbe
push
jno
dec
sti
pop
jg
sub
cmpsl
daa
sbb
pop
loopne
dec
gs
adc
ljmp
jne
rcrl
scas
in
call
mov
jp
fidivrs
or
mov
inc
mov
cmpsl
fwait
adc
lcall
jmp
lods
sub
inc
stos
inc
lods
sbb
test
pop
into
pop
daa
pop
fmuls
addr16
push
jp
push
shlb
push
push
push
and
test
mov
inc
aas
into
jo
imul
jmp
push
sahf
cmpsl
idivb
pop
movsb
push
adc
add
xorb
cli
sub
rolb
fnstenv
dec
adc
mov
mov
daa
sub
in
pop
ds
in
aam
ficomps
leave
xor
mov
or
pop
arpl
dec
pop
mov
jnp
addb
and
push
mov
in
adc
pop
clc
cmp
addr16
repz
lea
stos
fcos
pushf
rcrl
repz
sub
xor
fs
fsubl
sbb
rolb
adc
push
nop
test
pop
dec
rolw
cmp
cmc
out
pop
lods
cmp
push
ret
mov
in
fcmovnb
not
vcomiss
fwait
xchg
cmp
push
mov
insb
mov
fbstp
and
mov
xor
std
add
inc
push
andl
es
xor
mov
push
xchg
mov
aam
into
lcall
imul
mov
mov
nop
xor
dec
pop
iret
mov
jl
cmp
jg
mov
and
ret
int3
cmpsb
lea
cltd
sbb
push
dec
es
dec
invd
mov
xchg
sti
lds
arpl
mov
sub
nop
sbb
xchg
mov
ja
push
jb
outsl
movsl
adc
std
mov
cmp
movsl
rorl
hlt
mov
gs
dec
adc
push
jecxz
adc
dec
int3
ficomps
cmp
sub
dec
cmp
shlb
pop
int
popf
jb
test
add
in
xchg
jl
ret
lock
mov
jl
loopne
mov
and
add
adcb
outsb
mov
dec
adc
aad
dec
jmp
into
out
inc
pop
adc
xor
repz
pop
dec
cmp
or
ss
push
testb
sbb
mov
and
addr16
or
mov
and
jbe
lcall
int
stos
dec
repnz
xor
leave
cld
sti
push
mov
mov
mov
out
add
xor
xchg
mov
mov
mov
add
icebp
cltd
pop
jmp
jbe
sub
repz
sbb
inc
cmp
sbb
movsb
sbb
pop
pop
add
fcomps
rcll
push
cld
jp
adc
adc
push
mov
sbb
outsb
jmp
xor
mov
mov
jne
rclb
scas
mov
mov
sub
add
inc
ds
movsl
adc
dec
hlt
mov
std
je
arpl
not
subl
inc
enter
cmp
push
repz
inc
testl
push
pop
mov
std
rclb
jecxz
pop
mov
push
mov
jne
testb
es
pushf
push
xor
push
aaa
sbbl
cmpsw
je
mov
add
xor
jl
dec
repnz
mov
ds
loop
pop
dec
mov
dec
jne
jmp
cmpsb
mov
or
mov
pop
cmp
or
test
jl
jne
jge
push
cwtl
mov
cwtl
je
and
mov
cmpsl
push
adc
fbld
clc
or
ret
add
or
inc
sbb
jp
les
out
xchg
xor
xor
aad
aaa
mov
out
sub
shlb
push
insl
add
cmpsb
popl
shlb
or
push
fscale
pop
cmpsb
sti
mov
pop
stc
xor
cmp
pop
out
mov
add
mov
scas
imul
jp
sahf
jb
cwtl
jp
stos
pop
adc
inc
out
orb
cmp
icebp
movsl
xchg
shr
lahf
xor
aad
pop
jle
dec
adc
loopne
xchg
insb
in
lods
pop
ds
in
and
push
fidivrs
ljmp
mov
mov
aas
or
iret
mov
jmp
inc
inc
cmp
shrb
add
addr16
nop
lock
test
dec
xor
divb
in
rcll
mov
adc
pop
and
ret
and
outsb
rep
xchg
xor
pop
dec
cmp
mov
mov
pop
sub
pop
push
adc
loope
lahf
xor
xchg
push
stos
pushf
movsb
arpl
fldenv
or
imul
fisubrl
and
mov
lods
stos
mov
fisubl
mov
in
mov
icebp
insb
xchg
inc
push
adc
xor
pop
lret
gs
and
stc
lcall
int
mov
scas
sahf
stos
ret
imul
ss
xor
enter
sbbl
adc
pop
inc
pop
loope
pop
adc
out
insl
cld
and
and
stos
pop
push
dec
in
js
data16
mov
push
fs
add
inc
mov
mov
cmc
inc
mov
cmp
jl
aam
pop
fildl
and
adc
mov
inc
adc
imul
in
ljmp
sub
cltd
lahf
das
je
aas
adc
pop
xchg
pop
dec
sbb
or
fdivrs
in
cwtl
rcrb
and
shlb
xchg
ljmp
jae
inc
mov
mov
lcall
pop
push
mov
call
sub
sub
test
lcall
fstl
jnp
ds
xchg
pusha
lea
and
cltd
fdivl
cmpsl
aad
xor
jg
adc
sub
push
mov
popf
pushf
addr16
sti
sbb
loop
pop
je
das
sub
xor
mul
sarb
scas
data16
outsl
jno
fsubrl
push
test
jle
inc
adc
loope
mov
adc
add
jle
xlat
test
mov
mov
push
mov
es
addr16
or
rolb
mov
mov
lret
js
mov
mov
mov
stc
add
rolb
repz
dec
aas
mov
ss
pop
xchg
push
loopne
mov
clc
mov
cmc
fnsave
rorb
scas
mov
jp
cli
cwtl
repz
mov
out
dec
xchg
aad
cmp
fistl
movsl
add
mov
push
jmp
ret
pop
mov
cmc
inc
scas
ds
jae
inc
sub
in
cmpsb
or
xchg
leave
xor
sbb
aas
pop
loop
fadds
bound
inc
movb
sub
aas
sub
cmp
hlt
stos
in
fwait
jle
jae
pop
lcall
and
pusha
in
sbb
push
dec
sub
sbb
dec
movsl
xchg
fsub
iret
ret
enter
mov
jb
mov
flds
xchg
and
xchg
repz
xchg
push
sub
mov
lret
mov
jnp
push
inc
push
nop
cvtdq2ps
in
pop
add
cli
stos
dec
xor
jbe
mov
mov
lods
xchg
inc
enter
sbb
popf
fadds
xor
mov
sar
push
sub
out
adc
mov
sub
outsl
aad
push
std
dec
adc
inc
cmp
mov
ds
loope
cwtl
xor
out
outsl
nop
popf
cmpl
cmp
aad
adc
pop
jne
js
jno
imul
add
mov
inc
lods
cmpsl
inc
push
sub
push
mov
or
gs
adc
xor
xor
mov
fsubrl
dec
push
adc
and
rcr
adc
push
mov
scas
insb
cmp
pop
mov
mov
test
mov
lret
int3
pop
and
je
arpl
fnsave
insb
call
popa
pop
push
loope
cmp
ds
cmp
push
cmp
pop
mov
jg
sbb
pusha
adc
in
mov
js
pushf
nop
sahf
pop
sbb
mov
mov
push
push
and
push
loop
adc
jbe
xchg
push
jnp
adc
cld
mov
and
sahf
mov
or
mov
es
dec
cmpsb
je
ds
jbe
nop
mov
push
dec
call
jno
adcb
sahf
clc
cli
pop
pop
scas
movsl
or
mov
xchg
push
cmpsl
adc
sbb
aam
and
dec
stos
out
fistl
add
idivl
and
mov
push
jb
push
pop
sahf
sub
testl
fimuls
outsl
cmpsl
es
jg
movsb
and
mov
inc
push
dec
fsub
imul
pop
lahf
leave
pusha
xchg
mov
push
xor
int3
xchg
stc
insl
or
shlb
dec
mov
jae
ja
jns
xlat
lods
cli
repz
or
xor
mov
jge
add
aas
icebp
sub
sub
push
sarl
adc
add
dec
data16
xorb
sbb
inc
lock
daa
cld
repnz
shrl
jb
rorl
add
aam
mov
iret
mov
enter
and
lea
cmpsb
and
add
inc
into
mov
int3
jge
add
xlat
sub
repz
pop
pop
fwait
add
jge
lock
lock
das
push
fs
pusha
ljmp
xor
cmc
xor
xchg
push
adc
and
cmp
push
sub
sbb
rclb
fnstcw
fsubrl
out
ss
or
popa
xor
dec
or
fildl
cli
rolb
imul
incl
out
jge
jle
subb
insb
jecxz
or
pop
js
je
addr16
das
imul
pop
shrl
in
mov
cmpb
push
rorl
int
cwtl
inc
je
sub
cwtl
out
in
addl
and
cli
mov
lods
xchg
add
scas
in
add
cltd
call
pop
pop
ja
dec
out
lods
push
and
shlb
or
push
fsubs
push
aas
xchg
xor
pop
xor
push
xor
dec
lcall
cmp
xchg
daa
pop
aad
test
js
adc
pop
jge
scas
push
jae
add
cli
sbb
inc
sub
xchg
sbb
push
xor
jp
cmp
ss
push
arpl
sbbl
test
out
scas
adc
jmp
pusha
sbb
dec
aaa
out
fidivrl
pop
add
aas
push
lcall
push
sbb
and
xorb
inc
dec
or
adc
add
dec
fsubr
mov
ret
aam
loope
ret
jne
inc
xchg
je
stos
mov
ret
xor
stos
cmp
xchg
and
cwtl
xchg
movsb
je
ret
cmp
jno
jnp
cmpsl
dec
fs
lret
sub
and
mov
movsl
andb
adc
cltd
push
jbe
fiaddl
in
les
test
pause
cmp
or
push
sahf
lcall
outsb
push
jmp
in
xor
outsl
cmp
ret
pop
sub
pop
and
xor
addr16
into
aaa
or
fs
pop
mov
clc
leave
push
insb
in
test
fcoml
lcall
and
ja
in
das
cmp
mov
scas
scas
sub
cli
divb
jnp
mov
or
xchg
sub
jne
jnp
or
imul
adc
inc
in
mov
add
cmp
outsb
pop
lcall
xor
imul
inc
adc
popf
and
push
push
fcompl
jno
call
pusha
in
jecxz
js
pushf
in
scas
push
inc
cmp
loop
popa
les
js
ljmp
icebp
loopne
shll
add
rorb
jnp
sbb
mov
and
test
push
cltd
push
cmp
xor
dec
pusha
int
xchg
dec
or
into
shlb
mov
les
pop
sub
push
call
pop
or
mov
xor
bound
dec
js
sarl
and
iret
daa
push
xor
sbb
fxch
pop
insb
lds
mov
mov
jno
mov
jmp
mov
fisttpll
sub
push
in
es
jl
xchg
mov
jbe
add
ud2
mov
jge
mov
imul
stos
mov
dec
insl
in
mov
clc
data16
into
pop
movsl
push
test
fs
dec
push
add
jecxz
add
hlt
rorb
push
rorb
xor
or
aam
or
ljmp
mov
adc
xchg
icebp
mov
imul
out
sbb
push
mov
mov
add
shr
cld
dec
mov
arpl
cld
mov
popa
dec
cs
push
mov
rorb
cmp
jb
xor
out
popl
fistpll
aad
pop
cmp
sar
lods
xchg
shll
loope
xchg
arpl
dec
int3
mov
cmc
push
stc
jl
pop
or
xchg
cmpsl
xchg
dec
xchg
dec
cli
cmp
cmp
jge
sbb
xchg
shl
stos
leave
movsb
push
movsl
xlat
add
add
call
inc
xchg
ljmp
mov
xchg
ficomps
pop
cmpsl
pop
or
lret
ss
sbb
scas
icebp
pop
mov
inc
or
mov
into
push
sahf
add
inc
outsb
pop
sbbb
xchg
ret
fdivr
inc
in
adc
sub
cmp
push
xor
mov
cld
dec
nop
sub
adc
mov
gs
or
sahf
inc
cmpsl
sbb
cmp
int
pop
shr
mov
test
mov
fisttps
push
pop
xchg
enter
mov
xlat
dec
push
push
xor
in
push
test
adc
sar
inc
and
imul
pop
fld
add
inc
mov
push
cmpsl
and
mov
psubd
sbb
stc
jmp
in
cmp
adc
sbb
imul
ficompl
mov
mov
xor
mov
lock
mov
fsts
in
and
inc
push
outsl
aad
xor
movsb
insb
jg
mov
and
pop
pop
push
outsl
pop
mov
fs
lds
sti
clc
sbb
fcomps
sub
mov
cmp
imul
mov
scas
pop
pop
dec
shll
pop
icebp
cli
xor
imul
pop
add
les
push
push
xchg
and
loop
jmp
inc
orb
mov
es
shlb
pop
adc
das
ja
xor
cwtl
pop
push
sahf
dec
notb
mov
add
mov
jae
sahf
cld
mov
adc
mov
notb
fidivrs
cld
insb
bound
mov
xchg
fistpll
push
ljmp
sbb
aad
in
or
arpl
jnp
scas
pop
aaa
jmp
aad
lahf
rorl
pushf
add
add
inc
inc
subb
inc
gs
dec
fs
pop
aad
xor
cwtl
mov
les
dec
push
xchg
and
xor
or
out
cmp
filds
test
arpl
or
dec
les
shlb
in
pop
xor
nop
cmc
mov
push
jo
pop
into
push
xor
dec
outsl
mov
sarb
scas
xchg
fdivs
mov
sub
divb
sbbb
rcll
mov
mov
aas
mov
scas
inc
out
fnsave
add
js
stos
cmp
popf
dec
lock
rolb
ret
mov
packuswb
sub
mov
lods
mov
addl
lock
mov
xchg
lds
pop
adc
jg
stos
sbb
std
outsl
imul
movsl
aad
push
mov
in
mov
sbb
bnd
orb
jecxz
pusha
mov
mov
lods
adc
mov
mov
push
lods
insl
movsl
aam
sbb
inc
test
pop
mov
sti
imul
inc
in
mov
ljmp
cltd
mov
in
cli
xor
pop
out
outsl
sub
add
fistpll
mov
xor
and
push
xlat
mov
and
and
mov
pop
dec
fldt
in
jno
adc
mov
rcr
push
bound
dec
aaa
push
cld
aas
sbb
dec
xchg
xchg
movsb
and
push
push
popf
xorb
movsl
insb
test
mov
and
push
lea
divps
push
dec
pop
adc
insl
icebp
push
repz
sahf
inc
or
enter
push
cwtl
cmc
lods
ror
fisubs
and
add
cltd
popa
sbb
insl
loop
dec
out
sahf
mov
insl
or
mov
aas
sub
pop
xor
ss
aam
mov
shll
scas
call
adc
and
mov
sbb
dec
mov
fimuls
subb
repnz
fadds
mov
add
in
mov
xchg
jo
iret
popf
out
jg
stos
fucomi
xchg
push
pop
test
sbb
outsb
mov
push
data16
xlat
adc
and
enter
lods
push
cwtl
xchg
test
mov
stos
ljmp
dec
or
push
out
cmp
inc
adc
dec
fdivl
les
into
sub
sbb
mov
das
mov
xchg
insb
inc
add
into
in
cmp
sbb
push
inc
push
pop
hlt
rclb
xchg
clc
jbe
fistpl
shrb
xchg
push
mov
mov
jge
rdmsr
ficoml
out
aas
mov
push
xchg
inc
sahf
jb
dec
dec
xchg
mov
push
sahf
aam
loop
cwtl
rolb
into
jns
pop
xor
test
adc
neg
cmp
lds
mov
test
mov
aam
jno
sub
das
dec
repnz
mov
xor
push
pop
pop
test
jb
insl
std
sbb
push
push
inc
or
or
repnz
popf
inc
popf
xor
int3
stos
inc
sbb
jnp,pt
mov
pop
enter
cltd
aad
int3
repnz
daa
std
push
mov
aad
clc
inc
cli
fs
or
stos
xchg
mov
push
out
sar
faddl
jae
inc
hlt
cmp
jns
adc
dec
pop
mov
andb
jecxz
in
lods
negl
jl
xchg
sbb
subw
mov
repz
sbb
pop
gs
lcall
inc
xchg
daa
push
jmp
or
inc
jb
imul
mov
adc
inc
sub
sub
negl
adc
jle
repnz
es
enter
cmp
sbb
cmp
divb
outsb
je
popa
out
inc
popf
popw
cmp
mov
mov
mov
cmp
xor
mov
js
rcll
mov
xor
outsb
xchg
jns
push
mov
mov
mov
lea
jp
mov
cmp
cmp
fstl
adc
mov
outsb
jno
sub
data16
lds
add
shll
dec
jg
mov
fscale
and
mov
jns
xor
fidivl
daa
andb
hlt
mov
jmp
sbb
sarl
dec
jbe
stc
jecxz
daa
sub
mov
in
movl
arpl
push
jns
push
mov
aaa
sbb
std
jmp
int
mov
lods
cvtdq2ps
push
or
popf
stos
or
jg
add
and
xchg
push
adc
push
and
negb
dec
movsl
loope
mov
add
fmuls
in
sbb
ja
movsb
int
repz
cwtl
mov
mov
mov
xor
cltd
testl
jg
ret
ret
xchg
jge
lret
das
mov
mov
test
loope
push
cmp
xlat
test
bound
mov
cmpsb
fildl
adc
into
int
xchg
lods
add
fldenv
and
mov
or
jge
lods
xor
add
orl
adc
add
roll
push
inc
mov
sbb
xchg
push
incl
push
mov
jo
pop
sub
dec
cld
sbbl
mov
icebp
daa
mov
push
out
jge
jecxz
adc
mov
jmp
pop
lahf
push
or
insb
movsb
sbb
cmp
mov
movsl
lods
dec
lret
iret
ficompl
mov
and
xor
enter
push
negb
cmp
sbb
es
fcomps
enter
inc
pop
jmp
mov
mov
adc
adc
adc
loope
out
insl
xchg
mov
stos
cmp
mov
xor
mov
jle
jp
pop
push
jno
jno
je
jne
lret
cmpl
adc
mov
lea
ja
xor
or
pop
sub
mov
hlt
mov
shlb
adc
lret
int
mov
ds
ja
mov
pop
xor
mulb
loope
xchg
fistl
flds
rcll
test
jle
xchg
xchg
stc
daa
fcom
int3
pop
and
mov
fmul
aam
inc
leave
xchg
ljmp
insl
lods
jb
fs
mov
testb
std
mov
inc
sbb
xchg
sub
mov
mov
xor
fwait
out
mov
int
add
mov
mov
out
xlat
ret
loopne
pop
xchg
mov
daa
mov
dec
inc
inc
cmpsl
jp
mov
in
or
jns
std
xchg
adc
push
or
cwtl
push
and
or
test
das
loope
mov
xor
or
mov
jnp
addl
inc
sarl
xchg
sub
das
or
jmp
cmp
lcall
mov
cmc
lret
fs
fsubr
xchg
and
je
test
push
pop
pop
add
lcall
dec
popf
outsb
mov
sbb
outsb
es
jbe
orl
cmpsb
orl
mov
pop
jno
dec
lret
xor
pop
push
or
pop
movsl
cmp
shrl
inc
out
stc
push
out
sar
dec
pop
pop
sub
mov
sbb
cltd
and
sub
or
test
test
push
push
fldenv
or
loop
dec
dec
pop
sbb
xchg
xor
add
sbb
mov
lret
add
fcomp
jno
scas
mov
xchg
sub
cmp
jg
dec
in
add
arpl
outsb
inc
mov
add
mov
mov
ljmp
fwait
xchg
xchg
dec
cmp
int3
cmpsl
pop
enter
ret
mov
rcll
push
cli
add
adc
mov
push
aas
push
xchg
xchg
sbb
jae
insb
into
xor
or
mull
stos
inc
call
fldcw
inc
daa
add
lods
callw
addr16
push
cmp
mov
shlb
daa
lcall
and
cmp
mov
jbe
mov
mov
or
cmpsb
cmp
or
js
cmc
mov
test
add
inc
lahf
ffreep
loop
fldl2t
sub
jg
sbb
in
mov
outsl
test
jb
and
add
pop
sbb
push
movsb
shr
imul
push
and
sub
push
bound
mov
dec
dec
add
lea
mov
push
js
jle
pop
lea
push
call
adc
comiss
xchg
mov
or
imul
push
roll
xor
fdivrp
cmc
rcll
inc
pop
lock
jmp
pop
fld
fwait
xor
loope
or
repz
ret
xor
add
dec
scas
pop
daa
push
sbb
and
mov
sbb
mov
xor
dec
insb
jbe
out
mov
or
or
mov
jb
std
push
push
pop
push
scas
pushw
daa
pushf
arpl
scas
fnsave
push
cs
and
and
test
xor
in
aas
ljmp
push
sbb
inc
test
sti
xchg
or
das
sti
addr16
ja
sbb
jp
and
int3
pop
sub
sti
pop
mov
adc
mov
stos
push
pop
js
enter
mov
add
sar
pop
shll
andl
pop
jmp
sahf
scas
push
mov
pop
mov
popf
push
add
adc
scas
sub
jae
clc
fstpl
add
insl
mov
add
xchg
inc
mov
inc
in
cmpsb
add
xchg
xchg
dec
dec
mov
ret
test
sbb
in
pop
ss
dec
rclb
pusha
lea
push
cmp
out
daa
das
pop
cmp
jnp
les
mov
mov
popa
push
pop
fxam
inc
scas
test
jbe
or
bnd
std
mov
out
add
icebp
cmp
movsb
jmp
aaa
cs
filds
sbb
push
or
std
int
mov
jmp
adc
add
add
sbb
pushl
lcall
mov
add
daa
cld
lods
jb
dec
pusha
or
nopl
mov
mov
mov
scas
jmp
push
sbb
shrl
inc
or
in
vmovupd
xor
stc
dec
int
cwtl
cmpsb
shlb
test
into
lock
movsb
fidivrs
pop
and
xor
sti
subb
cmp
xor
xlat
out
test
ss
adc
rolb
mov
shl
xor
and
test
push
jle
cld
sbb
popf
push
lods
xchg
pushf
mov
sbb
leave
add
mov
push
lods
inc
fbld
es
lds
xchg
stos
in
jmp
negb
nop
push
insl
imul
popa
sbb
roll
or
or
dec
adc
push
push
or
rcrl
shr
jae
pop
popa
arpl
iret
in
cmp
clc
pop
div
inc
push
out
push
push
ljmp
movsl
jae
lods
test
or
rcrb
add
gs
dec
dec
repz
decb
daa
and
push
iret
negl
xchg
dec
cld
clc
mov
xorl
push
pop
jne
jl
js
sbb
pop
pop
pop
push
sub
divl
adc
outsl
fstpt
insb
lret
sbb
adc
int
lcall
movsb
mov
inc
push
pop
push
add
fildll
fsubp
daa
ss
ljmp
scas
fwait
jl
fistl
cld
cltd
xchg
int3
popa
jae
and
test
into
insl
adc
xor
test
loop
popf
imull
xchg
mov
mov
push
pop
jns
jb
mov
push
xor
leave
cmp
mov
fdiv
lret
hlt
cmp
data16
in
sub
sbb
dec
fldenv
call
push
adc
and
hlt
insl
pop
push
data16
add
jb
sub
inc
pop
rolb
sub
inc
das
inc
jno
cwtl
shll
lds
jmp
mov
jo
jl
xchg
xor
mov
rol
fstpt
into
push
cmpb
cmp
aad
push
in
mov
rorl
pop
mov
add
gs
and
hlt
movsl
jbe
nop
jae
add
xchg
jo
int
fiadds
and
lcall
mov
jae
adc
or
scas
pushw
lds
dec
outsl
add
xchg
les
es
enter
ds
fstl
mov
cs
push
sbb
inc
and
mov
xchg
fstl
xorl
fwait
dec
push
clc
push
lcall
jo
or
gs
dec
jle
cli
sub
sahf
push
flds
dec
popa
cmp
mov
mov
or
sub
mov
inc
call
pop
js
outsl
push
mov
dec
stos
sub
cmc
sub
push
push
xor
mov
sub
push
sbb
mov
pop
xchg
mov
mov
scas
call
dec
sub
jo
adc
out
push
int
mov
sbbb
xlat
mov
dec
pusha
push
into
sbb
out
imul
mov
cmp
aam
out
cmpsb
or
xchg
mov
mov
sbb
mov
je
mov
cmp
mov
lods
add
xchg
test
mov
cld
in
push
scas
scas
ret
cmp
fmuls
imul
shr
adc
mov
dec
je
mov
ja
test
sbb
xchg
into
test
pop
std
cmp
lods
lods
xchg
shll
xor
sahf
add
les
push
xor
shll
fcmove
hlt
pop
and
sti
pushf
insl
pop
hlt
sbb
dec
mov
xor
cmp
add
lret
insl
cmp
icebp
lods
xchg
push
jb
push
mov
repnz
bound
xor
mov
lock
sub
inc
sub
lcall
js
xchg
pop
orb
sub
pushf
jmp
xchg
addl
stc
lret
out
lods
mov
scas
leave
cmpsb
mov
test
pusha
mov
rcl
out
and
xor
and
dec
mov
push
push
stos
xor
out
jl
sub
mov
mov
jne
test
gs
out
mov
mov
mov
ret
flds
inc
fwait
call
nop
sub
fstl
cmc
insb
push
fldl
aad
sbb
jg
loopne
dec
data16
cs
jl
shll
dec
and
push
sub
cmp
sbb
subb
or
adc
adc
fsubr
enter
rol
mov
repnz
add
sbb
int
fiaddl
pop
sub
mov
xchg
xchg
push
into
dec
adc
outsb
jns
sub
out
mov
mov
inc
sti
pop
add
sti
push
sahf
adc
repnz
imul
aam
mov
stos
sbb
rclb
gs
iret
stc
and
arpl
bswap
mov
xchg
pop
push
xor
xor
shrb
mov
xchg
movsl
stos
fisttps
add
add
cmpsl
adc
mov
xchg
cmc
test
and
cmpsb
test
mov
testl
popf
mov
addl
jl
dec
outsb
mov
bound
push
pop
pop
jo
sbb
push
pusha
mov
lret
sub
sbb
js
lock
jge
push
call
or
addr16
fiaddl
fdivp
mov
xor
shlb
subl
ss
test
mov
xor
jg
int3
dec
and
imul
cmpsl
mov
popa
jecxz
fimull
aas
dec
sti
outsb
mov
pop
fldenv
enter
dec
or
push
jp
fisttps
pusha
cmp
adcl
or
imull
or
sbb
xor
jl
xor
mov
mov
test
mov
in
pop
add
or
das
test
fistpll
sahf
mov
inc
dec
insb
ss
mov
jecxz
loopne
mov
jae
subl
push
loop
inc
test
fstpl
insl
xor
or
outsl
xchg
rorl
and
sub
inc
out
jle
cmp
sub
jl
mov
popf
xor
and
stos
mov
pop
xchg
mov
xchg
scas
test
jp
mov
test
in
inc
leave
jge
popf
scas
pop
and
dec
cli
jns
cltd
test
out
lret
popa
xor
xor
pop
dec
mov
ret
es
decb
pop
dec
mov
addr16
jbe
mov
xor
rorl
inc
idivl
bound
icebp
mov
jae
xchg
mov
orl
int3
add
das
pop
pop
and
stc
dec
divl
cmp
xchg
and
std
adc
push
mov
imull
aas
cmpsl
jge
xchg
xchg
push
push
aam
mov
rep
push
jmp
inc
fistpl
cwtl
sub
stc
mov
mov
pop
clc
xchg
cli
and
xchg
shlb
mov
jae
arpl
jbe
jns
inc
xlat
fcmove
dec
pushf
xchg
or
cmpsl
popa
shll
sti
aam
pmulhuw
mov
pusha
push
pop
add
mov
cmp
popa
pop
dec
je
mov
ljmp
add
xor
fwait
jge
lds
dec
ss
fsubrs
jmp
or
lahf
inc
add
adc
sti
ss
bound
mov
stos
je
jl
mov
pop
pop
or
movsl
ds
mov
in
or
fstps
inc
lahf
or
add
enter
cld
adc
pop
or
dec
cmpl
push
push
rorl
mov
mov
sub
rcr
push
leave
roll
mov
sti
pop
loope
aad
mov
dec
xchg
and
jecxz
cmp
inc
xor
xor
pop
jb
sub
adc
jb
mov
adc
ret
insl
repnz
int3
push
xor
jae
mov
pop
sub
or
stc
push
xor
fbstp
clc
cmp
xchg
fsubrp
and
xchg
xlat
aam
xor
cli
shrb
adcl
aaa
or
add
andl
test
jecxz
cwtl
cwtl
mov
in
bound
push
clc
gs
data16
jecxz
test
es
push
test
fs
cmp
es
inc
adc
mov
scas
push
pop
add
andl
lcall
nop
or
enter
mov
arpl
leave
lcall
pop
lret
lock
in
mov
sar
inc
insb
mov
mov
imul
jno
mov
inc
popf
push
test
mov
xchg
pop
shrl
jp
lods
jne
push
call
insb
stc
or
push
aad
fwait
xor
sbb
loope
cwtl
incb
iret
in
movsb
mov
push
xchg
and
lret
lods
jbe
fsubr
mov
sub
iret
inc
pop
dec
pop
sub
push
nop
insb
jmp
clc
dec
mov
adc
pusha
imul
loopne
push
adc
mov
push
lds
add
mov
cmp
inc
add
mov
pop
ficompl
mov
insl
mov
out
lds
push
lds
fadds
lret
out
xor
test
scas
mov
mov
insl
xchg
cmc
ja
aad
mov
pop
ficompl
jbe
mov
pop
js
xor
cli
or
sub
push
shl
push
add
xchg
sub
push
daa
ja
push
lret
xor
das
sbb
mov
scas
lods
xchg
in
ficoml
rcl
orb
jle
pop
shlb
cmpsl
inc
dec
and
mov
xor
outsl
xor
js
mov
mov
popa
inc
xchg
cmp
je
mov
subl
add
xor
fwait
or
dec
mov
bound
icebp
outsl
iret
jb
ret
out
sbb
cmp
mov
push
dec
dec
ljmp
inc
mov
or
rclb
stc
inc
cs
inc
mov
fcoms
xchg
add
fsub
mov
inc
sbb
xchg
cmp
push
push
out
rcrb
mov
movsl
daa
fnsave
ret
sbb
rcrb
insb
in
stc
sub
hlt
icebp
loope
mov
jne
mov
scas
test
lock
mov
sub
pop
dec
inc
aam
iret
sbb
int
popf
and
imul
leave
mov
pop
sbb
xchg
out
mov
mov
xor
icebp
int3
dec
xchg
push
inc
faddl
sti
test
ret
or
cmp
jle
jecxz
jo
addl
jl
xchg
orb
inc
jl
mov
sarb
mov
push
jae
push
mov
jns
fs
push
cltd
iret
xor
adc
xchg
jmp
int3
dec
dec
xorl
outsb
mov
out
les
xor
mov
xchg
push
movsb
jl
sarl
cmpsb
pushf
adc
jno
dec
popa
icebp
sbb
mov
adc
dec
jo
jecxz
sarl
pop
or
cmp
dec
mov
inc
mov
add
repz
sub
les
xchg
add
rclb
and
aad
and
inc
int
dec
sti
xchg
sbb
shrl
fldenv
inc
sbb
aaa
jae
icebp
xor
fdivrl
mov
bound
and
or
inc
and
icebp
cmp
outsl
shll
insl
push
pop
jle
jne
pop
pop
mov
adc
push
mov
call
lock
in
sbb
andb
gs
mov
sbb
mov
pop
dec
cmp
shrb
xchg
cli
mov
cmpsl
in
adc
sub
push
outsb
repz
jns
jge
dec
dec
jae
push
xchg
pop
jae
xchg
iret
inc
cli
fcoml
insb
and
jle
dec
dec
mov
xor
mov
xchg
in
dec
mov
xor
mov
adc
mov
int3
xchg
cmp
les
das
mov
mov
cs
mov
les
pushf
mov
cmp
test
arpl
cmp
and
shlb
test
arpl
lret
lea
lds
jp
int
jp,pn
stc
push
mov
or
mov
adcl
fcomp
pop
xlat
inc
mov
mov
repnz
loope
xchg
push
ds
add
adc
adc
lock
xor
pop
jmp
cmp
dec
jns
rolb
in
jmp
mov
ss
jbe
mov
pop
mov
cmp
stc
push
adc
sub
push
jle
sarl
pop
cld
test
pop
mov
mov
add
adc
mov
sbb
cmp
in
cwtl
int3
jecxz
xchg
push
xor
sub
or
mov
add
cmp
rolb
ret
mov
lret
jnp
pop
std
xchg
mov
pop
sbb
pop
in
out
dec
xor
or
shll
sbb
daa
xor
sbbb
loope
negl
loope
das
adc
in
testl
les
sub
int3
jecxz
mov
xchg
stos
sahf
inc
xor
cld
leave
cmp
jne
movsb
imul
aad
test
jge
stc
mov
aam
std
int
mov
outsl
into
push
insl
inc
xor
fildll
mov
data16
adcl
push
andb
cmp
in
adc
into
fcmove
scas
and
sub
stos
add
test
xchg
dec
mov
mov
pop
daa
rcrl
mov
and
inc
and
mov
sbb
push
adc
imul
lods
loope
movb
jle
mov
adc
ret
cli
or
sub
dec
cmc
popf
loopne
mov
and
insl
push
and
xchg
ja
pop
jle
mov
lods
mov
int
movsl
adcl
and
jg
mov
adc
cmp
xchg
or
out
dec
jp
sbb
mov
cld
jle
sub
adc
pop
xchg
xchg
jl
pop
mov
push
push
shrb
rcrl
sub
lahf
shl
xchg
aas
in
xchg
mov
loop
push
cli
push
add
cmpsl
rorb
or
xchg
cltd
leave
hlt
clc
push
scas
lahf
dec
test
in
push
sahf
pop
mov
dec
mov
adc
dec
test
lahf
mov
cmp
ret
mov
lods
sub
mov
subl
xor
dec
orl
xchg
movsl
xchg
xor
xor
in
insl
outsb
cmp
stos
jns
je
add
pop
or
out
es
mov
cmp
incb
das
xchg
pop
stos
and
add
hlt
rolb
or
mov
pop
mov
rcrl
or
in
ja
movsl
and
add
or
mov
test
frstor
push
xlat
enter
or
bound
andb
stc
jae
paddb
mov
ds
cltd
dec
in
mov
andb
lret
cmpsb
push
cmp
xchg
iret
xchg
insl
mov
aas
jg
and
mov
cltd
add
ds
lods
call
jle
add
fnsave
mov
mov
loope
cmp
arpl
mov
jmp
repz
adc
aaa
leave
fsubs
ss
fwait
bound
enter
mov
pop
fldt
ret
imull
rcr
or
imul
lods
mov
out
or
ret
aam
sbb
sbb
rclb
and
repz
inc
mov
loopne
xchg
fistl
add
lret
mov
aam
es
icebp
push
pop
mov
repz
dec
call
pop
and
cwtl
cmp
lea
mov
adc
cmc
pop
loope
dec
mov
sbb
imul
es
test
sarb
ficompl
cwtl
mov
int
das
xor
das
stc
inc
mov
adc
std
mov
mov
call
stos
jmp
pop
or
xchg
stos
mov
addr16
xorb
push
std
cmp
mov
insb
xchg
mov
fistpll
nop
jle
js
lret
add
inc
mov
iret
or
pop
in
in
inc
jae
inc
cli
lods
xchg
rclb
loop
jnp
clc
rol
inc
push
out
pop
push
adc
andb
int
in
push
dec
popa
ret
repnz
cs
xchg
cmpsb
out
lcall
jb
fs
cltd
or
mov
insb
std
fwait
mov
ds
mov
push
into
es
mov
popa
sbb
je
hlt
gs
call
imul
fwait
or
mov
stc
test
cmp
out
fnsave
fadds
lret
pushl
mov
adc
ror
sahf
mov
mov
je
xchg
jg
mov
mov
dec
lods
imul
push
fiaddl
lods
xor
clc
gs
gs
shlb
sti
subl
loop
mov
mov
xchg
sbb
mov
lods
sbb
or
iret
xlat
pusha
in
sbb
das
dec
push
les
or
arpl
mov
mov
jns
sub
andl
rclb
lcall
push
pop
jg
mov
dec
test
popa
xor
add
xchg
mov
inc
push
outsl
dec
push
popf
lock
jo
push
mov
cmp
fst
mov
cmpsl
sub
div
ljmp
cltd
pop
dec
mov
add
inc
fistps
outsl
mov
les
mov
ljmp
xchg
jg
sbb
cwtl
std
jo
push
pop
jo
repnz
aam
movsl
shl
fwait
mov
imul
loope
or
xchg
xor
stos
push
add
mov
sahf
sti
dec
dec
stos
xor
movsb
repz
adc
xchg
fst
insl
push
xor
xchg
gs
push
int3
xor
imul
lcall
push
aaa
jo
pop
mov
xor
dec
repnz
dec
dec
push
push
push
mov
std
bound
out
cmpsb
loop
je
inc
mov
scas
jo
push
insl
scas
aas
cmc
popa
test
inc
xor
jns
jo
xlat
movsb
dec
pop
mov
inc
fstpt
xchg
push
arpl
mov
add
inc
insl
rclb
ljmp
cli
sbb
sub
mov
and
cmp
lcall
or
gs
jmp
jl
insb
dec
sbb
adc
rorl
sub
stos
roll
pop
outsb
std
gs
sbb
add
xor
or
cmp
add
xor
sbb
cmp
lcall
pop
pop
cmp
fs
lcall
cwtl
jmp
xor
sbb
lods
jle
mov
iret
xchg
in
xchg
popf
push
mov
jo
movsb
xor
or
sub
or
sbb
fcomps
dec
pop
sub
leave
pop
mov
push
push
cltd
stc
mov
enter
mov
mov
or
sti
shl
mov
outsb
dec
mov
sahf
leave
repnz
mov
push
mov
data16
mov
pop
clc
stos
and
cltd
fwait
pop
je
ja
fcomp
shlb
int3
push
repz
lret
inc
in
test
mov
xorl
into
push
adc
jne
movsb
call
pop
fnstenv
aam
inc
fmuls
inc
imul
pop
lea
stc
xlat
sub
or
call
sub
mov
push
inc
sbb
repnz
sbb
sub
inc
pop
js
cwtl
test
outsb
lods
popf
mov
imul
push
jno
add
call
fsubs
jne
shl
cmp
fstl
sti
mov
sbb
inc
outsl
xor
in
inc
or
add
cs
or
mov
popf
pop
sbb
loop
xchg
les
lods
jg
jmp
mov
inc
jecxz
adc
fisubrl
movl
mov
mov
movsl
add
xchg
lods
lods
inc
mov
mov
push
ds
js
int3
sub
pop
movsl
xor
lods
sub
inc
stc
xchg
fcmovnu
rcl
les
cs
mov
shll
mov
cmpsl
pushf
clc
fsts
ja
mov
add
jecxz
das
fisttpl
adc
call
mov
insb
jmp
push
cmp
sarl
loop
repnz
loop
imul
cld
les
cmp
pushf
loopne
push
push
dec
jb
jp
pop
cmp
add
fldcw
jb
lods
xchg
and
or
inc
pop
std
mov
int
dec
in
dec
xorl
pop
leave
lret
dec
movl
imul
and
aam
and
adc
mov
jg
cmp
inc
push
add
pop
dec
cmp
notl
je
push
lahf
and
cli
popl
jecxz
xchg
mov
dec
adc
and
dec
push
pop
scas
dec
test
dec
or
imulb
iret
push
xchg
int
push
ja
push
cli
or
jl
push
xchg
sub
es
dec
push
int
dec
popa
xor
push
lds
movsb
rorb
shlb
movsl
pop
xchg
cmc
or
cli
pop
out
repz
inc
and
or
std
xor
adc
push
and
fldenv
jge
scas
jno
lods
xchg
cli
movsb
in
repnz
es
and
rcll
xchg
bound
daa
gs
ret
rorb
push
and
dec
mov
jg
jae
loopne
movsl
aaa
test
addr16
push
out
and
mov
dec
mov
cmp
lods
sub
xchg
imul
fstl
scas
adc
out
push
lret
loopne
sub
mov
lds
cltd
mov
mov
hlt
sbb
fwait
add
pop
insl
pop
pop
mov
das
popf
ret
sbb
jmp
or
popa
nop
dec
fcmovbe
in
daa
xor
aaa
cmp
lahf
data16
mov
ja
mov
add
or
add
ret
cmp
iret
fldt
lods
push
xor
push
mov
push
nop
pop
ss
mov
scas
dec
xor
dec
xchg
add
xor
jle
movsb
inc
aam
in
lods
xor
arpl
adc
cmpsl
cs
pop
xor
adc
pop
cs
not
dec
add
fistps
xchg
push
inc
mov
test
pop
mov
shrb
outsb
shrl
popf
call
mov
xor
jne
xchg
jne
outsb
dec
cld
mov
jne
scas
push
and
sbb
inc
addr16
movsl
dec
inc
xor
xor
jle
mov
ret
jnp
xchg
mov
shrb
std
xlat
call
xor
cmp
fs
mov
inc
test
test
cmp
jo
icebp
sub
movsb
mov
xor
sbb
mov
pushf
mov
stos
mov
xchg
leave
insb
cmp
jb
cmp
sub
pusha
popf
pusha
popf
inc
sub
in
dec
int3
dec
dec
xlat
shrl
mov
cltd
inc
xchg
ss
ficoml
popf
sbb
sbb
ffreep
inc
lcall
les
push
lods
imul
xchg
scas
movsl
dec
sbb
call
jb
and
adc
lods
fdivs
xchg
dec
test
hlt
sbb
fildll
shlb
stos
dec
repz
xlat
fs
ljmp
fwait
cmpsl
ja
outsb
lds
pop
mov
jo
inc
popl
jne
in
les
mov
push
inc
xor
pop
pop
push
je
fimull
push
repz
sbb
push
test
sub
mov
or
cmpsb
jmp
or
xchg
mov
sub
add
scas
mov
push
dec
xor
aas
jnp
xor
xchg
xchg
pushf
xor
outsb
add
iret
dec
jne
sti
jbe
mulb
insl
das
je
imul
sub
dec
xchg
gs
test
xchg
adc
pop
ljmp
enter
insl
fstps
mov
loop
pop
or
mov
dec
jle
mov
enter
lds
scas
and
push
adc
call
push
or
inc
iret
fs
or
pop
out
push
test
smsw
es
adc
insl
mull
out
in
rcl
add
inc
jne
in
xchg
lahf
lods
mov
int3
das
mov
cmc
scas
dec
out
mov
cltd
xor
fldt
hlt
mov
insb
jge
xor
cmp
sbb
cmp
and
lahf
imul
mov
mov
dec
adc
test
sub
enter
test
adc
add
sub
inc
imul
push
shll
loope
aad
jge
sub
ret
xor
jb
loope
or
sahf
jns
sbb
insb
mov
cs
push
push
xor
dec
xchg
and
mov
or
imul
add
mov
pmaxsw
mov
repz
add
mov
int
mov
mov
data16
stc
xor
and
sub
lds
andl
loope
pop
add
xor
scas
sbb
fcoms
or
push
std
loope
mov
fs
dec
xor
cmp
dec
pop
cmp
dec
nop
pusha
dec
adc
faddp
jecxz
int
xor
enter
clc
dec
add
sbb
pop
test
test
out
push
jnp
sub
sub
inc
dec
xchg
popa
jnp
inc
cmp
imul
sbb
or
mov
pop
mov
and
cli
jo
pop
subl
les
roll
cmp
icebp
ss
movsb
pop
dec
xor
js
in
pop
ds
aad
stos
mov
jmp
and
arpl
neg
loopne
cmp
mov
das
add
sub
inc
lock
aam
mov
ljmp
pop
cmp
xchg
sti
js
imul
subl
push
jns
add
popa
mov
jg
outsl
mov
repnz
mov
in
repz
mov
dec
and
fld
sub
fcompl
loop
mov
in
arpl
test
lahf
sub
dec
aam
dec
dec
push
popa
pop
int3
hlt
push
stc
sbb
cli
sub
xchg
out
lcall
jo
ds
jp
sarb
cli
clc
out
out
push
xor
popa
call
cmpsb
pop
fadd
imul
dec
mov
cmp
test
xchg
clc
mov
stos
pop
xchg
or
adc
lret
popa
mov
inc
adc
dec
jg
push
cld
jo
mov
dec
jnp
mov
jge
pop
xor
bound
sbb
call
jno
fists
test
mov
test
lds
inc
or
in
or
cmp
sbb
jge
movsb
or
xor
sahf
adc
iret
rolb
inc
pop
mov
arpl
inc
pop
cmpl
aaa
out
dec
nop
cwtl
cmp
push
clc
inc
ret
in
add
addr16
ds
fmuls
orl
pop
xchg
ds
sub
dec
xor
cltd
imul
cmp
sti
xchg
jo
cmp
pusha
pushf
xlat
jns
push
jg
call
popf
fdivr
cli
xchg
adc
nop
and
dec
enter
sbb
into
repnz
into
mov
cmp
jg
leave
stos
repnz
adc
sub
aam
dec
frstor
jecxz
jno
mov
inc
sahf
addr16
ret
imul
repz
in
fs
cmp
ret
js
hlt
xchg
and
inc
in
jo
cmpb
xor
add
pusha
mov
xor
dec
pop
lcall
xor
cltd
scas
addr16
decb
ja
cmp
mov
iret
popa
xchg
adc
push
sub
push
ljmp
xchg
xor
aam
cmp
insl
cli
cs
clc
lods
pop
enter
je
ret
sbb
sbb
rclb
xor
lcall
pusha
cmp
pop
mov
fmull
xchg
xchg
jge
div
out
jbe
push
push
movsb
subl
hlt
adc
in
mov
fisubs
fwait
ret
sahf
push
out
jg
dec
push
mov
xchg
jb
push
movb
scas
lds
std
bound
jmp
xchg
clc
rcr
push
or
cmp
cs
and
dec
sysexit
add
pop
inc
or
ficoml
or
cmp
pmaxub
out
outsl
pop
pop
leave
cmp
and
lret
in
sbb
add
aas
mov
dec
dec
js
dec
imul
cmp
out
push
push
add
pop
stc
mov
aad
push
mov
xchg
mov
test
sub
imul
push
data16
push
push
je
or
and
lds
push
xlat
xchg
sub
jae
arpl
cmp
push
in
ss
rcrb
pop
data16
xchg
pop
or
pop
adc
xchg
push
sub
lret
clc
cmp
and
outsl
icebp
add
sub
ds
inc
mov
stos
out
and
cld
in
sub
dec
inc
fstl
test
les
loopne
shll
jne
scas
cs
xor
addr16
xor
aas
ficoms
mov
xlat
push
xor
jno
loopne
dec
mulb
stc
dec
shll
enter
je
shlb
icebp
add
imul
test
test
in
lcall
popf
inc
lock
push
pop
pop
aam
pop
orl
iret
mov
cmp
jp
mov
push
imul
pop
cwtl
jo
mov
stos
jmp
fsubrs
rcrl
sbb
cwtl
dec
mov
pop
ljmp
fwait
or
or
shll
xchg
mov
scas
adc
imul
and
ret
daa
mov
cld
mov
lret
xor
xchg
or
cmpsb
xor
data16
mov
mov
xchg
adcb
dec
fidivl
gs
cld
call
jg
xchg
pop
mov
jnp
adc
inc
and
mov
aam
lods
cmp
xor
lds
push
fcoms
cltd
pop
mov
mov
inc
movsl
lea
cld
outsb
jmp
hlt
test
nop
push
push
leave
sti
push
subb
lods
flds
push
movsb
mov
jp
xchg
adc
inc
popf
fs
aam
and
sub
aas
mov
addr16
add
outsb
adc
das
xchg
test
push
xchg
aad
test
pop
orb
add
add
rcrb
daa
xlat
xchg
mov
mov
dec
jmp
inc
jb
xor
es
in
push
imul
xlat
jmp
rorl
sub
popa
int
push
pushf
neg
pop
push
mov
jo
push
jp
push
enter
rcl
adc
sub
call
xchg
pop
in
adc
push
adc
adc
sub
cmp
cmp
dec
jae
or
fisubrs
leave
mov
dec
mov
lahf
fcmovb
pop
inc
mov
test
sbb
jecxz
push
cmp
inc
cmc
stc
pop
cmp
idivl
pop
in
pop
clc
dec
inc
sub
jecxz
cs
sub
clc
lds
or
les
pushf
rcll
mov
cltd
cmp
pusha
or
mov
movsb
fisttpll
and
jb
dec
out
cli
and
stc
in
lret
xchg
push
mov
adc
mov
push
jmp
das
sbb
sbb
mov
ja
int
inc
inc
and
data16
imul
dec
push
or
cmpb
jne
out
inc
rorb
and
je
shlb
adc
inc
jge
and
inc
or
bound
jne
xchg
sub
pop
push
popa
ljmp
fdivs
mov
jno
cwtl
incb
clc
push
mov
mov
test
mov
inc
in
shlb
xchg
push
lea
jne
xchg
iret
add
xor
mov
fnstcw
stc
mov
scas
or
dec
inc
mov
imul
shlb
mov
lea
xor
negb
pushf
mov
mov
xchg
add
lock
or
sbb
jb
push
fwait
js
dec
xor
xchg
inc
ret
pop
and
push
cmc
sarl
and
adc
dec
sahf
push
sub
or
push
jbe
xchg
adc
add
dec
fidivrs
push
dec
pop
imul
ret
movsl
mov
cwtl
in
mov
jge
inc
mov
pop
push
lret
xchg
bound
dec
mov
jno
ror
mov
scas
jns
sti
mov
fcompl
sbb
pop
test
jns
out
cmp
insl
sbb
pop
or
clc
popf
test
outsb
aam
jge
loope
cmp
fsubl
out
stos
dec
outsl
cmp
in
mov
aam
pushf
inc
sub
sub
out
mov
xlat
xchg
mov
sbb
xor
sahf
lods
pop
pop
or
popa
sub
call
outsb
test
xor
xor
repnz
test
movl
das
movsl
sub
sbb
adc
or
and
jae
sbb
add
adc
iret
pop
nop
mov
xor
lock
jb
stos
cltd
loope
ret
or
lea
xor
cmpsb
mov
add
push
fsin
repnz
add
into
xor
gs
sub
inc
sbb
enter
jnp
xor
popf
mov
inc
shrl
nop
repnz
cmp
leave
bound
pavgw
andb
ljmp
push
adcb
jne
outsl
ljmp
dec
movsl
mov
das
add
xor
sub
xchg
stos
cmp
lock
mov
nop
sub
xchg
rorl
jbe
test
outsl
fidivs
fsubrl
jns
into
sbb
movsb
jmp
pop
popa
jmp
adc
loopne
mov
test
insb
add
mov
test
jae
cmc
lret
mov
cltd
push
dec
pop
mov
mov
f2xm1
inc
jno
pushf
mov
in
jmp
xorl
jns
push
xbegin
popa
testl
in
or
mov
fcompl
clc
pop
test
out
mov
lea
leave
outsl
rcrb
pop
pop
dec
outsb
xor
das
xchg
pop
negl
aas
pop
mov
xor
add
out
pop
cmp
xchg
int
fildl
push
push
dec
sbb
dec
scas
arpl
int
test
jne
sub
sarb
push
daa
jge
mov
sbb
arpl
add
push
pop
frstor
xchg
cmp
cmpsl
ds
xor
out
add
idivl
sub
aad
rclb
stos
or
decb
ljmp
sahf
cmp
lods
ss
inc
sub
mulb
mov
dec
dec
adc
jl
dec
imul
sbb
ret
mov
in
mov
cltd
sbb
jb
push
aam
popa
fstps
xchg
add
adc
mov
imul
push
fdivs
sbb
data16
push
xor
push
jo
mov
sbb
and
repnz
inc
sbb
xchg
sahf
push
mov
test
ja
pop
add
in
push
and
pop
push
lock
inc
sahf
movsb
add
xchg
cltd
ret
int
push
sub
sub
add
stos
cmc
jo
mov
hlt
jmp
jl
xchg
addr16
std
mov
xchg
add
icebp
ja
fcoml
scas
adc
sti
mov
mov
sbb
lcall
add
sbb
daa
pop
mov
or
adc
mov
in
lret
loope
fdiv
jmp
xchg
add
repnz
push
xchg
jo
mov
aad
daa
dec
ret
stc
sbb
push
enter
shr
in
mov
push
cmpsl
inc
je
push
pusha
ss
xchg
xchg
jbe
push
fucomp
sbb
in
std
das
jbe
adc
mov
mov
cmp
xchg
iret
or
jno
xchg
and
mov
xchg
shrb
pop
pop
mov
mov
sbb
push
sbb
insl
in
rol
into
cwtl
add
rcrb
jecxz
mov
and
push
pop
dec
arpl
popa
push
sbb
cmp
push
adc
jnp
cltd
jo
mov
mov
das
push
pushf
sahf
incb
in
mov
sub
and
cmp
rcll
dec
clc
xchg
add
imul
dec
in
add
xchg
pop
mov
pop
std
or
lret
push
stc
lahf
lcall
xchg
push
inc
addr16
adc
cmp
add
out
sbb
rolb
test
stc
inc
or
lods
sbb
aad
fcmovnu
out
addr16
mov
pop
lock
roll
addr16
lods
xor
pop
fldl
push
ja
lock
divb
push
sti
aad
lds
dec
mov
mov
ret
enter
je
pop
aaa
sti
or
testb
pop
pop
xor
cmc
mov
cmp
pop
push
cs
adc
sti
out
mov
xchg
mov
fxch
jle
lods
sbb
stos
stos
or
pop
dec
mov
and
mov
lock
push
scas
fldt
repz
mov
loopne
scas
rcll
add
cltd
cmp
or
push
cwtl
js
mov
sahf
dec
and
jae
lret
leave
add
xor
mov
inc
dec
sbb
push
popa
jae
cmpsb
jl
out
add
popf
sbb
daa
add
negl
jbe
inc
inc
imul
es
outsl
out
mov
clc
jmp
mov
dec
cltd
jb
lods
adc
xlat
js
fimull
fdivl
jo
dec
mov
xor
mov
mov
aaa
mov
out
mov
scas
dec
dec
lcall
cmovl
cmc
orl
xchg
mov
xor
mov
adc
movsl
add
repz
xchg
add
jo
xchg
mov
and
test
pop
icebp
int
imul
mov
gs
lahf
fists
fwait
sbb
push
cmc
imul
lahf
jno
jmp
push
cltd
fsubs
xchg
loope
sarl
fwait
or
icebp
andb
xchg
movsb
and
xchg
xor
mov
jb
in
mov
mov
clc
call
adc
rorb
pop
cmpsb
cmp
sbb
push
out
sar
std
mov
mov
xor
inc
xchg
das
dec
repz
inc
or
jb
push
dec
xchg
sub
push
jae
fwait
lcall
ljmp
inc
mov
mov
insl
xor
dec
out
imul
rol
jne
loope
cmpsl
out
inc
loope
add
xor
add
scas
out
push
xor
hlt
jle
mov
insb
cmp
inc
pushf
cs
lcall
cli
adc
jp
sti
sub
mov
stos
std
xor
inc
push
push
push
push
cmp
addr16
xchg
fs
je
jl
cmpl
sbb
lea
xchg
adc
and
sahf
and
inc
sbb
fs
lahf
repz
mov
pop
dec
int3
adc
mov
jmp
aad
mov
push
or
repnz
loop
push
or
or
mov
mov
cltd
jno
prefetch
or
ja
pop
inc
jno
add
or
sub
mov
mov
add
jb
adc
push
push
fcoms
push
jp
aaa
cmp
xchg
in
add
jne
adc
or
jb
lods
shlb
nop
jecxz
pop
mov
sbb
ret
mov
lea
pop
aaa
push
test
test
push
aad
add
aam
cmp
lret
fcompl
inc
lret
mov
lret
js
xor
inc
out
pop
insl
rorb
clc
cmp
push
loopne
hlt
inc
ror
add
imul
push
cwtl
push
js
mov
xchg
dec
repz
fists
imul
in
clc
std
cmp
mov
cmp
lods
and
lods
stc
icebp
lds
mov
or
cltd
bound
fucomi
data16
jb
mov
test
lret
adc
sbb
call
aam
das
xor
mov
je
dec
iret
pop
push
jnp
lret
pop
cltd
sub
les
pushl
out
in
shrl
sahf
and
xor
lret
popw
sbbl
pop
or
jl
stos
mov
aam
ljmp
adc
outsb
ds
pushf
shlb
mov
mov
push
add
pop
fildll
incl
inc
xchg
pop
imul
decl
lret
jge
mov
rcrb
mov
std
insb
mov
lret
jno
aaa
xor
pusha
xor
lret
mov
mov
in
pop
dec
idivl
and
pop
arpl
xor
mov
adc
xchg
pop
pushf
ds
inc
cltd
or
and
dec
out
lret
push
lahf
adc
insb
das
sbb
lret
outsb
cmp
or
cmpsb
cld
es
lret
inc
jbe
dec
addl
mov
repnz
aad
xor
or
sub
add
je
mov
popa
pop
cmp
push
ljmp
mov
mov
sbb
ds
cli
pop
gs
loope
test
add
loop
cwtl
flds
jne
lods
out
mov
jmp
pop
jmp
movsb
repz
jl
push
mov
jl
xchg
movsb
in
pop
cmc
jne
arpl
cmpsb
jnp,pt
jl
mov
pop
mov
cmp
inc
iret
xor
cmovno
arpl
cwtl
jle
ficompl
repnz
dec
jecxz
mov
arpl
jg
testl
adc
mov
aaa
out
imul
addb
and
loope
push
lret
jmp
xchg
xchg
mov
jge
xchg
fnsave
jl
sub
lds
add
push
stc
negb
jmp
push
adc
pop
es
into
mov
movsl
or
add
test
loop
scas
push
xchg
jge
in
movsb
adc
decb
test
cld
les
aas
inc
adc
subb
jbe
or
sub
es
push
add
out
pushf
rcrb
aaa
mov
nop
cld
and
sbb
mov
movsb
xchg
sbb
sub
sbb
out
adc
dec
cwtl
jbe
lods
fisubs
jg
add
sbb
outsl
adc
pop
outsl
cmp
push
pop
cmp
imul
dec
lret
cmp
jbe
xchg
rcr
pop
ja
inc
es
xchg
fs
das
dec
ret
and
inc
idivb
fsts
inc
cmpsl
clc
rorl
push
jae
push
das
push
pushf
sub
addr16
lods
sbb
jae
adc
push
push
ret
adc
mulb
loope
mov
clc
std
mov
xchg
ja
mov
push
jp
mov
mov
je
jo
ss
mov
cmp
pop
and
inc
imul
add
ja
icebp
ljmp
mov
repz
push
lea
scas
in
xchg
push
pop
push
push
test
sub
test
shl
stos
or
pushf
outsb
loope
jp
push
test
add
sbb
nop
push
aas
lods
xor
arpl
cmpsb
cmp
sbb
bsf
dec
test
xchg
seto
jae
xor
fsubs
stos
mov
in
inc
cs
jns
cmp
mov
pop
jge
shl
in
pop
sahf
push
out
sarb
xchg
outsb
pop
and
imul
mov
xor
adc
and
in
bound
jecxz
ss
bnd
imul
sbb
ds
ljmp
pop
aaa
mov
mov
jge
jl
ret
xor
stos
lret
xor
int
dec
cmpsb
mov
xor
push
rorb
je
mov
repz
xchg
sti
or
bnd
xchg
mov
or
jg
add
mov
jb
jne
jmp
daa
adcb
addr16
xchg
pop
dec
add
add
shr
mov
lahf
in
in
sub
out
aam
cwtl
and
inc
jp
in
in
lods
inc
mov
cmc
std
add
jecxz
sub
sbb
mov
cli
mov
test
aas
cmp
es
cmp
test
pop
add
dec
roll
lds
gs
dec
testl
and
std
inc
pop
inc
jg
mov
addl
xor
adc
je
and
adc
push
and
icebp
mov
scas
fiaddl
sbb
lock
rcll
stc
add
sbb
jmp
popa
aam
lock
mov
cmp
mov
fcomps
mov
rorb
insb
cmp
xchg
ss
movsl
out
in
jo
insb
xor
pop
fs
fnstcw
lods
inc
fnsave
test
fwait
shll
popf
dec
movsb
ret
pop
xor
pop
push
in
aad
nop
cmp
int3
rorb
push
sub
pusha
fcomip
out
sbb
movsb
xor
jb
ds
iret
add
inc
mov
cmc
and
sub
cmc
mov
jbe
jge
jle
xchg
lock
outsb
scas
add
repnz
lock
jl
jmp
aas
xchg
loopne
enter
imul
in
arpl
daa
or
jno
xor
sub
les
lods
das
cmp
adc
sahf
adc
scas
push
xchg
dec
lds
test
push
push
lds
cmp
inc
mov
mov
mov
mov
mov
jnp
ret
cld
mov
dec
flds
sub
addr16
xor
or
push
jbe
faddl
mov
movsl
enter
add
out
and
ds
imul
iret
incl
push
xor
sbb
pop
push
sub
cmp
and
into
data16
and
push
scas
sub
sarl
test
pop
bound
rolb
jecxz
mov
adc
mov
mov
es
sub
popf
xchg
icebp
inc
dec
fs
clc
and
lea
inc
push
mov
and
call
ficoms
jg
cmp
or
pushf
mov
mov
popa
sub
and
or
mov
jmp
or
xchg
js
mov
movsb
jae
xor
pop
fisubrs
jg
or
sub
inc
adc
sbb
es
repnz
jae
push
shlb
mov
mov
jmp
pop
inc
stos
loopne
scas
sub
daa
cmp
add
enter
or
cwtl
cmp
lret
mov
push
popl
push
sbb
jns
out
ret
sbb
jge
jns
sbb
daa
cmp
andl
pushf
sub
add
or
push
sub
jns
cmp
xor
mov
jecxz
aam
ret
mov
lods
test
gs
xor
push
iret
mov
insb
fldcw
mov
sub
pusha
icebp
test
adc
jg
mov
loopne
repz
xchg
dec
fsts
shlb
push
adc
stos
xlat
fstpt
pop
jne
inc
test
pop
mov
movsl
xchg
or
xchg
or
sbb
inc
movsl
clc
inc
lods
add
ja
xor
test
jmp
sarb
call
subl
jge
and
sbb
push
rclb
jb
insb
mov
pop
xlat
outsb
pop
scas
mov
cld
sub
cmpsb
fsubl
les
fcmovu
into
or
lea
fstl
xor
idiv
subl
pop
inc
test
sub
movsb
pop
lods
push
sbb
inc
and
insl
in
push
icebp
movl
cmpsl
out
fidivrs
test
mov
in
jmp
hlt
mov
mov
push
mov
fisttpl
lds
fidivl
cmc
stos
in
fldt
push
mov
pop
rcrl
add
shrb
movzwl
push
ss
pop
out
insl
mov
insb
jne
adc
add
cmp
mov
mov
or
mov
popf
je
xchg
and
push
pop
jnp
xlat
push
add
or
aam
sarb
pop
push
stc
sti
cmp
jnp
repz
pop
cmpb
mov
pop
adc
fiaddl
sub
mov
pop
xlat
mov
test
dec
mov
and
mov
cmc
ret
adc
lea
sbb
mov
pop
shrl
test
mov
xor
mov
sbb
mov
jbe
nop
jns
lods
adc
shl
sub
testl
pop
insl
xchg
sbb
aas
icebp
jnp
or
mov
loope
sahf
push
mov
push
adc
pop
neg
or
inc
push
loope
outsl
int
xor
push
dec
mov
arpl
roll
iret
fbstp
ret
pop
inc
cld
inc
clc
mov
inc
mov
mov
or
mov
fisttpll
push
les
sbb
mov
sbb
rorl
popa
mov
cmpl
stos
in
or
cmp
push
cmp
fwait
mov
popl
mov
xchg
test
repz
insb
cmc
hlt
cmc
and
jge
das
push
lret
or
addr16
push
mov
add
call
lds
xor
cmp
out
cmpsb
in
aad
add
lret
in
test
repnz
sbb
movl
jmp
es
xor
imul
inc
or
stos
rcr
daa
sub
roll
adc
addl
movsl
push
sarb
orl
outsb
jnp
xor
sub
mov
cmpb
andl
dec
daa
jns
shrb
ja
add
cwtl
fnsave
fldcw
sahf
cli
mov
inc
xor
cltd
push
in
inc
pop
aas
jno
xchg
and
neg
jae
lcall
mov
or
aam
mov
jb
outsl
imul
pushf
scas
ljmp
pop
inc
call
bswap
cltd
adc
jno
es
stos
mov
push
mov
imul
testb
mov
add
push
push
fwait
ja
cwtl
jo
pop
pop
cmpsb
and
jbe
jmp
rol
xchg
pop
insb
out
xchg
in
cmp
push
sbb
sbb
enter
daa
jp
mov
lret
jle
hlt
ja
fidivrl
lods
and
mov
or
test
xchg
pop
insb
push
orl
sub
in
icebp
nop
lahf
mov
outsb
sbb
sub
jbe
push
repnz
jne
fwait
nop
pop
sub
fwait
jb
push
pop
movsb
popa
mov
pushf
mov
sbb
cwtl
popa
fnstcw
or
pop
jge
inc
fsubrp
dec
or
add
dec
sub
scas
lock
mov
in
cs
in
xchg
mov
push
pop
pop
jle
xor
xorl
scas
push
sahf
inc
fistps
or
inc
mov
das
cmp
add
rclb
cmp
subl
in
xor
dec
add
dec
push
mov
shll
pushl
push
daa
cmp
ljmp
mov
or
lret
mov
adc
sbb
jecxz
movsb
inc
or
or
mov
jb
setle
jecxz
and
sbb
jnp
pusha
mov
jne
mov
or
jno
arpl
std
into
mov
or
pop
or
test
cmp
mov
int
push
aad
xor
push
sbb
imul
sarb
in
sub
mull
iret
pop
icebp
mov
dec
hlt
sbb
cmovp
dec
xchg
adc
inc
imul
pop
or
fmull
setge
mov
stc
out
sub
sub
mov
dec
psllq
repnz
xor
jbe
repz
jne
sbb
in
cli
setl
sub
mov
xor
aaa
mov
pop
lock
pop
and
ljmp
ret
mov
loope
dec
pop
dec
fisttps
cld
pop
pop
idivb
or
pop
dec
in
scas
loope
dec
xchg
cmpb
adc
aad
sbb
ret
test
movsl
xor
shll
cs
mov
out
sub
xor
mov
jmp
rcrb
xchg
lea
or
pop
cmp
xor
popf
mov
push
es
pop
out
stos
sub
imull
ret
stos
cmp
push
mov
jmp
mov
cmp
pop
cmp
iret
mov
or
xor
lea
add
dec
mov
mov
sbb
xchg
jns
pop
cmp
loop
fldl
jmp
das
jle
mov
add
mov
mov
data16
test
cmc
and
mov
adc
dec
insl
and
movsl
sub
jle
mov
jg
sbb
scas
fbstp
ror
divb
jmp
int
mov
mov
clc
sbb
cmp
inc
inc
add
ret
inc
xor
or
jp
cmpsl
adc
les
leave
daa
pop
cmp
pushf
and
sbb
dec
lret
dec
mov
inc
and
push
dec
sbb
loop
and
mov
testb
jae
pop
dec
psrld
std
jae
aam
add
aas
jecxz
add
lahf
ss
rclb
test
inc
jns
push
jl
dec
shrl
ret
push
or
sub
add
xor
aas
out
lea
sbb
loope
lock
fistl
rolb
jne
mov
test
jb
test
xchg
mov
mov
and
push
dec
into
adc
fisttpl
mov
and
shrl
xor
scas
mov
lock
mov
mov
mov
cmc
div
scas
push
jns
jnp
inc
mov
inc
stos
scas
je
pop
int
cmp
cltd
pop
xchg
adc
outsb
mov
test
lret
je
cmpsl
pushf
cmpsb
inc
sarl
ret
adc
es
mull
wrmsr
mov
movsb
stos
adc
sbb
mov
je
cs
jae
test
jle
mov
daa
sbb
es
adc
stos
xchg
imul
cwtl
sub
lods
movsbl
mov
xlat
sbb
repnz
stos
fidivs
mov
cmp
jecxz
adc
push
xchg
mov
cs
mov
lea
movsb
mov
xchg
lds
fucomp
mov
shlb
int3
mov
push
xchg
pop
sub
cbtw
movsl
imul
cld
das
mov
ds
add
dec
clc
aad
je
fs
xor
jl
jle
ret
push
sub
in
in
xchg
dec
jecxz
xchg
pop
decl
inc
dec
push
lds
inc
push
mov
movsl
das
gs
stos
sbb
jno
insb
repz
inc
push
adc
pop
push
push
arpl
mov
jbe
js
test
sahf
pop
mov
add
xchg
add
add
fpatan
aaa
popa
test
jne
fs
test
jno
imull
sub
xlat
lods
data16
loopne
jle
in
jmp
push
das
add
or
jne
xchg
into
pop
pop
xlat
mov
sahf
add
in
sbbl
add
int
inc
dec
add
and
or
fildll
cmpsb
inc
repz
lea
or
scas
out
outsl
cmpsb
or
subl
cmpsl
cmc
xchg
jl
pop
ret
add
cmp
cmpsl
mov
imul
sub
dec
leave
sub
std
stc
sbb
fs
divl
and
xchg
loopne
popaw
xor
outsb
pop
aad
push
and
rcrb
loop
inc
hlt
std
cmp
xchg
movsl
add
fcoms
fcoms
inc
xor
push
dec
in
aas
jmp
clc
iret
ja
xor
jp
mov
lds
push
adc
mov
cmpsb
outsb
mov
mov
xor
push
pop
or
push
ss
mov
jp
cmpb
or
into
mov
inc
mov
out
iret
xor
xor
movsb
aaa
mov
fwait
ljmp
sub
pop
dec
mov
pop
cmp
xchg
mov
push
sub
in
mov
outsl
fsub
testl
lods
fincstp
pop
add
popf
inc
adc
pusha
scas
sub
mov
mov
das
sbb
int
ljmp
pop
jns
sbb
mov
mov
popa
jl
mov
pop
pop
cmpsb
scas
cwtl
test
and
or
test
jp
popf
mov
data16
test
movsb
scas
addl
adc
jno
mov
movsl
pop
int
rclb
push
xor
shrb
push
mov
cmp
arpl
aaa
mov
ds
loope
lock
cmc
and
mov
adc
mov
adc
mov
mov
mov
in
sub
inc
cmp
add
sub
icebp
fdiv
cld
out
adc
stc
cmp
hlt
jne
mov
idivb
ss
fcompl
mov
ss
mov
test
out
and
dec
aas
fstps
add
push
pop
ja
pop
scas
and
call
or
stos
push
mov
mov
aas
xor
push
std
and
int
lods
in
lcall
ret
inc
jmp
insb
xchg
ja
sub
loop
inc
dec
sbb
stc
lods
xlat
test
sub
outsl
xchg
data16
orl
movsl
inc
inc
or
out
into
rcrb
push
cli
subl
aad
inc
cs
ds
sarl
xor
pop
cli
movsl
add
cltd
add
loope
push
mov
mov
push
cmp
enter
sahf
or
jle
leave
std
rcrb
popa
dec
jb
lahf
pop
mov
dec
pusha
push
jae
sbb
mov
pop
cli
pushf
xchg
ficompl
lock
popa
pop
call
push
arpl
aad
push
mov
cmp
cltd
popf
in
push
adc
aad
mov
lock
mov
mov
xchg
pop
jns
and
mull
rcrl
outsl
aas
sub
adc
mov
xchg
adc
andl
insb
push
cmp
ret
bound
dec
dec
inc
xlat
leave
push
xor
dec
push
sbb
imul
mov
jecxz
out
xchg
adc
push
stos
mov
lock
mov
adc
inc
pop
cmp
xchg
xor
iret
push
lahf
push
pop
xor
fimull
scas
sub
enter
xchg
fdivrs
adc
jb
mov
ja
loopne
ja
jb
lock
mov
jl
sahf
es
cmc
imul
pop
sub
xor
iret
clc
gs
iret
mov
popf
mov
mov
ret
dec
mov
mov
mov
and
jbe
out
jg
push
add
rorl
outsb
push
jp
lods
dec
and
adc
xor
hlt
jae
loop
insl
shl
push
sub
lock
mov
pop
inc
pop
xchg
ja
jge
jo
fld
xor
xor
jecxz
ret
xor
ret
xlat
dec
shlb
pop
aad
xlat
fiadds
or
imul
rorb
and
lods
xor
addb
into
pushf
adc
cmp
dec
add
in
mov
movsl
cmp
iret
pop
lods
xor
mov
mov
push
add
sbb
fsubrs
xchg
lcall
or
xchg
daa
mov
outsb
in
mov
cmp
and
add
dec
lret
inc
dec
sbb
jg
or
sub
repnz
ss
daa
ljmp
mov
lock
test
and
popf
pop
inc
nop
inc
mov
ja
and
in
shrl
nop
popf
mov
sub
lret
fcmovbe
xor
and
rolb
dec
mov
mov
dec
mov
xor
shl
push
mov
imul
hlt
mov
adc
mov
ss
sub
inc
in
dec
fildl
mov
adc
mov
pop
inc
insl
mov
fstps
jnp
rolb
cmp
jb
adc
pop
xor
in
aas
test
loope
ja
mov
test
rcrb
mov
iret
fmull
sti
std
push
dec
push
jb
scas
push
jbe
pop
imul
rep
out
sub
and
loop
or
xchg
loope
push
std
or
pop
sub
es
sub
gs
push
mov
outsb
lods
iret
addl
cli
in
notb
nop
pusha
jnp
je
fdivr
xchg
jo
mov
mov
pop
ja
sbb
and
fdivrs
mov
out
shl
call
cmpsb
lret
adc
stos
inc
movsl
and
cmpsl
lods
pop
fisubs
out
out
push
ficompl
aas
xor
sbb
daa
fldenv
aam
int
xchg
out
daa
xchg
sbb
test
push
lret
xor
push
mov
jecxz
xchg
ja
push
add
xchg
jecxz
gs
dec
lods
xor
cmc
pop
dec
lcall
or
or
out
daa
jle
cmpl
sbb
into
es
push
sub
out
or
fisubs
cmc
rorb
or
imul
les
jnp
cltd
push
stos
mov
fidivs
mov
sub
nop
fisubrl
clc
rol
cmp
mov
loope
sub
mov
and
cmp
add
out
xchg
andl
cmp
cmp
push
pop
sub
cmp
xor
xchg
out
mov
pop
push
in
scas
jecxz
add
mov
sti
jnp
ds
fsubrs
aad
mov
lcall
cmp
leave
ret
mov
and
int3
data16
js
test
inc
testb
imulb
xor
fiadds
leave
addl
fisttpl
aam
mov
push
arpl
add
push
cmp
shrl
inc
or
or
push
lret
sub
lcall
and
insl
scas
repz
adc
pop
mov
lds
and
cmp
push
push
dec
and
xchg
lods
jnp
add
dec
daa
and
pop
sub
fisubrs
movsb
jge
cmp
popa
pop
jno
mov
movsl
insb
daa
fimull
mov
ja
insb
popa
lods
or
cmp
mov
xchg
xor
xchg
xor
jne
cld
fwait
in
subl
adc
dec
stos
addr16
aas
adc
lcall
dec
iret
aam
pusha
mov
dec
insl
add
mov
xchg
test
popa
ds
std
paddsb
cmp
sub
cmpsl
icebp
out
mov
fldt
push
test
xor
rcrl
pop
sub
daa
inc
int3
lods
je
jae
into
insl
inc
aaa
add
out
mov
inc
push
test
jg
xor
in
test
pop
jge
fimuls
shrb
xchg
push
sbb
mov
out
xchg
adc
xchg
pop
push
into
xchg
imul
movb
pop
ljmp
or
nop
leave
fnstcw
gs
iret
repz
dec
hlt
add
jo
mov
mov
cmc
icebp
xor
or
pop
adc
mov
lret
and
cs
out
pop
jo
or
aas
fiadds
iret
mov
ret
lcall
pop
jb
shrb
out
pop
fisubs
xchg
ja
stc
ds
mull
rorb
ds
loopne
xchg
add
pop
sahf
inc
fs
ljmp
movsb
sub
add
jns
loopne
int3
icebp
mov
mov
stos
rolb
std
orl
inc
pushl
outsb
mov
dec
jmp
mov
roll
imul
xor
mov
sahf
push
aas
imul
iret
cmpsl
addl
xor
sbb
cmp
ret
xor
and
imul
and
pop
popf
push
cld
mov
fwait
loop
adc
sbb
mov
dec
jnp
xor
test
addr16
sbb
mov
jecxz
addr16
daa
hlt
sub
fisubl
xchg
dec
adc
loop
xor
psllq
popf
and
push
jg
sbb
negl
mov
pop
iret
repnz
test
xor
xor
mov
rcrb
mov
adc
push
std
insb
leave
push
inc
cmp
in
ljmp
or
sti
dec
dec
iret
pop
arpl
push
or
das
clc
add
lea
movsl
push
rolb
sti
movsl
mov
pop
dec
cmpsl
jne
pop
sbb
dec
scas
mov
pop
stos
insl
jns
jp
ja
xor
je
sbb
repnz
mov
inc
fcomi
loopne
jno
and
jmp
adc
mov
adc
stc
in
adc
test
pop
mov
mov
mov
or
sahf
xchg
popa
imul
jle
xor
sub
cmp
loopne
push
fbld
ror
xchg
jge
je
and
jl
repnz
push
pop
roll
jge
inc
xor
inc
leave
fisttps
cmp
notl
jmp
hlt
ficomps
xchg
jnp
into
mov
adc
dec
xchg
cmp
xchg
pushf
add
pop
and
push
scas
ret
pop
cmpsb
rcrl
xor
fldcw
mov
bound
das
xchg
adc
enter
loopne
jb
mov
pop
mov
ds
cmpsb
fxtract
adc
adc
mov
or
negl
xor
jg
ret
sub
jne
and
mov
das
lcall
adc
push
call
pop
out
stc
andb
mov
cmp
out
push
je
test
add
insl
mov
xchg
jae
push
lea
lcall
push
jbe
jg
cmc
sahf
stos
and
mov
add
mov
arpl
loopne
aaa
jp
addr16
imul
cmp
inc
ret
lret
xor
jnp
sbbl
pop
mov
movl
mov
addl
mov
push
mov
mov
sub
clc
outsl
rcll
ja
popa
jb
cld
ds
mov
out
insb
outsl
xchg
xchg
adc
cmpsl
arpl
jne
push
dec
push
pop
rcl
mov
xor
faddl
inc
decl
add
inc
test
inc
outsl
lcall
fucom
sub
imul
sahf
xchg
mov
rorb
int
and
ret
adc
xor
movsb
pop
andb
outsl
xchg
mov
outsl
aaa
xchg
or
negb
ja
movsb
mov
icebp
arpl
lcall
mov
ljmp
sahf
jnp
xor
or
push
add
insb
sub
sbbb
mov
cmpsb
out
inc
and
push
and
dec
mov
in
xchg
mov
xor
ljmp
pop
inc
inc
cmc
les
dec
push
sbb
in
sar
sub
stc
mov
adc
pop
push
ja
out
mov
xor
cmp
dec
xchg
mov
loop
popa
fidivrs
add
mov
data16
push
fdivrs
fnstcw
and
dec
mov
jecxz
test
lods
in
out
sbbb
jmp
inc
cmc
test
cmp
sub
jmp
ficomps
sbb
pop
sbb
jg
inc
std
fnstcw
lods
call
mov
cltd
or
movsl
cmp
lock
sub
filds
jg
cmp
jle
or
icebp
pop
jns
xor
mov
bnd
hlt
lret
sbb
sub
packsswb
lret
cmpsb
and
pop
cmp
dec
xorl
add
int
mov
push
rcrb
fmulp
xchg
mov
mov
ret
push
xchg
inc
out
std
mov
add
jae
test
mov
mov
inc
shr
and
jmp
mov
xchg
xor
sub
cmp
adc
mov
mov
cmp
dec
xor
jne
pop
add
inc
push
sub
orb
frstor
icebp
and
aam
fildl
pop
gs
sarl
fucomi
pop
rcrl
mov
inc
xchg
push
push
sub
pop
pop
hlt
ljmp
push
pop
xchg
mov
pop
lods
cmpsb
lret
mov
adc
subb
xchg
add
popf
sahf
out
imul
mov
jmp
dec
sub
mov
pop
ficoml
repnz
fcompl
data16
inc
jge
mov
int
sub
mov
jo
lret
popa
add
inc
mov
icebp
pop
lock
mov
lret
lea
int3
in
insb
fsubp
fdivrs
push
outsb
loop
inc
mov
push
add
xchg
push
push
rcll
dec
jo
pop
add
out
cmp
xor
push
jb
jne
stc
mov
into
addl
cmp
mov
lcall
int
aad
jne
and
push
jg
mov
or
and
dec
xchg
ds
mov
push
jl
xchg
fisubl
and
xor
jle
cmp
and
adc
xchg
and
push
fbstp
mov
clc
orl
shlb
mov
out
rcr
aaa
or
sub
inc
aad
cmpsb
aas
inc
jecxz
sbb
movsl
or
jbe
outsb
adc
mov
das
cmp
shl
dec
sti
xor
push
mov
jae
cmp
dec
lret
and
mov
loop
rcl
bound
lret
xchg
rorb
mov
mov
insb
mov
xchg
mov
insb
adc
adc
dec
insl
xor
cwtl
pop
imul
les
pop
xor
repz
mov
repnz
cmp
movsb
and
xor
xor
and
ret
lret
cmp
and
inc
dec
cwtl
mov
loopne
dec
push
lods
pop
jmp
call
mov
cmp
aad
mov
es
ret
loop
xchg
shl
in
pop
call
add
pop
push
push
jnp
adc
xchg
push
inc
xor
mov
das
xchg
sub
or
ds
cmp
and
and
data16
incb
jecxz
shrb
imul
pop
and
or
frstor
fadds
cmc
mov
pushf
pop
cmc
jl
roll
xor
mov
mov
jbe
popa
mov
sbb
dec
lahf
cmp
jge
int3
adc
pop
lret
xchg
jnp
jno
sub
sbb
or
jecxz
and
sbb
and
stos
sub
jp
shr
cmp
sarb
xchg
aad
adc
xchg
sahf
cmp
aam
mov
je
js
or
popf
test
jbe
mov
cmpsb
adcb
xor
sub
std
sbb
out
aas
push
mov
mov
insl
or
mov
lret
xor
xchg
xor
adc
es
cs
pusha
mov
fwait
clc
jge
and
cmc
in
testb
push
jge
ljmp
and
adc
leave
mov
and
cld
mov
sbb
out
dec
dec
inc
icebp
inc
sbb
push
push
pop
pushf
jo
push
or
leave
and
fs
push
inc
push
or
or
loopne
mov
test
push
mov
ds
outsl
stos
aam
lock
nop
fcoms
jb
cli
call
loope
les
and
sbb
ret
mov
cmp
cmpsl
mov
or
inc
fdivs
std
cmp
dec
cli
push
cwtl
jge
sbb
std
test
ss
dec
or
mov
jl
mov
icebp
mov
xchg
jmp
pop
jno
jecxz
mov
hlt
xchg
and
and
lds
mov
cmpsb
aam
movsl
mov
and
test
mov
dec
sbb
inc
lret
ds
movl
mov
pop
test
mov
dec
add
fistpl
cmp
les
ljmp
cmpsl
mov
add
sahf
jle
dec
pop
adc
into
jnp
xchg
xlat
xchg
fdivs
push
jg
or
adc
out
jle
jne
cli
popf
xor
cmp
mov
mov
sahf
pop
jnp
fcoms
mov
in
xchg
mov
pusha
out
clc
mov
xor
xchg
adc
xchg
pushf
aad
mull
sub
decl
jmp
mov
arpl
lret
inc
and
inc
inc
jp
xor
inc
lret
stc
adc
aad
push
push
scas
and
sub
adcb
subb
push
pop
pop
cmp
jl
mov
popa
or
or
xor
jp
outsb
cmc
sbb
jle
sbb
cmpsl
sbb
adc
popa
fstpt
fcom
mov
fbld
lock
mov
into
cmpsb
xor
add
cltd
lea
loopne
loop
pusha
lods
in
ljmp
mov
test
test
sub
clc
mov
pop
js
pop
loop
testl
and
cli
mov
addr16
movsl
cmc
mov
ret
push
mov
outsb
cmp
push
sbbb
rorb
lea
add
lret
fwait
orl
push
jmp
cld
call
adc
popa
mov
test
push
out
ljmp
test
shrl
xor
out
mov
aam
and
dec
subb
or
movsl
andl
mov
mov
call
mov
rcrl
and
shl
std
call
ror
pop
shll
jle
lcall
mov
stos
jp
mov
bound
push
sub
jge
xchg
call
pop
or
inc
das
dec
arpl
sub
mov
fmull
mov
and
sub
lds
into
and
mov
aaa
mov
jnp
adc
push
mov
fidivl
mov
insb
in
xor
call
mov
sub
jno
xchg
aad
mov
pop
popa
sbb
dec
punpckhbw
das
repz
das
cmpsl
xor
sbb
inc
into
xchg
push
push
mov
test
mov
aaa
or
mov
mov
sti
mov
mov
testb
xchg
addl
mov
les
xchg
mov
adc
lahf
xchg
pusha
es
sub
or
sti
ss
rol
jbe
fisubrl
push
dec
ficoml
or
stos
sub
test
dec
lods
out
adc
push
repnz
pop
pop
push
inc
scas
ja
repnz
push
pop
cltd
pop
pop
cli
les
add
or
mov
xor
test
cmpb
pushl
popf
fwait
jecxz
sub
pop
icebp
xchg
adc
daa
aaa
jae
loopne
fldt
scas
fisttpll
adc
daa
dec
loopne
js
add
mov
daa
sub
or
mov
sbb
out
dec
lret
mov
xchg
dec
cli
add
jl
notl
js
xchg
cld
test
mov
dec
push
mov
fisttps
mov
push
and
enter
lret
test
std
inc
jo
aas
lea
dec
out
jecxz
xchg
out
and
push
or
xchg
int
insb
mov
in
sbb
jb
jbe
pop
or
gs
fldenv
das
sbb
int3
mov
sub
jg
orl
nop
jmp
and
mov
jns
mov
cmp
sbb
shr
cld
sub
mov
or
mov
popf
jae
jg
dec
jno
mov
call
sub
jmp
or
jo
insl
lods
or
data16
jmp
lcall
dec
sahf
lock
shl
insb
and
jle
lret
pop
imul
inc
shrb
sub
push
push
xor
jns
icebp
mov
mov
cmp
mov
lret
das
sub
and
xor
mov
lcall
insb
xchg
popa
jne
push
movsl
out
loop
sub
dec
out
mov
jp
movsb
sbb
sub
ret
sbb
loopne
mov
and
sub
push
add
or
jge
test
jns
stos
xor
pop
xor
imul
pop
shrl
inc
jle
jge
outsl
fdivs
mov
pop
pop
aad
jle
push
cmp
dec
inc
pop
inc
dec
jle
in
or
xchg
xor
outsb
fcmovnb
outsb
mov
cmp
xchg
jg
andb
xor
imul
sbb
ds
adc
sub
push
pop
add
and
mulps
jp
sbb
sub
mov
mov
mov
test
pop
stc
xchg
les
push
and
jp
xor
push
xchg
pop
data16
mov
cmp
mov
xchg
pop
out
in
mov
addl
sub
daa
jno
idivl
adc
pop
lahf
nop
jle
jno
mov
lret
lcall
fistpll
into
sbbl
inc
adc
mov
outsb
cmpsl
dec
or
fwait
xchg
pop
mov
sub
mov
xchg
xor
inc
mov
test
call
cwtl
loopne
mov
cld
mov
dec
lret
test
lahf
and
xor
push
sbb
push
js
loope
ljmp
repz
cmpsl
int3
xchg
mov
pop
add
pop
fmuls
xchg
pusha
stos
mov
and
push
inc
add
shr
enter
jmp
js
ljmp
cli
adc
lahf
mov
inc
dec
test
lods
enter
inc
subb
sbb
call
jnp
lock
sub
mov
mov
lods
outsl
pop
mov
lods
xchg
pop
push
cmc
sub
iret
lods
lret
fstpl
mov
mov
jb
lea
add
addr16
and
les
xchg
call
es
repz
add
push
testl
and
movsb
std
mov
jg
mov
es
jno
ss
int
sub
rcl
mov
adc
mov
imul
sub
clc
dec
push
pop
cltd
cmp
shll
cmp
adc
mov
sub
ret
xor
xor
sub
pushf
jmp
mov
push
adc
cld
shll
dec
mov
add
in
mov
das
aas
arpl
enter
sbbl
clc
adc
subl
out
mov
imul
lock
lds
jns
movsb
fdivl
icebp
cmp
add
inc
fsubrl
outsl
jg
into
and
mov
test
js
addl
xchg
outsl
xor
push
or
leave
push
adc
scas
clc
sti
das
pop
imul
mov
jle
and
or
mov
into
mov
inc
push
or
in
lahf
sbb
mov
rolb
fdivl
inc
arpl
xor
scas
lea
into
shrl
push
xchg
jge
sarl
shlb
aam
out
inc
pop
push
push
int3
jecxz
cltd
mov
test
out
mov
mov
cmp
pop
xor
aad
stc
jg
sbb
add
inc
sbb
fsubrl
inc
daa
out
mov
ss
cmp
xchg
dec
into
or
jl
jno
fdivr
push
subb
dec
xchg
int
idivl
ljmp
pushf
cltd
fnstenv
dec
cmc
sbb
ds
sahf
data16
fistpll
loope
ror
fldt
inc
popf
and
fstpt
or
or
insl
stc
mov
jae
in
and
and
pop
xchg
repz
mov
push
gs
jne
jl
lret
push
xor
in
mov
add
aam
pop
mov
and
out
out
test
adc
mov
incb
push
insl
or
mov
pop
jnp
nop
aad
xor
enter
aaa
mov
std
cmpxchg
sbb
mov
call
and
mov
cmpsb
pushf
pusha
scas
xorb
mov
loop
lret
iret
clc
out
aam
sub
sbb
mov
mov
lea
and
pushf
fs
add
pop
ja
xor
aaa
fdivs
out
pop
xchg
lahf
jae
test
int3
repz
or
sti
fiaddl
dec
ss
cmp
inc
call
xor
fcmovbe
jmp
insl
sbbb
xchg
ss
leave
pop
mov
cli
add
and
mov
adc
aam
nop
fcmovu
les
scas
dec
xchg
push
pusha
movsl
test
mov
xchg
lret
sub
testb
mov
into
pop
in
fistpll
inc
and
jecxz
pop
mov
enter
mov
jnp
push
aas
leave
sbb
xor
rcrb
push
mov
cmp
test
es
nop
gs
cld
or
and
pop
mov
sub
and
lret
mov
jmp
lds
ss
ficoml
ds
scas
add
int3
xchg
dec
mov
idiv
gs
jle
pop
std
dec
mov
bound
les
push
inc
mov
fcomip
jge
dec
dec
imul
loopne
xor
xchg
adc
scas
leave
add
notb
jp
add
jns
mov
mov
in
push
gs
or
jl
push
hlt
dec
pop
sbb
push
or
add
mov
aam
mov
xchg
ret
xchg
pop
ret
xor
jo
es
int3
xchg
mov
test
jp
mov
fwait
push
cmpsb
movsl
jge
xor
xor
test
fcompl
or
rclb
jo
repz
mov
adc
loop
push
lea
das
or
cltd
jp
and
push
mov
jge
push
mov
inc
insb
inc
inc
jmp
outsb
or
mov
pop
lock
shr
lea
fdivs
jge
mov
clc
or
push
movsb
cltd
jno
aas
lret
lret
push
xchg
fldcw
dec
ljmp
cli
jnp
pop
in
ret
add
jl
and
bswap
call
mov
movsb
movsb
bound
nop
pop
cld
jno
mov
outsb
jp
cmp
loop
jl
cmpb
test
loope
nop
imul
or
dec
sbb
sbb
test
shll
arpl
and
and
sbb
adc
aam
inc
cmpsb
data16
jg
pop
mov
mov
jne
fiadds
jp
mov
jns
inc
mov
xchg
fwait
add
clc
cmpl
mov
cs
push
je
pop
adc
xchg
lret
aam
jmp
pop
or
in
adc
in
jnp
xchg
add
lret
jnp
mov
sbb
lcall
dec
push
adc
xchg
jo
cltd
adc
xor
jmp
std
xchg
ret
repnz
pop
sbb
xchg
icebp
bound
xor
fldl
subb
fldl
sbb
ss
jp
cld
dec
movsb
test
and
adc
es
orb
and
mov
xor
das
test
sub
jae
push
inc
leave
test
mov
pop
jg
sub
sbb
push
mov
in
aas
sahf
and
pusha
in
out
or
xchg
scas
sub
sti
aad
dec
add
ret
sub
pop
negl
mov
fdiv
sub
in
and
adc
cmpsl
test
int
sahf
aad
bound
lcall
iret
fnstsw
js
pop
jae
mov
push
psubsw
mov
arpl
mov
outsb
dec
add
sub
popf
clc
jle
rorl
sub
imul
rcll
pop
icebp
and
test
sbb
xchg
cltd
mov
out
out
inc
cmp
daa
clc
mov
dec
scas
sub
sub
mulb
inc
lock
test
fcompp
rcrl
lods
jnp
popf
addl
fisttpll
sbb
ja
or
pop
inc
loop
xchg
pop
and
pop
sub
mov
daa
add
rep
outsl
cmp
shr
sbb
xchg
mov
fstpl
sub
leave
fnsave
mov
push
fs
testl
ja
fwait
andb
das
pop
call
cwtl
cmp
in
pusha
sub
fimull
push
mov
sub
out
sbb
dec
ja
int3
jmp
mov
repz
adc
inc
sub
push
es
sbb
mov
out
and
xchg
and
insb
inc
adc
cmpsb
or
push
mov
hlt
loop
test
pushf
cmp
jp
fcomp
push
test
js
mov
nop
rcll
or
cmp
xchg
adc
sbb
outsl
mov
in
icebp
movntps
sub
push
cmp
or
mov
aam
dec
mov
pop
fcomps
mov
mov
jb
push
xchg
push
sbb
lods
xchg
xchg
mov
jb
popf
jg
fwait
lahf
adc
jge
mov
cwtl
push
push
inc
or
xchg
subl
imul
dec
lods
sahf
out
add
pop
inc
movsl
nop
shr
push
mov
pushf
jae
int3
sub
pop
js
cltd
scas
lock
outsl
sti
jns,pt
push
out
leave
push
cmp
or
fwait
xchg
enter
imulb
mov
fucom
popf
ror
fisubs
adc
jbe
insl
pop
fisubrl
int3
jne
es
and
xor
in
ja
test
fidivrl
pop
scas
int3
ljmp
mov
ret
xchg
push
xchg
clc
mov
orb
or
add
jl
movsb
jle
sub
cmp
in
push
out
sar
frstor
jg
test
mov
push
sbb
push
dec
jb
pusha
and
and
imul
inc
mov
dec
lahf
or
xchg
add
mov
pop
push
add
gs
mov
xchg
sbb
mov
sub
xorl
jae
mov
sub
mov
inc
adc
push
mov
mov
xchg
add
cmp
mov
lds
cmp
jno
jle
jecxz
sbb
pop
and
add
pop
xchg
mov
dec
or
mov
dec
dec
in
popf
adc
push
mov
flds
cld
imull
in
inc
pushf
pop
arpl
out
bnd
cwtl
jne
testl
test
xor
rcl
jne
cltd
imul
std
cmp
movl
rclb
movsl
or
inc
insl
xchg
xchg
and
add
test
xchg
movl
mov
cli
aaa
in
andb
xor
pushl
mov
les
xchg
jno
mov
push
cmp
or
pop
in
add
xor
outsb
lods
add
idivl
sub
mov
movsl
push
jb
daa
hlt
into
jb
dec
push
stos
xchg
adc
sbb
cld
fld
mov
ljmp
scas
fnstsw
mov
mov
lock
and
outsl
mov
shrl
push
mov
das
sarl
and
movb
repz
std
test
and
xlat
into
mov
jae
xor
ret
xlat
add
fs
xchg
int
ss
xor
adc
cmpsl
cmpsl
inc
sbb
out
outsl
xchg
es
ja
mov
jns
leave
repnz
xor
inc
xor
jns
fucomip
repz
pop
add
xor
cmc
cli
out
out
mov
push
in
inc
lcall
inc
xchg
xchg
fmul
pop
scas
add
mov
xor
fisttpl
sbb
aas
and
imulb
inc
arpl
xor
into
dec
mov
ja
mov
mov
dec
ret
adc
sub
jb
cs
ds
push
or
push
ljmp
in
pusha
sbb
addr16
jp
jo
jle
xchg
faddp
lock
jg
daa
pop
repnz
test
adc
aas
cmp
rorb
adc
or
jns
adc
rcrb
mov
lahf
add
jl
cmc
sbb
or
inc
cwtl
stos
sahf
and
js
fnstsw
pop
daa
enter
imul
xor
jo
push
add
add
mov
jae
outsb
jne
aad
and
cmp
add
xor
insl
mov
sub
nop
pop
imul
sub
or
ds
cld
jno
getsec
xchg
xchg
icebp
xchg
mov
ds
test
fsubs
push
idivb
fwait
lcall
sbb
pop
jno
insl
clc
stos
sub
jmp
push
add
mov
lods
test
cmpsb
mov
into
lret
mov
and
sub
shrl
mov
ret
fsubs
jno
xor
scas
pop
loopne
addr16
call
sub
std
cmp
dec
or
bound
outsl
push
mov
sbb
int3
sbb
lds
nop
adc
cmpsb
mov
inc
in
gs
or
inc
and
das
dec
ficomps
sub
shr
jmp
cmp
inc
inc
mov
mov
push
fwait
test
dec
in
out
mov
inc
icebp
mov
pusha
sbb
push
jo
scas
pop
nop
icebp
pop
mov
inc
cmpsl
xchg
rclb
inc
ret
lea
pop
stos
dec
xor
stc
test
les
lods
xor
nop
stc
add
push
mov
mov
loope
out
hlt
sarl
out
xor
lahf
push
push
pop
shr
pop
push
or
lods
dec
ds
xchg
repz
fnstsw
das
xor
or
cli
out
std
out
out
dec
repz
ja
cmp
popa
iret
les
inc
int3
adc
jno
js
cmp
insb
push
push
cmp
decb
mov
lret
sbb
popa
jmp
in
xor
adc
pop
ret
aas
setne
sbb
and
repnz
pop
jg
arpl
and
cmpsb
cmp
and
mov
add
int
push
add
xor
addr16
mov
enter
negl
jge
add
pushf
aaa
mov
fidivrs
xor
orl
out
pop
pop
ss
jmp
jb
shr
sbb
jne
lea
jbe
lock
inc
or
push
add
notb
xchg
lret
enter
pop
js
xor
loopne
push
pop
inc
jge
jo
pop
fs
pop
cltd
dec
hlt
pop
push
rcrb
xorl
mov
out
enter
lds
cmp
mov
pop
add
push
int3
in
dec
mov
pop
scas
mov
inc
push
das
mov
or
cmp
movsl
arpl
sub
and
xchg
test
and
pop
xor
cs
jnp
mov
xchg
sub
jmp
iret
aad
or
push
outsb
and
fwait
inc
push
xchg
xchg
mull
cmp
mov
das
mov
mov
jb
mov
jno
dec
lret
jne
xor
push
aad
cli
data16
jb
pop
loopne
popf
mov
or
imul
daa
dec
cwtl
jl
or
mov
add
mov
push
das
adc
xchg
lds
inc
mov
lock
jmp
stos
sub
jg
xchg
xor
call
std
lret
and
mov
jnp
mov
sbb
faddl
mov
sbb
rep
dec
adc
and
es
cmpsb
bound
subb
inc
cmp
push
xor
in
jbe
dec
mov
gs
loopne
iret
loopne
ret
ret
jbe
hlt
cmpsl
cld
mov
sarb
jnp
push
sbb
jo
add
pop
fisttpl
inc
push
cmp
add
dec
jg
push
xchg
int
inc
testb
lds
inc
cmpsl
xchg
dec
scas
adc
lods
push
ret
cli
mov
adc
push
popf
arpl
mov
fiaddl
and
into
movsb
mov
bsf
and
addr16
push
int3
add
es
sbb
adc
mov
mov
cmpsb
push
stos
pusha
fistl
jge
insl
dec
fidivrl
mov
insb
int3
mov
sti
adcl
jl
fs
push
or
imul
adc
addr16
xor
push
jecxz
icebp
mov
out
mov
shlb
cmp
pop
push
mov
mov
mov
out
es
and
mov
push
push
add
cmp
stc
aad
fisttpll
shll
lds
sti
in
sbbl
mov
pop
jne
mov
fcompl
xor
or
into
iret
das
jne
jmp
cmp
fidivs
mov
jne
aaa
addr16
jp
jnp
shl
mov
jae
or
int3
mov
js
push
jae
dec
shll
loopne
test
push
push
loop
or
mov
imul
test
outsb
sbb
lock
sub
dec
outsb
mov
clc
rolb
aam
fwait
ds
sbb
scas
out
xor
jmp
or
xchg
and
in
push
xor
shrb
mov
popf
or
and
ds
insb
and
bound
loope
in
sub
mov
dec
aaa
pop
add
incl
fs
imul
and
test
pusha
fisubrl
mov
mov
jno
daa
jne
push
test
mov
jmp
popf
cmc
loopne
enter
dec
ret
xchg
stos
adc
xorb
repz
rep
div
pop
jo
out
adcb
pusha
pop
popa
lahf
mov
cltd
int
pop
jp
pop
sbb
test
lea
dec
push
jne
pop
dec
mov
mov
push
mov
pop
lods
push
mov
cmp
mov
sbb
out
sbb
sti
inc
xlat
push
push
pop
std
dec
dec
push
mov
add
into
mov
test
add
or
fcmovu
aaa
rcl
repnz
push
xchg
jnp
stc
jb
enter
xor
test
mov
or
aas
xchg
stc
cmp
call
fs
lahf
icebp
mov
xor
mov
dec
ror
cmpl
pushl
das
push
sub
jno
adc
xchg
daa
ljmp
lret
push
and
cmp
jg
inc
bound
mov
ja
dec
rcrl
add
jno
pop
xchg
jl
fisttpll
sbb
mov
add
add
icebp
and
push
jo
sub
push
adc
mov
faddl
sbb
push
or
sbb
dec
sub
out
cmp
inc
mov
or
or
jl
adc
jbe
in
lods
xchg
sub
ret
dec
dec
push
xchg
aaa
dec
outsl
testl
pop
dec
push
mov
loope
fnstcw
mov
mov
in
outsl
loop
insb
and
sbb
fcmove
xchg
cmpsb
push
push
xor
lds
movsl
andb
xchg
jecxz
adc
int3
adc
cwtl
cmp
addr16
sbb
adc
shll
mov
push
cmp
out
dec
outsl
stos
movsb
imul
lret
pop
adc
jmp
and
jle
in
cmpsl
or
data16
loope
push
fwait
xchg
xor
sub
jge
shll
test
subb
pop
pop
add
aaa
iret
dec
adc
test
lock
bound
fists
bound
push
sub
xchg
sub
mov
cmp
scas
xchg
jmp
fimuls
dec
or
int3
in
popf
lret
rol
xchg
out
jmp
scas
mov
out
pop
in
mov
notb
cmp
stos
fistpl
push
jmp
pop
nop
pop
push
fistps
sar
add
mov
mov
out
idivb
daa
adc
in
pop
cmp
cmp
daa
cmpsb
push
test
mov
aad
lea
bound
or
fdivrs
pop
outsb
sub
leave
fsubrp
adc
dec
lock
mulb
pop
jne
pop
mov
and
les
sub
push
xchg
xchg
cmp
test
mov
pop
pop
mov
mov
iret
and
mov
fwait
into
or
mov
jp
jbe
cld
insb
std
dec
enter
scas
jge
aas
dec
hlt
adc
push
jb
jl
test
fisubs
push
sub
push
xchg
pusha
jp
fldt
cmc
jno
addr16
je
mov
dec
adc
test
stc
cwtl
cmpsb
lods
outsb
inc
jno
daa
in
pop
cmp
sub
cwtl
adc
push
add
xchg
mov
in
push
xor
aas
addr16
cmp
cmp
inc
sub
fimull
aas
scas
shrb
and
iret
shrb
xchg
dec
outsl
dec
bswap
cmp
dec
popf
outsl
adc
out
out
lahf
xchg
loopne
push
pop
imul
pop
adc
int
mov
cmp
ret
lahf
jge
adc
inc
aad
push
push
loop
cmp
andl
clc
mov
rcrb
xor
call
subl
jne
dec
jne
out
aad
pop
pop
add
sub
insb
leave
push
push
lds
pop
push
jl
xor
pop
rcll
pop
mov
clc
clc
jmp
dec
pop
into
adcl
sub
ret
push
add
xor
pop
mov
ljmp
into
imul
test
loope
inc
xchg
and
loope
lahf
popf
sub
in
add
xorb
push
lods
and
fldt
aam
jb
inc
pusha
movsl
sti
xchg
sub
dec
fnstcw
out
leave
fisttpll
xchg
cmc
incl
jns
test
mov
leave
and
pop
shll
shlb
xchg
xor
clc
dec
jmp
push
sahf
sub
xor
in
lock
ret
jo
adc
mov
repz
arpl
clc
fnstcw
dec
outsb
mov
jecxz
mov
shlb
mov
add
in
test
popa
fdivs
and
test
xchg
adc
push
in
cmp
dec
mov
xchg
push
mov
ljmp
dec
xchg
mov
and
dec
cmp
xor
dec
mov
es
repz
pop
stc
ficomps
and
ret
xchg
jns
rorb
into
cmp
pmuludq
enter
cmc
mov
mov
cwtl
cmp
and
jb
sub
movsl
inc
arpl
and
mov
sub
sti
xchg
dec
pop
mov
inc
ret
fs
andb
ror
inc
outsb
cmpsl
gs
loopne
cs
dec
or
or
cltd
cld
xor
push
xchg
incl
lock
jbe
xor
push
jge
push
jge
xchg
inc
mov
pop
mov
pop
adcb
cli
aam
pop
jmp
inc
mov
pop
pop
xchg
das
aas
mov
mov
adc
jno
xchg
adc
aaa
lods
sahf
ret
lods
sub
mov
sub
lret
ljmp
xor
hlt
leave
rorb
movsb
fdivrp
mov
add
jmp
cmc
sti
es
mov
push
loop
dec
test
xor
loope
scas
xor
mov
icebp
jge
mov
popa
mov
fists
jbe
add
xorb
ficoms
sub
mov
loopne
rclb
or
fisubrl
inc
sub
mov
push
hlt
xor
dec
xor
mov
add
stc
push
add
nop
or
das
adc
pushf
fdiv
xor
jmp
cmp
pusha
sub
ret
xchg
adc
dec
jo
fsubrl
mov
dec
cmp
jnp
call
pop
shll
stos
push
mov
or
hlt
push
xchg
lods
ja
sub
xor
rcll
push
xchg
rcrl
mov
sahf
into
divl
dec
sbb
aam
mov
dec
jmp
jb
fsub
sbbl
mov
push
xor
movsb
or
mov
xlat
repz
jecxz
rolb
jge
pop
sbb
cmp
mov
fiadds
sub
fistl
fucomi
test
jne
jnp
adc
aad
sbb
arpl
push
xchg
cs
mov
lds
add
xchg
arpl
shrl
aaa
cmp
add
sarb
pop
fdivs
outsl
ss
lea
mov
in
aaa
fadd
inc
jne
movsb
in
pop
int3
fidivs
insl
popa
add
add
mov
pop
cmp
inc
loope
pusha
in
mov
xchg
sub
scas
jmp
or
rorl
cmp
shlb
mul
lods
mov
sbb
cmp
rol
in
inc
gs
lea
rcll
repnz
xor
arpl
push
lahf
call
aas
sub
cmpsl
xchg
sahf
mov
jecxz
push
sub
mov
lahf
push
jmp
es
dec
lcall
or
push
sbb
movsl
sub
test
pop
push
xchg
push
dec
aas
jge
mov
dec
call
jnp
ds
out
xor
xchg
mov
leave
pop
jns
loopne
push
add
pop
dec
mov
and
push
push
loop
push
jg
cld
sub
xor
adc
shrb
push
enter
mov
cmpsl
stos
repnz
in
jo
cli
xchg
add
ljmp
bound
data16
cwtl
fwait
jle
push
jbe
ljmp
loopne
mov
cmpsl
inc
loope
push
cmp
ror
shlb
adc
je
mov
ret
pop
cmp
push
cli
mov
xor
lahf
jae
repz
iret
dec
mov
push
mov
sbb
jecxz
mov
fs
dec
fsubl
arpl
adc
push
out
stos
scas
repz
out
fs
jo
sbb
fnsetpm(287
shll
popf
in
xchg
out
mov
mov
jae
mov
int3
or
les
add
dec
add
push
jb
xchg
add
fcoms
push
mov
pushf
or
loop
mov
nop
ljmp
adc
jbe
scas
fisubrs
push
sbb
aas
pop
jp
cld
push
mov
es
sahf
movsb
imul
pop
dec
or
int3
mull
movsb
inc
xchg
stos
rcr
test
movsl
jl
stos
pop
sub
pop
in
lretw
pop
into
cltd
stos
sub
sbb
xchg
pop
push
rcrb
cmp
imul
call
data16
xor
cmc
push
jns
fldenv
insl
push
arpl
add
sub
inc
rclb
adc
inc
pop
rorl
pop
shll
fcmovb
pop
mov
scas
nop
inc
into
inc
adc
fists
insl
shl
jne
pop
jge
xchg
fcmovu
dec
add
or
xchg
sbb
scas
sahf
jecxz
daa
cmp
gs
test
pusha
jae
lods
loopne
jle
sbb
leave
push
push
xchg
stc
cmc
xchg
push
inc
fcomp
jge
adc
sbb
xchg
aaa
push
cmp
jle
cmpsl
jecxz
mov
push
mov
mov
lcall
gs
lret
call
or
sbb
imul
jne
enter
aas
ds
sbb
cmp
adc
aam
sbb
xchg
divl
pusha
push
dec
adc
aad
jne
xchg
pop
xchg
insl
fs
rolb
cs
mov
xor
mov
out
arpl
mov
mov
loopne
in
xchg
mov
mov
mov
sbb
mov
fdivp
adc
and
adc
mov
test
adc
repnz
mov
lds
lcall
fsts
out
ljmp
std
fcompl
jbe
cwtl
ja
mov
inc
pop
or
adc
push
sub
sub
jmp
fidivs
mov
ljmp
lods
stos
jne
shll
mov
fimull
mov
mov
mov
jo
mov
sbb
in
adc
scas
loop
nop
lods
cmp
xlat
push
outsb
imul
imul
fwait
inc
sbb
adc
mov
lods
pop
pop
or
mov
or
pop
pushf
ja
dec
imul
in
push
cwtl
xor
lret
mov
push
add
loop
jg
inc
lock
loop
out
xchg
jne
cmc
push
dec
fucomip
push
fsubs
adc
push
int
pop
jno
aas
or
sub
lods
je
addr16
sbb
insb
dec
stos
jo
jbe
sysexit
fnsave
push
loope
fsubp
dec
adc
pop
inc
fcoml
pop
xchg
cmp
push
xchg
push
lds
insb
xor
mov
mov
jge
mov
jns
jne
pushf
arpl
scas
cmc
loop
mov
out
sub
pop
jp
mov
rcr
cmp
mov
inc
mov
arpl
leave
cltd
and
out
mov
mov
es
xlat
ljmp
fistpll
push
xchg
cwtl
in
rcrb
into
movsl
xor
jbe
ret
iret
dec
outsl
pop
or
xchg
xlat
mov
push
ljmp
dec
insl
addr16
fisubs
das
das
pop
mov
std
movsl
cmpsl
mov
cmpsl
int3
xchg
ficomps
test
jno
inc
scas
lret
int3
lahf
ja
fwait
jge
stc
mov
leave
xchg
jbe
insb
or
cmp
dec
int
adc
xchg
sbb
cwtd
pop
cmp
push
fs
idiv
inc
xor
sahf
int
sub
sahf
testl
cmp
dec
aas
jp
pop
out
inc
xor
sub
cwtl
mov
mov
pop
inc
pop
js
sub
or
inc
cmp
mov
movsb
inc
push
dec
stc
stos
fisttpl
fistl
cmp
mov
lock
mov
push
xor
in
inc
pop
jmp
and
scas
cmp
sarl
mov
cmc
pop
js
lock
xchg
vmread
xchg
mov
push
xor
mov
dec
aas
ja
cmp
xor
scas
push
jl
imul
adc
in
pop
xchg
dec
mov
loope
add
mov
push
test
sub
xor
dec
filds
push
cli
repz
cmpl
shr
pushf
push
mov
repnz
pop
addl
cwtl
xchg
jo
inc
or
std
shlb
mov
ja
add
push
mov
mov
imul
jns
mov
dec
jno
dec
and
clc
mov
push
repz
sbb
mov
push
out
jno
push
adc
pop
pop
iret
cmp
fwait
or
cwtl
in
pop
out
adc
and
push
cs
add
pop
js
rcrl
jne
adc
dec
lods
jns
inc
cwtl
lods
cs
xchg
ret
repnz
jle
dec
lock
in
lret
mov
push
ja
jle
cmp
lea
xchg
aaa
and
sbb
or
mov
rorb
cmc
or
shrb
inc
pushf
fisttpl
stc
jnp
daa
sub
sbb
stc
pop
ljmp
mov
inc
mov
ja
mov
rorb
pushf
in
inc
or
in
sbb
push
ret
and
shl
lock
mov
jecxz
mov
and
hlt
mov
push
lcall
pop
rcl
sbb
test
pop
mov
lahf
mov
jo
inc
pop
sti
cmp
mov
mov
dec
mov
jno
lahf
or
adc
test
loopne
rolb
dec
push
add
dec
in
pop
xchg
sub
les
sti
dec
push
stos
popa
lea
test
aaa
pop
mov
sub
popf
mov
mov
scas
mov
sub
hlt
and
ret
push
mov
and
mov
pop
lahf
push
add
push
mov
cmp
or
mov
pusha
add
lods
sub
jl
jno
jnp
clc
jno
mov
fisubs
pop
mov
stos
jo
push
mov
push
cwtl
push
inc
mov
mov
sub
mov
das
and
pop
pop
dec
cmp
dec
jp
or
enter
xor
scas
mov
notl
fcmovu
aad
in
jmp
dec
jno
mov
push
push
xchg
pop
gs
xchg
sbb
dec
dec
imul
push
test
lahf
jg
ret
fsubp
sbb
es
pop
sarb
and
mov
lahf
jns
shl
cmp
push
fisubl
inc
sbb
cwtl
xlat
jg
mov
or
or
inc
mov
or
mov
inc
ret
aaa
push
jmp
icebp
shlb
push
push
dec
les
pop
push
lret
ss
sahf
popf
mov
xlat
fxch
sbb
mov
dec
sub
or
decb
pop
stos
mov
xchg
jecxz
push
fwait
addr16
fucomip
in
mov
rcrb
mov
je
push
bound
jo
jae
aad
fdivrl
lds
nop
leave
or
ficoms
cmpsl
outsl
leave
cli
jl
pusha
insl
cmpsb
test
loope
enter
mov
out
mov
ljmp
les
xchg
mov
out
pusha
jmp
mov
call
jns
mov
repz
mov
pushf
add
clc
lret
lods
mov
sub
pop
sub
cmpl
repz
cmpsb
mov
mov
shl
ret
imull
jno
movsl
icebp
pushf
fwait
jo
xchg
fmull
sub
lahf
loopne
lahf
fimull
lahf
cs
test
xchg
cmc
stos
dec
ja
or
push
scas
push
sbb
gs
lods
dec
pop
xchg
xchg
ljmp
js
insl
ljmp
adc
pop
xchg
pop
stc
inc
inc
test
lret
idiv
mov
fisubrs
push
push
dec
mov
loope
adc
jo
fcomps
neg
mov
xor
xor
mov
imul
and
mov
inc
add
lods
divb
jb
push
scas
xor
dec
xchg
out
mov
dec
add
out
mov
and
iret
mov
insl
repz
pop
rcr
ds
mov
fsub
ja
loopne
mov
mov
or
xchg
shlb
scas
hlt
lcall
in
lods
test
pushf
cmp
jnp
cmp
add
out
hlt
inc
add
cli
or
lds
pushf
sub
and
sub
sarl
rcl
mov
insl
orl
sbb
push
adc
lods
xchg
xor
ret
sbb
test
mov
cmp
outsb
test
cltd
jp
andb
fadds
push
dec
out
out
test
sbb
testl
sarl
sub
push
push
call
mov
imul
pop
ja
pop
jg
rcrb
sub
daa
jge
out
hlt
mov
add
popf
cmp
bound
jecxz
jae
test
sti
adc
mov
or
mov
mov
and
fidivrl
push
clc
mov
add
loop
mov
push
jnp
repnz
cs
subb
jl
pop
in
sarb
jge
lret
lock
sub
cwtl
dec
cmp
repnz
jl
popa
insb
push
movb
xchg
sbb
loope
and
rcll
jae
pop
ja
xor
xchg
jecxz
add
imul
loopne
cmp
jle
orb
xchg
nop
in
aas
add
and
aad
and
popa
cmp
pop
mov
outsl
lahf
das
add
lahf
inc
sub
xchg
push
jmp
and
sbb
push
mov
mov
aaa
adc
jmp
pop
cld
jp
or
xor
cmp
pop
ss
addb
mov
rcll
mov
ja
pop
xor
mov
dec
call
shl
pop
jae
insb
mov
cltd
cwtl
or
cmp
dec
push
mov
lahf
mov
jecxz
sub
mov
or
lcall
call
jmp
je
insb
push
or
ret
js
mov
and
cmp
mov
xchg
jb,pt
or
xchg
shlb
add
fincstp
dec
mov
stos
int3
xor
sbb
inc
sub
push
add
popl
loop
xchg
lock
sub
gs
adc
or
repnz
sbb
pushf
jns
ja
outsl
and
and
and
test
js
faddl
xchg
out
bound
push
add
daa
pusha
les
pop
sti
shlb
dec
mov
mov
pop
mov
imul
jns
call
dec
mov
or
ja
loop
aas
pushf
out
js
in
loop
mov
les
mov
dec
mov
negl
insb
lahf
std
popf
cmc
jae
ja
xor
faddl
sub
cmp
bound
jo
xchg
pop
cmp
dec
mov
data16
mov
fstpt
rcr
lds
dec
mov
mov
dec
lahf
dec
inc
dec
gs
popf
xchg
jge
je
mov
xor
pop
jecxz
addr16
jmp
in
add
add
imul
sahf
or
cmc
int
movsl
data16
arpl
jl
push
cli
out
cmc
sbb
mov
fidivrs
fisubrs
aad
push
rcrl
xor
aad
mov
fldcw
in
lret
add
iret
dec
cmp
aas
fists
mov
mov
xchg
ds
add
cmp
xor
rcll
push
or
aam
adc
out
push
js
cmpsb
lcall
add
mov
cmp
aam
pusha
adc
mov
aad
outsb
lea
clc
pop
repz
or
mul
in
or
mov
aas
loop
fstpt
inc
mov
dec
sub
mov
lods
aad
loop
aad
popf
daa
hlt
sbb
jno
movsl
inc
stos
jnp
jg
jmp
dec
mov
mov
movsb
fdivp
scas
jmp
mov
dec
cmp
cmpl
pop
lcall
imul
fisubrs
dec
cmp
xchg
out
je
sub
stos
push
xor
jne
xchg
or
add
add
js
pop
dec
and
stc
mov
mov
and
insb
push
out
int3
sbb
xchg
dec
sarl
xchg
cmp
test
dec
lret
lret
lret
jb
addl
cmpsl
fistpl
fst
and
sub
xchg
icebp
push
adc
insb
or
mov
sub
arpl
lock
push
das
inc
jge
mov
bswap
push
fwait
dec
je
nop
mov
pop
cmpsb
and
jecxz
jb
mov
cmp
mov
clc
dec
push
rcll
data16
imul
and
insb
scas
push
incb
xor
mov
sub
inc
push
shrl
popf
inc
mov
in
lcall
pop
nop
das
outsb
sub
cmpsl
lret
outsb
cmp
orl
cmp
outsl
pusha
pop
inc
mov
ja
cmpsb
popa
push
mov
cli
notb
push
jne
ja
cmp
inc
dec
stos
xchg
gs
or
jnp
and
dec
test
push
pop
or
inc
mov
pop
lret
std
shlb
ljmp
aas
xor
clc
push
mov
dec
mov
lock
out
jbe
cmp
lcall
sbb
js
dec
ljmp
cld
nop
dec
pop
data16
cmp
mov
test
push
hlt
pop
sbb
ret
add
fdivl
daa
push
out
cmp
stos
in
mov
in
mov
fwait
into
or
xor
push
lods
je
out
fisttpl
aad
movsb
adc
xor
std
in
push
mov
ja
or
jbe
rcrl
add
jnp
or
pop
aaa
out
mov
mov
cs
mov
fists
xchg
inc
sub
adc
dec
and
loop
jecxz
clc
lret
inc
outsl
test
mov
fmuls
outsb
pop
mov
test
or
push
and
and
adc
jg
inc
xchg
push
cmpsl
shll
mov
lock
shlb
cltd
aad
scas
mov
scas
aaa
orl
push
das
fucomip
add
mov
or
je
dec
stc
dec
outsl
cmp
adc
sbb
push
jns
mov
xor
and
xor
inc
pop
pop
xor
in
mov
push
mov
add
sub
incb
arpl
cmp
out
in
fdivrp
inc
idiv
adc
lds
cmp
add
fstps
jp
push
dec
outsl
dec
add
cmp
lds
dec
add
sub
daa
xchg
inc
jns
adc
xchg
std
sub
push
neg
loopne
jmp
imul
rcrl
cltd
adc
add
cs
mov
xor
jp
enter
gs
cmp
push
in
test
push
ret
mov
sbb
mov
clc
cmp
loop
ljmp
int3
or
push
imul
sbb
shll
mov
sub
ret
lods
leave
ret
stos
scas
insb
add
scas
lods
sbb
jno
dec
dec
dec
or
dec
xchg
pushf
into
xchg
add
leave
sti
push
aas
in
jno
inc
stc
es
dec
cli
setnp
add
sub
enter
sbb
xchg
pusha
pop
dec
xchg
inc
lcallw
aam
add
les
arpl
fnstcw
sub
sbb
xchg
stos
lods
sub
jp
jae
push
stos
stos
fwait
pop
mull
es
les
sbb
push
xchg
push
mov
into
sbb
in
imull
jno
adc
push
xchg
xor
test
adc
cs
xchg
leave
dec
ret
pop
dec
jp
push
and
push
mov
dec
aad
out
xor
jb
icebp
mov
jnp
inc
mov
mov
pop
popa
call
jae
jge
insb
loopne
push
pop
cmp
mov
faddl
cwtl
pop
mov
inc
jecxz
pop
push
xchg
xchg
mov
imul
or
and
xor
jb
lret
or
adc
leave
sbb
sbb
dec
call
mov
pop
cmc
xchg
add
cmpsl
cmp
and
pop
fisubrs
adc
mov
adc
test
icebp
outsl
fidivl
xchg
in
rorb
cli
sub
lods
pop
xchg
vmwrite
bnd
inc
mull
mov
shl
fcmovne
mov
cwtl
shll
leave
movsl
loope
es
mov
outsb
in
sub
in
mov
mov
out
push
and
mov
jae
mov
push
pop
push
push
ret
lcall
mov
xchg
adc
adc
daa
std
and
sub
xchg
mov
jb
pop
mov
push
push
out
ja
xchg
stos
in
xlat
push
stos
call
ret
lahf
xorb
icebp
fwait
mov
ficomps
out
dec
mov
bound
jae
ss
mov
outsb
sbb
add
add
imul
es
mov
sbb
sub
or
test
mov
push
xor
mov
cltd
jo,pn
mov
dec
or
jp
push
xor
loopne
clc
enter
in
cmp
mov
addr16
fcmovnbe
xchg
out
lret
stc
sub
es
cmp
jns
sahf
dec
enter
movsb
stc
in
lds
test
mov
cmp
mov
sbb
jae
inc
mov
rorl
and
mov
jmp
jne
test
xchg
lret
lcall
pop
inc
mov
mov
sub
sbb
jne
shrl
mov
shll
mov
jne
jg
gs
lock
or
out
and
push
lods
fnsave
xor
push
dec
xchg
fwait
pop
adc
adc
pop
lahf
das
pop
in
scas
clc
lret
jg
cmp
loope
sbb
jle
xor
lods
scas
out
pop
inc
mov
pushf
ljmp
bound
cmpsb
inc
mov
loop
mov
shl
dec
pop
fadds
cmc
xor
jl
sub
push
xor
pop
adc
xor
insb
cmc
test
push
or
in
lds
push
loopne
sti
int
leave
dec
jo
sbb
adc
pushl
or
jbe
sar
mov
test
push
negb
sub
in
add
cmp
xor
lahf
xchg
mov
xor
push
mov
ror
mov
lods
out
pop
lock
cmc
pop
nop
adc
add
imul
mov
dec
fsubs
xor
jecxz
cmp
ds
in
pop
adc
jle
cmp
pop
imul
xchg
into
scas
push
je
mov
xchg
loopne
fsubl
cmpsl
test
test
jae
mov
or
shr
in
mov
stc
push
loope
add
push
movl
jecxz
inc
jnp
stos
iret
aaa
inc
loope
pop
inc
test
out
xchg
mov
mov
add
test
cmp
inc
fwait
jne
jno
aam
outsl
ds
bound
jecxz
xlat
test
cmp
decb
and
inc
rcrb
dec
lods
pop
mov
imul
adc
pop
inc
lahf
aad
nop
nop
insb
adc
je
addl
pop
lods
stos
add
fsubp
cmp
and
pop
scas
lock
ret
insl
outsl
inc
movsb
sub
jmp
mov
jnp
fdivs
mov
popa
mov
jp
pop
jl
cmp
cld
js
xchg
dec
xchg
jl
add
js
sub
lret
leave
in
push
adc
icebp
call
ljmp
xor
pop
std
push
sbb
jmp
sti
add
mov
jnp
inc
aaa
fs
ret
pop
aaa
insl
add
mov
lahf
jae
in
nop
and
sbbl
inc
xchg
xor
pusha
mov
imul
aas
call
pusha
or
imul
adc
and
mov
dec
out
je
adc
add
push
bound
xchg
xor
sbb
mov
sub
lcall
add
in
gs
mov
sbb
push
xchg
add
xor
fnstsw
nop
mov
mov
outsb
imul
jecxz
xor
int3
push
stc
popa
sbb
icebp
jl
ret
cmpb
call
sahf
ljmp
xchg
adc
pop
arpl
jne
inc
cmp
pop
and
icebp
call
push
mov
cvttps2pi
clc
fisttpl
imul
fnstcw
cmp
xlat
leave
faddl
xor
add
fsts
pushf
iret
sahf
lea
xchg
mov
cld
sti
or
arpl
mov
lcall
cmpsl
and
jmp
cwtl
xor
cli
push
loopne
scas
inc
addr16
adc
cmpsb
xor
repz
stc
cwtl
cli
arpl
leave
jbe
cmp
add
call
dec
xlat
or
or
call
cmp
testl
and
cmp
dec
fdivrl
stos
dec
jp
out
pop
outsb
xchg
push
push
sub
push
cmc
and
loop
xor
xor
fnsave
aas
daa
cli
or
mov
push
sbb
jle
add
pop
jae
lret
or
push
insl
adc
push
push
lock
mov
cmpsl
sub
jae
sbb
push
scas
cltd
call
sub
repz
inc
rorl
xchg
pop
push
jb
dec
jmp
inc
inc
jbe
mov
lret
mov
aas
cld
fs
mov
or
aam
mov
imul
or
stos
add
mov
xchg
jbe
push
mov
cli
fdivrs
mov
pop
inc
cmpsl
cwtl
pop
inc
xchg
ret
ss
cmp
into
mov
stc
int3
inc
dec
fwait
fwait
in
and
fimuls
cli
jbe
or
insb
ret
or
int3
insb
out
fnstenv
cltd
insl
ffreep
lret
outsl
subb
rorb
addr16
fadds
mov
cld
pop
lods
dec
in
xor
pop
lods
lahf
clc
in
gs
fs
ss
fwait
and
add
loopne
out
sti
std
lret
lret
jno
movsl
cmp
enter
ret
sbb
outsl
jae
mov
mov
and
pop
sbb
cmp
das
cs
fsubrs
sar
mov
ffreep
hlt
xchg
fsubr
xor
arpl
popf
or
mov
push
daa
inc
cmpsb
and
movsl
ret
cli
jg
icebp
push
or
aam
and
jp
inc
insl
enter
bound
test
dec
pop
jne
les
jg
clc
sahf
js
popf
ja
inc
mov
int
cmc
out
push
xor
jo
pusha
shlb
ds
or
push
outsb
jbe
test
adc
stos
into
cmp
arpl
jecxz
add
std
std
fsubrp
sbb
shr
xchg
aad
pop
int
inc
mov
and
mov
cmp
out
faddl
mov
fdivr
sbb
cmp
pop
sbb
lds
add
push
push
fwait
testl
dec
push
mov
and
inc
fsubs
sbb
or
add
push
dec
sub
loopne
adc
cmpb
cmp
add
cmp
jnp
cmp
push
movsb
insl
mov
cmc
rcll
lea
jle
int3
mov
aam
sub
out
fs
inc
cmp
cmpsb
outsb
sbb
ret
pop
mov
sbb
adc
pop
adc
mov
gs
insb
sbb
push
popf
ror
mov
mov
sbb
mov
and
pop
pop
inc
xchg
gs
inc
or
dec
xchg
sbb
je
inc
adc
ret
ss
mov
and
stos
mov
pop
test
lock
dec
pop
hlt
into
pusha
mov
subl
cmp
mov
sbb
insl
in
lods
mov
loope
add
xchg
adc
insl
or
fnsave
imul
push
mov
pop
pushf
pop
mov
ret
jns
lret
mov
fcoms
fcmovu
aam
dec
gs
nop
cmp
mov
jg
mov
sub
push
pop
push
pop
sub
sub
dec
das
sbbb
stos
stos
movsb
je
enter
popf
cmp
inc
mov
dec
imul
mov
mov
flds
jl
scas
add
outsl
push
xchg
dec
xchg
addb
and
insb
cwtl
jge
xlat
ret
mov
jbe
add
sbb
stos
sub
lahf
mov
mov
ljmp
dec
add
cwtl
clc
push
cmc
jle
lds
inc
mov
pop
shlb
adcl
ljmp
cltd
js
sub
jns
add
ret
pop
jb
mov
mov
push
adc
push
rcrb
xchg
sarl
popa
mov
stos
fs
mov
cld
cmp
daa
pop
push
stos
adc
out
cltd
hlt
and
mov
leave
popf
mov
jnp
enter
ret
imul
mov
call
mov
mov
pop
adc
into
insb
je
movsb
mov
jno
xor
lods
ret
mov
adc
xor
ss
imul
add
lods
testl
icebp
sbb
push
push
inc
or
pop
sub
add
test
int3
in
icebp
mov
push
sub
mov
or
jbe
add
lods
cmpsb
stos
dec
bound
mov
pop
out
add
outsl
incb
fnstcw
jmp
mov
mov
cld
aam
push
divl
aaa
shrb
ret
push
daa
xor
jle
insl
cli
mov
shrl
or
pop
std
hlt
into
in
dec
dec
jge
push
fwait
stos
push
dec
test
pusha
add
lods
daa
jo
inc
mov
sbb
cmp
mov
cmc
xchg
lock
xchg
xchg
test
sbb
pop
arpl
push
fistpll
das
pop
rcl
loopne
cltd
adc
js
jne
push
outsb
inc
cld
mov
pop
hlt
repz
js
mov
fdivrs
loopne
pop
fdivr
ret
jo
adc
les
outsb
xlat
cwtl
xor
ds
sbb
mov
inc
std
mov
in
out
cmp
repz
mov
push
stos
lods
cli
pop
loop
stos
jb
dec
and
mov
xchg
jo
jp
pop
dec
push
jg,pn
mov
jb
mov
cmp
push
pop
mov
clc
mov
outsb
lds
push
lcall
dec
popa
dec
jl
dec
pop
push
divl
lahf
loopne
sbb
cltd
mov
fstpt
jmp
fsts
std
daa
mov
xor
int
mov
ret
call
add
pop
dec
sbb
mov
xchg
pop
inc
sahf
add
xor
aad
dec
pop
sbb
mov
lock
and
es
push
sar
sub
stos
sbb
xchg
test
jae
or
xor
xlat
xchg
test
add
repnz
cmpsb
mov
cmpsb
pop
daa
fs
cltd
test
mov
pop
cld
sbb
test
rcrl
jmp
add
xchg
xor
pop
and
repnz
arpl
ljmp
iret
shll
push
lods
push
mov
fbld
mov
ljmp
out
outsb
stos
subb
or
sub
sub
mov
xchg
xchg
dec
push
fisttpll
push
repnz
jo
add
and
lea
dec
shrb
mov
or
dec
pop
sbb
ret
inc
shl
movsl
into
jne
pop
cmp
aas
adc
scas
sahf
ret
inc
jb
pushf
dec
fisubrs
test
mov
cmpsl
jmp
pusha
sbb
cmpsb
scas
mov
cmpsb
loope
dec
xor
out
sbb
leave
test
mov
subps
sbb
cmpb
popf
push
jg
cmpsl
dec
stc
sub
push
add
das
push
jno
or
add
lahf
mov
outsb
inc
cmpsb
pushf
xor
in
or
add
fucomp
mov
sub
sbb
xchg
lea
fisttpll
sbb
jno
adc
fidivrl
aad
sahf
loope
dec
cmc
mov
mov
or
lods
jg
ja
bound
dec
clc
and
scas
jno
mov
inc
test
lret
push
cmp
jecxz
adc
xor
jno
sbb
pop
xorl
push
jge
imul
jmp
ljmp
cmc
xchg
push
repnz
xchg
out
ljmp
je
mov
inc
jmp
xor
lock
mov
mov
and
sbb
fldl
test
push
mov
rsm
push
mov
sbb
imul
shll
push
movsb
jnp
pop
mov
rcll
push
andb
and
mov
movsb
mov
mov
add
movsl
inc
sub
cmp
neg
mov
push
jle
push
cli
out
aam
xor
pop
iret
mov
mov
loopne
push
ja
jle
divb
insl
shll
xchg
orl
pop
or
xor
inc
ret
cmp
xor
dec
jnp
mov
sub
sbb
inc
dec
faddl
loop
xchg
bswap
xchg
flds
or
or
cwtl
mov
cmp
push
pop
cmp
fs
mov
jecxz
lds
xchg
shll
and
lret
jle
inc
mov
in
inc
cmp
data16
push
in
add
mov
decl
popf
cmc
clc
lret
scas
or
mov
ret
ret
or
aam
stc
and
sub
sub
arpl
fisubrs
loop
pop
jle
add
mov
aad
cmp
addr16
xchg
xchg
xchg
cmpsb
adc
jl
sbb
stc
pop
adc
xchg
adc
jg
loopne
dec
or
xchg
insl
subb
sarb
mov
push
movsb
jnp
in
mov
imul
arpl
lahf
sbb
jno
dec
pop
jns
or
lea
out
lcall
dec
fimuls
pop
in
jmp
jne
xchg
and
cmp
dec
push
cwtl
adc
mov
pushf
push
fstpt
xor
cmpsl
xchg
inc
xchg
xor
mov
ljmp
mov
sub
dec
sub
xor
aaa
cltd
xor
sbb
or
sbb
mull
out
push
gs
cmpsb
insb
cmp
xor
mov
cwtl
push
icebp
sbbb
into
mov
insb
jecxz
fisubs
xchg
sub
fsubrl
adc
cmp
cmp
adc
xchg
sub
add
xchg
dec
jae
jno
movsl
subb
or
jne
les
cltd
xchg
jge
outsl
cli
jne
pop
jb
cmpsl
ja
mov
cmc
pop
adc
dec
xchg
mov
icebp
lods
fistps
fxch
inc
cltd
jmp
btr
push
cmp
lods
mov
mov
add
sub
inc
mov
mov
ret
pop
loop
shll
lret
sbb
pop
adc
mov
jg
fdivrp
mov
adc
scas
stos
xor
cmpsl
pop
xor
sbbb
ret
jne
sbb
xchg
sbb
push
hlt
arpl
repz
mov
mov
dec
sahf
fsubs
xlat
cld
pop
or
lcall
adc
sbb
push
stos
lods
stos
scas
into
adcl
arpl
dec
filds
dec
jg
inc
mov
ficompl
dec
pop
repz
loop
andb
dec
nop
arpl
bound
mov
jg
stos
pop
sbb
ss
addr16
pop
aad
lret
lods
in
or
dec
cmpsb
ja
mov
sbb
dec
in
add
lods
lret
dec
in
stc
in
testl
out
insl
leave
push
shr
std
int3
or
ret
shlb
scas
xchg
dec
push
xchg
add
imul
or
add
adc
mov
pop
mov
xor
or
sbbb
inc
push
lods
fisubs
sti
lahf
je
rcr
mov
sti
xor
repnz
call
jbe
daa
enter
mov
mov
out
jge
sub
jo
xchg
sahf
ds
xor
xor
cmp
xor
adc
fcmove
fnstsw
dec
jl
sbb
adc
gs
into
ret
push
in
dec
subb
out
add
adc
push
popa
ret
push
aad
into
mov
bswap
imul
repz
mov
xchg
fbld
cmpsb
pop
sub
push
and
cmp
sub
nop
sub
mov
pusha
das
xchg
daa
les
push
xchg
xchg
push
sbb
or
lret
mov
sub
mov
jae
fcoms
lret
in
push
xchg
stos
in
push
jmp
or
fwait
out
sbb
xor
in
jge
push
cmpsl
outsl
push
mov
xchg
sub
add
or
aas
imul
pop
fcomps
js
sbb
cmp
pop
repnz
mov
adc
cwtl
lret
sub
pushf
xchg
mov
pop
cmc
test
or
std
dec
out
sub
aas
icebp
xor
dec
pop
inc
pop
cmp
xor
ficomps
xor
stc
jb
jle
je
mov
sub
dec
push
loope
cli
test
cmp
loopne
xor
pop
sub
in
cli
mov
dec
shlb
pop
jp
lahf
sub
or
ret
and
addr16
ljmp
inc
jb
dec
push
aam
mov
mov
imul
jne
jmp
icebp
mov
mov
mov
rolb
jge
add
bound
loop
int3
sbb
mov
jg
test
inc
les
pop
subb
jnp
stos
push
dec
or
cwtl
or
shlb
int
add
in
sub
lods
xchg
iret
push
lds
popf
lea
pop
mov
push
jb
mov
add
push
xor
xchg
popa
mov
push
jmp
test
and
insb
inc
xchg
sub
loope
jle
cli
stc
lds
adc
mov
add
mov
pop
stos
fcompl
xchg
and
mov
push
test
jo
pop
pop
xchg
fwait
xchg
or
mov
daa
lds
fbld
push
js
mov
mov
jnp
mov
mov
cld
stos
sbb
cmp
lods
jo
sti
push
sbb
cmp
and
and
lods
add
popf
jno
dec
mov
lock
cld
lds
adc
fs
aad
push
pop
scas
cmp
xchg
scas
in
nop
push
xchg
mov
cvtps2pd
loopne
or
ds
movsl
push
xor
sub
arpl
lahf
push
loopne
push
int
jecxz
cmpsb
mov
push
std
cmc
rolb
xchg
les
add
mov
flds
and
sub
and
xor
aam
mov
jo
icebp
test
and
jmp
and
mov
dec
rorl
jae
ja
pop
loop
xchg
call
add
push
sbb
sbb
in
dec
dec
frstor
xchg
inc
xchg
cmp
mov
push
xchg
cli
psubsb
xchg
push
mov
jg
leave
rcll
rorl
cmpsl
shrb
mov
inc
popa
loope
je
ja
rolb
stos
jmp
into
jge
or
loopne
mov
jle
dec
clc
movsl
test
cmc
ljmp
sti
ret
stc
test
sub
dec
add
mov
call
jp
test
fnsave
cmp
addr16
add
stc
in
pop
imul
je
rcrl
stc
pop
add
jmp
cmp
sub
arpl
popa
mov
fisubrl
and
dec
fndisi(8087
xchg
lret
xchg
mov
sub
in
cmp
nop
push
dec
add
callw
and
je
jmp
jno
add
inc
test
cmp
jne
adc
clc
js
ja
fnstsw
es
xor
ss
arpl
rcl
mov
cltd
pop
mov
cmc
ficoml
rolb
push
push
lock
adc
cld
arpl
jg
cwtl
pop
mov
nop
adc
sarl
arpl
std
pop
pop
cmpsl
sbbl
imul
lock
mov
xchg
mov
call
adc
cli
adc
sahf
xor
cmp
jns
pop
pop
mov
mov
repz
gs
dec
notl
jmp
cmp
ret
or
inc
mov
cmc
test
pop
bound
xchg
lret
dec
addr16
push
lods
addl
sbb
and
arpl
mov
mov
mov
mov
pop
ljmp
mov
lahf
or
mov
pop
lret
add
lods
cmpsb
mov
mov
cmp
test
mov
dec
mov
jmp
push
xchg
shrb
outsb
aaa
loop
dec
call
movd
push
xor
cmp
outsw
and
outsl
mov
adc
aaa
scas
add
sub
push
in
js
push
or
rorl
add
or
outsl
aaa
push
adc
xchg
mov
lret
cmc
int
jno
mov
adc
out
jg
stos
inc
mov
divl
popl
sti
es
cwtl
or
repnz
rorb
lcall
add
jge
sbb
ss
inc
fcmove
jo
xor
and
xchg
imul
push
lret
ficompl
jp
ficoms
pop
jge
inc
lea
cmpsl
lret
mov
mov
xor
xchg
xor
outsl
xor
or
adc
mov
scas
mov
fidivs
in
fdivr
sub
push
inc
pop
hlt
dec
mov
imull
xchg
push
push
outsb
repnz
frstor
rolb
push
pop
and
add
ret
daa
decb
xchg
cmpsl
inc
movsl
lods
pop
into
pusha
fisttpl
sbb
aad
loop
gs
int3
sar
sti
adc
ds
xor
add
push
out
pop
and
test
pop
add
adc
dec
insb
mov
jb
pop
stos
lahf
aas
data16
ljmp
fstl
mov
outsl
test
repz
je
loopne
repz
out
lock
sbb
mov
add
bound
scas
mov
je
mov
repnz
icebp
sahf
jb
je
push
push
in
out
lock
les
dec
cmpsl
fnstenv
sbb
ret
inc
mov
lret
xor
not
leave
rorl
fwait
mul
fdivrs
lret
call
mov
jns
addr16
js
mov
xor
sub
fnstsw
push
mov
push
xchg
not
cmp
lods
cmp
cmpsb
mov
scas
fs
mov
xchg
sub
int
fistpll
or
fcomp
int3
rclb
mov
in
aam
lods
push
adc
js
es
leave
jns,pn
jl
jbe
and
xor
lcall
adc
ret
popf
inc
scas
adc
pop
movsb
arpl
xchg
call
les
jo
xchg
add
mov
xchg
inc
xchg
cmp
push
ffreep
lret
mov
repz
push
pop
imul
cld
sub
adc
leave
test
inc
add
mov
out
cwtl
hlt
out
data16
dec
dec
xchg
xor
dec
out
dec
and
mov
cmp
sub
inc
adc
cli
repnz
negl
fisubl
pop
push
jl
cmp
jg
das
sbbb
mov
jbe
cmp
xor
sub
vmcall
sbb
sbb
or
mov
dec
push
mov
mov
jb
lds
adc
jae
clc
push
xchg
sbb
fisubs
inc
ljmp
sub
lcall
pop
js
add
nop
xchg
and
in
inc
ret
ja
mov
jbe
fcmove
xor
mulb
cmp
mov
mov
xorb
push
add
sub
and
popl
jp
cmp
add
pop
xchg
fisttpll
pop
push
shr
jp
daa
in
loop
cmc
add
imul
sbb
push
xor
loopne
out
mov
ret
scas
mov
add
paddsb
fstpt
or
adcl
xchg
mov
aaa
cmp
mov
loop
rcll
fprem
es
outsl
adc
push
hlt
or
xchg
jmp
cmp
addr16
enter
fisttpll
iret
lds
jge
and
dec
jo
es
pop
lea
les
mov
js
in
repz
sub
insl
and
jo
testb
push
jnp
mov
cltd
inc
pop
sti
aaa
testl
lret
repnz
push
pcmpeqd
push
jo
push
push
mov
inc
pop
insl
subl
and
fcoms
jg
jb
das
jae
adc
mov
add
and
mov
dec
test
sbbb
jb
lret
cmp
mov
dec
and
ljmp
icebp
int3
inc
sbb
lret
pop
jo
shll
push
imul
inc
xchg
out
pop
mov
xor
jecxz
push
loop
or
pop
js
xor
daa
jb
jns
out
pop
je
cmp
dec
lds
into
sbb
leave
jb
aaa
xchg
mov
cli
sbb
or
bound
flds
inc
mov
mov
sub
xchg
inc
add
pop
jecxz
mov
fisubrl
fs
outsb
lret
lods
sbb
lcall
jae
repnz
fsubs
sbb
aam
or
push
jl
mov
pushf
xchg
mov
stc
sub
and
in
call
pop
int3
js
dec
xor
test
xchg
xchg
int3
rol
movsl
int
jne
addr16
xchg
add
pop
leave
rorl
out
outsb
jecxz
cwtl
stos
ret
push
pop
mov
sti
loop
cmc
aas
ja
xlat
dec
inc
mov
xchg
fsubrs
js
xchg
add
into
xchg
and
adc
repnz
add
lods
hlt
call
mov
movzbl
in
mov
mov
fdivrl
push
sarb
xlat
sub
or
fimuls
test
in
sub
and
push
scas
popf
push
lret
push
shll
sti
mov
lods
hlt
push
cmpsl
fbld
in
imul
mov
cmp
or
inc
cmpsb
xor
cmpsl
xor
adc
dec
adc
cmp
mov
cld
ret
in
rcrl
xchg
xchg
test
and
cmpsb
sti
dec
dec
test
cld
fidivrl
ret
in
or
jo
jo
sub
lea
leave
push
inc
xchg
mov
lret
test
aad
inc
sahf
add
aaa
jge
addl
sub
push
cmp
mov
cwtl
mov
outsl
outsl
mov
test
mov
je
es
jne
xchg
and
int
cli
pop
movsb
lea
ja
mov
lret
lret
stos
je
sbb
push
xchg
ja
pusha
sub
cmp
push
std
adc
add
ljmp
mov
mov
add
jl
arpl
pop
outsb
sub
mov
sub
cwtl
add
stos
mov
addl
xor
mov
pop
aad
cwtl
imul
adc
jae
scas
dec
repz
cmpl
cld
and
jp
adc
pop
iret
shlb
add
mov
or
ss
repz
jecxz
mov
adc
or
sub
sbb
sbbb
shll
jns
das
popa
int3
cmp
scas
push
int
and
and
and
adcb
jb
data16
repnz
add
jb
push
lret
sahf
and
flds
std
cmp
insl
into
cmpsb
mov
xchg
or
jb
jle
inc
xlat
aam
cmpsl
movsl
cmp
test
dec
cmp
lcall
ret
popa
inc
aad
add
arpl
pop
pop
dec
pop
daa
orl
mov
or
in
clc
xchg
lods
dec
cli
adcl
jae
cli
sbb
hlt
aad
inc
add
pop
jle
ja,pt
jmp
xchg
rorl
mov
sarb
mov
push
inc
idivl
sub
mov
std
lahf
shlb
cmp
int
pop
pop
arpl
add
or
jnp
inc
xchg
push
int3
mov
lcall
mov
sub
das
stos
push
mov
and
push
arpl
repnz
pop
stos
fcompl
testb
xor
jp
aas
xlat
test
dec
in
cmpsl
cmpsb
jbe
inc
bound
roll
dec
mov
nop
gs
adc
inc
or
loope
mov
push
adc
xor
ret
lret
sub
aaa
xor
pushf
mov
cs
call
ret
sbb
clc
ret
cmp
xchg
cmp
pop
fnsave
shl
sbb
cmp
adc
or
pop
push
adc
addr16
pop
xchg
jo
dec
push
dec
in
into
push
dec
call
mov
and
sub
sbb
xor
pop
cmp
or
push
and
add
shlb
out
testb
fcmovbe
das
into
and
mov
sub
dec
mov
ljmp
cld
imul
ja
xchg
cmp
xor
pop
xor
repz
shlb
out
cmc
scas
cmp
iret
out
iret
ss
test
test
lods
pushf
xchg
inc
jae
push
scas
insb
add
mov
pop
adc
in
jge
pop
mov
or
sahf
inc
or
fbstp
aam
lret
push
add
in
mov
into
push
cltd
xor
inc
fs
mov
mov
push
jg
inc
dec
mov
pushf
lds
stc
lret
dec
cltd
je
test
sbb
fcoml
xchg
cmp
or
jnp
jge
lods
adc
lods
push
pop
or
cwtl
lcall
into
push
jnp
push
negl
lret
stos
and
or
pop
sub
dec
fidivrs
sub
roll
adc
sbb
fwait
mov
xchg
push
in
loopne
fdiv
imul
sahf
cld
fxch
call
out
push
mov
lock
jbe
fwait
pushw
popa
add
rorl
jecxz
mov
add
enter
mov
mov
jg
xor
mov
push
mov
test
sbb
adc
das
push
shrb
sbb
in
cmp
fadds
mov
scas
into
sbbl
in
sar
sbb
in
jbe
jns
adc
std
pushf
jae
mov
fstpt
je
enter
int
push
jae
fs
rcl
decb
pop
js
mov
sbbl
or
inc
out
dec
mov
mov
jb
negb
fisubrl
add
imul
pop
xor
in
adc
cmp
scas
imul
pop
bnd
push
int3
pop
sub
inc
pop
stos
mov
xlat
xchg
pop
testb
mov
std
test
dec
pop
xor
pop
test
out
outsb
and
out
pushf
arpl
sub
mov
jo
and
mov
push
sbb
std
push
insl
sar
cmp
outsl
jmp
inc
sub
call
mov
mov
or
xor
sbb
jne
cmovne
sahf
mov
xchg
iret
mov
and
loope
pushf
xchg
inc
add
sahf
sub
xchg
mov
dec
fdivrl
push
lahf
ljmp
mov
repz
shlb
mov
xchg
cmp
cmp
lods
orb
xorl
cltd
aaa
cmc
xor
jns
lds
mov
mov
sub
popa
push
xchg
pop
push
xchg
add
loopne
mov
aas
not
mov
das
push
popa
jmp
fsubr
push
mov
insb
pop
push
lret
cmc
sub
rclb
sub
xor
mov
push
fwait
pop
movsb
sbb
int
mov
stos
out
insl
orl
pop
stc
fs
das
sub
pop
imul
jo
in
es
xchg
test
jb
lcall
jo
mov
out
jns
xor
sahf
inc
lahf
in
aaa
pop
xchg
dec
and
dec
and
sub
inc
pop
push
imul
in
push
popf
jg
push
inc
jl
lods
in
cld
popa
inc
inc
jb
out
jle
mov
pop
or
popa
jns
push
pushf
ss
jo
sbb
f2xm1
pop
mov
jl
ss
ds
cltd
mov
out
xorl
dec
dec
gs
mov
loop
aam
idiv
xor
jb
pusha
stc
sti
dec
lahf
arpl
rcll
push
xor
js
fidivrs
shr
cmc
mov
or
pop
mov
adc
iret
adc
scas
dec
call
push
out
int3
sbb
ret
scas
dec
sti
gs
xchg
sbb
sub
andl
sub
aam
stos
mov
pop
lahf
das
aam
orl
push
push
rcrb
pop
fildl
call
inc
sub
cld
cmpsl
rclb
inc
ja
pop
gs
out
push
jne
inc
sbb
adc
push
movsl
ficoms
shl
cld
cld
inc
sbb
fstpl
dec
lcall
stos
xor
outsb
scas
popl
or
mov
push
in
call
scas
add
or
jge
mov
dec
leave
popf
loop
mov
mov
mov
ds
cmp
xor
pop
stc
and
out
dec
mov
jmp
xchg
bsr
imul
loop
pushf
xchg
ja
test
adc
outsl
xor
mov
jbe
jno
insb
ret
dec
push
mov
jecxz
pop
test
std
or
ffreep
sub
fadds
sbb
scas
pop
mov
lcall
iret
mov
test
dec
out
cmp
lret
xor
shr
push
cltd
rcrl
mov
sbb
xlat
clc
in
scas
push
aad
jl
and
cs
sbb
enter
dec
imul
aad
cmp
or
loopne
ljmp
xor
imul
or
cld
push
cld
fwait
pop
push
or
in
and
pop
cmp
push
fistps
pop
js
push
mov
dec
rcr
push
sbb
scas
xchg
das
and
cli
in
out
mov
cmc
xor
xchg
dec
out
stos
ret
lds
enter
xor
pushf
push
call
movsl
mov
pop
dec
xchg
or
cld
or
fidivrs
int3
shrb
addr16
push
pop
mov
arpl
push
ljmp
cltd
outsl
lahf
cmpl
arpl
pusha
out
movsb
pop
mov
jae
pop
or
dec
and
mov
pop
mov
lea
ret
xchg
mov
add
pop
xchg
mov
lods
popl
out
sub
into
mov
jge
inc
xlat
test
aas
mov
fdivrs
loop
in
jmp
jb
push
cwtl
pop
mov
sub
lcall
xlat
addl
mov
test
dec
imull
dec
sti
jge
movlps
add
cmp
test
ja
into
loopne
jne
outsb
je
push
adc
and
roll
or
mov
rcl
ret
push
icebp
jle
mov
repnz
adc
adc
xor
fs
cmpsl
bound
call
fisttpl
push
dec
add
scas
push
repnz
repnz
cmpsb
jnp
dec
jp
cmc
pop
and
loop
dec
std
add
sbb
cmovns
adc
pop
mov
movsb
gs
jecxz
fsubr
aas
outsl
pop
adc
or
fisttps
popa
add
ja
push
jle
pop
je
repz
jecxz
movsl
pop
ret
lock
popf
arpl
test
push
jl
fiadds
cmpsb
push
mov
jo
sub
cmp
sub
dec
adc
in
stos
mov
pop
pop
js
in
mov
fwait
aam
mov
js
sahf
int3
mov
fists
into
sub
add
incl
pusha
or
into
xor
sub
mov
gs
pop
cmpl
ss
inc
cmp
gs
daa
sub
stc
mov
lods
scas
inc
or
popf
adc
pop
jl
scas
mov
repz
jnp
divb
in
mov
jo
dec
pop
mov
and
insl
rorl
ds
pusha
ljmp
xor
fs
aas
addb
aam
sbb
xchg
and
dec
add
mov
dec
xchg
sbb
sbb
xchg
inc
shll
lcall
add
stos
insl
pop
or
dec
mov
test
pop
xor
fdivrp
jg
mov
push
mov
pop
lock
push
inc
popa
repz
stc
inc
sub
mov
test
jnp
or
jo
and
xor
pop
ret
lock
sahf
jbe
lahf
bound
lret
xchg
outsb
cmp
fildll
in
cwtl
shll
push
sub
or
push
push
mov
clc
cli
test
xor
sbb
ds
add
sahf
sbb
mov
inc
aam
jno
lds
push
inc
out
mov
mov
mov
stos
push
into
mov
xchg
ss
aad
push
adc
pop
sarl
jl
shll
in
sub
cli
jb
addb
mov
mov
repnz
cs
mov
sub
lea
loop
adc
sbb
jns
mov
jb
xchg
inc
scas
xchg
mov
add
decb
cmp
pusha
pop
out
scas
pop
xor
mov
mov
rcll
mov
mov
adc
jge
jecxz
adc
lcall
sub
inc
je
out
sbb
jb
push
test
loopne
pop
movsb
sti
mov
sub
jnp
stos
mov
cmpsb
pop
mov
movsl
adc
cvtpi2ps
and
sbb
adc
cmp
mov
out
cmpsl
xchg
stos
mov
test
or
in
scas
iret
mov
rolb
pop
stc
push
adc
sahf
push
loopne
xchg
cmp
std
jg
xor
shl
hlt
call
mov
or
stos
rcl
mov
out
jb
dec
and
int3
fidivrl
andl
mov
cmp
fidivrl
xor
ficompl
dec
cltd
subl
mov
and
ja
outsb
stc
mov
jns
push
test
mov
arpl
mov
push
je
lret
jp
aaa
inc
mov
mov
jnp
or
in
adc
add
popa
movsl
mov
jmp
popa
test
ret
or
cmpsl
clc
clc
inc
xchg
lds
pmaddwd
inc
inc
lcall
flds
xchg
in
jmp
enter
pop
std
xor
or
aaa
add
insb
dec
dec
fs
or
lahf
rol
jns
rcrl
les
rcll
sub
mov
push
stc
cmp
fsub
inc
xchg
mov
mov
jo
daa
add
fnstenv
iret
or
adc
fstpl
cltd
icebp
mov
outsl
mov
sub
push
cmc
outsl
stc
xlat
pop
mov
push
xchg
and
in
popf
push
mov
xchg
fdivr
popa
in
jnp
push
out
sub
cmp
jge
in
imul
cmp
dec
mov
adc
pop
scas
mov
push
scas
aaa
mov
mov
inc
or
mov
mov
je
dec
mov
mov
or
jl
xchg
mov
lret
ror
push
pop
ret
cmp
call
cs
scas
int
fcoml
dec
mov
or
shrl
cltd
push
paddd
daa
and
lock
sbb
subl
hlt
shl
fistl
sub
lods
mov
repnz
mov
dec
insb
push
pop
lods
push
adc
and
cld
shrl
adc
das
in
aad
lret
aad
dec
and
xchg
push
dec
pop
xor
imul
aam
cmpsb
sbb
jo
test
and
add
jne
cld
sbbb
mov
shlb
mov
push
jbe
lcall
push
inc
add
fbld
push
rcl
inc
mov
movsb
test
adcb
call
filds
clc
test
add
jo
movsl
lods
jmp
sbb
pop
inc
imulb
xchg
dec
cwtl
out
cmpsb
and
pushf
mov
add
adcb
jb
addb
cmp
xchg
sub
imul
sub
xor
add
mov
gs
push
jp
shll
jmp
es
rclb
lea
lds
xor
out
in
push
jg
and
push
mov
mov
repnz
in
push
mov
dec
repz
int
adc
cwtl
outsb
xor
imul
cmp
fnstcw
cld
in
and
loop
leave
btr
cmpl
fwait
inc
push
aam
inc
fsts
popa
adc
pop
mov
adc
lret
dec
lock
mov
cmc
mov
cmp
sbb
dec
jo
cmpsb
cmpsb
loope
imul
int
jmp
inc
out
jmp
arpl
imul
xor
test
jns
lret
mov
jle
adc
cmp
push
nop
jg
scas
lret
test
mov
js
cwtl
dec
in
pusha
xor
mov
loopne
push
xlat
pop
xchg
sub
sbb
and
test
cmp
jnp
cmpsl
mov
lea
mov
sbb
int3
scas
push
push
adc
das
jle
adc
rorl
sarb
pop
and
std
mov
mov
mov
shl
or
pop
sbb
stos
rclb
sti
imul
pop
loop
icebp
cltd
ljmp
sbb
mov
pushf
out
bound
outsl
ljmp
or
cmc
cld
int
inc
jmp
cmpsl
jbe
lock
negb
fdivp
jb
into
fucomip
sub
sbb
push
push
pop
sub
out
mov
lret
mov
pop
aad
ds
cwtl
pop
dec
sub
into
hlt
nop
outsb
scas
sbb
cli
cmp
cmc
popf
dec
pop
stc
repz
fstps
adc
sub
jg
xor
leave
in
stos
out
mov
adc
mov
lods
pop
cltd
jecxz
xchg
push
sub
addl
inc
sub
pusha
jmp
fsubrl
call
xor
pop
insl
fldt
mov
fistl
out
outsl
sub
enter
sbb
xchg
icebp
out
pushf
in
mov
xor
mov
mov
je
add
out
hlt
sbb
mov
sbb
pop
es
mov
lods
and
mov
sub
mov
clc
pop
jmp
inc
sbb
pop
lret
mov
cltd
jbe
addb
mov
rcrb
test
movsl
negl
lods
cmc
push
cmpsl
jae
push
jg
addr16
mov
jecxz
inc
mov
lds
mov
jbe
out
inc
push
or
decl
push
hlt
adc
and
int
dec
jns
shll
jge
push
push
enter
xchg
inc
popa
loop
jp
in
jle
loopne
jne
movsl
xchg
sbb
push
dec
rcll
jge
add
mov
add
pop
mov
test
imul
insb
testl
ret
cmp
mov
iret
push
add
test
cwtl
jo
loope
mov
lret
test
xor
jo
or
push
stc
sbb
mov
shll
repz
or
ja
lock
inc
repz
and
xchg
pop
lods
sti
les
inc
lahf
xor
in
push
sub
pop
outsb
test
sbb
daa
pop
and
add
jnp
shl
mov
push
arpl
add
jne
popf
in
int3
jle
push
inc
mov
jge
xchg
cmpsl
jno
into
dec
lods
cmp
lret
je
lahf
pop
movsb
fidivrs
pop
in
lea
bound
xor
es
xchg
inc
or
cmpl
jge
lahf
cmp
jmp
pop
mov
jmp
ljmp
or
mov
cli
jge
pop
fisttps
push
fldt
xchg
and
mov
inc
test
outsb
jp
inc
and
jg
adc
jo
pop
adc
push
imulb
sti
div
or
xor
mov
fildll
ficompl
pop
lret
pop
add
adc
addr16
mov
dec
and
push
and
push
hlt
cltd
hlt
test
test
mov
push
and
dec
mov
or
xchg
bnd
dec
mov
movsb
xchg
rcrl
repnz
pusha
pop
sub
jae
and
mov
call
mov
pop
dec
push
pushf
jp
jecxz
jl
movl
clc
xor
sbb
stos
pushf
std
lea
mov
outsb
call
scas
sub
lods
sahf
daa
out
sbb
mov
bound
insl
xor
loopne
xchg
mov
addb
stos
cmc
hlt
jg
push
into
int
add
inc
xchg
pop
hlt
jge
jo
push
and
test
xor
shrl
movsl
call
and
or
mov
mov
sub
inc
insb
cmp
lret
enter
imul
push
push
in
cmp
push
test
lods
int3
testb
hlt
push
ret
add
jmp
cmp
cld
inc
aas
jae
dec
inc
add
or
sbb
insl
mov
mov
data16
jecxz
lcall
mov
push
mov
movsl
mov
push
or
out
mov
jecxz
mov
jne
sbb
repnz
daa
insl
scas
add
pop
pop
jae
and
fidivrs
mov
mov
sbb
mov
insb
imul
jbe
minps
push
xor
jo
mov
in
shll
fwait
les
call
dec
cmp
jno
cmp
xor
mov
jnp
add
push
sbbb
daa
aad
mov
dec
jg
ja
test
adc
xlat
cmp
push
adc
fdivs
cli
mov
popa
arpl
lea
ret
inc
in
dec
loopne
dec
mov
xlat
jmp
movsl
push
sahf
pushf
or
mov
pop
jb
add
aam
mov
ss
fiaddl
insl
xor
pop
imul
out
pop
scas
sti
sarl
mov
cmp
addr16
jmp
fs
fldcw
jae
clc
and
mov
stc
mov
cmp
xor
and
jge
jno
outsl
les
repz
popf
sub
add
sbb
enter
rcll
pop
ljmp
pop
push
lods
xchg
add
fwait
loopne
ret
jbe
sub
gs
sbb
dec
inc
cmp
and
jge
pushf
sbb
mov
aad
xchg
pcmpgtd
fnstenv
int3
paddw
mov
loop
xchg
xchg
ds
dec
xchg
or
pop
int
sahf
push
push
inc
dec
or
dec
mov
lea
adc
mov
xor
imul
rorl
jae
lahf
pop
lds
jmp
popf
mov
pop
fs
xchg
sbb
mov
mov
fidivrl
push
and
and
dec
push
das
enter
push
jb
pushf
loopnew
xchg
repnz
ret
inc
mov
mov
jge
daa
mov
test
xchg
sub
sub
repnz
mov
lar
fidivs
cmpsb
int3
lock
lret
sub
fldcw
push
sbb
clc
rolb
pusha
sub
add
sub
subb
out
iret
cli
aam
faddl
sub
dec
pushf
adc
fnsave
loopne
aas
and
push
jne
std
cmp
dec
mov
push
xchg
jg
xor
lea
lods
sub
pop
stc
insb
mov
cmp
xchg
xchg
popf
shll
lock
pop
shr
pushf
sti
es
dec
lret
sahf
mov
jae
insb
out
nop
mull
push
xor
in
and
int
jecxz
mov
rcl
cmc
loopne
pop
ficoml
mov
hlt
ret
ljmp
popa
jp
xchg
sbb
pop
xchg
mov
gs
movsl
enter
js
cld
cmp
ja
mov
fimuls
xor
pop
xchg
in
adc
rclb
dec
cmp
mov
mov
out
dec
mov
out
movb
jl
sub
incb
dec
cmovnp
lahf
xor
bound
push
imul
inc
test
xor
adc
cmp
scas
sbb
jp
xchg
sbb
shll
dec
repz
jge
fistpll
lret
adc
xchg
push
xlat
iret
les
fptan
xor
dec
xchg
jecxz
push
fcmovnb
mov
out
movsb
call
jg
cs
cli
jecxz
sub
jo
popa
jae
aas
pop
xor
es
xchg
je
jp
sub
mov
mov
imul
mov
push
xor
cmp
pusha
mov
icebp
rclb
ja
and
imul
and
xchg
add
mov
iret
adc
and
movsl
sub
add
pusha
adc
inc
cmp
negl
cmpsl
data16
cltd
scas
nop
and
stc
jmp
adc
imul
movsl
pusha
sahf
adc
data16
std
push
bound
push
or
xchg
add
inc
mov
dec
repnz
or
dec
js
mov
pushf
lret
aam
imul
ljmp
in
or
sti
mov
xchg
xchg
lods
into
cmpsb
mov
aad
cmc
aas
cld
icebp
cmp
test
hlt
jne
xchg
cmp
sbb
cltd
fldcw
mov
push
popl
lret
jo
and
ffreep
dec
out
mov
stos
call
fcomp
mov
mov
cmp
pop
pop
jp
aam
mov
inc
pop
lods
add
aam
sbb
mov
and
sbb
mov
adc
pushf
dec
dec
call
push
sbb
cmp
add
pop
rolb
pushf
pop
movsl
push
adc
cmc
popa
movsb
enter
mov
cmp
mov
mov
es
dec
jns
fidivrl
pop
mov
cltd
sbb
xchg
ljmp
or
mov
and
arpl
repnz
mov
stos
inc
sbb
ret
sub
mov
mov
xchg
stos
int
cld
adc
testb
lahf
sub
pop
jmp
lcall
aad
mov
test
dec
and
imulb
lds
inc
lock
adc
cwtl
jle
push
shl
xor
cld
fcoml
push
mov
xchg
xor
push
jne
cld
movsl
insl
xor
xor
test
cmpsl
sub
lds
xchg
mov
inc
jnp
cmp
imul
inc
push
push
mov
imul
push
into
shr
xchg
push
into
xchg
in
pushf
and
fsubl
sub
movsl
mov
ffreep
int3
jle
jge
int
fcompl
rcrl
jle
add
dec
xchg
cli
inc
mov
in
mov
in
add
adc
and
cmp
je
imul
sbb
bound
pop
mov
adc
jbe
pop
in
in
inc
rcrb
cmp
and
jge
and
push
clc
cmp
ljmp
ds
js
add
or
cmc
cs
inc
je
fsubp
int3
daa
xchg
mov
int3
mov
out
inc
sahf
loopne
push
lock
popa
jo
dec
orb
xchg
adc
push
shlb
scas
mov
sbb
or
sub
push
fdivrs
outsl
call
movsl
testl
aas
mov
jbe
mov
mov
pop
call
js
push
andb
pop
jo
das
mov
es
movsb
mov
cmpsb
dec
sub
int
mov
cltd
enter
inc
mov
cmp
loopne
pop
loop
rorl
jmp
cmp
ret
mov
inc
ss
mov
loopne
imul
inc
movsl
push
inc
fsubs
scas
ja
pop
inc
or
xlat
repz
sub
sbb
or
mov
lret
idivl
jns
push
mov
iret
rcrb
adc
xor
xchg
jg
jo
ror
jne
sahf
mov
call
nop
mov
lret
mov
adc
cmp
notl
pop
aam
insl
stos
cmp
and
out
addr16
loop
inc
mov
fs
into
push
outsb
lret
jmp
push
lea
outsl
popf
add
shl
and
arpl
jbe
rcrb
in
xchg
addr16
repnz
outsl
popa
outsl
imul
stos
lods
loop
xor
hlt
adc
push
arpl
cmpsb
cmc
sub
mov
pusha
fcmovnb
call
stos
push
dec
mov
stos
out
iret
sub
fs
dec
mov
xchg
and
adc
cli
lock
mov
mov
adcl
sub
imul
stos
pop
daa
mov
fwait
inc
pop
imul
jbe
sbb
insb
lods
inc
push
inc
adc
test
dec
mov
push
sub
xor
add
sub
in
fmuls
cmpsl
das
mov
push
mov
push
lret
lret
add
hlt
cld
imul
inc
pushf
sub
inc
sbb
jns
sbb
fmull
ja
mov
adcl
inc
or
mov
or
pop
into
cwtl
or
ds
pop
lds
mov
pop
in
cmpsl
xlat
adc
xor
push
cmp
xchg
or
lahf
shll
lcall
inc
push
push
outsb
inc
scas
frstor
daa
sub
dec
fcoms
sbb
sbb
cmp
or
xchg
imul
imul
sub
jmp
imul
jae
jmp
xchg
jg
and
xchg
push
pushf
test
pop
jb
gs
jmp
adc
sbb
ss
dec
mov
insb
test
pop
stos
ss
mov
jnp
lods
clc
adc
xchg
add
add
cmpsl
outsl
clc
mov
push
into
mov
loop
rcrl
pop
cmpsb
int3
push
ja
adc
test
cmpsb
jbe
mov
fistl
mov
cmpsl
jmp
movsb
pop
sbb
lods
adcl
cmpb
pop
fiaddl
scas
sar
cmpsl
lea
in
pop
xchg
cs
adc
flds
jnp
iret
aad
dec
loopne,pt
aaa
arpl
and
bound
xchg
inc
insl
mov
mov
mov
fwait
dec
xor
mov
shl
mov
cmp
leave
shlb
out
ret
stc
in
push
or
jbe
mov
cmp
fs
jecxz
ljmp
pop
jmp
loope
aas
test
or
mov
pop
mov
aad
xchg
jne
xchg
cmp
xchg
iret
test
cld
sub
dec
data16
push
xchg
pusha
xchg
add
daa
stc
popf
xchg
fdivr
test
ljmp
data16
dec
mov
sti
sbb
sub
imul
adc
dec
in
loope
cmp
adc
lahf
or
imul
jae
out
inc
sub
cli
push
ss
ret
add
mov
xchg
adc
jp
mov
sahf
ja
push
mov
sbb
adc
jmp
mov
jmp
cli
sbb
pop
pop
cbtw
jne
lcall
jo
stc
inc
adc
mov
je
xlat
sbb
setge
dec
or
fistpl
push
mov
dec
cmpl
je
cmp
inc
mov
cmp
repz
fisubrl
movsl
mov
shrl
sub
mov
es
daa
rclb
or
push
dec
imul
cmp
loopne
inc
mov
in
jecxz
clc
jnp
sbb
pop
mov
xchg
mov
adc
clc
movsb
and
cltd
mov
mov
int3
jbe
mov
pop
rorl
cmpsb
stos
sub
xlat
mov
inc
sub
mov
push
sbb
xchg
aas
inc
sub
shll
in
cmpsb
sbb
xor
scas
jbe
out
mov
cmc
insl
mov
jns
fldt
insl
sub
push
nop
xchg
into
pop
movsl
stos
ljmp
fstps
bound
push
pop
int
pop
test
insb
pop
inc
in
push
add
and
scas
sub
sub
scas
mov
pop
sbb
dec
into
pop
inc
and
pop
dec
ret
and
xor
pop
jae
xor
out
add
add
scas
dec
pushf
cltd
pop
mov
pop
mov
push
xchg
sub
lods
lds
fyl2x
cmp
pusha
addr16
and
test
adc
sub
pusha
daa
repnz
ja
pushf
pop
ja
sub
jecxz
les
mov
rolb
divb
je
inc
jns
jp
das
pop
les
dec
lret
ss
aam
mov
pop
fimuls
insl
push
sahf
orb
xchg
push
mov
mov
movsl
pop
repz
adc
jns
push
sub
xor
fs
into
out
dec
stos
mov
gs
sub
jl
adc
mov
sub
xchg
mov
aad
in
cli
adc
dec
sub
mov
xor
sub
mov
cmp
cmp
stc
xor
nop
sub
mov
sub
les
sub
xlat
or
cmp
cld
push
pop
pop
incl
leave
ret
lcall
fs
cmp
sbb
test
stc
test
insl
sbb
push
or
mov
add
popa
add
ljmp
sahf
test
mov
dec
pop
aas
push
pop
and
pop
xor
fsubs
lods
mov
fdivl
cmp
mov
outsl
subl
inc
ljmp
test
repnz
add
movsl
js
jge
pop
and
xor
jae
push
pop
mov
sarb
mov
loop
in
xchg
lea
loopne
shl
iret
out
mov
mov
push
es
pushf
rcrl
nop
stc
cld
xchg
xchg
popa
sbb
push
mov
inc
add
sahf
inc
hlt
leave
mov
pop
inc
mov
cmp
cmove
shlb
or
jle
in
shrl
jae
loop
aam
and
ss
push
fwait
cmp
dec
mov
push
xchg
sbb
jns
jae
outsb
and
pop
xor
jno
jo
add
mov
ss
cs
mov
inc
icebp
imul
jnp
in
jmp
xor
fsubr
aad
adc
and
ret
pop
into
pop
pop
lock
imul
jmp
jmp
mov
in
aam
test
jo
cltd
mov
pop
jne
in
or
inc
sbbl
add
outsl
sbb
add
mov
stos
push
cmpl
push
pop
mov
and
loop
add
xchg
cmp
scas
lret
adc
mov
dec
or
jle
push
popa
dec
pop
mov
das
int3
sahf
xchg
pop
lock
in
fcomp
dec
mov
sub
call
dec
inc
xor
inc
pushf
jo
in
das
leave
add
sub
jb
and
cmpsb
xchg
fdivs
inc
inc
leave
ss
dec
dec
push
decl
and
jo
and
mov
or
test
rcl
push
aad
ret
pop
jp
scas
test
pop
dec
mov
fistps
and
repnz
fnsave
dec
cltd
mov
stos
jle
and
fdiv
mov
adc
iret
repz
out
push
stos
loopne
clc
fbld
sbb
nop
and
push
cwtl
add
das
inc
ficomps
xchg
sub
and
mov
mov
fdivrl
jbe
cmc
xchg
jle
pop
movsb
mov
mov
inc
push
sub
enter
jl
loopne
jno
pop
jl
add
push
mov
inc
fdivr
push
mov
imul
push
mov
lods
push
outsb
mov
mov
pop
or
mov
in
cltd
or
dec
lret
pop
fisubrs
ljmp
stc
mov
mov
rcrl
mov
out
mov
push
push
push
sub
int3
cmpsl
mov
fistpll
sbb
lahf
push
cmc
push
insl
xlat
jae
pop
mov
leave
mov
ret
mov
xchg
pop
ja
inc
incl
dec
stos
dec
xchg
outsb
daa
xorb
mov
testb
aad
mov
push
dec
mov
jge
mov
test
fists
movl
mov
mov
loopne
iret
dec
rcrl
aad
fdivr
xor
test
movsb
mov
adc
aaa
pop
jno
inc
dec
sub
dec
cld
inc
lods
push
add
jp
lods
pop
stos
fs
push
fdivrs
ret
mov
cli
jecxz
inc
mov
pushf
mov
mov
out
cmp
call
sbbl
xor
cld
les
inc
sub
lret
dec
loopne
insl
and
out
xor
loope
repnz
test
sti
pop
and
mov
cmc
cltd
cld
and
xchg
inc
sahf
push
xorb
aas
mov
stos
div
xor
jmp
push
inc
decl
fbstp
aad
cwtl
pop
addr16
les
lea
and
sub
sbb
mov
rcll
pop
mov
push
filds
push
dec
cltd
adc
arpl
iret
push
and
bound
aas
sahf
push
or
sti
inc
and
push
ret
pop
push
xor
adc
test
or
push
adc
call
das
rolb
inc
dec
jno
ljmp
inc
dec
xchg
sbb
push
jnp
push
push
xor
repnz
ficomps
jae
mov
lods
std
dec
test
xchg
pusha
mov
nop
and
cmpsl
xor
ds
movsl
stos
adc
sbb
and
imul
xchg
jb
jno
test
mov
mov
mov
pop
in
cmp
lock
add
xchg
lds
out
dec
cld
add
sub
dec
pop
pop
enter
pop
arpl
sub
jo
cmp
outsb
push
or
je
mov
popf
data16
and
in
dec
aas
sbb
xchg
xor
or
pop
mov
fsubrp
sbb
or
or
or
test
adc
lock
cmp
and
pusha
jge
repnz
xchg
mov
test
sti
xlat
out
push
je
inc
cli
es
jne
sbb
jg
adc
push
cmp
add
pop
mov
jle
jae
sahf
inc
push
imulb
sub
insl
scas
aam
in
push
outsb
xor
popa
push
scas
inc
ds
scas
test
jbe
push
inc
jb
inc
repz
cltd
pop
xchg
cltd
jp
dec
xchg
pop
mov
je
pop
push
cld
shrb
in
repz
cmp
out
out
je
ret
mov
gs
dec
add
xor
jo
sub
fstps
xlat
repnz
mov
insb
loopne
insl
aas
cmpl
sahf
mov
addr16
xor
add
int
mov
dec
jp
jo
loopne
aad
clc
pop
cmp
inc
mov
xchg
dec
negb
ret
add
out
clc
out
mov
xchg
out
lock
les
fwait
cmp
out
movsl
ret
js
test
popl
and
xchg
cmpsl
mov
and
mov
or
push
mov
in
es
adc
pop
add
in
lock
push
sti
xchg
movsl
fbstp
dec
mov
or
push
addl
mov
ljmp
sbb
add
ret
ja
stc
loop
mov
call
mov
mov
jbe
xor
fldt
sbb
push
sbb
leave
jns
lcall
loope,pt
adc
iret
push
cli
pushf
xlat
das
mov
mov
lds
mov
outsl
push
jp
and
call
xacquire
ffree
mov
push
es
inc
push
lea
mov
lahf
mov
push
mov
ret
push
sbbl
das
xor
pop
and
pop
clc
xor
and
das
leave
out
bound
and
lds
hlt
int3
es
mov
mov
dec
push
cmp
sub
cmp
dec
fmul
jmp
rclb
es
xchg
jnp
jae
loop
xor
add
scas
pop
xlat
dec
xchg
mov
vshufps
sub
cwtl
cs
mov
aad
daa
add
test
add
mov
ljmp
pop
jo
sbb
jecxz
ljmp
mov
dec
stos
xchg
add
subb
dec
cwtl
js
pop
int
mov
push
and
stc
mov
rclb
in
jmp
or
push
mov
in
sahf
sbb
js
or
aaa
and
xchg
and
and
jg
ja
outsl
mov
int3
mov
inc
mov
push
sub
mov
dec
lahf
add
leave
add
movsb
pusha
jb
add
mov
cmp
xchg
jo
aad
xchg
sahf
insl
cmp
repz
push
and
insb
add
add
stc
xchg
sbb
mov
adcb
mov
jne
sub
lcall
movsl
inc
movsb
std
out
loop
mov
fistpl
dec
fstpt
faddp
mov
shlb
cmp
cmp
incb
loop
loope
mov
sub
or
xchg
sub
add
js
out
push
cmc
inc
and
fldt
add
or
outsl
mov
and
ffree
mov
sub
int3
xchg
inc
or
inc
adc
jecxz
push
jmp
and
ret
ret
push
jle
and
xor
add
les
sahf
inc
test
idivl
push
xor
inc
xchg
ss
pop
sbb
mov
ja
adc
loop
mulb
mov
cmp
and
xor
rorb
sub
mov
adc
xor
scas
dec
incl
pop
loope
add
jnp
out
aam
jne
mov
inc
pop
or
jle
test
mov
pop
and
sub
test
pop
pop
movsb
rorl
out
push
bsr
fwait
pop
dec
js
lock
gs
sbb
cmp
daa
jae
imul
icebp
repz
mov
movsl
add
cmpsl
call
mov
jle
aaa
popa
inc
and
sub
imul
popf
jnp
mov
push
scas
jl
stos
mov
test
xor
mov
xor
add
movsl
dec
xchg
loopne
popa
ljmp
aas
pusha
std
imul
or
stc
lock
bnd
shlb
cmp
cmpsl
mov
fidivl
js
addb
out
and
jle
lea
or
mov
and
leave
shlb
scas
mov
flds
mov
ret
xchg
mov
or
or
jg
mov
daa
inc
test
stc
sub
shll
jp
lret
inc
push
mov
in
sub
or
adc
cld
inc
ljmp
cmc
aas
mov
cwtl
out
sahf
orb
cltd
test
push
call
ret
arpl
cmpsb
loop
pop
push
sbb
leave
xchg
flds
fldpi
sbb
iret
cmc
mov
lea
stc
xor
pop
or
xlat
fstl
mov
lahf
cmpsb
clc
lds
xor
fisttpll
js
push
add
mov
xchg
cmp
jge
pop
movsl
dec
inc
clc
sub
mov
aad
mov
xor
push
jp
push
adc
stc
jp
pop
push
jbe
mov
xor
sub
jns
movsl
mov
sbb
xchg
or
xor
xchg
mov
data16
mov
push
sbb
in
jp
movsl
xchg
fcoml
repz
adc
in
es
stos
mov
pop
stos
stc
icebp
jl
idivl
out
js
sbb
inc
in
fisttpl
ror
or
mov
xor
cmp
lds
movsb
gs
ljmp
loopne
mov
bound
int
into
sbb
clc
jne
adc
sub
lock
dec
loopne
das
inc
push
dec
add
cmpsl
mov
xchg
fldt
and
jmp
sti
cli
sbbb
sub
mov
mov
test
sub
and
fs
jno
inc
mov
neg
xchg
jmp
sub
lods
or
dec
lea
mov
dec
mov
mov
daa
int
dec
in
aaa
iret
mov
xor
pop
in
aad
mov
fbstp
pop
aas
sub
in
inc
mov
imul
lds
int
into
les
in
lret
push
push
adc
and
adc
push
scas
cmpb
ja
mov
adc
jp
xlat
sub
insb
inc
push
adc
nop
sub
aam
push
mov
ds
insb
and
push
test
pusha
fstcw
jns
call
pop
push
pop
push
dec
icebp
push
out
std
aad
add
shrl
sbb
dec
hlt
sti
xor
rclb
xchg
ja
push
cmp
mov
mov
sub
popa
push
adc
test
lods
jle
in
stos
stc
mov
outsb
call
scas
test
xlat
in
loope
inc
insl
mov
jg
int
xchg
outsl
dec
data16
sub
jae
nop
dec
push
lret
or
fxch
pushf
out
in
pop
dec
fs
add
ret
filds
and
push
pop
cli
mov
or
arpl
sarb
mov
add
stos
jnp
mov
je
jbe
push
sub
loopne
jae
jecxz
lcall
ss
push
sbb
pushf
jecxz
data16
ja
stos
dec
xor
xchg
fcompl
ret
sub
cmp
jge
pop
jle
jmp
movsl
lret
outsb
lret
jnp
mov
mov
and
je
int
push
lods
mov
std
loop
fimull
fwait
jg
sbbb
dec
out
aaa
add
jg
pop
cmp
lock
push
push
mov
dec
cmp
insl
jb
pop
cmp
pop
fldcw
clc
push
xchg
push
pop
pop
push
loope
in
push
sub
sbb
mov
testb
mov
sbb
rolb
inc
dec
lods
in
call
jge
lret
orb
sub
mov
adc
cli
addr16
xor
xor
mov
sahf
hlt
dec
in
inc
movsl
or
cmp
test
mov
push
jle
dec
cltd
and
cmp
dec
imul
test
iret
lds
int3
mov
adc
dec
in
pushf
xor
lret
aaa
insl
pop
into
xchg
repnz
cmpsb
mov
pop
cmp
sahf
cld
cli
inc
adc
in
ds
shlb
pusha
ss
daa
sbb
pop
adc
adc
mov
push
or
loopne
repz
pop
cmp
das
or
fmuls
scas
and
aam
cs
mov
xchg
jns
popa
inc
mov
sub
xchg
inc
mov
adc
aam
idivl
fidivs
enter
movsb
or
roll
mov
and
in
int
sbb
xor
xchg
rorl
jae
sarl
nop
lods
mov
mov
push
stos
in
leave
sbb
lock
icebp
jle
popf
lahf
jg
out
cli
jp
mov
pop
imul
mov
sbb
mov
xlat
jmp
push
push
cli
out
sub
mov
int
jb
add
push
push
pop
xor
sbbl
or
sbb
test
das
cli
hlt
mov
lods
cmpsl
fs
enter
add
fldcw
dec
sahf
and
scas
aaa
subb
imul
mov
xor
scas
push
or
mov
sub
mov
pop
lea
das
and
stc
jbe
adc
data16
adcl
rorb
addr16
inc
add
fldcw
imull
fcoml
js
xchg
lds
jae,pn
jge
rol
add
jp
in
cltd
push
mov
orb
and
xchg
roll
push
cmp
sbb
int3
mov
cmp
or
sub
rclb
sub
adc
imul
scas
xlat
push
fs
addl
bound
mov
mov
push
push
hlt
mov
std
sahf
icebp
and
inc
cmpsb
push
fmull
cltd
stos
outsl
sub
sbb
add
mov
js
imul
jne
or
xlat
mov
sub
jl
lock
dec
mull
jnp
dec
popf
loop
push
dec
lods
pop
pop
push
cmp
ja
add
addr16
mov
insl
out
or
mov
pop
and
lcall
imul
mov
addl
ret
leave
dec
aad
in
mov
or
int3
rolb
aad
xchg
push
jmp
lods
fs
outsl
shrb
test
sub
add
xor
sbb
dec
aam
and
data16
or
push
cld
dec
sbb
push
ljmp
push
es
pop
jns
pop
mov
mov
mov
ss
add
pop
mov
inc
cmp
jmp
lahf
cmp
push
jle
dec
rep
test
imul
mov
mov
and
xor
ds
lea
jecxz
lea
lods
dec
mov
enter
mov
dec
push
fs
or
cmp
pop
test
adc
push
shll
fs
add
inc
dec
pop
test
ljmp
cmp
lret
cwtl
jecxz
stos
or
rcrw
jmp
lea
daa
loopne
shlb
loope
enter
ja
testl
std
cmp
popa
jl
push
cmpsb
out
cld
mov
jge
mov
inc
or
add
add
inc
add
dec
out
pop
xor
dec
stc
mov
dec
insb
jbe
mov
push
loopne,pn
pop
cmp
dec
fdivp
loope
inc
push
sbb
mov
push
out
loop
enter
cld
or
mov
fldl2e
jge
or
scas
adc
lret
pop
push
cmp
push
mov
test
xchg
or
outsb
aad
adcb
push
cmc
sub
leave
ret
xchg
jmp
loop
pop
lahf
push
adc
lods
mov
mov
imul
insb
or
cmp
fisubl
test
xlat
or
pop
jnp
mov
sbb
fwait
mov
pop
inc
cmp
push
pop
hlt
lcall
or
fcomps
mov
std
movsl
cwtl
mov
rorl
mov
xchg
jge
imul
add
mov
and
enter
mov
cmp
jl
jb
mov
and
add
dec
push
mov
ss
es
mov
mov
pop
sbb
mov
subl
repz
movsb
cs
xorb
stc
repnz
int
add
je
and
cmpsl
mov
popf
add
test
cltd
data16
add
mov
roll
or
dec
and
jno
ret
inc
movsl
or
lahf
loope
aaa
outsl
out
outsl
mov
cs
arpl
lcall
or
ret
stc
xor
ds
xor
loopne
out
aaa
mov
mov
insb
das
sahf
and
push
lock
orb
and
dec
ja
adc
xchg
js
daa
jmp
mov
inc
sbb
repz
jmp
add
cld
sbb
push
xchg
out
jno
cmpsl
js
pushl
fwait
sbb
cmp
outsl
xor
pop
icebp
or
daa
mov
jmp
and
pop
mov
adc
outsl
jb
outsl
inc
dec
mov
dec
int3
lcall
inc
mov
cmpsb
dec
adc
sbb
add
ret
pop
es
jae
sub
xchg
add
repnz
mov
fucomip
and
scas
push
push
int
mov
push
movsb
stos
jno
ret
test
mov
jge
sti
lods
cwtl
mov
sahf
xchg
xchg
push
push
cmp
fidivrl
lret
sub
pop
leave
sti
stos
data16
test
inc
mov
mov
pop
push
mov
cmp
pop
dec
adc
cmp
jecxz
lcall
sub
dec
mov
sbb
nop
out
sbb
cmp
imul
stos
enter
aaa
mov
addr16
mov
outsl
fwait
lret
inc
sub
jmp
testl
pop
push
inc
sti
mov
stos
int3
pushf
imul
call
jecxz
movsl
jecxz
ja
mov
jnp
fistl
lcall
sub
in
stos
mov
add
pop
jbe
mov
jecxz
xchg
loopne
cmp
xor
pop
adc
stos
push
mov
fdivl
lods
sti
sub
inc
out
popf
aad
jecxz
cltd
xchg
cwtl
xchg
imul
in
leave
mov
test
mov
filds
test
mov
mov
or
std
push
scas
adc
xchg
cmp
out
test
lret
pop
repnz
cwtl
dec
pop
pop
lahf
cmp
pop
pusha
mov
loop
mov
aas
mov
fimuls
imul
ljmp
mov
jmp
pop
pushf
outsl
loope
mov
push
or
or
inc
das
jg
push
ret
fiadds
push
adc
and
pop
aad
push
mov
jno
out
clc
into
imul
mov
in
out
push
rorl
mov
out
add
adc
cmp
sbb
inc
and
xor
sub
sub
jmp
inc
inc
rolb
xor
inc
ret
in
sti
xor
gs
xchg
jl
sub
or
xor
dec
adc
ret
mov
test
jnp
cld
push
in
stos
pushf
data16
xor
cmp
mov
push
xor
into
adc
xchg
fcomip
push
jb
inc
pop
mov
sahf
fbstp
jnp
arpl
pushf
jl
cmp
cmp
dec
jmp
adc
icebp
xor
loop
test
mov
push
rcll
orl
cmp
lock
jge
jnp
shlb
es
mov
adc
push
call
sbbb
inc
dec
jo
dec
add
in
popa
cmp
insb
stc
cmp
dec
hlt
loopne
inc
leave
xor
sub
or
sub
jge
push
cmpsb
aaa
mov
mov
lock
shll
push
xchg
mov
ljmp
jl
fmuls
and
sbb
push
stos
cmp
ret
dec
loop
js
or
iret
daa
xor
mov
dec
ljmp
addb
pop
pop
in
mov
or
and
sub
cmc
in
insb
xor
sahf
insl
cmp
popf
mov
test
or
ftst
mov
sbb
mov
adc
imul
or
pop
pop
js
test
sub
adc
into
loope
fstl
or
jmp
sbb
cmp
andl
inc
jns
dec
mov
xchg
sbb
adc
cmp
or
nop
ljmp
pop
mov
or
roll
xchg
js
loope
sbb
fmull
push
mov
inc
sbb
xor
movd
sub
xor
je
subb
xor
rep
cmpsl
or
dec
outsl
das
lock
push
fbstp
mov
mov
jbe
mov
adc
enter
ret
add
sti
pop
or
mov
inc
das
imul
aas
lret
out
jnp
das
or
mov
jae
mov
cmp
outsl
mov
inc
and
les
sub
aas
enter
mov
stos
pop
sti
mov
add
mov
lods
outsl
xchg
dec
mov
xchg
ret
xchg
push
lea
or
popf
test
aad
inc
mulb
or
adc
lahf
mov
push
aam
xchg
and
jmp
fiadds
cmpsb
push
dec
insb
adc
out
stc
pop
test
sub
xor
hlt
aaa
ljmp
and
jno
jb
xchg
sbb
out
push
out
xchg
mov
xchg
xacquire
iret
mov
push
or
popa
push
mov
push
cmp
jmp
fistpl
add
dec
xchg
ret
lcall
in
sub
out
jmp
test
pop
jno
adc
mov
pop
add
mov
jle
pop
ljmp
jg
gs
inc
retw
cmp
pop
rcl
popf
cmp
insl
mov
adcb
mov
mov
mov
jnp
jg
dec
addl
imul
xor
mov
inc
pop
push
pusha
pop
aad
pusha
mov
push
mov
cmpsl
cmp
pop
ja
cltd
jmp
dec
je
jae
hlt
pop
stc
aaa
arpl
pop
int3
cmpsb
in
int3
dec
dec
sbb
aas
nop
cs
sbb
cmpl
xor
pop
jb
dec
out
jbe
xchg
dec
add
je
cmp
ja
push
test
jo
sbb
es
jbe
cmp
add
lea
inc
sbb
inc
sub
xor
leave
jne
insb
dec
fwait
xchg
inc
xchg
imul
repnz
jbe
out
std
je
add
push
mov
fldt
scas
aaa
fmuls
shl
jnp
xor
mov
lahf
inc
or
cltd
or
call
inc
xchg
aaa
xchg
std
pop
shll
mov
push
outsl
mov
xlat
xlat
data16
js
sti
mov
insl
inc
dec
adcb
xchg
bswap
shlb
dec
cmp
ret
push
jns
les
fildll
xor
add
fldt
mov
jne
rcl
out
outsb
jno
adc
xor
cmp
add
or
pop
mov
outsb
gs
cld
std
js
inc
or
cld
test
jb
lcall
adc
xor
jle
inc
dec
int3
pushf
cmp
sti
test
sub
jae
add
lret
xchg
push
aam
xchg
aaa
push
xor
sub
cmpsl
push
xchg
adc
addr16
xlat
add
jne
adc
loop
ret
stos
addr16
ss
ret
inc
lds
add
or
pop
js
mov
sar
jle
bound
add
ds
lahf
and
add
fildl
jg
pop
jo
mov
fs
flds
rol
dec
pop
popa
pop
push
jnp
mov
dec
cmp
adc
push
sti
mov
inc
loop
mov
push
mov
andb
imul
push
ficoml
adc
sub
cmp
iret
addr16
or
mov
mov
jnp
aad
mov
fiaddl
data16
jo
xchg
lcall
cmp
pop
daa
ficoms
in
xchg
sbb
dec
jge
loope
in
and
iret
or
dec
clc
cmpsl
or
rcrl
xor
mov
sbb
push
cmp
jg
cmp
icebp
lret
cmp
inc
mov
aad
cmp
mov
imul
fmul
sub
sbb
ficoml
push
movsb
aad
xchg
movsl
push
or
cli
sub
rorl
mov
or
ret
xchg
and
sub
ljmp
mov
mov
mov
loope
push
nop
das
daa
andb
or
mov
sub
out
lret
hlt
mov
dec
adc
test
movsl
jbe
xor
sahf
fs
gs
lea
int
mov
or
xchg
push
cld
loope
arpl
adc
xchg
int3
pop
sbb
mov
push
ret
addr16
pop
out
sti
jg
jp
sub
shlb
js
mov
pop
jle
std
inc
cld
jg
in
pop
stc
mov
out
xchg
jo
fstps
repnz
jno
sbb
mov
fisubrl
and
xor
cltd
data16
xor
push
xor
and
add
mov
stos
add
repnz
jge
gs
push
lods
xchg
and
xchg
pop
sub
test
rclb
add
push
aad
or
cli
inc
int
xor
push
ja
jns
mov
out
std
pusha
lret
sbb
pop
sbb
imul
shlb
adc
inc
movl
jno
pmulhw
lret
xchg
popf
gs
out
mov
and
adc
dec
adc
clc
test
aaa
push
test
sbb
test
lret
push
mov
cmp
hlt
mov
jbe
or
add
xchg
popf
insb
roll
rorl
dec
stos
jmp
es
ret
cmpsl
out
and
arpl
mull
or
pop
push
lret
ljmp
sub
fimull
lcall
xchg
add
mov
imul
pop
mov
cwtl
xchg
outsb
les
loop
fistps
std
pop
outsb
shr
loopne
cltd
cmp
and
and
pop
sbb
pop
jnp
iret
stos
pop
popa
hlt
aas
push
mov
mov
cmp
add
sarl
sbb
testb
adc
lret
popf
push
adc
mov
shlb
sub
xlat
iret
push
shlb
pop
movsb
ss
sbb
sbb
pop
adc
outsl
hlt
imul
adc
mov
call
add
lea
aaa
ljmp
lock
andl
mov
inc
popf
stc
test
movsb
loopne
mulb
jnp
mov
fdiv
repnz
sbbl
iret
dec
xor
pop
sbb
mov
and
mov
sub
mov
sbb
pop
int
mov
mov
push
jnp
sub
stos
clc
std
xchg
xchg
cltd
fiadds
mov
cld
or
adc
sbb
sahf
xchg
pop
jb
push
pop
xor
add
fists
pop
pop
loop
jne
lcall
dec
xchg
pop
xchg
xchg
insb
ret
sarb
sub
bound
fisubrs
xlat
push
add
pop
aaa
mov
sbb
jg
outsb
mov
jl
xor
mov
out
ss
and
and
sub
in
dec
sbb
sbb
rcrb
xchg
sbb
mov
fnstcw
data16
and
pushf
cli
loop
std
and
ljmp
xchg
cmpsb
ljmp
hlt
mov
stos
sbb
push
jbe
sbb
jae
sub
sbb
mov
pop
jno
jmp
push
dec
mov
and
ds
inc
sub
movsb
outsl
jne
xchg
sbb
fists
loope
or
sbb
test
dec
aam
push
jb
push
jp
cld
gs
repz
hlt
adc
subb
jne
lcall
icebp
cmp
mov
jno
xor
inc
mov
test
pop
pushl
cmpl
or
enter
sub
mov
add
es
sub
xchg
jbe
cmp
out
pop
xlat
jb
sbb
sub
dec
xor
mov
sbb
cmp
mov
and
xchg
jns
or
adc
in
mov
arpl
mov
mov
pop
cld
xchg
dec
xchg
xchg
push
out
fmulp
inc
jne
and
dec
pop
jb
jb
and
pop
sbb
lock
cs
bound
or
mov
out
adc
nop
adc
ficoml
add
push
mov
adc
sbb
mov
shl
int3
mov
or
js
cld
mov
push
or
shrl
loopne
rcrl
gs
pop
xor
mov
daa
jbe
hlt
test
inc
mov
add
daa
lahf
loop
sub
jb
inc
jg
jl
lock
and
cmpl
adc
mov
inc
std
outsl
cwtl
nop
jb
mov
in
neg
jmp
mov
lea
retw
mov
mov
sub
mov
cmp
sarb
sbb
sbb
fucomip
rcll
lcall
lods
mov
mov
shlb
xchg
orb
pop
int
jne
push
jl
xchg
das
push
push
push
sub
fwait
jns
fildl
into
in
or
hlt
push
bound
mov
mov
repz
sub
cmc
adc
push
popf
js
lahf
jns
push
push
sbb
xchg
mov
lds
fmull
inc
push
add
mov
adc
xor
jp
jge
repnz
jp
sbb
pushl
push
xor
stos
sub
rclb
jl
xchg
sub
andl
icebp
lods
adcb
sub
mov
mov
pop
shll
outsl
imul
hlt
orb
hlt
mov
mov
mov
ficomps
stc
stos
dec
daa
in
out
lcall
std
fs
outsb
ljmp
sbb
mov
jge
jns
cmpsl
pop
pop
dec
xlat
orb
aaa
ja
adc
pop
mov
push
xchg
loopne,pn
das
cmpsb
iret
adc
inc
and
adc
mov
mov
movsl
aam
mov
aas
test
mov
int3
shl
into
sbb
stos
data16
xor
jns
pop
xchg
mov
pop
imul
popf
aaa
sub
pop
fdivrl
push
sub
ret
dec
xchg
test
repz
jnp
cmp
inc
pop
je
dec
fistl
rcrl
sbb
add
pop
cmp
mov
stos
sub
xor
out
icebp
mov
sbb
pop
dec
lcall
pop
jecxz
je
outsb
add
cwtl
dec
sbb
cmpsb
and
mov
add
stos
sbb
mov
movsl
mov
add
ret
stos
push
xchg
lret
stos
sbb
cld
sub
out
mov
ficompl
aas
or
inc
xchg
xor
cmp
adc
imul
jecxz
and
add
cmp
iret
idivb
cld
lahf
loop
xor
gs
insb
mov
xchg
push
push
and
fucomi
mov
scas
inc
xchg
mov
dec
xchg
add
idivl
in
in
int
and
xchg
lret
fnstenv
pop
mov
cli
stos
or
fwait
pop
push
sub
stos
test
sarl
ja
fwait
cmp
or
jae
inc
mov
push
add
sub
sub
pop
jecxz
xor
mov
shrb
mov
dec
lret
insl
or
xchg
inc
mov
cmp
rep
clc
repnz
clc
pop
or
jmp
inc
mov
sarb
cmp
cmpsb
call
gs
or
shlb
or
movsl
jl
push
jecxz
cmpsl
test
inc
push
cs
and
jle
clc
cmp
iret
adc
mov
push
pop
enter
imul
cwtl
pop
push
pop
jmp
inc
imul
xor
test
jecxz
divl
inc
mov
rcll
sahf
mov
sbb
pop
pop
lahf
test
add
and
mov
inc
mov
sub
dec
sahf
insb
add
add
imul
or
jg
stc
jge
mov
lea
adc
popf
mov
mov
cmc
mov
jge
sbb
cwtl
push
xchg
rorl
jb
jle
mov
cmp
mov
and
dec
xlat
xor
add
iret
cmp
rorl
inc
iret
lods
xchg
lock
sbb
loopne
out
mov
or
jg
cmp
sbb
scas
dec
rcrl
adc
fs
pop
or
cld
sub
push
xor
pop
test
cmp
mov
sub
adc
lock
test
and
and
adcb
ds
fisubl
jmp
inc
pop
mov
push
cli
and
sahf
pop
push
imul
loopne
jo
jb
cwtl
lret
iret
cmp
or
aam
fnstsw
dec
or
into
imul
xchg
hlt
sahf
icebp
push
cmp
gs
jbe
into
xchg
mov
cld
sbb
jmp
add
stc
jns
adc
sub
std
insl
mov
xor
cwtl
push
xor
out
jle
into
clc
ss
mov
in
dec
out
and
shlb
sub
das
mov
mov
pop
push
mov
cmp
adc
mov
testl
pop
mov
imul
mov
lea
and
call
mov
nop
aas
mov
mov
test
sub
pop
fiaddl
mov
test
xchg
add
xchg
iret
jbe
or
mov
dec
cld
in
jae
xorl
inc
psubq
mov
pop
test
mov
inc
mov
dec
ret
cmp
pop
mov
cmp
out
scas
in
clc
xor
sub
mov
cli
xor
xor
jo
mov
xchg
and
out
mov
arpl
push
into
ror
movsl
pop
movsb
je
hlt
mov
ljmp
jnp
inc
xchg
push
lahf
cmp
into
push
imul
ds
mov
arpl
sbb
xor
mov
sbb
lcall
sbbl
sar
stc
pushf
popf
outsl
pop
lahf
and
push
adc
jae
test
sbb
dec
loope
sub
jb
into
adc
outsb
mov
or
xorb
test
push
add
mov
out
pop
sahf
xor
cwtl
jnp
mov
mov
add
inc
jmp
loopne
call
jge
enter
fiaddl
cwtl
iret
cmp
test
mov
adc
hlt
fwait
adc
clc
dec
jmp
sub
push
add
scas
pop
ficoms
xchg
pop
adc
xchg
jne
je
lahf
xchg
aaa
adc
lret
add
add
push
fs
std
test
cmp
out
mov
shl
loop
loopne
and
addr16
add
in
add
cwtl
push
jne
push
ss
dec
es
add
addr16
jecxz
icebp
icebp
sbb
or
or
pop
jns
pushf
arpl
pop
mov
add
add
xchg
push
and
jp
push
jo
or
inc
rorl
inc
rol
mov
mov
aad
jnp
js
cmpsl
or
int
cmp
mov
ja
loop
lcall
frstpm(287
sbb
adc
repnz
mov
mov
and
out
lods
sub
add
out
ja
mov
scas
and
ss
push
aam
add
inc
jp
dec
pop
lock
hlt
int3
and
inc
ja
movsb
push
add
push
pop
dec
sub
or
out
addl
jg
mov
movsb
scas
pop
out
lcall
mov
pushf
mov
adc
sub
ret
sbb
out
mov
ftst
lods
mov
lea
and
movsb
scas
dec
xor
cmp
inc
sub
inc
outsb
mov
inc
cmp
push
xchg
ss
pop
mov
inc
mov
pop
pushf
xchg
sub
sbb
aad
inc
shl
iret
fprem1
inc
mov
cmc
mov
dec
xor
dec
icebp
mov
xor
js
xchg
dec
dec
push
xchg
push
icebp
lret
loope
lods
test
pop
dec
xlat
decb
pop
scas
adcl
jge
sbbb
jmp
push
xorb
fcompl
mov
jle
xchg
sub
ret
jno
test
sbb
xchg
pop
sub
jne
jp
jbe
ficompl
or
xchg
fbld
mov
push
call
ficoms
das
dec
test
sbb
mov
cli
imul
mov
neg
pop
popl
mov
mov
jl
out
sbb
mulps
add
sbb
loop
ljmp
jns
add
sbb
mov
leave
mulb
push
fndisi(8087
inc
lods
out
jmpw
pushf
or
push
shlb
dec
shll
bnd
jbe
fistps
push
je
out
dec
pop
inc
cmp
push
pop
mov
mov
sbb
mov
daa
inc
jecxz
pop
movsl
lahf
xchg
cli
sub
repz
xchg
xchg
ret
mov
pop
call
add
adc
jns
inc
pop
shll
ss
sahf
cmp
or
insl
jmp
push
lea
scas
loop
test
mov
sub
inc
mov
pop
push
and
xchg
jecxz
push
and
cs
repnz
mov
pop
ja
shlb
pop
sbb
mov
insl
add
lahf
addr16
bound
pop
daa
or
push
cmpl
fstpl
xor
rolb
sbb
out
adc
leave
push
arpl
dec
cmc
push
ret
into
sarb
mov
add
rcll
add
cmp
pop
mov
pop
pop
leave
jl
or
or
lcall
and
mov
and
out
lock
xor
push
mov
lcall
addb
sbb
dec
rep
sub
int3
xlat
xchg
imulb
ljmp
inc
lds
sbb
push
pop
mov
mov
dec
mov
stc
imul
nop
jb
xor
or
push
or
sti
jp
subb
mov
imul
xchg
mov
test
and
lea
int
xchg
inc
jl
jno
mov
push
movsb
xor
mov
sub
mov
pop
mov
sahf
lock
push
punpckhdq
mov
push
addr16
sub
in
insb
push
adc
cli
int
ljmp
fwait
push
push
stos
rcrb
xor
mov
add
pop
cmp
push
aad
cltd
mov
orl
mov
xor
in
in
mov
insb
push
sahf
aas
cmpb
int3
incb
cmp
or
in
xchg
fwait
aaa
mov
in
out
mov
dec
cmp
mov
mov
test
cmp
shrl
jle
sbb
int3
pop
lds
clc
insb
pop
dec
cmp
fiaddl
mov
clc
xchg
dec
pop
mov
pop
hlt
lcall
test
jecxz
data16
adc
mov
push
jg
adc
mov
inc
jge
xchg
push
adc
gs
sbb
ljmp
enter
push
cwtl
nop
stos
cmpl
or
imul
mov
xchg
loope
inc
aaa
test
fidivrl
jp
push
pop
sbb
push
es
ja
fstl
bound
mov
mov
lret
je
sbb
push
push
add
add
fdivs
sbb
inc
push
ret
jne
and
bound
into
xor
cmp
int
ds
jb
xchg
lods
jp
cld
mov
imul
push
scas
jns
loope
lahf
ds
inc
xor
fdivrs
dec
sbb
mov
pop
jmp
aaa
imul
sbbb
lea
pop
push
ljmp
mov
mov
cmpb
xchg
cmpsl
adc
jbe
mov
add
inc
fs
rclb
cmp
inc
and
lcall
stc
imul
jmp
xchg
iret
loope
xchg
shrl
inc
xchg
cmp
loopne
idivb
sbb
xchg
push
imul
lods
jmp
dec
mov
out
leave
fmul
cli
icebp
push
cmp
test
ret
jmp
ljmp
adc
les
divb
add
mov
lcallw
sahf
mov
sbb
xor
test
stc
ja
les
das
scas
pop
jnp
sar
mov
ds
imul
jp
fisttpl
sub
dec
pop
cmp
gs
xor
or
insb
mov
std
adc
pop
mov
jle
shr
sbb
cmpsb
imul
sbb
lock
and
xor
ljmp
outsb
les
pop
push
in
scas
pop
outsl
add
repz
loopne
mov
sahf
ds
dec
ja
push
loopne
ja
je
mov
mov
popa
into
xchg
push
test
jo
cmp
test
xchg
pop
pop
repnz
cmc
push
mov
ret
mov
bound
jno
add
adc
fmulp
adc
out
ret
scas
rcr
or
sbb
lods
mov
cwtl
xor
sbb
mov
jp
nop
test
lds
jp
movsl
pop
mov
je
dec
xchg
inc
adc
sbb
imul
mov
stc
subb
rcrb
adc
dec
mov
jbe
fcmovbe
dec
rolb
cmp
lds
addl
sub
xchg
ret
out
add
adc
dec
scas
stos
mov
sbbb
inc
xchg
or
mov
aad
fldenv
int3
mov
cli
xchg
test
lcall
pusha
or
ds
aaa
mov
pop
sbb
shll
cmpsb
movsb
inc
lods
xchg
push
lret
les
cmpl
jb
cmpsl
cmp
mov
mov
mov
icebp
ret
call
addr16
adc
inc
jmp
jle
rcll
mov
pop
xlat
cmc
sbb
push
push
js
mov
mov
push
arpl
xchg
sub
push
push
in
mov
insb
roll
adc
jge
jbe
jns
shrb
adc
pop
fwait
adc
mov
xor
dec
and
jp
mov
sub
aam
mov
roll
jmp
ret
pusha
mov
mov
adc
cmp
jne
fs
mov
scas
pushf
cmp
jns
mov
cli
and
ss
ds
cli
aad
cld
dec
xchg
sbb
int
fimull
or
call
lcall
inc
mov
jge
push
push
xor
adc
popa
pusha
mov
mov
cld
add
inc
adc
in
ret
mov
and
dec
push
popa
rolb
jo
sbb
and
xchg
inc
xchg
rcl
bound
imul
mov
cmp
inc
pop
fisubl
dec
jb
mov
pop
cwtl
jne
mov
icebp
xchg
leave
inc
xor
and
adc
loope,pn
or
xor
push
lahf
cmp
popf
push
xlat
gs
pop
lock
mov
lahf
add
sub
stos
pop
rol
hlt
xchg
bound
orl
dec
les
dec
out
sub
mov
out
das
cmpl
jmp
repnz
ss
cmp
dec
dec
sbb
pop
jecxz
lcall
lret
mov
xchg
ret
fwait
xchg
xchg
fcoml
rcrb
xor
out
test
hlt
or
cmp
inc
push
cltd
mov
mov
mov
lcall
mov
cli
push
in
inc
mov
pop
popa
inc
dec
scas
and
jmp
pop
jns
repnz
lock
sarb
pushf
jne
in
lret
push
jmp
shr
sbb
cltd
dec
adc
jb
mov
xchg
sbb
test
icebp
mov
nop
and
daa
fs
dec
scas
and
vmovaps
inc
js
test
loope
adc
cmpsl
dec
mov
cmc
roll
add
bound
pop
shlb
lds
arpl
loope
lods
add
aaa
cli
std
rcrl
arpl
jae
dec
sbb
dec
test
push
out
incb
clc
addb
stos
cmc
push
inc
popf
and
push
iret
lods
jns
hlt
fldenv
mov
cmp
add
sbb
test
inc
repz
loopne
sub
test
repnz
sbb
mov
fsubrl
sub
sbb
push
cmp
mov
push
adc
inc
sarl
mov
out
insb
cli
scas
mov
jb
jmp
xchg
pushf
sti
pushf
push
sub
jno
lahf
dec
pop
aad
jne
jo
inc
in
js
sbb
fbld
je
cmp
and
cli
movsl
shll
ljmp
mov
xor
push
xor
adc
rcrb
and
mov
lods
add
test
movsl
add
outsl
pop
add
cmp
cmp
ds
in
inc
repnz
cmp
xor
and
movb
pop
mov
aaa
push
cmp
mov
cmp
mov
xchg
imul
js
mov
inc
mov
pop
das
dec
loopne
aad
lods
sbb
adc
mov
push
out
data16
lods
fcomip
add
dec
push
cmpsb
mov
shl
mov
xchg
add
sub
shrl
mov
jecxz
xlat
push
imul
scas
movsl
fs
cmpsl
and
dec
xchg
xor
fimuls
insl
dec
stos
dec
cld
xchg
dec
call
outsb
sahf
mov
jge
iret
sahf
xchg
aad
mov
outsb
popa
addr16
add
pusha
mov
adc
stc
jbe
rcrl
sbb
mov
mov
sbb
mov
jno
sbb
into
adc
jmp
dec
adc
rcrb
mov
jmp
jae
sahf
pop
mov
imul
or
mov
out
repnz
stos
ds
insl
dec
xlat
dec
sbb
adc
and
mov
mov
into
dec
cs
nop
loopne
rclb
lahf
inc
lahf
decb
data16
and
or
in
and
outsb
je
sbb
ftst
test
loopne
gs
or
xchg
add
sbb
cmp
lahf
sub
jae
mov
repz
outsl
inc
dec
subl
call
adc
xor
pop
or
rolb
sarb
adc
xchg
inc
pop
fimuls
ds
leave
mov
lea
push
mov
mov
sbb
fcom
cwtl
lea
xlat
mov
loop
into
fsubl
cmp
je
inc
sbb
insb
fsubrl
or
ss
repnz
cmp
stos
lcall
out
adc
call
frstor
mov
outsl
pcmpgtd
pop
mov
mov
push
pusha
iret
les
data16
jg
jecxz
sub
jmp
rol
fiadds
jmp
jnp
or
mov
out
nop
test
mov
xor
sub
xchg
xchg
fisubrl
or
mov
mov
out
sbb
roll
push
pop
and
adc
push
mov
mov
arpl
mov
xchg
pushf
pop
xor
mov
push
mov
hlt
out
mov
and
loopne
das
mov
test
imul
mov
mov
shll
pop
lea
sbb
aaa
inc
or
jle
pop
push
jb
lahf
push
push
rorl
xor
mov
jbe
movntps
test
mov
mov
mov
cld
and
pop
es
mov
cli
xlat
pusha
cmpsl
pop
dec
xor
push
leave
dec
xchg
mov
xor
pop
lret
fcoms
repnz
jl
push
test
mov
and
cmpsb
pop
inc
fisubrl
push
mov
test
push
mov
mov
push
add
imul
sbb
out
sub
mov
inc
shrl
std
pop
cld
mov
dec
sub
cwtl
jl
xor
negl
inc
xor
dec
xlat
pop
or
inc
mov
loop
dec
mov
jmp
xchg
mov
push
xor
cs
ret
dec
or
popf
inc
imulb
inc
pop
clc
jmp
inc
add
ret
into
cmp
loop
cs
push
mov
cmp
aas
es
sbb
aas
pop
xchg
out
ffreep
arpl
jp
add
mov
mov
or
add
out
test
inc
jno
pop
dec
test
movsb
loopne
fcmovnbe
filds
dec
cs
pop
loopne
sbb
stc
mov
cmp
stc
adc
inc
or
aam
jmp
outsl
sub
or
xor
inc
dec
stos
mov
mov
inc
push
lea
ret
mov
aas
xor
inc
into
test
xchg
icebp
jmp
out
lods
and
and
call
lahf
ja
sub
cld
add
sub
mov
jbe
jbe
sub
pop
outsl
xor
roll
mov
sbbl
jo
pop
mov
sbb
push
hlt
test
movsl
sbb
ss
mov
or
in
xchg
test
sub
mov
insl
out
jecxz
adc
mov
fwait
jo
adc
adc
std
aas
mov
pop
sbb
fwait
ds
push
and
ja
cwtl
negl
cmc
in
mov
cmp
loopw
test
into
fcomi
pop
push
mov
mov
gs
mov
je
cwtl
or
sub
cwtl
stos
fnstsw
jl
cli
in
jg
xchg
out
lahf
inc
push
sbb
adc
push
cmp
adc
xchg
inc
xchg
js
andnps
dec
test
movsl
stos
lea
lods
lret
ret
scas
jecxz
adc
fistl
sti
rcrb
inc
shr
mov
mov
leave
lahf
jo
loope
jno
mov
dec
push
sub
push
push
sbb
lds
mov
mov
shrl
lret
jno
pop
or
and
mov
shr
dec
jnp
scas
cmp
add
outsl
jp
pop
xchg
dec
add
les
lods
push
mov
pop
dec
jecxz
mov
dec
rcrl
xchg
xchg
xor
mov
mov
test
mov
lahf
xor
cmp
imul
and
stc
xor
jl
ja
jns
outsb
xchg
subb
clc
fstl
mov
pushf
mov
ds
rolb
stos
mov
and
and
fs
aad
lods
cmp
pop
imul
cmp
std
test
mov
xchg
mov
call
lods
cmp
jecxz
or
cmp
dec
cmp
jl
or
dec
aaa
sub
inc
jmp
inc
fwait
push
mov
lods
sub
sub
mov
adc
add
adc
sti
jae
shll
leave
mov
sahf
bound
pop
enter
aaa
push
cmp
and
and
inc
push
lods
and
mov
add
cmpsl
pop
out
enter
dec
adc
clc
mov
lock
es
mov
or
mov
or
push
and
jne
mov
add
add
aaa
lcall
lret
xor
fdiv
popa
stos
xchg
ficoms
push
in
nop
push
in
enter
push
jle
fdivrs
ret
mov
mov
cmpsb
lahf
mov
pusha
or
pop
push
iret
push
pushf
cli
inc
cmpl
push
imul
and
inc
aaa
add
pop
iret
sub
cltd
xchg
push
loop
test
adc
xor
iret
arpl
iret
cmp
dec
sti
jp
cmc
adc
dec
ret
and
mov
out
pop
adc
popf
push
xchg
daa
or
js
xor
cmp
jge
xor
inc
cltd
push
cmp
sub
push
out
pop
inc
push
sbb
ss
jecxz
dec
xchg
and
or
in
rolb
ljmp
les
cli
inc
mov
cmpl
push
je
iret
or
sub
mov
lcall
push
mov
inc
scas
in
mov
bound
aam
pop
pop
sbb
enter
loopne
shl
iret
decl
cs
mov
in
cs
dec
test
out
jb
les
fwait
push
lods
mov
mov
call
jae
out
mov
aam
mov
push
movsl
push
xchg
es
pop
imul
and
sub
popa
inc
inc
jmp
jle
mull
jp
add
adc
ss
lcall
mov
mov
sbb
fwait
xchg
sub
aad
or
ret
movsl
rol
shrl
test
push
mov
sbb
fadd
dec
and
sub
xchg
inc
ds
aam
loope
leave
push
jbe
repz
mov
testb
push
pop
lods
imul
lea
fisttps
inc
nop
leave
mov
xor
cmp
adc
in
push
shr
pop
jb
sub
xchg
xor
and
mov
int
cmc
and
call
leave
addl
test
push
je
out
cmpsb
rcll
lea
lcall
add
gs
xor
jns
pop
mov
pop
faddl
jo
leave
das
mov
and
jo
in
int
sub
shlb
and
xor
xchg
inc
fistpl
sub
vaddps
add
pop
les
push
jp
xchg
inc
inc
out
xchg
test
cmpsb
data16
in
sub
push
repnz
add
rcl
enter
xchg
test
sub
dec
mov
push
out
cmp
mov
mov
jb
lcall
mov
mov
mov
mov
jne
leave
lcall
fucomp
cmp
loop
jno
adc
cwtl
push
pop
sahf
sub
xchg
in
mov
cmp
mov
js
shlb
in
sahf
lret
mov
fcmovnbe
rorl
sbb
add
std
xchg
add
mov
mov
push
pop
or
mov
out
push
mov
dec
out
pop
or
mov
fs
fstpl
das
out
ret
sarb
xor
dec
mov
adc
or
js
fistl
shrl
js
xor
push
movsb
movsb
fucomp
icebp
xor
aaa
fwait
fwait
sarb
add
lcall
xor
jb
sti
or
sub
cwtl
mov
addr16
and
js
pop
sub
loop
in
push
sar
sti
mov
cmp
insb
xor
loop
push
pop
dec
mov
sbb
jbe
mov
pop
imul
cwtl
jbe
xor
mov
jl
lock
mov
fnstcw
pop
sub
add
mov
cmpb
sahf
sbb
xor
orl
xchg
sbb
enter
mov
push
stos
or
cmp
inc
idivb
daa
push
jno
mov
sbb
loop
or
test
cmp
pop
lock
mov
nop
mov
pushf
fistpll
jp
mov
jmp
into
int
pusha
mov
cli
out
jg
ja
loopne
outsl
adc
arpl
adc
mov
cld
xchg
xchg
or
out
or
lahf
pop
dec
ja
arpl
ret
and
jb
pop
jbe
mov
idivl
aaa
sub
cmc
xchg
mov
std
lods
imul
shl
movsl
adc
jmp
aad
jno
test
sub
in
mov
sbb
cmpsl
xor
stos
shlb
jg
xlat
mov
movsl
mov
dec
popf
aaa
notb
jae
xor
repz
pop
mov
push
jns
mov
dec
jns
inc
es
ss
mov
sbb
sbb
inc
xor
xlat
sbb
lret
movsb
test
jmp
jmp
or
push
lcall
cmp
sub
popa
or
jae
sbb
mov
lock
and
jg
jl
or
std
or
ss
mov
sarl
xchg
clc
jg
mov
xchg
scas
mov
sbb
mov
xor
repz
stos
jnp
icebp
in
test
mov
pop
dec
adc
in
bound
add
add
push
xlat
jns
adc
lret
dec
mov
das
mov
decl
es
arpl
insb
xchg
in
aam
adc
or
stc
cld
leave
xchg
xor
jne
jecxz
call
imul
stos
loop
cmp
daa
fisubrl
movsb
testl
sti
sbb
int
push
ret
fstl
mov
dec
sahf
pop
rcl
es
mov
bound
jne
fsubrl
xor
fistps
test
push
imul
cs
adc
cltd
in
mov
sahf
mov
jae
mov
xlat
add
xor
jle
scas
pop
xor
imul
in
loop
rolb
loope
sahf
arpl
aaa
mov
les
fldenv
clc
mov
or
sbb
fwait
popf
bound
aam
inc
std
dec
aas
aas
jnp
cmp
hlt
xor
in
add
fstpl
loope
cmp
fistpl
shlb
dec
mov
sub
add
sub
pop
out
lahf
and
dec
outsb
frstor
aaa
mov
mov
pop
popa
xchg
mov
pop
mov
popa
mov
vmulsd
or
movsl
mov
jbe
pop
mov
in
push
mov
adc
or
xor
or
lahf
pop
loope
pop
cs
ljmp
push
mov
lea
hlt
hlt
cmc
xchg
jle
mov
xchg
xor
sub
inc
mov
jp
in
imul
add
dec
arpl
call
popf
jmp
rorb
xor
inc
lods
mov
xchg
pop
ja
std
lds
pop
ficomps
scas
cmpsl
or
and
xchg
jp
sar
xchg
inc
test
push
fs
fists
dec
xor
es
iret
adc
fwait
in
push
xor
pop
mov
xchg
push
push
pushf
mov
mov
negb
fwait
mov
xchg
adc
lods
arpl
insb
popf
rcr
mov
sti
and
mov
outsl
mov
mov
mov
push
mov
pop
test
inc
incb
pop
pushf
sbb
sahf
popf
add
mov
cmp
ds
push
dec
adc
xor
fcoms
ret
iret
aad
add
mov
push
mov
pop
out
les
insl
decb
mov
shlb
repnz
mov
mov
clc
stos
mov
xchg
inc
inc
in
mov
push
inc
testb
and
xchg
sub
or
pop
adc
inc
ss
loopne
xchg
and
dec
push
dec
mov
sbb
add
sbb
mov
sahf
dec
popa
pop
repz
outsl
add
dec
ds
cmpb
es
testl
imul
dec
daa
pop
cwtl
ljmp
push
es
push
clc
sub
mov
cmp
mov
mov
push
ljmp
mov
and
cmc
bound
cld
mov
add
call
adc
scas
xor
sbb
add
pushf
dec
insl
in
sbb
rcrl
add
mov
inc
push
das
shll
sbb
aas
out
add
lahf
inc
out
sahf
sbbl
inc
movsl
ja
pop
sbb
ret
jl
cltd
fiadds
call
loopne
popf
aad
xor
mov
inc
mov
fisubrs
sahf
ret
or
mov
or
inc
leave
sahf
loope
xchg
add
mov
enter
sub
aas
iret
add
stc
hlt
pop
jno
xor
aaa
filds
dec
inc
imul
shl
fidivrs
bound
popa
mov
cs
lods
sahf
or
mov
dec
jbe
mov
xchg
sbb
mov
in
data16
lret
push
and
pop
lcall
jb
sub
inc
mov
mov
inc
fisttps
push
clc
add
mov
cmp
or
add
mov
dec
mov
xor
ret
dec
mov
sub
lods
mov
dec
sbb
pop
or
inc
sbb
ficomps
popw
int3
hlt
jge
mov
outsw
ljmp
pusha
push
dec
rcr
cmp
cmc
or
icebp
mov
add
sbb
xor
push
jne
mov
and
gs
rcr
pop
xor
inc
dec
loop
push
lods
sbb
popa
xor
dec
inc
xchg
adc
les
jmp
push
imul
dec
sub
pushf
int
stc
pop
mov
mov
mov
xor
push
outsl
pop
daa
or
push
addl
xchg
add
es
int3
inc
mov
fs
movsb
shll
lds
dec
cmpsl
rclb
add
into
icebp
mov
idiv
call
push
out
cmc
push
adc
cmp
movsl
push
pop
out
mov
or
es
lret
lds
ljmp
ds
enter
fidivs
std
or
or
ret
add
lock
inc
ja
jp
and
lret
fs
push
push
or
ds
and
inc
push
mov
dec
fisubrs
sub
ret
into
adc
hlt
shrb
pop
psrad
stos
fimull
jns
inc
pop
scas
mov
scas
insl
mov
mov
sahf
jo
or
mov
mov
push
jb
fldenv
in
shll
movsb
test
cmc
dec
in
lahf
outsl
adc
insl
xor
mov
addr16
cmpb
mov
inc
or
outsl
popa
std
sbb
mov
dec
pop
inc
inc
inc
lea
pusha
and
or
ret
and
jbe
xchg
sub
mov
cmpsb
mov
cld
xchg
inc
push
cltd
cmp
jnp
sub
jbe
lods
mov
addr16
xlat
mov
sbb
pop
repz
push
cwtl
sbb
mov
test
xchg
test
andl
es
sub
es
int3
les
test
popa
ja
int3
jno
pop
push
xchg
mov
sub
cmpsb
dec
arpl
pop
sbb
fsubp
pop
pop
jnp
stos
pop
popf
cld
sub
or
pushf
pop
das
sbb
lock
mov
js
and
test
incl
adcb
inc
cmp
fldl
xchg
inc
mov
outsb
jp
mov
imul
jmp
and
rorl
out
push
jnp
and
mov
mov
in
adc
jnp
hlt
mov
cmp
nop
dec
push
cmp
insb
jl
xor
into
adc
divl
lods
into
fs
cmpsl
testb
hlt
add
and
pop
lods
scas
test
pop
mov
clc
jns
push
dec
out
mov
xchg
lea
jl
outsb
push
fsubrs
fs
popf
filds
sub
subb
ja
enter
mov
sbb
insb
lods
or
sbb
pop
int
aaa
popa
dec
call
inc
cmpsb
xor
out
cmp
std
pop
xor
pop
add
hlt
insl
cld
add
jl
das
add
xchg
sbb
fwait
xchg
lods
mov
mov
hlt
rcrl
sti
pop
sub
xor
adc
aam
sub
sub
sub
push
xchg
in
mov
outsl
icebp
insb
jge
push
scas
mov
ss
mov
test
pop
mov
das
ljmp
add
rol
mov
mov
icebp
xor
inc
pop
inc
rol
push
lret
repz
fisubrl
sbb
dec
add
addl
inc
push
mov
stc
pop
loopne
ljmp
pop
std
cmpsl
nop
xchg
iret
fldln2
inc
sbb
lods
push
push
sahf
mov
jl
stos
jns
imul
aas
dec
dec
mov
lret
sbb
pop
mov
cmp
or
out
cmpsb
fs
movsb
scas
pop
xor
cwtl
das
stc
arpl
sbb
sbb
fwait
push
xchg
xchg
dec
jno
mov
inc
mov
lret
into
packssdw
clc
fldenv
insl
push
scas
sti
or
or
lods
xorl
inc
push
and
in
scas
cwtl
and
jmp
lret
push
int3
mov
divb
pop
rorb
sub
loopne
jae
hlt
cmp
jb
inc
or
test
stc
dec
sub
mov
mov
mov
or
xor
outsl
pop
sti
jecxz
push
xor
mov
jo
mov
loop
and
sub
rcrb
pop
mov
cwtl
cltd
adc
push
repnz
cld
jecxz
mov
test
pop
mov
insb
popa
inc
sarl
pop
shlb
mov
mov
dec
fisttpll
adc
jmp
stos
xor
xor
cs
ljmp
leave
pop
sbb
insl
int3
rclb
mov
mov
arpl
adc
jae
decl
roll
lods
xchg
jl
loopne
cmc
dec
aad
in
mov
pop
jno
stc
mov
mov
mov
mov
insb
mov
jl
cmp
cmpb
or
nop
movsl
jle
fwait
mov
sbb
mov
mov
lret
lock
in
fisubl
sarl
lret
push
fstpl
push
jmp
cmpsb
push
jnp
insl
sarb
add
xchg
scas
cmp
mov
xor
ljmp
add
stos
rclb
xlat
into
mov
mov
cmc
xor
cwtl
out
sbb
fistpll
pop
pop
and
jecxz
stos
jne
sub
jp
mov
imul
int3
mov
jmp
es
push
cmpsb
mov
filds
lret
add
sbb
ror
nop
icebp
jp
mov
jecxz
sbb
ja
loop
jecxz
adc
outsl
cmp
in
lods
inc
sub
pop
jae
arpl
and
mov
inc
les
pop
lcall
mov
mov
mov
mov
arpl
mov
push
xchg
sub
bound
cli
pop
xor
repnz
into
leave
fucom
ss
movsb
xchg
push
push
dec
lds
pop
pop
inc
or
jae
aaa
mov
das
rorl
std
mov
sbb
fucomp
and
or
xchg
inc
inc
mov
push
sub
cmpb
sbbl
dec
xchg
jae
lods
jae
test
popw
sub
jg
into
scas
add
dec
cs
adc
test
mov
lss
dec
mov
lods
fldcw
cmp
fs
ds
or
mov
adc
hlt
adc
ss
pause
jbe
push
dec
sbb
lods
jbe
imul
hlt
push
sub
sti
or
test
mov
cmp
adc
push
test
mov
fstpl
or
push
andb
fs
out
bound
enter
push
test
ret
xor
dec
dec
aad
dec
call
cmc
jae
gs
iret
imul
ja
fs
in
mov
xor
xchg
dec
outsb
and
adc
cmp
lds
jmp
push
cmpsl
call
in
push
fcoms
mov
push
push
mov
hlt
sahf
stos
callw
mov
stos
and
loop
mov
jnp
xor
imul
inc
and
push
xor
add
sbb
or
and
pop
data16
imulb
cmpsl
pop
lock
scas
adc
shl
mov
add
adc
imull
push
lods
cmp
es
out
pop
cmpsl
and
dec
fwait
mov
mov
je
movl
mov
sbb
test
pop
movsl
das
rolb
xor
fwait
mov
push
sbbl
jno
fidivrl
sbb
pop
aam
adc
sti
xchg
jno
out
call
pop
out
mov
pop
clc
jno
pop
divl
js
sub
scas
push
outsl
xor
sub
mov
imul
ss
jnp
addr16
cltd
decl
ljmp
push
pop
call
ret
xchg
push
jg
lret
iret
icebp
sub
pusha
xor
mov
xchg
add
lods
iret
adc
xchg
cmp
mov
xor
sahf
pop
insl
jmp
es
jge
pop
push
clc
lock
dec
xor
in
lock
pop
fldt
aad
gs
xchg
cwtl
adc
pop
xchg
pop
mov
push
cld
ja
rcrl
pop
add
cmpsb
and
lret
mov
cmp
mov
or
arpl
xchg
mov
lret
jmp
xlat
loope
orb
cmpsl
cld
xchg
sbb
outsl
dec
rorb
sbb
add
mov
out
cmc
sbb
sub
or
ds
sbb
call
xor
lods
test
aad
jle
subb
inc
add
cli
ds
dec
sub
mov
ds
aad
sub
pusha
fisttps
mov
jl
add
or
mov
insl
jecxz
sbb
popf
scas
xor
fldenv
fdiv
scas
in
outsl
inc
bound
stc
sbb
mov
jg
dec
pop
hlt
dec
mov
lock
sbb
gs
dec
jg
mov
inc
xchg
lret
xlat
lods
cmp
movsl
stc
inc
jns
jmp
fcompl
sub
jns
les
popf
sbb
pusha
leave
sbb
es
inc
jbe
and
addr16
insb
dec
cmp
jb
push
ret
adc
out
mov
adc
mov
es
sub
xor
lret
xchg
into
and
or
and
add
mov
adc
or
xor
ljmp
out
insl
mov
scas
movsb
mov
push
push
fsts
pop
or
push
mov
sar
mov
addl
sahf
shll
inc
xchg
loope
cmp
enter
xor
mov
repz
les
sub
mov
repnz
test
rcrl
sbb
jbe
adc
or
stos
push
nop
hlt
shl
xchg
orl
mov
icebp
dec
xchg
adc
jbe
mov
jle
lret
fs
dec
push
sti
es
push
jo
xchg
lods
lret
sbb
push
aam
xrelease
into
and
stc
scas
sbb
pop
pusha
add
add
sbb
sbb
push
cmp
jnp
enter
ret
sbb
mov
scas
aam
push
fstpt
sbb
cltd
addb
or
out
inc
jne
inc
sbb
inc
adc
inc
mov
fwait
cld
xor
xlat
clc
negl
mov
cmpsb
int
cmp
inc
mov
sbb
in
xchg
out
pop
and
mov
xchg
push
push
cli
jns
pop
fs
gs
mov
lret
rcrb
adc
mov
adc
and
xor
popf
js
dec
sbb
inc
mov
sub
or
dec
icebp
and
daa
sub
and
cwtl
xchg
ret
ret
push
aad
cltd
nop
sub
pop
into
fldl
dec
pop
je
inc
xchg
xchg
daa
jecxz
xor
inc
mov
test
mov
push
into
pop
add
jle
xor
push
xor
xchg
mov
int
sub
jne
mov
enter
add
ljmp
outsl
mov
xchg
arpl
adc
mov
nop
or
test
add
xor
adc
or
mov
or
or
mov
or
test
lahf
lcall
jb
int
or
sub
ds
clc
in
jmp
fiaddl
jne
pop
xchg
cmp
into
es
jge
mov
xchg
push
mov
loopne
rolb
fs
add
loop
fldt
dec
xor
mov
in
cmp
pop
aam
insl
mov
shl
cmpsl
cld
lret
cltd
xor
sub
mov
scas
xor
cld
xchg
pop
jnp
sbb
les
insb
add
xlat
loope
push
mov
addb
call
mov
jb
mov
lock
xorb
push
inc
xchg
test
shrb
stos
or
and
aam
mov
pop
loop
out
sub
lcall
jmp
cmc
cltd
mov
jns
notl
loopne
adc
cmp
lea
cmc
addb
mov
es
movsb
mov
xchg
push
leave
sti
insb
out
push
popa
faddp
addr16
mov
jmp
sbb
out
fiadds
lea
inc
sub
rol
out
popa
pop
cmc
test
mov
adc
shlb
pop
outsb
add
push
inc
movsb
cmp
mov
xchg
push
adc
cmc
lret
cmp
in
inc
mov
out
outsb
cmp
jl
sbb
and
pop
aaa
and
sub
lret
dec
dec
lods
lahf
lock
sub
dec
push
mov
and
fcoms
sub
push
sbb
pop
jbe
stos
out
gs
dec
dec
mov
mov
nop
dec
or
xchg
mov
fistps
repz
neg
jo
mov
push
shrb
bound
into
add
jae
add
sti
push
aam
xchg
push
xchg
jle
adc
cld
xchg
ret
xchg
pusha
bound
pushf
mov
push
hlt
mov
xchg
pop
push
jno
mov
addb
pop
popf
daa
bound
dec
or
in
gs
shll
cmpl
dec
adc
mov
mov
fwait
or
xchg
in
or
sub
ds
stos
lahf
sub
adc
stc
pop
push
into
test
pop
out
or
adc
jne
gs
test
jo
dec
xchg
ja
xchg
push
mulb
sub
and
sbb
or
movntq
xchg
ror
pusha
xor
jle
fstpl
outsl
xchg
jle
daa
jo
fs
loop
movsl
cmpsl
shrb
decl
popf
xchg
jno
pop
and
push
test
push
push
jnp
sahf
loop
xchg
lret
enter
insb
add
mov
fldl
and
inc
and
dec
push
and
xchg
je
and
or
push
cmp
clc
sahf
jle
pop
lret
or
gs
jmp
xchg
stc
jmp
push
or
push
addl
repz
ret
inc
sub
das
aaa
and
jns
add
out
mov
jnp
sbb
scas
inc
push
outsl
dec
push
cmp
jecxz
mov
es
stos
jb
das
scas
mov
mov
cli
ret
sbb
pop
mov
adc
and
xorl
fld
or
and
aad
out
clc
jno
repnz
in
mov
xchg
mov
fcoms
daa
cld
push
sub
dec
bound
aad
mov
or
cli
outsl
mov
ja
jg
push
cli
mov
ja
mov
leave
in
lret
push
mov
int3
jp
mov
jae
fnstenv
int3
cmp
and
jo
cmp
arpl
rcrl
ret
outsl
enter
loope
or
adc
outsb
adc
sbb
sub
jne
sbb
sbb
dec
enter
xchg
cmp
xchg
shr
xchg
cli
hlt
dec
or
push
test
pop
xor
adc
lea
ss
pop
out
push
xchg
adc
test
mov
adc
jg
adc
cmpsb
or
ret
and
sub
imul
cs
out
cmpsb
lock
cltd
loop
ja
xchg
jmp
sbb
prefetcht2
sbb
test
xchg
jne
xchg
adcb
jecxz
mov
nop
fwait
xor
cmpsl
mov
loope
push
push
cmpsl
scas
sbb
arpl
push
xchg
insb
mov
sub
jp
mov
aas
or
rcrl
nop
sbb
jmp
insb
test
movsl
mov
movaps
jl
mov
sbb
push
jl
mov
xchg
mov
stos
test
or
xchg
sub
out
cmpsb
xor
add
and
inc
push
movsl
pop
inc
push
jbe
mov
push
loope
movsb
inc
lcall
aas
jbe
inc
inc
dec
xchg
mov
add
adc
lea
pop
adc
pushf
leave
rclb
fsubrl
xchg
dec
cmp
addb
sbb
and
mov
and
mov
push
mov
inc
mov
je
ret
add
jae
das
orl
xchg
popf
cwtl
jae
cmp
stos
outsl
push
or
daa
inc
xchg
repz
frstor
jp
mov
jns
outsl
xor
cmpsb
push
sub
mov
jbe
jecxz
xor
scas
xor
ds
mov
lea
jnp
scas
inc
test
xor
iret
cmpsb
cmpb
cmp
lret
mov
sti
or
adc
leave
adc
ror
xor
and
aaa
loope
xor
pop
mov
sub
mov
sbb
or
addr16
adc
enter
pop
lock
aad
in
push
addb
mov
shlb
ljmp
mov
sbb
push
mov
mov
popl
insb
fwait
add
xor
adc
inc
out
shlb
fsubr
loopne
lcall
inc
jo
xchg
mov
stos
mov
sub
jg
xchg
mov
test
mov
push
sub
dec
sub
into
cmc
repnz
mov
in
xchg
dec
cld
push
sub
sub
ljmp
les
add
cs
arpl
sti
push
push
jecxz
cmp
push
pop
insl
inc
inc
mov
insb
xchg
pop
movsb
dec
ss
mov
aad
das
aad
je
aad
addr16
inc
cli
or
int
aad
adc
ja
xor
push
pushf
jbe
shlb
xor
push
dec
mov
jno
mov
repnz
xchg
imul
jae
js
clc
mov
scas
add
inc
sub
sbb
inc
daa
mov
jecxz
xor
cltd
or
jg
xchg
jecxz
and
mov
shll
push
push
out
xchg
jp
xchg
daa
xchg
mov
rol
lcall
fadd
and
insl
cmp
add
insl
testb
xor
add
xchg
fs
ds
add
inc
or
cmc
inc
adc
xchg
inc
lods
cwtl
mov
clc
xor
mov
adc
scas
pop
call
pop
sti
push
mov
shrb
mov
mov
mov
mov
rcll
xor
and
cmp
cmc
cwtl
movsb
fdivr
sub
mov
rclb
scas
movsl
cmp
lret
les
inc
xor
add
mov
adc
dec
push
movsl
jno
add
cmp
mov
cmc
decb
jno
push
adc
cmp
pushf
lea
push
push
jno
rcr
sub
xchg
add
stos
stos
mov
sbb
insl
mov
and
xor
imul
das
mov
shrl
mov
jno
sarl
and
jmp
pop
dec
inc
cwtl
xor
aas
mov
cmp
es
jg
imul
dec
les
lea
jecxz
adc
and
mov
dec
stos
push
lds
jae
lods
and
lods
mov
in
test
push
adc
test
jle
jmp
sub
mulb
and
sub
std
inc
push
popf
icebp
dec
xlat
mov
dec
xor
cmpsl
cmp
sub
mov
lds
adc
mov
push
in
add
jbe
adc
add
into
sub
add
add
xlat
or
aaa
fadds
jne
sbb
sub
push
and
in
xchg
adc
add
aad
fidivrl
xor
add
sbb
call
lods
xchg
test
mov
adc
push
aaa
ljmp
js
dec
add
push
xchg
xchg
mov
xadd
push
or
sbb
mov
push
dec
ss
outsl
xchg
ja
sub
adc
dec
jecxz
push
in
adc
xchg
cmp
bound
jb
push
pop
out
int
xor
movsl
mov
adc
sub
fadd
mov
ja
insb
pusha
pop
mov
fs
inc
or
test
push
mov
adcb
scas
scas
pop
cld
cmpsl
or
mov
stos
arpl
mov
push
pop
jmp
jno
add
xlat
bound
int
pushf
aad
and
call
xor
call
pushf
lods
pop
adc
xorb
sub
outsl
pop
sub
cmpl
fbstp
insb
push
int3
xlat
mov
cmc
and
mov
mov
push
fistpll
mov
int
pop
mulb
lds
popa
mov
mov
sahf
cmpsb
inc
in
mov
test
sbb
loopne
mov
inc
xchg
sarl
outsb
push
pop
adc
push
mov
shlb
sbb
cmpsb
or
cmp
push
iret
sbb
xor
leave
push
inc
pop
out
pop
xor
and
xchg
cmp
sub
jmp
inc
ret
sbb
fs
jbe
in
pop
mov
popl
std
loopne
out
xor
ret
or
mov
addr16
stc
mov
cs
ljmp
mov
mov
stos
or
and
std
data16
cmp
pop
add
icebp
pop
mov
insb
mov
inc
sbb
ret
mov
mov
and
push
jno
jno
or
arpl
fsubs
nop
mov
pop
insl
sub
ret
bound
jo
or
clc
jae
fnsave
adc
sub
xchg
adc
cmpsl
and
xlat
and
mov
jae
les
rcll
adc
cld
inc
dec
scas
mov
repz
xchg
push
stc
mov
pop
lcall
add
fdivl
xchg
ficoml
jb
fistpll
enter
imul
mulb
mov
jo
xchg
scas
cmp
adc
jge
aas
hlt
cmp
sbb
add
push
arpl
lcall
cmp
mov
js
iret
push
dec
pop
inc
insl
std
les
add
sbb
fcomps
mov
ret
scas
rclb
or
xor
outsl
clc
mov
out
add
jns
or
mov
stc
movsb
clc
mov
call
xchg
mov
mov
cmpsl
dec
imul
add
in
sbb
das
xlat
sbb
movsl
scas
mov
sub
cld
mov
pop
and
pop
ret
cs
add
test
and
dec
inc
mov
jle
sbbb
sahf
out
repz
pop
pop
push
or
sahf
popf
sbb
lret
mov
roll
push
clc
dec
js
fs
sub
adc
ret
lds
cmc
sub
mov
sbb
xor
scas
jge
mov
icebp
or
in
mov
adc
adc
mov
cmp
fisttpll
lahf
in
mov
daa
push
insl
mov
xchg
popf
sbb
and
lock
sbb
push
jbe
xchg
dec
pop
add
jmp
andl
aaa
push
fcmovb
shl
sbb
push
bound
int
dec
call
daa
sbb
sub
xchg
xor
mov
aas
xorl
sbb
cmc
jae
fbstp
lret
jno
stos
in
xor
es
insl
mov
pushf
mov
in
mov
jg
jg
fistpl
dec
pop
push
ss
sbb
cmpsl
or
or
sbb
movsb
cltd
test
mov
outsb
fstps
pop
mov
mov
jns
or
lahf
cmp
add
fildll
xor
iret
push
ficoms
shrb
xor
sbb
mov
aas
lret
push
call
cmp
loop
xchg
push
or
sbb
je
neg
push
or
jle
ja
std
or
push
pushf
dec
jge
dec
sub
xchg
cmpsb
loope
xchg
sbb
mov
dec
fidivs
and
sbb
pop
pusha
push
push
test
or
lret
jne
sbb
push
dec
jecxz
xchg
jp
jnp
leave
adc
xchg
addb
sahf
dec
xchg
fstpl
lea
mov
mov
or
sbb
dec
fmuls
jmp
jle
mov
fcoms
push
nop
faddl
xchg
sub
in
imul
jae
mov
fsubs
add
fnstsw
xlat
loop
or
pop
jp
adc
xor
dec
adcl
xor
push
push
sbb
cmp
dec
dec
push
mov
add
test
cmp
lods
jne
jns
push
adc
dec
test
lret
xor
push
shlb
stc
dec
ret
cmp
pop
aam
mov
add
lods
outsl
and
mov
jl
pop
loop
cmp
adc
jg
xor
sbb
adc
cmpsb
or
cmp
fdiv
mov
les
jge
inc
and
ror
icebp
shlb
mov
mov
xor
jl
cmp
add
in
xchg
jnp
lods
mov
test
jle
push
pop
inc
adc
ja
rolb
test
push
cmpsl
mov
cmpsb
call
push
ljmp
loope
outsl
xor
inc
out
dec
into
mov
pop
push
js
ss
dec
std
outsl
out
daa
push
push
dec
clc
aas
mov
pusha
test
or
movsb
mov
mov
icebp
jae
jmp
test
push
mov
add
aaa
push
gs
mov
mov
mov
imul
mov
and
add
pop
mov
jmp
clc
cli
in
outsb
scas
jb
sti
jl
test
inc
push
shl
cmp
ljmp
cmp
and
test
dec
test
xor
out
or
cmp
test
lret
cs
xchg
inc
aam
mov
lea
lahf
jmp
xor
imul
jmp
mov
pop
ljmp
aas
je
jnp
adc
aad
aas
addr16
jecxz
sbb
mov
fmull
imulb
sar
mov
mov
outsl
xor
adc
icebp
ja
rcl
arpl
test
and
ret
pop
cwtl
stc
sbb
xor
ficomps
xor
daa
lds
addb
and
add
repnz
xlat
cmp
in
test
add
ss
shll
pop
addr16
sarl
fs
push
leave
in
jge
mov
mov
shrl
xor
cmpsb
mov
leave
out
shr
xchg
adc
sbb
mov
negl
sub
pushf
cli
in
add
pop
mov
scas
push
and
mov
xor
add
pop
mov
fstpt
add
dec
inc
dec
xchg
das
pop
test
mov
fs
xor
xchg
jge
sar
mov
xchg
ret
lock
sbb
and
push
sbb
cld
loope
dec
cld
pop
jbe
dec
sbb
in
push
cmp
add
and
pop
in
jne
js
add
mov
mov
xor
sub
cmpsl
pop
ret
inc
ljmp
in
add
xchg
sahf
mov
cltd
xchg
scas
pop
xchg
inc
jg
sbb
cmp
pop
mov
mov
or
test
push
mov
sub
fwait
add
mov
leave
cmp
cmp
add
jp
or
mov
add
jge
mov
mov
sbb
xor
shl
fisttps
mov
pop
xor
pop
shll
stos
pop
inc
adc
aaa
inc
xchg
aas
int
shrb
shlb
pop
repz
fsubr
leave
leave
inc
xorl
test
push
rcrb
and
sub
cltd
mov
std
xor
adc
rol
lret
notb
iret
xchg
xor
push
stos
sub
leave
dec
test
jle
clc
dec
xor
cmp
cmp
jmp
fs
inc
sub
gs
push
jbe
repnz
and
push
mov
xchg
push
mov
jae
jae
bound
push
mov
add
nop
popa
int3
out
push
lea
mov
icebp
mov
fisttpll
inc
or
cltd
or
push
clc
push
mov
xchg
sub
movsl
mov
cmp
cwtl
test
push
inc
ljmp
inc
enter
jo
mov
ja
sub
jo
sarl
lock
aaa
nop
scas
xor
fsubrp
ljmp
cltd
mov
fsubr
jns
aad
test
out
sbb
cmp
pusha
mov
imul
lods
xchg
js
movl
jge
or
mov
and
adc
imul
arpl
xor
int
fwait
movsb
in
out
push
popa
fsubl
mov
add
mov
inc
icebp
jb
divl
cmp
rorw
adc
subb
xchg
fsubrl
out
xchg
sbb
mov
fsub
xlat
call
mov
ss
dec
and
dec
xor
push
xlat
test
and
test
add
sbb
cwtl
cmc
cmpl
pop
mov
mov
push
xchg
cmp
or
test
sub
jns
pop
push
sbb
sbbb
push
push
fstl
pusha
cltd
lock
or
pusha
lods
arpl
subl
adc
mov
push
fs
sbb
sub
out
inc
sub
insl
retw
outsl
ret
add
sbb
dec
mov
pop
sub
out
xchg
sti
adc
hlt
ret
cmp
shll
push
cwtl
lcall
xlat
add
lods
test
out
pop
ss
fwait
xor
bound
xor
out
jecxz
and
mov
negl
sbb
mov
bound
cmp
ss
leave
push
jbe
sbb
int3
rol
sahf
xor
sub
movsb
movsb
add
pop
cmp
mov
inc
int
adc
xor
pop
mov
cltd
and
adc
es
xchg
daa
cli
push
addr16
shrl
xchg
mov
jp
adc
cmpsl
xor
jge
mov
jno
sub
dec
data16
add
mov
ss
nop
xor
iret
scas
mov
jmp
subl
jle
pop
sub
mov
pusha
xor
sub
mov
jg
shlb
dec
outsl
ret
lods
mov
out
dec
lock
inc
and
fisubl
sub
aas
adc
xorl
es
cmp
jmp
adc
jno
mov
push
xor
dec
mov
mov
mov
sbb
mov
push
cmc
inc
dec
push
mov
add
xchg
ljmp
faddl
adc
out
inc
add
or
out
adc
sbb
inc
sbb
popf
idivb
movsl
roll
in
and
imul
enter
mov
cmp
mov
jle
mov
lods
lods
push
stos
mov
outsl
mov
mov
cmp
pop
inc
into
xor
add
push
lods
in
or
cltd
sbb
xchg
pop
sub
push
popf
arpl
adc
jp
es
mov
sarb
sar
push
sbb
adc
daa
pop
sub
jmp
scas
jno
push
ret
pop
xchg
sti
loop
lahf
insb
orl
inc
cmp
jp
data16
push
push
mov
rcll
fld
jecxz
jp
sbb
cmp
add
sub
dec
mov
inc
jmp
add
clc
js
fistl
sbb
adc
xchg
add
shrl
orl
stos
mov
sbb
arpl
call
mov
test
lahf
adc
in
mov
jp
int
aaa
adcb
cmp
insl
pop
addr16
push
jp
lock
push
inc
cltd
xchg
rol
popf
loop
mov
fisubl
ss
inc
cmovae
scas
pop
mov
subb
inc
lahf
push
jecxz
in
lods
sub
mov
xchg
jno
jnp
xchg
imul
xor
cli
aam
dec
jmp
lret
jmp
pop
scas
outsl
scas
popa
loop
mov
pop
neg
cld
sahf
into
and
lods
jecxz
std
cli
xchg
inc
in
push
scas
add
mov
cld
add
bound
cld
int3
jns
adc
cmpsl
xchg
repnz
jbe
test
arpl
shlb
mov
xchg
sbb
repnz
decb
jecxz
sub
mov
in
sub
divb
pop
cltd
jmp
sbb
dec
push
fdivs
cs
sbb
test
leave
xor
sbb
leave
int
lcall
dec
cmp
mov
idivb
gs
loop
or
call
divb
mov
xorb
xchg
mov
inc
in
xor
shll
cs
jl
inc
mov
jl
or
push
call
shl
push
push
jo
test
pop
hlt
mov
sbb
repz
lods
xchg
mov
aas
jbe
push
into
call
je
and
outsl
rolb
jge
addb
lds
mov
and
daa
pop
xor
aam
shrb
lret
add
pop
movsb
mov
ljmp
out
inc
int3
push
gs
push
cmp
push
jbe
pop
adc
fisubl
aaa
pop
loopne
lret
ret
cmp
ds
add
out
xlat
pop
mov
mov
mov
test
jecxz
push
ds
dec
mov
in
mov
pop
fsub
push
adc
aad
and
lea
inc
jae
inc
lcall
mov
sub
repz
push
les
aaa
data16
mov
subb
adc
sahf
test
add
inc
sub
sahf
adc
lods
test
fistpll
jns
stc
dec
mov
inc
cwtl
or
insl
aas
cmp
hlt
repnz
push
scas
push
clc
xchg
xor
sub
cmp
dec
xchg
sbb
mov
jne
add
pusha
iret
test
jne
stos
push
shll
icebp
js
cmp
cvtps2pi
movsb
mov
sbb
sbb
mov
push
sub
aaa
fstpt
and
jne
inc
push
add
pop
in
dec
test
xlat
pushf
rcll
dec
nop
out
mov
push
test
sub
cmp
ljmp
imul
or
pop
stos
ds
push
pop
pop
or
adc
jle
adc
sbb
ss
cmp
sbb
inc
sarl
fsubrs
mov
popf
adc
pop
jge
fcompl
jae
and
lock
mov
cmpsb
mov
sti
and
ret
call
dec
pusha
mov
push
call
mov
jg
fdivr
das
add
div
mov
cld
xchg
lcall
sbb
dec
enter
xor
dec
les
loope
imul
push
or
push
out
pop
dec
sub
xchg
and
adc
lock
stos
mov
or
dec
dec
out
xchg
mov
jns
mov
sbb
lock
lret
insb
jge
ficoms
push
bound
mov
in
mov
push
adc
xor
xchg
push
pop
pop
adc
rcl
add
aad
sub
mov
mov
fimuls
add
jns
cmp
lods
cltd
or
mulb
and
idivb
movl
stc
push
out
loop
out
dec
push
xorl
xchg
dec
mov
aas
arpl
jno
add
outsl
cltd
mov
lods
mov
inc
int3
xchg
adc
cmp
lods
insl
mov
push
or
out
jo
mov
mov
mov
in
ficompl
sub
or
sahf
sbb
jbe
sbb
inc
adc
stos
test
mov
sub
mov
push
arpl
mov
dec
jl
dec
pusha
fwait
jns
mov
push
sub
xorb
lods
jne
mov
pop
inc
out
and
iret
test
jge
roll
ds
repnz
ret
xchg
mov
adcb
divb
pop
test
cltd
fwait
lea
mov
adc
arpl
adc
xchg
push
ds
jp
imul
insb
lds
xchg
push
leave
adc
add
std
cmpsb
jl
into
jne
lret
add
xchg
push
movsl
dec
es
push
loope
or
pop
add
jmp
sub
fmull
pop
sbb
rclb
cmp
cmpsl
cwtl
js
icebp
aas
call
xor
int3
adc
dec
loope
out
jne
push
scas
addb
repz
das
fildll
xor
push
ret
gs
rorl
sahf
dec
and
mov
das
jle
sbb
sahf
cltd
dec
popl
idivl
mov
mov
movsw
fs
xchg
xchg
rcll
fwait
fimull
push
mov
and
and
stc
arpl
aas
int
cmp
mov
mov
inc
clc
mov
mov
adc
cli
sbb
mov
fidivs
sbb
cmpsb
ret
jmp
addb
add
scas
outsl
inc
cmp
xor
imul
mov
xchg
shrl
and
mov
imul
or
lret
std
imul
mov
mov
xor
mov
ret
dec
pop
xor
pop
jmp
mov
sub
xchg
jp
mov
out
mov
xor
lds
in
dec
addr16
xor
shr
mov
xchg
icebp
inc
sbb
lea
bound
cltd
lahf
daa
cmp
loope
add
or
add
add
iret
mov
rcll
jo
or
add
sub
aas
incl
jecxz
fldl
leave
in
push
fldl
push
push
inc
orb
sub
push
lock
cld
mov
jp
mov
pop
out
or
rcrl
mov
sub
cmp
outsb
jecxz
rcr
call
cmp
dec
jb
call
out
inc
xor
xor
movsl
pushf
mov
subb
in
and
xor
nopl
ss
xor
pushf
lods
and
add
lahf
outsb
fdiv
js
gs
jae
stc
dec
das
dec
rcrb
adc
ret
fsubrs
sbb
push
lret
push
adc
jo
fs
inc
pop
sub
add
ljmp
insl
jl
imul
mov
cld
into
jns
into
sbb
pushf
aas
mov
sbb
xor
out
test
shll
sub
aaa
imul
gs
insb
call
push
fstl
push
out
insb
mov
std
and
dec
loopne
lea
mov
pop
aad
lds
pop
ljmp
fwait
hlt
add
add
stos
mov
or
lret
pop
stos
lret
adc
leave
push
pop
push
push
jb
sbb
sahf
mov
ja
sbb
in
cltd
adc
push
inc
movsb
jne
stos
push
loopne
mov
andl
addr16
sub
sub
cmp
push
cs
push
push
mov
or
out
adc
adcl
cmp
xor
pop
fcoml
mov
lods
ds
jae
sub
pop
imul
aas
in
jle
clc
sbb
push
mov
ss
adc
xchg
movsl
pop
aad
out
cmpsl
push
call
adc
jo
cwtl
dec
pop
popf
jae
pop
jg
scas
pop
lahf
iret
or
and
xchg
shrb
aam
mov
jle
dec
shlw
ljmp
int3
je
add
add
lahf
in
adc
fsubrl
push
push
arpl
xchg
add
adc
test
enter
iretw
cltd
pop
cmpsl
dec
xor
out
ja
or
cmpl
jl
in
push
xchg
outsl
mov
fs
mov
test
dec
outsb
mov
fstps
fsubl
mov
mov
mov
mov
clc
jge
testl
sub
mov
add
mov
jecxz
xchg
pop
scas
rcl
out
stc
inc
and
dec
mov
enter
fcoml
jmp
in
adc
fcmovnb
pop
out
mov
test
or
ret
hlt
mov
jge
add
push
repnz
push
xchg
jne
test
cmpsl
jnp
cld
and
inc
aaa
addl
nop
ret
mov
jg
mov
push
push
push
and
lock
in
ss
push
ds
shrl
and
inc
mov
dec
xor
jne
in
inc
sub
cmp
xorl
jle
test
daa
lock
insl
jb
insb
adc
in
xchg
add
or
pop
and
and
movsb
lahf
int3
fimull
fimuls
test
enter
add
pop
push
mov
loope
scas
dec
fwait
in
flds
pop
and
or
jle
cs
stc
adc
out
out
dec
jg
popf
push
add
adc
xchg
shlb
jo
movsl
push
jle
ror
addl
fisubl
push
add
idivl
bound
push
fwait
push
adc
aaa
or
ja
push
push
lods
mov
jns
jns
add
push
fidivrs
hlt
cmc
fsubrs
dec
mov
imul
nop
push
mov
push
movsl
cwtl
mov
test
rorb
ljmp
cmpsb
test
mov
pusha
mov
test
stos
enter
notl
adc
adc
push
pop
in
mov
repz
xchg
dec
inc
and
push
or
push
sub
mov
loop
dec
test
fidivl
jbe
arpl
push
xchg
mov
scas
movsl
xchg
sub
hlt
lret
loopne
inc
add
test
pop
cwtl
and
jbe
jns
daa
pop
xchg
sub
jbe
cmp
ljmp
mov
add
sbb
sarl
pop
inc
sbbl
pop
call
add
sbb
pop
cs
idiv
shl
mov
cmp
jl
jo
pop
xor
mov
adc
ss
and
xchg
jnp
add
mov
cmp
or
push
es
xrelease
outsl
fcmovnu
int3
in
adc
mov
or
insl
sbb
xor
inc
cld
push
jl
lret
mov
daa
pushf
sbb
cmp
in
jnp
out
mov
mull
sbb
lods
jge
xchg
adc
jmp
cmp
sar
aad
ja
xor
clc
or
call
pop
add
movl
fdivrl
fucomp
sarb
pop
xor
adc
sub
xlat
mov
dec
inc
jbe
inc
jnp
jl
jbe
jb
mov
adc
test
push
stos
call
or
dec
fistpl
push
push
and
loope
int3
dec
push
inc
out
adc
jno
gs
xor
mov
push
dec
xchg
movsb
stos
xor
flds
adc
stos
jae
jo
cwtl
subb
lcall
movsl
stos
pop
jbe
push
aam
sbb
js
mov
cmp
mov
xchg
data16
ja
out
sarl
cli
insb
scas
lcall
popa
mov
mov
cmpl
cmpsb
pop
xchg
outsl
push
inc
shll
jg
or
out
fidivl
sahf
fnstsw
testl
sbb
push
ljmp
repz
ret
xlat
mov
dec
lcall
inc
cmp
icebp
popf
xchg
inc
sbb
mov
xchg
divb
stc
insl
loopne
push
sbb
mov
add
aaa
lods
rolb
lods
call
ljmp
push
or
popl
mov
sbb
jb
xchg
stos
lea
dec
test
cmp
icebp
cmpsb
or
stos
mov
ret
inc
incl
mov
push
jae
mov
shlb
push
and
inc
push
sahf
in
fcomp
enter
in
scas
sub
outsl
je
jecxz
cmp
lret
leave
mov
xor
sbbl
sub
aad
hlt
iret
push
add
jns
shl
fnstcw
mov
jbe
mov
xor
jmp
and
outsl
imul
lahf
pop
psrlw
inc
mull
aad
push
cmp
pop
rorl
sbb
sbb
rcrb
cltd
lds
sahf
push
cmpsb
jb
sub
div
sbb
jecxz
rolb
or
hlt
xchg
leave
mov
test
sar
lcall
and
mov
push
lods
adc
cltd
sti
insb
xchg
stos
inc
inc
cmpsl
jb
das
push
loope
lret
out
mov
sbbb
xchg
loop,pt
leave
or
and
repz
shlb
xor
xchg
mov
ljmp
cwtl
jg
add
mov
xor
mov
mov
cmp
pop
dec
int
adcl
mov
xchg
mov
mov
ret
lret
push
add
push
in
sbb
xor
popa
or
cmpsb
mov
sbb
push
sub
je
xchg
stos
xchg
jns
clc
inc
sub
xor
pop
das
pop
push
add
push
clc
cmpsl
inc
mov
sub
imulb
and
add
out
mov
call
push
and
nop
aas
push
sbb
mov
aas
sahf
addr16
int3
add
dec
cmp
jbe
mov
push
cmpsb
ds
push
aaa
shr
xchg
mov
sub
jnp
xor
mov
mov
xor
xchg
sub
pop
or
sahf
gs
jb
lahf
imul
xchg
icebp
push
fadd
jns
jns
adc
mov
xor
push
clc
xchg
pop
jns
cmpsb
subb
cmp
mov
inc
stos
inc
push
push
mov
adc
imul
fistpl
es
enter
sbb
xlat
sub
cld
xor
pop
lods
shlb
in
dec
sbb
mov
test
xor
std
sbb
or
xlat
out
jg
xor
add
mov
rorb
leave
sub
cs
iret
sub
sbb
enter
leave
divb
dec
jno
rcr
adc
jecxz
push
xchg
cmpsl
sbb
sub
cmc
push
cwtl
pop
mov
scas
sbb
sti
loop
bound
imul
lods
jo
xchg
lock
add
sub
inc
idivl
push
xchg
push
mov
aad
ret
lcall
push
or
mov
cltd
push
mov
inc
int3
aas
sahf
imul
clc
lcall
xchg
daa
dec
xchg
inc
adc
sub
mov
ljmp
fcoml
imul
call
jle
fs
in
ret
push
stc
mov
and
inc
xor
int
mov
pop
bound
inc
frstor
mov
jo
xor
ss
mov
fnstenv
xchg
out
lods
movsl
dec
jecxz
adc
repz
inc
repnz
data16
icebp
xchg
pusha
mov
jle
xor
fwait
push
sti
or
or
xor
jb
push
out
xor
pop
xchg
cltd
outsl
out
call
int3
adc
pop
jmp
test
cmp
data16
xor
je
pop
dec
shll
mov
pop
push
ficomps
xor
movsb
add
enter
bound
sub
mov
aas
adc
sahf
fiaddl
mov
jle
hlt
push
add
pusha
es
adc
movsb
inc
shr
data16
sub
adc
in
sbb
mov
pop
jecxz
lods
iret
fmull
daa
cltd
and
mov
popl
dec
lods
jns
movsl
cmp
push
and
sbb
in
mov
sub
inc
pop
mov
rcl
outsl
jbe
aad
sbb
outsb
xchg
push
mov
pushf
mov
cmpsl
pop
push
pop
test
outsb
xor
in
mov
cmp
or
out
aaa
xchg
test
cmp
add
jg
adc
cmp
add
int
jl
mov
ret
loope
or
pop
lock
sahf
jp
mov
fidivrl
mov
or
mov
pop
cmp
inc
cld
push
mov
in
add
jp
icebp
nop
jp
adc
dec
fsub
jno
aas
div
sbb
jns
mov
inc
ret
mov
std
push
mov
daa
mov
imul
push
sbb
clc
push
xor
out
daa
pushf
mov
cmp
inc
out
insl
or
mov
cwtl
mov
loope
movsl
aas
daa
adc
scas
ret
inc
es
inc
push
or
aas
mov
stos
push
in
call
int3
sub
jecxz
mov
xor
flds
mov
cmp
push
incl
and
xor
lock
push
dec
push
add
mov
lret
mov
jnp
rcll
pop
and
cwtl
shlb
mov
xor
sahf
mov
xor
mov
cmp
test
jns
jle
push
xchg
mov
jnp
push
jmp
fmuls
lcall
jo
pop
insb
or
loope
mov
and
mov
push
cmp
pop
cs
mov
pop
mov
addb
fcoml
inc
out
das
push
and
dec
fwait
lcall
lock
or
jmp
mov
push
mov
or
xchg
mov
shlb
repnz
int3
mov
cld
inc
and
push
xchg
sarl
add
adc
sbbl
add
movl
add
mov
mov
pop
or
xor
int3
adc
or
push
std
cmpsl
mov
add
cli
pushf
adc
cmpsb
daa
push
fdivp
xchg
mov
stos
jmp
in
pop
push
sbb
adc
xchg
loopne
int3
jle
and
mov
inc
movsb
mov
adc
dec
bswap
test
lret
shrl
inc
add
popa
pop
add
jo
sbb
cmp
xor
push
sub
in
frstor
xlat
in
cmp
push
fnsetpm(287
push
fildll
inc
aaa
loope
jl
rorb
enter
repz
mov
insb
inc
std
mov
ljmp
lea
icebp
add
push
js
push
hlt
add
stc
test
push
mov
jle
adc
daa
or
scas
push
mov
lahf
aas
pop
in
xchg
xchg
jg
test
fstl
imull
push
popa
out
repz
or
inc
fisubs
cmp
dec
hlt
inc
push
xchg
xchg
and
xchg
lock
rclb
aad
lret
mov
lahf
nop
mov
rcr
dec
pushf
ljmp
fwait
cmp
imul
out
jp
jb
xlat
dec
cmp
sub
addr16
jmp
into
mov
adc
sub
jno
xor
jne
adc
jo
insl
sbb
and
pop
das
hlt
dec
or
stos
pusha
jmp
jae
sub
repz
clc
push
loope
xchg
mov
xor
pop
mov
jg
mov
rolb
cmp
pop
adc
jmp
je
mov
stos
push
idiv
iret
xchg
mov
inc
cmp
adcb
add
lcall
dec
insl
pop
sarl
orl
xor
out
jbe
lods
sbb
jbe
dec
hlt
xchg
jo
mov
lods
daa
out
subl
cmp
sub
jg
stos
idiv
inc
xchg
cwtl
leave
add
dec
mov
fisubs
xor
adc
sub
lahf
and
push
and
in
int
inc
or
loop
inc
adc
inc
icebp
pop
push
xchg
mov
mov
ret
scas
mov
push
sbb
ret
sahf
dec
add
lcall
out
inc
ds
sbb
sub
inc
mov
enter
arpl
pop
sbbb
das
fmull
push
adc
xor
insl
add
push
jbe
inc
dec
imul
or
imul
mov
adc
mov
or
and
pop
xchg
ds
xchg
sbb
insb
pop
xchg
and
add
in
mov
push
adc
lahf
mov
jecxz
js
out
mov
xchg
add
rcrl
pusha
xor
dec
jp
icebp
out
jecxz
scas
xchg
rcrl
inc
jnp
xchg
mov
out
ss
lgs
xlat
xorl
leave
dec
gs
lods
movsb
test
or
mov
pop
iret
out
mov
mov
test
cmc
rcl
pushf
pop
into
sbb
adc
popf
xchg
and
push
push
cmc
jbe
mov
or
test
ja
sahf
mov
in
int3
cltd
adc
pop
and
xchg
fisttpl
cmp
push
imul
fcmovu
shrb
outsl
shll
mov
into
outsb
push
xchg
mov
jo
mov
lcall
in
in
fistpl
movsb
loopne
push
insl
mov
std
aaa
cmp
inc
bswap
ret
cli
into
add
fidivs
sub
pop
nop
hlt
mov
fistps
leave
jo
movsb
sbb
insl
push
mov
cs
add
dec
cmp
ficompl
test
jg
add
mov
sub
fadds
xchg
ljmp
pop
pop
add
insb
mov
dec
pop
cltd
mov
and
inc
inc
sbb
ret
cmc
xor
cmp
pop
jle
fdivrs
outsb
and
dec
cmp
div
jg
push
xor
repz
rorl
dec
scas
jne
cmp
mov
call
jb
ret
jne
jl
repnz
scas
ffreep
dec
sbb
ss
dec
add
stos
divl
jae
imul
push
dec
sbb
shr
add
xchg
jge
rcl
popf
insb
loope
pop
outsb
pop
rcr
mov
aad
fnstcw
or
adcl
daa
sbb
mov
mov
rorl
repnz
scas
test
mov
jp
mov
inc
addr16
xor
in
and
std
lea
fs
repz
sbb
ja
fwait
sti
mov
aam
xchg
inc
ljmp
mov
sbb
and
arpl
pop
fisubrs
cli
xor
push
int3
pop
jo
sbb
xchg
icebp
cmp
mull
nop
into
sub
adc
test
cltd
out
mov
daa
mov
sbbl
sahf
ret
dec
jp
mov
scas
ljmp
or
lods
addr16
mov
cmp
iret
mov
in
dec
cli
mov
xlat
nop
mov
mov
dec
jg
mov
inc
movsb
jp
xchg
pop
jle
cltd
std
rep
enter
fbld
inc
pop
in
in
sti
lahf
or
sub
aaa
int
dec
lods
xchg
xorl
or
insb
fdivrs
jge
flds
popa
lret
out
stos
dec
mov
cs
inc
dec
jae
loope
inc
jns
frstor
fidivl
push
cmp
sub
aam
shlb
aaa
test
nop
push
sbb
lahf
test
rcrl
mov
jns
jle
jno
arpl
mull
addr16
fidivrs
test
outsl
imul
sub
out
jns
add
mov
mov
lret
and
cmp
xchg
lret
fistpl
xor
cld
out
in
je
cltd
jne
in
dec
mov
jb
sbbb
sbb
movsb
aaa
inc
sbb
mov
mov
mov
sbb
add
sarb
sub
out
js
and
sub
pop
iret
ds
popa
ljmp
sub
sub
gs
stc
popa
sbb
icebp
mov
push
daa
lret
adc
mov
jb
ja
or
call
lods
in
cs
sub
aam
in
fisttpll
arpl
ror
xchg
insl
adc
in
xchg
add
shll
in
fisubrl
bound
iret
and
lock
fisttps
movsl
add
and
daa
and
add
xchg
aad
pavgb
mov
sbbb
jne
fstpl
or
rorb
int
pop
fdecstp
fildll
in
jne
xchg
xchg
mov
jno
xor
cld
sbb
and
shlb
shrb
xor
and
cmc
add
stos
fdivrs
xchg
inc
stos
imul
sbb
lea
ljmp
pop
fdivl
or
push
leave
int
dec
lea
nop
idiv
or
jmp
adc
inc
mov
push
loopne
mov
xor
sbb
xor
lods
aas
dec
xchg
dec
xchg
ja
fyl2x
cltd
push
pop
outsb
cmc
pop
out
fidivl
aaa
je
in
mov
mov
lods
cmp
add
dec
inc
shlb
mov
and
je
inc
faddl
adc
in
adc
xor
insb
push
popf
insb
fmull
inc
inc
iret
std
clc
sahf
inc
outsb
sub
in
push
inc
data16
dec
or
push
jae
rcr
daa
mov
ret
dec
mov
or
sbb
or
mov
gs
std
mov
test
testb
mov
jbe
push
mov
outsb
icebp
cmc
je
test
aam
loop
shl
int
cmp
add
pushf
sbb
out
mov
in
in
gs
dec
test
xor
gs
jns
adc
xor
lcall
pushf
sub
loopne
xor
fimuls
mov
push
sahf
mov
sub
aam
adc
push
mov
enter
jnp
out
jne
jp
pop
sbb
and
in
jno
pop
fsubl
jo
push
xlat
push
or
rcr
dec
dec
xor
sub
jg
mov
jno
push
mov
or
neg
popf
cmpsl
cmpsl
mov
adc
scas
push
fbstp
push
loope
daa
mov
lcall
xor
test
stc
or
pop
push
leave
xchg
icebp
fiaddl
xchg
jmp
scas
stc
push
push
xchg
lods
and
ficoml
pop
dec
fists
lods
shll
push
aam
mov
inc
cmp
xchg
push
xor
sub
cli
popf
mov
in
xchg
lret
shrb
pop
in
xchg
add
lret
shrb
add
xor
ja
fs
dec
sub
std
sar
adc
pusha
fistpl
clc
cmp
dec
inc
arpl
xor
push
sbb
mov
mov
ss
add
mov
push
pop
shr
repnz
mov
cmovs
out
repz
rorl
jb
test
lods
jne
xor
fs
je
mov
pushf
pop
xchg
out
xchg
ljmp
inc
jmp
cld
insb
out
cwtl
and
lock
adc
mov
popa
xor
mov
inc
pop
aad
jne
out
hlt
fstpl
imul
adc
fnstcw
std
or
jne
fmuls
or
jl
hlt
xchg
pop
mov
add
or
arpl
insb
data16
cmp
inc
add
jno
dec
jle
inc
fcoms
cmpsb
cmp
into
and
into
out
sbb
int3
xor
mov
lret
cmpb
fstpt
adc
fwait
ret
mov
loope
repz
or
xchg
adc
cmp
add
dec
mov
loop
mov
or
and
and
jno
jb
or
lcall
mov
inc
xor
and
and
lret
addl
sub
fistpl
cmp
pop
jl
sub
inc
mov
sbb
ud2
ret
out
test
xchg
cmp
jmp
int3
scas
inc
lds
cmp
mov
imulb
ljmp
or
ret
adc
mov
lahf
or
je
rcrb
or
mov
movsl
jnp
in
xchg
adc
jae
sti
inc
dec
adc
jns
and
mov
push
jb
pop
and
xor
sub
aam
imul
adc
repnz
aas
into
pop
jl
dec
cmp
pop
lea
xor
aaa
leave
sub
sub
cmp
sarl
pop
add
jno
cltd
adc
cwtl
int
mov
dec
int
sti
lret
lcall
mov
pop
les
cltd
xchg
out
in
or
ret
mov
xorb
daa
insl
cmp
iret
xchg
mov
dec
mov
dec
xchg
fnstcw
mov
xchg
mov
ret
xchg
gs
ret
test
sbb
out
xor
lcall
inc
sbb
mov
mov
sbb
adc
and
cwtl
mov
dec
sub
movb
push
xchg
and
scas
cmp
pop
mov
dec
scas
leave
push
adc
jp
and
repz
das
daa
sub
adc
movsb
leave
aas
lods
cmpl
jne
out
push
scas
xor
cmpsb
cmpsb
out
inc
fcmovbe
cmp
popa
sub
mov
es
adc
inc
popf
jns
out
cltd
shlb
int
ret
nop
jle
push
sbb
dec
xchg
mov
add
sahf
adc
mov
in
push
xchg
rcrb
shr
lret
or
out
ss
mov
mov
lea
sbb
push
jmp
mov
movsl
addb
dec
test
jnp
mov
or
adc
pop
pop
fistl
mov
pop
dec
mov
out
adc
sahf
scas
push
push
and
out
push
sti
pop
fs
sti
in
inc
or
ficoms
sbb
pushf
mov
and
scas
and
ds
cwtl
add
pop
int
dec
cltd
push
jmp
mov
out
rcrb
lods
sub
shl
mov
inc
cmp
xor
sbb
mov
mov
in
xor
mov
sub
sbb
dec
add
pusha
jbe
inc
pop
jb
jns
fdivs
jl
bound
cmpsb
out
xacquire
xor
jle
fisubs
test
inc
mov
mov
jecxz
stos
xor
neg
mov
push
lods
mov
dec
dec
add
pop
mov
sub
adc
mov
imul
or
clc
and
mov
jbe
hlt
out
push
push
dec
or
pushf
push
cvtps2pd
in
sbb
mov
call
pop
cmpsb
pop
ja
in
lcall
fwait
inc
mov
mov
mov
fwait
push
jae
push
adc
lods
mov
adc
sub
push
inc
push
mov
stos
pusha
inc
leave
cwtl
inc
mov
rcr
sub
ret
and
jle
dec
aam
add
insl
dec
loopne
push
jge
xor
jae
scas
push
popf
pop
mov
ds
rolb
mov
sbb
or
mov
insb
mov
test
inc
dec
aas
fdivl
xchg
mov
mov
lds
dec
adc
sub
push
jecxz
cmp
mov
xor
xchg
and
repnz
sub
gs
andl
cmc
cmp
dec
ja
adc
or
insb
shrb
push
xor
mov
mov
mov
fldcw
mov
lcall
dec
stos
inc
mov
push
and
sub
pop
das
pop
in
aad
es
mov
or
and
xor
loopne
mov
or
pop
fiaddl
loope
xchg
shll
jae
sahf
jb
mov
sub
sti
imul
pop
xchg
int3
aad
xor
mov
mov
mov
call
daa
aaa
xchg
fs
fistpll
imul
cltd
testb
jl
xor
xchg
jne
inc
jbe
pusha
dec
sbbb
dec
pandn
mov
inc
adcb
gs
mov
jp
popa
cmpl
mov
test
out
xor
movl
and
xchg
mov
js
inc
xchg
mov
hlt
jl
add
imul
jecxz
outsl
jo
in
das
lcall
xor
cs
repz
ret
lcall
test
xchg
or
mov
adc
testb
pop
mov
popf
test
or
int
jb
lock
jmp
shl
mov
aas
fst
jmp
push
cmp
mov
fsubl
test
je
jns
outsl
sbb
fld1
inc
int
lds
ret
loope
xchg
dec
repnz
and
iret
mov
ja
push
mov
lods
push
inc
xchg
and
pop
add
mov
add
push
sub
int3
imulb
enter
mov
inc
add
mov
mov
leave
sbb
push
inc
mov
leave
test
jb
cmpsb
fimull
dec
add
scas
addr16
das
cmp
cmp
ret
pop
cli
pop
cmc
scas
insl
cmp
sub
idivb
jno
jns
xor
inc
bound
xor
es
je
stos
clc
mov
ja
and
cmp
dec
xchg
pop
cmp
mov
lret
std
mov
jge
jg
push
sbb
jne
hlt
out
neg
movsb
cmp
popf
sub
mov
fiaddl
mov
scas
in
jl
popa
xorb
mov
inc
push
inc
sub
cmp
mov
sbb
sub
aas
call
xchg
pushf
dec
test
repz
and
adc
fwait
inc
cmp
nop
fs
xorb
shr
inc
int
and
test
es
loope
and
xor
rcr
inc
cmp
and
mov
lahf
sbb
lods
sub
push
lahf
jmp
dec
bound
xlat
and
sbb
lods
ds
inc
cmp
or
jmp
cmpsb
mov
test
pusha
into
jne
jno
imul
rolb
movsb
sti
sarl
mov
xchg
jo
and
dec
jne
aaa
pop
mov
add
or
leave
xor
orb
xor
cld
outsb
lds
inc
jmp
mov
inc
inc
iret
aam
aas
sub
int3
push
fisubl
sub
stos
push
dec
shll
inc
xor
adc
and
lods
insb
loopne
out
scas
repnz
nop
mov
inc
jecxz
cmp
pushf
leave
mov
inc
dec
mov
mov
in
push
push
push
stos
ret
or
add
sub
out
mov
cs
jno
movsb
testb
jg
hlt
mov
test
int3
lret
xchg
repz
cmp
dec
mov
pop
testb
adc
cmp
and
mov
mov
mov
cld
icebp
or
aad
leave
in
jbe
mov
dec
push
popa
ss
jg
mov
xor
lea
outsb
cmpsl
inc
test
clc
das
xchg
dec
enter
mov
arpl
imul
cmp
je
jmp
jno
iret
sbb
mov
popf
push
push
or
mov
sbb
stos
mov
cmp
adc
push
pop
loopne
call
repz
and
sub
call
loope
testb
push
ja
push
stos
xor
mov
jg
jbe
out
movsb
rolb
imul
mov
pop
and
dec
mov
jmp
and
mov
cmpsb
fnstenv
out
daa
lret
retw
hlt
cmp
outsb
mov
adc
repnz
movsb
pop
lcall
gs
pop
test
nop
cld
jg
sahf
dec
push
testb
xchg
ret
lods
push
aad
std
xchg
inc
push
cmp
jle
or
sti
sub
adc
fildl
int3
adc
inc
push
mov
cmpsb
std
ss
sahf
xchg
mov
test
add
loopne
jmp
inc
pop
fdivrl
jae
sti
lock
push
aam
iret
sub
add
cmp
jecxz
mov
mov
mov
sbb
sub
ret
lods
sbbl
jg
outsl
mov
arpl
pminsw
enter
and
pop
xor
repz
enter
lock
push
sub
inc
pop
jnp
imul
inc
ljmp
jb
lods
inc
faddp
mov
dec
incl
sar
or
sbb
mov
cmp
fbstp
sub
pop
xchg
jecxz
in
xchg
fildll
ljmp
addl
movsb
add
push
clc
cmp
clc
mov
loop
mov
js
lcall
cs
and
stos
sahf
jecxz
imul
pop
sbb
scas
inc
mov
fwait
pop
int3
cmp
or
stc
fisubrs
arpl
inc
test
lock
xchg
scas
and
fldl
add
push
sbb
repz
arpl
xchg
xchg
dec
push
mov
out
rclb
shl
mov
mov
or
lods
in
jle
mov
nop
cltd
xchg
fcomp
sbb
lcall
les
xor
into
xor
cmpsl
fisubrl
cltd
adc
ficompl
dec
movsb
push
div
mov
lock
repz
stos
mov
fstpl
das
push
sbb
pop
and
loop
adc
xchg
adc
ds
int3
or
dec
mov
movsb
mov
aam
sub
leave
mov
pop
ja
adc
loope
cmpsl
pop
mov
cmp
dec
jnp
add
jmp
push
pop
dec
fwait
dec
sub
sub
out
push
in
mov
jne
jb
ds
shrb
add
jae
repz
loop
mov
mov
lahf
aas
movsl
sarl
lods
outsl
imul
dec
jge
xorl
cmc
inc
dec
inc
or
mov
cmpl
cmp
sbb
mov
add
and
ss
cld
jne
clc
daa
in
iret
jmp
xchg
nop
pop
push
addr16
imul
adc
in
or
daa
pop
or
imull
ljmp
adc
dec
daa
adc
imul
mov
cld
jmp
std
ja
dec
mov
rorb
lret
mov
sti
push
xor
gs
je
add
aaa
mov
inc
shl
jp
cmpsb
mov
sbb
fcomp
lcall
sarl
mov
xchg
outsb
loopne
mov
pop
pop
xchg
add
mov
les
xchg
cmp
fnsave
adc
push
cmp
xor
ljmp
lods
xor
sub
mov
pop
sti
test
jp
push
push
mov
or
pusha
shll
inc
and
ljmp
test
test
mov
int3
sahf
jno
mov
jae
and
adc
je
insb
lock
xchg
in
sub
mov
pop
fcmovnu
sahf
xor
loopne
jecxz
cltd
pop
out
jns
dec
lods
out
lret
or
mov
mov
fs
adc
repnz
cmp
arpl
lcall
pop
and
in
push
inc
test
push
lret
xchg
sub
push
and
stos
inc
mov
out
sub
inc
sub
je
cmpsl
adc
ret
and
cmp
loop
or
mov
imulb
movsb
fwait
xor
gs
add
fcmovne
jecxz
addr16
pop
adc
insl
in
mov
out
pop
repz
cwtl
int
ss
jae
dec
ljmp
or
jl
js
push
aaa
xor
stos
cmc
daa
xor
xchg
cmp
test
into
aad
sub
ret
dec
out
cmpsl
push
ljmp
jg
pusha
test
dec
scas
dec
jns
repnz
dec
gs
add
rcr
inc
push
aas
mov
mov
scas
pop
aam
fmulp
ret
xchg
mov
gs
mov
repz
add
and
into
movsl
in
jmp
aaa
dec
cld
jbe
clc
seta
adc
shll
daa
in
inc
repnz
xchg
mov
mov
push
nop
add
xor
add
add
xchg
fimull
add
mov
pop
jbe
or
pop
xchg
outsl
decl
pop
enter
fiadds
xchg
sahf
cmp
sbb
mov
mov
in
repnz
push
dec
sub
add
push
arpl
stc
adc
cmc
jmp
push
dec
testl
inc
call
je
xchg
mov
sbb
mov
inc
jno
testb
shll
xor
addb
nop
fs
adc
dec
hlt
test
mov
mull
and
cltd
and
push
sub
push
pop
and
cld
add
pop
cwtl
lret
push
mov
aas
outsb
daa
add
xor
popa
cmc
jge
sbb
or
push
xor
dec
xchg
dec
in
js
dec
sbb
stc
jle
or
in
adc
in
clc
mov
addr16
xor
inc
subl
or
cli
sbb
mov
mov
inc
pop
xor
les
outsl
fcomps
inc
lea
arpl
cmp
test
loope
cmp
js
ds
jnp
scas
jecxz
add
jbe
jae
in
lret
pop
sahf
cmp
push
cmp
jle
push
daa
adc
mov
and
mov
repnz
jnp
or
scas
push
mov
mov
out
adc
pusha
adc
cmp
push
mov
jno
cmp
and
out
mov
mov
loope
lahf
popa
push
push
xor
bound
adc
xor
push
out
push
lret
clc
outsl
faddl
sub
sub
inc
mov
lock
int
push
out
es
mov
arpl
ror
push
mov
jmp
cmpsb
mov
xchg
cmp
daa
xchg
es
and
stos
push
mov
and
mov
out
repnz
mov
sbb
lods
add
stos
jne
push
and
data16
mov
mov
subb
popl
mov
push
jb
ja
or
add
insl
cmp
and
les
mov
iret
into
push
push
push
xor
mov
movsl
or
repz
imul
xlat
mov
push
push
dec
pop
in
add
cld
or
shrb
add
jne
pop
fs
into
daa
cmpsb
clc
xchg
or
jb
cltd
add
aas
mov
shl
insl
fimuls
cs
aas
in
or
stos
mov
ret
jmp
push
dec
mov
cltd
pop
pop
inc
popl
fidivs
xchg
loop
jne
jo
js
gs
pop
jnp
mov
adc
aad
in
cwtl
fstpl
ss
pop
push
les
in
jg
aaa
test
pop
sarb
ror
mov
das
repnz
fs
dec
mov
aaa
jecxz
adc
pop
xor
dec
push
dec
push
in
jns
sbb
fwait
sub
and
sarb
add
and
data16
lret
xchg
xor
mov
mov
push
shl
test
jmp
xchg
rorb
fwait
add
xor
or
xchg
icebp
imul
cmp
xchg
fsubrs
iret
jmp
pop
jbe
out
sub
cmpsl
pop
push
cmp
xchg
cmc
mov
jmp
xchg
add
dec
adcb
aaa
repnz
jp
imul
in
push
pop
xor
hlt
or
popf
pop
cld
in
adc
xchg
fdivrp
pcmpeqd
sti
imul
xor
pop
dec
jp
push
dec
xchg
xchg
ror
inc
loop
dec
enter
xchg
je
mov
add
sti
adc
stc
add
mov
popf
pop
insb
in
adc
in
adc
outsb
mov
stc
in
xor
fcmovu
or
call
ja
aad
ffreep
imul
jae
loope
xchg
enter
test
inc
pop
dec
adc
inc
adc
pop
dec
pop
lcall
sub
hlt
fwait
lds
ds
jb
repz
pop
inc
cli
push
or
fsts
cs
mov
out
or
pop
xchg
enter
aaa
jne
test
data16
and
or
xor
call
cmp
cmp
rclb
popf
dec
out
dec
sbb
divl
pop
sub
mov
jnp
push
lcall
jne
or
mov
out
test
dec
sub
sub
lahf
xor
inc
push
xor
outsl
inc
mov
loop
lods
inc
arpl
int
dec
jnp,pn
pop
lock
insl
fcomi
ss
pop
aam
push
jmp
pop
cld
push
sub
xlat
enter
xor
jne
mov
repz
xchg
dec
push
stos
xor
insl
or
lds
and
stos
add
add
sti
xchg
xor
fcomps
out
mov
out
je
in
adcl
js
inc
mov
in
aas
test
mov
adc
repz
push
and
jmp
sub
and
int3
cmp
dec
and
jb
stc
dec
sub
sbb
xchg
push
mov
mov
push
cmp
pop
dec
mov
inc
aam
add
dec
add
push
adc
jbe
mov
pop
ror
bound
icebp
sbb
outsl
dec
inc
scas
out
loop
sar
mov
shll
mov
xchg
sbb
adc
repz
ja
outsb
cli
outsb
icebp
mov
or
stos
sub
ds
sub
mov
push
push
xor
sub
xlat
test
jno
jne
mov
jne
sti
cs
mov
adcb
jp
stos
dec
out
sbb
sbb
jae
push
out
or
push
sub
or
pop
inc
icebp
jno
pop
imul
sub
sub
std
xchg
add
call
mov
push
dec
push
cmp
cmpsb
add
test
push
stc
and
push
pop
lfs
jle
ds
mov
xchg
push
lahf
push
stos
push
fbld
popa
lea
dec
fnstenv
dec
test
pusha
popf
rol
aaa
pop
inc
cwtl
or
fwait
in
cld
adc
sbb
lods
ds
jg
sbb
jmp
insb
fwait
add
repz
rcr
sub
jge
movsl
cltd
and
out
mov
push
sub
lock
sbb
mov
or
mov
imul
xchg
mov
pop
sub
xchg
push
push
push
pop
dec
or
add
inc
xor
and
mov
sar
xor
cwtl
imulb
cmp
das
xchg
add
insl
mov
out
mov
lret
mov
jo
push
push
cmp
lods
mov
pop
nop
sub
iret
sub
add
cmp
add
mov
shrl
leave
or
test
fwait
mov
inc
pop
arpl
add
aaa
or
pop
mov
fsubl
push
repnz
xchg
or
sbb
aam
add
sub
stc
jb
test
jge
ror
and
add
cmp
cmc
lcall
outsb
xchg
jmp
pushf
xchg
imul
insl
jbe
xchg
push
out
sahf
xchg
faddl
into
sbb
daa
pop
lahf
mov
inc
fcmovb
mov
imull
jl
sbbl
xor
fmull
mov
adc
pop
sub
push
pop
mov
mov
popa
and
mov
rorb
aas
dec
orb
imul
pop
jns
inc
fwait
adc
lock
insb
in
jecxz
xor
cmp
sub
sbb
and
mov
lret
adc
mov
cmp
stc
arpl
loop
cmpsb
lgs
ja
add
jl
lahf
xor
adc
xor
mov
xchg
cmp
dec
mov
pop
add
aaa
mov
fstpt
mov
or
mov
ja
xchg
push
out
add
test
mov
popf
xorl
inc
sub
mov
test
sbb
mov
addb
lock
push
std
dec
pushf
push
push
add
aas
repnz
cltd
sahf
jmp
cmpsb
flds
scas
in
cwtl
orb
pop
lret
sbb
mov
mov
in
xlat
lret
dec
jle
jno
pop
scas
pusha
xor
sub
or
call
sbb
arpl
std
in
mov
shlb
dec
fistpl
cmp
outsl
add
pop
fadds
test
sbb
leave
mov
fidivrs
mov
rorb
xor
pop
inc
lcall
imul
inc
sub
test
jns
add
dec
inc
lret
or
rolb
pop
mov
xchg
cld
divb
jle
sub
ffree
or
in
insl
push
xchg
sti
sti
adc
cltd
in
cli
ds
mov
sbb
insb
ss
lcall
lcall
stos
add
fimuls
cld
aam
sbb
jle
jge
inc
sbb
mov
mov
jae
enter
aam
lock
mov
stos
out
mov
loope
adc
ror
inc
adc
inc
mov
in
mov
mov
cmc
fcoml
or
sbb
lret
dec
cmp
jmp
aas
leave
shrb
pop
add
push
or
js
std
lea
sub
cmp
test
pushf
adc
rcrb
pop
in
mov
pop
icebp
adc
cmpsl
into
xor
outsl
je
pusha
inc
aad
jp
test
shl
fnstsw
bound
push
lahf
rolb
dec
pop
in
jmp
pop
gs
das
cltd
scas
mov
sbb
lret
push
push
cld
test
std
call
jg
iret
xchg
mov
pop
add
popa
clc
ds
mov
xor
xchg
pusha
jge
sbb
inc
pushf
fnstcw
dec
mov
inc
mov
add
mul
mov
jle
insl
pop
enter
mov
xchg
stc
push
orb
sbb
jae
mov
or
aad
pop
int3
and
cmp
jl
adc
and
cld
ret
lea
outsb
push
into
ja
add
shll
or
xchg
adc
dec
adc
mov
in
mov
ja
jle
pop
cmpsl
or
sub
es
dec
shl
sub
ret
and
xchg
lods
or
iret
fsubp
mov
cmp
mov
pop
adc
filds
fwait
xchg
in
loop
fstpl
fdivrl
bound
dec
jne
fisttpl
xchg
aad
loopne
in
call
ljmp
ljmp
and
testb
push
in
or
xor
xchg
and
pop
mov
xor
cmpb
dec
or
xchg
pushf
dec
cmpl
mov
add
popl
adc
test
nop
and
pop
popa
sub
pop
cmp
inc
mov
fcmovu
les
lea
dec
adc
xor
test
pop
cmp
mov
xor
dec
jg
mulb
cmp
push
mov
ret
fs
imul
ss
sti
ret
clc
mov
mov
cwtl
adc
cmp
adc
lock
dec
es
pop
imul
fldln2
pop
stos
inc
scas
loopne
aam
icebp
sahf
cmp
xchg
in
scas
out
xor
pushf
dec
xor
jmp
pop
addr16
pop
fsubr
insl
rcr
adc
mov
jbe
mov
sub
or
mov
or
cmp
addr16
mov
ljmp
scas
xchg
je
fadd
push
insl
cld
jno
out
jmp
int
clc
dec
rorl
jmp
xor
sbb
mov
sub
pop
cmp
int3
add
lcall
and
xor
ficoml
mov
mov
fstpt
ja
fbld
inc
daa
push
pop
cmp
pusha
data16
lods
fucomp
cwtl
jnp
dec
pop
hlt
sarl
xor
pop
sbbb
int
insb
fnstenv
dec
jo
mov
mov
push
test
jb
mov
push
xchg
int3
mov
fstpt
inc
clc
mov
cwtl
cmp
inc
xchg
test
cmp
xor
fidivs
cmp
jmp
mov
js
shll
xor
cmc
movsb
stos
sbb
or
js
sahf
push
sub
sbb
in
adc
lods
xorb
mov
scas
xor
sti
int3
jge
ja
adc
xchg
mov
cli
cmp
cmp
push
leave
ss
jns
pushf
test
inc
jno
in
and
xchg
inc
push
scas
mov
dec
sub
add
jae
xchg
insl
adc
test
shl
ja
mov
add
fmuls
mov
mov
fnstsw
je
jbe
push
or
push
sbb
sub
insb
push
inc
fwait
and
outsb
sti
popf
lods
movsb
lahf
push
into
jo
mov
xchg
jge
scas
mov
testl
xchg
xor
pop
or
push
sbb
fwait
sbb
nop
je
sbb
fcoml
gs
fs
dec
adc
dec
jmp
mov
sbb
mov
mov
dec
aam
mov
cld
test
loop
test
xchg
inc
sub
add
das
sub
sbb
insl
jbe
repnz
mov
jl
xor
fsubl
mul
test
int
mov
push
in
in
scas
js
jp
adc
inc
sub
jg
imul
jnp
mov
in
imul
ret
sub
nop
movsl
xor
push
sbb
je
pop
movsl
jge
sub
xchg
and
cmp
and
addb
stos
dec
in
loop
lods
and
cltd
fsubl
push
mov
jae
pop
fsubrs
dec
sbb
add
insb
popf
mov
inc
dec
movsl
sahf
xchg
int
xor
cmp
or
cwtl
mov
mov
ret
out
cmpb
movsb
lret
fs
cld
pop
lea
fldl
lahf
and
mov
hlt
test
cmp
sub
lods
cmpsl
add
lods
push
push
xchg
ja
xchg
lock
nop
mov
sub
push
mov
int
iret
cmc
enter
outsl
push
in
mov
jne
xor
push
aaa
jecxz
lret
outsl
jmp
in
sub
dec
mov
mov
lea
mov
xchg
aas
cmpsl
shlb
and
lret
sub
jo
lcall
popf
push
and
pusha
add
jle
cmp
lods
jmp
sbb
add
cmpsb
test
fwait
jg
int3
sbb
shll
test
add
test
mov
jno
addb
add
lock
rorb
lahf
mov
out
shll
adc
and
mov
push
add
pop
xlat
mov
cli
xchg
out
sbb
in
lea
rorb
xchg
xor
fldl
fs
iret
and
test
mov
outsb
dec
pop
cmp
nop
xchg
sub
addl
jg
xchg
xor
sti
pop
mov
adc
sbb
inc
shrb
loope
push
ret
xchg
and
mov
rcrl
imul
pop
test
scas
mov
iret
test
jo
es
enter
roll
sub
mov
inc
or
xor
sub
jns
test
iret
js
sbb
sub
call
fs
or
lods
mov
test
jl
mov
dec
add
sbb
add
pop
popa
cmc
push
hlt
sbb
imul
xchg
repnz
push
outsb
daa
xor
mov
cmc
push
xor
sbb
sarl
sbb
sarl
cltd
dec
jne
push
pop
enter
repnz
xor
call
filds
xchg
xor
xchg
jo
jmp
aaa
fdivl
push
mov
push
test
dec
xor
sbb
jns
fcompl
dec
mov
ds
ret
shrl
mov
or
xor
sbb
fwait
sub
sti
repnz
dec
outsl
fs
or
mov
aas
dec
sbb
in
add
in
mov
movsb
inc
and
pop
fisubrl
ds
andb
dec
jnp
mov
out
xchg
rep
pop
pop
pop
jbe
nop
stos
mov
jbe
loopne
or
cmp
scas
jnp
jl
dec
mov
sbb
cmpsl
xor
sbb
and
cmpb
add
insb
mov
jmp
cmp
dec
hlt
aas
pushf
or
outsb
cmp
imul
lock
inc
cli
fs
test
dec
xor
int
aaa
jne
das
stc
stos
imul
push
data16
push
stos
xor
cwtl
xor
xchg
shrb
adc
mov
js
pop
arpl
pushf
in
xor
clc
dec
pop
lods
add
or
mov
push
jbe
cltd
sub
es
inc
aas
jne
push
xor
ja
lret
fs
movsl
push
imull
mov
sub
jmp
aad
or
sbb
add
xlat
in
lcall
daa
push
adc
mov
jge
int
push
xorl
push
pop
outsl
les
rclb
push
popf
push
cmp
dec
cmp
mov
loope
das
push
cmpsb
sbb
cmp
xchg
andb
sbb
mov
jp
cmp
fwait
mov
sub
push
ljmp
gs
add
icebp
cmp
ljmp
fsubp
arpl
adcb
mov
push
imul
shll
int
adc
inc
push
fwait
add
shrb
mov
add
push
mov
cmp
add
test
loop
xor
inc
push
jmp
mov
push
scas
sbb
dec
xchg
jmp
dec
adc
popf
mov
dec
insl
filds
adc
out
out
test
movb
mov
xor
lods
xchg
movl
push
push
test
loope
mov
add
in
inc
cmp
fists
aaa
xlat
push
in
mov
jmp
invd
fiaddl
sbb
sbb
out
jl
adcb
js
loopne
movsb
flds
push
sub
xchg
test
jno
lds
xchg
gs
xchg
jo
xlat
jecxz
cld
stc
insb
and
test
adc
mov
imul
mov
push
scas
and
mov
cmc
adc
xor
shlb
pop
xor
pop
jecxz
fistps
and
int
sub
and
cli
lahf
and
test
fldl
or
mov
push
jno
fidivs
fnstsw
adc
dec
mov
das
pop
mov
aad
arpl
clc
add
ss
mov
scas
sahf
enter
mov
pusha
out
push
std
js
adc
pop
test
popf
sub
sbbb
mov
lahf
mov
cmp
jle
sarl
push
call
pop
repz
add
rcl
inc
nop
and
sahf
jb
pop
and
leave
cmpsl
out
push
jo
daa
scas
shl
enter
mov
sub
mov
in
xchg
stc
out
inc
inc
jl
pusha
scas
xor
jg
and
or
and
jne
ss
xchg
push
insl
adc
bound
cmpsb
out
ret
loope
jge
lret
ret
dec
iret
movsb
out
ljmp
and
sub
out
bound
pop
dec
addr16
xor
sarl
aas
xor
jo
push
out
imul
fsubrs
push
mov
mov
test
or
inc
dec
pop
bound
jns
jecxz
test
ljmp
xorl
mov
jl
xor
daa
push
sub
dec
bound
hlt
xchg
fdivl
sub
xchg
ds
push
or
inc
cwtl
std
sub
push
jbe
std
and
and
jp
adc
sbb
imul
adc
jg
adc
andb
xchg
pop
shrl
dec
cmpsl
imul
sub
push
ljmp
cmp
lock
insl
mov
js,pt
dec
pop
fsubs
jnp
or
mov
fldt
mov
xlat
jb
outsb
outsb
or
jnp
mov
pop
xlat
ljmp
ds
mov
inc
nop
inc
xchg
dec
add
lods
lods
adc
cs
push
lea
shlb
and
enter
mov
out
jg
jne
push
lahf
js
dec
jo
mov
popa
pop
fistps
push
xor
test
sub
adc
int3
loope
xchg
lret
pushf
and
fnstenv
add
scas
inc
push
or
andl
xchg
push
cmp
jge
sbb
andl
shlb
push
fadds
rorl
jecxz
andb
in
stos
mov
fcomps
mull
dec
jp
sub
addl
fidivrl
lock
in
hlt
push
sbbb
sbb
mov
add
arpl
cmpb
sub
push
push
xor
xor
cmp
or
jge
sbb
icebp
push
inc
jecxz,pn
adc
jnp
cli
lahf
push
jnp
ret
lcall
je
fwait
fimuls
push
ficoms
loope,pn
scas
hlt
xchg
loop
xchg
fsub
dec
xchg
mov
gs
pushf
xor
adc
sbb
push
int3
dec
dec
jb
ret
mov
pusha
scas
scas
imul
stos
aas
in
pop
and
dec
movsl
les
aad
sahf
lods
daa
jmp
and
pop
push
xchg
into
lret
mov
xchg
sbb
jg
aad
push
pop
mov
insl
lds
lea
mov
leave
lea
jbe
xchg
popa
push
xchg
mov
sub
iret
hlt
and
and
mov
nop
int
sbb
cli
mov
insb
pusha
push
ret
inc
enter
repnz
sbb
mov
fsts
fisubs
insl
fwait
stos
aam
frstor
pop
ja
dec
js
xlat
mov
rolb
pusha
movl
cmp
clc
push
mov
mov
jg
add
popf
bnd
mov
adc
scas
hlt
scas
in
stos
loope
xor
push
xor
ror
inc
sub
add
push
das
data16
outsb
repnz
mov
cmpsl
adc
and
rclb
inc
negl
cs
adcb
xchg
mov
movl
and
jno
mov
lret
pop
jno
aas
or
cmp
int
repz
ret
xchg
cltd
addl
push
jle
in
test
ja
mov
test
andb
adc
dec
lock
mov
gs
sub
nop
or
neg
xor
xchg
jecxz
dec
inc
jecxz
mov
xor
jmp
sub
out
sahf
push
pop
sbb
adc
sub
xor
addr16
jge
mov
loope
out
sbbb
sarl
stc
xchg
mov
dec
mov
mov
sarb
adc
cmc
adc
mov
popf
test
das
jle
mov
xor
mov
clc
sbbl
sbb
xchg
adc
stos
mov
lcall
notb
sbb
xor
xor
leave
fistl
popf
pop
mov
shrl
pushf
jl
out
push
lret
or
pop
movsb
cwtl
mov
mov
scas
mov
xor
ficompl
or
adc
test
mov
inc
lds
cmp
lock
mov
ret
jae
add
das
lea
test
jl
daa
int3
roll
jae
mov
jecxz
adc
fisubrl
dec
and
sub
loopne
repz
lock
pop
mov
inc
pusha
popa
fnstenv
cmp
push
or
sbb
jmp
inc
sti
push
xor
cli
sub
fdivrs
and
lret
sub
gs
cwtl
cmp
xor
inc
sbb
push
sub
pop
fisubrs
mov
lock
sub
xor
rcr
mov
in
int
xchg
cmp
dec
rcrl
cld
cmp
lds
inc
mov
icebp
in
dec
add
pop
and
das
and
adc
pop
dec
xchg
stc
xchg
and
xor
shrl
sub
jns
addr16
mov
lds
mov
enter
data16
stc
fimuls
xor
dec
sahf
push
in
outsl
xor
pop
adc
jl
inc
pop
outsb
push
out
test
jae
mov
imul
and
sub
dec
std
cmp
push
pop
movsb
push
push
aad
fildll
pop
ljmp
mov
sub
mov
cmp
sbb
and
dec
aad
push
js
int3
mov
mov
dec
mov
rol
mov
daa
push
loopne
xor
lahf
lods
jl
or
inc
mov
pop
mov
push
xchg
mov
sahf
push
push
fmuls
pop
add
add
out
les
add
insb
lcall
loope
sahf
mov
xor
leave
push
jl
add
push
push
cmp
push
push
mov
mov
jg
stos
test
inc
inc
xchg
in
aas
je
mov
inc
mov
sbb
test
push
stc
shrb
cwtl
aas
or
leave
jb
flds
push
push
xchg
sahf
insl
jo
pop
mov
jnp
mov
push
and
cli
jo
cmp
loopne
or
mov
leave
mov
sub
imul
in
fstl
mov
es
mov
sbb
pop
testl
push
in
add
add
imul
int3
mov
ds
jae
pop
sbb
fildll
adc
cmc
push
into
push
loopne
mov
inc
pop
jo
xchg
fistpll
adc
sub
lret
call
xor
cmp
and
repnz
test
dec
sub
inc
bound
mov
xchg
adc
push
stos
pop
popf
mov
push
or
lahf
dec
in
jns
inc
stc
xlat
arpl
incl
cmpsb
xchg
push
jno
xchg
imulb
ret
lret
mov
lret
jb
ljmp
lcall
scas
lea
out
inc
inc
clc
xchg
es
lds
and
out
jmp
mov
lea
fadd
jecxz
sbbl
int3
adc
loope
and
add
es
mov
mov
add
fs
xor
add
lea
arpl
and
imul
lea
mov
pushf
call
cs
sbb
jle
mov
pop
push
int
pop
sub
lahf
aad
add
rclb
sub
mov
jp
test
sub
inc
fistl
fisubrl
jnp
insl
inc
mov
in
mov
aaa
insb
lret
divl
outsl
push
loop
rsm
sbb
xchg
ja
mov
xchg
cmp
test
lret
mov
cmpsl
repnz
movsb
fwait
in
lds
orl
inc
jp
out
clc
and
aam
popf
inc
mov
add
outsl
mov
mov
repnz
xor
notb
jae
aad
jns
pop
pop
das
scas
cltd
mov
out
push
push
nop
repz
ja
dec
cwtl
and
dec
push
cmpsl
push
push
inc
pop
adc
xor
lea
mov
arpl
shrl
mov
pop
in
pushf
add
jmp
add
cwtl
test
push
mov
jae
outsb
leave
xchg
ror
pop
mov
sbb
sub
loopne
test
pop
pop
cmp
dec
pop
mov
push
add
out
add
and
add
add
in
adc
mov
inc
xchg
xchg
out
sbb
rcr
aaa
aas
insl
aaa
jge
cmc
pop
pop
adc
fildll
pop
stos
jmp
jns
dec
xchg
test
std
mov
js
ljmp
rcr
xchg
cmpsb
sbb
scas
mov
push
call
popa
gs
push
lahf
rclb
sub
jnp
and
pop
ljmp
aas
adc
xchg
mov
jl
das
pop
push
popf
out
pop
adc
adc
mov
push
sbb
out
xor
jecxz,pt
leave
cld
out
mov
and
jecxz
mov
in
in
push
cld
inc
sub
mov
xchg
das
fistl
sbb
pop
pushf
mov
inc
mov
xor
sub
testl
js
push
lods
sarl
fucomp
es
jnp
incb
fistps
pop
xchg
xor
xchg
fwait
xor
lret
add
xor
int3
ljmp
add
ret
pushf
ja
aad
adc
arpl
clc
fcompl
cmc
jb
out
sar
dec
or
inc
std
dec
push
enter
fiadds
mov
fisttpll
fistps
pushf
and
xor
enter
outsb
add
or
pushf
ret
adc
cmp
mov
adc
mov
ds
loope
push
out
mov
xlat
lods
mov
or
xchg
xchg
sub
xlat
push
push
dec
fwait
stos
data16
mov
xor
or
cmp
shll
int
inc
jmp
cmc
cli
testl
xchg
insl
add
and
cmp
cmc
xchg
gs
inc
push
je
scas
test
and
mov
pop
cmpsb
xor
mov
cmp
sbb
lock
outsb
in
xchg
pop
fwait
adc
or
enter
stos
mov
dec
ljmp
mov
sbb
mov
lods
out
and
lock
mov
cli
insb
and
and
push
inc
fstpl
test
dec
enter
xlat
sub
adc
insl
dec
mov
insb
push
pop
hlt
int3
je
std
fidivl
xchg
adc
mov
mov
out
in
cli
mov
jae
cmp
mov
imul
and
add
xor
xchg
dec
or
shrl
inc
add
mov
mov
ret
sub
icebp
xlat
test
xchg
or
xor
xchg
aaa
sub
int3
pushf
mov
in
je
jmp
into
movsl
sub
pop
push
enter
aad
adc
fs
push
inc
icebp
outsb
cmp
jle
or
stos
push
ret
jecxz
lret
test
ss
in
cmp
pop
adc
xor
inc
xor
fildll
xor
xchg
adc
push
outsl
xor
mov
aas
aam
cmp
inc
jnp
pop
mov
pop
les
out
out
popf
jle
icebp
mov
test
mov
in
mov
scas
imul
and
jle
fistl
xchg
mull
mov
xor
jp
mov
lea
and
pop
test
push
lcall
mov
inc
loope
loopne
call
xchg
sbb
ja
jae
js
into
sbb
jmp
cwtl
push
dec
pusha
mov
jno
and
dec
and
xchg
and
icebp
out
ficoml
inc
jbe
mov
or
mov
pop
mov
rolb
pop
mov
fisttpl
fimull
enter
das
repz
cmp
mov
int
imul
and
jb
js
add
ds
fdivl
pop
jp
rcrb
nop
push
imul
call
lahf
push
mov
pop
sub
jl
fisubs
jl
cwtl
fs
pop
or
cmp
xor
dec
and
mov
cltd
rol
shll
pop
dec
lahf
cmpsl
addr16
movsl
ret
sbb
test
int
pop
xor
into
xlat
inc
aam
test
mov
pop
popf
loopne
gs
jge
in
cmpsl
cmp
inc
mov
notl
dec
ds
cmp
outsb
sub
jae
hlt
lods
addb
mov
push
pop
iret
loopne
jp
mov
insl
mov
cmpsb
das
lret
cltd
shll
jbe
lods
sbb
sub
push
adc
adc
jge
sbb
cld
imul
cmp
mov
sbb
inc
repnz
inc
push
sub
sbb
mov
mov
loope
mov
push
stos
mov
jecxz
dec
mov
push
sub
jge
adcb
subb
or
push
xchg
mov
sarl
mov
xchg
add
outsl
cmp
push
xor
inc
mov
in
in
mov
mov
hlt
jmp
adc
dec
lea
cwtl
stos
clc
sti
pushl
fiadds
mov
adc
cmp
xor
mov
mov
sbb
inc
push
popf
xor
cs
mov
adc
pop
scas
and
je
icebp
dec
xor
jl
cmp
imul
add
sti
sbb
pop
pop
mov
icebp
pop
rol
rorb
aas
or
stc
imul
or
and
or
push
sbb
out
add
cwtl
push
shl
out
sub
ljmp
xor
das
jl
pop
flds
xchg
loope
fs
mov
mov
or
xor
mov
les
add
sub
das
js
or
and
push
cmp
frstor
jl
dec
dec
mov
popa
mov
xchg
mov
dec
es
pusha
and
add
out
xchg
popf
hlt
dec
inc
int3
fists
in
mov
add
sbb
mov
sub
repz
xor
sbb
xchg
mov
stos
lcall
movsl
inc
outsl
test
out
pop
and
jno
inc
push
out
pop
jae
xchg
or
lock
lret
adc
mov
call
add
jno
xor
xchg
xchg
dec
push
add
loop
shrl
add
pop
mov
dec
imul
xor
fs
imul
add
mov
lods
mov
daa
mov
mov
xchg
faddl
test
push
mov
jb
sti
shrl
fistl
sarl
dec
repz
jmp
enter
lock
xor
or
jae
lahf
jmp
mov
cmp
js
push
cmp
imul
mov
add
out
popa
cmc
scas
push
inc
cmp
and
push
xor
int
es
mov
cmp
mov
xchg
filds
or
in
test
cmp
inc
xchg
push
test
in
int3
adc
pop
lret
cmpb
cmpsb
cmc
lret
lret
lret
outsb
hlt
iret
pop
xlat
pushf
and
xchg
jecxz
mov
jne
cltd
in
enter
mov
xchg
mov
pop
jbe
sbb
cli
fisubl
add
sub
mul
movsb
inc
aam
mov
idivb
int
mov
lahf
out
enter
ficoml
shrl
xor
push
push
int
push
mov
lds
or
lods
bound
imul
jp
adc
mov
xor
xchg
pushf
xchg
imul
push
inc
out
pop
sub
mov
clc
xlat
mov
xor
xlat
into
dec
pop
add
mov
aas
lcall
mov
and
call
fiaddl
dec
mov
and
inc
xchg
push
in
pop
dec
data16
ror
je
fnstcw
and
sahf
leave
andl
and
pop
repnz
in
xor
push
sub
xchg
inc
adc
sub
push
fildl
mov
cmp
inc
mov
xchg
xchg
pop
add
cs
mov
lahf
out
mov
in
jmp
insb
add
rcr
out
push
jns
inc
out
popa
mov
push
scas
bnd
add
jge
mov
jg
cs
shrl
sarb
outsl
loope,pt
xchg
or
outsl
xor
test
fiadds
sbb
dec
in
shr
xor
sbb
outsb
mov
inc
pushw
and
xchg
scas
pop
adc
and
xchg
rcll
inc
imul
sar
imul
dec
out
cmp
rorb
xchg
call
mov
cs
cmp
stc
loop
fs
xchg
jmp
xchg
pop
fstp
es
lods
dec
cmp
pop
nop
xchg
cmp
mov
jecxz
lahf
jl
pop
push
aad
popl
setno
xor
cmc
rcr
call
lcall
cld
dec
in
arpl
psubw
outsl
jns
mov
fcomip
repnz
sub
inc
pop
xor
aaa
cmpsl
sbb
sbb
cmp
xchg
sbb
shlb
jae
fmull
xlat
dec
clc
adc
xchg
mov
pop
cld
outsb
loop
stc
jmp
mov
ret
jl
adc
xchg
jmp
mov
ss
mov
inc
and
pop
xchg
mov
test
fisubrl
in
push
outsl
jno
in
rcl
or
xchg
xlat
addb
push
cmp
sbb
cmp
xor
push
jle
dec
add
push
pop
jo
jg
xchg
mov
dec
xchg
pop
sub
shl
out
ljmp
ds
mov
inc
xchg
xchg
sar
adc
jno
scas
ss
or
sub
xor
loopne
pop
jns
sbb
cmp
test
cli
in
cltd
repnz
pop
test
cmpsb
xchg
mov
adc
adc
mov
push
into
test
cmc
imul
jnp
mov
xchg
inc
sub
mov
cwtl
mov
in
pop
in
or
popa
push
test
add
xor
call
ret
inc
and
mov
movsl
inc
clc
xchg
push
cmp
daa
mov
dec
aas
jnp
cs
adc
add
fisubs
aas
push
sub
mov
cld
jo
sbb
aam
scas
negb
insl
xor
lods
ds
mov
jle
add
gs
in
incl
mov
and
mov
outsl
cmp
mov
xor
cmc
cmpsb
xorl
fwait
js
mov
cmpsl
cltd
fnstcw
push
xchg
es
out
push
cmp
out
mov
push
jbe
and
iret
mov
insb
cmp
repz
cmp
jne
jb
xchg
mov
std
cmp
cli
pop
test
and
mov
stc
jp
lret
imul
mov
adc
jle
sub
nop
fistps
dec
lret
addr16
dec
sbb
sahf
out
adc
or
fldt
push
test
adc
popf
and
cltd
xorb
adc
pop
sbb
bound
cmp
daa
sub
fucom
stos
mov
cmc
push
pusha
jp
mov
sub
mov
push
cmp
dec
shlb
dec
bound
mov
cmp
faddl
loope
inc
ret
or
xchg
and
and
push
pop
fs
ss
mov
les
ljmp
cmp
int3
cld
in
nop
cltd
std
outsb
icebp
pusha
sbb
mov
push
out
xor
or
in
and
jle
insb
sub
mov
jmp
dec
pop
sbb
cmp
fwait
dec
lar
jge
pop
cmp
mov
pop
jo
mov
inc
int3
jne
xchg
sub
test
fldl
mov
push
mov
mov
fsub
imul
inc
cmp
cli
mov
pop
jp
imul
mov
testb
add
or
rorb
arpl
sub
scas
pop
cmp
xchg
sub
cwtl
aas
pop
shl
ss
pushf
xchg
scas
add
shufps
mov
nop
adc
xchg
mov
xlat
xlat
mov
dec
adc
sub
mov
orl
out
cwtl
cmp
mov
cltd
xor
xchg
pop
loop
mov
lock
arpl
js
in
mov
lods
dec
nop
orl
ret
sub
or
lds
nop
js
and
pusha
ja
psadbw
leave
mov
lahf
mov
inc
cmpsb
or
jmp
and
fstpl
inc
outsb
lods
repnz
xlat
or
mov
xchg
xor
or
lock
push
roll
pop
mov
push
popf
inc
mov
hlt
lahf
push
out
dec
outsb
in
mov
jmp
and
fldcw
push
push
add
inc
sti
fisttps
loope
test
andl
mov
shlb
cld
add
lahf
outsl
fstpl
orl
scas
fsubs
or
push
mov
jb
je
push
ss
test
in
stos
mov
push
dec
push
mov
clc
mov
adc
ret
sbb
pop
les
scas
outsb
xor
rcrb
add
push
dec
insl
jge
push
adc
dec
jo
call
jne
mov
mov
inc
xor
xchg
jns
inc
popf
mov
pop
adc
adc
js
sub
test
mov
aad
fstpl
gs
cwtl
mov
dec
push
xchg
cld
pop
jge
jb
mov
insb
sbb
and
mov
lret
fcom
lret
fldcw
pop
enter
jo
add
xor
rep
jle
xorb
movsb
fisttpll
notb
and
xchg
mov
add
pop
pop
rcr
jbe
add
sub
mov
xchg
jl
stos
fisttps
mul
cltd
fwait
cmc
ja
pop
in
fldt
sub
in
popf
out
mov
xchg
idivb
xchg
aam
sub
movsb
push
dec
outsb
out
sub
andb
cmc
or
arpl
push
push
int3
xor
mov
and
mov
bound
out
inc
add
mov
adc
loope
adc
out
and
and
mov
mov
inc
add
pop
mov
add
insl
stos
aaa
pop
xchg
pop
mov
mov
xchg
into
fimull
shl
push
sbb
push
les
mov
add
xchg
aam
enter
jmp
push
jmp
xlat
rcr
mov
mov
pop
ret
push
and
decl
mov
mov
mov
push
mov
dec
pop
add
or
stos
mov
out
std
loopne
cmc
mov
inc
lock
push
push
push
mov
daa
dec
movsb
pop
cmp
sbb
jae
in
push
rcll
pop
aad
call
push
sub
pop
ds
push
sbb
mov
out
fnstcw
mov
sbb
nop
lret
filds
or
jle
mov
aam
and
in
mov
cwtl
dec
and
rcll
movsl
mov
and
cmp
je
in
ds
stos
cvtpi2ps
dec
add
ret
push
xchg
and
sahf
lret
in
leave
insb
cmc
push
mov
add
or
inc
mov
mov
icebp
jmp
sbb
pop
lods
cmp
and
push
jge
sub
add
mov
into
enter
or
or
notb
sbb
jmp
outsl
add
insl
repnz
xor
cmp
in
scas
dec
lock
fstl
xchg
mov
or
add
sbbb
mov
sub
mov
push
xchg
mov
aad
add
and
fbld
arpl
ds
and
mov
push
fcomps
in
mov
adc
clc
jmp
into
adc
mul
push
jmp
fldt
mov
cmc
mov
push
sub
out
inc
sarb
cmp
mov
int3
repz
das
xor
ret
pop
test
cmp
popf
cwtl
jb
pop
push
es
imul
inc
pop
loop
jb
push
or
add
xor
jno
sub
or
sub
fstl
aaa
cmpsb
push
sbb
addr16
daa
aam
loope
and
and
mov
adc
popf
stc
fidivrl
mov
data16
jmp
mov
push
popf
rorb
mov
sbb
roll
and
push
jp
sub
sahf
sbb
pop
jecxz
sub
mov
mov
jb
inc
push
je
or
pop
cmp
cmp
cmp
push
fcmovne
int3
rcrb
mov
mov
mov
ret
aam
cwtl
pop
xchg
ss
shrl
sarl
sub
lret
add
lahf
cmp
cmc
out
sub
xchg
sbb
aaa
adcb
jecxz
gs
push
mov
and
cmp
pop
mov
dec
cmp
dec
out
insl
add
cld
xchg
sub
in
fdivrl
and
pop
mov
and
xchg
pushf
loop
shl
pushf
iret
dec
push
sbb
cmp
testb
ret
jle
data16
addr16
rorl
out
adcl
cmc
and
adc
imul
test
push
lods
mov
sbb
pop
cld
push
or
push
sahf
cmp
imul
push
loopne
jecxz
nop
les
aad
inc
aaa
enter
and
lods
rol
mov
pop
pop
test
fnstcw
jmp
add
adcb
cmp
push
xor
add
inc
movsb
jnp
dec
lds
sub
mov
push
sbb
sub
push
cltd
mov
in
neg
cltd
pop
imul
mov
dec
push
rorl
adc
xor
sbb
les
fbld
mov
mov
ror
dec
sub
shrl
addr16
jl
or
ja
shll
adc
jbe
arpl
push
mov
ljmp
push
movsb
movsb
lahf
test
fwait
js
xchg
sbb
add
and
out
rclb
mov
sahf
push
sbb
pop
cmp
lock
call
pop
xchg
faddl
fstps
scas
std
lret
mov
sarb
std
shlb
pop
add
bound
repnz
cmp
testl
ret
call
dec
sysexit
xlat
pop
mov
nop
push
popf
imul
xor
pushf
lods
sbb
popl
enter
pop
xor
out
push
ret
add
loop
dec
mov
cmc
mov
loope
daa
es
imul
fld
or
or
or
pop
subb
sbb
add
push
ror
push
jp
and
jmp
fs
shlb
imul
cmpsl
xchg
sub
cld
lcall
sti
push
pop
inc
inc
xchg
fdivs
js
dec
lods
jecxz
out
fiadds
cs
cld
pop
xor
push
pop
pop
mov
hlt
push
loopne
rcl
imul
hlt
enter
jo
and
test
es
outsl
sub
pop
cwtl
mov
dec
pop
stos
mov
sbb
test
xor
ljmp
lret
fs
cmpsl
addb
les
pop
push
mov
dec
adc
fstps
fistps
mov
aaa
mov
leave
shrb
cmp
aam
sub
cwtl
jb
pop
testl
and
push
xor
aas
push
push
jecxz
out
jle
cmc
data16
in
dec
rorb
stos
sbb
ret
enter
adc
loope
andl
mov
cwtl
loop
inc
push
xchg
mov
std
out
sbb
add
aas
cmp
pushf
push
sub
ljmp
pop
clc
jge
pusha
or
xchg
les
lock
movsl
push
dec
pop
push
dec
je
cmp
sbb
fwait
sbb
flds
nop
cmp
in
stos
cltd
fbstp
push
lret
dec
xchg
in
cli
andb
jbe
inc
add
xchg
push
mov
popa
jbe
push
data16
lods
mov
sti
ret
jo
lea
test
out
jbe
mov
dec
fnstcw
xor
xor
cmp
rorl
jp
repnz
sub
or
add
pushf
scas
push
xchg
out
xor
sub
and
jmp
cmp
pushl
mov
push
xor
cmp
adc
xchg
stc
es
jno
push
clc
inc
enter
cmpb
dec
push
out
xor
jmp
pop
test
add
mov
out
or
andl
sub
xor
pcmpeqd
sahf
dec
mov
xchg
scas
lods
fwait
mov
fmul
dec
adc
dec
sub
add
sarl
xchg
cmp
std
test
pop
push
push
in
lret
movsl
enter
mov
push
in
popa
mov
xor
cmc
dec
jnp
push
mov
inc
dec
fadds
sbb
dec
stos
aas
call
fcompl
mov
mov
lods
test
in
adc
mov
or
arpl
adc
lret
mov
ret
mov
xchg
sti
adc
jo
or
insl
daa
mov
push
pop
jno
cmp
cld
test
ret
sub
nop
push
out
das
dec
mov
xor
xor
mov
mov
jg
pop
xorl
out
repz
pop
add
clc
adc
cmc
popa
mov
push
repnz
ljmp
jle
inc
xlat
movsl
add
cs
mov
mov
pop
test
scas
jae
loop
mov
sub
ja
popf
sahf
adc
test
dec
cmp
imul
fsubl
es
mov
add
mov
bound
mov
push
jl
sarb
xchg
sub
sahf
lahf
ljmpw
jmp
dec
pop
xchg
mov
out
nop
push
jl
ffreep
or
std
push
rolb
cld
mull
loop
fldt
xchg
into
adc
shlb
bound
lahf
rcll
fildll
outsl
testb
push
cmpsl
incl
inc
mov
adc
add
lock
icebp
gs
pop
ror
bound
idivl
mov
stos
inc
out
fists
fisttpll
adcb
adc
mov
sub
jne
pop
and
xor
dec
pop
stos
push
int3
into
lods
fs
movsw
mov
ficomps
or
xchg
dec
in
xchg
fsubrl
ds
add
pop
arpl
xchg
and
rolb
pop
stos
fnstsw
aas
js
not
xor
mov
test
mov
pusha
out
jp
jno
xor
imul
lcall
ja
mov
push
popa
inc
out
in
push
outsb
stc
pop
test
faddl
cltd
cwtl
mov
push
hlt
mov
mov
in
mov
cmp
xchg
push
inc
arpl
mov
sbb
mov
ja
pushf
ret
aas
sub
das
clc
add
xor
loopne
les
jo
addr16
or
jo
mov
dec
test
xchg
mov
jo
sbb
lds
mov
mov
aad
or
push
push
in
mov
sub
adc
xor
outsl
pop
push
popa
stc
lock
rorb
push
xor
fisubl
or
lret
add
jae
sbb
add
adcb
stos
push
sub
aas
icebp
test
sub
movsb
dec
hlt
jp
sbb
pop
daa
inc
lods
inc
xorl
popf
cltd
clc
xor
adc
mov
inc
xchg
daa
mov
and
mov
mull
xchg
jmp
cmpsl
pop
sbb
cmp
out
pop
sbb
sti
xchg
mov
mov
cmp
jbe
ljmp
les
and
xchg
pop
arpl
mov
mov
popa
outsb
sub
and
ffreep
subl
ss
mov
sar
dec
jg
sub
inc
cmp
jmp
ss
push
xchg
xchg
mov
inc
inc
or
dec
cmp
pop
rcrb
fsub
repnz
lods
mov
cmp
add
dec
inc
inc
pop
adc
je
popf
mov
mov
pop
jb
dec
jns
lret
xor
dec
mov
adc
out
mov
push
rcr
daa
jne
outsl
sar
fwait
scas
xlat
imul
sub
shlb
sarl
or
lret
sbb
aad
aam
test
repnz
mov
xchg
inc
push
loopne
imul
ror
xor
addr16
push
and
pop
ret
xchg
out
cmp
push
or
or
call
aaa
adc
push
cld
mov
and
cmp
mov
js
fcompl
mov
lock
rorl
enter
int3
cmp
test
mov
scas
sub
jl
rcrl
popf
int3
jns
mov
mov
dec
sub
inc
hlt
add
pop
sub
or
ret
js
push
into
lret
sub
push
test
loopne
shrl
inc
in
scas
sub
and
fcomps
cld
and
fwait
enter
int3
jmp
shll
movsb
pop
push
jb
repz
pop
das
lret
sbb
loope
clc
sub
cmp
sbb
mov
pop
out
lods
cmc
outsl
aas
sti
and
jmp
dec
add
jmp
add
add
push
divb
push
or
mov
rcl
mov
aad
std
out
popf
lock
test
sub
lds
jl
cmp
stc
popf
es
mov
mov
adc
lea
sti
add
ss
or
pop
loope
adc
ja
pop
rcrb
div
out
push
xchg
xor
test
gs
and
mov
cli
out
out
outsb
pop
aam
jne
cli
cltd
fs
shll
inc
cmp
push
jno
inc
push
lret
push
int
aaa
repz
mov
mov
daa
mov
xchg
cmp
ds
cld
and
scas
arpl
sbbb
hlt
jmp
outsl
jns
cli
mov
xchg
pop
cmp
add
stos
or
iret
or
stc
adc
pop
repnz
sub
subb
arpl
or
inc
repz
jnp
imul
fildll
shrb
daa
pusha
gs
cmp
fisttps
mov
push
lret
jl
inc
std
repz
cmp
bound
and
test
inc
inc
and
pop
inc
mov
lock
in
cmp
inc
mov
lea
mov
mov
and
mov
je
loopne
stc
pop
shl
movsb
fisubs
inc
outsl
icebp
pop
outsb
hlt
or
mov
rcr
ret
ret
pop
testb
nop
lds
shr
ret
xchg
adcl
movsb
inc
pop
mov
bound
add
sahf
xchg
lahf
cs
fdivp
pushf
jae
dec
dec
dec
or
jl
aas
push
fistpl
cmp
shrl
push
cmp
jle
cmp
popa
add
sbb
xor
pop
jge
int3
jecxz
sub
xor
jno
mov
test
push
mov
sub
movsb
mov
dec
sarl
mov
loop
fwait
pop
mov
pop
sbb
dec
arpl
xchg
or
hlt
hlt
jo
mov
sti
imul
loopne
roll
aaa
mov
pop
lods
std
shl
jp
out
or
add
mov
adc
xchg
push
clc
push
push
aam
jbe
in
cmp
push
nop
idivb
or
test
pop
out
adc
out
pop
pushf
das
mov
fdivrp
cli
jge
andl
cs
sbb
add
mov
push
sub
add
add
and
cmpsl
sub
outsl
mov
jae
repz
jno
sub
and
int3
mov
jle
jbe
sbb
data16
or
out
dec
loope
mov
loope
jp
arpl
add
in
cli
pop
popl
and
mov
test
repnz
out
hlt
arpl
sub
mov
sbb
jo
pop
mov
stos
add
mov
push
jecxz
xor
mov
jns
inc
aas
repnz
scas
popa
imull
out
mov
in
aaa
mov
div
dec
inc
fs
adc
xorb
scas
xchg
xacquire
lock
mov
cmp
push
inc
int
xchg
sub
add
inc
ss
mov
cmpsb
mov
mov
cmp
loope
out
mov
out
cld
in
sub
jnp
ljmp
ret
mov
ret
xor
sahf
xchg
jbe
push
pop
push
enter
or
cmp
in
mov
divb
lret
fs
jne
and
in
push
xor
adc
jle
inc
jle
dec
push
cltd
push
lcall
lahf
sub
mov
xor
or
xor
fldcw
add
dec
jns
mov
fs
push
nop
aam
jae
xor
insb
or
lods
jne
rcll
dec
sbb
inc
or
std
ljmp
adc
repz
arpl
mov
mov
push
repnz
test
daa
mov
mov
adc
dec
jne
out
push
jbe
fidivrs
mov
dec
sahf
cmp
jno
cs
lcall
loopne
xorb
xor
mov
out
xchg
int3
add
cmp
int3
or
insb
cli
jbe
je
jmp
jmp
mov
insl
jno
xor
xchg
test
fwait
cmp
dec
pop
mov
or
into
mov
push
fs
into
push
adc
mov
mov
push
xchg
xlat
jo
push
aam
imul
push
outsl
xlat
xor
daa
ds
test
xchg
add
out
jbe
call
ja
insb
pop
xorl
and
jg
data16
sti
aam
rol
int
and
imul
push
adc
inc
or
in
inc
cld
scas
fsubrl
dec
stos
xchg
jmp
or
scas
sub
pusha
dec
lret
or
push
movhlps
enter
popf
jp
into
pop
hlt
fisttps
clc
mov
hlt
daa
mov
je
sub
xor
push
lock
or
cltd
mov
mov
insb
popa
loopne
add
jnp
imul
cmpsl
mov
mov
pop
test
sub
mov
add
int
dec
xor
pop
arpl
iret
cli
sbb
jge
and
mov
adc
imul
or
into
sbb
nop
adc
aad
cld
fwait
aam
mov
mov
call
insb
push
dec
xchg
nop
jns
mov
cmp
xchg
sub
fsubs
out
sub
lods
lret
sub
repz
mov
sub
jne
push
in
pop
or
inc
in
loop
sub
inc
jne
push
or
xchg
test
ficoml
push
xchg
clc
push
repz
lahf
mov
xor
in
adc
mov
mov
push
in
mov
xor
mov
push
sbb
xchg
cmc
test
xchg
aaa
pop
sahf
mov
mov
pop
dec
mov
out
rcll
je
cmpsl
addr16
std
push
inc
jo
gs
mov
mov
pop
stos
dec
loope
rcll
ljmp
mov
mov
fdivl
add
mov
xchg
rolb
std
ljmp
push
lods
xor
xchg
sub
push
cmp
mov
pop
rcl
aad
mov
xorl
jecxz
sti
loope
jno
out
add
ds
or
rol
xchg
aas
scas
add
lea
scas
xchg
int3
adc
and
test
int3
aam
add
int
gs
es
push
add
cmp
cltd
xor
jecxz
test
adc
mov
fistl
xchg
push
jge
cmpsl
jge
shll
mov
dec
lea
mov
test
or
add
xor
sub
sbb
sahf
je
testl
pop
inc
ljmp
xchg
inc
add
dec
add
test
repz
rcll
inc
popf
daa
stc
add
into
lret
push
test
adc
hlt
cwtl
jb
stos
scas
or
dec
loop
mull
ljmp
mov
lock
mov
js
mov
xor
push
and
pop
lods
inc
push
iret
es
cmp
stos
aas
shrl
dec
int3
jmp
orl
mov
mov
cmp
hlt
fmuls
lcall
roll
lock
xchg
out
rorb
mov
imul
cwtl
xor
dec
cli
test
xlat
push
add
outsb
mov
ljmp
cmc
aas
dec
xchg
jb
pushf
mov
sub
mov
push
shr
insl
dec
pop
das
lret
mov
outsl
insb
xchg
mov
add
and
imul
clc
out
loope
adcl
cmp
lret
psubsb
pusha
cli
mov
in
inc
dec
test
mov
pop
pop
clc
xchg
and
loopne
and
adcb
xchg
xorb
cmp
dec
push
mov
mov
subl
xor
adc
pop
out
iret
lret
adc
adc
pop
push
or
cli
xchg
xchg
mov
and
xor
mov
sbb
pushf
out
sbb
and
and
xchg
cmp
movsb
jecxz
push
mov
data16
push
ds
outsl
enter
arpl
mov
cmp
inc
dec
js
push
out
decl
push
mov
jne
movsl
mov
xchg
cld
shr
cmp
lahf
or
dec
jle
imul
xchg
cs
jne
cli
mov
into
cmp
push
packsswb
testw
adc
sbb
mov
out
lcall
jo
and
or
cltd
add
mov
les
sahf
loop
push
icebp
imul
adc
test
out
loopne
in
paddb
add
aaa
cmp
sbb
pop
ss
test
lret
cmovb
outsl
ljmp
mov
dec
or
push
xor
ret
std
adc
es
iret
xchg
int
jnp
sub
clc
or
pusha
ljmp
lods
jmp
push
enter
iret
into
dec
popf
test
arpl
and
dec
mov
pop
loop
das
jl
push
fisubrs
sahf
jb
xor
data16
lods
sahf
cmp
mov
sub
mov
pop
mov
in
mov
lock
out
and
aad
xchg
lahf
jb
add
sbb
in
fwait
cmp
sahf
aas
ljmp
imul
xor
fdivrs
push
mov
movsl
or
outsb
jmp
pop
or
mov
or
cmp
lock
cmp
pop
jae
imul
xor
jmp
adc
fimuls
ds
pushf
jmp
mov
sbb
enter
xchg
shl
mov
sbb
std
or
push
inc
lods
fisubl
or
xor
into
ret
add
mov
mov
push
lock
loop
cmp
in
testl
ret
cmpsl
mov
inc
mov
push
inc
jo
sbb
jo
xor
adc
adc
xchg
cmp
mov
leave
jg
pushf
mov
popa
xchg
fisubrs
rclb
clc
stc
call
jmp
add
mov
test
imul
inc
addl
scas
push
cs
popa
push
nop
sub
sub
pop
pushl
sbb
sbb
fldenv
xor
sbb
sub
sub
and
fwait
mov
sub
fidivrl
ficompl
popa
jns
adc
lods
scas
push
xchg
cmp
mov
outsb
arpl
sub
or
inc
cmp
xor
push
push
pop
or
movsb
negl
scas
aam
fucomip
cli
out
jae
arpl
cmp
cmp
inc
jle
push
sub
push
push
int3
std
inc
pushf
lods
stc
leave
and
pop
mov
pushf
jo
adc
test
push
and
jle
inc
cmp
popa
je
fistpl
jmp
dec
adc
push
jb
jg
rolb
aas
sbb
out
aam
or
dec
je
mul
aaa
mov
fbstp
sbb
jge
xor
mov
lds
scas
stc
inc
mov
mov
fdivrl
xlat
inc
inc
popa
cmp
cli
xchg
pop
into
push
dec
int3
popf
inc
mov
xor
lret
xchg
ror
out
add
xchg
cmc
cpuid
xor
fwait
in
in
je
push
and
lcall
shlb
mov
movsl
and
lods
mov
and
push
inc
in
and
xchg
lahf
cs
dec
sbb
and
insl
lret
mov
shrb
imul
dec
movsl
mov
mov
xchg
add
xchg
xchg
or
outsb
mov
stos
pop
out
loope
mov
stos
inc
xchg
shll
jl
mov
cmpsl
repnz
adc
pop
popa
jo
fcomps
mov
add
bound
je
nop
idivb
mov
xor
mov
nopl
ja
aam
or
pop
cmp
xor
ljmp
mov
int3
mov
xor
call
jbe
add
dec
sub
jecxz
mov
mov
xor
and
ds
pop
cmp
add
jecxz
xchg
sub
ja
or
fistpll
sbb
push
movsl
push
cmp
mov
fiadds
jp
int
test
mov
cmpsl
lahf
jns
in
arpl
pusha
cmp
or
rcrl
cld
test
outsl
push
jne
mov
in
xor
loop
lea
push
pusha
shl
fucomip
adc
test
clc
loop
pusha
sbb
imul
xor
and
xchg
out
loopne
xor
repz
xchg
ja
ret
movb
leave
rolb
adc
push
push
out
xchg
hlt
test
push
pushf
jge
or
push
xor
mov
ja
sub
pop
lret
lds
ja
repnz
jmp
leave
and
out
stos
dec
or
cmp
fmul
sub
stos
das
sub
loope
cmp
xchg
add
push
scas
les
cmp
dec
outsb
lods
ljmp
repz
jge
dec
inc
mov
enter
adc
mov
enter
sub
mov
xor
jecxz
jge
inc
lods
test
stos
lcall
idivb
mov
and
clc
xor
adc
pop
mov
imul
or
int
inc
mov
out
lret
packsswb
sbb
inc
mov
inc
mov
repnz
add
dec
add
xorl
cmpsb
ss
sbb
pop
icebp
cmp
inc
mov
out
cmp
push
mov
ret
cmp
dec
adc
call
jae
ds
test
fs
mov
push
and
mov
sti
mov
and
mov
pop
sub
loope
es
mov
pop
dec
dec
addr16
mov
call
jae
xorb
and
mov
das
inc
inc
lret
into
insb
pop
test
pop
sbb
icebp
mov
xor
fldt
subb
test
mov
fisubrl
scas
leave
mov
cld
lock
inc
xor
popf
clc
test
rep
mov
jge
and
mov
xchg
xor
mov
dec
jb
mov
fninit
xchg
cltd
movsb
adc
sbb
or
adc
xchg
stos
xor
sub
clc
or
mov
push
mov
sti
inc
fwait
xlat
push
mov
pop
pop
mov
adc
xchg
xchg
insl
lret
xchg
enter
cmp
loop
pop
inc
fcmovne
das
mov
orb
adc
jae
sub
adc
lret
push
pusha
mov
lret
sub
cmp
jp
sbb
mov
jg
mov
ja
add
sti
shlb
mov
movl
adc
jns
insb
pop
and
adc
pop
outsl
leave
movsl
loope
sbb
daa
mov
inc
or
mov
fs
xchg
inc
dec
in
and
mov
inc
adc
orb
pushf
int
sub
sbb
add
sahf
xchg
scas
test
leave
test
outsl
push
ret
ljmp
lahf
or
sub
pop
int
adc
in
adc
out
inc
scas
jbe
test
insl
cmp
adc
and
dec
add
push
push
pop
adc
sbb
jmp
jl
dec
jno
jl
movsb
ret
jle
mov
push
mov
mov
test
mov
mov
daa
movsl
xorb
cmp
dec
out
andb
jmp
push
add
pop
aas
rclb
jbe
xchg
lret
mov
or
or
xor
push
std
fnstenv
dec
stos
or
aas
fxch
cmpsb
push
clc
sub
dec
pushf
adc
pop
inc
pop
sbb
int3
cltd
cmp
or
std
sub
and
xor
jo
dec
adc
std
cmc
sbb
xor
dec
xchg
imul
arpl
jnp
mov
out
mov
cmp
pusha
dec
lock
hlt
ss
pop
mov
mov
jge
xor
lods
test
sub
inc
sarl
shll
das
dec
ret
dec
push
fstps
xchg
sbb
cli
mov
sub
clc
sbb
adc
jmp
mov
sub
subl
fistl
jae
jne
push
xor
cmp
shl
call
xchg
cmpsb
dec
mov
adc
fcomip
xor
shr
dec
cmp
inc
jg
sbb
mov
testl
repz
pop
fwait
sub
cs
insb
mov
jl
pop
mov
pop
push
jge
push
lret
sbb
mov
add
test
add
jnp
out
cmp
cmp
call
mov
inc
inc
dec
popa
jecxz
aaa
cli
dec
loopne
rcrb
and
test
and
adc
movl
jl
jl
mov
mov
inc
mov
flds
repz
xchg
add
push
cmp
iret
outsb
bnd
dec
xchg
mov
shrl
jno
arpl
aad
cltd
mov
push
mov
sbb
in
or
lea
sbb
push
xor
and
nop
stos
fisttps
stos
add
outsb
imul
pop
pusha
cmp
pop
es
pop
arpl
pop
xchg
xchg
sbb
xchg
jae
push
mov
push
lods
inc
add
inc
ds
clc
mov
pop
pop
inc
push
inc
mov
jge
add
push
mov
pop
pop
imul
fwait
das
sub
inc
loopne
lds
mov
push
sti
movsl
mov
icebp
xchg
dec
or
pushf
iret
xor
xchg
out
in
dec
adc
in
int
adc
ret
jge
lret
jno
sbb
dec
push
sbb
shll
or
dec
sti
mov
loope
dec
jo
cmp
mov
xor
shll
and
push
icebp
in
icebp
adc
repnz
mov
push
insl
and
add
bound
dec
pop
pop
outsb
aaa
xor
xor
rcr
jno
jne
pop
push
ret
mov
pop
repz
daa
pop
mov
push
repnz
mov
hlt
lahf
cmp
inc
dec
xor
pop
mov
mov
xor
test
dec
cld
or
sarl
ds
add
or
ja
sbb
stos
inc
sbb
int3
push
xchg
flds
pop
insb
push
sub
data16
push
insb
xchg
int3
inc
roll
ss
call
pop
xor
cmpsb
push
int3
jns
hlt
lea
shrb
push
push
xchg
jns
jo
pop
das
jecxz
push
test
sbb
cmp
ror
push
dec
inc
fmuls
aad
dec
jge
scas
sbb
adc
jnp
adc
loopne
repnz
mov
mov
rcrb
or
or
ret
jns
xor
into
cmp
jmp
sahf
jns
call
xor
dec
ss
test
out
push
push
sahf
xor
push
push
jns
sbb
imul
cwtl
popa
inc
bound
test
pop
jl
mov
lods
pop
and
adc
mov
in
push
mov
testl
aaa
mov
pop
mov
scas
cmc
into
loopne
loop
inc
xchg
jl
jge
mov
mov
mov
in
mov
lcall
mov
cmp
push
outsl
cmp
outsl
dec
adc
inc
pop
stc
insb
lock
sbb
push
nop
fidivl
out
into
incl
mov
out
jp
cwtl
mov
in
cmp
sahf
mov
decl
jp
pop
pop
add
or
mov
leave
pop
inc
cmp
into
jns
add
pop
and
pusha
or
mov
test
es
sub
xor
pushf
in
push
pop
sub
and
xchg
sub
loopne
test
nop
and
sub
lock
mov
xchg
jg
mov
sti
jecxz
aam
dec
push
ds
xchg
or
hlt
jmp
jg
mov
sbb
movsl
jg,pt
xor
add
ja
leave
jg
mov
into
lea
es
adc
int
fiadds
subb
stos
shl
or
jae
lea
in
or
push
aaa
mov
shrb
imulb
out
rcrb
dec
xlat
fcomps
or
inc
jg
js
xor
add
sbb
pusha
rclb
scas
iret
add
test
aam
cmpsl
push
jo
push
dec
xchg
clc
repz
cltd
fimuls
loop
movsb
pop
mov
jns
stos
or
lods
in
jmp
mov
inc
mov
movsb
sub
xlat
push
lods
loop
cltd
sub
jb
enter
rolb
movsb
shl
repnz
jge
lret
inc
bound
clc
push
repnz
mov
cmpxchg
out
andl
out
inc
enter
and
push
es
and
adc
lret
add
nop
cwtl
out
lahf
or
mov
ds
fwait
stos
mov
jmp
cmp
or
cmp
xorb
repz
pop
sbb
pop
fadds
pshufw
jb
das
or
adc
mov
or
pop
and
or
xor
enter
sub
mov
mov
mov
push
shll
jno
iret
xchg
les
pusha
mov
divl
adc
movsb
xor
jmp
lahf
ret
int
or
dec
xchg
jg
cmp
lds
sub
xchg
or
jge
out
lret
inc
xchg
jp
pop
clc
xchg
cmp
adc
xor
or
add
jae
mov
adc
cmp
cmp
dec
int3
dec
aas
cmp
fwait
cmp
stos
xchg
scas
pop
aam
dec
daa
cmp
dec
std
push
xorb
movsl
adcl
mov
out
mov
jae
dec
dec
bound
mov
icebp
addr16
fidivrs
leave
pop
xchg
dec
fdivp
mov
adc
xchg
scas
inc
adc
lcall
insb
xor
fdivl
xchg
jmp
lcall
repz
mov
das
popf
mov
jb
jbe
cltd
ljmp
xchg
test
fwait
pop
inc
sub
dec
fnsave
mov
pop
scas
cmp
std
repz
mov
mov
jp
inc
or
dec
push
sub
leave
jns
sub
cld
pop
mov
inc
ret
fidivl
lret
xchg
mov
jg
inc
push
ds
insl
outsb
adcl
gs
div
mov
or
xchg
xor
jnp
xlat
sarb
cmp
insl
dec
inc
sub
iret
or
lret
xchg
pushf
pop
imul
and
add
imul
mov
adc
xor
add
sub
pusha
pop
roll
lock
dec
ja
les
lds
jmp
in
sbb
jle
mov
pop
lret
cli
cmpsl
push
jno
leave
aaa
jo
outsb
cmp
cs
aas
pop
cmp
mov
movsb
mov
jle
aaa
fcomp
imul
add
idivb
pop
cpuid
ds
movsl
mov
push
xchg
mov
lcall
lahf
shrb
jl
out
mov
pop
mul
int
jmp
iret
mov
ss
xchg
mov
js
pop
push
cmp
sbb
lret
sbb
pop
push
fistl
push
and
or
movsb
add
push
dec
xlat
push
fisttps
pop
sub
in
icebp
ljmp
mov
pop
fiadds
sub
aas
pop
shrb
hlt
ret
outsb
add
xchg
aas
addr16
rcll
jo
sub
dec
outsl
addb
push
test
jb
mov
push
jmp
or
inc
cmc
xchg
mov
or
dec
push
ret
ds
mov
popf
fabs
push
ret
das
mov
xor
mov
xor
adc
xchg
mov
and
push
pop
dec
lcall
inc
cmp
push
sub
sub
roll
popf
in
test
push
jmp
repz
stos
inc
pop
sub
test
ljmp
add
je
ret
jle
push
shlb
icebp
xor
andl
and
cmpsl
mov
scas
dec
xchg
test
dec
leave
icebp
and
cmpl
cs
imul
add
fbstp
icebp
shlb
lahf
mov
in
jp
push
sar
fcompl
cmp
xchg
cmp
push
ficompl
lahf
sbb
or
sbbb
mov
int
movl
stc
mov
inc
pop
int3
cmp
push
xchg
xchg
inc
mov
push
notb
jl
fistpl
mov
fiaddl
nop
jl
xor
ds
push
push
in
loope,pt
movsb
loopne
cmp
fmull
or
add
lcall
mov
add
pop
mov
daa
lods
fstpl
outsb
push
pop
je
clc
jmp
adc
sarb
pop
or
fiadds
inc
xchg
mov
cmp
movd
shrb
pop
in
int
dec
jmp
test
xchg
stos
cs
cwtl
ja
cmp
adc
lret
pop
inc
loopne
pop
popa
icebp
loopne
fs
out
push
jb
rolb
adc
dec
xor
cld
mov
fisttpll
push
int
dec
or
mov
xchg
dec
je
or
adc
mov
lods
fiaddl
in
int3
pop
mov
sbb
xchg
fnstenv
push
movb
adc
or
or
cwtl
test
lcall
movsl
das
jmp
out
mov
cmpsb
insl
fisubl
ss
iret
xchg
call
negl
out
fwait
sbb
pop
mov
adc
roll
ljmp
xchg
dec
addr16
xchg
inc
pushl
mov
mov
jle
gs
shlb
and
aaa
cmp
dec
leave
inc
or
fwait
cmp
dec
mov
insb
and
cmp
out
xor
add
hlt
jb
jns
int3
ret
xor
imul
and
mov
add
inc
push
imul
nop
mov
cmp
test
enter
addr16
and
cli
pop
xchg
mov
scas
insl
pop
push
push
scas
call
scas
and
mov
push
or
repnz
mov
add
cltd
movsb
fidivs
xchg
mov
stos
notb
push
pop
daa
aaa
orl
sarb
dec
dec
bound
jp
shrl
jg
sub
jb
adc
mov
jae
xor
scas
int
sub
pop
in
mov
xchg
cmp
hlt
jmp
int3
xor
jno
adc
dec
addr16
pop
shll
aaa
jmp
mov
fisubs
mov
ret
cli
js
and
pop
mov
cmp
jo
repz
popf
das
xchg
iret
dec
mov
adc
in
xchg
outsl
loope
stos
out
cmpsl
ret
xor
cmpsb
iret
psubusw
int
test
push
sub
fdivrl
cs
ret
enter
jp
mov
mov
mov
jg
out
je
dec
push
repnz
or
push
jp
mov
outsb
addb
xchg
inc
lahf
test
mov
mov
and
push
incl
mov
inc
mov
cwtl
and
ja
les
sti
push
add
lret
dec
push
pop
jp
mov
roll
dec
fcompl
sarb
xchg
jns
mov
push
lret
mov
fisttpl
dec
ret
pop
es
jo
and
loope
leave
cld
mov
lds
mov
lea
mov
sub
addr16
mov
std
leave
jb
cmp
or
pop
outsl
jecxz
cmc
dec
xchg
inc
sub
sarl
sbb
imul
cmp
xchg
hlt
and
push
inc
loopne
mov
shr
xor
aaa
test
mov
lcall
cmp
or
movsb
cmc
push
out
xor
and
imul
jb
mov
addr16
stos
xchg
pop
jo
dec
hlt
mov
mov
or
jl
dec
jnp
sbb
ret
sub
sub
sahf
loope
lock
push
inc
sub
rcrl
lods
jecxz
jb
addr16
jle
mov
jge
push
and
xor
or
jbe
cld
mov
mov
sbb
repnz
sub
sahf
addl
jo
push
xchg
fistpl
xor
pop
and
setno
sub
icebp
mov
mov
pop
dec
sbb
popa
sbb
jns
outsl
jl
outsl
clc
xchg
mov
ss
push
ret
fsubrl
push
cli
xor
pop
and
shll
push
aad
call
cmp
inc
or
cmp
daa
sub
fldenv
lods
jl
push
dec
jp
mov
lretw
test
test
xor
lods
sub
xor
stos
mov
mov
mov
fidivs
jno
dec
or
scas
into
jnp
rcrl
or
sub
js
adc
dec
sub
lret
lret
xchg
scas
push
lods
and
scas
scas
mov
push
xchg
sub
icebp
sbb
fmul
inc
jp
lretw
jle
lret
lret
push
mov
adc
sub
cmp
pop
jmp
xchg
jp
pop
mov
push
adc
repnz
xchg
sub
fildll
sbb
pop
lret
hlt
jp
rol
dec
aam
ds
ljmp
les
int3
leave
mov
sub
pop
lea
pop
lods
fsubrs
adc
stos
outsl
push
in
xchg
jbe
scas
sub
cmp
cmp
push
test
sbb
aaa
mov
stc
sbb
jae
cltd
push
mov
cmp
lock
inc
inc
sbb
push
sub
shrd
xlat
sub
outsb
arpl
mov
test
sarb
rorb
mov
xor
fs
inc
adc
fdivl
imul
fldl
dec
dec
in
push
xchg
outsl
mov
and
inc
int3
jno
dec
mov
subb
pop
sahf
ss
mov
les
notl
in
mov
loope
mov
sti
aam
add
fisttpl
pop
addb
sbb
sbb
test
cmp
imul
mov
add
mov
test
call
pop
sbb
das
fmuls
adc
rcr
jnp
loope
lods
decl
inc
insl
fs
ds
mov
scas
filds
loope
xchg
push
xlat
adc
cmova
idiv
and
sbbl
imul
dec
or
shrb
imul
in
ljmp
adc
je
shl
cld
jl
call
push
int
xor
jbe
mov
sbb
pop
lcall
xor
cmp
mov
test
stos
daa
cmp
sub
stc
adc
mov
shll
leave
outsb
xchg
push
sub
outsb
mov
xlat
jg
bound
mov
icebp
xchg
sub
sub
xor
fs
cmpsb
in
or
stos
icebp
jp
cmpsb
sbb
in
scas
mov
inc
push
push
inc
mov
outsl
jne
pop
sbb
ret
gs
cmp
push
sub
xchg
jg
shlb
ffree
fstps
cli
lret
daa
lods
mull
loop
push
jo
mov
stc
cs
adc
repnz
lret
movsb
mov
xor
xchg
mov
pop
test
aas
ror
and
jne
das
loopne
dec
les
or
out
xchg
mov
add
inc
mov
pop
cmp
and
andb
dec
jno
adc
andb
int3
sbb
mov
mov
push
mov
scas
fldz
pop
stc
jns
cli
scas
cmp
adc
push
lret
inc
nop
jo
aaa
icebp
fldenv
mov
xchg
xor
pop
loop
aaa
sbbb
xchg
icebp
outsb
cmpsl
repnz
in
sbb
cmp
fisttpl
or
loop
stc
rcll
jae
les
xchg
and
push
jbe
pop
daa
aaa
lods
sub
mov
mov
sbb
push
xor
fistps
fidivrs
popa
out
int
inc
insb
push
push
fdivl
adc
add
fbstp
or
test
jb
pop
ja
ficomps
and
lret
mov
nop
inc
in
cmpl
je
cmp
and
in
aad
ja
push
mov
lret
imul
ljmp
fisubrs
clc
jnp
ret
sub
rorl
sub
out
push
jge
mov
mov
cltd
jbe
push
shll
jmp
mov
sub
cmp
push
sbb
xor
fidivrs
or
xlat
loopne
push
mov
mov
add
sar
sub
jge
cli
enter
adc
int
leave
iret
jne
jne
mov
les
mov
and
into
out
ret
push
or
xor
mov
xchg
icebp
mov
sub
lret
jp
dec
xor
jecxz
in
fldl
mov
xor
call
add
inc
mov
mov
loope
xor
sahf
fsubrp
xor
sub
adc
xor
sti
push
movsb
mov
or
clc
data16
in
scas
fiaddl
shll
imul
sub
add
pop
mov
nop
in
int3
lock
ds
shll
mov
lods
int3
sbb
xchg
sets
test
push
pop
inc
gs
out
xor
outsb
cmp
cld
dec
push
mov
ljmp
xchg
push
stc
std
icebp
xor
cmpsl
or
mov
and
ret
int3
lret
and
js
xchg
or
sbb
stos
shll
xor
xchg
inc
inc
out
pop
or
sub
sub
into
lahf
ljmp
or
sub
inc
add
addr16
sbb
jae
gs
les
ja
arpl
push
adc
push
mov
cmpsb
fsubl
mov
mov
mov
mov
xor
loopne
lcall
subl
mov
push
ja
lods
cwtl
sbb
andb
push
pop
les
lcall
es
push
inc
xor
imul
fcoms
ret
dec
and
ljmp
push
push
mov
and
repz
sbb
lea
insl
cmp
mov
xchg
adc
xchg
add
add
data16
xchg
mov
popf
clc
mov
movsl
in
cmpsb
push
int3
repnz
mov
shlb
add
pop
stos
pop
aas
hlt
mov
jo
jecxz
jle
rolb
or
xchg
test
fldl
and
addr16
xor
pop
mov
add
push
in
jno
push
lods
jle
jle
ffree
inc
mov
xor
loope
lret
jecxz
xchg
jp
fimuls
pop
and
lods
roll
rorb
sbb
test
mov
xchg
inc
mov
cmp
push
faddl
dec
xchg
pop
lds
cmp
xchg
aam
cmpsb
xchg
jge
or
sub
xchg
pop
sbb
nop
jmp
mov
pop
pop
cmp
mov
fsubr
add
pop
fisubrs
mov
stc
loop
push
sub
mov
cld
xchg
dec
pop
adc
push
es
add
loop
popa
lds
out
sub
lds
jno
in
insl
loope
mov
adc
dec
sub
xchg
jle
shll
xorl
and
adc
sbb
push
loop
imul
add
mov
add
leave
out
fidivrs
push
js
pop
repz
mov
into
test
daa
into
mov
push
cmp
mov
movsb
sub
adc
cli
xor
lds
cwtl
sbb
lods
shrb
pop
stc
jmp
mov
notl
roll
out
std
fstps
dec
pop
popf
aam
xchg
clc
test
into
cmp
rolb
popf
pop
dec
xor
popf
outsl
xchg
repnz
cwtl
cmc
stos
and
ljmp
addr16
out
adc
scas
into
ret
popa
jne
dec
dec
mov
xor
popf
mov
ds
push
mov
lahf
ret
ds
or
and
xchg
repnz
mov
jne
arpl
rcr
fistl
mov
push
xchg
jb
mov
lds
add
call
pop
pop
mov
and
enter
dec
iret
xchg
push
or
inc
mov
xchg
loop
inc
xchg
inc
out
mov
ret
ret
clc
or
xor
imulb
mov
dec
shll
scas
xchg
jle
sahf
in
roll
sbb
lds
mov
aam
add
lret
dec
mov
int
sti
mov
insb
frndint
xor
popf
fistl
lret
hlt
or
ja
push
mov
ja
loopne
aas
insb
pop
cli
stos
mov
cwtl
pushf
sub
hlt
cmpsl
inc
dec
add
jecxz
cmp
pop
cmpsl
loope
daa
out
add
in
je
sahf
pop
ljmp
sbb
pop
test
cltd
jl
dec
idivb
jns
std
xor
mov
stos
repz
subb
mov
mov
js
jmp
push
call
pop
ficompl
cmpsb
jl
or
xor
jmp
pushf
or
in
icebp
jns
rcrl
mov
mov
int
std
out
fstpl
or
imul
fldcw
cmp
mov
and
mov
test
jge
f2xm1
ja
jg
orl
loope
cmp
push
mov
and
mov
add
int
call
repz
aaa
das
fdivrl
ss
push
adc
movsl
jb
mov
mov
roll
push
sbb
dec
cmp
dec
pop
testl
jno
repz
mov
and
mov
mov
imul
lods
inc
sbb
and
jecxz
push
xlat
sub
outsl
mov
in
sub
fcompp
inc
cmp
or
insb
bound
test
mov
xlat
pop
inc
adc
dec
pop
xor
xchg
int
sarb
xor
or
test
jmp
adc
sbb
sarl
rcll
adc
leave
inc
and
jl
rcpps
sub
in
jbe
ja
stos
mov
stos
inc
aaa
push
cld
jmp
push
xor
popa
mov
cmp
pop
fadd
movsb
out
movsb
jmp
xor
pusha
cmp
xor
outsb
pop
pop
pop
push
test
popa
sub
and
mov
into
or
inc
xlat
repnz
rcll
scas
xchg
aas
incb
insb
push
or
mov
imul
cld
cmp
sub
lds
cmp
test
jg
xor
dec
outsb
idivl
xlat
add
sub
xbegin
push
mov
mov
in
arpl
out
pop
xor
popf
push
sarl
pop
cmc
out
insl
nop
xchg
in
mul
pop
rcrb
bound
imulb
add
cltd
mov
lock
add
rolb
push
xchg
jno
cmp
or
andl
lock
ret
adc
cmp
inc
fadds
pop
cmp
iret
add
ficoml
das
xor
inc
mov
xchg
out
lock
mov
enter
imul
fisubl
fsts
lcall
sarb
je
cmp
and
mov
sarl
add
mov
ficoms
xchg
ret
dec
shl
push
or
cs
jp,pt
es
adc
or
ret
sbb
xor
mov
pop
cltd
repnz
data16
daa
mov
and
scas
inc
popa
mov
cmp
repnz
movsb
enter
jmp
es
popf
and
lahf
divb
mov
lods
and
fisttpl
mov
aaa
cmpsb
jg
cmp
in
cli
push
mov
cli
mov
inc
lahf
cli
aad
dec
faddl
sub
xchg
mov
pushf
xchg
in
pop
xchg
shll
adc
add
sbb
ljmp
mov
sub
pop
xlat
and
push
adc
cmp
divl
enter
pop
xor
ja
idivb
andb
rolb
xchg
lea
dec
dec
js
jne
xchg
dec
pusha
inc
and
push
addb
stc
lcall
pop
adc
int3
les
movsl
fistpll
dec
push
daa
shll
cld
punpckhdq
and
jns
clc
xor
push
dec
loop
dec
adc
aaa
movsl
mov
push
mov
fldenv
mov
and
mov
mov
stc
cmc
mov
sub
popa
cmc
cmp
adc
fsubrs
pop
inc
inc
mov
add
je
mov
xor
stos
lods
mov
shld
int3
iret
faddl
xlat
fs
and
jmp
clc
pusha
jp
or
and
sbb
ja
xchg
xchg
fidivrs
xor
fwait
jle
xchg
mov
cs
sub
add
in
xor
cltd
sub
fnsave
or
data16
call
and
cmp
xsha256
cmpsb
roll
sub
pop
xchg
xchg
mov
xor
xor
pop
mov
loop
stc
mov
and
mov
mov
inc
rol
cmp
add
int3
jmp
hlt
lret
xor
outsl
std
fdivs
scas
xchg
mov
jle
dec
push
bound
jo
int3
sub
xor
lea
jno
xchg
iret
inc
push
mov
fadd
mov
clc
xchg
cmp
test
insb
popa
dec
push
fs
clc
ficoms
or
clc
lods
xchg
push
mov
cmp
sub
sub
or
rclb
inc
and
mov
xchg
sbb
lods
loopne
repz
mov
test
fists
jl
cli
fwait
cmpsb
aaa
mov
add
icebp
in
ljmp
shrb
rcrb
call
xchg
xor
xchg
sbb
es
sbb
hlt
mov
loopne
sbb
mov
bound
mov
or
cmpb
dec
mov
mov
lret
stc
pop
ss
in
cwtl
lock
pop
mov
aad
imul
push
sub
mov
data16
fldt
rolb
cli
fptan
sub
sub
push
fistpl
adc
jge
inc
pusha
inc
iret
or
mov
xor
movsl
lahf
xchg
add
lret
push
mov
mov
aas
std
imulb
push
loop
xchg
cmpb
pop
add
pop
xchg
add
cltd
movsb
xor
cli
adc
mov
lahf
inc
xchg
pop
mov
aaa
jbe
inc
cmp
rcrb
mul
fisubrl
iret
pop
lds
push
lds
jg
icebp
popf
fsubrl
cli
cmp
shrl
fwait
adc
jg
dec
xchg
in
movsl
xchg
adc
xor
rol
nop
mov
aam
cmp
shll
mov
stc
push
cmp
adcb
mov
pusha
jbe
adc
xchg
into
cmp
push
xchg
mov
jb
jnp
or
sub
insb
andl
jae
scas
xor
clc
fmull
xor
cltd
xchg
ret
pop
jb
cld
loope
lcall
mov
or
fcmovu
icebp
cld
pusha
rcr
negb
mov
sahf
or
xor
aad
sbb
pop
push
cmpsl
je
jge
cmp
inc
bound
in
daa
sbb
mov
sub
xchg
dec
imul
popa
sub
push
fmuls
aam
clc
jnp
iret
outsl
mov
test
push
testl
adc
mov
fiaddl
and
lods
pop
stc
movsl
shl
arpl
sbb
dec
xchg
mov
xor
xchg
mov
adc
scas
popa
jns
into
enter
hlt
mov
pop
scas
clc
fistpll
inc
les
pusha
jno
aam
jmp
fwait
cmpl
loopne
stos
or
dec
mov
and
loop
adc
sti
loopne
cmc
rolb
sahf
rclb
mov
cld
je
nop
lret
push
lods
sub
arpl
cs
das
insb
test
jo
sbb
and
xchg
jp
dec
fdivp
mov
jb
push
imul
addr16
xor
shrb
xor
rclb
pop
and
fsubp
mov
stos
and
jmp
or
int3
add
lods
adc
nop
cli
lcall
jecxz
pop
leave
lcall
insl
cmp
scas
outsb
hlt
inc
into
mov
and
push
lea
int3
je
mov
xchg
pop
jb
rorl
pop
cmp
adc
mov
in
cmp
sbb
mov
sub
nop
xlat
cmp
mov
hlt
pop
notrack
fwait
int3
int
xchg
rcr
cltd
cmp
pop
push
jl
rcrb
or
xchg
mov
fisttpl
cwtl
das
sbb
popf
lahf
mov
push
cmp
xor
das
into
mov
int
jne
sbb
mov
mov
or
dec
pop
cmpsb
sbb
jo
lds
sub
sti
out
ss
sub
and
stos
inc
inc
ficomps
pop
mov
or
dec
in
repnz
movsl
adc
mov
adc
rclb
in
xchg
leave
inc
add
vmread
cmpb
mov
in
or
mov
mov
jmp
or
inc
mov
xchg
jmp
pop
cmp
cmp
sbb
dec
int3
sbb
out
fnclex
cmpb
jp
clc
sbb
icebp
mov
sti
mov
mov
xlat
lea
cmp
xchg
in
inc
fildl
adc
loope
fnsave
enter
mov
into
loope
xchg
dec
cwtl
enter
mov
and
std
mov
cmp
cmp
sbb
xorl
add
insb
or
gs
out
test
scas
call
cmp
push
lea
ret
sahf
test
fwait
xor
mov
sbb
ss
mov
lret
js
sahf
push
bound
leave
sarb
cmp
push
dec
les
sbb
nop
inc
xchg
xor
jp
pop
inc
stos
cmpsb
mov
call
jae
adc
sub
fwait
mov
mov
cmc
clc
mov
jnp
cmp
xchg
test
adcl
lret
movsl
xor
add
jbe
test
aam
mov
hlt
dec
movsb
mov
jecxz
xchg
repz
dec
insl
jmp
adc
shlb
xorb
mov
xor
test
fwait
in
pop
imul
in
jge
pop
in
out
dec
xlat
test
cmp
mov
pop
adc
sub
adc
dec
push
ss
iret
js
int3
out
add
inc
mov
push
push
mov
jno
push
xor
stc
jmp
fwait
test
repnz
dec
insb
xor
lods
shl
ret
movsl
aam
jns
ss
cli
popa
shl
pop
mov
pop
cwtl
and
push
sbb
adc
insl
insl
ficoms
rol
sub
cmp
popf
mov
cmpsl
jae
fs
adc
pop
mov
and
mov
pop
out
pop
inc
xchg
ja
ret
jg
sahf
push
dec
fwait
test
call
int3
ss
lea
sub
sbb
bswap
pop
sub
loop
aam
push
movsl
call
adc
pop
pop
leave
mov
leave
adc
pop
mov
stos
imul
sub
gs
ds
sub
or
sub
cmp
sbb
and
or
or
push
dec
cltd
and
imul
aaa
xlat
shlb
insb
and
int3
mov
push
fidivrs
jmp
pop
pop
pop
mov
mov
call
fsubr
inc
pop
lock
ja
pop
or
mov
icebp
ret
cmpb
mulb
lcall
dec
scas
lahf
mov
ds
mov
cmp
mov
push
pop
push
or
vcvtdq2ps
xorb
adc
lods
jne
lock
mov
jl
dec
outsb
addr16
inc
cmpsl
loop
scas
and
out
sarl
icebp
pop
pop
mov
pop
xor
pushf
pop
movsl
push
sahf
adc
out
or
jno
mov
lock
mov
testb
lahf
decl
loop
lcall
and
sbb
xor
in
mov
roll
inc
fucomi
cmp
cmp
ja
add
out
mov
pop
inc
mov
shll
push
add
pop
xchg
scas
jecxz
xchg
mov
rolb
movsb
mov
lea
testb
fisttps
pop
sub
lods
lds
incb
mov
and
push
push
lahf
or
sbb
scas
rep
clc
mov
adc
adc
mov
roll
mov
xlat
sbb
pushf
mov
rolb
cmp
sbb
or
repz
mov
scas
jmp
test
test
ljmp
push
aam
in
repz
push
adc
jle
xor
cmpsb
cld
sbb
in
sub
jno
xor
mov
fdivrp
sub
ficoms
push
push
popf
out
std
repnz
sahf
dec
and
mov
or
test
out
test
ja
mov
addr16
jge
dec
mov
xchg
cld
cmp
cs
lock
cmp
push
adc
inc
pusha
mov
nop
mov
fstpl
mov
sbb
sbb
inc
test
js
shlb
mov
inc
xor
lret
push
or
pop
enter
mov
and
loope
pop
aas
test
repnz
inc
mov
push
dec
subl
fcompl
pop
mov
and
lea
inc
adc
jbe
or
std
dec
cwtl
jne
inc
leave
shrl
push
imul
aas
adc
enter
mov
rorb
sar
cmpsb
jl
pop
cmp
push
inc
lcall
aad
std
and
loopne
aas
pop
inc
sub
or
fisubs
jns
je
jl
fs
push
mov
jle
pop
adc
sar
pushf
push
add
mov
loope
int3
dec
jbe
ljmp
pop
ror
add
ficomps
movd
insl
ljmp
inc
jl
movl
enter
xor
sub
fwait
popf
mov
push
and
jo
inc
push
jbe
fcoms
sbb
int
inc
sub
mov
int
pop
push
addr16
jb
mov
or
popa
xlat
dec
loopne
sbb
cs
xor
gs
les
out
addr16
jl
xchg
addr16
aaa
and
xor
imul
fnsave
lret
xchg
leave
ss
movb
ljmp
ljmp
and
xor
enter
mov
xchg
cmpsl
cmp
mov
cwtl
cmp
push
lcall
jmp
ficoml
insb
pusha
dec
pop
push
jo
lods
sti
xchg
cmc
and
push
andb
and
dec
jmp
jge
sarl
pop
out
test
scas
pop
mov
test
fs
pop
les
arpl
jae
cmp
mov
mov
jb
decb
flds
adc
ljmp
and
insb
rorb
xor
adcl
push
xor
rol
mov
sub
inc
test
jle
pop
mov
popa
xchg
mov
aam
pop
fidivs
adc
int
insb
pop
outsb
or
mov
sub
push
or
cmp
dec
repnz
in
jne
std
jg
mov
jmp
repz
lods
push
sub
testb
enter
mov
push
lret
jge
out
test
in
test
mov
xchg
jg
xor
mov
jne
lods
jb
jle
repz
mov
add
lcall
push
pop
lods
cld
adc
mov
xor
jnp
repnz
fbld
imull
and
sahf
pop
sbb
pop
divl
cmp
out
push
sub
mov
fisttps
test
mov
add
sub
jns
rcr
in
je
cmpsb
xor
jecxz
dec
roll
xchg
sbb
mov
gs
mov
and
lret
ljmp
mov
dec
push
mov
loopne
cmpsl
and
aam
int
add
ljmp
push
or
xchg
mov
stos
es
incb
ds
push
pop
hlt
jmp
xchg
cltd
fs
negl
pop
sbb
and
cmp
mov
into
inc
lahf
push
cli
fsubrl
int
push
scas
inc
and
mov
fnstenv
mov
test
jbe
call
pushf
add
mov
pop
sub
mov
aaa
inc
in
std
je
jo
ret
and
rorb
arpl
out
fbstp
push
test
pushf
jno
and
or
xchg
pop
lret
je
std
mov
or
inc
push
loope
mov
xchg
jl
jp
push
mov
rclb
sub
jne
ds
pop
mov
in
fs
pop
adc
add
inc
mov
popl
mov
in
cmpsl
stos
lock
test
mov
rol
cmpsl
shrb
push
fldcw
mov
xchg
xchg
adc
imul
fnsave
inc
dec
lahf
out
leave
xchg
movsb
incb
push
sahf
dec
jle
jb
push
push
stos
adc
jle
jno
enter
inc
dec
mov
push
cld
shl
scas
mov
mov
mov
xor
and
aaa
sbb
rcrl
cmovno
test
lcall
and
sub
pop
andb
cmp
xchg
cwtl
ficoml
push
mov
fisubrs
lods
add
xlat
insb
arpl
out
stc
xchg
lret
push
inc
enter
pusha
clc
or
xor
xchg
loopne
xchg
push
shrb
push
or
push
icebp
or
mulb
cli
stos
mov
xchg
cmp
popl
jnp
addl
repz
lock
push
test
sub
call
scas
fiaddl
dec
adc
jb
cmp
dec
cs
mov
jno
fincstp
xor
lahf
mov
or
ret
jbe
popa
lret
or
mov
imul
mov
pop
mov
xchg
mov
mov
add
push
icebp
mov
jo
lahf
mov
in
daa
xor
dec
std
ss
push
xlat
cmpb
in
clc
jmp
fistpl
dec
sub
pushf
mov
shll
cmp
addl
fistl
fnsave
repz
movsl
mov
mov
jae
lahf
dec
mov
mov
stc
int
jns
out
es
dec
fidivl
ret
fistps
out
repz
iret
cmp
lods
pusha
fs
pop
fnstenv
jl
loope
das
push
sub
repz
jmp
mov
and
in
fldenv
or
leave
push
shll
dec
and
testb
sub
inc
pop
lret
stos
lahf
xchg
jg
mov
aad
adc
xchg
cmp
jecxz
insb
xchg
lods
popf
lods
pop
sub
or
jp
push
push
int3
pop
push
bound
rolb
sub
mov
mov
mov
mov
pop
inc
cmpsl
push
mov
inc
mov
inc
lret
mov
jae
push
xor
das
and
xchg
adc
sbbb
mov
or
cltd
xor
loopne
and
adc
mov
push
dec
fbld
xor
add
xorl
xor
sub
movq
jo
dec
pop
and
cmp
add
sbb
fstps
jp
repz
push
cmp
into
cli
or
jns
sbb
dec
fsubs
mov
dec
dec
lcall
and
cmp
xlat
sahf
cmp
cmp
xor
add
sub
insl
mov
daa
push
rclb
adc
mov
sbb
cmp
into
adc
push
js
xchg
push
mov
push
mov
and
in
fisubs
dec
arpl
addr16
daa
mov
int
lods
pusha
and
lock
shrl
imul
fwait
jg
or
fadd
aas
cmp
fdivl
mov
imul
cmp
bound
adc
mov
out
daa
lods
mov
dec
cmp
dec
inc
mov
stos
sub
mov
iret
add
rcrb
in
jp
mov
repz
loop
mov
adc
testb
push
pop
xchg
xor
sahf
into
mov
xchg
adc
push
mov
jecxz
rclb
mov
fcoml
inc
and
sub
rcl
in
sbb
hlt
ja
movsb
dec
bound
repnz
in
hlt
lcall
rclb
sub
mov
mov
movsl
dec
insl
push
add
leave
dec
gs
sub
popa
add
mov
inc
sub
pop
adc
in
xor
das
mov
xchg
ljmp
jl
movsl
push
mov
jmp
popa
aaa
add
imul
aam
addr16
mov
xor
dec
sbb
fsubrl
test
mov
lidtl
inc
xor
fisttps
mov
sbb
cmp
test
mov
jne
or
fcoms
loopne
in
lods
mov
and
das
clc
out
jb
dec
cld
jnp
icebp
hlt
stos
lea
jecxz
add
clc
shr
cmp
inc
arpl
pushl
mov
adc
mov
push
lret
repz
jle
and
loopne
inc
push
mov
cmp
or
xchg
iret
mov
mov
inc
mov
rcll
sbb
gs
inc
jno
mov
ljmp
cltd
or
loope
lds
cmc
inc
fbstp
push
and
int
mov
into
jp
pop
push
cld
imul
aad
loope
imul
sbb
clc
or
add
es
dec
std
bound
push
add
mov
mov
pusha
sub
mov
mov
test
sub
or
mov
adc
sub
mov
nop
mov
inc
loope
repnz
fadd
pop
or
testl
xchg
adc
lock
fiaddl
add
pop
adc
mov
in
cmp
out
int
divl
orl
loopne
jg
rcrl
jno
sbb
push
add
in
out
lcall
adc
fildl
sbbb
aad
add
mov
sub
mov
nop
mov
fmull
sub
mov
fwait
addr16
test
mov
pop
mov
test
and
fidivrl
fstpt
data16
and
xor
call
add
or
es
cmpsl
lods
xchg
inc
mov
in
sub
mov
mov
cmp
and
mov
or
pop
jg
pop
jo
mov
pop
movsl
insl
nop
inc
or
adc
sbb
jno
mov
popf
int3
push
nop
or
insb
aaa
push
sub
mov
inc
das
mov
fsubl
outsb
inc
sub
scas
lcall
mov
lods
sbb
mov
add
or
or
fistps
mov
fistl
dec
test
sub
test
call
inc
or
std
jno
mov
fldcw
adc
aad
sbb
fildll
ss
fistpl
adc
cmc
stc
mov
xchg
jo
sbb
cmpsb
jg
les
xchg
mov
in
dec
fdivs
in
scas
lret
pop
call
mov
xchg
add
lea
lods
or
arpl
aad
ljmp
pop
push
movsb
fcmovu
or
lods
pusha
cmpsb
add
sbb
hlt
inc
into
shrl
pop
movsl
js
dec
mov
cmp
xchg
push
push
iret
cmp
lock
js
sub
sahf
data16
jmp
mov
mov
mov
repnz
cwtl
adc
test
lret
mov
ret
aam
jae
jecxz
dec
xor
mov
in
jo
cmp
jmp
fwait
and
push
dec
test
add
mov
pop
std
and
rcll
data16
mov
mov
push
cmp
xchg
mov
mov
aad
cmpsl
sbb
into
mov
imul
shl
xbegin
arpl
adc
mov
or
pop
in
dec
lahf
pop
sub
mov
sub
repnz
addb
xchg
lcall
adc
lret
sti
jns
xchg
mov
int3
in
inc
pop
sarb
mov
jmp
push
idiv
iret
xor
mov
cltd
test
dec
xchg
divb
stos
xchg
lcall
sti
je
pop
jp
mov
mov
and
dec
jmp
mov
insb
push
pop
test
sub
ficoms
mov
add
sbb
shl
jg
cmp
push
xchg
mov
push
sbb
mov
sub
and
pop
shr
adc
int
adc
fsubl
test
daa
lcall
xchg
cwtl
pop
jmp
fcomi
ficomps
rcll
in
push
mov
xchg
jb
inc
cmc
mov
daa
pushf
pop
mov
mov
cmp
leave
nop
shll
test
inc
dec
and
out
imul
addr16
push
inc
mov
stos
inc
insl
out
imulb
adcb
cs
gs
xor
enter
pop
xchg
xchg
pop
mov
dec
jnp
sub
dec
mov
sub
or
aaa
xor
mov
jl
rorl
rcrb
pop
or
daa
mov
fnstcw
jle
and
inc
xchg
lcall
scas
fmul
and
jp
or
xchg
jg
inc
sbb
fcoml
cmp
in
aaa
cs
inc
jbe
scas
ljmp
into
cmpsb
aam
xor
data16
jg
testl
in
ret
adc
clc
dec
fldl
fistps
notrack
arpl
out
pushf
imul
add
mov
sbb
inc
mov
dec
inc
in
iret
mov
jb
dec
jmp
mov
xchg
sar
pop
and
dec
xchg
das
jmp
sbbl
jne
scas
cli
dec
push
fmull
mov
or
shl
lret
push
push
insb
rcrl
sbb
in
shrl
pop
pusha
push
ss
mov
sub
data16
inc
das
loopne
mov
jmp
movsb
pop
iret
inc
imul
stos
arpl
mov
jno
sub
adc
cmpsl
mov
mov
out
mov
cmp
cmp
sub
das
cs
stc
adc
dec
pop
dec
into
or
or
inc
out
pop
subl
dec
xchg
push
xor
fsts
jno
test
test
shll
test
or
pop
in
pusha
cmp
ds
inc
mov
test
out
dec
iret
movsb
loop
dec
in
mov
mov
shll
movsb
lea
push
leave
pusha
cmp
xchg
inc
daa
lcall
push
push
in
mov
clc
jecxz
dec
out
jl
pop
or
ficoml
in
jne
push
bound
pop
in
and
repnz
jmp
add
inc
bound
or
daa
pusha
xchg
adc
nop
sahf
in
rcrb
loopne
dec
cmp
popf
jp
ds
jmp
add
mov
push
out
hlt
cmp
jp
cmp
insb
lods
cmp
add
mov
int
jge
aad
and
mov
test
xor
sbb
adc
lea
andl
mov
movsl
fsubs
and
cmc
cwtl
fs
out
or
das
lret
enter
xor
cwtl
sbbl
mov
dec
xchg
sahf
ds
xor
ss
data16
and
cmc
jmp
mov
aad
inc
outsb
add
out
dec
es
mov
out
enter
gs
pop
pusha
mov
cld
fsts
into
cmpsb
pusha
mov
push
into
fisubs
pop
or
push
jmp
gs
or
lock
cmp
fldt
adc
cld
in
stos
mov
fs
fadds
idivb
pop
push
stos
add
std
inc
loop
aad
fldenv
test
jmp
xor
data16
cli
and
dec
adc
inc
add
add
inc
ds
repnz
mov
mov
lea
movb
roll
mov
es
das
cmpsl
push
lahf
repz
xor
cltd
out
out
cwtl
test
inc
cli
xor
cmpb
stos
aam
cmp
lcall
push
push
push
rcl
add
add
pushf
or
sub
jae
mov
cmpsb
fistpll
xor
cmp
sub
xlat
inc
jnp
ljmp
sbb
xchg
loope
imul
addb
das
cli
fistps
sub
add
loopne
xchg
mov
addr16
movsb
ds
lahf
cmpsb
ja
mov
aad
scas
mov
ljmp
mov
ret
lea
or
mov
push
arpl
jnp
add
mov
lea
jb
xlat
or
icebp
out
lock
test
cmp
sti
cmp
pop
mov
pop
into
dec
into
xchg
dec
inc
iret
cwtl
mov
ja
xlat
mov
lds
in
jp
cwtl
outsl
repz
lods
mov
notl
or
sub
dec
dec
xchg
mov
jecxz
lods
push
lret
sub
jno
lods
pop
aaa
daa
outsl
jnp
add
or
insb
insb
pop
sti
cmpsl
movl
imul
call
or
sub
js
cmp
cmpb
movsb
out
add
sti
push
shlb
xlat
dec
or
daa
pop
cmp
cmp
push
sarl
mov
sub
adc
cmp
lods
sub
in
adcb
jb
daa
mov
xor
adc
mov
movsb
xor
cmpsb
out
xor
sbb
sbb
je
imul
bnd
xchg
test
dec
pop
repz
or
loopne
ljmp
dec
imul
not
ret
sar
sub
cs
dec
push
push
or
push
cmpsb
inc
mov
in
popa
mov
inc
pushf
sarb
jne
fildll
loop
leave
inc
adc
xchg
fwait
cwtl
in
out
mov
add
cmp
std
cwtl
mov
xchg
push
add
xor
ljmp
mov
cwtl
push
dec
xchg
leave
xor
stos
inc
add
in
or
ret
jle
mov
mov
lret
imul
std
out
jb
sbb
das
mov
sbb
outsb
push
dec
pop
mov
fyl2xp1
mov
push
adc
test
jno
aam
sub
sbb
xchg
sub
xchg
sti
ja
or
in
xor
std
dec
les
or
xor
jmp
mov
test
sub
inc
ss
call
mov
mov
shl
fstl
push
andl
add
mov
aaa
aad
or
cwtl
stos
cmp
push
icebp
adc
mov
movsl
repnz
fsub
push
cmpsb
out
dec
cmpsb
sbb
js
pop
lret
enter
or
jnp
xor
xor
je
pop
jmp
shll
shll
divb
in
fistps
mov
sub
and
in
add
pop
imul
hlt
mov
mov
xor
xor
jp
loope
add
xlat
adc
fucom
sti
pop
lahf
push
pop
das
jb
dec
dec
xchg
daa
xchg
dec
lods
in
push
fcoms
mov
je
fs
xor
pop
pop
jno
out
daa
and
subb
out
mov
mov
or
int3
mov
and
mov
pop
lods
pop
int3
sarb
or
leave
adc
sti
push
jmp
lods
fistps
fildl
mov
mov
rolb
hlt
shrl
push
pushf
add
and
iret
das
sahf
jns
stc
fwait
pusha
push
jnp
adc
adc
and
pop
inc
bound
movsb
inc
jecxz
in
push
vmwrite
cs
addr16
push
test
cmp
pop
addr16
mov
lahf
jne
jbe
jb
xor
and
fcompl
cmp
daa
aad
ja
push
mov
aas
pushf
insl
aas
clc
rorl
je
rcl
sub
cmpsl
mov
mov
test
jbe
popl
stos
movsl
xor
cmpsl
adc
mov
xchg
aas
xor
jmp
pop
es
sub
xchg
mov
clc
xchg
out
adc
jnp
fstpl
adc
xor
mov
push
outsb
cmp
imul
sahf
mov
popa
loopne
cmpl
mov
rcrl
jge
repnz
cmp
ret
mov
cmp
pusha
nop
pop
cmp
xchg
dec
jg
add
cltd
cmp
push
xlat
cltd
pop
out
jnp
add
cmc
out
nop
movsl
inc
mov
lcall
es
push
jp
adc
add
mov
clc
xchg
stos
fcmovnb
and
pushf
daa
lock
fildl
test
mov
ror
incl
leave
mov
popf
outsb
push
mov
shll
iret
push
jo
pop
push
fistpll
lock
lcall
xor
xor
xor
nop
sahf
int
pop
test
test
mov
push
jg
ljmp
loopne
dec
adc
stos
stos
xchg
or
mov
outsb
das
and
xchg
movsl
fisubl
repnz
sahf
push
jnp
fnstcw
cmp
xchg
je
xchg
adc
test
icebp
push
xor
lret
mov
jl
scas
adc
lods
jne
in
lea
jne
sub
imul
jo
daa
push
in
dec
adc
aad
push
sarl
xor
out
pop
lcall
sub
hlt
mov
xor
and
dec
sub
in
xchg
jle
sub
ja
dec
xchg
inc
cltd
sub
mov
jge
popf
dec
jmp
xor
add
out
xor
mov
and
push
dec
aas
mov
xchg
loop
cs
mov
les
pushl
xchg
fs
mov
nop
decb
dec
out
sub
mov
pop
sub
cwtl
popf
pop
cmp
out
xor
orl
sti
pop
mov
jmp
jl
in
push
and
in
jecxz
dec
call
out
or
jo
and
imul
cmp
outsb
int
aas
mov
and
das
and
xlat
arpl
or
ret
inc
cmp
inc
into
cmp
popw
push
mov
mov
lret
movsb
push
imul
xchg
dec
sbbb
jbe
ret
pusha
fnstenv
mov
push
ss
jmp
and
jle
aas
inc
xor
nop
xor
pop
xchg
rorl
xchg
dec
cmc
gs
shll
pop
sub
aaa
adc
pop
push
pop
in
sbb
push
repz
aam
sti
fdivs
dec
jl
adc
push
aaa
mov
mov
out
bound
mov
outsl
in
cltd
test
mov
adc
jbe
push
loop
pop
inc
mov
jae
pop
inc
push
jae
xchg
mov
adc
mov
jno
xchg
jmp
mov
popf
seta
push
inc
cwtl
mov
jno
int3
mov
push
and
inc
push
mov
hlt
movsl
addr16
push
add
and
movsl
jne
sbb
pop
jl
inc
mov
scas
xchg
int
jp
dec
sbb
repnz
sti
cltd
mov
shll
test
popf
or
xchg
fadds
fimull
pop
jge
fmull
ret
repz
jo
jle
clc
nop
out
aas
ror
clc
dec
and
jnp
das
push
out
and
arpl
mov
loopne
xor
mov
mov
ret
xchg
jecxz
addr16
dec
cmp
iret
cld
dec
les
fiaddl
xor
insl
aad
scas
jo
lods
ss
js
hlt
clc
add
adc
pop
xchg
in
adc
hlt
sub
cmp
jle
pop
lcall
outsb
sub
cs
or
jnp
repnz
fnstcw
and
dec
xchg
add
clc
xor
je
mov
std
mov
dec
mul
enter
cmp
mov
mov
andl
jo
xor
not
shrb
inc
les
and
testb
test
pop
or
add
shlb
jno
mov
push
cmp
or
add
mov
lret
hlt
mov
xchg
imul
sbb
imul
js
data16
iret
cld
aas
jle
pop
or
inc
push
mov
jne
sbb
mov
lds
imul
hlt
xor
inc
aam
jno
jecxz
movsb
or
std
loope
fwait
test
enter
mov
bnd
sub
mov
mov
cs
mov
pusha
scas
insl
adc
jp
inc
out
xchg
pop
and
and
dec
scas
sarl
into
or
pop
pop
mov
pop
jno
jg
mov
mov
outsl
inc
in
add
and
sub
sbbb
cmpsl
mov
inc
sub
sbbb
ret
xor
and
cmpsb
in
scas
in
fdecstp
cld
mov
enter
ret
outsl
xchg
cmpsl
flds
pop
dec
sub
sub
loope
xor
push
fsubrs
mov
pop
cmp
dec
into
pop
xchg
xchg
mov
cmp
xor
rep
lret
jbe
lcall
push
inc
lahf
adc
daa
jns
cmp
cli
rcl
hlt
aas
or
test
cmc
leave
out
mov
ss
push
adc
scas
arpl
sbb
subb
xchg
xchg
mov
or
aad
iret
xor
adc
sub
or
arpl
in
into
inc
xchg
or
cmp
orb
mov
add
mov
enter
out
sub
sub
iret
sub
and
dec
enter
movl
jb
into
nop
scas
push
xlat
cmpsl
push
inc
inc
inc
dec
ficoms
fldenv
inc
imul
mov
popf
bound
push
mov
out
arpl
add
mov
jmp
outsl
pop
lock
cmp
ffreep
inc
or
mov
sub
xor
jbe
cmp
mov
or
scas
test
jecxz
jbe
mov
call
les
mov
fistl
stc
adc
ret
test
xchg
jl
std
lret
stc
or
pusha
loopne
outsb
mov
dec
xchg
jno
push
xor
out
test
lahf
loope
pusha
or
pushf
sahf
mov
ret
pop
jae
aam
rcrl
shl
lea
les
mov
cmc
lahf
xchg
jae
cltd
pop
outsb
icebp
mov
ja
aas
dec
adc
inc
sbb
fnstcw
mov
pop
es
sub
add
insl
test
lret
mov
adc
aas
cmpsb
add
lcall
sbb
test
sub
xchg
add
lods
in
aad
loopne
mov
mov
leave
sub
mov
aam
mov
lds
lods
fsts
inc
icebp
enter
mov
mov
in
js
sub
fcomi
mov
mov
das
sti
fcoms
mov
cmp
fistl
or
cwtd
fisubrs
sbb
sbb
clc
xor
sub
mov
xchg
or
es
mov
push
insl
sub
inc
clc
jmp
ljmp
xchg
or
lahf
pop
lahf
out
stos
xchg
or
imul
ficompl
sarl
test
mov
ret
push
or
push
sub
adcb
jmp
fstpt
add
or
cmp
js
push
ficoms
inc
xchg
adc
xor
dec
mov
sbb
xchg
jecxz
lock
mov
cmp
test
sti
xor
ret
push
in
stos
sbb
mov
adc
into
sub
dec
push
push
gs
xor
cmc
mov
cmpsb
jp
xchg
out
adc
or
dec
or
aas
push
dec
pop
shll
lret
xor
pop
cmp
dec
and
adc
adc
jne
mov
dec
scas
shlb
sbb
push
nop
rorl
inc
xor
mov
ds
iret
jne
leave
mov
lods
jl
push
cmp
pushf
movsb
sarl
pop
sbb
sub
xlat
fs
out
adc
mov
lret
mov
out
lret
jno
mov
mov
rol
mov
mov
cli
mov
add
xchg
dec
pop
xchg
jl
inc
pop
int3
pop
sbb
mov
stos
fidivl
jge
aaa
les
xlat
pop
fwait
loopne
ret
push
sub
and
inc
xchg
mov
sbb
loopne
jne
incl
jmp
or
push
dec
cltd
jb
dec
outsb
jl
mov
sbb
in
jp
sbb
stos
mov
sbb
mov
out
in
addb
stc
fwait
xchg
sahf
or
add
push
sbb
fstpl
fdivrl
jle
sbb
mov
into
sbb
push
cwtl
xor
lods
ds
fidivl
jae
nop
sbb
loop
jne
testl
lea
jg
xchg
or
ror
das
cmp
les
in
addr16
jmp
cmpsb
icebp
fadd
test
xor
fucomi
ds
clc
adc
lahf
xchg
scas
test
dec
sub
stos
or
ror
pop
cwtl
jae
out
ds
lcall
cwtl
lock
fistl
adc
in
xor
inc
push
cmpsl
cmp
xchg
leave
ja
dec
pop
out
stos
mov
dec
jp
negb
jns
addr16
bound
inc
in
imul
cmpsl
add
lods
xor
jecxz
sbb
in
inc
inc
mov
xor
pusha
int3
lret
xchg
fadd
dec
jg
imul
push
push
fs
adc
sub
test
xchg
mov
and
mov
mov
dec
push
push
idiv
aam
cmovae
adc
and
pop
sub
sbb
xchg
in
mov
sub
cmc
dec
adc
jp
les
mov
mov
and
pop
xor
fsubrl
in
loope
daa
cmpsl
xor
mov
push
dec
popf
fisttpl
cli
ja
cmp
loopne
hlt
je
sbb
les
shll
xor
fsts
mov
mov
sub
cmpsl
pop
scas
push
std
lahf
movb
sbb
rcl
dec
sub
jne
jbe
pop
mov
loopne
push
push
adc
inc
and
pusha
mov
sub
cmp
cmpsb
icebp
push
aam
mov
addr16
and
xchg
ftst
imul
xchg
aas
and
clc
sbb
fidivrs
push
enter
xchg
test
inc
inc
adc
dec
and
jbe
jmp
jmp
lea
ret
cwtl
jmp
mov
jns
sbb
enter
inc
xlat
enter
dec
and
xor
pop
mov
fstps
in
stos
jmp
and
insl
fsubs
test
xchg
bound
jge
mov
les
sub
pop
pop
pop
in
mov
push
cld
xor
xchg
pop
push
loope
icebp
int3
fadd
cmp
shr
add
sahf
out
pop
sub
jae
xchg
int3
add
sbb
sbbb
xlat
push
push
cmc
add
push
fdivr
cwtl
jl
out
mov
fildll
mov
repz
mov
xchg
push
push
mov
stos
inc
repnz
jle
cli
addb
inc
jnp
or
lret
adc
mov
add
cmp
es
xchg
mov
push
dec
cltd
xor
push
jp
push
mov
and
ss
cmp
sbb
cli
push
xor
movsl
inc
je
sahf
adc
jne
decl
add
jg,pt
fimull
jno
outsl
mov
cli
cmp
mov
sahf
jl
sbb
push
ret
ror
ret
aas
mov
mov
aaa
cmp
outsl
jno
and
inc
jnp
shll
bound
aaa
and
xor
xor
mov
and
je
sbb
ljmp
in
mov
stc
loope
xchg
sub
xchg
enter
cli
mov
ds
jmp
fcoms
and
and
or
mov
pop
xor
fsubrl
cmpsl
fcmovb
addr16
loopne
arpl
lods
sbb
imul
aam
sbb
sbb
adc
rcl
add
xchg
dec
jmp
mov
dec
lcall
lret
insb
inc
lahf
pop
movq
jno
test
mov
mov
cltd
into
shll
push
push
jge
sub
mov
sub
out
ss
test
in
movsl
jle
scas
sub
lods
and
orl
xchg
lret
arpl
ljmp
mov
push
in
ficomps
inc
cmp
pop
test
pop
out
push
sub
add
dec
repnz
xchg
icebp
cmp
jae
sub
cmp
out
into
jg
les
mov
movsl
sarb
jg
cmp
pop
scas
xchg
movsl
imul
fs
out
jg
divb
xor
mov
ror
rol
xchg
test
mov
sbb
add
insb
pop
inc
in
dec
ret
cmp
fcomps
jge
lahf
call
inc
mov
nop
test
out
in
and
adc
adc
sbb
fcompl
sbb
in
adc
arpl
fwait
push
or
or
leave
insb
jbe
xchg
in
cmp
je
or
ja
hlt
pop
cmc
mov
xor
pop
mov
fidivrl
jp
push
into
cmpl
pop
pop
dec
test
in
dec
iret
repnz
mov
dec
mov
negl
jl
push
add
jg
xor
mov
fwait
enter
cmp
sbb
test
mov
push
pop
xchg
sbb
xor
outsb
fisubrs
stc
add
les
add
cmp
push
cmpsl
mov
insl
loop
in
test
mov
adc
sbb
sub
push
aad
push
pop
sub
xchg
sbb
sub
and
xchg
jns
js
or
pusha
push
out
or
cli
xchg
aaa
rclb
mov
mov
pushf
add
and
inc
test
fcoml
jecxz
out
inc
mov
mov
mov
and
loopne
test
or
and
mov
inc
and
aas
out
sbb
mov
mov
pushf
jecxz
xchg
pop
cmp
pop
inc
mov
leave
adcb
add
or
clc
add
push
mov
inc
daa
adc
lcall
inc
mov
clc
add
xchg
addr16
fcmovnbe
inc
inc
cli
sub
mov
scas
pushf
cwtl
imul
aad
jo
cmp
std
out
outsb
out
shll
je
shrb
repz
and
pop
mov
outsl
aaa
out
ret
and
xlat
aaa
outsl
cltd
insl
mov
rcr
mov
jno
mov
mov
in
lods
or
cmp
jbe
lods
xlat
jg
int3
movsl
stos
inc
xchg
out
aam
mov
pop
rcrl
cmp
or
and
inc
jg
mov
nop
sbb
rol
dec
testl
scas
repnz
pop
xchg
repz
inc
xchg
inc
xor
decb
push
inc
pop
aad
xchg
aas
aas
and
sub
ljmp
ds
dec
nop
pop
mov
mov
mov
mov
mov
xor
and
in
pop
ljmp
insb
pop
pop
outsb
stos
mov
jae
repz
daa
loopne
aad
test
pop
mov
outsl
in
mov
insb
sub
out
jp
sbbb
pusha
mov
or
xor
pop
lret
mov
xchg
lret
imul
cmp
mov
pop
mov
cwtl
movsl
ret
bound
add
inc
push
cs
mov
rcrl
pop
cmc
jae
xchg
lock
xchg
jno
shrl
dec
sbb
loopne
sub
loope
addl
cltd
test
sbb
fists
hlt
lea
jg
pop
repz
dec
push
clc
lock
dec
cmpsb
xor
jmp
leave
les
cld
mov
mov
jb
mov
mov
xor
sarb
ror
out
add
mov
inc
mov
pop
push
test
rorb
jl
lea
aaa
mov
jb
rcl
and
mov
lret
dec
push
jo
and
int3
mov
and
orb
or
or
and
mov
es
aas
mov
pcmpeqd
mov
imul
jno
lods
icebp
sbb
xchg
clc
shrb
inc
test
outsb
or
cmpsl
mov
inc
rcr
scas
aaa
xchg
and
sbb
dec
or
fyl2xp1
xorl
mov
xor
sbb
cmp
and
jbe
fsts
cmp
arpl
xchg
lea
int
mov
out
xchg
sar
push
imul
cmpsb
sub
inc
jl
out
insb
jmp
mov
pop
cmp
mov
mov
mov
lods
imul
and
addr16
mov
fs
pextrw
pushf
movl
mov
and
and
xor
push
mov
outsb
and
push
repz
push
cmp
lret
popf
leave
bound
int3
sbb
ret
mov
call
jmp
inc
cmp
jae
mov
fwait
pop
dec
test
ret
lcall
inc
ljmp
and
xchg
jl
outsb
lret
packsswb
das
test
adcl
jne
sbb
mov
adc
xchg
in
pushf
jo
xlat
ret
push
fcmovbe
add
in
and
int
dec
mov
data16
mov
icebp
push
clc
ret
inc
fcoms
push
xor
fucompp
ljmp
push
pop
movsb
jae
lods
add
sbb
xchg
popf
mov
ljmp
adcl
push
movsl
jae
pop
imul
out
insb
test
pop
cmp
mov
movsb
ret
inc
mov
dec
mov
mov
or
test
add
inc
sub
or
iret
pop
iret
rcl
imul
adc
in
repnz
negb
add
xor
and
stc
lcall
dec
aaa
jge
mov
mov
dec
aas
movsl
scas
aaa
scas
sbb
dec
cmp
push
pusha
int3
shll
fsubr
lahf
add
notl
add
xchg
movsl
insb
mov
idivl
push
out
xor
fcomps
test
int
pop
dec
adc
in
inc
sub
addr16
ret
xor
push
scas
int
shl
push
ss
sahf
mov
mov
sub
pop
cltd
mov
int
insl
pop
mov
cmp
dec
jae
cmpsl
notl
or
test
push
in
int
mov
cmp
xchg
test
dec
stos
or
push
shlb
adc
add
jne
jmp
xor
jle
cs
push
je
push
pop
jge
fsubrl
iret
loop
push
jae
arpl
add
add
cltd
push
dec
xchg
jnp
pop
lret
mov
test
loop
js
ret
pop
pop
mov
fstpt
int
and
lret
pop
xchg
mov
inc
push
popa
rcrb
push
jl
pop
jbe
add
rcrl
push
aas
andl
in
push
adc
divb
mov
xchg
mov
lods
test
mov
cmp
int3
daa
mov
enter
lahf
cmp
popf
outsb
sub
or
popa
rep
jae
divb
sbb
jg
fstpl
inc
stos
jno
out
jmp
cmpsb
pop
and
or
mov
pop
in
aas
sti
dec
push
mov
out
pop
mov
pop
ja
jb
jno
or
fisubl
test
test
in
movsl
gs
pop
imul
lret
sub
cs
cld
jnp
xlat
std
jae
pop
clc
xchg
sbb
mov
xchg
sbb
xchg
xor
pop
push
jo
cltd
mov
cmp
cmc
rclb
imul
out
jae
push
xchg
stc
dec
fdivs
xchg
jle
inc
add
lock
adcl
jae
and
push
mov
cmp
std
mov
cwtl
lcall
popa
es
cli
mov
fisttpll
pop
cmc
imul
add
lds
cmc
iret
lahf
cmc
aad
sub
jnp
mov
xchg
jmp
inc
push
add
add
addl
stos
add
in
into
pushf
pop
mov
dec
ret
sbb
daa
movsb
movsl
mov
fimuls
gs
movsl
fsubr
xorl
fistps
mov
mov
push
test
add
fs
xchg
push
rcrl
aaa
arpl
jns
pop
das
mov
push
movsl
push
adc
dec
mov
not
xchg
in
mov
out
popf
jecxz
incl
push
xor
dec
daa
mov
cmp
ret
xorl
jbe
aad
fucomip
mov
push
les
mov
mov
cmpsl
leave
arpl
add
push
fstl
nop
cli
mov
jl
inc
push
mov
lret
cmc
in
ja
or
cmp
and
or
push
push
test
or
push
xchg
fdivrs
out
push
enter
addr16
xchg
addr16
cmp
repz
lock
lcall
lds
clc
pop
or
scas
ljmp
mov
ljmp
jg
outsb
xor
mov
clc
pop
adc
sbb
inc
test
scas
sub
sbb
mov
mov
gs
sbb
test
in
push
cmpsb
jl
jle
sub
dec
int
pop
stc
pop
arpl
mov
test
clc
movsb
outsb
xor
arpl
xchg
xchg
pop
cmp
shlb
cmp
mov
and
fldcw
lret
cmp
movsl
mov
xor
leave
xchg
jb
pop
jno
dec
add
xchg
mov
xchg
cvtdq2ps
cmp
out
test
dec
xchg
adc
sbb
pop
cmp
mov
ret
push
adc
lds
in
in
mov
loopne
push
xchg
cmp
dec
mov
testb
jns
mov
jo
test
push
jmp
or
enter
jle
xchg
cltd
insl
pop
dec
loop
imul
out
test
add
bound
fnstcw
pop
cli
mov
pop
jle
and
faddl
inc
adc
lldt
sbb
jmp
pop
cmpsl
fildl
testb
sbb
mov
cs
outsl
shl
sbb
and
hlt
sahf
rorl
pop
cmp
or
lcall
xchg
mov
mov
xchg
stc
dec
xlat
leave
shlb
jge
std
call
and
xchg
arpl
inc
mulb
push
xchg
lcall
lds
fstl
lods
sbb
push
jbe
adc
mov
push
jno
mov
pop
pop
bound
insl
jp
jne
adc
filds
dec
add
sbb
jle
cmpsb
xchg
daa
and
movsb
ja
sub
out
aam
or
ljmp
adc
cmp
fcmovnb
sub
leave
ds
push
and
cmp
lret
ret
aaa
pop
fisttpll
faddp
or
mov
jle
push
cmc
imul
fmull
pop
loopne
jmp
leave
hlt
sbb
dec
in
pop
push
mov
gs
lea
enter
xchg
loop
adc
sahf
pop
cmp
inc
and
das
les
shlb
cli
lcall
jecxz
inc
push
cld
jns
icebp
dec
pop
cmpsl
loope
and
push
push
mov
je
and
lods
rclb
push
add
pop
jo
aam
pop
and
xchg
je
push
cmp
lcall
cli
and
dec
or
sub
test
mov
adc
mov
in
sti
frstor
clc
test
fimull
mulb
cld
sub
dec
repz
mov
pop
mov
jae
inc
pop
scas
inc
inc
ret
ret
cmpsl
sub
push
or
push
aas
lret
jp
pop
into
cmp
xchg
pop
jge
mov
xchg
ret
fcomi
jns
add
or
test
mov
scas
cld
test
iret
lcall
fstpl
add
arpl
mov
adc
add
es
pop
fstp
out
mov
outsl
xchg
out
sbb
jl
ss
lods
pop
lods
sbb
lss
sti
push
clc
cmp
out
or
fld
mov
jmp
out
push
mov
jo
mov
rorl
inc
or
ud1
bnd
mov
push
and
ret
jno
xchg
fidivs
movsl
xor
cmp
jge
push
fs
jle
in
notb
clc
jne
and
xor
std
fldenv
mov
sub
inc
aaa
test
or
out
add
cmp
loopne
or
iret
sbb
push
jecxz
into
fwait
mov
cltd
jno
mov
push
mov
fadd
in
or
repz
in
jge
fsubrl
cltd
wbinvd
inc
pop
mov
xlat
push
lahf
jp
into
mov
jns
icebp
mov
push
sub
or
push
xchg
pop
cmp
xor
leave
add
xchg
fldenv
aaa
jns
sqrtps
jmp
and
xchg
sub
scas
inc
mov
mov
xchg
scas
add
xor
test
rcr
ja
mov
lock
and
shrb
imul
cmp
popf
push
adc
sub
push
xor
add
sbbb
xchg
in
mov
iret
xor
adc
pop
shlb
mov
add
and
sahf
push
push
stos
push
mov
or
cmp
inc
jp
sub
outsb
push
std
xor
in
xor
stc
nop
mov
ja
sahf
sub
adc
sub
dec
jo
ljmp
inc
lea
psraw
jmp
sbb
sbb
in
test
mov
mov
add
dec
into
cmp
std
push
gs
mov
and
lahf
sbb
das
adc
es
xchg
or
inc
ret
dec
ret
sub
add
sbb
adc
add
push
dec
or
sbb
data16
loop
stos
mov
mov
add
mov
xchg
rol
in
sub
adc
mov
rcr
inc
stos
or
mov
mov
clc
and
outsl
imul
mov
mov
jmp
adc
lods
sub
fcmovbe
adc
inc
aam
scas
pop
sbb
dec
or
xchg
mov
sbb
test
jnp
loop
jmp
dec
or
add
sub
jle
xchg
dec
push
jmp
aas
push
movsl
movsb
xor
pop
stc
dec
cmp
pusha
mov
mov
movsl
push
ss
cmp
mov
das
cmpsl
jle
mov
das
fwait
or
mov
inc
adc
push
cmpsb
lret
dec
int
push
lods
mov
fstpl
mov
push
mov
dec
mov
sti
orl
pop
or
xor
xlat
loop
repz
out
imul
es
fidivl
pop
iret
fstl
xor
dec
mov
push
cmpsl
bound
dec
pusha
sahf
pop
cmp
movb
and
pop
aas
fisttpl
xchg
jge
nop
jp
nop
or
inc
pop
rcrl
dec
loope
popf
xchg
adc
pop
push
in
imul
mov
rcr
push
jle
or
push
das
cmp
pop
pop
lds
and
call
scas
sahf
pop
shlb
icebp
pop
cld
or
lea
and
jge
outsl
lds
jns
aam
mov
add
mov
loopne
test
push
je
stos
inc
test
insl
fdivrl
ja
mov
in
jecxz
cmpsb
mov
mov
aas
pop
mov
pop
xchg
cmp
xor
out
add
xchg
push
rcrb
leave
cwtl
push
adc
and
scas
push
ds
jns
push
ret
sub
push
pop
cmpsb
mov
icebp
sub
dec
movsb
push
add
into
gs
dec
test
cmp
stos
cmpb
sub
popf
mov
out
pop
scas
jl
out
cmp
mov
cmpsb
sbb
fwait
mov
and
into
fisubs
push
xor
out
fbstp
adc
jmp
cli
test
js
inc
fsubp
sub
sub
push
icebp
gs
mov
mov
icebp
pop
adc
clc
pop
lret
dec
pop
xchg
std
add
inc
xor
int3
push
cld
pop
pusha
pop
and
aaa
or
mov
push
and
dec
inc
xor
pop
jl
add
mov
lds
mov
sub
les
jle
adc
aas
push
mov
aaa
add
xor
cmp
mov
popf
scas
mov
out
dec
xor
loope
pop
adc
pop
flds
push
in
xchg
push
push
cmpsl
fiadds
xor
lea
inc
mov
push
mov
jl
jecxz
xor
mov
mov
insl
or
xchg
ror
leave
lret
adc
push
testl
push
shr
mov
dec
inc
mov
mov
js
xchg
push
cltd
dec
xchg
shr
rol
ss
pushf
das
fildl
xor
jmp
arpl
inc
stos
mov
int3
in
pop
xor
in
cmp
dec
inc
stos
or
sbb
cltd
add
sti
cwtl
ficompl
or
mov
sub
push
cmpsb
cmp
clc
mov
fbstp
mov
mov
xor
jp
dec
add
cmpsb
or
push
xor
or
and
cmc
cs
dec
loopne
aas
mov
pusha
test
test
inc
push
and
mov
and
cmp
dec
sbb
gs
mov
lods
scas
sub
xlat
mov
push
popf
pop
cld
mov
jmp
jns
movsb
ret
push
sbb
dec
dec
scas
xor
cltd
jnp
adc
mov
aam
subb
xchg
sbb
jg
mulb
sbb
mov
cmpsb
gs
mov
rolb
out
aas
dec
push
push
adc
push
aas
cwtl
fisubl
in
xchg
jge
xchg
mov
and
push
push
mov
negb
sbb
mov
ljmp
xor
dec
insl
or
insb
rcrl
movsl
dec
cmp
imul
add
push
sbb
mov
sarb
cli
int
loopne
push
add
js
loope
jecxz
push
arpl
sub
ljmp
ljmp
jle
nop
pop
and
int
mov
cmp
pop
cmp
mov
push
dec
repz
push
fwait
sub
hlt
lds
sub
cmp
mov
rclb
mov
std
mov
mov
fwait
ljmp
test
xor
mov
add
rolb
mov
fwait
mov
insl
cmovbe
jo
inc
jo
push
cmp
mov
mov
loopne
xor
je
mov
add
arpl
cmp
andl
pop
mov
sbb
cltd
mov
mov
pop
xchg
inc
jnp
stos
out
mov
bound
dec
cld
sti
mov
test
std
jnp
hlt
shll
dec
sbb
push
xchg
gs
push
mov
sbb
ja
fwait
inc
push
aam
xor
lahf
movsb
stc
sub
rcrl
imul
adc
das
pop
int
jg
test
cmp
add
outsl
aaa
xchg
fs
int3
pop
push
or
add
mov
cmp
or
pop
hlt
sarb
dec
aas
or
add
and
ss
add
lock
push
pop
repnz
mov
or
add
jnp
push
push
pop
daa
push
int3
clc
fwait
pop
in
mov
incb
push
ja
in
mov
or
aaa
fwait
lret
scas
push
testl
shll
addl
or
xchg
push
adc
scas
ret
ret
stc
lea
jp
sbb
lods
xchg
inc
jl
les
mov
and
sub
jo
cmp
fwait
push
cmp
test
cmp
in
scas
fistps
jnp
int3
mov
es
cs
je
and
addr16
dec
in
dec
lock
xor
mov
sti
addr16
cmp
push
push
pop
testb
mov
jb
dec
lcall
or
add
nop
repnz
dec
mov
icebp
inc
fucomp
or
sbb
rcrl
ud2
lret
push
push
arpl
sarb
xor
sarb
sub
insb
nop
cmpsl
shrl
push
or
or
sahf
pop
jmp
je
out
mov
hlt
push
icebp
mov
std
jns
cli
in
into
jl
hlt
inc
leave
ja
jae
push
hlt
xor
push
cmp
sbb
mov
jno
lods
ret
sub
movsb
repnz
inc
in
inc
data16
xor
testb
xor
sub
inc
and
or
jmp
jge
jo
sbb
hlt
aam
insb
cwtl
jmp
ss
jno
mov
das
and
jmp
shrb
cmc
jo
call
mov
xchg
arpl
outsb
scas
fbstp
ret
cmpsb
add
rcrb
xor
sbb
mov
lock
pop
aad
subl
or
shlb
loopne
addr16
rcr
rol
imul
mov
ficomps
or
imul
mov
mov
jnp
or
fwait
stc
jae
add
sbb
test
add
push
into
xchg
sbb
or
lahf
pop
shlb
xchg
inc
fstps
jb
enter
push
test
jmp
mov
cmpsl
xor
add
lcall
inc
rolb
adc
outsl
inc
xchg
roll
dec
das
inc
or
sub
cmp
popa
mov
je
sub
aaa
into
push
dec
bound
pop
cmpsb
pushf
xor
pop
scas
dec
int
js
lock
mov
add
jne
inc
testb
mov
jno
sub
jb
ror
pop
push
cmpsl
jp
mov
out
push
shll
xor
imul
loopne
rcll
push
ds
inc
adc
and
ficomps
sbb
inc
xlat
jb
addr16
out
add
mov
outsl
arpl
jle
fmull
in
pusha
andl
mov
push
stos
in
fcomip
movsl
sub
mov
xchg
mov
mov
cmp
sub
sub
bound
dec
sub
loop
dec
ss
cmp
hlt
inc
fsubrs
lahf
push
sub
out
in
jp
sbb
fwait
cmp
cmp
push
int3
adc
ret
test
popf
fnstenv
xchg
jmp
add
daa
ds
data16
cmpl
jne
mov
aam
fstp
imul
mov
call
cmpl
loope
out
cmp
js
and
cmp
jbe
mov
xchg
inc
sbb
in
fiadds
sbb
hlt
push
and
ds
inc
fs
out
mov
mov
mov
iret
adc
jae
or
loopne
loope
aaa
outsl
push
dec
ret
lea
out
gs
popf
mov
mov
jge
faddl
adc
lds
jecxz
add
dec
aad
fwait
mov
repnz
lock
xchg
fisttpl
dec
and
mov
dec
insl
jae
cmpsl
xchg
dec
sub
mov
mov
test
xor
xor
fimull
add
sub
cmp
sbb
js
mov
loopne
mov
out
lcall
out
test
repz
add
lods
sub
or
push
dec
mov
divb
lock
decb
sahf
lahf
dec
add
cld
mov
mov
test
xor
adc
stos
add
push
adc
xor
test
out
push
rcrb
xor
jge
jne
jl
xor
cltd
xchg
lcall
in
js
adc
mov
and
cld
ret
xchg
ficompl
pop
and
test
bound
hlt
insb
sbb
mov
sub
mov
leave
adc
xor
imul
jmp
pop
adc
mov
pop
repz
xchg
out
lods
mov
sub
or
das
pop
and
insb
out
movsb
cld
sbb
sbb
mov
decb
sbb
add
out
rorl
mov
adc
movsl
mov
fildll
and
push
dec
push
andl
cmp
imul
inc
inc
mov
xor
movsb
push
stc
mov
pusha
sbb
fnstenv
and
jg
pusha
in
out
movsl
inc
test
iret
push
push
pushf
ret
xchg
rol
or
sbb
jb
or
sub
xor
pop
dec
cmpsl
fidivl
jmp
insb
scas
mov
lret
sbb
dec
int3
aaa
dec
outsb
enter
popf
outsl
pop
ds
imul
sub
test
nop
dec
and
jno
cs
push
dec
push
sub
jmp
cltd
rcrb
mov
movsl
adc
xor
repnz
fbld
mov
push
push
das
mov
bound
mov
cmp
jmp
dec
add
xor
adc
popf
push
lods
faddl
ret
scas
subb
mov
ja
scas
xchg
adc
repnz
mov
fsubs
cmp
dec
pop
jo
mov
mov
sahf
test
fdivl
call
je
icebp
dec
ds
or
push
sbb
mov
inc
in
jae
adc
aam
icebp
shl
push
sbbb
add
int3
pushf
out
xchg
lock
or
sbb
push
test
stos
loope
xchg
inc
notb
mov
sti
add
jmp
cmp
xchg
xlat
mov
dec
jecxz
lahf
das
std
adc
or
in
imul
adc
cmpsb
subl
mov
pop
idivl
rcrl
fidivrl
and
cltd
test
addb
stc
out
xchg
mov
mov
mov
ffreep
sti
sub
leave
ror
ret
xor
jne
push
int
dec
and
stc
lods
push
cmp
and
cmpsl
push
ja
in
adc
or
fs
shrb
push
loop
add
sbb
pushf
insl
mov
div
and
pop
dec
and
pop
xchg
and
das
xor
xchg
popf
jae
mov
in
jno
sbb
push
fsubl
mov
icebp
std
ret
out
lea
dec
push
pop
je
pushf
xchg
pushf
and
jb
inc
push
pop
xchg
rcr
ds
pop
lret
jns
or
daa
jle
daa
jecxz
and
repnz
jae
and
dec
lret
or
mov
jecxz
addr16
pop
adc
xor
mov
inc
xchg
dec
shl
sbbl
mov
dec
int
jo
xchg
inc
out
das
scas
ret
adc
popf
mov
add
rolb
inc
rcrl
in
aaa
dec
jbe
std
lea
adc
sub
icebp
dec
hlt
test
cmp
fninit
cmp
into
mov
and
repnz
mov
das
sub
push
fdivl
dec
popw
push
dec
popl
ja
mov
xor
les
sbbb
into
fs
inc
loop
jecxz
and
adc
add
push
rolb
lods
std
ficoms
lret
std
sbb
addr16
arpl
pop
add
add
mov
subl
clc
xchg
cmpsb
int
inc
mov
add
sahf
or
mov
jge
sub
mov
int3
in
dec
adc
ret
stos
mov
faddl
inc
xor
pop
adc
mov
and
mov
ficoml
push
mov
dec
data16
mov
add
imul
sbb
and
inc
mov
inc
or
or
mov
out
inc
out
aam
sub
daa
js
jl
dec
test
out
nop
iret
and
lods
push
loopne
int
aaa
xlat
lret
into
lods
pop
cmp
add
push
sbb
sub
adc
or
jnp
sarb
pop
push
mov
pop
jno
push
lret
ds
ret
loope
hlt
cltd
gs
cmp
push
loope
inc
inc
and
xor
pop
stc
xor
sub
adc
inc
inc
aad
jns
mov
lahf
mov
arpl
mov
mov
ja
aas
or
bound
addr16
pop
insl
outsb
ja
gs
ss
ret
js
adc
movl
push
ret
sbb
or
mov
mov
lods
pop
sub
jmp
fwait
adc
pop
mov
insb
xchg
cmc
adc
push
mov
test
push
cmp
pop
or
xlat
cltd
das
imul
ljmp
movsb
cmp
adc
push
inc
popa
push
rcll
dec
fwait
aam
fsubl
stos
popa
mov
ror
cmp
orl
pop
dec
bound
out
sbbb
mov
out
call
sysret
fwait
or
adc
sub
outsb
cmp
sbb
je
fwait
push
faddl
loopne
push
cmp
inc
cmp
addb
and
ss
mov
mov
rolb
mov
iret
jae
enter
xchg
aas
dec
mov
stos
mov
xor
insb
cld
adc
arpl
insb
std
push
push
jae
dec
xchg
mov
xchg
xor
dec
std
push
pop
std
es
into
sbb
xchg
mov
insb
clc
push
mov
cmp
mov
jle
mov
lret
lret
add
les
call
bound
mov
add
lahf
rcrl
repz
enter
or
cli
neg
adc
insl
stos
lods
cmp
repnz
sub
in
leave
inc
rorb
fnstcw
leave
inc
xchg
or
stos
sub
inc
mov
je
js
test
lea
aam
jle
xchg
push
outsb
sbb
lret
inc
cmp
test
fcmovbe
sub
lcall
clc
leave
pop
push
sub
ss
jb
xchg
iret
nop
push
ja
je
adcb
push
mov
int3
sub
or
adc
dec
repnz
push
in
daa
incl
mov
loopne
lds
jbe
sub
cmpsb
pushf
inc
fadd
cwtl
or
mov
or
stc
into
mov
xor
mov
or
es
addr16
pop
or
push
xchg
jno
ljmp
fisttpll
mov
ja
inc
test
adc
out
das
out
ret
or
cld
out
xor
mov
add
or
imul
pop
push
xchg
shlb
movsb
out
aam
sti
dec
mov
jae
test
in
mov
lcall
data16
inc
dec
fldenv
ljmp
xchg
iret
fistl
in
mov
xor
jp
mov
jmp
insl
dec
adcb
dec
mulb
push
fwait
xchg
inc
lea
cmpsb
shll
push
add
sub
cmp
push
rorl
pop
xor
out
movsl
add
and
sbb
scas
xor
int3
lods
sub
sti
negb
pushf
adc
push
lahf
movl
pop
movsb
jl
stc
sub
bound
filds
pusha
add
xchg
mov
addb
pop
push
or
jae
cmc
pop
inc
cmp
and
imul
int
loop
lahf
lods
jge
aaa
jns
or
mov
enter
mov
adc
inc
lret
inc
clc
aad
stos
and
mov
lret
loop
scas
loop
and
daa
popa
and
aas
repz
insb
mov
mov
mov
sbb
and
inc
jno
mov
aad
cmp
xchg
xor
aad
stos
pop
inc
test
xor
fs
movsl
xor
sbb
push
add
cmp
inc
dec
mov
stc
add
ljmp
repz
push
mov
or
cmp
xchg
ret
push
cmpl
fsubrl
push
jmp
mov
inc
inc
sub
rcrl
push
xchg
shlb
xchg
inc
dec
ret
inc
jmp
push
and
mov
loopne
popf
add
loop
in
add
movsl
or
add
pop
dec
imul
into
insb
inc
je
or
push
aad
mov
lret
inc
shrb
xchg
adc
es
jg
test
and
pop
data16
pop
leave
push
movsl
sti
dec
jne
fmul
aam
add
xchg
adc
stc
lahf
fs
sbb
stos
aad
clc
insl
xchg
pop
cmc
pushf
addb
adc
loope
xor
pop
enter
mov
jno
sub
imul
and
jbe
and
lret
nop
xchg
push
pusha
inc
xor
leave
pop
daa
test
ret
loope
pusha
xor
add
mov
inc
xchg
jl
dec
cmc
push
dec
stos
ja
loopne
mov
sub
and
pop
fimull
popa
cmp
or
lea
mov
push
test
sbb
mov
push
lea
mov
fcompl
pop
out
fistpll
and
adc
dec
pop
push
test
ret
mov
daa
loopne
sbbl
jmp
mov
or
xor
cmp
and
mov
dec
cmc
pop
add
in
inc
cmp
lahf
dec
ret
cmpsl
imull
jae
sbb
and
insl
dec
mov
adc
ds
jnp
mov
and
pop
nop
nop
andl
leave
mov
mov
inc
imul
push
and
mov
fwait
inc
int
lds
sub
adc
jne
fs
jmp
cmp
xchg
jo
test
mov
mov
xchg
xor
pop
mov
jge
in
xchg
aas
js
push
push
cmpsl
stc
sub
mov
cmpsl
cltd
sub
fcoml
inc
add
jle
shr
push
jmp
dec
adc
dec
xchg
push
xor
ficoml
dec
mov
test
je
test
rolb
and
pop
cwtl
sbb
fisubrs
mov
jne
outsl
fs
sub
incb
fadds
insl
jae
pop
out
xor
jmp
dec
inc
jg
push
adc
xchg
add
jge
dec
in
fs
stos
push
daa
inc
jecxz
jns
mov
dec
cli
pop
xor
fiaddl
rcrl
add
push
xchg
insl
jp
pop
stc
sbb
push
lcall
xchg
pusha
test
fstps
cmc
xor
xchg
push
ljmp
sbb
push
out
jle
inc
movsb
iret
sahf
xor
lahf
mov
fsubs
inc
push
rorb
shrb
outsb
cltd
sub
xchg
lret
cmp
call
loop
adc
push
fisttpll
icebp
sub
mov
xchg
icebp
xor
adc
mov
pop
or
lcall
jae
cwtl
xor
push
sti
int3
inc
les
sub
push
xor
pop
out
xor
in
shll
and
fsts
push
cmp
jne
and
and
out
sbb
push
mulb
or
cmp
lcall
push
incl
mov
adc
mov
cmp
and
xlat
dec
jmp
imul
sbbl
xchg
decl
pusha
loopne
pop
leave
mov
xchg
loope
lret
push
and
loop
es
pop
add
fldcw
push
mov
sbb
xor
shr
movsb
outsb
pushf
push
repnz
popa
add
rclb
xchg
cwtl
add
sbb
les
fisubs
out
or
pop
mov
mov
stos
ret
xor
push
insb
and
out
cmc
xchg
ja
mov
add
cltd
mov
pop
adc
push
pushl
jno
mov
repnz
mov
pop
fsts
sbb
mov
rolb
stc
and
mov
mov
inc
js
or
fcomps
fnsave
inc
and
aaa
jae
scas
or
out
sbb
mov
daa
icebp
flds
cmp
leave
shlb
cmp
repz
cmp
add
fdivp
mov
mov
inc
fxch
ja
adc
push
jg
adc
xchg
addb
insb
push
sbb
inc
inc
ficoml
cmp
mov
daa
pop
jle
out
bound
ja
or
dec
imul
loop
inc
repnz
in
xchg
enter
rol
xchg
cs
or
inc
ja
add
fstl
sub
jns
and
lods
fadds
clc
xor
nop
mov
push
loop
add
arpl
enter
enter
scas
icebp
imul
cmp
movsl
scas
hlt
xchg
mul
test
das
leave
fidivrs
mov
fmul
out
fcomps
adc
gs
cmpsl
cmp
pop
xor
mov
mov
in
xchg
js
scas
arpl
cmp
sarl
mov
sub
xchg
js
add
adc
ss
xlat
imul
pop
sub
push
push
mov
pop
enter
iret
mov
loope
sub
sbb
mov
mov
pop
xchg
test
cmpsb
push
cmpsl
sbb
pop
jl
addl
pop
pop
out
jae
insb
call
mov
xor
sbb
loopne
jnp
push
inc
outsl
add
dec
add
inc
mov
jb
add
std
cmp
daa
mov
cmpsb
rcll
sub
out
gs
cmpsb
andb
icebp
shll
int3
cli
pop
dec
xor
int3
lock
or
call
pop
aad
shlb
mov
or
pop
icebp
jnp
lods
negb
jno
punpckhbw
sub
xchg
dec
mov
cmp
hlt
dec
aam
roll
pop
push
out
xchg
jbe
push
int3
mov
repnz
and
imul
push
aas
xchg
pusha
mov
fcomps
fidivl
mov
dec
rcll
mov
mov
push
sbb
pop
cmpsl
cmpsl
or
xlat
mov
rol
push
sbb
iret
lret
sbb
test
scas
pushf
lea
cmpsb
xchg
mov
mov
lret
stos
sub
push
mov
lds
cmovae
ftst
xchg
nop
stos
sub
xorl
adc
ljmp
cmp
mov
mov
mov
jg
sub
decl
gs
xchg
jnp
lds
mov
rclb
pop
out
push
xchg
sbb
cmpsl
adc
or
jmp
inc
hlt
inc
ret
push
in
shl
mov
add
jmp
ret
lret
jle
push
xor
rorl
sbb
pushf
pop
pop
jns
sub
add
ljmp
shlb
lcall
push
fwait
test
jne
out
push
shll
add
jns
in
push
dec
xor
sahf
or
cwtl
pusha
add
and
lods
leave
rorl
arpl
xchg
bound
rcrb
lcall
mov
and
mov
and
jns
fcomp
xchg
push
cmp
adc
ds
and
shlb
jnp
cmpsb
test
xchg
iret
mov
push
jle
jg
mov
addr16
test
int3
cli
scas
and
pop
into
loopne
stos
mov
mov
int3
xchg
push
jne
enter
push
icebp
cmp
push
lods
bound
rcl
cmp
lds
mov
cltd
xchg
nop
in
nop
sbb
pop
int
push
jp
negl
jo
stos
ja
aas
out
pop
dec
inc
sbbb
clc
pop
xor
mov
pop
mov
pop
fcoml
push
mov
testb
roll
or
lds
mov
call
jg
dec
ljmp
xor
stos
repnz
mov
dec
jle
jmp
fiaddl
inc
adc
push
push
aad
sub
mov
adc
insl
push
sbb
aam
scas
xchg
pop
cwtl
sbb
dec
lods
cmp
xor
subb
and
push
mov
ds
sub
xchg
rcll
push
mov
xor
dec
inc
leave
out
faddl
sbb
push
mov
insl
jnp
mov
sbb
out
jb
loop
test
xor
sub
jb
xchg
call
out
faddl
test
out
inc
sub
adc
repz
stc
push
and
dec
fisttps
seto
xchg
and
push
adc
xchg
add
leave
cli
xor
sub
ret
aam
and
cmp
jne
insb
enter
or
shl
les
cwtl
pop
ret
add
jno
aad
xor
cmc
movsb
sub
xchg
arpl
decb
les
pop
dec
lcall
inc
mov
xlat
push
sbb
orb
loope
adc
leave
imul
into
or
das
push
int3
or
sub
fidivrs
jbe
fdivr
in
mov
int3
outsl
enter
xor
push
hlt
pop
xor
mov
mov
or
js
repz
mov
fcompl
bound
into
lea
push
pop
cld
xorl
test
or
mov
inc
nop
mov
mov
add
test
fisubrl
push
or
xchg
xchg
sar
jecxz
jmp
pusha
lcall
movsl
jbe
xchg
adc
adc
mov
mov
jbe
and
fidivl
dec
xor
xor
inc
or
jne
out
jns
fs
repz
xor
xchg
xor
fistps
push
sbb
notl
and
sbb
sub
mov
fiadds
dec
fiadds
jae
or
repz
jge
addr16
js
mov
mov
cmpsl
dec
enter
outsb
in
xchg
cmc
imul
fs
lea
mov
cmpb
sarl
into
into
jmp
xchg
xor
push
mov
cmp
cmovnp
aaa
jp
xor
test
in
ds
adc
lea
popf
in
push
sbb
add
inc
fldenv
xor
es
rcr
push
mov
inc
xchg
xor
sub
mov
jg
jle
sub
repnz
pop
cwtl
adcl
sbb
or
enter
mov
mov
mov
std
arpl
adc
jecxz
sbb
cmpsb
sub
mov
sub
sbb
cmp
fdivrl
sub
cmpsb
in
fyl2xp1
outsl
push
call
std
push
call
push
dec
add
pop
cli
fists
jmp
popf
or
imul
jb
js
push
xor
pop
adcl
icebp
push
xlat
sub
fidivrl
scas
shlb
sahf
loope
cmp
cmc
shrb
push
cmpsb
call
push
iret
mov
dec
mov
jno
ds
call
mov
fistl
bound
xchg
mov
mov
scas
lods
push
or
scas
mov
xchg
xchg
ja
xor
dec
flds
sbb
lret
jno
shlb
mov
lcall
popf
push
inc
das
and
adc
sbb
das
jmp
mov
sub
out
fcmovb
inc
sub
ja
xor
scas
das
cmpl
fstpl
das
mov
aad
add
and
faddl
pop
mov
je
jmp
sbb
in
rorb
or
jne
push
dec
jae
pop
fcmovbe
dec
mov
out
adc
adc
loopne
mov
lahf
or
out
fimuls
rclb
decl
sub
xor
jnp
jp
xchg
jo
add
push
popf
cmp
or
int3
icebp
mov
outsb
cmp
cmp
movb
int
hlt
out
mov
lcall
adc
cmp
sub
and
pop
mov
mov
dec
ljmp
pop
das
pop
hlt
in
clc
jno
dec
cmp
dec
mov
insl
xchg
adc
xchg
nop
cmp
pop
mov
stc
xchg
push
pusha
je
movsl
add
shl
push
sbb
jecxz
and
mov
bound
mov
rcll
sub
aaa
mov
popf
in
xor
ds
add
xlat
sbb
and
mov
pop
adc
xchg
mov
push
jo
pop
dec
das
sahf
mov
stc
and
sbb
xchg
ds
sub
hlt
inc
mov
clc
cmpsl
cli
cmpsl
lret
adc
aaa
lea
xorb
outsb
xchg
sbb
pusha
and
cmc
ret
add
inc
sbb
aas
inc
jo
and
daa
imul
scas
lock
mov
pop
int
popa
mov
jmp
leave
negb
jae
dec
enter
or
into
fistpll
add
sti
mov
jb
jae
mov
add
cmc
dec
xor
add
cmp
cmp
decb
or
leave
push
push
xlat
jecxz
aam
daa
lock
call
jmp
xor
pop
inc
and
aad
ljmp
std
dec
aam
iret
sbb
adc
je
cs
jmp
iret
jle
xchg
mov
jae
xchg
ja
pop
shrb
sub
adc
jmp
or
lcall
cmp
pop
js
daa
fistpl
fisttps
push
or
sub
pop
sbb
adc
xchg
outsl
or
mov
mov
xlat
aas
jo
mov
aas
fsubrs
cmp
aad
add
cmc
lret
outsl
inc
inc
test
mov
mov
add
mov
xchg
stos
or
test
ja
std
movsb
je
bound
into
sbb
pushf
lahf
lods
lods
mov
scas
pusha
vpcmpgtb
cli
cmpb
loope
adc
data16
push
xchg
jbe
outsl
dec
mov
cltd
inc
dec
pop
test
in
lods
and
xor
cld
push
jl
mov
lahf
sbb
sbb
xchg
imul
jecxz
imul
jne
pop
and
in
lcall
push
add
jbe
into
clc
cmp
mov
jmp
aad
fbstp
mov
test
dec
test
sti
stc
inc
add
jp
sub
fidivrl
cmp
push
dec
mov
imulb
dec
testl
xchg
fsubl
mov
shr
add
test
pop
pop
sbb
sub
jbe
jnp
fucomi
mov
sub
les
pushl
leave
xchg
sbb
ss
fdivrl
dec
adc
movsl
mov
pop
push
cld
mov
push
jnp
jge
push
dec
insl
pop
push
lock
add
stos
ds
mov
ds
in
xor
xor
sbb
add
and
mov
xchg
jno
scas
sub
push
int3
scas
push
notl
lea
rorl
add
into
sbb
lods
jmp
sarl
ja
call
and
jg
sub
lds
je
fcmovne
cmc
jle
test
outsl
or
xlat
aam
mov
cli
cmp
js
or
pop
mov
push
rcr
in
jmp
adc
mov
ljmp
fists
mov
call
fstl
stos
notb
push
shlb
fistpll
dec
call
or
ljmp
adc
icebp
inc
sub
mov
inc
cmp
lahf
bswap
lahf
mov
xchg
movsb
testb
js
sub
cli
lahf
rcr
cmc
int
push
cmp
sub
jle
adc
sub
fcomps
arpl
mov
std
insl
add
int3
xchg
cmc
mov
leave
jl
mov
push
dec
inc
xor
xchg
dec
xchg
or
rcl
jno
cltd
xor
mov
push
or
cmpsl
iret
sbb
xlat
cwtl
inc
int
fsub
push
stos
sub
jns
sti
ret
jle
xlat
jge
jnp
lock
or
and
xor
push
les
mov
xor
in
roll
imul
rcrb
mov
cs
mov
mov
inc
popl
push
in
aaa
enter
push
or
jb
das
inc
sahf
sub
sub
jmp
repnz
out
pusha
add
movsl
pop
daa
repz
stos
or
std
inc
sbb
lock
mov
sbb
outsl
xor
fists
pop
pop
add
lods
ret
mov
mov
ficoml
mov
and
loop
clc
pop
xchg
adc
fs
sub
mov
test
enter
leave
out
lret
sbb
inc
sbb
pop
clc
jmp
mov
dec
dec
frstor
nop
mov
or
dec
insl
sbb
mov
pop
pop
adc
mov
push
jo
cmp
sbb
and
lock
inc
xchg
jnp
sbb
daa
rclb
lahf
ss
xor
jnp
fwait
cltd
je
lret
cmp
add
or
test
rorb
xchg
add
and
xchg
push
pop
sbb
lea
adc
sub
cs
subl
repz
std
out
xor
pop
push
pop
push
mov
pop
ss
popf
das
adc
jne
jle
mov
stos
jg
mov
repz
sbb
add
sub
lcall
sbb
mov
mov
or
mov
out
pop
mov
sti
gs
mov
sbbl
jnp
mov
ss
in
dec
inc
pop
scas
enter
and
push
cltd
les
push
adc
daa
sub
lea
jnp
adc
fcmovb
in
inc
push
pop
xchg
dec
xlat
or
outsb
sub
mov
jne
mov
inc
sahf
dec
fs
cwtl
mov
pushf
jp
lret
cmp
cmpsb
fcoms
lock
xchg
call
fwait
jmp
xor
inc
xor
daa
in
loope
lahf
repz
and
xorl
aad
aaa
out
jae
out
lcall
ljmp
and
xchg
mov
test
fwait
cmp
and
sub
fcmovnbe
addr16
mov
fsub
sub
sbb
mov
mov
sbb
test
xchg
fildl
frstor
adcl
xchg
mov
pop
call
fisttpl
sbb
inc
adc
jae
mov
pop
stos
arpl
jl
xchg
and
insl
mov
orb
fadds
jp
in
dec
stos
cmpsb
cli
mov
scas
xchg
or
jg
loopne
aad
rol
and
push
cs
lods
xor
mov
ret
mov
jp
sbb
imul
daa
popf
stos
pop
or
sbb
aas
ror
scas
sub
int3
jmp
push
aas
fwait
mov
xchg
ficoml
std
shlb
mulb
shr
push
addb
int3
clc
fimuls
mov
dec
sub
and
fwait
mov
adc
rorb
scas
pushf
push
call
push
mov
mov
inc
out
gs
push
mov
loope
cmpsl
xchg
in
pop
stos
mov
and
leave
in
mov
dec
add
loope
and
fdiv
insb
xchg
mov
or
xchg
push
pop
mov
xor
adcb
sbb
lea
dec
sbb
and
in
ret
push
in
stos
jno
adc
ror
adc
setl
scas
mov
sarb
dec
mov
loop
aaa
daa
inc
shr
or
nop
lahf
pop
insl
loop
xchg
inc
fldcw
cmp
cmp
or
pop
cwtl
arpl
mov
lods
inc
dec
cmp
cmp
and
add
test
stos
push
sbb
scas
pop
mov
mov
cmpsl
int
jns
aaa
enter
and
adc
mov
aam
xchg
ljmp
mov
add
dec
jl
mov
mov
out
jnp
movsl
jg
pop
cmp
pop
fdivl
negb
cmp
sbb
fisttpl
xchg
add
scas
jl
or
repz
dec
push
and
or
pop
sbb
push
cli
cmp
push
call
cmp
pop
shrl
loop
add
push
sti
addb
movsb
xor
push
lcall
or
popa
sbb
out
add
in
aaa
push
repz
jae
jle
es
mov
mov
es
inc
jle
lods
and
mov
xchg
or
lea
je
rolb
mov
in
cmp
cmpsl
cld
sbb
jo
dec
mov
or
data16
xor
lcall
aaa
jb
xlat
arpl
lcall
inc
xor
add
push
xchg
repz
jo
dec
push
in
subb
push
arpl
dec
popa
stos
cmpl
es
dec
inc
dec
sbb
sbb
outsl
popa
lods
les
mov
and
jbe
aaa
pop
mov
insb
gs
jb
cmp
mov
dec
ret
xchg
shl
gs
std
scas
jns
adcl
aam
lods
adc
andl
dec
inc
xorb
je
or
add
pop
lds
stc
jl
push
lods
or
sbb
data16
mov
adc
ljmp
sub
push
int
pop
mov
call
sahf
loop
add
repz
lock
push
scas
mov
and
add
int
push
push
fstpl
aas
out
adc
sarl
lds
scas
in
add
jle
leave
xor
pop
sbb
cmpsl
mov
sti
daa
jp
stos
jb
cmp
pop
out
stos
adc
mov
les
push
sbb
pop
jae,pn
push
cmc
or
adc
sbb
or
aas
adc
inc
jl
std
pop
sub
or
int
fcoms
cld
icebp
inc
andb
fisttps
jp
aam
or
push
loop
rorb
pusha
inc
add
cmp
mov
out
iret
mov
cmpsl
mov
or
ror
or
lods
xchg
call
xchg
pop
jecxz
fwait
shlb
pop
adc
arpl
push
adc
addr16
add
neg
jmp
pop
int
movsl
mov
sub
lcall
inc
mov
push
mov
xor
ljmp
aad
push
sbb
std
je
jl
sub
popf
mov
xor
sbb
movb
xchg
sub
add
xor
shlb
loopne
stc
pop
push
test
fisubl
sahf
idivb
sbb
cld
inc
jno
std
popa
sti
ss
mov
mov
arpl
movsl
cmp
mov
push
in
insb
add
cmp
enter
adc
imul
xchg
fcmovne
push
cmpsb
and
lods
cwtl
movsb
hlt
cmp
js
mov
mov
out
icebp
cmpsb
aaa
lock
pushf
cmp
cmp
pop
hlt
push
adcl
mov
add
inc
mov
lock
leave
icebp
dec
fisubrs
lret
int
mov
inc
push
xchg
stc
scas
cmp
daa
mov
mov
xchg
and
push
add
xchg
jle
xchg
mov
sub
jl
repnz
out
arpl
subb
inc
jge
jmp
mov
add
jge
xor
popa
add
add
fdivrl
xchg
push
jg
in
cmp
enter
stos
sub
or
test
inc
xor
jns
pop
inc
push
or
or
or
and
push
xchg
repz
fidivrl
outsl
int
lds
inc
cmp
in
daa
mov
pop
mov
mov
es
cmp
es
dec
arpl
push
outsb
cmp
loope
fmul
cmp
mov
pushf
test
nop
and
and
add
sti
notl
mov
add
and
and
mov
dec
mov
mov
outsb
mov
aad
push
dec
test
in
dec
in
mov
or
add
cltd
dec
fstpl
ljmp
das
das
insl
fwait
insb
xchg
jecxz
mov
jp
pop
inc
test
lret
scas
ds
mov
jp
jb
addr16
sub
enter
gs
shlb
mov
add
mov
jge
int
negl
lea
scas
push
cmp
fbstp
cltd
jl
dec
or
lods
fs
lcall
shlb
lret
mov
js
mov
stc
mov
xlat
popa
pusha
in
aad
rorb
lret
xchg
sub
in
pop
cli
sub
sub
jle
stos
or
cld
jmp
adc
adc
jnp
pushf
aam
aaa
dec
mov
cmp
fwait
ret
mov
loop
popf
shlb
jge
std
repz
adc
add
push
sbbl
pop
jmp
cmp
int
ret
xchg
inc
xchg
jae
enter
sub
popf
clc
int3
ret
imull
pop
test
jle
jmp
nop
dec
sbb
mov
push
cmp
jl
inc
faddp
xchg
push
xchg
mov
mov
ss
xor
cld
pop
jbe
in
rclb
xchg
push
jmp
xchg
out
cmpsl
or
inc
add
mov
jg
xchg
pop
inc
xor
popf
lea
dec
sbb
mov
lcall
jns
cmpsl
cmp
in
leave
jmp
cltd
push
int
out
fldenv
cmp
loop
pusha
rorb
jmp
mov
imul
bound
insl
or
test
pop
mov
jg
sbb
xchg
jno
inc
push
xchg
dec
pop
filds
jne
mov
imul
repz
cltd
mov
or
mov
sbb
cli
jle
adc
sbb
pushf
adc
inc
add
insb
fwait
les
stos
jle
aad
cmp
sub
clc
sahf
add
imul
popf
sub
enter
dec
inc
pop
stos
ret
bound
push
cli
roll
lods
shll
dec
fcmovnbe
ror
mov
pop
sahf
adc
pop
in
cmp
xchg
or
xor
cmp
loop
pop
push
pop
adc
xor
push
je
out
stc
popf
stc
sbb
or
cmp
lcall
jecxz
push
out
fisttpll
andb
pop
aad
sub
dec
inc
ret
cmpsl
aad
xor
pop
jae
je
mov
dec
mov
in
mov
mov
jp
add
cmp
std
test
fdivs
inc
push
insb
mov
inc
xchg
insb
pop
addr16
mov
insl
jecxz
mov
loope
out
cmpsl
push
ljmp
inc
and
shll
subl
push
push
ja
aas
cwtl
mov
ret
push
xchg
dec
outsb
imul
sbb
out
and
ljmp
in
mov
test
or
test
xlat
lret
sarl
jl
jb
es
loopne
insb
push
cmp
sbb
mov
sbb
adc
xchg
pushf
mov
mov
faddl
int3
inc
sti
pop
adc
xchg
adc
mov
inc
sub
mov
pop
repz
sbb
mov
sub
and
test
xchg
xchg
add
push
pop
mov
and
fisttpl
test
add
sub
movsb
push
iret
cld
and
lea
jge
shll
xchg
roll
out
xor
sub
mov
int
enter
das
push
pop
jecxz
stc
mov
stos
xchg
add
inc
inc
dec
mov
mov
rcrl
out
cltd
rcll
mov
mov
aas
mov
jle
or
sub
pop
pop
cmpsb
cli
mov
outsl
cmpsl
icebp
pop
xchg
stos
pop
lods
in
int
push
and
dec
dec
cltd
das
fimull
adcb
out
shll
mov
mov
dec
dec
cwtl
test
lds
fwait
xchg
pop
ret
in
shl
adcl
out
or
je
dec
inc
push
aaa
cli
in
inc
add
inc
lods
mov
test
jg
push
sub
popa
les
dec
lock
mov
dec
int
dec
je
inc
push
xchg
test
jbe
xchg
jp
adc
lds
jo
mov
test
cs
inc
scas
enter
xor
mov
jmp
call
movsl
stos
icebp
stos
jno
ds
adcb
jmp
int
mov
in
jne
pop
cmp
fcoms
inc
mov
jno
jg,pn
xor
lock
lahf
aas
or
lds
out
test
insl
jbe
nop
jge
popf
mov
dec
stc
jge
xchg
fidivl
xchg
addb
add
jo
faddl
cld
call
sahf
and
lock
lock
call
jnp
push
out
in
shll
lea
xor
jl,pt
ret
test
fsts
cmp
sahf
add
int3
fucomp
adc
mov
fsubr
push
push
jne
in
roll
sub
pop
fiadds
inc
lea
sbb
push
inc
jb
pop
stc
jecxz
push
ds
sub
xor
nop
shlb
lods
push
lock
in
mov
push
jmp
xchg
test
jno
push
das
insl
nop
repz
or
cmp
mov
dec
mov
sbb
mov
pop
loope
push
test
movsl
fwait
adc
or
out
mov
mulb
adc
mov
pop
in
xor
into
dec
pop
daa
andl
outsl
add
test
cmp
icebp
bound
sbb
pop
xor
adc
sub
sar
sbb
add
fcoms
test
cmpsl
xor
test
xchg
push
shlb
outsb
mov
js
aaa
pop
xchg
lret
in
test
inc
push
fsubl
das
inc
adc
dec
or
xor
xchg
push
lahf
mov
bnd
lds
pop
ljmp
push
into
or
rcrl
pop
xor
insb
pop
movsl
mov
push
mov
lcall
inc
sub
xchg
in
xor
dec
push
mov
jae
out
loop
xchg
aad
aaa
mov
filds
movsl
aad
insl
addr16
push
sub
xchg
xchg
push
lds
dec
scas
or
outsl
sub
sub
adc
adc
cli
fs
push
cmp
imul
lods
pop
test
fucomip
test
mov
jo
cmp
mov
add
arpl
mov
hlt
mov
leave
add
xor
bound
and
jle
rorb
lahf
cmp
inc
call
int3
shrl
daa
and
dec
in
sub
aaa
mov
jbe
inc
nop
xchg
or
shll
pop
jl
add
push
scas
add
ret
aaa
push
mov
adc
push
mov
nop
pop
jmp
out
sub
decb
cmpsl
rorl
call
inc
movsl
daa
inc
cmpsb
or
ja
dec
pop
sub
stos
enter
mov
add
mov
inc
push
sti
jnp
mov
sahf
mov
inc
inc
stos
pop
cmp
ss
out
mov
adc
and
nop
lods
mov
shrb
std
scas
jnp
lret
sarb
or
les
aas
or
adc
pop
mov
loop
jp
xor
inc
mov
push
xor
rorl
clc
gs
mov
fidivl
fdivrl
out
movsb
cmpsb
sbb
pop
pop
jle
into
loopne
outsb
sub
out
dec
out
and
xchg
adcb
mov
xor
xchg
jecxz
xlat
das
ds
sub
or
pop
xchg
pop
add
bound
cmpl
and
jp
jl
cmp
xlat
jl
pop
clc
test
ljmp
adc
pop
dec
test
cmpl
mov
push
sub
pop
adc
ds
cmp
in
inc
and
clc
jb
pop
cmpb
sbbl
xchg
push
in
pop
xchg
add
inc
xchg
add
sahf
dec
in
outsb
inc
shll
fwait
inc
mov
fcmovnb
or
test
xchg
and
cmp
adc
fsub
ret
adc
cwtl
in
into
lock
mov
adc
outsb
xchg
pop
insb
mov
pushl
cmp
mov
nop
mov
pop
repnz
fldcw
cmp
pop
mov
dec
add
or
pop
mov
js
pop
jp
rorl
lcall
js
out
sbb
int3
fsubs
and
insb
push
pop
test
inc
jmp
xchg
mov
mov
push
inc
jle
mov
sti
loopne
mov
rcll
xchg
add
cs
inc
cmp
sub
pop
xor
pop
lock
add
push
pop
add
inc
popf
loopne
scas
push
mov
cld
sbb
lea
repz
scas
xor
ja
xor
out
stos
cld
icebp
ljmp
mov
mov
mov
repnz
inc
loop
pop
jb
sbb
enter
mov
jno
pop
mov
xor
scas
pushf
arpl
sub
inc
movsl
lock
cli
out
sahf
loope
mov
fistps
push
sub
fmuls
push
and
leave
jno
cmpsl
mov
sub
push
icebp
stos
call
leave
addb
jle
test
mov
pop
mov
adc
int
or
out
mov
loop
push
scas
sbb
fs
scas
inc
mov
sti
out
addr16
sbb
jp
jge
inc
call
out
push
sbb
cwtd
xor
rol
sbb
nop
dec
push
or
shlb
adc
in
repnz
mov
pop
xchg
es
xlat
movl
mov
cs
pop
inc
decb
add
iret
insb
les
icebp
data16
loop
lcall
enter
cmp
stos
movsl
aad
add
leave
xor
xchg
lret
adc
lock
outsb
je
and
cmc
addr16
push
adc
jbe
in
push
and
jo
jne
and
push
js
into
test
fimull
nop
inc
icebp
mov
jg
incl
mov
and
test
push
mov
lds
mov
lahf
xchg
xchg
mov
dec
subl
lret
mov
loope
jecxz
pop
xchg
add
sub
mov
stc
lahf
lock
xchg
out
mov
sub
sub
mov
imul
xchg
out
cmpsl
xor
xchg
jl
loopne
fisttps
ds
repnz
sub
sahf
cmpsl
dec
jb
sub
in
adc
inc
xor
and
lock
imul
fidivrs
mov
xchg
xchg
lods
test
out
cmp
loopne
add
lods
daa
push
jb
sbb
and
inc
add
adc
mov
xor
jno
mov
pop
aad
mov
mov
test
das
mov
dec
cmp
inc
jecxz
push
lahf
jl
imul
inc
inc
aam
xchg
cmp
int
pop
xchg
pop
rolb
aas
push
mov
push
in
in
cmp
sub
mov
andb
imul
lahf
mov
fnstcw
mov
push
adc
xchg
in
shlb
icebp
aas
in
jne
fs
nop
xchg
mov
jmp
mov
sub
cmpsl
pop
dec
adc
insb
fldl
mov
ret
dec
repz
mov
cmc
push
cs
out
pusha
xchg
movsl
mov
ficompl
addb
data16
ret
and
ljmp
repnz
scas
arpl
xchg
add
mov
pusha
jne
outsb
jnp
orl
dec
sbb
xlat
mov
lods
and
inc
in
loope
fimuls
aaa
cmpsb
xchg
sar
int
cmp
into
xor
lea
out
add
push
adcb
cmp
jle
test
loopne
push
lods
les
jb
and
filds
mov
push
mov
pop
rcrb
jp
adc
dec
std
outsb
in
cld
sub
sbb
adc
mov
inc
dec
ds
mov
jnp
lret
cmp
jg
mov
mov
push
js
stos
into
dec
stos
dec
mov
lret
cmp
movsb
or
cmp
inc
or
dec
sub
cli
test
mov
pop
or
das
dec
dec
dec
shl
scas
or
sarb
in
test
fs
xchg
mov
push
inc
add
lret
xchg
push
pop
and
inc
mov
js
sbb
ljmp
inc
add
cs
pop
rorb
sahf
mov
sbb
sub
or
add
stc
loopne
cld
and
pop
xchg
popa
mov
sbb
pop
cmpsl
add
test
clc
aaa
xor
fcom
dec
mov
dec
sub
inc
push
aam
inc
pop
daa
loop
or
add
mov
cli
imulb
push
xchg
mov
insl
std
flds
jmp
filds
push
adc
daa
xorb
pusha
sahf
sub
lods
incl
lret
fwait
push
sub
nop
or
sub
adc
orb
push
dec
push
pop
clc
sbb
ret
sbb
mov
pop
fdivrl
addr16
mov
xchg
jg
jnp
and
or
loop
sbb
pushf
inc
mov
jmp
sub
or
pop
xchg
ss
dec
into
jne
pop
dec
add
in
std
cltd
je
sbb
xchg
insb
test
jno
scas
imul
sub
sub
mov
flds
imul
aad
and
icebp
fsubl
jmp
cmpsb
dec
xor
mov
ja
pop
icebp
ret
arpl
loopne
xchg
das
jno
iret
sbb
in
addr16
ja
imull
shrl
mov
mov
mov
aas
inc
ljmp
adc
mov
jne
cmp
xor
dec
lcall
inc
sbb
cwtl
pop
stos
out
xor
aas
xchg
mov
xchg
push
add
fdivrl
push
lahf
push
mov
add
inc
cmp
pop
jbe
cs
jge
frstor
mov
int3
notb
fidivs
divl
pusha
or
jmp
stc
es
adc
mov
out
movsb
and
mov
or
into
daa
dec
dec
in
fcoms
inc
sbb
mov
push
jg
push
aad
cli
stos
sub
pop
dec
lcall
int
test
in
int
jg
mov
movsl
scas
mov
pavgb
fiadds
fimull
mulb
jmp
jl
arpl
and
dec
cli
test
add
jbe
dec
nop
xchg
push
mov
fadds
daa
xlat
subb
clc
mov
adc
adc
sbb
push
gs
cli
inc
addr16
xor
les
aaa
dec
cmp
xlat
push
fldenv
lock
test
or
sbb
ds
jp
mov
push
mov
push
ret
xchg
outsb
nop
and
xor
push
notl
adc
mov
push
gs
clc
adc
sub
push
sbb
sub
add
xor
fcmove
out
int3
inc
das
cmp
test
mov
ss
inc
adc
test
sbb
or
fnstsw
scas
les
cwtl
adc
cmp
xchg
or
pop
adc
in
sahf
sbb
cli
or
inc
mov
in
das
aam
addr16
pop
loopne
adc
out
sti
mov
jg
adc
xor
arpl
push
or
lock
mov
jne
popl
inc
xchg
mov
xchg
test
push
adc
xor
mov
nop
filds
sub
add
das
or
push
cwtl
test
pop
cmp
ficoms
cmc
fucomip
add
stos
ljmp
sbb
lahf
sub
loopne
mov
divl
cwtl
mov
mov
fidivs
jb
testb
mov
loope
dec
add
or
sub
mov
pop
loop
sbb
mov
add
out
pop
mov
mov
outsb
xor
sub
pop
mov
cmpsl
test
add
fbstp
add
mov
fdivr
add
aad
dec
mov
mov
data16
sbb
ret
adc
push
ja
add
sub
sub
sub
jns
loopne,pn
int
cwtl
jmp
xor
hlt
xchg
in
scas
ds
pop
xchg
xor
jecxz
add
dec
subb
mov
jge
bound
jp
lcall
push
cld
cmp
fildll
xchg
push
sbb
sbb
mov
and
les
jnp
add
sub
cld
stos
out
or
pusha
pop
cld
std
sbb
scas
cmc
in
rorb
popl
insl
iret
cmpb
rorl
mov
aad
pop
mov
pusha
aad
mov
imul
and
jmp
movsl
mov
aaa
jae
adc
xchg
sub
sub
enter
in
pop
lock
out
shll
inc
cmp
faddl
xor
sbb
fxtract
mov
jle
je
jne
mov
loopne
push
sub
mov
popf
jo
pusha
push
mov
adc
mov
cmpsb
lock
daa
add
lret
adc
outsb
das
lret
add
mov
push
lock
and
fdivl
ret
and
mov
ret
pusha
push
mov
lds
mov
add
cmp
mov
push
jle
inc
into
scas
jecxz
xchg
push
pop
pop
lcall
add
or
jb
pusha
movsb
out
jne
lcall
inc
xor
dec
jmp
pusha
jo
or
pop
mov
call
xor
or
sahf
bound
cmp
or
cmp
and
pop
call
sbb
loop
add
adc
out
xor
decb
cld
push
addl
fnstsw
ss
mov
push
sub
sub
xorb
arpl
xor
dec
mov
xchg
mov
dec
adc
mov
cmp
xor
aam
pop
adc
fcomip
jns
mov
pop
sub
xchg
inc
xchg
cmpsb
stc
push
hlt
or
or
inc
js
or
adc
jl
shrl
pop
cltd
sbb
or
dec
scas
and
adc
int3
lds
lea
es
inc
mov
js
lods
cs
insl
xchg
cs
sbb
mov
push
or
fcmovbe
fdivr
sbb
pop
aam
lcall
mov
add
iret
adc
jb
stos
inc
test
mov
sbb
sbbb
fcmovbe
add
cmp
arpl
addr16
stc
mov
shll
pop
xchg
andb
xlat
shlb
dec
gs
nop
stos
clc
outsl
push
jmp
aam
leave
icebp
xor
inc
mov
add
add
sub
incb
or
pop
bound
call
int3
push
bnd
fistl
sbb
int
mov
test
cmpl
outsb
int
or
movsl
lock
scas
aad
cmc
mov
xor
mov
and
sbb
adc
cld
jns
dec
out
mov
aad
sti
outsl
rorl
mov
cld
lock
mov
jo
jmp
xor
dec
inc
pusha
push
sbb
xchg
movsl
idiv
pop
xchg
pop
xor
or
es
dec
mov
mov
out
addr16
pusha
jg
lahf
loopne
cwtl
mov
popa
iret
pop
fmul
inc
ret
shrl
push
test
add
ficomps
arpl
lods
out
es
mov
dec
out
aad
or
dec
pop
jo
push
loopne
setge
jb
xor
dec
or
jne
mov
and
sbb
dec
ja
lods
std
xor
mov
adc
dec
jo
jno
in
les
jb
mov
aad
xchg
mov
jmp
push
clc
xchg
jno
and
arpl
imul
icebp
sbb
lods
push
jb
inc
and
jnp
inc
cmp
inc
and
test
daa
pop
jae
dec
mov
push
dec
jbe
outsl
jecxz
out
scas
aam
inc
push
xchg
jg
adc
aam
lock
faddl
cmp
mov
js
jp
jae
cmovae
andl
and
fstpt
cmp
arpl
repnz
sub
jmp
es
cmp
and
sub
sahf
mulb
cld
lahf
xchg
inc
ret
lods
stc
int
loopne
loope
mov
push
outsb
arpl
pop
mov
jp
fs
test
les
mov
inc
mov
sub
in
xor
sub
cmp
sub
in
adc
aad
cmp
ljmp
push
fsubr
ret
imul
stos
push
pop
cmp
imul
mov
popa
mov
cltd
jmp
enter
xchg
push
clc
outsb
bound
inc
sbb
mov
mov
aam
pop
movsb
fisttpl
sbb
sub
bound
stos
insl
mov
dec
popa
mov
loop
setge
jb
mov
jle
dec
ds
in
mov
sbb
xor
adc
xor
push
sub
jb
pusha
loope
push
orb
es
mov
lods
test
imul
ds
cmpl
iret
push
and
and
es
test
js
aaa
sbb
cld
xlat
ret
pop
rolb
jg
sub
sbb
mov
mov
pop
scas
push
bound
stos
aad
ret
xor
sbb
inc
sbb
push
stos
fwait
cmp
inc
adc
cmpb
pop
xor
jmp
enter
cltd
stos
mov
jo
sub
adc
stc
sbb
push
lcall
add
fcmovb
or
cmp
int3
xor
jbe
mov
sub
pop
addl
inc
bnd
jge
stos
or
push
mov
aaa
jae
bound
leave
cltd
pop
jp
mov
sub
fwait
mov
cmp
jb
sub
aad
bound
pop
mov
sbb
jle
push
cmpsb
imul
add
mov
sysexit
and
aas
cmp
loop
push
pop
lcall
inc
jl
xchg
fwait
ffreep
sub
dec
mov
sahf
stc
push
call
imul
push
lods
mov
loope
pusha
mov
test
and
sbb
jne
and
and
das
add
les
jg
cmp
push
ss
cmp
aad
adcb
inc
std
mov
push
cmp
ret
inc
call
out
fdivrl
push
add
testb
inc
pop
or
fisubs
xchg
sub
cwtl
and
jg
add
or
push
push
mov
movsb
add
mov
pop
repz
scas
mov
aaa
and
inc
xor
mov
sbb
xchg
in
outsb
sub
fxam
sbbb
xchg
daa
out
adc
les
xchg
jb
xor
dec
xor
lcall
imul
jg
arpl
xor
test
int3
arpl
out
frstpm(287
repnz
pushf
dec
jno
notl
xchg
in
outsb
cmpsb
fisubs
into
popf
scas
dec
fisubrs
ret
aaa
push
fdivrl
call
xchg
push
in
inc
in
in
enter
rcll
movsl
inc
mov
loop
in
stc
fisttps
test
stos
or
test
mov
enter
inc
cld
fsubl
mov
xchg
ljmp
sar
xchg
xor
cld
mov
sbb
stos
cld
push
sub
add
jge
push
sbb
and
jecxz
fstps
xchg
cmp
xor
lahf
scas
inc
mov
jmp
xor
adc
pop
or
adc
ss
xor
pop
sbb
pop
mov
outsl
mov
je
fcomps
arpl
or
idivb
cmpsl
test
out
cmpsb
lods
and
sbb
faddp
fisubl
pop
loope
movsb
mov
mov
ja
arpl
pop
dec
mov
mov
lret
rcrl
mov
inc
jae
xlat
faddl
dec
fwait
pushl
movsb
cmpsl
mov
xchg
outsb
test
jge
loope
push
xchg
xchg
cmp
fistps
inc
xchg
pop
scas
jg
fdivr
push
rcl
ror
jecxz
lcall
xor
dec
ret
test
je
sub
mov
pop
dec
or
inc
out
and
dec
dec
out
test
pop
popf
push
sbb
int3
and
mov
mov
data16
add
lds
push
lret
in
decb
push
popf
mov
cmp
std
jno
jno
arpl
mov
pusha
fcoms
leave
push
cmp
fadd
mov
xchg
data16
pop
inc
mov
inc
or
rclb
mov
jp
jg
fimuls
and
cmp
cli
fdiv
adc
and
xor
mov
incl
movsb
inc
pop
jbe
pop
gs
xor
add
mov
sbb
push
popf
xor
pop
jno
jecxz
movsb
hlt
je
dec
daa
test
in
push
lahf
inc
insl
pop
dec
leave
jmp
call
add
imul
sub
jns
fcom
fstpt
mov
mov
movsl
jg
sub
jecxz
pop
les
lds
mov
rolb
pop
xchg
cmc
mov
pop
cltd
sub
or
push
mov
xor
or
ljmp
addb
icebp
cwtl
loop
imul
cmpsl
pop
or
cli
dec
xor
push
mov
mov
repz
scas
icebp
imul
push
add
mov
rol
cld
leave
iret
xchg
nop
sti
scas
mov
inc
repz
cmp
or
loop
xchg
cmpl
xchg
ret
outsl
adc
mov
sti
movsb
scas
sub
add
sti
jg
xchg
pusha
add
or
jne
shll
daa
cmpsb
test
fwait
pop
or
pop
mov
call
push
jne
xlat
mov
mov
aam
std
add
mov
xchg
fsubr
jbe
xor
jge
fmuls
subl
dec
cmc
jecxz
jg
jge
push
pop
cli
mov
pop
fcoms
xchg
loop
shl
rorl
xorb
mov
push
jae
xchg
adc
inc
jne
andl
push
inc
filds
push
jb
xlat
imul
loop
inc
mov
mov
mov
aam
push
add
pusha
psrlq
aam
cmp
loop
xchg
inc
inc
es
sbb
sbb
bnd
cmp
std
lods
addr16
addr16
loope
lods
lret
movsl
dec
push
push
cmp
cmp
push
xchg
movb
fisttps
stos
test
lret
and
enter
lret
push
dec
hlt
stos
ret
scas
mov
movsl
sbb
sbb
and
mov
pushf
cmp
cmp
or
add
dec
sbb
sbb
mov
dec
add
lahf
shlb
or
mov
sar
scas
mov
jg
mov
popf
rcl
cmp
xor
test
in
dec
es
repnz
adc
xchg
push
pop
das
aas
mov
mov
fcompl
dec
mov
hlt
dec
dec
nop
xchg
dec
lret
and
mov
je
mov
xor
icebp
xor
pop
pop
lret
icebp
mov
in
jmp
or
pushf
xchg
xor
in
add
bound
sub
push
dec
rol
cmp
out
lea
rol
xchg
jne
xor
adc
scas
sbb
mov
dec
push
stos
sbb
dec
outsb
js
cmpsl
add
push
mov
mov
ljmp
push
dec
pop
repz
ret
jo
std
dec
shrl
inc
jle
and
clc
jecxz
push
movsb
cmp
push
arpl
inc
repnz
das
sub
dec
jbe
mov
pop
jnp
lea
fcmovbe
adcb
addb
sub
adc
into
leave
aaa
and
je
hlt
or
mov
push
lock
or
push
scas
lret
dec
aad
xor
or
stos
mov
int
cmp
cmpsb
movsb
pop
addb
cli
out
fsubrs
jne
pop
cmp
cmpsl
lods
subl
cmp
push
add
and
cs
push
mov
cs
xor
out
fs
dec
pop
push
pop
int3
push
jne
sub
pop
inc
mov
pop
push
mov
sbb
clc
mov
icebp
jae
xchg
mov
mov
add
les
sub
and
int
aaa
jns
fdivl
js
mov
cmpsl
pop
sub
jns
push
push
xchg
adc
sbb
jmp
or
out
in
in
dec
cld
dec
addl
pushf
scas
cwtl
jp
ret
movsb
sub
xor
xchg
sub
shlb
add
out
hlt
aad
cmp
xchg
aad
out
lods
inc
pushf
push
or
rolb
xchg
imul
inc
jnp
es
push
lods
xlat
repnz
and
data16
add
push
pop
mov
cmp
clc
dec
xchg
xchg
mov
repz
xchg
xchg
jo
mov
mov
test
or
mov
and
or
push
fidivs
rcrl
test
add
inc
in
push
les
mov
xchg
or
popf
xchg
pop
xchg
ficoms
test
inc
adc
fidivrs
adc
insb
adc
fildl
mov
cmp
ret
fdivs
jbe
adc
sbb
fiaddl
popf
mov
shlb
mov
popa
std
pop
es
cs
jg
out
pop
xor
inc
pop
fisubrl
xor
mov
fwait
sbb
lds
dec
scas
clc
test
adc
push
adcb
pop
xor
icebp
and
xchg
outsl
jne
jb
ret
cmc
stos
jmp
bound
mov
mov
mov
xorl
addr16
push
into
mov
popf
leave
sti
adc
push
into
pushf
leave
inc
shr
xor
mov
adc
dec
enter
adc
cmp
dec
sub
pop
lds
jno
test
inc
nop
mov
sbb
hlt
dec
ljmp
push
lahf
clc
sbb
mov
add
inc
xchg
push
add
mov
mov
ficoml
xchg
mov
inc
mov
pop
add
rol
ds
loop
xor
aas
dec
xor
inc
push
lahf
cmc
jno
jb
subl
sub
xchg
sub
push
out
jmp
push
shrb
es
lret
loope
hlt
mov
push
jge
addr16
jno
push
mov
aaa
mov
jp
pop
lods
mov
leave
cmp
subl
mov
lret
pop
scas
dec
and
clc
getsec
lea
adc
mov
test
mov
int3
jo
inc
mov
addr16
cmpsl
mov
lret
jmp
aaa
repz
dec
out
or
mov
mov
mov
arpl
leave
pop
fdivr
inc
insl
ret
or
bound
pop
aas
hlt
popf
lds
sub
ljmp
jmp
add
mov
in
jns
es
cltd
mov
aam
in
movsb
js
and
shl
loope
pop
daa
lcall
jg
mov
aaa
xor
arpl
jne
ds
sbb
mov
mov
push
mov
sbb
or
ljmp
pop
xor
pop
xchg
outsl
jge
xor
or
ret
inc
sub
aad
or
es
andb
jl
fistps
icebp
cli
mov
aas
and
fcomps
dec
xchg
ss
out
fucom
movsb
pushw
aaa
nop
push
xor
test
and
push
jmp
outsb
xchg
sub
fwait
xor
mov
testb
mov
sbb
sbb
mov
loopne
sub
mov
xor
pop
in
push
cmp
stos
out
popf
sbb
xor
push
jnp
mov
outsl
inc
cmp
cltd
pop
mov
lahf
ss
and
or
jnp
add
mov
ret
aad
in
mov
cmpsl
mov
shl
inc
xor
mov
adc
mov
pusha
fsqrt
addb
pop
and
mov
int
sub
hlt
or
adcl
push
sub
mov
pop
jle
or
xor
fbstp
inc
popa
pushw
popf
nop
inc
iret
je
enter
adc
test
call
stos
dec
push
test
xchg
pop
xlat
fistpll
pop
and
inc
iret
push
repnz
je
in
mov
xchg
mov
jmp
leave
popf
hlt
and
push
fistps
xchg
mov
dec
aad
jmp
and
or
pop
cwtl
adc
and
mov
les
repz
pop
pop
sbb
int
movsb
jl
ja
pop
je
paddsb
in
jge
lock
pop
faddl
pop
lcall
mov
rcr
xor
mov
jle
lcall
pop
xchg
int
mov
movsb
mov
fldcw
movsb
mov
aaa
int3
xor
dec
cmp
es
insb
sub
mov
adc
sub
sbb
or
fdivrp
scas
pop
adc
xor
fisubl
add
hlt
data16
test
ret
stc
sahf
push
int
jge
or
loopne
xchg
aas
shlb
pop
bound
xor
or
lret
test
pop
inc
lcall
push
lods
push
adc
or
jmp
insl
jle,pn
cld
call
outsl
je
test
or
mov
mov
dec
sub
jne
xchg
fldt
adc
lods
fldl
leave
mov
lret
addl
inc
pop
sahf
in
iret
cltd
push
mov
cmp
aaa
iret
mov
push
mov
mov
mov
sbb
daa
in
or
cmpl
ss
dec
fiaddl
mov
mov
sbb
jb
ja
cltd
cmpsb
dec
lea
imul
scas
and
pop
add
imul
aas
fldpi
dec
mov
cmpsl
jb
repnz
xlat
xor
lret
sub
jecxz
cwtl
xor
psrlw
cmp
insl
push
or
inc
sbb
push
mov
or
add
iret
jb
mov
lods
test
cmpsb
lods
or
scas
lret
test
out
jmp
fisubs
out
cwtl
pop
cs
fisubrl
or
push
cwtl
inc
pop
popa
mov
cmp
xchg
mov
and
pop
sub
mov
xchg
aaa
mov
insb
and
fisttps
jl
adc
sti
push
mov
mov
rcr
arpl
sub
inc
test
mov
pop
inc
pop
mov
sbb
and
fisttps
dec
test
mov
movsb
nop
addr16
inc
fdivrp
nop
scas
clc
in
rcrb
mov
gs
mov
dec
jge
cmp
movsl
dec
push
ljmp
pop
cmp
adc
rcrl
adc
loope
dec
rorl
shr
sbb
lods
cmp
adc
cmp
pop
jo
sbb
int
popa
xchg
xchg
pop
sbb
leave
fdivl
sti
or
add
bnd
je
mov
sbb
pushf
enter
je
push
jle
mov
cmpsb
cmp
scas
push
into
xorl
ror
negb
popa
cltd
mov
fisttpl
mov
icebp
jb
pop
sub
jno
icebp
insl
jne
inc
das
jnp
movsb
test
sbb
sbb
sub
mov
in
js
out
aam
in
loop
lret
lods
clc
insl
das
out
adc
jbe
push
imul
subl
insb
ficomps
out
sbb
das
push
xor
mov
imul
pop
es
pop
les
sahf
lcall
dec
mov
enter
and
das
out
sbb
std
es
ss
enter
mov
pop
jecxz
jo
fsubrs
jns
pushl
push
mov
movsl
jle
lods
adc
xchg
dec
cmpsl
mov
fwait
sub
fmul
or
and
xor
adc
ds
mov
test
mov
xchg
cld
cmp
aad
stos
lods
test
mov
mov
lock
adc
lcall
stos
fisttps
test
mov
cli
pop
pop
orb
gs
mov
mov
das
into
dec
scas
cld
lds
gs
pop
fldt
rol
lds
push
lcall
sti
outsl
popa
pop
js
outsb
mov
jmp
mov
iret
push
aaa
ret
mov
push
or
stos
add
fidivrs
out
loopne
jle
xchg
jbe
mov
xchg
cli
dec
insb
ret
add
inc
xchg
out
mov
push
repz
data16
shrl
xchg
cs
in
dec
test
mov
loopne
popl
and
outsl
xor
lret
sti
cli
outsb
dec
sbb
ret
fxtract
jl
cmp
mov
lods
mov
lea
pop
out
subl
sbb
repz
lods
sbbl
in
mov
dec
sbb
add
adc
xor
mov
mov
adc
ljmp
mov
cmp
mov
les
je
cmpsb
mov
sahf
dec
aaa
push
ret
int
clc
sbb
out
out
pop
out
pop
fcoms
sbb
adc
add
cld
mov
jp
insl
dec
push
out
in
je
pop
jb
jge
push
push
jmp
addr16
adc
push
pop
inc
jge
imul
inc
xlat
icebp
add
roll
dec
sti
stos
cmc
cmp
sbb
sbb
stos
pop
sti
mov
pushf
push
jns
add
out
jmp
adc
aam
pop
outsl
aad
fsts
stos
enter
add
cmp
sbb
and
mov
push
pop
push
mov
sbb
pop
mov
ret
sarl
push
cmp
or
xchg
fdivrs
mov
pop
fisttps
jge
lcall
mov
dec
dec
jo
stos
int3
push
data16
inc
pop
push
jne
sbb
push
inc
pop
inc
adc
mov
add
xor
cmc
pop
rorl
cmc
mov
xor
push
fsub
jne
cmp
arpl
cwtl
mov
fbld
in
xor
cli
xchg
mov
and
or
xchg
repz
mov
scas
jne
fidivrs
and
mov
les
fistpl
mov
adc
add
insl
ljmp
stos
xor
inc
insb
daa
mov
xchg
lock
cmpsl
xchg
in
negb
pop
push
pop
aaa
loopne
lahf
lret
mov
mov
call
rorl
lret
rorl
icebp
sub
lahf
in
cs
add
clc
adc
insl
shl
daa
aas
pusha
out
pop
jmp
mov
ss
xchg
push
dec
push
movsb
mov
xchg
mov
es
xor
xchg
mov
lea
in
scas
in
xorb
cmc
inc
mov
xor
imul
sbb
adc
popf
stos
mov
iret
push
iret
std
xchg
add
test
lret
pop
out
enter
xor
leave
daa
sub
mov
pop
mov
shll
cli
je
int3
jp
inc
sub
push
testb
mov
mov
in
lret
test
xchg
cmp
sub
add
mov
int3
jmp
ret
sarl
stc
adc
jecxz
pop
out
push
leave
out
fwait
rcll
addb
add
cs
cmpsb
xchg
and
es
lahf
or
mov
js
sub
dec
jbe
out
scas
lock
sbb
fwait
push
dec
adc
out
push
cmp
pop
push
xchg
ret
cmp
inc
repz
jle
mov
cmp
enter
test
stos
fwait
lahf
sbb
ljmp
pop
fadd
mov
mov
insb
inc
inc
jo
dec
dec
aad
es
inc
dec
add
dec
sbb
jae
fs
push
xchg
dec
push
mov
into
sub
shlb
push
pop
mov
add
mov
inc
jmp
sub
add
out
xlat
fnsave
fs
les
sub
pop
or
cltd
and
xchg
dec
cmp
xor
shll
stc
lahf
testb
xor
mul
fndisi(8087
sub
sbb
insb
cli
add
pop
jl
dec
ljmp
mov
je
inc
shll
movsb
lds
out
scas
jne
sub
inc
shl
clc
dec
adc
clc
push
addr16
imul
sbb
cltd
mov
sub
mov
jle
in
or
xchg
xor
dec
jmp
lahf
pop
imul
pusha
fisttpll
gs
faddl
sahf
cld
push
ret
leave
add
stos
and
movsb
das
addl
insb
mov
repz
inc
inc
push
aaa
sub
sbb
rcr
cwtl
jl
cli
pop
xchg
aaa
jo
mov
scas
cmpsb
pop
mov
add
xchg
jne
lds
inc
dec
mov
imul
adc
out
pop
ss
xorb
adc
mov
jne
sbb
push
imul
inc
fsubl
or
jge
cmp
inc
adc
test
or
mov
stos
mov
sbb
lods
push
lock
push
mov
mov
push
push
idivb
sub
adc
arpl
pop
data16
cld
sub
or
push
xchg
les
cs
test
lret
pop
repnz
pop
imul
xor
sub
jns
in
push
sbb
mov
pop
daa
sub
cmp
mov
mov
cmc
inc
jg
mov
icebp
fcomi
cmp
pop
jmp
jbe
shrl
cli
jnp
mov
xlat
in
dec
dec
sti
and
scas
stos
add
mov
mov
push
or
lds
lret
loopne
xor
stos
fwait
mov
int
cmpsl
push
loop
sbb
loopne
ret
xchg
out
mov
dec
mov
dec
aas
sub
push
outsb
cld
jecxz
loop
insl
mov
lods
test
jbe
int3
sub
jae
and
xlat
sub
dec
cmp
push
imull
fwait
aas
mov
rorl
lods
ljmp
or
mov
stos
or
pop
js
inc
pop
imul
pop
mov
inc
mov
cmpsl
sbb
xchg
sbb
cmp
or
fisubs
add
xlat
arpl
aad
fiadds
pop
adc
pop
push
pusha
dec
add
push
mov
out
aam
movsb
xchg
aas
dec
dec
sti
rcrb
cmp
faddp
loopne
out
mov
mov
push
cmp
mov
popa
scas
xor
pop
stos
sbb
jae
outsl
mov
rolb
movsl
add
xor
daa
lock
ljmp
cmp
and
aaa
daa
subl
enter
and
add
or
lret
jne
pop
aam
imul
push
pop
ret
push
jo
jle
ret
xor
and
sarb
std
xor
dec
dec
sub
and
sahf
out
dec
les
adc
loopne
hlt
inc
fcoml
rorl
jle
lock
jne
lds
xorl
xchg
adc
icebp
lcall
cmc
inc
fsts
in
push
xchg
inc
test
xchg
repnz
popf
mov
pop
sarl
xchg
leave
cs
add
pop
sub
pushf
xor
cld
mov
sub
xchg
popf
jp
loop
xlat
add
adc
mov
xchg
aaa
pop
mov
nop
shl
push
jg
jp
push
lods
sbb
pop
out
and
popl
sarl
mov
adc
imul
cmpsb
xchg
or
push
mov
in
fstl
popa
insl
inc
mov
sbb
push
sub
lds
and
mov
sub
pmulhw
bnd
cmpsl
popa
mov
pushf
sbb
pushf
mov
lods
mov
jae
daa
mov
mov
ja
cmc
add
pop
in
or
scas
mov
data16
or
in
mov
shl
stos
pop
push
cwtl
out
adc
pop
aaa
sbbb
mov
test
lahf
lods
and
sbb
fistpl
mov
andl
aas
cmp
call
arpl
pop
arpl
clc
ret
rcrb
popa
dec
out
gs
mov
mov
fisttpl
cli
repnz
movsl
cmpb
xchg
jmp
rcll
subl
into
test
and
rcll
enter
jg
sbb
rcrl
inc
call
dec
movsl
shl
pop
std
pop
sub
jnp
add
lret
test
iret
mov
test
fsubrp
xor
aas
push
push
rcll
jge
ss
mov
cmp
add
push
popf
out
adc
mov
loop
lock
sub
mov
and
or
iret
ret
adc
insb
sbb
test
push
sti
adc
test
mov
mov
jae
sbb
rcrb
test
fistpl
int3
sub
pop
iret
dec
fimull
or
pop
ljmp
push
jle
fs
mov
cwtl
jmp
adc
jnp
or
movsl
gs
mov
in
jl
jno
lahf
jecxz
sbb
xchg
popf
mov
icebp
test
pop
stos
int3
mov
push
dec
dec
pop
pop
xor
loop
adc
mov
shr
int
cwtl
cmp
and
mov
iret
fisttpl
sahf
xlat
inc
inc
xchg
push
mov
xchg
hlt
arpl
or
add
lret
bound
and
add
xchg
aad
cli
jmp
test
xlat
cmpsl
inc
or
shll
mov
xor
pop
scas
lcall
mul
shlb
mov
outsb
push
pop
lret
jo
adc
push
mov
xlat
adc
lods
adc
push
lods
in
and
push
mov
pusha
sub
leave
test
xlat
stos
test
and
test
in
jb
shrb
push
xchg
pushf
pop
sti
mov
bound
jbe
jmp
add
fsubrl
mov
btr
cmp
or
popa
cwtl
std
fs
jnp
test
hlt
in
mov
inc
and
push
mov
out
cmpsl
cli
xchg
lcall
int
es
inc
mov
cmpsb
adc
int
nop
es
jmp
imul
dec
jmp
xchg
aaa
add
les
les
ss
cwtl
fsubs
jle
loop
ljmp
dec
call
dec
xlat
pop
in
adc
jnp
js
js
adc
je
pop
negl
sub
sub
add
push
cli
xor
xchg
push
cmp
inc
sub
sbb
sahf
iret
sbb
fiadds
test
shll
negl
adc
xor
aad
nop
inc
jne
mov
adc
push
pop
push
mov
jmp
xchg
out
pop
psubsw
fstp
ss
es
lret
pop
add
pop
subl
push
stos
xor
mov
jnp
push
or
mov
in
jmp
jg
sbb
adc
or
mov
push
pusha
subl
into
or
cmp
repnz
push
jp
call
out
arpl
aam
mov
repnz
lahf
ja
ja
aad
icebp
repz
dec
jmp
loope
in
xlat
hlt
lods
cmp
pop
test
out
cltd
dec
sbb
out
mov
faddp
cwtl
push
jg
jnp
inc
pop
nop
sahf
in
inc
jg
cs
and
xchg
outsl
xor
jle
scas
dec
repnz
cld
shlb
call
faddl
mov
ss
mov
cmpsl
xchg
jne
cltd
loop
adc
push
xor
sbb
cmpsb
mov
sub
mov
adc
out
push
mov
lea
fs
xchg
adc
push
loope
out
ficoms
loopne
jo
outsb
stos
sub
pusha
push
cmpl
mov
mov
adcb
cmp
pop
test
pop
shll
in
push
push
int
dec
inc
and
sub
mov
test
inc
outsb
mov
mov
jmp
mov
push
into
dec
sub
jnp
dec
negb
in
push
xor
mov
shrb
out
daa
lods
aad
adc
xchg
out
dec
out
mov
and
aam
pop
repnz
arpl
rolb
mov
mov
jge
adc
cmc
outsb
into
shlb
int3
mov
push
jmp
fcomps
sbb
lret
lods
lea
loop
aam
and
cmp
add
adc
repz
pmulhw
fs
fsubrp
cld
mov
addr16
repz
adc
popa
clc
pusha
sub
push
subl
sub
mov
mov
adc
loope
jmp
into
orl
fistps
ud2
sub
adc
pop
and
pop
bnd
rclb
push
das
mov
or
mov
data16
mov
shll
mov
fildll
jg
or
rcll
int
inc
js
cwtl
addr16
inc
adc
push
fisubl
loop
cltd
jmp
test
inc
das
mov
dec
push
dec
mov
mov
pop
fwait
cmc
negb
aam
dec
jno
iret
sub
jmp
mov
fstpl
push
push
sub
push
lret
cmc
fdivs
pop
fidivs
or
xor
jp
xchg
push
jbe
sbb
hlt
sbb
xchg
mov
cwtl
mov
pop
xor
jno
inc
out
pop
sbb
leave
push
ret
arpl
xorl
inc
xchg
pop
adc
adc
inc
jnp
or
mov
inc
imul
fdivs
mov
daa
in
stc
out
cmp
lods
cvtps2pi
test
mov
cvtps2pi
int
aaa
mov
ss
jecxz
cmp
push
pop
inc
divb
push
adc
xchg
jle
push
inc
test
push
into
addr16
pop
xor
addr16
jb
sahf
dec
push
push
jg
xchg
jns
movb
dec
mov
mov
repz
cmc
iret
push
lods
jge
and
jle
jb
shrl
pop
in
jge
mov
ficoms
sub
sbb
test
adc
mov
out
lods
scas
pop
out
sub
fadds
movsb
fs
sbb
cmp
mov
fidivl
push
iret
mov
mov
mov
adc
sbb
stos
adc
jae
call
jo
jmp
data16
add
test
dec
test
or
orb
mov
or
xor
test
or
ret
add
xor
push
xlat
pop
rorb
fs
scas
lods
lcall
mov
shrl
xor
mov
xchg
inc
jp
xchg
push
loope
sub
jp
mul
lret
lcall
mov
xchg
sbb
cltd
fnstcw
xchg
inc
xchg
push
sbb
in
repnz
lret
sub
adc
cmpsb
jne
in
test
out
xchg
push
imul
sbb
sub
adc
lods
ja
push
dec
pop
and
fwait
int
gs
popa
fstp
pop
or
jmp
shll
xchg
add
in
mov
pop
cmp
dec
xorl
setno
jb
inc
xchg
mov
jae
pop
adc
packssdw
aas
xchg
push
sbb
daa
out
xchg
les
jecxz
fsubrl
fdivr
int
dec
mov
inc
clc
shll
and
and
nop
push
aaa
lcall
fsubrl
mov
lahf
roll
aaa
outsb
push
xchg
pop
pop
inc
lods
lods
insb
call
test
dec
push
mov
push
in
dec
jnp
sbb
xchg
fistl
mov
mov
pop
jmp
imul
sahf
inc
popf
out
lods
repnz
mull
add
faddp
mov
inc
inc
dec
outsb
add
xchg
data16
or
pop
in
pusha
cmp
pop
xchg
sub
push
mov
dec
dec
jb
jno
ret
mov
imul
scas
jae
loope
adcl
subb
xor
bound
lds
out
js
outsl
loop
xor
add
and
mov
push
and
pop
dec
sbb
loop
insl
mov
clc
pop
pop
aad
inc
out
sub
mov
mov
pop
popa
adc
sub
cli
adc
pop
ljmp
mov
daa
jge
movsl
rolb
and
scas
mov
adc
xchg
test
sub
xchg
in
jne
dec
pop
adc
xor
inc
aaa
pop
in
mov
lods
push
pop
das
jl
xchg
scas
int3
imul
sub
and
inc
lcall
xchg
add
and
xor
push
mov
pop
add
sti
inc
mov
imul
enter
inc
ss
enter
mov
xor
push
xor
not
mov
inc
mov
pusha
pop
mov
and
cmp
xchg
mov
movsb
out
adc
xor
sbb
aas
sbb
lds
pop
enter
inc
scas
sbb
pop
dec
or
pop
test
xchg
pop
jbe
sahf
sbb
mov
mov
xor
and
adc
add
mov
test
lret
push
mov
mov
push
arpl
out
jle
inc
cmp
rolb
adc
arpl
data16
sbb
loop
fisttpll
ja
cmp
pop
inc
sbbb
ds
mov
add
sbb
or
sbb
iret
inc
mov
xor
loopne
dec
jmp
inc
nop
mov
jp
into
jecxz
mov
jns
mov
shlb
mov
sub
xchg
and
or
jo
or
outsl
sti
cmp
mov
mov
xabort
adc
repnz
addr16
es
push
mov
mov
mov
mov
cmpsl
aad
repz
or
sbb
adc
inc
stc
insl
dec
dec
out
pop
repz
test
arpl
jo
repz
scas
inc
mov
sahf
orb
addl
xchg
dec
sarl
cwtl
xchg
sub
lock
and
jle
pop
and
xor
leave
mov
mov
subb
xchg
clc
hlt
negb
popf
mov
aad
mov
sub
fwait
or
push
int3
xchg
in
dec
mov
iret
aaa
pop
lock
stos
mov
inc
push
push
mov
mov
add
jnp
jmp
pop
push
inc
or
and
adc
fstpt
fs
cmp
into
into
fidivl
aad
outsb
loope
mov
sbb
mov
out
mov
add
shl
inc
sbb
je
das
push
jbe
leave
lcall
test
scas
pop
add
lea
fnstenv
divl
ds
mov
mov
sti
mov
dec
push
or
call
adc
mov
or
nop
xor
test
push
mov
fcoml
sahf
icebp
xor
mov
test
jmp
arpl
jo
mov
mov
inc
jne
repnz
sub
call
idiv
inc
xor
inc
sub
enter
sub
js
pop
enter
sub
shr
mov
int
mov
adc
xor
xchg
push
push
shlb
pusha
insl
mov
outsl
lock
push
xor
js
push
pop
add
gs
push
adc
lock
out
jmp
call
lcall
push
and
add
cmp
xchg
out
sahf
dec
cmp
mov
and
rcll
jecxz
cmc
sbb
pushf
push
sbb
mov
sub
out
in
or
mov
fcoml
sub
dec
mov
pop
fwait
shrb
mov
pop
pop
dec
sbb
sub
mov
and
jl
ret
aas
inc
in
add
mov
mov
and
or
jb
add
inc
lret
mov
jns
cld
sahf
lods
ljmp
stos
cs
jecxz
test
pop
testl
je
mov
inc
icebp
push
sub
int3
mov
fcomi
inc
call
push
pusha
xor
push
sub
mov
popf
out
cli
fists
cld
jg
pop
dec
and
add
jnp
add
leave
daa
nop
jl
andb
jno
jp
and
hlt
fwait
add
xor
sub
pop
cltd
xchg
push
xorl
adc
ret
pop
adc
push
jg
mov
cld
imul
xchg
mov
cmp
jb
xorl
add
push
pop
xchg
push
inc
mov
lds
mov
pop
and
mov
adc
sbb
scas
adc
loope
push
mov
lds
scas
bound
sbb
mov
sub
pop
out
jge
jnp
lds
lock
cmp
cmp
nop
negb
jg
dec
clc
cld
int
pop
pop
adcb
fwait
fs
rclb
add
push
sarl
cmp
daa
arpl
imul
mov
in
scas
call
out
test
lods
adc
repnz
sbb
mov
and
movsl
cmpsl
cmp
push
sub
sbb
in
xor
or
fimull
je
cmc
aas
scas
pushf
push
addr16
pop
dec
arpl
push
sahf
gs
je
loopne
inc
mov
xchg
dec
sbb
xor
outsb
out
mov
enter
test
sub
rcl
mov
loope
mov
dec
xchg
sbb
leave
mov
xchg
dec
sub
dec
movsb
or
inc
adc
xor
mov
gs
jno
jnp
adc
sbb
sbb
pop
pop
xchg
adc
push
fnstcw
pop
lcall
testl
nop
inc
mov
stc
pcmpgtw
adc
aam
mov
aam
ret
scas
xor
inc
xor
and
repnz
or
clc
push
mov
loop
xor
pop
mov
shl
fmuls
xor
aad
loope
stc
xor
push
fimull
lea
popf
jp
sub
call
mov
outsl
push
pop
std
and
pushf
mov
xchg
cmp
int
mov
in
outsb
mov
imul
shll
outsl
add
stc
jns
shrb
adc
insb
mov
dec
lret
insl
aaa
mov
stc
in
xlat
cld
mov
fisttps
in
lret
out
loope
gs
push
dec
stc
adc
jge
dec
fisttpll
sbb
test
aaa
addr16
jp
xor
jno
shlb
dec
int
mov
stc
dec
xlat
clc
pop
ret
lea
xchg
xor
mov
push
adc
insb
sub
dec
clc
cltd
leave
and
data16
sti
jns
fcmovu
jg
decb
in
loopne
and
add
out
push
in
mov
arpl
or
inc
inc
rolb
xchg
test
mov
xor
mov
xchg
ret
rclb
inc
loope
mov
mov
iret
xor
into
and
pusha
insb
or
add
loop
fsubrl
lahf
popf
xchg
mov
dec
fidivs
shl
sbb
push
adc
les
jmp
mov
movsb
jbe
test
sbb
xchg
scas
cmp
inc
pop
js
nop
or
sbb
push
mov
and
and
mov
mov
incl
push
test
fcompl
push
or
inc
inc
or
xor
mov
mov
and
cmc
pop
push
mov
xchg
cwtl
add
jns
xor
daa
mov
and
enter
inc
dec
testl
mov
and
sarb
mov
dec
cltd
lcall
push
dec
xchg
aad
jbe
xchg
xor
ret
pushf
jne
push
insl
pop
or
cmpb
test
lods
gs
pop
stos
jno
call
push
cli
outsb
pop
pop
mov
sbb
pop
negl
das
shll
push
jg
adcl
mov
jecxz
mov
sbb
outsl
dec
repnz
mov
sub
push
sbb
popa
or
mov
xor
imul
inc
mov
iret
push
fistpl
aam
outsl
cmp
dec
pop
add
add
ja
mov
dec
xor
lds
mov
pop
scas
lahf
inc
frstor
leave
or
and
dec
negb
sbb
mov
dec
pop
leave
loop
adc
popf
icebp
std
xchg
sub
aaa
sbb
fmuls
sub
repz
ror
adc
in
inc
js
int3
aam
add
jae
cwtl
mov
in
dec
jne
mov
mov
aas
xchg
das
ret
add
mov
jns
js
mov
xchg
mov
mov
fistpl
mov
icebp
sub
cmp
push
mov
shll
sahf
movsl
movsb
shl
arpl
push
insb
inc
fnstcw
bound
mov
push
cld
xchg
xor
mov
xchg
add
rcrl
xchg
lret
fwait
out
jae
inc
or
sbb
jbe
sbb
or
adc
fmul
addl
js
mov
aaa
pop
call
xor
orb
stos
push
data16
fdivl
fcompl
sbb
leave
pushf
xor
int3
adc
popa
adc
dec
ljmp
sub
lds
dec
adc
pop
addr16
dec
and
add
and
sub
push
push
mov
adc
std
insb
sbb
sbb
xchg
es
adc
icebp
inc
pop
ret
dec
mov
mov
xchg
sbb
clc
mov
fwait
in
in
outsl
mov
pushf
stos
push
inc
add
xchg
arpl
xor
dec
gs
leave
adc
popf
shll
push
nop
fidivl
movsl
push
mov
cmp
xor
popa
pop
cli
les
xor
in
addb
lahf
in
cld
cmc
ds
ljmp
inc
fnsave
inc
cmp
mov
jnp
popf
hlt
pop
and
dec
cli
mov
xchg
sahf
pop
int
xchg
inc
mov
cltd
or
mov
push
sub
out
adc
or
loop
cmpsb
adc
adc
sbb
cld
in
cmpsb
mov
les
mov
jns
repz
insb
pop
cwtl
sbb
push
stc
mov
inc
in
sahf
push
add
bound
cs
sbb
jno
pop
jle
aad
sbb
dec
sti
ljmp
xchg
jp
sbb
repnz
xlat
cmp
pop
int3
xor
push
add
cmc
pop
jae
int
cs
add
push
sbb
inc
dec
popf
jno
inc
outsb
call
xchg
xchg
cmp
lock
rol
mov
pop
inc
dec
inc
ret
mov
adc
in
cmp
add
push
pop
sub
orb
adc
pushf
popf
movsl
mov
scas
sbb
scas
cmp
jne
xor
mov
shl
scas
xor
or
dec
jmp
dec
jmp
mov
push
sbb
hlt
pop
mov
adc
int
iret
mov
pusha
fldl
jnp
jnp
sbb
enter
lcall
nop
repz
icebp
out
and
not
xchg
incl
loop
popl
roll
or
inc
test
xchg
xor
js
aas
pop
popf
mov
js
and
lret
insb
pushf
mov
imul
sbb
mov
fdivrl
dec
hlt
stc
mov
clc
xor
icebp
ffree
stc
cmp
pushf
cmp
fwait
call
lret
jl
inc
cmp
adc
stos
addr16
fidivrs
pop
loope
sbb
or
xor
xchg
int
cltd
stos
test
cmc
fwait
sbb
cmp
enter
imul
int
cmp
mov
insb
daa
mov
lcall
das
mull
out
inc
outsl
insb
cmc
cmp
bound
jbe
jno
jns
xorl
inc
lods
mov
movsb
ret
loope
out
jne
loopne
js
hlt
daa
stos
xchg
and
jecxz
xor
push
sbb
out
orb
mov
sbb
pop
and
pop
negb
out
hlt
loop
aas
sarb
jmp
fnsave
xlat
pop
ljmp
jae
push
daa
jl
mov
adc
pop
les
push
pop
movsb
xchg
sahf
inc
inc
repz
push
aaa
inc
bound
and
test
cmp
sub
pop
es
dec
cmp
imul
mov
cmp
clc
adc
test
insl
push
xchg
mov
icebp
adc
neg
jbe
clc
and
fnstenv
loope
shl
cmp
fmull
aam
fmull
pop
push
xchg
mov
inc
or
int
data16
subl
fidivrs
push
push
mov
loop
sub
testl
movsb
cmp
add
or
daa
in
addr16
push
adc
pop
push
stos
cmp
shrl
cld
call
mov
aas
insb
cld
inc
pop
and
mov
cmp
psubusb
and
cmpsl
mov
or
jl
mov
xchg
in
jnp
push
xor
mov
inc
mov
arpl
loop
xor
or
and
gs
jmp
getsec
xorl
stos
fcoml
adc
or
repz
int
dec
push
add
xchg
xchg
sbb
sub
pushf
fildll
dec
jne
ja
jle
adcb
mov
cmp
jno
sub
push
xchg
push
outsl
dec
lahf
xor
jp
test
in
nop
pusha
in
dec
dec
dec
fwait
sub
sahf
add
push
cwtl
or
xchg
aad
inc
test
dec
cmp
in
mov
push
clc
jge
pop
adc
popf
xor
dec
lods
mov
int
shlb
and
sub
jg
jne
mov
or
mov
push
xchg
and
hlt
inc
or
leave
leave
dec
frstor
adc
mov
cmp
in
in
scas
mov
push
nop
sahf
fwait
or
into
jmp
pop
stc
cld
outsl
jbe
push
jns
lret
dec
sbb
mov
dec
aaa
xchg
adc
ljmp
pop
test
sbb
jb
mov
gs
adc
jecxz
xchg
pop
arpl
cltd
data16
lods
mov
add
cwtl
std
es
rcll
mov
mov
cmp
bound
ljmp
mov
sub
in
and
popa
pop
std
sub
add
popf
mov
out
push
movsb
dec
cmp
mov
sbb
enter
js
nop
xchg
stc
repz
jl
cltd
add
inc
add
pop
pop
push
mov
aam
lock
adc
mov
into
scas
adc
leave
aad
outsb
add
or
mov
push
lret
mov
imul
lret
mov
fwait
jb
pusha
and
jne
insb
dec
lock
and
and
mov
int
push
sarl
lods
xchg
mov
mov
mov
mov
out
or
inc
pop
jno
cmp
mov
or
mov
lret
fildl
stc
sbb
adc
push
cmp
rorl
gs
testl
sub
incb
cmp
and
sub
pop
pop
or
nop
test
in
sbb
fs
push
ret
mov
aaa
or
fbld
loope
nop
xchg
xorb
addl
jmp
scas
cmp
adc
imulb
insl
xchg
pusha
dec
ljmp
inc
icebp
sbb
mov
in
test
push
imul
int
fistpl
xchg
int3
pop
push
pop
push
shlb
test
out
fistl
jns
fwait
dec
cltd
testb
lcall
lds
push
bound
xchg
les
cmc
loopne
inc
lock
addr16
xchg
or
cmc
or
or
pop
rorb
push
push
push
xchg
pop
dec
and
or
dec
cmp
mov
lock
push
fwait
bound
jmp
xor
sahf
pushf
jno
add
dec
gs
sbb
dec
push
in
lods
xchg
push
outsb
dec
pop
es
mov
scas
test
jnp
aaa
movsb
pop
pushf
sbbb
xchg
out
decl
lock
adc
xchg
pop
pop
out
test
xchg
pop
push
fwait
lds
dec
bound
orb
add
popa
cmp
mov
js
and
adc
xchg
push
cld
out
and
xchg
mov
add
ljmp
int3
cmp
cmp
xchg
jmp
out
call
xchg
icebp
jg
dec
fs
xchg
ds
xor
addr16
gs
dec
push
movsb
jg
mov
sahf
fldl
cs
mov
mov
lock
adc
pushf
outsl
xor
stos
jbe
gs
imul
xchg
pop
setg
pop
call
test
sub
jge
rcl
xchg
lret
cmp
repz
imul
sub
sbb
scas
pop
pop
fs
sub
xchg
loop
icebp
push
and
arpl
xchg
cmpsb
cltd
sub
cld
rcl
hlt
or
push
xchg
popf
out
js
push
test
xchg
js
std
adc
xorb
stos
add
ljmp
mov
daa
ja
mov
mov
mov
rcrl
and
daa
in
adc
sub
pop
mov
push
mov
inc
push
fsubl
addr16
mov
mov
jbe
andb
scas
bound
and
mov
fistps
fstps
or
mov
jg
loopne
push
cmp
fcoml
pop
sub
dec
pop
imul
lret
out
dec
andb
push
pop
ja
arpl
cmp
pop
adc
pop
clc
push
ljmp
aam
outsb
popa
lods
int3
mov
xchg
out
add
dec
scas
outsl
xor
data16
pusha
je
xor
jns
push
imul
mov
and
jo
xor
push
push
iret
sti
das
or
outsb
cmp
and
jp
dec
mov
or
mov
sub
jmp
sbb
push
inc
cmpsb
xchg
test
pusha
out
xchg
jno
sub
adc
or
xor
test
cld
inc
ljmp
fnstenv
test
popf
jle
mov
pop
xchg
cld
sbb
xor
das
lret
or
xchg
sbb
cmp
je
test
sub
push
xchg
cmp
pop
mov
sarb
in
jbe
lods
cmp
lock
cmpb
outsl
pop
pop
and
sahf
adc
and
mov
es
sub
das
imul
sbb
pop
jnp
ret
gs
pop
daa
or
cwtl
pop
pop
push
or
lods
cmpsl
jnp
icebp
or
inc
pop
push
pop
lret
mov
paddusw
fdivs
enter
pop
and
fidivrs
mov
sub
cmpsl
adcb
in
mov
adc
dec
xlat
jnp
mov
lahf
jge
std
out
adc
xchg
mov
mov
lock
adc
andl
xor
rolb
or
or
movsl
repnz
inc
into
insl
cld
fimull
shll
mov
out
jp
int
cs
lods
push
insl
push
hlt
cli
xlat
jecxz
les
jmp
test
cli
xchg
sub
cmp
insb
sti
dec
dec
shll
jp
orl
daa
cmp
cwtl
pusha
inc
and
jb
mov
mov
daa
insb
es
ja
xor
xor
sub
xor
repnz
adcl
cmp
jl
xor
ds
sbb
sbb
mov
cmp
mov
inc
jno
enter
push
mov
xchg
push
sub
push
mov
mov
in
sub
lods
pop
mov
adc
sahf
cltd
pop
jnp
lea
push
and
xchg
jne
cs
pop
sub
lret
js
mov
lods
or
cmp
mov
lret
push
add
data16
mov
mov
sar
push
mov
sbb
bound
pop
push
lret
cltd
or
test
push
mov
not
ja
enter
fsubrs
imul
pop
lods
fs
mov
je
jnp
adc
das
movsb
pushf
mov
lcall
or
adc
loop
xor
subb
shrb
loopne
testl
adc
aad
cmpsl
fwait
inc
insb
scas
sub
mov
dec
scas
xchg
mov
in
or
or
mov
lahf
dec
insb
mull
and
or
mov
mov
mov
lcall
and
clc
cmp
xchg
lret
into
imul
pop
inc
jne
and
mov
adc
push
xor
sub
adc
in
insb
aas
sbb
stos
sub
inc
jge
cli
jno
push
jge
je
lds
fcmovnbe
or
dec
pop
test
inc
into
xchg
inc
inc
orb
jle
je
js
arpl
in
xchg
sub
and
xchg
outsl
in
idivb
mov
mov
xchg
hlt
mov
ds
stc
inc
dec
add
or
lock
repnz
add
and
testl
jne
mov
or
pop
xchg
mov
test
dec
out
cmp
es
mov
les
out
pop
push
sub
push
stc
sbb
add
push
ljmp
sbb
dec
and
and
mov
hlt
add
jne
xor
jo
idivb
insb
ja
insb
paddsb
jle
pushf
lock
icebp
push
lock
add
push
mov
insl
cld
push
cs
repz
push
andl
into
push
mov
and
jne
xor
cmp
inc
push
jl
orl
mov
xchg
fildl
les
jne
lods
mov
push
adc
and
sbb
pop
rorb
lcall
std
ret
mov
mov
xchg
fiadds
push
xchg
mov
ljmp
sub
xchg
sbb
scas
mov
xchg
mov
fisttpll
test
sbb
and
mov
ficompl
es
mov
aam
jge
aam
push
hlt
xchg
js
dec
mov
pop
adc
aas
clc
sub
loop
or
xchg
and
inc
shll
pop
fldenv
stc
sub
xchg
add
mov
scas
or
jns
pop
cmp
out
jl
test
js
fwait
cmpsb
jnp
xchg
sar
lret
jecxz
int
push
push
imul
cld
xor
push
jbe
lret
lods
cmp
loope
and
cltd
ret
das
cmp
test
dec
dec
mov
dec
lods
mov
imul
mov
ja
mov
ds
int3
int3
in
in
cmp
mov
in
stc
dec
adc
xchg
mov
aas
fstps
sub
lret
stos
lock
or
icebp
adc
jg
lcall
cltd
test
ds
sbb
sub
repnz
xor
mov
push
rolb
out
jb
cmc
icebp
ret
jne
sarb
xchg
out
and
mov
in
xlat
xor
xlat
sahf
inc
pop
pop
push
je
xor
int3
idiv
in
inc
add
fcoml
enter
js
testb
daa
adc
sbb
arpl
cmp
popl
out
mov
dec
xchg
scas
pop
pop
sub
ret
call
aas
jge
xchg
fwait
pop
xchg
or
dec
mov
mov
mov
cmp
jne
nop
test
incb
loopne
xchg
jne
insb
popa
into
inc
fsubrs
and
push
adc
cmpsl
push
xlat
rcll
fldcw
add
popf
or
push
inc
shll
dec
push
add
loop
push
inc
shrl
rcll
pop
insb
shll
pop
cltd
fidivl
incl
or
cmp
mov
sbb
mov
push
daa
xor
cld
jnp
mov
dec
insl
fisttpll
jle
imul
xchg
je
bound
lods
cmp
and
push
pushf
jo
mov
addr16
and
addl
mov
aas
jecxz
pusha
mov
subb
loopne
int3
xlat
bound
in
test
or
out
sub
fwait
cmp
data16
aam
lcall
stos
nop
jp
lea
lods
cmp
sub
xor
out
movsb
xchg
popf
enter
sahf
sub
jge
mov
xor
loope
bound
adc
xlat
shrl
aas
adc
cli
imul
mov
jle
aaa
push
rcll
jecxz
mov
sbb
gs
mov
xor
insl
mov
sub
je
bound
lods
andl
dec
lea
inc
popa
or
adc
loop
cli
xor
push
sub
pop
lods
mov
add
in
adc
pop
mov
cmp
test
hlt
clc
rcrb
xlat
sub
mov
mov
mov
or
repz
ss
mov
push
jg
or
cmp
addr16
pop
mov
mov
test
push
fists
or
and
inc
mov
jl
jle
rclb
add
adc
sub
xor
dec
sub
mov
clc
xchg
arpl
cld
fadd
rolb
scas
clc
lods
push
pop
test
mov
fucomi
sub
xchg
in
clc
sbb
inc
adc
inc
xchg
cmc
sahf
pop
xor
inc
aad
frstor
add
adcb
xor
inc
or
loopne,pt
ljmp
ret
sbb
test
fisubrs
lods
dec
das
rorl
dec
push
jg
pop
push
xor
shll
dec
lods
imul
aam
or
lock
aam
cs
mov
ja
xchg
enter
in
mov
js
pop
push
sbb
addr16
pop
xor
or
cs
add
xlat
popa
cmp
dec
jnp
or
pop
and
in
xchg
xor
bound
pop
xor
lcall
and
pop
lahf
insb
addl
fisubrs
sti
mov
mov
jo
mov
imul
aam
clc
dec
repnz
fstpt
fildll
and
cli
loopne
xor
dec
leave
push
push
dec
inc
aam
das
leave
cmp
dec
mov
cmp
inc
orb
je
mov
jg
scas
in
xor
mov
js
pop
pop
push
fwait
popa
jp
aaa
or
jnp
dec
popa
fists
jl
mov
xchg
cmc
push
and
sbb
repnz
fs
imul
mov
int3
stos
push
sbb
fwait
xchg
lods
insl
or
and
xchg
add
cld
movsl
jo
lods
in
adc
mov
adc
out
pop
mov
fiadds
and
pop
or
sbb
sahf
mov
dec
aaa
ss
mov
pop
lods
sbb
lahf
pop
dec
pop
jnp
sub
jmp
xchg
xor
sbb
cmp
fcmovbe
inc
mov
inc
aas
pop
xor
insb
scas
cld
in
mov
pop
xlat
mov
cld
mov
in
nop
or
and
xchg
push
and
aaa
inc
mov
cwtl
sbb
orb
jge
add
pop
mov
adc
insb
lock
outsb
xchg
popf
lahf
push
or
push
pushf
in
jbe
cmc
test
add
xor
xchg
dec
sahf
pop
je
std
cmp
inc
add
popf
je
loope
pop
mov
inc
xchg
jmp
daa
pshufw
out
outsb
add
inc
dec
sbb
cs
arpl
pop
sbb
scas
jmp
xlat
gs
xlat
rolb
pop
test
js
push
fs
ds
cltd
mov
into
sti
nop
xor
push
aam
shrl
adcb
or
xchg
fsubrl
ficompl
pop
scas
and
sub
lods
das
aas
cmc
xor
adc
shll
jo
mov
mov
xor
mov
ficoml
push
jg
cmc
cmp
stc
sub
popf
aad
shr
mov
dec
mov
hlt
mov
adc
sbb
imul
pop
data16
filds
inc
ja
addr16
aas
add
pop
fldcw
dec
jecxz
push
dec
pop
or
out
imul
add
mov
data16
ja
mov
push
mov
shlb
fdivs
xor
pusha
xor
and
or
xor
gs
xlat
lret
mov
xchg
adc
cmp
cmp
lods
push
inc
int
inc
shll
test
push
push
jns
mov
add
inc
pusha
fidivrl
loopne
jno
call
mov
icebp
adc
out
mov
sbb
sbb
mov
aas
lods
scas
bound
mov
dec
or
shlb
pop
aaa
fucomp
arpl
mov
in
sarl
dec
fnsave
xchg
or
negb
movsb
inc
push
add
xchg
jne
or
xchg
aas
aam
or
jne
arpl
loopne
pop
ljmp
xor
popa
fistpl
loop
cmpsb
push
dec
leave
inc
jl
xchg
lcall
push
mov
xchg
cmpb
mov
xor
movsl
outsl
lea
cld
pop
inc
push
sbb
dec
fisubrs
or
add
nop
pop
test
pusha
pop
xor
es
test
imul
test
mov
jnp
or
mov
xor
nop
in
scas
xchg
mov
lock
aad
sti
mov
push
mov
or
cmp
xor
pusha
pop
dec
or
push
jne
add
scas
sbb
sub
aaa
stos
dec
push
aas
lahf
loop
lahf
ja
jns
lods
cltd
data16
and
cmp
aam
ffree
cmp
push
and
repz
cmpsl
mov
xchg
xchg
cli
ret
dec
call
sub
xchg
fs
popa
int
pop
pop
mov
push
pop
add
in
movsb
cmp
insl
ss
mov
nop
or
xchg
pusha
cwtl
xchg
clc
clc
dec
pop
cmp
jmp
mov
mov
pushf
xabort
iret
inc
push
cwtl
addr16
xchg
or
mov
and
sahf
stos
out
xor
sbb
test
add
iret
insl
jnp
mov
push
sbb
pushf
ror
inc
fsubrl
add
add
pusha
repz
divb
dec
inc
cmpb
mov
popf
shll
xchg
dec
add
mov
scas
sbb
xchg
pop
xor
outsl
sahf
add
aam
inc
sahf
movsl
xor
mov
ffreep
lds
pop
test
int
repz
movb
push
push
mov
stos
lret
std
inc
xor
and
test
pushf
addr16
inc
aad
jno
in
or
inc
sbb
int3
add
test
bound
bound
test
or
pop
fisttps
fcoml
jle
adcb
outsb
push
cltd
fcomps
aas
mov
cmpsb
add
sub
sub
pusha
mov
adc
push
enter
dec
pop
mov
inc
pusha
mov
mov
mov
fisubl
stos
xor
sub
add
cmp
xor
movsl
std
addr16
xchg
inc
scas
out
mov
dec
sbb
push
jge
jg
sahf
pop
sbb
sbb
dec
mov
mov
cmpsb
call
inc
mov
adc
fidivl
je
call
sbb
incl
idivb
rorb
shr
loop
or
sarl
mov
sbb
push
push
xor
jecxz
out
fiadds
shlb
movl
add
cmp
fcmovu
aad
cmpsb
std
adc
int3
popf
in
outsb
insb
dec
stos
rclb
mov
xchg
cmp
push
add
in
cmp
mov
push
pop
ret
mov
mov
inc
xor
fistps
cmpsb
enter
mov
inc
jns
cli
dec
or
popf
mov
aam
hlt
inc
lea
cmp
add
fldenv
movsl
or
les
ss
int3
xchg
andb
stc
dec
lret
cmp
int
fwait
pusha
pop
mov
cmp
sbb
es
ja
dec
mov
inc
mov
addl
ja
mov
test
ss
hlt
stos
inc
mov
pushf
lret
orb
sub
imul
shll
sub
hlt
dec
aaa
mov
bswap
jle
push
and
cmp
adc
push
iret
arpl
add
cmp
rorb
pop
ret
and
fdiv
insb
xlat
jb
lds
fdivrp
adc
adc
sahf
int
aaa
xchg
lock
mov
bound
pop
cmpsl
xchg
xchg
subl
out
les
push
lahf
loopne
sbbb
inc
pop
or
lahf
mov
clc
andb
stos
lds
pop
gs
cli
or
sbb
sub
lahf
push
stc
pop
iret
xchg
int3
imul
dec
es
test
push
cmpb
sub
dec
test
pop
fs
dec
lcall
lock
ficompl
push
add
mov
jg
push
mov
outsb
push
lds
andb
inc
popf
and
push
lea
jo
push
jl
daa
or
movsl
leave
cmp
cwtl
add
inc
in
lds
push
cmc
cmp
inc
lcall
xchg
cmp
test
cmc
xchg
out
mov
mov
inc
fucom
sub
cmp
lret
mulb
pusha
ljmp
dec
nop
push
inc
andl
sti
and
lods
out
mov
dec
bound
pop
imul
cmpsl
lret
cmc
dec
cli
dec
aas
nop
xchg
xchg
iret
incl
lods
cmp
outsl
inc
jb
cmp
test
and
jle
iret
das
icebp
test
mov
jo
subb
lods
insb
xor
jmp
bt
sub
clc
mov
fsts
mov
in
push
sbbb
mov
dec
pop
xor
dec
adc
sbb
out
xchg
push
xor
ljmp
nop
pop
mov
jns
cmpsl
mov
cmp
je
lcall
and
or
xchg
cmp
shlb
and
movsl
insl
push
testb
push
lret
pop
data16
adc
xor
mov
inc
sub
fcmovnu
inc
xor
push
dec
cli
out
stos
dec
in
cld
add
mov
mov
test
aad
or
mov
xchg
cmpsl
sub
imul
add
into
in
movsb
insl
adc
dec
dec
mov
bound
xor
outsl
dec
push
enter
inc
mov
mov
aaa
xor
mov
sub
and
sub
mov
pop
data16
ret
xor
xchg
stos
jecxz
sbb
adc
ret
loop,pt
or
add
mov
mov
push
add
repz
jae
out
sbbb
adcl
sbb
mov
pop
pop
dec
push
jbe
mov
test
aam
jl
push
jg
mov
xchg
repz
lret
sbb
adc
popf
mulb
in
push
xchg
pop
aaa
mov
jae
xchg
es
test
lahf
xchg
fdiv
dec
insb
inc
pop
sbb
xor
cli
xor
in
fcoms
xor
cmovge
dec
add
jae
aaa
in
rclb
out
mov
dec
loope
popl
adcb
pop
mulb
stos
xchg
sbb
cld
add
aas
xor
xchg
lds
inc
sub
imul
loopne
das
pusha
lret
xor
inc
dec
jns
mov
jmp
lahf
loope
sub
push
and
std
cmp
and
jo
fsubl
mov
cpuid
or
add
cmp
mov
rolb
repz
clc
mov
xchg
or
rcrb
push
lahf
aaa
popf
inc
mov
aas
jo
mov
push
or
notb
jb
fstps
ljmp
add
dec
int
and
mov
sahf
dec
movsb
int
pop
es
adc
in
mov
sub
dec
push
cli
cwtl
jecxz
xchg
and
add
imul
fnstcw
gs
ret
in
mov
adc
adc
enter
pushf
fs
jp
or
dec
adcl
jle
pushf
push
outsb
cmpsl
cmp
cli
fisttpll
and
add
hlt
or
cmp
in
jle
aaa
mov
and
jbe
roll
fwait
sbb
inc
lcall
lods
outsb
cltd
inc
sbb
mov
sub
xlat
pop
lock
shlb
cmpl
xor
mov
mov
mov
mov
or
outsb
icebp
xchg
mov
push
jno
dec
and
push
addr16
inc
xchg
jb
and
xchg
xchg
push
sbb
iret
push
cmpsb
in
push
jo
mov
jne
insl
and
outsb
cmp
sarb
flds
push
sbbb
jbe
in
xchg
push
ret
jge
push
pop
jmp
sbb
leave
insl
pusha
cmpsl
inc
jns
adc
jno
sbb
jl
scas
int
out
jp
dec
pop
jne
xchg
nop
ficomps
xor
call
mov
mov
adc
push
mov
sbb
imulb
aaa
mov
popl
push
sbb
push
inc
push
in
add
jno
imul
mov
or
adc
outsb
push
cmpsl
aaa
push
push
cmc
iret
and
arpl
mov
jbe
lods
jb
fwait
jle
push
testl
out
jb
jno
movsb
sbb
push
push
js
add
mov
cld
mov
mov
mov
movsb
cli
fsubl
insb
cmp
add
cmc
add
pop
mov
xchg
push
je
pusha
cmp
lahf
sbb
dec
movl
aam
adc
and
mull
jns
fldln2
mov
outsl
push
outsl
divps
popa
lock
es
xchg
das
push
mov
stos
lock
push
test
cwtl
test
inc
xor
adc
or
jge
jns
pop
lret
mov
jecxz
roll
stos
mov
ljmp
xchg
icebp
das
jno
xchg
or
mov
rorb
les
ljmp
cltd
ja
pop
xchg
subb
and
loopne
push
shll
sub
sbb
rcrb
jl
cmp
xor
add
inc
and
cmpsl
xchg
arpl
fldl
hlt
es
notb
and
push
xchg
adc
bound
push
pop
xchg
repz
lcall
mov
sub
aad
add
or
mov
jecxz
pop
cmp
xchg
push
add
ret
inc
jge
adc
fldl
scas
insb
movsb
cmpsb
dec
js
sahf
xor
sbb
je
ret
enter
xorl
mov
loope
lods
jg
bound
leave
cmp
js
fistpll
or
subb
popl
mov
in
push
test
push
scas
and
pop
ret
mov
mov
push
rcll
adcb
mov
push
int3
mov
xchg
and
and
fmulp
add
dec
and
ds
fadd
pushf
mov
jmp
ret
pop
jg
and
lcall
adc
leave
xor
mov
filds
xrelease
mull
adc
xchg
loope
int3
add
sti
push
sahf
pop
cmp
pop
mov
push
xchg
xor
jg
xor
sbbl
pop
and
jecxz
inc
push
push
dec
out
add
scas
stos
mov
sbb
mov
jno
sbb
push
xor
jmp
push
int3
adcb
and
rol
pop
mov
stos
xchg
xchg
mov
out
sbb
fidivrs
mov
inc
push
jns
sarl
jnp
sbb
jge
push
add
pop
daa
pop
test
pop
push
sub
add
dec
int3
gs
repnz
dec
inc
in
jns
lds
dec
jge
jb
mov
rorb
inc
pop
pop
loop
mov
sbb
mov
sbb
aad
scas
push
or
out
pop
bound
cmp
mov
insl
mov
push
xor
or
and
sub
sbb
pop
mov
and
adc
inc
add
xorb
icebp
jbe
xlat
sbb
jnp
in
or
lea
stos
fsubl
stc
in
shl
scas
pop
mov
pop
stos
fisttpll
test
repz
push
cmp
or
sbb
mov
sbb
or
inc
es
fucomi
lods
add
jecxz
lahf
popa
mov
xor
inc
add
divb
xor
imul
movsl
sahf
mov
adc
xor
push
mov
add
daa
lds
pop
sbb
sbb
sbb
test
insl
bsr
jae
mov
fldenv
popf
adc
and
ss
and
out
das
dec
arpl
push
shr
mov
push
xchg
stc
xchg
pusha
pop
mov
pop
mov
push
pushf
inc
mov
dec
cs
mov
scas
scas
lds
mov
sahf
add
cmpl
xchg
mov
test
cltd
es
andl
add
das
mov
nop
pop
adc
cmp
test
addr16
push
adc
cwtl
sbb
jle
pop
jno
leave
dec
sarb
pop
cmpsb
jbe
mov
xchg
in
scas
into
jp
ja
adc
lea
cmpsl
leave
push
jle
lea
movd
cli
xchg
repz
xchg
mov
mov
mov
jns
push
aas
mov
mov
sub
adc
add
jmp
cmp
fwait
std
sarb
sub
push
jae
stos
orl
in
mov
scas
mov
dec
mov
pop
cwtl
orl
shrb
aad
jecxz
enter
pop
mov
fcompl
jbe
push
ret
mov
pop
hlt
test
xor
jbe
mov
int3
xlat
mov
and
fists
cmp
mov
arpl
dec
repnz
shrl
into
lcall
fmul
and
jge
vmovd
and
pusha
adc
adcb
lcall
sbb
xor
cmpsb
mov
jmp
inc
subl
outsb
clc
mov
fwait
pop
or
fidivl
mov
lods
call
and
add
push
clc
fs
ret
push
int
push
ljmp
sbb
fcmovnbe
movsl
addl
icebp
movsb
mov
xchg
test
lahf
or
aas
and
adc
push
dec
lret
hlt
xor
fstps
pop
andb
jmp
sbb
negl
mov
sbb
jb
cmp
and
stos
in
jnp
xchg
mov
loope
into
pop
add
js
dec
adc
stos
jg
aaa
out
inc
repnz
fldenv
in
negl
or
push
mov
inc
ret
inc
int3
mov
rcrl
push
sub
lock
xchg
push
outsb
adc
or
push
mov
fistps
jmp
mov
inc
push
push
jg
rol
xchg
mov
cli
imul
lea
cltd
ja
mov
ret
sub
sub
mov
cmp
aaa
in
push
push
pop
mull
les
outsl
and
fcmovnbe
nop
jmp
out
push
imull
test
aad
xchg
and
jo
popf
jmp
push
aas
cmp
sbb
data16
sbb
xchg
pop
int3
sbb
sbb
dec
in
fiadds
mov
std
add
inc
ror
cvtpi2ps
xchg
addl
mov
inc
lcall
pushf
mov
fisubrl
pop
pop
loope
icebp
xor
popf
and
cmp
dec
push
and
mov
fisttps
push
sub
ret
mov
jnp
inc
mov
dec
orb
sbb
add
mov
pop
leave
iret
inc
insl
push
das
dec
test
shl
push
cmp
add
inc
dec
and
in
pop
mov
mov
sbb
cmpsb
mov
lret
insb
push
or
pop
adc
push
push
lcall
and
stos
divl
cmp
nop
cs
jne
inc
sub
mov
movsl
push
movsl
mov
out
loope
mov
fbstp
orl
stos
push
xchg
or
cmp
negl
push
xbegin
adc
cmpsb
mov
or
jg
fimuls
out
addr16
ss
xor
cmp
stos
cmpsb
cltd
fisubrs
push
mov
cmp
ror
cmp
insb
addr16
xchg
bound
xor
mov
push
mov
out
imull
bound
movsl
lock
mov
push
jge
stc
leave
add
add
insb
fcomps
cwtl
cmp
and
mov
dec
repz
mov
imul
lock
pop
imul
xor
mov
scas
inc
dec
sbb
add
jg
repz
adc
jno
subb
out
and
cmp
cmp
jge
into
insw
inc
dec
ret
outsb
push
repz
fld
sti
jle
stos
mov
int
and
iret
fwait
rorl
pop
sarl
mov
jbe
or
push
inc
loop
les
mov
fisubl
inc
mov
dec
dec
pop
pop
mov
pop
jbe,pt
out
or
mov
adc
sbb
mov
es
es
movsb
insb
or
fsub
fisttps
mov
cld
mov
mov
ret
cwtl
adc
cmpsl
arpl
jl
add
cmp
dec
and
mov
or
xchg
in
xchg
xchg
jp
mov
inc
mov
pushf
scas
gs
mov
loop
xchg
mov
dec
aaa
xor
pop
pcmpgtd
icebp
jg
add
lret
fwait
cmpsb
sbb
clc
pop
into
cs
xchg
push
enter
push
icebp
cmp
int
loopne
or
lahf
lds
js
jns
push
out
jmp
out
mov
ljmp
stos
sub
pop
cmp
je
hlt
add
cltd
xor
repz
pop
out
sub
and
jmpw
adc
loope
imul
jl
lea
roll
out
inc
scas
and
inc
stos
and
and
pop
push
mov
xchg
lcall
je
lcall
xor
das
ss
test
insl
cmpsb
xor
adc
lock
add
push
ret
bound
push
xchg
jbe
pop
sbb
movb
mov
insb
sub
insl
inc
and
mov
pop
lret
and
lahf
lock
or
sbb
jne
icebp
cmpsb
sub
in
mov
cmp
mov
xor
ja
cmp
push
addl
jecxz
push
lcall
in
adc
push
nop
xchg
popf
inc
xor
outsb
test
adc
out
jecxz
in
and
imul
push
movl
pop
sub
ja
or
jae
imul
mov
inc
hlt
es
in
dec
gs
cmp
pop
int3
ret
adc
je
jge
fidivrl
jecxz
out
lds
xchg
shrl
js
jns
add
imul
idiv
ds
sbb
fildll
push
jno
lret
sbb
sub
and
cmpsb
adc
out
mov
imul
int
pop
push
cld
dec
repz
stos
mov
ljmp
jge
fistpll
ret
aam
into
ljmp
inc
aad
cmp
pop
lods
cmp
or
xchg
jp
inc
mov
cmp
xchg
xor
fdecstp
filds
xor
iret
mov
jg
imul
sub
inc
iret
stos
xor
movsb
fimull
flds
push
or
stc
cli
xor
lret
repnz
xchg
sbb
xor
ret
outsl
sub
in
xor
out
lea
push
pop
shrl
je
or
push
sbb
ljmp
mov
push
fisttps
dec
jno
scas
mov
inc
adc
les
jmp
in
xchg
add
xor
push
jecxz
lock
test
sub
cltd
test
sub
mov
repz
incl
xchg
xchg
dec
jp
es
repnz
cmc
stos
push
in
push
fcompl
jbe
sub
pop
ljmp
faddl
xor
cmp
test
nop
je
adc
xorl
ds
cs
cltd
xchg
fisubrl
cmpsb
dec
imul
and
notl
mov
sbb
cli
xchg
aas
lea
inc
popa
pop
mov
fcoms
rcr
mov
icebp
in
adc
roll
mov
out
mov
repz
mov
scas
test
flds
sbb
push
mov
xchg
lods
loop
sub
pushf
mov
int3
add
inc
inc
add
cmp
xor
fwait
pop
xor
mov
add
xor
push
jle
add
shr
jle
and
jnp
or
jle
xchg
xchg
mov
mov
mov
or
pushf
mov
cmpsl
rolb
ror
sbb
pop
and
cmova
pop
out
sti
mov
mov
adc
mov
push
mul
push
lret
frstor
scas
fld
insb
sub
aad
mov
shlb
testl
add
and
call
cmp
add
ficoms
arpl
pop
outsl
jmp
loop
jl
in
gs
or
dec
mov
out
xchg
pop
scas
xor
jg
inc
jp
cmp
jge
xchg
or
icebp
sahf
cmp
mov
outsb
or
cld
in
xlat
lock
enter
jb
xchg
notb
pop
adc
in
roll
mov
jno
push
or
mov
jecxz
sub
arpl
pop
cmp
mov
sub
mov
inc
test
loopne
jle
movsl
add
xor
or
cmp
shll
sub
aaa
shl
mov
cli
jne
add
cmp
jecxz
adc
pop
test
aas
aad
xchg
adc
aam
sti
jo
andl
cmp
in
and
cmp
pop
inc
sarl
test
int
add
or
popa
adc
mov
lock
mov
out
mov
cltd
ja
mov
sbb
test
ret
push
gs
int3
jp
push
adc
cmpsl
inc
arpl
popa
into
xor
or
dec
rclb
cmp
aad
lret
cmp
adc
repnz
cltd
xchg
sti
fiaddl
roll
orl
shlb
imul
and
stos
sbb
popa
cmc
ds
sbb
in
shlb
mov
outsl
mov
xchg
repz
mov
ss
ret
es
and
shl
sbb
and
shl
int
and
xchg
ds
lret
in
aaa
shrb
movsl
mov
mov
cmp
push
sub
pushf
je
cmp
cltd
sub
test
ljmp
into
repz
pop
pop
fcoml
aam
andl
jg
sbb
mov
mov
jle
lods
loop
xor
lea
mov
cmp
xchg
addr16
pop
aaa
and
jmp
jo
push
roll
or
pop
leave
add
push
and
add
mov
dec
cmp
xor
jno
xor
jmp
nop
add
sub
mov
icebp
addr16
and
push
sub
pop
cmp
mov
sbb
mov
mov
divb
mov
xor
shlb
push
mov
leave
push
int
xor
inc
pop
mov
add
test
jns
fistl
test
nop
mov
aaa
pop
jp
flds
fmuls
lcall
loop
add
push
jo
jbe
and
push
inc
inc
mov
insb
imul
inc
fadd
sbb
in
push
ds
and
add
inc
xchg
xor
movsl
add
xor
inc
xchg
js
xchg
dec
test
mov
pusha
subb
push
add
xchg
or
addr16
dec
arpl
dec
push
pushf
sbb
lret
cli
mov
filds
jbe
jns
ja
divl
adcl
lods
mov
in
call
pop
push
mov
neg
int
out
ds
lock
cmp
cmp
pop
in
iret
int
mov
mov
out
push
lods
outsb
jg
or
jecxz
jp
fdivrs
xchg
fwait
aas
push
das
outsb
add
cli
int
leave
mov
test
sbb
pop
lods
popa
aam
mov
data16
sub
dec
aam
fsubs
push
in
cmp
scas
sti
lret
pop
mov
into
pop
std
pop
int
xchg
mov
es
movsb
in
loope
js
inc
mov
xor
jo
push
mov
daa
or
push
repz
jl
xor
dec
dec
hlt
fwait
shlb
mov
mov
fbstp
movsb
mov
adc
es
aad
sbb
ds
xlat
jnp
clc
js
mov
push
adc
loop
lcall
mov
cmp
pop
adc
mov
stos
ret
imul
out
in
je
push
nop
daa
imul
mov
or
loope
and
mov
out
inc
data16
lds
loop
cltd
and
pop
fucomp
out
and
xchg
cmpsb
aad
les
ret
sub
xor
rclb
add
mov
dec
mov
add
loopne
scas
xor
inc
add
fwait
push
add
xor
inc
mov
mov
mov
scas
xchg
movsb
pop
mov
mov
pop
push
hlt
push
xchg
xor
push
xchg
mov
add
out
xchg
push
inc
push
xchg
mov
add
movsl
fadd
repz
jbe
scas
arpl
lods
les
xchg
mov
imull
sbb
fnstsw
jno
dec
insl
pushf
fcompl
pop
pop
and
bnd
call
inc
inc
movsb
push
sahf
push
fmulp
stos
pop
add
filds
adc
repz
sub
int3
push
mov
add
sub
pushf
lret
add
stos
cmp
les
adcl
fs
xchg
bnd
inc
jmp
inc
cmpsl
test
sbb
sbb
popa
aad
jnp
incb
mov
call
outsb
into
in
push
out
fisubrl
inc
int
mov
mov
dec
mov
pushf
mov
shrl
mov
arpl
out
test
repnz
dec
jb
inc
xorl
jmp
idivb
out
sbb
test
js
hlt
push
int
jne
iret
cmp
jno
push
cmc
sti
aas
push
incb
gs
lcall
cld
or
mov
test
ds
pop
test
cli
push
jns
aad
add
frstor
imul
lahf
dec
jae
inc
cmp
in
dec
push
dec
enter
ja
push
add
xchg
sbb
inc
push
jae,pn
jnp
or
hlt
xchg
divb
jmp
xchg
and
mov
and
push
xchg
js
movsb
pusha
cmp
pop
mov
ss
pop
lret
xchg
std
adc
lcall
ja
pop
or
cmp
pop
or
adc
imul
into
out
mov
push
test
inc
je
and
in
loope
or
mov
sub
out
divl
jg
jo
pop
les
mov
add
lret
xlat
divl
loop
cmp
xor
cld
lcall
xor
mov
xchg
loope
inc
je
int3
cmp
mov
xchg
fs
push
sub
xchg
push
faddl
push
push
mov
in
sbbl
xchg
loope
mov
popf
or
add
mov
and
xchg
cld
jp
or
sub
fldenv
pop
lret
adc
pop
xorb
lcall
mov
xchg
sbbl
out
test
mov
or
nop
jno
jb
add
or
dec
push
jge
dec
movsl
enter
cmc
dec
xchg
inc
xor
dec
int
inc
mull
in
inc
sub
dec
lret
cmp
mov
ficoms
and
or
sti
pop
xor
out
jmp
dec
sub
jnp
add
repnz
and
xlat
lea
je
insl
mov
lcall
jg
xor
mov
pop
add
jno
mov
ret
jns
mov
movsb
xchg
int
xlat
insb
inc
adc
js
adc
call
mov
aad
pushf
sbbl
insl
jne
mul
xchg
lret
and
icebp
add
incb
sub
sbb
stos
push
push
jnp
arpl
jbe
mov
adc
and
clc
sarl
inc
push
data16
cmp
pop
aam
cmp
outsb
or
sbb
rol
outsl
lds
in
pop
pop
cmc
nop
mov
cwtl
push
lcall
mov
in
loope
lret
add
mov
xlat
rorl
in
test
mov
jp
in
insb
lods
dec
cmpsb
xchg
imul
mov
push
cmp
in
inc
add
mov
pop
lock
rclb
cli
inc
sbb
or
mov
cmp
jae
cmp
lods
and
cmp
lret
jbe
icebp
mov
add
cmp
cmc
cmc
inc
sub
pop
in
lods
adc
adc
xchg
sbb
mov
cltd
mov
fs
pop
mov
cli
rorl
or
pop
loope
mov
xor
cltd
inc
fdivrs
dec
outsl
dec
mov
adc
movsb
mov
int
call
sti
cmpsb
mov
pop
sbb
mov
and
addr16
push
mov
mov
push
mov
in
test
rcrl
xchg
je
je
dec
loop
jae
jnp
lret
daa
sbb
fs
fisttpl
xchg
sbb
xchg
ret
pop
aaa
iret
fnstsw
dec
daa
xchg
pop
add
std
repz
jmp
lock
mov
insl
stos
aam
es
out
xchg
xchg
mov
test
clc
or
xor
xchg
mov
push
ljmp
dec
out
xchg
pop
adc
mov
scas
ss
aam
imul
test
add
imul
pop
xchg
mov
dec
test
mov
les
and
sbb
push
pop
add
sub
and
test
xchg
sub
incl
xchg
add
mov
mov
sub
ffreep
jnp
mov
test
das
pop
sbb
lea
adc
repnz
into
mov
imul
jbe
dec
aam
out
movsl
pushf
mov
sahf
push
fimuls
clc
fnstcw
jb
dec
iret
fmuls
ficoms
inc
jnp
jle
push
xor
xor
dec
inc
inc
push
cmp
inc
sbb
in
call
pop
lock
adc
ds
xchg
pop
sbb
add
arpl
popf
nop
push
mov
cmp
xorl
test
dec
push
loopne
iret
sub
add
and
fwait
xchg
sbb
push
into
out
jns
lret
pusha
sti
jbe
andl
and
ds
imul
pop
pop
sbb
adc
mov
es
cmp
sbb
pop
inc
cs
cmpsl
subb
inc
push
cmp
insl
jns,pn
shll
into
repz
jae
ficompl
adc
fbld
push
and
fcmovnb
out
test
orb
mov
or
sti
inc
fcompl
and
nop
mov
mov
arpl
jmp
loope
stos
pop
pop
out
test
push
jg
inc
notb
push
adc
sbb
int3
sbb
imul
mov
shll
movsb
stos
lcall
aas
fisubrs
psubq
cmp
sti
pop
stos
in
push
inc
cmp
sub
cmpsb
mov
dec
out
cltd
sar
sbb
in
xchg
xchg
cli
adc
fildl
daa
sub
test
and
adc
ds
fs
cmp
sub
incl
sub
mov
clc
lock
stos
xchg
call
repnz
mov
cmp
in
or
fcompl
and
push
adc
aas
mov
add
push
xor
lcall
jmp
mov
roll
imul
shll
notl
sti
jb
xchg
mov
cmp
loope
push
sub
mov
ljmp
pop
les
mov
xchg
es
ret
icebp
push
push
in
mov
adc
rorl
sarb
data16
dec
addb
arpl
andl
fwait
pop
mov
lcall
jns
xor
pusha
addr16
mov
into
lods
icebp
hlt
and
enter
not
sub
xchg
sbb
popf
inc
outsl
mov
dec
and
mov
dec
dec
push
mov
xor
roll
stos
das
push
repz
sub
rorb
mov
out
stos
aam
cltd
lock
lahf
outsb
mov
jle
jnp
mov
out
cmp
pop
popa
sbb
lods
ljmp
mov
inc
jbe
or
cmp
inc
nop
xor
adc
push
aad
mov
das
mov
adc
stos
mov
out
pop
movsb
and
outsl
sti
or
mov
dec
mov
adc
add
jecxz
icebp
daa
hlt
test
mulb
mov
push
dec
adc
es
popa
js
shl
xor
and
es
hlt
lcall
inc
add
xor
mov
les
push
out
mov
cmp
lea
mov
xor
jmp
jecxz
fidivs
mov
mov
adc
subl
iret
sbb
mov
push
jb
outsb
push
inc
ljmp
insl
jl
lock
mov
lds
sub
inc
or
or
loop
sbb
fadds
fwait
mov
inc
imul
stos
lea
sbb
pop
cmpl
xor
repnz
int
mov
sub
mov
lods
and
test
or
in
shll
jp
adc
jecxz
lret
pop
inc
stos
clc
loop
sbb
and
and
cltd
ret
jno
mov
lea
xchg
add
dec
cli
sub
xor
inc
add
or
outsb
std
fxch
fstpl
add
xor
cwtl
mov
mov
call
cmp
cmp
mov
popa
dec
icebp
fcompl
add
xor
push
movsb
imul
or
adc
mov
xlat
dec
sub
cltd
into
cltd
aam
sbb
adc
or
test
jae
cmp
shrl
int3
enter
movsb
mov
pusha
push
jnp
hlt
adc
mov
ret
mov
mov
and
lods
mov
sbb
dec
les
jle
fldenv
stc
dec
lcall
outsb
adc
rep
repz
jne
std
mov
and
jge
jae
mov
movntq
ficoml
clc
xchg
inc
mov
jl
inc
jge
jns
jle
fsts
xchg
lods
jnp
je
and
jecxz
out
mov
clc
mov
repz
inc
sub
dec
lods
iret
mov
mov
sbb
in
add
push
icebp
fnstenv
lahf
mov
rorl
pop
cld
mov
dec
insl
mov
mov
mov
push
sub
out
call
sbb
aas
pop
inc
push
mov
out
pop
add
add
ret
scas
es
inc
push
cltd
aaa
mov
xchg
jo
lahf
lret
sahf
loope
mov
vxorps
mov
and
jnp
cbtw
jmp
mov
xchg
xor
gs
decb
or
je
push
sar
out
outsb
mov
test
mov
addr16
mov
incb
sbb
test
enter
test
or
int3
rclb
ffreep
sbb
jl
mov
xchg
mov
mov
insb
aas
pop
or
and
shr
sub
xchg
pop
xchg
mov
and
adc
fwait
and
add
shll
loopne
lret
push
aad
inc
push
out
mov
jne
add
inc
lods
and
pop
ljmp
and
and
fdivrl
pop
ficompl
fstps
jp
cmp
outsl
pop
xchg
jmp
gs
addr16
xchg
push
push
and
sub
in
or
mov
inc
aaa
lea
cld
mov
jo
clc
gs
imul
pop
inc
sub
dec
cmc
xchg
dec
jbe
sbbb
sub
pusha
mov
push
xor
xchg
std
push
fwait
mov
and
movsl
test
xor
push
cwtl
test
call
ret
sub
push
push
sub
xchg
aad
sbbl
lcall
mov
int
adc
xor
into
ss
dec
mov
test
pop
rcl
mov
push
xlat
adc
enter
sub
pop
mulb
out
cli
or
or
lock
fildl
mov
sub
lds
pop
sbb
or
neg
inc
or
jnp
push
and
xchg
aam
movsb
std
cmp
imul
adc
outsb
in
jne
das
out
dec
cmpsl
pop
inc
ljmp
insl
js
push
adcl
rcrl
call
pop
jg
xchg
sub
sub
xlat
out
push
in
rcr
and
ljmp
sub
mov
mov
arpl
and
outsl
fs
xchg
mov
stos
loop
loope
push
mov
jg
cmp
xor
mov
lods
inc
mov
stos
fcmovu
fsts
aad
cmpl
dec
sahf
aad
xchg
fsubr
dec
dec
faddl
and
xacquire
mov
adc
in
mov
pop
adc
test
out
xor
mov
mov
iret
fs
inc
ds
enter
in
and
push
mov
xor
ljmp
xchg
mov
dec
jb
jnp
sbb
ss
xor
mov
jmp
or
je
arpl
add
cmc
int
add
mov
sbb
or
pop
sti
xchg
adc
mov
fmuls
scas
fisttps
out
outsb
leave
aam
pop
pop
stos
movsl
mov
vsqrtss
sub
test
movsl
cmp
scas
dec
lret
inc
xchg
adc
xchg
hlt
frstor
addb
cmp
inc
gs
adc
lcall
inc
lret
cmp
and
int
stc
arpl
mov
sahf
hlt
es
or
insl
addr16
adc
les
out
scas
repz
mov
jmp
sti
ds
scas
sbbl
mov
out
iret
popf
inc
xchg
popl
push
sbbb
out
and
fcomp
mov
ffree
rcrl
cmp
or
out
scas
add
sub
dec
cld
aaa
outsb
outsl
sbb
and
and
fiaddl
adc
sub
dec
sub
das
insl
cs
pop
and
xchg
xor
es
out
clc
and
stos
add
shld
push
lea
jne
std
int
lcall
xor
or
push
pop
adc
nop
test
sbb
lret
imul
shrl
cmpsb
and
xor
sub
into
cld
push
inc
xchg
ret
fisubrs
cmp
cli
sbb
pop
in
fs
stos
ja
push
and
mov
mov
xchg
xchg
pusha
les
or
pop
std
sbb
xchg
sbb
mov
nop
daa
push
ss
sub
mov
stc
mov
dec
mov
and
sbb
data16
cmp
and
subl
inc
mov
mov
jne
mov
ss
jl
outsl
fnstcw
pop
dec
cmpsl
mov
cld
adc
sbb
xchg
icebp
jg
fdivrs
rcrb
jl
adc
push
ljmp
aam
cmp
outsb
xchg
sub
add
pop
cmp
dec
cmpsb
and
insl
cmpsb
fimull
push
fadd
clc
imul
movsb
jnp
dec
sbb
mov
xchg
add
pop
in
pop
cmp
mov
insb
pop
call
adc
mov
call
jbe
inc
or
fwait
les
mov
dec
sub
xlat
call
andb
cmc
test
lahf
int3
fmuls
outsl
inc
test
lahf
xchg
loopne
mov
xchg
inc
pop
lods
jl
sbb
cmpsb
addr16
cmpsl
cmp
push
pop
mov
ret
jns
in
dec
lods
lods
in
out
sub
pop
mov
xchg
testb
cmp
into
cmpsl
xor
and
sub
xchg
jns
ret
scas
sbb
lret
add
push
and
mov
bound
sub
jmp
mov
iret
ja
rcl
dec
std
jnp
jb
adc
dec
lock
insl
test
inc
xor
sub
inc
jg
hlt
hlt
adc
iret
sub
scas
jmp
adc
sub
gs
cs
clc
sbb
lea
xchg
dec
xor
sbb
pusha
pop
mulb
test
cmpsb
ficompl
push
sub
arpl
imul
add
add
arpl
add
xor
push
or
ss
aad
loopne
test
and
pop
xchg
pop
adc
popf
scas
jo
ret
push
stc
adcl
nop
add
mov
enter
int3
push
add
testb
fst
dec
pushf
inc
fsubrs
push
nop
cmc
out
mov
out
sbb
out
add
inc
clc
and
push
gs
bound
jecxz
cmpxchg
lcall
mov
fdivr
rcll
dec
mov
nop
sub
mov
ror
sahf
sbb
mov
movups
stc
lods
leave
out
bnd
test
cmpsb
je
mov
inc
inc
jg
sbb
cmp
jbe
mov
mov
mov
xor
mov
mov
xor
outsl
jmp
imul
pop
icebp
mov
xor
test
sbb
cld
mov
test
mov
and
cld
stos
inc
cs
push
fstps
lahf
jmp
jge
stos
mov
push
mov
jl
je
sarl
adc
and
jle
lret
xor
or
pop
into
mov
adc
mov
lods
outsb
aad
adc
push
mov
mov
movsb
and
test
cmp
jg,pt
add
push
lock
add
push
add
int3
imul
pop
leave
add
pop
cmp
cs
movsb
inc
pop
or
mov
or
sub
movsb
adc
fs
movsl
ds
nop
add
xchg
fcoml
pop
lea
lds
mov
adc
add
add
sbb
mov
pop
and
sub
aad
or
inc
jp
pop
jp
dec
inc
movsl
int
orb
lret
fmull
mov
or
pop
rcrl
lcall
insl
xlat
cmp
adc
xchg
xchg
in
imul
shlb
jge
out
pop
call
nop
mov
dec
jg
ja
jl
es
fcmovbe
mov
les
clc
mov
andb
sbb
jp
cmpsl
cmpsb
mov
in
arpl
xchg
mov
cmpsb
jne
stos
js
adc
xchg
sbb
xor
pop
adc
sub
mov
clc
lods
out
mov
dec
movups
xchg
rolb
mov
insl
sub
lcall
mov
inc
push
les
push
xor
xchg
daa
lea
dec
sbb
sub
xchg
mov
mov
lods
ret
nop
pop
dec
inc
andl
bound
xor
mov
pusha
inc
xchg
addl
js
icebp
lea
dec
into
mov
mov
pop
jbe
mov
xor
xchg
add
iret
adc
xor
pop
enter
xlat
jge
cli
xchg
inc
inc
dec
movsl
mov
sahf
dec
cmp
scas
sahf
xchg
adc
clc
cmp
xor
xchg
push
cmpsb
push
outsb
dec
jg,pn
in
cmp
pusha
push
pusha
pop
pop
pop
adc
js
sub
jp
ljmp
or
adc
lods
fldcw
cmp
pop
dec
pop
dec
mov
push
jb
lock
and
adc
roll
jo
cmp
pop
add
and
mov
data16
mov
push
jmp
xor
mov
inc
sbb
shlb
adc
out
stc
mov
pop
xchg
inc
in
pop
pop
insl
mov
mov
sbb
addb
add
sbb
lcall
jecxz
stc
xchg
xchg
enter
pop
push
orl
sub
das
push
in
int3
inc
fisubrl
decb
fs
sub
lea
jl
lret
popa
xlat
mov
jbe
inc
sub
and
les
dec
mov
rcll
jae
jl
adc
pop
cld
adc
insl
imul
add
shlb
sbb
imul
xor
xchg
jns
daa
arpl
lods
aam
pop
xor
scas
xor
aas
pop
mov
pop
jns
add
outsb
dec
out
testb
mov
sahf
cli
fnstsw
aas
dec
adc
aad
mov
mov
or
xchg
imul
fstp
popf
push
adc
cs
xor
test
je
pop
add
push
inc
cmpl
popa
mov
mov
outsl
sub
nop
xchg
popw
roll
mov
xchg
pop
loopne
andl
loop
sbb
sahf
in
ds
fdivs
jge
popf
sbbb
int3
sbb
cwtl
fstpt
imul
push
loop
push
addb
mov
sub
lock
xor
cmpsb
push
stc
xchg
fsubrl
aas
pushf
cli
cld
jne
fwait
mov
lds
dec
mov
cmp
inc
pop
add
mov
test
dec
or
jmp
jmp
xchg
sbb
lcall
sub
add
repz
loope
sbb
shl
std
pop
mov
cli
jecxz
dec
sbb
inc
and
push
push
fadds
clc
push
adc
push
clc
mov
stc
loope
mov
sti
add
loopne
inc
and
imul
je
negl
cmp
or
loope
mov
cwtl
in
mov
add
add
xchg
inc
test
cltd
aam
pusha
and
inc
add
dec
das
out
lods
call
pop
mull
lods
sbbl
fisubrl
arpl
jmp
cltd
mov
jae
mov
adc
lret
cmp
rclb
enter
mov
or
xor
push
jmp
inc
lahf
sbb
mov
mov
aaa
iret
ljmp
cmp
movsb
jmp
jle
push
cmpsl
inc
xor
add
mov
jl
mov
sti
fmull
sbb
mov
in
jecxz
push
jp
adc
xor
outsl
test
aad
push
jnp
sbb
into
in
stos
sbb
movq
mov
loope
sahf
je
and
add
push
mov
sub
aaa
stos
mov
xor
das
outsb
ss
jg
iret
and
add
jle
add
into
mov
xchg
aam
mov
xor
outsl
sub
test
push
mov
pop
inc
jmp
stc
rcll
mov
ds
ret
push
add
xchg
jae
js
push
mov
out
rcr
xor
pushl
adc
rorl
lods
inc
dec
xor
cmpsb
mov
lods
or
xor
jge
or
jno
cld
cmp
or
enter
mov
sbb
fs
xchg
sbb
fldt
test
hlt
ljmp
repz
jns
addr16
cmpsb
mov
fs
testb
sub
cli
in
sub
cmp
js
push
push
roll
addr16
cmp
jae
and
je
mov
or
jns
js
pop
inc
lds
imul
stos
and
sbb
inc
mov
lock
call
andb
pop
shll
mov
mov
add
lret
inc
popf
rolb
sahf
pop
cmp
pop
xchg
fnstenv
sbb
mov
lock
lock
aas
inc
cmp
add
pop
mov
push
cmp
mov
pushf
ret
inc
xchg
pop
jp
adc
mov
xor
sub
popa
jne
dec
sti
insb
inc
pop
roll
mov
mov
fsubs
inc
push
pop
push
ret
cmp
fsubr
sti
add
in
mov
jl
or
shr
cmp
ret
popf
addr16
daa
cmpsb
lods
adc
xchg
inc
inc
cmp
jmp
sub
push
adc
xlat
pop
int3
mov
nop
or
push
mov
jbe
dec
pop
lcall
outsb
sub
sbb
sbb
sub
jbe
xchg
or
aad
lea
sub
xor
loope
fs
sahf
dec
stos
mov
lods
push
jge
shlb
mov
lret
call
aad
cmp
repz
test
lcall
xor
add
sarb
loop
and
push
fistpll
fcmovnbe
int
jmp
lods
mov
or
je
sbb
push
sub
push
push
inc
or
pop
insb
pop
jno
adc
hlt
mov
xchg
sub
cmp
leave
jle
loopne
push
inc
inc
push
mov
sub
xchg
pop
aad
add
add
ret
inc
fwait
pop
inc
inc
sub
cltd
sub
adc
jns
outsb
xor
jb
cmp
in
inc
push
mov
mov
icebp
out
rcll
nop
dec
sti
sbb
je
or
jecxz
call
or
jl
mov
out
xor
scas
pop
stos
mov
jmp
enter
in
lds
xchg
pushf
adc
out
hlt
push
dec
mov
lea
mov
push
adc
pushf
jmp
or
incb
imul
inc
ja
xchg
xchg
in
cmpsl
adc
xchg
jnp
or
dec
loopne
xchg
adc
dec
jne
pop
dec
add
aam
stos
jle
leave
or
loop
and
aam
nop
add
push
push
pop
mov
add
lods
loopne
xchg
movsb
and
dec
mov
adc
fs
pop
add
sbb
repz
sahf
sbb
inc
push
mov
xlat
mov
lods
add
gs
stos
daa
fldt
iret
stos
and
pushf
mov
jecxz
shrb
movsl
dec
pop
xchg
mov
or
mov
push
adc
popf
pop
movsl
pop
mov
daa
inc
int
mov
ffree
mov
loope
mov
add
pop
roll
inc
push
inc
add
nop
jg
push
mov
xchg
add
xor
les
xchg
xor
xchg
mov
sbb
and
sahf
filds
xor
jne
sbb
pop
mov
dec
cmpl
imul
sub
dec
ja
inc
faddl
jno
mov
and
mov
xchg
sbb
testb
push
pop
and
mov
aad
pushl
mov
fisttps
lret
out
xorl
popf
scas
shlb
ret
gs
mov
inc
sbb
into
in
sub
stos
fninit
stc
or
add
cmp
xlat
cmc
shll
sub
mov
sbb
lods
push
push
jp
stos
xchg
mov
int3
andb
dec
ja
test
jb
push
shll
out
mov
cld
xor
dec
cs
ret
add
xchg
sbb
mov
or
cmpsl
mov
mov
outsl
js
cmp
insl
sbb
dec
repz
fildl
ret
cmp
rorl
mov
test
add
pop
pop
sub
ret
je
lds
jae
imulb
ja,pt
pop
cld
jne
jl
cmpsb
nop
sub
sti
andl
cs
pop
jle
in
je
mov
mov
int
insb
lret
ret
dec
jp
sub
outsl
out
pop
cli
in
push
fs
popa
xchg
jae
mov
out
adc
es
mov
cmp
inc
dec
pop
mov
ds
cmpb
jl
clc
push
cmpsw
push
mov
scas
popa
orb
in
repz
fwait
mov
or
pop
ds
dec
testl
sub
push
loopne
fsts
rcr
inc
rcr
lock
cmc
out
pop
cltd
das
out
jae
push
jnp
jo
lahf
ret
xchg
fsts
leave
syscall
outsb
mov
pop
outsl
add
call
test
adc
bound
mov
lds
mov
cmp
cltd
pop
enter
xorb
scas
add
inc
dec
pop
jno
xchg
jae
mov
sti
popa
add
fimull
cmpsl
mov
gs
insl
in
xchg
insb
adc
mov
stos
jmp
jae
decl
pushf
sarl
or
jb
adc
sub
and
test
pop
push
sub
pushf
ljmp
jne
sub
insl
dec
adc
std
adc
mov
icebp
flds
mov
xor
pop
shlb
push
out
insl
jnp
stos
xor
sarl
cmp
dec
scas
call
mov
xchg
xchg
inc
sbb
clc
out
sbbb
mov
pushf
rclb
daa
jecxz
inc
jns
jne
iret
mov
cmp
sbbl
adc
adc
test
adc
sbb
addr16
add
or
mov
jns
shll
cwtl
pop
dec
mov
mov
call
pop
or
push
jg
mov
mov
call
jmp
aaa
sub
mov
pop
sub
test
mov
popf
jmp
out
push
loop
cld
shll
push
jbe
mov
add
les
jb
or
divb
loopne
push
jg
cmc
enter
arpl
jo
or
cld
or
int
cmp
popa
aas
inc
repz
ret
jge
and
mov
xchg
lods
out
cli
xchg
sbb
movsl
rcll
sti
push
xchg
ret
and
mov
ja
sub
jg
lods
pusha
push
push
loop
outsl
call
mov
fcmovnu
dec
aaa
jb
gs
or
out
cmp
and
fs
fwait
pop
jnp
jo
push
test
mov
shl
addl
enter
in
adc
fbstp
movsb
and
mov
add
xor
pop
fs
out
movl
inc
add
xchg
fisttpl
lock
cmc
pop
out
test
into
push
cmpsl
fmuls
lods
xor
mov
lcall
add
adc
and
imul
leave
push
lods
cmp
and
fisttpl
mov
sub
and
fidivrl
ror
push
mov
mov
data16
fsts
pop
adc
and
mov
aam
cwtl
xchg
nop
lret
out
adc
xor
in
inc
push
in
aas
jnp
cmpsl
mov
arpl
lret
xor
mov
leave
aad
jmp
add
add
sbb
jb
push
mov
jb
xchg
das
dec
je
pop
pop
push
fcomps
ret
mov
sub
ljmp
mov
loop
movsl
or
mov
push
add
sbb
jmp
dec
jp
lcall
sub
pushf
push
jns
inc
hlt
enter
pop
or
push
out
jg
push
rclb
pop
ss
nop
scas
push
das
jnp
or
testb
test
rcrb
xchg
daa
dec
gs
mov
sbb
xor
cmpsl
push
lds
dec
dec
cli
sbb
fidivl
arpl
and
out
mov
aaa
frstor
add
xchg
pushf
enter
mov
mov
rol
out
shll
pop
pop
xchg
andb
xchg
pushl
insl
inc
dec
dec
test
jecxz
dec
mov
andb
jnp
je
arpl
jp
sbbl
dec
repz
pop
andl
clc
enter
cmc
xor
out
addr16
hlt
sbb
mov
ret
imul
lods
sub
and
clc
lret
dec
add
out
scas
xchg
shl
inc
xchg
adc
sub
cmp
cmp
fidivs
or
push
lods
fisubs
lret
dec
adcl
cmp
adc
jo
std
cmc
hlt
inc
jl
iret
int3
jbe
inc
mov
rcll
jecxz
in
pop
les
scas
shll
xchg
in
mov
and
inc
mov
add
cmc
lcall
jle
rolb
and
dec
xor
inc
dec
cmp
fcmovnu
dec
mov
fadds
imul
xchg
or
sbb
adc
add
stos
sti
sub
mov
mov
jmp
sub
inc
add
lret
jmp
xor
jl
sahf
push
inc
xor
mov
ja
out
stos
fisttpl
pop
jns
inc
push
clc
aad
adc
aam
cli
xchg
dec
loop
pushf
lcall
pop
mov
or
xchg
or
cmp
pop
in
out
jno
repnz
fsub
dec
inc
mov
and
lahf
fscale
mov
in
popa
or
mov
mov
and
mov
dec
imul
mov
and
xchg
add
rolb
into
mov
stos
hlt
ret
out
jbe
ret
roll
adc
dec
aaa
iret
hlt
push
icebp
ja
jl
in
inc
stos
shlb
jl
bound
sub
xlat
loope
cmpb
mov
pushf
add
mov
mov
inc
idivb
dec
stos
mov
xchg
mov
mov
sti
mov
hlt
lock
pop
fisubrs
lock
aas
pop
mov
xchg
into
mov
inc
mov
dec
shll
mov
sub
loop
sbb
inc
push
adc
inc
inc
inc
cmp
push
dec
or
xor
jmp
fs
xchg
das
cmp
adc
jle
and
sbb
mov
cs
jmp
das
lahf
js
rcrb
or
sbb
fdivl
and
cwtl
jns
dec
pop
lret
sub
xchg
jo
movsb
movsb
inc
cmpsl
int
nop
aaa
mov
mov
mov
add
ja
xor
ljmp
cltd
push
xchg
fdivrl
xchg
mov
fwait
push
mov
outsl
jnp
hlt
lret
loop
xor
push
enter
mov
xchg
fsubrs
mov
dec
mov
js
cmpsb
push
or
cmp
out
leave
xor
xor
or
mov
pop
out
mov
ret
mov
jae
lcall
add
mov
into
mov
sub
dec
movsb
subl
lods
adc
stos
adc
push
sahf
scas
out
xor
scas
out
pop
or
inc
push
test
add
inc
pop
bound
or
mov
adc
gs
mov
ret
add
xor
pop
adc
mov
out
imul
icebp
push
jl
jae
and
sbb
test
xchg
add
iret
mov
jns
pop
and
stc
stc
stos
sub
push
mov
mov
in
test
push
aam
lods
push
mov
fsubr
pop
push
add
insl
mov
mov
sbb
jne
mov
lds
sbb
enter
clc
dec
stc
cmp
mov
jg
call
mov
xor
dec
lods
add
pop
mov
setae
out
aaa
push
mov
sub
mov
and
dec
jecxz
sbb
pavgw
xor
les
fwait
mov
jae
mov
sub
iret
add
dec
jno
and
dec
dec
mov
and
repnz
inc
push
push
or
movsb
sub
xor
test
dec
lea
mov
jns
jae
adc
xor
fstpt
ss
out
iret
rolb
dec
hlt
and
add
jae
out
push
mov
test
jl
jmp
testb
cltd
nop
dec
cmp
mov
cmp
xor
sbb
dec
adc
jae
enter
push
sbb
inc
xchg
movzwl
aaa
adc
je
push
sub
pushl
dec
out
dec
loope
sti
push
aaa
dec
push
sahf
imul
xor
jno
lea
jg
sti
aas
push
add
inc
test
loopne
ss
pop
stos
add
xor
cli
mov
into
push
loopne
and
mov
pop
add
or
sub
dec
xor
and
cmpsb
cwtl
xor
incl
rcrl
cmc
push
test
loope
push
pop
dec
pop
xchg
inc
movsl
fsubl
cmp
std
push
cld
mov
xchg
nop
cmp
stos
push
popa
mov
jb
loop
push
xchg
out
testl
fdivrl
jmp
sbb
cmpb
ds
mov
cs
cwtl
insl
mov
xchg
sub
mov
jo
ret
flds
pop
xor
clc
cmp
ret
cmp
gs
cmp
dec
mov
push
arpl
pop
vshufpd
mov
jnp
inc
lcall
pop
inc
and
or
daa
outsb
cmp
push
pop
movl
pop
sub
bound
or
lock
std
push
mov
xor
and
int3
xor
loope
adc
adc
fiadds
pop
inc
loopne
inc
rsm
jmp
in
jl
iret
movsl
jne
pusha
out
or
jmp
sbb
jbe
inc
stc
xor
in
popf
pop
int
sub
sbb
xchg
into
xor
pop
mov
mov
jo
cld
dec
ret
or
dec
jge
sbb
int
popf
imul
jns
ret
das
jns
inc
xchg
iret
leave
movb
aas
les
or
nop
pop
dec
scas
js
mov
call
pop
cmc
pop
repnz
adc
pop
mov
addr16
outsl
subb
mov
es
leave
loope
ss
je
xchg
push
loopne
dec
mov
inc
jge
repnz
and
subl
pop
pop
inc
mov
pop
adc
push
aaa
outsl
repnz
xor
sbb
push
jo
movsl
ret
aad
sahf
xor
sbb
jp
or
cmpb
loopne
imull
test
sbb
push
bound
push
stc
frstor
or
decl
inc
fsubs
xor
fdivp
adc
pop
xchg
cmpsb
xlat
inc
out
movsb
sarl
or
xchg
out
xor
push
sbb
inc
subl
dec
push
mov
mov
jg
and
jno
testb
push
push
mov
sahf
ret
insl
ret
and
pop
loope
insl
dec
cltd
dec
fnclex
lods
jns
ja
je
ret
xor
mov
cmp
add
push
mov
loop
mov
jae
clc
outsl
sub
jle
mov
ret
pop
push
xlat
xlat
lahf
jecxz
xchg
icebp
mov
cwtl
mov
and
push
cmpxchg8b
icebp
adc
sti
dec
das
cs
add
and
jp
mov
jle
movsb
jbe
mov
cmp
push
rorb
push
adc
mov
jge
lock
int
or
adc
mov
jmp
cmp
inc
sub
jnp
enter
and
pop
adc
jmp
xchg
pusha
sbb
sahf
dec
cmp
test
mov
cs
movsl
mov
mov
loopne
dec
movsb
inc
pop
sub
mull
lods
and
mov
xor
movsb
xchg
xchg
push
push
push
inc
push
ss
fdivr
push
imul
lds
xchg
pop
lds
lods
jl
rorb
jp
int
jo
test
insl
mov
arpl
dec
filds
and
sti
imul
cwtl
inc
dec
cmp
jbe
adc
xor
mov
mov
sub
loop
sbb
dec
lea
test
fiadds
notl
test
out
adc
cmp
jp
pusha
cmp
xor
inc
inc
lea
xor
pushl
int3
jmp
add
and
popf
mov
adcb
push
sub
xor
cmp
dec
cmp
out
xchg
jno
xchg
adc
fwait
sbb
mov
aaa
xchg
out
sbb
xlat
adc
add
addb
test
push
add
fistps
ds
loope
scas
mov
aas
inc
gs
adc
mov
cmpsl
int
xlat
xchg
pop
loope
outsl
and
movsl
cwtl
cmp
and
fcoml
sbb
or
ja
icebp
fcomi
lret
mov
faddl
ds
insb
push
adc
jns
movsl
mov
ret
jmp
loop
rcrb
jo
jns
sahf
icebp
mov
enter
ret
sbb
lcall
fwait
orl
ds
jbe
cmp
in
jb
mov
jae
xor
jp
es
or
aad
jge
mov
jl
fistpll
je
pusha
aam
mov
mov
jne
push
clc
mov
loope
movsl
sbb
sbb
fmuls
jp
incb
xor
jecxz
imul
outsb
js
xchg
roll
sti
and
lds
sub
int
fdivl
mov
xchg
push
fsubrl
rcl
cmp
ljmp
sti
inc
rorb
and
enter
add
mov
and
imul
fstpl
mov
popa
xor
aam
push
je
sbb
cli
sti
mov
lcall
test
mov
or
pop
xchg
insl
inc
xchg
pop
in
dec
scas
dec
lret
aaa
jle
add
pusha
movsl
mov
xor
jl
cmp
fistl
cmp
and
xchg
addl
rol
cmc
mov
sbb
sub
faddl
cmp
push
dec
andb
mov
sbb
loope
aam
push
jge
push
sub
sarb
call
add
inc
cmpsl
movsl
cmp
sub
mov
rcll
inc
ljmp
add
movsb
int
iret
push
gs
push
gs
inc
or
mov
or
js
lret
mov
push
adcl
movsl
push
fisttps
fiadds
or
sub
shl
cli
sub
push
mov
or
cltd
push
les
mov
ds
xor
or
push
jo
inc
cmpsl
adc
jge
add
add
daa
pop
popa
aaa
pop
sbb
fldenv
push
and
adc
out
test
testl
mov
jnp
test
adc
sbb
test
xchg
cmp
mov
ret
gs
sub
cld
or
enter
pop
out
add
sarl
insb
iret
les
lods
in
pop
punpckldq
mov
movsl
div
dec
cs
mov
xor
jecxz
push
fwait
dec
add
icebp
adc
mov
std
mov
lahf
sti
and
ror
mov
rclb
clc
test
lds
add
xor
out
inc
enter
ret
jb
aas
call
stc
dec
ss
or
jle
dec
gs
loop
pusha
jecxz
stos
es
xor
pop
lret
mov
pop
xchg
mov
cli
mov
sbb
push
es
cwtl
pop
nop
sbb
cmpsl
inc
add
push
xor
sbb
jge
inc
cmp
sub
ljmp
insl
push
sbb
int
lret
pushf
lahf
mov
ja
insb
xor
inc
ja
mov
add
add
je
outsb
ret
lock
movsl
popa
out
xor
shrb
jb
in
inc
dec
out
add
std
inc
push
cwtl
mov
adc
sub
xor
sarl
frstor
movsb
pshufw
dec
lret
shll
lahf
jp
out
mov
incb
out
lds
cwtl
mov
mov
lahf
cltd
push
or
mov
xor
enter
fisubs
push
mov
sub
sub
lock
jbe
aas
pop
push
leave
dec
sub
and
test
sti
xchg
pop
mov
sahf
xchg
push
test
dec
popl
ljmp
jae
jo
addr16
cmp
cmp
call
shll
add
dec
and
inc
pop
ret
out
es
outsb
add
xor
daa
cmp
ret
inc
je
lds
in
loopne
inc
jmp
cs
xchg
sbb
push
lock
xor
stos
scas
jle
pop
xor
inc
pop
inc
cmp
in
stos
mov
sarb
or
and
out
mov
insl
xor
dec
inc
loopne
test
pushf
out
in
popa
jmp
sub
int
pop
and
aaa
add
xchg
jne
shlb
movsb
test
inc
adc
xlat
ds
nop
loopne
sub
outsl
lea
inc
mov
scas
push
xor
cmove
adc
les
sbb
jp
jmp
roll
outsb
in
xchg
imul
mov
inc
sbb
push
lcall
ret
sbb
sub
xchg
sub
xor
mov
sub
cmp
sbbl
and
xchg
sahf
icebp
mov
fs
cmp
shll
cmp
cltd
in
inc
jle
pushf
dec
mov
ss
cmpb
popf
fildll
pop
sarl
mov
imul
test
ret
rclb
cmp
stos
sbb
js
lock
lds
insb
lret
imul
mov
in
insl
cmpsl
clc
std
jbe
xor
fisubrl
add
push
cmp
inc
cmp
cmp
jns
ss
xchg
shl
mov
jle
fnop
push
xor
inc
cltd
movsl
sbb
out
pushf
xor
bound
fistpl
add
jge
test
jae
cmp
je
push
jle
push
dec
mov
imul
fisubrl
dec
sub
stc
xor
pop
dec
mov
and
sahf
lods
pop
jbe
fiaddl
movsb
mov
push
out
jge
lods
xor
push
lods
adc
repnz
fwait
shrl
shll
mov
mov
cmpsb
xchg
sbb
out
js
pop
ljmp
adc
arpl
dec
scas
test
mov
push
fsub
inc
cmp
push
pop
xlat
mov
add
jle
stos
lcall
pop
call
inc
fcmovb
nop
movsb
sbb
sub
insl
incb
ds
push
scas
add
cmp
sbb
pop
imul
faddl
or
lahf
jge
cmp
stos
adc
call
cmp
and
fstpt
jp
xchg
jl
mov
fcom
push
adc
or
lods
or
out
pop
mov
dec
int3
mov
dec
je
iret
xor
and
push
pusha
dec
int3
push
cmp
mov
jns
lret
push
lock
shll
sub
icebp
and
leave
ret
ret
mov
out
fisttpll
push
stos
cli
inc
leave
test
popa
dec
inc
pop
sbb
jae
inc
sub
aas
sarb
pop
lods
xor
xorl
sbb
add
cmpb
mov
sahf
enter
push
cltd
cs
jg
test
mov
aad
pop
cmp
loope
stos
push
in
add
clc
mov
cltd
mov
xchg
jne
fwait
jo
push
mov
lock
or
mov
arpl
fistpl
dec
pop
mov
jmp
pushf
in
test
loope
orb
addr16
hlt
fcoms
shr
stc
jl
push
add
adc
xchg
push
pop
andl
or
inc
add
ds
aad
rorl
fcoms
inc
stc
adc
fidivrs
aad
inc
or
popf
and
sub
call
push
test
shr
jno
mov
das
imul
arpl
sbb
pop
pop
test
jno
cmp
inc
in
sbb
movsb
lods
stc
addr16
test
leave
lods
sub
out
aad
jnp
outsl
neg
aam
scas
inc
popf
mov
dec
fldl2t
jb
push
loope
outsw
cmp
xchg
xor
xlat
sub
or
and
pop
outsl
jne
loope
sbb
aaa
or
and
xor
cmp
add
stc
cwtl
mov
push
and
sti
or
push
mov
in
add
sti
es
pusha
mov
aad
xchg
dec
nop
cmp
or
xchg
push
cmp
or
xor
leave
sub
xor
xor
dec
mov
leave
xor
xor
mov
call
std
cmpsl
fwait
xlat
inc
mov
aam
iret
insl
xor
adc
adc
pop
lahf
fistps
mov
shll
jns
cmp
adc
jge
mov
dec
dec
mov
outsl
xor
mov
test
imul
cmp
out
int
lea
or
in
pop
push
and
daa
in
cli
addl
add
add
dec
jge
scas
shrb
out
mov
pop
lret
cmp
sub
mov
adcb
dec
fsubs
jnp
repz
xor
inc
imul
in
xor
adc
lea
mov
push
testl
jg
add
dec
inc
jnp
mov
popf
in
mov
and
xor
sub
divl
inc
push
add
pop
jnp
or
pusha
jnp
adcb
popa
leave
scas
adcb
push
sbb
add
insl
outsb
inc
aad
jg
aas
mov
das
lahf
sub
out
xchg
insb
icebp
in
ror
das
inc
daa
xor
mov
xor
scas
in
pop
pop
push
lret
aas
fs
and
xchg
out
mov
loope
add
mov
dec
mov
cld
and
aas
xlat
jle
stos
jecxz
mov
in
push
in
mov
fwait
lret
addr16
fsubrl
add
stos
fs
mov
je
js
mov
or
xor
dec
adc
sub
inc
sti
clc
mov
imul
jae
insb
imul
adc
ficompl
or
loopne
repz
dec
or
cmp
pushf
and
imul
mov
push
sub
push
sbb
into
and
pop
outsb
inc
outsb
movsb
ficomps
adc
cmp
orl
cmpsb
maxps
cmpsb
jle
cmp
dec
mov
jl
push
enter
gs
mov
ror
or
orl
fiaddl
cld
outsb
mov
out
aam
jl
push
cmp
lret
stos
arpl
xor
inc
repnz
subl
inc
xlat
push
mov
push
loopne
sub
movsb
inc
add
mov
ljmp
cmpsl
or
sarb
push
jb
add
and
je
jns
sbb
mov
pop
outsb
or
stos
cmp
lcall
repz
add
jmp
mov
sub
and
or
pop
mov
xchg
int
mov
and
hlt
roll
mov
nop
dec
pop
jno
and
mov
das
mov
fwait
pushf
add
in
adc
scas
cmpsb
loop
dec
or
test
dec
pop
dec
pop
mov
cmp
insl
stos
aaa
mov
fldcw
push
pop
fisttpll
call
xchg
jecxz
push
clc
pop
shll
aam
or
mov
int
pop
in
mov
add
or
rcr
xchg
adc
cli
push
add
xchg
add
sbbb
pop
pop
mov
cmp
mov
js
sub
imul
jae
iret
jp
cli
jae
sub
arpl
inc
cltd
test
scas
cmp
mov
pop
sub
fsubs
ficomps
mov
ds
mov
or
pop
xor
adc
clc
rcrl
inc
cmpb
shr
aas
sub
lahf
push
enter
loope
mov
xchg
std
inc
jnp
test
es
lods
jg
xor
mov
push
push
xchg
cmp
jns
or
inc
mov
or
jne
or
fldt
sbb
testb
in
daa
xchg
out
jmp
mov
push
into
fwait
repnz
ja
cmc
mov
imul
addr16
cmp
iret
dec
mov
int3
js
cli
push
lds
ret
jge
mov
pop
aad
mull
in
mov
dec
sbb
cltd
xchg
cmpsl
fbld
mov
and
dec
dec
lcall
push
je
jne
cmp
into
sahf
push
lahf
and
pop
out
xchg
jae
cmpsb
xor
inc
mov
xchg
pop
xchg
mov
sub
mov
idivb
test
inc
scas
and
adc
pusha
lcall
dec
daa
stc
jmp
mov
aas
xchg
std
jl
push
je
jae
popa
shl
inc
sub
out
arpl
fstl
bnd
test
daa
adc
mov
jl
add
repz
mov
xchg
adc
cmp
xchg
xchg
push
fucomip
enter
outsb
sarb
lret
mov
mov
lods
aaa
outsb
vmread
aam
cwtl
sbb
popf
es
outsl
pop
xchg
and
repnz
das
add
imul
lcall
and
mov
leave
int3
mov
je
jne
movsl
jmp
lods
and
cli
xchg
out
xor
inc
jmp
lcall
push
xchg
cmpsl
fisttps
mov
sbb
pushf
lods
sbb
mov
pop
cmc
push
ret
dec
mov
pushf
sbb
mov
ja
out
jno
cmp
ds
adc
dec
hlt
movsb
sub
jmp
inc
push
rorl
mov
and
jmp
xor
mov
fidivs
adc
or
inc
sub
cmc
stos
push
jecxz
test
fiadds
repnz
jne
int
pop
idivl
ficomps
movsb
mov
sarb
and
popf
mov
icebp
outsl
jno
jns
cmc
clc
scas
scas
stc
aaa
mov
jo
mov
in
mov
popf
jae
sbb
xchg
sbb
call
or
add
es
fwait
mov
push
mov
xor
popl
scas
lahf
jae
jge
inc
lcall
jb
imul
nop
scas
data16
rorb
ds
cmp
loop
pop
enter
pop
mov
sub
adc
cli
lock
loopne
jl
jbe
outsl
push
jl
shlb
aam
sub
jb
loope
stc
sub
xchg
inc
scas
adc
inc
mov
addr16
add
subl
bound
fiadds
or
hlt
xor
mov
cmp
sub
push
and
aas
pusha
mov
jmp
lahf
pusha
rorb
jp
es
jmp
lret
adc
int
jnp
fdivs
test
jle
or
repnz
lret
cli
mov
js
cs
hlt
scas
insb
cmpsl
inc
sbb
xchg
repz
icebp
lods
repnz
inc
jns
stos
vmaxpd
mov
mov
ljmp
in
add
xor
testb
mov
in
lock
push
fldenv
jmp
sbb
mov
adc
sub
ret
fstpl
inc
aaa
push
add
addr16
out
mov
stos
out
stc
jge
sub
sub
aaa
ret
and
xchg
ret
mov
test
adc
xchg
pop
out
addr16
out
mov
jbe
xor
lret
shll
adc
dec
or
push
das
aas
pop
push
xchg
adc
icebp
lods
inc
sbb
sbbl
xor
outsb
in
cmp
lcall
and
and
fists
inc
or
jmp
or
imul
and
push
sbb
mov
out
subl
decb
fistpl
ror
jbe
push
pop
mov
sub
xchg
jbe
pop
xor
cltd
int3
in
inc
pop
filds
cmpsl
mov
adc
jbe
je
xor
cmp
sbb
inc
adc
dec
ret
lahf
notb
jl
nop
inc
scas
lcall
movsl
pop
sub
fwait
mov
push
push
scas
mov
repz
fwait
or
out
loope
scas
xchg
dec
insb
ficompl
jg
jle
in
fldcw
and
mov
pop
mov
push
xor
add
repnz
pop
daa
mov
adc
cmp
into
jg
pusha
xor
sub
aaa
das
test
jne
fwait
pop
push
inc
xchg
cmpsb
cli
xor
cmp
inc
adc
repz
push
sub
jl
fcoms
sahf
outsl
outsl
scas
xchg
push
loop,pt
pop
rcl
fildl
xor
call
lret
or
icebp
dec
dec
std
pop
int
dec
or
int
and
mov
lods
pop
pop
inc
cmpsb
pop
mov
mov
sbbl
lods
and
jne
mov
data16
in
in
xor
cmpsl
into
cli
int3
jg
push
xchg
xor
mov
cmpsl
jno
cmp
and
nop
dec
ja
jle
test
notl
lahf
push
sbb
scas
aas
mov
jmp
cmpsb
mov
jne
or
xchg
loopne
xor
pusha
or
test
lret
sub
movsb
sub
arpl
js
xrelease
pop
divl
jb
in
inc
adc
into
nop
mov
clc
pop
iret
sbb
pop
pop
dec
popf
cld
or
inc
stos
mov
repz
push
dec
jnp
shll
int3
repz
push
or
lods
dec
flds
pusha
mov
dec
lret
scas
jo
mov
in
and
fldt
adc
sbbl
filds
fs
or
sub
repnz
xor
push
insl
hlt
mov
mov
aaa
and
fcoml
ljmp
loopne
inc
sub
mov
jmp
aad
andl
imul
icebp
pop
xor
mov
icebp
data16
dec
xor
ficomps
aad
lea
pop
ficomps
imul
repnz
gs
stos
dec
add
add
push
pop
call
cli
xchg
pop
stc
rcl
lret
fsubrl
pusha
sbb
mov
cmp
mov
cmpsl
cld
enter
xor
or
sub
push
dec
jno
data16
scas
mov
xor
jne
xor
pop
popf
aad
mov
dec
idivb
lea
int3
fldt
and
inc
into
jbe
sbb
adc
popa
inc
inc
sub
loopne
push
lock
lods
xor
fnstenv
mov
sub
push
mov
test
loop
enter
adc
cmp
add
adc
ficomps
stc
mov
xchg
sub
addb
mov
cld
in
pop
insb
mov
enter
mov
cli
pop
mov
movsl
mov
lret
cmp
sbb
or
bound
add
psubusw
mov
popa
repnz
or
pushf
fwait
cmc
test
mov
and
inc
icebp
add
loope
mov
aaa
iret
aaa
mov
pop
inc
mov
mov
cmp
pop
test
jmp
int
lds
cmp
xchg
fwait
sbb
add
mov
xor
cs
inc
bound
addr16
loopne
adcl
cli
or
arpl
inc
sti
ss
mov
mov
std
sahf
inc
stos
xor
icebp
pop
xor
lret
mov
inc
pop
adc
cs
xchg
sarl
mov
cmp
repz
mov
pushf
ss
adc
sbb
mov
cmp
cmpsl
std
movsl
push
xlat
adc
and
pop
push
xor
lea
dec
loop
cmpsb
mov
inc
lret
mov
jecxz
stos
sub
or
lods
jbe
cmpb
push
mov
nop
xchg
cwtl
pop
sbb
mov
inc
scas
out
rorl
fcom
or
iret
or
mov
push
fnsave
int
cmpsl
imul
jno
enter
mov
pop
pop
lret
dec
pop
lret
lcall
sarb
sub
fiadds
aas
dec
add
adc
push
mov
dec
xchg
cmp
cld
xor
imulb
mov
cli
lea
into
fidivs
int3
je
mov
test
loop
sar
xorb
jmp
sbb
xor
das
std
stos
jp
jno
and
je
mov
rolb
xchg
pushf
ds
push
or
cmp
pusha
or
jecxz
push
fs
repz
and
dec
mov
movsb
out
xor
lods
mov
sbb
xor
pop
hlt
lds
pop
mov
adc
imul
cmpb
mov
test
call
cltd
fdivrp
in
mov
fimull
mov
mov
jl
ret
out
mov
test
adc
loopne
mov
pop
daa
jo
mov
pop
decb
cmp
cmpsb
or
mov
push
call
sub
lcall
jb
add
lods
cmpsl
shl
mov
pop
and
loopne
adc
inc
aaa
cmc
cmp
in
cltd
jl
aaa
ss
ret
sub
mov
and
dec
out
sbb
sub
out
shr
seta
mov
cli
xchg
jae
iret
arpl
jne
imul
insl
push
lock
add
inc
dec
push
adc
mov
out
loopne
sub
std
xchg
pop
aad
pop
jno
jmp
jl
push
repnz
push
andl
mov
movsl
outsl
mov
cmpsb
xchg
push
movsb
jno
in
mov
jg
mov
cld
out
rol
jl
int3
mov
mov
and
dec
jecxz
xchg
mov
mov
cmpsl
jo
call
shrb
or
mov
cmp
cltd
push
add
cltd
pop
rol
jmp
mov
xchg
aam
into
in
dec
sbb
xor
push
ret
mov
xchg
add
nop
add
push
inc
or
int3
out
inc
mov
lea
sbb
lret
push
incl
mov
dec
jecxz
clc
stos
shrl
add
push
mov
test
add
mov
test
cmp
cwtl
or
mov
cmc
mov
push
dec
loope
jne
pop
fptan
inc
adc
test
adc
push
pop
lods
inc
mov
mov
push
punpcklbw
add
int3
dec
testb
ljmp
xchg
popa
mov
adc
lahf
and
xor
pusha
iret
fwait
jg
negb
outsb
inc
cmpl
add
jne
sbb
popa
in
inc
stos
cmc
divb
lahf
les
xchg
dec
xchg
cwtl
scas
and
cs
movsb
xchg
dec
push
add
sbb
je
jnp
pusha
cmpsl
jmp
dec
inc
cmp
jnp
add
sti
mov
xchg
fcmovbe
inc
jge
pop
sub
push
leave
pop
out
gs
push
pop
fisttpll
idivb
lret
cwtl
sbb
rclb
jl
aad
movsb
loope
sti
arpl
mov
jne
sti
scas
jge
fldenv
rcrl
xor
adc
imul
or
inc
push
nop
push
aas
and
cltd
cmp
les
pop
dec
inc
cmp
out
adc
cmc
sub
nop
inc
addr16
in
pop
mov
push
fistl
test
fcmovbe
int3
vaddss
mov
jp
mov
jmp
mov
or
mov
clc
in
cmp
xchg
aad
mov
sbbb
insb
mov
mov
lods
mov
leave
mov
dec
mov
jno
add
cmpsl
mov
and
xor
push
mov
loop
push
push
push
jb
imul
adc
lds
inc
inc
fimuls
iret
fwait
sti
addb
inc
jo
xor
into
ret
jle
push
addr16
xchg
fbstp
push
mov
or
imul
adc
test
dec
fidivs
aaa
stos
cmpsl
popf
leave
lret
pop
shlb
outsl
push
and
loop
cmpsl
xchg
or
mov
call
iret
adc
mov
xor
cmp
sub
bswap
jne
jecxz
in
shll
mov
push
inc
dec
pop
lods
adc
mov
pop
pop
lods
fisubrl
jbe
mov
pop
pop
push
jecxz
jmp
xchg
cmp
adc
ja
sbbb
adc
or
hlt
int3
push
stos
stos
pop
add
shrd
xchg
adc
std
sub
adc
jne
mov
add
fldcw
pop
jg
jno
pop
addr16
sub
xchg
and
pop
lods
imul
add
pop
or
and
or
jecxz
jmp
popa
inc
jp
ds
xorb
push
mov
rcl
or
aam
and
lock
push
jge
mov
pop
aaa
call
push
mov
test
or
scas
jno
pop
push
jl
mov
pop
sub
adc
dec
mov
ret
mov
ss
popf
fimuls
push
cld
jg
fidivs
sub
add
sbb
xchg
mov
clc
add
jle
sub
and
jge
out
stos
daa
repz
call
xchg
int3
lds
mov
add
mov
cmp
rcrb
adc
test
out
mov
mov
and
cmp
pop
pusha
and
cmp
cmpsb
add
aaa
fwait
loopne
lret
dec
pop
mov
push
xlat
or
idivb
or
mulps
rcrb
mov
mov
mov
push
mul
sbb
mov
push
sarb
nop
das
add
mov
movl
jge
sub
mov
mov
stc
dec
jo
mov
addr16
pop
jl
and
xor
cwtl
add
jnp
xor
push
js
adc
dec
push
daa
sbb
js
mov
cmpsb
aam
mov
cmp
dec
mov
add
jbe
cmc
push
jmp
idivb
mov
jl
hlt
or
insb
nop
xchg
nop
adc
fdivrl
fcmovne
sti
outsb
push
mulb
std
lret
rorb
or
inc
mov
sbb
sti
bound
jmp
dec
stos
pusha
xchg
dec
and
call
push
popa
xor
lods
loop
out
lret
imul
mov
imul
cltd
mov
je
js
imul
pop
push
aaa
jge
mov
inc
ret
out
cmp
or
cmpl
push
and
inc
jmp
imul
sbb
xchg
mov
cld
xchg
inc
xor
lods
xchg
add
cmc
mov
ja
fidivs
pop
sub
leave
repz
and
and
pusha
or
rclb
arpl
pusha
adc
test
clc
adc
add
test
daa
imul
test
push
jae
daa
mov
rclb
aas
packssdw
xor
jg
testb
push
outsb
add
lret
pop
dec
outsl
das
jns
cs
int3
cmpsb
sti
mov
lods
repz
sub
jge
mov
out
sub
xor
mov
int3
adc
scas
lea
mov
mov
mov
loopne
sub
in
in
sbb
in
out
dec
pop
inc
and
cmpsb
mov
ret
mov
mov
cmp
fistl
hlt
inc
loop
push
push
jp
mov
push
mov
add
jo
dec
sahf
push
inc
cmp
xchg
push
stc
insl
outsb
jb
sahf
arpl
pop
push
push
and
cmp
repnz
adc
push
cmpsb
dec
dec
shr
pop
pop
mov
lcall
test
insb
adc
sbb
ja
add
aad
aaa
xchg
xlat
push
mov
fwait
gs
pop
lock
ljmp
sbb
xlat
sub
ljmp
popa
out
jbe
pop
cli
pop
test
inc
ss
adc
mov
mov
insb
dec
and
push
out
js
lahf
pop
sub
cmc
ret
movsb
xor
pop
adc
jp
idivl
push
push
je
orb
pop
ljmp
jbe
gs
mov
je
xorl
movsb
mov
adc
xchg
cmpsl
pop
xchg
test
or
inc
loop
xchg
aas
mov
xchg
adc
std
stc
outsb
sub
push
out
sbb
mov
lret
sbb
and
push
adc
in
addl
pop
xchg
int
xchg
aaa
jae
lahf
mov
fst
bnd
test
mov
push
xor
adc
jle
adc
inc
fisubrl
pop
inc
lds
jno
pop
movsb
add
mov
inc
cmp
cs
mov
or
shlb
fwait
push
sub
mov
data16
inc
pop
adc
imul
fucomp
movsl
into
pop
or
or
pop
mov
lds
lods
jbe
push
or
scas
cs
jmp
mov
adc
imul
fwait
notl
shlb
dec
mov
inc
lret
and
inc
jge
mov
inc
and
push
iret
add
ds
inc
cli
rcr
hlt
add
xor
test
lods
or
sti
addr16
filds
adc
incl
mov
mov
jle
aad
cli
push
mov
repnz
lea
jbe
cmpsl
jns
jae
mov
out
repz
pop
cmp
xor
insl
jb
out
out
sub
sub
mov
cli
popf
shrb
pop
xchg
aad
adc
mov
mov
cli
outsl
cli
std
xchg
cmp
mov
adc
adc
cmp
jnp
outsl
mov
push
test
icebp
cmp
scas
sbbb
shll
xchg
movsl
and
jl
mov
cmc
mov
test
cmp
std
stc
push
loop
fsubr
xchg
mov
pop
in
dec
rorb
ficompl
cmpsb
aas
daa
mov
repz
sti
std
pop
test
jg
nop
sar
and
loopne
frstor
jle
dec
shl
and
ret
and
popa
lea
jg
aaa
jmp
sub
cmp
sbb
lcall
mov
pop
out
cmp
pop
mov
mov
imul
bound
es
dec
lock
mov
xchg
xor
inc
int3
lret
push
int3
pop
js
cmc
aad
call
cmc
xchg
lods
push
jle
sbb
rorb
xchg
and
icebp
xchg
gs
sbb
sub
or
fidivs
push
sbb
jne
addr16
ret
aas
or
dec
mov
jne
push
inc
cmove
pop
jmp
push
cltd
lahf
ja
insl
ja
cmpsl
jns
push
out
jns
mov
mov
adc
push
stc
xor
movsb
mov
sub
mov
xor
sub
cmpsl
insb
push
jmp
inc
dec
add
xlat
adc
je
jnp
aam
enter
sub
outsl
lods
inc
rclb
jecxz
sbb
cmp
and
dec
aad
cltd
pop
cltd
sbb
mov
out
adc
pop
jb
jle
fldl
adc
cli
xchg
arpl
inc
pop
ret
stc
out
in
daa
dec
cmp
mov
cmp
out
sub
outsb
bound
jl
xchg
xor
sbb
sarb
andb
enter
leave
pop
imul
gs
fdivrp
sbb
inc
and
jae
sub
movsb
fwait
lahf
mov
cmpb
mov
test
pop
lods
mov
lcall
ss
loope
ds
xchg
sbb
jge
stc
cwtl
pop
fldt
mov
dec
icebp
jmp
mov
mov
and
jbe
out
mov
repz
sub
test
fsubrl
pusha
gs
jbe
jmp
mov
bound
xor
xchg
cmp
cmp
test
fbstp
sbb
in
daa
lea
loope
jl
test
xor
jle
pop
aas
popa
sahf
and
mov
outsb
into
jg
insb
dec
jg
loopne
mov
inc
js
cmp
pop
mov
insl
xor
mov
adc
push
mov
sbb
or
sar
jns
shr
sbb
xor
xor
arpl
shlb
pop
xchg
or
dec
and
lock
imul
cmp
jp
pop
call
mov
cli
inc
cltd
xchg
inc
outsl
fwait
movsl
pop
dec
mov
popf
in
pushf
push
adc
mov
imulb
dec
stc
sub
hlt
sbb
outsl
pop
pusha
mov
mov
cs
jl
push
cld
jno
pop
xchg
mov
mov
fnsave
out
repz
inc
addr16
cmp
lea
jmp
add
in
loopne
mov
shr
mov
adc
mov
out
jae
xchg
push
stos
dec
ss
int
pushf
insb
arpl
dec
jp
arpl
int
mov
push
rorb
ret
sub
insl
loope
jle
fcmovb
hlt
ja
jno
xor
and
dec
xchg
pop
sbb
lahf
outsl
push
mov
push
div
mov
dec
lea
out
imul
loope
pop
mov
xchg
sti
push
aaa
aaa
insw
jge
cli
test
push
inc
xor
scas
test
mov
sbb
out
movsl
mov
popa
jge
ljmp
and
xor
xchg
hlt
jp
push
testb
loope
dec
pop
push
adc
mov
and
pusha
das
adc
xchg
pop
xchg
xchg
fs
mov
adc
mov
cmp
xchg
sub
test
add
popf
sbb
mov
call
insl
or
das
dec
or
xor
mov
mov
aaa
dec
cmpsl
add
mov
push
sbb
lock
mov
xchg
xchg
dec
or
repz
or
jnp
add
cmp
mov
pop
adc
xchg
mov
push
mov
jns
push
cmp
mov
shr
mov
dec
arpl
and
pop
cmp
std
pop
addr16
clc
pop
or
hlt
push
dec
push
push
int3
sub
jl
scas
in
sahf
mov
fdivr
int
jbe
mov
adc
push
outsb
dec
mov
dec
gs
adc
cmp
mov
test
jnp
cmpsb
rcll
jb
dec
loope
std
or
fnstenv
stc
out
rorb
ficoms
jne
adc
scas
insb
mov
pop
repnz
jle
pop
aad
sti
push
mov
add
mov
cmpsb
dec
sbb
push
mov
pusha
outsl
push
push
fiaddl
push
jb
pop
cmpsl
scas
loop
in
scas
scas
addr16
ljmp
repz
int
fisubrs
sahf
push
adc
jne,pt
fistpll
push
add
push
pop
adc
mov
cmp
cmp
cmp
xchg
ss
mov
shll
add
push
add
mov
mov
xor
scas
dec
out
mov
cmp
cmp
cmc
mov
aas
jns
add
xor
xor
insl
mov
jl
pop
jbe
repz
std
insb
aas
and
fcomps
mov
jae
popa
repz
push
test
or
xor
sbb
pop
insb
loop
sub
jmp
inc
lods
sbb
sbb
ljmp
scas
test
mov
dec
ljmp
xor
mov
movsl
out
push
sbbl
adc
dec
mov
test
outsb
pushf
test
cltd
rolb
data16
in
jge
test
mov
sub
jg
sbb
iret
cmp
adcb
xchg
xchg
jmp
mov
adc
out
fcmovnu
adc
and
mov
mov
pop
in
ljmp
cmp
pop
jbe
inc
jmp
mov
xchg
or
mov
adc
mov
mov
push
test
inc
mov
push
arpl
jecxz
mov
mov
mov
je
xlat
push
ret
aas
loopne
pop
cltd
pop
fcmovbe
and
push
pop
outsb
dec
arpl
mov
stc
push
lret
mov
jne
xchg
jae
lret
push
pop
inc
loop
cli
lret
sub
enter
sbb
sbb
cltd
cltd
incl
out
lock
jns
adcl
pushf
imul
and
xchg
cmpsl
push
in
mov
push
xchg
insb
push
mov
mov
mov
pop
ljmp
jmp
mov
lds
mov
stos
sub
bound
fisttpll
or
inc
bound
and
aaa
xor
loop
push
xor
bnd
fldl
pushf
jbe
ficomps
cmp
lret
gs
outsb
jl
pop
into
cltd
mov
jp
push
mov
fildll
das
ret
push
inc
pushl
shll
fmuls
sti
lods
lea
movsb
out
and
ss
lret
rcrb
pop
ja
mov
ret
and
xor
fwait
aas
stc
cmpsb
lods
les
out
int3
mov
and
sbb
dec
sbb
push
mov
mov
insb
sub
repnz
adc
or
mov
out
scas
ss
out
bnd
xchg
pop
jge
adc
mov
lcall
inc
push
sbb
es
es
cmc
adc
inc
gs
sbb
mov
ds
and
int
pop
jmp
xorb
mov
add
cmp
pop
xchg
jl
jmp
packuswb
insl
call
es
sub
rcr
stos
mov
in
addr16
imulb
xor
aas
mov
xor
lods
lret
imul
or
dec
mov
push
xor
fsubrs
ja
sbb
lea
fucomi
cmp
jecxz
mull
push
push
aam
jno
aaa
and
sub
inc
jne
incl
loopne
dec
dec
imulb
pop
dec
cli
lods
cwtl
fildll
dec
test
aas
or
aam
and
adc
sbb
jnp
lea
cwtl
cmp
jecxz
jmp
leave
sub
cmpb
jmp
addl
sbb
push
scas
mov
cwtl
mov
pop
cld
mov
es
ds
jb
out
in
pop
xchg
and
or
rcl
adc
inc
mov
push
jns
popa
add
and
jge
ffreep
fadd
pop
cmp
mov
call
inc
fldt
cmc
sbb
int3
fstl
decl
adc
scas
jmp
clc
xlat
lock
orb
mov
xor
mov
bound
sbb
jg
adc
jns
lods
pop
fdivs
pop
jbe
cmp
pop
ficoms
cltd
ljmp
stos
lret
mov
clc
mov
xor
mov
insl
xchg
ja
aam
ret
xlat
lret
mov
inc
pop
fildl
pop
stos
sbb
insl
cmpsl
scas
arpl
sub
lods
pop
ja
xchg
ja
shrl
sub
adc
xchg
inc
popa
popa
rorl
jno
xchg
mov
std
pop
mov
iret
sbb
mov
dec
xlat
xchg
mov
into
push
cmp
cmp
push
inc
lods
xchg
pop
dec
jg
inc
dec
push
jbe
and
cmp
imul
lock
push
mov
inc
xor
addr16
aad
or
movsl
outsl
dec
pusha
test
cmp
mov
xor
rcrb
sbb
subl
outsl
or
mov
rcr
and
push
fstpt
rclb
xchg
cmp
lret
bound
pop
fnstsw
sbb
pop
or
mov
jne
in
les
add
cwtl
jno
xorl
push
sbb
xchg
out
aam
adc
test
push
xor
bound
dec
push
sbb
out
sbb
sub
and
xor
pop
and
push
xchg
out
mov
dec
hlt
aad
std
in
bswap
xor
push
xchg
xchg
xchg
xchg
mov
imul
mov
mov
jnp
pop
in
js
push
xchg
xchg
or
mov
nop
push
xchg
ljmp
orl
sbb
addr16
cmpsl
fwait
mov
dec
and
or
int3
repnz
insl
xor
adc
in
incl
sti
subb
roll
mov
push
cmp
testl
sub
adc
cmp
or
test
jo
test
lret
sbb
sti
xchg
lcall
cmp
es
pop
jae
bound
sub
inc
repnz
dec
and
sub
lods
stc
push
add
cmp
push
sub
or
sub
cmp
leave
add
mull
adc
or
jle
push
jg
sub
sbb
jg
pop
push
lret
int3
mov
mov
push
int
andb
aas
jge
mov
out
sub
call
pop
push
sbb
scas
hlt
mov
iret
fwait
outsl
and
jb
inc
mov
ljmp
faddl
mov
ret
inc
stc
or
lods
cmpsl
sbb
and
mov
jo
cmp
dec
arpl
aas
adc
inc
std
scas
gs
and
cwtl
in
fs
dec
daa
jo
rcrb
pop
out
or
mov
outsl
aam
test
std
mov
lock
adc
cmpsb
ljmp
inc
or
cmpsl
clc
movsb
cmp
jp
cmp
adc
xchg
scas
pop
inc
adc
jl
ficoml
mov
push
sbb
xor
pop
mov
loopne
xor
jl
sbb
lahf
pop
repz
adc
or
int3
push
mov
xor
fdivs
jae
fadds
jmp
jecxz
inc
xor
fsubrs
jmp
gs
xsha1
cmpsb
leave
ljmp
xor
in
dec
andl
test
leave
mov
adc
and
je
adc
inc
outsb
mov
test
cmp
es
inc
in
or
dec
aad
bound
out
fbld
ficomps
test
dec
jg
mov
push
ds
mov
push
jle
std
pop
lods
push
sbb
out
mov
mov
push
adc
testb
add
mov
iret
hlt
jecxz
es
mov
icebp
inc
out
in
and
outsb
scas
cld
push
sub
fsubrp
aas
jp
xchg
fcmovbe
inc
dec
pop
sub
sub
loop
je
loopne
in
add
out
add
fildl
jbe
xchg
stos
lret
nop
loop
pop
in
leave
jecxz
sbb
cmpsl
jg
mov
repz
out
adcl
mov
shll
xor
movsl
pop
in
icebp
popa
mov
sbb
mov
notb
sbb
adc
test
mov
cmp
mov
repz
jbe
int3
fbld
add
sbb
mov
mov
push
lea
out
push
adc
inc
or
xor
mov
sub
lds
push
test
cmc
fucomp
pop
mov
lret
es
and
dec
mov
cmc
int3
hlt
pusha
icebp
shrl
cmc
stos
pop
pop
xchg
clc
loopne
cltd
fst
mov
cmp
cmp
int
mov
lret
test
int3
sub
mov
mov
sub
push
das
sbb
xchg
add
lea
cmp
or
stos
hlt
dec
add
imul
je
cmpsl
cmp
mov
icebp
cmp
mov
or
rorb
push
stos
addl
cltd
mov
cmp
adc
jl
inc
jmp
cmp
adc
std
push
mov
adc
fdivrl
cmp
scas
in
jnp
inc
pop
sub
push
pop
mov
sub
lods
fmul
loope
xor
mov
insb
jnp
movsb
xchg
insb
mov
aaa
sbb
rorb
loope
sbb
mov
stos
neg
jg
mov
fld
into
stos
and
jge
sbb
movsb
addr16
cwtl
ret
scas
in
sub
pop
das
mov
lahf
xchg
sbb
push
adc
fwait
das
mov
push
rcl
rcr
mulb
or
pop
hlt
lds
sub
addr16
xor
fmul
dec
outsb
or
and
sbb
test
std
lods
pop
fwait
fs
jge
xchg
mov
mov
push
cs
inc
pop
pop
pop
mov
test
push
jno
gs
aaa
shlw
push
insb
decb
cs
imul
push
cmpsl
mov
mov
inc
adc
roll
mov
mov
popa
insb
orb
into
adc
lock
lret
data16
lea
addl
sbb
aas
cmp
and
fistl
sbb
pop
jno
push
xchg
pop
xchg
rcrb
dec
out
lods
add
push
add
sbb
lahf
mov
mov
insb
cmp
mov
adc
or
cs
sbb
jb
cld
mov
jb
fcompl
mov
cmp
sbb
push
push
outsb
pop
xor
cmpb
push
stos
xor
iret
lock
jb
shlb
mov
rolb
push
imul
jmp
mov
mull
mov
lods
gs
sub
hlt
fs
movsl
lret
rclb
mov
add
ds
xchg
neg
inc
cmp
jae
cmpsl
pushl
icebp
fistps
cltd
adc
xor
inc
adc
aad
fwait
arpl
mov
sbb
ror
inc
in
test
push
pushf
int3
add
inc
mov
and
dec
movsl
sbb
xchg
arpl
push
add
cli
arpl
jae
cmp
into
mov
leave
xor
icebp
mov
xchg
xchg
icebp
jne
movsl
jno
filds
xchg
out
imul
fs
cltd
add
rclb
xrelease
lock
jle
mov
fsubs
in
filds
dec
gs
and
cmp
sbb
insb
mov
sub
push
jns
enter
cltd
dec
cmp
test
clc
xor
and
pop
inc
mov
sbb
adc
xchg
out
xor
loop
or
in
mov
sbb
sti
sub
in
insl
sbb
push
xchg
sub
xor
or
test
cmp
lea
mov
fldt
add
ljmp
scas
mov
clc
repnz
mov
aam
scas
repz
xor
ret
data16
outsb
xor
ljmp
pop
rcrl
cmp
fwait
xchg
pushw
mov
jbe
out
repnz
dec
mov
out
xor
popa
cld
popf
sbb
and
push
mov
clc
std
add
inc
xchg
add
iret
adc
mov
cmp
loopne
push
ds
daa
in
repz
sub
cld
aad
cmpsb
sub
sub
or
addr16
insl
cmpsl
lcall
sub
lods
mov
xchg
lock
jl
jnp
stos
fistps
rcll
divb
mov
pop
fcmovnbe
sbb
mov
jle
lret
push
ljmp
aad
xor
push
lods
leave
addb
js
sub
cmpsl
and
pop
lret
mov
in
nop
daa
push
inc
add
flds
ss
add
fidivs
xor
call
mov
dec
inc
decb
push
mov
xchg
xchg
cmp
clc
jbe
pop
pop
in
xor
outsb
xor
dec
test
xchg
into
jmp
popf
mov
sbb
sub
fs
int
insb
sbb
lods
mov
sbb
addl
xchg
cmp
in
mov
cmp
inc
mov
into
or
sbb
in
lds
add
cmpsl
inc
lds
xchg
in
mov
and
jg
fcmovb
les
repnz
mov
xchg
xchg
scas
adc
cmp
dec
adc
fnsave
add
mov
xorb
jo
jnp
out
mov
and
outsb
adc
push
pop
pop
mov
loopne
faddl
cmpsb
pop
mov
aad
dec
pop
sub
mov
sbb
adc
idivb
daa
mov
pop
lahf
push
xchg
bound
enter
pop
js
jns
cmp
stc
mov
xlat
xor
push
cli
or
jge
sub
jge
dec
movsb
faddl
dec
sti
mov
inc
mov
xchg
sub
add
fsubrs
rorl
push
cmp
jp
aad
cmp
mov
inc
imul
jae
popf
add
ss
cli
orl
call
cmp
xor
push
add
out
sbb
lret
loopne
and
adc
inc
popf
sbb
int3
mov
jmp
pop
jae
push
sub
dec
adc
add
sub
mov
or
je
xchg
fisubrl
or
sahf
push
scas
sub
adc
ja
or
stc
popf
dec
mov
push
fnstsw
mov
add
repnz
ret
std
daa
adc
test
adc
lret
rcl
push
insl
lods
cs
stc
inc
and
xor
lret
inc
cli
jl
int3
xchg
dec
bound
push
or
fwait
push
fidivs
ja
scas
insl
sub
jle
std
mov
push
add
jle
test
out
mov
fs
sahf
cmp
sbb
jg
loopne
pop
outsl
es
movsb
add
arpl
adc
xchg
ficomps
cmp
xor
pop
xchg
xor
repz
push
cmovae
push
fwait
rcrb
loopne
lea
lret
ret
jecxz
scas
push
mov
pushf
fisttpll
out
mov
mov
arpl
xchg
sub
xor
cld
shlb
xor
subl
fs
xchg
je
les
aaa
add
xor
por
push
repz
add
popa
ss
loopne
cmc
fsubrl
ds
adc
cmp
out
imul
outsl
fisttpll
aam
adc
and
hlt
lock
stc
fists
mov
bound
std
imul
ret
aaa
int
int3
xchg
lods
or
push
fsubs
pushw
cmc
aaa
mov
xchg
xor
xchg
xchg
jl
test
mov
addr16
pop
mov
mov
orb
daa
push
stos
adc
repnz
or
xchg
aas
xchg
mov
and
mov
inc
pushf
xchg
xor
push
inc
or
mov
flds
loop
xor
jge
xor
xchg
xchg
das
pop
in
fistpll
mov
sub
lret
mov
pop
adc
xor
loope
fcmovne
cmpsb
test
jle
dec
notb
or
xor
sub
stc
pop
lea
data16
sbb
out
jne
push
mov
outsb
adc
addr16
push
jbe
in
and
es
adc
test
and
push
or
push
cmp
es
xorl
cmpsl
out
fsubr
enter
les
insb
ret
mov
call
pop
addr16
xchg
dec
sbb
adc
testb
mov
push
iret
mov
cmp
mov
lods
mov
loop
pushf
aam
popa
stos
inc
je
and
jno
out
or
fiaddl
adc
out
and
xchg
jecxz
and
xor
flds
cwtl
inc
xor
cmpsb
inc
shrb
cmp
jle
pop
mov
xchg
and
jl
das
dec
shlb
or
pop
dec
ficomps
push
xor
shl
lds
pop
ficoms
enter
pushf
int3
lods
inc
jl
and
test
push
mov
xor
stc
pop
fwait
push
stos
jns
jo
sub
mov
repnz
in
rolb
mov
sub
insl
xchg
pop
stc
scas
je
jle
loop
sarl
aas
shlb
adc
imul
cwtl
in
outsb
insl
push
jb
shr
sub
lea
faddp
xor
test
cmpsb
adc
daa
cmp
pop
sbb
sbbl
in
bound
movl
jnp
or
fiadds
in
mov
dec
fists
xor
scas
fs
adc
ja
out
push
inc
shll
pushf
imul
push
cmc
mov
jno
xchg
outsb
cmp
add
xor
jmp
pushf
push
call
push
cmc
scas
dec
fs
pop
out
inc
loope
imul
test
add
add
mov
xchg
out
hlt
or
and
pop
xor
fucomi
out
aas
icebp
cmpl
mov
or
lret
adc
inc
push
or
sbb
jnp
enter
xor
movsl
adc
es
pop
sbb
dec
add
rcrl
adcl
xchg
jmp
sbb
mov
inc
bnd
sbb
add
popf
sahf
leave
jo
mov
dec
cltd
sub
loop
add
out
outsb
mov
adc
jg
sbb
xor
in
dec
pop
mov
mov
xchg
xor
aaa
add
adc
mov
or
outsl
cld
mov
and
int
pop
pop
sub
fucomp
cmp
cmp
enter
inc
mov
inc
sbb
sti
repnz
xor
add
je
int3
inc
aaa
mov
pop
push
adc
ret
sahf
int3
enter
iret
test
inc
lea
inc
mov
sub
adc
aaa
xor
sarb
pop
xchg
adc
out
jno
and
push
jnp
xor
push
sub
js
pop
or
pusha
fwait
add
xchg
push
in
cmp
sti
add
test
inc
dec
push
icebp
jmp
and
and
xor
and
stos
jg
imul
and
add
dec
mov
sti
pop
into
inc
jg
xor
enter
cmp
mov
pusha
mov
cmp
or
jecxz
jg
mov
jmp
hlt
out
subl
stc
rcrb
lahf
roll
mov
ja
fbld
push
vxorps
jns
aas
jb
jl
ja
mov
inc
cwtl
dec
adc
cmpsb
jecxz
repz
jmp
push
bound
lods
mov
sbb
add
cmp
lods
push
movb
arpl
aas
sub
push
imul
ret
inc
sbb
pop
das
je
test
jp
xor
sbb
popa
in
popf
mov
aas
lahf
out
dec
test
fstp
icebp
jl
jns
cmp
dec
ror
or
inc
sub
add
xchg
fwait
stc
scas
mov
cli
and
jg
add
sbb
pop
dec
inc
sti
fnstcw
enter
pop
and
adc
xchg
cmp
adc
pop
jne
ret
push
add
addr16
mov
xchg
gs
mov
mov
test
lock
rorl
sbb
mov
insl
cmp
xchg
lods
and
mov
cs
and
stos
mov
jo
shrl
imul
out
fisubs
pop
test
or
push
pop
inc
ret
cs
test
outsb
adc
and
shl
jecxz
test
insb
fists
je
fidivl
mov
mov
out
mov
movsl
jmp
inc
mov
aas
push
data16
cmpsb
mov
fdivrs
jno
cmpsb
sbb
xchg
test
lock
inc
adc
out
sbb
dec
jl
pop
inc
adc
lret
imul
je
mov
push
pusha
mov
pop
mov
aad
push
ds
xor
push
shr
stos
sub
das
cmp
fadds
push
mov
jl
pop
lret
jo
loopne
popa
jb
shll
loope
mov
popw
cmp
mov
or
sub
push
aam
xor
ja
sbb
mov
mov
fisttps
addb
in
fdivl
lods
inc
jae
das
orb
les
and
outsb
imul
or
dec
xchg
inc
and
out
out
gs
mov
jmp
fxch
push
pop
inc
jp
cmp
mov
fyl2x
leave
add
and
mov
cmc
xchg
mov
jl
xchg
add
jmp
jne
insl
mov
fwait
cld
repnz
push
inc
dec
insl
mov
lahf
add
dec
sub
pusha
cmpsb
aaa
pop
push
fdivr
orb
cmc
imull
les
mov
cmpsl
repnz
sub
add
inc
sub
lcall
out
add
push
lods
cmpsb
popf
cmc
ss
repnz
imul
xor
repnz
dec
test
mov
add
scas
stos
mov
dec
pop
rorl
adc
push
fstps
testl
push
stos
dec
xchg
aam
sub
xor
iret
push
loope
insl
int3
lret
scas
es
fcmovnb
xor
lahf
pusha
mov
popf
cmpsl
rcrb
lret
and
lcall
xor
jb
sbbb
ret
hlt
cmp
aaa
jp
mov
ljmp
aas
into
jne
sub
in
stos
pop
xlat
mov
cmp
inc
shrl
fwait
js
inc
mov
sbb
dec
push
xor
cmp
fwait
xchg
jne
lods
mov
sbb
addb
xorl
hlt
adc
shlb
mov
js
sbb
stos
rcll
nop
cmpsl
repz
addb
add
mov
cmp
fwait
pop
jb
dec
xchg
and
test
fistpll
loop
test
or
lret
add
fwait
jbe
dec
sbb
mov
stos
test
pop
mov
aam
cmp
jne
xlat
call
dec
mov
nop
stos
shlb
mov
sbb
and
lahf
fs
sub
adc
sbb
mov
inc
ljmp
orb
push
clc
bnd
pop
rorl
cmp
outsb
xchg
lahf
icebp
int
popa
pop
mov
ret
notb
mov
cmp
into
arpl
adc
mov
mov
lret
pop
test
out
adc
xchg
add
sar
jae
push
movsl
pusha
das
adc
dec
push
jo
int3
add
adc
mov
les
outsb
mov
mov
jno
pop
adc
mov
fdivp
std
sbb
popa
in
mov
mov
loope,pn
aas
jo
addr16
cmp
dec
sahf
mov
xor
icebp
add
jns
cli
shl
fsubs
dec
aam
xrelease
mov
scas
in
adc
mov
jbe
xchg
push
icebp
sub
out
loopne
inc
stc
sub
pop
xor
jge
lcall
adc
mov
fisttpl
rcrb
pop
adc
push
ret
jns
shrb
in
push
fidivrs
lahf
xchg
inc
xchg
dec
and
dec
xor
and
ret
shlb
add
enter
imul
cmp
xor
cmp
negb
dec
lds
xchg
outsb
or
inc
mov
fcomi
sbb
into
gs
push
enter
mov
test
out
and
cmp
out
mov
out
and
xchg
pop
jne
lea
add
popa
fpatan
repz
pop
adc
fdiv
sub
lret
mov
sub
shlb
sbb
mov
dec
and
ja
in
push
orb
mov
dec
jmp
scas
add
pop
das
xchg
je
dec
je
stc
adc
inc
and
outsl
aam
lods
cmp
push
jbe
dec
mov
out
push
adc
mov
fisubs
repz
push
sbb
xlat
into
jbe
push
cld
ljmp
or
inc
xor
sbb
mov
and
xor
arpl
int3
and
adc
out
xlat
movsb
mov
dec
repz
hlt
in
sbb
ret
loope
loop
push
inc
mov
pop
pushf
or
dec
xchg
adc
jno
pop
enter
xor
jl
xlat
sbb
rorb
push
iret
and
fs
or
jg
jb
jo
lret
jecxz
repz
xor
lods
cwtl
nop
js
fld
push
fsts
rclb
scas
jbe
ss
out
into
push
jo
std
and
pop
mov
cmpsb
xchg
scas
or
test
jb
inc
jl
or
lret
nop
pushf
int3
insl
jb
std
pop
xchg
xlat
loopne
ficompl
and
les
out
sub
adc
xor
or
sbb
test
push
nop
lods
test
xlat
scas
and
xor
out
enterw
js
movsl
daa
push
movsl
xchg
popf
pop
jmp
lods
imul
int
aam
add
popl
xchg
pop
sbb
pop
addr16
sbb
mov
mov
nop
mov
outsb
mov
stc
dec
jp
je
mov
iret
add
imul
dec
fbstp
bound
popf
rol
shlb
pop
mov
add
jmp
mov
lods
jg
cmp
fdivl
insb
cs
xchg
xchg
pop
xlat
xor
aas
mov
ds
inc
out
cmp
push
push
fwait
stc
loop
xorl
add
insb
sub
and
mov
cmp
in
lds
test
mov
in
int
cmp
out
repz
fs
mov
jne
daa
popa
fcomps
dec
jae
dec
jg
jnp
push
js
lcall
xchg
outsb
gs
jecxz
test
and
or
pop
insl
fmull
push
int3
xorb
sahf
sub
out
fsubl
scas
fstps
mov
mov
call
xchg
mov
out
inc
inc
sub
in
or
in
sahf
adc
dec
fistpl
mov
insb
push
mov
pop
mov
jecxz
clc
fdivp
hlt
sbb
lock
pop
pusha
add
xor
fisubrl
mov
fdivrs
bound
cmp
ds
loope
negl
push
lock
push
fiaddl
mov
loope
das
jbe
and
xor
iret
daa
cmp
cld
daa
iret
cld
push
dec
xor
jbe
ss
pop
sub
mov
push
inc
das
and
fdivr
push
sub
fnstcw
pusha
stc
rclb
sub
outsl
stos
dec
inc
int
maskmovq
negl
pop
loopne
add
mov
pop
ret
xlat
push
negw
dec
je
js
ret
stos
inc
pushf
out
cmp
and
jae
pop
loopne
sbb
adc
pusha
jns
popa
xchg
xlat
enter
dec
dec
sarb
int3
je
ds
mov
mov
or
xchg
adc
ja
mov
or
mov
and
or
sarl
inc
push
aas
sbbb
jb
mov
stos
mov
mov
je
add
jle
cmp
dec
adc
js
xor
dec
iret
popa
cmp
ret
cmc
inc
adc
loope
sahf
clc
pusha
xchg
in
xchg
sti
sbb
cmc
mov
test
mov
jl
push
cmpb
in
stos
cmc
pop
test
ja
cli
mov
jle
fstl
sbb
js
lret
adc
and
aam
int
sbb
add
bound
lods
and
jb
cmp
inc
mov
inc
insb
jns
stos
sbbb
sbb
popf
push
sbb
nop
rorb
dec
stos
test
imul
push
out
add
and
mov
or
arpl
mov
fldt
outsl
inc
jmp
mov
fisubrs
movsb
call
bnd
call
jle
cmp
aaa
or
and
cmp
inc
mov
push
cmp
or
fdivrs
shlb
add
and
repnz
mov
mov
fwait
jo
js
pop
mov
mov
push
dec
or
and
mov
dec
fcompl
loope
call
outsb
sub
sbb
push
cs
add
push
xchg
rcll
movsb
sbb
push
das
imul
dec
push
xor
call
lcall
pop
adc
ss
stos
sub
dec
inc
popf
mov
rcrl
out
xchg
dec
jb
fcmovnb
leave
popa
repnz
xor
sbb
sbb
in
lahf
in
scas
mov
movsb
fucomp
sub
test
cltd
cmp
inc
scas
into
push
pop
aad
push
imul
es
arpl
adc
xchg
adc
and
adc
int3
ss
popf
rorl
push
loopne
lods
lret
aas
outsb
aaa
and
add
cli
cmp
lods
pop
mov
jge
fcompl
adcl
and
or
mov
notl
ss
adcl
adc
cmp
aaa
fstps
xchg
aam
test
nop
dec
cmp
repnz
mov
inc
jmp
jne
cmp
out
clc
lds
xor
xchg
xor
in
in
leave
out
and
xchg
call
push
out
ds
cmpsb
mov
movsb
jle
in
std
shlb
push
stos
in
cmp
adc
push
or
call
pop
shlb
loopne
cwtl
dec
bound
lcall
jl
xchg
leave
in
or
loopne
mov
test
insl
jns
push
cs
pop
mov
gs
xor
push
and
lret
push
or
push
and
imul
inc
es
fs
hlt
pop
xchg
mov
pop
xchg
add
and
ret
mov
out
sub
bswap
sbb
xchg
jp
dec
addb
pop
dec
mov
inc
ja
stos
cmpsl
insl
shll
aam
push
cmpb
and
loop
cmpsb
out
js
and
and
orb
cwtl
shl
mov
ror
rcl
test
gs
stc
fsubl
int
xor
mov
rol
aaa
jne
arpl
lock
jb
inc
stos
in
out
push
test
push
and
jnp
xor
adc
mov
call
add
in
fisubrl
stc
das
jns
adc
popa
loopne
loop
aam
mov
inc
nop
add
add
jge
scas
gs
cmp
sbb
jb
movsb
loop
dec
or
jne
scas
test
adc
nop
inc
imull
adc
lret
scas
and
inc
adc
int
jno
add
dec
mov
fiaddl
cmp
xchg
lcall
in
mov
jl
ss
lea
mov
in
xor
xor
mov
enter
xor
inc
fists
cltd
bts
lret
pop
adc
mov
mov
scas
cmp
movsl
or
dec
push
dec
inc
lret
lods
mov
movb
stc
inc
shll
clc
loope
jecxz
movsb
push
sbb
sbb
and
enter
cld
js
mov
data16
push
push
cwtl
mov
cs
and
jb
es
insl
mov
rcrb
stos
pusha
lret
or
insb
ds
fchs
pop
jo
clc
push
in
sbb
push
loope
insl
sbb
leave
add
add
ja
mov
inc
mov
xor
or
lahf
sbb
daa
jnp
arpl
inc
inc
mov
adc
mov
pop
or
orb
lock
inc
mov
sbb
and
and
add
jb
jge
xchg
pop
jmp
or
dec
sbb
pop
cmp
rclb
cmp
dec
mov
rcll
mov
scas
or
sbb
xchg
leave
stc
repz
and
xor
adc
push
push
scas
mov
push
hlt
xchg
push
mov
dec
mov
js
roll
fcoms
ss
fcompl
insb
xor
add
pop
adc
push
rcrl
js
add
inc
mov
mul
adc
pop
mov
lds
cwtl
mov
cmc
in
sub
add
sbb
mov
or
or
out
popa
inc
mov
mov
and
addr16
add
adc
adc
jl
cmp
es
jnp
fsubrl
jae
fs
iret
loope
ror
ss
sahf
cwtl
rorb
repz
mov
adc
push
pop
je
mov
pushf
insb
xchg
push
dec
aaa
jns
xchg
push
mov
mov
and
int
loop
lock
jle
test
movsb
ja
arpl
inc
pusha
and
ljmp
inc
stos
pop
fs
loopne
popa
lahf
scas
fldt
adc
ss
nop
addl
push
mov
jbe
pop
mov
call
lea
ja
bound
mov
cmp
sbb
jno
adc
cltd
sti
push
xchg
mov
lods
or
push
out
sub
repnz
outsb
xor
push
push
and
repz
insl
in
cmp
xchg
aam
ffree
cmp
lds
jnp
mov
rcr
push
mov
das
pop
or
ret
aas
stos
jo
and
das
in
inc
lahf
pcmpeqw
and
sbb
dec
std
jecxz
int3
cwtl
stos
lods
sbbb
mov
mov
pop
sub
xor
mov
sbb
mov
out
mov
jmp
cmp
std
loope
ljmp
scas
pop
mov
mov
out
cwtl
sbb
mov
and
fs
test
mov
push
mul
adc
sbb
push
inc
lods
lods
lods
push
insl
subb
in
mov
nop
cmp
jg
lock
in
adc
roll
rclb
add
xchg
sbb
je
mov
jae
adc
mov
stc
jp
or
adc
adc
andb
cmpsb
stc
cmc
jae
or
sbb
fcmovbe
outsl
lcall
cli
xchg
jp
xchg
pushf
ljmp
in
ror
xchg
sub
sbb
jecxz
int
or
jl
mov
lds
cmp
ss
sbb
sti
scas
lcall
push
pop
pushf
ret
xchg
cmp
mov
and
lahf
inc
xchg
jns
daa
push
shlb
ds
dec
adc
fstpt
imul
jo
xorl
jno
mov
pusha
loope
repz
dec
ljmp
int3
sbb
int3
in
and
jnp
fisubrl
xchg
jae
out
or
bound
scas
or
dec
fcmove
por
jnp
xchg
jg
cmp
mov
paddq
xor
dec
add
or
int3
dec
and
test
sub
or
les
stos
xchg
pop
leave
and
sarb
dec
jns
push
mov
inc
lods
lcall
push
push
std
sub
in
xchg
cmp
insl
iret
xchg
and
push
insl
clc
xchg
adc
cmp
pop
mov
adc
lea
ss
movsb
mov
lock
andb
pop
push
test
jo
loope
icebp
stc
stc
lods
fcoms
pop
lret
subb
xlat
and
leave
frstor
lock
nop
pop
xor
mov
push
scas
cmp
cwtl
push
inc
dec
ror
in
jp
push
dec
fsts
and
bound
aas
fwait
sbb
outsl
push
sub
lcall
mov
lcall
jb
lret
adc
enter
inc
dec
into
cmpsl
loopne
cmpsl
and
in
mov
enter
inc
mov
jns
pop
sbb
stos
and
mov
sarb
mov
add
hlt
jnp
stos
clc
push
and
aaa
jnp
mov
out
pop
stos
mov
rorb
inc
pop
mov
call
and
dec
in
push
mov
pop
gs
imull
dec
jge
jg,pn
jnp
cmp
push
jl
xchg
mov
jg
or
mov
mov
stos
jl
or
push
mov
dec
mov
movsb
inc
lret
lahf
pop
mov
loope
mov
cmp
mov
sub
int3
cld
pop
mov
mov
test
fbld
jg
mov
mov
and
repz
imul
add
push
jae
push
bound
push
inc
jmp
pop
ljmp
mov
pop
std
fdivrs
adc
and
adc
dec
lods
jge
mov
xchg
xchg
push
dec
in
cmp
cmpb
xchg
or
mov
xchg
sbb
jne
xorb
scas
loop
jne
in
or
sarl
sbb
xchg
sbb
xor
jle
out
xchg
pop
das
rcrl
sub
mov
stc
pop
rclb
mov
inc
dec
push
lcall
lcall
icebp
data16
sbb
popf
sbb
mov
clc
shrb
in
loope
push
pop
sub
jle
jno
pop
mov
les
cwtl
lea
gs
add
adc
std
sarl
aaa
mov
xchg
dec
xchg
mov
push
jne
ds
jb
test
test
pop
lahf
in
xadd
cmp
cmp
pop
sbb
cmp
movsl
cmp
sbb
loope
jne
xchg
fcompl
js
mov
in
dec
dec
inc
inc
in
cmpsb
inc
daa
mov
js
jo
hlt
jle
fcmovb
mov
jo
leave
loop
mov
jnp
xor
addr16
in
adc
das
test
add
jo
adc
sbb
xor
jmp
ljmp
mov
push
mov
inc
add
test
in
add
or
xchg
xlat
push
mov
es
jmp
jnp
adc
or
xchg
pop
xchg
jns
mov
inc
lea
out
xor
mov
out
xchg
jg
lds
sub
jle
mov
cmp
adc
cld
sbb
cltd
outsb
jmp
test
pop
xor
rorl
movl
mov
stos
es
divl
ret
lcall
je
and
mov
and
jge
mov
out
shlb
pop
adc
cmp
dec
cmp
pop
pop
rol
mov
push
sbb
les
inc
sub
into
jne
cs
or
xchg
inc
xor
adc
dec
xchg
lods
mov
mov
in
andb
es
jns
xor
aaa
push
dec
leave
fwait
jmp
sarl
lret
call
push
inc
std
rcll
call
sub
and
imul
andl
jnp
pop
insb
lds
xorl
mov
mov
mov
cmp
jmp
loopne
addl
lcall
ret
pop
sbb
imul
mov
insb
fistps
cmp
jge
jbe
mov
adc
out
jmp
clc
fdivs
jnp
lock
sarb
pop
fdivrl
jb
xchg
xchg
and
outsb
movsl
cld
push
enter
lcall
mov
inc
dec
out
xchg
pusha
fldcw
fistpll
xor
fadds
sub
push
sbb
ds
adc
push
insl
ss
xchg
movsb
inc
into
in
dec
inc
test
mov
mov
inc
jo
mull
pop
push
cltd
sub
ss
mov
fisttpl
sbb
xor
mov
ret
addr16
out
mov
popa
xchg
cli
sbb
jbe
inc
jno
lahf
dec
pushf
jecxz
xchg
loope
clc
daa
shlb
sub
add
out
xor
xchg
popf
pop
adc
and
or
inc
ret
sbb
mov
in
pusha
pop
adc
sbb
add
mov
das
xor
sub
jg
daa
sbb
out
ljmp
xchg
fxch
xor
sub
add
cwtl
sbb
or
in
mov
pop
pop
into
push
push
testl
out
cmc
repnz
xor
xchg
stc
rcrl
jg
cmpsb
sbb
sub
add
sbb
mov
loop
or
fcoml
mov
or
pushf
add
adc
pusha
cwtl
jns
nop
mov
inc
out
and
sub
and
andb
xor
sbb
faddl
in
inc
mov
or
push
jp
dec
aad
icebp
popl
mov
xchg
outsl
mov
outsb
aas
pop
stos
adcl
or
movsl
pusha
xchg
jne
cmp
and
lds
push
pop
mov
mov
sbb
lods
xchg
out
fstps
sub
mov
fnsave
out
stc
dec
add
cmp
mov
fimuls
cmp
inc
adc
fwait
cmc
test
pusha
xorl
cmpsl
mov
dec
test
push
sub
dec
inc
inc
pop
je
mov
jg
leave
push
mov
add
mov
xchg
or
xchg
jg
cwtl
add
xor
and
push
pop
out
loop
arpl
xchg
pusha
jle
mov
mov
mov
in
mov
cmpsb
ret
pusha
aam
mov
stos
jne
movsb
bound
loopne
jecxz
ficoml
mov
inc
inc
inc
sub
pop
test
addl
hlt
and
sahf
and
mov
xchg
or
mov
fsubrl
jle
or
rep
jl
dec
mov
into
sub
out
cmpl
or
adc
cmp
mov
stos
shufps
stos
test
dec
shll
daa
xor
es
add
xchg
pop
push
push
imul
incl
ret
lahf
or
insl
sub
clc
xchg
sub
out
pushl
mov
daa
inc
mov
add
sub
ror
scas
data16
lods
jg
mov
cmp
out
in
mov
leave
int3
push
cltd
popf
jecxz
jb
icebp
sub
ja
mov
jmp
mov
push
adc
mov
movsb
mov
sbb
sbbl
orl
dec
ds
rcll
inc
in
orb
stos
push
jb
test
dec
iret
in
call
cmp
add
loope
jne
pop
mov
push
xchg
in
mov
icebp
repz
aas
mov
jge
test
xchg
imul
adc
pop
cld
inc
push
outsb
inc
inc
adc
push
mov
lret
jle
aaa
imul
lds
lods
loopne
rol
scas
xor
out
sub
in
sbb
arpl
adcl
mov
sub
cmp
xchg
in
lea
adc
ficoms
cmp
ss
cmp
mov
aaa
lds
sbb
xor
inc
inc
test
push
es
and
dec
out
adc
mov
push
popa
movnti
pop
inc
adc
cmpsl
fs
cmp
pop
repnz
cmpsb
andb
js
call
xchg
pop
shrb
jb
add
jl
div
std
in
stos
repz
gs
lea
ja
add
aaa
cmp
sbb
cmp
shrl
call
sub
in
inc
sbb
sbb
sbb
testl
ret
cmpsb
aas
push
mov
repz
loop
lods
or
cmpsb
cmp
je
repz
outsl
ss
out
into
cmp
call
push
lahf
xor
aaa
jns
ds
mov
push
int3
cmpsb
sbb
xor
cmp
mov
hlt
sub
aam
push
xchg
sahf
fisttpll
cmp
xchg
cmp
push
push
and
fcmovu
sbb
dec
xchg
inc
mov
shlb
out
enter
inc
jmp
sub
cmp
push
pop
out
das
aas
stos
and
sbb
jmp
add
fisttpl
jno
mov
shl
rol
cli
xchg
cmp
push
or
orl
andb
lock
sub
xchg
frstor
les
inc
inc
fsubr
gs
mov
add
lds
inc
rol
sahf
in
cmp
dec
mov
jg
add
les
mov
cwtl
xchg
fs
bound
cmp
add
jns
out
adc
mov
mov
stos
mov
arpl
dec
mov
rcrl
and
jmp
leave
sub
loopne
mov
xchg
aam
xor
pop
push
fildll
orl
leave
stos
jge
adc
cwtl
mov
pop
das
xchg
gs
inc
enter
inc
sub
mov
es
adc
mov
xor
fsubs
jns
xchg
mov
sub
adc
pop
in
out
cmp
cs
popa
cld
xchg
inc
fwait
cmp
mov
ror
add
and
pop
jbe
adc
adc
push
inc
ja
lcall
lret
outsl
insb
mov
stos
cwtl
sbb
cwtl
xchg
ret
pop
jg
iret
daa
cli
lret
fs
divl
bound
popa
aaa
pop
data16
mov
movsl
mov
call
scas
jmp
insb
xchg
in
fs
mov
lcall
xor
or
and
int
in
sbb
ret
loopne
cli
mov
mov
in
stos
cmp
bound
mov
inc
xor
mov
ret
xlat
pop
fwait
shll
mov
andb
mov
mov
xchg
dec
rcrl
shlb
ret
xchg
xor
sbb
ret
js
call
sub
es
ja
idiv
mov
cwtl
pop
repz
jno
sbb
xchg
incb
daa
test
loop
rorl
inc
cmpl
ja
out
inc
ja
xor
repz
dec
adc
xchg
jge
shlb
cmp
dec
jmp
stos
mov
popl
int
cli
pop
outsb
in
mull
cmp
sub
and
ss
lahf
sub
xor
test
icebp
fwait
hlt
or
add
in
fsubs
inc
xchg
xlat
adc
xorb
cmp
jmp
outsb
negb
adc
smsw
sbbl
andl
jmp
inc
leave
xor
inc
dec
mov
fisttpl
lea
add
adc
je
shll
pop
sbb
fprem1
sbb
mov
jle
std
cmp
outsl
imul
pop
outsb
jecxz
mov
ss
cwtl
outsb
dec
stc
lock
add
pop
scas
daa
sbb
scas
fsts
xor
push
ficomps
mov
jmp
unpckhps
jecxz
add
loope
xor
and
sub
dec
mov
in
orl
cwtl
rcr
lcall
pop
popf
jecxz
cmp
pop
inc
pushf
imul
inc
leave
rcrl
pushl
fisttpl
cld
push
mov
mov
dec
push
int
sahf
rolb
xchg
dec
and
mov
xor
xor
jge
xor
ftst
cs
jns
lret
xchg
test
scas
repnz
mov
idivl
stos
lret
jge
push
mov
pop
je
add
dec
adc
xor
inc
mov
dec
mov
jb
add
cmpsl
sub
or
popl
mov
inc
in
leave
aam
add
pop
pushf
je
test
ja
sub
rcll
sub
inc
icebp
movsl
sub
jnp
add
mov
fs
mov
lock
addr16
jecxz
arpl
popf
or
pop
sub
and
subb
push
sbb
xor
xor
push
insb
cltd
xor
outsl
pop
aaa
sub
mov
dec
add
pop
mov
xchg
fcompl
stos
mov
or
pop
inc
in
adc
xor
sbb
fisubl
jl
mov
dec
loope
dec
adc
and
lret
ss
adc
xchg
js
test
roll
jo
jg
mov
cld
subb
bound
aaa
and
cmp
inc
divb
rcrl
arpl
adc
cmp
xor
mov
psubsb
sbb
and
mov
dec
shlb
xchg
fldl
loope
xchg
jns
add
mov
psubusw
xor
mov
repz
hlt
lret
mov
std
and
ret
stc
fldenv
ds
cmp
scas
inc
test
insb
ljmp
jmp
dec
adc
incl
rorl
rolb
and
sub
jbe
mov
and
xchg
mov
cwtl
xchg
mov
mov
jge
jnp
pop
push
imul
cmp
jge
sub
stc
dec
out
add
subl
in
mov
rcl
cmp
stc
mov
push
mov
xchg
jle
or
xor
adc
sbb
ror
shlb
sbb
push
mov
stos
mov
scas
repnz
fs
xor
mov
adcb
shl
push
mov
lock
mov
inc
cmp
ljmp
sub
jns
and
popa
mov
cmp
mov
ja
adc
pop
loopne
sbb
icebp
push
test
xlat
cmpsb
fiadds
mov
addr16
in
and
push
mov
inc
or
sti
dec
mov
xchg
sbb
and
idivb
adc
popa
cmp
mov
inc
mov
pop
sub
jnp
push
lret
outsl
lea
dec
push
add
fisttps
shll
pop
inc
xor
lahf
idivb
repnz
addb
aad
pop
lret
dec
addr16
push
push
push
push
or
sub
push
add
or
repnz
sahf
xor
sbb
dec
inc
jg
in
scas
xchg
or
inc
mov
loopne
inc
les
andb
in
lahf
mov
mov
rcrl
cmpsl
mov
test
out
test
dec
in
loop
in
clc
sub
pop
adc
sub
das
popa
js
pop
xchg
mov
aas
xor
inc
inc
sbb
neg
fsubrs
jae
iret
cmp
popf
in
mov
xor
andl
pop
pop
cwtl
jo
dec
xchg
inc
popf
fistl
push
je
mov
mov
dec
arpl
into
sbb
cmp
pop
jge
cmp
loop
xchg
inc
ja
ljmp
xchg
mov
fadds
jge
rcl
cwtl
nop
mov
jno
cmp
imul
mov
dec
jmp
cmp
push
or
std
shll
lods
inc
mov
pop
mov
lds
cld
and
sub
setle
fisubs
sub
into
or
ret
jb
stos
mov
mov
int3
fldt
lea
lds
int
dec
outsl
pop
mov
push
xchg
loope
xchg
aam
sbbl
xchg
mov
imul
sub
sbb
push
xchg
scas
das
jle
rcll
cwtl
mov
add
in
and
dec
xchg
xor
rcrb
mov
cmpsb
pop
in
cwtl
jno
loope
jbe
int3
cli
out
stc
in
fwait
mov
sub
mov
push
mov
adc
imul
pusha
xchg
nop
jnp
mov
js
shrl
movsb
shr
jl
fdivrp
mov
pushf
nop
and
gs
mov
push
sub
pop
pop
push
push
dec
adc
imul
push
xchg
lock
pushf
jmp
pop
push
push
and
sbb
mov
das
in
sub
add
lea
push
jmp
cmp
addr16
xor
fistps
xor
add
std
jl
fsubp
pop
leave
insl
push
outsl
fldenv
jl
mov
popf
ss
aaa
dec
xchg
jmp
pop
mov
pop
aas
inc
call
in
insl
jmp
cmp
sub
aas
icebp
xor
pushf
bound
divb
inc
xchg
dec
lods
dec
int3
aad
data16
clc
dec
mov
jb
pop
mov
mov
bound
cmp
xchg
xchg
cwtl
das
leave
jbe
cmp
int3
mulb
ret
cmpsl
lahf
bound
data16
subl
inc
adc
test
ret
in
mov
out
jbe
xchg
sbb
jmp
scas
test
cli
fistpl
dec
xchg
sete
fimuls
int3
mov
mov
jo
cmp
scas
add
xlat
add
repnz
ret
stos
add
cmpsl
push
cmp
imul
xor
iret
push
inc
and
mov
mov
sbb
stos
pop
rcrb
loopne
jno
popf
xor
mov
nop
xchg
bound
das
shrl
and
shrb
inc
mov
jo
sbb
in
enter
pop
enter
out
scas
push
or
sbbb
fstpl
jo
adc
hlt
shlb
jl
dec
dec
movsl
cld
xlat
jge
inc
inc
sbbb
loope
xchg
stos
cmp
int3
push
mov
enter
pop
push
jb
pop
dec
hlt
aad
leave
fdiv
fdivrs
arpl
cwtl
inc
mov
push
movsb
push
add
or
jo
xchg
sub
ret
rorb
inc
out
pop
mov
movsl
cltd
mov
xor
jmp
psubb
mov
loope
or
inc
rolb
dec
test
rcll
ret
aaa
pop
insb
xchg
loop
and
inc
ljmp
push
mov
cs
js
inc
mov
in
xor
imul
inc
jo
stc
mov
aas
cmp
hlt
hlt
mov
sub
clc
pop
mov
jge
cmp
loop
sbb
jecxz
repnz
mov
dec
daa
or
ret
leave
xlat
pop
loop
mov
aas
cmp
das
mov
or
pusha
inc
mov
fstpt
addr16
fs
pop
insb
pop
pop
daa
push
jp
push
lods
mov
movsb
adc
insl
in
xor
in
mov
inc
inc
mov
mov
xor
jno
jl
sbbb
xchg
test
dec
sub
ret
imul
add
pop
nop
repnz
cld
call
pop
mov
lret
mov
push
xchg
fucomi
mov
mov
adc
stc
and
adc
fstpt
mov
mov
rolb
addr16
nop
lea
mov
inc
mov
mov
fstl
or
push
push
and
add
test
movsb
adc
loopne
pop
cmp
ss
dec
fcmove
mov
jmp
mov
aaa
pop
sub
in
jne
mov
or
movsl
ds
mov
js
repz
pop
lcall
jb
inc
sbb
cltd
test
mov
sti
outsb
insl
push
dec
push
loop
mov
lea
out
loope
xor
cltd
pop
subl
outsl
cs
lds
notl
outsl
ret
jb
xchg
add
mov
push
push
xchg
test
push
mov
jnp
jnp
mull
push
jb
pop
pop
fwait
and
push
jge
fidivs
pop
sbb
push
xchg
repz
pop
mov
add
popa
push
shrb
shl
aaa
xor
or
fwait
and
arpl
inc
ret
in
jecxz
loope
cmc
jmp
mov
and
cs
cmp
hlt
loop
dec
fsubrs
daa
cmc
rolb
fbld
jge
and
icebp
sahf
mov
xor
lret
sti
cmp
dec
pop
cmp
movsl
cwtl
lea
inc
popa
cmc
ss
xchg
mov
in
jb
aad
jbe
jnp
xor
cmp
outsb
cmp
or
add
pop
cmc
pop
lahf
cmp
sbb
lods
pop
aad
popa
iret
das
or
fimull
jmp
xor
sub
enter
lret
sbb
div
adc
cmp
test
fmul
jp
hlt
sbb
in
mov
dec
lcall
push
add
xchg
flds
dec
xor
lret
mov
sbb
push
pop
push
pop
fiadds
xor
add
lahf
pop
push
add
mov
lock
icebp
dec
insl
subl
ret
fwait
inc
push
std
scas
mov
mov
and
jg
orb
pop
pusha
jge
nop
cmp
outsb
cmp
jg
ret
inc
lahf
xor
adc
imul
jmp
inc
adc
insb
dec
adc
cwtl
cli
mov
fucomp
push
xor
push
inc
mov
xchg
insl
cs
jmp
daa
add
stc
daa
cmp
outsl
sub
xchg
jae
bound
mov
call
dec
gs
inc
xlat
popf
push
sahf
and
sub
lret
push
xorl
loop
mov
lret
jl
ds
bound
dec
sub
jp
push
popf
scas
add
mov
dec
inc
out
in
xor
xchg
sti
cmp
negb
lods
mov
mov
pushf
popa
fsubrs
fisubl
mull
adc
xorl
add
dec
sub
inc
int3
dec
lds
adcb
sub
inc
pop
es
xor
jg
cmpl
mov
jne
and
pop
jb
jne
xchg
fldcw
in
mov
dec
add
js
outsl
xchg
jl
scas
mov
pusha
pushf
lcall
fcomip
cwtl
pop
cmp
out
jae
push
xor
pop
push
mov
cmp
cmp
aad
jmp
add
clc
aas
imul
jmp
push
sub
jecxz
xor
mull
cld
mov
sub
jnp
aaa
pop
ret
pop
dec
testl
std
in
jb
lahf
cmpb
jecxz
jne
gs
and
lea
ds
jg
movsl
or
inc
mov
pop
ret
fadds
xchg
shr
pop
jecxz
mov
mov
adc
stos
xchg
dec
insb
aad
dec
clc
mov
lods
and
std
add
test
jne
aas
ret
sub
pop
cmp
add
push
ret
cli
in
insl
push
adc
outsb
cwtl
mov
movsl
mov
roll
sbb
cmpsb
dec
sub
outsl
jge
or
fmuls
inc
repz
iret
mov
mov
test
fs
ret
or
xchg
call
adc
stc
dec
ja
xor
cli
push
inc
sbb
fimuls
xchg
shr
enter
aad
sub
dec
mov
and
ret
int3
hlt
loope
lock
icebp
adcl
mov
mov
xchg
movsb
pop
jb
cs
dec
jbe
cmp
or
les
xor
adc
sub
lret
jno
imul
xchg
xor
cmp
out
lods
int3
inc
mov
popa
jmp
xlat
outsb
mov
fsubr
fstpl
pop
add
sbb
xor
leave
leave
jo
pop
add
sbb
jbe
js
add
and
lods
mov
pop
cmp
mov
test
mov
addb
hlt
push
fmuls
int
xlat
scas
push
orl
aaa
std
popf
push
dec
cwtl
movsb
ss
pushf
popl
sti
lea
xor
movsb
ja
sbb
xbegin
mov
icebp
iret
pop
icebp
pusha
out
jns
movsl
imul
out
push
inc
add
in
push
xor
mov
clc
dec
fdivs
adc
cmp
lods
sub
pop
mov
push
jge
and
bound
xchg
sub
jg
fcmove
aad
cli
pop
loope
ret
out
lret
jg
push
mov
or
xchg
daa
mov
or
dec
imul
lods
gs
push
popf
jp
rol
mov
nop
jns
push
lods
into
cmp
iret
sbb
shll
push
mov
mov
cmp
daa
jne
adc
pop
aam
mov
ja
pop
int3
sbb
sub
push
add
xor
pop
sbbl
int3
std
jmp
jns
aad
insl
pop
xchg
cmpsb
mov
ret
jb
add
hlt
mov
scas
ret
mov
mov
fiaddl
dec
lods
repnz
addb
testl
mov
mov
adc
inc
loopne
lds
inc
pushf
add
pop
jmp
pushf
loope
stos
add
cltd
lret
and
leave
mov
imul
pop
jmp
mov
mov
add
add
arpl
inc
shl
cli
xor
leave
into
push
sbb
or
inc
aad
pop
jmp
cmp
ljmp
cmpsl
mov
cltd
ret
mov
inc
xchg
xchg
and
cltd
mov
xchg
push
pop
repz
xchg
ljmp
aaa
xor
test
xchg
hlt
fildll
mov
add
pop
jae
sbb
add
filds
int
add
movsb
and
cli
xchg
fsubrl
push
filds
dec
mov
mov
sub
or
cmp
inc
divb
cmp
cld
iret
stc
cmp
cmp
lock
addr16
mov
lea
std
push
sarb
adc
push
movsb
jg
adc
ret
xor
rol
lods
lcall
sub
imul
repz
and
mov
sub
int3
test
vpmulhuw
and
ds
mov
dec
jne
lods
ret
mov
pop
lds
clc
sbb
jbe
push
mov
in
push
pop
adc
xchg
push
popf
xchg
cmp
jns
pshufw
add
daa
aad
test
xor
inc
mov
mov
cmp
lret
sti
sbb
dec
idivb
popa
shrb
incb
jnp
stc
lods
out
lret
rorl
adc
popf
mov
inc
adc
outsb
sub
js
mov
iret
roll
mov
scas
add
jb
call
push
mov
xlat
pop
lea
ret
mov
shll
arpl
out
push
and
cs
dec
idiv
mov
leave
int3
outsb
xor
sub
mov
push
rolb
cmp
mov
inc
cmp
fwait
arpl
leave
and
mov
mov
call
scas
loopne
and
push
jb
xchg
faddl
scas
sbb
cmc
fstpt
mulb
test
mov
cwtl
movsb
push
pop
add
mov
addl
and
out
test
push
xchg
sbbb
mov
jno
xchg
ret
insb
sub
hlt
sub
sub
mov
out
adc
sbb
sbb
cmp
jl
xchg
lahf
cld
mov
pop
fistpl
in
es
cltd
mov
mov
jne
xchg
xchg
push
pop
add
out
push
inc
stos
psadbw
mov
dec
out
mov
sbbl
jne
lret
or
repnz
lods
mov
inc
push
popf
cmp
testb
jp
mov
lea
mov
lds
mov
push
jns
out
xor
push
imul
dec
push
mov
popf
inc
imul
jne
xchg
lret
push
jo
gs
push
pop
fwait
repz
jmp
jmp
inc
js
and
loope
loop
icebp
adc
adc
scas
xchg
jae,pt
inc
jno
sarl
push
jp
ret
cmp
ds
pop
cmp
xlat
mul
jmp
in
jge
fistps
icebp
cs
mov
je
pop
jmp
addr16
cmp
pushf
xchg
outsb
int
nop
push
sbb
in
adc
ja
addr16
and
pushf
push
mov
das
dec
mov
sbb
jp
lock
and
push
jns
jb
xchg
xor
jno
pop
movsl
jo
xchg
and
and
pop
mov
dec
das
dec
scas
push
push
inc
in
inc
pop
mov
ret
mov
cmp
stos
loope
sbb
sbb
mov
outsl
dec
xchg
inc
mov
mov
pop
in
mov
sbb
lret
pop
or
push
enter
cwtl
pop
loope
les
mov
cmp
mov
xchg
jp
push
dec
into
loopne
mov
add
push
std
dec
pop
xchg
pop
pop
inc
push
jne
and
add
sbb
mov
stc
push
icebp
push
xchg
mov
add
rolb
push
mov
test
pop
testl
mov
push
add
loope
mov
jne
mov
sub
sub
sarb
lea
and
outsb
mov
mov
in
stos
ja
cmp
sub
add
dec
decb
js
mov
popf
mov
mov
popf
out
out
stos
pop
out
xchg
jge
push
jbe
dec
mov
ds
out
mov
stos
bound
mov
pushf
push
call
or
je
xlat
mov
test
ds
and
cmp
testl
fwait
dec
push
add
dec
cmc
shlb
jo
xchg
lret
ss
pop
jl
inc
lcall
addr16
in
ds
imul
leave
pop
insl
aad
repz
sbb
inc
mov
inc
and
jo
dec
outsl
mov
fisubrl
pushf
in
mov
xchg
or
cmc
xchg
and
cld
add
popa
mov
ror
sub
pop
in
mov
scas
jnp
cli
pop
xchg
adc
xchg
push
push
es
and
push
jmp
ret
sub
mov
mov
mov
aas
movsl
enter
pmulhw
add
cmp
adc
fimull
popa
sbb
cmpsl
insb
push
dec
fwait
leave
enter
mov
or
add
inc
out
xchg
mov
or
xor
mov
jbe
andb
js
inc
stos
xchg
inc
inc
imulb
mov
xchg
outsl
push
mov
jmp
fwait
jge
leave
es
dec
push
mov
jle
inc
push
icebp
stc
je
andl
movb
leave
inc
inc
mov
sbbb
cmc
jecxz
mov
add
mov
pop
pusha
outsb
push
stos
and
ret
mov
dec
sbb
adc
xchg
xchg
mov
ret
sbb
push
fisttps
lods
cmp
sbb
jns
stos
adc
adc
push
jb
iret
sbb
mov
inc
lret
pushf
xor
shrl
sub
mov
cmp
insb
shl
mov
mov
imul
add
loop
ss
loope
cmc
xorl
int
xchg
sbb
roll
cli
fldl
mov
js
jmp
mov
sbb
fsubrl
mov
fld1
mov
and
jmp
pop
sbb
jmp
mov
and
add
xchg
inc
mov
int3
sub
pop
in
push
or
mov
rorb
xor
adc
dec
lds
mov
fdivl
cmp
xchg
fwait
jge
xchg
xchg
and
add
fcmovne
jge
inc
adc
jmp
inc
stos
jg
jp
push
movsl
adc
sub
popf
fcompl
cmp
cmp
push
mov
jae
push
test
or
orb
mov
cmp
enter
sub
dec
xor
dec
mov
hlt
mov
pop
lea
aam
jno
andl
push
mov
insl
lcall
fsubl
shll
addl
jecxz
ret
dec
hlt
bound
push
bound
aaa
les
vucomiss
insb
shlb
sub
pop
mov
cmp
leave
sub
jp
xor
inc
pop
mov
fcomp
cli
jo
loop
mov
lds
outsl
mov
stos
sbb
mov
mov
jno
cmpsb
jnp
imul
sbb
pop
sub
imul
xor
pop
inc
repz
add
jecxz
pop
sti
pop
dec
cmpl
pop
push
push
pusha
mov
out
dec
sub
add
mov
cmp
dec
jo
cmc
pop
xchg
outsl
add
dec
xchg
pop
jge,pn
xor
jo
call
push
fnsave
pop
test
test
mov
sub
sti
xor
mov
sub
loop
and
mov
or
and
cmp
out
mov
ss
or
pop
sbb
out
mov
sub
imul
ret
neg
fnstenv
scas
out
iret
xor
xor
jne
adc
imul
sbb
dec
fstpl
ds
aaa
pop
push
sbb
xor
stos
cmc
xlat
adc
push
mov
mov
xchg
aam
or
sbb
push
mov
insb
or
out
dec
cmp
add
mov
push
mov
scas
or
push
cmp
pushf
iret
xor
adcb
pop
shlb
inc
lahf
adc
xchg
push
mov
xchg
les
dec
sub
test
sub
insb
inc
mov
or
jge
scas
mov
pop
or
inc
sbbb
fstpt
mov
add
mov
xor
sbb
je
clc
ret
jb
jno
lods
lods
pop
lret
mov
xor
dec
jmp
pushf
mov
xchg
dec
rolb
mov
jo
test
lds
test
mov
stc
cwtl
add
lahf
and
fcoms
jae
jb
cs
in
jb
adc
push
mov
lock
ja
shlb
xchg
imul
popa
cmp
mov
mov
push
pop
push
sub
xor
add
lret
pop
rolb
xchg
imul
int3
fcom
shl
mov
inc
sub
out
pop
data16
push
lret
cs
idivb
xlat
sub
fcmovu
sub
sarb
adc
jl
leave
sbb
aaa
fstpl
sbb
lock
call
xor
lret
jmp
loope
push
rcl
inc
cld
fimuls
les
scas
or
jae
movsl
scas
int3
inc
mov
inc
fistl
mov
addb
mov
pusha
subb
out
push
sbb
cmpsb
outsl
push
sti
test
call
pop
scas
dec
xor
ror
pop
out
cwtl
icebp
push
xor
inc
add
inc
mov
or
or
push
fs
fldcw
sbb
mov
stos
loop
loop
mov
cmp
jb
outsl
and
mov
pushf
mov
rolb
cmc
int
mov
cmp
or
mov
pop
gs
jns
fsubrl
in
or
xchg
int
or
sub
adc
scas
popa
pop
insl
mov
mov
and
cmp
mov
push
jnp
xchg
pop
pop
xor
insb
sbb
fmull
push
dec
or
sub
mov
add
aam
mov
mov
ret
fwait
imul
sub
std
jne
int3
inc
mov
pop
jns
push
mov
and
mov
ret
das
call
sbb
es
sahf
test
push
je
dec
mov
in
or
sbb
std
jo
cltd
or
fs
pop
mov
sub
mov
xor
xlat
add
dec
jge
fisttpl
jge
ja
push
push
adc
mov
mov
leave
lret
cmp
cs
mov
adc
pop
jns
js
jp
std
inc
test
aam
xchg
repnz
fimuls
or
xor
out
adc
mov
xor
es
out
mov
cmp
pop
pop
pop
in
out
push
popf
push
pop
pop
jns
movsb
adc
jae
sub
lret
sbb
int
mov
lahf
shlb
sub
mov
push
js
sbb
and
cli
popa
xor
leavew
and
lods
cmpl
stc
cmpsb
scas
dec
cmc
adc
jae
sub
cld
lret
sbb
sub
mov
cld
xlat
shr
xor
jge
dec
mov
rcrb
adc
into
insl
cmp
sub
rcrb
mov
xor
push
sub
mov
aad
xor
loope
lods
or
ljmp
aaa
stc
lods
jecxz
cld
xchg
nop
lea
mov
pop
or
jo
adc
dec
xchg
pop
das
nop
fstpl
sub
rorb
or
outsl
cmp
gs
ror
and
mov
outsl
rclb
sub
int3
jg
es
cmp
xchg
enter
clc
test
cmp
push
adc
mov
adc
ret
push
inc
shlb
sbb
cld
lds
dec
cmp
fwait
bound
mov
fcompl
lahf
add
sub
cmp
inc
addl
mov
cmp
add
rclb
jnp
cmp
sahf
pop
dec
rcrb
std
add
shl
xor
ret
scas
sub
sti
or
sbb
lret
fdivs
pop
fldenv
xor
or
or
sbb
push
clc
lret
xchg
push
push
mov
and
mov
mov
enter
lds
cli
xchg
or
leave
das
adcl
mov
cmp
jp
roll
push
out
xor
rcll
iret
xor
push
adc
shl
mov
outsl
inc
sahf
ljmp
sahf
xchg
sub
scas
adc
cmp
cmpsb
out
adc
gs
sti
push
mov
xchg
mov
mov
push
imul
xchg
cmp
js
jl
jle
dec
jb
pop
mov
mov
pop
shl
pusha
lcall
xor
sub
arpl
movb
push
sbb
or
int3
push
inc
or
pop
lock
jae
xor
inc
dec
sub
imul
dec
fdivrl
add
xor
int
popa
mov
test
add
fxch
sti
adc
cltd
cmpsb
jge
repnz
mov
push
push
fbld
in
loop
jmp
mov
cmp
mov
pop
into
xchg
push
in
mov
pop
outsb
mov
dec
loope
sbb
out
jns
mov
jg
cmp
push
ss
xor
and
or
and
imul
mov
sub
mov
imul
fsubs
jns
jns
jno
or
sbbb
nop
mov
mov
or
std
sub
sbb
mov
aam
test
or
pop
pop
pop
push
xchg
cmp
xor
cmc
mov
adc
pop
rorb
mov
out
or
or
lods
lret
mov
sbb
out
outsl
iret
sbb
jle
jno
xchg
adc
sar
inc
ds
les
xchg
inc
and
in
outsl
sarb
iret
sbb
mov
push
jp
lret
inc
sbb
xchg
sbb
inc
push
ficompl
push
aas
push
leave
je
push
or
gs
cmp
stc
and
xor
out
mov
xor
push
fldl
add
cmpsb
pop
lock
adc
and
leave
mov
pop
pop
add
cld
jge
aaa
xchg
inc
stc
jbe
sbb
add
cmpl
xchg
dec
les
sbb
hlt
xor
ds
inc
or
cmpsl
add
sbb
sbb
pop
push
stos
sub
jl
bound
adcl
pop
int
in
pushf
xor
lods
mov
jmp
sub
cmp
stc
subl
xor
dec
in
fcompl
sub
jns
lds
lahf
pop
out
xor
lock
fs
mov
lret
inc
or
push
and
nop
mov
lea
inc
fistl
imul
mov
das
scas
mov
imul
pop
add
push
cmp
jmp
xor
cltd
cs
inc
fwait
dec
xchg
into
inc
pop
dec
push
or
fiadds
jp
dec
xor
mov
jg
xor
pop
mov
aaa
frstor
negl
int
xor
push
jge
outsl
mov
push
insl
int3
pop
mov
jmp
aas
aas
aad
inc
inc
nop
xchg
int
cmpsl
cmc
hlt
outsl
push
dec
mov
push
jge
ret
sarl
stos
mov
es
adc
out
cs
xchg
add
jo
imul
js
pop
push
jge
push
mov
push
sbb
push
fisttps
repz
clc
fistl
inc
add
aam
call
ss
xor
jmp
addl
and
cmc
mov
sbb
sbb
jns
sub
and
les
sbb
bound
dec
std
fldt
xchg
aad
adc
cmp
mov
mov
ss
pushf
enter
jp
push
cs
mov
or
xchg
mov
in
out
xchg
int3
loop
mov
jg
outsl
lret
jno
mov
adc
jnp
fiadds
icebp
imull
jl
inc
jle
push
jbe
xchg
cmp
push
or
inc
aaa
and
jle
add
cmc
movsl
mov
xchg
add
cmpsl
verr
push
lods
pop
cs
repz
sub
sbb
pop
ss
inc
sahf
or
cli
lods
add
lea
dec
bnd
inc
dec
lds
test
mov
sbb
mov
sbb
add
imul
orb
pop
test
dec
dec
push
imull
push
je
adc
jecxz
pusha
and
xor
test
mov
je
in
adc
xchg
sbb
out
clc
pusha
fldenv
pop
outsl
insb
loopne
stos
sub
cltd
xchg
pop
dec
adc
xchg
scas
cwtl
cmp
test
out
sub
out
jmp
xchg
mov
jae
out
cmpb
icebp
mov
orl
nop
push
mov
cmpsb
add
jl
jmp
push
in
xchg
test
inc
push
xchg
in
mov
dec
pop
lods
mov
sub
imul
movsl
cld
ljmp
arpl
popf
in
sbb
jnp
push
xor
ja
adc
mov
iret
jnp
lds
adc
pop
jbe
push
pop
inc
shll
xchg
test
int
cmp
mov
sub
push
ljmp
lock
mov
jle
aam
push
fsts
mov
call
jmp
inc
scas
pop
inc
and
outsl
jecxz
neg
mov
out
fildl
lods
sti
mov
and
mov
lcall
mov
xchg
in
aam
flds
cmp
push
cmp
pop
cmpsb
cmp
pushf
adc
xchg
mov
cmp
clc
xchg
add
cmpsb
pop
dec
sub
scas
ficoml
daa
dec
jae
insb
jecxz
and
sub
iret
cmp
inc
pop
cmp
sahf
xchg
xor
inc
adc
fsts
das
push
mov
or
add
nop
movsb
in
push
jns
mov
sbb
mov
cmp
mov
or
lahf
pop
lds
inc
sbb
addr16
out
dec
stos
lea
shl
sarl
mov
fcomps
sub
sti
and
js
test
sbb
outsb
xchg
cs
jmp
int
adc
push
inc
out
lods
cld
je
insb
mov
pop
fists
or
xor
fwait
lcall
pusha
sbb
negl
ret
js
decb
mov
pop
adc
pop
cmp
inc
stos
dec
out
xchg
mov
jle
add
cmp
mov
mov
aas
sbb
inc
mov
fbstp
js
sbb
int
push
mov
lock
popf
cmp
mov
fadd
jl
jnp
ja
and
sub
adc
sub
push
adc
jbe
pusha
cmp
xchg
and
push
jg
sub
scas
mov
sub
repz
fistps
inc
mov
jl
fwait
push
js
push
data16
fwait
jnp
ss
and
mov
into
daa
ds
in
out
xor
dec
mov
xor
push
xor
cmp
jb
pop
lods
push
insl
lcall
test
dec
ljmp
dec
popa
test
push
or
addr16
push
ljmp
inc
iret
nop
xor
mov
movl
xchg
xchg
inc
add
mov
mov
mov
cmc
sub
int3
jbe
jb
add
fadds
in
sahf
xor
testl
mov
jae
cmpb
test
rcrb
shll
and
ret
shll
movsl
hlt
dec
sti
xor
mov
add
adc
stos
xchg
int
int3
push
test
movntq
out
mov
inc
gs
pop
jp
test
rcl
fsubl
rcrl
jecxz
pop
out
shlb
cli
push
jecxz
mov
sbb
stos
add
in
mov
pop
add
jl
insl
lahf
mov
adc
pop
xchg
bound
pop
fwait
arpl
jno
or
outsb
test
imull
push
int3
mov
imul
mov
and
adc
cmp
and
mov
or
xor
mov
fsubrl
push
push
mov
hlt
fs
daa
cli
dec
mov
xchg
jg,pn
cmp
stos
mov
jmp
cmp
rcl
mov
cltd
sbb
cs
or
rcl
jns
sbb
rorb
pop
out
idivl
cwtl
pop
bound
jb
dec
inc
jecxz
mov
xlat
adc
aas
repnz
or
add
lea
loope
sub
movsb
push
pop
pop
scas
inc
insl
jge
lret
and
pushf
into
fiaddl
xor
push
add
and
lret
pop
stos
or
out
xchg
lret
mov
xor
dec
or
adc
scas
cmp
push
pop
inc
add
mov
in
mov
fcmovnbe
pop
daa
rcl
or
mov
loopne
push
lcall
sub
jp
dec
outsb
andl
enter
es
jb
ret
out
or
mov
jmp
mov
pop
jmp
lahf
xchg
insl
in
and
add
mov
aas
cmp
mov
sbb
xchg
jl
mov
test
cmp
in
add
mov
adc
fildll
outsl
lds
pop
push
mov
mov
xchg
mov
sti
lahf
data16
daa
pop
jae
stos
inc
push
mov
push
jmp
repz
push
mov
xchg
mov
inc
adc
xor
insl
out
loopne
lahf
stos
jbe
shll
mov
push
jle
test
fwait
or
pop
lds
inc
jno
push
loopne
sbb
inc
sub
movsl
dec
xchg
push
iret
sub
lods
jne
inc
pop
ficoms
rclb
mov
adc
mov
shll
out
jmp
xor
jle
mov
ja
mov
repz
clc
dec
or
add
movsb
cmpl
stc
or
jb
andb
stos
or
push
pop
out
dec
or
xor
jecxz
jmp
mull
je
es
mov
pop
jns
sbb
popa
xor
dec
insl
ficompl
jl
push
data16
movlps
sbb
xchg
rol
dec
sbb
cmp
imul
cli
rorb
or
scas
push
cmp
mov
mov
jbe
sbb
pop
in
mov
cltd
scas
aas
cmp
sbb
pusha
push
icebp
pop
xor
dec
jg
push
in
jmp
movsl
inc
lcall
jle
dec
sbb
or
scas
push
pusha
push
aas
int3
fidivrl
pop
js
push
push
insl
mov
pop
or
mov
jne
notl
jne
xor
leave
stos
mov
repz
dec
fwait
test
adc
or
xor
scas
cmpsb
decl
and
aaa
mov
stc
xchg
cmp
test
dec
inc
sbb
popf
adc
ret
fwait
inc
inc
push
sti
xchg
sahf
jae
mov
jle
pushf
jmp
mov
shlb
loop
mov
fdivrs
and
in
ja
pop
leave
pusha
loope
jle
bound
inc
data16
fwait
xor
inc
inc
cs
dec
inc
xchg
sbb
cli
sahf
inc
addr16
push
pop
std
fsts
cld
mov
dec
pop
push
mov
mov
push
dec
jbe
call
scas
push
push
cmp
and
push
sub
cmp
jbe
cmc
mov
leave
in
mov
in
pop
test
test
or
xor
add
mov
hlt
cwtl
pop
fildl
pop
lret
outsl
cli
xor
js
in
mov
add
and
sbb
outsb
mov
icebp
sub
test
imul
xor
rcll
cltd
push
mov
dec
int
movsl
dec
cmc
push
imulb
jnp
pop
jmp
pop
xor
xchg
add
xor
nop
add
inc
ss
cmp
lret
bound
movsb
mov
and
repnz
inc
jne
pop
jmp
fdivs
sub
rorb
push
imulb
ret
jge
push
jp
stos
cmpsl
fnstcw
andb
and
lret
pushf
mov
pop
adc
pop
ret
inc
pushf
lock
fildll
gs
and
movsb
mov
fcoms
mov
or
inc
stos
insb
daa
negb
js
mov
jne
and
sub
add
mov
xlat
or
pop
addb
mov
icebp
rcrl
aam
mov
xchg
mov
or
shll
mov
cwtl
jge
xor
andb
pop
jb
jge
js
stc
push
xchg
push
jmp
std
mov
xchg
sub
jg
in
jle
jo
cmpsb
jnp
je
jmp
mov
pop
push
mov
rcl
push
sti
or
movsl
mov
faddp
into
and
fadds
cmp
mov
add
pop
jg
add
or
pop
rcll
mov
mov
sub
pusha
hlt
dec
cmp
out
jo
hlt
cmpsl
popa
dec
dec
addr16
and
jle
je
pop
bound
xlat
pop
rorb
sbb
mov
sub
pop
test
add
mov
imul
jns
lock
mov
mov
xchg
cli
jp
mov
in
lahf
test
cli
sub
cwtl
stos
clc
xor
jecxz
mov
sub
fldt
xor
dec
insb
cmpsl
xchg
pusha
repz
xor
pop
clc
or
pop
cltd
cmp
out
jge
ljmp
in
xor
imul
and
mov
add
cltd
lret
rcll
clc
pop
sub
jbe
fwait
push
jnp
xchg
insl
lcall
mov
jo
cmp
sub
or
scas
mov
mov
pusha
fdivs
fistl
xchg
out
cmc
cltd
inc
pop
sahf
cmp
scas
js
xor
push
test
add
loop
dec
jae
jmp
daa
rcrb
mov
pop
aam
dec
decl
mov
dec
jmp
xlat
push
dec
data16
ja
das
shll
movsb
scas
xor
into
sub
mov
insl
adc
inc
fdivrs
xchg
lret
clc
imul
adc
lods
pop
cli
cltd
add
mov
cli
cmc
rolb
test
push
hlt
in
pop
das
dec
scas
add
test
scas
jne
and
jp
add
in
inc
push
mov
and
or
fs
jge
lahf
outsl
nop
dec
insl
lret
mov
adc
add
ja
xchg
dec
jecxz
cmpl
pop
test
xchg
jl
int
pop
pop
insb
mov
xchg
mov
push
ret
xlat
and
fistpll
insl
test
scas
in
sub
mov
xchg
dec
sarb
movsb
rolb
fdivrs
add
aas
out
pop
mov
subb
arpl
lock
dec
popa
test
mov
or
cwtl
lret
or
int
ja
sbb
push
test
movsb
cmpb
cmc
jne
mov
bound
sbb
test
dec
mov
jnp
imul
pop
dec
movsl
sbb
or
xor
stos
or
movsb
pop
pop
sub
es
enter
push
cmp
pop
add
push
lods
loopne
add
mov
sub
cli
and
shl
fnstsw
xchg
adcl
ljmp
jecxz
xlat
jns
mul
mov
jecxz
aad
adc
aaa
adc
or
imul
lock
ret
mov
loope
add
adc
test
pop
aas
mov
and
stc
mov
into
xchg
add
nop
dec
jp
xor
adc
cmp
push
mov
cld
adc
xorb
push
daa
or
mov
dec
xchg
mov
stos
iret
arpl
xchg
jae
aam
out
push
mov
mov
xlat
adc
cmpsb
mov
cmp
into
enter
push
sbb
repnz
cmp
rorb
jnp
mov
jbe
popa
xchg
vcvtdq2pd
mov
jmp
jmp
dec
in
sbb
jnp
fs
adc
xor
loopne
add
es
sbb
pop
out
pop
sub
pop
ficoml
std
sub
or
iret
xor
dec
insl
cmp
aam
mov
stc
stos
fstp
xorl
sti
cmp
xchg
and
cmp
aad
mul
sbb
aaa
jno
adc
dec
sbb
cmc
enter
maskmovq
setae
popf
bound
pop
testl
pop
adc
stos
loopne
cmp
mov
bound
clc
lret
push
cltd
cmpsl
pop
adc
push
mov
lock
push
outsb
mov
andb
cmp
das
subl
movsb
jmp
cmp
push
test
stos
pushf
pop
ja
fwait
in
lahf
mov
test
mov
mov
mov
in
adc
mov
shll
cld
out
lret
jge
and
xor
jno
xor
mov
sti
mov
outsb
sbb
icebp
fimull
xor
insb
icebp
insb
out
movsl
jne
xor
pop
rcrl
jecxz
add
push
fs
in
xor
arpl
es
lds
jo,pt
dec
adc
cmpsb
fmul
sbb
nop
sbb
js
enter
popa
je
or
xor
ds
fistpll
call
or
rep
mov
pop
xor
arpl
mov
mov
fcomip
push
outsl
inc
rcrl
sbb
push
jp
jg
cmc
mov
push
int
dec
push
cmpsb
rorl
sbb
push
test
add
inc
repnz
mov
scas
inc
xchg
and
mov
sub
cmp
pusha
xor
fildll
arpl
rol
clc
js
mov
xchg
leave
sbb
gs
or
xor
sarb
push
loop
movntq
mov
mov
push
cwtl
repnz
inc
cmc
pop
fsubrl
cld
sbbl
bound
mov
icebp
xchg
or
cmp
outsl
repz
sti
fcmovnb
hlt
insb
ror
addr16
mov
lret
rol
cld
rorb
xchg
cmp
mov
lahf
dec
jb
addr16
pop
add
xchg
or
in
mov
pushf
inc
aad
lahf
insl
xor
jb
les
cs
mov
mov
xchg
sbb
addr16
sahf
inc
in
push
loope
pop
pop
outsl
scas
xor
push
imul
xchg
lock
aad
pop
xchg
insl
data16
jge
pop
stos
pop
xor
nop
cmp
insl
mov
adc
arpl
in
std
es
dec
aas
and
cwtl
dec
std
std
mov
mov
jmp
in
mov
popf
leave
js
xchg
mov
xorb
es
loopne
repnz
push
or
mov
stc
sbb
adc
push
or
imul
loope
xchg
mov
mov
popf
mov
xchg
xor
negl
jae
movsl
iret
enter
ror
push
movntq
and
outsl
mov
cmp
xchg
cmp
pop
aaa
lret
pop
pop
repnz
shll
cli
daa
jmp
outsl
xor
scas
loope
sub
sbb
add
js
in
xchg
sarl
lret
sub
outsb
jnp
mov
lahf
bound
xchg
mov
sub
pop
movsb
pop
les
lea
cld
mov
test
mov
jecxz
mov
ja
cmpsb
cmp
repnz
push
adc
out
insb
adc
lcall
adc
divl
and
mov
out
mov
enter
push
fistpll
cmpsb
lcall
rorl
notb
mov
rcrb
and
add
popl
sub
fldl
cmp
std
les
leave
ljmp
dec
adc
jp
aas
jmp
dec
das
das
sub
je
push
adc
xchg
sahf
frndint
stos
popf
scas
inc
fwait
cli
insb
movsb
sbb
arpl
dec
mov
sahf
push
loope
ljmp
mov
and
cmpsb
mov
mov
jmp
mov
jb
sarb
in
jecxz
xor
mov
sbb
in
loope
dec
fstps
and
xchg
js
in
adc
mov
mov
cmp
inc
imul
repnz
xor
jo
mov
sbbl
or
movsl
cmpsb
das
fwait
jge
les
clc
mov
hlt
xchg
cmc
in
insl
jno
xor
cmpl
loope
dec
lock
add
mov
andl
mov
cmc
xchg
ret
adc
rcll
das
push
es
mov
mov
lahf
mov
jo
andb
mov
cs
pop
jbe
cmp
push
sub
enter
int
jae
sub
scas
and
and
mov
fwait
add
fsts
scas
aas
repz
jge
aad
mov
data16
push
sbb
dec
xor
in
bound
fs
mov
pushf
adc
movswl
inc
sub
or
dec
sub
dec
mov
cmp
mov
and
shrb
loopne
mov
pop
dec
cmpsl
pusha
and
mov
cmp
add
data16
pop
inc
push
fdiv
mov
fs
loop
les
push
scas
pop
das
repnz
lret
test
testb
scas
mov
addl
jle
and
scas
mov
nop
or
ret
mov
les
sbb
and
sarb
jae
push
inc
or
dec
enter
inc
pop
call
and
out
iret
push
in
fwait
adc
lods
cwtl
and
and
mov
insb
or
ret
in
loop
jnp
mov
adc
inc
nop
aas
ficompl
outsb
mov
adc
loope
fidivrs
hlt
pop
mov
mov
mov
sub
cmp
or
mov
and
mov
cmp
les
mov
repz
and
pop
jnp
outsl
out
sbb
shlb
cmp
test
out
imul
fldt
push
and
pop
ja
push
sub
loop
sbb
cmp
and
pop
sub
push
stos
or
gs
pop
es
mov
sti
xor
push
or
negl
jo
test
orl
outsl
mov
hlt
inc
jecxz
fistl
clc
fsubl
test
ret
imul
fs
adc
jb
push
repnz
sti
adc
lock
pop
push
out
push
push
lret
xor
test
mov
mov
adc
cltd
mov
add
pop
sub
shr
fwait
or
sub
popf
adc
mov
lret
mov
filds
mov
enter
arpl
mov
pusha
out
cli
jp
push
fdivr
movsl
sbb
xchg
loopne
jmp
stc
push
mov
xchg
fnstcw
testl
rcrb
incb
or
sbb
lods
rorb
jmp
sub
jno
or
pop
lea
jae
subb
lds
mov
rclb
insb
or
adc
ret
jge
mov
dec
rclb
rol
mov
shl
imul
pop
lea
pop
mov
mov
popf
sbb
sbb
ljmp
inc
orb
and
inc
push
fs
xor
add
test
nop
jmp
movsl
out
jge
jne
jnp
stc
ljmp
xchg
out
xorl
rol
pop
das
ficompl
sahf
lahf
insb
fsts
call
push
xor
xchg
movsl
or
pop
hlt
add
push
xlat
mov
enter
mov
mov
mov
inc
popa
jo
fisubs
inc
test
sub
cltd
popa
sti
mov
sub
out
repz
mov
testb
add
in
adc
pop
fsts
mov
into
les
xlat
jmp
ret
mov
cmc
test
aas
mov
lock
mov
add
cmp
cmpsb
adc
lahf
mov
xchg
stos
xor
adc
push
adc
mov
std
loopne
mov
idivb
xchg
lret
addl
jle
push
pop
jp
xor
outsb
jno
shrb
rcl
mov
test
and
inc
test
mov
adc
fs
dec
outsl
push
adc
xchg
int3
inc
rcr
dec
lods
sahf
mov
or
mov
ret
gs
xor
imull
mov
jns
dec
push
movsb
in
sub
xor
stos
xor
adc
mov
push
cmp
and
insb
dec
pop
pop
dec
mov
scas
jns
andb
gs
pushl
xchg
adc
jg
pop
shr
fnstcw
cmc
dec
stc
mov
sub
out
lret
jl
sti
aas
push
inc
clc
popf
cli
push
xchg
test
sub
dec
nop
jmp
imul
insl
or
aas
jae
mov
mov
std
scas
fidivl
xchg
cltd
mov
aaa
sub
push
cwtl
loope
stc
rclb
cld
sub
mov
push
dec
mov
cmp
adc
bound
xor
testl
mov
jle
push
cmp
lret
sub
lods
repz
pop
bound
cmp
mov
imul
cmpsb
sbb
stos
sbb
aam
push
cmpsl
add
test
push
pop
in
jp
ss
cs
jno
iret
mov
fwait
xlat
pop
xor
loop
jg
mov
mov
or
lcall
pop
push
data16
jns
movaps
popf
jne
and
adc
lods
pop
icebp
rclb
setg
inc
jge
aam
ja
mov
xchg
ja
sbb
in
sub
lea
ljmp
cmpsl
dec
cmc
sub
mov
je
xor
shll
imul
sub
cmpsb
ret
add
xor
dec
and
mov
or
cmpxchg
cwtl
hlt
xchg
loop
daa
push
ljmp
sub
clc
xor
sub
and
inc
std
dec
lds
mov
mov
popf
xchg
insb
cli
cmc
hlt
adc
ljmp
adc
push
sub
push
adc
or
inc
add
mov
add
adc
fdivrl
and
adc
int3
sarl
fsub
out
mov
ljmp
cs
push
jle
in
fstpl
mov
and
cmp
mov
roll
andl
dec
in
repnz
mov
ret
enter
sti
sbb
xchg
pop
int
fistpll
xor
cmpsl
pop
or
addr16
notb
cmp
cmpsl
scas
mov
lcall
dec
inc
call
insl
mov
dec
and
scas
nop
movsb
and
push
insl
aad
sbb
insb
insl
pop
ja
incb
push
add
test
jb
in
add
roll
mov
sbb
lret
adc
outsl
fidivs
cmp
sbb
aam
mov
pushf
cmpsl
and
andb
ja
jne
in
sub
push
shlb
sbb
shll
bound
ja
cwtl
repz
std
sub
cmp
aad
inc
push
mov
dec
pop
add
mov
nop
aas
leave
call
std
sbb
push
loopne
fmull
or
fcmovne
aad
mov
dec
lods
lahf
inc
cmp
sti
pop
sbb
pop
daa
inc
fdivrp
jg
dec
scas
jns
mov
or
xchg
into
in
out
inc
push
sub
sub
pop
std
and
fdivl
lds
xor
mov
inc
pop
adc
xchg
je
add
cmp
pop
cmp
sbb
fistpl
jb
push
in
sti
fistl
add
jne
out
and
jmp
repz
jo
or
adc
pop
jb
push
add
je
mov
cmp
jnp
sbb
and
push
lahf
sysenter
mov
pop
dec
xchg
jmp
dec
dec
xor
lea
jle
daa
mov
fidivl
icebp
mov
out
sbb
cmc
sbb
jne
sub
scas
es
fcomps
push
fisubs
sbb
test
lea
xchg
insl
incb
push
push
jp
xchg
lcall
ljmp
test
mov
xor
adc
fsubrl
sbb
mov
inc
mov
inc
mov
push
aad
pusha
mov
pop
adc
dec
aaa
push
xchg
inc
js
or
scas
nop
or
mov
xor
nop
leave
shlb
outsb
sbb
ret
inc
push
inc
insl
enter
jl
imul
xchg
js
lahf
out
int
pop
and
or
and
jne
bound
cs
mov
insb
cmp
sbb
sarl
fmul
dec
inc
sub
in
xchg
mov
cltd
into
mov
mov
inc
shr
fprem
mov
xor
pop
xchg
pop
dec
stos
push
inc
loope
fwait
xchg
repnz
lods
hlt
mov
jbe
pop
and
rolb
pop
fnstsw
jl
dec
pop
inc
xorl
dec
jns
pop
xor
push
mov
lds
cmp
xchg
jge
fisubs
dec
push
leave
lods
push
xor
pop
pop
cmp
or
adc
jne
and
sbb
push
jmp
nop
nop
popa
jnp
xchg
cwtl
push
dec
dec
cli
popf
outsb
mov
inc
sarl
jnp
and
lea
outsb
cmp
push
push
sbb
xor
mov
or
movsb
mov
sub
xchg
ficomps
mov
icebp
pop
xlat
outsl
cmovge
sub
test
je
jo
or
out
lock
dec
mov
adc
dec
xchg
mov
xchg
push
and
jg
into
xchg
mov
aam
jne
xchg
jnp
jecxz
imul
nop
loop
leave
test
inc
rorb
sti
mov
popf
hlt
xchg
jns
cld
adc
push
lahf
je
pop
lret
and
shlb
addr16
jle
cmp
mov
ja
push
hlt
lock
leave
ljmp
testb
das
xchg
jle
cmp
inc
lret
in
insl
push
pushl
lds
mov
xchg
xchg
or
or
insl
adc
pop
and
pop
mov
lahf
shlb
mov
jno
std
stc
xchg
aad
adc
int
popl
clc
sbb
pop
int
push
popf
dec
repnz
ss
dec
mov
aam
repnz
into
test
cmp
or
jge
cmc
sub
and
or
cli
outsb
adc
add
jmp
shrl
dec
roll
mov
jns
pop
adc
or
sbb
fiaddl
sub
mov
dec
xchg
push
enter
mov
jno
push
inc
outsb
int3
mov
cmp
jl
push
mov
fs
push
sbb
mov
pop
mov
push
jecxz
je
push
fists
sti
push
pop
cmp
addr16
adc
cltd
jmp
add
pop
enter
negl
rcrb
adc
gs
mov
jg
sub
fs
imul
pop
xor
push
cmpsb
push
mov
loop
popa
push
lds
stos
push
loopne
jge
insl
and
mov
add
incl
das
jmp
mov
daa
mov
scas
dec
inc
jno
lret
out
sbb
sub
dec
pop
add
mov
nop
adc
mov
adc
or
push
ffree
or
push
add
xor
shl
push
inc
in
outsb
jnp
cmp
add
pop
jmp
mov
scas
mov
cmpsl
inc
mov
les
xchg
orb
dec
jmp
lahf
push
mov
bound
aam
jmp
ret
mov
or
pop
leave
lods
mov
aad
testl
daa
enter
jo
add
push
inc
inc
test
jbe
mov
lea
dec
in
repz
sub
imul
jb
cmp
and
mov
fucomi
in
dec
lcall
inc
ljmp
cmc
insl
mov
mov
xchg
xor
sti
aam
lods
jne
out
jl
mov
subl
cmc
mov
and
or
cs
fcoml
mov
xchg
add
sbb
mov
fwait
decb
push
das
mov
je
testb
and
fs
and
fs
and
cmp
mov
int3
mov
int
push
scas
push
jne
mov
jp
cld
int3
fistpll
adc
cmp
nop
aad
outsb
shll
fisttpl
push
pop
xchg
jp
ret
adc
loope
inc
inc
mov
mov
adc
mov
sbb
insl
jge
or
pop
push
cmp
xor
out
sub
fiadds
mov
jmp
rorb
sti
mov
jecxz
lock
dec
xor
pushf
pop
mov
mov
lcall
cmp
or
mov
cmpsl
and
mov
lcall
jb
push
push
insl
xchg
pop
or
xchg
dec
jmp
fs
out
mul
lods
movsl
jne
das
outsb
scas
das
lret
dec
adc
dec
sub
in
mov
stos
jb
cmp
insl
or
mov
adc
out
inc
sbb
jl
out
int3
push
pop
and
jo
in
xor
rcll
push
iret
lcall
xchg
mov
cmpsb
or
cmp
pop
out
jbe
jge
inc
idivb
sti
jbe
mov
push
out
jg
mov
pop
and
aas
mov
push
lcall
inc
push
fisubrl
push
cmp
sti
iret
or
cmpsb
jno
push
insl
inc
sub
adc
repnz
fcmove
lret
ss
daa
icebp
icebp
cwtl
aas
cmpb
mov
or
dec
jo
cmp
pop
das
sbb
adcl
mov
rorb
or
ror
fcmove
xor
test
jge
int
leave
or
sub
int3
aad
rorl
test
and
addr16
mov
sub
xor
sub
dec
daa
mov
pop
mov
or
lods
dec
mov
inc
addr16
mov
mov
xchg
arpl
or
mov
lea
pop
test
cmp
pop
mov
jmp
idivb
push
mov
clc
sti
xchg
fisttpll
ja
mov
int
jb
mov
push
mov
mov
nop
jne
cmp
jo
ffree
test
jl
cmp
out
popf
fdivl
nop
cmp
dec
xor
lea
cmp
jl
dec
lcall
shlb
rol
test
decb
out
test
fildl
mov
sahf
jo
and
push
test
and
addl
and
dec
stos
jmp
rcrl
jge
adcb
les
xchg
popa
daa
pop
sub
cld
dec
enter
sub
ror
and
push
dec
fsub
stos
lret
adc
int
arpl
mov
ss
in
jno
push
jb
test
int3
clc
leave
or
test
mov
mov
inc
shrb
dec
pop
xchg
push
mov
mov
stos
inc
pop
push
jle
sub
imul
xchg
int3
xor
movsb
cli
mov
jp
jge
nop
fdivl
sub
cltd
dec
outsb
xchg
fsubl
repnz
popa
sbb
pop
clc
hlt
mov
jne
sti
mov
push
negb
inc
pusha
jl
and
cltd
inc
pop
xchg
jae
add
sbb
lds
or
test
mov
xchg
jnp
sub
stos
negb
bound
lret
adc
xchg
popa
loop
cmp
out
pushf
sub
push
rcl
cmp
xor
dec
xor
repz
das
or
movsl
aaa
dec
imul
out
dec
push
clc
jnp
inc
adc
push
lahf
jns
mov
out
imul
gs
es
inc
jnp
xchg
ror
insb
out
sbb
sarl
nop
xor
cli
lods
hlt
and
rorb
fisttps
int
arpl
and
out
and
cmpsl
out
push
lods
dec
add
pop
les
add
shrd
adc
dec
adc
les
leave
fwait
dec
mov
cmp
push
lods
imul
orl
lods
icebp
lods
and
jecxz
mov
adc
mov
push
mov
mov
inc
pop
popf
jmp
inc
jae
cmp
rclb
inc
and
testb
mov
popf
int
sbb
fstpt
dec
mov
dec
mov
pop
mov
xor
mov
cmc
imull
sbb
scas
pop
add
fnsave
aad
and
out
mov
cltd
rcrb
jbe
shll
int
fsubrl
jle
clc
je
sub
xor
test
inc
shl
insl
push
mull
lock
add
sub
add
sbb
jo
xor
xchg
icebp
add
test
mov
lret
in
sub
test
cli
cmpl
mov
test
cli
movsb
and
cmpsb
xor
jo
jmp
fnstsw
pushf
ret
mov
js
mov
mov
test
call
insl
pop
xor
push
roll
inc
cmp
cmpsl
sbbb
sbb
sbb
or
shlb
mov
ds
add
stc
jne
push
and
mov
jle
jmp
addl
in
in
or
add
cmp
in
fs
add
mov
mov
insl
repnz
cmp
loop
stc
stos
xorb
mov
xchg
jae
mov
mov
ljmp
xor
movsb
cmc
loopne
adc
mov
test
pop
and
inc
stos
ds
lods
or
xchg
mov
cs
adc
inc
into
xchg
in
jbe
inc
scas
cmp
or
int
clc
subl
movsl
xchg
orb
add
inc
push
jno
shrb
jne
imul
mov
decl
inc
xchg
push
icebp
mov
icebp
and
add
call
and
and
imul
call
jmp
jno
testl
fistl
or
adcl
adc
stc
jo
pop
jl
push
fimuls
stc
iret
mov
loope
and
shrd
and
pop
lret
repnz
xor
mov
flds
push
cmp
sbb
mov
aam
pop
ret
cmpsl
les
inc
jb
loop
cwtl
fwait
mov
sahf
roll
test
aas
out
call
addb
jl
lods
cmp
mov
loopne
imul
jo
testl
test
and
and
mov
jl
or
pop
add
cmp
add
pop
lret
dec
sub
or
outsl
sub
prefetchw
or
adc
cmp
cmc
pop
sbb
and
rorl
jns
repnz
mov
dec
cmpsl
das
xchg
shrb
js
cmc
and
or
clc
les
pop
jle
adc
fnstcw
push
jl
dec
and
adc
jge
popf
mov
leave
loopne
jmp
jle
into
push
shrb
sub
cli
mov
stos
xorl
xchg
xor
jns
fs
pop
or
test
pop
mov
mov
xchg
arpl
or
sahf
pop
jb
add
je
pop
add
cwtl
push
cltd
push
push
into
mov
insb
ret
enter
int3
jno
push
sbb
iret
mov
fwait
imul
dec
inc
push
call
xor
daa
cld
cld
sbb
rorb
fldl
adc
out
pop
jne
leave
addr16
pop
jbe
mov
das
outsl
sub
addl
cmpsb
ljmp
shl
jne
mov
push
std
inc
adc
sub
data16
test
jecxz
repz
jg
jle
mov
push
dec
pop
movsb
cmpsb
andl
mov
fmull
lahf
inc
push
int3
roll
test
mov
cmpsl
pop
ljmp
cli
mov
mov
jl
mov
fwait
insb
sbb
xchg
enter
mov
ret
subl
adc
xlat
call
jmp
mov
lahf
clc
add
fadd
rorb
push
mov
addb
int
and
jno
adc
xchg
in
test
icebp
push
inc
and
scas
lock
push
xor
mov
inc
jnp
subb
out
stos
iret
and
in
xchg
mov
insl
mov
jns
xchg
pop
mov
fwait
repz
mov
fwait
or
cwtl
ret
fdivr
ja
gs
es
or
inc
out
out
sub
add
jno
orb
ficoml
add
cmpsl
mov
inc
push
sub
out
pushf
inc
ds
sbb
jae
roll
imul
push
mov
push
js
mov
out
call
hlt
pop
les
ljmp
fucomi
jae
lds
test
out
ret
ret
test
add
rolb
jne
inc
or
lock
push
xor
xchg
out
lret
leave
pop
daa
dec
and
in
out
fwait
add
xchg
clc
mov
mov
outsb
or
pop
out
mov
cmc
mov
sbb
dec
sarb
xor
leave
add
test
mov
aaa
stos
push
shrl
mov
jo
cmp
fisttps
sbbb
stos
sub
data16
out
dec
imul
sar
jmp
rcll
push
push
push
pop
and
ja
dec
stos
das
stc
pop
mov
jge
inc
fdivl
iret
cld
pusha
imul
addr16
pop
add
nop
lea
xor
xlat
movsb
xor
cld
repnz
scas
in
inc
dec
push
and
dec
jns
push
mov
push
jno
mov
adc
testb
push
stos
mov
xchg
roll
mov
pop
push
sti
inc
out
aas
dec
sbb
cli
hlt
push
xor
fisubrl
cld
out
ret
ss
push
mov
les
movsb
out
pop
xchg
inc
das
jle
add
push
cwtl
sbb
jno
inc
out
mov
pop
xor
dec
dec
rcrl
ret
pop
cli
aad
sbb
inc
xor
inc
push
mov
and
popf
push
mov
push
xchg
xchg
xor
sbb
adc
and
jmp
and
lret
fisttps
daa
insb
ret
stos
inc
or
call
and
ret
movsb
sub
push
jge
xchg
cld
and
mov
imul
outsl
cmp
mov
mov
and
mov
lea
mov
rcr
ss
xchg
call
push
push
jne
ljmp
shr
lds
mov
dec
cmc
inc
push
clc
lret
aaa
or
xor
jecxz
add
mov
rcrl
pop
gs
stc
xchg
xor
test
dec
push
fucom
shr
pusha
movsl
push
or
ljmp
addr16
push
fdivs
aam
cmp
sbb
pushf
stos
xorb
inc
or
out
and
mov
into
aad
in
mov
cmpsl
push
je
xor
iret
shrb
cs
and
push
add
cwtl
js
jge
adc
std
dec
cld
mov
aam
xchg
jecxz
xchg
jp
lock
leave
in
push
pusha
and
lods
pusha
push
rcrl
pop
pop
bound
xlat
or
sbb
cmpsl
cmp
and
push
in
and
hlt
shlb
xor
mov
adc
dec
inc
xor
fs
dec
jle
jle
dec
sbb
mov
xor
push
sbb
xlat
mov
add
mov
arpl
mov
mov
lods
xorl
mov
mov
in
fisttpl
mov
dec
mov
mov
sub
add
arpl
xorl
jnp
add
mov
sbbb
lret
inc
mov
add
insl
pop
js
mov
movsl
push
and
mov
push
testb
fidivrs
into
decb
push
fmuls
aad
adc
cmp
cmp
cmp
in
add
mov
mov
fs
pop
pop
aaa
inc
bound
add
test
hlt
jns
outsl
js
je
in
and
sarb
incl
rcrb
stc
lret
xor
dec
cmp
and
addr16
mov
mov
out
movsl
in
jle
xchg
aad
xrelease
jp
mov
sahf
loop
iret
lcall
cld
shlb
pusha
adc
mov
popa
push
push
add
dec
imul
mov
in
and
scas
xlat
push
dec
pop
gs
scas
inc
pop
outsl
int
scas
sub
and
out
or
jmp
push
iret
clc
pop
outsl
jae
je
jae
adc
mov
add
jnp
dec
lds
sar
leave
jp
notb
popf
mov
sub
gs
fstps
mov
pop
lahf
aam
pop
mov
mov
jmp
inc
pop
insb
jge
aaa
and
ja
testl
shlb
xchg
cmp
pop
mov
mov
push
out
jg
sub
dec
es
dec
push
jns
mov
loop
pop
fmul
push
push
int3
add
js
nop
mov
push
test
movsl
sbb
lods
fcmovbe
aam
pop
popf
fnsave
inc
mov
stc
andl
fisubrl
dec
cmc
in
aad
add
or
fisubrl
add
test
imul
jno
imul
in
xchg
mov
pusha
push
pop
mov
push
loope
sbb
mov
pop
adc
popf
push
add
je
mov
cs
fsts
cld
mov
ljmp
sbb
aas
inc
int
movsl
loop
adc
pusha
xor
xor
enter
mov
cmp
imul
lahf
dec
mov
repz
stc
test
sbb
into
add
add
fildl
mov
and
cld
imul
hlt
push
cli
adc
test
int
ljmp
mov
xchg
or
and
push
shlb
or
leave
sbb
mov
xchg
fbstp
xor
adc
or
jo
mov
inc
pop
pop
mov
cmc
popf
mov
vsubpd
in
test
into
cmp
mov
mov
cmp
pop
leave
sti
push
cs
pop
mov
xor
mov
out
insl
into
sbb
ficoml
jmp
xor
lret
dec
xchg
or
in
sub
sbb
outsb
xchg
inc
adc
xlat
ss
ja
or
add
rorl
scas
xor
jns
dec
outsw
xor
in
cs
pushf
mov
push
pop
or
movsb
sti
xlat
arpl
stos
xor
stc
popa
pop
leave
lcall
pop
imul
out
jns
andb
daa
add
push
add
cmp
adc
sbb
fcomp
adc
add
int3
sbb
pop
and
lods
mov
jae
mov
xchg
adc
jnp
and
sub
push
inc
movsl
mov
lret
sbb
sti
jo
gs
dec
mov
cmp
sub
repz
pop
and
sbb
pop
lret
adc
cmp
out
aaa
lcall
jmp
sar
sub
stc
add
jo
inc
jmp
lahf
dec
repz
sbb
stc
xchg
push
jp
rcrl
lcall
lahf
insb
stos
jne
in
push
dec
enter
and
loopne
xchg
scas
in
arpl
jle
and
adc
je
inc
mov
aad
adc
dec
sub
pop
out
and
testl
mov
das
and
xor
xchg
mov
adc
movsb
aaa
ljmp
push
nop
cmp
pop
push
inc
pop
jae
mov
cmp
mov
push
mov
push
jb
lods
and
and
jne
jl
mov
adc
sub
pop
shrl
pop
outsb
aaa
test
rcrb
aad
loope
sbb
jne
mov
xor
sbb
xor
jle
jl
in
pushf
cmpsb
xchg
mov
outsb
cmp
bound
fimuls
xchg
arpl
add
jg
sub
cmp
js
fsubrl
mov
je
test
lock
lahf
pop
xchg
cmc
sbb
test
cmp
adc
dec
push
and
push
push
fbstp
push
in
adc
ret
repnz
out
pop
lods
fsts
bound
test
mov
les
adc
sub
jbe
add
cwtl
push
imul
adc
leave
sub
sahf
fidivs
jecxz
or
pusha
cmp
out
sbb
xchg
mov
mov
test
dec
loope
repnz
push
fnsave
sub
in
xchg
clc
call
in
sar
iret
in
es
add
js
mov
testl
in
popf
mov
cltd
mov
cmpsl
or
popa
sbb
push
and
or
popf
call
dec
xor
shrl
xchg
and
negl
cmp
int3
ds
iret
dec
repz
inc
push
jns
mov
xlat
xchg
push
fstpl
push
out
int3
aam
xor
sarl
xchg
mov
je
push
fists
dec
pop
inc
mov
pop
insb
mov
pop
outsl
outsl
dec
jno
xor
sub
cmp
out
inc
pop
in
hlt
ja
lods
xchg
jl
mov
aam
scas
dec
dec
sub
es
pop
scas
rorb
jg
fwait
call
lock
out
or
mov
cmp
lea
lahf
mov
xchg
lea
mov
fcmovbe
repz
fldcw
loop
jb
cmp
push
sbb
mul
jl
movsb
xor
pop
sub
add
cmp
les
dec
dec
xor
int3
fimull
mov
jg
xchg
pop
lcall
call
les
lea
xchg
lea
inc
rorb
imul
sub
jns
frstor
push
xchg
sub
sub
sub
test
pop
shlb
mov
addr16
sbb
fwait
repnz
pop
adcl
mov
or
shlb
cli
or
movsl
adc
ret
cmpsb
mov
and
cltd
fwait
mov
std
push
push
pop
lods
dec
sbb
add
test
lret
fistl
jb
push
cwtl
sbb
add
lret
mov
lods
lret
lea
add
ljmp
mov
mov
negb
scas
leave
fisubl
lret
cld
loopne
xchg
xchg
bound
adc
jge
mov
dec
mov
push
dec
adc
cld
iret
xbegin
movsl
popa
xlat
xor
outsb
pcmpeqb
enter
mov
mov
xor
repz
popf
imul
jo
sarb
or
dec
sbb
and
pop
jnp
sub
ret
jmp
dec
ret
pop
loope
dec
daa
mov
dec
aam
mov
lods
sbb
dec
pop
cmp
lods
cvtpi2ps
fnsave
fnstenv
cmp
inc
lods
jmp
ret
mov
not
cmp
mov
stos
lds
cwtl
ss
out
add
push
out
push
incl
mov
xchg
loope
andb
inc
and
imul
test
fs
jmp
add
imul
pop
loop
lock
enter
sbb
xchg
mov
je
fnstenv
adc
cmpsl
lahf
lahf
repnz
shl
sahf
pop
fstpl
and
mov
in
into
jnp
andl
fwait
addb
fsubrs
xor
shrl
mov
sbb
xchg
cmpl
mov
xchg
jmp
call
daa
inc
clc
mov
xchg
test
xchg
inc
add
sub
or
mov
jecxz
push
cwtl
jno
repz
lds
cmp
call
mov
loop
cs
and
out
pop
xchg
jecxz
mov
imul
jno
outsb
testb
xor
mov
inc
cmp
fcmovb
pusha
and
add
push
adc
test
mov
cmc
xchg
fwait
addb
xor
lock
xor
in
and
mov
xor
mov
add
es
cmp
into
cmpb
adcl
ret
aad
xor
adc
jo
mov
stc
scas
jecxz
enter
xor
push
xor
int
jae
outsb
mov
cmp
pop
arpl
and
xor
sub
add
inc
adc
mov
sub
outsb
subb
sahf
mov
fldcw
fdivs
and
cwtl
std
or
ja
pop
inc
scas
cmc
sbb
pop
mov
aaa
clc
push
test
test
adc
sbbb
mov
les
add
mov
mov
xchg
arpl
mov
lock
sub
sarl
add
dec
pop
inc
mov
cli
sub
adc
and
xchg
js
xorl
popaw
aas
xchg
or
into
and
in
lret
sbbl
test
mov
nop
in
ret
xchg
pushf
jmp
sahf
enter
lds
and
out
mov
dec
pop
xor
fwait
mov
fisttpl
ret
loop
stos
inc
jge
jle
add
cld
js
push
mov
test
add
xchg
dec
in
stos
lret
lods
sti
pop
or
push
iret
fucomip
mov
sbb
fmuls
lret
mov
cld
xor
ja
dec
jno
jne
test
in
jle
or
add
mov
push
mov
and
jnp
loop
leave
je
add
int3
mov
jmp
fiaddl
out
or
nop
jnp
fstpt
mov
clc
shrb
cmpsb
inc
mov
cmp
xor
cltd
leave
mov
jle
dec
int
inc
add
pop
push
dec
sbb
pop
jns
push
adc
or
test
cmp
subb
nop
pop
jecxz
mov
in
sbb
rorb
sub
int3
mov
fs
das
outsl
sbbl
sub
daa
xchg
xchg
test
push
cmp
sub
sbb
mov
jmp
fs
sbb
dec
sub
in
add
dec
imul
stos
out
clc
call
scas
jge
adc
jg
pop
and
testl
sub
adc
sub
mov
lock
mov
dec
popf
push
jp
inc
sub
int3
bswap
enter
ret
pop
mov
dec
sbb
and
rolb
push
jle
fldcw
sbb
out
js
xor
cmpb
icebp
mov
dec
insl
jp
pop
das
mov
daa
mov
adc
push
mov
out
aas
addr16
ror
stos
add
pop
push
ja
in
mov
aas
push
and
int3
mov
mov
scas
in
test
scas
sub
addr16
push
sahf
or
imul
mov
lds
push
ficomps
test
test
stos
xchg
inc
jecxz
inc
sub
cmc
push
out
ja
jnp
dec
xchg
adc
lret
mov
mov
mov
out
xor
mov
mov
or
dec
out
adc
out
dec
inc
loop
xchg
jle
inc
lock
xchg
xchg
cwtl
xchg
sbbb
jmp
xchg
stos
rcrl
adc
out
inc
divl
repz
mov
out
cmc
stos
mov
add
xchg
pop
xchg
xchg
or
jb
cmc
fwait
pop
push
pop
mov
rol
loopne
and
shlb
add
andl
xchg
push
mov
xor
jae
repz
sti
in
pop
das
jns
jnp
fcomi
leave
pop
push
mov
cmp
and
aam
js
xchg
mov
push
and
ret
inc
scas
xor
sbb
adc
sbb
cmp
push
stos
mov
pop
adc
sub
std
pop
jb
sahf
add
fldt
mov
sub
fucompp
ds
es
sbb
daa
mov
lret
cmp
sbb
mov
lods
mov
mov
push
sub
lret
in
mov
divl
mov
mov
jp
wbinvd
sub
sbb
clc
out
cmp
fnstcw
leave
push
aaa
xchg
shrb
push
jno
lahf
add
std
push
adc
mov
pushf
inc
sbb
fwait
xor
adc
cmpsl
mov
addl
sbb
loop
sti
push
pop
cwtl
loop
cmp
lret
rcrb
jge
xchg
jae
mov
adc
mov
jno
mov
cmp
and
loopne
dec
test
add
popf
adc
adc
pop
ljmp
aam
in
mov
test
icebp
sar
add
scas
clc
and
cltd
cltd
mov
cmp
shll
dec
mov
and
sub
out
push
sub
and
push
jb
lods
lods
fwait
inc
mov
mov
je
ret
xchg
mov
cmc
mov
clc
xor
shrb
repz
out
in
hlt
xor
jl
call
mov
sub
xchg
sbb
push
and
or
in
aad
repz
lret
inc
movsl
jmp
test
mov
gs
repz
test
push
repnz
mov
pandn
fisubl
out
add
push
sub
push
scas
xchg
inc
mov
or
gs
push
mov
cwtl
hlt
xchg
cmpsb
test
lahf
cmpsb
cmp
adc
push
stos
xor
xor
or
loope
dec
in
and
sub
les
ss
mov
xchg
pop
pop
shl
push
out
shrb
jmp
popf
add
fcmovne
mov
or
adc
xchg
push
shrl
mov
lea
movsb
cmp
leave
cwtl
adc
insl
xor
out
mov
cmp
or
xlat
adc
mov
cmp
xor
push
fnsave
addr16
cmp
mov
repnz
push
sbb
ret
add
xlat
insb
dec
loopne
call
lea
xor
cwtl
and
adc
xlat
imul
cmp
add
rol
sbb
pop
sbb
push
lahf
dec
pop
call
bound
mov
icebp
outsl
push
fcom
xor
sub
xchg
out
int3
mov
stos
sbb
inc
xchg
cli
mov
pop
jnp
cmp
roll
mov
orl
enter
inc
fbld
and
adc
pop
sub
xor
inc
cmp
into
cltd
imul
mov
inc
or
dec
shrb
xor
xchg
fidivs
cmc
pushf
mov
daa
ret
mov
jo
xlat
xor
pop
jns
jns
xlat
iret
or
mov
andl
jbe
lcall
fnstenv
popa
testl
movhps
daa
ret
cs
push
inc
mov
sbb
cltd
js
push
sub
cmpb
lcall
in
cli
mov
inc
test
es
and
stc
dec
xor
push
push
xor
mov
adc
and
sbb
mov
pop
dec
int3
sub
das
or
js
cmpsl
sbb
sub
orb
xchg
jecxz
out
adc
mov
clc
mov
jg
gs
xorb
jne
pop
rcrl
cmpsb
in
or
loopne
adc
fsubrs
jb
in
pop
mov
ret
jns
mov
es
sub
sbb
test
jl
xchg
arpl
in
lods
lea
pop
test
jb
lcall
and
icebp
dec
and
ret
lds
out
fsubl
aas
jle
push
es
ret
ds
aad
dec
popa
lcall
nop
jae
lock
push
icebp
dec
dec
mov
push
cmp
stos
jnp
scas
mov
and
mov
mov
bound
mov
les
cs
jne
pop
ljmp
push
sub
xchg
lret
push
push
mov
pop
fisttpl
lret
scas
fstp
pop
imul
repz
sbb
je
aad
cmp
sbb
test
out
cmp
fdivrp
mov
cmp
dec
mov
or
mov
addr16
lret
sub
fwait
ds
sahf
repnz
addr16
fldcw
push
cmp
cmpsl
cltd
test
loope
enter
jmp
insb
xor
adc
icebp
int3
cmp
mov
push
ss
jnp
pop
jns
add
fnstenv
xchg
push
shlb
sub
rcrl
test
sbbb
repz
xor
jp
mov
mov
dec
aam
or
sub
push
hlt
mov
cmp
sti
jno
xchg
fsubrs
cwtl
add
lret
pop
dec
scas
lret
mov
mov
jg
mov
gs
stos
addr16
int
push
mov
and
xchg
int3
sbb
movsb
lret
lods
sbb
icebp
movsb
mov
push
pushw
push
mov
ds
sub
or
in
icebp
movsl
test
and
sbb
js
and
in
clc
mov
insb
loop
adc
ja
xchg
push
xchg
mov
inc
dec
inc
in
or
mov
cmc
cmpsb
sti
nop
fldt
xchg
lock
and
xor
out
ljmp
orl
sbb
mov
mov
jb
fmull
dec
push
stos
push
mov
adc
fs
mov
fwait
lsl
mov
rcl
xchg
fs
mov
add
jns
mov
stos
lahf
dec
in
out
inc
inc
into
sbb
sarb
and
sbb
out
adc
inc
and
adc
add
push
pop
add
bound
repz
imul
push
jmp
pop
xor
sbb
imul
imul
sahf
and
out
lock
jmp
in
jae
scas
repnz
js
dec
lock
in
leave
popa
or
pop
cmp
pop
cmpsb
push
or
in
enter
lds
cmpb
inc
adc
ja
mov
push
adc
jl
jbe
loop
mov
in
cmp
inc
and
mov
int3
scas
aas
mov
fs
rorb
addr16
and
jne
pop
xchg
std
pop
pop
add
or
seta
call
push
mov
out
sbb
push
mov
sub
push
aad
jns
pop
addr16
enter
mov
ret
stc
gs
arpl
and
xchg
mov
pop
js
outsb
dec
or
or
pop
inc
pop
popf
fs
cmpb
sub
dec
add
test
into
and
mov
push
fistpll
pop
test
js
ror
mov
add
push
imul
inc
mov
fwait
jns
pop
daa
loope
cmp
fsts
push
inc
xor
mov
ds
push
scas
in
movsd
pusha
xchg
xchg
sbb
mov
movsl
add
cmpsl
imul
cmp
fsubrs
imul
and
test
adc
mov
insb
les
fwait
mov
shl
jp
dec
sub
loopne
insl
or
add
mov
icebp
sbb
dec
xor
scas
jp
cli
add
lcall
sbb
jnp
ja
mov
mov
mov
cmp
fs
icebp
sahf
cld
cmp
imul
les
insl
or
loopne
or
stc
js
aam
lods
aas
and
test
outsl
out
mov
insb
daa
and
repz
das
ljmp
fsubl
sbbl
cmp
push
movb
adc
mov
dec
and
out
addl
push
sbb
pop
and
jmp
mov
jns
loopne
sbb
gs
push
adc
pusha
mov
out
fs
add
add
lret
push
xchg
inc
loop
inc
dec
inc
stc
addb
leave
adc
rorb
fwait
jl
sbb
insb
adc
mov
shll
iret
sub
movsl
jb
aaa
in
mov
jbe
push
inc
aad
popa
in
adc
or
test
addr16
push
adc
daa
scas
imul
adc
push
or
cld
fcmovbe
add
testl
lock
xor
mov
xchg
lods
pop
scas
sarb
cs
inc
pop
call
lea
stc
or
lcall
movsl
outsl
jns
mov
fimuls
lock
add
add
int
int3
cmc
mov
jecxz
aam
fwait
gs
out
mov
push
pusha
mov
hlt
arpl
test
mov
bound
mov
xchg
sti
das
jl
enter
sub
imul
hlt
adc
mov
ljmp
adc
mov
cmp
into
xchg
dec
and
loopne
jbe
inc
jp
cmpsl
and
jmp
ret
ljmp
roll
mov
adc
sub
dec
fsubs
test
inc
fnstcw
push
ds
fidivrs
mov
sub
fldcw
pushf
fldl2e
cltd
cmp
mov
scas
jo
in
popf
jmp
fs
and
hlt
jle
add
lods
jb
les
outsb
xor
std
xor
xchg
pop
mov
mov
inc
int3
inc
push
movzbl
mov
mov
and
push
ret
xlat
imul
loopne
add
aam
addr16
rcl
sub
mov
inc
adc
dec
mov
push
stos
rclb
movsl
cmc
mov
jno
in
dec
pop
inc
cmp
mov
dec
sbb
dec
into
sbb
pop
sbb
pushf
sub
int3
fsubrs
jo
call
ds
call
adc
movsb
imul
jp
pusha
sbb
imul
dec
cwtl
loopne
dec
xchg
mov
in
or
in
rcrb
mov
test
mov
jo
mov
test
cmp
gs
outsb
push
inc
repz
adcb
cmpsb
add
pop
pop
mov
sbb
pop
and
xchg
ret
mov
push
pop
push
sub
pop
clc
inc
or
movsl
inc
xlat
inc
push
and
mov
das
dec
and
sti
clc
cwtl
xorl
xchg
fdivl
push
test
pop
sub
pop
hlt
xchg
stc
int
imul
cmp
mov
sahf
roll
sub
mov
daa
add
sbb
outsl
js
out
jmp
cmpsl
fwait
mov
enter
inc
pop
out
dec
and
adc
sti
mov
std
sub
mov
mov
cmp
push
inc
aas
jo
dec
sub
xchg
adc
rcll
fcompl
cltd
pusha
mov
cmp
cmp
mov
inc
jl
insl
clc
mov
bound
nop
popa
and
mov
mov
addl
xor
lods
inc
stos
mov
subl
mov
inc
mov
shrb
mov
jns
sbb
fldcw
mov
jmp
cmpsb
cmp
mov
sub
mov
icebp
test
test
cmc
cmp
dec
push
jnp
jbe
sbb
jle
aas
xchg
in
je
repnz
cmpsb
push
ret
pop
adc
test
mov
cmp
cli
lcall
mov
push
and
je
mov
mov
sar
lret
cltd
arpl
into
inc
cmc
mov
push
fstpt
mov
outsl
and
or
mov
xchg
push
mov
mov
out
aaa
cmpsb
xchg
inc
mov
incb
pop
jb,pn
pop
ja
jge
inc
subps
xor
dec
fnstsw
inc
xchg
jg
std
cmpsl
fdivr
cmp
lock
xor
add
sbb
cmp
inc
iret
pushf
shl
fwait
lret
sbb
adc
jmp
mov
scas
in
xchg
cs
int3
je
or
mov
push
pop
push
mov
jge
leave
popl
mov
pop
mov
ret
mov
mov
out
loope
pop
xchg
cs
test
icebp
data16
mov
enter
mov
and
dec
test
sub
loope,pt
push
mov
push
sub
cmpsl
cmp
test
jge
mov
mov
in
xchg
mov
iret
xlat
in
and
repz
xor
mov
nop
dec
xor
aaa
in
shrb
cmp
aad
ret
sbb
jo
pop
in
push
pusha
or
jne
enter
sahf
sub
adc
icebp
in
je
adc
adc
xlat
hlt
daa
mov
pop
in
roll
mov
scas
movsl
lcall
mov
push
push
leave
mov
jo
test
and
mov
sti
test
movsb
push
hlt
test
idivb
pop
inc
xlat
cmp
je
mov
fimuls
leave
aam
test
out
gs
call
mov
int3
aas
push
fcmove
loopne
in
mov
adc
imul
cmp
ret
mov
js
pop
out
shl
ja
sbb
mov
pop
das
test
cmp
cmpsb
add
xor
sarl
sub
push
bound
dec
mov
stos
mov
movsb
jno
nop
mov
js
mov
mov
test
sti
jns
jns
cmp
lods
push
xor
adc
inc
dec
xchg
mov
jge
jge
ret
daa
in
mov
repnz
add
add
cmp
cld
stos
and
jp
jmp
ret
je
loope
cmp
std
fwait
xor
or
jg
mov
jo
pop
cmp
mov
sub
add
adc
sub
inc
dec
subb
outsb
jb
or
adc
cmp
arpl
xchg
orb
sub
cmc
stos
pop
in
xchg
popa
or
loopne
lock
xchg
push
imul
popa
icebp
xchg
aaa
mov
fs
leave
xor
mov
paddw
push
stc
in
ds
xchg
sbb
inc
sub
cmp
mov
sbb
xchg
ja
add
out
or
lcall
sub
aaa
jno
repnz
jno
ds
inc
push
lret
sub
cs
xor
test
sbb
arpl
or
ja
push
rclb
jg
cmp
sub
cmp
pusha
sahf
lahf
insl
ja
sbbb
aaa
xor
push
lahf
aad
jecxz
jns
xchg
gs
or
daa
push
sbb
jp
pop
xor
dec
pop
int3
jb
pop
mov
stc
cld
fcoml
hlt
sub
inc
push
push
xor
ss
sub
mov
pop
add
xor
gs
jp
or
stos
push
loop
mov
dec
jge
or
push
repz
mov
xor
add
xchg
cmp
outsb
imul
adc
mov
jne
rclb
push
adc
cmp
test
sahf
push
rolb
jne
add
mov
mov
adc
mov
adc
loopne
adc
dec
jecxz
pop
dec
pop
icebp
es
movsb
adc
in
inc
mov
stos
sub
js
lods
dec
cmp
shlb
das
and
cmp
js
dec
dec
test
push
shlb
xchg
test
fs
push
outsb
lahf
and
fucomip
subl
out
cmp
lds
inc
adcl
or
inc
movl
out
ljmp
ljmp
pop
cld
mov
push
inc
and
pop
gs
shl
js
out
outsl
dec
push
sbb
ljmp
das
insb
mov
fadd
jp
aam
in
mov
mov
daa
enter
cmpsb
mov
test
or
fwait
mov
testl
push
cmp
jns
fisttpll
jo
arpl
sub
mov
adc
daa
call
add
addr16
incl
xchg
mov
arpl
or
imul
sbb
dec
adc
add
xchg
mov
cwtl
or
xchg
ret
mov
jns
lea
das
lret
inc
outsb
sbb
shrb
clc
test
mov
and
or
sub
inc
pop
mov
jae
inc
pop
jb
push
aaa
push
in
daa
jg
inc
sbb
cmc
mov
cmc
fs
divb
push
pop
cmp
adc
fyl2xp1
jnp
jbe
lods
add
orl
call
sbb
cmp
fxch
inc
mov
xchg
icebp
andl
roll
xchg
push
push
fwait
mov
jg
dec
xchg
or
mov
and
cmp
push
outsl
push
add
jmp
mov
test
addr16
pop
dec
scas
in
push
mov
out
push
cmc
or
or
fsubl
xchg
sbb
pop
in
icebp
xchg
inc
imul
xchg
sarb
repz
sub
mov
popf
push
enter
fimuls
sbb
jne
in
aaa
jbe
xlat
cmp
push
pop
or
daa
or
push
test
pop
mov
in
scas
ljmp
mov
pop
sbb
xchg
pushf
or
inc
dec
push
addb
repz
scas
andb
mov
push
leave
lcall
mov
ret
popf
or
hlt
stc
cmpsl
out
rcrb
sahf
pop
inc
jbe
je
mov
xchg
add
test
clc
jmp
lret
xchg
shlb
add
sub
sub
stos
andb
and
push
pop
mov
aas
icebp
mov
cmp
cld
cmp
lods
lret
add
jp
or
out
and
ror
lods
filds
pop
test
outsl
fimuls
fs
pop
or
mov
lret
jp
and
nop
adc
push
adc
dec
sub
xchg
mov
daa
mov
shl
insl
insb
push
int
ds
je
incb
inc
fdiv
mov
mov
mov
sub
or
sub
ds
and
mov
aaa
jae
or
nop
and
and
sub
add
pop
fdivr
add
inc
mov
xor
rorb
push
xchg
push
fsubl
lea
xchg
outsl
movsl
stos
cmc
adc
xor
das
add
inc
bound
pop
in
stos
add
inc
xchg
or
cmc
jno
std
int
in
dec
aas
jp
pop
xlat
pop
inc
jmp
xlat
cli
lahf
jmp
arpl
and
sbb
fcoml
pop
sbb
daa
push
popf
or
shr
xchg
bound
xchg
aas
pop
xchg
add
cwtl
lahf
adc
push
xchg
dec
stos
nop
movsb
sub
sti
aas
adcl
test
ret
idiv
mov
rcrl
push
jno
lock
pop
es
sbb
xor
dec
and
sbb
aad
or
sbb
inc
sar
pop
sbb
jecxz
repnz
push
inc
cli
pop
es
mov
and
inc
and
push
inc
fxch
sbb
addr16
sbbl
push
aaa
cmp
inc
jne
jmp
movsl
push
mov
arpl
popf
and
push
cmp
sarb
in
pop
and
ret
out
xor
jae
mov
xor
fimuls
dec
enter
stos
loop
add
insl
push
lahf
ja
xor
in
fsts
daa
jb
imul
cmp
rcrb
cmp
stc
shrl
aad
jne
aaa
pop
push
add
orb
jae
les
pop
jae
das
mov
mov
movsl
or
push
test
arpl
mov
sbbb
in
jb
cltd
inc
loopne
mov
inc
inc
cwtl
push
adc
sbb
fxch
es
sbbb
cmp
hlt
out
cmc
rol
mov
shll
flds
rcl
xor
fucom
std
enter
dec
mov
jmp
cli
push
inc
push
aaa
popf
hlt
xchg
cmp
mov
loop
mov
cld
imul
cli
lahf
or
xchg
jne
aad
mov
lret
aas
lds
sarb
xchg
mov
sbb
fimuls
sub
jle
xchg
andl
fwait
enter
adc
or
adc
sarb
aam
mov
outsl
mov
add
psubw
sub
fmuls
subl
cli
ss
outsb
lcall
subps
add
loop
jge
aaa
cmp
jnp
xor
sub
dec
data16
add
mov
cmp
lods
sahf
adc
push
sub
cltd
gs
lea
pop
mov
mov
or
jge
inc
jle
adc
aad
adc
das
add
imul
scas
mov
hlt
ret
dec
aaa
jmp
aaa
fs
data16
rclb
aam
lods
les
xor
clc
les
cmc
mov
insl
mov
fiaddl
test
jns
push
scas
mov
scas
xchg
pop
fisubrl
mov
or
sbbb
aaa
int3
cltd
mov
and
adc
inc
icebp
mov
or
mov
lea
dec
negl
fmulp
loope
push
sub
or
fstp
subl
inc
sub
mov
add
test
pop
push
popa
add
shlb
push
into
cmp
push
lcall
dec
in
cmc
xor
cmp
mov
adc
mov
push
mov
add
pop
andb
addr16
loope
mov
je
outsb
and
xor
out
jae
in
mov
push
int
sbb
out
inc
movl
rcll
ds
jp
xor
jne
jl
mov
inc
mov
fnstenv
mov
scas
js
loop
dec
ss
lret
fsubrs
cltd
bound
jl
jge
push
jo
add
xor
sub
mov
subl
cmp
sub
adc
js
xor
or
sbb
fwait
or
ret
pop
sbb
mov
ja
scas
out
xor
jbe
sub
add
mov
sub
mov
ljmp
in
mov
and
es
icebp
cmc
stos
or
fidivl
jge
lret
mov
rcrl
cmpsl
mov
adc
iret
dec
dec
inc
xrelease
dec
dec
aad
fldenv
fildl
aas
pop
mov
push
pusha
bound
jg
xor
add
sub
ret
sub
sub
mov
cmp
jle
inc
lods
out
int
mov
stos
mov
popf
movsl
iret
das
sarb
add
inc
adc
pusha
jle
pop
fs
xchg
fcmovnb
dec
rolb
jge
hlt
fstp
lds
xchg
jmp
xchg
fiadds
scas
std
or
or
fs
stc
cld
pop
pop
insl
jle
call
xchg
lods
ss
mov
add
loop
jle
jg
mov
cmpsl
jbe
ja
adc
loop
cmc
mov
push
push
inc
leave
pop
dec
les
mov
jnp
dec
xor
les
sub
out
outsb
das
sbb
xchg
movsb
xchg
outsb
aad
cltd
repnz
movb
dec
sbb
mov
shrl
ficoml
cmc
scas
pop
mov
dec
out
call
add
mov
aad
aad
pop
sti
push
push
bound
mov
jl
jl
les
mov
lods
push
pop
imul
das
adc
sbb
xor
rcrb
jns
sub
sub
mov
cltd
jecxz
and
pushf
cltd
mov
repz
movsb
es
mov
inc
test
mov
ret
aas
call
lods
mov
std
scas
popa
jecxz
mov
daa
mov
fs
sti
add
nop
clc
cmp
iret
adc
out
movsl
inc
stos
loope
add
dec
push
sahf
into
adc
or
mul
and
push
rcr
inc
mov
mov
mov
pushf
sub
add
rolb
xchg
fmuls
nop
pop
lds
fwait
dec
push
dec
push
cmpsl
cmp
call
out
xchg
mov
dec
jmp
fstpl
inc
mov
insl
adc
cmp
hlt
scas
les
lret
xchg
imulb
jl
dec
and
dec
mov
shr
mov
es
pop
orl
divl
or
jl
and
push
mov
xchg
aad
adc
je
cmpsb
data16
sub
and
sub
ret
xorb
test
xchg
xchg
mov
movsb
scas
push
call
movsl
jo
and
inc
out
mov
dec
outsb
call
js
out
ja
xchg
idivb
adc
add
and
push
jmp
int3
out
pop
sub
jne
fmulp
push
lret
es
xchg
movsl
sbb
sar
jb
in
inc
push
push
in
scas
cs
adc
pop
push
pop
cmpsb
mov
add
fsubrs
jb
lock
xor
or
jl
pmaddwd
stc
and
out
lret
mov
flds
out
pop
fwait
pushf
loope
test
fstpt
mov
icebp
cmp
xchg
scas
int3
test
popf
sub
std
rolb
sub
mov
cmp
fs
sbb
movsl
fsubs
aas
jge
pop
mov
cmpsl
jo
inc
pop
das
frstor
insl
sub
push
cmc
jg
mov
test
roll
sti
push
in
imul
pop
imul
adc
add
pushf
mov
lods
cmpsl
sub
adc
mov
xor
mov
ss
pop
cwtl
mov
mov
add
xor
outsl
insb
push
push
xorl
jecxz
push
xlat
xor
mov
mov
popf
bound
stc
mov
jg
js
pop
dec
loop
mov
stos
jg
idivb
pop
or
fucomip
into
or
dec
inc
or
rolb
adc
jnp
sub
shr
jmp
lret
push
xchg
pushf
mov
push
inc
xchg
fnstcw
mov
push
jmp
fs
adc
inc
push
sarl
ljmp
pshufw
inc
outsb
xchg
leave
xor
xlat
jl
outsl
sub
or
sbb
mov
jp
hlt
pop
dec
jmp
xorl
loop
cmpsl
in
jmp
sub
in
test
in
pop
enter
jae
pop
fmuls
fdivl
jp
frstor
pop
ret
mov
inc
mov
shl
jge
cmc
cltd
dec
inc
or
lods
shrb
dec
dec
mov
pop
ds
sbb
popa
stos
jb
leave
xchg
and
ficompl
push
xor
sbb
xchg
cmp
fimuls
add
sub
or
push
outsb
add
fcompl
pop
pop
fdivr
dec
std
mov
xchg
lods
push
stos
xor
mov
movsb
xor
ss
jg
fmull
push
cli
jbe
fists
jecxz
sbb
sbb
jmp
aam
pop
rcrb
shr
mov
js
inc
sub
cwtl
adc
aas
xchg
js
xchg
jecxz
cmpsb
sbb
add
mov
lds
loopne
jg
mov
dec
cwtl
cmc
push
cld
roll
or
popa
or
mov
cwtl
xor
pop
test
and
cli
or
inc
xchg
movsb
decl
mov
mov
jge
lret
addb
out
les
mov
pushf
repz
mov
jmp
out
repnz
pop
sarl
dec
push
imul
and
lock
test
test
arpl
cmpb
jp
jbe
movsb
jnp
xlat
js
sub
icebp
stos
mov
int
int3
xchg
ret
aad
ss
xchg
add
mov
jmp
loop
lahf
mov
cli
adc
pop
dec
and
inc
call
push
cmp
sbb
mov
cld
test
je
dec
lods
cmc
push
sbb
xor
xorb
bound
movsb
push
mov
mov
cltd
dec
jle
or
jne
cwtl
paddsw
aaa
bound
aaa
das
dec
imul
imul
fs
sub
push
or
shlb
jnp
daa
inc
push
sti
lahf
xchg
ljmp
adc
ljmp
call
xor
cmpsl
cmpsb
sub
adc
push
sbb
leave
mov
ja
xchg
pop
mov
jge
jge
notl
or
fidivl
insb
jmp
sbb
mov
insl
push
cli
lret
ss
inc
les
je
icebp
mov
mov
shr
mov
aam
movsb
bound
hlt
imul
pop
push
push
call
add
mov
aas
icebp
add
lods
xchg
and
mov
mov
push
sbb
mov
jle
mov
ds
pop
lock
adc
push
cmp
lret
stos
int
lods
ret
rorb
adc
jno
pop
and
popa
sbb
inc
js
idiv
iret
or
sub
bound
jae
fdivrl
into
xorl
popa
cmp
adc
sub
push
xchg
cmp
lds
out
pop
push
dec
jne
mov
out
das
jge
cld
push
shll
mov
adc
jne
adc
das
xchg
ljmp
pop
out
or
xorb
adc
push
call
stc
mov
cmp
xchg
pop
xchg
into
mov
inc
popa
sbbl
je
pop
pop
push
popf
pop
mov
in
fmuls
negl
push
inc
pop
nop
ljmp
push
insl
sbb
xchg
test
mov
or
arpl
nop
dec
mov
inc
xchg
inc
inc
imul
or
push
cmp
mov
mov
mov
mov
test
dec
adc
mov
xchg
loop
adc
rep
lcall
inc
mov
mov
xor
xor
jb
push
push
xchg
pop
je
je
mov
pop
mov
in
leave
dec
xchg
paddw
push
lods
ss
mov
addb
push
cbtw
mov
test
jns
outsb
pop
movsl
jb
jo
add
dec
loopne
inc
add
mov
ss
cmpsl
and
jmp
xchg
shlb
jno
lods
cs
jb
addr16
shll
adc
cmp
arpl
lcall
stos
pop
lret
in
out
jg
lds
sbb
loopne
mov
jo
js
ret
push
in
and
imul
push
fdivrp
pop
lcall
call
or
sbb
mov
jmp
inc
lcall
stos
xchg
push
ror
lock
sbb
pop
mov
xchg
movl
dec
add
movsb
jo
jnp
outsb
xchg
dec
inc
ss
push
adc
cmp
sbbw
sub
adc
shll
and
jnp
xor
ljmp
out
mov
fnstenv
mov
sub
imul
or
push
or
cld
xchg
jns
and
push
dec
mov
lods
rcl
jp
cmpsb
cmp
mov
ret
push
cld
imul
add
repnz
pop
mov
sub
iret
out
decb
ds
mov
iret
jmp
mov
mov
aaa
mov
dec
mov
cmp
movsl
loopne
push
jmp
add
mov
arpl
sub
outsb
into
mov
add
push
imul
sub
push
sarl
rcll
aas
and
out
and
cld
mov
mov
sub
jp
rcrb
into
lret
cmp
xchg
out
mov
xchg
or
mov
mov
mov
cmp
stc
fwait
int3
bound
cmp
popa
shrb
mov
cmp
push
xor
je
xchg
jnp
and
std
loopne
shr
repz
push
pop
leave
stos
cmp
lods
in
mov
mov
scas
sti
dec
nop
test
cmc
loopne
inc
and
repnz
adc
sbb
or
imul
mov
repnz
lods
jbe
mov
ficoml
arpl
lds
cmp
cmp
adc
ss
add
jmp
mov
aaa
push
scas
mov
fsubrl
fstpt
xor
jno
sbb
jg
pusha
sarl
cld
lretw
xor
outsb
inc
sbb
popa
stos
fiadds
fisubrs
push
pop
lock
add
xor
push
gs
fucompp
adcb
dec
das
cs
mov
push
inc
fisubrl
lahf
cli
pushf
js
fistps
es
xchg
dec
stc
mov
add
and
lcall
fisttpll
in
mov
ret
rol
aam
xchg
stc
out
lods
push
ss
sbb
inc
sub
pop
and
add
enter
imul
cmp
roll
jge
push
adc
sbb
pop
je
adc
and
push
or
sbb
sbb
sub
jns,pt
scas
dec
sub
jns
xchg
and
jge
pop
dec
in
ror
inc
out
lcall
fisubl
jns
jp,pn
adc
xor
insb
popaw
jmp
lock
ret
mov
push
stos
xor
cltd
jp
push
int3
cmp
and
cmp
or
inc
mov
fsubl
out
out
ret
mov
cmp
stos
sti
sbb
xchg
push
test
jne
cltd
lret
push
fists
icebp
cmp
mov
hlt
pop
cmp
fidivrs
add
inc
sub
js
dec
leave
sbb
inc
sbb
push
std
adc
pop
xchg
push
sub
cmp
or
mov
xor
mov
stos
lcall
flds
test
add
add
cli
mov
shlb
movsl
insb
push
out
xor
popf
in
mov
xchg
out
mov
xchg
or
xor
rorl
les
jae
or
push
call
cmpsl
out
pop
adc
dec
pushf
pushf
xchg
lods
xchg
push
addb
jle
xlat
pop
imul
sbb
jg
mov
leave
je
xchg
and
adc
loopne
pop
repnz
ljmp
loope
data16
popf
dec
or
cltd
jo
dec
out
movsb
push
mov
fildl
lds
xchg
sub
cmp
xbegin
and
add
and
ja
popf
test
jbe
imul
arpl
movsl
mov
pop
sub
out
adc
or
pop
xor
xor
adc
or
outsb
sahf
jg
mov
xchg
add
adc
jmp
aad
adc
dec
ds
gs
adc
insl
cmp
jmp
mov
fidivl
loopew
mov
jb
lahf
shll
pop
scas
mov
inc
xchg
insl
fisubrl
add
sbb
cmp
cmp
push
lods
repnz
push
pushf
pop
push
jns
imul
mov
xchg
cmpsb
mov
test
jne
xchg
in
jmp
das
add
in
lea
sub
mul
insb
scas
nop
fs
loopne
pop
mov
dec
into
out
imulb
icebp
add
ja
out
mov
inc
sub
xchg
shrb
mov
je
inc
xor
sub
popa
mov
repz
sbb
sbb
push
sub
sbb
mov
dec
push
add
dec
lock
dec
inc
out
pop
mov
xchg
std
lea
jns
push
ja
mov
jns
mov
shlb
push
aas
push
jns
sub
pusha
imul
jle
ljmp
mov
nop
sub
inc
add
ja
cwtl
mov
sbb
lods
mov
xor
ds
aam
sub
and
inc
xchg
and
dec
mov
pop
xor
in
inc
push
or
fwait
xor
dec
mov
inc
pop
inc
adcl
pop
sbb
sbb
sub
mov
or
and
push
addr16
out
mov
lods
fwait
in
imul
outsl
test
pushf
outsl
mov
lcall
das
repnz
add
rcrb
add
and
jb
dec
jbe
mov
jg
std
xor
fsubr
jl
fwait
andb
data16
mov
cmp
js
inc
fwait
jno
iret
rol
inc
std
daa
test
jg
sbb
scas
or
mov
decb
mov
loop
sti
pop
mov
movsb
jno
shlb
xchg
cmp
pop
add
repnz
inc
test
push
lret
fs
cwtl
cmc
push
xchg
jp
outsl
jecxz
addr16
addr16
in
std
jbe
mov
mov
fcmove
hlt
and
popa
fnstcw
xor
loop
sub
jecxz
jb
lret
ja
push
mov
inc
out
pop
mov
push
or
fisttpll
shl
aad
xor
xchg
or
jbe
xlat
sbb
inc
jmp
cmpsb
enter
std
nop
cld
jp
add
ret
iret
jg
fmuls
popa
cmp
inc
hlt
fcoml
inc
xchg
cmp
enter
xchg
imul
xbegin
shll
ds
adc
cld
xchg
add
sbb
iret
push
pop
jecxz
cmp
mov
sub
outsb
adc
inc
pop
fdivrl
xchg
sub
loop
lahf
rolb
cmpsl
push
add
dec
jo
stos
xchg
popf
call
cmpsb
fcmovbe
rorl
lret
mov
cmp
xchg
adc
xchg
test
movsb
adc
icebp
mov
in
or
mov
lret
ljmp
lea
inc
fnstsw
lock
jle
aad
add
insb
loope
jb
sbb
pop
stos
pop
cmp
dec
lock
shrl
or
cmpsl
das
push
adc
jne
xchg
shrl
shl
int
mov
mov
stos
inc
jb
int
dec
je
in
popf
ds
call
and
mov
lock
mov
fucomp
and
aad
mov
cmp
ja
nop
cld
dec
popf
dec
int
cmpb
adc
lret
or
push
adc
mov
in
out
repz
dec
xor
xchg
sbb
stos
jns
or
popa
ret
repnz
outsb
mov
or
pop
sbb
add
xor
and
out
or
cmp
jne
adc
pusha
rclb
mov
push
ss
or
iret
adc
aas
clc
pop
xor
aad
call
mov
lcall
xchg
shll
mov
mov
stos
dec
fildl
pop
cmp
xor
sub
and
call
mov
add
aas
add
jge
xor
mov
sub
xor
sbb
sahf
dec
aaa
test
push
loopne
insl
push
jle
push
mov
add
cmp
fists
or
inc
xor
js
jg
dec
add
in
mov
xor
inc
in
js
pop
lcall
rorb
dec
push
mov
leave
and
adc
rcrb
or
mov
fcompl
dec
mov
mov
fnstcw
mov
in
push
xor
out
shlb
je
push
pop
cld
pushf
dec
pop
mov
loope
sbb
push
in
add
in
jns
outsb
fsubrp
or
xor
leave
idiv
add
aas
push
iret
aam
or
dec
test
sub
daa
out
jbe
stos
cmp
cmp
scas
popf
add
lock
adc
and
sub
sti
ficomps
jmp
andb
testw
add
adc
jbe
fadd
sub
mov
push
push
sub
dec
pushf
jbe
pusha
pop
fcoms
icebp
mov
mov
xchg
bound
cmpsb
mov
loope
movsb
xor
sbb
loop
push
cmp
lahf
mov
push
stos
or
inc
jge
xor
ffree
pop
fs
ds
shrl
loope
dec
mov
jecxz
inc
mov
xchg
nopl
xchg
xor
push
daa
std
push
xchg
jl
call
js
adc
ja
imul
xor
lret
adc
lahf
in
and
xor
jg
cmpsb
mov
insb
int
ret
sbb
iret
out
out
adc
sbb
jecxz
repnz
into
push
mov
push
ds
xor
pop
shll
and
pop
pushf
shlb
loope
shlb
call
and
jecxz
adc
cli
mov
cmc
cmpsb
sbb
repnz
mov
add
sub
addr16
push
xchg
adc
popf
out
push
movsb
dec
adc
sub
pop
fisubrs
xchg
push
xor
xor
pop
or
jg
mov
stos
add
decl
sbb
out
push
aas
or
push
cs
es
inc
out
jecxz
mov
xor
and
push
inc
xchg
mov
dec
jnp
ljmp
mov
mov
push
cmpsb
xchg
js
inc
sarb
mov
cmp
mov
push
test
jmp
jl
inc
and
adc
lahf
repnz
out
fcomps
stos
sbb
sbb
stc
jmp
fstp
adc
push
fmulp
xor
enter
or
or
jbe
pop
fidivl
lret
ja
cld
fbstp
xchg
mov
and
pop
andl
mov
pop
mov
pop
mov
push
das
sub
sbb
push
scas
and
push
sub
outsb
inc
sbb
mov
out
loop
ret
lods
sbb
mov
or
jp
push
jge
out
jmp
jnp
add
inc
mov
push
xchg
xchg
fnstenv
in
pop
stos
push
shl
xor
bnd
sub
cmp
lret
outsb
outsl
lret
xchg
gs
adc
xor
xlat
push
sbb
jmp
xor
mov
daa
aam
xchg
and
inc
cmpl
xor
out
jle
nop
dec
int
dec
xchg
fdivrl
jne
mov
push
sub
pusha
add
and
add
pop
out
mov
pop
push
mov
jle
jnp
adc
fisttpl
fnstcw
int3
pop
jp
push
shll
fcomps
xchg
adc
inc
clc
and
lret
push
jns
inc
and
inc
test
xchg
inc
inc
movsb
adc
pop
dec
shlb
iret
jo
mov
lcall
and
or
cld
inc
mov
repnz
scas
popa
sub
cld
mov
sbb
aad
xor
mov
pop
clc
push
ror
or
push
add
jge
cmp
jae
mov
cmp
scas
xor
sbb
or
add
stos
or
xor
push
jno
ds
jno
xchg
lahf
fwait
mov
js
sub
das
decb
mov
pop
mov
andb
mov
dec
sub
js,pn
push
or
pop
in
fstl
push
mov
dec
cmc
std
xchg
loope
pusha
dec
xor
add
push
sbb
or
fmull
movsb
in
mov
mov
bound
sub
dec
popf
ss
cmp
cltd
push
cmc
pushf
sub
rolb
call
ss
sti
xchg
cmp
int3
and
cltd
inc
jne
arpl
lock
adc
pusha
lcall
mov
and
mov
pop
sub
sbb
mov
shl
add
add
push
js
cli
out
or
mov
cmpsb
mov
mov
xchg
inc
cmpsb
jno
jbe
iret
xchg
mov
jmp
int
in
xchg
jl
jae
sub
push
aaa
les
pop
pop
jp,pn
rcrb
test
hlt
iret
lret
xchg
ss
xchg
mov
cmp
ja
stos
shl
push
and
pusha
inc
ljmp
sti
arpl
enter
pop
mov
stos
inc
push
sbb
fistps
and
test
sarb
js
ficompl
sub
add
mov
fs
mov
ljmp
stc
jecxz
jg
add
hlt
lahf
imul
decb
jnp
bound
inc
call
jbe
ret
pushw
test
inc
andb
cwtl
movsb
sbb
cwtl
stos
clc
jne
out
xlat
push
fidivrl
fdivr
das
sti
icebp
and
mov
cld
pop
orl
or
testl
and
pusha
push
mov
cld
pop
dec
mov
xorb
xchg
ja
jb
pop
push
jg
loop
sarl
movsb
leave
nop
sub
ljmp
icebp
adc
outsb
movsb
add
loope
outsb
out
or
repz
mov
adc
out
pop
mov
ja
jne
jb
inc
push
ror
jle
pop
fldcw
imul
les
repnz
jg
nop
push
out
pop
add
xorl
lahf
mov
cmp
scas
add
pop
adc
jb
cmp
lcall
xchg
cwtl
push
jge
jns
sahf
sub
js
addr16
cli
aam
xor
dec
sar
dec
scas
ss
xchg
shrb
mov
outsl
gs
adc
notl
and
mov
pop
ds
sub
mov
or
pop
add
or
add
push
dec
inc
in
scas
sbb
sub
xchg
hlt
iret
cmpsb
push
call
cld
jg
daa
lahf
scas
mov
xchg
dec
cld
das
pop
sbb
adc
jge
out
mov
dec
add
jmp
mov
cmpsl
vpshld
sbbl
push
rorl
por
dec
cld
and
fldt
adc
push
lea
das
cwtl
mul
mov
js
fs
mov
add
out
decb
xchg
push
pop
loop
daa
out
ret
insb
mov
nop
inc
jnp
mov
push
push
sub
jl
mov
cld
data16
cmp
mov
pop
sub
push
stos
pop
adc
xor
mov
mov
stos
push
lock
fnstcw
sbb
out
pop
rclb
adc
sti
sbb
jne
pop
xchg
push
jge
in
push
leave
pop
sbb
and
push
pop
inc
cwtl
ss
into
push
mov
pop
sub
xor
jno
and
cmp
dec
fwait
cs
sbb
incl
lahf
ss
std
xchg
mov
mov
bound
lret
pop
inc
or
in
mov
sbb
mov
insb
pop
jecxz
imul
sbb
jg
or
inc
xchg
jl
jge
popl
push
xor
jge
sub
pop
ljmp
or
cmc
inc
jg
sub
clc
cmpsb
xchg
ficompl
aam
cmp
lahf
ret
nop
call
loope
insl
das
adc
out
pusha
mov
movsl
inc
xchg
adc
js
fcomps
aaa
lcall
pop
pushf
xchg
sbb
mov
cmc
jge
sbbl
stc
in
ljmp
mov
insb
jne
lcall
sbb
mov
jmp
imul
repz
or
stos
inc
jne
outsl
adc
jno
xor
es
mov
cmp
jne
cld
jg
test
mov
aad
push
lahf
adc
test
lock
test
or
sahf
add
and
mov
push
je
mov
out
lods
add
cwtl
mov
jae
and
mov
fnsave
inc
lahf
cmpsb
inc
xchg
push
cs
cmp
lock
pop
inc
push
adc
inc
xor
es
add
inc
hlt
sbb
sbb
push
lock
push
dec
lock
add
pop
xchg
loopne
sti
add
cmp
loop
iret
inc
inc
add
clc
rdtsc
jo
sub
mov
push
push
iret
lods
jae
lea
jnp
das
sub
mov
xchg
or
push
adc
subb
icebp
insl
xchg
loopne
test
and
imul
xchg
mov
dec
loop
adc
scas
cmc
push
push
insl
data16
jmp
xchg
pushf
gs
std
push
shll
lds
je
fsubrl
xlat
bound
push
push
inc
xor
push
inc
xchg
int
inc
jbe
insb
outsb
pop
inc
dec
daa
std
push
jae
movb
ret
jmp
cld
divb
add
pop
scas
repnz
out
push
test
lret
stos
mov
fs
leave
push
hlt
mov
cltd
btl
pop
jbe
iret
iret
lods
stc
sub
and
fucomp
andb
dec
inc
cmp
cmpsl
mov
cwtl
call
test
sbb
push
pop
mov
jns
movsb
mov
xchg
les
mov
adc
dec
out
xchg
enter
push
clc
out
or
inc
xor
stos
and
aas
aas
xchg
fcompl
mov
sub
shlb
ret
cmp
lock
cli
dec
stos
cwtl
dec
pop
jg
xchg
ret
xorb
xchg
or
pop
int3
data16
jbe
push
xchg
mov
and
fstl
push
push
cmp
outsb
push
les
in
jns
into
imul
ss
mov
jne
sub
fimuls
xchg
mov
addr16
jnp
mov
cmp
xorl
mov
mov
out
push
add
sbb
adc
imul
xchg
mov
scas
sub
stos
leave
adc
xor
sub
add
outsb
lods
cmp
mov
push
movb
dec
inc
popl
add
subl
shlb
push
mov
push
rcl
cmc
not
push
iret
inc
jge
add
push
inc
and
jne
data16
sbb
mov
jae
in
int
pop
and
mov
lcall
insl
push
jg
sbb
aam
sub
pop
lahf
push
or
dec
mov
arpl
inc
cwtl
inc
orb
add
mov
push
cmp
dec
cltd
fdivp
mov
andl
adc
outsl
jbe
lea
fnsave
mov
dec
nop
jae
lods
xor
or
fnstsw
aad
cwtl
sub
lret
sbb
addr16
pxor
insl
idivb
std
push
push
fs
sub
cmp
stos
push
mov
fnstenv
mov
test
xor
rorb
fisttpll
and
rolb
pop
fcmove
daa
imul
pop
addr16
mov
outsb
mov
inc
pop
xchg
mov
divb
scas
enter
cmp
mov
stc
aam
maxps
insl
cwtl
jo
sub
lea
jns
mov
je
dec
mov
sbb
out
push
les
aas
add
inc
inc
cmc
jmp
inc
mov
sahf
dec
int3
shr
js
and
add
sub
addr16
leave
jne
sub
std
repnz
push
insl
sub
in
lcall
movsb
cmp
add
testl
mov
jnp
xor
mov
sbb
jmp
sahf
test
jmp
push
rorb
or
add
es
in
jp
mov
in
repnz
fmull
xlat
addl
ja
out
ss
xlat
jg
mov
addr16
popa
cwtl
mov
test
lods
cmp
ljmp
insb
out
cmpsb
push
enter
call
loop
or
mov
cmpsl
repnz
hlt
movsl
xchg
jno
in
cld
jnp
sub
and
sub
sbb
aas
outsl
jp
jle
repz
push
cmpl
mov
dec
ss
cli
repz
ljmp
fst
fsubrl
lock
inc
mov
in
push
dec
inc
popf
iret
jmp
fadds
or
pushf
sub
xchg
jae
push
pop
andl
lods
test
mov
test
nop
xchg
jmp
mov
sbb
xchg
lcall
and
int
ret
enter
pop
cmpsb
int3
shl
imul
test
pushf
lcall
pop
fimuls
jb
or
repz
pushf
aaa
in
mov
add
flds
ficoms
jge,pt
ja
mov
arpl
pop
add
xor
xchg
add
mov
mov
dec
and
pop
pop
push
outsl
jae
test
jge
lods
pusha
into
mov
xor
sahf
inc
mov
pop
inc
jp
fs
test
test
lahf
sub
pop
cmp
ss
fwait
sub
pop
mov
in
pop
xchg
mov
pushf
fcomps
mov
fisttpl
jge
lods
in
std
xchg
lds
das
mov
push
push
fs
jmp
stos
fldz
push
cltd
xor
out
lret
sub
mov
push
or
dec
sub
cmp
mov
jl
push
jecxz
jae
repnz
repnz
addr16
xor
data16
sbb
mov
das
or
pop
movsl
aaa
mov
push
sti
arpl
fcmovu
je
lock
push
popa
cmpsl
jbe
scas
rcll
outsb
adc
aad
sub
hlt
shrd
imul
xlat
dec
cmpsl
or
rclb
fnstcw
inc
mov
hlt
lods
out
pop
push
cs
mov
mov
jnp
pop
cmpsl
inc
mov
cld
cld
clc
mov
jo
pop
pop
loopne
sub
mov
push
hlt
add
add
outsb
test
ret
lret
add
push
mov
andb
cwtl
fstpt
pop
jmp
jmp
mov
es
and
mov
push
scas
jb
orb
and
xchg
cmp
lock
sbb
out
shlb
dec
push
fcmovnu
jle
popa
std
std
and
jns
sbb
adc
pop
sbb
mov
mov
dec
adc
cmpsl
addr16
repnz
leave
mov
mov
sbb
dec
inc
sbb
loopne
rol
inc
add
test
xchg
jp
testl
mov
cmp
add
xchg
in
hlt
xchg
fucomp
ds
push
sub
dec
ret
push
aam
mov
push
divb
push
mov
cmp
ja
sbb
cwtl
cmp
add
rorb
testl
loope
jbe
add
xchg
fdivrs
leave
fisttpll
dec
imul
int
and
push
and
pop
stos
sbb
xor
jmp
out
mul
call
xchg
sub
cmp
sbb
adc
xor
movsb
aas
xchg
mov
in
jno
xchg
ds
add
arpl
pcmpeqw
rcl
lahf
out
pushl
aaa
add
test
xor
dec
jo
scas
cs
cmc
pop
jge,pt
xor
popf
cwtl
mov
pop
daa
pop
outsl
outsl
jmp
test
int3
outsb
and
lret
adc
popa
cltd
and
adc
sahf
jno
add
sub
shlb
inc
ret
mov
dec
dec
popa
inc
and
shrl
or
mov
or
push
cld
mov
inc
sbb
hlt
iret
jecxz
imul
push
lods
imul
xlat
lds
in
loope
cmp
jge
add
pop
mov
dec
push
mov
mov
mov
out
sahf
test
jne
mov
inc
in
lds
aam
and
dec
sarb
xchg
stos
fstl
dec
push
data16
stc
std
shrb
push
stos
lea
mov
fwait
mov
jo
pop
sub
xor
and
xchg
or
stos
pop
pop
aad
rorb
or
clc
dec
mov
pop
cmp
xchg
jecxz
xchg
ds
addr16
push
pop
mov
test
mov
fisttpl
xlat
lret
xor
push
mov
bound
and
cmp
add
adc
cmp
pop
rcrb
adc
jmp
addb
sbbl
dec
inc
stos
repnz
into
cmpsl
stc
mov
mov
in
mov
push
or
aam
mov
jmp
push
inc
xchg
inc
mov
dec
call
das
out
pop
shrb
lahf
icebp
loopne
sub
jns
add
mov
pop
mov
jo
fildll
jl
notb
out
arpl
mov
das
push
cmp
loope
mov
stos
xor
mov
mov
cmp
and
mov
ja
jg
mull
cmp
mov
lcall
out
pusha
movsl
and
sub
hlt
jnp
popf
sub
cs
mov
into
inc
mov
bound
and
sar
push
out
push
lods
mov
arpl
fidivrl
outsl
push
push
mov
repnz
sbb
push
jae
fwait
cmp
stos
test
mov
loop
mov
xor
shrl
mov
mov
mov
repz
push
or
xchg
mov
jno
inc
leave
jmp
mov
inc
inc
insl
add
sub
movsb
lods
inc
mov
dec
pop
pop
inc
ljmp
xchg
jne
cmp
out
push
and
xor
sbb
divl
clc
jmp
lods
mov
in
inc
inc
loop
cmp
pop
setae
mov
mull
mov
mov
les
xor
or
stc
lock
loope
add
push
stos
clc
test
out
inc
jae
sbb
sbb
adc
fs
jmp
fsubs
xor
in
cmpsb
push
jecxz
clc
stc
jl
xchg
ret
mov
les
icebp
cmpsl
arpl
adc
xor
sub
adc
daa
adc
daa
jecxz
mov
xchg
fucom
mov
out
out
sarb
test
jnp
push
and
stos
push
bnd
stc
cltd
pop
lea
xor
jecxz
icebp
sbb
xor
push
cmpsb
je
mov
mov
pop
dec
mov
sahf
rolb
or
sbb
pop
jae
test
and
test
movsb
jb
mov
aas
push
shl
xor
ss
out
xor
or
mov
mov
ficoms
outsl
sub
xor
leave
lret
sub
aad
imul
add
sarl
mov
sbb
test
jg,pn
jns,pt
or
lds
add
mov
adc
sbb
sub
sub
stos
xchg
ficomps
fs
cli
rol
push
dec
adc
sub
cltd
mov
and
fldt
add
cli
and
add
repnz
or
add
stos
mov
mov
mov
popa
sbb
push
push
add
es
lods
mov
les
push
cmp
dec
xchg
mov
or
add
out
pusha
mov
or
push
aaa
pop
imul
imul
orl
subb
cmpsb
and
pop
into
in
ss
mov
cmpsl
fwait
imul
push
daa
pusha
jae
lret
sarl
loopne
fidivrl
imul
js
sub
jge
fldenv
ljmp
sub
movsl
mov
xchg
adc
fnstsw
cmp
sbb
xor
aas
loopne
scas
xchg
cmpl
cmp
mov
push
push
lock
subl
outsl
loope
cmp
inc
push
gs
jnp
loop
insb
adc
ss
imul
fs
jecxz
push
jo
xchg
int3
out
add
xor
mov
out
in
fwait
leave
and
adc
daa
inc
or
cmp
or
sub
nop
mov
xor
xor
nop
push
jmp
icebp
ret
pusha
adc
hlt
and
movsb
jle
jmp
xorl
push
xor
mov
ja
ds
mov
jle
into
jg
pop
arpl
and
sub
int
add
mov
or
nop
ja
ds
les
aad
clc
cld
pop
popf
inc
adc
mov
xchg
sbb
sub
popa
js
sub
rcrb
scas
push
lret
and
mov
fdivl
xorb
pop
jge
sbb
xchg
clc
cltd
pop
loope
mov
lods
imul
sti
nop
jp
mov
mov
dec
pop
movsl
push
aad
out
cli
xor
mov
jnp
dec
mov
sub
mov
inc
xchg
loopne
loop
or
clc
sbb
imul
mov
cmpsl
xchg
jl
push
push
addb
mov
and
fidivl
xor
movsb
dec
outsb
into
ret
inc
popa
mov
and
testl
jge
aam
or
xchg
rorb
test
mov
sub
mov
repz
das
andb
fidivrl
cltd
call
sub
adc
sbb
inc
dec
xor
push
sub
push
sahf
loopne
dec
nop
ret
test
sub
movsb
movsb
out
enter
ljmp
pop
repz
mov
fs
add
fidivrl
push
adc
insb
mov
ljmp
mov
in
loope
subl
jmp
mov
pop
bound
inc
jmp
or
clc
in
sbb
rcrb
sub
aad
nop
rcrl
add
jbe
lret
cmp
mov
leave
pop
and
adc
aad
cli
mov
pop
xlat
and
in
arpl
cmpb
mov
dec
pop
js
adc
outsb
push
pop
jbe
fstps
int3
andb
xchg
xchg
jle
test
dec
cmp
mov
xor
jp
adc
mov
pop
ds
or
and
sbb
inc
dec
out
xor
cmp
jge
pop
pop
sbb
pushf
sub
ss
cld
das
pop
dec
cmpb
dec
sub
sub
repz
stos
or
out
add
int3
ss
jmp
mull
add
in
faddl
les
mov
mov
sub
jge
push
or
push
ljmp
jb
pop
ficoms
fidivl
fwait
mov
sub
inc
dec
jno
call
mov
cmpsl
in
mov
in
mov
rorb
lea
ja
out
jmp
hlt
inc
push
jmp
or
or
push
inc
push
adc
rcr
lahf
js
jl
in
add
cs
enter
mov
dec
xor
xor
fnsave
jns
les
fidivs
pop
xor
sub
je
push
fimuls
dec
mov
icebp
fstps
scas
add
popa
dec
movsl
or
lcall
popa
pop
arpl
inc
jbe
movsb
push
ljmp
hlt
popf
enter
movl
jnp
mov
mov
out
and
loope
or
xchg
mov
ljmp
rcll
aad
push
popa
pop
jne
pop
xor
std
hlt
lea
xchg
cmp
imul
in
pop
pop
out
mov
aam
push
lods
int3
pop
int3
mov
nop
or
decb
pop
xchg
inc
xchg
cli
popf
xor
xor
pusha
mov
xor
adc
and
adc
arpl
mov
mov
push
les
sub
pmaxsw
or
pushf
das
cmp
int
and
cmpsb
and
ljmp
cltd
jne
pop
inc
clc
movsb
ret
xchg
addb
outsl
or
ret
xlat
adcb
push
push
mov
outsl
ds
xchg
mov
xchg
add
ljmp
add
or
xchg
imul
ret
movsl
gs
sbbl
jns
dec
jnp
add
push
leave
and
or
lock
lock
fxch
xrelease
xchg
iret
mov
int3
sub
dec
cmp
out
mov
fstpt
sbb
enter
jl
call
adc
adcl
sub
out
jmp
imul
sub
bound
adc
lods
test
mov
sbb
cmp
push
stos
mov
and
pop
xchg
insl
shll
scas
fistl
sahf
add
js
cmp
test
xchg
loopne
je
add
inc
xlat
push
pop
in
pop
dec
push
popl
add
insb
into
insl
loopne
push
and
inc
cmp
cmp
push
jne,pt
lcall
pushl
dec
stos
mov
jbe
adc
mov
pop
mov
inc
fstps
shr
dec
jno
clc
rorb
xchg
xchg
ret
fmulp
imul
gs
shr
js
sahf
jp
pop
gs
scas
push
mov
add
xchg
ss
ret
call
add
es
aad
movsb
and
outsb
insb
rcrl
jecxz
pop
inc
jns
and
hlt
jns
adc
fisttps
inc
inc
imul
and
repz
jo
sub
rcrb
xchg
pop
andl
loop
lods
idivb
xchg
adc
in
push
jnp
xchg
jmp
movsl
scas
inc
or
push
pop
in
xchg
aam
pushf
mov
enter
mov
pop
mov
sbb
cmp
enter
std
xor
pop
mov
sub
mov
lods
mov
roll
lret
int3
jae
jns
fmul
sub
shll
test
out
daa
jae
addr16
xchg
scas
adc
push
add
jno
repz
adc
aad
mov
cmp
andl
and
rcr
sbb
cli
clc
stos
and
push
mov
push
pop
aam
cmpsb
jp
lcall
sbb
jno
xchg
xchg
mov
sahf
fisttpl
lds
push
pop
xor
jge
adcl
dec
cmp
pop
test
cmp
mov
xor
jnp
andl
lret
or
jge
ja
mov
or
mov
call
push
iret
push
xchg
cmp
and
or
clc
rolb
or
sbb
pminsw
push
push
gs
dec
popa
out
mov
repnz
rcrb
test
push
dec
daa
mov
ret
mov
mov
dec
or
fwait
addr16
fidivl
mov
pop
jp
stos
cmpsb
push
icebp
test
pop
mov
push
movl
shrb
adc
divl
adc
push
rorl
ds
add
mov
mov
or
and
data16
mov
rol
sbb
add
enter
dec
add
ljmp
cli
lahf
daa
test
fnsave
jmp
push
in
sub
jmp
mov
lods
icebp
inc
js
fwait
mov
sarl
xor
mov
mov
jno
cld
mov
rcll
dec
rcrb
mov
orb
int3
mov
data16
mov
mov
mov
arpl
sti
les
push
xor
daa
mov
pop
pop
bound
sbb
into
rol
popa
popaw
mov
mov
addr16
xchg
sahf
les
scas
arpl
shll
adc
fdivrl
pop
out
daa
jo
aaa
xchg
add
mov
imul
xlat
add
decl
add
push
adc
xchg
shrb
aas
loope
sbb
fwait
jbe
lret
sarb
rorl
push
jbe
mov
nop
push
mov
stos
inc
xchg
mov
mov
push
push
dec
mov
out
nop
sub
adc
mov
dec
leave
loopne
fimull
daa
dec
pop
or
stos
pop
xchg
xchg
push
clc
push
and
pushf
mov
idivl
insl
pop
dec
out
cltd
sbb
lcall
mov
das
pop
nop
adc
imulb
test
incl
pop
sub
dec
das
or
rcr
popf
mov
cmp
or
jl
pop
into
clc
testl
lahf
pop
push
es
mov
rcll
jno
pop
jns
or
stc
push
mov
lret
mov
shll
mov
mov
jnp
pop
xchg
cs
cmpsl
push
in
js
mov
gs
or
push
into
adc
xor
pop
mov
xlat
mov
lock
sbbl
push
cmp
nop
jnp
xor
rorb
lcall
add
push
or
sub
xor
icebp
fwait
or
hlt
add
cmp
enter
jle
pushl
rolb
add
mov
inc
add
mov
