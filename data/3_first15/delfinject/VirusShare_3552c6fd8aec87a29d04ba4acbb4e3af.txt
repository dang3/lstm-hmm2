add
inc
add
add
jns
add
add
add
add
add
pusha
adc
add
add
add
add
lock
cld
sub
add
inc
add
inc
add
sub
aam
inc
add
sub
sub
inc
add
push
dec
bound
arpl
loopne
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
xchg
inc
add
nop
inc
add
nop
inc
add
xchg
inc
add
xchg
inc
add
nop
inc
add
nop
inc
add
mov
add
push
inc
and
add
mov
and
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
cmpl
jne
push
push
call
mov
test
jne
xor
pop
pop
ret
mov
mov
mov
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
pop
pop
ret
nop
mov
mov
ret
mov
push
push
mov
mov
call
test
jne
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
ret
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jne
mov
call
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
add
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
cmp
jb
mov
add
mov
add
cmp
ja
cmp
jne
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
sub
jmp
mov
add
mov
mov
add
sub
mov
sub
mov
mov
mov
call
test
jne
xor
jmp
mov
jmp
mov
cmp
jne
xor
pop
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
mov
add
mov
mov
jmp
mov
mov
cmp
ja
mov
add
cmp
ja
cmp
jae
mov
mov
add
cmp
jbe
mov
push
push
push
call
test
jne
movl
mov
call
mov
cmp
jne
mov
xor
mov
cmpl
je
mov
mov
mov
mov
sub
mov
mov
add
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
and
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
cmp
jbe
mov
cmp
jbe
push
push
sub
push
push
call
test
jne
mov
xor
mov
jmp
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
push
mov
mov
add
and
mov
mov
add
and
mov
mov
mov
sub
mov
mov
jmp
mov
mov
add
cmp
jae
mov
cmp
jae
mov
cmp
jbe
push
sub
push
push
call
test
jne
movl
mov
cmp
jne
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
add
and
mov
jmp
cmp
jg
mov
mov
mov
call
cmpl
je
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
cmp
jne
mov
mov
call
cmpl
je
mov
mov
mov
call
cmpl
jne
mov
mov
mov
call
xor
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
jmp
mov
cmp
je
cmp
jne
cmp
jne
cmp
jle
lea
mov
sub
mov
add
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
cmp
jne
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
add
mov
mov
sub
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
lea
and
mov
add
and
cmp
jae
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
ret
push
mov
push
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
jmp
push
push
mov
push
call
mov
cmp
jne
mov
call
mov
call
mov
call
mov
test
je
mov
mov
push
call
mov
test
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
ret
push
cmp
jne
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
lea
mov
jmp
mov
cmp
jb
add
cmp
jb
mov
cmp
jne
movl
xor
mov
ret
nop
push
mov
sub
lea
cmp
jl
movl
mov
call
pop
ret
cmp
jl
mov
or
mov
mov
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
cmp
je
movl
call
add
mov
pop
pop
ret
lea
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
add
add
andl
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
movb
mov
call
mov
test
je
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
lea
mov
sub
add
mov
call
jmp
lea
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
add
mov
add
cmp
jae
lea
sub
call
lea
mov
call
movb
mov
add
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
jne
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
xor
test
jns
add
sar
cmp
jg
mov
mov
test
jne
inc
cmp
jne
mov
ret
push
push
push
push
mov
mov
mov
mov
cmp
jle
mov
mov
cmp
jle
mov
mov
cmp
jg
mov
mov
cmp
je
mov
jmp
cmp
jg
mov
call
mov
test
jne
mov
call
test
jne
xor
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
incl
sub
add
jmp
mov
call
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
cmp
jne
mov
mov
mov
add
andl
mov
mov
or
mov
add
incl
sub
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
sub
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
cmp
je
movl
jmp
add
mov
call
and
mov
add
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
test
je
and
cmp
jge
movl
jmp
orl
jmp
mov
cmpl
je
cmpl
je
cmpl
jge
movl
jmp
mov
add
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
mov
sub
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
mov
sub
mov
add
cmpl
jge
mov
add
mov
sub
mov
jmp
mov
testb
jne
mov
mov
add
call
cmpl
jl
mov
add
mov
or
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
mov
cmp
jl
mov
sub
mov
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
and
or
mov
mov
jmp
call
mov
add
testb
jne
mov
mov
mov
mov
mov
cmp
jge
add
mov
mov
sub
jmp
call
mov
sub
cmpl
jl
mov
add
mov
call
jmp
add
mov
add
andl
jmp
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
jmp
xor
jmp
mov
sub
add
mov
and
or
mov
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
test
je
mov
mov
xchg
call
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
test
jle
call
mov
test
jne
mov
call
jmp
xor
mov
pop
ret
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
push
push
push
mov
mov
jmp
push
call
mov
mov
test
je
cmp
jbe
cmpb
jne
cmpb
jne
add
jmp
xor
mov
jmp
cmp
jne
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
cmp
ja
mov
mov
call
mov
mov
xor
jmp
cmp
jne
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
ja
mov
pop
pop
pop
pop
ret
mov
push
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
mov
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
pop
ret
mov
cmpl
je
call
mov
jmp
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
mov
mov
mov
ret
nop
mov
test
je
mov
ret
mov
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
test
je
add
call
test
je
call
popl
add
ret
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
xchg
jmp
mov
mov
test
je
movzwl
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
movl
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
push
push
push
mov
mov
test
je
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
test
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
test
je
mov
xor
mov
xor
push
push
pushl
mov
cmp
jle
mov
inc
mov
test
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
cmpl
je
call
ret
mov
call
ret
push
push
push
push
mov
mov
xor
mov
lea
mov
xor
mov
push
mov
sub
jle
mov
add
add
call
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
lea
add
call
mov
jmp
xor
mov
pushl
pushl
mov
mov
lea
add
call
pop
jmp
xor
mov
mov
push
mov
lea
add
call
pop
jmp
mov
add
call
mov
jmp
mov
mov
add
call
mov
add
add
dec
jne
pop
sub
jle
lea
add
call
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
xor
mov
lea
mov
mov
mov
pushl
call
add
add
dec
jne
jmp
mov
mov
mov
call
xor
mov
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
mov
call
add
add
dec
jne
pop
pop
pop
pop
ret
ret
nop
mov
jmp
ret
push
mov
pushl
call
pop
ret
nop
jmp
ret
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
jg
test
jge
mov
call
mov
mov
call
jmp
xor
mov
test
je
sub
mov
mov
sub
xor
mov
add
mov
mov
mov
mov
test
je
mov
jmp
xor
mov
imull
mov
mov
cltd
idiv
cmp
je
mov
call
addl
test
je
cmpl
jne
mov
cmp
jge
test
je
mov
add
mov
imul
add
mov
sub
mov
call
lea
mov
call
mov
jmp
decl
mov
call
mov
mov
mov
cmp
jge
mov
test
je
mov
imul
mov
add
xor
call
mov
push
mov
mov
mov
add
mov
call
jmp
mov
imul
mov
add
mov
mov
call
movl
add
mov
add
mov
sub
imul
mov
imul
add
xor
call
cmpl
jle
addl
decl
dec
test
jl
inc
movl
mov
push
mov
lea
mov
mov
call
incl
dec
jne
mov
mov
pop
pop
pop
mov
pop
ret
push
addl
call
ret
nop
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
test
je
lock
test
je
lock
jne
push
push
mov
incl
call
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
push
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
test
je
mov
cmp
jne
mov
mov
mov
jmp
mov
test
jne
ret
jmp
jmp
pop
pop
ret
mov
mov
test
je
movl
push
push
mov
call
pop
ret
lea
test
je
push
push
mov
push
call
pop
mov
popl
test
jne
ret
mov
push
call
ret
mov
test
mov
je
mov
push
call
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
push
push
call
push
call
ret
mov
push
push
push
call
push
push
call
call
push
call
ret
nop
push
call
push
push
call
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
mov
lea
dec
xor
div
imul
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jl
inc
xor
lea
mov
add
cmp
jbe
xor
mov
jmp
cmpl
je
cmpl
je
lea
mov
lea
add
mov
mov
call
mov
jmp
lea
mov
lea
add
mov
mov
call
mov
jmp
mov
lea
cmp
jae
mov
mov
lea
mov
call
add
jmp
mov
mov
lea
mov
call
add
inc
dec
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
movb
mov
mov
cmp
jl
mov
cmpw
jne
mov
mov
mov
add
cmp
jl
mov
add
cmpl
jne
mov
test
jne
test
je
movzwl
cmp
jne
mov
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
push
mov
mov
push
push
call
mov
mov
mov
cmpl
je
mov
mov
movzwl
dec
test
jl
inc
xor
lea
mov
mov
test
je
cmp
jae
mov
inc
dec
jne
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
movzwl
dec
test
jl
inc
xor
lea
mov
mov
test
je
mov
add
mov
lea
mov
cmpl
je
lea
mov
mov
lea
mov
mov
add
mov
call
lea
mov
mov
lea
mov
cmp
jae
lea
mov
mov
mov
mov
mov
call
add
mov
jmp
lea
mov
mov
mov
mov
mov
call
add
mov
jmp
lea
mov
mov
mov
mov
mov
call
add
mov
inc
dec
jne
movb
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
setne
ret
nop
push
mov
add
push
xor
mov
mov
mov
call
xor
push
push
pushl
mov
call
test
je
lea
xor
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
pop
ret
nop
cmpl
je
cmpl
jne
xor
ret
mov
ret
push
push
add
mov
sub
mov
mov
add
jmp
mov
add
mov
sub
shr
test
jle
mov
mov
and
cmp
jne
mov
add
and
movzwl
add
mov
add
add
dec
jne
mov
mov
mov
add
test
jne
pop
pop
pop
pop
ret
push
push
push
push
push
mov
mov
xor
push
call
mov
test
je
push
push
call
mov
test
je
mov
push
push
call
test
sete
push
call
mov
pop
pop
pop
pop
pop
ret
add
fs
insb
cs
insb
add
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
add
push
mov
add
push
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
xor
mov
call
lea
xor
mov
call
movl
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
push
call
cmp
sbb
inc
test
je
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
mov
mov
push
call
lea
push
push
mov
push
mov
add
push
mov
push
call
mov
mov
jmp
cmpl
je
add
push
lea
push
push
mov
push
call
test
jne
mov
sub
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
movl
lea
push
mov
mov
mov
call
lea
push
mov
push
lea
push
lea
push
lea
lea
mov
call
test
je
xor
mov
mov
cmp
jne
cmp
ja
mov
mov
lea
push
push
mov
push
mov
push
mov
push
call
jmp
call
test
je
mov
mov
call
test
je
push
push
push
mov
push
mov
push
call
mov
cmpl
jne
mov
call
test
je
push
push
push
push
mov
push
call
mov
cmpl
je
mov
mov
mov
call
cmpl
je
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
mov
lea
push
push
mov
push
mov
push
mov
push
call
test
je
movl
mov
cmp
jne
mov
add
mov
jmp
add
mov
lea
push
mov
push
call
mov
push
call
mov
push
call
jmp
push
mov
push
call
mov
push
call
mov
push
call
movl
jmp
push
mov
push
call
mov
push
call
mov
push
call
movl
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
or
lea
push
lea
push
lea
push
lea
mov
mov
call
test
je
mov
push
mov
push
mov
push
mov
mov
mov
call
mov
push
mov
push
mov
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
jae
push
push
call
push
call
mov
ret
push
imul
insb
insb
outsl
arpl
add
dec
gs
gs
xor
cs
insb
add
add
in
inc
add
dec
inc
add
add
adc
inc
add
sub
cld
sub
add
inc
add
inc
add
sub
aam
inc
add
sub
sub
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
push
push
je
gs
insl
push
dec
inc
add
inc
add
add
add
sub
cld
sub
add
inc
add
inc
add
sub
aam
inc
add
sub
sub
inc
add
inc
add
dec
inc
add
daa
inc
add
dec
inc
add
inc
add
push
inc
jne
je
insl
dec
gs
outsl
jb
push
je
gs
insl
rorb
add
dec
inc
add
add
or
add
sub
cld
sub
add
inc
add
inc
add
sub
aam
inc
add
sub
cld
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
gs
outsl
jb
push
je
gs
insl
mov
add
push
push
mov
mov
call
mov
mov
mov
mov
pop
pop
ret
nop
push
mov
pushl
pushl
xor
mov
call
pop
ret
push
add
mov
push
push
mov
mov
mov
call
mov
mov
push
push
mov
mov
mov
call
mov
mov
pushl
pushl
xor
mov
mov
call
mov
mov
add
pop
ret
ret
lea
push
mov
mov
cmpl
jne
cmpl
jb
jmp
jl
cmpl
jne
cmpl
jbe
jmp
jg
mov
mov
mov
mov
call
pop
ret
nop
ret
lea
push
mov
add
push
push
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
jmp
mov
call
mov
cmpl
je
mov
cmp
jne
cmpl
jne
call
mov
mov
mov
mov
mov
cmp
jne
call
mov
cltd
push
push
mov
mov
mov
call
pop
pop
mov
pop
ret
mov
push
mov
add
push
push
mov
mov
cmpl
jne
cmpl
jb
jmp
jl
cmpl
jne
cmpl
jbe
jmp
jg
mov
mov
xor
mov
mov
mov
call
cltd
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
mov
mov
ret
nop
push
push
push
mov
mov
test
jl
test
jl
mov
sub
test
jle
cmp
jge
mov
mov
add
mov
call
add
jmp
xor
mov
pop
pop
pop
ret
sub
jb
je
dec
je
jmp
mov
jmp
add
jmp
add
mov
mov
ret
nop
push
push
call
mov
mov
mov
call
mov
and
mov
call
test
jle
mov
call
pop
pop
ret
push
mov
xor
mov
call
xor
mov
xor
mov
pop
ret
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
call
mov
cmp
jge
mov
xor
mov
mov
call
pop
pop
pop
ret
nop
push
push
push
cmpl
jle
mov
cmp
je
mov
add
and
mov
mov
mov
mov
mov
cmp
je
cmpl
jne
mov
call
xor
jmp
test
jne
mov
movzwl
mov
call
mov
jmp
mov
movzwl
mov
mov
call
mov
test
mov
pop
pop
pop
ret
push
push
push
push
mov
mov
mov
mov
test
jl
test
jl
mov
add
test
jle
cmp
jle
cmp
jle
mov
mov
call
mov
mov
add
mov
mov
call
mov
mov
jmp
xor
pop
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
cmpw
jne
mov
mov
mov
mov
call
movzwl
mov
mov
mov
inc
and
mov
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
mov
shlw
jmp
sub
mov
mov
shl
or
cmpl
je
decl
call
and
mov
jmp
movw
movw
movswl
movzwl
cmp
jg
sub
mov
movzwl
shr
or
pop
pop
pop
pop
ret
mov
push
movswl
mov
sub
movzwl
shr
call
mov
pop
ret
lea
movw
movw
movw
mov
call
ret
lea
push
mov
add
push
push
push
mov
mov
mov
mov
lea
movw
add
dec
jne
mov
dec
test
jl
inc
xor
movswl
mov
movzbl
incw
inc
dec
jne
movw
mov
lea
lea
movswl
push
mov
pop
sub
mov
shl
add
mov
inc
add
add
cmp
jne
cmpw
je
mov
call
mov
sub
mov
mov
test
jle
mov
lea
lea
mov
mov
movzwl
shr
mov
movswl
movswl
sub
mov
shl
mov
mov
inc
addl
add
dec
jne
mov
inc
cmp
jg
movswl
mov
sub
mov
shl
mov
inc
cmp
jle
mov
movswl
movzwl
shr
test
je
mov
mov
shl
cmp
je
movswl
mov
movw
inc
cmp
jne
mov
mov
movswl
mov
sub
mov
shl
mov
mov
dec
test
jl
inc
movw
movswl
mov
movzbl
mov
cmpw
je
movswl
mov
mov
add
mov
mov
cmp
jg
mov
mov
dec
sub
jl
inc
movswl
mov
mov
mov
inc
dec
jne
jmp
mov
movzwl
shr
mov
lea
mov
sub
test
je
cmpw
jne
movswl
mov
movw
movswl
mov
movw
mov
mov
incw
test
je
movswl
mov
lea
mov
jmp
movswl
mov
lea
mov
add
dec
test
jne
mov
mov
movswl
mov
mov
incw
dec
jne
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
push
mov
mov
mov
mov
call
mov
test
jne
mov
call
mov
mov
dec
test
jl
inc
mov
movb
inc
dec
jne
mov
mov
mov
add
dec
jne
jmp
xor
cmp
jle
movzwl
shr
cmp
jne
mov
jmp
movzwl
shr
inc
test
jne
cmp
jge
mov
call
jmp
mov
sub
call
mov
movswl
mov
inc
cmp
jne
mov
call
mov
dec
test
jl
movswl
movb
inc
dec
test
jge
cmp
jg
cmp
jle
movswl
movb
inc
cmp
jg
push
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
mov
mov
call
mov
test
jne
mov
call
mov
xor
movswl
mov
movb
inc
cmp
jne
xor
movswl
mov
mov
inc
cmp
jne
jmp
xor
cmp
jle
movzwl
shr
mov
cmp
jl
mov
test
je
movswl
mov
mov
jmp
movswl
mov
mov
movzwl
shr
cmp
jge
movswl
movzbl
call
cmp
jg
cmp
jne
mov
call
mov
add
jmp
cmp
jne
mov
call
mov
add
test
jl
movswl
mov
movb
inc
dec
test
jge
jmp
movswl
mov
sub
mov
inc
cmp
jg
cmp
jge
movswl
mov
movb
inc
cmp
jl
mov
push
mov
mov
mov
call
pop
pop
pop
pop
ret
mov
push
cmpw
jne
mov
call
mov
mov
mov
mov
call
call
or
mov
mov
call
decw
movzwl
shr
mov
mov
cmp
jb
mov
test
je
movzwl
mov
mov
jmp
movzwl
mov
mov
movzwl
shr
cmp
jae
movzwl
mov
movzbl
call
mov
pop
ret
lea
push
movzwl
shr
mov
cmp
jb
mov
test
je
movzwl
mov
mov
jmp
movzwl
mov
mov
movzwl
shr
cmp
jae
movzwl
movzbl
call
test
je
dec
mov
call
mov
mov
shl
add
mov
mov
pop
ret
nop
push
push
push
push
mov
mov
mov
xor
decw
cmpw
jl
movzwl
mov
movzwl
mov
mov
inc
and
mov
inc
cmp
je
decw
cmpw
jge
call
cmp
ja
movzwl
mov
inc
cmp
je
jmp
sub
mov
call
mov
sub
dec
and
mov
decw
cmpw
jl
movzwl
mov
movzwl
mov
mov
inc
and
mov
inc
cmp
je
decw
cmpw
jge
jmp
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
call
mov
call
movw
movw
mov
subl
test
jle
cmp
jle
mov
jmp
mov
mov
mov
call
movzwl
mov
mov
mov
call
movzwl
sub
test
jg
mov
call
pop
pop
pop
pop
ret
lea
cmpl
je
mov
mov
call
xor
mov
cmpl
je
mov
mov
call
xor
mov
cmpl
je
mov
mov
call
xor
mov
cmpl
je
mov
mov
call
xor
mov
cmpl
je
mov
mov
call
xor
mov
cmpl
je
mov
mov
call
xor
mov
ret
nop
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
movw
movw
movw
movw
movw
movw
movw
mov
xor
mov
call
mov
xor
mov
call
movw
mov
call
mov
mov
xor
mov
call
mov
xor
mov
call
movw
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
movw
movw
movw
movw
movw
movw
movw
movw
ret
nop
push
mov
push
push
mov
mov
xor
push
push
pushl
mov
call
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
mov
call
call
xor
pop
pop
pop
mov
push
call
ret
jmp
jmp
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
jae
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
ret
pusha
pop
inc
add
add
xor
add
add
add
add
add
add
adc
pop
push
inc
dec
dec
dec
inc
inc
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
lods
pop
inc
add
inc
add
aas
inc
add
inc
add
aas
inc
add
inc
inc
add
dec
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
add
add
add
in
add
push
push
mov
call
xor
push
push
pushl
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
mov
test
je
push
mov
push
call
test
je
push
call
mov
test
je
push
mov
mov
mov
call
add
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
push
push
mov
call
mov
push
mov
mov
mov
call
add
mov
mov
mov
mov
call
mov
mov
call
push
mov
mov
mov
call
add
mov
mov
call
mov
mov
push
mov
mov
mov
call
add
push
push
mov
call
mov
mov
mov
mov
call
push
mov
xor
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
pop
call
add
dec
dec
dec
inc
inc
add
lea
xor
mov
add
mov
add
inc
add
lea
in
push
inc
add
add
and
add
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
inc
jb
outsl
jb
mov
push
jne
je
insl
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
incl
add
add
pusha
inc
add
add
xor
add
push
add
clc
nop
add
stos
xchg
add
or
add
ficoms
add
sub
add
loopne
add
loopne
add
loopne
add
push
add
push
add
push
add
push
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
push
add
loope
add
push
add
loope
add
loope
add
push
add
push
add
push
add
add
add
loope
add
add
add
loope
add
loope
add
add
add
loope
add
loope
add
add
add
loop
add
loop
add
push
add
loop
add
add
add
add
push
add
push
add
push
add
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
push
add
push
add
add
push
add
push
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
insb
inc
jb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
gs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
push
dec
outsl
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
fs
gs
imul
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
gs
imul
add
inc
js
je
jb
arpl
jae
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
add
insb
push
outsb
ja
outsb
add
add
imul
jo
imul
inc
gs
je
dec
popa
outsb
fs
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jae
popa
addr16
outsl
js
add
add
popa
jb
gs
inc
add
jbe
jo
xor
cs
insb
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
outsl
insb
gs
jne
xor
cs
insb
add
add
push
jns
inc
jb
gs
je
imul
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
jb
gs
xor
cs
insb
add
add
push
insb
jae
gs
popa
insb
jne
add
add
inc
gs
popa
insb
jne
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
imul
gs
xor
cs
insb
add
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
add
push
imul
jne
jb
inc
js
add
add
jb
jne
insb
push
jb
je
arpl
add
add
push
imul
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
insl
imul
outsl
arpl
jae
add
add
jp
outsl
push
gs
jne
arpl
add
add
je
push
inc
outsl
outsb
je
js
add
add
push
gs
insl
gs
push
add
add
push
gs
fs
jb
arpl
jae
gs
outsl
jb
add
add
imul
outsl
jne
arpl
add
add
fs
gs
jne
arpl
add
add
fs
imul
add
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
add
inc
insb
outsl
bound
dec
outsl
arpl
add
add
outsl
bound
inc
jb
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
jb
gs
imul
add
inc
imul
jne
arpl
add
add
gs
je
push
jb
arpl
jae
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
mov
inc
add
mov
add
cmp
aaa
mov
pop
fwait
cmp
add
add
or
add
add
push
inc
dec
dec
dec
inc
inc
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
add
outsb
imul
gs
or
push
imul
add
xor
add
clc
push
outsb
imul
sub
fisubl
aaa
jne
in
sub
lods
mov
movsl
dec
lret
xor
imul
aaa
pop
push
mov
movsl
push
ss
movsb
lods
int3
int3
test
lret
sub
mov
push
xor
fs
inc
inc
sub
int3
lret
dec
ret
ja
mov
into
jae
jne
mov
imull
cmpb
in
xor
dec
fldt
scas
aad
sbb
lret
xchg
sub
jg
and
mov
pop
or
addr16
in
and
fstpt
inc
jno
pop
test
cwtl
jmp
mov
mov
xchg
mov
sbb
scas
mov
mov
jmp
icebp
dec
out
int
jle
mov
stc
dec
adc
xor
cwtl
neg
stc
mov
push
arpl
push
movsl
mov
dec
mov
cwtl
mov
repz
inc
fnstsw
cli
lret
clc
jp
dec
cmp
sub
mov
incb
pop
and
cmp
ret
cmp
push
fwait
in
jp
cmp
cld
call
or
push
lret
inc
mov
jp
scas
addr16
mov
xlat
stos
je
mov
and
test
pushf
dec
fwait
mov
scas
fucomip
cli
negl
inc
std
int3
cmp
dec
out
std
loope
cmpsl
mov
enter
pusha
stos
cld
jmp
pop
sti
shl
pop
jmp
and
std
loope
dec
aad
jge
adc
inc
pushf
mov
std
rcrb
and
pop
mov
imul
cmc
shl
pop
je
call
mov
sarb
rol
stc
lds
xchg
sub
lods
insl
sub
call
cld
lret
sub
daa
mov
fldl
push
pop
cmc
jne
add
mov
cltd
jg
je
push
cs
cmp
push
sbb
fldt
call
or
sbb
xchg
sub
imul
js
test
ljmp
rcr
stos
shll
or
and
ret
pop
outsb
inc
mov
mov
push
and
mov
push
loop
mov
ror
pop
mov
cld
push
repz
out
push
or
jmp
std
fdivrs
ja
xchg
or
mov
aas
lds
andl
ret
jnp
jbe
sarl
lods
and
pop
std
fbld
mov
outsb
or
iret
jecxz
xlat
insb
dec
or
pop
fistpll
out
pusha
ljmp
add
add
stc
or
scas
mul
test
pop
adc
xor
lea
sub
out
cmp
mov
or
ljmp
test
cmc
fadd
jle
sub
xchg
pop
sub
das
neg
rol
jge
xchg
jmp
jns
in
mov
or
xor
xchg
sub
fsubrl
jge
jg
insl
adc
int3
mov
mov
aas
mov
shl
cmpsl
jle
or
jecxz
jecxz
es
or
pop
push
mov
popa
pop
adc
ret
sub
xor
adc
test
adc
popa
pop
sbb
loopne
push
inc
mov
adc
popa
pop
jbe
mov
jl
adc
ret
adc
test
leave
mov
leave
test
sub
in
sbb
ret
adc
mov
adc
cli
xchg
xorb
pop
mov
jge
lret
mov
adc
cmp
lcall
lret
cwtl
push
mov
push
inc
or
xor
adc
daa
mov
xor
andb
fs
sub
enter
adc
js
test
pop
adc
movsl
dec
pop
add
inc
stos
stos
jmp
fnsave
outsl
dec
sbbl
pop
insb
fucomp
jnp
stos
or
sub
jno
dec
inc
paddq
cwtl
adc
out
push
adc
jbe
sbb
fs
cmp
iret
jmp
popa
fcmovnu
cltd
cmp
scas
pop
adc
fists
jnp
pop
jle
sub
xor
mov
add
data16
idivl
loop
sbb
mov
mov
subb
push
popa
fstl
mov
rolb
push
je
jb
inc
out
xchg
fistpll
lods
rcl
cmc
ljmp
shlb
and
ss
cmp
xor
and
cmovp
add
jmp
or
scas
push
mov
imul
mov
jl
movsb
loope
cmc
xlat
adc
inc
cmc
jo
int3
pushf
push
inc
lods
mov
inc
mov
jne
mov
in
int
test
cld
mov
enter
ljmp
xor
or
negl
out
push
inc
es
fidivrs
mov
xor
in
xor
pushf
test
jbe
imul
push
lcall
jbe
mov
out
aaa
sbb
aad
fwait
add
ret
xchg
cld
outsl
aad
and
mov
adc
mov
mov
or
mov
mov
rcl
aaa
lods
dec
insb
add
push
hlt
add
loop
mov
add
aad
andl
cmp
stos
js
add
fsubrs
test
pop
add
xchg
inc
scas
daa
dec
and
cmp
lret
and
imul
push
test
in
dec
inc
add
aam
sbb
mov
aas
pop
inc
inc
out
loopne
shl
loopne
pop
ficompl
pop
xchg
add
cmp
dec
int
push
pop
lods
div
mov
ja
jle
adc
mov
add
jle
stc
outsl
popf
lret
xor
xchg
stos
cmpsl
jnp
jno
addr16
loop
pop
mov
out
pop
jb
cmp
cmp
testb
sbb
ss
dec
sub
push
adcb
mov
popf
xchg
xor
mov
pushf
push
aas
rolb
xchg
sahf
bound
int3
clc
jo
sbb
mov
in
pop
dec
out
outsb
dec
stos
mov
cs
call
outsb
int3
sub
out
repnz
xchg
popa
xor
test
jg
mov
push
rolb
mov
pop
dec
or
jge
or
push
fiadds
adc
sub
pusha
shl
mov
push
push
xchg
pusha
pop
sbb
xchg
hlt
cld
pop
imul
and
dec
fsts
lahf
jne
mov
jge
adc
bound
fs
dec
xchg
mov
inc
inc
push
cltd
mov
inc
int
hlt
inc
mov
and
std
cmp
sub
and
or
mov
xchg
mov
insb
xchg
xlat
in
cli
pop
outsl
dec
xchg
dec
imul
mov
lods
jno
ljmp
xor
mov
pop
dec
inc
pusha
cwtl
loopne
pop
cmpsl
testb
mov
stc
cli
jne
cmp
outsl
test
repz
xlat
jg
push
jo
jmp
fwait
lret
push
je
fistpl
mov
enter
add
iret
inc
shll
pop
outsb
mov
in
inc
or
addr16
int
push
xchg
xchg
jecxz
mov
mov
cltd
sbb
movsl
imul
notb
xor
inc
xchg
addr16
shl
xor
fwait
and
cld
xchg
cmp
mov
mov
addr16
push
inc
mov
lds
lock
sahf
mov
frstor
push
push
aam
insl
jb
pusha
out
mov
notl
lcall
adc
jns
lret
jae
push
sub
pop
mov
xor
aaa
dec
in
stc
shl
push
mov
pop
js
lea
lret
fisubrs
stos
popl
lret
out
inc
mov
lods
je
dec
cli
adc
jae
jno
xchg
jns
jb
orb
cmp
add
jl
add
inc
pop
push
fnsave
mov
add
xor
xor
and
in
movq
fcos
fisttpll
sbb
movaps
or
and
insb
push
fs
xchg
fwait
lea
adc
lock
pop
and
or
xorl
clc
out
sbb
xchg
push
ljmp
loopne
xchg
pop
in
in
add
jo
fisttps
jmp
sti
pop
clc
xor
sub
cmpsl
cltd
adc
pop
mov
add
jnp
push
mov
mov
jle
cmp
in
mov
or
in
dec
pop
pop
ret
cwtl
sbb
xchg
cwtl
les
jge
filds
dec
sub
stos
jp
xchg
xlat
jl
pop
mov
cmp
mov
imul
mov
clc
pop
mov
cltd
pop
js
push
xchg
or
mov
stos
add
adc
ljmp
mov
repnz
inc
mov
mov
jno
xor
mov
mov
bnd
xchg
mov
in
fcoms
outsb
repz
mov
xchg
or
int
sub
cmp
stc
sbb
shll
push
jl
push
pop
jp
dec
stc
jle
xor
push
cmc
dec
mov
in
xchg
dec
jecxz
filds
lahf
inc
inc
dec
cmp
sub
jp
jne
push
push
es
pop
sub
mov
dec
out
cmpsb
lahf
push
clc
and
scas
test
fdiv
dec
rol
notb
jo
ss
addl
je
xor
fldl
pop
or
sbb
roll
insb
adc
imul
stos
push
mov
jmp
js
ret
sahf
cmc
add
xlat
idivb
ljmp
sbb
cmp
push
test
fistpl
fsubs
pushf
shlb
imul
stos
inc
inc
jge
jne
pop
jae
dec
out
mov
or
jp
sbb
add
pop
sahf
mov
mov
or
cld
flds
dec
lret
mov
movsb
lock
test
or
cmp
lret
mov
inc
cmp
mov
hlt
arpl
in
fsubrs
dec
xor
pop
std
mov
shll
vpmacsswd
mov
popa
outsb
imulb
test
cli
lret
mov
push
adc
ljmp
and
mov
test
jns
lahf
jne,pt
shll
into
cmp
add
push
int
mov
or
divb
xor
cltd
movsb
mov
test
fcomp
push
ljmp
xchg
or
inc
mov
lds
ljmp
mov
scas
insl
pop
in
in
cmp
leave
mov
sti
hlt
sarl
ffreep
fmuls
jb
cmp
push
sbbb
sub
jbe
incl
cltd
adc
xchg
int
push
je
and
sub
pop
dec
les
dec
xchg
addb
aam
stos
cmp
call
out
lds
dec
cmp
pop
loop
jno
jecxz
sti
inc
mov
sbb
aad
jne
aaa
int3
rorw
jns
call
insb
mov
inc
in
jbe
mov
mov
leave
mov
xchg
dec
lahf
jo
fsubrl
adc
repz
ss
notb
mov
xchg
or
fsts
out
jb
arpl
pop
lcall
sbb
ds
xchg
push
push
cltd
sub
rcl
decl
lret
sbb
fwait
sub
in
sbb
xor
mov
xor
popa
inc
outsl
xchg
xchg
sbb
stc
pop
pop
clc
xorps
jle
cmpsb
jl
in
xor
stos
lret
inc
cs
mov
dec
pop
inc
mov
popf
gs
mov
std
in
sbb
mov
lcall
mov
xlat
lds
in
cltd
mulb
add
addl
or
lods
repz
aad
jmp
test
js
mov
cmp
mov
sbb
mov
js
repz
imul
xor
jno
pop
mov
xchg
mov
mov
in
cwtl
mov
dec
cmp
sbb
xchg
xchg
push
and
outsb
mov
add
cs
and
mov
jno
imul
jno
pop
cs
push
mov
mov
clc
std
movsb
adc
and
mov
add
mov
dec
mov
mov
push
out
lods
sbb
lods
jl
pop
jle
shlb
mov
pop
addr16
dec
dec
inc
pop
lcall
ljmp
gs
mov
push
mov
pop
xchg
push
out
add
ja
fdivs
jp
pop
sub
cmp
dec
out
adc
loop
add
jns
lahf
xrelease
aas
ss
sbb
xchg
subl
popa
cmp
data16
jl
pop
icebp
sub
push
cltd
dec
rcrb
fstps
in
push
mov
push
xchg
dec
lods
dec
xchg
roll
iret
mov
loop
xchg
dec
loop
aad
cmp
inc
mov
nop
dec
fsts
js
pop
addl
leave
jp
loop
sbb
sub
push
jle
adc
xchg
lret
or
stos
pushf
adc
push
test
mov
je
xchg
pop
pop
mov
xchg
inc
mov
lret
call
mov
mov
cwtl
sub
iret
outsb
jb
fldt
mov
jnp
lcall
icebp
andl
mov
jbe
imul
mov
shrl
mov
dec
add
cli
add
bound
cmp
pushf
cmp
and
iret
mov
jmp
jl
xchg
into
jge
pop
ljmp
cmpsb
ret
xor
not
addr16
mov
and
mov
jle
inc
xchg
push
jl
aad
aad
loope
scas
dec
inc
xor
iret
push
mov
inc
jl,pt
sbb
xor
movsb
adc
mov
mov
out
iret
jnp
dec
aas
dec
xchg
ret
aas
push
ds
addr16
mov
and
scas
or
push
and
lds
adc
add
sbb
fnstenv
lods
add
rcrl
adcl
xchg
outsb
adc
lret
sbb
daa
or
mov
jmp
push
pop
pop
inc
adc
jmp
ds
inc
aas
cld
push
mov
mov
mov
push
pop
pop
cltd
out
stos
push
mov
jne
bound
lock
imul
lahf
pop
and
pusha
mov
pop
popa
and
lds
outsl
pop
pusha
test
rcl
fiadds
pop
stos
test
jno
arpl
pop
mulb
mov
xchg
sbb
ficomps
out
sahf
aaa
pusha
stc
pop
hlt
clc
jae,pn
shl
dec
insb
lock
movsb
cmpsl
push
inc
dec
push
mov
xchg
xchg
and
xor
xchg
mov
ljmp
push
mov
mov
fs
ljmp
add
push
clc
mov
cmp
or
jno
js
adc
test
test
mov
mov
inc
fisubs
fsubl
aaa
data16
and
jno
aam
hlt
jge
les
negb
shrb
icebp
pop
inc
dec
sbb
jmp
push
add
dec
sti
test
mov
pop
mov
dec
sbb
in
cld
mov
fmulp
mov
scas
add
adc
jge
js
push
cmp
iret
add
push
pop
pop
in
imul
sub
aam
xchg
pop
cmp
das
adc
dec
out
mov
push
addr16
adcl
in
xchg
push
scas
daa
mov
adc
push
mov
sub
ja
add
sbb
shrb
push
push
push
sub
mov
outsb
test
das
mov
mov
out
ror
xchg
jb
jbe
xchg
cltd
rcll
out
add
ljmp
clc
stc
sub
xlat
ret
mov
add
pop
mov
out
mov
xor
xchg
dec
divb
mov
cmc
jne
cmp
je
inc
pop
in
jmp
dec
clc
imul
hlt
pop
rcll
fisubs
je
inc
iret
scas
pop
iret
nop
add
push
push
mov
lret
loopne
inc
popa
xorb
clc
xor
pop
xor
sub
and
jg
cs
xchg
dec
jne
xor
fisubrs
xor
loop
xor
out
xchg
popa
dec
mov
loopne
push
pushf
ret
das
out
jo
or
rol
sbb
mov
inc
xor
jge
pop
test
push
ficoml
scas
xchg
or
jno
das
dec
dec
lea
and
fisubrs
xchg
add
lcall
mull
adc
shl
xchg
aam
jmp
fstps
xchg
mov
outsl
ss
xor
or
roll
jle
dec
cmp
xchg
out
pop
adc
std
inc
jp
dec
and
xorl
in
mov
cmp
repz
cmp
xchg
and
jnp
sbb
insl
mov
adc
fcoml
adc
push
out
push
int
pop
inc
mov
sub
cmp
bound
int3
fidivrl
loope
ret
test
lahf
push
jnp
mov
jns
ss
adc
imull
in
test
sub
push
ja
xor
aad
test
pop
push
xor
pop
cmp
sbb
ljmp
cmp
mov
inc
out
nop
mov
inc
outsl
dec
dec
arpl
cltd
push
hlt
in
xorb
lock
test
cmpsb
scas
hlt
jg
jg
out
rorl
rcll
jp
jns
shlb
testb
xor
lods
and
in
and
jmp
pop
adc
or
mov
add
out
xchg
ret
notl
daa
pop
cmpps
jne
mov
jnp
mov
jne
mov
scas
jle
loope
ljmp
cmp
cli
stc
mov
std
xchg
cmp
and
pop
mov
xchg
inc
int
mov
addr16
jo
jge
hlt
inc
inc
hlt
mov
mov
sub
iret
test
imul
dec
xchg
int3
es
rol
adc
pop
test
mov
pushf
adc
les
jg
dec
xchg
push
lock
and
arpl
mov
aas
movsl
add
insl
mov
mov
cmc
mov
mov
add
mov
pop
push
add
ss
bound
test
pop
sbb
cmp
frstor
lret
out
push
in
bound
xor
bound
das
into
aam
clc
outsb
adc
sub
sub
cmc
pusha
loop
pop
xor
aam
sbb
push
outsl
in
jle
mov
mov
bound
mov
hlt
jns
add
adc
addr16
bound
jecxz
popf
in
outsl
adc
jp
test
shll
into
xchg
mov
pushf
or
mov
lods
or
insl
outsl
sarb
lock
or
jbe
inc
jns
push
fisubrl
movsb
aad
sti
int
fistpl
xor
loope
loopne
lods
push
jae
xchg
jns
xor
mov
enter
mov
xorb
fcoms
or
test
cmpsl
gs
pop
in
cmp
movsl
lahf
adc
dec
jbe
ljmp
mov
into
aam
adc
cwtl
inc
mov
les
jp
fadd
das
jae
mov
mov
insb
jne
fwait
mov
cmpsl
imul
es
or
lock
jno
mov
ljmp
mov
jl
andl
stos
jnp
jp
mov
daa
addr16
addb
inc
cmpsl
aad
shrb
cmp
fst
fs
push
xchg
jl
das
jp
sub
pop
jecxz
repz
into
dec
pop
shl
lods
sub
in
movsl
cwtl
and
aam
add
aas
jns
jmp
lods
cwtl
outsb
lock
jae
mov
nop
xor
push
jge
push
mov
mov
push
shrb
ljmp
inc
js
sub
ja
push
cmp
sti
jne
push
jbe
pop
cld
sbb
dec
outsb
xchg
and
jg
js
mov
fistps
subb
lret
pop
add
or
hlt
jge
xchg
out
popf
xchg
cmc
pop
jge
xchg
sub
adc
jmp
or
loop
fs
call
loope
popf
mov
aaa
push
mov
and
gs
mov
jo
sbb
mov
xchg
pop
invd
inc
xchg
loope
adc
stc
xor
loope
xor
lock
add
mov
notl
insb
out
xor
adc
scas
cld
in
sti
and
pop
add
cmp
testl
xlat
flds
and
mov
test
sub
dec
push
test
mov
mov
shl
out
int
add
imul
stc
test
loope
sub
pop
aaa
inc
jl
adc
addr16
push
cld
enter
out
dec
mov
into
mov
or
jns
in
and
adc
lcall
addb
dec
into
cmp
xchg
inc
ficomps
jbe
jo
aad
lcall
sbb
pop
les
adc
xlat
sub
repz
add
dec
paddusb
jno
cs
or
push
xor
imul
dec
aam
addb
sub
cmp
push
jecxz
sbb
cli
sbb
xor
std
pop
add
xor
gs
inc
or
or
xchg
and
fists
lods
and
mov
and
int
sub
xchg
mov
cmp
adc
jge
rcrl
imul
cmp
and
inc
jnp
push
fwait
inc
popa
mov
or
in
test
inc
cmpsl
rol
mov
rorl
outsl
andb
cli
scas
shrb
mov
cmp
or
mov
dec
cld
test
out
xchg
or
bound
mov
daa
push
aad
sub
dec
ljmp
js
aam
or
nop
out
cmc
jecxz
push
stos
jb
inc
xor
mov
mov
sbb
out
je
sub
ja
test
jecxz
into
and
out
daa
jbe
cmp
sahf
pop
jno
popw
fnstcw
enter
rorl
out
jb
push
icebp
sbb
mov
pop
popf
insb
cltd
inc
push
mov
add
nopl
mov
jns
enter
scas
nop
cmp
call
or
sbbb
data16
aad
pop
test
je
mov
adc
out
jbe
or
flds
jne
mov
mov
fdivl
cmpsl
in
fdivrp
cwtl
xor
in
adc
adc
repnz
mov
repnz
xchg
inc
stos
inc
stos
fsubs
ja
jecxz
fidivrs
lds
or
sub
add
es
xor
adc
or
fstl
sbb
push
fnstcw
call
lret
xchg
out
into
jo
jge
or
mov
or
mov
shr
cmp
jp
or
flds
jl
mov
outsl
inc
mov
ficoml
jo
push
out
fbld
and
push
stc
sub
xor
sub
out
fcmovne
add
mov
mov
push
int3
xor
lods
fisttpl
sbbl
loopne
clc
in
mov
mov
pop
xor
adc
les
sti
notl
mov
and
outsl
xor
scas
fisttpll
imul
bound
dec
clc
or
push
pop
hlt
xor
or
addl
jns
mov
add
stos
les
mov
jae
push
fs
sahf
dec
xchg
xor
out
adc
aam
popf
idiv
push
mov
or
or
mov
scas
or
push
cwtl
std
and
fs
orl
lret
outsl
mov
in
into
ss
loop
pop
mov
loopne
ljmp
inc
xchg
and
jnp
in
loope
jecxz
and
adc
test
es
cmpsb
mov
test
adc
imul
in
sbb
lret
ja
adc
fwait
and
cmpsb
push
push
and
sahf
jbe
mov
lods
pop
in
jmp
dec
ds
aas
xchg
jae
outsb
movsl
xor
out
iret
jmp
sub
sub
jmp
xchg
loopne
push
stc
dec
jl
lahf
movsb
sarl
int
jl
sbb
idivl
xorl
in
shlb
jmp
cmc
jne
test
or
ja
inc
pop
into
divl
popl
jbe
jle
sbb
dec
cwtl
js
xlat
aas
jl
mov
push
push
out
jne
cmpsb
mov
fwait
ret
dec
fwait
movsl
dec
jmp
out
sbb
jge
pop
movsb
pop
lahf
and
dec
mov
idivl
jl
inc
mov
sub
into
jmp
and
scas
mov
pop
dec
add
sub
mov
je
int
push
outsb
add
int3
mov
jnp
xchg
mov
je
aas
sbb
out
adc
xchg
pop
orb
mov
fwait
pop
cwtl
inc
dec
insb
cld
jmp
loop
mov
xlat
cltd
pop
mov
push
scas
jae
int
imull
ds
leave
rol
fwait
cmp
pop
scas
sbbl
cmpsl
jg
xchg
ret
jecxz
inc
mov
cmp
xor
xor
adc
pusha
lcall
sbb
mov
aas
mov
es
jmp
push
pop
mov
mov
jae
lret
dec
test
mov
mov
popf
and
xor
mov
mov
out
rcr
punpckhdq
int3
aaa
aam
or
stc
mov
out
int3
mov
sbb
pop
fstl
mov
sbb
cmpsl
les
shl
and
push
outsl
popa
mov
dec
divb
fstl
out
jae
ret
jae
jnp
xor
hlt
test
lcall
lea
int
int3
iret
xor
xor
fcmovnbe
cmp
js
arpl
jmp
bound
fidivl
add
addr16
mov
pop
mov
icebp
leave
jmp
test
sbbb
or
shll
pop
mov
popf
out
adc
cmp
call
push
mov
in
sub
shr
sbb
add
inc
addr16
cmp
and
xchg
pushl
lds
jne
adc
arpl
dec
sub
je
jnp
xor
sbb
in
aaa
pop
int
faddl
inc
mov
call
xlat
xchg
fimull
imul
sub
sub
xor
jb
mov
stc
jns
jg
movsl
jne
sub
xor
les
repnz
jg
cmp
sub
out
dec
push
adc
jl
loopne
lds
test
aaa
out
push
outsb
jns
dec
loop
lods
fcoms
xor
iret
ljmp
loopne
filds
xor
cmp
filds
insb
pop
xchg
pop
repnz
xchg
mov
fidivl
mov
mov
icebp
enter
into
out
std
sbb
jne
test
sub
jae
orb
pop
bound
scas
int
rclb
cltd
rcr
test
add
enter
outsl
test
xor
aas
inc
xlat
loope
daa
pop
call
pop
test
call
js
mov
out
mov
mov
je
xlat
xchg
sbb
ret
mov
xor
mov
xchg
cmpsb
cmpsl
test
and
mov
shlb
fsubl
aas
adcl
out
jl
scas
mov
mov
aaa
shr
mov
sub
mov
rorb
xchg
pop
dec
in
mov
xor
dec
lods
xchg
inc
aaa
and
dec
push
cmpsl
mov
cmp
loop
aaa
test
pop
push
mov
add
stc
mov
mov
inc
adc
push
inc
cmp
mov
mov
lea
fistpll
cwtl
sub
andb
in
mov
xchg
mov
out
bound
push
ftst
cmp
sub
aad
jp
xor
std
rcr
mov
sbb
repz
jle
jle
dec
sbb
sti
lcall
std
loop
sti
in
xchg
or
lret
in
repnz
fisttps
loop
imul
in
xchg
pop
xlat
aad
scas
and
mov
into
aas
cmpsl
movsb
jge
cmc
jge
pushf
jp
push
lret
cld
js
leave
mov
dec
mov
fmull
out
int3
clc
imul
enter
pop
movsb
sub
mov
mov
mov
pop
adc
aad
clc
cmp
fldcw
mov
mov
mov
out
mov
mov
cmp
ret
cmpsb
aas
pop
add
and
or
xchg
into
push
add
jmp
cld
loope
in
sbb
and
or
pop
movsl
rcrb
enter
testb
out
jl
add
aas
test
pop
sahf
jl
std
mov
add
or
xchg
xorb
pop
pop
sarl
stos
insl
adc
divl
push
lea
clc
sbb
xchg
pop
jno,pt
lods
fists
pop
das
scas
mov
in
shll
mov
mov
fnsave
rolb
fstpt
mov
ss
dec
cmp
addr16
push
jmp
daa
dec
icebp
mov
insb
addr16
cltd
sarb
mov
jp
push
int3
imul
mov
int
xchg
es
ds
out
jle
inc
mov
xchg
jmp
insb
cwtl
and
hlt
popf
xchg
pop
fnstcw
aad
pop
xor
jns
cmpsl
popa
lds
pop
jge
fcomip
mov
sarb
scas
mov
mov
mov
stos
inc
bound
lret
cltd
les
lahf
or
jns
inc
pushf
xchg
out
decb
cwtl
lods
fnsave
cmpsb
iret
rcl
js
lea
cli
loopne
jp
stos
push
jns
jp
mov
jge
addr16
sub
sbb
shl
decb
mov
jle
in
mov
push
pop
sub
and
sbbl
loop
movsb
cs
cmp
sub
mov
ficoms
imul
pop
jl
mov
mov
popf
fcomps
and
icebp
gs
sub
pop
lods
cmp
mov
mov
mov
jl
adc
test
out
jmp
lods
xchg
mov
mov
jne
je
pop
insl
xchg
cmp
pop
pop
pop
cmp
test
jl
fwait
into
aad
lods
fistl
mov
and
fiadds
pop
jecxz
inc
stc
in
std
jo
aad
out
outsb
dec
sub
dec
mov
rcrl
jns
xchg
push
stc
fldl
int3
addr16
dec
or
adc
push
and
dec
icebp
movsl
jnp
push
sub
outsl
sub
pop
mov
rcrl
pop
cmp
scas
popa
mov
lods
jl
mov
mov
sub
jp
adcl
add
sub
jo
cmp
cmp
hlt
stc
imul
insl
adc
ja
imul
pop
cmp
mov
mov
mov
cmp
mov
js
mov
sub
pop
fwait
pop
dec
loopne
repz
lds
sbb
stc
sub
clc
in
cmp
cld
dec
jbe
je
and
adc
shl
fistpll
push
dec
jmp
out
into
clc
xor
mov
jle
sub
xchg
jl
adc
pop
jmp
sbb
and
or
lahf
stos
out
and
ret
fwait
scas
test
adc
cld
imul
leave
xchg
cmp
adc
jno
mov
movsb
call
aas
mov
mov
jle
mov
addb
push
ss
scas
sbb
jb
push
divl
xchg
leave
insl
ds
adc
out
mov
imul
dec
mov
arpl
std
cmc
das
jns
pop
push
rep
divl
fisubrs
lret
or
add
mov
adc
mov
test
mov
push
mul
std
notb
mov
pop
pop
adc
fnstsw
std
cmp
repz
cmp
or
inc
pop
pop
pop
jne
mov
rcrb
cwtl
test
sbb
es
in
inc
adc
shll
jnp
popa
add
dec
ss
or
ja
sar
or
in
mov
mov
enter
roll
adc
push
jne
lods
add
pop
mov
sbb
insb
mov
sti
enter
and
mov
pusha
pop
dec
xchg
and
ss
sub
pusha
outsb
pushf
fadd
in
into
outsl
movl
hlt
orl
ja
jae
jle
rorl
je
dec
arpl
and
mov
jl
and
int
xlat
sbb
pop
and
out
adc
xchg
arpl
jnp
cmpsl
push
popa
jmp
cmpsl
xor
fisttpll
mov
test
pop
out
fsubr
sbb
inc
icebp
popf
imul
adc
xor
cld
xor
das
mov
std
cli
ja
xchg
mov
and
xchg
out
mov
mov
xor
cwtl
dec
int3
inc
xchg
push
mov
and
jns
ja
add
dec
fdivrs
add
test
sub
and
xor
jge
xchg
or
out
inc
in
jns
jl
not
test
and
test
arpl
lret
jg
das
mov
push
push
push
jmp
add
lahf
jb
or
repz
inc
fadd
pop
rorb
cld
mov
ds
loope
sbb
mov
or
lea
xchg
xchg
inc
sahf
xchg
sti
in
and
in
orl
mov
add
mov
xor
cmc
xchg
popl
xor
test
rcl
leave
js
mov
xor
cmp
fsubrs
pop
call
into
cmpsb
insb
dec
xchg
ss
add
shlb
pop
mov
jae
test
and
xor
or
xor
mov
pop
ss
inc
js
pop
ds
or
orl
aaa
cmp
mov
push
sub
mov
inc
mov
add
dec
pop
pop
adc
xchg
cmpsl
mov
out
dec
dec
cmp
pusha
in
mov
sub
ljmp
popl
push
jno
add
adc
gs
mov
pop
mov
and
mov
jbe
pop
mov
pop
fxch
insl
loopne
and
test
cmpsl
or
fsubs
test
xchg
addr16
mov
mov
in
sbb
dec
loope
int3
rcl
mov
cmp
push
jg
sbbb
addr16
xor
in
idivb
stos
jp
pushf
xor
sti
cmp
xor
clc
lds
ss
and
mov
xchg
jg
shrl
xor
and
jo
and
cli
mov
lock
dec
add
lods
in
inc
push
jecxz
repz
pop
jg
cld
pushl
jae
sub
sbb
pusha
cmp
pop
aas
xchg
cltd
sti
push
repz
int3
lahf
jmp
clc
sahf
jns
mov
mov
mov
jle
mov
add
xor
and
sub
stc
pop
push
sti
pop
fists
jmp
mov
mov
roll
dec
movsb
repz
mov
fistpl
add
test
stc
pop
push
cli
and
mov
pop
not
inc
fcmovb
dec
dec
sub
test
dec
mov
push
xchg
adc
jmp
dec
scas
in
mov
push
push
leave
inc
icebp
and
sub
cmp
push
into
cmpsb
adc
lret
jne
xchg
pop
sti
cmc
jle
ljmp
or
out
cmpsb
outsb
or
cwtl
scas
mov
fstpt
stos
jbe
in
mov
addr16
or
jle
lcall
psllq
movsl
ret
xchg
cmp
inc
std
je
int
jecxz
jg
or
pop
xchg
shl
mov
add
cmc
jnp
in
xor
mov
xor
dec
test
adc
fisubl
insb
into
gs
push
add
jns
addr16
mov
xchg
lret
loope
imul
lock
dec
into
add
clc
out
dec
cmc
ret
cmp
pop
and
sbb
mov
push
inc
loop
push
lcall
cmp
pop
clc
sub
rorb
lods
aam
movsb
adc
mov
adc
movsl
fs
das
out
mov
mov
mov
imul
sbb
dec
mov
ja
adc
iret
outsl
repz
mov
xor
in
xchg
popa
rcl
lods
bound
pushf
ret
xor
out
pop
mov
mov
ja
gs
rorl
pop
jne
pusha
inc
out
aaa
test
and
call
add
les
or
inc
lret
jge
pop
aad
cli
add
jae
sub
adc
push
roll
inc
mov
pop
ja
addb
fstl
cltd
adc
lcall
leave
xchg
popa
call
je
std
add
shr
frstor
push
cmpsl
xchg
arpl
stos
push
mov
or
xor
jo
and
movsb
arpl
mov
imul
jnp
lret
push
sbb
adc
icebp
daa
pop
rorb
cmp
and
mov
in
in
lahf
lock
inc
sub
repnz
dec
aaa
aad
or
jo
call
cli
nop
jbe
add
inc
adc
ret
mov
pushf
xor
xchg
and
in
add
lret
jno
addr16
dec
push
inc
cwtl
test
push
add
stos
mov
enter
pushf
inc
jecxz
frstpm(287
fadds
jns
orl
das
sub
add
mov
pop
leave
insl
test
ja
loope
mov
or
sti
repnz
scas
xchg
divl
mov
pop
dec
stos
adc
mov
xorb
xor
mov
jmp
into
cmp
dec
and
je
movsb
leave
scas
cmc
sbb
icebp
divl
jo
jae
add
pop
lahf
das
pushf
test
mov
into
dec
mov
cs
dec
jl
xor
imul
imul
cmc
cmp
test
or
subb
and
in
test
and
and
ljmp
in
cltd
mov
jle
scas
mov
fwait
popf
lret
mov
jmp
xorb
out
xchg
cmp
fmull
xchg
aaa
int
jbe
sbb
pop
cltd
and
sbb
cmp
mov
lds
mul
fwait
xchg
sub
scas
xchg
int
cmpsb
jle
adcb
cmp
and
ret
fs
push
into
push
iret
jne
sub
stos
cmp
aad
lahf
sarb
mov
pop
jae
sahf
mov
in
ja
cmp
fstp
into
sbb
repz
cmp
shlb
shll
xchg
aad
mov
inc
dec
jecxz
inc
in
mov
aas
push
dec
jecxz
jo
lods
out
sub
les
dec
mov
ja
push
xor
iret
mov
pop
and
cmp
push
sahf
jecxz
push
push
ficomps
pushf
nop
adc
repz
imul
mov
push
add
add
and
mov
cmp
or
gs
push
and
mov
idiv
out
aam
xchg
push
sahf
or
jmp
mov
pop
xchg
sub
stc
mov
or
icebp
fcomps
mov
dec
lcall
loope
push
imul
pop
insl
test
sbb
mov
adc
jno
xor
stos
in
sarl
in
loop
aas
sub
ror
or
pop
pop
lods
dec
jne
mov
mov
add
jno
lret
xor
in
adc
pop
prefetch
in
or
dec
shl
sti
out
push
out
mov
movsb
test
jp
jmp
pop
loope
sub
or
dec
pop
out
ficoml
mov
in
jg
lock
cmc
cwtl
sub
jmp
cmp
lds
loopne
lret
bound
addr16
sbb
out
les
xor
adc
mov
insl
dec
adc
push
dec
not
rclb
scas
aas
or
jge
sub
cwtl
jle
sbbl
lret
dec
cmp
pop
xchg
xchg
sub
xor
shlb
dec
mov
pop
mov
dec
xchg
dec
bound
dec
stos
mov
in
aad
xchg
lock
neg
ss
mov
pop
enter
pop
cmp
dec
or
mov
outsb
jae
pop
ja
pop
neg
add
ljmp
mov
sbb
cwtl
pop
push
insb
sahf
cmp
xchg
adc
movsl
clc
pusha
sub
dec
and
xlat
in
int
sub
add
ficoml
xchg
stc
jge
dec
shrl
push
andl
mov
dec
jg
pop
mov
jl
dec
shrb
js
adc
aas
mov
jb
sub
cmpsb
ss
push
test
inc
das
lret
loopne
mov
sbb
pop
mov
or
dec
aas
fcoms
adc
add
les
add
inc
mov
rolb
pushf
add
aam
enter
adc
lret
xor
and
js
lods
or
in
cmc
or
cmp
inc
cmp
sahf
pop
push
mov
sbb
lcall
rcrl
roll
js
pop
add
pusha
shrl
mov
pop
scas
fcmove
lcall
nop
or
push
fwait
ss
mov
sub
insb
lcall
aad
or
lahf
jb
into
and
cli
movsl
scas
pop
pop
scas
rcl
popf
sbb
mov
lret
pop
pop
adc
xlat
loope
aam
adc
mov
ficompl
lcall
popf
inc
adc
mov
icebp
mov
xchg
test
lret
add
mov
imul
cli
mov
movsl
pop
xor
dec
or
xor
fldl
sbb
enter
push
push
push
js
mov
into
inc
cmpsl
repz
cmpsl
rep
jne
mov
test
or
jle
inc
mov
jo
flds
pusha
leave
mov
lret
fcompl
add
int
or
call
pop
lea
imul
cmpsl
js
lcall
iret
loop
decb
addr16
pop
clc
mov
clc
popa
in
orl
mov
mov
repnz
in
and
pop
jl
sbb
inc
add
daa
icebp
sbb
adc
das
lods
test
cmp
js
mov
xchg
popa
out
pop
dec
pop
les
shl
jle
dec
mov
push
add
mov
lock
pop
jmp
shll
dec
cmp
aad
gs
jnp
inc
dec
aam
outsl
popa
jecxz
loopne
dec
mov
jmp
nop
pop
bound
repz
add
mov
sti
arpl
icebp
cmp
push
sahf
xor
in
jp
stos
hlt
popa
jbe
pop
int
xor
xlat
jle
arpl
adc
jp
mov
fstps
loop
fnstcw
sbb
lock
inc
jmp
subb
daa
add
ja
stos
cs
xchg
sbb
ss
jae
into
js
jbe
push
std
jbe
mov
mov
fildll
mov
int
push
popf
add
pop
and
repnz
cs
mov
insl
cli
dec
mov
pop
sbb
mov
loope
mov
jne
pop
cmp
ja
inc
ss
out
jne
push
cmp
rcll
inc
push
daa
pop
icebp
ljmp
out
aam
xor
inc
aam
popf
sbb
xor
xorl
rcrb
outsb
pop
loope
aas
dec
inc
js
push
sti
repz
test
into
add
xlat
sub
lahf
sbb
cmpb
xor
jle
mov
out
adc
lods
in
sbb
ret
jl
mov
adc
adc
push
cmp
mov
or
ljmp
iret
cmp
dec
sbb
out
sub
add
into
into
repnz
addr16
mov
xor
pop
xor
adc
test
xor
fildl
mov
cmpsb
stos
in
xor
orb
mov
stos
negb
bswap
das
movsl
xchg
jae,pt
sbb
cmp
decl
xchg
push
idivl
push
test
sub
cmpl
out
jl
in
cmp
stos
adcb
fistl
sub
stc
adc
sti
ss
mov
sbb
jns
popf
es
lods
pusha
sbb
push
xchg
out
cmc
call
xchg
add
lret
sbb
jp
xchg
mov
jae
sub
rorb
adc
xchg
jp
adc
sub
push
mov
outsl
roll
es
lea
pop
cmp
ret
sarl
pop
js
fsqrt
mov
mov
leave
clc
jge
rcrb
jg
iret
jns
or
mov
out
fdivrl
daa
call
outsl
cli
and
mov
sub
lock
adc
hlt
push
inc
js
leave
mov
ss
and
xor
sub
or
fcos
sti
fwait
cmpsb
dec
clc
aaa
in
mov
xor
movsb
sti
cld
scas
and
mov
psrad
fisubl
mov
mov
jg
add
fwait
sub
pop
leave
pop
sbbl
rorb
icebp
shlb
repz
add
cmp
jbe
sti
aas
dec
in
mov
ret
loope
jp
test
sti
out
mov
sbb
sbb
ljmp
jle
faddl
push
fdivl
out
rolb
idivl
nop
sub
dec
lcall
ja
push
sete
push
cmc
arpl
or
cmp
flds
subb
rolb
dec
insb
ljmp
popf
pushf
dec
inc
sub
idiv
mov
movntq
out
push
daa
sarl
out
ja
sub
jnp
dec
lret
stc
xchg
mov
fadds
jl
lret
addl
lods
out
stos
mov
xor
mov
mov
mov
xor
movsbl
dec
pop
inc
addb
loope
sub
push
enter
push
pusha
push
adc
mov
push
or
and
fadd
lds
scas
push
cwtl
movsl
xchg
sahf
adc
push
test
mov
add
sub
xchg
fcomp
or
ljmp
xlat
cmp
negl
out
ja
sti
out
jnp
jnp
jnp
mov
fs
ss
push
fcmovbe
ret
mov
fisubrl
insl
pop
jl
push
mov
aaa
mov
fwait
rclb
and
dec
hlt
insl
push
test
aad
mul
xchg
cmc
loop
pop
pop
out
xor
cld
out
outsl
test
enter
pop
cmpsb
fdivrp
daa
outsl
mov
lds
push
mov
hlt
stos
cwtl
aaa
mov
dec
inc
push
inc
xor
scas
out
xor
enter
imul
mov
inc
hlt
popf
ret
adc
stc
xchg
jmp
dec
jge
gs
out
mov
dec
cmp
lods
out
imul
popa
ret
cmp
xchg
iret
fs
loopne
xchg
jl
repnz
jmp
fsubrs
jae
js
ds
push
pop
es
stos
mov
pop
ret
or
cmpl
mov
xchg
jl
in
mov
inc
scas
cs
sub
jns
movsl
mov
add
data16
ret
push
or
hlt
lret
cltd
cmpl
dec
ss
jmp
cwtl
add
insl
mov
cli
ret
clc
push
jnp
push
iret
inc
jg
inc
loope
clc
sbb
jg
xchg
push
clc
mov
cmpsb
repz
adc
inc
loopne
inc
or
fimuls
sbb
fsubrl
test
sbb
ret
mov
test
pushf
push
mov
inc
roll
popa
aad
shll
add
fstpt
in
enter
test
in
call
dec
inc
dec
xchg
fwait
loopne
xor
mov
jg
adc
in
mov
pop
xor
insb
or
pushf
xchg
insl
int
psubd
cmp
lods
in
add
sbb
pop
or
daa
mov
adc
loope
cwtl
cmpsl
pop
lods
rolb
fdivrl
push
push
iret
mov
enter
enter
adc
sar
push
imul
jg
pop
pusha
mov
mov
jecxz
arpl
in
and
testb
jp
and
jne
xchg
jp
imul
pop
cmc
xchg
cmc
bswap
into
pop
push
in
and
xor
lret
and
fadds
nop
mov
jbe
sahf
push
xchg
sbb
arpl
loope
push
shrb
outsb
outsl
shrl
fwait
fwait
inc
mov
push
sbb
ret
dec
dec
loop
push
ret
sbb
jne
nop
mov
jmp
fidivrs
pop
mov
mov
xor
cld
mov
lret
push
or
pop
outsl
aaa
outsl
arpl
add
add
les
or
mov
pop
or
into
fistpll
inc
aaa
sahf
bnd
push
jae
lea
retw
cmp
cmp
mov
xchg
shl
negl
sbb
xor
cmp
ja
jb
push
ljmp
push
clc
in
iret
jl
fldenv
mov
lcallw
outsb
xchg
cwtl
pop
cltd
pusha
imul
sub
xchg
ljmp
mov
pop
and
mov
sbb
mov
into
pop
rcr
dec
jge
push
xchg
fnstcw
aaa
pop
out
lahf
flds
js
sti
mov
xchg
jo
cmpsb
jnp
add
idivb
cli
jbe
lret
repz
fildll
dec
xor
cmp
loopne
enter
iret
add
int
sub
adc
mov
cmc
dec
pop
adc
dec
call
sahf
jo
sahf
movsl
out
stos
mov
enter
notl
inc
push
mov
sbb
mov
mov
adc
push
enter
xor
loopne
sti
sbb
sbb
jbe
jmp
xor
fbld
dec
out
sahf
fstpl
iret
inc
cltd
shlb
test
in
stos
mov
push
sbb
lret
sbb
xlat
inc
int3
imul
arpl
fcomip
and
dec
cmpsl
rcll
insb
push
add
test
lahf
test
jbe
mov
pop
jg
loop
les
iret
xor
pop
xchg
sub
sub
out
lcall
or
cltd
and
ja
xlat
jle
sbb
push
lea
ss
sbb
mov
xchg
lods
arpl
cld
shlb
fdivs
mov
out
pop
adc
sahf
mov
xor
mov
les
das
das
nop
inc
mov
aaa
lods
sbb
inc
cmp
icebp
or
push
arpl
fistpll
sbb
push
jo
xchg
mov
cmp
out
out
mov
ja
imul
dec
jg
test
adc
push
sbb
xor
cmpsl
sbb
fisttpl
lock
jmp
sub
scas
dec
outsb
nop
pusha
int
dec
clc
test
fwait
push
test
out
xor
flds
repnz
nop
sahf
shlb
loope
out
int3
xor
jae
repz
xor
mov
aad
in
shrb
jne
cmp
or
add
sub
jae
mov
lods
jb
jle
adc
push
pushf
cmp
xor
xchg
rcrb
xorl
data16
dec
negl
pop
xchg
cmp
cltd
push
and
fldenv
fnsave
adc
adc
push
loopne
sbb
divl
pop
push
imul
push
mov
mov
xorl
push
das
jle
fldt
lsl
sbb
mov
xor
sbb
repz
mov
adcb
dec
lret
sti
jbe,pt
cwtl
inc
ret
jp
mov
arpl
xor
jo
movsl
cmc
mov
pop
sub
xchg
push
sub
rcl
xchg
repnz
and
mov
in
jge
pop
cld
mov
pop
cmp
xor
icebp
lret
xchg
out
and
mov
or
mov
adc
je
popa
fdivl
lcall
test
dec
jge
adc
ffree
cmp
push
bound
pop
ja
jge
push
or
sbb
data16
shrb
loope
out
hlt
out
std
xchg
js
mov
imul
aad
jmp
mov
jae
outsl
cli
xchg
aas
jp
fdivrs
inc
call
sahf
push
iret
adc
push
and
and
or
push
and
inc
jecxz
cmp
xchg
and
rolb
dec
mov
outsl
jle
xor
std
mov
mov
test
mov
jp,pt
jno
ja
and
push
movsl
test
andl
mull
pop
sbb
shlb
rcl
bound
jno
jb
jb
addr16
iret
mov
adc
inc
push
cmpb
aaa
pop
pop
jo
into
loope
mov
mov
sub
test
dec
cmp
shl
xlat
test
mov
adcl
push
bound
sub
mov
movsl
std
cwtl
add
mov
aam
xor
in
out
ja
pop
fstpt
test
jp
hlt
cs
push
inc
jae
pop
cld
movsl
cwtl
dec
mov
push
ficoms
push
fcompl
mov
push
lds
push
test
outsb
imul
pop
and
into
push
rorl
lock
jno
mov
and
pop
imul
out
jae
and
pushf
fnstsw
and
xor
aad
in
movsb
cmp
xchg
ror
jmp
popa
adc
cmp
jne
sbb
sbb
andl
outsb
mov
dec
sti
or
jno
xchg
arpl
jmp
mov
leave
sub
jb
insb
mov
mov
cmp
add
popf
bound
adc
das
pushf
mov
lods
out
int3
push
cmp
pop
repnz
popf
outsb
insb
ret
out
mov
dec
loope
pop
out
adc
aam
add
add
clc
mov
not
fistpll
sti
dec
mov
lret
mov
scas
cmp
sar
and
pop
inc
sti
adcl
push
enter
xchg
leave
outsl
jmp
js
into
clc
xchg
mov
arpl
frstor
or
fwait
lods
mov
sub
cmc
test
stos
rol
push
pop
dec
mov
arpl
push
ljmp
inc
out
cmc
mov
insl
stos
or
inc
mov
mov
sbb
sti
lds
inc
notl
jb
aam
dec
jbe
push
fdivl
or
adc
aas
mov
mov
in
or
push
sub
jae
fnstenv
jecxz
sub
pop
decl
cmp
imul
or
dec
jmp
cmp
scas
mov
mov
cmp
subl
fsubr
push
sub
xchg
or
mov
sarb
sbb
jl
push
dec
fiadds
shll
minps
jae
xchg
adc
or
adc
sub
jbe
jbe
jg
loopne
into
mull
sub
mov
data16
ficoms
adcl
mov
mov
lds
incl
enter
xchg
int3
mov
scas
insl
sti
mov
or
jg
mov
jnp
out
mov
enter
mov
pop
mov
ret
pop
pop
jmp
mov
dec
pop
out
pop
mov
or
in
jp
in
jbe
pushf
and
aad
stos
jle
fsub
addb
xorb
fdivr
cmp
xor
scas
out
cli
lcall
inc
jmp
je
fists
and
mov
aam
sub
adc
je
xchg
cltd
pop
out
hlt
sbb
inc
push
in
pop
in
xor
push
mov
loopne
and
add
data16
stc
push
sub
es
fidivs
mov
inc
call
push
shlb
mov
lret
jbe
adc
jb
lcall
femms
pop
ret
rclb
mov
ljmp
dec
ja
das
lahf
inc
adc
lea
pop
xchg
les
cmpsl
inc
inc
adc
hlt
dec
mov
cli
ljmp
pop
bound
fildl
test
xchg
divb
sub
xchg
fmul
inc
cmpsb
xor
sar
sbb
jp
xchg
gs
cmp
and
mov
push
and
jle
gs
test
stos
sti
add
jnp
and
das
adc
sub
je
and
mov
adc
mov
loopne
jo
push
cmpb
xchg
or
stos
dec
mov
push
ja
fwait
or
or
cs
jecxz
addr16
push
jg
int
lods
shr
aad
xchg
pop
jmp
bound
or
adc
shr
jo
loope
stos
push
arpl
pop
cmp
dec
sarl
and
mov
sub
cmp
xchg
nop
inc
cmp
gs
mov
outsl
into
fsubrs
ljmp
add
arpl
outsb
in
cs
dec
xchg
pop
shl
mov
jae
push
addr16
mov
xor
cmp
rcl
cmp
xor
aad
dec
push
pusha
xor
xchg
mov
ret
xlat
mov
mov
in
jae
out
lahf
lea
cmp
jo
ds
cmp
test
mov
loop
addr16
mov
test
iret
scas
sarb
shrb
adc
int
push
rcrb
sub
mov
jb
sub
icebp
jae
jp
or
scas
out
sbb
xor
aas
inc
stos
popf
mov
mov
fs
mov
ss
mov
xor
jg
push
and
mov
insb
fidivrl
popf
bound
loopne
mov
loopne
pop
cs
mov
jbe
out
cmp
sarl
sbb
aaa
fwait
aaa
xlat
mov
mov
pop
iret
aaa
and
lods
or
arpl
xchg
callw
rcrb
pushf
push
pop
or
inc
bound
or
mov
pushf
or
xchg
fstps
cmpsl
pop
and
in
outsl
fmull
notl
lret
std
rorl
aaa
sbb
leave
lods
xchg
add
bound
cli
adc
inc
lea
mov
mov
out
sbb
sbb
pop
or
clc
lret
test
mov
orl
repnz
cmpsl
push
test
mov
jle
cmpsl
cmc
cmc
addr16
lea
in
push
scas
xchg
in
cs
mov
pop
and
ret
xchg
lock
pop
push
dec
mov
insl
dec
ja
repz
mov
outsb
jl
unpckhps
dec
movsb
gs
jae
movl
push
xlat
jp
adc
popf
mov
ficompl
in
xchg
notl
sarl
fcoml
ret
fucomi
js
loope
das
xchg
xchg
ret
dec
loopne
pop
cmp
jo
imul
or
aam
cli
roll
mov
test
incl
mov
shlb
mov
push
adc
jl
jecxz
and
iret
mov
pop
mov
in
mov
lock
adc
aas
outsl
mov
jns
repnz
in
fstpt
dec
sub
cmp
int
shrb
push
into
hlt
lods
sti
movsb
mov
aaa
xor
push
pop
cmp
out
xchg
fwait
push
jno,pn
lret
xorl
out
jne
test
sbb
and
imul
fs
subl
jae
std
xchg
push
or
jge
je
lret
arpl
cltd
and
push
mov
test
sti
andb
mov
mov
mov
lcall
ds
or
xchg
loope
ds
es
xchg
clc
mov
fwait
inc
dec
lahf
scas
int
sub
fcomps
out
ss
stos
fadd
xchg
movb
mov
enter
aas
push
lahf
inc
sbb
dec
pop
hlt
hlt
xor
mov
jle
inc
rcr
rolb
mov
sub
mov
cmp
xchg
cmpb
sbb
aas
popf
and
inc
sub
cmp
mov
lcall
lods
rcrl
aaa
cmp
roll
in
add
rcll
cmp
in
mov
in
mov
mov
adcl
in
and
hlt
jg
in
movsb
xchg
fisubrs
int
inc
fildll
loop
shrb
cwtl
aas
insb
lock
rol
into
xchg
sbb
loopne
ret
fisttps
test
jp
lea
dec
xchg
pop
mov
push
gs
jno
lret
scas
jecxz
fwait
pop
in
leave
mul
jae
jb
fidivrl
adc
adc
shll
pop
mov
rorl
rcrb
shrb
lahf
stos
sti
nop
pop
lea
pop
inc
dec
sarl
ss
cmp
repz
insl
test
shll
not
sub
stos
das
test
mov
jecxz
into
xor
mov
push
sbb
mov
aas
xchg
pop
test
inc
add
cli
mov
fs
and
in
das
add
or
incl
movsl
leave
bound
iret
adc
subb
scas
imul
lea
pop
xchg
mov
loopne
xchg
mov
hlt
add
sti
mov
cli
or
xor
rclb
push
cmpl
mov
loope
fcomip
push
xchg
jg
pop
mov
adc
xlat
sti
push
jmp
adc
jl
dec
je
xchg
xchg
jle
xchg
enter
cmpb
jnp
and
insl
mov
enter
insb
test
push
clc
and
movsb
arpl
hlt
mov
lcall
cmp
mov
iret
mov
push
ja
pop
adc
jmp
or
fs
or
jae
and
jmp
std
pop
pop
adc
sub
mov
aas
jl
inc
pushf
cmpsb
xchg
repz
outsl
outsl
ficoml
out
clc
adc
call
pop
or
pusha
fmuls
inc
push
jp
hlt
sbb
ret
out
lret
push
movsl
out
pop
shlb
pop
inc
aam
pop
popf
aam
shr
pop
enter
bnd
xlat
mov
mov
jbe
andl
sub
mov
sbb
fwait
cwtl
lret
aad
cld
lea
lods
ficompl
sub
dec
fdivrl
mov
mov
int
xchg
sbb
sbb
jnp
cmpsb
lock
loope
sub
ss
stc
addr16
rorl
mov
push
fldl
mov
pop
sub
cmp
dec
mov
fwait
outsl
jbe
mov
movsb
mov
mov
dec
sub
cmp
rol
or
ljmp
les
push
in
out
inc
jle
lea
sti
push
cmc
movsb
jmp
mov
dec
popf
addr16
cmp
popf
and
mov
and
sbb
mov
outsb
dec
pand
mov
movsl
ss
xchg
jbe
fadd
mov
repnz
rcrl
iret
xor
ss
inc
adc
popf
pop
inc
out
insl
cli
dec
sbb
dec
mov
push
outsb
xchg
xor
aas
test
sbb
sti
into
pop
sub
int
fildll
fwait
movl
push
jno
movsb
call
fisttpll
stos
divl
outsl
adc
cltd
jo
shlb
lcall
cwtl
fs
repnz
dec
test
in
sub
inc
into
lods
in
cld
ret
test
jns
shr
loope
stos
ds
mov
repz
sarl
jns
out
lods
aad
mov
test
addr16
cmp
xchg
cmp
push
idivb
ret
data16
or
xchg
jl
or
data16
dec
repz
mov
dec
pop
sub
mov
push
shr
xorb
bnd
xchg
sbb
movsl
lods
jo
and
aam
jle
lret
inc
repz
test
ljmp
pop
mov
jle
jbe
cmp
in
mov
adc
push
jb
and
mov
xor
mov
push
or
ficomps
les
in
negl
int3
sub
mov
out
xor
in
sbb
cmp
dec
cmp
sub
stos
in
pop
mov
cld
mov
mov
cli
cld
dec
mov
sbb
mov
xchg
push
cwtl
fcompl
dec
shrl
sub
lock
repnz
std
test
xor
mov
pop
xor
pop
outsl
sbb
outsl
lahf
nop
xchg
push
rcl
hlt
sbb
loop
out
dec
xor
les
scas
jmp
xchg
lret
xor
push
xchg
xchg
mov
cltd
xchg
icebp
push
push
enter
icebp
flds
jnp
or
scas
dec
es
bnd
sahf
pop
popf
xor
cmp
test
mov
mov
into
adc
imull
cmp
pop
lods
xor
fwait
or
cmc
mov
cmc
inc
test
cmp
push
out
sbb
cmp
clc
inc
outsl
fsubr
push
cs
in
roll
mov
popa
cmp
popf
movsl
mov
xchg
repnz
jb
push
xchg
inc
mov
addr16
mov
push
in
and
cmc
mov
or
scas
popl
cmpsb
cmp
dec
xchg
sbb
pop
mov
cli
pushf
cmc
shll
fwait
test
cmc
aas
adc
mov
ret
test
mov
loop
in
loop
mov
or
into
mov
add
adc
cli
orl
stc
inc
adc
imul
jnp
jmp
icebp
sbb
cmp
inc
es
hlt
les
mov
je
les
stc
les
lret
cld
inc
push
mov
js
loopne
mov
loopne
sub
xchg
int3
dec
cmp
xchg
scas
xor
push
cld
nop
inc
das
div
mov
adc
and
push
adc
or
xchg
xchg
push
cmp
jmp
sbbl
dec
ret
and
cmp
sbb
lods
test
adc
xchg
pxor
mov
xor
daa
push
jne
mov
fwait
mov
div
stos
push
test
add
mov
mov
cltd
jne
call
xchg
xlat
adc
call
mov
push
mov
inc
rorb
pop
repnz
out
xor
popf
push
ret
std
cmp
pop
das
or
test
daa
pop
mov
movl
mov
stos
out
sbb
or
mov
xor
jns
roll
addr16
shr
add
bound
sub
cmpsb
xchg
adc
shlb
push
leave
fxch
mov
fwait
ja
push
xlat
outsb
sti
pop
outsl
int3
cmp
adc
in
daa
add
lcall
pop
rcr
imulb
stos
test
ds
cmp
jmp
push
jns
das
push
xor
pushf
cmp
cli
or
xchg
cmpsl
sub
sub
paddb
int3
sub
cmp
lret
pusha
lods
cmc
jl
push
sahf
jnp
sbb
dec
dec
shld
push
insl
cmpsb
jo
mov
or
ljmp
push
push
cmpsb
mov
xor
nop
pop
pop
xchg
mov
cmp
loopne
xchg
std
dec
xor
pop
repnz
mov
iret
out
and
imul
mov
mov
sbb
sbb
xor
lcall
mov
inc
push
inc
stc
leave
xor
push
scas
lret
inc
fsts
test
push
stc
imul
mov
jg
fldl
mov
xchg
jnp
les
in
loopne
sbb
in
daa
mov
jne
jae
ret
mov
test
add
fildl
fimuls
adc
ret
jl
lock
dec
test
pop
daa
iret
adc
adc
or
bound
shrb
sub
cwtl
test
dec
shr
ljmp
daa
dec
daa
dec
daa
mov
adc
daa
inc
es
dec
jl
je
or
jb
jb
jno
jno
jp
cmp
dec
sbb
adc
dec
add
dec
clc
dec
hlt
dec
in
dec
in
loopne
sbb
in
daa
mov
jne
jae
ret
mov
test
add
fildl
fimuls
adc
jb
outsb
daa
insb
es
pop
popf
sbbb
daa
pop
daa
leave
adc
movsb
dec
inc
popf
xor
nop
dec
mov
popf
or
icebp
cmp
xor
jae
addr16
into
mov
mov
mov
or
mov
add
cmp
inc
cmp
cmp
aaa
icebp
aaa
jmp
pop
sbb
sbb
push
popf
mov
shll
cmp
js,pt
pusha
lahf
and
lods
dec
movsb
dec
push
lcall
mov
cmp
xor
je
je
imul
int3
mov
daa
and
sbb
sbb
mov
or
test
test
add
filds
inc
fiadds
ret
js
aaa
push
aaa
xor
sahf
sbb
dec
mov
popf
in
decl
mov
aad
cmp
cmp
xor
jae
imul
popf
adc
adc
or
add
ret
jo
jo
jo
outsl
loop
ret
outsl
bound
outsl
add
aaa
popa
cmp
fwait
test
cwtl
sahf
sbb
or
loopne
fisubs
fisubl
pop
dec
hlt
shr
lcall
loop
ret
aad
fmuls
cmc
add
test
loop
cmpb
cmp
aam
rorl
rorb
call
mov
or
adc
xor
jl
call
pushf
jo
push
cli
add
pushf
cmp
cmc
aaa
icebp
aaa
loope
shll
mov
xchg
aaa
cmpl
dec
aam
int3
dec
push
daa
xchg
jo
outsl
adc
sub
jnp
popl
xlat
or
adc
dec
rorb
pop
daa
iret
adc
aam
stos
adc
mov
dec
jbe
dec
daa
inc
es
dec
test
dec
sub
cmp
in
in
jecxz
jecxz
hlt
bound
jp
cmp
pushf
cmp
fwait
clc
lock
fwait
call
fwait
rcrb
es
or
mov
out
mov
dec
scas
bnd
call
mov
fisubs
addr16
rorl
jbe
pushf
lret
pop
sub
xorl
push
stos
mov
flds
mov
xor
mov
repz
jmp
xchg
mov
mov
jl
mov
repnz
xor
test
jp
pop
sub
cltd
jbe
or
out
inc
mov
filds
jecxz
jo
js
ds
sub
jp
mov
mov
mov
xlat
add
xchg
mov
pop
pop
add
outsl
sbb
adc
push
clc
out
testl
inc
aad
push
clc
ret
jae
cmpl
push
cwtl
mov
test
cmp
lahf
mov
sub
mov
jbe
xchg
mov
or
lcall
xchg
mov
les
or
xchg
and
jns
por
addb
mov
inc
lea
imul
insl
cmpb
mov
dec
xchg
int
jp
dec
pop
xchg
and
mov
data16
xlat
cltd
xorb
mov
mov
pop
xor
jecxz
cld
jno
xchg
mov
jbe
mov
sub
negb
sbb
mov
insb
mov
inc
enter
hlt
call
loopne
dec
in
lahf
outsb
pop
int3
in
fwait
lods
sti
shll
dec
mov
dec
stos
out
decl
sub
xor
ret
enter
bound
rorb
inc
daa
cmp
cmp
scas
adc
test
xor
nop
dec
and
dec
push
daa
es
lods
adc
sub
lods
adc
jl
pop
daa
cs
xor
adc
push
daa
sbb
mov
add
mov
aas
test
daa
test
mov
adc
or
mov
repz
sarl
pushf
dec
sahf
jl
ficoms
rorb
call
orb
loopne
dec
dec
sub
daa
xchg
adc
or
mov
jns
cmp
pushf
adc
xor
lock
adc
repnz
jns
xor
cmp
fwait
pushf
std
xlat
pushf
icebp
mov
sub
out
mov
out
push
jge
imulb
jle
sub
adc
out
mov
inc
enter
icebp
jle
mov
pop
xchg
mul
ret
into
cwtl
push
in
popf
dec
std
jg
lcall
xor
mov
jge
mov
scas
shrd
jge
enter
pop
inc
out
loopne
cltd
daa
sti
movsb
stos
out
repnz
lds
mov
bound
mov
iret
or
idivl
int3
leave
lahf
inc
leave
cmpsl
xchg
jg
repz
stc
in
cmp
adc
fsts
cwtl
out
push
xchg
fnstcw
dec
fidivrl
mov
out
and
fldt
out
lret
inc
inc
pop
js
lcall
stc
in
mov
out
hlt
das
insb
sub
enter
push
push
idivb
sbb
mov
cli
xor
js
ja
imul
sti
lahf
sub
aas
cmp
sti
inc
shl
movsb
xor
cmp
cmp
cmp
mov
sti
push
das
into
lea
mov
loop
ljmp
dec
jg
mov
pusha
fsubrl
cld
lcall
jmp
mov
stos
fcomps
ljmp
cmp
shll
insl
adc
mov
dec
jns
jns
jg
mov
mov
mov
ja
imul
idivb
mov
enter
idivb
sbb
arpl
pop
movsl
sbb
fmul
in
imul
adc
shrl
sar
in
je
aas
in
hlt
push
cli
mov
mov
mov
inc
rcrl
jle
xchg
pop
xchg
xor
mov
icebp
insl
in
int3
fwait
cmc
outsl
and
icebp
ja
xlat
movsb
repz
mov
cltd
xor
js
cmp
mov
add
imul
push
mov
clc
and
hlt
push
jnp
inc
sti
cmpl
outsb
mov
f2xm1
popf
dec
sahf
fistl
jmp
mov
jp
jge
jb
or
imul
mov
int
xchg
xor
fidivrs
cmp
mov
jno
lea
cld
adcl
cs
push
mov
outsl
jle
loopne
jae
nop
jb
xor
mov
fcmovu
daa
mov
mov
jnp
insl
setle
daa
mov
into
popa
mov
dec
and
mov
fs
cmp
mov
es
pop
cmp
hlt
pop
cmp
scas
cld
in
sbb
lahf
fidivs
jnp
in
xor
enter
and
insl
pushl
xchg
cs
push
push
test
jns
push
cmc
jg
push
ret
mov
test
div
cmp
xor
jae
out
inc
sub
addb
popf
push
pop
cltd
movsl
int3
add
mov
pushf
out
push
lret
aaa
test
repz
cli
adc
cwtl
dec
std
sarl
imull
testb
add
pop
fldl
rep
mov
out
mov
cmp
add
push
dec
sbb
lret
push
sbb
mov
mov
sbb
push
xor
pushf
imul
lahf
dec
in
loop
imul
sbb
push
mov
test
adc
fnstenv
cli
push
jge
pop
nop
adc
xchg
fisubs
in
jmp
jbe
lahf
jae
rolb
inc
sbb
out
jae
fisubrs
in
sahf
stc
mov
test
repnz
scas
addl
jp
push
sarl
gs
and
xor
test
xchg
aaa
out
lret
push
pushf
stos
das
subl
push
push
and
insb
in
out
aad
cmp
cmp
outsl
mov
rol
in
add
in
mov
xchg
leave
mov
mov
adc
jbe
daa
sub
xchg
mov
arpl
scas
inc
outsb
outsb
and
out
aad
jns
mov
xchg
aaa
clc
imul
jg
shll
xchg
mov
js
pop
dec
movsb
lea
icebp
std
std
outsl
pop
out
fdivp
mov
mov
xchg
mov
jle
push
cltd
xor
je
clc
cltd
adc
insb
adc
in
mov
jle
pop
dec
imul
mov
dec
inc
das
push
xor
dec
pop
std
push
pushl
aaa
jne
nop
gs
out
int
mov
stc
or
add
out
vmovdqu
std
mov
lds
pop
std
cmp
mov
loope
sub
xor
aas
jmp
mov
mov
mov
jge
es
dec
dec
xchg
leave
xchg
out
adc
repz
mov
scas
cmp
fs
dec
iret
test
cmp
sti
sub
inc
aaa
repz
pop
push
mov
int
out
and
xor
shll
push
stos
cwtl
cmp
mov
cmpsb
mov
push
insb
cmpsl
xchg
cmpsb
inc
lods
cmp
ret
dec
xchg
add
mov
ffreep
data16
js
jp
or
lret
ret
inc
cmp
xor
jmp
mov
cmc
lret
pop
push
jle
cmp
cmc
loope
clc
lock
in
push
cmp
ja
mov
xchg
fs
sub
dec
in
or
push
loopne
mov
je
sub
adc
xchg
jnp
add
out
jbe
and
out
cltd
fcoml
cmp
mov
jge
lock
mov
aaa
mov
test
aas
ja
cmp
cs
and
pop
add
pop
mov
lods
mull
inc
or
dec
xchg
jno
stos
repnz
daa
sbb
outsb
addr16
lcall
inc
ret
xor
mov
jge
mov
iret
jecxz
add
into
mov
in
jae
push
orl
pop
push
mov
iret
lret
pop
jae
sbb
out
sub
mov
out
out
aaa
lcall
fwait
pusha
andb
les
out
fisttpll
shll
gs
cld
mov
imul
dec
mov
jge
push
pandn
test
or
repz
rcl
shrl
pop
sbb
lods
in
mov
mov
or
push
pop
nop
mov
dec
pushf
jnp
cli
mov
and
mov
stos
mov
pop
cmp
mov
add
lods
cmc
mov
in
pop
stos
out
push
scas
popf
test
dec
inc
mov
nop
pop
orl
mov
cwtl
cld
fld
mov
dec
std
xchg
sbb
aam
imul
fildl
and
push
pop
sub
push
movsl
repz
or
mov
mov
pop
outsb
cmpl
fstpt
adc
and
xor
xor
mov
push
rcrl
mov
mull
rep
pop
jne
stos
xchg
cmp
mov
insl
xlat
cmp
push
divb
mov
decl
pop
insb
mov
mov
push
lods
scas
fstpl
lret
movsb
pop
mov
sub
or
xlat
ror
sbb
xor
and
mov
fxam
mov
jg
pop
jecxz
mov
dec
adc
shrb
mov
pop
and
mov
or
xchg
xlat
mov
push
ss
pop
sbb
outsb
or
stos
dec
inc
xor
pusha
and
fisubs
mov
cvtpi2ps
push
bound
lds
or
xorl
sbb
xor
cli
std
adcl
in
popa
sbb
lock
xchg
push
sub
pop
mov
mov
xchg
dec
addr16
stos
das
jp
popa
mov
mulb
sub
add
imul
scas
dec
xor
lcall
push
stos
int3
sub
aam
pusha
push
pushf
lcall
and
aad
adc
xor
fidivl
out
and
int3
fdivl
xor
testb
jnp
sbb
mov
in
rcrb
inc
push
and
dec
dec
dec
adc
inc
dec
mov
sbb
fisubs
bound
mov
mov
movsb
pop
sbb
mov
jo
mov
fdivr
dec
out
jp
idivl
pop
push
adc
jmp
push
lods
leave
xsave
das
cltd
push
int3
and
test
xor
jo
cmp
in
push
lds
add
mov
repz
sub
frstor
outsb
cltd
xchg
leave
mov
insb
mov
and
sahf
fisttps
je
jle
imul
fmul
das
lahf
mov
jl
cltd
xor
push
mov
xchg
andl
fsubl
xchg
xchg
jbe
cmc
in
sub
das
inc
sbb
sahf
mov
in
mov
clc
cmpb
xor
std
mov
insl
dec
mov
mov
pop
lods
add
mov
jo
call
add
ljmp
mov
adc
notl
pop
loope
inc
jge
ljmp
sub
mov
movsl
sbb
push
add
push
rcrb
loope,pt
sbb
sub
dec
dec
sahf
mov
iret
xchg
dec
loope,pt
jne
mov
or
sbb
pop
loop
mov
pop
sub
mov
in
lret
mov
inc
jne
mov
dec
movsb
adc
jge
je
in
push
cld
lcall
mov
sbb
call
pop
loope
outsl
cmp
mov
shl
sub
hlt
pop
lret
imul
xor
mov
div
fdivrl
cmp
imul
adc
scas
sub
lods
outsl
orb
imull
sbb
sbb
data16
test
xchg
xor
cmp
dec
mul
imul
xchg
xchg
aad
mov
add
loope
je,pn
out
scas
repnz
mov
mov
sbb
stc
in
aad
dec
inc
incl
aaa
insl
aad
sub
adc
adc
jns
dec
into
aas
je
addr16
sub
lret
loop
xchg
mov
jae
fdivrl
cmp
movsb
clc
aas
push
jno
popf
jne
nop
mov
sbb
push
lahf
sbb
sbb
add
xchg
jb
dec
mov
inc
jnp
sub
fimuls
inc
ret
leave
loope
int
out
ret
subl
push
cmp
mov
stos
addr16
push
dec
fwait
mov
popa
testb
or
dec
pop
std
adc
out
fistpl
stos
xchg
push
leave
pushf
std
mov
cwtl
leave
das
mov
gs
repz
call
xchg
mov
loope
dec
or
mov
jns
leave
mov
mulb
in
fcmovu
and
inc
ljmp
jg
cmpsb
xor
fidivs
xchg
sbb
ja
lods
adc
cwtl
les
imul
stos
jnp
int3
les
mov
fmul
add
xor
aam
dec
lahf
insb
pop
into
adc
sbb
mov
xor
xlat
test
add
cs
or
fldcw
pushf
fstp
scas
int3
mov
pop
popa
insl
shrl
sbb
fiadds
jb
xor
cmpl
and
add
sbb
jg
push
rcrb
cld
push
or
test
mov
pop
repnz
fnstenv
cmpsl
push
mov
dec
pop
adc
arpl
shll
sbb
inc
mov
iret
mov
and
mov
push
xchg
mov
fstpt
sti
pusha
imul
popf
push
scas
data16
xor
jl
scas
ret
in
and
xlat
mov
push
mov
int
loopew
ss
jge
aaa
ss
clc
push
push
andl
push
scas
mov
das
ds
lahf
push
cld
cld
repz
inc
in
fisubl
mov
sbb
std
add
mov
insb
cld
mov
outsl
aaa
mov
jle
cmp
mov
addb
leave
cmc
cmp
jge
pop
mull
mov
pop
xchg
jb
out
jmp
loop
shrl
mov
imull
sti
jmp
push
test
mov
fucomi
jnp
cmp
subl
mov
cld
xchg
inc
lret
repz
mov
aaa
adc
xchg
lds
cmp
mov
repnz
mov
pop
or
icebp
pop
test
adc
mov
jne
jno
sti
xchg
pop
sub
addr16
scas
hlt
aaa
outsl
mov
es
mov
inc
mov
aad
push
popa
ret
jecxz
push
dec
stc
xor
sar
mov
aad
insb
mov
fwait
in
divl
mov
sbb
jg
popa
out
loopne
psrlq
jns
cmp
jp
add
scas
xchg
aas
enter
lcall
rcll
jmp
and
in
aas
jp
pop
das
sub
dec
xor
std
outsl
movsl
scas
roll
je
mov
movsl
cli
jnp
lea
inc
in
stos
negl
repnz
add
das
push
inc
jns
jl
jg
lods
pop
data16
jg
call
add
jno
or
sbb
adc
movsb
cmpsl
xchg
sub
pushf
sti
xchg
je
or
ja
sbb
fcmove
andl
jmp
jg
fldenv
jp
push
call
xorb
mov
jle
aas
mov
aas
dec
loop
aaa
in
pusha
adc
cmp
notl
lcall
sar
push
fwait
notl
mov
mov
and
pop
fwait
inc
lds
sbb
dec
and
fildl
push
addr16
in
jle
and
ds
mov
inc
gs
push
push
push
aaa
adc
or
jbe
xchg
or
gs
outsl
xor
int
cltd
scas
mov
mov
repnz
int
push
jecxz
mov
mov
xchg
test
push
ficompl
aas
mov
mov
js
ss
mov
dec
pop
in
leave
push
xchg
mov
test
mov
sub
subb
test
in
frstor
mov
sbb
pop
into
cld
cmp
insl
push
push
inc
adc
arpl
cs
aaa
pushf
adc
mul
sub
pop
or
std
iret
xchg
aas
mov
imul
clc
jmp
adc
jbe
in
mov
pop
out
mov
push
jmp
in
ret
in
in
out
adc
fs
mov
sbb
mov
pop
sbb
or
push
xchg
mov
cmp
insb
cli
hlt
das
daa
adc
adc
xor
sub
in
xor
and
mov
lret
pinsrw
int
insl
fidivs
jp
je
jmp
jns
sbb
aaa
jge
pop
mov
pop
xchg
mov
pop
xchg
cmpxchg
xchg
movsl
ret
movsl
xchg
add
xchg
andb
mov
out
add
jns
cmc
in
add
inc
fst
es
popa
cwtl
sbbl
iret
cmc
xchg
sbb
xchg
jmp
imul
pop
adc
xchg
pop
jl
mov
std
xchg
jno
mov
call
loopne
jnp
loope
lods
and
mov
cmp
js
xchg
add
mov
int
fistpl
xchg
adc
jle
idivl
out
outsb
or
mov
popl
push
nop
loopne
or
ja
fisubrs
jp
out
and
flds
loopne
sub
lods
cwtl
into
popa
inc
pushf
xor
cmp
out
or
add
inc
pop
icebp
aad
fst
cmc
repz
xchg
mov
push
cli
cmc
inc
dec
call
sbb
dec
ret
rorl
in
sbb
mov
int
popf
and
inc
addr16
cmovne
jl
mov
jo
mov
mov
jg
fisubrl
xchg
fdivrl
gs
jns
xor
fldl
imul
sub
mov
pop
clc
andl
insb
pushf
mov
in
add
cld
adc
sti
or
pushf
fsub
lret
xchg
add
pcmpgtw
adc
imul
out
fs
cmp
sahf
mov
jl
cmp
fwait
add
popa
sarl
fistpl
outsl
imul
push
pop
jne
mov
or
pop
jmp
stos
dec
inc
icebp
ljmp
jae
fcomps
push
imul
jl
aaa
notb
cmpsl
ljmp
pop
lea
push
mov
xchg
add
shlb
mov
xchg
sti
repnz
lahf
pushf
jae
int3
negb
stc
scas
or
notl
sbb
inc
add
pop
popa
nop
sahf
lret
dec
jle
pop
in
sub
outsb
push
sbb
xchg
es
sahf
pop
divl
fdivs
adc
lods
mov
sbb
adc
loop
mov
sahf
pop
jge
dec
xor
scas
movsl
cmp
je
arpl
cwtl
repz
inc
cmpsl
mov
and
or
pop
xchg
je
in
jno
roll
xor
sub
push
xchg
mov
xchg
pop
adc
sbb
push
or
inc
sub
mov
or
repnz
mov
cmp
loope
loopne
mov
loopne
xchg
out
ljmp
bound
inc
aam
sub
sub
jb
jo
and
adc
sbb
loopne
scas
pusha
in
in
push
insb
iret
pop
in
je
sbb
push
and
std
xor
mov
lds
jne
xchg
cmp
mov
into
jmp
cs
fisttps
fidivl
mov
call
ds
inc
clc
fidivs
xchg
cmp
ds
in
dec
pusha
into
faddl
inc
ret
outsb
mov
xor
pop
gs
push
jnp
cmpsb
xor
aaa
mov
dec
mov
fs
icebp
sub
arpl
pusha
push
jp
mov
push
shlb
push
mov
aam
xor
mov
in
shr
cmp
inc
in
pop
xchg
cmp
lds
mov
icebp
mov
mov
xchg
in
cmp
cmp
inc
iret
lcall
cld
cmpsb
cld
lcall
adc
out
push
cld
fsubrs
xor
lock
loope
xchg
fs
js
mov
push
sub
mov
stos
cmp
xchg
js
pop
inc
and
clc
sbb
jno
fidivrs
mov
adcl
mov
dec
xchg
lock
fists
push
mov
jnp
aas
nop
aad
out
pusha
in
and
or
adc
ret
xchg
popf
popa
and
das
les
daa
insl
fcomip
outsl
sbb
je
cld
and
out
addr16
out
hlt
int
cld
sub
bound
loope
pop
fidivs
mov
or
insl
mov
mov
or
aad
shll
mov
test
adc
ja
mov
sbb
shll
inc
sbb
popf
fst
xlat
sti
push
mov
fdivp
call
std
pshufw
and
mov
sbb
lods
iret
mov
insl
test
jge
stc
in
push
jmp
in
jno
jle
xor
mov
das
ljmp
notb
das
or
insb
stc
mov
divb
pop
jnp
push
xor
out
push
data16
jb
das
flds
push
mov
loopne
outsb
xlat
push
ficoml
jl
ds
dec
push
popa
fnstsw
mov
xchg
xchg
pop
hlt
jge
dec
lret
psubw
cmp
inc
pop
mov
and
movsb
mov
adc
je
fisttpll
sub
jecxz
outsl
leave
ljmp
iret
mov
loope
cmc
sbb
adc
jmp
ja
dec
push
push
inc
mov
shrd
iret
push
stc
nop
aaa
push
cmp
stos
imul
in
fadd
icebp
clc
jg
in
push
out
sub
xor
cmpsl
adc
dec
lret
imul
orl
pop
fcmovu
bound
sub
lahf
fmulp
lds
xor
andnps
xor
cmp
push
lods
inc
mov
xor
negl
outsl
clc
adc
or
lret
scas
in
fisttpll
movsl
pop
and
xlat
xor
sub
test
andb
das
fisttps
addr16
fst
popa
ret
out
cmc
cltd
push
jbe
popf
cmc
je
cmpsl
out
xor
inc
xchg
cmp
jle
inc
cmp
jle
and
scas
lods
cmp
test
shll
adc
mov
rcrl
popa
int3
jbe
pop
int3
jno
pop
pop
loop
fldt
jbe
mov
in
jecxz
push
cmp
inc
int
jl
cmp
cmp
pop
in
mov
stc
fnstenv
mov
mov
dec
mov
xlat
jae
push
adc
int3
push
xor
ret
cmp
adc
xchg
insb
aam
in
adc
mov
xchg
mov
mov
sbb
inc
dec
cmp
call
mov
in
fldl
mov
mov
inc
fninit
adc
pop
outsl
fwait
jg
cmpl
repz
sub
jge,pt
leave
mov
inc
lahf
mov
adc
pusha
sahf
or
aam
mov
sbb
es
icebp
repz
xor
mov
les
std
insl
into
aas
scas
sbb
ljmp
lock
je
adc
ljmp
mov
sub
lret
int
add
out
dec
out
les
insb
cwtl
in
fisubl
sub
cwtl
mov
pop
lods
push
dec
pop
orb
xchg
cmp
mov
dec
fisubrl
fs
or
cmp
rcrl
shl
sahf
cld
xor
data16
xchg
fldl
into
dec
out
nop
mov
and
das
enter
mov
jg
orl
push
addr16
jp
jecxz
lods
push
cmp
pushf
mov
push
out
shlb
stos
pop
into
mov
push
fisubs
mov
xor
cli
dec
inc
dec
cmp
cmp
pop
addr16
dec
cli
mov
mov
adc
stc
add
cmpsb
xor
cmp
and
fisubrs
cltd
test
xchg
sub
mov
jbe
sub
daa
jbe
mov
jnp
mov
popf
repz
push
cmpsb
jmp
dec
fnstsw
enter
sarl
es
je
stc
daa
inc
iret
sub
sub
pop
fmuls
push
mov
outsb
stos
bound
pop
push
or
sti
in
pop
call
pop
lods
jle
cmp
mov
int
sub
sarl
dec
adc
mov
lahf
or
shlb
loopne
jo
scas
lods
sub
xor
mov
sub
lret
cmp
mov
xchg
scas
push
jl
repz
mov
and
mov
int3
jo
in
xor
jle
stc
sarl
gs
ss
xchg
sub
das
scas
jo
mov
pop
xchg
out
jb
cwtl
insb
mov
rorl
imul
push
sub
mov
ds
pop
sub
add
repz
push
lret
jne
push
cs
in
add
cwtl
cli
xchg
sti
mov
sub
mov
hlt
inc
sti
pop
aas
sub
and
into
add
aaa
and
rolb
mov
push
and
repnz
addb
sar
adc
mov
lods
orb
js
in
repnz
xchg
push
pop
movsl
into
sbb
shl
notb
hlt
cmp
mov
ds
outsb
sbb
dec
xchg
or
cmp
das
stc
push
inc
dec
addr16
mov
jo
ret
insb
adc
or
pushf
pop
aaa
dec
sarb
repz
mov
pop
pop
inc
xorb
imul
cli
cltd
inc
mov
pop
cmc
mov
mov
enter
int
jb
sbb
jbe
test
jbe
inc
add
jns
adc
movb
pop
adc
decl
mov
into
repnz
jp
mov
popa
mov
xchg
xor
stc
lods
mov
stc
pop
push
mov
jg
jbe
ljmp
movsb
jne
xor
iret
iret
xchg
shlb
cmpsl
jecxz
pop
idiv
in
sub
stc
jns
or
mov
ds
cld
mov
push
jle
mov
pop
inc
loopne
mov
nop
mov
push
fwait
sub
mov
cmc
ret
and
mov
xchg
shll
test
in
push
test
xorl
jnp
cmp
repz
add
dec
xchg
and
jmp
pop
inc
repnz
sbb
call
orl
add
sub
imul
aam
imul
mov
enter
in
fidivl
pop
sbb
mov
out
pop
jge
push
inc
das
ja
xchg
loop
dec
negb
add
jge
and
ret
addr16
in
jnp
xor
add
stos
ja
scas
push
stos
adc
jo
mov
dec
and
mov
and
mov
shrl
pop
scas
jmp
arpl
lods
orb
mov
ret
insb
int3
pop
loopne
mov
movsl
cmp
dec
fidivl
mov
ja
hlt
mov
daa
idivl
xchg
sub
mov
in
incl
inc
jbe
jge
int
sbb
jns
jl
out
sbb
jns
out
imul
in
mov
enter
and
jns
into
and
int3
fcmovnbe
adcl
mov
xchg
movsb
dec
fists
fs
fwait
and
or
jne
cmpsl
or
popa
popa
mov
les
sarl
sub
add
adc
cmp
cmp
pop
stc
shl
lea
adc
pop
pop
mov
cld
ss
arpl
push
pop
push
in
testl
or
cwtl
inc
cmc
into
ds
cltd
aaa
jmp
or
xor
imul
clc
ja
dec
push
and
sti
push
mov
and
fsubs
data16
fstl
xchg
lret
pop
jg
in
icebp
ret
dec
xchg
xchg
popf
lret
jae
push
push
adc
push
pop
in
mov
mov
mov
dec
or
fs
cld
dec
dec
mov
clc
add
hlt
ss
and
sub
mov
and
jl
dec
and
jb
mov
mov
ja
sti
push
cmpl
repz
add
or
fldt
xchg
pop
inc
or
lret
dec
push
push
cmpl
jl
pop
inc
lret
jno
pop
fnstcw
sub
jle
div
add
enter
jbe
dec
std
imul
jecxz
bnd
stc
dec
or
insb
mov
bound
dec
sbb
stc
xchg
lds
fstpl
pop
mov
scas
arpl
push
repnz
leave
std
pop
repz
mov
pop
jp
xorl
mov
addr16
cltd
call
jmp
pop
inc
jns
xchg
jbe
lods
mov
mov
dec
jp
cmp
jo
std
push
inc
fcmovnu
push
jle
mov
sub
sbb
push
sub
sbb
adc
mov
add
dec
pop
add
cmc
call
mov
push
aaa
std
jne
or
mov
xor
mov
inc
sub
outsb
cli
or
add
fidivrs
pop
icebp
sbb
pop
in
loope
ret
inc
jns
lods
scas
pushf
mov
mov
shl
int
sbb
cmp
sub
sti
push
xor
daa
out
jbe
lcall
inc
xchg
mov
xchg
mov
js
mov
into
jge
fsubs
pop
lahf
jmp
lret
ja
scas
mov
xorl
testb
out
xor
inc
sub
cmpsl
cltd
in
push
mov
jns
push
movsb
xchg
sbb
ja
mov
or
xchg
mov
mov
lcall
cmp
mov
or
std
idivl
pop
jne
outsb
outsl
outsl
or
in
mov
icebp
push
movsl
iret
or
outsb
loopne
cmc
fisubs
testb
repnz
sbb
or
pusha
out
shlb
idiv
jns
fmull
fldenv
add
push
aad
call
jno
fsubp
pop
daa
push
stc
mov
lret
push
mov
cmp
mov
push
lahf
outsb
jo
mov
test
repnz
push
jno
insb
cmp
or
inc
adcl
push
xor
lahf
movsb
fidivs
sahf
rcr
hlt
sbb
aad
loopne
aas
cmp
jl
adc
mov
test
mov
adc
fisubl
stc
xor
aas
sahf
ds
pop
imul
ljmp
push
lret
fnsave
mov
mov
popa
into
int
mov
jle
enter
test
in
insb
les
aaa
into
cmp
or
mov
icebp
outsl
mov
leave
jb,pt
jle
fistpl
push
push
jge
mov
fistps
enter
imul
jne
test
cs
sub
mov
or
pop
pop
jmp
xor
sbb
cmp
xor
iret
mov
xrelease
cmpsb
dec
mov
jns
idivl
das
cmp
mov
icebp
arpl
cmc
aad
inc
push
arpl
sub
jge,pt
imul
cmp
cld
mov
jg
push
jg
jmp
xor
sahf
add
aad
xorb
cmp
xchg
or
dec
daa
sub
add
std
add
mov
mov
test
mov
fs
xchg
push
push
cmpsb
std
clc
inc
out
popf
push
fcomps
push
ret
add
popa
pop
repz
pop
jmp
cmc
imul
clc
and
fwait
push
push
lret
out
flds
xchg
add
ror
divb
pushf
movsb
adc
ret
push
ds
fwait
in
add
sub
push
testb
nop
add
lret
mov
cmp
insb
mov
pop
mov
cmp
mov
fwait
xchg
push
js
mull
inc
dec
mov
shl
mov
subb
push
push
push
mov
hlt
icebp
int
imul
scas
test
les
bound
pop
sti
pop
movsb
sub
xchg
cmp
icebp
call
dec
ret
jp
mov
pop
es
mov
test
not
xchg
out
adc
out
mov
cmp
rcrl
xor
and
mov
and
loope
lret
push
clc
push
outsb
dec
out
mov
mov
pop
xlat
testb
jns
jnp
inc
pop
mov
mov
add
jae
xchg
lahf
mov
ss
dec
pop
lods
xor
imul
clc
lahf
jb
pop
cmp
stos
add
pop
mov
rolb
fcmovu
gs
mov
pushf
rcrl
mov
xchg
dec
into
in
and
pop
mov
mov
mov
iret
sarl
jg
ja
pop
sbb
pop
mov
or
repnz
add
jbe
sub
into
jl
outsb
aad
push
stos
sti
sbb
ss
shl
loop
ja
icebp
test
mov
insb
in
jg
popf
mov
mov
subl
std
int
aaa
or
insl
outsl
test
in
leave
sbb
pop
data16
push
test
mov
mov
jge
cli
cmpsl
mov
mov
xorl
in
cld
repnz
dec
adc
fisubrs
ljmp
outsl
out
pop
mov
push
shrl
mov
repz
lods
mov
xor
ret
pop
sub
sub
push
mov
repz
movsb
and
mov
dec
jmp
mov
inc
jmp
sub
insl
in
ficoms
inc
cwtl
sub
shlb
pushl
jbe
mov
popf
mov
xor
push
cltd
xchg
scas
mov
in
xor
mov
testb
pop
daa
mov
adc
jl
sbb
lds
testl
cmpl
imulb
dec
pop
jno
fwait
jbe
mov
sbb
dec
xchg
xchg
pop
jbe
aam
jle
xchg
into
pop
sbb
outsb
mov
xchg
lret
in
ret
cwtl
mov
loopne
xor
out
or
inc
ret
xor
xor
lds
push
dec
xlat
lock
add
out
pop
popa
aas
cmp
dec
jl
sub
mov
stos
in
shll
adc
lahf
mov
mov
sub
lret
inc
xlat
stos
std
mov
mov
repnz
mov
push
pop
inc
add
addr16
push
rcll
xchg
mov
cmp
xor
sbb
mov
xorb
les
stos
mov
jle
push
sahf
or
addr16
pop
in
mov
inc
imul
inc
cmpsb
mov
gs
add
cmp
ds
push
gs
pop
jg
lcall
mov
mov
push
jnp
and
mov
leave
stc
mov
or
lcall
pop
into
fs
int
in
idivl
sbb
pop
cmp
jg
bound
cwtl
stos
mov
cmc
xchg
jmp
lods
mov
sbb
jne
mov
inc
loope
insb
sbb
gs
in
jae
cmp
sar
aas
xor
sbb
sub
std
lahf
adcb
add
cld
cmp
mov
cmp
push
pop
push
sbb
cmpb
lods
sti
test
fs
cld
scas
mov
insb
adc
push
push
divb
pop
ja
sbb
in
and
mov
movsb
call
jb
cmp
push
mov
mov
adc
xchg
mov
gs
mov
mov
xcrypt-cfb
cmpsl
data16
sub
sbb
out
repz
in
xor
pop
jns
dec
aas
jb
test
jno
lds
pop
or
ret
mov
pop
add
dec
adc
adc
push
testb
sub
push
jp
pop
ds
dec
pop
popa
sub
cs
stc
fsubp
repnz
data16
xchg
cs
pop
shrl
add
dec
xchg
pop
lcall
adc
std
sarl
jne
xchg
into
es
dec
jnp
fwait
dec
lret
fistl
pop
sti
adc
pop
notb
xchg
jp
xor
cmp
insb
hlt
fwait
lds
adc
das
sbb
mov
es
leave
mov
lcall
int
dec
fnstcw
out
stc
sbb
push
ret
and
xor
xor
push
cli
aaa
mov
aaa
lods
bound
mov
xchg
lahf
cmp
add
les
ds
test
push
insl
lret
mov
mov
inc
adcl
dec
xchg
jecxz
xchg
ds
mov
dec
mov
push
inc
iret
mov
xchg
fmull
add
dec
sub
mov
in
insl
mov
shrb
mov
sarb
sub
sar
cmpsb
loope
imul
sti
push
mov
inc
pop
cltd
cli
pop
and
xchg
cmp
repnz
rcrb
xor
mov
jmp
es
in
dec
inc
sar
jecxz
sbb
jae
dec
mov
jmp
jge
sub
sub
popa
xchg
stc
ja
mov
shll
dec
pushf
rclb
outsb
cltd
lret
fcomps
lods
mov
pop
arpl
cmp
stos
aas
xor
pop
xor
or
es
dec
mov
mov
js
add
jp
sbb
and
lahf
cmp
inc
and
jae
inc
pop
out
js
pushf
inc
bound
cmp
insb
in
in
xchg
into
pop
lods
das
jnp
lock
cld
xchg
fldt
ds
test
or
les
jno
pop
fmuls
aas
sahf
insb
insb
in
mov
outsb
into
div
fdivrl
negl
in
fnstsw
sub
xchg
jne
or
sti
jns
aad
mov
push
or
pop
cmc
insb
xchg
lods
lcall
xor
xchg
dec
mov
je
cmc
push
mov
sub
and
push
repnz
cmpsl
jg
out
mov
adc
dec
fdivl
outsb
sbb
in
pop
pop
imul
imull
pushf
jno
pop
in
lds
imul
scas
cmp
out
jae
adc
pop
testl
or
das
jle
outsb
ficoml
jns
mov
leave
divb
mov
sti
test
popf
daa
sti
add
nop
sub
ds
fs
and
pop
jmp
nop
outsb
pop
lret
xorb
pop
ficomps
lock
jmp
or
cmp
mov
pop
sbb
jno
clc
xor
push
xchg
sbb
mov
roll
imul
fucomp
sbb
dec
jne
mov
mov
push
inc
call
jbe
repnz
add
lahf
dec
sub
adc
into
mov
push
sub
sbb
ja
jmp
jp,pt
test
imulb
shrb
insl
adc
mov
loopne
loop
inc
movsl
fs
out
js
push
iret
pop
mov
push
mov
loope
aas
dec
adc
dec
ss
push
xor
adc
cli
scas
mov
test
cld
inc
or
mov
andl
or
in
mov
addr16
mov
ret
jnp
pop
cmpb
mov
xor
jne
sti
std
lock
jne
test
push
loop
imul
pop
jmp
sub
ja
std
les
das
mov
cmp
jnp
out
repnz
xchg
outsl
mull
aam
shlb
popa
mov
movsl
js
sbb
addb
dec
out
xchg
lret
shlb
mov
addr16
data16
mov
outsl
repz
xchg
mov
out
pop
mov
pushf
ror
xchg
mov
negl
into
push
test
cmp
xchg
push
fstp
fs
cmp
or
xor
pop
xchg
dec
ret
mov
jno
xchg
out
pop
sub
mov
addb
pushf
in
pop
stc
aam
enter
pop
jecxz
add
int3
sbb
test
mov
cwtl
mov
outsb
xchg
sbb
mov
cmp
xchg
ret
xchg
cli
cltd
pusha
sar
xchg
lods
or
arpl
mov
xlat
cmpsl
pop
adc
or
push
dec
stc
xor
push
out
rorl
out
inc
sub
mov
pop
cmp
test
es
in
jnp
popf
movsl
int3
push
cmp
push
ja
jge
pusha
mov
hlt
fldl
icebp
jae
sbb
adc
fbld
add
nop
subb
push
adc
sarl
mov
push
sbb
mov
cmc
mov
and
or
push
movsb
insl
inc
mov
stos
and
ds
mov
clc
xchg
mov
xchg
jge
sub
das
cs
pop
push
mov
xor
outsb
add
jbe
and
adc
jecxz
mov
push
inc
pop
pop
cld
mov
bound
iret
jmp
ljmp
roll
or
stos
insb
xchg
pop
pushf
addr16
push
rcll
push
jge
andb
outsb
jg
mov
fistpl
mov
inc
incl
dec
pop
inc
in
jae
and
push
enter
mov
add
mov
sbb
add
mov
loope
ds
inc
jne
adc
sub
and
arpl
hlt
xor
subb
mov
idivl
mov
sbb
xor
adc
pop
jl
mov
nop
dec
in
cmp
mov
out
mov
aas
data16
in
sahf
in
xor
push
or
dec
enter
pop
mov
outsl
enter
mov
xor
cli
shr
fwait
int3
xor
repz
pusha
add
push
ret
lods
mov
lahf
push
movsb
mov
or
data16
adc
jo
pop
and
es
cli
enter
dec
jecxz
mov
xchg
or
sub
jge
call
jnp
and
jge
out
orb
cmpsl
popf
jecxz
in
and
xor
pusha
xor
mov
jns
sbb
or
push
push
lcall
std
repnz
mov
pushf
aad
rep
fnstenv
aas
dec
stos
dec
scas
jg
jne
cmp
mov
fsubrl
daa
lret
sbbl
aas
ret
mov
cs
push
call
jge
cmp
lea
adc
sbb
ja
cmpsl
sub
popf
sbb
mov
call
test
cmp
repz
imul
in
adc
rorl
in
jno
clc
and
js
and
aas
push
push
leave
ds
sarl
fistl
pop
fidivs
jp
mov
ffreep
push
jns
sbb
mov
mov
int
xlat
es
push
imul
or
inc
xchg
lcall
push
mov
aas
or
outsb
push
mov
cli
push
outsb
das
outsl
call
in
adc
lret
bsr
mov
jge
pop
pop
add
xlat
sbb
sub
into
cmp
jne
mov
or
cltd
in
fldenv
cli
aas
push
and
fwait
or
push
rol
pop
jp
and
scas
scas
jbe
mov
stc
sbb
lret
pushf
out
icebp
xchg
fisubrs
dec
dec
xchg
add
sub
mov
cmc
cmpsl
push
mov
sub
push
in
xor
mov
fwait
push
mov
int
cmpsl
sar
arpl
into
push
ret
rcl
call
ficoms
movsl
cmc
push
cltd
aaa
jg
xor
mov
mov
testb
xor
adcl
mov
xor
imull
ss
jg
cmpsl
shrb
fnstcw
pop
pop
subl
ja
es
popf
scas
jbe
repnz
inc
lea
ds
fadds
jmp
orb
xchg
fcmovu
test
icebp
repz
xchg
cli
stos
ret
inc
or
xchg
xor
jo
out
frstor
xchg
xchg
xchg
sbb
icebp
cmp
into
out
gs
jnp
loopne
fstpl
cmp
jno
inc
outsb
pop
jge
notl
out
push
mov
mov
add
push
and
ret
push
fwait
out
and
cld
jle
test
dec
jnp
insl
jno
stc
testl
push
cmp
xchg
int
or
idivb
cmp
mov
add
dec
not
xor
cltd
pop
outsl
fldt
lahf
icebp
and
cld
inc
insl
loop
push
fiadds
and
repnz
sahf
sbb
gs
shr
mov
sahf
xor
in
inc
push
ljmp
mov
adc
jge
enter
ljmp
icebp
add
repnz
jns
pop
jbe
xchg
adc
xor
cmpsl
pop
mov
arpl
jb
stos
xor
cs
scas
push
ljmp
xor
int3
and
pop
outsb
leave
pop
sarl
jmp
cmp
hlt
jno
inc
jno
or
mov
jl
leave
cli
scas
sbb
xchg
sar
inc
xor
pop
add
repnz
dec
mov
lods
cmp
and
popf
xchg
mov
adc
push
inc
xchg
adc
inc
jmp
lahf
fisttps
mov
aas
mov
icebp
outsb
hlt
dec
mov
cmpsl
pop
add
dec
cli
and
dec
push
sbb
push
mov
add
movsb
pop
jge
js
xchg
std
sub
fstpt
pop
mov
pop
mov
add
repz
add
push
imul
js
xor
adc
mov
rorl
add
pop
loopne
sahf
dec
in
ficompl
lds
xor
cmp
dec
loop
pop
adc
out
lcall
pusha
inc
in
inc
adc
cmp
cmp
ljmp
pop
fidivrl
ret
or
push
add
jge
outsl
notb
push
cmp
pop
mov
dec
loopne
out
jge
inc
mov
mov
mov
xchg
daa
cli
sbb
mov
pop
mov
daa
push
addl
xchg
add
jg
sub
sbb
arpl
push
jecxz
insb
pop
push
cmpsl
fisubl
icebp
jmp
xor
pop
cmpsb
cmp
movsb
data16
or
pop
mov
shll
cmc
outsb
ja
lcall
stos
mov
out
decl
movsb
fwait
cmp
push
or
scas
scas
fbld
jo
mov
inc
pop
xor
jmp
decb
repz
jne
in
and
sub
mov
mov
pop
rclb
mov
pop
add
push
addb
je
ds
pop
sbb
adc
subb
test
xchg
sbb
mov
jmp
mov
in
cli
lret
cmpsl
pop
mulb
lods
mov
popf
es
cmp
mov
pop
cld
adc
sbb
pop
cli
push
cld
icebp
xchg
test
mov
andl
leave
in
out
mov
je
cmc
cmc
ljmp
xchg
mull
mov
push
pop
pop
and
movd
aaa
idiv
int
jmp
scas
and
movsb
mov
cs
inc
or
add
cmp
inc
es
and
in
mov
mov
stos
cmp
inc
divl
pushl
pushf
notl
es
inc
sub
push
sbb
ds
ss
dec
jg
sub
popf
and
push
inc
mov
sub
out
fwait
mov
mov
pop
stc
jmp
ja
aas
mov
out
ds
sbb
iret
dec
rcr
sbb
cmpsl
inc
cs
jns
jmp
fists
add
data16
jns
xchg
cmc
cmc
sub
inc
jg
aad
cmp
sahf
js
xchg
mov
jmp
mov
loopnew
lahf
arpl
in
sub
add
mov
sbb
mov
fcompl
ja
jne
inc
out
push
icebp
out
jl
mov
out
scas
cmpsb
movsb
cmp
aaa
sti
lods
mov
fdivl
pushf
cs
pop
lahf
inc
xor
mov
icebp
imul
jnp
cmpsl
adc
mov
xchg
lret
sub
mov
jbe
push
or
add
mov
mov
test
pop
lock
icebp
inc
xlat
loop
inc
out
aaa
out
or
ret
xchg
hlt
jne
inc
dec
call
sbb
out
mov
push
test
lahf
out
scas
sbb
mov
pop
repz
lea
jg
jnp
lds
mov
fs
movb
and
cmc
push
adc
lcall
dec
cmp
mov
imul
lock
pandn
movsl
int3
or
xorb
test
mov
mov
xor
rcrb
repnz
or
xor
stos
ss
and
aad
add
clc
dec
inc
std
or
inc
ret
sti
pusha
sub
mov
es
jae
and
sbb
inc
fs
jecxz
aas
popa
cmpsl
and
lahf
jmp
mov
pop
pop
rcl
stc
pcmpeqw
fistpll
push
shll
into
sub
insl
dec
dec
push
ss
pause
sbb
pop
std
lds
repnz
std
gs
in
inc
aad
push
inc
adc
cmp
cmp
pop
jge
incb
jecxz
inc
shl
in
loope
cmp
jecxz
mov
jbe
mov
movsl
test
sbb
mov
repz
in
clc
xadd
or
std
pusha
ret
test
push
and
aam
sahf
adc
push
mov
outsb
push
in
pusha
push
jmp
fnop
into
call
sbb
stc
je
lahf
pushf
adc
sti
insl
int
mov
xlat
sub
xchg
cld
arpl
add
mov
inc
mov
ficomps
pop
xchg
jge
stos
std
mov
add
imul
fistps
push
ja
xor
and
cmpsb
sbb
mov
and
scas
and
movl
test
ficompl
mov
repz
xor
sti
lds
stos
push
daa
loopne
cmp
push
sti
xchg
sti
scas
xchg
test
push
out
outsb
mov
repz
push
jb
iret
movsl
jecxz
int
push
push
jnp
mov
lods
jg
adc
dec
dec
frstor
mov
mov
add
add
cli
fs
mov
jmp
pusha
insb
lods
jns
pop
vmwrite
and
pusha
mov
aas
mov
pop
lret
popf
in
scas
aas
gs
loopne
scas
fimull
dec
ja
mov
repnz
aad
or
es
cmp
adc
sbb
fucomip
sub
dec
mov
test
xor
push
lcall
push
mov
or
aaa
daa
xorl
xor
inc
cmp
xor
jge
sub
jns
xorl
les
out
jb
jge
mov
aad
dec
repnz
xchg
stc
addr16
rorb
xchg
cmp
jno
pop
dec
rorl
xchg
ret
ja
or
dec
js
clc
sbb
mov
push
repz
mov
push
mov
push
mov
ficoms
cmp
fistpl
push
enter
jb
into
and
inc
bound
lret
jg
div
cmp
mov
mov
test
xor
cmpsl
fsubp
or
sti
jmp
jecxz
xor
out
inc
pop
adc
add
insb
mov
int3
push
in
add
mov
arpl
or
lock
adc
xchg
shlb
cmp
push
push
mov
or
ss
push
mov
ja
mov
sbb
lds
jae
xor
dec
filds
lods
ja
adc
xor
cmc
gs
jge
push
sbb
addl
ficomps
decl
cmp
stos
jns
adc
aas
fucomip
sub
xor
mov
push
pop
pminub
fsub
pop
call
mov
push
mov
sti
das
filds
es
mov
mov
in
xor
jge
fs
fnstcw
bound
push
push
mull
scas
fxtract
xchg
xor
cltd
hlt
mov
sti
push
mov
outsl
jge
shlb
xchg
sarb
mov
mov
mov
je
pop
sarl
pop
out
ss
lahf
in
adc
rcrl
mov
imul
test
std
lds
dec
es
push
iret
aas
lock
call
mov
mov
in
jp
addr16
xchg
xchg
cmp
and
cmp
cmpsb
icebp
loopne
push
jmp
stos
mov
xchg
dec
or
xlat
sbb
pushf
out
mov
scas
sub
scas
je
leave
andb
int
sahf
das
out
jnp
lods
dec
ja
or
sub
cmc
add
pop
inc
mov
movsb
loop
les
addl
add
out
das
rclb
in
in
fmull
rorb
pop
mov
jnp
int
cmp
pop
repnz
cmc
mov
into
mov
xor
jge
icebp
mov
cli
pop
es
xchg
xchg
faddl
xor
mov
mov
jmp
or
jo
repz
popa
fsubs
data16
xchg
mov
repz
jg
pop
hlt
xor
push
cmpsb
mov
fmuls
movsl
xor
lods
jge
xchg
jnp
aaa
pop
movsb
in
xchg
pop
jae
fldcw
mull
jle
xlat
les
xor
repz
shll
scas
mov
xor
sbb
jl
cli
mov
xchg
clc
fstpl
cli
or
scas
data16
cmpsl
xchg
inc
cwtl
jle
cmp
dec
pop
mov
pop
nop
sub
out
pusha
mov
adc
add
imul
mov
stos
imul
jl
adc
shlb
jbe
and
jp
sub
inc
add
sti
sub
insb
cmp
add
jae
fwait
pop
ljmp
callw
and
jp
jmp
pusha
jg
cmpsb
insl
fldcw
xchg
enter
pop
std
inc
inc
mov
or
andl
sub
and
daa
dec
or
sbb
sahf
scas
push
xchg
mov
or
xor
push
sbb
cli
inc
and
movsb
xchg
dec
fadds
mull
mov
jl
and
jae
mov
sub
into
out
insb
jle
bound
pop
jmp
push
lret
lcall
fwait
xchg
or
cld
in
mov
cmp
xor
xchg
aaa
std
mov
xor
cmp
call
jo
mov
data16
das
mov
xor
or
fs
lock
push
add
popa
sbb
dec
sbb
hlt
gs
inc
xor
pop
out
imul
cmc
cli
sub
xor
std
mov
mov
mov
sub
mov
mov
inc
mov
mov
adc
xchg
les
hlt
pop
outsl
pop
data16
push
pushf
movsl
dec
and
sbb
jp
lods
daa
pusha
lret
dec
and
stos
dec
jae
das
jle
sbb
rorl
mov
dec
ds
dec
jnp
cmpsl
cmp
data16
leave
movsl
jmp
mov
sbb
jge
dec
call
and
cld
jno
iret
xchg
pop
fdivl
sarl
jecxz
xor
mov
fsubr
mov
cmc
icebp
dec
sub
mov
jg
sbb
iret
xor
jmp
lret
es
sahf
out
pop
imul
les
in
mov
push
mov
scas
xchg
and
inc
cmpsl
dec
icebp
std
add
xchg
inc
ud1
popa
enter
and
or
mov
iret
fstpl
pop
out
mov
lock
mov
or
stc
xchg
pop
pop
jnp
pusha
stos
or
mov
and
sbb
cli
push
pop
mov
xchg
gs
inc
jle
fstpt
cmpsb
push
outsb
ljmp
popa
cmp
ja
dec
inc
scas
shl
pop
jge
fwait
icebp
or
test
dec
jns
dec
add
mov
jno
js
lret
jl
push
fstpt
iret
add
enter
cmpsb
lret
jbe
xor
mov
fisubs
xchg
lret
pop
ret
fildll
mov
pop
mov
pop
orl
loope
adc
repz
jge
sti
xchg
stc
gs
or
push
stos
sahf
clc
lea
cmc
cmp
pop
pop
outsb
incl
jmp
dec
add
cmp
and
push
xchg
jne
es
outsl
decb
push
dec
cmp
xchg
xor
stos
into
mulb
add
jp
ficoml
add
rclb
mov
xor
mov
mov
fstp
push
push
out
call
mov
repz
aas
roll
sbb
mov
pop
pop
cmpsl
movb
in
jge
sub
adc
jle
cmp
out
outsl
xchg
cld
cmp
stc
rclb
cld
xchg
cli
push
jns
mov
cmp
pop
mov
fs
sbb
and
scas
arpl
pop
jnp
sub
popa
fnstsw
mov
stos
loope
dec
adc
xchg
test
pop
in
inc
xor
rcll
mov
std
dec
shufps
inc
pushf
por
xlat
or
jo
mov
mov
in
imull
pop
inc
push
dec
and
std
hlt
add
pop
mov
lea
loopne
mov
fstpt
call
push
xor
in
mov
in
insl
jg
jno
xchg
or
sbb
out
js
insl
lahf
jmp
inc
es
mov
addr16
test
sub
fists
mov
inc
rcrb
in
outsl
jl
into
and
mov
cli
mov
jp
fnstenv
int
mov
or
add
ljmp
mov
scas
xor
lret
leave
out
bnd
jl
xchg
clc
sub
adc
scas
addr16
mov
cmp
xchg
jmp
xor
mov
cmpsl
push
push
rcll
mov
in
outsb
dec
popf
outsl
mov
pop
jno
fwait
xchg
pop
pop
stos
push
dec
fisttps
dec
xchg
push
addr16
mov
dec
imulb
icebp
sbb
lods
mov
xchg
jno
mov
popa
cmp
in
in
lds
xlat
lods
mov
out
call
aas
psrlw
fidivrs
movups
pop
lods
and
jno
mov
test
addr16
jmp
adc
or
adc
push
cmp
mov
fsubrl
or
xchg
mov
fbstp
and
adc
out
adc
lock
push
push
dec
out
fimull
and
shr
int
xcrypt-ofb
cmpsl
out
bound
popa
sbb
cltd
cmp
outsb
lock
jnp
push
aad
inc
jb
pop
sti
mov
aaa
jle
insl
loop
test
xor
fdivrs
jmp
dec
mov
sub
push
push
mov
in
aas
outsl
jno
fisubs
xchg
sub
mov
xchg
call
mov
pop
cmp
jmp
lea
mov
jg
sbb
lods
fists
push
loope
jne
push
ja
imul
sbb
pushl
pushl
ds
mov
cli
push
in
rolb
out
xchg
sahf
imul
mov
aam
es
lret
mov
int3
incb
xchg
cmp
mov
xchg
in
ja
sbb
jnp
enter
push
jb
cmc
xor
ds
into
xor
es
out
rolb
cmc
xchg
sbb
push
jno
sbb
out
fdivs
cmp
outsl
mov
add
cmpsl
popf
fiadds
xlat
jmp
sbb
inc
xor
int3
pop
jnp
inc
or
lahf
lea
ljmp
mov
in
mov
out
fdivl
negb
push
lds
test
push
ja
jb
mov
idiv
inc
dec
scas
mov
inc
xlat
push
mov
insl
pusha
je
cmp
leave
push
cmpsl
sbb
add
or
in
in
add
ja
lahf
sub
aas
jecxz
pop
aaa
cmp
dec
cmp
sbb
mov
je
mov
push
pop
cmp
xchg
jmp
xchg
adc
mov
mov
sub
in
push
cmp
and
iret
mov
arpl
adc
mov
pop
mov
pop
out
and
in
add
cmp
out
rclb
ja
sbb
adc
in
ret
mov
cmc
mov
inc
mov
ficoms
arpl
jl
popa
call
popf
add
fwait
mov
out
cmp
or
repz
iret
dec
fsubl
cwtl
jns
xor
fwait
push
push
shl
xchg
fwait
inc
cmp
pusha
jns
mov
lret
adc
inc
int
cmp
repz
out
cmp
fyl2xp1
mov
cmp
sub
out
popf
aas
pop
cmp
cltd
fcomi
mov
test
mov
popf
jae
cmp
repz
aaa
mov
pop
or
lds
iret
out
cld
push
fwait
cmp
cmpsb
jle
gs
insb
in
ja
aam
ja
mov
in
in
jl
push
test
add
popf
popf
or
repz
dec
and
cmp
jns
mov
mov
pop
shlb
push
ja
push
xor
cld
pop
ljmp
jl
ss
dec
iret
inc
cld
or
cltd
out
mov
dec
leave
rolb
lock
sbb
pop
sbb
cld
mov
mov
jmp
sbb
xchg
shrb
into
int3
daa
adc
or
ljmp
pop
aas
fstps
cwtl
divl
sti
xor
push
sub
add
dec
adc
data16
shrl
adc
repnz
dec
jns
lret
push
shlb
jnp
adc
cmp
add
ret
push
mov
icebp
mov
ret
cmpsb
hlt
fidivrl
mov
addb
dec
push
fmuls
jae
mov
sahf
adc
outsl
movsl
repz
insb
popa
pop
int
mov
jp
stc
fistl
stos
sbbb
into
call
cmp
lahf
mov
or
std
or
pop
xchg
mov
test
pusha
into
ljmp
out
je
das
imulb
aas
in
cli
loopne
call
add
inc
xchg
popa
cli
add
int
sub
jg
aaa
lods
pop
ja
sbb
bound
adc
push
out
in
out
dec
mov
add
clc
cmpl
ss
stos
mov
cmp
sub
xchg
int
and
lahf
jp
jge
pop
imul
xor
shlb
mov
hlt
in
sti
shlb
sub
xchg
lret
das
fucomp
cmp
jle
testl
or
lea
cmpsl
mov
lcall
xchg
mov
xor
or
inc
xchg
repnz
testl
les
mov
int
lds
mov
fistps
mov
sub
cmp
in
jge
sti
and
jnp
jg
ljmp
cmp
adc
xchg
addr16
push
fcompl
push
push
ljmp
or
int
in
test
outsb
cmp
mov
xor
push
hlt
add
in
inc
ss
dec
adc
loop
inc
xor
in
xor
fnstsw
and
ret
lds
mov
cmpsb
stc
pop
aad
mov
xor
xor
mov
out
fsubrs
push
jne
mov
mov
rcr
in
ss
out
movsl
dec
sti
in
sub
jle
push
idivl
jne
jle
ljmp
inc
mov
jns
int
test
mov
jmp
and
adc
fistps
stos
and
loop
sti
mov
pop
jecxz
sub
and
mov
divb
mov
je
shlb
fisubs
sbb
in
jg
xlat
mov
aam
fistpll
popf
inc
jmp
ss
fdiv
loopne
jb
out
out
ljmp
aad
jle
mov
fcomp
adc
sub
cmp
cmp
or
pushf
ret
cmp
cs
stc
pushf
or
mov
aad
pop
shll
push
jbe
lret
out
call
imul
pop
in
fdivs
sub
push
mov
adc
mov
int3
in
out
pop
push
pop
clc
pushf
inc
add
or
stos
dec
fmull
sahf
cmp
push
lds
daa
mov
cmc
mov
sub
lret
push
lret
jns
aas
xchg
repz
ljmp
pop
xchg
inc
mov
jno
push
movsl
notl
add
cld
dec
sub
dec
in
gs
aaa
fisttpl
mov
jecxz
sbb
jg
dec
iret
or
shlb
outsl
lods
jmp
ja
fidivrl
xchg
push
sti
add
repz
icebp
mulb
idivl
pop
mov
in
xor
push
jle
xchg
pop
pop
subb
lea
pop
outsb
dec
ja
rol
fnsave
cwtl
lods
and
mov
bound
clc
enter
inc
decl
xchg
push
fistl
into
ja
xchg
ja
int
pushf
mov
pop
jmp
sub
or
sbb
add
xlat
push
stos
sub
outsl
push
pop
mov
sub
mov
pop
aaa
fsts
xlat
arpl
push
jbe
dec
lahf
fwait
xchg
mov
loop
repz
mov
cmp
xor
out
dec
in
repnz
sub
outsb
dec
pusha
adc
add
adcb
shlb
pop
sub
dec
push
movsb
ja
ljmp
fsubs
mov
test
add
imul
sahf
or
lds
cwtl
mov
sub
jmp
mov
adc
mov
xor
inc
pop
lock
pop
lret
inc
fistpll
test
jb
sarl
jo
lods
ss
mov
mov
pop
cwtl
fsubrp
repnz
jnp
orb
mov
repnz
mov
mov
repz
pop
stos
icebp
or
clc
cmp
cmp
ret
sti
movsb
push
cli
insb
scas
or
cmc
mov
test
nop
sub
cltd
ds
stc
mov
mov
sahf
mov
std
mov
jbe
ficomps
pop
pop
cmpsb
adc
push
adc
push
sub
mov
xor
jne
lods
xor
ds
dec
or
adc
mov
or
xor
mov
xchg
push
push
inc
inc
movsl
lods
xchg
add
fcomps
std
sti
mov
jns
mov
out
out
xchg
out
into
xlat
lahf
add
and
push
xor
jno
mov
add
sub
orb
lret
notb
mov
clc
addr16
add
ja
xor
mov
mov
aas
mov
jae
mov
stos
jg
imul
and
jmp
push
fidivl
jo
lahf
mov
xor
out
xorl
movsl
out
dec
std
jmp
jb
add
les
divb
test
shlb
dec
xor
pop
rorl
pop
inc
dec
loop,pt
fs
mov
bound
test
fwait
ds
mov
sti
imul
pushl
mov
jecxz
lret
mov
enter
data16
pop
aam
xor
push
pushf
xchg
mov
xlat
jae
hlt
sub
mov
icebp
fildll
cli
call
or
add
jno
insb
pop
mov
push
and
pop
cmc
sub
in
sub
xchg
xlat
mov
cmpsl
sbb
xor
mov
dec
cmc
adc
insl
mov
insb
je
pop
test
jecxz
lock
jmp
mov
dec
pop
mov
sub
popa
rol
add
movsl
fisubrl
aam
jl
pop
lock
je
push
jns
out
insb
aas
js
cmp
sbb
pop
lcall
lock
cltd
hlt
lahf
sub
scas
inc
int
lods
sbb
pop
push
lahf
data16
emms
arpl
jbe
and
fisttps
jg
inc
and
jmp
out
fcmovb
pusha
and
and
and
cli
xchg
or
xor
mov
or
lods
pushf
adc
lahf
cltd
aaa
shl
xchg
jbe,pt
or
xor
sbb
in
int3
mov
dec
daa
int3
popf
ret
stos
daa
dec
jae
xchg
clc
lcall
sub
dec
mov
push
add
add
in
mov
fcoms
dec
push
dec
push
stos
dec
sbb
shl
mov
jecxz
push
in
mov
adc
or
je
out
pop
mov
cmpsb
xchg
cmc
or
movsl
dec
pop
cld
stos
nop
sub
out
fnsave
sub
mov
imul
xlat
jae
xorl
fbld
push
pop
adc
outsl
lods
sub
ja
sub
lcall
lea
inc
mov
xor
hlt
shll
stc
lahf
in
xchg
adc
enter
in
dec
inc
mov
push
or
ds
cmp
xor
add
ja
jnp
xchg
repnz
adc
xchg
test
ficomps
lret
push
rorb
push
shrl
jne
out
xchg
xchg
sbb
dec
repnz
test
mov
lods
cmp
outsb
push
insl
or
lods
cmp
sbb
sbb
mov
subb
in
cmc
fbstp
std
adc
bound
mov
mov
mov
mov
fadds
cmp
sub
sbbl
arpl
insb
lret
xor
js
std
shl
mov
aad
insb
push
inc
jl
push
les
sub
iret
ds
inc
mov
adc
xchg
dec
adc
adc
jb
imul
mov
imul
and
data16
popa
outsb
repnz
and
hlt
add
pop
adc
mov
hlt
add
cmp
daa
mov
pop
jno
loop
mov
cmp
dec
add
cld
ret
xor
mov
repnz
inc
sbb
push
inc
add
mov
mov
xchg
outsl
mov
sub
mov
pop
pop
inc
aad
bnd
insb
inc
push
push
add
idivl
mov
xor
hlt
js
mov
jl
jae
loope
or
cmp
inc
in
ret
rcr
mov
cs
cli
add
jno
mov
in
jle
fdivs
fnstsw
insl
popf
adc
dec
dec
mov
iret
in
push
nop
shr
adc
push
jp
dec
cmp
add
mov
lods
and
mov
jge
xchg
jbe
test
cmp
ss
inc
and
mov
aaa
iret
pop
pop
test
mov
adc
rolb
loop
lds
cmp
std
loop
cld
and
push
mov
adc
jns
jmp
mov
test
xlat
out
aas
loop
push
scas
inc
gs
gs
pushf
cltd
aaa
xchg
pop
fisubrl
data16
or
sub
repz
decl
add
add
ret
out
jg
push
xchg
les
mov
sub
xchg
pcmpgtb
pop
xor
sub
jne
pop
push
icebp
mov
mov
test
sbb
sahf
cmc
hlt
inc
aad
adcb
mov
les
push
push
push
xchg
imul
rcrb
insl
push
ds
push
ret
call
sub
cli
adc
nop
stc
imul
jl
aam
cmp
popf
filds
scas
fisttpll
out
inc
dec
lcall
or
and
scas
jle
sub
xorb
dec
and
gs
fldcw
outsb
pop
in
shufps
sbb
nop
mov
mov
clc
mov
inc
and
xchg
fdivp
sbbb
inc
ss
scas
lea
imul
js
pop
jnp
sbb
push
stc
pop
hlt
cmp
out
pop
pop
dec
aaa
mov
addr16
cmp
insb
std
xchg
ret
sbb
fldl
outsb
cmpsb
aad
fildl
xchg
xchg
clc
push
cwtl
ror
dec
subb
xor
int
das
decb
cmp
fimull
pop
leave
mov
ret
mov
lock
dec
and
dec
dec
sbb
mov
loopne
hlt
mov
arpl
cmp
addl
cmp
mov
ret
fnstsw
popa
xchg
out
mov
sub
fisttpl
rcr
cmc
cs
and
add
iret
adc
les
cmp
pop
cmpsb
jg
icebp
std
lds
repnz
and
jle
test
ds
dec
ds
fstps
mov
jg
push
mov
in
hlt
jge
dec
sti
mov
sbb
cmp
inc
icebp
outsb
movsb
mov
mov
rcr
pop
lcall
cmc
cmp
ja
push
adc
xor
dec
mov
mov
xor
cld
pop
adc
loop
jno
mov
sahf
jbe
cli
sbb
mov
jbe
imul
cltd
mov
insl
adc
mov
and
xchg
cld
inc
ss
and
lock
xor
mov
cmpsl
or
xor
pop
into
mov
lods
mov
push
scas
sub
cli
mov
jg
pop
pop
sbb
mov
lcall
xor
stos
or
int
xchg
pop
ljmpw
push
pop
jb
pusha
jnp
sarb
inc
outsl
stc
jge
mov
jmp
scas
pop
pop
idivb
das
int
popf
jp
int
cmp
add
mov
lock
ss
dec
sbb
pop
and
stos
push
out
push
add
sbbl
push
jl
int3
inc
xlat
movsb
mov
clc
mov
sti
aad
bnd
and
imulb
or
nop
cltd
ja
lods
outsl
fsts
imul
dec
sub
dec
fdivl
inc
icebp
adc
icebp
mov
jne
sbb
aaa
in
cld
cld
add
neg
dec
test
pop
mov
pop
adc
xlat
and
xchg
bound
jno
enter
mov
and
jb
mov
mov
mov
push
jns
jae
mov
mov
xchg
pop
mov
xor
imulb
mov
fnstenv
sti
inc
push
ss
mov
lock
jecxz
mov
mov
xchg
roll
jns
mov
cmp
ja
pop
jns
les
jb
xchg
lret
sub
gs
push
fwait
into
jmp
imul
adc
movsl
cmc
jmp
lahf
nop
pop
hlt
sbb
mov
imul
rolb
out
jp
push
xor
scas
das
mov
sub
sub
and
xchg
icebp
jecxz
in
push
sbb
stos
out
cmpsb
add
ljmp
sub
xchg
mov
call
pop
movl
divb
mov
mov
jl
xchg
sub
jo
pop
xchg
das
sahf
test
pop
outsl
in
std
push
jo
fs
stc
pusha
decb
rcrl
in
mov
push
push
mov
shlb
adc
mov
roll
mov
pop
bound
into
pop
jmp
xchg
or
cmp
mov
sbb
sub
gs
lea
and
in
in
mov
ds
mov
in
cmpsb
add
jae
jecxz
dec
mov
sti
test
incl
imul
dec
lret
or
loop
repz
mov
es
test
jle
ficoms
into
es
push
iret
fisttpll
icebp
sub
pushf
push
fwait
insl
cld
jmp
insb
adc
push
arpl
insb
or
ds
xchg
push
or
sub
jge
inc
testl
and
mov
push
les
inc
loope
push
jge
sbb
lods
add
popa
aaa
mov
lcall
fmul
ss
mov
cld
lret
jecxz
dec
cld
lret
cmp
dec
lcall
ja
dec
repnz
inc
popa
fiaddl
mov
fbstp
in
push
outsl
sbb
lods
jecxz
or
jmp
mov
js
idivl
add
mov
inc
jg
jge
das
out
mov
ret
push
cmp
jns
jno
add
in
mov
inc
jnp
nop
fcomp
push
jmp
dec
lret
rorb
std
sub
lods
sub
push
lock
out
mov
lcall
sahf
cs
cli
into
jge
push
mov
jno
es
sub
cmp
jle
cld
fcos
and
shlb
dec
add
lahf
aad
cld
mov
push
jg
xchg
inc
sahf
mov
jo
ret
inc
cmc
repnz
in
jmp
ja
shll
fs
cli
inc
cmp
pusha
mov
mov
out
out
popf
xor
push
ficompl
xor
outsb
sub
int
and
xchg
iret
cmp
into
push
jmp
in
in
mov
jno
fwait
sbb
scas
jne
mov
out
dec
rol
dec
and
aas
or
push
das
pop
jae
test
ja
movsb
mov
fdivs
addr16
mov
in
and
cmp
ds
adc
movsl
or
pop
push
pop
pop
notl
imull
push
mov
xchg
in
pop
push
and
dec
adc
xor
jb
orl
fildl
pop
mull
fldenv
je
xchg
xchg
dec
sarb
xchg
adc
fidivrl
cmpsb
xlat
xlat
pop
and
scas
bound
xor
lcall
iret
jnp
pop
xchg
mov
adc
sti
int3
xchg
out
adc
cmpsl
scas
add
bound
repz
lahf
out
test
cmpsl
mov
out
dec
dec
sbb
cltd
fcmovb
xorl
adc
in
mov
mov
pop
sbb
mov
pop
pand
xchg
pop
push
out
fidivl
flds
adc
and
fsubs
pop
xchg
dec
ds
push
mov
insb
inc
lahf
std
shrb
arpl
fadds
repz
pop
ljmp
pusha
mov
xchg
push
loop
stos
mov
std
or
cld
leave
icebp
mov
jnp
aaa
dec
mov
inc
xlat
scas
dec
jmp
xor
hlt
pop
icebp
decl
shl
arpl
add
aaa
xchg
fstp
pop
pop
les
in
enter
add
pop
mov
or
js
jle
imul
nop
xor
pusha
ds
mov
mov
inc
adc
cmp
jg
push
cmc
std
mov
lea
hlt
pop
fdivrs
fisubl
dec
movsb
dec
in
outsl
xor
sbb
insl
cli
mov
push
mov
xchg
fnstcw
add
stc
lock
or
dec
in
sub
jle
ds
cmp
jge
inc
int3
sarb
pop
adc
rol
sub
jo
jne
xchg
out
aaa
inc
mov
int3
pop
sub
insb
icebp
pop
jno
push
add
xor
out
dec
mov
out
sbb
fldenv
iret
pop
and
add
fcmovnbe
testb
popa
stc
cmc
jb
fldenv
out
mov
jae
outsl
rcrl
pop
pop
std
test
jmp
fldlg2
or
dec
cmpsl
push
es
add
repz
sahf
pop
push
push
mov
in
sbb
fstpt
jns
lahf
es
outsl
pop
into
pop
mov
jl
outsl
sahf
rcl
jns
pop
cmp
cmp
fists
std
repnz
dec
repz
pop
stos
aad
pop
das
lahf
data16
jmp
repz
pop
out
data16
dec
mov
jb
mov
mov
add
inc
in
bound
icebp
popf
jg
pop
mov
aad
mov
rorb
pmullw
pop
jb
std
icebp
or
jnp
paddusw
shrl
add
loope
pusha
lret
out
inc
add
fsubs
repnz
scas
mov
call
sbb
jns
int
fs
cmpsl
lret
xchg
jmp
sbb
leave
lods
test
inc
adc
enter
and
test
and
jg
cld
je
xchg
sti
icebp
scas
jno
jne
out
jb
je
mov
mov
fbstp
insb
sahf
mov
ds
pushf
mov
sub
xor
mov
inc
ret
out
popa
scas
lcall
mov
jg
rclb
je
sbb
cmp
pop
fsub
pusha
xor
jne
mov
fildl
jae
push
or
pusha
mov
or
scas
outsl
fistpll
mov
shl
pop
jl
call
stos
adc
lcall
mov
out
sti
mov
inc
cwtl
aas
mov
imul
mov
mov
inc
rcrl
in
add
pop
pop
dec
lahf
shll
cmp
sbb
sbb
insl
test
mov
outsb
sbb
add
pop
clc
lcall
push
and
xor
jne,pn
icebp
jb
mov
sbb
mov
pop
subb
mov
and
sbb
fldcw
dec
loope
imul
mov
mov
stos
lds
mov
les
push
jmp
lret
scas
in
xor
dec
aad
xrelease
imul
or
daa
adc
dec
jnp
jne
clc
mov
sarb
scas
lock
cmp
mov
ss
int
inc
adc
pop
rclb
insb
jae
cli
push
add
xchg
pusha
inc
cmc
mov
int3
mov
icebp
jae
gs
les
xor
cmp
adc
xor
add
adcl
lahf
lahf
jne
jns
outsb
cmc
mov
pop
fcoml
mov
fucomi
xlat
divb
dec
sbb
das
daa
iret
xchg
mov
mov
pop
jnp
popf
inc
ds
in
pop
fldcw
pop
out
xor
jne
pop
inc
mov
mov
scas
mov
sub
scas
mov
in
sahf
shrb
cltd
jb
inc
lahf
pop
jnp
into
call
fcmovnbe
sub
clc
and
out
repnz
scas
in
fisttps
adc
shl
sub
jno
icebp
lea
leavew
rcll
mov
leave
lock
xchg
mov
mov
pop
leave
cld
out
clc
in
mov
in
sbb
into
iret
mov
in
iret
outsl
divb
les
test
pop
xlat
mov
cmp
cmc
in
movsb
frstpm(287
inc
sub
rcrl
movsb
std
in
mov
pop
mov
mov
movsl
ljmp
cmp
rcl
or
mov
ljmp
mov
in
jns
hlt
pop
je
mov
loop
fisubrl
cmp
in
out
je
mov
loope
pop
and
or
sub
cmp
sahf
adc
add
iret
or
das
or
push
enter
xor
xor
call
aam
in
xlat
popa
jno
insb
jb
xor
out
or
fistpll
mov
ss
inc
in
dec
fwait
sub
repz
jbe
outsl
cmp
fistl
xchg
add
xchg
enter
cmp
mov
sub
pop
ret
inc
fldcw
mov
xor
iret
xorw
fiaddl
sub
cmpl
jmp
jnp
ret
cmp
out
mov
daa
aad
insl
out
and
inc
pop
loop
cmp
jbe
gs
lods
xchg
pop
sub
rep
jg
loop
adc
or
push
out
lahf
or
sti
cmp
stos
shl
cmpsb
mov
ja
hlt
movsb
mov
pop
mov
dec
xor
repnz
loope
push
pusha
pop
addr16
in
ja
testb
jne
and
push
test
ja
xor
leave
and
pop
cld
es
aaa
jae
mov
aaa
loope
or
int3
push
pop
mov
sti
mov
ds
iret
push
push
cmp
inc
lret
adc
sti
shr
lret
and
test
stos
pop
cmp
xor
mov
scas
add
sar
fwait
push
dec
out
xor
xchg
stos
pop
out
repnz
out
and
dec
lock
out
cld
fidivs
adc
ret
pusha
mov
out
xor
push
cwtl
mov
popa
pop
outsb
cltd
xor
test
or
daa
fsubr
out
or
inc
loopne
les
pusha
or
and
aaa
sbb
inc
push
into
mov
cli
xchg
gs
out
jge
and
in
stc
in
pop
jo
cmp
sbb
ljmp
mov
xlat
jge
cmp
data16
pop
dec
dec
jns
arpl
stc
je
fwait
mov
loop
pop
xlat
pusha
pop
sti
fnstcw
pop
test
cmpsb
add
js
in
outsb
cmp
cmc
cmp
jns
adc
std
decl
shlb
add
pop
mov
and
fisubrl
stc
inc
jl
std
mov
mov
rcll
scas
xor
pop
jmp
mov
mov
dec
imul
cs
adc
nop
ficompl
or
mov
pop
roll
leave
add
cwtl
push
pop
add
sbb
xor
fs
push
mov
pusha
loope
mov
mov
push
cmp
push
xchg
pop
adc
ret
adc
test
je
dec
iret
outsl
xor
cli
jecxz
rclb
pop
or
into
adc
push
div
test
pop
add
mov
rcll
push
jge
icebp
xlat
cmp
rol
pop
cltd
pop
scas
movsl
inc
mov
push
in
and
mov
xchg
popa
sbb
into
xor
mov
in
iret
sbb
cmp
cmp
xchg
sbb
cmp
lods
cmp
cmc
mov
sbb
sub
rcr
cmp
test
repz
inc
sbb
std
cmpsb
jbe
fstpt
scas
jo
hlt
addr16
movsl
jp
cmp
xor
int3
test
cmp
std
iret
pop
sbb
cmc
cmp
and
inc
pop
out
mov
outsb
mov
je
in
pop
inc
loopne
cmp
loope
aas
jo
and
mov
ljmp
insl
cmp
sub
push
iret
mov
adc
mov
in
or
sbb
mov
ret
aaa
out
sarl
mov
stc
ljmp
stos
push
into
sahf
mov
aaa
out
fwait
repz
push
aad
cmp
pop
loopne
pop
mov
jae
push
psubb
je
jnp
loopne
cmp
pop
cmpsb
xor
dec
jecxz
fisttpl
lcall
mov
fs
sahf
insb
add
cltd
aad
xchg
adc
stc
loop
cmp
in
sbb
stc
rolb
xor
fwait
imul
xor
out
pop
fiaddl
cwtl
cmp
aad
outsl
cld
data16
stc
mov
xor
pushl
sti
ja
iret
mov
lods
mov
sub
stos
sti
xchg
int
mov
fisubrs
and
stos
add
adc
pushl
fwait
mov
mov
mov
push
mov
push
push
rcrl
ss
in
int
mov
cwtl
xor
leave
sbb
mov
xchg
in
mov
lods
es
xchg
out
jle
jbe
add
sub
stos
call
xor
scas
outsb
mov
fwait
mov
push
les
sbb
ljmp
lahf
icebp
jge
cltd
sti
cmp
rclb
in
sub
sbb
sub
das
fcoml
out
ja
shll
in
xchg
inc
xlat
es
gs
test
bound
add
jmp
mov
jp
cmp
mov
cld
jle
popl
xchg
stos
out
loope
jne
and
lea
and
dec
dec
shll
mov
shll
and
fistps
mov
stc
popa
ret
repnz
xor
xor
movsb
and
lock
movsb
test
and
mov
mov
test
dec
cmp
cli
add
loopne
in
std
cwtl
xchg
push
into
fildl
in
shrb
popa
leave
adc
cwtl
mov
lahf
imull
mov
inc
cltd
js
sbb
inc
es
repnz
xor
sbb
jnp
imul
mov
mov
ss
sub
xor
nop
ja
cli
sbb
sub
or
hlt
adc
mov
push
lods
fistpl
mov
mov
fdivl
adc
ret
xorl
push
stos
sarb
adc
push
xchg
ljmp
push
jecxz
popa
imul
push
pcmpgtd
jnp
push
push
adc
out
xor
out
xchg
mov
sbb
cmpsb
bound
decb
std
jno
incb
sahf
pinsrw
fcoml
insl
mov
test
jmp
add
mov
xchg
sahf
mov
jle
shlb
fucomi
stos
xor
das
mov
fwait
insl
inc
inc
stos
shrl
nop
filds
mov
cmp
and
xchg
cmpsl
mov
dec
and
or
ja
mov
mov
aad
ds
mov
sbb
dec
rorl
mov
mov
insb
cli
push
mov
shll
das
sarl
jbe
adc
push
jae
out
test
sbb
mov
out
lods
paddsb
mov
cmp
jecxz
pusha
mov
hlt
mov
push
fidivl
sbb
notl
cmp
dec
push
icebp
btc
jbe
ficoms
pop
adc
pop
push
movsl
cli
push
out
adc
xchg
movsl
loopne
and
jmp
call
int
jno
sub
fstpt
add
ret
je
sarl
popa
jg
int
scas
std
shll
and
xor
lea
pop
dec
mov
out
jmp
jae
sti
xchg
push
es
pusha
cmp
int
in
stos
loop
pop
fsubs
jg
testl
dec
sbb
outsb
lods
jl
xlat
pop
aad
decl
cmp
jo
jp
call
mov
mov
stc
or
pop
xor
aas
mov
loop
fstpl
arpl
xor
xchg
sub
loopne
cld
xchg
pushf
mov
loope
or
mov
rcrb
sbbl
fs
xchg
jg
and
push
fcmovnbe
pop
imul
icebp
aaa
sahf
aad
loope
aaa
mov
pushf
jp
pop
cs
out
inc
cld
push
jp
dec
and
popa
scas
jo
push
loop
pusha
pop
sti
add
mov
out
je
xor
bound
adc
sbb
inc
adc
mov
leave
fiadds
push
push
leave
mov
and
pop
xor
hlt
mov
fidivs
cld
insl
pop
mov
pop
cmpsb
add
or
dec
enter
in
lds
jnp
cmp
inc
out
inc
stc
fimuls
adc
nop
and
stos
sub
nop
icebp
mov
movsl
scas
mov
leave
sub
fs
out
cltd
ss
mov
sbb
sti
mov
aad
cmc
daa
cmpsl
hlt
sarb
dec
mov
cwtl
cmp
xchg
hlt
fsubs
mov
mov
mov
lahf
inc
shl
test
test
cltd
sub
fistps
scas
enter
sub
pop
xchg
cmp
jge
xor
ds
loop
jbe
inc
mov
gs
xchg
dec
push
sub
ja
adc
pop
daa
xor
cwtl
mov
sahf
dec
es
ret
repnz
add
inc
test
sbb
scas
pop
push
in
repz
insl
push
ret
jno
pop
ret
rcll
mov
push
enter
aaa
fwait
into
xor
push
sub
pushf
ja
arpl
ret
sbb
insl
repnz
xchg
inc
fidivrs
cmpsb
xchg
rcrb
mov
fstpl
fstp
es
leave
imul
outsb
test
mov
outsb
aam
dec
mov
gs
mov
test
push
xor
repnz
pushf
push
stos
ljmp
dec
xchg
pop
rcl
rcrb
divb
arpl
add
pop
push
cmc
stos
jo
xor
mov
cltd
inc
fidivl
push
hlt
dec
mov
lahf
das
ss
push
inc
mov
jle
ja
mov
outsl
and
out
pop
testb
jo
lahf
add
mov
push
movsb
push
cli
mov
gs
lds
ljmp
scas
and
cmp
push
lret
nop
pmaxub
mov
gs
sahf
pop
push
movzbl
repnz
out
ss
arpl
dec
int
movsb
out
fsqrt
lret
jbe
pop
sbb
and
out
into
stos
mov
test
jae
pop
out
test
es
mov
jb
pop
and
fcoms
xlat
fsubl
not
iret
lahf
jmp
fidivl
inc
lods
pusha
arpl
mov
fdivl
push
adc
pop
cmp
and
in
push
and
stos
jg
sub
fisubl
fcomps
fisubrs
cltd
cli
mov
sti
in
pop
inc
andl
out
cmpl
lods
jo
fld
cwtl
daa
xor
lcall
ds
loope
jo
dec
push
jns
push
fmuls
pop
fs
pop
xchg
mov
or
popa
dec
cmc
cmp
ljmp
adc
fisubl
pusha
mov
adc
push
sbb
loop
int
inc
dec
or
out
pop
or
mov
sahf
aad
mov
sahf
jecxz
div
lcall
hlt
cmpsb
lret
rorb
popf
in
push
outsb
sub
pop
in
leave
dec
lret
sub
cmpsb
dec
ret
scas
outsb
mov
fldl
ljmp
or
sti
outsb
fldcw
repz
add
popf
sub
fsubrp
aas
mov
push
and
mov
mov
aad
mov
inc
mov
or
xchg
add
aad
xchg
stos
repz
rclb
clc
enter
fwait
xor
test
pop
popf
mov
dec
mov
sbb
sub
in
jnp
sub
cld
cwtl
xchg
sbb
stos
sahf
inc
dec
ss
push
pushf
xchg
and
pop
inc
dec
pusha
mov
xchg
push
jae
pushf
lret
imul
mov
push
outsl
mov
jno
shlb
push
push
mov
lcall
clc
dec
pop
jge
jb
push
inc
pop
adc
mov
sbb
and
js
adc
sub
negl
notl
or
pop
pop
daa
lds
int
fmul
cmp
add
adc
adc
out
adc
push
out
sbb
orb
jl
dec
repz
xchg
popf
push
jl
fmuls
loop
icebp
jl
ss
imul
js
adc
movsl
dec
out
push
int
enter
jb
mov
test
inc
xchg
cmp
dec
movb
sub
add
in
mov
add
push
imul
dec
into
shrl
shl
add
cmp
adc
xor
mov
stos
in
loopne
sahf
adc
mov
push
sahf
test
mov
lcall
xchg
call
inc
addl
cmp
xchg
add
adc
xchg
fwait
mov
neg
sub
scas
mov
add
scas
and
imul
lret
sbb
int
enter
inc
orl
push
dec
daa
push
ljmp
push
or
cmp
outsl
mov
and
in
mov
and
mov
cmp
dec
cmp
xchg
outsl
mov
ds
sbb
dec
xchg
cmpw
iret
or
into
rcrl
adc
jbe
rolb
sub
mov
pop
mov
pop
int3
sahf
sti
fs
sti
daa
jb
pop
ljmp
jb
mov
inc
xchg
cld
sbb
cmp
inc
jl
loop
inc
cmp
sub
push
xor
fdivp
or
icebp
mov
xchg
cmpsl
cmc
jp
sahf
jbe
mov
xlat
imul
mov
mov
fists
addr16
lret
lock
pop
gs
adc
xchg
aad
mov
adc
cltd
outsb
mov
fdivrs
mov
mov
test
sti
mov
push
dec
test
xor
push
sub
inc
push
dec
pop
inc
pop
rorl
mov
out
ret
insb
loopne
ds
int3
sti
pop
and
cmp
push
mov
sbb
scas
mov
in
call
pop
cmpsl
test
xchg
add
xlat
fcoml
push
cmc
and
jg
mov
pop
gs
dec
repnz
mov
dec
cld
add
pushf
sub
das
or
loop
mov
xchg
push
push
push
sub
lar
jae
add
mov
adc
lock
inc
fstps
popa
addr16
sbb
jg
or
lds
mov
repnz
push
fwait
test
int3
and
cmpsl
cwtl
jno
xchg
pop
cld
fwait
xor
add
lcall
lahf
ret
dec
adc
add
aad
ret
jg
gs
je
insb
push
in
imul
hlt
test
and
aad
or
ret
shlb
xor
adc
mov
xchg
imul
sti
mov
mov
mov
imul
ret
fildl
cmp
mov
cmp
fsubl
jae
cmp
int
or
jmp
or
pop
jecxz
aaa
fbstp
fisubl
pushf
clc
out
test
sti
out
mov
mov
mov
clc
inc
aaa
jmp
rorb
mov
insl
push
pop
or
testl
adc
jo
pop
sarb
js
and
js
jbe
or
mov
test
cmp
fistps
mov
push
outsb
nop
shrl
jb
iret
sub
popf
aaa
cwtl
push
push
insb
ja
pop
adc
gs
das
xor
out
aas
fbld
repz
mov
push
ficoms
outsb
inc
testl
mov
pushl
inc
pop
out
jns
mov
pop
sahf
aas
fs
adcl
cli
push
push
pop
mov
push
icebp
sbb
pusha
lcall
sbb
jl
outsb
mov
mov
fs
xchg
inc
aad
call
cs
dec
imul
xlat
push
add
fs
push
int3
add
push
push
xchg
es
xor
cmp
lcall
cmp
idiv
or
test
pop
or
mov
sbb
or
lods
cmpsb
dec
pop
dec
sub
push
mov
std
mov
loope
adc
mov
addr16
cmpsb
fstps
imull
testb
nop
pusha
or
mov
clc
and
daa
dec
sbb
xor
shl
mov
push
jg
pop
cld
jecxz
cld
jo
mov
out
mov
xchg
repnz
std
inc
sti
cmp
mov
icebp
mov
data16
dec
in
xchg
push
jmp
mov
cmp
pop
jp
cmp
mov
shll
arpl
lret
out
sub
out
mov
and
mov
sti
fdivl
negb
out
pop
popf
je
jge
call
jb
lods
ss
dec
mov
dec
imul
ja
add
pop
cmp
arpl
mov
xchg
sub
fimuls
scas
sub
std
aaa
outsl
jge
mov
lods
cmp
add
mov
sahf
mov
sbb
std
push
jmp
sub
iret
popf
or
test
ss
clc
cmpsl
arpl
mov
lret
and
xchg
sti
pushf
addr16
inc
aas
in
xchg
int3
in
clc
push
icebp
pop
mov
test
and
mov
cli
loop
dec
test
sarl
xor
lahf
jae
ja
imul
repnz
mov
cmpsl
outsb
lret
cmp
cmp
daa
cld
xor
mov
xchg
xchg
xchg
lock
mov
adc
mov
stc
testb
stc
lcall
cmp
or
subb
mov
push
stc
push
ja
sbb
popa
loope
ret
adc
add
ja
xchg
iret
mov
insb
jle
jmp
das
mov
std
mov
sbb
or
sahf
jo
outsl
mov
shll
mov
sbb
jle
or
cmp
test
test
cmp
sbb
and
rol
js
cwtl
sub
lea
fmull
arpl
addr16
xorl
pop
xchg
je
arpl
in
shlb
ret
lret
pop
frstor
mov
sbb
xchg
xlat
cmp
jb
cmp
mov
lret
lret
test
fcomps
ret
sub
movsb
sbb
rcll
out
ret
fdivl
mov
es
sbb
dec
aas
jns
inc
decl
idivl
cli
cmpsb
orb
shrb
test
xor
xchg
jge
dec
inc
fnstenv
pop
pop
lods
cmpsb
mov
add
pop
cmp
movsl
into
sbb
pusha
cwtl
fidivrl
popa
mov
cld
lea
lods
mov
das
pusha
lret
into
sti
ja
mov
std
inc
outsb
scas
inc
call
repnz
call
jge
insl
push
dec
outsb
mov
xor
jle
ds
loop
sbb
cli
or
xchg
dec
jmp
jne
lods
jg
mov
jbe
cld
std
stos
mov
popf
mov
mov
xlat
outsl
jmp
or
mov
out
int
lock
or
or
mov
jle
lcall
xchg
out
repz
or
pop
xlat
jbe
ja
rorl
inc
pop
icebp
xor
pop
fstps
mov
jmp
cwtl
mov
dec
loope
into
std
cmpsb
pop
arpl
sbb
mov
pop
adc
lock
and
push
xchg
inc
mov
xor
pushf
pop
repnz
inc
loop
and
push
test
test
out
inc
mov
sub
loope
jb
mov
mov
cwtl
rclb
aad
mov
dec
xchg
pop
xchg
jne
push
dec
xchg
call
push
pop
rolb
scas
jl
mov
jle
xchg
jle
aas
or
jp
aas
movsb
je
cmp
inc
ss
lea
les
jl
xor
adc
mov
sbb
cmc
out
xchg
imulb
sbb
scas
add
out
mov
inc
lods
mov
jge
mov
cli
mov
jg
rcl
std
adc
push
movsl
cld
jp
push
data16
rcll
ds
inc
push
addr16
jnp
mov
add
rcl
ljmp
shrb
je
insl
stc
jnp
inc
cmp
cmp
test
notl
ds
push
ljmp
iret
jbe
sub
fidivrl
mov
data16
sahf
in
test
dec
divl
inc
addr16
sub
test
test
fstpt
pop
xor
cmp
xor
ffree
into
sbb
jo
or
mov
xor
cld
jecxz
xchg
and
xchg
outsl
adcl
inc
stos
jmp
push
das
inc
in
sub
test
repz
rcll
loop
out
mov
std
xchg
sub
test
pop
xchg
lret
push
out
xchg
bound
clc
inc
mov
xor
out
xchg
mov
jnp
es
dec
testl
add
cmc
xchg
in
mov
pop
fistps
sub
fbld
mov
jnp
imul
sahf
cld
mov
fldenv
xor
mov
dec
outsl
dec
cmp
xor
clc
rcr
cmp
jnp
jns
sahf
jnp
imul
dec
js
sahf
icebp
or
repnz
fstpt
js
in
in
mov
cmpsl
mov
dec
xchg
xor
jg
jge
std
mov
push
scas
repnz
ret
fstl
cmpb
pop
scas
lahf
pop
adc
pusha
aam
movsb
ds
sbb
push
mov
xlat
mov
popf
inc
sub
bound
push
mov
das
mov
jno
outsl
out
push
testb
sub
mov
xchg
jo
pop
and
lret
jnp
daa
nop
lock
cmp
sub
ret
jg,pt
pop
push
jbe
cmp
into
sti
add
aad
push
mov
cmp
cs
in
jle
or
lret
cli
loop
jno
fs
xchg
mov
pop
jbe
iret
or
sbb
movsb
inc
jno
or
ret
xchg
cli
mov
cmp
pushf
das
out
xchg
pop
ret
xchg
add
cmpsl
push
imul
call
ds
addr16
pop
dec
outsl
stos
or
push
cltd
addr16
sahf
sub
mov
cltd
loop
cmpl
sub
and
jnp
add
sub
dec
ds
fisubs
pop
in
mov
push
scas
push
or
push
adc
mov
insb
xchg
nopl
adc
sbb
cmp
push
aaa
pop
jge
mov
mov
sbb
div
int
in
pop
lcall
xchg
xchg
testl
aas
aam
cmc
mov
ss
mov
repnz
dec
inc
jne
outsl
cmc
xor
pushf
pop
inc
jmp
mov
push
mov
jnp
dec
cmp
mov
aad
jbe
aad
jle
push
sahf
testb
cld
sahf
arpl
mov
inc
hlt
rep
cmp
push
fdivrl
push
mov
out
pop
jne
movsb
jnp
cltd
pop
mov
and
adc
ja
clc
push
sbb
push
pop
mov
out
repz
out
mov
fidivl
lods
pop
and
repnz
jne
insb
push
or
lret
mov
cs
jl
or
sub
mov
enter
ret
cwtl
xchg
ljmp
clc
aaa
lahf
xchg
mov
add
pop
enter
cmpsb
ja
outsb
loopne
xor
xchg
mov
xchg
jo
mov
movsl
insl
cmp
icebp
ret
mov
test
imul
jecxz
in
mov
stos
out
ja
mov
lock
pop
mov
es
out
push
lds
popa
dec
mov
cmp
repnz
icebp
mov
or
daa
sti
mov
inc
jns
ja
cmp
mov
js
pop
ret
mov
xchg
xor
js
mov
into
xchg
adc
lahf
mov
ret
fiadds
leave
sahf
cld
js
bnd
push
mov
xor
push
aas
jno
inc
scas
loop
push
and
fwait
inc
xchg
out
sbb
repz
dec
jns
jno
jbe
jo
pop
cmp
cmc
xor
js
out
lahf
dec
es
inc
sbb
ja
pop
sub
lods
rcrb
aam
fwait
arpl
and
insb
pop
adc
dec
xchg
sbb
jg
xchg
mov
shll
and
stos
hlt
fs
cmpsb
xchg
fidivl
pop
mov
out
jge
imull
out
loop
notb
mov
ss
xor
push
pop
cmp
in
hlt
je
mov
loop
push
pop
out
cltd
adc
or
lret
xchg
addr16
ja
fldt
sahf
sub
xchg
jmp
repnz
jne
xchg
iret
jl
xchg
jns
push
movntq
xchg
jmp
data16
and
or
lock
stc
addr16
les
mov
mov
mov
pop
jg
jle
jp
shrb
aaa
cltd
arpl
in
into
call
sarl
jle
xor
push
fdivs
daa
ds
mov
outsl
negl
dec
dec
cltd
pop
jmp
cmp
mov
cli
cmp
sbb
stos
in
xor
mov
dec
or
lahf
dec
xchg
in
ret
dec
int
movsb
xor
pop
adcb
mov
orb
popa
mov
mov
notb
mov
int
mov
xchg
pop
pushf
pop
mov
jae
fcmovu
cmc
mov
mov
xlat
mov
pop
jnp
inc
flds
cmp
jae
lods
jno
xchg
int3
dec
dec
inc
lea
out
or
in
lods
ja
pushf
jne
push
fmuls
shll
sahf
loopne
cmp
mov
int
xchg
sbb
jae
jp
mov
cmpsb
push
gs
outsb
cmpsl
jo
jge
hlt
int3
stos
cwtl
out
push
lret
jmp
hlt
aad
je
pusha
xchg
mov
scas
xor
jecxz
pop
rorl
mov
cmp
or
or
insl
mov
sub
cmpsb
xchg
push
mov
sti
sbb
repnz
fisttps
dec
out
iret
jg
fwait
std
push
aaa
aas
jno
loopne
jl
dec
sbb
push
xchg
mov
stos
dec
xor
jge
sub
or
popf
xor
sbb
or
rcr
sti
adc
rorl
inc
arpl
stos
rcll
ja
stos
js
xor
cmp
stc
and
rcr
shl
pop
in
pcmpeqd
daa
xor
fdivrp
fbstp
rorb
and
imulb
mov
int
push
testl
test
lret
cld
or
insb
fldl
clc
insl
lea
insl
inc
aas
adc
jge
scas
sbb
or
test
pop
movsl
and
xchg
ret
shlb
cwtl
xor
mov
pop
orb
imul
mov
movsb
popa
jl
mov
daa
dec
int3
pop
ja
pop
js
call
enter
cmpsl
loop
into
mov
push
xorl
push
iret
shr
orl
mov
inc
push
and
dec
test
ss
arpl
pop
cmp
mov
in
pop
iret
jne
and
xchg
movsb
notl
cmpsb
push
mov
addr16
jbe
rclb
sub
mov
int3
cli
pop
xchg
sbb
loop
int
fiaddl
sbb
xchg
fcoml
in
and
shrb
mov
popf
inc
jp
repnz
pop
aaa
mov
outsl
sbb
cld
hlt
enter
pop
cmpsb
out
data16
cmp
arpl
dec
lret
pop
fsubrs
push
xchg
push
cld
push
adc
loopne
aas
mov
out
mov
es
pop
test
sub
icebp
push
cmpsl
xchg
sub
mov
inc
cmc
mov
inc
stc
jle
aam
lret
jns
enter
cmp
mov
and
mov
cmp
data16
xor
sarb
push
jmp
mov
xchg
ja
inc
mov
fnsave
dec
cmc
cmp
mov
or
jne
or
jmp
popf
mov
fwait
imul
jp
aaa
xor
mov
or
cld
sub
arpl
or
mov
outsl
add
sbb
or
jo
xchg
adc
mov
popa
mov
outsl
or
js
sbb
or
cwtl
mov
mov
movsb
pop
cli
xchg
aad
fxam
or
rcrb
lock
sti
jmp
gs
testb
inc
add
fwait
dec
ret
adc
mov
jecxz
cs
mov
xor
or
les
inc
xchg
in
nop
dec
je
dec
push
cli
jmp
lods
jle
cmp
jb
sub
inc
cld
mov
pop
scas
sbb
or
xor
pushf
xor
mov
ss
ret
xchg
es
dec
lcall
test
aad
leave
stc
dec
jbe
jg
mov
mov
in
cmp
negl
mov
movsb
sbb
xor
dec
mov
xchg
ror
push
call
xor
movsb
rorl
ror
cli
adc
jl
sub
mov
pop
bound
push
add
xchg
movsl
xchg
enter
sbb
sub
daa
push
jo
sub
jge
int3
mov
adc
and
push
or
leave
mov
jecxz
xchg
cmp
jbe
int3
ljmp
lods
lea
xchg
push
pushf
xchg
das
out
mov
jl
mov
clc
jns
popf
out
iret
jge
iret
sahf
jnp
mov
imul
xor
mov
popf
inc
dec
rcr
outsl
frstor
and
mov
call
push
adcl
xor
addr16
icebp
xchg
fs
popa
xor
adc
andb
std
mov
enter
mov
dec
sarb
inc
xor
xor
xchg
pop
shrl
repz
push
out
jae
jle
inc
cwtl
call
lahf
sub
aaa
icebp
pop
xor
cld
inc
mov
stc
fisttpll
lock
fcmovnbe
mov
inc
mov
mov
arpl
mov
mov
test
push
or
cmp
add
into
or
xor
mov
std
roll
ret
jg
xchg
mov
lock
rorl
aaa
out
jl,pn
dec
mov
ret
fiadds
mov
in
imul
inc
mov
mov
andl
lods
mov
sti
insl
lret
push
mov
aas
aas
cwtl
sub
adc
loopne
popf
jo
push
sub
in
jmp
out
cmp
pushf
push
shll
lcall
sbb
aaa
push
inc
add
jo
int3
pop
iret
cmp
scas
sbb
lds
addr16
and
cmc
and
out
adc
sahf
jle
inc
repz
inc
mov
inc
sbb
fst
or
add
addr16
lahf
mov
sub
cmp
add
ss
je
mov
mov
out
test
jae
sbb
popf
mov
or
insb
push
nop
mov
arpl
mov
jnp
repnz
inc
jp
ljmp
cmp
addr16
ja
push
lods
dec
jp
sub
cmp
ja
nop
mov
gs
rcrb
popf
sbb
sbb
sbb
mov
mov
mov
rcrl
mov
fdivrs
inc
xchg
fistpl
decl
jne
mov
sbb
sarb
les
vdivps
mov
add
mov
fmul
rolb
rol
jge
pushf
sbb
xchg
mov
pop
lods
bound
fstpt
jbe
fstpt
sbb
xchg
addr16
iret
cmp
prefetchw
hlt
jg
and
fs
push
push
cmp
xor
enter
lds
push
inc
push
push
mov
enter
jae
sub
jle
or
int
arpl
ficoms
jge
aaa
mov
mov
mov
adc
sahf
jne
xchg
cmp
pop
shl
jecxz
cmp
int
xor
fstl
adc
dec
js
jns
loop
or
xchg
xchg
mov
mov
mov
addr16
add
aaa
inc
inc
inc
mov
ja
into
das
mov
xchg
rep
mov
mov
pop
mov
int3
dec
push
ret
dec
lsl
in
xor
sti
cmp
decl
out
movsb
rcrl
mov
jo
jg
ss
push
in
xchg
jecxz
sbb
iret
dec
repz
cwtl
mov
icebp
jbe
sub
xchg
std
sti
jb
std
push
xchg
pop
aas
aas
sbb
aad
repz
push
ds
push
in
xchg
cltd
jle
mov
mov
movhps
pop
std
mov
arpl
add
addl
bound
fnstcw
jecxz
cmp
loop
jmp
xchg
jbe
cmp
xlat
inc
sahf
ds
lds
jl
std
es
enter
xchg
fxtract
imul
aam
es
cmp
xor
icebp
cld
fists
inc
pop
cmc
lahf
fbld
inc
mov
or
and
jp
mov
jnp
loop
fists
icebp
je
mov
icebp
jmp
fdivrp
jae
std
icebp
cmp
mov
lret
decb
clc
std
sti
fldcw
cmpsb
aaa
addr16
sbb
push
pushf
mov
pop
inc
or
sub
fisttps
add
sbb
js
mov
leave
leave
js
imul
daa
ds
jae
in
and
adc
cltd
inc
testb
repz
sub
test
cmp
inc
jae
sbb
pop
and
push
inc
jge
repz
int
dec
bound
mov
lea
sti
lahf
lds
inc
mov
xchg
loope
inc
out
rolb
jbe
pop
mov
mov
cmp
ds
divb
mov
sarl
xor
jo,pn
popf
fsubrs
popf
xchg
jecxz
jae
xorb
icebp
xchg
sbb
lods
dec
stos
icebp
inc
in
fnstcw
repz
sti
lret
js,pt
lahf
ljmp
outsl
mov
push
imul
xor
cltd
enter
aaa
fwait
dec
outsl
push
decl
or
arpl
adc
and
in
in
outsb
jo
sub
mov
add
dec
loopne
jg
scas
ljmp
jle
mov
jno
jecxz
jmp
pop
sub
pop
xor
hlt
jb
cmp
push
push
push
push
cmp
clc
ret
das
mov
out
lcall
filds
mov
xor
out
xchg
sbb
fwait
jmp
sti
pop
push
dec
cmpsl
adc
jge
iret
sarb
pop
inc
mov
fistpll
pop
cmpsb
lret
pop
push
cmc
adc
insb
mov
outsl
pop
aas
addr16
cmpsl
push
mov
scas
mov
lahf
loop
or
mov
push
push
and
dec
inc
push
ret
cwtl
loope
ffreep
inc
lahf
imul
jecxz,pt
sub
or
xchg
push
pop
lcall
iret
push
fcmovb
iret
ss
cmp
jp
adcb
lods
cmp
mov
andb
inc
movsb
push
xor
mov
repnz
adc
jp
mov
fcoms
push
jns
mov
fsubl
or
cmp
lods
lock
clc
fs
in
in
jae
inc
or
cmpsl
ja
lock
dec
out
pop
aas
hlt
inc
out
outsl
call
dec
add
mov
out
cmp
sub
push
pop
sbb
jb
mov
mov
xor
xor
mov
fstl
scas
pop
mov
mov
pop
sbb
cwtl
push
push
loopne
icebp
add
dec
lods
es
popf
mov
daa
add
dec
cs
cld
cmp
or
loope
jmp
xor
mov
or
sbb
xchg
lret
mov
out
mov
mov
pop
sti
jmp
pand
sbb
inc
and
das
fiaddl
fidivrs
mov
fstl
push
outsl
mov
aaa
int3
and
out
shrl
fbstp
fld
nop
ljmp
repz
out
inc
aaa
pop
push
mov
sahf
xchg
repz
je
cld
and
shlb
out
jle
testb
mov
out
inc
mov
mov
jmp
mov
fsubr
mov
mov
dec
jo
lcall
clc
mov
rorl
lea
cld
outsl
xor
sti
ficomps
imul
in
mov
fidivs
mov
lcall
push
and
pop
pop
ficoms
pop
fsubr
jg
js
mul
mov
insl
addr16
jg
jbe
sbb
decl
ja
lret
push
cmp
frstor
pop
jle
sub
ja
dec
push
ret
lret
sbb
pop
cmp
clc
out
adc
rcrl
and
leave
pop
dec
push
push
cmpsl
cmp
jbe
dec
out
jb
mov
notb
mov
test
and
sarb
lods
popf
rcrb
jne
add
cmp
js
arpl
lea
jb
xlat
sbb
add
je
cwtl
loope
js
push
cli
jmp
mov
loope
repnz
into
jg
xor
les
popf
xchg
mov
lds
jl
mov
fnsave
cs
lahf
and
mov
cld
scas
xor
in
lock
xor
jl
mov
pop
and
int
fistpl
std
orb
ds
call
ss
sub
jb
bound
pop
xlat
pop
push
imull
int
popf
push
cmpsl
jl
sahf
cld
push
jp
mov
lock
addr16
pop
adc
addr16
outsl
test
xchg
jg
xchg
aas
bound
cmp
repz
push
sar
lahf
ljmp
hlt
cmp
lahf
mov
pop
inc
adc
jg
fdivs
pushf
pop
xor
ss
into
or
jecxz
out
lahf
movl
loopne
sahf
outsb
push
insb
aam
pop
mov
pop
repnz
out
out
dec
iret
in
fidivl
and
and
or
xlat
xchg
popf
push
pop
and
xor
jae
sbb
cmp
inc
cmp
sbb
or
lret
jg
xchg
mov
mov
jnp
mul
ds
jecxz
insl
imul
dec
dec
rcrb
shlb
iret
jp
movsb
repnz
aad
xor
cmc
push
mov
icebp
out
lds
xchg
fsubl
sub
std
cmpsb
sbb
pand
mov
mov
pop
jne
js
fsubrs
xor
pop
sarl
add
clc
cmp
out
jb
jae
sbb
mov
xor
xchg
and
daa
sbbl
and
fdivl
pop
std
xchg
sbb
lock
jmp
nop
pop
repz
out
cs
sbb
bound
jg
inc
das
xchg
fwait
pop
outsb
into
mov
pusha
sub
rorb
loope
stc
xor
adc
enter
cltd
les
sub
xor
cmp
lock
stos
add
ds
ds
fcmovnb
mov
jmp
mov
sbb
ja
iret
loopne
cmp
test
mov
das
xor
cmc
pop
cmc
fstpl
mov
inc
outsl
jno
test
cmp
mov
mov
stos
mov
lea
rol
mov
mov
je
dec
xor
testl
jl
imul
sarl
mov
lret
pop
loopne
je
mov
mov
sti
addr16
cmp
shlb
lcall
xchg
mov
cwtl
hlt
icebp
jmp
jae
adc
lcall
fmull
data16
add
imul
pop
rcrl
jl
mov
and
scas
addr16
cmpsl
push
leave
pop
mov
int
dec
ret
xchg
stos
imulb
jge
or
cmc
sahf
std
cmp
sbb
xchg
hlt
loop
sub
push
ret
out
nop
scas
imul
cmpsl
clc
icebp
clc
jnp
das
jecxz
cmp
pop
mov
sti
mov
pop
gs
les
imul
outsb
incb
adc
push
repz
ljmp
int3
mov
xor
test
mov
ljmp
call
sub
rclb
and
icebp
test
inc
mov
add
mov
xchg
in
add
push
cmp
push
jnp
jne
mov
cld
adc
or
in
jp
stos
addr16
push
jae
out
incl
mov
and
push
inc
pop
pushf
cmp
pop
mov
jns
inc
sbbb
loop
push
out
dec
xchg
lahf
insb
fildll
loop
rorl
lock
and
nop
cmpl
sub
int3
push
jns
dec
scas
in
insl
jns
pop
bound
mov
mov
xor
push
int
jecxz
sbb
fsub
dec
sahf
inc
test
jb
jo
sbb
xor
leave
push
pop
add
and
pop
push
mov
shl
cmc
js
stos
sub
and
in
cmpsb
stos
mov
sub
ss
iret
arpl
mov
call
fidivrl
int3
ror
mov
cltd
xchg
stos
out
insl
cmc
lret
mov
xchg
xchg
fs
adc
xor
push
sub
mov
icebp
pop
or
subl
dec
pop
sub
pop
outsb
rorb
cmc
decl
cbtw
fidivl
lret
call
xchg
ljmp
daa
aaa
ss
iret
and
jbe
xor
repnz
mov
lods
pop
mov
xor
aam
pop
push
sub
fldcw
sbb
mov
test
sub
dec
lcall
inc
inc
mov
mov
je
jge
stos
aas
incb
mov
pop
jecxz
fadd
lret
dec
or
rol
sub
daa
sar
adcl
fwait
imull
jg
inc
out
xor
push
out
or
jns
aaa
cmp
in
cmpsl
or
std
mov
and
setno
jnp
pushf
cmpsb
jae
lret
mov
pusha
cwtl
cltd
xchg
lret
into
shl
int3
cltd
mov
shll
leave
and
shl
mov
mov
adcb
scas
subl
add
cli
jno
push
sbb
and
in
jae
enter
cli
cmp
mov
pop
stos
shll
sbbb
mov
cmp
adc
int3
inc
dec
movsb
xchg
adc
fsubrl
cmpsl
mov
jb
mov
sub
or
adc
shlb
decl
leave
push
hlt
imul
test
xchg
and
out
scas
xchg
scas
mov
daa
aam
js
mov
and
mov
fwait
aad
xchg
mov
test
in
scas
scas
inc
aam
push
add
inc
push
cmc
or
sarl
jnp
rcll
cltd
in
test
inc
popf
lret
stos
repz
sub
jne
gs
jge
ret
data16
cmpsl
xchg
dec
movsb
fdivl
mov
sbb
sub
jno
out
jle
lods
sub
jno
popa
jno
push
mov
fs
xor
fs
mov
and
push
aaa
sub
mov
scas
stos
fldenv
test
xor
js
xlat
xchg
push
push
sbb
cmp
xor
stos
lret
repz
pusha
lods
ret
sbb
push
mov
ret
xor
and
leave
call
adc
mov
data16
or
arpl
addr16
pop
popf
mov
pop
gs
push
sub
jge
movsl
pop
xchg
test
dec
sbb
mov
fnstsw
aad
cmc
repnz
xor
jns
aaa
inc
int
xor
push
pop
loopne
lret
addr16
aas
outsb
iret
in
mov
or
sub
aad
sub
scas
or
stc
mov
divb
popf
call
dec
loope
in
in
cmpsb
and
adc
loope
repz
out
mov
pop
xor
jmp
mov
xor
addl
cwtl
dec
loop
push
lods
xchg
jle
stos
pop
adc
pop
ret
push
rorl
mov
fidivrl
mov
outsb
xor
aaa
or
cwtl
ret
cmp
pop
mov
aam
xlat
stc
insl
shrl
data16
dec
out
and
ja
sbb
setb
addr16
test
mov
xchg
pop
inc
jle
fxch
ficoms
loop
lods
xchg
mov
fwait
bound
fstps
sbb
loopne
add
lahf
fwait
xchg
sbbb
dec
xlat
fldcw
jno,pt
jl
xchg
outsl
ja
cld
notb
mov
ret
cmp
scas
dec
sub
jno
stc
push
scas
mov
pop
sub
jg
inc
dec
dec
cmpsb
lahf
loope
dec
lea
testl
inc
pop
and
pop
daa
jno
dec
add
nop
jns
enter
inc
jp
push
jo
stos
add
cmc
adc
mov
lahf
stos
aad
jnp
jne
das
xor
cld
mov
xchg
mov
xchg
push
inc
sub
dec
add
icebp
fwait
cmc
in
add
aaa
jmp
or
xor
mov
fistps
mov
mov
repnz
dec
xor
aaa
jnp
xchg
lods
arpl
shlb
jno
mov
mov
js
pmullw
cli
adc
xor
push
pop
pop
repnz
or
cmp
pop
pop
sahf
mov
shr
add
shlb
sub
nop
out
imul
gs
movsb
jns
or
cltd
push
inc
bnd
xor
lods
idivb
dec
sub
out
cmp
scas
hlt
inc
mov
inc
imul
mov
sbb
in
inc
xchg
mov
cmpsl
inc
push
out
cmp
dec
cli
sbb
xchg
adc
lahf
mov
scas
cli
rcrl
das
xor
stos
imull
nop
pop
mov
and
movsl
loop
out
stos
ja
fstpt
test
mov
lret
addr16
or
ror
lea
scas
or
mov
push
xchg
mulb
fwait
mov
sub
idivb
jbe
insb
ss
mov
xor
push
push
cmpsl
nop
dec
aas
bound
mov
lret
iret
cmc
ljmp
push
or
insb
outsl
popa
cmpsb
daa
inc
mov
inc
fnstsw
and
repnz
pop
arpl
lods
fstl
add
enter
icebp
clc
lret
lods
mov
mov
std
and
sub
cltd
push
xor
inc
test
subl
lods
push
jl
mov
cmpsb
out
shr
int
jmp
shlb
lock
mov
ss
inc
in
mov
jnp
leave
lods
fmul
dec
jge
jno
sub
stc
jns
mov
aas
sbb
ds
stc
gs
push
shrl
adc
push
jecxz
clc
inc
mov
fs
and
cmc
js
fwait
sub
add
xchg
out
cs
repz
mov
jg
push
scas
shr
std
and
negb
nop
inc
stc
dec
roll
lock
push
mov
cmp
sbb
jns
push
outsb
pop
mov
xchg
mov
xor
lret
in
sbb
test
fstpt
ret
cld
xor
pop
in
in
and
idiv
mov
push
xor
jle
jmp
mov
out
cmp
dec
test
fsts
jge
xchg
and
mov
lret
outsl
scas
insl
xchg
inc
pop
or
cmpsb
out
adc
fcmove
jno
mov
jmp
cmp
mov
int3
mov
jae
cmp
inc
push
add
xor
adc
pop
mov
xor
pop
arpl
jae
mov
mov
add
or
dec
push
add
cs
sahf
lret
push
sub
popf
das
inc
push
mov
lret
ss
sti
sub
das
dec
pushf
cmc
das
mov
std
mov
mov
jmp
insl
clc
arpl
insb
cld
das
dec
das
jg
mov
mov
repz
adc
lret
jmp
popa
xor
mov
popa
ror
movsl
sti
fisubl
mov
xchg
ror
mov
mov
mov
icebp
lcall
mulps
pop
lret
push
sahf
shl
ffree
lret
imul
iret
mov
jo
push
mov
in
and
cs
push
push
sbb
dec
cli
xor
jbe
push
aaa
xor
push
xchg
dec
inc
lods
inc
mov
lcall
test
fidivrs
xchg
push
push
test
sbb
sahf
mov
mov
add
dec
popa
lret
jns
int3
out
pop
xor
xchg
mov
push
add
pop
xor
lret
icebp
leave
xlat
clc
cltd
mov
add
jbe
stos
dec
les
adc
xor
loop
cmc
mov
insb
mov
sbb
sbbl
nop
pop
test
ss
repnz
mov
sbb
rorl
adc
into
out
std
xchg
cmpsl
sti
addr16
and
fcomi
in
fidivs
bound
imul
into
pusha
add
rcrl
ljmp
cmp
fbstp
ds
and
bnd
ja
ret
fidivrl
jp
xor
fsts
and
repz
lods
std
and
push
pop
scas
scas
fcoms
leave
fidivl
mov
int
loop
xchg
icebp
xor
jbe
push
je
ds
pop
jge
icebp
and
lods
inc
jmp
fidivl
push
je
iret
div
or
mov
stc
mov
cld
sub
arpl
cmp
mov
jae
call
fdivr
add
hlt
faddl
dec
push
fmull
sarb
and
dec
adc
xchg
test
mov
in
sub
stos
pop
inc
jg
gs
stos
mov
or
subl
daa
lea
insb
aad
in
push
call
fistl
cs
xor
call
imull
and
ficoms
int3
jns
xchg
mov
aas
xor
mov
lahf
xchg
call
cld
mov
popf
call
inc
jle
stos
inc
orl
push
daa
iret
dec
mov
repnz
mov
sti
xchg
adc
xor
cld
enter
push
mov
repnz
jne
out
inc
lret
cli
inc
dec
ss
aam
insl
fisttpll
cmp
mov
inc
lods
scas
ljmp
cmc
cmp
sbb
push
jae
jbe
or
scas
cli
lret
inc
mov
mov
sbb
icebp
call
stc
mov
sbb
andl
and
repz
adc
clc
cld
xchg
ljmp
cld
xor
repnz
shll
mov
sub
enter
mov
addr16
jmp
cmp
out
add
out
dec
dec
in
rorl
jle
jb
push
jle
cmpsl
enter
add
pushf
cli
cltd
mov
in
mov
mov
cmc
dec
push
ja
add
mov
mov
mov
jg
shrb
lahf
fnstcw
hlt
push
dec
pop
push
xor
in
pop
movsb
push
and
imul
push
in
pop
inc
pop
jl
fdiv
fcmovb
scas
aad
pop
decb
aas
jbe
out
jge
pop
or
jno
mul
out
jmp
dec
or
ja
xchg
fstpt
jns
sbb
pushf
mov
stos
dec
add
xchg
cli
cmc
in
sub
pop
aam
ss
mov
mov
nop
sub
sbb
fsubs
aad
inc
in
aas
mov
aaa
aaa
in
shrb
int3
cli
dec
jecxz
int
jne
xor
adc
fldcw
shrl
not
mov
mov
imul
int3
fidivl
imul
std
xchg
fadds
xchg
mov
insb
dec
es
in
sbb
dec
imul
repnz
fcomp
fs
nop
sbb
dec
scas
xor
xlat
mov
dec
push
sub
fwait
mov
push
xchg
cld
mov
pop
lret
push
jg
enter
mov
outsl
cmc
pop
mov
lock
dec
xchg
jmp
and
mov
inc
sti
add
mov
rcll
out
addl
jmp
inc
ss
idivb
icebp
les
push
jnp
sti
xor
dec
sbb
mov
xor
rol
xchg
inc
pop
imull
scas
cmp
sbbb
add
xchg
add
mov
in
clc
mov
push
ficomps
xchg
mov
mov
mov
pop
int
subl
outsl
mov
loopne
inc
mov
xchg
push
pop
xchg
lret
inc
repnz
and
ljmp
mov
int
loop
mov
aas
jge
lods
ret
adc
mov
push
movsl
movsl
adc
les
rclb
scas
leave
mov
es
js
push
gs
int
xor
cs
sbb
cmpsb
sub
sbb
adc
xchg
in
jle
xor
sub
mov
inc
inc
mov
mov
mov
outsb
sbb
jecxz
ljmp
xchg
frstor
mov
push
div
push
test
inc
mov
pop
push
push
jle
mov
gs
jmp
fsubrl
sub
es
xchg
and
push
jb
push
pop
cli
and
mov
xor
jns
ret
lahf
cltd
fsubl
subl
js
mov
clc
out
int3
cmp
cmp
or
je
call
iret
push
jge
icebp
push
dec
mov
fisttpll
jp
pushf
jns
std
dec
aad
fmuls
addr16
fwait
inc
add
out
fstpt
and
aad
std
std
cmc
mov
dec
jmp
xchg
mov
fcompl
idivl
inc
aas
cmp
js
scas
insl
scas
jl
cmp
dec
sub
into
mov
ljmp
mov
pop
ds
mov
fsubs
push
fstl
xor
mov
aam
mov
mov
aaa
inc
data16
lahf
popl
in
cmp
pop
ljmp
mov
cmp
cwtl
mov
insb
jne
pop
or
jle
mov
jle
cli
std
pop
jne
push
sub
stos
sub
sarl
insl
negl
dec
inc
cmp
mov
stc
jp
jp
jae
xchg
pop
rorb
int
jo
js
or
push
adc
out
insb
sti
shrl
add
dec
mov
xor
sbb
pop
ret
xchg
mov
mov
add
push
mov
and
stc
dec
scas
inc
push
loope
mov
cmp
jnp
inc
fdiv
cli
out
pop
clc
sbb
enter
hlt
fidivrs
sbb
push
aam
lret
ss
mov
and
loope
int
aas
int3
testl
loopne
mov
jmp
mov
out
xchg
jmp
adc
hlt
stc
ja,pn
cmpsl
cltd
notl
inc
inc
arpl
push
stos
lods
xchg
xor
jge
xor
mov
jg
int
lret
and
jge
lock
jnp
push
dec
pop
lods
addr16
xor
scas
int3
cli
loop
lahf
sub
xchg
test
xchg
in
cltd
aas
gs
popf
mov
mov
clc
fldl
mov
scas
loop
out
mov
mov
lock
out
lock
test
mov
mov
imul
test
sbb
jg
int
imul
test
outsb
sbb
dec
mov
cmp
dec
test
push
push
je
sbb
xchg
xchg
xchg
inc
ja
out
inc
sbb
icebp
sbb
js
cs
cwtl
or
and
fmull
fnstenv
pop
leave
aas
out
mov
adc
or
ljmp
iret
or
dec
ja
cmc
lret
cmp
out
sub
inc
lock
rolb
pop
fstpl
in
jns,pt
pop
negb
sub
add
xchg
leave
repnz
jae
inc
xchg
pop
mov
mov
inc
div
push
mov
sbb
push
jle
scas
inc
push
outsl
lea
lock
paddusb
fisubrs
xchg
dec
jo
xlat
rorl
or
imul
clc
mov
mov
fidivrs
adc
out
arpl
xchg
clc
jae
cmp
push
ficoml
addr16
or
add
mov
xchg
pop
dec
xchg
in
fstpt
dec
out
ljmp
mov
pop
dec
sub
dec
mov
decb
xor
xchg
xchg
sub
clc
loopne
sti
cwtl
fnsave
out
iret
cwtl
dec
mov
sahf
sub
fnstcw
xor
xchg
aaa
or
xor
loopne
cli
popa
push
mov
rep
loop
fdivl
sub
cs
cli
mov
xchg
push
sbb
lret
mov
mov
js
mov
adc
xchg
push
call
aad
mov
jnp
lods
inc
ret
outsl
jnp
mov
out
xchg
pop
jb
xchg
xchg
out
xchg
scas
cmp
or
jecxz
push
mov
xchg
pop
test
out
gs
jne
mov
test
fsubl
dec
cmp
mov
daa
jae
mov
mov
rol
inc
cmc
dec
shl
ljmp
imul
hlt
out
lahf
cltd
mov
jg
xor
pop
mov
rolb
pop
add
xor
xlat
les
jg
and
sbb
lret
outsb
push
jns
sub
fcmovbe
mov
loope
loope
fsubl
dec
divl
sbb
test
repnz
jge
mov
test
mov
aam
out
mov
fstpt
mov
or
lock
sarb
stos
xchg
lret
jno
xchg
add
mov
sbb
pop
add
repnz
xchg
out
mov
fiaddl
sahf
pop
ljmp
stos
out
out
push
pop
push
loopne
call
out
mov
cmp
movsb
ffree
and
sbbb
fcmovnbe
ret
cs
xor
iret
aad
imul
jo
mov
mov
mov
iret
or
mull
ljmp
clc
and
mul
lret
add
pop
imul
jbe
push
cmc
outsb
bound
pusha
xchg
enter
push
or
inc
in
nop
mov
push
or
pop
xchg
loope
adc
test
add
stos
fiaddl
ror
ja
lods
push
movsb
lcall
dec
aam
mov
sub
cmpsl
mov
dec
icebp
into
test
or
pop
and
shl
dec
push
data16
rorb
mov
aaa
push
imul
fstpt
cmp
push
mov
std
cmpsl
push
jmp
or
mov
jno
sbb
push
negl
mov
cltd
int3
dec
movsb
xchg
pop
jg
cmp
dec
jp
mov
fdivrl
addr16
pusha
pop
out
cmp
scas
sarl
cmp
push
jl
fwait
cmc
xor
stc
bnd
ficomps
ljmp
cmp
into
rol
add
pusha
test
test
decl
scas
rcr
mov
mov
inc
mov
push
jb
into
sti
and
pop
xlat
xchg
xchg
xchg
add
xor
bound
sti
xchg
in
fwait
sub
xor
lods
cmp
push
shll
mov
out
gs
call
out
inc
pop
sub
xchg
outsl
ficompl
out
loopne
in
loop
push
enter
pop
popa
push
xlat
ds
jo
and
jns
inc
jno
adc
iret
cwtl
xchg
arpl
cwtl
cld
scas
cmc
jecxz
jns
andb
fmull
xlat
add
push
xchg
dec
sbb
pop
cmpb
mov
pop
and
pop
cmpsl
pop
push
sahf
loop
out
pushf
mov
mov
aaa
mov
sbb
lods
jno
adc
int
xchg
add
in
fadd
sub
xchg
insl
insl
add
pop
cmp
dec
xor
aas
lcall
mov
jno
cmc
ds
lods
sub
mov
sub
int3
fsincos
add
jmp
cmp
dec
aaa
cli
or
mov
notl
test
pop
bound
clc
push
popf
shrb
loop
fadds
adc
and
sub
cmp
pop
mov
mov
push
in
mov
stos
pop
test
scas
repnz
add
out
cs
xchg
xor
arpl
pop
mov
jp
popa
jmp
pop
mov
aaa
fsubrs
sti
gs
frstor
fistps
das
jl
je
out
daa
lret
inc
push
popa
fcoml
inc
scas
add
adc
jae
aas
push
test
in
and
dec
imul
cmp
push
aaa
out
cmpsb
lock
pusha
sahf
pusha
cli
loope
jmp
ret
cmp
add
mov
mov
loopne
mov
xor
or
orb
in
cld
mov
cli
shll
jno
fs
cwtl
roll
add
cmpl
xor
mov
mov
push
jne
mov
shrl
jns
cmp
pop
inc
jo
sbb
in
fadds
adc
cld
call
test
or
jl
out
lods
sbb
mov
fwait
push
lock
shl
int
mov
cmp
addr16
jge
sub
lock
pop
movsl
imul
icebp
lret
mov
push
or
nop
or
adc
mov
cmc
mov
xchg
cmc
nop
push
ret
sarl
hlt
mov
fldt
mov
jmp
hlt
push
lds
mov
dec
xchg
int
aaa
js
notb
lods
jno
iret
outsl
lds
jmp
aas
jp
sub
xchg
outsl
out
or
inc
outsw
mov
xchg
test
pop
dec
sti
dec
leave
into
xlat
jnp
jnp
in
lret
popa
adc
in
shlb
imul
cmp
jge
cmp
xchg
pop
xchg
jge
rep
out
fists
xor
fwait
je
rorb
mov
sbb
pop
ds
adc
adc
fildll
xchg
xchg
cli
cmp
aam
pop
ja
adc
xchg
or
mov
pop
sarb
lds
lods
sbb
and
cmpl
or
xchg
int
sub
loopne
pop
lds
je
nop
gs
fbstp
mov
jns
nop
sbb
add
mov
out
or
in
scas
stc
imul
in
jl
scas
in
push
and
cmpsb
dec
rolb
mov
popl
xor
and
xchg
mov
sarb
mov
leave
pop
sub
push
in
add
pop
mov
mov
cmpsb
add
push
pop
dec
jb
aam
hlt
pop
repz
and
mov
iret
popf
jo
nop
loopne
push
aas
mov
xchg
cmp
enter
das
cmp
add
pusha
in
jmp
xlat
dec
xchg
cmpsl
fwait
lock
mov
popf
pop
cltd
lcall
pushf
out
xchg
stos
je
xlat
outsl
mov
add
pop
fmulp
mov
out
std
jbe
aam
pop
dec
cmp
xlat
shlb
lret
jmp
repz
scas
inc
adcl
add
lret
or
xor
ret
xor
xor
mov
je
pop
jae
int
adc
loope
outsl
cld
jo
in
pop
push
das
movsl
inc
aam
add
sbb
outsb
cmp
sbb
mov
dec
cmp
iret
jo
mov
in
movsl
popa
xchg
mov
imul
js
aas
add
insb
push
ror
out
cs
push
xchg
inc
std
outsb
cmc
push
jb
mov
daa
aaa
lret
shlb
pusha
je
add
enter
xor
imul
mov
push
cli
lahf
in
cwtl
int3
pop
jae
fcompl
idivl
out
daa
mov
xchg
lahf
mov
jno
jno
stc
sbb
mov
cmpsl
in
pop
jp
inc
shl
push
sub
push
adc
push
add
mov
pop
jle
int
icebp
int3
div
lds
sbbb
rcrl
fiadds
icebp
adc
add
mov
out
xor
inc
jl
imul
aas
xor
pop
mov
rcrb
notl
popf
lds
ljmp
pusha
mov
dec
mov
add
push
push
test
rcll
test
mov
jp
inc
popf
add
adc
lcall
or
add
push
test
inc
scas
out
imul
adc
into
aas
jae
xchg
clc
pop
bound
xor
les
push
int3
inc
dec
lahf
push
pushf
cmp
add
push
mov
rorb
pop
or
outsl
loope
lods
ret
mov
dec
data16
pushf
clc
leave
dec
mov
shll
cmp
xor
lret
in
scas
outsl
fnsave
ud0
test
aas
xchg
popl
adc
out
push
ljmp
int3
stc
in
test
or
ljmp
push
cld
std
cli
cmp
rcl
cmp
add
xlat
mov
and
jmp
dec
fst
push
fwait
push
into
scas
cli
dec
mov
fwait
jecxz
or
out
push
push
mov
sti
shrb
out
jle
jno
push
dec
cmpsl
push
push
fwait
out
xchg
inc
rcrl
pop
pop
mov
outsb
out
sub
pop
sahf
sub
dec
inc
idivl
jne
cmp
xor
stos
sti
movsl
cs
jmp
sahf
mov
cmp
cmp
adc
fsubl
loop
cwtl
gs
cmp
lods
adc
pushf
push
jns
fistpl
xchg
and
xlat
push
fsubp
mov
das
insb
xchg
pop
add
push
add
cli
loope
aam
lret
pusha
popa
fwait
loopne
cmp
fsubl
scas
lock
sub
fwait
and
xchg
aas
jae
xor
mov
cmp
scas
xlat
out
stc
mov
jp
insb
mov
sub
push
sub
call
cmp
cs
or
loopne
into
icebp
mov
shll
xchg
dec
push
jnp
sbb
mov
pop
outsb
movsl
lods
and
fstl
cmc
dec
movsl
and
inc
loop
push
incb
jno
and
sub
cmp
mov
mov
or
xlat
dec
inc
outsl
fwait
cmc
or
cmp
hlt
inc
push
jmp
inc
std
movsl
pop
repnz
sarl
cmp
fwait
imul
out
cs
mov
sub
mov
or
xchg
rolb
pop
in
sbb
jle
jl
ds
sbbl
outsl
divl
outsl
jp
fcomps
mov
in
fimuls
pop
loop
out
lcall
mov
inc
ret
jge
insb
das
jae
cmp
js
loope
mov
js
jl
js
mov
mov
mov
sbb
pop
fldt
dec
and
mov
push
inc
out
push
add
jb
mov
cmpb
push
arpl
dec
outsb
mov
sbb
dec
jo
pop
jmp
test
xor
push
outsl
lock
das
jns
sbb
inc
int
ss
ss
jbe
mov
sbb
pop
mov
adc
stos
out
stc
pop
dec
dec
sbb
repz
sbb
loop
lahf
mov
mov
sbb
cli
pop
mov
enter
xor
scas
int
clc
fisttps
hlt
cmp
mov
inc
mov
std
hlt
and
sbb
and
push
daa
cmp
jns
stc
xchg
fdivl
pop
cmp
sahf
leave
repz
movsb
insl
or
mov
pop
and
stc
jo
fwait
out
andl
ja
push
pop
popf
ds
fcmovbe
std
lahf
or
xchg
iret
xchg
rcrb
pop
dec
mov
gs
and
mov
xchg
inc
std
movsb
xor
fdivr
fisubrl
adc
lret
jns
inc
lods
push
fmuls
push
inc
ror
dec
lahf
jae
xchg
mov
repz
mov
jecxz
lret
imul
pop
xchg
js
jbe
aas
fwait
insb
mov
fstpl
and
pop
and
mov
and
push
std
push
aad
inc
aas
adc
std
xchg
or
lcall
xor
mov
sti
sub
xor
in
ret
aam
arpl
lock
call
mov
jecxz
out
mul
mov
imul
cmp
inc
sahf
stos
xor
push
jg
repnz
sub
mov
mov
ja
or
sbbl
ret
push
fistps
fmul
xchg
pop
rcl
clc
loopne
lock
mov
cld
cmpsl
rcll
xchg
ret
push
push
cmc
fmulp
fistps
fcmovne
push
xchg
cmp
sub
inc
into
imul
into
mov
lods
adc
insl
jne
xor
cli
shlb
ret
cmpsl
inc
mov
out
outsb
dec
stc
adc
lock
dec
in
jne
jmp
mov
scas
push
test
aad
lahf
push
xchg
cmp
push
pop
fimuls
in
pop
test
mov
push
pop
jecxz
shlb
icebp
xlat
and
pop
jo
inc
mov
ret
icebp
and
inc
mov
in
jecxz
ss
lret
sahf
insb
fldcw
mov
xchg
outsb
adcb
shll
scas
add
jno
push
jl
mov
popf
lret
fistl
mov
inc
pop
popa
movsb
cltd
inc
jg
push
cwtl
or
jl
dec
add
mov
in
mov
shr
jb
lea
leave
out
flds
out
addr16
sub
push
cmpl
dec
fsubrp
dec
out
shll
fsubrl
add
sbb
pop
std
enter
mov
mov
inc
push
push
outsl
mov
add
cmpsb
into
mov
xchg
sub
in
cmc
std
xchg
mov
push
pop
fsubl
mov
xchg
add
add
dec
test
sub
gs
cltd
jmp
movsl
mov
xor
sub
jl
pop
push
adc
add
out
addb
ja
mov
stc
in
or
js
lods
mov
sbb
mov
in
xchg
movsl
push
ss
and
mov
ret
pop
testw
jle
mov
mov
fidivrs
xlat
pushf
outsl
lahf
test
mov
pop
and
lods
xor
std
cmp
nop
lret
mov
pop
daa
push
mov
pop
popf
in
xlat
dec
in
inc
fimuls
pop
mull
pusha
mov
inc
mov
into
insl
fistpl
and
cmp
andb
push
xor
sub
xchg
call
sbb
outsb
loop
sbb
inc
aas
insl
fcmovnu
jnp
mov
out
outsb
or
gs
or
mov
sti
cmpsl
mov
imul
pop
aas
shll
xchg
aam
jp
fs
jge
sub
shl
ljmp
movsl
mov
stc
fwait
cmpl
mov
outsb
inc
and
dec
mov
cmc
jmp
rcrl
mov
fdivrs
je
aam
push
jl
cmp
jne
sbb
inc
cmp
mov
outsl
mov
sahf
jl
pop
pop
or
aaa
je
fldenv
stos
jo
mov
ljmp
ret
jno
out
stos
cwtl
rep
in
arpl
cmp
sbb
xor
popa
das
sbb
dec
inc
repz
or
jnp
adc
ss
dec
or
push
push
mov
cmpsl
inc
or
arpl
push
out
mov
in
lret
jmp
inc
test
nop
iret
fildll
adc
lahf
sbb
lret
jl
dec
mov
out
repz
jg
rol
icebp
popf
jnp
mov
repnz
pop
mov
xor
imull
imul
sbb
lods
cmc
inc
cmpsl
les
xor
cmp
int
mov
test
repz
je
ja
xor
pop
jle
push
fsubl
lahf
xor
negl
arpl
repnz
subb
subb
jle
roll
es
push
fsincos
out
in
push
pop
sbb
das
adc
inc
fdivl
push
cli
pop
sbb
scas
es
lret
popa
cmp
and
xchg
cmp
js
shlb
mov
push
pop
mov
ja
adcb
hlt
mov
mov
push
lahf
test
push
fisubrs
iret
mov
mov
call
mov
stc
jae
das
mov
repnz
fisubrl
adc
lret
test
jmp
std
pushf
scas
fmull
ret
imul
pushl
pop
scas
pop
mov
lock
mov
push
out
arpl
shlb
cltd
sahf
inc
sbb
push
push
outsl
mov
outsb
repnz
sub
fwait
xchg
pop
jae,pn
leave
fld
adc
lret
fldl
xchg
leave
fnstcw
mov
push
stos
test
test
lahf
pop
cmp
clc
pop
jle
xor
dec
mov
pop
out
lock
push
bound
jmp
push
in
xchg
pop
fsubr
push
movsb
jl
mov
out
xchg
cld
in
pop
jmp
in
sbb
into
push
in
ds
push
sahf
sub
jmp
out
fbstp
xor
sub
push
pusha
sbb
into
xchg
lret
mov
and
jo
shll
sbb
aaa
sub
jmp
jmp
push
jge
mov
out
imulb
test
fnsave
mov
mov
loopne
and
cmpsb
jmp
pop
in
rolb
imul
jmp
pop
lods
sarl
lret
dec
jmp
arpl
das
pop
jle
inc
out
mov
lea
mov
add
shlb
pop
out
test
das
fimuls
mov
iret
jbe
into
lods
jb
idivb
cmp
jno
mov
cmp
sbb
mov
lea
cmp
adc
das
fimull
sub
sbb
mov
push
sub
mov
insb
lcall
aaa
leave
fstpt
xchg
pop
pop
inc
and
pop
aaa
push
cli
mov
lock
add
xor
cltd
repnz
pop
xchg
fbld
out
or
jge
mov
fstpl
cmp
xchg
iret
push
ss
pop
push
or
mov
int3
lds
scas
scas
fwait
pop
out
mov
lods
mov
lea
pop
lret
inc
in
stos
cmpsb
add
sahf
push
out
xlat
dec
insl
or
pop
pop
shrb
sti
mov
jmp
scas
jg
cli
stc
clc
pop
aas
add
add
repz
cltd
xchg
dec
cltd
or
shrl
scas
jnp
adc
sbb
pushf
add
dec
ljmp
aad
pop
shl
push
jo
mov
mov
jns
cmp
cmp
push
adc
mov
pop
mov
pop
in
pop
push
mov
ja
outsb
imul
jmp
or
xchg
ret
enter
lods
jno
mov
lcall
je
pop
test
icebp
mov
xchg
test
sahf
push
mov
adc
cmovns
shll
out
pop
idivl
in
mov
fmul
jecxz
sbb
fwait
outsb
es
xchg
or
lcall
dec
aaa
inc
jb
pop
cmp
cmpsl
cmp
xchg
fisubl
adc
fwait
repz
add
inc
leave
xchg
in
cmpl
add
fwait
pop
adc
stc
mov
jb
or
dec
ret
popf
mov
pop
pop
cmp
mov
cli
jl
in
push
adcl
jmp
inc
in
inc
mov
das
push
lds
dec
adc
ret
mov
mov
sub
adc
dec
cwtl
pop
outsl
sbb
outsb
ds
push
cmp
sub
sbb
ljmp
push
divl
ret
test
in
adc
insl
leave
jg
in
aas
jno
mov
xlat
scas
clc
sti
dec
and
out
push
sbb
aad
and
jecxz
lret
loope
gs
aam
mov
pop
mov
gs
and
ret
insl
cld
mov
inc
mov
pop
push
mov
test
ret
mov
mov
imul
lret
or
outsl
pop
jp
out
lcall
out
inc
insl
pop
dec
stos
lods
inc
mov
mov
xchg
push
sahf
jb
lds
jbe
imul
in
cmp
inc
nop
xchg
pusha
aam
in
pop
xor
lods
pop
cmp
cwtl
sub
cmpsl
xor
jle
cmc
push
inc
pop
ret
dec
aam
out
iret
sbb
xchg
jno
loopne
xlat
icebp
data16
jl
jnp
pusha
out
lcall
push
repnz
hlt
stos
mov
mov
lods
pop
test
or
andb
mov
inc
mov
push
testl
jg
popa
mov
fisubrl
leave
in
mov
jp
jbe
inc
sub
pop
insb
dec
icebp
test
loopne
mov
hlt
rorl
pop
cmpsb
jne
mov
addr16
add
mov
outsb
inc
je
pop
pop
popa
outsb
lret
or
adc
and
push
stc
frstor
lret
in
sarb
mov
lret
and
addr16
jae
outsb
shll
out
aas
pop
pop
mov
in
fwait
icebp
pop
jno
insl
cltd
test
mov
inc
inc
cmc
cmp
jo
cmp
dec
ret
daa
pop
inc
movsb
jg
dec
out
ljmp
cmp
mov
enter
inc
xor
or
mov
or
fsub
das
adc
push
rol
push
outsl
add
test
in
ret
ss
push
xor
fnstsw
int
daa
pop
sub
outsl
pop
and
sub
shrl
jge
jb
mov
cmp
fld
idivl
mov
sbb
or
outsl
imull
jmp
cmp
sbb
lea
push
and
inc
adc
jp
push
dec
cwtl
divl
clc
imulb
sub
push
sbbb
scas
mov
loop
mov
pusha
xor
push
push
sub
ret
adc
push
pop
ror
out
out
sub
jmp
mov
and
scas
frstor
aas
or
pop
jns
adc
ficoms
push
xchg
mov
and
insl
dec
cltd
add
and
and
mov
pop
lahf
push
rcrl
pop
imul
shl
shrb
popa
mov
xchg
dec
cmp
ss
imul
test
das
mov
bound
out
jecxz
cmc
pop
arpl
pop
dec
mov
mov
jecxz
jns
cmp
xor
cmp
aam
pop
pop
sbb
cld
adc
inc
testl
push
aas
das
push
mov
pop
mov
les
mov
iret
jne
test
jge
js
mov
test
frstor
dec
clc
and
jo
int
mov
subb
shr
pop
lods
cmpsl
andl
fidivl
push
popa
jo
cltd
sbb
xchg
bound
insb
push
rorl
mov
xchg
test
lahf
adc
push
sub
and
push
pusha
icebp
ja
push
xchg
dec
scas
jge
add
adc
sbb
js
test
push
jp
cmp
adc
inc
xchg
jno
jge
jmp
sbb
fmul
dec
out
leave
pop
xor
into
mov
cmp
cli
stos
mov
mov
mov
jg
lods
daa
scas
aam
mov
test
sub
adc
into
adc
js
push
out
sti
cmp
inc
pop
lret
andb
int
xchg
in
xor
loop
lock
out
pop
and
mov
push
ja
xor
jbe
icebp
cmpsl
push
imul
mov
stos
int
movsb
mov
sahf
ja
in
shlb
stos
ja
shll
ret
loope
adc
cli
es
jle
mov
fwait
adcb
lods
divl
jmp
pop
xchg
mov
pop
cmp
push
ficoms
in
notb
fcmovnu
mov
aam
out
adc
jns
xchg
iret
rorl
jg
incb
jl
daa
aad
xor
jg
pop
lock
mov
int
mov
jl
xchg
mov
cmc
mov
xchg
mov
sbb
outsb
pop
loop
dec
xchg
inc
push
std
jg
imul
out
cltd
jo
push
push
repnz
cmp
jl
repnz
stos
lcall
mov
pop
pop
movl
imull
scas
xlat
jecxz
jle
arpl
loopne
sbb
jecxz
mov
mov
ja
ret
push
pop
fidivs
xor
sti
or
test
repz
nop
mov
out
daa
in
push
push
loope
sti
and
decb
jno
scas
pop
cli
jnp
pop
idivb
call
xchg
aas
unpcklps
test
jmp
sbb
xor
testb
mov
pop
mov
cltd
psraw
pop
ret
clc
and
or
pop
fwait
popf
xor
or
push
ljmp
outsl
fwait
decl
hlt
out
dec
jle
or
sbb
push
jne
outsb
and
push
sahf
inc
addr16
enter
xchg
mov
hlt
pop
add
add
outsb
pop
call
in
loopne
adc
push
jge
jp
icebp
leave
jmp
mov
into
outsb
fmuls
mov
pop
dec
adc
jecxz
xchg
mov
out
std
sbb
daa
jp
das
mov
insb
xchg
daa
ja
mov
xchg
push
jle
dec
jbe
into
fldcw
jecxz
xor
push
scas
pop
dec
adcl
push
adc
sub
mov
pop
pop
xlat
in
and
std
xor
cltd
clc
dec
in
cmc
stos
aad
icebp
xor
repz
popf
mov
xchg
add
mov
std
inc
xchg
sti
mov
jg
push
popf
in
push
or
push
dec
inc
mov
cltd
and
jge
outsl
cld
in
xor
mov
pop
mov
push
inc
clc
or
daa
insb
cmp
mov
or
pusha
std
cs
shll
aas
mov
mov
jmp
int3
test
ror
inc
inc
testl
sbbb
test
xchg
stc
xchg
add
repz
ret
adc
mov
ss
enter
insb
subl
mov
out
inc
push
clc
cli
imul
addr16
jb
movsb
icebp
dec
mov
xor
dec
mov
adc
sub
jo
ret
ja
repz
inc
jg
les
jl
ficompl
and
mov
dec
push
imul
outsl
add
sub
fmuls
addl
outsb
aaa
imul
xchg
idiv
stc
out
dec
mov
dec
inc
ss
mov
push
jnp
jae
adc
repz
scas
idiv
lret
jo
jb
mov
jl
pop
test
call
movsl
pop
jno
or
pop
push
jmp
dec
aam
negl
lds
inc
jb
clc
or
cmp
jle
push
cmp
sbbb
icebp
daa
jne
jge
add
mov
into
in
mov
negl
adc
jg
and
mov
cltd
lahf
out
jl
pop
js
xchg
xor
gs
orl
pop
loop
xor
outsb
aam
outsb
jae
xchg
fsubs
stos
push
aas
enter
and
xor
mov
mov
out
pusha
dec
pop
loopne
int3
lds
mov
dec
mov
int
push
jp
outsb
inc
in
dec
mov
imul
rclb
sbb
int3
fwait
aas
push
cmp
sub
mov
cmp
mov
mov
jle
into
mov
mov
jle
jg
cmc
jmp
jae
xor
add
push
shl
jecxz
aas
dec
scas
pop
les
pusha
jge
mov
mov
nop
pop
sar
rorb
ja
add
push
cwtl
jmp
orl
add
aad
inc
mov
push
sub
lods
mov
add
testl
addr16
push
in
ret
mov
data16
movsb
pusha
fucomi
je
aas
lahf
imul
mov
push
sub
out
dec
js
repnz
in
sub
daa
sarl
ret
mov
mov
sahf
lods
pop
and
mov
into
inc
pop
add
jecxz
imul
and
pushf
negb
popa
jae
xchg
stos
es
mov
loop
iret
cli
and
cmp
sub
dec
cltd
inc
mov
stos
fdivrl
mov
push
and
repz
lret
adc
les
bound
out
and
jns
cs
mov
sahf
cmpsb
testb
push
jae
push
sbb
cmpsb
lods
xor
popf
push
mov
fmul
jge
sbb
rol
fidivrs
testb
xor
test
fcmove
sbb
frstor
icebp
adc
cwtl
ds
xor
outsl
sbb
pop
mov
dec
jmp
inc
pushl
in
mov
repnz
lret
jecxz
xor
testb
lods
add
inc
das
dec
lods
in
mov
les
pop
call
and
jl
push
or
stc
push
mov
aas
das
pusha
mov
std
xchg
int3
push
dec
sahf
jle,pt
insb
push
aaa
and
jmp
push
inc
xchg
adc
jge
into
cmpsb
pop
out
inc
cs
ljmp
je
in
dec
lea
xor
cmpsb
les
ljmp
mov
out
subl
dec
xlat
fimuls
cmp
inc
or
xchg
add
test
fnstsw
sbb
popf
or
cld
jecxz
call
cmp
repz
cld
sti
out
std
mov
cwtl
push
push
push
push
stc
mov
dec
mov
lods
mov
repz
jo
jb
sbb
xor
cli
hlt
sbb
fs
pop
mov
pop
sub
add
dec
iret
test
fstl
into
dec
xchg
orl
push
movsb
or
jns
add
add
clc
sahf
sub
mov
rclb
dec
mov
xlat
cmpsl
dec
rcll
sbb
pop
jnp
lock
cmp
push
imul
outsb
lret
cmp
ret
outsl
jmp
sub
mov
or
push
add
mov
or
adc
shrb
sbb
cmp
mov
lahf
push
inc
dec
add
jb
push
jge
push
imul
mov
lcall
xchg
cltd
shl
pop
add
mov
mov
movsl
subb
test
xchg
test
push
out
iret
dec
or
sbb
cwtl
mov
and
mov
out
movsb
lods
dec
cltd
cmc
gs
stc
add
pmaxub
jp
imul
inc
nop
mov
lret
mov
aaa
push
test
ret
jecxz
imul
notl
inc
cli
sarl
lods
and
jp
outsl
xchg
inc
loopne
xor
fadds
faddp
jbe
scas
mov
repz
lods
jmp
xor
into
gs
mov
data16
pop
sbb
je
clc
jecxz
scas
mov
push
into
push
out
jl
fsubrl
js
daa
ret
mov
mov
xchg
in
shrb
hlt
adc
pop
jno
or
mov
and
add
pop
out
in
lock
pop
mov
xor
sub
lret
lret
das
xchg
insb
sti
mov
out
por
cmpsl
cmp
sbb
cli
lds
push
movsl
pop
stos
leave
jp
push
adcb
xchg
out
jl
mov
in
push
jno
push
ficompl
je
aad
pop
ds
cmp
cltd
sub
testl
shrl
xor
adcl
incb
jae
ja
aam
adc
test
ret
addr16
jl
stos
scas
sub
lods
dec
lahf
lds
mov
inc
std
addl
sbb
adc
mov
mov
add
jae
clc
and
lock
popf
sti
in
rcrl
mov
cltd
sub
je
add
sub
ja
xlat
sti
pop
pop
iret
pop
jle
cmp
sub
mov
xchg
cmp
pop
jns
pusha
sahf
in
push
incb
pop
cmp
prefetch
lds
mov
je
xor
out
imull
mov
jb
pop
mov
jb
aam
jl
std
int
mov
push
in
incb
dec
push
out
dec
stc
mov
mov
pop
or
imul
int3
daa
mov
arpl
out
cmp
ja
sbb
mov
cmc
jb
arpl
push
das
shll
mov
and
subb
lods
jle
push
test
or
dec
adc
ficompl
rorl
push
stc
popa
mov
ss
cwtl
fnsave
sarl
in
xchg
fsubs
sub
imul
cmp
outsb
leave
cmpsb
pop
push
ja
test
xchg
fildll
dec
jo
mov
lret
mov
pop
lahf
sub
sbb
out
ss
in
das
ja
add
stc
jg
xchg
jmp
mov
andl
dec
mov
xchg
sbb
add
push
pop
lock
sbb
push
imul
and
mov
mov
popf
leave
mov
xchg
cld
push
fnstcw
jle
test
xchg
cltd
iret
adc
js
outsl
jecxz
lock
scas
fwait
jnp
aam
js
in
aas
outsl
movsl
pop
pop
fldl
inc
cmpsl
push
sarl
and
out
xchg
mov
sbb
xchg
xchg
sti
out
mov
xchg
sti
pushf
bound
fcmove
js
xor
sti
pop
sub
mov
sti
scas
je
lahf
ret
loop
pop
cmpsb
xchg
cmp
mov
into
scas
mov
fnstsw
mov
push
test
push
cmpsb
dec
sbbl
pop
or
xchg
jne
and
xchg
call
inc
andb
sarb
stos
pop
lahf
in
or
mov
push
int3
daa
insl
fwait
rcr
adcb
fsub
xchg
mov
frstor
loope
jecxz
out
stos
adc
sub
inc
fidivrl
inc
cmp
div
div
dec
add
sub
out
mov
flds
add
mov
push
mov
shl
test
loop
pop
dec
jnp
sub
scas
faddl
rcrb
cld
add
lods
clc
mov
sbb
in
push
dec
ror
aas
adc
push
pop
xchg
rorb
mov
jns
loopne
and
jge
sub
and
lret
testl
out
icebp
btc
iret
push
cs
cmpsb
cwtl
ret
xor
mov
and
sqrtps
scas
ficoml
aam
jp
icebp
adc
fstps
clc
testb
shr
jne
and
hlt
add
jmp
imul
pop
dec
cs
addr16
fistpl
int3
pusha
jle
pop
jb
mov
inc
out
xchg
jnp
into
clc
sbb
and
mov
xor
cs
call
mov
jle
lds
push
adc
in
aaa
lods
cli
bound
into
or
popf
lahf
sbb
pop
fnsave
aad
movsl
xstore-rng
cmpsl
sbb
xchg
out
cmp
pop
xchg
xchg
xor
test
fcmovb
ret
jle
into
xlat
or
xor
mov
fwait
dec
outsl
repnz
xor
adc
imulb
mov
push
int3
jne
xor
jnp
scas
sti
lahf
jbe
mov
mov
mov
inc
imul
out
mov
cld
loopne
mov
enter
lret
daa
in
fcoml
lret
ret
out
fcomps
jnp
fwait
jg
mov
cmp
mov
incb
jb
or
jae
shl
lock
and
repnz
stc
std
sbb
std
in
repz
stc
ds
pop
aam
fwait
lahf
js
jge
fdivr
jmp
out
mov
fisttpll
out
push
incb
jg
das
popa
out
cmp
add
mov
mov
jo
mov
mov
scas
mov
jmp
cmp
pop
xchg
add
loope
outsl
orl
int3
xor
or
mov
adc
ret
cmp
andl
push
cmp
add
loop
push
sahf
js
xlat
push
jg
in
mov
out
jbe
jns
sti
add
stc
sbb
jbe
cmp
mov
xchg
in
fwait
data16
mov
sti
cwtl
addr16
js
mov
cmp
add
cmp
std
ficoml
test
outsb
cmp
std
ret
lds
fcoml
aad
xorl
cld
sub
sti
xchg
scas
xlat
inc
mov
ffreep
in
jmp
mov
sti
xor
fsubl
insl
ja
dec
or
ja
pop
mov
aas
test
and
lahf
fists
push
xor
sub
cld
push
pop
mov
mov
gs
je
mov
add
pop
jnp
dec
or
xlat
clc
cmpl
movsb
stc
pop
xor
aam
mov
add
and
cs
sbb
push
cli
pop
clc
pop
clc
adc
cmp
lret
xchg
add
add
das
jb
push
fldcw
ss
xor
push
outsl
sti
lret
xor
and
mov
mov
call
dec
sti
ficoms
push
fstps
pop
sub
xchg
xchg
jbe
bound
cli
lcall
pop
mov
fisttps
mov
pop
jnp
cltd
and
push
out
and
lods
dec
int3
pop
out
inc
cmp
xchg
loope
or
push
lock
sbb
and
inc
call
cs
popf
out
mov
mov
shll
cmpsl
sub
and
jge
aam
popf
mov
push
jge
sti
jbe
add
fiaddl
std
call
ja
repz
mov
out
jp
shrb
aas
mov
cmp
notl
imul
push
lds
shlb
dec
leavew
push
push
lcall
inc
inc
and
das
gs
ljmp
xchg
das
jnp
dec
in
add
testb
fistl
xchg
pushf
mull
repz
mov
aam
addl
dec
mov
add
in
aas
pop
sbb
pop
mov
in
xchg
shlb
lock
inc
mov
fstpt
leave
leave
xchg
push
outsb
mov
mov
popa
or
mov
idiv
push
xchg
in
lds
push
jmp
fcmove
xchg
jge
or
js
daa
fisttpll
xchg
in
mov
imul
inc
push
cmp
testl
push
pushf
sub
push
loop
push
lcall
out
ficompl
mov
nop
mov
xchg
aas
sub
push
mov
faddl
add
sbb
addr16
pop
lods
xchg
add
loop
pop
lret
lea
outsl
dec
lods
or
ret
sahf
das
mov
jnp
mov
pop
js
mov
pop
or
mov
mov
out
je
lds
add
scas
notl
pusha
repnz
cmp
jge
dec
scas
push
ret
xchg
fstpt
inc
pop
xlat
ds
jl
cmp
jp
jo
cmp
flds
adc
mov
loope
or
pop
fmuls
cmp
fcoms
popa
jl
sbb
and
jge
mov
fistps
jecxz
int3
rcrl
dec
enter
push
fcomps
xchg
ljmp
ja
pop
ret
fnsave
gs
sbb
inc
popa
testl
ljmp
cmp
cmpsb
std
jbe
test
xor
pop
pop
aaa
inc
xor
shll
iret
cli
ret
imul
add
sahf
pop
add
mov
and
mov
pop
jg
int
inc
add
pop
sti
sbb
sub
jo
sbb
and
cmp
sub
pop
outsb
mov
sbb
rcr
popa
add
std
sbb
call
int3
pop
loopne
adc
xchg
cmp
sub
jle
pushf
mov
flds
in
lret
and
mov
stos
fiaddl
pop
sti
jl
in
pop
aam
pop
std
adc
inc
scas
inc
cmp
cmp
inc
lahf
pop
jle
push
pop
lcall
lock
insl
stc
push
lods
mov
loop
cs
in
not
notb
lahf
test
test
popf
outsb
and
add
and
fcompl
fsubrp
out
dec
push
das
and
call
cs
clc
mov
jge
fstpt
aam
mov
and
jmp
ret
arpl
fwait
cmp
shll
movsl
mov
sar
push
mov
out
fsub
adc
loop
cmp
pushf
add
inc
adc
scas
mov
jne
sbb
aaa
xchg
nop
sbb
clc
sub
pusha
icebp
leave
pop
or
push
jg
xchg
dec
aas
mov
repnz
aaa
out
add
dec
cmp
fsubrl
mov
pop
push
ja
stos
sti
xchg
and
and
sbbb
jl
mov
xor
push
orb
jl
aad
into
fstps
xor
insb
xchg
inc
mulb
lds
jmp
fld
push
pop
scas
ss
lret
adc
lea
pop
js
push
jns
mov
mov
or
test
or
leave
out
inc
lahf
notb
pop
nop
cmc
jb
hlt
js
std
fldl
ret
test
fucomi
xor
pop
adc
fisubl
sbb
jmp
inc
push
jge
lods
push
pop
inc
inc
sub
add
imul
cmpsb
outsl
dec
outsb
push
addr16
pop
fstps
mov
loope
hlt
xchg
loop
nopl
mov
xlat
fidivl
mov
test
data16
fimull
shll
jg
jge
fnstenv
jmp
pop
sbb
pop
imulb
and
mov
or
xchg
mov
jmp
and
adc
xchg
negl
filds
xor
pushf
mov
mov
aas
pop
icebp
jb
jae
adc
jecxz
adc
loope
and
std
ja
mov
movsl
mov
imulb
shl
lods
jmp
out
xor
xchg
jge
add
cmp
sbb
sub
dec
repz
bswap
mov
sub
bswap
mull
hlt
or
int3
cmp
das
fisttpll
lret
shrl
cmpsb
mov
pop
scas
mov
lret
mov
ja
aad
mov
loope
pop
mov
pop
pop
sbb
and
movsl
inc
inc
jno
or
movsb
jle
mov
inc
je
inc
call
loopne
push
pop
jmp
pop
lock
mov
sub
sbb
lds
iret
cmc
into
stc
sahf
mov
pop
iret
push
arpl
daa
mov
xorl
xor
cmp
mov
int3
adc
adc
push
push
adc
mov
sar
push
inc
mov
mov
loopne
xor
dec
jp
mov
pop
xor
shrl
mov
add
repz
xchg
ljmp
pushl
hlt
cwtl
iret
into
clc
enter
das
addr16
js
cmp
imul
enter
ss
pop
aam
clc
lret
sub
jb
sub
cmp
jne
mov
push
lcall
mov
popa
aaa
jg
hlt
mov
ret
sub
iret
or
xchg
loopne
sbb
imul
stc
sbb
mov
mov
decl
xchg
pop
neg
mov
inc
push
pushl
and
ljmp
mov
jno
dec
rorb
and
jo
les
mov
mov
ret
add
mov
jns
xor
fnstenv
mov
iret
adc
cltd
in
jp
ds
cmp
add
jno
imul
dec
stc
mov
insl
aaa
push
mov
mov
adc
and
dec
cmpsl
arpl
test
or
nop
jno
pop
xchg
cmp
lret
add
shrb
jecxz
andl
adc
jae
pop
test
lea
add
dec
and
and
mov
ret
or
fnstsw
pushf
dec
push
or
add
pop
negl
mov
in
js
iret
es
lfs
out
mov
lock
mov
cmp
add
lock
add
xor
pop
icebp
push
ret
add
push
out
xchg
cmp
repnz
out
push
std
data16
dec
sub
js
mov
and
ljmp
mov
inc
out
mov
cmpsl
cld
adc
jmp
popf
loopne
mov
ljmp
jp
mov
out
les
loop
aaa
xor
add
iret
jb
mov
aam
pop
xchg
cmp
push
dec
cmpb
mov
pop
cld
mov
sti
mov
jbe
rorl
imul
ret
test
jg
adc
pop
jns
rclb
stos
dec
sub
std
pop
addr16
mov
mov
in
cwtl
stos
insb
mov
and
and
js
fxch
pop
mov
shlb
jl
lock
ret
xor
mov
fs
in
sarl
and
fsub
iret
pop
pop
push
mov
ss
in
or
xor
stos
ret
ret
scas
ficomps
xchg
xor
xchg
ja
jl
mov
into
jno
mov
jns
int3
scas
out
das
mulb
frstor
xlat
repz
dec
jo
cmp
or
or
sub
jns
in
orb
aas
mov
lds
or
out
jl
ret
push
test
sti
shl
in
flds
push
jge
out
jns
xchg
pop
jle
repz
mov
repz
jnp
lret
xor
push
cmp
comiss
lret
pop
pop
fiaddl
dec
jnp
jns,pt
xchg
inc
fistps
adc
jle
mov
cwtl
adc
out
loopne
vpaddb
shl
loopne
adc
cld
mov
sbb
dec
pop
aad
add
movl
xchg
mov
xor
out
jg
xchg
out
cmpsb
test
sbb
mov
or
vpavgw
xor
por
and
add
xchg
xchg
jae
push
push
pushw
mov
imul
pop
push
cmpsl
inc
lods
fisttpl
loop
add
mov
mov
data16
or
stc
ds
das
imul
cld
in
movsb
push
jno
call
enter
mov
test
pushf
xchg
movsb
or
mov
dec
jns
cmp
scas
lret
mov
mov
mov
in
jno
das
or
stos
testb
in
pop
mov
mov
int
in
inc
pop
int
cmp
loopne
pop
inc
mov
jns
inc
sbb
mov
ss
bound
dec
loopne
call
dec
mov
mov
int
and
pop
sbb
repnz
jl
insl
jae
jg
mov
xchg
dec
divb
repz
out
lea
cltd
xor
jns
push
pushf
sbb
and
aam
nop
mov
fs
out
and
cmc
push
or
scas
and
ja
mov
out
scas
sar
loop
pop
out
mov
test
jle
push
adc
aam
idivb
mov
scas
test
push
pop
out
push
pop
mov
fucomi
pop
cltd
dec
jo
fcompl
sub
push
jae
jns
cmc
sub
sub
dec
ret
in
jle
popf
pop
ds
test
lds
mov
pop
pop
cmp
push
push
fs
adc
loope
bound
jp
sbb
orl
aad
pop
scas
stc
into
lds
dec
pushf
and
jb
arpl
mov
outsb
jmp
mov
inc
cli
push
xchg
push
dec
in
popf
mov
fadd
lcall
mov
add
fistl
and
cmc
pop
jne
aas
sbb
cmp
ja
xor
jp
dec
inc
rcrb
jp
xor
lcall
pushf
xchg
dec
xchg
mov
xchg
std
mov
lret
jo
fwait
aad
inc
sbb
adc
pop
mov
aaa
inc
xor
in
js
bound
jmp
xor
cmp
dec
jnp
jae
pusha
push
daa
negb
ret
jle
test
sbb
jbe
popl
jae
jae
ds
aas
xor
lock
adc
cmp
jecxz
cmp
cmpsl
inc
repz
andb
ret
fucomi
xchg
and
mov
dec
lods
push
xchg
inc
adc
std
adc
xor
and
fsub
lcall
jp
pusha
int
fsts
pusha
in
mov
call
cmc
aaa
mov
std
and
es
sbb
pop
das
pop
mov
pop
lock
pop
insl
lcall
cmp
stc
iret
inc
test
lods
ficoml
ljmp
pushf
rcll
movsl
sahf
mov
repz
xchg
jne
loopne
jmp
into
bound
xchg
fldl2t
repz
add
pop
outsl
movsb
lock
push
dec
inc
pushf
and
jge
xor
mov
popf
mov
and
xor
sbb
inc
adc
pop
sahf
cwtl
repz
jb
xchg
arpl
in
dec
sti
xchg
out
rcll
fstp
jns
push
mov
xor
mov
dec
jnp
in
mov
inc
dec
jae
mov
ds
movsb
pop
cmp
incl
cmc
outsl
jbe
adc
notl
pop
dec
imull
cmp
dec
repz
mov
and
lcall
jmp
insb
jns
mov
pop
aas
stos
mov
inc
int3
cmpb
iret
adc
add
add
aad
mov
hlt
imul
rcl
scas
mov
cs
xor
iret
xchg
insb
stos
jno
adc
pop
xor
xlat
jle
pop
add
arpl
popf
push
fld
xor
je
popa
jne
and
stc
imul
stc
pop
je
add
icebp
rolb
clc
outsl
popa
xor
jge
lea
out
and
stos
xchg
cld
mov
xlat
insl
pop
mov
fsubrp
and
push
mov
jg
adc
pop
inc
and
lods
jbe
imul
pop
shr
xchg
fimull
imull
mov
repz
xchg
jb
xchg
ds
dec
sbb
shrl
mov
or
repz
sar
add
lcall
pop
mov
popf
ret
rorb
push
dec
jo
testb
jmp
notb
gs
inc
ret
cmp
push
pop
outsl
dec
mov
das
ds
cmpsb
cli
inc
std
div
mov
adc
or
rclb
add
jnp
lcall
dec
pop
inc
in
adc
mov
scas
mov
fists
add
jne
sti
pop
sbb
and
repz
pop
iret
in
pop
push
dec
movsl
sub
scas
repz
pop
inc
cltd
xchg
jmp
aad
fildll
clc
jnp
int3
lods
lods
lods
cmpsl
loop
push
iret
mov
fidivs
mov
lods
stos
sti
cli
adc
roll
xchg
inc
stc
sub
sbb
or
push
jno
clc
or
mov
sar
and
inc
jg
jae
push
aaa
cltd
and
out
or
push
test
mov
xor
or
outsb
pop
pop
push
sti
sub
hlt
inc
repnz
out
jle
sbb
mov
jge
cltd
lods
add
out
adc
pop
sub
in
mov
pushf
add
sahf
jle
xor
lds
lret
jecxz
mov
sbb
or
push
mov
xchg
sbb
inc
adc
std
push
xor
pusha
aas
adc
cmpsl
movsl
jle
cmp
mov
cmp
jbe
cmpsb
mov
ret
test
lret
cmpsl
mov
and
scas
test
mov
xor
fidivl
pop
outsl
inc
and
sub
jnp
jmp
pinsrw
mov
mov
repz
xor
cld
pop
ret
sub
or
orb
pop
and
insl
jo
mov
stos
jns,pt
icebp
cmc
jbe
fistps
dec
dec
sub
clc
mov
lret
lods
adc
mov
dec
push
inc
aas
incb
xchg
xlat
data16
std
jo
cltd
data16
lea
roll
inc
mov
nop
xchg
in
sub
mov
icebp
mov
test
mov
add
mov
test
lods
mov
insl
sbb
mov
adc
outsl
idivl
cmp
sbb
sub
adc
xchg
pop
lods
mov
ficomps
sbb
orb
pop
aam
out
popf
xlat
scas
mov
daa
jne
mov
fistl
mov
insb
hlt
repnz
imul
mov
lret
fwait
out
das
fwait
push
ret
int
out
outsb
pushw
stos
dec
iret
fstl
ljmp
inc
test
add
mov
outsl
nop
fidivrs
mov
icebp
dec
in
mov
push
loopne
iret
dec
imul
in
sub
and
adc
cmp
pushl
add
pushf
rorb
and
xor
inc
ljmp
ljmp
negl
xchg
xchg
fistps
fstpl
cmpsl
fwait
cs
or
sbb
lea
lret
cmc
lret
or
mov
pushf
xchg
call
shll
cmpsb
sbb
ret
and
daa
xchg
mov
repz
imul
incb
imul
daa
add
add
lret
sbb
das
jae
aaa
jge
push
inc
inc
push
incl
ret
sti
sarb
mov
mov
lods
mov
into
push
fisubrs
imul
test
mov
mov
add
fistpll
out
cwtl
jae
es
or
push
in
in
pop
out
call
int
imul
insl
jns
adc
add
add
into
mov
mov
addl
xor
outsl
push
mov
movsb
call
in
sbb
stc
push
jo
cmpsl
es
or
and
push
pop
out
add
sbbb
mov
sub
out
into
test
xchg
aam
mov
push
shrl
out
sti
pop
add
lahf
add
push
mov
cltd
mov
jo
mov
jne
aam
or
repnz
xor
or
fadds
sbb
addr16
mov
ljmp
adc
pop
mov
ja
push
sbb
dec
sbb
fdivrl
cli
sub
sbb
jle
mov
cmc
or
add
daa
mov
loope
jbe
inc
fs
call
outsb
dec
ret
or
inc
mov
and
adc
jl
cwtl
mov
adc
cmc
sub
js
mov
cmpsb
add
mov
fldl
cmp
adc
pop
or
sbb
mov
inc
add
jmp
and
xlat
and
clc
out
popf
jae
imul
and
or
rcll
icebp
xchg
fndisi(8087
jno
jmp
and
mov
xchg
test
pop
rcll
fistpl
leave
cmpsl
pop
pop
cmp
repz
xor
movl
ret
cli
mov
rcrl
scas
jp
fsubrs
test
loope
outsl
mov
jecxz
aaa
testb
pop
fdivrp
ret
xlat
mov
push
icebp
lcall
movsl
mov
ds
int
lea
mov
mov
add
xchg
stos
jecxz
inc
popa
aad
inc
fidivl
cmpsl
rcl
jmp
adc
jl
cmp
mov
jg
in
jmp
lea
loope
xor
scas
movb
xchg
scas
push
mov
inc
pop
xchg
mov
and
xor
dec
mov
es
jl
cmp
adc
ret
inc
insb
repnz
xor
imul
dec
data16
jno
jno
cmpsl
jno
push
vpsllq
inc
sub
pop
daa
pop
rcll
mov
dec
mov
dec
arpl
stc
pushf
dec
pop
push
inc
xchg
sbb
loope
inc
and
cmp
fidivrs
in
std
lahf
out
neg
push
fwait
pop
lcall
sub
pop
in
stc
cmp
sub
and
cmp
mov
int
fdivl
jp
cli
pusha
xor
cmc
out
outsl
adc
pop
cmp
jae
push
push
rcrl
jg
stos
repnz
jb
fmull
jbe
aas
jp
icebp
sub
adc
xchg
imul
insl
jmp
cmp
xor
xchg
jge
repnz
fs
adc
js
dec
pop
repnz
push
rcll
cmpsl
inc
ljmp
sbb
nop
outsl
rep
das
mov
sub
cmp
in
mov
mov
mov
addr16
mov
aaa
mull
or
mov
popf
out
std
repz
xor
cmc
aam
arpl
stc
andb
mov
addr16
enter
pusha
or
sti
into
mov
stos
fwait
cmp
decb
outsl
js
sub
adc
call
dec
js
sbb
jg
or
nop
sahf
scas
cld
pushf
movsl
incl
or
out
adc
shll
ja
ret
or
scas
mov
jbe
sub
ret
stos
jb
and
and
mov
dec
and
mov
imul
rolb
push
test
fs
cmp
cmp
repnz
pop
das
addr16
xchg
push
sbb
mul
mov
mov
popa
push
lret
imul
imul
xchg
repnz
mov
imul
scas
hlt
es
jl
out
shrb
or
jp
fistps
ja
jg
cli
mov
fcos
mov
out
aaa
int
into
out
rclb
out
in
jnp
jbe
jae
test
outsb
or
mov
or
movsb
popf
dec
push
push
aaa
jnp
dec
mov
cmp
lea
or
mov
xor
jle
and
std
mov
ds
adc
mov
cmc
dec
mov
xchg
call
shlw
mov
stos
out
outsl
hlt
jae
sub
lock
mov
mov
and
mov
int3
fsubr
lcall
fistps
pop
xchg
out
lret
nop
xor
ljmp
inc
ja
or
fdivrp
sbb
sarb
out
push
sub
jl
sti
inc
add
loopne
mov
mov
push
repz
popa
lods
fsubrp
sub
iret
mov
pop
xchg
jecxz
xchg
dec
mov
add
xchg
push
jl
sbb
mov
aas
mov
pop
test
cmp
pop
dec
into
xor
mov
cld
lods
leave
ficompl
decl
or
mov
mov
aam
or
gs
sbb
mov
ss
test
in
pop
push
leave
adc
adc
popf
pop
insl
test
cld
inc
testb
scas
mov
mov
pop
loop
adc
jp
ss
jns
or
dec
inc
pop
sbb
mov
aad
mov
jo
pushf
ror
lret
cmp
jmp
insl
mov
daa
cltd
xchg
xor
pop
jne
sbb
cli
pop
lret
leave
outsl
out
ja
cmc
xor
add
mov
aas
pushl
xor
nop
jne
mov
sub
lcall
xor
pop
popf
xchg
jg
pop
jecxz
lret
sub
xor
lods
pop
test
popf
jge
pop
into
pop
idiv
xchg
in
pushf
adc
xlat
jl
mov
loop
aas
test
sub
mov
add
pop
mov
add
and
mov
repz
enter
mov
jae
call
idivl
shll
adc
mov
lods
cwtl
and
cmp
popf
stc
add
lret
idivl
filds
jne
test
cmp
out
sbb
cmp
test
mov
jecxz
and
sbb
aaa
inc
into
jbe,pt
stos
popa
mov
jl
inc
push
out
cmp
jg
cmpsl
int3
sbb
sub
mov
xor
dec
adc
or
and
in
mov
test
lcall
cmc
lea
adc
idivb
out
add
stc
out
dec
out
jnp
fisttps
mov
push
cmp
mov
adc
data16
outsb
xor
fidivs
fcompl
jge
lods
mov
scas
testl
adc
cmpsl
ret
pop
and
jge
push
test
xchg
dec
idivl
movsl
xlat
and
ret
mov
xlat
pop
sub
jb
fdivr
dec
lds
mov
inc
fidivl
aam
sub
cld
pop
les
mov
ja
dec
insl
or
cmp
inc
sub
int
outsl
xor
dec
xor
jmp
mov
stos
cmp
jno
lock
add
das
data16
out
int
pop
popa
xor
arpl
and
je
es
stc
loope
mov
pop
dec
mov
or
xor
repz
les
pop
les
push
dec
stc
ja
andb
cmp
out
pop
aad
fadd
sub
rdtsc
and
out
int3
or
je
push
pop
xchg
jno
in
and
pop
icebp
inc
mov
inc
in
lret
fldenv
lcall
cs
icebp
clc
das
fcos
stc
les
mov
call
add
neg
or
add
ljmp
dec
in
jne
shlb
add
add
adc
notb
push
pop
add
aaa
pop
pop
xchg
push
jne
fsubrs
jnp
lock
enter
xchg
aam
add
imul
icebp
sbb
mov
sbb
pop
iret
fsts
mov
shll
test
xchg
xchg
pop
xorl
jnp
mov
and
mov
sahf
stos
lock
repnz
loope
decb
mov
pusha
mov
push
mov
insb
mov
lds
push
fnstcw
lea
es
pop
mov
push
dec
daa
mov
push
pop
push
fcmovnb
loop
sbb
xchg
cli
nop
cmp
lret
push
pop
xrelease
mov
dec
dec
jae
pusha
sub
fcomps
aam
dec
adc
repz
gs
pop
call
movsb
push
setno
mov
jns
sti
inc
pop
shl
fwait
push
xlat
out
shll
mov
dec
mov
and
jnp
add
bnd
imul
jl
jbe
jecxz
dec
adc
data16
xchg
imul
xchg
adc
mov
jbe
rcrl
fisttpl
add
cltd
std
xor
iret
shrb
ret
out
in
sti
out
pop
scas
cmp
aaa
mov
inc
fnsave
cli
pop
popf
dec
mov
lock
mov
push
rcrl
xor
xlat
movsb
roll
inc
lods
mov
mov
subb
add
shrl
add
orl
jo
pop
sub
push
xor
test
jno
cwtl
inc
adc
pop
or
cmp
out
jge
pusha
inc
mov
aas
idivl
ds
out
loopne
mov
sbb
push
jge
mov
gs
pop
imul
xor
jno
aam
pop
int
xchg
sub
mov
fildll
mov
push
add
gs
adc
loopne
sbb
pop
pop
test
and
jl
test
negb
insl
fnsave
mov
loopne
ljmp
arpl
cmp
pop
push
and
and
xchg
cld
cmp
jns
add
jp
adc
jo
inc
int3
mov
lds
or
xchg
pop
cwtl
push
jmp
jg
pop
jae
mov
and
call
cwtl
or
scas
xchg
outsb
xchg
xor
mov
rcrl
repnz
dec
in
mov
sti
cmpl
loopne
cmpsb
push
or
pmaxub
js
pop
divl
aas
insl
out
mov
out
clc
push
pop
call
add
in
std
fidivrs
or
in
icebp
bound
push
popf
sti
pusha
xor
mov
lock
outsl
jo
xchg
xor
sbb
sub
std
imul
cmpsb
push
mov
ss
les
and
ds
lcall
jg
xor
andb
adc
push
cltd
jbe
xor
scas
pop
out
bound
jmp
in
stos
sbb
add
and
lcall
sbb
and
xchg
jg
loop
ss
arpl
int
xor
gs
and
int
dec
mov
lret
popf
stos
mov
xor
jg
inc
cmpsl
cmp
xchg
lret
adc
icebp
mov
push
lahf
sbb
add
mov
loope
pop
jg
icebp
int3
ffreep
outsb
pop
push
dec
cmc
xlat
ljmp
and
pop
lcall
mov
testb
mov
stos
fcoml
push
call
imul
test
mov
es
pushf
decb
daa
sti
call
hlt
mov
addr16
out
jle
out
cmp
push
push
jl
xchg
test
mov
les
xchg
in
movsb
cmpsb
and
shr
ds
jge
ficoms
pop
mov
jae
in
scas
dec
cmp
js
iret
mov
cmp
fists
leave
jb
pop
in
mov
call
adc
add
andb
daa
xchg
adc
rorb
out
mov
pusha
or
outsl
repnz
mov
test
testl
lret
sub
cmp
mov
or
and
push
cmp
jno
add
inc
lret
testb
mov
jp
in
loope
adc
aas
aad
dec
aas
std
loopne
loope
call
aaa
repnz
cmc
sahf
sub
aas
insb
nop
int3
andb
mov
adc
popa
in
and
lcall
dec
lods
cltd
push
adc
cmp
mulb
test
or
stc
mov
into
je
addr16
shlb
adc
ja
xor
xor
movswl
sti
pop
in
movsb
cmp
stos
sbb
or
jg
add
add
movsb
aam
add
sbb
in
sti
movsl
loopne
jg
les
gs
jns
add
iret
mov
bswap
arpl
adc
sti
mov
mov
jg
shll
xchg
push
les
loope
insl
repz
cwtl
jle
stos
adc
mov
xchg
xchg
pop
outsb
mov
pusha
insb
cmp
inc
ljmp
mov
pop
sbb
inc
movsl
dec
xlat
lds
inc
push
out
movsb
jb
or
insl
in
jecxz
sbb
addl
in
inc
mov
je
pop
inc
pop
leave
jp
fucomip
and
rcrl
mov
pusha
sbbb
stos
outsb
jl
test
fistpll
lock
mov
dec
push
das
mull
shl
lods
out
cmp
mov
jmp
out
iret
mov
lea
lahf
nop
and
cld
rcll
hlt
xchg
sti
subl
sbbl
sbb
xor
cmpsb
in
xor
xchg
sarb
cli
sub
xchg
loope
pop
cmpl
jne
pop
and
xor
mov
xor
pop
mov
or
cli
push
or
mov
xor
insl
frndint
and
fimull
mov
outsl
adc
out
cmpsl
dec
daa
lcall
into
cmpsl
dec
jbe
pop
lods
mov
enter
iret
mov
and
mov
add
xor
mov
sbb
mov
ret
stos
dec
fnsave
mov
jbe
xchg
dec
call
xorl
inc
xlat
fsubl
push
cmpsl
adc
pop
loopne,pt
int
testb
out
inc
imull
jg
js
mov
shlb
xchg
ljmp
testb
flds
pop
xor
adcl
lea
fs
ljmp
loop
addr16
out
mov
fwait
ljmp
push
shl
jno
clc
arpl
pop
xchg
mov
int3
ss
movsb
rorl
mov
cmp
out
pop
mov
push
ja
jnp
adc
mov
stc
inc
add
pop
sbb
je
bound
dec
loopne
in
les
stc
vpackuswb
cmp
pop
fldenv
jg
fldcw
add
pop
aaa
pop
imul
out
mov
cmp
add
sub
add
stos
pxor
cld
jns
mov
ret
mov
out
mov
fs
hlt
pop
std
enter
pop
clc
insb
or
mov
cmpsb
inc
nop
jl
pushf
lcall
jg
lret
dec
test
pop
scas
and
mov
repnz
jne
mov
cmp
fsubr
fs
fdivp
mov
sar
cltd
shrb
mov
rcrl
cmp
sub
cmpsl
mov
dec
mov
iret
es
ds
cmp
call
xlat
fistpl
test
lds
outsb
inc
and
xchg
add
mov
cwtl
fwait
mov
xchg
ja
jae
ror
inc
sbb
cmpsl
sbb
testb
push
mov
pop
sbb
and
fsts
xor
std
movsb
and
adc
loope
mov
mov
into
fucomi
or
mov
repz
cmp
das
cmpsb
push
sub
or
pop
int3
jp
std
push
sub
mov
mov
ss
xchg
je
inc
jb
ret
jo
cmp
mov
lea
mov
push
fisubl
rcrb
add
in
outsb
cmp
fisubl
addr16
iret
lock
mov
mov
and
loope
adc
dec
les
push
cmpsl
push
lods
insl
shll
xchg
and
xchg
jnp
push
jg
in
dec
add
je
sub
outsb
mov
add
mov
and
cli
jge
lds
push
jl
arpl
jae
xchg
test
mov
mov
sub
cmp
dec
sub
dec
jecxz
push
mov
jmp
sbb
ljmp
and
imul
push
push
test
adc
fsubrs
movsb
mov
dec
jg
and
xchg
aaa
or
scas
out
fisubrs
shll
fcomi
pop
shr
pop
loopne
adcl
test
jl
int
loope
incl
into
daa
jle
push
jle
dec
pushf
aaa
mov
test
lods
fidivrl
test
mov
jmp
add
rol
arpl
mov
popa
nop
fidivrs
push
push
pop
in
sbb
out
add
idivl
rcrb
scas
xchg
in
or
loope
andl
mov
nop
int
xchg
adc
dec
pop
fidivl
pop
pop
add
in
pusha
cmp
jne
mov
out
mov
mov
jg
adcl
adcb
or
push
xor
ficompl
sbb
push
push
andl
inc
mov
mov
mov
xlat
inc
loope
jno
dec
test
push
subb
jno
nop
out
adc
ja
dec
push
xchg
xchg
call
stos
mov
loope
and
into
je
daa
outsl
dec
xchg
icebp
or
push
and
mov
ret
ja
aas
push
cwtl
mov
mov
ljmp
int
adc
insl
sbb
sbb
test
push
outsl
sub
negl
dec
lds
jmp
outsl
out
adc
add
jnp
stos
aaa
pop
sti
adcb
jmp
rolb
jbe
int3
orl
sbb
stos
fbld
mov
push
incl
jno
mov
xchg
cmc
ret
pop
cmp
dec
mov
push
pop
adc
in
outsl
fabs
xor
xorl
decl
mov
sahf
rclb
sub
xchg
lds
pushl
data16
sub
push
fs
pop
stc
mov
mov
pusha
aad
outsb
dec
out
jno
pop
inc
sub
mov
sbb
xor
push
je
push
ror
sbb
lret
inc
sahf
sbb
push
and
xlat
mov
test
sbb
pop
in
inc
mov
addb
decl
out
jp
xor
leave
cmc
sbb
loope
sub
lds
sub
aam
lock
adc
scas
mov
xchg
jg
mov
hlt
xchg
xlat
dec
sbb
mov
cmpsb
inc
adc
push
and
or
dec
mov
cmpsl
add
dec
out
mov
jbe
jge
pop
repnz
jle
xor
or
push
mov
jmp
movsb
jmp
scas
iret
jle
mov
jnp
dec
mov
dec
aad
xor
test
jb
mov
mov
jl
shrl
cld
cmp
les
inc
movsl
popa
add
pusha
setle
vmaxps
nop
xchg
js
imull
lea
flds
mov
and
scas
repnz
scas
add
inc
lods
cmp
stc
out
rorb
cltd
lods
jo
xchg
adc
int3
test
es
cmp
daa
add
fdivp
popa
inc
mov
sbb
jae
pop
jl
adc
imul
push
iret
mov
in
inc
pop
cmp
movsb
shlb
add
popf
jnp
cwtl
in
inc
push
sbb
sbb
mov
mov
pop
push
pop
fstps
mov
sub
jg
mov
adc
aam
xchg
sbb
daa
lods
scas
scas
pop
sub
and
sub
das
pop
stos
pushf
push
mov
mov
movsl
and
call
lock
popa
test
popa
stc
xchg
test
rcl
inc
jbe
sub
sub
call
sbb
push
mov
push
xchg
test
xchg
fsubl
clc
jge
fisubrl
js
out
sub
adc
adc
fwait
lds
mov
jnp
outsl
cmpl
loop
jg
jmp
sti
mov
or
mov
push
iret
inc
add
sti
in
and
xor
fwait
sub
mov
dec
cmp
jecxz
jp
in
cmp
data16
iret
loop
adc
std
xchg
inc
mov
addr16
pop
fs
push
ja
mov
mov
rorl
dec
jbe
les
cmpb
neg
add
mov
inc
aaa
popf
pop
mov
hlt
out
sub
mov
repz
shl
mov
xchg
repnz
sti
add
jge
xchg
mov
fisttpl
fnstsw
mov
ret
enter
ja
notb
in
rcll
mov
das
mov
cmp
mov
out
cmp
mov
je
dec
fsubrp
adc
dec
jle
cltd
nop
mov
sub
cmp
pop
xor
pusha
shr
sbb
lds
cmp
jl
push
push
data16
std
xchg
mov
orl
mov
lods
push
aad
inc
inc
dec
out
popa
mov
inc
ja
lods
jne
cmp
jecxz
in
mov
cmovg
push
shr
loope
fisttpl
scas
xor
inc
mov
inc
pop
jp
xor
jo
mov
les
mov
mov
jbe
mov
and
dec
icebp
es
or
in
mov
sbb
add
cmc
pop
mov
aad
jl
cmp
ds
or
inc
popa
sub
or
nop
sbb
jae
sub
inc
out
ret
repnz
mov
cmpsl
data16
inc
mov
sub
or
push
jb
mov
and
xor
pop
push
mov
xchg
xchg
int
clc
mov
or
xor
mov
shl
les
ret
loope
or
adc
in
push
outsb
xchg
push
dec
or
cmp
movsb
lods
fistpl
jg
sub
mov
daa
daa
jp
loope
sbb
and
lea
push
sbb
and
jle
aas
pop
imul
push
xor
sub
out
sbbb
loop
sub
mov
jmp
jbe
xchg
dec
cmp
scas
push
add
sub
jae
aas
or
les
mov
pushf
mov
cmp
push
lock
repz
push
push
dec
inc
adcl
and
jmp
lcall
inc
sarl
mov
nop
push
negl
sbbb
push
rcrb
inc
sarl
mov
nop
insl
gs
jge
cmp
and
xchg
add
dec
and
adc
sbb
test
repz
jnp
cwtl
call
movsl
pop
ss
shr
scas
mov
mov
pushf
movsl
jmp
mov
stc
movsb
sub
cli
fstpt
lods
dec
mov
inc
mov
cs
loop
push
repnz
fsubrl
add
or
jl
mov
and
jmp
je
movsl
imul
ror
mov
mov
repz
jp
out
mov
and
js
dec
mov
outsl
fldt
jle
cmp
sbb
jns
test
popa
pop
mov
xchg
cmpsb
lcall
xchg
add
in
hlt
pop
adc
aaa
testl
jno
jmp
filds
jb
and
lcall
lcall
push
push
imul
sti
jge
or
jae
sub
sub
fnsave
push
aas
call
iret
lcall
loope
jp
pop
ss
dec
dec
addr16
gs
and
aad
icebp
es
shlb
rcrl
fsts
xor
mov
iret
mov
je
insl
mov
mov
loop
movsl
cmp
repz
xsave
inc
push
adc
jle
rclb
insl
push
cld
sti
mov
and
cmp
xchg
fadds
daa
sti
xor
or
das
sub
rclb
clc
cmpb
push
cmp
in
lods
jl
enter
adc
mov
filds
paddq
test
imul
nop
test
aaa
xor
dec
daa
jecxz
shll
cmpsl
mov
fcos
arpl
movsl
pusha
sti
lcall
lahf
add
add
ss
test
and
dec
jp
negb
out
call
pop
inc
das
mov
int
mov
paddsb
mov
pop
js
jne
fidivs
mov
push
cld
rorl
aas
mov
xor
arpl
push
notb
sub
inc
inc
ds
pop
add
mov
sti
sbb
jmp
hlt
cmc
call
outsl
addr16
cli
lahf
adc
in
sbb
fidivl
addr16
testb
jecxz
std
xchg
jo
out
mov
mov
cmp
jne
or
xchg
das
daa
shrb
out
rolb
and
push
pop
lods
dec
aam
cmc
iret
sbbl
mov
popa
lods
cmc
les
mov
push
sti
repnz
mov
cmp
les
sarb
or
dec
int
xor
scas
ja
lock
ja
sub
xor
jmp
inc
jbe
inc
sub
or
adc
pop
add
cmc
push
imul
xchg
mov
psrlq
adc
insb
fs
and
xchg
adc
cltd
or
shlb
mov
or
dec
rclb
cld
sub
testl
sbb
je
pop
mov
test
jg
in
pop
inc
cmpsl
sub
cmp
cmp
sub
or
fwait
insl
iret
mov
movsl
loope
lcall
jno
pop
scas
jl
stc
ficoml
sub
int3
and
xlat
and
sbb
out
inc
insb
hlt
pop
movsl
repz
xchg
jp
rclb
jmp
cmp
mov
out
sti
shrl
xor
mov
fidivrl
mov
lea
cli
imul
cmpsb
and
subl
pop
mov
mov
idivl
pushl
cmp
lret
mov
loop
pop
jno
repnz
ret
clc
jecxz
mov
shl
leave
pop
mov
repz
testb
pusha
fbstp
lock
cltd
or
stc
into
add
jae
data16
js
mov
repnz
insl
arpl
enter
push
sbb
shll
in
push
push
inc
xchg
popf
mov
inc
and
xor
repz
cmp
mov
dec
push
int3
mov
xchg
inc
jns
pop
cwtl
xchg
pop
test
or
adc
and
cmp
inc
lcall
cmc
push
jnp
and
iret
and
lods
cwtl
outsl
cmc
pop
adc
mov
lret
pop
mov
or
mov
stos
repz
popa
scas
pop
pusha
repnz
lret
in
dec
cli
mov
movsl
xor
sub
mov
sbb
test
mov
jo
mov
or
clc
orl
bnd
adc
bound
fcompp
xchg
adc
lret
xor
out
inc
cmp
divl
aaa
push
or
xor
imul
lock
and
cld
mov
jg
jg
push
jmp
or
out
add
sbb
push
fprem
adc
cmp
xchg
pushf
cmp
mov
xchg
cmp
gs
inc
mov
loop
enter
xor
nop
imul
or
mov
fldl
push
lds
xchg
sbb
icebp
enter
cld
xlat
push
in
cmp
repz
jns
mov
fcmovbe
ljmp
jl
jno
pop
jno
or
dec
xchg
stos
hlt
loopne
xchg
adc
stc
mov
cs
sbb
ds
pop
insl
pushl
inc
push
pop
sub
jg
nop
roll
mov
cmc
ds
mov
filds
packssdw
jl
cltd
in
and
fmull
aad
push
dec
inc
mov
insb
sbb
push
mov
lock
mov
jecxz
push
xchg
flds
adc
mov
dec
and
xor
pop
adc
insl
out
add
mov
and
cmc
or
insl
movb
movsb
leave
test
mov
int3
jnp
inc
icebp
mov
lret
push
add
mov
pop
mov
outsl
sti
mov
jl
fs
push
cmpsl
add
out
jb
inc
lcall
fldenv
aas
pop
mov
adcl
mov
jl
in
xchg
icebp
xchg
jecxz
or
jns
inc
ja
xchg
fdivrs
popa
icebp
add
shll
mov
mov
dec
mov
jp
xchg
xchg
xchg
imul
imul
and
in
fistpl
ja
ret
add
sti
and
sti
inc
or
xor
adc
loopne
jo
mov
cvttps2pi
dec
jne
enter
sbb
insl
adc
shlb
rcr
adc
in
xchg
out
jmp
iret
jno
sub
fdivrs
add
mov
inc
jp
fldl
clc
xor
push
jg
stc
sbb
lahf
lcall
mov
mov
and
push
inc
xorb
and
push
les
jmp
and
sub
testl
inc
inc
ds
lock
jge
leave
or
xor
stos
sub
lods
xchg
lock
je
jb
mov
out
js
daa
xor
leave
rcr
mov
mov
inc
xchg
dec
cmp
jge
push
xchg
leave
lock
cltd
push
int
push
mov
mov
jns
jo
ficomps
leave
or
jge
inc
jg
out
or
jle
daa
add
sub
cmp
stos
je
adc
lahf
enter
pop
and
adc
xchg
or
das
push
adcb
stos
push
add
and
lahf
ret
data16
mov
lea
pop
in
data16
outsb
inc
test
adc
jge
dec
daa
orl
or
adc
outsb
mov
mov
xchg
adc
fxch
leave
call
dec
sbb
sub
lods
divl
xchg
push
std
fsub
mov
dec
jo
jno,pn
pop
fs
fucomip
push
leave
rorl
mov
inc
shlb
fisubrs
addl
test
add
jl
jl
and
cld
divl
call
push
aad
sub
xchg
inc
icebp
add
push
dec
lods
cmp
bound
hlt
pop
jno
hlt
mov
and
sbb
and
jge
nop
pop
imul
mov
jb,pt
movl
mov
mov
push
jae
divl
mov
les
rol
pop
mov
xchg
mov
lret
lcall
test
fsubl
jg
xor
xor
pop
pop
xchg
add
lock
ljmp
cmp
loop
mov
sub
popf
int
xor
aaa
inc
mov
and
roll
mov
inc
jge
sub
subl
jnp
mov
pop
cmp
jo
mov
out
xchg
mov
loop
repz
shrl
jns
xchg
jo
movsbl
inc
add
cmovle
xchg
mov
or
mov
push
out
cmc
add
call
insb
mov
les
insb
arpl
jo
push
outsb
ja
sbb
cmc
jno
in
inc
aas
loope
shlb
push
das
fistpl
enter
mov
jge
js
xor
mov
bound
xor
sbb
mov
adc
jmp
daa
aaa
out
in
fisubrs
adc
add
in
cmovno
push
ljmp
adc
cs
lcall
mov
js
jo
fiaddl
mov
cmp
loope
mulb
popa
es
fnstenv
test
ret
flds
les
test
jg
cmpsl
add
jo
rclb
jecxz
ret
daa
jno
jecxz
daa
and
dec
stc
ljmp
xor
imul
sbb
mov
in
rol
mov
stos
jb
dec
mov
das
pop
or
mov
jae
and
je
or
or
cwtl
pop
data16
mov
std
dec
xchg
jb
int
es
movsl
mov
pop
dec
cwtl
loopne
jge
push
adc
pusha
pop
jae
cmp
jge
sarb
or
data16
cmp
out
insl
and
fidivrs
ja
jle
add
add
mov
fstps
out
push
push
mov
push
scas
addr16
imul
scas
ss
jle
cld
roll
pop
pushf
mov
xor
mov
mov
mov
repz
aam
imul
mov
cltd
xor
adc
movsl
add
mov
loopne
lods
popa
dec
fucomip
ror
adc
xor
xchg
out
jp
adc
rorb
pop
or
popf
pop
lret
xchg
test
js
fnstenv
pop
aam
jmp
adc
mov
in
cmp
inc
mov
into
mov
push
lret
in
jne
js
cmp
sti
dec
push
js
mov
push
or
cld
inc
out
hlt
loop
lock
jl
cmp
lds
xchg
fwait
and
test
pop
pop
scas
dec
mov
xchg
xchg
sbb
int3
fdiv
or
out
out
call
js
inc
lea
out
jbe
cmpsl
sub
hlt
rorb
sbb
add
mov
lea
pop
mov
pop
or
repnz
mov
clc
sti
add
mov
lea
std
dec
js
leave
sub
mov
mov
xchg
loopne
repz
shrl
jbe
mov
subl
andb
jnp
in
mov
lret
mov
sarb
sbb
into
mov
icebp
nop
xor
lcall
xchg
js
sub
cs
call
sbb
xchg
imul
dec
lods
shll
pop
sbb
jne
pop
pop
sbb
icebp
add
xchg
jmp
pop
pop
movsb
pop
ja
fdivp
and
and
cs
ja
inc
jne
cs
imul
scas
lret
or
xlat
push
aam
in
mov
jmp
pop
pop
jl
pushl
mov
mov
scas
les
movsl
xlat
shrb
mov
mov
mov
scas
enter
xlat
cs
scas
mov
jge
jmp
mov
xlat
into
cs
mov
jmp
cs
jmp
pop
pop
popa
jne
test
shrl
mov
scas
mov
mov
mov
ja
aas
xorb
or
mov
mov
in
loopne
cmc
fstpt
adc
iret
pop
inc
pop
stc
bound
xor
inc
cwtl
xchg
mov
xchg
and
adc
cmpsb
out
mov
nop
sbb
push
outsb
add
cmp
sarb
push
mov
mov
ljmp
aas
inc
mov
inc
inc
in
arpl
xlat
rcrl
mov
push
repz
mov
xor
imul
fadds
fwait
pop
mov
mov
lods
lcall
jp
xchg
cs
pop
mov
pop
xor
stc
pop
mov
lock
pop
pop
jl
subb
and
ret
xchg
sbb
and
mov
inc
mov
out
mov
bound
cmpsb
add
stc
sbb
sbb
xor
shlb
inc
mov
mov
jb
xor
ds
les
push
loope
out
pop
jo
negb
pop
push
jo
sbb
xchg
jnp,pn
add
pop
or
mov
cmp
xchg
mov
les
bound
scas
mov
sbb
fadds
cmp
fs
mov
outsl
adc
test
das
outsl
mov
inc
mov
ret
mov
into
sti
mov
dec
addr16
cmp
jl
sub
adc
leave
pop
adc
cmc
sti
pop
sbb
cmc
popf
das
fnstenv
arpl
jae
mov
sbb
imul
jmp
sub
cltd
fsubp
mov
icebp
mov
mov
icebp
stos
jecxz
mov
insb
mov
loope
fdivr
cwtl
pop
repz
roll
jge
lods
lods
mov
clc
jmp
sbb
test
cmp
sbb
in
xchg
add
test
jge
enter
xchg
pop
inc
daa
test
std
sbb
mov
lret
ljmp
xor
xor
xor
mov
dec
imul
popf
jns
mov
jmp
xor
pop
fidivrs
sbb
sbb
aaa
mov
loopne
mov
mov
loopne
nop
push
mov
int
jne
popf
pop
aas
jmp
adc
wbinvd
popf
add
test
mov
pop
test
sbb
iret
add
jmp
jmp
icebp
xchg
adc
add
ret
xchg
in
and
daa
nop
cli
call
jno
out
adcl
and
cmp
push
and
aam
mov
add
popa
clc
sbb
pop
daa
icebp
rcr
lods
jnp
ror
adc
push
mov
mov
sbb
xor
ret
adc
or
sbb
loop
mov
divb
outsb
arpl
scas
dec
push
cmc
cmp
lds
and
xor
xor
daa
fisttpl
icebp
pop
aas
xor
test
imul
arpl
mov
xor
lret
pop
lcall
xchg
cli
sahf
jg
repnz
jmp
cmp
out
je
pop
mov
jae
or
jle
imul
les
push
adc
lret
stc
adc
in
sbb
push
mov
fistpll
lret
mov
inc
mul
lods
sbb
jb
scas
jnp
push
aad
pop
dec
dec
pop
xorl
and
mov
fidivrs
fdivs
mov
ss
jo
cmp
push
fdivrs
pop
add
sahf
lret
jp
inc
sbb
mov
data16
fs
sbb
sub
pushf
push
pop
hlt
adc
jnp
ret
or
outsl
sbb
shlb
mov
xor
test
pop
pop
fisubrs
mov
outsb
xor
xchg
mov
add
xchg
incl
jnp
jecxz
push
push
not
rolb
lods
outsb
mov
inc
aas
xchg
xchg
dec
inc
cltd
jge
aaa
iret
pusha
ss
fadd
fidivl
scas
mov
cmp
inc
inc
pop
cmp
xchg
loope
pop
sbb
js
outsl
aas
jnp
ja
jg
add
arpl
fnstcw
cltd
cmp
xchg
or
cld
jne
cli
ds
and
fdivrp
lret
add
mov
pop
pop
jle
and
add
enter
adc
add
lcall
xchg
sbb
dec
fdivr
ret
fwait
sar
out
or
into
inc
arpl
xor
xlat
push
dec
lret
or
out
jb
je
pop
mov
adc
or
mov
xchg
incb
jae
adc
popa
mov
repnz
push
xchg
or
fcmove
mov
ja
mov
jmp
mov
aas
mov
pusha
imul
mov
pop
into
into
arpl
xor
xchg
clc
shll
scas
pop
sbb
ret
js
mov
daa
in
ret
cs
out
out
sbb
sub
cmp
push
cmc
fwait
js
push
sbb
scas
in
xlat
out
mov
fs
leave
roll
shll
mov
or
loope,pt
jmp
loopne
adc
mov
scas
ss
notb
mov
pop
imul
fsubrs
mov
sbb
jmp
popa
sbbl
repz
mov
mov
dec
lods
pop
into
pop
sub
push
jle
jnp
out
cs
sbb
mov
lock
subl
cmp
pop
mulb
je,pt
cmp
and
mov
pop
arpl
mov
mov
mov
jno
jbe
scas
mov
scas
fsub
fsts
std
fdivs
addr16
add
xor
das
subb
arpl
popa
cmp
mov
lcall
sbb
xchg
dec
es
or
jne
sbb
addl
pop
lods
cwtl
aad
or
inc
xchg
inc
in
jb
push
push
dec
lock
lods
adc
mov
popa
out
pop
cmpsb
repz
push
es
es
xchg
test
rcl
into
push
test
sbb
jp
mov
loope
aad
adc
pushf
daa
push
cld
out
xchg
pop
sbb
mov
jge
call
aaa
gs
adc
pop
ret
inc
and
lods
dec
push
je
jno
lahf
cmc
pop
jp
not
add
pop
js
cli
inc
call
jbe
lods
dec
sub
pusha
cmp
loope
fisubrs
fwait
movsl
or
sbb
movl
mov
pop
imull
dec
call
aas
jnp
ja
lea
xlat
push
mov
push
mov
test
into
inc
lret
xchg
std
stos
add
scas
sbb
inc
sbb
das
fidivs
cmp
es
rcll
ret
jecxz
pop
stos
push
sbb
adc
insl
sti
sbb
xchg
pop
cli
incb
ljmp
mov
insl
jbe
test
sbb
test
call
std
jmp
lret
pop
sbb
insb
and
ss
mov
test
sar
sub
dec
rolb
sbb
lea
dec
aad
pop
lahf
loop
fwait
mov
pop
jl
dec
ljmp
or
cmpsb
sub
jg
cld
daa
adc
fildl
pop
adc
pop
ljmp
icebp
and
mov
pusha
in
imul
push
aad
sbb
jg
dec
push
pop
jmp
sti
mov
mov
fs
pop
mov
iret
shlb
mov
aad
mov
test
inc
lock
sar
xchg
xorb
pusha
aam
and
push
mov
ja
pop
mov
mov
nop
aad
and
mov
sbb
adc
stc
xor
inc
cld
and
mov
sarb
sbb
or
cmp
mov
sbb
cmp
sub
repnz
mov
int
add
mov
lahf
ss
pop
icebp
rcr
pop
mov
lods
xchg
adc
out
mov
pusha
pop
pop
or
add
out
divl
int
add
sahf
scas
mov
cmc
sbb
push
jne
xlat
or
in
push
aam
mov
sahf
pop
jl
push
hlt
dec
sub
mov
and
ret
xchg
push
es
imul
xor
mov
add
inc
dec
xor
pushf
ja
push
setg
cmpsl
jne
loopne
cld
lods
clc
adc
xorl
insl
test
mov
xchg
xchg
es
jnp
aaa
pop
pop
jae
daa
stos
cmp
aaa
cmp
cmp
inc
jmp
and
pop
movsl
in
xchg
outsb
aas
or
add
imull
in
scas
inc
push
push
stc
int3
cwtl
lahf
aas
jmp
lock
sub
pop
stos
ret
or
jg
sbb
ret
pop
mov
push
dec
xchg
push
dec
push
sti
dec
cmp
add
xchg
jnp
or
jge
nop
std
fisubrs
push
lret
jl
jl
shr
movsl
rorb
and
frstor
subl
aaa
sbb
mov
xchg
fisubrs
xor
fwait
test
sbb
sbb
mov
or
das
repz
mov
pop
and
ret
mov
lea
mov
cmpsl
mov
add
mov
mov
sbb
mov
xchg
lret
mov
aad
xor
xchg
inc
xchg
pop
push
add
pushf
push
xchg
int
sub
pop
mov
mov
in
and
adc
fimull
lret
mov
ret
test
mov
mov
mov
jne
xor
rcrl
bound
clc
loopne
push
mov
shrl
lods
or
cmp
insl
pop
pushf
fildll
inc
adc
mov
adc
xchg
adc
pop
inc
mov
lahf
push
ljmp
mov
jg
fdivrp
lods
push
out
cmc
xor
shll
iret
lods
gs
fwait
in
jbe
push
cwtl
in
lahf
mov
movsl
popa
dec
mov
sbb
popf
sub
adc
cwtl
jmp
loop
jp
inc
mov
dec
lret
xor
rcr
imul
dec
mov
aam
sub
clc
ret
lods
outsb
push
shr
outsl
stc
pop
pop
popf
dec
stos
cmpsl
or
imul
pop
sub
mov
and
call
sbb
or
pop
ljmp
xchg
sti
stos
daa
xorps
fidivrl
push
pop
adc
subl
arpl
xchg
in
mov
stc
xlat
in
pusha
push
sbb
fists
mov
inc
pop
ja
sub
or
fdivrs
shrb
lahf
jno
push
adc
nop
ja
sub
dec
test
imul
lret
in
test
sub
insb
push
std
adc
mov
mov
lret
mov
lahf
add
cmpsb
push
sbb
or
loope
sahf
lret
int
sarb
popl
test
sub
mov
sbb
popa
jl
sahf
pushf
shr
orb
xor
clc
mul
mul
jb
dec
imul
jecxz
data16
ror
test
and
lods
lcall
add
xor
and
ja
jne
lock
dec
or
or
lcall
pop
hlt
cmp
jp
dec
xlat
xor
mov
xor
mov
sbb
in
aaa
xchg
test
ss
xor
cmp
cmp
sbb
pop
adc
mov
mov
pusha
sbb
repz
call
jle
fcomps
hlt
cmp
lods
scas
fidivrl
cmc
mov
jb
jecxz
insb
aaa
das
push
adc
aaa
cld
fs
jmp
outsb
jge
pop
sbb
mov
insb
mov
lock
jns
pop
fadds
das
adc
int
rcl
xor
push
and
mov
into
arpl
xchg
dec
stc
cmc
loopne
cli
add
ljmp
lods
jl
sbb
pop
ffreep
arpl
cld
jl
adc
ss
add
inc
inc
cmp
inc
loopne
ficoms
js
out
stos
rorb
jle
les
mov
or
rcr
mov
pop
addb
shl
test
dec
popf
inc
nop
scas
push
dec
iret
pop
stos
pop
mov
jae
mov
sbb
xor
insb
scas
sti
dec
fs
add
xchg
sarl
fucomi
push
mov
cmp
dec
clc
fdiv
divb
divl
or
push
jno
jmp
mov
mov
fdivrs
outsb
lods
pop
loopne
jmp
pop
xor
adc
rorl
scas
idivb
out
in
popf
lahf
fldlg2
pop
mov
mov
jmp
divl
out
dec
mov
arpl
dec
cli
fiaddl
mov
sub
int
cmp
add
jnp
jns
movl
in
mov
pop
shll
mulb
call
mov
cmp
arpl
jmp
jae
jecxz
pop
in
clc
addr16
repz
cmc
pop
mov
push
clc
jmp
xchg
xchg
out
lods
jg
jae
in
add
inc
dec
mov
in
lock
mov
push
sti
mov
notl
hlt
into
mov
icebp
mov
dec
ja
testl
je
scas
jae
mov
ror
dec
test
cli
lahf
mov
pop
xlat
push
fsubl
outsb
out
iret
pop
push
es
arpl
loop
mov
out
out
and
scas
jae
mov
jl
jecxz
pop
push
leave
sbb
mov
in
out
push
pop
push
out
xor
addl
jne
lret
push
lret
in
inc
shll
daa
or
sbb
sub
jne
and
ret
test
xchg
jmp
js
loope
outsl
xchg
jne
test
leave
mov
das
ds
fs
mov
hlt
mov
aam
mov
inc
jnp
fisttpll
sbb
test
xor
pop
xlat
and
cmp
sqrtps
pop
push
mov
orb
loope
ret
ficoml
lfs
das
push
mov
inc
xorb
pop
push
ds
das
js
mov
js
add
outsb
push
int3
cwtl
cs
sbbl
pop
out
adc
pusha
pop
cltd
clc
dec
inc
mov
movsl
arpl
rclb
pop
cli
jae
add
add
rol
xor
mov
lods
mov
shl
loopne
pop
add
aam
push
cmc
push
lock
imulb
xorb
mov
pop
ficompl
xchg
jnp
mov
movq
pusha
test
les
cmp
adc
mov
in
xchg
sub
fidivrs
pop
inc
stos
push
gs
movsl
inc
fbstp
pop
inc
daa
rclb
rol
ficoms
gs
push
sbb
bound
ret
insb
ret
cmc
popa
xchg
adc
into
push
sbb
lea
addr16
nop
sbb
adc
std
xor
stos
xor
dec
mov
mov
aaa
je
jo
insb
loope
cmpsb
outsl
repz
pop
add
stc
aaa
lcall
sbb
inc
adc
jg
arpl
pushf
inc
out
iret
xor
aas
jb
jo
js
xchg
stos
or
loop
std
daa
mov
hlt
cld
test
cmc
pop
sub
out
fstpt
scas
jmp
fstpt
lods
lds
or
inc
dec
out
fwait
push
shr
sarl
ds
shrl
pop
cmc
bound
cmc
cmp
fisubs
push
clc
ss
int
xchg
blcic
in
aaa
cmp
inc
cmp
lret
ds
mov
jb
in
stos
test
xchg
fiaddl
push
jns
xchg
xor
xchg
shl
mov
inc
dec
and
ja
and
push
push
lret
xchg
inc
sub
ljmp
push
dec
lods
cmpl
push
lret
xor
cwtl
add
push
cli
sahf
clc
jmp
add
das
aas
pushf
push
das
mov
inc
dec
fisubrs
add
mov
out
ss
push
ja
subl
adcl
iret
inc
and
popf
mov
jbe
iret
ljmp
mov
mov
in
shlb
cmpsb
mov
lods
clc
add
pushf
lret
cwtl
or
aas
jl
fwait
out
mov
inc
cmc
add
mov
repnz
sub
aam
inc
dec
out
outsl
testl
aaa
cli
and
push
orl
mov
dec
push
clc
cwtl
jp
out
dec
jle
cmp
sub
das
pusha
xchg
xor
cli
sbb
int3
adc
out
xchg
pmaxub
inc
outsb
sub
aas
jp
inc
stos
std
cmpb
and
cmp
cmp
pusha
mov
gs
inc
data16
scas
or
push
or
pop
cmp
cmp
jb
adc
pushf
clc
pop
outsl
xchg
dec
push
mov
cli
into
testb
add
cmc
out
popa
stc
ljmp
lods
dec
xor
cmpsb
adc
fiadds
jp
cmp
iret
mov
mov
test
fxch
sub
mov
push
dec
stc
adc
and
popf
stos
cmpl
dec
outsb
mov
jle
lods
pop
out
pop
clc
inc
scas
fistpl
dec
jg
pop
mov
sbb
xchg
adc
xchg
out
xor
mov
xchg
mov
loope
cli
mov
adc
notl
incl
int
sbb
inc
aas
lret
repz
std
or
daa
adc
jl
jg
fisubs
movsl
jmp
into
aaa
iret
and
xor
repnz
pop
mov
out
or
cmp
cld
xor
andb
scas
dec
mov
insb
pop
loop
into
cmp
popf
pushf
test
or
xlat
jp
xor
out
xlat
xor
cltd
inc
out
test
mov
inc
cmp
push
fstl
js
jecxz
xor
imul
mov
addb
ret
xor
test
cmpsb
cli
das
push
in
fisubrs
lret
pop
mov
push
mov
test
mov
and
jecxz
jle
fcomps
cmpsl
mov
sti
xor
imull
mov
push
fidivrl
dec
dec
mov
lret
insb
adc
dec
dec
dec
cwtl
and
jb
cmp
aad
mov
ljmp
xchg
aaa
out
cltd
je
test
push
loop
mov
sub
decb
push
add
inc
xor
in
cwtl
cmpsb
cmp
pop
push
sbb
ja
jno
test
jecxz
test
mov
scas
lahf
into
cwtl
jno
stc
into
sar
adc
inc
pop
fists
lret
dec
mov
fstpl
les
bound
sbb
cmp
sti
dec
add
cmp
or
out
rcll
push
cs
sub
xchg
cld
and
cmc
push
iret
popf
cs
add
dec
imul
jbe
fcoml
push
cmc
stc
clc
add
jg
lahf
out
cmc
dec
lcall
pop
aaa
and
incl
movsl
and
or
sub
adc
jae
insb
xchg
adc
loop
mov
lods
mov
fmulp
and
and
mov
repz
xchg
sbb
push
insb
pop
test
lret
jno
adc
pop
mov
sbbb
enter
dec
xchg
in
push
loopne
xor
sub
ret
inc
inc
jae
fcomps
jg
mov
mov
out
fistps
lock
add
lods
xchg
mov
outsb
and
aaa
and
dec
push
inc
test
fs
icebp
repnz
lods
cmpsl
xchg
bound
mov
push
pop
imul
add
jl
pcmpgtd
jne
cmp
mov
in
mov
cmp
push
shrb
mov
jl
add
jnp
ret
pop
cwtl
mov
lahf
call
xor
fcoms
push
xor
scas
aas
xchg
or
adc
pop
push
test
ret
push
pop
outsl
das
pop
pop
cli
addr16
enter
dec
mov
outsl
int3
xlat
in
out
xor
shlb
inc
push
xor
call
push
xchg
cmovge
ljmp
xchg
out
jl
pop
cmp
outsl
repz
cli
daa
or
pop
fimull
jae
mov
xchg
stos
jge
int3
fadds
fbld
xor
pop
mov
or
xor
add
cld
rorl
inc
lret
mov
xor
dec
dec
cld
or
pop
push
xlat
mov
cmp
inc
das
add
push
pop
jle
cmp
mov
icebp
out
incl
or
orl
rolb
mov
pop
jp
sbb
xchg
or
adc
pushw
bnd
push
mov
xor
cmp
int
jg
push
mov
sahf
shlb
rclb
test
test
cmc
js
das
loop
orb
jmp
jne
add
rcrb
jae
adc
xchg
mov
stos
mov
xchg
sti
iret
stos
jle
sarl
jne
std
push
lret
scas
gs
xor
cmp
shrb
xchg
mov
dec
in
pop
movsl
push
in
leave
movsb
jmp
ret
repz
repnz
mov
lret
stos
and
jb
xchg
cmc
sbb
ja
aad
and
pop
aam
mov
aam
pop
lds
pop
cli
xchg
push
or
adc
xor
pop
lods
mov
jp
xchg
nop
mov
cmp
outsb
cmp
ljmp
mov
enter
imul
in
lret
lods
fisttps
mov
xchg
mov
jecxz
es
aas
in
cmp
xchg
jge
dec
imul
jge
imul
ja
fwait
pushf
jecxz
jge
jo
fsubrs
scas
mov
pop
scas
pop
adc
rcrl
inc
fadds
testl
int
frstor
mov
aam
xor
ljmp
mov
add
mov
xchg
push
loop
mov
push
fmuls
mov
mov
cmc
dec
or
jae
dec
xchg
lock
mov
decb
sti
xchg
out
test
xor
loop
ljmpw
sub
sarl
stos
push
push
pop
lods
aas
pop
scas
inc
insb
fadd
mov
push
push
sbb
popa
repz
xchg
xchg
and
mov
mov
jbe
jbe
scas
pop
stc
call
stos
stc
ret
pop
xor
add
sbb
mov
mov
push
pop
mov
push
or
dec
add
jo
xchg
jbe
pop
xchg
in
adc
scas
mov
fsubl
or
inc
xor
sub
je
sbb
xlat
loope
xor
out
push
int3
ljmp
jge
cli
cltd
lret
ljmp
ret
call
lock
inc
int3
push
scas
in
mov
add
jns
dec
fisttps
inc
jmp
jecxz
out
inc
int
jecxz
shll
clc
mull
pusha
mov
in
push
test
sbb
idiv
push
inc
dec
imul
in
notb
int
popf
in
test
jbe
xor
icebp
or
jnp
inc
pop
jns
cmp
inc
mov
mov
je
sahf
jb
adc
jns
and
xor
test
inc
lret
out
cmp
inc
mov
cli
and
and
dec
mov
divb
pop
decb
dec
sbb
cmc
cmpb
clc
sbb
mov
mov
jns
movsb
dec
icebp
sub
cltd
add
mov
cli
es
add
popf
mov
call
mov
mov
mov
movb
dec
into
pop
jbe
xor
pushf
pop
in
fidivs
sub
push
lods
xchg
leave
test
iret
pop
xchg
sbb
dec
sub
cmp
xor
xor
daa
xlat
je
clc
pop
aas
xchg
jecxz
xchg
dec
cltd
test
cltd
add
shrb
ja
mov
jo
jb
lahf
push
sbb
js
das
mov
popa
push
mov
jl
or
inc
shrb
cmp
das
fisubs
cmp
mull
cmp
testl
movsl
lds
repnz
mov
sub
push
mov
sub
mov
fistl
and
sub
mov
fldl
aas
push
jmp
daa
jg
jg
rolb
popf
popf
or
inc
stc
out
xchg
jmp
inc
xor
add
jle
insl
mov
loopne
mov
insl
or
xchg
push
jecxz
and
cmp
cmp
and
xchg
and
fdivrs
popf
and
xor
vmovaps
pop
mov
xchg
loopne
test
mov
imul
lret
in
out
aaa
dec
dec
jo
mov
dec
push
inc
mov
rol
sbb
inc
sbb
mov
roll
out
xor
mov
loopne
jmp
add
repz
rorb
into
mov
divl
cmp
mov
jle
pop
out
sar
ficomps
pop
test
in
add
out
gs
pop
popf
lock
jae
imul
pushf
lahf
mov
ds
aas
cmp
push
jl
dec
repz
xchg
icebp
xor
cmpsb
lahf
test
jnp
mov
rcr
stc
and
cld
in
push
jbe
jg
push
fbstp
xchg
nop
pop
or
loopne
lahf
cltd
xchg
jge
xor
test
js
mov
je
rcll
push
jle
or
pop
mov
jnp
jge
cmpsb
ja
mov
shlb
test
pop
mov
jmp
or
stc
adc
lahf
adc
out
in
adcl
add
outsb
sub
jne
jecxz
cmp
outsb
xchg
ljmp
data16
mov
ret
add
pop
aad
repz
aaa
xchg
jmp
icebp
add
mov
call
lahf
out
sub
inc
xor
mov
and
enter
inc
bswap
repnz
and
cmp
int3
pop
xor
testl
add
popf
out
into
push
xchg
xchg
hlt
movsb
xchg
sub
std
xchg
lret
in
mov
jmp
mov
test
fsubrs
sbb
cltd
xchg
ficoml
xchg
out
sti
lds
ja
out
fwait
es
jmp
divl
aad
lods
aas
fistpll
pop
cmp
mov
inc
pop
cs
fcompl
mov
shr
cwtl
mov
cmp
mov
or
lock
stos
sbb
xor
cmp
mov
loope
push
mov
mov
inc
push
fldcw
das
lea
pop
dec
cmp
iret
test
xor
aaa
xor
jnp
adc
cmp
sar
mov
xor
popf
dec
frstor
out
fstpt
sbb
sbb
pop
add
or
jg
fucomip
mov
jbe
aas
mov
ret
mov
insb
mov
push
ja
stos
popa
pusha
xchg
inc
mov
fdecstp
das
je
fsubl
aas
in
mov
lahf
nop
dec
out
lret
mov
lret
arpl
lock
dec
ljmp
pop
push
sbb
inc
mov
dec
mov
dec
nop
test
mov
mov
fucomp
js
outsl
xlat
sub
data16
dec
pop
mov
out
aas
cmc
add
jo
pop
aas
pop
psubusw
mov
jns
out
mov
lret
aam
scas
je
push
pop
push
sub
daa
imul
adc
lods
or
mov
cmp
out
in
popf
daa
mov
push
lret
push
add
in
add
cmc
lock
lcall
mov
aaa
mov
push
lods
sbb
mov
int3
fs
jmp
sbb
imul
pop
mov
stos
in
push
jecxz
mov
and
sub
jp
jl
xchg
push
add
dec
cmp
mov
repz
mov
out
nop
mov
or
sbb
sub
in
data16
jle
outsl
jbe
lods
stos
leave
xchg
movzbl
push
mov
sahf
mov
popf
dec
jle
std
jmp
pop
jp
pop
add
sti
ja
stc
cmp
sbb
jo
push
lret
cld
mov
scas
sti
es
mov
adc
xchg
dec
in
stc
cmp
cld
stos
jns
mov
push
repz
adc
jg
sub
cmpsb
xlat
or
shrb
jno
outsl
pop
jnp
dec
jg
mov
cmp
or
in
dec
push
stos
xchg
in
aam
pop
sbb
jmp
jp
push
mov
push
sarb
add
pushf
mov
cmpsb
ljmp
xchg
idiv
sub
add
sahf
pop
add
test
fdivl
call
mov
es
ljmp
dec
les
mov
sub
incl
es
mov
ljmp
jnp
inc
flds
ds
push
lods
mov
pop
inc
pop
in
pushf
jge
fwait
dec
push
push
xchg
cwtl
jb
cltd
push
adc
cli
test
xchg
scas
stos
rcrl
xlat
movsb
mov
fnstenv
cmpl
out
subb
push
rcrb
das
leave
test
or
sub
jmp
dec
add
in
fimuls
repz
adcl
and
cmc
dec
enter
or
shlb
sti
dec
mov
cmp
shlb
flds
or
lret
push
cmpsb
nop
jl
and
mov
ds
jmp
js
mov
mov
hlt
neg
movsl
iret
lret
mov
data16
arpl
mov
or
in
mov
cmp
cvtpi2ps
sbb
push
loopne
pop
push
fiadds
lods
mov
out
cmc
aaa
repz
repnz
sti
in
pushf
lcall
popf
cmpsl
xchg
loopne
mov
bound
jl
adc
filds
mov
cmp
testl
lea
icebp
ret
xchg
mov
cmp
cmp
pop
cmp
iret
lret
cld
mov
adc
push
inc
and
and
jns
jne
sarb
push
enter
push
dec
cmp
mov
xchg
xchg
push
fistpl
mov
jb
iret
aas
xchg
and
out
fiadds
mov
mov
pushl
inc
ljmp
fidivs
fcomps
fisttps
jp
cmp
test
hlt
jmp
repz
mov
addb
cmc
inc
jno
sbb
jecxz
jmp
dec
daa
add
testb
mulb
or
movsb
loop
pop
pop
cmp
outsl
sbb
jge
lret
addr16
xchg
xlat
cmp
xchg
pop
jge
or
stc
in
imul
rol
mov
pop
insl
add
cs
aad
mov
mov
pop
out
xchg
jbe
les
sti
fisttps
inc
in
ss
jle
and
ljmp
or
fists
jp
shrb
sub
test
roll
mov
loopne
pushf
xchg
xor
xor
into
xor
rorb
mov
xorb
imul
inc
nop
fsubr
mov
ja
sti
mov
clc
jp
xor
cwtl
and
fdivrs
lods
fwait
push
out
daa
xor
push
test
lret
jge
pop
in
add
out
imul
cs
stc
loopne
cmp
pop
jg
orl
and
out
push
push
call
add
das
add
lea
jecxz
test
push
scas
outsl
mov
pop
sub
cmp
pop
jl
in
push
fadd
and
pop
mov
dec
hlt
aad
ror
aas
outsl
xchg
inc
hlt
jge
scas
aad
mov
mov
iret
and
div
je
arpl
and
cmc
xlat
xor
enter
push
and
arpl
pop
lret
mov
sub
xchg
mov
fldenv
dec
jne
jle
stos
mov
nop
xor
inc
xor
mov
mov
pusha
jl
xchg
lods
loop
sbb
fisubl
xchg
push
push
lret
adc
or
stc
mov
lret
loope
lcall
jl
jnp
mov
pop
pop
mov
insb
cmp
filds
cmpsl
test
jecxz
icebp
test
dec
int3
lea
sub
jp
test
ja
inc
cld
je
shrb
scas
repz
fildll
mov
pop
mov
jnp
cltd
ret
mov
addr16
jno
or
push
aaa
fs
mov
imul
push
lahf
xchg
rcr
cmp
pop
sub
mov
out
xor
cs
push
sbb
mov
rcr
imul
pop
fists
sbb
pop
mov
xor
cmp
adc
std
out
bound
dec
lret
jmp
test
and
xchg
pusha
daa
mov
pop
cmp
into
jno
divb
mov
mov
xchg
jge
int
or
xor
fisttpll
lock
mov
mov
jbe
inc
fdivrp
mov
cld
pop
pusha
cmp
sub
out
int3
lahf
dec
mov
and
jbe
mov
mov
mov
and
cmp
test
in
out
inc
call
addb
in
cmp
mov
push
mov
push
dec
push
lahf
inc
hlt
inc
jo
imul
adc
ds
mov
cmp
adc
sub
mov
mov
sti
ret
dec
mov
jno
sahf
push
popf
addr16
pop
jle
jne
lds
out
cmpl
sbb
out
mov
push
and
push
fwait
xor
push
scas
push
das
adc
stos
das
lahf
xor
push
or
push
inc
xchg
push
out
pushf
jne
pop
ret
mov
push
xlat
hlt
fnstcw
pop
and
jmp
out
or
gs
popf
cmp
data16
dec
das
imul
jae
sub
and
scas
jle
cmp
ss
repz
inc
mov
stc
shlb
test
outsl
imul
mov
fwait
push
test
sub
divl
fcomps
iret
mov
pop
cmpsb
jp
idivl
jmp
pop
sarl
dec
std
xorb
push
push
ss
in
sbbl
push
neg
dec
cmpsl
xlat
xor
shll
stc
aaa
mov
pop
dec
sbb
and
xchg
dec
add
inc
out
pop
sub
in
lcall
ret
sbb
jge
sub
js
xlat
fidivrs
xor
es
pop
push
scas
mov
loop
mov
sub
pop
xor
mov
imul
jl
jnp
fstl
hlt
jecxz
scas
jecxz
push
inc
ret
jp
sbb
mov
std
and
jle
push
fildll
addr16
and
mov
sub
fsubs
mov
incb
and
lcall
pushf
call
aas
jp
notb
lea
mov
ficomps
test
mov
cltd
js
lea
in
mov
xchg
cmp
xchg
out
cmc
mov
jg
sahf
mov
stc
jno
fdivl
mov
sub
push
shll
stos
sbb
add
mov
mov
ror
pop
outsl
xchg
mov
hlt
inc
cmp
arpl
dec
test
lods
add
leave
cwtl
repnz
mov
jnp
scas
dec
pushf
out
push
lret
push
ds
outsl
out
into
loopne
jle
notl
mov
mov
daa
clc
movsb
mov
cmpsl
dec
fidivs
mov
scas
cld
jbe
jnp
ficoms
jp
pop
or
mov
in
mov
push
pop
test
xchg
int3
cmp
cs
jae
gs
enter
push
sbb
fldenv
mov
js
pop
xchg
push
sbb
sbb
test
addr16
adc
mov
mov
xchg
push
adc
insl
nop
adc
pushf
add
jb
xchg
lods
mov
fstp
aaa
insl
outsl
mov
xchg
sahf
imul
xchg
stc
jecxz
or
mov
sub
ja
mov
dec
mov
fcompl
ret
xchg
adc
sbb
pop
jno
fisttps
add
dec
int
into
cld
dec
iret
mov
in
mov
inc
inc
loope
fs
js
iret
sbb
lahf
push
fstpl
jnp
flds
inc
rol
mov
cmp
and
pop
and
insl
fisubrl
testb
sbb
or
jge
mov
mov
ds
mov
jne
cmp
frstor
and
les
dec
pop
jns
mov
jmp
bound
hlt
dec
jne
aam
cmp
aam
imul
push
fyl2x
pop
jle
and
sub
or
xrelease
mov
fwait
repnz
imul
adc
test
cmp
icebp
pop
dec
pop
push
or
pop
lahf
and
push
pop
xchg
mov
sbb
cld
js
xchg
outsl
cmpb
xchg
lods
mov
cmc
cmp
mov
aad
mov
cmp
iret
push
jne
jge
fsts
je
mov
fisttpll
xchg
std
pop
cmovg
xor
and
xchg
mov
fwait
or
mov
inc
mov
ficompl
lret
out
push
fldt
insl
fsubrp
or
imul
das
fisubrl
or
push
inc
int
sahf
inc
or
push
jecxz
push
iret
xlat
pushf
mov
fidivs
dec
mov
out
push
stos
sarb
push
adc
push
cmp
xor
jo
clc
or
stos
jne
pop
sbb
lret
jbe
push
out
add
ret
jl
lds
int3
hlt
xor
fildll
or
das
pop
ljmp
test
ljmp
inc
sarb
fdivrp
sbb
insb
adc
stos
jne
and
mov
mov
xchg
cltd
or
xchg
inc
or
push
pop
push
xor
jle
mov
inc
sbb
and
jne
mov
xchg
mov
pushl
loope
cld
clc
pop
push
xor
jno
pop
xchg
jl
or
cmp
jnp
cmp
addr16
dec
je
in
xor
repnz
sub
inc
ret
addb
mov
jae
ljmp
fists
test
aaa
pop
inc
das
cmc
xchg
stos
mov
in
jno
sbb
mov
fcmovne
out
test
jge
aad
pop
mov
adc
nop
loopne
imul
dec
es
sbb
mov
out
pop
push
jge
xchg
lods
stos
stos
pop
cmp
jae
pop
cmpsl
jmp
loope
cs
lret
scas
int
jne
test
and
movsl
mov
adc
add
pop
inc
repnz
out
xor
add
hlt
cld
mov
adc
mov
push
cmovle
dec
dec
stc
or
jge
cli
mov
lds
subb
jne
jle
inc
cltd
adc
mov
iret
mov
mov
rorb
mov
dec
icebp
pop
and
fisubrs
es
jne
ljmp
jns
and
or
mov
mov
pop
cmpsl
out
inc
bound
fisttps
filds
andb
jbe
out
xor
lds
stc
daa
jge
push
cmp
lret
jae
ficoms
ffreep
dec
sahf
mov
movsb
xor
fidivrs
sbb
mov
xchg
inc
ret
mov
fimull
pop
xor
fldcw
jmp
mov
dec
jl
repz
cld
in
ljmp
add
dec
aas
lock
rorl
cltd
aam
jmp
sti
jbe
jb
pop
test
add
jbe
sub
cmpsl
adc
add
mov
data16
imul
mov
rcll
out
orps
jmp
cmp
sahf
clc
pop
adc
pop
xchg
sti
fistps
addr16
xlat
adc
test
lds
jb
imul
ja
sahf
mull
mov
out
cmp
push
cld
mov
dec
loope
push
stos
fstl
cmp
or
dec
jecxz
loopne
xchg
int3
sti
mov
addl
inc
pop
ret
pop
inc
cmc
mov
mov
xor
nop
es
shrl
fistps
inc
into
xor
add
testl
mov
mov
fs
cmp
xchg
movsl
jae
lahf
jae
jge
imul
pop
jl
pop
mov
inc
mov
ja
pop
je
fstpl
adc
lret
mov
jge
pop
jnp
neg
outsl
aas
xor
mov
cld
inc
sbb
xlat
mov
loop
pop
xchg
stc
inc
mov
fisttpll
out
sarb
xchg
jno
into
pop
cmp
rclb
adc
data16
fnstcw
adcb
jae
inc
push
mov
mov
lods
aaa
pop
test
lods
mov
fdiv
cmp
movsb
fwait
cs
idiv
push
sbb
ja
cmc
loop
mov
mov
xchg
and
imul
lds
lret
stos
mov
mov
adc
dec
es
pop
push
inc
fisttpll
push
jmp
mov
xlat
stos
int3
pushl
mov
mov
mov
push
pop
cmc
and
popf
jns
aas
lahf
in
sub
shlb
lock
aas
dec
add
push
pop
loope
fs
sbb
jecxz
out
test
xchg
cmpsb
mov
ficompl
movsb
pusha
clc
fistpll
iret
pop
clc
cmpsl
fmuls
xchg
jecxz
inc
xor
addr16
xchg
inc
cmc
in
xchg
mov
inc
data16
push
dec
ja
and
in
test
jno
out
aam
add
aaa
cwtl
pusha
xchg
add
scas
out
test
jnp
js
test
aas
jge
movsb
repnz
out
gs
and
sub
test
mov
fildll
loope
push
jnp
gs
inc
out
shll
pop
jnp
lcall
jmp
cmc
mov
sbb
cs
jp
jns
ss
pop
shlb
jo
adc
repz
in
or
es
xchg
and
rcll
push
push
inc
jae
dec
aam
gs
inc
stos
push
cs
jo
loopne
fwait
sbb
pop
in
sbb
mov
inc
int
cmp
aaa
cwtl
pop
mov
cmp
mov
fsubs
push
fiaddl
scas
rcrl
ja
scas
xchg
mov
mov
loope
enter
lret
or
das
sbb
mov
xchg
daa
cld
mov
cmp
push
ret
cmp
addr16
repnz
lret
outsl
cld
adc
cli
sbb
decb
inc
pop
and
stos
mov
lods
xchg
rcrl
jno
push
in
jns
add
mov
int3
test
pushf
lret
xor
jmp
test
pop
int
js
das
clc
fcomi
imul
pop
test
inc
test
dec
cmpsb
mov
sbb
rorl
add
sbbl
xchg
pop
out
cwtl
lret
std
ja
xor
push
daa
adc
and
mov
pop
sbb
enter
pop
int
dec
dec
clc
push
xor
or
add
jae
xor
roll
sub
cli
jl
add
imull
and
push
adc
ret
rcll
pop
dec
mov
popf
loopne
xchg
int
mov
stos
mov
call
mov
add
out
and
mov
in
or
subb
test
xchg
es
pushf
cmp
out
gs
out
iret
dec
inc
insl
fldl
fwait
mov
cmpl
mov
xor
xor
test
or
mov
jnp
clc
mov
test
dec
sti
xor
movsl
dec
mov
ljmp
fwait
bound
repz
leave
and
push
sahf
mov
cld
jno
mov
sti
xor
dec
pop
out
push
fstpl
xchg
fwait
loope
cltd
test
gs
adc
popa
lods
mov
cmp
fldl
fstpl
mov
mov
xchg
std
mov
jnp
cmp
into
out
jge
sub
inc
mov
cs
jg
cmpsl
lahf
or
fcmovnbe
and
ficoms
mov
pop
ss
and
jl
mov
cld
enter
std
mov
jno
stc
aad
mov
xchg
cmpsb
inc
pop
shll
stos
subl
std
sarb
imul
add
add
xchg
adc
test
pop
jle
lcall
lret
jmp
inc
add
aam
lret
lock
lret
divl
int
jae
repnz
sub
adc
mov
rorb
test
xchg
pop
mov
push
xchg
mov
mov
dec
adc
in
aam
inc
icebp
pop
loop
add
jl
jg
inc
or
into
mov
push
nop
inc
icebp
cmp
cmpsb
xor
jne
mov
jb
sbb
pop
sub
inc
push
fwait
iret
mov
and
fidivl
xchg
fstps
cmpsb
pop
out
xchg
shl
mov
jae
mov
clc
inc
pop
cmp
jge
cs
test
int
cmc
inc
mov
insl
pop
leave
out
xchg
out
mov
in
mov
push
popf
les
jl
ljmp
test
mov
call
xchg
es
xor
push
adc
push
or
popf
clc
mov
data16
cwtl
je
loope
jo
lods
sti
xchg
lods
sysret
idivb
test
jns
jne
mov
add
adc
dec
xchg
push
hlt
fistpl
cmp
cmpsl
adc
aas
sarl
call
mov
dec
ljmp
xor
int3
repz
stc
dec
jecxz
sahf
push
cmp
add
pop
call
xlat
jb
mov
notl
dec
popf
fmuls
jmp
iret
fs
into
and
xchg
ja
mull
sahf
jo
mov
mov
aas
dec
xor
pop
jp
sub
xchg
mov
push
sbb
xchg
pop
xorb
mov
aaa
icebp
xchg
mov
mov
cmp
push
stc
lcall
invd
lret
xor
cmp
dec
mov
jno
xor
rol
xor
loope
xor
jae
cmc
inc
test
icebp
pop
loop
inc
fstl
popf
lea
fwait
outsb
aam
and
mov
mov
add
push
fadds
aaa
inc
inc
adc
push
xchg
and
jge
fildl
fcomps
loop
sub
bound
jne
shr
in
lret
mov
insb
add
xchg
pop
jge
decl
xchg
xchg
addr16
sbb
es
negl
pop
inc
push
lret
push
push
cmp
push
sbb
cmp
xchg
mov
popl
stos
sub
cmp
mov
mov
xchg
flds
xor
xor
lahf
imul
cmp
mov
xlat
xchg
jecxz
and
sbb
jo
stos
sbb
inc
ds
insl
sub
or
sbb
sbb
push
cltd
addl
mov
sbb
cmp
inc
je
mov
aas
xor
sar
shrb
add
cmp
mov
cmp
xor
mov
mov
sahf
lret
push
outsb
mov
aaa
std
or
add
push
jno
adc
add
orb
mov
cmpsb
mov
sub
roll
lahf
aas
push
mov
add
in
push
ja
jae
insl
andl
cld
out
inc
mov
push
test
std
mov
in
lock
mov
fistps
jge
push
cmp
addr16
cmp
lret
jmp
int
repnz
std
push
dec
jl
add
mov
in
add
ds
pop
arpl
mov
cld
divb
pop
aam
test
outsl
add
lock
jno
dec
mov
sbb
push
ds
pop
mov
mov
fdivr
mov
inc
lahf
stos
cmp
add
xor
notb
xor
fsubrp
jae
lods
pop
jle
imul
ds
cmc
mov
adc
jnp
adc
cmpsb
aaa
mov
cmp
stos
lret
xor
mov
xchg
sahf
stc
pop
inc
stc
mov
insl
push
in
stos
lahf
jae
pop
jmp
mov
lods
gs
pop
aaa
lret
push
dec
jp
inc
sub
rcr
xchg
lret
test
repnz
cli
test
push
push
in
jecxz
jmp
fmuls
hlt
in
cli
repz
push
popa
and
sarb
sarl
test
into
daa
add
iret
cli
shlb
mov
psubw
and
cmp
cli
enter
cmpl
cld
decl
sub
cmp
jge
jecxz
lock
addr16
xchg
shrb
lcall
cwtl
mov
lods
xchg
push
lods
pop
ljmp
pusha
mov
cmp
in
in
sub
incb
hlt
pop
xchg
ja
mov
test
divl
testl
es
or
sub
xchg
mul
mov
cmp
lea
push
dec
pop
adcb
inc
test
dec
jno
cmc
mov
mov
jg
hlt
pop
das
jecxz
lahf
cmp
push
mov
incl
mov
daa
push
xor
data16
mov
cmc
sbb
fchs
push
repnz
pusha
test
sbbb
jae
and
xor
data16
out
imul
pop
pop
and
sahf
loope
mov
add
cmpsb
push
out
jae
lea
xchg
out
inc
leave
arpl
and
push
fbld
stos
push
mov
jne
pushf
std
add
fcomip
jne
jnp
or
je
mov
jne
jl
int
mov
cmpsl
inc
jmp
fisttps
fstpl
clc
lods
adc
jno
fisubrl
je
jno
pop
and
adc
add
mov
into
shll
inc
fidivrs
fnstsw
rol
add
movsl
scas
ficoms
das
shl
mov
rcrb
sub
iret
aaa
jae
jecxz
std
pop
push
dec
lods
mov
and
or
mov
pop
aaa
outsb
mov
fistps
in
jge
xchg
xchg
lock
dec
subl
xor
mov
cmpsl
pop
fisttps
gs
or
and
pop
sbb
inc
cmp
ss
int3
mov
fsub
sbb
das
dec
cli
fnstenv
repnz
push
pop
inc
repz
pop
xchg
xchg
mov
outsb
stc
rclb
dec
mov
mov
leave
int
jmp
iretw
lcall
hlt
jg
fisttps
es
negb
lret
cli
fnsave
adc
daa
inc
sti
jbe
pop
mov
pop
jbe
push
pop
mov
xor
scas
lds
jg
mov
clc
lods
icebp
data16
mov
mov
xor
ret
cmovg
mov
mov
mov
hlt
xchg
int
xor
lret
fidivrs
mov
cmpsl
inc
and
jno
pop
mov
ss
pusha
jno
rcr
adc
xchg
out
fcoml
xor
pop
fcomps
mov
gs
clc
cmpl
push
adc
cltd
clc
movsb
int3
stc
lods
lds
fisubrs
and
and
sbb
imul
adc
push
pop
adc
test
in
mov
fiadds
pushf
scas
xchg
jmp
scas
stc
mov
fsubrl
jmp
arpl
inc
fidivrl
repnz
inc
mov
lods
sbb
ret
lret
std
jns
mov
or
loop
lret
lock
mov
cli
mov
outsl
stc
enter
lcall
cltd
cmp
push
inc
pop
idivl
mov
xchg
negb
xor
ficomps
sarl
mov
jle
ret
and
rorl
jge
pop
cmp
popl
lock
adc
fsts
cld
std
test
hlt
jo
cmp
cmp
jmp
lahf
xchg
test
cmp
xor
out
test
pop
nop
call
scas
lcall
inc
pop
mov
push
sahf
xchg
in
or
es
rcrb
jb
mov
mov
xchg
mov
xor
cli
adc
and
leave
popa
mov
rcr
xor
fldl
jl
cmp
cs
stos
mov
push
jb
or
cld
cmp
enter
sbb
in
in
rcl
xor
add
mov
into
adc
aaa
fisubl
dec
or
in
jnp
adc
mov
cmp
clc
sbb
push
aam
out
jl
bound
pop
iret
jle
mov
pop
aas
das
je
testb
aas
mov
xchg
mov
out
cwtl
call
xchg
ss
lahf
push
in
fisttps
xchg
mov
mov
jle
push
pop
cmp
fnop
fldcw
jb
repnz
or
clc
mov
mov
testl
imul
mov
jp
out
push
clc
pop
outsl
inc
in
rolb
pop
out
das
pop
cld
aaa
ja
dec
aas
pop
shl
das
and
rcl
inc
cmc
jecxz
lahf
mov
or
in
cli
jecxz
call
push
fmul
sub
stos
mov
icebp
xchg
scas
pusha
aas
push
imul
cmp
mov
push
lods
push
mov
sti
cmp
ljmp
add
push
imul
pushf
repnz
jmp
push
jge
imul
std
jno
repz
stc
jnp
mov
fs
inc
jnp
xchg
mov
push
ret
aam
mov
out
or
std
iret
add
adc
mov
xchg
mov
and
cmpsl
mov
or
and
pop
testb
clc
push
das
cld
xor
hlt
adc
add
lds
push
leave
mov
jb
dec
test
jbe
lock
mov
sbb
andb
lock
mov
sbb
mov
ds
rclb
je
cmc
inc
popa
mov
xchg
sti
mov
jbe
pop
sub
clc
cmc
loopne
ss
cwtl
jl
or
mov
inc
adc
mov
and
lret
add
imull
imul
scas
xchg
in
sbb
lods
out
loop
xor
imul
test
test
int
ffreep
and
int
leave
xor
lods
les
loopne
xor
hlt
fstpl
test
cltd
mov
cwtl
incl
jecxz
mov
inc
xlat
ss
ss
stos
lock
icebp
or
cltd
push
out
push
loopne
dec
jmp
jge
xadd
push
add
popa
shll
mov
mov
sti
or
je
stc
repnz
iret
cmc
and
mov
fmul
out
lahf
add
adc
lahf
pop
arpl
int
cmc
imul
cmp
test
scas
mov
xor
jg
and
jecxz
stos
bound
cltd
out
ljmp
stc
rcr
pusha
inc
es
inc
repz
shr
xchg
pop
mov
adc
inc
sbb
sbb
imul
outsl
cmpl
push
bound
and
in
sbbb
dec
cmp
and
scas
sbb
insl
loopne
sbb
push
pop
add
pop
sbb
ja
ja
sbb
out
dec
mov
cli
xor
push
sarl
cmp
outsb
jle
push
ss
push
fwait
pop
jnp
andl
jae
add
mov
mov
out
adc
rcl
xchg
mov
adc
enter
pop
pop
clc
sub
scas
adc
add
stos
sub
xchg
jle
adc
aam
mov
push
adc
notl
jne
or
xor
mov
pusha
mov
inc
jns
xchg
fidivrs
std
test
loop
push
not
mov
mov
mov
adc
in
inc
fildl
gs
pop
sub
adc
xor
je
testb
sub
iret
sbb
mov
inc
push
xchg
mov
mov
mov
sub
sbb
insb
or
in
dec
sub
bound
negl
jns
sbb
bound
mov
adc
jle
and
imul
push
adc
xor
sub
push
sub
inc
in
imul
fdivs
push
pop
in
push
in
mov
test
mov
sub
jb
xor
jb
pop
shrb
enter
adc
into
sahf
mov
popa
mov
insb
pop
cmc
jae
pop
insb
fwait
insb
arpl
xchg
jo
hlt
pcmpgtw
sub
xor
adc
jbe
outsl
mov
xor
aam
dec
mov
shl
mov
lock
gs
bound
lock
add
outsb
adc
stos
in
dec
pop
pop
and
push
mov
sarl
lods
popf
and
mov
dec
pop
sbb
out
jne
cmp
ret
add
jno
fists
sbb
and
mov
mov
lods
pop
xor
adc
push
pushl
mov
sbb
into
lcall
adc
or
js
mov
mov
sar
popa
cmpsl
cmpsb
jp
adc
insb
arpl
xchg
push
adc
bound
fbld
in
push
jbe
mov
push
dec
jmp
inc
shlb
sbb
jl
repz
dec
aaa
sub
push
aam
js,pt
mov
in
sub
mov
imul
pushf
cmp
mov
xlat
mov
push
cmp
mov
cwtl
or
lcall
sub
push
inc
aam
adc
lock
mov
add
mov
mov
jbe
jns
cmpsb
gs
mov
into
inc
subl
popf
repnz
fwait
xchg
mov
pushf
pop
xchg
jecxz
cmp
push
cmp
xor
jp
ss
and
xor
sub
mov
jmp
fiadds
inc
in
aas
adc
in
outsl
into
cmp
jp
cmp
sarb
jnp
sarl
int3
push
inc
cmp
stc
aad
cmp
jp
ja
sbb
and
gs
dec
in
adcb
jge
movsl
mov
push
les
icebp
lret
popf
fiaddl
push
in
mov
mov
jle
enter
inc
addl
fdivr
inc
lds
cmp
push
adcl
cmpsb
mov
gs
mov
das
push
mov
test
lods
fisttpll
and
xchg
xchg
jmp
pop
pop
aaa
in
jnp
iret
mov
or
inc
popl
xchg
daa
ja
xor
xor
xchg
push
je
fst
jno
les
sahf
cmpsl
xor
mov
pop
push
fistpl
mov
cmp
insb
arpl
lods
mov
fninit
scas
ds
add
sbb
xchg
psubb
loop
outsb
lcall
je
cmp
and
inc
je
adc
aas
dec
leave
xchg
or
aam
and
and
and
jge
shr
ljmp
aas
sub
int3
cmpsl
int
jns
cmp
mov
sbb
pop
mov
dec
test
lods
stos
xchg
mov
out
js
pop
cmc
data16
jne
mov
sbb
jae
bound
ret
adc
xor
lods
in
add
jle
rolb
repnz
add
dec
mov
jnp
xor
jge
popa
cltd
mov
loopne
cmp
mov
fucomip
sbb
dec
test
insl
xor
pop
insl
adc
lahf
fimull
in
iret
push
and
jae
daa
aas
mov
inc
mov
stos
imul
inc
inc
sar
into
js
cmp
pop
xchg
int
aad
jb
ret
lret
dec
loop
xchg
sub
dec
mov
outsl
insb
mov
inc
sbb
lcall
call
jb
or
jmp
add
mov
xchg
shl
lahf
pop
addr16
jno
jg
outsb
push
cmpsb
arpl
aad
movsl
adc
cmpsb
cmc
hlt
cmp
add
flds
mov
es
ss
rcll
popa
mov
mov
rcl
hlt
ficoml
pop
push
mov
loope
mov
jno
addl
testl
jnp
adc
pop
xlat
or
mov
push
test
das
lea
mov
testb
imul
adc
das
test
aad
xorl
add
sbb
mov
in
loop
mov
mov
xchg
mov
in
dec
js
sar
cmp
mov
divb
lahf
int3
std
pop
jl
cmp
and
pop
xor
movsl
dec
jne
cmpsl
lret
add
rcl
lods
ja
cli
jl
jns
mov
pop
test
jle
jne
adcl
lcall
popa
lods
imul
stc
inc
lcall
cmc
rorl
pop
fs
fdivrs
je
out
scas
cmc
xor
mov
xchg
push
addr16
add
dec
xlat
push
mov
cmp
mov
fldt
mov
insl
mov
sbb
mov
movsl
sub
push
ret
lret
mov
inc
lahf
xchg
sbb
es
jns
arpl
fdivl
lds
outsb
jg
push
pop
scas
and
jae
jne
push
jp
scas
lds
jne
fisttps
mov
lock
jo
cmp
sub
fmulp
lcall
pop
sub
mov
test
jb
in
xor
mov
jmp
leave
out
jl
out
loop
sbb
adc
outsb
sbb
call
out
in
pop
outsl
les
push
insb
mov
mov
sbb
andl
outsb
popf
fldcw
js
pop
mov
aaa
fcomi
and
sbb
dec
aaa
mov
aad
dec
ljmp
lcall
add
push
icebp
and
mov
ret
stos
sub
loope
xor
jp
movsb
shlb
jne
cmp
jae
es
and
fcmovb
push
testl
into
daa
rcl
jno
das
sbbl
pop
jmp
loopne
jno
jl
add
dec
mov
and
std
xchg
sbbl
mov
cmp
out
bound
orb
rcll
adc
repnz
jbe
add
and
dec
out
or
notb
js
inc
pop
pop
ffreep
movsb
cld
enter
pushf
push
lahf
adc
mov
out
mov
sub
les
js
push
popa
dec
sub
ficoms
rol
movsl
movsb
cmp
sub
or
daa
fwait
inc
cmp
dec
outsb
inc
or
fldcw
mov
ss
in
iret
test
subb
pop
sbb
clc
arpl
lret
jmp
pop
cmp
sub
mov
inc
je
cmp
and
das
add
int
scas
jno
rcr
mov
stos
xchg
aas
mov
pushf
mov
add
aad
xorb
loope
jnp
pop
jecxz
int3
adc
inc
pop
call
xor
inc
pushf
sbb
xor
out
mov
pushf
cs
mov
popa
sub
sub
inc
movsl
mov
jl
out
cmpb
mov
lret
das
jae
adc
push
xchg
lods
pop
xor
sbb
gs
cli
dec
cmp
pop
cli
stc
push
sbb
mov
stos
cmp
out
sar
stos
adc
sub
cmpsb
jl
add
stos
xor
cli
ja
push
mov
fistl
data16
jnp
push
adc
loop
dec
sahf
xchg
retw
ret
imul
push
mov
ret
dec
inc
push
lea
ficoms
add
mov
out
push
insb
jb
rorl
sbb
xchg
jnp
or
add
and
pop
hlt
jl
mov
out
test
xor
dec
cmpsb
loopne
and
cmp
jmp
xor
inc
test
loope
movsb
in
adc
test
insl
push
add
sub
mov
mov
xor
push
test
mov
stos
add
mov
mov
lods
sub
sub
mov
shll
jno
or
ud0
leave
add
cltd
cltd
idivl
out
repz
into
repz
loopne
ja
ja
inc
clc
xor
xchg
mov
addr16
xor
aaa
push
jnp
push
mov
out
push
mov
add
negl
pop
ret
pop
push
fsubl
mov
int
ljmp
adc
xchg
mov
test
repz
and
mov
cmpsl
loope
and
xor
fcompl
pop
pop
jl
ja
push
push
xchg
pop
dec
sbb
fstpl
out
stos
pop
mov
add
ret
pop
jns
xor
out
jge
and
push
dec
je
and
out
add
mov
mov
pushf
mov
testl
dec
mov
pop
sbb
dec
xor
imul
mov
rcrb
mov
lret
je
inc
pop
hlt
sbb
mov
mov
adc
rcr
enter
jae
xchg
jbe
les
dec
jns
cmp
aaa
jge
sub
loop
pop
mov
daa
popl
sub
enter
sub
mov
or
dec
jle
mov
dec
cmp
mov
aad
fucom
xlat
popa
xor
pop
push
repnz
pop
mov
in
pop
outsb
cmp
sbbb
fstpl
in
push
inc
cmp
aas
push
shll
popf
add
mov
mov
jg
daa
out
inc
jbe
pushf
fcompl
lret
dec
jns
sbb
fiaddl
mov
scas
pop
mov
sub
or
pop
mov
dec
in
or
mov
pop
in
les
std
repnz
add
cltd
fiaddl
pop
out
dec
cmp
scas
push
out
icebp
sar
jae
push
xor
stc
addl
pop
in
insb
negl
stos
in
jle
pavgw
repz
push
push
stos
sub
subb
lret
fimuls
cli
imull
sar
fsubp
int
xor
int
mov
adc
xor
adc
ja
out
sbb
inc
xlat
rcrb
fildll
movsb
scas
push
imul
loope
fcompl
gs
fsubrs
lret
scas
mov
jno
mov
or
insl
xor
jecxz
xchg
scas
ret
jp
outsl
xchg
adc
stos
or
xchg
popa
dec
or
mov
mov
xchg
call
cmp
out
imul
imul
addr16
dec
jno
and
ret
lcall
mov
add
ja
mov
sahf
into
jne
add
or
and
dec
gs
fcoml
fstpt
popl
xorl
cmp
sbb
xor
or
inc
jbe
mov
fistpll
sub
mov
mov
insb
jmp
inc
lret
mov
cmp
mov
xor
fisubrs
in
mov
arpl
scas
xor
cmp
xchg
mov
push
dec
idivb
pop
adc
into
std
lret
shrl
cmpsl
pop
mov
out
mov
xor
mov
pop
mov
xchg
dec
mov
mov
out
and
lods
xor
add
addb
mov
xor
divl
es
sahf
cmp
fdivr
pop
fs
aam
xchg
js
jns
notb
pop
nop
cmp
data16
int3
push
ss
out
jp
cld
jno
test
and
data16
test
xchg
inc
pandn
mov
inc
xor
lret
std
dec
or
ss
arpl
mov
aad
mov
jg
sbb
int
push
cld
stos
or
jl
inc
into
fistpl
fwait
iret
lcall
fdivs
sahf
mov
stos
xor
jmp
scas
nop
out
shll
sub
xor
add
pop
rol
and
mov
enter
push
dec
and
sarl
jns
bound
mov
gs
in
sub
out
mov
scas
xor
test
jo
lahf
cmp
ds
and
mov
pushf
out
pop
shll
pop
adc
pushf
shlb
jecxz
notl
xlat
outsl
and
ffreep
mov
stos
ss
add
or
push
mov
xchg
rolb
data16
sbbb
rorb
sbb
sub
inc
aas
push
push
inc
out
adc
das
jo
jle
mov
sti
jae
scas
xlat
and
inc
out
push
cmp
jnp
fnsetpm(287
and
in
xchg
sbb
rorl
ja
push
push
inc
jge
pop
sub
jmp
loop
and
jle
in
imul
inc
aaa
mov
insb
and
sti
inc
ss
leave
add
popa
or
in
addr16
bound
mov
xchg
adc
add
clc
mov
sbb
sbb
xchg
lahf
movsl
and
xor
mov
notl
aaa
xchg
jg
jbe
cmp
xor
add
in
cmpb
cmp
pop
hlt
call
scas
mov
aaa
inc
ret
and
je
std
pop
push
pop
fnsave
je
sub
pop
cmc
repz
pop
push
mov
cmp
fcoms
mov
bound
fidivrs
fildll
in
cmc
push
cmpsb
adc
bound
hlt
dec
jbe
mov
pop
addr16
dec
pop
enter
mov
adc
push
lret
mov
call
xor
mov
xor
jle
insl
push
cmpsb
sbb
imul
cmc
cmc
insb
sub
pop
cmp
cmp
jmp
jle
add
mov
pop
popf
lods
jns
push
loope
fwait
xor
clc
fidivs
pop
mov
add
jb
lret
cmp
daa
ss
jnp
mov
in
xor
cmp
add
lock
gs
movsb
imul
fiaddl
or
daa
cmp
ret
pushf
adcb
jle
cmp
inc
jbe
popf
mov
jl
xor
jp
outsl
ret
xchg
inc
sahf
dec
pop
lret
pop
sub
sub
jmp
insl
repz
je
jae
repz
jne
movsb
cmp
incb
data16
in
mov
jl
cltd
and
nop
in
push
insl
inc
and
pop
pop
fstpt
outsl
push
inc
out
iret
adc
shlb
in
int
or
and
ror
out
fildll
jle
outsb
out
scas
cmp
cmp
lahf
dec
push
pushf
jg
inc
xor
mov
push
addl
std
sub
clc
add
je
ud1
push
cmp
push
mov
push
lods
fdiv
push
mov
hlt
sub
jbe
inc
insl
lock
add
inc
sahf
cwtl
jle
xor
into
mov
cld
ret
lret
xor
cmpsb
xchg
mov
inc
orb
cltd
cld
xchg
loope
filds
adc
adcb
cmp
inc
loope
lret
sbb
ja
bnd
negb
push
insb
mov
cmp
cmp
mov
cmp
jp
inc
sbb
add
movsb
cmp
inc
jnp
negb
pushf
mov
jmp
bound
sarl
std
jne
rcrb
and
and
jbe
inc
jge
adc
jp
mov
cmp
pop
dec
mov
sub
mov
roll
pop
mov
bnd
adc
jg
mov
push
imulb
jmp
fwait
or
int
sbb
out
in
adc
icebp
cmp
mov
imul
fisubrl
cmp
rcrb
fbstp
or
jge
sahf
je
int3
cwtl
fisubs
xor
sbb
pop
or
out
xchg
cmc
mov
jge
stos
test
movsl
fdiv
push
fldcw
out
in
cmp
jno
xchg
dec
inc
sbb
cwtl
add
fwait
mov
sbb
mov
lcall
mov
fadds
pop
loopne
mov
sbb
sahf
pushf
push
shrb
lods
repz
add
stos
call
shl
inc
std
in
lea
xor
mov
jbe
movsb
cmp
nop
nop
and
arpl
xor
push
push
lret
xchg
shrb
int3
cmp
mov
arpl
lock
sahf
jl
scas
popf
std
cmp
mov
push
movsb
sbb
mov
lods
mov
xchg
or
add
cmp
rcll
ds
insb
jp
loopne
je
sub
or
pop
pop
jb
push
int3
popf
out
iret
mov
jnp
inc
test
les
inc
jle
or
test
cmpsb
jno
cwtl
int
popf
xchg
ds
sub
movl
arpl
inc
enter
add
add
hlt
and
lret
fucomip
mov
icebp
stc
mov
imul
add
data16
addr16
shll
lea
sahf
mov
ja
stc
mov
in
aad
ja
test
mov
jp
in
and
sub
mov
lods
jp
mov
lahf
test
andl
push
icebp
out
jl
ficoml
pop
pushf
mov
mov
pop
xchg
cli
out
xchg
fucomp
fwait
into
adc
mov
mov
ja
xchg
lahf
add
jns
rcrl
lds
mov
sbb
mov
push
mov
daa
pop
loop
jl
insb
scas
jle
mov
jg
xor
pop
cmp
repz
addb
jns
pop
cmp
repz
and
cld
push
add
gs
stos
scas
xor
cmp
jmp
xlat
mov
lahf
xchg
loop
test
sbb
dec
mov
ss
aas
mov
aas
insb
daa
jmp
cmpsb
inc
mov
xor
mov
dec
pop
inc
into
and
mov
jl
xchg
enter
subb
mov
cmp
xlat
mov
ret
icebp
pop
cwtl
cmpl
ss
popf
xchg
xchg
rol
mov
pop
jno
pop
push
sbb
push
cli
inc
sub
xlat
mov
dec
jecxz
ja
xor
lea
xlat
leavew
fnsave
fistpl
push
jp
sbb
xchg
mov
mov
cmp
xor
mov
dec
icebp
cmpsl
pop
dec
cs
out
mov
pop
inc
test
adcl
jg
out
fidivrs
int3
rorb
nop
outsb
cmp
daa
mov
pop
mov
push
outsb
fbld
cs
aaa
mov
test
sub
imul
jo
adc
xor
push
adcb
icebp
jl
pop
rcll
addr16
dec
or
push
xor
imul
subb
inc
mov
xchg
cmp
ljmp
arpl
call
or
je
orl
pop
lea
adc
enter
das
jns
aas
aaa
mov
scas
dec
jnp
pop
sub
sbb
xchg
push
or
fisubs
addr16
ss
fbld
int3
adc
mov
jmp
mov
xchg
loop
test
inc
inc
inc
stos
ljmp
xchg
mov
andl
mov
sbb
fdivrp
std
xchg
cmp
fsts
fistpll
inc
iret
lock
xchg
repz
rcr
jl
inc
mov
mov
aaa
movsb
inc
inc
pop
out
cld
fdivs
ljmp
sub
bound
inc
lahf
movsl
cmp
in
push
outsb
and
lret
adc
sti
and
sub
arpl
pop
cmpsb
pop
jg
xchg
add
xor
pop
test
ds
xor
cmp
lahf
fsubrl
cmp
fimuls
push
in
mov
adc
adc
cmpb
cmp
dec
enter
or
xchg
fucomp
jp
incb
mov
movsb
outsl
mov
loop
xchg
std
and
pop
inc
lret
cltd
fs
cwtl
add
xchg
cltd
iret
xor
aaa
andb
inc
test
dec
push
test
dec
inc
jl
xchg
cld
std
pop
jg
mov
inc
movaps
lret
cmp
push
dec
fdiv
int
mov
cltd
clc
bound
lahf
mov
jl
rol
jl
xor
xchg
mov
cwtl
sbb
add
or
cmp
pop
lahf
dec
ja
add
std
jmp
cmc
std
xor
cmp
mov
or
xor
cld
dec
mov
lcall
cmpsb
cmp
aas
add
stos
mull
xchg
and
enter
adc
scas
dec
out
or
xchg
pop
test
xchg
cwtl
mov
test
divl
jns
iret
fcoml
mov
lock
cmp
es
xchg
xchg
inc
outsl
mov
mov
imulb
int3
out
dec
mov
pop
outsb
mov
ror
lahf
inc
push
dec
jp
jl
push
pop
dec
jns
leave
repnz
jae
or
mov
div
out
test
loope
js
cmpsl
data16
fists
inc
adc
leave
mov
popl
imul
subl
mov
adc
pushf
mov
outsb
jg
pavgw
aam
inc
mov
out
repnz
ss
xchg
sub
sti
push
out
sbb
cld
ja
filds
loop
cs
jmp
and
aas
aaa
repnz
gs
mov
mov
int
stc
test
ret
ret
add
add
xchg
adc
mov
cmp
daa
in
jo
int
sahf
stos
jne
ss
fwait
xchg
mov
xor
jge
outsb
into
and
mov
fldt
js
pusha
mov
push
out
cmp
sbb
lods
je
into
or
xlat
cmpsl
les
pop
jl
into
pop
icebp
ja
inc
push
in
hlt
mov
popa
xchg
ret
pop
clc
repnz
fdivrl
imul
pop
imul
into
call
push
les
xchg
sbb
jecxz
jb
mov
xchg
xlat
xchg
ds
jb
movsl
shlb
cmpb
pop
add
cli
mov
jge
sbb
add
test
es
cmpsl
sub
xorl
outsl
mov
push
frstor
out
out
push
mov
jecxz
jnp
sbb
and
outsb
jo
or
pop
arpl
scas
mov
mov
shlb
sub
in
imul
std
mov
negl
xchg
mov
test
repz
add
jnp
notb
jge
jne
mov
mov
stc
inc
inc
ja
stos
fmul
pop
aad
jne
decl
ret
mov
xchg
shrb
and
jne
pop
xchg
lods
andl
pop
xchg
pop
test
addl
repnz
push
cltd
xor
sbb
cmp
or
fidivrl
pop
mov
imul
jmp
xchg
sub
int3
xchg
mulb
shlb
xor
mov
sbb
lods
cld
daa
cmpl
mov
or
xchg
pop
jl
fldl
insb
aad
jno
ds
in
out
add
into
hlt
scas
outsb
push
scas
cmp
into
addb
cmpsl
jecxz
bts
nop
xchg
insl
or
fwait
mov
addr16
dec
push
hlt
inc
add
je
rcll
cmp
ret
jge
fdivl
call
out
sbb
in
lods
fldenv
inc
testl
or
ret
out
into
lods
and
inc
fidivrs
in
inc
mov
mov
inc
stos
mov
mov
xchg
out
pop
lods
daa
pop
subb
mov
mov
dec
jp
test
cld
inc
mov
add
jp
fnstsw
popf
sub
popa
and
cmp
inc
jns
add
jns
es
jle
push
fmuls
decl
mov
inc
xor
shll
pushf
xor
data16
stc
shll
lock
xlat
inc
insl
shlb
mov
vmovntdq
int
rolb
adc
lods
insl
adcb
cmp
push
mov
xorb
je
fildl
mov
mov
divl
mov
cmc
dec
scas
out
or
xchg
dec
push
cmpsb
jge
cmpsl
mov
add
lea
ja
test
flds
stc
xchg
jmp
das
mov
mov
bound
int
sahf
or
xor
jl
jmp
inc
sti
scas
mov
outsl
inc
scas
lcall
sub
cld
inc
sub
mov
ljmp
dec
mulb
daa
sub
xchg
arpl
or
add
test
pop
lahf
imulb
mov
stc
stos
pop
testb
aas
jle
daa
aas
xlat
fwait
or
imul
out
xchg
push
test
stos
jo
mov
cltd
mov
loope
or
fwait
push
hlt
adc
loop
mov
pushf
jb
xchg
leave
icebp
ss
jb
lret
lahf
dec
mov
decb
xchg
fildll
daa
or
cwtl
sub
xchg
fdivrs
lods
cmp
push
repnz
das
jg
sub
std
mov
pop
test
cmp
cmp
xor
scas
adc
and
push
aaa
cwtl
rolb
rclb
push
xchg
cmp
lret
xchg
dec
fs
scas
jecxz
pop
or
push
sbbl
push
mov
jle
lods
popf
mov
add
cmpsb
add
shr
sbb
mov
xchg
jg
mov
jp
pop
xor
cwtl
cli
test
adcl
mov
xor
ret
jb
insb
pop
pop
mov
lret
mov
pop
cltd
sub
pop
inc
jnp
push
jge
scas
or
jl
jb
dec
or
nop
dec
mov
and
jo
mov
lock
movsb
movsl
int3
nop
sbb
into
fdivrl
mov
loope
jno
jle
call
mov
and
sub
sahf
pop
sub
pop
mov
push
add
mov
ret
cli
or
pop
add
and
push
dec
outsb
mov
and
jle
jg
cmp
out
pop
pop
out
cs
jb
xor
mov
sub
dec
jmp
cmp
or
adc
jo
lret
xchg
mov
in
mov
iret
sti
jbe
out
outsl
outsb
int
sub
sbb
fcoml
pop
sahf
lret
jnp
aam
pop
in
out
jae
cmc
fmulp
rorb
sti
sbb
or
or
imul
enter
mov
jae
or
call
inc
fimuls
das
mov
inc
jb
xchg
inc
aad
ds
fsubrs
scas
push
xchg
js
xchg
jmp
leave
addr16
mov
dec
sbb
js
push
cltd
out
icebp
xor
cli
or
inc
or
jae
lcall
roll
pop
and
nop
lea
in
popa
add
inc
clc
adc
outsb
lods
repz
and
fbld
sub
jmp
mul
xchg
cmp
adc
das
inc
jecxz
xor
rcl
dec
outsl
cmp
rcll
ds
jne
adc
jg
scas
and
loopne
mov
jp
pop
out
jg
das
iret
test
push
fs
jbe
xchg
jns
or
xchg
and
jle
in
xchg
fwait
jno
push
or
dec
adc
add
popf
and
iret
les
std
test
xchg
push
jns
mov
gs
ret
cltd
pop
lahf
jb
out
dec
mulb
sbb
push
subb
push
jmp
xlat
stos
adc
mov
dec
sbb
inc
stos
jmp
rep
mov
cmp
fdivl
mov
jb
shlb
test
divl
outsb
sbb
movb
sti
call
hlt
xor
mov
stc
cli
repnz
test
mov
sbb
in
fpatan
test
stc
lret
sbb
clc
das
mov
sbb
in
movsl
fnstenv
into
lcall
or
rorb
or
push
aas
xchg
mov
push
lea
cltd
cs
push
and
in
sbb
dec
leave
dec
mov
popl
enter
and
scas
or
push
inc
add
or
mov
cmpl
or
loope
loope
clc
or
ret
xlat
jl
push
lret
je
orl
stos
add
iret
js
imul
pop
and
pop
jno
lock
dec
inc
pop
mov
cld
mov
icebp
in
mov
lahf
sbb
push
dec
lock
test
adc
lds
jb
repnz
out
in
in
or
pop
daa
repnz
mov
jbe
mov
mov
adc
lock
push
or
jl
clc
data16
arpl
push
sti
sbb
and
jbe
loopne
jmp
insl
add
decl
repz
adc
movsl
es
rep
testl
add
adc
outsl
xor
push
lahf
sub
xchg
pop
bound
cmp
inc
inc
jecxz
and
xorb
push
mov
sbb
push
bound
testl
int
lcall
cmp
es
inc
push
call
sarl
push
inc
stc
mov
push
lahf
and
iret
xchg
push
push
mov
shlb
add
lds
ret
pop
sub
xchg
push
lds
xchg
cmpsl
lahf
dec
sahf
inc
pop
in
popf
notb
and
inc
mov
mov
ds
mov
mov
pop
into
jns
mov
in
fildll
loope
out
push
ds
je
cmp
imul
out
push
lcall
push
xlat
paddb
out
in
xor
in
push
movsl
cmpb
clc
push
mov
movsl
cmp
or
sahf
jge
push
test
in
mov
or
out
lock
clc
out
test
popf
cmp
mov
imul
pop
aam
fsubp
jmp
mov
jae
cmpsb
cmp
out
lahf
repz
sahf
fidivrs
dec
movsl
orl
mov
lret
arpl
loop
dec
cmpsl
std
pushf
push
arpl
std
repnz
pop
xor
cmpsb
cmpsb
lahf
popa
adc
sbb
loope
cltd
mov
sahf
and
divl
lret
pusha
sub
cli
cli
mov
test
cwtl
fucomi
mov
movsb
adc
test
push
pop
shrb
jle
jns
push
cs
mov
repz
sub
cmp
ror
mov
jmp
adc
sbb
sbb
and
jmp
mov
fisubl
out
pop
cwtl
cmp
stos
ljmp
enter
movsb
push
sahf
mov
or
popa
ficoms
adc
sub
pop
and
out
jmp
ja
outsl
sub
pop
movsl
les
loopne
cli
pop
inc
dec
jl
push
out
or
mov
mov
mov
nop
aad
and
mov
std
mov
mov
jnp
arpl
rcrl
jmp
cwtl
ja
mov
out
data16
mov
cmp
jae
jbe
into
jle
fwait
cmp
lcall
das
test
xchg
cmc
loope
dec
cmp
mov
ds
vshufps
inc
rclb
roll
in
outsl
add
cmc
in
mov
jbe
in
adc
dec
scas
sub
outsl
mov
fisubl
nop
sahf
insb
mov
cli
outsl
movsl
test
xchg
loopne
ds
lret
aaa
push
jle,pt
lahf
xchg
in
sub
or
cmp
cs
repnz
mov
fisttpl
sahf
push
bound
mov
lret
xchg
icebp
cwtl
out
js
xor
orl
or
repnz
pop
lods
jbe
xchg
loop
mov
test
xchg
lcall
fcompl
notb
jge
cltd
push
adc
repnz
xchg
pop
xor
rep
jmp
ret
aaa
push
pop
jg
xor
insl
shrl
push
pop
shlb
mov
les
mov
mov
fld
jnp
lea
add
mov
xor
xor
popf
dec
nop
dec
mov
daa
shll
inc
aam
cmpsl
and
cmpsl
js
imul
pop
nop
sahf
jbe
lds
jl
sahf
and
in
fstp
mov
sbb
mov
push
jle
lea
iret
js
icebp
jl
cmp
and
into
mov
sub
and
insb
enter
das
ret
mov
data16
pusha
cmp
fcompl
insl
sti
sbb
mov
xor
das
and
xor
outsl
sbb
push
sbbl
dec
and
dec
dec
cmp
mov
jl
cmp
adc
in
sub
movsl
push
mov
push
or
xchg
popa
cmpsb
lret
in
cli
js
loopne
jbe
enter
sahf
adc
xlat
dec
nop
mov
inc
xlat
jnp
clc
mov
xlat
inc
loop
push
pop
imul
push
cmp
add
dec
ss
jb
test
loope
cmp
xlat
je
sti
and
or
dec
inc
cli
mov
popa
mov
pop
sub
or
pop
mov
jmp
insl
xor
sbb
leave
lods
dec
mov
mov
pop
ljmp
je
push
fucomp
loope
push
jo
out
int3
jbe
add
dec
aad
push
addr16
adc
cwtl
mov
out
sub
adc
push
xor
pop
push
sbb
jns
fisubrl
push
packsswb
sbb
fnstenv
or
jbe
imulb
sbb
dec
pop
lcall
jbe
add
cmp
ljmp
mov
sahf
lret
xlat
cmpsb
icebp
push
gs
int3
inc
negl
or
mov
mov
imul
loop
es
aas
mov
push
dec
jb
xchg
stc
rcll
pop
and
lret
add
jp
in
add
int3
shll
fdivrl
int3
jb
mov
cld
das
aas
stc
lret
cmp
orb
cmpsl
mov
cltd
test
loope
jmp
out
out
std
gs
loop
mov
insb
cmpsl
fsubs
push
lea
adc
loope
sub
adc
out
aad
leave
xchg
leave
out
mov
or
mov
xor
jbe
mov
xchg
mov
fisttpl
cltd
nop
lahf
daa
pushf
arpl
jmp
dec
inc
jnp
int
pop
jl,pn
repnz
or
mov
inc
imul
inc
fiaddl
shlb
addr16
dec
sub
loopne
add
sub
xchg
xchg
xchg
test
mov
int3
ljmp
xchg
xchg
pop
sbb
mov
xchg
into
loopne
aas
cmp
call
ljmp
hlt
pop
icebp
ds
jnp
pop
jo
movsb
fnstenv
cmp
popf
repz
dec
sbb
icebp
mov
in
xchg
movsl
push
or
cwtl
jmp
mov
xchg
int
fcmovnbe
ret
dec
shr
insl
xchg
push
pop
addr16
mov
pushf
sar
out
mov
rorb
fwait
dec
xor
cmp
iret
push
jle,pt
sarl
and
shlb
pop
ds
push
repz
cmpsl
jmp
mov
sti
out
les
incl
inc
mov
mov
imull
out
pop
stos
jmp
scas
cli
xlat
cmc
mov
mov
fidivl
sub
pop
dec
inc
xor
push
xchg
rcrb
cld
mov
out
jecxz
stc
cld
pop
pop
fadds
out
xchg
xor
dec
mov
mov
pop
add
lret
jl
insl
fcmovb
mov
sahf
mov
sti
fwait
test
pop
xor
mov
push
fidivl
js
xchg
pop
lock
push
popf
dec
or
add
outsl
add
es
or
mov
lds
nop
lahf
out
xchg
pop
mov
lret
dec
clc
sub
or
gs
adc
xchg
xor
subb
mov
ja
lcall
movsl
cmp
jno
pop
ficomps
pop
xchg
jae
fidivrl
or
xlat
mov
scas
pop
ds
inc
mov
std
inc
out
dec
stc
or
fwait
mov
push
das
cmpsb
sbb
mov
addr16
je
sahf
xchg
outsb
das
push
loop
daa
pop
mov
scas
scas
aas
aaa
fwait
jge,pn
adc
fs
and
es
mov
ja
ss
cmpsl
popa
or
bnd
sti
pop
stos
pop
and
lcall
inc
es
sbb
daa
jo
mov
fldcw
sub
loopne
nop
movsb
in
nop
xor
jl
cmp
lds
cld
mov
xor
inc
shlb
cmp
shll
ja
adc
mov
jmp
je
mov
mov
shl
jae
cmp
mov
iret
fdivrl
fisttps
jle
out
sbb
pop
cmp
repz
hlt
fstpt
jmp
fisttpll
xchg
xchg
dec
je
mov
into
dec
aas
jmp
mov
xor
out
push
jge
in
fsubrs
scas
pushf
jmp
outsl
push
popa
xchg
mov
sub
cli
and
roll
lods
loopne
mov
jle
leave
pop
lret
jne
or
test
jmp
lret
ja
cmpsb
fdivrl
dec
cmp
pop
mov
aas
mov
pusha
inc
popa
lods
repnz
fbstp
jmp
iret
bound
push
arpl
lock
mov
xor
and
mov
xor
stc
ret
sub
xor
ficoms
divl
mov
jl
push
sbb
in
and
pop
movsb
stos
aad
shrb
inc
sbb
fsts
popf
jbe
rclb
xchg
inc
pop
jns
and
or
bound
lods
popf
lock
mov
or
cmp
cmp
or
mov
fldt
xchg
icebp
jns
imul
cmp
cmp
adc
arpl
lods
and
mov
in
and
mov
mov
lret
jnp
add
call
std
dec
call
pop
out
fisttpl
fists
push
sbb
pop
das
mov
ss
push
pop
and
rcl
ja
pusha
adc
pop
fisttps
test
out
repnz
or
cmp
aad
orb
dec
or
int
mov
mov
push
mov
clc
sti
push
aaa
mov
and
sbbl
rcrl
cld
daa
stos
sbb
out
adc
movsl
adc
aam
stc
les
cmp
cmp
test
movsl
push
sub
addr16
fcoml
mov
xor
or
pushf
pushf
inc
outsb
jp
mov
out
mov
inc
cmpl
cmp
aas
shl
lcall
jge
jns
adc
xchg
jle
sarb
mov
and
mov
lret
xchg
xrelease
lahf
fildl
push
stc
cmp
jecxz
sub
popa
lock
repnz
cltd
xchg
jg
mov
pop
int
rorb
popf
out
out
jne
clc
pop
push
fldcw
nop
xchg
nop
or
adc
push
cltd
jecxz
js
xchg
cmp
sbb
test
or
mov
mov
lret
jne
mull
cmp
sti
pop
enter
daa
mov
mov
out
mov
jns
test
and
xchg
out
insb
imul
rolb
jne
mov
push
add
fists
and
sbb
outsb
jbe
push
mov
fadds
xlat
test
mov
fs
mov
clc
fidivs
dec
mov
aam
ror
pop
pushf
rcrb
int
push
lods
data16
mov
xchg
popf
add
or
and
jb
lods
mov
stos
in
adc
mov
cmp
push
mov
cmp
sbb
das
lods
push
mov
enter
pop
sbbb
shll
push
inc
jae
or
lds
dec
icebp
mov
outsl
hlt
stc
fimuls
sbb
lret
adc
rcll
push
es
out
jmp
cld
push
mov
shll
sub
mov
mov
dec
sub
jp
repnz
cmp
xchg
xor
ffree
and
repnz
fdivl
and
subb
int3
mov
and
fs
adc
sahf
xor
xchg
sbb
mov
dec
das
push
jae
sub
lea
jge
and
xchg
call
stos
xchg
xor
sbb
aas
aas
xchg
xchg
push
xchg
bound
xchg
sbb
cmp
mov
pop
stos
pcmpeqb
sub
mov
lret
lock
xor
pop
ret
pop
jle
push
and
inc
push
jae
push
shrb
jecxz
mov
jns
lahf
push
inc
test
mov
and
in
das
pushf
shr
jg
xchg
aaa
popl
sub
ds
xor
mov
imulb
xor
mov
push
into
xchg
adc
jecxz
lahf
lahf
pop
dec
or
mov
pop
data16
test
addr16
je
inc
iret
aaa
dec
outsb
sbb
push
push
or
jle
cwtl
gs
dec
pop
mov
or
cmp
lret
aam
mov
nop
mov
shr
adc
push
ret
out
in
xor
fucom
pop
jb
insl
sbb
mov
sub
in
shlb
push
push
inc
rolb
adc
lock
into
outsl
inc
add
push
mov
jae
or
xor
lret
xchg
cmpl
jb
adc
jp
jle
popa
js
ss
in
push
shl
jmp
sub
and
sbb
stos
in
pop
fldenv
mov
xor
enter
mov
lea
lcall
repnz
xchg
js
rolb
inc
jle
out
outsb
push
lcall
mov
fnsave
xchg
loope
or
sbb
rcl
orl
sub
out
push
adc
pop
inc
adc
std
enter
fidivl
std
or
adc
mov
mov
out
popf
add
mov
out
push
xchg
mov
cmp
mov
cltd
mov
jmp
enter
daa
outsl
fists
outsl
enter
clc
inc
je
xor
shlb
test
fwait
out
out
inc
in
out
mov
mov
sbb
jge
mov
jo
cli
cmpsb
ret
adc
fidivs
icebp
movsl
in
adc
cmp
mov
push
mov
stos
dec
sar
cmp
inc
dec
aas
stos
insb
push
cld
and
stos
pop
sub
and
repnz
shrl
iret
pushf
push
pop
mov
cld
xorb
xor
jne
hlt
push
adc
cmp
add
loopne
testl
idivl
mov
dec
mov
scas
pusha
mov
adc
xor
sub
lahf
aam
out
lods
mov
xorl
adc
inc
mov
sub
pop
pop
gs
sbb
xor
je
sbb
xchg
dec
shll
sub
inc
or
cli
cmpsl
and
adc
lock
xchg
mov
outsl
inc
mov
dec
cmp
sahf
xchg
dec
and
dec
pop
push
sbb
loop
mov
and
xor
jnp
and
sti
push
or
pusha
xlat
jp
sbb
rol
test
xor
push
arpl
adc
lret
sub
xchg
inc
in
mov
leave
outsl
lret
inc
adc
idivl
inc
int3
test
dec
pop
or
in
insb
pop
or
mov
call
mov
aad
add
call
outsb
test
cmp
mov
xor
mov
push
push
cmp
sahf
or
sbb
cmp
xor
inc
lahf
aas
hlt
pop
lds
jo
iret
push
mov
popf
cmp
lret
lea
or
sbb
mov
movsl
jbe
aam
shr
bound
xor
add
clc
nop
data16
stos
xlat
lret
mov
and
mov
pop
jae
pop
fstps
and
sbb
mov
dec
in
pop
mov
fwait
hlt
adc
in
jg
aam
dec
inc
inc
pusha
hlt
inc
push
pop
jecxz
xchg
rorl
fstl
lcall
jp
mov
ds
pop
mov
jb
movsb
test
mov
pop
repnz
outsl
icebp
pop
mov
roll
push
jg
outsb
mov
lock
clc
sbbl
mov
jb
xchg
insb
lret
pop
jecxz
jl
inc
jecxz
imul
mov
pusha
je
sub
sahf
cmp
jge
pop
mov
cs
or
add
lcall
mov
mov
mov
pusha
dec
fwait
into
or
dec
sub
sar
sub
mov
push
push
xchg
xchg
imul
mov
mov
fs
out
lahf
outsl
andb
arpl
jecxz
movsl
dec
sub
cmpsb
jle
cmp
pushf
mov
pop
cmp
pop
mov
or
outsb
and
xchg
pop
pusha
std
cmc
xchg
lock
scas
sahf
stc
enter
fnstcw
push
ret
rclb
sbb
cmp
jnp
sub
mov
sbb
mov
ret
roll
adcl
int
jnp
enter
sub
std
adc
popf
lahf
inc
xor
out
sbb
fbld
mov
jae
fimuls
sub
and
lahf
jae
sbb
stc
loopne
ljmp
xchg
idivl
mov
idivl
mov
xor
loopne
in
cli
repz
lods
repz
enter
sarb
dec
out
mov
dec
scas
push
jne
sbb
ss
push
sub
push
cmp
dec
fistpl
xchg
push
shl
insl
xchg
addr16
enter
lds
sub
gs
pop
scas
in
pop
add
daa
loopne
and
cmp
imull
test
dec
shlb
pusha
cmp
pop
or
fnstenv
sbb
sbb
sbb
lretw
add
cwtl
or
or
add
mov
jno
addl
adc
in
mov
cmp
xadd
mov
fs
jmp
mov
lods
xchg
or
inc
pop
testl
insl
jp
mov
movsb
dec
jbe
rcr
fcmovu
dec
enter
je
int
test
lods
pop
in
cs
ret
mov
popf
hlt
sbb
les
xchg
xchg
out
sar
pushl
pop
insl
dec
cmpsl
xchg
cmp
pop
pop
inc
in
and
rcrb
and
ja
add
std
xor
iret
das
idiv
divl
mov
xlat
in
dec
mov
jp
dec
hlt
mov
stc
dec
aam
pop
ljmp
jns
in
pop
les
xchg
inc
adc
inc
jmp
xorl
imul
insb
cli
cld
out
xchg
cwtl
imul
sub
jmp
pop
jmp
xor
cmpb
lods
fsub
daa
jle
fcoms
jns
inc
idivl
mov
lds
sbb
stos
xlat
ret
add
popf
aad
mov
jg
dec
adc
or
dec
mov
mov
push
sub
icebp
push
bound
xor
call
pop
fstpt
js
cmp
lret
int
sub
fs
inc
inc
push
sub
jnp
mov
adc
pop
or
mov
call
lds
jg
js
xchg
decl
and
loop
ret
mov
inc
mov
pushf
test
out
popa
je
hlt
aam
push
sbb
sbb
inc
sub
sbb
cmp
into
andb
lods
shrl
push
add
leave
mov
add
pop
push
or
jp
lock
sub
bound
fptan
aas
jo
stc
aas
mov
ds
or
in
inc
fistpll
out
fimuls
insb
shll
jmp
mov
dec
out
cmp
xchg
into
leave
adc
hlt
lds
rolb
jmp
mov
fldt
mov
mov
pop
aas
in
test
pop
dec
outsl
xlat
imul
dec
cmpsl
out
je
popa
popa
mov
xchg
mov
xchg
mov
pop
jmp
lret
ficoms
jo
cwtl
mov
or
mov
mov
sub
hlt
in
mov
sub
sub
ja
jo
dec
jnp
rcl
bound
mov
test
sbb
mov
xchg
jae
xor
cs
xor
ret
ja
stos
repnz
mov
xchg
pop
cld
ror
push
xor
jl
out
add
mov
movsl
in
jae
out
sbb
iret
bound
add
jle
sarl
jo
pushl
cmp
pusha
jbe
fisttpll
cwtl
js
xchg
or
mov
jo
mov
fisttps
mov
jb
repnz
popa
lods
repnz
fmull
xor
cli
and
sbb
fcompl
fimuls
ja
xchg
aas
jnp
push
loop
fadds
repnz
inc
and
enter
xchg
mov
or
aam
lods
mov
in
sbb
fldt
fmuls
js
lods
push
in
or
push
sbb
sarl
sbb
jnp,pn
iret
scas
pop
ds
xorb
cld
in
sbb
lods
gs
push
lds
mov
cmp
push
lcall
leave
mov
mov
jg
ljmp
addr16
xor
cmpsb
sbb
lods
pop
ficoms
iret
int
into
mov
jno
daa
cmc
mov
roll
iret
movsl
add
movsb
sbb
mov
mov
mov
and
das
rcrb
pop
iret
pop
inc
pop
pop
adc
adc
xor
sti
ret
out
xchg
cli
push
loopne
sahf
dec
cmp
lock
or
insl
fwait
dec
jl
or
outsl
fstpt
out
pop
xchg
pop
in
les
test
push
xor
pop
jg
mov
sub
iret
cmp
push
cmc
jecxz
cli
popf
pop
cs
jmp
pushf
sub
loopne
pop
xor
test
and
cmp
xchg
sbb
dec
dec
sub
or
cli
imul
push
mov
icebp
inc
cli
mov
daa
mov
outsl
jbe
inc
insl
add
sub
pushf
jg
jmp
mov
inc
jle
jg
data16
out
cmpsl
dec
or
call
adc
fwait
cld
notl
je
mov
mov
das
cmpsl
imul
aam
dec
ja
icebp
xlat
loop,pt
xor
cmovg
pop
cmp
mov
cld
or
jnp
jmp
mov
mov
sbb
maskmovq
mull
xchg
cmp
or
sbb
pop
das
pushw
repnz
push
pop
out
loop
sbb
adc
out
aam
andb
les
mov
pop
mov
or
pop
cmc
lahf
mov
lret
cs
dec
cmpsl
mov
std
lock
cmpsb
push
jbe
fstps
out
out
fs
in
scas
jg
add
inc
clc
jmp
mov
adc
mov
mov
add
int3
popa
xor
mov
into
inc
loope
nop
adc
or
mov
mov
xchg
pop
js
bound
cmp
cmp
out
inc
mov
add
pop
and
cmp
fnstsw
mov
jmp
lock
out
inc
mov
mov
mov
incb
mov
mov
notl
inc
sub
dec
arpl
cwtl
push
cmc
add
mov
enter
stc
out
xor
mov
cld
push
repz
out
inc
bound
fcompl
fidivrs
dec
sbb
lret
std
mov
rdmsr
sti
fucom
jns
add
mov
outsb
fstpt
xchg
adc
push
sbb
and
inc
sar
idivb
test
jmp
xchg
adc
lahf
rdpmc
sbb
cmpsl
mov
xchg
push
fbstp
in
dec
xlat
sub
pop
push
jle
jnp
push
sub
push
fidivl
mov
mov
fisubs
cmpsb
psllq
push
loop
xor
jecxz
test
inc
mov
test
sub
cmp
adc
dec
idiv
or
data16
js
lods
lods
inc
and
inc
inc
mov
mov
mov
cs
cltd
sti
imul
repz
outsl
in
jmp
mov
jne
sti
lods
outsl
pop
push
shll
into
mov
cmc
dec
adc
sahf
pop
mov
push
jns
stos
and
inc
push
cmp
andb
leave
cmpsl
sti
sti
mov
out
sub
push
es
inc
xor
fiadds
scas
sub
push
int
xchg
mov
repz
push
div
loop
push
stos
ljmp
arpl
xchg
pop
mov
mov
add
movsb
or
std
dec
notl
pop
jae
push
scas
insb
mov
lahf
daa
ds
icebp
or
inc
and
out
popa
pop
decl
cmp
dec
adc
jne
addr16
mov
pusha
mov
lea
loope
scas
cmc
add
out
les
and
cmp
out
push
xchg
lea
adc
xchg
into
pop
ss
pop
jbe
pop
push
jmp
xchg
pop
and
mov
mov
es
js
out
shl
aam
in
push
lods
rorl
and
dec
fistpll
mov
push
sbb
ret
imul
mov
jbe
xchg
or
mov
sub
or
inc
xor
mov
xor
cwtl
xor
lods
orb
and
mov
lea
mov
enter
inc
out
sub
xchg
sub
xor
andb
test
pop
popa
cltd
addl
stc
sti
pushf
std
out
jns
outsb
repz
dec
cli
popf
hlt
jnp
neg
out
add
dec
fistpl
mov
add
jl
outsl
cmc
js
into
jp
push
outsl
ljmp
mov
cmp
inc
mov
daa
jbe
mov
jecxz
or
pop
rolb
mov
xor
pop
repz
test
scas
in
pop
orb
pop
fisttps
adc
cltd
pushf
fadds
roll
fwait
inc
push
push
sar
dec
nop
incl
pop
ret
xchg
mov
push
popf
push
fildll
sub
xchg
clc
fdivrs
jle
das
mov
js
shrl
mov
test
pop
rorl
mov
jmp
adc
lock
lock
lock
js
jae
xchg
and
mov
out
xchg
push
scas
das
popa
lea
inc
cltd
popf
push
sbb
sbb
sbbl
jnp
ds
inc
lds
dec
pop
loope
ror
arpl
xchg
and
mov
pop
cmp
add
xor
arpl
jo
in
out
jp
inc
inc
ss
js
fsts
pop
ss
testb
mov
sub
js
out
jge
adcb
call
inc
ljmp
cli
jecxz
and
ret
dec
sbb
add
add
cld
int3
sub
fcoml
lods
mov
push
ret
pop
lea
scas
ret
mov
nop
inc
out
mov
in
jg
dec
std
jecxz
push
pushf
daa
rcrb
cmpsl
ret
xorl
imul
xor
jmp
shl
inc
mov
jnp
adc
dec
jns
fisubrs
sbb
dec
lods
adc
xchg
mov
add
in
add
fstl
xor
xchg
cli
mov
jnp
mov
push
jns
popf
lock
fmulp
xchg
jge
sub
push
and
std
jle
cltd
cmpb
jne
ret
fnsave
int3
aaa
sbb
cli
sbb
mov
mov
push
shrl
mov
fbstp
iret
mov
in
mov
push
aad
cmp
and
cwtl
test
std
jne
sub
cld
clc
push
fs
mov
sub
aas
mov
ja
cmp
out
mov
shll
incb
subl
les
cmpsl
cmpsl
add
lahf
ja
push
jmp
cmp
inc
enter
les
cmpsl
out
push
jns
mov
lods
jbe
add
cmpl
insb
mov
rorl
xchg
dec
je
in
js
push
test
sbb
int
mov
mov
sub
outsb
fcompl
in
cmp
in
faddp
jbe
push
in
sub
xchg
stos
sbb
mov
sub
loope
in
aad
push
inc
jmp
xor
jae
loope
mov
mov
pop
nop
pushf
xlat
lods
les
pop
repz
outsb
mov
sub
sbb
add
pusha
test
or
sub
popa
ret
mov
ror
cmp
insb
stc
inc
add
aas
push
xchg
clc
cmpsl
cli
iret
add
fwait
mov
loope
shlb
out
or
hlt
repz
dec
insl
mov
hlt
loopne
jo
stc
inc
dec
sahf
dec
adc
ds
sbb
adc
js
xor
ss
xchg
sub
call
int
sbb
sahf
xchg
out
test
into
pop
mov
fsubs
ret
aaa
push
add
loope
pop
clc
cli
pop
xchg
mov
sub
pop
outsb
out
ss
jge
jle
pushf
lock
fwait
xchg
jae,pt
mov
mov
out
inc
arpl
or
mov
sbb
fs
repz
sub
out
inc
mov
adc
aam
neg
jne
in
xchg
test
sub
bound
cli
decb
xchg
pusha
xor
add
call
jecxz
scas
jns
lret
je
sub
adc
inc
xchg
loop
in
movsl
dec
mov
ss
das
into
dec
mov
movsl
out
inc
cmp
add
adc
cmp
inc
mov
ds
daa
cmp
repnz
lret
aad
fidivrl
sub
sarl
pop
cmp
and
xlat
pop
dec
push
xchg
push
loopne
mulb
xchg
ret
mov
bound
sti
xchg
sub
lcall
stc
test
push
insl
out
lret
ds
xchg
adc
inc
mov
ror
pop
stos
xlat
xor
xlat
sub
mov
in
sbb
push
std
inc
push
cmc
and
lods
ja
mov
add
xlat
xchg
out
adc
aas
xchg
jne
pop
loopne
hlt
inc
movsb
inc
popa
mov
sub
das
or
test
mov
dec
mov
inc
inc
test
daa
mulb
jnp
movsb
mov
xor
sbb
pop
lcall
or
fpatan
data16
add
clc
push
cmpsb
ja
jge
pop
pushf
in
and
jle
xor
fwait
shl
mov
aas
jnp
lahf
fdivl
popa
imul
push
mov
dec
pop
and
outsl
xor
ljmp
cli
inc
pop
nop
mov
stc
pushf
dec
popf
in
xchg
jo,pt
dec
cld
or
aas
scas
and
xchg
pop
jno
sub
cld
xchg
lahf
cmp
xor
jb
ja
xchg
mov
test
mov
es
sti
mov
adc
jg
xchg
mov
jle
and
sub
or
xchg
lcall
call
out
mov
out
sbb
push
dec
sbb
push
jle
lret
pop
test
lods
lock
jp
or
xor
inc
cmp
push
jle
fdivl
es
clc
gs
daa
xor
sbb
mov
call
rclb
jae
call
js
pop
fs
xor
xchg
pop
pushf
pushf
fsubs
dec
call
andl
iret
sub
mov
in
mov
inc
outsl
loop
fstpl
arpl
pop
out
dec
xchg
repz
jmp
sbb
rcrb
mov
pop
mov
pop
add
ficompl
add
outsl
add
push
xor
mov
push
aaa
mov
xchg
cmp
int
jnp
adc
sar
push
imul
insb
pop
sti
ret
inc
dec
cld
mov
inc
lcall
mov
aaa
lcall
or
or
icebp
arpl
and
xchg
cmp
scas
jge
ret
jmp
jle,pt
adc
mov
in
cmp
cli
or
cmp
jae
mov
fcomps
out
add
int
jbe
xlat
mov
dec
pop
out
add
inc
sbb
loopne
insl
repz
jne
jg
pop
outsl
sub
cmp
cmpsl
and
push
adc
testl
fidivrl
adc
test
pop
fstpl
push
xchg
jmp
cmp
ret
cli
outsl
pushf
daa
lahf
push
pop
mov
in
and
jle
xor
sub
push
adcl
mov
popa
sbb
sahf
xor
fistpll
mov
jnp
daa
nopl
movsb
std
push
std
aad
inc
andl
mov
mov
add
fmul
rcrl
jl
mov
or
adc
popa
mov
pop
sbb
insb
fnstcw
cli
rorb
in
mov
inc
mov
mov
and
inc
mov
jge
dec
jg
les
mov
fadds
cmc
cmpsl
xchg
in
xchg
aas
lret
push
lods
outsb
repnz
or
fstps
jns
push
outsl
xor
js
shll
jmp
fnstsw
push
cwtl
out
rclb
sbb
dec
pop
xor
cli
aam
into
repnz
in
xchg
lea
mov
les
insb
cwtl
neg
mov
pop
outsl
sub
enter
daa
mov
pop
mov
fwait
das
outsl
cmp
ret
sub
je
jecxz
mov
and
jle
lcall
sbb
adc
sahf
sbb
inc
mov
test
fld
cmc
and
sbb
xchg
js
call
call
cmp
notl
adc
ja
sbb
lds
ss
cwtl
divb
lret
cmp
cmp
data16
cmpsb
sar
call
xor
jns
in
int3
in
rcrb
cwtl
cmp
pushl
ficoml
loop
sbb
les
sbb
adc
xor
jb
cmp
daa
mov
sti
aas
xchg
insl
jbe
out
mov
pop
cmpsb
repz
mov
icebp
sbb
lock
leave
xchg
stc
les
xor
insb
outsl
outsb
push
dec
cmc
push
adc
es
cmp
mov
fcomip
gs
rcrl
movsb
xchg
jmp
mov
jl
pop
imul
ret
outsl
dec
mov
fs
inc
out
pop
dec
in
in
push
outsb
add
std
mov
in
leave
add
out
adc
addr16
hlt
les
movsb
pop
fwait
aad
xchg
fisttpl
cmp
fldcw
repnz
push
bound
fidivs
pop
pop
fnstsw
popa
ret
jae
in
sub
sbbb
sbb
xor
cmp
andb
loope
cmp
clc
xlat
insb
add
jb
dec
cmp
xor
mov
js
cli
ret
sub
cmp
add
ds
xchg
jns
sub
sbb
mov
lret
fidivs
inc
mov
cmp
lods
lock
cmpsb
pop
cli
sbb
pop
ret
ret
sbb
push
dec
or
mov
loope
leave
pusha
aad
call
aas
cltd
push
jmp
aas
pop
incl
gs
addl
iret
icebp
push
dec
cmp
push
jle
in
cld
sbb
sarl
xor
pop
fstpt
jp
mov
sbb
imulb
in
repnz
daa
hlt
xchg
push
inc
aaa
shrb
adc
stos
mov
cmp
ja
arpl
add
xchg
aas
shll
pop
sub
ret
add
lods
pushl
fistpll
test
clc
cld
fisubs
clc
enter
add
sub
mov
sub
outsl
jae
mov
lahf
test
jg
mov
jg
incl
iret
xchg
sub
xchg
cmp
ljmp
and
cmp
cmp
inc
cld
out
fsubs
stc
cmpsb
add
jbe
mov
sub
pop
cld
mov
mov
dec
cmc
mov
and
sbb
ret
arpl
popa
imul
lock
adc
inc
push
fistl
std
dec
xor
cld
inc
cltd
mov
sqrtps
xchg
leave
xchg
pop
or
loopne
and
popa
pop
js
cmpsl
rol
mov
inc
mov
lcall
testl
imul
repnz
mov
adc
imul
ret
rorl
lcall
jo
dec
scas
xor
insb
sub
jns
sub
les
sub
je
mov
and
mov
push
rol
xchg
testb
test
clc
dec
sub
push
in
nop
and
ret
xor
in
dec
aaa
jmp
jp
in
les
cld
dec
cld
sub
xchg
xchg
jns
pop
xchg
shrb
ds
repz
aam
cs
xchg
jmp
test
xchg
jmp
inc
icebp
cmc
sahf
rcll
xchg
out
insb
pop
test
cmp
xchg
cmp
or
cmpl
jnp
inc
mov
push
sub
std
lds
fldcw
mov
mov
jnp
push
push
popa
jle
and
pusha
jp
mov
out
icebp
sbb
jbe
xchg
pop
adc
adc
pop
pop
int3
and
sbb
add
cmpsl
testl
fstps
scas
in
inc
adc
dec
clc
pop
pop
mov
xchg
push
ffreep
inc
dec
jbe
mov
and
ds
test
fwait
scas
mov
aas
jbe
fildl
lea
push
mul
loop
xor
jle
scas
dec
cmpsb
shrl
std
daa
mov
filds
sub
dec
jle
ret
and
push
lock
mov
xchg
leave
dec
or
or
jo
test
jnp
out
dec
scas
inc
test
aad
ret
icebp
dec
sub
pop
lcall
ficomps
mov
outsl
cmp
ljmp
pusha
sbb
andb
testb
leave
pop
shlb
sub
mov
xchg
shl
add
hlt
daa
or
fstpl
daa
jge
jne
imul
add
inc
cmp
mov
sub
in
ficoms
ffree
jecxz
cmp
addr16
mov
xchg
dec
adc
mov
pop
rcl
mov
in
test
repz
xchg
out
jnp
xlat
mov
jle
ret
test
ret
xor
test
cs
movsl
mov
xchg
mov
jns
pop
popa
mulb
cmp
pop
add
fidivs
scas
arpl
andl
mov
xlat
int3
pop
adc
fidivrs
testl
mov
jo
add
sub
jge
pop
dec
mov
mov
sub
push
dec
sub
in
leave
sub
add
negl
sub
jns
cmp
test
pop
xchg
js
mov
sti
and
xchg
imul
mov
ss
data16
stos
dec
jl
jo
jb
mull
add
xor
cmp
xor
addr16
push
mov
sbb
jb
dec
pushf
xchg
fwait
pop
ss
pop
out
mov
xchg
jbe
ret
mov
iret
jbe
or
leave
ds
lahf
scas
out
mov
aas
cmp
adc
xrelease
fnstsw
mov
xchg
insb
mov
int3
mov
cmp
andl
jl
sti
sub
scas
jbe
hlt
into
fldenv
fimuls
cmpsb
stc
in
push
das
movsb
jl
rcrl
cltd
dec
push
adc
sahf
lock
out
xchg
mov
mov
movsl
cmp
xchg
fbstp
clc
mov
repnz
add
outsl
stos
ds
jecxz
je
jns
mov
and
xor
sbb
push
daa
addl
out
shlb
idivb
stc
int3
xchg
inc
das
fbld
sbb
push
jns
in
mov
inc
push
dec
cltd
dec
out
mov
and
xrelease
sahf
xchg
push
in
push
or
stc
repz
dec
int3
outsb
fstl
mov
jl
adc
mov
dec
xchg
add
scas
aad
stc
repz
repnz
sar
repz
pop
jge
mov
es
jns
jle
xchg
out
in
and
inc
addl
test
fistl
mov
stc
iret
mov
lods
push
fcmovnb
ficompl
push
cld
pop
sbb
mov
mov
xor
test
inc
sbb
out
aam
adc
sbb
ret
pusha
aam
out
cmp
inc
fnstenv
push
lahf
push
xchg
outsl
mov
pusha
add
dec
or
out
sbb
cmp
jl
mov
mov
out
div
movsb
pop
cmp
ss
adc
jns
or
jl
jnp
adc
daa
ret
cmp
sbb
shrl
add
pop
shr
and
dec
cmc
stc
push
push
fcmove
inc
gs
mov
repnz
push
in
aas
lahf
mov
jge
test
cmp
mov
push
xor
cltd
mov
xorl
leave
mov
aad
fstpt
jnp
int
cmc
xlat
add
pop
dec
cltd
in
mov
idivl
es
add
jg
fidivrs
scas
fidivl
pop
and
pop
adc
push
cmp
push
lret
mov
dec
cmp
pop
lds
call
fadd
fstl
mov
jb
scas
idivl
out
faddp
or
mov
pop
nop
mov
loopne
lods
cltd
faddl
jno
scas
mov
push
cmpb
sahf
pop
mov
pop
jg
lods
in
push
cmpsb
push
or
mov
inc
sub
cltd
dec
mov
xor
add
fwait
cs
jmp
fmuls
jle
sub
js
mov
stos
jge
xchg
sub
push
xchg
imull
jnp
je
mov
iret
sub
pop
sbb
into
mov
adc
xchg
stos
mov
std
dec
adc
cmp
pcmpgtb
mov
dec
push
popf
pop
aas
popa
aad
mov
jae
dec
mov
jmp
aas
add
das
and
add
adc
pop
cmp
push
or
in
pop
push
and
fidivrl
test
repz
sub
fcomps
out
pop
dec
push
fbld
scas
hlt
in
sub
movq
add
movsb
cmp
out
mov
xchg
gs
jbe
sbb
outsl
fldl
sub
mov
and
xchg
fisubrl
ret
inc
mov
shr
js
aaa
mov
cmp
ror
sbb
adc
les
mov
lods
and
clc
dec
into
jge
cli
test
pop
sbb
sub
adc
pop
pop
mov
mov
into
btc
mov
loopne
ds
popa
pop
xchg
scas
test
xchg
es
xor
fstpl
ss
sbb
aad
sbb
mov
fistpll
dec
jp
ficompl
sub
sub
setns
jl
clc
test
xchg
inc
push
or
xlat
lds
clc
test
in
mov
adc
pop
loope
cmpsl
inc
and
jb
inc
jecxz
jge
imulb
adc
cmc
mov
or
adc
cld
je
lcall
mov
mov
shrb
pop
mov
xchg
xlat
incb
lahf
jge
leave
ret
jmp
sbb
pop
pmaxsw
sbbl
jge
jge
mov
lret
cmp
and
push
jge
mov
loop
insb
mov
adc
ljmp
out
aaa
into
aas
stc
jecxz
xor
push
cmc
cwtl
mov
test
insl
jne
enter
sub
sub
push
jae
xchg
out
jns
sub
inc
xchg
in
push
dec
mov
jp
cmp
mov
lcall
daa
xchg
cmpb
add
stos
testb
std
mov
out
shl
add
pusha
popa
push
xor
test
xchg
inc
call
cmp
or
cld
rcrl
add
movsl
imulb
shrb
mov
xor
xor
out
jecxz
ret
lahf
push
or
pop
cmpsl
dec
and
mov
out
testl
sbb
ljmp
in
shll
push
test
ret
call
jg
les
stos
out
jmp
movsl
jmp
push
push
loop
out
pop
clc
dec
scas
mov
mov
jae
xor
dec
mov
aam
pop
or
loope
add
out
das
jmp
jp
inc
inc
movntq
and
sbb
mov
popf
adcb
sbb
sbb
icebp
inc
lcall
outsl
ljmp
push
mov
dec
cld
scas
pop
cwtl
cld
xor
ffree
jae
fistpl
xchg
dec
xchg
cmpsb
jp
loope
jp
aad
in
jp
jp
mov
mov
mov
jle
and
push
inc
push
jmp
mov
push
test
jle
call
cmp
scas
lods
loop
jge
loope
mull
pop
std
hlt
push
xor
movsl
bound
sbb
loopne
jle
stc
mov
aas
xlat
mov
dec
or
mov
add
fisubrs
cmpsb
out
push
repnz
fwait
mov
cmpxchg
outsb
xchg
add
mov
add
mov
jle
push
into
jo
dec
mov
push
or
sahf
subb
jle
add
insb
subb
push
arpl
or
ds
add
arpl
cmp
stos
inc
push
outsl
test
das
mov
jecxz
adc
into
out
fsubs
adc
add
inc
add
cmp
dec
dec
cmp
sbb
mov
mov
inc
mov
loopne
mov
adc
dec
repz
adc
lcall
jb
mov
in
lcall
insl
sahf
mul
ficoms
int
mov
xchg
mov
jae
sbb
pop
popa
sbb
pop
push
mov
in
clc
inc
cltd
testl
mov
ja
sti
xor
cmp
fldcw
add
stc
mov
adc
xchg
fmull
pop
pushf
xlat
in
fdivrs
shrb
into
push
cmp
into
pop
lret
jnp
in
fldenv
es
or
mov
sarl
xor
sar
int
xor
popa
pop
inc
pop
outsb
stos
arpl
mov
stos
pop
test
cltd
push
cld
call
jmp
inc
pop
aas
popa
sti
pop
lea
push
jo
pop
xor
jbe
dec
out
inc
out
fprem1
mov
mov
pop
push
fstl
and
push
or
and
xlat
testl
inc
aad
inc
ror
cli
dec
lock
push
and
into
xchg
dec
jne
and
scas
shrl
fdiv
outsb
push
daa
mov
or
sub
push
hlt
push
ja
adc
push
xchg
dec
jno
fsubs
test
lahf
outsb
movb
xor
gs
imul
adc
mov
dec
fdivl
cmc
mov
iret
lods
cs
arpl
cmp
in
stos
xor
xor
fs
inc
push
xchg
push
insb
mov
mov
pop
stc
ret
jae
sahf
outsl
rcr
cmp
xchg
lret
fisttps
je
insl
cli
push
repz
jge
mul
mov
or
icebp
mov
pop
dec
pop
pop
cli
mov
das
cs
mov
addr16
push
xchg
cmp
std
rolb
cmpsl
nop
sbb
fistpll
int3
mov
cli
mov
dec
das
rol
pop
sub
xor
hlt
dec
or
ret
jb
and
push
fcmovbe
mov
sub
pop
cwtl
test
fsubl
roll
mov
cmp
fstl
ss
shll
pop
repz
bnd
pop
xor
fisubrs
mov
lcall
mov
out
ja
scas
xor
in
cmpsb
jns
lds
push
jae
mov
xchg
test
adc
je
das
mov
icebp
popf
mov
mov
adc
pusha
dec
adc
jge
aam
or
push
sub
dec
stos
movsb
fdivrl
arpl
cltd
cmpl
out
pushf
inc
popa
movsl
push
jmp
mov
cmp
sbb
gs
and
mov
loope
aad
movsl
pop
and
ficompl
sahf
loop
inc
sbb
fimull
cmpsl
add
imul
lcall
into
test
mov
in
outsb
push
xor
mov
scas
in
jg
and
jg,pt
mov
pop
stos
mov
pop
inc
sbb
inc
mov
cmp
pop
sti
cmc
loopne
fstpl
jnp
lahf
aad
lds
mov
lods
mov
es
jnp
cs
divl
ds
fucomip
pop
mov
dec
mov
cltd
mov
out
mov
pop
push
jmp
sbbl
jne
inc
jl
or
sub
out
js
out
mov
imul
xchg
iret
lods
cmp
jb
shr
out
icebp
and
iret
lods
cwtl
push
xchg
lret
jecxz
push
dec
cli
mov
xchg
mov
pop
adc
mov
pop
cmc
jge
push
xchg
fwait
cltd
movsb
ret
push
testb
pop
aam
je
loop
xchg
rcl
and
fldl
jns
rcll
inc
jns
test
dec
lods
push
mov
cwtl
jnp
out
enter
fnsave
adc
cmp
je
xchg
movsb
orl
dec
ret
pushf
fdivrl
or
in
sub
ljmp
aaa
scas
leave
jne
ljmp
cli
add
jno
pushf
in
xor
xor
push
int3
mov
cmpsl
scas
mov
and
lods
gs
and
xor
push
or
push
mov
movsb
pop
mov
add
push
movsb
cwtl
into
cmp
fisubs
frstor
aas
je
lea
inc
jnp
enter
jp
lds
outsb
lods
in
jbe
imul
mov
sbb
cmovl
lret
mov
pop
sbb
xor
pop
aas
sbb
jmp
xchg
imul
repz
inc
inc
outsb
out
out
sub
mov
inc
pop
dec
push
enter
es
dec
pop
xchg
ljmp
les
sbb
xor
adc
aas
mov
push
lea
mov
pop
loopne
fisubrs
push
mov
pop
je
adc
jge
mov
adc
pop
jl
xor
int3
jmp
in
cmp
jge
cld
mov
inc
mov
mov
clc
int
es
shlb
fnstcw
add
mov
pop
out
into
aad
fisubl
lret
jl
jp
iret
xlat
test
jno
stc
mov
sub
ds
pusha
jle
lds
shr
mov
or
inc
clc
push
addr16
pop
pop
mov
xchg
leave
xor
shl
aas
jp
jmp
test
dec
xor
popf
in
aas
lret
cmp
out
repz
jmp
popf
es
nop
lahf
mov
jl
adc
sar
loopne
cmpsb
daa
out
fstpl
mov
enter
mov
int
int3
mov
subl
stos
push
nop
dec
mov
mov
test
inc
pop
lock
leave
xchg
xor
add
aad
push
stc
sub
jmp
mov
mov
clc
stc
xlat
pop
jecxz
aad
pop
js
and
decb
aas
les
pop
mov
inc
jbe
xchg
inc
out
add
jne
mov
aaa
adc
lock
fistpll
popf
inc
push
sub
in
sahf
in
cmpsl
xchg
outsb
push
pop
cmp
xor
cmp
lods
xor
stos
sub
fwait
sarb
dec
divl
das
js
sbb
in
test
popf
mov
shr
out
inc
or
jp
ss
cli
mov
dec
scas
out
rcr
paddusw
cmp
mov
jns
dec
sti
shrl
stc
int3
pusha
xchg
out
adc
inc
ljmp
jg
push
mov
cmp
pop
hlt
popf
mov
ds
repnz
xor
xchg
in
add
ljmp
dec
jle
pop
ja
mov
fcompl
data16
out
push
jmp
jae
shlb
insl
imul
repz
out
mov
lahf
cmpsl
es
xchg
lahf
mov
call
clc
mov
cli
dec
outsb
outsl
filds
cmp
and
int3
test
lcall
dec
movsb
pop
out
sub
push
ss
call
push
and
xchg
stos
jl
movsl
mov
popa
stc
mov
clc
sahf
sub
dec
fwait
mov
movsb
jecxz
fndisi(8087
stos
pop
pop
ret
pop
out
ror
call
test
jae
xchg
stc
adc
ljmp
fmuls
insb
andb
fdivs
mov
fs
mov
cmpsb
dec
scas
jae
shll
call
inc
mov
push
jno
sbb
out
pmuludq
mov
or
pushaw
daa
pushf
sbb
mov
xchg
and
cmp
inc
mov
xor
and
mov
pop
out
insb
and
cltd
sbb
push
inc
xchg
int3
jnp
fildll
out
mov
or
xor
das
mov
div
cmp
scas
push
xor
jl
ret
in
add
scas
pusha
push
mov
fcoms
decl
xchg
push
sbb
add
ud0
push
mov
mov
inc
xor
jb
cmp
in
dec
pop
arpl
push
mov
fwait
pop
mov
sub
in
lds
sahf
insb
aaa
lods
mov
cmp
mov
mov
jl
pop
aad
loop
push
arpl
push
add
stos
decb
lea
mov
hlt
loope
fwait
mov
mov
lock
and
push
inc
in
cld
out
jb
inc
or
inc
push
int3
fldcw
xchg
pop
and
push
test
cmp
cwtl
popa
notl
rorl
jb
into
inc
test
cmp
negl
dec
xor
lcall
ud1
jo
sub
loop
pop
insl
arpl
mov
jbe
cmp
lahf
icebp
push
fadds
aas
popa
fucomp
fcompl
mov
int3
xchg
inc
fists
and
sahf
mov
add
addr16
cli
mov
mov
mov
adc
fwait
mov
das
lcall
negl
pop
test
lds
xor
repnz
cmp
lea
sbb
leave
xor
dec
pxor
inc
xchg
ljmp
bound
int3
add
jecxz
mov
in
jl
cmp
or
inc
cmp
cmp
mov
inc
fidivrs
mov
cmp
imul
adc
daa
cmp
and
lea
adc
aam
xor
or
shl
jnp
rol
adc
cwtl
hlt
or
jl
int
jle
and
fwait
push
xor
insl
dec
mov
mov
dec
mov
jb
ret
sbb
push
sbbl
in
icebp
adc
cmp
mov
mov
push
jecxz,pt
mov
jns
fidivrs
gs
cmp
push
daa
mov
mov
mov
jp
jne
ret
and
ret
xchg
fsubp
xchg
repz
rcl
subl
test
dec
lret
jo
loopne
sti
lock
jl
addr16
jne
repz
xor
dec
push
dec
leave
and
push
imul
daa
jbe
inc
jge
sbb
cltd
xchg
ret
jg
cwtl
ja
popa
fsubl
enter
ret
mov
xchg
ja
popa
cmp
clc
cltd
outsb
push
add
in
push
jg
jb
iret
lahf
inc
in
leave
pop
movsb
bound
jae
sbb
inc
xor
cltd
mov
mov
adc
lret
mov
cwtl
and
shlb
jge
leave
and
rcl
mov
xlat
cld
fs
mull
mov
iret
out
scas
mov
test
and
jge,pt
repz
popa
fimuls
mov
pop
cmp
jb
and
xlat
sbb
loopne
push
and
in
jg
pop
jae
cmpsl
dec
mov
not
rcr
test
push
scas
or
outsl
fs
push
pop
in
outsb
or
loop
repnz
mov
add
arpl
inc
jg
mov
test
cmp
dec
sbbb
sbb
pop
shlb
dec
mov
ficoml
imul
fmull
lock
jno
movsl
add
jo
gs
andl
mov
ss
in
test
js
das
sahf
fldt
inc
pop
ja
cmp
and
xor
iret
dec
lahf
lods
inc
xchg
mov
into
inc
add
in
pusha
test
out
xchg
aaa
mulb
mov
ja
lds
in
movsb
ret
cmp
scas
cmpsb
mov
pusha
mov
sti
jmp
cwtl
fsubr
sub
jg
mov
push
idivb
xchg
sarb
fstpl
repz
out
cli
in
std
xchg
loop
out
inc
inc
repnz
jl
lahf
sub
pop
mov
lods
enter
pop
out
lea
jns
movsb
je
enter
arpl
jb
gs
cmpsb
jle
mov
jbe
jecxz
and
lods
repz
lock
scas
repnz
or
fwait
cmp
in
jmp
sbbb
iret
out
sub
test
fwait
mov
jp
xchg
jl
imul
sarl
pusha
mov
rclb
dec
aas
repnz
mov
data16
loope
mov
pop
mov
dec
in
sub
cmp
ss
imul
int
rcrl
stos
push
mov
fidivs
lods
std
xchg
out
je
cli
sbb
addr16
sti
sub
int3
add
jno
sahf
add
movsl
cmp
add
mov
and
push
imul
stos
rolb
pop
shl
or
fsubrl
add
hlt
lret
enter
outsb
lock
cmp
int3
arpl
bound
or
sbb
iret
xchg
xchg
mov
pop
in
lods
inc
dec
aas
loopne
subl
pop
pop
mov
xchg
test
cmp
cltd
es
aas
pop
jne
arpl
ja
and
mov
inc
jns
jp
lds
inc
jno
je
enter
adc
or
aam
add
adc
xchg
dec
mov
sub
push
xchg
jmp
cmpsl
sbb
cmp
xchg
mov
mov
outsb
lahf
fucomp
mov
mov
push
imul
jp
jl
xchg
push
jle
mov
cli
add
hlt
movsl
ljmp
and
orps
int
ds
inc
jge
adc
cltd
cmp
or
out
push
adc
iret
adc
clc
adc
xchg
daa
mov
cld
cld
push
xor
dec
push
iret
or
pop
je
xchg
popf
lods
xor
stos
mov
mov
scas
pop
xlat
clc
xchg
push
call
mov
inc
jbe
push
pop
mov
fsubr
test
mov
das
icebp
xor
push
in
mov
out
inc
mov
repnz
mov
inc
cmp
inc
dec
mov
loopne
aam
or
mov
stc
xlat
sub
mov
mov
cmp
push
fcmovne
pushf
xchg
or
mov
inc
lods
cmp
dec
fs
sahf
cmc
sub
shll
fidivs
push
ret
jge
xor
push
dec
frstor
out
add
add
and
jp
inc
les
es
or
xor
inc
ret
pushf
cwtl
or
shll
push
std
in
cwtl
outsl
sbb
je
mov
imul
lahf
jp
xor
in
aas
mov
adc
mov
icebp
sbb
sub
outsb
scas
cmpsb
push
imul
lcall
xchg
ja
fimull
pop
mov
dec
jbe
xlat
and
and
push
and
std
xor
daa
mov
fbld
imul
jne
movl
cmp
or
popf
out
in
pushf
jnp
or
clc
jl
cmc
dec
mov
aad
cmp
outsl
pushf
mov
cmp
out
push
movsl
dec
mov
loopne
mov
jbe
inc
jns
ljmp
push
icebp
jb
popf
push
or
or
inc
ja
push
sbb
es
clc
jp
push
outsl
pop
or
insb
fsubrl
popf
cmp
fisubrl
pop
leave
sub
sti
push
mov
in
and
jbe
jl
sti
lds
loopne
negb
in
or
or
mov
jle
in
shl
inc
fxch
mov
adc
stos
adc
test
aad
inc
lcall
xor
inc
jo
xchg
loope
dec
test
sti
outsb
xor
mov
lahf
stc
out
xor
call
pop
in
xchg
jge
stc
aam
rcr
mov
ds
loope
pushw
rcrl
jp,pt
mov
in
mov
aas
cli
sbb
xchg
sahf
test
sbb
jne
adc
jb
xor
popa
lea
mov
scas
push
addr16
jecxz
pop
pop
push
jae
xchg
stos
xchg
mov
inc
mov
xor
scas
and
clc
mov
sti
pop
jge
pop
jo
push
fistpll
push
mov
js
mov
pop
push
mov
sub
sub
cmp
push
dec
ds
in
in
sbb
imul
add
aaa
dec
jecxz
je
dec
xor
and
pop
mov
dec
fmulp
sub
dec
popa
pop
out
aas
push
int
push
decb
daa
loope
outsl
aas
fldcw
dec
fldenv
adc
ds
lret
into
dec
mov
push
cmp
sub
daa
das
shr
xor
divl
sub
in
lea
popf
out
mov
mov
sub
out
ljmp
fs
dec
sbb
fimuls
push
ja
popa
jnp
aas
idivb
or
mov
push
repnz
mov
pop
shll
dec
pop
xor
inc
cmp
out
out
icebp
mov
aam
orb
in
mov
decl
subb
pop
xor
mov
gs
ret
pop
cld
mov
es
mov
push
ret
inc
lock
sub
xchg
xorl
sbb
xchg
scas
jecxz
ror
int
mov
inc
jle
inc
daa
jle
inc
inc
inc
out
mov
je
pop
fstps
stc
pop
sub
pop
or
call
push
jge
mov
dec
and
daa
and
or
pop
popa
and
aad
loopne
inc
jl
pmullw
out
test
fldenv
pop
addr16
push
movsl
hlt
cwtl
insl
test
insb
call
mov
inc
xor
stc
lret
pop
lea
xlat
mov
adc
dec
scas
xor
adc
lods
cmpsb
pop
fmuls
mov
clc
dec
arpl
add
sub
addr16
pop
cmc
lock
ja
mov
dec
out
popa
jne
js
mov
mov
icebp
pop
shlb
mov
lret
scas
add
cmp
xchg
idivl
je
pop
sbb
enter
outsb
push
mov
mov
pop
xchg
and
jmp
pop
cmpsb
mov
adc
out
stos
and
push
inc
sub
xchg
insl
or
fbstp
xchg
mov
pusha
je
inc
out
sahf
mov
xchg
xchg
mov
repnz
and
fcompl
xchg
or
js
mov
adc
fs
xchg
inc
cmp
cmpsb
mov
setne
pop
enter
mov
filds
das
jecxz
hlt
sub
insl
fcoml
mov
cmp
inc
lcall
sti
test
in
rol
jmp
ror
idivl
js
mov
mov
das
adc
xchg
sti
pusha
mov
or
pop
xor
out
ja
mov
jns
push
cmp
shl
lcall
xchg
fimuls
xchg
sbb
fs
outsb
pavgw
jg
inc
std
xor
out
shrl
loopne
or
popa
xchg
out
or
inc
dec
je
in
sub
std
jg
shll
addr16
or
fwait
push
push
jbe,pt
ret
cwtl
jae
cmp
call
push
pop
aaa
jnp
lock
repz
aad
jg
or
clc
pop
pop
mov
loope
fimull
jo
fiaddl
adc
jns
fisttps
jmp
sbb
movsl
jmp
mov
pop
filds
mov
out
pop
jnp
ja
stos
fdivrs
pop
fsubs
mov
mov
xor
es
dec
xchg
lret
sbb
add
hlt
out
aam
call
pop
jmp
shl
shrb
lret
lret
aam
stc
sbb
adc
ds
dec
and
push
ds
fiadds
fisttpll
mov
test
testl
js
idivb
dec
cmp
cmp
sub
or
xchg
les
push
movups
jb
ss
stc
clc
mov
pop
mov
cltd
add
insb
outsl
lods
mov
ret
xor
out
ds
ror
mov
xchg
negl
dec
mov
jmp
push
fsubp
inc
out
jns
cld
shrl
sarb
fcmovnb
inc
rclb
pushf
sar
sti
lret
fildll
outsl
popa
ror
cmpsl
and
jns
ret
cmp
out
jbe
in
fnstcw
movsl
fbstp
sub
test
pushf
mov
adc
mov
scas
aaa
push
add
xor
icebp
mov
and
outsl
mov
fwait
negl
leave
stos
add
mov
mov
xchg
shll
loop
pop
or
inc
jnp
sub
jl
iret
cli
out
jnp
dec
mov
dec
rep
into
add
xchg
jmp
or
dec
dec
dec
jl
incl
popa
je
arpl
out
push
pop
in
lret
xor
and
inc
sub
out
clc
xchg
pop
stc
icebp
mov
ljmp
clc
xor
xor
xchg
das
adc
std
xorl
inc
insl
loop
cmpsl
jne
or
add
pop
mov
lods
and
insb
sbb
mov
inc
in
inc
ret
adc
icebp
xchg
xor
xchg
inc
push
sbb
pop
sbb
xchg
cmp
test
or
mov
add
cmp
mov
fidivrl
iret
scas
or
jecxz
aad
and
and
mov
mov
repnz
and
out
pop
inc
dec
or
mov
cwtl
pop
idivl
gs
sub
ss
mov
dec
inc
lods
sub
lea
ljmp
mov
jge
cmc
in
les
sub
pop
jl
jno
or
enter
mov
mov
pop
xchg
cmpsb
xchg
inc
loopne
scas
mov
mov
pop
pop
mov
jns
mov
inc
pushf
adc
jne
push
sub
stos
xchg
and
test
nop
dec
test
cmpsl
xchg
inc
fstps
jecxz
cmpsl
fidivrs
repz
mov
mov
pop
add
pop
jg
mov
shll
pop
sub
nop
cwtl
cmp
jmp
xlat
mov
mov
or
xorl
mov
data16
sbb
pop
adc
pop
sti
imul
fisubs
getsec
into
popf
push
pop
fmull
in
iret
ljmp
fistpll
sti
imul
sbb
sub
jno
mov
fisubrs
outsl
mov
cwtl
fsubrl
mov
scas
mov
stc
pop
jmp
in
aas
icebp
mov
imull
into
ror
xchg
idivl
sarl
pop
mov
jmp
fisubs
pop
hlt
dec
pop
ds
imul
ja
dec
js
cmc
loope
and
sub
loop
std
mov
adc
icebp
addl
les
sahf
xchg
inc
pop
xchg
stos
sub
lds
lcall
addr16
sub
or
out
pop
popa
popa
mov
lods
mov
cmovno
std
outsb
inc
jl
sarl
pop
in
pop
adc
sbb
ljmp
mov
das
inc
notl
imull
lods
mov
mov
fsubs
fst
mov
jmp
cs
lds
sbb
mov
cmp
fnstsw
xchg
roll
leave
insl
clc
fmuls
outsb
xor
into
jl
mov
pop
ds
sub
pop
dec
aad
lods
mov
pop
or
testb
aam
sub
ja
sti
outsl
lahf
stc
mov
fidivrs
outsl
mov
adc
adc
cli
sub
sti
jl
dec
push
dec
iret
adc
mov
outsb
mov
arpl
into
aas
loope
test
cmp
xorb
cmp
dec
inc
ja
push
in
jge,pn
and
push
adc
mov
adc
sbb
sbb
xchg
adc
testb
sub
iret
fcmovu
push
jmp
dec
fs
pop
and
jnp
sub
jl
repnz
jbe
lds
jae
inc
xor
mov
add
sahf
fidivrs
sub
cmc
cmpsl
out
fdivp
xor
and
inc
jl
nop
xchg
jnp
add
xchg
inc
sub
xchg
xor
dec
and
outsb
cmc
inc
push
jecxz
inc
fwait
jae
lret
rcrb
inc
ds
sub
jnp
sbb
inc
mov
xor
ret
jecxz
sub
cmp
inc
sub
addr16
stc
pop
icebp
pop
clc
in
shl
mov
mov
and
rclb
in
and
xlat
icebp
scas
fldcw
dec
shll
jo
lcall
cli
das
and
mov
mov
repz
call
pop
xor
movsl
fisubrl
xchg
das
mov
dec
mov
ss
aam
mov
xlat
das
lock
and
mov
in
test
sub
pop
jb
cmp
ss
imulb
test
lods
inc
mov
jne
gs
push
test
dec
xor
or
push
push
cltd
jno
cs
addr16
lods
das
xor
push
js
sbb
sbb
mov
fsub
dec
cmp
pop
aas
cwtl
out
and
mov
jne
mov
push
xchg
testl
mov
jne
popf
lahf
xchg
pop
pop
in
jle
add
and
xchg
lods
jae,pn
sub
mov
lahf
jo
cld
jo
ja
loop
dec
mov
xor
xchg
pop
aas
jecxz
mov
out
jno
cwtl
mov
mov
mov
outsb
popf
imul
stos
dec
stc
aad
xchg
call
jl
leave
stc
push
xchg
repnz
ficompl
jl
lret
sbbl
in
cmc
movsl
stc
pop
mov
std
add
xor
jge
push
jnp
andl
xchg
es
pop
lds
neg
adc
lret
std
xchg
outsl
jbe
inc
ss
pop
ret
jle
setae
xchg
jne
jns
test
push
inc
outsb
fbstp
cmp
push
les
fdivs
mov
xchg
lret
add
bound
subb
push
scas
ss
mov
and
sbb
push
push
pop
test
push
loopne
push
orb
push
fs
mov
outsb
adc
pandn
mov
pushf
sti
pushf
xlat
xor
mov
mov
jl
stc
sbb
pop
and
mov
push
repz
gs
inc
fwait
and
das
xchg
adc
arpl
js
aam
pop
std
loope
int3
mov
and
enter
pop
adc
inc
pop
and
mov
into
scas
nop
xlat
fs
or
push
or
pop
cmpl
push
or
cmp
push
in
scas
jl
fidivl
cmpsb
mov
imul
mov
dec
arpl
or
out
mov
cmc
cmpsb
sbb
pop
adc
pusha
rcll
cmp
testb
or
mov
push
or
rolb
dec
and
aad
fnstsw
cmp
inc
clc
jne
adc
std
mov
hlt
jmp
add
stc
jne
mov
cs
mov
or
cmp
fistpll
and
iret
ror
lret
int
ja
jns
es
jo
ret
shlb
jno
lds
fisttps
mov
lds
sti
stos
popf
jbe
out
mov
lds
pop
mov
mov
stos
aam
cmp
call
pop
jno
dec
aaa
out
lock
xchg
or
jmp
pop
cmp
cmp
popa
adc
roll
out
dec
stos
cmp
adc
jb
cmp
mov
jl
in
inc
outsb
js
sbb
cmc
jmp
and
and
pop
sti
cmc
aas
or
mov
mov
testl
jns
outsl
jp
sbb
enter
cmovae
cmp
cmp
sbb
pop
insb
lds
insl
push
pop
iret
or
jp
dec
or
ljmp
sbb
je
dec
mov
mov
das
xchg
je
and
loop
jne
pushl
addb
or
lret
mov
shlb
stos
and
fbstp
sti
test
lahf
xor
scas
shlb
push
jp
push
cmpsb
scas
xchg
or
or
ljmp
in
dec
mov
cmp
xchg
xchg
mov
and
add
push
mov
mov
mov
sub
xchg
cli
stos
sub
shlb
add
fistpll
shlb
cmp
popf
push
dec
pop
inc
push
add
pop
mov
aad
arpl
push
lds
dec
jb
cld
into
mov
lods
jbe
popf
cwtl
lret
stos
sahf
fs
jecxz
out
stos
jmp
insl
hlt
pushf
cmp
pop
mov
push
mov
xchg
or
loope
mov
icebp
sub
cld
mov
test
cmp
xchg
inc
repz
xchg
xchg
cmp
inc
mov
xor
dec
cli
mov
test
cmp
jecxz
movsl
dec
jno
and
rclb
rclb
pop
xor
or
sub
xor
cwtl
out
inc
pop
push
sti
gs
inc
shrl
mov
or
or
or
xchg
mov
call
les
jo
fbstp
add
ja
addb
cmp
or
add
push
add
push
call
out
adc
xchg
adc
push
ret
push
or
subb
push
pop
shlb
std
or
rolb
sbb
mov
out
mov
push
ret
mov
xlat
loope
shrb
out
adc
and
cwtl
push
mov
loop
ja
push
testl
outsb
xor
fwait
or
dec
jl
dec
add
test
add
gs
and
or
push
scas
mov
push
push
dec
dec
or
inc
xchg
add
add
lods
cs
and
rcrb
or
adc
jl
mov
pushf
cmp
pop
pop
sub
addr16
jle
loop
into
rcl
notb
adc
mov
test
enter
inc
outsb
aad
cld
push
fabs
xchg
push
aam
sub
inc
mov
jbe
repz
es
pop
xchg
jecxz,pt
aas
lods
hlt
mov
jmp
xor
shrb
out
add
aas
lret
jbe
in
sbb
mov
scas
into
or
mov
mov
int3
xchg
mov
int
sbb
add
inc
pop
cmp
cli
movb
mov
cmpb
jp
lods
or
test
push
incl
pop
push
std
add
ds
pop
aad
xlat
push
push
ret
in
fucomip
or
mov
stc
jo
clc
push
fisubs
arpl
bound
push
flds
inc
push
mov
mulb
cmp
sahf
mov
add
mov
cmp
scas
jmp
lock
movsl
aaa
out
rorb
xor
jbe
hlt
sbb
lret
aad
xchg
lea
cmpsb
xor
les
mov
push
stos
cmpsb
xchg
xchg
jns
and
cltd
lcall
mov
jnp
mov
shll
push
lds
cli
or
fdivrs
jg
dec
out
leave
mov
lock
jle
push
pusha
pop
jmp
ja
lret
push
test
popf
push
insl
sahf
lods
sub
lret
pop
icebp
inc
mov
call
or
inc
pop
add
or
cmpb
inc
jmp
sub
ret
mov
repnz
cmpl
lea
jae
mov
and
testl
xor
fdivr
and
jo
fstpl
clc
shl
rorl
cmp
nop
push
cmc
pop
aas
enter
incb
lock
jp
sbb
xchg
lock
ret
fwait
clc
pop
fs
pop
dec
lcall
xor
mov
adc
mov
outsl
sub
xchg
mov
xor
sti
mov
push
inc
cmp
xchg
sbb
xchg
pusha
sarl
clc
xchg
sub
mov
movsb
dec
push
lods
enter
jae
dec
lods
in
popf
test
rcrb
add
fwait
in
das
cmp
cmpb
int3
fdivr
orl
adc
loope
xchg
pop
hlt
js
pop
sub
gs
lahf
popa
mov
dec
scas
sbb
mov
leave
push
jo
and
ja
sbb
flds
xor
cmp
xchg
shl
xchg
dec
and
repnz
iret
push
int
inc
incb
ficoms
mov
jbe
sub
sub
and
dec
aam
call
mov
mov
sti
popf
in
add
jbe
add
cld
add
adcb
movsb
shrl
or
icebp
xchg
lock
push
in
mov
pop
imul
sahf
arpl
dec
dec
lds
jmp
inc
mov
pushf
xchg
mov
cmp
movsb
shr
ret
xchg
in
pusha
divb
add
pop
out
mov
aas
xchg
lods
pop
repnz
lea
hlt
push
scas
scas
je
add
and
cmp
lret
lcall
push
ret
loope
mov
sbb
daa
adc
in
jae
pop
daa
shll
adc
lods
int
stc
pop
lock
mov
mov
lock
idiv
pop
mov
int
std
repz
sub
xlat
loope
dec
sar
loop
mov
mull
outsb
jno
sti
jne
sbb
inc
mov
fldenv
outsl
pop
aaa
mov
sbb
lods
addr16
repz
mov
xlat
pop
push
out
add
int
xchg
mov
in
lret
or
pop
pop
in
dec
mov
incb
pop
pop
and
xor
add
pushl
data16
mov
and
out
sti
mov
pop
mov
call
clc
imulb
insl
jecxz
xor
lret
iret
jno
lahf
andl
ficompl
hlt
fisttpll
arpl
or
gs
jecxz
movb
outsb
ja
pushf
or
xchg
push
out
xchg
sub
inc
adc
cli
out
shlb
mov
lods
xchg
cmpsb
xchg
js
out
cli
adc
sub
sbb
bound
jne
jl
and
push
test
int
test
cmp
js
cmp
mov
fcomip
xchg
sarb
pop
out
sbb
mov
add
push
sbb
int
or
sub
ret
loope
mov
add
or
cld
or
mov
cmc
xchg
iret
jno
loop
mov
pop
mov
mov
xorb
mov
pop
sub
xchg
outsb
add
xchg
pop
mov
movd
push
popf
sub
aad
dec
and
inc
nop
cmp
popa
fbld
cmp
xchg
xchg
loopne
mov
dec
std
mov
or
hlt
add
sbb
imul
add
inc
mov
notl
call
outsl
ss
jae
stc
lds
outsl
enter
mov
jb
jl
dec
mov
fmuls
cmpsl
mov
inc
mov
sub
js
shrb
imul
xchg
push
cmp
mov
mov
jb
xchg
call
in
mov
push
mov
adc
adc
leave
mov
mov
lock
xchg
dec
cmp
fcmove
popa
xor
into
adc
jl
jnp
pop
pop
mov
into
mov
xchg
test
insl
mov
addr16
sub
mov
or
insl
out
aad
adc
ss
fisubrs
push
test
xchg
in
pop
andb
sub
ror
orb
das
cltd
data16
mov
movsb
jg
cltd
mov
je,pn
daa
dec
pop
add
sti
ja
test
adc
loope,pt
cmpsb
data16
je
push
or
lds
jp
in
cmp
xchg
xchg
out
add
mov
sbb
mov
jmp
mov
push
mov
mov
mov
pop
movsb
and
and
rep
movsl
inc
add
inc
jp
lods
push
mov
mov
jge
xchg
mov
add
mov
mov
or
lock
aas
push
lret
push
push
xlat
push
push
xor
cmpsb
pop
push
sub
cmp
mov
push
dec
movsl
xchg
mov
push
jns
popa
push
sbb
aad
adc
adc
in
and
mov
xchg
pusha
data16
ret
dec
out
aaa
mov
dec
mov
jmp
out
or
sbb
xchg
mull
aaa
jb
hlt
aad
stos
xchg
addl
loope
mov
push
sub
dec
xchg
mov
rorl
push
mov
sub
int
scas
call
es
repnz
pop
jnp
add
mov
cmpb
add
cmpb
cmp
sub
lret
sbb
mov
push
call
fists
cltd
sti
jg
scas
fisttpll
push
stos
mov
push
pushf
cmpl
xchg
rcl
mov
xor
fisubl
jo
jg
push
jle
jo
and
xchg
bound
add
stc
push
js
ds
xor
jge
lds
xchg
cli
push
rol
push
pop
dec
fstpl
lahf
ss
outsb
stos
lods
mov
faddp
jns
sub
mov
arpl
fs
push
pop
xchg
or
aad
pop
popf
add
jne
push
je
iret
xor
mov
pop
xchg
aad
pop
icebp
pop
rcr
push
fldt
push
add
mov
adc
sbb
xor
insl
outsb
pop
jmp
jle
and
das
icebp
in
outsl
lock
cmp
popa
scas
mov
movsl
loop
sti
adc
daa
dec
pop
stos
dec
dec
push
mov
xor
fldenv
stos
mov
enter
or
jge
and
dec
cmc
sub
push
add
leave
xchg
je
mov
xor
mov
dec
hlt
dec
aas
fisubl
das
inc
daa
gs
mov
adc
jno
jne
int3
pop
jle
lret
lock
in
lcall
test
shlb
push
xchg
stos
push
push
pop
rcrb
shr
xchg
dec
loop
inc
inc
aas
push
pop
dec
cli
les
sbb
add
cmc
xchg
jmp
icebp
cmc
jmp
clc
lcall
call
cmp
inc
cmpsb
lods
dec
imul
pop
aaa
jle
jmp
out
gs
out
cmp
xchg
fimull
std
and
xchg
out
icebp
rolb
xor
fdiv
ljmp
mov
jne
mov
iret
sbb
cmp
pop
out
inc
sbb
sbb
test
in
hlt
pop
sbb
jnp
faddp
push
cmp
mov
addb
dec
pop
in
xlat
lods
out
mov
repz
pop
inc
pusha
mov
insb
stos
push
pop
sub
and
aas
aas
jb
mov
scas
push
xchg
scas
and
jmp
push
in
and
imul
inc
push
cs
aam
clc
xchg
sbb
lods
outsb
mov
mov
loope
insb
sti
mov
ss
cmp
dec
push
jg
mov
ret
popf
mov
cmp
mov
iret
pop
dec
push
mov
std
jnp
sti
push
mov
xor
pop
jge
repnz
cli
sub
call
xor
xchg
pop
std
nop
popf
nop
sbb
es
std
pop
fstl
or
mov
fwait
sbb
sub
xchg
icebp
je
mov
mov
into
xorb
ret
testb
movsl
pop
insb
call
mov
jmp
and
sub
into
fbstp
std
mov
jg
push
jp
adc
icebp
jae
icebp
xchg
ja
mov
xchg
and
aaa
je
int3
sbb
mov
jb
mov
mov
sbb
pushl
aaa
pop
jo
int
mov
test
pop
xchg
mov
jmp
shrl
xchg
dec
jns
add
and
jmp
fdivs
mov
jp
mov
cmp
ret
mov
xchg
test
mov
dec
movsb
push
out
mov
jns
sub
int3
mov
jne
push
inc
enter
jns
mov
mov
jns
xor
in
adc
repz
movsb
sti
sub
ja
inc
sbb
test
sub
and
stos
adc
jl
call
fwait
sbb
cmp
rorl
pop
cwtl
enter
jo
call
leave
outsl
add
out
out
push
and
mov
pop
push
inc
ja
and
jns
das
stos
inc
sub
and
sahf
les
xor
adc
int3
cltd
push
xchg
jle
cmp
xor
sub
push
pop
cld
xor
xor
add
addr16
fisubs
negb
push
lds
test
mov
jle
sub
cli
dec
inc
sub
dec
pop
loop
dec
add
testb
lcall
xor
fnstenv
shlb
dec
inc
xor
lods
out
mov
test
lahf
lds
shr
rorb
add
mov
lret
or
mov
out
outsb
popa
cmp
dec
push
in
addr16
shll
sub
sub
or
ret
call
in
sub
mov
xchg
mov
arpl
inc
cmc
les
fwait
pushaw
ret
pop
push
sub
jecxz
push
xchg
repnz
xchg
add
mov
xchg
pushf
cmovge
ret
insl
fsubs
adc
push
mov
movl
negb
mov
mov
mov
xchg
lds
inc
mov
sub
js
lret
int
daa
mov
mov
incl
aaa
fbstp
lret
mulb
jne
js
mov
or
cli
mov
mov
sbb
cmc
in
pop
pop
inc
add
hlt
imul
add
shlb
into
mov
cmp
mov
add
cmp
mov
in
jecxz
adc
mov
jge
inc
xchg
jns
and
mov
js
and
lods
andl
adc
hlt
fmuls
rorb
loopne
loopne
jno
xor
push
push
loop
and
fbstp
mov
out
shl
fistpll
out
xor
and
jle
orl
sti
out
fisubs
out
out
and
ja
or
lahf
sub
cltd
fsubr
fdivp
mov
xor
prefetchwt1
mov
jno
fistps
pusha
xchg
out
mov
rcrl
clc
ss
push
fs
int3
aaa
jns
pop
jle
test
fwait
jbe
adc
bound
xchg
sbb
ret
pushf
hlt
jnp
ret
loope
push
xlat
mov
sti
push
jge
pop
cmp
mov
cmp
fmull
out
jp
push
loopne
push
xchg
sahf
mov
daa
pop
pop
sar
xor
test
adc
jae
fdivl
lret
jle
xchg
out
sub
jns
or
loopne
add
add
outsb
cmp
jg
daa
movb
aaa
mov
mov
mov
pop
aas
and
inc
mov
pop
or
pusha
pop
fsts
sub
mov
lret
jg
aam
xlat
and
pop
arpl
xchg
insl
lahf
add
test
pop
push
aaa
clc
dec
les
test
push
daa
adc
out
popf
pushf
lret
pop
in
imul
sub
and
vmwrite
arpl
sbb
lea
leave
mov
xlat
into
rolb
cwtl
adc
ret
xchg
jecxz
pop
adc
xlat
cmp
aas
mov
and
ljmp
test
and
inc
out
inc
pusha
jg
dec
sbb
push
lret
xor
dec
mov
and
test
test
fldcw
stos
ficomps
mov
sti
mov
iret
pop
call
mov
xor
ljmp
lods
shlb
sbb
inc
inc
or
pop
arpl
je
and
or
sub
xchg
jmp
xor
and
jbe
lcall
adc
inc
jnp
cmpsb
mov
mov
ret
loopne
popa
and
push
mov
and
or
mov
arpl
shlb
cli
icebp
mov
fs
pop
add
and
aaa
sti
int3
into
icebp
xchg
out
push
sub
xor
dec
cmp
push
cld
sbb
leave
adc
and
arpl
outsb
cmpsb
stc
xor
clc
xlat
pop
subb
pop
xor
lret
push
rcrb
and
out
pop
or
mov
mov
adc
push
dec
cmc
adc
mov
jae
int
push
jb
push
mov
push
cmp
iret
sbb
popa
pop
movsb
jno
fidivl
dec
mov
jae
push
xor
imul
pop
xchg
out
cltd
mov
cmp
lds
cltd
add
lcall
jle
xchg
aam
repz
sbb
orl
inc
mov
sub
sub
mov
jo
jg
shl
loop
sar
and
scas
xor
sub
fidivs
add
test
mov
cwtl
inc
sub
bound
cmc
pushf
sbb
lcall
mov
shr
aaa
inc
ja
sub
data16
sub
xchg
in
mov
lret
shrb
mov
jle
fcomps
imul
pop
fstpt
in
xor
mov
arpl
in
jo
mov
mov
sbb
call
int3
out
mov
nop
aas
jae
pop
aad
loope
pop
xchg
imul
ds
movsb
out
in
cmp
leave
and
testl
mov
lcall
sbb
push
xlat
mov
jecxz
add
cmp
aaa
std
xchg
push
adcb
jle
int
sbb
dec
fistl
push
test
mov
negb
mov
sbb
hlt
mov
aad
test
call
mov
stc
cmp
add
stos
mov
call
jmp
out
mov
call
ror
loopne
xchg
cwtl
mov
loope
bound
in
mov
sbb
mov
cmp
je
xor
hlt
mov
icebp
and
leave
jb
sub
jbe
pop
adc
mov
int
mov
mov
movsb
pop
xlat
inc
sbb
gs
mov
mov
jns
in
jo
ret
xchg
dec
inc
push
and
adc
sbb
mov
ret
push
jmp
pop
test
pop
cmp
cld
lds
sbb
or
in
mov
sbb
pusha
push
sbb
add
add
fwait
jne
jl
fisttpl
dec
dec
pop
mov
outsl
or
push
ret
dec
mov
cmp
mov
inc
adc
jp
sub
in
pop
daa
and
inc
mov
cmp
lods
loop
dec
scas
outsb
lahf
adc
enter
sub
inc
cmp
and
pop
add
push
mov
xor
mov
outsl
jbe
outsl
jl
outsb
xchg
mov
dec
imul
sbb
roll
pop
and
jae
add
mov
cmp
aaa
add
dec
cmp
mov
mov
push
inc
insb
add
rorb
cmp
jmp
int
mov
xor
inc
ret
fisttps
add
scas
outsb
lret
aad
cld
dec
rcll
push
aas
sahf
push
cmpsl
out
dec
cld
cmp
cs
jne
dec
sbb
dec
adc
xor
fldl
mov
addr16
push
pop
sbb
stc
xchg
and
in
rclb
cmp
lds
lret
jg
mov
xchg
push
enter
jp
add
loop
pop
int
int3
pushf
mov
cltd
ja
jl
push
lock
xor
fidivrl
leave
xor
cmp
jns
jle
mov
jle
mov
xchg
pop
inc
and
jg
aam
mov
and
push
setno
mov
xchg
xchg
cmpsl
out
mov
sub
lods
push
out
and
je
sub
aaa
test
mov
in
adc
hlt
dec
gs
mov
movsl
test
pop
mov
and
pop
dec
fidivrl
sub
cs
sub
data16
lds
or
in
addr16
jb
out
pop
jmp
pop
iret
mov
cmp
pop
mulb
dec
gs
add
rcr
scas
or
fldl
xchg
loope
cwtl
mov
inc
les
ret
popf
fbstp
mov
push
push
xchg
aas
jbe
gs
push
and
and
call
fistpll
fimuls
out
mov
pop
jp
mov
lahf
lock
xchg
lds
lock
shll
dec
inc
out
imull
dec
push
push
scas
out
and
sbb
jmp
or
cs
test
push
testl
leave
decb
int3
ja
fsubl
xor
mov
pop
es
in
xor
icebp
ja
outsl
or
in
imulb
pop
lahf
mov
push
add
test
mov
das
xlat
xor
in
daa
or
sbb
add
repz
adc
jge
mov
pop
xorb
pushf
dec
pusha
and
fnstenv
int3
insb
and
aam
dec
mov
pop
scas
fistps
jmp
out
sbbb
inc
fwait
adc
xor
inc
mov
xchg
pushf
pusha
clc
push
nop
nop
das
fcmove
icebp
roll
bound
pop
xchg
mov
addr16
insl
cmp
mov
xchg
xchg
dec
sarl
inc
js
mov
mov
cwtl
loop
hlt
dec
sbb
mov
stc
inc
call
lods
mov
dec
test
mov
cld
jp
sbb
lds
out
pop
fldl
push
aaa
mov
mov
add
push
in
pop
mov
jg
jg
insb
and
out
popa
push
add
stc
scas
mov
adc
aad
adc
push
and
pop
jmp
mov
test
add
sbb
mov
fstl
movsb
cli
add
fwait
add
test
popa
aaa
in
les
sti
mov
gs
movsb
lahf
and
pop
popl
xor
cmp
push
test
bound
decl
lock
sbb
sarb
push
and
adcl
add
movsl
fs
push
mov
clc
mov
xchg
or
push
or
push
outsl
xor
jb
push
jle
lods
pop
out
xor
or
jae
test
out
aam
pop
fs
cli
ret
or
mov
movsl
add
scas
cld
or
outsl
cmp
add
jae
pop
sub
mov
mov
les
ja
aam
sub
and
test
jo
popa
fcoml
push
mov
add
rol
shlb
ret
mov
xchg
or
dec
outsl
repz
and
xchg
inc
xor
andl
dec
jle
jp
out
lods
xor
in
adc
jl
dec
mov
pop
add
shll
int
clc
sbb
xchg
lahf
sub
cmp
pop
inc
mov
fists
mov
movsl
fs
adc
push
dec
fcmovu
ret
imul
loope
hlt
jg
pushl
xchg
push
cmp
aaa
mov
shrl
inc
mov
adc
and
dec
xorb
push
lret
aad
les
out
mov
inc
iret
pop
sbb
cmc
mov
int
xchg
pop
sbb
in
and
negb
xor
jge
sarb
popa
pop
xchg
xchg
out
mov
pushl
loop
insb
sub
or
out
adc
imul
xchg
out
in
jmp
xchg
or
sbb
xchg
cli
inc
add
mov
xchg
pop
and
outsl
in
mov
jg
or
loopne
pop
or
sti
data16
and
adc
stc
cmc
test
mov
jge
push
push
rorb
mov
dec
movsl
mov
fimuls
jle
sub
pushf
dec
pop
enter
fiadds
les
adc
mov
je
les
pushf
arpl
outsl
movb
dec
sub
std
mov
out
adc
fbstp
mov
ret
mov
sub
and
clc
xor
fisubl
mov
xchg
cli
filds
sarl
dec
outsl
clc
or
outsl
adc
mov
sbb
cld
rcrl
ss
dec
mov
jno
aad
into
aad
inc
dec
jae
loope
loop
xchg
add
jecxz
pop
sub
jo
mov
dec
mov
movsb
jge
sub
mov
sub
movl
inc
iret
cmp
mov
pop
xor
into
test
cmp
pop
jmp
addl
aas
jle
sub
ds
sti
push
aaa
out
fs
xlat
ja
or
mov
jnp
push
xchg
rcll
push
icebp
insl
dec
pop
jb
aaa
aam
scas
sub
loop
pop
xchg
mov
scas
sub
jg
cmpsb
gs
imul
popaw
mov
add
icebp
sub
hlt
in
mov
fadds
sbbl
push
imul
and
sub
fisttpl
cmp
es
xlat
jge
or
fcmovnbe
cmc
test
insb
adc
xor
mov
push
sar
dec
fchs
dec
mov
mov
test
jle
inc
js
add
sahf
jg
mov
and
sbb
lret
sub
dec
jnp
in
push
fsubs
xor
andl
inc
inc
xchg
scas
bound
jnp
sbb
cli
int3
add
sti
scas
imul
aaa
je
sub
add
dec
push
mov
and
or
add
mov
scas
shlb
int
sub
cmp
push
xor
or
loop
jo
xor
mov
fs
push
cmp
cli
call
lret
std
mov
push
in
js
jne
lret
push
icebp
mov
or
insl
aam
sar
rcrl
repz
mov
push
mov
out
sbb
lods
js
ret
mov
jle
lods
std
js
movsb
and
inc
fisttpl
push
mov
xchg
cmpsl
sahf
and
stos
jmp
out
cmp
lods
ja,pt
mov
repz
popa
jg
mov
xchg
sub
mov
add
rcl
jae
lcall
into
test
adc
xor
mov
stos
push
insl
faddp
mov
lcall
mov
test
xor
clc
enter
gs
sbb
or
and
pop
xchg
mov
lret
and
jmp
insb
pushl
cwtl
notb
jae
cmp
cmp
cmpsl
push
addb
fcoml
daa
push
cld
sbb
cli
xorl
out
shl
stos
sbb
shl
aas
les
movsb
popf
ds
inc
scas
js
repnz
push
divb
pop
add
inc
mov
or
sub
xchg
fs
pusha
or
in
mov
daa
xor
repnz
xchg
int
imul
repz
aad
std
clc
ss
leave
inc
arpl
xchg
mov
fsts
and
pop
dec
test
scas
mov
stc
xor
aas
jle
out
jae
adc
jp
sbb
sub
mov
stos
add
aas
or
jb
sahf
inc
jns
in
lcall
cld
movsl
inc
inc
pushf
inc
icebp
shrl
or
popa
arpl
sbb
xchg
pop
jp
xchg
inc
xor
mov
or
icebp
jmp
xchg
jne
add
pop
mov
push
andnps
and
arpl
sbb
test
movsl
loop
test
test
xor
mov
xchg
cmp
sub
xchg
rol
arpl
inc
xchg
bound
dec
xchg
mov
sub
iret
jp
popf
mov
pop
in
shrb
mov
sti
cmp
popf
xchg
cli
dec
stos
adc
aaa
mov
leave
xor
fdivrs
sub
fwait
repnz
ds
fildll
push
sbb
popl
adc
xor
andb
inc
data16
jp
in
stos
imul
inc
call
pop
ljmp
out
jne
dec
mov
ds
movsl
jno
pop
lcall
in
lods
imul
fisubrl
pusha
loop
jp
in
es
or
push
out
or
lock
lret
stos
dec
sarl
mov
mov
fs
stos
inc
mov
pushf
dec
mov
cmp
xchg
xlat
lahf
pushf
jns
xor
mov
jns
sub
ja
sbb
mov
add
in
push
adc
sbb
add
das
insb
add
mov
test
movsl
adc
lock
scas
scas
insl
cmpb
jnp
inc
icebp
dec
inc
fdivrs
cmp
sub
mov
xchg
adc
xor
sub
das
fucom
pushl
jg
mov
cmpsb
dec
push
jbe
popa
andl
sti
adc
xor
bound
ss
dec
aaa
ficompl
xchg
in
ficomps
inc
es
loopne
jbe
loop
mul
dec
or
dec
imul
xchg
sarl
xor
loope
adc
shlb
mov
dec
sub
das
push
std
out
out
ret
in
in
push
shl
sub
xor
out
sub
cld
arpl
ja
jmp
call
incb
mov
shl
int
clc
or
iret
aad
inc
shrl
hlt
prefetchwt1
or
pop
insl
sahf
push
mov
sub
jne
incl
push
xchg
pop
popf
popa
rorb
leave
sti
xor
mov
inc
insl
adc
mov
sub
pop
add
jle
push
sbb
push
mov
add
add
pusha
or
popf
ljmp
jmp
sbb
inc
jmp
inc
lahf
add
or
add
fsubr
ss
cs
mov
fmulp
xrelease
dec
xor
mov
adc
aas
adc
loope
push
aam
inc
sarl
outsb
cld
or
aaa
jnp
popf
ljmp
adc
adcl
jns
cmp
cmc
pushf
sbb
ret
sahf
and
ds
mov
mov
dec
mov
stc
test
ret
mov
mov
push
push
mov
cmp
cmp
scas
inc
pop
push
jo
inc
pop
push
sahf
mov
stos
stos
adc
hlt
pop
aad
mov
pop
fnsave
std
jae
and
cmp
movsb
and
cmpsl
sbb
dec
pop
sbb
mov
xchg
inc
cs
aad
iret
fsubl
sbb
stos
data16
insl
mov
inc
jge
xchg
jle
mov
insl
or
jle
testl
xor
enter
sbb
in
movw
xchg
add
pop
push
enter
icebp
jp
sbb
mov
inc
lret
cmp
jns
xchg
test
cmp
mov
out
inc
jbe
pushf
sbb
push
sub
pop
mov
mov
out
fmuls
aas
jno
les
mov
xchg
pop
sub
sub
add
into
inc
es
add
mov
xorb
je
pop
addr16
and
loop
imul
in
cmp
inc
lahf
mov
lret
xchg
inc
sbb
sbb
or
sahf
in
cmpsl
sbb
enter
cmpsb
stos
mov
scas
loop
pop
nop
jle
sbb
sbb
es
int
cmp
popa
push
scas
or
mov
aas
filds
dec
xor
test
cld
nop
outsb
pop
adc
fwait
out
dec
add
or
inc
mov
cmp
xor
test
or
mov
push
mov
mov
pop
ret
jb
xchg
loope
sahf
mov
cli
mov
in
sbb
inc
xlat
ja
jmp
in
xor
sbb
sub
je
cmc
pop
adc
inc
incl
xchg
mov
stc
inc
stos
sbb
rcrb
insl
jmp
push
into
xchg
xchg
dec
ss
imul
xor
ss
jae
xor
adc
popf
sub
cmpsl
aas
xor
pop
pop
mov
in
cmp
cli
jle
mov
negb
fs
sub
push
or
add
mov
mov
inc
push
add
jnp
or
inc
std
cmp
nop
test
dec
lret
ljmp
outsb
dec
xor
mov
inc
cmp
ss
ds
mov
and
xor
jmp
fwait
sub
pop
std
loope
xlat
popf
pusha
imul
and
pop
incl
sbb
mov
mov
imul
fistpll
je
fstl
push
dec
dec
rolb
cwtl
adc
orb
push
mov
fmulp
and
loope
fstpl
mov
sub
and
mov
inc
fdivp
add
mov
shrd
test
orb
test
cmp
jge
mov
push
jge
sbb
lods
add
arpl
xor
out
xchg
or
daa
dec
std
dec
in
sti
movsb
bound
ficoms
sbb
or
jb
pop
sbb
mov
scas
das
add
int3
cmc
cld
movsb
jmp
out
cmp
out
in
icebp
xchg
jae
test
insb
clc
ss
into
cmp
pop
or
and
fnop
pop
movb
pusha
in
fnstenv
into
cmp
cmpsb
sbb
pushf
rclb
int3
test
fistl
clc
mov
pop
mov
inc
int3
or
loopne
mov
xor
mov
mov
stos
adc
imul
ds
imul
sub
mov
and
into
sbb
adc
lods
mov
push
jmp
roll
popa
inc
cmpsl
daa
lods
dec
in
nop
stos
jmp
pop
xchg
in
insb
cmpb
jnp
cwtl
or
addr16
inc
push
stos
cltd
jne
lds
mov
hlt
xchg
sahf
xor
popf
clc
lcall
add
xchg
jle
cld
outsl
xlat
or
jle
jno
repz
mov
or
loop
cltd
xchg
jl
mov
out
xor
into
mov
sbb
cld
rcrl
jo
add
adc
sbb
mov
not
hlt
mov
pop
enter
mov
out
lods
mov
out
mov
sbb
in
inc
push
sub
xlat
inc
addb
xchg
xor
shr
inc
inc
popf
mov
push
or
jb
hlt
out
pop
iret
decb
cmp
ret
mov
jb
add
xchg
cmpsb
cmp
dec
sbb
popf
sbb
lock
and
jns
mov
mov
bound
clc
mov
mov
filds
lds
pop
adc
int3
in
lret
fcomps
cmp
popf
mov
jge
scas
sbb
inc
or
cmpsl
xchg
icebp
stos
mov
movsb
sbb
fnstsw
test
mov
hlt
clc
icebp
outsb
adc
in
jbe
fisubs
in
xor
add
lods
xlat
adc
repz
daa
mov
lcall
xor
lahf
pop
mov
shlb
sbbl
addr16
jle
int3
popf
outsb
sub
lcall
add
jo
pop
nop
jmp
dec
outsl
loope
mov
mov
sub
jbe
dec
dec
clc
outsb
or
mov
pextrw
arpl
mov
movsb
es
iret
fdivp
cwtl
into
mov
sub
jns
pop
dec
and
bound
pop
insb
and
cli
inc
iret
fsubl
sub
inc
mov
ljmp
daa
in
in
sarb
lods
mov
mov
or
dec
adc
sbb
rcr
pop
mov
xorl
sbb
test
xchg
test
shll
scas
xlat
cmp
icebp
fisubl
or
sarl
mov
or
sti
in
popa
push
lahf
shlb
fcmovne
aad
pop
or
add
fnstsw
push
ss
lcall
lods
loop
jg
xor
cmpsb
sub
xchg
jmp
lea
sahf
xchg
imul
lods
inc
add
arpl
jb
es
xlat
test
jbe
push
lods
mov
xchg
pop
roll
iret
fsubl
adcl
or
sti
adc
hlt
and
into
insb
shrl
push
push
int
push
cmc
orb
arpl
int3
pop
dec
test
dec
jle
and
xchg
sub
cltd
cmp
push
inc
jle
jae
addr16
repz
xchg
je
scas
cmp
and
adcb
or
dec
sbbl
mov
outsb
inc
pop
pop
xor
or
xchg
stc
pop
mov
cmp
jne
and
nop
jg
sbb
cs
test
mov
mov
ficomps
or
dec
imul
dec
dec
pop
imul
sbb
mov
stos
mov
cmp
cmpsb
jnp
call
or
out
mov
mov
pusha
pop
int
xor
data16
xorl
mov
mov
sub
test
loop
pop
int
lcall
fiadds
std
loop
dec
push
imul
sahf
mov
lret
int3
mov
mov
push
aas
sbb
pop
jmp
out
add
scas
sti
sbb
jge
clc
mov
pop
es
mov
xlat
cltd
push
mov
scas
ja
mov
aam
jecxz
ljmp
mov
fldl
aas
shrl
lcall
js
or
icebp
rclb
movb
push
sub
scas
pop
mov
pop
jae
cld
pop
mov
mov
cs
pop
aaa
outsl
out
or
pop
shlb
jne
inc
clc
ss
push
add
cs
in
xlat
addl
das
clc
js
test
orl
xchg
stc
push
cmpsb
dec
pop
inc
shrl
sub
cmp
mov
adc
call
push
lock
push
xchg
dec
jle
cld
aad
mov
and
mov
fdiv
mov
icebp
call
mov
adc
dec
lahf
jnp
insl
fidivrl
data16
movl
movsb
sub
aaa
dec
mov
das
aad
push
mov
aam
test
repz
mov
test
out
shrb
mov
fistpll
test
movsl
dec
mov
test
lods
jns
push
stc
add
outsb
inc
jp
push
subb
cmp
jl
adc
flds
fistps
clc
adc
dec
mov
mov
jmp
das
or
adc
sarb
add
jl
rolb
adc
je
ja
mov
sub
add
lods
push
out
jns
jecxz
js
outsb
test
cmp
lock
stos
mov
aad
fisttps
or
fiaddl
and
test
fimull
and
test
daa
dec
mov
aad
add
cmpsl
dec
inc
pusha
aas
xor
pop
xchg
sub
fcmovb
es
into
mov
adc
dec
mov
ret
les
xor
ret
pop
movlps
sbb
popf
push
fs
jecxz
dec
jmp
ds
dec
ja
out
test
test
inc
test
cvtdq2ps
jnp
arpl
cwtl
and
popf
mov
jecxz
ret
xor
jo
mov
dec
icebp
es
adc
push
arpl
jbe
bound
xchg
xchg
xchg
dec
lea
roll
pop
fidivl
push
or
movsl
jo
mov
push
fs
mov
std
imul
mov
mov
int
mov
fisttpl
mov
addr16
mov
adc
or
ljmp
aas
addr16
ljmp
icebp
inc
ja
addr16
pop
shlb
xor
push
xchg
xchg
pop
adc
das
or
and
jmp
xor
mov
inc
jnp
lods
xchg
xchg
sbb
jae
mov
cs
rol
rorl
hlt
lods
and
call
icebp
mov
jae
pop
mov
std
xchg
push
xor
mov
xor
push
mov
jle
xchg
sub
cmp
aam
loop
mov
jae
pop
mov
in
mov
add
or
xor
adc
jg
pushf
and
xor
clc
repz
andl
ljmp
sub
mov
xor
loope
lock
aaa
fsubp
dec
lods
mov
push
cmp
xchg
cmc
clc
inc
jmp
out
fwait
push
imul
dec
das
lea
mov
cmpl
outsl
adc
jecxz
ja
sbb
imul
into
mov
cmp
add
and
divl
push
inc
jnp
dec
cmc
xchg
jo
xor
shll
loopne
mov
test
pop
int3
add
or
mov
inc
sbb
int3
repz
dec
outsl
inc
or
sub
ja
mov
mov
sub
mov
test
inc
mov
and
dec
test
add
dec
dec
mov
sub
rorb
rclb
sti
adc
incl
iret
fstpl
movsbl
dec
rorl
add
lock
xor
add
sbb
scas
in
pop
sub
mov
xchg
and
mov
mov
les
aam
scas
sbb
inc
jge
add
ljmp
stc
js
mov
adc
xor
lods
int3
lea
pop
fsubs
out
xorl
lcall
clc
shr
dec
ret
loop
xor
pop
mov
loope
xchg
movsl
push
test
addb
lret
xchg
pop
mov
dec
movsl
cmp
cs
dec
sub
ficomps
out
std
add
dec
cmp
push
outsl
sub
daa
ret
in
xchg
scas
xor
add
addr16
es
into
xor
cmc
daa
es
pop
mov
hlt
bound
jo
inc
xor
sbb
adc
mov
adc
cmp
in
popl
jmp
fisttpl
jl
mov
sbb
sbb
cltd
cmc
test
mov
aas
mov
rcrb
sti
add
jmp
jle
int3
push
std
cwtl
push
ja
pushf
sbb
repnz
lock
push
lcall
fmul
xlat
inc
pop
popa
outsb
orb
flds
sti
add
jns
cli
inc
push
cli
mov
dec
pop
cltd
push
outsl
ret
jns
jge
and
cltd
lea
and
push
repz
cld
jb
xor
xchg
das
imul
sbb
xor
fisttpl
add
sub
fisubs
out
push
jge
test
mov
xchg
jae
mov
inc
inc
fwait
adc
or
cmp
push
jmp
mov
out
push
aaa
in
ja
in
sub
repz
nop
sahf
sub
testl
mov
hlt
cs
lods
sti
frstor
andb
lock
int
jnp
push
add
js
hlt
repz
andl
sub
sub
sti
jmp
sti
imul
std
mov
sub
dec
stos
inc
pop
fs
ds
mov
aad
lret
ret
loop
in
lods
fwait
lock
mov
push
outsb
pop
push
lcall
fnsave
adc
subb
out
dec
push
mov
leave
js
sbb
push
movsl
dec
pop
cmp
mov
jbe
push
cmovb
iret
arpl
test
ret
xchg
pusha
mov
xchg
mov
cmpsl
clc
vmovlps
mov
mov
pop
sbb
and
std
xor
js
inc
cs
pop
fstps
testl
pop
cltd
outsl
aas
dec
dec
orl
sbbb
sub
fwait
sbb
mov
outsb
mov
and
or
test
push
inc
mov
lea
fidivrl
mov
push
inc
adc
insl
pop
imul
mov
sub
adcl
test
inc
nop
push
pop
test
fcmovbe
imul
mov
test
adcl
addb
incb
int3
negl
out
out
out
jge
sbb
dec
rclb
iret
jnp
adc
enter
pop
mov
and
xor
pop
sbb
je
inc
out
or
repz
cmpsb
push
push
mov
lds
mov
mov
lock
mov
cmp
xor
movq
sbb
inc
xlat
outsl
lcall
test
mov
ljmp
cmp
sbb
sahf
push
mov
jle
sbb
push
imul
cmc
xchg
sub
lock
loopne
mov
add
fldcw
mov
or
push
cmp
jnp
test
push
cld
mov
orl
mov
ljmp
leave
repz
mov
cmp
jecxz
cmp
pop
ljmp
gs
jnp
xchg
scas
arpl
aad
sbb
cld
push
out
push
cmp
faddl
stc
xchg
inc
les
mov
daa
mov
fsubrl
dec
outsb
dec
fstpt
push
adc
icebp
cld
mov
addr16
andb
orb
imul
and
adc
pop
mov
dec
mov
int3
sbb
mov
int
inc
sub
leave
dec
les
xchg
inc
mov
jecxz
mov
daa
out
mov
imul
and
xadd
lods
pushl
ljmp
sarb
rcll
xor
aas
ljmp
mov
inc
pop
loop
addl
adc
adc
cmp
notl
sbb
push
hlt
enter
nop
mov
mov
pop
sbb
pop
adc
add
xchg
push
jns
sub
lahf
repz
les
xor
popf
call
jmp
dec
fcompl
pop
cli
lret
int
shll
pushf
ja
dec
mov
fsubs
cmp
push
dec
mov
push
test
cmc
pop
mov
int
mov
ret
pop
insb
mov
adc
shrl
popf
enter
sbb
and
jno
scas
dec
sbb
push
lods
mov
xlat
push
xchg
test
cmp
stos
sti
mov
jne
ja
add
lahf
jge
stos
les
fsubl
cmpsb
mul
fnstsw
jb
in
pop
add
mov
mov
scas
mov
push
aad
push
pop
xchg
iret
call
and
imul
mov
test
jp
mov
pop
movsb
mov
or
lods
out
push
xlat
in
lods
mov
or
shl
cltd
mov
int
xchg
push
rolb
push
call
movsl
adcl
pop
jb
pop
push
lret
movb
sti
stos
xor
hlt
and
push
jle
adc
lods
ret
sub
xchg
bound
scas
cmc
push
xlat
xor
adc
rolb
out
fcoml
cmp
jl
jp
xor
xor
adc
or
sahf
pop
rolb
shl
addr16
js
or
mov
jo
xor
jmp
imul
adc
shlb
mov
add
push
dec
adc
mov
jne
dec
loop
jnp
cmp
es
or
xorl
lods
pop
into
test
iret
lret
std
test
cmc
or
cli
mov
or
mov
cmp
push
push
leave
arpl
stos
xchg
mov
rorl
jb
decl
je
mov
inc
lcall
ret
xorl
fnsave
scas
call
bound
push
dec
fimuls
jne
inc
shll
nopl
out
ds
mov
dec
mov
dec
mov
mov
cmp
jb
cmp
test
insb
pop
shr
pushf
shr
test
xor
pop
push
jle
or
icebp
adc
stos
mov
test
stos
and
repnz
mov
pop
test
xchg
lret
pushf
in
in
lahf
push
in
div
ret
xor
mov
xchg
adc
rcr
sti
jne
mov
arpl
fldl
cmp
pop
sbb
push
pushf
stc
sbb
fsubl
cmp
sub
movsl
insb
loope
data16
mov
push
das
loopne
cltd
out
xor
jns
sub
lds
leave
cwtl
sbb
inc
jnp
sarb
xor
daa
into
xor
mov
inc
test
sub
test
outsl
je
or
dec
push
cmpsl
jae
bnd
ljmp
ret
das
repz
jmp
sub
and
sti
pop
jle
imul
dec
fildll
jg
xchg
ret
sarl
or
fs
jle
inc
in
pop
mov
adc
call
lret
jmp
push
cmp
in
cwtl
and
adc
mov
xchg
stos
cwtl
dec
or
nop
cltd
or
movsl
jae
mov
jb
mov
shll
je
and
push
popa
sub
mov
out
xchg
loop
jg
adc
testl
leave
loopne
cs
pop
rcll
jae
pop
sbb
pop
add
pop
jle
xor
addl
test
ss
xchg
ja
mov
scas
inc
xor
and
or
dec
testl
scas
arpl
shll
ss
into
mov
mov
aaa
in
lcall
jo
call
cmp
cmc
xor
out
pop
rorb
jecxz
fdiv
or
clc
jmp
hlt
mov
mov
cmpsb
aas
pop
out
outsb
stos
call
daa
cmpsl
in
aad
call
adc
ds
sub
mov
cmp
test
push
fmull
jo
and
jmp
push
rep
add
lods
adc
dec
scas
xchg
hlt
ffreep
iret
test
in
fsubl
sti
fwait
stos
push
xor
fcmovnu
add
sti
add
test
push
scas
mov
movsb
pop
mov
push
out
dec
stos
push
je
inc
fiadds
nop
mov
or
mov
mov
add
fs
dec
loopne
in
insl
fwait
aas
sti
stc
push
xor
push
cli
cmc
subb
out
or
mov
loope
pop
and
stos
inc
int
push
movsl
and
pop
imul
mov
xor
lahf
clc
test
jno,pt
das
aam
sub
test
jmp
jmp
aas
cli
dec
and
mov
jmp
ja
dec
mov
aas
jmp
aad
out
jmp
sahf
shll
cli
stos
inc
enter
mov
inc
aam
dec
jp
jb
in
cmpsb
lods
into
add
rolb
mov
stc
cltd
psubq
xchg
mov
inc
jle
in
xor
adc
sub
adc
in
movb
and
sbb
aad
jo
push
in
cmp
xlat
cmpsl
aaa
pop
ret
jnp
fwait
setns
push
pop
rcll
jmp
lods
sub
dec
roll
jmp
add
out
pop
push
rcrl
inc
in
sbb
pushf
jo
fsubrl
cmc
sub
mov
mov
in
sahf
push
in
push
scas
lret
inc
pop
jp
mov
pop
push
cmp
push
mov
xchg
mov
mov
data16
mov
mov
mov
jbe
jbe
or
aaa
add
dec
lea
gs
mov
ficomps
lahf
pop
mov
jle
jecxz
xor
stc
negb
push
push
push
lcall
push
shl
neg
add
fld
sti
es
insb
push
sub
out
rep
or
loope
repnz
push
dec
arpl
scas
roll
xchg
mov
int3
pop
xor
mov
movsb
cli
mov
popa
jmp
int
out
std
js
push
pop
lods
cli
fnstenv
loope
aas
inc
insl
aas
pop
fistpl
cmp
dec
cmc
xchg
add
and
bound
mov
int
xor
push
mov
aas
int
pop
gs
scas
lods
daa
sub
inc
outsl
sub
loopne
cwtl
push
leave
fdivrp
rcrb
cld
xor
les
imul
sbb
lods
je
test
push
or
and
add
jle
test
lods
int
stc
rolb
mov
std
pop
std
icebp
and
and
inc
and
out
popf
xchg
cmpsb
cltd
bound
mov
sub
jns
or
push
adc
cmp
jg
mov
fldl
hlt
sub
out
xchg
jge
leave
data16
push
arpl
jmp
xchg
inc
mov
pop
mov
js
ljmp
scas
int
jp
sub
cmp
pop
mov
sbb
adcb
pushf
fs
sub
je
mov
ja
sbb
push
mov
jo
mov
push
sbb
mov
xchg
js
inc
sahf
jae
lahf
and
mov
int
jnp
clc
in
push
loop
xor
mov
inc
sub
imul
xor
shl
xor
push
xor
out
dec
clc
ret
mov
rep
in
aad
dec
shrl
stc
filds
insl
sbb
dec
adc
xor
pop
ja
or
ljmp
jg
sub
cmp
xlat
add
push
aas
cld
cwtl
std
out
inc
or
lret
ret
cld
push
sub
mov
or
fnstenv
xchg
mov
popa
fstp
mov
cmp
pop
scas
arpl
pop
pop
cmp
stc
subl
out
xchg
inc
outsb
popa
aaa
or
hlt
jg
insl
into
jo
ret
push
inc
out
push
cld
aas
jmp
dec
dec
jecxz
mov
or
imul
mov
jg
mov
into
lods
aas
clc
test
mov
xlat
aaa
inc
add
arpl
jecxz
lea
aas
test
push
fstpt
mov
repnz
push
mov
cld
push
movsl
aad
dec
insl
sahf
insb
dec
cmc
aad
aad
jbe
mov
lods
aas
std
arpl
cmp
ds
add
and
ficoms
dec
iret
leave
and
and
jns
sub
bound
and
nopl
idivb
mov
add
stos
shl
mov
mov
test
push
lcall
ret
fldt
push
pop
roll
cmp
movsl
aas
pop
lret
sbb
shrl
jo
inc
std
add
sahf
push
xchg
dec
cmc
decl
ret
inc
sarb
pushf
sti
pop
cmp
xlat
leave
push
lcall
mov
outsb
add
mov
add
ljmp
cmp
fcompp
jle
cs
mov
js
aam
inc
test
sti
jmp
push
and
lock
cld
and
in
sub
dec
leave
xlat
mov
out
and
push
test
pop
jb
xchg
sahf
jp
pop
or
pop
xchg
inc
repz
imul
jmp
mov
xor
xor
out
jmp
aaa
push
sarl
repnz
mov
icebp
xor
fdivs
cmp
outsl
or
sbb
out
in
les
lea
ror
xchg
addr16
lock
mov
insl
pop
cld
out
jbe
icebp
push
mov
push
cmp
fildl
pop
ret
clc
inc
iret
popa
cmp
into
cmp
dec
xchg
imulb
imul
mov
xchg
mov
cmp
dec
pop
add
jl
xor
call
pushf
mov
fbstp
mov
pop
pop
mov
mov
push
lahf
or
pop
xor
sbb
mov
movsl
dec
inc
lahf
out
clc
std
mov
xor
stos
push
add
icebp
and
sbb
pushf
int
sub
jae
pop
cmpsl
loopne
inc
jg
gs
push
andb
xor
adc
pop
push
mov
fldt
in
mov
mov
negl
dec
stc
pushf
push
ds
imul
push
lret
int3
mov
cltd
out
and
addr16
and
inc
insl
fdiv
out
negl
ret
pop
or
jns,pt
mov
into
aas
cs
cmp
ja
jbe
stc
sub
int3
call
enter
orl
sbb
test
shr
mov
add
push
ljmp
or
sbb
rol
pop
jne
aaa
jmp
jecxz
jno
or
lahf
jnp
mov
jp
inc
mov
mov
push
loop
loope
sbb
cmp
or
pop
mov
cltd
and
test
adcl
jmp
in
mov
testb
sub
pop
mov
lods
fldenv
daa
dec
pop
and
rorb
and
or
or
xor
mov
sbb
dec
loopne
mov
paddsb
sbb
inc
cmp
test
cmp
nop
xchg
shlb
push
adc
jl
inc
mov
aad
push
jbe
cmp
lret
xlat
lret
decl
xlat
adc
dec
push
xchg
xor
les
cmp
lahf
call
push
sub
fnstenv
aaa
js
cmpsb
out
jb
iret
jl
dec
imul
stc
repnz
shlb
call
mov
cmp
leave
fistpll
jg
fsubp
arpl
lahf
jnp
jl
pop
xchg
enter
jne
or
cmp
int
jmp
pop
in
xchg
inc
mov
aaa
sub
xchg
iret
xchg
push
fbld
sarl
and
or
faddl
sub
sbb
mov
cmc
push
lahf
cmp
ds
mov
ret
cli
xchg
pop
inc
les
sbb
rolb
inc
repz
call
cmp
leave
mov
incl
sub
push
mov
xor
addr16
xchg
xchg
cmp
mov
icebp
js
inc
cmc
dec
mov
cld
xor
xor
push
cli
pushl
sti
outsb
sahf
jns
scas
rcr
stos
ficompl
rclb
inc
jmp
jle
dec
bound
and
dec
dec
and
mov
std
dec
fs
cmp
sub
jne
std
popf
dec
adc
mov
cmp
push
rclb
sbb
cld
sub
loopne
sti
lock
inc
imul
mov
pop
leave
jmp
imul
xchg
xchg
mov
mov
xchg
fidivrs
jge
call
sti
andl
mov
js
push
into
std
in
push
pop
stc
xor
push
enter
fmulp
scas
stos
adcl
cmpsb
fwait
sahf
push
push
adc
test
push
cmp
xor
xor
cli
pop
fimull
cmp
int3
mov
sbb
mov
stos
push
bound
cli
cmp
and
dec
popa
cmp
xchg
jmp
and
push
jle
bound
cmpsl
and
jle
sbb
insl
sti
js
out
xchg
jbe
out
out
push
repz
jo
aas
mov
jnp
mov
lods
lock
mov
mov
adc
and
and
mov
mov
or
mov
xlat
hlt
std
xchg
inc
mov
jl
in
mov
sub
aad
outsl
jecxz
rorb
mov
push
sbb
sbb
pop
cli
add
enter
ja
xor
sti
std
jne
sbb
fisubl
cmp
vandnps
inc
cli
adc
cld
cmp
jle
jmp
in
mov
push
in
and
mov
xor
sub
or
int3
idivb
fcmovbe
inc
sub
cmpsl
lea
mov
paddusw
rorl
iret
lahf
xlat
lret
xchg
cmc
cwtl
and
and
imul
dec
and
and
lock
cmp
mov
pop
lods
roll
in
xor
icebp
sub
mov
adc
scas
jns
mov
cmp
das
out
inc
dec
arpl
mov
dec
lods
movl
xor
aad
xchg
imul
pushl
test
hlt
stos
jo
lahf
push
gs
divl
std
add
dec
push
repz
jb
mov
cmp
test
aad
cmpsb
sub
lods
lcall
aas
jge
inc
cmc
popf
xor
imul
sti
std
pop
mov
dec
mov
xchg
aaa
inc
stos
movsl
jnp
xchg
sub
loopne
or
or
in
ds
imulb
fstpt
je
sbb
jle
push
or
sub
dec
mov
pop
sub
and
cmpsb
xchg
xor
cli
inc
mov
jae
dec
mov
sahf
sbbl
push
jae
daa
xchg
fstps
cwtl
repz
pop
out
sub
clc
addl
rcrl
mov
and
lret
cmp
cmp
cmpsl
push
sbb
aas
cmp
push
aam
in
mov
jb
ret
pop
fstl
mov
xor
mov
push
xor
je
decb
jle
sahf
out
jo
pop
inc
lock
mov
movsl
fcoml
pop
das
jl
es
in
decb
pusha
pop
dec
fstp
push
popa
repnz
jmp
cltd
stos
movsl
inc
sub
mov
cmpsl
in
cltd
sar
clc
pushf
sti
stos
insb
loop
inc
int
daa
andb
push
bound
out
sbb
pop
lock
xor
inc
fnstsw
lcall
aaa
add
fsubrs
dec
xchg
mov
fldcw
jmp
mov
das
scas
adc
mov
sbb
das
jbe
ja
outsl
mov
lock
cmp
sbbl
cmp
adc
adc
lods
xor
jle
jb
add
js
out
pop
or
loopne
xor
sahf
jae
or
loope
bound
cmp
sub
cmpsb
xorb
xlat
pop
and
lret
jae
jae
cmpsl
and
outsb
dec
int
and
mov
sbb
out
xor
jg
pop
fs
adc
adc
ret
rcll
fcomip
cmp
rcr
test
inc
fdivs
jle
push
imul
xchg
repz
jge
repz
push
jns
pop
clc
cmp
mov
mov
shl
je
inc
jb
js
mov
sbb
or
pushf
push
mov
aas
dec
lcall
test
dec
xor
rcrb
int
in
pop
stc
mov
aas
jae
testl
mov
icebp
dec
add
mov
test
scas
insl
jmp
xor
dec
gs
cmp
push
pop
int3
xchg
sub
in
dec
fwait
dec
enter
jp
inc
aaa
ljmp
inc
or
aad
orb
sarb
mov
lock
sbb
pop
adc
cs
lea
clc
imul
mov
hlt
std
aas
dec
lods
les
jae
mov
cmp
ds
test
rolb
sbb
sbb
lds
lret
xorb
lea
sti
ret
loope
mov
xchg
mov
test
pop
push
outsb
and
ret
mov
sarb
mov
out
push
mov
xchg
rcrb
sbb
scas
cs
sahf
mov
sub
pop
jb
and
sti
inc
cwtl
cld
ret
shll
out
xlat
loope
fwait
movsb
dec
sahf
dec
scas
test
mov
mov
daa
xchg
jecxz
xchg
push
xor
mov
arpl
xchg
imul
outsl
jo
loop
loop
loope
scas
icebp
mov
arpl
inc
rcrb
mov
lods
jp
mov
stc
cmc
imull
cmp
mov
dec
into
nop
cmp
popf
into
or
xor
sub
icebp
sbb
hlt
jns
mov
ret
dec
out
sbb
pop
fnstenv
lahf
dec
lea
adc
aad
xchg
sub
les
jl
jnp
arpl
ja
test
mov
cmp
test
fcomip
sub
cmp
lcall
adc
push
add
in
sar
sahf
cmp
dec
arpl
test
mov
pop
mov
js
pop
push
push
rcr
sbb
loope
pop
loope
shll
in
dec
les
shlb
adc
push
hlt
cmpsl
in
aam
cltd
andb
sub
ss
ret
insl
mov
xlat
push
repz
scas
aas
jp
call
std
out
fidivs
mov
test
fistpll
fstl
les
lahf
fwait
inc
rcll
test
aad
xchg
jno
pop
jne,pn
jge
sub
lahf
cltd
inc
dec
fimuls
or
aas
push
or
repnz
in
clc
repz
xor
ss
imul
out
push
sub
jp
std
push
sub
push
mov
shll
stc
sbb
cli
dec
jbe
shlb
stos
imul
out
cmp
mov
insb
incl
scas
xchg
xor
shrl
bndldx
rcll
xchg
mov
xchg
idivb
out
jne
lret
jnp
mov
fbld
fs
lock
loopne
dec
mov
push
pop
dec
lret
jmp
mov
daa
clc
push
fdivrs
xchg
xchg
out
out
push
outsb
cmpsb
cmp
or
mov
mov
adc
les
push
sahf
push
xchg
insb
xchg
cmp
xor
scas
lret
fs
or
inc
insl
icebp
mov
xor
xor
jl
rcrb
push
js
ret
cmpsb
fstpt
cmp
xor
mov
fsubl
test
je
dec
jmp
inc
imul
mov
cmpsb
lock
jg
xor
stc
dec
leave
adc
mov
loop
data16
jecxz
xor
add
outsl
dec
mov
ja
mov
dec
mov
adc
xor
push
xor
lea
arpl
les
incb
pop
je
fdivs
or
dec
cmc
xor
in
ret
or
es
push
dec
mov
daa
cmc
roll
fldt
rolb
pop
int3
jbe
mov
fildl
ret
arpl
pop
dec
xor
fdivs
movsb
inc
rcl
je
aad
out
dec
or
or
push
lahf
sub
lahf
aaa
je
xchg
fwait
pop
jle
icebp
fistps
sub
pop
js
push
rcl
sarb
push
movsb
jo
jle
cmp
sahf
pushl
pop
insl
sbbl
cmp
fwait
insb
inc
jle
pushf
out
les
push
or
repz
jo
dec
add
outsl
popf
and
adc
test
ret
inc
insb
lods
sbb
lcall
fistl
test
sbb
adc
jne
jno
and
sbb
jnp
and
ljmp
jmp
fcmove
clc
out
inc
scas
fidivl
aaa
lock
cli
push
aam
inc
dec
jno
mov
sbb
jns
sub
jno
lods
pop
fwait
push
push
dec
mov
mov
mov
aad
jae
add
stc
cld
out
add
sub
mov
cmp
jle
ret
and
jle,pt
int
jnp
add
leave
or
mov
pushl
xchg
mov
push
cmp
xchg
jae
stc
xchg
jns
ds
pop
jae
xchg
out
gs
sub
xchg
mov
mov
cld
mov
adc
aam
scas
xchg
iret
lock
in
nop
ljmp
cmp
jns
ljmp
rclb
pop
mov
iret
ret
mov
or
lods
aam
ds
je
rorl
fistpll
mov
outsl
or
stc
mov
inc
jle
xor
inc
js
mov
xchg
inc
stc
fmuls
gs
jl
pop
and
aas
or
dec
dec
ret
repz
or
popa
add
push
jge
das
inc
adc
pop
roll
cmp
lcall
cmp
bound
push
push
fs
ret
add
sbb
xchg
cli
inc
inc
imulb
xchg
pop
fisubs
or
lods
xlat
inc
mov
cld
jb
mov
or
xchg
out
push
add
iret
sub
push
popa
xor
mov
jp
sarl
push
cmpsb
stos
clc
inc
adc
cmc
adc
mov
movb
jle
aad
shrl
jle
xchg
jle,pn
mov
cli
mov
dec
xchg
loop
adc
pushf
pop
xchg
push
fbstp
dec
scas
jo
fbld
nop
adc
loope
jb
das
dec
jecxz
in
aas
lcall
in
mov
mov
dec
fistpl
pop
pushf
inc
mov
jecxz
loop
das
out
sub
jge
xor
dec
ret
pop
jns
mov
dec
in
pop
bound
xchg
or
int3
mov
sub
fdivl
out
cmp
insb
mov
ja
aaa
jnp
jmp
add
shl
mov
mov
mov
jno
xchg
ja
jne
cmp
pop
jle
inc
into
and
sti
test
rcrl
cmp
jl
xor
xlat
jnp
inc
pushf
popa
dec
xchg
icebp
add
out
nop
call
dec
clc
cmp
mov
mov
sbb
xchg
sub
mov
pop
stos
in
jns
and
jb
test
pop
cltd
xchg
jae
mov
jae
int3
testl
cmp
jbe
xchg
adc
mov
dec
jge
cmp
js
mov
out
jp
pop
xchg
mov
add
imul
call
std
loope
sti
aam
mov
imul
pop
mov
cmc
mov
cmp
jle
pop
jp
sub
cmpsb
xchg
shlb
test
sub
notl
adc
mov
cltd
cmp
bswap
mov
gs
jmp
or
lods
mov
roll
shld
movsb
xchg
dec
testl
sub
test
ret
leave
mov
test
repnz
daa
call
mov
test
sbb
xchg
or
jne
test
jg
sub
or
jl
cmp
sub
adcl
lahf
xchg
mov
ja
sub
dec
mov
dec
pop
notl
xchg
iret
fsqrt
xchg
bound
pop
or
es
push
xchg
mov
jo
insl
sarl
lea
xchg
test
inc
mov
mov
stos
lahf
sti
mov
pushf
lahf
pop
xor
push
xor
jp
xor
out
mov
das
out
rcrb
addr16
popf
and
mov
aaa
int3
xor
hlt
mov
rorl
add
push
out
fistpll
movsb
movsl
lock
sbb
mov
sub
das
pop
cmc
aaa
or
cmc
cltd
and
sbb
sbb
pop
lds
pop
xor
adc
int3
xchg
inc
inc
xor
scas
shl
cmp
pop
or
fldenv
cltd
sub
scas
dec
leave
push
jl
test
jae
gs
mov
fldt
icebp
or
lahf
insb
pushf
aas
rcrl
jecxz
xchg
or
mov
push
sbb
loop
jae
rcl
outsl
mov
pop
ljmp
mov
stos
cmp
sahf
pop
lock
pop
sbb
sti
jne
ret
rcl
shlb
and
mov
adc
sahf
sahf
fcmovnbe
fcoml
inc
cmc
mov
scas
icebp
cld
sbb
xchg
jge
sbb
mov
mov
clc
push
push
popf
dec
jae
mov
aaa
lret
ret
inc
mov
jo
cmp
jge
cmp
xchg
lret
mov
jae
mov
and
and
rorl
imul
cmpsl
mov
add
sarb
inc
scas
xlat
shl
popa
sbb
ret
clc
mov
pushf
insb
cmp
iret
push
and
push
mov
lcall
bound
iret
cltd
lcall
push
and
ds
icebp
sub
jmp
dec
into
or
cmp
mov
cltd
or
sti
int3
push
mov
mov
test
mov
pop
lahf
cmp
jno
jmp
add
lea
scas
decb
lods
nop
movsl
mov
in
sub
shr
mov
push
out
in
ret
and
ja
aaa
outsb
pop
lcall
add
dec
fisubrs
lods
repz
ss
icebp
mov
hlt
popf
sub
andb
fs
sti
jmp
aaa
mov
sub
int
insb
mov
or
lea
lcall
jae
push
es
out
shrl
push
mov
mov
xor
outsb
arpl
sub
pop
cmp
gs
dec
push
lods
stos
mov
xchg
mov
dec
xor
xor
insl
mov
in
or
push
dec
in
inc
data16
ret
cltd
int3
xchg
mov
cmpsb
je
xor
hlt
sarb
sub
and
dec
add
insb
fdivl
arpl
sbb
pop
cmc
push
rclb
imulb
sub
cmpl
mov
ljmp
es
mulb
aaa
sbbl
pop
int3
jl
imul
mov
adc
and
jno
call
aaa
mov
mov
pusha
adc
adc
or
outsl
aad
jge
imul
xor
cmp
cmp
sbb
sbb
sub
addb
push
in
pop
aam
adc
es
push
fistpll
pop
pop
jecxz
cld
cmc
popa
js
xor
dec
out
adc
jmp
push
mov
pop
clc
jle
xchg
jle
jne
orl
roll
mov
push
jno
hlt
sahf
pop
xor
sbb
xor
pop
pop
ja
inc
xchg
ret
sbb
or
push
test
pop
call
fs
cmpsl
jl
mov
mov
mov
subb
mov
cs
pop
enter
mov
jmp
mov
imul
iret
or
test
add
sti
cmp
pushl
insl
js
dec
fists
leave
xchg
cld
xchg
inc
and
pop
into
add
mov
cmp
jecxz
fiaddl
sbb
push
pop
xchg
insl
loope
inc
add
pop
xor
js
or
icebp
add
mov
xchg
in
js
mov
into
xchg
xchg
jmp
jmp
shrb
je
frstor
loope
call
xchg
cwtl
test
out
std
icebp
inc
dec
xlat
mov
cwtl
sub
insb
mov
mov
mov
dec
lret
lcall
ja
jmp
push
pop
sub
mov
les
sbb
push
es
fistl
push
push
pop
xor
pop
pop
repz
mov
sub
dec
pop
push
push
out
mov
push
cs
das
outsl
sbb
mov
jbe
aam
icebp
add
outsb
fs
inc
jg
faddl
aas
mov
arpl
jp
outsb
dec
fwait
xor
daa
xchg
testb
outsl
call
sbb
pushl
jge
mov
in
movsl
int3
stc
fldenv
and
jl
seta
ds
xchg
lods
lds
jne
icebp
mov
push
cld
mov
fdivrp
xchg
pop
mov
cwtl
cmpb
mov
pop
mov
std
sub
jnp
rorl
imul
cmpsb
pushl
mov
cld
mov
add
push
mov
iret
scas
inc
adc
ret
push
cmp
scas
jmp
shll
cmp
mov
sti
adc
dec
hlt
divb
or
and
out
fidivrs
cmpsb
stos
shll
loope
iret
sti
push
adc
dec
popf
shrl
xchg
mov
mov
lock
sbb
aas
pop
stos
add
inc
cmpsl
jp
push
ja
inc
mov
and
xor
lods
pop
dec
aam
sbb
push
xlat
sub
out
pop
pushl
in
lea
maskmovq
cltd
xor
scas
andb
daa
sahf
pmaxub
or
out
xchg
xor
stos
mov
sub
imul
aaa
push
dec
insb
mov
insl
cmc
iret
push
fimuls
fidivrl
jns
xchg
popf
lahf
lcall
sbb
stc
hlt
loope
pop
mov
xlat
sub
enter
jp
int
test
mov
sbb
add
in
jne
leave
int
rep
pop
loope
insl
andb
addb
insb
inc
popa
fxch
data16
insl
sahf
push
popa
jl
arpl
and
lret
jmp
push
mov
add
nop
xchg
fbstp
std
lret
std
sbb
fs
adc
fldt
into
out
xchg
xor
fsubp
int
dec
cmp
ljmp
imul
cmpl
les
sbb
mov
sub
outsl
mov
cwtl
adc
in
mov
stc
dec
mov
frstor
push
inc
rcll
fnstenv
andb
insl
adc
scas
nop
jecxz
xor
notb
inc
mov
mov
ret
data16
jae
push
inc
mov
jmp
jo
in
jb
mov
pop
push
jecxz
aad
pushf
xchg
inc
lret
shll
mov
movsl
jle
mov
mov
or
jecxz
cmpsl
lock
fisubrs
mov
lock
loopne
jbe
cltd
ljmp
xchg
mov
lods
out
inc
popf
pop
sub
sub
push
fdivp
mov
leave
and
ja
int
jl
gs
mov
data16
push
cmc
jno
pop
jns
movb
mov
bound
mov
mov
out
pop
cmp
icebp
loopne
out
out
fdiv
or
out
xor
shll
pop
mov
cltd
mov
test
sti
add
iret
pop
aam
fdivs
sub
cmpsb
shrl
pop
movsb
movsb
add
inc
xchg
leave
and
sbb
scas
fdivs
in
add
jmp
or
sar
push
shl
mov
mov
test
pop
push
fs
pop
cmp
cmpsl
aas
aad
daa
out
mov
sbb
cs
or
aad
mov
cmpsb
and
ret
mov
or
dec
cmp
jmp
ds
cmc
sub
cmp
aas
pop
push
out
rcll
clc
xlat
outsl
lock
jp
jl
lds
outsb
fidivl
mov
arpl
cs
mov
int3
jg
mov
pop
mov
pushf
mov
push
jg
inc
setp
xor
in
or
cmp
inc
into
mov
mov
mov
push
jecxz
in
add
push
mov
push
mov
sub
ljmp
sbb
mov
les
push
add
mov
rcrb
xchg
add
pop
xchg
imul
jo
mov
sahf
inc
pop
jg
mov
push
mov
xchg
inc
sbbl
cmpsl
test
loopne
mov
int3
sarl
mov
negb
addr16
cmpsl
movsb
xor
cwtl
out
out
cmp
sbb
and
sbb
roll
fcomps
in
and
and
aad
test
out
sub
sti
bswap
decb
sti
push
pop
sahf
jecxz
and
push
or
cs
xchg
jle
in
push
fdivl
mov
mov
inc
lahf
push
jae
adc
jne
mov
inc
mov
in
pop
aad
or
mov
mov
fidivs
dec
ret
jno
mov
fs
push
fldl2t
movsl
add
cld
out
insb
mov
addl
ds
mov
jbe
leave
adc
insb
rcl
dec
xor
imul
mov
xchg
loop
loopne
mov
nop
cli
mov
xchg
repz
push
imulb
mov
dec
cmp
mov
jmp
dec
mov
mov
mov
in
xchg
cs
stc
subl
adc
lea
push
xor
jbe
lock
xchg
sbb
arpl
xor
ret
fmuls
mov
std
in
loope
iret
mov
repz
and
adc
hlt
loop
mov
scas
icebp
mov
cmc
in
jge
arpl
sbb
das
daa
sub
addr16
add
lcall
mov
cmp
push
lods
lahf
fildll
push
jecxz
jne
dec
pop
stos
adc
lahf
mov
mov
nopl
mov
push
rol
push
shrl
xchg
repz
test
ja
jg
ret
sub
lods
je
mov
shlb
pop
out
cltd
xchg
fistpll
cltd
out
arpl
pop
inc
mov
add
jbe
sti
loope
into
imul
mov
mov
in
cmc
jb
sar
dec
in
gs
or
mov
mov
lods
je
jo
sub
fistl
int3
shl
mov
mov
mov
push
pusha
sbb
sub
cmp
jb
and
rorb
push
mov
jne
bound
jmp
mov
fnstcw
add
cld
in
dec
mov
jmp
sub
das
mov
pushf
inc
int3
out
ret
jnp
push
jmp
mov
add
aas
adc
sbb
push
fldt
mov
loope
in
lea
call
je
mov
push
inc
mov
into
fdivl
mov
gs
and
shrl
push
dec
rorl
scas
and
je
movsb
cmp
xchg
lock
mov
and
mov
or
ret
roll
sbbl
mov
jg
mov
lret
incl
mov
mov
jb
out
cmp
into
pop
push
lea
nop
push
nop
or
mov
jmp
jno
xchg
cmc
shrb
xlat
pop
mov
sahf
ficomps
fdiv
and
cmp
cmpsl
jp
inc
enter
into
lock
rep
les
fistpll
aam
mov
jmp
fxch
jnp
xchg
jecxz
ucomiss
outsl
add
sti
mov
dec
out
imul
xor
clc
fldl
pop
inc
xlat
sahf
mov
lds
xor
sub
lahf
iret
fisubs
lcall
pop
inc
sahf
sbb
mov
ficoms
mov
insl
inc
popfw
cmp
adc
inc
jg
lahf
xor
fs
fdivrs
popf
cmpsb
mov
shrb
pop
jg
adc
xor
out
or
bound
je
jp
and
mov
mov
mov
outsb
mov
jl
adc
xchg
or
push
gs
mov
mov
shl
dec
pop
or
mov
insb
xchg
mov
sbb
sbb
aas
dec
jecxz
dec
sbb
insb
dec
outsb
ret
jbe
inc
cs
out
cmp
add
ja
mov
push
sbb
jp
sbb
jmp
cmp
pop
mov
test
aas
into
pop
mov
ds
cmp
scas
fs
dec
jns
insl
sub
sub
cmp
xchg
pop
cmp
subb
rclb
inc
add
adc
out
lahf
int3
sar
into
mov
les
jnp
mov
jo
jb
and
fmull
outsl
xchg
mov
mov
cli
fadd
jmp
xchg
leave
int
sti
dec
lods
ret
xchg
and
outsb
leave
push
cmp
lahf
xchg
add
cmp
fiadds
inc
dec
mov
cmp
fcomp
rolb
push
jne
xchg
cmc
cmc
in
mov
icebp
mov
lea
adc
lret
pop
jne
lea
xchg
mov
sbb
or
mov
scas
mov
pop
loop
jno
cld
mov
fimuls
hlt
fnstcw
subl
andl
es
pop
ljmp
in
lea
cmpsl
mov
sti
or
cmp
cmp
fnstcw
cmp
std
pop
shll
xor
gs
mov
xor
pop
add
cmp
sti
dec
dec
pop
dec
aas
out
orb
stos
nop
out
and
or
fcomps
push
in
mov
out
cmp
das
enter
cmp
pop
sahf
out
and
jo
jge
repz
push
adc
xchg
xchg
lods
es
adc
mov
jne
subl
pop
lods
bound
push
fldenv
xchg
das
mov
or
xlat
jp
cli
testl
pop
fs
jle
xchg
add
ljmp
cmp
call
xor
mov
inc
inc
xchg
push
push
xor
arpl
pushf
sbb
inc
sbb
cmp
insl
push
insl
mov
jnp
ret
dec
pop
mov
push
push
cli
lahf
add
fisubrl
dec
daa
push
jle
inc
imul
add
jne
push
inc
ljmp
incl
out
pop
hlt
mov
mov
fsubl
aas
jmp
ja
sub
sahf
lds
cmp
cli
xchg
insl
addr16
mulb
pop
dec
add
out
dec
adc
hlt
mov
aas
dec
push
dec
cmp
pusha
push
cwtl
test
add
cmp
dec
and
mov
in
cmpsl
sarb
xor
lret
jne
clc
mov
fwait
adc
loope
scas
aam
lcall
ficompl
pop
ret
jnp
je
fwait
push
ficoml
xor
mov
test
out
clc
sti
sar
or
js
lods
mov
test
gs
dec
int3
cmp
cltd
repz
jae
scas
test
out
inc
iret
jne
xchg
cwtl
and
aad
jle
push
jge
sarb
movsb
int3
xor
jb
lret
adc
and
clc
dec
ret
and
jg
mov
imul
xchg
push
sub
out
lock
iret
mov
rcpps
sub
push
ja
rorb
mov
or
jo
sahf
mov
jno,pt
jle
shl
idivl
out
test
inc
pop
rcrb
aaa
xchg
cmpsl
or
and
out
shr
jbe
pop
repz
mov
fwait
jp
cmpsb
fidivs
fs
rcrb
fnstenv
iret
dec
mov
es
and
mov
and
mov
inc
xorl
fimuls
sbb
cli
pop
stc
icebp
mov
mov
stos
jae
call
jg
and
pop
sbb
xchg
xchg
jecxz
mov
xor
xchg
fcmovbe
shlb
push
pop
xor
clc
sub
xchg
shlb
jecxz
mov
push
mov
jo
inc
data16
loopne
outsb
std
loop
scas
imul
jecxz
cmp
xor
es
sarl
mov
and
call
pop
ljmp
loopne
pop
or
sbb
into
lret
fnstenv
dec
jp
mov
cmpb
jne
or
cmp
jecxz
or
jnp
jle
add
out
push
mov
mov
fildll
lea
sub
aas
mov
aam
xor
and
out
test
push
cmp
imul
lods
cmpsl
pop
sub
cmp
loop
dec
jge
xchg
mov
aaa
repz
mov
push
mov
ret
sub
add
stc
fisubl
lds
sub
adc
ljmp
mov
pop
js
fistpll
cmc
div
dec
out
xchg
mov
out
push
jae
add
mov
adcb
fiadds
cld
test
out
cmc
and
jmp
cmpsb
and
xor
clc
pushf
inc
cmp
or
imul
cmpsb
jle
mov
jg
inc
mov
out
bound
xor
mov
jp
pop
insl
mov
loopne
lahf
xchg
cmp
out
je
xchg
xor
out
aaa
scas
inc
jnp
jle
add
lock
mov
scas
icebp
orb
and
mov
shlb
imul
in
push
je
filds
int
dec
or
mov
mov
jno
lds
sbb
xchg
ja
mov
jnp
cmpxchg
jg
ja
mov
repnz
jp
sbbb
fisubrl
push
hlt
mov
xlat
loop
fistps
in
push
mov
clc
pop
movsl
mov
adc
insb
mov
and
xlat
cmpsl
pop
in
pusha
xor
jns
aaa
inc
cmp
out
mov
mov
cmp
iret
mov
cmpsb
inc
sub
adc
mov
adc
cwtl
sub
mov
out
aam
fsubr
and
dec
push
xchg
repz
xor
and
add
fdiv
ret
cli
fwait
add
adc
loope
mov
dec
adc
popa
and
out
xor
pop
roll
push
push
xor
daa
adcb
aas
movsb
sbb
insl
std
ljmp
jge
jp
je
idiv
sbb
mov
xor
incl
test
xlat
inc
pop
lods
addr16
pcmpgtw
mov
mov
xchg
cli
xor
scas
cmp
into
sbb
sub
cmpsb
aas
fwait
xor
test
inc
mov
ds
jmp
fwait
cs
mov
and
and
mov
insl
aas
inc
xchg
icebp
stc
adc
xor
xchg
lahf
js
jae
push
outsb
lret
int3
jp
or
add
push
cmpsb
bound
ja
pop
cmp
sbb
xchg
mov
inc
push
inc
mov
add
fcoms
push
imul
or
test
arpl
dec
test
loopne
sub
popa
inc
jb
mov
lods
dec
pop
dec
add
sub
aas
mov
mov
cmp
out
divl
aaa
out
add
lods
mov
xchg
stos
iret
inc
jnp
imul
pusha
cmp
ljmp
cmc
push
scas
pop
sti
out
aad
popf
xchg
push
imul
cld
mov
in
dec
sub
mov
mov
stos
and
pushf
decl
inc
insl
xchg
jo
cmpsl
lcall
iret
sub
pushf
inc
mov
xchg
push
push
jns
or
call
cld
xchg
and
push
sbb
dec
lcall
repz
dec
sti
sti
in
cmp
arpl
mov
jbe
les
cmp
mov
mov
or
repnz
xchg
pop
ljmp
pop
cmpsl
or
loopne
and
arpl
mov
mov
iret
adc
in
lods
cmpsb
popa
ds
fidivrs
jnp
sbb
fidivs
int3
iret
clc
mov
xchg
xchg
inc
xlat
sub
leave
stos
in
arpl
lahf
and
fmulp
hlt
paddb
jle
fld
sub
push
jge
mov
jp
mov
jne
mov
inc
imul
xchg
lcallw
out
sbb
hlt
imul
jnp
or
test
mov
call
ljmp
out
test
push
enter
lcall
inc
push
xor
in
and
pop
pop
movsl
pop
jge
scas
mov
daa
or
pop
test
and
loopne
fisttpl
mov
pushf
idiv
aas
gs
jns
mov
ds
fs
pop
pushl
bound
mov
in
mov
xlat
fwait
and
adc
lods
push
jp
jle
cwtl
out
repz
pop
cmc
fstl
or
pop
cmp
cmp
sub
outsb
movsl
int3
outsb
movsl
loope
gs
jns
call
xlat
pop
call
ret
inc
cld
xor
dec
je
shl
inc
loope
mov
xchg
test
call
mov
loope
sub
imul
in
sub
cmp
pop
jg
sahf
mov
into
dec
pop
sub
cmp
shrl
out
repnz
adc
dec
les
out
push
std
cmp
idiv
sbb
cld
xchg
lea
cmp
mov
mov
insl
ja
dec
jnp
xchg
call
cmp
mov
xorl
xor
je
ss
mov
dec
out
movsb
xlat
rol
les
xchg
jo
jl
scas
mov
std
fidivl
int
dec
out
dec
lods
fists
inc
lahf
ret
fildl
jo
pop
into
movsb
iret
push
mov
inc
push
push
add
stos
jle
lods
xlat
sub
and
pop
ja
ret
in
pop
mov
stc
in
lods
incl
test
xor
sahf
fisubrs
pop
aaa
pop
lods
movl
addr16
mov
cmpsl
clc
sbb
stos
pop
xchg
loop
mul
cld
and
jne
jnp
or
adc
pusha
ret
adc
js
ret
mov
ret
hlt
cld
pop
cwtl
mov
shrl
xor
pop
mov
movsl
mov
push
mov
mov
mov
sti
movsl
xchg
lret
push
adc
stc
dec
sub
cmpl
pushf
sbb
sub
aad
js
mov
push
jg
cmpsb
cmp
push
out
imulb
lahf
rcr
pop
dec
push
in
repnz
out
stos
jae
push
or
out
cli
fsts
xor
out
in
mov
cmp
adc
dec
fdivrl
imul
sub
xchg
clc
jb
jbe
insl
sub
jle
stc
fwait
jle
test
lcall
inc
enter
sbb
jmp
imul
stc
xlat
hlt
setle
ds
mov
cli
lds
call
sub
add
sbb
jmp
add
punpckhwd
jb
fmulp
loop
in
jb
jge
scas
lahf
and
out
push
push
mov
jg
mov
mov
stc
call
dec
stc
out
or
subb
mov
pop
ret
ret
cmp
cmp
repz
mov
scas
mov
mov
push
es
sub
lods
clc
inc
sub
mov
mov
mov
arpl
mov
mov
outsb
lods
lcall
int
mov
loope
pop
pop
shl
jmp
cmp
stos
inc
xchg
lahf
jmp
icebp
in
sub
push
sbb
lret
jmp
xor
and
ja
das
dec
in
push
dec
loopne
jbe
fsubrs
pop
cmpsl
mov
cmp
decl
gs
jnp
imul
insl
xchg
int3
sbb
insl
iret
add
aas
lock
lahf
shr
mov
pop
sbb
mov
jmp
mov
imul
or
outsb
adc
xor
repz
stos
cmpsb
inc
divl
out
jmp
test
mov
mov
mov
inc
iret
popf
add
icebp
stos
test
scas
jge
add
jmp
out
add
call
cli
les
idivl
scas
xor
lret
pop
pushf
rclb
jns
add
dec
arpl
push
aas
dec
xchg
mul
gs
xchg
insb
push
xor
jne
dec
into
cwtl
xchg
inc
lock
cmc
pop
inc
cs
hlt
or
arpl
lods
jae
jle
icebp
cwtl
and
mov
lods
popf
inc
jbe
sbb
adc
inc
gs
sub
lods
adc
dec
jbe
cli
pushf
xor
pop
jl
mov
jmp
jnp
in
test
in
sarb
xor
mov
in
and
or
push
sub
inc
adc
pop
mov
mov
out
xchg
mov
fstpl
add
nop
cmpb
in
fisttpll
xchg
push
jnp
incb
xchg
and
decl
mov
idiv
das
fs
rolb
push
inc
and
sub
repnz
mov
std
lods
push
push
pushf
jnp
outsl
adc
pop
ret
mov
aam
adc
aad
push
shlb
cmp
sahf
inc
enter
movsl
cld
aam
or
test
int3
popa
xor
xlat
shr
sbb
jecxz
shrl
xor
inc
jecxz
xchg
pusha
ljmp
pushf
stos
je
fst
int
es
fdivl
dec
mov
or
out
mov
pusha
repz
mov
jae
addr16
aas
into
adc
clc
stc
pop
repz
out
imul
jg
mov
xchg
orps
aaa
sahf
daa
push
add
lret
mov
or
out
add
inc
pop
mov
into
gs
cmp
cmp
push
cmp
push
lods
mov
jns
pop
mov
lret
hlt
mov
sub
pop
hlt
sbb
jle
imul
mov
arpl
xchg
mov
and
push
and
or
rclb
and
fists
icebp
push
and
mov
hlt
stos
cmp
repz
jmp
jbe
stc
or
and
and
xor
fwait
lods
icebp
iret
jns
popa
or
inc
mov
ds
in
sub
cmpsb
jl
xlat
idiv
stc
cli
decb
lods
mov
mov
repz
loope
xor
repz
sbb
xor
scas
stc
int
clc
and
add
mov
out
sbb
sub
cmp
xchg
les
mov
gs
dec
push
hlt
fisttps
test
in
fwait
adc
out
pusha
pusha
fs
cli
xchg
cmp
push
outsb
addr16
mov
mov
les
jnp
subb
mov
cmp
dec
fs
pop
outsl
inc
cmp
mov
inc
xchg
xor
stos
and
and
xor
mov
jno
cmpl
fs
push
aam
stc
shrl
test
jecxz
enter
fcom
jns
pop
ret
daa
in
mov
add
loopne
in
jo
jne
shlb
sub
jecxz
sahf
mov
test
shr
or
movsl
inc
scas
fs
popf
out
push
mov
gs
push
getsec
jl
rcrb
jl
jecxz
fistpll
sub
imul
pop
push
shlb
pop
push
bnd
fdivrp
mov
inc
imulb
int3
test
lahf
imul
sbb
out
push
cmp
push
sbb
js
mov
je
jb
and
sub
shrl
push
in
sbb
mov
pop
aas
lods
add
mov
inc
cmpb
repz
inc
sbb
jecxz
cmpsl
popf
ret
mov
dec
mov
push
and
dec
push
int3
test
cmpsl
or
fwait
xor
fistps
push
ficomps
inc
dec
mov
shl
pop
and
aas
sub
xchg
and
xor
add
fs
es
out
das
xor
inc
jg
in
mov
fcmovnu
out
xchg
cltd
jmp
rcr
pop
cmp
xor
aad
jns
fiaddl
lods
xor
jl
mov
decl
test
sahf
das
mov
dec
repz
sbb
outsl
int
stos
fildll
cmp
push
mov
dec
sti
insl
repz
inc
sub
add
or
mov
cmp
pop
cmc
scas
inc
sub
test
cmpl
sar
jnp
lods
loope
sahf
mov
addb
ljmp
sub
mov
xchg
jnp
lods
aaa
jecxz
dec
lds
je
mov
xor
in
sbb
out
addr16
das
pop
test
mov
lods
outsl
fidivl
repz
aaa
mov
pop
fistps
cmp
clc
repnz
dec
test
movsb
mov
js
ret
outsb
pop
pop
sahf
adc
cmpsl
mov
mov
jp
push
popa
jle
mov
clc
mov
pushf
mov
sbb
push
and
mov
int
cmp
roll
mov
pop
mov
fcmove
dec
jge
loop
testb
shl
aas
jmp
shr
or
fwait
pop
fistpll
dec
scas
inc
gs
shl
or
push
addb
dec
das
fists
lock
xchg
movsl
mov
sbb
mov
dec
movsl
jmp
mov
push
sub
daa
lahf
sahf
popf
sub
adc
jbe
loop
jns
mov
cld
int
fyl2xp1
jge
dec
mov
jl
sub
mov
inc
xchg
loop
loopne
outsb
and
aam
or
dec
xor
out
push
cld
sub
push
dec
cmp
into
cld
and
addl
or
mul
into
imul
int3
mov
and
sub
stc
mov
or
dec
outsb
mov
push
aas
mov
mov
and
sbb
cld
decl
xchg
scas
mov
and
push
mov
scas
xchg
in
enter
je
imul
cmpsb
test
pusha
shr
lret
pop
shll
mov
inc
push
test
mov
cmpsb
adc
jg
test
add
pop
pop
lret
jns
outsl
out
hlt
jb
repz
mov
loop
cmp
jle
mov
jge
jno
xchg
loop
sarb
les
mov
xor
dec
cmpsb
pop
cmp
lret
xor
faddl
sub
pop
insb
aam
ret
cmpsw
into
xchg
enter
push
inc
stos
inc
or
gs
inc
in
mov
or
popl
mov
xchg
adc
cwtl
dec
mov
outsb
jge
push
loopne
push
lret
jae
pushf
xorb
sti
push
cli
adc
popf
mov
inc
or
jo
jo
mulb
xchg
jb
test
loop
iret
cmp
sub
mov
loop
js
push
mov
sarb
pop
pop
push
in
add
mov
add
repnz
mov
mov
jp
mov
mov
scas
das
cmp
mov
pop
iret
pushf
es
cmc
fildll
jmp
and
je
pop
test
in
out
dec
imul
in
por
out
mov
popf
das
rcrb
pop
pop
xor
test
out
das
aaa
int
aaa
xchg
outsl
out
sbb
fistpll
push
mov
dec
int3
cmpsb
pop
add
pop
div
xlat
pop
les
fs
adc
xlat
add
test
add
shr
bndstx
into
xchg
loope
std
jae
enter
cvtpi2ps
aad
mov
jge
imul
iret
mov
movsl
call
jbe
js
int3
shll
jno
jno
xchg
das
in
jmp
jmp
inc
cmp
push
and
gs
aam
shll
mov
push
push
mov
add
jo
mov
addr16
pop
dec
gs
ljmp
jne
jae
cmp
push
push
aas
and
aaa
cmp
test
xor
pushf
jb
js
aas
cmp
shr
pop
aas
xor
cld
dec
inc
rolb
jg
or
or
jnp
add
in
pop
inc
out
cmp
cmpsl
mov
fcompl
or
inc
arpl
pusha
loope
cld
js
ljmp
add
fiadds
mov
frstor
popl
cmp
inc
jp
jmp
sbb
mov
pop
pop
xchg
fwait
ret
popa
movsl
xlat
iret
sbb
shll
mov
sbb
ficomps
loop
jl
cmp
testb
ja
fwait
mov
ret
xor
testb
or
vpshld
sub
lahf
dec
mov
xrelease
jns
fsubrs
lock
scas
movsl
jae
pop
test
popa
push
mov
jg
inc
lea
pop
stc
enter
dec
daa
mov
cwtl
outsl
movsl
pop
out
add
outsl
hlt
push
fs
and
pushf
mov
mov
sub
stos
lahf
mov
jp
mov
cmc
outsb
jle
mov
or
mov
add
or
mov
pop
in
das
xchg
negl
stos
xchg
and
test
repz
cmp
cmp
rolb
sub
xor
aam
push
mov
jo,pn
int
add
cmp
enter
xchg
adc
xchg
jge
sub
in
test
cmp
mov
loope
dec
int
fsubs
push
xchg
test
xchg
xchg
movsl
push
and
in
fstpl
cld
pop
push
or
fwait
mov
mov
int
push
ja
jmp
insb
dec
push
sbb
fcompl
sub
shll
and
mov
in
fnsave
lret
mov
xor
insb
lds
mov
loopne
jb
hlt
pop
imul
subl
dec
in
push
mov
sbb
cmp
aaa
js
movb
lock
push
mov
pop
loope
movsb
pop
stc
add
xor
aas
jo
cmp
mov
clc
sbbb
ud2
cmp
pusha
clc
sti
test
inc
fwait
mov
pop
std
add
cmp
mov
mov
xchg
dec
xor
sbb
mov
leave
sub
inc
xor
outsb
pop
lds
pop
mov
sahf
test
mov
or
add
adc
lahf
push
inc
mov
or
xchg
je
mov
add
pusha
gs
ret
addr16
or
or
dec
std
aas
adc
add
cld
xor
lcall
in
pop
lcall
xchg
jb
dec
cmp
ljmp
cmp
jo
out
jno
push
sbb
ror
jns
cmpsl
dec
roll
mov
shlb
ds
inc
mov
inc
shlb
ss
inc
pop
bound
data16
jp
push
push
in
stos
outsl
imull
mov
mov
sbb
inc
mov
inc
push
pop
lret
push
inc
sbb
dec
pop
xorb
cmovl
jo
addl
fistps
les
arpl
xor
dec
test
pop
sub
scas
push
push
aad
add
das
cltd
mov
sbb
pop
enter
mov
js
sbb
dec
mov
fdivrp
lret
xchg
mov
jecxz
insl
std
lods
cmp
mov
enter
divb
sub
lcall
lock
ds
fiaddl
and
jmp
cmp
xor
jecxz
and
fstps
push
mov
mov
lret
xchg
sbb
sub
scas
xchg
mov
fwait
mov
push
aad
cmc
insl
lahf
aaa
push
jo
popf
mov
pop
out
push
jmp
out
pop
dec
xor
addb
pop
mov
cmc
cmp
clc
pop
into
rcrb
push
push
scas
jl
subb
sbb
sub
outsb
sub
aaa
fwait
xchg
ficoms
nop
push
cld
inc
mov
lods
add
push
loopne
mov
cmc
push
call
jb
frstor
adc
push
movsb
or
cs
loope
clc
out
jecxz
xor
push
jbe
push
test
pop
jno
jmp
out
iret
sub
adc
jnp
test
mov
lods
xorb
stos
ss
adc
arpl
pop
cmp
repnz
cmc
and
xchg
sub
jmp
ljmp
jmp
repz
popa
xor
cltd
enter
sub
pop
rcr
cmc
outsl
mov
fs
lret
out
orb
repnz
and
lock
push
cmp
fsubp
imull
adc
inc
fwait
loope
in
insb
or
in
and
cmp
jecxz
lret
arpl
ljmp
fdivrl
adc
lock
cwtl
sub
clc
pushf
xchg
sbb
and
pop
out
inc
ljmp
pop
test
jecxz
jl
add
or
pop
out
filds
pusha
dec
movsb
inc
andb
stos
or
pop
adc
cmp
inc
lahf
push
dec
addr16
push
out
push
cmp
loop
lods
push
pop
cwtl
mov
std
adc
nop
inc
scas
dec
test
and
push
cmp
xor
mov
mov
pop
dec
rcrb
aaa
dec
xor
jle
sub
jp
sbb
insl
ja
cmp
push
pop
xchg
mov
inc
scas
xor
xor
jge
cmc
cmpsl
in
dec
jbe
push
pop
repnz
mov
cli
sub
jge
hlt
lods
sahf
pop
fbstp
int
push
int3
jnp
xor
xor
outsb
jmp
rorl
jecxz
or
sbb
rorl
lahf
dec
mov
xlat
mov
pop
sub
out
fidivrl
dec
mov
lea
shll
jbe
xorb
push
daa
mov
popa
sub
nop
jmp
cmp
pushf
pop
pop
pop
iret
stc
lods
in
mov
inc
ss
test
jge
lahf
xor
xor
mov
iret
jno
adc
testb
xchg
push
sbb
push
std
popl
mov
ss
mov
pop
add
adc
repz
push
cmpb
lahf
lret
push
shll
sub
popf
test
fsubrs
cmp
sub
jns
jg
arpl
fsubrs
scas
fisubs
push
pop
xchg
mov
je
clc
push
pop
pusha
push
jnp
ljmp
dec
mov
arpl
daa
test
adc
push
cmp
cld
cli
cmc
dec
fwait
add
push
pop
je
xor
cmp
incl
pusha
neg
mov
dec
fwait
and
xchg
popf
push
sub
jle
jle
test
or
push
cld
je
jnp
mov
idivl
nop
out
in
push
sti
sbb
mov
sub
lahf
adc
ss
push
add
sub
jbe
inc
mov
in
fwait
fs
dec
enter
pop
pop
sub
nop
stos
cli
pop
jne
lcall
cld
outsb
test
popl
xchg
out
adc
and
test
jecxz
push
sbb
out
rorl
inc
sbb
into
jg
adc
and
aam
push
cmp
adc
aas
iret
aas
cmp
movd
sbb
pop
dec
arpl
stos
shrb
sbb
cmpsb
ds
imul
sbb
pop
lret
ja
push
inc
pop
jo
jg
loope
loope
sbb
cmp
fdivl
jp
mov
aad
scas
fnstenv
pop
rcrb
repz
imul
das
lcall
xor
mov
mov
subl
outsb
jnp
popf
shl
and
and
repz
js
mov
sub
push
pop
jae
fisubrl
jb
lds
sti
icebp
push
dec
push
repnz
jp
bound
mov
add
jbe
push
cmp
ret
dec
popa
repz
iret
push
jno
sbbl
addb
add
pop
stos
pop
in
or
movsl
pusha
ret
fiaddl
jecxz
jle
test
cltd
xor
pusha
popl
addr16
xchg
mov
adc
in
clc
sub
or
inc
subb
sahf
sbb
sbb
jecxz
ret
jge
inc
adc
icebp
rorb
out
push
insl
mov
sub
test
inc
ret
lret
sbb
push
and
scas
loope
xor
les
loop
sti
lods
sti
push
xorps
xchg
outsl
lods
in
pop
and
cmp
mov
cmp
and
js
lods
jmp
pop
jl
imul
sti
and
out
out
clc
xchg
movsb
fidivrl
cmpb
jbe
aad
inc
mov
dec
imull
hlt
xor
mov
xlat
xchg
dec
jnp
pop
inc
aam
stos
testl
xorl
dec
inc
cmp
jo
xchg
mov
sbb
push
aas
dec
scas
arpl
inc
xor
aam
notb
sahf
movsb
push
mov
fsubrl
ja
std
out
fnsave
dec
jae
addr16
mov
inc
ja
scas
cld
dec
dec
sbb
lock
cmp
cmpb
rorl
test
adcb
push
pop
je
sbb
stos
ljmp
stc
into
xchg
mov
and
push
sub
andb
mov
sbb
jo
sub
push
sahf
xor
cmp
pop
sub
enter
pop
inc
dec
dec
pop
mov
mov
push
add
dec
xor
aas
dec
sbb
sarb
cmp
sub
fldl
test
mov
in
fdivl
xor
xchg
es
into
push
inc
ret
icebp
mov
push
movsb
dec
fdivrl
pop
in
or
xchg
sti
pushf
and
push
xchg
or
xor
pusha
mov
sbb
mov
mov
cmc
xor
cmc
cmpsl
mov
cmpsb
sub
cmp
xchg
xchg
mov
mov
iret
sbb
shlb
xchg
pop
ja
mov
push
aaa
pusha
adc
push
test
mul
cltd
addr16
pop
stc
arpl
sub
out
inc
cmp
pushf
insb
fimuls
fpatan
cmp
mov
jecxz
mov
pop
inc
jbe
dec
fdivrs
pop
outsl
lea
or
leave
leave
or
fstps
jno
jnp
roll
in
pop
nop
sub
orb
stc
leave
cmp
sbb
cld
jecxz
fs
pop
iret
sti
fdivl
rcl
data16
in
arpl
movsl
or
xor
fistpll
push
in
mov
cmp
das
mov
out
aad
xchg
mov
push
sub
pmaxsw
lcall
cwtl
cs
aaa
adc
jnp
push
test
jmp
jmp
loope
clc
add
lock
aaa
add
std
push
mov
cmc
jg
fwait
sti
fiaddl
pushf
test
inc
pushf
rcrl
xchg
mov
pop
sbb
mov
xchg
movb
xchg
xor
mov
mov
sarb
inc
dec
stos
shlb
aaa
in
imul
sahf
xchg
test
inc
jne
inc
aad
inc
and
stos
hlt
fisttpl
clc
arpl
xor
ds
fs
mov
jo
movsb
stos
mov
in
pop
adc
inc
pop
nop
cwtl
cmp
popa
ret
dec
std
lods
pcmpeqd
jnp
sub
pop
sub
fildll
cmpsl
std
or
enter
or
mov
pusha
out
sbb
arpl
mov
mov
aam
xchg
add
arpl
mov
jle
sub
fucomp
in
and
cmp
stc
es
dec
in
inc
lret
insl
outsl
cmc
pushf
mov
je
and
test
mov
mov
mov
fstpl
pushf
push
mov
adc
push
xchg
outsb
mov
inc
inc
fbld
mov
imul
dec
sahf
push
out
or
cmpsl
adc
sub
shll
stos
ss
in
fildll
fmulp
sub
mov
jl
pop
movsl
loope
aas
dec
sub
and
movsl
into
xor
pop
std
sbb
mov
ss
mov
negb
stos
mov
or
xchg
jns
pop
sbb
mov
xchg
int3
inc
addl
dec
mov
fbld
ret
mov
jns
test
inc
into
inc
jl
mov
imul
pop
int
jl
fcomp
ljmp
adc
jne
and
jno
inc
push
xchg
cmp
icebp
int3
jle
repz
stc
xchg
movsb
adc
ja
xchg
repnz
outsb
push
js
mov
or
adc
cmp
or
cmp
in
add
movsb
ja
sbb
jp
jnp
cmp
jno
scas
cmp
cmp
and
push
cmpsl
enter
sub
mov
push
mov
pop
pop
lds
jbe
ss
push
out
cmp
push
aam
pop
test
xor
out
add
out
mov
adc
xchg
test
jmp
imul
jmp
repnz
movsb
xor
insb
sahf
or
pop
cmp
lahf
fidivrs
ja
pop
fisubrl
std
mov
nop
test
out
out
sbb
call
pop
inc
add
lock
int
dec
stos
xor
xchg
sub
mov
dec
sti
sub
dec
mov
cmp
call
adc
repz
cs
das
aam
lcall
leave
push
adc
cwtl
dec
xor
scas
stos
push
xchg
mov
mov
mov
inc
mov
jge
mov
lret
mov
xchg
std
push
pop
test
imul
pop
push
sub
xchg
leave
or
fildl
sarl
test
xor
and
shll
push
sbb
mov
jo
int
aam
pop
leave
icebp
pushf
mov
shrl
clc
das
rcrb
std
imul
mov
aas
jns
loopne
xchg
jb
aas
ss
sub
fwait
mov
pop
dec
fstl
push
daa
pop
xchg
mov
daa
imul
xchg
jmp
popf
jge
cmp
loope
xlat
popa
mov
insl
pushf
mov
xchg
jbe
negb
xchg
test
pop
stos
popa
lcall
std
push
inc
ljmp
in
imul
cmpsb
mov
pop
or
test
fdivr
cmpsb
pop
mov
pusha
jg
sub
cmpsb
repnz
subl
jmp
mov
push
movsb
jp
push
jne
add
cmp
orl
out
and
mov
mov
inc
decb
lods
idivb
cmpb
in
pop
jle
cwtl
sbb
in
jp
cltd
xor
mov
inc
jbe
fwait
or
pop
ja
jl
ret
das
lods
nop
rorb
pop
fwait
mov
je
and
jae
ret
cmpsl
cmc
cmp
cmp
js
push
push
clc
inc
ja
xor
mov
mov
inc
xorb
jl
mov
cmp
sbb
xchg
cmp
cs
xor
mov
lods
add
mov
dec
xor
aam
out
loopne
mov
loope
aad
jp
imul
rcr
xor
pushf
mov
out
insl
bound
cmpsl
mov
in
sub
push
aad
sbb
js
xor
dec
sbb
pop
sahf
stc
les
xor
cmp
stc
jbe
pop
xor
cmp
mov
scas
jmp
pop
pop
inc
daa
lods
mov
div
add
in
pop
loope
pop
clc
add
imul
adc
in
ja
ror
mov
pusha
in
or
cmc
dec
pop
mov
pop
cmpsb
or
iret
loope
add
idivb
jp
mov
push
push
sbb
lods
mov
fcomp
pop
mov
int3
xor
pop
out
fsubl
gs
pop
das
int3
call
dec
outsl
ja
mov
mov
jnp
mov
fs
stc
js
repz
sub
adc
jno
sti
sub
dec
jns
push
cmp
hlt
ret
ljmp
hlt
sahf
ret
jno
cwtl
pop
push
jle
repz
pop
sub
loop
push
in
gs
es
and
cmp
mov
sub
sbb
or
decb
mov
mov
mov
mov
mov
fidivrs
jmp
mov
cmp
push
imul
pop
pushf
out
sahf
test
test
cmp
loop
inc
movsl
sahf
inc
test
gs
dec
pusha
cmp
push
mov
ret
idiv
xlat
dec
jmp
mov
push
jne
cmp
daa
clc
sub
or
shll
aam
mov
jmp
rcl
dec
push
mov
aaa
dec
clc
and
jp
xor
xor
iret
mov
pop
fisttps
js
insl
aas
int
mov
lcall
in
sbb
repz
ret
lret
mov
dec
cli
pop
xchg
xchg
loopne
push
leave
jmp
mov
lret
pop
ror
cmp
ret
xor
call
mov
and
push
jecxz
push
and
movsb
dec
inc
cmp
push
movsl
jp
pop
in
loope
xor
pop
insl
lret
mov
dec
push
sti
sahf
adc
push
fstps
rorb
jmp
cmp
je
movsl
sub
mov
jbe,pt
sti
ljmp
call
sbb
repnz
pop
sub
cmp
push
in
jno
jge
sbb
idiv
dec
sbb
push
testb
mov
xchg
cli
jnp
fwait
sbb
mov
pop
fimull
jnp
ja
jle
fsincos
fisttps
push
sbb
fsubs
stos
and
leave
adc
outsb
jb
leave
scas
in
subl
push
repz
xor
lods
out
mov
in
pop
xor
sahf
daa
pop
scas
mov
fucomi
xor
fstpl
jle
xor
push
cld
xor
push
push
sub
or
scas
xor
cmp
push
test
jnp
mov
xchg
cmp
xlat
shll
adc
adc
push
push
xor
mov
fucomp
mov
mov
pop
mov
shl
mov
lret
or
jge
lods
bound
fcomip
repnz
inc
mov
aad
sbb
xor
push
xchg
or
shlb
sbb
sbb
push
or
aaa
jo
fidivrs
pop
or
pop
jnp
leave
movsb
add
dec
rcl
stos
scas
pop
imul
mov
xchg
leave
incl
mov
inc
dec
push
daa
arpl
das
cmp
inc
cmp
dec
mov
outsl
mov
and
sub
dec
loopne
outsb
jbe
push
mov
inc
jge
daa
mov
jnp
in
xor
fistl
mov
movsl
sarl
outsl
fsubrl
pop
mov
inc
jnp
dec
xchg
lds
add
and
xor
and
push
push
push
mov
fstp
dec
or
mov
dec
loopne
decb
push
insl
enter
adc
push
pop
mov
jmp
jbe
enter
jg
sahf
and
fldenv
xchg
test
dec
std
arpl
mov
ret
fstl
fs
js
xchg
aaa
fisubrs
sub
mov
clc
dec
or
pop
pushf
sbb
cmp
outsl
pop
dec
mov
push
jg
push
or
inc
sbbl
leave
xchg
lods
sbb
mov
push
pop
in
scas
jecxz
rcl
jl
imulb
lahf
gs
xchg
lds
arpl
and
adc
hlt
mov
int3
jle
ss
fdivp
sarl
xor
and
fwait
push
aaa
ss
fsincos
push
or
cmpsl
mov
sbb
ja
dec
jno
addb
out
shrl
fst
cmp
mov
sbb
pusha
subb
ret
subl
aad
mov
fdiv
imul
sub
pop
int
sahf
subb
out
mov
cmpsb
mov
out
pop
pop
lret
addr16
jo
mov
icebp
daa
lock
imul
ret
fsts
aas
in
adc
std
cmp
ds
mov
adc
int
push
sti
aaa
cmpsb
aas
iret
xchg
mov
mov
test
mull
shl
mov
stc
pop
lea
clc
ret
sbb
dec
jmp
sarl
xchg
stos
movsb
dec
mov
mov
aam
mov
out
push
and
test
movsl
jnp
js
xlat
int3
fsubs
ds
fisttps
in
aam
std
pop
out
pop
sub
out
pop
push
adc
xorl
cmp
cmc
lahf
dec
add
push
je
addr16
hlt
out
ja
fdivrs
mov
rcrb
cmp
xchg
rorl
push
mov
cli
xlat
and
xorb
cli
or
repz
ret
imul
push
in
das
mov
or
push
std
and
ds
pusha
sahf
dec
adc
fcmovne
lds
mov
fnstenv
in
or
lods
subl
xlat
add
mov
stc
xor
and
fwait
loopne
adc
insl
fsubp
xor
jg
stc
mov
addr16
pop
inc
xchg
mov
pop
xchg
xchg
fstpt
fs
sti
lret
enter
loope
xor
fdiv
jg
popa
pop
lcall
mov
cmc
pop
cmp
popf
fstl
mov
es
pop
sub
lea
push
or
fildl
int
jp
fcompl
adcl
lahf
adc
loopne
sti
or
sbb
movsl
sbb
and
cwtl
add
cmp
mov
cmp
ror
dec
shrl
nop
ret
mov
out
mov
stos
fisubrl
jle
mov
imul
xchg
cs
popa
in
jno
xchg
sahf
scas
stos
jns
lea
push
xchg
mov
sbb
test
mov
adc
fwait
pop
mov
bound
and
fwait
testb
inc
cmpb
cli
gs
cmp
in
xor
pop
inc
cmpb
fwait
outsl
jns
repnz
lret
je
push
outsb
mov
subb
sbb
jno
and
ret
hlt
aas
xchg
dec
fs
push
pop
inc
push
sbb
outsl
sbb
outsl
mov
lret
repnz
jle
outsl
jns
aam
xlat
fisttps
mov
je
cmp
repz
into
adc
out
icebp
sub
mov
mov
test
mov
sbb
mov
test
fs
fists
shl
and
mov
xlat
call
push
aas
fwait
mov
ret
movsb
mov
pop
sub
jbe
out
les
lcall
add
mov
jp
sub
xor
int
sub
punpckhwd
or
push
icebp
ficompl
inc
je,pn
dec
inc
xchg
orl
pop
cld
xchg
jno
add
call
ljmp
sub
lea
jp
int3
mov
mov
ss
stos
aaa
inc
lock
push
shlb
daa
sbb
push
push
mov
mov
dec
add
push
movsl
pushf
cli
jns
cmpb
jmp
and
lds
data16
ljmp
mov
dec
aam
push
adc
imul
dec
aam
jp
cmpsl
cmp
repnz
loope
shl
in
xchg
dec
sub
ret
pop
lahf
xchg
movsb
cmpsl
jl
ja
adc
inc
mov
fldln2
mov
testb
pop
ja
push
repz
mov
and
frstor
mov
div
jnp
scas
mov
lahf
mov
push
mov
movsl
cmp
add
fistpll
push
pop
mov
xchg
popf
enter
icebp
imul
sbb
inc
xchg
scas
jo
test
or
out
cmp
nop
pop
and
popf
fiaddl
pop
push
fidivs
lcall
pusha
or
jne
push
neg
cmp
lcall
push
hlt
xchg
cmp
mov
xor
xor
out
and
hlt
testb
ficoml
or
out
push
dec
out
sub
shl
call
je
add
stos
jns
lods
mov
push
cmp
lret
dec
push
push
ja
in
stos
dec
mov
push
lret
mov
push
push
push
jo
jl
shrb
and
negb
out
mov
or
sbb
pop
jle
mov
or
mull
mov
inc
mov
fcmovb
scas
popf
out
incb
rcl
cmp
mov
xchg
push
fwait
lods
jnp
lock
test
aaa
jne
and
xor
xchg
mov
sbb
lods
xchg
inc
cld
cmp
fndisi(8087
negl
loope
popf
jl
je
fcompl
and
insl
mov
mov
nop
mov
dec
nop
pop
add
rcrl
mov
dec
jbe,pt
xlat
aaa
add
mov
movsb
scas
push
hlt
addb
call
xchg
inc
mov
adc
fsts
push
cmp
aaa
jb
fcomp
pop
mov
xorl
ss
inc
mov
daa
mov
dec
fiaddl
fiaddl
lret
sbb
inc
in
std
fsubs
js
fstl
mov
je
jge
pop
lahf
cmp
ret
sub
lcall
int3
dec
lret
shlb
push
repz
sbbb
xor
mov
int
jmp
mov
adc
adc
negl
xlat
push
mov
loop
int
das
add
xchg
sbb
adc
les
push
movzwl
jge
and
fildl
div
inc
jle
sbb
outsl
jno
xchg
movsb
cmp
jl
pop
test
cltd
loop
call
add
mov
push
mov
mulb
cmp
shlb
mov
jo
fcoml
xchg
xchg
das
pop
repz
xor
in
push
mov
repz
clc
pushf
arpl
jno
mov
dec
adc
test
lahf
outsl
xor
cltd
clc
pop
pop
mov
inc
shlb
pop
push
adc
jge
pop
idiv
cli
or
call
mov
loop
jns
cmp
xor
sbb
mov
mov
imull
out
adc
xchg
mov
jge
js
es
icebp
sbb
cld
xchg
xchg
loop
imul
std
lods
stc
stos
xchg
sbbl
fldl2t
xchg
shl
or
fists
outsl
cmp
push
hlt
outsb
std
mov
dec
jecxz
mov
cmp
jno
in
loope
or
out
push
daa
filds
fldl
lds
cmc
fldenv
icebp
stc
adc
int
mov
add
pop
into
mov
mov
arpl
or
jmp
push
arpl
sbb
out
dec
pop
fildll
adc
inc
out
aas
fwait
shll
pop
sub
add
xor
cmc
pop
mov
add
lock
cmp
jg
xchg
and
or
pop
cmp
and
xor
lock
std
cmpsb
scas
xchg
inc
cmp
ficoml
cmc
or
ret
add
loop
js
inc
cld
cmp
ret
pop
mov
sub
insb
sti
loopne
mov
pop
xor
insl
stos
insl
mov
adc
dec
cmp
xor
das
jmp
ja
js
sbb
insl
mov
pop
in
mov
loop
jne
pop
adc
out
inc
mov
mov
test
jl
sub
outsb
xchg
jl
add
das
aaa
cmp
and
std
aam
in
xchg
mov
jp
fwait
loop
mov
jg
or
into
loope
ja
xor
mov
stos
cli
test
icebp
movsb
je
push
mov
lret
push
in
fst
inc
sub
pop
imul
addb
dec
xor
pop
scas
adc
dec
cwtl
mov
outsl
or
into
test
sub
lret
pop
lods
mov
adc
insb
lds
bound
scas
fcomi
stc
mov
stc
jge
add
sub
add
mulb
arpl
rorb
mov
cmc
call
jbe
xchg
into
pop
add
aaa
test
clc
inc
mov
js
xchg
pop
out
andb
push
out
int3
xchg
and
imull
insb
xchg
mov
mov
sub
or
in
arpl
push
jecxz
xor
xlat
cmp
daa
or
pop
mov
xchg
movsb
in
xchg
cmp
and
sbb
cli
fdivrl
lock
mov
scas
sub
leave
fidivrs
push
icebp
divl
mov
decl
pop
pop
pop
scas
xlat
sbb
lret
cmp
test
xor
or
mov
test
cli
mov
add
pop
and
jmp
aas
mov
imul
outsl
xchg
push
stos
push
incl
dec
popl
in
je
fwait
push
mov
stos
cs
shrl
jle
test
dec
push
xchg
adcb
stos
sub
cmc
fldt
notl
lock
jmp
lock
or
lahf
in
fscale
and
stos
hlt
pop
stc
ds
lret
or
pop
dec
adc
cwtl
mov
cmp
out
push
mov
rolb
mov
add
jae
arpl
in
test
daa
mov
and
cli
notl
enter
mov
movd
or
jne
es
mov
js
insl
int3
ss
adc
out
cmp
adc
push
jl
lea
dec
sub
out
daa
inc
mov
xchg
mov
leave
and
sbb
ret
js
jg
cld
push
es
fwait
test
or
sahf
and
imul
adc
shll
jp
cmp
test
in
and
or
xor
js
aam
sti
dec
lock
mov
enter
in
xchg
dec
out
and
in
jge
aaa
repz
andl
jmp
cmp
data16
jg
mov
jecxz
cmp
fwait
mov
insb
mov
sbb
jmp
test
shlb
pop
push
aas
rorl
xchg
into
pop
mov
and
dec
nop
jp
lea
aam
pandn
push
je
dec
xlat
jmp
out
loopne
clc
bnd
lods
mov
ds
cmp
cwtl
ds
xchg
sbb
inc
pushf
dec
push
pop
enter
and
test
mov
xor
insb
and
lret
dec
dec
jne
push
ds
xchg
fidivrs
fisubs
push
push
xor
sbb
adc
and
movsl
bound
lods
jge
jbe
lret
sarb
fcomip
sbb
cmp
pop
fucomp
test
fwait
pop
in
inc
sbb
stos
ror
xchg
popa
pop
repz
stc
push
dec
pop
jns
notl
cmp
jne
pushf
xor
inc
sarl
es
mov
scas
shrb
add
fwait
dec
data16
mov
jo
mov
sbb
cli
test
in
jmp
inc
aaa
cmp
repnz
das
xchg
test
cltd
jb
mov
dec
call
push
mov
mov
into
cmp
stos
test
and
pop
subb
cmpsb
mov
pop
hlt
aaa
xor
ffree
mov
sub
cmp
scas
pop
sub
das
shrl
jmp
fwait
mov
bsf
pop
ficoms
xchg
or
jns,pt
jo
fdivp
jmp
cli
adc
loopne,pt
add
clc
ror
call
push
out
in
add
adc
dec
xchg
loope
sbb
xorl
ss
jae
fstl
popf
adc
fbld
and
jns
ds
mov
mov
rol
lret
les
push
into
lahf
mov
hlt
pop
fistl
dec
inc
aad
or
dec
cmp
sub
fdivl
add
int
repnz
cmp
cli
idivl
or
iret
adc
mov
xlat
cmpsl
ja
cld
stc
xor
jl
dec
ds
inc
pop
xchg
bound
sbb
push
push
pop
std
or
mov
loope
ja
xlat
dec
out
xchg
repz
lock
sub
dec
in
scas
imul
aad
cwtl
jnp
hlt
xchg
lock
sub
testl
pop
pop
out
adc
cmp
bound
sbb
mov
sub
pop
cmp
icebp
je
xchg
sbb
aas
addl
mov
mov
lock
fiadds
adc
lret
push
sahf
inc
mov
xchg
mov
cli
add
and
xor
test
mov
cmp
jge
inc
fwait
enter
fiadds
shl
push
inc
out
inc
les
push
es
jb
aad
dec
mov
jl
int
jge
dec
xor
add
pusha
jo
sub
and
fs
daa
arpl
xorl
test
andb
xor
es
aaa
pop
dec
call
inc
or
inc
cmp
sarl
mov
pop
idivl
popf
out
neg
jae
sti
repnz
iret
jns
std
std
fdivp
push
lret
lahf
dec
ds
xchg
mov
movsl
std
leave
sub
xchg
setae
and
outsl
lods
lahf
xchg
out
xchg
bound
lds
or
mov
add
jmp
add
in
adc
fildll
sub
out
insb
cmp
cld
fs
jle
inc
cmpsb
in
jae
jo
lcall
fmull
repz
aad
dec
xlat
iret
and
mov
outsb
insb
popa
cmp
aam
into
insb
pop
xchg
sbb
and
addr16
cmpb
cli
cmpsb
inc
push
in
enter
push
test
fldl
mov
mov
test
push
std
fimull
mov
mov
std
inc
movsb
in
mov
mov
cmp
and
mov
add
cmp
mov
int
push
data16
xchg
ja
or
stos
test
sbb
inc
mov
loopne
xchg
scas
lcall
pop
mov
hlt
fwait
mov
jnp
mov
and
cmpsb
dec
push
loop
push
mov
lea
push
xor
jno
xchg
aas
aaa
andl
stc
in
jl
loope
in
cmp
mov
jle
pop
ror
aad
shll
rorl
sub
subl
add
movsb
jl
dec
cmp
outsb
jecxz
lret
scas
repnz
call
pop
popa
add
scas
out
leave
or
cltd
imul
mov
int3
xor
adc
ds
or
leave
xor
mov
adc
pop
inc
out
lahf
repz
stos
inc
dec
xor
mov
lcall
imul
xor
or
jge
clc
mov
pop
notb
jle
fs
dec
les
dec
aas
loope
push
je
icebp
add
jl
in
push
nop
xlat
mov
stos
cmp
dec
shll
outsl
ja
mov
cmp
lret
lahf
lret
popf
test
sarb
inc
jo
leave
rclb
cmp
push
inc
xchg
sub
inc
lock
mov
xor
push
mov
pushf
sbb
xchg
enter
push
idivl
mov
imul
xor
cwtl
jb
mov
adc
or
mov
loopne
mov
sbb
inc
or
push
scas
adc
jge
fidivrl
pop
adc
out
call
push
lret
sbb
xchg
cmc
adc
cli
or
jl
cmp
leave
dec
mov
sub
add
mov
inc
cli
scas
mov
inc
mov
sub
call
push
lods
hlt
sub
cmp
aas
dec
jnp
push
aas
test
notl
mov
bound
movsb
sti
jae
in
fstpt
ss
ret
in
lret
mov
sbb
cmp
std
ljmp
xor
cmp
cmp
pop
xor
aaa
mov
or
imul
push
wbinvd
stos
or
cmp
mov
icebp
cmp
in
lcall
stos
mov
idivl
pusha
mov
mov
ss
cltd
push
jp
outsl
fldt
sbb
jb
inc
arpl
cmp
jnp
sti
push
ljmp
fcompl
incb
pop
pop
jp
movsb
xchg
fnstsw
cmpsb
int3
fisubrs
sti
aad
pmulhuw
or
jg
dec
fsubs
jae
jno,pt
and
sub
ret
sbb
xor
arpl
cmp
mov
popa
aas
shrl
std
pop
int3
out
mov
jo
cmp
jne
xbegin
jne
xchg
sub
adc
repz
jl
pop
sub
popa
inc
fdivrl
test
mov
push
nop
ljmp
lea
std
pop
or
shrl
call
mov
sti
mov
sbb
fisttpl
inc
jnp
aad
loopne
popf
cs
cmpsl
insl
es
pushf
loop
adc
push
mov
cmpsb
jl
incl
mov
daa
andb
repz
pop
fwait
jle
addr16
sub
push
dec
pusha
rcl
addr16
pop
lcall
addb
dec
stos
call
scas
xchg
pop
jno
sbb
mov
arpl
and
jbe
lcall
repnz
insl
into
in
jle
sbb
adc
xchg
xor
pop
xchg
pop
xor
popf
add
test
inc
mulb
or
inc
pop
push
mov
fadds
inc
sarl
or
mov
scas
sbb
stc
icebp
inc
jl
clc
mov
jnp
addr16
mov
fwait
jo
loope
adc
ret
adc
inc
scas
rcrl
nop
fdivrl
mov
out
cmp
push
dec
in
or
ror
inc
cmp
loopne
ja
dec
push
dec
mov
jl
inc
dec
jnp
ljmp
testb
pushf
lret
push
and
and
sbb
bound
inc
mov
xor
testb
cs
gs
jo
iret
cmpsl
mov
gs
out
das
bound
sub
add
sbb
repnz
and
hlt
pusha
cmpsl
and
xchg
hlt
and
mov
pop
mov
dec
divb
pop
jle
cmp
jne
xchg
ds
data16
and
xchg
cli
mov
push
xchg
negb
into
xchg
cmp
push
jb
aas
or
mov
mov
and
mov
pop
dec
sub
movsb
xor
and
repnz
clc
add
nop
pop
sub
ds
xchg
xchg
jg
cmp
pop
cltd
xor
push
mov
pop
ja
sarb
dec
stc
lcall
lods
jmp
mov
pop
mov
xchg
xor
and
cmpsl
movsb
popf
inc
arpl
or
fidivs
mov
fisubrs
mov
xchg
cltd
scas
loope
inc
xchg
je
call
push
jbe
xor
and
mov
pusha
call
enter
insb
sar
out
std
lcall
mov
popf
test
push
pushf
test
stos
dec
push
outsb
leave
mov
push
adc
decl
fwait
outsb
xchg
insl
pop
lret
out
mov
mov
clc
mov
bound
jle
mov
stc
mov
fwait
xchg
les
lea
lret
ja
pop
pop
call
sbb
std
jl
jge
sbb
lea
pminub
enter
cmp
in
aad
test
test
enter
testb
in
pop
imul
les
jg
sub
inc
cmpsl
pop
roll
addl
dec
stos
cli
ret
into
xor
mov
dec
movsl
sub
dec
divb
mov
jl
ja
das
inc
push
jb
leave
cld
in
ds
iret
inc
fidivl
jmp
int3
jne
out
jb
cli
in
outsb
pop
xchg
dec
std
lea
pop
push
inc
sar
arpl
and
xchg
sub
dec
out
adc
adc
ljmp
inc
and
subl
add
inc
pushf
add
iret
out
or
fwait
dec
jp
jo
fmuls
lods
mov
adc
lcall
cltd
fwait
repnz
inc
mov
mov
cmp
aaa
sbb
mov
mov
jo
add
pop
pushf
mov
fidivrl
jne
into
and
push
lock
je
ds
inc
incl
xchg
iret
mov
ss
popa
in
push
inc
loope
mov
movntq
out
xchg
mov
lock
inc
out
fwait
push
jle
push
push
xchg
jle
lock
aas
add
pop
push
dec
sub
fisubrs
repz
scas
adc
mov
dec
in
pop
jns
push
xchg
repz
repz
inc
adc
aam
scas
sbb
lret
ja
pop
jge
cmp
add
sub
mov
pop
out
int
cmp
repz
fwait
add
dec
push
lahf
mov
dec
ss
pop
fmull
adc
push
ret
es
fldenv
fistl
lock
ret
loopne
ds
pop
out
jno
mov
aam
fldt
sarl
sbb
popf
push
outsl
pop
pushl
inc
sbb
fdivl
cmp
repz
jns
icebp
pop
cli
cli
add
cmp
jl
mov
repnz
loopne
cmp
sti
xor
clc
jl
jb
mov
ss
push
pushf
notl
inc
push
jg
gs
fldl
push
scas
mov
sarb
cmc
push
adc
clc
cmp
addr16
andl
xchg
sub
cld
dec
inc
or
jmp
mov
addr16
fisubl
push
inc
add
push
push
mov
fst
into
push
pop
adc
das
lcall
sbb
cmp
cwtl
add
xchg
jne
insb
testb
ds
push
icebp
imul
jecxz
inc
mov
test
xchg
icebp
mov
and
arpl
jb
pop
mov
lock
push
je
jle
cmp
mov
je
std
pop
and
in
mov
adc
in
sub
hlt
enter
and
push
imul
push
push
sub
outsl
enter
stc
xchg
fbstp
cli
push
jb
std
add
bnd
jbe
sub
mov
mov
out
mov
scas
rcrl
mov
jp
enter
jl
sub
and
or
jg
sahf
sbb
jp
test
add
dec
jns
cli
fwait
adc
or
sbbl
xchg
sarb
rcll
or
fiadds
or
popa
dec
push
lods
fisttpll
cmc
mov
and
daa
push
lods
push
out
mov
out
add
ret
xchg
fs
xlat
sbb
call
push
out
and
push
ret
xchg
fldl2e
xlat
es
pop
xor
push
jbe
and
pop
gs
rcrl
out
and
sbb
loop
adc
in
xchg
repz
enter
addr16
adc
ja
repnz
sub
pushf
add
pop
aam
pop
mov
dec
stos
jmp
sbb
movsb
jle
mov
push
pop
jnp
imul
add
adc
std
testl
sbb
xchg
mov
xor
aad
xchg
in
ja
aaa
sub
loopne
outsl
fisubs
lahf
int
cmpsl
push
scas
iret
add
repz
cmpsl
jo
ds
cli
out
xchg
xchg
popa
shl
and
sub
fnstsw
mov
stc
aad
sbb
outsb
test
data16
push
dec
jae
push
into
ret
xor
xor
mov
inc
pop
jmp
cmc
push
sahf
mov
ret
std
roll
xchg
pop
nop
fdivs
mov
popf
jg
fcompl
scas
fwait
jae
icebp
xchg
jg
stc
loopne
aaa
push
mov
mov
mov
cmp
xchg
inc
jne
push
jle
fcoms
ja
mov
sbb
clc
ret
in
jbe
jmp
test
sahf
sarb
inc
push
pusha
mov
fsubs
int3
jb
mov
mov
arpl
arpl
pushl
mov
pop
mov
xchg
sbb
imul
addr16
or
std
repnz
xchg
pushf
xchg
or
and
sbb
xchg
sub
and
mov
mov
jno
xchg
iret
inc
stos
stc
outsb
mov
or
add
push
and
push
mov
shll
cmp
cs
jne
dec
es
mov
scas
fimull
add
xchg
stos
xor
jl
les
add
mov
push
fsubrl
xor
movsl
pop
ljmp
mov
mov
and
xor
xchg
outsb
ret
aaa
repnz
pop
adc
fiaddl
mov
lods
popf
and
mov
and
mov
push
frstor
mov
dec
pop
mov
xchg
in
jns,pn
jae
xchg
pop
sti
xchg
pop
stc
push
adc
arpl
lods
xchg
mov
test
jmp
jmp
mov
cwtl
jns
pop
je
mov
pop
pop
js
pop
ja
mov
pop
pop
jb
mov
rorb
dec
xchg
xor
int
shrl
xchg
incb
sub
cltd
push
scas
test
jp
sbb
aad
ficoms
mov
lret
fstps
test
pop
jnp
push
adc
int
mov
in
inc
imul
sbb
outsl
mov
fnsave
mov
mov
xchg
pop
imul
es
mov
adc
xchg
aas
insl
and
out
xchg
jae
and
mov
imul
inc
or
shlb
jns
std
repnz
xchg
sar
cmp
pop
lret
outsb
dec
sbb
mov
dec
ja
jns
popa
fsubs
push
fdivl
js
mov
cmpl
mov
nop
popa
pop
cmp
scas
int
sub
ds
outsl
push
xchg
or
cmp
std
xor
out
addr16
pop
call
insb
mov
stc
test
loop
xlat
int
sbbb
insl
jnp
lahf
stos
lret
mov
xchg
or
push
das
cwtl
cmp
pusha
jecxz
xchg
inc
jns
mov
repnz
jns
popa
lcall
sbb
ret
lds
or
xor
mov
lret
out
sub
adc
adc
adc
iret
push
sub
lret
cmc
ss
negb
inc
ja
bound
sbb
aam
sti
mov
cs
popa
gs
rorb
cmp
loop
test
cmp
xlat
mov
rorb
push
push
arpl
aaa
jb
mov
xchg
add
jb
xchg
lea
int
xor
cs
test
out
rcrb
jne
jbe
fucomi
loope
add
jl
dec
xor
cmp
mov
out
jmp
or
cltd
mov
cld
clc
mov
pop
rcrb
outsb
ret
adc
imul
jp
pop
call
minps
mov
out
test
dec
fwait
cs
mov
adc
jbe
mov
or
cli
jmp
addr16
xchg
sbb
lcall
mov
mov
dec
test
cld
idivb
addr16
es
in
sti
cmpsb
xor
sbb
pop
mov
xchg
sub
iret
scas
xchg
jl
sahf
fmul
into
jp
and
cmp
cmp
stos
jnp
xor
shll
mov
mov
xchg
xchg
arpl
test
jne
popf
pop
or
dec
pop
das
dec
xor
cmpsb
add
sarb
jbe
test
inc
lea
outsb
push
push
adc
cmp
cltd
data16
adc
test
or
xchg
mov
lds
jg
out
dec
cmpsl
fldenv
and
jno
dec
mov
hlt
jecxz
mov
xor
add
dec
adc
fildll
aas
push
dec
test
daa
int3
rcr
mov
adcb
ret
jp
jmp
cld
pop
and
xchg
cli
ljmp
clc
jmp
mov
push
pushf
lods
out
cmp
inc
leave
jae
testl
fwait
das
cmp
arpl
clc
shll
sub
fcmovne
test
icebp
stos
popf
add
aaa
test
cmp
sti
sbb
push
mov
or
adc
or
icebp
and
dec
enter
sbb
jo
mov
push
push
push
ljmp
repz
sbb
xor
pop
mov
dec
jmp
xchg
les
sbb
cli
sub
mov
mov
sub
push
test
cmp
push
pop
mov
pop
test
mov
push
mov
adc
out
xor
into
adc
idiv
mov
xchg
push
push
aaa
push
fdivl
jl
xor
jle
lods
int3
enter
addr16
std
xchg
in
mov
test
in
mov
inc
cmp
test
pop
fst
pop
gs
rcrb
nop
mul
bound
lret
lea
out
push
out
jecxz
cmpsb
push
bound
ja
pop
adc
push
mov
mov
fcoms
cs
movl
in
leave
jle
jbe
outsb
out
sbb
test
xchg
bound
in
and
xor
lahf
sub
cmp
mov
cmp
out
test
inc
push
shr
je
rclb
sbb
outsl
adc
add
mov
mov
xchg
inc
dec
mov
in
push
mov
dec
ljmp
pop
push
xlat
inc
ljmp
push
mov
dec
popa
out
inc
imul
mov
and
pushf
and
flds
pop
xchg
jae
or
lds
sub
mov
in
dec
es
xor
xor
ret
fidivrl
int3
mov
dec
mov
pop
cmp
int3
mov
adc
mov
push
and
and
dec
ss
dec
movsb
sbb
stc
or
push
sub
mov
rclb
mov
jmp
or
xchg
or
mov
mov
push
xor
adc
lea
and
push
out
push
jecxz
cmp
inc
fisttps
mov
xor
push
jp
inc
lods
shlb
movsl
mov
push
imul
mov
insb
adc
push
test
ss
jns
mov
xlat
mov
mov
sbb
mov
out
test
ss
adcb
inc
icebp
into
test
adc
inc
push
ds
dec
cli
rcr
dec
mov
fsubr
movsl
mov
ds
enter
cmp
sarb
adc
out
shlb
incb
adc
cmp
mov
jecxz
aas
out
leave
arpl
mov
stc
inc
loopne,pt
jno
sbb
clc
testb
out
cmp
mov
pushf
push
lcall
jecxz
and
sub
movsb
cmp
pop
cmp
xor
call
push
dec
mov
das
jecxz
add
or
add
sbb
adc
or
frstor
xchg
in
mulb
roll
notb
loop
test
lock
adc
xchg
lock
std
jg
outsb
push
inc
test
and
cmp
mov
std
paddsw
pop
cmpsl
xor
push
movsb
nop
dec
mov
mov
jp
xchg
imul
lcall
xor
mov
outsl
clc
lock
mov
sub
fiadds
int
jge
test
xor
cmpb
pop
popf
movsl
dec
xor
test
push
or
pop
addr16
dec
push
lods
and
cwtl
out
subb
shl
dec
je
push
mov
xchg
push
mov
jmp
divl
jbe
sbb
jmp
and
push
incl
xchg
cwtl
or
fadd
je
cmpsl
sbbl
in
sub
xor
xchg
loopne
jge
xlat
loopne
pop
add
jmp
imul
out
imul
ja
lcall
jge
in
cmc
mov
lret
fdivl
ljmp
int
xchg
add
ret
mov
scas
popa
nop
mov
cmp
loop
addr16
mov
call
sbb
fs
pop
les
call
scas
push
sti
jmp
pop
and
pop
hlt
pop
int
int3
pop
ss
incb
or
cmp
or
call
xor
lret
sti
les
stc
popf
xchg
cmpsb
int
ss
lods
leave
subb
cltd
xchg
lcall
jg
aas
mov
pop
mov
xor
cld
cmc
bound
enter
or
mov
cmpl
fstps
sbb
ror
jmp
xchg
jmp
xchg
jne
xchg
hlt
push
or
xor
test
or
sbb
push
push
js
iret
out
xchg
pop
int3
fistpll
add
test
jae
ja
psrlq
and
lock
arpl
pop
sbb
push
iret
les
stc
dec
xlat
or
jmp
jge
push
cltd
xor
sbb
mov
pop
in
cmp
cmpl
mov
fdivrl
stc
inc
int3
inc
out
pop
add
mov
ljmp
imul
pop
or
out
ret
jmp
adc
inc
lods
pop
cmp
inc
sbb
mul
lcall
jp
mov
mov
fwait
js
pop
movsl
aad
leave
cmp
fdivl
imul
or
mov
cmp
fstl
ja
add
cld
icebp
mov
cs
repz
into
add
stos
sbb
pop
jl
pop
mov
xchg
mov
out
or
mov
push
xorb
push
shll
gs
cmp
pusha
push
aam
dec
mov
stos
test
bnd
sub
pop
mov
imul
pop
xchg
lods
fsubrl
jle
push
nop
test
sbb
jns
cmp
repz
fs
cs
pop
jp
orb
fistl
rcl
call
fisubrl
cmpsb
xchg
jmp
rcrb
fisubrl
mov
adc
mov
mov
xor
add
push
sub
xchg
loop
xchg
mov
sbb
inc
shl
dec
xor
xlat
xchg
outsb
adc
mov
inc
clc
push
stc
xor
jb
jge
cmp
mov
cmpsl
rolb
sarb
scas
ljmp
jnp
cmp
xchg
and
pop
jne
cmp
sub
xchg
inc
cld
cld
negl
iret
into
outsl
stc
stc
lret
cmp
repz
jle
pop
iret
int
stc
stc
mov
jmp
out
cld
ljmp
add
popf
jbe
pop
sbb
add
in
mov
sarb
scas
arpl
lock
fisubl
scas
shr
jge
lea
std
daa
loope
dec
pop
mov
dec
icebp
fldz
fxch
mov
cmp
fldenv
aam
jbe
cwtl
sbbl
pop
aaa
sub
sbb
dec
push
xchg
xor
outsb
mov
adc
das
cmc
test
sti
aaa
add
push
xchg
lcall
js
jl
hlt
shll
xchg
sbb
add
mov
fldl
mov
sbb
xchg
xor
iret
cmp
sub
enter
jmp
loopne
push
inc
insb
fdivs
lea
sarb
jge
mov
add
mov
mov
mov
inc
cwtl
push
aas
and
ja
sub
xor
sbb
xchg
mov
ljmp
sbb
dec
js
testl
cmpsl
jnp
sbb
in
sbb
sbb
mov
jmp
clc
xor
push
movb
dec
lcall
xchg
fistpll
sahf
cmp
out
xchg
push
movsb
xchg
int
cmp
jecxz
mov
lea
shrl
jl
ret
imul
loopne
scas
mov
bound
adc
sub
mov
insl
out
arpl
cmp
insl
xchg
sbbb
sbb
aaa
push
cld
cld
mov
lea
push
jbe
out
fwait
pop
jp
aaa
lret
push
jae
sub
lods
aad
xchg
xor
pusha
inc
mov
cmc
std
test
dec
push
cli
leave
test
insb
push
inc
pop
jle
scas
xor
mov
sti
mov
inc
cmpsl
mov
adc
cltd
jne
sbb
repz
stc
movsb
dec
mov
cmp
pop
mov
jae
inc
pop
mov
pop
pop
mov
cmpsb
xchg
sbb
enter
subl
mov
cld
cmc
cmp
jg
adc
pop
inc
hlt
inc
iret
les
push
out
scas
lcall
clc
out
daa
lods
add
cld
movsb
into
pop
imul
rol
dec
pop
adc
fisubs
cmp
xor
movnti
insl
xor
cmp
daa
inc
jno
pop
scas
push
jle
cmpsb
dec
out
jne
pop
pop
mov
enter
lods
ret
or
out
push
pop
mov
jg
jg
imul
jge
rcll
adc
mov
dec
or
dec
mull
jecxz,pt
std
xchg
jg
in
lods
cli
fwait
sbbb
testl
jmp
adc
bnd
test
dec
mov
stos
sbb
mov
inc
adc
insb
pop
imul
inc
sub
lock
repnz
test
mov
cli
pop
cmp
xchg
xchg
clc
xor
dec
mov
loop
je
sbb
data16
mov
push
cli
mov
lcall
mov
fcomps
cmpsb
decl
jno
nop
fistpll
xor
and
arpl
xlat
stc
inc
cltd
incl
repz
and
xchg
jecxz
pushf
jb
scas
fcompl
ss
dec
mov
loop
xor
out
inc
outsb
mov
inc
mov
adc
iret
mov
cmpsb
dec
fsubrl
xor
out
xor
mov
cmp
popf
sbb
jg
lock
xchg
loope
out
pop
shrb
stos
mov
in
lds
dec
js
out
sbb
pop
testl
add
mov
sbb
jnp
repz
lods
sub
sbb
rorl
cmp
gs
mov
ja
xor
out
push
lock
js
pop
enter
mov
lcall
js
dec
fucomip
xchg
popa
lret
cmpsb
pusha
xchg
and
xlat
mov
icebp
add
sub
jbe
jb
es
or
jne
xor
pop
dec
int
or
xchg
jmp
out
movsl
aam
and
leave
lret
mov
in
hlt
popa
in
mov
pop
in
lock
dec
or
mov
das
je
sub
movsb
lcall
sbb
push
push
lea
lock
fucomip
gs
cli
inc
popf
call
call
sub
icebp
inc
xchg
popf
adc
mov
in
repz
or
fnstenv
mov
cmp
mov
xchg
pop
push
or
jge
lock
mov
lahf
testb
dec
mov
lret
mov
and
jge
adc
aas
cli
pop
dec
loopne
aad
add
jecxz
dec
lock
fcomip
push
pop
clc
push
fmuls
cmpsb
mov
jae
lahf
test
cmp
jg
mov
ds
adc
testl
xlat
or
std
fs
cs
pop
fdiv
pop
mov
adc
lods
addr16
mov
adc
jecxz
or
sbb
movsb
icebp
sbb
fsubrp
clc
and
dec
cmc
lahf
popf
push
repz
rcrl
scas
imulb
scas
jmp
stc
xchg
adc
dec
in
xchg
jno
aas
dec
xchg
sbb
and
loop
lea
sbb
outsb
mov
xor
data16
sbb
cs
push
sbb
mov
pop
jg
sahf
jle
jl
imul
fwait
push
inc
sarl
stos
not
push
jmp
out
jmp
or
mov
sahf
mov
jae
fdivl
addr16
sbb
sahf
frstor
push
pop
fsubrs
mov
movsb
test
push
loop
ljmp
pop
incb
stc
mov
mov
and
insl
inc
mov
mov
ljmp
sub
mov
sub
cmc
inc
in
adc
xor
xchg
outsl
xor
jae
data16
test
das
xor
mov
in
mov
in
lods
int
dec
in
mov
jl
mov
sbb
ret
adc
movsb
ss
cli
cwtl
fs
cmpsl
popa
lret
ljmp
mov
pop
push
loope
sub
dec
cld
sub
outsb
mov
scas
or
iret
stos
cmp
push
xchg
cmc
jae
shr
enter
lret
push
imul
negl
inc
add
hlt
push
dec
ja
fidivrs
dec
insl
decb
outsl
sub
push
data16
push
and
jecxz
and
jge
lds
fwait
pushf
sub
push
cmp
addr16
or
loop
cmp
inc
inc
fistpll
cltd
call
dec
cmp
lret
ret
mov
xor
shrb
stc
mov
dec
and
dec
and
fimull
test
jg
outsl
sbb
xor
mov
mov
mov
jg
mov
fisubs
add
dec
cmp
mov
pop
xchg
gs
loop
and
ret
pop
jp
jo
mov
adc
mov
mov
loopne
sbb
jle
xchg
sub
inc
mov
mov
insb
sarb
jae
rol
dec
jbe
cmp
test
push
xchg
xorb
roll
inc
movsl
ja
sbbl
inc
jmp
in
in
and
icebp
popf
sub
iret
xor
out
add
in
add
fimuls
bound
push
out
cld
inc
loopne
xor
mov
repz
addr16
lahf
push
aam
clc
cmpl
jle
jb
test
lea
mov
fmull
stos
lock
xchg
mov
rorl
rcrb
pop
xchg
stc
jge
cmp
into
rorb
mov
add
xor
jo
inc
mov
mov
imul
test
bound
mov
insb
pop
lock
adc
sbb
mov
or
cltd
dec
and
data16
xchg
mov
jg
cs
scas
outsl
stos
cmp
outsb
cmp
stc
mov
out
mov
in
lcallw
jl
test
pusha
clc
jb
int
pop
pusha
add
leave
in
aaa
mov
fdivrl
lcall
jg
es
mov
dec
cmovs
mov
fcompl
movsl
sub
adc
stc
push
pop
leave
cmp
les
push
out
inc
dec
negl
cmpsl
lahf
add
jnp
testb
movlps
sti
sbb
out
lret
test
pusha
mov
pop
popfw
jbe
push
nop
xor
cwtl
dec
aaa
sar
leave
cmpsb
push
pop
jbe
pop
jno
fs
mov
mov
sarl
cld
sub
xchg
cmp
pop
xchg
mov
inc
sti
fwait
add
dec
in
enter
out
push
push
push
call
js
je
mov
xor
lahf
sbb
push
xor
sub
ret
lock
faddl
scas
loope
inc
jno
movsb
cli
xor
mov
pop
loop
mov
xor
inc
sub
mov
ret
test
in
push
pop
sbb
sbb
dec
pop
stos
iret
xchg
in
flds
lock
xchg
or
out
jne
jb
jle
push
gs
cmc
jp
cmp
mov
lock
adc
scas
ljmp
cmpb
stos
repz
leave
jns
vxorps
in
fmul
sar
pop
in
mov
xor
lea
inc
cmp
pop
lock
aas
push
inc
clc
jecxz
sbb
fnstsw
xchg
repnz
push
inc
ret
mov
pop
pop
stos
out
inc
mov
mov
popf
push
push
cld
lds
jg
mov
pop
mov
fidivrl
std
or
and
jl
out
movsb
pop
mov
pop
mov
sbb
xor
stos
lds
stc
aad
mov
dec
sub
dec
psadbw
mov
data16
in
sbb
xor
mov
push
pop
fldcw
flds
or
mov
fistpl
xchg
loopne
xor
cmp
loope
int3
and
jo
data16
and
out
push
add
in
jge
mov
mov
xchg
jle
cltd
call
pop
cmpsb
push
sub
push
outsb
pop
inc
jno
inc
imul
lahf
aaa
test
mov
scas
subb
mov
aas
sti
mov
mov
gs
push
xchg
sbb
cmp
rol
dec
and
xor
adc
adc
popa
mov
pusha
pop
int
rcll
cld
outsl
pop
mov
jbe
pop
push
sub
shrl
dec
outsl
les
mov
arpl
xor
cmc
mov
pushf
ss
outsl
hlt
fadd
addl
int
lret
jbe
cmpsb
sbb
push
decb
int
jl
or
movsb
jp
cmc
adc
insl
sbb
adc
in
dec
data16
addr16
int
inc
sti
add
jae
sub
imul
or
jne
sub
test
es
xor
cld
dec
outsb
and
lret
lahf
cmpsl
in
addr16
mov
iret
mov
cld
dec
out
sti
or
iret
in
dec
ret
dec
sbb
push
lahf
fcmovnb
inc
adc
jg
loopne
daa
lods
sahf
ret
in
sbb
in
pop
movsb
loope
push
mov
movsb
nop
stos
out
repnz
sub
fcmovnu
fistpl
fcmovne
out
test
lea
sub
aam
mov
lret
dec
mov
nop
mov
pop
xor
pop
jg
or
fidivrs
inc
ljmp
pop
adc
jp
and
lret
js,pn
sbb
in
in
mov
shrb
fsts
dec
stc
stos
sub
dec
jns
cwtl
push
jg
fnstenv
sub
les
scas
shlb
fidivrs
add
sbb
out
test
mov
lcall
lret
and
loope
sub
sbb
xor
fs
dec
loope
add
cs
lcall
stc
gs
leave
lcall
dec
lret
fsubrl
hlt
ljmp
cwtl
cwtl
fisttpll
outsl
test
or
scas
fwait
imul
jmp
movsl
pop
iret
push
enter
pushf
adc
addr16
test
setle
xor
cli
xchg
cli
cmp
cld
imul
std
repz
or
pop
lods
xchg
xorl
sub
lods
int3
mov
pop
mov
cmpsl
jp
push
push
lcall
incb
xchg
addr16
mov
aas
fcomip
testl
xor
int
mov
jg
movsb
lock
adc
repz
push
pop
cmpsb
jecxz
add
fwait
repnz
rclb
jg
shrb
mov
cs
testl
imul
mov
jb
pusha
adc
add
mov
sub
xor
rcll
out
lret
pop
arpl
jae
es
pop
jp
cmp
mov
xchg
inc
out
out
sbb
das
inc
mov
jmp
sbbb
adc
imul
fcoml
push
cmc
pop
xchg
xor
popa
shrl
inc
sub
std
mov
cmp
and
adc
shrb
in
sub
shll
les
roll
rol
cmp
andl
iret
test
in
rol
lea
pop
mov
jecxz
adc
es
or
das
lods
and
sub
dec
ja
push
pop
mov
pop
stc
gs
rolb
pop
sti
jbe
or
sti
clc
mov
jne
push
ja
xchg
insb
or
shlb
cs
sarb
pop
aad
fwait
mov
pop
push
push
or
jp
loop
mov
jge
lcall
pop
sbb
test
filds
cltd
jbe
imul
aad
cmp
ss
lahf
ds
pop
incl
std
mov
lret
hlt
nop
mov
mov
or
and
add
sub
push
roll
jb
dec
decb
aas
das
mov
ret
lcall
xor
dec
int3
xchg
addr16
sti
clc
xchg
fiaddl
xchg
insl
jle
ss
lods
and
fidivrl
movsl
loope
push
jno
jp
mov
cmp
cmpsl
sbb
popf
xor
repz
push
mov
sbb
mov
mov
leave
lock
mov
xchg
cmp
das
mov
jmp
fldl
adc
mulb
cmpsl
pop
jp
jle
outsl
pop
sbb
repz
dec
lods
jp
inc
pop
aaa
ss
testb
repz
pop
xchg
and
mov
scas
mov
and
xlat
arpl
mov
fwait
xor
sti
sub
inc
mov
pop
mov
ror
mov
cli
pop
jns
or
lock
sti
imul
mov
lea
aam
mov
fldl
or
pop
addr16
fnstenv
or
clc
mov
frstor
dec
jle
fdivrs
arpl
sarl
add
lea
lret
mov
inc
jo
imul
ds
mov
adc
aam
mov
jl
aaa
mov
dec
add
out
cmp
add
push
mov
cmpsl
dec
and
mov
divb
inc
mov
cld
xchg
pop
icebp
add
mov
jnp
or
fldcw
lret
add
hlt
aam
imul
lods
das
cmpsb
cmpl
imul
insl
pop
les
fwait
aam
mulw
in
mov
pop
stos
pop
push
mov
into
test
movsl
fchs
cmp
xchg
test
mov
mov
add
sysenter
stos
lret
into
cmc
ljmp
in
enter
xchg
incl
popa
sahf
idivl
mov
bound
xor
add
push
dec
or
ja
popa
incl
dec
xchg
mov
aad
fidivrs
add
imull
dec
jp
cmp
and
and
andl
inc
adc
cli
ret
xchg
lret
adc
test
dec
adc
stos
inc
stc
dec
jnp
loope
nop
pop
cld
or
sub
shll
push
sti
cmp
add
out
cmp
sarl
fcmovne
or
mov
xchg
leave
cmp
mov
mov
dec
pop
es
lahf
je
pop
in
lcall
push
call
not
push
mov
cmp
sbb
mov
cmp
test
pop
into
jecxz
sbb
movb
sahf
lds
sarb
repnz
mov
mov
or
int
xor
mov
aaa
pushl
inc
or
mov
sbb
daa
arpl
inc
pop
std
les
mov
xchg
out
leave
lds
imul
int
sub
pushf
loopne
outsb
sahf
jge
iret
or
cli
adc
fisttps
jge
pushf
js
or
stos
fwait
aas
inc
mov
sbb
dec
hlt
jecxz
rcrb
ja
test
xchg
push
enter
stc
pop
xchg
add
pop
insb
dec
cmp
sbb
xchg
repz
fidivs
fiaddl
jg
mov
mov
cwtl
mov
lcall
mov
out
pushf
cmc
mov
xchg
push
es
and
jmp
sbb
xlat
jl
je
test
jb
xchg
fildll
pop
hlt
mov
ds
rolb
cmp
out
sahf
adc
inc
fldenv
jnp
int
int
cltd
jae
orl
push
fidivrs
fisttps
ja
in
inc
mov
sbb
mov
fisubs
mov
jnp
pop
imul
in
repz
mov
jp
pop
fwait
push
mov
mov
aaa
icebp
pop
sbb
lret
mov
and
mov
insl
inc
jle
mov
mov
mov
in
test
cmp
outsl
popf
aam
mov
or
stc
inc
test
pop
aaa
fildl
fstpt
adc
xchg
jb
mov
mov
cmpsl
rep
movsb
pop
dec
mov
jae
sbb
jl
mov
in
jge
or
sbb
dec
cmp
mov
leave
mov
clc
fs
aas
jl
pop
out
cmp
jg
fimull
leave
faddl
ficomps
lret
gs
scas
cmp
push
icebp
push
les
push
push
fldenv
mov
int3
jl
clc
mov
jno
lret
enter
call
stos
push
add
cmpsb
inc
mov
mov
and
or
arpl
xor
mov
call
push
loop
xor
inc
gs
push
lock
inc
movsb
mov
cmpb
dec
push
mov
mov
sti
fistps
cmp
inc
xchg
or
mov
dec
sbb
nop
xchg
or
add
mov
push
idiv
rol
loop
iret
cmp
mov
icebp
fwait
jg
xor
data16
jge
and
fistpll
lret
and
aad
xchg
cmp
ret
iret
dec
mov
mov
mov
xchg
xchg
data16
adc
pop
xor
or
test
repnz
shll
cmpsl
mov
call
cmpsl
adc
jmp
out
push
fst
orl
dec
cmp
mov
jmp
xchg
sub
int
or
push
mov
xchg
sarb
sbb
fisubl
mov
xchg
cmp
xchg
xor
daa
fadds
pop
mov
daa
imul
icebp
les
test
inc
and
and
stc
stc
push
jbe
pop
into
or
pop
and
stos
mov
aam
jae
sbb
mov
mov
rcrl
loop
jmp
xor
scas
in
daa
popf
push
daa
ds
cld
popa
lcall
out
sbb
xor
in
pusha
pop
inc
mov
out
adc
rcr
and
aaa
xchg
es
daa
mov
imul
or
pop
and
xor
adc
jne
test
mov
jae
lahf
rclb
pop
daa
popl
mov
cmp
mov
pop
or
lods
jl
imull
faddp
or
adcl
add
fsubrs
jns
jge
mov
sub
jns
dec
dec
cltd
cltd
jno
icebp
and
mov
jbe
xor
xor
pop
lea
xor
push
dec
fnstsw
mov
stc
inc
cmp
or
addl
leave
sbb
lret
mov
faddl
subb
imul
nop
ret
neg
clc
in
cmp
insl
arpl
pop
icebp
inc
jp
inc
push
ja
cmp
xor
xor
out
popa
jne
or
stc
leave
out
mov
mov
mov
add
hlt
not
fistps
lahf
pop
addr16
jmp
xchg
cmp
mov
repnz
cmp
cmp
stos
dec
pop
mov
or
out
jae
adc
lock
mov
or
int
sarb
leave
dec
cmp
ret
jns
daa
fmull
mov
fnsave
xor
test
ja
imul
mov
das
cwtl
daa
add
push
popf
sti
fbld
cmp
or
imul
push
add
pop
sbb
pushl
sub
sbb
aad
in
pop
xor
push
adc
sbb
test
sbb
fiadds
jge
mov
mull
scas
fwait
xlat
fcmove
jnp
lea
mov
out
ret
cmp
dec
dec
inc
and
in
pop
cld
insl
out
add
jno
ljmp
fcmove
xchg
mov
jmp
enter
shlb
outsb
pushf
cltd
pop
test
stc
dec
xor
push
imul
in
sbb
jb
cwtl
jp
sub
push
ficoms
inc
int3
adc
xchg
sub
das
cmpsl
and
sahf
out
mov
call
inc
mov
aam
push
testl
in
andb
jae
xor
jne
add
pop
xchg
dec
leave
or
test
jl
enter
mov
ret
mov
insl
sub
xor
cmp
jl
pop
jae
adc
xor
jp
inc
inc
dec
sbb
inc
mov
data16
mov
out
test
movsl
mov
adc
stos
or
dec
jl
btrl
mov
and
int
add
out
adc
cs
jno
cmp
call
pop
out
sti
ja
sbb
mov
ret
and
cli
adc
mov
mov
cmp
adc
fcom
loope
xchg
jb
out
jecxz
jo
xor
jae
call
xchg
or
dec
pusha
jmp
hlt
inc
into
arpl
ljmp
fwait
jg
mov
mov
in
jg
movsb
pop
xlat
push
shll
das
dec
or
jno
jecxz
les
movsl
add
adc
ffree
scas
dec
and
inc
mov
mov
enter
mov
lcall
cwtl
pushf
cs
js
nopl
decl
or
ljmp
stos
jae
mov
cmp
push
jb
sarl
push
pusha
mov
and
xchg
adc
cwtl
enter
sbb
in
jb
imul
push
xor
sub
std
lahf
daa
cmp
es
mov
call
rcll
xor
mov
movsl
fwait
mov
ret
test
ds
jnp
cwtl
add
cmp
jl
rcll
mov
push
mov
push
ss
mov
pop
or
push
imul
adc
int
mov
push
fstpl
cmp
mov
int
xchg
faddl
xchg
sub
push
jns
mov
sbb
out
pop
sarl
jnp
mov
outsl
jge
out
stc
cmp
test
lea
aaa
dec
push
pop
or
pop
popf
or
xchg
out
mov
mov
adc
adc
xchg
cld
out
int
jnp
cmc
fbstp
outsl
outsl
fnstcw
loope
fadds
daa
rorl
in
call
xchg
pop
in
in
xor
stc
inc
andl
mov
jns
mov
decb
push
dec
dec
mov
xchg
jge
pop
mov
stc
shl
out
lahf
mov
ficoml
lds
out
arpl
xor
push
or
fdivrl
out
and
xchg
fwait
out
dec
in
cmp
mov
jp
adc
xchg
fists
cmpsl
adc
out
cmpsl
xchg
xchg
leave
jg
outsb
repz
inc
dec
in
jg
mov
mov
dec
sbb
dec
sbb
sbb
popf
fstpt
out
mov
lock
cli
mov
and
stc
mov
jae
popa
adc
pop
les
pandn
fbstp
fcmovb
sti
lret
mov
mov
std
or
jns
iret
push
sub
clc
mov
lock
outsl
push
adc
dec
lods
sti
test
ds
filds
sub
push
mov
subb
cs
popa
push
lret
ret
inc
or
in
mov
shlb
pusha
or
mov
shl
add
push
inc
jge
mov
ret
das
loop
lods
mov
inc
dec
lret
stos
ret
mov
mov
fnstsw
in
mov
inc
je
les
ret
js
inc
icebp
mov
inc
cmp
daa
fstps
loopne
std
cmc
jnp
sub
divb
adc
mov
sbb
mov
lock
nop
daa
fmull
je
adc
mov
shlb
adc
lret
jnp
rcrl
ds
or
jnp
lock
ficoms
sti
ja
fnstenv
mov
xor
popf
addr16
orb
fisubrl
insl
fs
or
adc
mov
ja
or
sub
loopne
pop
pop
dec
imul
cmp
sub
mov
das
mov
idiv
push
imull
je
gs
in
sub
decb
jbe
mov
fists
mov
sbb
mov
cmp
enter
add
stc
mov
mov
push
pop
shlb
repz
aaa
jl
dec
sub
jne
jge
pop
scas
ret
aam
mov
outsb
sti
xor
pusha
jp
mov
inc
xor
mov
pop
in
fmull
in
stc
mov
fdivr
xchg
sbb
push
or
xor
js
scas
cmp
cmp
daa
pop
jns
rcll
adc
mov
mov
xchg
in
out
lret
clc
inc
sti
sti
inc
imul
xchg
syscall
push
cmp
cmp
inc
xor
sarb
dec
add
jb
push
mov
xchg
inc
jne
mov
mov
pushf
or
cmp
movsb
or
lock
stos
dec
xchg
or
jmp
or
sar
scas
dec
xchg
xchg
mov
in
mov
push
pop
ret
loop
dec
inc
push
cmp
jg
insb
fdivr
add
dec
dec
imul
xchg
jg
sub
outsb
cmp
xor
mov
pusha
loope
xor
adc
scas
pop
pusha
into
repnz
lret
mov
xor
scas
push
mov
cmp
test
xorl
xor
mov
fstps
or
add
hlt
jae
mov
aaa
pop
arpl
dec
jmp
das
sahf
push
shrl
repz
jns
gs
mov
dec
xchg
shll
xorb
cmp
imul
int3
imul
xor
int3
xor
adc
sbb
insl
mov
lcall
sbb
mov
jle
arpl
mov
fistps
mov
jns
test
cli
jne
adc
mov
adc
cmpsl
pop
testl
push
xor
mov
sub
mov
insb
test
aaa
outsl
pop
xchg
and
adc
xchg
xchg
mov
mov
cmp
jo
gs
stos
inc
es
outsl
jo
inc
push
ja
sbb
cmp
scas
into
fisubs
fisubrl
shlb
rcll
xor
inc
sbb
int
movsl
xor
push
out
scas
loopne
lret
enter
sbb
add
dec
std
imul
test
aad
or
mov
lea
ret
xchg
rorb
adc
dec
leave
pop
enter
fimull
je
dec
scas
dec
fsubl
stos
adc
das
sub
or
xor
xchg
xchg
popf
arpl
lcall
lret
sti
pop
into
subl
push
jl
jecxz
sarb
push
pop
daa
repnz
fsub
ret
cltd
lret
xor
lock
insl
pusha
popf
out
push
adc
cmpsl
dec
mov
into
pop
cmpsb
jo
sbbl
rcrb
aaa
imul
push
jle
in
and
stc
sti
push
cmp
fmull
scas
jns
lahf
cs
rorb
fs
xchg
loopne
rclb
mov
insb
adc
cmpsl
out
pushf
or
pushl
push
xchg
pop
sbb
xor
cmp
bound
xor
outsl
xor
aad
cmp
mov
shlb
les
out
xchg
neg
sub
nopl
mov
dec
rclb
repnz
cld
mov
clc
cmp
mov
cmp
lods
nop
mov
hlt
or
jg
clc
mov
aas
fwait
cld
arpl
ffreep
cmp
lock
mov
icebp
out
jecxz
or
push
cmp
sbb
inc
sbb
and
ret
and
loope
jmp
mov
dec
jns
inc
in
pop
out
aam
cmp
stos
int3
out
popf
fsub
stos
std
in
cli
jae
cld
das
xchg
mov
and
sub
lahf
jecxz
loop
dec
loope
mov
mov
cmp
jnp
in
or
push
mov
lcall
test
lret
sahf
cs
add
xor
xchg
cmp
sar
loop
idivl
flds
mov
jge
mov
pop
jbe
mov
pop
lahf
lret
lahf
pop
pop
jg
pop
dec
flds
sub
neg
imul
fcomip
and
lds
fildll
icebp
iret
and
scas
mov
mov
pop
jnp
sti
push
mov
sti
outsl
jno
or
aas
mov
insl
mov
jno
stc
xchg
cmp
jb
adc
inc
loope
ljmp
cmp
cmp
xor
and
out
pop
mov
mov
xchg
test
push
xchg
loopne
imull
xor
sub
fsts
sti
add
ret
inc
dec
jo
inc
xchg
jne
ljmp
cli
lods
lock
lock
std
test
pop
mov
mov
pop
je
mov
xchg
bound
pop
out
repnz
int3
out
jge
add
jg
test
jmp
faddp
test
jg
ss
mov
and
ret
insl
sub
rclb
jnp
jnp
pop
into
mov
in
and
cmp
aam
push
sbbl
push
sub
mov
jbe
jp
jle
jnp
bound
int
sub
mov
and
fidivl
scas
mov
cld
mov
fisttpl
xor
ja
jecxz
jecxz
jno
ss
aad
mov
sbb
xchg
daa
ficomps
mov
inc
idiv
mov
repz
into
clc
adc
adc
sti
popa
mov
sbbl
cld
ret
ret
mov
lahf
cmp
insl
aam
xor
mov
adc
loopne
cmp
scas
mov
fs
jo
aam
scas
adc
out
jbe
pop
ljmp
loope
fidivrl
cwtl
subl
push
fcoml
pop
xchg
pop
xchg
filds
push
dec
xchg
mov
xor
mov
jne
leave
jl
and
xchg
mov
jno
mov
movsl
adc
pop
popa
sbb
scas
in
dec
pop
jg
loop
sbb
add
mov
inc
iret
mov
js
daa
cld
or
fistpll
repnz
addl
mov
mov
sub
cmpsb
iret
cli
adc
lret
aas
mull
cmc
cwtl
imul
ds
insb
mov
xchg
repz
lods
jns
stos
repz
rorl
jp
mov
leave
out
mov
xchg
pop
cmp
stc
cmpsb
addr16
cmp
ret
cmp
push
dec
xchg
cmc
or
mov
xchg
lock
fcomp
add
mov
mull
mov
pop
ljmp
negb
add
sub
fsts
xor
mov
shrb
pusha
xchg
arpl
mov
jo
inc
stc
repz
scas
cmc
xchg
fstpt
shl
inc
jnp,pt
push
inc
fstps
insl
imul
and
xlat
sub
adc
shlb
out
mov
hlt
sbb
in
pop
pop
lds
cmp
cmp
movsb
dec
push
fistpl
sub
pop
sti
cmp
add
lahf
ja
push
dec
xchg
jnp
xchg
test
mov
dec
std
or
icebp
insb
adc
cmp
shr
pusha
xor
mov
idivl
pop
iret
bound
std
arpl
add
jl
out
xchg
aad
cli
add
in
jg
popf
cwtl
repnz
into
repnz
mov
iret
push
mov
cmp
lcall
push
stos
sbb
jnp
inc
mov
mov
out
gs
sub
adc
push
popa
cli
pop
jbe
popa
into
inc
stc
aaa
adc
retw
mov
test
mov
pop
or
outsl
jmp
test
fcoms
or
cmp
pop
pop
sbb
jp
push
xor
push
mov
loopne
cmp
mov
aad
push
push
pop
jge
imul
sbb
mov
rorl
mov
fcmovnu
movsl
cmpsl
jnp
mov
test
mov
and
popa
imul
mov
mov
out
cmp
out
jb
push
int3
in
or
cmpsb
sbb
cli
ret
pop
adc
out
adc
out
cwtl
jg
out
mov
int
sub
mov
adc
mov
ret
scas
pop
out
mov
jmp
pop
mov
cmpsb
add
test
push
push
pop
jns
mov
add
dec
sbb
outsl
jmp
cmp
rcrl
int
mov
cli
gs
lods
jge
pusha
sti
les
repnz
cmpsb
hlt
jg
inc
icebp
lea
and
jl
cs
mov
fadd
sarl
daa
movsb
cmp
adc
sbb
fistpll
ret
and
scas
vphsubdq
add
cmc
add
pop
mov
cli
pusha
repz
cmpsl
scas
aaa
or
mov
xor
dec
pop
and
movl
psadbw
iret
dec
orl
fs
xor
xchg
inc
fists
jp
mov
adc
dec
mov
dec
sub
push
jle
mov
and
mov
pop
aas
dec
stos
xlat
ret
in
ja
xor
in
jo
data16
cltd
cs
jno
mov
push
mov
and
notb
lahf
inc
loope
pop
repz
dec
stc
dec
scas
pop
add
popf
mov
xchg
jle
xor
imul
iret
mov
scas
nop
adc
movsb
ret
icebp
sbb
nop
push
pop
scas
cmp
mov
pop
movsb
pop
mov
mov
jne
into
fldt
or
divb
cld
lds
jae
rcll
fnsave
ljmp
cwtl
add
in
addr16
fcmovnb
popa
cmc
jl
jg
outsb
pop
aas
outsb
out
shl
mov
lock
test
cmpsb
push
mov
inc
jle
xchg
scas
sub
jns,pn
icebp
sub
testl
mov
sub
jb
loope
xlat
cld
cmp
and
mov
xchg
test
in
xlat
jg
xchg
leave
jl
cmp
sub
mov
test
push
or
sarl
fisubrs
aad
dec
fs
push
int3
insl
dec
xor
adc
pop
sti
jl
cmpsl
fmul
and
push
aas
dec
dec
sub
nop
inc
mov
idivb
fdivrs
add
xchg
bound
std
jp
xor
out
pop
adc
ret
arpl
stos
ljmp
roll
addr16
lahf
jbe
inc
aam
and
sub
sbb
loop
ja
loope
aaa
call
jae
outsl
mov
jp
fsubr
mov
mov
ficomps
cli
or
in
dec
or
mov
js
in
ja
lret
jne
jg
in
pop
ficoml
dec
rcll
cmp
adc
rolb
fwait
addr16
mov
jp
mov
inc
sahf
addb
into
pop
push
xchg
xor
add
fcmovb
mov
lcall
cmp
out
es
mov
and
jno
pause
dec
aas
arpl
ret
arpl
cmp
adc
push
xchg
hlt
sti
sbb
lea
xchg
notb
push
push
jnp
iret
mov
or
mov
cmp
inc
or
sbb
out
mov
or
jle
loop
inc
lods
out
ret
xor
out
ss
xor
push
xchg
inc
fisttpl
std
dec
sbb
jmp
jne
bswap
pop
sub
icebp
stos
test
jae
pop
daa
xor
sub
push
ror
lods
cltd
repnz
stc
in
les
les
lods
cmp
add
movsb
ret
xchg
cmpsb
mov
mov
insl
push
rorb
pop
mov
mov
jmp
pop
sbb
jo
lcall
data16
fdivrp
lret
rol
or
push
jbe
mov
pop
mov
popa
insl
dec
push
decl
mov
cld
push
clc
cld
xor
gs
cli
cmp
fisttpl
or
lret
sub
jge
lret
adc
cli
aad
xchg
cmc
or
push
pop
dec
jg
arpl
int3
push
xor
push
dec
mov
and
dec
insl
push
imul
add
xchg
hlt
outsb
or
xor
cmp
cmpsb
mov
fdivl
lcall
hlt
repnz
outsb
ja
insb
call
idivb
pusha
loop
pop
in
std
int
jl
adc
scas
mov
sub
mov
sbb
lock
dec
dec
and
sub
mov
cmp
or
stos
sahf
arpl
xchg
xor
pop
pop
pop
jp
stos
push
test
pop
orb
test
hlt
jmp
movsl
ja
rcr
sbb
in
fcomi
scas
xchg
mov
sahf
nop
lret
pop
iret
sub
lahf
add
loope
outsb
adc
stos
hlt
cs
mov
push
sahf
sub
sti
sti
mov
out
mov
xchg
cmp
push
cmp
jge
jg
dec
mov
push
dec
cmp
dec
mov
icebp
sub
pop
cmpl
jno
fnstsw
jle
xchg
iret
jge
movsl
lock
add
dec
mov
push
out
jo
push
jmp
mov
notb
dec
pop
sahf
mov
cltd
adc
int3
adc
adc
or
mov
cld
sarl
icebp
jns
clc
in
mov
out
jae
cltd
xor
and
dec
dec
pop
fsubs
adc
aas
int
adc
cmpsb
aas
imul
mov
inc
sbb
es
fwait
neg
call
mov
daa
outsb
pop
sahf
xorl
inc
fcmovnbe
adc
repz
mov
pop
mov
jo
out
pop
xchg
lret
rcrb
cld
popa
pop
dec
push
push
icebp
jno
inc
test
jg
push
or
rol
mov
popa
das
xor
inc
es
out
inc
lret
adc
ljmp
adc
xor
sbb
lods
pop
jns
dec
add
xchg
fisubrs
lds
push
xchg
hlt
mov
clc
lret
sbb
sbb
or
fsubs
lret
test
ret
std
jg
jns
cmp
clc
aas
in
pop
outsb
imulb
mov
fmul
das
cmp
outsl
js
test
cmp
jmp
mov
test
pop
cmp
jmp
jle
mov
cld
push
pop
insb
dec
xlat
jmp
insl
stos
ljmp
loope
les
ret
mov
jns
mov
sar
dec
ficoms
cmp
daa
pop
xchg
jae
incl
lds
cltd
xchg
mov
stos
xchg
sub
in
lret
stos
xor
fsubrp
pushf
xchg
xor
in
mov
sahf
sub
mov
mov
out
push
test
nop
jbe
jne
mov
dec
sbbb
shlb
inc
out
jo
aam
fisubrs
fs
sbb
jae
imul
pop
push
xchg
fwait
rolb
das
cmpsl
jecxz
cld
pusha
inc
std
mov
mov
xlat
pop
cltd
dec
ss
popa
es
adc
in
lds
incb
mov
pop
xchg
sub
pop
aaa
xorl
adc
xor
push
enter
outsb
cmc
std
pop
inc
xchg
cmp
push
cli
int3
mov
cltd
jl
mov
andl
dec
mov
rclb
pop
adc
out
jns
sti
ret
arpl
xor
mov
leavew
inc
push
push
shll
sub
cld
push
mov
lahf
ficompl
inc
mov
lcall
xchg
aaa
paddsw
mov
sub
sub
mov
lock
jp
dec
push
cwtl
hlt
lret
push
sub
xor
je
movsb
mov
pop
fldcw
mov
xchg
sahf
mov
lret
or
xor
add
pop
sub
adc
add
jnp
lret
sar
or
fwait
jmp
js
or
sbb
push
pop
scas
cmp
daa
inc
xor
das
pop
sbb
xchg
fisubrl
into
jp
inc
hlt
xchg
into
sti
jno
pop
adc
scas
and
jae
adc
dec
lds
jg
in
call
mov
mov
addr16
jnp
sti
mov
fcomi
dec
sub
fs
imul
pop
fcmove
mov
push
test
mov
push
xor
mov
jno
cs
sub
mov
push
push
cmp
mov
xor
pop
leave
jl
mov
sub
jmp
insl
sahf
sahf
lods
cmp
jb
fcmove
leave
ljmp
scas
xchg
cld
int
mov
xor
inc
pop
imul
jns
cmc
sub
addr16
add
out
rolb
mov
sbb
lret
leavew
popl
fnstcw
out
adc
mov
popa
rcrb
cmp
inc
jle
jno
sbb
jns
or
cmp
mov
sahf
nop
pop
jnp
popf
adcl
mov
adc
std
sub
mov
into
xchg
pop
sahf
loope
into
mov
add
mov
gs
xchg
pop
testl
fidivrs
fwait
iret
jo
scas
mov
mov
xlat
jle
sbb
addr16
mov
imul
aas
sub
fcoms
dec
ja
jae
pop
imul
lock
clc
lcall
cmp
pop
xor
mov
pop
scas
repnz
scas
xchg
mov
out
test
sub
mov
pop
xor
ss
dec
or
fidivrs
pop
cmp
call
into
sub
push
movsb
mov
push
jo
cmpsb
out
jno
xrelease
cmp
jnp
fcomps
mov
fcmovnu
xchg
insl
js
repnz
inc
call
or
cli
out
in
or
xor
mov
movb
test
pop
xor
outsl
mov
sub
mov
fisubrs
mov
roll
popl
insl
add
lret
insl
pop
ja
fnstcw
mov
mov
enter
jp
mov
icebp
jmp
xchg
into
repnz
and
test
shll
inc
pop
loop
jns
xor
xchg
lock
and
jae
sub
aas
int
adc
jge
in
cli
cmpsl
xor
mov
outsl
scas
jp
and
cmp
mov
pop
push
addr16
mov
mov
pop
sbb
pop
jg
pop
inc
mov
out
nop
testl
mov
mov
xchg
dec
in
mov
fimuls
notl
out
pop
dec
inc
les
xor
outsl
iret
outsb
enter
push
jle
insl
mov
repz
mov
int
mov
sub
pop
je
xchg
fwait
popf
test
push
repz
outsb
movhps
jbe
lods
out
dec
adc
sub
addr16
ret
test
fsubrl
push
into
or
sbb
adc
sub
mov
shl
mov
cmp
scas
push
ret
mov
popa
mov
shlb
jae
ror
test
mov
sbb
mov
cltd
arpl
xchg
mov
call
adc
les
ljmp
adc
leave
mov
push
iret
fnstenv
cmp
enter
xlat
sarl
mov
push
jmp
sbb
pop
mov
xor
sub
xlat
and
rcrl
sahf
add
sub
add
mov
xorb
movsl
mov
jb
lea
inc
jp
mov
push
arpl
sbb
jne
cmpsb
mov
add
add
jno
sbb
inc
pop
out
vpunpcklqdq
nop
out
xor
push
mov
dec
leave
mov
stos
mov
mov
mov
add
rorb
loop
push
xor
jnp
pop
mov
mov
xor
rcrb
mov
stos
dec
in
mov
dec
out
jle
hlt
xchg
xor
in
cmpsl
dec
xlat
sub
stc
imul
jecxz
pop
cmp
rcl
or
sbbl
mov
call
inc
mov
aaa
sbb
add
cmc
cs
mov
and
popa
lods
fcoml
lcall
sti
pop
stos
jns
jae
xor
arpl
dec
ficomps
dec
jmp
notb
lods
ret
imul
inc
mov
mov
jecxz
pop
jg
xchg
data16
js
jecxz
ror
movsb
in
pop
or
popa
cmp
xor
adc
add
es
incb
das
hlt
xchg
add
cmpsb
push
add
pop
dec
rorl
xchg
pushf
cmp
orl
out
pop
out
sahf
stc
jbe
lods
call
es
jno
fwait
cmpsb
test
outsl
inc
int
mov
xchg
inc
push
inc
cli
out
or
sub
pop
dec
test
adc
cmpsb
dec
js
cmpsb
fs
mov
and
mov
lock
lahf
int
sbb
lahf
into
dec
sarl
dec
mov
nop
pop
cltd
adc
pusha
adc
pop
push
shrb
out
push
ds
mov
das
shr
outsl
addb
xchg
and
mov
in
cld
pop
pop
push
scas
arpl
sub
pop
cmc
int
or
filds
lods
aam
ja
fwait
pop
cmp
mov
mov
jp
decb
and
hlt
les
loope
loope
mov
popa
xchg
or
inc
jbe
std
push
loopne
mov
sub
jnp
xchg
insb
inc
in
test
sbbl
push
out
mov
lds
pop
imul
dec
clc
jmp
pop
mov
incl
jl
pop
dec
inc
popf
mov
dec
xorl
js
outsl
int
cltd
stc
pop
das
arpl
es
sbb
repnz
cs
jno
popa
in
std
cli
sub
mov
out
popw
mov
push
or
fdivs
push
or
xchg
scas
lods
jecxz
mov
nop
ss
int
fldl
mov
add
mov
mov
mov
jecxz
cmp
pop
jae
stos
ja
jno
xor
lock
jns
push
mov
sub
out
test
lods
mov
outsb
pop
jae
mov
repz
int
cmp
mov
jne
mov
xchg
shlb
and
add
stos
xchg
or
dec
or
xchg
out
sub
loope
out
or
aaa
push
addb
xchg
iret
stos
mov
push
cld
dec
xor
sub
movsb
je
lea
push
or
push
mov
dec
jno
clc
sbb
fistpll
cmc
fbstp
daa
out
push
sub
mov
lret
mov
add
jg
lret
add
iret
add
enter
test
sbb
int3
fstpl
push
test
pop
scas
int
xor
fcompl
inc
jg
add
repnz
movsl
and
push
pop
cmp
jle
shl
into
ret
in
add
iret
hlt
pushf
imul
cmpb
movsb
aas
mov
jl
mov
ja
jnp
stc
out
mov
or
repz
add
shlb
adc
jecxz
adc
xchg
loope
pop
mov
outsb
mov
mov
jno
pop
std
fisubrs
lcall
cmp
fsubrs
bound
loopne
in
ret
cli
or
ret
jl
cltd
call
sub
lods
push
ds
test
dec
pushf
jbe
test
inc
aas
jmp
jb
popa
jle
adc
or
adc
les
data16
nopl
rcrl
pop
mov
test
outsl
test
mov
cmc
xor
das
dec
mov
cmc
cld
imul
sbb
cs
adc
jmp
jmp
sub
divps
jle
push
std
inc
out
jb
push
xchg
xor
in
xor
loope
aad
loope
notb
lods
js
pop
jb
pop
jle
movsl
sti
jmp
push
aad
loope
incl
js
mov
mov
dec
cli
cmpl
test
mov
mov
xchg
cmpsb
cmpb
clc
lret
mov
sub
test
inc
lods
std
or
pushf
int3
fdivp
int
cmp
insb
xchg
pop
or
mov
add
fstps
xchg
loopne
sbb
mov
mov
loopne
mov
xor
cwtl
leave
mov
sbb
and
cmp
and
subb
dec
push
sahf
sti
icebp
mov
lds
sahf
je
sahf
xchg
rcl
pop
xor
push
lock
fcmovb
dec
sub
jl
cwtl
mov
lea
fdivr
pop
test
fidivs
out
mov
popa
jl
push
mov
mov
out
aaa
cmp
adc
xchg
ret
rcl
cmp
xchg
in
and
mov
push
and
mov
fisttps
and
in
inc
lahf
xorl
jmp
les
into
or
mov
pop
and
xchg
inc
sbbl
cmp
push
popf
lods
dec
add
push
arpl
imul
mov
cmp
push
loope
cltd
sbb
dec
adc
movsl
insl
ret
repnz
push
sbb
jns
jb
dec
dec
pop
mov
out
test
rolb
dec
sub
xchg
cmp
cmc
fcmovnb
dec
push
sbb
or
jp
movsl
out
or
testb
divl
xor
test
rcrl
xor
push
mov
mov
mov
call
lahf
stc
mov
add
jge
jge
push
imul
cmp
and
mov
sbb
mov
out
insb
out
dec
pop
fimull
sbb
dec
inc
clc
xchg
dec
bound
paddb
stc
pop
test
testb
jno
dec
call
lea
fldcw
add
notl
pop
cmp
xchg
push
fs
ss
aam
jmp
cmc
cs
sahf
decl
fadds
mov
int3
xchg
push
inc
push
and
mov
les
and
and
int
mov
sbb
in
pop
fwait
idivb
fwait
scas
or
cmp
popf
les
inc
jne
push
cmp
mov
jl
leave
in
stos
iret
or
xchg
cmc
mov
push
movsb
inc
in
sub
outsl
adc
test
jbe
inc
push
nop
inc
and
xchg
gs
leave
or
out
and
cmpb
rclb
fucomi
inc
push
mov
stos
mov
dec
jl
push
mov
mov
ja,pn
sub
mov
pushf
jmp
enter
mov
xchg
imul
mov
jge
dec
xchg
mov
pop
rcrb
rolb
and
loop
sub
push
pop
cmpsl
popa
sub
jp
in
jb
add
fiaddl
sub
sub
jo
add
xor
popf
jecxz
pop
lret
dec
mov
push
repz
sti
test
stos
inc
repz
pop
mov
movl
adcl
aas
stos
jno
out
adcl
dec
inc
xchg
nop
mov
pop
scas
sub
in
mov
js
pop
inc
aam
cltd
int3
out
sbb
aaa
sahf
cmp
sarl
jno
ss
sarl
mov
sahf
nop
inc
sbb
mov
mov
mov
lods
mov
rolb
mov
popf
shl
icebp
jmp
cmc
int3
test
aam
xchg
mov
leave
cmp
mov
adc
and
stc
aaa
push
xchg
pop
rolb
dec
mov
adc
aas
jae
cltd
test
movsb
sbb
dec
dec
ja
xchg
test
daa
inc
rcrb
mov
aas
push
mov
sub
push
cmp
mov
lahf
xor
addr16
xchg
jae
inc
notl
xor
cli
insl
cltd
push
lahf
iret
mov
mov
ds
aas
out
jnp
neg
int3
repz
cltd
fdiv
call
xor
pop
mov
push
insb
andl
adc
inc
inc
addr16
fimull
icebp
sahf
adc
rol
cmp
ljmp
and
cmp
ret
rcr
sub
jmp
test
scas
leave
rorb
dec
dec
jge
aas
data16
xor
lcall
pusha
imul
pop
jb
inc
in
push
sti
scas
mov
mov
pop
cs
xchg
pop
mov
or
imul
sarb
sbb
cwtl
pop
stc
xor
jl
jnp
mov
xchg
and
into
sahf
inc
test
lods
cltd
and
jl
cmp
ret
sbb
cwtl
mov
push
pop
mov
in
icebp
and
rclb
fidivrl
jns
test
jb
imul
sub
int
mov
pop
push
fwait
adc
sub
sub
xchg
repz
fildll
mov
mov
fildl
popa
xchg
ret
repnz
rclb
dec
out
pushf
std
sub
cmpsb
movsb
mov
xchg
pop
out
mov
fwait
mov
jbe
cld
rcr
repz
xchg
inc
inc
mov
cmc
pop
add
test
mov
mov
nop
hlt
push
and
push
testl
push
pop
stos
jmp
xchg
fdivrl
aaa
insb
inc
and
js
sti
dec
pushf
xchg
dec
mov
cltd
pop
pop
ret
test
stos
xchg
cmc
jl
sti
jae
jl
push
cli
xchg
sbb
das
je
fbstp
in
cmp
add
mov
pusha
mov
cwtl
mov
jnp
and
sbb
jmp
rorl
and
test
arpl
push
dec
jae
xor
mov
js
minps
pop
push
fidivrl
xor
push
mov
arpl
adc
popf
cmpsl
loope
mov
cltd
sbbb
in
loopne
jge
sub
jne
xchg
jle
ds
push
xor
or
or
repz
add
cs
dec
mov
lret
jb
cli
outsl
inc
sarb
jg
in
icebp
fwait
cmp
ret
addr16
adc
mov
insb
out
xchg
cmp
imul
jb
sub
xchg
push
cmp
adc
sbb
jb
sbb
jmp
scas
ret
popa
pop
cs
push
cmpsl
sarb
aam
insb
les
xor
into
dec
jo
ss
aaa
mov
ja
fwait
jbe
lahf
ret
xchg
insb
dec
pop
repz
adc
scas
lret
inc
mov
out
aam
and
sub
iret
fucompp
idivb
int3
mov
es
push
or
adc
test
cltd
jge
mov
stc
mov
aad
pop
push
clc
aam
pop
sbb
cmp
mov
jns
mov
xor
pop
out
lock
pop
jo
es
or
dec
aaa
mov
mov
mov
loop
aam
aaa
ret
inc
adc
jmp
cmp
sbb
mov
ret
inc
xlat
sub
cmp
lods
and
sbb
jo
push
pop
push
in
mov
add
fldenv
rorl
jne
imul
jno
xchg
out
call
pop
or
andps
pop
mov
jg
mov
mov
loop
jnp
popf
mov
mov
aad
out
mov
mov
int
mov
push
addl
cmp
mov
xchg
call
sbb
shrb
mov
in
jbe
insb
xor
orl
enter
int3
lret
mov
sub
sarl
cs
push
cmpsb
and
lahf
repnz
adc
mov
jmp
inc
cmp
adc
shlb
cmp
addr16
xor
imul
dec
mov
es
mov
cmp
fs
cmp
push
and
dec
or
jle
jle
xchg
addr16
addr16
mov
xchg
in
jmp
jg
andb
fidivl
and
out
outsl
sub
test
mov
mov
loopne
insl
pop
lock
mov
sbb
mov
xchg
in
test
cmp
mov
xor
fcomps
xor
jae
jg
outsl
in
jge
into
out
dec
clc
dec
xor
push
mov
js
ljmp
pop
mov
xchg
shrb
lds
pop
insb
inc
in
iret
out
pop
inc
and
call
imul
shll
mov
cli
or
jb
les
dec
cmc
test
hlt
pop
pop
mov
out
sub
arpl
fbld
xor
rcl
outsb
xor
mov
andb
pop
mov
andl
inc
addr16
push
push
adc
inc
lock
popl
adc
pop
push
lahf
mov
ret
xchg
out
xchg
jno
test
dec
mov
cmp
mov
rcll
rolb
stos
and
dec
xchg
cmp
pop
xchg
loopne
sbb
fcomp
mov
repz
mov
leave
jg
sbb
pushl
jo
and
test
dec
and
mov
repz
fwait
mov
dec
dec
adc
popa
arpl
jmp
cltd
shl
les
int3
cmc
mov
lahf
hlt
xchg
pop
imull
das
dec
add
push
cmc
mov
sbb
sti
cmp
mov
mov
sbb
and
pop
mov
sub
cmpsb
sub
mov
popf
iret
loop
mov
outsl
mov
in
mov
or
imul
xor
loop
xor
nop
mov
repnz
mov
xor
jl
mov
mov
fisubrs
cmp
cmc
mov
cmp
int
sbb
hlt
sbbl
push
cmp
int
outsl
jp
ljmp
add
xor
popa
cld
lcall
sbb
shll
adc
xlat
jl
or
jg
cmp
das
gs
mov
leave
lret
addr16
addr16
mov
push
and
push
cwtl
dec
mov
rcr
loopne
fnstenv
outsb
jle
pop
jg
daa
aas
xchg
int
stc
in
stc
jl
sub
dec
ja
in
addr16
push
inc
imull
dec
addr16
adc
imul
add
jbe
mov
movsb
jmp
push
in
mov
sub
push
mov
jno
cltd
cmc
repz
aam
repz
and
std
test
leave
imul
movsl
cmp
sti
shll
les
lods
cmpsb
adc
mov
mov
push
in
enter
mov
add
add
clc
mov
aam
out
lret
pusha
mov
out
sahf
add
jmp
fnstcw
jb
sub
sub
lods
add
inc
insb
xor
xchg
shlb
inc
out
iret
cmpsb
jns
cmp
aam
fisttps
fwait
adc
cmc
xor
insb
daa
sbb
lds
xchg
jns
pop
pop
push
mov
stc
iret
and
dec
jb
cmp
imul
popa
fmulp
xor
insl
push
cltd
sub
lahf
rolb
das
push
push
in
cs
in
pusha
mov
mov
imul
jmp
or
jle
add
ret
push
jmp
into
jg
pop
loopne
enter
push
xchg
pushf
idivb
repz
daa
in
icebp
mov
aaa
mov
loope
jae
xor
popf
xchg
xor
out
mov
xor
sub
lea
cmp
push
xlat
or
pop
push
xlat
xlat
sub
cmp
push
pop
flds
imul
je
push
mov
push
in
xor
inc
jo
xor
mov
jg
ljmp
or
and
cmc
dec
flds
lret
jg
jbe
loop
sbb
mov
in
clc
test
fisubrl
js
or
xchg
repnz
inc
adc
ja
imul
jnp
pop
mov
jecxz
jecxz
push
xchg
sbb
adc
sub
mov
push
lahf
lea
scas
and
cld
pop
ds
xchg
std
dec
outsl
xor
inc
jge
mov
mov
movsb
jno
repnz
ja
sub
ret
aaa
aam
rol
js
incb
movd
fisttpl
iret
rcrl
pushf
repz
jle
inc
sub
inc
scas
adc
push
inc
jo
adcb
fidivl
es
movsb
adc
aad
sub
ret
dec
div
dec
inc
inc
into
pop
test
and
adcl
push
lock
dec
inc
cmp
je
pop
into
mov
mov
test
ljmp
adc
push
inc
or
cmpsl
cwtl
mov
dec
iret
cmp
add
sti
je
subb
adc
addr16
inc
xor
repnz
and
xchg
incb
push
int3
rclb
daa
push
test
aaa
inc
sub
pop
sti
std
add
push
cmpb
pop
jl
cmpsl
loop
pop
test
shll
pop
xchg
into
jo
pop
xlat
lea
xchg
aam
push
aad
mov
shlb
jmp
rcrl
jne
push
mov
fidivrs
lods
push
test
lds
mov
repnz
cmp
scas
mov
xchg
mov
testl
push
mov
jbe
dec
fcmovne
jns
out
adc
shlb
or
stc
jge
lods
mov
pop
gs
call
or
sub
dec
xlat
jne
in
push
lea
cwtl
mov
pop
adc
jns
fstpt
in
std
fs
lock
out
stos
mov
jp
mov
or
mov
cmc
sbb
aaa
dec
push
xchg
and
imul
ret
mov
test
dec
icebp
out
and
sti
in
mov
sub
jno
ficompl
sbb
inc
mov
xchg
jl
out
push
push
arpl
dec
out
das
dec
push
sub
mov
push
sti
jmp
sbb
adc
repz
shll
or
out
sti
and
mov
sbbl
cmp
testl
loopne
scas
outsb
dec
xor
je
mov
xchg
cmp
dec
cwtl
or
pop
ja
outsl
ja
jae
jns
push
xchg
add
rcrl
in
subb
and
je
jmp
das
testl
push
rorb
jnp
test
xchg
outsb
leave
lods
sbb
adc
sbb
jno
push
cmp
lea
adcb
lds
outsl
js
pop
inc
pop
test
inc
push
jge
jmp
fldl
push
sbb
sbb
iret
loop
fcoml
lret
cld
dec
je
push
mov
stc
dec
xchg
mov
and
xchg
pop
pop
pop
leave
push
fimull
in
adc
jnp
xchg
inc
fiadds
aas
pop
push
mov
sub
and
psubsw
sbb
fnstenv
orb
test
mov
cmp
test
or
je
std
or
cld
dec
cmp
or
xchg
xor
gs
loopne
mov
ss
shlb
test
mov
fisubrs
jnp
shl
fimull
and
stc
int3
mov
movsb
das
mov
pop
xor
fistl
or
fildll
mov
dec
jecxz
push
sarl
hlt
repnz
fidivrs
mov
ja
mov
push
add
cmc
push
cmc
xor
in
dec
push
cmc
push
xchg
pop
mov
push
leave
fldt
cwtl
cmc
mov
mov
push
mov
pop
sbb
int3
icebp
jae
sbb
xor
orl
add
sbb
sti
outsl
xor
sbb
rorb
out
add
es
pop
mov
mov
iret
pusha
lcall
iret
mov
jle
adc
aam
addl
mov
add
outsb
iret
jbe
cmp
mov
add
jno
sbb
sub
lods
andb
jl
roll
add
loopne
cmp
xchg
loopne
insl
pop
ja
clc
adc
dec
mov
pop
xor
push
ror
mov
loop
jg
getsec
pop
adc
mov
xor
jo
adc
mov
mov
adc
rcl
hlt
fwait
mov
in
pop
into
mov
out
dec
mov
jmp
cmp
in
in
adc
std
out
data16
xor
sbb
popf
nop
mov
outsl
mov
mov
push
stos
ret
inc
push
cltd
imulb
or
push
aas
xor
push
iret
xchg
int3
bound
pop
ret
sub
jl
stc
popf
jne
mov
add
mov
xchg
into
std
pop
pop
rclb
push
fsubr
jmp
xchg
sbb
lret
mov
loope
mov
dec
bound
fsubr
push
sub
and
loope
dec
into
mov
add
mov
and
cld
insb
sahf
mov
rcr
inc
aad
adc
jecxz
insb
jb
adc
or
icebp
sbb
push
cmpsb
cmp
subb
jp
mov
jp
inc
add
mov
inc
out
sbbb
jle
mov
cmpsl
fisubrs
js
jp
mov
sbb
push
rclb
add
in
jg
jg
add
movsb
sub
in
fwait
push
jae
xor
out
std
popf
fstl
les
pop
xor
ljmp
les
push
mov
in
pop
adc
iret
ljmp
xchg
out
setg
lods
lea
fildll
fldcw
into
aaa
leave
xor
mov
or
push
cmp
and
xor
sub
cmp
js
xor
sahf
cmp
test
jge
mov
cmpsb
stos
stos
mov
jb
mov
mov
mov
test
aam
xlat
jmp
pop
andl
lea
dec
jne
xor
mov
xor
mov
lret
je
add
cmp
leave
decb
popf
add
out
aad
test
in
pop
jb
fcomp
fisubl
in
and
xchg
cld
ret
and
sbbl
lcall
test
lcall
idivb
cmp
fsts
je
icebp
mov
aam
cmp
cmp
pop
push
fld
xchg
mov
and
ljmp
mull
pop
addr16
dec
pop
and
push
pusha
fidivrl
cmpsl
fisubl
cmpsl
mov
cmp
fcomp
dec
mov
gs
dec
mov
int
fisubrl
pushf
mov
pop
sarb
fdivl
das
fisubs
addr16
icebp
add
jae
test
and
addr16
pusha
call
daa
pushf
xchg
popf
or
xor
add
mov
pop
mov
xchg
xlat
nop
ret
and
hlt
movsb
adc
mov
cmp
das
dec
jg
add
cmpsl
xor
scas
addr16
xlat
movsl
pushf
bound
iret
mov
stc
ror
out
lret
sbb
add
in
pop
xchg
and
call
ret
movsl
xchg
repnz
push
adc
sub
lcall
add
stc
daa
and
test
fistpl
int
mov
push
add
push
gs
push
and
iret
test
cwtl
fcoms
inc
inc
xchg
push
adc
add
mov
cwtl
fs
test
mov
inc
mov
or
dec
jmp
ret
mov
arpl
aas
mov
mov
out
mov
stc
sarb
pop
popf
cmpb
popf
mov
mov
sub
jle
and
mov
jecxz
jg
pop
dec
sub
and
dec
inc
xor
mov
shl
dec
cli
jge
mov
and
lret
and
cmp
sahf
sub
fbstp
pop
ss
imull
mov
xchg
pushl
repz
lods
mov
inc
call
cli
repz
movsb
mov
push
push
sbb
jecxz
and
lcall
loope
push
shll
cmpl
xor
leave
aad
sub
sti
push
xor
or
out
lahf
iret
pusha
mov
xor
pop
rcl
pop
cmpsl
add
cwtl
imul
shl
sti
jmp
jp
mov
push
pop
in
jne
adc
pop
mov
fidivrl
xor
je
in
or
cmovo
lahf
mov
sbb
ss
ror
mov
lods
jo
das
jp
lods
std
test
add
notb
xor
jb
cmp
cld
pop
int
inc
xchg
popf
pusha
int3
clc
mov
jbe,pt
stos
out
push
enter
std
js
out
mov
mov
xor
jnp
into
pop
xchg
lret
js
mov
scas
cs
mov
shll
loop
pushf
jmp
mov
jmp
sti
leave
mull
push
jecxz
loop
popf
ja
mov
sub
jbe
jns
sub
out
dec
int
scas
inc
loope
mov
inc
xor
out
adc
iret
mov
sbb
js
cltd
xchg
shl
mov
pop
xchg
jbe
imul
negb
dec
fcomp
daa
out
and
or
dec
pop
sub
cmp
jecxz
or
aad
sbb
jae
test
movsl
fisubrl
pop
mov
add
test
pusha
loop
aas
fcom
outsl
leave
xor
ds
shr
push
mov
adc
int
ret
add
inc
in
popa
push
lods
daa
addr16
dec
scas
cld
sbb
aam
pop
fs
andl
stos
ds
push
push
xchg
cs
cmpsb
js
lret
sub
dec
stos
test
outsb
xchg
nop
mov
sub
jnp
mov
xor
sub
pop
int
fmul
push
outsb
aad
push
shl
cld
popf
mov
pop
mov
daa
shll
or
mov
push
dec
aad
add
inc
filds
sbb
push
or
mov
sahf
xchg
lcall
mov
repnz
xor
stc
lea
repnz
into
lahf
sub
cmpsl
mov
push
sub
bound
int
pushf
std
stc
or
jae
cltd
sbb
push
arpl
mov
sub
adc
inc
fs
cmp
or
pop
leave
push
dec
and
sbb
test
outsl
xor
das
fdivrs
xchg
pop
sbb
sbb
movsb
cmp
lods
push
and
cmp
push
cmc
inc
pop
fsubl
jns
in
stos
mov
in
ret
jp
and
dec
lock
cmp
test
clc
mov
rol
and
rcrl
fbstp
pop
imul
lcall
into
jo
dec
aaa
movsb
lahf
xor
lret
fsubr
jne
sbb
outsb
lods
mov
and
cmp
mov
int3
cli
cmp
mov
pop
inc
mov
orl
shll
cmp
jle
and
clc
adc
jnp
mov
push
enter
in
test
gs
xor
and
xchg
inc
mov
iret
cli
outsb
dec
push
in
out
pop
cmpsb
mov
pushf
cld
fiadds
jae
jbe
outsl
aam
jg
insl
xchg
mov
mov
push
dec
loop
push
test
inc
sub
enter
sub
testl
dec
test
ss
or
fnstsw
and
xchg
popf
and
mov
dec
ret
xor
ss
jmp
js
xchg
daa
dec
push
stos
pop
ljmp
mov
testl
clc
jne
add
jno
popf
push
stos
xchg
and
sub
pop
loop
mov
xchg
scas
movsb
cmp
popf
hlt
mov
outsb
xor
dec
bnd
or
push
mov
out
adc
dec
xchg
into
and
bound
cmp
repnz
test
xchg
cmpsl
xor
xor
mov
mov
push
rorb
jae
in
cld
les
ljmp
add
test
mov
mov
out
fs
pop
les
rcll
xchg
loop
scas
movsb
xlat
out
jge
pop
je
out
test
fisubrl
xchg
mov
ror
jg
mov
sub
xchg
notb
jle
pusha
in
mov
push
and
sahf
icebp
or
cli
push
leave
push
mov
sbb
jnp
inc
xchg
pushf
mov
repz
nop
lret
cmc
iret
ds
xchg
cwtl
mov
repz
aad
repnz
cwtl
clc
xor
aam
insl
inc
pop
cmp
push
or
fldcw
add
push
jmp
pop
imul
push
pop
pop
xchg
inc
fisubrs
mov
push
dec
fmull
out
sub
cmp
fimull
je
sub
cmp
inc
icebp
imull
filds
lahf
lea
cltd
jae
jmp
icebp
add
rcl
arpl
mov
shr
cvtps2pd
test
add
data16
adc
mov
cld
cmp
push
sub
adc
test
or
lret
call
setg
xchg
mov
mov
aad
mov
popa
and
dec
mov
hlt
scas
sub
scas
pop
mov
aam
jge
sbb
or
jno
and
pop
and
pop
insl
movsb
mov
add
arpl
ds
or
mov
jle
js
aam
leave
fiaddl
fstl
out
pop
pop
imul
int3
xor
inc
movsb
push
stos
sub
pop
or
testl
jae
lret
fwait
test
xor
mov
fcoms
ficompl
movsl
divb
add
sub
mov
mov
pop
xchg
xor
shl
arpl
hlt
sub
pushf
xchg
sti
rcl
testb
jb
cmc
dec
sti
xlat
xlat
fs
pop
pop
nop
mov
ja
xlat
aaa
mov
xchg
aad
fsubl
jle
fwait
das
pop
lahf
sub
cwtl
popa
ljmp
sti
divb
lods
cli
outsb
std
cmpl
pop
in
sti
call
out
mov
mov
incb
push
push
jg
or
jp
fwait
mov
jmp
pop
dec
xchg
rcr
cmp
leave
in
test
shll
mov
mov
imul
repz
mov
aas
inc
lret
or
and
pop
xor
dec
pop
xchg
push
loope
ja
push
lret
out
jnp
fstpt
aas
jge
iret
fldl
pop
cmp
imul
and
insl
cmp
xchg
dec
in
inc
pop
jge
subl
div
or
and
pop
mov
movsl
clc
insl
inc
push
cs
fdivs
adc
mov
out
jl
aad
cld
sbb
pushf
mov
pushf
neg
jnp
lret
movsb
mov
aaa
call
pop
add
jb
jb
icebp
pop
xor
mov
jecxz
mov
loope
jg
adc
inc
ja
cmp
jns
ret
jge
jp
stos
jb
ja
lcall
jo
xchg
jno
xor
fisttpll
push
int3
add
inc
cmpsb
arpl
pop
push
iret
cmp
dec
cmpsb
cmp
sub
int3
mov
ret
rcr
push
cmp
sbb
jge
in
jmp
fisubrs
jo
out
push
dec
mov
dec
add
fisubrl
test
scas
fwait
pop
xor
pushf
ret
les
inc
mov
notb
mov
clc
test
rcrb
xchg
mov
add
ret
inc
mov
iret
xchg
test
or
fsubrs
lock
clc
ja
aas
out
arpl
test
call
ret
mov
ds
jl
fldl
jne
mov
sti
and
out
out
pop
mov
mov
mov
cmpsb
out
and
mov
xchg
test
mov
cltd
shl
mov
jge
lods
xchg
xchg
icebp
dec
jl
arpl
xchg
or
test
sti
loop
mov
cwtl
ds
pop
ret
pop
mov
cmp
sbb
inc
sbb
fs
mov
xor
and
or
test
dec
idivl
sbb
xor
call
sub
mov
inc
xchg
cmp
roll
fwait
ja
xlat
lock
iret
push
lea
sbb
jge
mov
shr
es
adc
cld
inc
inc
mov
mov
adc
xor
outsl
adc
xlat
jnp
push
stos
mov
xchg
pop
in
aam
jae
lret
jns
popa
add
fistpl
addr16
into
jnp
int
mov
mov
lahf
add
xchg
jle
int
pop
mov
mov
lcall
sbbl
push
or
sbb
add
fwait
cmp
pop
nop
mov
cwtl
sti
lods
leave
pop
inc
inc
fstpt
xchg
dec
nop
aaa
shrl
jne
and
outsl
jnp
dec
dec
xchg
outsl
push
sbb
out
sti
cmpsb
dec
jo
out
nop
dec
ljmp
cli
aam
cmpsb
pop
movl
enter
jg
ret
inc
rclb
lret
jae
xor
cmp
mov
fsubrl
clc
jae
outsb
push
push
push
and
stc
ror
mov
mov
leave
pop
in
popf
mov
sub
fwait
mov
sbb
ja
cmp
clc
sub
fcomps
sbbb
adc
outsl
add
xchg
and
push
out
dec
cmp
insb
sahf
mov
loop
cli
pop
cmpsl
or
das
call
cmp
mov
out
mov
repz
lock
in
xlat
popf
dec
aas
hlt
and
dec
data16
out
fldz
and
iret
xchg
inc
es
divb
stc
mov
mov
aam
fcomi
or
insb
sbb
jnp
daa
dec
aas
test
decl
lea
add
mov
jo
pop
adc
mov
pop
imul
psubq
pmaxsw
mov
jg
xor
pop
push
in
mov
and
xchg
cmp
imul
into
addl
js
cs
jge
call
faddl
inc
lahf
ret
xchg
mov
dec
adcb
shl
mov
stos
xor
pop
and
xor
fbld
fldl
lods
test
sub
dec
js
les
mov
and
roll
jecxz
add
stos
popf
adc
push
xchg
inc
push
xor
lods
jns
push
das
sub
lods
adc
sahf
pop
mov
or
cltd
add
movsb
inc
test
cltd
testb
stc
or
dec
dec
push
aas
repz
jae
xor
mov
jbe
je
push
or
test
or
mov
pop
pop
fisttpll
sarb
xchg
std
inc
mov
fildll
std
fs
add
push
leave
pop
fildl
aas
mov
xchg
icebp
xor
dec
int3
mov
lret
pop
testl
ss
and
mov
inc
pop
insb
mov
jmp
pop
stos
lds
fmulp
popa
insl
and
sub
into
fldt
movsb
aaa
int3
icebp
or
ljmp
rorl
insl
cmp
test
sbb
ret
push
in
scas
mov
dec
jp
inc
sbb
lret
popf
out
sarl
fadd
sbb
mov
or
repz
xchg
jnp
mov
adc
andl
inc
mov
out
or
inc
in
mov
in
aaa
push
adc
sbb
mov
fstpt
jmp
dec
ret
shll
pop
lahf
fbld
sbb
fstpl
repz
sbb
adc
cmp
call
cli
stos
xchg
jl
fsubrl
xchg
bnd
xchg
imul
jns
imul
jp
mov
add
or
jg
or
repz
roll
mov
pop
ja
jno
push
std
shrl
cmc
test
sub
fisubrs
iret
and
es
inc
icebp
ret
pusha
and
push
sbb
les
pop
shlb
mov
insl
lock
shlb
mov
and
inc
imul
in
jmp
or
and
push
sub
mov
ja
mov
mov
mov
jp
hlt
les
loope
call
cmpsb
cmp
fwait
cli
cmc
test
push
jbe
out
cmp
divb
orl
out
mov
sarl
mulb
push
es
int
js
shl
pusha
enter
int3
and
mov
dec
cmp
call
mov
jg
mov
incl
fcomps
imul
and
jmp
inc
pusha
mov
scas
cltd
xchg
in
xchg
or
lret
push
inc
add
out
lods
pop
jbe
mov
movsb
sbb
xchg
cmp
add
jae
push
inc
in
sti
inc
dec
mov
push
data16
jnp
mov
cmp
jle
ss
pop
xchg
fimull
pushf
icebp
movsl
jo
and
es
cwtl
call
xor
aaa
icebp
int
add
mov
stc
das
cs
push
into
xor
cmp
cld
mov
cmpb
test
jo
xchg
sbb
cmpsb
jmp
sbb
jecxz
cmc
mov
pusha
pop
and
out
arpl
cltd
mov
fimuls
in
imul
xchg
addr16
outsl
jg
cmp
int3
stos
ficoms
scas
popa
loope
movsb
sbb
xor
ljmp
aam
aad
add
push
mov
pop
cmpsb
or
jl
add
sbbb
pusha
jmp
test
xlat
or
jecxz
pop
cwtl
xor
je
push
test
push
insb
add
xor
adc
sbb
xor
sahf
ret
inc
call
mov
jae
jp
fs
outsb
mov
cmpsb
xchg
pop
fildll
adcl
bound
mov
aad
sub
sti
push
in
inc
mov
test
push
adc
xchg
rcrl
stos
jge
sub
xor
ljmp
mov
out
xor
sbbl
lret
daa
xorb
jae
xor
pop
dec
in
fstps
sub
loopne
lret
lods
aad
xor
dec
pop
pop
pop
push
int
mov
out
cmc
jg
addr16
rorl
leave
ja
adc
ret
imul
daa
jl
and
jge
mov
or
insl
leave
cltd
aam
lock
xchg
and
sub
fidivrl
shrl
jle
xor
aam
push
xor
mov
out
xlat
orb
aaa
cmpb
cltd
xchg
mull
cmpsb
and
sub
inc
push
fsubs
cmp
pop
push
aam
cltd
xchg
in
das
iret
pop
mov
xor
dec
test
cli
jecxz
je
push
into
popl
pop
sub
jmp
jbe
xor
lret
sbb
js
jmp
add
loope
cmp
jp
test
ja
aam
xor
jge
push
push
pextrw
jnp
add
dec
loope
call
ror
testl
out
mov
mov
testb
stos
ret
movsl
jno
xor
arpl
cmp
inc
fisubl
mov
insl
jg
scas
xchg
out
ljmp
and
lret
nop
mov
std
jb
fldcw
icebp
jns
pop
aaa
ss
add
and
out
loope
repz
jo
add
cmp
and
loope
ja
xchg
fisubs
popa
and
notb
lods
fsubrs
jl
mov
inc
mov
mov
add
test
movsl
sti
mov
push
out
sarb
xor
fiaddl
in
cmp
je
adc
xor
inc
lock
ds
insb
and
aaa
cmp
xorl
and
hlt
aam
call
insb
xor
es
pop
xor
inc
push
xchg
add
dec
neg
sub
mov
add
mov
jl
int3
adc
xchg
push
adc
daa
jae
cmc
mov
jnp
pop
lea
sub
js
jmp
cwtl
mov
cltd
ss
push
and
scas
lods
mov
jbe
ljmp
jmp
imul
scas
loope
ss
xor
pop
std
rorl
cmp
lahf
aaa
inc
xchg
in
cmp
icebp
imul
icebp
int3
mov
fwait
pop
and
int
ds
jg
fisubrl
sti
nop
push
adc
into
mov
pcmpgtw
mov
fldcw
or
scas
jge
mov
and
mov
dec
int
clc
jecxz
or
mov
dec
mov
dec
cmp
in
xorb
pop
jno
int3
mov
jnp
repz
push
jnp
jmp
and
inc
sar
lock
out
or
mov
lods
mov
xor
out
test
fsub
repnz
dec
adc
repnz
aaa
loopne
mov
clc
shll
cs
into
insb
ss
push
cmp
ss
or
pop
sbb
push
daa
test
jb
fstps
and
fbstp
push
inc
in
bound
cmpb
jo
inc
and
sbb
popa
fs
sub
push
sub
mov
cmp
in
movb
pop
iret
insb
jecxz
mov
sbb
out
xor
mov
cmp
loop
push
inc
pop
adc
jno
jmp
test
or
mulb
pop
jbe
jne
mov
pop
mov
cmp
nop
jno
adc
cmpsl
mov
cmp
jb
fxtract
repz
add
ret
imul
jb
jge
jp
cmp
scas
mov
inc
shlb
test
mov
leave
cmp
in
mov
loopne,pt
push
into
fsubr
into
fsubr
and
pop
out
insl
mov
pop
xchg
jmp
jb
mov
inc
jae
pop
je
das
sbb
fwait
subb
lahf
lods
lea
lcall
stc
ljmp
sbb
out
stos
sub
inc
mov
rolb
mov
sbb
sbb
insl
jp
jge
inc
mov
stc
inc
ss
adc
jmp
push
lret
jo
cmp
pop
stos
mov
mov
cmc
loop
int3
addb
mov
adc
mov
jg
mov
pop
jg
mov
sbb
and
mov
inc
ja
fisubl
cmpsb
inc
xor
insb
out
mov
imul
xchg
pop
clc
xchg
pop
iret
mov
push
jns
sti
xchg
pop
dec
in
jg
push
sbb
mov
mov
aas
mov
je
addr16
mov
mov
rcrl
and
and
sub
pushf
stc
iret
inc
adc
mov
jbe
mov
mov
out
xchg
in
push
lahf
int
xchg
call
mov
ja
sub
dec
pop
sar
push
mov
xchg
mov
fldt
push
test
push
pop
test
xchg
fcoms
mov
int3
scas
inc
mov
inc
mov
mov
jbe
fwait
lahf
mov
and
lcall
or
popf
lahf
inc
or
mov
leave
inc
shll
xchg
repz
pop
repz
out
push
or
mov
cli
lret
cld
stos
xor
dec
repz
out
jecxz
mov
pop
pop
cld
jb
iret
lods
cs
jae
sbb
jecxz
mov
mov
icebp
and
clc
out
shrb
jmp
pop
pop
in
lods
cs
enter
aam
icebp
pop
lds
lock
sbb
jl
dec
int
test
into
mov
pop
pop
jae
lods
sub
call
jl
and
lret
shl
stos
adc
hlt
outsl
xchg
xchg
inc
cmp
dec
repz
xchg
lcall
imul
xchg
rcrl
packuswb
test
jge
add
mov
pop
pop
shll
mov
and
cltd
jl
mov
ja
popa
mov
dec
ret
pop
dec
scas
mov
push
jne
ds
jnp
mov
cli
jg
fnstcw
pop
out
pushf
test
xorl
jns
pop
rcrb
mov
inc
rcrb
aam
aaa
mov
into
cmp
xchg
cmp
or
call
dec
js
pop
lret
lahf
icebp
cmp
jb
psubw
cmp
imul
out
adc
imul
shlb
lcall
xor
inc
data16
dec
and
lods
mov
mov
push
xor
jbe
jmp
out
int3
ss
jg
pop
pop
loope
adc
shl
loopne
or
leave
sub
push
pop
lret
es
xchg
cmp
mov
and
mov
int
mov
sbb
loopne
xlat
jae
loope
push
inc
xor
mov
fucomip
es
add
enter
out
arpl
dec
pop
xchg
xor
mov
sub
imul
add
mov
das
out
xlat
mov
test
orl
add
mov
int
dec
fs
xchg
jge
push
pop
out
push
inc
jg
pop
and
sub
or
mov
pop
cmp
jecxz
dec
fwait
mov
cmp
cmp
outsb
jnp
imul
or
mov
cltd
enter
and
inc
imul
in
cmc
imul
daa
mov
mov
add
add
ror
xlat
xor
repz
sarl
inc
lods
adc
jecxz
sub
jb
rorl
inc
js
outsb
das
and
sbb
rcll
or
or
cmp
jae
mov
jae
xchg
sub
cld
sar
iret
loopne
testb
mov
cmpsb
pop
xor
clc
fnsave
xlat
popf
fs
jecxz
fwait
sub
das
negb
mov
sbb
push
repnz
sti
mov
test
es
or
shl
lds
mov
fucomi
sar
and
aam
lock
jae
xor
mov
jge
inc
xchg
inc
lds
mov
repnz
mov
std
cmpsb
adc
rcll
push
outsl
sbb
pop
pop
das
xchg
pop
mov
lret
stos
mov
mov
mov
or
add
pop
xor
sbbl
inc
mov
mov
subb
xchg
cmp
pop
nop
cmp
int
outsl
ss
stc
add
jp
push
xchg
mov
sar
and
scas
shrb
ja
stc
fstp
sub
xor
xlat
outsb
data16
jns
cmpsl
push
inc
mov
pop
in
les
dec
jp
mov
daa
insl
cmp
jbe
cmp
mov
insb
cltd
fsubrs
popa
mov
adc
mov
inc
lahf
roll
cmp
loopne
cli
mov
test
out
fldcw
pop
in
adc
mov
negl
or
orb
cmc
sbb
hlt
test
lods
jne
pop
jl
pop
jp
xchg
nop
pop
inc
test
ds
fcmovnbe
ret
popf
and
push
fadd
out
aas
out
pop
push
std
push
jmp
pop
dec
iret
xchg
inc
push
push
add
sti
add
iret
into
sub
inc
xchg
aam
jnp
lock
xchg
and
inc
cmp
cld
sub
adc
and
jge
sbb
add
xor
pop
fnstenv
pusha
pop
nop
lea
jae
mov
lahf
jge
cmp
jg
cld
mov
mov
rolb
sbb
xchg
pop
call
das
lret
in
add
std
test
add
call
and
cmp
sbb
lods
cmpb
xor
aam
mov
jg
lea
push
scas
or
out
pop
rcrb
ret
mov
fs
aas
mov
jmp
push
loop
mov
push
xor
rcl
xor
mov
xchg
add
xor
or
daa
xchg
lahf
in
jge
push
inc
xor
dec
ret
sub
cmp
testb
inc
mov
fldt
loop
push
fldt
push
add
push
cld
cmc
out
pushf
adc
and
into
or
sti
mov
out
jne
or
jmp
xor
imul
testb
int3
cwtl
loopne
out
or
fcomps
sbbl
mov
mov
cmp
lahf
fs
xor
mov
test
cmp
jmp
cmpb
cmp
cmp
out
lret
and
cli
fcomps
xlat
and
inc
pop
dec
add
out
and
sarl
add
adc
fsubr
insl
mov
into
decl
or
adc
aas
sub
inc
aad
sbb
test
mov
mov
inc
xor
scas
lret
cmpsb
test
pop
loope
out
mov
sub
sbbb
cmc
pop
and
into
out
xchg
xor
fwait
xor
or
leave
dec
sbbb
fsubrs
cmpb
and
fcomip
mov
pop
xchg
adc
cmpsl
inc
loopne
test
mov
loop
dec
sub
mov
mov
inc
mov
dec
stc
pop
jbe
jb
pusha
fildll
and
into
push
fcmovne
xchg
cwtl
jle
jmp
std
pusha
je
lcall
popa
mov
cmp
pop
stc
ud0
pop
mov
cmp
test
movsb
dec
dec
or
push
inc
into
mov
dec
push
ds
cmpl
pop
aam
push
push
add
sarl
ret
les
jb
mov
inc
pop
je
sti
fadds
shlb
sbb
les
pusha
jmp
icebp
adc
xchg
aad
pop
push
test
xchg
xlat
cld
shll
es
cmp
int
mov
aas
mov
addr16
insl
popa
mov
adc
ja
fs
mov
xchg
mov
jmp
pop
mov
and
rclb
iret
movl
jbe
mov
les
pop
mov
fwait
test
pusha
xor
xor
sbb
dec
scas
mov
sbb
dec
cld
pop
inc
scas
add
ja
ss
add
push
push
call
cli
xchg
jl,pt
xlat
gs
js
jp
hlt
test
xor
cmc
mov
pmulhw
xchg
cmp
or
test
in
jns
cmpsb
movl
dec
and
and
xor
das
in
sub
iret
adc
aaa
mov
jmp
and
out
fnstsw
and
ljmp
adc
cmp
sti
push
rcll
xchg
repz
sbb
rorl
jle
cmpsl
fisubrs
test
loopne
call
lahf
movsb
cmp
jae
aas
fucomp
aas
in
add
push
mov
sbb
xchg
out
imul
int3
lea
enter
insl
inc
ftst
sar
sbb
xchg
pop
addr16
lret
push
jne
cli
sbbl
pop
lret
lret
cmc
cli
adc
popa
fistpll
add
mov
scas
xchg
test
mov
dec
pop
jnp
mov
mov
mov
xchg
mov
xchg
repz
mov
xor
andb
add
add
pop
jecxz
dec
js
mov
mov
mov
data16
sub
sbb
out
std
sbb
out
adc
into
jae
ret
icebp
cld
sub
inc
cmpsl
sbb
test
jecxz
cmp
insl
xchg
test
scas
mov
and
out
jmp
into
lea
dec
mov
popf
sti
add
shrb
loope
mov
mov
je
sub
mov
clc
stos
cmpsb
mov
jno
ja
jbe
cli
lods
loop
loope
jle
daa
xlat
sub
test
xchg
mov
cmp
push
lea
sbb
mov
mov
push
movsl
imul
dec
sarb
pop
out
add
mov
dec
or
push
sub
jo
mov
or
cli
jecxz
sarl
aam
std
mov
sub
inc
stc
test
sbb
sbb
sub
inc
pusha
mov
pop
mov
lahf
sub
lea
xchg
pop
arpl
je
stc
popf
mov
cmp
mov
push
and
ja
and
inc
push
sub
cmpsb
outsb
push
fistl
xor
push
scas
int3
xchg
mov
cltd
imul
cmp
arpl
insl
sbb
jae
fdivp
jne
xor
stos
adc
out
push
cmp
dec
inc
sbb
dec
aam
out
dec
cmpsl
es
popa
je
jns
fbld
sub
mov
out
rep
flds
dec
sub
in
pop
sub
imull
movsl
xchg
inc
dec
test
pop
call
je
aad
test
repnz
data16
das
dec
cmp
push
cltd
repnz
fists
insb
inc
pusha
cmpsl
mov
fcoms
xor
pop
xor
aam
ss
jnp
rolb
jbe
push
icebp
fnsave
and
cmpsb
push
add
scas
lret
das
sbb
sahf
push
pop
lds
movsb
adcb
pushf
inc
inc
int
std
mov
and
jle
jmp
mov
packsswb
sbb
shrl
cld
cli
mov
outsb
mov
lret
dec
es
int
cmpsl
arpl
jne
xor
xchg
jb
sub
sahf
jo
pop
inc
bound
xchg
test
jno
insl
push
mov
cld
loope
inc
sbb
dec
clc
scas
lret
jnp
sti
mov
cmpsb
cmpsb
pop
xchg
test
ja
pop
adc
scas
xor
push
mov
arpl
hlt
lods
jmp
xor
out
cmpsb
push
push
repz
jne
aam
rorl
jle
int
jp
pop
outsl
call
in
mov
gs
stos
fadds
mov
es
mov
xor
cmc
mov
jle
inc
scas
adc
ljmp
arpl
mov
ljmp
test
in
movsl
xor
outsb
inc
fcoml
das
shll
mov
popf
pop
push
rcll
jl
int
rorb
push
mov
dec
lcall
clc
out
jbe
lcall
push
fs
adc
idiv
xchg
sub
mov
jae
mov
jp
cmp
or
test
xchg
cmpsb
sbb
and
jl
add
stc
insl
clc
call
mov
int3
and
cmp
mov
out
lret
outsl
mov
incb
dec
adc
movsb
cmc
sub
ja
adc
frndint
xor
mov
mov
imul
pop
sub
hlt
adc
out
push
xchg
pop
ljmp
push
mov
xor
jge
adc
mov
or
xor
pop
ss
int
inc
push
mov
enter
inc
fnstenv
inc
xchg
xchg
shr
stc
jmp
sti
imul
gs
jmp
lret
pop
and
sahf
les
push
inc
loop
sub
mov
rol
hlt
in
pusha
and
mov
cmovg
fdivl
shrb
das
call
and
push
dec
jne
out
mov
push
sub
testb
sub
inc
cmpsl
jns
cmpsb
pop
addr16
loope
repnz
in
push
inc
stos
cld
in
stos
cmp
popa
xor
cld
inc
inc
fildll
sbb
sti
inc
ljmp
in
jbe
and
insb
mov
lret
mov
outsl
popf
inc
loope
xchg
rorb
mov
inc
xchg
jno
shlb
dec
cmp
sbb
stos
mov
mov
jb
ret
jne
dec
test
xchg
add
stos
cli
es
outsl
cli
jns
xchg
adcl
cmp
out
out
cmp
xchg
cltd
pop
push
jge
out
mov
mov
fs
lret
leave
shlb
fs
jge
xchg
cmp
orb
xchg
movsl
push
sahf
pop
adc
movsl
fldcw
jg
lret
data16
add
inc
ss
xlat
insb
test
pop
cmp
movsl
ljmp
test
fs
adc
push
hlt
pop
sub
mov
fstpl
inc
pop
movsl
sbb
loop
or
mov
jns
jp
jae
shl
pop
or
into
xchg
cmp
pop
mulb
jecxz
xor
aad
mov
xlat
imul
xor
add
out
sub
xor
adc
jp
pop
dec
test
mov
mov
xor
leave
les
test
fdivs
xchg
mov
push
int3
xchg
jae
in
cmpsb
jmp
lds
out
inc
insb
test
ljmp
fs
sub
vmwrite
sub
push
dec
xchg
add
add
fildll
mov
in
cmpsl
gs
sub
pop
jge
sub
fnstenv
and
out
xor
adc
xchg
out
jae
lods
jmp
rcrb
push
negl
arpl
test
movsb
into
sahf
xchg
jb
imul
inc
shll
out
adc
fstpt
mov
fwait
xchg
mov
popa
lahf
xchg
je
cs
scas
popa
sub
mov
ja
imul
and
in
insl
ds
movsl
outsb
mov
mov
stos
xchg
stos
push
sub
hlt
cs
fisubrs
aad
cmp
dec
fisttpll
iret
dec
test
out
imul
shrl
into
stos
outsb
ss
bound
mov
jae
bswap
and
ja
loop
gs
scas
jge
adc
cmpsb
hlt
in
pop
push
cli
dec
mov
jecxz
xchg
mov
bound
cmpsl
loop
fwait
xchg
xchg
das
xor
clc
ret
push
xor
push
out
push
pop
sub
outsb
lods
sub
push
fsubs
or
dec
dec
xchg
and
out
cmp
sub
jp
call
push
mov
repnz
lahf
add
push
lock
add
adc
mov
or
ret
xor
xchg
pop
pop
cmpsb
adc
and
in
pop
mov
pop
rorl
jle
int
push
cmp
ret
scas
loopne
or
stos
int
and
scas
xchg
or
insl
fsub
sub
mov
xor
sub
sahf
sbb
out
pop
inc
push
hlt
shl
in
std
dec
loop
inc
lods
es
dec
lahf
cld
cmp
sub
scas
push
loop
mov
xor
shr
mov
test
fwait
sbb
jl
add
xchg
icebp
fisubl
fs
and
xor
mov
sub
fwait
or
aas
imul
xlat
in
lods
cmpsl
jg
fs
out
mov
dec
cmpsl
stc
mov
mov
in
pop
outsl
cs
pop
sbb
sar
mov
sub
jb
xchg
and
adc
aas
mov
sub
cs
jo
sbb
and
and
clc
fsubp
xchg
and
push
ss
lret
je
xchg
int
pop
dec
xlat
fwait
inc
cmp
out
mov
aam
ss
int3
repz
call
xchg
iret
ss
ret
ds
cmp
stc
pop
xor
jl
fildll
call
loopne
and
jno
dec
dec
hlt
mov
into
pop
inc
cmpsl
mov
ficoml
sub
xor
test
mov
sahf
mov
cmp
xor
sbb
in
cwtl
mul
sub
outsl
lea
or
cmpsb
repz
fildl
push
sbb
movsb
lcall
in
push
jno
sahf
nop
sub
in
or
push
sbb
push
lret
mov
adc
and
mov
push
fsubrs
std
adc
dec
xchg
sbb
jecxz
cmc
and
pop
gs
sti
xchg
shll
jbe
addl
int3
xor
mov
mov
or
jbe
std
mull
adc
xchg
aaa
pop
xor
rcrb
and
mov
idiv
in
inc
push
mov
cwtl
in
jae
sbb
push
jle
iret
jo
fisttpl
addr16
adc
leave
mov
dec
xchg
jnp
add
dec
lds
aas
mov
in
hlt
xchg
sub
ret
int
cli
cmp
inc
lahf
pop
jl
test
stc
adc
cmp
dec
insl
pushf
mov
mov
inc
add
mov
xor
rorb
adc
mov
dec
fcoml
add
sbb
leave
inc
and
sbb
pop
pop
xlat
mov
jno
and
jmp
loope
inc
out
imul
adc
sbb
inc
popa
push
and
lock
sahf
hlt
sahf
jge
dec
std
icebp
out
stos
repz
or
std
xchg
fistpll
movb
or
lock
dec
sub
cmp
sub
jae
pop
sub
xchg
pushf
addr16
sbb
xchg
cmpxchg
xchg
aas
icebp
lret
hlt
out
out
sarl
mov
pop
insb
xchg
std
ja
out
adc
push
nop
pop
cmc
or
fs
xchg
xor
jg
in
mov
repz
leave
int3
aad
mov
aad
fmull
lret
jns
out
int
cmp
iret
mov
mov
and
stc
movsb
fistpll
adc
jmp
pop
gs
insb
mov
negl
pop
mov
jle
mov
fdivrl
stos
sub
cmp
repz
jl
and
and
push
inc
jnp
pop
into
popf
mov
or
callw
cld
xchg
xchg
jmp
test
nop
aas
ficoml
mov
xchg
xor
daa
outsb
lahf
call
jbe
hlt
popf
jmp
rcl
ja
jnp
lahf
sahf
xchg
jle
mov
dec
mov
hlt
stos
cmc
popf
out
fimuls
jb
pop
insl
cmc
out
adc
pop
nop
add
pop
jecxz
dec
ss
cmpsb
mov
jge
stos
testl
fimull
movsl
leave
mov
xchg
sti
rorl
enter
mov
pop
lods
mov
xchg
loope
lods
xor
pop
mov
xchg
or
ljmp
cmp
inc
rorb
add
mov
add
add
jne
lret
rol
cmpsb
xchg
fs
push
loopne
xchg
mov
push
dec
jp
pusha
imul
inc
jmp
jge
movsb
mov
cmp
mov
ljmp
xchg
lea
out
sti
jnp
pop
ror
push
mov
fnstenv
dec
cmp
sbb
jno
and
jg
hlt
push
clc
test
mov
or
xchg
outsl
or
pop
jge
jg
popl
mov
inc
repz
pop
cmpsb
std
sbb
adc
test
cli
movsb
dec
inc
iret
xor
repz
in
inc
cli
fsubl
decb
insl
and
aam
imul
mov
inc
inc
shll
cmp
lds
sldt
jae
and
loopne
mov
xchg
ss
sbb
or
lea
out
ret
mov
sub
pushf
hlt
jb
adc
ja
scas
mul
cld
out
jbe
jo
repz
cmp
mov
out
mov
sbb
jg
xchg
aam
xor
addr16
stc
pushf
dec
sub
popf
aam
cli
lahf
push
sbb
jbe
push
mov
sbbl
jns
dec
push
mov
dec
scas
js
lea
jp
call
movsl
pop
imul
out
add
loop
pop
pop
pusha
inc
jg
js
mov
fisttps
movsl
in
dec
jbe
cs
hlt
sbb
mov
jge
ret
int3
pop
shll
lods
fimuls
cwtl
and
mov
xor
arpl
fdivr
push
mov
mov
cltd
test
dec
add
xlat
dec
push
insl
push
pop
xor
mov
fnstsw
push
pop
pop
bswap
lret
dec
mov
jp
adc
cld
xor
aad
arpl
adc
jmp
idivb
shl
jns
add
jle
mov
loop
insl
xrelease
pop
int3
aas
lds
mov
mov
paddsw
ret
push
jnp
jno
mov
mov
cmp
jge
sbb
xchg
cltd
lcall
xchg
push
mov
repz
inc
fwait
add
push
jb
cmp
fsubr
addr16
and
fdivp
insb
movsl
out
nop
push
rclb
repnz
add
popa
scas
out
mov
fwait
push
popf
sub
xchg
and
cmp
mov
cmpsl
rcrb
inc
cmp
inc
enter
or
jmp
in
jns
or
adc
fisttpl
jg
cmp
nop
in
shrl
lods
lock
mov
push
cmpsl
popa
out
pop
test
shrb
in
or
jb
cmc
orl
fcomps
data16
dec
stos
sub
jp
push
inc
outsl
into
dec
xor
insl
xor
call
sarl
repz
fs
fdivrs
mov
or
pusha
cltd
movsb
loope
int
outsb
cmpsl
xor
xchg
and
mov
or
xor
mov
repz
xchg
divl
or
gs
or
ret
add
mov
sbb
jbe
mov
cmp
inc
cld
das
push
inc
xchg
clc
gs
adc
sbb
fidivrs
cs
or
fildl
das
outsl
push
fucomp
lods
adc
lret
ja
sbb
xchg
lldt
jmp
xor
jb
push
or
cmpsl
stc
test
inc
inc
sbb
sub
sbb
sbb
xchg
pop
movsb
fistps
pop
cmpsb
imull
stc
jnp
popf
mov
in
or
dec
and
jle
sti
fmuls
sub
push
pop
push
dec
push
mov
pop
jmp
xor
jbe
ds
xor
xor
add
cmp
push
sti
mov
test
repz
jecxz
xor
mov
out
or
inc
shl
aam
sbb
repz
xchg
mov
out
sbb
jge
fbstp
cwtl
mov
das
je
push
outsb
jmp
iret
push
ja
fucom
lret
push
loopne
cmpl
popf
or
icebp
mov
push
jecxz
cmp
out
stos
add
push
sbb
jae
xchg
fnstcw
out
xor
jo
dec
jge
jg
inc
xlat
iret
push
add
data16
gs
or
mov
cld
pop
mov
jo
push
repz
mov
and
xor
testb
repz
stos
je
xorl
xor
add
test
fiaddl
aad
mov
add
xchg
jecxz
rclb
mov
dec
mov
xchg
leave
shrl
mov
pushl
dec
lock
lcall
fists
sub
idivl
rorl
jle
fistps
mov
addr16
push
ss
mov
jb
fsubrl
sbb
or
cmp
imul
ljmp
jecxz
xchg
xlat
adc
stc
mov
ljmp
aam
cld
rorb
bound
xchg
js
sbb
divb
fucomip
and
xor
mov
push
ja
bound
jb
and
loope
push
push
mov
mov
dec
sub
jmp
xchg
push
xor
dec
xor
sahf
mov
ret
int3
inc
mov
popf
pop
mov
adc
test
and
cli
push
sbb
inc
dec
aas
outsl
das
jl
fs
aas
xchg
stc
imul
stos
pushl
xor
xchg
adc
sub
dec
mov
xlat
jl
out
outsb
in
xchg
jnp
push
xchg
loope
enter
jo
insb
push
inc
sbbb
fbstp
fldcw
push
xchg
xchg
pop
movsl
in
sub
cmpsl
rol
mov
std
adc
dec
or
divb
test
cli
xor
push
insl
xchg
pushf
jno
in
test
sbb
xchg
cmp
xor
fwait
adc
repz
jge
xchg
mov
sub
jo
stos
lock
xchg
out
xchg
addr16
push
jmp
mov
cltd
repz
mov
ss
pop
in
mov
in
fs
mulb
scas
xchg
and
mov
outsl
sbb
bound
inc
sbb
pushf
xor
mov
mov
scas
idivl
fstpt
sub
xchg
stos
pop
jo
dec
movsl
std
and
shrl
mov
xchg
outsl
cli
mov
jbe
sarl
rolb
notl
test
mov
lcall
lds
mov
std
mov
jecxz
test
cmp
movsb
test
insl
push
and
outsl
cmp
xchg
sahf
out
pop
and
aad
mov
sti
or
iret
icebp
mov
ljmp
dec
adc
js
arpl
daa
out
aas
cmpsb
fistpll
clc
sbb
xor
shrb
add
neg
je
divl
into
mov
inc
outsl
push
or
xchg
sub
test
inc
mov
xor
dec
stos
mov
fwait
jnp
std
lea
jecxz
sub
mov
pop
mov
mov
cli
out
jmp
js
in
jle
sti
lret
jle
fistpll
loopne
out
add
lods
xchg
inc
xchg
sbb
out
xchg
jns
sarb
push
sub
push
inc
imul
xchg
xor
mov
ss
jns
add
sbb
outsl
mov
dec
mov
rorl
xor
push
scas
insb
enter
bound
pushf
lock
jnp
inc
mov
loop
jl
test
cltd
jnp
sub
int
xchg
mov
dec
jg
inc
sub
sahf
outsl
ja
pop
jo
das
push
cs
xchg
sbb
add
repnz
xchg
mov
xor
cmp
pop
jo
jge
insl
xchg
les
push
xor
mov
sub
jle
xorb
jmp
mov
add
iret
xor
pop
xorl
fstpl
lahf
imul
incl
fwait
pop
and
pop
mov
xor
outsb
cmp
mov
or
mov
mov
sub
or
add
mov
aaa
add
pop
mov
pop
imul
xchg
lret
inc
std
lock
out
mov
inc
or
out
or
inc
iret
jbe
pop
aas
adcb
repnz
das
fstpl
pop
ds
jbe
fsubrl
jns
in
loopne
out
mov
ljmp
lcall
sub
std
and
sarl
fcomps
or
mov
inc
movsb
fistpll
mov
or
pop
xchg
mov
add
inc
in
inc
add
lahf
leave
fdiv
pop
fdivr
mov
je
pop
xlat
add
aad
aas
jbe
je
stos
jno
fsts
stc
outsl
icebp
cmp
jp
jae
mul
xchg
pop
movsb
das
test
pop
push
or
into
inc
adc
mov
sbb
and
push
or
subl
mov
jl
in
cmp
jnp
icebp
testb
nop
dec
mov
push
ljmp
pop
out
fstpt
mov
pop
popl
ds
add
cmp
mov
lods
xorb
sahf
xor
loopne
push
loopne
inc
fbstp
loopne
fnstsw
mov
sub
push
fstpt
cmp
or
cld
aas
es
cmp
xchg
xchg
jnp
mov
or
push
mov
and
jae
xlat
push
inc
fidivrs
cmc
repnz
jecxz
jge
push
bound
iret
push
clc
xlat
jmp
test
bound
cmp
or
outsb
lods
xchg
mov
jle
pop
arpl
aaa
sbb
dec
in
or
shlb
test
hlt
mov
les
mov
or
and
mov
dec
mov
push
sahf
sbb
and
enter
cmpsb
lahf
jg
jo
mov
jl
xchg
mov
jae
jle
popa
lret
jg
jae
bound
xor
addr16
mov
addr16
xchg
push
push
lea
andb
out
inc
fwait
xor
jp,pt
cmp
inc
imul
nop
popa
hlt
outsb
mov
xor
sbb
shl
pop
push
xlat
iret
jo
ljmp
in
jmp
inc
out
push
mov
out
sbb
cmp
xor
lea
mov
inc
jge
jg
negl
out
jae
mov
pop
outsb
push
lahf
jb
loop
lcall
adc
scas
sti
push
push
enter
adc
xor
sbb
jns
or
hlt
rorl
test
mov
lret
cli
ficomps
push
rcrl
sub
in
adc
push
nop
mov
lea
lea
mov
xor
jne
ja
stos
or
adc
scas
or
aad
sub
mov
hlt
insb
pop
ja
adcb
pop
jns
scas
ljmp
xchg
pushf
sti
enter
dec
push
incb
pop
iret
pop
outsb
cmp
mov
adc
pop
xchg
mov
inc
adc
shll
dec
rolb
pop
je
test
out
dec
ja
popa
lret
std
call
jg
cltd
scas
mov
push
in
fxch
in
pop
hlt
movsl
addr16
push
int3
push
pushf
iret
rcll
inc
ds
fwait
inc
lock
inc
mov
repz
jecxz
xchg
std
icebp
popf
fbstp
lock
pop
scas
loopne,pt
sarl
jmp
cwtl
rcrb
xor
fdivrl
in
rolb
hlt
loope
cmp
out
cmc
je
adc
call
ret
pop
imul
sub
fcoms
push
shrb
ljmp
fdivrl
jg
pop
test
sbb
push
loopne
sub
loop
cmp
shrl
dec
mov
ret
scas
adc
and
in
cmpl
rcll
mov
rcrb
js
sub
icebp
mov
into
dec
hlt
mov
dec
sub
pushf
cmp
or
or
or
mov
or
lahf
mov
mov
jl
test
lcall
idiv
pop
mov
xchg
test
xor
popf
xor
insb
fwait
loope
jl
mov
aad
sbb
mov
addr16
pop
or
andl
jecxz
movsb
mov
push
xchg
leave
outsb
shrb
bound
dec
mov
xor
cmpsl
cwtl
outsl
inc
outsb
fsubrp
cmpsl
lods
pop
jle
xor
decb
jae
cmp
data16
std
cs
pop
push
dec
loope
iret
fs
and
test
push
or
outsb
pop
sub
popl
arpl
rorb
mov
imul
inc
and
inc
and
and
mov
jl
testl
xchg
mov
in
pop
sbb
int
dec
in
dec
mov
cwtl
cmpsb
scas
mov
cmp
ret
and
js
jge
popa
xchg
pushl
pop
lcall
loop
jns
mov
jmp
scas
push
movsl
cli
mov
es
rorl
jbe
arpl
outsl
lock
xchg
pushf
pushf
aas
pop
icebp
dec
mov
daa
inc
pop
dec
cld
pop
out
pop
cmp
pop
ljmp
aas
jmp
shll
push
sub
mov
jnp
add
out
rclb
mov
cmc
or
mov
cmpsb
loop
call
inc
inc
mov
xchg
out
xlat
ds
psllq
outsl
mov
dec
insl
adc
xchg
lret
aam
jp
mull
inc
dec
cwtl
ret
or
aam
lock
mov
mov
cltd
fildll
and
bound
lret
jmp
inc
or
inc
ds
and
push
dec
outsb
lahf
ljmp
mov
fld
daa
xchg
dec
or
mov
stos
fistpl
or
mov
add
mov
out
jg
icebp
pushf
and
mov
mov
aas
out
data16
fidivl
out
fildl
push
das
inc
mov
lods
ss
ret
inc
dec
add
xchg
dec
call
fmuls
stc
int3
shrl
pop
pop
sbb
and
mov
cmp
or
mov
das
leave
mov
hlt
in
movsb
sub
fxch
xor
inc
cmp
ret
xchg
lea
cld
jb
fisubs
out
mov
dec
lret
inc
mov
aad
pop
sahf
lahf
pop
mul
int
jae
add
lea
cmp
mov
pop
decb
jmp
pop
cli
mov
fidivrs
rcrl
xor
dec
adc
inc
fstpl
jo
aas
mov
pop
int
mov
xor
jne
ljmp
icebp
pop
inc
pusha
mov
xchg
adc
arpl
cmc
jno
cmp
cmp
xlat
push
loop
xorb
push
gs
dec
lds
xor
movsb
stos
push
imul
dec
sub
into
iret
stc
pop
mov
lock
jg
jae
shl
push
pusha
testb
into
cmp
out
pop
xchg
aas
sti
loope
jmp
fwait
xlat
mov
mov
mov
lds
loope
ftst
or
adc
xchg
adc
or
dec
mov
leave
push
iret
or
lock
stos
pop
dec
pop
add
mov
mov
push
in
xor
ja
mov
pop
shrb
mov
sbb
lds
inc
xchg
icebp
and
jle
and
jbe
adc
in
inc
add
mov
dec
hlt
bound
loop
clc
xchg
jns
mov
push
inc
mov
fwait
xchg
call
mov
sbb
inc
mov
sub
push
pop
test
push
mov
aas
scas
call
or
sub
add
je
cwtl
gs
std
out
sub
inc
mov
pop
testl
mov
mov
hlt
inc
dec
pop
cmp
mov
push
lret
xchg
jmp
push
inc
das
bnd
pop
nop
mov
jno
pop
testl
popa
aad
mov
push
pop
inc
pop
or
test
lahf
xor
or
pushf
sbb
cmc
out
outsl
mov
and
roll
cs
cmp
push
and
add
stc
rorb
dec
loop
cmp
push
call
mov
in
out
push
inc
out
pop
repnz
lock
xor
test
jp
adc
pop
pop
sbb
lods
xchg
outsl
icebp
pop
mov
mov
sti
mov
pop
je
test
arpl
jno
movsb
imul
movsb
mov
stc
or
shll
scas
xchg
fwait
push
and
mov
lods
cld
jmp
jb
stos
and
cmp
testl
repz
jecxz
dec
out
repnz
andb
dec
pushf
mov
xchg
int3
hlt
xchg
or
std
jne
pop
fsubrl
stos
test
jg
jge
pop
fucom
repz
insb
mov
out
push
test
idivb
idivl
ljmp
enter
pushl
push
cmp
jle
jo
push
test
fs
repz
mov
cmp
ds
movsl
clc
test
mov
scas
clc
jecxz
xchg
lahf
divl
dec
sti
js
int
dec
repz
and
jl
or
push
mov
fsub
insb
lea
js
jne
call
jns
jle
cld
mov
popa
push
pop
bound
loopne
ja
jl
ja
pop
mov
cli
inc
cmp
or
push
cmp
mov
cmp
sti
push
mov
push
in
outsb
repz
outsb
insl
cli
out
ja
or
in
sbb
cmc
into
xchg
lret
cld
loopne
push
cmpsl
mov
xchg
clc
or
iret
test
pop
inc
jge
int3
in
int3
or
in
push
cmp
cmp
arpl
insl
jle
cmpsb
in
fsubl
aam
mov
cmpl
fists
push
push
stc
negl
mov
pop
xchg
fstpt
arpl
loopne
or
fsubrp
and
je
mov
pop
nop
add
mov
out
pop
add
inc
cmp
mov
loope
jg
scas
push
inc
inc
in
or
stos
test
jno
jle
cli
cmp
mov
mov
mov
push
mov
xor
dec
ljmp
lcall
sub
mov
mov
fistpll
js
xlat
pop
xchg
xchg
jnp
pop
imul
sti
fbstp
mov
int3
stc
mov
ljmp
mov
cs
and
adc
insl
fwait
call
data16
mov
xchg
mov
cltd
outsb
and
xlat
inc
dec
mov
mov
mov
xchg
std
jae
mov
loope
mov
push
ja
dec
stos
movsl
into
test
or
push
pop
les
sbb
stc
movsb
je
cmp
out
sub
sbb
insl
push
lret
adc
mov
lcall
adc
mov
mov
test
stc
sub
adc
rorb
dec
mov
mov
xor
popa
in
fmul
pop
jb
ficoms
dec
mov
popf
aam
in
inc
xchg
data16
pushw
pushf
bound
ds
scas
mov
xlat
push
sbbl
jno
int3
cmp
loop
in
lods
inc
aam
iret
mov
jl
aam
push
ret
lret
lea
cmp
and
fnstcw
inc
out
adc
roll
test
cli
pop
not
xchg
lahf
mov
cli
stos
add
arpl
std
and
mov
sti
mov
sahf
pop
jg
inc
cmp
shlb
mov
and
iret
cmpsb
cmp
push
das
jp
adc
pop
mov
xlat
jmp
pop
xchg
mov
dec
mov
fsts
pusha
push
inc
in
mov
outsl
push
mov
ret
jle
add
int3
shl
stos
out
sub
sbb
loop
xor
push
jl
fs
in
xor
cmpb
int3
fcmove
repz
adc
pop
in
cmpsl
jnp
xchg
sarl
sbb
ja
outsl
fidivs
jae
jae
test
lret
xlat
jge
das
repz
out
sub
add
in
jbe
lds
push
cmc
repz
and
gs
mov
adc
cmp
mov
int
scas
cltd
jb
lea
pop
aaa
mov
add
push
mov
mov
jmp
sub
xor
pop
ret
int
arpl
add
lret
aad
fdivr
lds
sub
jne
dec
push
sub
push
and
lods
shrl
shrl
lods
sti
pop
sbb
cmp
adc
inc
roll
xlat
in
jns
mov
or
cwtl
sbb
jae
neg
das
sub
ljmp
jb
fwait
addr16
or
cld
js
fistps
cmp
jmp
je
jo
mov
test
jge
jmp
adc
mov
ja
jl
gs
sbb
mov
ja
fs
or
and
or
dec
out
inc
leave
cltd
dec
jle
and
pop
cmp
mov
pop
fimull
dec
outsb
cltd
fs
jge
repz
cmpsl
into
cmpsb
jge
mov
cmpsl
loopne
std
inc
jbe
xlat
inc
xchg
cwtl
jbe
dec
jnp
and
sbb
aad
xchg
int
shlb
es
sub
ja
jb
insb
sbb
dec
mov
sbb
js
pop
mov
pushf
fdivrl
rcrl
sbb
call
push
ror
mov
add
jb
mov
mov
std
inc
push
sub
push
xorl
outsb
jg
jmp
xchg
jecxz
movsl
dec
shlb
xchg
mov
pop
iret
and
add
xor
pop
push
cwtl
repnz
dec
lea
out
xor
std
shl
inc
jns
addr16
enter
sahf
test
cld
xchg
test
adc
loop
push
sub
xchg
mov
cmpsl
in
push
lahf
fisubrl
lcall
mov
call
out
or
or
ljmp
xor
ljmp
out
jno
in
mov
shll
jnp
cmpsb
outsl
mov
xchg
in
lcall
jmp
mov
aad
inc
ds
outsl
jp
adc
sub
repz
and
pop
lcall
xor
cld
pushf
mov
jns
ds
jg
movsl
outsl
sbb
pushl
jbe
js
lahf
test
arpl
hlt
jge
push
sub
lahf
push
sub
lods
cmpsb
lods
inc
mov
sbb
setle
mov
outsl
fisttpll
push
mov
in
movsl
sbb
rol
dec
jno
aam
mov
mov
jle
ljmp
sti
jmp
pop
mov
and
sbb
cld
insb
pop
sub
out
ljmp
jae
mov
stc
das
cmp
push
out
add
mull
and
aas
lock
cmp
jp
jmp
inc
scas
lahf
or
xchg
jmp
mov
pop
pop
mov
xchg
into
call
arpl
outsl
rcrl
push
sub
or
jbe
sbb
mov
pop
pop
mov
outsl
fldt
pop
add
ret
or
push
arpl
mov
and
push
or
ds
cmp
push
sub
jle
je
mov
das
xlat
es
cmc
cltd
add
fadd
out
repnz
std
rolb
add
fnstsw
dec
int3
cmp
sub
add
inc
hlt
sub
popf
fdivs
lock
mov
xor
and
cmp
icebp
mov
or
in
sub
mov
inc
aas
test
std
push
push
pop
loopne
ror
cs
and
arpl
mov
mov
jecxz
cmp
jg
pop
add
push
fcoml
frstor
dec
es
shll
push
xchg
out
add
loope
xor
jmp
xchg
fdivl
and
gs
in
nop
sub
loop
and
lahf
dec
decb
lds
mov
icebp
mov
sbb
ds
fimull
lds
imul
stos
sbb
lods
sbb
xchg
testb
addr16
mov
inc
out
adc
test
in
jno
fwait
dec
shr
push
mov
pop
jbe
fwait
popl
ljmp
nop
pop
add
pop
sbbl
outsl
inc
cmp
scas
std
mov
fcom
cmp
jno
mov
jge
movsl
mov
loop
fisubl
fisubl
mov
jb
cmp
les
frstor
mov
clc
sahf
mov
mov
es
add
mov
js
sarl
fs
mov
xlat
xchg
cmpsl
out
cmp
xchg
fs
cld
inc
mov
fnstenv
mov
or
ss
inc
outsl
mov
lock
pop
jmp
aaa
scas
loope
scas
sub
outsl
flds
jno
mov
jns
mov
push
xorb
dec
aam
or
mov
sbb
test
ror
addr16
int
mov
sahf
mov
cmpb
xchg
jae
out
enter
inc
mov
mov
insb
fdivrp
leave
mov
dec
xchg
addr16
pushf
push
mov
sbb
add
pop
mov
sbb
mov
jb
inc
mov
fistpll
cmpsl
xor
aas
dec
aad
mov
mov
jle
pop
aas
mov
mov
push
std
sub
mov
stc
dec
in
dec
fdivrl
into
fidivl
jbe
cli
xchg
jp
aad
mov
or
repnz
pop
jle
cmpl
dec
inc
aaa
pushf
insl
mov
cli
popf
inc
sarl
sbb
ja
and
lret
movsl
jle
cmpsl
mov
shrb
aas
mov
shlb
adc
push
mov
and
jecxz
lods
mov
fsts
pop
add
leave
mov
mov
cld
ds
push
mov
pop
pop
pop
lret
int
dec
mov
xchg
popa
sti
test
imul
push
jnp
mov
and
mov
jmp
sub
lahf
pop
lret
ret
pushf
xchg
mov
xor
andl
jns
gs
in
xchg
test
xlat
ret
leave
pop
add
int3
or
loop
cltd
into
mov
std
sub
scas
xchg
into
dec
cltd
mov
loopne
je
testl
mov
cmp
orb
mov
sahf
lds
xor
xor
push
dec
pop
out
das
ljmp
xchg
popa
jne
popf
jns
out
or
addr16
loop
mov
loopne
jl
sbb
jp
cwtl
ret
xchg
xor
inc
jo
or
cltd
ret
out
mov
xchg
insl
ja
in
add
push
or
mov
mov
adc
mov
int
mov
lea
add
dec
clc
inc
out
cvtdq2ps
push
test
lret
popa
in
in
movsl
jns
ss
push
jmp
rol
mov
sbb
push
pop
pop
into
mov
ret
test
shlb
rol
mov
add
lret
sbb
lods
sub
sti
das
clc
addr16
cmpsl
int3
xchg
aas
mov
mov
idivb
std
xor
inc
jl
je
pop
pop
outsl
mov
rorb
out
es
jmp
test
fcmovu
sti
fsubp
mov
cld
push
in
xor
adc
mov
out
inc
repz
lahf
mov
sub
sti
and
ljmp
sub
push
jne
es
cmpsl
or
dec
int
dec
jbe
popa
mov
testl
js
in
insl
je
imul
xlat
mov
lods
xchg
mov
cmc
std
rcll
add
in
xchg
rcl
mov
xchg
popf
pop
mov
sarb
loope
aaa
xor
gs
les
imul
popf
mov
ss
dec
sbb
mov
in
jnp
iret
pop
fcomp
mov
or
sbb
push
out
push
lahf
scas
mov
enter
cmp
test
cmp
pusha
cmp
push
xchg
fists
sar
aam
out
add
xor
sbb
es
out
sbb
dec
sarb
mov
xor
xor
xor
ljmp
lds
das
push
push
test
andb
dec
clc
mov
ret
push
je
inc
sub
or
mov
aam
les
mov
fadd
ds
movups
mov
cld
out
push
ds
jbe
ja
idiv
mov
xor
leave
mov
mov
mov
push
mov
or
in
test
sar
js
dec
xchg
call
fsubrl
adc
pop
add
outsb
in
leave
shrl
cmp
aas
test
fistl
cmp
cld
fsubrl
and
xlat
in
cmc
sbb
xchg
daa
jecxz
dec
fstps
sarb
mov
mov
cmpsb
dec
icebp
xor
lret
sub
pop
gs
rcrl
into
das
ret
das
shl
pop
test
pop
cwtl
cltd
lods
sub
mov
hlt
in
xchg
adc
and
sub
adc
mov
xor
mov
sbb
pop
iret
mov
adc
dec
icebp
ljmp
xchg
dec
les
rclb
je
mov
in
dec
fdivl
out
push
push
sbb
pop
ret
pop
cmp
in
push
and
in
and
scas
mulb
pop
rolb
in
inc
addr16
xchg
add
cmp
stos
push
and
loop
test
mov
cli
mov
push
lahf
jl
mov
jb
nop
icebp
mov
jp
mov
out
std
xor
les
mov
aas
shrb
call
pop
jns
pusha
mov
out
push
out
jae
pushf
mov
mov
jl
push
ss
dec
jns
sbb
jns
mov
leave
out
mov
aad
sbb
xchg
sub
mov
jne
xchg
push
jecxz
dec
mov
push
ret
lcall
in
pop
jno
sbbl
out
imul
xchg
push
and
pop
and
clc
sar
mov
add
fisttpll
je
iret
test
sbb
or
push
pop
mov
movb
repz
inc
outsl
cmp
xchg
push
lahf
testl
lahf
bound
fsubl
test
cmp
fcompl
mov
pop
imul
fidivs
icebp
out
hlt
and
clc
or
repz
xchg
jl
sbb
sbb
and
jno
stc
hlt
mov
loopne
pop
fnstcw
cs
test
decb
int
das
dec
sbb
cmp
push
mov
jg
lahf
push
rolb
mov
sahf
rcll
movsb
cmp
xor
xchg
test
cmp
add
js
mov
xlat
pop
fs
push
rorb
scas
jp
adc
loop
inc
sbb
jle
and
xchg
sti
outsb
sub
mov
aaa
jle
pop
cs
pop
sub
out
psubb
sahf
lahf
faddl
imul
add
shlb
jge
inc
sbb
mov
xchg
sub
fisttpl
iret
inc
pushf
xor
ljmp
movsl
loope
out
call
fstps
sti
loopne
cli
add
fisttpl
fdivrl
pop
incb
pop
lea
push
int
sbb
rcll
push
insl
sbb
push
jge
aam
inc
or
lcall
push
icebp
cmp
repnz
jnp
sbb
test
aas
sub
sbb
dec
test
fcomip
dec
sbb
add
cwtl
pop
enter
test
in
cmp
xor
jge
cmp
dec
cmpsl
test
loop
outsb
pushf
in
jne
cmp
mov
mov
sbb
mov
push
mov
addr16
jbe
sti
xchg
cmpsb
fmul
inc
xor
or
lret
ret
or
in
jge
xor
sub
cmp
ss
ss
incl
adc
sbb
pop
mov
xlat
les
mov
lods
xchg
stos
push
cli
pop
jg
fsubs
imul
push
aad
mov
addl
cltd
and
cs
and
sbb
add
jmp
xchg
xor
and
pop
mov
in
testb
cmp
mov
cmpl
mov
int
push
mov
xor
dec
mov
stc
imul
inc
mov
push
fs
pop
or
sbb
jecxz
mov
stos
fisubrl
push
mov
movsb
out
xchg
mov
fisttpll
nop
xor
sub
xor
jmp
out
mov
icebp
xor
pop
cmp
bound
sbb
or
mov
add
jp
pop
js
test
fstps
fnsave
call
sbb
dec
ret
and
mov
adc
add
je
jle
xlat
cmpsb
mov
jae
and
ret
sub
cltd
stc
adc
in
arpl
xchg
mov
xor
and
cld
xchg
fidivrl
add
jno
jo
nop
pop
loope
push
mov
fidivrs
adc
dec
fbld
hlt
movsl
inc
push
lahf
xchg
cmp
out
inc
arpl
and
sbb
pop
test
cld
mov
pop
and
jge
cmp
repz
lcall
add
add
aaa
movl
and
sbb
push
gs
lock
cmp
jg
xchg
bswap
scas
call
cmp
hlt
pop
jae
pop
jmp
iret
jmp
sahf
pop
dec
xchg
clc
ljmp
jnp
push
pop
ja
outsb
rorl
push
les
inc
movsb
mov
xor
js
into
cmc
push
sub
insl
mov
inc
xor
cld
mov
cs
mov
addr16
icebp
cld
mov
les
ret
mov
pop
mov
cmpsl
pushf
incl
in
out
sti
add
cs
pop
cmp
repz
imul
fdivl
mov
sbbb
mov
nop
lret
add
loope
push
mov
sub
adc
mov
ret
adc
cs
aaa
push
loope
push
repz
jp
push
sub
add
mov
add
sub
pop
or
rcrb
idiv
stc
jecxz
in
in
daa
repnz
add
hlt
test
fs
movsb
xchg
inc
fdecstp
push
add
add
bound
sbb
pop
inc
xchg
pop
fucomip
xchg
or
xchg
test
movsb
daa
mov
inc
jl
pop
fwait
nop
std
psllw
fistl
fistps
loope
push
loopne
sub
adc
or
push
pop
push
jg
push
in
nop
cmpsl
push
mov
arpl
divl
inc
mov
xchg
incl
dec
and
dec
mov
ret
mov
add
stos
ja
nop
add
mov
clc
add
sub
dec
decb
xor
cmp
cmpsl
xchg
ljmp
jmp
mov
pop
sahf
xchg
nop
ja
pop
scas
lock
pop
push
pusha
arpl
movsl
push
ficomps
hlt
ljmp
lahf
pushf
xor
icebp
lret
inc
fs
jae
or
popf
mov
cmpsl
outsl
pop
xor
push
mov
pop
movsl
mov
pop
sub
and
fdivrp
inc
cmp
aaa
outsl
jb
jnp
pop
push
jb
cmp
daa
sbb
outsb
dec
int
fwait
cltd
out
jnp
xor
addr16
xor
jle
pop
dec
insb
insl
sbb
add
sub
mov
push
aas
enter
xchg
pop
fimuls
and
mov
jo
pop
lock
fists
jae
mov
mov
mov
adc
pusha
xchg
sbb
push
scas
or
push
jmp
pusha
ljmp
pop
pop
lock
adc
stos
pushf
cld
cmp
ror
mov
in
push
iret
mov
jno
addr16
cmp
and
xchg
mov
xchg
in
in
je
push
je
repz
pop
jl
sbb
in
in
mov
pop
andl
push
icebp
or
into
and
clc
sbb
xchg
jae
xchg
outsl
dec
daa
mov
popa
call
lea
mov
inc
loop
pop
test
or
sbb
mov
pusha
cwtl
scas
clc
out
scas
scas
jl
es
std
ret
andb
jle
xlat
lret
outsb
dec
and
test
jl
inc
mov
add
ss
mov
aad
cmp
out
adc
fdivp
and
mov
rcr
pop
xor
mov
xchg
cmp
and
pusha
dec
lods
and
daa
loop
daa
es
in
or
xchg
es
vunpcklps
cmpb
dec
std
mov
roll
lods
popa
outsb
jp
jg
xor
mov
push
fnsave
cmp
fucom
testb
out
cmp
dec
dec
cmpsl
mov
repnz
cltd
cmp
mov
push
outsl
mov
mov
in
and
mov
lcall
mov
mov
xchg
outsl
aas
outsb
push
jg
ljmp
push
rorl
mov
push
and
mov
ja
mov
aam
aam
xor
shrb
cmp
cmp
inc
and
sbb
mov
push
call
rcrl
stos
ficomps
leave
les
mov
ror
fistpll
hlt
pop
xor
fs
clc
arpl
jns
dec
and
enter
js
std
test
inc
lahf
push
sbb
cmp
push
xchg
andl
cmp
repz
mov
mov
out
lcall
fistl
push
xchg
jecxz
pop
cs
iret
ljmp
mov
xor
jg
scas
int3
movsl
lcall
mov
push
fdivl
into
dec
pop
notl
popf
clc
xchg
ds
jl
mov
aas
test
inc
jbe
adc
xlat
mov
dec
lods
sahf
fldt
xor
rcr
lret
fcmovu
sbb
sbb
imul
sbb
icebp
ljmp
stc
mov
xor
xchg
aad
mov
loop
inc
cmpsb
outsl
cmp
sti
sti
push
std
stc
loop
incl
daa
scas
jnp
push
jae
lods
scas
arpl
aas
imul
xchg
js
lods
dec
xchg
jmp
jle
popa
xchg
cmp
jnp,pt
mov
imul
pop
test
pop
dec
aaa
mov
out
cmpsb
andl
cmp
fwait
sahf
cmp
btc
or
xchg
jne
pop
mov
push
jecxz
fdivr
rclb
pop
outsb
xor
sub
sahf
lock
cli
shl
fisubrs
mov
xchg
or
lds
pop
hlt
outsb
fsts
fchs
subl
push
pop
jns
adcl
xchg
in
icebp
sbb
push
pop
xchg
fstl
sbb
in
xchg
dec
pusha
sbb
jmp
lcall
mull
cwtl
je
and
das
repnz
andl
dec
movsb
lcall
add
aad
or
pop
scas
clc
std
xor
lret
cmc
fisubs
fidivrl
aad
pop
shll
popf
push
inc
and
rorb
cmp
xor
fwait
xorl
push
lret
enter
pop
cmp
je
jcxz
jmp
sbb
jg
xor
mov
mov
push
out
jg
lret
ss
dec
mov
inc
cmc
out
mov
int3
xchg
aam
fnsave
xor
out
cli
mov
fcompl
sahf
inc
lcall
xor
mov
cld
fwait
ss
lahf
xor
xchg
cmp
push
out
jge
lcall
push
xchg
adcl
xchg
fucomi
xchg
testl
or
jecxz
rorl
jne
mov
das
pop
mov
inc
pushf
jl
dec
lret
sub
sub
fnstsw
movntq
out
sarw
insb
fiaddl
repz
add
sbb
inc
loope
icebp
subl
adc
and
jge
lea
outsb
cmp
scas
shll
nop
cmp
mov
pop
idivl
shl
dec
shl
mov
shrl
xor
sub
adc
mov
jmp
cld
je
xor
lret
rcl
mov
xlat
repnz
add
xchg
jecxz
adc
iret
fidivl
inc
fstps
push
gs
push
lods
pushf
inc
fsubl
pop
mov
fwait
inc
stos
or
xchg
xor
stos
cmpsb
xchg
dec
mov
movsl
cmpsb
in
adc
or
pop
jb
aas
cmp
xchg
aas
fisttpl
pushf
dec
and
hlt
in
sti
ja
imul
repz
popa
leave
int
xor
repnz
frstor
push
push
lea
cmp
iret
sbb
jmp
jmp
inc
aas
iret
das
lods
mov
push
mov
sbb
sahf
sbb
jb
cltd
jecxz
das
lret
or
test
and
mov
mov
pop
cli
sbb
mov
sbb
jno
jg
inc
pushf
addr16
and
es
jl
outsl
ja
or
icebp
imul
mov
scas
xchg
ljmp
pop
or
jmp
inc
loopne
push
dec
ret
outsb
and
and
mov
stos
jbe
sub
xor
lcall
mov
sub
icebp
mov
add
xor
push
mov
scas
data16
fs
das
ds
mov
jb
push
das
xchg
imul
cmc
xchg
loop
mov
std
sar
mov
repz
outsb
pop
loope
jg
mov
sub
popa
mov
sub
xchg
xor
dec
jg
std
jp
xor
ds
pushf
inc
sub
mov
sbb
lahf
mov
adc
xor
mov
js
inc
xor
xchg
dec
ret
loope
sbb
mov
and
fnsave
push
jbe
xor
inc
adc
add
lcall
outsl
cmc
lcall
rcll
divb
push
adc
out
sbb
pushf
xchg
pop
movsb
call
pushf
mov
movsb
ror
aaa
loopne
or
std
adc
cld
pop
pop
sahf
push
mov
shll
shrb
loopnew
cmp
push
push
jae
aaa
in
sti
xchg
daa
aaa
fildl
lret
lock
mov
lods
js
mov
leave
or
fsubl
cmp
leave
xchg
out
sbb
fcmovnbe
mov
sub
and
push
repz
int3
cmp
push
pop
je
mov
sbb
mov
sarl
mov
aas
mov
mov
stos
sub
out
call
dec
or
dec
dec
mov
cld
sti
cli
dec
movsb
lea
add
pop
xchg
pop
mov
jl
mov
outsl
add
sbb
stos
mov
pop
cmpsb
stos
sahf
stos
fabs
daa
enter
mov
mov
call
out
xchg
mov
cmp
out
jbe
jne
jp
cmp
ja
shrb
insb
adc
mov
aas
out
les
lcall
lds
std
cmp
stc
or
mov
adc
dec
jge
test
jecxz
fwait
adc
mov
and
lret
lahf
add
insb
mov
icebp
decl
dec
add
iret
popa
mov
imul
cwtl
shlb
or
hlt
cmp
xor
adc
inc
ja
push
mov
lea
sarb
insb
cmpsl
sub
das
mov
mov
movsl
fwait
xor
mov
and
mov
lret
mov
pop
jno
pop
ja
sar
jg
imul
mov
xor
scas
out
mov
xor
ds
int
pushf
shll
jmp
cmp
cmp
cmpsb
push
xlat
mov
call
out
outsb
jne
mov
scas
fldenv
icebp
icebp
jns
dec
sub
decl
das
shrl
movsl
aad
loop
cmp
pusha
push
ja
in
cltd
inc
fisubs
jecxz
fwait
nop
and
and
addr16
mov
xor
insb
push
xchg
cs
mov
xchg
cwtl
lret
orl
clc
out
mov
mov
clc
pushf
daa
mov
push
loop
repz
sti
mov
inc
sti
mov
out
mov
inc
mov
mov
add
xchg
outsl
lret
sbb
jo
jle
jbe
lahf
inc
in
push
pushf
hlt
in
jmp
ja
add
jne
mov
loopne
je
and
dec
lock
pop
outsb
adc
fldcw
fmul
stc
pop
stos
dec
jmp
add
mov
call
out
xor
pop
mov
out
cld
fidivrl
jmp
insl
push
dec
xchg
dec
mov
pop
jecxz
sahf
sti
cli
lret
stc
arpl
push
inc
push
jne
fildl
testb
and
gs
pop
in
loopne
jnp
pop
fisubrs
ja
sti
or
mov
mov
hlt
push
lods
dec
sti
inc
push
or
mov
mov
jo
cmp
aam
je
outsl
add
cli
inc
int3
clc
jmp
cmp
notl
jg
add
fwait
mov
call
int3
test
sbb
decl
into
aam
int
fidivrs
int
adc
not
jge
jl
jp
aaa
int3
mov
fwait
and
mov
incl
lods
popa
and
push
mov
hlt
in
ret
cmp
and
sti
repnz
adc
notb
neg
test
ret
fildll
mov
loop
inc
jne
jbe
test
cld
daa
xchg
int
xchg
repnz
repz
jecxz
lods
call
cli
add
out
inc
daa
scas
idivb
add
mov
popa
mov
and
mov
iret
jo
lahf
jae
das
roll
inc
sub
in
adc
fadd
outsl
clc
pop
ss
lock
lahf
cmp
mov
out
mov
jg
push
sub
jb
pop
adc
sbb
jo
pop
and
je
imul
xor
ds
cmpsl
xchg
mov
int
jnp
mov
aaa
inc
frstor
and
and
push
and
shl
sbb
sbb
scas
stos
fwait
cmp
leave
lods
lcall
mov
ficomps
fbstp
jmp
jecxz
pop
lds
imul
insl
push
mov
xchg
dec
jp
push
repz
mov
jmp
movsl
test
pop
scas
imul
aaa
jb
xor
je
test
stos
lahf
push
lret
psllw
xchg
dec
outsl
mov
add
shlb
inc
fildll
inc
loope
xor
in
mov
imulb
and
sahf
js
arpl
int
mov
cmpsb
xchg
sti
jnp
cmp
fistl
lock
jae,pt
stos
roll
jo
sbb
xchg
clc
xchg
pop
xor
mov
push
push
sarl
clts
cmp
std
adc
jge
jmp
pop
ja
dec
xchg
iret
jmp
stos
xchg
mov
ret
in
sbb
cmp
mov
js
outsl
out
cli
xchg
jnp
scas
and
adc
and
mov
mov
lcall
je
test
js
inc
inc
ret
mov
mov
inc
aas
xchg
inc
jmp
xor
cmpsl
sahf
xor
inc
jl,pt
out
imul
jne
imul
jmp
mov
inc
cmp
les
stos
mov
xor
push
lds
je
into
inc
fisubrs
icebp
jmp
push
in
in
mov
fdiv
and
in
test
jbe
adc
and
int3
adc
and
mov
lret
stc
mov
pop
nop
jnp
jge
inc
jle
rcrl
fistpl
mov
push
aas
push
std
jns
push
adc
je
mov
pop
jno
addb
and
in
aas
add
mov
stos
pop
into
in
jl
test
jbe
mov
sbb
sub
fdivr
fists
jecxz
jmp
mov
cmp
mov
push
cli
rorb
fs
xchg
jmp
mov
dec
or
dec
fstl
ret
xchg
cmp
push
jne
stos
xor
iret
jle
jge
adc
adc
call
cmpb
repnz
dec
adc
push
push
icebp
out
push
fs
int
fisubs
stc
lock
mov
setge
aaa
shrl
in
fwait
pop
cltd
movsb
mov
pop
jmp
pop
pop
out
out
xor
fdivp
call
stos
insb
xor
addr16
das
push
cli
mov
lcall
adc
jae
or
in
insl
lcall
jl
xchg
jne
mov
cltd
mov
xchg
and
movsl
iret
insl
dec
push
jle
dec
xchg
inc
pushf
jl
inc
pusha
std
ret
fwait
insb
adc
push
test
sbb
jle
fidivrl
pop
shlb
xor
jecxz
mov
xor
out
fcompl
sub
sub
das
push
mov
sub
movsl
mov
aas
sbb
cmpsl
stos
and
stos
or
xchg
loopne
jbe
fs
scas
add
xor
xlat
jge
shrl
cs
scas
aam
mov
aas
dec
loope
xor
mov
inc
cli
sub
ret
cwtl
insl
cmp
pop
pop
or
clc
xchg
and
jnp,pn
stc
xchg
xlat
pop
xor
das
push
push
andl
xchg
dec
and
mov
js
sub
in
cmp
push
icebp
push
cmp
xchg
push
mulb
cmpsl
pop
xlat
or
idiv
in
fstl
mov
pop
mov
mov
jnp
fldl
dec
ret
xor
jl
aaa
lret
in
lock
push
mov
jmp
ficoms
cld
sub
adc
test
inc
mov
std
jecxz
addr16
pop
ljmp
add
mov
jge
lret
fists
movsl
pop
xchg
dec
and
out
mov
lahf
in
cmp
outsl
stos
mov
in
push
cmp
int3
insb
cmpsb
test
cmpb
scas
loop
repz
xchg
dec
ljmp
mov
or
movsl
outsb
mov
test
fsub
xorb
bound
pop
pop
test
in
mov
aad
jle
or
aad
sbb
repnz
jb
or
xor
ret
mov
scas
jg
push
push
insl
test
xchg
cli
mov
sahf
popa
bound
and
and
fwait
sbb
cmp
rcrb
aaa
dec
sub
out
xor
mov
inc
jge
std
cmc
mov
xor
or
jl
inc
dec
cld
mov
fbld
sub
cld
mov
mov
clc
adc
jge
xchg
nop
iret
mulb
mov
cs
push
imul
decl
mov
incl
push
aas
sahf
xchg
cmp
lahf
sub
imul
inc
fnstsw
xchg
sbb
mov
mov
or
in
adc
mov
rorl
lods
mov
fs
inc
or
int
mov
mov
pushf
and
dec
iret
dec
inc
gs
cmp
das
arpl
popf
lret
pop
xor
ja
xchg
inc
and
fnstsw
fwait
xor
js,pn
xor
lea
cmp
mov
mov
fistps
arpl
cs
and
out
insb
cmp
stos
aas
jg
xorl
cmp
adc
xor
ljmp
xchg
xor
jl
sbb
lcall
in
mov
xchg
inc
sti
jnp
aad
decl
add
pop
test
out
cwtl
inc
leave
shll
int
stos
xchg
pop
xchg
mov
in
movb
add
lock
jp
adc
ss
push
adcl
pop
aad
fadd
pushf
ret
jno,pt
aaa
cmp
jmp
pop
cmp
std
maxps
mov
add
ss
std
xchg
jmp
das
xchg
or
testb
loope
sbb
push
cwtl
pop
mull
dec
adc
jle
and
xchg
cmp
push
mov
push
out
aam
mov
mov
mov
mov
push
out
mov
inc
in
and
cltd
stos
dec
jbe
add
pop
pusha
call
jl
mov
jp
mov
dec
cmpsb
mov
xor
andb
adc
xor
inc
mov
cmpsl
fdivrs
push
fst
fmul
ficomps
imul
test
arpl
out
jne
xchg
mov
cmp
std
jg
mov
sti
repz
sahf
cld
sti
cld
loopne
mov
sbb
mov
sub
repz
dec
loope
pop
inc
push
roll
in
outsb
sti
inc
pushl
jmp
xchg
std
or
ljmp
std
vpshad
cli
xor
mov
cld
jmp
pop
xchg
jbe
ret
jg
dec
div
dec
jp
inc
imull
xchg
fidivrs
cmc
out
sbb
xchg
mov
in
mov
fwait
loop
gs
lods
mov
jae
cld
popa
mov
test
inc
lds
cwtl
mov
in
jo
xor
shrl
and
cmc
add
outsb
scas
lods
test
out
jns
out
mov
inc
test
xchg
adc
jbe
aaa
mov
das
fsubrp
rcrb
and
cmpsl
into
mov
sub
in
ds
fnstcw
cmp
aaa
adc
mov
jns
and
pusha
inc
loopne
clc
movsb
mov
push
push
xchg
cs
repz
mov
mov
sub
push
or
ret
adc
outsl
inc
fidivrl
insl
ret
and
stos
arpl
push
cmpsl
popf
mov
ds
jle
ficoms
xor
sbb
stos
jmp
xchg
xor
sbb
mov
jns
out
push
xor
xor
lret
ficoms
dec
ja
push
daa
test
xchg
test
fs
loopnew
jg
scas
les
sarb
aaa
adc
jns
cmp
ret
add
inc
lods
jecxz
sahf
or
sbb
push
dec
popf
jns
js
lock
mov
xchg
xchg
ja
jge
inc
add
imul
jle
push
mov
dec
in
sub
and
xorb
add
pop
leave
mov
jg
jnp
inc
por
aaa
repz
xchg
pop
mov
and
std
jo
mov
cltd
pushf
out
loop
dec
setg
iret
or
rolb
cmp
push
inc
call
es
dec
aad
popl
push
ja
adc
jmp
jecxz
std
outsl
mov
fdivrs
in
add
js
dec
aas
lret
sub
cld
stc
dec
mov
lret
pop
loopne
inc
gs
jb
cmp
bndstx
jb
pop
fldt
cmp
rcrb
mov
test
add
and
inc
cwtl
lahf
adc
lods
xlat
imul
jb
std
dec
aam
int
jmp
mov
notl
aaa
notb
fmuls
adc
jmp
push
pop
xchg
mov
icebp
xor
inc
in
icebp
sar
mov
repnz
or
out
push
movsb
out
xor
sub
sarl
jmp
clc
pop
cmp
inc
jnp
es
std
jbe
lea
sbb
adc
cld
xchg
and
mov
mov
jle
daa
in
push
popa
cli
add
sbb
pop
imull
inc
js
mov
mov
das
cmp
inc
jnp
repz
pop
dec
repnz
mov
roll
adc
mov
pop
mov
pop
cmp
xchg
imul
je
xor
dec
jnp
cmpsl
scas
jns
in
xlat
cmp
in
fdivrl
push
pushl
xchg
out
ja
jns
aas
push
aaa
mov
and
xchg
fidivl
push
in
clc
push
test
ja
lret
outsb
incb
mov
mov
in
enter
jb
popf
int
lret
mov
int
lret
or
cmp
jmp
push
jmp
and
dec
shl
leave
mov
xor
std
cmp
mov
or
inc
jbe
iret
mov
jae
mov
pop
es
rcl
xchg
clc
cltd
inc
cmc
mov
and
mov
pop
sti
lods
scas
jge
push
mov
lock
test
sahf
aam
jo
in
mov
cmp
pop
add
jp
lret
mov
cmp
add
jg
arpl
sub
lods
mov
mov
pop
adcl
mov
rorb
aad
mov
sbb
rolb
mov
shrl
test
jno
insl
into
and
scas
jp
int3
lcall
into
add
fisttpl
push
out
and
cmp
xor
repnz
lea
push
push
out
jp
push
xlat
jnp
xorl
jne
cmp
jg
pop
xorl
gs
fcomip
imul
inc
dec
pop
jo
idivl
or
testl
push
lahf
into
push
imul
stos
test
pop
inc
repz
cltd
or
enter
int
xor
or
inc
cmp
sbb
mov
imul
cltd
sar
pushf
sub
jge
sbb
leave
lock
xor
cmp
add
inc
pop
cmpsl
das
int3
mov
repz
scas
mov
mov
out
sar
or
mulb
mov
aam
in
cli
mov
xor
dec
scas
call
leave
ss
ret
int
sbb
test
imul
xchg
xlat
aad
movsb
cld
enter
jae
aas
mov
sbbl
sbb
flds
fsubrs
mull
cld
dec
cmpsb
iret
rolb
out
inc
push
lock
inc
jae
movsl
fbld
jae
inc
shll
nop
push
scas
ret
push
push
int3
lcall
xchg
ja
adc
in
lods
xlat
mov
inc
push
sub
pop
inc
pop
mul
push
out
gs
push
pop
mov
sub
lcall
sbb
rep
jle
lods
test
mull
notb
ljmp
stc
sbb
pop
jecxz
mov
outsb
ljmp
loopne
pop
dec
fistpll
loopne
out
out
int
enter
xchg
mov
and
jmp
repz
push
xor
imul
add
iret
rcrb
mov
lock
jp
mov
cmpsb
xor
sarl
pop
jmp
dec
and
fsubr
shll
popf
pop
xchg
adc
mov
xor
add
cmp
jae
aad
mov
mov
and
adc
push
cmp
mov
ja
jecxz
xchg
jge
mov
sarl
sbb
pop
jne
lahf
in
test
enter
out
in
add
mov
frstor
cld
xchg
lcall
inc
dec
aad
and
mov
out
add
out
mov
fwait
mov
add
hlt
or
lods
xchg
ja
pop
fsub
push
pop
ret
in
sub
dec
scas
adc
mov
jnp
xchg
jle
mov
fdivrl
xchg
rcr
sbb
adc
sbb
or
rorl
jp
js
lods
inc
push
lea
scas
dec
mov
push
lahf
sbb
stos
adc
in
ljmp
adc
call
shlb
ret
pop
imul
daa
loop
es
mov
pop
or
cmp
pop
lods
andl
mov
add
in
lods
andl
in
lcall
adc
and
cmp
push
dec
fstpl
bnd
jg
cmp
push
pop
push
xor
cmp
cmp
pop
das
inc
iret
or
push
ret
cmp
icebp
pusha
jge
shll
cmp
push
cli
lods
sbb
stc
sbb
test
sub
jge
or
inc
adc
inc
out
rcl
aam
ds
imul
out
or
in
cmpl
imul
in
fwait
xor
gs
sbb
and
in
pop
cmp
mov
mov
mov
sub
push
gs
loop
push
out
popf
int3
stos
js
cmp
xchg
lock
loopne
jns
js
or
xor
mov
adc
cmp
call
inc
imul
std
mov
lods
mov
xor
or
int3
sahf
inc
adc
lds
addl
shlb
mov
sti
out
cld
dec
xchg
cmp
aam
aam
shr
stos
lahf
ror
shl
addr16
cmc
aas
inc
fisubrl
cmp
jecxz
and
jmp
adc
xchg
lods
jp
arpl
loopne
mov
rcll
mov
loopne
jg
dec
lds
jns
and
pushf
adc
or
rcrb
outsl
sub
les
mov
fildl
sbb
ja
es
or
dec
int
xchg
daa
stos
cmp
add
xor
jbe
jno
pop
mov
cs
out
pop
pop
pop
sbb
fiaddl
sub
je
xchg
push
or
out
cs
xchg
inc
pop
cli
dec
roll
loope
cmpsl
stos
lahf
lds
jno
sub
call
jg
sbb
dec
das
popf
inc
aas
jecxz
int
inc
mov
jo
dec
or
inc
jbe
cltd
jns
dec
sbb
daa
xor
sti
inc
xchg
stos
dec
cmp
xchg
fildl
cmp
es
mov
add
xchg
aas
mov
sub
sub
in
and
jnp
divl
mov
leave
scas
pusha
nop
mov
dec
mov
xor
pop
packuswb
cltd
xor
into
inc
mov
pop
jo
sub
cmp
xchg
inc
dec
mov
mov
cli
ret
xlat
push
and
loopne
push
jmp
or
hlt
xor
cmp
mov
out
jecxz
inc
repz
fiadds
pop
por
cli
jp
ret
jae
fwait
inc
lcall
xor
adc
lcall
mov
enter
out
dec
push
das
cli
orl
cmp
mov
dec
leave
mov
ret
sahf
mov
mov
adc
cmpsl
lcall
xlat
aaa
rcll
loopne
xor
or
cld
loope
aas
test
ficoms
lods
into
repnz
xchg
inc
jmp
dec
dec
repnz
aas
cwtl
xchg
adc
loop
jbe
sbb
mov
mov
push
or
or
inc
push
pop
movsl
pusha
xchg
and
lcall
out
int
mov
out
cmp
idivl
subl
pushf
cmpsl
mov
adc
lahf
inc
mov
movsb
inc
shrl
out
imul
inc
pop
lods
mov
or
xlat
mov
das
jmp
jg
imul
ss
and
inc
pusha
pop
in
xor
or
in
dec
popf
jl
sahf
and
push
sub
and
jge
pop
jb
out
pusha
jge
mov
cli
rolb
int3
pop
out
shr
cld
dec
adc
decb
out
popf
scas
xchg
pop
ss
into
out
mov
repnz
jae
cmp
xchg
inc
ret
xchg
cmpsl
xor
fldt
shlb
in
lea
and
stos
testb
dec
inc
imul
push
sahf
jle
shlb
sahf
jae
sbbb
cmpsl
popf
or
inc
test
mov
idivb
nop
mov
iret
inc
popa
jg
add
lret
sbb
jae
mov
sbb
pusha
mov
dec
jbe
pop
je
out
repnz
mov
ja
subb
mov
xor
xchg
sbbl
pop
int
fwait
cmc
popf
or
xchg
or
outsl
scas
js
cltd
movsl
cld
push
iret
add
dec
std
sbb
insb
xlat
jne
lahf
cld
push
fidivrs
int3
xchg
push
fildl
popf
dec
lds
mov
aas
cmp
mov
testb
test
push
and
loopne
sbb
leave
test
mov
dec
mov
out
jae
pop
mov
jo
insb
push
mov
lret
add
ds
pop
add
adc
jecxz
add
xor
test
cwtl
les
mov
pop
and
adc
addr16
and
rcrb
cmp
pop
adc
imul
subb
xor
gs
add
adc
hlt
push
jge
lret
mov
sbb
cmpsl
cmpb
mov
mov
push
xchg
shll
aam
rclb
mov
rolb
outsb
loop
sub
jb
mov
insb
xlat
jb
out
gs
pop
xchg
cmpb
or
out
mov
loopne
repnz
lahf
cmp
push
or
dec
mov
sahf
and
xchg
sbb
int
mov
cmpsl
jns
mov
jae
out
pop
or
bnd
pop
mov
outsl
ss
call
pop
sub
add
jl
cmp
ret
mov
cld
shr
add
outsb
and
into
into
mov
sbb
cmp
mov
movsb
fidivrl
scas
rcll
out
sbb
jmp
repz
adc
xchg
mov
xor
mov
sbb
mov
push
imul
add
ret
pop
out
jbe
jb
icebp
stos
sarb
out
xor
mov
sbb
popa
ljmp
sub
out
xor
add
lods
mov
sbb
les
mov
sbb
jecxz
jbe
test
js
loop
lret
sbb
rol
enter
sti
jb
in
and
push
push
xor
shlb
dec
xchg
jae
sti
aad
and
adc
or
sbb
aas
xchg
aaa
and
fistpll
add
divb
push
jg
jecxz,pn
rorb
inc
jbe
rcpps
push
adc
or
xchg
shl
test
test
scas
push
xchg
jg
jns
mulb
cld
xor
mov
push
jb
sbb
adc
js
inc
pop
mov
xchg
mov
adc
push
or
mov
or
xchg
lods
pop
mov
in
mov
cltd
fwait
jno
shlb
jo
mov
sub
sub
xchg
in
mov
pop
add
push
mov
mulb
mov
push
xchg
or
pop
ss
fistpll
lea
mov
mov
cmp
jnp
push
orl
xadd
sub
jne
push
sub
mov
test
push
mov
pop
or
scas
repnz
rolb
jae
push
mov
jb
mov
repz
scas
repnz
mov
gs
je
and
lods
rolb
out
jmp
repz
es
push
dec
rcl
and
sbb
sub
xor
add
xchg
into
pop
std
adcl
insb
mov
out
es
mov
sbb
repz
mov
pusha
mov
mov
clc
mov
add
sbb
pop
aas
push
loop
jae
cld
test
fstl
inc
xchg
cwtl
js
and
aad
mov
dec
sbb
push
jne
xchg
popf
call
push
gs
ds
pop
repz
jge
inc
dec
lret
sbb
clc
int3
add
loop
sub
fisubs
mov
inc
or
adc
jl
lds
sub
leave
or
cli
sbb
idivl
jne
or
insb
movsb
outsl
fnstenv
adc
push
fadds
lea
mov
xchg
xchg
stc
aad
test
cli
mov
aam
xchg
repnz
test
cwtl
xor
jp
loope
xchg
out
stos
addr16
stos
mov
lcall
subl
xor
inc
dec
test
cs
inc
cwtl
es
das
clc
testl
lret
stc
mov
int3
cmp
popa
int3
jge
push
jmp
dec
jmp
push
jecxz
icebp
dec
mov
mov
stc
jp
leave
scas
pop
or
cmpsb
cltd
mov
cmpsb
fdivrl
xchg
dec
stc
stos
mul
jmp
in
jae
mov
cmp
jmp
and
loop
test
xchg
in
push
repnz
cli
call
xlat
fsts
xor
repz
jmp
pop
and
ljmp
test
fdiv
dec
arpl
stos
jecxz
out
testl
mov
cmp
cld
jns
fdivrl
adc
mov
add
mov
iret
test
out
inc
mov
or
mov
push
pop
loope
mov
ja
jmp
psraw
pop
inc
and
cmpsl
pop
cwtl
push
scas
sub
xchg
arpl
xchg
sub
retw
cmc
repz
lret
jge
mov
sahf
int3
xchg
fbstp
jae
test
jmp
dec
or
pop
jmp
mov
add
fisttpl
insb
loop
cmc
dec
vmovdqu
addr16
mov
mov
adc
and
xor
je
sti
add
sbb
sahf
mov
adc
sarb
lret
cli
loop
idiv
cmpsb
jmp
fwait
xor
inc
jnp
int
cmp
and
out
movl
mov
out
mov
xor
cmp
push
mov
dec
fdivs
mov
scas
and
adc
fistps
pop
xor
mulb
movsl
inc
xchg
cmp
ljmp
popf
inc
cli
repnz
jae
push
sbb
cmp
int
pop
adc
sbb
out
add
fstpt
cs
inc
and
jl
dec
out
iret
jge
movsl
jnp
ds
or
pop
shll
movsl
int3
das
and
xchg
xor
pop
push
adc
jns
mov
repz
push
hlt
jns
dec
push
ds
push
sub
sahf
pop
es
int3
push
jno,pt
outsb
jl
push
inc
jg
fsubs
out
std
mov
xlat
push
rcl
mov
pusha
dec
cmp
jge
inc
cmp
push
and
cmpsl
sub
push
pop
shlb
and
out
fadd
lret
repz
loope
cmp
mov
hlt
aas
dec
aas
ret
add
stos
dec
aam
mov
je
cmp
mov
add
shll
push
adc
fidivrl
jmp
movsl
fwait
call
ds
loop
dec
aam
dec
inc
sub
in
in
dec
add
cmpl
ds
popf
sub
xor
ja
and
sbb
cmpsb
inc
mov
add
fildl
push
pusha
and
cmp
mov
inc
cmp
loop
fisubrs
stc
pushfw
filds
scas
jp
mov
xchg
lods
icebp
sarl
jo
jp
add
not
mov
jne
cmp
testb
pop
sbb
lcall
addr16
jmp
repz
loopne
xor
mov
repz
fldpi
rep
idivb
inc
outsl
xchg
les
das
das
mov
sub
inc
stos
dec
iretw
out
push
bound
mov
pusha
aas
sbb
sarl
mov
pop
or
jbe
mov
and
repz
insl
lret
cld
lea
xor
repz
push
dec
push
insb
jp
mov
test
test
and
daa
cmp
in
negl
shll
scas
pop
clc
xchg
bound
mov
out
iret
stos
xlat
pop
mov
iret
lahf
shl
rclb
call
mov
test
jg
mov
xor
imul
sub
loopne
or
mov
es
iret
cmp
stos
adc
out
insl
xor
and
mov
test
mov
mov
imul
inc
call
repz
xorb
sbb
cmpsb
ficompl
jo
pop
or
movsl
mov
ss
cmp
sbb
mov
push
cmc
sub
int
call
ljmp
ret
adc
dec
cld
inc
xchg
repz
and
xorl
ds
push
cwtl
pop
sub
movsb
sbb
push
rcl
loopne
out
arpl
aam
ss
pop
sub
xor
xchg
insl
movsl
lock
filds
xchg
cmp
xor
cmpw
mov
fdivrl
mov
sbb
fldenv
loop
push
and
stos
scas
sub
loope
out
cmp
mov
iret
int
xchg
ja
in
std
dec
hlt
out
js
ss
outsl
push
pusha
push
xor
xor
in
xlat
xor
pop
cmpsb
dec
mov
jno
adc
call
leave
mov
push
sbb
imul
sub
in
jo
aam
icebp
mov
add
sbb
mov
jl
and
popf
jmp
fildll
sti
iret
mov
xor
fistpll
xor
xlat
shl
cli
fsubl
mov
sbb
data16
pop
fdivl
in
jnp
inc
and
cmpsl
in
jo
mov
sub
cmp
pause
shl
pop
mov
repnz
mov
push
fcomps
test
stc
pop
sbb
pop
xchg
std
ret
or
pop
repnz
cmp
pushf
pop
enter
por
xor
xchg
add
imul
int3
loope
lds
mov
clc
lret
cli
mov
or
dec
lahf
lods
ret
addr16
repz
mov
loopne
cmpsl
fsts
sahf
lds
in
inc
and
loope
inc
mov
or
inc
pop
or
out
add
inc
sahf
repz
and
in
dec
push
sbb
outsl
mov
ja
stos
in
adc
iret
inc
popa
ret
outsb
insb
sub
mov
dec
push
cmp
popa
mov
pop
pop
sub
cmp
scas
xchg
or
js
aaa
add
out
jnp
lds
lods
data16
xchg
jmp
sub
and
xlat
inc
daa
lods
mov
jg
inc
mov
push
jmp
cltd
ljmp
jle,pn
xor
jge
jmp
sub
bound
outsl
jo
fisttpl
xchg
and
and
mov
imul
or
xchg
fsubr
dec
mov
mov
mov
into
xchg
mov
inc
and
repz
xor
das
out
push
imul
jne
ds
pop
mov
cmc
mov
mov
xor
mov
test
mov
mov
mov
xor
xchg
push
gs
xor
jo
pop
lcall
dec
loopne
shll
test
popa
push
sti
mov
dec
imul
je
scas
mov
cmp
fldl
repnz
dec
das
stc
scas
hlt
shrb
and
daa
mov
enter
fcomip
rcr
jbe
and
leave
jmp
adc
push
loope
mov
out
adc
add
jmp
lods
insb
mov
int
repz
lahf
mov
dec
mov
popa
mov
mov
mov
push
dec
cmpsb
mov
popf
mov
mov
dec
das
xchg
std
dec
dec
mov
ret
fisubs
scas
imul
clc
push
sbb
fldenv
cmp
jae
or
pop
enter
inc
push
incl
std
les
cmpsb
jmp
daa
out
cmpsl
cmp
mov
loopne
mov
popf
or
add
std
shl
jle
dec
mov
lods
dec
adc
sbbb
push
cmp
aaa
xor
out
rcll
adc
xlat
or
jb
aad
cmpsb
shrb
stos
xlat
xor
sub
fs
add
xor
icebp
or
ds
jb
shlb
xor
push
aad
lret
imul
rol
jo
into
sbb
mov
ja
in
lahf
out
addr16
jns
test
iret
adc
int3
fnstcw
mov
sahf
addr16
addr16
lods
cmpsb
fdiv
add
scas
push
insl
cmpsl
decb
jle
mov
adc
cli
stos
nop
ja
xchg
std
xchg
xlat
cli
push
push
aaa
ja
push
sub
xchg
out
dec
or
push
mov
cmp
std
xor
ljmp
out
test
jae
cmp
in
seto
imull
fbstp
adc
cwtl
fists
loope
xchg
mov
mov
lret
mov
nop
xchg
arpl
js
lods
cs
aaa
fnstcw
sbb
cltd
cmp
mov
iret
lcall
xchg
ficoml
mov
xor
or
loop
pop
jne
mull
js
popf
cli
jge
xchg
lret
inc
dec
mov
cli
pop
add
repnz
jl
sub
fnstenv
jmp
aam
aaa
dec
ljmp
int3
fs
push
sbb
xor
add
jp
loope
in
pop
pop
das
loopne
ds
insl
lahf
sbbb
rcrl
inc
fistps
push
test
out
dec
push
and
mov
mov
jo
pop
insl
xor
in
jmp
inc
rcll
jle
stos
ds
cld
mov
add
hlt
inc
push
mov
fnstenv
shll
test
jb
mov
add
push
mov
mov
das
je
jbe
xchg
sti
xor
cmc
xor
insb
jnp
movsl
ficompl
scas
rcll
lcall
aas
lods
sti
or
repnz
dec
push
jmp
pop
pop
sahf
pop
bsf
push
sbb
xor
inc
imul
cld
rorl
inc
inc
and
aam
sbb
mov
shl
out
push
adc
mov
orl
ret
mov
pop
mov
xchg
mov
lods
mov
mov
leave
push
dec
sbb
jnp
and
in
fists
aaa
push
mov
inc
jge
ljmp
sbb
xor
cld
mov
popf
incb
sbb
inc
ja
or
xchg
jns
pop
loope
dec
fcompl
or
aam
sbb
lds
cmpl
mov
mov
popa
mov
mov
xor
rolb
and
mov
cmp
arpl
push
cs
cmp
lret
sbb
sub
jno
ret
data16
mov
arpl
pop
in
sbb
xchg
mov
fwait
stc
jl
test
push
pushw
mov
ja
popf
out
out
mul
xor
xor
pop
mov
cmp
pop
sbb
mov
or
dec
mov
pop
test
enter
cli
lahf
subl
jbe
mov
lock
imul
leave
pushaw
jbe
gs
stc
dec
jle
shll
fcomi
push
leave
jmp
jne
lret
stos
pop
xchg
xor
jae
aam
pop
jno
test
mov
cmpsl
sbb
jp
jnp
or
xor
mov
cli
mov
sarb
sti
ja
dec
mov
lods
xor
ja
mov
out
mov
es
xor
out
negl
lods
dec
mov
js
xor
repnz
mov
addr16
dec
faddl
add
dec
fildll
je
jp
pop
jo
lea
pushf
adc
sub
jns
adcl
loop
aaa
imul
test
jns
es
lret
adc
mov
test
aaa
aas
jb
insl
cmpsb
xchg
jp
scas
xchg
mov
lahf
cmpsl
lods
jmp
clc
insl
and
jecxz
mov
xchg
push
xchg
add
mov
test
bound
xor
cli
fs
std
mov
mov
push
or
pop
dec
cmpsb
xchg
lods
sbb
addb
iret
dec
aaa
mov
je
clc
test
rolb
ss
mov
enter
dec
cmp
es
out
pop
or
hlt
pushf
mov
scas
outsb
or
lcall
stc
dec
outsb
rcrb
hlt
pop
andb
dec
mov
add
pop
leave
pop
test
or
pushl
repnz
outsl
imul
dec
dec
outsl
into
jbe
push
sub
mov
xor
inc
mov
imul
jbe
jb
lret
jl
cmp
jg
adc
xchg
repz
mov
adc
xchg
dec
push
inc
jl
lock
cli
rcrb
divl
fwait
lahf
jle
out
pop
mov
mov
mov
ss
sub
push
jo
aas
arpl
movsl
addb
mov
in
cmp
rorb
xchg
stos
and
dec
fidivrs
push
pop
mov
shrl
add
enter
xor
cmp
nop
arpl
cmp
mov
int
push
push
leave
mov
add
add
add
imul
cmp
adc
fs
arpl
cmpsb
sub
xchg
xlat
fwait
aas
adc
or
addr16
sub
incb
pop
pop
mov
pop
mov
add
jae
add
outsl
inc
rcrl
add
popf
repnz
pop
fldl
xor
lods
idivl
cli
jmp
sbb
subb
pop
push
aaa
ja
lock
jnp
xchg
xchg
cs
insb
lret
add
imul
clc
mov
test
sarl
jl
mov
addr16
in
mov
push
ret
shl
mov
and
sub
in
add
xor
mov
xchg
cmp
std
outsl
xor
cld
add
ret
lea
cmpsl
pusha
fisttps
rol
mov
testl
xchg
push
dec
test
dec
inc
cs
mov
xchg
sbb
stc
in
leave
jnp
add
movsb
lahf
push
out
sub
jle
test
mov
int3
fwait
pop
sti
pop
repz
xchg
inc
cli
adc
dec
lds
leave
adc
outsb
sub
lcall
jmp
dec
mov
mov
xlat
lods
dec
ret
mov
lret
push
jno
outsb
mov
bsf
jbe
sti
fidivl
adcb
mov
decl
mov
push
aad
sbb
insb
stos
mov
sub
jne
xor
imul
push
cmpsb
cld
cmp
test
mov
jl
mov
adc
test
xor
fnstcw
lret
mov
mulb
mov
stos
js
inc
bound
ret
mov
push
in
gs
sbb
add
jnp
out
frstor
adc
in
pop
pop
add
xchg
sbb
jb
mov
jmp
adc
jge
data16
mov
cmpsl
sbb
jmp
mov
cli
mov
aas
jne
sub
dec
pushf
popa
and
mov
dec
mov
mov
dec
xor
inc
jnp
sarl
adc
push
push
jno
sar
add
sub
popf
mov
fdiv
xor
pop
mov
repz
jbe
mov
adc
popa
jmp
cmp
clc
mov
dec
call
fisubs
lret
cmp
dec
test
push
sbb
pop
insb
adc
fs
dec
cmp
mov
lahf
mov
fadds
mov
cmp
jmp
scas
negb
or
lret
dec
cli
xor
xchg
sbb
push
inc
jle
loope
mov
jle
leave
xlat
xchg
insl
add
jns
js
sarl
add
cld
ss
dec
int3
cmp
aaa
imulb
stc
sbb
xchg
scas
int3
ficompl
dec
inc
fnstcw
xchg
jmp
aam
sahf
fiadds
enter
incl
jmp
mov
xchg
jbe
jge
js
insl
pop
dec
pop
fcomps
fldenv
cld
xchg
push
sub
bound
fbstp
jle
adc
cld
roll
test
sti
push
xchg
pop
push
or
dec
push
scas
adc
sub
stos
cmc
push
push
mov
enter
jo
int3
icebp
mov
call
xor
jbe
cmpsb
sahf
cli
cli
inc
cmpsb
ficompl
inc
or
xor
hlt
pop
dec
inc
sub
add
or
xor
jmp
imul
add
xchg
pop
dec
mov
or
cmp
ja
js
jo
mov
mov
xchg
les
fcoml
hlt
ss
xchg
scas
cli
mov
stc
sti
popa
sbb
neg
jle
insl
mov
std
xchg
idivl
lahf
arpl
in
lahf
fimuls
pushl
ja
lea
jge
aam
js
jmp
inc
mov
xchg
and
mov
pop
sub
mov
sub
jns
adc
inc
push
xlat
jbe
pop
xlat
pop
out
sar
xor
test
and
add
std
cmpsl
int3
push
sbb
ss
addr16
mov
in
add
mov
inc
imul
popf
mov
jnp
xlat
imul
dec
negl
iret
jl
lds
sbb
sahf
push
mov
mov
mov
push
mov
cli
lods
mov
js
test
lods
clc
fsubr
xor
pop
cmp
ret
sbb
xchg
test
xor
xchg
mov
adc
es
movsb
popa
adc
mov
fists
lock
jnp
enter
pop
testb
ds
push
fwait
lods
les
mov
xor
pop
cmpsl
aad
repnz
jb
subb
lahf
sub
or
mov
or
pop
addl
insb
dec
pop
js
aas
pop
iret
sub
push
leave
xchg
pop
call
dec
mov
or
lods
sub
sub
sub
iret
add
mov
mov
gs
sub
ja
mov
or
pop
loop
out
add
pop
stos
popa
fimull
mov
xchg
fwait
fs
adc
cmp
cmpsl
lret
xor
fwait
and
jp
jge
adc
or
push
mov
std
dec
mov
mov
popf
add
sti
shrb
fs
cs
test
jmp
aad
lcall
lds
ja
xor
or
imul
pop
mov
dec
xchg
in
rorb
mov
sti
sub
out
clc
inc
sub
mov
or
lahf
mov
jmp
jne
sbb
or
sbb
cmp
sub
sti
cmpsb
dec
sahf
aaa
xchg
adc
sbb
xor
jo
mov
test
popa
in
inc
ljmp
mov
xor
icebp
push
push
sbb
mov
int3
outsl
add
fnsave
movsb
cld
push
sahf
pop
jo
hlt
scas
rcr
jno
xlat
or
mov
pop
lret
or
outsb
sbb
shrl
cmpsb
iret
jae
clc
fadds
mov
fxam
lock
subb
aam
xchg
aam
and
loope
add
hlt
cmp
mov
xor
es
pop
cld
or
bnd
pop
lods
mov
movsb
in
data16
pusha
loope
or
std
jmp
push
sub
push
loopne
out
push
pop
loope
mov
test
jg
sub
pushf
aam
popf
pop
sub
lfs
aas
notl
fcoml
js
inc
sbb
inc
lock
pushf
mov
mov
jg
das
int
call
dec
dec
std
add
les
jmp
push
das
cmp
or
dec
pop
in
dec
cmp
push
fisttpl
xchg
dec
push
mov
into
or
ja
and
inc
jo
pop
mov
loop
cltd
popa
fisubs
test
dec
movsb
iret
mov
subb
add
xor
mov
adc
out
or
test
push
jmp
bound
ret
lret
push
test
sub
pop
in
mov
jp
daa
mov
add
mov
je
mov
filds
mov
pop
jo
dec
idivb
cli
jb
sbb
and
inc
inc
repz
stc
pop
xchg
mov
mov
push
add
das
aaa
lods
rcr
cmp
ret
dec
jns
sarb
popa
ja
xchg
pop
pop
sub
pop
xchg
jae
mov
shll
dec
lock
int3
mov
fstps
push
jmp
or
or
cmp
rol
cmpsl
rclb
imul
pop
push
push
iret
aaa
enter
fdivrs
dec
push
mov
jns
sub
xchg
outsl
jnp
cmp
shlb
pop
sbb
pop
les
adc
xchg
and
or
std
mov
jp
cmp
sbb
pop
push
pop
repnz
repz
pop
push
mov
subb
ret
jecxz
subl
aam
mov
fsubp
pop
mov
rcr
cmc
int3
fnsave
xor
sbb
in
and
mov
ja
mov
mov
test
pop
add
jmp
push
mov
push
mov
dec
dec
aaa
popa
aas
aam
jmp
sarb
adc
in
pop
push
ss
mov
mov
xchg
sub
sub
fadds
mov
scas
sub
lcall
mov
fnstcw
sub
add
mov
mov
roll
fcmovu
push
xor
xchg
cmp
dec
xor
aam
movsb
xchg
cmpsl
aas
mul
push
and
push
jle
rorl
jmp
and
ljmp
mov
dec
ja
rcrb
sbb
xchg
lret
ljmp
mov
sti
lock
popf
dec
aas
popa
call
das
xor
xchg
mov
ljmp
cld
pop
pusha
ljmp
arpl
out
sub
pop
or
push
mov
scas
push
sbb
out
mov
cltd
test
xchg
and
pop
and
mov
subb
mov
push
cmpsl
mov
mov
add
sbb
mov
pop
jbe
mov
lahf
in
das
enter
add
mov
mov
xchg
mov
js
loop
arpl
out
fnstsw
enter
pop
mov
jg
aas
push
enter
stos
mov
mov
mov
mov
mov
sub
push
sbb
dec
das
stc
fidivs
hlt
imull
sahf
sbb
pop
jb
lahf
or
arpl
call
repnz
in
cmp
mov
mov
push
lcall
xlat
imul
mov
outsl
sti
mov
mov
or
loopne
jne
xchg
or
xchg
mov
mov
fidivs
push
jge
or
dec
hlt
push
mulps
les
fcomps
scas
push
sbb
xchg
cmpsb
loop
jg
mov
add
popa
xor
push
push
mov
clc
repz
lret
xor
repz
inc
mov
add
push
jmp
mov
lret
jne
ss
test
mov
xor
xchg
repnz
sub
jne
bound
push
lock
mov
push
xor
sbb
repz
push
scas
pushf
aas
mov
fs
rcl
shlb
fisubrl
lcall
out
mov
outsl
xchg
jg
subb
ja
sbb
xchg
add
decl
dec
ret
sub
mov
insl
lahf
sbb
daa
arpl
out
or
notl
imul
pop
mov
pop
jecxz
mov
inc
pop
mov
inc
jnp
sub
adc
pop
mov
out
je
cs
mov
arpl
mov
jnp
fistpl
out
pushf
je
fnsave
mov
dec
movl
test
iret
neg
cmp
push
testl
les
hlt
nop
aam
popa
hlt
xor
pandn
xor
push
das
mov
adc
lods
out
jecxz
into
push
lea
outsl
jle
mov
sub
jmp
jnp
pop
pop
mov
notl
mov
or
xchg
add
movsb
out
flds
cltd
jo
test
std
jno
cmp
lret
outsb
mov
sti
cmp
shrb
nop
mov
push
sub
pop
pop
adc
fisubrl
jl
mov
nop
sbb
fmuls
jp
lods
jg
or
mov
std
jl
stc
lret
cli
into
and
add
pop
aaa
clc
cltd
xchg
and
ds
mov
jge
mov
clc
adc
pushf
movb
loop
mov
xchg
mov
out
movsb
cli
leave
mov
adc
rorb
pop
mov
ficompl
inc
iret
lds
enter
popa
lret
movsl
imul
cmpsb
int
sarb
std
std
push
mov
js
mov
sbb
inc
in
in
ret
sahf
sti
push
and
addr16
cmpsl
mov
push
xchg
in
dec
cmp
mov
pusha
out
dec
ljmp
or
sbb
xchg
loop
sbb
sbb
aam
adc
xchg
daa
daa
shrl
jb
mov
or
fldl
lds
add
push
clc
outsb
insl
dec
mov
cmpxchg
cmp
push
jb
sar
ret
and
add
imul
stc
mov
lcall
mov
out
mov
or
xor
pop
and
lret
push
repz
mov
push
cmp
mov
push
jmp
cli
mov
xchg
ds
jne
xchg
cmc
movsl
mov
xor
loopne
repnz
shr
nop
sbb
xchg
add
clc
cmp
push
mov
xlat
loope
add
pop
xchg
lcall
sbb
je
dec
xlat
ja
xor
cmp
and
data16
aam
mov
fnstsw
cwtl
out
adc
cli
mov
mov
add
je
das
es
aas
shrb
cmpsl
ret
sbb
xchg
out
jnp
fsubrl
or
sub
cli
add
lock
dec
mov
mov
lret
sub
xor
add
jecxz
jbe
push
pop
or
inc
fdivrs
ss
int3
insb
aad
mov
mov
fidivrl
or
add
inc
cmc
decb
mov
cld
repz
stc
mov
xor
and
incb
cld
jnp
clc
mov
loopne
push
std
testl
ss
aaa
mov
xlat
or
gs
mov
hlt
bound
mov
sub
mov
jge
fadds
arpl
mov
std
xchg
adcb
rol
push
mov
aas
cmp
xor
in
aam
cmc
cli
imul
bound
mov
pushl
scas
mov
add
lods
lock
aad
stos
cmp
pop
add
jbe
mov
mov
out
xor
lods
mov
xor
fstl
jne
xchg
repz
jge
add
sbb
aaa
mov
xchg
dec
mov
jns
test
push
push
cmpsl
fistps
push
mov
outsl
pushf
lock
xchg
int
aam
loope
mov
out
addb
arpl
fsubrl
dec
out
jnp
push
loop
ljmp
lahf
inc
pop
jge
fsubp
pusha
push
in
pusha
push
mov
loopne
xchg
pop
push
sahf
dec
add
sbb
push
adc
jp
arpl
mov
dec
xor
fistpll
fsubrs
pop
clc
and
jp
jecxz
out
mov
xchg
mov
sub
lahf
cli
inc
jg
in
sub
inc
lcall
mov
jbe
push
aad
mov
sbb
mov
scas
stos
int3
mov
pop
pop
movb
inc
pop
out
sahf
mov
imul
push
push
shll
sub
in
shlb
js
test
pushf
sbb
cmp
js
and
lret
loop
scas
stos
mov
push
call
ret
and
rcl
fimuls
mov
fsubrl
repz
stos
negb
sbb
and
and
push
ds
jp
inc
dec
jno
ja
imul
dec
inc
or
sahf
or
orl
xchg
inc
clc
sti
push
sub
repnz
je
mov
fidivrs
jb
int3
out
shrb
ficomps
std
inc
mov
cmp
movsb
and
in
mov
das
inc
fists
scas
xchg
out
repnz
lea
pop
addr16
shll
cld
dec
lcall
scas
pop
ljmp
and
mov
lods
cmp
arpl
sbb
les
hlt
lods
xlat
push
aas
push
jecxz
stos
dec
xor
call
push
subl
or
mov
push
mov
cmp
aam
cld
pop
mov
cmp
rcrb
xchg
aas
push
jno
sbbl
mov
ljmp
out
pop
aas
and
xchg
gs
sub
enter
mov
jns
in
insb
fmull
mov
or
adc
std
mov
daa
cld
jge
inc
repz
mov
mov
adc
je
testl
int
andb
loope
inc
stos
inc
das
insb
in
sub
jge
ds
stos
pop
fucom
add
pop
in
sub
sub
gs
stc
cs
jae
xlat
or
loop
insl
fdiv
mov
out
mov
dec
repz
inc
fcoms
loop
sub
fdivl
bound
stos
repz
mov
xchg
and
cmp
cmp
in
adc
jns
mov
lea
sub
ds
aad
aaa
jnp
imul
popa
arpl
orb
imul
iret
xchg
stc
sbb
cmc
dec
sbb
arpl
rclb
mov
repnz
jg
sub
xchg
jo
aad
xor
and
jnp
sub
loop
aad
push
hlt
arpl
xchg
sbb
cltd
sahf
addr16
fdecstp
mov
out
cmp
add
lea
scas
xor
lcall
and
inc
pusha
pop
repnz
je
cmp
incl
decl
psubsw
fwait
xor
mov
cltd
cmpsl
fyl2xp1
xor
xor
popf
push
mov
push
cmp
sar
xlat
push
pop
aam
mov
gs
jge
stos
idivl
push
dec
stc
push
jno
movsb
sbb
adc
nop
in
stc
ljmp
into
and
jnp
xchg
mov
push
add
push
push
pop
inc
add
pop
inc
xorl
es
add
sbb
and
orb
cwtl
dec
shlb
and
pusha
mov
inc
mov
data16
rolb
add
cltd
subl
lods
outsl
pop
out
ja
outsl
mov
fcmovu
sahf
ja
jae
jp
decb
jae
fcmove
and
stos
mov
out
mov
fcmovb
into
push
mov
aas
and
adc
fdivl
xchg
fiaddl
cmpsl
inc
enter
outsl
push
shll
mov
mov
ds
mov
mov
repz
addr16
xchg
xor
xchg
inc
mov
jmp
hlt
rorl
inc
or
inc
mov
mov
loop
xor
push
scas
das
pop
adc
xchg
arpl
sub
or
jbe
in
xor
jns
sti
sub
dec
mov
jg
not
jns
popf
dec
in
lods
imul
repnz
pushl
sar
add
jge
mov
mov
and
and
xor
ljmp
clc
mov
sbb
mov
push
repz
jnp
xchg
and
cmpsl
push
lods
push
lahf
fstpl
lds
ljmp
lret
adc
icebp
add
adc
jg
cmp
sub
xchg
mov
cld
lret
pusha
loopne
int3
icebp
or
aam
cs
or
fnstcw
mov
cmpsl
jg
add
por
cwtl
es
jl
int3
sbb
mov
xor
call
pop
negl
sbb
fldt
add
xor
pop
push
pop
or
jno,pt
lahf
stc
mov
sbb
inc
xchg
and
fs
roll
cmp
pop
lea
jle
push
xor
xchg
xor
lea
out
adc
add
outsb
add
fists
repnz
mov
test
cmc
fcmovnu
cwtl
add
les
jecxz
mov
cli
dec
add
jne
cmp
lret
loopne
test
mov
hlt
lret
inc
adc
iret
mov
pushf
dec
mov
dec
mov
cmpsb
dec
repnz
or
mov
js
out
push
cmp
inc
cmp
les
mov
push
dec
cld
adc
add
jbe
negb
or
stos
aad
and
and
push
sub
aam
cmpsb
xchg
fs
lahf
out
cltd
xchg
push
adc
adc
mov
dec
jmp
ffree
add
or
outsb
loopne
lret
pop
add
addr16
sub
movsl
mov
mov
cmp
dec
sbb
in
mov
xchg
push
mov
sbb
fcomip
adc
and
lret
test
sti
les
inc
mov
test
movsb
shl
lret
mov
outsb
cld
mov
mov
pushf
sub
and
shr
mov
loop
mov
mov
out
xchg
jge
or
inc
add
lahf
lods
insb
adc
fs
scas
out
cmp
adc
iret
mov
dec
dec
cld
leave
movsb
scas
mov
mov
lret
fidivl
mov
pusha
je
adc
add
jl
aas
cmp
push
jns
loopne
into
cmp
stc
popf
inc
bound
jo
in
cmp
in
mov
test
repz
xchg
jle
mov
cli
lret
dec
sub
pop
jecxz
aad
je
xchg
mov
xlat
sbb
jbe
jp
add
cmp
add
xchg
sarb
mov
lods
pop
test
xor
pop
mov
sahf
and
cwtl
lods
aas
mov
iret
sbb
jmp
std
fidivrl
cmp
nop
add
ja
mov
mov
jbe
and
aaa
sub
pop
loopne
mov
in
inc
push
das
or
dec
pop
int3
add
cmp
mov
mov
out
push
int3
in
lret
inc
mov
inc
cmp
cmpsb
int
add
adc
mov
jmp
sbb
cli
push
ljmp
aaa
lret
push
add
xchg
mov
stos
inc
add
jmp
pop
mov
jecxz
dec
pusha
mov
mov
addb
outsb
xchg
pop
jge
gs
sbb
lret
pop
setbe
leave
test
stos
jge
push
xchg
daa
das
adc
fldt
mov
jp
loope
lods
lret
mov
testl
test
lds
cwtl
or
out
roll
mov
rcrb
repnz
and
out
jo
sbb
mov
dec
jecxz
std
flds
cmp
lret
sbb
mov
cwtl
and
mov
roll
xchg
sar
aaa
aad
lods
outsl
outsl
scas
repnz
ficompl
adc
xchg
mov
fwait
lods
in
lea
inc
jecxz
fdivs
daa
adc
sub
ljmp
out
adc
pop
pop
and
mov
mov
ret
mov
aaa
jecxz
jno
pop
cs
adc
sub
pop
call
faddl
mov
ljmp
idivb
add
lret
mov
or
std
cmp
pop
cltd
adc
add
mov
decl
in
cmp
and
or
rcrb
xchg
add
and
or
cwtl
test
ret
add
xlat
imul
in
mov
enter
lods
mov
lret
std
fmuls
jae
mov
mov
mov
cmp
fsubl
add
pushl
lahf
mov
andb
cmp
sahf
leave
gs
insb
lcall
or
iret
jl
mov
jp
xor
push
repz
mov
and
push
jecxz
jae
jle
cmp
cmpsl
mov
insl
test
mov
add
int
sti
int
fincstp
stos
and
or
std
cltd
out
dec
inc
arpl
jle
out
xchg
clc
jno
inc
lahf
lock
sub
inc
push
ja
lret
mov
outsl
sbb
gs
lret
xor
fnstsw
in
sbb
cmp
fildl
push
jmp
dec
mov
fmul
xor
cld
andl
repz
pushl
inc
int
outsb
fdivp
jmp
dec
cmp
add
adcb
cmp
cltd
dec
bound
pop
jne
pop
xor
jmp
in
or
pop
mov
cmpsl
and
mov
xchg
mov
jns
inc
pop
mov
add
aas
pop
repnz
inc
je
aaa
int
lcall
or
pop
cltd
pop
sbb
andl
jnp
ljmp
jge
sub
push
or
dec
scas
push
and
push
fmull
cmpsb
dec
in
rorl
arpl
mov
je
rcrl
insl
and
dec
enter
mov
movsb
mov
sar
out
push
stos
stos
movsb
test
mov
xchg
ljmp
inc
mov
fs
movsb
mov
mov
and
xor
push
subb
pop
cli
divl
mov
pop
lock
jbe
push
inc
xchg
mov
push
jbe
in
sub
arpl
test
movl
jno
jae
stc
pop
loopne
das
dec
lods
and
adc
call
and
jecxz
jle
xor
je
addr16
mov
stc
push
stos
push
mov
in
and
or
mov
and
push
loope
in
mov
xchg
loope
fisttps
dec
enter
and
mov
xor
call
cmc
ja
adc
cs
fdivrl
fdiv
pop
ljmp
daa
sub
xor
sub
push
xor
lret
testl
mov
fpatan
enter
jnp
mov
cli
and
lock
cmpsl
cltd
inc
nop
jae
push
std
repnz
jg
push
push
xor
aam
adc
out
mov
add
sti
cwtl
fistl
out
jns
jmp
loopne
out
adc
jnp
loope
jne
jnp
jecxz
je
subl
cmp
pusha
pushf
push
stos
and
fsqrt
repnz
ret
out
stos
mov
leave
lea
jmp
std
push
lret
ds
movsl
or
in
ja
stos
movsl
dec
shll
push
out
movups
jns
lods
mov
pop
sarb
in
repz
and
test
pop
ss
push
jg
mov
stos
add
pushf
push
mov
insl
jbe
push
inc
shlb
inc
aam
decl
push
push
int
mov
int
inc
lods
leave
out
or
rcr
or
repnz
popa
pop
cmpsl
xchg
loopne
movsb
out
cmpsl
fnstenv
and
test
jmp
fcoms
jecxz
jns
shl
fdiv
push
push
or
dec
mov
cmp
das
lret
push
or
push
cltd
fidivs
movb
adcb
cltd
pop
push
rolb
nop
jmp
outsb
rcl
push
cmp
push
dec
adc
je
fildll
vorps
sahf
jnp
cli
jae
inc
fstps
mov
mov
adc
sub
mov
gs
fwait
inc
mov
sub
dec
cmp
vpcmpgtb
sbb
nop
rcr
dec
sbb
je
mov
xchg
mov
bound
add
js
aaa
cltd
pop
xor
sbb
mov
dec
lcall
in
jae
setge
outsl
repz
sub
dec
jg
push
insl
call
mov
mov
dec
pop
dec
xchg
xor
popa
test
in
fnstsw
and
daa
sub
ffreep
or
test
pop
adc
repz
mov
sbb
jne
aaa
sbb
testl
call
loop
outsb
xchg
cli
sbbl
pop
pop
sbb
cmp
mov
add
ljmp
adc
iret
pop
shll
lock
jbe
and
fmul
mov
out
cltd
cmp
into
jnp
lcall
jge
push
pop
sarb
and
into
lods
inc
adc
xchg
add
push
sub
aas
out
or
sub
sti
shll
cltd
push
xchg
push
sarb
jae
and
mov
fldlg2
dec
sbb
movsl
pushw
inc
cmp
jo
pop
aaa
add
push
add
xor
or
mov
push
int3
sub
call
out
orl
popw
scas
repz
inc
popa
jno
mov
daa
das
add
mov
cltd
cmp
in
xchg
stos
jmp
lret
popa
and
std
sub
std
cld
repz
std
ret
arpl
fsts
lea
inc
ret
cltd
pusha
or
cli
jb
enter
lahf
aaa
mov
mov
aaa
mov
jnp
decl
leave
inc
imul
adc
mov
fst
push
lods
insb
push
or
mov
add
cli
les
push
add
sbb
xor
inc
inc
lahf
mov
fistps
aaa
xor
int3
and
int3
sub
jle
mov
in
sbb
clc
cmpsl
sbb
and
lret
xchg
test
inc
pushf
adc
mov
or
mov
int
pop
push
les
das
jp
pop
adc
lcall
scas
cmp
xchg
xchg
dec
es
sub
js
fbld
out
jge
insb
pushf
dec
dec
pop
sub
sti
fsub
mov
out
push
daa
imul
mov
shl
mov
out
inc
es
ljmp
in
lahf
lods
cmp
fdivrp
les
xor
out
int
inc
out
xchg
mov
xchg
out
push
dec
and
sarb
mov
mov
rcll
push
fcmovnb
push
jge
aas
xor
jno
pop
lds
leave
mov
pop
scas
and
pop
bound
shll
sarb
fimull
xor
xlat
loopne
lods
and
inc
adc
sub
xchg
mov
xor
repnz
lds
fcmovb
push
add
jle
sbb
pop
or
pusha
xchg
jo
cmp
sbb
leave
leave
test
sti
add
enter
loope
push
leave
lds
push
jecxz
jnp
ss
mov
mov
fistpll
fucomp
mov
shll
mov
les
aad
cltd
loop
in
push
insb
dec
xor
sbb
push
insl
cmc
div
fidivrl
push
push
pop
es
test
xor
enter
inc
push
jns
push
jbe
nop
icebp
lock
repnz
call
and
mov
push
js
call
inc
push
and
pop
ret
push
jo
pop
mov
das
pusha
sbb
or
dec
cld
mov
pop
out
lret
adc
mov
seta
stc
inc
push
jae
movsb
cmp
cli
inc
mov
mov
hlt
cli
sti
pusha
dec
cmp
pop
in
fld
dec
jge
jns
iret
inc
mov
loope
dec
adc
adc
xor
into
dec
daa
out
push
cmpsl
shll
cmp
cmovo
pop
cmpsb
or
enter
lahf
fdivr
push
sub
int
add
ja
pop
pop
xchg
stc
inc
mov
jbe
sti
sahf
xchg
adc
into
lahf
mov
sti
les
ds
add
cmp
fsts
lods
xchg
or
rclb
lds
cltd
dec
fdivrl
adc
iret
push
loop
popf
dec
in
dec
xchg
mov
pop
ret
test
sbb
movsb
jne
xor
xchg
dec
stc
stos
adc
jmp
outsb
cld
fimuls
je
rorb
jns
mov
cltd
jle
cwtl
out
add
jg
xlat
mov
in
outsb
movsl
xor
movsb
loop
shll
cmp
push
stc
mov
aad
jns
inc
subl
jl
out
std
ja
jnp
jno
popf
insb
cmpsb
mov
jns
ja
adc
sbb
jg
xchg
jno
sub
jmp
mov
call
stos
imul
mov
mov
arpl
ret
mov
mov
mov
out
insl
add
pushf
mov
iret
out
cmp
insb
and
adc
and
lret
push
dec
adc
icebp
inc
clc
jp
cmp
ret
icebp
and
imul
test
ds
or
lds
loop
xor
pop
shlb
mov
in
sbb
stos
jo
stos
test
pop
ds
add
xchg
outsl
sahf
mov
enter
jmp
dec
loope
push
insl
repz
push
xchg
push
xchg
stos
push
push
movsl
shll
stc
pop
inc
adc
sti
push
lcall
mov
cmpsl
outsb
mov
mov
nop
pop
out
ja
int3
nop
cmp
insl
icebp
cmpsl
xchg
lock
push
xchg
icebp
insl
ds
aam
sbb
gs
jo
mov
loope
add
cli
ja
xchg
sahf
fs
push
push
xchg
testb
cmpsb
cmp
aad
or
shll
ds
mov
and
xor
xchg
lahf
dec
nop
stos
int3
je
pushf
popa
pop
fidivrs
xor
fldl
cmc
fdivl
mov
pop
addb
xchg
ds
and
scas
or
movsb
mov
xchg
iret
jbe
cmp
cli
add
xchg
imul
fisubrl
out
nop
pop
jno
mov
jmp
ficomps
fnstenv
mov
xor
fldl
gs
lret
sub
mov
shll
jns
bound
stos
clc
pop
jl
outsl
jno
xchg
shlw
nop
int
movsb
mov
shlb
mov
scas
decl
out
popa
aam
and
je,pt
cmc
jecxz
cwtl
insb
fcomi
cmp
loop
push
xlat
or
xchg
icebp
sbb
pop
cmp
out
out
jnp
mov
push
cld
lock
sbb
mov
add
xchg
or
test
leave
rcl
jbe
push
clc
mov
pop
fs
pop
loope
iret
jp
jb
dec
incl
jb
xor
popf
int3
mov
jge
push
xchg
popf
shll
mov
xchg
std
cs
jno
stos
cmc
mov
xchg
repnz
cmpsb
repnz
fucom
pop
jns
xchg
mov
icebp
fs
inc
faddp
push
icebp
in
jmp
outsb
xchg
adc
push
icebp
scas
push
ret
or
in
jmp
mov
cmc
filds
incb
adc
ret
iret
or
pop
fimull
addr16
or
jg
add
arpl
add
ljmp
mov
and
stc
in
cli
push
dec
add
loop
ret
jge
adc
aaa
xchg
mov
sbb
clc
mov
xor
or
add
dec
repz
sub
stc
loopne
js
sbb
in
xor
inc
xchg
pop
add
out
addr16
lahf
fildl
mov
mov
adc
roll
arpl
pop
xchg
dec
faddl
add
loop
mov
xchg
jae
in
mov
push
push
pop
jmp
jns
adc
lcall
ljmp
push
int
push
stos
pop
adc
xchg
iret
xchg
int
stos
imul
mov
mov
arpl
pushf
stos
xor
and
imul
xor
repnz
rcrl
jno
enter
aam
xor
movsb
lock
scas
jne
negb
push
xor
mov
out
jnp
enter
xor
in
enter
mov
stos
pop
lret
daa
mov
add
cs
jl
inc
jge
mov
mov
jo
loopne
mov
insb
or
push
cmp
dec
loopne
lahf
mov
popa
sub
dec
ds
shl
mov
lahf
pop
in
fisttps
rep
sti
sub
iret
pop
std
mov
mov
decb
and
jb
xchg
push
repz
mov
lahf
mov
or
mov
sub
ret
or
mov
std
jg
or
ds
jl
sbb
mov
int3
into
push
cmc
inc
and
add
sbb
loope
fcomi
in
imull
and
jle
xchg
sub
mov
adc
lcall
jae
rcr
std
fld
mov
or
mov
mov
icebp
loope
pop
hlt
push
out
in
out
repz
inc
fidivl
out
stos
int
jmp
sub
addr16
fwait
cld
or
cmp
ret
push
or
jge
movsl
fwait
mov
cld
pop
cmp
out
and
not
xchg
mov
cmp
jle
or
mov
pop
imul
pop
push
sub
loopne
jae
in
cmp
movsl
jo
push
ljmp
cmpsl
aaa
out
pop
xchg
movsl
jge
push
mov
pop
or
enter
jnp
fdiv
push
mov
out
sub
mov
jns
sub
pop
cld
out
cmc
mov
inc
cmc
roll
mov
xchg
shlb
pop
popa
pop
adc
clc
pop
std
mov
add
jg
mov
into
aas
imul
xchg
jno
sti
mov
bound
ror
popf
in
leave
push
movsl
jno
dec
mov
in
cmpl
scas
or
leave
jne
mov
xlat
imul
je
xor
xchg
icebp
jns
push
aad
in
aaa
mov
scas
jnp
mov
inc
out
fcompl
jp
js
ret
fistpl
inc
dec
xor
push
inc
subl
fstpt
cmc
lcall
jbe
ljmp
pushf
mov
int3
fadds
hlt
xorl
call
cmp
sbb
cmpsb
idivb
mov
sbb
inc
movsb
or
frstor
aad
sahf
pop
in
cmpsb
adc
pop
fidivl
mov
push
sbbb
add
outsl
sub
add
hlt
cmpsb
adc
xor
mov
js
or
std
mov
clc
out
mov
imul
pop
cmp
adc
mov
in
mov
or
cmc
xchg
enter
sub
shlb
movsb
cmpsl
jmp
lock
mov
shlb
sub
jb
or
dec
add
adc
lahf
cmp
outsb
sahf
add
cmpsl
fiadds
sbb
push
out
fadds
adc
fcmovne
push
sbb
dec
and
mov
or
jbe
mov
xchg
loopnew
fstp
and
jl
ja
bound
push
and
or
jne
pop
je
xchg
inc
std
jmp
pushf
push
popa
fwait
addr16
pop
and
ljmp
cmp
aad
stc
pop
test
js
aaa
je
ror
subl
mov
push
and
loopne
push
jecxz
fcomp
or
inc
xchg
gs
aam
xor
repnz
or
in
inc
cmp
push
jecxz
std
or
pop
push
mov
xchg
cmp
mov
test
or
or
and
nop
mov
jmp
in
mov
ss
nop
adc
movsl
bound
pushf
addr16
add
xchg
aam
mov
inc
push
xor
push
pop
add
mov
stos
clc
mov
and
push
adc
fisubs
add
mov
iret
fdivrp
pop
pop
loop
mov
jl
repnz
jae,pn
scas
cmp
jle
mov
mov
adc
dec
lds
es
adc
jl
or
xchg
fisubl
nop
insl
xor
cmp
or
iret
cmp
jecxz
mov
xchg
daa
adc
xor
mov
push
out
push
loop
je
out
int3
mov
add
ljmp
push
int
and
cmp
sbb
test
mov
xor
mov
cmpsl
icebp
outsl
or
jp
cli
xor
out
push
add
jo
addb
rcll
cld
fiaddl
jno
push
xor
fwait
cs
sub
shll
pop
xor
sbb
push
cltd
out
lret
fsub
pop
cli
mov
sbb
cmc
xchg
or
out
push
scas
cmp
call
jmp
aaa
stc
insl
shll
enter
jmp
das
insl
scas
or
mov
mov
xchg
sub
mov
out
add
mov
cmp
mov
scas
pand
mov
add
gs
scas
inc
push
mov
loop
add
stos
xor
pop
jno
adc
movsb
sub
das
mov
je
mov
lahf
lret
shlb
pop
push
sub
xor
add
cltd
divb
pop
out
sub
mov
cld
jno
mov
pause
out
mov
ret
cmc
lods
push
push
mov
and
jb
jecxz
jecxz
mov
xlat
aad
cmpsl
aaa
loope
adc
aad
imul
push
mov
in
sbb
inc
dec
mov
cmpsl
or
aas
fisttpll
mov
or
mov
aas
push
arpl
movsl
xor
cmpsl
rolb
cmpsl
jmp
xor
pop
out
mov
or
xor
addr16
ja
inc
xlat
adc
inc
add
sbb
or
jne
xchg
js
mov
pop
lret
ret
lret
fidivrl
push
jmp
pop
mov
mov
mov
dec
jp
adc
jns
sbb
cld
pop
jecxz
sti
xchg
sub
cmp
sbb
cmc
mov
cmove
fsubr
sbb
fsubr
sub
mov
in
dec
lret
add
rclb
add
call
int
add
in
lret
mov
fiadds
and
xchg
pop
push
and
add
cmc
sti
es
push
cmp
jle
sbb
sahf
or
and
xor
mov
jnp
in
add
popa
addr16
lods
jae
mov
mov
xor
das
fdivr
dec
pop
movsl
adc
popa
imul
in
popa
mov
mull
pop
js
arpl
mov
aad
leave
xchg
out
mov
cltd
data16
lret
filds
pop
sbb
scas
in
mull
mov
test
inc
mov
xor
int3
pusha
inc
mov
aas
aad
cmpsb
std
mov
pop
sbb
mov
inc
subl
cmc
data16
adc
pop
jmp
add
mov
insl
scas
xchg
and
ficomps
mov
test
les
fists
cmp
cmpsb
js
pop
ss
and
mov
xchg
stos
sub
andl
push
into
push
mov
je
cmp
cs
mov
fdivl
fs
shr
cmp
sub
xor
notb
imul
jb
or
out
or
ss
adc
jnp
push
mov
scas
std
jne
mov
in
push
adc
or
xor
pop
pop
push
dec
stos
dec
add
and
hlt
pusha
fs
pop
dec
adc
cmp
cmpb
inc
popf
lods
mov
repz
lock
leave
lock
jo
std
clc
subl
jnp
subb
jg
aad
cmpl
dec
dec
call
rorl
outsl
mov
repz
jge
out
in
push
add
imul
test
movsb
outsb
pushf
cwtl
inc
dec
bound
xchg
aam
ds
mov
arpl
nop
outsb
add
push
add
mov
lret
inc
jge
mov
test
lret
add
ret
jl
push
xchg
repz
push
cmp
or
roll
jecxz
fwait
xchg
adc
sbb
jns
add
pop
movsb
mov
lahf
sub
sbb
rcl
test
or
rol
enter
adc
icebp
aaa
das
dec
or
xorl
mov
xchg
mov
lock
iret
xchg
pop
pop
adc
push
adc
add
pop
mov
jnp
jmp
int
cltd
sbb
inc
idivl
jle
ja
sbb
stos
and
enter
or
add
jbe
js
jb
jp
mov
xor
adc
and
addb
decl
jne
insl
lcall
popa
mov
and
repz
xlat
push
lods
add
test
cmp
or
push
popa
adc
mov
sahf
adc
mov
push
sbb
pop
test
push
mov
sbb
inc
pop
fnstcw
test
xchg
inc
das
mov
dec
mov
mov
mov
fnstcw
cmp
das
pop
rcrl
inc
adcb
adc
pop
jno
movsb
and
jge
frstor
lods
xchg
push
sbb
mov
cmp
das
add
addb
mov
xor
js
sub
sbb
fdivrl
cmc
jg
ljmp
xor
test
mov
jg
popa
pop
out
mov
sti
or
jmp
call
and
icebp
jp
push
cmpl
mov
push
call
pop
test
jae
pusha
pop
cmp
imul
ja,pt
adc
movsl
inc
orb
jne
dec
add
lock
mov
or
jo
pop
push
aam
sti
cwtl
ror
add
aad
push
jns
sub
int3
enter
divb
sbb
insb
aaa
gs
popf
sub
std
mov
leave
fists
push
inc
rorl
ljmp
push
testl
sahf
std
rcll
cmp
fdivs
cld
push
nop
fbstp
imul
stc
sub
in
dec
aam
and
dec
jb
pusha
sbb
daa
sub
inc
icebp
pushf
rorl
jecxz
or
sub
jge
jno
mov
sub
push
sbb
or
leave
and
push
repnz
insl
aad
mov
fsubs
or
xlat
loopne
jae
icebp
jnp
insb
into
data16
dec
jo
int
testl
inc
mov
es
or
rcrl
test
sub
addr16
push
lock
sub
aaa
stc
js
lock
lock
loopne
pop
add
sub
dec
scas
jg
adc
jmp
xchg
sahf
jle
cmp
mov
cli
add
pop
cmc
sti
rorl
mov
and
inc
in
sbb
rcll
ja
jg
fcomip
outsb
mov
lock
or
cmp
inc
js
insb
mov
pop
inc
jns
sahf
cwtl
add
in
xor
jb
add
ret
imul
cmpsl
in
imul
fs
xchg
pop
es
sub
in
popf
aam
dec
jmp
je
mov
fldt
loopne
int3
xchg
cmp
xor
or
in
not
icebp
lahf
push
mov
pop
shl
mov
push
xlat
lcall
sbb
pop
out
and
jbe
das
adc
out
out
xor
mul
imul
dec
leave
test
sarb
daa
push
hlt
adc
js
call
fdivrs
push
mov
arpl
cltd
je
loop
cmp
cmp
mov
imul
mov
jge
popa
xchg
sub
shrl
mov
test
pop
repnz
sub
sbb
xor
inc
mov
pop
lds
sub
inc
jg
lcall
or
stc
ret
lock
pop
jnp
xor
jl
sti
icebp
lods
leave
fistpll
pushf
sub
mov
dec
or
fstpl
stos
cmp
mov
lahf
shll
clc
in
mov
xchg
xrelease
xor
jno
ds
mov
sub
mov
pop
cmpsb
ret
cli
sbb
jbe
shr
push
jo
ror
fs
pop
cmpsb
jp
pop
push
adc
out
xchg
ds
xor
cmp
ss
ss
sbb
or
leave
enter
into
sub
jecxz
mov
fcompl
fwait
scas
stos
int3
imul
notb
test
fistps
in
cmp
push
arpl
mov
ds
idiv
mov
cmp
gs
rcl
jg
sarl
mov
fdivrs
pop
cli
adc
data16
pop
inc
mov
ss
bound
into
push
or
xor
xlat
inc
mov
fisttpl
test
pop
mov
out
mov
pop
mov
pop
lret
cmpsb
add
clc
jle
je
stos
jnp
outsl
jbe
aas
data16
ja,pt
ret
test
rol
add
fmuls
loope
addl
adc
jl
push
mov
sbb
jno
popf
sbb
sbb
shlb
dec
std
jmp
jp
pop
xor
jecxz
mov
xor
das
and
or
ss
jl
shll
loop
mov
cli
addl
aam
mov
lret
ret
inc
mov
rolb
dec
pop
addb
pop
xchg
in
sub
cmp
xchg
push
sub
pop
add
push
push
std
scas
push
inc
or
loope
xchg
arpl
jmp
dec
cmpsb
adc
push
push
insb
jno
arpl
push
ss
xor
dec
mov
jbe
push
fcomp
int
icebp
mov
arpl
or
pusha
fsub
mov
insl
mov
insb
jns
mov
sbb
sbb
fcom
sbb
sbb
pop
fsubr
int
lret
sbb
jmp
arpl
sbb
cmp
or
out
loopne
mov
push
mov
insb
outsb
and
or
push
mov
test
les
dec
jge
mov
je
call
push
mov
cmp
sub
ss
jp
ret
decb
int
rol
addl
int3
xor
ret
pop
jns
divl
push
pushf
jae
jl
sub
int3
cmp
lret
or
dec
pop
ficoms
lods
dec
in
sbb
add
outsb
mov
xor
stos
jg
mov
pop
add
dec
lahf
lcall
cltd
bound
pop
jge
js
jbe
cmc
scas
xlat
cmpsb
std
stos
ffree
sbb
aam
sbb
jecxz
ds
dec
mov
xchg
push
std
fwait
pop
cli
ret
mov
out
mov
hlt
enter
decb
mov
popa
jns
push
inc
stc
add
inc
ret
sbb
pop
adc
repnz
mov
jmp
pop
jns
or
mov
movsl
fdivs
mov
adc
test
dec
cmpl
fdivrl
sub
int
cmp
mov
xchg
cltd
add
hlt
enter
inc
das
lret
and
xchg
cmc
addl
sbb
jl
out
ret
mov
mov
fninit
add
jecxz
movsb
sub
push
ds
scas
cmc
inc
sarl
outsb
xchg
or
mov
xlat
adc
in
cli
sbb
stos
lcall
mov
xchg
or
cs
xchg
cmp
aam
or
mov
adc
pop
loope
cmp
cli
inc
xor
sub
sti
xor
repnz
push
inc
push
cli
sbb
ret
repz
sbb
nop
sub
call
jle
add
out
or
pop
adc
jge
fisubrs
dec
fwait
iret
je
jp
cltd
fwait
iret
nop
cmp
mov
mov
jns
je
shrl
sbb
ja
mov
pop
cmp
imul
push
mov
out
pop
ret
mov
or
cli
add
adc
xlat
sub
sti
mov
fdivr
cmpsb
std
fisubrl
xchg
xchg
pop
lahf
mov
nop
cmp
div
adc
cld
sar
lods
ja
fwait
jl
popf
movsb
sbb
jno
mov
idivl
pop
mov
aaa
daa
push
cmp
mov
pushf
iret
js
in
sahf
and
imul
jns
jge
jne
sahf
std
in
jns
mov
sarb
idivl
xlat
adc
ss
or
push
stc
out
fisttps
inc
dec
mov
lret
cmc
fldl
out
sub
pop
pop
arpl
mov
inc
loope
ss
sub
clc
inc
out
mov
sub
mov
lods
and
lahf
sbbb
sti
int3
nop
outsb
push
inc
mov
mov
lods
cmp
xchg
rclb
inc
rep
imull
repnz
clc
push
lds
or
cmpsb
jo
outsl
repnz
push
mov
push
add
push
rclb
stc
mov
lahf
jne
scas
push
aas
inc
out
in
xchg
fdivr
and
sti
sbb
add
mov
jns
inc
xor
stos
cld
sbb
push
cmc
pop
pop
fistl
cmp
in
loope
sbb
adc
loope
cmpsl
iret
pop
cmp
sub
out
xchg
xor
repnz
dec
or
push
sbb
or
mov
and
stc
aam
mov
out
xchg
enter
pop
cld
mov
mov
inc
xchg
sbb
lock
push
dec
fdivl
mov
stos
nop
xchg
sub
xchg
push
inc
cmpsl
add
jmp
dec
and
jbe
decl
xor
call
sbb
xchg
mov
sub
mov
sbb
mov
sbb
push
ret
dec
xor
popa
xchg
int3
in
xor
into
push
je
stc
shlb
stos
inc
jle
mov
mov
int
test
inc
leave
loop
jnp
je
adc
leave
cmp
mov
test
mov
fldenv
and
ljmp
icebp
cwtl
cmp
jge
repz
xchg
jnp
hlt
xlat
vmwrite
dec
sub
mov
mov
mov
roll
aam
movsb
push
shrb
jno
das
jno
sbb
or
outsb
shrb
les
xor
add
addr16
xor
aas
inc
test
xchg
cmp
insb
jl
mov
jecxz
xchg
or
ret
mov
scas
cld
mov
jg
outsl
jbe
xchg
imull
jno
pushf
ffreep
stos
ficoml
mov
xchg
sub
shll
mov
int
test
sbb
sbb
testb
aas
adc
fwait
das
pop
out
scas
fldcw
jmp
or
sbb
je
mov
fmull
in
jb
hlt
in
push
fcmovnbe
and
sub
sbb
sahf
movsb
icebp
jns
jp
jle
dec
push
inc
pop
pop
jns
in
movsb
mov
sbb
dec
cwtl
mov
inc
loopne
mov
lahf
dec
test
pop
mov
bound
jle
rclb
ret
add
das
testb
mov
fcomi
pop
add
lds
bound
icebp
fstpt
nop
es
jmp
pop
or
sub
lcall
lret
cmp
push
daa
idivl
cs
pop
adc
popa
pop
daa
xchg
arpl
out
nop
inc
jne
addr16
sarb
shlb
pop
repz
das
xlat
cli
iret
aaa
pop
xorl
dec
dec
frstor
leave
rcl
clc
cmp
and
cmpsl
das
ljmp
clc
aam
rorl
sub
std
xor
outsl
bound
clc
mov
pop
jnp
inc
add
xchg
pop
loopne
jge
xchg
sub
xchg
dec
pushf
add
push
repnz
cmp
test
pop
ljmp
lcall
pop
cmpb
rcll
push
fidivs
dec
xor
aas
pop
in
movsb
test
jne
arpl
movsb
inc
fcmovnu
or
shlb
int
or
mov
xlat
shlb
jmp
pusha
std
xchg
popf
mov
jns
out
jae
shll
lock
into
popf
cmp
add
daa
cwtl
cmc
fnsave
out
jae
pop
ds
stos
mov
neg
dec
inc
mov
gs
rorl
cld
mov
daa
and
or
push
sbb
inc
mov
sub
sbb
stos
nop
mov
getsec
mov
repz
inc
mov
lods
or
sub
ret
arpl
pop
insl
repz
xchg
movsl
sahf
or
or
icebp
inc
test
lahf
aad
add
push
lods
in
jge
into
aas
push
xchg
pop
xor
repz
push
jnp
outsl
mov
insl
test
aas
and
sbb
insb
jecxz
adc
and
mov
sub
cmpsb
adc
mov
leave
je
cltd
into
std
addr16
push
mov
cs
aas
shll
adc
add
and
stc
imul
loopne
test
cwtl
inc
out
imul
or
jl
jl
xor
fnsave
into
mov
pop
lahf
mov
lcall
sbb
iret
jno
mov
inc
xchg
sbb
jmp
stc
sbbb
or
inc
les
bts
scas
inc
clc
adc
mov
loopne
inc
inc
jmp
out
jo
ret
or
mov
es
cmp
xchg
ljmp
xor
scas
sbb
cmp
sbb
aaa
sbb
stos
test
cli
shrb
mov
loope
push
jbe
sbb
idivl
adc
pop
stos
divb
stos
cmc
jge
shr
xor
cmp
xor
push
sbb
mov
push
outsl
pop
iret
out
push
mov
call
mov
lret
repnz
inc
dec
inc
mov
cld
ja
cli
aas
fisttpl
fwait
push
hlt
sahf
in
repnz
enter
repnz
je
ret
cmp
mov
or
cli
add
adc
dec
adc
cwtl
std
inc
js
jg
add
shlb
cmpsl
neg
aas
or
xchg
push
jg
push
jg
fmuls
aas
mov
ret
cmp
push
jmp
cli
inc
lock
mov
lods
xor
mov
or
lret
out
xchg
adc
stc
pop
sub
fcmovnb
dec
sti
or
or
jle
sbb
xchg
lcall
dec
xchg
pop
fwait
xchg
pop
adc
jl
xchg
sti
sub
mov
aas
loope
jb
icebp
lret
insb
lods
jb
out
lcall
add
mov
test
fdivl
push
fs
inc
loopne
mov
iret
movsl
add
sti
ds
jno
push
add
cmpb
out
jl
cli
loope
sarb
test
pop
sahf
into
adc
ss
aaa
repnz
lahf
jne
outsl
aad
dec
iret
jno
fnstenv
or
aam
mov
mov
cmc
pop
les
out
call
dec
push
arpl
add
xor
jg
mov
jp
repz
lret
lcall
es
sub
jbe
loopne
sbb
out
dec
xchg
test
sti
mov
rorl
aam
inc
pop
lods
or
movsb
cmp
sbb
jns
frstor
int
daa
mov
pop
cmp
es
incb
leave
test
sti
push
pop
ds
cld
aas
sub
or
xchg
or
jle
lds
out
cmp
das
cmp
repz
imul
cmpsb
sbb
sti
outsl
and
psadbw
orl
cmp
test
inc
xchg
xlat
mov
out
clc
test
dec
les
mov
mov
sahf
sbb
mov
lcall
dec
scas
dec
pop
dec
outsl
stc
jo
jmp
jne
out
push
sarl
mov
addr16
dec
pop
mov
mov
mov
scas
jo
mov
enter
shll
cwtl
sti
add
negb
or
hlt
push
insb
add
sahf
and
out
aam
loope
pop
add
stc
xchg
insl
shlb
setl
push
xchg
mov
mov
cmovle
jl
adc
jge
push
adc
out
fsub
vmulss
loopne
je
xor
jnp
pop
lret
shufps
add
xchg
pop
inc
sbb
adc
ss
fistpll
jp
lock
or
cmp
mov
lods
jae
jo
push
xchg
pushf
mov
rorb
ret
test
cmp
sbb
pop
in
je
cvttps2pi
push
rorl
mov
cltd
fadd
sub
xor
push
cli
jo
sar
sub
mov
mov
jae
or
mov
js
fwait
loopne
in
mov
in
popf
sarb
xchg
test
xchg
popa
push
sbb
mov
decb
sti
add
aam
aas
out
popf
pop
repz
mov
xchg
push
mov
jns
ficomps
lahf
jb
mov
insl
xchg
repz
cltd
jnp
std
lods
xchg
outsl
std
jmp
aam
jmp
leave
pusha
lret
mov
cmc
divl
xor
and
cmp
jbe
jae
jns
in
push
bound
xchg
jne
je
mov
mov
dec
mov
push
scas
dec
int
in
jmp
sbb
mov
pushf
movsb
int3
jo
and
xchg
push
jne
test
lea
lods
fidivrl
mov
mov
jb
dec
mov
div
loopne
jno
pushf
mov
sbb
loopne
in
dec
sti
dec
and
dec
mov
repz
inc
mov
repz
outsl
in
cwtl
push
cltd
pop
xchg
jb
aad
leave
arpl
in
movsl
ja
inc
jle
mov
imul
clc
enter
ss
test
rol
sbb
and
icebp
loopne
xor
cwtl
imul
js
push
cld
xor
mov
adc
jmp
dec
push
mov
sbbb
js
js
aas
xor
in
std
xor
jns
mov
xlat
cmpsl
sub
push
in
out
lods
xchg
and
mov
call
sbb
jno
scas
shl
ljmp
lea
adc
shrl
jg
jne
addb
xchg
sbb
fadd
mov
scas
out
push
clc
repz
imul
cmp
and
sbb
mov
ret
cli
mov
mov
fwait
adc
dec
push
fs
pop
and
out
aam
lret
cld
cmpsl
push
cli
rcr
fs
aas
jle
or
jae
negl
pop
xchg
rorl
dec
jge
mov
xchg
enter
xchg
xchg
aad
ds
ds
inc
dec
mov
mov
pusha
push
sub
outsl
insb
test
iret
pop
es
mov
pop
scas
inc
pop
jle
adc
hlt
and
inc
decb
adc
or
stos
aad
fwait
cmpsb
add
sti
jnp
test
nop
mov
dec
je
mov
xor
loop
fdivs
stos
lods
mov
sub
clc
filds
mov
test
movsb
mov
das
pop
add
cmp
scas
xchg
pop
cld
sub
mov
int3
mov
lret
subl
sbb
xor
cltd
movsb
jbe
fldt
scas
jnp
shlb
cmpb
mov
adc
aas
fistps
inc
lcall
sti
xor
icebp
ljmp
push
mov
std
arpl
or
pop
cmp
in
jg
pop
out
adc
xor
jg
lret
jo
adc
pop
loop
pop
in
test
into
adc
inc
dec
nop
repnz
outsl
lcall
push
xlat
jg
sti
mov
call
push
scas
mov
lret
in
or
icebp
cli
sar
sbbl
push
mov
outsl
jnp
ja
clc
aaa
lock
jb
sub
push
ror
stos
int
out
daa
adc
xor
adc
pop
dec
add
stos
inc
cli
sar
and
ja
call
cli
sbb
insl
or
in
stos
dec
inc
add
cld
test
mov
mov
or
dec
test
mull
jnp
insl
icebp
push
loope
cltd
fbld
add
pop
cmpsb
xor
jnp
xor
pop
ljmp
movsb
jb
mov
xchg
cltd
pop
popf
out
fnstenv
and
mov
mov
lock
js
pushl
dec
rdmsr
push
jbe
cmp
mov
hlt
sarb
ss
xchg
outsb
std
pop
pushf
lea
cmpsb
adc
inc
neg
mov
stos
decb
outsl
test
add
lds
movsb
in
pushf
adc
and
movsl
pop
ficompl
shrb
or
mov
inc
push
add
push
add
movsb
push
push
sbb
sub
mov
scas
adc
jecxz
sub
pop
and
insl
sub
and
cmp
add
cmp
divl
out
jle
stc
out
aas
jle
cmp
js
insl
xchg
mov
faddl
sahf
inc
sub
lock
mov
aam
push
std
inc
fwait
outsb
mov
pop
fimull
add
gs
jno
inc
daa
out
adc
aam
bound
das
jle
sbb
and
loopne
mov
outsl
lds
frstor
arpl
push
adc
cmp
push
adc
lods
lcall
mov
repz
pop
cld
pushf
fcoms
pop
js
div
sti
ret
stc
mov
js
mov
pop
xchg
cmp
idivb
pop
dec
enter
repnz
xchg
push
out
sbb
xchg
ror
cwtl
mov
roll
cmp
testl
fdivl
sub
sti
cmp
int3
cmp
loopne
mov
std
in
test
cli
lds
pop
sbb
mov
rcrb
xchg
mov
mov
scas
popf
test
sti
cmp
sbb
testl
jb
dec
or
jge
mov
xchg
call
inc
mov
xchg
lahf
push
sub
aam
pop
nop
jne
cmp
cmp
lods
xor
enter
cmp
dec
and
push
push
test
nop
mov
imul
jb
fwait
xor
pop
scas
mov
jns
inc
push
or
inc
mov
push
xor
add
cmc
popf
int
xchg
inc
cmpsb
scas
cmc
cmc
std
pop
and
mov
pop
jb
cmp
packuswb
pop
xor
in
xchg
jp
lock
pushf
sub
cli
xchg
sub
js
andb
in
mov
xlat
or
cmc
jbe
pop
xor
add
lods
lock
loope
push
int3
sub
mov
or
je
mov
repnz
fs
jp
mov
lds
cmp
and
lret
daa
mov
xor
jge
scas
pop
jae
sub
in
inc
pop
dec
jno
mov
xchg
cld
sub
repz
push
sahf
in
scas
pop
ror
cmpsl
pop
mov
mov
inc
shl
out
call
or
jbe
mov
pushf
pop
mov
pop
sub
xor
sahf
sbb
or
jle
mulb
data16
pop
ljmp
pushf
dec
ljmp
inc
add
in
add
jp
cmpb
imul
lock
int3
jb
mov
and
fisubl
out
mov
mov
rorb
pusha
out
addl
cmc
push
loop
mov
cmp
xorl
mov
ror
push
pushf
lods
pop
int
or
mov
mov
push
jl
cmp
add
mov
daa
push
xor
sub
adc
jl
aaa
repnz
test
lods
sbb
mov
lds
pop
cmp
pusha
lret
xchg
or
push
imulb
push
pop
aaa
shll
or
mov
loop
rclb
mov
jge
pusha
loope
sub
andl
pop
pop
sub
or
mov
jo
pcmpgtw
and
xlat
push
psubsb
stc
cli
xchg
out
fisttpll
flds
repnz
lahf
xor
mov
out
test
xchg
pusha
mov
aas
bound
aaa
jnp
mov
fidivrs
xchg
repz
and
fistl
add
jno
sahf
cmp
jmp
mov
cwtl
pop
fmulp
cmp
cmpsb
mov
mov
push
and
pop
jle
jl
movsl
mov
lods
stos
repnz
mov
repnz
insb
cltd
push
pop
xor
cmp
outsb
push
leave
cmpsl
push
sub
and
push
enter
xlat
sub
mov
pop
pushl
iret
cmc
ror
std
mov
scas
and
mov
gs
inc
sub
and
popa
pushf
sti
jmp
mov
xchg
pop
jnp
jbe
daa
sbb
addr16
xor
loope
cmp
push
nop
inc
pop
pop
mov
xlat
cmpsl
ret
mov
mov
mov
jo
cmp
dec
es
cmp
xor
push
fstl
and
dec
xchg
lods
sub
out
dec
push
jno
out
leave
and
adc
loop
call
pop
mov
lds
mov
loopne
jae
and
int3
mov
icebp
jmp
out
fwait
sbb
jge
cmp
mov
ljmp
ds
push
ja
mov
pop
out
lahf
sub
ja
push
ja
mov
scas
out
add
mov
cs
jb
ja
push
aaa
pusha
push
jno
out
lods
scas
testl
pop
aad
fisttpll
sti
and
repz
std
das
mov
repnz
fadds
pop
jg
jbe
xchg
sub
push
push
aam
xor
fmul
ret
xchg
ret
xchg
add
shlb
jmp
sbb
cmp
aam
sbb
cmp
aas
sar
sbb
push
xchg
mov
cmp
loopne
fistpl
mov
pop
idivl
fistpll
dec
push
mov
stc
movsb
in
jae
cmc
mov
pop
iret
jns
mov
push
call
sub
mov
out
lock
repnz
sub
and
add
jg
lea
shll
or
xor
out
dec
dec
gs
inc
xchg
data16
and
mov
sub
inc
cmpb
bnd
pushf
and
cwtl
fmulp
and
push
xchg
mov
repz
aas
cli
push
rcll
popf
sub
imul
dec
push
dec
test
adc
shr
stos
mov
scas
push
push
cmp
xchg
fiadds
push
repnz
gs
sub
adc
mov
jb
and
xchg
sub
pop
popa
jo
rclb
adc
aam
jmp
test
mov
into
addr16
setnp
stc
fistl
jp
jl
inc
jmp
test
pop
jbe
cmpsl
xchg
xchg
push
xlat
repnz
or
je
call
movsb
jns
jle
cmp
pusha
sbb
jge
call
hlt
jge
scas
cmp
je
mov
das
notb
mov
mov
ret
push
xchg
add
inc
icebp
or
test
dec
push
jl
mov
adc
sbb
sbbb
push
in
mov
jnp
fwait
andb
mov
popf
adc
or
hlt
jg
and
orl
dec
test
jbe
pop
pop
insb
js
pop
fs
icebp
mov
xlat
std
fs
imul
leave
xor
pop
decl
mov
repnz
icebp
das
jle
aad
pop
dec
or
jg
std
rcrl
iret
pop
mov
repz
push
push
inc
push
xor
add
shlb
push
js
stos
fstps
fidivs
arpl
notb
xchg
int
ror
data16
fldcw
lahf
movl
jns
jle
subb
std
mov
push
jns
mov
mov
and
inc
cld
jp
ja
sbb
push
lds
int3
xor
std
gs
scas
stos
pop
push
pop
out
mov
add
push
stos
pop
pusha
mov
dec
or
or
fdivr
mov
cld
xor
movsb
mov
pop
adc
sub
aaa
lock
mov
out
dec
mov
adc
pushf
fcomps
sarb
pop
adc
mov
pop
mov
mov
inc
mov
inc
das
mov
jmp
pop
mov
cmp
xlat
loopne
loop
jae
adc
or
mov
add
dec
dec
in
dec
int
rep
pop
push
dec
xchg
arpl
push
sbb
mov
push
ljmp
jle
sahf
ljmp
inc
in
bound
scas
imul
stc
adcl
outsl
adc
hlt
mov
xchg
ljmp
dec
xchg
xor
sub
fs
lret
xchg
xlat
xor
ret
imul
in
xor
jge
and
stos
stos
movb
div
cmp
int3
aas
in
in
das
negb
xor
mov
inc
ljmp
mov
insl
mov
dec
push
xchg
mov
jge
xor
push
push
icebp
and
add
pushf
sbb
out
cmp
or
hlt
sbb
and
ror
in
adc
hlt
aas
mov
sub
fsubl
outsb
mov
or
scas
fs
dec
pop
and
jg
jae
push
incb
cmp
pop
and
loope
inc
shll
jmp
sub
std
pminsw
mov
add
mov
out
jbe
xchg
xchg
sbb
mov
mov
and
test
js
je
mov
mov
sub
xchg
fbld
into
sbb
xchg
mov
fisttps
mov
push
and
das
stc
cmp
push
test
test
fstpl
lahf
stos
stos
mov
les
cmp
out
aas
cli
subb
push
in
jns
xchg
xchg
mov
out
out
pop
mov
lret
sbb
adc
push
div
xor
ret
leave
push
cmp
mov
cmp
and
sbb
sbb
repnz
int
jae
push
outsb
and
leave
sub
adcb
mov
cli
add
mov
aad
xor
xchg
inc
mov
and
cmpb
dec
push
push
push
push
sub
xor
stc
lods
fwait
xchg
adc
in
lods
popa
pop
pop
xchg
ficomps
inc
mov
hlt
addr16
lock
add
add
dec
dec
cs
mov
sub
pop
push
fabs
cmp
nop
das
iret
jge
fsubrp
and
call
testl
sarb
testb
mov
dec
out
pinsrw
aas
and
out
in
in
push
xor
std
pop
and
xor
stos
sbb
loope
xchg
adc
mov
and
mov
insb
lock
idiv
xchg
lods
dec
mov
dec
mov
int3
ljmp
les
push
insb
icebp
push
xorb
cs
adc
cmp
loopne
loopne
ljmp
adc
test
fcomps
sbb
inc
out
pusha
std
cltd
xchg
dec
dec
xor
adc
mov
rolb
lahf
mov
ret
rorb
lahf
push
mov
add
xchg
gs
clc
fsubs
add
mov
into
dec
pop
sti
xor
dec
repz
mov
or
subl
outsl
icebp
jbe
xchg
mov
pop
adc
aam
pusha
cmc
inc
incl
dec
movsl
xchg
sbb
add
and
sub
mov
ficompl
jb
jno
add
jno
loopne
lods
cwtl
repnz
mov
mov
mov
or
fcoml
scas
movsb
pop
and
cmp
ds
mov
rol
inc
cmp
mov
pop
xchg
mov
jnp
adc
lret
sbb
dec
adc
add
int
xchg
sbb
pop
scas
push
xchg
pop
hlt
aad
lods
jp
jg
add
fbld
ja
in
ds
out
dec
jo
push
dec
sbb
sbb
xchg
cmp
cmp
jns
mov
inc
sbb
lahf
stos
adc
jg
push
repz
out
mov
test
inc
inc
push
jp
iret
enter
repz
or
dec
testl
enter
xor
sub
fdivs
cmp
cmp
loop
jg
xor
pop
data16
mov
jle
hlt
scas
js
xchg
jno
pop
vmovlpd
cmp
das
xor
pop
call
dec
flds
rcll
imul
clc
lret
jg
dec
into
std
cwtl
or
aas
fldcw
aam
jmp
xchg
jle
rorl
pushf
popa
mov
movsl
aam
push
jl
stos
mov
shr
cwtl
jp
outsb
fs
adc
mov
cmp
pop
outsb
cmp
dec
xchg
mov
sbb
loopne
dec
cmpsb
sub
dec
mov
seto
mov
es
sub
add
dec
mov
adc
xor
pop
loope
aam
orb
mov
mov
jmp
and
push
push
pop
sub
xor
cwtd
movsb
and
fiaddl
xor
and
imul
xor
mov
or
xorb
inc
jne
xor
aad
and
aad
adc
arpl
jnp
pop
scas
ja
test
push
je
mov
and
adc
ljmp
xor
imul
pushf
fcmovnbe
sahf
in
daa
or
out
xor
jmp
fsubrl
inc
xor
and
jg
lods
mov
lret
jp
add
fisubrs
mov
xor
fmull
push
movsl
nop
outsl
outsb
push
fsubr
add
outsb
mov
addr16
insl
or
cmpb
hlt
dec
cs
std
add
inc
mov
mov
stos
pop
cmp
jo
or
jge
xchg
xchg
jmp
pusha
jle
das
cmpsl
mov
iret
xchg
jb
stos
mov
adc
jg
lods
push
lret
sti
xor
out
add
adc
mov
jns
sub
testl
loope
push
cmpsb
pop
and
jns
sbb
cmp
mov
cmpsl
fnstenv
push
test
hlt
cmp
mov
mov
push
dec
sahf
mov
xchg
lds
cs
call
mov
xchg
mov
dec
imul
addr16
lods
inc
inc
mov
adc
pop
repz
and
lock
cmc
mov
aaa
sbb
pop
ret
xor
jl
add
jbe
out
sub
pop
js
popf
fwait
inc
cmp
mov
sbb
out
inc
lock
mov
xchg
or
lea
mov
ds
stos
lods
pop
les
jp
sti
ljmp
mov
sbb
pusha
cmpsb
hlt
push
push
push
mov
mov
mov
nop
lods
add
ja
lds
jp
inc
push
out
stc
or
stc
mov
pop
ss
mov
cmp
sub
push
push
pop
sbb
sub
rolb
nop
adc
mov
test
fwait
das
lret
xchg
adc
std
fucomi
or
jns
data16
mov
cmp
in
fwait
pop
and
jnp
mov
fsubrs
repz
test
and
push
or
mov
jns
ja
ds
dec
aad
lahf
fists
fs
inc
mov
xor
cmc
dec
mov
pop
in
mov
cmpsl
aam
jns
aaa
push
arpl
scas
pop
iret
dec
dec
mov
call
ds
lea
rcll
mov
rep
loopne
aad
out
inc
jg
clc
dec
stc
cmpsl
inc
jle
inc
xchg
ds
ds
jg
insl
inc
push
jp
flds
sbb
lock
xchg
xchg
shll
or
addr16
shr
out
sub
sbb
add
das
loope
fwait
test
ds
mov
mov
xchg
sbb
xorb
cmpsl
in
fiaddl
cmpsl
add
iret
fists
in
in
scas
mov
pop
mov
jecxz
add
jbe
pop
retw
loopne
push
mov
mov
cmpsl
lds
test
pop
outsl
cmp
inc
stos
adc
ja
vpsrad
lods
mov
xlat
jecxz
lretw
and
or
xor
aaa
out
out
inc
out
pop
cmp
sub
or
sti
push
mov
pop
orb
leave
inc
bound
inc
push
lock
inc
lcall
mov
sub
pusha
cs
dec
sub
popf
dec
lret
lret
push
ja
push
test
mov
negl
aad
add
mov
mov
in
rclb
out
aam
aas
btsl
jmp
pop
pop
aam
jno
mov
hlt
inc
stos
xchg
mov
push
aas
cwtl
pop
std
pop
xchg
mov
xor
les
inc
pop
fs
clc
rcrb
mov
scas
out
inc
ljmp
cwtl
xchg
outsl
mov
add
insb
add
sti
out
sub
adc
iret
cld
lock
or
sbb
xchg
arpl
test
inc
jns
fwait
ljmp
scas
push
sbb
lcall
or
jbe
sbb
inc
xchg
loope
xor
mov
push
sbb
aaa
or
jl
lahf
cmp
xchg
fldcw
mov
nop
mov
out
jecxz
stc
push
in
xchg
je
in
push
je
in
hlt
je
clc
aas
inc
cs
jg
sub
add
dec
cwtl
add
jnp
dec
xor
icebp
cmp
inc
mov
leave
subb
jbe
cwtl
jbe
xor
mov
dec
outsb
push
and
loopne
icebp
xor
xchg
xchg
ja
xlat
cmp
cmpsl
aam
cmpsl
ja
xchg
xchg
add
fldenv
inc
sub
imul
bsr
stos
mov
sbb
pop
imul
sti
mov
lahf
fdivl
das
ret
jecxz
std
fstpt
pop
pop
mov
dec
mov
pop
mov
mov
dec
mov
xchg
inc
xor
mov
mov
fimull
mov
xor
sbb
push
push
sub
push
roll
gs
fisttpll
add
mov
dec
pop
push
sbb
jp
rdpmc
out
xor
or
push
mov
xor
out
or
in
jb
xor
adc
inc
cmpsb
jno
push
add
push
cmpsb
or
xchg
add
adcl
imul
in
pop
pop
sahf
push
push
stc
inc
mov
outsb
mov
or
sbb
push
add
xor
xchg
pushf
push
addr16
xor
or
and
mov
jmp
xchg
cmp
out
cmp
imul
pop
in
and
or
xchg
or
push
or
xchg
add
in
xor
cmp
sub
mov
push
sti
mov
mov
jns
push
sub
lret
clc
cmp
pop
mov
loope
inc
ljmp
addl
mov
ss
dec
adc
inc
fidivl
imul
repz
xchg
daa
fwait
xor
xor
sti
jle
lea
inc
sbb
mov
aam
push
aaa
and
xor
testb
mov
loope
sarb
add
test
sub
imull
lods
test
sti
dec
aaa
and
adc
fildll
push
hlt
lahf
add
dec
js
in
mov
dec
jp
sti
loop
dec
pop
std
jbe
jl
cltd
les
adc
inc
lahf
cmp
leave
pop
lahf
xchg
inc
hlt
add
imul
push
push
sahf
repz
pop
cmp
add
jmp
cld
into
sbb
in
xchg
outsl
mov
push
stos
push
jge
aam
mov
cmc
dec
out
gs
scas
test
or
je
gs
hlt
inc
and
jmp
mov
mov
adc
icebp
pop
out
jne
nop
add
fdivrs
xlat
nop
sarl
psubb
fs
decl
mov
cmovs
jb
add
loopne
or
loop
pop
jl
adc
pop
in
popa
or
xor
test
fwait
aad
lret
stc
jmp
lret
clc
pushf
scas
lods
adc
dec
mov
jl
jg
sbb
xchg
add
mov
sti
ret
jno
jns
adc
push
sub
or
add
xchg
cli
lock
push
js
and
cmc
icebp
adc
mov
dec
and
popf
cld
xorl
mov
arpl
ficompl
dec
mov
imul
xor
and
popf
mov
mov
mov
repnz
mov
push
popa
imul
or
stos
dec
sbbb
call
hlt
sub
jns
inc
and
inc
push
daa
push
xchg
dec
cmc
in
shll
out
imul
sub
addl
lds
jecxz
ret
int
pop
lds
pusha
mov
jo
mov
imul
inc
out
xchg
xor
sub
mov
popf
xchg
adc
out
inc
mov
arpl
imul
lea
scas
mov
mov
movsb
fwait
mov
jnp
orl
fstpt
jno
ss
jns
inc
inc
outsl
inc
fcomps
inc
movl
cmp
jb
orl
cmpb
sbb
mov
pop
fwait
xor
inc
push
jle
sarl
icebp
push
mov
cmpsb
shl
jge
mov
and
sti
inc
lock
pop
outsb
xlat
xchg
sbb
xor
call
mov
jno
sbb
rolb
fildl
fmuls
adc
sbb
jecxz
inc
add
int
inc
sahf
fisubrl
icebp
lahf
mov
and
lea
and
or
in
fldcw
pop
cmc
push
fnstenv
mov
sub
and
inc
cli
xchg
or
rorb
add
loop
fstps
pop
test
push
sbb
maxps
lea
out
mov
mov
into
jmp
mov
mov
aam
add
cmp
lret
adc
push
fldl
cli
aam
test
push
and
or
or
js
xor
packuswb
movsb
push
pop
mov
pop
popa
xchg
and
pop
pop
cmc
and
pop
xchg
mov
je
xchg
jno
jb
xchg
sub
inc
sbb
outsb
adc
mov
clc
ret
mov
lahf
shl
out
push
inc
mov
jo
inc
scas
in
aas
das
out
jae
mov
inc
adc
mov
shrb
ja
xchg
lahf
ret
imul
sub
dec
fnsave
icebp
cmp
fisttpl
inc
stos
fiadds
push
repz
pop
dec
cmp
inc
push
sbb
and
mov
sbb
negl
leave
xor
je
gs
cld
call
mov
mov
push
testl
aaa
push
das
mov
sub
mov
xor
mov
jg
test
jmp
subl
jno
sbb
cli
cmp
test
sbb
jns
fsubrs
fmulp
adc
popa
inc
daa
mov
bound
pop
mov
add
inc
shr
mov
mov
ficompl
sub
scas
xchg
sbb
pop
push
test
pop
push
xlat
je
adc
notl
xlat
sbb
push
cmpsb
and
insl
push
shl
mov
push
je
orb
fwait
push
js
lret
aaa
aas
cmpsb
lahf
lahf
dec
and
add
repz
data16
js
pop
mov
jp
xchg
icebp
mov
stc
xor
test
pushf
cwtl
cltd
enter
popf
dec
mov
repnz
ret
sti
mov
aam
adc
mov
xor
add
push
sub
and
push
std
xchg
dec
ret
xor
dec
push
mov
pushf
mov
arpl
push
mov
movsb
ficoml
add
cltd
js
sahf
jnp
mov
adcl
inc
and
xchg
dec
pop
addb
andl
in
ret
aad
dec
out
loope
insb
ret
pop
pop
in
mov
pop
push
jnp
aam
sbb
jne
mov
sahf
sub
in
iret
sbb
mov
mov
cmp
orb
add
popf
sti
adc
movl
and
ja
add
push
in
push
stos
xor
mov
and
loop
push
popf
dec
scas
push
mov
inc
pop
mov
rorb
js
pusha
mov
sub
push
loop
xlat
ret
ljmp
sbb
mov
pop
sub
jnp
mov
leave
jl
adc
pop
xor
xorl
pop
orb
not
inc
lods
xchg
adc
or
ljmp
cmpb
xchg
ficomps
mov
out
aas
enter
cld
js
sub
mov
jne
adc
das
loopne
jmp
add
sbb
loop
insb
jge
cli
int3
pushf
mov
xchg
jns
test
jnp
and
xchg
faddl
cld
jp
pop
cltd
scas
idiv
int3
iret
les
cmc
mov
inc
test
aaa
mov
jb,pn
arpl
mov
test
je
push
push
and
rclb
aas
sti
push
mov
add
test
cwtl
push
cmc
pop
mov
mov
mov
lds
add
jp
outsl
mov
and
cmc
sbb
outsb
lret
jge
xor
mov
scas
dec
xor
sub
sti
mov
dec
pushf
out
lcall
sti
test
jmp
jl
scas
xlat
pushf
loopne
pop
into
lds
sbb
xchg
xor
inc
push
xchg
adc
jl
into
dec
xchg
lahf
popa
out
sub
sub
stc
xchg
and
pop
out
pop
mov
jns
mov
lock
pop
jno
mov
dec
xlat
shll
cld
popf
mov
aas
in
imul
pushl
mov
mov
and
icebp
cmp
xor
scas
js
dec
scas
stos
adc
test
jg
scas
data16
stc
loop
in
cmc
imul
sub
sbb
iret
jp
push
fisubrl
sbb
cmp
decl
lahf
cmp
lret
dec
xor
ret
loopne
jge
cmpsl
loop
xchg
cmp
dec
ror
fs
pop
dec
cmpsb
pop
shl
mov
or
push
mov
cmp
mov
mov
data16
jle
xor
mov
fwait
arpl
in
movl
push
add
or
cmp
sub
scas
adc
jbe
in
add
incb
or
mov
xor
shll
jnp
pop
push
stos
dec
mov
xchg
fdivs
dec
add
jl
and
nop
int
pop
aas
inc
insb
add
mov
xor
mov
xchg
jmp
sub
les
fstps
leave
clc
or
addr16
dec
pop
mov
out
testl
pop
push
xchg
push
sti
push
xchg
test
or
fadds
fsubp
push
pop
gs
pop
sbb
outsb
test
mov
jo
pusha
notb
xor
mov
rclb
call
imul
jl
fdivr
add
inc
outsb
mov
cli
movsb
jmp
mov
out
leave
add
jecxz
push
jne
cmpsl
leave
aad
int3
out
shlb
pop
sub
test
hlt
push
lahf
ds
mov
add
mov
cmp
jle
mov
mov
cltd
pushf
sbb
inc
fucom
fwait
test
icebp
jo
adc
xchg
in
scas
stos
adc
int
out
mov
loope
xor
insb
rcrb
mov
out
push
mov
jge
dec
push
test
jae
mov
out
or
loopne
xchg
pop
sahf
mov
mov
hlt
les
out
enter
insb
jmp
dec
mov
enter
insb
orl
adc
cli
out
push
jmp
inc
xchg
sbb
test
jns
ret
rcrl
push
std
gs
inc
cmp
adc
subb
cld
xor
push
daa
iret
mov
mov
bound
sub
inc
pop
xlat
sub
pop
out
cmp
push
push
xchg
stos
ds
lcall
in
addr16
jae
jnp
fstpl
out
stos
adc
cmp
cmpsb
stc
adc
clc
mov
icebp
inc
mov
decb
enter
repnz
mov
and
cwtl
inc
ja
cli
adc
inc
xor
mov
bnd
test
xchg
adc
popf
fdivl
xor
cli
lock
and
nop
sahf
or
xor
test
aam
xchg
push
pop
jle
cmp
mov
pop
outsb
add
mov
and
ss
dec
loope
fisubl
jmp
shll
mov
adc
std
inc
inc
mov
jle
inc
ja
mov
push
sbb
fiaddl
repnz
xlat
addr16
addr16
idivl
sub
mov
imul
scas
adc
or
dec
cmp
mov
in
or
clc
sbb
lcall
les
jo
sbb
cwtl
dec
loop
xlat
mov
imul
cli
or
cli
dec
cmpsb
rcl
in
or
icebp
mov
popf
out
jp
adc
xor
jnp
cmp
dec
pop
adc
sti
test
cld
mov
xchg
subb
jl
mov
fwait
lods
jo
jl
out
lods
aad
scas
movsb
jbe
daa
cltd
hlt
and
das
mov
movsl
sbb
iret
loope
adc
add
mov
dec
lret
ljmp
or
loopne
push
push
int
iret
dec
ja
ds
cltd
lds
icebp
xchg
and
loopne
repz
mov
jb
fdivrl
jno
sub
pop
mov
mov
mov
add
outsl
in
scas
addb
add
out
inc
mov
adc
push
outsb
ds
rcrb
xor
sub
cmpsb
and
mov
and
pop
in
mov
aam
cwtl
push
mov
mov
outsb
xchg
jbe
das
out
data16
push
std
push
jmp
fnsave
push
inc
stos
outsb
xchg
test
sbb
jae
divl
adc
add
cwtl
mov
int
mov
mov
repnz
sub
arpl
xchg
scas
cmp
cli
mov
push
lea
sbb
or
cmc
sbb
mov
sti
stos
out
les
cmp
and
fs
insl
shll
mov
mov
in
jbe
or
pop
jge
mov
dec
mov
sbb
add
cld
cs
imul
adc
xor
ss
inc
push
stc
push
ret
jns
ret
push
cmp
xchg
scas
dec
addl
negl
mov
es
push
dec
sub
js
mov
in
mov
fstpt
mov
adc
inc
mov
dec
jl
jno
ds
incl
xchg
or
mov
mov
pop
ret
shr
pop
popl
es
mov
push
loope
cmp
shrb
ret
sbb
sbb
inc
test
cli
in
jge
test
testb
xchg
sbb
in
mov
sarl
cmp
mov
push
je
cs
into
jb
shl
lret
push
daa
cmp
bound
addr16
add
sahf
mov
mov
ret
mov
and
pop
neg
inc
rclb
xchg
and
insl
adc
mov
sbb
int
cmp
cmp
pop
ja
outsb
xchg
js
out
jns
cs
lcall
loope
incb
cwtl
jle
cld
es
mov
jb
daa
imul
or
movsb
xchg
scas
jge
sub
mov
xchg
push
fisttpll
adc
and
testb
inc
das
ljmp
ret
stc
push
pop
xchg
nop
or
fsubs
data16
adc
in
jg
enter
pushl
pop
adc
test
insb
xchg
shlb
pop
repz
mov
fidivs
pushl
mov
je
pop
inc
lods
jmp
nop
cltd
das
mov
pop
dec
fisubrs
push
cli
packuswb
jbe
or
and
sahf
rorb
cwtl
or
in
adc
in
pop
divl
int
icebp
push
mov
xchg
cwtl
dec
push
mov
js
push
std
ror
or
pop
mov
ret
sub
jns
popa
int
or
popf
jno
iret
fisttps
cmpsb
push
nop
pop
out
add
xlat
imul
rol
ja
xchg
mov
mov
call
dec
aam
cmpsl
out
icebp
or
mov
decl
xchg
xor
push
pop
mov
dec
mov
pop
mov
sbb
mov
adc
push
dec
jne
addl
test
jne
fidivs
sbb
lds
push
mov
ja
ljmp
in
or
jne
mov
mov
xor
dec
outsb
cwtl
inc
pushl
xchg
jbe
xor
jo
push
lods
aam
imul
test
pushf
rclb
mov
add
outsb
cs
cmpsl
inc
stos
jp
xchg
imul
ret
pop
int3
aaa
mov
testl
add
lret
js
lcall
jl
sub
lret
pop
les
dec
in
stos
mov
xchg
or
lcall
dec
lods
lods
lds
jge
dec
pop
lret
mov
je
sub
fwait
or
jge
mov
inc
adc
int
stos
dec
mov
add
jno
mov
fisubl
ja
scas
iret
sub
mov
cli
in
bound
ret
adc
mov
mov
imul
pusha
in
xor
jnp
jnp
mov
out
mov
or
shr
xor
or
in
add
imul
adcb
pop
xchg
into
into
mov
and
inc
aad
mov
mov
lcall
fdiv
scas
or
dec
push
add
imul
aaa
dec
mov
cmp
pop
pop
out
mov
rolb
mov
mov
int3
addr16
outsb
dec
and
fildll
and
lds
repnz
mov
imul
jno
aam
stos
push
push
popf
scas
xor
dec
aad
movsl
and
int
mov
mov
cmp
outsl
inc
rorb
pop
sarl
loopne
shll
enter
mov
dec
sub
mov
scas
rcll
sbb
mov
inc
movsb
and
push
and
in
out
sbb
add
pop
push
add
jp
xchg
js
dec
pop
es
fbstp
pop
pop
sahf
test
and
ficoml
xchg
dec
into
jg
bound
or
jno
test
stc
into
pop
shl
adc
pop
push
pop
iret
or
jbe
gs
insl
cmpb
pop
mov
fs
lods
or
mov
adc
pushf
mov
xchg
in
add
popa
push
mov
aam
stos
pop
fstps
dec
cwtl
jg
push
aaa
fcmovbe
add
fisubs
movsl
pushf
repz
lea
ficoml
out
dec
cmp
xlat
mov
aad
test
fisubrs
add
jg
mov
cwtl
pop
sbb
jo
jo
xchg
mov
sub
jl
cmpsb
mov
dec
add
mov
cmpsb
xchg
xor
mov
aad
pop
pop
cld
andl
xor
bound
push
or
inc
iret
xor
pop
dec
or
pop
test
or
fs
pop
lcall
mov
jmp
inc
cmp
daa
push
pop
outsb
stc
mov
xor
lock
stos
popf
js
movsl
push
in
push
cmpsl
pop
cmp
rcr
push
push
pushf
mov
and
dec
imul
mov
add
out
xorb
pop
stos
mov
jle
loop
stos
cltd
jecxz
lahf
mov
clc
stos
pop
into
scas
add
or
stc
scas
cmp
gs
stc
pop
pop
pop
pop
imul
add
or
and
or
push
sub
push
arpl
fdiv
in
cmp
call
inc
lds
mov
fucomip
test
dec
push
ljmp
xlat
int3
icebp
stos
pusha
sub
mov
sbb
xor
iret
insb
xor
incb
rcr
rcrl
and
xchg
mov
repz
add
in
or
scas
adc
loop
loopne
add
je
test
jne
and
test
loope
lods
lret
fwait
cmp
inc
in
cmp
fcompl
ror
sbb
add
inc
rorb
cmp
pop
data16
push
idivl
jmp
mov
push
xchg
gs
mov
imull
and
dec
insl
pop
mov
filds
mov
jnp
popf
xor
stc
xchg
jl
lds
inc
mov
push
xor
sub
test
mov
sahf
ss
sub
cmp
cmp
fnsave
sub
lahf
cmpsl
xor
push
stc
mov
loope
jb
inc
push
jl
jg
pop
jbe
mov
stc
in
cltd
cld
dec
xchg
cld
fisttps
mov
sahf
sbb
icebp
pop
dec
testl
push
popf
add
or
add
mov
and
mov
cmc
jp
adc
push
cmp
cwtl
cmp
andl
cld
roll
sbb
mov
cli
call
enter
dec
inc
cmp
mov
sub
stc
movsl
jno
mov
mov
rorl
outsb
ret
mov
mov
push
push
cmp
sbbb
es
jmp
int3
or
add
out
push
addr16
xchg
scas
loopne
mov
in
jle
test
mov
push
inc
xor
mov
mov
cli
pop
cmpb
add
and
xchg
cmp
pop
pop
jg
callw
ja
push
insl
adc
push
mov
pop
paddusb
in
lcall
xchg
mov
mov
sub
mov
data16
inc
mov
ss
call
push
jl
jns
insb
jp
pushf
dec
fidivs
ja
fmull
mov
popf
and
pop
jge
or
mov
jnp
andl
ss
xor
xchg
std
jmp
xchg
mov
je
cmp
push
dec
imul
push
popa
dec
ljmp
test
mov
dec
out
sub
stos
jg
push
push
cmp
mov
aaa
push
adc
mov
sub
and
mov
in
jae
test
push
pushf
cmpsb
loope
mov
xor
or
xchg
mov
fists
jnp
mov
pop
imul
out
int
cs
rol
leave
out
sbb
daa
pop
mov
or
mov
mov
outsl
jg
movsl
shll
das
adc
adc
xor
mov
mov
les
mov
add
out
mov
outsl
aas
aad
ret
outsl
adc
scas
mov
push
das
add
cmp
mov
rorl
mov
sbb
int
xchg
hlt
cmp
mov
ss
push
js
ljmp
in
icebp
push
mov
loope
fmul
ret
xchg
ret
xchg
add
shlb
jmp
sbb
cmp
negb
jl
sub
dec
lret
xor
lcall
loopne
and
xchg
xchg
xlat
or
jnp
adc
cltd
sahf
or
jno
into
add
mov
jmp
jnp
in
movsl
mov
mov
inc
es
iret
sub
testb
xor
pop
les
pop
enter
sti
scas
cwtl
xor
jns
lret
pop
pop
lcall
icebp
stos
fldenv
jnp
add
outsw
fs
jb
shlb
pop
jle
jecxz
push
imul
pop
lock
jae
adc
or
mov
add
out
ds
testb
push
subb
adc
loope
out
mov
mov
jecxz,pn
dec
icebp
add
rcll
sbb
sub
out
sbb
pop
xchg
rolb
xor
mov
paddw
ja
lods
xor
jp
aad
dec
pop
push
pop
negb
ja
movsb
jl
mov
cwtl
jae
aam
mov
std
cli
fldenv
cmp
dec
lea
sti
fisttpll
int
dec
ja
add
cmp
xchg
arpl
jp
notl
orb
push
dec
xor
insl
push
jg
push
imul
push
repnz
cmpsl
xchg
sahf
mov
sahf
sbb
cmp
sub
mov
loopne
inc
sbb
xchg
adc
xlat
popf
sbb
jbe
insl
fsubr
in
push
jle
adc
add
out
cmp
and
pop
mov
lea
pop
jl
pop
push
jbe
mov
cmp
mov
cmp
fists
inc
andb
daa
loop
pusha
leave
and
es
mov
pop
xchg
add
xchg
in
data16
lods
inc
popa
dec
mov
aad
jae
push
push
ret
add
fldenv
ljmp
movl
pop
inc
mov
pusha
and
pop
outsl
fs
inc
mov
jle
in
push
mov
lods
jno
movb
loope
fs
mov
stos
mov
aad
addr16
loop
fstpl
dec
int3
std
cwtl
mov
mov
test
outsb
je
mov
dec
cmp
sbb
xchg
xor
cmp
sti
or
or
mov
aas
inc
rcr
xor
hlt
int
jecxz
jns
lahf
jb
leave
pop
insl
cli
aam
clc
add
andl
jge
repz
lret
in
pop
pop
push
insl
pop
jne
das
das
lret
es
jp
dec
stc
pop
dec
xchg
popa
enter
lods
or
mov
rorb
mov
scas
pop
call
fiaddl
sahf
out
jl
push
iret
enter
into
adc
jne
addr16
bound
jne
dec
cwtl
das
push
test
pop
cltd
jno
mov
dec
jmp
xor
push
jno
call
or
sbb
cmp
push
int3
add
push
cmp
and
inc
pmaxsw
jns
loopne
hlt
cmp
enter
dec
cmp
call
inc
add
shll
sub
mov
jo
aam
xchg
pop
mov
xchg
mov
mov
popa
insl
loop
lods
stc
inc
dec
int
sub
popa
lods
jnp
mov
xor
push
push
pop
je
and
mov
insl
cmpsl
les
cwtl
cmc
sbb
adc
aaa
xorl
dec
ds
das
test
scas
jbe
adc
add
les
stos
sub
add
loopne
xchg
sbb
iret
mov
pop
cltd
popa
jnp
fdivrs
mov
push
and
mov
int3
xor
inc
stc
mov
xchg
push
or
add
jle
mov
mov
push
lods
or
negl
loopne
jo
das
in
cli
in
pop
loop
data16
cltd
pop
pop
xchg
int3
mov
xor
ret
cmc
icebp
push
jae
or
push
test
cwtl
ds
cld
jecxz
add
inc
imul
lahf
sahf
das
ucomiss
sahf
add
sbb
adc
mov
dec
call
pop
fstl
insl
jl
push
incb
out
rcrb
mov
mov
inc
mov
jbe
pop
int
dec
cmp
xlat
mov
hlt
sbb
int
jne
inc
je
xor
adc
jb
adc
dec
shlb
leave
mov
aad
cltd
ljmp
cmpsb
jns
int3
ja
push
fisttpll
ret
mov
es
xor
push
cmp
push
ret
test
jnp
adc
popa
pop
cmpsl
das
mov
and
test
data16
sbbb
das
jl
repz
sub
cmpsl
mov
mov
in
adc
jo
lret
addr16
mov
test
xchg
arpl
outsb
add
mov
inc
sbb
jno
fmul
pop
mov
mov
cmp
add
pop
aad
insl
mov
inc
cmp
std
movaps
inc
cltd
xor
loop
jl
xchg
es
test
jecxz
jmp
jg
add
xchg
gs
push
sar
xor
idivl
push
out
add
xor
sahf
add
dec
push
push
pop
outsb
cmc
pushf
push
jo
sub
loop
mov
adc
sbb
popf
cli
cmc
test
lret
subl
adc
inc
add
ja
jo
dec
movsl
sbb
repz
mov
pop
std
cmpsl
jns
decl
inc
cmp
dec
je
add
sub
ret
out
sub
loop
cld
sub
cmc
mov
sub
stc
xor
sbb
pop
xchg
addr16
fwait
dec
pop
lahf
popf
ret
fisubs
iret
inc
jle
push
negl
dec
jae
outsl
mov
fidivs
jle
push
inc
out
stos
jae
insb
xchg
mov
cmc
ret
sub
mov
mov
push
fwait
rolb
xlat
sbb
movsl
jo
call
aaa
clc
and
lret
shlb
scas
xchg
bound
repnz
lcall
jnp
jmpw
sti
sub
jle
mov
add
pop
push
pushf
stc
inc
nop
data16
stos
pop
adc
xlat
jp
lret
inc
cmpsl
loopne
fwait
std
xorb
cs
mov
test
cmp
sarb
lock
scas
jb
pop
nop
mov
jl
fists
jbe
or
repnz
outsb
iret
fsts
mov
in
push
inc
jbe
add
out
jb
push
cmpsb
mov
inc
mov
sub
xchg
in
jl
jno
push
test
out
push
jg
cmp
ds
das
iret
mov
ret
lds
fs
xor
cmp
jns
mov
pop
mov
outsb
cmpsl
xor
cld
mov
es
xlat
xor
inc
shlb
add
cmp
xchg
xor
out
mov
in
scas
addr16
fidivl
subb
loopne
sahf
call
jp
pop
pop
mov
jns
lahf
pusha
inc
insb
lret
out
in
int3
or
lods
inc
xor
xlat
dec
cltd
enter
in
sbb
xlat
cli
faddl
dec
out
mov
into
add
cmc
sbb
sbb
cli
aas
pusha
lods
inc
mov
pop
push
repz
hlt
xchg
adc
inc
icebp
pusha
fcomi
cltd
inc
orl
movsb
mov
outsb
sbb
popa
inc
push
cmp
xchg
push
push
push
pop
nop
and
xor
and
orb
add
fcomp
sbb
sub
ret
adc
adc
enter
adc
push
push
adc
xor
std
sti
outsl
ret
fdivp
out
jge
pushf
out
pop
neg
jns
neg
cmp
jl
mov
sub
sbb
jnp
loope
js
ja
leave
adc
aaa
add
lret
clc
push
scas
loop
icebp
and
jne
and
pop
idivb
aam
jp
clc
xchg
pushf
cld
push
and
push
mov
pop
cltd
in
or
leave
loop
cli
fsubs
int3
adc
sbb
cmp
call
jnp
mov
mov
call
das
rcll
pop
fld
mov
shl
mov
imul
mov
jno
jae
mov
in
cmp
cli
xlat
or
mov
ja
int3
or
rcrb
mov
bound
sarl
test
pushf
cmp
xchg
outsb
mov
mov
inc
sub
lahf
jle
add
mov
loop
ja
mov
push
shll
xor
xor
enter
sbb
pop
jns
fcoms
mov
jno
shr
xchg
imul
sub
inc
lods
push
sbb
pushf
ljmp
sbb
xor
lahf
adc
imul
and
add
dec
cmpsl
jmp
out
cmp
jg
adc
cs
out
cmp
fincstp
fildl
sub
cli
cmp
fs
notb
push
outsb
aad
ret
and
xchg
xchg
fdivrl
lods
stos
pop
adc
jge
stos
or
movsl
xchg
xorl
xchg
dec
sub
imul
mov
or
scas
test
test
adc
insb
loop
mov
cmp
imul
bound
or
or
or
adc
ja
popa
lds
cmp
push
mov
ljmp
out
cltd
mov
jb
or
adc
int3
sbb
arpl
fwait
in
and
jp
sahf
jnp
mov
repnz
popa
popf
lock
jnp
testl
test
push
outsl
stc
sub
je
pop
fisttpl
out
push
cmpsl
iret
aas
inc
cmp
add
xchg
decl
int3
push
cmpsl
out
frstor
imul
mov
mov
mov
clc
xlat
jno
fistpll
mov
cmc
sbb
sbb
fdiv
jnp
push
pop
mov
leave
iret
mov
repz
ret
xchg
out
ss
xor
movsb
rep
leave
es
cmc
mov
xor
insb
add
push
and
outsl
jge
dec
enter
push
adc
daa
icebp
or
pop
mov
shlb
stc
out
shl
fisttpll
ds
mov
imul
leave
or
rcll
pushf
and
int
add
sbb
mov
lock
dec
mov
iret
pop
inc
adc
ret
and
movsl
lods
add
add
jbe
add
push
sbb
popf
loopne
add
aam
ja
mov
fidivl
push
test
pinsrw
test
orl
mov
lods
lahf
in
adc
sub
outsl
push
xchg
aaa
push
fwait
cltd
dec
mov
cmpsl
mov
fimull
ror
cmpl
cld
mov
sub
insb
xlat
cltd
sbb
addl
sarb
adc
arpl
stc
inc
pop
jecxz
or
xchg
push
shll
pop
fcmovu
xchg
scas
int
lret
pushf
shrb
xor
sub
push
dec
cmp
xchg
lret
or
jnp
inc
and
and
loopne
dec
inc
std
xchg
xchg
xchg
pushf
adc
sbb
sub
std
loopne
jmp
hlt
icebp
lods
mov
adc
scas
jne
sub
dec
das
insl
fistl
pushf
vmovd
push
aaa
lods
add
adc
icebp
sbb
mov
ja
mov
setg
inc
dec
out
or
inc
jnp
sub
enter
adc
push
das
dec
pushf
xchg
lret
xchg
ljmp
mov
cmpb
xchg
mov
inc
and
or
in
and
xchg
and
jbe,pt
rol
dec
fwait
call
add
sub
aam
sub
add
ficoms
loope
mov
stos
repnz
and
inc
mov
das
sahf
test
js
cmp
in
adc
jl
lea
mov
cmpsb
aas
mov
add
fstpl
mov
mov
sub
negl
xor
xchg
iret
hlt
inc
shl
data16
jmp
lock
xchg
nop
jg
fcoml
cs
push
sbb
sub
cmp
div
jns
enter
pop
outsl
loope
out
or
mov
enter
out
mov
cld
flds
cmp
inc
cmpsl
addr16
cmp
jge
pop
xchg
sub
imul
push
jae
jecxz
fsts
jecxz
pop
dec
inc
sbb
cmp
imul
dec
repz
push
sahf
je
cld
push
pop
outsl
or
mov
jbe
mov
test
or
mov
jae
movsl
lahf
jmp
pop
cmp
int
lcall
sub
je
xchg
ret
lret
lret
sbbb
xchg
adc
xor
jle
inc
icebp
mov
repnz
push
shlb
push
movsb
lea
test
pop
dec
jmp
jnp
xchg
leave
jg
out
jmp
jnp
insb
sti
scas
insb
cmpsb
inc
cmp
and
ljmp
fisubrs
and
push
jae
mov
xor
jb
data16
sub
shlb
mov
cs
outsb
dec
out
sub
movsb
stos
jmp
jmp
scas
mov
fiadds
adc
ljmp
insb
push
out
stos
ljmp
mov
fistps
mov
xor
inc
cmp
aam
loope
div
xchg
pop
inc
cs
add
orb
repnz
cwtl
jae
in
jae
iret
test
mov
data16
shlb
orb
pop
xlat
xchg
push
lods
jnp
mov
adc
fidivrl
fs
fsubs
dec
aaa
ror
in
clc
fsubrs
mov
and
psllq
dec
clc
cmp
call
out
nop
mov
repz
inc
mov
inc
cmpsb
add
in
sti
and
sbb
cmp
dec
mov
sub
sahf
pop
adc
sub
sbb
in
mov
and
mov
ja
push
das
out
add
sar
jbe
int
loopne
mov
call
cmp
dec
jns
mov
sahf
outsl
sahf
cltd
pop
imul
push
daa
fisubs
jmp
outsl
pop
in
dec
mov
cwtl
roll
push
jbe
cltd
cmp
sbb
jb
jmp
pop
dec
enter
mov
inc
hlt
sbb
sbb
clc
maskmovq
repnz
jmp
fcoml
addr16
inc
aaa
fst
aaa
push
cwtl
dec
xchg
mov
fnstsw
push
xor
push
out
cmp
cmp
and
mov
jne
adc
repnz
repz
pop
adcl
xchg
pop
out
pop
mov
xchg
sar
sub
scas
pop
pop
push
std
je
jecxz
out
push
sub
pop
insb
push
push
cmp
in
inc
lret
or
pop
or
mov
pop
and
cs
push
pop
mov
loop
and
mov
cmc
aam
mov
lds
dec
or
and
add
mov
loopne
lret
rcl
pop
sbbb
sahf
xor
std
fimuls
fxam
jb
jmp
xorl
bound
sub
addb
mov
aas
fmull
pop
loopne
add
or
xor
push
add
mov
scas
das
into
ljmp
jns
shrb
xchg
push
jg
les
out
push
cmc
ds
jecxz
cmc
sub
sbb
stc
jno
pop
inc
xchg
imull
or
addr16
sbb
and
in
stos
cmc
stc
inc
jge
decb
cltd
and
sbb
adc
jecxz
inc
out
push
lods
ds
int3
jbe
testb
xor
jle
ror
cs
mov
adc
leave
test
pop
jg
mov
dec
popl
inc
out
sub
ja
push
sbb
and
or
je
jmp
fiaddl
addr16
inc
loopne
adc
pop
and
hlt
mul
or
xorl
and
test
rorb
fdivl
and
cmp
mov
jb
andl
cmp
sbb
inc
test
sub
adc
imul
mov
sbb
cld
addb
sti
loop
jp
aam
push
dec
cmpsb
sbb
dec
fstpl
shlb
xlat
mov
or
jp
jbe
inc
fdivl
adc
out
xchg
or
add
cmp
cwtl
dec
idivl
dec
lock
xlat
pusha
mov
or
push
inc
jmp
inc
push
pushf
push
int3
add
xchg
pushf
mov
je
nop
mov
mov
cmpsl
iret
cmp
pop
fisttpll
mov
in
add
xchg
cmp
js
call
push
jle
adcb
mov
sbb
add
and
adcb
dec
jo
in
popa
movsb
stos
mov
cli
cmpb
dec
pop
test
mov
xchg
fmull
aad
xlat
movsl
xor
add
mov
pusha
xchg
jbe
lahf
push
nop
hlt
jmp
sub
roll
lock
mov
stc
hlt
idivl
push
pop
int3
xor
ret
cmp
repz
push
inc
push
pushf
out
pop
int3
xlat
inc
mov
inc
xchg
xlat
pop
xchg
leave
testl
xor
std
out
inc
sbb
jae
sbb
adc
or
dec
roll
lret
imul
cmp
mov
push
sub
ficoms
xor
das
int
push
xchg
inc
mov
and
stos
add
out
add
idivl
xor
inc
or
out
or
stc
in
fsubl
or
stc
loope
pop
ljmp
jp
jl
cmpsl
pop
fistps
or
punpcklwd
out
test
daa
out
mov
fadds
pop
es
and
mov
jecxz
mov
mov
mov
add
jmp
adc
push
ficompl
add
mov
clc
or
or
ret
dec
adc
nop
lahf
inc
xchg
push
out
cmp
cmp
and
cli
adc
add
scas
mov
repnz
dec
pop
jbe
ret
repnz
xor
jg
ljmp
aaa
sarl
pop
aad
mov
insl
mov
push
jecxz
in
mov
fldcw
add
dec
shlb
or
popa
insb
mov
adc
decb
fdivrl
das
test
je
pushf
lahf
orb
daa
ss
out
rcrl
lret
dec
es
and
sub
negb
sbb
mov
clc
outsl
or
add
loop
fcomip
inc
dec
fdivr
dec
in
cltd
jmp
jbe
out
in
dec
jl
xor
xchg
inc
outsb
jl
adc
and
xor
imul
lock
inc
sbb
loopne
int
test
cld
js
jl
lods
test
out
jecxz
ffree
or
aam
stos
clc
and
sub
mov
push
push
xlat
pop
ja
push
fstl
jmp
cmp
shll
and
pop
fidivrs
cmp
dec
addr16
jecxz
lock
insb
fcmovbe
push
add
and
mov
shrl
lods
push
scas
rclb
mov
or
aas
mov
pusha
loop
in
leave
cmp
mov
push
fistps
clc
fninit
pop
mov
mov
sahf
jge
dec
loop
jbe
and
rolb
pop
or
dec
add
sti
mov
mov
hlt
and
jl
fmuls
test
fisubs
add
test
idivb
ja
fcmovnu
fbld
lret
daa
out
sbb
std
std
fsubs
push
es
dec
pop
leave
push
fwait
scas
xor
mov
lds
jb
mov
out
rcll
inc
cmpsl
mov
lock
push
nop
aaa
or
lods
mov
mov
ret
cmp
int
push
jle
xor
cs
add
iret
sahf
fcmovnbe
add
out
pop
fistpl
ss
orl
shll
ret
scas
or
lret
pop
inc
mul
push
push
sbb
cwtl
cltd
mov
cs
scas
ja
pop
in
and
cltd
insl
xor
lahf
mov
dec
arpl
imul
int
xchg
popf
lods
and
leave
jbe
fwait
add
shlb
pop
inc
and
sti
cwtl
sbb
inc
movl
in
sbb
insl
movsl
les
testb
out
add
cmp
shl
pcmpeqd
lcall
pushf
cmp
pop
repnz
test
das
sbb
push
test
xor
bound
inc
iret
mov
xchg
repnz
incl
adc
loopne
pushl
add
xchg
cmp
dec
fists
lds
repz
inc
pop
pop
xchg
pop
jnp
pop
push
sahf
lret
test
scas
leave
mov
pop
sub
test
sbb
xchg
mov
mov
cmc
jo
orl
adc
mov
clc
shl
sbb
pop
adc
cwtl
cmpsb
sbb
inc
mov
call
iret
or
jle
js
xchg
addb
test
imul
rcl
push
or
sbb
jg
mov
mov
sub
inc
sub
lods
lcall
mov
pushf
cwtl
roll
inc
sbbb
or
and
and
int3
push
pop
rcl
add
dec
and
mov
jmp
out
jno
push
hlt
sahf
clc
inc
mov
jae
xor
bound
lcall
sbb
lea
fwait
sahf
mov
sar
adc
add
loop
adcl
ja
inc
fnsave
pop
stos
mov
pop
pop
sbb
popa
jecxz
shrl
cmc
outsl
xchg
std
fcmovnu
into
int3
mov
xchg
mov
outsb
jbe
mov
sbb
sahf
inc
mov
cmp
add
push
mov
iret
sbb
cwtl
pusha
and
mov
loop,pt
add
cltd
rclb
mov
ss
shrl
dec
lea
jecxz
mov
popf
mov
js
mov
in
mov
mov
bound
inc
ret
fwait
mov
out
daa
addr16
fcmovnu
ja
sub
fcmovnu
mov
mov
sub
shrb
dec
sub
movsb
out
addr16
lret
jae
stos
ds
cmp
lock
or
xchg
sbb
jnp
sbb
xchg
data16
jnp
rcrb
push
aad
loopne
aaa
jo
xchg
pop
adc
out
inc
cli
fidivrl
fpatan
or
shlb
mov
push
adc
and
jae
addl
addl
cmp
int
adc
mov
cmp
shlb
out
and
mov
rorb
js
or
xor
mov
jne
insb
adc
daa
sub
shlb
hlt
lahf
sub
nop
loope
push
shlb
add
sti
or
cld
rorl
cld
lret
mov
jne
fstpt
or
jo
imul
out
xor
add
movsl
jo
inc
data16
mul
in
lsl
popa
ds
add
mov
movsb
das
loopne
notb
pop
int
filds
fdivrl
inc
scas
xor
sahf
cmp
push
jecxz
fsubrs
aad
shlb
xor
adc
dec
xchg
mov
add
pusha
xchg
mov
daa
dec
test
sub
xchg
movsl
inc
adc
aas
cli
insb
and
testl
pop
xor
cmp
andb
sahf
inc
out
das
xchg
cmc
add
mov
mov
mov
mov
out
sub
lcall
mov
filds
mov
push
mov
aas
call
mov
icebp
aas
mov
cmove
add
shr
imul
aas
jl
jns
aas
mov
insl
test
out
jle
xchg
aad
jns
movsb
xor
mov
adc
pop
popa
mov
test
jecxz
scas
cli
xor
inc
cmp
scas
in
jmp
jge
add
rcrb
cmp
dec
sbb
out
into
or
xchg
fisttpl
mov
cmp
in
out
xchg
dec
mov
movb
lret
cs
sbb
mov
mov
popa
icebp
jmp
pop
push
xor
dec
je
and
xchg
mov
mov
out
pushf
test
ja
lds
mov
push
xor
jp
and
shr
xchg
lcall
pop
adc
sub
xchg
xor
sahf
jae
cltd
pop
ret
nop
push
push
cmp
out
fsubl
pusha
fdivr
divb
mov
into
or
fbstp
lea
dec
fnstenv
push
das
sbb
add
fldt
insb
ret
add
stos
sbb
add
xor
inc
fwait
adc
mov
push
and
enter
jns
dec
sbb
adc
mov
jmp
xor
adc
mov
push
scas
lret
xor
mov
push
fcoms
adcl
es
inc
and
lods
jp
sub
cmc
xchg
std
xor
outsb
cld
mov
js
fistpll
cli
mov
test
int
psubsb
xchg
dec
mov
mov
popa
jae
sbb
jp
dec
xor
daa
sub
ja
pop
inc
xor
pushf
idivb
dec
hlt
mov
fisubs
add
mov
and
jne
and
paddsw
aaa
test
dec
lahf
sti
idivb
cmp
addr16
add
loop
mov
jle
fnop
cmpsl
xchg
jg
sarl
mov
scas
in
pop
xchg
pop
mov
call
test
ret
shlb
ds
pushf
add
jmp
test
jns
iret
ljmp
bnd
xchg
std
stc
jo
int
xchg
pusha
inc
cmp
mov
dec
sbb
outsl
mov
add
sbb
addb
bound
mov
das
subl
and
add
xor
ljmp
mov
push
dec
fidivl
jg
sub
and
out
inc
into
jnp
out
je
dec
adc
sbb
mov
cmp
mov
add
lahf
push
iret
rorb
and
stos
imul
push
movsl
sub
mov
mov
std
cmp
cs
or
pop
cmc
jecxz
push
xor
mov
pop
iret
sbb
jb
cmc
repz
movntq
dec
das
ja
dec
sub
imul
mov
loop
jae
sbb
or
insb
push
push
adc
pushl
jg
imul
xlat
mov
mov
aas
addl
xchg
scas
out
cmpsl
xchg
mov
sbb
popa
ret
imul
pop
call
mov
dec
jg
call
inc
add
add
mov
sbb
hlt
in
adcl
les
jecxz
pop
jno
jge
in
xchg
lods
in
in
pop
cli
daa
sub
add
stos
js
mov
insl
pop
pop
scas
out
int
fwait
jo
test
mov
js
outsb
dec
xchg
arpl
push
jns
jnp
adc
clc
in
incl
mov
mov
ss
ja
cld
loop
bound
fucomip
mov
jae
sti
push
fstl
inc
ficoml
out
sbb
cli
mov
ficomps
sti
add
sahf
ja
xchg
aaa
mov
divl
cmc
stc
pop
and
dec
cmp
cli
pop
pop
das
dec
lea
lock
nop
cmp
jge
cli
push
out
add
out
mov
cmp
inc
sbb
mov
aaa
xor
out
sub
xchg
divl
jne
sub
arpl
pop
push
pusha
imul
outsl
pushf
inc
scas
popa
ja
rolb
push
jmp
mov
xchg
sti
in
sub
inc
test
cmpsl
js
comiss
out
xlat
inc
inc
cmpsb
shlb
pop
mov
out
xchg
jnp
cmpsl
add
ret
sbb
cli
rclb
enter
fwait
dec
lock
ficoml
push
ficompl
cld
pop
aaa
xchg
loop
out
dec
pusha
jo
cltd
mov
imul
cmpsl
cli
lahf
pop
jbe
ret
mov
or
negb
sbb
les
adc
jg
or
mov
push
mov
mov
or
stc
push
loop
clc
lret
sub
push
in
mov
hlt
inc
cmp
adc
cwtl
push
cmp
or
pop
dec
xor
ret
mov
lret
mov
jle
dec
pop
add
pop
aad
fdivrs
orl
lock
xchg
push
mov
pop
pusha
sbb
inc
lret
imul
jg
inc
pop
jmp
call
or
stos
push
add
dec
ret
nop
aad
add
jb
sahf
sbb
test
mov
push
sti
cmp
ret
dec
sarl
nop
mov
lods
push
xchg
repz
inc
xor
rcll
mov
repnz
cmp
pop
ds
push
xchg
mov
das
sti
jbe
imul
inc
jns
jo
dec
inc
rorl
dec
in
lahf
xor
adc
xchg
andb
das
jnp
push
add
cmc
loop
or
jge
pop
mov
outsb
dec
popa
aas
fcoms
roll
lock
ss
aaa
lret
sbb
lret
dec
stc
dec
call
lret
push
cmpsb
clc
cmpsl
cli
pop
pop
push
insb
xor
shll
scas
pop
stc
cmpsl
mov
mov
adc
xchg
add
outsl
test
jg
mulb
lods
xchg
and
cmp
shll
mov
js
dec
ffreep
jmp
sub
sti
jecxz
adc
mov
cmc
mov
movsl
mov
dec
xchg
test
push
js
cmc
inc
pop
popf
shrb
sub
xchg
bound
and
leave
idiv
adc
xorb
and
push
jecxz
add
cmp
lahf
das
repz
sbb
mov
jbe
xor
aam
aam
mov
mov
jae
dec
xor
rorb
jge
add
clc
adc
ds
cmp
iret
cmc
push
push
loopne
lock
int3
dec
mov
sub
inc
out
scas
js
push
hlt
pop
mov
int
out
jge
popa
outsb
cmpsl
add
pop
lock
psrlw
ja
insb
sahf
dec
lods
sbb
rclb
pop
jl
out
mov
jbe
cmp
ja
fucomp
add
ss
pop
cmp
loopne
pushf
dec
cmpsl
pop
sub
inc
cltd
pop
cli
mov
in
xchg
mov
test
dec
mov
neg
mov
pop
dec
sub
in
bound
mov
mov
repz
sub
jl
mov
ret
sbb
mov
cld
jmp
pop
jge
cld
fs
test
mov
mov
xchg
inc
ds
scas
scas
push
jae
arpl
stc
cmp
cmc
mov
push
js
ret
xlat
pop
dec
je
rcr
and
in
pop
movups
xchg
xor
sti
xor
sub
jp
in
lcall
pop
out
fists
sbb
ret
test
cmp
mov
psubb
loopne
sti
pop
mov
ficoms
imul
call
cmc
push
push
in
fmull
fisttpll
pop
into
fucom
insl
inc
in
fildl
lea
lds
repz
nop
cmp
mov
aad
pop
daa
and
mov
lods
cmpsl
or
rcrb
xchg
cmp
fwait
enter
sub
xor
outsl
ds
xchg
cli
inc
sbb
push
popa
adc
jecxz
ret
filds
cmpsb
pop
push
int
mov
cmp
sbb
xchg
rorb
fcmovu
fsubrp
loop
clc
mov
cli
cld
scas
repz
iret
or
jg
lds
mov
jge
ds
jne
sbb
test
push
cmc
xor
adc
mov
out
scas
stc
dec
ss
push
lods
icebp
lret
cmp
out
mov
mov
adc
adc
test
fimull
xlat
inc
cld
in
jl
sbb
mov
jne
pop
inc
pop
adc
jne
out
adc
fwait
arpl
stc
std
in
outsb
outsb
out
sbb
inc
inc
mov
mov
es
mov
dec
movsb
and
sti
cmp
xchg
push
push
xor
or
aam
adc
xlat
incl
mov
cwtl
inc
loop
jb
insl
jl
jmp
pop
popf
adc
in
xor
aaa
xor
aam
jmp
lods
out
icebp
mov
lods
xchg
lahf
push
subps
scas
adc
jbe
xchg
neg
in
mov
lahf
sbb
repnz
pop
jmp
loopw
sti
aas
bound
pop
adc
sub
ds
push
cld
in
hlt
or
js
scas
inc
repz
in
bound
mov
or
das
shl
insb
iret
call
mov
loop
xor
xchg
xchg
xor
mov
jge
imul
sbb
stos
mov
and
sbb
pop
pop
ss
mov
cmp
mov
sub
push
pop
int
mov
js
push
jl
aaa
rcll
adc
pop
out
jecxz
fstpt
test
pop
adc
lret
sub
cli
sahf
jle
cmc
aas
jecxz
stc
ljmp
xchg
pop
mov
leave
stos
test
adc
stos
jb
push
fbstp
out
out
popf
mov
scas
fisubrl
mov
mov
pop
mov
fwait
outsl
push
jg
fcmovnbe
fstpt
out
dec
into
orl
mov
iret
mov
pop
mov
jge
call
mov
imul
mov
insb
pop
cwtl
sbb
addr16
jg
in
ljmp
jbe
jge
cmp
stc
cmp
dec
ror
jmp
pop
outsl
ja
xchg
jecxz
jmp
xchg
and
out
stc
push
es
xchg
cmp
inc
imul
sub
xor
iret
pop
into
jns
loopne
ret
jp
fdivs
push
and
pop
dec
dec
dec
xchg
pop
sub
xor
dec
jmp
int
je
dec
sti
push
pop
pop
mov
mov
and
mulb
adc
loope
pop
jmp
dec
int3
mov
adc
lret
stos
out
scas
fildll
mov
stos
mov
cld
inc
push
icebp
xchg
pop
or
test
sub
scas
mov
jb
stc
mov
scas
adcb
push
int
pop
mov
jle
push
sti
movsl
push
cmp
adc
push
imul
push
cmp
jb
push
sub
jnp
stos
ds
push
rclb
sub
pop
mov
jae
push
mov
mov
fsts
subb
in
mov
scas
jo
jb
push
and
jb
push
mov
fstl
xchg
pop
mov
cmc
movsl
push
adc
loop
xlat
xchg
pop
shrb
jno
push
push
adc
mov
adc
jg
movsb
sub
call
sub
cld
xchg
fdivrs
jns
sbb
mov
int3
push
dec
rcl
push
adc
pushf
lcall
or
iret
push
sahf
pop
clc
dec
dec
jnp
inc
loope
vphaddwq
ss
xchg
shrl
cwtl
xlat
test
dec
inc
inc
cmp
jecxz
test
cld
mov
mov
lret
test
xchg
out
jl
stc
sar
pop
mov
cmp
mov
xor
sub
jns
mov
loope
aam
inc
fst
dec
popf
xchg
arpl
dec
dec
xchg
sbb
jp
add
inc
dec
icebp
mov
mov
insl
push
inc
out
aaa
or
push
out
movsl
aad
ret
int
xchg
adc
or
inc
scas
call
inc
mov
jmp
sbb
mov
inc
sti
mov
and
loope
mov
pusha
mov
or
loopne
add
mov
xor
mov
xor
fisttpll
add
rcrl
xchg
jge
scas
loopne
mov
out
mov
push
aas
xchg
in
pop
jl
scas
hlt
lret
mov
fistpll
in
loop
lock
jge
push
clc
add
fnstenv
loop
mov
sti
push
scas
jmp
mov
out
loopne
jge
mov
pop
jg
adc
add
adc
xor
mov
in
ret
cs
jo
repnz
loope
aas
xchg
jg
xor
mov
mov
lock
lret
mov
faddl
aas
xchg
jge
arpl
ja
add
lret
mov
sti
nop
repnz
cli
inc
pop
lret
mov
sub
ja
arpl
lret
mov
cld
push
xchg
xchg
jge
arpl
ja
jecxz
lret
mov
cld
mov
repnz
mov
dec
arpl
ja
arpl
lret
mov
notl
in
lret
cs
pop
arpl
xor
stc
ja
jecxz
lret
mov
pusha
arpl
ja
xchg
xchg
jge
arpl
ja
push
aas
xchg
jg
sbb
pop
cld
enter
mov
rol
repnz
fwait
sbb
pop
repz
mov
out
aas
xchg
jge
arpl
xor
mov
repnz
mov
push
arpl
lret
mov
jo
stc
ja
xchg
xchg
jg
xor
mov
fistpll
pop
cld
clc
repnz
rorb
incb
and
lret
mov
std
sbb
arpl
lock
lret
mov
cli
inc
in
rorb
stc
ja
jecxz
lret
mov
cli
orl
repnz
ret
cs
test
stc
ja
arpl
lret
mov
lock
lret
mov
arpl
xor
mov
mov
std
js
repnz
in
push
aas
xchg
jle
arpl
sbb
cltd
out
xchg
shlb
in
or
dec
loope
mov
sar
inc
mov
pop
xchg
push
lahf
les
jmp
sbb
ret
aad
bound
jno
movl
mov
loop
push
xchg
sub
inc
insl
imul
xor
or
cld
push
orb
pushf
aad
ja
sbb
loopne
mov
aad
repnz
lds
push
pop
movsb
sub
nop
jp
jo
dec
dec
sub
inc
mov
jnp
sub
int
push
inc
sub
jl
pushf
jecxz
cwtl
add
jge
or
test
jg
jg
or
sub
mulb
sbb
ret
leave
mov
mov
pop
sti
mov
in
xchg
outsb
xlat
es
pop
addr16
sbb
loop
mov
mov
dec
inc
adc
bound
decl
in
aaa
nop
sarl
mov
insb
pushf
jo
int
add
lds
inc
lods
fdivr
xor
jge
cwtl
push
and
jbe
pop
outsb
mov
js
and
xor
in
call
sbb
sbb
cmpl
cwtl
in
inc
jnp
mov
mov
mov
dec
aas
stos
dec
xor
sub
dec
add
leave
mov
ljmp
insl
out
in
pop
pop
jae
mov
mov
pop
jl
or
ret
xor
lock
inc
stos
jae
cmc
mov
xor
mov
mov
mov
xchg
lcall
jo
ret
pop
jns
mov
cmp
and
inc
pop
mov
sub
mov
sub
std
mov
or
mov
pop
in
js
mov
mov
mov
jp
cmp
cld
push
cs
and
jmp
inc
lds
adc
fsubrp
notl
ret
push
repnz
sub
cmp
adc
or
lds
fistpll
test
push
inc
ljmp
pop
ds
cmpsb
dec
popf
mov
icebp
jo
ja
jbe
scas
pop
or
stos
jmp
and
ds
pop
cmp
test
adc
push
inc
fstpl
aas
add
scas
lds
add
inc
mov
pop
inc
clc
arpl
jbe
adc
outsl
icebp
gs
jmp
jbe
or
cld
lock
jnp
push
hlt
loope
scas
aaa
popl
add
mov
icebp
stc
inc
enter
jg
push
sar
arpl
adc
ja
xchg
jno
lret
mov
pop
in
xor
test
daa
lcall
jge
mov
cmp
add
in
repz
fwait
lea
sub
rorb
test
jl
sub
jns
adc
out
leave
or
jl
push
push
dec
pushl
jge
icebp
mov
lret
pusha
popa
jnp
adc
lods
jno
int3
les
pop
push
shrl
jmp
into
jge
lcall
popf
je
mov
mov
inc
jle
sbb
lea
pop
cmp
fimull
mov
and
sub
mov
sahf
jl
stos
out
fisubs
sub
daa
lds
xchg
adc
cld
adc
repz
shl
mov
lret
in
inc
jle
test
adc
sub
push
mov
adc
fcoml
mov
ja
cltd
and
dec
lss
in
mov
and
dec
movsl
shlb
jmp
cmpsl
cmpb
dec
shl
and
dec
notl
xchg
push
mov
add
mov
fisubrl
add
mov
xchg
jne
or
mov
shlb
push
shld
negb
es
add
jns
subl
jle
pop
xor
cld
sub
or
nop
lods
mov
mov
aaa
test
adc
adcb
testb
out
xchg
push
test
lods
inc
ficompl
adc
mov
or
pop
fs
pop
or
movsb
sub
cwtl
mov
rorb
mov
mov
loop
out
push
push
sub
into
sub
rcrl
cli
cltd
dec
push
out
mov
cmpsb
and
mov
cmp
test
mov
rorb
cmp
cwtl
outsl
mov
adc
jns
fidivrl
ds
fdivrp
out
fisttps
lahf
test
jae
or
jl
dec
pusha
mov
mov
sbb
cs
dec
je
loopne
std
cld
fs
sub
lock
xor
inc
xchg
loopne
pushf
in
ds
aam
push
hlt
add
insl
mov
push
inc
ror
out
sbb
ss
in
and
push
xor
cmp
fistpll
aam
sbb
popa
in
dec
ret
mov
repnz
mov
fwait
in
out
xlat
in
pop
inc
mov
fisttps
cltd
arpl
in
and
int
mov
mov
fimuls
ja
cmc
jo
nop
cmp
mov
add
jns
pop
xchg
add
rol
adc
pop
cmpsl
iret
mov
lcall
daa
pop
movsb
jl
push
pop
mov
mov
cmpsl
sarl
daa
mov
push
xchg
sub
dec
cltd
lock
jle
sub
mov
fcoml
jg
movsl
enter
xlat
push
clc
ljmp
pop
pop
call
loop
mov
call
repz
and
je
in
dec
xor
and
call
cs
loop
mov
jno
in
dec
xor
push
out
sti
insb
cmp
fsubr
ds
dec
js
cld
mov
call
cmp
or
mov
lds
xchg
cld
add
cmp
and
cli
jge
sbb
cltd
and
xchg
popa
or
jg
push
out
or
clc
enter
idivl
adc
dec
icebp
jno
dec
fs
pop
pop
push
mov
mov
fdivrl
data16
adc
mov
add
mov
xchg
lods
pop
jle
lahf
out
sbb
je
imul
and
sub
out
pop
in
aad
xchg
call
push
adc
push
lret
lcall
in
sbb
cli
mov
jge
or
cld
sbb
sub
enter
sub
fbstp
test
mov
inc
outsb
jge
nop/reserved
or
inc
ja
lahf
adc
jnp
push
inc
ja
incb
or
enter
mov
mov
fnstsw
add
pop
scas
ret
cwtl
fisubl
cld
in
addb
jbe
cli
out
inc
xor
arpl
dec
add
add
adc
xchg
mov
sub
in
xchg
repz
nop
xor
lahf
loopne
les
enter
and
sub
jo
addr16
and
mov
pop
in
and
lcall
jae
in
inc
cltd
repz
and
adc
or
bnd
dec
fisttpl
pop
cli
and
in
adc
dec
iret
and
xchg
xor
jmp
arpl
hlt
xchg
mov
imul
sub
lret
xchg
std
mov
or
sbb
and
std
sahf
cmp
hlt
inc
xor
push
mov
mov
fwait
mov
mov
stos
std
ljmp
imulb
daa
cmovl
ret
xchg
add
xor
xchg
sub
rolb
shr
sarl
rcrb
xor
int
fiaddl
push
xchg
pop
rcll
mov
lods
dec
mov
mov
xor
pop
das
push
stos
xchg
lahf
and
aam
mov
bound
jbe
adc
outsl
ret
imul
jge
cmp
aam
xchg
test
repz
fisubrs
movsl
xchg
dec
or
xor
adc
dec
xchg
adc
cmpsb
mov
sub
or
fcmovnu
pop
ljmp
mov
and
jecxz
xchg
jge
sbb
psraw
jae
xchg
out
shrb
pop
xor
xorb
out
rcrl
add
addb
cld
icebp
lret
add
in
pop
daa
lcall
decl
in
inc
jp
push
stos
add
pop
jg
cmp
sarl
pusha
dec
daa
xor
ljmp
dec
insl
ljmp
pop
into
imul
push
icebp
cmp
pop
jb
aaa
sub
sbb
imul
cld
mov
adc
xchg
cli
pop
mov
add
sbb
jle
adc
xchg
xchg
cmpsb
scas
fstpt
popf
mov
popf
and
mov
sbb
mov
outsl
bound
add
inc
in
push
ja
jnp
aad
cmp
lcall
and
aad
lods
gs
leave
sub
rolb
sahf
out
or
in
add
sti
movsb
mov
cmpsl
mov
cmc
and
and
pop
pop
mov
pushf
fsubs
cmp
pop
dec
mov
test
xor
lods
ret
jl
add
div
and
inc
sbb
hlt
test
or
lahf
mov
addr16
cli
rcrb
jns
sahf
inc
aaa
mov
imul
rep
ffree
sbbb
push
sub
sbbb
push
aam
inc
inc
cmp
das
or
leave
test
fstpl
mov
cmc
xor
mov
es
cli
cmp
lock
xor
add
xrelease
cmpsl
add
jl
in
adc
stos
xor
fistpl
or
lds
sub
ds
cmc
sub
inc
jge
cmc
addr16
push
fwait
pushf
jmp
dec
dec
pop
pop
fisubs
and
out
xorb
sahf
aad
loopne
sub
lea
cli
ss
fidivs
add
mov
int
lret
pushf
out
mov
push
fsts
push
xor
enter
and
lret
das
mov
sahf
sbb
pop
mov
lock
mov
cld
test
out
adc
jbe
pop
bound
mov
pusha
stos
cmp
xor
inc
jp
mov
or
mov
xor
insl
mov
scas
xlat
in
lcall
insb
subps
jbe
or
jge
ffree
jb
xor
dec
cmpsl
mov
and
insb
out
ficompl
cmp
or
inc
inc
insb
movntps
mov
es
in
jp
jl
das
dec
cmpsl
push
or
sar
shll
xchg
fstpt
fidivl
das
mov
insb
xchg
push
xchg
pop
fucom
add
imulb
sahf
pop
adc
filds
fistpll
lret
stos
loope
xchg
mov
jle
mov
insb
xchg
jl
ja
int
adc
int
add
hlt
pop
pop
or
xchg
dec
push
jne
pop
jo
cli
stos
rcrl
ss
shlb
sahf
negb
mov
in
movsb
out
movsb
mov
xchg
ret
inc
int3
adc
fcoml
lods
inc
addl
fbstp
or
inc
dec
cmp
mov
cmpl
pop
pop
rclb
adc
rclb
jno
mov
pushf
pushf
mov
xchg
xchg
fwait
js
sbb
filds
inc
dec
pop
lds
xchg
fistpl
pop
fsubrs
ret
icebp
ret
jp
rorb
sbb
cld
or
sub
adc
cmc
mov
add
or
sarb
dec
arpl
sub
loopne
sbb
pop
lret
inc
leave
sti
cwtl
add
mov
mov
inc
mov
movb
nop
in
in
mov
ss
push
into
movsl
mov
push
mov
lock
pusha
stos
sub
xchg
outsb
cltd
icebp
mov
add
dec
add
sub
add
out
cltd
stos
dec
subb
lods
les
inc
lea
mov
int
push
jno
mov
fmulp
add
iret
rolb
dec
pop
call
imul
pop
mov
aad
or
push
lock
sti
push
daa
test
lret
ljmp
pop
scas
cli
cs
push
adc
cmp
out
jnp
pusha
ljmp
or
cli
inc
out
clc
jl
leave
cmc
or
pminub
pushf
jge
cmp
mov
jge,pn
cmp
xlat
sbb
repz
inc
inc
rclb
lock
out
imul
scas
call
mov
lret
in
cmp
cmp
adc
inc
imul
adc
out
pushf
cltd
mov
jae
and
push
orb
cmp
insb
xorb
in
push
xchg
fisubrl
inc
add
call
sub
mov
gs
movb
mov
out
sar
xchg
jmp
jmp
imul
sub
push
or
movlhps
sbb
in
iret
pop
in
mov
pop
mov
pop
xor
mov
out
mov
or
pop
add
mov
cmp
int3
js
and
adc
js
lcall
sbb
in
mov
stc
out
lcall
cmp
iret
aad
xchg
rcrb
cltd
clc
pop
mov
in
incl
lock
pop
fsubr
leave
pop
rcrb
pop
out
jg
jg
push
pop
cmpsl
mov
jg
hlt
mov
mov
imulb
pushf
pop
lcall
mov
test
mov
push
in
jmp
dec
xchg
fildl
mov
mov
aad
leave
daa
repz
loope
les
sahf
pop
in
xchg
cmp
js
lcall
cmc
sahf
test
repz
jge
cli
ja
lret
and
push
sub
cmpsl
fs
add
ja
sub
pusha
inc
inc
push
iret
or
into
xchg
mov
popf
pop
divb
xchg
push
cli
pop
mov
xchg
nop
jns
pop
jecxz
test
fwait
aas
mov
jge
xchg
or
mov
movl
fdivrl
dec
sti
adc
test
add
fsts
out
lods
inc
insb
cmp
pop
dec
dec
imul
stos
adc
iret
js
pusha
sti
popl
xchg
stc
sarl
addr16
sbb
out
test
daa
mov
adc
mov
cmp
push
sbb
jecxz
scas
cli
or
xchg
and
aam
inc
cmp
int3
clc
xorl
sarb
or
sbb
or
mov
incl
in
pop
add
insb
jo
stc
sbb
add
out
iret
mov
adc
pop
addr16
dec
mov
sbb
jne
mov
rcr
xchg
or
pushf
dec
shll
outsb
or
hlt
add
clc
xchg
insl
jnp
rorl
pop
fwait
loop
xor
inc
jl
std
xlat
add
push
std
mov
cmp
sub
popf
sti
andl
cmp
mov
insb
jmp
in
outsl
mov
aaa
xchg
cvtdq2ps
lods
pop
push
push
rcrl
xchg
out
adc
mov
dec
test
stos
push
addl
sub
loop
mov
add
push
insl
or
cwtl
sub
xor
sub
add
sbb
mov
ds
out
sti
lahf
pop
iret
aaa
jg
repz
ja
repz
incb
xorb
vunpckhps
fistps
adc
stos
or
cli
xor
jbe
push
ja
js
jge
popf
pop
ds
sti
into
ret
negl
stos
adc
cmpsl
loopne
out
mov
pop
jg
mov
arpl
test
imul
push
stos
std
push
add
cli
ja
jg
pop
mov
repz
stos
fnsave
aas
jns
dec
jne
nop
in
popf
pop
dec
adc
mov
pop
mov
mov
mov
mov
scas
pusha
jae
or
adc
mov
jae
fbld
insb
daa
jg
inc
jbe
into
out
scas
mov
jns
xor
jmp
in
dec
les
lds
xchg
pop
int3
adc
lret
xchg
pop
xchg
in
fdivp
icebp
scas
stos
or
loop
loope
imul
pop
mov
inc
mov
sarl
jp
lahf
adc
sub
jae
into
jb
inc
push
vpunpckhdq
pop
mov
or
or
jge
cmc
lds
pop
xor
imull
test
xchg
and
testl
test
dec
cmp
mov
jb
mov
mov
call
in
lret
sub
dec
into
push
inc
testb
xchg
jne
insl
pop
jae
in
xor
int
lcall
sbb
cmp
push
jmp
call
mov
scas
cld
imul
mov
les
xlat
daa
xlat
rcll
cmp
push
ja
in
push
sub
push
in
inc
sbb
adc
or
iret
mov
pop
sti
add
pop
add
jnp
lcall
jle
sti
dec
stc
jl
jl
and
pushf
les
cmp
mov
sbb
movsb
int
dec
std
daa
push
leave
jo
std
gs
stos
cmpsb
pop
sbb
and
inc
es
pop
jle
scas
outsb
pop
loopne
xchg
mov
loop
test
mov
push
mov
cltd
or
jb
or
aas
sahf
xorl
cmp
xor
mov
dec
jno
bound
mov
pop
push
cmpsb
mov
dec
popa
inc
jbe
imul
sub
pop
cli
push
cmp
mov
dec
xor
imul
mov
enter
es
add
clc
lcall
xchg
inc
dec
lret
dec
xor
cs
jbe
icebp
pop
pop
imul
jns
inc
lahf
dec
mov
shrb
int3
dec
pop
xor
shll
ss
rcrl
mov
xor
pop
popf
jge
push
xchg
lahf
cmpsl
int
imul
shlb
jle
subb
jle
sti
std
adc
ss
adc
bnd
jae
rcrl
pop
loopne
cmp
sbb
jecxz
imul
mov
stos
ljmp
dec
cmp
out
or
adc
imul
jae
or
xlat
test
lahf
loope
or
dec
iret
es
movsb
mov
popa
cld
sub
cmpsl
scas
mov
mov
sub
or
fcompl
jl
clc
in
push
out
not
outsl
les
jnp
add
sbb
int3
in
dec
aam
xor
pop
cld
inc
push
and
gs
int3
jl
loopne
jne
pop
xchg
add
sub
xlat
out
in
and
in
xchg
mov
repz
lods
pop
sbb
fisttps
mov
sbb
pop
test
pop
loopne
call
shrb
rcll
ret
mov
inc
xor
cld
mov
loop
roll
lea
or
sbb
pop
punpcklwd
adc
data16
push
xchg
fisubrs
clc
sub
pop
cmc
mov
pushf
data16
icebp
cmpsl
cwtl
sub
fistps
mov
jo
faddl
xchg
cmp
mov
dec
cmpsb
push
in
xor
dec
jmp
test
mull
cmp
xchg
iret
aam
jne
fidivl
hlt
pop
sti
cmp
mov
incl
ljmp
cmp
repnz
subb
fwait
xor
movsb
ret
and
pop
dec
sahf
jb
cli
jp
ret
xor
std
dec
out
lods
iret
sti
adc
cmp
rclb
or
and
aaa
inc
lods
dec
mov
in
mov
dec
jmp
adc
mov
aaa
aas
dec
xchg
cli
stos
jmp
mov
out
sbb
and
sub
xchg
mov
push
notb
cld
sub
mov
or
imul
jbe
loop
push
icebp
pop
sti
add
mov
out
mov
movsl
adc
jns
fs
es
out
les
in
cld
mov
mov
out
pop
in
adc
cli
cmp
xorl
call
and
xchg
in
inc
jmp
popf
cmpsb
xchg
ljmp
in
dec
jp
rorb
scas
jo
mov
mov
or
pop
sti
inc
add
xchg
call
push
lret
std
cmp
jecxz
clc
out
fprem1
lret
jl
dec
pushf
shll
xorl
lcall
jp
mov
inc
jae
movsb
loop
int3
add
repnz
sti
pop
cmp
sahf
lahf
out
xchg
outsl
xchg
adc
stos
outsl
push
inc
sub
sti
push
push
lods
jmp
repz
push
mov
into
dec
gs
mov
mov
push
int
callw
mov
inc
sub
rorl
pop
into
sbb
rorb
in
or
cli
int3
push
push
and
das
nop
mov
sbb
test
dec
hlt
mov
shll
mov
sub
inc
mov
inc
pop
ds
out
aam
jg,pn
xor
sub
add
movsb
mov
mov
or
sbb
int
inc
je
mov
stc
mov
cmp
jnp
jmp
imulb
test
inc
stc
push
sti
fadd
xor
cli
call
cli
repnz
out
jae
sbb
ret
sahf
call
mov
lret
mov
xor
int
pusha
inc
xor
cwtl
ror
test
jo
ret
sbb
push
push
xor
nop
and
out
cmp
mov
push
jbe
xchg
ret
popf
enter
in
dec
call
out
test
std
cmp
xlat
fdivl
xchg
sti
sahf
test
aam
dec
add
mov
cmp
push
and
popf
push
js
das
popa
jecxz
sti
mov
sbbl
and
cmpsl
and
add
jmp
inc
push
push
or
pop
out
pminub
cmp
inc
lds
and
dec
xchg
nop
pusha
push
xor
mov
cmp
add
rcr
orb
jb
lea
into
dec
add
nop
jb
cmp
dec
inc
ret
push
xlat
jmp
enter
pop
adc
or
in
and
fstps
or
and
dec
inc
movsb
in
add
jno
repnz
and
dec
pop
push
dec
ds
jge
nop
jle
enter
jmp
popa
pop
jo
aam
sbb
dec
aam
jbe
int
out
mov
jg
nop
jnp
jae
jno
cmp
inc
fimull
push
out
xchg
jp
cmp
pushf
xor
repnz
andb
and
lret
repnz
pop
mov
push
mov
daa
aaa
movsl
or
fistps
xchg
sti
scas
loop
jge
cmp
repnz
std
rorb
das
fimuls
call
in
loopne
call
incb
mul
push
mov
cmp
mov
adc
out
mov
mov
pand
std
call
dec
out
out
push
insb
test
sahf
dec
jle
mov
repnz
jge
das
or
mov
push
xor
dec
xor
pop
insb
cmp
das
mov
loop
loopne
jae
inc
and
sbb
jg
movsb
cltd
push
stc
imul
xchg
subl
cmpsb
imul
xchg
pushf
scas
mov
mov
pop
jne
cwtl
mov
cmp
out
fidivs
aam
aaa
hlt
jno
ds
jecxz
in
addr16
push
sub
cmpsb
cmp
stc
add
sahf
inc
rsm
pop
jecxz
push
sti
adc
repnz
sbb
lds
push
dec
xor
adc
stos
mov
ret
fimuls
jno
mov
jle
xor
mov
je
push
out
fidivs
sbb
xor
out
ds
dec
bound
pusha
push
mov
jmp
aas
sub
sub
dec
lahf
fcomps
sub
ds
adc
jl
lahf
xor
mov
pop
cmc
push
das
inc
in
jo
fisttps
mov
iret
cmc
test
xchg
mov
jle
arpl
mov
mov
inc
dec
mov
cltd
shrb
fwait
cmp
das
cli
aam
mov
jl
jp
sub
sub
jns
fwait
and
js
pop
jmp
lods
xor
mov
jne
sub
jmp
aam
mov
pop
stos
aas
pop
jns
stos
test
out
scas
cmpsl
rol
in
aad
jbe
push
icebp
pop
hlt
cmp
jns
mov
popa
jg
mov
sub
and
arpl
sub
fdivrs
cmp
mov
imul
push
push
arpl
and
imulb
or
dec
mov
mov
xchg
pop
or
pop
mov
aas
rolb
lds
jmp
out
jl
fiadds
or
push
imulb
shll
mov
pop
add
and
xor
add
jne
xor
into
inc
mov
pop
mov
mov
lods
xor
lds
test
mov
icebp
dec
nop
int
xchg
iret
lret
lahf
jns
push
fidivl
jne
xchg
fnsave
sbb
shlb
popf
jo
jno
pop
sbb
lods
xor
cmp
int
inc
repz
int
loopne
ja
mov
mov
and
rol
addr16
jns
fstpl
adc
in
xor
jl
mov
lods
pop
mov
add
hlt
mov
sti
clc
pusha
out
fmull
sub
push
push
jno
stc
jae
pushf
repnz
das
mov
sub
icebp
cmp
mov
arpl
sub
pop
inc
pop
ljmp
fcompl
in
adc
or
xchg
rep
clc
jb
xorl
adc
imul
jno
mov
aaa
out
dec
aaa
dec
dec
mov
movswl
lret
push
cmp
xchg
subb
in
dec
adc
jle
jns
les
sarb
leave
inc
xor
xchg
in
fists
inc
sbb
in
cltd
lods
aaa
add
mov
pop
mov
push
pop
decl
movsb
ret
nop
in
es
xchg
adc
xor
mov
push
adc
ficompl
aaa
inc
push
jle
mov
jge
jle
call
or
insb
sahf
or
jecxz
lds
or
outsb
sbb
test
push
adc
negb
adc
fstpl
gs
lock
lret
ret
lcall
push
xchg
push
mov
sbb
cmc
nop
cwtl
repz
pop
leave
jg
and
cld
fsubrs
pop
imul
mov
fs
jp
pop
stos
loopne
xorl
ljmp
push
out
push
push
out
inc
or
jmp
or
std
rcrb
lods
fwait
lock
mov
test
rorl
mov
mov
xchg
iret
clc
or
rcl
and
xchg
cltd
xor
adc
in
push
in
out
mov
popa
or
mov
mov
in
mov
pop
inc
les
pop
add
out
jge
xchg
mov
fcomps
sbb
pop
and
cmpsl
in
outsb
push
mov
out
jg
sbb
mov
into
sub
insl
mov
mov
jnp
test
in
cmovns
jbe
insl
or
jge
imulb
fmull
incb
and
xor
push
out
push
adc
test
mov
jne
inc
test
xchg
xchg
pop
out
xor
jb
daa
rcrb
daa
lock
mov
or
stos
mov
jp
sbb
in
and
stc
mov
sub
stc
jno
xor
sub
xchg
adc
jns
fwait
mov
imul
movb
shr
push
fsubl
mov
cli
addb
pop
jp
mov
adc
jmp
mov
dec
cmpsl
push
shl
xchg
mov
jo
jl
and
cmp
dec
mov
addr16
jne
stos
cmp
int3
jecxz,pn
fdivrl
mov
aas
mov
xor
mov
push
xchg
add
shrl
jb
dec
out
push
inc
pop
clc
push
mov
shll
jnp
inc
lods
hlt
outsb
pushf
rclb
mov
mov
cli
jmp
out
imul
mov
cli
jmp
aaa
pop
jo
out
xor
and
pop
scas
pop
adc
popf
scas
fs
jae
cwtl
sti
dec
sub
jecxz
cli
push
ds
dec
mov
insb
mov
pop
fwait
scas
pop
inc
ljmp
or
test
ret
scas
loope
mov
mov
sub
std
insl
xlat
sub
inc
stos
fistpll
push
faddl
mov
shll
outsl
ja
push
in
addl
pop
roll
dec
adc
stc
push
mov
xchg
mov
data16
cmp
ret
xchg
sahf
mov
xchg
aas
xor
inc
hlt
push
mov
outsl
xchg
popa
add
enter
pop
into
in
dec
cli
mov
lds
adc
imul
cmp
mov
xor
push
pop
pop
jle
dec
sti
add
mov
scas
mov
mov
lcall
out
icebp
scas
push
cmp
lret
jge
lea
xchg
lods
mov
lcall
repz
out
stc
jl
mov
arpl
js
mov
stos
imul
ret
xchg
fs
das
popf
pop
push
pushf
cmc
out
aad
jge
xlat
aad
xor
loop,pt
or
inc
lds
lods
outsb
test
add
decl
rcl
ficomps
mov
xchg
pop
mov
je
inc
mov
xchg
rol
sub
rorb
cmp
push
sub
fs
fwait
cmp
sbb
sub
fisubl
mov
jns
arpl
mov
pop
iret
mov
movsb
dec
negl
jecxz
out
fsubr
leave
sub
or
fbstp
std
aad
es
nop
sahf
outsl
scas
mov
jne
enter
push
pop
int3
mov
in
fbstp
xchg
mov
push
js
mov
sahf
add
pop
lret
pushf
jg
push
add
cmp
in
call
imul
lock
cmp
imul
aad
insb
jo
dec
mov
stc
cmpsb
imul
lea
or
jnp
xchg
pop
lcall
jg
dec
mov
jae
push
xor
mov
pop
shr
xchg
push
jb
stos
ss
mov
add
stc
inc
mov
stos
aaa
sbb
sahf
mov
push
xor
aas
and
les
cmc
outsb
imul
gs
cltd
icebp
cmc
cli
cmp
fs
scas
into
adc
xlat
sbbb
xchg
sub
ss
dec
push
test
jmp
fsubr
into
dec
leave
leave
notl
data16
jmp
xor
test
fstp
xchg
pop
cmp
xchg
jecxz
xchg
push
enter
ret
in
jmp
aam
pushf
mov
sti
repz
jg
jg
mov
data16
jp
mov
sub
mov
cmp
add
mov
addr16
lcall
iret
cli
xchg
push
inc
jge
or
mov
out
lea
mov
or
rcrb
sbbl
rorl
jbe
setns
pop
ljmp
imul
jle
push
popf
add
jae
lahf
mov
icebp
call
xor
jg
xchg
xor
jmp
ja
add
pop
jp
ss
test
scas
fcoms
sbb
jp
pop
mov
repnz
into
pusha
fistpl
mov
push
inc
daa
push
lock
clc
jb
cmp
dec
addb
adc
inc
mov
pushf
sub
lret
add
and
clc
push
push
dec
and
aad
cmp
ret
mov
or
ret
loop
push
rorb
div
xor
jp
jnp
jne
mov
stos
cmp
popa
clc
push
pop
mov
data16
or
idiv
adc
jnp
stos
xchg
pop
mov
jl
add
sarl
push
jae
xchg
xchg
cs
xlat
xchg
les
in
pop
adc
xor
push
scas
jecxz
imul
idivb
incl
sub
cmp
push
jge
stos
jmp
or
push
movhps
std
push
push
sub
insl
jg
fstpt
shr
fucomi
xor
push
pop
sub
or
or
neg
mov
mov
dec
cmp
jl
fmull
jne
cltd
sti
and
je
cmp
push
xor
call
lahf
add
xlat
jo
mov
mov
inc
pushl
fdivrp
lret
into
test
in
in
jno
dec
shll
adc
pusha
mov
mov
push
jle
inc
frstor
mov
pop
sbb
inc
mov
mov
cld
fstpt
adc
add
xor
or
adc
xor
fbstp
ljmp
sub
icebp
addr16
mov
add
es
cld
xchg
in
sub
mov
cs
mov
rcl
mov
xor
xor
aam
push
decb
repnz
or
mov
sbb
adc
decl
add
enter
scas
mov
jmp
in
hlt
mov
std
mov
push
ror
icebp
push
mov
mov
push
mov
test
push
xor
les
sbb
stc
push
or
push
jo
fwait
lods
scas
pop
test
add
call
pop
loopne
shlb
stc
jmp
dec
mov
mov
mov
mov
jecxz
repnz
pop
mov
push
sbb
shll
addl
mov
push
loop
popf
fnstsw
jbe
ja
stos
cs
lret
push
fcomi
in
shrb
dec
add
sahf
mov
mov
ret
addl
popf
daa
and
idiv
mov
cltd
sar
leave
test
add
in
fucomip
xchg
jl
xor
jl
mov
adc
lock
inc
pop
notl
push
lea
mov
es
xor
mov
inc
sbb
adc
in
or
insb
add
std
xlat
xorb
push
fs
out
iret
xchg
loopne
pushf
push
fdivrl
pop
or
flds
mov
aad
je
add
cmp
fidivs
int
cmp
jle
enter
inc
xchg
nop
add
leave
cmpsb
stc
lods
jne
jp
mov
push
jl
dec
pop
pop
fbld
inc
icebp
aad
lret
jp
jbe
adc
xchg
pop
inc
xchg
pushf
jmp
adc
sub
sub
push
inc
xchg
mov
fcoml
mov
sahf
pop
test
imul
sti
pop
daa
ret
iret
mov
sbb
mov
jl
push
pop
cmp
les
es
xchg
lock
xchg
mov
adc
lods
mov
mov
fimuls
inc
fsubr
add
fistps
stos
imul
in
shr
inc
inc
testb
sbb
jns
push
dec
out
adc
mov
icebp
daa
jmp
xchg
daa
repz
pushf
or
adc
or
in
mov
dec
leave
xchg
xor
push
dec
mov
insl
fidivrs
mov
cmp
loopne
iret
clc
fwait
mov
scas
and
push
stc
push
mov
push
push
mov
mov
mov
mov
jp
pop
cmp
lods
mov
incl
pop
mov
or
fnstcw
jno
inc
sbb
test
fidivs
xchg
repz
je
jmp
notl
out
xchg
pop
mov
mov
nop
out
mov
cmpsl
mov
xchg
out
inc
jg
mov
fstl
and
jp
lcall
pop
movsb
addr16
cltd
jl
dec
icebp
adc
std
ja
pusha
push
sub
dec
repnz
xchg
roll
stos
pop
repz
sar
xor
std
mov
adc
xchg
in
sahf
and
dec
or
push
stos
leave
xchg
pop
cmpb
push
sbb
aam
and
sub
xchg
adc
push
mov
cmc
stc
dec
arpl
pop
add
lods
fstps
jg
imul
insb
rorb
xor
mov
xor
cmp
bound
jl
pop
pushf
insl
mov
clc
stc
and
xor
mov
lret
mov
inc
push
in
push
insb
mov
push
ds
shl
scas
in
mov
cs
mov
loope
push
ret
jecxz
mov
aas
push
jnp
pop
loop
ret
and
jne
repz
or
mov
mov
xor
jecxz
ret
daa
out
mov
jecxz
jle
notl
ror
mov
add
incb
push
pushf
enter
filds
aas
jmp
gs
scas
fldl
or
cmp
in
adc
xchg
pop
repz
and
inc
outsl
push
cld
loope
cmp
je
push
push
cmp
ljmp
mov
cmp
negb
xor
lock
in
daa
lea
addr16
xchg
mov
sub
inc
mov
roll
frstor
in
clc
xlat
lcall
int3
popa
mov
inc
sarl
lods
or
cli
lock
lret
xlat
push
lahf
test
outsl
aam
iret
pop
sbb
jle
sub
xor
add
lret
iret
jmp
std
aad
xchg
jns
xchg
popf
push
shrl
fcompl
popf
mov
dec
jle
mov
shrl
mov
movsb
jns
addr16
and
dec
mov
cmp
loopne
pop
mov
test
notl
outsl
cmp
stos
shrb
pusha
insl
cmp
cltd
addr16
push
jecxz
loope
pop
fsubs
fnstsw
jbe
nop
inc
cmpsb
stc
push
imul
push
ljmp
fs
sub
push
push
sarl
sub
lcall
mov
mov
dec
mov
xchg
insl
movswl
int
js
loope
aaa
fucomip
dec
jno
fcompl
jecxz
pop
out
dec
test
in
gs
rep
lock
jne
mov
js
mov
adc
lret
lock
outsb
jo
in
jns
sub
mov
int
fisttpll
jo
and
jmp
sub
fsubl
add
idivb
out
and
pop
ficoml
call
imul
xor
ljmp
pop
mov
ds
mov
call
adc
jmp
addr16
out
arpl
fdivl
jp
jno
test
inc
out
mov
jnp
jns
hlt
mov
push
test
jnp
jg
mov
xlat
pop
subl
popf
mov
pop
jmp
mov
mov
fwait
jnp
sti
mov
cmp
mov
fwait
sbb
ds
aas
add
lods
test
jmp
pop
je
ret
add
mov
pop
in
lret
hlt
and
shlb
xchg
pop
subl
dec
fdivrl
cmc
xchg
loop
push
sub
sahf
sahf
mov
add
mov
mov
push
cmp
pop
out
je
dec
enter
xor
xchg
imul
jbe
mov
xchg
mov
pop
cs
test
sub
or
arpl
dec
xchg
mov
pop
mov
xor
xor
loop
movsl
cmp
mov
or
inc
dec
pop
out
or
ret
inc
movb
rcr
inc
push
int3
mov
cmc
pop
xchg
inc
xchg
testb
and
or
es
popf
pushf
icebp
stos
icebp
push
fsubp
idiv
sbb
push
mov
inc
rorl
sti
lods
mov
mov
jl
stos
adc
mov
and
jle
push
imul
xchg
xor
cmc
mov
das
cwtl
inc
das
xchg
pop
in
pushf
xchg
inc
inc
fwait
adc
out
iret
xor
scas
cmp
cltd
lods
adc
and
jecxz
cmp
int
addr16
jge
push
shll
shll
lods
ret
or
mov
sbb
mov
fmull
sub
nop
lret
xlat
dec
ds
cltd
jge
loope
xchg
ja
mov
andb
sbb
inc
push
data16
xchg
cli
ret
aam
pop
jp
mov
mov
add
enter
xor
dec
xor
inc
out
dec
push
push
xchg
jno
push
pop
cs
movsl
mov
lahf
jno
or
mov
insl
dec
ret
ret
xchg
mov
sbb
testl
popa
xchg
in
mov
loopne
in
ja
and
cmp
popa
outsb
test
je
ds
adc
aaa
rorl
mov
mov
xchg
int
cmpsl
cmp
mov
loope
hlt
cmp
ret
and
stos
lods
insl
push
cmp
fs
cs
lcall
rorb
test
fcmovnu
dec
push
mov
repnz
nop
lcall
mov
orl
push
movsb
cmpsb
mov
insb
jmp
cmpsl
xchg
addr16
out
pop
pop
cmp
cmp
inc
sub
out
xor
jle
jge
jns
call
mov
lcall
scas
mov
stos
cmpsl
shrb
out
cltd
pop
lock
jle
mov
flds
int
sub
pop
sbb
not
sbb
jnp
cmpl
pop
mov
lods
mov
add
in
sbb
jl
test
loope
shlb
mov
push
fstp
subl
fwait
pop
xchg
push
jecxz
hlt
mov
push
call
xchg
in
cli
cmp
int3
push
mov
sbb
mov
mov
mov
sbb
testb
arpl
lds
cmc
fidivl
jg
repz
popf
iret
jge
out
into
jmp
add
mov
aad
lock
rcl
pop
pop
or
lcall
fldt
fisttps
aam
data16
lock
push
cmp
test
outsb
pop
mov
sbb
mov
add
push
jecxz
cmp
jne
jbe
xchg
sub
outsl
adc
and
cmc
push
rcrl
and
loop
mov
mov
ret
je
out
cmp
paddw
fidivs
movb
cmp
aas
mov
test
cld
scas
jle
scas
in
fucom
push
cmp
jmp
sub
xlat
xor
fistpl
cmp
pop
add
mov
inc
adc
mov
sahf
xchg
repz
fwait
sahf
xchg
mov
std
mov
rcrb
push
sbb
repz
sar
pop
push
pop
pushf
fcomps
mov
inc
mov
push
scas
fsin
inc
adc
dec
data16
mov
pop
clc
fwait
jne
fwait
aaa
xchg
mov
xor
out
cmp
hlt
xchg
jo
jb
mov
cmp
insb
fidivrl
sbb
lea
gs
and
out
jnp
cs
bound
ret
or
shll
jecxz
and
adc
cmc
mov
outsb
loopne
push
sti
xor
pop
imul
jns
imul
push
ret
pop
imul
push
lahf
daa
mov
je
loope
movsl
mov
sub
push
xchg
mov
std
rol
dec
xlat
or
jl
jmp
and
jno
sub
aam
xlat
in
cmp
inc
fdiv
dec
shrl
repz
add
clc
xchg
fmuls
sub
add
call
adc
int
ja
test
xchg
sub
rol
fs
das
cld
sbb
jns
and
call
popf
add
pop
mov
pop
xorb
sub
add
mov
mov
clc
cmpb
faddl
xchg
dec
iret
add
mov
popa
cmpsl
outsl
enter
mov
cli
rorb
sub
loop
add
mov
jo
out
fisttpl
cmc
mov
adc
cmp
xorl
mov
xchg
in
jo
inc
movsl
cltd
push
mov
pop
or
mov
sub
das
jp
movsl
jno
sti
test
cmp
lea
mov
leave
addb
std
or
sbb
mov
inc
or
xchg
sub
mov
mov
inc
mov
and
mov
aad
jnp
jle
scas
imul
pop
mov
push
ja
leave
xchg
cmpsb
dec
xor
int
sub
sarl
cmpl
and
fstpl
mov
clc
popf
enter
pop
les
aas
add
xlat
and
inc
add
push
inc
subl
xorl
sarl
pusha
aad
aaa
ljmp
stos
sbb
jmp
vmovq
cmp
loopne
and
jns
cmc
out
jg
mov
cli
jb
inc
gs
test
sbb
cmp
das
cmp
push
ja
jbe
es
cmpsl
mov
scas
jno
add
and
js
pop
sahf
xor
mov
ja
sub
jo
cli
xor
mov
dec
sub
mov
fs
or
out
aad
inc
ficoms
ljmp
rolb
inc
les
pop
jno
rcll
xor
pushf
mov
bound
mulb
leave
rcll
jle
lods
bound
pop
bound
aad
dec
adc
cmp
xor
pop
sbb
cmpb
mov
cli
adc
inc
dec
movsl
sbb
pop
fidivs
pop
repnz
rorl
adc
int
aas
and
outsb
repnz
or
popa
sbb
lcall
inc
rcrb
and
jo
inc
inc
xchg
jnp
loope
add
dec
or
adc
lea
sbb
sub
mov
arpl
cli
xor
je
out
mov
xchg
and
jg
cmp
cmp
repnz
aaa
loop
popf
mov
repnz
insb
fsubrl
aam
or
sti
pushl
out
loop
orl
add
jae
pop
icebp
add
rcr
mov
out
jnp
mov
aaa
mov
inc
xor
lahf
jl
mov
or
test
daa
add
push
xor
popf
mov
mov
clc
push
and
sbb
xchg
sub
movsl
mov
xchg
pop
push
mov
das
sbb
xor
dec
das
xlat
repz
ljmp
dec
mov
in
sbb
aam
gs
leave
adc
xchg
ficompl
loope
xlat
iret
sbb
cmp
xchg
movsl
iret
xchg
cs
ficompl
movsl
adc
xchg
mov
xchg
lcall
xchg
out
out
jle
mov
xor
push
call
cmp
mov
xor
jnp
mov
lcall
sbb
mov
loope
cmp
xor
lea
pushf
mov
pop
pop
push
or
pusha
fistpl
push
sbbb
in
cld
in
fs
cld
push
and
fisubrs
jns
jl
inc
std
xchg
adc
imul
std
imul
xor
fwait
repz
jnp
ss
inc
stc
mov
jbe
enter
xor
xor
repz
iret
pop
mov
inc
aaa
push
and
pop
add
aas
sbb
outsb
dec
f2xm1
das
rep
shrl
addl
out
fwait
and
push
push
jmp
arpl
rcrl
push
fwait
mov
cs
negl
das
test
stos
int
mov
stos
stc
pop
cmp
aad
ja
popl
aad
jae
neg
sub
mov
adcl
stos
repnz
data16
es
icebp
xchg
pcmpeqd
fidivl
cli
addr16
add
movsl
idivb
fucomip
adc
pop
jno
pop
lahf
add
lock
ljmp
sahf
lock
out
popf
xabort
scas
jnp
out
add
jno
gs
add
cld
jnp
adc
pop
lahf
add
jl
sti
mov
jmp
fcmovbe
rep
dec
xlat
or
jecxz
div
xor
scas
in
adc
rcll
std
or
inc
out
adc
sbb
fwait
aaa
fdiv
popa
sbb
cmc
ficoms
mov
sbbb
or
ret
or
nop
sahf
sub
inc
adc
lock
stc
mov
pop
jnp
sarb
neg
mov
dec
pop
cwtl
sub
mov
cmp
add
pushf
icebp
adc
pop
sarb
dec
in
nop
fdivl
popf
cmp
sarl
fs
fsts
fidivrl
lds
dec
cmpsb
ja
add
mov
sahf
std
lret
insl
roll
mov
clc
scas
xchg
in
fdiv
xor
adc
aam
stos
inc
repz
shrb
test
sbb
add
mov
pop
cmc
mov
xor
leave
js
into
lret
lahf
lahf
mov
jge
jnp
push
into
out
fwait
push
cmpsl
push
imul
je
out
lcall
cmp
add
dec
xor
lahf
xor
fstpt
inc
mov
lret
negl
adc
xchg
cwtl
adc
push
rcrb
filds
add
xlat
mov
call
xchg
ficoml
mov
dec
dec
adc
dec
inc
aad
push
jg
mov
cltd
mov
jmp
lahf
fstps
or
sub
test
shrb
jp
icebp
cli
cltd
bound
popf
clc
push
pop
adcl
jge
adc
and
fstps
leave
dec
adc
lock
stc
pop
push
loop
sbb
jbe
and
ja
out
repz
or
out
pop
clc
imul
pusha
divb
push
addb
and
mov
sbb
xor
mov
mov
xor
add
mov
lds
and
and
mov
addr16
scas
into
lcall
mov
push
add
mov
mov
js
push
sub
ss
addps
mov
stos
scas
out
mov
pusha
popa
inc
scas
xchg
mov
repz
es
jl
sarl
inc
scas
mov
inc
mov
push
decb
es
mov
xchg
pop
xchg
xchg
or
fcoml
mov
fwait
outsb
and
push
jecxz
js
pop
adc
dec
cli
dec
ds
movsl
jnp
cmp
pop
dec
int
scas
push
neg
js
call
rorl
out
fcoms
mov
dec
test
push
into
and
jno
jns
mov
pop
aas
fbstp
je
scas
push
cwtl
aaa
lods
sbb
mov
pop
pop
cs
xchg
xchg
arpl
cltd
mov
sbb
ds
out
das
fcoms
das
mov
sub
repz
jg
push
out
dec
lret
mov
clc
lret
push
ljmp
sbb
jnp
mov
jp
out
and
aam
push
add
arpl
ret
movsb
pop
outsl
cmpb
mov
lock
shl
nop
push
and
addr16
adc
aas
inc
jmp
cli
pop
xor
gs
shl
ficoms
repz
jg
js
jecxz
lods
jg
fdivs
shlb
xlat
inc
mov
hlt
pop
into
dec
stc
jg
mov
hlt
test
xchg
cld
dec
stos
sti
dec
out
mov
js
ja
in
cwtl
mov
mov
fstl
out
movsl
add
dec
cmpsl
addr16
or
mov
repnz
inc
nop
mov
cli
cmp
addr16
inc
mov
or
lock
scas
mov
pop
mov
jne
pop
mov
fisubl
popl
lds
adc
mov
arpl
sub
jae
adc
rcrb
cltd
out
mov
das
test
jb
out
xchg
repz
cmp
dec
repnz
inc
test
dec
inc
or
ret
mov
lret
inc
repz
or
pop
test
out
lret
mov
lcall
adc
sub
lcall
and
adc
xchg
mov
mov
push
sbb
pop
mov
lods
aas
iret
out
dec
loope
lods
jmp
aad
fwait
mov
cmpsb
or
mov
je
sti
inc
loopne
xlat
hlt
xor
sub
dec
cltd
std
inc
pop
mov
repnz
popa
imul
and
enter
sub
cltd
loopne
jl
int
dec
aas
jmp
fwait
out
enter
lds
clc
ss
fdivp
sbb
lds
std
jg
fildll
ss
mov
aam
stc
or
repz
adc
int3
jae
xchg
sbb
cmp
insl
ficoms
shl
ficoms
inc
pop
cmp
andb
mov
cmc
sbb
sarl
mov
mov
jle
in
pusha
loopne
decl
dec
orl
addr16
pop
cs
pop
push
sbb
fsts
cmc
jle
rdpkru
ja
ffree
mov
inc
inc
std
and
lahf
jecxz
mov
hlt
fdivrp
jle
js
adc
mov
sahf
out
add
sub
sbb
sbb
daa
mov
jne
xchg
and
loope
push
cwtl
push
hlt
mov
inc
rorl
lods
std
out
idivl
jbe
jmp
bswap
jmp
pop
test
enter
fisttps
jo
js
jl
xor
rorl
push
cmc
xor
lock
clc
xchg
jbe
pop
cmc
nop
mov
aam
out
enter
outsb
stc
insl
jae
push
mov
adc
mull
into
repnz
push
ret
dec
out
or
mov
pop
inc
data16
cs
fwait
pop
loopne
sbb
mov
bound
outsl
leave
push
out
outsb
jge
cmp
adc
fstpl
xchg
sub
inc
xchg
ss
sahf
cmc
jecxz
jae
clc
sbb
cmc
clc
lret
push
test
push
addr16
fucom
push
jl
jns
jmp
jbe
in
and
sub
fcmovnb
int
shll
addr16
cmpsl
arpl
movsb
hlt
insl
les
xorb
sbb
jmp
cmp
sub
push
addr16
push
pop
ffreep
xor
cmp
ja
lods
mov
aam
icebp
negl
lods
mov
push
fs
js
imul
icebp
popf
ljmp
sbb
outsl
push
or
ffree
test
mov
push
mov
clc
push
std
lcall
out
sarl
rol
fildll
pop
clc
dec
jb
incl
rcll
dec
jmp
testl
xchg
push
pop
outsl
mov
jmp
and
pusha
dec
fcompl
inc
mov
xchg
outsl
popf
int3
add
xchg
or
jne
mov
cmp
add
jbe
mov
in
mov
fdivs
fistpll
movsb
push
cmpsb
cltd
and
int
sub
out
mov
out
rorl
sbb
lock
and
cmpsb
pop
in
mov
inc
scas
pop
rcll
aam
lds
cmp
inc
aas
lods
int3
xchg
neg
inc
iret
fimull
sub
lods
add
dec
imul
cli
outsl
push
sub
cli
and
ficoml
aad
fistpll
sub
shl
jb
xor
daa
aaa
fbstp
rcrb
or
shlb
pushf
jle
push
pop
cmp
pop
sub
lods
add
adc
std
loope
xchg
adc
jmp
enter
mov
adc
pop
mov
jns
adc
scas
in
adc
ljmp
mov
mov
add
pop
pop
mov
mov
pop
jp
or
sbb
mov
dec
inc
inc
cld
xorl
mov
mov
fstpt
add
std
jno
decb
adc
fcoms
outsb
addr16
push
data16
fwait
out
push
pushf
sarl
test
adc
into
in
sahf
and
and
loope
imul
xor
pop
lcall
cmpl
jo
and
cmp
in
dec
ss
fxch
aas
ret
and
inc
sub
in
push
and
mov
sub
push
cmp
mov
mov
jno
sbb
jo
xor
jge
jae
or
js
leave
sarb
mov
mov
inc
bound
icebp
es
push
lret
fisubs
inc
popf
data16
sbb
test
into
mov
aaa
inc
imulb
sbb
loop
dec
cmp
stc
xchg
js
in
adc
fs
imul
bnd
cmp
loop
jno
in
in
push
add
push
lret
or
std
shrb
ja
pop
stos
lds
int3
jo
cli
jne
xchg
movsl
movsb
sub
js
pop
sub
dec
sahf
pop
icebp
sbb
daa
push
sahf
push
pop
mov
cmp
jbe
fsubrl
daa
jbe
and
cmp
popf
out
popa
mov
aam
mov
loope
sbb
imul
lahf
lods
icebp
incl
inc
out
clc
mov
ljmp
or
nop
mov
arpl
add
lcall
cld
add
inc
cld
inc
xchg
in
cmc
shll
imul
sub
inc
lock
int3
sti
and
in
cmc
mov
and
test
nop
push
imul
pop
cmp
outsb
and
pop
iret
loopne
call
popa
jmp
mov
das
hlt
shrb
jecxz
and
jae
call
pop
inc
mov
imul
int3
aaa
negl
mov
add
cltd
mov
in
pop
lea
sbb
frstor
xlat
cld
jecxz
xchg
mov
lock
in
pop
pop
mov
mov
scas
push
sbb
push
add
mov
shr
clc
xor
add
cmp
cmpsb
mov
int
test
imul
mov
icebp
ds
or
clc
jnp
addr16
pop
in
fildll
lcall
shll
sub
dec
push
or
xchg
out
gs
xchg
popa
or
cltd
mov
sbb
push
cmovs
aaa
mov
push
vcomisd
aad
imul
fdivl
adc
jb
dec
fisubs
arpl
test
call
lods
xlat
sbb
imul
push
mov
scas
jb
jecxz
adc
daa
jle
mov
std
pop
adc
scas
rorl
cwtl
sub
jne
jbe
push
or
stos
cmp
xor
arpl
pop
popf
call
cld
adc
pop
push
clc
adcl
clc
or
out
sahf
and
iret
jns
push
movsl
leave
xchg
mov
ss
xor
mov
pop
test
jle
pop
out
jns
pop
das
mov
inc
jne
stos
xchg
jbe
and
dec
movsl
jecxz
cmpsl
rclb
xchg
outsb
cmp
std
jecxz
dec
and
jae
stos
or
jl
gs
lods
push
xor
dec
sub
mov
pop
cmp
iret
scas
pop
sbb
mov
xor
jg
ss
mov
add
repz
mov
cli
imul
pushf
lods
cld
data16
inc
or
push
dec
inc
inc
add
repz
xor
mov
je
fdivrs
push
push
xorl
lock
xor
jmp
inc
aam
dec
cmpsl
mov
xor
cmp
rcr
mov
mov
push
inc
mov
cmp
pop
xchg
hlt
icebp
xor
mov
add
adc
push
roll
jecxz
lock
or
pushf
mov
xor
stos
mov
in
loope,pn
out
push
js
out
int
js
mov
mov
loop
out
pop
fcompl
loop
adc
outsb
dec
cltd
pop
xchg
ljmp
adc
subb
iret
xor
jmp
in
and
cmp
cmp
adc
mov
or
cmpsb
xchg
sarb
cmp
hlt
outsl
lahf
movsl
push
call
cltd
pop
out
in
xchg
icebp
pop
hlt
cmp
ret
mov
adc
cwtl
ret
mov
out
dec
hlt
mov
stc
jb
ret
aas
cltd
cmp
mov
sub
add
push
enter
xor
sbb
sahf
popa
push
mov
jne
sbb
xchg
mov
sahf
cmp
rcrb
sarl
pop
xor
in
repnz
outsl
mov
out
hlt
dec
out
into
push
pusha
or
dec
xchg
push
hlt
dec
or
data16
fisttps
pop
fistpll
push
jle
xchg
xor
xchg
mov
push
shr
sbb
addl
jb
xorl
push
adc
or
mov
shl
cmp
stos
cmpsb
pop
adc
xchg
arpl
ja
xchg
push
mov
rcll
test
repnz
in
sub
cwtl
add
or
dec
or
mov
cmp
mov
mov
pop
and
out
jl
and
pop
pop
scas
mov
and
dec
mov
mov
int3
iret
mov
pop
pop
mov
stos
test
cltd
pop
xchg
insl
ffree
sbb
lret
ja
sbb
insl
push
es
shrb
xchg
gs
jl
imul
gs
out
idivl
out
jge
fdivrp
out
cld
pop
mov
lock
lea
popa
mov
push
cmpsl
cmp
pop
fwait
push
in
jbe
jno
pop
fnstcw
aam
xchg
movsl
or
lea
loop
xor
or
mov
sub
das
cld
insb
fisubs
xor
lahf
mov
div
pop
inc
mov
call
pop
or
test
fiaddl
fistps
cltd
push
and
pop
data16
xor
push
xchg
adc
dec
call
fisubs
out
js
dec
or
cmpsl
stos
into
negl
adc
stos
shrb
push
add
pop
movl
sahf
mov
imul
mov
filds
pop
xchg
dec
cmpsb
and
ss
sbb
add
xchg
mov
pop
mov
icebp
sub
je
pop
xlat
out
jge
es
mov
adc
inc
mov
std
add
cld
daa
leave
insl
dec
fstps
addl
inc
es
inc
xor
xchg
push
shl
pusha
bound
mov
and
andl
sub
xchg
mov
push
push
mov
sub
and
lea
xchg
pop
mov
lahf
lahf
mov
push
mov
lret
inc
jle
in
sub
pop
mov
loop
sub
add
add
cld
xchg
and
add
neg
int3
xchg
cmp
adc
xor
jle
fdiv
int
jp
shr
cwtl
fiaddl
mov
pop
subl
inc
inc
adcb
jo
pop
xchg
mov
mov
cmc
scas
mov
loop
aaa
dec
stos
or
cwtl
imul
test
sti
xchg
or
sahf
repnz
push
out
xchg
insb
subl
mov
ret
testb
loopne
popf
daa
das
xlat
and
jge
cwtl
movsb
push
jp
ds
lock
out
sub
loop
mov
insb
lods
aad
lods
add
inc
jb
int
movsl
and
sbb
movsl
cmpsb
sub
mov
rorl
popa
dec
icebp
mov
sbb
jecxz
adc
pop
sub
sbb
add
addr16
pop
roll
fwait
sbb
mov
sbb
xacquire
les
shlb
jno
inc
daa
clc
leave
fiaddl
mov
les
shll
xchg
das
repz
and
xchg
dec
push
xor
lods
fnstenv
fbld
or
ret
dec
out
xor
mov
test
out
pop
adc
insl
imul
sub
pushfw
push
xlat
imul
adc
insb
mov
xchg
shl
sbb
insb
pop
adc
ljmp
rcrl
mov
add
fsubl
lcall
and
into
jno
jbe
mov
call
imul
in
es
loopne
pop
jg
sbb
mov
cs
lds
adc
fidivs
inc
sti
outsl
and
mov
mov
pop
xor
or
out
roll
xor
roll
xor
fmull
mov
dec
push
fimuls
cli
fldl
in
rolb
jb
pop
cmpsl
mov
sahf
add
cltd
rclb
cmp
scas
test
arpl
add
lret
or
ljmp
jge
lods
popa
lret
fbld
lret
out
sub
xchg
test
or
mov
pop
fstp
aad
aas
lock
cs
add
add
pop
test
out
cmp
in
and
rcll
shll
movsl
subl
mov
xchg
or
xchg
hlt
in
cmpsb
or
add
push
lahf
adc
cmp
fmuls
xchg
notb
or
and
lods
sbb
in
add
xchg
pop
lea
sub
std
jecxz
lret
adc
lahf
sub
pop
lret
add
or
inc
xchg
add
ja
add
mov
push
aas
pop
jle
aam
jg
pop
cld
test
jnp
aas
sub
cld
std
loop
xchg
mov
loopne
jecxz
bound
jge
mov
sbb
ljmp
repz
test
iret
sub
pop
mov
xchg
xor
push
jmp
push
sbb
shlb
adc
cmp
jge
mov
fnstcw
adc
subb
fnstcw
cld
int3
add
ret
dec
popa
scas
in
or
mov
test
pop
fnsave
in
stos
ja
mov
mov
ret
out
test
or
jle
cs
push
and
or
jl
ds
fs
adc
test
and
mov
dec
aad
jle
movsb
cmpsb
daa
xchg
adc
shl
shrb
pusha
idiv
push
fldcw
cmp
sub
loopne
stc
cltd
stos
test
pop
adc
inc
pop
test
jae
ljmp
in
data16
rclb
int
iret
loope
mov
push
jmp
add
mov
out
and
testb
mov
push
imul
pop
js
mov
inc
ret
lret
jge
imul
xchg
lret
inc
aam
out
cmp
xlat
mov
pop
es
xor
insb
addr16
adc
fisubl
int
je
ss
xor
add
xchg
mov
loopne
icebp
lret
fwait
mov
iret
lock
imul
popf
imul
mov
or
packssdw
xchg
fisubl
incb
mov
xor
mov
mov
gs
ret
mov
lea
xor
jge
and
jno
lock
xor
clc
mov
fxtract
pop
out
adcb
cmp
sbb
jl
out
cmp
mov
jno
push
hlt
cmp
mov
mov
les
mov
cmpl
pop
pop
mov
js
clc
pop
ljmp
popf
fmull
dec
es
xchg
pop
jle
jbe
out
icebp
xchg
pop
rorb
out
rorw
cmp
and
insl
pop
cmpsl
pop
adc
adc
in
jl
and
dec
sub
fldt
mov
mov
lret
adc
mov
std
ds
scas
inc
and
outsb
pop
push
in
sbb
push
jle,pt
test
rcl
subb
je
lods
mov
mov
xchg
insl
rcrb
jge
sbb
cs
sbb
out
fsubl
sbb
pop
mov
loope
add
stc
adc
ljmp
push
mov
or
pop
mov
adc
dec
adc
or
push
pop
xor
jbe
loop
lahf
addr16
cmc
sub
inc
adc
pusha
and
rcrl
mov
mov
test
fwait
rorl
push
rcrl
mov
out
xor
add
stc
jle
in
std
stc
dec
or
push
leave
in
pop
icebp
mov
inc
sti
popf
icebp
icebp
inc
cli
ficoml
inc
cmc
pusha
mov
lds
ljmp
adc
dec
mov
lahf
xchg
std
outsl
xor
out
subb
fbstp
add
sti
mov
shrl
daa
sti
push
or
lea
pop
fistpll
stc
push
push
xor
sub
mov
loope
pop
pushf
outsl
dec
add
lahf
jns
loop
fidivrl
push
subps
aas
repz
xchg
jg
sbb
cmp
ljmp
hlt
js
cltd
sub
sub
mov
lcall
xchg
pusha
gs
push
jmp
aas
push
or
call
sbbb
cmp
loopne
inc
fldt
inc
xchg
xchg
adc
sar
mov
ss
loop
testb
dec
pop
cmp
out
rcll
mov
std
in
mov
lds
adc
shrl
mov
push
sub
dec
jmp
mov
aad
cmp
sbb
and
push
or
push
mov
jecxz
int
mov
xchg
in
outsl
mov
shll
ss
push
or
repz
sbb
call
sarl
call
jbe
xor
mov
mov
cmp
std
mov
out
jle
push
in
adc
mov
daa
dec
or
push
pop
sbb
jb
subl
sbbb
fwait
sub
or
mov
daa
jb
repz
pop
mov
mov
dec
jge
push
cld
mov
test
ret
xor
cmpsl
icebp
aaa
or
aas
stc
cwtl
dec
dec
jmp
or
ret
jno
cmp
pop
mov
inc
inc
jae
sbb
clc
adc
mov
push
cmp
inc
inc
mov
in
fcoms
rcl
test
add
ljmp
push
push
push
dec
xchg
outsl
cld
mov
movsl
outsl
in
jg
pop
hlt
push
dec
xorb
adc
movsb
push
xchg
rcr
jnp
jmp
adc
sub
imul
inc
fdiv
movsb
jns
aad
ljmp
push
fwait
fmull
out
cwtl
out
rclb
jmp
and
cli
push
fcomip
sub
stc
and
jae
sbb
std
outsl
fdivrp
fcoms
xchg
aam
dec
pop
into
dec
and
xchg
pop
or
cs
in
sbb
lock
pop
mov
test
mov
scas
addb
test
jmp
stos
rorb
out
push
or
fscale
pusha
and
mov
jl
xchg
xchg
data16
stc
sub
dec
repz
xor
mov
sub
das
stos
mov
cmpsl
scas
add
fidivrl
mov
jecxz
cmpsl
pop
es
les
enter
jg
dec
pop
xor
lock
scas
aaa
insl
push
imul
mov
js
std
rcll
std
xor
in
xchg
js
repz
nop
outsl
inc
fmulp
cmp
cmp
cwtl
je
mov
pushf
call
push
insl
std
pop
fdivl
add
leave
lock
pop
lahf
cmovnp
ret
loope
cmp
mov
sbb
dec
sbb
lods
sahf
sub
cmp
cmp
jbe
cmc
in
aas
incl
addr16
sub
and
scas
mov
iret
arpl
incl
movswl
ret
sbb
push
int3
add
lock
jae
pop
adc
mov
cld
sbb
aam
call
mov
insl
clc
push
lahf
jle
nop
sub
shlb
daa
test
cmp
pop
dec
and
pop
jb
add
cwtl
in
movsl
imul
add
pop
pop
loope
mull
xlat
mov
xor
sub
add
repz
xchg
outsb
cmp
in
inc
push
jg
and
mov
mov
popa
push
sbb
mov
testl
ror
in
cmpsl
xor
outsl
popa
xchg
adc
cld
mov
out
dec
testb
std
cld
and
pop
inc
add
inc
xchg
add
dec
cli
inc
fdivrl
and
in
xor
int
imul
lods
mov
jp
xchg
fistpll
mov
sub
stos
rorl
adc
jns
lds
dec
ds
mov
sbb
ret
mov
rorl
ss
jb
sub
sbb
and
pop
sbbb
cmp
je
sub
mov
shll
fidivs
pop
cmp
jnp
push
in
dec
outsl
scas
and
or
popl
out
icebp
jb
mov
cltd
jle
test
out
mov
clc
add
pop
shll
in
push
mov
lds
aaa
ret
subl
stos
push
inc
loop
sti
jle
jge
andl
cltd
xlat
lcall
lret
xor
jo
sahf
aaa
std
cmp
pushf
cmp
popw
ljmp
stc
les
push
push
xchg
fcomps
mov
jge
mov
inc
sbbb
pop
jno
inc
das
xor
push
out
mov
int3
in
jb
cmp
andl
cmp
lahf
inc
rclb
dec
icebp
jno
sub
push
push
daa
fcomps
push
cwtl
aaa
je
lahf
stos
out
cwtl
stos
mov
jmp
mov
scas
cld
lahf
pop
fsubp
stos
mov
push
jb
jns
mov
decl
test
loop
mov
or
sbb
xchg
insl
inc
sub
sbb
push
rcrb
mov
jmp
in
out
out
movmskps
cmp
xchg
add
movsb
pop
inc
inc
cmp
inc
cs
ret
std
cmovno
test
je
jmp
pop
inc
mov
pushf
dec
outsb
or
movswl
scas
jae
idivl
ljmp
dec
fists
jns
cmp
push
fwait
dec
divb
mul
scas
jmp
sub
decl
jp
pop
sbbl
mov
mov
mov
ja
fnstenv
loop
mov
lret
in
pusha
int
aad
jns
push
and
jle
insl
out
xchg
mov
leave
out
rcr
sub
xor
out
lods
fidivrl
mov
mov
enter
mov
imul
cmp
das
cli
jp
jg
ret
hlt
sub
rcll
mov
mov
xchg
mov
fstl
mov
xor
les
iret
push
and
inc
jg
mov
lahf
out
out
inc
iret
mov
cmp
jnp
sbb
idiv
mov
insb
jnp
pop
sbb
dec
sub
fisubl
orb
xor
call
adc
jae
dec
add
mov
mov
mov
mov
adc
jae
inc
sub
xchg
xchg
add
push
pop
mov
fisttpl
out
add
loope
repz
loop
mov
outsb
sbb
mov
jecxz
frstor
iret
cmpsl
lods
xchg
jge
pushf
ss
mov
das
add
bnd
pop
inc
jb,pt
ficompl
jg
mov
insl
push
mov
movsl
cltd
sub
aam
dec
fstl
scas
in
sub
bound
rorb
inc
xor
std
sub
idivb
cld
stos
sub
lods
sub
andl
dec
mov
adc
add
add
mov
pop
addr16
enter
sbb
mov
addr16
push
loop
mov
imul
rol
cmp
imul
lds
mov
iret
mov
or
in
push
shrb
clc
fidivrs
xlat
idivb
in
jbe
add
jns
cmp
push
jns
outsb
lret
push
xor
mov
mov
lret
dec
out
addb
das
in
mov
leave
pop
push
scas
and
jg
loopne
icebp
sahf
and
push
mov
dec
sub
push
or
inc
xor
sub
popf
push
jns
jno
mov
loope
jo
aas
mov
pop
out
mov
jb
inc
mov
notl
xchg
lret
mov
ja
sub
cmp
mov
adc
jmp
cwtl
adcb
add
stos
loopne
or
sbb
push
loop
jo
fwait
mov
pop
cwtl
insb
enter
add
std
inc
call
fldl
in
movsl
pop
mov
jb
push
push
das
out
lock
mov
icebp
ja
jmp
mov
aas
mov
out
mov
pop
out
negb
cmp
jo
xorl
cwtl
aas
ljmp
jmp
movsl
in
adc
cmc
pop
ja
pop
push
jns
and
stc
gs
fcomi
mov
ljmp
int
sarb
pop
fbstp
decl
arpl
pop
mov
jle
loopne
cmp
mov
aam
cmp
mov
jbe
xor
popa
jecxz
add
mov
enter
inc
xor
je
adc
jmp
nop
imulb
push
xor
dec
pop
dec
add
mov
rcrb
or
notb
mov
pinsrw
adc
pop
mov
arpl
dec
adc
popf
addb
mov
fdecstp
mov
inc
scas
stc
mov
orl
test
orb
loope
or
push
pop
mov
jns
jo
mov
adc
push
pop
add
xchg
test
xor
jno
ret
push
fwait
sbb
iret
mov
or
aam
in
jne
xor
push
cwtl
jne
push
lods
inc
adc
push
jmp
add
pop
nop
aam
lock
inc
dec
jp
cld
lods
inc
pop
push
sahf
sbb
scas
pop
cmp
pop
mov
mov
mov
enter
or
in
das
push
fadd
push
mov
sub
inc
mov
cmp
mov
inc
cmpsb
arpl
out
mov
enter
sbb
cmp
cli
mov
out
mov
into
in
test
repz
jbe
xchg
lods
arpl
add
int
cmp
push
sub
sub
mov
ss
cmp
outsb
sahf
xlat
stos
and
dec
dec
iret
adc
ret
aaa
mov
test
testl
ds
xchg
and
sbb
cmpsl
lea
rcrl
das
orl
repz
loop
jne
push
js
js
test
pop
arpl
mov
pushf
rcrl
daa
pop
test
arpl
imul
lea
fs
mov
rol
cltd
arpl
sbb
push
es
and
inc
and
ds
dec
test
sbb
divb
adc
out
xor
loopne
imul
dec
lods
cs
adc
jmp
push
movsl
aam
sbb
mov
mov
icebp
sbb
push
inc
cwtl
pushf
pop
rorl
fdivl
das
or
sub
sahf
es
mov
stc
mov
je
sbb
xchg
fisubrl
fisubs
or
xchg
cmpsl
mov
divb
or
ss
das
mov
xchg
cmpsl
xlat
or
cmpsl
or
cmp
dec
movsb
xchg
stc
mov
or
ret
mov
int3
pop
pop
fldcw
and
test
sub
bound
mov
push
add
or
mov
sbb
xor
jae
insb
lods
inc
dec
cmpsl
mov
inc
pop
xor
loope
mov
sti
movsl
aam
dec
inc
xchg
dec
or
dec
shll
js
mov
cld
jge
push
adc
std
jae
ret
jo
push
dec
mov
in
jo
repz
imulb
push
xor
dec
push
loop
pop
insb
jp
rorb
fsubrl
and
xor
and
cs
sub
or
mov
pop
jl
mov
and
pop
jge
sbb
invd
jmp
dec
rorl
fcoms
shll
xor
icebp
push
aad
mov
cmp
sbb
cli
xor
mov
cmpsb
pop
insl
hlt
add
es
aaa
test
xchg
push
dec
cmp
xor
fildl
insl
mov
sbb
ja
orl
lods
inc
adc
mov
fadds
mov
adc
mov
cmp
mov
test
lret
nop
xchg
pop
rclb
jle
mov
cmp
fisubl
scas
es
sbb
pop
enter
jbe
test
in
scas
les
sti
and
ret
aad
fisttpl
fnclex
xchg
sub
jle
popf
sbb
popa
cld
mov
pop
nop
and
push
shl
pop
cltd
push
cltd
aad
es
pusha
int
push
insb
inc
dec
xchg
add
or
stos
popf
xor
xchg
push
js
mov
pop
jb
call
sbb
jae
mov
pop
aam
das
adc
xor
add
xor
pop
adc
cld
lods
cmc
in
cli
push
cwtl
popa
adc
les
mov
xchg
jg
jmp
jle
enter
loop
fbld
not
sub
cmc
fstp
sti
and
cmc
pop
fidivrl
fnstsw
scas
out
notb
addr16
out
push
fstpl
addr16
fs
cli
xchg
scas
xorb
call
push
scas
adc
or
rolb
xchg
mul
add
xor
cmpsb
pop
push
enter
ss
dec
js
idivw
sbb
mov
stos
dec
inc
pop
scas
fisubrs
mov
les
sahf
mov
clc
mov
cmc
or
and
xchg
imul
int3
mov
lea
dec
fcomp
mull
loopne
mov
mov
push
jbe
lret
fsubrs
into
xchg
cmp
js
dec
mov
out
mov
xor
sahf
icebp
fs
jge
cwtl
push
loope
into
mov
bnd
xor
test
clc
aaa
jns
imul
mov
mov
cmp
cmpsl
les
gs
mov
pop
fnstenv
sti
pop
cmp
negb
jno
scas
fbld
lcall
sti
cwtl
cmp
mov
pop
neg
fldcw
clc
inc
push
lock
jmp
lret
and
leave
add
cmp
call
shl
das
jns
pusha
sub
xchg
call
out
push
push
xchg
negl
jle
cmp
mov
std
fidivl
mov
popa
mov
sbb
loopne
int3
into
mov
out
or
pop
repnz
or
pop
sbb
rorl
cmp
adc
scas
pop
and
xchg
or
nop
int3
cld
nop
xchg
inc
mov
out
rcr
push
pop
mov
idiv
shr
mov
pop
add
scas
sti
dec
mov
insb
xchg
push
scas
pop
add
cmpsl
clc
sarl
jg
xchg
mov
ret
out
test
ret
aaa
dec
stc
out
in
xchg
stc
stos
int3
or
jp
vpcmpgtd
sbb
loopne
ficompl
and
xor
pop
mov
dec
rcll
fnstcw
mov
sbb
and
out
loope
cmp
jle
repz
out
leave
inc
or
sbb
or
rcll
insl
add
jo
cmpsl
pushw
inc
cwtl
out
xor
in
jmpw
lock
loop
stos
jmp
test
xchg
sahf
push
xchg
fldl
jno
lcall
int3
adc
stos
xor
mov
sbb
ljmp
sti
rorb
inc
gs
dec
lret
inc
testl
jecxz
mov
filds
mov
clc
in
mov
fdivrl
lahf
pop
jg
cmp
aad
and
pushf
jl
test
cmpsl
scas
jl
push
addr16
sub
fscale
mov
stos
mov
imul
xchg
test
and
pop
xor
in
test
imul
inc
and
or
popf
ret
mov
jae
mov
mov
outsl
loop
add
stos
cmp
or
out
and
jmp
inc
call
int
xchg
jne
or
jb
jb
nop
dec
cmpsb
repz
insl
mov
sub
out
repz
adc
inc
push
repnz
push
xchg
mov
jo
cs
cmc
xchg
add
or
sub
add
in
push
movsb
mov
ficompl
notl
pop
jge
stos
mov
repz
fsubp
mov
lahf
inc
and
aad
imul
out
cltd
outsb
sub
jnp,pt
imul
aas
pop
and
lahf
push
mov
arpl
mov
shlb
mov
jl
lahf
or
adc
popf
dec
nop
xor
in
xchg
std
inc
sarb
adc
loope
xchg
out
ljmp
aaa
stc
test
xchg
mov
fstpt
mov
mov
xchg
negl
clc
mov
pop
xor
inc
lea
scas
ljmp
push
mov
fcomi
mov
out
popf
mov
add
mov
sub
je
dec
or
es
push
lret
push
mov
xor
ds
ud1
repz
jl
leave
fcompl
fisubs
add
xor
mov
das
je
jnp
loopne
enter
sarl
idiv
cltd
arpl
sbb
insb
and
fimull
fsubrp
xor
dec
mov
ds
or
mov
mov
ds
movb
mov
jmp
int
roll
fistpll
and
popa
out
aas
jne
dec
xor
out
push
add
xor
xchg
mov
int
fildl
add
pop
outsl
test
xchg
out
sysenter
pop
inc
and
rolb
cmp
loope
sub
sbb
cmc
dec
in
jp
pusha
jmp
pop
cmpsl
ret
add
cmp
adc
push
ljmp
movsb
fadds
test
mul
push
and
fisubs
pop
jmp
sbb
push
cmp
push
addr16
sarb
push
cmp
jno
cmp
shrb
and
xchg
mov
xchg
sahf
or
adc
stc
adc
xchg
push
ret
xor
xchg
enter
pushf
shll
popf
aam
pop
movsl
negl
and
out
ds
in
xchg
pop
out
aaa
aam
sub
ss
jbe
rcll
or
dec
mov
xchg
aad
push
cmpsb
xorb
lock
stos
pop
mov
aas
add
into
jp
xor
jo
stc
mov
outsl
push
addr16
mov
ds
js
fnsave
cmp
push
sahf
repz
dec
pop
xchg
jae
xchg
call
std
mov
sub
movsl
sahf
lcall
adc
sub
int3
mov
cmpsb
out
ret
test
mov
icebp
lahf
outsb
or
iret
gs
pop
cld
hlt
loope
push
aaa
fwait
addl
adc
nop
in
cmc
adc
add
lahf
jecxz
out
cmpsb
loope
mov
loop
jnp
inc
mov
adc
in
lea
jnp
xchg
imul
jns
jo
jae
bound
scas
sub
arpl
fnstsw
inc
aaa
pop
fs
scas
rcr
and
jns
xor
aaa
jg
push
xorps
or
test
sub
aas
xchg
les
add
cmp
jno,pn
dec
cmp
push
call
popa
mov
mov
cmp
into
cmp
mov
icebp
test
jo
das
int
lret
in
cmp
sub
jge
sub
call
and
push
push
mov
mov
mov
add
rcr
inc
cli
mov
insl
adc
in
cli
xor
daa
fwait
dec
aam
idiv
call
xor
andb
in
inc
inc
mov
mov
adc
addr16
dec
lret
xchg
xchg
rolb
lcall
shll
jno
xor
loopne
divl
push
imul
cltd
lahf
movsl
iret
xchg
fsts
jge
shl
cmc
mov
faddp
or
xchg
push
add
fxch
std
lea
lods
imul
dec
xchg
mov
xor
mov
xchg
sbb
stos
mov
jb
filds
psrlw
jb
inc
jmp
sarl
mov
out
pushf
addb
push
dec
xor
inc
push
cltd
or
test
dec
insl
shlb
cmpsl
shl
out
xchg
daa
scas
out
lods
sbb
pop
int
in
inc
repz
sub
add
dec
push
sub
cmpsl
push
mov
jne
mov
jl
cmp
push
lods
fsubs
lods
popf
pop
xchg
mul
add
je
xlat
mov
repz
cwtl
loopne
test
cmp
lods
rcpps
adc
out
mov
cld
test
add
stos
mov
add
enter
or
dec
in
sub
movsl
and
lea
inc
movsb
mov
mov
bound
ljmp
movsb
ss
xor
push
shr
pop
mov
mov
inc
roll
add
add
jg
addr16
add
in
shl
pop
mov
rcr
inc
xor
aas
ljmp
push
or
sbb
sub
movsl
mov
mov
mov
enter
push
jo
adc
add
xorl
jl
jns
test
xchg
loop
sti
insb
mov
jmp
inc
out
xchg
das
sbb
mov
inc
mov
adc
and
and
fs
ret
stos
mov
mov
xor
dec
fstps
sbb
xchg
dec
adc
cmp
pop
jns
repz
cmp
xchg
popa
inc
test
scas
lds
add
lods
sbb
aaa
out
lods
jbe
out
prefetcht0
nop
repnz
les
rorl
xlat
cld
das
dec
adc
std
push
ljmp
push
and
cwtl
push
scas
jne
ret
cmp
lock
int3
cli
or
fstpt
lods
test
ret
push
pop
scas
mov
cmpsl
mov
movsb
negl
das
popa
xor
xlat
jg
scas
imul
aad
xor
call
fcom
call
xlat
jg
fstl
cmc
lcall
clc
mov
aas
push
mov
mov
xchg
pop
inc
add
xor
sti
fdivs
or
mov
lea
xchg
jmp
std
xor
adc
dec
inc
dec
mov
insb
push
imul
or
outsl
gs
lods
sub
daa
hlt
mov
or
lods
push
xchg
nop
lock
stos
xor
mov
inc
cmp
xchg
out
sahf
icebp
stc
pop
adc
sub
pop
lds
fcmovbe
sub
dec
xor
or
cltd
imul
leave
out
scas
fwait
pop
lea
in
popa
cli
pop
js
call
ja
cmpsb
dec
or
push
mov
sub
testl
cmp
xchg
cwtl
rorl
xchg
addr16
lcall
les
adc
in
lea
loope
jbe
adc
pop
jg
mov
xlat
in
subl
jne
dec
movsb
adc
mov
lock
mov
rorb
xor
nop
mov
ds
loopne
ljmp
es
pop
test
mov
and
stc
sarl
popf
xchg
push
xchg
push
popa
and
int
adc
jb
lock
lret
jnp
enter
push
cmp
dec
mov
addr16
xchg
iret
sub
dec
xor
imull
daa
pop
adc
popf
adc
ror
leave
iret
stos
mov
mov
jo
popa
mov
lahf
ss
jbe
xchg
repz
aam
stos
and
lahf
aas
inc
or
rclb
xchg
je
rcrb
cmp
movsb
jb
in
call
icebp
inc
inc
cmp
std
jg
jne
mov
add
je
jnp
or
xchg
xchg
mov
adc
out
jno
cs
xor
jg
ja
sub
and
out
std
adc
sbb
popa
pushl
xor
out
test
pushf
outsb
push
dec
jae
mov
test
xchg
jp
cmpsl
fucomi
sahf
sti
push
fcomp
out
std
or
imul
cli
xchg
leave
out
lret
pop
les
or
daa
jmp
xchg
dec
inc
negb
jo
lret
pop
pop
and
xchg
adc
and
stc
add
and
fldl
fst
xchg
mov
aaa
mov
cmpsl
mov
add
stc
cmp
mov
cmpsl
aaa
test
arpl
mov
sbb
call
fdiv
mov
insb
push
cwtl
pop
lock
insb
imul
jne
mov
cmp
jnp
in
xlat
sti
out
jg
pop
jl
xchg
fwait
inc
cli
int
fwait
mov
js
jle
and
subl
sbb
dec
cmp
popa
jl
pop
pop
mov
movsb
in
and
push
ret
xchg
cmpl
mov
ss
mov
lods
scas
outsl
jbe
jmp
xor
mov
pop
push
ds
cmc
or
daa
jecxz
in
add
xorl
lret
int3
xor
cli
es
jle
add
jmp
lret
fldt
fldt
inc
mov
pop
aas
das
mov
mov
jge
jae
cmp
mov
pushf
fistl
daa
push
jmp
lret
xor
loopne
lods
repnz
mov
int
cmp
pop
insb
loopne
pop
leave
lahf
aaa
int
lock
movsl
and
rclb
pop
mov
inc
into
dec
sahf
cmp
fisubs
neg
ja
sub
insl
mov
xchg
fsubl
add
sub
inc
fsubrl
fbld
push
xor
xor
inc
xchg
lds
xchg
mov
sti
dec
cwtl
push
mov
popa
pop
mov
or
jb
xsavec
les
push
xor
inc
dec
ficompl
loop
gs
sub
les
inc
mov
rorl
mov
fwait
xor
fsubrp
fsubs
stos
cmp
sub
shll
hlt
pop
sub
xchg
mov
xchg
push
outsb
scas
aas
cltd
repnz
push
xor
sti
fsubs
add
push
popf
lock
pop
outsl
scas
movsl
ljmp
lods
xor
dec
in
scas
in
cmpsb
ss
sub
imul
push
ss
stc
pop
mov
mov
sub
push
and
jge
mov
je
test
ficomps
xor
cmp
mov
in
pushf
loope
push
pop
cmp
popa
and
xorl
imul
cmp
xor
stos
repnz
negl
jp
stc
hlt
lret
notb
jb
mov
out
dec
pushf
jle
scas
fnstcw
ficoml
hlt
shrl
push
mov
outsb
fiadds
into
inc
inc
mov
xor
xor
pop
push
mov
aas
test
xor
pop
sbb
ljmp
jne
xrelease
mov
mov
mov
mov
into
addl
scas
pop
test
hlt
push
arpl
jns
sahf
mov
mov
mov
fldl
icebp
int3
out
mov
adc
scas
push
loop
fisttpl
mov
out
xchg
xor
cwtl
rdpmc
dec
push
pop
movsl
mov
xchg
xor
mov
outsb
test
ds
int3
cld
jbe
fildl
lret
popf
pop
cmp
jae
dec
fidivrl
es
fnstenv
xchg
gs
jle
adc
xchg
movsb
xchg
lock
sbb
fucomi
enter
xchg
push
inc
stos
mov
mov
mov
icebp
leave
cld
repnz
cmp
pop
mov
adc
repz
nop
outsl
ffreep
movsb
ret
dec
mov
sub
mov
dec
call
cld
rorb
jle
xor
fwait
pop
cmpsb
jns
lahf
sub
addr16
mov
mov
dec
out
add
aaa
dec
fs
push
mov
shl
repz
sahf
or
mov
add
aas
movsb
add
jnp
cmpsl
je
shrl
aad
fistpl
loopne
ss
shlb
in
lahf
shl
sub
test
stos
or
or
jecxz
mov
in
vpxor
int
mov
push
es
das
into
enter
in
out
in
cmp
repnz
sbb
inc
loope
mov
cwtl
xchg
jno
inc
xor
pop
xchg
pop
outsl
sub
mov
xchg
popa
and
inc
push
mov
cwtl
leave
sub
movsl
add
jbe
lods
adc
mov
sbb
mov
les
ja
xchg
sti
into
inc
pop
je
push
jns
dec
push
scas
ljmp
mov
mov
add
cld
adc
test
add
pop
icebp
mov
and
jle
dec
add
sbb
inc
mov
stc
adc
cs
sub
pop
rsqrtps
mov
shll
sub
pop
and
mov
xor
pushf
sbb
mov
fldl
mov
push
or
or
pop
push
xchg
adc
in
xlat
add
pop
xor
jge
idivl
idiv
jle
in
gs
data16
aaa
mov
pop
sub
jg
pop
outsb
push
jns
mov
mov
pop
pop
push
sbb
in
xorb
andl
xchg
jl
and
push
xchg
adc
mov
and
imul
jnp
cwtl
cli
xchg
call
ficoms
add
cwtl
mov
jae
cmp
scas
mov
adc
xor
sub
sub
aaa
mov
je
xor
pop
rcr
inc
pop
push
fcmovb
rol
mov
cmp
ror
enter
adc
int
jbe
inc
daa
and
in
xchg
imul
sub
cld
ficompl
out
out
loopne
jge
faddp
cmp
in
sbb
lods
dec
mov
cmp
ds
jb
int
push
cmp
xchg
outsb
mov
mov
ret
mov
mov
int3
imul
lods
mov
test
les
sub
and
mov
loope
cmp
nop
imul
out
add
sbb
lcall
neg
jmp
jg
pop
pop
lret
xchg
pop
fildll
in
inc
or
aad
sbb
iret
xor
mov
lds
std
and
js
leave
test
add
int3
dec
mov
add
jne
gs
pop
and
stos
outsb
nop
pop
popf
add
jne
loope
and
ficompl
adcb
sub
pop
cs
jo
jnp
enter
lahf
ljmp
in
mov
lcall
and
dec
or
loope
cmp
shlb
push
mov
xchg
stos
sub
and
inc
pushf
cli
cld
dec
lods
imul
clc
shrl
sbb
xor
mov
dec
into
pop
dec
inc
sub
pop
add
xchg
cmp
and
insb
test
mov
add
dec
ss
push
lahf
push
mov
sahf
cmc
jmp
pop
ret
mov
cltd
scas
sub
in
movsl
jecxz
inc
fbstp
data16
dec
add
fstpl
push
cmpsl
out
stos
fnstsw
jbe
ljmp
loop
popf
and
popa
sub
pushf
inc
or
cmp
frstor
neg
out
negl
inc
sahf
adc
xor
out
xor
mov
aad
sub
dec
dec
test
incl
fstl
fists
sarl
cmp
lret
dec
ljmp
adc
add
das
or
xor
data16
pop
enter
xchg
cmp
xchg
lret
xchg
and
sbb
jge
adc
pop
push
testb
sub
push
dec
push
sub
addr16
mov
and
ljmp
xchg
mov
xor
pop
adcb
movsb
std
sbb
fsubr
mov
sbb
outsl
mov
xchg
jbe
xchg
popa
cmp
xor
jne
and
lods
shrl
dec
push
jns
xor
dec
mov
sub
cmp
dec
les
fs
rcrl
xor
pop
jge
lret
sbb
xchg
mov
mov
push
xor
lcall
in
sbb
stc
jb
pop
jp
in
pop
sub
mov
push
cmc
daa
and
jns
jmp
and
mov
je
mov
lods
and
ja
cmp
popf
sbb
nop
int
test
xorb
daa
shr
inc
and
inc
aad
in
dec
orb
mov
cmp
xchg
adc
xor
imul
add
mov
nop
or
notw
xor
dec
insb
push
dec
inc
bound
pop
jecxz
inc
fsub
mov
xchg
cmp
sbb
out
test
in
lea
add
adc
pop
imul
push
orl
pop
stos
xchg
jnp
cmc
mov
xlat
mov
ja
push
jge
dec
mov
fidivrs
lods
popa
xchg
jae
pop
mov
mov
mov
dec
mov
scas
and
addr16
nop
push
jnp
and
dec
push
rcl
adcl
fst
and
xchg
leave
es
sbb
ljmp
paddb
scas
push
in
xchg
mov
add
stos
in
push
out
xchg
add
xor
adc
notb
sbb
inc
repz
cmp
mov
mov
xchg
rorl
in
mov
sbb
dec
int3
call
xor
fsts
mov
int
icebp
icebp
inc
jge
fs
addr16
pusha
lds
aad
mov
or
or
negb
fcomip
addl
lahf
cwtl
stc
fstl
popa
mov
adc
je
xor
jae
dec
out
shlb
dec
inc
into
in
mov
outsb
jg
dec
dec
jbe
int
jecxz
scas
jno
cmpl
lock
cmp
mov
dec
or
sbb
fisttpl
ja
pop
dec
pop
xor
mov
cli
add
or
sub
mov
scas
xacquire
and
lahf
add
cwtl
out
clc
in
dec
stc
pusha
xor
addr16
push
sub
lahf
loopne
cld
add
ljmp
rcll
fwait
xchg
mov
push
add
push
das
xchg
loopne
mov
xor
push
fnstsw
in
cwtl
xchg
push
jae
cmp
push
enter
fiadds
push
fwait
push
add
shlb
ja
fcmovnu
loop
shl
scas
aaa
subl
hlt
loope
loopne
sbb
popf
inc
hlt
pop
mov
aad
mov
cmp
inc
notl
pop
cmp
aas
sub
mov
adc
pop
mov
leave
xlat
cmp
aam
sub
inc
and
and
aas
inc
scas
aaa
cwtl
push
pop
pop
imul
sahf
fadds
fs
mov
adc
dec
int3
pop
xor
lcall
and
lahf
nop
jb
repnz
lea
addr16
icebp
scas
hlt
aam
fsubrp
add
divl
mov
repz
inc
loope
divl
dec
enter
sbb
cld
shl
dec
push
neg
cltd
or
sub
jge
or
out
stos
jo
or
daa
jge
push
lock
daa
pop
push
psubb
pop
out
inc
jp
jg
loopne
dec
fdivrs
or
repz
fcoml
movups
jge
movsb
incl
inc
insb
or
inc
test
aam
ret
out
es
shrb
scas
aad
in
repnz
jle
dec
test
inc
icebp
jbe
cld
dec
mov
xor
outsb
push
add
cld
xchg
mov
inc
test
mov
cmp
cmp
popf
notl
push
fnsave
mov
mov
or
xor
int
repnz
test
push
or
testb
fdivs
sub
and
test
out
xchg
call
ljmp
mov
xchg
dec
mov
jmp
fisubs
int3
xlat
xchg
xchg
pop
outsl
cmp
mul
lcall
sbb
and
pusha
nop
data16
das
addl
pop
std
cmpsb
mov
lret
lcall
decb
inc
aam
sub
mov
in
jno
scas
ljmp
pop
int
iret
test
div
outsw
sub
sbb
xchg
stos
push
in
mov
stos
jecxz
es
or
jns
add
test
scas
mov
mov
ljmp
xor
push
mov
test
sti
mov
cltd
into
xchg
pop
cltd
jle
adc
aad
stos
pop
mov
stos
push
mov
sub
pop
or
cmp
sub
int3
jg
xchg
push
or
add
lock
inc
aaa
aas
dec
mov
hlt
push
add
cltd
cli
xor
gs
pushl
sarl
jb
jae
mov
xor
xor
cmp
into
xor
pusha
add
adc
xor
lods
fwait
loope
adc
jnp
push
dec
repz
xor
subb
rol
fs
lret
dec
cmp
test
xor
in
int
mov
andl
xchg
jb
aas
test
mov
xchg
stos
popf
sub
jb
imul
fistpll
xchg
cltd
xchg
insl
dec
and
cld
std
and
pop
mov
push
sub
push
clc
aaa
cltd
and
mov
aaa
movsb
outsl
dec
push
xor
pop
loopne
cli
pop
jbe
gs
pusha
mov
push
testl
iret
sbb
sub
jnp
icebp
fwait
pop
adc
lahf
jnp
mov
adc
xchg
push
inc
dec
dec
push
lret
hlt
cmp
lea
or
or
pop
movsb
push
out
sub
cli
pop
jg
xchg
movsl
xchg
ja
out
add
call
scas
jne
lahf
popa
leave
mov
and
inc
negb
jns
andl
pusha
xchg
aaa
sub
notl
lcall
aad
testl
popf
push
cmpsl
roll
inc
mov
inc
push
mov
push
in
hlt
jle
aad
aaa
sbb
loope
sti
mov
xor
jg
or
outsb
movsb
not
xor
sbb
mov
test
icebp
or
repz
aad
cmp
xchg
pushf
cmpsb
jno
hlt
jle
fdivrl
addr16
cmp
pop
sub
jecxz
cmpsb
sti
sbb
mov
push
in
lods
aas
jmp
jg
popa
xchg
xchg
and
cli
es
call
cli
repnz
icebp
scas
jle
roll
push
xchg
shll
into
scas
xchg
sbb
mov
xchg
push
cmpsl
insl
fwait
scas
jmp
rolb
lcall
sti
push
pop
sbb
xchg
push
fidivl
aas
push
mov
aam
sahf
dec
mov
sbbl
pop
leave
jae
cwtl
and
sbb
push
dec
lcall
xchg
sti
mov
arpl
rcl
adc
notb
dec
bound
loope
loop
push
inc
out
std
in
shlb
pop
and
sub
gs
cmp
test
test
mov
fldenv
mov
stos
sub
and
mov
push
add
xchg
dec
inc
movsl
fs
sbb
or
add
adc
xor
xor
adc
push
popa
add
std
in
adc
jae
out
lahf
out
mov
jge
out
add
mov
incb
out
popf
mov
inc
mul
ja
or
mov
hlt
lret
std
loope
sti
mov
mull
pop
in
lods
mov
out
dec
push
std
repz
call
or
scas
jp
dec
daa
jo
int3
and
add
xchg
jecxz
and
popa
pop
xor
inc
movsl
rclb
repz
lret
dec
cmp
decl
pop
cwtl
lahf
adc
fs
idiv
les
xor
adc
aam
pusha
call
inc
cmp
mov
cltd
lcall
fwait
daa
mov
xor
or
popf
xchg
arpl
mov
flds
mov
lahf
mov
push
daa
je
je
xor
cmp
pop
popf
adc
fistpll
jnp
push
xchg
cmpsl
mov
sahf
lahf
xorb
jmp
pop
dec
outsl
mov
inc
andl
subb
repz
in
inc
adc
ret
mov
sbb
fidivrl
inc
stos
or
repnz
xor
push
test
lock
roll
decb
jne
mov
sbb
mov
rcl
mov
push
es
dec
inc
pop
pop
adc
jle
push
push
arpl
lds
pop
and
mov
mov
sbb
adc
and
xsha1
cmpsb
mov
mov
pop
imul
icebp
push
cmp
fxam
icebp
cs
enter
or
jbe
ja
dec
stos
sarl
jbe
mov
mov
and
shrb
test
and
pop
xor
inc
mov
fnstenv
in
aad
dec
mov
jp
in
movsb
add
les
cmp
or
fwait
dec
popa
outsl
daa
sub
pop
lock
shlb
sbb
push
daa
sub
sbb
cmp
andl
mov
sbb
add
xchg
jns
ds
adc
push
push
rclb
mov
pop
sbb
cmp
sbb
xor
outsl
cwtl
testl
adc
pushf
dec
call
jl
push
movsb
fwait
daa
out
cmpsb
jo
xor
in
cmp
jp
dec
fsubl
xchg
mov
loopne
jno
daa
and
orb
int
cltd
adc
push
add
js
or
mov
mov
xor
loop
cmp
or
loope
jge
popa
pushf
lods
call
cmp
sub
xchg
push
adc
js
nop
jmp
mov
jbe
inc
call
jno
lods
outsb
and
sahf
mov
adc
fs
jge
adc
jae
mov
xchg
mov
stos
fisubs
add
lea
cltd
insl
jge,pn
xchg
mov
inc
test
aas
inc
out
jg
popf
inc
daa
xor
push
leave
out
push
lods
aam
adc
icebp
sub
inc
mov
cmpsl
and
fucomi
das
xor
out
roll
cmc
mov
fucomi
cmp
jae
mov
mov
clc
clc
ljmp
repnz
test
fistpll
fs
subb
cmp
inc
pop
mov
sub
rol
shrl
gs
xor
shr
adc
jbe
inc
cmp
mov
mov
sbb
sbbl
adc
push
mov
mov
jge
mov
test
jno
mov
fs
dec
mov
push
loope
cmp
jns
xchg
dec
cmp
xor
xchg
cli
sarl
orl
incb
scas
push
mov
outsb
pop
mov
int
aaa
jns
fidivs
pop
arpl
lcall
mov
insb
adc
and
cmpsl
xchg
in
push
jbe
sarl
shrb
push
cmp
cmc
dec
enter
dec
hlt
movsb
mov
xor
xchg
call
sub
adc
dec
loop
mov
test
cltd
lods
dec
jge
in
ljmp
and
jmp
outsl
pop
inc
sbb
imul
or
mov
in
xorl
add
fdiv
sbb
flds
mov
aas
aad
int
adc
sbb
jne
add
inc
mov
aas
jno
adc
xchg
jg
sbbb
lret
inc
popa
scas
dec
shrb
lcall
push
js
call
out
repz
hlt
adc
cmpsb
ss
dec
xchg
push
fwait
aad
shll
xlat
out
jmp
fs
or
xor
clc
sub
xchg
or
in
and
loope
fists
fcmovb
inc
es
or
xchg
sbb
lret
adc
out
push
adc
mov
inc
jnp
stc
pop
dec
mov
jns
aad
fnsave
test
dec
adc
mov
loopne
jo
xor
jnp
mov
cmc
jae
stos
add
in
or
stos
cmp
xchg
ds
sysexit
int
pushf
test
popa
inc
pop
lahf
xor
cmpsl
sahf
lcall
inc
add
pop
xchg
mov
fisttps
imul
mov
jbe
push
cmp
mov
and
cltd
or
rorl
mov
outsb
cmp
shlb
sbbb
jne
mov
adc
stos
leave
jo
push
rcrb
dec
dec
orl
jg
xchg
jle
inc
lret
in
xchg
mov
sahf
add
push
test
stc
shrl
js
in
test
xchg
and
push
test
mov
adc
std
pop
lahf
xor
scas
push
push
lret
jno
ds
push
ret
call
xlat
aam
mov
xchg
outsl
je
cli
nop
jle
cmpsl
aaa
out
sub
jle
pop
pop
dec
add
aam
mov
out
loopne
or
int
scas
enter
xchg
flds
pshufw
mov
xor
inc
gs
mov
pop
inc
or
mov
xor
imul
pop
push
dec
aaa
fcomps
shrl
mov
inc
jle
stc
leave
es
int
xlat
std
cmpsb
jo
aas
pop
out
push
sub
fwait
adc
icebp
and
fisttpl
decb
jnp
stos
ljmp
push
xor
pusha
jl
adc
lods
cmp
imul
push
stos
xchg
je
xor
mov
mov
pop
cmp
xor
jne
stos
sbb
cmp
orb
cmp
adc
test
or
cli
xor
aam
mov
add
xchg
mov
xor
int3
scas
imul
shlb
leave
in
imull
test
xor
fidivl
push
dec
ljmp
dec
fwait
or
ret
or
add
xor
cs
inc
mov
mov
mov
movsl
mov
mov
aad
xchg
xor
xchg
lret
mulb
inc
ss
lcall
jle
add
cli
repnz
jge
subl
inc
out
xchg
popf
mov
imul
cmp
cs
rcrb
pop
hlt
xor
test
cli
and
or
dec
hlt
jg
sub
jmp
xchg
test
sub
mov
je
dec
push
imul
push
or
pop
pop
dec
sahf
lds
dec
into
ret
insb
mov
stc
mov
daa
sbb
ss
jmp
shll
xlat
loop
bound
ja
pushf
inc
pop
push
cmp
outsb
js
fwait
or
bound
pop
sub
xchg
loopne
cld
dec
cld
int3
cmp
cmc
mov
popl
adc
idivl
addr16
loop
jbe
dec
fsubrl
lahf
les
loope
aaa
outsb
popf
stos
mov
cwtl
inc
push
jmp
jg
or
jns
lods
mov
push
sbb
dec
ror
push
jp
adc
or
cmp
lahf
daa
in
adc
repnz
push
popf
scas
cmp
ljmp
les
jnp
stos
pop
sub
sbb
imul
into
sti
out
data16
xor
mov
shrl
es
add
ficomps
push
ficompl
repz
test
xchg
cmp
sti
jl
sub
in
bound
xchg
sbb
xchg
sub
cmp
je
lods
je
dec
repz
mov
xlat
lds
or
push
movsl
push
lcall
scas
xchg
fchs
or
push
push
add
rcll
jbe
imul
sub
movsl
leave
xchg
movl
mov
sbb
pop
aam
add
xlat
testl
cmp
jl
and
insl
lahf
cmpsl
sbb
mov
leave
xor
xor
cmp
out
push
xchg
je
lahf
add
xlat
or
pop
mov
adcb
sub
xor
inc
jmp
cmc
lret
or
inc
fsubrp
stos
jbe
add
dec
mov
jns
xorb
xchg
out
mov
sbb
cmc
push
lods
incb
scas
dec
inc
xor
jmp
cmp
inc
fst
shll
xchg
mov
out
in
adc
inc
in
sub
into
pop
sub
or
repnz
dec
jecxz
mov
inc
shrl
push
shrl
mov
loopne
call
pop
and
push
es
imul
sub
pop
adc
inc
daa
fucomi
dec
add
mov
mov
test
mov
jns
or
in
jmp
cmp
mov
fidivs
ljmp
stos
popf
sub
js
in
rcll
pop
pop
inc
fildll
or
xor
xchg
mov
in
xor
jmp
dec
jl
pop
test
je
insl
inc
cmpsb
or
xchg
mov
sub
dec
push
sbb
aas
adc
push
push
orb
in
into
es
subl
dec
mov
filds
testb
test
or
mov
ja
adc
dec
and
insb
and
mov
mov
shlb
add
arpl
mov
or
mov
dec
leave
ss
js
mov
mov
mov
xor
stos
adc
xor
mov
js
inc
mov
and
dec
neg
pushf
imul
shrb
inc
sbb
fildll
mov
sbb
out
inc
lods
es
outsl
sub
fsubr
pop
pop
or
aad
test
in
mov
mov
mov
sub
daa
jecxz
pop
jl
ficompl
aas
shrl
pop
hlt
lods
or
pop
lock
mov
push
pop
add
idiv
imul
inc
enter
pop
bound
sub
ljmp
mov
rol
loopne
sbb
add
rorb
pop
push
jnp
out
imul
pop
jnp
jbe
pop
lcall
inc
clc
stos
dec
sbb
mov
lock
aad
or
pop
es
mov
push
insl
cld
xchg
jo
pop
mov
aas
adcl
push
pop
jbe
add
clc
lock
cmp
popf
mov
or
adc
add
fcmovne
outsl
sbb
jecxz
rorb
fsincos
popa
cmp
cmp
iret
pushf
inc
or
or
jnp
mov
push
outsb
into
out
dec
les
fisubl
dec
xchg
pop
cwtl
xlat
arpl
cmp
jne
jle
dec
ror
repz
out
and
push
fcmovne
inc
repnz
adc
fs
jne
mov
sahf
mov
outsl
nop
loop
popa
test
int3
push
mov
or
mov
imul
mov
rcll
arpl
sbb
out
push
les
lahf
scas
ljmp
inc
mov
xor
cmp
jl
std
jmp
int3
xor
test
inc
movsb
aaa
bound
not
push
sub
and
test
cmp
pop
push
loop
fstl
sub
mov
insb
push
shl
sti
pushf
incb
jo
lods
addr16
enter
aad
ss
jne
test
sub
je
ss
mov
lock
sbb
and
lea
in
cwtl
ss
jp,pt
pushf
add
mov
push
addr16
mov
lock
lea
icebp
mov
ret
stos
pop
pop
imul
jl
inc
adc
out
mov
cwtl
jg
pop
cwtl
sbb
lret
mov
ret
mov
arpl
xor
sub
out
pop
pop
dec
or
pop
xor
add
ljmp
sahf
int3
sub
mov
lock
loop
and
aam
add
mov
and
cmp
adc
pop
push
insl
je
mov
mov
lret
mov
test
aam
jbe
popf
je
sub
aam
push
mov
xor
out
sub
dec
jmp
or
ss
mov
xor
movsb
inc
call
xchg
scas
sub
and
mov
jle
stos
or
inc
movsl
fs
dec
in
cmp
aas
out
add
dec
push
add
std
fistps
clc
stc
pushf
pop
pusha
gs
jb
dec
fld
jae
call
or
cli
stc
cmp
jno
xor
sti
fdivr
dec
mov
sub
cmc
push
lds
aaa
rcl
xlat
push
pop
imul
mov
jb
in
lret
pop
aaa
cli
push
mov
cld
das
stc
push
mov
and
xlat
fidivrs
cmp
test
out
jb
or
or
aam
inc
mov
add
addl
movsl
test
movq
cmpsb
adc
es
mov
lret
xor
daa
mov
pop
faddp
sbb
stc
and
sbb
cli
aas
repz
in
xchg
jg
xchg
mov
icebp
xor
lret
iret
xchg
shl
sahf
push
inc
out
inc
call
fnstcw
or
push
sbb
xor
das
pop
or
ja
adc
stc
adc
xor
push
mov
cmp
and
fcoms
fldt
aad
mov
fsubs
and
sbb
mov
repnz
test
jb
cmp
mov
mov
cmp
sub
sti
jl,pn
cmp
pop
ja
loop
aas
cmpsl
enter
push
daa
scas
cmp
mov
rcr
mov
fists
into
dec
gs
movsb
push
mull
or
fldcw
jae
icebp
jns
repnz
push
scas
mov
loope
arpl
shl
test
lds
sahf
fidivs
orb
std
enter
push
outsl
fs
pop
subl
jne
inc
insl
mov
inc
jno
iret
mov
clc
mov
pushf
push
js
or
daa
ficoms
rclb
scas
data16
je
jmp
push
jecxz
test
in
xchg
movsl
mov
adc
or
adc
iret
mov
pushf
inc
sbb
pop
jno
enter
xchg
mov
sub
xorb
xor
mov
jp
movsl
addr16
xchg
lock
shlb
inc
fdivrs
dec
iret
pop
and
mov
rolb
in
lods
bound
pop
dec
aam
cmp
daa
scas
je
mov
pop
orb
jmp
lods
cli
mov
lret
arpl
inc
shr
mov
push
lcall
repnz
out
enter
xchg
or
xorl
jae
jno
pushf
mov
jmp
test
test
hlt
roll
cwtl
iret
mov
cmc
dec
cmp
pop
das
add
out
push
xor
out
jmp
cmp
data16
push
bound
ljmp
jmp
std
cmpb
aaa
cmp
in
xor
arpl
pop
lock
xchg
pop
sbb
add
add
xor
lahf
xchg
cmp
mov
cld
mov
dec
aam
inc
addr16
pushf
dec
sbb
divl
ss
jno
scas
or
mov
mov
pop
inc
and
sbb
push
mov
shrb
ja
pop
push
frstor
outsb
jl
dec
out
icebp
jnp
fistpll
lds
inc
jmp
and
call
out
gs
xorb
cs
fcomi
mov
into
rclb
mov
xor
je
mov
mov
jg
xor
lret
sti
xor
xchg
test
sbb
adc
shl
xchg
ret
and
mov
adc
mov
in
pop
in
push
cmpsb
jno
dec
std
jo
pushf
jbe
lret
ljmp
xchg
js
xor
or
and
pop
mov
adc
sarb
ret
mov
loopne
aas
shlb
jl
pop
cmpsl
inc
push
stc
sub
shrb
and
dec
push
xchg
xor
add
cmp
fnstenv
pop
ret
mov
sahf
in
subb
xchg
mov
jge
mov
icebp
sub
jb
sahf
aaa
pop
stc
and
cmp
jb
sub
sti
jnp
or
rorl
add
sbb
inc
xacquire
pop
ficompl
aaa
sar
or
addr16
das
fidivs
repnz
add
xchg
sarb
or
repz
inc
fadd
into
movsl
in
lods
imul
mov
and
sub
mov
outsb
frstor
or
xlat
jo
sti
mov
fistpll
ret
and
push
pop
incl
nop
popf
mov
fucomi
jb
mov
or
fistps
lods
ss
cmp
cmp
mov
imul
add
ja
xchg
cld
mov
fsub
push
mov
push
sbb
movsl
sbb
insb
push
jmp
cmp
imul
clc
dec
cmp
xchg
pop
cmp
aam
xor
add
aaa
cmp
sub
adc
ds
cmp
pusha
add
jbe
cmc
push
or
fwait
jnp
mov
xorb
icebp
mov
xchg
add
stc
sbb
stc
aaa
jg
ret
scas
cmc
je
xchg
outsb
addl
outsl
test
call
flds
mov
mov
imul
inc
mov
cld
pop
and
pop
push
and
les
push
mov
mov
enter
arpl
jnp
xchg
sbb
inc
jo
inc
ja
mulb
es
xor
shr
int
jecxz
add
adc
flds
inc
lret
and
jnp
loopne
fidivrl
xchg
fnstenv
mov
incl
xor
int3
xchg
je
fcmovne
jno
mov
loop
inc
cltd
xor
and
and
adc
mov
lods
std
sbb
mov
rcr
cld
ja
xchg
subl
insl
mov
lret
mov
lods
adc
adc
jg
aas
std
out
roll
add
iret
lods
adc
push
lea
xor
pusha
cmp
fucom
inc
pop
fistl
es
jae
adc
orl
ds
mov
cmpsl
pushf
sbb
insl
add
lret
push
andb
in
mov
or
inc
xor
daa
rol
sbb
fimull
and
pop
dec
out
mov
cmc
xchg
dec
dec
iret
dec
jo
fistpll
ret
test
jns
gs
aas
mov
andl
sarl
pop
aad
jp
jg
push
xor
outsl
xchg
xor
stos
cmp
cmovae
inc
cwtl
push
xor
aas
mov
or
out
mov
dec
movsb
jle
pop
jae
popf
shrb
dec
out
lock
test
sbb
cltd
mov
dec
icebp
push
subl
xor
jmp
or
mov
xor
mov
call
ds
xor
pushf
jg
mov
stc
in
xchg
inc
and
cld
insb
iret
mov
cwtl
jl
es
repnz
imull
loopne
testb
xchg
cltd
lahf
sti
cwtl
aas
fisubs
les
daa
xchg
outsb
pop
sub
jbe
mov
les
pop
aam
adc
cmp
je
push
mov
inc
sbb
mov
cmp
xchg
pop
lock
inc
insl
jmp
jmp
mov
and
in
mov
or
pop
or
jne
ss
in
jmp
mov
in
dec
inc
into
add
push
ret
fucomip
mov
loope
loopne
cmc
mov
jg
scas
mov
pop
mov
mov
add
or
dec
out
movsb
fcomp
xor
lock
pop
fsubs
push
or
cmp
sbb
pusha
call
aam
cmp
jo
arpl
jo
mov
loopne
stos
jnp
into
sub
int3
int3
rorl
push
cmp
fidivl
sbb
pushf
cmp
iret
push
imul
subl
cmpsl
and
mov
or
call
popa
cmp
cmp
push
test
xor
add
jns
push
insl
mov
imul
adc
mulb
push
fyl2xp1
adc
insl
movl
int3
adcl
loopne
test
jge
xor
and
loop
imull
cwtl
je
test
push
sbb
sbb
xor
xor
test
cmp
xchg
push
inc
mov
sub
cwtl
cmp
cmp
stc
mov
loope
mov
jno
js
leave
ja
inc
fs
cmp
adc
mov
les
pop
push
sbb
fcmovu
jmp
loope
test
fsubl
insl
add
cwtl
fcomi
mov
jae
imul
js
inc
push
cmp
mov
in
jl
popa
or
sarl
push
pop
testl
inc
pop
dec
scas
arpl
mov
aas
cmp
scas
jle
xor
outsl
std
inc
dec
cli
daa
lahf
add
pop
lods
popf
aam
push
movsb
roll
xor
fildll
lahf
fwait
lds
mov
or
cmp
jne
inc
shr
jo
or
mov
sbb
aas
imul
adc
push
inc
aad
mov
add
rcrl
scas
xor
inc
mov
sub
inc
into
push
fadd
cmp
cmp
add
in
imul
ljmp
into
mov
adc
push
mov
xchg
es
sbb
in
mov
inc
data16
xchg
push
mov
test
or
jae
pop
aas
pop
or
pop
jecxz
mov
pushf
outsl
lock
lret
pop
jl
push
jnp
test
loope
xchg
pop
mull
mov
sub
and
cltd
push
aas
int3
roll
lea
push
movsb
les
jecxz
cld
aam
xchg
mov
inc
mov
out
add
sti
int
inc
jle
popa
adc
dec
push
add
cs
mov
mov
insl
lret
dec
mov
popf
scas
popl
sbb
cltd
jp
bound
cmp
add
mov
adc
push
mov
push
lods
out
xor
adc
add
pop
pushl
cmp
push
xchg
pop
xor
push
cmpsb
jne
pop
ret
popf
push
pop
cmp
lret
cld
adc
enter
sub
inc
mov
popf
inc
loope
scas
repz
cmp
and
add
adc
stos
cmpsb
data16
in
mov
cld
push
jae
movl
mov
dec
call
mov
push
dec
or
jb
lcall
clc
aas
repz
mulb
jmp
outsl
push
pop
movsb
into
add
pop
rclb
idivb
mov
mov
je
ja
mov
pop
xchg
mov
pop
inc
es
cwtl
inc
pop
jge
xchg
imul
sub
xchg
filds
aad
adc
orl
in
je
fucomp
movsl
sbb
add
loope
cmp
jo
mov
lds
xchg
cwtl
movsb
std
aam
in
adc
jb,pt
fwait
mov
cmp
fsubl
aas
in
sub
fistpll
add
ds
out
iret
jo
sbb
pop
and
insb
lods
shll
in
sbb
sub
push
aaa
xchg
das
outsl
stos
arpl
mov
add
cmpsb
test
lock
repnz
inc
pop
movsb
daa
outsl
aad
jle
pop
add
add
cmpl
sub
mov
jmp
cmp
testl
or
idiv
pop
ret
sub
jl
mov
fisttps
inc
mov
fnstcw
jp
mov
inc
repnz
int3
mov
popa
xor
imul
xor
or
jge
mov
jmp
jnp
daa
push
mov
push
mov
xchg
jae
movsl
fstps
xor
jb
call
mov
xchg
push
das
nop
xor
or
pushf
movsl
fs
push
call
or
mov
or
sub
cs
push
xchg
sub
sbbl
xor
mov
movsl
sub
and
fiaddl
mov
push
shrl
popf
shl
int
push
xor
popa
scas
mov
fiadds
gs
js
scas
cltd
stos
insl
stos
test
fiaddl
jns
inc
into
hlt
xchg
xchg
mov
scas
popf
and
lods
dec
insb
daa
inc
xchg
aam
sub
int
stos
out
clc
cli
mov
outsl
inc
lea
add
lds
xchg
icebp
jg
outsl
les
outsb
out
sbb
mov
xchg
xchg
fidivl
icebp
and
fs
ljmp
and
test
and
cwtl
mov
mov
xor
fildl
lret
fnstcw
jge
clc
std
seta
pushf
adcb
aas
scas
fdivs
iret
jecxz
std
adc
aaa
inc
lea
jmp
sti
jp
pop
xor
sahf
jbe
dec
mov
add
push
xchg
out
push
mov
repz
std
int3
pop
mov
jl
int
iret
jmp
cld
push
dec
loope
push
pop
pushf
jg
jno
fildll
add
sti
and
inc
add
jg
aas
popf
push
insb
cmp
push
inc
sub
adcb
cmp
cmc
mov
push
pop
addr16
dec
cmp
xor
pushl
fiadds
xor
or
in
je
sbb
sub
mov
out
ljmp
insl
dec
pop
xor
insl
loope
not
mov
cmc
mov
stc
jge
jne
popa
sub
cmp
roll
popa
daa
xchg
dec
fisubl
add
sbb
ljmp
jecxz
shlb
mov
fadd
arpl
xchg
pop
lea
mov
mov
jo
ds
mov
sub
pop
aad
sarb
sahf
pushf
aas
idivb
aas
mov
roll
jge
ds
cmpsb
mov
addr16
faddl
pop
sub
cld
bound
cmpsl
cwtl
aam
jg
mov
mov
xchg
das
test
aas
rol
sbb
sbb
pop
xor
mov
xlat
dec
cmc
xchg
pop
mov
sti
scas
stc
xor
xchg
sti
loop
mov
cmp
out
cs
jp
testb
push
fsts
out
and
and
ret
dec
popf
scas
sub
add
sti
dec
scas
leave
cli
fcomp
and
bound
out
mov
xchg
adc
cmpsb
cltd
pop
pop
aad
pop
test
cmp
jnp
in
lret
inc
mov
repnz
cmpsl
jl
mov
loop
pop
hlt
lret
out
sbb
lahf
dec
std
js
push
hlt
in
hlt
into
dec
fisubs
divb
stc
cli
xchg
jecxz
jle
xor
in
movsl
repz
cs
iret
test
in
scas
adc
mov
xor
call
ret
jbe
cmpsl
pop
add
dec
and
bound
fwait
jp
sub
xchg
test
xchg
test
cli
outsl
aam
popa
and
sahf
sti
iret
pop
mov
add
xchg
jg
addr16
mov
and
jno
pusha
pop
push
jmp
mov
jb
mov
cld
movsl
hlt
call
jg
sub
sti
push
shll
pop
sahf
stos
mov
out
test
loopne
dec
fstpt
cmp
jnp
nop
dec
aas
sbb
sbb
jnp
or
movsb
push
jg
push
hlt
xor
sub
sub
dec
shll
or
mov
and
lret
inc
pusha
inc
pop
mov
shrb
jo
gs
adc
fsubs
bound
mov
pop
sub
xor
sahf
mov
jg
test
cli
int
mov
pusha
xor
imul
xchg
enter
out
inc
inc
mov
xlat
mov
inc
in
dec
mov
jns
cmp
fxch
dec
mov
sarl
jo
inc
movl
jbe
sub
fs
pop
ds
xor
lods
jl
mov
shr
lea
pop
mov
pop
repz
nop
or
repz
xor
pop
cmp
imul
aaa
jmp
jb
mov
addr16
push
mulb
adc
loopne
lret
shlb
jmp
jb
fstpt
es
dec
sahf
lahf
adc
pop
lods
push
shrb
icebp
mov
lahf
out
pusha
das
mov
es
cwtl
or
scas
ror
jne
into
mov
pop
inc
daa
outsl
out
adcb
das
mov
xchg
jb
xchg
mov
push
cmp
add
push
push
or
adc
fwait
insb
or
add
mov
mov
in
xor
pop
add
loope
mov
adc
jo
ja
fnstsw
scas
notb
sbb
pop
pop
sarb
fstpl
pop
push
sahf
add
sbb
insb
mov
aas
jp
sub
popf
jg
jo
movsb
mov
xchg
ret
add
jmp
std
incb
iret
mov
loope
mov
lds
push
repz
mov
pop
lcall
push
lods
arpl
push
int
xchg
loopne
mov
jbe
repz
mov
in
adc
add
xor
sub
xor
mov
inc
fildll
push
iret
movsl
xor
and
mov
inc
divb
mov
cmc
ret
aas
xchg
push
dec
ljmp
enter
insl
je
mov
push
sbb
push
daa
cltd
pop
ds
das
cmp
mov
mov
imul
sbb
pop
xor
add
lret
bound
add
aaa
cmp
pop
cmp
dec
lcall
adc
push
mov
js
lahf
xor
pop
das
inc
ja
push
sub
lret
movsl
pop
mov
mov
or
int
mov
xchg
dec
and
movsb
jecxz
fwait
aaa
fs
repz
clc
inc
ljmp
lds
iret
test
dec
fcompl
in
out
add
repnz
dec
dec
push
inc
mov
cmp
in
inc
dec
scas
jg
xchg
xlat
lret
mov
adc
push
fsubl
jmp
cwtl
fdivl
xchg
cli
add
jb
rolb
jl
or
mulb
jmp
fbstp
dec
xchg
xchg
fstpt
and
daa
push
jmp
dec
dec
lods
xlat
and
loopne
mov
jecxz
fiadds
out
mov
mov
pop
xor
vxorps
jns
cwtl
or
cld
adc
ds
sbb
xor
inc
outsl
in
xor
pusha
push
testl
adc
pusha
jge
inc
jbe
pop
mov
jecxz
adcl
xchg
inc
mov
cltd
stos
sbb
pop
fistpll
inc
incl
shll
cli
pop
push
inc
mov
cs
icebp
loope
cltd
xchg
jle
es
aam
xchg
stc
or
inc
jb
outsb
out
adc
add
dec
xor
test
mov
mov
into
dec
push
pop
aas
fucomip
scas
inc
subl
pop
mov
inc
flds
fdivr
xchg
sbb
push
jmp
enter
and
dec
ja
lock
dec
jg
movsl
call
mov
int
leave
movsl
mov
dec
or
xchg
out
cmpsb
mov
add
jmp
mov
repz
in
push
neg
rol
or
mov
jg
dec
das
rclb
push
enter
pushf
ljmp
cmp
pop
jno
fidivs
sub
js
mov
aam
mov
push
popf
aam
sbb
out
push
into
jns
scas
popf
popa
sahf
pop
addb
and
xchg
add
jmp
adc
mov
dec
mov
sub
mov
add
cmpsl
push
or
pusha
aad
mov
xchg
adc
rolb
dec
mov
xchg
mov
mov
in
jo
aad
mov
loop
rorb
fsubrs
ds
mov
nop
aas
and
stc
inc
div
jmp
add
mov
mov
in
add
movsb
rclb
test
nop
jle
fidivs
sbb
hlt
in
lock
pop
cmp
dec
in
and
push
lcall
pop
arpl
adc
mov
test
mov
testl
cld
jb
mov
inc
repz
ret
les
orb
lahf
fisubrl
call
cwtl
lret
jcxz
mov
imul
sbb
jbe
fcompl
jg
sahf
lcall
inc
jmp
aad
mov
push
aas
mov
loope
xlat
adc
jno
test
aam
pop
mov
pop
xor
dec
int3
lock
xchg
addb
sti
sbb
popf
push
imul
pop
add
imul
in
sub
stos
mov
fmuls
jl
mov
add
shlb
dec
xlat
dec
in
dec
inc
mov
adc
cmp
dec
xchg
jge
jb
mov
push
das
aad
xchg
jmp
jecxz
pop
xchg
xchg
jp
xlat
cmp
jp
and
add
out
in
mov
jnp
xchg
ss
fcoms
mov
or
xchg
int
sub
cmp
jnp
jne
lahf
pop
add
mov
outsl
push
push
cmp
push
xor
sbb
lock
shrl
jne
fwait
push
into
test
jb
cwtl
mov
insb
pop
insb
repz
pop
add
or
lahf
out
inc
cwtl
mov
faddp
popa
not
push
inc
cld
fisubl
adc
xor
std
cltd
jmp
xor
int
xchg
dec
xlat
mov
sti
imul
fidivrl
mov
insl
in
mov
lods
inc
push
aaa
out
sub
fbstp
fistpll
sub
ret
add
push
movsb
popf
pop
movsl
jle
idivl
xor
test
or
dec
int3
rcrb
repz
sub
stc
out
and
jo
jbe
mov
inc
push
jmp
push
or
out
push
xor
aad
cmp
shrl
lods
jl
aas
pushf
push
or
aaa
cmp
jnp
ret
insl
fbld
repz
bnd
iret
mov
mov
cltd
pop
in
arpl
fsubrp
repz
data16
cmp
mov
fcmove
mov
jmp
mov
test
pop
lds
jne
cmp
cs
dec
divl
mov
out
push
add
fdivrl
push
dec
ljmp
sub
pop
push
dec
xor
roll
daa
shl
add
mov
insb
out
movsl
mov
cmp
xchg
addb
jo
inc
cmp
sub
test
sbb
ja
rcrb
hlt
xchg
testb
jge
lcall
out
mov
mov
repnz
jge
adc
mov
repz
sbb
out
push
nop
mov
pop
cmp
int3
lahf
pop
fcmovnbe
mov
outsb
repz
push
jmp
ss
mov
mov
testb
jle
cmpsl
std
sbbl
popf
push
cmp
push
and
arpl
push
loop
aas
aaa
mov
sbb
aad
dec
push
mov
mov
xor
pushf
pusha
repz
cld
inc
ds
adc
lea
sbb
jp
dec
cli
xchg
or
inc
xchg
movsb
les
movsb
xchg
aaa
or
repnz
fsubl
mov
out
jecxz
loop
jecxz
mov
in
lret
add
scas
rcll
iret
test
mov
or
xor
in
mov
xchg
aas
mov
and
out
lcall
cmc
das
sbbb
lds
cmc
add
fndisi(8087
fsubl
mov
jo
pop
int
cld
mov
imul
fnsave
xchg
out
sbb
cli
sahf
aad
enter
outsb
fnstsw
cmp
or
out
jns
popf
inc
mov
mov
jbe
ds
xor
or
adc
loope
or
xorb
dec
sbb
fistl
pop
cmp
das
or
fcompl
adc
mov
mov
xchg
jnp
dec
mov
add
loope
pop
xor
jb
subl
in
mov
mov
dec
push
cmp
dec
cmp
jo
ja
ficoml
fcmovbe
std
shrb
out
ret
les
out
out
sub
insl
jb
mov
adcb
aad
dec
icebp
adc
mov
sbb
lds
add
cltd
cmp
xchg
mov
mov
jne
lcall
sbb
jns
sar
mov
ds
rcl
or
imul
aas
mov
js
cmp
push
filds
jbe
sbb
imul
lcall
pop
cmp
movsb
punpckhdq
sub
std
enter
je
jae
ficomps
mov
mov
je
mov
jl
int3
frstor
adc
and
ss
fcomi
inc
push
call
andb
fidivrl
daa
jle
mov
movsb
decb
and
fimull
insb
jbe
nopl
aad
call
es
outsl
mov
sarl
data16
jecxz
or
loope
add
ss
popf
or
jnp
lea
aaa
cltd
lea
cmp
idivl
xchg
pushf
cwtl
lods
or
mov
nop
cmp
xchg
leave
cmp
add
mov
xchg
std
lock
movsl
aas
sub
dec
or
mov
xor
bound
xor
add
hlt
lret
mov
icebp
cld
bound
pop
bound
add
mov
jge
xchg
fildl
daa
pop
xor
jb
jo
or
or
out
jg
jge
inc
ss
pushf
icebp
rcrl
pop
cmp
add
jb
mov
pusha
cmp
fists
and
sub
pop
and
jecxz
jnp
shlb
test
mov
loopne
jp
arpl
sub
jb
stos
add
inc
dec
fiaddl
xor
pop
shlb
xor
cmpsb
push
pop
adc
in
sbb
xchg
fisttpl
popf
out
stc
add
pushf
idivb
push
ja
icebp
or
imul
xlat
inc
push
popf
sbb
xor
dec
shll
flds
push
xchg
fidivs
cli
push
fsubs
push
pop
jbe
mov
in
lods
rcl
add
push
outsb
cmp
cmp
push
dec
mov
scas
cld
add
rorb
jl
pop
push
mov
xor
and
xchg
popf
pop
pushf
rcrb
clc
sar
das
icebp
pop
xlat
jle
shl
les
insb
test
mov
mov
jge
cmpsl
push
test
sahf
loopne
ljmp
mov
sbb
shll
or
mov
adc
and
push
cli
iret
ret
push
lea
push
and
out
cmpsl
shrl
fldenv
dec
jns
test
repz
adc
sbb
xchg
sbb
nop
xchg
push
xor
adc
sahf
fsubp
mov
fists
lods
jmp
add
cltd
test
aas
std
xchg
cmp
inc
sarb
movb
adc
pusha
and
lret
push
lret
lds
enter
or
pop
pop
addr16
std
cmp
xor
pop
std
adc
repz
scas
imul
mov
popa
iret
jg
or
iret
daa
inc
xchg
sub
out
cwtl
xor
xchg
das
jle
mov
fisttpl
nop
jle
xor
xor
add
lods
lret
xchg
iret
pop
push
and
movsl
xor
and
fstpt
push
adc
and
fs
xor
stos
imul
repnz
jmp
into
push
fcomi
inc
gs
or
in
add
adc
dec
xchg
sbb
adc
push
ds
sub
adc
pop
adc
xor
pop
ficomps
or
or
shlb
lret
or
sub
pop
pop
pop
mov
sub
xor
rol
jecxz
out
addl
aaa
in
xor
icebp
insl
faddl
inc
sub
push
cmp
loopne
jp
in
pop
std
mov
rclb
jo
push
or
and
rclb
lahf
fsts
int3
push
lahf
loopne
pop
test
test
jl
sbb
mov
call
cli
xchg
loopne
fistpl
cmp
pusha
xor
sbb
push
les
adc
inc
jno
mov
sahf
enter
add
scas
push
insl
fsubrl
pop
scas
loop
pop
cmpsb
mov
test
fldt
mov
push
fbld
pop
pop
mov
jno
aad
jbe
push
scas
test
popa
mov
cmp
imul
sub
push
mov
pop
fldl
or
fstp
pop
cli
mov
or
cmpl
xor
out
leave
mov
xchg
out
orl
adc
daa
loop
pop
fisubrl
mov
jmp
inc
mov
lods
adc
inc
adc
cli
cli
les
fstps
push
jecxz
jns
test
out
loopne
jecxz
jle
jo
loop
mov
push
fwait
scas
std
sbbb
mov
lods
mov
inc
pop
fstl
cmpsl
mov
icebp
aad
fs
xor
sub
and
mov
mull
stos
cmc
pop
outsb
add
add
xorl
aad
subl
mov
cld
imul
hlt
xlat
out
iret
mov
mov
cltd
mov
cmc
xchg
adc
adc
call
enter
test
and
cmpsl
test
fldenv
jg
and
add
dec
int
push
mov
or
cli
rolb
mov
mov
xor
mov
jge
or
jmp
movb
js
insb
dec
sbb
xorl
in
ds
mov
icebp
in
rolb
iret
das
out
addr16
pop
jnp
clc
test
pushf
cmpb
rol
in
nop
xorl
push
je
adc
sub
shr
rcll
add
imul
or
das
adc
iret
xor
repz
rcll
lret
repz
aas
out
rolb
add
jge
mov
inc
notl
xchg
cmp
pusha
pop
into
fcomps
pushf
push
ss
ret
insl
jmp
ja
rcl
mov
mov
mov
or
loopne
mov
pop
aas
and
bound
jns
lahf
jl
ffreep
mov
out
add
cmp
add
sbb
outsb
jo
mov
pop
es
push
nop
lds
mov
cltd
mov
add
hlt
lahf
add
loopne
xchg
in
pushf
mov
xor
sbb
out
mov
add
push
lock
sub
sub
in
adc
sar
jmp
mov
fst
xor
cmp
sub
inc
and
jge
lret
sub
sub
xor
mov
cmp
mov
lds
scas
ret
lods
dec
idivb
push
std
subb
iret
lret
int3
sbb
pusha
mov
loop
adc
daa
adc
rcll
fs
pushf
or
sub
ja
popf
inc
push
imul
mov
nop
in
mov
testb
sub
pushf
xchg
imul
mov
jb
adc
repnz
xchg
mov
fidivrs
das
ljmp
jp
inc
pusha
vpshufhw
jg
xor
in
add
stc
ret
and
jnp
and
arpl
mov
das
rorb
push
mov
or
fidivl
or
push
aaa
jmp
mov
push
mov
adc
sbb
popf
stos
aam
lcall
or
lock
and
jl
dec
pop
jl
pop
cld
push
push
fwait
shl
fwait
cmpsl
ja
cmpsb
sti
stos
jns,pn
push
adc
bound
jnp
rorb
adc
scas
adc
js
dec
in
mov
hlt
push
xor
movsb
das
ljmp
adc
xchg
movsb
pop
jae
mov
pop
and
hlt
xor
mov
cmc
aaa
jecxz
or
ret
inc
stc
enter
sub
jmp
js
or
gs
jnp
push
mov
sub
ljmp
dec
push
in
mov
jp
jl
iret
jp
dec
sbb
xor
stc
push
dec
ss
popa
dec
scas
aas
push
jbe
test
xor
negl
les
pop
test
pop
dec
and
sti
inc
into
pop
in
ret
cmp
mov
aam
dec
test
push
sub
mov
mov
in
mov
aas
mov
pushf
into
xchg
call
lret
out
mov
sbb
or
jmp
cwtl
mov
aaa
and
jge
cmp
std
add
mov
in
mov
fdivp
and
cwtl
or
jmp
xor
sub
andl
push
mov
in
mov
lea
or
js
rorb
lea
and
orb
inc
test
andb
sub
sbb
pusha
cs
mov
mov
cmp
mov
fdivp
mov
lock
cmp
ret
cmp
xor
sbbb
and
jbe
push
push
daa
int3
fldcw
cmp
jne
cwtl
sub
in
std
les
cli
jo
loopne
mov
inc
cmp
test
lods
fwait
xchg
sbb
out
data16
adc
mov
mov
stos
enter
js
jno
scas
call
dec
int
jg
daa
dec
dec
popf
sahf
ss
and
pushf
mov
pop
mov
les
push
sbb
shll
inc
cld
mov
in
mov
inc
lods
jns
dec
jecxz
push
scas
xor
stos
or
fwait
stos
pushw
pop
dec
jl
div
repnz
adc
mov
lock
std
mov
mov
mov
xchg
xchg
clc
push
mov
outsb
clc
xchg
imul
andl
int
jns
fisttps
xchg
fstpt
pop
inc
fisubrl
or
lret
jns
movsb
add
or
jno
cs
or
dec
addb
mov
les
inc
add
fcompl
dec
icebp
sub
adc
pop
scas
cmp
fsubrl
dec
rolb
add
sbb
sarl
push
shlb
push
jb
jmp
ret
add
enter
or
outsb
cmc
test
mov
or
ja
xchg
cmp
push
pop
imul
aaa
mov
jno
mov
hlt
scas
adc
aaa
mov
mov
push
add
or
sahf
dec
std
ficompl
fldt
xchg
cs
mov
addr16
call
xor
out
and
mov
pop
mov
bound
mov
jbe
adc
jnp
das
adc
scas
xor
pop
inc
lret
mov
loopne
xor
cmp
jle
mov
ds
cmp
sbb
cmp
sbb
mov
pop
cmpsl
mov
pushl
xor
aam
hlt
negl
cmp
and
repz
add
shll
repnz
cld
add
cmp
xor
xor
and
mov
test
push
xlat
out
ljmp
xchg
xor
cmpsb
jmp
mov
repnz
call
jo
and
jmp
mov
and
cwtl
jecxz
and
mov
pop
imul
sbb
int
xor
jg,pt
push
out
mov
repnz
stos
add
je
xor
cmp
pop
pop
xchg
mov
dec
jbe
in
inc
jge
sub
xchg
push
in
and
lahf
daa
js
es
stos
xor
mov
mov
stos
negl
or
iret
push
xchg
je
lret
test
dec
leave
sub
dec
cltd
hlt
xchg
stc
sub
xor
movl
stos
in
cmp
rclb
dec
and
mov
jp
test
xchg
push
add
hlt
lods
iret
stos
xchg
js
adc
xchg
ljmp
std
and
jle
repnz
lods
pusha
xor
and
mov
add
lds
and
inc
lret
ss
popf
inc
lods
movsb
hlt
test
sarl
cs
mov
andb
mov
push
xchg
test
pop
imul
cmp
jo
in
lea
and
test
movsb
xchg
pop
adc
out
dec
jl
and
sar
jl
lcall
jp
dec
aas
mov
divl
push
test
faddp
dec
loopne
jp
xchg
sub
shll
js
aaa
inc
fstp
std
fstp
dec
add
cmp
xchg
jns
aam
out
jbe
xchg
jmp
sbb
mov
sub
mov
fcompl
adc
dec
xchg
mov
out
push
dec
movsb
push
leave
inc
leave
test
dec
lds
jmp
stos
popf
je
add
in
movsl
push
cmp
repz
lret
mov
jle
mov
pop
mov
mov
add
cmp
cwtl
movsl
jns
fwait
sarb
loopne
jle
mov
or
jne
call
xor
push
jne
xchg
xor
dec
mov
faddl
mov
sub
into
iret
ror
pop
mov
inc
add
or
je
pop
xchg
insl
xchg
inc
arpl
xchg
inc
push
or
inc
outsb
das
adc
flds
push
cmp
sbb
pop
sub
out
lahf
push
adc
jge
inc
loopne
iret
dec
or
hlt
repnz
insb
push
pop
mov
aas
mov
lret
lcall
les
adc
pusha
xor
pop
jb
xchg
xchg
stos
cmp
add
jns
mov
arpl
ja
pop
cli
jp
sahf
jbe
jp
stc
nop
sahf
and
out
les
add
xchg
sbb
insl
xlat
jbe
xor
lock
gs
cmp
add
sub
sub
icebp
mov
inc
jle
mov
mov
outsb
lock
pop
xor
jo
jbe
pop
std
outsl
cltd
dec
std
outsl
xchg
sub
adc
mov
test
and
push
test
mov
aaa
push
stos
dec
lcall
nop
das
int
cmp
aam
clc
mov
jle
addr16
mov
lahf
mov
stc
jno
inc
push
push
mov
out
xor
pop
or
mov
mov
out
ss
push
or
push
gs
push
cmpsl
mov
loope
xchg
popf
push
aam
lcall
jnp
adc
ds
push
adc
dec
fsts
mov
dec
pop
xor
cmp
mov
lods
xchg
loop
lods
js
bound
mov
pusha
jb
push
out
jbe
jns
inc
sahf
jbe
inc
pop
mov
test
mov
mov
xchg
ds
cmpsb
add
out
pop
scas
frndint
sbb
pop
adc
aas
stos
push
push
addr16
and
push
adc
inc
clc
std
sahf
test
add
jmp
lahf
dec
push
fs
lret
frstor
insl
adc
dec
pop
sbb
repz
testb
aaa
sbb
les
jo
push
cmpsl
pushf
aad
insb
int
imul
jae
sbb
out
cmp
stc
fmulp
shlb
clc
jb
sar
cmpsl
into
mov
mov
cmp
sbb
fcmovne
stc
pop
or
mov
lods
and
incb
push
jno
into
call
insb
aaa
je
push
push
fnstcw
aad
scas
sbb
sub
dec
cld
fwait
mov
mov
xor
sub
out
pop
dec
int3
or
ret
repz
sub
push
mov
push
push
xchg
push
push
popa
loopne
dec
out
add
pop
jmp
push
andb
inc
popf
and
repnz
stos
lahf
imul
movsb
add
add
xor
xor
push
or
out
int
filds
movsl
xchg
clc
xchg
dec
push
pop
cmp
out
ja
call
pop
push
mov
jb
scas
pop
inc
aam
lret
xor
je
mov
adc
shr
jle
ja
cmp
and
pop
mov
xor
mov
cld
out
xor
leave
mov
xchg
es
aaa
stos
je
xor
pop
in
arpl
outsb
pop
jl
lret
sarb
fwait
sarb
lods
push
popl
push
add
out
dec
xor
cmpsl
mov
dec
pop
ss
mov
jl
pop
pop
addr16
imul
gs
pushf
mov
hlt
jg
test
jl
js
mov
mov
sub
sbb
xor
scas
pop
fstpt
aaa
roll
jecxz
int3
out
test
pop
xlat
int
mov
push
pop
pop
cmpsb
aam
push
adc
je,pn
cmp
movsb
jnp
inc
dec
xchg
xchg
ficomps
pop
xchg
cli
mov
jns
xchg
jns
xor
sbb
adc
idivb
shr
and
sub
and
xlat
les
and
sbb
xchg
in
inc
notl
addr16
stc
pop
dec
mov
adc
push
ja
dec
clc
rcll
sbb
push
mov
xchg
in
fs
or
or
stc
in
mov
cld
mov
ret
adc
xor
xlat
sub
roll
cmp
xchg
pop
inc
lods
cmpsl
lds
cmp
sbb
bound
xor
iret
pop
cmp
push
repz
lds
in
sbb
inc
jl
dec
mov
sahf
leave
jmp
mov
sbb
aaa
ljmp
out
divb
out
xor
push
iret
stos
insl
add
sub
fistl
into
in
sbb
push
xchg
add
or
jbe
fsubp
stos
std
dec
lahf
andl
outsb
insb
cmp
stos
mov
inc
shl
in
ss
jo
mov
push
dec
sub
push
adcb
jge
xor
sahf
xor
push
orl
push
lock
and
loopne
pop
jmp
repnz
mov
push
push
frstor
shrl
call
dec
loopne
mov
xlat
add
cmp
or
cmp
mov
push
lock
or
out
into
sub
and
cmc
int
imul
outsl
sub
xchg
push
sti
repnz
fcomps
movsl
lahf
out
jl
icebp
imul
outsl
xor
jge
movsl
push
scas
je
xchg
mul
cmpsb
pop
sub
ja
cmc
cmpb
call
mov
shrl
xor
jge
adc
jns
jo
push
pop
shlb
fcomip
cld
sub
cld
ds
sbb
in
mov
jge
pushf
aas
xor
pop
push
mov
fwait
inc
jl
lcall
add
push
pop
lahf
cli
ret
ret
cwtl
andl
lahf
push
xchg
rcl
push
push
inc
jno
js
jle
mov
lahf
popf
ja
repz
pusha
cli
cld
push
xor
test
stos
xor
movsb
rep
push
rolb
jl
jmp
sbb
cmp
and
ljmp
gs
lock
xor
js
dec
adc
stos
mov
enter
mov
sub
std
mov
xchg
sub
pop
push
setp
inc
dec
jae
addr16
xchg
sahf
pop
popfw
std
sbb
xor
sahf
jb
int
and
ds
fdiv
pop
mov
mov
incl
daa
inc
sti
in
fsubr
idivb
mov
js
js
push
xor
jg
lock
mov
nop
enter
mov
pop
add
decl
jge
lret
fnstenv
loope
mov
jo
pop
jle
repz
loope
repnz
aam
hlt
dec
pop
xchg
hlt
add
clc
or
inc
movsb
jl
ljmp
sbb
pop
pop
and
das
aad
lahf
push
sbb
movntq
out
ljmp
repz
sar
arpl
repz
pop
cld
sar
lahf
stc
push
ja
out
mov
negb
xchg
mov
mov
test
or
fidivs
lahf
ficoms
push
jb
popf
addl
dec
sub
inc
imul
decb
clc
popa
iret
aaa
out
cwtl
dec
ficompl
mov
decb
mov
push
mov
lock
xor
adcl
xchg
push
sub
std
pop
mov
jno
mov
add
sbb
xchg
mov
inc
shll
xchg
mov
shrl
pop
sbb
leave
push
and
mov
pusha
ss
xchg
mov
pop
sub
loopne
pop
and
jl
or
inc
dec
mov
clc
mov
ss
push
loope
stc
pop
cmp
lahf
cmpsb
mov
mov
lahf
pop
in
jge
leave
insb
fcomps
xchg
popa
leave
mov
mov
addr16
adc
aam
sbb
mov
repz
mov
push
mov
outsb
add
testb
sbb
iret
push
mov
sub
and
mov
inc
inc
push
movswl
ffreep
xchg
pushf
imul
mov
hlt
outsb
mov
repnz
test
sbb
cld
cmp
in
fisubl
int
test
mov
punpcklbw
sub
mov
xor
mov
cmc
std
rcll
pop
aaa
push
mov
sbb
sti
sub
xor
sub
dec
sbb
cli
rcl
push
ja
fsubl
ret
popf
sub
dec
fwait
call
pop
mov
out
xchg
aaa
dec
xchg
add
mov
sbb
dec
dec
shlb
in
jne
insl
and
mov
pop
xor
lods
sub
xlat
fs
pop
or
loope
adc
sti
and
in
mov
scas
inc
rol
lock
in
jb
loopne
sbb
mov
and
dec
mov
add
test
inc
hlt
push
pop
add
fldl
dec
stos
xchg
cmp
in
sbb
je
push
aam
jb
inc
mov
fwait
jecxz
loop
mov
jnp
pop
mov
jecxz
xor
xchg
out
scas
ret
jecxz
js
jo
mov
idiv
push
inc
ja
adc
push
popa
pushf
iret
sbb
aad
pop
out
mov
subb
icebp
mov
push
pop
sbb
or
dec
arpl
aas
jno
dec
stos
mov
les
pop
cmp
cmp
aaa
mov
testl
sbb
lret
jns
add
hlt
push
loop
cli
pop
jle
lods
add
ror
repz
push
mov
push
or
lahf
adc
mov
and
mov
or
cs
stc
loopne
jl
mov
mov
mov
divl
lea
push
xchg
iret
push
push
add
pushw
stc
sbb
mov
adc
and
repnz
sub
lahf
movsl
test
shlb
jns
jge
push
or
sbb
int
mov
sub
cmp
decb
mov
mov
stc
sbb
dec
mov
ds
cmp
ret
dec
mov
cwtl
jns
pop
shr
aas
or
push
dec
sub
repnz
dec
mov
idivl
insb
bound
add
add
rorl
pop
loope
xor
lahf
sbb
popa
xchg
adc
or
push
push
imul
cs
add
sub
outsl
in
div
xor
dec
and
jecxz
test
jne
sub
cs
outsl
pop
aam
loope
insb
add
jmp
cmp
xchg
into
les
ss
jo
dec
sbb
jnp
cs
dec
mov
lods
cmp
loopne
cmp
pop
stc
lahf
adc
mov
mov
lods
fldenv
decl
add
inc
mov
adcb
jg
sbb
add
push
xchg
xchg
shlb
cmp
stos
test
push
and
jle
push
call
mov
repz
cmp
pop
pop
sar
lods
js
leave
pushf
xchg
dec
adc
add
fildl
pop
insb
inc
scas
adc
mov
mov
shl
jne
mov
add
insb
std
inc
pop
adc
pushf
in
icebp
repnz
loope
std
mov
inc
bound
xchg
jmp
movsb
ja
push
xchg
xor
push
push
leave
lods
fstps
sbb
lea
lds
jg
jbe
cmp
lcall
js
mov
int3
mov
xchg
out
pop
xchg
dec
mov
js
jb
cli
cwtl
ss
negb
cmpsb
xchg
or
incl
lret
push
aaa
sub
dec
test
push
loopne
mov
xor
call
or
sub
test
outsl
xchg
sahf
sahf
xchg
adc
scas
cwtl
cmc
hlt
dec
xorl
pushf
fildll
sub
int
cltd
dec
mov
lds
cmpsb
sbb
sub
sahf
mov
data16
pushf
pusha
mov
xchg
pop
cs
shll
jns
push
xchg
mov
jbe
and
jns
orl
ja
daa
mov
sahf
das
pop
and
pop
fsubp
out
push
movsb
setle
dec
rcll
xchg
inc
outsl
ret
inc
mov
in
sahf
mov
mov
sub
insb
dec
fisttps
insb
loop
jo
push
inc
add
pop
scas
cmp
mov
ds
and
int3
or
cmp
or
shrb
leave
cmp
add
adc
int3
setg
fbld
or
mov
aad
fsts
dec
ficoml
inc
mov
outsb
cmp
adc
cltd
stc
orb
xchg
xor
jns
add
push
scas
mov
pushf
pxor
cmp
popf
adc
lds
inc
mov
sub
ljmp
push
xor
negb
push
filds
cli
scas
sbb
iret
inc
mov
repz
ret
out
add
dec
pop
popa
icebp
imul
sub
sbb
inc
or
adc
push
fcoml
fnstenv
mov
lock
test
cli
pop
mov
lock
lds
cmc
shlb
sbb
pop
jmp
and
leave
loop
loope
cmp
jb
nop
mov
jle
addr16
std
mov
cmp
or
je
jmp
and
xchg
fistpll
imul
loope
mov
mov
push
sbb
mov
jbe
push
dec
inc
push
xchg
push
icebp
stos
sbb
push
sti
icebp
dec
int3
pop
out
loope
add
jg
inc
stc
xchg
popa
lods
xor
test
inc
mov
aas
incb
add
aas
or
pop
sub
lcall
dec
mov
sbb
jnp
rolb
daa
stc
push
in
xor
repz
mov
mov
cmp
jbe
aas
out
mov
pop
jb
icebp
je
mov
mov
sbb
out
fwait
push
inc
out
and
aam
rcrl
xchg
movsb
pop
jge
mov
fcompl
sbb
pop
pop
jl
clc
pop
pushw
push
or
cmp
cmc
insl
sbb
loope
dec
push
cmc
push
out
mov
int
jge
xor
push
lods
cmp
mov
sub
cmpsb
loope
aad
cld
cmp
lahf
cmpsl
adc
int
rcl
rorb
push
or
push
js
insl
in
in
incl
lret
lret
div
and
lret
pop
andb
scas
jle
insb
stos
sub
dec
pop
adc
pop
and
adc
push
lret
pop
ds
jle
and
push
lock
mov
xchg
aam
dec
addr16
adc
mov
pop
dec
jge
pop
pop
jmp
into
jmp
fldcw
adc
mov
push
cmc
push
pop
mov
in
int
fsub
mov
divl
loope
jge
sub
in
and
cmpsb
mov
mov
jmp
jno
scas
ds
sbb
cmpsl
sub
je
loop
ret
pop
xchg
lods
divb
mov
pusha
fiaddl
adc
cwtl
xchg
rcr
leave
pop
inc
pop
jns
pop
iret
std
ret
lds
xor
pop
jecxz
xlat
xchg
pop
test
or
jl
pop
push
mov
lret
mov
pop
dec
test
jecxz
cmc
push
jecxz
fsubl
cltd
pop
cmp
pop
mov
mov
adc
cmpsl
adc
daa
cmp
pop
clc
aad
repnz
outsb
pop
jmp
repz
out
fsubr
add
xor
lock
mov
arpl
andl
push
pop
xor
mov
inc
sbb
shr
repz
std
mov
push
fistps
adc
daa
or
loopne
imul
and
sbb
in
xchg
inc
stos
jne
cs
rolb
jns
jmp
jbe
jge
fxch
xchg
test
lods
jno
outsl
shll
xchg
and
sti
fadd
je,pt
in
mov
pop
test
xchg
repnz
xor
jmp
add
mov
sti
mov
mov
and
repz
push
testl
inc
mov
push
and
or
clc
xchg
xchg
into
pushf
std
subb
addl
and
data16
bound
cmp
out
or
xlat
adc
sbb
inc
aaa
in
mov
fwait
inc
enter
inc
jbe
aaa
add
sbb
sub
cltd
jge
xor
outsl
mov
cs
hlt
mov
mov
subl
mov
jmp
pop
mov
jle
sbb
in
mov
idiv
mov
into
pop
lods
cmpsl
mov
xor
xchg
je
pop
aam
sbb
mov
inc
and
fiadds
mov
lds
icebp
xlat
push
fadd
pop
call
push
lret
pop
in
sub
repnz
into
stos
mov
mov
dec
out
nop
pop
lea
call
push
or
shl
fdivp
dec
mov
clc
mov
lcall
outsb
mov
pop
lods
jl
xchg
sub
fists
ljmp
dec
rorl
lods
sbb
pop
popa
scas
dec
insl
dec
stos
and
cld
xor
sub
aaa
mov
daa
add
mov
jle
sub
imul
hlt
dec
nop
or
shrb
shr
popf
add
repnz
fidivrs
mov
pusha
jl
lea
jnp
sub
mov
inc
xor
inc
insb
adc
xor
mov
out
mov
fnstenv
std
das
xor
adc
daa
aad
scas
fcmovnu
rclb
cs
sub
mov
mov
pop
fdiv
mov
shrd
sti
fnstenv
mov
xor
rcl
test
dec
mov
cld
add
jmp
mov
sbb
mov
dec
mov
insl
fisubrs
sarl
repz
cmp
push
xor
adc
mov
js
lea
add
leave
mov
push
sahf
adc
jns
sarl
push
hlt
gs
loope
fisubl
fcmovbe
cmp
call
cltd
fld
cmp
jns
in
ss
iretw
dec
xor
dec
mull
adc
int
lock
sti
gs
jbe
loope,pt
xlat
mov
inc
cmpsb
adc
aad
outsl
add
sbb
cmc
jno
sti
sub
roll
xchg
mov
repz
fwait
mov
ret
aas
fs
cmp
shrl
int3
jae
jmp
mov
repz
sti
xchg
iret
pop
fcompl
adc
clc
test
repz
lods
js
iret
loopne
sahf
ja
cmpsl
pusha
sahf
jnp
sahf
jg
pop
dec
and
jns
into
js
dec
xor
test
push
les
adc
inc
aaa
and
mov
sbb
loopne
xor
mov
xor
das
movd
popa
outsl
pop
add
out
stc
sub
cmp
imul
mov
loopne
mov
adc
xchg
inc
call
mov
dec
test
ljmp
jge
push
mov
stc
repz
cld
mov
cs
stc
xchg
pop
pop
repz
movsl
cmp
mov
cmp
push
popf
jnp
idiv
ja
cmpl
aaa
mov
ja
bound
cmp
push
fwait
in
data16
ss
es
mov
jecxz
pop
jns
repnz
lcall
fimull
loope
push
sti
popa
fdivs
adc
sbb
arpl
je
jns
test
dec
inc
dec
adc
repnz
pop
pusha
xchg
cmp
test
cmp
pop
cmp
fisttpl
jmp
mov
stos
subl
and
loop
sti
fucom
nop
or
adc
sub
sahf
iret
psubusw
jg
sbb
cmpsl
insl
inc
jns
call
inc
xorb
in
notl
ja
push
ja
out
inc
sbb
adc
loope
push
lea
std
add
jmp
ret
stc
popf
mull
dec
js
mov
pop
jge
push
mov
fadds
daa
mov
scas
out
push
adc
in
inc
inc
fcompl
dec
std
inc
in
push
fsubl
pushf
mov
jle
xchg
sahf
xor
mov
stc
das
sub
dec
inc
and
mov
and
jg
adc
mov
pop
fnstcw
es
xchg
cmp
inc
ret
pop
cmpb
bound
cli
mov
jns
adc
gs
or
mov
push
scas
psrlw
ret
sub
mov
mov
xchg
dec
test
cltd
cmpsl
pop
daa
jl
rcr
inc
std
stc
or
data16
pop
xchg
push
loop
pop
add
or
mov
icebp
in
jo
jno
fisubrl
xchg
in
jbe
xor
nop
fwait
pop
divl
in
gs
mov
in
in
test
pop
loopne
stc
add
pop
xchg
leave
jle
push
lods
inc
lock
or
mov
pop
shr
add
andb
or
sarl
or
and
aad
and
cmpsb
mov
push
out
insl
js
mov
xor
mov
push
adc
jg
cmpsl
and
push
movsb
cltd
cmp
mov
jl
in
ficoms
add
fnsave
data16
out
mov
call
adc
das
mov
inc
out
iret
pushf
pop
or
ljmp
mov
fnstenv
mov
xchg
jle
inc
popf
adc
mov
out
stos
test
std
sub
ret
pop
push
int
xchg
sub
cld
sbb
adc
xchg
add
fnstsw
pop
mov
hlt
adc
jns
inc
popf
pusha
or
xchg
popa
stos
jle
js
push
icebp
jge
inc
jns
inc
mov
ret
cld
dec
pusha
dec
sbb
outsl
pop
fidivs
mov
push
dec
cmp
mov
xchg
sub
into
xchg
clc
test
in
dec
sahf
into
fsub
mov
ljmp
cs
sub
sbb
sbb
ret
jle
pop
cltd
sub
xlat
add
add
pop
or
jo
test
lcall
enter
fdivl
loopne
cmp
inc
cmp
aas
int3
push
mov
pop
popf
push
xchg
pop
mov
pop
add
pop
ljmp
jmp
mov
sti
or
cmp
daa
or
pop
pushf
or
jl
or
stc
icebp
mov
adc
jae
test
pop
rcrl
push
fiadds
sub
cmp
dec
pop
ljmp
jle
stc
movsb
out
loopne
fstpt
idivb
sti
mov
sub
out
aad
push
inc
popa
sub
jae
mov
inc
stc
cmp
dec
jmp
adc
xlat
sub
test
mov
aam
sti
and
iret
xor
lcall
mov
xor
stos
in
imul
into
dec
out
lret
add
push
pop
inc
pop
insl
sbb
xchg
test
mov
adc
push
stc
mull
jne
sbb
mov
popa
cltd
or
mov
ja
and
jecxz
fiaddl
andb
inc
mov
add
clc
xchg
jnp
outsb
out
mov
xchg
inc
inc
testb
das
mov
cmc
mov
and
push
push
shrb
cltd
adc
addr16
rcl
loop
jno
fs
in
sub
sbbl
lret
mov
mov
shlb
addr16
cmp
cmp
std
inc
dec
hlt
jo
bound
jbe
lods
iret
adc
rolb
xchg
sub
mov
ds
jge
aaa
es
pop
pop
jle
std
sbb
lods
fstp
stc
int
cmp
mov
cmc
sbb
adc
and
dec
cwtl
call
movsb
xchg
add
jae
stc
rorl
jbe
add
sub
out
cmpsl
pop
test
xor
adc
add
xchg
mov
mov
scas
sbb
call
test
sub
outsb
ja
into
inc
fwait
or
cmp
pop
rcrl
adc
out
dec
jg
or
xchg
ficoml
call
cmp
mov
pop
fisttpl
sti
push
in
xlat
push
std
adc
scas
ret
push
mov
addr16
aas
aad
xor
dec
push
popf
clc
pop
pop
daa
cmp
out
inc
shlb
pushf
insl
inc
mov
andb
loop
mov
mov
jo
mov
pop
es
jecxz,pt
scas
and
mov
lahf
mov
and
mov
mov
cmpb
adc
fcom
cltd
lock
loopne
sbb
iret
cs
xchg
ljmp
cmpsl
mov
and
mov
push
inc
pop
daa
pop
and
adc
push
js
arpl
pop
inc
outsb
sahf
ficomps
dec
inc
pop
stos
adc
cmp
push
mov
mov
fisubrl
or
and
inc
mov
and
cmp
sub
mov
sti
push
enter
pop
icebp
xchg
icebp
adc
pop
fmul
rcrb
out
mov
push
mov
les
adc
sub
mov
test
cwtl
xchg
mov
stos
dec
loopne
cmp
ja
add
repz
fisubrs
rcll
mov
mov
negl
cld
fildll
and
jl
addr16
jb
push
repnz
sub
ljmp
jl
jmp
jp
mov
pop
imul
cmp
mov
in
fwait
mov
and
jge
lods
std
loope
clc
and
pop
cmc
loope
in
idivb
xsavec
scas
bsr
mov
jge
iret
movsbl
bsr
pop
fistpll
aas
insl
ret
repz
out
data16
lret
dec
out
sub
mov
xor
hlt
dec
aaa
push
or
dec
push
testl
out
ret
mov
inc
out
jmp
push
push
mov
je
xlat
cmpsb
and
lds
jle
pop
pop
xchg
xor
insb
add
cmpsb
leave
jb
push
pxor
inc
xchg
hlt
les
cmp
ret
arpl
cmp
out
lods
imul
int
add
xlat
out
jl
outsb
test
cmc
fistpll
loop
fimuls
sbbl
add
mov
rcrl
cmc
jp
jle
outsl
jns
cmp
les
cld
xchg
push
inc
add
xchg
dec
mov
lret
or
out
jge
int3
stos
mov
mov
ds
add
xchg
aam
cmp
call
call
pop
lea
dec
arpl
loope
lahf
sbb
ficoml
cltd
popa
mov
mov
mov
mov
in
dec
pop
ret
leave
pop
pop
orl
inc
sar
sub
fs
aad
add
js
xchg
cmp
cmp
add
cmpsl
scas
and
jb
bound
cmpsb
rorl
cmpsb
dec
mov
cmovnp
or
std
sbb
int
adc
sub
rcl
pop
sarl
iret
loope
fsubs
dec
cmpb
jecxz
std
aaa
scas
jmp
leave
inc
xchg
out
repnz
int3
in
jge
sub
insl
cmp
dec
pop
push
sbb
cld
sbb
lods
push
loopne
lea
inc
loop
out
push
jg
shlb
andb
sti
cmpsl
jno
testb
aaa
movsb
adc
pop
jno
jle
fstps
mov
mov
push
sub
push
dec
sub
adc
adc
mov
mov
jno
call
pop
adc
add
and
mov
cmp
in
lahf
push
mov
push
lahf
or
add
inc
les
xchg
rcr
mov
pop
dec
push
jae
iret
sub
ljmp
xchg
mov
lcall
cltd
cmpsl
mov
pop
jp
int
addr16
jno
les
mov
cmp
jno
sahf
mov
cmp
aas
jg
mov
mov
lods
fstpt
sbb
mov
iret
fiaddl
or
aad
std
clc
jl
mov
xor
enter
pushf
stc
jbe
lcall
ds
sbb
add
xchg
add
sbb
mov
psubusw
adc
sub
dec
cmp
in
aaa
bound
jbe
mov
sub
xlat
inc
cmc
sbb
xchg
adc
mov
sbb
mov
mov
sbb
push
dec
cmpsl
mov
mov
stos
aad
into
cmpsl
mov
pushw
jb
out
xchg
fwait
lcall
imul
imul
in
pop
cmpb
fidivrs
sub
fisubs
in
jg
jp
and
mov
xchg
lahf
sub
adc
jns
cmp
into
cmpsb
and
mov
shll
negb
mov
std
out
pop
fmull
sbb
rcrb
popf
mov
out
adc
pop
cmc
dec
imul
pusha
sub
out
adc
jns
es
sbb
popa
mov
and
mov
inc
lcall
addr16
mov
cli
push
pop
cmp
pushf
jae
push
stos
xchg
ret
jl
jmp
push
out
ret
imull
cmpsb
insb
jmp
mov
adc
loope
lret
dec
ja
jne
push
dec
rcr
fcompl
aaa
push
std
jmp
int3
insl
addr16
popf
data16
jecxz
fstp
cmp
ds
imul
cmp
or
mov
mov
mov
jp
bound
cmp
inc
add
stos
orl
ja
in
call
mov
pop
gs
js
movsl
paddsw
ljmp
cmp
push
repnz
mov
lods
repnz
fcmovbe
cmp
in
and
repnz
lcall
test
movsb
mov
add
push
sar
sbb
loopne
xchg
push
addr16
ret
sub
dec
fdivrp
imul
or
repz
gs
jns
jb
sahf
gs
gs
pop
fsubl
cmp
sub
cltd
aas
sbb
pusha
dec
sub
loope
mov
cmp
xchg
push
dec
lcall
sbb
incb
aam
jecxz
fistps
cmpl
pop
cs
jecxz
dec
add
cs
fldenv
dec
out
loope
fstl
inc
notb
imul
insl
push
xor
xor
or
mov
pop
jmp
jecxz
pop
push
mov
push
mov
push
pop
pushf
int3
fmull
adc
mov
dec
mov
xchg
cmp
pop
daa
mov
push
addr16
inc
loopne
inc
mov
add
xchg
push
data16
outsb
jo
insb
ss
inc
mov
lods
fmulp
xchg
xchg
jp
mov
subb
mov
mov
popa
std
imul
sti
xlat
pop
push
clc
sarb
cmc
mov
pushl
cmc
shlb
xlat
dec
sub
dec
outsl
in
xchg
clc
mov
mov
out
enter
pushf
out
pusha
mov
pop
int3
cmp
movsb
xchg
test
das
test
pop
mov
test
data16
je
insb
pop
pop
dec
lcall
xor
dec
cmp
mov
sahf
mov
ss
pop
sahf
outsb
xchg
loop
pop
addr16
fwait
aad
mov
enter
mov
rclb
add
jmp
sbb
iret
jns,pt
xor
mov
inc
neg
or
lahf
mov
mov
loop
fisubrs
jp
jmp
or
movsb
push
xor
xchg
dec
or
xchg
aaa
addr16
push
pop
jge
es
pop
cmpsb
lods
cmp
jo
into
cmpsl
jae
cli
sti
lcall
inc
mov
scas
jg
and
mov
xchg
mov
dec
lret
test
inc
into
sbb
inc
ret
push
pop
es
bound
push
mov
rorl
add
nop
bound
fsub
in
dec
out
xor
int
inc
xor
popf
cmpsl
mov
pop
mov
push
lret
push
or
xorl
loop
sbb
loopne
pop
repz
movsl
cmp
leave
or
cltd
arpl
imul
ds
ret
frstor
add
inc
pushf
cli
sti
or
adc
outsl
dec
pop
jecxz
rcll
jns
sbb
lret
inc
mov
nop
stc
cld
sbb
xchg
std
inc
xchg
mov
lahf
hlt
out
cmp
mov
test
cmp
scas
jno
push
out
xchg
or
dec
aad
loope
aad
xor
imul
pop
lods
pop
sub
out
fwait
lea
mov
dec
fidivl
adc
repnz
adc
jne
outsb
sbb
and
jmp
mov
int
pop
fdivs
pop
push
out
xor
cmp
je
negb
ljmp
mov
test
imul
jmp
xor
pop
cs
imul
pop
inc
stos
push
lods
cmp
jo
push
test
dec
in
es
rclb
push
negl
fwait
addl
and
add
ds
sub
xchg
pop
lods
rolb
inc
lret
lods
jg
test
inc
data16
inc
add
push
lret
inc
sub
lods
add
out
mov
jle
stos
lret
mov
fsubrl
andb
push
cmc
xor
push
out
int
mov
lahf
xchg
add
push
ja
mov
mov
and
ret
pop
cmpb
lcall
outsl
jmp
xchg
and
decl
xchg
cmp
mov
out
lods
cmp
enter
and
jle
pminub
scas
push
push
jp
add
test
cmp
decb
jo
push
fsubrl
call
lahf
and
mov
stos
and
outsl
scas
int3
inc
mov
inc
rolb
sbb
lods
dec
cmp
jp
dec
mov
push
pop
sbb
shr
fs
stc
out
fcompl
dec
mov
mov
rolb
fs
pop
add
fildll
int3
cli
mov
jecxz
decl
int
mov
inc
popa
jbe
ror
arpl
jg
mov
repnz
mov
pop
inc
inc
pop
and
push
pop
push
xchg
push
roll
fnstenv
mov
mov
iret
mov
pop
jecxz
and
loopne
out
cmp
jno
decb
aad
cmp
add
leave
sbb
adc
jo
xor
mov
cmpsb
xor
stc
scas
inc
scas
flds
cmpsb
and
or
into
iret
shr
lds
mov
mov
mov
js
mov
mov
lods
or
sub
cli
cmp
jecxz
in
sar
pushf
imul
lahf
cmp
mov
hlt
pop
push
into
loope
roll
push
or
mov
adcl
lods
dec
stos
jns
dec
lock
dec
push
movb
sar
and
loope
aaa
pop
cmpsb
sti
scas
in
dec
out
orl
xchg
pop
mov
pop
mov
mov
outsb
mov
std
iret
or
xorb
repnz
add
fdivrl
cwtl
clc
and
mov
rorl
mov
jo
subl
dec
inc
popa
hlt
mov
pop
mov
iret
push
mov
mov
mov
inc
sbb
ret
push
mov
sarb
lret
adc
in
jg
push
cmp
or
pushf
subl
xchg
add
xchg
mov
pop
sti
mov
cmp
jbe
cmp
cmp
fdivp
add
shll
dec
add
jno
dec
add
outsl
dec
push
daa
subb
rolb
rorb
jmp
test
scas
mov
xchg
cmp
roll
daa
and
sbb
xor
jbe
pop
jecxz
xlat
cmpb
icebp
sbb
aam
int
fstps
jns
jmp
repz
out
ja
sti
cmp
rcrl
sub
call
push
dec
pop
xchg
orl
inc
stos
sub
mov
test
dec
push
addr16
jp
adc
mov
jo
jnp
adc
out
pop
inc
lock
loope
jb
dec
adc
dec
cmpsl
inc
sbb
fcoms
mov
mov
sbb
dec
fcoml
fdivs
xlat
lea
shll
pop
mov
int3
inc
inc
push
hlt
cltd
cmpsb
mov
and
sbb
xor
jg
test
cmp
push
rcrb
add
or
inc
xchg
and
adc
xchg
lret
loop
fsubrl
mov
daa
xor
xorl
mov
xor
mov
out
sub
sysret
fdivrl
loope
xchg
inc
sarl
fimull
adc
stc
cmpsl
mov
pop
sbb
imul
push
cli
mov
dec
mov
insb
data16
adc
add
rorb
repnz
ds
xchg
pop
pop
add
stc
mov
test
and
jecxz
xchg
xchg
mov
sbb
jmp
push
lcall
push
popf
cmp
loop
sbb
gs
xor
out
lcall
vandps
ja
lcall
ljmp
imul
aaa
in
adc
test
test
xchg
scas
or
outsb
adc
aas
pop
adc
enter
jle
cld
adcb
popf
mov
push
push
mov
pop
repnz
in
xor
stos
and
pop
out
adc
mov
daa
mov
cmp
outsb
mov
pop
mov
xor
pop
fwait
lock
pop
dec
in
and
cmp
xchg
or
icebp
or
mov
fwait
repnz
mov
push
or
dec
add
fcmovu
stos
lds
dec
fcmovne
mov
or
add
imul
inc
imul
add
in
xor
pop
mov
pop
aaa
xchg
in
push
mov
push
std
pcmpeqd
push
fsubl
cmp
jno
test
xchg
stos
popf
imul
aad
aam
dec
mov
inc
stc
popf
ret
dec
hlt
jnp
jg
bnd
cmpsb
adc
add
xor
shr
mov
pop
cmp
mov
lret
xchg
cltd
cld
cld
sub
and
jmp
ss
subl
xchg
shll
notb
les
mov
mov
lcall
jo
adc
out
xor
pop
dec
sti
sti
xor
enter
jnp
ret
mov
sahf
sbbl
fsubs
in
cmp
js
push
ret
push
fsubs
cmp
notl
push
std
sbb
aaa
pop
push
sub
push
sbb
sbb
dec
sub
inc
sahf
in
xchg
fisttps
mov
repnz
sub
lret
lea
out
mov
test
push
xchg
xchg
xor
incb
adc
shlb
testl
scas
cmp
and
in
jo
jnp
in
xchg
clc
sub
mov
arpl
dec
and
jmp
pop
push
and
loope
aam
cmp
dec
in
push
mov
mov
shll
and
push
push
mov
pop
jns
push
sub
leave
out
pop
push
fwait
add
jb
jl
or
sti
jo
inc
jl
mov
repz
pmaddwd
lcall
in
test
enter
pop
xlat
pushf
rolb
or
lea
sbb
in
xlat
sbb
push
push
sahf
mov
inc
and
inc
outsb
sar
decb
add
bound
jns
cli
lahf
or
mov
daa
jb
imul
sub
xchg
jp
stc
fnstenv
and
jo
mov
jns
popf
add
ret
push
neg
jb
pop
push
jno
xor
jp
imull
test
lret
dec
not
je
fadd
mov
bound
adc
fstpt
add
sbb
ss
push
imul
mov
outsb
or
jbe
jne
jmp
sbb
jg
dec
pop
ds
test
sbb
cmp
cli
fcmovbe
outsl
ds
mov
jecxz
jbe
push
or
push
pop
shrl
lds
adc
int3
adc
mov
loope
sub
aam
repnz
int3
shll
jmp
mov
cmp
jbe
mov
add
jle
leave
popf
stos
jecxz
test
dec
scas
ret
mov
xchg
and
ss
movsb
cmp
in
imul
leave
sbb
inc
jmp
and
lcall
cmpsb
sub
icebp
dec
fidivs
and
and
in
add
mov
lock
sbb
shl
imul
add
mov
fimuls
js
ss
loope
icebp
imul
aad
jns
leave
cmpb
orl
push
test
xor
pop
inc
inc
scas
xchg
add
ja
outsb
and
sub
aam
xorl
faddl
sbb
gs
mov
and
cmp
into
cmpsl
push
inc
xor
push
jbe
into
jbe
loopne
push
dec
enter
imul
fs
dec
cmc
into
mov
mov
rorl
adc
shll
cmpsl
xchg
cltd
mov
sub
aaa
xor
rorb
xlat
mov
shrl
sahf
add
adc
fisubrs
lds
mov
push
out
cmpsb
movsl
jl
mov
ljmp
push
fdivs
in
or
ret
push
sub
xlat
push
dec
xor
es
mov
pop
ljmp
icebp
cs
pop
lock
shlb
mov
lods
daa
sub
add
inc
int3
xchg
loopne
xor
fimull
sub
sub
mov
sbb
mov
and
sub
inc
sub
mov
dec
shlb
imul
push
inc
inc
ficompl
push
mov
mov
int3
out
jg
ja
divb
fistpll
enter
cltd
in
jne
bound
or
jmp
shrl
jecxz
gs
fwait
inc
test
frstor
outsl
xchg
xchg
adc
jecxz
dec
ret
mov
fsubp
dec
fnstenv
pop
push
into
aas
cmp
scas
out
mov
inc
adc
mov
std
cmp
stc
insl
xchg
cli
mov
das
dec
movsb
jns
mov
dec
fisubs
add
lahf
jbe
fisttps
das
mov
pop
movsl
fsubrp
cs
push
inc
mov
cmp
icebp
repnz
jae
and
jns
nop
inc
lahf
pop
jns
push
in
xor
mov
outsb
pop
inc
aaa
dec
adc
push
shl
mov
or
in
xor
ja
lock
in
out
mov
pop
add
mov
insb
sub
test
jmp
mov
jae
jl
lods
hlt
xchg
cwtl
shl
adc
or
sarb
ds
aas
scas
ret
add
xlat
xchg
jnp
pop
stc
ret
and
mov
sti
fistl
repz
mov
aam
data16
cli
or
lods
push
pxor
cmp
jae
push
pop
xchg
jp
xor
mov
pop
aad
in
bound
add
dec
and
ret
fsubrp
sti
pop
call
test
stc
ds
std
jmp
sub
hlt
stc
jecxz
decb
insb
ret
lret
pop
inc
out
std
stos
push
lods
sub
in
les
in
movsb
loope
jl
xchg
daa
mov
dec
xor
xchg
push
fstps
xor
jae
pop
pop
ret
sub
push
adc
sbb
and
pop
out
pop
ljmp
sarb
push
sbb
lock
dec
sub
adc
es
mov
jmp
jne
lahf
ja
jno
jl
in
xchg
jo
jne
adc
cwtl
mov
cld
push
add
aaa
outsb
pop
or
pop
inc
in
repz
jecxz
push
jle
xchg
xchg
decb
mov
fidivl
inc
nop
jbe
pusha
inc
dec
lock
lret
int
data16
daa
and
jae
subb
xchg
sahf
jb
or
ss
push
popf
lds
test
ja
nop
mov
dec
sub
cmpsb
and
repnz
jae
jp
shlb
sti
jns
jae
inc
sbb
mov
les
scas
or
movsl
clc
aaa
pop
mov
inc
mov
mov
lock
xchg
mov
xor
testb
mov
gs
out
cmpsl
std
jo
jle
xor
ffreep
outsl
cmc
shlb
stc
cmp
inc
mov
add
pop
leave
pop
js
jp
shlb
shrl
add
test
repz
roll
adc
cmpsl
test
jae
push
popa
rolb
dec
mov
cwtl
sahf
mov
dec
insl
or
adc
lock
jmp
out
pop
push
jg
iret
jle
cli
into
rolb
add
stos
or
pushl
jg
cmc
mov
fstps
mov
mov
iret
rcrb
mov
mov
jp
push
jp
das
fsub
popl
and
out
sub
pop
cmp
mov
jae
jge
insb
outsb
sti
sti
pop
movsl
lods
les
sub
mov
or
jae
sub
cmc
jmp
lea
pop
fcomps
pop
or
jl
and
jne
mov
std
lret
adc
cmpsl
sbb
or
in
fiadds
out
lret
pusha
iret
inc
out
mov
jbe
mov
hlt
pop
inc
stos
pop
inc
rol
jg
push
aas
ret
jo
cmc
sub
mov
pop
aas
mov
pop
daa
test
xor
ss
and
enter
dec
cmp
fsub
testl
mov
adc
cli
mulb
in
or
in
sub
pop
das
addl
jle
sbb
imul
je
imul
dec
lret
scas
xorl
lock
out
cmpsb
and
pop
fiaddl
out
sbb
incb
jl
push
stos
fwait
js
xchg
add
enter
jae
add
call
pop
scas
test
scas
inc
imul
mov
jmp
mov
mov
sub
in
rcrb
mov
mov
mov
lea
push
arpl
test
testb
cld
ret
xchg
repz
nop
data16
stos
push
mov
xor
push
pop
iret
gs
rcl
cmpsb
dec
dec
push
aam
movl
shl
cmp
jno
ficomps
sbb
fwait
jge
push
push
push
inc
idivl
or
xor
out
rcll
out
outsb
fpatan
popf
sbb
sahf
cwtl
mov
sbb
xor
filds
jno
sbb
aad
ja
pop
flds
jmp
cmp
loopne
add
sub
je
add
add
mov
pusha
leave
jbe
adc
pop
dec
and
xor
aaa
inc
orb
clc
mov
pop
jbe
push
push
mov
and
jge
pushf
ret
mov
jg
pmaxsw
aaa
stos
and
scas
cli
mov
or
mov
cmp
or
xchg
arpl
sbb
sub
incl
std
loopne
mul
cmp
enter
dec
dec
sbb
icebp
icebp
inc
or
dec
jmp
out
push
pop
fucomip
lret
hlt
mov
ds
inc
in
and
pop
lock
and
xlat
popf
push
iret
outsl
mov
jle
das
inc
shl
add
je
jl
adc
insb
stos
ficoml
enter
stc
out
ja
and
jecxz
push
lahf
cmp
sbb
lods
xor
jb
pop
push
shll
aad
jno
add
and
fdivrl
mov
pop
xchg
leave
lcall
pusha
mov
mov
and
inc
popa
stc
xorb
inc
lahf
dec
jne
insb
or
pop
jg
jecxz
sbb
xchg
mov
es
cmp
sarl
sti
gs
push
lret
rorb
mov
loope
shlb
insl
sbb
mov
cmpl
outsl
pop
mov
or
and
addr16
fcmovnu
rcr
loop
into
les
loope
ret
jmp
dec
dec
push
flds
es
jle
and
push
aam
insl
mov
jo
int3
xor
mov
jmp
jge
push
inc
shrl
sub
dec
out
jge
xor
fwait
mov
repz
loop
cwtl
nop
cmc
ret
push
aam
enter
mov
inc
jo
mov
xchg
jo
cmp
stos
aas
int3
pop
pop
push
into
sti
fisttpll
ret
xchg
jmp
mov
scas
daa
out
das
test
add
pop
sub
mov
push
pop
mov
pop
subb
mov
lea
push
or
loope
loope
in
mov
dec
xlat
jge
jno
sbb
iret
loope
jl
pop
sub
mov
jns
mov
ss
jg
mov
xchg
pop
push
and
mov
jg
jae
push
das
jns
js
push
fistpll
xchg
push
fistpll
inc
aad
jb
out
push
sti
scas
pop
xor
jmp
mov
fnstsw
js
popa
andl
sbb
add
out
pop
pop
movsb
in
xchg
or
in
repz
or
and
les
push
add
jmp
lahf
insb
jbe
lods
sahf
add
scas
mov
sub
mov
cmc
fadd
pushf
fisttps
rol
ret
int
sub
jbe
aad
mov
push
mov
push
add
popa
scas
jnp
cmpsl
popf
jg
or
mov
push
push
js
dec
push
inc
mov
mov
pop
lcall
xlat
xchg
push
in
insl
and
loope
adcb
or
rcrb
aam
sbb
fdivl
es
xor
mov
add
imul
ljmp
aaa
push
ficompl
xchg
pop
sub
rorb
lods
dec
inc
fsts
test
dec
sub
or
mov
out
cwtl
les
jl
xchg
xor
mov
fsubr
fs
cli
fnsave
pop
cwtl
jns
xor
push
test
std
inc
cmc
negl
cmpl
insb
fwait
fwait
pop
pop
aad
xchg
js
mov
add
dec
push
addr16
ret
imul
addb
js
pushf
adc
lret
jmp
push
push
mov
and
cld
lahf
and
mov
pop
rclb
and
test
iret
inc
daa
sarl
sub
sarl
mov
out
sub
movsb
push
cmpsl
les
mov
cltd
stc
or
insb
insb
pop
ret
scas
lea
cmp
jecxz
loope
lcall
pop
jle
int
pop
out
cs
push
sbb
jl
mov
mov
and
ds
aam
dec
bound
jb
sbb
ja
mov
aad
xchg
imul
pusha
add
inc
filds
dec
mov
push
inc
dec
sarb
rcr
and
shrb
add
rol
push
ljmp
fcom
jno
nop
push
iret
lcall
js
jae
cmp
dec
fildl
lds
aas
cmc
cmpb
adc
add
ljmp
mov
fwait
scas
mov
pop
test
nop
lahf
aam
jae
enter
cmp
call
push
sub
inc
imul
loopne
cli
arpl
adc
or
cs
or
popa
push
rclb
xor
cwtl
push
pop
jns
out
jns
shrb
add
in
aad
outsl
mov
or
repz
inc
cld
mov
mov
sbb
test
adc
xchg
xlat
add
movnti
stos
into
cmp
inc
lock
adc
pop
dec
mov
adc
jg
sti
cmpsl
push
pop
lahf
shrb
fs
arpl
sbb
mov
pop
mov
fwait
xor
popa
in
jle
adc
loope
fcoml
dec
jp
fdivrl
mov
xor
mov
enter
or
mov
dec
rorb
mov
outsl
orl
bound
test
imul
mov
and
cs
xchg
push
push
test
int
add
hlt
nop
fmul
push
rcrb
les
test
inc
mov
mov
aaa
stos
addl
mov
aad
sbb
mov
and
cli
in
and
aad
push
mov
shrb
lret
sbb
dec
rcr
imul
enter
and
ds
pop
mov
sub
jbe
cmp
mov
adc
shlb
es
stos
add
add
mull
mov
sti
mov
fsts
pop
add
pop
test
pop
in
sbb
in
sbb
in
xor
dec
int
dec
repz
push
pop
xchg
add
roll
mov
xor
stos
movb
jmp
xor
lret
add
leave
movsl
lahf
sub
pop
and
add
cli
mov
lea
cmpsl
hlt
imul
xchg
outsb
xor
cli
pusha
xchg
push
and
adc
scas
shl
push
push
cmp
jbe
enter
in
insl
and
push
xchg
lret
adc
pop
addr16
lea
loope
cmp
jne
mov
xchg
lahf
cmpsb
inc
sub
adc
sbb
push
dec
and
mov
add
enter
lods
std
xor
xor
fsubr
scas
push
call
mov
push
loop
out
xlat
mov
push
sti
loope
divl
lahf
cmp
mov
dec
ds
icebp
adc
lods
inc
jae
lahf
inc
std
cld
add
jbe
xchg
jl
jle
pop
repnz
sahf
in
cmp
xor
frstor
or
addb
mov
push
bnd
push
mov
or
mov
jmp
mov
lahf
shlb
pop
adc
gs
out
and
fcomps
push
jne
scas
jle
testl
out
or
add
arpl
xchg
xor
out
clc
daa
xor
fisttpl
fcmovne
add
ljmp
ret
jecxz
iret
lds
jno
orb
sbb
cmpsb
inc
xlat
movsb
push
icebp
push
int3
or
add
add
es
lret
loope
or
loope
push
fcos
pop
outsb
adc
and
aaa
int3
notl
cld
mov
inc
loopne
cmp
shr
ret
inc
cld
jno
and
pusha
gs
adc
fwait
cld
pop
mov
adc
clc
inc
push
cmp
outsb
clc
xor
movsb
les
mov
pop
cmpl
cmp
mov
xor
loop
aad
jg
movsl
lods
add
push
loopne
popa
fnstsw
jmp
lret
mov
sub
out
sub
or
clc
aaa
jp,pt
aas
stos
mov
fucomip
add
in
call
std
sub
xchg
inc
aaa
hlt
adcb
shr
shll
pop
jae
sbb
mov
jl
push
imul
cmp
bound
sti
ret
xor
or
add
scas
inc
data16
addl
mov
test
push
cmp
mov
insl
mov
lret
lahf
loopne
sub
push
aam
movsb
pop
jns
fldt
or
es
lret
mov
add
js
and
xor
cmp
in
xchg
lret
out
sti
dec
enter
sub
mov
scas
outsl
cmpsl
popf
cmp
out
je
pop
add
xchg
xor
les
jne
ret
sahf
js
mov
pop
lret
mov
push
das
sub
add
out
aad
and
pop
add
icebp
add
mov
imul
cli
add
mov
dec
aad
jmp
insl
test
mov
pusha
in
jmp
repz
sbb
inc
xchg
cld
out
push
xchg
dec
xchg
hlt
mov
mov
mov
adc
ljmp
fistpl
daa
ljmp
je
push
std
out
cs
fwait
inc
adc
enter
ds
mov
push
xchg
nop
pop
adc
ds
leave
stos
stos
cltd
push
addb
shl
mov
xchg
pusha
sbb
sahf
xchg
jne
adc
out
mov
repz
outsb
add
sbb
iret
mov
add
fstpl
push
adc
mov
iret
inc
cli
adc
aam
daa
shlb
mov
mov
out
imul
add
loop
sbb
mov
les
dec
mov
add
or
repnz
xor
add
repnz
sbb
mov
pop
mov
subl
xchg
jno
lods
in
mov
dec
arpl
xor
jae
cmp
rcrb
lcall
negb
mov
mov
cwtl
add
pusha
add
xchg
sub
jno
add
sarb
cmp
pop
sbb
in
bound
add
push
mov
cmp
aas
mov
cs
ret
jb
dec
mov
pop
jg
push
pushf
push
fdivs
xor
out
subl
shl
mov
mov
add
jl
add
push
push
je
cmp
adc
push
inc
repz
mov
cmp
adc
inc
xor
sbb
mov
es
jne
insl
filds
mov
repz
sbb
stos
ss
cmp
add
das
popf
inc
mov
lret
test
ret
inc
std
or
daa
ret
aad
setne
outsl
iret
add
sbb
data16
mov
push
sub
xor
lahf
cld
dec
lcall
add
jo
push
mov
xchg
int
jno
lret
setne
cld
inc
js
jle
scas
lcall
lea
xor
sbb
mov
add
dec
repz
lods
push
or
pop
insb
xor
out
jge
ljmp
sahf
jmp
push
and
add
push
xor
add
and
shl
mov
pop
mov
mov
neg
and
aaa
call
jae
fchs
lock
add
cmp
cltd
int
sti
mov
in
ljmp
ror
cmc
aaa
fiadds
pop
testb
xchg
jne
sub
or
fdivs
push
shlb
adc
xchg
or
lret
loope
cltd
ret
adc
push
insb
or
add
ljmp
sti
jbe
fbld
je
cli
sub
insb
inc
inc
jmp
push
or
cmp
jbe
push
xchg
rcr
pop
pop
mov
loopne
add
xor
mov
std
test
mov
lret
cmpsb
add
imul
enter
aad
and
dec
push
dec
inc
addb
jle
cmp
mov
arpl
sbb
add
adc
mov
mov
pusha
stos
pop
test
jg
das
cmovb
jbe
mov
rcl
stos
add
in
ss
jbe
mov
add
sub
pushf
inc
sub
cmp
out
std
inc
enter
sbb
int
std
ret
inc
or
jle
loope
jp
fwait
repz
add
mov
ss
getsec
xchg
pusha
cltd
sbb
mov
add
mov
cmp
mov
cwtl
imul
lock
or
fcomip
adc
lock
sbb
inc
test
out
mov
adc
pop
pop
add
negl
fwait
xchg
clc
xchg
jbe
dec
outsl
push
loope
rcrl
sbb
sbb
stos
std
pusha
lods
mov
jo
mov
jnp
jmp
call
mov
xchg
fcomps
push
jl
rcrl
sub
mov
rorl
adc
lret
or
lds
mov
push
push
mov
aaa
xchg
jo
lret
cld
jp
int3
mov
inc
out
mov
xor
fcmovne
push
or
jb
sub
mov
cmp
adc
cld
add
repnz
icebp
cltd
jmp
mov
lcall
ss
mov
aas
or
rcll
adc
xchg
sub
pop
and
lods
mov
sar
rolb
mov
frstor
repz
lea
sub
dec
lds
xchg
fldl
xchg
cli
sub
inc
hlt
sbb
daa
xchg
add
pop
and
push
cmpl
dec
mov
jmp
cmp
xorl
out
fwait
jae
ljmp
pop
out
js
pop
pop
adc
insb
fs
leave
cmc
pop
push
notl
imul
or
dec
jp
mov
dec
fdivl
leave
adc
push
mov
cmpsl
mov
fldcw
inc
lods
out
inc
push
mov
gs
pop
and
dec
pop
mov
js
and
insb
xchg
je
or
imulb
xor
pop
in
pusha
sar
imul
in
push
xlat
or
mov
sub
push
jmp
mov
sbb
jg
lea
popfw
mov
dec
aas
out
iret
jno
mov
incl
lods
sbb
mov
sbb
xor
in
xchg
add
negl
adc
addr16
inc
jge
or
repz
push
sbb
mov
out
cwtl
or
lods
ret
cmp
xorl
cltd
mov
lcall
dec
add
rclb
add
xchg
dec
vmread
roll
mov
bound
adc
call
mov
dec
int3
and
push
out
jge
fstpl
mov
test
decl
daa
aam
add
das
add
das
stos
repz
lods
leave
enter
test
xlat
or
test
sbb
mov
jo
outsl
loopne
int
sub
aad
std
je
or
sbb
xor
sbb
xor
loopne
hlt
add
mov
aad
adc
out
out
fistpl
jo
sub
test
mov
add
add
stc
rorb
adc
cmp
sbbb
sbb
jae
xchg
shlb
jno
cmp
sub
add
lock
lods
in
sub
ret
dec
inc
mov
out
mov
dec
mov
mov
cltd
pop
inc
pop
push
int3
push
cmp
sub
push
repz
jecxz
cwtl
dec
lods
sub
mov
sub
dec
sbbl
dec
fnstenv
lret
xchg
inc
imul
js
mov
loope
cmc
push
and
pop
xor
mov
adc
sarb
sbb
xchg
out
pop
mov
sarl
and
mov
sub
adc
js
xor
or
sub
pusha
cs
in
into
cmp
aam
cmp
mov
jo
enter
and
mov
int
adc
pextrw
arpl
add
ret
sbb
pop
insb
dec
mov
enter
mov
icebp
jno
cmp
xor
mov
dec
add
lahf
xor
fnstcw
aaa
movsl
mov
lahf
test
pop
int3
dec
cmp
decb
out
or
push
jmp
inc
pushf
test
fucom
arpl
mov
imul
jp
inc
sbb
xor
mov
mov
inc
lods
addb
or
add
filds
sti
inc
and
arpl
cmp
scas
scas
xor
test
sti
adc
mov
loopne
ja
test
roll
adc
pusha
sbb
adc
xor
out
add
rcr
cmc
dec
test
jo
fadds
aad
ja
les
test
or
sti
add
sub
iret
cwtl
pushf
ret
incb
ret
mov
icebp
push
jg
aam
pushf
loope
xchg
mov
jecxz
call
mov
jmp
imul
xor
xchg
xor
scas
rorl
cmp
dec
pushf
inc
std
shll
icebp
je
or
mov
imul
int
sbb
push
lods
cmp
jle
out
subl
jne
in
and
out
ds
jae
lret
mov
push
mov
loope
cmp
ja
push
cwtl
xor
pop
fs
xchg
hlt
sti
cmp
jge
int3
mov
mov
cmc
mov
mov
jne
mov
sti
and
xchg
rorb
scas
rclb
mov
pop
test
repnz
movsl
cmp
in
divl
push
mov
mov
and
push
lret
or
jmp
xor
add
cmp
or
pop
mov
push
push
addr16
adc
nop
stc
adcl
xlat
sbb
roll
xchg
iret
mov
inc
sub
sti
mov
aas
xchg
cmp
xor
lahf
inc
bound
rdmsr
ficomps
imul
addr16
cmpsl
jno
incb
aas
rcll
cmpsl
cmc
mov
addl
in
sbb
cmc
xchg
stos
or
sti
iret
aam
iret
loopne
sti
pop
dec
shrb
stos
mov
out
out
test
sbb
jge
xchg
cmp
pusha
mov
inc
sbb
testb
mov
js
enter
popf
iret
mov
pushf
fcompl
in
lret
aas
cld
mov
add
or
jmp
push
sub
pop
mov
int3
out
bound
pushf
jno
mov
pop
stos
pop
mov
hlt
repz
jl
lcall
popf
mov
fdivs
sbb
sahf
xchg
jb
push
inc
icebp
and
mov
loope
loope
cld
push
iret
pop
sub
or
fs
inc
sub
xchg
andb
ljmp
cmp
jae
dec
xchg
cmp
xor
and
test
ss
xorl
xchg
jp
jle
lahf
icebp
in
mov
adc
aad
push
xchg
mov
out
ja
inc
sub
add
int3
xchg
test
out
mov
jb
lods
sbb
addr16
int3
repz
pushf
xchg
sbb
mov
or
mov
pop
cmp
push
mov
scas
adc
add
outsl
adc
add
and
test
inc
sbb
sbbb
jl
mov
lods
mov
mov
jle
push
pop
mov
mov
ja
outsl
scas
pop
ret
mov
lret
xor
out
jl
andl
fldcw
call
sub
rcll
test
aaa
mov
cmp
sti
add
add
out
das
mov
bnd
inc
mov
inc
xorl
fwait
pop
xlat
imul
out
and
das
or
and
mov
or
filds
enter
sbbb
jno
mov
lret
xchg
sbbb
lret
cmp
or
or
push
ds
mov
push
int
pop
cmpsb
sbb
dec
sbb
std
add
shlb
add
mov
js
jae
ret
jns
repnz
imul
mov
sbb
iret
xlat
pop
out
sarb
dec
or
repnz
es
cltd
cs
and
loope
ja
sbb
push
push
and
mul
fdivl
pop
and
pop
punpcklbw
add
enter
pop
arpl
pusha
sarl
jmp
mov
mov
ret
orb
in
jp
ja
add
jp
rcrl
fldt
rcll
movsl
pop
add
pushf
imul
repz
repz
xor
xor
or
sahf
or
xchg
fst
cmp
jmp
jecxz
push
das
inc
xorb
imul
loope
into
sub
jne
mov
inc
stos
lahf
push
pop
int
or
in
rol
stos
xchg
xor
jmp
repnz
loopne
ffree
dec
mov
notb
orl
pop
mov
out
xchg
mov
xchg
sub
rcrl
inc
sbb
adc
aad
xchg
push
pop
sub
ficoms
leave
aas
mov
stos
sub
mov
fistps
fcoml
push
mov
mov
cmp
rcl
jno
sbb
fidivs
sbb
mov
ja
xchg
inc
lret
adc
xchg
icebp
sub
push
movsb
sub
popf
into
inc
pop
sub
push
in
mov
dec
aas
mov
lret
push
mov
add
ds
iret
xor
fsts
pusha
gs
inc
add
dec
negb
dec
insb
addr16
add
mov
and
push
mov
and
jle
stos
sbb
loop
jae
xchg
jecxz
pop
xchg
test
repnz
push
neg
push
int
mov
aam
fildll
out
movb
sbb
pop
sahf
fwait
test
in
jge
lea
cmpsl
in
mov
nop
in
mov
aad
xchg
xchg
rcrl
mov
out
jg
mov
pop
hlt
mov
out
push
mov
jg
lea
or
jecxz
into
fcomps
inc
pop
dec
ret
or
aas
insb
or
insl
decl
dec
test
add
push
xchg
sbb
icebp
lea
ja
lret
jle
and
fsubl
fidivs
out
pop
inc
sbb
popf
fmulp
js
mov
test
negb
jnp
shll
cs
inc
out
sbb
jle
jge
inc
ds
dec
testb
outsb
ret
mov
inc
rcll
and
pushf
add
test
pusha
and
lahf
sbb
insb
sub
push
not
shll
inc
jl
cs
push
jmp
mov
jp
sbb
mov
mov
mov
pusha
xor
stos
xor
dec
xor
lret
into
in
xor
adc
inc
cmpsb
stos
imul
faddl
mov
xor
or
sar
lea
mov
loopne
mov
xchg
subl
jmp
dec
mov
mov
test
das
repz
jae
icebp
xchg
punpckldq
mov
push
or
or
push
dec
mov
test
insl
push
add
xchg
outsb
aas
arpl
fimull
mov
lahf
xor
test
mov
inc
sbb
xor
stos
ds
popl
mov
outsb
or
icebp
xchg
scas
pop
popa
or
ljmp
imul
cmp
inc
inc
repz
out
nop
in
mov
add
popf
fldt
and
xchg
mov
in
xor
ja
rclb
test
jmp
bound
and
xchg
in
mov
and
and
xchg
pop
mov
cmpsb
add
pop
rcrl
adc
je
xchg
test
jae
xchg
lods
lret
and
pop
data16
imul
cmpb
xor
mov
push
stos
mov
outsl
roll
loope
inc
adc
dec
xor
sub
jl
hlt
aad
jmp
repz
fistl
shrb
push
cmp
pop
xchg
push
mov
int
out
adc
or
or
je
test
sbb
dec
xchg
cltd
enter
dec
in
inc
lock
mov
test
lock
out
dec
addb
sti
cmp
inc
fsts
mov
adcb
adc
inc
add
aas
add
cwtl
cltd
and
ja
sbb
inc
jge
push
xorl
fdivr
inc
mov
or
dec
xchg
pop
dec
in
mov
cmp
cmpl
sbb
sbb
fwait
jae
icebp
jns
mov
js
mov
push
lods
loop
aam
inc
in
cltd
cmpsl
stc
andl
xor
sarb
cld
repz
xchg
scas
and
aaa
outsb
and
mov
ljmp
or
push
mov
sub
insl
adc
sbb
add
test
iret
sub
ss
stc
push
jmp
cli
pop
add
je
stos
lret
enter
repz
imul
sarl
adc
mov
nop
fstpl
sbb
movsl
cld
inc
rclb
addb
cld
loop
std
fistpll
ret
push
in
mov
xor
sbb
sbb
movsb
loop
pop
adc
ss
pop
mov
fs
lds
jmp
pop
xchg
lods
and
or
aas
mov
popf
mul
in
lret
and
bound
dec
fwait
or
add
or
rol
add
sahf
xor
sbb
es
cmpsl
sahf
jecxz
psubusw
dec
add
out
movsbl
add
into
jl
data16
test
cs
js
leave
jb
into
sub
pop
xchg
testl
cmp
data16
adc
xchg
or
call
lcall
fimuls
pop
add
in
pop
inc
aam
mov
cmp
sub
xor
add
mov
std
add
sub
repz
jae
clc
push
add
cli
jl
or
dec
bound
inc
out
lcall
push
cwtl
inc
fistpl
fidivrs
outsl
ret
sbb
dec
loop
mov
ret
sbb
cmp
pop
mov
movsl
mov
cld
mov
xchg
movups
stos
cli
mov
jecxz
jno
fsubr
das
push
mov
cltd
or
lds
nop
sbbl
push
roll
or
cs
sti
inc
inc
ja
mov
push
mov
out
cmp
fisttps
cmpl
fists
and
sub
sub
enter
pop
fxam
push
mov
test
cmp
jo
sub
pop
arpl
sar
mov
or
dec
mov
xchg
loopne
add
movsl
iret
repz
dec
mov
arpl
ds
test
jo
pop
fidivrl
push
cmpsb
adc
int
lods
cwtl
or
stc
bound
mov
hlt
pop
negb
out
pop
xchg
mov
adc
in
adc
movsb
xchg
outsb
test
mov
sub
and
cld
fnsave
xor
int3
sbbb
push
movsb
bound
pop
mov
ja
lea
jg
iret
ljmp
jmp
leave
std
xchg
sbb
and
jno
xchg
test
adc
or
inc
sahf
inc
cmp
test
inc
mov
jmp
and
add
popl
jns
xchg
pop
repnz
and
icebp
lcall
aas
xor
adc
in
in
lret
mov
or
xor
fcoms
xchg
aad
mov
in
lcall
out
push
push
sti
xor
jb
movsl
sub
or
xor
stc
mov
enter
push
or
testb
fs
arpl
mov
das
pop
add
das
aad
push
cld
xchg
fdivl
mov
jge
xor
pop
sbb
jmp
pop
xchg
mov
lods
mov
sbb
jge
mov
sub
cmp
ja
mov
pop
jb
loopne
cmp
inc
sbb
shll
inc
push
jmp
jp
repnz
xor
cltd
sbb
outsl
jno
hlt
pop
xor
jns
mov
sub
hlt
test
int
jbe
popf
pop
sbb
sub
dec
enter
sbb
push
mov
fucompp
xor
xor
sbb
fdiv
rorb
dec
jecxz
rcll
jbe
or
push
jbe
or
fdiv
adc
xorl
jne
lret
cmpsb
push
repz
cmp
pop
mov
mov
push
pop
push
cmp
xor
pop
sbb
xlat
xchg
hlt
loopne
shrl
outsl
cmpsl
mov
sbb
testl
xchg
cmp
es
jecxz
mov
jae
lea
pop
lock
or
sti
in
xchg
adc
repz
mov
mov
cld
mov
pop
movsb
int
xchg
jge
mov
xor
mov
ret
add
pop
int
gs
adc
add
ret
dec
mov
mov
divb
in
hlt
in
jo
xor
outsl
or
sahf
lret
aad
cmpl
lret
pop
outsb
divl
xchg
xchg
cld
out
repnz
inc
inc
aad
aas
xchg
mov
mov
mov
shlb
jae
scas
and
xchg
xor
cmp
add
int
jmp
inc
sti
jne
aas
mov
aam
out
sub
dec
aam
popf
mov
pop
test
jmp
jns
add
inc
into
imull
popf
repnz
cmpsb
jle
cmp
arpl
and
push
and
icebp
xor
mov
and
test
aaa
jge
call
or
sub
test
xchg
xor
out
mov
jb
mov
fnstsw
icebp
sbb
test
bound
xor
pushf
push
cltd
pop
xor
or
out
pusha
push
mov
add
sub
cmp
add
cmp
lock
cmc
ja
sysexit
inc
movsb
data16
je
xor
cmc
cmp
mov
cs
adc
bound
dec
jns
inc
sbb
push
xchg
push
mov
inc
pop
mov
mov
stos
ret
shufps
mov
rorl
lea
xchg
sti
sub
mov
aas
ss
scas
inc
decb
repz
sbb
leave
imul
xor
jl
inc
hlt
int3
iret
out
pop
push
jecxz
scas
jnp
test
repnz
xchg
cmpsb
xchg
shll
das
bnd
jne
mov
insb
popf
add
mov
mov
out
push
cmp
pop
mov
fmuls
jg
loopne
mov
push
scas
mov
je
push
pop
iret
add
jmp
pop
adc
stos
insl
das
or
dec
punpckhwd
pop
mov
cmp
and
sarl
faddl
push
lahf
jp
dec
je
fldl2e
xchg
or
int
lahf
out
or
stos
or
pop
pop
mov
mov
fldl
push
lahf
ss
mov
adcb
cmp
mov
jne
dec
push
adc
lds
and
pop
ljmp
leave
aad
ss
mov
out
movl
cli
mov
insb
sbb
add
pop
ljmp
into
pop
into
fmull
stos
outsl
in
stos
push
daa
or
cmp
cmp
jmp
mov
add
jnp
and
lret
outsb
cmpsb
adc
jnp
addr16
push
data16
dec
aam
add
insl
xchg
rcll
insb
push
stc
cmp
xchg
aam
psubw
cmp
push
inc
pop
adc
shlb
out
sub
loope
ret
lcall
add
and
pop
hlt
adc
jl
xchg
inc
mov
inc
pop
add
ror
adc
fmull
je
mov
push
jg
dec
scas
fistpll
push
fsubrl
cmp
sbb
arpl
call
fistpl
and
popf
js
push
lahf
cmc
or
sbb
cld
cmpsb
sbb
jle
hlt
repnz
imul
sbb
or
ret
pop
mov
and
imul
popa
jecxz
in
dec
jmp
adc
dec
xchg
icebp
nop
and
push
stc
inc
pop
jle
jb
push
nop
jnp
push
in
xchg
or
aad
sbbl
xor
call
pop
sbb
pop
dec
sbb
pop
outsb
das
cltd
sbb
ljmp
cmp
add
push
push
rorl
fwait
enter
sbb
pop
movsl
in
pop
push
mov
push
sub
aaa
jbe
out
adc
lock
mov
mov
dec
fiadds
jno
fidivl
imul
mov
lock
and
adc
out
adc
sub
repnz
adc
subb
sarl
stos
stos
or
or
mov
pusha
rorb
cs
js
ljmp
insb
mov
add
mov
fidivrs
adc
inc
test
loopne
ret
jmp
or
in
push
xor
push
je
fsub
or
xlat
mov
sbb
mov
pop
sub
and
imul
sub
and
fistps
mov
dec
sbb
adc
in
shr
adc
add
shll
push
push
xchg
mov
mov
out
fbstp
shll
sahf
xchg
mov
cmp
cltd
mov
fs
inc
rcrl
dec
int3
movsb
fstl
mov
rorb
jnp,pn
fcmovu
cmc
rcr
vmovdqu
sbb
mov
insb
data16
jae
pop
iret
pop
or
jecxz
pusha
shll
cwtl
test
jnp
jae
mov
pop
inc
pop
sti
xor
lods
ds
lods
inc
daa
mov
adc
dec
enter
daa
loop
mov
push
lahf
std
dec
in
sbb
mov
daa
cmp
cwtl
mov
fnsave
outsb
test
icebp
fsub
xor
fdivl
adc
bound
inc
adc
sbb
or
fiadds
mov
cmp
xor
int
sub
aaa
pop
lcall
rcl
ds
xchg
sbb
push
nop
out
jo
jecxz
in
cmp
pop
cmp
aas
cmp
push
mov
push
dec
fisubl
adc
popf
aad
adc
xor
ffree
xlat
out
arpl
cltd
popf
xchg
lahf
fs
mov
mov
push
movsb
push
cmp
cmp
xchg
inc
out
cmpsb
cmpsb
out
pushl
std
out
pop
jg
inc
enter
cmpl
cs
jo
dec
or
clc
ss
inc
inc
sbb
jp,pt
jb
and
decl
push
adc
mov
jp
mov
add
dec
pop
cs
xlat
xchg
imul
mov
dec
fisttpl
pusha
mov
or
sub
rclb
fsubr
cmp
sub
inc
xor
pop
ss
hlt
sub
add
ss
mov
push
stos
mov
mov
or
out
loop
or
leave
ja
rolb
mov
mov
daa
lahf
daa
cmp
mov
stos
pop
inc
call
sub
es
ds
xor
push
nop
gs
outsb
xor
add
out
loope
xchg
movsl
fistpl
lods
repz
pushf
stc
mov
xchg
jbe
std
xchg
xor
fwait
mov
pop
clc
pop
xchg
push
ficompl
js
or
pop
xlat
xor
push
out
out
std
shll
jae
inc
pop
mov
scas
clc
mov
push
inc
orl
jecxz
dec
cli
sbb
lods
cli
push
aaa
mov
loopne
xchg
hlt
outsl
pop
ja
mov
sub
mov
mov
andl
std
data16
xchg
test
aas
sti
popa
call
xor
and
cmpsl
jge
mov
pop
std
mov
pop
xorl
jns
and
lods
nop
and
imul
xor
jecxz
inc
push
movsb
repnz
pop
ds
into
push
dec
dec
jns
mov
sbb
ret
ljmp
frstor
sub
insb
or
and
inc
lcall
push
jb
cmc
mov
adc
loop
cmp
fiadds
jmp
mov
stos
xor
out
scas
pop
push
fadd
dec
xchg
inc
das
or
fmul
dec
xchg
lret
dec
mov
sahf
lock
gs
jmp
pop
cmp
aaa
xchg
iret
jo
jbe
mov
insb
hlt
cwtl
cmpsb
mov
add
fcomi
sarb
addr16
mov
pop
out
and
cltd
andb
mov
repz
pshufw
je
mov
pop
inc
ret
ljmp
out
clc
add
push
repnz
popf
cltd
push
add
js
stos
repnz
lods
and
mov
jb
push
icebp
mov
les
dec
jo
aaa
int3
test
sahf
aaa
push
cmc
cmovne
jle
xchg
push
imul
sub
movntdq
jbe
jmp
outsl
adc
dec
lret
in
movsb
js
adc
or
sbb
str
repnz
pop
jge
ror
xchg
in
mov
mov
cmp
mov
hlt
pop
pop
mov
jge
negb
scas
or
repnz
aaa
insb
ja
nop
mov
adc
cmp
mov
or
test
dec
orps
pushf
repz
dec
push
jmp
pop
out
in
push
pop
inc
push
sub
daa
xchg
dec
push
cmp
push
sub
jecxz
lahf
sub
jmp
cmpsb
inc
sub
xor
lock
insb
pop
pop
and
test
sub
and
out
fidivrs
outsb
pop
popf
push
into
cwtl
ds
movzwl
or
mov
popf
pop
mov
adc
sbbb
pop
mov
fsubp
jns
out
fldt
jg
inc
repz
fadds
adcb
mov
adc
movsb
dec
shr
das
pop
mov
aaa
in
insl
shlb
into
xchg
outsl
sub
dec
outsb
gs
arpl
mov
mov
sti
out
dec
and
repz
xchg
fstpt
cmp
pop
fcompl
xor
mov
cmp
push
shlb
mov
hlt
pop
mov
test
mov
adc
lahf
pusha
addr16
lods
jnp
jnp
pop
pop
xchg
shl
sti
mov
in
in
cmp
dec
push
add
data16
mov
out
inc
jge
iret
and
add
push
je
jns
scas
xor
js
int3
popa
mov
stc
shrl
xchg
arpl
lahf
fsubrs
sbb
jg
cmp
sahf
andl
pop
dec
jne
aad
sbb
out
insl
mov
xor
adc
lods
out
cwtl
jg
jge
repz
test
clc
xchg
ds
push
mov
inc
incb
leave
cmp
mov
and
xor
rcr
inc
mov
ds
sbb
adc
stos
cld
mov
addl
js
out
mulb
inc
sarl
add
inc
sub
mov
lea
int3
les
push
iret
push
xlat
dec
pop
dec
sbb
xor
pop
or
cmpsb
ja
popf
into
xchg
fwait
in
in
push
in
xor
scas
jl
push
jnp
mov
dec
lahf
xor
add
pushf
fidivl
xchg
mov
cli
dec
pusha
adc
jmp
repnz
dec
jnp
ds
xchg
cmp
or
dec
ret
lcall
mov
add
jg,pn
sahf
testl
sahf
testl
icebp
cmpsl
mov
jo
xlat
xchg
icebp
and
sub
pop
pop
fdivrs
fildll
lds
xor
xchg
jmp
ss
add
xchg
stos
vhaddps
hlt
lret
out
rol
cmpl
das
lods
test
fs
push
sub
push
test
push
ja
aas
pop
cmp
sub
repz
push
cmp
movsb
int3
adc
cmp
mov
inc
jnp
out
repnz
inc
imul
jne
dec
cmp
test
scas
addb
imul
xchg
inc
ror
js
in
inc
andl
fisubrl
mov
repz
repz
xor
mov
cmp
add
push
push
leave
fs
xor
sub
mov
adc
xor
mov
out
iret
cmp
scas
std
jg
fidivrs
mov
pop
and
scas
lea
mov
sub
icebp
sub
out
or
ret
mov
outsl
dec
adc
outsl
push
xchg
mov
faddp
test
aad
and
out
pop
lret
je
sahf
cmp
mov
sahf
xchg
pop
jae
pop
jae
push
mov
idiv
mov
mov
fwait
add
mov
cmp
outsl
ret
lds
in
jp
dec
jnp
mov
and
lahf
inc
int3
mov
pop
scas
xchg
lahf
mov
in
scas
push
xor
sbb
sti
mov
add
lret
repz
arpl
mov
out
or
pop
and
in
jge
gs
inc
push
int3
imul
mov
ret
aad
loop
js
jb
movsl
stos
sub
mov
aad
ret
adc
cmpsl
in
std
stos
mov
mov
add
mov
xor
cmp
mov
neg
repz
fnstsw
in
int
sub
std
je
iret
mov
pop
jmp
out
scas
or
fdivs
aas
pop
les
mov
rorl
pop
jmp
add
jp
mov
cmp
aaa
jb
icebp
mov
into
cmc
mov
inc
pop
mov
xor
mov
cmc
into
push
fstpt
dec
mov
mov
in
addr16
repnz
andl
loope
jl
fsubl
mov
inc
cmpsl
int3
fs
xorl
imul
insl
stos
pop
xor
mov
or
xor
sbb
push
mov
test
repz
inc
add
repnz
push
repnz
daa
add
insb
sarb
popf
imul
or
dec
xlat
xchg
aaa
push
jmp
fisttps
cmp
icebp
mov
mov
lods
adc
mov
pop
shlb
jl
test
mov
add
ret
cltd
jmp
dec
cmp
jl
sbb
daa
mov
sbb
jns
mov
std
outsb
mov
cmc
jmp
dec
xchg
cmp
jnp
and
and
inc
xor
int
and
insb
xor
inc
insb
fwait
cmpsl
test
loopne
sti
cmp
mov
pop
pop
gs
sbb
repnz
mov
mov
pop
shlb
dec
ret
es
repz
pop
dec
cmpsb
rcrl
push
std
sahf
ss
outsl
inc
jle
aaa
popa
xchg
test
lods
lock
js
jg
fildl
xchg
jno
adc
ss
insl
adc
ja
outsb
decl
add
aas
stos
js
mov
lock
mov
ret
loopne
jle
mov
idivb
jmp
iret
icebp
ret
fnstsw
pop
xchg
addr16
ja
jp
push
mov
outsb
add
dec
jle
stos
mov
popa
mov
loope
inc
in
outsb
pop
add
mov
pop
add
cmpsl
cld
inc
or
xlat
inc
cmpsb
dec
jmp
mov
icebp
lea
shll
push
out
int
inc
xor
mov
push
xchg
xor
sub
adc
icebp
outsb
inc
outsl
lock
fs
jnp
cmpsb
jb
push
pop
lock
iret
cmc
les
cltd
fsubr
add
lahf
push
cmp
popa
hlt
scas
scas
mov
or
dec
cmp
adc
aas
pop
in
into
push
out
lcall
movsb
aas
pop
divl
stos
repz
push
aas
add
push
and
aas
xabort
test
mov
fsubrp
cmp
sbb
mov
lea
fsubs
cli
test
xchg
frstor
mov
dec
mov
fldt
xor
imul
cli
xor
xchg
mov
adc
xlat
iret
stos
sub
or
in
xchg
push
pop
lahf
cmpsb
in
adc
sbb
inc
out
ja
mov
mov
pop
fadd
std
repz
pop
and
ja
sub
out
lods
fsubrp
dec
cmc
pop
add
sub
popf
mov
js
mov
inc
pop
mov
xchg
popa
inc
or
xlat
pushf
fdivs
call
sub
push
cmpsl
xchg
shll
cmpb
jno
push
loopne,pt
mov
lea
jle
xor
sbb
stc
shrb
xor
jmp
test
push
fnstenv
insl
sub
mov
sbb
jecxz
arpl
repz
jb
or
xchg
test
int
aaa
add
push
bound
jae
xlat
mov
repz
aad
pop
mov
fiaddl
adc
idiv
call
jmp
xor
add
mov
sub
mov
and
loope
mov
test
inc
outsb
insl
cs
adc
mov
ss
push
sbb
mov
adc
mov
fwait
xor
mov
call
cmp
adc
mov
jle
cwtl
mov
jns
das
repz
sub
add
pop
add
repnz
xor
ja
sub
ret
jno
xor
pop
dec
rcll
lahf
fcomps
stc
les
js
mov
push
out
inc
pop
inc
lret
cmp
cmpsl
cmc
mov
xchg
je
lods
mov
das
pop
jle
cmpsb
nop
push
pop
outsl
lcall
ljmp
sbb
fs
js
dec
insl
cmpsb
and
push
dec
movsl
sbb
sbb
jg
and
xchg
loopne
in
pusha
in
popa
pop
stos
pushl
add
or
pusha
outsl
fprem1
jge
push
push
jp
xor
add
fildl
lret
xchg
gs
mov
sbb
cmp
imul
ds
sbb
jnp
push
jbe
addr16
pusha
fnstcw
es
sub
pop
xor
mov
cld
mov
jmp
shl
ret
pop
loope
loope
negb
adc
fistpl
jmp
and
pop
sub
push
push
add
xchg
ss
adc
imul
pop
mov
xchg
sbb
out
adc
lahf
stos
jle
push
daa
ret
inc
lret
js
lahf
xchg
into
add
movsl
in
and
mov
push
insb
mov
popf
aad
mov
mov
cwtl
cmpsl
jl
imul
dec
inc
jbe
mov
dec
mov
xchg
lahf
sub
pop
sbb
add
mov
clc
xchg
das
and
cmp
pop
push
xor
mov
aam
or
addl
aaa
push
mov
sbb
adc
orl
pusha
xchg
lcall
int
idivl
cld
sbb
sbb
lock
jne
dec
mov
xchg
in
jo
sbb
jp
outsl
outsl
hlt
cmpsb
pusha
pop
ljmp
inc
test
or
pusha
jle
xor
daa
adc
mov
add
sbb
std
repz
jbe
insb
out
push
in
fcomps
mov
iret
mov
or
mov
xchg
and
dec
dec
cmp
out
mov
mov
pop
sbb
mov
xor
enter
pusha
xchg
mov
loope
in
adc
pop
cwtl
xchg
mov
xor
xlat
xchg
sub
pusha
push
lret
divl
push
loope
mov
mov
arpl
xor
cmc
jbe
sbb
fnstcw
scas
adc
aam
in
xlat
adc
dec
cmp
lds
push
test
push
inc
dec
jg
sti
pushf
jle
inc
xor
into
aas
push
cmp
mov
incl
ja
call
xchg
icebp
fdivs
call
in
jg
or
hlt
cltd
fstsw
bound
lahf
idiv
dec
adc
add
dec
stos
jo
push
in
lahf
xchg
fisubrs
mov
out
pop
add
clc
neg
fwait
push
sbb
push
add
repnz
mov
cmc
test
cmc
das
cwtl
or
adc
icebp
orb
jg
adc
out
cld
push
mov
lods
and
fisttpll
scas
test
and
adc
arpl
repz
repz
setne
test
xlat
loope
sbb
push
mov
dec
divb
addl
sbbb
loop
in
xchg
jmp
push
nop
mov
jb
mov
mov
adc
call
outsl
rcr
pop
pop
ds
mov
mov
sbb
fwait
push
je
fcoms
ja
mov
jmp
fs
pop
adc
push
insl
xchg
mov
cmp
sub
iret
outsb
mov
pop
rcrl
cmc
popf
and
pop
clc
int
scas
cld
rep
repz
mov
sbb
mov
or
mov
stc
jo
sbb
test
cli
das
inc
call
xlat
add
stc
mov
or
cld
push
xor
xor
push
or
sub
fildl
icebp
cli
xor
pop
lods
mov
jmp
pop
aaa
test
and
push
xlat
js
sar
pop
add
inc
mov
sub
mov
cmpsl
pop
out
negb
and
mov
out
xor
pop
push
fnsave
cmp
sub
stos
stos
sahf
std
jl
xor
adc
fcom
leave
shll
adc
mov
in
sti
pop
or
jecxz
adc
fs
cmpb
mov
mov
sbb
jle
xlat
aaa
out
cltd
mov
push
push
jo
clc
xchg
mov
ret
xor
or
lds
jecxz
jg
jmp
rol
shl
fcoms
mov
sbb
xchg
aas
adc
daa
mov
cltd
xchg
mov
es
jmp
xchg
ss
loope
jnp
enter
adc
and
stc
xor
iret
ss
and
sub
or
or
or
hlt
in
or
mov
sub
sbb
adc
ds
xchg
adc
pushf
psubsw
jbe
xchg
dec
cmp
inc
dec
cwtl
cmp
lret
and
mov
mov
mov
mov
lahf
scas
dec
hlt
jno
int
xchg
leave
lahf
jp
jmp
mov
outsl
jecxz
sti
xchg
enter
pop
jmp
mov
jns
in
in
push
pop
repz
shl
cmpsb
mov
jp
movsb
pop
ljmp
test
ljmp
das
insb
xlat
fnsave
xor
int
mov
fcmovne
leave
xor
jp
pop
pop
sub
push
scas
jns
push
pop
cmp
xorl
mov
cmp
into
in
aas
push
cmc
mov
fiadds
mov
pop
push
push
xchg
mov
mov
dec
lea
pushf
add
jnp
fidivrl
out
inc
sarl
fisubrs
xchg
xchg
bound
xlat
clc
mov
or
movsl
xchg
in
mov
ret
lahf
add
test
aaa
push
out
pop
add
sub
push
mov
test
aaa
shl
jle
mov
cmp
cli
arpl
lahf
sbb
cld
lock
add
aaa
aad
mov
cmc
pop
insb
adc
ret
adc
push
inc
std
test
ja
dec
gs
jno
fs
xor
jo
cmp
push
adc
stos
hlt
mov
decl
push
sti
repz
jns
insl
jno
sbb
jle
sub
cmp
je
mov
sbb
mov
push
pop
cmp
jmp
add
in
xor
out
cs
repz
pop
mov
imul
addr16
fcomps
cmp
pmaxsw
scas
not
mov
adc
fldt
cmp
ljmp
adc
cmc
loop
pop
and
pop
sahf
pop
imul
stc
dec
cmp
das
dec
inc
lret
cwtl
push
test
mov
inc
lcall
rclb
rcll
stc
test
push
xor
in
or
repnz
pcmpgtd
push
mov
push
and
lea
ljmp
pop
popf
cmp
cmp
cmp
sbb
cmpsl
loopne
js
xchg
sbb
cld
mov
es
push
cmp
jge
xchg
xor
out
rcrl
cmpsb
mov
mov
cmp
mov
push
sub
sbb
rcr
and
in
and
lds
dec
pop
jge
sub
fdivs
loopw
mov
es
clc
leave
mov
imul
fwait
ss
pusha
jo
jmp
and
adc
mov
push
popfw
jb
mov
dec
ret
sub
or
pop
mov
inc
push
xor
sti
aas
or
test
gs
les
sub
mov
int
out
mov
das
icebp
int
fdiv
dec
or
fisttpll
xchg
pop
jb
repz
dec
jb
pushf
adcb
int
call
jns
test
decl
mov
call
lock
push
roll
stos
sbb
sub
sbb
aas
sub
rolb
xchg
sbb
adc
mov
mov
dec
ds
xor
fs
popa
jle
mov
movsb
push
push
cmpsb
test
cmp
addr16
cmpsb
lods
test
pusha
xchg
cmp
dec
pop
int3
push
ds
loope
sbb
les
jg
sub
fadd
pop
iret
fstps
or
xor
ret
aam
std
mov
popf
push
push
pop
add
jecxz
mov
lahf
sub
add
jno
push
fdivs
js
mov
out
in
mov
cmp
lock
pusha
xchg
data16
add
ja
mull
pop
push
jno
push
out
mov
std
ss
jo
out
leave
mov
or
sahf
and
ja
push
cmpsb
add
ja
mov
mov
pop
jle
ficoms
movsb
or
ljmp
leave
mov
mov
hlt
daa
pop
ret
pop
std
mov
daa
adc
icebp
std
jmp
mov
fnstsw
cmp
pop
loopne
icebp
jno
adc
mov
cmp
das
cld
mov
test
or
icebp
or
xchg
cmp
cli
cmp
add
sbb
lcall
sbb
cld
and
int
lods
dec
cld
mov
cmp
mov
or
aas
das
in
lea
mov
cmp
hlt
jbe
sti
sarl
push
dec
push
loopne
addr16
int
into
push
dec
bound
mov
in
jne
pushf
cmc
mov
pushf
fisubs
insb
mov
pop
daa
jb
ss
cmp
inc
sbb
dec
xchg
outsl
repnz
push
sti
mov
icebp
pop
jg
mov
xchg
push
mov
shr
in
ret
lahf
cmp
cwtl
inc
in
movsb
add
lahf
xchg
bnd
or
xor
cld
and
pop
mov
popf
xor
enter
ret
cmp
fidivrs
and
icebp
fdivl
icebp
jecxz
jl
into
imul
ja
ds
cmp
mov
pop
fucomip
popf
jecxz
inc
hlt
jecxz
xor
fbstp
push
mov
jl
sub
jg
cmp
outsb
movd
lret
mov
sub
movsb
iret
lea
xchg
and
mov
xchg
mov
jne
xor
mov
fnsave
les
lock
lods
jo
cmp
test
xchg
lahf
rclb
and
fidivl
adc
cmp
push
xchg
sbb
or
sbb
mov
mov
cmp
out
sub
add
push
stos
jb
or
stos
fldl
das
rcl
pop
inc
fists
loop
icebp
imul
aas
dec
push
cwtl
jge
mov
add
sub
mov
rorb
jae
out
cli
xlat
fdivl
rorl
pushf
mov
lahf
sbb
out
mov
neg
movsl
sub
jg
cmp
rcl
xchg
stos
andl
dec
push
jge
call
ja
sbb
icebp
mov
jbe
mov
add
sub
lea
loop
popa
inc
pop
ds
dec
shlb
je,pt
repnz
mov
jbe
popf
mov
clc
add
fidivrs
inc
mov
jno
es
data16
cld
movzbl
fdivs
dec
outsb
scas
jae
hlt
in
stos
fsts
in
pmaxub
mov
jg
and
push
push
push
lods
rol
in
mov
shrl
je
movb
cmp
arpl
fst
addr16
lods
push
or
cmp
cmp
hlt
pop
lods
divl
lahf
popa
mov
jg
add
in
test
lahf
test
arpl
adc
mov
dec
int
sbb
sbb
bound
ret
xchg
xor
aaa
hlt
pop
cmpsb
push
push
ret
sti
add
mov
sub
inc
sub
das
ret
aad
rcrb
cli
inc
mov
mov
push
xlat
mov
fisubl
andb
outsb
mov
fildl
xor
sbb
fs
icebp
mov
es
out
cmp
in
test
sarl
xchg
cltd
je
jecxz
scas
out
xchg
mov
adc
mov
pop
jnp
mov
adcl
loopne
jnp
jp
dec
stos
xlat
mov
mov
cmp
sbb
pop
scas
inc
js
jg
cli
add
mov
cmp
jp
popf
test
inc
arpl
sub
rcr
in
mov
mov
mov
and
dec
in
inc
mov
imul
xor
mov
pop
mov
mov
xor
mov
aas
stos
cmc
xor
push
jns
fnsave
sbb
cmp
cwtl
sahf
adc
adc
mov
mov
pop
fstps
cmp
hlt
ficomps
jb
jmp
sbb
xchg
fstpt
xlat
inc
incl
lock
bound
pop
scas
push
jno
lods
ss
test
mov
sti
xchg
iret
fnstsw
mov
dec
jnp
push
in
rorb
xor
mov
push
decl
adc
xor
mov
mov
mov
mov
test
in
sti
cmc
xor
mov
cltd
cmp
mov
out
pushl
xchg
loope
cmp
jge
lea
out
sbb
testb
nop
push
jg
mov
push
sbb
mov
jb
add
pop
pop
repz
mov
or
stos
in
adc
sbb
fs
jne
pushf
xchg
inc
fisubl
fidivs
aam
pop
and
sbb
dec
sbb
and
mov
mov
ds
mov
xchg
mov
andb
pop
roll
jae
loop
mov
daa
andl
std
mov
hlt
push
cmp
repz
sti
mov
ds
aas
and
lods
cmp
loop
filds
mov
sbb
pushl
sub
pusha
aam
das
mov
loope
scas
lret
fcoml
sarb
jmp
daa
daa
sub
or
pop
cltd
or
cmp
dec
push
cmp
dec
pop
ljmp
jnp
cmp
aad
mov
push
dec
inc
sub
fnsave
out
xchg
push
sbb
dec
and
faddl
call
lcall
cmpb
mov
dec
sub
ds
inc
lret
adc
pop
cmp
or
in
mov
inc
ret
popf
ret
cli
stc
xchg
rol
sti
lea
fbld
aas
pusha
ret
test
nop
jb
inc
mov
inc
dec
pop
jge
je
add
in
in
sub
mov
push
iret
fdivrs
mov
pop
adc
inc
jecxz
xor
loopne
jb
inc
push
add
bound
fsubrp
sub
inc
push
cmpl
cmp
sub
arpl
xchg
mov
mov
mov
cmp
stos
movsb
cmp
add
std
inc
sti
lods
ret
ret
scas
ret
push
xchg
pop
mov
mov
inc
jnp
test
enter
cmp
push
ret
jecxz
dec
enter
jge
jnp
jp
ffree
dec
insb
leave
mov
lahf
dec
xchg
or
sbb
lods
adc
ds
xor
sahf
pop
or
push
sahf
and
fistl
inc
fsubs
jle
inc
rolb
xchg
mov
mov
xchg
jl
jmp
adc
pop
add
cmpsb
test
lahf
mov
cmpsb
push
clc
hlt
jbe
out
ficomps
inc
cs
mov
mov
out
jne
jno
xchg
mov
frstor
mov
mov
loope
aaa
push
pop
gs
aas
xor
rol
adc
cmpsb
jp
and
pusha
sbbb
and
xor
cld
and
jge
xchg
or
dec
mov
lcall
insl
jg
divl
out
inc
xchg
jo
mov
inc
mov
xor
lds
and
popf
jecxz
jbe
shld
fistps
ljmp
xor
jp
push
sbb
aam
push
ficoml
mov
mov
mov
mov
fstl
scas
and
cmovne
insb
fisttps
pop
incl
jp
pop
sbb
cmp
stos
sub
mov
stos
mov
xchg
adcb
imul
push
addl
sahf
in
push
push
ror
out
cmp
mov
or
pushf
mov
lds
xchg
pop
mov
lock
push
mov
lds
xor
jne
rcrb
fdivr
mov
sub
mov
push
cs
adc
and
and
sbb
pop
cmp
int
ss
pop
push
sbb
mov
in
dec
mov
fldl
push
mov
inc
daa
jp
mov
or
push
fdiv
pop
ror
mov
push
cltd
pusha
mov
jmp
add
push
cmp
in
add
pop
cmp
add
sbb
aaa
lcall
inc
fcmovbe
mov
sub
std
repnz
inc
jmp
inc
jae
cmp
shl
jp
sbbl
xchg
fwait
inc
pop
xchg
fucom
and
outsl
roll
pop
aaa
popa
ret
sub
xor
cld
out
and
inc
mov
inc
aaa
stc
mov
stc
sub
and
xlat
pop
test
jmp
dec
mov
jmp
xor
ljmp
push
loopne
mov
in
andl
popf
push
std
mov
mov
mov
jns
inc
popa
out
loope
lahf
addr16
sbb
clc
cmpb
jne
mov
mov
cmpsl
movsl
loop
test
jle
dec
scas
mov
stc
hlt
xlat
lods
cmp
dec
xchg
push
lahf
into
or
mov
into
cmp
div
into
loop
clc
out
into
fmulp
xchg
xchg
loope
std
push
ret
jmp
aam
in
mov
movsb
and
out
int
adc
push
fiaddl
mov
les
jp
push
rep
add
xor
les
cmp
xchg
hlt
push
lock
emms
mov
aaa
loop
or
adc
popa
mov
dec
pop
sete
repnz
popf
cmp
in
pop
mov
rorl
push
and
fimuls
fcmovnu
cld
test
int3
mov
dec
out
sbb
cmp
jge
and
sub
stos
push
andb
loopne
cmp
mov
mov
push
cmp
daa
add
jp
mov
pushf
mov
or
addr16
ljmp
sti
mov
push
pushf
sbb
std
add
ja
xchg
mov
daa
fmul
cld
and
jnp
into
popf
int
jne
sarl
pop
in
sbb
pushf
lcall
leave
das
mov
mov
insl
cld
jg
pusha
fildll
ljmp
xor
mov
aas
jge
insb
inc
mov
mov
xchg
clc
mov
sbb
lret
or
mov
push
test
test
dec
push
sub
pop
mov
aaa
mov
in
lahf
cltd
fldcw
mov
js
adc
pop
inc
ja
pop
leave
mov
aaa
xchg
fnsave
out
out
mov
in
hlt
add
cmp
movsl
mov
cmc
push
out
repnz
outsl
xchg
lcall
cwtl
cmc
or
jecxz
sbb
push
sub
dec
fucomi
out
mov
ljmp
outsl
cld
in
nop
std
fidivrl
imulb
push
gs
add
out
mov
pop
fnsave
dec
cli
int
jl
pop
gs
pushl
iret
faddl
std
stc
xor
inc
xchg
je
dec
jns
imul
xchg
rorb
cmp
movsl
inc
xchg
popa
in
setae
adc
bound
adc
push
fs
bsr
arpl
push
pop
mov
cld
inc
mov
and
cmc
inc
movsb
iret
push
xchg
ljmp
push
xor
jae
ret
shrb
xchg
loopne
cltd
jne
jle
xor
andb
adc
out
icebp
mov
cs
bound
jns
inc
popf
cmp
test
jno
int
push
out
adc
mov
pop
cmp
das
cli
rorb
or
adc
aad
out
add
out
sub
adc
cmp
push
jns
mov
adc
js
cli
dec
adc
sbb
push
sahf
cmpps
gs
jg
sti
xorl
and
or
cmp
cmp
fsubs
jp
lret
out
lock
repnz
or
mov
jbe
fldenv
jg
sbb
sbbb
insl
dec
out
jnp
dec
mov
sbb
pushf
int3
repnz
outsl
mov
pusha
outsl
and
outsl
sub
push
rcl
pop
push
lds
data16
sbb
fcompl
out
xchg
int
mov
add
hlt
fsubrl
jae
jecxz
jecxz
push
sarb
out
and
mov
add
popa
les
fisubl
into
test
insl
xor
add
cmp
lock
cmp
loopne
lret
repnz
insl
mov
add
popf
and
pop
mov
roll
es
test
pushf
push
js
push
movsl
jne
lea
rolb
sub
add
jmp
cmpsl
repnz
or
inc
outsb
cmpsb
dec
sarl
fiadds
xchg
add
imulb
insl
or
popf
cmpsl
adc
lods
push
mov
jmp
sub
loopne
sbb
jnp
add
ficoml
xchg
mov
xchg
shr
sub
xchg
shl
cmp
iret
arpl
nop
in
addr16
xor
xchg
sub
adc
in
movl
rcll
ret
push
mov
notl
or
jne
out
mov
inc
cmpsl
mov
mov
ja
sbb
xchg
mov
jl
mov
jecxz
loope
addl
jns
push
mov
inc
fstps
jl
sub
daa
fnsave
jle
in
dec
ret
mov
dec
mov
js
cmc
cld
mov
fmull
popa
scas
cmp
push
sti
xor
mov
jne
jle
jl
icebp
jmp
andl
js
inc
xchg
mov
dec
jns
mov
lret
iret
daa
jmp
leave
dec
sbbb
leave
add
cltd
aad
mov
jno
call
cmp
rclb
jmp
sbb
xor
sub
cmpb
mov
adc
outsb
ds
das
fisttpll
mov
sahf
das
inc
fisubrs
scas
sahf
daa
fcompl
hlt
add
inc
and
stos
xchg
lods
shll
mov
push
mov
xchg
jnp
jne
push
sbb
mov
lahf
in
or
les
fistpl
je
xor
dec
rcll
pop
pusha
sub
fcoml
cmpsb
xor
bound
stc
cmc
adc
mov
daa
cmp
jmp
ss
lods
pop
cmp
insb
jbe
aas
sub
aam
adc
cmpsb
out
push
and
xor
sbb
popa
cmp
sarl
jmp
cmp
lret
je
pop
and
mov
lahf
aam
fwait
jno
hlt
sbb
lock
popa
hlt
popf
repz
jo
repz
mov
pop
aam
pop
cmp
out
test
aas
xor
in
loop
pop
mov
sbb
cli
cmp
movsl
mov
pop
mov
adc
pusha
jecxz
jnp
sbb
out
repz
popf
rcr
cmp
stc
loopne
repz
xchg
fdivrl
out
pop
lahf
je
lahf
sar
arpl
pop
out
std
mov
sbb
insb
or
lods
mov
fidivl
lds
cmc
jl
sbb
in
sub
inc
jge
in
movsl
outsl
inc
lds
faddp
add
xchg
ds
lret
mov
xchg
push
lea
sbb
call
jae
or
xor
cmp
inc
popf
lds
xor
ds
hlt
faddl
loopne
fxch
mov
cs
jno
adc
fmull
popl
dec
pop
movsl
pop
pop
mov
jo
out
jbe
push
cmp
mov
jns
insb
pop
bound
les
ret
dec
ss
jae
js
cwtl
lods
testb
fsubrs
mov
xchg
fimuls
ja
mov
pop
repnz
lahf
lcall
jnp
lds
sub
ja
push
out
inc
fs
dec
cltd
push
mov
clc
mov
into
add
push
jmp
mov
or
into
cmp
mov
std
mov
cli
repz
sbb
mov
cmp
inc
jns
fcom
adc
mov
popa
shl
and
mov
xchg
jmp
ret
iret
inc
mov
xchg
mov
and
adc
mov
nopl
xchg
sub
adc
lret
xchg
pop
sub
sbb
out
mov
jne
hlt
fs
sbb
aas
incl
push
addr16
int
and
movsb
and
pushf
in
add
add
in
push
fidivs
int
out
add
cwtl
clc
aad
mov
lret
out
outsl
movsb
int
out
scas
out
cmp
add
pusha
inc
shr
adc
xchg
cmp
call
mov
ljmp
xchg
jp
mov
jge
and
add
notl
repz
and
jb
cmp
cwtl
xor
fnstcw
repnz
push
push
divl
outsl
or
into
cmp
or
lret
movsl
jp
pop
mov
nop
jae
pop
jecxz
xor
iret
out
mov
pusha
sarb
ficoml
cltd
fimuls
popf
mov
and
jg
lret
je
test
xchg
inc
enter
ljmp
adcb
ja
mov
sub
mov
aad
mov
mov
lock
mov
inc
mov
push
inc
xlat
sub
bswap
into
sahf
leave
iret
sbb
mov
repz
lcall
aam
jp
loope
ss
pop
push
and
lods
inc
xlat
lcall
mov
mov
aad
xor
faddl
jae
iret
fstpt
push
inc
sbb
push
jnp
popa
jne
adc
fdivr
stos
mov
inc
mov
dec
sarb
out
mov
iret
loopne
cmp
idiv
je
mov
pop
int3
insl
sub
adc
out
stos
add
fs
movsb
ror
push
mov
pop
xlat
inc
das
sub
mov
mov
leave
sub
push
outsb
rcll
insl
call
add
xchg
testb
cli
inc
clc
xchg
iret
mov
jp
iret
inc
xor
inc
mov
out
sub
data16
jmp
mov
cmc
or
pop
data16
pop
sbb
mov
xchg
mov
orl
mov
aaa
pop
jp
mov
sbb
sub
xchg
idivl
cmp
cmp
scas
mov
jbe
adc
int3
inc
addb
lret
daa
fwait
dec
repz
inc
fsts
cld
insl
test
xor
sahf
adc
pushf
sbb
sbb
push
int
lods
es
adc
leave
inc
xchg
rcll
loope
adcl
cwtl
cmpsl
leave
sbb
push
push
xchg
int
call
insb
cld
cmp
imul
imul
sahf
ljmp
add
popa
cmp
sub
push
sbb
pusha
and
push
outsl
and
pop
out
xchg
adc
lcall
add
cmp
ljmp
push
pop
bound
scas
inc
xchg
mov
repz
leave
and
fadds
pushf
xchg
ret
xchg
xchg
mov
cmp
stos
jae
push
pusha
ficoms
enter
inc
in
cltd
add
fistpl
or
ds
inc
repz
cmp
pusha
cwtl
fbld
movsl
mov
clc
pop
test
lcall
fbstp
popa
inc
arpl
xchg
movsl
mov
cltd
rcr
outsl
lock
dec
sbb
fnstsw
ds
sbb
jmp
popa
lahf
push
pop
xchg
mov
xchg
jle
in
and
xchg
ljmp
jmp
in
sbb
decl
xchg
loope
mov
aas
xor
stos
cmp
pop
add
mov
lret
mov
push
out
cltd
jmp
jbe
ss
fxch
mov
testb
push
in
jbe
in
jg
stos
pushl
push
sub
ret
jmp
and
sub
cmp
scas
fdivrl
jnp
mov
add
jmp
out
add
mov
xchg
xor
mov
fistpl
inc
mov
loopne
sub
xchg
or
gs
sbb
sbb
gs
decl
and
mov
or
mov
test
push
jno
xchg
das
cmp
pop
pop
mov
fcmovnu
push
les
pushf
fdivrp
jb
xor
jns
or
lret
and
test
push
jg
cli
fwait
sub
inc
inc
in
mov
cltd
pop
sub
je
iret
dec
adc
xor
lds
cmc
or
and
dec
pop
sub
hlt
cwtl
lods
nop
mov
jp
push
ret
push
cli
int3
inc
or
cmpsl
mov
incl
mov
orb
outsb
jae
add
fwait
shll
xchg
xchg
shll
aaa
cltd
mov
cmp
pop
xchg
pop
pop
sub
les
pop
dec
lea
roll
lret
or
mov
test
loop
jbe
test
lret
int3
dec
sbb
mov
cmp
rorl
dec
add
stc
mov
dec
cmp
jbe
arpl
cltd
mov
pop
jl
fcomip
adc
stos
int
sub
cmp
pop
push
movsl
icebp
fldl
daa
mov
out
outsb
testl
mov
and
sub
mov
push
in
lock
fimuls
mov
aaa
xchg
imul
pop
sar
jno
jp
into
mov
jo
inc
fstpt
aam
inc
inc
push
mov
mov
lds
bound
imul
sub
inc
dec
mov
push
lret
mov
adc
loope
jbe
push
push
fnstenv
inc
test
dec
loopne
fnstcw
cmpsb
dec
sti
mov
dec
jbe
xchg
adc
testb
mov
std
xchg
pop
fildll
fnstenv
push
movsl
xor
cmp
mov
out
and
daa
sarb
lea
mov
pop
lock
and
xchg
mov
sub
mov
testb
pop
je
sbb
jno
adc
sbb
cltd
cmp
xor
sbb
or
andb
jg
sar
inc
fdivp
ja
outsl
pop
jo
push
pop
out
mov
fabs
testb
fcomps
add
xchg
les
mov
stc
int3
in
jae
test
out
dec
lea
mov
test
fisubl
cld
call
cmp
sbb
adc
cmp
cwtl
sbb
leave
or
scas
mov
stos
cmp
pop
iret
jnp
rclb
and
pop
and
sahf
dec
movsb
ret
xchg
ljmp
pushf
daa
push
and
jmp
rcr
add
and
cmpsl
fchs
xchg
xchg
mov
jp
testb
xor
inc
hlt
lcall
in
shl
mov
jo
subb
add
fcmovu
cmp
fiadds
push
test
cvtps2pd
enter
gs
in
fnstsw
push
xchg
mov
das
mov
ficoml
push
add
adc
es
fistpll
ret
mov
inc
je
shrl
lds
stc
xlat
fmuls
inc
mov
jnp
xchg
int
inc
leave
mov
or
or
push
or
adc
xchg
mov
cli
loope
sahf
mov
in
out
cmpsl
xor
loop
mov
cmpsl
pop
xlat
in
push
insl
mov
add
imul
jae
pop
jnp
repz
pop
jle
mov
shl
push
sub
sub
xchg
pop
sahf
les
lcall
inc
callw
movsb
mov
jmp
cmp
xchg
mov
repnz
dec
jmp
loop
mov
mov
es
xor
out
fdiv
in
sbb
stos
idivb
adc
push
incl
mov
imul
push
outsl
aam
stos
jbe
sub
sbb
out
adc
mov
xlat
adc
cmp
sahf
aaa
imul
push
js
lock
push
cwtl
sbbb
imulb
mov
aaa
fimull
lret
inc
cmp
push
mov
cmp
stos
cmp
jl
gs
aaa
pop
jmp
xchg
fisttpll
mov
fldcw
xor
add
shll
mov
jge
push
or
rcr
adc
scas
iret
ret
loop
and
mov
cltd
repnz
pop
mov
xor
xchg
cmpsl
shll
inc
cltd
cli
scas
pop
pusha
mov
test
xor
pop
add
fwait
or
mov
mov
pop
push
and
fwait
mov
jmp
or
xor
ret
scas
adcl
aaa
movsb
aam
mov
mov
mov
loope
fdivs
jns
rcrb
aas
mov
nop
xlat
jno
mov
dec
mov
shrl
lds
ja
jmp
scas
jo
clc
sub
pusha
sbb
adc
int
ja
jae
mov
jbe
mull
es
sbb
sahf
aaa
mov
cmp
xor
je
jmp
fisttpl
xlat
in
fwait
js
idiv
aas
push
loop
mov
adc
shrb
fs
sbb
xorl
pop
inc
ret
and
sub
aad
bnd
or
inc
and
in
fcomi
cmp
loope
ret
ret
aad
aad
mov
out
pusha
push
jne
sbb
sub
cld
sarl
in
fwait
fs
pop
push
pop
pop
repz
inc
outsb
jns
jnp
mov
sbb
stos
cltd
sbb
add
ret
cmp
mov
out
xchg
add
mov
mov
add
out
mov
xchg
imul
fistl
aaa
xchg
cmp
adc
outsb
out
xchg
aam
xchg
ljmp
push
xlat
movsb
shlb
das
test
pop
es
sbb
push
mov
sbb
ret
lea
outsb
mov
adc
add
outsb
and
jmp
dec
scas
mov
loop
cmp
das
shr
mov
aam
and
sbb
iret
mov
xchg
mov
push
adc
push
pusha
insl
jno
mov
les
test
cmpsb
sbb
dec
pushf
xchg
lret
out
int
push
test
leave
mov
movlps
adc
pop
orb
mov
push
movsl
addr16
pop
les
stc
notb
shr
stc
jno
stc
dec
lds
add
mov
sub
sbbl
loopne
and
js
mov
in
jns
fdivr
dec
outsb
popa
dec
popa
lsl
xchg
jns
jle
or
ss
frstor
fwait
lock
lret
push
orl
out
add
xchg
mov
pop
sub
std
shlb
out
dec
pop
mov
sub
mov
cmpsb
or
les
repz
nop
jle
add
jb
inc
mov
adc
ret
or
and
jns
bound
push
add
int
sti
cmp
or
sbb
xlat
inc
inc
ds
cmp
mov
jns
jle
dec
fnstenv
int3
scas
fdivl
dec
fisttps
mov
jnp
xchg
imul
not
addr16
cwtl
mov
inc
mov
les
pop
sbbb
idivl
cwtl
fistps
nop
in
leave
xor
nop
push
mov
mov
ds
fstps
lods
es
mov
inc
xor
icebp
out
jl
jo
or
jno
jb
ret
out
xor
test
in
lea
fnsave
scas
test
pop
push
out
dec
shll
call
and
std
fisttpl
jp
pop
out
push
xchg
adc
divl
roll
es
push
xorb
push
out
stos
xlat
mov
dec
es
fsts
cmp
jb
mov
pop
inc
outsl
cs
xor
aas
mov
test
mov
popl
mov
scas
rolb
aad
and
push
push
shll
xor
bound
aas
xchg
pop
adc
jecxz
push
lea
jle
push
jge
mov
dec
mov
imul
jmp
or
jo,pt
ja
shlb
mov
int
sar
insb
mov
mov
insb
popf
clc
push
pop
arpl
in
jle
xchg
mov
jge
dec
push
mov
shll
xchg
cmpsl
stos
push
call
cwtl
xchg
inc
add
cmp
inc
or
adc
push
mov
arpl
xor
dec
sub
sbb
nop
scas
push
mov
push
sub
pop
add
test
insb
into
into
shll
data16
dec
push
or
cmpsl
dec
cld
sub
test
add
mov
int
outsb
sbb
movsb
shlb
frstor
loopne
pop
mov
data16
xchg
int3
outsb
pop
jecxz
andl
lcall
mov
add
jae
or
loope
sbb
and
jno
shll
pop
stos
insl
sbb
pop
sti
mov
push
dec
xchg
out
cmp
incb
cmp
or
nop
int
push
pop
test
jo
idiv
adc
pop
jae
mov
add
dec
incb
jl
push
xchg
inc
push
mov
stos
mov
rcl
test
ja
jns
pop
add
mov
outsb
sub
test
lds
xchg
sbb
pushf
or
sub
test
int
pop
pop
repnz
jg
sub
mov
movsl
jle
lds
fisubrl
inc
pop
jmp
mov
pop
and
mov
out
enter
xlat
add
movsl
aad
lcall
mov
mov
jg
scas
mov
shr
xor
push
aaa
sbb
iret
aad
inc
insl
stos
cmp
cmp
mov
aas
in
test
hlt
es
incb
repz
fstps
mov
mov
rcrl
insb
sub
dec
inc
sub
add
clc
ss
jo
in
or
pop
pop
into
mov
out
add
jb
jle
add
mov
adc
mov
pop
arpl
mov
aas
xor
and
ds
leave
mov
daa
jl
int
add
repz
pop
mov
cmp
push
pop
movb
stc
mov
mov
sbb
fiaddl
mov
mov
pop
dec
nop
cmpsl
lods
mov
jge
ljmp
nop
xchg
jecxz
sbb
pop
sahf
or
add
iret
xor
ja
or
sub
and
xchg
jmp
jae
inc
mov
scas
mov
xchg
push
xchg
mov
cmp
jle
sbbb
aas
lods
push
lahf
pop
sbb
pusha
hlt
sbb
lock
lea
addr16
jae
pop
fisubl
xchg
cmc
dec
test
hlt
lret
rep
jo
jne
jno
cltd
loope
dec
jg
xor
xchg
test
popf
jnp
aam
ror
dec
testb
fs
jbe
loopne
push
sub
sahf
jno
mov
cmp
xor
mov
add
insb
push
out
jbe
inc
iret
jno
dec
pop
mov
cld
mov
jmp
fildl
jns
push
dec
dec
repz
dec
sbb
sbb
ds
fwait
add
cmp
adc
repnz
pop
xlat
orl
jl
fcoml
outsl
xchg
add
icebp
or
test
lock
mov
and
lock
fadds
mov
mov
xor
popa
js
sti
das
xchg
nop
outsb
mov
fldl
out
cmp
cmp
xchg
loope
fimuls
cmc
imul
or
roll
sbb
jno
mov
sub
xor
xchg
test
test
mov
mov
push
inc
rorb
adc
and
dec
pop
mov
stos
push
inc
and
sub
inc
nop
inc
mov
stos
sbb
rolb
int3
idivl
imul
stc
jnp
div
or
mov
fldt
add
das
popa
sbbl
inc
xchg
xchg
add
sti
ljmp
and
lahf
lds
out
sub
or
ja
aaa
shrb
xor
shl
mov
outsl
shll
jo
add
adc
add
jmp
push
mov
in
lahf
adc
push
fdivs
dec
sbb
xchg
add
sbb
adc
sbb
jnp
les
cmp
xor
xchg
mov
inc
int3
jnp
xchg
sub
cmp
mov
jne
in
adc
cld
push
xchg
xlat
scas
call
xor
cmc
fsubs
dec
inc
imul
cmp
cmp
cmc
sarb
dec
mov
adc
in
bound
pop
mov
mov
push
jmp
cld
inc
std
cmp
das
mov
or
repnz
sbb
je
je
sbb
lods
xor
jno
lock
aaa
jnp
add
mov
jg
cmp
rorl
sbb
add
das
outsb
xchg
mov
mov
add
shr
mov
jb
jnp
add
ret
or
xor
ret
xchg
mov
push
data16
fiadds
add
jmp
in
cmp
stos
add
repnz
cmp
sub
jcxz
imul
mov
or
call
ror
sub
sub
outsb
sbb
rcrl
outsb
add
inc
mov
xor
sbb
cmp
faddl
imul
clc
jb
out
mov
dec
movsb
das
psrlw
push
mov
jmp
aad
pop
aad
xchg
fwait
mov
icebp
aas
add
rol
scas
inc
mov
daa
ds
push
xchg
adc
aas
outsb
push
sbb
rolb
ret
ja
sbb
repz
dec
and
push
out
scas
jg
stos
jmp
pop
adc
leave
cltd
xchg
pop
test
cmc
sub
and
inc
jl
xor
or
inc
mov
jno
std
cs
sub
in
dec
incl
xchg
cmc
jno
pop
leave
push
xor
ret
jmp
cld
pop
add
loope
mov
add
outsb
in
mov
and
sub
mov
pop
adc
scas
popf
xchg
test
sbb
aam
sbb
ja
out
push
cmp
call
xchg
shrl
push
cmc
mov
sbb
jns
add
push
adc
sti
cmp
fbld
testb
iret
cwtl
xchg
pop
out
xchg
mov
in
adc
jnp
pop
ljmp
andb
cmpl
out
loopne
xchg
jecxz
loope
and
lahf
inc
and
pop
movsl
inc
mov
cli
adcl
cmp
call
rorl
mov
fstpt
fisubs
xor
sti
les
push
out
push
mov
adc
test
lahf
xchg
pop
cld
test
push
jl
mov
push
pop
or
cmp
mov
sbb
xchg
mov
and
add
dec
sub
ja
loop
out
dec
jbe
inc
mov
ss
lods
dec
arpl
jge
jno
xlat
push
pop
popa
scas
inc
aas
ret
mov
cmp
sub
push
jne
ljmp
adc
xchg
lds
inc
cmpsl
outsb
jg
movsb
in
dec
imul
inc
pusha
fsubrp
adc
jmp
sti
mov
bound
dec
mov
jle
daa
mov
inc
cmp
sahf
and
lods
addr16
xchg
out
lahf
loopne
lods
lods
and
lods
pop
addr16
mov
pushf
lock
jmp
xor
jno
adc
fs
cmp
jecxz
loope
sbb
sbb
push
jbe
das
sub
enter
icebp
xchg
xchg
mov
insb
aad
mov
xlat
jle
ret
divl
jbe
test
adc
or
push
jns
call
mov
mov
xchg
sub
cmp
fists
nop
scas
mov
push
cli
sbb
jnp
loopne
ret
jp
pushf
adc
ljmp
mov
pop
jg
xlat
mov
sarb
shrl
out
jns
jmp
repnz
dec
mov
cmp
mov
xchg
push
mov
pop
flds
add
loopne
jbe
cmp
jmp
jns
call
fcomps
mov
cwtl
cld
push
and
call
lret
xor
xor
into
adc
jmp
jle
imull
sbb
neg
add
ret
jle
mov
jecxz
or
and
aam
jae
mov
inc
jp
shl
paddusb
int3
cmp
pop
pop
and
sbb
outsl
out
mov
in
int3
cmp
sbb
jmp
adc
iret
roll
jmp
cmp
loopne
insb
orps
xor
sti
mov
push
lgs
push
mov
xchg
mov
mov
pop
ljmp
add
enter
cmp
pop
aam
gs
lods
mov
xor
or
mov
ss
outsb
adc
test
fldl
xlat
mov
call
mov
adc
xorb
loopne
imul
lret
andb
push
jl
iret
repz
adc
pusha
dec
hlt
inc
in
inc
jge
add
insb
cmp
das
dec
aam
repnz
das
mov
fistl
adc
out
sub
hlt
jns
push
jbe
loope
andl
rorl
jg
stos
push
cmp
call
scas
mov
cmc
fidivl
push
repnz
and
jmp
in
sub
ss
loop
icebp
negb
jnp
cmpsl
clc
shrb
out
inc
stos
lcall
push
sar
je
scas
filds
std
clc
cli
ud0
push
or
add
iret
loopne
cmp
pop
push
fidivrs
adc
sbb
movl
cwtl
jo
decb
mov
or
push
jo
push
imul
adc
insl
mov
mov
inc
jle
cld
mov
fists
cmc
inc
mov
mov
mov
adc
std
loop
aaa
sbbl
andl
jmp
cs
mov
sbb
call
jecxz
adcl
xchg
jle
icebp
push
xor
mov
xor
call
sahf
sub
push
inc
div
sub
enter
pop
xchg
mov
aam
cmc
adc
lcall
push
ret
add
lock
mov
std
fcmove
mov
dec
jb
adc
or
xrelease
or
stos
sub
jne
push
scas
jge
stc
addl
jmp
ficomps
mov
dec
movsl
xchg
xchg
cs
sbb
push
sti
je
mov
shrl
lret
dec
xlat
pop
cli
arpl
subl
shl
mov
mov
jle
xor
in
test
jbe
fisttpll
out
sbb
rorl
out
mov
mov
mov
das
out
mov
sbb
push
pushf
pusha
xchg
stos
pop
mov
notl
movsb
cmp
fcmovbe
xor
adc
loopne
mov
pop
xchg
cmp
mov
outsl
fnstenv
cltd
or
inc
clc
pop
xchg
into
pop
mov
cmpsb
aad
mov
fcomps
popf
aad
dec
or
mov
adc
adc
push
or
mov
inc
and
push
jae
mov
dec
jne
and
sub
xchg
sti
push
inc
dec
dec
shll
inc
fxch
cmpb
cmp
jle
sub
or
mov
mov
push
out
inc
adcb
xor
jns
lock
mov
cmp
xchg
mov
pop
rorl
clc
sbb
loopne
ss
cmpsb
in
lods
jns
out
cmpsl
jo
cld
cmp
xchg
and
in
xchg
mov
add
jge
cmp
jne
fildl
jmp
imul
movsb
sar
jg
daa
jb
dec
lods
or
popf
mov
xchg
pop
or
adc
sti
sub
cmp
jle
shll
addr16
gs
push
sbb
not
inc
call
xchg
hlt
repz
mov
into
lret
gs
test
mov
mov
insl
jb
inc
mov
stos
sub
mov
xlat
push
nop
in
mov
sub
jae
stc
push
lcall
je
and
mov
bound
jl
sub
cmp
ret
push
cltd
xor
xor
movsb
jl
mov
orl
test
lods
scas
sub
inc
inc
fstl
ret
fistpl
jmp
pop
cmp
popa
mov
iret
mov
dec
test
fldz
sub
fxch
or
cli
push
fs
pop
pop
jg
pop
jg
mov
insl
inc
outsl
mov
adc
gs
ja
mov
jmp
mov
loope
and
aaa
or
push
mov
mov
cmp
jns
outsl
sbb
inc
and
iret
mov
movsb
push
sarb
xor
fstl
jge
pop
sub
dec
insl
push
into
mov
push
adc
mov
test
decl
pushf
xor
popa
std
push
push
jg
mov
mov
lret
jbe
test
pop
jns
xor
test
push
stos
aam
fisubrs
test
push
mov
fists
gs
sbb
push
mov
ret
outsl
mov
push
push
test
push
dec
push
hlt
xlat
int3
aas
repz
mov
mov
ror
stc
mov
loope
jbe
mov
mov
movb
js
jl
jbe
mov
cmc
jle
cs
and
scas
lea
lret
gs
rolb
and
cli
sub
dec
mov
xor
mov
fdivr
lcall
push
jle
inc
test
mov
insl
ret
mov
jmp
lret
loopne
outsl
fsubs
push
push
dec
loopne
jmp
ffree
dec
mov
aas
mov
negb
js
push
inc
negl
sti
les
sub
in
shr
adc
aam
cmp
shlb
xchg
test
mov
inc
jbe
xor
and
ret
inc
xlat
ds
sub
rorl
dec
push
mov
icebp
test
mov
fxch
ja
mov
pushf
adc
dec
fstl
into
xchg
lret
jbe
push
int
pop
xor
test
std
cltd
clc
xchg
out
push
testb
insl
shlb
mov
push
lock
adc
nop
in
enter
xchg
in
add
xchg
xchg
mov
ret
and
pop
and
xchg
das
dec
jp
pushf
xor
push
lcall
mov
ss
sbb
arpl
cmp
stos
or
fsts
test
pusha
out
xchg
lea
jo
jbe
lret
outsl
jns
mov
pop
pop
out
test
jns
inc
insl
lock
mov
xchg
push
jno
rcrl
xor
sub
jnp
cmc
rorl
out
sub
scas
dec
sbb
cli
or
shll
out
mov
push
bound
sahf
popf
pop
addb
jle
clc
insl
popa
jl
mov
mov
xchg
lahf
mov
jo
std
mov
add
lds
xchg
repz
mov
push
or
sub
xchg
fdivs
add
fisubrl
fists
add
mov
insl
hlt
jle
insb
push
insl
mov
and
mov
fnstenv
into
in
loop
xchg
imul
pop
mov
pop
daa
test
push
xor
add
icebp
pop
in
mov
aad
ds
loopne
in
test
lods
push
add
or
pand
setnp
add
in
adc
testl
sti
cmp
vprotw
jbe
mov
jb
lahf
in
sub
adc
cld
add
sub
dec
sbb
inc
idiv
dec
fildll
or
mov
jge
mov
and
cltd
mov
mov
movb
jbe
push
hlt
in
std
pusha
mov
sbb
cmp
or
jmp
cltd
push
dec
in
pop
sahf
neg
adc
orb
cmp
xchg
mov
mov
out
shlb
movsl
arpl
in
jb
test
pop
movsl
mov
ret
push
rorl
jo
mov
or
xchg
in
filds
movsl
les
sbb
mov
add
or
leave
in
jne
dec
jmp
inc
mov
outsb
pop
mov
repnz
aam
add
stos
xchg
pop
lcall
pop
pop
or
mov
fsubrl
insb
cld
insl
orb
insb
xor
sbb
fimuls
push
add
mov
jl
xchg
mov
xor
add
in
mov
inc
add
jge
nop
xlat
and
iret
shr
sti
mov
mulb
cltd
adc
cld
rcrb
js
jl
pop
insb
pop
or
add
outsb
data16
cmpsl
fsubl
aaa
or
or
aaa
dec
ds
insb
sub
int3
loopne
sub
and
push
movsl
xlat
popf
es
or
pop
pop
inc
cltd
cltd
xchg
lahf
add
aam
jmp
pusha
adc
js
nop
sbb
push
test
inc
and
inc
add
dec
movsb
jae
repnz
mov
dec
cmp
mov
pop
mov
push
shr
jge
push
and
jge
jge
out
xchg
inc
movsl
ja
cs
pushf
popf
push
repnz
int
pop
addr16
sbb
xchg
rolb
and
insb
pop
mov
xchg
lds
push
inc
cld
sbb
dec
dec
lret
and
lcall
addr16
push
jne
xchg
pop
imul
les
rolb
dec
and
sti
jmp
inc
lods
scas
mov
xchg
aas
por
cmp
test
gs
sub
xchg
pop
pusha
cmp
sbb
paddb
daa
dec
xor
jns
das
or
sbb
mov
movsl
mov
xor
movsl
fs
inc
mov
cmpsb
mov
xchg
nop
dec
addb
outsl
pop
inc
mov
stos
and
add
ja
jne
adc
sbb
and
in
push
adc
cmpb
cld
lock
mov
and
js
jne
imull
inc
dec
push
add
push
inc
fisttps
xchg
repz
lahf
jno
pop
cmp
in
mov
jne
pop
mov
ds
pop
fldz
or
lret
inc
incb
jno
cmpsb
add
jne
push
adc
popf
movsl
adc
loopne
fwait
test
lds
lahf
in
sub
lret
push
outsl
fcomip
xor
cmc
push
gs
push
andl
dec
cmp
lret
ds
cwtd
negl
push
or
and
xor
xchg
lods
pop
popf
push
jl
or
add
in
jns
std
enter
push
mov
lcall
jp
adc
lods
loop
mov
mov
call
mov
mov
push
dec
ret
push
ss
and
sub
mov
xchg
mov
xchg
rcll
js
mov
mov
mov
xor
jg
aas
fcoml
call
cmp
jge
jmp
ja
lret
dec
je
xor
js
imul
scas
mov
add
xor
fucom
pop
ljmp
inc
jl
or
xchg
mov
inc
scas
ds
dec
jmp
aas
jo
mov
pop
outsl
add
lret
mov
decl
cmp
pop
dec
rorb
add
das
fyl2xp1
nop
pushf
jnp
sbb
mov
xor
mov
out
dec
inc
rcrb
insb
cmp
sbb
mov
xor
sub
pop
and
xor
aam
mov
and
xor
cmc
in
ficomps
jge
lods
mov
les
int
cli
and
addb
xchg
das
jbe
shr
adc
cmc
rcrl
std
and
rcll
std
out
fstpl
push
dec
int3
imul
cmp
mov
adc
aaa
push
test
xor
xchg
ffree
sbb
mov
mov
imul
out
lret
xchg
or
out
push
jmp
out
push
aaa
rol
sti
jcxz
sbb
je
call
pop
subb
cmpsl
mov
mov
in
add
dec
mov
mov
stos
pushf
push
das
sub
or
add
push
mov
divl
add
ja
mov
dec
xor
sbb
stc
sub
pop
ret
inc
push
dec
gs
out
insl
lcall
in
shl
aam
jno
and
pop
push
iret
jg
sahf
pushl
push
pop
js
pop
lret
lock
or
sbb
dec
cmp
repz
add
fidivrs
push
insb
mov
xchg
jne
les
sahf
add
sbb
pop
minps
iret
or
push
sti
or
add
fcmovu
mov
aam
icebp
jecxz
sahf
dec
sti
add
lahf
insl
dec
fldcw
sahf
cltd
sbb
jae
mov
clc
outsw
stos
ret
fistps
notb
fstl
les
push
loope
test
or
repz
test
sub
hlt
xor
adc
pusha
or
cmc
mov
outsb
adc
adc
pop
fisttpl
dec
lods
cmpsb
xchg
adc
cmp
dec
mov
fisttpl
pop
call
sbb
inc
ret
cwtl
int3
cmpsb
pusha
jg
mov
push
pop
sbbl
push
add
outsb
push
jbe
outsl
ficompl
int3
lahf
sbb
jnp
fnstcw
mov
xor
jecxz
int3
lret
adc
sbb
sub
outsb
pop
and
dec
lea
add
jnp
subl
jae
mov
and
adc
dec
sbb
add
push
fs
sbb
adcl
stc
rcrl
adc
mov
mov
jg
arpl
push
bound
xor
sub
mov
push
pop
inc
jns
push
or
jno
ja
inc
xchg
add
stos
and
cmc
pop
inc
pop
sbb
dec
cmc
adc
lahf
mov
sbb
sbb
or
rep
or
lods
icebp
or
mov
mov
jecxz
cltd
sbb
xchg
inc
out
lcall
outsb
or
les
pop
add
fdivrl
inc
jns
test
dec
xor
cld
clc
sbb
xchg
adc
pop
aam
mov
xchg
imul
adc
cmp
jmp
cld
cmpsl
shlb
pusha
adc
jp
aaa
popf
fucomi
xor
xchg
and
std
sub
push
lret
jnp
mov
push
jnp
shll
jge
dec
mov
in
aas
jge
fnstcw
aaa
pop
enter
dec
hlt
test
xchg
rorl
test
add
inc
in
popw
pop
or
lock
imul
jmp
lea
xchg
mov
add
dec
pop
enter
lods
out
call
pop
dec
in
add
push
call
xor
sbb
fs
js
pop
jb
push
stos
pop
sub
xchg
sahf
shll
hlt
inc
jo
push
inc
mov
add
or
enter
and
stc
ljmp
adc
mov
inc
js
jns
pop
jg
dec
inc
lcall
stos
push
mov
enter
test
fs
xor
std
arpl
outsb
popf
or
popf
scas
push
nop
in
jp
scas
push
dec
xorl
pop
insl
mov
inc
and
leave
inc
mov
mov
mov
addl
loope
mov
dec
inc
aad
fimull
mov
lcall
iret
aad
dec
or
dec
jle
mov
stos
mov
push
mov
push
sbb
pop
std
dec
shlb
push
fldcw
mov
sub
dec
push
push
mov
sbb
loope
inc
cmpsb
inc
test
jmp
test
cltd
sti
clc
sub
adc
dec
dec
sahf
test
cmp
hlt
jp
dec
sub
popa
cmp
mulb
mov
pop
sar
sub
mov
mov
in
daa
cwtl
pop
or
aam
insb
sbb
xchg
les
iret
dec
lahf
cli
fstpl
jp
xor
jge
cmpsb
scas
cmpsl
sub
push
es
jg
dec
jbe
enter
mov
hlt
aas
insl
mov
xchg
push
shr
jecxz
or
into
testb
mov
pusha
loopne
ja
xorl
push
cmpsl
idivl
cmpsb
notl
pop
mov
lods
lret
push
lds
inc
sar
scas
inc
and
imul
popa
cli
push
xor
pop
jmp
pop
sbb
cmc
add
test
fmuls
adc
cmp
and
dec
ljmp
pop
testb
xchg
lret
pop
push
dec
scas
mov
xchg
fnstsw
mov
testb
inc
adc
and
inc
pusha
in
jb
push
dec
dec
sub
push
inc
and
pop
decl
fs
cwtl
in
sub
and
jge
pop
cmp
stos
dec
rol
mov
in
push
test
mov
jge
aad
pop
daa
pop
add
mov
or
mov
mov
icebp
inc
scas
scas
inc
dec
leave
mov
loope
mov
std
inc
enter
and
dec
std
add
mov
repnz
sbb
mov
insl
mov
fcoms
pusha
xor
push
jb
test
adc
popa
mov
pop
xchg
aas
sti
rorb
and
repz
loopne
jp
xchg
sbb
fptan
pop
pop
jo
sub
push
pushf
mov
pop
xchg
lea
mov
stos
add
aad
mov
pop
in
ljmp
test
test
fisubrl
fistl
lods
xor
into
mov
hlt
xor
push
xlat
test
add
bound
aam
jno
xchg
mov
pop
push
aam
in
or
stos
sahf
pop
fwait
xor
jmp
push
das
stos
scas
jp
sbb
fs
scas
hlt
out
cmp
cld
stc
jmp
mov
adc
pop
xchg
jbe
push
repz
in
dec
stc
adc
ja
std
out
adc
addb
xor
pop
hlt
ds
lock
jge
jnp
outsl
pop
mov
cmp
in
sti
pop
scas
clc
rolb
mov
mov
ds
pop
xchg
bnd
jmp
enter
dec
cld
sub
mov
addr16
into
andl
jnp
jp
aaa
fsubp
dec
push
sbb
cmp
shrb
js
shll
and
aad
or
jmp
in
jle
mov
inc
mov
in
mov
inc
in
sub
dec
push
mov
sbb
mov
inc
pop
lods
sbb
sub
xchg
imul
lcall
mov
push
iret
cmpsl
fidivrs
ss
repz
add
pop
rcrl
fs
outsl
xor
mov
mov
mov
mov
fwait
and
and
xor
lcall
xor
jne
popf
inc
sbb
shll
pop
push
cld
xchg
fstps
rcrl
loope
jae
sahf
mov
jbe
inc
pusha
cli
pop
fs
cmp
mov
mulb
sti
sub
xchg
cs
add
dec
mov
xor
cli
mov
gs
or
mov
ss
mov
sarb
push
outsb
jge
jle
sti
lret
mov
cli
cmp
stos
mov
xchg
aas
data16
out
xor
imul
rorl
jbe
jae
cwtl
push
cltd
mov
addr16
push
fwait
pop
mov
cs
fldcw
mov
mov
adc
mov
mov
movsl
jno
push
cmp
test
or
loop
pushf
pmuludq
insb
lds
xor
add
jne
int3
sub
out
dec
pop
mov
jecxz
lock
jecxz
nop
pop
pop
jg
sbb
and
in
sbb
and
mov
or
movsl
jle
or
test
mov
push
mov
xchg
pop
outsl
jae
out
add
pop
push
push
or
sti
pushf
sahf
mov
je
cmpl
jb
loopne
mov
out
mov
pop
and
mul
mov
lods
loop
add
bound
ds
jmp
shlb
out
xor
cmp
rcrb
pushf
adc
roll
fstpt
inc
xor
cltd
fiaddl
xchg
mov
test
push
ljmp
jecxz
xchg
ret
inc
cltd
mov
gs
pop
xchg
rcr
les
cli
jne
lods
aaa
mov
jmp
icebp
in
cli
les
mov
cmp
lahf
ja
pop
push
jge
push
inc
test
xchg
pop
ja
push
jnp
shrl
or
repz
mov
adc
adc
and
push
jge
pop
cld
bound
cli
es
jns
push
fs
stc
and
push
xor
imul
lods
in
lods
icebp
popf
outsl
sarb
sub
mov
loope
mov
insl
aad
mov
xor
dec
es
or
mov
rclb
jecxz
push
mov
inc
xor
mov
dec
mov
stc
shll
add
xchg
cmp
rcrl
push
push
or
clc
testl
daa
shl
movl
in
add
fwait
mov
sti
adc
shll
pop
add
mov
pusha
icebp
outsb
mov
pop
notb
sbb
test
jmp
leave
lds
cmp
cmp
bound
dec
jg
das
mull
push
lcall
fadds
mov
jecxz
idivl
xlat
sbb
sub
cld
clc
movsb
push
jmp
divb
mov
out
incb
and
jg
jno
add
inc
xlat
movsb
imul
mov
dec
cmp
std
mov
gs
xchg
jg
mov
in
test
mov
out
repz
mov
sub
lds
sbb
out
sub
in
pop
ret
popf
xlat
add
shll
call
or
add
js
and
gs
mov
adc
and
sbb
inc
aas
xchg
test
or
push
mulb
outsl
pop
out
enter
mov
ret
xor
cwtl
push
pop
dec
ficoml
xor
or
sub
mov
gs
je
aam
imul
loope
dec
jp
gs
sar
aam
and
loop
cmp
lret
imulb
dec
jge
xchg
xchg
stos
sub
push
push
movsb
mov
add
mov
ret
sub
shrb
stos
xor
xchg
add
mov
cmp
out
test
movl
movsl
outsl
sbb
cltd
mov
ljmp
mov
aaa
add
jle
out
idivl
sub
cwtl
repz
out
call
xlat
push
mov
mov
dec
dec
xor
add
inc
scas
jae
push
xchg
incb
mov
push
lods
rcll
mov
movl
xor
test
cltd
pop
addr16
xlat
dec
mov
ds
push
xor
mov
or
inc
mov
mov
cwtl
lds
movsl
loope
rclb
call
xchg
popf
arpl
sub
test
popa
jnp
push
jp
pop
popf
sar
cmpsl
sarb
mov
dec
outsl
aad
fcoml
sub
enter
addl
sub
faddl
pusha
std
mov
out
stos
ljmp
jo
mov
mov
int
xor
inc
jp
push
fnstenv
mov
loop
out
inc
lds
into
pop
sub
push
rorb
and
sub
sub
imul
fisubl
fs
cmpb
ljmp
hlt
popa
add
es
and
mov
mov
ds
enter
and
in
enter
sub
sub
jl
pop
ds
pop
adc
cmpb
mov
push
push
xor
mov
or
dec
mov
bound
mov
cmpsl
sbb
sbb
int
mov
scas
sub
mov
cmpsl
mov
pop
mov
jb
jle
ss
arpl
cmp
icebp
sar
out
andl
dec
xchg
xor
rorl
sbb
sbb
cmpb
enter
stc
iret
cmpl
scas
test
sahf
xchg
inc
inc
cmp
fdivl
cmp
jle
ljmp
or
jg
xor
add
jl
mov
outsl
fisubs
inc
enter
mov
mov
xchg
aas
mov
inc
adc
add
fwait
or
mov
aas
adc
gs
lret
stc
repnz
sarb
jnp
sbb
scas
and
loope
mov
sbb
push
in
movsb
pandn
sbb
inc
sbb
cmp
int
sbb
nop
fdivrl
sbb
and
into
dec
in
out
stc
jno
adc
sahf
xor
inc
test
lock
pusha
shl
mov
mov
dec
cs
push
mov
mov
push
mov
stc
add
fisttpl
insb
xchg
and
pop
jl
and
sti
mov
cmc
out
mov
cwtl
cmp
jno
adc
add
and
jge
xchg
lods
push
mov
add
insb
je
jp
xchg
sbb
push
orb
scas
xchg
and
divl
push
mov
lret
push
mov
ja
sbb
aas
lods
pop
shrb
xor
mov
mov
das
imul
mov
jno
js
aaa
jns
int
ret
out
pop
add
mov
mov
das
cmpsl
inc
or
xchg
cmc
push
pop
into
pcmpgtw
jnp
mov
jp
xchg
adc
rcr
dec
xor
repnz
adc
ficoms
or
out
pusha
stc
ret
cmc
lods
aad
mov
lods
movsl
andb
mov
push
add
inc
je
and
add
loopne
add
cmpsb
and
mov
mov
into
clc
iret
pop
sbb
cmp
pop
stos
cmpxchg
stos
adc
pop
xchg
jae
xor
lret
out
jns
adc
aas
les
test
mov
mov
out
cmp
lock
xchg
incb
out
inc
jae
adc
jo
sub
mov
dec
mov
dec
jge
sub
call
popa
enter
cltd
ja
test
test
push
pop
add
add
jbe
pushf
and
xchg
mov
fwait
loop
insb
insl
cmpsb
div
stos
int3
pop
ja
xchg
mov
mov
andb
pop
movsb
push
in
inc
mov
fnstcw
xchg
fsubs
stc
dec
xor
mov
out
xorb
shrl
int3
std
subl
add
out
or
lret
loop
das
cmp
cmc
xchg
outsl
aaa
dec
arpl
dec
and
cbtw
imul
pop
in
mov
pusha
inc
cmc
test
sahf
adc
rcrl
xor
pop
lret
mov
inc
xor
in
fs
pop
cmp
ret
jno
and
bound
mov
inc
mov
ret
mov
and
add
dec
jne
cmp
scas
test
aam
jno
aas
and
xor
cmp
jbe
pop
inc
jns
cmp
sbb
daa
ja
iret
mov
dec
movsb
mov
dec
lahf
mov
loop
daa
sbb
scas
aam
dec
jg
movsl
ret
xchg
jne
arpl
cltd
xorl
dec
sub
jnp
jo
cli
loopne
jnp
lock
mov
push
in
mov
rep
les
or
cltd
in
das
mov
aaa
ds
jo
cmpsl
adcb
adc
add
adc
in
pop
sti
pop
outsl
xor
jbe
out
push
dec
mov
pandn
cwtl
test
jmp
or
repz
cmp
imul
in
xor
hlt
jecxz
or
int3
scas
adcl
rol
outsl
out
push
jp
add
or
xchg
sub
aas
arpl
and
fdivs
cmp
xchg
xchg
jne
stc
cltd
mov
ss
push
xchg
sub
iret
mov
pop
cmp
mov
out
bswap
or
dec
push
cmpsl
rorb
std
lock
rcll
inc
sbb
adc
mov
mov
pop
test
iret
popf
jmp
xchg
test
icebp
xchg
adc
negl
ja
dec
rsm
fcoms
sti
mov
mov
mov
pop
rclb
movsl
popa
fldln2
jmp
call
repnz
aas
inc
jns
and
push
xchg
lock
in
dec
push
in
jge
fwait
jbe
push
inc
mov
test
mov
inc
cmp
sahf
clc
pusha
jnp
mov
push
mov
jp
jno
ret
pop
mov
xchg
movsl
mov
xchg
lea
mov
je
test
push
sbb
xchg
mov
int
lahf
mov
in
pop
sbb
mov
mov
pop
push
push
sub
jg
loopne
and
mov
lret
dec
mov
iret
shll
aam
outsb
jbe
or
out
sub
or
push
cmc
cmpsl
stc
out
push
jnp
decl
cmp
aaa
inc
adc
pop
clc
and
dec
mov
mov
cli
jne
scas
jl
xchg
lret
dec
sub
ficomps
movsl
push
cmp
decl
push
fsub
jno
lfs
push
notl
cmc
fucomp
std
clc
scas
ja
xor
pop
dec
fisttps
test
clc
xlat
xchg
loopne
pop
xor
jns
dec
jg
pop
and
imull
out
aas
sub
lret
pop
in
inc
mov
rolb
jmp
icebp
cld
aaa
shl
in
sub
jne
divb
sub
ss
ret
lret
cli
out
iret
xchg
les
in
daa
test
cli
pop
lods
dec
fistl
arpl
subl
out
cltd
les
ds
int
rorb
xor
out
pop
or
xchg
adc
outsl
fstps
cmp
sti
pop
add
setb
mulb
mov
fcompl
fstl
xchg
inc
mov
pop
lret
stc
jle
idiv
in
lret
push
and
pop
dec
mov
imul
flds
xchg
mov
sub
jle
mov
and
stos
mov
jnp
adc
in
ret
mov
cmpsb
push
js
inc
out
jecxz
aad
icebp
movsl
xchg
js
cmp
xor
sub
icebp
in
push
stc
add
js
popf
mov
out
dec
mov
mov
movsl
nop
rclb
icebp
sahf
mov
jb
mov
jnp
ja
rol
je
jle
pop
negl
lods
jge
stos
push
out
sti
xor
loop
outsb
jg
mov
out
pop
popa
outsb
jo
out
aam
enter
adc
cld
mov
jo
cmp
and
loop
enter
fcmove
mov
nop
sti
pop
jae
cmp
insl
xchg
aam
or
cmp
ret
std
and
out
and
stos
in
xchg
pusha
cmc
decl
shll
lds
dec
push
mov
and
leave
push
fadd
mov
jl
data16
sub
push
mov
xchg
dec
in
into
mov
cmp
xor
push
aaa
xchg
test
inc
jmp
lahf
iret
adc
fwait
cmp
push
dec
ljmp
adc
daa
sbb
xchg
outsl
xchg
mov
or
roll
pushf
push
std
sbb
insl
sub
test
cmp
push
loop
sbb
xchg
push
stos
fcomip
inc
in
jecxz
xor
sub
push
in
outsb
jecxz
roll
cmp
mov
push
jg
out
repnz
iret
xchg
into
addr16
out
sub
aaa
jno
mov
mov
scas
mov
mov
jns
lods
in
cmpsb
jmp
mov
roll
outsl
adc
mov
adc
call
mov
ljmp
int3
cmpsl
pop
stos
dec
push
jns
bound
je
pop
cld
or
testl
pop
pop
cmp
repnz
mov
cltd
and
stos
fdivl
pop
popl
cmpsb
push
ja
cmp
mov
hlt
pop
fs
mov
dec
push
outsl
stos
into
fcmove
loop
push
mov
pop
stos
mov
cmpsb
ficomps
and
inc
je
ds
jmp
jle
bts
cmp
jle
jo
mov
fisubrs
lahf
jo
shlb
repnz
clc
jg
int
in
fs
in
sbb
loopne
fcoms
lea
incl
lds
jmp
dec
or
pop
mov
sbb
pop
jno
xchg
push
outsb
imul
scas
jne
mov
inc
mov
shr
jb
push
in
sbbb
or
pusha
stos
xor
bound
aas
insb
rolb
in
push
push
imul
adc
mov
fmul
dec
lahf
movsl
insb
sub
dec
das
jne
lret
bound
jne
cmp
movsb
push
mov
in
inc
into
cmp
jge
in
roll
mov
add
push
rorb
inc
clc
inc
jl
icebp
and
and
jle
cmp
jmp
sbb
jmp
xchg
scas
inc
push
sahf
adc
sub
inc
push
cmpsl
mov
arpl
lret
cmp
insl
jg
dec
inc
xchg
xchg
fldl
pop
cmp
mov
pusha
xor
ret
daa
test
jnp
pop
mov
ret
insb
cmp
mov
inc
in
call
xchg
addr16
sub
adc
adc
in
out
mov
mov
in
pop
int
shrl
or
adc
mov
scas
cmp
jle
and
arpl
cmp
aad
and
mov
push
sbb
dec
cmpsl
push
stos
sbb
testb
mov
xlat
push
mov
ficoms
xor
js
das
or
sub
jne
emms
clc
pusha
sub
in
pop
cmpsl
dec
movsb
test
and
xchg
xor
xchg
out
in
lock
loope
or
and
sub
daa
push
xlat
inc
jo
int3
mov
std
lock
push
iret
rorl
mov
dec
gs
and
lods
lds
pop
cmp
mov
push
jmp
adc
out
pop
shll
shl
sbb
lds
mov
and
pop
scas
mov
into
lea
xchg
fsubr
test
std
push
cmp
into
cli
aad
loop
jg
in
cmp
xchg
mov
cmp
test
inc
mov
add
test
mov
sub
mov
call
xchg
jl
in
fwait
adc
push
fcom
jl
rcr
aas
and
ljmp
mov
daa
xchg
aam
int
push
scas
mov
in
cld
adc
movb
jbe
aaa
hlt
mov
rorl
mov
dec
rcrb
and
mov
add
mov
int
pushf
outsb
aas
into
push
adc
pop
inc
int
and
sarl
jbe
push
mov
les
mov
scas
inc
jg
adc
inc
push
push
pop
xlat
aad
xor
xor
loope
xor
jbe
cmp
nop
shl
jecxz
sbb
dec
push
inc
sbb
and
cmp
lret
aam
add
pop
icebp
mov
outsl
jne
bound
dec
pop
sar
mov
test
test
movsb
push
sbbl
xchg
dec
push
push
mov
addr16
mov
add
test
or
lret
push
in
sti
jle
cmp
pop
cmp
cltd
jnp
jmp
lods
and
pop
lods
dec
and
cmp
add
cs
mov
pop
add
dec
test
sbb
clc
outsb
mov
or
jbe
jmp
adc
lret
imul
out
cmp
dec
icebp
push
sbb
mov
push
fimull
sbb
bound
jge
pop
lahf
inc
int
and
lea
dec
daa
xlat
inc
push
sbb
rolb
shrl
aam
pop
out
mov
rcrl
ss
xor
xchg
pusha
adc
movsl
es
bnd
stos
cmp
int
out
cmp
pop
jle
pop
ja
mov
mov
movsb
fldt
jmp
jmp
cltd
lcall
in
imul
in
xor
jle
add
push
push
sbb
inc
cmc
dec
cmpsb
imul
out
mov
mov
xchg
outsl
aad
addr16
adc
sbb
sbb
dec
testb
lret
xlat
icebp
inc
xchg
cmp
lock
rorl
fxtract
addl
js
pop
mov
mov
jl
cld
int
cltd
loopne
hlt
mov
mov
shl
orl
or
gs
cmp
sub
icebp
or
ficomps
pushf
sub
push
xor
dec
xlat
pushf
into
inc
cmp
or
das
shrl
shl
dec
cmp
and
loopne
aas
xchg
es
repz
xorl
imul
out
sahf
or
add
das
popa
rcrl
and
push
mov
fwait
inc
sbb
dec
std
negl
xchg
dec
pushl
in
push
pop
sbb
lods
mov
xchg
out
jl
sarl
hlt
fcmovnb
fcmovnu
add
jle
pop
push
sub
cltd
sti
inc
aas
movsb
fistps
or
push
mov
lret
popf
fisubrs
leave
lahf
nop
xor
ret
sub
mov
lret
ljmp
sti
inc
lcall
cltd
inc
ljmp
scas
das
push
lods
sbb
push
sbb
mov
es
pushf
fstpt
adc
mov
std
pop
cli
pop
push
pop
fdivs
icebp
sbb
repz
ds
aas
test
pop
fst
loop
roll
js
jo
adc
shll
fwait
mov
hlt
pop
aad
stos
inc
and
shlb
push
mov
out
mov
push
sub
sbb
jecxz
mov
jge
lea
fisubrl
lods
notl
fidivl
test
fildl
mov
mov
mov
push
mov
pop
xchg
jl
dec
push
imul
and
out
sbb
stc
mov
fists
pop
jecxz
fimull
outsl
ss
aas
mov
lea
lods
mov
prefetch
adc
cmpsb
loop
inc
push
sub
cmp
popf
pop
outsb
add
das
xchg
ret
pop
jnp
stos
or
lods
icebp
inc
pusha
jno
cld
push
ret
push
mov
add
sahf
jle
mov
popa
push
je
mov
xchg
and
pop
scas
fdivrp
add
test
and
ljmp
xchg
clc
and
call
fiaddl
cmpsl
sbb
mov
icebp
orl
in
sbb
mov
and
lahf
adc
jbe
shl
aad
and
add
sahf
sbbb
inc
aas
into
das
inc
push
aam
shr
sub
movsb
xchg
lahf
add
rclb
imulb
je
xor
outsb
xor
jno
aam
inc
sahf
sub
mov
dec
ss
std
and
or
dec
scas
fstpt
xor
pushl
jnp
ret
jl
fldl
repnz
fnsave
xchg
pop
fucomi
xchg
mov
fstps
mov
push
clc
repnz
negl
xor
mov
aas
dec
outsb
adc
mov
xor
aaa
outsb
add
out
mov
or
and
cmpsb
inc
aad
lea
or
orl
icebp
mov
xchg
push
xor
mov
push
mov
std
pop
dec
mov
inc
test
pop
jns
mov
lods
scas
mull
repz
xchg
jge
addb
rcr
into
loop
fstl
cmp
leave
pop
cmp
int
jp
inc
addb
arpl
inc
cmp
mov
xor
ljmp
stos
clc
lock
out
xchg
jmp
daa
stc
andl
pop
out
inc
push
jmp
add
sub
scas
fsubs
into
negb
testb
fwait
jmp
ret
popf
mov
ss
jns
xchg
imul
jnp
cmp
in
int3
pop
call
mov
cli
push
lock
sarb
cltd
lock
fdivr
mov
pop
pop
cmpl
jl
inc
jns
js
ja
sbb
pop
add
out
jb
or
or
mov
insl
ds
add
test
mov
ret
push
icebp
xchg
stos
xchg
adc
xchg
dec
repz
push
imul
movsl
sbb
imul
jne
or
insb
std
dec
and
xor
nop
movsl
jb
fwait
inc
pushf
loop
cmp
cmpsl
sub
cmp
push
adc
or
movl
mov
int3
into
lea
fsubl
xchg
test
pop
xchg
mov
lret
pop
jp
push
mov
out
xchg
in
dec
pop
sub
pop
and
fwait
or
scas
lahf
inc
and
pop
xchg
sub
jmp
add
sarl
push
xor
rorl
pop
andl
push
int3
xor
into
nop
xor
cs
dec
lods
inc
cmc
pop
pop
push
xchg
fdivl
aaa
pop
and
and
pop
leave
and
fldenv
push
push
test
sbb
stos
rcll
adc
push
pop
inc
mov
push
pop
inc
add
and
mov
inc
fidivl
movsl
inc
mov
add
mov
mov
jp
mov
popa
and
imul
out
fs
pop
fsubp
jnp
into
jg
fmul
int3
out
aaa
cmp
sbbb
int
aaa
insl
fs
shll
shl
nop
dec
in
jl
pop
fs
call
mov
call
out
add
or
sahf
shrb
or
and
shrb
sahf
sbb
and
je
dec
rolb
push
xchg
xor
sbb
test
ja
fwait
push
mov
pushf
pop
rcll
movsl
dec
and
cmpsl
int
mov
and
mov
fstp
and
xchg
cmc
xchg
lods
xlat
xor
dec
pop
push
iret
outsb
xchg
cmp
adc
xchg
clc
sbb
jbe
cmp
or
xchg
ja
push
xchg
leave
push
xor
pop
mov
xchg
imul
and
mov
dec
loop
xor
mov
lock
daa
pop
adc
adc
jne
shld
push
fldl
sub
pop
aad
mov
pop
addr16
ror
sub
out
jle
bound
in
negl
outsl
jno
sbbb
jecxz
add
repz
sbb
sbb
and
sbb
das
mov
mov
jbe
mov
xlat
lock
push
movsl
jge
popf
jge
aam
jnp,pt
sbb
mov
or
add
adc
inc
out
add
fistpll
xor
xchg
inc
add
inc
outsl
lahf
add
enter
sbb
xor
shlb
ja
outsb
js
daa
insb
xchg
fldl
ljmp
dec
rolb
add
in
bound
xchg
das
mov
in
fs
xchg
arpl
pop
jo
dec
lret
adc
icebp
insb
aas
ja
inc
or
cli
lcall
push
push
out
sbb
mov
sysenter
pop
iret
faddl
lock
pop
std
push
ret
scas
stc
or
push
adc
and
cmp
std
test
or
rorb
ret
in
mov
push
xchg
in
divb
sub
jl
repz
leave
pop
inc
insl
fcmovb
push
aam
pop
push
jo
mov
iret
pop
jge
outsl
aam
outsl
insb
ds
arpl
xchg
stc
scas
add
inc
pop
pop
add
in
xchg
fstpt
sti
add
addr16
push
loopne
fnstsw
scas
dec
orl
data16
rol
je
pop
cmp
pushf
mov
and
xchg
mov
mov
aaa
pop
fsts
or
fucomip
mov
mov
inc
ds
incl
std
jle
mov
int3
xor
subl
sbb
jbe
mov
mov
push
push
or
fsubp
dec
sbb
aad
mov
int3
mov
sbb
scas
cli
mov
push
ss
and
sbb
cmc
ret
add
adc
or
sbb
test
daa
adc
mov
pop
js
jae
add
psadbw
jb
add
mov
xchg
jle
incb
insb
shl
iret
test
push
jo
pop
mov
sbb
cmp
leave
cmpsb
sub
adc
inc
cmpsl
jl
arpl
pop
les
xor
loop
add
jae
mov
xchg
push
ja
fwait
pop
push
call
pushf
or
cli
add
xor
xorl
stc
sub
mulb
out
sbb
mov
call
adc
sub
push
popf
push
adc
and
aam
add
cmp
fwait
xor
aam
rcrl
aad
xor
aam
pop
add
jae
xor
mov
in
call
cmp
add
negb
sbb
inc
icebp
xchg
cmpsb
mov
jne
pop
adc
lcall
inc
cld
sbb
cld
les
cmpsb
pop
pop
nop
es
xchg
sbb
or
and
cmpb
sahf
iret
movsl
orb
or
negb
xchg
dec
push
cld
enter
popf
lcall
loope
sbb
inc
fwait
cmp
test
jle
imul
add
push
mov
jecxz
xchg
pop
lods
fidivrs
ds
cmp
stos
inc
sbb
pop
sbb
mov
mull
insl
sarb
mov
jbe
xchg
cwtl
adc
inc
adcl
push
repnz
ss
cmc
mov
repnz
call
outsb
mov
pushf
lock
and
inc
pop
jge
jle
iret
into
rcr
sti
xor
das
adc
or
aaa
dec
mov
movsb
cli
and
pop
jae
adc
fmuls
out
pop
and
xor
in
sub
nop
push
adc
mov
sbb
pop
clc
mov
dec
inc
inc
push
jns,pn
aam
xor
inc
mov
popf
sahf
jno
cmp
xor
lods
test
popa
inc
icebp
inc
gs
xor
xchg
jae
test
and
ljmp
lcall
add
xchg
into
cmp
mov
and
mov
mov
sahf
adc
aaa
push
xor
mov
aad
jne
out
sub
jge
pusha
cmp
fwait
push
pop
lcall
clc
hlt
jmp
fdivrs
lods
push
or
mov
movsl
mov
out
ret
in
fistpl
jo
mov
ret
cli
dec
mov
dec
ret
mov
push
fidivl
sbb
bound
sbb
sbb
sbb
arpl
aaa
sbb
fmulp
push
push
mov
ret
mov
cli
sbb
js
lea
ret
aas
sbb
in
gs
in
mov
in
mov
das
inc
xchg
mov
gs
in
fidivl
sub
icebp
outsb
fnstcw
lods
ret
ja
fs
lock
jbe
lods
add
xchg
aas
jb
scas
cmp
push
out
popf
fimull
dec
push
fwait
js,pt
sahf
xchg
dec
dec
cmp
mov
mov
out
add
push
sbb
push
sub
push
aad
inc
fdivl
lret
incl
sbb
sub
mov
loope
cmp
mov
mov
stos
dec
jae
or
in
es
js
stos
push
xchg
mov
inc
inc
pop
pushf
repnz
std
dec
and
outsl
jno
enter
mov
inc
dec
das
aaa
adc
inc
mov
scas
ljmp
and
das
aas
mov
or
shll
pop
ja
xchg
test
inc
loop
dec
repnz
pop
shll
xor
adc
xchg
or
fisubs
lahf
mov
push
cltd
fdivs
xor
cmc
sbb
lea
fistpll
mov
xor
push
mov
adc
inc
inc
lea
je
push
mov
fisubrs
outsb
inc
nop
inc
mov
outsb
test
or
js
sbb
cld
stos
in
cld
outsb
movsb
sbb
add
loope
filds
mov
out
aaa
push
jo
insl
inc
frstor
jnp
mov
shl
aam
cmp
das
outsl
dec
cmp
neg
fstps
jl
icebp
mov
rcll
pop
cmpsl
pop
add
push
push
addr16
out
add
fisubs
mov
sbb
add
xor
jmp
das
test
mov
ja
or
mov
iret
cmc
inc
and
xor
mov
in
in
fsubrs
mov
sub
in
test
idivl
push
lods
arpl
iret
jno
ljmp
adc
pushf
mov
loopne
inc
sbb
dec
popa
shl
fsts
jno
lods
lret
iret
dec
testb
imul
sbb
sahf
pop
cmp
jo
out
outsl
xor
outsb
popa
and
std
or
lret
cmp
xchg
mov
movsl
mov
mov
mov
decl
lock
push
xchg
xchg
push
push
ja
mov
jb
stc
hlt
shl
pop
aas
pop
aad
stc
mov
mov
dec
cs
mov
aaa
movb
fxtract
cli
mov
mov
js
movsl
lock
inc
push
loop
clc
xchg
jl
inc
movsb
lcall
scas
mov
mov
xchg
pop
push
push
pusha
outsb
jb
movsl
lret
dec
cmp
sub
incb
stc
dec
pop
fstpt
js
pop
hlt
sub
dec
jl
lock
in
sub
loop
add
mov
cmpb
pop
jmp
leave
lret
mov
leave
adc
outsl
xor
fwait
xchg
pop
sti
cld
lret
aaa
frstor
pop
ds
popa
divl
js
adc
and
cmovns
sbb
ljmp
push
loope
sub
repnz
mov
int3
test
adc
arpl
popa
push
mov
lret
mov
js
xor
js
mov
push
clc
mov
mov
ss
lods
mov
fdivs
mov
xor
aaa
lods
push
aas
out
mov
lods
mov
and
daa
lds
jb
and
sub
and
adc
adc
mov
pop
xor
push
push
and
test
and
push
lods
stc
call
pop
pop
out
hlt
adc
xor
dec
push
push
dec
addb
mov
pop
fs
dec
sub
daa
jecxz
je
std
outsl
in
mov
mov
or
cs
cmp
loopw
neg
mov
insl
fcmovnbe
lret
enter
lcall
mov
lahf
jbe
cld
loope
inc
stos
push
dec
js
mov
loopne
inc
inc
push
xchg
xchg
nop
lods
iret
hlt
xchg
xor
lahf
xchg
adcl
clc
push
pop
daa
cwtl
xor
cmp
mov
lds
mov
js
pushf
sbb
jo
repz
and
sub
rol
cld
pop
inc
outsl
mov
loop
add
xchg
lock
cmp
das
jge
mov
jne
movsl
adc
fdivs
test
loope
jnp
mov
or
jnp
jb
sub
adc
sub
pop
cmp
mov
mov
ds
add
jae
shrb
jle
inc
sahf
lahf
pop
xor
inc
mov
mov
jg
jg
pop
xchg
in
add
fisttpl
jbe
mov
js
jnp
inc
sahf
pop
mov
loopne
loop
lret
xor
pop
ja
add
call
push
das
pop
jbe
cmp
cmpsl
gs
lahf
lods
shr
lods
shl
adc
fidivs
fdivs
or
ret
ljmp
jno
pop
mov
rcrl
sbb
or
push
mov
lea
jg
mov
sbb
mov
xchg
cli
pop
cld
sub
dec
mov
pop
pop
aas
pop
movsl
jg
imul
push
cmp
call
adc
arpl
mov
fsub
add
divl
cmpsl
jp
incl
arpl
cmpsl
aas
jnp
push
pop
stos
or
jo
add
inc
cmpl
rdtsc
xor
or
mov
mov
ret
dec
mov
jo
imul
mov
mov
in
and
jae
int3
ficompl
jecxz
into
push
arpl
sbb
push
and
in
add
repnz
cmp
adc
out
jns
int
xor
mov
cmpsl
test
sub
in
pop
xchg
jbe
insl
int3
leave
arpl
imul
push
jae
in
jmp
inc
mov
adc
pop
push
test
adc
fnstcw
jno
aas
roll
and
xor
jae
sub
sahf
stc
jecxz
mov
les
xor
aas
xchg
push
fistpll
inc
test
jae
sbbl
cmp
out
adc
insl
or
ja
int
minps
inc
pop
lock
insl
mov
ja
sti
xor
repnz
aam
inc
mov
sqrtps
pop
jle
and
or
dec
pop
push
imul
inc
iret
jne
sbb
push
mov
aas
mov
cli
or
push
stc
xchg
cmp
mov
ret
fcomps
dec
pop
jnp
cld
lock
addb
divb
xor
sub
cmp
adc
jp
add
scas
ret
out
mov
aam
pop
lret
aas
and
push
cwtl
ja
jl
loope
aad
add
addr16
mov
in
mov
scas
push
pop
pop
stos
sbb
loopne
xchg
flds
sub
testl
nop
lea
rcl
sti
popa
int3
jnp
data16
mov
xchg
test
or
cs
mov
and
out
jo
sub
inc
sbb
subl
xor
andb
call
fwait
lret
fwait
sbb
and
pop
push
cli
inc
xor
push
rcrl
pop
jecxz
xlat
iret
in
mov
push
jae
xor
mov
lret
mov
mov
es
test
push
cmpsl
mov
dec
dec
cmp
enter
jmp
ljmp
sub
loop
cmpsb
xlat
mov
stos
jae
mov
data16
mov
lods
add
inc
bound
rcrl
shr
mov
leave
jge
lret
push
lret
dec
dec
mov
and
dec
into
outsb
ss
mov
das
mov
inc
popf
mov
outsl
and
aad
ret
cltd
mov
sub
adc
inc
mov
pusha
or
adc
mov
hlt
add
hlt
fcoms
mov
inc
insl
sbb
xlat
popf
adc
dec
mov
cltd
and
cli
xchg
insl
rclb
push
sti
mov
push
mov
imul
mov
mov
pop
hlt
adc
shll
decb
popa
adc
fsubr
ret
pop
mov
pop
lret
sti
jl
sahf
pushf
and
nop
test
cld
mov
xchg
in
js
jmp
sarb
jp
cmovl
jecxz
jno
rol
cmp
push
outsb
imulb
pop
addps
mov
mov
pop
and
enter
mov
fidivrs
pop
shll
pop
imull
jle
imul
sbb
push
iret
pop
into
test
ljmp
or
mov
out
fs
dec
ret
dec
ret
pop
inc
lahf
popf
cltd
nop
in
clc
jne
xchg
insb
jmp
push
push
call
dec
sub
clc
and
cld
cltd
int3
sahf
leave
test
mov
dec
xchg
sti
mov
inc
jnp
jmp
dec
push
xor
loope
rorb
in
loop
jne
mov
jg
mov
cmpsl
mov
pushf
in
xchg
mov
cmp
js
add
pop
jne
rorb
lret
fnstcw
test
add
pop
fwait
aam
ss
std
or
fnsave
cwtl
cmpb
mov
repnz
je
cmpsb
jae
mov
jge
push
mov
or
cmp
pop
sub
cmp
jmp
cmp
outsl
jle
jno
add
jno
mov
icebp
jb
xchg
jge
outsb
push
leave
stos
int3
pop
into
sbb
push
mov
lds
sbb
mov
aas
sbb
jmp
jecxz
in
adc
sahf
and
inc
iret
aas
sub
dec
sbb
shl
mov
in
mov
in
or
xchg
xchg
fwait
inc
stos
mov
and
cld
add
add
mov
add
fdivrl
dec
sarb
fs
xor
das
push
lcall
adcl
mov
testl
loope
icebp
popl
sti
inc
cs
xchg
loop
bsf
jecxz
push
aas
xorb
and
add
sahf
pushl
jo
in
cmp
push
jnp
xchg
or
sbb
loopne
jns
fbld
psubusw
insb
add
jp
pusha
mov
pusha
cmp
inc
adc
stc
and
cmc
add
js
add
aam
mov
arpl
mov
sub
jae
pushl
les
mov
xor
out
jg
add
iret
mov
mov
and
inc
idivl
or
inc
cs
cmp
mull
fwait
in
loop
adc
lds
inc
cmp
dec
out
js
mov
jmp
mov
add
pop
jno
cmp
cwtl
add
push
pop
mov
dec
push
mov
scas
inc
mov
adc
xchg
hlt
repnz
inc
pop
mov
pop
iret
push
xlat
dec
outsl
addr16
xchg
jp
sbb
scas
or
adc
mov
out
xor
fwait
dec
mov
or
dec
in
call
aas
mov
dec
repnz
rorl
jg
fwait
in
lcall
xlat
imul
jnp
stos
sbb
std
incb
and
out
mov
fs
sbb
sahf
in
mov
cmp
mov
or
outsl
sub
pop
out
ret
mov
lock
sbb
test
xchg
les
add
movb
xor
or
aam
pop
adc
or
dec
mov
mov
fimull
push
cmp
sbb
enter
pop
cmp
pop
dec
inc
cmp
roll
loopne
mov
dec
push
push
cmpsb
mov
outsb
and
loop
jb
cmp
or
fcoml
adc
pop
test
mov
jmp
sti
out
movb
xchg
ja
push
mov
mov
cli
mov
add
or
cmp
outsb
insb
push
inc
cmp
mov
lahf
push
xor
lds
rcl
std
insb
jb
pop
cli
xor
mov
push
jl
cwtl
lds
imul
cmp
leave
jbe
or
mov
stc
and
and
jb
mov
popa
movsb
bnd
insb
or
scas
roll
aas
in
addl
testl
das
dec
xor
in
push
arpl
cmp
mov
pop
mov
fidivrl
ds
jno
inc
test
inc
dec
cwtl
stc
roll
inc
cltd
or
lret
xor
jns
dec
mov
fildl
ljmp
adcb
sti
mov
inc
fcoms
jns
movsb
push
sbb
cmp
add
and
sahf
cmp
rcl
clc
addl
nop
push
ret
in
mov
xor
pop
cmp
xchg
mov
jl
in
mov
daa
subb
jno
out
add
and
mov
rcl
add
and
cmpsl
aad
mov
jne
icebp
sub
in
dec
test
mov
out
xor
into
outsb
ss
stos
cmc
push
adc
enter
pop
ds
mov
push
cld
mov
bswap
mov
mov
shll
insl
pop
sbb
pop
cmp
bound
xlat
xor
push
into
pushw
in
popf
pop
ss
mov
das
dec
das
test
xor
repz
insb
adc
jns
adc
and
xlat
xchg
cwtl
mov
sahf
test
mov
pop
das
and
mov
add
mov
mov
aam
pushl
shlb
jnp
pop
neg
out
adc
jl
mov
loop
mov
xchg
jno
arpl
inc
push
lret
lret
inc
mov
inc
inc
lahf
daa
mov
mov
mov
pushf
add
cmp
in
lcall
push
push
ds
call
or
ja
sbb
jp
cwtl
cmp
loope
lret
mov
and
mov
xor
xor
pavgw
or
ret
add
xchg
lret
cltd
sbb
mov
popf
out
hlt
jnp
xor
jae
jae
push
xlat
lds
iret
andb
int3
xor
outsb
add
out
dec
in
mov
les
stc
dec
cs
inc
out
jg
adc
xlat
add
jnp
ljmp
lods
call
mov
imul
sti
inc
and
push
xor
xlat
adc
sahf
rcll
xchg
push
push
int3
enter
sbb
xchg
sbb
pop
mov
mov
push
pop
mov
jle
sub
mov
pop
push
sbb
inc
movsb
xchg
push
mov
insb
clc
jnp
cmp
adc
les
incl
rorl
out
push
orps
and
mov
sub
test
cli
rolb
lds
xor
lahf
or
lret
jo
pop
adc
sbbl
pop
scas
inc
sub
ficoms
jmp
sbb
popf
jge
inc
fabs
cmp
mov
push
fnstcw
sti
out
les
aam
sbb
int
pushf
push
xchg
dec
pop
fwait
push
sub
and
das
cmp
sub
ret
pop
ds
cmp
cmp
or
call
mov
jns
fistl
rclb
arpl
rol
out
mov
mov
push
lahf
je,pn
push
fucom
add
mov
push
loopne
push
mov
jg
mov
imul
inc
xor
inc
xchg
test
mov
sqrtps
lea
mov
dec
mov
flds
mov
or
sbb
ja
pop
xor
push
in
or
mov
lods
imul
mov
in
push
fldl
imul
pop
aaa
inc
push
daa
mov
mov
fidivs
mov
push
scas
xchg
sbb
lret
or
testl
rcll
inc
lcall
idivl
cli
movsl
and
fwait
mov
jmp
pop
popa
popa
jg
ja
sub
jne
int3
adc
fildl
out
aas
frstor
mov
fldt
outsb
jo
std
mov
sub
sbb
cs
out
sbb
cmp
outsl
lea
cli
inc
pushf
lret
insb
push
pop
xchg
das
aaa
inc
sub
out
sahf
insl
popa
or
int
insb
imul
scas
adc
les
imulb
stc
mov
out
repnz
out
cmc
jge
dec
mov
negb
jl
jge
add
repz
push
lret
loopne
out
mov
into
aam
out
add
xor
in
out
dec
xor
repz
mov
jo
imulb
jns
inc
mov
test
pop
dec
mov
scas
popa
cmp
xchg
stos
mov
gs
into
pop
mov
jecxz
ds
pop
pop
aas
adc
cli
bound
inc
mulb
jns
or
mov
pop
dec
iret
xchg
sahf
xchg
jmp
insl
lret
mov
jl
out
or
idiv
and
sub
clc
push
sti
jmp
lret
test
cmc
mov
inc
dec
pop
mov
and
mov
cmp
jp
mov
jg
jns
add
loopne
mov
in
mov
mov
decl
and
inc
push
mov
adc
inc
xchg
xor
jge
pop
lods
sub
out
push
push
xor
jl
mov
lcall
roll
and
push
fisttpl
outsb
jb
jmp
xor
add
in
jae
jbe
mov
int
cs
jno
xchg
mov
lea
movsb
sub
lret
or
test
pcmpeqd
fcmovb
xor
aas
mov
shrl
xchg
insb
jnp
aas
fs
inc
rorl
jns
pop
mov
addl
iret
enter
push
inc
loope
mov
addl
pop
dec
cmp
pop
push
std
mov
push
out
clc
add
mov
adc
stc
sbb
adc
adcl
testl
pop
xor
xchg
and
jae
or
subl
cmp
xchg
jbe
enter
cs
icebp
jle
mov
push
dec
clc
mov
pusha
insl
sti
or
cmc
lea
test
insb
movb
sbb
xchg
lds
dec
out
lods
outsl
in
sbb
enter
push
cmp
jae
inc
mov
mov
pop
jg
rclb
jmp
and
test
ret
ds
rolb
dec
je
adc
cld
ret
paddw
dec
jle
inc
adc
mov
jmp
pop
add
xor
divl
mov
lahf
fcmovu
out
lea
mov
fstpt
or
iret
int
fwait
adc
mov
ss
ret
int
les
aaa
iret
xchg
jne
jp
scas
cwtl
xchg
mov
ljmp
mov
aas
cmc
cmc
mov
mov
pop
cmc
inc
dec
xor
mov
xor
pop
pop
icebp
cmp
mov
xchg
stos
arpl
std
push
mov
mov
cmp
stos
or
add
addb
mov
inc
jg
or
popa
mov
fs
loopne
push
and
mov
push
sub
cwtl
pop
sbb
iret
stos
fxch
out
out
adc
cmp
push
data16
lcall
cmp
repnz
scas
dec
mov
jge
clc
inc
sbb
push
dec
aad
fs
lds
or
test
pop
xchg
sbb
mov
sbb
xor
arpl
subb
lods
adc
xor
loopne
das
push
out
data16
pop
lret
xorb
cmp
cmpl
rorb
cmp
push
jns
out
or
inc
jg
sbb
jb
stc
add
sbb
xor
and
cltd
into
and
scas
shll
incb
add
mov
test
hlt
mov
xchg
pop
xchg
rcll
loope
lea
and
pusha
dec
cmp
dec
jp
outsl
aaa
clc
and
mov
clc
pop
xchg
lods
outsl
lds
jl
pushf
dec
fwait
cwtl
dec
cwtl
aad
fbld
jmp
cmpsl
xchg
rolb
lods
cli
xor
out
lcall
data16
clc
inc
adc
mov
inc
outsl
addr16
pop
call
rolb
scas
movsl
xchg
or
movb
lods
or
pop
and
arpl
call
xchg
and
cli
and
bound
and
stos
out
loop
fwait
sbb
ret
mov
fs
xor
cmp
ficoml
lahf
sub
pop
mov
dec
xor
clc
cmc
inc
and
js
pop
adc
mov
jae
stos
jg
sahf
jp
out
inc
fwait
lock
ljmp
sub
int
mov
xor
hlt
das
add
adc
mul
and
fimuls
out
xchg
int
jl
or
mov
loop
jecxz
dec
xchg
or
subl
das
xchg
aaa
jb
loopne
addl
repnz
mov
mov
stc
lock
movsb
fdivrp
dec
xchg
jo
shll
in
stos
xchg
in
pop
dec
sahf
out
cmp
into
or
std
push
dec
jb
dec
shrl
mov
jmp
inc
in
or
adc
pop
dec
add
push
inc
cmp
cmpsl
sbb
inc
mov
pop
pop
sbb
dec
shrb
mov
pop
jno
add
div
out
in
nop
pop
idivl
test
cmpsl
add
push
dec
out
into
cmp
mov
mov
pop
jo
int
push
mov
inc
repnz
lcall
xchg
adc
adc
insl
and
gs
sub
out
add
int
mov
jno
and
movsl
pop
jnp
movl
sbb
mov
test
cli
inc
movsl
pop
lret
idivb
and
loopne
movsl
mov
ljmp
xchg
fs
sti
or
mov
loop
sbb
je
aaa
lret
push
jo
lcall
popa
fsqrt
pushf
ja
stos
jne
loopne,pn
pop
jge
or
or
outsl
popf
sbb
xor
jg
dec
cs
mov
or
jne
mov
push
cmp
jnp
xor
cmc
jmp
xor
cmpsb
btc
test
stos
mov
mov
mov
mov
cmpsb
mov
aaa
jne
or
sbb
jnp
adc
iret
rcrb
test
scas
cltd
adc
ds
int
in
scas
in
in
xor
jge
jmp
out
mov
jp
js
mov
lcall
dec
add
jnp
sbb
mov
add
data16
daa
cmp
mov
das
lea
mov
lock
mov
cmp
mov
dec
loope
out
or
xchg
test
inc
lahf
rcr
or
setnp
mov
mov
mov
jle
imul
mov
inc
mov
sbb
ljmp
or
sahf
jo
dec
icebp
sbb
sti
scas
adc
pop
adc
mov
icebp
cltd
test
mov
mov
pop
scas
subl
pop
data16
call
data16
ret
shlb
jbe
and
mov
adc
idivl
lock
bound
jecxz
decb
adcl
hlt
in
mov
sahf
cli
aam
out
inc
movsb
pop
xor
xchg
add
cli
into
test
lea
mov
test
push
das
pop
mov
sub
cmp
mov
add
push
leave
mov
mov
jno
and
lea
cli
pop
dec
sbb
mov
les
or
int
mov
add
std
xor
test
in
sahf
call
add
sti
mov
pop
cmp
xor
fmuls
inc
pushf
aad
mov
pop
icebp
frstor
xchg
sub
jo
test
push
icebp
add
mov
insb
lcall
pop
rcll
mov
cmp
std
ret
jmp
mov
jecxz
mov
ljmp
loopne
mov
fs
sbb
std
add
pop
jns
pop
in
in
lods
aaa
cmpsl
int
aaa
insl
xchg
testl
mov
pop
lds
and
mov
testl
decl
insl
ffreep
mov
adc
frstor
clc
int
sub
mov
xor
aaa
mov
add
mov
xchg
mov
push
mov
mov
and
test
push
fists
sbb
out
or
cli
mov
xchg
add
popa
aam
daa
pop
les
repnz
clc
or
cld
aaa
cmpsb
xor
xchg
and
int3
fiadds
sub
mov
push
push
bound
and
add
icebp
dec
scas
push
sbb
test
insb
jb
ja
testl
mov
leave
adc
inc
add
mov
popa
mov
fstpl
mov
out
pusha
inc
jecxz
dec
lret
call
fwait
shrl
push
outsl
xchg
fwait
and
es
sub
inc
ret
mov
call
mov
clc
and
and
fmul
mov
fucom
cmp
xor
and
test
push
or
add
push
div
cmp
dec
push
mov
add
and
decb
arpl
loop
jbe
xchg
cmc
add
mov
int
jo
or
mov
in
and
lahf
aaa
jl
xor
ffree
adc
adc
dec
mov
lahf
inc
cli
and
and
insl
rolb
pop
inc
push
adc
out
or
loopne
fmuls
cmp
jnp
scas
test
test
inc
mov
test
lahf
push
xchg
fists
push
repz
sub
lret
repnz
mov
mov
subb
jns
adc
xor
bound
push
inc
jp
sub
add
push
pop
das
dec
jns
mov
inc
mov
push
and
js
and
shr
pop
movb
hlt
sbb
fsin
add
mov
add
dec
cltd
pop
cmp
xchg
xchg
cli
jb
out
mov
shr
pop
iret
int
lret
je
subl
cmpsb
sub
and
inc
pop
xchg
cmc
xchg
lcall
jb
mov
lods
cmpb
or
in
and
and
mov
dec
jp
outsl
icebp
mov
std
or
sar
and
pop
cld
fists
outsl
sti
pop
push
sub
push
std
xor
mov
jg
fistpl
xchg
imul
repz
lods
mov
lret
sub
xlat
je
data16
movsl
push
cmpsl
xor
cld
and
jmp
sub
fmull
jmp
push
xor
int3
mov
ljmp
les
cli
adc
mov
and
ret
fstps
scas
jbe
inc
movsl
cld
out
sbb
cmpl
out
test
test
mov
jmp
mov
sbbb
mov
stc
xchg
in
incb
adc
lcall
mov
aam
cltd
lock
cmp
ds
loope
sub
lock
mov
xchg
pusha
ds
mov
int
xchg
and
aaa
idivl
cmp
adc
or
mov
push
push
xor
xchg
sbb
jmp
mov
jle
and
fnstcw
mov
ret
into
rol
repnz
lcall
ret
xor
xor
test
sbb
arpl
cltd
out
std
mov
lcall
pop
or
cmp
fisttps
out
jne
insb
adc
xchg
ja
and
xchg
mov
mov
test
std
jge
adc
nop
and
std
cmpsl
hlt
ror
andb
ljmp
gs
jle
sbb
or
push
push
insl
dec
adc
popa
dec
and
push
outsb
xor
popf
pop
cmp
jne
ret
jns
jge
sub
test
xchg
sti
lea
adc
pop
add
xor
dec
and
and
mov
fidivrs
lds
movsl
jno
jns
imul
into
fadd
mov
pop
mov
mov
aad
add
sbb
shl
inc
sub
dec
imul
mov
mov
lahf
pop
test
lea
sbb
aas
lcall
mov
div
int3
dec
inc
idivb
xor
sti
into
outsl
insb
sub
mov
mov
popf
repnz
std
rdtsc
out
and
js
cmpsl
clc
push
lds
and
xor
jl
add
or
loopne
jg
sub
mov
push
fs
jns
mov
mov
cltd
in
jg
sahf
fisubs
fadd
inc
je
mov
add
outsb
mov
jmp
rcrl
cs
xchg
pop
call
adc
aad
pop
cmc
int
lret
js
std
push
push
and
xor
call
lods
sub
in
js
jo
jnp
pop
mov
mov
jmp
add
scas
xlat
ss
in
jne
neg
insl
pop
xchg
push
lea
aad
adcl
lods
push
mov
stos
ret
jp
scas
lea
fcom
clc
push
leave
push
in
push
xor
outsb
sbb
add
mov
icebp
stos
mov
mov
stos
add
nop
popa
arpl
std
les
push
dec
dec
lret
add
out
jb
vmovmskps
popa
mov
inc
imul
mov
or
mov
popa
ret
out
mov
xchg
out
lods
push
mov
push
xchg
int
inc
rdtsc
test
out
adc
fmull
sbb
jbe
dec
push
cmp
sarb
sub
jl,pn
dec
lret
nop
lods
mov
negl
shll
xor
imul
lcall
push
mov
push
out
nop
inc
aas
ficoms
mov
xchg
add
mov
imul
out
rcll
int3
jb
cmpsb
call
push
mov
in
sub
xor
pop
dec
push
cmpsb
jl
jge
push
loope
fists
jl
pusha
sbb
mov
in
jne
es
pop
cmp
aad
leave
adc
jecxz
psrlw
mov
fwait
js
out
xor
xchg
or
fwait
sub
fidivrl
lock
jg
push
hlt
jecxz
dec
out
cltd
mov
ds
and
dec
inc
aaa
sub
into
mov
aaa
fildll
cmp
xchg
orb
bound
imul
jge
shlb
ret
rcrl
into
pop
addr16
gs
push
cmp
lret
aas
push
cmp
mov
xor
jl
das
rorb
mov
movb
xchg
xlat
mov
icebp
movsb
out
jne
mov
std
std
or
adc
mov
lock
stos
stc
jmp
pusha
mov
adc
jns
in
scas
xchg
or
insl
call
into
aam
ja
push
cmpsl
leave
movb
push
sub
fldt
aam
cmp
inc
inc
fldenv
movsl
mov
icebp
icebp
push
add
mov
stos
add
push
cmp
inc
iret
pop
flds
jp
jno
xlat
repnz
xor
mov
pop
inc
pop
ss
xorps
xchg
lret
in
pusha
aas
jecxz
sti
bound
outsl
in
xchg
inc
inc
test
and
rorb
cwtl
cmp
push
cwtl
into
pushf
inc
mov
stc
adc
jmp
stos
in
xchg
and
sub
xor
pop
jle
sti
insb
pop
jae
or
sub
lahf
adc
dec
cmp
hlt
mov
out
adc
loopne
aas
inc
adc
ret
fwait
push
and
ret
inc
inc
push
in
cs
fsubs
jecxz
orb
out
in
mov
mov
lret
xor
xchg
mov
adc
push
testb
cmpsb
test
scas
repz
mov
adc
in
sbb
inc
jg
stos
push
mov
adc
cmp
push
pop
jae
pop
jg
dec
mov
xor
adc
jae
dec
pushf
imul
sarb
pop
in
cmp
jae
cwtl
scas
popf
push
add
mov
push
out
lods
fists
and
jno
mov
add
sub
roll
gs
push
stos
clc
mov
inc
test
scas
inc
cmpb
sti
insb
mov
or
repz
or
test
push
jge
mov
iret
jnp
shr
cld
dec
mov
mov
subb
or
sbb
cltd
and
and
cmp
pop
xlat
scas
mov
hlt
outsb
mov
xchg
repz
sub
push
jo
rolb
test
push
ljmp
stc
adc
mov
pop
inc
push
jmp
fistpl
dec
repnz
cmp
sub
stos
push
pusha
in
je
sti
mov
jecxz
xor
dec
int3
cmp
dec
xor
add
pop
jle
sub
xchg
icebp
add
repnz
jecxz
sti
stos
jb
jns
out
ljmp
push
imull
pop
jg
int
decb
push
mov
inc
mov
xchg
iret
sbb
filds
imulb
scas
adc
and
insb
and
repz
mull
inc
nop
lods
cltd
addr16
pop
movb
shl
mov
sti
mov
sub
add
les
in
jb
ret
ljmp
lret
dec
jnp
sti
push
out
mov
pop
call
popa
aas
inc
push
mov
fistl
push
cli
cs
clc
xchg
aad
imul
jmp
icebp
jns
cmp
lea
cld
lock
cmp
jne
outsb
lcall
fadd
pop
pop
scas
push
les
repnz
popf
repnz
movsb
test
pop
xor
pop
sub
inc
les
loopne
xor
jge
out
pop
stos
mov
js
sti
mov
gs
pop
loope
xor
xor
push
dec
mov
in
loop
jp
dec
dec
xchg
sbb
aaa
xor
pop
sbb
or
data16
outsl
popa
sbb
jle
loope
sbb
imul
inc
xchg
xchg
push
rol
jnp
repnz
add
hlt
aas
mov
pop
stos
mov
lods
mov
imul
add
shrb
enter
cld
clc
sub
pop
push
fs
adc
sub
insl
add
in
aaa
push
rolb
xchg
hlt
adcl
test
inc
lock
nop
or
xchg
jecxz
adcl
sbb
jb
shll
adcl
pop
loop
mov
stos
mov
scas
cmc
jne
lds
ds
jb
test
jne
lea
adc
int
mov
push
cmp
xchg
sbb
or
xor
mov
test
imul
xchg
icebp
lahf
test
pop
or
jo
fucomi
xor
pushf
jne
inc
pushf
gs
ds
xor
mov
mov
pop
sti
into
adc
lock
jmp
xorl
sbb
lea
out
jmp
xor
bound
dec
rcl
mov
xlat
pusha
incl
test
pop
pop
mov
js
sahf
jae
in
sti
stc
imul
sbb
ret
jno
mov
inc
insb
mov
mov
out
mov
scas
xor
mov
inc
or
icebp
mov
mov
xchg
jl
loope
cmp
idivb
mov
cmp
fwait
cmp
add
or
mov
sahf
adcl
subl
adc
cmpsb
push
or
dec
inc
pop
cmp
flds
xor
mov
bound
sub
jle
jb
mov
push
fimuls
fsub
inc
inc
xchg
jge
push
fcmovnu
pusha
sub
cmp
sti
xlat
bound
mov
xchg
cmc
pop
fwait
sub
dec
dec
addr16
addr16
dec
jecxz
test
negb
rdmsr
xchg
mov
mov
xchg
aad
pop
mov
pushf
mov
fnstenv
gs
mov
aad
repnz
gs
sti
lret
ljmp
loope
movsb
jp
jb
or
mov
daa
iret
lods
cmp
test
movzbl
mull
ds
scas
fisttps
cmp
movsl
and
shll
push
aam
add
nop
cmp
insb
cmp
xor
in
push
pop
add
shll
scas
mov
fsts
dec
out
imul
subb
mov
inc
mov
int
mov
iret
pop
repz
fwait
icebp
inc
daa
cmp
xorb
fadds
enter
pop
xlat
cmovl
cmp
es
lret
iret
gs
sbb
js
pop
mov
and
testl
into
adc
mov
loopne
push
cmp
or
add
dec
and
mov
jae
stos
push
xor
ljmp
in
pop
enter
ljmp
and
ficoml
rcrl
arpl
push
pop
add
jnp
sbb
mov
jmp
sub
pop
xlat
mov
xor
ja
adc
pop
cmpsb
cmp
enter
sahf
jp
dec
mov
clc
lds
mov
jl
pop
cli
mov
adc
rcrl
inc
pusha
addl
stc
push
dec
cmc
pusha
add
mov
lcall
mov
lret
test
mov
aam
rorb
xchg
push
in
xchg
push
cmc
mov
push
es
pop
cmp
mov
stos
xchg
scas
cwtl
mov
push
push
mov
push
aad
sbb
pop
push
lods
push
sub
mov
dec
movsb
sub
inc
xchg
mov
insb
mov
ret
fidivl
mov
mov
mov
mov
imul
fcomip
out
fs
in
cld
rcrb
popa
pop
jp
popa
jnp
xchg
pop
unpckhps
jo
mov
pop
add
sti
mov
cmp
pop
and
loopne
popf
pop
inc
sbb
fsubs
mov
maxps
xchg
xor
push
into
jae
sub
mov
int
pop
mov
cmc
pop
mov
stos
movsb
sub
pushf
and
add
sub
repnz
pusha
add
ljmp
or
jp
stos
cmc
fdivl
sti
lcall
mov
stos
movsb
sub
xchg
stc
sbb
inc
mov
sbb
iret
cmp
shlb
mov
jo
mov
mov
negb
xchg
and
sbb
js
out
lahf
sbb
testl
fimull
leave
jno
dec
mov
mov
cs
aas
xchg
pop
jo
jp
push
cli
jl
inc
call
push
je
sbb
das
inc
je
das
and
cmp
es
and
fstpl
jmp
shll
sbb
mul
test
pop
jb
mov
repnz
pushl
push
cmp
pusha
push
dec
cmp
mov
fdivrl
call
inc
js
push
and
jmp
je
pop
aas
xlat
xor
pop
xor
pop
int
dec
cli
adc
cmc
jg
daa
sahf
jg
jne
cmp
std
inc
test
scas
mov
xchg
push
pop
fxtract
outsl
sbbb
aas
repz
mov
adc
xor
adc
rcpps
cwtl
cld
aaa
sti
jecxz
pop
push
cld
jg
aam
stos
cld
icebp
cli
fcomip
icebp
popf
push
test
inc
enter
inc
icebp
mov
push
sbb
lahf
mov
vpshufhw
inc
fsubrl
mov
cltd
pushf
push
adcb
int
shrl
push
ficoms
inc
shrl
jne
movsl
pop
aad
xchg
ss
cs
ficomps
sub
sbb
lea
ret
je
lret
sub
out
mov
jg
divl
sahf
jnp
idivl
add
cmp
stc
pop
lock
insl
mov
aad
fnstcw
cwtl
dec
inc
mov
sub
insl
fstl
add
stos
ljmp
out
test
lock
adc
xchg
test
or
test
je
lock
fchs
mov
loopne
mov
out
jle
push
mov
int
and
pop
rol
lods
inc
xchg
ret
mov
outsb
dec
pop
call
pmuludq
aam
and
mov
push
sub
lcall
inc
jmp
pop
xor
in
lret
mov
stc
je
pop
in
ss
pop
xchg
ret
fsubrl
push
mov
cmpb
xor
in
aaa
iret
sub
pop
adcb
shl
out
mov
orl
jnp
rcrb
xchg
dec
popf
rcll
xchg
mov
pop
xchg
testl
faddl
jno
inc
sarl
pushf
push
fdivr
xor
mov
pop
adc
mov
push
faddl
add
push
les
shrb
je
rcl
pop
lcall
pop
mov
xor
push
test
rdpmc
add
jl
mov
in
rorb
popf
fcmovnbe
out
mov
scas
xchg
insb
movsl
mov
stos
aad
xchg
ss
fisttpl
dec
mov
es
pop
xchg
jle
inc
cmp
mov
lahf
inc
jle
test
int3
pusha
dec
pushf
mov
mov
lret
aaa
inc
test
cmp
in
test
fstpl
test
insl
cmc
cmpsl
jp
or
in
mov
cmpsl
adc
xchg
push
mov
lock
insl
cli
ret
pop
xchg
or
loopne
rorb
in
ss
or
pop
into
mov
jno
ds
mov
inc
mov
jmp
repnz
lahf
enter
lods
xor
mov
mov
data16
xor
iret
decl
iret
push
data16
push
inc
push
inc
scas
shl
pop
and
fisubs
aam
iret
fs
std
les
mov
cld
loope
aaa
xorl
add
imull
mov
iret
cmc
mov
sahf
or
scas
cltd
cmp
fidivrl
shlb
rcl
in
faddl
mov
outsb
imul
or
dec
fdiv
xchg
rorb
mov
or
add
push
xchg
jp
jg
and
icebp
lret
jns
gs
jns
scas
and
dec
sarl
dec
xchg
out
cmpsb
pusha
das
ret
aas
jmp
mov
lea
jae
pushf
rcrl
notl
decb
aam
pop
dec
push
out
icebp
fisttps
mov
cltd
sbb
fadd
push
pop
mov
push
mov
jp
lock
insb
gs
and
lret
fistpl
push
adc
mov
loopne
movsb
sub
aaa
mov
mov
mov
gs
xor
cs
sahf
int
sub
data16
mov
rcr
dec
bnd
pop
ss
jmp
les
out
movsb
jl
ljmp
mov
sbb
je
js
data16
es
push
mov
shlb
xor
fnsave
xchg
jne
mov
jl
push
or
outsb
lahf
jne
out
adc
and
or
outsb
mov
scas
outsl
and
cmp
pushf
jmp
shl
xor
mov
rclb
hlt
out
dec
inc
dec
fldt
fldt
cli
sbb
pop
mov
cmp
sbb
inc
sub
mov
xlat
fmuls
dec
push
subb
lock
loop
lods
mov
dec
mov
movsb
inc
cmovne
jns
mov
in
jecxz
js
or
pop
fcmovne
sahf
pop
fcomi
loop
sbb
movsl
or
fwait
push
shl
mov
cmp
xor
lea
dec
mov
push
or
sahf
xor
mov
mov
jp
mov
mov
xlat
jle
add
mov
push
jmp
mov
stc
out
inc
out
std
sub
jg
mov
mov
mov
ficoms
jmp
mov
test
adc
inc
popf
das
in
push
jl
mov
push
out
pop
mov
mov
jns
or
rolb
movsb
scas
shlb
or
pop
sbb
sub
cmpb
pop
push
ret
mov
push
les
pop
es
mov
add
ss
cmp
sub
movsl
fs
mov
cmp
sbb
mov
hlt
lret
xor
cltd
mov
fildl
loope
hlt
adc
int3
mov
sub
push
imul
cmp
lds
lds
dec
negl
cld
jg
jo
push
jnp
add
stos
insb
inc
cwtl
push
xlat
mov
inc
adc
outsb
fldcw
or
addl
outsl
aam
push
and
in
sbb
adc
jmp
adc
out
mov
xor
iret
jmp
pop
and
push
mov
hlt
xchg
divb
pop
dec
or
mov
sub
jl
sub
jg
mov
jbe
push
mov
fidivrs
push
scas
dec
outsl
bound
filds
pop
mov
imul
rorb
in
adc
jns
push
adc
adc
or
out
in
int
sti
push
rep
aas
lahf
sahf
scas
xchg
push
or
xor
sbb
push
mov
out
dec
pop
insb
mov
mov
mov
push
adc
jg
dec
scas
faddl
lods
repnz
rorl
jle
shll
jl
xor
push
int3
push
sbb
into
rol
mov
xchg
add
orb
mov
cmpsb
xchg
insb
movsb
fs
out
outsl
aad
cld
mov
add
xchg
outsl
jnp,pt
push
gs
cwtl
test
mov
loopne
jno
xlat
scas
cmp
sarl
lock
fistpl
xor
bound
dec
add
cmp
leave
insl
mov
insl
jecxz
les
inc
ret
inc
mov
mov
lods
pop
ret
call
and
push
push
sahf
fistpl
aas
sbb
jg
jno
xchg
mov
xor
jbe
xchg
pop
xchg
outsl
cmpsl
mov
and
pop
mov
clc
push
out
cmc
insl
out
std
mov
sub
cmpsl
dec
inc
lds
shll
cmp
jae
and
daa
sti
fsubs
adc
mov
jns
dec
mov
jmp
sub
xor
pop
lcall
fxam
pop
out
ss
ja
sub
sbb
mov
gs
out
adc
shrl
mov
fldl2e
xor
push
hlt
rcr
jae
hlt
inc
or
rclb
cs
out
dec
add
pop
data16
lret
jns
aas
fldcw
pop
fwait
ljmp
jb
push
or
outsl
jae
mov
sbb
xor
aam
push
into
loop
mov
fldcw
icebp
in
and
mov
in
push
ret
mov
mov
push
and
and
mov
inc
mov
int
adc
cmp
mov
pop
mov
dec
mov
dec
insl
jns
clc
mov
icebp
jno
adcb
clc
and
mov
sbb
loope
add
lahf
push
push
aad
rep
icebp
and
repz
push
pop
out
ljmp
outsb
mov
in
cmp
dec
push
push
lds
push
nop
inc
std
inc
add
fcoms
je
jnp
outsl
scas
lds
arpl
mov
push
movsb
ja
inc
enter
jbe
loop
push
int
stos
lods
imul
sbb
push
sbb
out
dec
jne
mov
or
and
pop
psubd
inc
scas
add
add
loop
pop
adc
push
push
lods
addr16
push
out
mov
cmc
or
xchg
push
lret
icebp
cmc
loopne
test
gs
scas
cmp
enter
pop
add
sbb
pusha
pop
iret
sub
sbb
or
mov
roll
ljmp
xor
fsubrs
lret
lcall
xchg
in
jne
test
jne
shlb
pop
jne
outsl
lods
ja
ljmp
or
jmp
hlt
shrb
clc
jecxz
popa
icebp
xchg
nop
or
outsl
test
rcrl
cmp
roll
lods
aam
dec
add
lds
insl
xor
push
dec
jae
push
sub
fs
lahf
loop
sub
jp
popa
cmpb
xlat
sub
xchg
cmp
dec
dec
inc
cmp
sbb
insl
aas
enter
vmulss
jmp
shlb
jecxz
into
mov
pop
xchg
inc
int
ret
repnz
push
filds
or
sbb
add
leave
jle
jbe
fsubrl
stos
adc
aam
or
jge
test
push
jl
shll
je
test
out
pop
clc
cld
inc
mov
js
loop
pop
adc
ds
mov
or
in
or
mov
movsl
repz
stos
pop
push
lds
mov
xchg
adc
movsb
push
mov
and
pcmpeqw
aam
out
dec
jge
pop
jae
out
mov
and
fmul
adc
or
mov
push
mov
femms
xchg
sub
popa
mov
insl
pop
cmpsl
mov
out
leave
bound
outsb
cli
daa
mov
jmp
clc
mov
mov
sbb
inc
jg
mov
cmp
cmp
push
in
in
nop
add
xlat
mov
or
rol
dec
ss
aad
nop
pop
mov
cmp
fst
addl
das
test
xor
push
push
dec
vmwrite
jp
jmp
xchg
ror
xchg
cmpl
testl
pop
js
jg
pushf
push
jg
pop
loopne
cmp
cmp
sbb
fstpl
mov
push
mov
cli
jg
std
outsb
mov
fldcw
xchg
lods
rolb
daa
aam
outsl
test
sub
pop
cmp
jb
stc
lcall
jle
fldt
fldl
dec
lods
nop
jecxz
mov
push
mov
out
loope
mov
scas
les
cmp
or
das
js
mov
and
mov
pushf
mov
mov
std
jl
dec
jecxz
dec
mov
fsubrs
divl
loope
mov
pop
xchg
out
sti
mov
fdivrl
sbb
ficoml
xor
xor
xor
jb
jle
scas
shr
fsubrl
xchg
sbb
loopne
imul
outsl
mov
pop
push
shr
jl
dec
mov
inc
mov
xor
cltd
fisubs
bnd
shlb
loope
pop
push
adc
test
in
cmc
pop
xchg
insl
mov
lcall
or
cmp
fldt
and
mov
push
roll
push
xor
rorl
frstor
cltd
test
xor
cmp
jge
pop
icebp
and
xchg
push
int
jne
xchg
xchg
xchg
jns
mov
adc
js
ja
fs
pop
jg
sub
dec
ret
adc
mov
sub
inc
cmp
addb
pop
rcl
adc
ret
jg
flds
push
std
nop
or
mov
pop
xchg
popa
js
outsl
das
mov
mov
inc
or
mov
push
dec
sbb
ja
fiaddl
cmp
dec
sub
loop
std
add
fcompl
jmp
popf
setbe
in
aad
in
in
xchg
test
gs
cmp
movsb
adc
cltd
aad
sahf
jp
mov
sbb
add
repnz
gs
mov
int
mov
inc
xchg
sti
aad
sbb
test
dec
es
cmp
rorl
mov
push
adc
add
cmp
mov
mov
ret
stc
iret
sbb
and
adc
loope
xchg
adc
mov
repnz
mov
jbe
dec
adc
pop
into
mov
and
or
jg
pop
sti
cltd
pop
ss
cmp
add
mov
cld
mov
mov
xor
push
xorps
mov
jg
std
mov
out
bound
pushf
xor
movsb
inc
mov
xlat
aaa
cli
enter
popf
icebp
mov
test
mov
sbb
push
out
pop
mov
mov
lahf
xlat
aaa
and
rol
mov
push
or
pop
call
or
jbe
xchg
repz
das
jne
dec
gs
cmp
testb
in
add
and
jmp
mov
dec
dec
push
xchg
cmpsl
movsb
mov
sbb
test
aad
mov
jbe
daa
call
pop
test
ficoms
mov
and
popf
mov
adc
jl
es
pop
or
mov
mov
scas
mov
enter
or
lea
repz
test
cli
sbb
dec
movsb
ja
cmpsb
orl
push
cmp
mov
pop
mov
cmp
xchg
inc
cmp
adc
adc
xchg
adc
mov
arpl
test
cltd
les
ficomps
adc
xor
int3
push
int
bound
arpl
cld
rcrl
bound
dec
int3
xor
cld
xor
push
insl
rcrl
fcomps
cmp
add
repz
push
add
mov
mov
shl
loopne
repnz
fsubl
jne
mov
mov
pusha
outsb
lods
xchg
and
gs
push
push
xor
stos
mov
repnz
test
sbb
mov
call
in
jmp
out
jl
lret
testb
mov
call
cmc
into
xor
cmp
pop
jle
fildll
insb
pop
lods
subb
jbe
fs
mov
ljmp
mov
loopne
xlat
cmp
jae
xlat
jl
cmp
das
push
fwait
pop
xchg
inc
pushf
xor
movaps
ret
xlat
decl
repz
jmp
int3
lea
mov
mov
adc
add
push
mov
or
lds
rorb
jp
lret
dec
fisubrl
nop
mov
push
pop
in
xchg
mov
icebp
xchg
jle
xor
xchg
orl
xor
pushf
sahf
daa
int
add
jecxz
xchg
pusha
adc
arpl
scas
jb
cmp
cmc
adcl
sbbl
jo
mov
jbe
lahf
in
dec
cltd
jl
movsl
mov
out
xor
popa
mov
ss
xchg
pop
push
mov
mov
imul
popf
outsb
sahf
pop
pop
out
inc
cmp
cmpsl
fisubs
adc
loopne
dec
push
jp
and
fnstenv
je
dec
popf
jbe
loop
mov
sahf
repz
sbb
xchg
pop
lahf
ds
jns
or
std
aad
pop
sub
ficompl
cs
cmovbe
daa
cltd
jne
cmp
inc
and
pop
lods
inc
aad
dec
rcrb
push
adc
pop
push
mov
mov
jno
negl
sahf
sub
push
popf
loop
inc
dec
mov
mov
push
sub
cmpsb
dec
sub
rclb
pop
movsl
pop
dec
mov
outsl
mov
cli
rclb
sbb
xchg
icebp
sbb
adc
dec
scas
pop
mov
cmp
cmp
xor
xchg
call
rolb
mov
push
scas
mov
inc
fisubl
vucomisd
lret
jmp
rorb
add
ljmp
jecxz
aas
mov
in
and
mov
sub
adc
sti
xor
cmpsl
pop
movsl
out
mov
mov
mov
or
idivb
popf
pushf
cmpb
es
mov
js
push
stos
mov
cmp
pop
mov
paddq
cmpsb
icebp
sub
aaa
loop
push
xchg
add
dec
scas
xchg
enter
mov
div
inc
fsubrs
xchg
jg
push
into
subl
int
ss
loope
pop
loopne
in
mov
js
enter
lds
inc
clc
mov
data16
mov
jge
js
fnstcw
lods
add
pop
cld
sub
mov
in
outsb
jp
ja
sbb
xchg
daa
fiaddl
mov
inc
stc
pop
loop
inc
jns
insl
pop
nop
cmc
cld
jb
push
and
mov
or
sbb
mov
push
insl
popa
or
aaa
pop
or
pop
xchg
addb
scas
fldenv
jns
scas
sbb
sbb
imul
and
mov
xor
mov
js
pop
ljmp
inc
push
lahf
mov
out
mov
mov
fildl
sub
xor
and
mov
push
outsl
xchg
xor
push
shll
xchg
xor
stc
rcr
iret
out
mov
stos
mov
in
adc
xor
cmpsl
pop
pusha
xchg
pop
sti
lock
out
les
cmpxchg
btr
fdecstp
aad
jns
insl
mov
das
in
jmp
popa
fidivrl
mov
jno
xchg
pushl
sti
push
mov
xchg
mov
and
shlb
adc
scas
fucomi
iret
dec
inc
lods
mov
inc
mov
cld
insl
adc
lock
lds
adc
dec
jbe
push
mov
mov
mov
push
sbb
adc
sub
cmc
push
xchg
out
cmp
cmp
xchg
aad
sbbl
jae
aam
jbe
sbb
jmp
insb
test
fiadds
jp
push
sahf
ljmp
std
jo
loop
xor
std
stos
xor
ljmp
push
loop
cmp
scas
add
shr
ljmp
rcl
clc
mov
sub
sbb
pop
fcoml
cwtl
mov
nop
cmpsl
jecxz
inc
arpl
dec
jne
lahf
js
pop
loop
xor
lea
int
pushf
mov
fidivrs
inc
aas
fnstsw
push
scas
fmull
xchg
xor
std
pop
aad
out
repnz
pop
jo
jmp
sti
xchg
pop
dec
pop
jnp
out
pushf
cwtl
mov
bound
jns,pt
icebp
cmc
into
dec
xchg
pop
repz
push
jg
xor
sbb
pop
leave
lods
adc
push
sarb
mulb
mov
mov
pop
stos
pop
sbb
es
push
sbb
mov
imul
cld
xlat
push
jns
xlat
or
mov
loope
push
mov
out
xlat
cmp
int
clc
xor
movups
inc
mov
leave
sub
dec
cmpsl
stc
dec
fbld
fdivrl
pop
mov
xor
dec
out
add
int
clc
mov
ret
fdivrl
fsubp
jl
sub
repz
ss
lds
or
cwtl
mov
push
jns
or
rorl
ds
mov
out
loop
testb
cld
icebp
not
pop
pop
xchg
filds
jo
shlb
jbe
pusha
and
in
maskmovq
notl
sub
mov
mov
cmp
cli
repnz
jno
outsl
das
pushf
jg
repz
mov
mov
aas
lret
js
jns
jns
pop
aaa
cmc
in
les
jmp
or
cs
dec
jp
mov
outsl
adc
sbb
cmp
shll
loop
pusha
outsl
aaa
sub
mov
int
jecxz
outsl
js
pop
jmp
ret
push
pop
add
mov
outsl
mov
sub
ja
dec
das
cltd
lds
cli
scas
movsl
and
ror
loope
pop
pmuludq
lret
jo
pop
imul
add
mov
sub
push
or
sub
ss
or
iret
pop
mov
sub
std
popa
pop
pop
xchg
testb
sti
sbb
mov
divb
mov
cmp
test
jge
mov
push
std
repz
notl
dec
lcall
repz
mov
mov
out
xlat
in
pop
xor
pop
xlat
in
shrl
sub
idivl
sbb
mov
jl
out
mov
push
fistps
jnp
mov
pusha
cltd
jae
pop
push
pop
fistpll
pop
in
leave
aad
ljmp
in
mov
push
shr
jmp
dec
add
out
adc
fs
je
aam
clc
out
jno
pop
fists
and
cmp
sbb
mov
dec
test
cld
in
xchg
push
dec
xchg
sbb
sbb
cld
jg
mov
jmp
outsb
inc
sbb
push
lods
mov
mov
xor
sahf
inc
sbb
jae
lcall
push
push
bound
lret
clc
add
sti
stos
mov
mov
ucomiss
repnz
shr
and
add
push
addr16
outsl
sub
sbb
stos
jl
aas
mov
mov
ss
rol
notl
mov
mov
call
mov
pop
mov
cmp
into
xchg
mov
mov
addr16
pop
add
ja
mov
in
popf
int
mov
and
xor
xchg
pop
loope
scas
add
mov
push
loop
shlb
outsb
add
imull
or
xchg
mov
jge
in
out
pusha
sarb
sar
rorb
mov
pop
lret
xchg
push
pop
sub
xchg
outsl
pop
mov
mov
dec
xor
adc
std
sub
pop
bound
adc
mov
mov
mov
notb
xchg
pop
sbb
stos
xchg
or
cmp
iret
imul
shll
loope
outsb
xor
icebp
out
int3
push
xchg
mov
adc
and
ret
mov
scas
in
xchg
sub
cld
aas
xchg
or
ret
or
testb
add
lock
pop
push
pop
call
xor
jbe
xor
je
inc
aaa
pop
xchg
test
adc
xchg
inc
shll
mov
pop
mulb
or
and
jecxz
dec
push
aaa
frstor
cmp
xor
aas
in
mov
cmpsb
fmull
add
fstpl
in
add
pop
je
mov
out
pop
dec
xor
lods
push
pop
imul
mov
test
pop
outsb
sub
push
bound
shl
stc
je
xchg
dec
loope
add
shrb
jno
jl
inc
sbb
jmp
ljmp
out
lcall
and
divl
in
pop
cmp
ret
jle
imul
cwtl
out
jo
cmp
decb
xchg
inc
jb
inc
loop
out
sub
sbb
push
jle
icebp
mov
in
cmpsb
mov
push
mov
fdiv
jb
stos
xor
std
lods
mov
mov
das
add
jnp
xor
jge
outsl
push
addb
cmp
shl
lods
lret
test
outsb
xchg
inc
push
xchg
mov
sbb
push
dec
test
sub
les
mov
in
es
or
adc
adc
push
sbb
mov
or
test
jg
lret
insl
xchg
sub
ljmp
jp
stc
pop
xor
jne
sahf
scas
in
adc
mov
frndint
negl
in
and
gs
fsubr
je
aas
repnz
xor
into
mov
dec
and
popf
add
mov
mov
shrl
sub
push
pop
and
scas
ja
inc
jge
mov
movsl
popf
jge
fistpll
dec
cmp
hlt
xor
push
scas
out
repz
test
ja
fcompl
ucomiss
ficoml
pop
scas
out
lods
xlat
les
cwtl
leave
mov
ss
sub
xchg
js
and
inc
notl
stos
cli
das
lods
test
lea
icebp
jns
inc
pushf
jg
xor
xchg
clc
cmp
aam
pop
and
pop
xchg
ljmp
push
push
cld
hlt
hlt
mov
xchg
inc
test
cli
cld
int
ja
test
pop
lods
or
inc
sub
stos
lret
xor
xchg
push
test
data16
call
mov
int
faddl
pop
pop
jl
dec
sub
stos
call
cwtl
mov
insl
lods
test
fcompl
fmull
sti
and
fbld
jo
mov
push
lock
daa
cs
out
cmp
push
adc
or
mov
dec
jnp
pop
testl
jnp,pn
dec
incb
fnsave
or
lods
sub
leave
xchg
pop
mov
dec
das
nop
pop
sbb
stos
inc
pop
test
std
jg
cmc
in
mov
ljmp
push
ja
fs
or
es
mov
std
pop
enter
sbb
sub
mov
xchg
stc
cmpsl
mov
jo
nop
in
lds
mov
in
jmp
xchg
jmp
out
sub
cmp
xchg
cmp
lods
cli
mov
mov
cld
data16
popf
sti
cmovae
lea
jne
test
cmp
cmpsb
pop
pusha
pusha
fs
inc
lcall
ss
push
shrb
mov
in
fstps
mov
dec
xor
push
mov
cld
iret
in
and
xchg
and
aas
pop
mov
dec
insl
and
mov
pop
mov
cmpsb
shrl
add
scas
aad
in
jns
cwtl
xor
jle
cmp
mov
inc
jge
adc
dec
pop
out
js
mov
and
or
daa
add
leave
iret
mov
xchg
xorb
cld
mov
clc
mov
dec
pop
adc
jl
dec
jae
mov
push
mov
dec
inc
mov
sbb
sub
mov
and
aas
in
movsl
out
test
sub
add
idiv
pop
js
inc
sbb
outsb
andb
xchg
fbstp
inc
ds
int
jecxz
js
push
leave
inc
mov
xchg
and
enter
call
clc
sbb
ud0
mov
ficoms
std
lods
and
insb
je
mov
mov
lock
into
pop
cmp
xor
stc
pushf
inc
sbb
fisttpl
ljmp
sti
adc
loopne
popa
sub
cmp
outsl
jns
inc
cwtl
std
pop
adc
sbb
cmp
icebp
or
int
or
sub
fdivrl
out
aas
push
fsts
dec
iret
mov
lods
in
inc
aas
test
and
cmp
dec
sahf
imulb
sub
and
or
mov
js
cmpsl
cmp
rol
in
or
test
hlt
mov
xor
cmc
js
scas
inc
pushf
test
push
mul
sub
inc
in
lret
mov
mov
mov
jge
arpl
sti
cmp
mov
out
popf
les
push
jle
xchg
push
jns
out
cmpsl
les
jno
rclb
push
lods
and
pop
push
fcmovnu
sbb
enter
lret
cmpsl
ljmp
adc
out
dec
dec
outsl
pop
pop
test
lcall
mov
dec
call
push
sahf
aaa
sbb
js
out
and
inc
stos
dec
add
cmp
arpl
scas
ret
xchg
mov
insl
sub
std
mov
shll
fs
aas
adc
jns
mov
push
xor
xchg
cmp
sub
sahf
cltd
jns
mov
js
fwait
xor
or
repz
in
cli
lock
in
add
sub
popl
mov
ror
jge
lret
push
bound
jb
sub
outsl
negb
inc
in
sahf
sbb
inc
jnp
scas
jo,pt
fisttps
filds
cld
leave
and
mov
shl
loop
loope,pt
pusha
lret
iret
jg
rcll
sub
adc
cli
scas
sbb
scas
mov
das
das
jmp
pusha
arpl
jne
mov
xchg
ffree
jl
jne
inc
cmp
aaa
popa
je
inc
or
ftst
orl
sbb
push
pop
lcall
fstp
movsb
cmp
lret
lea
xor
xchg
sahf
pop
lock
dec
cmp
pop
jle
movsb
mov
stos
cmp
push
push
imul
mov
fiaddl
pop
mov
cwtl
push
xchg
decb
shll
adc
out
mov
sbb
ja
add
leave
dec
shll
insb
ja
mov
push
xchg
mov
imul
in
cmc
jl
pop
test
lret
inc
cld
mov
add
in
cli
lods
inc
test
fisttps
jle
pop
jle
inc
pop
jp
inc
testl
and
out
icebp
jo
fdivs
lds
dec
hlt
mov
cmp
add
sbb
shr
fwait
out
dec
insl
popf
or
ljmp
mov
int
and
fisttpll
je
fwait
rcrb
daa
xor
jg
aaa
dec
aas
es
cmp
ds
xchg
push
lock
or
lahf
test
mov
lock
test
mov
fidivl
inc
lret
jno
repnz
jmp
insl
dec
les
ja
or
shlb
outsl
ja
shlb
push
pop
fwait
mov
sub
aas
push
mov
adc
and
aas
repnz
adc
insb
lea
rorb
mov
in
mov
cmpsl
jmp
hlt
lock
dec
mov
rclb
pop
xlat
pop
sub
pop
adc
dec
cmpsb
jp
into
mov
xor
negb
cmp
std
outsl
sub
lods
mull
cmc
pop
or
jb
mov
adc
lret
xchg
stos
fwait
shl
jae
filds
out
out
cmp
pushl
int
into
jnp
fiadds
in
ljmp
xor
lahf
iret
in
movsb
sarl
or
push
lahf
hlt
das
ret
rclb
out
imul
adc
sti
out
dec
cmp
jnp
fistps
or
stc
in
mov
sbb
and
hlt
repz
cmpsb
out
xchg
xchg
lods
stc
out
cs
out
push
lods
shlb
bnd
outsb
cli
mov
dec
cmp
aam
adc
pop
xchg
and
pop
xor
repnz
std
stos
and
call
pop
movsb
and
cli
cmp
sbb
mov
pop
xchg
push
sbb
imul
repz
ja
stos
int3
mov
mov
repz
dec
bound
jg
rorl
iret
mov
mov
movsl
test
push
push
inc
loopne
cli
mov
aas
dec
das
out
lret
dec
stos
filds
cmp
lea
aaa
out
mov
jae
push
movsb
loope
std
subb
jno
out
stc
mov
in
adc
hlt
setl
jne
mov
stos
lods
or
clc
cmp
sub
loopne
inc
jb
add
mov
jns
out
mov
lahf
add
in
ret
ljmp
mov
scas
cmpsl
mov
push
sti
stos
ljmp
push
es
cmp
call
cmc
cmp
or
jp
adc
inc
aaa
dec
sbb
sbb
add
mov
das
cmp
pop
enter
pusha
mov
popf
adc
iret
mov
push
fwait
shlb
stc
in
shrl
pop
jp
stc
movsb
push
mov
or
or
sub
into
shl
lock
add
lds
fnsave
mov
lods
ror
mov
out
jge
mov
dec
test
scas
lods
cld
stos
iret
test
sahf
mov
out
out
push
imul
insb
pop
es
mov
xorl
les
ds
dec
mov
sbb
outsb
cmp
ds
lock
std
dec
cmp
ret
pop
ss
push
xchg
mov
popf
mov
jg
mov
out
cs
push
push
fcmovne
sbb
xchg
pop
loop
ds
fadd
dec
mov
xchg
xlat
popa
pop
jns
push
aas
incl
int
push
sbb
sbb
rcll
xor
shl
push
dec
xchg
ss
push
les
dec
mov
mov
xor
mov
lcall
lahf
push
jl
xor
jnp
ja
sbb
add
idivb
nop
icebp
jo
fbld
push
xchg
or
fidivl
jne
outsw
testl
lahf
xchg
pop
cmp
enter
ret
aas
lods
pop
sub
popf
sahf
aas
push
sub
push
sub
push
fwait
fwait
sub
out
repz
arpl
xor
mov
jge
mov
and
inc
pop
push
ficoml
testb
mov
xor
bound
push
cmp
mov
mov
mov
incl
dec
mov
mov
ss
aaa
jecxz
rcrl
adc
xchg
int
mov
call
dec
iret
cld
faddp
iret
pop
sbb
mov
cld
out
add
mov
cmp
test
shl
cmp
fisubrs
jne
das
cmpsl
call
xor
imul
push
jne
add
cltd
enter
sbbb
popa
iret
and
out
sahf
mov
inc
inc
test
cwtl
mov
dec
scas
loope
push
inc
leave
icebp
sub
and
mov
aaa
adc
mov
je
jb
cltd
add
adc
outsb
lds
clc
sub
fwait
mov
loope
jae
mov
pop
imull
data16
lods
mov
imul
add
xchg
shlb
mov
ret
int
pusha
push
add
pop
mov
sahf
adc
bsr
jne
popa
mov
in
mov
xchg
and
mov
and
xor
inc
pop
mov
stc
or
sahf
ja
into
addr16
ret
sahf
cli
scas
cmp
cmp
cli
pop
xor
adc
jb
aam
jl
push
aas
or
imul
jmp
mov
lods
fdivs
scas
dec
icebp
mov
cltd
in
cli
push
add
inc
les
mov
les
fisttpll
add
mov
shr
fnsave
pop
lcall
data16
push
push
das
mov
mov
pop
push
int
jl
cli
mov
sub
sar
popf
ficoml
stc
shlb
sti
xchg
into
jmp
push
sub
pop
inc
js
add
pop
xor
mov
inc
test
repz
jae
push
js
mov
lahf
jecxz
hlt
shrl
imul
movsb
jae
sbb
or
push
ret
adcb
cmpsl
movsl
test
mov
loopne
in
cmpsl
push
insl
addr16
nop
shrl
add
mov
add
sub
mov
push
sbb
arpl
add
add
mov
jnp
std
dec
adc
ss
in
jmp
call
imul
lods
out
dec
fcmovne
out
mov
aas
push
jnp
dec
outsl
das
xchg
dec
lret
xchg
fwait
push
in
insb
fistl
push
imul
mov
sbb
rcl
push
ss
scas
or
pop
push
inc
mov
adc
xlat
pop
push
rcrl
loopne
cmp
mov
cli
es
in
jecxz
sub
sbb
push
add
and
movl
das
das
mov
out
shl
and
fildl
sub
jle
inc
movsl
ret
xchg
aam
rcl
clc
and
mov
lahf
xor
adc
rorl
rclb
loope
les
add
idivb
pop
cwtl
pop
fcmovnb
cltd
lcall
lods
fstl
sub
pushf
test
leave
inc
mov
loope
cmp
fs
adc
cli
pop
dec
mov
xchg
jo
das
bound
inc
sar
aam
push
lds
cli
push
sbb
push
or
and
imul
incb
into
jecxz
sbb
xor
icebp
lds
test
out
dec
mov
mov
dec
sahf
adc
aam
aas
inc
lods
mov
sub
ljmp
shll
andl
sti
mov
jnp
out
cmp
pop
jge
or
movsb
sub
mov
xor
aam
cmpsl
adc
popa
out
iret
mov
mov
mov
jg
or
in
pop
mov
adc
pop
inc
leave
sub
mov
out
pop
js
sahf
mov
fistps
cmc
push
push
or
mov
in
xor
mov
fistl
in
xchg
jb
incl
mov
jnp
inc
inc
fcomip
fwait
xorps
jmp
lcall
cmp
pop
jl
stos
jg
pusha
pushf
sub
repz
push
icebp
cmpsl
loopne
mov
cli
jle
dec
mov
jg
sbb
stc
mov
jl
sti
lods
sub
mov
mov
lcall
xor
mov
sbb
lret
daa
out
dec
jne
jecxz
aad
mov
sarl
cmc
imul
negl
inc
test
loopne
out
orl
lods
lret
push
pop
sub
pop
mov
aas
dec
pop
and
mov
mov
cmp
notl
and
mov
iret
or
out
shr
and
into
fmull
or
scas
add
sub
or
mov
or
jge
imul
aaa
rcrb
loopne
dec
xrelease
jmp
shl
iret
jmp
mov
ret
or
aas
sahf
pop
fmulp
pop
out
ljmp
out
outsb
lret
hlt
scas
mov
out
pop
pusha
fidivrl
rcrl
lods
jecxz
lds
addr16
xor
push
repz
jno
jb
sbb
das
xchg
inc
and
cwtl
jmp
inc
push
fisttpl
icebp
jmp
out
dec
xchg
lock
push
jmp
push
xchg
and
mul
mov
cmp
popa
jns
ds
cwtl
stos
jle
iret
xchg
in
xor
push
cmpsl
lahf
lcall
add
sbb
mov
push
int
xorb
or
jae
stos
adc
jbe
out
fs
sbb
dec
shlb
stc
jne
mov
jmp
jbe
mov
push
pop
jecxz
pushf
xchg
je
loope
loope
fstpl
clc
outsl
mov
adc
cli
or
jp
mov
xchg
mov
lea
or
push
adc
dec
cs
mov
jo
pop
mov
push
dec
sub
or
xchg
pushf
xchg
cmp
rcll
insl
mov
dec
inc
sbb
fs
ja
insb
outsb
addr16
shll
stos
popa
call
movsl
xchg
dec
push
mov
jne
push
call
pop
pop
lock
xchg
jae
fldt
stos
push
or
outsl
fwait
mov
jae
loop
aaa
lret
in
jp
call
ss
cmp
pushw
fsubrs
jno
movsb
jg
and
insl
fbld
fildll
pusha
stc
mov
out
inc
out
cmp
xchg
stc
and
out
cmpsl
cmpb
dec
push
jmp
push
call
xor
insb
stos
xchg
repnz
stc
addr16
jg
cmpsl
call
mov
aaa
cmp
mov
mov
clc
dec
je
call
nopl
cwtl
fisttps
ret
cmpsl
or
jl
adc
xor
pop
aas
aam
xor
cmp
mov
je
sub
cs
mov
adcb
call
movsl
sahf
pop
fidivrl
push
xor
dec
sbb
fst
dec
jns
faddl
lahf
in
aad
jp
mull
subb
into
scas
and
shr
scas
cmp
jp
xor
mov
mov
mov
jecxz
outsb
xor
cmp
and
dec
add
push
in
mov
out
daa
fld
jns
xchg
mov
das
mov
mov
fsubrp
push
add
cmp
dec
imul
lock
icebp
pop
sub
mov
fmuls
push
add
sub
out
clc
or
and
scas
pop
fadds
int
call
test
mov
cmpsb
push
arpl
orl
or
ret
push
test
push
jmp
fxch
ror
insl
gs
mul
fs
xor
jb
sbb
mov
push
push
and
insb
jnp
add
push
ret
imul
filds
adc
xchg
inc
xchg
mov
stos
movsl
out
jb
push
adc
in
xchg
mov
push
dec
pop
cmp
jg
jnp
or
enter
popf
fs
jmp
jns
vshufps
pusha
ljmp
stos
push
and
mov
mov
mov
jo
cs
iret
rolb
cmp
add
pushl
cmp
lcall
lock
iret
cmpl
jne
negl
fs
int
arpl
mov
mov
addl
outsl
dec
xchg
pop
pop
cs
jp
nop
mov
fdiv
mov
sbb
jne
bound
xchg
xlat
icebp
xchg
jmp
dec
sub
aad
mov
fsubr
lods
add
add
divb
sbb
arpl
push
lret
lds
mov
mov
xchg
movsb
stc
and
mov
mov
sub
and
add
mov
scas
pop
cmc
lahf
xchg
adc
jge
adc
stos
dec
mov
push
rorb
popf
ja
clc
sbb
ja
jle
iret
mov
imull
gs
andl
cmp
xor
movsl
add
filds
pop
lret
inc
or
mov
das
ficoml
enter
std
push
pop
cli
test
sbb
mov
call
stos
cmc
push
dec
xchg
es
in
sub
std
mov
push
icebp
push
leave
das
jl
sub
int
daa
stos
xchg
cmpsb
jp
and
sub
outsb
dec
ss
inc
repnz
xchg
lods
lret
add
dec
sbb
fildl
xchg
xchg
dec
repz
mov
dec
dec
mov
fwait
ss
cltd
aaa
cli
int
mov
push
sub
ret
dec
addr16
gs
clc
cmpsb
mov
inc
movb
popf
enter
daa
je
pop
cltd
out
jp
pop
sub
or
mov
and
xchg
fidivrl
lret
outsb
xor
mov
loop
pop
jae
sbb
in
mov
jp
out
sub
cld
icebp
jmp
xor
scas
push
xchg
lods
jnp
movsb
inc
ja
add
loope
fimuls
call
loope
mov
leave
mov
mov
fisubrl
and
fistpl
in
push
scas
inc
repnz
aaa
loopne
stos
add
imul
or
mov
and
jae
xor
cmpsb
mov
push
mov
decl
dec
jl
insl
idivl
in
cs
fucomip
mov
in
sbb
fisubrl
out
data16
and
inc
imul
mov
fstl
out
arpl
repnz
outsl
rorl
xchg
fnstsw
mov
mov
mov
inc
filds
and
ret
mov
mov
jge
sbb
sarl
rdpmc
sub
jbe
sahf
or
fwait
cmp
ror
inc
dec
add
mov
push
jmp
mov
in
call
bnd
jmp
sbb
mov
sbb
scas
aam
mov
jae
loop
fistpll
mov
xchg
les
pop
mov
dec
frstor
lods
mov
mov
mov
jnp
adc
sahf
and
pushf
ret
jae
insl
pop
out
jge
or
xor
add
out
pop
int3
pop
adc
pushf
stc
cltd
mov
jp
sub
mov
mov
inc
das
inc
cld
cmp
jmp
lea
and
push
add
adc
repnz
movsb
in
int3
mov
pop
pop
lea
mov
jmp
fcom
dec
xchg
shr
or
test
jg
and
sub
loopne
or
and
cmc
scas
mov
jnp
or
mov
inc
pop
jae
inc
outsl
and
sahf
aas
adc
mov
jae
add
sbb
decl
jae
jge
cmp
hlt
jae
cli
jp
pop
jno
jge
adc
jmp
fnstenv
cmp
dec
xlat
stos
mov
cmc
outsl
inc
and
dec
mov
adc
mov
lock
cli
imulb
testb
addr16
jbe
jne
lahf
adc
cwtl
les
and
aas
out
mov
mov
stc
fbstp
jmp
cmp
and
leave
jmp
xor
dec
pop
dec
ja
lret
inc
mov
repz
xchg
stc
outsl
jb
iret
or
mov
dec
cli
repnz
or
cmc
out
jp
xchg
xlat
lods
dec
sub
dec
movsb
test
add
mov
xor
sub
mov
add
fsubrl
sub
or
xchg
pushf
sub
jge
push
adc
test
xchg
xchg
mov
popa
insb
vorpd
adc
out
jae
pushf
rcrl
mov
jl
test
pop
js
in
lea
in
push
lock
add
xchg
add
cmp
popf
daa
aaa
data16
es
int3
pushf
lock
daa
mov
fdivl
lods
lods
and
aad
js
xchg
sbb
std
pop
in
mov
or
fstl
lock
pop
sti
push
sti
mov
inc
add
xlat
fs
test
repnz
cmc
xor
add
cmp
and
mov
test
scas
mov
xor
cmp
fisttps
fists
lods
jmp
inc
pop
xor
aad
push
popa
and
jnp
sub
adc
mov
push
insb
push
test
sti
inc
iret
sti
xchg
ljmp
cltd
push
xchg
mov
mov
hlt
cwtl
xor
mov
jp
cwtl
mov
cs
add
outsb
and
add
add
loop
fistps
sti
out
insl
js
in
jne
nop
xor
int3
cmp
push
and
sbb
xchg
loop
ret
jg
and
stos
and
sub
xchg
inc
lret
test
addb
mov
and
xor
jp
mov
enter
mov
and
inc
jae
and
xor
mov
int
dec
call
mov
xor
cmp
jg
fs
aas
jno
lahf
scas
mov
outsl
repnz
test
icebp
jb
xchg
out
xchg
mov
hlt
mov
dec
push
into
lods
and
sarb
fimuls
or
fwait
out
loope
stc
fstpt
neg
aas
add
stc
sub
sub
enter
xorb
mov
repz
dec
js
decb
lahf
lock
loopne
fisubs
div
dec
xchg
inc
xchg
cli
xlat
fdivrp
jmp
cmp
cmp
in
dec
cmp
mov
mov
push
cmp
push
xchg
lret
mov
es
ret
jnp
sbb
aam
mov
pop
repz
movsl
lock
pop
popf
push
aad
pop
mov
mov
fwait
push
jo
clc
mov
push
or
jnp
mov
out
dec
test
invd
cmp
fisubrl
test
mov
lea
cltd
sub
gs
or
mov
shlb
sbb
dec
jnp
outsl
pop
jo
scas
movsl
pushf
out
fstpl
test
subb
jmp
mov
add
stos
pop
xor
flds
xchg
mulb
in
cld
or
adc
mov
dec
pop
dec
imul
xchg
push
cld
popf
mov
daa
sarl
pop
shl
jae
sbb
mov
stos
ret
ret
dec
sub
jle
pop
fcoms
push
sbb
shlb
pop
aaa
test
repz
fwait
mov
jbe
pavgw
and
aaa
xor
stos
ja
adc
scas
sbb
mov
xchg
in
mov
stos
rcrb
jecxz
fs
mov
dec
aaa
bound
push
cmc
mov
push
out
in
fcmove
out
push
pop
jne
mov
sahf
dec
lods
push
js
repz
shrb
jnp
test
iret
aaa
inc
out
xchg
aaa
jb
jb
insl
pop
mov
ds
lahf
dec
subb
test
xor
xlat
pushaw
sti
push
sub
sbb
mov
jbe
flds
fwait
daa
fists
xchg
out
inc
int
cmp
pop
push
mov
aas
jl
mov
sbb
cmp
fmuls
and
ja
inc
outsb
negl
mov
jae
push
add
data16
ja
sub
mov
enter
push
push
test
mov
out
push
push
dec
test
pop
adc
jp
mov
fsub
nop
or
xchg
inc
or
loope
dec
pop
mov
shl
jns
cmp
pop
mov
cmp
in
xor
cld
cmp
arpl
aam
popf
sbb
jo
cmp
xor
sub
divb
out
dec
dec
pop
stc
cmpl
and
push
into
mov
gs
push
cmpsb
add
sbb
xchg
adc
mov
push
jmp
fists
and
xchg
sub
incb
adc
xlat
jg,pn
mov
scas
xlat
inc
xlat
mov
mov
jp
test
jmp
scas
mov
scas
xor
xchg
sti
dec
jp
test
in
lods
lcall
inc
outsl
pop
or
jb
iret
mov
adc
jno
xlat
mov
dec
pop
fcompl
int
cmc
add
cmp
jb
outsb
aaa
cs
xchg
sti
jmp
adc
stos
mov
movsb
cmpps
fbstp
mov
push
cmp
lods
adc
ret
lcall
pop
daa
jmp
cmpsl
mov
in
aas
jp
xchg
out
in
data16
sub
cmpsl
mov
cmpsl
xor
xor
sub
int3
aam
incl
xor
pop
cmp
mov
sub
ljmp
iret
xchg
mov
sahf
add
js
dec
cmp
iret
mov
lret
xlat
notl
push
ret
scas
sbbb
jecxz
and
mov
and
sbb
icebp
pop
mov
xchg
fs
xchg
inc
cmpsl
inc
inc
add
mov
mov
int3
cli
insl
rorl
mov
pop
in
mov
shrl
and
dec
ja
ret
add
icebp
adc
push
ljmp
push
xchg
xchg
mov
test
outsb
mov
aad
into
add
das
adc
add
dec
and
lea
pop
pop
dec
cmp
adc
add
xchg
push
jae
jmp
adc
fbld
inc
into
jnp
scas
pop
mov
cmp
cltd
in
adc
aas
nop
xchg
cltd
fsubrl
sbb
jae
sbb
add
jnp
xor
fistps
adc
mov
jns
aad
fs
add
xchg
cld
lret
xor
loopne
add
add
pop
fwait
push
int3
add
pop
lds
sbb
pop
xchg
fcoml
or
mov
shl
repnz
xchg
outsb
dec
adc
ja
mov
idiv
xor
aaa
cmp
mov
pop
cmc
stos
or
fildl
or
dec
push
ss
push
mov
insl
leave
je
je
dec
push
and
add
sahf
outsb
jp
insb
shlb
ret
add
adc
ds
out
xor
dec
jb
push
and
mov
std
cmpsl
and
xchg
xorl
pop
jo
fdivrl
stc
push
mov
jne
and
cmp
mov
mov
or
iret
add
lahf
mov
sbb
sub
int
mov
or
fstl
xchg
shll
test
out
mov
jo
fcmovnbe
scas
mov
mov
jo
cmp
sub
fucomip
scas
ljmp
cmp
xchg
sbb
outsl
xchg
in
mov
test
fxch
stos
pop
and
sub
ret
sbb
mov
lahf
out
icebp
inc
dec
fdivs
push
lahf
adc
inc
das
sti
dec
cmpsb
jo
sbb
std
arpl
dec
in
mov
jne
and
imul
leave
xor
outsl
orb
xor
mov
mov
sub
xchg
pop
mov
inc
fstpt
aaa
sahf
mov
xor
out
jp
popf
into
inc
ja
xchg
fsub
dec
adc
outsl
daa
and
ja
ficoml
insl
int3
insl
call
in
xor
cmp
fucom
mov
pop
dec
inc
push
icebp
icebp
ficompl
lret
dec
je
xor
in
jecxz
mov
jmp
push
inc
pusha
dec
js
add
sub
mov
jg
in
lret
mov
cli
or
cmp
push
mov
jmp
test
out
mov
push
scas
gs
movsb
mov
mov
inc
jb
adc
and
cld
xor
orb
or
push
jmp
jecxz
push
in
xor
int
xchg
xlat
adc
movb
adc
pop
mov
mov
imul
fucomp
stos
or
add
les
mov
jle
int
popf
sub
in
loop
xor
jmp
test
pop
clc
mov
xchg
out
ljmp
loop
inc
daa
push
into
insl
add
jl
mov
sub
cmc
fistpll
adc
enter
push
out
mov
outsb
setl
aas
div
dec
adc
cwtl
gs
repz
icebp
pop
das
mov
and
inc
das
bound
jmp
iret
lret
rcrl
ja
xchg
xchg
ret
add
mov
ja
cmp
movsl
lock
xchg
pop
fnstsw
test
cmc
lock
dec
xchg
pop
inc
pop
jg
sub
inc
add
jge
cwtl
mov
testb
ljmp
dec
pop
cmp
jle
pop
xchg
jp
cmpb
sti
pop
xor
inc
cwtl
pop
lds
cmp
stos
pop
jge
mov
push
dec
sbb
xchg
mov
xor
pop
mov
popf
mov
addr16
fbld
xor
aas
inc
shlb
cmp
fsubrs
mov
and
arpl
jnp
sbb
ja
outsl
jecxz
mov
push
jmp
es
push
lahf
into
sub
lret
frstor
lahf
imul
fnstsw
in
loope
repnz
cld
sbb
not
mov
orb
or
call
leave
int
xchg
shrl
gs
mov
xlat
jno
sub
jge
xlat
xlat
int3
xor
adc
push
ficoml
ret
xor
adc
sub
sub
push
mov
or
gs
rclb
scas
in
dec
scas
xchg
dec
icebp
jmp
xor
out
jg
out
aam
lcall
jl
and
push
icebp
or
cmp
jp
adc
xlat
pop
dec
ds
dec
cltd
push
lcall
rclb
jbe
inc
out
push
stc
in
ret
ret
mov
out
mov
std
xor
cmp
inc
mov
cmp
sbb
movsb
fstpl
mov
mov
sahf
mull
ret
fwait
or
dec
pusha
cmp
dec
xchg
cmp
add
into
stc
flds
sub
ret
ficomps
lods
mov
jle
les
aaa
mov
ror
dec
or
repz
insl
ret
movsl
int
pop
shr
inc
dec
fildl
test
cmp
xchg
imul
sub
cld
push
xchg
cmp
ds
shr
sbb
stos
dec
insb
lret
xchg
push
je
pushf
adc
movsl
mov
mov
sbb
lret
ljmp
fnstcw
jns
popf
pop
or
mov
cmp
movntps
ds
pop
sub
dec
push
pop
enter
mov
inc
lea
orl
xorl
jmp
icebp
mov
push
outsl
into
jecxz
loopne
fs
lahf
push
test
add
sbbl
call
jmp
push
jnp
push
lock
lahf
nop
xchg
cmp
aas
xchg
fnstsw
xchg
pop
les
loopne
std
and
adc
loopne
xor
fcmovu
in
outsb
pop
int3
scas
adc
pop
sti
lods
mov
ret
sbb
repz
sbb
mov
mov
les
iret
subl
cmpl
inc
sar
cld
popa
and
ret
jo
xor
in
mov
or
pop
scas
push
push
inc
cmc
push
lret
fdivr
imul
clc
mov
ret
adc
ret
test
fcmovnu
mov
cltd
or
idiv
test
out
mov
push
pushf
imul
cmp
add
push
and
push
jns
rorl
sbb
xor
add
fnsave
ljmp
repz
mov
mov
sub
aam
mov
dec
out
or
lcall
push
cli
xchg
push
lret
cltd
rcl
or
pavgb
aas
fcomip
iret
cld
aas
nop
cmp
pop
pushl
movsl
icebp
cld
dec
xchg
mov
cmp
out
mov
dec
sbb
pop
jnp
cmpsl
cs
xchg
pop
mov
hlt
test
fnstcw
scas
ja
xchg
push
jbe
add
icebp
ficomps
mov
push
sub
js
xor
xor
jae
xor
mov
and
jg
sub
out
xchg
imulb
icebp
loope
mov
scas
clc
add
repz
dec
data16
dec
lea
sub
clc
movb
and
mov
outsl
hlt
leave
mov
jp
jb
in
mov
lahf
cld
daa
inc
pop
pop
out
outsl
dec
jg,pn
jge
aas
push
sbbl
ljmp
lds
repz
add
leave
add
js
mov
sub
push
cmpsl
mov
jg
push
mov
dec
hlt
aam
or
push
push
stos
inc
mov
pop
inc
fistps
jl
or
call
dec
xchg
push
jne
or
or
mov
test
mov
cmp
fsubs
xlat
push
nop
out
adc
sbb
lods
arpl
rolb
test
repz
and
cmpl
and
cld
rclb
push
roll
ja
mov
xlat
jg
mov
mov
fistpl
adc
cmp
int3
leave
sahf
mov
mov
mov
cld
push
fistpll
int3
loopne
repz
push
xchg
inc
out
hlt
xor
mov
mov
pop
jbe
scas
adc
mov
mov
jl
fwait
es
test
dec
nop
sahf
cld
test
and
mov
jmp
push
mov
xchg
scas
sti
call
inc
je
lods
ljmp
out
loope
repnz
in
out
dec
adc
sub
loop
dec
in
mov
ret
jle
je
ja
test
jno
jg
push
sub
jbe
mov
cltd
filds
sbbb
cmpsl
icebp
dec
out
xor
mov
dec
cltd
cmp
test
js
sbb
dec
in
mov
mov
ja
sub
addr16
fs
cmp
rcr
mov
leave
hlt
into
cmc
sbb
dec
fcomp
adc
jns
jg
xchg
icebp
mov
jp,pt
iret
push
out
fs
loop
or
out
and
lock
fldcw
cli
pop
and
loope
and
js
out
pop
pop
pop
jp
jns
add
js
sti
clc
fs
jge
mov
xchg
sti
mov
and
cld
inc
and
out
xchg
or
lret
insl
cltd
mov
xchg
sub
xchg
repnz
sbb
xor
das
jg
inc
addl
xchg
mov
clc
mov
fldl2e
ja
pop
lods
dec
js
rcl
movsl
int3
stc
push
std
loop
jmp
and
call
push
js
je
inc
pop
out
sub
sub
push
jmp
mov
jecxz
adc
cmp
ds
mov
adc
jns
data16
pop
sti
mov
fisubrs
cmp
push
mov
add
shrl
fnsave
movsb
mov
pop
jae
add
and
faddp
inc
dec
fwait
and
push
lret
push
pop
repz
aaa
sbb
pop
mov
jp
call
add
ljmp
sbb
add
pop
mov
push
pop
enter
mov
arpl
lods
mov
cmp
fs
pop
mov
pop
dec
lea
mov
add
loop
outsl
sbb
pop
mov
fdivs
xchg
dec
jnp
test
rclb
clc
iret
rclb
mov
pop
out
lcall
repz
js
cli
add
and
data16
lods
lods
ljmp
and
aad
sub
ljmp
jbe
fisttpll
repnz
ss
mov
idiv
shll
arpl
cli
inc
arpl
jne
xor
cs
jb
pusha
dec
out
adc
fcmovne
lods
mov
mov
fst
negl
jle
or
aam
jle
rorl
add
cmp
fistpll
push
mov
ficompl
aaa
and
sbb
cmc
rclb
out
mov
jp
jbe
pushf
mov
insl
pop
xor
pop
imul
cmc
pushf
fiadds
pop
scas
test
gs
and
push
lods
decb
lods
xor
jmp
fs
xchg
xchg
and
push
test
pop
nop
iret
cmpl
jo
cmp
sbb
xor
jecxz
and
and
cmp
rcl
add
repnz
pop
xor
repnz
in
xor
scas
xchg
leave
aaa
mov
or
xorl
js
cmp
ljmp
cmpb
jne
out
jne
mov
js
mov
jne
ret
add
loopne
arpl
clc
add
std
and
imul
mov
mov
pop
loop
sti
shrl
mov
push
cs
cmp
mov
clc
xchg
lret
idivl
movsl
bswap
push
mov
scas
dec
pop
dec
dec
pop
adc
fnstcw
mov
or
lea
js
adc
lcall
insl
inc
test
movsb
sti
or
sub
lods
into
push
jl
mov
cmp
mov
cmp
das
xor
push
ret
fldl
mov
sbb
movsb
cmpsl
clc
cmc
hlt
sub
enter
lock
mov
ds
daa
daa
xchg
mov
and
adc
pop
cs
pop
xlat
pop
push
mov
in
std
dec
lcall
and
cmp
mov
xor
fadds
mov
test
fbld
in
bound
adcl
fwait
push
enter
cmp
inc
out
jle
and
fiaddl
sbb
push
mov
dec
cltd
pushf
fdivl
inc
adc
pop
out
fists
insl
fldt
jl
imul
out
pop
cli
lcall
insb
sub
in
pop
sub
loopne
int
cltd
repnz
scas
jae
stc
ja
aad
std
lods
adc
nop
sahf
xor
loop
mov
outsb
iret
frstor
lods
xchg
aas
fistpl
sbb
outsb
or
shl
ja
shrb
inc
mov
cltd
test
jns
cs
and
sub
cmp
xchg
out
xchg
in
in
xchg
imulb
xchg
mov
pop
aad
pop
or
fisubrl
xchg
jle
rcr
sub
aaa
popf
push
addl
push
addr16
cltd
rcr
mov
jo
imull
push
cmp
push
je
mov
sti
jecxz
out
cld
jmp
sub
popl
push
mov
lret
xor
decb
aad
shlb
cwtl
or
loopne
inc
and
adc
movsb
std
in
sti
mov
loop
add
mov
xor
dec
pushf
mov
sbb
ja
sbb
xchg
adc
imul
scas
cli
push
jmp
out
xor
repnz
cs
mov
jl
lods
cmpb
sbb
jge
adc
sahf
gs
leave
xor
cmp
mov
or
fs
insl
in
push
fwait
push
sub
push
das
std
sub
fwait
test
fldt
scas
inc
mov
jns
pop
in
sub
jg
dec
sbb
sti
xor
mov
lret
jnp
cmp
pop
iret
push
lcall
jo
arpl
mov
stc
das
jl
neg
in
xlat
aam
loopne
pop
sti
stos
inc
arpl
call
adc
scas
in
lret
aam
mov
fistl
pop
aas
add
push
call
xor
mov
outsb
or
jg
jnp
jmp
mov
clc
cmpsb
outsl
out
and
in
inc
xchg
cmp
ret
ffree
xchg
lods
stc
test
ss
push
cmc
jb
add
lock
inc
jg
ljmp
repnz
fs
lcall
mov
ret
leave
sarb
cmp
sbb
adc
inc
and
pushf
cmp
inc
mov
fistpl
push
lahf
in
divb
mov
mov
fwait
push
jbe
stos
mov
lcall
shll
notb
cmp
insb
sub
testl
loopne
les
pop
mov
scas
mov
popa
test
fnsave
dec
ss
xlat
push
xchg
fmuls
mov
testb
inc
test
addr16
js
lock
repnz
loope
pushl
mov
enter
mov
dec
insb
dec
fwait
popf
aam
xor
hlt
push
es
iret
sar
insl
push
pop
push
stos
push
es
rcrb
test
test
lcall
ret
mov
clc
scas
repz
stos
jae
mov
inc
push
jecxz
aad
sbb
lock
int
xor
pop
cmp
sbb
cmp
cli
loop
divb
fisttpll
adc
sub
jmp
repnz
lcall
mov
pop
push
jecxz
cs
shl
jp
xchg
jge
iret
pop
mov
je,pn
loop
vpcmpgtd
scas
jns
aaa
ret
fwait
leave
push
outsl
popa
add
mov
and
in
pop
add
arpl
cmove
popl
pop
test
out
mov
es
xlat
std
in
mov
call
faddl
idiv
mov
shlb
cmpsl
ret
jae
push
imulb
ja
rolb
mov
lea
sbb
push
sub
pushf
imul
stc
inc
push
push
push
lret
fwait
lods
loop
or
aad
add
sbb
loop
jg
fwait
inc
pop
jae
inc
out
cltd
mov
fwait
xlat
push
mov
and
sub
jecxz
cmp
jecxz
lods
lods
in
inc
jne
add
jae
jno
adc
lret
fsubp
cmp
stos
movsl
loopne
inc
scas
inc
cmp
mulb
repnz
arpl
inc
aas
sbb
sub
jns
jle
data16
outsl
cmc
mov
dec
xchg
jl
inc
loop
adc
mov
into
add
mov
mov
ret
push
int3
scas
ja
jno
fistpll
cs
cld
loope
ficoml
pop
int3
clc
cwtl
hlt
cs
loop
inc
sub
repnz
cltd
and
dec
xchg
mov
js
daa
int3
pop
xchg
pop
repz
lods
mov
pop
xchg
divb
out
fists
xchg
lea
sub
pushf
push
in
pop
mov
int3
leave
lret
mov
pop
shll
pop
sti
xchg
add
roll
inc
jl
and
or
xchg
dec
ja
jecxz
clc
and
stc
div
jle
addr16
std
repnz
xchg
cmpsb
cs
push
popa
fdivl
es
in
cmp
lret
outsl
les
outsl
subb
inc
filds
cld
idivl
test
or
insb
ror
je
data16
les
jle
cltd
xor
push
and
pop
jg
lret
add
sbb
adc
or
addr16
cmp
sbb
aaa
jecxz
aas
mov
fwait
shrl
repnz
inc
xor
mov
mov
scas
test
cmp
mov
std
mov
xchg
xor
adc
add
sti
lret
mov
mov
pushf
hlt
addr16
pop
frstor
mov
inc
lcall
jae
lock
icebp
data16
sbb
int
sub
mov
test
add
outsb
adc
mov
xchg
movsb
jbe
iret
pop
inc
ret
jno
iret
call
mov
icebp
fdivr
test
out
jo
cmp
xor
in
iret
jmp
and
jnp
xchg
and
xor
decb
push
rcr
fsubs
lahf
mov
call
repz
sahf
xlat
sahf
dec
jae
jmp
sub
ficompl
mov
pop
pop
clc
outsl
and
xlat
xchg
xorb
notb
inc
icebp
sub
pushl
sti
cltd
sbb
jnp
mov
sar
rcll
das
mov
adc
call
push
pop
and
sub
test
cmp
push
jnp
cs
scas
lret
xor
aas
out
add
out
lea
or
mov
loopne
pushf
push
call
inc
inc
gs
add
mov
pop
into
outsl
testl
scas
inc
add
je
sbb
lea
fildll
mov
fwait
testl
mov
mov
push
test
inc
jae
repz
sti
push
pop
les
ficompl
dec
in
cmc
mov
aad
xchg
cmp
cwtl
adc
fstpl
repz
aad
mov
mov
mov
and
lods
shr
jnp
rclb
sbb
iret
out
aas
xchg
daa
loop
sub
xchg
popf
cmp
and
cmp
shrl
lret
mov
mov
fsubs
mov
xor
ljmp
push
dec
mov
push
adc
mov
sub
or
fcmovnu
mov
sahf
sbb
add
movsl
aas
pusha
mov
test
loope
adc
inc
repz
stos
mulb
fildl
dec
outsb
aam
pop
iret
dec
test
ja
jnp
das
xchg
fsubs
mov
jbe
popa
jmp
xchg
mov
push
mov
in
xchg
sbb
pop
dec
pop
fucomp
scas
ds
ret
dec
test
lahf
and
shrl
push
cmp
gs
xchg
sti
jmp
adc
adc
jns
dec
inc
inc
mov
xchg
jmp
cld
loope
fdivs
inc
jmp
xchg
add
mov
aas
stos
xchg
repnz
jns
cmp
jnp
ljmp
flds
xchg
sahf
mov
mov
std
sbbl
push
sti
daa
out
scas
or
cmp
xor
and
mov
xchg
sbb
xchg
pslld
xchg
mov
push
idiv
aas
push
xchg
jge
inc
lds
xor
xor
les
mov
ja
fcomp
aam
fmul
int
lods
xchg
sahf
mov
jp
fldt
test
xchg
push
jp
into
dec
mull
cld
int3
sub
add
rcrb
inc
mov
sub
pop
roll
int
inc
addr16
pop
mov
leave
adc
sbb
loope
xchg
mov
cmp
js
push
xlat
pop
jle
shll
dec
in
fcmove
test
insb
cwtl
push
jne
add
push
sti
iret
pop
adc
pop
sub
enter
rclb
jle
add
cmp
or
or
add
in
push
sub
fstl
inc
shrb
int
mov
imul
or
inc
addr16
add
rclb
jbe
jae
pop
lock
xor
xchg
pop
xor
in
adc
call
sub
inc
dec
mov
loope
cmpb
lahf
out
xchg
xchg
in
cmpsl
decb
sti
divl
rclb
and
cli
xchg
pushf
in
mov
pushl
or
jbe
push
xchg
rol
mov
mov
pop
cld
fcoml
cs
mov
shll
cmc
fninit
les
jmp
pusha
popf
push
add
cmp
stos
dec
scas
arpl
aas
cmp
pop
lods
lods
mov
sarb
loope
jmp
ret
scas
ret
pop
or
loopne
dec
inc
int
add
lock
inc
pop
jle
ds
roll
lock
ds
rorb
sbbb
dec
loop
dec
loope
sub
loop,pt
sbb
lcall
mov
push
jg
pop
bound
in
jecxz
nop
iret
movsb
fsubrl
lcall
sub
adc
xor
mov
imul
dec
imul
movsl
mov
decb
dec
or
fadds
imul
inc
pop
cld
mov
dec
imul
or
jp
add
jns
jnp
rcr
mov
mov
sub
scas
lret
jns
cli
cmp
cmp
testb
dec
scas
mov
div
bound
push
repz
ficoml
dec
sarb
add
xor
mov
stc
int3
mov
mov
mov
js
jge
sbb
out
loopnew
sti
or
dec
xchg
inc
inc
sti
sahf
adc
aad
movsl
xor
call
fsubs
mov
xor
jg
mov
cmpsb
shr
xchg
xor
icebp
dec
ret
mov
mov
inc
mov
push
lods
fisubrs
test
inc
mov
mov
int
cmp
dec
mov
mov
shrl
popa
sarl
repz
call
push
fwait
pop
rorb
fwait
std
nop
mov
mov
gs
andl
outsb
out
sub
dec
cs
arpl
jno
lock
xchg
fwait
mov
cs
es
cmpsl
lret
dec
xchg
dec
cmp
jp
dec
hlt
cmp
sub
mov
and
adc
xor
push
lea
jmp
aaa
sub
jp
js
jo
aad
into
imul
fldpi
adc
xchg
clc
push
imul
push
int
add
in
push
lahf
into
push
lahf
nop
dec
iret
push
dec
and
test
mov
sbb
xchg
or
jns
loope
dec
fnstsw
mov
ss
fistpll
divl
testl
xor
jge
mov
and
fwait
xlat
pop
pop
jp
call
loope
ficoms
sar
insb
sub
popf
and
inc
mov
push
das
sahf
inc
fbstp
inc
mov
mov
or
mov
jl
ds
out
pop
cltd
jmp
and
jns
mov
jne
cld
stc
inc
dec
jbe
lahf
test
mov
out
loope
mov
out
jle
fistps
add
gs
movsl
fst
loopne
stc
adc
addr16
fs
cmpsl
cmc
cmpb
xor
stc
push
or
out
mov
jbe
iret
xor
maxps
xlat
add
out
xlat
and
shl
cltd
arpl
jg
xor
mov
jg
fst
ljmp
inc
loopne
int3
jge
fimull
cmc
mov
xchg
pop
std
bound
mov
repnz
dec
into
iret
out
xchg
iret
sub
out
js
out
jp
clc
outsl
sub
jb
lcall
xor
and
icebp
leave
insl
clc
in
push
cmp
inc
pop
mov
stos
push
loop
or
mov
pop
sbb
shll
xorb
push
push
out
aas
rol
scas
lea
mov
inc
daa
hlt
inc
inc
mov
jecxz
scas
in
stc
fidivrl
mov
repz
int
insl
push
xchg
jge
aas
lods
in
inc
fistpll
arpl
movsl
push
lret
xchg
jecxz
inc
loopne
std
sub
push
xchg
mov
out
push
pop
mov
into
pop
ja
lcall
xor
in
movsl
lea
cmp
int
fistl
or
mov
sub
pusha
popf
repz
idivl
mov
scas
rcrl
psubusb
jmp
and
cmp
dec
jmp
jle
outsb
xchg
sbb
jecxz
shlb
icebp
out
mov
test
pop
scas
inc
stos
jno
or
enter
ss
and
mov
mov
mov
jns
jge
jle
sbb
cmp
sub
iret
push
push
push
cmpsl
sub
push
mov
js
cmpl
pop
xor
add
or
jbe
decl
dec
add
out
cmp
sbb
adc
movb
ficomps
loope
out
out
or
testl
xchg
sub
sarl
out
sub
ja
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
subl
enter
xor
das
mov
add
mov
fidivrl
sti
imul
xchg
out
ficomps
mov
sbb
shl
das
sub
or
ret
jge
pushw
jmp
flds
xchg
inc
add
repnz
inc
jp
inc
push
std
and
inc
cmp
push
mov
inc
inc
and
xchg
dec
or
adc
fiadds
xor
pop
push
scas
xchg
mov
adc
fisubs
clc
push
addr16
rorb
lods
icebp
mov
scas
cmp
lahf
xchg
jnp
pop
lock
and
jmp
jno
and
ficoms
mov
mov
jmp
imul
mov
out
idiv
ds
xor
cltd
sub
jmp
adc
aaa
dec
insb
lock
cltd
mov
aam
pop
outsl
dec
adc
stos
sub
jg
mov
subl
jg
ss
icebp
or
repz
mov
push
incb
ja
sbb
xor
ja
lcall
int3
push
or
push
jge
into
gs
sbb
out
xor
shlb
sbb
xor
mov
mov
xor
xor
inc
pop
xor
sbb
sahf
mov
ljmp
push
enter
or
lock
outsl
insl
arpl
pop
leave
mov
dec
repz
in
out
cmp
ds
dec
pop
lcall
testl
cmpsb
out
clc
push
pop
jnp
push
pop
push
gs
cmp
lods
repz
sti
cmpsb
jge
rorl
stc
sbb
cmc
leave
mov
std
push
cld
pop
gs
inc
std
out
fisubl
testl
cld
test
mov
aam
pop
xor
insl
lret
lret
sub
out
adc
ds
cmp
mov
push
sub
cmpsl
jne
xor
repz
int
and
scas
push
and
jecxz
jae
pop
cmpsl
push
leave
mov
cmp
outsl
lds
ja
push
in
leave
std
pop
xchg
push
sbb
ljmp
mov
sar
das
mov
add
push
and
hlt
sub
adc
pop
add
int
scas
push
dec
insb
std
adcb
cmp
cmc
test
jae
xchg
push
xchg
insl
pushf
mov
jmp
movsb
outsb
loopne
xlat
mov
jg
popf
lea
cmp
sub
out
pop
xor
cli
dec
jge
jmp
jle
popf
add
jl
adc
insl
push
fnstenv
jbe
jne
roll
jl
jmp
sti
mov
push
adc
adc
ljmp
incb
ja
mov
hlt
inc
daa
mov
data16
and
inc
push
imul
das
int3
adc
js
pop
rcrl
inc
imul
push
sahf
mov
test
mov
push
pop
ja
mov
stos
pop
fstpl
aas
pop
fcom
mov
out
insb
sti
inc
idiv
or
fcmovb
jmp
out
loop
sub
add
pushf
lods
pop
dec
pop
mov
mov
jl
mov
mov
in
push
test
test
mov
jnp
les
int
ljmp
mov
mov
push
cmp
out
or
cmpl
cmp
jmp
cmpsl
into
lcall
cmp
fdivs
roll
jae
out
cmp
xchg
push
adc
aaa
scas
xlat
xchg
xor
xchg
cmpl
je
xlat
push
push
dec
inc
mov
dec
call
stos
lcall
cmp
fidivrl
cmp
test
mov
cmp
imul
xor
es
je
jg
inc
jns
out
out
dec
push
decb
sub
lret
xor
add
sbb
mov
mov
or
sub
out
in
jb
xor
inc
xchg
scas
pusha
xlat
cmp
sub
jg
repz
push
jnp
roll
xchg
adc
pop
stos
pop
movsb
stc
scas
insl
jnp
sti
adc
xor
xchg
xchg
cmp
sahf
dec
into
repnz
mov
mov
bound
cmp
ja
into
cltd
adcl
xorb
cli
mov
out
push
lahf
cmp
xchg
sub
fbld
loop
mov
mov
dec
xchg
fsts
outsl
ficoms
sub
push
lcall
decl
xor
xchg
cli
xchg
xchg
or
repz
jns
daa
sti
push
xor
mov
test
aad
sub
jb
inc
mov
es
lahf
cmp
ss
or
xor
filds
dec
lods
nop
mov
sub
add
mov
bound
fcoms
cmc
ficoms
jle
imul
pushf
pop
xchg
bound
dec
iret
ljmp
test
add
cmp
push
insl
lea
fdiv
movsl
mov
lret
mov
dec
mov
push
leave
push
dec
das
lret
es
xlat
lret
mov
sbb
jmp
inc
add
inc
jb
cmp
hlt
pop
cmp
pusha
cmc
ljmp
leave
push
adc
test
gs
rcrb
ljmp
xchg
popa
jecxz
out
scas
outsl
cltd
ljmp
mov
pop
adc
mov
sub
shr
mov
mov
mov
adc
fisttpll
lods
sti
cpuid
pop
shrl
std
call
mov
mov
jmp
in
push
jno
clc
cmpsb
add
sub
adc
out
sub
mov
mov
insl
jns
call
cmpsl
lret
aaa
pushl
pop
mov
ja
roll
mov
xlat
xor
dec
repnz
lods
pop
pop
popf
enter
lret
test
js
xchg
fists
fwait
cmpsl
mov
jns
ficoml
imul
mov
jmp
jge
in
inc
mov
test
lds
dec
insl
mov
and
mov
push
lret
test
xchg
fldl
cmp
insb
jnp
lret
lahf
jle
int
add
jne
test
fimull
jnp
xor
hlt
inc
cmpsl
jbe
cmp
scas
xchg
xchg
flds
push
test
pop
add
pop
mov
ja
loope
punpcklwd
xchg
sarl
inc
mov
cmc
out
mov
xor
add
in
push
daa
jo,pn
mov
hlt
xor
jp
lret
clc
es
out
sti
pop
mov
xchg
idivb
stos
fisttpl
divb
gs
insb
mov
test
pop
mov
sbb
mov
jbe
icebp
or
flds
loop
fmull
jge
cmp
mov
es
shrl
pop
fbld
mov
adc
aad
sub
ss
pop
outsl
mov
ss
out
incl
dec
test
shrb
popf
clc
ror
shrl
sti
add
stc
pop
sbb
mov
cli
mov
pop
sbb
or
jge
outsb
imulb
xchg
or
add
clc
add
dec
out
cltd
subb
sarb
jns
pop
xchg
iret
xchg
mov
je
sbb
or
jl
or
cmp
stos
xor
pop
adc
mov
fdivl
ja
jo
mov
imul
lods
push
jecxz
cmp
cli
subl
jne
push
adc
sub
mov
loopne
push
xchg
std
scas
adc
in
jge
sub
js
lock
shll
repnz
mov
push
xchg
fistpll
adc
jns
inc
jo
xchg
xor
inc
mov
xor
iret
add
ja
inc
push
and
je
cmp
mov
xor
cltd
call
fwait
inc
mov
sbb
shr
lea
sbb
mov
push
jp
inc
nop
xor
ret
push
lea
outsl
test
pop
sub
cmp
mov
pop
outsb
sbb
jge
sahf
cmc
divl
push
in
cld
repz
cli
sti
xor
pop
outsl
or
imull
shrl
out
cmp
stc
xor
jp,pt
addr16
sti
ss
xchg
sbb
xchg
cmpsl
or
pop
mov
outsb
cmpsb
pop
xchg
in
fsub
and
xchg
adc
mov
jg
std
mov
mov
pop
ds
jmp
shll
and
scas
xchg
jg
dec
scas
aaa
jecxz
cmpsl
push
enter
jae
mov
aad
lea
cmpsb
xor
jmp
pop
mov
xor
dec
daa
fldcw
out
leave
ss
mov
jecxz
mov
xchg
js
mov
push
fs
test
shr
pop
out
loop
push
jae
sbb
jno
pushf
sahf
adc
daa
adc
cmp
cli
aaa
dec
mov
pop
cmpsb
xor
out
xor
aad
icebp
dec
js
dec
push
rol
pop
std
push
push
pop
dec
sub
adc
jmp
inc
jo
out
cmpl
cmp
add
ret
loope
mov
pushf
arpl
add
sbb
mov
adcl
sub
std
xchg
stos
fnstcw
ficoms
sub
pop
mov
and
addr16
scas
mov
xchg
xor
cwtl
xor
dec
shrb
ljmp
stc
shlb
or
jle
xor
in
inc
out
dec
add
ret
cwtl
out
xor
sbb
out
xor
jae
leave
lods
fwait
jg
pop
jle
inc
rcrl
xor
and
insl
or
xor
or
repz
out
in
hlt
aas
stos
push
push
or
jo
rcr
sbb
or
adc
test
jmp
out
bound
sti
add
lea
inc
ja
mov
jmp
data16
loopne
roll
fwait
iret
push
sbb
mov
je
js
sub
push
xor
jmp
xchg
scas
push
repz
fldcw
inc
insb
jp
or
or
lret
sbb
add
call
mov
ret
movsl
sahf
hlt
ja
add
fwait
das
push
fs
std
ja
push
cli
inc
dec
mov
xor
xchg
movzwl
mov
insb
inc
mov
js
dec
mov
push
mov
push
mov
fcomps
sub
xor
jmp
pop
in
rcl
mov
lcall
mov
sbb
jmp
pop
xor
mov
add
mov
test
xchg
rdpmc
and
aam
cmp
popa
mov
mov
call
mov
or
or
shr
inc
dec
mov
mov
es
mov
adc
pop
cmp
xchg
jle
fdivr
jge
xchg
aas
rcrl
insl
mov
fsts
lock
adc
xor
ja
stos
loopne
sbb
js
icebp
cmp
xor
jecxz
mov
cmp
cmp
mov
cmp
lret
mov
inc
scas
mov
das
mov
scas
dec
cli
insb
iret
xchg
ficomps
arpl
psubsb
in
jnp
sar
fimull
cmp
push
sbb
pop
jnp
push
je
ja
xchg
add
sbb
arpl
push
xchg
mov
in
jno
xchg
jl
jge
loop
mov
xorb
popf
adc
xor
dec
jecxz
push
xor
gs
inc
mov
jns
sbb
fisttpll
loope
mov
ljmp
cld
pinsrw
xchg
fistps
jne
in
push
cmpsl
cmp
dec
jg
insl
fistl
jbe
ljmp
ficoml
loope
std
and
dec
aam
ss
cmp
aas
mov
cs
jae
fists
xor
ljmp
ss
pop
sbb
in
jmp
cmpsl
lret
jmp
pusha
icebp
adc
rorb
aam
inc
xchg
pop
inc
dec
sub
xchg
outsb
out
outsb
fisttps
sub
loope
aaa
xchg
inc
int
cmc
sbb
xor
or
xchg
push
test
or
inc
mov
sub
or
and
jb
and
mov
adc
adc
or
test
push
mov
mov
push
adc
lret
out
jne
jnp
out
fcmovbe
jnp
mov
imul
lods
fldenv
sbb
lock
lea
or
bound
jnp
mov
aad
std
aaa
xor
aaa
ljmp
sub
hlt
inc
dec
cld
mov
leave
sbb
pop
stc
stc
or
stc
or
xchg
in
ret
clc
cmp
jge
mov
lcall
aad
and
mov
mov
jo
cmp
inc
sub
push
push
jg
mov
icebp
mov
pop
fisttps
sahf
test
aam
jae
std
push
mov
stos
mov
jl
lahf
not
jns
and
icebp
dec
aad
ja
sub
pop
inc
mov
leave
stc
xchg
stc
mov
pop
pop
loope
mov
jno
dec
aaa
xchg
pop
cmpsb
pushf
sbb
mov
jmp
push
adc
or
rcrl
jnp
idivl
pop
pop
test
xchg
cs
fwait
stos
xchg
mov
cltd
out
inc
jl
mov
aas
mov
out
push
loope
mov
or
mov
outsb
xlat
pop
into
andl
imul
mov
dec
cmp
mov
jno
aam
rcrb
cmc
sub
mov
mov
mov
dec
out
jne
in
lock
dec
xor
sti
aad
and
iret
push
icebp
jo
ds
sar
fbstp
std
mov
bound
test
int3
pop
pusha
mov
cmp
pop
stc
fisubs
ret
fmul
mov
or
ss
out
in
outsl
enter
std
fisttpl
and
es
lret
hlt
in
pop
ds
leave
data16
hlt
inc
lahf
pop
pop
sub
mov
test
movsl
popa
mov
xor
sub
xchg
lea
xor
idivb
cmpsl
pushf
add
jbe
scas
push
mov
mov
and
xchg
add
dec
leave
jae
movsl
xchg
and
jae
jno
into
cld
fwait
or
fdivr
into
mov
addl
fstpt
or
jl
popa
and
notl
out
sbb
mov
das
scas
lahf
out
stos
test
cmp
out
test
xchg
xor
scas
push
jo
unpcklps
aad
notb
cmp
xor
xlat
cli
fwait
ret
call
mov
loope
and
jmp
psllw
jge
jecxz
lret
mov
push
js
sahf
and
fiaddl
cld
orl
xlat
cmp
mov
pop
push
je
in
sti
dec
jge
in
jbe
lea
cmpb
pop
mov
and
lods
stos
or
mov
jnp
and
xchg
test
or
popf
push
push
xchg
into
fcompl
xchg
lcall
mov
shlb
into
sbb
mov
push
call
aaa
xor
adc
cmp
xor
test
mov
loopne
or
cmp
jns
daa
xor
popa
jo
fsqrt
inc
jbe
adc
jnp
lods
rclb
outsb
shl
popf
sarl
popf
out
xor
cmp
sbb
daa
insl
cmp
dec
loop
or
xorb
aad
add
in
inc
leave
das
sarl
or
ljmp
cld
andb
xor
fucom
lea
mov
aaa
bound
mov
inc
mov
and
repnz
jg
sahf
addr16
inc
in
pop
daa
adc
mov
cmc
and
pop
jmp
jo
push
ret
leave
mov
push
scas
cmp
mov
fwait
inc
ret
inc
xor
sub
pushf
enter
jnp
imul
ret
xchg
push
daa
lock
into
push
and
out
fwait
or
adc
fwait
out
adc
xchg
and
pushf
xchg
jmp
add
mov
in
repnz
daa
lea
jae
add
jl
int3
shlb
lds
jle
jnp
cmp
out
lods
icebp
out
jmp
mov
xchg
lcall
xchg
pop
mov
mov
sub
jmp
fcompl
fldcw
mov
pushf
ja
lock
scas
aam
jecxz
adc
fs
add
jnp
out
mov
ficoml
pop
adc
lret
data16
fstps
jg
popa
sbb
pusha
mov
in
das
jnp
jbe
leave
add
jbe
in
cmp
or
jne
xchg
mov
ret
pop
mov
rclb
lds
jl
and
xchg
shll
mov
addr16
jbe
inc
add
frstor
sbb
pop
mov
mov
mov
cmp
imul
pop
int3
push
bound
and
ret
xor
mov
mov
jo
mov
xchg
mov
lret
ja
cwtl
xor
xchg
push
lahf
cmpb
stos
mov
push
or
stos
mov
push
es
fistps
dec
fwait
daa
and
adc
in
hlt
roll
vmwrite
dec
inc
fimuls
cmp
fldenv
push
mov
daa
test
bound
push
push
dec
sub
mov
inc
xor
jb
mov
xchg
cmpsl
sub
fcomip
adc
lret
scas
dec
push
rcrl
in
sub
xlat
pop
test
cmpsb
in
jae
sahf
std
mov
nop
out
ljmp
mov
xchg
mov
clc
xchg
mov
mov
nop
mov
add
mov
dec
pop
adc
icebp
cmpsb
imul
imul
sbb
dec
mov
addr16
xchg
scas
lret
std
mov
test
cli
sbb
push
jmp
stos
inc
repz
mov
aas
nop
stos
scas
aaa
push
popf
sti
mov
vmovaps
xlat
shrl
dec
divl
scas
cmc
aas
xchg
or
lcall
jno
cli
stos
movsb
cwtl
mov
or
das
or
mov
and
ja
scas
cld
int3
pop
ret
loopne
mov
subb
std
xchg
adc
mov
dec
lods
ja
mov
clc
aaa
bnd
sbb
pop
mov
insb
inc
xchg
clc
mov
jb
popa
sub
pop
cltd
push
ret
fldl
mov
push
mov
fst
sub
aas
jbe
hlt
mov
inc
jne
cmp
fs
pop
mov
cmpsl
testb
in
testl
aas
xchg
xor
dec
sahf
shlb
shll
push
sbb
push
pop
cwtl
loop
popf
cli
out
push
mov
je
push
jle
orl
scas
push
rorb
xchg
fsubrs
push
push
outsb
mov
fwait
sbb
mov
adc
cmp
and
jp
mov
cmp
rorb
xchg
into
mov
pop
loopne
sub
aaa
cwtl
or
push
adc
iret
inc
pop
subb
les
inc
subb
aaa
push
ljmp
and
dec
jae
jne
into
insl
leavew
out
in
and
mov
in
or
insl
jne
es
leave
adc
call
orl
loope
cld
add
jae
loop,pn
mov
shll
outsl
popl
and
dec
aam
push
std
outsb
lret
stc
daa
andl
mov
insl
cltd
movsb
mov
insl
loop
lahf
and
ja
out
adc
jl
mov
repnz
movsl
xlat
daa
and
jno
pop
ret
leave
enter
shrl
movsl
sbb
jl
sub
rcll
test
dec
and
pop
test
inc
add
pop
xorl
mov
std
out
pop
cmc
fmul
movb
inc
jne
xchg
popf
cmc
ret
jle
mov
insb
call
push
fidivs
inc
push
mov
jae
push
xlat
jno
addr16
sahf
ret
cmc
ja
int3
cmp
stos
fs
imul
jecxz
push
pop
sbb
sti
aas
jnp
dec
xorl
mov
xchg
shll
pop
jno
jle
jecxz
or
int
xor
pop
xchg
inc
add
inc
mov
dec
iret
stos
lcall
jbe
daa
push
loop
cmp
sahf
xor
aam
test
mov
pop
iret
xor
ja
hlt
data16
jp
mov
push
push
push
pushf
in
out
gs
gs
pusha
ja
xor
sbb
mull
jle
inc
inc
imul
ss
mov
out
loope
scas
xor
mov
jg
dec
ret
jnp
cmp
sbb
aas
adc
lahf
push
std
xchg
fwait
in
ds
outsb
clc
pop
rorl
fidivrl
popf
cmp
and
lock
mov
fcomi
inc
cmp
cmp
out
lods
in
notb
std
jl
mov
and
cmp
cmp
sarl
orl
lods
popa
stos
jnp
or
stos
js,pn
pop
jno
loopne
adc
mov
sarl
sbb
sbb
xor
test
dec
xor
sbb
in
inc
leave
fistps
subl
jae
xor
hlt
arpl
icebp
and
jp
scas
addr16
jp
pop
push
xlat
lcallw
xor
test
mov
sbb
dec
out
sbb
cmp
fnsave
imul
repnz
dec
scas
sahf
xor
insb
pushf
std
out
mov
fstps
mov
mov
lret
jecxz,pn
leave
adc
outsl
scas
xor
cs
sbb
insb
repnz
jmp
fsubl
sub
dec
ja
mov
add
fistpll
sbb
and
shl
xchg
xor
outsl
pushf
mov
repnz
cmp
out
test
cmp
cmp
mov
or
std
shrl
and
divl
in
js
inc
in
mov
icebp
cli
idivl
pusha
cmp
ret
push
rcr
sbb
jmp
xor
int3
xor
add
cmp
fsts
paddb
or
ja
jg
pop
out
dec
jae
mov
push
pop
xor
mov
mov
hlt
xor
bound
push
inc
jmp
adc
add
out
xchg
int
mov
loopne
inc
mov
and
imul
sbb
enter
xor
pop
mov
aad
jl
sub
pop
mov
adc
out
cmpsl
insb
ljmp
leave
movsl
cmc
cwtl
or
hlt
or
imul
xor
or
aas
insl
jns
push
pushf
cltd
add
jg
jmp
mov
xchg
cmp
enter
push
jp
out
into
cmc
xor
scas
sub
cltd
jge
xor
cwtl
cmpsl
xchg
scas
mov
dec
ds
cmp
lahf
push
inc
jne
bound
sahf
jle
xorl
mov
push
mov
out
icebp
aaa
outsb
inc
ret
mov
cmp
inc
loopne
outsb
inc
pushf
or
sub
cltd
push
push
imul
cmp
sub
call
rclb
dec
pop
lods
pop
out
or
loopne
fld
push
jae
or
xchg
enter
popf
ret
stos
sbb
mov
cld
cli
repnz
mulb
xchg
add
jge
and
aam
add
stc
arpl
daa
loope
loop
movsb
xchg
xlat
out
cmpsl
data16
rorb
jae
and
stc
mov
add
stos
popf
rcrb
cmpsl
and
clc
loopne
pop
xchg
adc
push
loop
divb
push
dec
js
pop
xor
jns
mov
pop
mov
mov
mov
testb
sub
jne
jno
cmp
add
mov
xchg
in
sahf
movsb
or
jb
mov
sbb
std
lock
pshufw
das
push
mov
out
test
hlt
scas
test
jecxz
cli
ss
mov
or
inc
fistpll
mov
test
fstpl
push
shlb
cmc
inc
xor
pusha
shrb
outsl
imul
sbb
xchg
jl
fs
add
jg
xor
popf
arpl
ret
sahf
xor
mov
es
xchg
inc
ret
stc
into
pop
movsb
and
scas
arpl
jns
int3
pop
add
sbb
fcompl
mov
cld
enter
mov
rorl
int
je
xchg
out
leave
fcomps
fwait
push
lret
sbb
push
lods
call
pop
pop
in
imul
xlat
xor
push
bound
lods
push
jns
adc
jl
jns
loope
ficompl
and
mov
or
movsl
test
add
cmp
movsl
mov
cs
in
rcr
cmp
arpl
jge
and
outsb
xchg
sahf
pushf
lcall
adc
xlat
mov
cmp
jno
testb
insb
int
inc
xchg
incb
scas
shll
mov
push
mov
xchg
insl
jbe
les
loop
or
jb
jp
fsubrl
cmc
addr16
pop
clc
iret
out
rorl
lcall
mul
icebp
xlat
sbb
cld
pop
in
cmpsl
lock
insb
and
mov
std
sbb
mov
cmp
fsubp
ss
and
les
jg
or
adc
lods
daa
out
dec
int
lahf
cltd
xchg
jle
dec
stc
mov
data16
or
inc
inc
jb
loop
mov
mov
js
test
insl
popf
test
addr16
imul
aas
outsb
jecxz
or
imul
push
addr16
nop
push
das
lretw
orb
fnstsw
xchg
outsl
daa
stos
and
pop
jno
out
jne
xchg
sti
pcmpeqd
inc
mov
icebp
adc
pop
pop
push
xlat
imulb
gs
xchg
mov
add
adcb
sub
test
jae
pop
sub
and
std
stos
gs
sub
xchg
ret
or
inc
orl
add
add
and
sub
pop
sub
or
jmp
sub
pop
sub
test
push
fdiv
repnz
mov
cmp
icebp
dec
rcrb
in
add
or
adc
orl
cmc
pusha
and
lock
mov
faddl
dec
add
sub
inc
popf
lods
adc
inc
mov
xlat
dec
push
add
add
xor
dec
mov
stos
lock
sti
lret
add
push
or
xchg
lds
int3
inc
add
in
add
ss
push
and
xor
add
arpl
test
mov
jnp,pn
xor
xchg
mov
aaa
mov
std
subb
and
mov
pusha
or
test
testl
pusha
or
xor
adc
cmp
jno
testl
mov
stos
js
mov
cmp
xor
pop
mov
pop
test
pushf
and
shlb
pushf
jo
xorl
mov
and
mov
add
jl
jne
mov
int
orps
ds
pusha
cwtl
sbb
stc
mov
sub
xchg
xor
add
ret
add
push
adc
or
add
cmp
nop
daa
or
dec
adc
sahf
mov
dec
divb
mov
lret
or
fildl
movsb
or
pop
jl
mov
xchg
add
xchg
inc
lods
adc
fcoms
fistps
sbb
pop
mov
lret
ficomps
inc
add
nop
sbb
xor
push
add
rcrb
xchg
push
stos
mov
mov
cmpsl
orl
aaa
fptan
mov
int
xchg
cmpsb
je
jg
xchg
lcall
fldl
lods
sbb
or
and
stos
and
xor
in
jo
xchg
out
ret
jmp
gs
rolb
fldenv
lret
in
gs
mov
push
fbstp
ret
fidivrl
cld
push
icebp
sar
jno
lret
icebp
dec
adc
pop
sbb
pop
aas
lock
inc
lcall
push
or
add
dec
lods
jmp
jp
add
sbb
mov
push
std
test
cwtl
pop
hlt
or
aam
xchg
test
mov
in
push
xchg
or
jns
outsl
jb
cli
dec
filds
popa
mov
cmpsl
dec
enter
sub
in
xor
leave
sbb
stc
std
mov
dec
scas
lds
jg
jecxz
push
repz
xchg
fcoms
icebp
and
call
mov
bound
pop
cmp
dec
loope
xor
jg
or
in
in
ficomps
inc
push
jle
sub
cmc
fidivs
jge
out
xchg
in
xchg
popa
int3
sbb
mov
xchg
sahf
lahf
arpl
lock
lods
mov
pop
dec
repnz
adc
pop
out
xchg
xor
fcomi
xchg
xchg
and
jb
ficoml
mov
cmp
xchg
push
lret
push
mov
jl
daa
incb
mov
mov
lahf
fisttpll
std
rol
out
inc
cmovp
lods
xchg
imul
jbe
out
aas
jecxz
aad
cmp
test
rcl
in
mov
rcrb
jecxz
orl
call
into
loope
xor
cs
xlat
sbb
fwait
stos
push
xchg
push
push
cmp
inc
push
incb
fisubl
xchg
clc
into
stos
scas
pop
jp
fsubrs
lcall
pop
jecxz
cmp
cmp
loope
xchg
inc
cmp
std
call
pop
mov
mov
mov
in
pop
jb
sti
pop
mov
or
cwtl
and
imul
movsb
jl
jb,pn
fmul
push
arpl
cmp
or
push
add
add
add
pusha
pop
inc
mov
push
and
mov
xchg
push
push
xor
imul
mov
mov
mov
test
xchg
fsubl
inc
adc
push
sahf
mov
fs
fcmovnbe
sbb
hlt
sub
dec
lods
mov
cmp
test
fcomi
pop
inc
jl
jns
daa
insl
inc
je
pop
decb
insb
mov
and
dec
sbb
mov
insb
push
data16
jno
loope
lahf
sti
daa
adc
cli
clc
jnp
push
sbb
mov
push
leave
add
ds
sbb
clc
dec
sti
fcomi
or
testl
mov
mov
cs
cld
xor
fidivrs
sub
imul
pop
imul
in
and
mov
fcmove
inc
pop
mov
les
aas
sub
jle
arpl
mov
stos
and
sbb
fwait
adc
push
jns
inc
std
js
pushf
mul
fsubrl
flds
cmp
jno
pop
push
insb
mov
loope
stc
push
adc
xchg
sbb
cmp
mov
mov
add
jecxz
push
mul
js
popa
push
fisubrs
xchg
push
scas
lcall
cld
fdivs
cld
jge
and
aad
jno
pop
fisubs
and
out
pop
aaa
add
bnd
pop
inc
xchg
das
js
pop
mov
push
xchg
test
mov
incl
int
loopne
jecxz
aam
inc
scas
fsts
inc
in
insb
mov
decl
in
lret
push
arpl
cmc
cmc
test
stos
jb
or
sbb
outsl
xchg
popf
pop
sbb
xchg
cmp
push
ds
das
push
mov
cwtl
cmp
cmp
cmp
ficomps
pop
cwtl
push
in
es
in
jo
mov
jle
cmpb
cmp
inc
sahf
pop
push
xor
mov
sub
fcomps
sub
cwtl
mov
stos
push
cmp
xor
jecxz
filds
add
and
pop
stc
imul
popa
ja
sarl
cwtl
pop
scas
lret
sbb
out
xlat
xor
shlb
in
inc
les
mov
cmp
pop
lahf
or
fsubr
adc
mov
sub
push
ret
cmc
and
clc
or
call
push
scas
nopl
xchg
pop
lcall
pop
lods
pop
and
push
cmp
sbb
xorl
mov
movsl
pop
je
xchg
push
testb
xor
mov
fwait
mov
frstpm(287
or
mov
repnz
sbb
cmc
outsl
adc
jmp
jge
jb
sub
mov
insb
lcall
imul
imul
repnz
xchg
gs
movsl
and
lret
jbe
ljmp
nop
das
mov
ss
bsf
jmp
adc
sbb
mov
dec
pusha
pop
inc
mov
jo
ljmp
xor
add
movups
sbb
and
push
js
add
inc
xor
dec
daa
mov
adc
enter
jmp
loop
in
push
jnp
movsb
mov
in
fidivrl
inc
loopne
mov
xchg
aam
push
dec
filds
loopne
xlat
pop
cmp
cmp
pop
jg
pushf
pop
jle
mov
pusha
cld
add
out
test
xor
cmp
pop
filds
mov
mov
dec
les
cmp
cmp
cmp
cmp
mov
add
gs
iret
jns
sbb
out
xchg
call
imul
sarb
hlt
test
mov
mov
int3
clc
cmp
dec
jmp
mov
fwait
imul
jle
jecxz
pop
scas
lea
sahf
int
lcall
insb
repz
decl
out
pop
mov
mov
std
fidivl
sub
inc
scas
mov
fsubrl
adc
push
xor
sub
out
fidivrl
push
xlat
jp
mov
loope
loope
inc
in
mull
lcall
add
pop
cld
je
ret
data16
cmpsb
dec
fisttps
xor
cmp
cmp
cmp
xor
pusha
popa
add
or
fdivr
aaa
dec
cwtl
adc
add
add
xchg
xor
aaa
xchg
cltd
inc
mov
testb
sbb
test
jg
stc
fnstsw
mov
fistps
std
pusha
test
lods
mov
pusha
andb
adc
and
mov
cwtl
or
out
dec
or
ror
fwait
add
push
je
xor
aam
cwtl
test
push
or
jo
inc
sub
push
jp
push
jo
int
mov
pop
and
lock
or
mov
das
scas
data16
stos
dec
cltd
push
cld
and
mov
loopne
jl
js
xor
sub
push
stc
jns
inc
sbb
flds
cmp
scas
add
cmp
mov
mov
cli
and
jbe
popf
sub
test
dec
es
arpl
stos
add
ret
xor
pushf
es
adc
mov
fld
outsl
and
mov
fcoms
jo
lcall
add
loopne
enter
loopne
jge
iret
add
xorb
inc
fwait
cwtl
dec
and
pop
adc
add
test
inc
jb
xor
rorl
lods
es
dec
inc
repnz
test
or
outsl
mov
pushf
or
xchg
cld
daa
push
adc
dec
jle
xor
stos
and
jmp
outsl
ret
cmp
lock
mov
lock
pusha
dec
xor
xor
mov
adc
loope
sbbb
adc
addr16
faddl
clc
dec
rorb
xor
orl
jle
imul
pushf
js
pushf
daa
cmp
fwait
or
add
xor
adc
mov
ret
je
mov
cmp
cltd
rcrb
xchg
cmp
cmp
stos
or
test
imul
daa
adc
adc
leave
mov
xor
lock
es
fmuls
pusha
into
xchg
pop
popf
es
dec
xor
and
test
pop
or
cltd
or
lea
test
sbb
bound
cwtl
dec
leave
nop
cwtl
scas
and
fcompp
or
mov
add
dec
push
or
push
ret
test
cmpsb
inc
pop
xor
popa
xor
add
inc
es
adc
out
pushf
fs
jnp
push
xor
mov
flds
or
pop
or
out
push
or
test
subb
inc
aaa
add
pushf
orb
rclb
lcall
shll
cltd
sbbb
daa
pop
adc
movb
fisttps
ret
and
jns
cmpsl
inc
push
xor
popa
xor
lock
insl
test
outsl
ret
xor
cmp
mov
jae
and
mov
test
ret
aaa
rcrb
mov
add
daa
cmp
lahf
or
add
ret
cmp
add
adc
mov
lock
ret
dec
sub
mov
mov
jp
pop
lods
mov
pop
shlb
cmp
xor
movzbl
dec
and
add
xor
ss
enter
rcr
lock
adc
addr16
cmp
sbb
test
inc
outsl
and
loope
lock
or
sub
dec
popf
aas
mov
cld
out
add
iret
add
fadd
cwtl
add
add
adc
rclb
daa
dec
and
lock
inc
stos
sbbl
jmp
fildl
dec
outsl
sbb
add
push
sub
xorl
es
sub
jnp
pop
cld
fs
sahf
cmp
bound
movups
sub
arpl
data16
adc
dec
test
dec
paddsb
lea
outsb
xor
out
push
insl
adc
sbb
inc
popf
mov
jbe
idivl
sbb
fsubp
xor
fiadds
pop
jb
lea
sbb
fs
dec
lahf
je
div
fnstcw
jg
bnd
fists
test
test
jbe
sbb
cltd
cmp
int
divl
mov
cmpsb
out
sub
loope
xor
test
in
cmp
xor
xchg
push
and
push
das
lock
out
ds
stc
lock
mov
clc
call
scas
loope
repnz
adc
rorb
mov
jb
mov
movsl
push
add
sbbl
push
pop
lods
pop
jae
sahf
pop
addr16
dec
add
push
sbb
addb
add
sar
stc
push
jg
loopne,pt
cwtl
jnp
inc
sti
sub
call
inc
clc
jo
xor
aas
pop
sbb
fcompl
movsb
seto
std
xor
lock
sbb
test
cmc
add
inc
in
repz
add
mov
js
cmp
loopne
scas
pop
out
and
out
inc
pop
shl
clc
nop
jg
lods
pop
mov
mov
setae
stc
sub
cld
mov
push
and
push
mov
rorb
sub
scas
subps
mov
lea
std
add
sbb
add
loopne
lock
mov
int3
add
sub
and
xor
sti
adc
cmp
cmp
sub
cmovb
pop
lret
cmp
testl
inc
cmp
push
mov
adc
dec
rsm
pop
in
add
mov
jg
rcrb
enter
mov
sahf
inc
sub
andl
pop
pushf
daa
scas
and
dec
mov
pop
loopne
lock
xchg
adc
dec
and
dec
push
inc
or
test
inc
jns
or
das
adc
test
popa
jle
dec
and
cld
inc
call
sahf
int3
adcb
test
popa
cmp
add
jge
mov
inc
cld
jno
icebp
ret
or
pop
cmc
test
les
mov
cltd
and
dec
js
or
add
add
or
test
add
mov
mov
inc
jmp
add
add
mov
bnd
or
or
mov
fimull
testb
pop
aam
mov
jle
dec
sub
std
add
inc
sahf
fadds
sarl
rolb
add
add
leave
subl
bound
add
sbb
push
pop
aas
push
or
inc
into
add
cld
cmp
jle
push
pop
setbe
sti
add
insb
dec
cli
cltd
cmp
sbb
fistpl
popl
dec
cwtl
jecxz
test
insb
outsb
inc
or
push
popa
jno
in
hlt
mov
add
ret
ret
add
add
add
add
add
push
inc
or
adc
inc
lds
jmp
add
and
icebp
scas
stc
xchg
in
in
xchg
test
jb
xchg
and
cs
mov
imul
jg
pop
or
and
decl
out
push
lret
jecxz
cmc
xchg
cli
cmp
outsb
insl
setae
shlb
mov
add
int
xchg
mov
mov
sub
push
les
mov
data16
push
inc
sti
addr16
pushf
sub
dec
add
cmp
ret
enter
iret
lcall
mov
lahf
int
pop
aad
dec
scas
sub
clc
push
sub
out
arpl
add
mov
mov
xor
mov
inc
mov
adc
and
xchg
in
lds
cmp
out
push
out
sub
mov
xor
sbbb
scas
fcomps
pop
incl
or
push
jp
sub
sbb
adc
jl
sub
pop
cld
fwait
cmpsl
add
xchg
lahf
nop
dec
dec
jmp
xchg
ret
mov
aas
clc
mov
cmp
jecxz,pt
leave
xor
mov
inc
push
hlt
insl
out
cld
inc
out
repz
xchg
bnd
dec
xchg
orb
mov
jno
xor
arpl
mov
xor
pop
mov
int
out
pushf
int3
idivb
inc
rcrl
pop
cmc
cs
pop
mov
sub
push
std
jge
mov
xchg
xchg
aaa
sahf
and
shl
iret
int3
mov
jnp
or
lea
sub
ret
xlat
movsb
fwait
repz
mov
outsb
xchg
imul
scas
adc
iret
rcrb
cmc
out
cld
or
js
and
mov
scas
scas
push
out
fidivrs
sbb
adc
aaa
fldt
jge
jle
and
ss
insb
mov
addr16
cmpsb
fsubs
dec
imul
iret
pop
pop
jo
scas
outsl
divb
lods
aas
push
ss
lods
stc
cltd
sub
jle
pop
mov
inc
imul
jmp
pop
xorl
push
xchg
xchg
sahf
hlt
mov
pushf
out
dec
test
xlat
push
clc
test
loop
sbb
jb
sahf
fcoms
mov
xchg
jmp
dec
sbb
loopne
fwait
ret
pop
dec
outsb
mov
mov
insb
jge
data16
sub
pop
daa
iret
int
jp
cmc
and
mov
xchg
mov
jno
push
jb
pushl
sbb
loop
out
pop
cld
mov
das
mov
mov
mov
xchg
fdiv
ret
adc
mov
mov
std
out
adc
inc
sti
lret
pop
jle
dec
call
outsl
mov
dec
fcomip
movsb
neg
pop
popw
scas
xor
fisttpll
xchg
mov
out
ds
ret
setle
fldt
loop
push
jle
mov
mov
icebp
pop
call
cmc
int
rorb
mov
jne
mov
jge
out
pop
mov
cmp
pop
mov
mov
fsubl
xchg
ja
imul
into
adcl
jne
pushf
stos
ljmp
stos
data16
mov
shl
ror
cmc
das
fcomps
aam
mov
pop
jno
jne
js
aaa
cmp
xor
enter
cld
sub
jle
repz
xchg
cmpsl
popf
mov
lret
loopne
adc
bound
mov
cwtl
mov
lret
in
in
jnp
cmp
dec
sub
jl
leave
push
inc
fs
out
in
xor
push
call
imul
bound
pop
sub
fidivs
outsl
sub
call
dec
int3
mov
lea
pop
inc
or
aaa
jecxz
adcb
mov
cmpsb
push
mov
jle
sub
clc
rorl
ss
mov
outsl
outsb
dec
dec
dec
dec
testl
lahf
fsubrs
aad
dec
cmpsb
fdivrs
pop
mov
test
lret
cmp
sub
mov
daa
lea
mov
addr16
out
sarl
das
jo
leave
sbb
add
outsb
xchg
mov
inc
cwtl
xlat
loop
xchg
jg
inc
mov
xchg
cltd
cmp
adc
adc
cmp
push
add
mov
and
cmp
mov
int
mov
mov
mov
cmp
sbb
inc
sub
sub
in
cmp
fdivrs
stos
mov
xlat
jmp
cmp
lret
pop
mov
je
xchg
jmp
jg
daa
lods
rcr
mov
int
outsb
hlt
mov
jbe
fucomi
mov
mov
repz
outsl
bound
mov
dec
pop
add
push
icebp
fdivrp
inc
pop
sub
mov
fcomps
dec
mov
insb
mov
mov
dec
call
imul
sub
xor
stc
jge
pop
push
pop
sbb
cmp
in
xchg
xor
dec
lock
je
pop
pushf
not
sbb
push
aam
mov
gs
aad
xchg
mov
jle
add
inc
xchg
mov
jmp
mov
adc
jne
aaa
xchg
add
mov
lahf
lods
inc
popa
leave
xchg
rcr
xor
mov
ds
jge
in
cmp
call
xchg
outsb
movsl
mov
pushf
jbe
inc
lods
ret
jmp
cli
adc
jbe
mov
push
mov
ret
mov
cmpsl
popa
and
out
cmpsb
sub
loope
adc
cmpsl
hlt
cmp
mov
xchg
sub
xor
push
inc
test
nop
cmp
jnp
loop
in
fs
fldt
jecxz
inc
ja
mov
icebp
inc
mov
inc
scas
xchg
jp
jae
mov
pop
xor
notb
mov
cld
stos
es
sbb
jbe
data16
jnp
ja
fnstcw
mov
mov
int3
in
test
adc
leave
enter
pop
pop
sub
sahf
jg
out
pop
std
jl
fs
dec
xchg
insb
es
shlb
cmp
in
pop
sbb
xchg
jne
inc
mov
fscale
ficoms
stc
andl
shll
sbb
inc
out
mov
mov
mov
xchg
ret
cmp
mov
fwait
adc
dec
xchg
push
iret
dec
xchg
cmp
sub
shrl
pusha
xchg
icebp
jmp
jge
shll
mov
data16
mov
movsb
jge
lods
push
dec
mov
fildll
inc
aas
add
fldcw
mov
pop
stos
in
lret
test
push
jmp
imul
mov
ror
cltd
outsb
xchg
lods
mov
pushf
out
std
in
lret
aam
sub
xchg
popa
loop
movsb
aas
rolb
int
sbb
scas
idiv
adc
ret
push
neg
mov
shll
leave
mov
jle
ljmp
stc
rcrl
aas
mov
lods
mov
dec
mov
adc
movsl
jo
mov
mov
lahf
mov
shlb
scas
imul
sti
jmp
imul
into
xchg
out
xlat
icebp
shl
sub
xor
mov
sarl
and
pop
sub
pmovmskb
lret
fsubp
inc
push
mov
fdivl
cmpsl
dec
icebp
jae
icebp
aaa
movsl
push
push
cmpsb
fdivr
ss
cld
xchg
and
int
jecxz
cmpsb
adc
ja
hlt
rcrb
test
lret
std
mov
pop
lcall
xor
in
inc
lods
mov
pop
mov
fsubrl
fcomps
sub
into
sub
push
loope
lods
cmpsb
repnz
test
fbstp
and
repz
sahf
into
lret
push
mov
cmp
push
xor
sahf
sub
cmpsl
push
sti
pusha
ja
into
loope
pop
loope
and
push
pop
jle
mov
pop
les
pushf
shrl
mov
dec
mov
pusha
fistpll
leave
movsb
je
clc
outsl
ja
ret
jge
notl
mov
dec
enter
cwtl
mov
in
mov
fnstenv
sub
ljmp
cmp
dec
cmp
mov
inc
repnz
shlb
lahf
nop
xchg
push
sbb
pop
mov
mov
xchg
stc
bound
sbbl
in
lret
xor
in
mov
jle
mov
rcll
scas
nop
push
fdivp
jo
pop
movsl
xor
movsl
mov
pop
out
sbbb
mov
arpl
inc
call
cmp
mov
scas
leave
popf
inc
push
push
fwait
out
cmp
cmp
adc
sub
jne
sbb
ja
out
pop
xlat
aad
ljmp
lret
into
sar
mov
sbb
xor
xchg
mov
lea
popa
jl
mov
addr16
int3
mov
push
cli
push
gs
rolb
jnp
mov
imul
incl
dec
cmp
lret
mov
cmp
cmp
aas
xor
sahf
shlb
push
dec
out
mov
stos
imul
pop
pushf
outsl
daa
mov
pop
insb
in
pop
inc
out
jge
sahf
jns
mov
shll
test
sub
sbb
inc
rcrb
ss
sti
lock
mov
and
std
xor
iret
test
popf
xchg
in
repnz
call
lock
call
sahf
clc
das
std
mov
cld
lods
aad
fstl
test
lods
ja
aas
push
cld
iret
stos
scas
push
xor
dec
push
cmp
loope
clc
insl
sub
stos
push
jge
or
fld
enter
jbe
dec
cmp
xlat
jge
xor
call
sbb
pop
ja
aad
cli
cli
fwait
rsqrtps
mov
ss
fimull
push
out
mov
out
pop
mov
push
mov
icebp
xchg
mov
je
jl
mov
adc
xchg
cltd
shlb
insb
sbb
es
sub
leave
xor
test
repnz
and
ljmp
mov
test
xchg
sbb
arpl
in
add
sub
popa
mov
and
adc
mov
in
mov
ret
fwait
pop
push
dec
push
cmp
adc
jecxz
mov
and
lahf
daa
lahf
call
jbe
inc
imul
in
and
push
test
mov
aad
outsb
cmpsl
getsec
fs
enter
mov
inc
nop
lock
rcrl
mov
jg
jb
inc
testb
jno
in
clc
mov
fdivrp
movsl
insl
out
mov
test
jp
jg
cwtl
mov
pushf
ja
je
sbb
ljmp
add
xor
les
aas
fistpl
xchg
sti
cs
lock
pushf
jg
push
xchg
cwtl
scas
lds
mov
fistpl
push
fisttpl
fyl2xp1
in
mov
sbb
jge
dec
jmp
das
fwait
lret
dec
cmp
clc
jno
push
xchg
aad
mov
mov
scas
das
sete
jb
or
dec
add
fwait
in
leave
mov
lods
push
out
jo
pop
cmp
xor
ss
push
push
pop
out
push
jnp
stc
pop
mov
xchg
push
lock
cmp
cs
test
jg
pop
jmp
test
mov
mov
and
iret
imul
loope
mov
cs
sti
push
push
sti
pop
into
loopne
jl
sbb
dec
push
or
lods
idivl
in
cmp
xchg
pop
jecxz
xor
es
clc
iret
push
mov
mov
movsb
mov
mov
jne
cmpsb
mov
outsl
mov
sahf
adc
xchg
xlat
mov
outsl
push
lods
xchg
sahf
std
cs
fwait
xchg
mov
fcoms
jns
mov
into
hlt
push
push
adc
outsl
inc
fstpl
xor
int
jmp
push
cmp
popa
mov
push
ret
fwait
stc
fsubrl
int
mov
out
pop
roll
xchg
jle
jecxz
cltd
pop
jle
fisttpl
repz
jns
scas
scas
pusha
cwtl
insl
xchg
repz
sbb
mov
cli
cmp
decl
pop
in
in
iret
fistl
lock
mov
ret
out
aad
int
ss
data16
outsl
push
lods
neg
xor
mov
inc
mov
jl
mov
jns
es
in
pop
mov
popa
lods
push
fwait
and
scas
movsl
outsb
jae
fsubr
xor
pop
sbb
mov
imul
xlat
clc
cli
aaa
fldl
push
stos
xorb
hlt
in
mov
sbb
mov
testb
aaa
outsl
mov
imul
fwait
sti
jmp
sti
push
dec
std
dec
lods
mov
insb
fdivrs
xchg
std
sub
fisttpl
lret
pop
inc
xor
mov
mov
lahf
pop
iret
out
in
mov
bound
mov
lea
mov
mov
cwtl
fiadds
inc
ja
std
fildl
pop
xchg
mov
xchg
out
aam
sub
iret
mov
ret
xchg
cmp
repnz
and
ficoml
out
jecxz
popf
jg
xor
mov
jecxz
addr16
stc
scas
mov
cmpsl
xor
sub
repz
arpl
int3
jle
les
in
leave
ret
xchg
jb
sbb
in
out
jb
aad
mov
mov
xor
test
mov
gs
cmc
scas
pop
call
jae
cmpsl
mov
test
ret
imul
push
jb
scas
cs
mov
add
xchg
mov
repz
aad
ljmp
ja
sbb
outsb
fcmovnu
cmp
adc
imul
fwait
leave
stos
xchg
out
iret
jp
fadds
xchg
out
addr16
sub
loopne
pop
scas
out
ja
push
fdivrp
dec
fbld
cwtl
in
pop
es
inc
xchg
ret
jle
fstps
mov
cmp
stos
stc
dec
mov
ja
insl
idivb
pop
test
es
pop
jmp
loopne
cmc
fildll
shrl
std
pop
push
jbe
nop
decl
ret
cltd
dec
pop
enter
xor
jbe
imul
cmp
jno
test
movb
xchg
or
mov
stos
insb
mov
dec
aad
or
enter
cmpsb
not
sbb
adc
rol
scas
mov
movsl
iret
sbb
cmp
dec
hlt
xchg
ja
sbb
jge
pop
lds
lcall
adc
mov
jmp
lret
xchg
pop
outsl
iret
ret
dec
jnp
fidivs
fnstcw
dec
int3
loope
or
jns
inc
jo
pushf
cmp
je
pop
pop
add
roll
xor
push
push
loopne
cmp
faddp
sub
mov
pop
lea
cmpsl
jl
arpl
jns
in
ja
insl
mov
arpl
or
js
dec
addb
loopne
or
mov
stos
stos
push
xchg
sub
mov
xchg
xchg
xor
xchg
add
xchg
add
nop
xchg
inc
dec
push
and
add
xchg
inc
or
push
enter
lahf
mov
xchg
mov
jle
jmp
jge
mov
mov
cld
call
or
in
dec
into
rcrb
faddp
pop
in
cmp
insb
add
scas
mov
idivl
clc
dec
test
jg
pop
pop
imul
in
fmuls
ljmp
mov
add
pop
ret
movsb
mov
and
pop
cmp
and
insb
mov
sti
mov
xchg
fucomip
mov
insl
lret
cld
xchg
mov
int3
cmpsb
jae
clc
mov
fxch
jne
jmp
scas
mov
sub
aas
xor
int3
mov
in
aaa
sbb
int
in
lahf
xor
inc
jo
outsl
mov
incl
cld
inc
fidivrl
jge
subl
fidivrl
push
sbb
and
inc
mov
fnstsw
mov
sub
and
aaa
pop
push
pop
ror
pop
dec
xchg
push
cmpsl
dec
aad
out
sbb
pop
mov
out
test
aad
stc
sub
hlt
nop
std
stos
push
or
repz
dec
shrl
cli
pop
xor
cltd
pushf
jae
das
inc
mov
mov
dec
push
fucomp
scas
repz
imul
jns
fcomps
push
jnp
pop
mov
xor
or
pop
addl
jo
icebp
push
jge
sbb
mov
cmpl
pushl
ficoms
int
insl
cmpsb
lahf
mov
iret
sahf
cmc
mov
mov
inc
jp
pop
outsb
mov
pop
jne
shl
mov
mov
rcll
mov
push
pushf
mov
in
jecxz
jl
stos
out
sub
nop
sub
cmp
movsb
test
fnsave
pushl
mov
mov
push
out
jmp
aad
into
shll
sbb
mov
out
jnp
cmp
fcos
xor
fisttpl
js
and
dec
inc
dec
loopne
aaa
mov
xchg
enter
stos
cs
sbb
fimull
gs
idiv
in
xor
icebp
out
push
movsb
les
outsb
arpl
xchg
ljmp
insb
xor
push
loopne
or
call
jae
stos
or
out
cli
cmp
mov
outsl
scas
jne
dec
sub
sbb
stc
cmp
sbb
insb
jl
cmpsl
popf
inc
divl
lahf
jp
popf
cmp
pop
mov
ret
je
sahf
dec
or
jmp
dec
xor
sub
jns
lods
xlat
adc
push
adc
fisttpl
out
mov
jbe
data16
inc
inc
sub
jne
xor
pop
cmc
cmp
push
dec
popa
sti
xchg
sub
stos
js
sbb
xor
rorb
mov
cwtl
icebp
cmp
lret
adc
pop
dec
lahf
dec
cld
mov
and
mov
cld
push
sar
test
mov
ja
xchg
cli
cwtl
lret
sahf
jae
sub
xor
lods
lods
fsubrs
xor
jecxz
xchg
int3
mov
ja
push
push
fdivrl
xor
cvtps2pi
jbe
ficompl
fldenv
pop
jge
ljmp
imul
das
pop
cmpb
ficoml
mov
push
lods
push
pop
mov
jne
clc
jge
out
repz
aaa
test
jl
inc
test
pusha
jo
ljmp
push
call
jle
pop
cmp
insl
into
mov
call
or
test
dec
push
fisubrs
mov
jecxz
jecxz
cli
or
push
pop
cmpb
movsb
lods
cmp
mov
dec
jmp
aaa
int
lahf
sbbl
ds
in
ret
out
jnp
pop
cmp
ja
je
mov
call
aaa
je
mov
sub
hlt
loopne
push
jmp
iret
pop
push
dec
jg
out
fadd
leave
aad
push
push
jns
fistpll
cmp
shlb
push
das
aad
or
jmp
mov
mov
test
into
mov
fildll
cmp
pop
or
in
jmp
cmp
ja
mov
loope
jnp
repz
outsl
jno
stc
imul
and
imul
ljmp
jg
cmc
shrb
sti
mov
imul
jo
dec
cltd
lods
and
mov
outsl
shr
mov
ficompl
cwtl
clc
rcl
jbe
out
aaa
fcomi
repnz
mov
dec
int
fwait
andb
sub
gs
js
scas
mov
or
cmp
pop
std
mov
jae
cmpsb
clc
xchg
xor
jbe
iret
adcl
cwtl
data16
pop
xchg
inc
cmp
shlb
out
je
pop
dec
data16
cld
mov
pop
lods
mov
mov
mov
pop
pop
lret
jmp
shr
push
lods
mov
pop
push
neg
out
jnp
sbb
push
jmp
stos
sbb
cmp
hlt
icebp
pop
aad
and
push
repz
pop
fiadds
test
xor
adc
dec
push
aaa
ss
int
fstpt
loop
into
jg
nop
popf
xor
jmp
in
sub
push
mov
mov
mov
inc
ficoml
das
scas
jecxz
cmp
mov
pop
push
mov
fldcw
rclb
iret
dec
inc
xchg
out
icebp
cmp
xor
jns
pop
inc
pop
data16
out
in
shlb
jb
jns
cmp
xchg
stos
in
dec
in
cli
mov
out
incl
fsubs
addr16
fldl
push
repz
push
cmp
out
fidivs
js
loop
popa
data16
sahf
aaa
ficompl
rorl
iret
sti
sub
cs
or
xchg
loopne
scas
jnp
cmpsb
sahf
xchg
nop
mov
repnz
out
push
push
fucomip
popa
lcallw
pop
das
and
xchg
ret
mov
shlb
clc
cmp
in
pop
ret
hlt
fwait
push
sbb
sahf
call
sub
pop
push
ret
mov
jbe
fimuls
pop
gs
aas
jno
js
out
shlb
fstpt
dec
fstpt
mov
cmp
or
jae
cmpsl
sahf
stos
mov
mov
dec
jnp
mov
jo
std
lahf
repnz
popf
push
jns
std
test
into
push
mov
cmp
cmpsl
lret
lods
pop
cmpb
lods
mov
shlb
movsb
jge
push
cmp
mov
sub
mov
rcr
jmp
cli
or
pop
rol
mov
mov
gs
push
mov
sbb
mov
out
icebp
sub
mov
out
and
lcall
lods
lods
test
enter
mov
dec
fstl
pop
addr16
or
into
push
inc
test
xchg
clc
je
enter
lahf
push
fimuls
add
lock
movsl
lret
dec
sub
push
js
fnsave
out
ret
clc
lcall
sbb
aas
jae
cmp
jb
clc
dec
mov
mov
xor
cmp
sbb
cmpsl
mov
mov
inc
popf
in
xlat
daa
jnp
data16
pop
jl
jge
xchg
lea
rcrl
aaa
ret
mov
sub
xor
in
push
pop
pop
sub
mov
mov
mov
iret
mov
jns
iret
jge
dec
mov
jg
lret
mov
pop
mov
sbb
ficomps
mov
pop
sub
push
xchg
aas
fucomp
jne
push
sarl
jbe
dec
xchg
stos
xchg
shl
xchg
jo,pt
pop
scas
cs
jmp
adc
cmc
mov
pop
push
cmpsb
xorl
sbb
mov
test
mov
mov
or
mov
imul
lea
push
shll
cmp
sub
mov
dec
cmp
xor
rol
push
adc
push
out
test
mov
add
rep
push
out
mov
lahf
sub
int3
jecxz
loop
mov
cmp
mov
jne
jle
xor
mov
mov
sbb
jne
jnp
jno
mov
adc
sahf
mov
dec
fsubrl
outsl
cmp
es
out
loopne
clc
push
fcmovnu
jge
bound
stos
xchg
sarb
push
push
js
mov
leave
iret
aad
and
mov
mov
push
cmc
lret
ret
je
add
sub
sub
out
xchg
int
movl
jle
sbb
sbb
jnp
cmpl
faddp
add
push
and
or
xchg
lock
sbb
pop
xchg
out
scas
test
mov
pusha
lcall
cmpsb
pop
movsl
aaa
scas
jecxz
lock
xchg
lods
mov
mov
mov
into
push
fs
push
jbe
iret
sub
stos
in
adc
inc
sub
repz
clc
aam
push
test
imul
popa
es
pusha
cli
jp
call
cmc
mulb
aaa
push
rcrb
stos
xchg
pop
scas
pushf
mov
mov
ds
das
ja
jecxz
ret
ds
cmp
hlt
insl
xchg
jg
out
xchg
pop
pop
push
push
fstl
lds
daa
negl
push
sbb
jge
jecxz
mov
jae
mov
cmp
jb
out
xchg
jge
je
lods
jnp
jle
sbb
sub
fldln2
lods
fistps
movsb
push
push
mov
dec
insl
fcompl
repnz
popf
aad
test
call
cli
sbb
dec
scas
jg
xorb
repz
loopne
popa
jge
sbb
mov
fwait
push
into
inc
cld
mov
test
clc
decl
adc
std
lock
cmpsl
aaa
pop
lds
test
arpl
push
repz
cmp
sbb
hlt
pop
in
ljmp
inc
lret
cmc
dec
mov
out
dec
divl
pop
xlat
xor
repz
aas
insl
xorb
ss
jge
mov
hlt
popa
gs
mov
rcrl
adc
ss
stos
ds
lahf
and
cmpsl
jnp
sub
mov
lret
aaa
repz
lock
mov
pop
pop
jae
scas
mov
mov
imul
push
rorl
sti
push
sub
sahf
lret
std
sahf
jg
push
mov
fcmovnb
pop
fldenv
push
stos
rorl
xlat
inc
dec
jne
popf
push
in
mov
fidivrl
imul
pop
sub
fists
repnz
js
xchg
mov
jmp
jp
jg
hlt
sbb
shr
lock
aaa
xlat
push
pop
sub
icebp
fdiv
xor
scas
lret
jle
neg
mov
mov
push
fdivl
lods
ja
sub
cmp
cmpsl
and
shlb
cmp
mov
lods
cmc
cwtl
mov
rcrl
cli
sbb
add
xchg
bnd
sbb
pop
xchg
clc
jns
repz
jmp
fiadds
push
xchg
jns
and
cld
dec
sub
or
movsb
out
fldt
loope
clc
pusha
hlt
imul
cmpsb
fwait
idiv
icebp
mov
in
out
psadbw
cmpsl
jle
jle
test
jmp
clc
jbe
setge
cmp
xor
sti
jmp
std
push
fisubrs
jno
sar
mov
jge
out
pop
push
mov
push
stos
and
xlat
insb
push
fdivl
lods
ljmp
push
mov
jl
dec
push
cmp
daa
daa
dec
mov
call
sbb
inc
push
inc
or
outsl
add
jo
pop
pop
ss
lods
shr
mov
jecxz
fisttps
mov
out
jmp
xchg
fbld
std
in
mov
test
push
and
addr16
ds
lret
jecxz
decb
fwait
int3
inc
int3
sarl
pop
fcmovne
jbe
jb
mov
jbe
push
jmp
mov
into
or
mov
sarl
out
mov
outsb
pop
rcrl
scas
mov
jae
dec
test
mov
insl
cld
inc
dec
in
iret
roll
mov
enter
dec
out
push
mov
pop
repz
jmp
sahf
inc
sti
call
sub
pop
add
fcmovu
mov
add
pop
sbb
jge
adc
movl
cmpsb
ljmp
xchg
dec
repnz
fbstp
mov
mov
scas
fsts
mov
std
xchg
outsl
pop
outsb
lret
in
xchg
cmp
mov
loope
cmp
fsubr
xchg
lret
xor
mov
stos
mov
lock
sub
xor
dec
pop
jbe
mov
into
out
arpl
sub
adc
in
cmp
mov
pop
adc
push
pop
cmp
sub
das
sub
push
leave
idivl
xchg
loopne
insb
sub
push
xlat
xor
mov
scas
pop
sub
inc
jns
push
fs
ss
jb
popa
mov
push
mov
outsb
lret
cmp
jbe
fnstcw
ljmp
xor
and
sbb
mov
sub
mov
mov
shrb
mov
lds
push
inc
out
das
fidivrs
movsb
lahf
in
ret
in
dec
div
decb
lds
mov
imul
xchg
cmpsb
cld
incb
out
xor
iret
dec
frstor
lret
cmp
into
daa
push
out
sahf
jo
jmp
jne
sub
sub
popl
shl
aaa
lock
mov
push
xchg
mov
lret
push
imul
sbb
mov
cmp
push
mov
push
pusha
repnz
out
mov
outsb
iret
aaa
push
aad
pop
rcr
push
mov
stos
in
test
pop
lods
mov
jb
jg
xchg
cmp
repz
test
mov
cmp
jge
ret
inc
pop
xorl
xor
bound
jno
mov
gs
popf
das
pop
push
scas
jecxz
loop
jecxz
mov
lods
pop
ret
testl
fcomps
ss
imul
ds
fcmovne
ljmp
mov
into
dec
xchg
jle
push
xchg
aad
and
mov
cmpsl
cmp
int3
sbb
or
out
leave
test
add
not
xchg
inc
lcall
fistpl
mov
ficomps
jp
movsb
xchg
mov
jnp
dec
jg
lcall
outsl
xchg
loope
mov
mov
sbb
ja
mov
ljmp
sub
lret
sbb
ljmp
ja
insb
xor
sub
inc
jnp
loop
cmp
mov
sbb
setbe
cmc
mov
cwtl
shl
clc
pop
pop
cmp
push
shll
loop
xchg
ffree
int3
out
xorl
sbb
adc
fbstp
mov
cmp
jecxz
out
jbe
jae
fs
daa
or
fwait
mov
and
scas
mov
imul
fidivrs
out
aad
fidivrl
test
ljmp
das
jno
in
mov
mov
jge
addr16
or
jb
stos
fidivs
cli
in
mov
push
fistpll
dec
dec
jge
pop
push
fnop
sti
mov
in
cltd
fists
popf
jne
cmc
out
aam
adc
mov
imul
nop
out
cwtl
mov
push
or
push
mov
inc
sub
dec
push
dec
int
cli
jge
jp
fdivrl
test
repz
or
sar
sbb
lods
mov
cwtl
jbe
adc
stos
jnp
movsl
push
loop
push
out
and
or
jmp
ffreep
lods
pop
push
inc
mov
fnstcw
out
push
out
fdiv
daa
and
popf
lahf
jp
fimuls
fistl
cmc
enter
push
xchg
insl
sub
ljmp
jne
in
xor
pop
pop
jbe
stc
outsl
cmp
je
lret
push
into
fsubrl
ja
cs
movsl
push
in
gs
iret
insb
mov
out
pop
mov
jge
pop
mov
es
cmc
push
push
leave
jl
sbb
dec
sub
out
pop
mov
clc
jne
dec
fsubl
imul
push
xor
pushl
mov
jno
jmp
mov
enter
jno
lahf
mov
arpl
mov
cmpsb
lods
in
pop
push
lahf
cmc
es
jns
test
loop
inc
jl
pop
ret
stos
frstor
jnp
jnp
mov
jne
lret
dec
daa
jno
fsubs
aad
test
idivb
mov
repz
sub
std
or
sub
hlt
mov
sbb
insb
mov
xchg
xor
jecxz
jbe
and
lods
imul
mov
loope
push
mov
mov
push
pusha
sbb
dec
pop
sbb
andb
add
push
shlb
pop
and
sbb
adc
mov
sub
shlb
xchg
subl
dec
pop
xor
testl
subl
mov
pusha
cld
subl
cmp
ret
dec
scas
dec
insb
mov
arpl
ljmp
loope
das
dec
sbb
push
cmpsl
insl
pop
push
xor
fdivs
mov
fists
push
mov
pop
imull
pop
push
icebp
pop
vmovapd
iret
lock
inc
test
in
pushf
insb
cmp
int3
js
adc
sti
int
daa
lret
jae
icebp
mov
jb
pop
ja
mov
cmp
insl
js
fmulp
aad
enter
jp
adc
push
ds
jnp
call
shlb
lret
aas
and
rol
pop
sbb
mov
cmp
scas
test
adc
and
fisttpll
dec
in
lods
mov
in
fs
shrb
inc
insl
int
lock
lods
dec
add
mov
lret
ja
sub
and
and
cs
out
das
sbb
icebp
fdivl
std
sti
outsb
lods
add
arpl
lcall
icebp
outsl
sbb
dec
pop
jnp
mov
sbb
das
xor
icebp
push
js
adcl
js
jb
repnz
clc
sbb
in
cmp
add
jp
mov
push
mov
lock
in
add
inc
js
xor
out
fcompl
aad
mov
cmp
ja
outsl
out
jae
push
jnp
das
pop
std
scas
clc
scas
mov
stos
sbb
imul
das
sub
mov
add
sarb
xor
pop
addr16
pop
xchg
idivl
scas
ljmp
filds
mov
aad
clc
jnp
xchg
cmp
mov
movsl
rcrb
fdivrs
sbb
mov
push
cmp
sbbl
lock
gs
cwtl
pop
cwtl
nopl
pusha
js
movl
shlb
add
pop
lcall
repnz
inc
invd
sbb
ja
out
adcl
aam
insb
push
push
cmp
js
icebp
sbbl
repnz
call
rcrl
pop
pop
lds
repz
lods
jecxz
cmp
xchg
jmp
cmp
add
mov
std
leave
jns
and
xchg
dec
cli
add
pop
jo
mov
pop
mov
cwtl
cmp
jne
sub
icebp
xor
lock
jg
je
xor
popa
fisubl
pop
lahf
fmull
xchg
daa
clc
pop
data16
test
xor
out
aaa
fiadds
pop
out
scas
loopne
daa
inc
fs
incl
hlt
lods
cwtl
fcom
push
and
aad
jno
fs
mov
push
lcall
fnstsw
cmc
sti
int3
insl
imulb
pop
lcall
mov
ret
imul
loop
mov
scas
inc
int
and
loope
or
mov
dec
leave
shll
arpl
les
fwait
sti
insl
lret
mov
cld
mov
daa
aad
les
mov
mov
lods
repnz
push
jge
out
dec
pop
pop
jl
fwait
jp
fstps
and
pop
hlt
pop
or
xchg
xor
notb
cmp
mov
fidivrs
scas
out
and
xor
sbb
loop
lret
jb
mov
jle
inc
inc
popf
sahf
mov
jmp
sub
push
push
mov
pop
leave
out
ret
lock
js
aad
pop
jge
pop
fisttps
adc
pop
std
pusha
mov
scas
pop
xchg
sbb
xchg
in
repz
mov
jb
push
mov
hlt
jns
fistl
lock
out
fnstenv
enter
out
cmp
push
into
frstor
mov
pop
sarl
in
fwait
xor
into
pop
ja
sbb
xor
ret
addr16
xchg
cmp
xor
sarb
repz
dec
fisttpll
test
iret
jbe
pop
cmp
sti
sti
xor
insb
std
sub
sub
push
cmp
sbb
cmc
xchg
push
xchg
mulb
aaa
add
add
mov
dec
sub
adc
jno
es
out
popa
jge
push
and
cltd
sbb
mov
repz
fiaddl
pop
add
adc
int3
or
mov
bound
leave
or
sub
mov
in
mov
mov
mov
call
xchg
sbb
enter
mov
pop
aam
mov
push
sti
or
dec
stc
sub
mov
sbb
cmpl
push
sub
shll
adc
enter
ja
in
les
xchg
pop
frstor
sub
mov
aas
dec
daa
ljmp
pop
ficoms
test
cli
push
fs
orb
jne
mov
adc
or
jnp
scas
repnz
jle
inc
xchg
adc
and
jo
jecxz
js
daa
push
adc
sub
sbb
ficoms
dec
cmc
add
adc
lds
push
sub
dec
mov
out
std
dec
test
add
popf
sbb
or
bound
lock
ljmp
mov
xor
mov
push
jmp
out
mov
pop
mov
jecxz
xchg
mov
push
push
mov
push
sub
inc
jae
or
inc
lcall
sub
and
push
add
lds
sub
mov
xor
lods
add
dec
fwait
mov
fisttps
test
xor
bound
dec
pop
dec
cli
inc
mov
icebp
push
aas
push
subl
add
or
pop
loop
push
and
inc
jl
test
add
daa
icebp
and
int3
or
dec
rorb
jmp
sbbb
pop
js
jb
dec
jmp
scas
and
ss
daa
adc
mov
dec
adc
xor
mov
pop
stos
or
pusha
cmp
loop
jmp
sbbb
xchg
sub
adcb
out
les
push
jo
clc
mov
xlat
je
stc
roll
cli
es
ret
cmp
xor
adc
cmp
mov
jne
sub
test
or
adc
or
mov
not
sahf
insb
daa
cmp
repz
or
push
dec
fisttpl
js
fcmovnb
cmp
dec
arpl
dec
repz
inc
into
fcmovnb
scas
movsb
dec
jecxz
rcrl
xchg
sbb
sub
jl
inc
xchg
jnp
sub
adc
mov
pop
sub
push
int
icebp
loop
iret
adc
mov
push
scas
mov
scas
daa
dec
loop
mov
int3
adc
jmp
cld
inc
sbb
cmp
pop
fs
sub
lock
add
dec
sahf
ret
dec
int3
adc
push
std
loope
jno
testb
popf
sub
sub
xchg
mov
aaa
pushf
adc
inc
mov
repz
or
jo
loopne
mov
andb
sub
pop
cmp
les
jle
pop
jge
sub
cwtl
and
mov
mov
arpl
into
mov
daa
sub
cli
sub
and
push
ljmp
sub
and
inc
outsb
jmp
inc
test
xorb
sbb
dec
pop
or
sub
mov
mov
btc
and
mov
out
push
fwait
in
add
cli
and
rorl
xchg
test
xor
addl
add
fs
cmp
jp
jo
mov
sub
iret
mov
pop
xchg
test
cmp
insb
adc
mov
and
inc
out
inc
inc
adc
fsubs
xor
cmpb
add
les
xor
adc
ljmp
cmpsl
stos
push
and
cmc
pop
mov
outsb
rcrl
cmp
ret
mov
pop
push
adc
out
cmp
adc
add
push
lds
or
jo
pop
add
faddp
pop
xchg
add
add
ss
add
pop
cli
cli
sbb
popl
fs
enter
xorb
or
add
push
mov
nop
fs
xor
subl
sarb
rcrb
add
xor
shlb
rolb
shrb
jmp
mov
int3
or
adc
andb
jg
in
pcmpeqb
mov
xor
jge
je
push
fcmovnb
mov
adc
enter
jno
jmp
sub
jns
jo
pusha
pop
sarl
cmp
xor
inc
sbb
add
push
in
jl
das
and
mov
popf
add
xor
jmp
lea
push
sbb
movsb
adc
faddp
pop
add
inc
rolb
pusha
int
flds
xchg
sbb
sbb
sub
fcoms
shlb
push
dec
sbb
movsb
adc
mov
sub
mov
xor
movb
xor
adcl
pop
xorl
add
add
xor
xor
xlat
add
ss
xor
shlb
push
sbb
adc
mov
pusha
push
push
adcl
add
jns
inc
or
cmp
fiadds
cwtl
sbb
push
orl
inc
pop
add
cmpl
sti
mov
in
cltd
push
jl
push
jle
stos
inc
or
aaa
lock
add
fcoml
shlb
test
push
int3
cmpl
sbb
nop
push
push
adcl
sbb
push
ss
jne
movb
xor
aad
xor
mov
push
sbbb
push
add
push
ja
leave
add
or
cmp
add
outsb
push
add
js
loopne
roll
rcrl
inc
dec
out
cmp
mov
je
bound
add
orl
push
repnz
mov
pop
mov
rol
aam
shlb
aam
mov
cmp
int
flds
rorb
sbb
push
xor
mov
pop
xorl
orl
dec
bswap
sbb
push
mov
inc
bound
mov
pop
push
pusha
xor
cli
subl
pop
add
loopne
shlb
push
and
sbbl
loop
pop
add
lock
sbb
inc
popl
nop
or
xor
cli
subl
loopne
add
or
sub
rolb
inc
shr
jmp
dec
lahf
cmpb
orb
pop
mov
xor
rolb
in
push
mov
mov
loopne
add
add
or
dec
push
mov
lcall
xlat
add
add
js
add
cmp
pusha
sbb
jnp
sti
inc
scas
add
sbb
cmp
pop
ror
sbbb
jne
xchg
cld
xor
shr
mov
sbb
imul
pusha
in
jae
hlt
sbb
inc
nop
push
fs
jnp
shrl
cltd
stos
inc
push
pop
cmpb
and
pusha
addr16
add
mov
jo
add
add
xor
sbbl
das
fstp
jo
ret
add
or
mov
sbb
add
pop
add
imul
mov
cmp
emms
add
insl
push
mov
into
xor
lds
jb
mov
mov
inc
lods
imul
addl
sbbb
add
sbb
ror
inc
or
add
mov
xchg
jp
bound
jecxz
push
lcall
jo
in
mov
inc
imul
hlt
mov
jecxz
cmp
adc
fisubl
into
mov
je
xor
xchg
lcall
movb
loope
mov
xchg
sub
xor
adc
xor
adc
mov
sub
lea
data16
adc
pop
bound
aad
push
mov
insb
leave
cmpsb
push
ret
or
aaa
inc
sbb
insl
xchg
or
push
cwtl
fiaddl
outsb
dec
and
inc
out
sub
sahf
aas
test
and
push
fimuls
js
xchg
shrl
or
andl
loope,pn
outsl
adc
inc
and
pusha
pop
xor
addr16
iret
xor
xor
push
sbb
mov
pop
or
loope
aas
lret
addr16
xchg
stos
gs
sub
ret
adc
sub
aas
mov
aam
popa
cmp
pop
mov
pop
or
mov
cmpsl
mov
loop
rcrl
insl
or
adc
adc
sbb
mov
xor
xchg
fimull
cs
xchg
js
mov
push
xor
xorb
addr16
mov
negb
adc
xor
je
ret
adc
test
shrb
test
cmp
and
inc
imul
jmp
loopne
lcall
les
or
jbe
mov
mov
xor
pushl
sbb
icebp
xor
cltd
mov
push
cmp
outsl
xor
push
pusha
dec
pop
ss
xchg
sahf
dec
test
or
sub
dec
xchg
addb
add
nopl
add
jns
mov
rcll
and
sub
dec
sbb
in
outsb
adc
popa
dec
mov
sahf
das
jmp
cmp
enter
lea
and
and
enter
mov
rcr
lahf
cmc
subl
sub
adc
jg
inc
xor
lahf
push
repnz
sub
sbb
pop
pop
mov
xor
leave
xor
add
or
xchg
shll
xor
inc
dec
mov
int3
imul
sbb
push
leave
test
aas
lods
cmpsl
sub
mov
xchg
js
jno
fisttpl
inc
mov
addr16
push
shll
inc
in
clc
loope
stos
lret
call
fchs
mov
mov
mov
mov
jmp
lods
loopne
mov
cltd
test
inc
or
mov
nop
movsl
shll
push
xchg
pusha
test
shll
cmpsl
adcl
xchg
pop
cmp
cmp
xor
lea
sub
pusha
dec
jb
xor
push
xlat
mov
icebp
xchg
es
sarb
addr16
mov
add
sbbl
pop
jmp
mov
das
xchg
call
sbb
fwait
sbb
pop
cld
sub
idivl
decl
in
imul
fadd
lcall
add
push
or
repz
xchg
mov
cwtl
rcrl
jg
dec
test
xchg
ret
xor
daa
insb
arpl
dec
push
call
or
lret
pop
ds
jmp
pop
push
sar
jmp
jmp
and
xor
jge
ret
mov
dec
arpl
ss
test
inc
dec
ror
jne
cmc
sarb
pop
sti
jo
and
pop
adc
push
jnp
in
mov
daa
xorb
flds
insl
subl
mov
ljmpw
insb
sarb
cmovns
pop
int3
and
mov
lret
gs
std
lods
iret
cli
dec
fwait
mov
icebp
jo
push
loopne
adc
scas
or
adc
clc
xchg
xlat
in
lods
inc
daa
icebp
ret
in
sbb
mov
lock
dec
lds
or
pop
jb
adc
popa
push
jo
sbb
js
push
data16
pushf
dec
sub
icebp
es
mov
dec
mov
push
jecxz
fsubrs
call
sub
js
mov
or
inc
aam
pop
rolb
rcll
sbb
gs
or
test
xchg
icebp
cmp
mov
mov
pop
in
xchg
cmp
aas
or
test
pop
adc
movsb
dec
dec
mov
xor
push
mov
dec
pop
lea
xor
fs
cwtl
fisttpll
adc
xchg
icebp
ret
leave
pop
ljmp
mov
je
pop
fwait
xorb
fwait
pop
aas
mov
and
loop
dec
mov
sbb
push
test
jle
dec
mov
sub
xor
adc
dec
mov
push
int3
lret
ss
adc
sub
loope
sbb
in
test
inc
add
sub
adc
jbe
cltd
loop
pop
mov
adc
lcall
jno
leave
xor
mov
cmpsl
cld
mov
mov
es
insl
jmp
lock
mov
icebp
das
idiv
fs
aam
jb
les
xor
sub
clc
xchg
loope
dec
mov
sub
movsb
imul
pop
aam
lret
hlt
popf
inc
out
xor
sub
in
imul
pop
cld
cmp
repz
icebp
hlt
test
movsl
cmp
out
aas
cwtl
ds
cmpsl
xor
aaa
push
lahf
sbb
dec
dec
lret
mov
pop
jae
stc
jle
or
loope
push
in
xor
push
xor
sbb
gs
inc
pop
into
cltd
dec
shlb
loopne
in
inc
push
cmp
popf
mov
cmp
shlb
mov
iret
shlb
js
ficoml
jg
or
xchg
adc
mov
std
es
push
xchg
popa
xchg
sbb
stc
ret
inc
repnz
jle
popf
mov
adc
jg
lods
inc
nop
mov
cmp
and
fwait
out
mov
push
les
xchg
pushf
adc
lret
cmp
lds
test
dec
lahf
cs
xchg
mov
daa
mov
rcl
pop
or
ficomps
fsubrl
add
shrb
add
cmp
dec
out
daa
ret
fiaddl
xor
scas
dec
dec
nopl
enter
es
inc
je
xchg
xchg
pop
adc
lea
dec
aam
int
arpl
xchg
xchg
es
test
insl
cmp
mov
call
movsb
mov
and
hlt
test
dec
insl
lret
jno
dec
xor
loopne
pop
jl
imul
rcl
xor
jl
fwait
add
and
xchg
jnp
test
cmpsl
dec
clc
aas
pop
lock
pushf
dec
jne
mov
sub
outsb
sbb
test
movsl
adc
and
dec
xor
push
adc
pop
rclb
loop
jbe
or
movsb
xchg
xchg
dec
xlat
scas
sub
aad
cmc
test
sbb
aaa
add
scas
cmpsl
leave
dec
xchg
subb
adc
stos
jecxz
aad
xor
ficoml
rolb
inc
out
cld
jae
std
or
mov
mov
hlt
sub
xchg
mov
add
in
aas
and
dec
in
ljmp
loop
sub
jge
xchg
push
jbe
xchg
stc
xor
push
or
xlat
jb
mov
push
dec
cli
inc
xchg
mov
fnstenv
jb
into
sbb
scas
push
mov
out
aas
lcall
dec
std
xchg
test
into
xchg
in
sub
xchg
das
daa
add
ljmp
rorl
xchg
fldl2e
cld
pop
imul
insb
loope
loopne
inc
cmp
rorl
mov
add
jne
xor
mov
mov
stc
inc
push
push
mov
out
mov
lahf
mov
cmp
hlt
aas
int3
div
ret
push
lahf
rorl
push
js
sahf
ds
push
shll
das
test
xor
sub
pop
xor
lds
lahf
shll
fisubrl
shll
jbe
or
dec
ret
push
jmp
stos
jl
imul
cmpsb
inc
popa
adc
scas
inc
int
push
mov
dec
fs
cli
xchg
mov
jge
popa
lods
es
scas
hlt
popf
xor
mov
cs
and
xor
or
insl
insl
imul
mov
push
mov
in
insl
sub
es
mov
movsb
arpl
push
jmp
divb
sbb
cmpsb
lods
aas
cmpsb
fnstenv
jnp
xchg
mov
add
in
imul
mov
pop
and
pop
adc
inc
test
out
movsl
sub
pop
decb
and
and
xchg
or
imul
jb
dec
adc
lahf
lds
sub
lock
pop
ficomps
add
rcrl
jecxz
test
loop
push
pop
adc
in
cs
lea
pop
mov
mov
sbb
lea
cmp
mov
or
sbb
and
sub
pop
out
mov
out
dec
shl
cltd
loop
push
xchg
or
cmpsl
cmpsl
in
fdivrl
loopne
mov
inc
mov
lock
jae
mov
aas
icebp
push
push
ss
add
and
enter
cs
stc
cmc
or
std
test
test
test
cmp
mov
xchg
rcrl
add
and
adc
lret
inc
mov
xor
ljmp
mov
decl
add
outsl
call
or
xchg
icebp
leave
sub
popf
push
xchg
jae
imul
push
test
nop
sub
ljmp
dec
xor
xchg
outsl
out
mov
jg
cli
je
ss
sarb
call
cltd
fcomp
data16
or
cmp
mov
xchg
mov
leave
out
ja
and
xchg
mov
sti
mov
dec
sbb
lcall
ljmp
jg
mulb
fcomip
cmp
stos
dec
jg
jnp
dec
pushf
jle
pop
lods
and
mov
xor
repnz
xchg
nop
mov
pushf
mov
das
xor
stc
cwtl
aas
sysenter
inc
stos
dec
ret
jmp
add
push
xchg
lret
and
repnz
mov
in
jg
mov
adc
sbb
fadd
gs
divb
cmpsb
xchg
mov
lods
aas
out
cmpsb
xchg
pushf
pop
mov
dec
call
pop
int
loop
dec
mov
xchg
mov
xor
xchg
and
push
lahf
hlt
pop
sub
inc
adc
adc
mov
jno
out
outsl
add
mov
scas
dec
mov
lods
movsb
enter
ds
addb
std
dec
lret
mov
push
pop
ja
xor
je
push
mov
addr16
xor
pop
cli
shlb
and
in
push
subb
pop
jmp
sub
cmp
daa
dec
dec
mov
ret
cld
cwtl
xchg
mov
mov
aad
sub
scas
into
add
cld
repnz
jo
shlb
or
dec
fwait
das
cmp
aas
shlb
push
xor
addr16
pushf
dec
loopnew
and
push
adc
adc
mov
aam
ja
pushf
scas
sar
cld
enter
add
cmp
dec
test
or
es
in
cmp
in
dec
notb
or
add
in
ljmp
cmp
dec
mov
push
xlat
cmpsl
mov
ss
or
xchg
xor
sbb
cld
cltd
adc
lds
iret
lcall
shrb
mov
xor
adc
push
push
aaa
add
push
pusha
stc
jg
sbbl
ljmp
mov
and
sbb
dec
out
adc
cmp
ss
dec
or
movsb
rclb
sub
xchg
pop
loop
xor
add
add
test
hlt
inc
popa
pop
and
lcall
push
push
in
cld
flds
push
push
or
push
inc
and
not
cmp
and
mull
cmp
testb
out
sarb
aad
mov
xor
les
add
icebp
in
sarb
filds
mov
dec
xchg
out
sub
clc
jb
jnp
push
arpl
nop
jnp
pcmpeqw
push
imull
xchg
or
lods
jg
in
mov
push
fldl
jnp
push
loope
mov
xlat
sub
fs
mov
aad
mov
in
mov
dec
inc
cmpsb
inc
es
jnp
movd
cmp
xor
lock
mov
into
jg
out
or
push
loop
mov
xlat
loope
lock
xor
or
push
xchg
pushf
mov
daa
mov
daa
pop
mov
mov
cmp
jae
dec
loope
xchg
les
mov
popf
fs
xchg
aas
xchg
leave
cmp
sub
dec
cmp
xchg
jne
and
push
dec
fsubrl
out
xchg
lahf
mov
or
leave
cmp
xchg
jns
and
jmp
hlt
ss
cld
xchg
dec
ljmp
sti
and
inc
cmp
stos
mov
pop
aam
cs
adc
jae
adc
repz
push
sub
pushf
int
inc
mov
fadds
into
sub
in
scas
inc
push
cmc
punpckhdq
jno
inc
nop
jge
and
cli
mov
pop
push
and
dec
cmp
mov
fdivl
in
nop
sahf
cmp
decb
or
imulb
sub
cmp
adc
and
cmp
test
lahf
stos
xchg
in
push
mov
cmp
mov
jp
inc
mov
cmp
or
or
xchg
inc
mov
out
test
pushl
inc
flds
xchg
xchg
jb
das
out
mov
pop
arpl
fstpl
popa
push
jmp
push
xchg
or
mov
xor
jo
cvtps2pi
nop
inc
jns
add
dec
push
and
xchg
adc
in
rcrl
lret
aam
cmp
dec
test
dec
cld
jle
pop
hlt
jle
jno
int3
dec
adc
movsl
and
adc
out
sti
mov
mull
add
fs
adc
or
or
shll
dec
add
movsb
iret
adc
mov
or
adcb
jne
mov
stos
stos
mov
or
pop
push
adc
jmp
stos
pop
aad
je
inc
sub
fmulp
data16
test
mov
bnd
jns
or
stc
ja
filds
jnp
jmp
insl
mov
sbbl
pop
sti
adc
mulb
iret
xor
cwtl
mov
or
mov
popf
loopne
outsb
dec
loopne
lds
out
cmp
repz
dec
repz
stc
shl
scas
ja
out
mov
out
leave
pushf
push
mov
incl
sub
lcall
push
pushf
imul
mov
mov
jo
jae
xor
in
dec
std
data16
mov
xor
hlt
lods
xor
push
jl
out
jecxz
daa
jnp
arpl
mov
or
xchg
xchg
adcb
jnp
out
mov
mov
outsb
or
inc
leave
popf
in
out
lods
mov
push
jns
dec
xor
adcl
mov
mov
jge
out
or
imul
dec
adc
loopne
fs
cmp
sbb
mov
into
push
or
nop
in
add
add
adc
adc
xor
lret
cwtl
add
bound
std
inc
jns
ret
dec
addb
in
pop
pusha
data16
push
cs
fwait
decl
lret
cs
bound
fdivr
fiadds
or
lcall
dec
mov
xlat
jl
sub
xchg
mov
and
clc
dec
lahf
sti
xor
inc
xor
pusha
test
jbe
es
and
das
shl
and
in
mov
jg,pn
add
mov
lahf
test
out
jne
xor
andl
dec
dec
loop
mov
xchg
pushf
repnz
aas
and
xchg
gs
jmp
xchg
std
mov
lretw
clc
mov
ljmp
es
daa
jl
sub
dec
push
jp
aad
pop
fiaddl
and
dec
lds
data16
fwait
ret
mov
dec
jg
mov
push
or
sbbl
aam
mov
nop
mov
xchg
sub
outsb
out
fisttpll
xlat
lcall
pop
inc
loope
mov
push
and
jo
jp
adc
bswap
pop
xor
les
pop
mov
adc
pop
mov
into
mov
jl
mov
arpl
add
pop
fsts
inc
lret
lcall
std
popa
add
ret
into
pop
push
movsb
jecxz
adc
push
xor
push
xchg
mov
sbb
imul
sbb
push
push
and
cmp
out
vaddsubps
cmpsl
rclb
cwtl
cmc
in
adc
adc
mov
and
das
dec
test
ss
orl
rcll
scas
cmp
mov
ret
cltd
jno
add
jbe
jo
iret
or
jo
hlt
loope
inc
mov
leave
or
lock
call
jno
filds
jecxz
aad
mov
push
pop
sbb
sub
fwait
push
popa
adc
insb
mov
xchg
cmpb
inc
xchg
aad
jp
adc
fscale
loop
or
adc
mov
cmp
popa
sbb
orb
test
shrb
pop
inc
shlb
or
sbb
cltd
push
mov
popa
push
jmp
lock
les
jnp
push
enter
imul
cltd
add
or
lea
inc
adc
or
xor
mov
std
push
xlat
es
jae
sarb
scas
inc
mov
jnp
aaa
or
dec
addr16
or
js
xchg
mov
pop
nop
in
hlt
flds
mov
stos
sub
fiaddl
shll
in
popa
les
stos
add
clc
in
xor
into
cltd
or
inc
dec
xchg
ds
cmp
movsl
call
sbbb
lock
dec
out
in
call
test
mov
push
ljmp
xchg
xchg
in
pop
pop
mov
clc
or
pop
cmp
aas
mov
test
jp
je
fnsave
dec
movsl
dec
les
sub
fldt
xchg
dec
cmpl
arpl
mov
lcall
lahf
jnp
mov
insb
dec
pop
test
xor
inc
movsl
and
aam
rcrb
mov
lds
es
or
pop
dec
or
push
adc
fldt
or
push
out
or
outsl
inc
pop
push
xor
jge
daa
out
ss
add
xor
divb
or
fwait
sub
xor
sub
xlat
sbbl
mov
add
pop
mov
hlt
jo
in
hlt
movsl
cs
ret
and
fs
push
cwtl
in
lahf
dec
jb
add
push
sub
sbb
add
inc
fidivl
movsl
add
jg
divb
iret
jbe
cmp
inc
dec
mov
dec
dec
inc
pop
cmp
mov
shld
push
int
xor
test
negl
mov
iret
or
mov
jnp
xchg
lret
test
sub
pop
pop
inc
cmp
jno
lds
inc
fidivl
jne
test
add
mov
inc
push
aas
mov
js
sbb
add
jecxz
jl
rcr
push
lods
xor
xor
inc
inc
or
and
lds
adc
fistps
aam
and
in
jae
jno
xchg
add
inc
pop
xor
lret
test
inc
adc
inc
mov
jg
cmp
sarb
lret
aas
test
dec
dec
inc
inc
addr16
pop
in
xchg
xchg
popf
lds
stos
pop
imul
mov
stc
into
cli
xor
push
xchg
jbe
test
dec
pop
jne
mov
mov
xor
pop
int3
addr16
add
sub
push
pop
cmp
cmovne
outsl
push
add
push
mov
popa
push
pop
pusha
jb
pop
cmpsb
xchg
repnz
sti
dec
mov
push
push
pop
daa
add
arpl
adc
xchg
adc
imul
push
inc
es
push
inc
movsl
sub
xor
push
xlat
mov
jge
fbld
gs
or
mov
movl
cltd
rorl
sub
inc
mov
push
mov
dec
daa
cmp
mov
push
push
adc
cmp
mov
and
mov
fistl
ja
mov
test
mov
aaa
fildll
loope
icebp
loope
cmp
cmp
jge
jne
sbb
xor
and
mov
cmp
loope
sub
in
int
lock
cld
pop
lds
insb
sti
imul
dec
ds
fs
mov
mov
pop
mov
dec
fimuls
aad
add
push
push
mov
add
add
pop
pop
jl
xor
loopne
bound
imul
pop
mov
push
jmp
dec
mov
fwait
xor
ds
ret
cmp
jo
push
jp
jge
xchg
sub
cld
popa
inc
xor
leave
add
xchg
cmp
shll
mov
ror
jmp
mov
movsl
shrl
arpl
sub
les
adc
popf
pop
dec
pop
fcoml
mov
ss
adc
iret
mov
sub
inc
scas
test
mov
loope
mov
aam
out
loop
xorb
jns
jecxz
fists
in
inc
pop
dec
push
orl
jp
jno
fwait
inc
lock
scas
ds
repnz
mov
pop
jb
bound
les
jg
lret
mov
jg
cwtl
outsb
decb
jb
data16
sub
push
or
rorb
lock
mov
dec
inc
push
add
sub
push
push
cmp
stc
xchg
sub
in
xor
push
fidivs
push
fwait
mov
and
repz
xor
int3
mov
inc
bound
sarb
lcall
int3
jbe
or
int3
lahf
pushl
sub
push
sub
sub
lock
xchg
cmp
push
lcall
push
inc
xchg
ret
xchg
jmp
mov
scas
mov
fcoml
jge
xchg
js
fisubrs
insl
test
jp
sbb
push
std
in
fstpt
imul
or
insb
sbb
pop
add
rcr
loopne
push
push
or
std
add
pusha
jo
push
fwait
lock
push
bound
ret
pop
loopne
out
insl
cs
cmp
sub
lods
sbb
cmp
xor
arpl
rcll
push
add
out
das
jle
dec
mov
dec
loope
imul
fmul
pusha
xor
in
rcrb
pushf
xchg
mov
mov
xorl
mov
jns
mov
and
mov
pop
mov
xor
mov
into
cli
mov
push
cld
leave
ja
push
mov
gs
iret
in
sti
adc
in
dec
lods
sub
jb
dec
aaa
mov
lds
fildl
imul
lods
mov
fisubl
mov
outsl
arpl
fnstenv
pop
roll
jecxz
fimuls
fimull
js
add
repz
js
push
pop
pop
or
pop
mov
out
xchg
fisubrs
cltd
gs
and
enter
jo
mov
pop
fs
adc
pusha
scas
jl
add
imul
or
push
imul
test
faddl
jns
int
adc
jge
sbb
fidivl
inc
ret
leave
mov
enter
pop
pop
mov
sbb
mov
mov
cld
out
and
sbb
insl
xchg
dec
mov
ljmp
fstpl
pop
push
push
sub
je
push
mov
xchg
mov
add
jge
int3
and
push
das
mov
int
xchg
stos
jmp
insb
test
dec
jl
addl
adc
xor
leave
push
dec
loope
stos
das
fldenv
loope
in
outsl
mov
mov
imul
mov
fisubl
fnsave
fdivl
in
mov
mul
out
fbstp
ret
lcall
outsl
cltd
insl
xchg
mov
cld
dec
cmp
ljmp
mov
sbb
cmp
sbb
div
sbbl
jbe
outsb
pop
push
sub
test
lret
xchg
fisttpll
lret
stos
push
wbinvd
jbe
pop
xor
mov
mov
arpl
lcall
fcoml
movl
cld
jmp
lods
mov
pop
out
or
sub
scas
jne
fdivr
push
in
inc
div
push
pop
xlat
imul
fwait
loopne
sbb
push
in
mov
mov
mov
mov
out
lret
scas
lock
cltd
mov
jp
repnz
das
lahf
cmp
scas
lret
insb
fisubrl
xor
cld
or
xor
lahf
cmp
orb
fcmovbe
sbb
in
aad
mov
int
daa
mov
add
imul
dec
push
nop
cmp
and
adc
push
fnstsw
push
ds
mov
or
fs
in
mov
sti
mov
xchg
or
enter
cmp
fisubl
inc
out
jge
jl
es
inc
push
dec
lret
scas
mov
jg
mov
adc
push
loop
leave
dec
std
push
jle
mov
addb
xchg
pop
enter
imul
fcompl
and
ljmp
es
jp
mov
faddl
mov
pop
orl
ss
mov
sahf
xchg
or
js
xchg
leave
push
push
mov
fsubs
adc
fidivs
lea
push
fwait
dec
hlt
pusha
jg
push
jbe
into
imul
gs
lods
cmpsl
out
es
fwait
mull
xor
xchg
fstps
mov
stc
jne
daa
movsl
or
test
jnp
cmpsb
insl
xlat
sub
mov
inc
xor
mov
cmp
push
jno
and
xchg
aas
jp
clc
ljmp
montmul
cmpsb
inc
mov
jno
add
cli
xor
mov
js
imul
ficompl
push
lahf
jge
out
jno
adc
clc
push
or
add
jno
imul
cmpsl
xlat
cmpsl
mov
lods
movsb
pushf
cmpsl
sar
xlat
loop
gs
into
rcll
iret
sahf
xor
mov
shrl
test
arpl
cwtl
mov
mov
adcl
stos
push
in
inc
testl
mov
mov
and
roll
ja
sub
xor
outsb
or
push
in
imul
jbe
sub
mov
cmp
aas
jle
gs
pop
pop
dec
jmp
mov
push
inc
mov
loopne
pop
jecxz
int3
mov
pop
cwtl
pop
out
adc
jge
es
pop
addr16
xor
dec
push
pop
add
cmc
sarl
mov
lret
cld
add
or
add
clc
pop
or
stos
adc
jo
in
jo
in
jne
jo
iret
jo
leave
mov
ss
mov
pop
dec
dec
push
aad
repz
add
aas
cli
mov
jo
cmc
rol
pop
sbb
jno
rol
nop
movsb
xor
int
filds
jge
adc
sbb
sub
push
ret
push
sti
cmpl
push
cmp
mov
scas
xchg
pop
dec
pop
out
push
out
push
mov
xchg
xor
dec
sbb
inc
loop
test
dec
stos
sbb
ret
fucom
cld
outsl
dec
sahf
add
mov
aad
pop
xor
jge
mov
into
mov
out
jl
insl
sub
mov
push
sub
into
mov
pop
xor
movl
montmul
cmpsb
xorb
and
mov
jp
divb
test
lea
jp
cs
jg
xor
adc
call
lea
cmp
mov
pop
push
dec
popf
xor
cltd
cmp
ret
or
movsl
int
push
mov
mov
lss
sbb
inc
scas
lock
mov
dec
jbe
jbe
shrl
pop
xchg
outsb
push
fsubrs
cmpsb
and
ds
or
loopne
aas
pop
pop
adc
push
mov
mov
mov
pop
mov
imul
push
mov
pop
jp
pop
inc
inc
adc
dec
cs
dec
test
push
add
inc
fisubrs
mov
dec
stos
push
adc
lds
adc
push
movsb
int
push
mov
jno
ret
cmp
negl
insb
clc
arpl
popf
push
lret
mov
push
imul
xchg
push
push
add
mov
sbb
adc
xchg
jmp
mov
pop
jbe
jae
mov
dec
and
push
jbe
scas
repnz
sahf
and
lret
out
mov
call
dec
push
adc
push
adc
sbb
mov
hlt
in
xchg
ljmp
out
add
lret
imul
push
inc
rorw
cs
test
pop
fldl
mov
or
ret
mov
pop
add
insb
jmp
cmpsb
test
jae
xor
dec
dec
xor
fs
inc
or
fwait
and
inc
sbb
cmpsb
data16
imull
inc
aas
shrb
add
lea
jbe
xchg
pop
arpl
ret
mov
std
push
bndstx
scas
in
lahf
jecxz
int
lahf
jmp
adc
pop
into
pop
aam
mov
adc
stos
out
stos
nop
repnz
daa
jnp
insb
mov
push
je
nopl
jl
lea
sub
imul
mov
sub
sub
push
lcall
pop
sbb
fildl
and
push
or
aad
stos
gs
pop
or
out
cmp
cmp
cmpb
pop
xor
mov
inc
push
and
push
repz
mov
pop
mov
jnp
dec
inc
push
dec
ret
int
dec
out
ss
jnp
xchg
and
popa
mov
push
daa
dec
xchg
xor
out
cmpsl
pop
aad
repnz
ds
nop
xchg
in
jno
jae
dec
ljmp
inc
movsl
stos
js
cmp
cmp
adc
aas
addr16
mov
xor
mov
dec
inc
jle
cmp
mov
inc
loope
dec
sbb
rcll
out
in
and
lret
ret
addr16
push
adc
ljmp
iret
cltd
pop
or
ja
cmpsb
andb
insb
xor
js
aam
ret
pop
pop
push
dec
adc
stos
pop
add
mov
cs
js
sub
jae
adc
aam
dec
push
cmpsl
pop
inc
xchg
jbe
jb
ss
mov
dec
add
and
rclb
fwait
enter
sarb
lret
adc
push
mov
andl
mov
mov
mov
mov
push
cmp
cmc
popa
jnp
sub
shlb
and
call
test
sub
jb
out
xchg
pop
dec
or
rorl
add
inc
stos
les
dec
push
adc
inc
test
sub
push
scas
push
or
xchg
stos
stos
cmp
lret
repnz
scas
xchg
pop
flds
clc
aaa
mov
cmpb
lret
aas
push
mov
pop
aas
push
je
stc
out
loope
adcb
push
xlat
push
rcll
shlb
mov
lods
xor
or
cli
xchg
pop
push
ret
inc
jns
xchg
add
icebp
cmc
inc
popf
ljmp
and
jmp
movsb
test
push
aam
jge
lcall
stos
sub
insb
jl
sbb
daa
jmp
cmp
lret
sbb
push
adc
pusha
and
cmpsl
sub
pop
push
out
pop
adc
sub
mov
stos
add
sahf
pop
xor
imul
inc
outsb
stc
jecxz
mov
stc
pushf
dec
push
rolb
dec
ret
cmp
lock
jae
push
add
dec
xor
or
stos
mov
decl
xor
pop
dec
adc
addr16
sub
cmc
or
and
cmp
dec
or
scas
mov
pop
push
clc
outsl
and
push
dec
push
data16
pushf
or
sub
dec
xchg
sbb
fiadds
into
in
sub
sbb
imul
lret
pop
mov
inc
es
dec
nop
sbb
movsb
insb
in
lret
cmp
push
nop
sbb
aas
jae
ljmp
push
mov
in
jge
pop
dec
bound
mov
pop
sub
xchg
fstpl
xchg
cli
jge
dec
iret
repnz
cmc
js
daa
out
test
mov
xchg
pop
pop
jl
or
movl
pushl
mov
icebp
mov
bts
sub
std
lahf
xadd
cltd
jg
jmp
mov
hlt
mov
cld
jl
push
mov
into
jns
jl
in
mov
jecxz
scas
lret
xchg
lcall
out
dec
ja
outsl
and
pop
ds
fistps
xor
bound
push
ljmp
addr16
shrb
int
jae
push
fisttpl
stc
sbb
subl
loope
rcrl
imul
mov
das
push
lods
std
sbb
cmp
je
cmc
mov
jns
cli
ds
push
mov
fisttpll
loopne
push
decl
fisubrs
pop
or
int
clc
dec
jae
shll
bnd
xchg
push
mov
push
out
shll
hlt
mov
ljmp
mov
repnz
pop
outsl
in
cli
call
fdiv
outsb
xor
shll
insl
frstor
jp
lods
negb
outsb
fwait
mov
sti
lods
test
cs
lret
jmp
xchg
outsl
xor
cwtl
insl
lcall
mov
mov
std
insl
psllq
nop
and
jo
mov
jle
mov
adc
mov
pop
jnp
lahf
dec
out
cld
aas
movsb
sti
sbb
data16
imul
jge
insb
daa
mov
adc
pop
mov
std
sarb
lret
jecxz
dec
cmpsb
lret
sub
cmp
cmpsl
lods
hlt
ss
bswap
in
test
iret
in
lret
push
xor
ja
fsubrl
inc
dec
lret
lods
hlt
jp
lret
lods
pushf
es
insl
mov
test
push
push
fdivr
fnsave
mov
dec
cwtl
lods
iret
scas
repz
cmp
out
test
cmp
mov
repnz
sbb
in
jge
stos
push
cwtl
cwtl
test
dec
push
ljmp
out
stc
cli
dec
daa
leave
lds
fcomps
fnstenv
add
jns
dec
adc
in
cmp
das
cmp
jmp
sbb
out
jns
cltd
daa
std
fists
pop
iret
mov
out
jo
daa
lods
sbb
cmp
lcall
imul
sar
mov
jecxz
sbb
xor
bound
iret
aas
xchg
mov
pop
int3
mov
scas
shll
inc
movsb
loope
sub
ret
pop
sbb
jae
hlt
mov
in
mov
js
pop
pop
pop
pop
ljmp
mov
jle
mov
jae
into
js
adc
jecxz
fwait
pop
cmc
call
pop
xchg
mov
mov
es
xor
push
pop
mov
mov
sbb
aad
lret
in
sub
popf
sarb
sub
jae
iret
dec
pop
ljmp
test
movsl
out
sbb
scas
add
pop
push
jno
xchg
iret
mov
xlat
jge
repz
dec
cmp
out
and
jmp
test
insl
cmc
cmc
mov
jmp
mov
cmp
mov
fstps
inc
jmp
cli
mov
cmp
push
rolb
out
out
dec
lret
out
outsl
das
xor
pop
push
mov
xchg
in
mov
mov
pop
mov
repnz
cld
in
out
aam
pop
out
fildll
push
movb
fnstsw
into
mov
out
imul
scas
rcr
mov
outsb
mov
xchg
mov
xor
repz
call
push
pop
jae
test
aaa
aaa
push
sti
cmp
fildl
jne
scas
jbe
mov
cmpsl
xor
push
push
jg
inc
in
iret
xchg
cli
sti
or
sbb
leave
int
fistpl
pop
xchg
data16
mov
mov
int
filds
mov
push
pop
fistps
jne
cmp
jp
inc
ss
fstps
jg
stos
int
cs
mov
sub
sahf
fdivl
out
jo
mov
add
add
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
daa
add
add
add
add
add
adc
or
or
adc
movlps
ud2
or
sbb
push
or
adc
add
or
nop
add
into
add
add
or
add
add
sbb
add
clc
nop
add
fldl
add
adc
add
and
xchg
add
icebp
add
add
add
xor
add
adc
add
incb
add
or
or
add
add
add
add
add
xchg
add
sbb
add
adc
adc
or
push
adc
or
or
or
adc
adc
or
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
push
imul
jb
gs
imul
insb
insb
outsl
arpl
popa
insb
inc
jb
gs
outsl
arpl
inc
insb
insb
outsl
arpl
je
gs
imul
jne
jb
outsb
je
push
dec
fs
gs
push
dec
outsl
arpl
gs
gs
je
jb
jne
dec
outsb
outsw
inc
inc
gs
outsl
fs
gs
imul
inc
gs
outsl
arpl
gs
outsb
outsw
inc
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
gs
imul
js
je
jb
arpl
jae
jb
je
inc
imul
fs
gs
js
gs
imul
gs
je
push
outsb
ja
outsb
fs
popa
imul
jo
imul
je
dec
popa
outsb
fs
gs
gs
gs
outsl
popa
jb
push
jns
gs
gs
popa
addr16
outsl
js
inc
push
js
inc
push
gs
jne
jb
push
popa
insb
jne
inc
js
push
gs
jo
outsb
dec
gs
js
push
gs
insb
outsl
jae
dec
gs
jns
inc
jb
gs
je
imul
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
push
insb
jae
gs
popa
insb
jne
push
insb
jae
gs
popa
insb
jne
dec
outsl
arpl
inc
insb
insb
outsl
arpl
je
outsl
fs
gs
popa
outsb
fs
gs
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
push
imul
jne
jb
inc
js
imul
jb
je
arpl
push
imul
jb
gs
imul
insb
insb
outsl
arpl
insl
imul
outsl
arpl
jae
imul
jae
jne
arpl
gs
push
inc
outsl
outsb
je
js
push
gs
insl
gs
push
push
gs
fs
jb
arpl
jae
gs
outsl
jb
dec
outsl
arpl
gs
jne
arpl
outsl
popa
fs
gs
jne
arpl
outsl
popa
fs
imul
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
outsl
bound
dec
popa
outsb
fs
gs
insb
outsl
bound
dec
outsl
arpl
insb
outsl
bound
inc
jb
gs
insb
outsl
bound
inc
insb
insb
outsl
arpl
je
push
inc
outsl
outsb
je
js
inc
gs
jb
arpl
fs
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
inc
jb
gs
imul
imul
jne
arpl
inc
jb
popa
je
push
jb
arpl
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
add
add
add
add
add
sub
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
movsb
mov
add
add
add
add
add
add
dec
add
adcb
add
jo
add
add
add
add
add
add
add
test
add
xor
add
adc
add
in
add
add
add
add
add
add
add
rolb
add
inc
fiadds
add
add
add
add
add
add
add
add
add
clc
add
add
mov
add
add
add
add
add
addb
andb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
pop
add
inc
add
dec
add
inc
add
push
add
jns
dec
add
outsl
add
add
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rolb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
incl
add
add
incl
add
add
add
add
pop
add
adc
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
pop
add
pop
add
pop
add
add
add
roll
add
add
fcmovb
pop
add
add
add
roll
add
add
std
roll
add
add
or
pop
add
roll
push
rolb
sub
rolb
cmp
pop
add
add
pop
add
add
pop
add
add
pop
roll
mov
pop
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
insb
jae
gs
popa
insb
jne
add
add
imul
jae
dec
gs
outsl
jb
add
add
and
add
mov
adc
add
jl
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
pop
mov
sub
add
push
push
call
popa
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
push
push
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
mov
lea
mov
lea
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
pusha
push
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
sub
mov
popa
pop
ret
push
call
addl
or
inc
and
push
mov
sbb
loope
jge
sbb
add
or
rcrb
les
adc
push
mov
push
xor
add
insb
and
jb
mov
inc
adc
cmpl
mull
lret
je
je
pusha
add
rcrl
dec
jne
adcl
or
mov
cmp
xchg
sarl
ljmp
lea
add
pop
push
push
or
cs
pop
mov
push
jo
decw
fcoms
and
add
outsb
push
sub
push
push
push
push
call
add
fwait
mov
or
pop
orl
jbe
in
movsl
cmp
lock
dec
push
mov
push
cmp
push
or
mov
mov
enter
fcmovnbe
loop
xor
pop
cmp
test
adc
aam
xchg
ss
xor
inc
or
xchg
addl
mov
push
ret
xchg
jbe
adc
inc
inc
enter
add
xor
stos
adc
call
pop
test
push
fsubrs
lret
call
insb
pop
mov
add
sub
mov
cmp
lds
push
pminub
scas
mov
add
xchg
adc
sbb
inc
pop
and
mov
push
ss
dec
jge
mov
and
lret
jno
adc
int
fstps
add
ret
inc
rorl
cmp
test
jae
jge
out
jmp
and
in
xlat
ret
add
or
outsl
arpl
cld
je
cmp
add
sub
mov
mov
es
mov
sub
adcb
call
cmp
loope
or
jo
sub
adc
add
inc
or
pop
loop
inc
cmp
pusha
bndldx
sub
nop
and
pop
addb
push
mov
xor
call
mov
mov
cwtl
dec
cmp
cmp
stos
add
cwtl
lea
push
sub
in
dec
setb
cwtl
xchg
xchg
adc
xor
xchg
inc
in
je
sub
xchg
xchg
popf
rorb
aad
std
les
sub
rcrb
or
or
push
call
push
adc
jmp
scas
movsb
inc
enter
pop
lock
jmp
fdivl
bound
in
lock
mov
push
xchg
inc
add
or
rclb
dec
pushf
loop
sti
add
mov
jmp
dec
mov
pop
push
mov
lods
inc
push
es
inc
push
xchg
fs
es
iret
adc
call
sub
add
sbb
test
push
xorl
push
add
jl
xor
out
je
sbb
sub
jge
xchg
mov
sub
push
dec
pop
add
pusha
add
jmp
out
rorl
xchg
inc
testb
xchg
xor
or
mov
or
xchg
adc
add
add
divb
adc
ja
or
xchg
inc
es
dec
dec
arpl
jmp
out
out
mov
sbb
jmp
fistl
pop
lods
movsb
les
into
and
jns
inc
or
inc
push
cmp
jne
fstl
inc
and
ret
js
aas
inc
mov
leave
rorl
and
leave
push
mov
push
add
call
or
movl
decl
push
call
or
sbb
or
or
dec
inc
jne
in
ret
push
inc
scas
adc
mov
andb
daa
rcll
or
scas
pusha
ret
shlb
int
or
xor
jo
icebp
je
loope
decl
push
add
pop
int3
cmp
and
dec
adc
loope
or
insl
ror
movsb
inc
sub
in
pop
sbb
shl
shl
mov
stos
push
rorb
fists
ss
in
jo
inc
mov
mov
shlb
or
out
sbb
pop
add
loopne
dec
add
adc
or
or
mov
and
cmp
push
nop
leave
push
mov
fwait
adc
adc
clc
inc
icebp
dec
sbb
add
jecxz
and
lock
sub
mov
xor
sbb
leave
push
dec
add
enter
shl
call
sub
xlat
push
inc
mov
dec
lods
cmp
cmp
lcall
bound
mov
ret
shl
inc
mov
scas
sub
and
mov
push
dec
cmc
test
or
test
es
sbbl
xchg
fs
or
std
and
sub
sub
push
mov
pusha
mov
jb
dec
add
pop
mov
pop
xlat
lods
mov
inc
mov
xchg
mov
push
lods
xor
adc
iret
icebp
loop
and
loop
sbb
dec
sbb
out
aam
cld
jnp
inc
sbb
mov
sahf
mov
xchg
aaa
loop
jne
or
push
sub
pop
repnz
fsub
jb
or
test
xchg
sub
mov
sub
popa
add
add
punpckhdq
or
adc
push
mov
je
dec
xor
jmp
xchg
pushf
sub
push
sub
jecxz
xchg
inc
sti
cmc
and
test
cltd
mov
mov
mov
push
or
dec
shl
pop
mov
or
lcall
push
and
cmp
mov
dec
stos
mov
adc
je
ret
adc
mov
dec
lret
xchg
fldl2e
cmp
jae
fsubl
loopne
ret
shl
jmp
and
test
pop
adc
inc
fadd
test
or
arpl
outsb
xchg
mov
rcrb
push
icebp
adc
ljmp
outsl
adc
inc
inc
cmp
xchg
cwtl
xor
bound
xor
sub
data16
ljmp
ja
in
test
fiaddl
sarl
jno
shr
inc
pushf
cmp
jb
outsl
call
mov
sub
jb
out
clc
push
pop
cmp
outsb
cmpb
mov
lds
ret
add
add
add
pop
add
addb
incl
add
mov
add
mov
arpl
dec
or
sub
jnp
pop
pop
loope
jb
outsl
iret
hlt
adc
xchg
ret
fldenv
pop
movsb
stos
push
sbb
insl
imul
jecxz
dec
push
imul
leave
mov
adc
jecxz
xchg
cmp
lods
adc
and
mov
sti
and
hlt
loop
out
mov
mov
test
das
push
test
dec
pop
pop
das
cmp
clc
out
add
popf
test
outsl
adc
scas
and
mov
cwtl
inc
outsb
not
int
lds
negb
aam
push
fnstsw
push
out
repz
loope
scas
xor
aad
inc
nop
divl
sbb
leave
lds
mov
das
enter
fists
xor
jp
jg
test
xchg
sarl
sub
outsb
in
pop
mov
rorb
lea
inc
sar
and
cmp
cmpsl
sub
mov
into
jmp
testl
jle
cltd
jle
cltd
xorl
mov
mov
ficomps
push
push
sub
cmpsl
push
xchg
sbb
jl
xchg
aaa
xor
mov
push
xlat
xlat
cmp
mov
or
loopne
imul
fsubl
or
mov
lods
xor
daa
jbe
adc
sahf
lods
mov
mov
repnz
mov
shl
je
cmp
lea
sbb
pop
fsubs
jmp
jae
sub
lahf
fstl
jnp
int3
imul
adc
rorl
sti
test
mov
sub
push
fwait
jmp
cmpsl
popa
xorb
aam
test
fisubl
popf
cmp
sbb
dec
dec
sub
add
pop
cmp
movsl
iret
aaa
loopne
inc
push
repnz
or
mov
pop
mov
out
cmp
cmp
inc
cmp
pop
loop
shlb
pop
repnz
imul
mov
lret
mov
mov
fdivl
call
xlat
fmul
pop
mov
dec
mov
jl
add
and
sbb
xor
outsl
push
pop
sti
sub
clc
out
jecxz
push
fcomps
out
cmpsb
fld
mov
ret
insl
jmp
sub
xor
mov
inc
sub
pop
sbb
mov
add
dec
pushf
roll
sbb
and
cmp
lret
mov
pop
notb
int
inc
mov
shl
hlt
test
test
cmpsl
lock
icebp
in
xlat
ljmp
int3
mov
cmp
mov
out
mov
mov
sub
into
xchg
jns
ja
and
or
mov
xchg
in
dec
cmp
mov
cld
sub
aaa
xchg
sub
mov
sub
js
mov
sub
fdivrs
lods
stc
mov
mov
arpl
dec
cmc
jb
loopne
enter
fldenv
vshufps
lcall
mov
rcl
loope
and
es
jae
mov
scas
movl
mov
dec
cmpsl
cmp
xchg
mov
out
into
sub
cs
push
mov
scas
ja,pn
add
jne
add
xor
xor
loopne
in
mov
ja
adc
push
and
lock
nop
mov
pushf
inc
push
mov
cmpsl
addr16
mov
and
push
pop
pop
mov
cmc
or
inc
cli
mov
pop
fsubrs
and
and
test
mov
and
mov
in
clc
fistpll
jo
xchg
jmp
iret
cmp
sbb
ja
mov
push
inc
subl
stos
dec
pop
sahf
add
add
push
xchg
adc
sarl
es
les
cmp
insb
and
jmp
scas
inc
and
fcoml
push
mov
das
add
pop
out
stos
push
mov
pop
jbe
es
sbb
xchg
bound
clc
rclb
es
daa
or
sbb
adc
or
lods
lods
push
jno
mov
icebp
dec
pop
popf
xor
mov
pop
jmp
push
adc
fiaddl
pop
mov
fiaddl
sar
adc
cmp
xchg
xchg
addr16
pop
jns
out
je
and
sbb
and
or
dec
add
fistl
mov
cltd
xchg
fsubrs
pushf
repz
mov
ds
push
rorl
pop
int
int3
push
mov
shll
inc
inc
adc
inc
fildll
xor
js
mov
sbb
movsl
and
cmp
js
jb
mov
mov
ret
dec
dec
fcomps
mov
push
sub
mov
imul
jecxz
outsb
jg
out
mov
icebp
popa
dec
push
addr16
ds
mov
test
mov
jnp
lret
cmp
fadd
dec
sbb
frstor
and
in
jl
daa
sub
pop
inc
mov
in
xor
cmp
mov
test
xchg
adc
inc
std
xor
dec
lret
sub
inc
inc
sar
jecxz
adc
loopne
push
jmp
iret
jo
mov
and
jb
sarb
enter
push
pop
sbb
aad
push
in
mov
inc
mov
data16
repnz
lret
xchg
into
les
mov
ds
mov
insb
ljmp
pop
rclb
push
cmc
arpl
ret
in
cli
aaa
data16
xchg
ss
push
cld
iret
mov
jns
jl
push
add
adc
pop
out
mov
loopne
faddl
jno
lret
les
arpl
insb
in
and
fnstsw
sahf
ljmp
test
jecxz
mov
pop
push
push
inc
inc
sub
or
jnp
test
ret
cmp
out
jne
adc
cmp
jb
lret
pusha
cwtl
ret
les
jbe
inc
mov
pop
inc
in
idivl
push
cmovs
movsl
movsb
xor
pop
mov
jg
inc
out
jns
enter
cmpsl
sbb
or
adc
rcll
inc
fwait
jp
fsubs
mov
mov
hlt
mov
add
jge
cmp
fcomip
inc
mov
rcl
cmc
mov
mov
jns
adc
bound
mov
jae
mov
adc
sbb
ljmp
and
xchg
mov
das
lret
mov
xor
sub
insl
inc
pop
jge
outsb
outsb
test
and
dec
dec
les
insl
or
jb
adc
lahf
push
pop
repnz
adc
sbb
xor
ljmp
pop
pop
fnstenv
mov
and
sbb
mov
sbb
jp
push
cld
repz
xchg
dec
mov
push
icebp
inc
push
xchg
sahf
xor
out
dec
imul
dec
sub
mov
mov
or
mov
xor
mov
jae
sar
icebp
mov
test
dec
push
cmc
xor
mov
or
into
jb
test
adc
or
cmpsb
and
mov
aam
lds
and
inc
sub
lods
xchg
xchg
bound
xchg
bound
sub
icebp
and
xor
lret
rcl
test
mov
in
push
scas
mov
add
fcomps
ds
addr16
popa
call
out
mov
add
xor
fnstsw
inc
add
rcl
icebp
jge
test
movsb
cltd
sbb
lock
jo
ds
loopne
das
cmp
xor
out
sbb
aaa
lcall
loope
add
sbb
lds
sbb
xchg
cld
or
fs
dec
std
hlt
fidivl
test
jecxz
adcl
mul
jl
repnz
inc
mov
test
dec
test
cli
cmp
mov
sub
sub
fnsave
or
dec
sbb
ljmp
and
mov
cmpsl
jl
and
adc
adc
pusha
adc
sub
add
inc
sub
gs
or
rcrl
int
or
test
clc
pop
or
dec
xor
out
loopne
inc
cltd
mov
fldl
adc
xlat
out
jl
stc
hlt
nop
dec
mov
int
ss
xor
adc
mov
mull
movsl
pop
enter
mov
inc
and
pop
loop
pop
sbb
push
push
mov
or
subl
jns
es
cmp
jo
add
rolb
xchg
xchg
sub
sbb
mov
out
xchg
push
in
movsl
imul
scas
imul
or
pop
xchg
andb
jmp
nop
jl
adc
rclb
outsl
and
jle
cmp
ficompl
mov
lahf
push
push
adc
or
add
pop
loopne
js
loop
aaa
cmp
and
out
test
out
xchg
jmp
xor
jns
out
xlat
stos
movsl
addl
dec
arpl
test
ret
sub
mov
sbb
cmp
in
jl
mov
fidivs
add
jnp
addl
shll
push
call
push
sbb
fcmovnbe
mov
cmpb
jle
repz
bound
pushf
popa
inc
push
mov
sbb
rcrl
jmp
inc
out
lock
or
cmc
cmpl
xchg
ss
cmp
cli
and
int
sbb
dec
push
stos
dec
rolb
popf
cmp
xor
shlb
fisttpl
pop
jno
test
shlw
push
add
push
inc
xchg
pop
inc
inc
ss
data16
adc
dec
sbb
mov
dec
jnp
dec
scas
and
add
lahf
sbb
pop
in
push
in
sbb
nop
xor
inc
and
in
jne
pop
ficoms
pushf
sub
mov
daa
ret
lods
push
adc
in
cmpsb
aad
pop
fwait
mov
gs
rorb
push
mov
dec
daa
fwait
inc
aam
pop
jg
sarl
out
push
loop
jno
jne
mov
adc
fidivrl
cmc
xor
and
add
inc
jle
shr
scas
fcmovnb
sbb
jbe
sbb
movsl
cmpsl
inc
hlt
pusha
xor
ds
addr16
mov
and
sahf
in
pop
jo
scas
repz
sbb
or
jg
loopne
lret
mov
adc
mov
aam
cmpsb
pop
jb
add
push
cld
addr16
hlt
mov
outsl
incb
xchg
adc
mov
and
sub
jae
loopne
xor
call
bound
inc
xor
ss
clc
lds
cmpsl
inc
adc
xchg
fs
mov
pushf
mov
lret
sbb
movsl
mov
dec
xchg
cmp
xchg
dec
add
test
push
test
adc
aad
test
or
out
sahf
sbb
ds
push
sbbb
test
push
imul
popa
and
jl
jbe
or
mov
mov
push
pop
jmp
and
mov
shrb
mov
inc
push
dec
sti
lds
cmpsl
mov
repnz
stc
mov
dec
ret
nop
inc
adc
call
xchg
cmp
push
leave
ja
enter
jo
lods
mov
hlt
aam
scas
push
aam
cwtl
mov
lret
stc
or
adc
in
adc
or
add
pusha
cmpsl
mov
popf
cmp
sub
in
nop
xchg
out
scas
rcr
iret
jg
neg
gs
sbb
out
xchg
in
jmp
insl
iret
adc
bound
rcr
ret
fcoml
cwtl
rcll
pop
jo
add
test
lock
sbb
mov
dec
rcrb
repz
pop
gs
std
js
daa
jp
je
inc
pop
mov
push
mov
xchg
enter
dec
mov
cmp
lret
cs
test
lods
inc
xchg
ret
cmpsb
arpl
dec
leave
pop
sub
ja
mov
jmp
inc
rcr
ret
xchg
sub
dec
mov
or
pop
jle
shrb
jp
lods
or
popl
outsb
jp
sbb
mov
cmp
mov
sbb
sbb
test
jg
mov
and
mov
cmp
mov
leave
aam
fwait
ss
sbb
lret
mov
arpl
adc
mov
loop
cli
ja
mov
aad
loop
rorl
jo
aad
pop
pop
add
or
pop
inc
aaa
jno
stos
mov
pop
cwtl
add
push
je
dec
lahf
inc
jecxz
jnp
mov
sahf
iret
adc
insb
add
fdiv
cmp
push
push
lahf
stos
popa
fs
xlat
lods
cmpsb
inc
jg
clc
jecxz
cmp
sbbl
in
fwait
jge
neg
cmpsl
push
je
mov
add
repz
leave
inc
mov
push
sub
inc
xor
cltd
sbb
mov
ret
out
mov
xchg
aaa
jo
pop
aam
scas
add
data16
adc
pop
push
mov
cmp
jmp
js
cmp
jmp
dec
pop
jge
or
and
stos
mov
adc
push
fisttpll
jae
xor
dec
and
ret
or
inc
add
inc
xchg
jb
mov
cmpsb
jg
repnz
mov
jns
dec
nop
out
cmp
scas
bound
jo
and
sub
push
push
stc
cli
dec
xchg
lcall
xor
add
outsb
pop
add
shll
int
fdivs
addl
int3
pushf
jbe
int
aad
sub
lret
mov
jo
fwait
test
sbb
andl
fbld
inc
sarb
mov
mov
mov
daa
mov
test
cld
stc
xor
push
sub
jno
jnp
inc
mov
add
mov
mov
loope
fneni(8087
dec
lea
popl
or
and
cmp
jecxz
inc
cmc
mov
push
in
jns
and
pop
scas
mov
pop
loopne
fs
das
push
xor
jnp
out
xchg
xchg
mov
imul
dec
xchg
push
stc
mov
lahf
rorb
fs
lods
sbb
dec
adc
jo
add
jge
jmp
sbb
lods
shll
mov
sub
inc
outsb
jnp
dec
jge
add
jg
inc
push
fnstsw
mov
mov
sahf
xchg
imul
xchg
iret
adc
stos
xlat
mov
cmpsl
int3
push
sub
pusha
xor
or
lret
cltd
rcrb
fstpl
divb
or
dec
add
in
test
fldl
sub
mov
or
jle
ljmp
in
sbb
rclb
jne
xor
fcoms
mov
cmp
das
mov
pop
pop
stc
pop
rcr
iret
test
and
inc
rorl
cmpsl
or
sbb
lret
in
mov
dec
sbb
xlat
leavew
sub
andb
add
cmp
pop
popf
setl
cltd
mov
jl
fwait
popa
or
push
pop
loop
ret
movsb
jp
mov
daa
jnp
pop
xchg
por
push
mov
out
mov
lds
and
lret
mov
fdivrs
or
or
and
shl
lods
mov
js
pop
inc
pop
xor
xor
icebp
stos
or
aaa
jmp
mov
div
lds
mov
xor
sar
jmp
mov
mov
stos
adc
mov
lret
sti
mov
xchg
jb
mov
jae
inc
sub
mov
push
leave
rcr
in
call
imul
in
aas
xor
cmovge
jo
mov
mov
insb
adc
lds
test
fprem1
loope
mov
jge
add
xchg
cwtl
int3
or
pop
mov
mov
fsubs
gs
aad
aaa
mov
scas
push
movsb
jp
int
xor
xchg
and
scas
iret
sbb
clc
jnp
jns
mov
push
inc
jns
cwtl
imulb
cmp
shlb
in
mov
dec
adc
jge
sar
jnp
cld
mov
stc
push
icebp
pop
negl
pop
push
pop
push
jns
fsubr
adc
xor
xchg
xor
in
les
adc
stc
pop
data16
rclb
inc
shufps
pop
aas
inc
lret
call
out
jmp
jmp
xchg
mov
out
cbtw
xchg
in
xchg
imul
outsl
jae
push
mov
push
push
lods
adc
test
sbb
bound
out
adc
ja
jo
lret
sub
loop
outsb
popa
fs
aam
iret
lods
adc
out
mov
icebp
push
out
aaa
mov
jmp
jl
push
popa
inc
and
subl
or
mov
cmp
push
shlb
ljmp
testl
cmp
and
loopne
xlat
cld
or
mov
bnd
mov
dec
pop
dec
sahf
pop
lods
test
inc
adc
ret
sub
xchg
lods
std
cwtl
cmp
inc
out
ss
and
mov
jbe
push
lret
jae
dec
jl
inc
add
mov
cmc
jno
push
imul
lea
sahf
movsl
lahf
jo
or
mov
dec
push
push
aaa
adc
aas
pop
xor
leave
push
xchg
incb
add
aad
scas
pop
in
repnz
scas
xchg
movsb
mov
sahf
fdivl
mov
outsb
push
pop
inc
jns
xor
inc
xchg
jb
mov
cmpsb
mov
add
adc
ds
out
and
loopne
adc
test
fistpl
or
dec
int3
sahf
pop
insb
cmp
jg
mov
into
aam
js
in
xchg
mov
mov
lods
cwtl
addr16
xchg
popa
mov
fs
ret
mov
adc
push
sub
add
and
dec
xchg
jg
and
pushf
add
xchg
in
or
jnp
push
cmpsl
pop
mov
repz
stc
mov
pop
movsb
cmp
cmp
add
lea
lods
outsb
stos
rorl
pop
jne
mov
lea
or
or
shlb
mov
xor
fimuls
daa
adc
add
mov
adc
iret
xchg
lsl
or
mov
add
fisubl
int
addb
push
ja
mov
mov
lea
jmp
jae
dec
cld
push
jecxz
and
ffree
loopne
inc
aas
sub
loope
lahf
rcrb
sbb
or
cmp
xlat
push
jo
and
fsubl
int3
inc
sbb
test
int
dec
mov
ss
dec
cmp
push
sti
push
mov
mov
inc
cmp
fchs
xlat
subb
out
sarb
arpl
cld
xchg
dec
dec
jae
cltd
mov
cmpb
stc
xchg
mov
sbb
repz
loopne
into
nop
stc
mov
push
imul
add
aas
nop
mov
aas
stos
test
movsb
mov
scas
mov
add
ret
int3
pusha
rcrl
jno
icebp
test
xor
out
test
or
and
je
lock
sbb
lods
stc
or
sub
aam
inc
push
and
mov
sbb
pushf
pop
incl
xor
push
mul
das
jle
fidivl
das
mov
add
inc
push
daa
fwait
movsl
out
fdivrs
call
inc
mov
pushf
cmc
xor
hlt
add
js
das
xor
jecxz
mov
jmp
pop
rcl
push
pop
aas
popl
dec
into
and
out
mov
shll
sbb
stos
jge
jns
es
sub
cmp
pop
cmp
in
jbe
dec
js
loopne
push
add
add
fucomi
mov
and
cmp
sub
push
add
push
test
pop
sbb
inc
xchg
adc
xchg
cmp
xchg
mov
mov
cmp
adcb
jmp
out
shlb
gs
jg
fs
leave
push
pop
adc
fiaddl
pushf
js
mov
cltd
shll
lock
mov
lods
cld
xor
push
les
mov
cmp
in
jb
xchg
lahf
mov
pop
std
test
mov
or
push
enter
pop
aam
jmp
dec
repz
mov
loopne
jns
scas
out
xor
pop
out
mov
nopl
rcll
xchg
repnz
lcall
cmp
jnp
add
fidivl
leave
dec
insb
jge
mov
insl
jnp
pop
inc
lods
sub
inc
jle
pop
xor
mov
push
lods
mov
mov
mull
jg
hlt
inc
mov
cltd
imul
int
into
lock
lds
imul
popa
pop
jns
inc
mov
leave
push
cli
mov
out
js
les
fisubrl
scas
in
popf
and
scas
sahf
sub
push
xchg
adc
aad
shrl
shrl
and
sbb
js
mov
mov
out
jo
cmp
jnp
or
hlt
aad
int3
dec
mov
call
iret
leave
rorl
dec
xchg
lock
xor
fucomi
sbb
cs
iret
addb
xorl
fidivl
mov
lahf
lods
and
add
dec
mov
mov
in
mov
mov
arpl
arpl
mov
mov
hlt
push
fldcw
jl
sbb
jmp
hlt
push
adc
leave
inc
add
xchg
fucomp
jnp
ret
orl
mov
cwtl
cmpsb
inc
xchg
mov
lret
and
int3
cmp
xor
pop
mov
fldenv
mov
mov
lds
js
ss
dec
addr16
cs
adc
pop
nop
outsb
xor
adc
or
movsb
mov
lcall
push
in
sub
sub
leave
inc
lds
cmc
pushf
or
push
xor
jb
push
pop
push
xor
or
jns
arpl
xchg
pusha
fildll
sub
fs
add
popf
xchg
std
fnstcw
pop
in
push
ret
mov
add
ficoml
cwtl
repnz
sub
subb
adc
jp
das
and
xlat
pop
jl
dec
rclb
icebp
out
jbe
cmp
clc
mov
lea
pop
or
in
fadds
or
popl
or
loop
adc
push
fucomip
icebp
jecxz
int3
xor
sub
xchg
and
dec
scas
push
dec
jae
add
mov
dec
jo
fst
pop
push
pop
mov
mov
inc
push
jp
enter
xchg
sahf
imul
push
pop
loopne
sbbl
xchg
mov
xor
cli
push
fidivl
mov
or
cmpsl
sbb
xor
cs
mov
inc
and
mov
push
fmul
movsb
pop
sbb
pop
jbe
inc
jmp
mov
clc
lock
shll
call
lods
mov
cmp
out
lcall
icebp
dec
push
ret
adc
adc
imul
aad
push
fbstp
jmp
sahf
lods
es
out
fs
jo
jg
sub
out
push
push
and
cld
sub
xchg
movsb
and
jne
mov
inc
test
cwtl
leave
xchg
pop
push
dec
je
jnp
mov
and
lret
sahf
pop
out
stc
in
sub
mov
mov
test
cs
xchg
ljmp
pushf
ret
mov
mov
insb
sub
int
es
mov
popf
fcompp
fwait
ss
fisubl
mov
iret
js
sub
lcall
rclb
and
xlat
insb
mov
mov
and
mov
cmp
lods
lahf
movsl
repz
mov
sub
pop
insb
sub
jno
adc
sub
xchg
outsl
movl
and
xor
daa
push
xchg
inc
fistl
cmpsb
ret
cld
mov
or
fsubs
inc
and
lock
ss
cltd
cmp
adc
fwait
jae
add
push
sbb
pop
clc
sbb
pushf
ret
ds
imul
shr
fstl
xlat
jmp
xchg
pop
sbb
sbb
notl
imul
jnp,pn
mov
call
dec
aam
or
cmpsl
pop
and
ret
into
fwait
jno
shll
sbb
ja
subl
pop
jecxz
mov
mov
push
push
push
sbbb
xchg
cltd
pop
and
push
ljmp
lea
nop
mov
mov
xchg
inc
imul
pop
iret
push
aad
inc
xchg
aaa
jl
in
jnp
repnz
xor
sub
orb
ret
push
adc
add
enter
sbb
dec
adc
cmpsl
add
leave
movsb
ljmp
and
test
sahf
sbb
xchg
sub
movsl
shlb
mov
mov
das
dec
insl
inc
pop
mov
sbb
movsb
and
ss
dec
fwait
jo
sub
pushf
test
cmp
cli
cmc
gs
cmp
popf
lods
xchg
mov
in
jge
fcompl
pop
or
gs
push
inc
dec
sbb
pop
nop
mov
mov
adcb
cli
jp
push
xor
pop
loop
pop
mov
jne
aad
fnsave
test
or
xor
dec
adc
adc
mov
push
dec
dec
loop
inc
sub
loop
call
or
movsl
mov
outsb
adc
insl
out
sbb
imul
dec
jbe
movsb
cwtl
bnd
sub
std
jecxz
and
popa
xchg
out
mov
cli
rolb
int
fdiv
inc
sbb
dec
and
dec
mov
jns
pop
icebp
imul
pop
and
das
jno
xchg
jo
or
rclb
sub
fisubrl
leave
xchg
sbb
ds
jnp
shll
jno
xchg
int3
cmp
xchg
nop
rcrb
pop
insl
repnz
push
jno
xchg
fisttpll
xchg
mov
popa
aas
repz
popa
unpcklps
jle
hlt
outsb
push
js
mov
inc
out
mov
fstps
int3
xchg
repz
lret
mov
cmp
mov
test
inc
ret
add
insl
addr16
mov
jg
and
sub
cli
pop
cld
loopne
js
lods
mov
cmc
fsubs
rcll
lret
push
loopne
lods
mov
in
jns
icebp
js
jne
push
mov
push
push
invd
xor
or
xchg
mov
pop
inc
fidivl
fdivrl
stos
into
shr
pop
insl
jle
fwait
ret
jno
and
cltd
out
xor
xchg
push
push
cmp
jbe
enter
jno
fnstcw
test
jb
nop
mov
cs
pop
dec
lds
scas
mov
jg
mov
xor
dec
jmp
ja
push
test
push
clc
xorb
jb
es
xchg
jnp
mov
mov
test
adc
dec
mov
es
stos
mov
mov
fs
insl
mov
adc
lods
adc
sub
cmp
push
inc
test
or
test
roll
or
lret
xor
sbb
in
repz
ss
sbb
test
fs
xchg
fists
add
pop
xor
mov
ja
std
dec
fsubrl
icebp
rclb
mov
or
cli
and
dec
xchg
loope
mov
pop
mov
push
loop
mov
xor
inc
inc
movsb
pop
sbb
call
js
ja
in
in
cmpsl
std
inc
insb
and
das
shlb
or
add
dec
cmp
inc
mov
pop
out
ds
push
dec
add
or
cmp
pushf
es
mov
leave
xchg
lea
inc
test
ss
add
pop
sub
or
div
pushf
jecxz
sbb
orb
xchg
mov
cmp
jmp
repnz
mov
dec
add
pusha
mov
mov
scas
lods
data16
sbb
lret
out
cs
call
mov
daa
out
popw
xor
out
gs
int3
and
arpl
pop
jns
mov
sub
arpl
bound
mov
popf
dec
clc
mov
mov
inc
cli
pop
add
jnp
sub
push
imul
fimull
adc
std
popf
fdivs
xor
arpl
sub
xorb
jnp
sub
mov
aam
stos
insl
fcomps
ds
push
data16
test
outsl
jl
popf
mov
push
int3
in
ds
mov
aas
mov
call
or
aam
inc
mov
or
es
ret
fwait
xchg
jp
lcall
cld
and
sub
adc
jo
jno
call
jecxz
push
pop
xor
add
icebp
sub
dec
mov
jge
es
not
jnp
sbb
mov
push
ret
inc
repz
or
mov
mov
lahf
adc
fstl
vpunpckhbw
in
dec
ss
ja
xchg
mov
mov
cli
add
loopne
dec
lods
mov
lret
mov
cld
arpl
jne
jmp
cld
sub
push
hlt
mov
nop
jg
in
mov
dec
loopne
cmc
clc
or
lds
leave
les
push
cmpsb
outsl
leave
dec
gs
sub
adc
cmp
dec
pop
xchg
aam
mov
dec
cmp
loope
mov
xchg
cmp
or
inc
sub
cmpsl
jns
mov
ljmp
xchg
xchg
imul
insl
dec
js
or
mov
cmpsl
pop
fwait
ljmp
js
sub
pop
mov
out
out
mov
aam
pop
xor
xchg
push
jmp
cmc
adc
rclb
notb
adc
in
bound
pop
mov
rolb
stos
sahf
lods
mov
fldenv
dec
jmp
adc
lds
fsubl
pop
xlat
loopne
and
push
sub
loopne
jno
stc
push
xchg
aaa
imul
call
imulb
arpl
mov
jge
cmp
xor
pusha
cli
lcall
jns
pop
push
mov
mov
hlt
sti
xor
cmp
push
push
lea
push
pop
xor
cmc
enter
lds
popa
lock
leave
mov
sbb
fbld
jge
sbb
inc
xchg
inc
inc
addb
stc
lock
lcall
pmaxub
scas
out
or
pop
cmp
sub
or
push
inc
push
add
notrack
addr16
sahf
cmp
das
push
xor
test
xchg
int
add
jp
gs
sti
inc
add
gs
ljmp
aad
btr
pop
lods
cld
mov
sbb
sahf
insl
add
clc
add
dec
mov
mov
mov
leave
or
clc
leave
mov
in
sub
add
inc
fdivr
cmp
mov
das
cwtl
aas
fstpl
jne
scas
push
pusha
sbb
cmp
mov
data16
adc
sub
test
out
dec
xchg
push
arpl
cmp
jne
addr16
mov
mov
mov
cmpl
stc
sub
xchg
inc
in
stos
xchg
lret
rcr
jo
int
imul
out
mov
das
xchg
loop
cmpsl
sarl
push
add
bound
mov
jle
hlt
mov
mov
cmp
inc
jnp
pop
leave
push
push
scas
xor
jnp
pop
push
mov
push
jns
cmp
mov
int
dec
push
shlb
shll
test
push
adc
ljmp
adc
filds
cmpb
cli
into
add
in
aam
or
xchg
cmc
or
fldt
dec
or
push
xchg
les
shll
dec
lahf
mov
fildl
jns
cld
adc
out
hlt
sti
xchg
addb
cltd
mov
xor
lods
insl
daa
nop
push
push
inc
clc
inc
insl
sbb
inc
inc
jno
push
test
scas
jge
jl
dec
aas
push
mov
hlt
xor
push
gs
pop
jo
pushl
scas
and
or
into
jl
and
in
jmp
xchg
dec
out
add
or
call
ds
adc
int
pop
insl
mov
mov
xorb
inc
das
mov
jl
adc
xor
out
fcomps
loopne
pushf
das
and
fiadds
nop
xchg
adc
loop
cmp
rclb
out
out
mov
mov
cmp
lcall
out
jl
orl
sahf
dec
mov
jecxz
movl
inc
mov
add
icebp
push
addr16
repnz
sub
or
adc
clc
pop
daa
pop
mov
dec
dec
inc
dec
lds
sub
mov
sti
mov
jb
push
in
cmpsb
in
add
mov
shr
mov
adc
pop
stos
mov
fisubs
cwtl
stc
pop
hlt
ret
fstl
cmpsb
sbb
inc
stc
or
jo
adc
je
aaa
xor
iret
sub
pop
pop
sbb
lahf
dec
sbb
pop
mov
jmp
and
insl
jmp
mov
dec
dec
xor
mov
stos
out
shlb
ret
add
push
jecxz
mov
push
lods
clc
call
jmp
jo
pop
xor
mov
gs
cmpsb
icebp
rorb
xor
cli
mov
stos
insb
sbb
out
in
decb
dec
aad
ret
jae
pop
xchg
les
mov
xor
insb
aas
jge
loopne
ret
push
push
cmpsb
gs
xlat
mov
in
out
or
pop
ds
add
inc
push
adcl
ja
test
pop
fcoms
mov
cld
inc
sub
mov
mov
icebp
inc
xchg
cld
sbb
inc
xchg
fiaddl
into
pop
mov
insb
dec
lahf
jo
jg
cmp
out
push
ljmp
cltd
cmp
addr16
fidivrl
sti
and
leave
je
jne
cli
xchg
cmpsl
pushf
or
int3
icebp
add
aad
add
int
sbb
out
push
clc
outsb
sti
sbb
adc
and
add
mov
inc
and
inc
jg
add
adc
imul
testl
add
fsubs
mov
std
repz
xchg
dec
jns
pop
cmp
bound
mov
inc
pminsw
push
xor
daa
and
stc
sbb
sub
repnz
outsl
sbb
lea
lahf
cmovnp
xchg
pop
aam
rcrb
push
cld
in
test
enter
ficoml
in
sub
scas
mov
cmp
gs
sbb
add
shll
out
movsl
inc
push
pushf
cmp
pop
mov
aaa
mov
je
mov
imul
cmp
pop
mov
jo
fwait
loop
xchg
xchg
lahf
mov
aam
cs
in
inc
push
and
adc
nop
jmp
ret
fdivl
adc
cld
arpl
inc
mov
xchg
imul
xor
je
iret
inc
jo
jne
push
bound
dec
ja
pop
repnz
xor
and
sti
shll
jmp
mov
adc
mov
cmc
lds
pop
mov
xchg
sti
addr16
fs
movsl
test
adc
hlt
mov
stc
xor
sbb
dec
into
scas
inc
xchg
cld
pop
movsl
xor
leave
les
or
adc
inc
xchg
jmp
fildl
dec
add
stos
mov
push
dec
adc
adc
adc
xorb
std
mov
adc
cmp
adc
xor
out
xchg
out
push
cmp
lods
xor
dec
xor
dec
adcl
cltd
adc
bound
adc
add
sti
fcmovu
jg
and
dec
lods
das
fidivrs
ficompl
scas
jg
int
jg
push
cmpsb
vmread
ljmp
cld
arpl
call
js
push
add
andb
pop
mov
repnz
pop
mov
mov
lret
into
rcll
out
add
pop
shrb
jo
mov
cli
repz
adc
mov
dec
popf
add
lea
cmp
call
jp
xchg
push
inc
xor
int
idivl
xor
gs
loop
xchg
loop
mov
pop
test
outsw
hlt
stc
lds
out
lock
jb
dec
stos
mov
mul
inc
xlat
pminub
arpl
adc
pop
push
arpl
adc
enter
stc
leave
and
and
xor
inc
ret
jg
enter
pushf
xor
pop
pop
add
sub
movsb
sub
mov
cwtl
shll
imul
mov
mov
leave
cltd
gs
rorl
ret
dec
idivb
xchg
push
pop
mov
dec
pop
sarl
shlb
lods
dec
sub
repnz
add
add
jge
lret
adc
xor
adc
pusha
gs
insl
inc
pop
aam
mov
cs
adc
sub
outsl
sbb
lret
aaa
push
push
dec
push
inc
mov
xor
mov
insl
popa
cwtl
es
pop
les
pushf
fisubrl
lock
and
jg
dec
push
mov
xchg
lods
stos
mov
push
insl
dec
push
xor
push
mov
sahf
and
lret
add
jb
push
xchg
scas
cwtl
mov
xchg
push
and
mov
loop
sub
push
nop
and
or
jns
push
inc
add
jb
ret
mov
lea
mov
insb
and
inc
jp
scas
das
pop
mov
cmp
aaa
pop
mov
cmc
sub
fidivs
push
mov
fdivs
and
push
je
add
xchg
inc
dec
ret
dec
xchg
jle
jnp
pop
loopne
xchg
jns
or
jo
test
pop
xor
xchg
xchg
mov
jo
hlt
sub
sbb
sub
in
out
ja
mov
sub
sbb
mov
add
sub
push
iret
push
insb
or
sbb
add
cld
arpl
pushf
test
movsl
dec
inc
prefetch
add
or
loop
into
mull
icebp
pop
sbb
push
pop
jg
jmp
nop
nop
fwait
test
je
js
idivl
ljmp
andl
xor
xchg
push
pop
dec
dec
fstps
popf
push
out
cmp
int
ret
pop
push
xchg
pop
ret
mov
pop
pop
insl
cmp
push
shrl
lcall
addr16
adc
notb
sti
xlat
xor
push
lret
insb
sub
fidivl
lds
je
imul
scas
and
out
cmp
les
push
or
in
out
cmc
jb
and
push
inc
mov
or
add
add
jg
cmp
xor
lcall
leave
cmc
push
and
push
push
xor
add
ret
cmp
xchg
rclb
repnz
out
pop
cld
iret
fisubrs
pop
push
scas
cmp
xor
icebp
cli
test
decl
lret
xor
and
pop
pop
dec
adc
jnp
outsb
mov
cmpsb
or
out
inc
mov
ljmp
std
sub
aas
mov
je
js
pop
sub
push
cmc
fcmovnbe
mov
cmp
mov
inc
repnz
jnp
stos
jne
call
in
cld
pop
enter
out
repnz
in
mov
adc
aaa
fisttpl
sbb
rorl
add
inc
xlat
jecxz
lcall
cmc
mov
outsb
fildll
or
ljmp
iret
std
hlt
call
data16
cmp
aaa
mov
pop
dec
movsl
fbld
popf
mov
adc
sahf
cld
lods
daa
add
rorb
call
cmp
aaa
lods
push
inc
sub
push
shlb
cmc
jno
inc
push
popa
push
scas
icebp
adc
addb
ja
mov
mov
and
push
inc
leave
jmp
pop
push
mov
lds
sub
jmp
xchg
popa
ds
sti
in
cmp
adc
aad
arpl
daa
fwait
jmp
sbb
xor
shl
and
add
dec
lret
pusha
sbb
dec
je
sub
lds
pop
pop
sub
push
sti
lods
movsl
cmp
add
test
mov
pop
push
xor
mov
ret
push
cmp
jp
repz
and
fisubrs
adc
in
ljmp
in
sbb
leave
out
cmp
sbb
and
sub
lods
scas
out
sub
mov
daa
xchg
in
jge
les
inc
add
fidivl
aad
fidivl
dec
sbb
push
jecxz
xchg
in
cwtl
cwtl
fdivr
pop
ret
sub
xchg
inc
sti
xor
xchg
enter
cwtl
sbb
push
fildll
jbe
shlb
mov
push
outsl
adcb
mov
push
dec
pop
and
adc
negl
test
cmp
add
movzwl
sbb
sti
mov
xor
jo
adc
mov
ret
jl
imul
andb
or
testl
leave
inc
push
sti
repnz
add
dec
jb
out
or
sub
mov
mov
icebp
pop
dec
mull
stos
int
xor
and
addr16
mov
jne
pop
fimuls
push
gs
push
mov
adc
das
in
das
repnz
cld
add
fstpt
stos
pop
fwait
aaa
lahf
jnp
pop
xchg
sbb
das
mov
cmp
in
adc
ja
lods
dec
lret
call
stc
dec
jecxz
fadd
ljmp
xor
push
mov
arpl
ljmp
rorl
mov
push
mov
mov
inc
adc
jae
arpl
gs
loop
out
xor
jno
xchg
pusha
mov
leave
push
cmp
mov
lods
faddl
jge
mov
fmul
popf
sub
push
imul
or
cmp
lret
push
or
lods
hlt
int
loop
pusha
mov
imul
lods
or
popa
iret
mov
dec
xchg
sbb
jns
cs
sub
pop
stos
xchg
jne
or
stc
cmpsb
je
and
out
inc
sub
mov
pop
call
dec
jnp
repnz
xchg
out
cmp
mov
push
dec
lods
cmp
lods
int3
xor
inc
pop
adc
loope
push
pusha
add
shlb
mov
cmpsl
cmp
pusha
push
or
and
shrl
outsb
imul
shlb
dec
ljmp
or
add
jmp
jecxz
mov
mov
pop
push
bnd
arpl
lock
and
xor
inc
jnp
fwait
mov
lcall
adc
cs
test
outsl
mov
push
rolb
add
adc
int
mov
mov
and
out
popf
and
mov
xor
leave
xchg
dec
stc
fnstcw
mov
mov
push
in
mov
sti
adc
cmp
fmull
dec
out
pop
insb
stos
fsub
sahf
xchg
clc
add
sub
movsb
pop
dec
inc
dec
mov
and
sti
ss
sbb
pop
incl
loopne
xor
cltd
pop
and
cltd
or
out
sbb
out
mov
mov
or
mov
xor
subl
xchg
or
std
pop
outsb
aaa
cwtl
cmp
lods
arpl
bound
xor
adc
cmp
lret
add
ds
inc
or
loopne
das
es
mov
loopne
and
mov
int
cmp
xchg
cltd
xor
and
testl
test
popf
or
lret
rcrl
outsl
pop
scas
in
sub
adc
cmp
sbb
fstl
xor
jne
scas
fdivl
lahf
loopne
jbe
dec
xchg
jae
sbb
outsl
mov
movsl
sub
sub
pop
stos
push
ret
sti
int
out
jmp
scas
adc
std
int
insb
les
pop
sbb
jbe
pop
sub
add
and
adc
shrl
push
mov
aam
gs
lock
xchg
pop
push
adc
imul
inc
loope
ja
dec
in
xor
jp
ficoml
push
jnp
pop
cmpsl
jbe
dec
int
mov
mov
sub
rcrl
mov
orl
iret
aaa
stos
sub
mov
in
mov
call
sbb
lea
xor
aad
rcl
movsb
push
test
sub
mov
psubb
fildl
sub
pop
imul
and
xchg
shll
scas
testl
pop
mov
cwtl
mov
pop
orb
jp
add
pop
lret
repz
cmp
stos
fistpll
and
sub
adc
cmpsb
hlt
push
jns
nop
sub
mov
mov
imul
mov
mov
sbb
xchg
or
jg
stos
leave
outsb
and
mov
mov
outsb
xor
cld
jns
or
mov
into
jnp
push
push
int
ds
ret
push
xor
stos
xor
movsl
lock
frstor
mov
aas
outsb
dec
ret
lods
pop
adc
sahf
es
sti
mov
pusha
xchg
jp
xchg
int3
add
and
outsl
fwait
lcall
fcom
jae
out
cmpsl
inc
pop
scas
add
inc
mov
or
cmp
add
mov
add
mov
mov
sbb
xor
lods
clc
or
into
loopne
adc
jl
push
ljmpw
scas
xchg
sub
inc
das
mov
mov
inc
mov
cmpsl
cwtl
out
lret
ret
orl
test
js
xchg
inc
incb
xor
inc
mov
popf
aam
clc
sbb
dec
push
cwtl
dec
xchg
mov
jbe
xchg
mov
sbb
push
add
xor
int
add
push
mov
std
inc
sub
arpl
dec
subl
fiadds
enter
mov
mov
cmp
lret
cmpsl
test
adc
in
or
pusha
or
sub
lea
iret
adcl
loopne
cmp
scas
mov
stos
dec
leave
dec
aaa
cs
cmp
aad
sub
dec
cmpsl
adc
push
pop
fdivs
add
lahf
mov
sahf
aam
jns
and
enter
test
stc
inc
cmc
mov
mov
je
cmp
mov
sbb
xor
push
xchg
cmc
mov
rorb
loop
pop
insl
pop
cmp
cmc
in
jb
cmp
into
or
std
pop
jg
or
lods
shl
call
pushf
mov
test
or
push
jecxz
or
add
int
push
jmp
cmpsb
cmp
mov
mov
pop
sbb
daa
cltd
mov
or
sarb
cmc
pop
fwait
outsl
mov
mov
int3
mov
pop
inc
movsb
sub
mov
dec
add
js
stc
fcom
lods
insb
mov
mov
in
inc
stc
sub
or
cmovs
scas
cwtl
hlt
dec
cmp
mov
or
lods
lock
sti
sbb
or
push
pop
mov
dec
orb
iret
aas
adc
std
jmp
inc
lock
imul
roll
push
mov
jp
lahf
lahf
pop
inc
pushf
cli
push
decb
addl
fstl
test
rol
ljmp
push
cmp
sub
lock
test
jecxz
or
stc
aam
xchg
adc
repnz
add
popa
jp
push
fisubrl
pop
add
sub
adc
insb
push
adc
and
test
or
scas
icebp
push
pop
adc
or
inc
dec
push
cmp
push
fwait
pop
movsb
ret
lcall
jecxz
adc
cmp
xchg
aad
fwait
neg
mov
enter
pop
pop
jo
mov
jmp
call
sbb
jne
repz
test
inc
mov
xor
push
adc
pop
sbb
pop
sub
mov
mov
shl
adc
push
sbb
adc
sahf
sub
clc
jbe
mov
cmc
dec
xchg
repz
rorl
mov
dec
jg
sub
push
inc
pop
adc
jno
clc
mov
dec
roll
mov
or
lret
stos
pop
push
dec
cmp
cmp
inc
jae
pop
mov
cltd
mov
in
lret
arpl
add
test
fcompl
repnz
sti
mov
test
xchg
pop
inc
out
jecxz
pop
icebp
popa
or
sub
mov
shrb
in
dec
jecxz
mov
fnstsw
jbe
lcall
push
orl
pop
loope
push
test
ret
xor
sub
cs
repz
mov
adc
fs
out
cmp
shlb
in
jbe
mov
and
fsub
fwait
cmp
mov
mov
fwait
movl
adc
fstpt
xor
xchg
fimuls
mov
dec
test
test
cld
cmpsl
mov
dec
bound
stos
mov
xor
mov
mov
push
arpl
mov
push
mov
addb
shrl
popa
fmuls
adc
imul
xchg
sahf
loopne
mov
cmp
test
ss
rcr
loop
scas
arpl
fstl
fs
add
lods
loopne
or
into
fld
mov
pop
sub
add
pusha
mov
call
jae
mov
fisubrs
xchg
or
shrl
mov
test
xor
push
push
into
jmp
ss
jbe
adc
mov
fisttpl
aaa
fcompl
or
mov
cmp
dec
dec
test
sbb
ss
shl
movb
sti
cmc
arpl
repz
sbb
dec
xor
lahf
push
push
xchg
xchg
fucomip
in
adc
iret
inc
and
mov
leave
sbb
in
dec
xor
mov
or
lods
lock
lea
pusha
ljmp
pop
push
push
adc
js
arpl
sbbl
mov
lods
nop
jbe
mov
jbe
mov
arpl
movsb
lds
adc
push
icebp
xchg
std
pop
pop
adc
jne
sbbl
stc
scas
sub
into
pop
sbb
das
xchg
cmp
dec
gs
insb
adc
add
outsb
loopne
je
mov
pop
bound
psubb
das
notb
jecxz
xchg
or
push
lahf
aad
cmp
mov
xchg
lea
lahf
and
jecxz
fnstenv
and
or
dec
adc
add
push
fidivrl
int
int
int
fs
xor
arpl
pop
cwtl
pop
std
jo
sbb
push
popa
jmp
jg
pop
jle
mov
add
dec
mov
aas
ja
popf
jmp
jne
fisttpll
jne
xchg
mov
sbb
arpl
das
add
cmp
fwait
incl
and
pop
push
fists
jo
sbb
jns
pop
dec
les
dec
pushf
lcall
out
int3
rcll
xorb
cmp
pop
mov
test
jae
pushf
jmp
ja
xchg
int
fxch
adc
push
dec
fiaddl
fnstcw
roll
jo
out
xchg
pop
dec
and
push
xchg
shlb
jnp
lods
add
mov
mov
sub
xchg
lahf
inc
pop
and
push
ret
andl
into
add
out
rclb
insl
pop
push
test
jmp
mov
jno
xor
imul
xor
mov
mov
lret
adc
inc
popa
insl
insl
mov
lock
stc
repz
add
jne
cwtl
ja
xchg
and
cmp
add
dec
or
popf
je
jnp
mulb
sbb
test
inc
popa
cmp
bound
dec
sub
int3
adc
mov
inc
fstl
push
mov
in
sbb
xorl
sub
jmp
jg
mov
addb
stos
std
test
cmp
sti
jo
test
inc
mov
sbb
xchg
repz
sbbb
sub
dec
xor
xchg
inc
call
jecxz
imul
xchg
test
insb
mov
adc
stos
jno
jp
rorb
and
cs
adc
xor
shll
push
inc
std
iret
sub
enter
lods
or
repz
inc
lock
mov
jno
int
mov
dec
xchg
clc
mov
cmpsb
push
arpl
add
push
or
lret
add
dec
inc
sbb
inc
loop
jg
jge
cmp
cmc
sti
xor
jge
or
push
xor
das
hlt
xchg
or
adc
or
inc
int3
sub
ss
xchg
mov
outsb
push
jns
in
pop
push
cmp
mov
stos
std
int3
je
out
lea
sub
dec
daa
push
push
push
mov
jecxz
loope
jle
loopne
lods
movb
pop
dec
cwtl
fstl
imul
add
les
xor
fdivl
popa
sahf
aas
bound
adc
mov
iret
xlat
mov
lds
jnp
cmp
daa
lret
push
mov
imul
xchg
sti
movsbl
sbb
push
add
add
leave
ds
mov
mov
sbb
mov
in
sbb
sub
mov
pop
sub
cmp
mov
xchg
dec
fdivrp
ja
cli
adc
mov
aad
lock
outsl
ds
xchg
aaa
mov
rclb
push
xor
ret
shrb
arpl
icebp
mov
decb
int
jo
pop
and
jecxz
cmpsb
dec
pop
sub
inc
sub
xchg
shrl
cmp
lar
push
in
rclb
add
or
leave
mov
aas
xor
sub
ja
insl
adc
aaa
pop
leave
imul
lahf
stos
inc
les
mov
adc
cmc
xor
mov
icebp
cld
pop
and
mov
jne,pn
jno
jne
ja
push
test
or
cmp
insl
cmp
insb
rorb
hlt
insb
push
fildll
mov
pop
popa
notb
xchg
jle
inc
hlt
loop
sarl
popa
cli
jnp
outsl
push
push
cmp
ja
aam
jb
repnz
push
and
pop
xor
ljmp
jbe
lods
fcompl
and
cmp
gs
pop
out
cltd
mov
xor
mov
sub
sti
jo
push
adc
sahf
adc
insb
and
jmp
xor
rorb
mov
dec
xchg
and
incb
mov
xchg
inc
mov
icebp
dec
cmp
scas
mov
repz
and
clc
adc
inc
call
mov
jle
xchg
ret
sbb
scas
jle
xchg
xchg
inc
and
sub
push
mov
mov
xor
in
cmp
cmp
dec
loopne
shlb
pop
push
pop
outsl
sbb
fwait
cmp
pushf
sbb
test
push
test
popf
ret
xchg
push
lcall
push
fsubl
xchg
inc
data16
dec
and
pop
xlat
outsb
mov
orl
jmp
cmp
push
fcom
cli
add
adc
pop
repz
add
mov
aaa
lcall
test
inc
inc
in
scas
jae
shll
sbb
sub
jle
movl
outsl
shrb
inc
sub
mov
jmp
mov
sbb
jae
cmp
cltd
cmp
cwtl
test
mov
das
push
mov
xchg
lock
adc
std
inc
xor
mov
icebp
out
loop
in
rcll
push
nop
mov
push
into
pop
out
sbb
icebp
push
mov
inc
mov
pop
lcall
adc
mov
int
cmpsb
lahf
push
mov
iret
ret
inc
inc
push
popf
jnp
cmp
imul
pop
xchg
and
test
or
xchg
mov
lret
mov
lds
sub
or
cltd
call
sub
mov
mov
cmp
or
sbb
pusha
fmull
cmp
xor
xor
fcmovu
test
pop
mov
aas
mov
xchg
jge
sti
jne
pop
movsl
loop
icebp
movsb
pop
mov
mov
adc
loope
xchg
pop
stc
fiaddl
and
mov
cltd
ficoml
dec
inc
push
ja
leave
mov
out
aas
dec
clc
and
inc
or
cmpsb
inc
mov
rcr
sahf
push
add
cmp
pop
lods
stc
pop
mov
mov
push
cmp
xor
xor
xchg
xchg
in
fsubrs
inc
jge
les
add
pop
les
jl
scas
outsb
sbb
cli
call
pop
cmpsb
dec
sub
ss
mov
add
xchg
cmc
out
mov
cmpsl
add
jg
jmp
lea
inc
add
ret
cli
fstpt
out
inc
insl
push
mov
mov
lea
insb
pop
xor
fldcw
loop
popa
jnp
mov
sbb
push
lret
fdivl
lret
or
mov
fdivr
sub
addr16
nop
popf
ret
jnp
lea
and
ret
lods
rorb
dec
add
les
mov
insb
push
mov
push
sbb
mov
stos
pop
int
pop
sbb
cmp
divb
adc
and
out
lods
insl
xchg
repz
dec
mov
jne
insl
and
call
in
out
xchg
insl
dec
imull
fs
sahf
pop
mov
pop
fcoml
leave
lret
rolb
and
insb
jle
bound
mov
and
cli
push
mov
pusha
into
xchg
in
loope
in
or
lds
in
repz
aam
jno
mov
inc
and
xchg
std
jmp
mov
jns
cltd
js
push
and
and
push
push
pop
outsl
out
out
fidivrs
jge
and
stc
addr16
bound
jns
daa
stos
pushl
lea
sbb
data16
arpl
movsb
stos
add
adc
jle
and
inc
and
insl
push
add
sbb
mov
mov
inc
dec
pop
data16
loop
es
jg
sub
xchg
add
mov
cs
xchg
lcall
sub
dec
and
shll
lods
repz
nop
mov
jb
mov
sub
lea
mov
scas
sub
dec
or
xor
adc
inc
mov
mov
or
cs
mov
enter
xchg
xchg
xchg
dec
mov
or
imul
dec
fwait
push
imul
out
jns
and
inc
pop
mov
push
fdivrs
in
fstl
push
popf
ljmp
dec
add
imul
ljmp
movsl
sarb
into
fsubrl
pop
dec
scas
and
or
mov
mov
and
js
mov
inc
loope
in
mov
jp
fistpl
nop
daa
inc
inc
dec
mov
mov
mov
mov
push
ja
ror
fisubrs
lret
pop
stos
flds
add
xchg
lret
ret
cmp
jo
movsb
mov
ljmp
fistpll
shll
lods
fwait
cmp
adc
cmpsl
mov
xchg
mov
jecxz
in
push
mov
je
sub
mov
or
mov
js
mov
fyl2x
stos
push
cld
int3
ror
bound
adc
sub
jnp
add
fcmove
adc
and
fdivr
xchg
les
lret
mov
cmc
ret
push
mov
popa
mov
or
mov
adc
push
or
fistps
and
in
lahf
jb
push
gs
cmp
movsl
mov
pop
inc
rcr
push
stos
jbe
mov
pop
shrl
stos
and
add
sarl
lret
xchg
add
sub
mov
mov
fisttpll
sti
adc
and
adc
lods
aad
imul
mov
mov
cmpsb
je
in
aad
adc
xchg
iret
xchg
inc
ljmp
cmp
jge
cltd
loopne
sahf
dec
gs
cs
icebp
fmull
clc
lret
mov
and
add
sbb
mov
or
lahf
add
jno
call
adc
mov
lock
adc
shrb
mov
stos
fdiv
cltd
jbe
jae
pop
test
pop
jnp
push
xor
imul
push
push
or
xchg
push
je
les
aam
inc
xchg
jmp
push
sbb
dec
and
clc
xor
fcmove
jg
sub
pop
mov
das
add
stos
popf
inc
out
test
xor
push
cmp
mov
pop
mov
movsb
adc
ds
aam
dec
dec
jo
negb
xor
inc
sbb
cltd
insl
clc
jl
je
cwtl
sti
push
xchg
inc
stc
shlb
out
dec
sub
or
pop
mov
cs
lds
cld
out
inc
or
or
loopne
jb
in
xor
fisubrl
push
xchg
pop
adc
sbb
mov
mov
int3
sub
xor
dec
repnz
insl
mov
and
mov
stos
adc
xchg
sub
leave
nop
int
movsl
pop
int3
fcoms
and
jmp
jno
push
test
xchg
daa
lds
mov
pop
cmp
xchg
stc
outsb
les
push
xor
sub
ja
pop
sti
pop
orb
adc
das
xor
pop
mov
out
mov
dec
shrb
out
or
push
cmp
jmp
mov
dec
add
das
jb
pop
and
xlat
pop
cltd
mov
lea
addr16
adc
lcall
fimull
push
pop
cltd
in
sub
mov
cmpsl
in
incl
sub
cmc
sub
lock
lods
inc
movsb
rcr
imul
shlb
imul
sbb
incl
xchg
jecxz
or
or
cmp
dec
lcall
pushf
dec
mov
adc
in
mov
ljmp
stc
sahf
xor
pusha
cs
jne
decl
mov
movsl
xchg
pop
mov
ficomps
pop
iret
adc
enter
sub
lock
lret
jle
pop
pop
dec
sahf
shlb
outsb
mov
mov
jno
leave
dec
test
jae
dec
ja
ror
loopne
push
add
repz
dec
cmp
jg
inc
jae
adc
lcall
iret
sahf
mov
xchg
sub
dec
nop
jbe
stc
xchg
mov
sbb
jle
dec
lcall
pusha
dec
enter
andb
or
shl
enter
lods
rorb
int
daa
cmc
mov
enter
cmp
sbb
jno
inc
mov
mov
cltd
mov
pushf
add
ja
jno
inc
pop
xchg
das
imul
mov
dec
mov
dec
jle
sarl
dec
pop
or
pop
lahf
inc
inc
jp
sbbl
xor
call
xor
shl
cli
mov
xorl
adc
pop
pushf
cmp
pop
push
mov
scas
jecxz
lcall
pushf
mov
in
xchg
int3
outsb
inc
rcr
dec
sbb
hlt
rcll
or
fisubl
mul
dec
stos
pop
xlat
ret
lods
cmpsb
push
stos
test
pusha
mov
out
push
push
mov
lock
pop
adc
outsb
ret
cmc
stc
mov
xor
xor
add
push
movsb
jae
mov
sbbb
ret
add
rclb
outsl
dec
ljmp
clc
repnz
jp
inc
enter
ja
mov
rorl
movsb
cmp
xor
test
sbb
sbb
aam
in
lcall
stc
mov
sbb
and
scas
gs
inc
pop
mov
xchg
xchg
and
aad
dec
stc
inc
sbb
ficomps
mov
jb
inc
pop
test
icebp
cmp
add
sub
aad
cli
ljmp
jnp
add
or
mov
mov
sarb
rclb
push
out
aaa
inc
dec
or
push
rorl
jmp
sub
push
pop
jecxz
es
lahf
inc
xor
stos
nop
mov
pop
in
lret
lods
add
fcmovnbe
stc
cmpsl
dec
loopne
xor
sahf
imulb
lea
mov
fnsave
mov
adc
scas
cmp
cltd
mov
movsl
mov
test
movsb
stos
int
or
mov
push
mov
jo
push
stos
and
sarb
in
movsl
pop
push
mov
and
sub
arpl
data16
rcl
inc
mov
mov
mov
lret
xor
xchg
leave
or
inc
jg
xchg
std
lahf
roll
mov
icebp
xor
mov
mov
jg
test
and
mov
push
jbe
dec
stos
mov
mov
ror
pop
fcmovb
mov
decl
jae
out
xchg
mov
xchg
xchg
xor
addr16
sti
call
mov
and
ret
and
movsl
xor
push
inc
call
xchg
jae
jne
stc
jg
sub
sbb
sarb
sbb
jg
imul
ljmp
cltd
testl
mov
inc
jl
je
or
imul
add
push
fwait
in
stos
hlt
ret
sbb
in
cs
jecxz
in
mov
jecxz
fwait
sbb
cmp
fwait
add
test
stc
rcr
adc
jno,pn
mov
mov
mov
jecxz
cmp
int
lods
jmp
mov
sahf
jle
data16
cld
push
and
mov
cmp
iret
out
aad
arpl
or
xor
jno
in
sahf
aam
xlat
scas
gs
push
into
or
mov
iret
int
sar
js
das
inc
xchg
xlat
adc
mov
jno
ret
hlt
pop
loopne
mov
or
add
dec
out
out
clc
sub
jo
pop
cli
jnp
mov
mov
out
sbb
cmp
pop
test
inc
leave
and
push
ret
aas
repz
jnp
dec
lock
push
push
data16
push
adc
and
xchg
add
mov
or
je
sbb
add
fs
subb
jmp
sbb
cmp
scas
pop
lock
xchg
addb
popa
sub
and
push
sub
mov
ja
rcl
jl
jno
inc
shr
cmp
lods
enter
scas
filds
loopne
loop
or
imul
and
roll
out
mov
mov
icebp
mov
mov
inc
pop
jl
xlat
fisttps
adc
add
inc
stos
mov
fdivs
test
sub
test
push
lcall
in
sub
add
repz
sub
popa
push
gs
inc
sbb
mov
jne
push
loop
in
scas
out
clc
mov
sbb
pop
or
inc
pop
dec
inc
lock
out
add
cmpsl
call
mov
stos
push
mov
cwtl
push
fcmovu
mov
sub
adc
add
xchg
pop
dec
mov
int3
repz
dec
sub
and
imul
cmp
push
xor
jecxz
test
xor
mov
es
ds
xchg
jmp
add
jb
cwtl
pop
jecxz
jge
xor
xor
xchg
sub
adc
dec
es
or
lods
int3
test
cmpsb
gs
out
into
aam
fsubp
imul
or
loop
add
notb
inc
push
inc
ja
adc
in
push
stos
xchg
adc
lret
repnz
jmp
dec
fwait
sbb
test
pusha
xchg
je
test
sub
adc
inc
push
pushf
cmp
mov
dec
push
lods
cld
gs
movsb
xor
lret
dec
pop
xchg
xlat
cmp
xor
cwtl
outsl
jg
push
nop
pop
mov
test
push
fs
ds
push
fmull
iret
hlt
loop
mov
es
enter
sti
into
in
fs
pop
in
pop
dec
pop
lcall
out
fsubrs
das
fcoml
lods
pop
jmp
ljmp
jne
jbe
iret
and
cmpsl
aaa
lock
xlat
pop
inc
jnp
ficoml
outsl
ret
or
jecxz
jmp
lahf
and
add
cltd
push
and
mov
mov
push
push
xchg
jmp
shr
outsl
imul
cwtl
insl
hlt
jp
int
insb
xchg
addr16
mov
push
mov
and
pushw
aad
sahf
pop
mov
addr16
les
ficoml
dec
gs
or
xrelease
dec
ret
add
or
inc
push
shrl
sub
mov
cmp
and
cmp
shlb
movsb
popa
lock
into
aad
mov
fucomi
into
aam
mov
mov
inc
pushf
inc
add
push
mov
add
xor
imul
xchg
lcall
mov
mov
mov
adc
shl
inc
and
test
dec
mov
sub
jmp
les
lret
shlb
cli
cld
inc
fistl
pop
scas
xchg
jle
cmpsl
aad
pop
xchg
mov
push
clc
mov
jb
dec
sbb
and
ljmp
ja
fsubs
push
push
push
dec
sbb
lods
add
inc
add
sbb
aad
xchg
sahf
cmp
pop
sbb
jnp
popf
jg
dec
outsb
in
je
stos
push
aaa
rol
mov
repz
mov
fwait
pop
dec
push
mov
loopne
into
in
xor
addb
insb
jmp
icebp
mov
pop
inc
adc
adc
xchg
and
mov
repnz
jg
scas
mov
jne
out
cmc
pop
push
stc
jns
inc
fmul
xchg
cmp
pop
jl
xor
dec
outsl
fistps
mov
pop
or
mov
or
xchg
mov
or
lea
in
xchg
sub
pop
cmp
inc
roll
idiv
xor
pop
or
dec
jge
cmpsl
insl
dec
insb
addl
dec
mov
xchg
jg
loop
fldenv
pop
gs
rcrb
daa
mull
push
push
cmpsb
jno
into
cmp
jmp
pop
fldcw
mov
jge
mov
pop
ret
fdivrp
mov
lahf
mov
test
test
xor
inc
pop
sahf
cwtl
ljmp
sub
std
xor
repnz
dec
into
jns
not
mov
pop
cld
call
pop
and
imul
mov
adc
lahf
jnp
xor
fnsave
outsl
jno
dec
inc
test
xchg
lods
and
sub
test
js
fdiv
in
ljmp
lret
jb
cltd
cmp
mov
dec
ret
push
mov
fdivs
bound
push
lcall
aam
out
adc
sub
xchg
into
cmp
add
adc
subl
mov
mov
imul
call
mov
sub
loop
int
je
cwtl
mov
or
mov
fisttpll
aam
xchg
push
jmp
pop
nop
in
imul
enter
faddl
inc
popf
inc
cmpsb
add
clc
fwait
xchg
adc
outsb
or
shlb
mov
stos
sbb
sahf
jno
js
imul
inc
ss
push
xor
inc
sub
mov
or
xchg
mov
rorl
mov
in
xchg
test
mov
xor
xor
xor
addr16
push
jb
xchg
and
jnp
xor
push
test
jp
adc
jp
into
cmp
stos
call
mov
cmpsb
stos
sbb
cltd
xchg
dec
in
jno
xor
adc
scas
mov
es
mov
and
jnp
cmc
xchg
popa
aas
xchg
call
jno
jne
out
push
imul
fstpt
je
push
out
pusha
xchg
cltd
jb
mov
ljmp
shll
out
xor
pop
cwtl
xchg
shr
jmp
pop
sbb
mov
push
call
sub
dec
inc
orb
hlt
push
adc
gs
mov
jnp
adc
bound
arpl
out
lcall
cli
ja
flds
mov
cmpsb
jp
ret
flds
aam
inc
jns
cmp
out
inc
mov
int3
rorl
cmp
cmc
addl
pop
stc
or
lds
into
das
fistl
mov
adc
mov
jne
sbb
jns
pop
stos
test
sarl
in
lcall
dec
xchg
jae
les
push
mov
jbe
add
sbb
jmp
out
pop
fwait
loopne
mov
cld
clc
or
xchg
push
adc
cmp
inc
pusha
in
jae
push
cltd
sbb
shrl
jae
and
das
out
jmp
dec
lcall
sbb
xor
mov
mov
dec
push
movsb
inc
add
jae
je
lds
cld
xor
ljmp
loope
ja
aad
or
inc
rol
mov
dec
in
mov
xor
inc
adc
xchg
fldenv
jl
adc
decb
nop
cltd
aad
icebp
sub
xchg
xor
test
or
xchg
and
xchg
cmc
jg
out
mov
fildl
leave
in
ret
fildll
mov
pop
jnp
out
or
mov
cmpsl
push
stc
jle
adc
ja
inc
bound
mov
add
negl
mov
inc
push
je
sbb
sub
pop
repnz
mov
xchg
aaa
out
xchg
cmp
push
shl
in
cli
dec
iret
and
bound
push
pushf
scas
jge
popa
add
inc
dec
dec
enter
mull
iret
xor
fdivrs
mov
inc
mov
cmp
movsl
inc
xor
adc
fcomi
hlt
insl
sub
dec
movsl
int
add
and
enter
and
out
aas
into
mov
mov
cmpsl
jl
and
xor
sub
pop
testb
inc
lcall
ljmp
adc
int
cmpsl
paddsb
out
add
sbb
sbb
lea
pop
xor
test
adc
repnz
push
in
push
ds
xchg
xor
push
and
mov
inc
ret
fs
cmc
or
cmp
add
add
pop
dec
mov
arpl
adc
movsb
mov
js
pop
cmp
shl
ret
mov
loope
imul
fs
pushf
sub
das
add
mov
pop
jno
ret
dec
xor
and
add
test
mov
cmp
call
mov
xchg
pop
dec
sti
inc
leave
mov
or
outsb
jecxz
ret
loope
cmpsb
pop
out
pop
mov
insl
scas
mov
jae
adc
dec
push
push
out
loop
xchg
repz
adc
es
mov
add
data16
cld
jo
mov
pop
mov
jnp
lods
push
rorl
jmp
ja
mov
sub
in
pop
outsl
mov
fldcw
jle
pop
fistl
mov
js
xor
popa
dec
pop
push
inc
lret
pushf
xlat
insl
dec
jl
mov
lock
out
inc
nop
adc
je
jmp
fisubl
movsb
jle
xor
add
jo
setp
push
scas
hlt
lods
xchg
ljmp
xchg
pop
in
cmpsl
cli
mov
jo
sbb
in
jae
popa
repz
sub
scas
xchg
inc
jbe
cmp
lret
into
cltd
sti
inc
jae
popa
lea
sbb
cmpsl
fwait
sub
icebp
je
or
call
jbe
pop
les
push
test
and
mov
pop
repnz
fs
js
push
rcrb
xor
inc
fcompl
cmpsb
loopne
or
sahf
mov
lea
sbb
stos
dec
ret
orl
inc
mov
sub
out
gs
dec
leave
sub
fisubrs
add
pop
iret
jo
push
mov
loope
loope
mov
xchg
icebp
icebp
push
sbb
jae
gs
outsb
das
test
mov
mov
jmp
adc
xchg
fcomip
and
lds
mov
ds
mov
nop
ds
int3
fisubrl
pop
cs
inc
xchg
in
out
xchg
roll
jl
ret
sahf
sbb
arpl
bound
adc
cmpsb
clc
pop
adc
ficompl
sbb
lcall
addr16
jp
push
xchg
and
jecxz
je
bound
shlb
sbb
scas
jne
cmp
pop
or
xchg
stos
lret
outsl
andl
loope
and
repnz
outsl
daa
mov
rolb
fucomip
movsl
mov
jnp
out
xchg
xchg
push
sub
inc
sti
js
je
es
xchg
les
shrl
rcr
xchg
add
mov
bndstx
fnstcw
cwtl
dec
pop
lret
mov
movsb
mov
ret
jnp
sarl
pop
pop
cltd
sbb
push
inc
jns
cmpsl
enter
mov
lds
sbb
xchg
stc
outsl
jge
xchg
jle
icebp
rcrl
and
cmp
push
and
std
mov
mov
dec
pop
or
mov
rcrb
mov
fdivp
inc
out
sbb
insl
in
cltd
addr16
pushf
imul
or
arpl
jne
imul
outsl
stc
scas
fwait
mov
jne
dec
mov
jge
rclb
dec
sarl
xor
cwtl
push
xchg
es
lahf
fdivrl
mov
push
dec
cmpsl
std
cmpsb
jmp
arpl
mov
mov
rorl
ss
adc
cmp
push
outsb
cs
sbb
fnstsw
popf
addb
inc
js
xchg
aad
mov
in
movsb
push
xor
arpl
std
in
cmp
adc
fs
jns
mov
and
adc
jecxz
xchg
test
lds
icebp
xchg
shl
cwtl
shll
pop
lea
out
xor
movsl
cli
loop
outsl
clc
push
mov
jno
jge
movq
push
mov
test
out
cmpsb
xchg
jnp
sbb
pushf
rorb
notb
push
daa
sbbb
iret
nop
aam
inc
and
lock
xchg
add
dec
jg
xchg
jnp
ja
repz
xchg
push
shll
dec
jmp
repz
cmc
xor
cltd
add
or
inc
add
mov
lret
jmp
movsl
mov
pop
fcoml
push
inc
cmpsb
int
cmp
push
cmp
or
clc
incb
xor
jmp
mov
jmp
mov
mov
add
adc
ret
lcall
push
mov
ja
cld
es
es
fisubs
sub
iret
pop
add
adc
add
bnd
and
loop
pusha
inc
shll
push
leave
cltd
inc
mov
add
stos
sbb
scas
testl
out
addr16
bound
mov
leave
sub
inc
shrl
in
sub
cmp
xchg
out
sub
sti
dec
ror
fwait
jbe
pop
or
adc
fisubs
jbe
insl
or
sub
sbb
leave
lock
fimuls
ds
mov
mov
mov
mov
addl
into
std
data16
sub
push
cli
je
divb
sti
or
mov
stos
dec
and
inc
in
scas
cmp
xlat
jne
sub
adc
call
sbb
jae
dec
cmpsb
pop
fcmovnbe
aaa
pop
jo
sub
jmp
je
leave
scas
sbb
iret
mov
lahf
pop
cmpsl
hlt
adc
push
popl
out
loope
lock
je
mov
iret
lret
div
fs
dec
or
fimull
fiaddl
and
fwait
inc
xchg
cld
jo
stos
push
push
adcb
mov
jmp
sbb
pop
xchg
pop
pop
xlat
jae
pop
cmp
iret
stc
in
push
stos
push
xor
loopne
cmp
mov
jl
arpl
int
mov
push
ja
jo
cmpb
leave
dec
pop
movsl
inc
outsl
test
xor
arpl
scas
hlt
iret
icebp
adc
imul
aam
dec
cmp
mov
imull
loop
gs
out
lock
or
pushf
sbb
in
out
sbb
dec
in
in
scas
in
xor
ljmp
mov
loop
jl
pushf
out
and
fdivr
mov
and
outsl
jne
push
pop
decl
xchg
inc
jne
es
ss
pop
movsl
or
lods
mov
fwait
and
inc
cmc
cld
testl
mov
and
push
cli
dec
push
shrl
xchg
jb
das
int
into
pop
data16
ret
push
jle
xorl
js
shrb
sahf
or
sbb
pop
stc
loop
fnstsw
ja
dec
inc
data16
shufps
es
lret
inc
jle
sbb
xchg
push
aas
xor
out
fs
test
leave
jle
xor
push
push
jo
mov
je
lahf
xchg
mov
outsl
or
mov
or
inc
mov
or
sub
shll
lock
xchg
int
out
pusha
adc
outsb
xor
xorb
mov
mov
cli
push
inc
in
enter
and
mov
popf
push
testb
add
ret
xor
mov
popf
ds
and
aas
cmpsb
pop
lods
in
jo
mov
jnp
sbb
and
pusha
int
dec
lea
jle
xchg
js
jns
lea
jne
shlb
xchg
mov
pop
mov
fldl
adc
into
imul
ss
add
jno
cmpsl
test
inc
cmp
jl
in
ljmp
mov
cmp
rcl
lcall
out
aam
cmp
sub
imul
xor
std
pop
push
cli
sbb
dec
or
movsl
dec
inc
xlat
sub
jg
inc
mov
mov
xor
cmp
test
push
sbb
pop
or
pop
sarl
repnz
nop
xchg
icebp
sbb
lods
negl
les
pop
xor
xchg
cmp
sbb
cmp
pushf
mov
xor
push
dec
cmp
cmp
leave
sti
push
mov
mov
pop
test
sub
fwait
xchg
xchg
into
or
leave
aad
pop
mov
push
cmpsb
pop
mov
xchg
out
mov
imul
shrb
cltd
push
jno
push
mov
nop
cs
mov
roll
or
add
es
pushf
or
nop
add
int
xchg
fxch
mov
mov
push
inc
xor
sbb
fidivs
mov
in
scas
jge
sub
in
mov
pop
inc
and
push
outsl
sbb
fidivrl
outsb
inc
push
sbb
jl
xchg
aam
xor
lret
dec
xor
loope
das
mov
dec
push
fildl
cwtl
cmp
les
add
fs
sbb
pop
in
adc
cmova
and
cmp
aas
jb
enter
into
ljmp
sub
adc
mov
gs
sbb
lret
jne
pop
out
in
fists
pop
add
mov
rcr
insl
daa
shrb
mov
jnp
repnz
pop
js
loope
es
fnstenv
sub
inc
and
ret
and
cmp
fsubl
push
lret
in
daa
in
add
mov
xchg
sahf
jno
and
cld
jns
loope
out
ror
shlb
lock
push
and
inc
stc
stos
dec
xor
leave
clc
gs
out
jns
dec
setae
xor
add
fdivrl
sub
mov
aad
mov
neg
movsl
or
imul
inc
movsb
adcb
and
sbb
xchg
test
std
loope
inc
cmp
addr16
xchg
fwait
push
cmp
out
ret
mov
fsubrs
pop
add
inc
ja
mov
inc
clc
jecxz
and
test
les
cld
jle
pop
jne
jg
stc
dec
jecxz
push
sbb
push
push
mov
lods
jge
call
cmpsl
jb
cmpsl
push
enter
fnstenv
push
dec
adc
push
jno
cs
xchg
adc
or
test
mov
jmp
loopne
jp
stos
and
insl
scas
mov
jno
repz
popa
je
cltd
movsw
mov
mov
js
repnz
cwtl
inc
insb
shl
aas
xchg
add
mov
push
sub
mov
inc
sub
in
jae
in
nop
sub
out
std
lea
dec
sarl
and
mov
or
fldenv
daa
jae
pop
ffree
cltd
or
sbb
mov
xor
xor
xchg
xchg
aas
cwtl
dec
pshufw
mov
das
sti
lret
fcompl
jp
dec
or
sbb
sarl
inc
insb
clc
inc
ret
mov
nop
daa
sub
pushf
push
or
lods
cmp
pushf
fnsave
data16
sub
jo
mov
jne
and
daa
fdivr
inc
push
nop
fstps
int
cltd
or
xor
ljmp
scas
xor
bound
mov
push
dec
cmp
jnp
or
rorb
cmc
sbb
jg
dec
daa
loope
push
sahf
mov
sub
out
fcmove
loope
cmc
lahf
push
fs
iret
dec
adc
shll
aas
test
sbb
in
imul
insb
jmp
into
sub
sbb
cs
aad
cmp
cld
pushf
in
push
jg
push
in
repnz
aad
sbb
scas
lea
arpl
or
out
scas
stc
scas
mov
fisubrl
cmpsl
mov
ja
cmp
adc
xchg
mov
minps
push
lds
push
cmp
jp
imul
loopne
xor
ret
imul
xchg
in
or
inc
adc
jae
mov
fistpl
test
adc
dec
in
dec
and
fisubs
movsb
stos
mov
mov
mov
inc
lds
mov
mov
add
decb
add
adc
jp
or
out
stos
push
jne
pop
sti
lahf
stos
dec
mov
bound
adc
faddp
mov
mov
sub
out
mov
and
sub
and
push
lock
scas
and
and
xor
and
mov
pop
enter
cld
cmpsl
std
cmp
mov
sbb
ljmp
lret
lret
jg
mov
mov
fildll
sahf
or
popf
adc
dec
pusha
int
cltd
bound
icebp
push
daa
hlt
jge
test
pop
jo
adc
sub
ljmp
and
and
out
aad
sbb
mov
xchg
out
inc
jmp
ret
sub
test
bound
aad
push
sub
sbb
jecxz
dec
shlb
cwtl
jge
xlat
jl
roll
insb
push
push
inc
arpl
cmp
fs
imul
xor
test
andb
push
inc
add
imulb
jle
aad
arpl
int3
mov
in
dec
and
outsl
lods
mov
mov
sbb
ficoms
cmpsb
add
jle
mov
andb
push
pop
lock
xor
cmpsb
shr
hlt
mov
popf
and
dec
inc
and
adc
mov
xor
sub
shll
mov
out
insl
xlat
inc
lahf
bound
jmp
mov
cmpsb
imul
bound
lds
sub
repnz
xchg
ror
ss
in
cmp
hlt
mov
cmp
repnz
jae
cld
lea
add
push
and
adc
movsb
xchg
fcomps
sarb
fcoml
dec
pushf
adc
or
pop
dec
cmp
inc
lret
les
jg
cmp
in
stc
in
mov
in
xchg
stos
adc
mov
mov
lds
in
insb
xor
jo
pop
aaa
mov
mov
int3
out
ss
clc
sub
fnstcw
fldenv
test
xchg
pusha
loop
xor
or
and
xor
mov
imul
ljmp
out
inc
test
test
cli
gs
sub
icebp
mov
sub
sbb
pop
shlb
pusha
cmpsl
scas
or
dec
pop
cmp
movsl
arpl
scas
push
xchg
pop
xor
adc
adc
dec
fstp
and
daa
xor
arpl
mov
and
jmp
sti
cmpl
fwait
inc
push
add
mov
fwait
jecxz
or
ja
adc
jmp
scas
out
pop
test
pop
jmp
leave
push
push
sbb
push
mov
faddl
in
dec
scas
push
xchg
xchg
dec
push
dec
xorl
pop
fiaddl
xor
in
loopne
sbb
les
out
and
push
out
and
xor
jmp
es
and
xor
out
push
xchg
cli
fiaddl
xchg
jmp
fldl
hlt
pushf
dec
mov
mov
loop
in
lods
decl
lahf
xlat
adcl
cmpsb
sbb
fwait
pushf
pop
ja
icebp
or
std
adc
test
les
cwtl
mov
out
dec
lock
dec
rcll
stos
std
cmp
lods
mov
cmp
mov
rol
scas
xchg
inc
mov
jns
push
js
dec
mov
add
fimuls
xor
loope
add
push
pop
stos
loope
ror
xchg
fistps
jb
shl
test
mov
cwtl
ds
lock
jg
mov
jb
dec
sbb
and
std
pop
mov
jnp
inc
push
test
add
imulb
jecxz
cli
dec
jo
xor
xchg
and
jmp
mov
sub
jle
loopne
xchg
dec
out
jb
pusha
and
frstor
fildll
nopl
mov
jp
test
out
and
cmp
adc
test
repz
repnz
add
xor
dec
jge
outsl
jmp
fsubl
xor
fbstp
insl
pop
cmpb
cmc
les
xlat
mov
or
jnp
cmp
push
push
dec
add
jle
jne
imul
jae
add
dec
popl
pop
stc
jmp
push
iret
aam
xlat
into
adc
jbe
push
je
xchg
and
sbb
xlat
sbb
pop
arpl
jp
mov
scas
sub
mov
gs
mov
stos
and
pop
hlt
js
aad
cmp
fwait
aaa
stos
or
notb
mov
sub
adcl
pop
sub
pop
and
ljmp
adc
push
push
add
xchg
scas
push
testb
and
add
push
out
cmp
jno
adc
add
scas
xor
mov
or
stos
ds
sbb
dec
pop
arpl
clc
or
mov
vmwrite
xchg
jo
repz
in
insl
push
add
lock
push
sub
pop
int
mov
paddusw
push
and
and
fisttpl
add
sbb
xor
cmpl
loop
xchg
into
adc
insb
cli
and
push
or
dec
dec
adc
lea
pop
add
scas
dec
cmp
sub
orb
es
sbb
in
fwait
jg
imul
sbb
jno
dec
mov
fiaddl
xchg
ss
je
mov
rcrb
repz
stos
popa
fwait
pop
push
mov
pop
adc
jne
scas
clc
mov
adc
cmpsb
mov
sub
fbld
adc
movsb
lds
cwtl
mov
ret
pop
gs
push
and
push
pop
enter
fs
cwtl
mov
lea
mov
xor
pop
and
and
pusha
daa
dec
xor
fidivs
mov
inc
sbb
insl
fimull
pop
insl
mov
push
insb
or
mov
inc
jmp
repz
add
sbb
add
jge
and
cmp
popf
inc
imul
mov
ja
out
inc
jg
pop
rorl
xorl
dec
jb
mov
cmp
and
sbb
fucompp
xchg
dec
pop
push
jb
int
imul
mov
jl
repnz
jecxz
pop
xchg
cmp
lock
leave
scas
cvttps2pi
roll
lea
out
les
int
xor
mov
lea
mov
cmpsb
fdivrl
xlat
pop
subl
jnp
mov
push
aas
hlt
hlt
lds
stc
inc
in
xchg
mov
imul
pop
aaa
in
mov
je
ljmp
mov
inc
jnp
mov
xchg
in
or
call
cmpsl
cmpxchg
mov
mov
jnp
out
jecxz
jae
fmull
xor
enter
mov
aam
inc
or
fcomps
ret
add
adcl
push
xor
mov
xchg
roll
pop
sbb
subl
cmp
add
arpl
mov
push
and
bound
or
cmp
addl
aad
or
xor
sub
mov
pop
shll
xor
fdivrs
jmp
xchg
and
ret
or
int
imul
jge
xor
xchg
jns
inc
call
aaa
mov
sti
mov
int
push
incl
pop
fistps
das
fsubs
sub
add
out
addl
rorl
scas
outsl
adc
mov
fists
jecxz
pop
mov
cmpl
mov
push
int3
sbb
and
or
idivb
stos
mov
jbe
sbb
mov
jp
xlat
xor
jb
lret
jno
fldl
jecxz
mov
js
out
mov
les
sbb
sbb
clc
pop
scas
pop
adc
js
xchg
ds
mov
pop
nop
dec
pop
test
aas
sbb
mov
rcrb
fsubrl
dec
pop
cmc
test
dec
imul
nop
jg
pop
int
repz
mov
xchg
sbb
je
pop
dec
inc
and
data16
push
xchg
aad
and
cmp
sbb
std
xchg
lret
movsb
rclb
loope
mov
jno
scas
push
xchg
jb
cmc
and
mov
lock
xchg
dec
mov
arpl
or
inc
cmp
push
mov
inc
jmp
std
divb
sub
dec
push
clc
les
mov
stc
into
mov
nop
fs
sbb
xor
rol
lahf
jg
ss
mov
mov
adc
arpl
rcl
cmp
dec
test
pop
dec
in
pusha
pop
inc
sti
mov
mov
mov
jge
mov
mov
xchg
pop
jp
or
dec
inc
ss
sub
clc
pop
sbb
int
mov
push
mov
cmpsb
pop
popa
push
mov
ss
inc
push
mov
ret
mov
cmc
pop
gs
scas
lock
ret
pushl
pop
or
dec
rcrb
lret
xchg
mov
bound
sti
fcmovne
xchg
mov
push
aad
mov
iret
cmp
xchg
cmp
mov
cmp
cmpsb
xor
push
xor
jbe
jg
push
test
shrb
iret
stos
shlb
sub
dec
push
insb
adc
adc
rcll
rcrb
pop
mov
mov
dec
lret
out
cltd
daa
cld
imul
scas
ds
push
ds
push
mov
push
ret
outsb
push
and
add
mov
out
mov
repz
mov
rclb
mov
cmc
or
lahf
enter
push
xchg
ja
lea
cmp
adc
sub
jae
movsl
and
xchg
out
cld
clc
inc
imul
ss
push
push
cld
mov
mov
fcoms
daa
lahf
fnstsw
icebp
sbb
cmpl
cwtl
adc
sub
testb
inc
jp
fs
repnz
fcoml
cwtl
pop
or
aaa
aas
sbb
adc
sub
out
xchg
std
lret
iret
mov
sbb
clc
sub
loopne
push
rorb
mov
lds
popf
mov
in
mov
xor
fiadds
xor
mov
jne
dec
insl
or
iret
fwait
mov
movsb
sti
out
test
mov
xor
inc
scas
hlt
cmp
scas
popw
dec
into
push
movsb
mov
sti
gs
cmp
jbe
jmp
sub
cmp
xchg
mov
aad
jmp
add
push
clc
jge
imul
mov
clc
and
subb
shrb
cmp
lcall
push
test
or
insb
bound
adc
rorl
loope
movsb
int
xchg
in
lds
pusha
jno
cmpsl
cld
and
xor
lock
adc
xor
push
mov
pop
into
lahf
jg
push
sbb
ror
lea
scas
xchg
and
sbb
jae
xchg
xor
xlat
dec
cwtl
call
mov
int3
adc
jl
push
insl
icebp
cltd
jno
imul
lcall
cli
xchg
test
scas
cmp
jns
push
addr16
sbb
scas
dec
xchg
push
scas
mov
sbb
jb
lock
push
sub
sbb
mov
addr16
in
pop
movsl
mov
push
popf
out
into
pushf
push
fldcw
jp
mov
push
out
dec
pop
fldl
shrl
push
push
mov
sbb
push
jle
jp
dec
dec
fs
das
fldenv
and
mov
mov
dec
or
xchg
iret
cwtl
xchg
pop
stos
sub
mov
aam
pop
adc
mov
dec
in
gs
sub
xor
mov
popa
pop
jge
icebp
inc
test
cmp
jg
mov
push
dec
and
mov
iret
pop
jl
push
ret
mov
adc
lea
dec
adc
jp
fidivrs
cmpsl
jo
js
adc
adc
jo
icebp
adcl
lret
jecxz
int3
sahf
pusha
iret
jecxz
sti
test
testb
xor
adc
scas
cmp
sbb
mov
push
push
dec
stos
sti
sti
js
mov
xchg
dec
and
jae
inc
or
das
adc
lods
mov
shlb
pop
push
shll
pop
sbb
fwait
cmpb
jle
cmp
and
shlb
packssdw
push
push
pop
mov
jmp
fdivl
cwtl
fwait
mov
fmul
das
out
jno
push
or
je
test
push
enter
cwtl
ljmp
lods
push
jo
adc
adc
dec
pusha
or
das
out
stos
stos
xchg
mov
jmp
xchg
or
cmpsb
repz
shrb
or
xchg
cld
pop
or
add
jmp
enter
jno
pop
cs
loop
push
mov
add
cltd
inc
jecxz
sbb
or
sahf
test
cmp
iret
out
or
arpl
iret
sbbl
aam
jbe
mov
mov
sbb
jmp
jo
xor
faddl
icebp
sbb
xchg
les
int
test
ret
movb
aad
cmpsb
lret
cmpsl
push
iret
push
mov
stos
or
lret
mov
sbb
jecxz
mov
xchg
mov
add
cwtl
hlt
adc
add
jge
insl
and
mov
or
xchg
dec
cli
ret
outsb
inc
repz
cmp
bound
lcall
jp
ficomps
xchg
push
dec
jecxz
dec
or
jb
mov
xchg
mov
dec
xchg
psrld
movsl
shrl
subb
mov
popf
mov
fwait
imul
rorb
movsb
push
sub
pushf
shlb
or
fstpt
data16
popf
movsb
je
sub
mull
leave
or
sahf
data16
sbb
test
mov
cwtl
jne
dec
mov
lea
repz
and
icebp
bound
in
rolb
inc
jp
cs
hlt
jo
inc
dec
shl
push
lcall
fisttps
dec
inc
mov
dec
std
lds
sbb
xchg
enter
adc
dec
out
rcr
push
jns
lods
movsl
xchg
push
outsl
pushf
add
jo
shrb
cmc
push
ret
fcompl
sub
jmp
fidivs
xor
push
cltd
xchg
cmp
jb
inc
mov
fistps
in
add
mov
out
into
inc
nop
popa
pop
or
dec
pusha
dec
neg
sbb
test
inc
xlat
in
inc
scas
loop
pusha
filds
mov
gs
lcall
or
push
testl
mov
mov
lahf
jg
push
outsb
pop
xor
mov
mov
es
notl
sub
and
mov
pop
xchg
push
stc
and
xor
xchg
pop
pop
aad
and
mov
jg
gs
jmp
ret
adc
ja
bound
je
xor
popf
gs
cmpsb
adc
or
adc
mov
push
inc
xlat
mov
fsubrl
pop
addr16
js
in
inc
dec
xor
xor
cwtl
add
sarb
data16
es
or
add
mov
cmp
popa
push
mov
dec
xor
add
jb
xor
mov
pop
outsl
les
jae
pop
xchg
aaa
mov
lds
ret
out
jne
push
imul
std
lcall
cmp
lret
js
mov
xor
mov
jb
arpl
mov
jecxz
xchg
jnp
sub
xlat
dec
mov
cmp
mov
je
fcompl
pop
inc
dec
stos
adc
push
xchg
cmp
push
adc
inc
push
popa
insb
aam
aad
call
xchg
stos
xchg
cld
lcall
and
out
sub
movsl
pusha
das
sbb
inc
mov
push
add
jl
fsts
shrl
pop
stos
xor
call
xchg
cmpsl
pop
add
push
mov
cmpsl
push
push
out
mov
movsb
ljmp
xchg
sub
sbb
pop
and
adcl
into
pop
pop
ss
or
aas
cmp
cmc
outsb
adc
int
cmp
das
and
xchg
jns
lret
decb
fnstenv
and
push
cmpsl
repnz
mov
xchg
bound
xor
fstl
push
mov
sbb
cmpsb
dec
shll
xchg
stc
jmp
jb
push
repz
add
xor
sub
lcall
and
ds
sub
fldl
sbb
xchg
mov
testl
adc
ja
xor
add
jbe
out
sbb
movsl
push
add
pop
inc
rcrl
pop
sbb
sti
xlat
and
sub
arpl
mov
dec
inc
jg
sbb
xchg
sbb
sub
push
fmul
or
mov
add
jg
cmpsl
xchg
cwtl
adc
aaa
negb
push
cmpsb
sahf
sbb
or
addr16
xchg
movsb
outsb
jmp
or
insl
push
dec
xchg
je
aaa
jae
nop
daa
sub
cwtl
ret
jb
andl
push
icebp
call
and
lret
filds
push
sbb
or
xor
insl
xchg
cmpl
mov
scas
call
int
sbb
or
repz
stc
dec
add
pop
repz
push
rol
xchg
fidivs
lret
rolb
push
cld
or
and
mov
cld
xchg
mov
push
inc
mov
cmc
loope
mov
repnz
jg
popa
rorl
xlat
mov
mov
sti
adcl
cmpsb
xchg
out
mov
mov
dec
pop
pushf
push
sti
ds
sbb
mov
insb
adc
outsl
and
cmpsl
bound
jmp
push
ljmp
repz
add
cmp
movd
adc
data16
sub
sbb
lds
nop
adc
xor
and
flds
popf
sbb
or
inc
sub
std
xchg
call
loopne
mov
movsl
pop
icebp
mov
sub
int3
mov
ret
hlt
test
add
mov
fs
jnp
and
lret
xlat
lret
cltd
push
addl
jl
stc
xchg
sub
mov
mov
in
xchg
rorb
jmp
push
jo
subl
jmp
imul
sbb
cmp
xchg
out
cmp
adc
js
pop
inc
inc
inc
outsl
movb
adc
cli
sbb
sar
jmp
fs
pop
mov
cmp
add
adc
popa
sub
daa
cwtl
xor
sbb
inc
lods
jmp
jmp
mov
mov
push
nop
lock
sub
xchg
push
jmp
or
repz
xchg
xchg
rorl
decb
mov
notl
in
pop
loope
lock
stos
pop
js
adc
xchg
pop
movsl
xchg
addr16
push
mov
ss
sub
sbb
fcomps
jns
or
xlat
test
stc
pop
xchg
negb
jb
push
rol
xor
fcoml
push
les
add
adc
lahf
outsb
mov
add
xchg
jno
iret
mov
dec
pop
add
jnp
push
pop
hlt
aas
push
mov
push
pop
xchg
xchg
jecxz
jae
popa
inc
hlt
push
pop
mov
sti
pop
test
lock
cmpsb
roll
fdivl
fstpt
mov
fcmovne
cwtl
add
das
and
imul
out
cltd
adc
sub
adc
rorb
in
xor
fisttpl
fnstcw
or
or
and
sub
mov
sub
into
mov
cli
mov
dec
pop
mov
jge
jecxz
jmp
xchg
xchg
outsl
outsb
test
mov
mov
rorb
je
cmp
jnp
cmpsb
test
dec
add
insb
in
aaa
sarl
testl
dec
bnd
inc
adc
ljmp
cmp
xchg
mov
aad
cmpsl
and
cmp
lods
mov
add
mov
outsl
cmp
pop
mov
ljmp
fldl
test
sti
fsub
cwtl
rcl
and
ja
xchg
lcall
jge
jle
insb
xchg
mov
xchg
sti
sbb
lcall
cmpsl
sahf
sbb
cmpsl
xchg
in
test
cmp
xchg
adc
ss
xchg
popf
lahf
push
sub
sbb
xchg
jle
mov
inc
lods
icebp
das
sarb
or
lret
or
push
lret
jo
cmpsb
test
mov
das
xchg
cmp
jge
push
pop
and
mov
push
cwtl
fistps
pop
dec
xor
clc
loop
lahf
test
mov
adc
loopne
push
test
mov
pop
repz
cmc
mov
push
jmp
dec
fadds
das
push
pop
faddl
ret
pop
or
push
sub
mov
mov
inc
hlt
pop
repz
adc
jb
fildl
add
push
add
mov
lahf
mov
sbb
jl
int
cmc
adc
sbb
fnstcw
inc
test
negb
test
cmp
push
sub
negb
aad
mov
icebp
repz
or
jmp
ss
xchg
clc
ljmp
call
xchg
push
jae
mov
fldl
hlt
pop
xor
sarl
gs
icebp
test
popa
sub
int
je
push
inc
mov
pop
add
shl
jnp
nop
sbb
mov
pop
ljmp
rcll
pop
cld
xchg
xchg
test
adcl
xor
mov
movsl
es
in
push
vpunpckhbw
pop
or
push
mov
in
pop
ret
mov
or
lea
pop
jb
ret
fimuls
xchg
cltd
test
add
or
ficoms
push
dec
xchg
popf
inc
pusha
jmp
sbb
and
ret
and
mov
sub
sbb
aaa
sub
cmpsl
ret
cmp
jle
fcoml
pop
pop
push
roll
pop
or
popf
pop
jbe
pop
add
jb
inc
fadds
cs
js
push
cmp
push
add
add
loop
dec
cs
jmp
stos
cmp
push
imul
repnz
adc
jae
pop
fbstp
es
aaa
and
aam
xor
es
mov
mov
and
jecxz
outsb
sahf
pop
icebp
lods
cmpsb
push
dec
rclb
push
js
lock
sahf
icebp
aaa
fmulp
cltd
cmp
jnp
sub
mov
out
aaa
xor
insb
lret
mov
aaa
stos
int3
xchg
inc
rcrl
adc
sbb
pop
loopne
add
jecxz
pop
shl
addr16
push
dec
mov
stos
sub
stos
push
mov
or
daa
sti
shrl
mov
or
fcoms
or
aad
or
sbb
cmp
jae
pop
sbb
stos
inc
in
bound
mov
dec
scas
add
push
cmp
or
or
ret
add
xor
sub
jg
sarb
lahf
xchg
sbb
ja
inc
inc
sub
inc
int
lret
test
nop
dec
roll
fiaddl
lcall
mov
lcall
into
pusha
imulb
add
daa
out
inc
jo
cmp
bound
mov
push
dec
add
fsubr
jecxz
inc
test
inc
mov
fistl
popf
std
les
scas
jbe
sub
push
xchg
xor
jg
icebp
rcrb
outsl
push
xchg
cmp
cmp
pusha
nop
or
mov
mov
cmp
jb
inc
lock
movsb
aam
lahf
jns
jge
les
cmpsb
add
fiaddl
pop
inc
mov
pop
pop
sbb
xchg
sbb
scas
mov
test
sbb
in
je
jbe
fwait
cli
xchg
mov
jmp
and
ds
loop
cmp
sbb
loope
push
sbbb
loop
bound
pop
push
jle
rcl
fiadds
movsb
call
mov
in
mov
lea
fisubl
call
push
ss
ss
cli
cmp
nop
repz
fcoms
imul
push
adc
subl
subl
jmp
mov
mov
inc
add
push
int3
xor
mov
mov
mov
dec
in
int3
inc
mov
push
ss
jmp
clc
jne
jne
mov
icebp
ja
test
mov
xchg
aam
in
out
fisubl
xchg
ljmp
mov
aad
je
mov
lcall
fidivl
insb
lcall
push
mov
pop
mov
fs
jae
lods
jl
int
sub
xlat
add
cmp
add
inc
rorb
jb
addl
jb
cli
pusha
cmc
orl
inc
jp
dec
mov
adc
inc
loope
movsl
cmpsb
cmp
xchg
lds
movsb
sub
mov
xor
or
mov
cmp
adc
jbe
sbb
cmp
dec
adc
jp
imul
rcrb
insl
ror
inc
xor
movsb
jp
fimull
cwtl
push
xchg
sbb
sti
mov
xchg
imul
dec
imul
pop
dec
sbb
jecxz
fisttpl
imul
mov
ja
cld
call
pusha
push
hlt
repz
cwtl
push
cs
xchg
push
fcom
sbb
es
mov
fcompl
mov
inc
cltd
mov
sub
into
hlt
dec
xchg
or
leave
mov
dec
add
push
nop
or
cltd
add
jae
mov
std
xchg
cld
movsb
stos
pop
dec
imul
popa
mov
aad
pop
aad
pop
popf
push
pop
pop
test
pop
in
xor
lahf
js
int
xorb
add
bound
inc
sbb
push
nop
push
rcll
imul
nop
xchg
inc
adc
jo
push
cmp
dec
fimull
or
and
xor
dec
cs
xchg
jecxz
pop
test
jl
iret
std
rep
add
imul
imul
cmp
mov
addr16
sbb
xchg
jns
cwtl
clc
cmc
das
imul
shrb
sub
mov
xchg
xchg
decl
je
imul
dec
into
aas
and
test
enter
xlat
sub
lahf
mov
fsubrl
daa
cmp
loope
addr16
mov
mov
jmp
inc
test
or
lods
or
dec
call
pop
dec
jp
idiv
lea
jno
mov
or
inc
ja
sub
cltd
sub
mov
or
and
pop
push
push
xor
test
xorl
std
das
scas
pushf
ja
xchg
mov
sbb
daa
popa
or
xchg
int
dec
adc
aad
jne
or
test
cmp
fistl
add
mov
sti
out
nop
bound
xlat
imul
sbb
repnz
mov
popa
hlt
adc
lret
out
scas
pop
mov
cmpsl
mov
inc
fimuls
pop
sbb
mov
xor
in
jmp
out
push
repz
stc
orb
cmp
cs
addl
leave
ficomps
sub
or
push
adc
movsb
fsubp
out
cmp
sub
rcrb
addr16
lret
jmp
cltd
push
pop
imul
jmp
ja
popa
lahf
insb
xor
and
and
xchg
in
jbe
and
adc
xor
scas
add
daa
xor
jae
rcl
mov
mov
mov
pop
push
jmp
lret
mov
bound
mov
mov
les
fcmovne
sahf
insb
das
mov
in
sub
push
mov
mov
out
push
mov
xor
inc
aam
push
xchg
es
into
das
mov
mov
and
aas
and
imull
jmp
and
outsb
out
shll
into
fcompl
jne
das
jmp
mov
mov
sub
push
dec
or
subl
sti
pop
dec
in
out
mov
mov
jp
fwait
xchg
daa
je
gs
and
cmp
in
adc
fucompp
dec
iret
ja
int
or
dec
jle
mov
adc
cmovne
aam
aaa
sub
mull
mov
jecxz
pop
repz
mov
je
mov
dec
mov
jne
into
test
pop
sub
adc
movsl
mov
mov
inc
imul
cmp
je
mov
stos
dec
iret
mov
mov
cmp
fstps
jp
stc
sbbb
or
jne
jnp
mov
lret
das
push
lods
mov
xchg
sti
iret
call
pop
cmp
jno
add
icebp
jns
xchg
ja
push
inc
adc
shll
cld
neg
cmc
dec
aaa
test
jg
pop
adc
fimull
or
lods
repz
icebp
and
lret
in
push
pop
or
push
push
xchg
in
mov
popf
mov
repnz
jo
mov
loope
sbb
ret
add
pushf
lock
imul
pop
cmp
idivl
pop
add
push
ljmp
cltd
adc
and
mov
sbb
sbb
mov
outsl
or
cld
pusha
lret
out
std
jmp
in
rorb
addr16
dec
add
out
shl
out
cmp
test
push
int
popf
mov
aas
cmc
mov
cmp
mov
in
adc
sbb
adc
xlat
mov
mov
sub
clc
inc
loop
mov
addr16
cmpsb
xor
mov
add
push
or
mov
ds
push
add
cmpb
pusha
ret
dec
xor
mov
cmc
and
adc
adc
lret
iret
bound
ret
mov
mov
dec
dec
fildl
shll
rorl
pop
jmp
cs
jo
push
jle
movsb
out
dec
in
pop
sti
push
addl
pop
stc
je
sub
out
cmpsl
xor
and
movsb
push
cmpsb
repnz
je
cmp
fnstcw
sbb
mov
cmpsb
mov
fistl
mov
add
mov
jno
stos
repnz
adc
idiv
repz
clc
fcmovu
add
fdivl
sub
cwtl
testb
mov
mov
mov
mov
aaa
xor
dec
hlt
int3
cmc
cmp
add
inc
lods
jae
cvttps2pi
divl
adc
pop
ljmp
push
lods
in
std
jno
dec
aam
mov
sbb
dec
int3
jb
paddb
add
and
out
mov
mov
fwait
inc
es
adcl
add
push
dec
leave
lods
sti
idivl
decl
insl
xchg
mov
dec
xchg
movsl
mov
sbb
pushf
cmpsb
int
ficomps
cmp
mov
movsl
dec
test
rorb
push
les
and
sar
nop
leave
sbb
lea
es
push
call
daa
imul
imul
sbb
lret
mov
xor
call
aad
and
mov
cmpsb
lret
ja
mov
add
xor
jno
mov
xor
xchg
xor
mov
push
repz
or
subb
imul
call
or
push
mov
sti
jle
inc
xchg
push
leave
inc
movsl
dec
movsl
sti
push
dec
jae
cs
xchg
shlb
jg
mov
jmp
out
fxch
ja
jl
and
leave
fistpl
ret
stc
std
pop
mov
inc
sub
xor
aaa
add
rcrl
stc
dec
push
jnp
stos
fsubl
push
pop
mov
and
inc
push
fcomps
icebp
dec
mov
enter
rorl
stos
outsb
lea
mov
lds
mov
jbe
fsubrs
hlt
aad
mov
mov
xlat
mov
adc
inc
and
push
gs
jb
jp
dec
jns
sub
sbb
je
cmpsl
or
jmp
and
inc
sub
push
subb
dec
lret
xor
test
jae
add
add
mov
cmpsb
add
in
pushf
int3
inc
xchg
pusha
pop
loopne
popa
mov
out
popa
pop
sub
out
and
sbb
push
adc
inc
ja
mov
xchg
das
or
cmp
pop
lcall
push
sub
adc
dec
in
psrlw
sbb
add
jb
and
mov
fsubrl
xor
add
jecxz
jns
jb
push
dec
js
xchg
jne
jnp
dec
adcb
add
imul
mov
or
inc
xchg
adc
push
bound
sti
movsb
test
push
hlt
fiadds
js
jge
repz
out
subl
aas
ficompl
les
inc
lds
xchg
sbb
or
push
pop
andb
rolb
fisubs
movsl
lcall
cmp
mov
insb
pop
test
negl
mov
pop
sahf
or
xor
dec
jp
inc
fistl
ds
and
sbb
cmpsb
fisubs
lret
pop
ret
jae
add
into
xor
loopne
jno
lds
jmp
rcr
xchg
mov
faddl
mov
push
adc
fnstsw
and
pop
outsl
mov
sarl
fildll
mov
jo
jmp
jecxz
xlat
repz
mov
sbb
movsb
mov
mov
adc
xor
stos
jp
mov
ds
cmp
ss
sbb
aam
ss
mov
xor
xchg
js
mov
cmp
aas
test
arpl
es
xchg
cwtl
add
jae
rolb
cwtl
outsb
adc
stos
sub
sbb
test
mov
mov
mov
mov
mov
movsl
ja
sbbb
je
sub
mov
or
pushf
rep
insl
sbb
sub
pop
mov
popf
arpl
cmp
mov
xchg
push
cmpsl
xbegin
pop
jno
push
and
mov
and
mov
fistps
jbe
inc
sub
and
das
lret
or
adcb
push
cld
repz
mov
repz
movsl
xor
dec
mov
xchg
aad
pop
mov
lret
aas
shrb
ja
jp
outsb
jb
xchg
cmp
inc
pop
sahf
int3
pop
std
mov
in
inc
sub
ds
inc
imul
sbb
call
inc
pop
inc
or
lea
fs
addr16
in
popf
dec
sahf
jge
stos
push
mov
mov
push
aas
mov
lock
fisubrl
push
push
cli
clc
jmp
jp
add
in
insb
movsb
lret
mov
sbbb
adc
dec
xchg
cmp
dec
pop
inc
jbe
lods
mov
ret
inc
fildll
pop
pop
rcrb
ss
call
cmpxchg
adc
xor
sbb
add
mov
pop
pushf
jge
cmpsb
clc
ret
and
negb
fs
pop
cmp
dec
xchg
add
push
sbb
push
push
xchg
test
cwtl
jae
scas
lahf
into
dec
outsl
xlat
cmp
into
sbb
ja
outsb
shlb
fcompl
ds
imul
in
jg
in
pop
mov
sub
xlat
and
inc
loop,pn
mov
mov
xchg
setle
loopne
mov
xor
mov
jne
jl
sbb
sbb
jns
int3
and
stos
bound
stos
pop
jg
arpl
xchg
imul
adc
das
js
aas
out
aas
stc
adc
push
cmpsl
aas
push
insl
mov
and
sbbb
mov
mov
xor
mov
inc
mov
jbe
std
sbb
popf
sub
sbb
xor
push
out
dec
in
push
push
bound
clc
mov
cmp
push
pop
jbe
xor
je
and
or
sub
das
mov
sub
adc
movsl
insb
add
lds
lock
push
das
mov
popl
ret
outsb
mov
mov
push
push
fcmovnu
ficomps
add
ret
and
mov
inc
negl
fs
push
in
mov
or
and
idivb
lahf
icebp
xor
xor
mov
adc
xchg
cmp
mov
lods
leave
rcll
jae
lock
dec
fcmovnbe
in
mov
and
mov
inc
sti
lods
aad
and
push
out
lods
scas
sbb
out
std
dec
insl
lods
lret
shlb
popf
stos
xchg
mov
sub
mov
adc
lahf
loope
mov
add
cmp
jp
scas
clc
mov
hlt
jle
test
popa
mov
mov
lcall
jge
cmc
and
sub
out
stos
pop
arpl
ud1
mov
mov
jp
fidivrl
mov
jmp
xchg
ficomps
push
jo
cwtl
lock
ja
in
pop
xor
test
fildl
push
sub
shrl
in
add
xchg
xor
iret
push
loop
cmp
scas
mov
pop
aas
rcr
pop
scas
pop
jb
or
addl
ficomps
scas
push
stc
xor
xchg
push
ljmp
xchg
inc
push
xchg
adc
scas
sbb
hlt
jae
pop
mov
push
movsb
fwait
cmp
cmp
xchg
add
and
inc
sub
shll
push
hlt
negb
clc
gs
sti
jecxz
aad
cs
das
inc
or
out
jle
cmp
mov
xor
test
xor
add
imul
pop
loope
add
ja
push
outsb
and
push
sbb
dec
jnp
or
mov
sub
or
sti
js
mov
jg
lds
mov
push
add
gs
mov
cmp
mov
dec
mov
movsb
sahf
inc
testl
ljmp
mov
cmp
push
subb
pop
mov
push
mov
fwait
xlat
sbb
repz
dec
cltd
xlat
mov
cmp
pop
shll
and
adc
orb
arpl
rorl
popf
add
inc
mov
dec
pushf
ror
sbb
lock
jle
cltd
repnz
jns
sub
pushf
leave
scas
or
dec
push
stos
dec
sbb
push
rclb
xchg
faddl
lea
cli
in
movsb
jo
int3
int3
mov
jmp
outsl
lret
repnz
jne
std
icebp
int
xor
pop
xchg
pop
pop
xchg
sub
icebp
and
mov
adc
jp
mov
adc
mov
and
cmpsb
adc
pop
jns
lds
andl
and
lret
icebp
mov
inc
mov
push
pop
js
xor
inc
mov
add
jmp
jecxz
iret
fidivl
mov
add
test
and
dec
inc
add
mov
and
les
mov
shlb
insb
stos
roll
cmp
mov
stos
add
xchg
or
sub
mov
xor
jbe
insl
cmp
dec
std
in
cmp
lods
and
mov
mov
fildl
ret
out
mov
popf
fwait
jp
fwait
cmp
idiv
addl
dec
insb
loopne
adc
rcll
push
outsl
push
push
ss
enter
jns
ss
pop
dec
enter
jmp
and
scas
nop
mov
gs
sti
add
fisubrl
adc
outsl
out
push
jno
cmp
test
and
js
iret
dec
xor
xchg
dec
mov
cmp
jge
cmp
popf
out
out
mov
aad
cmp
lock
mov
mov
adcl
xchg
push
xchg
sbb
movsl
mov
outsl
mov
mov
push
push
pusha
enter
or
and
lea
fldcw
adc
or
pop
ficompl
mov
pop
and
pop
movsb
cmpsb
add
stos
into
repz
lret
mov
xor
or
outsb
or
inc
xchg
dec
pushf
and
fldenv
mov
hlt
gs
or
sub
xadd
int3
push
push
data16
pop
out
sub
lds
push
test
ficompl
ljmp
or
xchg
sbbl
jmp
stc
jmp
es
fcmovnb
clc
test
and
pop
clc
testb
call
leavew
mov
or
mov
cwtl
cmp
ret
xchg
sti
sbb
and
lods
fst
orl
pop
mov
cmc
orl
out
xlat
mov
jg
push
loop
mov
push
or
xor
shrl
scas
rorl
lds
and
fiaddl
adc
js
iret
das
out
repnz
adc
orl
jne
inc
cmp
xor
push
imul
mov
jg
cmp
push
test
repnz
jne
ljmp
push
cmp
fnsave
add
loop
inc
mov
repnz
push
xchg
jg
sub
add
push
mov
dec
call
pop
adc
dec
adc
mov
ja
jl
xor
dec
jnp
subb
bound
mov
bound
inc
rorl
adc
xchg
xchg
sub
out
movsl
sbb
sub
and
jmp
or
inc
popf
in
xchg
add
cmp
ss
ljmp
jg
sti
cmc
jno
sbb
cs
inc
mov
fidivrl
sub
loope
imull
scas
inc
fldcw
repnz
xchg
inc
rorb
xor
xchg
mov
mov
push
addl
pop
xchg
dec
cld
push
into
divl
xchg
add
adc
aaa
shrl
sti
lret
pusha
xchg
pop
in
jle
xchg
test
fisttpll
lea
int3
pop
movsb
sbbb
dec
push
notl
cmpsl
int
pop
push
lds
mov
jae
cmpl
jge
mov
sbb
shlb
hlt
xor
test
push
cmp
test
test
lahf
and
outsl
sbb
mov
vpmaddwd
dec
and
subb
inc
repnz
and
dec
jb
rcrl
pop
into
fwait
inc
pop
pop
adcl
mov
divb
xchg
lret
jl
lret
loop
inc
xor
xchg
loop
push
mov
push
clc
xor
push
push
sarl
mov
jnp
arpl
pop
or
mov
cvtdq2ps
jl
sbb
shrb
adc
ret
dec
mov
loopne
push
das
dec
add
xor
mov
push
cltd
cmpsl
inc
mov
cld
enter
insl
fnstsw
mov
pop
clc
aad
imul
out
ficoms
cs
xcrypt-ctr
cmpsl
popf
mov
int
push
push
jne
or
mov
mov
mov
lret
aam
dec
xor
loop
mov
repz
mov
fwait
in
imul
je
mov
sti
data16
and
jns
mov
jae
pop
mov
xor
add
mov
and
sub
jp
dec
cmp
inc
stos
das
icebp
xchg
mov
nop
jge
cmc
loopne
push
pop
test
xor
jns
and
jne
sbb
testl
xchg
push
das
sub
bound
cmpsb
dec
ja
jle
add
gs
xchg
adcb
and
scas
sbb
movsb
stc
das
fsubs
jle
push
stos
mov
cld
stc
into
cmp
bound
icebp
mov
xchg
popa
or
cmpb
arpl
je
xor
gs
stos
pop
repz
inc
call
clc
mov
rcll
push
fnop
add
or
sub
stos
xchg
xchg
lcall
cmp
jmp
aad
pop
mov
add
mov
add
adc
pop
mov
ret
mov
out
push
add
mov
xchg
dec
dec
js
jb
xor
shlb
mov
xchg
mov
sub
int
inc
jno
pop
jle
mov
push
xor
repz
sub
add
lds
or
cli
jno
pop
mov
xchg
mov
xchg
rcrl
fs
jno
frstor
ds
mov
fsub
movsb
mov
mov
std
mov
punpckhdq
mov
bound
pop
mov
cmp
movsl
pop
sub
insl
sbb
outsb
fldl
xchg
es
dec
mov
sub
es
pop
xchg
dec
imul
sar
pop
sub
nop
int
xchg
mov
xchg
dec
and
xor
or
insl
mov
inc
loop
and
das
mov
cs
pop
into
loop
pop
les
or
dec
push
dec
jl
cwtl
lds
mov
decb
popf
test
nop
mov
cmc
cltd
test
ss
enter
jge
mov
xchg
xor
jbe
rolb
xor
and
push
and
ljmp
mov
sbb
lds
xor
or
pop
push
jb
xlat
cmpsb
out
lahf
aaa
stos
ljmp
mov
call
je
mov
sbb
xor
mov
mov
push
fildll
jle
inc
cs
add
mov
decb
out
repnz
jge
leave
aam
push
xchg
adc
inc
mov
dec
or
dec
lock
mov
sub
loop
mov
or
jl
push
mov
insl
cmpsb
cmpl
or
jns
outsl
jae
mov
mov
lods
xor
icebp
gs
mov
mov
popf
imul
sti
aad
mov
sbb
stos
js
push
lret
jb
pop
mov
sub
sbb
cmp
pop
dec
test
lds
pop
movsl
lods
and
fmull
loop
fists
jl
inc
hlt
mov
cmp
mov
popl
and
incb
push
inc
aam
sub
sarl
mov
jb
iret
lock
cmp
clc
jl
add
pop
push
jge
jne
ret
aad
adc
cltd
pop
jecxz
push
mov
cmp
jg
ret
rcll
ss
sbb
inc
daa
aaa
mov
ja
mov
outsl
xchg
xor
les
pop
and
jmp
or
mull
add
cld
or
hlt
ret
sbb
pusha
and
out
xchg
push
pushf
pop
popa
add
in
cltd
or
push
xchg
adc
xlat
jo
icebp
popf
push
in
xorl
je
or
arpl
sar
sti
dec
dec
lcall
loop
xor
mov
outsl
inc
cmp
leave
inc
arpl
js
xchg
push
or
pop
pop
js
fwait
xchg
icebp
fsub
out
push
inc
or
xor
jne
xor
and
push
dec
sbb
ficoms
inc
adc
xchg
lcall
sahf
push
aad
mov
inc
in
rcll
jnp
and
test
roll
xchg
mov
movsl
xchg
pop
insb
cmp
rolb
test
fstpl
jb
cs
jae
mov
mov
jg
sub
lahf
out
lock
lods
add
xchg
iret
xchg
sbb
das
pop
and
loopne
jecxz
lock
mov
jae
lcall
mov
push
xorb
enter
mov
cwtl
repz
and
cmp
xchg
adc
loopnew
xor
jecxz
pop
pop
je
scas
andl
adc
or
lds
hlt
push
or
xor
les
jo
lahf
xchg
sub
nop
add
and
mov
std
mov
pushf
mov
stos
and
in
xchg
scas
jecxz
sbb
sub
mov
jbe
or
add
out
cmpsl
adc
dec
aaa
rorb
popa
pusha
mov
loopne
ss
into
je
negl
dec
jp
or
pop
adc
pop
sbb
jne
das
mov
jo
daa
in
aad
mov
loop
loope
movl
dec
dec
sbb
lret
je
test
and
and
jno
mov
jo
sbb
and
dec
enter
mov
popf
je
shll
aad
inc
cli
icebp
push
jne
cmpsl
hlt
push
shl
shrl
fstps
jne
cs
adc
dec
lret
scas
xor
in
icebp
jmp
pop
inc
scas
and
add
dec
test
loopne
push
dec
js
dec
test
repz
out
addr16
call
sbb
pop
inc
add
dec
sbbl
and
nop
cmp
test
sub
dec
pusha
aad
xor
ret
mov
aad
push
jecxz
push
insl
xor
movsl
pop
pop
es
push
fdivrl
push
sub
divps
cld
or
out
in
cmp
aad
outsl
test
notb
paddd
pusha
pop
dec
dec
jg
movsb
mov
push
shr
pop
into
cmp
sbb
inc
sbb
add
stc
test
ds
pop
scas
jl
mov
in
out
xchg
negb
sbb
ret
lahf
push
and
insb
pop
testb
cmpsl
fwait
movsb
lahf
ss
in
and
or
lea
or
mov
sbb
jbe
cltd
hlt
xchg
orb
inc
adc
push
sbb
cmpsl
push
mov
out
add
and
pop
cmpl
arpl
pop
outsb
jae
inc
add
add
lret
out
test
lret
sti
mov
xchg
lods
inc
xor
ucomiss
mov
inc
dec
push
xor
ja
insl
mov
xchg
cmp
pop
sub
add
xor
jmp
aaa
and
hlt
adc
bound
mov
and
cmpsl
cmp
sub
icebp
es
push
lods
sub
dec
mov
movsb
icebp
mov
mov
in
rcrb
dec
pop
mov
adc
or
mov
jno
mov
cmpsb
push
adc
jp
adc
mov
rorb
xchg
lods
aas
xchg
stos
mov
adc
adc
lret
lock
cmc
fwait
inc
je
rorb
and
xchg
outsl
je
jecxz
stos
add
arpl
xor
fcomp
sbb
enter
mov
or
rcl
inc
lcall
sub
and
push
mov
out
sub
cld
int3
rclb
mov
nop
jl
popa
mov
loopne
sbb
sti
lcall
dec
movsl
mov
lret
xchg
xchg
cwtl
loope
stc
push
sahf
dec
pushf
stc
in
hlt
aaa
or
movsb
sbb
fnstcw
mov
loop
dec
pop
pusha
fldt
pushf
xchg
mov
dec
les
repnz
popa
bound
in
movsl
add
stc
std
pop
sbb
or
xchg
adc
fistl
cwtl
out
inc
xor
xchg
add
mov
cmp
test
xor
pop
dec
mov
scas
lcall
movsb
or
mov
fld
in
rol
cs
loopne
int3
add
mov
sbb
jb
sbb
sbb
push
inc
jg
jae
pushf
mov
lcall
fisubl
jns
sbb
or
dec
push
fcmovbe
adcl
cmp
adc
inc
jl
push
mov
xor
out
nop
mov
fscale
mov
xorb
mov
sub
or
xor
jne
and
xchg
pop
jle
add
les
sahf
insl
movsb
adc
xor
lret
fisubs
lahf
mulb
sbb
inc
push
mov
adc
sti
test
movl
lods
pop
mov
jno
pop
fnsave
jnp
sbb
inc
jne
cmp
in
and
arpl
xor
mov
mov
mov
or
in
cmpsl
xor
push
mov
stc
adc
in
inc
cmpsl
imul
stos
ret
pop
stos
jp
push
testb
cmpsb
mov
sub
cmpsl
cmpsb
imul
pop
in
test
cmp
rorl
nop
stos
insb
leave
pop
outsl
out
cmc
enter
sbb
inc
insb
jne
adc
mov
hlt
add
jne
out
mov
lahf
stc
jmp
push
std
inc
imul
ds
jbe
stos
adc
inc
test
mov
mov
imul
mov
push
adc
add
cmc
pop
inc
mov
pop
or
push
ret
adc
loope
lret
mov
stos
insl
dec
fisubrs
mov
and
lea
and
push
and
lret
pop
stos
xor
push
lret
push
jbe
push
push
cmc
or
add
xor
daa
cmpsb
or
gs
jp
mov
push
push
aam
in
lds
mov
xor
out
mov
iret
outsb
mov
push
push
test
push
pop
push
or
and
push
cmp
addb
loopne
or
pushl
xchg
pop
mov
push
sub
mov
jge
mov
jg
sahf
fistps
pop
fwait
sub
dec
sub
in
imull
add
icebp
cmp
out
cwtl
sub
pop
sub
addl
mov
inc
push
push
mov
xor
popf
mov
stos
sub
add
jl
dec
out
dec
mov
pusha
pop
sti
andb
pushf
adc
mov
dec
push
popl
pop
inc
dec
jmp
mov
adc
stos
clc
mov
push
push
lods
mov
inc
push
sub
arpl
stc
mov
arpl
std
jg
cmp
pop
rcr
in
jns
jns
negl
add
es
cmpsl
cwtl
xchg
or
mov
lret
xor
and
fwait
rcrb
dec
cmpsl
mov
addr16
aad
or
push
je
jge
add
or
fwait
xor
sbb
imulb
sbb
mov
les
popf
test
out
sbb
cmc
push
sahf
dec
scas
push
adc
jle
jmp
call
dec
dec
or
or
dec
daa
pop
jnp
jne
mov
ret
jecxz
mov
fiaddl
stos
sub
or
cld
movsb
push
cli
inc
cld
push
and
inc
in
fsubp
jg
push
movsl
int3
out
cmp
or
inc
fs
leave
mov
mov
lods
jecxz
jl
adc
shr
mov
xor
lds
add
ss
es
adc
adc
js
pop
fcoml
xchg
stos
xorb
push
inc
movsb
dec
roll
iret
dec
push
test
fwait
mov
cli
imul
popf
rorb
lods
fsub
push
and
cmp
inc
inc
mov
aaa
rdmsr
jae
jae
or
jns
xchg
mov
jae
push
inc
pop
jbe
cs
dec
shll
mov
mov
call
imull
outsl
inc
adc
lahf
adc
mov
rcll
cmp
cmpsl
jl
or
sub
arpl
cmp
fdivs
out
pop
mov
clc
testl
add
jb
ret
add
outsl
mov
mov
or
jb
inc
pop
xor
addb
lods
pop
xlat
pop
xor
aad
imul
mov
xchg
xchg
stc
pushf
mov
lds
mov
sbb
in
mov
dec
add
loopne
add
out
mov
scas
jle
out
nop
and
shlb
adc
test
aad
scas
jnp
xchg
dec
rcll
cmp
pushf
int
inc
pop
inc
loop
test
movsl
xchg
aas
pop
xchg
or
les
mov
hlt
je
or
mov
clc
ja
fs
outsb
bound
gs
cmp
test
sbb
std
jo
fs
ret
fs
cld
outsb
sbbl
or
imul
bound
aam
and
push
xchg
dec
push
mov
xchg
lret
bound
inc
and
jb
cmp
enter
inc
mov
mov
push
sub
pop
pop
loop
lret
ret
ja
or
iret
cmpl
pop
jb
cs
push
push
mov
ret
imul
sbb
in
js
mov
in
cmpsb
cmpsl
xlat
sbb
fwait
pop
sbb
sub
stc
icebp
fcoms
loop
dec
imul
fcmovu
mov
ja
insl
adc
and
dec
inc
inc
popa
ret
sbb
jno
out
dec
icebp
aaa
push
scas
dec
pop
das
ljmp
loop
push
push
rep
inc
push
clc
mov
insb
sub
cli
add
out
or
gs
cmp
or
sbb
sahf
pusha
ficompl
ret
std
popf
loop
push
adc
dec
inc
add
stos
cmpsl
push
push
cmc
nop
mov
sub
ds
out
push
mov
jl
dec
inc
add
jno
repz
cltd
pushf
dec
outsl
sbb
roll
xor
outsb
mov
jge
pop
dec
add
jl
mov
adc
sub
fsubrs
mov
faddl
sbbb
inc
mov
addr16
pop
jecxz
cmp
xorb
jns
lret
inc
out
sahf
shlb
xlat
xchg
sbb
fldcw
inc
dec
shlb
lods
cmp
jmp
push
stos
and
add
cmpb
outsb
out
mov
mov
loope
adc
out
mov
ss
test
sbbb
jae
cmp
ficoms
jl
mov
cli
dec
inc
mov
jne
out
or
outsb
movb
loope
stos
xchg
sub
std
icebp
xor
shrb
idiv
jno
ret
adc
and
imul
imul
mov
mov
push
cmpsb
negb
pop
pop
add
loope
shrd
xchg
mov
stc
pushf
imul
out
pop
hlt
or
inc
adc
jns
push
adc
xlat
int3
fwait
inc
mov
mov
mov
inc
in
in
inc
in
inc
xlat
dec
mov
sub
testb
aas
movsl
ja
xlat
xor
imul
cmc
push
jae
cmp
cmpsb
jno
and
int3
loope
sub
lods
mov
dec
scas
insl
mov
add
imul
pop
cmp
arpl
scas
rorl
insl
push
fnstenv
pop
jl
pop
sbb
or
sbb
movsl
add
or
sbb
cmpsl
inc
mov
test
repnz
sbb
popa
test
into
pushf
jb
fisubs
pop
push
push
lret
xchg
or
jmp
dec
cmpsb
xchg
fnstsw
inc
cmp
movsl
cmp
popa
push
test
and
xchg
divb
call
testl
icebp
lods
mov
mov
stos
repz
push
je
in
jo
fiaddl
mov
mov
push
xchg
in
jge
pop
lcall
jecxz
es
cld
push
outsb
xchg
std
xlat
imul
adc
sbb
push
push
nop
mov
aaa
sbb
es
fildl
jne
pop
or
aam
jl
aad
rorl
jg
mov
fidivl
xor
das
mov
inc
inc
or
jno
sahf
sub
leave
das
push
mov
jnp
ljmp
shr
pop
in
sub
movsb
nop
loop
mov
adc
jbe
mov
fwait
rorb
adc
xchg
mov
jo
hlt
addl
sbb
xor
imul
out
pop
ljmp
fcomps
test
clc
sbb
ret
mov
pop
or
cmpsb
js
out
mov
clc
jl
pop
and
xchg
out
aaa
sti
aaa
push
push
xchg
popf
push
cld
push
out
int3
test
push
jnp
js
out
fwait
sub
sbbb
pop
push
std
bound
cwtl
ret
pop
inc
cld
lock
xchg
lods
mov
mov
cmp
imull
xchg
arpl
mov
xor
pushf
pusha
aaa
cmp
dec
cmc
pop
stos
mov
or
mov
lret
and
lret
sbb
adc
js
aam
jbe
add
jnp
mov
mov
test
mov
mov
lret
sub
xor
ror
xchg
ret
mov
lea
bound
sbb
or
mov
clc
push
popf
mov
lret
pusha
jp
inc
mov
xlat
fwait
mov
cli
ficoms
cs
pop
inc
jbe
mov
xchg
adc
lock
adc
xchg
pop
fcomps
jmp
mov
das
imul
insl
insl
xor
inc
cwtl
pop
lret
fwait
sbb
inc
mov
xchg
lret
popf
dec
mov
cmp
push
xor
jne
cmp
aaa
inc
in
xchg
push
fsubs
sub
jbe
push
xor
sbb
mov
gs
incb
jne
or
xor
subl
dec
xlat
call
push
loop
mov
xchg
ret
inc
and
incb
cmp
outsl
jle
jb
popf
test
and
mov
sahf
jnp
adc
inc
cmp
ret
arpl
add
inc
xor
lods
lret
addl
rcrb
inc
sbb
mov
data16
rep
push
pop
loop
and
jno
sbb
mov
sahf
lret
sahf
loope
and
xchg
cmpl
pop
scas
push
lcall
lea
cmp
gs
adc
xchg
jecxz
mov
or
inc
xor
sbb
mov
inc
jbe
mov
add
iret
lea
cmp
rol
sub
lods
push
cmp
xchg
pop
pop
pushf
flds
sti
add
push
xchg
loop
add
lds
and
stc
sub
sahf
mov
mov
xor
sub
mov
insb
push
fdivrl
repz
out
or
packsswb
push
dec
add
int
icebp
movsb
or
and
into
xchg
mov
sti
icebp
pop
mov
sub
aad
scas
inc
add
push
nop
sub
les
xlat
inc
je
sahf
das
inc
inc
out
cmp
and
adc
add
mov
sbb
dec
test
mov
mov
out
lret
lahf
ret
push
cmp
sub
mov
lods
cwtl
out
xchg
push
rcrb
cmp
outsb
xlat
lret
int3
jbe
or
mov
in
xchg
outsl
jb
xor
jne
xchg
xchg
sbb
pop
cmc
pop
aas
and
pop
dec
lcall
adc
push
and
in
sub
in
mov
test
test
push
cmp
add
pop
adc
fistps
push
adc
call
mov
push
out
xorb
inc
xchg
xorb
lcall
sub
cmp
push
mov
std
mov
scas
or
pop
repnz
mov
pop
iret
out
clc
jne,pt
in
mov
push
test
shl
xor
rorl
lret
mov
out
int
mov
cli
xchg
rorl
mov
jecxz
mov
add
imul
ret
subb
xchg
lea
fistps
cmc
test
dec
dec
cmpsl
and
jmp
push
stos
loop
sub
stos
mov
sub
lods
movsb
cltd
dec
cmp
mov
sub
xor
jp
sbb
pop
jae
adc
adc
das
mov
pop
rcll
xsaveopt
sbb
in
or
lret
sti
dec
aas
jne
mov
adc
fisubs
enter
hlt
cmc
loope
rcr
jmp
xor
cmpb
pop
push
cmp
sbb
sbb
int
inc
push
adc
js
or
mov
popa
xor
pop
pop
inc
sbb
cmp
daa
mov
dec
xchg
add
aaa
gs
shl
jecxz
sbb
leave
inc
dec
lds
pop
dec
push
jns
mov
mov
pop
xchg
into
jno
leave
into
mov
jmp
lock
shll
lock
cli
sbb
jmp
cmp
mov
ror
cld
pop
mov
in
lds
stos
movsl
jae
inc
sti
rcl
mov
pop
and
xor
fistps
inc
pop
or
aam
or
lcall
dec
jae
push
jb
in
lret
insl
loopne
aad
mov
mov
lock
sub
clc
adc
push
or
nop
lock
repnz
repz
cmp
dec
int
xchg
mov
sbbb
jmp
push
cltd
lcall
pop
das
push
sahf
sahf
mov
loopne
nop
mov
in
pop
fwait
test
imul
in
push
fcompl
adc
xor
sub
mov
sub
in
pop
sbb
mov
in
cmp
sub
faddp
enter
pop
adcb
and
pop
push
add
xor
int
xor
push
call
push
dec
enter
andl
and
push
aad
mov
xor
sub
test
shlb
push
int
pusha
imul
bnd
push
and
ret
mov
cmp
lret
js
filds
mov
or
gs
pusha
popa
ror
adc
inc
arpl
dec
push
loop
push
adc
das
jl
pop
jb
mov
cmp
fisttps
lods
mov
mov
outsl
fsubr
stc
ja
ja
pop
stc
mov
jno
shll
not
leave
orl
sub
scas
notl
les
icebp
or
aad
and
cmp
ja
mov
repz
mov
and
push
jle
scas
xchg
jp
aaa
inc
iret
in
into
fwait
test
lret
dec
inc
sub
xor
movsl
jnp
xchg
sbb
mov
push
fidivrs
mov
ljmp
push
mov
iret
pop
cmp
mov
mov
scas
sub
and
lods
mov
sbb
lock
jmp
jbe
scas
mov
or
inc
mov
adc
and
jle
mov
shrb
repz
movsb
daa
rorb
call
sbb
or
mov
mov
into
arpl
clc
jp
add
mov
add
out
sbb
out
lahf
stc
outsb
mov
imul
mov
xchg
lods
cmpsb
cmc
mov
push
shlb
jecxz
ss
sbb
and
sbb
cmp
mov
and
cwtl
fcomps
jo
pop
sub
mov
sti
fst
rclb
or
sub
lahf
repnz
cmc
roll
test
push
out
roll
mov
fsubs
shrl
adc
cmp
es
or
and
add
pusha
inc
repnz
test
xorl
in
loop
mov
cmovae
mov
out
mov
mov
push
sub
sbb
dec
push
out
fildl
pop
sbb
insl
ror
xchg
in
outsb
jecxz
sbb
gs
imul
pop
jo
pop
mov
je
push
or
add
stos
test
xchg
jg,pt
push
fsts
das
in
sub
add
inc
add
int3
into
stos
xchg
cmc
leave
jecxz
dec
loop,pt
shll
pop
int
loope
rcl
int3
popf
stc
or
les
out
mov
jle
push
or
adcb
int
fsubrs
pop
nop
pop
xor
jne
popa
pop
push
or
add
push
outsl
sbb
pop
daa
mov
cmp
jge
test
jle
mov
xor
mov
xchg
ljmp
dec
movsb
fld
sbb
js
and
stos
into
fwait
mov
or
pop
and
or
or
lret
inc
stos
mov
fcompl
cmc
adc
jmp
push
data16
pop
stos
or
in
or
pusha
mov
leave
xor
ret
std
insl
add
pop
xchg
outsl
xchg
inc
scas
adc
sbb
test
sbbl
xchg
test
jmp
lock
fs
ret
scas
sub
mov
cmpsl
mov
test
jo
xchg
push
add
pop
pop
pop
cmp
cmp
pop
mov
push
cmp
outsb
clc
pop
pop
mov
push
inc
push
add
mov
and
push
movsb
inc
mov
dec
dec
mov
xchg
jnp
lods
cmc
mov
fldenv
aaa
inc
stos
mov
xchg
cmpsl
stos
outsl
xchg
test
outsb
in
xchg
bnd
add
and
push
jge
xchg
mov
xchg
jae
push
gs
push
pop
add
cmp
xorl
cmpsl
roll
xor
lds
imul
mov
gs
add
jne
mov
std
in
xor
shl
stc
add
movsl
pop
fstl
insl
je
sahf
pop
movsb
pop
jbe
mov
xchg
cmp
pop
pushf
xor
xor
fildll
test
mov
dec
push
sub
add
jle
pop
mov
shrl
adc
xorl
sub
push
leave
fs
jae
popa
out
and
xchg
mov
mov
jne
cltd
cmpsl
mov
push
push
leave
mov
stos
pop
pop
push
mov
and
jge
sbb
sbb
aas
psubq
inc
daa
repz
dec
mov
cmp
mov
jmp
test
enter
mov
xor
hlt
aad
pop
ljmp
aaa
stos
pop
pop
push
leave
adc
or
lret
iret
xchg
adc
sti
aad
sbb
pusha
push
jne
arpl
sbb
mov
fsubs
mov
mov
dec
scas
ds
push
mov
iret
jle
cmpb
dec
push
cmp
aad
pop
xor
sub
jmp
cmp
rolb
xor
sahf
sub
and
shlb
cld
leave
fstps
sbb
and
pusha
pop
jbe
cwtl
iret
shrl
push
pusha
pop
stos
stc
inc
xchg
mov
mov
mov
push
shlb
fdivl
push
sub
in
inc
push
les
sbb
dec
dec
loopne
push
sahf
mov
mov
jne
icebp
xor
push
sbb
and
add
lock
xchg
pop
add
cmp
push
xchg
pop
jg
dec
mov
xchg
sbb
mov
cltd
dec
and
in
xchg
jb
mov
sub
pop
clc
push
stos
dec
movsb
loope
std
imul
sub
push
scas
fs
fldcw
fcompl
and
add
cmpsb
or
adc
jecxz
adc
pushf
push
and
cmp
mov
xchg
pop
lock
leave
push
pusha
hlt
fisubs
push
mov
bound
add
dec
sbb
or
mov
fwait
jle
jmp
pop
sbbl
xlat
in
jne
mov
enter
pop
orb
sub
aam
cmp
mov
xlat
push
shll
or
int
mov
fiadds
inc
mov
stos
sbb
test
or
add
data16
clc
outsl
xor
sub
inc
mov
dec
cs
mov
mull
ret
aad
and
icebp
mov
adc
test
sbbl
sbb
inc
jl
clc
dec
inc
sahf
mov
shll
shll
cs
sti
xlat
xchg
cmp
mov
add
sub
aas
leave
and
aaa
mov
idivl
sub
int
push
outsl
into
mov
pop
pop
bound
stc
mov
cmpsb
gs
jne
inc
scas
lods
adc
dec
cwtl
cmp
xchg
fimuls
movsl
lret
dec
lahf
mov
loopne
repnz
leave
and
xor
pop
cmp
into
push
arpl
jg
mov
das
lods
aad
add
lock
call
scas
or
call
daa
in
pop
cmp
hlt
push
ucomiss
data16
fs
xor
xor
mov
out
mov
sub
ljmp
mov
pusha
adc
xchg
test
mov
fldcw
push
push
or
push
cli
pop
jne
inc
jg
insl
push
arpl
add
mov
adc
addr16
or
push
fcompl
jo
das
and
xor
icebp
push
int3
sti
lret
mov
mov
arpl
fidivs
lret
cmp
loopne
sbb
test
aas
in
mov
jmp
add
mov
sub
ret
inc
adcb
mov
dec
cmp
push
dec
dec
movsb
dec
and
xor
outsb
mov
stos
jae
into
cwtl
enter
jge
mov
mov
ffreep
stos
fcoms
mov
notl
addb
mov
inc
push
imul
in
out
xchg
out
add
xor
mov
xlat
mov
insl
push
mov
nop
pop
ltr
gs
addr16
stos
repz
enter
cmp
pop
andl
cmc
adc
ljmp
mov
mov
lcall
pop
add
fists
mov
dec
pushf
pop
loope
outsl
ljmp
mov
jb
xchg
xchg
and
bound
add
or
or
inc
add
inc
out
iret
xchg
shrl
pusha
orl
test
out
imul
std
scas
test
mov
xchg
xor
sbbb
mov
xchg
pop
add
pop
es
jns
mov
cmc
xor
push
dec
dec
pop
loopne
fdivs
ljmp
mov
cs
mov
fwait
test
mov
lcall
repnz
je
mov
dec
mov
lret
jp
popf
xchg
in
pop
mov
xchg
mov
dec
push
xor
lret
popa
jp
jne
inc
cmpsb
jle
mov
pusha
jbe
sub
adc
mov
fcmovnu
and
and
pop
pop
outsl
rcr
stos
outsb
jecxz
mov
testl
pop
and
mov
xchg
mov
mov
lods
in
sbb
mov
sbb
adc
or
fcomip
push
push
xor
sub
sbb
mov
leave
mov
jg
outsl
into
xchg
aam
inc
dec
js
xlat
dec
out
fsubs
rcrl
sbb
pop
scas
xor
jg
pop
xor
daa
cwtl
jbe
jb
mov
test
jbe
xchg
popf
mov
pop
in
hlt
jp
iret
icebp
inc
dec
xor
sbb
inc
aad
mov
mov
aas
adc
movsb
das
push
arpl
iret
mov
push
xor
lods
mov
push
push
mov
push
cmc
pop
sub
push
or
icebp
xlat
and
adc
push
push
stos
insl
push
jne
push
sbb
mov
or
leave
xchg
test
xor
pop
jecxz
pop
xor
or
shll
mov
jo
ljmpw
fisttpll
ret
movsl
int
sti
mov
cmp
fistpl
in
mov
pushf
imul
sub
loop
cmp
jle
bound
out
add
inc
out
aas
aas
cmp
dec
int3
lds
jns
push
or
scas
xchg
fisttpll
aad
dec
js
mov
popf
popf
inc
push
cmp
lea
sbb
jmp
push
loope
or
das
ret
pop
sti
into
mov
lahf
push
xor
cmc
dec
dec
push
negl
jns
fsubrs
jge
inc
test
dec
add
add
lret
js
enter
sub
bound
push
out
xchg
repz
repz
cld
adc
push
out
jae
scas
adc
cmpsl
int
push
add
lods
scas
inc
fidivrl
xchg
cltd
nop
das
or
dec
ljmp
push
or
jmp
jnp
test
ja
jno
ja
loope
pop
cmp
or
mov
dec
jo
loop
aaa
cmp
insb
pop
sbb
jnp
mov
or
mov
cltd
mov
test
adc
push
loope
mov
dec
sar
sub
xchg
sbb
insb
stos
dec
imul
mov
scas
aaa
outsb
adc
outsl
push
daa
mov
push
mov
jge
dec
inc
or
ja
xor
push
out
testl
call
or
push
push
aam
cs
bound
sbb
xchg
lret
das
lcall
add
and
adc
call
xor
dec
ret
scas
and
in
hlt
insl
add
mov
mov
push
shll
in
aaa
int3
lock
xlat
aaa
hlt
pushl
addr16
daa
fimull
out
cwtl
push
sti
mov
add
pusha
stc
shll
lahf
lock
sbb
data16
mov
outsl
or
push
std
jecxz
sub
fmuls
lock
xchg
ss
push
loope
sub
xchg
pop
lock
jg
sbb
pop
lods
dec
cmc
dec
repz
push
mov
popf
sub
xchg
pushf
and
lcall
push
lods
repnz
mov
cmp
cmp
jns
add
jb
jne
add
arpl
mov
sti
pop
xchg
xchg
out
push
imul
add
xor
jp
js
lahf
pop
push
loope
push
xchg
hlt
jb
stos
mov
push
adc
ds
loope
mov
std
cli
pop
mov
lret
ja
idivb
inc
test
pop
dec
pop
clc
stos
lods
addr16
subb
pop
add
push
arpl
push
mov
mov
add
addb
imul
mov
push
bound
call
pop
mov
in
leave
stc
push
jns
out
cmpl
loopne
loopne
add
push
lds
jnp
push
dec
lret
inc
das
xchg
push
jbe
cli
and
push
add
out
ret
and
lret
mov
xor
fwait
inc
push
lret
adc
popf
pop
outsb
cmp
mov
cmc
popa
jecxz
rclb
in
jle
in
xor
mov
orb
jl
rcrl
mov
jge
mov
jl
mov
nop
sub
pushf
into
cltd
aam
push
fstps
lahf
cld
mov
in
pop
dec
jne
cwtl
xchg
xor
cwtl
fadds
pop
add
fidivl
xor
int3
mov
les
out
sbb
lock
lods
adc
mov
jmp
repnz
scas
aas
inc
shlb
movsl
out
ss
sarl
inc
loop
inc
cmpsb
aad
iret
mov
lea
in
add
mov
sub
xchg
cmp
push
sub
nop
cltd
sub
jbe
jecxz
cmc
subl
clc
jne
xor
sub
popa
stos
movsl
fbstp
push
nop
inc
sahf
cmpsl
pushl
and
adc
mov
call
adc
loope
xchg
push
bndldx
das
cld
negl
in
jmp
and
adcl
orb
inc
mov
clc
aaa
mov
int
xchg
or
enter
fwait
popa
pop
shrl
dec
inc
addb
or
or
lea
pusha
clc
mov
fwait
mov
xor
inc
mov
push
cmp
inc
mov
add
add
jp
cltd
sbb
sub
jge,pt
xor
pop
mov
adc
lret
inc
mov
nop
pop
sti
dec
pop
gs
pop
jne
push
sub
out
cmp
mov
adc
jns
xchg
leave
push
adc
dec
sub
dec
pop
aaa
push
or
fldl2t
push
lcall
shr
cs
test
movsl
jns
aad
cmp
in
pop
in
mov
cli
adc
lock
add
xchg
sub
push
mov
adc
push
pop
stos
das
pop
adc
cmp
das
inc
jge
cmc
xchg
adcl
sarl
lea
stos
cltd
cmc
test
and
xlat
xchg
fcoms
mov
pushf
add
mov
mov
sbb
ja
outsb
outsb
out
sti
push
mov
push
mov
lcall
dec
dec
mov
inc
adc
sbb
out
adc
dec
inc
dec
addl
out
mov
mov
mov
sub
or
movl
xchg
push
and
and
jno
sub
pop
mov
jbe
push
sbb
xchg
mov
push
pxor
dec
push
ja
out
pusha
movsl
adc
or
outsb
mov
and
dec
bnd
pop
cmp
aad
stc
fldl2t
hlt
add
pop
mov
cli
adc
aad
or
cmp
mov
pop
fscale
insl
cmpsl
inc
cmpb
mov
sbb
adc
xchg
cmpsb
andl
push
pop
je
pop
and
inc
int
mov
mov
mov
adc
mov
add
or
aas
xor
ret
add
jae
shl
jae
push
sub
loope
test
push
add
mov
sbb
pop
pop
push
lret
scas
dec
mov
fisttpl
fisubl
shlb
sub
pop
and
push
mov
or
cli
lcall
stc
mov
loop
xlat
or
outsl
cltd
popf
xchg
xor
movsb
idiv
fstpl
and
mov
fists
xchg
inc
jno
or
mov
inc
push
fidivl
call
inc
xor
lahf
dec
iret
add
add
cmpsl
cltd
int
push
pop
clc
lea
lcall
mov
add
sarl
pop
inc
je
insb
inc
xor
dec
cmp
icebp
aam
mov
jg
stos
inc
or
inc
nop
fs
jl
xchg
dec
nop
in
fsubs
xor
in
cmc
data16
imul
pop
mov
mov
jmp
daa
pop
jnp
push
xchg
jae
adc
push
inc
jae
ja
mov
movsl
jmp
imul
pop
ljmp
cmp
imul
negl
data16
adc
adc
rorl
pop
mov
mov
xor
mov
jmp
jecxz
push
ss
pop
sbb
insl
arpl
push
stc
mov
and
imul
cmpsl
out
adc
lahf
cwtl
je
pop
cmp
iret
mov
std
cwtl
mov
cmpsl
xor
push
dec
hlt
xor
dec
stc
adc
aas
pop
mov
mov
xchg
negb
jle
cltd
or
sbb
lea
jb
adc
stc
dec
dec
jb,pt
lret
xor
and
jecxz
pop
ror
fisubl
daa
jb
lods
inc
testb
push
inc
lods
jno
inc
enter
add
jp
test
lret
stos
dec
inc
jmp
inc
in
jo
mov
sahf
ljmp
push
insb
add
fcompl
sub
lods
cmpsl
daa
mov
arpl
int
xchg
and
jb
cli
daa
repz
testb
in
inc
out
add
and
out
repz
sahf
mov
xchg
stc
pop
aam
mov
sbb
stc
inc
icebp
es
lret
fwait
push
test
sub
sub
pop
adcb
jbe
ja
cli
inc
pop
mov
mov
xor
push
cli
cmp
andb
inc
shr
int3
sub
ror
dec
mov
pop
sbb
sbb
mov
rcll
adc
inc
jmp
inc
pop
and
data16
mov
scas
push
inc
add
test
dec
xor
or
shrl
orl
cltd
dec
xchg
or
sbb
or
mov
mov
cmp
mov
inc
inc
add
mov
shl
into
xor
jae
xor
jo
fisubl
jecxz
and
hlt
and
testl
imul
aad
fsubr
or
cmp
mov
ljmp
cvttps2pi
add
lea
sub
sub
pop
mov
adc
adc
imul
or
push
sbb
or
xor
fistpll
je
jg
push
mov
and
mov
hlt
sub
mov
nop
xor
popa
xlat
inc
mov
mov
mov
test
dec
aam
sbb
ss
popf
into
lock
xchg
jne
js
scas
or
sub
fnstcw
push
js
clc
push
dec
enter
adc
mov
ret
lea
or
sbb
push
pusha
jo
push
lcall
fs
fisubrl
adc
cmp
lahf
cmpsl
inc
inc
add
inc
mov
push
or
in
jp
dec
push
mov
lea
jne
in
adc
arpl
filds
dec
mov
loope
aaa
sbb
icebp
movsb
dec
add
lret
push
jl
jo
dec
jl
dec
mov
mov
pop
or
sub
adc
push
aas
jg
jne
add
cmpsl
iret
xchg
mov
loop
and
movsl
sbb
sbb
add
sub
ret
lahf
aam
or
push
and
gs
push
push
mov
fdivl
sarb
sbb
jbe
test
add
stos
imul
inc
lcall
adc
andl
lahf
data16
cmp
arpl
sbb
adc
fs
adc
sub
loope
mov
ror
mov
movsb
in
pop
test
mov
icebp
cmp
dec
add
xchg
loope
es
or
push
fsubr
les
repz
js
je
xchg
mov
imull
jno
rcrl
dec
lods
inc
cld
inc
clc
fucomi
nop
das
mov
into
les
cmpsb
sarb
inc
pop
dec
or
std
mov
lods
scas
in
push
dec
sbb
mov
sub
addb
loopne
mov
dec
imul
jge
mov
enter
jb
xchg
cmp
ds
mov
pop
xor
lea
jbe
mov
xchg
sub
loopne
pop
cld
add
jg
dec
jno
int
hlt
popf
mov
stc
or
cmp
pop
jle
jmp
inc
cmp
ljmp
sub
cld
fsubrl
ret
jecxz
mov
shll
sti
cmp
je
push
stos
push
jne
sbbl
add
fs
daa
lds
mov
jecxz
cmp
int3
fsubrl
xchg
cmpsl
es
rorl
xchg
loopne
push
or
dec
pop
xchg
sub
jmp
int
das
cltd
dec
dec
cmp
jg
sub
bndstx
lds
insl
int
sbb
adc
rcll
mov
enter
sub
add
jo
repnz
xor
xor
jno
fs
jno
sub
lods
cmp
pushf
push
mov
sarb
mov
sahf
aas
mov
fsubr
inc
dec
insl
or
cmpsb
and
cmc
sbb
mov
xchg
pop
pop
jl
mov
mov
pop
lcall
arpl
pop
scas
icebp
mov
hlt
in
sub
outsb
cld
mov
or
test
ljmp
and
cmp
and
insl
mov
cmp
xchg
cmpsl
shl
adc
inc
scas
jmp
ss
mov
lock
nop
fprem1
xor
pushf
ljmp
popa
pusha
rorb
sub
in
inc
ret
jno
in
pushf
test
cmp
adc
clc
adc
mov
mov
jmp
xchg
cmpsl
shrb
xor
xor
xchg
scas
jle
lock
movsb
push
dec
inc
addr16
sub
dec
sub
lods
push
mov
xchg
cmp
cmpsb
leave
scas
mov
ja
jg
push
push
shl
push
push
ds
das
imul
jns
lock
xor
out
push
jp
mov
pop
lret
repz
idivl
out
or
int3
rclb
mov
fdivl
add
xchg
repz
pop
ficoms
outsl
dec
and
jle
xchg
add
sbb
mov
jns
add
xor
pop
mov
int
and
loop
leave
jns
pop
lea
out
fwait
in
stc
sbb
sub
mov
es
stos
jle
sahf
mov
mov
fwait
push
push
inc
xchg
stos
and
out
out
andb
or
icebp
lock
sbb
lds
lret
and
dec
adc
inc
dec
xor
jmp
inc
jmp
fldenv
fimull
in
push
pop
jge
cli
dec
sbb
dec
jl
add
sub
testb
xlat
aam
in
dec
hlt
dec
mov
cmp
test
mov
xchg
and
sbb
stos
jmp
loop
test
dec
add
mov
daa
xor
mov
sbb
mov
das
or
dec
inc
aad
lea
mov
pop
mov
jbe
sub
jbe,pt
das
mov
mov
dec
insl
jno
xor
sbb
js
popf
and
push
pop
ja
mov
pop
lds
push
sub
std
xor
xchg
aaa
adc
fstpt
idiv
xchg
pushf
scas
mov
jno
xor
inc
in
or
jns
pop
lahf
sub
xor
ror
pop
std
roll
mov
sbb
inc
sub
es
mov
mov
push
mov
sti
add
fsubrs
imul
inc
push
xor
bound
rol
adc
sub
cmp
and
push
addr16
dec
xor
dec
jge
call
les
jecxz
stos
xchg
mov
cli
lock
dec
adc
xor
mov
push
enter
cmp
test
test
xchg
sbb
xor
stos
xor
or
lods
outsb
subl
inc
or
shl
lock
dec
push
mov
shl
xchg
enter
pop
les
out
mov
shl
movsb
or
jmp
insb
and
xor
cmp
jbe
js
pushf
push
mov
mov
lret
xchg
sbb
inc
pop
scas
test
pusha
inc
xor
mov
ds
mov
es
adcb
stos
rcll
ficoml
xchg
sub
jnp
xchg
sub
rcll
jp
inc
lock
imul
add
add
adc
and
in
rol
enter
xchg
stc
out
outsb
mov
sub
xchg
imul
repz
stc
push
in
cmp
cmp
loop
sbb
mov
pop
ja
jo
std
cmp
sbb
mov
dec
fwait
insb
fldcw
int
sub
and
cld
sbb
mov
jecxz
fisttpll
pop
call
add
std
or
pop
push
jmp
pop
popa
pop
push
gs
pop
cmp
sti
adc
les
mov
insb
in
fld
mov
inc
dec
pop
stos
xor
xchg
dec
and
out
std
in
sbb
cmpsl
sbb
mov
fucomi
stos
aas
orb
xor
mov
dec
mov
in
cmc
and
insb
dec
inc
jns
int
adc
push
imul
pop
call
jp
cld
sub
les
mov
aaa
lock
outsl
bound
jns
and
jae
cmpsb
pop
and
jb
scas
cli
stc
jbe
inc
int
daa
imul
sub
mov
int3
sbb
cs
pop
and
cli
dec
fadds
lret
or
inc
inc
pop
mov
dec
pop
cli
jge
in
sahf
adc
add
jb
add
and
cmp
js
add
dec
mov
dec
xor
ss
xchg
cmp
in
or
mov
push
decb
fidivrl
push
push
mov
mov
pop
add
xchg
jmp
mov
daa
mov
data16
loop
je
in
jmp
xchg
cmpsl
sbb
add
or
and
pop
repnz
sbb
jns
jns
roll
lret
jbe
cmpsb
scas
daa
loope
sbb
xor
jno
cmp
popl
ja
push
jmp
push
mov
or
popf
xor
xor
inc
jns
lock
ja
or
bound
aam
sub
add
pop
cmp
fnsave
movsb
dec
gs
fnsetpm(287
and
fdiv
cld
push
pop
repz
leave
std
les
jnp
in
dec
loopne
pop
jmp
cmp
mov
mov
call
push
mov
and
adc
stc
jae
jne
sbb
mov
cld
movsl
lea
add
mov
or
lds
mov
rorl
es
xchg
sbb
mov
pop
mov
cs
mov
push
addl
add
sbb
or
stc
and
popf
jno
imul
xchg
je
lret
dec
xchg
stos
jg
icebp
or
lods
lock
repnz
fmuls
xchg
dec
addl
inc
fidivrl
popa
lds
mov
ret
dec
dec
jge
gs
call
sub
xor
aad
or
popf
fistl
xlat
mov
mov
ret
inc
sarl
sti
sub
aad
xor
lds
dec
ds
sti
push
or
outsb
sub
outsl
jl
popf
jp
sub
push
cmp
dec
orl
mov
inc
lret
inc
sahf
fisttps
test
lock
and
sub
and
inc
lret
mov
fisttpll
xor
shr
or
fdivs
jp
in
dec
inc
mov
cmp
xor
sub
xchg
popf
hlt
fmull
adc
test
ret
out
xor
or
inc
inc
mulb
sub
xchg
aam
clc
cmc
cmpsb
mov
push
test
and
mov
jg
push
cwtl
mov
push
mov
lods
push
mov
enter
test
or
fimuls
fmul
jmp
int3
scas
sub
cmp
sub
shl
push
ss
popa
pushf
shr
xchg
aad
sbb
sbb
pop
lahf
xchg
sbb
nop
fmul
mov
pusha
mov
dec
subl
mov
add
add
stos
sub
xor
std
shll
cmp
test
dec
test
ss
notl
out
imul
cmp
in
insb
xor
nop
ret
adcl
sub
outsb
push
and
mov
mov
test
jo
cmp
ljmp
adc
ret
shll
push
hlt
std
pop
in
xchg
push
orl
sbb
add
adc
ja
bound
leave
inc
dec
add
push
shr
jecxz
mov
xchg
jl
hlt
jp
and
pop
je
mov
jbe
imul
lret
jb
mov
cmpsl
nop
shlb
sbb
out
mov
add
int3
jo
mov
or
aad
fwait
in
cmp
aam
jg
xor
pmaddwd
aaa
push
or
repz
mov
sbb
and
int3
adc
xchg
bound
xor
push
jmp
popa
sbb
mov
mov
cmp
fistpl
int
ss
xchg
daa
pop
out
adc
faddl
test
scas
mov
gs
mov
sbb
fisubrl
push
push
in
test
rorb
das
adc
fstps
clc
in
stos
rclb
decl
aas
std
push
push
in
mov
cmp
insb
xchg
inc
jmp
sbb
dec
pushf
push
aam
popf
into
push
xchg
mov
push
push
pop
fwait
push
in
fbstp
dec
cmp
adc
add
repz
and
gs
stc
and
add
jbe
es
js
add
mov
ss
xchg
nop
xor
movsl
push
sti
xor
cmpsl
shl
xchg
ret
test
rcll
jmp
mov
or
or
shlb
in
adc
lret
popa
jbe
mov
test
sub
roll
lock
mov
lret
mov
push
xchg
stc
mov
xchg
add
mov
ret
cmp
bound
xchg
jno
jmp
iret
mov
mov
mov
bound
jns
mov
push
cli
cli
into
gs
mov
repz
pop
scas
lea
nop
inc
lret
and
dec
lock
je
pop
mov
stc
xchg
movsb
stc
xchg
adc
mov
stos
and
jp
adc
stc
sbb
adc
bts
cmpsl
leave
in
test
scas
outsb
mov
mov
and
in
add
leave
adc
aad
fwait
into
shlb
push
cmpb
cmp
lock
ret
movb
into
mov
xor
jno
cmp
divl
out
outsb
jecxz
enter
push
into
fcoml
pushf
mov
out
sub
pop
lcall
jae
cwtl
sbb
and
call
cltd
cld
mov
xorb
mov
je
pusha
cmc
jmp
jo
int3
sar
roll
lock
and
mov
sti
dec
push
jbe
pop
cmp
movsl
mov
mov
or
push
decb
dec
sbb
lods
inc
jmp
sub
clc
dec
fucom
and
mov
pop
js
and
pop
or
mov
jge
cmpsb
shl
dec
pusha
sub
scas
jmp
int
sub
xchg
cmp
mov
cmpb
repnz
enter
sbb
imul
xor
bound
xchg
shrl
call
insl
sbb
rol
push
loop
adc
popa
mov
lcall
add
mov
pop
aas
inc
mov
jge
mov
test
cmp
ret
mov
or
shl
adc
imul
add
cmpb
bound
test
test
fcom
lods
in
popa
sbb
icebp
mov
into
mov
arpl
mov
xor
loope
scas
adc
mov
mov
test
fldcw
fisttpl
scas
add
sub
xor
bound
sbb
pop
pop
into
push
jle
out
fisttpl
cmc
jae
mov
insl
ficoms
cli
and
icebp
clc
dec
lds
push
mov
jl
aam
inc
scas
std
dec
dec
hlt
and
mov
in
xchg
and
mov
mov
cmp
scas
xchg
xchg
xor
jbe
out
pop
aad
bound
divl
incb
dec
imul
mov
and
inc
mov
add
out
dec
nop
psllw
fwait
daa
fldenv
loopne
dec
or
jge
and
int3
fchs
ret
inc
int
or
mov
and
mov
movsb
push
push
dec
xor
pop
pop
pop
add
les
in
mov
push
jg
aaa
pop
cli
sbb
cmpsb
mov
jecxz
out
and
inc
adc
outsl
cmc
js
cltd
test
out
mov
xchg
jecxz
cmp
popa
pop
dec
jnp
inc
xor
or
sbb
rorl
loopne
popf
jno
pop
outsb
mov
adc
ret
and
sbb
call
stc
aam
ds
mov
imul
cmp
lock
je
movsl
add
pushf
push
pushf
xchg
in
in
jp
insl
mov
and
lds
in
cmpsl
lahf
mov
scas
dec
mov
or
inc
sarl
xchg
inc
adc
inc
cmc
xchg
ret
xchg
and
lods
add
jg
enter
fiadds
ss
cmp
pop
jne
and
loopne
fstpl
stos
hlt
fdivs
add
dec
cmpsl
hlt
adc
arpl
dec
xchg
sbb
ljmp
mov
add
in
cmp
push
loop
adc
pop
pop
push
and
sahf
std
jl
fnstenv
mov
js
sahf
cmpsb
movsl
arpl
into
xchg
sbb
jmp
dec
mov
push
cmc
push
adc
cmc
in
mov
inc
aaa
cmp
movsw
add
or
pop
outsl
stc
jnp
stos
cs
xor
lock
and
sub
dec
push
push
roll
insb
in
mov
inc
gs
or
inc
mov
cmpl
adc
les
dec
arpl
imul
jne
inc
cmp
dec
cwtl
repnz
pop
lock
pop
enter
xor
jns
mov
in
and
add
out
push
xor
out
outsb
lgs
jle
insb
movb
mov
stc
cmpsl
jecxz
movsl
gs
lds
popa
test
pushf
daa
dec
sbbb
clc
stos
loopne
cltd
sub
xchg
dec
cmp
lahf
mov
or
mov
dec
cmp
xchg
fld
mov
in
add
mov
sahf
jmp
fists
mov
mov
xor
jno
jo
xchg
mov
xor
inc
xchg
mov
cli
addr16
jmp
pushf
pop
and
pusha
addl
repnz
in
int
xchg
push
insb
icebp
push
mov
and
mov
clc
je
ja,pt
jo
cmp
pop
lcall
incl
hlt
push
push
inc
cmp
andl
jb
pop
sbb
cld
addr16
int3
mov
leave
mov
sub
clc
adcl
add
sbb
dec
dec
sbb
aam
ja
pop
sbb
lcall
jns
push
xor
mov
sbb
fnstcw
xchg
inc
jne
in
in
sbb
xchg
inc
jae
mov
cmp
mov
or
arpl
jne
orb
into
mov
xchg
cmp
cwtl
mov
loopw
xchg
dec
mov
in
or
movsl
stc
je
add
mov
js
lret
and
aam
mov
jecxz
bound
inc
pusha
pop
pop
xor
pusha
jae
add
fcompl
cmp
std
and
add
mov
mov
mov
test
shll
jl
push
push
pop
hlt
mov
stos
aaa
dec
or
jbe
pop
mov
adc
push
stos
jge
mov
pop
and
cmc
out
mov
in
push
loope
or
adc
std
mov
mov
and
setnp
push
arpl
xor
inc
loope
rep
sbb
xor
aas
imul
xchg
jecxz
adc
cmpl
cmp
in
and
cmp
cmpsb
inc
lret
out
pusha
inc
nop
jmp
daa
cli
mov
lret
fdivr
mov
jg
pushf
and
and
jp
push
mov
cmp
cmpsb
and
or
sbb
outsl
pop
fimull
or
mov
out
xor
cwtl
xchg
and
push
mov
hlt
fwait
jmp
outsb
xchg
mov
cmp
add
xor
sti
das
in
leave
lret
push
sub
mov
icebp
jmp
push
jecxz
mov
mov
sbb
rcrb
lcall
cmpsl
stos
push
mov
outsb
aam
xchg
aas
push
mov
into
pop
push
jge
jnp
mov
adc
mov
inc
cwtl
mov
jg
xchg
in
andl
movsl
inc
loope
scas
aaa
sbb
xor
fucomip
scas
into
jmp
negb
fld
fimull
mov
xchg
sub
lods
movsl
jp
fstl
repnz
push
scas
sbb
mov
out
cltd
xchg
add
mov
and
xor
and
movsb
pop
xchg
test
test
nop
push
testl
popa
push
fdivrs
xchg
andb
das
jb
fcoml
ja
ljmp
jecxz
clc
push
inc
pop
in
pushw
insl
repnz
in
in
adc
daa
es
scas
mov
std
mov
popa
loop
push
aas
cmp
sahf
imul
sbb
scas
scas
nop
out
or
loope
dec
cltd
lret
push
sub
sbb
and
or
sub
pop
cmc
rcll
adcb
ret
testb
out
fucom
popa
push
stos
test
xor
test
pop
cmp
shrb
sub
daa
fwait
out
popa
aam
pop
xor
mov
std
dec
popf
shll
lea
insl
outsl
lahf
mov
scas
ljmp
stc
and
aaa
jne
mov
jns
pusha
inc
mov
sbb
xchg
jo
jecxz
jmp
push
or
inc
cld
sbb
mov
imul
xor
or
pop
push
fcos
divb
and
ds
mov
call
fdivr
xchg
arpl
stos
imul
lds
dec
jmp
mov
sub
jp
xor
dec
mov
cmp
adc
push
inc
jmp
xchg
loop
ljmp
jecxz
adc
xlat
adc
addr16
into
inc
dec
mov
lcall
xor
out
cld
mov
test
push
iret
test
cmp
inc
sub
into
mov
leave
pop
or
pop
inc
jl
lret
enter
sbb
push
cmp
jb
icebp
lret
mov
mov
push
leave
sbb
sub
lds
mov
ss
inc
decb
adc
mov
cmp
xchg
shlb
addr16
mov
mov
xchg
fisttpl
inc
mov
inc
aas
daa
int3
sbb
pop
cli
or
int3
aas
mov
loopne
inc
adc
test
mov
adc
xchg
dec
es
rolb
inc
rcll
jae
inc
mov
inc
add
bswap
xchg
lea
mov
or
in
fidivl
mov
test
adc
movsb
nop
sti
lcall
and
inc
imul
push
xor
pushf
test
sub
ss
gs
dec
js
lret
sub
test
pop
or
hlt
out
iret
jb
sbb
shl
push
lods
ljmp
aaa
xchg
das
das
inc
or
cwtl
ds
push
add
stos
mov
push
xor
es
xchg
clc
popf
lret
xor
pop
fdivrl
xchg
insl
std
shrb
cmc
push
cmp
jg
adc
xor
roll
negl
or
mov
fwait
cmpl
mov
aam
jle
and
repnz
add
mov
inc
lahf
mov
xchg
cmpb
sbb
jb
aaa
sbb
push
out
jno
and
jge
sub
mov
jp
nop
cmp
mov
or
push
in
jb
icebp
inc
fistl
fwait
rolb
in
push
jno
push
xchg
sub
inc
inc
mov
mov
mov
rorl
notl
jo
mov
lock
sbb
cltd
mov
in
jmp
jmp
dec
das
fwait
jecxz
xchg
and
shll
fldpi
cld
dec
and
sub
and
pop
mov
cwtl
loop
push
add
outsl
dec
pop
out
pushl
jo
cmp
cs
nop
sbb
addr16
add
aad
push
pushf
in
and
repz
add
scas
dec
pop
insl
aaa
add
push
mov
loope
xor
fistpl
sbb
int3
xchg
roll
xchg
pop
jae
add
fs
rcr
repnz
cmp
xchg
imul
inc
std
stos
loopne
push
leave
insl
insl
outsl
test
in
popf
pop
inc
push
fdivs
fucom
cmpsb
aas
fsubrs
mov
mov
test
das
in
fwait
pop
pop
and
adc
scas
mov
add
xchg
je
into
fisubs
mov
nop
and
imul
add
leave
mov
cmpl
into
adc
xchg
cmp
dec
scas
mov
rorl
stc
nop
adc
adc
xlat
arpl
lods
enter
mov
mov
cs
arpl
loope
or
icebp
imul
mov
cmp
or
andb
es
mov
cmc
sbb
xor
adc
nop
jmp
inc
jge
cli
fstps
mov
dec
loopne
popa
mov
xor
subb
adc
or
jb
adc
loope
dec
or
out
shrb
jl
inc
fstpl
scas
mov
shrb
adcb
repz
xchg
cmc
add
push
pop
test
in
in
fs
xchg
jge
mov
jbe
cmp
mov
in
lahf
negl
jg
pushf
and
nop
je
adc
bound
pop
ror
xor
call
adc
jno
xor
pop
in
mov
mov
pop
fwait
dec
shrl
push
sbb
gs
mov
fstpl
dec
or
lret
pop
stc
push
ret
or
and
rclb
push
xchg
ss
jb
call
sbb
sub
stos
aam
daa
xchg
and
or
in
ss
or
lock
mov
jno
sbb
add
xlat
mov
fsubrl
stos
iret
movsb
aas
popf
xchg
fbstp
inc
jb
inc
in
push
dec
shll
in
xchg
cs
insl
mov
cmp
js
ds
xchg
scas
cltd
push
push
js
push
mov
addl
mov
sub
sub
mov
jg
push
add
and
andl
outsb
pop
add
pop
pop
mov
jne
mov
xchg
xor
pop
jecxz
pop
pop
push
nop
push
test
xchg
mov
mov
jge
xor
adc
inc
xchg
fisubs
pop
gs
add
pop
lret
push
inc
lods
les
lahf
sub
test
xchg
mov
loope
into
jle
jb
lret
cmc
ret
inc
jb
cmpsl
rorb
loop
aaa
dec
negl
aaa
je
scas
ds
stos
mov
shl
xchg
das
push
shrb
cmc
xor
push
inc
out
int3
cmp
test
lret
shr
es
pop
into
cmpsl
fiadds
mov
stc
mov
jle
mov
movsb
jae
pop
repz
mov
test
in
notl
sub
outsb
sbb
push
daa
popf
sbb
or
sbb
decb
xor
sub
push
stos
clc
sarb
push
add
mul
adc
inc
imul
jl
inc
mov
jmp
leave
aad
push
fcoms
cmp
pop
enter
xchg
lea
rcrl
repnz
js
aas
pop
mov
push
dec
mov
jnp
fiadds
dec
add
and
push
ret
and
mov
mov
jb
push
out
loop
in
js
dec
stos
mov
sarl
adc
in
repz
lock
out
pop
pmuludq
test
pop
push
repz
gs
and
and
push
cltd
pop
push
lods
ret
or
ljmp
arpl
cmc
sbb
in
in
mov
add
dec
jb
les
scas
cmp
lahf
adc
fldenv
jne
dec
je
cmp
or
xor
cmp
mov
stc
adc
stos
sbb
fs
std
aas
push
pop
pop
sbb
repz
inc
cmc
jmp
fcmovbe
fs
and
mov
push
jmp
dec
mov
cmp
call
jl
pop
stc
shll
sbb
mov
inc
sbb
dec
jge
ja
into
add
pushf
scas
ss
xchg
stos
cmpsl
jne
mov
sub
mov
cld
rep
add
sbb
popa
push
shll
mov
mov
daa
sbb
adc
inc
ret
push
add
jge
mov
xchg
mov
pushf
lcall
sub
xchg
xorl
xchg
add
cwtl
fnstcw
insl
push
inc
lret
cltd
adc
sbb
fstl
pop
push
sbb
push
clc
pop
insl
es
add
dec
lea
aam
cmp
push
icebp
adc
cs
test
insl
pop
cwtl
ljmp
out
aam
mov
mov
mov
xchg
pop
je
in
jae
sbb
pop
andb
push
lods
rorw
pusha
mov
aad
inc
inc
mov
and
pop
inc
or
addr16
mov
dec
cld
incb
mov
scas
mov
push
ds
les
sub
pop
mov
xchg
mov
mov
das
ficoml
call
sbb
xchg
push
decl
lahf
pop
inc
sahf
jae
and
je
mov
js
mov
mov
dec
cmp
dec
movsl
pop
xchg
in
pop
pop
shll
xor
lahf
inc
repz
in
add
add
movsb
imul
jg
mov
cmp
xchg
out
pop
cmpsb
mov
cs
mov
adc
daa
or
adc
mov
cld
inc
jecxz
notb
adc
add
mov
addr16
scas
mov
pop
or
test
mov
clc
fisttpll
add
lds
sub
inc
add
or
sbb
pop
ja
mov
pop
ljmp
xorb
ficompl
sbb
out
mov
pop
push
jb
push
andb
push
aam
fsubrp
mov
lock
flds
pop
jge
adc
out
mov
adc
push
push
jb
add
decl
cmp
rcll
and
cmc
sbb
mov
adc
mov
mov
mov
out
jl
lds
sub
pop
and
leave
andnps
fwait
sub
outsl
mov
ret
inc
test
aam
in
in
movsl
popa
fisttps
imul
sbb
inc
jg
sbb
cmp
xchg
mov
xor
or
arpl
sbb
icebp
aaa
push
push
sbb
addr16
sar
cld
xor
inc
or
je
or
inc
addr16
cmpsb
addr16
out
sbb
push
fidivrl
pop
pushf
and
inc
mov
scas
ficomps
mov
inc
jno
lret
push
mov
and
cmpsb
dec
mov
lahf
lahf
and
shr
popf
push
push
push
add
loopne
fs
cmp
fwait
scas
lods
push
add
aaa
insl
mov
mov
push
ss
adc
add
dec
sbbb
rcl
pop
das
mov
aad
xor
push
and
into
lock
push
push
lods
mov
hlt
mov
sbb
fsubrs
cwtl
rcl
popf
test
aas
popa
xchg
mov
mov
lret
sbb
lret
mov
leave
or
adc
cmpl
xor
dec
adc
pop
rclb
lret
daa
pop
jle
scas
out
gs
sahf
mov
push
fmul
cmpsl
repz
lcall
test
into
mov
out
pushf
mov
push
or
mov
xchg
pop
mov
mov
in
fyl2x
hlt
mov
pop
nop
in
pop
fstpt
lret
jo
mov
in
clc
into
loope,pt
sub
pop
lea
lret
bound
sub
lret
cmc
rcrl
or
fidivrl
push
cmc
jo
xchg
aas
mov
mov
add
subb
inc
inc
jb
cld
faddp
mov
inc
dec
fdivl
inc
icebp
inc
inc
mov
cmp
scas
inc
pop
inc
repz
dec
lahf
fiaddl
cmpsb
lods
ds
out
sub
sbb
test
pusha
mov
arpl
fidivl
mov
xchg
sub
cli
and
jge
stc
js
pop
fnstenv
xchg
add
out
xor
xor
jg
xchg
cmpsb
push
jnp
out
and
jp
stos
fwait
xchg
cmp
xchg
dec
popa
sbb
xchg
xor
push
jp
or
pop
lea
outsb
jp
ss
or
div
imul
test
imul
mov
or
add
loopne
mov
sub
ja
rclb
ja
aas
pop
and
xchg
je
aam
fisubs
pop
scas
cltd
jp
dec
pushf
push
or
dec
sub
push
repnz
xchg
xor
test
cs
jb
push
mov
xorb
test
adc
int
jnp
jl
iret
aas
xor
push
mov
scas
aas
mov
mov
push
mov
into
lahf
xchg
xor
push
add
and
loopne
mov
push
or
stos
sub
pop
ret
jle
ficomps
int3
ret
outsb
enter
or
add
and
mov
sbb
fs
popf
std
mov
clc
jecxz
push
dec
push
sub
sub
xor
gs
insl
out
movsl
xchg
adc
jl
std
cmp
cli
dec
movsb
mov
fldt
scas
fxam
cmp
jg
in
push
mov
sahf
clc
inc
push
aas
repnz
lock
mov
es
jl
ret
mov
push
mov
aad
xor
sbb
leave
add
jno
jg
nop
stc
mov
dec
sbbl
pop
fdivl
xchg
fadds
iret
push
mov
xlat
mov
std
cmp
xchg
push
or
xchg
xor
pop
dec
out
in
fildll
add
andl
xchg
or
jmp
das
jo
insb
outsl
clc
push
mov
add
add
pop
mov
and
insl
lcall
push
add
sub
adc
mov
and
mov
mov
mov
sahf
in
or
adc
cmpsl
into
xchg
add
xor
xchg
inc
ja
mov
xchg
xchg
sti
andb
inc
jecxz
jmp
mov
fwait
orl
and
arpl
add
or
sbb
outsb
icebp
int
inc
and
mov
ret
mov
sbb
adc
dec
and
icebp
fidivl
shrb
lock
xorl
inc
iret
or
roll
jle
add
in
aaa
mov
inc
push
and
lds
sbb
pop
add
xor
sbb
adc
int
data16
movsl
lret
push
ds
loop
mov
xchg
pop
aad
xor
sbb
lds
sahf
xorb
and
mov
xchg
das
mov
jo
popf
jae
cmpsb
das
xor
nop
xor
leave
xchg
xlat
and
lods
aad
imul
outsb
cmp
in
subb
or
les
xorl
mov
adc
jns
xchg
outsb
and
pop
dec
je
mov
inc
mov
mov
sub
pop
sub
in
and
add
sbb
cmpsl
adc
fcmovnb
cltd
cmp
xor
fimull
push
dec
fs
adc
jge
idivb
movsb
sub
adc
std
sbb
sub
jp
ljmp
sbb
and
jge
test
dec
ss
sbb
jl
rorl
jecxz
sahf
in
or
jge
add
ficompl
repnz
jl
mov
adc
dec
dec
arpl
pop
lods
scas
inc
fdivl
xchg
and
adc
in
sub
mov
ret
xor
cmp
std
sahf
sbb
loop
sbb
mov
iret
mov
xor
pop
add
aas
sub
adc
es
and
inc
sahf
mov
pop
addr16
pop
repnz
push
repz
enter
loop
into
lock
jb
sbb
mov
adc
fistpll
mov
outsl
mov
xchg
xor
inc
insl
insb
dec
in
ljmp
inc
bnd
hlt
clc
ss
out
mov
mov
dec
pop
and
inc
fcmovu
mov
loopne
jmp
inc
call
dec
adc
pop
mov
and
xor
pop
mov
sbb
scas
scas
call
fidivs
cmp
and
mov
test
mov
adc
push
outsb
pusha
fs
cmpsl
pop
jmp
pop
ds
xchg
mov
fnstenv
iret
jae
mov
and
out
push
clc
push
lods
xchg
sub
mov
outsb
mov
sbb
inc
push
jbe
stos
mov
inc
cmp
push
fdiv
scas
aaa
pop
repnz
jae
mov
sbb
fwait
lahf
xchg
out
xlat
add
inc
sbbb
mov
adc
or
and
nop
jmp
outsb
sub
jle
ret
shlb
inc
andb
lahf
sbb
or
sbb
jnp
sbb
scas
jg
pop
sub
ret
movsb
test
ja,pn
ret
mov
push
add
hlt
bnd
lods
xlat
mov
pop
and
jmp
sti
push
adc
mov
std
popf
idivb
mov
cmpsb
xorb
loop
jg
sub
sbb
xor
xor
shrl
sbb
mov
lods
pop
add
stos
les
repnz
xlat
mov
fidivl
pop
ljmp
mov
push
pop
and
push
or
dec
jl
inc
mov
or
jmp
out
iret
rol
dec
out
ret
sbb
insb
adc
test
lea
mov
inc
mov
fnsave
dec
cld
inc
aad
repnz
push
dec
es
loop
stos
cmp
mov
out
in
icebp
cmp
popa
pushf
in
inc
jnp
mov
sbb
scas
mov
cmc
jge
not
jg
stc
push
xchg
cmc
ret
jg
ljmp
lods
lods
test
jl
in
xor
mov
sbb
insl
mov
cmp
mov
jmp
iret
insb
xchg
pop
cmpsb
mov
jmp
or
sub
add
fs
mov
jb
adc
mov
cwtl
jo
enter
push
insl
push
out
xchg
enter
mov
inc
push
pop
test
gs
xchg
cli
shlb
push
invd
push
or
ja
es
repz
and
mov
xchg
les
xchg
adc
inc
cmp
push
clc
mov
clc
mov
movsb
aad
xlat
sbb
out
std
lods
out
popa
or
mov
shrl
push
fcom
jbe
cmp
sub
cmp
inc
sub
inc
sub
gs
bound
jge
in
sub
rorl
xchg
imul
imul
pop
add
enter
xchg
in
repnz
sbb
popa
cmpsl
mov
imul
xchg
xchg
aaa
or
push
rolw
les
in
sbb
nop
add
aam
cmc
sub
dec
iret
fmuls
sti
adc
loopne
fildl
add
mov
rcl
xor
xor
aam
add
inc
lret
sbb
subb
loopne
push
pop
mov
xchg
loop
adc
jp
dec
js
std
mov
fdivl
push
jo
mov
sbb
imul
xor
fnstsw
pop
cltd
cmp
iret
nop
adc
mov
push
xor
in
jl
je
lahf
cmc
xchg
ret
adcl
lcall
cmpsb
imul
jns
jle
sub
clc
mov
je
imul
pop
mov
pop
sahf
push
mov
ret
xchg
mov
mov
ds
insl
lahf
aaa
inc
inc
adc
pop
push
arpl
rcrl
pop
adc
in
push
aas
or
add
mov
cmp
mov
cli
inc
jne
aaa
mov
cmp
jle
sti
popf
inc
out
jge
roll
lret
add
sub
pop
mov
pop
ja
sbb
xlat
cmp
cmp
imul
pop
fisubrs
repnz
add
add
sub
cltd
aam
gs
and
insl
into
jo
sub
jge
push
adc
and
lock
sahf
push
or
dec
cmp
inc
dec
test
cwtl
es
out
pop
div
sbb
mov
aad
imul
out
pop
sub
mov
inc
leave
xchg
mov
mov
mov
add
sbb
arpl
mov
inc
sub
mov
push
lret
imul
mov
sbb
popf
pop
lahf
out
addl
inc
sbb
and
shlb
test
and
xchg
xor
dec
imul
cmpl
scas
or
ret
pop
adc
add
lahf
into
mov
cltd
dec
mov
inc
xchg
pushf
shll
dec
sbb
rcll
imul
mov
test
add
jae
xchg
xchg
push
and
arpl
cmc
dec
out
pushf
mov
xchg
add
push
js
pop
stos
mov
stos
clc
shlb
out
adc
lret
fsub
mov
outsl
sahf
insl
ret
push
hlt
rorb
data16
aad
cmp
inc
cli
pop
out
out
lret
sbb
lcall
jns
fnstsw
sub
jmp
fcomps
ret
imul
ficoml
aas
arpl
push
adc
push
mov
icebp
call
lret
ja
push
inc
add
push
and
jg
pop
pop
lea
mov
subl
inc
addb
fimuls
out
and
enter
xchg
or
shr
xchg
loope
mov
dec
shrb
stos
mov
sub
mov
adc
push
mov
xchg
es
add
loop
add
aam
xchg
sub
cmp
xor
inc
jbe
or
mov
div
xchg
out
mov
fstpt
jg
and
mov
jp
inc
cli
js
cli
jnp
std
mov
loopne
out
cmp
leave
test
pop
cwtl
inc
mov
stc
and
dec
notl
cld
xchg
aas
mov
movsb
in
aaa
test
and
fs
out
das
cmp
popf
or
in
shrl
loopne
push
loop
shl
mov
dec
inc
and
pop
add
or
push
inc
mov
add
dec
xchg
adc
mov
cmp
jl
repz
test
cwtl
out
jge
fcoms
mov
mov
mov
insl
dec
mov
add
sbb
loope
mov
sbb
and
lret
or
sbb
std
sbb
aaa
cld
jne
xchg
cltd
clc
pop
les
push
test
pop
push
adc
insb
add
les
sub
sti
or
je
sub
pop
popf
push
in
hlt
lods
jg
xchg
jmp
add
xchg
pushf
cltd
inc
mov
in
call
arpl
dec
push
sbb
jo
jmp
jns
xchg
push
jo
push
fnstenv
fisubl
pop
into
mov
inc
add
mov
insl
cmp
in
cmp
add
in
jnp
pop
sub
dec
rep
pop
mov
dec
and
pop
xchg
leave
in
push
mov
jecxz
pusha
lock
call
push
mov
int3
out
xchg
in
fistl
xchg
push
sbb
cmp
add
aas
cmp
sub
xchg
divb
and
sbb
popfw
mov
in
insl
cmp
pop
or
sbbb
movsb
or
mov
fsubrp
test
xor
jae
test
outsl
inc
out
mov
nop
mov
mov
dec
inc
dec
aad
mov
adc
jno
cmpsb
lahf
scas
fildl
movsl
lock
xchg
dec
sub
cmp
mov
jmp
dec
clc
and
test
andl
xlat
pop
jb
push
cmc
and
cld
hlt
lock
subb
sbb
lds
cmpsb
xchg
adc
mov
faddl
and
fnstenv
or
mov
inc
dec
mov
arpl
xchg
outsb
jecxz
push
mov
stc
pop
fists
mov
cmp
and
cmp
push
ja
or
stos
push
sbb
sarb
push
mov
cmp
sbb
sbb
mov
mov
pop
test
push
es
incl
daa
ja
cli
lea
stc
in
sub
outsb
jge
adc
bsr
jle
jne
pop
inc
xchg
repz
xor
jl
nop
outsl
negb
mov
cmp
pushf
inc
lcall
adc
call
xchg
jo
arpl
fiaddl
test
pop
or
ret
scas
int
xchg
notl
pushf
mov
mov
les
outsl
adc
movsb
and
hlt
pop
cli
clc
mov
cmpsl
ljmp
or
mov
aas
push
sub
mov
mov
cld
push
xchg
sub
pop
push
or
lds
popf
xchg
cmp
push
mov
jl
sbb
jge
and
fcmovnu
rorl
loop
mov
ljmp
ficoml
sbb
mov
imul
dec
rcrb
mov
cld
mov
lock
sbb
insb
xchg
cmp
test
outsl
iret
mov
popl
aad
mov
stos
and
iret
mov
push
adc
mov
out
push
mov
jb
mov
gs
sub
inc
or
adcb
das
das
pop
stos
jns
daa
ret
xor
cld
xchg
loop
jmp
in
inc
inc
cmp
push
dec
sahf
dec
sbb
pop
loopne
adc
pop
push
push
loop
into
in
dec
test
jge
fpatan
js
dec
xchg
hlt
sub
dec
inc
ret
and
hlt
jge
xchg
ret
fistpl
push
jl
stos
jg
mov
enter
lcall
mov
lcall
pop
lds
mov
push
aas
inc
jg
inc
add
add
mov
jns
mov
incl
hlt
subl
mov
cmp
test
sub
aam
test
mov
sbb
dec
add
cmp
adc
xor
cmp
mov
aam
imul
and
sbb
mov
xor
jp
movsb
mov
push
xchg
lea
int
mov
mov
mov
sub
sbb
mov
sub
cmpsl
lock
inc
enter
push
push
cmp
xchg
test
out
leave
lods
jno
sub
push
ficoml
xchg
xor
inc
out
pop
push
icebp
movsl
call
cmp
mov
and
sbb
mov
out
push
adc
jnp
add
push
ds
sbb
icebp
movsl
das
sbb
dec
jecxz
leave
pop
fdivrl
and
stos
mov
push
ljmp
je
mov
add
inc
add
sbb
add
ret
js
push
pusha
repz
shrb
cmp
lcall
mov
mov
jnp
add
pop
xchg
cmp
out
add
es
jbe
inc
cli
inc
push
pop
push
and
les
ret
push
or
mov
jp
mov
xchg
lahf
add
pop
pop
cs
mov
std
adc
pop
loop
test
cli
test
aaa
mov
scas
pop
shlb
repz
push
es
and
iret
cmpsb
lcall
jmp
xor
dec
dec
or
mov
or
push
daa
or
sahf
and
sub
cmp
xor
dec
in
dec
scas
dec
daa
adc
sysenter
incb
leave
mov
imul
sahf
subl
inc
subw
ds
dec
push
mov
lods
mov
push
jg
test
add
xchg
xchg
filds
pop
jno
ja
je
or
push
cmp
stc
pushf
leave
xor
xor
mov
sbb
mov
push
adcl
adc
fs
pop
xchg
test
cld
pop
xchg
xchg
aaa
in
cmpb
pop
xchg
jne
adcl
mov
lds
dec
aas
or
xor
jbe
lahf
xchg
push
mov
jmp
jo
pop
in
rcrb
cmpsb
mov
rorb
push
testb
push
sti
out
in
mov
int
dec
inc
in
xchg
sub
fildl
mov
cmp
jbe
sahf
enter
adc
adc
push
mov
inc
or
sub
cmp
add
cmp
mov
outsb
xchg
mov
and
sahf
enter
jne
filds
cli
shll
push
mov
inc
out
cmp
lcall
call
das
stc
negl
pop
jae
clc
in
sub
repz
add
add
jnp
xor
ret
jo
sarb
jg
je
imul
jns
int
jle
shr
mov
dec
arpl
sub
sbb
fs
mov
outsl
in
push
cmp
addr16
imul
lret
push
mov
mov
add
add
mov
sbb
mov
sub
cmp
leave
inc
cmp
jp
or
pop
adc
pushf
pop
shlb
mov
or
xor
add
mov
cmpsl
adcb
add
insl
inc
add
int
inc
xorb
roll
ds
dec
stc
arpl
jl
push
out
sub
jne
shll
lods
lret
loop
inc
int
or
outsl
sbb
in
push
fisubrs
push
addr16
xchg
xor
xchg
and
movsl
rolb
mov
jb
adc
add
and
mov
xchg
xor
inc
cpuid
sub
data16
lahf
pop
cmp
mov
mov
test
arpl
sub
clc
xchg
or
jb
and
push
test
mov
int3
mov
data16
adc
mov
xchg
insl
xchg
sbb
leave
es
lods
mov
lret
push
or
scas
dec
mov
cmp
pop
mov
ja
ficoms
filds
xor
stc
sub
lock
cmp
mov
les
inc
sar
jp
ficomps
xchg
mov
shl
popf
or
addr16
pop
mov
mov
test
inc
cli
popa
inc
movsl
and
push
test
lock
dec
xchg
sbb
push
fs
or
xor
pop
ds
test
cmp
insl
xor
insb
jge
mov
and
aaa
movlps
out
mov
loope
jae
ret
imul
push
outsb
rcrl
bswap
in
add
add
push
pop
inc
inc
es
pop
and
int3
test
cmpsb
orl
aam
adc
test
loop
lret
arpl
test
mov
cmp
sbb
out
mov
add
ss
mov
aam
xor
jae
push
imul
in
dec
push
in
lea
shll
mov
pop
fwait
pop
jo
std
and
mov
ss
jbe
inc
push
imul
fildll
jne
xor
mov
or
jle
jo
daa
xchg
pushf
mov
int
subb
aas
cli
test
jae
addl
mov
or
xor
fisubrl
stos
mov
ds
jmp
xor
cmp
inc
sbb
dec
mov
cld
mov
jecxz
mov
enter
jns
xchg
outsb
jnp
iret
adc
xchg
add
sbb
pop
inc
ds
xor
aad
test
jo
lods
jmp
add
xor
repnz
leave
enter
jmp
outsl
cltd
jbe
imulb
mov
stos
pusha
or
addr16
dec
or
push
nop
rcrb
and
push
mov
sub
sahf
js
mov
adc
fidivrl
and
pop
lcall
push
nop
iret
aaa
xor
sub
loope
psubb
mov
or
loop
cwtl
lea
icebp
pusha
out
lea
mov
dec
movsb
inc
jge
or
rorl
ljmp
cmp
cmp
aas
loope
sbb
in
add
cmp
lods
sahf
cmpsl
mov
or
test
xchg
leave
in
sub
mov
lock
cltd
or
push
inc
outsb
pop
test
and
sub
cwtl
xchg
ret
mov
dec
push
jg
loop
and
push
loop
and
mov
and
testb
fcmovnbe
jno
data16
mov
shl
sub
mov
lea
or
int3
sahf
test
jl
cld
pop
cmp
stos
mov
mov
dec
mov
in
and
loopne
and
dec
xchg
aad
es
repz
subb
cmp
jl
fsubrl
sub
stos
lods
dec
pop
xchg
pop
leave
mov
push
inc
push
data16
jmp
popl
mov
in
rcl
into
cmp
jns
daa
mov
mov
loope
cmp
cmp
addb
xchg
add
inc
stc
cmp
push
xchg
cmp
mov
cmp
std
mov
pop
testb
cld
data16
scas
rcrl
jnp
mov
push
ficompl
mov
jnp
pushf
fisttpll
paddw
fidivl
sbb
popl
jb
cli
and
pop
imul
dec
mov
insb
fnstsw
push
cmpsl
andl
inc
xor
sub
jns
je
cld
iret
rcr
mov
jp
insb
pop
bound
pop
loop
lahf
ror
aaa
das
lods
pusha
dec
imul
push
lods
sub
inc
cmc
xor
xchg
sahf
mov
pop
xor
cmpsb
ret
mov
scas
mov
lock
ret
sti
jmp
mov
cmpsl
jbe
inc
adc
filds
jge
filds
gs
bound
pop
add
inc
lock
movlps
push
sub
enter
sahf
std
sub
add
sub
xchg
push
push
add
xor
push
adc
cmp
sub
dec
out
mov
leave
jl
fisubrs
xchg
sarb
pop
test
and
rorl
ret
push
adc
adc
mov
orb
pop
jmp
shrb
in
rcrl
adc
sub
cmp
test
mov
clc
push
jmp
jo
mov
jmp
out
movsl
imul
fiaddl
add
daa
adc
pop
adc
xor
inc
aam
sub
pop
leave
frstpm(287
mov
das
add
in
mov
movsb
fsubrs
addr16
stos
mov
mov
inc
lret
sbb
jle
std
add
aas
shlb
leave
pusha
xchg
push
pop
mov
fmul
movsl
cmp
lahf
and
sbb
daa
addr16
aaa
lods
xchg
pop
pop
or
testb
add
sub
popf
mov
adc
push
pop
imul
fistpll
xchg
jns
and
arpl
ljmp
add
or
pop
pop
fsts
out
outsb
sti
fwait
pop
jmp
lock
movsl
pop
enter
aas
in
cld
mov
loope
add
xchg
cmp
add
mov
in
cmpsb
and
lss
jo
cmp
mov
cld
mov
mov
gs
mov
fwait
jle
pop
notl
cs
les
es
pop
or
mov
hlt
insb
xlat
pop
stc
jge
sbb
mov
pusha
cli
popa
adc
sahf
out
cmp
mov
sub
cmc
xor
aad
mov
lret
push
or
repz
shlb
insb
leave
inc
pop
jb
ret
cmp
orl
jmp
out
mov
xchg
push
sub
das
mov
repnz
mov
jns
pop
jle
xor
jno
push
hlt
mov
cmp
pusha
jl
lods
mov
test
repnz
add
insl
push
stc
ljmp
and
popl
icebp
cmp
lods
inc
push
xchg
push
jns
jo
pop
mov
jnp
in
scas
mov
sub
shrb
cli
pushf
push
jnp
in
pop
sub
ljmp
popa
dec
mov
dec
mov
jg
xchg
adc
lret
and
imull
jno
push
mov
cmp
add
pop
fisubrl
inc
ja
cli
aad
mov
dec
das
pop
cmp
shll
outsl
add
daa
loop
sub
pop
out
push
xor
jmp
adcl
adc
lret
pop
lret
inc
mov
test
jge
xchg
out
ss
divb
pop
jae
addr16
sub
movsb
gs
mov
and
test
xchg
jmp
sarl
jno
ljmp
push
mov
js
scas
jecxz
popaw
pop
and
dec
push
ja
xchg
mov
in
ljmp
rcrl
mov
mull
in
dec
test
pop
imul
adc
imul
testb
push
dec
xchg
cld
stc
lahf
inc
lds
or
jo
loope
push
mov
lods
out
mov
les
mov
push
push
adc
pop
daa
mov
xchg
or
mov
add
imul
ss
ss
xor
mov
sub
mov
push
and
out
pop
lret
arpl
shlb
test
pop
jecxz
and
shlb
cwtl
pmulhw
jg
cmp
xchg
lret
loope
sti
mov
lret
dec
bndstx
scas
clc
test
jg
shll
loop
pop
rcll
sbb
in
je
mov
mov
mov
sbb
popf
mov
mov
out
divb
clc
and
lret
mov
jge
cld
daa
pop
jnp
test
cmp
sbb
gs
or
dec
dec
sbb
jnp
xor
sbb
or
mov
inc
add
dec
aaa
mov
xlat
out
ficompl
hlt
dec
nop
or
call
push
inc
gs
push
jg
pop
loope
xor
lcall
out
mov
sbb
push
inc
cltd
and
push
and
pop
adc
push
aaa
jmp
adc
jle
scas
mov
nop
inc
scas
ret
adc
out
pop
xsave
push
dec
jne
sbb
sahf
jnp
mov
xchg
rorl
icebp
jl
imul
out
lock
dec
xchg
push
lds
mov
dec
jno
fildl
sub
cwtl
jae
hlt
retw
test
mov
imull
jbe
sahf
lods
rolb
ficompl
cs
arpl
aad
add
dec
ds
dec
add
inc
ljmp
call
jb
fcmovb
xchg
or
daa
jb
in
and
scas
push
jecxz
jne
popf
cmp
mov
inc
icebp
pop
mov
xlat
pop
adc
xor
sbb
cs
pop
shr
xor
push
add
xchg
sub
xor
pop
or
bound
pmaddwd
ret
push
sub
stos
nop
dec
pop
jns
push
icebp
lds
xchg
jno
push
or
iret
inc
cmp
pop
loope
arpl
xchg
inc
out
or
and
xlat
in
lret
out
inc
adc
add
sbb
cmp
ljmp
gs
pushf
adc
cs
stos
addl
xchg
sbb
aam
mov
popf
mov
insb
pop
bound
mov
add
push
daa
add
fidivrl
test
jl
andb
inc
and
stos
dec
jno
js
add
ret
and
mov
inc
hlt
pop
adc
and
inc
lock
insb
std
mov
dec
sub
ret
addl
incb
push
lret
push
pop
insl
mov
xor
add
mov
xchg
sahf
xor
ljmp
int3
arpl
mov
sbb
inc
sti
outsl
add
iret
push
nop
cld
stos
push
jo
sub
xor
imul
lods
gs
cmpsl
push
movb
jo
mov
pop
dec
mov
dec
rorl
int
sbb
rorb
in
mov
pop
push
jns
and
dec
in
xchg
sub
or
popa
loope
les
es
jp
or
xor
or
cmpsb
out
push
outsl
std
add
test
lods
and
push
xchg
pushf
mov
dec
jno
mov
and
pushf
aad
bound
cmpsl
gs
loop
loopne
sahf
and
mov
push
pusha
sub
loop
cmp
inc
out
xor
jnp
int
icebp
fdivp
int3
int
test
daa
or
cmp
push
aam
push
leave
dec
adc
pushf
xor
or
fcomps
xor
addr16
in
pop
mov
jg
out
sbb
shr
xchg
stos
dec
mov
leave
aam
inc
das
fmull
fcom
jge
rcl
mov
ret
jge
ds
mov
mov
clc
fwait
push
sbb
dec
inc
cmc
cmp
inc
out
jns
jg
xchg
jnp
std
and
or
dec
push
jae
xor
add
jge
in
call
jne
sti
dec
rorl
inc
jae
xchg
int
lock
leave
jle
and
xor
aaa
mov
jl
jbe
jle
mov
pop
lret
mov
mov
xchg
bnd
test
push
jge
xor
addr16
mov
add
fisttpl
enter
lods
aaa
sbb
or
pushf
xchg
cwtl
add
cmp
scas
ret
rolb
mov
push
inc
leave
nop
test
inc
test
sarl
cmp
add
aam
cmp
add
fnstsw
sub
inc
scas
enter
movsl
test
dec
cmpl
decl
repnz
sbb
sub
mov
and
sbb
idiv
lret
sub
aad
cmpsl
imul
test
adc
mov
aam
orb
mov
ret
inc
stos
lret
popa
add
push
jg
jmp
mov
es
addr16
pop
push
push
out
insb
xor
popf
inc
xor
adc
inc
ret
test
or
mov
push
stos
addr16
or
sahf
outsl
popf
adc
scas
jge
mov
pusha
leave
imulb
cmpsl
imulb
xchg
and
test
cmp
mov
cmp
outsl
xchg
fucomip
xchg
inc
pop
fsts
sahf
push
sub
mov
mov
outsb
inc
out
adcl
clc
push
push
xchg
cld
out
mov
ds
cmp
dec
xor
mov
inc
mov
lcall
push
pop
mov
pop
ret
dec
fwait
xchg
jae
data16
lret
sub
scas
adc
xchg
sti
jg
ja
je
loop
sub
pop
xlat
in
pop
jne
rorb
jecxz
cmp
sub
cmp
imulb
dec
xor
out
sbb
xlat
pop
cmp
push
hlt
mov
fwait
mov
fstps
push
mov
jecxz
mov
cmp
outsb
xchg
aas
icebp
sbb
loop
je
jns
cmp
aam
in
xchg
inc
xchg
xor
aas
inc
in
and
push
cmpsl
ja
adc
jge
sbb
mov
mov
icebp
xchg
cmpsb
loopne
xor
dec
imul
mov
jne
out
adc
mov
fmuls
scas
jp
adc
mov
idiv
fsubl
and
fdiv
shr
js
xchg
testb
xorl
pop
aas
test
cwtl
clc
test
and
out
mov
addr16
scas
adc
aaa
jae
cmc
cld
dec
mov
pop
out
or
and
xchg
pop
fbstp
xorl
sbb
mov
jb
sbb
jb
jne
paddq
sub
int3
pop
xor
or
ret
ss
into
filds
adc
xchg
nop
cs
xor
in
lret
fwait
mov
je
cmc
inc
pop
pop
xchg
sbb
ret
ret
xchg
mov
std
mov
outsb
mov
mov
scas
std
out
pop
pop
lds
inc
xor
fiadds
dec
cmp
inc
xlat
or
add
test
repz
stos
scas
mov
cli
xchg
pop
lret
mov
xchg
or
pop
jo
adc
int3
mov
add
in
push
and
mov
insb
sub
or
in
js
inc
sub
mov
and
mov
mov
test
aaa
pop
inc
repnz
idivb
loopne
insl
adc
push
push
flds
fnstenv
mov
jle
push
push
sub
aam
xor
popa
jne
xchg
lahf
and
dec
pop
adc
sub
pop
adc
fidivrl
or
inc
lea
punpckhdq
jbe
sahf
push
arpl
out
xor
pop
addb
dec
mov
sub
out
push
or
les
stc
add
fisttpl
loop
mov
je
inc
aaa
sbb
mov
inc
push
ret
cs
mov
popw
loopne
bound
shl
out
test
mov
mov
cmp
adc
pop
xor
lret
pop
aam
jno
movsb
inc
xchg
pop
mov
lds
ror
xlat
push
push
xchg
cs
or
in
xacquire
mov
mov
dec
loop
adc
jbe
scas
mov
push
pop
aas
push
mov
repnz
daa
inc
adc
mov
outsb
pop
xchg
sbb
scas
jo
lahf
or
jecxz
push
push
mov
shl
and
mov
pop
push
addr16
fstpt
pop
mov
push
sbb
inc
ljmp
mov
scas
lea
or
cmp
roll
jg
mov
inc
push
mov
adcb
push
popf
sub
fcoms
pop
in
jge
mov
inc
sub
mov
mov
dec
push
mov
cmp
rolb
xor
sub
xlat
cs
in
data16
cmpsb
jmp
lock
xchg
loopne
pop
jnp
push
dec
dec
push
push
sub
mov
pop
sub
dec
fcmove
ret
jae
addb
sbb
xchg
dec
ret
jmp
jnp
push
rcrl
mov
lret
xor
fwait
jmp
mov
jle
mov
fnsave
mov
bound
loope
outsb
imul
add
in
xor
les
fucomip
xor
lods
and
inc
jne
dec
js
mov
insl
subl
mov
cmp
adc
in
bound
rcl
push
mov
out
add
dec
daa
call
loopne
xchg
fstps
mov
xor
and
push
ret
pop
ds
ds
jno
dec
adc
dec
cmp
mov
fnsave
add
add
aaa
nopl
stos
add
and
aad
add
mov
jo
pop
xchg
sub
push
mov
mov
out
cli
fwait
push
and
fwait
push
push
adc
inc
mov
sub
jae
jae
jne
and
jne
jb
cmp
sub
in
iret
ret
addl
ljmp
fisttpll
loope
lcall
xchg
sbb
in
mov
adc
iret
stc
stos
sbb
ss
sub
repz
loope
cwtl
mov
movsb
mov
js
lods
sbb
incb
pop
das
xchg
subl
dec
fbld
dec
inc
and
sub
pop
sar
mov
lcall
ljmp
pop
aas
out
aam
dec
inc
pmulhuw
inc
inc
push
add
lret
mov
cmp
ja
push
test
fcmovnbe
adc
andb
mov
cltd
cmpsl
xchg
repz
sbb
or
add
insb
pop
pushf
xor
aam
aas
add
jl
orl
or
add
inc
lret
pop
leave
fwait
xor
imul
es
clc
or
lret
xchg
inc
scas
pop
jno
pop
push
repz
xchg
aaa
inc
cwtl
xchg
out
dec
testb
xchg
pop
ljmp
cwtl
in
es
adc
cmp
ret
fidivrs
and
cmpsb
mov
pop
filds
cli
push
out
adc
jle
outsb
cmp
xor
xchg
arpl
xor
mov
fsts
mov
shrb
jnp
xlat
mov
and
imull
push
leave
aas
sbb
hlt
decl
cld
les
mov
shr
roll
dec
inc
scas
mov
in
rorl
test
fimuls
daa
adc
mov
inc
scas
jle
cmp
lahf
pop
mov
clc
xlat
inc
jge
mov
mov
mov
lods
sub
dec
push
clc
or
xor
adc
es
fcmovne
cmp
inc
daa
iret
xlat
add
stos
xchg
adc
lret
lock
iret
jne
es
pop
test
jmp
fdivl
jb
in
outsl
push
xchg
push
lock
sbb
sub
pop
cli
js
lea
and
inc
clc
mov
es
xchg
mov
mov
lcall
mov
mov
outsl
into
dec
xor
aaa
and
rcl
int
adc
push
cld
xchg
lock
pop
je
and
repz
and
push
cmp
out
mov
out
jno
mov
cmp
jge
movsl
mov
mov
adc
xchg
add
fistpl
negl
in
mov
ret
cltd
ja
cmp
std
lds
jbe
mov
shl
dec
add
nop
sbb
mov
sub
data16
scas
in
adc
test
nop
ret
pop
mov
into
data16
push
sub
lahf
push
mov
dec
sbb
aad
stos
fwait
add
mov
ja
cli
adc
enter
js
fs
xchg
or
cli
icebp
push
mov
pop
rol
fsubl
cmp
adc
jle
popf
mov
out
cmpb
push
cltd
mov
add
imul
icebp
lret
push
sbb
stos
sub
push
cmp
mov
sbb
xchg
js
jl
imul
jne
mov
mov
and
cli
pop
mov
fbld
mov
js
jp
lcall
cmpsl
or
pusha
sahf
out
sbb
ss
std
sub
cmp
or
jae,pn
lock
ss
adc
fs
cltd
mov
pop
add
push
mov
dec
sub
loopne
and
push
cmp
incb
sbb
mov
inc
mov
js
pop
add
mov
imul
rcll
cmpsb
aas
lods
stos
mov
push
jp
push
arpl
dec
rol
mov
jae
mov
sti
rcrl
daa
cmp
cltd
inc
insb
movsb
mov
dec
test
loop
mov
testl
nop
xor
pop
dec
xor
mov
or
or
xor
add
cltd
sub
jmp
cs
mov
sbb
mov
push
orl
mov
lahf
inc
fistpll
or
ds
imul
cs
jmp
jmp
into
lods
mov
int3
jae
scas
in
test
iret
mov
std
push
sub
sarb
xor
jp
inc
mov
loop
enter
ljmp
sarl
fsubrp
ret
xorb
xor
aaa
xchg
cmp
mov
push
or
mov
xchg
push
in
add
idivb
loope
dec
dec
add
pop
inc
xor
mov
addr16
pop
inc
or
mov
cmp
adc
add
pop
pop
mov
cmpl
inc
mov
mov
push
push
lea
pop
sub
in
pop
or
mov
sarb
ret
cmp
sbb
rcr
add
add
aad
xchg
lods
int
out
pop
arpl
bound
leave
xchg
pop
push
imul
add
cmp
fwait
lahf
mov
add
insb
cmp
push
jmp
arpl
enter
nop
jmp
jmp
in
aaa
test
jbe
addb
sub
mov
adc
push
mov
loope
dec
jg
lcall
xchg
dec
outsl
mov
incl
adc
cld
mov
pop
popa
into
inc
int
sbb
or
pop
jne
push
sbb
icebp
pop
imul
cli
push
test
inc
icebp
or
and
adc
xor
movsb
movsl
addr16
sub
ret
int
iret
lahf
push
push
and
loope
dec
shll
push
jl
adc
mov
xchg
ret
pop
imul
mov
mov
js
add
fwait
or
inc
scas
cmp
outsb
xchg
fldl
adc
fsubs
push
ds
add
dec
rolb
jl
sbb
lods
sub
mov
mov
sbb
lock
jecxz
sub
pop
lcall
testb
mov
adcb
jbe
adc
mov
outsb
test
dec
xchg
gs
dec
mov
add
mov
movsl
mov
add
and
or
add
and
aaa
or
mov
adc
mov
push
pop
inc
ljmp
das
lret
subl
fistpl
into
mov
pop
push
dec
or
jns
mov
imul
and
xorb
inc
lcall
lds
cwtl
ds
fisubrl
addl
aam
mov
adc
cltd
jae
xchg
sahf
push
loopne
lods
sbb
push
scas
lds
loope
lods
das
lods
pop
push
xchg
jne
inc
jo
leave
or
fistps
in
sahf
inc
inc
sbb
push
xchg
sub
outsb
mov
in
mov
cmp
push
addl
cltd
sbb
mov
xor
inc
mov
lret
fcomip
push
imul
insb
nop
push
leave
lret
add
shrb
inc
mov
sahf
ret
jge
cmpsb
cmpb
sbb
outsb
adc
daa
sbb
and
adc
test
fs
xor
stos
and
rcll
imul
mov
mov
scas
leave
repz
cmp
sub
pop
mov
adc
push
imul
mov
jg,pt
mov
test
add
lret
nop
stos
lret
testl
test
mov
rcll
scas
pop
gs
int3
into
push
cli
movsl
div
inc
rorl
xchg
outsb
push
and
andb
adcl
pop
out
cs
rcrl
je
mov
sahf
inc
mov
jne
dec
imul
fnsave
push
mov
fstps
push
and
pop
mov
jle
cmp
cmpsb
pusha
shll
fimuls
lods
in
pushf
xchg
cmp
popf
add
or
mov
jle
bound
mov
loope
loopne,pn
jge
int3
imul
nop
enter
cmp
dec
add
jnp
add
enter
movsb
inc
sbb
into
xchg
test
xor
pop
push
loop
aad
pop
sub
push
jo
lea
bnd
popf
mov
lret
add
or
outsb
movsl
and
adc
cmp
xor
fidivrs
dec
in
mov
adc
out
out
dec
cmc
popl
data16
lret
mov
push
out
les
push
cmp
add
scas
push
push
movsl
dec
cmp
xchg
xor
test
aam
pop
xor
pusha
jp
inc
mov
out
pop
arpl
mov
xchg
rorl
push
imulb
jmp
add
jnp
and
dec
cli
cmp
idivb
or
aad
cmp
add
data16
shrl
sub
inc
lea
push
mov
test
out
fisttpl
mov
mov
mov
add
add
enter
test
lea
cld
mov
fistpl
bound
sub
mov
pop
push
ret
call
hlt
out
pop
in
dec
lds
rcrl
test
xor
rorl
stc
insb
mov
test
daa
push
mov
mov
ret
shll
add
mov
cmp
leave
xchg
or
ds
imul
xor
mov
imul
push
push
mov
sbb
fcmovnb
cmpsl
enter
jmp
jle,pn
jmp
add
es
out
jbe
and
aas
or
sbb
lahf
outsl
or
sbb
int3
sub
mov
mov
fstl
insl
pop
push
mov
fs
adc
sbb
sarl
inc
scas
dec
fidivl
insb
push
xchg
test
stos
rcl
mov
mov
push
add
cmp
mov
mov
jbe
push
aas
and
push
shlb
pop
std
stos
push
sar
xor
inc
push
xor
lcall
popa
pusha
cmpsb
cli
repnz
jge
iret
mov
adc
je
loop
sub
aaa
rcrb
cmp
iret
mov
push
xor
xlat
or
or
jb
out
scas
add
fdivl
cmp
pop
test
adc
cmp
jge
int3
push
addl
inc
pop
fcompp
cli
or
dec
add
jno
fldl
xchg
scas
movsb
xchg
loop
xor
mov
dec
inc
sub
gs
rdseed
pop
cmp
cmpsl
pop
cwtl
ret
cmpb
sahf
sbb
shll
hlt
ss
scas
mov
mov
mov
push
shl
jmp
sbb
add
ret
pop
sbb
insl
cmp
lcall
or
xchg
ficompl
int
jno
mov
das
jle
and
int3
mov
roll
dec
cmc
ficoml
jns
sub
pop
das
push
fs
cmpsb
adc
mov
into
ret
ret
push
jne
stos
add
push
ljmp
push
or
adc
paddw
rclb
jle
add
bound
cltd
int
ss
mov
out
dec
cmc
jne
pop
repnz
test
and
push
push
push
ja
clc
insb
mov
mov
enter
push
xchg
sub
cmp
cmp
inc
movsb
inc
in
aas
aas
sbb
mov
scas
lahf
mov
dec
adc
stc
xlat
data16
jp
div
sbb
flds
in
out
xchg
and
mov
push
ror
shlb
pushf
mov
xchg
add
jb
xor
subb
scas
fwait
cmpsl
mov
icebp
or
icebp
icebp
mov
mov
testb
insl
adc
ja
lock
sub
movsl
in
loopne
lds
xor
stos
cmp
je
idivb
in
test
pop
mov
hlt
push
shrb
cmp
add
insb
add
pop
jb
dec
push
dec
sbb
les
in
xor
cwtl
test
adc
sti
push
lods
ret
cli
jb
mov
xor
sub
ljmp
shrb
mov
in
mov
aad
xor
inc
jns
push
mov
or
cmp
lods
xchg
push
dec
in
add
shlb
lock
lahf
fisubrl
add
fmull
sarl
pop
push
inc
cld
int3
pushf
es
call
call
sub
pop
fists
dec
fdivl
add
lret
lods
sub
testb
fnstcw
imul
mov
sahf
add
insl
cld
xchg
dec
jmp
mov
cmpl
loopne
ljmp
scas
sbb
stos
cmp
jp
inc
addl
cmc
or
sbb
add
cwtl
shlb
pop
fildll
xlat
lcall
pusha
shrl
push
push
es
sub
hlt
add
bound
lods
and
out
inc
jge
xor
pop
cmpsb
lods
test
icebp
aad
and
dec
and
loop
cmp
out
xchg
mov
enter
ljmp
enter
movsl
add
adc
ds
jecxz
sub
decb
aad
and
test
pop
gs
repnz
mov
jno
addr16
out
cltd
rcrb
enter
and
loope
mov
and
sub
ficomps
stos
jmp
clc
es
pusha
jmp
stc
loop
lcall
out
ljmp
test
lds
cmp
or
pop
jnp
mov
mov
inc
int3
push
mov
jo
iret
xor
mov
add
adc
push
sub
in
xchg
pop
add
sub
nop
scas
or
jecxz
fs
xchg
sti
adc
xor
add
int3
mov
and
sbb
outsb
dec
hlt
adc
test
popl
push
fnsave
aas
in
cmp
ljmp
insl
dec
sbb
lahf
data16
mov
jbe
sub
clc
jne
fstl
shll
sbb
inc
pop
je
adc
pushf
scas
pop
movsl
push
ficoml
in
fadds
push
fcompl
mov
dec
rcl
cmp
inc
jb
cmp
enter
gs
add
sub
js
incl
and
pop
fisubl
mov
popa
or
lcall
xor
adc
lods
jnp
addl
call
pop
add
and
sub
adc
jb
and
popf
out
mov
adc
loope
dec
pop
adc
push
xor
cld
inc
decb
or
lea
push
jge
xchg
ss
ljmp
test
push
mov
add
rcl
dec
and
das
mov
xor
gs
cmp
sbb
push
ds
sub
insl
sbb
aad
ja
xchg
lods
add
loopne
or
das
js
ja
shlb
loope
shl
xchg
xor
pop
sti
mov
inc
pop
scas
insb
xor
rclb
mov
ret
mov
mov
jbe
rorb
or
mov
lret
mov
sbb
pusha
mov
xchg
mov
cmpsb
inc
aam
cmpsb
or
jmp
or
addr16
mov
fmul
daa
and
pop
js
pop
mov
adc
dec
xchg
fmulp
pop
stos
mov
lret
mov
xchg
mov
dec
cmp
jo
and
cmpsl
fwait
divl
subb
sub
movsb
out
adc
into
mov
mov
xor
ds
addr16
out
mov
pusha
and
fwait
adc
lahf
mov
out
and
inc
jnp
cltd
pop
aaa
and
cmp
or
ds
lds
and
sbb
sbb
pop
adc
mov
inc
fimull
js
pop
imul
ret
push
lcall
pop
dec
cwtl
call
or
shll
ret
dec
dec
in
inc
subb
mov
push
xchg
je
sub
loope
inc
outsl
fstpt
xchg
jmp
js
push
fdiv
xor
and
push
dec
mov
adc
cmp
and
fstps
sub
pop
loopne
aam
jnp
cmp
and
pop
pop
add
adc
adc
addr16
sbb
test
xchg
les
jg
lahf
mov
mov
sub
out
daa
add
push
icebp
dec
pop
leave
loope
lret
dec
adc
daa
ret
and
or
mov
cwtl
pop
fwait
add
and
jle
mov
xchg
add
testb
and
fistl
add
arpl
frstor
out
sbb
xlat
call
frstor
and
jns
push
aad
mov
push
xor
les
loopne
lea
popf
test
mov
mov
popaw
cmc
stc
xchg
fstpl
subl
lcall
out
mov
outsb
test
sub
sbb
xor
xor
pop
cmp
stos
lods
push
cmp
ljmp
jp
mov
jne
stos
ja
dec
lds
inc
fstl
aas
mov
push
imul
loopne
ljmp
push
mov
insb
rcll
lret
out
adcl
jecxz
dec
lcall
cmp
pusha
rcr
mov
hlt
mov
ss
fidivrl
stos
lods
sbb
pop
xlat
xchg
and
popa
push
outsb
xchg
add
mov
jns
push
mov
sbb
add
enter
clc
cli
inc
insl
out
loop
inc
pop
xchg
pop
out
hlt
orl
sbbb
iret
les
addr16
jmp
pushf
jo
add
imulb
and
xor
sti
pop
push
stos
mov
dec
pop
push
movsl
adc
pop
lods
movsl
ficompl
inc
adc
insb
gs
flds
in
push
shlb
mov
mov
pop
add
mov
stos
jmp
mov
push
test
lock
hlt
sub
fildl
mov
cli
pop
sbb
jl
adc
sbb
mov
sbb
xor
fnstsw
mov
test
mov
insl
adc
sub
xorl
inc
push
xor
sbb
add
clc
add
mov
and
jne
in
pop
leave
mov
jnp
xlat
not
sti
std
daa
lock
iret
push
mov
or
aam
arpl
arpl
jbe
scas
js,pn
dec
mov
movsb
ud1
xchg
push
nop
jge
adc
cmp
out
pop
shr
jbe
sub
fsts
or
ret
scas
pop
xchg
xor
pushf
pop
adc
mov
lock
popa
cmpsb
and
or
adc
fld
sub
push
sbb
pop
push
subl
pop
test
das
ljmp
enter
subb
popa
pop
pop
cmp
and
pop
fstpt
push
outsl
and
out
or
xchg
aas
add
pop
cmp
clc
and
cltd
sti
xchg
aam
inc
outsb
or
rorl
jns
test
gs
in
add
dec
pop
and
adc
mov
fsubs
lods
adc
dec
xchg
sub
pop
adc
and
cmp
mov
jg
jecxz
push
pop
pop
movsb
cmc
pop
xchg
push
dec
outsl
inc
out
and
xchg
test
jecxz
divb
ret
in
loop
mov
pop
jp
sbb
push
dec
lahf
cmp
adc
push
jmp
cmpsl
dec
xor
ffree
mov
ljmp
cmp
rcrl
jo
repnz
ja
xlat
scas
pop
xchg
dec
xchg
jo
pop
idivl
sbb
in
dec
push
data16
mov
ja
ljmp
xor
jl
test
xchg
jmp
sbb
xchg
xor
loop
xchg
pop
push
cmp
in
mov
aam
insb
jp
mov
clc
test
aas
paddsb
cld
stos
lods
push
jno
call
data16
lret
rcrb
lock
test
pop
aaa
pop
jo
dec
jb
clc
push
imul
test
adc
enter
and
pop
lcall
lods
rol
addr16
xor
int
xor
test
pop
dec
xchg
outsl
into
nop
lahf
or
dec
dec
mov
inc
mov
xchg
and
mull
or
mov
sbb
xor
mov
out
lods
cmp
ja
cmp
negb
movsb
les
xor
cmp
xchg
incb
lahf
into
rcll
xor
imul
and
into
rclb
int3
push
cmp
loope
or
and
int3
and
aad
iret
dec
cmpb
xchg
push
jbe
pop
fdivs
sti
fbld
adc
pop
add
mov
neg
fidivrl
fcoms
popa
dec
sub
shll
sub
cwtl
lret
std
jns
push
das
and
push
pop
into
pop
jns
inc
dec
cmc
mov
int
dec
icebp
cmp
sbb
push
sub
mov
std
mov
push
out
push
jo
shll
dec
ret
push
mov
lock
sarl
sbb
int3
lods
xchg
dec
ret
push
lods
push
or
mov
dec
lret
sub
fmull
out
ret
addr16
mov
gs
xor
jnp
loop
mov
cmp
cld
mov
rclb
mov
sbb
adc
ja
jns
push
inc
sub
pop
shll
test
mulb
mov
lea
mov
xchg
jae
jp
mov
dec
data16
jae
mov
adc
scas
jp
pop
aad
dec
shrl
lock
out
out
popa
std
jb
insb
mov
cmp
pushf
mov
xor
cmpsl
neg
jno
pop
cwtl
jle
mov
cmp
pop
jnp
dec
dec
ret
or
nop
push
insl
mov
fsub
xchg
aas
xchg
cli
and
lods
push
cli
push
sub
push
mov
sbb
sub
div
testb
sub
inc
jo
loop
out
sbb
ja
loopne
cmp
cwtl
xchg
xor
ss
repnz
sahf
mov
fists
fstl
sub
inc
fistpll
test
shr
test
mov
lea
sbb
outsl
enter
and
outsl
aam
ret
mov
xchg
inc
or
xchg
iret
in
add
sub
or
xchg
mov
cmpsb
adc
mov
push
cmp
repnz
rcll
pop
repz
mov
and
shlb
loopne
and
cmp
jmp
add
sbb
insl
xchg
sub
xor
mov
push
mov
fmul
movsb
sub
xor
mov
inc
outsl
sub
push
sbb
test
negl
and
inc
out
jl
insb
ss
ret
das
dec
lret
cli
pusha
cwtl
mov
fsts
insb
stos
push
jbe
aad
mov
pop
repz
sahf
sbb
pop
and
aas
nopl
inc
and
dec
jecxz
mov
bound
adc
and
mov
mov
mov
jmp
ja
hlt
mov
xchg
aam
stos
mov
xchg
fsubrs
dec
xchg
mov
or
mov
inc
push
loope
adc
clc
xchg
lods
out
movsb
in
mov
jle
rclb
cmpb
dec
and
push
mov
leave
int
xor
mov
inc
mov
ret
fnsave
into
movsl
sbb
imul
mov
clc
mov
or
mov
lea
sub
adc
mov
mov
jnp
imul
jecxz
gs
mov
ljmp
scas
xor
test
add
gs
dec
in
rep
adc
push
jbe
jmp
jb
lock
or
adc
daa
mov
cs
out
lcall
xlat
cmp
add
ja
iret
shll
jge
in
cmp
cli
mov
stos
mov
push
dec
add
std
and
pusha
pushf
sbb
scas
movnti
mov
call
xor
jne
jle
pop
bound
inc
mov
dec
push
jae
es
mov
jae
out
loop
dec
int
and
mov
leave
cmp
ja
dec
inc
and
cs
cwtl
dec
out
push
add
adc
pop
icebp
cmp
add
ja
adc
aad
dec
jle
dec
pop
adc
imul
es
pop
in
js
repnz
in
lahf
repnz
mov
das
data16
cmp
add
clc
jae
orl
movsb
xor
push
mov
pop
das
push
into
ja
inc
lds
mov
pop
pop
into
pusha
mov
ljmp
pop
or
imul
fsubrs
std
call
addr16
push
int3
push
mov
or
push
aaa
test
cmp
lds
push
idivl
xchg
or
movsb
xor
mov
hlt
adc
movsb
jecxz
outsl
adc
enter
sbb
cltd
out
outsl
jns
lret
xor
or
adcb
cmp
jle
shl
mov
pop
mov
call
js
sbb
pop
fldenvs
jns
and
push
das
std
pop
cmp
pushf
and
dec
mov
fdiv
adc
xorb
add
movsb
bound
orb
fmuls
dec
adc
xor
or
xor
adc
xchg
push
xor
pop
pause
fstpl
ss
outsl
dec
sub
dec
mov
fistpll
bnd
sub
ja
leave
sub
arpl
fmull
enter
pmulhuw
fistl
jp
push
fwait
cltd
mov
sub
pop
mov
inc
int
outsb
pop
mov
iret
mov
addr16
insb
sbb
ret
loopne
aas
sub
mov
daa
pop
popf
stos
dec
gs
cmp
data16
sbb
and
cmp
insl
jl
pusha
jmp
xchg
out
ret
push
lret
movsl
fistps
add
pop
adc
inc
pop
xchg
jnp
pop
mov
mov
cmp
icebp
imul
dec
push
cmp
add
add
inc
mov
cmc
imul
lods
mov
mov
cmp
das
ja,pn
sub
mov
jbe
pop
xor
adc
add
xor
inc
in
jg
popf
mov
scas
lds
xlat
int3
push
ss
cmp
jbe
enter
std
stos
jecxz
mov
pop
add
and
cmp
js
jo
in
inc
and
sbb
push
rcr
mov
movsb
jnp
xchg
mov
sbb
daa
or
int
and
fimull
dec
lods
sbb
clc
mov
lods
imul
dec
inc
xor
push
lret
lret
sbb
scas
pop
adcl
or
les
loopne
aaa
xor
xchg
mov
push
fadds
lds
mul
pop
test
dec
repnz
cmc
and
jge
mul
xchg
push
xor
jl
out
mov
ret
jb
mov
enter
xchg
xchg
jno
rcrl
sub
pop
mov
outsl
cwtl
or
mov
adc
xor
jnp
stos
shl
fadds
mov
or
adc
lahf
adc
cmp
add
in
dec
fucom
data16
lock
dec
jp
scas
push
pop
dec
sbb
jl
sbb
sbb
cmp
mov
out
push
push
stc
fcoms
or
enter
xor
stc
sub
out
and
sbb
mov
cli
or
sub
js
push
jmp
or
pop
add
movsb
pop
fdiv
loope
daa
pop
cmpsl
test
mov
pop
jge
xor
jg
ficompl
jge
xchg
lahf
adc
mov
push
loop
inc
lock
xchg
loop
dec
inc
xor
mov
int
popl
arpl
mov
xchg
mov
push
mov
movsb
jg
enter
mov
inc
andb
clc
jb
adc
notl
std
or
ror
in
cmpb
jno
add
inc
cmc
dec
sbbl
jnp
shrl
mov
xor
or
mov
push
sub
roll
cmpsl
push
cli
or
inc
out
pop
mov
jge
mov
xchg
mov
or
inc
fisubl
xchg
fwait
mov
jle
and
sub
or
movsb
fsts
mov
repnz
and
fists
lods
shr
popa
mov
inc
into
test
jle
inc
inc
mov
mov
mov
or
sub
int3
push
and
subb
or
mov
cld
lea
mov
lds
cli
push
mov
cmc
jae
cwtl
add
scas
insb
sbb
mov
xchg
jge
sbb
movsl
ret
loope
hlt
dec
dec
jp
lea
aaa
dec
dec
fimull
sbb
jno
addb
in
sub
js
loope
inc
testl
es
inc
outsl
push
cmpl
inc
iret
or
inc
mov
xchg
insl
sbb
pop
push
push
cli
inc
push
adc
sub
pop
pop
dec
inc
xchg
or
mov
inc
sub
sbb
or
popf
mov
mov
cmp
stos
mov
jno
lds
pop
jle
add
rolb
pop
lcall
push
push
and
movsl
dec
cmp
add
mov
mov
cmp
inc
sub
mov
int
cld
popf
xor
or
fistpll
mov
add
lock
xchg
addr16
icebp
sbb
lahf
jae
cmpsl
div
mov
out
test
test
cmp
push
mov
adc
movsb
leave
mov
add
jle
popa
les
xchg
rcrb
pop
data16
xchg
insb
movsb
hlt
push
xchg
cmp
mov
mov
inc
stos
ret
jle
mov
out
xor
and
stos
imul
add
and
pop
stos
lods
fnstenv
push
repnz
fwait
jmp
data16
icebp
push
movsb
xlat
or
test
jmp
mov
add
dec
or
dec
add
jnp
into
addr16
ljmp
dec
cmp
xchg
or
js
out
mov
mov
enter
call
repz
pop
es
addr16
lods
repz
cmp
mov
and
xchg
cli
fsubrs
lret
mov
pop
sbb
jl
lea
addr16
nop
fimull
add
sub
imul
push
and
in
push
xor
jecxz
pop
fdivrs
sbb
jne
sbb
xor
hlt
aas
shlb
or
cmp
inc
lret
mov
mov
jne
add
jb
into
lock
movsl
push
dec
jl
push
and
pop
pop
repnz
outsl
dec
jns
jp
push
inc
cwtl
adc
xchg
jle
scas
call
xchg
dec
jb
mov
das
sahf
bound
ror
aaa
xor
or
sub
cmp
xor
daa
mov
stos
pop
andl
sbb
mov
pop
clc
add
inc
pop
leave
xchg
and
jo
pop
cmpsb
or
add
mov
add
push
loop
xor
stos
movsl
ss
into
xor
sub
rcrl
xchg
aad
fisubrl
or
mov
push
and
sub
icebp
dec
out
pop
dec
fstpt
in
scas
jle
xor
inc
and
push
je
push
push
push
cli
sahf
ds
sbb
testb
out
cwtl
xor
insl
out
shrb
out
sbb
jb
shll
repz
pop
cmpsb
push
test
or
xor
je
mov
popf
and
mov
sub
pop
lahf
inc
dec
jo
xor
cmp
pop
rcrb
mov
cwtl
in
aaa
mov
inc
testl
in
dec
pop
mov
inc
popa
xor
pusha
arpl
adc
sbbb
and
mov
loopne
sti
sbb
outsb
xchg
add
cmpsb
add
sub
push
xchg
jmp
jnp
repz
cmpsl
fwait
adc
iret
pop
dec
cmp
and
cmc
push
aam
js
je
jmp
xor
lods
jmp
pop
mov
add
cld
fwait
cmp
not
jecxz
decb
push
inc
inc
pop
repz
xor
and
roll
into
insl
test
lcall
adc
inc
sbb
jp
lock
inc
pop
mov
cmpsb
fnstsw
adc
iret
pusha
sbb
add
lds
lret
mov
xchg
mov
cmpsl
adc
ja
inc
adc
mov
mov
addl
dec
cmp
aam
adc
adc
sbb
ja
push
ret
xor
xor
jge
movsl
sub
dec
aam
mov
int
mov
rcr
add
push
jbe
orl
jnp
cltd
rcl
sahf
mov
movsl
sarl
out
les
inc
sar
nop
cmc
pop
stc
outsb
mov
popf
loopne
pushl
push
mov
inc
test
loope
addr16
jle
and
addr16
bound
bound
mov
popf
out
test
jo
cmpsb
inc
push
shlb
sbb
lds
vmwrite
imul
inc
fdivrl
ljmp
jge
fidivrl
sti
mov
sub
push
adc
pop
mov
gs
mov
in
push
shrb
pop
test
lds
movsl
xor
push
sub
fcomps
rorl
mov
fs
xchg
stc
std
pop
xchg
dec
shll
mov
jbe
mov
fmull
lret
xchg
pop
pop
dec
jno
inc
or
mov
jmp
mov
aam
inc
addb
or
loopne
push
std
xchg
insb
into
inc
ret
inc
mov
add
icebp
jmp
sbb
lcall
jmp
scas
pop
stos
sub
lret
sbb
movsb
cmp
cmc
lds
xor
inc
cmp
rorb
inc
or
jmp
fistl
cmp
pop
imul
popl
or
cmpsb
rcl
int
xchg
jbe
mov
mov
orb
dec
cmp
xor
gs
xlat
and
mov
mov
call
dec
mov
or
dec
pop
mov
and
jge
imul
in
test
cld
pop
sahf
enter
jmp
out
push
out
addb
inc
rcl
and
fs
mov
xor
adc
loop
mov
in
mov
jno
sub
mov
es
cmp
mov
push
mov
add
push
sub
mov
xor
cmpsl
das
inc
test
pusha
jmp
fwait
es
jle
xor
imul
sbb
rcr
sbb
jbe
shl
inc
sbb
dec
mov
clc
jp
loop
loop,pn
jnp
sarl
mov
sarb
in
inc
or
sar
push
and
mov
lds
mov
pop
xchg
mov
jg
js
dec
arpl
xchg
xor
xchg
sbb
cs
dec
bnd
lret
pushf
jmp
andb
rolb
xchg
pop
or
stc
arpl
movsl
dec
bound
divl
and
ficoms
out
and
pop
inc
jecxz
lock
hlt
dec
fsubs
cmpsl
imul
lret
sbb
aad
or
nop
dec
fnstenv
fcmovnbe
xchg
mov
ja
mov
sbb
popf
sub
cmp
ljmp
mov
rorl
or
adc
pop
jae
push
cli
mov
mov
imul
adc
insl
cltd
cmc
sbb
mov
dec
sub
pop
adc
sub
sub
pop
or
shll
dec
push
lock
hlt
xlat
lock
arpl
insl
sti
in
daa
popf
mov
inc
push
cmp
add
push
jl
adc
cmpsl
xchg
loop
dec
decl
sahf
sub
mov
push
jnp,pn
repz
jbe
les
les
mov
ljmp
ljmp
add
mov
dec
and
cmp
in
out
insb
sahf
ss
aad
cmp
shrb
rclb
movsl
push
cmp
xor
mov
jns,pn
stc
dec
addr16
sbb
mov
mov
pop
out
cltd
rcl
jge
inc
lcall
popa
sbb
imulb
aaa
pop
and
out
mov
mov
clc
gs
movsb
mov
nop
adc
cmp
push
loop
fwait
mov
imul
pop
add
mov
push
sahf
hlt
sti
sbb
sub
les
adc
leave
adc
lahf
jg
stos
cmp
xorb
mov
fwait
ret
jle
rorb
shlb
jecxz
cld
dec
ficompl
dec
cld
dec
orb
pop
inc
sbb
inc
data16
pop
xchg
loopne
pop
and
hlt
repnz
add
ret
dec
enter
add
imul
dec
jmp
shrb
leave
rcll
out
mov
fs
push
add
sub
jns
xor
sub
push
arpl
jae
daa
jnp
jmp
mov
repnz
sub
mov
pop
insb
mov
add
aas
mov
ja
sub
iret
in
xor
sbb
jae
push
sub
dec
cltd
jecxz
adcl
jecxz
pop
and
fistps
pop
icebp
stos
dec
cmp
or
jns
inc
adcl
sub
pop
mov
pop
inc
mov
sub
cmp
imul
enter
mov
negl
test
popw
xchg
lds
mov
lcall
stos
lret
xchg
push
insl
push
or
mov
repnz
add
mov
and
sub
push
mov
or
and
sbb
sbb
jae
ja
into
aas
into
dec
iret
jns
jno
addr16
mov
ja
jnp
mov
lcall
arpl
cltd
int3
add
push
fucomip
ljmp
jnp
cmpsb
mov
jmp
insl
xchg
ss
lahf
mov
cmp
jmp
les
cmc
mov
push
cmpsb
sbbb
sub
push
cli
lods
rolb
jb
dec
iret
pop
loop
out
enter
push
pop
orl
xchg
iret
adc
hlt
call
push
outsl
and
jb
push
jo
fiadds
into
jge
dec
push
mov
cmpsl
fdivl
aam
das
xchg
scas
fdiv
mov
pop
cmp
fildll
mov
add
add
xor
or
dec
sahf
je
mov
jmp
jp
pop
jo
inc
push
roll
mov
bound
fisubl
fcmovnbe
int
or
cmp
cmp
jp
or
pop
dec
push
or
sub
sbbb
out
mulb
adc
ja
dec
inc
lret
test
pop
nop
jb
and
add
out
cmpsb
dec
xchg
mov
dec
cmp
xor
mov
cmp
lret
popa
add
addb
inc
push
pushf
dec
aad
xchg
dec
scas
push
xor
pop
or
adc
and
fimuls
and
sub
mov
xchg
into
mov
or
push
fdivl
sbb
xchg
pop
mov
mov
and
adc
mov
nop
es
scas
jns
pusha
add
aam
sub
jnp
sub
cs
repnz
ret
mov
ss
int
mov
push
andb
mov
xlat
mov
int3
and
cmp
or
jl
push
xor
scas
xchg
adc
ret
ja
sub
loop
push
push
je
xchg
cwtl
add
arpl
and
lcall
popf
sbb
mov
addb
ret
sub
aad
iret
es
dec
mov
mov
push
and
mov
mov
bound
cltd
out
addr16
jle
push
andb
sub
add
subb
scas
out
xchg
mov
dec
dec
mov
xchg
cld
xchg
cmp
cli
iret
lds
nop
mov
insl
jno
mov
lods
mov
je
add
or
in
cmpsb
shlb
jns
add
or
dec
dec
out
mov
ret
dec
bound
cmp
shll
sbb
jae
jmp
rcr
fidivrs
sbb
lds
mov
dec
mov
call
mov
inc
lret
pop
add
cmp
ja
repz
lcall
js
lds
subl
sub
jle
cmpsb
mov
test
sbb
adc
sahf
out
sbb
add
inc
pop
pop
mov
je
clc
mov
testl
jle
das
out
aam
pop
out
das
mov
push
mov
jo
push
in
sbb
lock
mov
lea
sbb
inc
insb
xchg
adc
mov
or
xlat
clc
lds
lods
mov
xor
das
mov
sub
fwait
popa
inc
cli
aaa
add
sbb
stc
ljmp
enter
jmp
std
es
out
aad
xor
fdivp
sbb
xchg
mov
add
xchg
add
ss
xchg
sbb
or
repz
fisttpll
adc
fs
xchg
jecxz
xor
out
push
pop
sub
pop
insl
loopne
pop
jae
xchg
jecxz
jbe
test
adc
jbe
pop
xor
pop
jg
sub
or
shl
mov
xlat
cmp
repnz
bound
xchg
mov
jns
push
mov
mov
and
ss
sti
sub
cmp
data16
sub
and
adc
jmp
ret
aas
dec
fmuls
fwait
fsubl
fildll
int
hlt
xchg
xlat
inc
cli
push
nop
xor
shrl
orl
xor
pop
push
into
push
xor
cmc
arpl
out
fists
ret
push
into
out
sbb
cmp
xor
pop
push
xor
fs
sub
pop
sbb
ret
fildll
sbb
hlt
push
mov
or
cmp
mov
push
xchg
add
adc
pop
xchg
add
repz
jmp
unpcklps
andb
inc
rclb
jae
sbb
sub
scas
sub
cmp
xchg
sar
pop
adc
xor
orw
mov
jno
loopne
mull
pop
rclb
fstl
mov
jge
jmp
imul
mov
mov
sub
scas
ficomps
or
pop
imul
mov
dec
fdivs
jge
adc
into
and
jnp
in
jnp
ret
bound
mov
stos
push
das
dec
lods
push
shlb
inc
scas
mov
xchg
je
sub
movl
addr16
andl
or
enter
test
daa
push
xchg
jbe
jae
ss
stos
ret
inc
xor
xchg
cmp
cli
pop
icebp
insb
je
sub
mov
dec
mov
add
enter
cmpsl
std
xor
mov
pop
aaa
sub
shll
daa
test
mov
jb
stc
mov
pop
outsb
sbb
sub
fadds
cltd
stos
lods
push
repnz
rcrb
xchg
inc
clc
and
daa
loop
adc
scas
out
xchg
cmp
pop
jg
sbb
int
daa
xchg
xchg
fdivr
scas
sbb
dec
pop
shrb
jbe
cmp
xlat
cmp
rep
pusha
ret
leave
into
out
pop
mov
mov
jb
adc
cmp
push
mov
lds
push
cmp
pop
mov
sub
fsubl
mov
outsl
sti
ds
jb
std
es
jnp
cmp
fmuls
icebp
daa
jecxz
test
lea
sub
inc
jae
ds
and
pop
insb
dec
adc
into
outsb
xchg
pop
imul
test
rolb
and
sbb
mov
jae
push
lods
jge
int3
sbb
lcall
mov
loop
and
arpl
jb
mov
fdivr
sub
fstp
cmp
jnp
jge
test
test
sti
cmc
jp
lods
or
sbb
int3
std
sub
mov
xchg
inc
inc
and
jo
aaa
mov
popf
xchg
fidivs
loope
or
mov
push
xchg
sbb
sti
dec
sub
rorb
imul
in
jmp
push
fucomip
mov
xlat
into
das
repnz
pop
cmp
loopne
std
lahf
mov
test
stos
ficoms
pop
ficomps
xor
aas
icebp
jb
xlat
pop
pop
sbb
xor
push
mov
adc
xchg
in
bound
fsubrs
in
fisubrl
mov
push
outsb
cmp
fstp
ds
aaa
pop
push
push
add
popa
cmpsb
inc
mov
jge
lock
mov
mov
in
jg
jmp
rclb
sbb
mov
pop
xchg
lea
dec
cmpsl
bound
inc
push
call
ficoml
test
popl
jecxz
daa
cs
imul
dec
adc
adc
adc
jns
mov
mov
or
negl
push
pop
jecxz
movsl
fs
mov
sbb
cwtl
mov
sti
pmulhw
mov
ja
ljmp
pop
insb
ret
fsubl
dec
mov
loopne
outsb
pop
push
nop
or
inc
mov
jg
xchg
lock
test
std
push
add
push
out
test
arpl
outsb
xor
xor
jae
mov
aas
mov
into
inc
pop
das
test
sahf
scas
push
xchg
lods
les
test
filds
bound
mov
das
les
push
cmc
addl
sarb
cmp
push
pop
insl
pop
pop
jg
nop
pop
fs
cwtl
loopne
sti
shlb
or
lds
fs
loope
and
sbb
fidivrl
cltd
decb
or
jecxz
mov
add
jg
inc
fs
or
int3
sti
ret
mov
or
std
mov
add
xor
and
push
inc
pop
sti
sbb
insb
cmp
jp
push
jle
pop
insl
sub
shll
lea
pop
in
lds
cwtl
cmpsb
loopne
pop
movsl
cmp
push
out
cmpsb
js
add
inc
jp
dec
or
out
pop
notb
jo
mov
adc
mov
hlt
and
lcall
jle
fstpl
repz
pusha
mov
push
xor
push
clc
pop
adc
cld
daa
je
fisubl
ror
lea
negl
aas
sub
cmp
popl
ja
scas
cmpsb
mov
jae
int
nop
add
aaa
shlb
lahf
sub
mov
xchg
jecxz
stos
in
pop
scas
push
dec
push
push
int3
jo
js
sub
arpl
mov
and
xor
mov
sub
insl
mov
pop
loope
push
repz
jg
sbbl
js
scas
divl
mov
fs
pop
xchg
aam
cmp
ds
stos
cmpsb
inc
sbb
pop
lods
cld
shll
inc
ds
in
push
into
in
or
and
inc
movsb
cmpb
shl
pusha
icebp
gs
shrb
data16
jge
icebp
in
dec
dec
mov
push
cltd
pop
pop
int3
xor
pop
or
pushf
pop
xchg
call
push
and
test
fs
ja
pop
lods
iret
push
nop
popa
cmc
inc
jns
call
enter
sub
sbb
popf
xchg
push
aam
and
jne
sar
sahf
sbb
ret
lret
and
mov
or
mov
sbb
icebp
jmp
dec
adc
nop
or
and
inc
adc
popf
mov
pop
movsb
or
add
push
push
fwait
or
sub
sub
sbb
outsb
jecxz
pop
xchg
ljmp
sub
cltd
pop
inc
inc
jns
pop
in
mov
repz
repz
add
sbb
lea
adc
imul
push
mov
fnstcw
push
sub
test
out
jg
sbb
inc
pop
call
or
lret
mov
daa
mov
in
pop
test
jecxz
xor
lret
push
jbe
sbb
add
adc
loope
jle
negb
jb
push
ss
rol
mov
cmp
rcrb
jbe
push
test
mov
mov
jg
inc
jbe
ss
jae
xchg
lret
lods
jl
jne
adc
cmp
jnp
push
mov
lock
mov
imul
mov
pop
inc
mov
fildll
push
mul
cmp
inc
int
cmp
rcrl
jecxz
addr16
lahf
out
jns
xor
mov
push
cmp
fcmovnb
scas
cltd
and
je
xor
sub
out
push
cmp
arpl
mov
loope
add
adc
pusha
inc
sub
mov
test
push
pop
xlat
sbbb
mov
loopne
add
xor
jp
add
cmp
cmp
out
pop
in
inc
arpl
sbb
in
mov
push
pop
orl
add
sub
cmp
fs
repz
cmp
push
add
jbe
ret
sti
jmp
fmull
imul
stc
dec
or
mov
sub
sbb
xor
aas
mov
inc
mov
nop
or
add
lret
cmpsb
fmul
imul
dec
loope
je
fldl
dec
push
jno
or
jl
push
cltd
sub
int
pop
xor
leave
add
add
mov
out
into
fisttpl
fcoml
dec
std
lea
xor
stc
xor
loop
inc
or
fldt
jecxz
cmpsb
push
aaa
push
and
shrl
jno
inc
ss
iret
ret
outsb
arpl
fmull
xchg
stos
lret
popf
lds
push
pop
xchg
xchg
aad
int3
inc
lea
gs
xchg
jne
cmpsb
pop
sti
add
inc
ficoms
sbb
les
adc
ds
sbb
xor
lret
ljmp
cli
inc
in
cmp
or
mov
push
fs
rcll
or
ret
push
fistpl
sbb
stos
mov
xlat
or
push
ds
mov
xlat
cmp
fwait
mov
xor
cmp
inc
push
lahf
shl
enter
dec
cmc
shrb
mov
in
or
sbb
ffree
fists
sub
and
fisubrl
fistl
xor
push
sub
dec
xchg
in
push
outsl
xor
stc
fistpll
fs
decl
jb
cmp
inc
xorl
repnz
jno
out
lds
fsubrp
mov
cmc
pop
ds
adcl
sub
ja
mov
in
cmpsb
push
inc
jle
cld
in
dec
cmp
iret
cmc
mov
push
sub
mov
pop
dec
lea
jecxz
and
sub
rcl
dec
cwtl
clc
mov
gs
adc
mov
mov
dec
inc
jle
cmc
cmp
outsb
pop
je
mov
cmpsl
dec
into
gs
iret
adc
mov
sub
and
int
sub
push
leave
int
dec
sarl
sti
or
or
push
pop
cli
pop
push
jp
add
jle
cmp
iret
in
fs
add
fsincos
jno
adc
inc
jl
in
add
mov
outsl
mov
and
cmc
push
cmp
loopne
addr16
aad
mov
lret
and
mov
shlb
add
and
clc
xlat
mov
jl
dec
mov
mov
pop
test
rcrl
fwait
lods
aas
jl
addr16
jb
int3
xor
ds
cltd
jle
pushf
aam
icebp
std
add
jle
test
push
enter
cmp
scas
adc
pusha
xchg
xor
mov
adc
dec
or
mov
mov
repnz
test
js
jmp
and
notb
ficomps
and
test
into
sbb
movsb
push
fcomp
insl
fstl
pop
iret
shl
mov
xor
lock
shl
pop
mov
das
sbb
ja
jle
mov
in
jl
ds
push
xchg
cmp
call
jle
mov
adcb
jp
pop
mov
mov
scas
iret
int
in
cmp
das
xor
jb
imul
dec
mov
jns
dec
lds
in
notl
rorb
jl
aad
stos
xor
sub
out
fs
fildl
xor
jbe
js
xchg
daa
sahf
push
add
pushf
mov
sub
aad
fwait
push
stos
add
jge
mov
xor
repnz
in
xchg
inc
cmp
icebp
add
push
cli
xchg
int
pusha
and
arpl
pop
push
ja
mov
in
sbb
ret
inc
call
xchg
jp
xchg
adc
scas
fsubrl
sbb
dec
outsb
out
add
xchg
xor
mov
push
mov
adc
daa
aaa
dec
gs
outsb
mov
or
mov
push
jb
in
mov
mov
lret
ss
lods
push
lahf
cmp
xchg
pop
cmp
pop
and
jle
subb
insb
insl
mov
gs
or
rclb
fcomps
js
movsb
clc
fstps
je
xor
inc
ljmp
lock
dec
orb
adc
inc
pop
sbb
cmp
je
or
jge
iret
add
or
fisubs
jge
clc
or
or
inc
cmp
mov
les
sub
loope
loopne
jge
dec
jle
jo
dec
mov
mov
cs
adc
mov
adc
and
lds
aaa
fcoml
imul
and
les
fimuls
sbb
je
dec
test
sub
call
fstl
dec
cwtl
outsl
shr
cmp
push
cmp
cmp
jp
cmp
mov
sbb
call
or
pop
xor
xor
pop
jmp
lret
jno
cltd
dec
inc
js
andl
sub
dec
xchg
add
hlt
xor
xor
aam
xchg
or
cmpsl
into
jmp
loopne
icebp
jns
xchg
imul
int3
and
inc
sbb
cmp
pop
insb
rcl
mov
jno
cs
fldcw
or
sbbl
in
shlb
inc
imul
or
fidivrl
cmp
adc
jmp
cmpsl
mov
xchg
mov
push
mov
pusha
cmp
test
jecxz
sbb
dec
orl
rcrl
sbb
mov
fildll
pop
mov
pop
add
push
jge
push
pop
push
imul
mov
jmp
in
add
fidivs
cmp
xor
xchg
sbb
decl
and
jae
dec
or
pop
ret
cmpsl
std
ficoml
xchg
jle
cmp
cmpsl
aad
sub
fwait
sahf
inc
insb
xor
push
mov
pop
test
out
mov
mov
jnp
cmpb
xchg
mov
test
mov
mov
push
test
or
ja
aam
outsl
std
lds
loope
xor
jo
insl
movsb
push
add
insl
mov
fwait
jo
dec
xor
or
aad
push
pop
stos
pop
inc
xchg
mov
xchg
jnp
imul
stos
sbb
imul
lock
push
mov
adc
movsl
fs
in
jo
ret
xor
cmovno
ljmp
fnstenv
pop
imul
mov
cmpsb
cld
outsl
sbb
dec
movsb
inc
cs
ds
insb
pushf
daa
arpl
add
inc
jle
loopne
cmp
mov
movl
jmp
jae
mov
add
xor
rorb
ljmp
ret
dec
ja
bound
mov
add
or
sub
icebp
pop
mov
arpl
jae
jg
out
cli
out
cmpsb
nop
pop
idivb
leave
mov
push
sub
adc
sub
mov
inc
call
pushf
shrl
int
es
cltd
fimuls
repz
cmpsb
rol
xchg
push
adc
lret
sub
push
gs
movsb
in
repz
xor
push
jne
dec
adc
sarl
cmp
loopne
pop
cld
pop
ret
pop
push
inc
or
or
addb
push
jge
mov
jge
cmp
sti
sahf
and
xor
lods
pop
xor
test
pop
ret
pop
add
movsb
cs
inc
or
dec
add
dec
pop
in
mov
push
arpl
arpl
or
dec
add
mov
xor
push
push
stc
cmc
gs
lods
stc
add
pop
jo
lret
ror
lcall
cs
jp
adc
mov
int3
fiaddl
jo
sbb
dec
fidivrl
jecxz
aam
sbb
cmpsl
in
popf
pop
dec
ficoms
scas
push
filds
add
mov
xor
jp
pop
repnz
and
stc
test
push
xor
jl
or
js
out
sub
mov
cmp
adc
mov
dec
xchg
pop
insl
sbb
dec
hlt
xchg
jg
push
and
fwait
dec
mov
call
cmpsb
subl
scas
mov
push
dec
icebp
jae
jl
mov
gs
aaa
popf
mov
int3
sub
mov
outsl
jbe
xchg
adc
xlat
jmp
cli
test
les
lcall
imul
out
fcmovu
add
das
jo
outsl
cmp
mov
fldcw
in
mov
sbb
sarb
es
loopne
movsl
add
adc
xchg
iret
test
xor
add
iret
sbb
push
add
push
mov
popl
jbe
dec
repz
mov
sub
test
jge
inc
push
or
dec
xchg
imul
jle
jo
cmp
push
scas
insb
push
jnp
lods
cmc
popa
mov
loope
testl
adc
cs
mov
or
sbb
loopne
pop
mov
pop
or
nop
lcall
jmp
stc
divb
lcall
neg
mov
cwtl
rolb
cmpsl
jge
mov
mov
stos
pushl
inc
imul
pushf
mov
dec
mov
dec
add
add
icebp
ficoml
je
cmp
mov
inc
inc
mov
je
jl
or
mov
jns
mov
pushf
adcb
dec
cmp
aaa
add
outsb
loope
dec
pushf
and
icebp
out
xor
subb
and
jns
mov
jb
pushf
sahf
xor
sbb
scas
aas
lcall
cmp
lds
ja
mov
repz
out
cmp
stc
sub
jnp
scas
fincstp
inc
lahf
call
lods
dec
cmp
fldcw
shlb
pop
test
jl
cmpsl
dec
jns
jnp
xor
pop
mov
insl
push
push
dec
and
push
dec
aam
mov
test
jns
gs
fisttpl
pusha
sub
inc
ljmp
jmp
das
xor
je
fucom
ljmp
add
arpl
addr16
mov
hlt
sarb
bound
js
movsb
xchg
and
popa
pusha
mov
je
and
adc
pop
jmp
lods
or
add
sbb
mov
je
imul
and
out
dec
xlat
mov
out
xchg
pop
imul
sub
shll
popf
imul
repz
pushf
jno
jmp
loop
xchg
mov
sub
stos
jbe
nop
mov
insb
mov
dec
mov
loope
push
inc
jecxz
int
int3
gs
jne
jns
inc
outsl
mov
insb
cmp
mov
inc
push
pop
into
pushf
sub
mov
std
fidivrs
iret
popf
xchg
cwtl
and
pop
jno
clc
cltd
mov
les
mov
inc
and
pop
cli
pop
or
testb
sbb
jbe
fnstenv
lcall
adc
rorl
jb
add
inc
xchg
mov
pop
enter
push
sub
inc
and
mov
cli
idivl
cli
movsw
mov
ss
sbb
push
in
mov
inc
test
ljmp
lods
cmp
shll
adc
cmpsl
mov
cmp
fsubrs
sti
pop
fmulp
adc
dec
inc
mov
ret
xchg
push
je
stos
sahf
cmc
fldt
or
aad
dec
mov
sub
inc
aam
sub
call
repz
imul
out
inc
add
cmp
cs
pop
lea
decb
test
mov
andps
fnstsw
mov
push
repz
xor
inc
lds
cwtl
or
sbb
push
lret
xor
pop
mov
sbb
mov
out
jns
arpl
xchg
aad
insb
cmc
sub
pushf
inc
dec
movsb
leave
jmp
xor
push
cmp
and
and
gs
pop
inc
sub
mull
outsb
dec
fisubrl
push
int
aas
arpl
sub
aas
loopne
std
repz
outsb
jl
mov
shrl
dec
xchg
mov
mov
sbb
xchg
mov
test
jnp
aad
aad
add
pop
add
lret
mov
adcb
pop
xchg
add
cmp
ds
insl
js
or
enter
dec
cmpl
dec
jp
xchg
es
cld
add
sti
fnstcw
cmp
outsl
fisttpll
call
and
lret
mov
dec
pop
cwtl
jb
lret
ret
sbb
cmp
add
and
add
push
mov
icebp
xchg
mov
loope
pop
xchg
leave
sbb
mov
dec
jno
mov
push
xchg
xchg
in
test
cmovs
push
dec
sub
jecxz
pop
mov
movl
imul
jnp
pop
out
stos
push
jmp
jecxz
xchg
jns
es
negb
mov
jns
sub
lods
sbbb
pop
mov
inc
pop
or
stos
pushw
mov
pop
xchg
imulb
addr16
ds
mov
xchg
xchg
leave
jns
push
dec
mov
push
add
or
and
into
leave
inc
jg
inc
or
mov
mov
bound
sbb
inc
dec
pusha
jl
jl
fistps
sbb
sbb
mov
inc
adc
test
aad
xchg
call
repnz
aas
and
fdivs
dec
cld
test
sbb
out
es
cld
jle
mov
pop
std
adc
mov
pop
bound
dec
clc
push
out
xchg
inc
movsb
push
sahf
test
in
test
cld
sbbb
sbb
mov
mov
xchg
insl
cmp
leave
pop
inc
or
and
sub
bound
jp
outsb
push
sbb
add
mov
pop
and
push
pop
test
ret
test
cmpl
fildll
into
test
lahf
arpl
push
movsl
pusha
fimull
loop
inc
lahf
js
mov
push
shll
insl
dec
fistps
bnd
jno
xchg
add
addr16
push
in
mov
pop
test
adc
loopne
repnz
imul
mov
hlt
mov
aas
sbb
into
dec
xor
frstor
loope
mov
sahf
mov
cmp
ret
mov
mov
mov
ficompl
repnz
movsl
push
mov
and
pop
sbb
icebp
movsl
test
mov
aaa
xor
ret
push
pop
in
jno
add
mov
mov
xor
xor
xor
addr16
cmp
add
adcl
negb
pop
mov
pop
xchg
push
sbb
inc
jnp
push
jg
movsl
xchg
lock
sbb
lea
jg
mov
nop
les
je
sbb
dec
dec
and
sub
int
jne
mov
mov
sbb
or
stos
pop
cmp
negb
pop
inc
dec
loop
js
out
aad
mov
or
pop
pop
dec
loopne
std
push
push
cmp
adc
test
jne
int3
jbe
repnz
mov
cld
push
pop
pop
mov
add
lea
xor
xor
xchg
sub
cmpsl
pushl
stc
dec
aaa
shrl
mov
mov
inc
call
pop
xchg
mov
dec
jne
jb
jo
sub
mov
test
pop
movsl
mov
cmp
and
test
in
and
push
or
aas
jmp
sub
sub
popf
lahf
subl
ret
movsb
inc
fidivrl
sub
adc
fidivrl
ja
mov
stos
xchg
lods
mov
sbb
jae
cli
mov
stos
popf
adc
mov
cli
sub
xor
jb
nop
dec
cwtl
lods
aaa
sbb
inc
adc
add
icebp
push
insl
aaa
out
pop
sbb
pop
pop
adc
push
dec
ljmp
push
pop
jnp
ja
aad
data16
and
cltd
jl
lret
push
fstl
xor
pop
dec
xchg
in
push
cmpsb
mov
scas
sub
xor
repnz
mull
test
mov
xor
outsb
mov
jecxz
sar
xlat
insl
clc
imul
fnstenv
jg
jae
test
jno
insl
das
stos
dec
xchg
scas
cld
sahf
adc
dec
push
les
data16
rol
sbb
pop
test
sub
and
imulb
mov
addb
sbb
mov
sub
mov
cmp
push
dec
orb
popa
jle
dec
pusha
ret
push
sub
push
lahf
enter
adc
ss
les
in
xor
mov
inc
mov
hlt
push
loope
imul
in
outsb
jne
loopne
nop
xchg
movsl
mov
outsl
xchg
arpl
loop,pn
popa
jmp
out
pop
arpl
cmp
out
scas
sbb
push
and
and
cmpl
daa
mov
mov
out
aas
mov
add
test
lds
sub
mov
shlb
adc
into
pusha
test
scas
jecxz
scas
jno
outsb
imul
scas
out
call
and
jnp
mov
test
leave
adc
iret
sbb
pop
out
repnz
or
dec
push
jbe
subb
or
lods
and
aaa
cli
xor
dec
xor
mov
movsl
push
cmp
test
adc
lahf
andb
in
xor
and
dec
out
ret
hlt
adc
add
lret
cmc
pop
mov
push
mov
xchg
clc
mov
mov
or
xor
or
ds
aad
push
push
test
aam
push
add
faddp
sub
shrb
sub
sbb
data16
push
jns
xchg
pop
fs
fstpl
adc
mov
cmp
enter
xchg
data16
sti
scas
add
dec
and
aaa
mov
xchg
loopne
or
and
icebp
and
inc
jb
dec
iret
ja
xchg
mov
hlt
mov
mov
jb
cmp
adc
pop
out
out
loopne
cmp
mov
dec
movsb
popf
jmp
and
enter
push
pop
mov
dec
cmp
and
fildll
inc
cmp
add
movlps
adc
call
or
jg
insb
fistpl
pushf
add
mov
mov
sbb
stc
xchg
push
or
dec
insl
mov
fdivrs
stos
fidivrl
jo
dec
pusha
jo
inc
pop
add
roll
test
xchg
lahf
clc
or
jns
out
ss
pop
mov
adc
mov
jnp
add
loopne
mov
pop
inc
xchg
dec
cmp
cmpsl
mov
cltd
mov
dec
xchg
push
int3
aas
enter
stos
fidivs
sbb
mov
in
pop
or
mull
xchg
imul
cmpsl
xchg
filds
xchg
xor
xchg
inc
cmp
mov
sahf
or
sbb
pop
mov
shll
inc
ret
in
fs
test
in
icebp
sarb
lock
inc
rorb
mov
cmp
xchg
pop
mov
jnp
xchg
je
out
sbb
adc
repnz
das
mov
push
xchg
push
cld
pop
jp
mov
xor
icebp
inc
add
or
imul
mov
int3
cld
aam
fisttpl
icebp
xchg
loopne
mov
mov
dec
sahf
and
mov
cwtl
push
sbbl
lods
gs
sbb
pop
inc
sarb
hlt
in
hlt
dec
std
out
add
into
dec
pop
in
testb
push
cs
jo
repz
rorb
mov
repz
push
negb
fs
sub
pop
or
js
stos
movsb
loop
dec
aas
lcall
mov
mov
push
ret
jae
add
imul
ret
fsts
mov
push
gs
inc
or
sub
xchg
leave
jl
mov
ror
pop
mov
jae
divps
xchg
in
xchg
int
lods
mov
xor
out
xor
jle
pop
dec
enter
xchg
jge
or
or
leave
ret
scas
push
gs
das
lret
push
and
mov
push
sarb
movsb
sahf
add
imulb
enter
sub
dec
ljmp
jl
inc
adcb
cmp
dec
into
adc
sbb
int3
push
dec
jo
jns
out
out
in
and
mov
dec
stos
mov
dec
xchg
mov
es
pushf
mov
mov
sub
sub
fnstcw
cld
nop
dec
mov
sbb
repz
out
mov
mov
addb
inc
testl
cld
sub
lahf
nop
cli
push
in
adc
daa
ds
loopne
repz
lock
jmp
pop
shll
add
fsubrl
inc
mov
add
push
jecxz
imull
ret
les
or
hlt
iret
and
arpl
stos
sub
mov
add
addl
mov
lcall
rorl
lcall
adc
xor
xchg
dec
sbb
jb
xchg
mov
sub
mov
orb
pop
imul
ret
inc
sub
inc
mov
out
or
or
insl
sub
mov
int
aas
pop
dec
push
xor
push
add
ja
mov
rcr
jno
jae
jns
pop
pop
outsb
pop
and
dec
inc
lea
dec
pop
push
roll
addr16
pop
sub
gs
popa
or
dec
shrl
enter
mov
mull
cmp
push
rorl
mov
jmp
mov
repz
push
sub
sti
lods
sub
jp
negb
dec
mov
adc
mov
sub
push
nop
mov
inc
or
pop
adc
mov
jb
outsl
pxor
insb
in
adc
ret
sub
imul
test
mov
jmp
iret
les
insl
adc
xchg
sbb
dec
mov
pop
test
stos
outsl
xchg
pop
mov
mov
dec
in
xchg
or
lcall
rclb
stos
pop
aad
dec
pop
xor
rcr
pop
xchg
aam
xchg
and
nop
addr16
push
into
xchg
adc
ljmp
mov
push
pop
or
clc
xchg
xlat
fldl
daa
mov
push
inc
fwait
test
cmpsb
imul
rclb
loopne
sub
pop
mov
ficompl
xchg
cmp
loopne
jecxz
jb
push
or
sub
repz
jne
out
mov
jb
fstpt
xor
pushf
mov
cmp
sahf
mov
add
js
mov
pop
push
push
adcl
pop
pop
add
test
push
pushf
in
orb
lods
cmp
shll
movsb
es
filds
xchg
pop
js
cmc
int
sub
scas
popf
gs
pop
adc
fsubr
js
ds
or
sub
fcmovnb
xchg
movsl
rep
mov
int
push
int
gs
fcom
push
xor
jmp
scas
sub
push
dec
in
pop
mov
scas
mov
aaa
fwait
sub
push
xor
pusha
lock
pushf
test
roll
je
out
enter
je
push
push
xchg
cld
pop
inc
mov
les
mov
mov
jb
inc
out
out
in
in
std
test
push
arpl
repnz
xchg
fnstcw
fidivs
mov
mov
jecxz
cmp
mov
jb
loopne
cmp
hlt
cmp
jnp
adc
push
mov
rorl
jg
xor
xor
inc
stos
sub
push
pop
mov
pushf
mov
xor
out
das
inc
gs
sbb
insb
cmp
test
bound
leave
add
insb
or
clc
jl
or
daa
dec
data16
fst
xor
xchg
out
dec
push
sahf
popa
repz
je
je
push
fisttpll
and
adc
push
xchg
out
loop
cmc
pop
cmpsl
inc
lock
scas
sub
push
jp
int
sbb
pusha
xor
mov
es
pop
jno
test
loop
mov
idivb
notl
sub
xor
fstl
out
out
mov
sti
push
mov
xor
outsl
pop
push
xchg
cwtl
adc
das
rcll
xor
icebp
stos
adc
cmp
sbb
ss
dec
cmpsb
and
dec
and
pop
push
cs
xor
jle
mov
sbb
cld
and
push
xor
mov
lahf
fcoms
xchg
stos
shll
je
sbb
xchg
jo
fldcw
into
push
lcall
mov
push
mov
jnp
js
fdiv
not
movsl
mov
cmp
shll
sahf
rolb
push
xor
nop
mov
outsl
xor
mov
stos
ret
xchg
push
pop
dec
arpl
cmp
push
jmp
rcl
adc
out
jecxz
lock
lret
adc
and
push
mov
js
sbb
jmp
movsl
int3
mov
xchg
mov
mov
inc
push
inc
mov
movsl
push
ja
cmp
jae
gs
hlt
es
dec
ds
and
lret
cmp
adc
xor
add
add
dec
dec
push
or
mov
xchg
repnz
adc
imul
mov
call
pop
pop
push
xchg
stc
mov
adcb
mov
das
mov
shrl
sbb
add
call
lods
cmp
ret
shlb
mov
add
push
jl
jae
sub
or
dec
repnz
push
stos
xor
sub
jge
clc
idivl
test
aam
dec
hlt
cmp
les
fidivl
sbb
pop
popa
sbbb
hlt
test
pop
jge
dec
arpl
clc
repnz
jbe
xor
xchg
daa
and
xchg
int
jnp
or
pop
fcomps
fwait
mov
mov
cwtl
or
push
jbe
add
in
xchg
ror
xor
xor
push
dec
outsb
jmp
leave
popf
icebp
jg
mov
dec
push
add
sbb
in
xchg
mov
mov
lds
cs
mov
nop
out
xchg
ljmp
xor
vmovaps
push
cmpsb
ds
aas
test
inc
das
xor
fsubrl
nop
mov
cmp
mov
pop
and
xchg
mov
pop
mov
hlt
xor
mov
mov
subl
iret
iret
ds
pushf
jle
arpl
fs
xlat
push
mov
mov
xchg
pop
sub
in
mov
and
or
das
hlt
jno
and
dec
and
and
es
xchg
cltd
loope
xlat
pop
cmp
in
dec
jo
test
outsb
int3
pop
jmp
jno
pushf
divb
in
mov
lahf
sbb
xor
fwait
inc
in
cmp
out
nop
stos
push
lret
cltd
pop
fnsetpm(287
jge
add
cmpsb
cld
mov
call
outsb
vpmulhuw
and
inc
pushf
in
push
mov
cmpb
and
inc
mov
data16
pop
das
inc
sti
outsb
xor
inc
mov
fsts
mov
mov
push
and
mov
sti
xchg
pusha
cwtl
sbb
jns
pop
lahf
rcrb
fisttpl
lcall
lea
lcall
push
js
ret
mov
add
mov
loopne
mov
dec
fcoml
dec
xchg
adc
std
sbbb
jg
mov
andl
sub
pop
arpl
xchg
sub
push
push
mov
inc
in
sub
shrl
cli
jno
and
das
jb
xor
add
sbb
add
shll
push
adc
dec
mov
movsl
repz
into
test
and
dec
insl
mov
jge
loopne
jbe
mov
scas
inc
xor
jnp
icebp
mov
sahf
ja
dec
sbb
fwait
adc
loopne
pop
frstor
mov
dec
jns
lea
mov
pop
pop
and
out
push
xchg
into
xchg
sti
roll
adc
mov
fldl
and
outsb
pop
orl
mov
mov
jns
xchg
movsb
jo
mov
pop
jb
mov
insb
mov
inc
pop
push
mov
ss
push
sbb
das
push
mov
inc
imul
add
int3
push
in
fisubrs
mov
sarb
fwait
loope
jg
mov
xor
mov
gs
xor
xchg
inc
pop
mov
andl
shrl
movb
pop
popf
jo
aaa
jmp
pushf
test
xchg
cmpsl
pushl
mov
xchg
ret
stos
mov
push
pop
stos
sub
adc
repz
and
and
push
out
jno
inc
push
jnp
addl
mov
mov
in
add
or
rcll
into
sarb
out
roll
out
dec
addb
roll
mov
pusha
iret
push
add
inc
ds
or
cmc
addr16
out
adc
xchg
nop
lahf
stc
cmp
sub
aas
jmp
inc
pop
arpl
lcallw
mov
inc
scas
lret
jmp
stos
fs
jmp
pushf
jno
xor
icebp
mov
and
mov
dec
mov
push
jle
rolb
xchg
or
bound
ds
cmp
insb
pop
adc
arpl
pop
test
push
ficoml
fisubrl
cmc
mov
hlt
inc
rcrb
lods
in
ret
push
scas
ss
cmp
jle
stos
mov
std
pop
je
fisubrs
dec
arpl
or
and
dec
mov
arpl
pop
rcrl
rcrb
cmp
ds
jmp
sub
test
and
and
leave
daa
jl
ljmp
aam
clc
mov
mov
ret
dec
and
iret
or
cmpsb
dec
pmulhuw
ds
jecxz
cs
sub
jnp
cmp
or
test
fisttps
movsl
xor
insl
aas
aam
mov
jg
push
bound
pop
adc
shll
or
shlb
pop
add
pop
in
pushf
lcall
xchg
fisttps
mov
or
mov
negl
scas
cwtl
push
rolb
mov
rorl
inc
divb
out
out
xchg
ret
dec
cmpsl
or
shlb
mov
inc
test
adc
mov
data16
mov
inc
xchg
test
dec
inc
xlat
jno
xchg
jge
push
and
lahf
inc
sub
xor
xchg
lea
cmp
pop
pop
sbb
xchg
fstl
jp
arpl
push
gs
sahf
jb
inc
sbb
into
and
movl
ja
cld
push
inc
addr16
in
sahf
jle
cwtl
pop
fs
aaa
insl
mov
imul
mov
cmpsb
in
and
inc
popf
dec
mov
in
fptan
and
out
push
stos
add
fsubrp
in
pop
popf
je
mov
stc
leave
out
sbb
mov
shl
inc
cmp
jns
jnp
xor
popf
stos
aaa
or
shrl
sbb
dec
clc
nop
or
outsl
pop
fwait
movsb
or
fcmovbe
enter
dec
cmp
inc
push
ljmp
dec
xorl
xchg
dec
mov
lods
or
les
xorl
mov
in
xor
or
stos
dec
add
cli
ds
xor
xor
dec
and
daa
insl
xor
adc
clc
aam
xchg
xor
stos
outsl
repnz
or
mov
insl
sbb
xor
fcompl
mov
divl
xchg
pop
xor
add
popa
push
add
or
sbb
std
imul
xchg
push
insb
adc
fcomps
sbb
ss
mov
in
lret
scas
mov
mov
fildl
xchg
dec
fistpl
sar
xor
jnp
xchg
movb
mov
xchg
insb
test
mov
push
in
bound
jns
lret
dec
mov
prefetcht2
std
hlt
ljmp
adc
mov
push
sub
dec
pop
or
pusha
cwtl
movsb
push
aad
filds
xor
sbb
inc
jne
push
push
jne
js
jge
dec
mov
outsb
mov
adc
std
or
test
mov
xchg
jne
cmp
enter
test
add
fnop
fsubrl
pushf
mov
test
cmp
call
jl
fsubr
push
pop
push
out
cli
inc
pop
nop
cmp
cli
mov
in
pop
in
jb
push
faddl
shl
ffree
incb
pop
in
lods
out
push
daa
in
iret
pop
pop
jbe
inc
sbb
pushf
and
push
movsb
and
ss
mov
iret
xchg
inc
fisubl
mov
movsl
ret
outsl
pop
andl
pushf
jp
ljmp
sbb
xchg
cmp
jo
mov
shrb
test
cwtl
insb
out
fsubrl
cs
push
in
inc
data16
and
shl
jl
hlt
aam
test
jmp
and
aas
mov
mov
xlat
cmp
adc
cwtl
test
xchg
mov
aas
bound
cltd
jg
push
fbstp
push
test
sbb
mov
lret
pop
mov
xorl
push
test
lcall
adc
add
leave
inc
jns
out
cmp
inc
mov
cli
jno
lahf
outsb
aas
mov
push
xor
cld
inc
out
mov
aam
hlt
mov
cmp
movsl
and
mov
push
mov
int
cs
push
sub
pop
or
movsl
sub
pop
mov
adc
sbb
jle
cmpsb
sbb
mov
int
ret
fidivrs
inc
iret
inc
ficoms
into
mov
cs
mov
adc
cmp
push
loop
in
adc
dec
mov
pop
jae
jl
xchg
decb
lcall
add
in
xchg
dec
xor
sub
insl
stc
mov
cmc
ficompl
adc
cld
ud0
rcrb
jl
popa
std
sub
fcmovnu
in
jp
inc
inc
or
divl
add
es
xchg
pusha
mov
inc
fiadds
enter
xchg
inc
add
cmp
rcll
cmp
clc
mov
fsubrs
imul
subl
push
adc
sub
sub
add
inc
dec
or
insl
stos
mov
leave
add
jae
cmp
jmp
pop
das
andb
xor
and
inc
call
arpl
pop
or
pop
icebp
mov
push
and
push
test
in
add
sbb
jb
out
xchg
mov
lahf
fildll
adc
fidivrs
mov
insb
mov
adc
clc
mov
mov
je
add
test
ret
shll
mov
pusha
ja
fdivl
cltd
pop
mov
pushf
pop
mov
sbb
mov
sub
ret
push
mov
mov
or
dec
sbb
mov
add
inc
push
shl
adc
cltd
and
xchg
les
dec
andb
sarl
scas
cmp
jo
cmp
mov
jge
jb
mov
mov
lret
cmc
test
dec
stc
pop
mov
daa
in
jo
mov
push
arpl
dec
mov
xor
or
pop
push
js
shlb
ret
dec
mov
pop
pop
sub
cli
pusha
movsb
pop
dec
loope
out
test
in
dec
fisubl
addr16
daa
inc
xor
cwtl
loope
mov
dec
push
ret
shlb
push
cmp
out
adc
and
imul
into
imul
mov
adc
add
stc
cmc
fisttpll
imul
lods
icebp
sbb
cmc
or
pop
aaa
xchg
add
jae
mov
leave
pop
adc
inc
jg
jae
lds
cltd
push
pop
movsb
xor
dec
outsl
xchg
jnp
fisubrs
pop
cs
popf
ja
pusha
mov
test
lods
imul
sti
jge
sub
xorps
data16
dec
xchg
adc
jo
out
testb
nop
cld
jo
dec
pop
ljmp
cmpsl
add
imul
mov
push
sub
scas
cs
fdivrs
jb
fmuls
jbe
add
inc
cs
aaa
testl
insl
push
inc
add
nop
lods
inc
cmc
pop
push
sub
popf
movsl
or
push
sbb
jle
push
cli
add
pop
sbb
sbb
mov
sub
xlat
mov
es
sbb
cmpsb
jno
out
cltd
leave
cmpsl
call
les
jne
dec
iret
pop
jae
sub
and
pop
fsubl
mov
push
push
popa
pop
mov
pop
xor
rclb
cmp
fcomi
mov
jp
pop
out
fdivrl
pop
arpl
and
repz
ds
out
icebp
cmpsb
and
daa
inc
jmp
insl
scas
inc
pop
fcoms
mov
xchg
out
stos
mov
xlat
sub
pop
add
jno
mov
dec
dec
and
jp
push
jmp
push
mov
jg
dec
dec
sub
sarb
mov
add
jmp
add
cmpl
test
lods
push
adc
aad
add
scas
xchg
insl
jmp
loop
mov
popf
call
pusha
sub
pop
xor
or
or
ret
push
dec
inc
loope
pop
xor
cmp
dec
cld
pushf
pushf
pushf
aad
push
movsb
push
cld
add
fs
lret
cwtl
repnz
in
outsb
push
js
pop
in
lcall
cmpsl
lods
pop
mov
cltd
outsb
jl
outsl
test
pop
fistpl
sub
fdivr
pop
popf
das
pushf
gs
imul
mov
push
mov
sub
mov
mov
adc
cli
fnsave
push
push
add
arpl
cmp
push
add
int
les
mov
sub
in
idivl
cmp
jbe
mov
adc
push
or
pop
insb
es
push
imul
mov
or
movsl
inc
xchg
pusha
les
aad
fsubl
pop
aas
test
push
mov
adc
cmpsl
add
inc
ss
sbb
mov
fidivrl
xchg
mov
jg
dec
ds
in
pop
rorl
mov
push
jmp
inc
or
xchg
notb
jns
jb
fstps
mov
lods
int3
jbe
xor
lods
inc
loope
dec
dec
cmp
and
idivl
xor
dec
sbb
scas
sbb
cltd
ss
mov
jecxz
aaa
es
sti
enter
mov
fistpl
in
add
add
ss
sub
xor
ret
push
lock
jmp
lcall
fldcw
shrb
xlat
xor
jae
adc
cmp
mov
xor
roll
movsl
pusha
inc
lds
pusha
loop
sub
enter
pop
pop
xor
adc
or
adc
dec
test
pop
out
mov
xlat
mov
and
jecxz
test
push
push
aam
dec
or
mov
stos
mov
pop
ret
shl
mov
fst
pop
movsb
in
jae
cli
mov
cmc
in
cmp
add
sarl
rcll
mov
mov
daa
add
jmp
jbe
dec
rorl
or
xlat
sub
rcrl
cmp
mov
pop
loope
sbb
and
jbe
outsl
push
call
xchg
pop
mov
cltd
add
inc
pusha
ficoms
pop
cmp
mov
cmpsl
jle
push
mov
or
test
xor
fstpl
ret
mov
xchg
lock
adcb
pop
loope
pop
mov
gs
test
dec
out
cwtl
in
pushf
les
add
push
jbe
fmulp
mov
sub
and
fldl
adc
or
dec
mov
imul
ret
cmp
push
and
fidivs
pop
test
cs
je
jp
leave
out
push
xchg
push
test
fwait
jae
and
sub
sub
push
mov
lods
int
out
or
dec
pop
insl
dec
int3
add
lret
xchg
pusha
jle
jnp
adc
mov
jae
cmp
shlb
jb
mov
mov
cltd
ret
adc
sarl
push
imulb
mov
push
jne
adc
jp
jl
mov
sub
mov
sbb
pop
adc
in
or
ds
dec
mov
add
adc
push
mov
jmp
gs
fistps
adc
and
scas
sub
lret
setle
hlt
pop
sub
dec
mov
fdiv
mov
imul
cmc
mov
fldcw
stc
mov
fsubs
setnp
fnstsw
push
rclb
and
pop
mov
je
xor
push
fs
sbb
dec
outsl
shlb
dec
mov
ja
ret
mov
push
test
sbb
add
call
ret
mov
pop
and
cli
cmp
xor
push
mov
stos
leave
pop
test
es
or
add
rcll
xchg
inc
rcrl
adc
imul
push
cmp
jl
or
and
scas
jg
call
mov
jae
ds
dec
or
loop
lods
lea
xchg
inc
clc
xchg
loopne
mov
xchg
in
cmc
roll
mov
call
sbbl
pop
stos
popf
xor
divb
mov
dec
xor
shlb
pop
arpl
insl
insl
fstpl
ljmp
dec
aam
xor
cld
push
daa
idivl
mov
pop
cmp
paddq
aaa
out
inc
lret
mov
sbb
stc
dec
or
mov
mov
sbb
ljmp
bound
inc
cmc
ljmp
adc
std
ds
cli
stos
mov
xchg
inc
and
jmp
cmpb
cmp
cltd
dec
xchg
or
mov
jg
xor
imulb
or
dec
jmp
push
out
pop
xor
repz
aas
stc
jnp
shl
mov
cmp
sbbb
mov
into
test
sti
pop
popa
or
outsl
shrb
sbb
lahf
jae
loop
jp
mov
cli
cmp
loope
xor
lret
fstl
cwtl
rol
push
adc
in
fbld
mov
jle
add
mov
and
mov
loop
lock
addr16
jl
jge
scas
push
mov
aas
mov
in
adcb
pushf
cmp
lret
ret
mov
adc
mov
das
lods
iret
mov
mov
hlt
pop
sub
outsl
pop
push
jo
adc
xor
jnp
adc
cmp
hlt
roll
or
repnz
jmp
mov
pop
lret
pop
dec
jb
mov
push
xchg
sbb
das
pop
mov
cld
jle
jb
mov
outsb
lock
lahf
daa
out
push
stc
mov
gs
inc
popa
jae
or
orb
mov
popa
adc
ret
loope
in
cmp
cmp
jmp
orb
cmpsb
pop
push
cmp
test
xor
xchg
push
mov
shrb
je
test
mov
jne
cmpsb
outsl
dec
adc
aaa
pop
fwait
cmpsb
sbb
add
loope
inc
mov
xor
lds
sarl
adc
test
in
add
iret
ret
mov
iret
jge
sbb
aad
sub
fbld
pop
xorb
arpl
xor
mov
dec
scas
or
add
adc
mov
lea
in
out
sbb
shll
aam
out
and
xor
sub
inc
cltd
jg
xor
adc
ret
addr16
notb
mov
xor
inc
jmp
out
aaa
lods
lock
mov
fnstenv
mov
inc
addr16
dec
cmp
in
xchg
aam
arpl
in
roll
out
push
sub
dec
jb
push
movsl
bnd
jle
test
mov
test
inc
jge
inc
sbb
push
or
aaa
jl
sti
jmp
sti
adc
sar
stc
rorl
dec
cwtl
push
xor
push
sub
in
shrb
repnz
inc
inc
or
mov
inc
inc
push
jo
in
sub
in
fadds
mov
mov
pop
mov
and
movsl
leave
dec
lret
pop
inc
nop
mov
das
jo
jmp
mov
sbb
sarl
pop
and
mov
xchg
not
cwtl
dec
leave
xchg
xlat
push
fidivl
mov
jmp
push
shr
or
lea
jne
ss
lods
test
test
mov
jbe
xlat
mov
enter
jl
jge
mov
lret
jmp
fwait
mov
ja
mov
mov
outsl
jb
outsl
dec
dec
aaa
jge
xchg
inc
ljmp
stos
ret
out
sbb
outsb
adc
xor
dec
xchg
insl
push
mov
ret
pop
and
pop
push
or
mul
mov
sahf
mov
and
imul
xor
and
aaa
addb
xchg
imul
fists
cmp
mov
ss
sbbl
pop
or
imul
jbe
aaa
or
cmp
dec
scas
xor
in
cmp
mov
mov
push
sbb
xor
inc
andb
jle
int3
repz
xchg
xchg
sbb
insl
and
rorl
and
adc
lcall
incl
and
rcrb
imul
out
jg
mov
push
mov
shl
shll
cli
lods
sub
inc
inc
sbb
mov
xor
cmpsb
sbb
mov
fidivrs
sahf
push
push
xchg
xor
inc
push
push
push
shlb
iret
mov
inc
test
aam
adc
pusha
mov
mov
test
lea
mov
loop
push
scas
mov
pop
cmp
dec
cmp
xchg
std
xor
ret
dec
stos
in
andb
lods
or
inc
mov
mov
in
sub
push
mov
cmpsl
xchg
mov
sbb
lret
dec
into
insb
test
shlb
stos
xchg
lcall
mov
cmp
ss
sbb
jb
xor
divl
pop
dec
lret
gs
xchg
jbe
or
xor
mov
sub
aam
adc
fsubs
addr16
mov
in
or
mov
int
rol
jl
and
popf
push
xor
push
xchg
fisttps
or
ret
xor
jno
out
jbe
sti
lods
notb
sbb
pop
out
xor
mov
popa
mov
popa
xchg
jnp
add
xchg
in
andb
mov
leave
ja
dec
inc
pop
stos
aas
aas
push
cmp
out
inc
imul
aad
inc
fdecstp
or
test
sub
ss
inc
jmp
je
outsb
cltd
hlt
loopne
sbb
xchg
hlt
pop
stos
jne
mov
jg
jmp
ja
cld
mov
outsl
das
mov
imul
inc
mov
xchg
xchg
sbb
add
outsl
cmc
and
cmpsb
ret
pop
shrb
inc
mov
insl
jg
lods
or
std
or
inc
xlat
test
add
outsb
lods
and
add
int
xchg
adc
sub
out
test
jo
loop
jae
cmp
out
clc
mov
aas
cltd
cs
fcomi
sub
int3
roll
push
lea
xor
jp
subb
loope
cmp
popa
movsl
test
nop
mov
dec
cwtl
adc
mov
imul
fsubp
adc
adc
stos
jns
adc
add
mull
and
xlat
mov
push
fs
cmp
adc
or
lcall
pop
sbb
lcall
adc
cmp
and
dec
mov
sub
pop
cli
sbb
inc
arpl
out
pop
cmpsl
cltd
ror
jmp
sahf
push
je
subb
xchg
push
inc
xchg
adc
xchg
into
lret
dec
aad
je
mov
ds
sbb
test
push
mov
cmp
or
insl
xor
push
out
and
cmp
sbb
popa
pop
cmp
xchg
dec
pop
lret
fwait
loop
push
push
pop
in
dec
mov
aas
push
sub
in
mov
js
clc
jge
dec
xorl
icebp
insl
mov
dec
cld
jg
stc
push
das
subl
into
mov
jno
cmp
push
fisubl
aam
sbbl
mov
sarb
push
pop
outsl
push
add
push
insb
mov
mov
add
sbb
dec
enter
mov
and
out
das
add
lods
mov
inc
stos
dec
and
adc
lret
mov
in
popf
addr16
cwtl
data16
int3
movsb
dec
in
and
outsb
sbb
ja
popf
notl
cmp
add
add
dec
cli
adc
mov
loopne
or
nop
adc
je
mov
pop
push
pop
cmp
jecxz
and
aas
and
jns
mov
add
daa
hlt
push
jmp
sub
and
inc
jge
pusha
mov
or
pop
sub
mov
mov
pop
hlt
movsb
jns
mov
add
sub
sti
jbe
push
dec
sub
insb
shlb
mov
mov
or
inc
icebp
mov
add
leave
lock
pop
mov
lds
or
test
adc
lret
lret
lahf
repz
adc
mov
mov
loop
push
pop
jge
add
sub
and
aam
sbb
xor
cmp
das
cld
dec
inc
add
sahf
or
jecxz
filds
sbb
jo
imul
mov
movsl
aam
cltd
add
xor
pmullw
xchg
push
iret
es
iret
inc
inc
cld
add
mull
mov
dec
mov
add
test
inc
jnp
jmp
add
into
jae
pushf
lahf
xchg
xor
sarb
icebp
popa
fnstcw
inc
out
adc
push
xorb
insb
push
jne
add
rclb
add
mov
out
push
cwtl
push
mov
movsl
inc
or
outsb
iret
ja
shlb
iret
push
popa
outsb
sbb
jle
js
lcall
cs
movsb
push
adc
data16
into
loopne
pushw
and
push
pop
pop
xor
cmp
dec
lahf
sbb
aas
xor
imul
lret
ret
xchg
aaa
xor
and
push
fyl2x
fstpl
sub
clc
mov
bound
test
das
fsts
jl
enter
push
dec
cmpsb
cwtl
fildl
inc
stos
testb
outsb
out
add
cmp
mov
inc
adc
test
shll
pop
add
push
xor
leave
mov
sbb
lea
mov
sarl
mov
and
push
in
mov
leave
sbb
rcl
mov
sti
dec
int3
ret
adc
add
add
cmp
inc
push
clc
and
out
les
and
mov
sub
jb
out
mov
outsl
mov
imul
push
pop
or
pushf
xchg
dec
and
lahf
imul
fisubs
push
and
jnp
xor
addr16
jle
sbb
loope
jns
lret
popa
push
js
mov
popa
ret
nop
pop
jmp
fisttps
xlat
shlb
pop
cmp
and
jbe
cmp
loop
xor
mov
outsl
push
sbb
sub
cld
xlat
adc
outsl
insl
sbb
js
xor
dec
push
mov
adc
mov
jecxz
xchg
push
rcr
ss
fcoml
mov
outsl
sbb
mov
and
pusha
mul
je
and
adc
les
jg
ret
cmpsb
mov
mov
shll
pop
push
jle
xchg
xchg
xor
inc
int3
inc
sbb
pop
and
ret
cmc
dec
fisubl
rcrl
pop
pop
lods
inc
popf
sub
cmp
lahf
xchg
jecxz
shl
jmp
or
add
mov
inc
mov
or
int3
inc
mov
lods
not
lock
push
cmp
aad
adc
fnstcw
dec
jns
data16
fldl
lock
icebp
ljmp
ds
xcrypt-ecb
cmpsl
or
fisubl
pushf
test
popa
mov
or
rcr
cmpsl
into
fcoms
inc
cmp
mov
movsl
aam
xchg
imul
icebp
cwtl
jl
jb
call
out
aam
hlt
aaa
mov
movsb
aaa
pop
mov
lret
adc
jmp
pusha
sub
iret
adc
pop
dec
fnstsw
xor
xchg
mov
divl
inc
dec
aad
adc
dec
fimull
aaa
cli
pop
and
mov
sbb
js
xchg
call
jnp
dec
sti
add
fs
pop
call
dec
je
and
jl
ret
mov
sbb
aaa
js
daa
in
int
popa
loope
mov
into
mov
mov
push
mov
push
jmp
mov
aaa
loopne
cmpsl
rcr
in
roll
idivb
idivl
addl
or
in
movl
jae
mov
ljmp
out
std
dec
xor
hlt
add
and
arpl
test
pop
aas
clc
adc
adc
popf
dec
daa
subl
or
sub
ljmp
in
sub
adc
sti
lds
roll
sbb
rcpps
data16
sbb
in
int3
sub
push
idiv
cmp
loope
xchg
add
xor
mov
cmp
fdivp
pmaddwd
pop
les
rclb
adc
pop
push
je
cmp
mov
pop
cmpsl
stc
mov
scas
push
pop
jge
popf
mov
orb
cmc
sarb
lret
inc
push
push
repnz
ret
mov
push
cs
pop
inc
lea
fucom
adc
or
pop
in
lods
int
popf
fucomip
cmp
push
ds
xor
lahf
sub
insl
aaa
arpl
dec
orb
icebp
mov
gs
mov
notl
cmp
cmp
mov
andl
xchg
sbb
inc
pop
shl
add
inc
test
xchg
inc
cmp
dec
inc
cld
test
outsb
cmp
popf
mov
adc
fistpl
nop
cmpsb
cmc
and
and
icebp
fs
daa
mov
outsb
popf
inc
cmp
mov
ss
sbb
repz
jmp
add
adc
adc
cwtl
xchg
xchg
in
loopne
scas
or
push
jmp
shll
or
mov
pop
push
cmp
pop
xor
cmpsb
stos
jecxz
xchg
xchg
fxtract
inc
push
pop
inc
mov
imul
add
in
sub
xchg
cltd
pop
in
add
add
out
imul
xchg
or
add
je
insl
out
rclb
outsl
into
jnp
add
cmp
adc
mov
hlt
addr16
ds
mov
adcb
adc
loop
and
pop
int3
idivb
dec
inc
rcl
cmc
mov
cltd
std
sti
xorps
int
stos
mov
insb
push
and
ret
add
push
cs
push
mov
inc
dec
iret
mov
pop
sbb
icebp
pusha
and
mov
outsb
jmp
loop
rorl
fisubrs
ljmp
stos
loope
sbb
jne
lret
sbb
lea
and
push
es
lods
adc
mov
outsl
cmp
shr
popa
lcall
aam
subb
bound
mov
cmc
cs
loopne
dec
lods
leave
ja
jns
iret
adc
mov
jae
test
pop
sub
ja
cltd
ret
xchg
xor
sbbl
aam
sub
out
leave
or
cmpsl
xor
mov
pop
pop
in
sarb
and
js
jno
pop
adcb
cltd
cld
and
cmp
loopne
pop
xchg
pushf
lock
fcom
ficompl
pop
mov
dec
stc
adc
frstor
loopne
jge
lfs
sub
jle
in
mov
push
in
jmp
out
mov
add
and
sbb
test
xchg
ret
cmp
out
int
pushf
into
fimull
add
sub
inc
xchg
or
push
dec
in
repnz
js
xchg
pop
popa
cmp
adc
add
dec
into
xor
cmpsl
fisubs
sub
xor
popa
jns
nop
sub
imul
lahf
adc
jmp
insb
push
test
mov
xlat
push
repnz
imul
icebp
or
mov
xor
mov
dec
in
aaa
mov
inc
stos
test
jns
jg
daa
mov
fsubrs
mov
mov
out
sbb
push
orl
addl
jle
mov
adc
xchg
add
mov
les
inc
xor
jns
push
sahf
mov
ljmp
sbb
cltd
imul
mov
into
loop,pt
push
cmc
fcmovbe
bound
push
jb
push
out
add
in
sub
test
jae
jle
jg
lods
popa
notb
jmp
mov
lds
push
mov
adc
out
ss
cmp
mov
jp
gs
xchg
dec
shlb
call
cmp
xchg
or
xchg
mov
lret
mov
sbb
cmp
adc
arpl
pop
loopne
inc
pop
push
sub
dec
aad
push
pop
int
push
inc
arpl
ds
pop
or
jnp
jmp
lret
sub
mov
xchg
lods
imul
fidivrl
push
push
aam
push
inc
outsl
or
les
in
gs
lret
adc
dec
inc
mov
push
ja
in
cmp
daa
push
ljmp
pop
cmp
pusha
popf
mov
lcall
add
push
jb
loop
pop
mov
stos
xchg
sbb
aas
add
mov
repz
mov
sub
push
les
jne
or
in
fadd
movsl
sbb
dec
jno
inc
jle
cmp
ss
jecxz
dec
add
lods
bt
cmpb
ret
incl
pushf
aaa
out
int3
aaa
cmp
xchg
jl
bound
sub
xor
jns
test
add
inc
imul
cmp
cmpsb
dec
imull
and
ja
push
adc
xchg
bound
pop
jmp
jb
xlat
iret
popf
ret
mov
sbb
fistl
lods
enter
shll
sub
fcoml
push
les
dec
or
xchg
sbb
xchg
or
xor
jle
sbb
jbe
inc
jge
lret
xor
adc
lcall
mov
aaa
outsl
jnp
outsl
push
cld
lock
dec
push
mov
sbb
sti
xor
sub
test
jmp
add
mov
adc
push
xchg
sub
mov
pop
ja
inc
lcall
loopne
aaa
int3
dec
add
lea
mov
pop
mov
popf
xchg
sub
push
sbb
and
popf
sbb
and
fstpl
aad
or
or
pop
bound
mov
pop
mov
pop
or
ja
push
or
push
push
std
ret
push
adc
dec
jmp
das
lods
jp
hlt
adc
dec
sbb
dec
adc
push
sbb
fcompl
jle
into
pop
pusha
xchg
jae
out
jne
jl
iret
addr16
popa
gs
sbb
sbb
mov
or
das
stos
stos
ds
xor
sahf
push
addb
test
lcall
sub
mov
cli
xor
popa
dec
daa
lcall
push
rcll
mov
cmp
fdivrs
dec
stos
pop
lcall
xchg
xor
xor
test
push
pop
cmpsb
js
int3
lds
jge
push
inc
in
push
push
mov
sti
push
and
xchg
jo
push
ret
inc
mov
vsqrtsd
ja
mov
incl
cmp
int3
les
in
xchg
push
clc
lahf
scas
out
xchg
outsl
lahf
lock
in
in
or
fsubl
lea
inc
cmp
jmp
sbb
ljmp
push
data16
fldenv
lods
dec
push
movsb
inc
fcmovb
hlt
xorb
adc
stc
pushf
lods
jl
xor
jns
sub
int3
pop
sub
or
test
mov
or
adc
rclb
pop
and
mov
ljmp
jb
xchg
add
cs
cmp
push
or
pop
adc
or
fmul
jp
aad
jo
out
int3
sbb
add
inc
leave
out
xchg
shrb
mov
mov
and
movl
rclb
mov
mov
fbstp
mov
sbb
lds
scas
addl
mov
idiv
ljmp
mov
orb
pushf
sahf
imul
sahf
mov
dec
lds
cs
or
sbb
stos
cmp
addl
sbb
fbstp
push
cmp
test
je
out
dec
cmp
cmc
mov
mov
xchg
cmpsl
aam
lret
lahf
or
or
inc
lock
adc
pop
or
push
fidivl
inc
aam
ficomps
in
insb
mov
pop
xchg
not
pop
out
mov
jl
mov
pop
aaa
and
push
push
xor
stos
push
test
clc
jmp
xchg
outsl
out
outsb
scas
pop
movl
pop
jnp
push
push
repnz
mov
hlt
jns
fwait
push
or
mov
xchg
jmp
mov
or
ret
inc
or
push
mov
scas
adc
dec
mov
mov
das
int
out
inc
or
inc
cwtl
mov
outsl
in
pop
shlb
mov
adcl
js
lcall
and
xchg
add
icebp
movsl
lods
cmp
jo
xchg
mov
adc
out
notb
push
fdivp
fwait
or
icebp
push
sti
pop
dec
jb
mov
fcmovne
inc
iret
mov
or
xchg
add
add
or
xchg
repz
adc
adc
jp
jle
sbb
xchg
pop
in
repnz
sbb
push
mov
aad
int
outsb
fdivrs
jno
movsl
scas
and
sub
fmuls
push
mov
jb
scas
imul
pop
scas
into
xor
iret
sbb
sbb
jp
push
mov
xchg
stc
and
sub
insl
xchg
mov
xchg
xchg
out
mov
and
mov
sbb
add
into
std
sbb
xchg
addr16
enter
mov
addb
lcall
arpl
or
and
sub
cld
sub
cli
add
or
bswap
mov
pop
sub
push
out
aaa
jg
jne
mov
pop
aas
loopne
movsb
ja
mov
or
pop
rolb
aaa
lret
adc
daa
push
mov
cmp
ror
rcrb
in
insl
xchg
pop
sbb
sbb
stos
ret
jbe
movl
dec
adc
cmp
pop
mov
jae
mov
jp
test
stc
jae
xlat
add
mov
push
mov
inc
aad
pop
das
pop
popf
sbbb
push
mov
push
xchg
repz
push
es
out
lods
push
mov
popf
mov
repz
adc
rolb
stos
outsb
mov
xor
xchg
dec
pop
int3
pop
loopne
or
daa
popf
xchg
mov
xor
movsl
pop
std
adc
adc
andb
jecxz
and
cmc
addr16
and
xchg
inc
out
repz
enter
mov
jnp
data16
lcall
dec
cmp
cli
outsl
adc
mov
jb
mov
loop
lods
rcrb
sub
outsb
mov
cmp
icebp
loope
test
inc
mov
xchg
insb
xor
in
xor
scas
adc
mov
icebp
test
call
sbb
xor
xchg
sub
shl
xor
cmpsb
xor
aaa
xlat
out
adc
lcall
or
lods
pop
xchg
inc
data16
and
in
xchg
into
arpl
nop
movsl
inc
inc
xchg
lret
pusha
sbb
jle
push
or
divb
incl
and
scas
jp
pop
mov
insb
cmc
cmp
adcl
dec
push
jnp
mov
push
out
imul
add
inc
fdivp
test
pop
jmp
jo
add
inc
daa
arpl
pop
cmp
loopne
je
leave
in
or
or
inc
inc
or
mov
stos
jno
mov
pop
pop
sub
adc
dec
repnz
jge
mov
iret
mov
pop
push
lock
mov
push
ljmp
imul
xchg
jo
fcoms
push
jae
int
rcll
jge
int3
sub
dec
adc
invd
mov
fxch
inc
fs
std
add
fists
lods
js
push
push
add
and
mov
test
sub
inc
std
xchg
xor
sti
adc
mov
mov
pop
loopne
inc
loope
daa
and
outsb
icebp
mov
in
stos
xor
and
sbb
xor
dec
jno
mov
pop
ss
lcall
adcl
mov
leave
inc
das
sub
add
int
aad
in
cmc
repz
insl
ss
push
ljmp
lret
push
das
xchg
adc
outsb
push
fisubl
psubq
mov
xchg
movsl
push
pop
mov
and
cmp
insb
clc
sub
lret
pop
nop
lahf
scas
mov
cmp
inc
pop
into
call
xlat
inc
inc
fwait
xchg
push
jnp
mov
xchg
xchg
int3
enter
fiaddl
in
pop
mov
das
hlt
or
rcrb
sub
and
movsl
out
xchg
mov
arpl
lahf
adc
test
out
stos
jb
in
inc
popf
cli
mov
dec
push
push
sbb
mov
enter
pushf
adc
mov
ret
aad
movsb
rolb
sahf
push
clc
jl
pop
es
arpl
popa
or
ljmp
jbe
xchg
stos
mov
iret
push
xchg
mov
loopne
insl
fmull
fistpll
orb
test
sbb
add
push
cmp
pusha
mov
mov
ret
jno
mov
mov
xchg
je
push
ja
mov
push
les
lock
ds
sbb
fists
mov
subl
int
iret
lds
jo
pusha
and
mov
test
stos
push
push
jl
outsl
test
adc
or
dec
inc
push
out
mov
mov
jle
andl
mov
xchg
sti
push
and
aam
lret
push
and
cmpsb
clc
mov
mov
mov
stos
and
push
pop
sub
je
les
jecxz
shufps
loop
adc
push
inc
je
jp
shl
or
fmuls
ss
lret
lds
out
push
pop
mov
lods
push
push
inc
pop
shlb
mov
out
dec
and
mov
jg
loope
push
cmp
icebp
stos
xchg
imul
cmpsb
mov
adc
inc
shl
aam
sub
les
cmpsb
mov
mov
sysenter
in
cs
inc
int3
xchg
pop
mov
mov
das
mov
jbe
mov
push
add
and
pop
fldl
mov
fwait
aam
mov
insb
lods
jb
stos
xor
cmpsb
inc
lds
nop
xor
adcb
adc
mov
cmp
push
ja
jne
push
xor
push
and
mov
out
jns
ret
out
es
push
ret
push
add
out
pop
sub
sbb
fwait
and
rcr
adc
push
xchg
and
into
mov
push
sbb
lcall
mov
mov
or
mov
mov
neg
dec
jmp
inc
cld
test
aam
fsubs
sub
jne
insl
int3
inc
data16
inc
add
push
jmp
testb
and
jns
cwtl
pop
orb
jae
or
and
mov
pop
cmp
fldcw
mov
das
bound
mov
je
xor
fdivrs
stc
popa
out
push
popf
add
mov
repz
xorb
xchg
push
cmp
mov
dec
push
mov
push
mov
les
aad
xor
inc
sbb
fcmovnbe
ja
out
psrlq
adc
sub
xchg
push
int3
pusha
jmp
sti
inc
dec
fistps
xor
inc
nop
aaa
push
mov
inc
je
mov
movsl
push
js
je
xor
xchg
mov
add
jle
scas
scas
xchg
lahf
lret
shr
pushf
rcl
adc
mov
sbb
in
inc
scas
ret
test
xchg
mov
dec
std
ss
xlat
fnstenv
cli
mov
cmp
sbb
mov
cmp
cli
push
daa
push
push
sub
call
jb
repz
or
dec
inc
int
shl
cmp
lods
lret
cmpsl
pop
cli
cmp
mov
add
es
mov
outsl
mov
cmp
sarl
pusha
lret
sbb
adc
jmp
mov
mov
mov
fldenv
push
fdivrl
xor
xchg
inc
mov
xor
ss
xchg
fwait
adc
adc
add
rorl
enter
mov
fsubrs
xchg
ljmp
idivl
mov
leave
mov
in
fnstenv
jge
and
sub
adc
sbb
dec
aam
push
das
mov
fadd
stc
add
loop
insb
and
jb
jno
mov
fnsave
mov
pop
fmull
andl
push
outsl
ja
clc
icebp
jmp
mov
and
mov
and
ret
jbe
mov
sarl
push
dec
mov
lock
inc
mov
cmp
movsl
sub
imul
xchg
mov
int3
xchg
jle
dec
adc
jnp
not
cs
sbb
push
in
ret
fucom
sub
fwait
push
daa
sbb
sbb
mov
and
xchg
xchg
outsl
push
pop
cmp
and
icebp
js
or
mov
insb
cwtl
pushl
inc
dec
push
mov
mov
pushf
icebp
sub
sarb
mov
inc
sub
adc
das
add
addr16
xlat
lret
xor
sbbl
jbe
pop
das
lods
sub
pop
mov
mov
adc
pusha
xor
mov
ret
mov
fbstp
add
sahf
jp
mov
mov
mov
jmp
push
aam
sti
inc
inc
pop
jo
aaa
shlb
testl
jp
mov
jge
fwait
sub
xchg
in
out
push
iret
pop
in
arpl
mov
das
xchg
and
or
xlat
ret
std
pop
cmpsl
cmp
dec
dec
jne
dec
test
adc
aaa
mov
aaa
adc
mov
dec
mov
push
push
and
in
and
or
inc
mov
int3
pushf
push
mov
fwait
pop
sbb
sub
push
cltd
mov
push
inc
mov
sbb
xor
test
xchg
sbbl
cmp
sbb
arpl
iret
xchg
fs
fisttpll
popa
jae
mov
sti
fmuls
and
or
pop
adc
ljmp
shrb
in
lret
data16
mov
insb
lods
outsl
push
add
sbb
xor
jg
imul
mov
push
aaa
stos
sbb
mov
jbe
pop
insl
inc
mov
inc
xchg
leave
push
cmp
call
xchg
lret
jo
rorl
add
and
lods
sarb
fdivrl
out
sbb
and
cmpsb
imul
ljmp
lods
sub
inc
xlat
inc
in
shl
xchg
cmp
xchg
jmp
sti
shrb
fidivl
mov
ret
and
repz
bound
and
inc
lds
adc
mov
test
push
dec
out
jg
pop
pop
inc
shl
mov
cmc
or
mov
test
and
and
out
and
lods
imul
xchg
xor
xor
int3
inc
js
add
dec
pop
adc
fimuls
pop
fimull
insb
dec
out
pop
dec
xchg
mov
clc
xlat
lock
mov
lret
imul
push
dec
fstpt
ds
das
bound
nop
lcall
mov
push
in
mov
xor
jle
sbb
lods
popa
aad
sbb
dec
cwtl
cmpsl
pushf
pusha
pop
dec
fbld
stos
push
int
pushf
ret
addr16
lret
dec
out
or
lret
jle
dec
push
xor
in
orl
addr16
jno
out
outsl
push
adc
pusha
out
jne
sub
adc
movsb
inc
nop
out
imul
cli
inc
and
jno
faddl
jns
pop
or
inc
jg
in
in
in
pop
lds
cs
sub
mov
pushf
sbb
clc
divl
out
xor
sar
in
sub
push
jg
lret
cmpsb
push
ljmp
fstpl
dec
jmp
xchg
mov
scas
and
or
jne
repz
push
jno
ficoms
scas
jo
out
cmp
mov
mov
ret
mov
xor
pop
xor
arpl
fnstenv
mov
adc
xor
hlt
xchg
ja
pop
out
mov
inc
mov
out
pusha
mov
jns
or
test
dec
loop
fwait
outsl
add
lcall
push
cmc
or
inc
inc
jle
rcrb
roll
sub
push
inc
hlt
in
pop
iret
repnz
fwait
iret
or
pop
add
and
pop
sahf
sub
paddsb
out
scas
pushf
xchg
mov
jmp
jns
dec
mov
mov
mov
fstl
pop
xor
xchg
addl
xlat
or
adc
mov
daa
daa
xor
sub
push
push
lods
push
cld
aam
xor
add
js
xchg
repz
popa
push
or
fsubrs
cmp
pop
mov
fimull
shrb
mov
sub
sub
clc
mov
sbb
or
push
fmuls
je
imul
std
in
outsl
mov
filds
sbb
mov
cld
aas
sbb
das
lods
push
or
jp
js
mov
xchg
add
sbb
std
in
mov
xchg
test
sbb
test
add
adc
cld
mov
lret
lcall
xor
test
iret
pop
lds
test
repnz
insl
mov
leave
ljmp
sbb
ret
inc
icebp
and
in
gs
dec
dec
inc
pop
or
inc
mov
dec
bnd
push
rcr
inc
and
xchg
pop
test
inc
pop
lret
inc
cmp
shrl
faddl
dec
dec
push
pop
and
in
jnp
push
add
sbb
int3
rcr
ror
hlt
and
xor
and
pop
push
sbb
jb
leave
or
incb
lea
sub
subb
dec
inc
jecxz
push
add
inc
mov
or
or
pop
mov
pop
ret
jp
sahf
xchg
lret
icebp
vcvttss2si
jmp
lds
pushf
xor
outsl
test
inc
pop
jg
cmp
cmp
ret
dec
dec
test
in
mov
imul
jns
pop
gs
mov
cmp
and
orb
cli
push
pushf
pop
nop
bound
xchg
clc
das
leave
es
sub
stc
pushf
mov
scas
xor
mov
addr16
jg
rcl
and
inc
sar
lcall
pop
sub
push
test
jmp
into
cmp
movsl
lds
lret
and
stos
cmc
arpl
adc
out
fmuls
popf
jle
lods
sahf
out
push
mov
stos
call
adc
xchg
popf
ss
mov
cmp
hlt
imul
adc
sub
pop
mov
cwtl
icebp
sub
xchg
imul
insb
fcomps
repz
lds
pop
mov
adc
mov
push
dec
mov
mov
push
aad
and
aad
jg
dec
add
mov
test
das
iret
outsb
pop
in
int3
cmp
add
imul
out
or
icebp
out
jg
out
dec
dec
mov
bound
pop
cmp
push
add
push
dec
les
pop
xchg
test
lock
stc
and
in
stc
mov
mov
fs
dec
adc
and
sti
cmc
fbld
add
repz
flds
test
pop
inc
lahf
and
incb
dec
jb
mov
mov
shll
ss
mov
xchg
lods
inc
adc
xchg
or
push
jnp
fwait
stos
jecxz
outsb
jg
add
push
fwait
xchg
mov
or
add
xchg
jl
loop
inc
insb
shr
xor
push
jmp
mov
sub
jmp
cmp
icebp
xchg
mov
int
shrb
repz
sub
hlt
inc
jae
push
arpl
mov
shlb
ljmp
popf
mov
mov
mov
loop
cs
stos
jnp
or
xchg
xchg
jno
jbe
dec
adc
out
ja
addr16
dec
xchg
add
out
fimull
sub
lods
fcoms
inc
lahf
and
popf
lret
mov
or
push
pop
jno
or
mov
lret
mov
xchg
sbb
int
and
mov
stos
into
in
xor
push
cmp
xor
dec
lods
out
push
shr
jae
jae
pusha
or
and
adc
shrd
push
maxps
movsb
es
jns
imul
jecxz
push
or
pop
icebp
sbb
or
lods
leave
test
or
adc
jmp
jo
add
in
cmc
jae
pop
inc
pop
mov
cli
imul
pop
sbb
sbbb
pushl
divl
dec
lock
in
sub
pop
sub
ds
cmc
xchg
mov
dec
sbb
movsb
dec
pop
sub
rol
lock
mov
jo
pop
or
mov
inc
push
pop
addr16
mov
inc
nop
test
xchg
sbb
or
and
jmp
daa
mov
mov
orl
sbb
xchg
xchg
negb
or
outsl
loopne
mov
jo
dec
les
add
push
xor
call
sbb
lret
adcl
iret
pop
pop
repz
jno
xchg
xchg
push
ret
lcall
lds
lret
mov
push
inc
loopne
pusha
call
mov
loop
xchg
mov
stos
adc
cwtl
mul
lock
fwait
adc
jbe
xor
cwtl
mov
pop
adc
xorl
je
sub
lret
jg
leave
in
mov
les
jbe
shrb
adc
or
xchg
and
pop
mov
cld
sub
mov
mov
or
jns
push
arpl
orl
jo
js
jns
popa
in
xchg
es
sbb
sti
insb
daa
jmp
lahf
mov
sbb
ret
mov
test
or
xor
push
cmpsl
sbb
xor
cwtl
popa
lret
sub
aam
push
sub
cmpsb
jb
sti
xorl
pop
adc
pop
outsb
das
test
repz
test
push
cmpsb
push
mov
xor
call
cmpsl
mov
sbb
ret
sahf
in
dec
jae
cld
push
dec
jge,pn
out
mov
fsubs
popf
inc
inc
pop
inc
cwtl
in
scas
testb
aad
je
push
imul
jmp
pop
xor
cmp
imul
push
ss
adc
xchg
jo
adc
or
dec
out
mov
popf
mov
popf
push
push
loope
mov
cmp
xchg
clc
adc
leave
push
adc
mov
fs
inc
xor
inc
int3
mov
lock
cld
jo
add
scas
sti
cmp
pop
xor
lahf
in
xchg
enter
pushf
add
scas
divb
push
cmc
repz
in
fildll
xlat
push
mov
dec
xlat
lock
out
das
sub
movsb
xor
lods
je
sbb
ss
dec
addl
adc
push
add
nop
cs
aas
mov
mov
xchg
mov
insl
cmpsb
sbb
inc
pop
add
stos
cmp
or
push
adc
dec
xchg
sub
dec
lret
dec
loopne
in
cmp
hlt
pop
xchg
push
sub
xor
push
mov
rcll
mov
mov
fsts
sbb
in
push
cmpsb
dec
cmp
fdivl
xchg
nop
push
adc
outsb
pop
lods
lret
rcrl
aad
jecxz
dec
push
inc
cmpsl
mov
cld
aas
test
cmp
jbe
movsl
scas
call
aad
adc
add
inc
pop
add
mov
push
cmp
mov
xchg
jl
sub
inc
ljmp
push
mov
adc
mov
mov
cmp
clts
ret
aam
loope
mov
fisttpll
enter
test
outsl
and
loop
pop
fs
xchg
jg
pop
add
pushf
lods
je
dec
mov
jp
adc
movsb
sub
lret
loop
push
adc
aad
xchg
leave
pop
push
adc
cmp
packuswb
lahf
pop
jne
adc
xor
imul
jl
test
jecxz
test
push
shlb
out
adc
inc
fcom
les
stos
xchg
das
rolb
jae
xor
int
mov
adc
imul
mov
mov
inc
jo
enter
fcmovu
add
dec
into
mov
rcrb
into
lea
or
lea
cltd
inc
lea
testb
or
imulb
pop
adc
je
in
lock
mov
insl
loop
ljmp
popf
cwtl
ja
ret
cs
mov
xchg
lea
inc
add
stos
outsb
int
aas
arpl
and
loope
cmpsl
cmp
popa
lea
mov
inc
pop
jae
mov
push
insb
ret
lcall
icebp
out
cwtl
movsl
pop
clc
int
jbe
test
aam
fwait
dec
add
push
int3
notl
xchg
dec
aas
push
push
jg
lock
dec
pop
lret
dec
dec
push
shrl
adc
inc
mov
mov
andl
push
out
mov
jnp
mov
pop
push
mov
add
jl
add
es
pop
inc
and
mov
lret
jmp
aam
lret
es
aad
sub
test
push
and
dec
cmp
icebp
mov
popf
or
or
lret
in
lcall
out
fdivrs
mov
xlat
lret
fisubrs
loopne
add
scas
stc
dec
icebp
pop
into
lds
js
mov
mov
or
es
sti
imul
jo
cs
xor
lods
and
ficoms
push
ja
sarb
cmpsb
jbe
xchg
insb
sub
pop
sbb
jne
lahf
lret
push
pop
aad
push
mov
adc
xor
outsb
movsl
int
andl
scas
pop
push
lods
outsb
dec
fnstenv
in
cltd
adc
jl
idivb
xchg
leave
dec
dec
jo
push
stos
imul
or
jecxz
ljmp
mov
sahf
cmc
mov
pop
test
test
arpl
pop
pop
push
sub
jns
inc
insl
add
movsl
lods
inc
xchg
mov
imulb
leave
mov
ja
rcl
or
cmp
in
out
or
cmp
lds
pusha
push
adc
dec
cs
out
lcall
jb
cwtl
aas
orb
pop
cmc
and
add
inc
frstor
cmp
test
movsb
insb
lods
in
cli
insb
fdivs
cs
in
pop
adc
mov
stos
and
push
mov
daa
leave
into
std
fistpl
lret
aad
pusha
push
xchg
ss
out
mov
gs
and
inc
test
xchg
push
mov
int3
and
xor
test
push
shr
inc
arpl
rolb
push
nop
outsb
jmp
aaa
test
les
loop
add
ljmp
hlt
cmpsb
jl
xor
jno
xchg
mov
and
punpckhbw
cmp
push
mov
aas
mov
xchg
and
mov
dec
aaa
and
jns
shll
lret
xchg
ja
ja
push
movsb
push
out
or
inc
aad
fadd
outsb
cmp
das
adc
jp
ja
mov
push
inc
adc
mov
inc
jmp
mov
sti
dec
stos
loop
mov
jg
sbb
xchg
jp
xor
dec
jno
pop
push
int3
out
sub
pop
fnsave
lea
and
movsb
mov
cmp
or
aaa
xchg
pop
xchg
popf
jle
dec
loope
inc
xchg
stos
js
frstor
pop
in
xchg
lcall
jmp
imull
ret
int
aaa
orb
aaa
cli
mov
xor
mov
mov
push
and
xor
pushf
pop
fwait
sub
jno
not
inc
sbb
fldt
xchg
mov
pop
lret
pop
sbb
cmpsl
dec
aas
mov
sub
movzbl
xchg
out
scas
stos
nop
int3
enter
dec
fucomp
and
lret
out
adc
sarl
test
lods
jnp
xchg
mov
mov
pop
imul
inc
xor
lods
pop
adc
jmp
in
sub
gs
pop
and
add
repz
inc
fimuls
int3
xlat
out
and
repz
inc
jo
loope
movsl
xor
jecxz
out
xchg
fidivrl
ljmp
mov
sub
cmp
fadds
movsl
cmpsb
dec
xor
nop
mov
addb
cmpsb
sub
or
pushf
out
xor
ror
clc
xchg
negb
loopne
lea
lea
xchg
pop
fdivr
mov
out
inc
push
mov
mov
add
roll
in
mov
add
dec
push
les
aam
cmp
xchg
mov
in
push
pop
shlb
cmp
orl
mov
cmpsl
dec
inc
xor
sbb
sub
repnz
jp
sub
mov
jmp
popa
mov
xor
jp
adc
scas
xorb
repz
dec
addr16
clc
jno
cmp
pop
ret
mov
pushf
hlt
push
into
jmp
rolb
ljmp
push
dec
jmp
lcall
push
and
sbb
fidivs
push
movups
dec
sbb
in
aad
mov
scas
leave
inc
lahf
fwait
ja
mull
pop
rorl
mul
nop
test
in
lea
jp
jp
dec
icebp
inc
ficoml
sub
enter
jl
inc
iret
dec
ret
ror
add
or
cld
inc
je
mov
cmpsl
out
and
dec
clc
push
xchg
cmp
pop
cmp
inc
js
cmp
dec
mov
rcr
jmp
scas
in
adc
shlb
push
dec
daa
jmp
and
daa
lcall
push
dec
push
or
jp
sbb
lret
lcall
cmp
aas
mov
push
adc
adc
mov
xor
je
xchg
pusha
or
sbb
sbb
sub
shrl
fbld
cmp
mov
shl
add
cmp
push
adc
cmp
lcall
fdivs
sbb
cmp
sub
inc
xor
xor
neg
mov
adc
adc
gs
test
test
cmpsl
adc
aas
test
fsubrl
sti
out
test
fmull
mov
mov
mov
pop
je
add
adc
dec
mov
ficoml
loopne
je
adc
ret
gs
xor
div
cmp
adc
ss
aaa
jno
cmp
movsb
jle
mov
push
negl
inc
or
movsb
pop
pusha
jo
cld
rcrb
pop
incb
adc
or
mov
jl
and
mov
mov
mov
mov
mov
jno
jnp
pop
or
mov
mov
jmp
and
pop
jbe
pop
cmp
hlt
inc
cmp
dec
jmp
jb
inc
add
jno
pop
incl
ret
pushl
jnp
xchg
or
sti
repz
xchg
fwait
cmpsl
and
subb
fisttps
pusha
mov
xchg
sbbl
aad
mov
ds
jnp
lods
in
jno
jle
cmpl
jae
and
pop
jae
mov
add
jecxz
add
lret
lret
lahf
push
inc
dec
test
cltd
cmpsb
cmova
fdivp
fcmovnu
gs
xchg
dec
dec
cltd
ficoml
ss
xlat
xor
testl
add
scas
movsl
or
aad
sbb
lds
dec
fildll
lcall
hlt
pop
lcall
add
daa
jns
mov
insl
push
add
fwait
xchg
mov
push
dec
xchg
movl
mov
cmp
inc
pop
arpl
sub
push
repnz
mov
push
jle
insl
sarb
push
mov
daa
mov
and
out
mov
cmc
dec
add
cmp
mov
ljmp
mov
pushf
sub
inc
jg
inc
mov
hlt
int3
ljmp
lret
pop
lods
stos
subb
or
sbb
xor
dec
hlt
out
push
lcall
push
mov
hlt
dec
cmpsb
mov
pushf
inc
cmp
mov
lret
in
test
mov
jb
lds
cmp
lret
inc
out
add
mov
inc
and
decl
push
pushf
dec
stos
xchg
test
xchg
sub
sub
xchg
mov
and
pop
xchg
or
nop
jl
or
pusha
pop
popfw
push
loop
cmp
pushf
jle
fs
into
mov
and
scas
loopne
adc
test
or
adc
push
in
ja
jle
push
inc
xchg
dec
out
clc
cmpsb
iret
xor
enter
jo
pusha
jnp
inc
mov
ret
mov
cmpsb
daa
inc
mov
or
xor
cmp
xor
mov
rclb
into
mov
bound
cmp
sysret
add
inc
mov
sti
clc
mov
fildll
les
paddd
mov
loopne
mov
fcoml
dec
add
out
inc
xlat
jae
cmp
sub
std
pop
inc
imul
cltd
outsb
aam
std
mov
push
lret
jecxz
lahf
subl
push
xorb
add
inc
cld
je
dec
add
cmp
test
insl
les
xor
xor
or
int3
fstpl
movsl
mov
fmull
mov
imul
xchg
pop
mov
pop
adc
lret
mov
das
xchg
push
aas
out
movsl
fucomp
push
push
cmc
dec
test
imul
outsb
push
xor
push
jle
inc
cli
cmpsl
ret
mov
mov
dec
iret
subl
xor
mov
decl
pop
loope
dec
loop
inc
push
lock
icebp
mulb
aaa
addb
sub
adc
add
int
inc
push
xor
ljmp
mov
pop
inc
movsl
idivb
cli
bound
pop
lods
sbb
bnd
aam
cmp
xor
imul
jp
jns
jle
sub
scas
pop
sub
outsb
addb
es
xor
push
cld
stos
inc
push
add
scas
jge
adc
jg
push
xchg
add
mov
lcall
std
xor
dec
push
ljmp
ds
div
stc
xchg
mov
in
dec
mov
mov
lret
scas
and
roll
jne
inc
stos
pop
shrl
arpl
ss
cmp
fs
mov
mov
dec
xchg
in
rolb
dec
aad
out
scas
test
fsubrs
pusha
push
pop
loopne
aas
cmc
xor
mov
mov
and
subl
das
mov
xor
cmovb
not
sub
or
and
jo
xchg
scas
push
pushf
pop
iret
and
sbb
or
adc
shl
test
and
fsubrl
cmp
orl
or
ficoml
shrl
leave
hlt
imul
ret
cld
and
sbbl
jbe
sbbb
imul
shll
jns
lret
cmp
jge,pn
jle
mov
mov
push
in
inc
adc
loope
push
fs
mov
adc
outsl
xchg
jmp
mov
out
out
push
cld
xor
cmp
int
insb
fsubr
inc
sub
push
adc
xor
jo
adc
adc
in
add
lea
mov
jecxz
mov
movsl
test
test
jae
or
clc
cld
dec
call
sbbb
into
dec
sub
push
cld
mov
arpl
dec
fs
sarb
fs
adc
pop
cwtl
mov
jnp
sub
push
sahf
pop
pusha
test
pop
xor
movsb
fcmovb
dec
push
xor
fwait
mov
pushf
adc
sti
mov
repnz
out
inc
mov
dec
enter
das
sbb
inc
pop
pop
loope
ljmp
hlt
loope
pushf
inc
aaa
into
dec
and
clc
pop
or
cs
jae
xorb
sti
das
mov
insl
iret
mov
repz
and
cmp
inc
ljmp
push
cmp
in
cmc
mov
sub
jmp
cmpsb
ret
shll
pop
loopne
mov
sbb
adc
sub
std
jecxz
ret
popa
jp
loope
or
testb
cld
out
sbb
rcl
inc
enter
inc
or
test
cmp
adc
loopne
loop
fiadds
ss
inc
sub
mov
std
repnz
fdivl
lcall
cld
jge
and
jge
sbb
mov
aad
cli
inc
sbb
sub
cmp
repz
popa
shll
nop
pop
repnz
je
cmpb
sub
pop
loop
lock
lcall
insb
fcomip
test
push
mov
push
popf
and
jmp
and
shlb
rorb
adc
adc
sbb
shl
clc
shrb
jo
jmp
fwait
adc
jecxz
scas
test
pop
adc
mov
xchg
aas
and
sbb
outsl
insb
dec
aad
jnp
repz
jmp
adc
jle
sub
repz
mov
cmpsl
ret
cmp
outsl
mov
fst
rcll
xchg
mov
pop
dec
xorb
cmp
add
in
jno
push
mov
ret
pop
jg
push
push
dec
and
adc
mov
push
xchg
mov
in
adc
popa
cld
inc
mov
xchg
push
jnp
faddl
inc
in
jno
inc
dec
pop
adc
inc
jmp
fidivrs
mov
js
mov
fldcw
push
xchg
dec
sbb
xchg
xor
pop
nop
adc
xor
lea
xor
ds
popf
xor
out
mov
cmp
and
dec
repnz
add
icebp
pop
rorb
push
dec
aas
sub
mov
js
jae
adc
sbb
aas
test
mov
mov
pop
out
xchg
mov
xchg
cmp
test
js
in
in
in
jge
lcall
mov
ret
enter
scas
mov
mov
mov
out
sti
mov
pusha
or
pop
cmp
mov
push
push
xchg
mov
cs
mov
push
push
add
sahf
cmp
scas
in
daa
cmpsl
cmp
sbb
cs
repnz
xor
cmp
pop
mov
jp
lds
cmp
sbb
ja
pushf
cld
inc
mov
aas
mov
outsl
sbb
inc
pslld
daa
mov
movsl
jnp
fisubl
sub
inc
pop
lock
xchg
into
or
mov
push
xchg
mov
in
or
lahf
pop
out
push
int3
loopne
ret
push
loop
mov
jg
cmpsl
lcall
fstps
jmp
mov
add
jmp
xor
hlt
xchg
cmp
or
pop
iret
mov
gs
or
imulb
in
sti
xor
in
push
cli
sbb
cmp
shl
loopne
daa
jo
arpl
inc
outsb
hlt
cmp
js
out
add
enter
xchg
aaa
mov
loopne
das
mov
xor
pusha
and
daa
jge
pop
scas
les
filds
push
mov
dec
subb
cs
jmp
scas
mov
mov
iret
scas
push
es
xchg
cld
fistl
out
cmp
mov
dec
jge
fcoms
pusha
fwait
cmp
pop
sar
add
mulb
inc
mov
movsb
popf
mov
bound
les
repz
xor
pusha
lcall
jmp
inc
push
clc
xor
lret
push
call
and
mov
sub
fisubl
push
mov
xor
mov
movsb
adc
out
mov
push
int
or
inc
mov
push
das
mov
jb
xchg
test
arpl
sarl
lock
fwait
stc
adc
les
dec
xchg
dec
adc
cmc
test
lcall
fmuls
imul
add
cltd
pop
in
xchg
inc
mov
mov
sub
lea
out
mov
push
mov
xor
xchg
cmp
add
shrl
jp
mov
into
xor
mov
pop
leave
bound
and
jmp
jno
pop
push
hlt
out
cmp
ret
inc
adcl
mov
jbe
and
cwtl
stos
inc
sbb
or
mull
dec
cwtl
push
inc
daa
mov
setge
xor
adc
pop
loopne
das
loope
aam
ss
jmp
jns
pop
push
fsubs
push
and
addr16
sbb
daa
in
popf
adc
push
mov
push
jne
jg
imul
and
push
inc
sbb
add
mov
mov
inc
xchg
add
cmp
das
aaa
fidivs
pslld
push
xchg
cmp
and
sub
in
push
rcll
jle
sti
test
mov
adc
jg
push
clc
gs
movb
repz
sarl
mov
out
adc
pop
sbb
imul
jnp
inc
mov
cs
sbb
pop
mov
sbb
scas
stc
add
jno
movsb
std
scas
out
pop
mov
fldt
mov
ja
gs
repnz
fistps
adc
adc
data16
xorb
fcompl
push
jae
add
jmp
mov
iret
mov
sub
mov
cmpsb
or
fcmovnu
mov
ljmp
inc
sub
cld
cltd
xchg
iret
sbb
jmp
add
mov
inc
add
xor
mov
push
cmc
out
orb
xchg
shrl
pop
lea
pop
or
sti
mov
jns
test
lahf
orb
and
mov
cmpsl
inc
nop
in
inc
pop
inc
aaa
jl
out
nop
inc
adc
daa
add
rclb
ja
cmp
scas
cmpl
push
sbb
jp
out
sar
jo
pop
xor
or
jae
jno
stos
cmc
ret
cmp
notb
out
cmpsb
push
push
pop
out
in
lock
frstor
popa
lods
fcompl
sub
imul
dec
xor
mov
fbld
int3
pop
cmc
pop
fisttps
pop
jns
out
insb
stc
mov
gs
shll
mov
test
lahf
sar
movsb
sbb
roll
push
sbb
xchg
cmp
push
nopl
loope
sbb
xor
addr16
mov
pop
ja
sub
shlb
jge
and
out
sub
outsl
add
jns
mov
jp
arpl
and
sbb
in
or
dec
js
and
mov
xchg
daa
sbbl
sbb
sbb
popf
andl
fmuls
push
loope
insl
sbb
fisubl
add
sub
xchg
shll
mov
add
inc
sub
and
and
fistl
out
jb
ss
std
add
cmp
add
divb
mov
in
inc
xchg
mov
sub
mov
and
rclb
xchg
pop
in
xor
ss
loop
ret
jns
mov
bound
scas
outsl
call
ds
dec
loopne
xor
in
inc
push
jbe
mov
icebp
cmc
test
ret
and
or
adc
mov
add
loope
popf
mov
js
mov
cwtl
test
shlb
jle
cmp
adc
aas
cwtl
test
add
mov
ret
cmpsb
xchg
stc
mov
add
shrb
jno
lods
lds
xchg
outsb
int3
test
jbe
xor
mov
cmpsl
adc
xchg
in
xor
lret
dec
push
jae
ds
scas
add
imul
sbb
lock
ret
mov
mov
xlat
imul
push
inc
cli
popf
jmp
sbb
sub
lods
cld
xor
xor
xchg
push
imul
push
xor
mov
popa
inc
push
sub
mov
faddl
push
jo
mov
lods
cmc
bound
fs
into
xchg
rclb
sbb
mov
or
adc
subl
adc
and
pusha
and
fimull
pop
mov
inc
jmp
pushf
das
mov
jp
cwtl
mov
fisttpl
imul
jmp
mov
addr16
dec
xor
mov
push
repnz
jae
icebp
in
loopne
cld
call
sbb
scas
outsl
movsl
lret
mov
adc
sar
dec
fs
cld
inc
or
add
das
sub
sbb
mulb
xchg
pop
nop
mov
xor
cmpsl
adc
or
or
mov
xchg
lahf
ljmp
adc
cltd
call
mov
bound
xchg
je
stc
dec
js
push
lahf
mov
add
cltd
cmp
test
sbb
adc
shr
aaa
mov
imul
sbb
jmp
sub
ret
test
outsb
rorl
addr16
arpl
jnp
mov
dec
mov
gs
sbb
popa
lcall
jnp
jns
addr16
sbb
cmp
sbb
aad
xlat
xchg
mov
sbbb
jb
xlat
mov
daa
adc
or
fadd
add
xchg
cltd
ret
es
add
mov
sub
xor
leave
pop
push
ljmp
sahf
inc
bound
and
out
jb
jg
test
push
aam
fimuls
lea
add
sub
dec
jmp
push
stos
lcall
outsb
cmp
pushf
insl
lds
dec
dec
inc
adc
dec
sub
mov
stos
sbb
add
xor
dec
ja
xor
or
rcrb
sub
bound
or
jae
bnd
pop
stos
add
mov
leave
adc
cltd
addr16
loop
lock
cli
adc
dec
mov
imull
gs
stos
or
or
push
inc
aam
flds
mov
push
cmp
push
lahf
out
ja
addr16
nop
and
mov
bound
addl
into
pop
pop
pop
fmull
and
sub
fwait
in
outsl
mov
in
rcl
fcmovnbe
sbb
call
and
cmp
ret
and
jg
inc
dec
outsb
cmp
inc
scas
mov
in
inc
push
jns
ret
and
inc
push
or
sti
frstor
or
mov
and
pop
fiadds
mov
cmpsl
cmpsl
jbe
cmpsl
test
xorb
push
inc
stos
add
push
inc
pop
pop
push
out
xor
clc
mov
inc
cmpsb
mov
in
dec
cs
jg
pop
lods
setl
sub
sti
sub
and
xchg
ja
icebp
fnstenv
mov
les
lea
cmp
and
das
shr
lds
push
jae
push
jns
es
mov
shll
pusha
ret
mov
add
pause
xchg
jle
pusha
icebp
mov
mov
test
add
mov
rolb
popa
test
daa
cmp
push
mov
icebp
lods
add
test
jp,pt
testl
hlt
lock
test
sub
gs
and
push
mov
fcomip
pop
loop
negb
or
push
mov
adc
fisttpl
fdivs
push
and
mov
xchg
adc
cli
shlb
push
adc
mov
mov
lea
call
or
std
pop
sub
sbb
add
mov
repz
popa
jp
andl
loop
inc
cli
xlat
or
mov
nop
rcll
daa
adc
fimull
dec
in
adc
sub
push
das
movsb
and
cmp
sub
jp
lret
fnstcw
frstor
adc
xchg
shl
jne
fiaddl
mov
dec
aad
sbb
inc
stos
mov
push
sti
and
mov
jne
inc
jl
inc
add
mov
cmp
ja
lds
mov
stos
aas
xlat
insb
or
sbb
sbb
iret
add
aam
outsl
sbbl
aam
movsl
inc
jecxz
cmp
cli
pop
and
jae
in
xchg
mov
xchg
aam
clc
adc
bound
push
and
int
adc
jno
push
lods
cli
test
mov
aas
pop
xlat
push
ljmp
aaa
aam
or
pop
cmpsb
nop
jg
jp
and
or
and
sbb
sub
jmp
mov
jg
dec
test
outsl
std
iret
or
popf
ret
lods
stos
push
push
mov
je
fimull
in
sbb
sub
adc
mov
cli
mov
mov
ljmp
inc
add
mov
jae
xchg
out
and
xchg
cmp
cmp
cmp
mov
fsubl
shrl
mov
dec
leave
clc
xor
xor
mov
dec
enter
pop
xor
lods
push
and
in
pop
lods
pop
dec
pop
lahf
rcrl
push
in
jns
movsb
add
loopne
pop
cmp
sahf
mov
push
xorl
sub
sbb
popf
lahf
xchg
xor
jns
mov
popf
pop
jnp
lret
fsubrs
lret
mov
fcomp
xchg
stc
xor
xor
dec
dec
mov
clc
add
gs
ja
fdivrl
cli
mov
ljmp
sub
add
nop
push
movb
mov
test
pop
repz
jb
ss
xor
rclb
push
loopne
mov
mov
lds
in
out
and
sbb
shlb
shll
mov
lahf
pop
adc
inc
jno
mov
inc
jnp
push
repz
xchg
loopne
out
add
jle
push
mov
fldenv
or
rorl
bound
mov
out
shl
aad
xchg
mov
xchg
and
lods
xchg
mov
scas
repz
sbb
in
pop
mov
xchg
or
push
sbb
in
in
and
adc
sbb
iret
imul
out
inc
lods
adc
into
fcmovb
shr
xor
mov
adc
sar
adcb
insb
mov
pop
and
sub
inc
icebp
xor
adc
fists
mov
out
cwtl
jbe
repz
scas
rcll
cmp
push
mov
xor
cltd
pop
ret
inc
or
cmpsl
cmp
adc
mov
stos
in
lret
in
fimull
jmp
cmp
aaa
lcall
pusha
pop
cmpsb
cmp
lods
or
stos
or
sub
enter
push
pop
mov
psrad
ljmp
int
pop
into
xor
dec
fmul
icebp
fidivrs
loopne
fwait
pop
and
cmpl
fstp
pop
outsb
mov
mov
push
mov
adc
mov
cltd
sub
lret
add
lret
jnp
fdivl
or
mov
mov
mov
hlt
lret
movsb
xchg
mov
xchg
cs
and
mov
fdivs
mov
arpl
inc
std
push
int3
add
push
adc
mov
push
sarl
xor
push
std
and
roll
popa
pop
loopne
push
repnz
push
cmp
pop
push
mov
aad
xchg
dec
cmp
repnz
int3
cmc
inc
cltd
or
or
imul
xor
mov
shll
call
in
xor
or
lods
int3
mov
sahf
test
jbe
popa
pop
fs
stos
pop
js
xchg
jge
bound
sub
in
pop
add
movsl
test
sbb
xor
ds
rorl
fildll
lret
push
mov
scas
cli
aaa
xlat
loopne
cmpsb
pushl
mov
sub
mov
mov
mov
shlb
ret
push
enter
cmp
adcb
ret
xor
and
fneni(8087
data16
loopne
fwait
push
xor
aaa
mov
imul
inc
inc
push
dec
xorb
xorb
inc
cmp
lods
out
addr16
mov
outsl
cld
xor
adc
pop
sub
mov
mov
sbb
iret
das
push
mov
xchg
xor
or
inc
push
aad
dec
push
stos
sbb
cmp
shl
sbb
xor
pop
in
les
fidivrs
sbb
arpl
pmuludq
cmc
lret
add
scas
sub
mov
fs
bound
xor
jge
jne
jecxz
dec
inc
int3
jnp
hlt
push
dec
cmp
mov
clc
jns
fcomps
ss
and
mov
lret
movsb
mov
xchg
cwtl
push
mov
fnstcw
xor
adc
jl
sbb
stos
leave
loopne
sub
ss
cmp
pop
pop
push
clc
imul
or
jle
or
stos
test
insl
push
lods
add
imul
xorl
bts
shlb
aas
ds
nop
shlb
sbb
pop
adc
je
data16
enter
add
int
jg
adc
xchg
pop
movb
xor
xchg
loope
lds
cmp
std
repz
cmp
xlat
movsb
or
mov
aam
hlt
push
pop
pusha
lods
mov
mov
mov
fstps
fbld
xchg
sbb
lea
mov
enter
inc
cmp
pop
push
int3
je
into
mov
xlat
xor
pop
mov
addr16
cmpsb
jg
jg
dec
enter
jbe
addps
adc
push
inc
jle
mov
jl
popf
pusha
mov
jg
int
flds
ss
mov
xchg
mov
add
imul
cli
add
repz
or
sbb
sbb
mov
outsl
pop
push
loope
mov
in
push
dec
scas
les
movsb
xchg
aas
ret
sbb
out
iret
subb
icebp
leave
and
lahf
jle
add
sahf
push
sti
fisttpll
pop
xlat
jns
cmp
push
inc
jb,pn
popa
repz
and
and
push
adc
xchg
js
int3
mov
int
push
sbbb
sub
enter
js
jg
daa
pop
leave
out
mov
xor
cltd
sub
in
pop
lret
xor
pavgb
cmpsb
es
pushf
int
cwtl
push
call
cmp
aam
out
notb
mov
sub
mov
aam
clc
xchg
add
cmp
push
push
testb
aaa
and
and
cmp
xchg
jle
loope
loopne
cmp
icebp
sbb
addl
aas
in
call
dec
inc
shl
mov
sahf
aaa
shll
sub
icebp
lcall
lret
pop
adc
jecxz
push
fsubs
cltd
jmp
jne
mov
pop
bound
addr16
jge
jno
inc
adc
sbb
xchg
rorb
jge
xchg
sarl
das
leave
cld
xor
xor
ljmp
pop
icebp
stos
jmp
inc
out
pusha
insb
std
push
push
fldt
or
or
subb
mov
lods
ja
push
shrl
inc
dec
mov
dec
inc
in
inc
dec
add
push
jle
adc
iret
in
sub
push
loop
jne
ss
jne
ret
mov
lret
mov
jmp
dec
ror
ja
repnz
push
scas
add
inc
cmp
mov
clc
stos
fdivl
mov
pop
pop
mov
movl
cli
jno
daa
cltd
jns
sbb
ret
push
pop
jne
enter
mov
adc
inc
mov
or
sub
or
test
pop
pop
out
dec
add
pop
lods
mov
xchg
and
push
jg
rcrl
jecxz
cltd
add
flds
into
les
fwait
mov
push
jns
push
mov
dec
xorl
pop
add
stos
cltd
lods
jp
jne
push
jns
xchg
stc
adc
test
lahf
outsl
mov
inc
push
push
xchg
leave
push
dec
mov
mov
pop
in
aam
test
mov
add
loopne
stos
insl
inc
sahf
int3
inc
pop
dec
stc
cmc
in
add
scas
xor
stos
add
repnz
mov
mov
fdivl
mov
xchg
push
pop
sub
lods
iret
aam
cmp
or
out
xchg
xchg
mov
sarl
pop
adc
mov
dec
and
add
sbb
cwtl
inc
loopne
imul
loop
stos
jne
mov
fcompl
dec
rcll
or
dec
mov
lds
xchg
test
jo
sub
add
push
xchg
mov
jecxz
push
pusha
vmovss
les
mov
push
xor
sbb
pop
add
je
je
dec
popa
inc
rcrb
mov
cwtl
mull
addr16
cmp
sub
enter
out
or
aas
stc
pop
xor
in
ljmp
xor
std
mov
cmpsb
js
out
sub
xor
and
mov
ljmp
push
dec
les
stos
shlb
repz
iret
inc
and
cmp
push
jnp
imul
push
jl
xor
ljmp
insl
and
enter
push
lret
xor
icebp
cmc
in
arpl
cli
push
inc
lds
inc
mov
rorl
add
rolb
test
inc
mov
ret
jecxz
pop
daa
mov
dec
leave
fdivrl
push
xchg
inc
jle
mov
frstor
cmp
sub
insl
inc
jl
scas
jp
ja
mov
mov
mov
arpl
and
jne
jle
pop
mov
aam
mov
cmpsb
in
jmp
in
mov
dec
push
arpl
jmp
ljmp
xchg
lds
push
repz
idivb
ret
cmp
sub
int
ror
xchg
nop
push
jnp
push
mov
xchg
jl
and
frstor
xchg
es
arpl
adc
sbb
sbb
imul
add
mov
fmuls
push
dec
test
push
insl
cltd
push
mov
in
and
xchg
jl
stc
rcll
lds
mov
mov
ret
clc
scas
mov
dec
scas
lret
dec
inc
dec
mov
sub
cltd
mov
push
cmp
cmp
and
pop
or
loop
addl
adc
mov
mov
mov
jae
mov
and
dec
sahf
jo
jle
jg
mov
mov
jmp
mov
push
adc
mulb
mov
popa
mov
in
jmp
imulb
out
movsb
ja
stos
imul
lods
cmp
sbb
into
notl
stc
xor
out
dec
mov
and
xchg
clc
into
jmp
mov
js
cmc
fdivl
adc
dec
out
stos
daa
mov
call
roll
sub
jge
out
std
dec
fsubrs
mov
scas
or
dec
or
xchg
and
dec
loop
icebp
mov
sahf
sbbl
sub
xor
mov
aaa
push
fsubrs
mov
or
adc
lcall
adcl
mov
lret
mov
sbb
sbb
adc
mov
dec
fnsave
sbb
xlat
jne
mov
fiadds
jo
leave
popa
movsb
push
mov
in
fcoml
lea
jl
mov
lea
imul
and
leave
or
lret
call
push
stos
jae
pop
data16
fcmovnb
xchg
jle
pusha
mov
das
jg
pusha
mov
cmp
mov
mov
lcall
popf
cs
int
loop
es
jae
js
inc
loope
cmp
jb
insb
shll
xchg
test
cmp
mov
iret
pusha
rcll
sarl
sbb
cmpsl
xor
or
jns
stos
push
es
loopne
das
call
xchg
cmp
in
lock
call
out
sub
xor
enter
data16
std
mov
dec
push
dec
pop
push
xor
xor
jo
jle
xor
lds
ret
jne
in
pop
add
add
mov
je
loope
movsl
test
and
cmp
cmc
sub
pop
hlt
sub
loope
cltd
sbbl
pop
std
fsubrl
xor
mov
in
pop
insb
mov
scas
popa
pop
iret
outsl
sbb
insb
xor
or
cs
push
cmpsb
sti
fidivs
dec
mov
xorl
test
cs
and
stos
rcrl
jbe
add
sbb
or
pusha
call
mov
ret
pusha
test
ret
sub
jle
int
cmp
xlat
ds
out
jb
lea
hlt
sbb
jmp
adc
mov
fisubrs
imul
cmp
dec
adc
jns
in
cmpsb
pop
rclb
dec
push
repnz
cmc
xchg
out
xchg
es
lcall
jbe
mov
cmp
xchg
inc
mov
lods
in
sub
es
pop
and
sarb
adcb
insl
xor
aad
mov
lock
je
mov
dec
adc
mov
and
inc
lret
std
or
jne
mov
insb
sub
iret
incl
lahf
adc
cltd
sub
sbb
dec
dec
jmp
and
sbb
and
dec
notl
mov
mov
cltd
pop
fnstcw
aaa
in
sahf
pop
loope
sbb
mov
in
sbb
sarb
aam
xchg
add
xchg
sbb
inc
mov
cwtl
and
into
sub
loop
xor
add
jmp
push
mov
enter
ret
mov
xor
xchg
cmpsl
mov
das
inc
dec
movsl
mov
shr
xchg
inc
arpl
pop
adc
inc
aad
int3
xor
out
in
mov
cltd
adc
push
and
xor
jo
sub
aaa
jnp
jmp
mov
test
lods
dec
fwait
pop
aas
int
cmpsl
push
sbb
test
inc
jae
bound
fildll
add
call
cli
fwait
mov
arpl
xor
mov
mov
pop
add
jae
xlat
adc
cld
mov
test
sub
mov
sbb
lock
div
repz
cmp
icebp
pop
cmp
fwait
add
inc
xor
mov
or
enter
sub
pop
dec
aam
mov
je
add
xchg
daa
jle
lret
lahf
int
scas
hlt
add
insl
xor
dec
or
and
or
jne
and
out
and
jle
dec
inc
xor
idivl
inc
imul
and
xchg
jo
mov
jp
rcl
repz
add
lods
clc
fisttpll
push
push
mov
lods
sub
sbb
dec
pop
add
or
idivb
cmp
xorl
adcl
mov
mov
or
das
push
or
test
cwtl
scas
in
mov
cmp
mov
mov
insl
jp
test
mov
mov
lret
idiv
sub
out
mov
jbe
in
push
out
mov
bound
test
add
aad
jle
leave
lret
mov
movsl
mov
clc
inc
add
pop
testb
lret
adc
es
and
sub
xchg
sbb
jge
xchg
call
xor
lret
int3
outsl
jecxz
and
aaa
les
push
push
dec
or
mov
cmp
ljmp
sbb
cs
loop
sbb
xchg
adc
mov
mov
insb
mov
add
dec
or
data16
aaa
mov
sbb
jae
mov
test
adc
sub
out
push
andb
aas
in
sub
dec
xor
jae
add
test
rcl
je
loope
out
arpl
ja
mov
icebp
ret
repnz
mov
sub
ds
pop
imul
pop
mov
push
inc
les
fisubl
xchg
mov
out
xchg
jge
sub
iret
fadd
sbb
jns
and
shl
shld
or
and
and
roll
add
adcl
mov
mov
roll
xchg
jb
sub
les
mov
add
adc
movsl
mov
jo
sbb
int
push
adc
push
decb
insb
scas
xchg
inc
mov
test
fsubrp
sub
jae
fcompl
mov
xchg
or
movsb
fmuls
push
sbb
orb
push
rorb
push
test
lea
inc
or
cs
cs
jg
dec
mov
dec
bound
cmc
fcmove
cmpsb
out
fstl
data16
dec
mov
mov
icebp
jge
das
pop
jle
fs
cmp
loopne
das
es
sti
ud2
mov
jg
test
repz
iret
pop
cs
xchg
bnd
subl
and
cmpsb
sub
call
sbb
sahf
or
sti
in
iret
leave
pop
mov
lret
jae
xchg
sahf
ja
mov
xchg
jmp
or
test
cltd
enter
xchg
mov
subb
aam
pop
out
mov
in
push
dec
dec
adc
cmp
push
sub
lods
rol
fists
push
ret
xor
insb
add
xor
push
out
or
ret
das
mov
fldt
roll
jae
movsl
sbb
ss
sbb
rol
ja
je
gs
mov
fcomps
mov
rcll
je
stos
push
leave
or
enter
pop
test
jo
repz
hlt
inc
or
je
inc
hlt
test
pop
rorl
dec
rclb
pop
mov
sbb
cmp
dec
adc
popa
ljmp
call
roll
xor
cltd
mov
mov
jmp
shl
xchg
outsl
outsl
adc
gs
sbb
fnstsw
test
lods
stc
call
sub
mov
and
rorl
push
adc
aaa
mov
in
inc
vmptrst
icebp
int3
ficoml
sti
cmp
mov
push
pop
lods
ret
push
adc
xchg
lock
fisttpl
insb
sub
in
adc
rolb
xchg
xor
into
insb
adc
jnp
and
test
cmpsl
in
sub
fsubrs
push
mov
and
cmp
dec
or
sub
dec
lock
xchg
data16
pop
imulb
insb
fs
jge
xchg
cs
adc
jecxz
add
clc
xor
sub
ds
cmpsl
fwait
sarl
lret
sbb
inc
jbe
and
loopne
and
add
adc
sbb
or
mov
lods
adc
and
dec
in
call
adc
jmp
or
mov
pop
aaa
scas
loope
sub
push
mov
subb
addl
adc
in
xor
mov
sub
in
lcall
sub
cmp
xor
cli
cmpsl
pop
or
testl
out
add
aas
pop
shr
loop
inc
dec
cmp
js
iret
jecxz
jmp
ljmp
pop
or
jno
cmp
imul
pop
pop
inc
mulb
ret
rcll
rorb
es
fucomi
ja
jl
mov
jge
xlat
sbb
jns
mov
gs
push
orl
cmp
sub
and
inc
jns
mov
daa
xor
cmpsl
dec
imul
sti
mov
incl
inc
imul
test
cld
cmp
mov
aaa
sbb
mov
cltd
jnp
jne
adc
or
jg
mov
push
jl
cwtl
and
inc
dec
adc
and
cmpsb
add
xor
in
scas
mov
iret
fstpl
lods
pop
insb
mov
sbb
stc
fisubrl
daa
fisubl
or
ficompl
leave
sub
out
fldl
hlt
repz
roll
mov
lds
sarl
add
roll
ja
mov
xchg
mov
mov
and
jno
pop
ds
cmpsb
jnp
fwait
shlb
lret
lret
ljmp
ss
push
adc
dec
pop
cmp
xchg
sbb
sub
sbb
cs
sbb
push
out
pop
push
icebp
add
into
out
pop
aaa
subl
stos
and
dec
xor
jp
imul
orl
clc
jns
xchg
and
sbb
pop
mov
pop
rcrb
rolb
and
jmp
jbe
shrl
test
repnz
mov
js
inc
mov
hlt
sahf
mov
jb
lock
sbb
int3
insl
addr16
repnz
push
mov
mov
sub
sar
dec
iret
inc
lods
notl
stc
out
pop
push
outsl
lahf
je,pn
mov
mov
pop
lds
mov
add
inc
jae
flds
pop
push
mov
xchg
inc
pop
inc
aaa
mov
xchg
movsl
aaa
lea
mov
sub
xchg
mov
dec
pop
fsubs
add
jae
adc
jo
mov
popf
inc
mov
jmp
es
jg
dec
inc
pop
roll
in
shl
jecxz
daa
enter
jne
inc
stos
push
mov
jecxz
dec
mov
aas
loope
arpl
iret
mov
outsl
pusha
jo
pop
mov
scas
xchg
mov
pop
xchg
js
add
jle
cltd
sub
mov
jns
xchg
sbb
ja
jp
ljmp
aas
mov
pushf
push
cmp
push
xor
dec
push
add
xor
cmp
cmc
cmp
je
dec
sbb
repnz
aam
mov
and
sti
std
and
inc
das
sub
movsl
aam
xchg
push
ret
subb
adc
loopne
call
aam
dec
das
inc
mov
idivl
scas
cwtl
xchg
rcrl
inc
rorl
out
rorb
cltd
enterw
repz
and
mov
rcrl
mov
adcb
imul
adc
dec
and
stos
jg
cld
lock
adc
mov
leave
fstpt
or
xchg
out
sbb
cmpsl
fimull
xchg
cwtl
jge
scas
mov
xlat
pop
sub
mov
icebp
sbb
inc
sub
push
in
mov
subb
ss
sub
lea
mov
std
push
xor
scas
dec
mov
imul
push
ljmp
xchg
sub
cmpsb
pop
xlat
es
pop
xor
pop
push
pop
rorl
xchg
jge
xor
mov
cmp
ret
push
aam
dec
inc
or
shll
clc
leave
dec
enter
in
pop
movsb
or
ljmp
pop
ljmp
addb
sub
es
and
mov
pop
xchg
mov
scas
insl
dec
in
pop
inc
lds
lret
orb
xchg
jmp
aad
lods
je
sub
and
iret
add
sbbb
scas
dec
fbstp
pop
iret
mov
adc
xchg
xor
pop
push
mov
mov
sbb
int3
inc
mov
mov
rcrl
xchg
xor
enter
xlat
mov
jb
stos
test
sbb
lret
mov
aaa
iret
sub
aaa
pop
push
pop
sub
push
cs
sbb
lock
loope
sub
aad
andl
sbb
in
mov
inc
scas
sbb
push
adc
aad
jecxz
cmp
icebp
negl
sbb
mov
iret
adc
fdivrs
adc
sbb
in
bnd
cli
pop
xor
subl
lods
daa
test
jmp
lds
call
sahf
pop
mov
pop
push
icebp
push
sub
filds
xchg
outsl
adc
or
xor
in
popf
push
stos
xchg
shrl
fistps
pop
mov
mov
iret
inc
xor
jmp
in
fxch
insl
roll
mov
push
ficomps
inc
xchg
movsb
and
mov
jno
push
jae
das
push
pop
pop
cli
mov
lods
jmp
adc
int3
mov
mov
cmp
adc
in
push
mov
jmp
lock
jae
leave
int3
jbe
mov
outsl
push
push
fstpl
cltd
adc
inc
cmp
dec
imul
aaa
in
mov
adc
mov
jae
out
sub
int3
push
hlt
cmp
lods
add
add
fimull
faddl
lret
mov
fisubrl
in
pop
pop
xchg
pusha
push
sub
inc
cmp
leave
jecxz
xorl
lods
in
adc
imul
push
sti
addb
pop
dec
mov
mov
jmp
cs
jns
add
pop
push
imul
pop
fistps
push
dec
shll
adcl
add
xor
mov
fdivp
sub
repz
sub
mov
pop
mov
xchg
test
inc
adc
repz
sbb
sbb
arpl
pop
inc
push
jo
dec
add
fmull
mov
jmp
sarb
sahf
mov
shll
push
jle
mov
out
nop
test
bound
push
outsl
fwait
xor
stos
sub
out
cli
popw
fwait
pusha
lea
call
and
imul
sbb
rorb
lods
into
mov
in
fwait
inc
jmp
js
pop
sub
test
mov
sbbb
cli
dec
nop
arpl
inc
mov
and
and
rorl
pop
ljmp
rorl
mov
nop
jge
adc
xor
pop
jp
sahf
test
leave
xor
or
xchg
cmp
push
and
cmpsb
adc
aaa
jns
icebp
clc
daa
mov
xchg
mov
jb
mov
adc
ja
cld
pop
mov
stc
or
jo
xchg
dec
imul
dec
mov
mov
push
lcall
fsts
stc
stos
xchg
cmp
sti
mov
dec
pop
ja
fsts
push
sub
pop
inc
ret
lods
jne
dec
lcall
or
cmp
xor
popf
scas
jl
push
sahf
movsb
push
jb
out
inc
mov
add
and
add
je
cmp
cmp
dec
xor
lods
pushf
or
or
pop
pushf
cld
mov
adc
and
sbb
cmpsl
push
aad
int
mov
fiadds
data16
push
sub
fisttpl
cli
push
rol
push
pop
mov
pop
cmpsb
in
or
popl
mov
cmp
aam
frstor
test
cmc
repz
jns
shl
cltd
push
mov
sbb
sbb
add
or
imul
push
xchg
je
pop
scas
fnstsw
rcl
outsb
xchg
push
add
vmovapd
pop
push
cmp
push
sub
ret
mov
pop
mov
fcompl
shll
jnp
push
inc
inc
inc
cwtl
xor
cli
daa
push
cmc
inc
loopne
stc
dec
ret
into
mov
inc
dec
push
popf
cmpl
hlt
cmp
sbb
out
fimuls
mov
leave
or
dec
test
or
xchg
push
sbb
out
xor
or
add
lahf
and
cmp
inc
jae
and
add
dec
je
ja
dec
mov
mov
stos
push
mov
inc
lods
and
or
stc
loopne
in
or
xor
push
loopne
sbb
jmp
lea
call
adc
sub
ret
andb
call
mov
lahf
pop
and
aaa
in
mov
sar
daa
adc
jne
mov
pop
fdiv
sub
int
pop
das
mov
mov
arpl
lods
lret
pop
div
repz
popf
roll
fmuls
jge
mov
jge
xor
or
push
cmp
pushf
ds
call
pop
mov
icebp
add
mov
daa
pop
or
xor
jp
push
xchg
or
cmp
xchg
xor
mov
pop
mull
push
add
pushf
mov
leave
mov
pop
sbb
lea
inc
jns
das
jnp
jae
dec
inc
lods
xchg
jo
xchg
repz
xchg
inc
xor
shrb
imul
in
cli
shll
stc
xchg
std
test
pop
jmp
xchg
mov
push
fistps
icebp
mov
roll
lcall
icebp
int3
sub
jbe
add
and
jle
hlt
push
push
inc
xor
clc
aas
xor
xor
pop
and
push
sbb
movsb
mov
mov
loope
sub
nop
and
sarl
fstpt
rorl
shll
repz
cltd
andl
dec
push
int
test
fcomi
cmpsb
sahf
pop
arpl
icebp
add
clc
call
inc
leave
sbb
jne
mov
sub
jmp
adc
cmp
call
pavgb
mov
xor
outsb
jo
pop
imul
jle
movsl
push
sub
push
scas
nop
dec
or
imul
test
dec
in
push
push
add
sbb
adc
shlb
cld
insl
cwtl
clc
adc
cmp
fdivs
mov
scas
sub
in
stos
not
mov
pop
dec
aaa
js
dec
or
cli
mov
mov
fwait
and
outsb
lods
test
push
push
std
imul
and
mov
and
stos
cld
es
pop
dec
in
rcrl
nop
repnz
pop
and
dec
repnz
and
cli
sub
push
pop
sub
cmp
testb
mov
push
or
mov
jecxz
push
lods
imulb
fwait
daa
push
jl
sbb
jo
jnp
ficomps
aaa
rorl
push
clc
pop
mov
adc
lds
sbb
fwait
mov
xchg
xchg
rolb
cmp
std
mov
xchg
jb
js
call
xchg
lret
dec
mov
aas
mov
mov
stos
les
and
imul
out
nop
inc
jbe
into
push
aam
call
or
xlat
ret
test
test
or
divl
fisttpll
mov
mov
mov
dec
jns
popf
push
sub
xchg
das
gs
pop
fsubrs
xor
sub
je
jnp
out
hlt
aaa
pushf
sub
and
add
lret
insl
jnp
adc
sbb
push
pop
mov
jg
andl
and
inc
aad
rolb
mov
add
mov
lret
adc
adc
dec
xor
fucomip
addb
enter
xor
outsl
cwtl
adc
mov
cmp
je
push
push
jbe
loopne
sub
mov
gs
inc
arpl
pop
and
fnstsw
xor
sbb
iret
mov
cli
xchg
xchg
jns
into
cmp
out
pusha
jl
in
mov
xor
inc
dec
inc
dec
cmp
and
pop
or
mov
loopne
repz
mov
xchg
lock
mov
arpl
add
fwait
and
sbb
ret
das
pushf
arpl
stos
jbe
aaa
dec
popl
pop
mov
adc
add
dec
mov
mov
addr16
loop
fsts
aad
test
mov
push
inc
ret
adc
adc
ja
divb
push
or
out
cmpsl
in
push
mov
xchg
pop
mov
xor
fadds
mov
inc
mov
cmpsb
push
hlt
inc
jp
andb
icebp
mov
nop
addl
adc
inc
lea
inc
jno
jecxz,pt
mov
ljmp
cmpsl
jnp
xlat
xchg
fisttpll
imul
cmp
xchg
cmp
xor
push
addb
mov
hlt
ds
fsts
mov
fcmovu
mov
shll
sti
bound
ljmp
dec
and
out
sub
int
test
fistpll
pop
gs
lahf
rcrb
in
xor
data16
lss
pusha
pop
data16
fsub
inc
imul
repz
and
repnz
mov
inc
mov
stc
and
ret
jge
xor
lret
pop
or
lahf
jp
call
lock
es
test
cmpsb
divl
or
enter
fcomps
pop
cmc
push
push
sarl
and
mov
clc
add
es
adc
dec
repnz
sub
push
adc
jo
dec
fidivrs
ljmp
lahf
mov
pop
jl
add
roll
or
and
pop
packssdw
scas
lods
xor
rorl
sar
and
xor
sbb
loopne
sbb
inc
push
rorb
mov
or
insl
sbb
pop
icebp
pop
and
sarl
sbb
sarl
loope
inc
shlb
cmp
push
aas
cmc
sahf
pop
sub
out
xchg
mov
fs
mov
xchg
ljmp
orb
out
ret
mov
sub
fiaddl
jge
jge
sub
sub
pop
xchg
pop
and
and
sarl
mov
pop
and
dec
pusha
popa
inc
fstl
loope
sarb
sub
lods
dec
movb
xor
imulb
inc
or
mov
popa
lahf
push
cmp
xchg
or
jnp
or
cmc
iret
mov
insb
ljmp
cmp
lret
test
loop
cmp
sbb
inc
or
xor
xor
mov
and
adc
sbb
jmp
pop
jg
icebp
xchg
imul
adcb
scas
arpl
js
mov
mov
js
cmp
sub
jae
push
decl
divl
cli
adc
push
xchg
jmp
repnz
mov
adc
fisttpl
mov
inc
pop
jl
repz
adc
sarb
jmp
jnp
or
xor
aas
push
push
inc
insb
in
add
xchg
xor
dec
dec
repnz
and
lods
jl
out
arpl
or
les
push
sbb
cmp
inc
sbb
push
aas
mov
stos
mov
sub
and
inc
inc
into
or
jno
setl
notl
adc
shll
inc
push
call
data16
or
jae
push
sbb
push
cmp
in
filds
jecxz
ss
and
adc
pop
and
outsb
movsl
xchg
push
ljmp
jno
push
sub
jns
negl
std
jbe
repz
push
sub
imul
andb
popf
push
out
fimuls
adc
aam
jmp
outsb
and
out
outsl
or
aam
and
add
lea
mov
push
lock
jecxz
add
push
mov
test
xchg
xchg
cmp
pop
jne
sti
sbb
aad
lods
stos
pop
dec
lahf
inc
test
jle
xchg
inc
add
js
sbb
xchg
push
into
subl
jne
jl
push
sub
add
push
jo
popf
sub
and
sbb
jns
mov
mov
or
and
xchg
dec
sti
scas
xor
inc
xor
cmc
xor
outsl
add
mov
mov
jle
mov
xchg
xor
mov
sbb
push
push
pop
rorb
jmp
mov
stos
sub
stc
xor
and
arpl
mov
ds
in
pop
jns
fldt
sub
or
push
addl
inc
cli
pop
push
lret
and
mov
pop
cmp
iret
add
mov
and
mov
jnp
jno
sbb
js
inc
mov
and
or
or
clc
add
mov
test
hlt
std
aam
pop
mov
mov
inc
je
in
out
loope
lock
dec
stc
mov
insb
mov
pop
dec
fsubs
sbb
jle
sahf
xor
fucomp
gs
mul
stos
je
or
push
pop
pusha
dec
dec
inc
sbb
in
sbb
jbe
cmp
inc
mov
jp
test
repz
ja
lock
iret
cmp
out
sub
jecxz,pt
mov
rolb
cmp
imul
or
stos
xchg
loope
fmull
std
ret
jo
clc
sbb
add
loop
adc
xchg
add
mov
mov
lret
adc
or
into
mov
mov
fadd
sbb
fbstp
adc
sbb
ljmp
sarb
xchg
mov
push
in
push
xchg
test
sbb
jl
fists
sbb
jns
out
lods
xchg
repz
lds
xchg
fnstcw
xor
stos
insb
rolb
scas
fsubl
into
fsubrs
scas
popl
mov
mov
mov
psubsw
push
fidivl
xchg
fstl
mov
pusha
push
loopne
pop
scas
sbbb
jns
pop
fdivrl
shll
movsb
lea
sti
adc
push
incb
ljmp
sub
sbb
nop
mov
or
add
mov
push
std
jne
xchg
pusha
dec
lods
lret
sarb
mov
cmp
mov
les
insl
mov
dec
jecxz
pushf
out
fisubl
jno
fldenv
xor
mov
bound
push
outsb
inc
insl
clc
or
adc
mov
dec
cmp
cltd
pop
dec
mov
imul
or
push
xchg
div
inc
testb
fs
mov
fimull
add
icebp
push
jo
sarl
push
add
scas
sub
rorl
cmp
and
jno
push
cmp
neg
fisttpll
pop
adc
daa
les
popa
nop
arpl
mov
movsl
inc
cmp
pop
xor
lods
pop
mov
pop
xchg
insb
jmp
pop
xchg
xchg
cmp
add
int3
or
out
aam
jl
enter
xlat
cmpsb
jmp
adc
mov
out
lea
shrb
cmp
fldl
cmc
mov
stc
mov
pop
orb
js
xchg
xor
xchg
dec
push
js
cli
bt
mov
dec
lea
int
fbstp
dec
or
scas
cltd
sbb
mov
movsl
sbbl
sahf
out
mov
pop
mov
test
cmp
pushl
jo
loopne
xchg
mov
mov
scas
sarb
aaa
mov
out
popf
xorl
outsb
sbbb
lahf
dec
pop
jp
mov
roll
int
cmp
retw
gs
dec
sbb
std
xor
jecxz
pop
xchg
ret
lret
push
add
jl
mov
in
xor
mov
jle
sub
shl
enter
xchg
adc
xorl
loop
popf
dec
and
insl
cmp
fwait
mov
es
adc
mov
pushf
shrl
sub
adc
out
sbb
jnp
aaa
stos
icebp
xchg
adc
cmpsb
pop
mov
and
dec
lret
rcrb
lods
fdivl
push
data16
rcll
les
notb
jg
jo
sbb
pop
add
mov
jg
xchg
repz
cs
xchg
je
mov
pop
dec
mov
jl
dec
out
pop
out
dec
fstpl
insb
bound
adc
jno
push
mov
outsl
gs
fadds
and
push
repnz
xchg
addr16
sbb
xchg
xlat
outsb
movb
mov
jns
push
jae
mov
xchg
inc
sbb
fcmovu
rcrb
jle
call
shlb
xor
popf
mov
mov
add
int
fistl
push
mov
inc
int3
clc
push
jge
jmp
stos
hlt
mov
mov
xor
int
jnp
dec
int
lea
xchg
xchg
xlat
arpl
testb
scas
sub
mov
and
push
add
pop
das
repz
xor
pusha
xchg
cmpsl
cwtl
repnz
xor
repz
adc
in
pop
add
or
sub
inc
repz
test
scas
in
jne
hlt
mov
mov
cmpsl
imul
das
repz
adc
cs
xchg
cmc
dec
inc
sub
sub
stc
jg
sarl
mov
jns
lret
in
push
jle
je
mov
ret
bnd
and
cmp
repz
testl
push
xchg
cmc
push
inc
xor
std
cmp
daa
dec
movsl
lahf
mov
mov
movsb
std
ret
test
mov
std
fcompl
gs
cmp
mov
xchg
repz
and
inc
shlb
arpl
sub
dec
push
pop
notb
js
repnz
sbb
push
dec
outsl
and
icebp
loopne
sbb
lret
xchg
mov
cmc
and
add
outsl
mov
xchg
movsl
cmp
out
shlb
xor
mov
or
xchg
aaa
jp
push
or
mov
ljmp
jne
and
aaa
ret
sub
sbb
mov
mov
popf
lret
xor
enter
decb
fimull
aad
pushf
xchg
lods
add
or
cmp
lods
mov
fmull
or
jg
aam
mov
and
jge
cmp
mov
jbe
mov
jmp
xchg
dec
roll
adc
jnp
divb
arpl
test
inc
add
push
testl
adc
dec
sub
mov
dec
xchg
and
or
lcall
cmovns
fst
mov
push
das
sbbl
xchg
outsl
inc
pop
xlat
leave
je
leave
cmpl
xchg
enter
or
cmp
sbbl
mov
out
outsl
mov
icebp
lock
fisttpl
je
outsb
leave
jmp
add
aam
ds
push
adc
stc
jl
xchg
mov
stos
mov
add
push
mov
cwtl
push
mov
arpl
aad
dec
out
sbb
sahf
jnp
sahf
adc
xor
cwtl
lods
mov
jecxz
movsb
or
cmpsl
sbb
adc
pop
jge
jle
insb
cwtl
mov
fldl
xorl
inc
mov
mov
cmp
lcall
dec
iret
push
int3
mulb
cmp
sti
add
cmp
test
mov
ret
jmp
lret
push
xor
stos
mov
mov
cmp
dec
dec
add
or
adc
sbb
or
fisttps
inc
enter
dec
orb
mov
fdivrl
ret
xlat
ficomps
aam
or
jae
add
inc
or
jns
xor
mov
aad
jb
cmp
push
xorl
int
leave
mov
jne
jmp
adc
stc
pop
addr16
push
test
mov
jo
and
cs
cli
ud0
ds
insl
adc
loope
sbb
loope
push
aad
mov
sbb
or
pop
leave
push
js
cmpsl
outsl
dec
fucomp
mov
loop
mov
xchg
test
and
inc
sahf
inc
jbe
sbbb
add
imul
fs
in
hlt
jb
dec
mov
sbb
mov
xor
push
cld
adc
lods
jl
ljmp
cltd
inc
or
xchg
out
dec
les
sub
in
inc
mov
or
or
lahf
sbb
mov
xor
cmpsb
and
bound
xlat
sbb
cmp
push
lret
mov
test
push
fdivs
testb
adc
push
mov
leave
xchg
jle
aad
add
lds
ja
test
sbb
lret
nop
xchg
ja
add
leave
nop
mov
bound
pop
nop
cwtl
repz
jp
jb
push
sub
jl
sarl
sub
push
or
pop
cltd
mov
inc
sub
ret
sbb
mov
mov
les
pop
jno
adc
aam
push
cli
jge
ljmp
scas
xchg
pop
jecxz
jge
dec
add
xor
push
mov
jmp
and
repz
out
sahf
mov
cmpsl
loope
mov
call
frstor
xor
mov
pop
sbb
stos
scas
fwait
roll
jg
xchg
imul
xor
dec
pop
adc
sahf
sbb
push
xchg
and
out
stos
or
cmpsb
test
out
imul
or
fs
jmp
scas
mov
mov
pop
test
mov
push
mov
xor
aam
push
fldenv
mov
or
outsb
inc
sub
sub
and
sti
pusha
mov
cmc
enter
rcr
push
and
pushf
xchg
push
xchg
movsl
test
lret
jns
jo
cmp
fst
jcxz
shr
adc
mov
xrelease
cmp
cli
sub
out
xor
xor
mov
pop
fbld
outsb
push
mov
and
pushf
cltd
ja
jne
mov
popa
cmpsb
pop
fs
inc
sbb
outsb
xchg
mov
mov
mov
pop
xor
orb
lods
jbe
pushf
xor
or
ret
jo
movsb
cmpsb
fxch
mov
sbb
mov
call
ljmp
lret
loopne
js
mov
or
cwtl
xchg
lock
jmp
rep
aas
mov
testb
sbb
int3
sbb
mov
fxch
jns
inc
pusha
inc
push
out
xchg
int3
mov
sbb
mov
jge
shl
ret
addr16
dec
sti
lock
mov
mov
je
stc
lcall
stos
movsl
int3
fwait
daa
sahf
pop
mov
popa
pop
out
cmp
jp
sub
xchg
loope
add
or
mov
fsubrs
xor
jns
dec
xor
mov
imul
and
jbe
adc
shll
clc
mov
lea
inc
and
dec
xchg
lea
cmpsl
mov
aad
and
es
pop
enter
pop
xor
popa
xor
inc
pusha
push
xchg
and
or
lea
push
push
div
out
push
sub
fwait
mov
lahf
dec
cmp
xchg
cmp
pop
inc
mov
mov
shll
hlt
inc
and
jo
sbbb
dec
mov
shr
pop
fwait
in
or
nop
mov
mov
jmp
ret
lds
mov
shl
mov
jle
xchg
out
xor
pop
pushf
pusha
js
push
xchg
pushf
aad
cmp
jle
push
aaa
add
mov
lods
popa
int
lret
fst
mov
outsb
dec
data16
dec
roll
jmp
push
jle
sub
add
fiaddl
jg
dec
daa
addr16
test
aam
pop
cmp
aaa
stos
clc
out
add
push
dec
shll
xor
mov
hlt
push
ss
out
or
es
mov
xor
mov
cmp
addl
fcmovu
in
popf
push
in
shrl
popa
sarl
bound
stos
add
inc
aam
je
jo
rcrl
dec
jl
push
lret
inc
or
cmpsb
loop
push
xchg
mov
into
sub
nop
cltd
mov
test
rcl
cmp
sbb
ret
out
push
add
or
jge
jno
ret
sbb
not
fwait
mov
pop
mov
ret
sub
into
jnp
add
xchg
daa
add
inc
arpl
dec
pop
call
aam
or
push
enter
sub
dec
jle
cmp
es
mov
in
fcom
lahf
mov
cmp
mov
stos
xor
sbb
xchg
inc
adcb
lahf
repnz
mov
dec
sub
mov
mov
dec
in
mul
pop
sahf
xchg
nop
mov
xor
je
sub
dec
shl
xchg
mov
cmp
pop
sbb
dec
sbb
jle
or
stos
mov
test
xlat
aas
xor
dec
push
movsl
aam
dec
xlat
scas
das
lahf
mov
in
pop
ret
rcrl
std
enter
jb
lcall
lods
push
push
push
stos
test
mov
mov
pop
mov
or
add
xchg
mov
std
hlt
iret
cmp
daa
dec
leave
mov
imul
pop
enter
xor
dec
and
xor
mov
bound
lret
test
and
adc
sbb
pusha
pop
loop
add
sahf
fdivrs
dec
popa
outsb
dec
loopne
and
xabort
pop
fsubrl
inc
pop
mov
cwtl
sti
repz
cmpsl
pop
ss
cmpsb
loopne
xchg
add
fmuls
lock
hlt
lcall
rcll
movsb
add
adc
cmpsb
int3
cmp
orb
adc
aas
mov
fnstenv
mov
pop
jb
imul
push
pop
adcl
and
stos
sbb
push
mov
cmpsb
xor
fsubl
pop
out
shlb
xor
sbb
subb
mov
add
push
jo
jmp
shrb
mov
je
imul
dec
xchg
imul
jg
fists
fdivrl
addl
adc
mov
jge
inc
jge
movsl
mov
out
scas
repnz
imul
push
fcmovb
push
iret
xor
flds
xor
nop
xchg
into
rorb
xor
pop
push
incl
outsb
gs
inc
dec
repnz
dec
inc
repz
xor
testl
daa
loope
mov
lret
add
inc
jnp
add
rcll
sbb
test
mov
mov
xor
pop
mov
mov
mov
mov
imul
cmc
mov
sbb
mov
mov
fcoms
ss
mov
les
xchg
stos
dec
mov
xchg
mov
adc
and
add
cli
push
into
dec
push
xorb
dec
jo
or
into
jecxz
daa
push
js
rdmsr
push
js
and
cmp
adc
pop
dec
jmp
dec
add
in
xchg
icebp
push
decb
sub
sbb
mov
add
pop
push
sahf
std
movsl
les
dec
mov
test
imul
push
cmp
lret
push
or
clc
cmp
lahf
aam
mov
push
adc
push
ds
pop
dec
test
aam
mov
inc
popf
ret
push
or
xor
inc
jecxz
cmp
daa
mov
cmp
dec
dec
add
ja
cmp
push
stos
dec
push
vmread
fiaddl
cs
mov
dec
xchg
add
push
fdivs
pop
imul
xorl
ja
add
in
sbb
test
ret
dec
in
sub
dec
pop
push
push
mov
cmpsl
jmp
adc
int
ljmp
sub
test
mov
add
or
in
or
mov
lea
into
xor
adc
es
add
push
jp
loopne,pt
adcl
out
mov
mov
cli
cmp
cmp
arpl
bound
xor
adc
fs
loop
cmp
iret
repz
mov
sbb
fildl
mov
xlat
cmp
ficoms
cmp
cmp
outsl
xchg
jmp
out
das
inc
es
outsl
or
cmp
repnz
mull
popf
lcall
sbb
push
xor
out
mov
pop
rcl
in
xchg
sub
inc
mov
sti
icebp
iret
sub
out
xor
xor
repz
push
jg
daa
int3
lock
into
popa
lods
subl
xchg
mov
mov
mov
add
ss
dec
in
mulb
lds
sbb
xchg
dec
loopne
xchg
mov
xchg
fs
test
shrb
push
lahf
cmp
stc
xchg
xor
loope
in
ljmpw
in
dec
insl
mov
bound
jb
xor
mov
or
pop
jbe
fldt
fucomp
mov
enter
sbb
mov
xchg
fisttpll
shl
lahf
loope
icebp
cltd
addr16
push
sub
inc
loope
adc
jmp
movsl
dec
cld
sbb
jg
ds
pop
pop
js
fsubrl
sbb
pop
test
fcmovb
pop
or
mov
negl
and
jmp
mov
or
stc
daa
push
pop
imul
cmp
push
out
sub
sub
bswap
cmp
outsb
pop
sbb
pop
cltd
fcomps
rclb
popa
jbe
dec
ret
or
dec
movsl
push
iret
sub
xor
mov
pop
inc
pop
and
pop
xor
xor
dec
xchg
and
addr16
push
aam
mov
dec
lock
mov
fstl
ljmp
mov
pop
adc
push
sub
xlat
es
push
lock
sbb
ds
xchg
daa
dec
cmp
adc
test
jns
and
je
jg
adc
repz
aam
push
loopne
push
lahf
insb
movsl
dec
out
mov
icebp
mov
jne
dec
lods
xlat
xor
outsb
sub
addb
test
dec
stc
jbe
fadds
in
int
mov
shll
lock
test
mov
popf
fs
scas
jge
xor
push
lock
push
enter
cltd
xchg
mov
xchg
xchg
or
xor
lods
stc
push
pop
jne
jmp
jle
movsb
push
xchg
pop
cmpsl
out
cmpsb
push
icebp
fucomp
dec
arpl
mov
jmp
jbe
xchg
inc
sub
inc
lock
outsl
xchg
lea
sub
push
js
int
jb
lret
ltr
out
shlb
sub
insb
cld
push
push
movsb
jbe
mov
or
or
add
dec
inc
cmp
dec
mov
inc
stos
xor
inc
lods
push
mov
in
jmp
inc
repnz
cmc
imul
adc
addl
adc
mov
xor
stos
shll
jl
cmp
sti
or
jecxz
loopw
popf
and
pop
lcall
inc
iret
bound
out
add
adcl
or
and
xor
xor
dec
imul
movsb
inc
cmp
int
pop
jbe
in
outsb
sbb
rolb
inc
xor
mov
fistps
out
pop
out
shll
insb
xorb
hlt
out
mulb
push
inc
in
sahf
dec
add
mov
int3
out
shrb
xor
pop
sbb
mov
adc
lahf
push
adc
and
lret
loopne
and
std
aas
ret
adc
hlt
mov
adc
scas
mov
lcall
dec
shll
nop
cmpsb
mov
push
loopne
iret
sbb
sbb
sub
sub
jne
stos
movb
jnp
dec
cmp
xor
push
dec
mov
xor
jp
xchg
test
dec
popa
imul
repnz
dec
adc
or
sub
in
mov
adc
dec
ja
push
or
bound
mov
movsb
fdivrp
adc
mov
push
dec
sahf
push
adc
lds
inc
dec
into
test
and
addb
in
mov
enter
sti
ficompl
sub
mov
mov
or
mov
insl
xorb
add
icebp
mov
hlt
cmpsl
sar
fldenv
xchg
sub
jo
add
outsb
pop
mov
cmc
enter
lea
cmc
clc
into
jnp
enter
push
pop
sbb
sub
shl
add
jae
repz
popf
je
cmc
mov
jge
inc
pop
mov
aas
out
fiadds
mov
sub
ror
mov
dec
or
scas
cmp
in
pop
xor
adc
xchg
insb
mov
jbe
jecxz
popa
cmpsl
cmp
sbb
xor
stos
aaa
push
mov
xchg
faddp
mov
addr16
adc
inc
adc
mov
jne
push
dec
push
lret
std
adc
dec
mov
daa
int
jge
popa
push
jbe
xlat
and
clc
sar
loop
push
daa
sbb
adc
xchg
mov
icebp
dec
sub
call
xchg
dec
mov
call
cmpsb
jg
mov
and
mov
mov
test
pushf
mov
dec
shrl
xor
sbb
jmp
push
js
push
fs
lret
insl
or
add
sub
ror
sub
xor
cli
bound
xlat
es
movsl
sub
clc
jecxz
jnp
add
stos
inc
jle
push
dec
cmpsl
popl
into
cmp
or
mov
mov
rcll
inc
xor
imul
cmpsb
pop
mov
xchg
xor
clc
cs
cmp
cltd
je
jge
push
push
or
or
lods
int
jns
push
and
push
jb,pn
stos
xor
mov
rcrb
arpl
jg
push
or
mov
mov
sub
mov
jp
cmpl
fbstp
cwtl
rcrb
xor
cmp
pusha
loopne
adc
inc
adc
aaa
and
inc
sarb
aad
push
out
fldt
sub
arpl
pop
xchg
imul
std
fidivrl
mov
lcall
out
lcall
push
cmp
js
cli
xor
fidivl
push
jmp
dec
imul
scas
push
in
push
cmp
je
sub
ja
enter
or
and
push
clc
iret
push
les
mov
mov
test
ss
repnz
or
sbb
lods
addb
popf
push
int3
xor
nop
mov
mov
les
insb
and
loope
push
cmpsl
jo
xlat
cld
mov
sub
cld
push
lret
and
mov
call
and
out
sti
cmpsb
xchg
pushf
mov
jne
jmp
xchg
pop
push
xor
mov
push
aaa
popa
out
pop
sub
cmp
fs
jno
aad
and
mov
scas
add
cmpl
add
jl
movsl
mov
jle
add
lods
out
ret
imul
jmp
dec
inc
xchg
icebp
mov
xor
add
lea
repnz
cmc
xchg
and
test
xor
push
xchg
jo
fstpl
rolb
inc
inc
mov
fidivs
fwait
out
dec
mov
push
push
mov
mov
or
test
xor
mov
out
nop
mov
sahf
out
ss
into
fcompl
aam
imul
pop
shll
in
jge
pop
adc
sbb
hlt
nop
jno
les
sti
lds
push
xchg
xchg
mov
repz
insl
mov
es
xchg
mov
dec
xlat
jno
testb
add
test
mov
sti
or
ljmp
push
dec
push
jle
mov
push
xchg
sub
faddl
lods
sbb
dec
xchg
nop
xchg
jmp
jno
jge
roll
movaps
repz
test
push
ret
mov
dec
ss
adc
div
mov
hlt
push
dec
or
xlat
daa
pop
xchg
subl
sbb
bound
xor
inc
inc
stos
ret
outsl
jno
mov
xor
subb
roll
fistpll
mov
mov
imul
mov
sbb
sub
jae
pop
dec
inc
adc
push
mov
pop
aad
sub
out
inc
and
pop
jecxz
mulb
mov
mov
mov
gs
lods
mov
xor
add
xor
mov
je
sub
cmp
or
mov
sbb
xor
inc
push
ficomps
ret
clc
data16
adc
xor
sbb
addr16
sbb
mov
leave
ja
into
lods
nop
movups
dec
ds
js
imul
xlat
insb
stos
mov
and
cmp
pop
fninit
sbb
in
adc
nop
mov
or
xor
out
mov
imul
jp
adc
icebp
pusha
cmp
pminub
dec
pushl
stos
mov
pop
dec
lods
stos
jle
or
in
cs
inc
push
pop
popa
add
or
pop
push
push
cwtl
mov
imul
dec
jne
ljmp
jl
add
mov
ret
fmul
subl
out
xchg
xchg
cmp
scas
dec
pshufw
sbb
ret
fwait
sti
jne
ret
xor
fcoml
or
jg
dec
pop
pop
in
and
xor
mov
jle
lea
stos
push
test
dec
ds
pop
test
mov
push
inc
xchg
jns
or
add
aas
mov
fnstcw
add
in
cli
pop
mov
daa
nop
pop
or
gs
cli
aam
lcall
cmc
gs
ffree
mov
pop
bound
adcl
sub
jne
and
add
jns
lret
and
addr16
addr16
jbe
js
test
cmp
mov
pop
xor
test
and
adc
mov
xlat
or
stc
arpl
or
xor
pop
cmp
jno
dec
sbb
icebp
jbe
je
sub
fisubs
daa
mov
or
push
insl
mov
outsb
jns,pt
push
icebp
insl
jo
movsl
mov
vpmovdw
mov
inc
andb
es
push
fcmovnbe
cli
ret
pop
int3
cli
test
movsb
mov
sbb
mov
fcomps
mov
xchg
sbb
imul
inc
mov
mulb
cltd
out
in
sub
lret
movsb
popf
jb
test
xor
mov
mov
mov
xchg
ret
ret
sub
negl
xchg
cli
hlt
popf
push
xchg
sbb
rolb
cli
add
pop
cmpsl
shrb
adc
cmpsb
push
and
loopne
movsl
mov
mov
lods
aam
es
adc
cltd
shll
aam
addb
scas
cmpsl
imul
jno
xchg
and
out
cmp
mov
insl
stos
data16
inc
popl
aam
into
jmp
je
jnp
hlt
ja
jl
pushf
xor
xor
imul
push
icebp
inc
imull
sub
int
xor
inc
in
cli
in
push
decb
rorb
mov
jp
push
fwait
dec
iret
add
xchg
movsb
lods
stc
into
or
xor
insb
jge
adc
add
addr16
jo
jp
push
or
mov
rcll
adc
pushw
and
xor
mov
adc
add
sti
jg
mov
xor
fldl
lret
and
ss
jecxz
inc
cs
jp
sub
shl
xor
lcall
cld
and
sub
faddl
push
push
mov
adc
cmp
xchg
xchg
in
mov
roll
inc
and
dec
and
arpl
jle
aad
out
dec
imul
icebp
movb
popf
and
xchg
lods
add
test
repnz
push
mov
jae
mov
test
fwait
push
idivl
add
push
and
pop
mov
sbb
mov
sbb
jnp
inc
push
cmp
dec
sbb
xchg
push
jne
in
pusha
xchg
jg
sub
fcoml
rcll
push
xor
outsb
add
imul
leave
mov
inc
adc
fstl
add
loop,pt
and
dec
push
sub
out
bound
add
lds
aas
fsubrs
lods
rolb
stc
sarb
fistps
nop
inc
arpl
cmc
and
mov
in
sti
adc
fldenv
mov
cltd
xchg
fbld
addr16
cmp
ja
adc
mov
add
or
jbe
sub
or
sti
lea
iret
sub
imul
decl
fldt
jl
cltd
push
fucomip
daa
add
les
daa
pop
push
insl
push
mov
stos
xchg
pop
mov
xchg
xlat
popa
loope
cwtl
sti
and
mov
push
adc
movsl
lock
shrl
int3
mov
xor
dec
mov
pop
fwait
cmp
test
sbbl
pop
jge
dec
pop
outsl
dec
or
mov
mov
lods
fnstenv
inc
adc
call
sub
pop
and
push
mov
sub
je
mov
outsb
sti
aas
xchg
cmp
jb
mov
push
jnp
mov
bound
loopne
aas
cmp
mov
ljmp
pop
mov
xor
mov
leave
aas
cmp
pop
clc
ljmp
popa
lea
dec
mov
mov
icebp
lds
dec
sbb
outsb
inc
outsb
rcrl
cmpsb
filds
ss
inc
sub
push
mov
outsl
or
xor
xchg
test
mov
inc
xorl
ret
push
andl
adc
mov
cmp
insl
pop
hlt
dec
mov
xchg
push
or
addb
ficompl
sub
cmp
xchg
movsb
jl
insl
adc
xor
test
rcl
and
fcmovnb
jge
iret
loope
push
xor
outsl
sub
incb
popf
jne
enter
bnd
lcall
dec
mov
xchg
testb
push
and
es
dec
dec
cmpsb
xor
dec
or
mov
and
push
pop
and
add
or
lock
inc
or
shll
movsl
sbbb
iret
push
cmp
shll
or
inc
mov
mov
mov
sbb
enter
dec
arpl
sarl
inc
add
cmp
xchg
addl
test
dec
daa
stos
cmp
dec
and
push
je,pn
lock
out
cmp
push
scas
ret
mov
jmp
jb
cmc
xlat
ds
insb
xchg
addr16
jmp
idivl
sbb
xlat
pop
mov
shrl
and
insb
popf
push
add
push
and
pusha
cmpsl
scas
out
or
repz
mov
mov
xlat
mov
int
ffreep
mov
fidivl
nop
add
in
mov
mov
fs
negb
pop
inc
in
or
mov
sub
mov
adcb
inc
adc
test
mov
jno
pop
jb
loop
std
push
adc
lods
or
rorl
loop
xchg
aad
push
loopne
movsl
cs
mov
pop
sub
pop
cmpsl
sub
call
je
jge
mov
jmp
out
inc
out
pop
lea
or
pop
cwtl
cmp
in
fidivs
arpl
xchg
xchg
sub
push
or
das
out
dec
sub
and
xor
xchg
add
wrmsr
adc
mov
pop
and
mov
cmp
fimuls
cmc
aam
add
pop
jne
jle
cmp
cld
pop
imul
jp
mov
pop
xchg
push
pusha
sbbl
fistpl
adc
jbe
loopne
in
inc
in
subl
pop
rclb
rcrl
out
push
add
ja
jl
inc
rclb
pop
insl
xchg
inc
mov
inc
dec
punpckhbw
imul
push
fadd
inc
xor
insb
push
gs
clc
mov
or
sbb
mov
ret
aas
mov
mov
popa
adc
mov
push
dec
adc
add
or
pop
sti
pop
add
sti
leave
dec
xor
in
ss
nop
mov
add
xlat
jge
sbb
es
clc
loopne
mov
mov
out
sbbb
popa
stc
leave
mov
stos
out
ud2
push
pop
adc
cmp
pusha
jo
mov
lret
xchg
popf
into
insb
mov
and
cmpsb
adc
cmpsl
leave
inc
out
adc
inc
xchg
mov
mov
pusha
jp
sub
inc
cmp
dec
mov
jae
mov
pop
xchg
pop
cs
stos
jmp
xchg
movsb
mov
paddb
int3
pop
lcall
out
cli
sub
adc
sbb
addr16
popf
in
lahf
js
adc
lret
jmp
iret
xchg
ljmp
lods
mov
lcall
push
jmp
or
loope
mov
inc
lret
mov
loop
mov
and
stos
sbb
jne
adc
out
jbe
fwait
pop
add
addr16
jb
nop
loopne
mov
xchg
into
in
mov
out
dec
sbb
jnp
mov
fwait
icebp
xchg
imul
push
hlt
insb
adc
shll
imul
movsl
rcrl
jne
das
mull
cmp
lcall
shl
iret
in
xor
mov
adc
xchg
fimuls
jb
or
push
lcall
outsl
and
xchg
cwtl
adc
adc
xchg
add
cmpsb
adc
xlat
xor
inc
arpl
shl
std
lea
jle
push
inc
sbb
pusha
out
pop
in
out
inc
cmpsl
outsb
pop
pop
mov
jecxz
add
push
scas
mov
scas
inc
sbb
stc
mov
xor
push
insl
pop
fldl
push
xchg
sti
cmp
ret
add
js
pusha
xor
leave
adc
push
fists
xchg
loopne
imul
dec
xchg
ljmp
sub
iret
add
xor
lahf
push
jp
stos
dec
int
dec
fistpl
jne
into
jle
hlt
lret
inc
cmc
pushf
push
mov
mov
and
mov
adc
and
jg
or
fcoms
push
int
les
popf
out
cmp
mov
or
xlat
insl
hlt
scas
mov
aaa
fldl2e
mov
mov
daa
xchg
bound
adc
aas
mov
add
cmp
pop
jmp
pop
pop
not
repnz
mov
inc
push
aas
in
int3
popa
out
cli
and
pop
out
lea
jae
sti
imul
ds
lods
mov
daa
clc
sub
push
inc
cmpsb
aam
mov
dec
rclb
scas
cmp
shl
jae
int
push
je
sub
insl
add
inc
mov
mov
xchg
or
mov
push
nop
dec
mov
imul
mov
adc
dec
mov
stos
pusha
add
jnp
aaa
pop
sti
jno
shrb
push
push
and
cwtl
xchg
fdivrl
movsb
xchg
in
mov
sub
xchg
pusha
push
andl
push
lock
mov
jmp
cmpsb
adc
lea
pop
std
in
cmp
cmpl
pop
jns
inc
push
shrl
mov
mov
mov
insl
mov
cld
inc
and
jle
daa
xchg
mov
shl
testl
mov
push
test
dec
or
jg
push
bound
mov
lods
stos
shll
mov
fs
pop
fnstenv
nop
sub
fs
adc
lods
jle
mov
push
xlat
xor
imul
adc
xor
into
in
add
jb
hlt
xchg
pop
loopne
lds
hlt
xchg
dec
stos
xchg
add
loop
rcrl
mov
mov
fnstcw
daa
andl
insl
repz
pop
lods
rcrb
in
cmp
cwtl
pop
sahf
mov
push
jecxz
cli
jecxz
test
jne
mov
sbbl
lds
jmp
dec
xchg
inc
adc
and
dec
shlb
mov
in
xor
in
push
movsl
sbb
inc
pop
and
rorl
sarl
lahf
inc
stc
push
pop
sub
lods
std
mov
hlt
hlt
adc
jmp
sub
sbb
call
imul
or
cmpl
sbb
popw
mov
addr16
adc
xor
shrl
repz
jmp
and
int3
pop
jbe
test
data16
aad
add
xchg
mov
in
cli
xchg
sbb
xor
scas
xchg
lods
jge
subb
loop
adc
jnp
fwait
sub
lcall
push
push
sahf
subb
cltd
inc
out
sbb
cwtl
sub
inc
subb
mov
jo
or
add
push
mov
in
ret
pop
ds
lds
inc
cmp
pop
jg
fwait
gs
mov
cltd
popf
sub
insl
fbstp
sub
clc
dec
push
mov
cli
mov
pop
popf
jle
push
cmc
dec
mov
pop
loop
pop
clc
jmp
les
and
xorb
test
push
ja
fcomp
sbb
pop
mov
sbb
stos
shrb
insl
xchg
ret
pop
loope
mov
ljmp
sbb
inc
mov
sub
movsb
roll
icebp
ret
mov
pushf
sbb
int3
pop
jae
andl
cmp
ds
xchg
aaa
jbe
leave
in
push
mov
daa
push
xor
jo
inc
and
cmp
inc
pop
cmp
mov
push
lcall
iret
loop
mov
ficomps
testb
cmpsb
lds
sbb
ss
mov
gs
pop
mov
rcrb
push
xor
or
cld
icebp
leave
movl
sub
daa
add
movsl
mov
in
iret
push
scas
lods
cwtl
jl
mov
add
test
mov
in
ja
stos
addr16
cmpsb
int
xorb
loope
mov
xor
stos
dec
jne
push
mov
sbb
into
or
mov
jge
inc
and
inc
fcomip
inc
sahf
cs
cmp
mov
sahf
pop
pop
dec
mov
sbb
fisubrl
js
xchg
jnp
xor
in
mov
jbe
xchg
xchg
in
mov
adc
pusha
call
mov
add
dec
xchg
cli
adc
fistl
aas
mov
push
in
call
sahf
js
dec
xor
inc
out
in
mov
and
mov
in
pop
jmp
and
test
mov
adc
xor
cmc
sub
adc
sub
and
fidivl
or
pushf
in
jl
ret
addl
in
mov
push
sbbb
dec
addr16
mov
clc
fs
xor
or
sti
add
cmp
aas
adc
lods
dec
scas
testl
add
push
fidivrs
nop
and
stos
dec
scas
aam
std
add
xlat
mov
outsb
mov
sbb
sub
idivb
insl
jle
add
aas
ljmp
cmp
jae
add
cmp
icebp
mov
shrb
fidivrs
and
lods
stos
das
sub
loope
out
cmp
and
fstps
fiadds
sbbb
fwait
xchg
adc
andl
push
mov
pop
cmp
pop
loope
shrl
xor
cmp
xchg
lock
adc
push
inc
lcall
add
das
xchg
addb
inc
in
imul
mov
lcall
je
imul
out
mov
or
insb
hlt
push
popa
aas
addr16
and
nop
in
cli
mov
sti
cmpsl
js
out
adc
out
sbb
add
jg
mov
icebp
test
or
dec
sbb
decb
sub
out
and
enter
dec
fiadds
popf
push
mov
in
sbb
stos
cmp
test
mov
addr16
jae
out
lods
call
pop
out
in
xchg
fcomi
int
sub
nop
je
pop
out
dec
pop
pop
pop
ja
in
mov
pop
adc
push
push
es
dec
cmp
mov
imul
loop
in
out
scas
mov
jle
push
cmc
js
test
shrb
mul
imul
in
sub
push
cltd
xchg
ja
insl
les
add
lcall
and
aaa
and
xor
cltd
pop
int
inc
aaa
mov
aaa
jo
fstpl
pop
test
out
dec
or
inc
or
in
sub
jo
leave
repnz
mov
and
hlt
push
movsl
cmp
and
adc
cli
sub
cmp
add
out
mov
mov
adc
jae
push
push
push
and
adc
xchg
cmpsl
inc
adc
mov
fnstenv
fwait
add
movsb
cld
mov
mov
jle
push
dec
cmpsl
inc
push
loope
rclb
adcb
jae
lods
scas
push
jne
mov
push
inc
mov
gs
xor
pop
mov
lret
sbb
sub
xchg
sarl
or
arpl
imul
jle
mov
jnp
jmp
lea
call
rcrl
pop
xor
jne
or
jae
add
dec
test
jno
int
sbb
dec
jl
fcoml
mov
movsl
je
xchg
mov
int3
push
mov
jecxz
leave
pop
mov
add
pop
ja
and
cmp
inc
pusha
mov
jg
sbb
std
hlt
xchg
jge
gs
pop
mov
inc
scas
and
jge
pop
and
mov
cld
jnp
pusha
cmpsb
sbbb
repz
repz
les
clc
stc
mov
jl
addr16
xlat
cltd
jbe
cmpb
movsb
add
cmp
pop
sub
cmp
into
or
xor
push
push
sbb
jl
dec
jb
shll
subl
jmp
fdivrl
add
mov
loope
jl
arpl
cmp
repz
fdivs
pop
jb
sub
inc
mov
push
dec
stc
fcmovne
arpl
lahf
dec
fnsave
xor
sbb
in
jae
cmp
mov
push
repnz
iret
call
inc
rcrl
jecxz
sbb
push
fimuls
aas
jns
pop
ja
ret
inc
clc
popa
jnp
or
jbe
pop
lods
jmp
push
jmp
sbb
xorl
inc
mov
mov
sub
inc
xchg
inc
jae
sub
xor
pushf
jo
aad
cltd
push
dec
and
lods
xor
pop
mov
push
lock
xchg
cmp
xchg
aaa
fs
scas
jo
cld
pcmpeqd
and
dec
je
fs
in
lahf
pop
shll
shrl
and
xchg
xchg
cmp
pop
pop
call
xchg
aam
lret
loop
repz
sbb
xor
mov
jnp
gs
daa
add
push
push
fdivr
adc
sbb
adc
mov
and
mov
mov
push
mov
cmp
jbe
mov
into
sbb
sbb
fistl
mov
lock
cmpsb
push
dec
jge
loope
xchg
sub
inc
fisttpll
pop
mov
xchg
call
int
push
mov
push
mov
jne
and
fs
mov
hlt
cmp
pop
call
pop
or
jp
jae
scas
roll
mov
clc
and
hlt
mov
lods
sub
out
mov
inc
mov
mov
out
outsl
jl
or
in
push
out
pop
int
dec
fcmove
pop
mov
stc
or
ljmp
mov
cwtl
xchg
cmp
aam
das
shlb
push
fisubrs
inc
pop
jp
aaa
sub
fwait
imul
lock
arpl
cltd
inc
repz
push
lret
clc
jle
and
jns
push
cmp
add
sahf
mov
icebp
lock
rol
insl
or
sbb
cmp
iret
testb
ret
mov
cwtl
in
mov
xor
in
fwait
daa
mov
adc
inc
push
add
pop
les
insl
movsl
loop
dec
mov
daa
sub
push
nop
std
mov
sub
cmp
in
repz
push
dec
add
lahf
xchg
shrl
in
lret
mov
cli
pop
shll
out
fmull
pop
inc
leave
les
mov
dec
rcrb
mov
call
sbb
push
xchg
fstpl
mov
shlb
jne
mov
mov
aaa
ffreep
add
lock
pushf
das
mov
nop
xor
mov
adc
je
lcall
sub
push
rcll
cmp
insl
imul
pop
leave
add
loop
ret
out
pop
inc
sub
aam
dec
xchg
mov
jae
outsb
into
mull
fidivrl
jns
pop
iret
sbb
movsl
sti
sub
lret
int
mov
repz
push
popf
pop
jg
shlb
shrb
addl
out
pop
adc
pop
jp
scas
jne
mov
push
xchg
in
nop
push
movsb
in
fucomp
insl
jns
xor
fnstenv
lret
sbb
push
data16
sahf
fadds
outsb
stos
shr
push
sahf
loopne
and
icebp
sahf
mov
sbbl
cmpsl
xchg
cmp
sbbl
mov
dec
pop
pop
xchg
add
pop
mov
fwait
and
stos
inc
sahf
bts
lret
xor
mov
imul
inc
cmp
sub
stc
popa
or
xchg
popa
in
pop
xchg
fists
mov
cwtl
push
cmp
mov
sbb
and
push
andl
stos
push
out
fwait
dec
out
std
cmc
mov
loope
adc
sbb
aaa
mov
ljmp
sub
insl
add
jae
daa
lods
ds
pop
dec
out
xor
loope
xchg
lret
mov
fiaddl
mull
mov
pop
fisttpl
cmpsb
mov
sbb
addr16
popf
lods
mov
les
xor
sbb
es
push
lds
or
sub
mov
movsb
dec
mov
xor
outsb
cwtl
add
dec
repnz
pop
cmc
add
call
je
rcrl
lret
pop
and
arpl
dec
lea
shl
cmp
gs
push
dec
mov
mov
cmp
pop
mov
dec
or
test
scas
jbe
aaa
fmull
inc
jb
pop
xor
pop
rcr
lods
sbb
iret
repz
dec
test
pop
xchg
xorl
sbb
xor
dec
movsb
leave
pop
and
lret
and
and
xor
push
push
ds
push
or
mov
andb
add
daa
cmp
mov
xchg
adc
int
fiadds
rcll
jle
js
ja
repnz
stc
mov
pop
sbb
sbb
lods
or
out
mov
iret
xchg
add
loopne
cld
insl
mov
fwait
cmc
inc
test
add
adc
int
xor
pop
lea
rolb
flds
into
arpl
cmp
rcll
cmp
fidivrs
jp
insb
ds
cmc
mov
mov
inc
inc
push
movsl
pop
xor
xorb
xor
add
push
dec
sub
xchg
add
and
xor
mov
loope
std
cmp
pop
dec
bound
pop
sbb
mov
mov
or
int3
cmp
in
rol
add
dec
out
xor
adc
shll
movsl
lea
push
add
pop
orb
shlb
std
push
pushf
loop
mov
stos
and
divb
outsl
and
andb
test
cmpsl
mov
rorl
xor
lds
xchg
imul
and
testl
nop
outsl
mov
cmp
jo
and
sti
jb
mov
sbb
arpl
dec
xchg
fadds
sahf
inc
pop
je
push
sub
cld
rcl
cmp
hlt
add
fisubl
insl
xlat
mov
iret
imul
add
or
bnd
cwtl
pop
call
jb
rcr
sbb
and
push
inc
fdivs
testl
sub
mov
insb
mov
cmpsb
sbb
xchg
push
outsl
out
inc
xchg
push
and
inc
lock
jge
rcr
out
mov
cmpsl
fwait
jne
jne
cwtl
sbb
repnz
mov
dec
out
push
inc
xchg
leave
ljmp
fdivp
jne
cwtl
ljmp
insb
mov
sub
inc
push
ljmp
xchg
fisttpll
ds
push
push
ljmp
mov
mov
in
test
fwait
jg
push
jo
mov
test
and
add
pop
out
jecxz
push
pop
add
lahf
jle
and
mov
scas
xchg
xchg
dec
jecxz,pt
sarl
in
fnsave
mov
and
or
cld
lret
push
or
popf
inc
lahf
lods
int
xchg
cmc
mov
ja
push
sub
in
fwait
mov
cmp
push
mov
aas
fsub
data16
sbb
repz
arpl
sbb
lret
push
jne
ret
jne,pn
lds
ja
sbb
popf
mov
sub
mov
test
aad
xchg
xor
sub
fbld
test
clc
loopne
stos
cld
pop
xchg
mov
push
test
dec
and
ret
fnsave
or
xor
lcall
jg
push
fldenv
push
jo
pop
mov
dec
xlat
add
enter
arpl
fucomip
out
pop
xchg
loop
jae
mov
pop
dec
mov
xchg
mov
and
cltd
arpl
mov
mov
mov
or
or
cmpsl
push
cmc
repz
sbb
mov
cmp
jl
inc
out
mov
repz
lds
push
inc
sbb
cmp
jb
or
call
or
pop
jo
mov
sub
xchg
pop
xlat
adc
lcall
mov
in
push
cmpsb
pop
jmp
jnp
ss
add
testl
and
pop
stos
les
adc
pop
out
add
or
and
into
cld
inc
cmp
fstl
mov
addr16
jle
adc
scas
pop
lods
and
in
pop
fs
jg
es
mov
stos
imul
fdivrp
adc
outsb
std
imul
ret
xor
inc
xchg
push
mov
test
roll
arpl
je
pop
arpl
push
jo
in
lea
decl
mov
and
push
cltd
movsl
or
popf
jns
push
movsb
std
pusha
inc
pop
jnp
das
psubusw
dec
jg
leave
cli
lea
cmp
pop
jge,pn
xor
sub
xlat
rcll
sbb
xor
inc
mov
fsubrs
sbb
repnz
test
xchg
xor
lcall
aam
lret
adc
jge
lret
add
int
inc
xchg
jge
arpl
repnz
pop
mov
shrb
out
dec
push
mov
add
adc
inc
dec
adc
call
inc
mov
fwait
inc
lods
jg
out
jbe
and
repz
mov
or
fdivl
ds
push
sahf
mov
test
mov
bound
mov
sub
lret
dec
jecxz
mov
sbb
lods
xchg
icebp
test
int
fs
sbb
push
mov
mov
pop
mov
idivl
sti
icebp
cltd
rcrl
jae
loope
adc
addr16
jge
enter
mov
add
pop
push
inc
scas
xchg
sub
fsubrp
sbb
pop
and
out
adc
dec
pop
lahf
jbe
cmp
popf
out
jge
movsl
pop
or
pop
mov
cmpsl
push
cmp
inc
stos
std
sub
imul
shl
rolb
nop
icebp
mov
divb
rorb
xlat
push
mov
mov
cmp
stos
enter
push
into
xchg
popf
arpl
mov
sbb
shll
jp
imul
jle
je
xor
or
cmp
mov
aaa
popf
xor
mov
mov
add
pop
cmp
mov
in
jg
dec
fildll
sbb
mov
push
cli
jbe
xchg
xor
pop
mov
push
sub
sub
stos
test
addr16
cwtl
je
mov
inc
mov
imul
lcall
sub
adc
or
test
sbb
popf
pop
jae
test
inc
pop
in
mov
test
adc
sub
add
mov
cmc
popa
mov
cli
cmc
jno
jl
dec
mov
add
inc
mov
adc
enter
mov
add
cli
pop
lcall
sub
cmp
shlb
fcoml
pop
mov
adc
dec
cmp
out
and
loop
mov
push
cmpl
adc
jne
jmp
push
dec
mov
push
fwait
stos
mov
xor
adc
xor
push
in
xchg
stos
scas
fdivrp
or
in
fs
adcb
cmpsl
mov
movsb
cld
daa
rorl
pushf
inc
jp
adc
ds
pusha
jno
sbb
out
popa
and
mov
dec
xchg
rcrb
adc
pop
lahf
add
jmp
inc
jge
outsb
shll
lret
shll
inc
or
push
in
jp
xor
xchg
or
ss
std
mov
cld
stos
xor
add
clc
arpl
int3
push
lods
add
iret
idiv
stos
stos
jp
lcall
lcall
xchg
jp
cmp
fistpl
add
cmp
push
jmp
pop
sbb
lods
icebp
mov
loop
cmpsb
out
pcmpgtw
sbb
scas
ret
popf
aam
dec
sbb
fsubs
es
cmpsl
jp
mov
fisttpll
clc
cmc
ret
test
adc
mov
int
orps
xor
push
imul
xor
js
dec
stc
inc
mov
mov
movsb
or
cli
sbb
loop
adc
cwtl
into
clc
leave
mov
mov
gs
xor
push
gs
mov
std
sbb
add
mov
inc
push
mov
xorl
mov
decl
mov
mov
dec
cltd
fbstp
mov
sbb
jmp
jb
jne
jp
or
adc
int
jmp
lds
into
mov
mov
lds
mov
imul
or
push
mov
push
jl
test
imul
cmpl
lods
pop
sbb
adc
adc
jo
stos
push
xor
xchg
pop
mov
and
add
jns
add
and
and
mov
imul
sti
js
sbb
and
add
fdivl
lock
vandnps
pop
fdivrs
push
or
cld
fisubrs
mov
adc
sbb
push
sbbb
es
or
or
sbb
pop
aad
fcoml
loopne
dec
call
jp
mov
jge
pop
lea
or
daa
orb
ss
shlb
adcb
and
lret
pusha
and
xor
mov
mov
pop
outsl
pop
and
inc
ja
std
loopne
aad
js
or
add
pop
push
pop
jo
mov
jns
sub
lods
adc
fldenv
mov
out
sahf
push
or
outsb
mov
js
clc
and
mov
jmp
push
movsl
push
xchg
jle
in
mov
pop
and
push
or
fsubs
cmpsl
or
cvttps2pi
je
out
pop
or
and
movsb
jge
lcall
cli
mov
inc
push
push
ror
cli
push
pop
shlb
je
jne
ret
jle
mov
popf
adc
or
xor
xchg
xchg
dec
insl
stos
nop
loopne
lahf
xor
jns
ja
adc
daa
fbld
decb
jbe
or
xlat
movl
std
repz
sbb
sbb
les
pop
xchg
repnz
enter
dec
pushf
inc
mov
jp
or
sub
shrd
mov
sbb
sub
mulb
movsl
ss
fisubrl
add
dec
popa
sub
je
xchg
jnp
lahf
cmp
out
cs
jno
xor
rorl
dec
or
push
out
mov
fs
mov
or
mov
outsb
sbb
lock
jae
mov
mov
add
and
sub
xchg
sbb
int
out
jbe
jle
testl
bound
xchg
inc
ja
fdivl
lods
imul
jae
add
mov
cmp
icebp
dec
flds
mov
ljmp
or
repz
adc
int3
je
in
js
mov
sbb
ljmp
std
push
ljmp
ret
icebp
aam
jmp
orb
adc
pusha
jb
dec
cmp
movsb
push
mov
mov
or
jmp
mov
mov
xchg
sbb
scas
lea
mov
adc
out
or
mov
jno
cs
or
test
imul
in
inc
pop
jmp
inc
xor
or
rclb
jnp
in
mov
imull
mov
cld
mov
cmp
lret
adc
jb
lret
aam
sub
jle
lds
pop
dec
adc
fiadds
repz
and
call
pop
popf
sahf
jb
es
add
insb
icebp
in
ss
loope
inc
loop
orl
xchg
and
movsb
dec
push
aad
add
mov
pop
fidivs
jno
pushf
addr16
je
adc
and
mov
leave
mov
dec
es
xor
cwtl
lcall
out
add
insb
hlt
dec
fbstp
inc
smsw
test
daa
stos
jno
xor
pop
jge
mov
scas
add
lea
sbb
rcll
popa
arpl
cltd
mov
outsb
rclb
outsl
push
mov
xor
mov
lods
jmp
xchg
js
fwait
pushf
jmp
loope
jle
mov
jnp
pushf
sbbl
repz
or
jle
in
adc
jnp
fstl
pop
sbb
cld
or
jbe
sub
push
lds
or
xchg
jb
lahf
repz
jno
mov
push
pop
dec
mov
dec
lea
lods
test
sti
out
popa
mov
inc
popa
mov
pop
pusha
nop
jno
fstpt
push
sbb
in
mov
cld
cltd
and
je
push
int3
sbb
das
dec
out
pop
xor
mov
xchg
nop
movsl
mov
mov
sbb
sbb
lock
fwait
jbe
inc
or
mov
outsl
mov
inc
mov
mov
jg
stc
cli
inc
push
mov
das
cmpsb
jae
aad
jo
sub
data16
add
pop
adc
mov
mov
xor
pop
pop
leave
xchg
data16
lea
mov
mov
jge
add
outsb
out
out
pop
fcmovu
push
dec
movsb
rcll
cli
testl
aad
movsl
ds
mov
xor
dec
xchg
addr16
gs
inc
sbb
lcall
xor
sub
std
cmp
xchg
xchg
sti
or
adc
cmp
in
inc
popf
push
les
int3
fdiv
cmpsl
cmp
js
adc
cmp
fsubrs
shl
dec
pop
das
xchg
jp
and
add
push
and
xor
popa
mov
xchg
shl
jp
or
leave
mov
out
and
sub
ret
or
lods
cmc
jmp
pusha
pop
inc
pop
rcr
sti
mov
push
add
jnp
orl
mulb
rcr
mov
or
jae
das
mov
adc
jle
repz
ljmp
xor
repnz
mov
shlb
cmp
iret
sbb
int
movsl
cmp
insl
out
lcall
movsb
or
imul
mov
and
sbb
test
xlat
imul
js
mov
jb
dec
jmp
cwtl
nop
inc
jle
sahf
scas
lcall
out
sub
dec
xchg
pop
mov
sbb
sub
add
push
arpl
cltd
dec
push
and
xchg
sbb
jp
sub
mov
push
imul
pop
xchg
test
pop
subb
fdivrl
jbe
mov
mov
mov
aaa
jl
das
mov
arpl
mov
jo
push
icebp
fwait
pusha
mov
push
ja
adc
mov
jns
lea
popa
gs
adc
push
std
mov
pop
or
pop
xlat
mov
imul
push
push
xchg
mov
lock
mov
insb
add
movsl
aad
es
enter
lcall
push
es
pop
filds
mov
sub
es
shll
inc
lahf
mov
dec
cmp
or
movsl
arpl
in
test
push
mov
scas
jbe
loop
dec
push
out
scas
adc
adc
dec
mov
aam
sub
imul
push
push
loope
jo
aad
mov
jp
dec
jnp
xor
add
jg
inc
add
mov
gs
addb
add
and
jo
addr16
js
js
xchg
ret
outsl
popa
xchg
add
jge
sti
push
es
aam
mov
cmp
je
mov
sbb
or
subl
sub
lcall
cmp
loop
repz
sarb
call
pop
loop
xchg
dec
cltd
outsl
cmc
xchg
enter
lret
jae
adc
cwtl
pushf
mov
jmp
mov
dec
pop
or
pushf
push
ja
cmp
pop
cmpsl
rcrl
or
sbb
dec
push
int
xor
scas
bound
ljmp
dec
and
lods
out
push
and
push
lcall
sbb
popf
stos
dec
push
enter
mov
ret
lods
out
adc
or
fldt
sarb
cltd
cmp
push
jb
or
and
lcall
and
lahf
sti
xchg
out
cmp
ret
call
xor
in
clc
push
pop
sub
in
inc
ret
cmp
clc
std
cmp
stos
ss
shll
adc
mov
xchg
xchg
add
daa
mov
pop
adc
mov
nop
pop
jle
ds
es
pop
push
xor
mov
imul
mov
jnp
fisubs
popf
inc
mov
push
fwait
sbb
insb
push
mov
push
das
mov
add
stc
hlt
or
inc
repz
stc
movsl
ds
xchg
mov
adc
xor
stos
xorb
jno
fs
loopne
fdivs
push
jo
inc
and
add
cmpsb
popa
das
lods
loopne
mov
pop
imul
js
cmc
jnp
pop
mov
scas
lcall
dec
cltd
xor
jp
hlt
jge
sbb
dec
xor
movsl
call
shll
xor
aam
in
push
out
xlat
std
mov
and
iret
das
lds
into
mov
xchg
ja,pn
inc
cmc
cmpsl
fstps
xor
dec
jne
dec
insl
out
push
mov
jge
cmp
lret
lret
jp
ss
movsl
fdivs
lret
mov
je
mov
faddp
movsb
imul
lock
mov
dec
jbe
mov
dec
push
lret
ret
jb
inc
ret
lods
fwait
cli
pop
sahf
jp
mov
xor
ret
int
xchg
or
jns
ret
rorb
sarb
pusha
test
pop
lea
movsl
xchg
sub
sub
or
inc
into
inc
adc
push
jns
dec
popf
fisttpl
orl
in
and
shr
pop
mov
popf
mov
fnstenv
mov
rorl
hlt
or
rcr
mov
pusha
mov
mov
popf
sbb
cld
sub
dec
dec
jnp
ja
inc
jg
xchg
xchg
sbb
cmpsb
in
mov
dec
es
xchg
push
sbb
lret
leave
adc
add
push
push
jbe
sbb
into
rcrb
std
and
jl
dec
push
ret
mov
in
es
and
stos
and
xorb
cmpsl
frstor
sti
mov
setp
pop
mov
sbb
stos
sbb
pusha
rcr
xor
adc
add
sub
clc
jle
adc
sub
les
rcl
mov
in
outsb
dec
mov
lods
mov
inc
ret
out
ja
into
js
loopne
icebp
aaa
xchg
nop
cli
mov
outsl
pop
out
inc
outsb
push
mov
jo
sbb
scas
dec
fmulp
xor
das
enter
push
out
mov
xchg
stos
pop
mov
and
mov
ret
jmp
xchg
xor
push
jo
iret
adc
push
inc
jne
daa
je
popa
push
enter
leave
xchg
push
stos
cmpl
mov
sbb
sbb
das
mov
push
xchg
sahf
pop
xchg
xor
mov
in
daa
in
dec
fsubr
pop
mov
add
jo
pop
les
xchg
fbstp
mov
loop
leave
adc
or
mov
fisttpll
xor
sub
nop
pop
add
mov
sti
fwait
inc
push
mov
adc
jmp
jge
mov
mov
jbe
std
sub
xchg
inc
jno
jo
mov
mov
jae
fnstenv
cmp
pop
pop
addr16
subl
mov
scas
aaa
mov
inc
mov
lret
movsb
add
mov
adc
cwtl
fdivr
loopne
aas
mov
add
cltd
call
decb
mov
xor
mov
push
xor
mov
push
pop
data16
mov
ja
push
pop
mov
daa
push
out
jg
faddl
jmp
jae,pn
add
sbbl
jae
lahf
pushl
in
inc
dec
mov
nop
adc
aaa
sub
mov
mov
shr
push
in
sahf
sahf
lods
or
pop
int
push
mov
clc
add
ss
mov
jns
mov
cmp
sbb
xlat
or
or
mov
ljmp
push
adcl
test
jg
and
jno
test
mov
leave
lods
mov
sbb
add
enter
sbb
and
jnp
cmp
inc
jl
xchg
mov
inc
pop
lcall
adc
leave
in
lods
movsb
lret
inc
cmp
push
jl
cmpl
movsb
ror
icebp
pop
push
mov
sbb
shrw
pop
out
enter
add
add
xor
jb
mov
ja
xor
shr
inc
mov
aad
push
lds
sahf
lock
adc
insb
mov
pushf
jecxz
into
jle
dec
adc
cmp
mov
mov
jne
fwait
mov
mov
push
lcall
xor
mov
push
sar
fwait
sub
pop
insl
cmp
int3
adc
rcr
inc
dec
inc
jle
xchg
aaa
pop
push
out
das
gs
xlat
rep
mov
mov
cmp
leave
lret
fdivs
push
inc
je
pop
add
dec
sub
mov
add
adcb
subl
mov
hlt
cmpsl
stos
cmp
cmp
mov
push
mov
and
pop
in
inc
pusha
hlt
mov
add
pop
repnz
repnz
mov
adc
sbbl
test
or
mov
stc
shr
out
xor
arpl
inc
mov
cmp
mov
inc
addr16
xor
aam
stos
add
inc
out
sub
icebp
inc
cmp
sbb
jnp
je
in
addr16
mov
mov
cmp
mov
mov
sahf
xor
and
mov
js
jecxz
jle
insb
inc
clc
mov
and
mov
add
aad
xchg
loop
xor
fsubrs
pop
out
stos
pop
xorl
inc
push
xchg
add
mov
das
pop
adc
mov
push
pop
mov
gs
popf
lahf
push
jno
or
andb
call
je
push
fucomi
xlat
xchg
push
adc
sub
cmp
andb
push
sbb
cli
xchg
icebp
dec
pushf
ficomps
shlb
sti
xlat
and
inc
push
lds
lea
pop
mov
and
add
test
std
and
mov
ljmp
push
repz
xchg
enter
pop
ret
sub
add
mov
rcrb
iret
pop
push
inc
outsb
jp
mov
push
mov
xchg
cltd
daa
mov
pop
ja
mov
mov
dec
scas
outsl
push
xor
inc
xchg
lcall
nop
into
jp
subl
cmp
inc
in
or
dec
cmp
leave
xchg
sub
xchg
jbe
push
decb
stos
cs
push
pslld
stos
dec
adc
mov
insb
stc
mov
rclb
add
ss
lret
loope
add
cwtl
adc
jg
xor
das
sub
dec
adc
jns
adc
fdiv
aaa
rcrl
pop
sbb
movsb
jb
movsb
mov
hlt
rcr
mov
out
test
push
aaa
loope
inc
jmp
popf
sbb
pop
adc
imul
push
shr
stc
fisubrl
or
enter
mov
xor
sbb
and
or
cmp
xchg
xor
repz
push
and
mov
xchg
leave
jno
sbb
push
inc
mov
outsl
jno
testl
mov
roll
sbb
dec
add
xchg
loopne
inc
test
sub
jnp
inc
mov
sahf
or
stos
loope
and
xchg
cmp
in
int3
mov
add
mov
push
in
or
xor
addr16
mov
loope
daa
inc
bound
mov
inc
popf
pushl
inc
movsl
add
bnd
into
enterw
shrb
imul
repz
xor
mov
dec
divl
ret
dec
fchs
out
pop
aaa
or
cmp
out
dec
push
in
std
ss
stos
pop
dec
jne
cwtl
add
nop
jmp
xor
mov
shll
cmpsl
lods
sahf
out
bound
inc
sbb
sbb
pop
insl
imul
add
fistpll
hlt
mov
int3
movsl
out
mulb
es
mov
and
cmp
mov
dec
ffree
jl
mov
sbb
ljmp
test
pop
jg
nop
and
shlb
xor
fldenv
mov
xorb
dec
imul
sbb
fwait
test
subl
into
mov
add
out
clc
jecxz
mov
fisttps
cmp
pop
pop
repnz
and
hlt
sahf
or
add
xor
out
push
ja
mov
jb
dec
imul
jo
lds
pop
push
cli
mov
ljmp
int3
out
xchg
cld
fcoml
push
xchg
adc
ret
shl
push
nop
ret
adc
pop
out
jnp
inc
arpl
test
mov
pop
inc
arpl
fisubs
adc
add
xlat
in
push
aas
fsubr
mov
cmp
push
and
mov
scas
or
test
and
jnp
push
push
sbb
push
icebp
mov
add
or
sub
aaa
and
cmp
mov
mov
xchg
push
mov
sarb
xchg
add
push
sbb
push
and
push
add
dec
lds
repnz
lods
add
inc
repnz
test
jne
jbe
mov
in
jnp
fisubrs
jae
in
jle
pop
pop
jmp
mov
xlat
cli
push
dec
leave
cmp
cmpsb
sahf
lods
jno
lods
mov
add
shll
out
xlat
add
mov
imul
test
inc
and
sub
clc
ret
adc
les
enter
ljmp
sbb
inc
stos
idivb
jnp
fstpl
leave
fbstp
push
loopne
cld
jecxz
or
movsl
fwait
hlt
xorb
jns
fs
movl
mov
adc
xchg
or
mov
stos
xor
fisttpl
adc
lcall
pop
int3
int
loope
adc
adcb
jg
adc
cli
mov
or
ljmp
jp
xchg
leave
cmpsb
fucom
xchg
add
add
xor
int3
fwait
pop
mov
insb
pop
fisubs
mov
and
jmpw
pushf
jg
mov
cli
inc
inc
loope
or
repz
pop
inc
jno
daa
pop
mov
and
shrl
mov
add
ljmp
xchg
xchg
int3
test
ss
outsl
push
mov
dec
mov
sub
dec
mov
push
inc
into
or
mov
arpl
mov
mov
sahf
cmp
xchg
mov
inc
push
andb
loop
jno
adc
dec
dec
stc
inc
data16
lods
bound
daa
cmp
pop
lods
loope
mov
push
jg
push
pusha
in
inc
not
in
movb
popf
xlat
out
std
inc
ss
addl
push
jb
inc
js
stc
jmp
jo
cmp
pop
push
xchg
notrack
cld
mov
sbb
psubusw
inc
orl
mov
push
popa
pop
push
sahf
test
dec
sub
mov
jno
pusha
add
sbb
mov
jo
jle
js
enter
push
jno
stos
les
mov
add
sbb
pop
rorl
cld
sahf
pop
rol
repnz
and
dec
mov
stos
push
pop
inc
mov
mov
pop
push
sarb
lock
xor
pop
fabs
subps
and
lds
les
pop
adc
fldt
sysenter
push
pushf
and
stos
inc
cmp
pop
cmp
pop
cmp
stos
adc
push
adc
inc
pop
push
jmp
xor
in
popa
mov
sub
sbb
cmp
lcall
push
or
loopne
cmp
aaa
or
in
in
outsl
mov
repz
sbbl
and
nop
in
lahf
jnp
popf
add
iret
pop
xor
xor
add
outsl
mov
lret
in
sub
mov
lcall
scas
lea
aad
jle
loop
mov
add
loopne
mov
pop
movb
shrl
insb
xchg
mov
xchg
call
cmpsl
adc
mov
xor
or
pusha
sub
cmpsb
jecxz
pop
mov
mul
in
clc
or
mov
pop
sbb
roll
in
or
xchg
xor
xchg
shrl
gs
mov
add
xchg
pop
mov
movsb
scas
hlt
add
push
fsubs
js
fistpl
ror
es
das
push
ret
xlat
repz
push
push
and
xor
hlt
inc
mull
fdivrs
in
jl
out
test
es
adc
jmp
sbbl
mov
jp
mov
out
test
das
xchg
int3
push
jecxz
sbb
sub
rcll
jge
fstl
bound
adc
sti
sbb
pop
lds
cs
xchg
ret
sbb
fdivrl
into
xchg
fs
fisttpl
test
aaa
icebp
sbb
pop
push
xchg
pop
dec
and
or
jae
adc
ficoms
xor
mov
movsl
loop
out
mov
cmpsl
lods
out
xor
aaa
dec
call
cmp
aad
fistps
mov
insl
jo
shll
aad
mov
dec
mov
test
dec
pop
in
ss
xchg
lret
hlt
es
adc
and
jbe
iret
je
leave
mov
jle
cs
adc
out
sub
pop
sub
mov
mov
pop
out
dec
iret
pop
fimull
pop
inc
or
add
rcll
in
mov
stc
mov
lds
repnz
sbb
add
push
and
and
mov
jno
push
xor
and
mov
mov
pusha
outsb
sub
int
mov
clc
movsb
push
stos
push
dec
cmp
sub
fstpt
adc
mov
xchg
xorb
std
in
out
lds
xor
lock
and
add
iret
xor
ret
ja,pn
xor
sbb
hlt
xchg
push
push
clc
clc
add
lret
jecxz
xor
cmp
mov
inc
hlt
push
filds
out
ljmp
nop
jns
fisubrs
das
xchg
shlb
adc
jecxz
dec
sarb
cmpsb
xchg
xor
shl
and
xchg
jne
pop
mov
jo
sbb
jo
mov
fs
xchg
divb
adc
shll
jl
cmpsb
sub
mov
test
push
out
cmp
dec
inc
and
add
dec
add
out
sub
ss
jo
in
ljmp
and
roll
inc
mov
scas
or
add
out
fwait
xlat
and
popf
jnp
xchg
cmp
xor
sub
lock
mov
mov
mov
js
push
bnd
jle
in
pushf
orl
movsb
xchg
or
fsub
in
fisubrs
ja
adc
loopne
jl
mov
pop
dec
test
mov
ljmp
out
aas
shrb
outsl
fisubl
mov
adcl
pop
dec
ss
sub
js
rcll
and
mov
sbb
and
xchg
mov
in
mov
aad
repz
cmp
xchg
lahf
mov
subl
test
push
sbb
hlt
inc
fmulp
repz
mov
or
aaa
fwait
loopne
inc
pop
mov
and
cmp
jmp
lock
and
in
movsl
shll
aaa
pop
push
or
ss
push
sarb
cmc
push
push
sbb
sbb
fs
das
sbb
aaa
dec
lret
cmp
mov
dec
push
dec
popa
xor
add
rcrl
xor
lods
push
mov
jmp
xor
jae
out
mov
inc
daa
imul
cli
fsubr
setp
fadd
bnd
fisubs
loopne
cmpsb
addl
lods
pop
xor
lret
dec
push
sti
and
shrb
mov
ss
or
pop
cwtl
int
jecxz
cli
add
js
stos
xchg
mov
inc
int3
movsl
ret
cmp
out
imul
push
xor
mov
or
bound
gs
roll
popf
outsb
movsl
dec
dec
xor
test
dec
lcall
sahf
test
stos
add
stos
lods
add
or
sbb
adc
shr
sbb
fsubs
dec
mov
out
test
aam
rcrb
cmc
add
outsl
js
xchg
mov
jns
inc
sbb
or
outsb
mul
xchg
xchg
mov
push
mov
outsl
sahf
pusha
fstl
adcl
sub
popa
in
pop
mov
sub
mov
shl
outsl
test
cmova
fdiv
add
xor
fs
fiadds
lcall
sahf
sub
cmpsb
shl
cmpl
cmp
dec
or
push
sbb
fld
jbe
push
pop
push
push
inc
sub
inc
in
arpl
out
imul
nop
xchg
mov
jp
ficoms
ret
imul
cld
add
fcoml
adc
push
mov
negb
test
cmc
dec
inc
jg
sbb
adc
and
iret
jl
adc
xchg
mov
xchg
cwtl
adc
lds
popf
jo
dec
aam
jnp
addl
push
stos
xor
and
out
es
adc
js
cmp
in
hlt
push
xchg
jns
jl
mov
sub
and
out
mov
imul
rorl
sbb
push
fnstenv
stos
lret
push
sbb
aas
adc
cwtl
xchg
sbb
insb
mov
aas
js
adc
xchg
push
sub
dec
inc
pop
and
cwtl
add
lcall
jno
and
xor
pop
xlat
repz
daa
lahf
clc
mov
xchg
imul
stc
cld
popa
sub
jg
push
add
imul
stos
ja
fidivrs
mov
test
leave
sbb
lds
jle
fisubs
shrb
pop
xchg
jbe
jne
and
aaa
adc
xchg
insb
push
ja
pop
add
add
aad
gs
leave
xor
mov
fs
test
loope
fstl
and
or
mov
and
dec
imull
pushf
xor
inc
inc
cmp
imul
cmc
getsec
inc
sub
mov
sub
xlat
dec
jae
test
js
icebp
lock
sub
inc
inc
push
andl
push
push
test
pop
xlat
in
dec
in
mov
ljmp
jg
adc
fldlg2
xchg
shl
mov
push
test
mov
xchg
sub
insl
sub
lock
imul
sbb
dec
and
push
stos
add
pop
mov
cmp
clc
mov
mov
mov
out
cld
jnp
out
dec
xchg
addr16
incl
std
popa
pop
addr16
das
hlt
jg
or
sub
xchg
and
adc
int3
rol
cmc
dec
mov
call
loopne
incl
scas
xor
push
jecxz
aam
cltd
popa
je
push
int
loope
notl
pop
lds
cli
mov
mov
out
addr16
hlt
loopne
call
mov
add
sbb
cmp
ljmp
dec
arpl
ja
mov
push
gs
mov
cmp
inc
adc
mov
test
mov
cld
ret
push
loop
sbbb
xor
cmc
subb
pop
mov
jo
xchg
ds
js
daa
nop
xor
or
outsl
jg
pusha
es
lods
pop
mov
andb
jge
mov
sbbl
pop
inc
cmp
pop
sbb
shll
data16
jl
aad
add
into
in
xchg
sti
jnp
or
aam
jne
pop
xchg
mov
mov
mov
cmp
add
scas
pop
lds
jl
jne
int3
cmpsb
iret
dec
lahf
dec
cmpsb
lods
sub
fdivr
mov
mov
xchg
jp
into
jno
mov
fsubrl
or
inc
sub
xchg
iret
lret
andb
jno
scas
loopne
push
push
mov
and
cmp
mov
and
or
xchg
sbb
lret
xlat
dec
mov
mov
mov
mov
stc
dec
mov
add
cltd
out
jb
mov
jnp
nop
ljmp
xor
aam
dec
cs
clc
decl
or
xchg
test
xchg
dec
mov
xchg
dec
dec
dec
mov
stc
jno
jb
and
jecxz
mov
dec
outsb
jne
inc
xlat
push
cmp
dec
imull
int3
fwait
imul
hlt
sbb
mov
addr16
mov
repz
add
lcall
jmp
cmp
xor
iret
rcl
mov
mov
push
inc
pop
adc
pop
cli
push
ret
es
movsb
mov
dec
ljmp
jno
inc
ljmp
push
jp
sub
ret
xchg
mov
adc
xor
cmp
decb
pop
repnz
push
xor
and
int
fwait
mov
movsb
jns
mov
lcall
xchg
cli
jle
cmpl
imul
insl
mov
sti
xchg
xchg
push
fs
xor
loop
out
add
mov
adc
mov
inc
ret
xchg
ret
fucomip
pop
mov
dec
mov
jne
clc
mov
jae
dec
inc
cltd
cltd
nop
mov
push
xchg
xor
xor
out
mov
out
mov
pop
xor
jae
insb
test
mov
cmpsb
jns
pusha
sahf
jmp
dec
in
add
loop
out
aam
and
mov
push
sbb
es
add
sbb
push
icebp
mov
xor
leave
mov
cltd
and
cld
xchg
mov
lcall
out
push
sbb
popl
dec
sub
pop
xchg
inc
insl
and
aam
imull
inc
jmp
jmp
std
jo
pop
cli
js
out
jle
sbb
mov
cmp
mov
inc
xor
sub
outsl
mov
sub
jl
push
pop
sbbl
scas
sub
jl
rorl
dec
adc
popf
fabs
mov
pop
jg
dec
cmpsb
ds
inc
scas
push
stos
dec
push
filds
or
data16
xchg
jae
sti
inc
jmp
imul
adc
bound
push
inc
jp
xlat
iret
inc
mov
xor
sbb
fmull
bound
call
mov
fst
sbb
lock
insl
inc
push
cltd
fsubr
loopne
adc
jge
xor
mov
sub
cli
sub
pop
mov
and
stc
jnp
and
add
and
loopne
adc
ja
icebp
pop
enter
sti
adc
lods
push
xor
lret
and
xor
lret
cmpsb
sarl
jle
shll
daa
mov
pop
sub
hlt
stc
rol
or
nop
data16
mov
adc
cwtl
into
in
pop
mov
fistps
mov
lret
mov
add
dec
fisubrs
test
or
push
mov
mov
pushf
push
sbb
aad
pop
cmp
mov
xchg
in
pop
in
scas
mov
mov
out
jnp
out
pop
xchg
aad
into
or
cli
addr16
scas
mov
cld
sub
je
inc
xchg
scas
pushf
jecxz
mov
pop
jmp
ret
mov
xchg
test
sbb
and
pop
push
xchg
mov
pop
sub
mov
xor
xchg
lcall
fs
lods
dec
jp
bound
hlt
fstpt
cmp
cli
rcr
mov
mov
adc
mov
push
insb
pop
pop
mov
or
sbb
jnp
pop
cmp
pushf
dec
fsubrl
lock
hlt
mov
loop
es
hlt
sub
imul
sub
xor
jmp
and
jl
xchg
dec
fadds
pop
xor
cmp
outsl
mov
insl
push
lret
enter
popa
scas
test
sarl
int3
or
je
push
mov
test
cmp
addr16
cmp
stos
into
and
pop
mov
or
push
and
test
lds
mov
daa
add
decb
xor
insl
mov
cmp
aad
mov
add
pop
sub
jae
pop
lods
lds
out
mov
idiv
mov
cmp
xor
mov
jl
mov
cmovo
cmp
fiadds
movsb
xor
rcr
jecxz
aam
xorb
push
add
sub
xchg
fdivrl
pop
jbe
aas
pop
xchg
mov
or
in
imul
pusha
adc
and
add
pop
cltd
lret
ret
fs
mov
rorl
mov
nop
mov
and
sub
xor
cmp
jp
sbb
pop
pusha
inc
sbb
mov
filds
sbb
mov
lret
fidivrs
dec
loope
addr16
and
movsl
sbb
xchg
sti
lds
mov
pusha
mov
js
sub
addr16
and
mov
bound
jo
addr16
mov
pop
lcall
xor
inc
fnstenv
je
fidivrl
pop
aaa
shl
add
in
xchg
or
gs
mov
fxch
aad
jg
mov
cwtl
sbbl
stc
in
xchg
test
nop
mov
inc
ja
jmp
xorl
jo
xor
push
cmpl
js
cmp
rcl
mov
cmc
add
mov
and
iret
xor
push
cld
loop
sbb
loopne
push
shlb
fdiv
ret
sub
xchg
inc
mov
or
cmp
ljmp
add
mov
push
push
int
xchg
gs
pop
pop
dec
adc
test
in
add
leave
mov
cmpsl
ljmp
call
les
imul
cmpb
cwtl
daa
lret
pop
xor
insb
nop
mov
adc
mov
lods
ror
and
ljmp
xor
and
fldl
aad
js
sbb
jl
loop
mov
pop
or
inc
popf
pop
or
fdivrp
test
push
inc
push
add
insl
and
or
dec
shrl
xor
pop
aam
rclb
mov
inc
jnp
out
ret
mov
push
aas
push
cltd
adc
cmp
sub
mov
jmp
cmp
aad
push
insl
repz
add
sub
bnd
shl
jl
cmp
add
and
sbb
out
adc
in
dec
dec
xor
jnp
and
stc
or
loop
dec
jnp
mov
rcrl
push
test
mov
mov
in
in
imul
mov
sbb
dec
lahf
insl
pop
pop
pmaxsw
ds
jno
in
sub
mov
jle
scas
push
mov
lret
sbb
leave
ljmp
mov
das
icebp
sub
xor
mov
test
rcrl
adc
imul
jg
fildl
xchg
adc
mov
shll
mov
and
sub
mov
test
xor
inc
sub
add
daa
insb
sbb
fistpl
les
sbb
sbb
jo
and
mov
out
xor
test
sub
bound
lret
pop
fcoml
xchg
fiadds
popl
pusha
dec
mov
fsubl
mov
sbb
fwait
or
add
ret
xor
divb
pop
and
or
ficompl
or
loopne
addl
push
rcrl
and
jmp
jge
test
and
daa
pop
push
jmp
lods
dec
lea
pop
mov
or
imul
int3
mov
dec
pusha
in
mov
icebp
in
nop
and
in
lods
jg
ss
arpl
stos
in
mov
nop
sub
cmpsb
stc
leave
push
dec
xor
push
pop
xor
push
mov
out
xchg
mov
in
lahf
lods
xchg
out
xlat
or
push
xchg
ljmp
push
outsb
shlb
inc
lods
mov
lcall
xlat
mov
addr16
pop
mov
pop
mov
mov
cmpsb
and
into
fs
in
clc
in
mov
cltd
dec
mov
pop
cmp
add
mov
mov
loope
out
xor
pop
pusha
pusha
mov
mov
adc
jno
jecxz
mov
gs
inc
cmp
add
mov
decb
in
xor
push
shrl
test
or
mov
inc
test
fs
lds
jg
into
jbe
fildll
aas
mulb
jno
fdivs
jno
in
sbb
inc
cwtl
add
jl
mov
xchg
add
aad
add
addr16
jmp
push
ss
xchg
in
or
push
pop
mov
pop
addr16
dec
sbb
mov
loopne
add
mov
jno
cli
xchg
and
push
daa
cmpsl
xchg
js
adc
pop
pop
mov
test
hlt
imul
aaa
movsl
inc
dec
jo
dec
or
xor
js
fbld
fwait
xor
mov
rclb
mov
in
aaa
or
cli
fiadds
stc
xor
push
cmc
inc
lret
data16
sbb
mov
or
push
or
jecxz
inc
ja
mul
insb
jle
mov
cmpsb
pop
dec
notb
flds
stos
mov
clc
dec
sub
fwait
jmp
jp
pop
sahf
pop
xchg
jnp
bound
inc
xor
lcall
mov
test
gs
std
test
mov
and
push
mov
mov
hlt
add
push
out
cmpsb
subb
mov
xchg
xlat
icebp
repnz
jne
fwait
lods
mov
ret
fisttps
sarl
xor
mov
adc
js
or
es
cmp
int
fucomi
inc
fsubp
adc
xor
pop
pusha
push
dec
push
pop
push
test
push
xor
arpl
adc
adc
pop
das
je
jne
and
lea
aam
scas
xchg
mov
mov
aam
lock
daa
mov
in
out
mov
sti
jo
call
sub
dec
mov
sarl
jecxz
xchg
push
jbe
pushf
push
movsl
xor
xchg
xchg
mov
push
std
stos
sub
fidivrl
jle
xchg
jae
daa
add
mov
fwait
jmp
mov
fsubrs
int
xchg
pop
inc
cmp
mov
xchg
mov
ljmp
pop
lea
fsub
cld
mov
inc
mov
mov
out
push
mov
testb
addl
fdivs
out
jae
fs
xchg
mov
mov
rclb
stos
cmc
mov
popf
mov
into
adc
int3
adcl
iret
movsb
cmp
fstl
add
xorl
mov
pop
sub
mov
das
stc
pop
dec
fsub
xchg
and
xor
and
mov
xor
les
leave
mov
cwtl
lods
push
sub
and
push
ds
push
and
xchg
sub
pop
std
ss
inc
test
daa
insl
scas
mov
insl
lods
mov
add
aas
in
mov
roll
or
cmpsl
lea
lock
in
dec
add
cld
loope
inc
xchg
addr16
dec
sub
mov
or
in
mov
call
pop
dec
mov
mov
int
out
mov
lea
jnp
fs
js
add
lcall
sbb
decb
or
mov
and
mov
mov
sbb
lret
and
jne
scas
xor
or
dec
sbb
stc
xchg
adc
ficomps
inc
add
dec
pop
mov
test
repz
daa
lret
mov
xor
nop
rcll
inc
sub
add
jle
scas
xor
jns
or
sub
aaa
aam
aam
push
xor
mov
jecxz
scas
push
sbb
fs
dec
jecxz
inc
ljmp
bound
fidivl
push
out
fcoms
icebp
push
add
ja
mov
jmp
cmp
inc
inc
mov
stc
cmp
out
xlat
mov
jge
inc
clc
clc
pop
pusha
add
pop
xlat
xchg
lods
pop
push
mov
subl
arpl
pusha
and
push
popf
fdivs
mov
or
xor
loopne
sbb
dec
mov
add
aam
mov
in
jne
and
add
mov
pop
mov
mov
ds
jecxz
das
lods
inc
sar
push
shlb
icebp
xlat
xlat
sub
jnp
shrl
fidivrs
cmc
push
or
mov
mov
or
pop
imul
out
pop
stos
mov
popa
sbb
xor
jle
nop
in
or
xor
imul
dec
xchg
jnp
int
fcmovnu
test
int3
dec
outsl
mov
outsb
mov
mov
cli
insl
lahf
mov
stos
cmp
fisttpll
pop
xor
mov
repz
pop
test
and
scas
jp
stos
fucomp
fwait
or
fisttps
and
cmpl
aas
js
dec
cmpb
daa
push
jmp
fidivl
dec
mov
mov
cmp
insl
jnp
adc
lahf
jb
ds
xor
in
inc
xchg
out
mov
mov
jne
push
cmp
fisttpll
movsb
lahf
pop
sbb
mov
fildll
jp
mov
mov
push
dec
xlat
and
jle
inc
adc
mov
mov
mov
xchg
sbb
aam
imul
jne
aaa
and
and
ret
aaa
shll
fstpt
lds
sub
lret
rcrb
jle
mov
sbb
in
insb
cmc
xchg
jo,pt
bound
ljmp
mov
push
sub
je
and
and
sub
inc
fwait
stc
dec
and
das
ss
aad
push
dec
add
jno
adc
push
and
add
inc
mov
cwtl
aas
and
and
adc
sub
into
int3
cvtpi2ps
aas
insb
imul
pop
scas
push
pop
or
adc
lea
negl
mov
xchg
sub
lods
jmp
push
das
adc
pop
inc
pop
sub
insl
pop
cmpsb
sti
adc
leave
div
in
dec
cmc
cmp
push
and
xchg
aad
dec
cmp
imul
xchg
ljmp
sub
aam
cmp
push
push
into
sub
inc
xchg
fildl
jmp
loope
test
popf
adc
mov
adc
lret
sub
mov
mov
popa
adc
add
push
outsb
gs
push
lret
inc
call
mov
sbb
cli
aas
pop
inc
ja
sub
jmp
add
gs
adc
inc
mov
sti
int
cmp
out
fsubrp
shlb
loopne
loope
test
push
adc
orl
adc
or
imul
pop
inc
or
aad
stc
dec
rorb
push
add
jo
ret
call
arpl
adc
cmp
mov
sbb
add
lods
cs
pop
int3
fbstp
sub
add
loope
xor
testb
mov
cmpsb
sbb
mov
or
movsl
out
cmp
jecxz
pop
mov
xchg
push
add
into
aaa
pop
ds
mov
shlb
neg
mov
jecxz
divl
in
push
ds
movsb
inc
adc
and
sub
dec
outsb
stos
jl
adc
dec
sub
fildll
sub
jl
sub
inc
jle
fs
mov
sub
aad
lods
push
out
int3
ljmp
mov
sbb
ficoml
iret
lods
scas
xchg
mov
les
jne
popa
repz
or
outsl
loope
dec
ds
xchg
cltd
into
loop
mov
pop
cmp
adc
mov
test
fmuls
std
int3
inc
ds
dec
aas
adcb
mov
bound
popa
pop
cltd
push
mov
dec
into
ret
bound
mov
xlat
adc
clc
es
add
pusha
in
inc
push
lds
push
xchg
lret
xchg
loope
pop
fs
inc
loopne
pop
dec
or
cmpsl
nop
adc
and
adc
or
xor
decl
xchg
aas
push
xchg
dec
jecxz
and
jecxz
or
mov
cmpsb
and
arpl
arpl
testl
les
aad
or
jp
lret
pop
and
loope
adc
and
xchg
xor
push
mov
out
jg
or
xchg
in
push
orb
inc
jno
inc
ret
jmp
sbb
cwtl
hlt
cs
or
jae
das
jge
and
inc
addb
daa
lret
pop
push
fcompl
jno
cmpsl
mov
outsb
add
inc
cmpsl
nop
ficoms
cmp
or
xorb
mov
push
cmp
les
pop
es
mov
call
sahf
fcomps
mov
xor
movsb
or
cmp
sti
push
out
cli
add
mov
arpl
add
pop
shrb
and
in
pop
stc
mov
push
mov
cs
pop
add
inc
sub
cmc
push
mov
mov
push
je
push
dec
push
test
add
pop
xchg
jnp
std
dec
repz
aaa
sarl
mov
sbb
lret
shlb
push
xchg
in
adc
mov
jnp
shl
pop
xchg
pop
and
fs
je
push
div
fsubrl
pop
dec
popf
pop
push
cld
das
stos
shrd
adc
jbe
scas
decl
pop
jns
pop
sbbl
loope
fistpl
add
dec
fistpll
lds
cmpsl
mov
shlb
and
decl
subl
filds
setg
mov
and
xchg
and
pop
lcall
add
mov
movsb
push
gs
outsb
inc
xchg
add
fsubr
xor
xchg
and
movb
sbb
mov
sub
inc
lock
mov
mov
xchg
jb
adc
mov
xlat
les
into
popl
mov
loope
xorl
xor
xchg
shlb
sar
test
adc
sti
push
fldpi
mov
test
xlat
fstpt
mov
call
je
sar
and
nop
pop
and
xor
ret
das
insb
mov
bound
lcall
cltd
sub
nop
loopne
or
sarl
cmpsl
scas
loope
in
mov
gs
ja
inc
push
scas
mov
js
mov
outsl
je
ja
test
jne
push
mov
out
stos
loopne
cmp
jo
inc
cmp
call
sbb
fistpll
push
dec
cmp
cmp
in
dec
cwtl
jnp
sbb
mov
and
cmp
and
sahf
add
pop
sarb
or
out
test
ret
pop
dec
cld
pop
mov
aad
sahf
jbe
ljmp
popf
adc
sub
mov
cmp
test
aas
into
mov
lret
add
or
pop
cli
inc
xchg
aaa
insl
movsb
aas
clc
lahf
inc
dec
mov
mov
scas
test
outsl
sti
xchg
mov
inc
xchg
ljmp
sbb
cmp
push
stc
cmp
jl
jnp
add
mov
add
jl
pop
cli
into
std
lret
jge
adc
pop
popa
jle
cmp
in
test
fcomps
dec
cmpb
or
fbld
xchg
aaa
pop
adc
cld
addr16
and
push
cmp
scas
mov
or
rcr
mov
push
sub
icebp
dec
aad
jle
fsubrs
or
mov
xchg
jae
cmp
add
xchg
xchg
cld
jecxz
outsb
outsl
loop
jbe
fdivrs
add
test
dec
notb
into
test
xor
inc
pop
dec
jecxz
and
cmpsb
rcl
sbb
sbb
rcll
int
scas
rorl
push
sub
and
pop
lret
mov
lcall
mov
rcrb
xchg
xchg
sahf
mov
cmp
call
nop
ret
xor
fs
movl
or
sbb
rcrb
es
ficomps
or
movsb
jo
mov
push
ds
adc
jno
popf
sbb
into
mov
add
cmp
cmp
cmp
dec
mov
adc
push
xlat
int
jbe
andl
mov
jmp
ficompl
push
xor
sub
and
fiaddl
hlt
rcr
fstl
inc
mov
ds
outsl
xchg
inc
movsb
pusha
fldl
dec
pop
mov
sbbb
jno
mov
stos
out
pop
push
sub
sahf
sahf
mov
in
into
stos
aad
lahf
mov
loopne
xchg
into
jns
inc
in
cwtl
add
inc
inc
inc
lcall
xchg
in
xor
jno
inc
sti
je
and
cmp
mov
flds
sbb
ljmp
cmpsl
sbb
sti
repnz
push
arpl
xchg
outsl
dec
add
rcrl
xlat
mov
cmp
lcall
pop
mov
dec
xchg
mov
adc
jg
lock
mov
push
and
cld
bound
xchg
fsubrl
mov
rolb
dec
and
add
push
push
fucomp
cli
js
nop
nop
mov
cli
pop
dec
jb
pop
mov
mov
idivb
inc
bnd
pop
lea
jecxz
decb
imul
fwait
pop
ret
inc
and
rcrl
cmp
jnp
cmc
cwtl
fsubl
rclb
adc
incl
push
or
xchg
fwait
sub
movsb
lcall
lock
dec
je
mov
cmpsl
sub
and
imul
popf
cld
mov
in
pop
sahf
decl
mov
testl
subb
mov
jge
push
cmpsl
xchg
sub
xchg
aad
loopne
call
roll
mov
test
ror
mov
sub
jb
push
xlat
das
repz
or
nop/reserved
jle
fnstcw
or
dec
addr16
jae
test
or
test
test
and
inc
loop
adc
filds
jb
hlt
inc
aas
mov
imulb
cmp
inc
mov
xor
ficoml
pop
das
roll
dec
mov
mov
in
mov
rorl
daa
xor
add
shl
push
or
mov
mov
sub
mov
out
mov
mov
dec
into
or
ficoms
inc
lret
cmp
jne
in
cmc
ret
popfw
in
pop
inc
mov
push
rorb
sbb
xchg
test
mov
mov
pop
ds
push
movb
xchg
call
roll
xchg
sub
mov
push
test
jns
push
enter
push
scas
cmpb
sub
cmpsl
push
sub
and
mov
xor
sbb
sti
or
dec
loope
dec
jge
leave
push
xchg
fmuls
sarb
xchg
dec
pop
xor
loope
outsl
cltd
pop
adc
and
xlat
arpl
aam
popf
repz
test
and
insb
out
test
pop
aaa
lahf
pop
in
lds
nop
push
loop
and
cmp
repnz
mov
push
pop
outsb
mov
shlb
out
ja
mov
xchg
test
fwait
and
dec
das
jmp
mov
fs
or
mov
rcll
pop
daa
into
stc
mov
pop
ds
and
in
push
out
sub
sbb
fiadds
jge
jg
sbb
fsubrs
test
call
inc
xchg
dec
add
mov
sub
pop
shlb
stos
inc
sarb
sub
cmp
popf
pop
mov
jl
clc
in
imul
icebp
adc
jp
in
push
ljmp
or
xchg
inc
push
loope
je
cmp
repnz
push
pop
mov
or
shll
cmp
mov
mov
push
aas
popl
mov
sbb
fnsave
adc
sarl
movsb
push
in
push
mov
cmpsb
dec
out
test
enter
adc
fs
mov
aaa
es
dec
inc
rcrl
jb
mov
sahf
jmp
pop
mov
push
mov
dec
stos
cmp
mov
ret
fdivl
and
scas
gs
cwtl
inc
xorb
mov
test
adc
xorl
imul
dec
in
xor
cmpsb
pop
push
js
dec
les
mov
add
sub
out
adc
xor
inc
shll
xchg
icebp
les
jl
mov
icebp
jmp
mov
xlat
mov
mov
fsubl
xor
shrl
ret
sahf
int3
out
add
adc
into
lock
iret
fwait
xlat
sub
jo
dec
adc
js
rcrl
cmp
mov
ja
aad
aas
inc
xchg
sahf
idivb
sub
cmp
icebp
cmp
sub
sub
ljmp
add
xor
ljmp
sarb
ret
cmpsb
sbb
rcrb
dec
xchg
pop
mov
pop
addr16
mov
call
lret
pop
pop
or
sub
and
mov
sti
inc
faddl
pop
cs
dec
enter
mov
iret
movsl
je
xchg
cmp
and
mov
in
sbb
leave
or
mov
das
inc
mov
hlt
cmpsb
insb
xor
xor
pop
cli
aaa
loope
stos
adc
js
arpl
dec
and
jo
pop
cmp
add
xor
shlb
ficoms
push
or
arpl
addl
or
jle
leave
push
or
movsl
or
sub
push
cmp
sbb
ja
mov
subb
inc
dec
fimull
pop
sar
pop
sbb
in
xchg
push
cmp
enter
outsb
push
iret
inc
fsubs
pusha
pop
rcrb
adc
pop
int3
jno
loop
push
mov
adc
cmpsb
dec
insb
mov
pop
mov
mov
sahf
insb
push
mov
ljmp
xchg
xrelease
pop
add
push
adc
dec
mov
aad
xchg
push
ljmp
jl
nop
xor
inc
fcompl
lret
sbb
cmp
or
movsl
sbb
mov
pop
pop
cld
addl
pop
inc
pop
loope
push
test
loopne
jno
add
push
aas
popf
mov
shl
fisubrs
push
icebp
jne
xchg
hlt
out
pop
push
into
pop
sbb
pop
mov
shl
xchg
std
jecxz
cmp
sbb
cwtl
cmp
mov
aam
add
lahf
mov
popf
insb
and
mov
mov
cmp
nop
mov
div
add
fnstsw
push
cmc
notl
mov
les
fildll
adc
ficoml
mov
fists
lods
in
shlb
ret
loopne
icebp
mov
pop
fbld
lock
loop
bts
loop
add
mov
cltd
sub
mov
or
aam
dec
xchg
inc
cmc
stc
mov
mov
pop
int3
std
xchg
add
dec
pop
or
xor
shll
xlat
in
sbb
lret
mov
pusha
inc
sub
ja
mov
mov
push
xchg
or
sarl
loopne
fnstsw
outsl
sbb
mov
dec
push
push
xlat
fwait
jle
sbbl
lods
xchg
xor
or
sub
icebp
addr16
stos
int3
push
push
or
jmp
push
add
push
inc
hlt
sar
cs
inc
cltd
and
hlt
pop
xor
dec
xor
dec
pop
pop
pop
jo
and
mov
ret
mov
movl
mov
sub
dec
sub
dec
add
ss
xchg
or
orb
add
out
dec
shl
xor
sbb
xor
pop
gs
mov
cli
mov
and
sbb
std
mov
ds
and
cmc
or
jmp
cmp
add
xchg
sbb
mov
xchg
mov
sbb
out
add
adcl
call
push
dec
jbe
jmp
mov
shrb
scas
call
fsubrl
adc
insb
lahf
mov
and
pop
mov
jne
sub
daa
test
test
enter
cmc
push
rcrl
xor
fnstcw
cmp
mov
je
scas
pop
mov
les
shll
scas
or
stos
xchg
pop
jp
das
lds
mov
in
pop
lcall
in
push
aaa
jo
dec
bound
push
repnz
xor
int3
lock
pop
js
jl
mov
sti
sahf
mov
arpl
push
test
cmp
sbbl
movsb
push
jbe
add
out
arpl
xchg
js
sbb
and
test
jecxz
mov
xchg
push
lret
jg
cmp
mov
inc
mov
sbb
mov
cmp
xorb
push
out
rolb
sub
in
jmp
rol
sub
pop
add
mov
bound
aaa
cmp
es
sub
outsb
push
inc
xchg
jne
aad
sahf
cmp
lods
push
push
xor
mov
mov
aam
lods
std
cmpsl
subb
mov
add
enter
add
jl
shrb
jmp
sbb
outsl
jne
jp
mov
jne
daa
lea
popf
insl
pop
pop
jo
out
sub
scas
pop
push
dec
adc
repnz
jae
jl
loop
pop
insl
mov
dec
mov
pop
nop
pushf
jns
mov
adc
hlt
aam
jb
jns
test
aaa
jecxz
mov
or
push
adc
cmpsb
mov
aad
sub
add
lcall
rcr
cs
cmc
repz
xor
movsl
mov
pop
jmp
xchg
fs
scas
lcall
aam
and
cltd
xchg
in
lret
inc
xor
dec
add
sub
pop
cld
int
shll
icebp
sub
lret
add
ret
sub
xchg
hlt
out
out
test
xchg
std
sbbl
or
scas
repz
ja
pop
xor
add
and
fxch
je
movsb
mov
insl
mov
fstpl
push
sbb
mov
mov
pop
dec
ljmp
xor
divl
les
ss
inc
fnsave
lcall
xchg
adc
mov
mov
xor
jne
fimull
fwait
and
sbb
cmp
mov
xchg
in
rcl
arpl
adcl
test
js
test
pop
int3
fdivs
push
cmp
jle
orb
add
pop
jmp
scas
iret
div
mov
push
mov
mov
xchg
lock
cmpsb
repnz
inc
cmc
jae
mov
xchg
dec
sbbl
jle
xlat
xor
xor
mov
cmpsl
sub
ror
xchg
push
sub
lock
xchg
test
pop
test
dec
adc
jbe
call
ror
mov
stos
jnp
mov
add
lds
mov
xor
mov
or
mov
out
fiaddl
setbe
xchg
sbb
dec
jne
pop
es
inc
flds
and
cmp
or
imul
lahf
jbe
add
push
cmp
push
mov
mov
mov
mov
sub
xchg
jno
pusha
pusha
cltd
xor
cwtl
mov
mov
push
shrb
icebp
js
mov
insl
js
outsl
push
sti
pop
or
or
sti
jmp
pop
ds
aaa
mull
in
cmp
mov
arpl
cmpsl
push
push
mov
cmpsb
lahf
cmp
sbb
sbb
test
dec
fsubrl
adc
data16
jns
bound
mov
loopne
fildl
dec
imul
sbb
in
shlb
jl
hlt
mov
sti
into
adc
or
mov
jmp
fsubrs
or
mov
mov
xchg
stos
jns
mov
test
xchg
push
clc
stos
shrb
push
sbb
inc
or
pop
out
pop
mov
mov
out
and
sub
mov
pop
mov
decb
test
data16
fcompl
jmp
divl
fistl
add
xchg
xlat
ret
inc
inc
sar
data16
ret
ret
test
inc
sbb
and
xor
xchg
sbb
adc
xor
pushf
out
and
sbb
mov
adc
mov
addl
mov
movsl
out
cmpsl
xchg
jne
and
pop
in
insl
pushf
push
int
lea
mov
outsl
sahf
mov
leave
inc
jb
pop
sbb
stos
push
push
and
xchg
les
mov
out
dec
repnz
lea
leave
cmp
push
mov
imul
jg
pop
jle
jge
sub
ret
dec
in
enter
cmp
mov
add
cmc
push
mov
mov
fnsave
outsl
or
pop
icebp
add
and
sub
mov
cli
xchg
push
gs
adc
mov
fwait
leave
xchg
movsl
mov
add
pop
outsl
popa
insb
push
add
push
imul
cwtl
lods
jne
out
mov
and
ret
xchg
aaa
sbb
cmp
cwtl
adc
das
or
sub
ret
mov
daa
sbb
push
jns
mov
mov
mov
aam
and
mov
negb
and
test
imul
icebp
imulb
icebp
jmp
jl
push
adc
stos
inc
sbb
loopne
adcb
mov
aaa
sbb
mov
mov
jl
sub
pop
adc
xor
pop
sarl
add
cmp
outsb
pop
fdivrp
andl
mulb
mov
movsl
ds
jge
std
pop
jle
jae
dec
inc
jmp
jmp
inc
mov
xchg
mov
out
sbb
stos
dec
dec
fidivrl
cmp
dec
push
loopne
dec
dec
fiaddl
lret
adcl
adc
repz
or
sbb
and
xchg
loope
je
divb
movsl
int
enter
pop
mov
data16
or
shll
and
lcall
aaa
pushf
sbb
push
aas
icebp
mov
or
mov
negl
enter
inc
mov
lods
mov
add
in
cmc
inc
int3
xor
addb
jp
pop
jo
cmc
mov
repnz
pop
mov
push
pop
lds
cmc
and
in
mov
pop
push
lret
in
ret
mov
insb
test
xchg
ret
sbb
scas
insb
push
pop
in
inc
test
add
sahf
sarb
decl
add
in
in
stos
int
push
jne
cmpsl
fcomps
push
lods
mov
pop
sti
call
jle
push
aaa
sbbb
inc
popf
rcrl
mov
arpl
xchg
jmp
push
ja
inc
mov
sbb
mov
aam
mov
mov
movsl
in
inc
cld
xchg
sbb
inc
icebp
pop
icebp
jecxz
fs
inc
test
jnp
int
sbb
sub
mov
xchg
out
and
xchg
xchg
cwtl
jge
int
je
xor
daa
scas
pop
fldl
sub
dec
shlb
jmp
cld
addr16
xchg
lea
inc
cmp
mov
ds
pop
adc
cmp
fiaddl
dec
fwait
out
ss
lods
lock
or
and
and
stc
dec
cmpsb
in
sahf
mov
add
out
fdivrs
fstpt
mov
lahf
mov
xor
jge
out
mov
les
lods
pop
mov
test
sub
xchg
sarl
sub
or
push
dec
sbb
pop
cmp
or
or
in
arpl
jl
movsl
fisubl
jo
push
sbb
insb
out
cmp
push
outsb
or
cmp
cmpsl
out
into
aas
add
ret
clc
jmp
addl
loop
jno
mov
ficoml
xchg
movsb
or
vcmpss
movsb
sar
cmp
sbb
pusha
lcall
cmp
subl
xchg
mov
pop
push
fs
stc
out
out
shrb
leave
add
add
inc
cmp
stos
mov
stos
and
xor
adc
out
les
loope
mov
aam
popa
aas
test
iret
clc
xchg
push
adc
lds
push
aaa
lret
push
sub
or
daa
xor
es
jecxz
push
lods
daa
shll
dec
xor
aad
stc
push
xchg
mulb
push
cmpsl
add
fwait
sbb
push
jl
popf
mov
jno
push
mov
lock
dec
or
adc
dec
mov
clc
push
insl
adc
fmulp
mov
inc
dec
aaa
pop
gs
add
mov
adc
and
mov
clc
int
mov
mov
pop
cmpsb
xor
pop
xor
call
inc
push
dec
fs
inc
mov
jmp
stos
cld
test
sub
ds
jb
nop
mov
xchg
sub
in
xchg
aas
clc
jl
sbb
adc
fdivl
popa
idivb
xchg
sbb
and
iret
pop
dec
sub
cmpsl
pop
jmp
xchg
imul
into
shll
aas
and
xchg
adc
aaa
cmp
sbb
cli
or
leave
inc
push
loopne
and
orb
mov
std
mov
test
fsubrl
jp
mov
cmp
pop
mov
shrb
mov
dec
in
jp
add
es
add
inc
xor
xor
pcmpeqw
pop
loope
xchg
and
loope
pushf
or
dec
mov
adc
fucom
cmp
sahf
xchg
push
xor
fisttps
xor
sbb
inc
cwtl
mov
xor
mov
mov
ficoml
adc
outsl
enter
rorb
and
sub
aad
push
mov
mov
in
out
cmpsb
xor
repz
adc
add
sbb
and
test
jl
pop
icebp
sbb
mov
lods
mov
loopne
cwtd
jecxz
mov
cmpsl
adc
in
mov
xchg
pop
sbb
mov
mov
xor
mov
pop
aam
cmp
es
inc
aas
xor
pop
test
cmp
imul
jp
mov
fldl
mov
cmpsl
sahf
cmp
or
lods
lahf
out
imul
sbb
and
jns
cld
rclb
inc
jge
jle
cli
push
es
jl
mov
mov
les
ret
lret
adc
dec
jo
sub
mov
lcall
or
dec
stos
int3
and
fisubrl
or
insb
xchg
add
std
addr16
jg
inc
xchg
movsl
loop
andb
test
in
sbbb
xlat
dec
sub
lods
jns
pop
and
xor
pop
add
outsb
adc
cmp
push
aaa
pop
xor
inc
or
sub
jmp
leave
in
dec
push
addr16
sub
xchg
push
sar
iret
negl
test
sub
test
inc
xor
or
add
inc
or
xchg
loope
cld
xchg
cltd
dec
arpl
je
push
dec
mov
mov
xor
jecxz
add
data16
or
mov
fs
out
popf
ficoms
imul
lret
fstpt
or
inc
mov
les
mov
sbb
hlt
xor
pop
daa
cmp
dec
test
pop
jno
jecxz
cmpsb
div
xor
push
push
inc
push
test
lahf
call
xchg
jle
push
cmp
repnz
mov
lahf
fcoml
xchg
lea
xor
test
mov
xor
dec
push
shl
ds
lret
jae
js
test
shlb
add
xor
mov
ljmp
cmpsl
mov
inc
arpl
or
loopne
sub
in
shlb
sub
ret
scas
sub
add
iret
in
dec
scas
les
or
mov
fldcw
jne,pt
int3
mov
xchg
cltd
or
sbb
shr
jo
and
jb
int
push
popf
repz
insl
xlat
or
test
clc
and
sub
adc
incb
and
popf
adc
sbb
fcmovne
inc
inc
fld
add
add
dec
push
aaa
pushl
mov
dec
or
jle
mov
xor
jno
gs
sub
in
dec
add
jle
mov
dec
in
push
fdivp
fstpt
jp
mov
push
jns
jbe
lcall
pop
gs
cmp
repnz
test
insl
flds
cmc
mov
arpl
ljmp
or
xchg
fistl
sbb
sub
xchg
pushf
mov
ret
cltd
push
mov
mov
sysexit
inc
dec
aas
icebp
inc
or
andb
xchg
shl
scas
mov
pop
mov
push
test
inc
ja
pop
lea
ja
inc
sbb
sti
push
int
pushf
arpl
les
shr
dec
xor
je
je
xor
jmp
add
lods
fisubrl
mov
aam
cmp
out
jge
out
xchg
lods
cwtl
je
lret
cwtl
xchg
test
adc
cwtl
stos
cmp
sbb
aaa
or
das
out
mov
dec
in
mov
cmpsl
push
xor
shll
xchg
and
xor
inc
stos
scas
ljmp
mov
repnz
sub
adc
jns
imul
loopne
push
mov
fisttpl
popa
mov
int
sub
sbb
lret
cs
and
cmp
ja
out
xchg
dec
fmull
fidivrl
in
mov
mov
push
dec
inc
cwtl
sbb
inc
and
mov
int
in
aaa
and
addr16
add
test
lods
ucomiss
mull
sbb
adc
ret
or
push
jp
dec
sub
sub
arpl
ljmp
in
enter
inc
lea
pminsw
push
sub
lods
push
icebp
cmpsb
add
xchg
lret
sub
sbb
pop
push
ret
cltd
or
pop
mov
dec
jae
imul
mov
mov
out
pop
pop
aas
add
aas
push
dec
mov
pushf
xchg
add
leave
js
cwtl
cmp
cmpsb
push
or
push
lods
inc
int3
push
pusha
cmp
add
ljmp
mov
cld
sbb
stos
dec
lahf
mov
mov
or
xchg
in
mov
popa
xlat
lea
roll
push
rorb
ja
fmul
pop
cwtl
cmp
mov
or
stos
mov
and
push
outsb
aam
out
dec
xlat
dec
add
cmp
inc
lret
mov
arpl
xor
movsl
lods
mov
nop
mov
ljmp
mov
fstpl
cmp
mov
test
inc
loopne
lea
jp
ret
test
pop
js
test
sahf
xchg
jnp
lock
push
imul
xchg
std
jbe
icebp
mov
mov
movsl
sbb
mov
cmpsl
sub
push
xor
sub
into
stc
xchg
and
inc
pop
xor
into
cmp
or
shr
jne
xchg
jg
cmp
add
andb
aad
jae
iret
movsl
mov
popa
jg
adc
clc
std
sub
mov
sahf
sbbl
pop
sti
dec
push
loop
mov
in
inc
push
into
loopne
inc
xchg
sub
xchg
jg
pushf
mov
inc
push
sub
das
mov
mov
fists
xor
mov
enter
bswap
fdivrl
into
std
cmpb
ss
addr16
mov
add
mulw
jae
insb
jae
inc
xor
cmpsb
xchg
out
ret
imul
lods
es
insl
adc
push
out
test
xchg
lret
addb
and
jecxz
repz
add
cli
pop
jno
mov
addr16
inc
mov
xchg
xchg
mov
test
fcomp
cltd
push
mov
sbb
pop
inc
pop
add
xorb
insb
lock
dec
or
sbb
pop
shl
pop
test
fwait
icebp
lods
dec
mov
ljmp
jp
and
or
mov
hlt
out
leave
rdmsr
add
lret
popf
filds
mov
jns
push
in
jle
movsb
arpl
adc
loop
add
sti
cltd
andl
sbb
push
aaa
mov
std
popf
imul
int3
out
data16
xchg
xor
push
mov
les
add
xchg
rcll
mov
and
adc
mov
das
push
daa
push
aad
sub
push
pop
andl
fistpll
stos
or
mov
and
scas
sub
out
in
ss
loopne
push
cmc
sub
inc
and
mov
fidivrl
jecxz
scas
mov
add
cmp
push
dec
cmc
movsl
mov
test
arpl
push
pop
hlt
je
adc
ret
xor
dec
ss
and
shll
pusha
leave
clc
dec
test
and
in
mov
xchg
pop
pop
arpl
aam
out
cwtl
mov
jmp
adc
push
repnz
inc
dec
mov
push
enter
push
mov
faddl
xchg
sbb
jbe
rclb
sbb
cmovl
addb
insl
mov
in
fstl
shlb
xchg
subl
jmp
cmp
negb
into
or
es
andb
jno
rorl
and
lods
int3
mov
pop
jb
mov
mov
idiv
cmp
scas
and
popa
jle
push
fs
add
inc
xchg
dec
aam
call
addb
push
xchg
add
mov
dec
data16
jbe
test
adc
mov
mov
repnz
inc
mov
and
sbb
frstor
inc
cld
mov
ret
in
mov
repnz
xchg
jge
cmpsb
and
es
push
fnsave
jle
imul
mov
test
or
flds
lock
jmp
dec
pushf
sbbb
shlb
mov
outsl
or
lods
in
sub
aas
adc
cmc
pop
shl
mov
dec
push
ljmp
push
ret
mov
mov
test
xchg
jg
std
into
mul
ljmp
xchg
std
mov
fwait
pusha
jecxz
jae
das
push
iret
jge
sub
add
push
push
or
push
out
ljmp
loope
in
lods
lea
push
push
jnp
add
cmp
lds
clc
out
cltd
mov
addb
sub
pushf
test
je
lret
repnz
cwtl
push
scas
xchg
rorl
mov
dec
push
dec
lds
mov
jecxz
xorb
loopne
mov
das
xor
mov
push
adc
test
push
push
mov
test
pop
rcrb
movl
rorb
lods
outsb
push
cmp
xchg
pop
pop
leave
push
jnp
js
pop
jmp
test
mov
sbb
xlat
xchg
adc
scas
cld
and
xor
popa
jo
mov
xchg
rcll
push
mov
nop
pushf
stc
outsb
xchg
push
xor
xchg
shr
flds
ss
cli
adc
mov
xchg
push
sub
imul
jecxz,pt
xor
and
adc
or
dec
mov
and
xchg
lock
aaa
loope
imul
icebp
xchg
lret
fcmovb
xchg
xor
lahf
jbe
imulb
jne
testb
jp
inc
mov
sub
and
jno
mov
sbb
sbb
mov
mov
ret
lds
ja
push
mov
das
hlt
ret
or
out
shlb
push
imul
push
pop
xor
push
dec
xor
cld
pop
push
mov
test
ds
lods
mov
iret
lcall
cltd
push
mov
loopne
ds
or
or
data16
aas
pop
jno
popf
push
cltd
test
inc
arpl
lahf
xchg
ljmp
dec
jae
push
insl
pop
rclb
les
enter
or
inc
loop
or
cs
cli
pop
decb
loopne
mov
notb
push
sbb
jbe
xchg
and
ret
fisttps
adc
lret
int
loope
adc
aaa
out
cmp
rolb
je
icebp
iret
mov
in
sbb
mov
add
push
pop
sahf
jl
jbe
sti
ds
sbb
mov
sub
cmp
and
loopne
pop
lods
hlt
xor
ja
lcall
or
sub
jo
sub
loop
mov
sub
ret
testl
mov
push
fldt
into
mov
sbbb
fistpll
lcall
or
mov
xchg
jne
push
mov
xchg
adc
scas
mov
fldt
imul
xchg
push
mov
mov
xcrypt-cbc
cmpsl
sarl
mov
pushf
fsts
sub
or
push
shrl
imul
nop
xchg
mov
sub
lcall
ljmp
sbb
xchg
addr16
dec
xchg
mov
mov
push
inc
jo
sbb
ret
in
icebp
fildll
mov
adc
testb
xchg
clc
out
mov
sbb
mov
int3
and
mov
in
add
dec
pop
cmp
cmp
loope
lock
xchg
push
and
repnz
xchg
das
pop
addr16
fst
and
push
lcall
out
mov
dec
and
outsl
sti
ljmp
pusha
adc
cmpsb
mov
scas
jmp
pop
add
dec
popa
and
cmc
fsubl
fldt
and
iret
sarl
xor
jmp
orb
test
stos
push
xchg
push
je
lcall
adc
setg
cmc
mov
jo
mov
outsb
outsb
je
popf
and
call
inc
inc
and
in
add
pop
int
pop
push
shlb
inc
jle
or
repz
stc
loope
shrl
movsb
xchg
int3
test
test
icebp
call
lcall
rorb
or
sub
lods
sub
add
push
ja
popf
xchg
gs
sub
stos
sahf
xchg
sub
jns
pop
lea
mov
or
mov
adc
mov
js
outsl
mov
push
fstp
add
jp
sub
and
dec
xlat
lret
and
arpl
xchg
inc
dec
jecxz
add
ljmp
or
pop
aam
inc
mov
icebp
pop
jo
movlps
dec
or
scas
push
pusha
movl
ljmp
subl
push
rolb
inc
popa
mov
imul
cli
repz
hlt
lods
and
push
or
negb
push
push
fs
or
jmp
and
mov
add
mov
mov
ja
repz
push
xchg
and
sahf
lret
sti
sub
pop
fstl
inc
xchg
dec
repz
sub
jb
fsubrl
sysret
mov
push
mov
les
cmpsl
mov
add
popf
js
inc
pop
push
aam
test
stc
sbb
ss
cli
cwtl
adc
push
cmp
add
inc
test
test
mov
mov
test
mov
adc
jge
add
fwait
mov
and
sub
mov
stos
jb
pop
pop
hlt
xchg
jno
inc
push
sub
jnp
movsl
enter
jl
js
int
js
add
adc
xor
ja
fisubl
xlat
mov
stc
lods
adc
mov
pop
stc
lea
insl
rcll
or
andps
push
pop
and
cmp
aas
fstpt
mov
ds
fsubrs
jmp
ror
mov
data16
leave
in
stos
push
push
cmc
sahf
outsl
jp
or
push
add
jo
jmp
xor
in
arpl
xor
enter
mov
out
lahf
shl
dec
orl
aas
repz
jbe
leave
inc
inc
icebp
and
mov
sub
mov
cmpsb
mov
jl
das
out
popf
and
lret
stos
jns
fistpll
mov
js
sti
add
jae
inc
jae
je
call
mov
lahf
xchg
stc
repz
mov
fcomps
push
jg
imul
sbb
shlb
cmp
popf
pop
lahf
cmp
mov
sbb
test
fnstenv
pop
int
push
std
sbb
into
pop
pop
pushf
xor
pop
or
lcall
sahf
mov
sbb
ja
clc
ljmp
xchg
ljmp
jns
out
lds
call
fisttps
jne
and
out
stc
and
addr16
mov
fcmovnu
icebp
loop
cmp
sub
scas
jnp
daa
bswap
clc
movsb
fnstenv
outsb
mov
xor
xchg
inc
ret
daa
jge
mov
mov
add
xchg
add
loope
mov
jecxz
add
and
test
ja
jle
xor
stc
repnz
jns
cld
mov
sbb
clc
push
std
mov
negb
xchg
mov
sub
sbb
mov
xor
sub
push
xlat
and
pop
lods
cmpsl
repz
cmp
inc
loope
mov
shlb
loope
adc
add
lret
dec
sub
mov
xor
ror
ljmp
cli
mov
outsl
loop
xor
inc
or
inc
imul
std
xchg
inc
addl
jne
and
call
cwtl
cmp
jns
faddp
cmpsb
jnp
mov
inc
or
bound
mov
sbb
dec
scas
xor
in
mov
gs
ljmp
sub
push
imul
into
push
negb
call
adc
ror
loop
push
movsb
pop
test
pop
das
flds
xchg
insl
cmp
sbb
nop
jmp
cs
js
ret
push
insl
scas
aad
push
nop
sbb
lcall
jp
lea
js
fsubrp
ja
xchg
sub
cmp
sub
push
out
sbb
loope
sbb
cmpsb
cwtl
cmp
shrb
push
or
cmp
test
cli
arpl
js
sbb
mov
das
inc
ret
mulb
addr16
jne
xchg
mov
sbb
lahf
dec
mov
and
sub
mov
push
movsb
int3
fbld
mov
cmp
insb
inc
mov
rorb
int
out
sub
mov
lcall
mov
add
push
dec
incl
add
aaa
in
or
dec
sbb
daa
loopne
test
cmp
loopne
or
jbe
je
mov
sub
cld
cmp
sarb
xchg
xor
xor
push
mov
addr16
jecxz
sub
xor
lret
ja
xor
ss
mov
mov
les
cmc
xorl
call
xchg
jg
dec
fildll
push
das
or
xor
lcall
gs
adc
cs
enter
push
xor
jge
inc
andl
scas
lcall
mov
cld
js
clc
push
cmpb
shrb
jb
jno
add
addr16
inc
divb
mov
lds
loop
push
cmp
test
xchg
popl
pop
mov
jecxz
sbb
pop
push
jno
rcl
push
mov
addr16
stc
xor
int
mov
sub
adc
xor
hlt
jnp
dec
cmp
inc
or
mov
fidivrs
dec
lds
sahf
jno
filds
jp
fbstp
mov
js
or
mov
frstor
out
cmp
mov
into
cmp
jg
mov
mov
xchg
out
add
outsl
push
pop
clc
aaa
dec
dec
mov
sub
iret
and
clc
xchg
xor
orb
sub
and
outsb
scas
push
pop
leave
inc
repnz
inc
jo
pop
out
dec
int3
test
and
jle
dec
into
cltd
fcmovb
adc
adcb
ret
adc
xchg
sub
je
jo
push
xchg
lcall
loope
scas
cmpsl
and
loope
pop
pop
stos
nop
xor
popl
dec
push
cmp
jno
iret
clc
mov
dec
jbe
loop
push
mov
or
mov
shll
scas
mov
inc
mov
jge
fdivl
lcall
push
sbb
sbb
lods
mov
cmp
cli
orb
ret
add
gs
xchg
aas
mov
dec
packuswb
inc
sbb
pop
shll
pop
mov
out
dec
jmp
mov
inc
fidivrs
add
dec
push
int
outsb
mov
shlb
xchg
imul
sbb
push
addr16
std
movsl
insb
sub
lahf
loop
or
sub
jbe
push
jmp
lock
jmp
cs
mov
cmp
into
cmp
mov
cli
cmc
jnp
sub
add
pcmpeqw
adc
jle
hlt
testl
loop
push
xor
addl
pop
pop
sub
dec
sbb
sbb
xor
push
and
repnz
insl
ret
sub
ficoms
xlat
mov
add
and
mov
cmp
test
cmpsb
test
push
jge
and
cld
cmp
mov
loope
movsb
divl
push
mov
mov
lods
jecxz
stc
xor
out
rorb
lret
mov
fdivs
pop
cmpsl
xchg
or
jnp
test
push
pusha
jp
jmp
loopne
inc
cmp
shll
loope
jmp
or
fisubrl
mov
adc
push
sbb
xor
out
xchg
mov
inc
aam
xor
cmp
pop
xchg
or
cmc
fidivrl
xchg
dec
icebp
mov
and
add
arpl
inc
ret
lcall
push
call
xchg
and
xor
shll
xchg
inc
xchg
in
outsb
jmp
add
ja
and
inc
js,pt
pop
xchg
push
lock
fdivr
adc
add
push
in
sbb
stc
pop
shr
push
sbb
inc
add
lahf
addr16
mov
das
push
dec
inc
sbb
call
or
fcoms
das
push
inc
sbb
push
int
stos
push
or
mov
bound
aaa
iret
and
xor
sbb
push
movsl
fsts
gs
loope
mov
push
sbb
pop
push
sbb
xchg
xor
aad
in
pop
das
cwtl
mov
mov
icebp
sbb
push
pop
jbe
shl
push
iret
idivb
lret
cmovo
pop
icebp
mov
pmulhuw
cmpsl
repnz
or
lods
jb
sbb
stc
mov
xor
jb
dec
push
lock
add
xchg
popl
shll
push
pop
adc
mov
es
pop
sub
mov
sub
pop
and
xchg
add
movb
movsl
cmc
mov
pop
jne
enter
popa
cli
lea
sub
cmp
aad
sub
ror
scas
xchg
push
cltd
mov
int3
xlat
sub
icebp
adc
popa
ja
lret
jle
lods
lea
in
lret
mov
push
xchg
mov
dec
pop
mov
or
push
stos
loope
sahf
and
bswap
pushf
cld
push
outsb
insb
sub
cmp
ljmp
ljmp
icebp
out
push
add
mov
cmp
aaa
cmp
movsl
pop
shll
push
testb
xchg
ss
adc
sbb
push
lret
out
scas
add
mov
adc
push
mov
popa
pop
push
pop
pop
popa
pop
push
mov
cld
or
cs
push
sti
test
push
jg
and
push
or
insl
mov
test
into
xchg
dec
mov
sar
xchg
dec
subl
sbb
fcmovnbe
adc
in
out
lret
cli
aam
xchg
rolb
loop
ljmp
cmc
test
les
sub
scas
mov
push
push
mov
fidivrl
xchg
notb
sbb
add
cmp
in
movsl
jp
jle
mov
test
and
cmp
sub
sbb
xorl
cld
cltd
outsl
push
popa
cli
or
mov
clc
cmp
aas
mov
fmull
jecxz
in
pop
cmc
lea
out
in
sub
mov
test
imul
pop
pop
pushf
mov
insb
sbb
cmp
aad
mov
fs
jmp
inc
js
add
out
cmp
adc
cmp
jb
out
insb
xchg
adcb
cmpsb
mov
scas
test
mov
cmp
aaa
xchg
push
jo
pop
mov
mov
dec
push
popa
rcl
dec
pop
cmpsb
aas
scas
aad
pop
sub
loopne
jbe
imul
jge
sbb
or
pop
push
cltd
mov
bound
outsl
fadd
mov
sub
stos
pusha
cs
sti
lret
sbb
push
repz
mov
push
cmc
fildl
push
out
push
lahf
mov
mov
loopne
ljmp
xorb
add
xchg
mov
xchg
push
stc
int3
pop
cwtl
jl
inc
nop
xor
pop
mov
lret
clc
sbb
cld
jmp
jns
int3
push
dec
in
pushl
loop
shrb
inc
mov
hlt
in
sbb
sub
sub
mov
xor
and
add
stos
shrb
andb
jg
loope
mov
stc
call
call
arpl
bound
sahf
repnz
add
mov
xor
xlat
cwtl
xchg
roll
mov
add
jp
push
push
dec
test
test
or
and
xchg
adc
sub
add
and
cmp
add
popf
or
arpl
lret
in
in
fistpl
test
push
jg
imul
fisubrl
test
out
sti
sub
mov
out
add
mov
repnz
mov
mov
mov
push
popa
mov
negb
faddp
sahf
sbb
fs
mov
inc
xchg
test
lods
int
sbb
les
dec
jno
inc
insb
aam
int
jb
xor
ss
jbe
aas
push
jl
test
enter
push
addl
jns
mov
popf
lret
fs
mov
fisubrl
std
sub
xor
jns
mov
inc
outsb
dec
jns
fcmovnb
ss
mov
iret
repnz
cltd
push
sbb
pushf
punpckldq
cmp
das
or
sub
cmp
repz
ret
pusha
push
mov
shll
xor
add
bound
lahf
pop
adc
cli
jns
ds
cmp
xor
out
lods
sti
hlt
add
xor
test
pop
xchg
add
into
fstl
gs
cmpsb
and
lea
jl
icebp
lods
out
stc
out
mov
or
int
aas
dec
cmp
mov
dec
pop
fisubrs
out
dec
and
pop
push
mov
mov
pop
push
dec
movsb
push
push
mov
mov
daa
mov
adc
or
mov
ds
xchg
mov
push
xor
and
jge
fists
dec
jge
ror
mov
jge
shl
add
and
lahf
repnz
loopne
add
adcb
jnp
ret
repz
jmp
sub
dec
mov
adc
dec
or
pop
xchg
mov
popf
push
push
push
pop
testl
jae
cli
and
pop
cmc
loope
sbb
dec
cld
pop
inc
out
addr16
outsb
rorl
adc
mov
fmuls
mov
loope
out
inc
mov
lahf
sbb
mov
push
scas
js
inc
sub
lods
sub
sub
pop
mov
int
push
and
jge
jmp
cwtl
or
test
xchg
sub
jo
bound
mov
insb
outsb
push
mov
jg
lods
push
scas
add
inc
push
cmp
jecxz
jle
push
in
popa
fcoml
jecxz
jmp
adc
push
push
xor
dec
ficomps
xchg
mov
std
outsl
and
fldcw
xchg
mov
sbb
xor
gs
pop
imul
fldenv
push
or
fidivrs
scas
pop
mov
and
jno
ljmp
pop
mov
mov
adc
mov
and
aaa
and
cmpsl
imul
xchg
sbb
iret
ljmp
pushf
sub
scas
cs
fldenv
push
mul
in
push
mov
adc
fisubs
sub
push
enter
sub
testb
ljmp
dec
xchg
repz
out
xchg
and
sub
ret
mov
jge
sbb
js
or
adc
mov
stc
pop
sahf
pop
and
mov
fwait
adc
jmp
stos
incl
cmpsl
int
mov
sti
and
aam
fsubrl
in
mov
sub
orl
in
imul
stc
scas
test
push
xlat
fwait
rcrb
ja
sbb
push
ror
loop
mov
dec
mov
xor
mov
fbstp
jg
and
cld
es
xchg
out
jns
and
xchg
pop
fimuls
inc
andb
frstor
nop
mov
mov
xor
mov
jo
or
xchg
xor
adc
adc
mov
inc
pushf
push
movsl
jle
aas
fisubl
js
jne
ds
das
iret
mov
xor
sub
cmp
andb
aam
adc
lods
in
adc
fdivs
mov
mov
cmpsb
sbb
int
sbb
and
cmp
sti
mov
fsubs
sbb
jmp
pop
sbb
and
scas
and
adc
mov
xchg
mov
lock
fldl
sti
pusha
cmp
lret
test
jo
dec
sub
cld
aaa
jno
and
inc
test
push
xlat
iret
sar
push
xchg
xchg
mov
cmp
fisttpl
mov
mov
test
movsl
je
jnp
and
stos
mov
lret
ret
dec
lahf
xchg
mov
loop
jecxz
and
and
push
icebp
mov
xlat
and
cmp
mov
stc
adc
push
shr
mov
xchg
insb
push
pop
jmp
repnz
sbb
push
mov
shll
cwtl
clc
mov
stc
push
push
fistps
jg
xchg
mov
repnz
add
sub
movsl
lods
js
popf
adc
ds
xor
push
inc
and
insl
pop
inc
sbb
gs
or
stos
jne
xor
push
and
jecxz
sbb
mov
gs
iret
mov
mov
push
xchg
je
fs
and
push
add
jbe
jo
inc
lods
mov
and
mov
mov
int
mov
out
fcmovb
ja
xchg
insl
adc
outsb
xor
add
divl
popa
test
lahf
pop
aad
ja
shll
or
push
mov
or
fwait
pop
push
subl
ss
mov
adc
pop
into
or
inc
or
adc
out
xchg
jnp
nop
shrb
dec
sarb
mov
shl
sbb
mov
inc
xor
pop
adc
jo
aad
push
xchg
test
cmp
cmp
and
sbb
stc
mov
sub
cli
push
mov
das
int
leave
pop
lcall
dec
loop
int
scas
ljmp
sub
dec
cmpsb
xchg
sbb
les
inc
test
add
dec
add
add
aam
in
inc
das
push
mov
sub
mov
outsl
lods
cmp
aad
push
jp
mov
cmc
xorl
mov
sub
mov
and
in
add
jle
and
jnp
jbe
orb
shll
lods
or
dec
nop
rcr
and
lds
dec
in
pop
cmp
and
out
sub
jbe
jp
mov
lods
pop
movsb
and
xchg
test
adc
mov
add
lds
lahf
xchg
mov
pop
pop
lock
cmp
xor
inc
adc
cmpl
jns
xchg
gs
insl
lods
jno
testb
and
repz
inc
lods
mov
or
test
xchg
mov
dec
std
outsb
aad
jbe
jg
iret
or
adc
shrl
out
out
and
lea
divl
jecxz
dec
pop
imul
sub
sbb
pop
enter
xchg
lret
int3
scas
das
inc
ja
dec
sbb
arpl
adc
cs
lret
mov
sub
sbbb
mov
dec
shrb
lret
jo
inc
outsl
mov
or
into
rcll
xchg
aam
fld
fs
std
xchg
xchg
iret
sbb
sub
mov
aaa
dec
sti
flds
add
mov
test
data16
xchg
gs
cli
lret
cmp
loope
inc
push
das
out
mov
add
movsl
mov
fstl
leave
add
into
or
adc
jo
xor
jecxz
mov
sub
jne
xchg
add
outsb
js
cltd
adcl
aas
stos
fdivl
add
sbb
inc
xchg
push
addb
fisubrl
lods
out
in
icebp
inc
add
adc
push
xchg
adc
jecxz
cwtl
cmp
out
push
pop
stc
dec
iret
cmc
testb
into
aad
aam
mov
sub
pop
push
fsts
pop
sub
pop
pop
or
mov
jge
xor
push
mov
pop
push
inc
inc
adc
adc
aam
mov
and
jge
push
pop
add
sbb
mov
jl
xchg
push
sahf
jp
adc
add
pop
mov
shrl
insb
fwait
pop
pop
mov
inc
mov
data16
dec
test
mov
mov
cltd
inc
daa
aad
mov
inc
mov
in
jae
fcmovu
cmpl
movsb
cmpl
imul
sahf
loope
lods
mov
pop
loope
xlat
inc
fwait
mov
cmpl
pop
sub
mov
in
in
jmp
jg
js
cs
jno
insl
ret
cmpb
cmp
lret
push
test
je
inc
pop
movsl
bound
jmp
loope
xchg
loope
jg
lock
inc
repz
sub
stc
xchg
lods
xor
jmp
sbb
aam
adc
xorb
push
rorl
adc
ret
mov
into
sub
test
pop
jbe
cltd
or
scas
jae
test
iret
iret
xchg
or
push
sub
jne
cmp
pop
insb
testl
sarl
adc
les
add
int
push
fcmovne
or
xchg
cmpsb
sbb
pop
ret
hlt
int
ja
std
xchg
ss
punpcklwd
gs
mov
jne
cmp
cmp
lret
xchg
dec
aad
pop
insb
movsl
loop
imul
xchg
lea
popf
test
cmp
sub
inc
daa
cmp
iret
addr16
xchg
xchg
enter
xchg
jns,pn
jl
aas
insl
cmp
stc
flds
mov
fsubs
jns
push
lods
and
mov
xchg
sahf
paddb
mov
adc
lock
jp
jb
out
push
pop
push
mov
jmp
dec
xchg
in
push
inc
mov
jle
popa
sub
sub
pop
cmp
sbb
cmp
data16
hlt
mov
dec
scas
rcrl
mov
ds
sbb
dec
std
in
cmp
dec
mov
in
sbb
repnz
xchg
or
and
adc
pop
jbe
xchg
mov
and
xor
sub
sbb
sub
mov
orb
dec
popf
push
rorb
outsl
adc
pop
sub
cmpsb
jecxz
xor
mov
mov
cmp
adc
inc
xor
dec
or
cmp
movsl
and
jno
mov
mov
cmp
daa
iret
ss
ss
push
sbb
sbb
dec
popa
in
mov
popa
and
add
cs
adcb
packssdw
dec
mov
ds
movl
inc
repz
inc
and
aam
push
das
inc
xchg
pop
push
xchg
pop
or
int
push
or
loope
lds
jle
cwtl
xchg
mov
gs
mov
les
out
pushf
mov
push
andl
gs
fsubl
in
outsl
popa
inc
out
cmp
push
and
cmp
and
fcom
adc
rclb
jae
xor
jno
xor
stos
adc
into
lret
in
xor
push
inc
or
sti
out
adc
sti
xor
dec
xchg
test
daa
icebp
mov
add
push
cmp
addb
lods
adc
inc
push
sub
out
rcrl
repz
ss
and
loope
and
sbb
add
mov
jl
mov
movsb
mov
cld
jl
jl
jle
fiadds
pop
cmp
loope
cmpsl
fdivs
pop
push
and
outsl
mov
pop
push
aam
xlat
jl
jmp
pop
jno
cmp
rcr
mov
popa
stos
pop
mov
in
or
lret
jmp
push
fstps
or
test
dec
inc
sbb
cltd
out
inc
jae
mov
imul
sbb
insl
scas
icebp
push
jae
jle
xor
testl
jg
xor
roll
js
or
fldenv
sti
fidivl
out
pop
stc
xchg
jecxz
xor
aas
mov
cmp
ret
xor
ja
add
jo
leave
sahf
mov
add
cmp
cmp
testb
jg
mov
mov
aam
mov
adc
adc
sbb
les
mov
push
out
lods
subb
test
call
rorb
dec
xlat
push
pop
pop
cwtl
dec
push
imull
sub
jl
ljmp
dec
xor
std
imul
or
ja
push
dec
xchg
mul
mov
jnp
fstps
xorb
jle
je
mov
push
icebp
call
xchg
adc
xchg
mov
mov
scas
lds
std
roll
repnz
jge
subl
pop
and
les
sbb
leave
mov
jg
and
mov
xor
push
inc
sub
push
imul
sbb
into
mov
repnz
shlb
mov
outsl
leave
mov
mov
push
mov
fcmovnb
add
push
sub
cwtl
std
lods
leave
xor
jno
aam
add
xor
stos
sbb
fs
cmpsb
fs
hlt
pop
leave
fxch
xchg
incb
ljmp
or
or
cwtl
mov
mov
mov
jns
bound
push
je
mov
adc
pop
sub
push
mov
push
xchg
repnz
mov
shlb
out
popf
mov
enter
cmp
inc
clc
xchg
pop
dec
jmp
out
cli
ds
or
and
push
je
sarb
cs
iret
mov
cmp
mov
pop
test
mov
cmp
xlat
push
flds
push
mov
push
add
sbb
sbb
scas
ret
mov
ret
pop
fs
loop
insl
mov
mov
adc
sti
mov
cmp
xchg
leave
outsb
mov
inc
clc
lcall
ss
push
idivb
pop
dec
movsl
xor
pop
xchg
dec
test
nop
and
push
cmpsb
outsl
mov
mov
mov
jo
lcall
jp
mov
inc
mov
ja
xchg
notb
loop
xor
xchg
rcr
cmp
iret
enter
dec
loope
sbb
mov
fwait
hlt
into
push
xchg
inc
lcall
add
jle
push
or
mov
cmpl
int
fsubr
inc
lret
and
int3
xchg
cmpl
mov
or
or
stos
mov
mov
jb
dec
add
icebp
cmc
add
and
and
mov
adc
inc
stos
popa
jbe
pop
outsb
push
jl
insl
xchg
sti
sbb
and
jbe
xor
xorb
jecxz
mov
fdivs
ljmp
jnp
nop
xchg
data16
mov
jg
rol
push
ds
mov
das
xchg
in
mov
or
stos
inc
xchg
lret
scas
mov
xlat
jbe
lock
nop
mov
in
lds
jg
push
pop
inc
or
in
sbb
jns,pn
out
xchg
pop
in
dec
jnp
xor
lock
cld
add
loope
push
jae
aam
inc
fyl2x
movsb
mov
sbb
movsb
or
xchg
ret
xchg
frstor
imul
lahf
insb
stc
xchg
mov
rorb
sbb
shrl
cmpsb
dec
push
or
pop
inc
sbb
jl
push
bound
dec
xchg
aad
out
push
in
lock
jnp
pusha
das
loopne
xor
rorb
stc
mov
mov
loopne
jnp
sbb
mov
mov
dec
mov
out
dec
add
push
and
in
pop
mov
shrb
fisttps
xchg
dec
mov
mov
test
xor
mov
cmc
cmpsl
dec
data16
fidivrl
jae
adc
jno
push
nop
mov
cmpsl
mov
leave
pop
and
cmp
fwait
jb
les
cmp
push
jbe
push
ret
jecxz
or
test
int3
outsl
or
fcompl
in
jecxz
sbb
xchg
xor
subb
hlt
ret
and
inc
adc
ljmp
mov
sbb
pop
rorb
scas
icebp
xchg
and
mov
jb
jae
add
aas
inc
push
sub
or
lods
outsb
ss
call
mov
push
add
and
lahf
clc
fidivl
jl
loope
add
lods
hlt
insl
aaa
sub
push
sbb
das
lock
scas
daa
dec
fucom
mov
sbb
cmp
or
or
imul
sub
pop
test
xchg
ror
test
arpl
mov
and
add
mov
or
sbb
sbb
mov
xchg
lret
pop
lcall
xchg
test
hlt
stos
fstpl
cmp
movsb
stos
mov
push
pop
sbb
lahf
insl
fnstenv
gs
iret
xor
scas
push
shl
mov
jne
sarl
lods
in
aaa
jle
stos
or
push
add
gs
pop
adc
mov
xchg
mov
arpl
cmp
pop
mov
daa
fmuls
fildl
sbb
bound
xor
push
or
pop
mov
popa
lea
icebp
xchg
dec
sub
mov
icebp
push
pop
adc
out
mov
pop
jmp
adc
icebp
push
andl
pop
push
sbb
mov
mov
insb
lock
add
fstps
imull
rolb
push
push
mov
pop
sub
fiaddl
je
imul
xor
aaa
popf
rclb
idivb
inc
sbb
setge
xor
int3
nop
and
pop
loopne
jb
icebp
std
cli
bnd
push
stos
mov
and
repz
xchg
add
mov
push
and
jg
mov
mov
dec
inc
sarl
or
xlat
or
push
xor
inc
out
fwait
lahf
inc
push
fs
das
sbb
push
mov
mov
movsl
inc
adc
push
jl
xchg
jne
mov
push
xchg
in
cmp
push
fdiv
adc
rclb
lds
mov
fisubl
pop
jle
add
cmp
pushf
add
or
mov
jge
mov
popf
mov
js
cmp
mov
and
cmovae
inc
test
jge
loope
loop
daa
outsl
mov
xchg
out
adc
cmpsl
lods
xchg
fs
cmpl
or
add
lea
mov
int
lahf
push
cwtl
call
and
xchg
cwtl
loop
sub
sub
inc
repz
sbb
and
mov
xchg
stos
shl
ja
fnstenv
bound
mov
addb
iret
push
out
pop
push
pop
ljmp
shl
xchg
push
loope
mov
xor
cmp
outsb
jns
jae
sahf
pop
test
inc
adc
sbb
inc
push
xlat
jae
lret
mov
cmpsb
int
xor
xor
negl
jge
xchg
push
fnsave
sbb
std
lea
sbb
mov
test
popf
and
inc
int
adc
xor
mov
xor
int
sbb
jae
cs
xchg
jne
pop
mov
cmp
mov
sub
int
and
aas
jp
xchg
push
pusha
add
aas
dec
in
pushl
stc
pop
lcall
les
pop
cmp
cmp
mov
and
and
cmpsb
call
add
div
pop
add
fists
xor
call
mov
into
xchg
clc
inc
mov
jmp
es
jl
dec
sbb
inc
ljmp
xchg
mov
in
bound
loopne
movsl
jnp
jmp
push
push
jo
clc
fnstenv
fst
mov
imul
push
out
inc
rcr
sarl
repnz
data16
push
lock
lcall
mov
pop
dec
add
mov
mov
and
and
in
sub
mov
fildll
stos
or
fwait
sub
xor
mov
lahf
xor
add
cmc
test
fists
repnz
into
imul
pop
daa
aad
mov
imul
clc
and
xchg
pop
mov
and
ret
mov
adc
pop
in
xlat
rcr
push
fldl
mov
movsb
addr16
out
int3
loopne
inc
fucomi
jne
and
in
mov
jg
movq
and
mov
mov
loope
dec
in
jp
aas
and
js
xchg
test
inc
and
push
fistps
push
mov
shlb
mov
adc
or
std
push
jb
xchg
ret
test
dec
push
cmp
out
adc
add
mov
hlt
test
sub
lea
mov
jnp
inc
dec
pop
mov
jmp
sbb
push
outsb
inc
inc
fbstp
setge
dec
ljmp
xchg
test
pop
xchg
repnz
stos
pusha
sahf
lret
dec
sub
idiv
mov
and
sbb
pop
adc
out
fwait
xor
leave
xlat
stos
divb
loopne
inc
jmp
cmp
cmp
inc
test
ds
pop
das
add
mov
xor
or
jge
pop
fs
stos
adc
fs
out
lods
shll
dec
loope
nop
cmp
daa
jle
mov
sub
inc
push
gs
xor
mov
and
add
pop
xor
arpl
add
test
cmc
pop
leave
jl
stos
aas
fstpl
mov
out
sub
jae
jbe
pushf
ja
mov
jno
cmpsl
xchg
out
pop
inc
cld
test
pusha
leave
icebp
inc
add
inc
lock
push
ja
movsl
dec
aad
fwait
das
lock
mov
clc
ds
or
leave
lret
add
inc
push
stc
fimuls
sbbl
xchg
pop
int3
and
subb
test
fcmovbe
icebp
out
inc
in
ss
xchg
adc
or
scas
xchg
or
xchg
mov
je
aad
and
push
cli
mov
inc
lret
push
scas
leave
out
adc
mov
ret
or
loop
jp
mov
idivl
inc
je
mov
data16
or
mul
adc
dec
mov
lock
ret
jb
xchg
scas
dec
fcompl
cmp
lea
ret
push
mov
int3
shrb
mov
jg
test
cmp
fistpll
pushl
cmpsl
lods
insl
dec
xchg
push
xor
cltd
or
add
jg
cmp
faddp
sbb
cmp
pop
cmpsl
lods
jmp
dec
jnp,pt
pushf
xchg
into
cmc
mov
rorb
pop
arpl
notb
mov
ljmp
and
das
repz
mov
mov
imul
imul
sbb
fldenv
mov
and
xor
mov
les
push
cmc
loope
inc
pop
je
mov
aaa
mov
xor
insb
jae
rcrl
push
xchg
insb
push
call
adc
repnz
loop
les
sti
aaa
lea
jno
push
fistl
jbe
push
inc
and
lea
test
lods
or
mov
cmp
sbb
pop
mov
loope
add
repnz
into
mov
rcll
lcall
push
push
cmpsl
aaa
movsb
ret
fcomip
aam
jl
jnp
cmp
daa
mov
jns
xchg
fmul
sbb
add
rorb
stos
push
mov
mov
or
push
add
inc
inc
mov
ljmp
imul
or
adc
repz
mov
pop
xor
ja
mov
mov
mov
in
cmp
data16
and
bound
lock
xor
scas
out
push
ja
je
lods
sahf
xor
cmp
pushf
push
iret
mov
jg
jmp
cmp
jle
inc
dec
jmp
mov
push
nop
push
into
sahf
jg
xor
mov
or
add
mov
pop
pop
lock
outsl
scas
insl
add
mov
testl
push
add
pop
cs
xchg
shlb
test
pop
jo
bound
repz
jb
cli
adc
gs
mov
fcomps
sub
dec
or
sbb
arpl
or
push
pop
sbb
cmpsb
mov
out
mov
jbe
aas
stos
xchg
out
imul
xlat
repz
and
sbbb
mov
push
movsl
mov
sahf
or
or
imull
sub
mov
cmp
adc
bound
ror
xchg
repz
aaa
shll
push
movsb
xor
sub
inc
das
ds
lods
xchg
mov
les
repnz
cmp
iret
orb
cmp
push
or
dec
shlb
lcall
and
js
ljmp
xchg
add
outsl
test
mov
out
stos
inc
add
jno
sub
sub
or
shrb
and
movsl
int
or
iret
push
sub
das
out
jo
cli
outsl
push
je
sub
xchg
adc
inc
pop
sub
pushf
mov
xor
ja
fisttpll
cmpsl
mov
push
push
and
fisubs
adc
shlb
subps
jg
xor
pushf
jge
mov
loope
pop
sbb
psubb
imul
sub
data16
inc
mov
sbb
pusha
cwtd
pop
jg
or
mov
fistpl
ss
cmpb
mov
mov
inc
je
stos
arpl
jg
inc
fldcw
call
bsf
and
adc
js
inc
stos
pop
mov
cs
mov
xor
mov
mov
pmulhw
outsl
movsb
sub
pop
rorl
xor
jb
fbstp
call
in
mull
add
adc
mov
mov
cwtl
scas
fwait
push
aad
int3
imul
sbb
sahf
fsubrs
cltd
arpl
in
jp
idivb
add
clc
lds
mov
xor
js
jns
or
pop
loope
sti
mov
sti
dec
push
rorb
fucomi
in
sbb
mov
sbb
push
xchg
and
xor
ds
mov
dec
cli
push
ret
fdivrl
insl
cmp
mov
dec
shll
jo
cld
sub
xor
xor
stc
mul
xchg
decb
ss
dec
pop
sbb
repnz
pop
shr
push
leave
inc
daa
mov
xchg
loope
jecxz
cmp
stc
sbb
mov
lea
mov
es
aas
dec
arpl
in
cmc
xchg
aam
inc
arpl
sbb
imul
jno
or
dec
sbb
ja
clc
out
cmp
sbb
mov
jmp
lret
das
mov
dec
insb
movsl
push
daa
fwait
cmpsb
xchg
lods
jbe
dec
push
and
mov
bound
mov
lea
push
filds
fildl
insb
or
outsl
nop
cmpsb
idiv
push
cmp
popf
or
xor
bound
xchg
outsl
xchg
sub
mov
scas
rcl
xchg
fists
bnd
mov
popf
in
pushf
pop
mov
xlat
aad
sub
or
add
mov
mov
push
inc
inc
scas
push
rol
add
inc
stc
gs
and
push
jb
xor
notb
jle
pop
sbb
imul
shll
xor
sbb
inc
jne
ud1
sbb
outsb
pop
fidivrl
mov
dec
bound
ja,pn
xchg
sub
pop
scas
imull
incb
jp
fstpt
mov
xlat
data16
movsl
pop
fwait
sub
test
xchg
sbb
lahf
ror
mov
xchg
incb
pop
mov
xor
data16
mov
jge
fstpt
add
movsl
mov
ret
mov
negb
sbb
mov
rorl
imul
jg
les
repnz
inc
add
in
and
filds
movb
and
push
jae
cmp
les
lods
in
push
scas
int
xchg
and
cmp
push
js
xor
stos
enter
dec
fisubrs
adc
mov
sub
pop
and
inc
xchg
xchg
mov
mov
xor
dec
ficomps
jl
xchg
cli
xor
sbb
inc
lahf
repnz
push
scas
cmp
sbbl
fwait
or
and
popf
movsb
xor
mov
jecxz
mov
call
insl
lea
mov
fbld
das
jg
xor
hlt
push
scas
add
loop
into
jg
add
sbb
popf
cmp
mov
jle
and
jne
into
outsb
cmp
add
mov
push
in
jecxz
pop
xlat
lea
sarb
dec
jbe
adc
jne
and
out
cmc
push
adc
dec
mov
add
adc
xchg
inc
push
notb
push
sahf
sarl
lcall
push
inc
and
xchg
sarl
ret
adc
sbb
push
xor
inc
insl
loop
and
adc
fcoms
inc
in
and
xor
jns
add
lcall
shrl
arpl
clc
mov
outsl
adc
or
mov
mov
into
inc
cwtl
out
jb
pop
stc
jb
mov
ss
js
js
sub
test
filds
cmp
dec
jmp
push
pmaddwd
lea
mov
jge
lret
rcrl
fnstenv
mov
scas
pop
dec
iret
loop
arpl
pusha
pop
inc
ja
cmp
or
fnstcw
xlat
xlat
add
sbb
xlat
inc
dec
lock
dec
mov
cmp
fisttpll
imul
mov
fistps
sbb
jle
add
jnp
aas
adc
mov
push
loope
dec
mov
jno
ret
pop
xor
mov
pop
or
mov
mov
pop
mov
cmp
test
test
icebp
dec
cld
mov
add
filds
add
arpl
in
out
and
dec
popf
push
std
out
jmp
lret
mov
lcall
leave
pop
or
push
dec
and
fildll
mov
adc
data16
std
adc
sub
dec
mov
movsb
xchg
xchg
xor
fucomip
fwait
cmpsl
add
push
push
inc
lods
out
sahf
adc
repz
dec
out
je
sbb
mov
arpl
sub
cli
out
and
push
or
in
adc
cld
xor
aam
jp
sbb
add
xor
push
inc
mov
sbb
insl
testl
xor
add
or
test
xchg
shlb
cld
xor
aam
lds
or
js
and
fsubl
mov
mulb
or
xchg
cli
mov
fcomip
scas
pop
int3
jge
push
xlat
fucomp
lcall
sbb
arpl
test
xchg
push
imul
and
repz
iret
lea
icebp
out
mov
mov
push
orl
jmp
cmp
ficompl
mov
xchg
or
cmp
fldl
add
mov
sub
sub
test
push
out
cmp
and
roll
adc
push
cmp
sub
xor
mov
sub
imul
lahf
push
mov
lret
and
push
ljmp
call
test
stc
test
rorb
into
dec
jle
out
ror
jno
es
imul
sbb
enter
pop
fwait
push
gs
int
and
sub
cwtl
or
push
jae
xchg
lods
lods
adc
cmpsl
dec
icebp
mov
ljmp
outsl
and
mov
lcall
xchg
cltd
add
mov
cmpsb
push
ret
adc
insb
mov
jbe
in
inc
pop
into
mov
push
stos
push
mov
cli
lret
cmp
mov
jmp
mov
pushf
imul
inc
adc
ficoml
pop
inc
sbb
jb
mov
out
pushf
xchg
not
das
jnp
mov
push
loop
das
xchg
std
icebp
aas
pop
movhps
fcomp
out
adc
jno,pt
adc
lods
out
push
cltd
jbe
inc
addr16
mov
rcrl
test
adc
movsl
xlat
jg
inc
adc
sbb
iret
js
xor
jnp
push
jb
popf
or
jo
aam
mov
mov
jno
faddp
in
stos
fidivs
push
mov
stos
inc
addr16
call
add
into
movsl
xor
or
nop
mov
mov
xchg
repnz
enter
addl
add
sub
cs
into
incl
pop
aam
mov
sub
mov
arpl
dec
mov
sub
adc
jae
adc
push
xor
mov
push
xor
jmp
xor
stos
xchg
dec
sbb
dec
sub
pushf
in
std
mov
cmpsl
fidivrl
dec
stos
and
and
and
pop
nop
pop
sbb
push
loop
es
arpl
stos
aaa
movsb
cmp
das
add
ret
sbb
and
lods
insb
dec
fildl
iret
push
xchg
fnsave
outsl
cltd
xchg
repz
push
sti
mov
xor
push
adc
pop
push
xchg
add
dec
push
jp
insl
out
xchg
in
sbb
mov
cmp
loop
and
fstps
add
xor
mov
scas
sbb
push
xor
jne
mov
pop
jle
push
mov
test
dec
mov
or
rcr
loopne
cmpsb
clc
push
ja
push
and
out
add
or
sbbb
or
cmp
das
adc
shrl
hlt
dec
xor
loop
aas
pop
inc
cli
sbb
lcall
and
dec
pop
cmp
out
test
mov
mov
pop
stos
lcall
mov
imulb
hlt
push
outsb
jmp
fdivl
popf
mov
jle,pt
sub
movsl
sub
lea
lods
ss
jbe
movsb
sti
adc
lret
dec
ffreep
cwtl
call
loope
hlt
iret
jle
push
mov
add
fwait
and
xchg
adc
dec
dec
enter
cmp
or
mov
mov
jo
es
sti
pushf
mov
into
stc
test
in
repnz
pop
es
ja
nop
bound
movsb
imul
push
jo
mov
rorl
lret
jbe
mov
ret
pop
mov
out
mov
sar
loop
cli
or
insl
adc
inc
sub
mul
cmp
fidivs
fildll
lret
xchg
or
stos
in
push
inc
xor
nop
dec
sarb
dec
push
test
adc
dec
sbb
and
insb
rcrl
push
icebp
add
lods
xor
mov
in
dec
cmp
cmp
in
mov
gs
and
mov
sub
and
xor
inc
je
xor
mov
repz
ljmp
rolb
stc
mov
jge
or
into
cmp
push
insb
ss
xchg
or
sub
cs
mov
in
imul
in
sbb
js
ret
cmpsl
pop
leave
dec
jbe
xorb
movsb
xor
rcrb
stc
sbb
imul
int3
mov
cmp
inc
imul
ds
pusha
mov
nop
inc
sbb
lock
sbb
lret
lods
inc
dec
or
push
mov
stos
stos
pop
dec
dec
adc
in
push
movsb
scas
adc
pushf
mov
popl
sbb
mov
je
dec
push
pushl
push
adc
adc
push
fcomi
pushf
mov
jno
dec
jle
fistpll
and
fs
fdivl
loopne
or
adc
jb
bound
sub
jl
mov
fdivrs
push
js
mov
mov
imul
loopne
test
add
mov
nop
scas
decb
movsl
and
pop
out
loope
aad
movsb
cmp
jmp
and
iret
std
adcl
in
arpl
mov
pusha
lods
loop
and
call
cld
and
stos
push
mov
dec
dec
notb
xlat
adc
aas
mov
pop
into
addr16
arpl
popf
mov
adc
push
sub
adcb
xchg
stos
call
xchg
notb
cltd
mov
addb
ficomps
rorl
sbb
into
jne
out
xchg
mov
jno
icebp
jp
outsl
es
mov
dec
and
cmpsb
push
pop
mov
push
adc
stos
xor
fadd
mov
jne
imulb
outsl
lods
icebp
sbb
push
adc
add
jno
dec
pop
in
xchg
sbb
sub
dec
test
push
xchg
cwtl
test
jnp
jmp
mov
movsl
subb
lcall
and
ficompl
xorb
xor
scas
adc
repz
xchg
pop
scas
cmp
xor
jbe
in
xchg
mov
mov
ficompl
call
push
sbb
xor
mov
lea
sbbl
pop
mov
aam
dec
add
add
in
sub
test
pop
jmp
addr16
jns
fdivs
push
xchg
enter
mov
repz
xor
repnz
popf
mov
fsubrp
xor
lret
jne
and
andb
mov
pop
insl
lahf
or
mov
cmp
fistl
vucomisd
push
lret
aam
cmp
out
jne
inc
incb
aad
cmc
in
sahf
cli
popl
push
in
mov
push
icebp
sbb
push
xor
mov
insb
dec
adc
cmp
pop
adcb
stos
inc
mov
mov
hlt
pop
mov
movsl
inc
push
insb
loopne
inc
scas
lcall
dec
or
xor
pop
hlt
mov
popf
cmpsb
andl
mov
sbb
ret
enter
out
xchg
and
jns
cmp
sbb
clc
sbb
repz
pop
aas
xor
pop
push
icebp
adc
mov
idivb
std
xor
lret
or
fmull
push
dec
sbb
xchg
adc
dec
jl
shl
jle
fldl
dec
shrl
rorb
ljmp
cmpsl
pop
adc
les
out
or
loop
push
in
adc
cmpsb
lea
icebp
mov
add
fisubs
mov
hlt
aas
aam
push
add
jle
aaa
popa
add
cwtl
fsubs
push
add
int
push
repz
inc
xchg
xor
dec
iret
sbbl
fistpll
xor
mov
pop
or
mov
cmp
insl
cmp
sarb
push
or
xchg
or
xor
sbb
xorb
ja
ret
mov
int3
sub
out
daa
or
repz
jns
popf
outsl
inc
testb
push
mov
adc
mov
aas
jae
push
aam
jp
cmp
frstor
in
lds
insl
xchg
pop
mov
pop
sbb
lods
adc
mov
fidivs
xchg
cmp
push
out
fs
lret
cwtl
pop
dec
dec
adc
arpl
lahf
xchg
lahf
xchg
mov
and
iret
fdivrs
adc
adc
std
es
jle
push
std
xchg
xor
jp
sub
test
jbe
jg
push
pop
dec
orb
lea
add
jg
lods
inc
mov
adc
out
nop
adc
mov
popf
push
out
mov
imul
out
rcll
in
test
out
scas
inc
inc
sahf
xor
sbb
dec
jl
lods
adc
push
inc
xchg
dec
cmp
push
pushf
xor
int3
sti
pop
nop
pusha
outsb
mov
pop
cli
repnz
in
das
xchg
dec
stos
cmp
mov
out
shr
xor
mov
ret
fstps
inc
adc
or
frstor
scas
mov
nop
sub
xor
mov
xor
movsl
stos
inc
sarb
mov
jnp
fs
push
or
out
fcoml
jp
incb
cmpsb
scas
popa
loopne
int
popl
pop
ret
mov
repnz
cmpsl
sbb
push
shlb
icebp
inc
addr16
jb
mov
in
cmc
or
sub
vpsubq
mov
shll
push
mov
out
sub
sti
movsl
les
aaa
rorl
mov
pusha
pushf
dec
and
clc
add
or
mov
sub
mov
xchg
jl
xchg
sbb
hlt
cmp
jo
test
sbb
test
jle
adc
mov
xor
push
js
jb
repnz
xchg
mov
icebp
pop
sbb
inc
cmp
adc
insb
push
mov
jno
inc
outsb
sarl
push
mov
sbb
lods
std
int
lds
iret
mov
std
imul
cmp
andl
imul
jb
imul
pop
xor
je
cmp
mov
leave
and
arpl
out
dec
test
jge
mov
and
mov
push
sub
inc
cmp
mov
rorb
ret
cli
sub
xor
push
jns
ror
push
push
inc
stos
ljmp
gs
add
fs
push
ror
sarb
div
or
aaa
jmp
pop
pop
xor
sub
xor
xchg
loop
adc
dec
inc
popf
xchg
pop
test
cmp
mov
mov
sub
push
dec
dec
scas
cmp
xchg
adc
push
jp
or
rol
not
inc
pusha
adc
daa
xchg
mov
cltd
bound
mov
xchg
mov
outsb
cmc
rcll
inc
fldt
test
fnstcw
dec
es
dec
sbb
movsl
pop
sub
fbld
in
gs
jo
lods
mov
jo
sbb
popf
sbb
push
daa
inc
adc
aam
test
sbb
mov
push
scas
and
jg
ret
lcall
ds
jg
out
rcll
inc
push
mov
dec
inc
mov
bound
loop
shlb
cmp
aaa
ret
cmp
fcoms
or
pop
sbb
push
lea
hlt
jae
jge
nop
aad
sub
mov
mov
jns
push
fwait
mov
dec
jge
lds
push
hlt
arpl
sbb
lea
test
xor
subl
lods
xor
mov
fdivl
dec
mov
jns
mov
inc
pop
dec
cmp
in
pop
mov
adc
mov
jl
mov
add
cmp
xchg
lods
cli
jecxz
add
cmp
cltd
fiaddl
xchg
xor
xchg
push
sbb
jb
dec
xchg
push
and
adc
scas
dec
jnp
scas
sbb
or
rcrl
jb
jmp
dec
fs
ror
rcl
rolb
rclb
les
mov
shlb
js
pop
je
movsb
pushf
or
test
test
int
pop
xor
add
fiadds
cmpsb
pop
sub
sbb
mov
into
push
clc
mov
jle
in
or
xorb
or
mov
mov
mov
nop
jg
sub
jg
xchg
and
push
push
xchg
arpl
insb
jp
push
adc
pop
add
loopne
gs
bound
filds
adc
cltd
je
fdivrp
add
je
mov
dec
or
pop
mov
cmc
dec
mov
fwait
dec
int
cmp
rorl
cmp
pop
cmc
int
loopne
xchg
sub
popf
dec
clc
enter
mov
inc
loopne
mov
jae
push
loop
mov
cmpsl
xor
add
xchg
dec
add
push
add
shlb
cmp
in
mov
ret
sbb
or
xchg
and
mov
xor
add
loopne
std
xor
jmp
cltd
lret
stos
popf
jb
std
lods
sbb
adc
in
cmp
sub
sbb
add
sub
inc
adc
or
out
mov
enter
test
cmc
cmp
sbb
movsl
xchg
mov
sbb
adc
movsl
stc
inc
dec
cs
and
inc
pusha
in
aad
out
rolb
stos
push
jne
lods
add
mov
xchg
scas
jae
sbb
sbb
scas
sbb
ficoml
jnp
popa
adc
xor
adc
mov
and
fwait
push
loopne
jg
shl
jb
jle
orl
imull
les
jl
ds
faddl
ja
jo
lods
loopne
xor
push
sub
dec
sbbl
or
dec
add
adc
outsb
xchg
cmp
inc
ret
push
js
xor
js
adc
adc
inc
shll
in
fwait
lahf
fwait
mov
test
in
mov
insl
pop
xchg
sbb
stc
aad
push
test
inc
scas
adc
and
fsubl
mov
sarl
lcall
lods
jno
sbb
clc
sbb
enter
mov
lods
pop
test
dec
mov
scas
notl
push
push
jae
adc
xchg
shll
es
les
into
divb
cli
decl
push
cmpsb
ret
insl
or
dec
jg
mov
jmp
and
je
xchg
xchg
sub
mov
mov
mov
mov
add
xor
xor
insl
dec
fs
jle
imul
das
shll
aad
mov
or
dec
jae
or
adc
pushf
push
std
ret
or
ret
mov
call
xchg
jno
pop
pop
cmp
jo
in
mov
icebp
inc
jg
mov
fidivrs
cmp
dec
or
mov
lods
orb
jl
mov
test
cltd
nop
fsubrl
js
xor
fsts
push
sbb
int
mov
enter
popl
stos
fmuls
sbb
ret
pop
xchg
sub
mov
sub
dec
mov
inc
imul
xchg
push
xor
movsl
and
movsb
cmp
xchg
repz
loop
and
inc
movsl
aad
lcall
cmp
push
and
push
loop
enter
jp
loope
sub
lea
mov
xor
cmp
rclb
cmp
mov
imul
in
dec
sub
add
movsl
stc
iret
xchg
mov
repz
test
fistps
movsl
cmpsl
and
push
clc
mov
sbb
popa
pop
inc
xor
push
mov
lret
fs
or
mov
mov
inc
mov
mov
sbb
and
std
imul
js
das
imul
mov
push
mov
cmp
inc
int3
push
jg
xor
cmp
test
lock
loope
outsb
movsb
push
push
or
popf
stc
adc
mov
movsl
daa
adc
mov
pop
or
push
mov
repz
hlt
mov
jb
lret
rcrl
and
pop
push
mov
pop
dec
xor
mov
mov
fisubl
jns
jecxz
push
out
xor
cltd
xorl
xor
imul
fdivrp
mov
clc
aam
out
pop
cmpsb
inc
dec
js
jbe
jbe
adc
repz
ficoml
scas
shr
cmp
lcall
out
pop
cmpsb
xchg
sbb
out
daa
imul
hlt
sbb
loope
jb
or
cmc
jl
roll
in
lcall
pop
xor
jge
ljmp
add
das
mov
inc
or
or
sub
xlat
dec
lea
in
cltd
or
and
and
decl
sbb
shlb
cltd
add
jmp
dec
push
mov
fstpl
jg
sarw
mov
data16
rorb
pop
adc
push
ss
cmc
mov
fld1
inc
aad
aam
cmp
sub
lods
fdivrs
pop
mov
push
lock
lcall
loop
adc
add
mov
mov
shlb
aam
push
stos
das
repnz
push
icebp
into
mov
mov
sti
push
sub
loop
and
jns
cs
daa
out
idivb
mov
fcoms
fs
call
out
mov
pop
test
jb
cmp
xor
dec
loope
pop
lcall
xor
fsts
into
stos
hlt
outsl
ffreep
negb
and
lods
push
sahf
dec
add
add
xchg
dec
cwtl
lea
and
xchg
push
mov
adc
in
fwait
bound
cmpsl
push
inc
and
pop
mov
sbb
pop
cmpsl
shl
test
sbb
inc
inc
add
add
xchg
xor
add
or
inc
adc
sub
testl
stos
sub
clc
loopne
or
pop
cmp
or
sub
out
mov
cmp
xor
xchg
inc
out
popa
cmp
lods
sub
gs
jmp
inc
filds
notb
pop
std
pop
jb
or
add
leave
dec
inc
adc
in
dec
cli
cmp
roll
ds
dec
mov
lret
sub
repz
popf
add
push
or
movsl
test
mov
xchg
jl
pop
dec
sbb
mov
lahf
adc
in
xchg
xchg
xchg
div
loop
scas
arpl
repnz
cmc
shrb
pushf
cmp
mov
movsl
sub
or
lret
mov
mov
lret
je
ja
dec
push
cwtl
or
mov
add
jo
xor
xchg
rcrb
in
jl
push
fwait
shll
dec
popa
mov
xor
dec
push
pop
jae
add
adc
sbb
push
shrl
movsl
and
jmp
pop
xor
inc
cmp
faddp
cwtl
xorl
mov
xchg
dec
mov
andl
repnz
pop
subl
cmp
xchg
mov
mov
inc
int
pop
mov
jecxz
nop
fdiv
arpl
fsub
dec
int
add
push
xor
mov
pusha
loopne
and
sbb
mov
pop
dec
sub
lea
rcll
adc
and
lcall
in
hlt
push
pushf
gs
and
jecxz
and
adc
mov
test
inc
xchg
dec
xor
stos
and
adc
xor
loopne
pop
sti
fcmovnu
inc
add
scas
or
and
inc
dec
popa
roll
push
scas
les
fcoml
inc
popa
jecxz
repnz
int
mov
imul
xchg
lahf
leave
out
cmp
lods
jns
sbb
mov
dec
aas
jno
loopne
push
fisubrs
mov
xchg
fcmovnbe
xlat
or
push
mov
xor
cmpsb
push
jp
jle
in
or
lahf
jle
movsb
mov
jg
cmpsb
es
cmp
add
jge
cmp
inc
and
mov
push
sbb
push
iret
pop
stc
jbe
sub
xor
mov
inc
xchg
xchg
pop
jo
lret
ret
push
sub
mov
sbb
lock
sti
mov
push
sub
push
das
pushf
cmp
xor
pop
push
in
push
add
xchg
mov
push
xchg
fstpl
xchg
ficoml
jb
sbbb
push
sbb
roll
aad
outsl
pop
lods
dec
test
jae
xchg
movsb
mov
inc
aad
xchg
xchg
stos
jle
mov
js
stos
mov
testl
sub
addr16
insl
or
add
iret
xchg
shl
mov
cmp
inc
dec
outsb
jmp
stos
iret
and
fsubrs
dec
in
mov
lret
in
or
add
cmpsb
cmc
xor
push
add
loope
mov
rcll
movsl
inc
xor
or
movsb
sub
jns
adc
dec
pop
cmpsl
ljmp
or
sbbb
out
mov
mov
push
xor
lahf
mov
stos
cld
xor
cmp
loopne
push
xor
movsb
ds
lret
in
cmp
mov
sbb
push
es
insl
mov
call
pop
lds
rcll
test
and
dec
sub
pop
jp
or
mov
xchg
xchg
insb
insl
xchg
rolb
jae
iret
int
cmp
mov
stos
dec
rorb
push
fidivrs
and
iret
mov
test
fstpt
loop
fbstp
jge
inc
adc
jns
sti
pop
sub
and
cmc
inc
and
push
jne
cltd
inc
jbe
inc
lods
shrl
outsb
lds
xor
inc
mov
jbe
inc
ljmp
sbb
loopne
xchg
inc
jne
pop
ljmpw
es
lods
adc
frstor
pop
icebp
jbe
xchg
pop
dec
pusha
inc
or
cmpsb
fnstsw
out
bound
fidivs
lea
sbb
inc
push
repnz
mov
loopne
sbb
xor
or
fldcw
mov
lock
data16
cmpl
cmp
cmp
and
dec
int
das
cmp
jge
mov
pusha
rcrb
xchg
stc
popf
inc
outsb
inc
cmpsb
jno
aam
rcr
cmpsb
scas
sbb
int
dec
xchg
push
mov
ficoms
popa
mov
jo
push
daa
test
add
pop
inc
adc
xor
je
mov
jp
imul
sahf
stos
mov
sub
mov
in
jecxz
mov
xchg
lahf
pop
sub
or
out
push
sbbb
xor
mov
js
icebp
sub
aam
or
lds
pop
insb
cmpsb
test
scas
sub
ret
cmp
mov
out
shll
shll
out
or
sbb
out
xorl
movsb
cmp
les
cs
xor
push
sub
mov
adc
rorl
scas
jl
mov
mov
pop
bound
adc
or
insb
push
roll
sbb
push
pop
out
adc
cmp
leave
jns
aam
and
shrb
call
sub
notb
cmc
sarl
rcrb
test
and
dec
push
scas
mov
adc
out
pop
mov
scas
xchg
shlb
addr16
in
mov
push
sahf
jle
add
add
cmp
rcrl
icebp
fcoms
ds
in
adc
out
and
sub
fnstcw
cmpsl
add
or
mov
adc
daa
push
push
cmc
leave
lds
push
mov
inc
mov
xchg
movsl
jecxz
adc
push
sbb
fsubl
push
cmpsb
repnz
lods
movsl
gs
jge
push
mov
mov
test
jbe
outsl
sbb
sbb
pop
or
mov
aaa
movl
lods
jle
push
aaa
cmp
push
movsl
sub
push
adc
xchg
push
pusha
lahf
mov
mov
flds
push
pop
sbb
das
prefetch
xor
aam
xor
out
jo
cltd
push
es
dec
mov
and
mov
in
loope
mov
repz
ret
idiv
cmpsl
xchg
xorb
xchg
adc
rcr
jmp
repz
pop
sbb
outsl
or
cli
push
cltd
mov
mov
xchg
jmp
xchg
mov
mov
lret
push
cmc
aaa
ljmp
add
call
sahf
push
test
sub
imul
hlt
or
lcall
or
pop
std
mov
mov
mov
sbb
and
stc
cmp
pusha
and
inc
clc
cwtl
and
gs
ret
dec
jle
sbb
xor
insl
lock
jo
pop
imulb
mov
in
scas
add
cwtl
or
rcrl
add
clc
cmp
sti
inc
out
sahf
add
ds
push
scas
dec
popf
xchg
test
fldt
mov
mov
or
fnstsw
shrl
sbb
or
fnstenv
push
ss
ds
xlat
dec
ljmp
xchg
inc
inc
xor
pop
cmp
mov
pop
shlb
aam
inc
xchg
and
sbb
add
pusha
jle
daa
or
test
cmpsl
cmp
movsl
jmp
pop
aas
lock
xchg
push
and
out
mov
loop
pminsw
inc
mov
iret
dec
insb
cwtl
jnp
xchg
loop
mov
outsl
push
icebp
mov
daa
loope
add
sbb
mov
fsubs
push
rorb
adc
stos
xchg
loope
out
xor
mov
cwtl
in
pop
add
cmpsb
jl
and
jecxz
dec
or
repnz
mov
icebp
aam
outsb
iret
mov
insb
popl
ss
adc
jge
aad
arpl
in
call
push
mov
into
mov
lcall
add
inc
mov
das
cs
icebp
jns
rcll
and
addb
cmp
shrl
fst
sbb
stos
add
dec
sbbl
inc
push
adc
aam
stos
cmp
push
cmp
int3
mov
sbb
stos
lods
mov
sbb
jmp
mov
lcallw
pop
cld
pusha
pop
xchg
lret
pop
add
pop
loopne
test
bound
shll
jg
inc
xor
sar
inc
in
and
sub
mov
push
test
mov
arpl
cmpsl
mov
insl
xor
jle
jecxz
jg
ja
sub
adc
lods
push
sbbb
xor
jge
loope
pop
adc
js
jnp
out
les
push
inc
dec
std
sarb
stc
mov
repnz
push
ror
or
add
sbb
or
xacquire
jb
roll
cmpb
jmp
ljmp
dec
sbb
adc
or
and
loopne
xchg
push
jo
xchg
in
push
sti
jae
loope
out
std
mov
mov
mov
sti
fnstsw
sti
dec
or
dec
push
mov
add
not
xchg
clc
repz
inc
insb
out
aam
lock
pop
xor
leave
js
ret
jno
mov
dec
xchg
xor
jae
xchg
cmpsb
sub
outsl
xor
jno
or
stos
imul
clc
xchg
sbb
inc
andl
adc
xchg
repnz
out
sarb
clc
inc
andb
out
sarl
sbb
clc
adc
scas
jmp
push
in
inc
or
inc
sahf
fnstsw
jg
dec
xor
add
outsl
mov
or
sub
xchg
mov
ja
jmp
fdivl
pop
sti
std
sub
pop
daa
outsl
jnp
in
adc
jmp
dec
inc
adc
shld
and
out
xor
enter
or
xchg
and
imul
loopne
jo
xor
mov
ljmp
dec
pop
lods
xchg
jge
or
test
pop
sbb
lods
stos
push
loope
pop
push
jecxz
xor
ret
or
push
inc
std
jo
into
xlat
sti
mov
adc
outsb
je
fisttps
sub
inc
lds
sub
insb
les
sub
iret
scas
and
and
add
fdiv
ja
adc
jns
jae
inc
hlt
std
lea
jbe
stc
test
arpl
pusha
repz
and
in
mov
mov
push
pop
gs
push
add
adc
imul
icebp
xchg
pop
jge
jbe
push
push
xchg
add
mov
and
xchg
test
cwtl
pop
mov
xor
idivl
lock
in
sbb
xorb
add
int3
add
inc
enter
push
sub
ret
cmp
mov
fxch
addl
cld
shrl
or
and
pop
add
bound
xor
nop
jle
repnz
push
scas
scas
mov
jmp
mov
shr
out
outsl
ss
fcoml
mov
and
mov
loope
call
cmp
pop
push
mov
ss
imul
aam
popf
or
or
sbb
jb
or
in
xor
jle
dec
jmp
inc
in
push
fdivrs
loopne
mov
mov
or
push
sub
sub
push
cmp
imul
cli
decl
addr16
fwait
insb
adc
cmc
leave
pop
int3
out
daa
int
int
cmc
pushf
and
add
sahf
sbb
adc
or
arpl
dec
fs
inc
adc
jo
mov
sub
js
add
inc
gs
ja,pt
push
mov
mov
fimuls
adc
sbb
and
lds
mov
cmp
cmp
fmuls
sbb
sbb
add
dec
xchg
pop
add
xchg
jbe
enter
dec
into
mov
and
and
add
test
clc
mov
into
int3
fdivrl
insb
nop
jle
lcall
rolb
popa
int3
rclb
or
xchg
scas
jmp
sub
lcall
out
test
jo
adc
divb
lods
pop
push
and
stc
inc
imulb
ficoms
das
jbe
icebp
aam
gs
int
pop
imul
xchg
fldcw
jnp
inc
or
inc
lea
flds
xor
jae
loope
push
jg
fs
test
aam
jo
mov
sub
xor
inc
push
lret
dec
out
sub
mov
sahf
sarb
mov
push
fistpl
push
sbb
nop
mov
adc
push
xchg
and
cs
or
xchg
stos
je
sub
cmp
xchg
mov
xor
andnps
ret
xchg
sub
sbb
fwait
cs
cld
cmp
fsubrs
int3
dec
lods
ljmp
adc
inc
ljmp
stos
ja
mov
hlt
push
and
xor
xor
mov
pop
jmp
pusha
jg
xor
shrb
sbb
push
push
pop
repz
sub
and
fcomps
jbe
mov
notl
lock
sbb
inc
cmp
lods
out
jmp
sub
xor
test
aas
into
adc
inc
sub
inc
outsb
push
push
push
rcrb
inc
xlat
mov
xchg
cmpsb
mov
xor
sbb
repnz
push
data16
jne
clc
xchg
clc
movsl
push
jg
inc
jno
xor
inc
sbb
mov
mov
fstpt
xchg
stc
movsl
jl
cmpsl
mov
subl
mov
xchg
pop
rol
push
outsl
rol
mov
pop
flds
fbstp
fnstcw
inc
daa
mov
stc
in
mov
in
cld
jnp
add
jmp
pop
add
mov
push
das
xchg
pop
pop
adc
jmp
out
imul
mov
int
sub
push
idivl
sub
roll
int
mov
stos
fnstenv
aam
push
imul
mov
add
fnsave
or
in
xorb
jo
es
sti
jmp
in
xchg
xchg
jle
movsl
jp
ret
and
fsts
push
aaa
cld
pop
das
stc
cmp
rcll
jge
mov
add
jae
adc
adc
pop
mov
mov
std
mov
mov
loopne
push
dec
adc
mov
xchg
or
or
pop
xor
decb
mov
mov
cltd
rcrl
loopne
lret
hlt
pop
in
mov
shll
sbb
jno
inc
xchg
sbb
mov
sub
cmc
outsb
inc
roll
ffree
dec
xor
repnz
loope
pop
icebp
mov
out
sbb
mov
xchg
js
aad
jae
movsl
loope
jo
int
fisubl
pop
inc
pop
dec
dec
jge
push
in
in
js
stc
xchg
fs
pop
dec
add
mov
cmpsb
push
pop
clc
or
xchg
inc
ficomps
mov
push
xor
mov
mov
lcall
sbb
push
das
fbstp
push
and
decb
mov
add
scas
rorl
pusha
sub
js
daa
int3
ljmp
dec
push
popf
sahf
adc
cmp
mov
push
pop
outsl
scas
pop
call
mov
shr
fwait
inc
push
insl
testb
shl
jns
aas
notb
dec
sub
xor
push
jmp
stc
call
inc
mov
sti
inc
add
add
nop
push
sbb
fildl
test
enter
jbe
outsl
cld
dec
pop
mul
xor
or
push
sbb
sub
in
jbe
js
cld
jmp
stos
dec
sub
std
in
xchg
mov
in
sbb
sub
xor
push
stos
sub
sbb
jg
jp
cmpsb
stos
and
adc
cmp
xor
dec
xor
or
inc
jmp
dec
cmpsl
jle
inc
xlat
jbe
fwait
mov
jl
adc
mov
dec
or
xor
dec
pop
insb
inc
add
aam
jmp
testl
push
dec
ret
sbb
lcall
push
test
sub
cwtl
mov
or
sarl
push
into
imul
jns
pusha
in
mov
cwtl
sahf
cmp
jg,pn
mov
xchg
xchg
nop
lret
rcrb
pusha
mov
pop
jns
mov
ffreep
data16
or
subb
or
sub
sti
mov
mov
or
imul
fwait
or
pushf
aaa
pop
push
mov
ss
mov
push
xlat
mov
fdivrs
add
and
or
lahf
aad
push
jno
dec
fcoms
or
mov
dec
cmpsl
incb
jbe
pushf
lret
in
in
sbb
shll
push
pop
adc
dec
imul
or
pop
addl
sub
aaa
aas
jns
fists
ljmp
jo
lcall
mov
lods
add
add
daa
hlt
addr16
nop
daa
pop
in
mov
or
lock
insl
ret
pusha
leave
lret
inc
and
sbb
xor
pop
push
les
out
in
mov
out
repnz
xchg
repz
pop
jmp
or
pop
mov
pop
and
add
pop
fcmovnb
mov
fsubl
push
mov
sar
xlat
je
call
scas
push
lret
int3
repnz
cmovle
xlat
mov
mov
jns
sub
shl
loop
jo
mov
dec
inc
adc
or
or
repnz
or
xchg
dec
push
jp
dec
cmp
mov
pop
mov
cmp
orl
xchg
daa
je
mov
mov
xchg
popa
in
lock
xor
mov
nop
repnz
or
add
fs
daa
xchg
jecxz
pushf
jb
xchg
mov
xchg
lds
dec
notb
cmp
cmp
aas
jo
mov
movsl
test
push
shrl
jns
divb
scas
cmpsb
and
jne
adc
jge
adc
cmp
xchg
sub
sti
push
imul
inc
sti
sub
jge
cmp
add
loopne
repz
loopne
sbb
jo
popf
cli
negb
setns
pop
ljmp
addr16
iret
imul
add
fnclex
mov
dec
mov
sub
mov
sub
ja
ds
aam
stos
fucomi
daa
lret
nopl
xchg
es
xchg
cmpsb
leave
test
sahf
fstps
lret
mov
pop
xor
xchg
cmpsl
fsubs
test
jmp
mov
cld
mov
jo
movsl
xor
jno
test
xorb
mov
lea
ret
mov
fdivl
xchg
and
out
leave
fs
mov
fdivrl
xchg
adc
add
pop
pushf
dec
or
enter
and
add
add
jecxz
std
add
push
movsb
dec
insl
adc
test
pop
jbe
adc
xchg
cli
into
push
fidivl
lahf
fstpt
cli
imul
jg
mov
jne
je
lods
xor
jb
sarl
std
dec
mov
xchg
nop
adc
mov
cltd
in
fmull
addr16
test
pop
add
sti
test
xor
push
aas
es
sub
and
pop
mov
jnp
sub
stc
dec
in
hlt
stc
or
call
or
aam
push
mov
dec
jecxz
jge
adc
dec
inc
sub
sbbb
roll
mov
xchg
push
and
loope
jmp
xchg
aas
mov
mov
fbld
mov
mov
jmp
adc
dec
mov
mov
and
or
jp
cld
xchg
faddp
in
push
xchg
pushf
aas
imul
mov
jle
push
jae
scas
push
push
das
dec
mov
mov
loopne
stos
sarb
nop
in
jmp
xchg
stos
test
or
stos
mov
mov
dec
in
jae
jns
ds
fidivrs
std
mov
ds
jnp
push
push
cld
or
repz
cmp
pop
js
insb
inc
outsl
mov
fucomi
mul
sarl
sub
movsb
dec
lret
fwait
ja
test
sbb
testb
jns
jge
jmp
sbb
lret
sub
lds
and
out
sbb
lahf
sahf
aaa
mov
call
popa
addr16
xorb
and
lods
adc
xchg
push
test
daa
dec
shrb
hlt
mov
fs
mov
mov
xchg
sahf
mov
mov
add
in
xlat
push
and
xor
fs
je
jecxz
adcb
jge
inc
scas
jle
mov
adc
and
ds
rcrb
outsb
popf
xor
std
push
insb
add
cs
clc
push
mov
loopne
mov
lret
cld
outsl
cmp
enter
fs
fidivrl
sarl
mov
outsl
cmp
dec
jmp
or
cmp
xchg
cmp
loopne
es
mov
aas
pop
mov
push
sbb
nop
ret
inc
nop
mov
mov
pop
mov
cmp
cmp
push
adc
push
xchg
jl
decl
outsb
or
cltd
mov
xor
cmp
imul
mov
data16
cmp
cmpsb
sub
sub
ss
jmp
out
ret
popl
clc
xchg
mov
adc
scas
pop
dec
or
sub
inc
rorl
sbb
insl
jecxz
nop
aad
in
loopne
push
xlat
and
mov
mov
sahf
jl
xchg
pop
cli
aas
push
push
aad
inc
cmp
sub
sbb
push
jno
js
inc
sub
inc
inc
enter
pop
lahf
pop
ljmp
add
icebp
shr
cmp
dec
popa
sub
dec
sub
and
xchg
sub
scas
movsl
xlat
addr16
in
scas
loopne
dec
imul
mov
xchg
jl
push
pop
adc
and
add
ds
dec
dec
pusha
pop
pop
fsubrl
out
iret
lds
sub
xorb
inc
xchg
inc
test
cmp
and
dec
lods
mov
into
rol
subb
and
mov
add
dec
jecxz
xlat
fnsave
les
xchg
push
pop
push
push
mov
or
mov
fisttpll
test
xchg
jmp
dec
rclb
gs
xor
sbb
mov
rol
push
sub
vcvtps2qq
mov
rcrb
test
hlt
leave
inc
add
push
scas
or
inc
dec
fsts
cmc
dec
jbe
repz
in
jl
stos
stos
mov
and
sbb
mov
xor
xchg
jnp
imul
or
inc
pop
mov
or
in
cmp
in
push
cmp
sbb
sbb
mov
add
lret
aas
and
int3
in
xchg
sbb
arpl
dec
cmp
call
push
stos
ds
dec
aaa
rol
adc
xlat
push
movsb
shll
hlt
sti
aaa
ljmp
rcrl
cmp
cmp
loope
ret
sub
jo
int
in
fcoms
sbb
movb
test
cmp
and
push
nop
ficomps
inc
cmp
sbb
mov
stos
push
andl
inc
loopne
repz
sub
imul
stc
and
cmp
sub
add
mov
cwtl
fnstcw
js
mov
adc
mov
clc
mov
sahf
paddusb
fisubs
shll
sahf
mov
sar
push
mov
mov
sub
push
xchg
decl
insl
xchg
inc
inc
add
enter
sbb
jne
or
inc
adc
xchg
shlb
cmpsl
nop
pop
mov
js
nop
add
in
stc
xchg
cmp
pushf
mov
dec
cmp
jne
push
fs
clc
scas
loop
dec
outsb
mov
loope
adc
cwtl
fmuls
mov
sbb
fcompl
sub
mov
dec
mov
lds
mov
incb
aad
mov
in
not
pop
sarl
fstpt
loopne
sbb
fistpll
inc
pop
leave
outsl
xor
push
int3
mov
pop
js
cmp
dec
shll
sub
dec
inc
in
popa
outsl
aaa
xchg
insb
xchg
push
icebp
xor
cmp
mov
leave
aas
and
push
aam
mov
jnp
aad
dec
push
mov
adc
rcll
xchg
cmp
fistpll
cld
outsl
pop
and
mov
aaa
pop
popa
ret
lea
lahf
das
pop
cmp
gs
imul
leave
les
out
lcall
jl
sbb
mov
inc
jo
aaa
pop
arpl
imulb
jo
mov
jge
in
or
add
cmp
call
mov
mov
daa
cmpsb
push
out
push
mov
gs
push
lret
jmp
cs
push
ja
int3
sti
xor
jns
in
int
pop
add
and
loopne
iret
mov
push
sub
mov
and
ljmp
in
sub
imul
pop
and
movl
stos
lret
aam
pop
insb
lret
stos
fisubs
cmp
fsub
sarb
cmp
pop
lcall
dec
leave
jo
inc
loopne
push
leave
mov
mov
mov
flds
mov
add
cwtl
mov
aaa
push
mov
shl
mov
xor
mov
ficoml
pop
lods
imul
push
add
lods
sub
cmp
add
mov
push
jnp
ja
adc
scas
jmp
or
sub
mov
mov
fwait
dec
mov
push
fstps
sub
in
push
leave
push
mov
push
imul
fiadds
cld
inc
jnp
mov
add
rclb
xchg
push
stos
adcl
call
jnp
sbb
jge
mov
jno
mov
sbb
fdivs
pop
out
or
sub
dec
cltd
jne
mov
out
mov
mov
out
sub
adc
dec
dec
je
jmp
imul
mov
mov
cmp
inc
insb
jns
notb
mov
push
pop
in
mov
in
inc
adc
negl
pause
out
pop
or
inc
adc
mov
dec
insb
loope
push
int
and
rcrb
fs
cmp
cmpsb
xchg
cmc
scas
shrb
or
in
pop
push
and
jp
lcall
cld
add
xchg
ljmp
ffree
test
xchg
popa
outsb
aad
inc
dec
mov
cltd
lods
hlt
jle
popl
gs
inc
push
inc
pop
push
sbb
dec
dec
cmpsl
call
cmp
push
push
dec
ja
add
pop
jae
inc
call
notl
push
xchg
jne
rclb
sahf
jns
sub
sub
inc
imul
arpl
cmp
pushf
out
fwait
mov
adcl
fstp
arpl
jno
and
sbb
enter
or
insb
loop
jle
mov
mov
inc
and
xchg
sbb
xorb
dec
xchg
lock
xchg
mov
sahf
cmp
shrb
pop
sub
ja
adc
cwtl
inc
ret
mov
cmp
stos
jle
es
jnp
pop
sub
dec
cmp
push
cmp
enter
leave
inc
cld
aam
hlt
lahf
cmpsb
leave
lcall
dec
inc
insb
pop
dec
xchg
inc
loopne
jecxz
mov
mov
sbb
nop
rcll
cmp
pop
int3
mov
mov
icebp
mov
dec
enter
lods
shr
sbb
mov
sub
and
pop
dec
fstl
jg
lahf
or
and
fildll
sub
loopne
cmpsl
cld
jo
cmp
and
cltd
mov
call
mov
shrb
cmp
and
std
loope
xchg
loopne
pushf
inc
push
lds
cmp
paddq
jnp
push
cmc
adc
fs
mov
lret
pxor
mov
xchg
inc
xor
iret
inc
loope
dec
mov
sbb
sbb
cwtl
mov
adc
bnd
hlt
sub
gs
lds
cmp
sbb
or
inc
jmp
int3
adc
andl
shrl
push
jp
addr16
shrl
adcl
pop
xchg
mov
push
imul
ret
push
int
or
pushf
mov
mov
xlat
test
jbe
cmp
push
fcmove
cmp
fdivrs
das
xlat
or
cmp
push
in
pop
inc
xor
mov
in
cli
aas
cmp
jne
jle
enter
fwait
aas
sbb
call
and
xchg
adc
lods
aaa
ljmp
aam
pop
mov
out
jo
inc
mov
xor
sbb
xchg
loope
addr16
clc
adc
dec
mov
test
bound
and
in
leave
shrl
sbb
mov
pushf
sub
push
mov
imul
inc
mov
out
jae
xchg
pusha
sbb
or
sub
frndint
or
sbb
and
pop
push
xor
cmpsl
inc
mov
mov
push
jecxz
cmpsl
in
adc
xchg
movsl
pushf
push
sbb
xor
add
lcall
ffree
fwait
sti
test
push
sbb
in
imul
ret
xor
insb
in
out
inc
mov
sbb
xchg
jnp
push
imul
cmp
mov
xor
pusha
jne
data16
inc
push
adc
add
shl
adc
ret
fcomps
idivb
fwait
lret
mov
or
fidivrl
shrl
add
std
outsb
push
jp
fidivrs
mov
jb
inc
ja
lcall
lea
jne
adc
sbb
je
mov
add
outsb
jl
pop
cmpsl
sbb
adc
fdivl
mov
popa
jne
in
outsb
jbe
shrl
icebp
add
xchg
push
stos
mov
idiv
jb
pop
insb
mov
pop
pop
push
shll
xor
es
and
lds
lret
jmp
push
push
imul
dec
add
push
jg
out
pop
testl
in
mov
pop
sub
repnz
iret
push
adcl
inc
jne
mov
pop
pop
and
sahf
adc
dec
mov
xor
inc
cmp
dec
bound
push
mov
adc
rcll
dec
popa
fidivrl
mov
sbb
xchg
shl
cmp
mov
push
sahf
jecxz
pop
lods
or
push
adc
push
jmp
addr16
je
jg
xchg
jno
outsb
insl
sub
pop
mov
inc
fadds
imul
inc
daa
testl
fnstenv
jge
lea
jo
pop
mov
adc
inc
jae
into
inc
repz
mov
imul
mov
pop
mov
xor
mov
shl
movsl
lock
stos
call
dec
and
add
push
xchg
imull
cmp
imul
mov
xchg
inc
lahf
andl
sub
pop
lret
imul
mov
xlat
xlat
stos
movsl
popf
leave
sbb
mov
cs
imul
nop
cmp
mov
pop
roll
sub
fldcw
add
push
jecxz
cmp
push
dec
pop
mov
cmp
mov
sahf
cltd
outsl
mov
jnp
aaa
mov
ret
mov
shrl
sbb
mov
and
add
sti
fcoml
jae
jne
cmc
enter
cmpsb
xchg
or
mov
mov
add
cs
xor
mov
das
scas
leave
cmp
inc
sbb
cmc
lds
sti
sub
inc
pop
jno
in
ljmp
sub
push
jnp
sub
ja
xor
mov
enter
dec
imul
mov
stos
xor
adc
daa
jne
scas
xchg
pop
in
push
jge
insb
fistpll
add
or
mov
div
scas
lds
push
js
sbb
or
negl
sbb
in
inc
jg
lret
lahf
push
jae
xchg
cld
mov
ljmp
cld
pop
push
sub
xchg
hlt
inc
mov
sub
adc
push
push
mov
pop
js
mov
sub
add
xlat
lods
int3
cs
movsl
and
ret
dec
sahf
mov
push
cmp
jg
icebp
xor
dec
pop
sbb
cmp
jnp
rcrl
and
mov
sub
stos
xchg
and
inc
push
ss
xchg
les
mov
rcll
adcb
mov
cmpl
push
xor
into
in
mov
jmp
popa
movsb
insl
pop
xchg
mov
dec
dec
js
int
sub
testl
fsubr
push
mov
lds
inc
pop
fsub
inc
dec
push
icebp
sahf
mov
sarb
xchg
xchg
daa
jp
daa
pop
xor
push
push
sahf
dec
int3
pop
cwtl
pop
int3
and
xchg
lret
sbb
ret
cltd
push
or
inc
jmp
xor
lahf
sarl
mov
xor
ror
cmp
bound
out
and
aad
popa
sti
pushf
iret
and
cs
dec
inc
cmp
mov
inc
xor
lods
std
fimuls
adc
mov
xor
out
sbb
jmp
cmp
xchg
cld
leave
dec
cvtps2pd
sub
out
imull
pushf
int3
lret
mov
test
dec
shlb
addr16
mov
and
inc
xchg
mov
xlat
ss
xchg
fisubrs
cmp
hlt
jae
stos
push
ljmp
jnp
and
inc
jmp
out
and
imull
scas
inc
rclb
cmp
xor
lcall
cmp
sub
dec
push
lds
mov
sub
out
nop
lock
cli
lahf
js
mov
aaa
sub
push
pop
push
inc
mov
sub
mov
jp
mov
ret
adc
stos
xchg
pop
jp
and
jb
jge
xor
enter
cmp
out
das
or
push
out
add
scas
push
lret
hlt
sbb
sbb
cwtl
dec
nop
adc
std
pop
mov
mov
jb
ljmp
cmp
std
cmp
cmp
int3
adc
or
out
dec
add
push
stc
push
xchg
cmc
adc
jae
pop
lea
andl
mov
iret
iret
cmp
push
adc
loopne
and
sbb
mov
ret
imul
scas
dec
sbb
fnstcw
xchg
in
in
aad
jl
mov
jp
jae
mov
fistl
sar
xchg
daa
jno
rcl
dec
mov
cli
push
sbb
int
and
mov
vmread
xchg
lret
jo
icebp
call
ret
fmull
stos
cmc
daa
cmc
push
aad
std
scas
sbb
pushf
ss
jmp
fcmovbe
fcmovu
clc
xchg
pusha
push
ja
ret
add
ss
stos
shlb
jnp
lahf
lods
dec
out
mov
clc
pop
mov
jmp
test
out
jae
jo
aam
sub
mov
xchg
cs
in
push
cmp
mov
into
ljmp
popf
rolb
scas
mov
sbb
std
pop
pop
decl
rcrl
xor
mov
insb
mov
lods
mov
adc
push
cmp
jl
aaa
sbb
out
loopne
mov
adc
inc
icebp
ds
pop
imul
sbb
cmp
scas
addl
ljmp
fidivrl
enter
sbb
sub
rol
popf
mov
fcmove
insl
je
adc
lcall
and
xchg
addr16
shlb
cmpsl
dec
nop
mov
jnp
mov
or
lcall
rolb
bound
js
aam
test
pushf
xorl
jmp
scas
push
mov
sbb
nop
add
inc
and
jo
popa
mov
sbb
jns
out
enter
sbbl
pop
aas
jno
xor
frstor
fcomps
insb
sub
test
push
or
mov
cmp
orl
sub
mov
sbb
cmp
je
mulb
add
jnp
int3
pop
mull
xchg
out
movsb
cld
repnz
incb
push
aaa
aaa
imul
pop
and
or
xor
cli
test
mov
aad
xchg
mov
pop
or
pop
mov
mov
dec
inc
ret
cmp
jno
in
pop
les
ss
fwait
xlat
cmpl
movsb
cmp
pop
add
add
rcrl
adc
jg
aaa
cmpsl
dec
lds
sarl
ror
pop
pop
push
adc
mov
pop
cmp
fisubrl
dec
imul
jecxz
test
test
cmp
adc
insb
ficomps
add
xchg
mov
in
stos
sub
out
mov
repz
idivb
mov
push
and
and
xlat
mov
inc
loopne
test
mov
push
dec
or
add
lcall
jns
sub
leave
pop
mov
stos
pop
int
adc
icebp
daa
xchg
insb
test
sbb
inc
imul
and
pop
mov
jb
loopne
out
sub
pop
in
cmp
outsl
xor
aam
mov
push
sbb
test
fnsave
xchg
xor
mov
pop
mov
mov
loope
cmp
aad
mov
lods
dec
jae
mov
pop
pop
xorl
cmp
adc
stos
js
fs
insl
cmp
dec
adc
lcall
shrl
outsb
stos
fdivl
pop
and
dec
gs
jecxz
mov
dec
rorb
jo
inc
mov
pop
jo
mov
lcall
std
icebp
pop
fdivr
cmp
or
ds
lahf
loope
ret
lds
jle
add
test
jp
mov
ret
adc
push
mov
outsb
xor
mov
inc
fs
leave
in
or
aaa
xor
loopne
xor
jge
ds
stos
rolb
adc
into
popf
or
ss
lods
inc
sbb
push
push
pop
dec
xchg
fs
lahf
cmpsl
pop
scas
fmull
gs
jecxz
cwtl
dec
mov
pop
outsb
add
sub
icebp
scas
dec
dec
or
sub
mov
add
lret
roll
int3
imul
jae
std
loopne
test
adcl
add
out
mov
loop
outsb
pop
mov
mov
add
adc
and
loope
out
cmp
xchg
jp
dec
rcr
pop
jp
lret
popa
popa
sbb
loop
sbb
cmpsl
pop
jecxz
in
inc
jnp
lcall
pop
xor
push
fsubrs
pop
rorl
sahf
adc
ja
int
loopne
loopne
in
jnp
divb
shll
call
inc
in
mov
icebp
dec
cld
loope
addr16
aam
xchg
cli
xchg
jmp
mov
gs
lods
xchg
push
inc
mov
call
shr
loop
mov
leave
dec
and
repz
mov
adc
adc
ret
cmpsb
jg
add
addl
rorb
push
pop
fucomip
fisubrs
arpl
inc
pop
xchg
inc
arpl
mov
mov
xchg
pop
pop
subw
es
fcmovnu
cmp
cmp
mov
shll
cmp
push
test
cmp
xchg
dec
push
addb
adc
gs
sub
scas
ja
aaa
clc
push
mov
mov
inc
shrl
outsb
imul
cmp
je
in
out
in
mov
jecxz
das
in
pop
push
sbb
lret
pusha
popf
push
pop
jg
inc
cmp
addr16
sbb
mov
lea
pop
inc
mov
ja
gs
sbb
mov
cmpsb
cmp
inc
jo
lret
ja
movsb
mov
mov
xor
imul
stc
xor
sahf
movsl
ret
jecxz
mov
adc
and
sub
in
clc
push
add
sub
sub
mov
mov
cmp
xorl
sbb
jg
dec
jb
test
push
test
shlb
fisttpl
andl
shl
out
xchg
rcrl
lahf
cmp
xor
ss
hlt
mov
add
jo
outsb
bound
nop
sub
test
add
mov
inc
cmp
cmp
int
mov
shl
push
pop
nop
pop
and
cld
mov
xchg
add
jae
inc
test
outsb
jmp
cmp
xchg
xchg
inc
and
cmpsl
pop
jo
js
test
test
jmp
jae
ss
push
xor
aad
or
aas
or
out
add
les
add
or
mov
inc
sub
adc
sbb
lea
pushf
jae
insl
fwait
pop
inc
in
add
out
lret
mov
movsb
inc
lods
lds
dec
int3
jmp
cs
sahf
pop
xor
mov
fs
repnz
push
popf
lods
mov
jmp
or
or
cmp
xchg
xor
sub
stos
inc
loop
cmp
jl
and
xchg
dec
and
scas
test
movsl
jns
cmp
and
cmp
aam
dec
adc
xchg
push
xchg
outsl
pop
aam
je
scas
mov
and
cmp
pop
test
call
test
jno
ss
sarl
adc
push
shrb
push
sti
mov
mov
push
loop
in
push
jae
push
fs
lret
sbb
adc
ljmp
add
out
xchg
jmp
in
push
in
add
fs
jns
fwait
cmp
xor
cld
lods
jnp
iret
movsl
ficoml
or
push
sub
or
xor
add
in
mov
jb
dec
pop
aam
mov
push
in
hlt
stos
test
push
xchg
fdivl
int3
add
sbb
mov
mov
mov
xchg
dec
shlb
out
addr16
je
sub
sub
sti
in
les
sub
pop
cmp
ljmp
add
test
cmpl
mov
pushf
sub
cmp
mov
inc
xchg
lahf
adc
outsl
or
mov
inc
pop
int
xchg
xchg
imul
inc
sahf
sbb
mov
les
fistps
or
stos
fucomip
bound
out
jnp
jge
mulb
and
push
scas
js
aas
fnstcw
fisubrl
fsubs
fsts
out
lret
mov
in
jne
cmp
ja
pop
mov
sub
mov
inc
and
sbb
les
mov
cmpsl
push
mov
push
or
imul
shr
pop
jmp
ret
in
push
cmp
stc
out
inc
and
mov
mov
mov
into
mov
sub
xchg
lret
jmp
insl
cmp
fildl
dec
sbb
jno
cli
aaa
lret
lock
in
adc
fs
loopne
xor
js
ss
enter
aaa
std
bnd
fmuls
test
or
shr
stos
das
inc
into
cwtl
adc
mov
out
test
repz
pop
cmp
pop
out
rorb
xchg
sub
clc
repz
scas
leave
subl
push
mov
or
pop
aam
aaa
mov
shl
jmp
xchg
or
cmp
push
sbb
dec
pop
dec
lea
or
inc
or
loope
adc
adc
xor
subl
arpl
cli
je
popf
xor
mov
cmp
imul
loopne
lods
fbstp
mov
fsubr
aas
dec
jl
jb
sbb
gs
mov
push
leave
jl
nop
push
iret
push
sbb
bnd
loopne
push
mov
mov
les
push
cmp
mov
mov
inc
cmc
aad
ds
push
xchg
mov
and
lods
loope
std
jl
aam
cs
xor
imul
imul
jle
ret
mov
in
dec
in
and
mov
mov
icebp
mov
dec
icebp
jmp
into
es
sbb
adc
cmp
cwtl
scas
jb
inc
aad
xchg
adc
cmp
push
notl
pop
jae
jb
aam
fwait
inc
inc
in
outsl
sub
hlt
push
xor
jns
add
in
dec
ss
enter
mov
jns
pop
and
loope
fldl
jmp
pop
jl
inc
xchg
imul
dec
xchg
jle
add
das
xchg
hlt
mov
cmc
mov
xchg
and
add
pop
daa
or
adc
dec
clc
js
inc
push
bound
add
test
mov
les
mov
sub
loop
and
insl
out
jge
sub
add
rcl
push
adc
popa
xchg
or
jg
cs
outsb
in
jge
push
aam
adc
push
fbstp
rolb
mov
add
mov
inc
rorl
xchg
push
mov
lret
push
sbb
mov
pop
aaa
or
repnz
pop
push
scas
cmc
inc
rclb
ja
sti
ret
mov
es
icebp
mov
or
push
bound
lret
insl
xlat
fdivrl
fisttpll
lret
fisubrs
js
enter
stos
mov
and
outsl
arpl
mov
jmp
jbe
ror
cltd
ficoml
jnp
cmp
cmp
cs
outsb
out
addr16
pop
outsl
lret
mov
push
fistpl
fiadds
xor
mov
sub
pusha
cmc
or
in
jns
fistps
aad
sub
in
push
and
ss
mov
cmpsl
imul
xchg
das
aas
lea
xchg
dec
cmp
decl
and
inc
jb
xchg
mov
sub
das
adc
arpl
xor
arpl
movsb
or
subb
fidivrs
cli
adc
insb
lret
sti
mov
ret
loop
bound
dec
popf
push
cmp
cltd
sbb
push
push
loope
jo
adc
call
sub
or
xchg
hlt
push
mov
fsts
cmp
pusha
pop
jg
in
hlt
icebp
iret
adcb
jl
sbb
jnp
rcrb
mov
out
in
popa
ret
out
and
add
push
pop
jbe
insb
cltd
mov
mov
mov
sub
sub
repz
xor
adcl
testb
jne
scas
or
sub
jecxz
in
jecxz
inc
or
out
mov
cli
imul
mov
jns
nop
cmp
pop
sbb
cmp
fcmovnu
cmp
dec
rcr
xor
jecxz
and
pushf
jno
test
cmp
dec
cmp
fwait
cmc
jg
aam
pop
notl
cmc
les
xor
test
push
test
lods
out
mov
cmp
sub
mov
mov
pop
mov
jb
sbb
mov
lods
fnsave
shlb
or
jnp
mov
jns
jbe
cmpsl
push
dec
dec
mov
cmc
shll
out
ret
subl
movsl
addr16
movsb
bound
jnp
ret
pop
inc
sub
daa
inc
inc
stos
sub
movsb
call
lret
hlt
mov
cmp
scas
aad
and
getsec
addl
pop
inc
call
jp
push
mov
and
dec
push
mov
mov
inc
mov
addr16
bound
fsubl
pusha
jecxz
sub
push
adc
fs
stos
ss
and
pop
rolb
call
sbb
aam
cmp
jb
stos
test
dec
mov
push
fdivs
popa
sti
mov
dec
mov
out
data16
add
add
pop
sahf
jl
mov
std
incl
les
call
jle
pop
cmp
xchg
mov
fildll
sub
in
ja
inc
dec
sub
inc
add
insb
call
mov
xchg
in
xlat
sub
mov
test
mov
not
test
js
mov
fsubrs
adc
add
stos
ret
fdivrs
mov
jmp
inc
add
in
sti
xchg
sarb
and
jnp
mov
push
fwait
or
sbb
insl
adc
loope
and
jno
dec
repz
test
les
or
lock
rorb
neg
pop
add
inc
sub
fwait
xchg
cmc
cmp
and
xchg
mov
out
test
mov
ljmp
mov
mov
mov
jae
out
pop
sbb
cld
add
inc
loop
push
test
rorl
sbb
loop
outsb
adc
xor
out
test
mov
sbb
xchg
jmp
scas
cltd
mov
jne
jo
fcmovbe
data16
es
sbb
mov
jno
push
pop
xor
push
pop
and
mov
pop
mov
das
adc
outsl
pop
cmpsl
in
inc
pop
mov
xlat
cwtl
sahf
pop
mov
call
inc
jns
movsb
std
adc
mov
jbe
mov
push
mov
cld
popa
sub
push
cld
dec
fists
or
and
cmp
enter
out
mov
aaa
lret
daa
std
std
pop
pusha
cli
imul
push
jne
mov
call
iret
or
push
push
mov
mov
scas
insl
add
push
pushf
loop
mov
movsb
in
mov
cs
mov
iret
pushf
mov
inc
negb
imulw
adc
cmp
xor
fldenv
imul
cwtl
xor
push
xor
xor
add
mov
aas
ja
popf
je
jle
rcr
fwait
cmpsl
and
lret
push
nop
data16
fsts
jge
jae
fimull
mov
lret
stc
or
lcall
mov
dec
lds
ds
daa
aaa
and
jno
jge
jp
sbb
xor
test
cmp
cli
outsl
cmpsl
popa
or
or
cltd
or
push
xor
popf
mov
out
pop
jp
mov
sahf
pushf
push
mov
pop
mov
pop
xor
fstpl
and
dec
sub
xor
std
jbe
pop
mov
lock
push
aas
data16
pop
fs
es
pop
cltd
movsl
stos
in
pop
mov
jo
jnp
mov
adc
enter
inc
test
out
mov
nop
aad
aas
xchg
inc
add
lods
in
sub
popf
inc
mov
mov
cmpsl
popf
dec
lcall
add
cmpsl
shlb
scas
lret
sbb
lods
bound
outsl
bound
stos
imul
mov
iret
pop
ja
outsl
sbbb
jle
or
or
lds
aas
adc
stos
lods
int3
mov
sbb
mov
dec
push
dec
ljmp
jmp
negl
xor
sbb
jno
leave
jo
call
jl
shrl
adc
sub
iret
test
ret
clc
int
push
inc
out
add
das
es
mov
jg
mov
dec
mov
xchg
push
and
add
nop
mov
rcrl
pushf
push
push
cmp
sarb
sub
das
jp
fadds
dec
pop
adcl
nop
add
push
out
pop
andb
push
xor
jle
scas
icebp
int
jns
push
jl
rcl
mov
ja
mov
es
jnp
push
adc
sbb
inc
gs
jge
shll
push
hlt
adc
mov
enter
pop
sar
inc
rclb
pop
xchg
stos
pop
jb
outsl
inc
lea
lahf
adc
int
arpl
mov
jg
rorb
sbb
nop
inc
adc
mov
rcrl
out
in
mov
hlt
cmp
rorl
or
inc
popa
gs
sub
or
sub
dec
jmp
lds
and
ja
jae
cmpsb
fldl
push
mov
and
push
add
stos
or
outsb
xchg
arpl
fbld
adc
addb
repz
loopne
and
pushf
jmp
add
adc
popa
dec
push
cmc
jae
and
dec
mov
xchg
out
sub
jg
xor
mov
addr16
push
dec
sub
nop
pop
je
rolb
mov
jl
xor
imul
xchg
fidivrl
dec
int
mov
mov
fwait
lret
mov
movsl
insl
push
rcrb
sbb
push
out
outsb
adc
leave
dec
cmc
jp
fnstsw
mov
lret
xor
rcrl
outsb
add
out
xchg
adc
mov
push
xor
pop
testl
jge
sahf
lds
jno
ljmp
sbb
sbb
out
add
mov
adc
adc
xchg
push
sub
mov
or
mov
repz
and
pop
cmpsl
mov
sub
or
sub
mov
imul
jo
in
sarl
or
rclb
fdivrl
stos
cmpsl
ret
dec
loope
xor
jb
push
pop
iret
xlat
push
mov
xchg
roll
mov
gs
push
add
and
adc
in
sub
mov
inc
mov
lock
and
out
push
mov
lods
leave
daa
cmpsl
movsl
adc
or
je
call
in
jge
or
shlb
aam
or
rol
jle
xlat
subb
sub
loop
sbb
mov
out
push
fs
sub
test
mov
in
dec
bsf
sbb
inc
mov
int
sub
std
sarb
cmpsb
mov
fucomp
repz
or
cmpb
shlb
mov
sbb
outsl
sarl
loopne
fstl
mov
fs
sub
xorb
jnp
test
fwait
mov
stos
lret
mov
push
fwait
pop
nop
adc
test
loopne
pop
jo
rcrl
xchg
adc
outsl
jmp
in
out
loope
jbe
mov
cmc
mov
inc
dec
mov
xchg
mov
and
push
dec
das
add
mov
outsl
xchg
pusha
outsl
cltd
cli
fcmovnbe
call
aas
jne
aaa
enter
inc
push
stos
ljmp
popa
in
test
xchg
insb
addr16
cmp
es
xor
shl
add
mov
ret
outsb
sbb
mov
sahf
nop
aam
and
insb
jne
popf
in
mov
sbb
jbe
adcl
push
stos
inc
push
bound
rolb
inc
es
and
sbb
shrl
mov
jg
pop
scas
pop
cmp
add
enter
jl
xchg
or
dec
sbb
cwtl
scas
add
out
mov
mov
mov
pop
sti
xchg
inc
cld
hlt
or
sbb
jne
fiaddl
fildl
fptan
mov
adc
adc
lods
sar
int
adc
aaa
push
push
cmc
andl
and
cmpsl
adc
stos
cmpb
jb
sub
loop
das
xchg
push
push
xchg
jmp
add
test
fcmovnb
dec
aam
sub
mov
mov
add
sbb
or
ja
int3
loope
xor
lods
aas
lods
outsb
iret
stos
ljmp
imul
mov
xor
jns
adc
xor
repnz
push
imul
notl
dec
aad
jecxz
stos
sub
mov
push
test
xchg
push
and
std
dec
filds
push
xor
cmp
lds
push
dec
addb
nop
cmc
xlat
xor
scas
or
pop
cltd
lret
jp
pop
sub
or
fbld
dec
icebp
ja
sbb
push
xor
outsb
sub
movsl
es
and
dec
cltd
inc
enter
mov
ret
mov
push
insl
ja
mov
fwait
daa
adc
or
xlat
sbb
fildll
adc
mov
xor
out
icebp
insl
sub
xor
mov
jge
dec
add
dec
jmp
cmc
js
in
dec
mov
mov
cmp
adc
adc
push
enter
rorl
mov
adc
test
push
xchg
xchg
mov
jg
inc
jae
out
popa
cmp
add
repz
cmc
pop
add
mov
repnz
bnd
das
or
ss
ja
movsl
xchg
lods
pop
ror
mov
xchg
in
mov
pushf
faddl
push
rolb
stos
fs
flds
leave
inc
stos
sbb
jmp
xchg
push
movsb
into
fistl
aad
sub
adc
clc
push
xor
arpl
andl
mov
cmp
bound
lods
inc
adc
pop
xchg
scas
fmull
imul
fnstcw
jl
nop
fsubrs
fimuls
rolb
cmp
sbb
icebp
repnz
cli
scas
inc
mov
sub
movd
add
pop
inc
jo
mov
shlb
nop
xor
adc
add
loope
add
rol
rorb
sbb
ljmp
push
inc
shlb
mov
ret
andl
jle
popa
push
mov
mov
xor
push
jp
lods
jge
jbe
push
dec
xor
das
lock
int
outsl
rcrl
inc
cmp
and
je
dec
std
cmp
mov
jg
jle
pop
in
mov
jae
out
and
repnz
mov
xor
push
rol
push
or
jne
sbb
jg
cmp
lds
pop
les
lods
lock
sarb
adc
arpl
cmp
and
inc
push
xchg
and
xchg
sbb
fcmovnu
sbb
test
push
outsl
sbb
sub
dec
push
stos
out
mov
rolb
je
in
pushf
sbb
add
stos
outsb
sbb
xchg
bound
xchg
pop
sbb
jmp
pop
inc
cmpsb
addl
mov
out
shlb
ljmp
push
push
jp
adc
or
inc
aas
out
jmp
mov
push
jp
mov
xchg
push
mov
dec
imul
loopne
push
jnp
lods
dec
or
adc
cltd
sub
cli
divb
xorl
cmovp
hlt
add
andl
pushf
fisubs
inc
dec
loop
in
dec
sbb
out
and
xor
fists
stos
jmp
mov
inc
adc
push
je
int
rorl
sub
push
jecxz
jg
jle
movsb
jnp
cmp
or
xchg
xchg
xchg
popa
stc
dec
or
pop
rcrl
popf
add
testl
or
test
xchg
jno
sub
jl
andl
mov
pop
orb
shlb
cmpsl
add
test
fldt
arpl
mov
rclb
sti
pop
and
fcmove
int
dec
rorl
xchg
ficoml
pusha
ret
add
xchg
adc
mov
lods
jecxz
out
jae
repz
mov
lods
cli
fdivrs
mov
je
inc
ss
repz
mov
and
and
add
loop
pop
add
jecxz
je
pop
popa
push
mov
mov
test
push
xchg
mov
cmp
sub
cmp
sub
sub
xchg
jae
pop
mov
xchg
repz
aaa
fwait
mov
or
jmp
inc
aaa
jb
cmp
mov
rolb
push
loope
loopne
lret
std
xchg
xor
xor
inc
ret
xchg
ds
test
adc
cmpsl
jl
fs
sub
movl
fistpl
or
and
call
roll
pop
jecxz
rorb
add
or
mov
lea
add
push
cltd
jo
cli
imul
push
pop
fnstenv
mov
push
sbb
inc
pop
and
fwait
mov
or
test
int3
pushf
cld
and
shrl
add
inc
pushf
cmp
inc
loopne
das
sub
jns
nop
ret
and
adc
jns,pn
xchg
vrsqrtps
push
push
or
dec
fsubl
inc
push
daa
bound
or
pop
mov
sub
dec
xchg
aam
xor
jg
clc
cltd
loop
test
imul
cmpsl
shr
cmp
das
push
pop
jg
or
inc
sbb
bound
xchg
fs
xor
jp
dec
mov
and
sub
xor
push
ret
out
mov
test
ficoms
xor
icebp
sub
cmp
pop
ss
roll
aaa
adc
outsb
jns
stos
aad
test
mov
inc
xor
lods
push
je
idivb
jb
hlt
sbb
out
mov
cmpsl
js
xchg
ror
mov
pusha
lahf
jne
pusha
cmpsl
pop
out
jl
dec
pop
mov
push
repnz
and
enter
push
sti
mov
sar
push
cld
into
mov
cld
popf
xor
addr16
pop
xchg
xchg
mov
mov
cmp
push
and
je
loopne
fidivrl
test
xor
outsl
aas
jo
adc
in
mov
dec
mov
stos
jo
mov
subb
stos
lea
jb
mov
pop
sub
cmp
pop
movsb
jb
out
push
sbb
test
mov
mov
lea
out
subb
loop
mov
push
loopne
fdivr
jle
pusha
cmp
in
movsb
lret
clc
jae
aaa
scas
mov
fbld
sbb
xchg
xor
sub
test
mov
mov
outsb
mov
or
adc
loop
sub
pop
ja
cmc
sbb
pop
mov
fdivp
insl
stos
test
in
push
dec
lret
mov
popf
or
push
hlt
pop
mov
mov
out
gs
test
cwtl
xchg
pop
shl
pop
test
ds
push
fisttps
mov
sbb
cld
inc
in
inc
iret
cmp
cmp
fistpll
push
cmp
push
adc
dec
jns
xchg
jbe
outsl
push
aad
inc
ljmp
cmp
cwtl
inc
xchg
int3
out
inc
inc
shrb
xchg
gs
adc
rclb
and
push
mov
push
lret
cmp
lcall
test
push
adc
jo
testl
fbld
out
dec
rorl
mov
inc
mov
adc
sarb
scas
xchg
lods
mov
mov
jmp
cmp
push
adc
sbb
dec
lret
sub
dec
sbb
jns
outsb
mov
jne
int
mov
or
adc
sbb
gs
stos
repnz
inc
mov
jge
cltd
sub
shr
outsl
in
in
mov
mov
push
push
mov
push
pop
xchg
and
cmp
popa
ret
sub
mov
pop
sbb
adc
out
pop
jns
aam
xchg
fisubrl
shl
in
sahf
pushf
fmuls
ljmp
dec
dec
cmp
mov
cmp
jo
dec
xchg
mov
ja
imul
iret
jae
aas
fucomp
or
mov
bndldx
fidivs
fs
jo
dec
mov
mov
xor
iret
int3
rcrb
lret
inc
xchg
jl
add
adc
vcvttpd2dq
test
cmp
loopne
sbb
push
int
pop
cwtl
xchg
add
inc
lcall
cmp
push
mov
lods
in
test
mov
insl
or
out
pop
push
sti
cs
pushf
mov
jp
out
dec
es
icebp
mov
jmp
mov
and
fiaddl
jb
jecxz
std
pop
pop
jbe
leave
and
loop
adc
jg
movsb
mov
add
ja
sub
and
lcall
popf
scas
push
xchg
rcll
jno
inc
es
push
sbb
cs
repnz
pop
fcmovne
sbb
outsb
mov
call
jbe
hlt
lret
sahf
shll
lcall
cmc
or
test
inc
mov
xchg
pop
dec
pop
pushl
jle
or
dec
adc
out
cltd
test
in
fcompl
leave
daa
loopne
movl
mov
dec
std
fsubrp
xor
or
stc
cmp
push
jle,pt
sbb
in
pop
dec
repnz
cld
addr16
lds
adc
in
pop
mov
ss
push
sub
ss
inc
dec
add
push
cltd
add
inc
mov
pop
adc
in
dec
pop
mov
rcrb
scas
sbb
sub
inc
scas
rorb
cmp
daa
fisubl
repnz
insl
es
push
in
mov
lea
inc
cmp
daa
mov
cmp
mov
jns
inc
ja
and
mov
xchg
rorl
sbb
sahf
push
bound
out
push
out
mov
mov
test
daa
mov
lret
push
xchg
arpl
aas
sub
cld
cmp
std
sub
es
dec
movsb
in
pop
fwait
in
mov
mov
int
sbb
stos
pop
xor
out
pop
mul
cmp
leave
xchg
icebp
vorps
pop
xchg
test
test
jg
in
xchg
inc
test
call
lea
sub
push
lret
ret
ret
test
cmp
dec
sbb
jae
ljmp
movsl
lcall
cmp
int3
aaa
xor
andl
cmpsb
and
sub
adcl
leave
subb
jno
faddl
fxch
cwtl
arpl
in
mov
cld
outsl
hlt
xor
cmc
dec
push
addr16
movsb
xchg
push
hlt
dec
mov
mov
or
inc
fidivrl
out
fnstcw
push
testl
mov
mov
cmpsb
inc
mov
pop
fdivrl
outsb
cld
and
adc
push
jmp
mov
int
imull
imul
dec
js
jecxz
jne
jno
stos
pop
in
dec
sahf
push
stos
or
jge
je
mov
jmp
lods
pop
fldenv
pushf
cmp
inc
sub
mov
sbb
add
es
stc
dec
pop
push
and
push
in
mov
scas
ljmp
popa
cmpsb
jl
js
cmp
sub
lods
fwait
arpl
inc
inc
mov
add
add
adc
mov
arpl
clc
jns
jle
inc
scas
popf
mov
test
dec
pop
insb
ja
cmp
mov
fnstenv
adc
jge
in
ds
xchg
into
and
popf
mov
addr16
mov
or
aaa
ljmp
jg
sbb
sbb
jo
movsb
sarb
stc
cmp
and
xor
inc
js
jg
or
int3
fwait
push
dec
sbb
mov
jle
cmpsl
lret
inc
mov
test
pop
iret
pop
ret
daa
mov
pusha
and
lea
inc
xchg
sbb
enter
ja
inc
aad
mov
xlat
sbb
jnp
sahf
lret
pop
adc
mov
mov
mov
ret
push
dec
or
fmulp
je
fs
push
jge
mov
sbb
add
pop
mov
nop
aad
inc
cltd
es
in
mov
movsb
sahf
and
in
xor
outsl
loop
mov
add
in
outsb
lods
add
addb
xchg
mov
out
lea
insb
adc
dec
add
imul
pop
sbbl
insl
cmpb
jae
repz
mov
pop
iret
pop
pop
inc
call
gs
scas
call
mov
inc
mov
enter
scas
or
test
repnz
movsl
inc
je
fwait
pop
cmpsb
int3
sbb
adc
sub
out
repnz
movsb
and
mov
xor
jg
push
add
pop
and
mov
out
arpl
imulb
lret
xchg
je
sub
ret
mov
icebp
stc
push
test
in
aaa
pusha
aas
jbe
sub
xor
sbbb
das
in
popa
adc
dec
inc
cmp
sbb
arpl
cmp
push
push
push
lret
jmp
mov
cli
jmp
pop
mov
ss
dec
ds
leave
mov
daa
mov
push
outsb
inc
in
push
or
orl
outsl
and
aaa
xor
mov
push
testl
in
inc
cmpb
sbb
jmp
out
lret
dec
mov
xchg
add
cmp
mov
add
cmp
cmpsl
fs
std
sbb
xor
mov
cld
test
push
sbb
pusha
dec
and
sbb
cmp
in
cmp
mov
movsl
dec
push
sub
push
mov
adc
pop
cmp
arpl
sbb
push
mov
mov
mov
xchg
push
dec
in
dec
mov
aas
sub
imul
mov
xor
mov
pop
ljmp
outsb
bound
xor
jle
stc
dec
mov
dec
xchg
test
pop
ds
cmp
cld
scas
pusha
testb
or
lret
pushf
sbb
push
push
pop
daa
sbb
cltd
mov
fstp
jl
inc
fcomps
sbb
sub
rep
into
pop
fwait
and
xor
or
stos
lahf
outsl
insl
push
adc
xchg
inc
cmpsl
lds
push
add
and
add
xor
in
inc
xchg
xchg
mov
xor
mov
push
pop
fsubrp
mov
mov
jb
mov
sub
push
jae
cmc
sub
mov
lds
sub
or
dec
xor
out
dec
xchg
loope
push
test
dec
test
test
js
outsb
fdivr
rcl
sub
sub
cmc
cmp
add
sub
xchg
xchg
mov
aas
aas
sahf
cmc
pop
scas
add
mov
dec
and
mov
xchg
mov
or
push
and
sub
inc
push
add
sub
mov
jae
cmp
and
dec
pop
or
aad
insl
pop
fcompl
js
push
dec
mov
popa
mov
stos
mov
cld
ror
push
lods
adc
xchg
out
jnp
out
or
les
lock
data16
js
ret
and
movsl
jp
inc
mov
into
and
sbb
popa
mov
sub
inc
fcoms
push
loopne
dec
lods
movsb
inc
movsl
test
jge
cwtl
push
jno
pop
mov
sti
ds
fistpl
out
in
mov
int
xor
sti
test
aas
and
movsl
arpl
xchg
lcall
jnp
add
cmp
sbb
lret
sbb
ljmp
cmp
sahf
clc
hlt
inc
dec
pop
push
dec
mov
lret
fldcw
mov
pop
int3
and
sub
rcrb
fisubs
inc
ret
and
je
mov
repnz
push
mov
xchg
adc
jl
push
jmp
cmp
xchg
adc
out
movsb
out
pushl
xchg
mov
or
rorl
rcll
lret
aas
icebp
hlt
lea
jg
xchg
push
pop
push
mov
out
popf
notl
push
adc
cmc
out
lock
dec
jmp
pop
mov
pop
ficoms
sub
dec
push
jmp
scas
aaa
movsl
popa
xchg
popa
and
data16
mov
and
push
dec
out
insb
fimull
sbb
lcall
push
mov
cmp
je
in
gs
jecxz
push
xchg
pop
push
jns
sbb
pop
push
mov
push
or
sbb
xchg
repz
add
movsb
xor
test
outsl
push
inc
push
or
mov
push
shll
ficoml
aam
in
shrb
pop
push
jnp
rolb
mov
fcom
inc
adc
addr16
adc
push
mov
pop
adc
push
out
adc
mov
mov
pop
in
sub
cmp
stos
lret
xor
fs
popa
push
xchg
adc
mov
add
inc
dec
inc
mov
cmp
mov
or
sub
and
movsb
rcr
xchg
sbb
xor
stos
fisttpl
cmp
jo
shr
loopne
xchg
iret
inc
push
push
sbb
jae
fisubl
mov
jp
jmp
test
mov
add
cmp
mov
std
scas
dec
mov
xchg
inc
xchg
lret
ja
xor
outsb
loope
sbb
aam
and
jns
cmp
jp
add
scas
push
mov
mov
sbb
jbe
cmp
mov
fs
icebp
fisubrl
jle
xor
out
hlt
es
xor
imul
lret
push
fldcw
dec
jbe
mov
sbbb
testb
xchg
and
rcll
and
decb
xchg
cli
mov
cmp
push
sub
das
mov
sbb
inc
insb
cmpsb
fiadds
xlat
aad
fs
aam
mov
outsl
dec
and
iret
aam
pop
xchg
pop
popa
pop
dec
xor
sub
rorb
out
cmpsb
sub
insb
sarb
je
js
jge
cmp
hlt
jg
loopne
mov
icebp
push
sbb
xorb
aam
stos
ds
flds
push
or
lock
dec
push
lock
rorb
test
mov
jb
xlat
dec
push
in
iret
mov
push
inc
push
into
popa
ja
mov
sbb
pop
outsb
lret
dec
fisttpl
out
dec
jbe
xor
mov
fisubl
dec
mov
lret
mov
inc
jno
sbb
repz
or
scas
lds
dec
and
xor
cmp
sub
xor
les
insl
add
popa
popf
lahf
test
out
jo
pushf
sbb
sub
mov
mov
dec
in
adc
mov
mov
xchg
xchg
lret
mov
sbb
fildll
loopne
inc
shlb
lcall
add
leave
fdivr
mov
pop
aaa
or
sbb
sub
das
adc
inc
ss
sbb
icebp
mov
pop
or
push
lcall
pushf
ret
push
lds
negl
add
adc
cld
push
ret
jbe
clc
push
test
into
push
mov
adc
cmp
push
add
push
push
cwtl
jo
fisubrs
aas
push
mov
adc
dec
popf
popf
shrd
int
rcl
sbb
dec
popf
or
test
mov
lods
and
jae
imul
mov
lods
js
mov
dec
pop
rcr
movsl
push
push
jo
pop
push
jae
test
push
movsb
mov
push
outsl
cs
push
into
push
add
and
pusha
repz
push
out
pop
xchg
xchg
mov
mov
adc
mov
pop
push
jae
shll
jb
cmp
mov
cld
shll
ret
fwait
inc
daa
stos
push
push
mov
sbb
aad
ja
mov
adc
inc
ret
or
push
pop
xor
jge
cld
sbb
xchg
xchg
fucomi
push
cltd
and
push
inc
cmp
or
je
stos
adc
stos
mov
shr
stc
lret
jg
cmp
test
shlb
jecxz
stos
cmpsl
out
out
jns
xchg
xchg
imul
add
xchg
pop
push
dec
mov
mov
ficoml
xor
mov
sti
insb
mov
pop
xor
ret
lock
xor
stos
jecxz
cwtl
jmp
loope
cmc
adc
and
movsl
sbb
inc
adc
pop
testl
xchg
jbe
jb
inc
push
movsb
out
xchg
push
xor
testb
inc
and
out
xor
inc
pop
and
sub
fisttpll
inc
pushf
or
push
adc
adc
mov
rcl
dec
xor
jecxz
out
imul
mov
pusha
jecxz
cwtl
dec
repnz
dec
xor
xor
sub
xor
fbstp
push
rcl
add
cwtl
fbstp
xor
aaa
mov
sahf
lds
dec
je
sbb
add
sub
dec
cmp
and
aad
in
out
mov
fwait
js
inc
pop
pop
shll
sub
mov
pop
lcall
loopne
and
nop
dec
loope
mov
loopne
ja
lret
mov
loopne
push
cld
mov
dec
pop
sub
mov
pop
jae
nop
movsl
rol
cmp
and
cmp
dec
and
sbb
mov
or
xchg
mov
and
pop
mov
sub
dec
test
and
jne
dec
testl
or
xchg
mull
fistl
and
mov
adcl
loop
lret
mov
or
rolb
aad
push
outsl
fs
inc
lret
dec
xchg
out
jae
dec
data16
fldcw
and
xor
loope
xchg
lock
xlat
les
fsubr
addr16
pop
lods
cmp
in
sub
mov
fcompl
push
add
sub
lret
data16
xor
jg
loope
lea
jp
lds
mov
shrb
int
push
cld
les
rcll
mov
idivl
push
pop
mov
mov
jb
lea
jnp
jb
addb
sti
jo
repz
iret
test
cmpsl
fwait
jae
sbb
sti
xchg
je
mov
in
and
aaa
jmp
fcoms
xor
sbb
fidivl
pop
inc
dec
adc
dec
lods
loopne
loop
mov
fcmovbe
arpl
push
jb
sbb
pop
lret
cmp
rolb
insl
jbe
sub
inc
fnsave
xchg
dec
xchg
aas
mov
clc
mov
xor
jne
xor
aam
iret
lahf
mov
mov
cmp
dec
fdivrl
int
hlt
pop
std
mov
lea
out
mov
sub
mov
jae
idiv
push
lea
push
dec
sub
repz
arpl
xchg
inc
das
ja
push
add
add
mov
sti
lods
jno
sbb
xor
movsl
pop
lret
cmp
or
sbb
and
pop
mulb
xchg
scas
out
mov
out
cwtl
xor
add
sti
jl
xor
mov
push
shr
mov
lock
jne
insb
mov
sti
in
clc
roll
sbb
mov
cmp
cmp
xor
les
jno
aas
std
rcll
mov
sub
push
jbe
sbb
xor
adc
lea
ret
cwtl
and
iret
es
jne
lods
xchg
mov
push
adc
add
push
xor
xchg
sahf
sbb
xor
jmp
leave
xor
cmp
lret
scas
ror
icebp
xchg
push
lret
adc
test
adc
lret
pushf
idiv
sub
cmc
popa
pop
sub
xorl
cmp
xor
inc
xlat
push
out
push
int3
pop
bswap
stos
add
nop
fwait
dec
xorl
and
jge
std
movsl
mov
daa
sub
in
out
xchg
sahf
je
lret
and
inc
mov
mov
out
iret
sub
arpl
test
push
mov
lea
or
sbb
loope
sbb
pop
repnz
out
cmp
pop
mulb
xchg
mov
push
sub
cmp
or
out
scas
push
cmp
fbld
dec
mov
xchg
fwait
ljmp
mov
in
xchg
push
cmp
or
add
cmp
ja
add
enter
adc
mov
div
mov
repnz
push
mov
xchg
sub
xchg
and
inc
adc
add
lahf
cld
push
sub
aam
ret
or
cld
mov
sub
lods
addl
orl
sti
and
cmpsw
sub
not
sbb
sub
flds
nop
inc
out
movsb
add
fs
mov
xor
push
mov
pop
out
add
fistpll
adc
scas
dec
adc
push
js
aaa
xorb
pshufw
jno
or
mov
jp
mov
lcall
or
leave
mov
dec
sbb
xchg
clc
cmc
sub
cmp
pop
iret
mov
lods
lock
incb
mov
pop
pop
pop
aad
sbb
loopne
shrb
in
jmp
cmc
mov
pushf
jbe
cmp
cwtl
cmp
pop
adc
xchg
sti
inc
mov
mov
test
out
ret
jb
int
sti
push
dec
dec
cmpl
push
jns
xchg
mov
pop
in
mov
sub
xor
lahf
mov
ljmp
inc
push
es
fucom
jl
fsubr
xor
push
pop
cld
gs
or
cwtl
rorb
fistpl
mov
inc
int3
daa
enter
adc
mov
test
dec
lods
repz
and
gs
adc
jl
add
jl
rolb
push
mov
mov
js
pop
test
mov
gs
xor
aas
scas
enter
mov
jecxz
dec
lret
rcrb
xchg
or
jb
pop
inc
mov
repz
add
in
cmp
in
or
or
stos
push
icebp
stc
add
jg
cmp
arpl
shrl
insl
shll
ja
fcomp
jno
and
fs
add
dec
mov
xchg
call
dec
nop
out
gs
mov
xlat
pop
jno
cs
xor
inc
loope
in
in
dec
mov
mov
pop
shrl
mov
add
adc
out
divb
sub
outsl
pop
adc
ja
pop
mov
dec
or
sub
lahf
sbb
mov
cli
or
or
test
pop
dec
hlt
out
add
xchg
out
in
sbb
je
push
xor
add
data16
pop
jne
scas
ljmp
push
ja
std
addl
inc
dec
add
sbbl
into
xchg
das
ja
sbb
dec
out
add
and
iret
push
inc
into
or
cmpsl
loopne
mov
sub
xchg
and
cmp
cmp
cmpsl
xor
inc
int
negb
int
add
mov
inc
in
out
xchg
outsb
mov
mov
imul
cmp
ja
shrb
inc
roll
int3
jl
push
cmp
addb
adc
daa
bound
icebp
adc
jo
cs
cmp
nop
dec
adc
pop
out
imul
jns
scas
sbbl
imul
mov
jge
jp
loop
xchg
inc
cmc
mov
ds
test
adc
and
es
pop
mov
push
mov
fldl
into
xchg
xchg
cmp
ja
pop
xchg
xor
cmc
cmp
andb
data16
push
and
push
xor
test
and
loope
shl
ret
add
sub
mov
testl
popf
xchg
or
inc
jns
push
inc
cli
scas
and
in
mov
lods
aas
out
jnp
push
push
pusha
scas
mov
mov
xor
sub
clc
inc
loop
mov
loope,pt
jae
cmp
hlt
cmp
jb
pushl
ret
adc
and
leave
lds
jo
inc
repnz
mov
mov
mov
jg
loope
add
bound
cmp
mov
cli
xor
mov
push
pop
rclb
fistpl
mov
ret
mov
adc
mov
hlt
jbe
cmp
bound
push
ljmp
sbb
mull
insl
adc
hlt
in
test
pop
bndldx
stos
cs
jg
push
jl
call
pop
mov
inc
add
pop
jo
mov
test
jae
xchg
aas
lahf
pop
stos
adc
push
jmpw
mov
add
out
jo
cltd
adc
shr
add
imul
ljmp
cmp
rcrl
outsb
pop
push
cltd
sbb
ja
test
imul
sub
mov
xchg
movsb
mov
clc
cmp
mov
jmp
ljmp
aad
inc
dec
mov
into
sbb
mov
adc
sbbb
faddl
xor
rcrb
xchg
mov
test
pop
add
add
cmp
push
mov
cs
cmp
dec
aad
sbb
mov
stc
cli
mov
adc
rcll
repz
hlt
inc
ret
jmp
dec
sbb
mov
enter
sub
inc
insb
clc
and
mov
jg
lods
out
add
aad
mov
int
lods
cmp
pusha
xchg
add
movsb
cmp
and
fnstsw
mov
cmp
fstpl
dec
jg
imul
push
outsb
pop
push
lcall
lea
lahf
jnp
inc
dec
fiaddl
loopne
ss
pop
and
adc
jns
test
jb
jge
cmpsl
aad
rcl
in
push
cwtl
mov
cmp
in
stos
or
lock
cli
xchg
ss
jb
jnp
aad
mov
and
mov
test
jecxz
lret
sbb
sub
sbb
mov
lods
out
push
adc
adc
fwait
les
add
jae
add
xor
mov
cli
push
dec
xchg
jbe
aad
push
scas
mov
or
pop
ss
inc
mov
pop
xor
dec
add
sub
popa
mov
mov
in
inc
jg
popf
dec
xchg
ss
enter
lds
cmp
jns
aas
je
pop
rcll
shll
sahf
cmp
dec
mov
push
push
data16
or
int3
or
insl
cmpsb
or
xor
cmp
cmp
add
cwtl
out
int3
loope
fimuls
ljmp
mov
cmp
movb
mov
ror
aam
sbb
dec
lds
dec
sbb
pusha
cmc
rcrl
fwait
cmp
xor
int
inc
xor
es
and
dec
push
mov
jmp
sbb
lock
adcl
xchg
adc
and
iret
sub
mov
and
jp
jecxz
cmc
and
cmp
mov
cmp
adc
in
stos
xor
jae
xor
mov
js
iret
inc
test
into
push
scas
fs
cmc
aaa
dec
and
aam
xchg
mov
xchg
in
and
jg
adcl
lds
push
mov
dec
mov
ret
cmp
xchg
mov
cmp
inc
arpl
add
mov
mov
fistl
and
push
adc
fnsetpm(287
loopne
scas
add
add
push
shl
je
outsb
hlt
scas
imul
jns
lahf
nop
insl
fmull
push
or
cmp
inc
mov
andb
sbb
cwtl
xor
dec
mov
outsb
repnz
fistl
cmp
mov
sbb
pop
cmp
test
rorl
jg
daa
push
gs
or
loopne
jle
test
je
jg
ds
popf
das
sarb
cli
ret
aas
jne
out
loop
lods
sub
dec
cwtl
fadd
add
imul
nop
jno
popf
arpl
cmp
jns
clc
hlt
pusha
mov
adc
pusha
punpckhwd
mov
push
or
xlat
cvttps2pi
test
imul
inc
sub
gs
dec
ficompl
outsb
fs
lret
jg
dec
ror
sbb
cltd
int3
jg
popa
cmp
xchg
ret
push
xchg
inc
lock
movsl
xchg
and
jbe
xor
and
aad
lods
movsl
imul
push
mov
jb
inc
dec
sbb
add
xor
pop
mov
es
push
shlb
out
xchg
pop
ja
clc
xor
decl
xchg
push
in
nop
fstp
jnp
xchg
sub
cmpsl
lock
lock
les
cltd
push
daa
mov
lock
addr16
test
cmpsl
test
sbb
inc
xchg
out
cmp
pop
inc
daa
xchg
shlb
mov
add
xor
ret
xor
sbbb
cmp
fistpl
cmp
pop
iret
dec
cmp
inc
adc
inc
sub
icebp
mov
sub
push
xchg
mov
mov
sbb
scas
gs
cltd
repnz
aad
fdivrl
dec
dec
lock
loop
aad
jle
adc
push
inc
sub
aas
dec
jnp
call
push
cmp
rcrl
filds
push
cmp
divb
shr
jmp
out
fstps
enter
callw
ret
addr16
xchg
push
int
das
sub
dec
rcr
dec
or
mov
fcmovnb
cmc
call
aas
xchg
stos
lds
lock
scas
push
enter
mov
dec
push
arpl
dec
inc
pop
jge
push
imul
popf
xchg
cmc
icebp
aaa
leave
mov
xchg
add
dec
out
inc
add
mov
fisttpl
jnp
push
arpl
stc
std
stc
js
xlat
cmpsl
xlat
inc
cwtl
xor
or
pop
cmp
and
jae
push
mov
out
imul
orb
or
cmp
leave
ljmp
fnstenv
mov
mov
lcall
in
leave
test
dec
xchg
mov
je
dec
or
xor
aam
pop
ficompl
sti
ret
fs
cmp
push
mov
jns
mov
das
sbb
int3
test
fistpl
and
test
sbbb
push
jecxz
movsl
xchg
fstpt
outsl
mov
test
lds
idivl
sar
mov
mov
dec
adc
mov
push
outsl
popa
pop
sti
orl
mov
jae
out
repz
dec
or
jbe
repnz
test
hlt
or
push
pop
and
enter
inc
mov
pop
inc
pop
pop
xchg
loop
sub
aas
jns
lahf
iret
fmuls
sub
in
or
add
insb
or
add
dec
mov
mov
mov
inc
les
mov
divl
jl
mov
clc
adc
push
jecxz
adc
popl
sub
test
into
lcall
push
adc
mov
and
inc
mov
sbb
sub
mov
test
jge
cmp
pop
pushf
je
jle
sbb
imul
je
or
jmp
mov
lods
dec
xchg
sbb
sbb
cmp
dec
das
loop
pushf
inc
jns
test
enter
scas
icebp
cs
sbb
mov
pop
leave
mov
cmp
sbb
cmpsl
jmp
les
ror
das
pop
xchg
mov
loop
mov
mov
rorb
sti
xrelease
and
add
test
lahf
or
cmp
mov
mov
out
jmp
sbb
sbb
shr
lods
stc
dec
ja
sbb
shll
iret
in
jp
ds
mov
out
dec
imul
inc
mov
jne
test
and
mov
jo
loopne
ds
inc
xor
stos
sbbl
mulb
mov
xor
loope
xchg
subl
fs
ficoms
cs
stc
pop
xchg
out
leave
xchg
sbb
loopne
clc
mov
les
dec
pop
dec
lcall
jmp
jmp
stos
repnz
cmpsl
sahf
fcmovne
mov
outsl
adcb
xchg
xchg
cmp
lods
pop
mov
push
stc
cli
push
loopne
and
inc
jbe
mov
test
mov
test
imul
jns
mov
dec
stos
repnz
aam
imul
fcomps
xor
sub
jecxz
jo
imul
scas
test
inc
inc
loop
push
push
out
cmp
in
push
add
cmp
jp
out
push
xor
push
push
rorb
or
cltd
and
or
xchg
xor
xor
xchg
or
rorb
fdivs
aas
ficomps
or
int3
sub
insl
cmp
add
push
loope
nop
and
call
xchg
in
cli
mov
push
pushf
test
dec
scas
push
ret
adc
shrb
nop
inc
cmp
shll
pop
mov
mov
mov
xchg
pop
shlb
pop
lret
push
xchg
pop
shl
ret
ss
xchg
cmp
dec
pop
inc
pop
jg
repnz
fmuls
fldl
cmpsb
adc
mov
lahf
and
xlat
jns
mov
aas
pop
jmp
pop
idivb
mov
pop
pop
iret
inc
jp
push
cltd
push
lds
jb
pushf
adc
and
sub
lret
shll
adc
test
mov
imul
pop
das
subl
pop
add
in
aam
push
mov
mov
aas
mov
mov
jmp
je
fisttpll
loope
shlb
les
aam
into
push
roll
push
int
test
and
pop
xorb
hlt
cmc
ret
sub
push
loop
mov
xlat
hlt
fs
jno
es
dec
push
imul
jp
jge
inc
je
lea
xorl
fsub
cmp
dec
shl
addl
mov
outsb
addr16
pop
movsl
cmp
jmp
int
inc
dec
xlat
inc
in
fwait
dec
cli
out
inc
pop
addr16
lret
mov
dec
ss
movsb
jg
pop
pop
adc
or
cld
ret
xchg
dec
movsb
dec
mov
adc
stc
push
lds
pusha
and
out
ret
mov
fidivrs
xchg
cmpsl
sbb
aam
jmp
inc
popl
fisubrl
in
mov
cwtl
sub
xchg
sbb
xchg
sbb
mov
mov
xchg
mov
lcall
fadd
pop
push
xchg
mov
sbb
add
cs
adc
inc
fistpll
xchg
mov
xor
ret
les
and
pop
push
sbb
xchg
add
clc
xor
call
ret
cmp
jno
push
out
mov
lret
and
not
sub
int3
sar
in
cmp
dec
mov
lods
daa
fnsave
in
shrl
push
cld
mov
jmp
cmpsb
subb
inc
ret
mov
xchg
xor
subb
shll
add
pop
pop
js
sub
push
mov
add
push
lret
mov
xor
dec
jmp
mov
lea
and
mov
loopne
bound
es
sub
stc
negl
jp
push
inc
aaa
rclb
cltd
js
cmp
mov
jmp
mov
insl
xchg
in
inc
nop
lahf
dec
cli
sbb
fldl
outsl
sub
mov
mov
inc
fcmovnbe
loopne
mov
xor
and
mov
mov
stos
inc
dec
cmp
adc
inc
out
pop
and
mov
ljmp
adc
mov
arpl
lcall
gs
sti
mov
xlat
in
xor
jge
jo
popa
xor
test
mov
push
cmpl
sbb
jno
jp
idivb
es
loopne
aas
add
mov
cld
hlt
lods
sub
popa
mov
xchg
sub
out
mov
jg
jg
pusha
pop
or
in
cli
test
adc
fcoms
lock
cmp
cs
xlat
lods
bound
jno
xchg
in
sahf
leave
cmpsb
adc
test
cmp
or
jle
aas
jl
movsl
mov
cli
pop
pop
notb
ds
xchg
xchg
js
ljmp
push
add
out
pop
pushf
xchg
div
xor
mov
rcl
pusha
add
push
lods
lcall
cli
sbb
and
popa
insl
or
dec
push
xchg
into
mov
xchg
dec
push
or
test
mov
mov
call
inc
push
pop
adc
outsb
lods
out
clc
dec
out
cwtl
jns
sbb
dec
mov
xchg
mov
mov
divb
enter
or
jmp
repnz
je
es
pop
xor
ret
mov
adc
xchg
mov
js
repz
cmp
adc
je
pushf
ret
sarl
pop
movsb
roll
inc
clc
insb
mov
and
and
arpl
popa
nop
jnp
push
lea
cmpb
call
cs
mov
rorl
je
sub
cltd
ret
xor
movsl
push
ffree
push
mov
jl
add
outsb
mov
add
mov
les
pop
imul
rolb
pop
clc
inc
jmp
mov
out
add
xor
lret
mov
cmpsb
fstpt
pop
pop
add
ret
xor
pop
xlat
movsb
es
inc
lret
clc
push
mov
sahf
lret
popf
loop
lret
mov
mov
adc
push
or
or
cmpsl
test
add
mov
mov
inc
jnp
adc
hlt
adc
mov
nop
test
stos
or
pop
inc
jbe
lds
popf
xor
in
std
lods
iret
fiadds
jge
pop
sbb
int
test
mov
and
adc
adc
xchg
xor
gs
or
pop
xor
and
hlt
pusha
out
and
loop,pn
pop
xor
enter
pusha
sub
xor
xchg
sbb
add
shr
int
or
fs
xchg
and
jg
xchg
fnstenv
gs
inc
lret
fsubl
inc
in
test
jnp
xor
mov
pusha
mov
mov
jo
cmpb
xchg
sbb
jecxz
lret
mov
jns
lods
outsl
mov
out
xor
adc
push
cli
xor
mov
lret
ss
test
imul
or
sahf
leave
sti
sub
push
imul
js
adc
lock
je
in
sub
ds
jmp
add
mov
movsl
out
mov
xlat
popa
push
jno
imul
mov
dec
das
add
enter
inc
mov
mov
push
adc
mov
mov
cmp
mov
in
cmpsb
add
pop
test
inc
divl
inc
daa
or
xor
rolb
ficomps
pushl
jl
mov
fsubr
mov
sahf
lea
push
dec
mov
neg
pop
cmpsl
dec
nop
inc
push
dec
lock
addr16
out
outsb
sarb
outsb
es
mov
pop
xor
xor
jb
pushl
leave
sbb
mov
mov
push
sti
sub
or
xor
imulb
jne
ljmp
and
cmp
movsl
inc
pushf
fcmove
adc
mov
repz
icebp
pop
mov
fidivrl
mov
add
rdtsc
pop
loopne
jmp
into
push
xchg
in
dec
ljmp
imul
xor
push
adc
cmp
aam
dec
jge
nop
adc
mov
jb
adc
jnp
sti
lahf
jb
jmp
push
or
fldl
and
xchg
mov
pop
inc
xchg
enter
fcomi
jns
sub
inc
cld
ret
jge
sub
mov
aaa
addb
mov
xchg
add
pop
xor
lods
enter
outsl
shlb
aad
and
popa
push
call
mov
ja
jp
repz
xor
outsb
mov
lock
mov
clc
cmp
lds
fstp
xchg
push
mov
sti
iret
icebp
insb
jnp
jmp
dec
data16
mov
jo
imul
aad
loop
stc
or
xchg
inc
into
jno
mov
fs
push
add
in
cmpsl
xchg
jp
inc
adcl
and
mov
cmpl
mov
dec
out
add
mov
leave
adc
es
pop
mov
ficoml
add
pop
ret
adc
rcll
pop
loope
xchg
pop
jnp
hlt
mov
orb
jp
dec
xchg
and
mov
adc
fiaddl
sub
mov
jo
fisubl
pop
popf
fadd
pusha
adc
cltd
push
ss
xor
dec
add
add
xlat
xor
test
lock
scas
jg
mov
insl
jne
and
lcall
pusha
ja
bound
shrl
andb
jp
lret
jp
outsl
mov
mov
pop
js
fsubs
and
sarl
mov
xchg
xchg
into
outsb
mov
ds
mov
pop
imul
jo
sbb
sub
cmc
fdivl
inc
mov
pusha
rol
pop
dec
xor
test
jnp
or
call
push
adc
xlat
mov
mov
lret
jae
jo
daa
stos
pusha
adc
add
aam
clc
outsb
add
mov
addr16
test
inc
dec
aaa
push
mov
or
and
sbb
fsubrs
inc
pop
add
dec
push
jbe
sahf
insb
inc
insl
mov
cmp
notl
sbb
lahf
push
xchg
dec
and
xchg
clc
loop
add
jmp
adc
aad
jle
add
je
dec
rcrl
inc
or
stos
mov
dec
dec
jne
or
mov
or
and
movl
bound
xchg
lock
fs
jnp
stos
ret
subl
les
cmpsb
xchg
imull
dec
pop
or
mov
pop
cmpsl
mov
mov
jp
mov
test
xchg
cmpsb
aam
mov
lods
cld
pop
sbb
inc
mov
pusha
mov
mov
fsubrp
mov
inc
xchg
jge
aad
insl
mov
xor
inc
pop
rorl
adc
push
fdivl
and
or
mov
popf
mov
daa
cmp
jp
in
jg
dec
sub
add
cmp
sbb
les
cmp
adc
mov
scas
movsb
mov
xchg
push
aad
scas
cmp
sbb
mov
fsubs
icebp
testl
jnp
adc
into
pop
lret
fucomi
mov
lea
loope
add
lret
push
adc
dec
mov
mov
fadds
push
cli
movsl
loop
ljmp
data16
inc
insl
ret
sbb
lods
push
movsl
sub
and
aad
in
mov
jg
inc
adc
inc
lods
pop
popf
lea
addr16
les
xor
jno
mov
sahf
gs
push
bound
dec
pop
mov
inc
out
addl
pop
movsb
sub
int3
in
mov
ret
das
xor
les
push
incb
stc
adc
lock
mov
sub
stos
jno
shlb
and
repnz
pop
adc
sub
lahf
pop
adc
imul
cmpsl
pop
loope
std
mov
pop
mov
xchg
imul
push
jecxz
fwait
push
jb
push
jmp
dec
and
sbb
ficompl
push
mov
or
in
add
in
outsb
adc
dec
cmp
addb
test
sti
orb
pop
xchg
mov
cmc
movhps
pop
and
inc
mov
pop
ja
pop
aaa
outsb
enter
dec
pmovmskb
rolb
push
ss
jo
lods
jnp
in
loopne
mov
xchg
loopne
mov
out
pop
push
xor
faddl
cld
fsubrs
and
lea
sbbl
loope
jmp
xchg
daa
pop
outsl
lds
adc
dec
daa
gs
sbb
jl
adc
push
inc
xor
pop
out
push
jecxz
lea
jns
loopne
mov
out
les
lock
lods
lock
enter
xorb
sbb
mov
jns
add
fimuls
faddl
das
mov
lea
and
adc
test
dec
and
push
cli
add
adc
push
scas
jge
ja
ror
imul
and
jnp
cmp
pop
jbe
fs
adc
ss
pop
adc
inc
out
call
mov
cmp
push
xor
and
fisubs
sub
mov
cmpsl
fwait
and
lcall
mov
mov
dec
mov
and
fcmove
and
inc
insl
pop
inc
addb
in
cmpsb
movsb
or
cli
jne
push
mov
push
lret
ja
mov
leave
xor
mov
clc
roll
out
sub
in
lcall
les
fnstsw
fldt
jmp
sbb
leave
push
ret
aam
aad
in
cmp
adc
lea
addr16
or
jp
in
lock
mov
les
pop
and
sarl
and
dec
outsb
add
or
hlt
push
clc
pop
xor
dec
pop
mov
mov
loopne
push
nop
clc
xchg
aad
or
insl
xchg
aad
jle
sbb
push
add
fisubrl
movsb
push
cltd
push
adc
outsl
push
sbb
pop
pop
pop
cmp
cli
aam
jmp
loop
mov
data16
xchg
lcall
lock
enter
sub
mov
pop
inc
cmp
mov
pusha
pop
inc
aam
cmp
sbb
iret
mov
repz
scas
add
loop
sar
data16
dec
jg
add
mov
mov
out
inc
mov
in
lock
add
inc
or
popf
jbe
mov
and
adc
push
mov
shrl
rol
pop
mov
cwtl
sbb
insl
pusha
outsb
rep
push
and
mov
imul
out
shr
pusha
xchg
sub
test
testl
jecxz
adc
roll
bound
lcall
aas
dec
lock
dec
loop
pop
rclb
sbb
into
jne
aas
inc
pop
mov
jae
lret
adc
inc
int
dec
lcall
adc
fs
pop
push
mov
bound
sahf
imul
js
jg
dec
mov
xchg
xchg
ds
cwtl
popf
xor
shlb
dec
mov
push
pop
mov
outsb
outsl
pop
mov
fdiv
mov
clc
mov
cld
jp
pop
adcl
in
jns
arpl
sti
out
and
sub
stos
test
ret
dec
and
int3
push
xchg
cmp
loope
pop
iret
sti
ss
stos
fisubrs
fs
inc
negl
das
sbb
sub
dec
popl
stos
dec
outsb
rolb
xor
lea
add
add
sbb
test
mov
push
pop
pop
int
jle
xor
out
ret
mov
add
mov
fimuls
push
int
popfw
popf
mov
inc
movsb
out
xor
scas
arpl
mov
push
call
or
xchg
and
in
fisttpll
lea
mov
jbe
push
pushf
ret
xchg
sub
push
gs
jp
cmp
int3
sgdtl
push
std
mov
test
add
test
lret
or
imul
rcr
lret
sbb
xor
pop
subb
push
sbb
in
lds
insb
push
pop
mov
out
arpl
pop
adc
dec
dec
xchg
lret
in
loopne
outsl
lret
mov
pop
cs
pushf
in
ljmp
loope
mov
addps
ret
clc
sub
repz
push
mov
cmp
arpl
loop
sti
sarl
xchg
filds
mov
mov
daa
or
push
bound
inc
and
shrl
inc
int3
fnstenv
std
jge
jne
pop
xlat
movd
in
mov
sbb
loop
lret
mov
inc
arpl
dec
out
dec
leave
or
ljmp
jne
adc
xchg
enter
pop
ffree
imul
stos
xchg
std
fsts
nop
xor
xchg
mov
jmp
rcll
decb
push
loop
push
cmp
jmp
lret
mov
push
cltd
ljmp
xorl
cmpsb
mov
dec
dec
push
pop
mov
pop
lods
push
lcall
or
push
pop
jmp
add
pop
pop
mov
adc
sub
std
adc
mov
stos
mov
push
iret
addr16
mov
loope
jne
push
jl
inc
cmp
lret
and
outsb
das
call
loop
xor
test
push
mov
outsb
push
leave
xchg
mov
cltd
inc
repz
xchg
add
mov
cmpb
adc
cmpl
repnz
adcl
cmp
push
je
xor
inc
lea
add
jae
and
push
push
insb
xorl
jo
pop
movsl
jae
mov
out
popa
push
stc
sub
lods
mov
pusha
test
ror
mov
rcr
adc
mov
out
sbbl
fst
push
std
pop
push
pop
inc
mov
stos
mov
push
stc
add
fwait
pop
mov
lods
out
push
out
ljmp
and
sbbb
cmp
jge
ror
loopne
adc
mov
out
dec
pushf
fdiv
insb
lret
jno
mov
dec
enter
adc
roll
adc
sahf
jne
sub
aas
jbe
and
out
cmp
scas
sti
stos
test
mov
mov
pop
push
aad
int3
icebp
sti
sub
pop
sarb
xchg
negb
call
xchg
pusha
mov
cmpsl
in
mov
cmp
sti
push
jbe
jmp
push
fldl
in
scas
push
xor
pop
mov
mov
fstps
xchg
jmp
pop
xor
inc
xchg
pusha
sub
rcr
gs
or
aam
inc
adc
rcrb
out
jl
dec
inc
add
adc
jmp
jmp
sub
xor
out
daa
mov
inc
jnp
hlt
xchg
insb
pop
xchg
push
nop
push
cmp
cmp
jbe
cs
mov
sbb
dec
sahf
pop
ss
adc
mov
xchg
adc
jecxz
cmpsb
inc
sarb
cmp
pop
xor
notl
inc
cmp
in
insb
out
ret
in
or
lret
add
out
mov
int
mov
gs
out
xor
lods
inc
pusha
add
jne
inc
jmp
bound
pop
jb
rorb
mov
dec
test
repz
sub
roll
push
aad
sub
jae
sbb
scas
dec
call
bound
int3
scas
sub
cmp
fmulp
jp
and
push
or
lods
sti
rorl
sbb
jne
outsl
scas
stc
cwtl
jb
fisubl
sbb
fs
and
sarl
lcall
xchg
lahf
adc
std
mov
cmpsl
inc
pusha
mov
or
add
div
inc
mov
filds
ljmp
sarl
hlt
fistps
in
xchg
test
or
push
pop
mov
xor
inc
popf
push
in
popf
shl
rcrl
in
jl
sti
cmp
mov
sub
mov
in
push
mov
dec
scas
push
xor
movsl
dec
scas
fdivrs
in
sbb
cmp
cmp
mov
shll
or
jmp
insb
xchg
push
ljmp
jo
in
test
jae
in
andb
mov
or
xchg
jns
in
cmp
xor
pop
pop
js
xchg
imul
jno
bound
xchg
std
in
popf
sub
cmp
cmp
mov
cltd
mov
scas
dec
xchg
xchg
das
cmp
mov
ret
pop
lock
loopne
mov
mov
jb
mov
shll
mov
mov
fstps
test
mov
jp
xor
cmpsl
adc
addr16
test
clc
mov
push
mov
adc
stos
sbb
ds
inc
out
repz
ret
xchg
cld
cmp
push
out
adc
mov
aam
and
xor
fcoms
dec
in
sti
push
add
dec
xor
add
sub
xor
shlb
pushf
loope
xor
push
push
xchg
inc
out
cld
jbe
clc
insl
lret
fcmovnbe
jecxz
cmpsb
sbb
out
sbb
mov
mov
pop
cmpsl
stos
jp
mov
mov
dec
imul
ja
and
outsl
pushf
fnsave
inc
cwtl
ds
arpl
push
dec
outsb
and
add
in
mov
movsl
cld
sbb
dec
sub
iret
dec
clc
sub
cmp
add
fcompl
scas
subl
xchg
rcll
inc
rclb
ja
add
xor
out
add
pushf
sbb
inc
adc
popa
sbb
jns
lds
aaa
pop
cmc
mov
jmp
outsl
rolb
sarl
sbb
sbb
xor
push
xchg
jb
sti
xchg
mov
sub
rcll
fwait
mov
fiaddl
in
dec
jl
cltd
xor
xor
push
or
dec
mov
aam
pop
es
inc
sarl
sahf
test
add
push
frstor
jmp
lock
inc
ret
std
shll
xor
loopne
call
push
das
jge
aaa
lods
jg
rolb
or
dec
xchg
sub
mov
mov
jbe
sbb
fidivs
push
popa
mov
aaa
lods
cmpsl
mov
xchg
pop
int
adc
xchg
mov
mov
jmp
mov
nop
sarl
adc
inc
subl
andb
or
ret
icebp
add
pop
mov
push
push
push
xchg
int3
ds
hlt
repz
test
movsl
lret
inc
inc
rcr
inc
sub
or
inc
inc
and
push
fsts
stos
jg
lods
addb
cmp
mov
mov
lcall
mov
sub
cmp
push
lds
xor
lahf
out
enter
scas
push
imul
or
pop
and
or
mov
popf
frndint
sbb
mov
repz
jmp
cli
inc
jg
rcr
scas
mov
jb
sbb
fcmovb
mov
std
mov
imul
pop
out
jae
inc
mov
inc
lret
push
lock
inc
sbb
lahf
jge
out
mov
pushf
push
loope
lcall
add
inc
mov
inc
pop
inc
std
dec
andb
rcrb
rclb
mov
jno
es
sbb
data16
dec
je
fisttpll
mov
xorl
mov
jo
add
or
outsb
sub
aas
andl
int3
stc
adc
jmp
incb
push
and
mov
sub
sub
sub
imul
lock
pop
es
add
mov
sti
mov
lahf
mov
and
jae
nop
ficompl
or
imul
sbb
testl
mov
pop
cmc
sub
jmp
xchg
pop
mov
repz
dec
and
sbb
push
jnp
push
pop
mov
arpl
dec
fadds
add
and
xchg
pop
mov
jae
mov
jo
pop
mov
hlt
pop
mov
or
sbb
es
shlb
mov
scas
jg
xchg
mov
in
popfw
push
mov
cltd
or
pop
pop
xor
and
cwtl
addr16
imul
int
dec
mov
inc
ret
lds
int3
int3
adc
ret
inc
pop
jno
mov
fs
testb
sbb
dec
test
mov
pop
ret
xor
dec
mov
xor
dec
xchg
pcmpeqw
popa
xchg
out
mov
mov
sahf
or
push
sub
lret
jno
iret
xchg
das
jge
addr16
nop
mov
sub
iret
icebp
dec
jno
aad
sbb
outsl
ljmp
int
stc
jecxz
sbb
movsb
adc
imul
enter
add
mov
jmp
iret
in
or
gs
subb
xchg
mov
les
cli
xor
xor
or
inc
insb
jle
cmp
inc
popa
mov
mov
cmp
lcall
adc
out
fwait
pop
js
pop
mov
outsb
daa
hlt
cmovo
and
xor
jns
xor
movsb
jo
ss
xchg
adc
ret
cmp
adc
fcompl
aad
dec
hlt
icebp
dec
add
out
lds
lock
scas
stos
enter
cld
ja
sbb
stc
cmp
push
mov
dec
lods
xchg
int
mov
mov
stc
fiadds
sub
mov
inc
flds
and
les
dec
test
aaa
mov
or
xor
xchg
insb
xlat
mov
pop
shlb
mov
mov
xchg
pop
pop
arpl
out
sbb
dec
sti
loopne
push
call
jo
addb
ret
mov
mov
mov
inc
scas
add
rcll
test
mov
js
cmp
ss
push
rorl
mov
in
cmp
lret
cmc
pusha
mov
test
loope
test
int3
push
sbbb
fwait
inc
xlat
lods
loope
mov
movlhps
add
add
xchg
dec
cmp
dec
pusha
imul
test
stos
mov
sti
or
cmp
lea
cmp
inc
ss
aam
jmp
and
sbb
jno
and
insl
enter
nop
sub
adc
rol
int3
roll
pop
xchg
arpl
out
xor
stos
pushf
jge
jge
std
clc
out
addr16
loope
adc
dec
loop
cmp
and
divb
sbb
sbb
lds
testb
jne
inc
lret
dec
inc
sub
fwait
int3
dec
push
pop
in
pusha
xor
iret
pusha
cwtl
loope
in
rcrb
dec
leave
jo
dec
and
pop
jge
lock
sbb
sbb
add
jge
in
fs
fstpt
divl
decl
pop
cmpl
cmp
sub
in
and
mov
clc
pop
insl
repz
test
fsubrs
push
add
in
push
adc
loopne
sub
jg
mov
std
ficoms
int3
mov
les
dec
repnz
shl
push
les
nop
dec
push
mov
xor
and
fsubrl
pop
push
adc
xchg
pop
shrl
sbb
add
xor
dec
fcom
lahf
das
insl
fsubr
divb
test
cmpsb
lret
adc
xchg
shl
aas
push
test
or
test
mov
inc
fsubs
push
repz
cwtl
subl
xor
pop
lret
outsl
adc
pop
lahf
ljmp
and
cmp
roll
ljmp
mov
sbb
loopne
xchg
pop
pop
cmc
push
mov
inc
in
loop
push
cmpsb
sub
cmpl
inc
cmp
mov
lret
pushf
xor
jnp
jp
out
xlat
stc
std
adc
add
xor
aad
outsb
xor
fucomi
pop
scas
jo
sub
es
mov
fistpl
xor
pop
int3
sub
pop
cmp
dec
mov
dec
out
cmpsl
cmp
xor
js
pop
jmp
inc
es
xor
cmpsl
pop
cwtl
shlb
jbe
adc
arpl
lds
push
add
dec
xchg
cs
push
push
fcmove
cs
insl
cli
mov
push
bound
and
jae
mov
dec
out
inc
test
push
les
lock
fcmovbe
stos
test
cmpb
dec
dec
sahf
lds
pop
loope
stc
and
lcall
mov
test
inc
inc
adc
iret
ret
add
cld
rorb
int3
add
scas
add
or
mov
jne
push
out
dec
mov
repz
inc
jle
arpl
aas
sbb
sbb
incl
cltd
cld
fwait
xchg
jo
xchg
jl
cmp
enter
scas
jo
or
daa
pop
popa
cmpb
or
fidivrs
in
lods
cmp
iret
dec
int
pop
insl
and
inc
aaa
out
lock
add
jns
mov
test
fsubrs
push
mov
scas
mov
xchg
sub
leave
stos
mov
jae
sti
movsb
xchg
jb
mov
dec
xchg
sarl
ds
xchg
pop
int
xchg
cs
stc
pop
cmp
test
jae
push
call
cmp
xlat
mov
fstpt
fwait
negb
leave
int3
inc
dec
cmp
adc
inc
dec
pop
dec
fxch
hlt
sbb
les
repz
loope
inc
jae
scas
int3
mov
cvtpi2ps
jne
xchg
loopne
movsl
push
loop
sbb
in
push
inc
imul
xor
jp
jecxz
mov
test
sub
mov
jne
out
out
out
cwtl
push
or
dec
add
push
add
xorl
mov
iret
aam
bnd
xchg
mov
incb
or
lods
jo
inc
jb
inc
inc
cmp
mov
repnz
decb
fwait
inc
push
mov
inc
pop
repnz
jecxz
cwtl
xchg
sub
pusha
inc
cs
aas
ret
clc
js
adc
das
insl
xchg
or
push
test
mov
paddw
andl
jmp
movsb
lods
lcall
lcall
data16
jmp
pop
loop
lcall
push
pushf
cmpb
xchg
lret
and
cmp
addl
push
add
rol
iret
adc
cld
push
bound
gs
mov
pop
xor
imul
push
xor
jne
ret
insl
xor
inc
sti
and
fdiv
fwait
mov
f2xm1
xchg
int
xlat
aas
mov
mov
xacquire
shr
xchg
cmpsl
sub
sbb
mov
orb
sub
hlt
out
dec
sbbb
xorb
pushf
sbb
xchg
negb
ljmp
sbb
fwait
shll
mov
inc
jecxz
push
std
push
push
sbb
std
outsb
xchg
adc
xlat
jmp
add
inc
inc
out
orl
movsb
loop
sub
cmp
pop
pop
pop
stos
das
jmp
push
cmpsl
dec
inc
and
pop
lret
or
int
loop
icebp
ldmxcsr
stc
sarl
sub
mov
mov
mov
jmp
fsts
mov
aad
push
movsb
xchg
pop
imulb
mov
icebp
mov
popf
mov
mov
nop
scas
or
cmp
push
xchg
mov
cltd
push
ret
out
push
ret
xchg
mov
jb
scas
outsb
or
xchg
ficoms
jge
xor
add
lods
test
sub
jnp
pop
inc
daa
inc
and
pop
out
movsl
dec
stos
xchg
test
movsb
rcrl
dec
iret
sub
lock
out
lods
cmpsb
jmp
lret
out
lret
dec
arpl
jo
movsb
iret
push
cmpsb
or
pop
ss
inc
rcll
lea
cmp
jg
xor
lret
push
repz
in
loope
ja
or
cmpsb
push
fdivs
pusha
xorb
dec
xchg
sub
fdivrl
mov
pop
rcrl
fnstsw
stos
add
or
lds
adc
push
rcrl
loope
sbb
mov
sub
ja
test
movsl
jno
test
inc
or
je
les
cwtl
sbb
push
sbb
icebp
out
in
jne
pop
pop
aad
std
pop
dec
push
aaa
jno
test
xor
cmpb
pop
cmc
aam
mov
inc
int
daa
inc
sti
hlt
mov
mov
repnz
es
dec
xorb
and
shrb
les
rorb
test
cmp
adc
mov
prefetchnta
adc
pushf
inc
jp
push
jg
push
add
push
bound
mov
fildl
clc
cmpb
inc
adc
xchg
lret
add
cli
sbb
test
repnz
ss
jle
mov
lods
pop
dec
aam
pop
dec
aad
repnz
stos
xchg
mulb
adc
and
mov
mov
icebp
sar
lock
ds
lea
movsb
test
cltd
fsubl
aad
arpl
xor
push
sbb
insb
pop
jb
adc
dec
push
insl
and
mov
pop
lea
adc
push
push
cmp
out
cmp
push
mov
pop
mov
js
rcrl
mov
gs
mov
xchg
in
and
cmc
popf
sbb
xor
fisubs
pusha
daa
lea
cmp
xor
mov
push
xor
pop
arpl
mov
rclb
mov
mov
sub
or
xor
mov
daa
jge
and
push
leave
shrl
cmpsb
das
lret
pop
cmp
rcrl
fcomp
add
lret
sbb
xchg
pushf
pop
clc
mov
fisttps
inc
int3
mul
jmp
cld
jl
inc
dec
add
xchg
lods
adc
xor
push
push
stos
inc
sbb
mov
and
inc
and
xor
mov
xchg
pushl
into
dec
ja
jl
dec
outsb
icebp
enter
or
jbe
push
cmovbe
mov
push
mov
add
mov
mov
inc
out
nop
jecxz
rcrb
cmp
or
inc
cltd
cs
dec
lcall
mov
subb
out
loop
lods
ret
cmp
mov
in
fsubl
sbb
mov
xor
outsl
scas
out
imul
ror
mov
fs
icebp
nop
cmp
enter
jle
jns
shl
or
es
cwtl
mov
inc
push
loopne
add
inc
push
out
mov
add
shl
mov
jmp
mov
enter
sub
cmpb
mov
pop
loop
push
sbbb
jg
mov
sbb
movsb
gs
mov
lods
fmul
and
imul
cmp
push
scas
xchg
add
add
clc
shrl
adc
and
add
outsl
cmc
xlat
fisubl
mov
pop
mov
mov
psubusw
test
mov
or
aam
adc
negb
aam
mov
pop
mov
mov
mov
adc
inc
mov
test
sbb
xchg
fidivrs
sahf
in
cltd
sub
fidivs
daa
outsb
shrb
xchg
mov
jmp
hlt
ja
mov
filds
add
sub
aaa
inc
shll
xchg
lret
inc
imul
stos
push
mov
sub
mov
les
xchg
mov
es
lret
arpl
mov
fdiv
sbb
xor
push
jle
mov
inc
dec
enter
sbb
scas
push
inc
aam
jbe
xor
xor
in
inc
sub
fsubrl
inc
pushf
xlat
or
lea
pop
jbe
mov
mov
cmc
in
add
add
inc
xchg
xlat
repz
fnstsw
adc
inc
pop
sub
xor
das
xor
pop
js
mov
stc
cmp
pop
mov
push
outsb
out
sub
arpl
and
sarb
or
push
nop
push
jns
ja
in
pop
mov
pop
pop
cmp
fnstcw
adc
adc
mov
push
test
stos
push
xchg
arpl
sti
adc
sbb
cmp
jbe
call
pop
mov
lds
loope,pn
xchg
sbb
fs
stos
xsha1
cmpsb
lret
adc
cmpl
and
mov
cli
inc
mov
rcrb
sbb
fiadds
hlt
fsubrs
sbb
mov
ja
push
mov
stc
inc
pop
inc
in
roll
jecxz
lods
or
sbb
sbb
mov
test
pop
dec
lock
push
or
in
push
lock
sub
fldlg2
mov
cmp
mov
inc
insl
inc
les
divl
sub
mov
jle
shlb
jl
jmp
movsb
push
pop
iret
mov
bound
mov
fildl
jg
adc
orl
shr
push
aam
lds
cwtl
add
add
lea
jnp
in
pop
rolb
inc
jne
push
jmpw
test
sbb
sub
jmp
dec
push
dec
inc
dec
push
dec
jle
imul
mov
test
es
xor
movsl
fistpll
mov
jnp
fadd
cmovnp
icebp
outsb
addr16
in
and
fsubrs
xchg
pop
daa
sahf
adc
ja
sbb
mov
lcall
jl
push
xchg
add
mov
je
xchg
gs
xor
dec
mov
xchg
nop
push
pop
push
fs
nop
push
ror
push
test
bound
insl
dec
mov
sbb
daa
sbb
ss
push
cs
shrl
xchg
dec
cmp
aad
shlb
cli
out
sub
pop
cmp
jne
out
cmp
fldl
pop
mov
scas
aaa
test
or
cmpsl
mov
dec
mov
shl
dec
push
mov
aam
out
adc
out
add
leave
xor
mov
les
in
adc
outsl
imul
jge
pop
leave
fwait
jmp
loopne
xor
and
cmp
xor
or
lret
pop
or
clts
into
xor
add
stc
lret
and
add
pop
lcall
xchg
sub
adc
dec
outsb
int3
xor
xor
xor
sub
xchg
rcrl
aaa
xor
and
daa
aas
push
cli
and
cmp
fiadds
sub
or
sbb
inc
mov
dec
mov
xor
mov
mov
loope
or
sbb
jnp
sub
dec
adc
xor
adc
lahf
mov
jmp
dec
push
pop
fisttpl
scas
mov
fs
shll
jnp
fs
cli
mov
repz
or
push
sbb
fldln2
out
cmp
lds
xchg
call
nop
test
sbb
test
push
lret
movsb
repz
mov
jae
pop
inc
add
lods
push
and
testl
ja
fbld
fldcw
jbe
adc
and
in
adc
dec
ficoml
push
mov
js
test
jnp
xchg
les
pop
or
outsl
adc
and
movsl
loop
sub
xor
cltd
imul
lds
push
pop
mov
mov
icebp
pop
and
dec
xchg
lret
adc
iret
push
jb
sbb
ds
idivl
xchg
jge
aaa
je
jnp
adc
nop
pop
fcmovbe
insb
mov
jl
mov
xchg
clc
repz
sbb
mov
push
pusha
cmp
ljmp
ljmp
cmc
aaa
scas
popf
xchg
imul
and
clc
push
xchg
popf
jp
pop
xor
cld
sbb
sbb
mov
test
fsts
dec
loopne
test
out
push
mov
xor
sti
out
cmp
sbb
js
sub
mov
pusha
movsl
data16
negb
pusha
nop
cwtl
clc
bound
mov
jbe
popf
jmp
dec
push
movsl
stc
das
push
jmp
dec
xchg
inc
sbb
subl
jo
inc
in
jne
imul
sub
inc
in
mov
add
inc
js
ret
mov
jbe
inc
pop
sbbb
cld
adc
mov
and
push
inc
jo
aaa
jle
les
lahf
inc
mov
jge
dec
scas
adc
jecxz
inc
test
push
popf
push
lret
and
cmp
jns
cmpsb
addl
mov
lds
and
adc
and
hlt
mov
cmp
xor
in
orl
xchg
xchg
imul
ljmp
ret
pop
sbb
ljmp
dec
mov
pop
push
mov
jo
push
inc
inc
pusha
sbb
test
out
sbb
loop
fwait
enter
idivb
push
add
lcall
xchg
mov
sar
xchg
sbb
push
movsl
inc
shll
cmp
push
ficompl
xor
dec
cltd
push
mov
icebp
orl
aaa
or
adc
das
ds
cmpsb
adc
jno
pop
out
arpl
ficompl
call
roll
loope
adc
imul
lahf
sub
ljmp
or
insb
push
xor
mov
repnz
leave
call
out
xchg
je
roll
lahf
pop
cmpsl
dec
cwtl
test
ss
sbb
xchg
in
inc
mov
dec
inc
lds
lods
pop
dec
ljmp
xchg
pop
sahf
mov
pop
adc
enter
ja
test
mov
push
adc
cmp
sahf
dec
push
gs
xor
adc
jbe
add
xchg
orl
les
orl
push
mov
xor
lret
xchg
ja
mov
jbe
jne
and
add
icebp
sub
push
in
call
mov
and
xor
das
insl
fisubrl
and
in
rolb
fistl
inc
dec
fsubl
xchg
lods
in
mov
repnz
mov
inc
test
xchg
or
sbb
pop
sub
fdivl
ret
aad
and
lea
mov
dec
leave
daa
cmp
push
jb
dec
jo
mov
std
push
inc
ret
pop
test
ficoms
shll
add
and
and
adc
xor
push
repz
dec
cmpsb
dec
jo
enter
das
movsl
scas
and
jno
push
jge
divl
std
sbb
in
nop
push
and
ljmp
sub
xchg
mov
je
aad
fidivrl
push
out
push
into
mov
fstps
rcr
cmp
xor
rorb
sub
ret
nop
inc
mov
push
out
pop
push
inc
nop
push
mov
pushf
shrb
push
sbb
sarl
and
sbb
mov
je
push
sub
ljmp
clc
inc
jnp
add
stos
push
cmpsb
pop
inc
add
orb
imulb
aaa
ret
or
dec
dec
inc
sbb
mov
or
dec
lods
xchg
xor
sbb
sbb
sub
ljmp
adc
popa
or
in
shlb
jmp
mov
test
cmpl
loope
js
xlat
mov
mov
aam
lea
mov
out
lcall
lock
stos
es
insb
inc
mov
mov
aad
inc
in
xor
jno
jle
ljmp
mov
sub
and
xchg
mov
add
and
mov
nop
call
mov
je
dec
fsubl
jecxz
mov
push
cmp
cmc
pop
jmp
in
jns
arpl
loop
nop
adc
cs
mov
push
js
mov
les
mov
cltd
jae
mov
jle
add
or
int
scas
daa
mov
jae
adc
add
sub
lret
fdivr
aam
div
jb
popf
lret
adc
imul
cmp
jb
mov
pop
pop
ss
and
and
cltd
repz
adc
adc
scas
lock
sbb
movsb
xor
mov
je
ja
sbb
pop
neg
int3
mov
scas
mov
xchg
mov
shlb
pop
push
adc
adc
mov
xor
shrl
adc
cld
dec
jg
mov
cmp
adc
push
ss
mov
cmp
mov
add
and
ja
loop
icebp
sub
push
cmp
mov
mov
xchg
push
test
or
shrl
das
lret
add
hlt
inc
out
cmpsb
jae
sbb
push
lods
shll
cmp
inc
sub
xor
pop
mov
in
pushl
loop
out
jge
in
movsl
mov
mov
and
js
into
pop
cmp
inc
scas
gs
ret
xchg
dec
into
mov
movsb
and
fdivrs
mov
mov
jmp
cltd
mul
push
lea
stc
arpl
mov
jns
or
sbb
nop
mov
xor
add
insl
and
imul
test
dec
popa
and
sti
fstpt
sti
jecxz
sub
jp
aad
popa
ret
jecxz
jbe
adc
lds
inc
or
mov
lret
adc
orl
jle
mov
and
lahf
jns
out
inc
add
sub
mov
fdiv
movsb
stc
mov
mov
pop
mov
scas
in
push
mov
movsl
add
mov
mov
and
daa
add
inc
push
xlat
cmpsl
mov
pop
cmp
call
stc
popf
fistpll
xor
mov
sbb
mov
addl
jmp
loop
pop
sbb
jae
cli
outsb
xchg
push
out
pop
test
fdivs
sub
rorb
or
push
lea
rcrb
in
leave
popf
les
sti
ret
mov
arpl
fsubl
mov
fs
mov
cmp
dec
sub
push
aad
scas
scas
popf
sbb
clc
imul
mov
fsubrs
xchg
pusha
fldln2
or
xor
push
sbb
pop
xchg
movlps
loope
cwtl
aad
sub
cmp
and
movsl
xbegin
inc
test
aam
sbb
imull
decl
inc
rorl
add
push
inc
or
mov
dec
into
dec
aad
popa
dec
dec
jecxz
das
and
mov
vsubps
test
cld
pop
lcall
or
cmp
dec
pop
push
and
imul
stos
js
gs
mov
push
sbb
cmp
push
popa
stos
stos
pop
xchg
push
and
insb
aaa
cmc
inc
pop
ss
xlat
outsb
das
scas
stos
lahf
in
xchg
push
mov
ja
shll
mov
cwtl
aam
xchg
mov
jb
lret
out
push
loopne,pt
add
pop
mov
mov
shl
xchg
out
scas
pop
add
mov
xor
gs
sub
fcoms
jge
iret
xlat
lahf
scas
into
mov
dec
cmp
lods
out
lock
lods
cmpsl
cld
adc
and
lcall
xor
hlt
repz
clc
adc
and
daa
cs
inc
into
sarb
fwait
and
fbld
lds
xchg
mov
fistl
mov
push
mov
cld
mov
cmp
loope
in
clc
xchg
outsw
xchg
add
sub
enter
or
insb
ja
lret
test
scas
scas
and
xor
sbb
xor
jl
mov
push
out
add
add
minps
in
ljmp
push
out
mov
sub
cmpsb
mov
xchg
fsubl
fstps
mov
inc
jno
mov
pop
mov
mov
lahf
data16
stc
and
fbld
xor
inc
pop
xchg
les
dec
aad
lds
adc
lds
out
or
fcmovbe
int
push
cli
ss
sbb
or
mov
mov
or
scas
gs
jo
cmp
test
loop
and
mov
mov
fiaddl
loopne
ret
jmp
fidivl
movsb
and
cwtl
add
pop
jge
add
jnp
xor
dec
out
mov
push
jb
outsb
sbbb
ja
test
mov
inc
push
jns
psubusb
sub
mov
bound
add
ljmp
mov
adc
jns
stc
mov
jo
mov
dec
and
ficompl
loope
popf
jb
ljmp
rclb
push
stc
jmp
xor
push
adc
sbb
repz
mov
loopne
xor
cltd
ds
inc
mov
in
inc
ja
dec
jle
push
mov
stc
inc
lcall
dec
outsb
repz
fidivrl
mov
push
mov
addr16
ds
sahf
mov
cmpl
lods
imul
dec
jge
xchg
cmc
test
out
ret
jg
sub
jl
ret
adc
inc
mov
lock
imul
jno
rcrl
hlt
iret
sub
lcall
fstps
push
repz
pop
and
inc
cmp
pop
adc
enter
pop
cmpl
push
mov
pusha
loopne
dec
jbe
fdivp
mov
test
scas
mov
lods
insl
cltd
mov
popa
dec
mov
sbbl
jo
mov
int3
test
push
mov
loope
or
das
xchg
pop
push
dec
ss
imul
fst
orb
xor
arpl
push
pushf
arpl
repz
xor
push
mov
inc
inc
xchg
push
cmpsb
leave
repnz
pop
aam
testl
add
sub
add
in
jne
push
mov
and
or
outsb
sahf
mov
lods
xor
push
divb
pop
pop
movsl
inc
cmp
dec
call
aam
mov
xchg
insb
ds
inc
out
sub
or
mov
sar
cmc
push
jmp
ljmp
mov
lea
fs
cmpsb
or
dec
imul
mov
dec
loopne
pop
jae
iret
daa
shrb
fdivrs
dec
loop
popa
sub
or
dec
gs
mov
sbb
inc
cmp
inc
mov
mov
xor
leave
sti
in
xor
jecxz
loope
dec
mov
sbb
idivl
shr
pushf
jecxz
cmp
sub
adcl
ljmp
cmp
sub
mov
or
scas
push
cmp
cmp
cmc
jae
sbb
cltd
pop
push
jle
aad
shll
mov
dec
cmp
mov
cmp
add
add
jo
call
mov
into
popf
daa
popf
movsl
lret
loop
inc
lret
mov
scas
xlat
cli
shrl
and
sub
jg
out
jo
popf
imul
divb
js
jl
fwait
jne
sub
js
mov
lcall
nop
loope
cmpsb
sub
add
pushf
enter
jle
adc
sbb
pushf
dec
jge
xchg
mov
jecxz
insb
lods
ficompl
mov
jb
mov
mov
divl
pop
lret
inc
sub
mov
mov
inc
and
sub
mov
loopne
insb
dec
ret
pop
or
jle
lret
cmp
ja
xor
loope
pop
sub
mov
fsubrl
stos
inc
cmpsl
sub
or
mov
xchg
xchg
adc
lea
repz
sbb
pop
pop
fildl
out
cmp
mulb
test
minps
aam
mov
push
mov
xor
cmp
rorb
add
ljmp
imul
adc
push
lods
mov
inc
pop
inc
mov
lock
arpl
shlb
adc
iret
and
movsb
in
popf
fnsave
adc
push
cmp
ret
jl
loop
int3
popa
xor
jbe
pop
sub
ror
leave
aas
mov
mov
shll
into
sub
mov
jb
push
push
dec
xchg
sub
fdivp
push
mov
outsl
cmc
scas
mov
ss
fninit
mov
xchg
aaa
movsl
mov
xchg
fwait
mov
gs
pusha
fmull
clc
bound
lock
out
test
add
les
loopne
add
lds
mov
loop
jecxz
pop
xlat
data16
sbb
mov
jecxz
push
jp
cmp
insl
push
les
mov
dec
add
in
jl
fiadds
sbb
lahf
iret
xor
call
leave
xor
inc
popa
xchg
shrl
loop
jb
insl
push
outsb
inc
inc
or
or
xor
ljmp
pop
cmpsb
mov
inc
int3
lret
and
sbb
xchg
sbb
mov
mov
xor
or
pop
loopne
mov
mov
ljmp
out
dec
lret
pop
jne
imul
mov
or
push
cmp
sub
lods
in
arpl
icebp
cmp
push
scas
and
and
push
sub
add
xchg
jno
push
arpl
cmpb
xor
push
jb
repz
shll
jge
enter
pop
ret
or
add
jp
fcomps
pop
cwtl
xchg
fdivl
mov
mov
xor
adc
add
pop
or
sub
mov
or
xchg
iret
daa
insb
push
ss
test
inc
jl
sub
into
icebp
mov
mov
repnz
in
cmc
xor
pop
fldcw
lds
dec
das
daa
nop
xor
add
mov
mov
sarl
sbb
popf
shlb
cli
pop
fdivrl
or
xchg
in
xchg
xchg
sahf
insb
test
mov
inc
pop
pop
out
call
mov
pop
scas
mov
out
mov
mov
orl
int
pop
ljmp
lock
add
inc
repnz
cmp
add
cld
sub
add
push
mov
xchg
sbb
iret
test
jl
mov
notl
pop
loopne
adc
sub
sub
imul
xchg
fwait
pop
sbbl
xchg
les
pop
or
int3
and
ficoms
cmc
dec
pop
test
xchg
ret
xorl
repnz
inc
cwtl
cmp
cmp
int
out
cld
xor
or
cli
cld
inc
sub
idiv
cmp
sahf
push
xchg
jp
cmc
scas
lahf
mov
add
pop
ds
jmp
imul
jge
es
cltd
jecxz
sbb
das
jecxz
clc
mov
leave
test
push
ljmp
add
aad
xchg
or
jno
jp
test
xchg
xchg
iret
sbb
push
aam
dec
pop
test
outsb
pop
push
mov
outsl
loop
add
test
jg
mov
sub
and
arpl
push
xchg
mov
adc
ret
sti
imul
mov
jns
mov
add
dec
fildll
push
xor
jle
dec
leave
es
push
fists
lods
andl
test
int
jp
in
fdivl
mov
loopne
or
sar
mov
dec
das
inc
int
icebp
dec
out
out
int3
sbb
mov
aam
pop
push
aam
scas
fistpl
sub
xchg
adc
jns
xor
fidivs
jmp
jbe
mov
mov
in
ljmp
xchg
cld
jne
xchg
sahf
imul
adc
test
inc
jbe
push
shl
sub
cwtl
ret
mov
js
xor
xlat
idivb
jno
je
cmp
sub
dec
mov
fnstenv
setno
push
imul
push
mov
leave
and
outsb
mov
jbe
add
inc
sti
imul
inc
loopne
inc
adc
pop
cltd
and
jns
mov
movsl
pop
pop
dec
push
inc
mov
xor
push
pop
in
mov
int3
pop
outsl
outsb
lock
leave
xlat
pop
insb
pop
xor
push
stc
push
or
outsl
nop
inc
stos
adc
adc
jae
adc
xlat
jp
mov
lcall
aas
rcrb
lods
mov
test
add
xchg
imul
or
jecxz
jecxz
push
mov
push
je
es
push
sti
movsl
enter
ja
adc
lret
test
sbb
xchg
shr
popf
inc
test
jo
mov
xor
push
int3
xor
scas
xor
sarb
ret
stos
lea
lret
pop
push
mov
clc
test
sub
arpl
repnz
sbb
dec
outsb
loop
xor
test
stos
jbe
mov
aad
bound
push
into
shl
negl
cs
jecxz
push
lods
or
sti
repz
fldcw
push
outsb
sub
out
dec
or
das
push
adc
out
or
sub
out
dec
aad
enter
xor
in
mov
sbb
mov
sbb
add
inc
aaa
xor
sbb
add
mov
sahf
or
push
fstp
icebp
mov
jnp
hlt
jmp
in
dec
icebp
stc
xchg
add
xor
fiaddl
push
xchg
jmp
mov
mov
jnp
or
ds
pusha
test
dec
rcrl
xor
sub
lods
add
or
call
aaa
sbb
xchg
cmpsb
or
jge
xchg
arpl
arpl
fwait
iret
xor
les
pop
sbb
jb
inc
jae
call
ud1
call
mov
jl
adc
dec
fmul
adc
mov
rorb
sbbl
pop
inc
mov
movsb
jg
nop
add
mov
insb
dec
jns
mov
xor
adc
pushf
out
pop
neg
xchg
pop
xlat
addr16
aaa
mov
xor
mov
xor
pop
out
mov
fidivrl
outsb
pop
into
fcmovb
insl
addps
fadd
jae
mov
jge
inc
push
loopne
xchg
out
mov
cmp
cmpsb
sub
stos
cmp
stos
mov
subb
icebp
fadds
lcall
js
int3
fadd
sub
lahf
rcl
fisttps
sbb
add
xchg
ret
dec
subl
or
fwait
mov
xor
subl
shlb
cltd
xor
shl
mov
inc
fldcw
in
xor
pop
out
push
and
mov
insl
add
dec
cmp
or
ret
inc
mov
push
fs
nop
sbb
pop
mov
aam
jns
in
mov
adc
jge
int3
lock
stos
sbbl
rcr
pop
push
jb
mov
cmpsl
aas
pusha
rclb
fcomip
js
adc
push
adc
fwait
push
mov
aam
lret
test
sub
outsl
cmp
inc
push
test
inc
mov
pushw
fcoml
xor
bound
mov
jno
movsl
pop
or
mov
adc
aam
sub
scas
mov
cmp
dec
sbb
js
inc
in
sbb
ja
outsb
jo
cmp
xchg
rol
mov
inc
in
jecxz
sbb
mov
std
aaa
inc
mov
add
ss
push
adc
insl
push
pop
jno
dec
ss
sbb
aaa
push
push
sbb
clc
mov
jne
inc
sbb
out
xlat
pop
adc
rorb
leave
test
mov
imul
scas
sti
loopne
mul
arpl
insl
dec
and
je
mov
xor
clc
mov
mov
fiadds
pop
or
cwtl
pop
je
testb
in
cld
inc
jae
jo
jb
jbe
jmp
iret
pop
dec
clc
ret
jae
mov
loope
into
rorl
pop
rolb
jo
jg
inc
dec
adc
mov
pop
fnstcw
fstpt
pusha
jmp
lcall
cmp
cmp
repnz
sahf
rcll
insl
movsl
dec
nop
pop
lahf
cmpsl
inc
das
leave
insl
inc
pop
adc
arpl
orl
push
mov
icebp
pop
insl
push
loop
inc
pop
pop
sbb
sahf
inc
inc
sbb
pop
loopnew
push
cld
pop
clc
mov
xchg
push
pop
movsb
lods
cmp
xor
mov
cmp
pop
pop
adc
add
mov
dec
pusha
fwait
lock
xor
mov
out
ds
xchg
insl
iret
fidivs
mov
push
add
or
aad
xor
pushf
movsb
push
inc
rol
iret
push
loope
jnp
mov
jne
loop
add
je
push
in
sarb
lahf
push
pop
adc
mov
shrl
xor
jne
jbe
sub
pop
int3
popa
mov
dec
or
jg
dec
push
leave
scas
pop
decl
frstor
in
outsb
lret
int3
sbb
aas
mov
outsl
push
fucomi
mov
sub
testb
in
mov
fwait
cs
cmpl
and
daa
movsl
out
mov
jne
cld
push
cld
adc
daa
mov
adc
imul
roll
lret
cmc
xlat
sbb
jge
pop
and
jp
add
jg
cmpsl
mov
paddw
push
mov
testb
dec
pop
adc
clc
test
inc
insl
mov
stc
sub
fcmovb
xchg
mov
jl
adc
lcall
in
push
jnp
xchg
insl
lods
adc
mov
xor
xchg
mov
nop
roll
out
rcl
loopne
arpl
aam
xor
imull
bound
inc
cmp
cmp
push
fs
clc
xchg
neg
xor
add
int3
pop
cmp
and
jns
mov
daa
out
sbb
dec
jns
aad
dec
gs
adc
dec
sbb
je
and
or
fldt
sarb
ds
test
jp
sbb
aaa
out
xchg
xorb
out
mov
scas
je
arpl
sbb
inc
fadd
pop
adc
data16
add
mov
push
sbb
into
mov
cmp
dec
pop
shl
adc
sub
ret
lea
loopne
xor
cmpsb
or
lret
xchg
or
xchg
mov
repz
push
test
enter
ja
lock
mov
and
mov
subb
push
pop
jae
xlat
inc
repz
subb
mov
or
dec
add
push
mov
in
inc
ds
mov
jne
xor
fistpl
or
inc
loopne
fsubrs
pusha
add
das
in
out
ljmp
xor
fimuls
lock
and
movsl
cmp
dec
cmpsl
push
loopne
addr16
scas
sbb
int3
imul
jg
inc
leave
push
add
cmpsb
out
push
add
roll
scas
fwait
mov
scas
fcomps
adc
loopne
daa
jb
arpl
pop
leave
das
or
adc
sub
sub
aam
movsb
xchg
dec
sbb
adc
and
jae
push
in
mov
push
popa
loop
and
call
sbbb
les
jecxz
xchg
data16
xor
jecxz
cwtl
lret
adc
mov
dec
dec
inc
mov
js
rdtsc
push
cs
cmp
cld
pushf
or
push
dec
loopne
push
sbb
jecxz
in
cli
ljmp
adc
in
inc
push
scas
repz
insl
mov
outsb
ja
dec
inc
mov
push
mov
xchg
loopne
mov
xor
fbld
mov
cwtl
mov
repz
mov
xchg
insb
jp
arpl
aas
cld
cmp
pop
and
xor
in
ret
stos
iret
dec
mov
sub
sub
adcl
aam
push
mov
ret
cmp
cwtl
lods
outsb
adc
pop
ljmp
jl
roll
push
icebp
in
ds
inc
xchg
jmp
xor
pop
and
mov
in
push
sub
mov
test
pop
rolb
add
filds
push
adc
sub
mov
or
mov
and
adc
mov
scas
jmp
lea
in
mov
mov
shrb
dec
repnz
push
mov
jb
sbb
js
dec
jo
popa
stc
dec
mov
ljmp
pop
into
testl
jnp
sub
lcall
clc
mov
lods
mov
lea
xchg
jecxz
mov
push
or
in
mov
lea
faddp
pop
test
cli
pop
mov
movsl
ret
cmp
or
in
orl
imul
sarl
imul
scas
jg
aam
stc
mov
pusha
jmp
and
and
xlat
jecxz
mov
pop
add
xchg
mov
nop
lcall
dec
rol
outsl
push
pop
and
aas
inc
in
in
adc
or
xchg
or
jp
jmp
fistps
sub
imul
repz
pop
mov
push
sti
fsqrt
cmp
mov
dec
bound
xor
jecxz
push
bound
pcmpeqd
mov
add
sbb
xor
sub
add
cmp
xchg
bound
mov
push
xchg
pop
mov
movsl
add
mov
outsb
and
jecxz,pt
les
or
push
jg
sub
addl
mov
push
jmp
out
clc
sub
sbb
push
cmp
sub
ss
loop
in
xchg
dec
cmpsl
push
push
sub
jg
xor
add
in
xchg
jns
sbb
into
rcl
das
jne
testl
std
mov
xchg
or
in
imul
mov
scas
daa
jb
add
adc
js
movl
test
sahf
ret
inc
loope
xchg
fucomip
movsl
jge
dec
pop
push
lahf
lcall
movsb
shll
cmc
jp
jae
cmpsb
movsb
add
subl
lcall
faddl
add
stc
ret
jns
sbb
lret
jne
loopne
lcall
xchg
adc
inc
cmp
xchg
int
sub
inc
mov
jno
pop
or
movsl
rcrb
neg
adc
test
out
ljmp
adc
jle
out
mov
nop
cmp
mov
pop
jg
negb
sahf
ret
stos
and
mov
fisubrl
lcall
out
ret
fisubrl
jb
jo
sti
loopne
cmp
mov
fucomip
mov
enter
in
add
pop
test
cmpsl
or
out
in
pusha
add
cmp
jmp
xor
stos
jne
lock
xchg
rorb
scas
les
idivb
adc
pop
push
stos
xor
inc
sqrtps
and
pop
notb
mov
mov
ret
mov
and
or
push
sub
xchg
icebp
pop
movsb
xorl
mov
inc
and
arpl
movb
rclb
clc
lods
fsubrl
mov
cmp
and
pop
pop
mov
ret
loope
ds
fsubrs
mov
jp
push
jmp
mov
mov
push
jmp
mov
jno
cmp
pop
sti
mov
jb
int
inc
add
xchg
push
popa
jae
sub
jecxz
loope
pop
cmc
loope
or
insb
mov
sub
mov
adc
scas
test
in
sub
inc
and
xor
and
xchg
dec
cld
mov
loop
cmp
push
dec
xor
xchg
mov
in
and
add
add
push
adc
cmp
jns
mov
sub
fisubs
jnp
sub
jns
jb
lea
xchg
inc
jns
jge
xchg
stc
add
add
scas
popf
mov
dec
mov
fsts
into
gs
jge
fwait
jns
mov
jbe
jl
shr
inc
xchg
cltd
out
mov
xchg
dec
hlt
in
loopne
jnp
pop
arpl
mov
mov
shlb
mov
cmp
pop
xlat
adc
xchg
pusha
lret
mov
std
cltd
lods
test
inc
lea
aas
jb
insb
mov
xor
xor
test
stos
out
cmp
test
cmpsb
lods
inc
add
fwait
pop
xchg
fildl
dec
mov
dec
pop
xor
add
cmp
sahf
adc
scas
pop
std
jno
sub
cltd
fwait
jl
cwtl
fsubrs
add
mov
ss
push
jb
out
adc
test
dec
sbb
ret
mov
xorl
test
push
aas
test
int
cli
pop
test
enter
mov
fistpll
out
and
mov
sub
test
or
add
sub
je
mov
adc
xchg
inc
enter
movsb
mov
enter
cld
jae
mov
or
daa
lds
sub
ficoml
cltd
mov
sbb
jmp
rcrl
lea
sbb
adc
repz
push
fldl
fisttpl
mov
stos
addb
std
or
lods
imul
jmp
jnp
imul
shll
and
dec
mov
insl
sub
inc
es
in
and
negl
fdivl
push
lret
mov
mov
push
fstl
jg
popf
sbb
sub
cmp
jne
push
adc
psubq
imul
jecxz
fisttpll
std
adcb
repnz
push
add
ret
inc
jg
lds
lahf
add
call
or
or
fxch
aam
ds
fsts
mov
cmp
dec
jl
jne
xchg
in
or
push
repnz
pop
inc
dec
mov
sarl
scas
fistpll
aam
push
sbb
jge
jmp
out
mov
mov
inc
xor
out
or
jmp
sub
pushf
jp
and
or
test
lea
push
jp
lret
lret
mov
xchg
lods
adc
and
sub
pop
mov
sub
adc
andb
cmpsl
hlt
fs
cmp
xchg
inc
xchg
xor
test
push
sub
xchg
leave
std
mov
mov
orl
aam
mov
pop
mov
or
cmp
mov
faddl
inc
dec
repz
sub
in
xchg
lret
jne
pop
push
xor
adc
push
adc
stc
mov
pop
scas
js
lea
jns
lret
jp
ret
sarl
sub
inc
lahf
std
sub
jno
inc
ds
sub
inc
out
dec
push
imul
nop
mov
adc
add
data16
push
das
test
icebp
xor
loope
loopne
jmp
mov
xor
in
jge
add
push
mov
inc
repz
adc
dec
inc
pop
sub
push
xchg
pop
sub
rorl
lds
xor
shl
mov
jl
adc
or
push
stos
mov
dec
jecxz
push
cmp
add
cmp
sbb
jg
cmp
or
push
enter
daa
pop
xlat
sub
loopew
or
push
loop
pop
in
mov
pop
xor
adc
test
and
mov
stos
pop
dec
add
cmp
mov
pop
jl
into
xchg
mov
leave
push
test
add
sarl
sub
imul
dec
cs
cmp
push
leave
cmp
mov
cltd
pop
popa
xlat
jl
test
adc
insl
or
insb
out
cltd
xchg
mov
mov
jns
dec
inc
sbb
out
cmp
inc
iret
xor
sarl
aaa
ret
push
lcall
adc
jmp
mov
pop
leave
jne
mov
pusha
mov
sbb
js
push
lcall
js
and
adc
lret
xchg
leave
stos
jno
push
jae
cmp
cmp
lret
jmp
xchg
xor
xlat
popf
adc
shr
fnstenv
pop
sbb
ret
icebp
in
ljmp
mov
bound
inc
mov
or
arpl
cmp
test
push
mov
push
stos
xchg
adc
dec
add
inc
fucom
and
pop
xchg
outsl
push
dec
xorl
lahf
mov
push
sub
jnp
xchg
pop
or
in
mov
out
xor
fistpl
jmp
adc
push
sbb
mov
lock
cmc
aad
pop
insl
add
mov
jle
addr16
mov
or
call
femms
leave
cmp
imul
pusha
out
pop
shll
data16
mov
sub
adc
loopne
out
pop
and
imul
fld1
jae
adc
pop
imul
fwait
in
mov
fistpl
cmp
fstps
fisubl
iret
mov
push
out
dec
push
xchg
int3
sbb
lock
xchg
sti
add
call
js
daa
push
pushf
andl
shr
pop
andb
sub
and
std
sub
jne
insl
int
adc
iret
cmpsl
ret
in
test
rcrb
mov
push
push
sub
repnz
sub
gs
xchg
nop
pop
inc
aad
cld
push
xchg
out
mov
xor
and
shl
outsl
xchg
sub
andb
xor
test
cwtl
push
or
hlt
fdiv
sbb
and
call
movsl
fdiv
cmp
es
push
xchg
xor
cmp
push
dec
aaa
lea
adc
bound
rcll
push
xchg
cmp
loop
cmpsb
aad
push
lock
std
ret
dec
pop
pusha
xorl
jl
lret
ret
ss
inc
push
ds
aaa
cmp
jnp
inc
hlt
mov
hlt
ljmp
sub
iret
cmp
rclb
fwait
inc
leave
in
es
sub
and
outsb
cmp
add
and
fwait
outsl
clc
xor
add
rcrl
ffreep
fwait
push
movsb
inc
ret
outsl
or
jb
lods
push
clc
jo
adc
lret
or
mov
jb
or
or
test
jl
cs
mov
mov
lea
mov
lret
add
sub
mov
xorb
les
into
shr
xchg
jmp
repz
ja
hlt
inc
andb
xchg
lock
cs
out
mov
or
cmp
inc
lods
nop
mov
push
movsb
jb
pop
imull
inc
mull
xor
mov
or
test
stc
in
sbb
stc
out
out
imul
cmc
inc
push
aaa
aas
mov
mov
sub
mov
pop
ss
fisubs
pop
xor
lahf
sarb
inc
inc
out
fildll
xchg
xorb
pusha
cmp
pop
testl
cmpsb
or
add
test
or
ja
push
icebp
mov
sub
mov
jbe
das
add
cmp
data16
jbe
lea
fldt
dec
cmp
out
daa
push
push
mov
inc
std
fisubrs
std
jo
js
push
fldcw
dec
leave
insl
inc
enter
loope
mov
sti
daa
xchg
xor
cmp
out
shlb
int
loop
rorb
fwait
or
push
mov
stc
ret
lock
cmp
mov
dec
mov
fistps
xchg
iret
cmp
xlat
imul
and
pop
adc
and
out
imul
and
movsl
dec
mov
loopne
icebp
in
mov
movsl
test
add
xchg
setge
xor
jecxz
flds
mov
les
aad
mov
test
idivl
mov
or
lea
leave
mov
xor
jae
inc
add
mov
mov
inc
push
test
cmp
xor
aad
mov
add
fsubs
jecxz
ds
lahf
insb
in
daa
mov
mov
hlt
mov
lds
loopne
pop
dec
arpl
inc
imul
pop
push
fwait
arpl
sub
andl
inc
rcll
inc
lahf
xchg
arpl
cmp
jl
enter
xchg
or
aas
cmp
adcl
xchg
and
inc
fstl
sbb
nop
jecxz
ret
mov
dec
jnp
adc
stos
rorl
stos
add
popf
inc
pop
and
dec
orl
lea
jbe
addb
dec
hlt
scas
test
push
dec
mov
pop
inc
fbld
mov
cmp
pmovmskb
imul
loope
dec
movsb
fld1
or
addb
sub
lret
repnz
stos
and
push
mov
fldt
sbb
test
popa
inc
out
dec
push
adcb
rcr
mov
add
push
je
into
fildll
fidivs
shll
mov
mov
adc
xchg
mov
test
pop
movsb
int
loopne
lock
mov
adc
xchg
stos
iret
mov
aad
lcall
data16
cmp
jne
fcmovnu
rcrl
sub
sub
dec
push
lcall
aaa
nop
pop
inc
bound
outsb
jne
js
fucomi
push
sub
cmp
fists
adc
or
add
lock
ds
cwtl
rorb
sahf
fcomps
cmc
push
movsl
pushf
stos
mov
imul
and
subl
movsl
push
mov
in
inc
addr16
popf
arpl
mov
mov
gs
mov
mov
push
ret
dec
loop
pop
and
loopne
push
cli
movsb
dec
jle
enter
out
push
cmp
dec
bound
divl
out
notb
sbb
fs
jle
sub
inc
mov
shlb
dec
mov
aam
sbb
push
das
pop
add
mov
sub
mov
pop
mov
hlt
mov
jecxz
fcmovbe
cwtl
sti
or
adc
xor
add
es
fstpl
and
jge
test
loope
or
cli
sub
sarb
into
shrb
adc
movsb
mov
out
jo
mov
jmp
mov
leave
sub
dec
inc
stc
pop
popf
pop
inc
int3
lahf
scas
xchg
adcl
xor
adc
lea
push
push
stc
std
sbb
mov
stos
and
mov
dec
lcall
fabs
pop
or
jmp
in
or
jb
dec
mov
shl
push
pop
and
leave
stos
and
in
je
fcmovnbe
sbb
addb
shl
sub
dec
cs
xchg
mov
shrl
out
push
mov
inc
jbe
das
leave
xchg
aam
fidivrs
sti
pushw
out
xchg
inc
out
mov
or
xchg
fiadds
aad
addr16
add
xchg
mov
mov
imul
jg
jp
and
adc
xchg
sub
mov
adc
jl
cmp
into
imul
test
subb
mov
out
adcl
adc
inc
adc
aad
and
shlb
xchg
pop
xchg
addr16
adc
xchg
mov
insl
test
fwait
jnp
mov
mov
aaa
arpl
or
pop
popa
inc
mov
pop
pop
jo
test
xchg
adc
imulb
insb
addr16
mov
push
sti
lds
pop
jp
cmc
inc
arpl
mov
xor
jns
dec
stos
cli
add
inc
inc
movsb
dec
push
cltd
mov
in
dec
shrb
xchg
mov
pop
jmp
test
cli
cmp
jae
push
dec
fimuls
call
stos
orb
push
inc
out
test
sbb
test
push
andl
mov
fsubp
xor
stos
mov
js
mov
mov
call
cvtps2pd
or
jp
push
cmp
or
test
push
ret
addr16
stc
xlat
dec
dec
lock
subl
pop
cld
hlt
mov
xor
push
add
mov
fsubp
js
rol
mov
fsubrs
neg
ficompl
sahf
xor
ret
movsl
mov
adc
xor
jle
jle
jns
ja
es
xchg
fldt
arpl
inc
notb
in
hlt
movsl
fsubs
mov
xchg
stos
sub
arpl
mov
dec
insl
sub
aas
add
inc
push
sbb
lret
cmp
fnstcw
add
mov
push
add
sti
pop
mov
jo
xor
xchg
pop
adc
mov
sbb
clc
and
push
adc
movsb
cmp
or
adc
lea
and
adc
shll
test
xchg
std
ds
or
addl
and
enter
fadd
pop
lret
inc
cmp
mov
mov
mov
xchg
add
push
or
popf
lcall
cmc
push
pushf
cmp
and
enter
xor
mov
pop
inc
add
inc
sbb
or
ret
inc
mov
xchg
shrl
cmp
popa
cwtl
ret
jb
icebp
mov
or
jecxz
gs
jbe
jo,pt
in
aaa
pop
add
xchg
xchg
sub
sti
inc
das
icebp
sub
loop
push
repnz
addr16
cmpsl
cmp
call
push
jo
add
jbe
add
fdivs
add
pop
add
daa
scas
ret
mov
mov
cmp
imul
popf
cmp
ds
jbe
mov
xchg
repnz
insb
mov
xchg
or
add
inc
push
aaa
xchg
mov
xchg
scas
push
orb
lods
cmp
mov
push
or
push
and
add
or
aas
sti
shll
imul
sub
push
lcall
lods
xchg
adc
cmp
sub
or
ret
sti
push
adc
jne
pop
push
clc
xor
push
or
and
clc
push
jecxz
movl
notl
mov
sub
lcall
ret
push
ret
outsl
cmp
add
popf
mov
sahf
mov
popa
dec
fdivrs
push
xor
mov
or
fsubs
std
sbb
adcb
mov
adc
push
cmpsb
lods
icebp
xchg
push
cmp
pushf
sbb
mov
lret
loop
hlt
rorl
test
cltd
fistps
ret
jne
pop
fs
shl
scas
mov
pop
out
cmp
pop
negb
xchg
mov
movsl
sub
jmp
decl
xchg
mov
popl
xor
xchg
fs
add
push
in
inc
scas
adc
mov
orl
loope
movsb
push
push
fwait
dec
fdivl
adc
fstpl
fnstsw
or
push
rorb
in
inc
fadd
xor
xor
sbb
ds
adc
cs
add
mov
pop
lahf
adc
js
add
test
rorl
cmp
mov
sbb
adc
pop
mov
sbb
movsb
stos
pop
ja
adcl
pop
jb
pop
inc
and
sub
repz
fsubrs
sahf
xchg
jmp
in
sbb
xor
mov
clc
or
ljmp
and
adc
shlb
std
push
test
hlt
stos
xchg
mov
mov
outsb
cwtl
push
mov
lret
jmp
push
push
cltd
jns
enter
daa
or
xchg
mov
rorl
mov
insb
fadd
jne
jmp
jg
in
cld
ret
jp
fisubrl
rcl
xlat
xchg
pop
imul
mov
cmpsl
ja
call
sbb
cwtl
cmp
inc
sbb
mov
arpl
mov
out
incl
loop
imul
outsl
popa
and
enter
push
lret
lcall
xlat
test
cmp
lods
fldenv
pushf
ljmp
popa
sbb
cmp
inc
sahf
or
fwait
out
pop
outsb
test
push
punpckldq
and
cmp
into
in
xchg
int
pop
iret
mov
fstps
lret
mov
jnp
xchg
push
dec
xor
frstor
lret
ret
jbe
jg
dec
sub
sbb
repnz
dec
xlat
arpl
dec
out
and
sbb
sub
into
call
xchg
rorb
jp
jg
dec
sti
sbb
add
lods
stos
pop
lds
gs
add
xchg
push
xchg
fnsave
scas
in
into
sub
jg
and
pop
arpl
push
fwait
or
std
mov
lock
push
fwait
mov
in
into
inc
movsl
and
mov
cmp
cmpsl
andb
cmp
icebp
into
adc
pop
test
cmpsb
adc
mov
push
stc
add
cmp
dec
fldcw
xchg
inc
stc
stc
sarl
stc
xor
addl
jbe
add
mov
aas
stos
lds
inc
cmp
les
xchg
or
cmp
lock
xor
mov
cwtl
xor
xor
inc
inc
mov
jne
stc
or
and
pop
fdivrp
mov
mov
rol
outsl
mov
lret
xchg
pop
xorb
js
orl
xor
pminsw
push
insl
int3
xchg
cltd
mov
fbld
cltd
ret
shlb
imul
jecxz
mov
stc
lods
push
jp
adc
xorl
mov
es
scas
xchg
sub
sbbb
mov
fistpll
jecxz
scas
lea
and
pushf
pop
mov
xor
fimuls
fwait
js
in
rol
dec
cmp
sbb
mov
fisubl
cmpsl
mov
cmp
xchg
jp
cmc
fstpt
cmp
ret
pushf
pop
fists
mov
mov
add
pop
cli
les
pop
cmc
jnp
xor
push
jmp
dec
cmp
mov
add
std
mov
rolb
je
out
add
mov
xor
push
loope
inc
je
int
int
adc
jb
inc
jbe
inc
rorb
mov
aad
in
jae
cmpb
bnd
popf
enter
in
dec
jp
movsb
outsb
xor
sbb
enter
inc
pusha
push
inc
adc
pop
or
fwait
xchg
stos
mov
shll
enter
or
js
xchg
aam
data16
cld
lret
jo
sub
xor
outsl
nop
divl
dec
adcl
outsl
ret
fisubs
cmpsl
pop
cmpsb
sahf
movsb
jne
shrb
fdivs
fidivs
aaa
add
or
ficompl
xor
out
dec
mov
or
mov
xor
mov
xchg
mov
pusha
loop
addb
cmp
or
fwait
jmp
movb
pop
shrl
inc
inc
mov
push
inc
sbb
lea
sub
adc
cmp
sub
push
stos
ss
shl
mov
notl
or
sub
aaa
sti
pop
cld
iret
icebp
mov
mov
sbb
sub
ja
sbb
ljmp
lods
jmp
lahf
ja
dec
cld
add
mov
fwait
stos
das
or
add
lea
enter
in
call
xor
push
xlat
test
aas
ret
pop
icebp
mov
xchg
sub
rolb
stos
add
cmp
mov
mov
mov
lods
jle
xor
testb
jno
aad
test
ret
sub
jmp
movsb
push
mov
push
subl
repnz
das
jnp
dec
mov
test
imul
dec
addr16
cltd
pop
inc
or
dec
arpl
inc
idivb
or
or
popf
fs
nop
mov
cmp
icebp
imul
sub
repz
mov
in
jo
sub
mov
aam
cltd
loopne
call
sbb
pusha
psraw
lods
mov
sbb
ss
push
jl
into
push
mov
jb
sub
lret
dec
sbbb
xor
add
jo
outsb
aad
mov
inc
clc
out
mov
push
dec
ds
loop
xor
push
and
inc
mov
inc
mov
jmp
jg
adc
cmc
movsb
ret
xchg
data16
xchg
fidivl
pop
fsubrs
mov
cmc
jb
insl
ret
movsb
sub
lods
cld
das
leave
fidivl
jbe
out
stc
daa
lods
ds
add
idivl
sahf
lock
out
sub
pusha
mov
rol
mov
mov
mov
fnstenv
cmp
add
es
dec
adc
mov
add
lret
mov
push
stos
jge
mov
mov
mov
decb
das
pop
mov
cmp
loope
jae
shlb
jg
and
fidivl
lcall
mov
outsl
loopne
push
inc
jae
xchg
dec
dec
hlt
or
sarl
jne
jne
xchg
xchg
repnz
pop
xor
xchg
jns
xor
lcall
ret
sub
dec
push
inc
cwtl
or
fcomps
mov
loope
sbb
into
or
shll
outsl
sbb
fnstsw
cmpsl
inc
dec
lar
inc
out
sbb
lahf
push
mov
sub
and
mov
dec
pop
push
adc
inc
popa
enter
cmp
cmp
and
loop
mov
mov
movsb
jbe
mov
mov
mov
lahf
inc
pop
xorl
sarb
pop
push
mov
fisubrs
mov
fistl
sbb
fnstsw
add
sbb
mov
std
xchg
push
mov
adc
mov
movsl
test
insb
lock
mov
movsb
fiadds
bound
popa
fwait
stos
rcrl
adc
cmpsb
sarb
cltd
cmp
xor
adc
sub
addr16
in
int3
mov
imul
das
rolb
cmp
or
cwtl
cmc
dec
pop
push
xchg
mov
mov
mov
sub
sub
xchg
addr16
insl
cmp
push
lret
orl
mov
movsl
xor
loope
cli
adc
add
add
xor
push
pop
lret
adc
xchg
mov
mov
pop
lds
pop
in
and
xor
mov
and
add
pop
mov
mov
jb
fdivl
in
pop
cs
xchg
push
adc
sbb
push
test
imul
es
mov
sbb
dec
cmc
jnp
out
outsl
aaa
sub
adc
popf
cld
loopne
or
mov
cmpsb
hlt
mov
sub
mov
lahf
jmp
stos
sbb
rol
or
xchg
test
jo
mov
not
fbstp
push
fnsave
icebp
dec
mov
mov
test
inc
hlt
das
jne
es
adc
and
mov
cli
ljmp
sahf
je
lret
pop
addr16
xchg
leave
cwtl
stc
mov
xor
add
loope
aad
ljmp
popf
xchg
ss
push
mov
aaa
xorb
lds
hlt
mov
jb
hlt
xor
negb
pop
push
pop
add
test
mov
shrl
aas
add
xchg
loope
lea
fs
inc
jmp
add
or
repnz
ret
loop
mov
ret
das
jb
test
xor
ret
decl
push
daa
and
aas
lods
sub
test
sahf
push
push
loop
add
gs
push
adc
mov
test
dec
push
and
fs
adc
jmp
loope
jecxz
ljmp
lds
xor
insb
ss
dec
loopne
mov
adc
insl
sti
push
jg
nop
adc
ret
loope
mov
lock
mov
push
cli
cmpsl
pop
mov
lcall
dec
jbe
int3
incl
orl
adc
aad
or
lret
adc
add
xchg
push
xchg
cmc
xchg
or
psubusb
add
mov
fsts
push
jne
lahf
mov
dec
addr16
or
jno
rclb
mov
jl
into
pop
or
jl
jmp
push
loop
pop
repz
mov
mov
jnp
pop
adc
xchg
mov
push
or
adc
sub
rol
fimuls
adcb
stos
push
mov
mov
into
pushf
inc
dec
pop
jmp
fs
pop
jae
mov
adc
adc
cmp
dec
enter
sub
pop
mov
cmp
scas
pushf
mov
push
bound
adc
outsl
popf
dec
inc
mov
and
xchg
leave
orl
mov
cld
push
insb
pushf
mov
sbb
in
pop
in
adcb
fdivs
insb
rorb
xchg
out
dec
cmp
xor
jg
cmpsl
pop
push
cwtl
test
push
jbe
dec
jg
js
inc
repnz
lret
movsl
sbb
repnz
or
push
into
lea
push
mov
push
xor
push
repnz
pop
mov
cmpsl
orl
pop
cs
arpl
aas
int3
inc
pop
xchg
aas
fs
and
add
push
inc
adc
dec
mov
mov
jl
mov
cmp
inc
pop
xor
sbb
out
xor
xor
loop
and
and
push
cmp
fwait
cmp
xlat
ficoms
aas
jmp
cs
shl
shll
inc
push
insl
inc
sbb
test
lods
mov
nop
jge
inc
pop
pusha
adc
das
xor
cmp
mov
dec
adc
xchg
mov
scas
cmc
enter
mov
xor
nop
mov
mov
clc
jae
pop
pop
jb
mov
push
xor
add
loope
sub
lcall
push
jecxz
aad
test
jge
fs
jl
icebp
mov
js
dec
dec
cli
sahf
jg
cmp
stc
add
enter
sti
jmp
or
jb
int3
jle
clc
xlat
inc
out
sbb
xor
or
pop
pop
cmp
andl
jle
jl
dec
and
lock
inc
sbb
xchg
ljmp
in
cmp
mov
sbb
test
call
out
out
xorl
les
into
stos
icebp
jbe
mov
pusha
sub
mov
adc
lds
jecxz
lahf
enter
xorb
mov
ret
inc
push
or
push
test
stos
and
xor
mov
xor
ret
in
inc
lahf
les
scas
jge
add
push
imulb
test
mov
imul
dec
jg
inc
shrl
or
add
adc
addb
sbb
push
stc
imul
dec
lea
lret
inc
jnp
hlt
das
pop
enter
in
imul
mov
add
mov
clc
xchg
cmp
push
shr
sbb
sbb
xor
mov
pop
inc
mov
aad
aas
pusha
xor
jmp
jb
adc
push
push
push
jg
sbb
jae
stc
xchg
fidivrs
dec
bnd
cmpsl
sbb
leave
add
loop
pop
cwtl
jecxz
add
fiadds
scas
div
mov
add
cmp
and
imul
andb
dec
mov
aad
mov
inc
xchg
pop
mov
icebp
call
add
mov
add
push
pusha
mov
sbb
addr16
xchg
add
mov
fs
sub
frstor
not
fbld
cmc
cmc
dec
adc
clc
sbb
xchg
pop
jp
sbb
xor
fisttpll
insl
mov
out
sub
and
lret
adc
lahf
push
dec
adc
in
insl
xchg
push
idivb
int3
ficomps
sbb
and
mov
je
jmp
jns
mov
paddusb
and
out
sub
cmp
dec
pop
mov
pop
add
mov
adc
cwtl
xchg
ss
mov
xchg
pop
jno
pop
pusha
test
imul
cmp
stos
inc
push
jecxz
stos
or
fidivrs
icebp
out
mov
xlat
push
cli
idivb
mov
fnstenv
xor
and
mov
jle
adc
adc
sbb
into
cmc
dec
jmp
lods
dec
mov
subl
xor
mov
in
add
fisubrs
imul
or
sbb
pop
inc
movsl
cmpsb
rcll
or
shrl
ret
push
out
lock
add
jns
enter
sub
and
es
xchg
dec
mov
jae
mov
fdivrs
push
pop
push
and
and
pop
inc
dec
adc
testb
cmp
nop
sahf
fcompl
test
push
dec
jecxz
hlt
pop
bound
mov
mov
ret
jae
fwait
je
pop
pusha
xor
lret
mov
repz
jp
pop
ss
xchg
ret
mov
loope
dec
lods
mov
adc
jb
or
into
xlat
addr16
mov
ss
ret
cmp
push
hlt
jmp
jns
gs
das
xlat
and
insl
mov
ret
inc
stos
sub
inc
test
inc
mov
xchg
fwait
cli
or
dec
aas
ret
movsl
xchg
push
icebp
mov
imul
aaa
sub
jp
push
mov
stc
arpl
xchg
mov
cli
loopne
or
cmpsl
cmp
or
cmpsb
sbb
decb
dec
adc
jne
test
rclb
pop
xchg
scas
push
sub
cmc
cmp
pop
cs
or
stos
lret
imul
jg
and
pop
push
mov
cmp
ja
pop
jnp
outsl
mov
outsl
out
and
pop
in
nop
push
clc
sub
add
stos
sbbl
sub
pop
push
mov
movsl
push
scas
and
loop
pop
test
imul
add
mov
dec
mov
push
inc
cmp
push
dec
shlb
jl
out
dec
outsb
decb
and
fs
js
mov
mov
lret
hlt
or
in
lcall
and
mov
loope
and
mov
ficoml
jp
sbb
mov
test
mov
cmp
jbe
mov
pusha
mov
insl
push
jae
iret
mov
les
fsub
iret
mov
mov
push
mov
mov
out
adc
movsl
xchg
push
pop
xor
dec
lods
mov
xchg
xchg
lock
pushf
out
lock
inc
idivb
push
push
insl
pop
in
cli
dec
fcmovbe
test
push
xchg
ljmp
addb
pop
sub
rcrb
pop
xor
notl
mov
rorl
rcl
xor
nop
rcr
rclb
inc
adc
test
or
loopne
lods
or
fndisi(8087
push
inc
ljmp
stos
push
cwtl
and
enter
jns
emms
xchg
mov
lcall
xchg
fmul
ss
push
push
in
cld
loope
sbb
ljmp
fwait
or
mov
push
mov
jl
push
xchg
jne
jecxz
pusha
jo
inc
sbb
loope
mov
inc
jbe
test
hlt
xchg
mov
hlt
cwtl
icebp
inc
rcrl
mov
lret
inc
clc
ja
jle
mov
fwait
aam
xor
lods
movsb
push
xchg
mov
inc
test
pop
mov
jne
mull
data16
xchg
and
or
adc
test
cld
les
cmp
adc
inc
inc
pop
push
push
in
mov
jp
push
xor
adc
loop
movsb
push
jbe
sbb
mov
shr
inc
sbb
inc
clc
jle
cld
mov
fwait
pop
add
pop
test
add
jae
dec
or
xor
aad
mov
mov
jae
pop
lock
inc
xchg
in
xchg
mov
and
cmp
jl
in
cmp
popf
xchg
outsb
pop
popf
cmp
add
sub
push
mov
xor
scas
add
jmp
xchg
imul
and
mov
imul
jl
push
enter
sub
or
push
xchg
cli
test
adc
test
iret
xor
in
mov
bound
sub
mov
sub
push
jnp
inc
cmp
cli
xor
ss
popf
xchg
imul
out
sbb
pop
mov
or
pop
ss
mov
pop
bound
cmpsl
xchg
jmp
dec
jbe
jns
test
outsb
lret
mov
daa
mov
adc
cli
jns
testl
inc
adc
sbb
lret
or
je
xor
inc
loopne
cmpsl
imul
arpl
inc
stc
es
mov
jb
enter
cld
jge
sbb
faddl
sti
add
dec
je
hlt
repnz
pop
loopne
lods
rcrb
shrl
and
dec
mov
es
lods
pop
cmp
lds
ds
cmp
push
dec
lcall
es
sub
lock
les
fstl
pop
cmp
push
testl
mov
je
or
push
stos
in
cmp
jle
in
bound
std
mov
ret
push
jg
outsl
insb
dec
mov
sub
int
pop
xlat
loopne
or
sahf
je
test
imul
sbb
jmp
push
mov
cwtl
inc
scas
mov
imul
lds
dec
cltd
lea
jb
cwtl
dec
cltd
in
cmp
mov
or
dec
cmp
fucompp
inc
js
cwtl
fadd
out
ds
cltd
aam
inc
add
leave
push
fstpt
and
shll
pushf
addr16
dec
inc
add
mov
ret
pushf
jnp
int
jno
adc
xor
mov
inc
lds
adc
ss
adc
push
cs
fildll
cwtl
repz
or
dec
inc
imulb
push
lods
xchg
jge
push
cld
sbb
inc
pushf
xor
inc
leave
jo
fnstcw
mov
insb
sbb
xor
stc
aam
or
pop
lods
out
add
mov
add
jo
xchg
arpl
push
push
add
movsb
push
inc
out
pop
pop
xchg
jecxz
xor
les
mov
mov
push
sti
lock
sbb
ljmp
wbinvd
add
jbe
stos
arpl
jb
fs
in
push
test
popa
sub
fists
inc
xchg
mov
adc
scas
inc
sub
adc
sbb
xor
cld
mov
repz
inc
test
mov
mov
push
mov
dec
das
mov
mov
rclb
cwtl
cli
aaa
pop
jne
fs
bnd
ss
and
pop
pop
pop
stc
sbb
sub
pop
push
xchg
xor
jp
jbe
fwait
int3
in
add
xchg
jge
push
leave
cld
xor
xchg
xchg
jl
xchg
cmp
ret
js
inc
jge
movsl
adc
fnstcw
pop
std
add
in
pop
dec
lock
sub
fcoml
in
mov
mov
popf
inc
adc
sbb
xor
xor
je
xor
outsb
ss
mov
in
sub
add
sbb
dec
push
push
mov
pop
daa
adc
lods
mov
iret
cld
icebp
sti
loopne
xor
fiaddl
cli
xor
dec
cmc
pop
jo
test
or
test
stos
push
lea
xchg
add
jo
jns
and
inc
cmp
pop
pop
jnp
push
aam
add
xchg
mov
js
push
jg
push
mov
loopne
cmpsb
out
jle
or
xlat
pop
pushf
js
push
out
lods
into
in
mov
or
repnz
loopne
test
loopne
mov
xchg
sbb
mov
mov
jae
sub
mov
mov
sub
cmpsb
sbb
mov
lcall
icebp
movsl
cmp
popf
adc
out
pop
outsb
outsl
fs
pop
addr16
adc
inc
xor
pop
inc
or
in
mov
or
xchg
xchg
lods
xchg
pusha
pushf
lea
mov
ret
nop
daa
shufps
cmp
shl
sub
pop
mov
push
sub
jmp
mov
clc
or
pushf
ja
sub
jge
adc
jmp
cwtl
test
inc
lods
jge
xchg
jbe
xor
adcl
or
adc
movsb
push
xchg
mov
or
hlt
daa
arpl
sbb
inc
sbb
adc
xchg
in
rcrl
addr16
stos
test
push
dec
lds
leave
inc
fisubrs
push
sbb
outsl
or
fisubs
jae
fisubrl
out
or
xor
sub
xor
pop
jne
xor
mov
cmpsb
sbb
inc
call
std
inc
sbb
fdivl
xchg
adc
ljmp
in
cltd
in
dec
jne
push
mov
clc
icebp
jge
repnz
das
mov
and
int3
mov
in
xor
imul
fnsave
xor
cmp
push
push
imul
popf
mov
push
mov
cmpsb
adc
out
inc
mov
mov
cmp
push
xchg
sbb
idiv
and
mov
test
jmp
sub
pop
jnp
in
cmp
popa
xor
xchg
jb
mov
jge
push
cld
icebp
xor
mov
mov
and
ret
sbb
or
lcall
mov
adc
stc
mov
push
mov
dec
and
mov
pop
lds
or
loope
cmp
fwait
idiv
lock
movsb
mov
jle
pop
call
dec
aad
aas
add
call
jo
stos
out
jo
in
into
aaa
inc
dec
mov
mov
jp
divb
adc
test
mov
arpl
frstor
push
push
ds
or
jmp
loopne
stos
add
jno
mov
mov
aas
jbe
inc
outsb
jae
adc
ds
daa
and
push
movsl
push
push
shll
out
cltd
shlb
push
dec
aad
jnp
out
iret
xlat
jle
daa
das
and
fwait
jmp
mov
pop
sub
mov
cld
sti
stos
int3
dec
scas
pop
rol
add
mov
mov
xor
stc
test
push
xchg
adc
test
jno
mov
xchg
and
data16
push
aaa
pop
mov
mov
pop
push
sti
lods
and
push
mov
mov
adc
out
ss
mov
sub
iret
xchg
xchg
sub
outsl
mov
cltd
ficomps
jmp
jecxz
cmp
mov
and
mov
mov
fidivrl
mov
mul
ss
pushf
mov
jmp
and
dec
ror
add
mov
movsl
sub
ret
xchg
clc
fwait
jge
pop
mov
push
sahf
xchg
icebp
jne
das
inc
xchg
call
mov
and
pop
sahf
push
push
mov
dec
mov
mov
fnstsw
cltd
add
pop
daa
add
jb
test
fwait
sub
push
cltd
fwait
loop
int
cmc
or
pop
push
sbb
movsl
fstpl
sub
mov
sbb
add
mov
inc
stc
xchg
sbbb
bound
mov
or
inc
jne
inc
js
divl
out
enter
jae
mov
xchg
gs
xlat
aaa
out
push
lds
pop
adc
cmp
adc
daa
pop
dec
jo
adc
push
insb
inc
stos
je
inc
arpl
mov
loope
pop
cmp
add
sub
cmpsb
outsb
add
mov
or
add
pop
push
in
cmpsb
filds
imul
push
repnz
sbb
popa
jbe
outsl
and
pop
subl
jmp
xchg
mov
cmc
ret
sbb
pop
negl
movsl
nop
call
insl
mov
rolb
mov
sti
loopne
jb
pop
jno
arpl
sbb
ljmp
aaa
notb
xor
mov
fmuls
mov
xchg
enter
jmp
jmp
lahf
jb
push
add
je
mov
les
ljmp
xchg
das
cmc
and
fdivrl
mov
inc
call
pop
mov
xor
add
sti
fmull
pushf
je
sub
pop
pop
ds
mov
leave
arpl
mov
test
imul
in
enter
push
jb
leave
or
js
div
sbb
mov
lahf
jge
add
and
lea
lods
adc
sahf
or
xchg
adc
nop
imul
cli
fstl
and
rcll
lea
and
mov
hlt
xchg
xchg
dec
adc
and
pop
xor
cmpb
mov
fdivrs
add
out
daa
stc
jno
mov
dec
nop
mov
xchg
scas
mov
adc
outsb
jecxz
stos
dec
addr16
jb
xor
mov
dec
outsl
fisubrl
fcoml
cmc
adc
pop
movsb
ret
xchg
mov
ret
insb
out
jae
pusha
fsubrl
jmp
insb
pop
mov
pushf
fs
in
and
add
push
adc
test
in
mov
pop
push
aas
call
mov
insl
popf
enter
jb
jle
mov
pushf
and
outsb
pop
ljmp
mov
dec
out
jmp
xchg
in
inc
or
cld
add
push
sub
movsb
pop
lods
mov
loop
inc
inc
pop
inc
sbb
cmp
jmp
aas
test
and
or
lea
cmp
jo
xor
dec
out
sti
dec
jno
scas
adc
ja
dec
icebp
vmovaps
xor
cmpl
xchg
movsl
pop
dec
xchg
icebp
or
mov
test
popf
popa
nop
jg
fs
xchg
dec
popf
shlb
daa
or
cmp
jge
rcrl
mov
push
xor
xchg
repz
pop
popa
pop
mov
ret
push
xlat
test
or
test
gs
inc
push
dec
dec
adc
push
jecxz
stos
cli
mov
jg
sbb
mov
fildl
repnz
out
fwait
notb
mov
cmpl
addr16
pop
repz
dec
mov
pop
btc
insb
mov
sahf
cmp
in
mov
pushf
or
mov
leave
out
adc
popa
inc
enter
movsb
popa
addr16
xor
jp
mov
leave
lds
jmp
sub
xor
inc
cmpsb
not
pushf
adc
out
in
mov
popa
and
sbb
jmp
inc
int
std
sahf
pop
testl
push
lds
cmp
adc
out
pop
jae
cmp
dec
mov
test
cmp
fld1
aaa
daa
jbe
mov
pop
out
mov
shl
fs
aam
data16
lahf
or
leave
mov
pop
ds
fidivrl
push
rcpps
mov
test
sbb
out
cmp
scas
sbb
test
test
mov
lahf
push
mov
cs
mov
int
stc
inc
imul
rcrl
clc
sbb
cmpsl
mov
push
sub
sub
nop
ja
stos
out
mov
dec
pop
mov
pop
jmp
rorb
jp
pop
flds
testb
and
sub
jne
clc
mov
pop
xlat
outsl
imul
mov
cmp
lret
xor
push
daa
aas
xor
xor
mov
xor
sti
dec
test
xor
jno
pop
repz
add
inc
dec
int
je
cmpsb
div
ss
push
loopne
cmpsb
into
adc
or
mov
iret
and
cld
dec
sub
mov
pusha
push
in
dec
xchg
inc
jae
das
push
mov
pushf
xor
and
test
or
add
fstps
sub
or
sub
loopne
add
add
insl
fwait
nop
filds
cwtl
testb
push
and
movq
je
fiaddl
push
dec
pop
faddl
push
lcall
icebp
in
push
repnz
aam
adc
mov
fcomps
subb
call
sti
add
sti
xchg
jbe
shll
cwtl
adc
mov
inc
loop
loopne
fs
cmp
shl
in
adc
or
dec
mov
or
cltd
pop
sub
dec
or
leave
in
and
jns
pop
xor
mov
and
imul
mov
cld
jae
push
xor
ds
add
and
test
mov
mov
daa
inc
movsb
leave
pop
and
cwtl
jmp
mov
adc
fcoms
cwtl
sbb
movsl
mov
cmp
arpl
ljmp
ja
movups
and
ds
cmp
pop
xchg
push
sbb
andb
fnstenv
jbe
cltd
push
dec
mov
icebp
into
je
sub
ds
pop
dec
cmp
jmp
lods
xchg
leave
outsl
out
imul
mov
std
xchg
or
push
cmp
sub
mov
sbb
xchg
mov
push
cmp
push
sbb
jo
mov
orb
out
mov
pop
push
mov
pop
pushf
cltd
lret
xchg
mov
loope
sarl
jle
mov
movd
je
mov
push
lods
push
jp
pusha
jnp
ficoms
cmpsb
xor
rorl
fxch
arpl
dec
push
mov
clc
sahf
daa
fisubrs
adc
push
mov
cmp
or
test
xchg
add
aaa
jg
test
fidivrs
fidivrl
xchg
ret
ja
sbb
leave
sub
mov
stos
lods
push
stc
iret
popf
jne
scas
aaa
xor
popl
insb
mov
daa
fdivrl
rcrl
sub
inc
add
lret
movsb
ds
adc
sub
jl
lret
or
and
cmpsl
dec
adc
out
test
out
push
and
pop
inc
push
push
lock
gs
lret
pusha
ret
cmp
ror
iret
sbb
movsb
testl
mov
fs
push
cltd
cmp
aaa
js
ficoml
inc
das
pop
rcll
cmp
lock
xor
xlat
or
mov
mull
jge
or
sahf
mov
cs
cmp
mov
push
add
sarl
add
lods
stos
cmp
bound
push
cmpsl
mov
mov
push
xor
lret
je
repnz
sti
jns
dec
mov
dec
add
jb
imulb
mov
push
out
xchg
shrb
pop
iret
inc
push
jno
jecxz
push
xchg
cltd
jns
jbe
adc
scas
ret
add
inc
loop
mov
jmp
iret
and
xor
jl
pop
mov
adcl
adc
adc
jb
es
into
jg
or
mov
test
les
or
call
xor
adc
xchg
mov
xchg
fistps
inc
or
popa
adc
sbb
stc
clc
or
jmp
cmp
ret
jmp
jne
out
adc
hlt
add
pop
fdiv
ja
aad
cmpsl
jl
mov
xor
daa
inc
adc
push
popf
fbstp
pop
mov
xchg
xchg
xor
fwait
xlat
add
and
das
insb
jle
in
jb
test
jno
sub
sbb
lock
int
out
rcl
ja
xchg
xchg
add
add
add
pop
inc
jle
outsb
gs
mov
and
rcrb
testl
xchg
mov
fldcw
sbb
cmpsl
mov
fcoml
adc
rclb
arpl
fs
dec
js
jbe
push
cmp
and
xor
push
inc
test
rorl
test
mov
stc
or
lods
mov
sbb
and
cli
sub
in
sbb
cmp
mov
push
xor
mov
dec
pop
sub
lret
mov
or
sbb
or
adc
adc
sub
push
xor
ja
sahf
add
adc
mov
or
cs
ret
mov
cmp
cmp
push
push
cld
cs
roll
cmpl
and
dec
push
add
pop
rorb
outsb
mov
cld
push
fstpl
mov
fwait
nop
in
and
pop
push
clc
jae
sub
js
sub
jns
jns
test
and
jl
les
rcr
pop
pop
in
pop
cli
mov
pop
push
cmp
ret
sbb
sti
cs
mov
adc
icebp
in
stos
push
mov
movb
or
sbbb
mov
jbe
fldl
dec
andb
aad
jg
lock
dec
jo
sbb
mov
lds
add
aad
xchg
stos
js
popa
sbb
and
cmp
adc
lret
out
mov
cmpsb
jecxz
and
cmpb
push
and
pop
add
popa
mov
mov
lret
daa
mov
hlt
fildll
push
cld
ffree
xchg
sahf
fmulp
add
pop
scas
adc
jge
mov
das
adc
mov
mov
testb
push
incl
add
and
mov
jns
leave
push
mov
lgs
repnz
dec
sub
xchg
push
shl
sahf
call
icebp
pop
and
dec
ljmp
adc
mov
xor
arpl
les
jp
mov
and
jae
insl
mov
dec
mov
mov
sti
lock
stos
shlb
push
adc
sub
stc
ror
push
aam
stc
adc
xorl
subl
adcl
inc
adc
push
inc
mov
mov
cltd
adc
out
push
test
dec
or
js
ds
aaa
outsl
mov
or
xor
mov
dec
lea
shll
arpl
sub
lret
pop
repz
push
or
jl
dec
and
test
mov
dec
lret
loopne
pop
pusha
xchg
and
cli
pop
addl
jnp
cmp
xor
sti
dec
add
mov
inc
sub
andl
push
in
sar
push
cmovl
dec
sbb
mov
xchg
mov
rorl
sub
test
inc
inc
inc
fists
mov
sbb
inc
andb
lock
mov
ret
sahf
lret
add
mov
jge
decl
lret
and
mov
stos
mov
adc
dec
xchg
mov
adc
or
in
adc
mov
mov
dec
mov
xor
int3
out
dec
sub
xchg
out
dec
dec
mov
test
or
into
lock
daa
mov
mov
inc
fidivrl
ds
leave
popf
lahf
test
outsl
xchg
xchg
mov
pop
insl
xor
xor
pop
mov
pusha
jb
and
jle
cltd
jmp
mov
pop
xor
andl
das
cmp
dec
es
add
dec
mov
pop
pop
lds
fsub
roll
fsubp
push
lcall
mov
push
out
mov
sub
pop
mov
scas
shlb
inc
add
andl
mov
and
and
mov
push
call
jl
into
or
or
ljmp
jae
inc
and
inc
lds
and
lcall
pop
push
cwtl
pop
out
jb
adc
dec
aaa
int3
lea
pop
mov
icebp
xor
movsb
jge
mov
icebp
mov
mov
push
push
mov
inc
call
lods
into
sahf
adc
xchg
xchg
cld
dec
je
mov
cmp
aam
outsl
cmp
xchg
pushf
aad
xorb
clc
mov
cwtl
adc
sub
pop
xor
push
mov
and
int
stc
movhlps
mov
jo
leave
dec
fucompp
fs
mov
mov
mov
mov
xchg
and
jo
jns
cwtl
jg
push
stos
and
sbb
sub
push
jnp
cmp
pop
jno
imul
lret
or
ret
cwtl
cmp
cld
or
sub
and
daa
test
js
test
lods
pop
xor
mov
mov
dec
rorl
mov
push
jl
call
sti
mov
nop
mov
sub
xchg
xchg
aaa
or
dec
aad
add
lret
lods
inc
adc
mov
push
jo
leave
fwait
cmp
cmp
jo
jnp
jae
loop
mov
jmp
push
sti
or
sub
insl
outsl
or
aaa
stos
push
cmp
ja
mov
mov
faddp
fisubs
pop
stc
xor
imul
and
mov
pop
push
pop
test
add
mov
push
mov
cwtl
andb
mov
adc
push
lods
mov
enter
insb
xchg
jecxz
fcmovne
xor
add
scas
push
dec
sub
notb
gs
jmp
das
outsl
es
pop
sbb
xor
mov
or
jmp
js
and
mov
or
in
movsb
subl
or
mov
xor
mov
push
push
inc
mov
aas
jno
push
sub
or
mov
daa
and
mov
add
cmp
aad
mov
xlat
cmc
outsb
xchg
mov
sahf
push
into
cmp
repnz
fwait
cmpsl
jnp
xor
stos
jle
sbb
sarb
sub
cld
pop
mov
clc
add
xor
cld
fldcw
mov
xlat
jb
cli
mov
pop
mov
clc
mov
cs
mov
push
popf
ds
sti
into
cmp
in
test
cmp
js
in
cs
inc
pop
inc
andl
adc
ja
mov
pop
cmpsb
rcrb
outsl
push
pusha
fldenv
mov
imul
xchg
addl
call
aam
add
cmpsb
and
addr16
add
andb
inc
pop
and
xor
xchg
mov
imul
mov
push
roll
and
cmp
notl
sub
sub
sbb
cli
es
fcmovbe
or
jnp
in
pusha
andl
adc
loop
insl
push
in
add
leave
xchg
sub
cs
dec
pop
insb
mov
add
and
inc
jnp
xlat
faddl
inc
adc
mov
mov
mov
jae
sbb
mov
dec
cs
jae
jne
add
fwait
cmc
or
inc
jg
adc
es
out
xchg
adc
inc
out
xchg
dec
jns
mov
mov
add
push
testl
insl
int3
fstpl
sub
mov
ret
movsb
sarb
add
pop
mov
xchg
shll
dec
fs
push
jp
cmp
sbb
test
xchg
popa
push
out
sub
pop
insb
jo
add
lods
pop
inc
jo
cs
scas
imul
adc
add
loopne
mov
inc
jg
inc
int3
pop
mov
adc
imul
daa
pop
in
shll
int3
cld
and
xor
js
scas
loope
insl
aad
pop
iret
test
adc
out
and
shr
loop
and
adc
inc
out
or
out
mov
out
xor
in
subb
lea
dec
shll
test
mov
jecxz
adc
lcall
inc
lahf
sarb
pop
inc
ret
cs
shll
adc
xor
xor
test
add
in
aaa
jp
call
adc
and
loope
ja
scas
idivb
movswl
push
pop
mov
fcmovnbe
gs
dec
pushf
inc
rolb
lods
pop
mov
pop
out
xor
xchg
rolb
fmuls
jns
xchg
jno
mov
mov
cs
jo
xor
inc
ret
mov
jle
xlat
mov
outsl
aas
cmc
mov
dec
inc
sub
xor
mov
xor
push
dec
xor
xor
mov
fs
fisubs
add
pop
add
adc
bound
ds
ret
or
add
inc
adc
ret
dec
xchg
popf
mov
cmp
movlps
mov
in
jnp
cmc
dec
push
dec
sub
mov
je
or
mov
mov
ficompl
sub
ss
sahf
jg
fildll
dec
push
pop
push
call
leave
xor
cmp
out
pop
lret
in
out
inc
cmc
push
daa
insl
icebp
xrelease
xchg
stc
cltd
jmp
sarb
fsubs
aas
scas
xchg
sub
and
jne
clc
mov
loop
sub
add
mov
jo
ds
pop
mov
mov
insl
sbb
shrb
rorb
add
jnp
push
notb
xchg
inc
xchg
xchg
mov
jb
das
cmp
iret
push
jle
jl
test
std
pop
icebp
repnz
dec
jbe
mov
lret
inc
adc
push
mov
xor
add
adc
ret
data16
add
adc
les
ja
ja
and
mov
decl
sbb
call
adc
push
out
xchg
inc
jl
jnp
fwait
dec
jge
movsl
cmp
test
in
dec
dec
sub
ss
push
in
mov
mov
loopne
std
popf
cmp
or
or
sub
es
push
arpl
pusha
dec
add
mov
in
scas
mov
aaa
jle
mov
jb
jmp
jnp
xchg
cli
push
cmpsb
loop
add
jno
pop
jmp
addr16
pop
or
das
cwtl
mov
jnp
lods
xor
dec
mov
jle
inc
shll
jl
sbb
sbb
out
out
add
jb
cmp
in
push
inc
adc
sbb
bound
dec
xor
mov
sub
jle
xchg
loop
sub
mov
sti
fistl
or
pushf
push
jnp
outsb
xor
sti
fstpl
loope
dec
sbb
and
leave
and
jnp
jecxz
sbb
pop
inc
adc
stos
fs
idivb
push
repnz
call
dec
test
sbbb
fistpll
lahf
ret
ficoms
enter
adc
mov
imul
sbb
mov
mov
dec
cmp
cmp
push
popf
mov
xchg
xchg
rcr
inc
testb
xchg
sbb
jp
mov
and
lcall
sub
pop
rorl
loopne
jb
daa
outsl
xor
sahf
push
push
outsl
jbe
insb
mov
cmp
data16
xor
in
sbb
pushf
xor
int
pop
push
cmp
and
std
int
pop
andb
mov
mov
sub
xlat
cmpsl
add
mov
inc
stos
xor
fcom
loope
xchg
push
cmp
sbb
mov
mov
push
cmc
sti
frndint
fs
fidivrl
fxch
leave
cmp
inc
sahf
jg
jbe
call
aad
fldt
mov
xchg
cli
or
add
push
pushf
ror
and
sbb
popa
nop
add
sbb
push
xor
ljmp
rorl
or
bound
dec
std
mov
es
sysexit
fstl
mov
fistl
sub
sbb
lods
arpl
and
mov
pop
push
movsl
imul
jne
gs
sub
mov
adc
test
lret
fdivrs
add
ret
jge
repnz
fs
cmp
inc
push
xchg
adc
sahf
xchg
rcrb
sti
jae
mov
lods
ss
mov
mov
push
add
xchg
mov
sbb
in
pop
jmp
pop
lods
sahf
popa
xor
xchg
insb
stos
adc
cmpsl
mov
inc
dec
adc
mov
jo
imul
pop
pop
mov
in
in
repnz
int
ja
insb
cmp
jmp
mov
add
iret
stos
xlat
add
div
lahf
aaa
or
adc
or
dec
sbb
je
push
pop
adc
call
adc
sub
mov
fistl
shrl
add
adc
or
aam
mov
movsb
shrl
in
adc
mov
ss
push
inc
orl
xchg
daa
xchg
mov
push
jb
shlb
mov
xor
xchg
xchg
sub
pop
fdivp
push
pop
pop
xor
cltd
fwait
dec
popa
push
popf
divl
sbbb
add
mov
lods
popf
aas
fimuls
rcl
lods
fildll
push
jge
add
inc
dec
xlat
or
jns
push
movsb
inc
aas
cs
lds
cmp
repnz
fstpl
lock
rcll
push
mov
push
stc
mov
sub
cmp
pop
jg
popa
adc
test
sub
dec
pop
enter
dec
pop
fdivl
psraw
mov
pop
mov
adc
cmp
cmp
push
dec
sbb
and
shrb
mov
fcmovb
adc
cs
jae
ljmp
rolb
jb
mov
ret
fwait
les
ljmp
push
pop
or
aaa
lea
or
mov
movsb
pop
jg
in
mov
hlt
clc
and
push
jecxz
pop
and
orb
push
or
aad
pop
addr16
add
movsl
aaa
adc
sar
outsl
lea
push
jge
fldcw
cmp
int3
dec
mov
iret
fs
mov
mov
lret
inc
bound
jg
aaa
scas
fdivrs
je
out
imul
dec
inc
int
adc
sbb
jne
call
icebp
xchg
xchg
and
mov
inc
add
mov
add
jg
in
ja
loopne
out
mov
ja
and
inc
xchg
test
test
push
jno
or
in
mov
lea
sar
inc
imul
insb
fwait
shrb
fildl
popf
lea
aad
scas
inc
shr
sti
nop
push
sub
fisubrs
cmp
mov
stos
pop
sub
dec
scas
in
rcll
mov
shll
andl
push
or
aam
jp
stc
ret
sbb
push
lahf
push
popa
cmpsl
push
aas
xchg
mov
cld
xor
test
ja
fiaddl
sbb
jecxz
dec
and
xchg
pop
add
lods
push
cmc
lods
in
cmp
sbb
adc
dec
jl
pop
mov
out
cmc
xchg
out
dec
loop
mov
xchg
jne
pop
js
js
jne
cmc
push
sti
call
xor
cli
std
or
dec
jl
adc
inc
jbe
push
pushf
jne
pop
test
repz
gs
push
lret
lods
mov
and
insl
inc
inc
sahf
test
push
loopne
hlt
inc
test
xor
test
arpl
sahf
cmp
aad
imul
pop
aas
or
mov
cmp
pop
ds
fcomps
add
jo
sbb
pop
xor
mov
mov
pop
cmc
cmpsb
push
call
inc
push
shlb
in
dec
cmc
sub
xor
js
push
pop
shr
fidivrl
inc
pop
sub
xchg
lret
jge
jg
sub
cld
cmpsl
lret
repnz
data16
sbb
cmc
pop
ds
sub
push
mov
push
aas
loope
andb
lcall
pusha
mov
xlat
leave
scas
inc
fnstsw
gs
adc
jae
mov
xor
movsl
add
pusha
jg
pushf
adc
cmp
mov
stos
fildl
sub
pop
sbb
pop
mov
leave
push
cltd
mov
or
push
repz
push
and
xor
sbb
cmpsl
add
imul
sbb
cli
mov
cmp
clc
push
mov
leave
arpl
nop
test
jno
icebp
jnp
xchg
xchg
leave
pop
fldl
jp
das
call
out
cwtl
push
push
call
push
add
lods
push
mov
jbe
adc
stc
mov
inc
jmp
call
mov
mov
sbb
not
scas
scas
lahf
pop
insl
sahf
popf
je
outsb
push
adc
and
xor
fs
mov
jb
push
dec
xchg
jnp
fwait
pop
or
cld
lret
imul
inc
sbb
dec
fmuls
clc
cmp
popa
mov
lea
fcmovnb
pop
mov
mov
es
and
sbb
test
xchg
test
insl
jl
push
fnstcw
cld
jle
jmp
hlt
into
lcall
sub
pop
test
mov
push
and
mov
das
xlat
mov
fnsave
int
sbbl
shl
add
sub
shlb
dec
icebp
xchg
inc
pop
dec
cld
addr16
lahf
mov
std
push
add
insb
xstore-rng
cmpsl
add
sub
jge
add
data16
mov
in
out
add
or
cmp
add
dec
mov
out
lds
or
pushf
call
loop
pop
sbb
mov
mov
enter
bound
repnz
push
mov
adc
lock
pop
inc
or
mov
clc
xchg
adc
adc
cmpsb
stc
and
shrl
dec
jmp
imul
pop
lea
clc
les
pop
outsb
or
xchg
jg
or
xchg
pusha
or
cmc
xorb
sti
mov
outsb
push
outsb
out
scas
cmp
leave
sub
int
mov
push
aas
fdivl
jl
lcall
test
sub
jno
and
inc
sub
fs
shlb
sub
outsb
repz
lret
push
inc
pop
and
mov
loopne
mov
mov
rcll
lock
test
repz
test
xchg
pop
cmc
sub
je
cmpsl
xor
iret
cmp
mov
movsb
movsl
sbb
cwtl
pop
cli
inc
or
jns
jne
fistpll
xor
xor
xchg
clc
push
mov
push
ja
sbb
and
jo
inc
lock
mov
mov
shlb
sbb
mov
inc
xchg
pop
loopne
pushf
mov
xor
test
lsl
push
pop
addl
in
icebp
lods
mov
adc
sub
addr16
jle
cli
cmp
jo
jp
cmpsl
dec
mov
sub
or
jae
dec
mov
insl
lds
cmp
fnstenv
negb
test
cmp
bound
jmp
dec
and
adc
add
bound
test
mov
add
aas
inc
lds
lcall
mov
or
sbb
mov
mov
mov
ret
maxps
cmc
jns
sbb
inc
push
inc
and
xchg
ds
cmp
xchg
jno
pop
xchg
pop
sbb
cmp
lea
xchg
mov
hlt
outsb
inc
pop
sbbb
out
ja
xchg
movsb
xchg
jge
les
xor
es
or
or
sbb
sub
cltd
mov
xor
jbe
rorl
repnz
cmp
lock
scas
loopne
pop
sub
dec
clc
xchg
enter
lods
xchg
xchg
sbb
lret
sbb
fwait
and
push
xlat
rolb
fmulp
jge
adcb
roll
xor
sbb
mul
stos
dec
popf
ficomps
dec
adc
push
int3
push
add
add
nop
ja
cmp
and
sbb
and
xor
jle
add
ret
popf
adcb
dec
sub
movsl
jl
xchg
rcr
repnz
sarb
loop
popf
jle
mov
sub
inc
xchg
imul
orl
or
lret
and
mov
and
ja
imul
and
pop
jns
imul
or
inc
push
fs
daa
mov
xchg
imul
and
test
jg
jp
lods
or
outsb
rcr
jns
aas
test
aas
ja
xchg
das
sbb
pop
push
insb
fisubs
push
jbe
out
leave
out
dec
mov
push
rcll
mov
mov
popf
jno
clc
outsb
insb
gs
jns
sti
push
or
ret
jnp
lahf
mov
jg
xor
popa
jge
and
sub
xchg
adc
jl
mov
into
cmpsb
or
pop
cmpsl
cltd
pop
rolb
jno
test
popf
sti
sbb
inc
je
or
xchg
aas
or
les
lock
fwait
xor
mov
cmpsb
rolb
inc
into
dec
push
pop
out
pushf
xchg
dec
ror
test
push
pop
stos
pop
mov
xorb
lods
xchg
adc
push
mov
push
cmp
push
fmull
out
nop
insb
mov
outsl
inc
shr
daa
mov
repz
pop
dec
js
cmpsb
or
fs
cmpsl
fwait
sarb
cs
dec
mov
pop
leave
ret
sub
push
test
rorl
pop
insl
movsb
xor
rorb
dec
xor
mov
cmp
sbb
xor
mov
sbb
out
insb
sbb
mov
add
inc
int
pop
and
pop
sub
pop
sbb
jp
es
in
xor
flds
fldcw
push
xchg
jne
push
xchg
insb
inc
inc
out
xor
and
es
sti
clc
xorl
lret
leave
fidivl
and
pop
cld
mov
cltd
push
xlat
out
insl
add
aad
add
mov
data16
add
cwtl
add
aad
cs
cmc
jb
and
pop
ljmp
mov
adc
arpl
outsl
mov
stos
xchg
lea
movsl
fistps
cli
addl
lret
test
int3
xor
lods
dec
rcll
pop
sub
dec
jo
mov
xchg
mov
sub
xchg
inc
mov
pop
pop
sbb
cmp
fwait
push
lods
int
and
sub
pop
push
jmp
subl
xor
adc
test
jne
jns
std
add
cli
rcrb
pop
loopne
pop
mov
aaa
push
inc
in
mov
dec
sbb
stc
ss
js
or
mov
jle
xlat
add
xor
out
out
mov
out
repnz
into
sub
xchg
in
cltd
or
idivl
popa
daa
push
mov
leave
imul
adc
out
jmp
cmc
lcall
mov
push
rorb
jbe
jl
out
xchg
xchg
sbb
cwtl
sub
dec
cld
mov
mov
inc
push
rorl
add
fs
cmc
shl
sar
dec
fisttps
xchg
andb
xor
cmp
cmpsl
xlat
pop
daa
mov
movsl
xchg
mov
fldt
xor
jno
roll
hlt
xchg
js
pinsrw
popf
icebp
push
mov
into
xchg
adc
mov
lcall
inc
add
add
loope
arpl
sbb
rcrl
pop
shrb
not
adc
data16
mov
xchg
adcl
pusha
aad
sbb
insb
shlb
mov
bound
dec
jl
dec
and
aad
push
lds
or
test
movsl
loopne
lret
call
jno
sarb
testl
jne
loope
stc
mov
negl
push
out
cmpsb
pop
vunpcklps
xchg
int
xchg
aaa
or
jl
jmp
out
test
pusha
iret
adc
pop
cwtl
popa
fsubl
fwait
xchg
xor
je
mov
outsl
mov
push
jge
xor
mov
test
xor
sub
adc
out
jp
pop
ficoml
adc
std
mov
punpckhwd
mov
fs
lods
jecxz
mov
leave
mov
outsb
ds
sar
call
adc
in
xor
cmp
mov
push
and
lcall
ret
xchg
jnp
orl
sub
idiv
add
mov
ret
push
cli
sbb
outsb
scas
in
jne
push
cmpsl
jmp
iret
pop
jmp
sahf
sbbl
cld
movsl
mov
or
jmp
xlat
mov
sub
in
and
push
leave
aad
add
popl
in
mov
subb
loope
mov
fists
xor
in
inc
movsl
push
std
pop
loope
inc
rcrl
cmp
cwtl
xchg
sbb
fs
pop
jbe
sub
test
cmp
movsl
push
adc
push
and
push
bndldx
sbb
mov
dec
stos
movsb
jge
xor
xchg
arpl
lods
repz
fsts
fstl
aas
nop
jge
out
enter
xor
sub
adc
push
in
xchg
cmp
sarb
sbb
daa
movsl
inc
adc
mov
fsubr
pop
mov
hlt
std
in
sbb
jbe
fcomi
dec
std
push
push
adc
sbb
pop
cmpsb
ljmp
dec
push
mov
je
push
das
addb
dec
outsb
adc
mov
cmp
pop
mov
xchg
push
scas
arpl
dec
loopne
daa
iret
mov
sub
adc
xchg
pcmpeqb
negb
outsb
or
cmp
push
lods
sub
mov
cld
adc
inc
test
or
mov
add
cmp
push
mov
arpl
dec
inc
mov
int3
mov
out
lods
push
push
aam
inc
iret
in
push
cwtl
and
jne
dec
in
jbe
loope
adc
dec
std
lock
pop
cwtl
mov
mov
xor
dec
imul
loope
add
out
cmpsb
jge
push
test
out
scas
iret
mov
inc
in
add
leave
cmpsl
mov
push
jp
cwtl
lret
insl
data16
lret
imul
loop
mov
insl
add
xor
push
fsubrs
movsl
lods
repz
cs
cld
enter
xchg
stos
outsb
mov
pop
mov
push
or
inc
xchg
sbb
icebp
ja
xorl
mov
lcall
dec
inc
mov
das
push
jg
shll
push
fs
jno
lahf
in
pop
shll
jmp
pushf
xchg
das
lea
clc
scas
adc
mov
repnz
push
stc
les
mov
call
dec
pop
int
jg
dec
fiadds
push
or
jle
jb
cld
rorl
xchg
das
scas
mov
mov
repz
pop
jle
push
dec
mov
fcoml
jbe
xchg
popa
add
xchg
pop
or
pop
mov
jne
adc
sbb
test
or
adc
push
adc
idivb
test
pop
or
iret
clc
mov
scas
sub
push
fcompl
cmp
js
adc
cmp
cmpsl
aam
aas
mov
mov
dec
xchg
and
or
jl
mov
mov
stos
adc
or
sti
ret
inc
std
adcb
lds
lods
push
push
mov
cli
dec
cwtl
mov
pop
ljmp
dec
or
dec
jle
jbe
pushf
in
mov
sub
jns
dec
test
pop
dec
mov
or
and
add
lret
push
jnp
sub
or
add
rcr
rcll
dec
fwait
mov
pop
push
xor
pop
push
dec
loopne
xlat
adc
jo
outsl
mov
xchg
push
out
adc
xor
ss
jbe
dec
and
push
das
pop
add
mov
sub
fwait
mov
sarb
fst
rcll
loope
cmpsb
fs
mov
jae
and
sbb
push
cmp
iret
fs
jmp
mov
push
insb
mov
pop
out
dec
mov
xchg
mov
jns
ret
inc
fsubl
xor
mov
in
jmp
mov
dec
mov
push
outsl
insl
mov
cwtl
and
mov
jb
inc
out
jl
je
jns
mov
inc
mov
jg
ret
mov
enter
fmuls
push
fsubrl
push
xor
in
imulb
or
push
fdivrp
xchg
lret
push
jnp
mull
xchg
lret
jmp
lds
xchg
mov
push
inc
andl
out
cs
mull
add
dec
dec
stos
iret
pop
add
enter
lret
jno
and
dec
sbb
xor
sub
loope
jecxz
call
inc
daa
or
mov
sti
sub
mov
sbb
stc
mov
sub
push
cs
jo
or
daa
std
xor
sbb
mov
dec
imul
pop
je
test
push
out
scas
aam
ss
and
pop
nop
cmp
jmp
arpl
test
push
das
and
xor
xor
and
lcall
pusha
lods
shl
sbb
jbe
repnz
sbb
jle
aad
daa
jmp
mov
movsb
xchg
xor
decl
fdivr
xlat
adc
mov
add
jnp
mov
xchg
cmp
pop
add
push
push
lret
xor
jns
cld
sti
adc
pinsrw
filds
je
fwait
mov
mov
xchg
and
mov
scas
scas
push
pop
xchg
btc
dec
cmp
je
push
je
lahf
das
and
test
xor
int3
push
popf
scas
orb
adc
cmc
loope
push
add
call
aam
jp
mov
jle
inc
iret
mov
movsb
inc
pop
jae
adc
mov
xchg
pop
mov
push
test
push
pop
leave
and
fmuls
nop
nop
movsb
ficoml
and
cmp
ljmp
jno
data16
jo
inc
nop
daa
add
pop
shlb
popf
mulb
push
cmpsb
lods
cmpsb
inc
xchg
pushf
fsubrs
pop
test
pushf
xchg
mov
cmpsb
cmpsb
jne
push
adc
call
dec
arpl
jno
cmp
jmp
xchg
popa
sbb
xchg
and
jle
in
aad
add
lds
lods
sbb
fdivrl
push
adc
jp
mov
out
mov
mov
in
dec
shll
jl
xchg
jbe
outsb
add
push
xchg
push
sahf
pop
dec
popf
cmpsb
dec
jle
int
or
insl
dec
mov
or
int
aad
pop
loop
frstor
call
xor
inc
fisubrs
in
adc
jbe
mov
inc
xchg
mov
jecxz
data16
dec
popa
or
sub
and
sub
fisttpll
xchg
testb
inc
mov
pop
outsl
les
push
rolb
in
lods
jo
les
jg
mov
repnz
outsl
inc
arpl
sbb
shr
icebp
pop
imul
xchg
jecxz
pslld
inc
mov
xor
test
sbb
mov
push
in
lcall
adc
jne
or
adc
mov
pop
or
push
push
cmp
sbb
xchg
mov
inc
test
cmp
daa
repz
adc
dec
ds
mov
fwait
mov
lods
cmp
xor
fstpl
hlt
fs
cmp
push
jo
out
pop
jp
cs
mulb
jb
push
addr16
and
movb
push
xchg
in
cld
and
rcr
inc
mov
jle
push
fiaddl
cmpsb
shl
sub
pop
sbb
pop
pushf
cmp
scas
fstpt
andl
jns
inc
lret
xor
leave
int
fisubrs
mov
sti
out
mov
cs
rol
fists
add
mov
sub
xchg
iret
ljmp
dec
pop
pop
lret
pop
lods
jno
stos
jb
test
fiaddl
pop
pop
jnp
push
cltd
push
ds
out
cmp
imul
mov
lret
stos
gs
jg
add
sub
loop
jo
xor
test
shll
loopne
leave
mov
test
popa
pop
or
or
cmpb
js
insb
cmpsb
add
addr16
mov
daa
andb
sbb
xchg
add
movsb
outsl
or
xchg
pop
mov
imul
sub
and
jp
pop
inc
and
sbb
xchg
ret
bound
cltd
lods
daa
mov
xchg
jmp
iret
jbe
mov
jmp
ljmp
mov
in
push
inc
jl
sbb
dec
mov
push
add
ss
int
xchg
mov
mov
pop
dec
imul
push
lock
scas
push
pop
std
repnz
xchg
mov
cltd
jg
std
cmpsl
shlb
mov
jbe
fstpt
imul
mov
adc
arpl
repz
push
mov
dec
stos
and
pop
pop
xchg
pop
aaa
bound
lea
jmp
jbe
inc
insb
outsb
insl
mov
test
mov
inc
dec
out
mov
dec
lds
jecxz
fisubs
jmp
in
inc
xor
sbb
ds
sbb
stos
test
pop
iret
inc
bound
jl
and
rep
bound
js
inc
xor
and
xor
mov
cltd
or
inc
inc
shrl
add
push
mov
iret
test
loopne
pop
jno
sub
cmp
and
push
xlat
ja
fsts
xor
test
outsl
mov
in
xor
mov
mov
jno
push
or
adc
mov
jge
sub
xor
shll
mov
lods
mov
cmpl
testb
icebp
mov
cmp
pop
popa
add
jnp
iret
lods
xor
inc
xchg
push
and
loopne
sub
inc
and
mov
jp
das
jmp
lock
imul
push
push
lahf
cld
dec
lods
mov
incb
outsb
rclb
or
pushf
mov
dec
or
mov
xchg
xorb
or
adc
sub
dec
cmc
repnz
notl
ffreep
push
add
or
sbb
push
scas
icebp
push
insl
mov
fstpl
ret
adc
les
ret
lods
sub
pushf
out
or
xor
dec
addr16
fs
outsb
mov
adc
dec
pop
xchg
out
mov
stos
clc
push
mov
xchg
push
sbb
mov
cltd
pop
repnz
jb
sub
jne
test
mov
jae
lods
adc
jo
inc
js
push
xchg
imul
dec
rorl
sub
ljmp
mov
loop,pt
xlat
push
sti
fs
cwtl
imul
inc
fs
bound
sbb
and
mov
lahf
xchg
ret
movsb
movb
dec
sbb
aam
cs
sbb
sahf
int3
aaa
cmp
in
test
push
cmp
sbb
cltd
jno
push
mov
lds
dec
xor
sbb
dec
jle
push
xchg
stc
scas
rorb
sub
or
aaa
mov
into
cmpsb
es
jbe
mov
xchg
mov
dec
xor
test
mov
lret
or
sub
mov
in
pop
pop
inc
adc
sbb
aam
lret
jp
lods
push
icebp
pop
repnz
fwait
sarl
jne
mov
dec
testl
xor
mov
mov
dec
repz
cltd
sbbb
fwait
add
imul
sub
aam
fstps
cs
mov
insl
movsl
or
in
jmp
out
negl
ss
mov
xlat
cmp
mul
loopne
fwait
inc
and
aas
es
pop
or
iret
cmp
push
and
frndint
jno
shll
inc
jne
sub
xor
pop
jmp
test
sbb
or
aam
push
push
mov
mov
jmp
jl
lods
xchg
pop
inc
outsl
or
pop
into
lods
cs
dec
fadd
movsb
insb
outsl
mov
sbb
fnsave
ret
add
mov
mov
xor
ljmp
mov
sahf
inc
dec
fisubs
scas
xor
outsb
mov
je
sbb
or
mov
mov
inc
mov
mov
jbe
mov
xchg
mov
inc
lcall
or
push
ficoms
jle
ljmp
adc
xchg
xor
daa
mov
push
push
mov
lods
repz
mov
sete
xorl
sbb
pop
adc
cmp
dec
rcll
adc
push
into
scas
sub
jmp
into
daa
iret
xor
mov
or
dec
sbb
sarb
mov
sbb
xchg
xor
xchg
sahf
pop
mov
xlat
adc
lods
je
inc
dec
insl
and
aaa
jb
inc
fcompl
push
xchg
sub
repnz
add
mov
mov
sbb
pop
outsl
movsb
mov
iret
sbb
insl
pop
xchg
cld
mov
iret
jae
insb
insb
stos
inc
lahf
addr16
add
push
cmp
and
mov
xorb
daa
stc
pop
inc
test
jbe
sbb
mov
daa
xor
add
inc
dec
dec
push
fs
test
xlat
or
adc
push
push
lret
cmp
test
push
and
lods
icebp
repz
adc
rcll
sbb
and
push
test
or
sbb
or
inc
cmpsb
sbb
sbb
jmp
lods
dec
dec
pop
int
idivl
xor
sub
fdivp
sub
push
rcr
xor
negb
jp
xchg
lods
mov
lcall
mov
in
mov
mov
bound
adc
push
stos
xor
mov
enter
mov
in
mov
mov
mov
sbb
mov
adcl
cmp
jecxz
enter
push
sub
loopne
inc
mov
push
aam
popf
mov
pop
testb
enter
je
jp
push
out
dec
andl
sbb
or
mov
dec
orb
pushf
outsb
into
sti
mov
lock
cmpsb
neg
mov
xchg
mov
ds
dec
popa
cwtl
add
int
fcoml
xlat
pop
fcoml
flds
imul
jno
xor
nop
dec
fcompl
mov
inc
lahf
out
cmp
mov
pop
push
dec
sbb
lds
ret
pusha
aam
not
daa
orb
dec
daa
push
dec
scas
ds
mov
pop
jbe
testl
dec
inc
in
data16
mov
scas
xchg
jo
jp
cld
les
or
pop
arpl
mov
and
loopne
or
pop
mov
or
and
pop
lcall
subb
adc
mov
and
movb
mov
lahf
sbb
imul
sbb
push
mov
push
fs
mov
arpl
into
iret
rcrl
mov
push
xchg
sti
xor
or
fiaddl
jg
xchg
push
sub
daa
jmp
fcoms
jle
rol
inc
jae
cmp
notl
or
jno
rclb
pop
add
notb
dec
xchg
ret
loop
or
mov
push
or
pop
mov
xlat
mov
push
jnp
mov
pushf
jecxz
test
pop
xchg
dec
adc
out
mov
ljmp
dec
clc
sbb
dec
fld
shlb
sbb
sbb
enter
sbb
sub
sub
lcall
adc
inc
call
out
cmp
popf
rcrl
xchg
mov
push
add
ds
or
jl
mov
into
sub
lret
js
aad
xchg
or
add
jae
add
in
mov
movsl
stc
add
xchg
mov
cltd
fcoms
and
fdivrp
ljmp
daa
adc
mov
ja
xor
ret
outsb
dec
imul
aad
push
dec
xchg
inc
cwtl
push
mov
mov
xlat
popa
insb
iret
stos
test
dec
lret
push
int
push
mov
in
sahf
aas
push
cmc
fwait
mov
sub
leave
aad
roll
loop
add
dec
push
push
js
push
pop
adc
dec
in
xor
aad
xchg
push
scas
outsb
sub
push
out
jo
pusha
cltd
mov
enter
and
inc
fiaddl
xchg
xchg
lods
push
mov
inc
inc
mov
cmp
push
jl
movsb
cmp
push
mov
aas
rcrb
pop
fsubs
xor
bound
push
adc
xor
pop
stos
aam
test
fisttps
jmp
pop
fnstsw
stos
cld
pop
aas
repz
sub
jne
adc
xlat
fcoml
adc
inc
movsl
xchg
aad
or
fwait
or
fcmovnb
rcrb
into
lcall
sbb
stc
cld
lock
movsb
jno
xor
shl
dec
and
fcoml
sub
outsb
sub
clc
xor
or
jmp
adc
int
jmp
sbb
xchg
push
rcrl
rcrb
mov
repz
xchg
daa
cmp
lds
mov
js
pop
lods
test
ljmp
sbb
scas
into
ficompl
adc
push
inc
sbb
es
enter
js
xor
cltd
inc
roll
in
and
sub
data16
testb
fsts
sub
dec
adc
cmp
sbb
push
fcoml
fs
lret
or
mov
cmp
sbb
mov
movsl
arpl
or
mov
mov
xchg
and
cld
cltd
inc
add
mov
push
jle
dec
adc
inc
add
ss
xchg
mov
add
push
mov
es
out
mov
mov
adc
data16
dec
shlb
mov
in
jmp
jecxz
test
or
insl
cwtl
push
scas
mov
stos
xlat
jae
test
fidivs
push
jge
push
sbb
inc
loopne
ss
ficompl
out
popa
mov
test
xchg
sbb
mov
xlat
mov
mov
sarl
js
testb
sahf
dec
and
rcll
out
push
arpl
push
cli
lret
mov
adc
mov
pop
dec
and
clc
stos
jns
cltd
repnz
cmp
mov
adc
mov
dec
jecxz
jmp
xchg
ror
aas
cs
int3
mov
in
push
xlat
jo
addb
fld
xor
lahf
sarl
mov
inc
adc
sub
pop
cmp
sub
cmp
push
loop
popa
rol
sti
aas
and
dec
lock
push
ja
in
mov
imul
rcr
cmpsl
rcll
push
mov
mov
das
sub
sarb
xchg
into
movl
js
xchg
pop
fisubrl
jmp
dec
aaa
popf
mov
dec
sub
shll
jne
imul
adc
bound
arpl
bnd
mov
xchg
mov
push
jne
lret
out
int3
sub
xor
mov
int3
cmovne
add
sbb
jg
faddp
mov
mov
jmp
les
hlt
je
aas
add
fsubs
stos
pusha
repz
jp
mov
inc
cli
nop
out
cmp
ja
pop
cmp
test
adc
or
mov
icebp
sbb
fidivrs
sub
mov
xor
ret
add
into
push
mov
add
int3
jl,pt
sbb
mov
add
cmpps
lret
sub
cwtl
dec
mov
cltd
cmp
add
arpl
inc
mov
insb
fldenv
mov
popf
insl
inc
mov
ret
es
add
mov
sbb
orl
and
scas
mov
xchg
mov
out
jecxz
jmp
jl
cmp
icebp
lahf
mov
sub
fbstp
jg
dec
xor
arpl
bound
cmp
push
mov
imul
in
cmp
pushf
mov
add
pop
cwtl
sbb
clc
ret
int
pusha
mov
ljmp
xchg
and
shl
clc
daa
push
add
ss
xor
ds
mov
jle
popf
add
cmp
fstpl
push
outsl
test
sub
subl
xor
les
sub
mov
or
dec
sub
jmp
xchg
cmp
subb
out
jnp
inc
push
jle
daa
outsl
lds
pop
mov
fcmovbe
dec
jae
insb
inc
xchg
cli
fs
lahf
xor
mov
repnz
fcoml
test
push
aam
dec
aas
jne
arpl
ret
sahf
les
adc
sub
xchg
jb
ret
mov
repz
add
cmpl
pushf
pop
out
sub
adc
push
inc
mov
imul
stos
and
adc
in
sub
pop
xchg
filds
jl
out
inc
popf
jmp
mov
dec
dec
jge
and
les
mov
repnz
mov
pop
or
add
pop
jne
pusha
repnz
adc
pop
int
ss
push
pop
shrb
sub
cmpsb
mov
movsl
push
xchg
jge
dec
inc
xor
movsl
sub
dec
pop
jge
rorb
lods
imul
mov
and
outsl
lcall
xchg
mov
shll
ljmp
sub
imul
mov
rorl
inc
scas
cmpsb
cli
je
rol
out
addr16
add
pop
push
int3
je
xchg
fstpt
push
pop
sub
adc
push
fdivs
cmc
xor
or
xchg
add
xchg
or
mov
out
popf
nop
push
xor
and
popf
test
loop
in
testb
xchg
inc
adc
adc
jle
lea
jae
loope
cmp
clc
inc
pop
ss
in
pusha
jo
into
cmp
lock
jmp
push
mov
lock
rcrb
mov
xchg
xor
fnstenv
out
dec
sbb
loopne
in
xor
xchg
popf
sub
mov
leave
dec
dec
mov
sarl
imulb
add
pop
push
pop
les
push
xchg
mov
loop
inc
imul
imul
pop
xchg
rcr
loopne
jecxz
ret
cmpsb
sub
adc
push
call
xor
xor
xorb
mov
sbb
mov
pop
or
dec
aaa
jae
adc
xor
sti
sahf
aad
mov
cmp
xor
xor
adc
loop
lcall
jl
xchg
mov
bound
rcrb
lods
pop
frstor
push
mov
add
mov
pop
iret
sti
jne
or
fiaddl
pop
or
test
dec
mov
mov
xor
adc
xchg
stc
fdivr
pop
fsubr
leave
nop
add
cmp
into
dec
xor
leave
decl
fstl
or
hlt
mov
jnp
dec
rcll
orb
adcl
pop
repnz
jns
add
dec
xor
cs
loope
add
and
sti
jae
lahf
push
mov
jb
test
sbb
int3
cmp
xchg
loope
inc
inc
inc
xor
data16
pop
push
add
sahf
cwtl
popa
xorb
hlt
pop
test
mov
xor
in
jl
pop
xor
mov
jns
pop
pop
inc
js
pop
adc
insb
dec
mov
mov
stc
push
mov
leave
mov
gs
aas
clc
jbe
repnz
aas
gs
xor
fwait
jmp
adcl
call
push
lahf
orl
mov
xchg
sbb
sub
std
bound
xor
rorl
dec
inc
shr
push
xchg
jbe
jmp
push
setb
lea
iret
fcomps
mov
insl
xor
hlt
test
daa
rol
cli
es
test
cli
mov
int
mov
add
fwait
lret
adc
out
insl
dec
jmp
scas
cmp
enter
add
js
sub
rcll
jnp
data16
ret
faddl
add
movsl
dec
out
imul
pop
daa
xchg
rorb
jb
xchg
je
jb
xor
pop
inc
mov
je
cmp
andb
bound
fldt
mov
and
xor
ret
pop
das
pop
adc
in
popl
and
sbb
dec
loopne
pop
and
dec
jnp
pusha
cs
mov
fstpl
aas
adc
pop
mov
lahf
adc
jecxz
inc
mov
or
scas
jno
fistpll
or
push
pop
imul
scas
push
dec
fcomps
jo
xlat
repz
jle
out
inc
dec
sbb
cli
cltd
sub
xchg
ljmp
into
sti
pop
mov
jp
dec
add
mov
add
mov
jle
aaa
movsl
sub
cli
mov
jmp
pusha
jbe
out
dec
in
stos
iret
sbb
adc
adc
stos
in
jbe
out
inc
std
insl
addr16
jae
cmp
push
int
xchg
adcb
sub
decl
push
xor
xchg
pusha
dec
pusha
fmull
test
nop
sbb
push
adc
jle
nop
es
mov
inc
mov
mov
idivl
xadd
inc
fiadds
mov
nop
hlt
sbb
clc
or
loop
push
jge
jne
pusha
es
mov
pop
sbb
aas
mov
add
pop
fwait
jp
out
inc
test
rcll
out
shl
mov
fidivs
fdivr
lcall
std
push
mov
shll
scas
lods
fsubrp
adc
cwtl
shll
nop
repnz
jle
fs
stos
sbb
popa
stos
and
xor
jno
dec
mov
rcll
sbb
pushf
push
sub
pusha
lods
insb
loop
dec
cltd
stos
popf
jecxz
test
jnp
mov
or
push
adc
cmpl
das
cmpsb
dec
les
cmp
pop
fstps
cmc
sahf
cmp
jno
xchg
ret
lock
xchg
add
mov
stos
lods
idivb
ret
jl
sub
pop
fdivrs
pop
daa
jle
jo
pop
xchg
adc
lahf
push
mov
jecxz
cmp
or
sbb
jmp
xchg
mov
ud1
jno
sub
roll
lods
add
dec
jle
xchg
ret
pop
outsb
daa
lods
je
pop
repz
test
mov
mov
sub
gs
inc
sub
fbstp
sbb
jle
das
add
mov
ljmp
xchg
and
lods
mov
xor
xchg
popa
pop
sbb
pop
mov
jo
xchg
push
jbe
fwait
push
popa
push
ja
shrl
sub
jecxz
lock
lcall
and
push
mov
xlat
cmp
mov
adc
fiaddl
push
add
in
sbb
add
lcall
call
icebp
push
jmp
or
subb
xor
jbe
addr16
dec
cli
and
push
mov
loopne
jecxz
pop
pop
sarl
push
daa
rclb
dec
mov
xchg
xchg
push
sbb
pop
inc
pop
loope
testl
dec
xchg
cmpsb
ret
clc
aam
adc
leave
dec
sbbb
adc
xchg
mov
xchg
xchg
pop
loope
jp
clc
push
fld
in
jbe,pt
inc
fdivrs
lock
test
sti
xor
jae
mov
fnstenv
push
jecxz
push
jnp
mov
cs
push
imul
lods
mov
xlat
test
aad
xchg
out
dec
enter
cs
outsb
mov
pop
in
sbb
movsb
mov
xchg
add
xor
das
mov
push
in
mov
sub
pop
xchg
mov
add
and
stos
sub
adc
test
int
imul
scas
jne
fildl
inc
sbbb
mov
dec
insl
mov
jae
inc
xchg
push
add
push
popf
jmp
stos
cli
icebp
adc
pop
push
xor
lds
jnp
mov
jae
push
call
mov
push
fwait
outsl
jg
insb
nop
rclb
mov
mov
mov
fdivrs
fadds
xrelease
pop
shl
push
out
push
inc
inc
xor
inc
jle
repnz
mov
or
out
mov
sarl
gs
push
sbb
fxch
cmp
fnstsw
adc
lods
out
sub
sub
incb
push
lods
sbb
insb
dec
pop
ret
or
cmp
jae
dec
test
repz
pop
mov
jge
sub
nop
sub
mov
push
fdivrp
lock
dec
mov
imull
movsb
addb
xor
cmp
push
cmpsb
jbe
iret
push
add
sarb
cltd
cmp
into
sub
adc
enter
and
dec
pop
cmp
push
icebp
fldcw
or
push
in
addr16
cli
loope
stos
cmp
outsb
mov
cwtl
icebp
mov
push
push
pusha
jnp
je
mov
mov
mov
movsb
jno
or
mov
or
notb
add
aad
push
adc
ret
lcall
mov
lea
mov
cmp
int
dec
call
jnp
sbb
push
inc
jno
fcmovnu
or
subl
push
cli
aad
hlt
lret
scas
push
push
and
add
outsl
test
push
movsb
aas
push
push
fcom
mov
add
mov
dec
mov
sbb
dec
es
cmp
cmp
jge
or
push
sub
cmpsb
inc
ficoms
cmp
cmp
or
cmp
xorl
push
test
xor
and
sub
fbstp
jle
cmp
mov
or
jnp
jbe
mov
push
test
fiaddl
inc
in
mov
pop
adc
inc
push
js
subb
pop
sub
mov
jnp
inc
ljmp
add
adc
dec
sahf
in
out
out
icebp
inc
sbb
push
or
arpl
xchg
popf
adc
sub
ret
mov
mov
aam
sub
pop
shr
mov
fcomp
scas
adcl
inc
push
inc
mov
mov
dec
fbld
mov
mov
daa
fildl
mov
sbb
testl
ja
jmp
cmp
lock
je
or
lock
imul
or
mov
xor
jb
jo
xor
scas
call
mov
mov
insl
push
push
xor
std
lds
cmp
lods
cmp
data16
adc
in
sbb
icebp
adc
out
xchg
sub
cmp
inc
das
test
test
dec
jns
ror
jb
cmp
jns
movsb
insl
inc
xchg
arpl
fwait
or
push
push
push
mov
ficomps
pop
and
icebp
mov
xor
mov
es
inc
out
addr16
popf
fcompl
popa
cmp
jns
movsb
test
scas
pop
cwtl
fimull
adc
clc
push
cwtl
and
in
inc
fwait
jae
or
adc
cmp
aad
dec
add
mov
xor
sub
and
lret
sub
pop
push
into
fnstenv
sub
jge
dec
fstpl
fninit
jae
mov
imul
fsts
push
insl
push
mul
fwait
add
and
dec
push
cld
add
repz
call
mov
adc
sbb
mov
fildl
cli
dec
cmp
test
or
ljmp
mov
fsincos
xchg
lods
jb
mov
mov
add
xchg
pop
std
and
imul
lahf
scas
test
outsl
jne
push
dec
xchg
nop
popa
inc
adc
sub
sub
jp
pusha
in
test
incb
xchg
fmuls
test
rolb
loopne
mulb
xchg
pop
outsl
jae
out
adc
dec
xchg
popf
xlat
jecxz
xor
cmp
gs
pop
jp
rolb
popa
cmp
mov
sub
nop
test
sbb
movsb
bound
mov
xchg
add
sbb
int3
popf
inc
das
fwait
cmp
jmp
inc
mov
rol
mov
and
pusha
mov
div
fidivrl
sbb
mov
sbb
jl
je
lret
mov
pop
push
addl
repnz
cmp
jecxz
lea
cwtl
jge
xchg
sub
jecxz
stos
popa
push
push
push
or
jo
add
pop
or
add
push
addr16
add
aad
jp
cltd
push
dec
xchg
push
mov
out
incb
sbb
shlb
cmpsl
or
xor
adc
mov
iret
inc
or
mov
pop
sbb
cli
jns
fsubrl
inc
adc
testl
lea
push
test
ret
cmpsl
adc
jno
ds
cmp
sahf
xor
pop
or
imul
addr16
nop
dec
add
scas
add
imul
xchg
or
pusha
push
or
fsubp
imul
ficoms
pop
dec
hlt
mov
and
js
subl
sbb
xchg
iret
dec
dec
ss
fidivrs
adc
je
pop
pop
sbb
orb
std
sbb
or
cmpsl
mov
pop
sub
imul
cmpsl
mov
sub
cmc
inc
sbb
jno
lods
lret
xor
inc
mov
and
mov
cmpsb
loop
arpl
xchg
and
jecxz
mov
pop
clc
xchg
mov
adc
push
xor
inc
pop
push
jne
fucom
push
scas
aad
clc
jbe
and
or
in
mov
pop
out
addb
push
xor
sub
lock
decb
inc
jg
push
and
dec
mov
leave
das
xor
push
xchg
ror
sub
shll
repnz
jmp
divl
pusha
cld
in
lods
aaa
ficoml
hlt
popf
and
out
in
mov
adc
jge
pop
mov
mov
jg
inc
jg
rcr
lock
or
rorl
popw
mov
push
lret
inc
pop
addr16
or
push
es
pop
sub
stos
in
jo
or
inc
adc
nop
mov
scas
dec
or
sub
fsubp
sub
mov
daa
sahf
add
iret
inc
mov
mov
cs
push
ret
outsl
pop
fwait
jbe
cmp
xchg
lea
cmp
add
xor
jg
sti
sbb
and
sub
loop
xor
clc
insl
or
stc
mov
mov
adc
mov
shl
inc
xor
sbb
or
adc
pop
push
jne
sahf
in
adc
and
hlt
ljmp
fldt
sub
imul
adc
cwtl
bound
test
loop
popa
xchg
imul
movsl
cmp
ja
pusha
mov
pop
xchg
mov
xchg
subb
js
jl
pop
fs
mov
mov
and
xchg
shl
js
fiadds
pushf
test
std
jae
cmpsb
rcll
xor
psrld
data16
cli
out
dec
ja
pop
cmp
adc
out
mov
iret
adc
inc
jno
ljmp
test
and
push
or
pusha
push
mov
pop
lods
into
subl
mov
pop
push
dec
push
ror
sub
jno
idiv
movsb
sahf
cmpsb
sbb
jecxz
adc
adc
int3
daa
push
pop
xchg
and
orb
mov
test
out
pop
lods
and
jmp
mov
mov
push
xor
test
mov
call
and
orl
notl
loope,pn
mov
les
jo
jnp
jnp
push
cmp
movb
loopne
mov
xchg
pop
scas
jae
pop
push
xor
xlat
aaa
or
inc
rclb
add
jne
mov
adc
nop
sbb
cli
pop
jo
cli
jp
mov
ret
lock
mov
int3
outsb
jg
mov
and
fmull
loop
out
and
testb
stos
iret
out
out
pop
push
or
lods
cltd
xchg
fdivs
cmp
mov
imul
jge
or
fstl
icebp
sti
xor
movsl
push
rorl
jns
sbb
outsb
arpl
xor
sti
std
aam
fstpl
test
jmp
and
adc
jns
jp
sub
push
dec
fimuls
jns
mov
mov
push
inc
push
subl
mov
dec
adc
xchg
mov
sbb
bound
and
cmp
mov
out
arpl
xchg
nop
mov
cmp
xor
dec
jl
dec
out
jb
add
push
cmp
shrb
shll
lahf
cmpsl
jmp
inc
mov
out
in
pop
pop
aas
add
adc
dec
xchg
and
sub
pop
mov
jae
out
sbb
push
loopne
and
stos
rorb
inc
jmp
shrb
pop
mov
ffree
cmc
or
inc
adc
shrb
loopne
fxch
int
movsb
sub
push
mov
loopne
mov
out
out
enter
out
pcmpeqd
mov
push
lea
push
xor
call
push
in
aad
push
lods
dec
in
bound
adc
out
sub
and
cld
lods
fcmovnu
cltd
insb
sbb
test
out
arpl
das
mov
or
jbe
xorl
mov
aam
pop
movntq
out
scas
lods
lahf
in
mov
push
jmp
das
int
xchg
shlb
add
mov
mov
std
pushf
mov
scas
mov
mov
sbb
pop
and
lods
leave
mul
jle
push
mov
jns
and
clc
stos
xor
cmpl
in
pop
and
cmp
mov
lea
fldl
mov
daa
add
mov
cmpsl
faddl
adc
es
cld
adc
stc
dec
pop
inc
lods
js
shr
lock
fld
fdivrl
push
movsl
and
call
daa
fimull
sbb
mov
les
mov
xchg
lret
or
adc
push
add
mov
or
jp
xor
insb
add
xchg
jle
adc
mov
xchg
pop
cmpsb
pop
stos
sub
addr16
and
lods
sub
popa
sbb
es
loop
adc
add
sti
jns
in
push
mov
aaa
lock
cld
or
out
mov
jbe
insl
or
rorl
fcmovne
add
mov
xor
es
and
dec
sbb
insl
jl
add
sarl
lret
pand
or
fstpl
in
jmp
mov
fs
jnp
pop
sbb
and
subb
sbb
leave
jo
loop
push
or
fidivs
adc
ret
cmp
push
inc
fistps
mov
test
sbb
inc
fistpll
xchg
push
movsb
push
jmp
push
inc
cmp
mov
xlat
roll
xor
sbb
lods
fabs
sub
in
pushf
loope
adc
hlt
jmp
data16
leave
push
sahf
aam
rcl
jns
and
jmp
repz
or
push
pop
inc
inc
xor
loope
in
rcrb
xchg
sbb
aaa
push
imul
xchg
aaa
jnp
pop
sub
inc
mov
pushf
mov
hlt
pop
pop
in
mov
or
test
rcrl
pop
cmpsb
test
mulb
push
ss
and
lahf
xor
pop
mov
out
cltd
int
ja
lods
mov
pop
scas
in
push
stc
orb
ret
inc
cmp
xchg
ljmp
mov
jp
xor
jmp
pop
push
and
jo
pop
data16
out
shrl
int3
sub
test
inc
das
jg
call
pop
mov
ret
sbb
insl
jne
mov
pop
push
cmc
dec
mov
jecxz
sbb
dec
jmp
xchg
pop
ret
mov
jecxz
int
jmp
mov
fs
add
dec
aas
dec
adc
in
lods
ljmp
inc
outsl
dec
jnp
popf
lea
insb
push
test
dec
push
dec
repz
je
and
sahf
std
in
adc
lock
popf
sahf
cld
dec
sbb
sbb
adc
xchg
movsl
jnp
addl
xor
and
ja
xchg
adc
pop
daa
inc
mov
sbb
jmp
mov
jo
adc
xor
clc
cmpl
in
insb
xor
in
mov
shl
idiv
rcl
lock
pop
or
push
mov
aas
out
cltd
shlb
and
into
stc
sbb
and
sbb
cli
mov
push
jnp
xchg
dec
shl
jo
xchg
pop
xchg
sahf
xor
and
sbb
call
ret
mov
cmp
stos
or
dec
and
out
mov
lcall
sub
add
loope
lahf
inc
mov
in
testl
movl
das
in
notl
and
cmc
fstl
add
push
fwait
sahf
and
lods
pop
sub
cwtl
dec
rcll
push
mov
dec
sub
dec
test
test
pop
xor
jne
sub
movsl
stc
xchg
pop
testl
push
mov
movsb
cmp
pop
out
cmp
or
sub
xchg
mov
and
insl
ds
lods
outsl
dec
jo
aam
aam
push
sarl
mov
imull
adc
stc
pop
push
cmp
adc
xor
add
fsubrs
popf
and
jg
int3
lea
mov
mov
mov
imul
mov
iret
pop
je
movsl
dec
cmpsb
rclb
mov
andl
jns
pop
push
in
mov
pop
cld
mov
lock
cmp
rorl
pop
inc
mov
stc
sub
sbb
loop
jnp
and
outsb
icebp
mov
pushf
mov
jle
aas
mov
push
jns
mov
rcrl
mov
sahf
xchg
pop
shrl
int3
mov
xchg
and
push
add
mov
mov
ljmp
mov
outsb
dec
cmp
and
int
push
or
lret
xor
or
outsb
add
fisubs
imul
mov
lods
mov
pop
add
lret
xlat
jns
sub
dec
imul
pop
xor
insb
ja
lcall
aaa
clts
aad
inc
xor
js
scas
addb
and
mov
cmc
aam
cmp
decb
mov
in
sarb
divl
scas
pop
and
jno
push
pusha
lahf
int
add
dec
xlat
mov
add
int3
mov
lock
cli
repnz
dec
mov
test
sbb
or
mov
mov
push
addl
sbb
popa
dec
mov
sar
cmp
scas
fcmovnu
or
and
lods
ret
push
dec
xor
or
stos
cld
jae
xchg
fdivs
dec
sbb
imul
push
jb
stc
xchg
popa
adc
mov
cs
fiaddl
scas
cmpsl
adc
imul
fildll
pop
call
or
addb
add
push
pop
xor
mov
stc
loop
xor
add
sub
std
fdivs
nop
or
sbb
mov
testl
mov
sti
mov
lret
pop
ret
dec
inc
inc
pop
jl
dec
jge
popa
pop
adc
xlat
mov
pop
xor
inc
adc
add
je
inc
xor
lret
add
sub
cmp
jno
pop
fs
mov
imul
pop
xchg
sbb
push
or
movsb
cld
jb
addl
out
les
sbb
loop,pn
inc
pop
xor
cmp
jno
xor
mov
push
lock
inc
dec
mov
jmp
jo,pt
mov
mov
mov
shrl
xor
rcrb
movsl
shrl
lods
xchg
xchg
push
add
xchg
mov
mov
in
pop
fmull
ret
fistpll
add
sbb
or
jecxz
mov
mov
stos
pop
roll
lock
mov
mov
addb
push
test
imul
mov
mov
scas
lock
inc
mov
mov
add
mov
sub
xor
in
sbb
outsl
mov
mov
icebp
pop
cmp
adcb
pop
incl
pop
sub
stos
mov
test
push
inc
mov
fdivl
xor
not
test
push
mov
xchg
shl
dec
scas
or
mov
pop
cmc
insb
icebp
push
adc
lret
sub
mov
cmp
jle
in
jle
add
or
pop
jne
movsb
push
shlb
sbb
xor
lods
shlb
fcoml
jns
add
lods
cmpsl
orl
nop
in
out
loopne
fmull
and
sbb
xor
not
sbb
cmp
sub
sbb
jns
jecxz
and
sub
jp
mov
dec
lods
push
xor
sub
jno
sub
mov
ja
cld
dec
mov
mov
cwtl
jns
mov
repz
xor
adc
inc
test
jno
mov
mov
outsb
cli
and
outsb
sbb
gs
enter
dec
fwait
into
mov
mov
mov
shlb
dec
sbb
ficoml
xchg
mov
cmp
sub
adc
pop
dec
pop
mov
fadd
jns
cltd
push
shrl
add
pop
xor
aaa
push
mov
movsb
dec
clc
and
cmp
xor
enter
xchg
lods
dec
mov
sub
sbb
repz
pushf
cmp
movsb
fnstenv
or
jo
push
cwtl
jbe
sti
dec
push
bound
pop
add
js
pop
xchg
xchg
test
mov
loopne
jg
jbe
fwait
iret
pushf
bnd
popa
ffree
loopne
push
pop
jns
sub
inc
mov
sbb
xchg
sbb
sahf
add
ss
out
adc
aam
pop
jns
dec
push
sub
or
xchg
xor
pop
jg
and
pop
inc
jo
pop
dec
mov
xchg
push
xor
sub
push
xor
sahf
and
inc
mov
and
pop
popa
push
mov
adc
int3
xchg
push
in
push
test
in
add
mov
mov
xchg
add
sqrtps
orl
popf
lahf
sbb
js
xor
jecxz
xchg
cmpps
idivb
jmp
xorb
push
test
daa
push
in
rol
jnp
jecxz
push
neg
mov
fistl
mov
cld
fcomps
xchg
rorl
push
inc
nop
push
jmp
in
fs
lods
inc
push
ficoml
sbb
enter
cvtpi2ps
adc
out
add
and
xchg
jmp
int3
clc
cwtl
cmp
dec
sti
bound
neg
mov
leave
pop
cld
shrl
in
aaa
jle
testb
jg
arpl
xchg
push
gs
inc
in
call
or
push
subl
pop
enter
outsl
cmp
movsb
adc
incl
adc
xchg
lret
rcll
dec
inc
es
stc
mov
cltd
push
aaa
sub
push
xchg
sbb
cmp
pop
and
mov
inc
je
cmp
cvtps2pi
push
stos
sub
les
xchg
not
iret
push
dec
imul
pop
push
mov
je,pn
inc
shll
and
jae
aad
std
mov
push
add
ret
popa
int3
mov
push
andb
push
popa
add
andl
mov
adc
sbb
lret
repnz
dec
testb
dec
enter
mov
loopne
leave
add
push
test
sbb
dec
dec
pop
mov
flds
std
pop
aaa
cmc
xchg
jnp
mov
mov
aam
pop
icebp
jne
cmpsl
data16
pmulhw
arpl
aaa
inc
pop
and
or
in
lea
jecxz
mov
lods
repnz
mov
fcmovnbe
pop
repnz
pop
in
cmpl
mov
xor
adc
lcall
lea
std
adc
dec
into
or
inc
loopne
jp
cs
test
dec
fmul
fwait
mov
xor
dec
mov
lds
loop
testb
xorl
paddb
test
fnstenv
testl
mov
fldl
lods
ret
push
gs
jecxz
gs
dec
fwait
push
jmp
sarl
add
cmp
mov
ljmp
lret
add
mov
dec
popf
xor
mov
out
mov
fisubs
xchg
in
inc
test
popl
push
jl
ret
imul
cltd
je
push
dec
mov
jo
mov
int
mov
bnd
leave
pop
inc
push
and
add
xor
scas
sbb
fimull
xchg
dec
addr16
int3
sbb
outsl
mov
push
mov
dec
lock
enter
xchg
xchg
dec
and
repz
fiadds
shl
arpl
aas
cmpsb
inc
mov
js
push
lret
inc
xchg
sbb
mov
sbb
cmp
xor
rcl
mov
cmp
das
push
mov
or
mov
notb
xor
mov
out
int3
add
negl
sarl
adc
push
aas
sbb
pop
pushf
jle
aas
push
and
outsl
outsb
inc
inc
lds
aam
jbe
push
cli
rcrl
in
mov
arpl
outsl
adc
inc
cltd
hlt
int
and
out
jnp
sbb
notl
hlt
mov
adc
cmovnp
pushf
mov
jge
cltd
mov
cltd
or
lret
mov
cmp
loope
jns
fldl
pop
add
pop
inc
outsb
push
out
mov
cs
fadds
into
das
stc
xor
add
inc
mov
enter
push
popf
outsb
subb
sbb
rclb
push
fucomi
and
pusha
jns
inc
sarl
mov
clc
testl
cmpsl
imul
mov
mov
dec
pop
and
loope
in
int
out
jbe
cmp
push
pop
mov
stos
in
je
shlb
jbe
push
mov
mov
in
sub
mov
pop
pop
inc
inc
mov
cltd
test
mov
arpl
push
arpl
jl
mov
loop
add
mov
cmpsl
push
fidivrs
out
xorb
dec
xchg
cmp
cmpsl
outsl
loopne
and
rorb
stos
sbb
sahf
scas
cmp
scas
sahf
push
insl
sub
hlt
xor
ja
test
movsb
fwait
mov
enter
neg
mov
mov
dec
jns
mov
pop
aas
mov
xor
mov
mov
lret
movsl
sub
sub
hlt
and
inc
cmp
sar
jmp
jg
inc
pop
jmp
jno
stos
out
int
fiadds
out
sbb
sub
push
sbb
ljmp
or
int
scas
xchg
push
lcall
mov
test
ss
addr16
mov
lds
adc
and
jecxz
adc
dec
out
sub
fadds
jne
pop
cltd
insl
movl
dec
pop
sahf
add
test
mov
jbe
mov
loope
mov
outsb
mov
mov
add
mov
in
push
andb
imul
cmp
xchg
xor
jb
and
arpl
repnz
mov
jge
jle
cwtl
das
dec
es
xlat
ss
lahf
mov
or
mov
dec
mov
into
pop
nop
push
movsb
daa
dec
je
push
dec
lods
xchg
sbb
mov
push
dec
cwtl
cwtl
mov
fnsave
adc
pop
sub
xchg
pop
sub
push
stos
jne
mov
jmp
imull
pushf
pop
mov
or
mov
arpl
xchg
addr16
fnstcw
mov
xchg
pop
mov
fs
jle
int
sub
in
pop
out
jl
mov
or
pushl
mov
xor
gs
decl
push
sarl
dec
clc
aam
mov
fmul
in
xchg
rcl
fdivr
add
pushf
push
cltd
add
fnsave
jge
mov
stc
xor
or
mov
mov
or
insl
dec
cli
mov
push
mov
out
sub
iret
mov
fdivr
dec
mov
add
ret
push
add
in
xor
insb
sahf
pop
mov
ds
pusha
mov
jl
dec
lods
inc
mov
imul
xor
lcall
and
xor
ret
xchg
test
xlat
cmc
dec
sbb
xchg
lret
cmp
jp
fisubrl
negl
xchg
jmp
nop
mov
lret
jae
mov
aaa
pop
hlt
sub
je
out
mov
mov
adc
out
jge
jmp
pop
sub
sub
xchg
insb
enter
push
adc
adc
testl
jnp
aas
xor
hlt
js
xchg
mov
subb
xor
out
ret
cmp
lods
fs
outsl
push
dec
add
pop
pusha
jmp
mov
mov
dec
cwtl
lret
sbb
nop
inc
lcall
mov
sbb
inc
imul
dec
mov
sub
lret
cmp
sub
stos
jmp
stos
insb
adc
lret
outsb
dec
mov
push
jp
jb
orb
xor
xchg
push
outsb
mov
daa
cli
lock
xchg
mov
push
scas
in
mov
fbld
mov
aam
or
dec
pop
xor
test
and
sahf
and
add
out
lahf
cmp
mov
je
addr16
scas
pop
shll
sbb
rorl
aaa
fs
dec
in
push
mov
push
pop
inc
pop
lods
sbb
inc
xchg
lock
push
xchg
sbb
jg
nop
test
and
sub
loope
pop
test
stc
pop
mov
mov
mov
pop
fcmovu
mov
xchg
sub
pop
mov
popl
fisttpl
inc
or
lods
movsb
scas
into
imul
imul
fists
hlt
xchg
lret
scas
insb
xchg
mov
adc
stos
mov
out
mov
mov
cwtl
loope
das
inc
fildll
mov
imul
cmp
sarb
mov
loope
pop
push
jp
jp
xor
and
cmc
nop
sub
aaa
xor
movsb
jnp
mul
mov
test
pushf
ficompl
rcl
aas
sbb
movsl
mov
iret
shll
or
dec
ja
lods
addl
adc
cmpsl
mov
adc
sub
mov
and
mov
push
sbb
mov
adc
xchg
pop
pop
loopne
push
jnp
icebp
loop
inc
sti
pop
fstpt
mov
cmp
cltd
shlb
stc
loope
testl
xchg
lcall
pushf
pop
jmp
stos
idivl
dec
cld
cmpsl
lret
aas
sti
sti
pop
pop
loopew
xchg
ss
inc
jns
xchg
or
jbe
sarl
lret
xchg
xchg
sbb
imul
inc
xor
or
sub
dec
fisubl
popf
inc
mov
pop
insb
xchg
mov
cli
push
sub
push
mov
in
mov
push
into
inc
sbb
imul
adc
lahf
inc
or
pusha
nop
ud0
adc
xchg
xchg
ja
cmp
loopne
loop
out
outsl
sbb
testb
or
fistl
inc
jae
shrl
pop
inc
mov
dec
rol
inc
pop
loop
sbb
xchg
popf
or
lret
js
movb
loop
xchg
out
cmpb
gs
fildl
push
cmp
hlt
jge
sub
mov
addr16
sbbb
add
or
inc
jle
xchg
inc
pushf
dec
pushf
cmp
into
fcomi
call
jecxz
jecxz
inc
aas
fsubp
and
pop
testl
cmp
jmp
xchg
sbb
or
sbb
cmp
sub
scas
mov
pop
or
adc
inc
fdiv
pop
out
dec
cmp
imul
inc
mov
nop
pop
or
ss
insl
jno
mov
cwtl
arpl
lret
int3
inc
repnz
or
inc
and
xlat
sti
mov
cli
scas
sbb
je
inc
and
mov
sbb
xlat
fsub
outsl
notb
inc
xchg
fdiv
fistl
enter
push
sub
inc
loop
mov
hlt
xor
fildl
xor
out
pop
testb
stos
fidivs
negb
jp
dec
imul
cmp
addr16
adc
xchg
and
fdiv
xchg
xor
add
xchg
sub
jns
repnz
rorb
xchg
cwtl
sbb
ds
imul
insl
scas
sarb
adc
int3
adcb
xor
cmp
add
sbb
pop
jecxz
inc
xor
int
jnp
fdiv
push
int3
aad
mov
bound
sti
mov
jns
or
xor
js
lock
stc
xchg
in
pop
pop
dec
add
je
push
fsubl
sbb
aaa
xor
jne
pusha
test
mov
jnp
push
adc
aam
cmpsb
jnp
add
or
push
jo
cmp
movsl
rcll
sub
add
mov
adc
push
mov
addb
psubsw
mov
orb
mov
sbb
jg
out
stos
addl
dec
loope
je
das
test
push
aas
lods
out
arpl
lods
mov
xchg
add
cmp
imul
in
jp
pop
scas
fstps
xlat
mov
pop
xchg
and
sbb
fsubr
cld
sub
sub
add
loope
daa
cld
push
mov
ret
jecxz
leave
cmpsl
adc
ret
lcall
mov
and
repz
cmp
xchg
cmp
shr
scas
lahf
icebp
icebp
mov
lret
mov
and
or
mov
cmp
fstpl
scas
cld
adc
nop
mov
cli
push
cmp
popaw
pop
sub
aaa
dec
in
inc
js
push
and
or
stos
outsb
inc
pop
cmp
sub
fildll
in
mov
jno
pusha
fxam
push
cmpsb
add
outsb
cmpsl
jp
mov
and
add
pop
sub
pop
lret
and
movsl
movsb
enter
xchg
sub
xchg
mov
xchg
adc
cmp
mov
or
stc
fimull
es
fdivs
outsl
cmpsl
sub
enter
repz
xchg
in
fsubr
inc
mov
mov
in
inc
jno
fsubrl
or
dec
lods
in
sti
imul
fisubl
mov
movsb
fidivrs
pushf
cmp
pop
js
int
lret
xchg
cmc
fsubs
sbb
lcall
jp
in
clc
and
mov
out
mov
call
mull
shrb
mov
dec
jae
jmp
hlt
popa
outsl
mov
scas
and
mov
mov
and
xor
mov
das
lds
inc
mov
mov
les
inc
ret
cwtl
jne
fidivrs
push
mov
xchg
stc
roll
dec
rorb
lret
popa
mov
jae
test
sbb
mov
fs
xor
xor
leave
mov
add
xchg
or
mov
bound
fwait
dec
add
mov
nop
icebp
lcall
popa
stos
daa
test
jl
push
and
push
imul
test
mov
clc
mov
mov
xor
lret
test
adc
adc
cmp
enter
test
push
cmp
test
ret
jp
or
push
repz
adc
inc
lds
in
je
jns
mov
or
push
dec
mov
dec
fisttps
fidivrl
out
mov
cmp
jbe
jno
pop
and
imul
sbb
adc
imul
popa
scas
call
loope
inc
jle
jae
and
add
mov
repnz
push
lahf
out
lea
xchg
gs
sbb
jbe
push
push
les
cmp
pop
pop
rol
mov
adc
jo
fcomi
repnz
inc
push
into
jmp
push
jle
sbb
in
and
xchg
cmc
mov
pusha
xor
xchg
cld
push
sti
ja
push
xchg
xchg
rcr
adc
dec
adc
jnp
aam
add
xchg
xchg
ljmp
cwtl
enter
outsb
inc
adc
push
pop
pushf
mov
arpl
movsl
jecxz
inc
js
fsts
lods
push
add
push
aam
mov
push
out
xchg
fisubs
dec
mov
std
adcb
lret
mov
in
sbb
xchg
cmpsl
je
popf
mov
xchg
xchg
out
inc
cmp
xor
mov
out
in
inc
ja
push
sbb
mov
jnp
stos
adc
adc
dec
cwtl
pop
rcrb
rclb
jns
sarl
fbld
jle
jg
outsl
mov
cmp
shl
mov
ja
mov
pushf
clc
insb
mov
jmp
lods
cmp
daa
jl
ficompl
data16
lods
cmp
stos
pushf
scas
xor
xor
push
sti
shlb
sbb
inc
jl
scas
jp
xchg
sbb
inc
scas
call
arpl
mov
fcmovnbe
aad
pop
mov
mov
mov
push
push
xchg
inc
pop
test
enter
jp
test
dec
dec
xor
dec
mov
push
sub
stc
mov
pop
cmp
out
popf
push
mov
sub
sub
ss
sub
pop
test
lods
xchg
mov
inc
lea
jp
mov
xor
ljmp
fwait
stos
adc
insl
punpckhbw
jle
dec
sub
jno
mov
mov
pop
inc
pop
push
shll
lret
cmp
cld
mov
mov
sub
lods
mov
js
mov
xor
jb
cli
movsb
repz
es
test
das
loop
inc
push
and
movsl
mov
test
ja
push
call
adc
mov
loope
scas
sarl
mov
pop
loope
xor
scas
dec
fmull
push
jecxz
cmpsb
dec
fdivr
daa
movsl
mov
dec
xchg
fs
push
ret
adc
stos
cmpsl
movsl
pop
into
data16
adc
jne
xchg
aam
dec
leave
xor
and
std
call
sub
adc
inc
arpl
rcrl
ja
xor
adcb
iret
add
int3
je
jecxz
push
pushf
push
mov
and
div
int3
js
pop
push
fdivp
inc
ja
sbb
js
xlat
xor
cli
arpl
fs
popa
xlat
out
repnz
xor
or
ds
and
out
call
adc
lds
lods
and
dec
sub
sub
push
or
mov
inc
stos
pop
and
jnp
movsb
test
ljmp
loope
push
lock
popa
into
out
jl
cmp
hlt
xchg
and
nop
or
adc
fists
int
add
addb
call
xor
mov
sub
cmc
cmpsb
popf
ret
aas
and
pop
mov
mov
stos
sahf
fucom
cbtw
sub
in
sahf
out
push
repz
add
dec
lods
lret
icebp
out
adc
jno
pop
cltd
cmp
mov
jo
jns
add
mov
out
mov
xor
cmp
push
and
mov
sti
leave
fdiv
or
sub
cmp
fsubs
xor
push
jo,pn
mov
scas
add
jg
sub
sbb
cmp
push
cmp
jae
out
mov
rcll
dec
mov
push
andb
out
lea
or
inc
push
popf
fidivs
lock
sbb
fisubl
daa
fisubs
xchg
bound
cmp
jle
int3
repnz
xlat
fdivp
inc
int3
enter
fisttps
shl
jbe
cmp
mov
add
sbb
mov
jno
pop
sbb
call
cmp
out
add
popa
mov
sbb
lret
pop
push
add
xor
sbb
sub
js
out
or
test
sub
ja
fwait
daa
sti
push
shrb
mov
adc
inc
and
repnz
insl
xchg
out
out
jo
mov
shll
mov
and
push
adc
push
sbb
add
pushf
pusha
and
push
or
inc
push
add
jo
xchg
mov
and
mov
cmc
aad
mov
mov
pop
dec
inc
mov
add
jbe
sub
jg
pushf
jecxz
outsb
inc
cmp
lds
sahf
lock
shl
nop
ljmp
sub
and
and
and
jns
arpl
push
stos
xchg
ljmp
iret
xchg
subb
jnp
lock
out
jne
daa
xor
adc
inc
arpl
gs
xchg
cld
mov
nop
or
leave
movsl
adc
or
add
inc
xor
ficompl
mov
aas
dec
inc
bswap
ss
aam
sbb
jnp
dec
mov
pop
and
push
mov
jnp
mov
xor
push
mov
and
cmc
push
pushf
ret
dec
aaa
sub
mov
ret
mov
inc
call
dec
xor
add
lods
pushf
iret
and
cmp
fdivrs
xchg
lahf
mov
mov
nop
call
es
shrl
insl
fstpt
mov
mov
loopne
fisttpll
scas
jmp
mov
je
dec
inc
pushf
cmp
xchg
or
cwtl
subl
and
fwait
icebp
into
and
sub
sub
std
mov
loop
jl
fstps
fwait
call
loop
jl
sbb
add
ljmp
adc
add
adc
mov
mov
adc
mov
enter
sbb
jle
ja
cltd
popf
sub
ds
mov
int3
xor
aam
jp
out
mov
shll
negb
lea
mov
js
dec
loope
push
gs
jb
fnstcw
scas
or
cwtl
jb
bswap
dec
mov
imul
add
popl
ret
ss
mov
mov
sbb
jno
or
cmpb
dec
xchg
cmp
lret
sub
adc
dec
data16
push
les
aas
jle
aaa
inc
jbe
ds
cmp
rcrl
xor
inc
jg
add
xlat
imulb
and
aad
xchg
lret
mov
ljmp
sub
pop
les
in
negl
imul
test
pop
mov
lret
fstps
mov
xchg
xchg
decl
sub
and
iret
ret
mov
xchg
cld
lea
movl
add
mov
cltd
cmc
nop
gs
adc
ds
push
je
and
test
xchg
push
or
and
mov
pop
lret
faddl
call
jle
sbb
cli
inc
cmpsb
out
pop
fs
es
mov
mov
push
icebp
iret
mov
jecxz
popf
xchg
cmp
jbe
push
adcl
bound
insb
jmp
js
and
dec
or
jmp
xchg
popf
mov
add
or
add
and
pop
push
mov
or
aam
js
push
pop
sub
div
mov
pushf
ja
and
lods
arpl
je
sbb
dec
lcall
jne
push
lea
or
xchg
insl
cmp
repz
jns
push
lods
dec
dec
sbbb
stos
or
cmp
cs
mov
mov
inc
in
daa
dec
sub
push
pop
movsl
int
push
cli
and
aas
push
mov
pusha
std
and
cltd
mov
push
pop
mov
inc
lock
out
push
lcall
lahf
int3
das
xchg
test
popf
mov
dec
cmp
mov
xchg
ret
sahf
push
fsubs
push
int
aad
into
xor
je
call
iret
shrb
je
xlat
mov
xchg
mov
inc
dec
inc
movsl
xor
std
test
and
xchg
jmp
fsubrl
stos
ss
push
xor
pop
jmp
addr16
cmp
out
int3
or
mov
arpl
mov
jg
mov
mov
decl
mov
push
in
scas
mov
fsubl
in
xlat
cmp
mov
cmpsl
add
xor
xchg
jae
mov
xchg
pusha
adc
pusha
arpl
ret
jo
dec
adc
gs
movsl
mov
dec
lods
or
cmp
pop
inc
push
add
dec
shrb
cmc
mov
jmp
popa
push
jo
ret
leave
push
mov
lds
dec
scas
in
rol
femms
pusha
mov
aas
lods
lods
push
jle
sub
ret
adc
mov
pop
dec
sub
mov
sbb
pop
adc
loopne
sahf
mov
std
insl
and
das
xchg
int3
push
xchg
jne
jbe
lods
sbb
flds
push
mov
outsl
test
sahf
cmp
dec
fstpl
jne
out
hlt
add
sbb
sub
lcall
xchg
adc
push
jae
fcmovnbe
sbb
rclb
outsb
jb
enter
rcrb
out
fstps
sub
jb
sbb
aaa
shlb
stos
int3
scas
mov
mov
andb
xlat
inc
pop
roll
jmp
aam
lcall
jns,pn
push
dec
xor
add
adc
test
enter
mov
popf
sub
ret
ret
jno
into
and
repz
add
mov
adc
add
sub
stos
pusha
ljmp
stc
imul
mov
add
or
sub
in
mov
add
shl
or
shlb
inc
and
mov
xlat
fidivl
insl
pop
aam
mov
adc
xchg
and
add
inc
pop
les
pop
jae
fsubrl
adc
push
or
sub
scas
push
lret
lock
ret
push
lret
gs
mov
mov
mov
shrb
pushf
push
imul
sbb
ja
or
into
ljmp
mov
aam
js
cmp
cld
cmp
cmp
mov
inc
aam
ljmp
repz
popa
mov
iret
daa
xchg
sub
idivl
out
inc
push
push
hlt
dec
in
sub
scas
xchg
fidivl
or
mov
push
cmovb
sub
cmovs
into
clc
leave
or
add
adc
and
daa
clc
leave
dec
je
popa
pop
loop
xchg
push
mov
inc
and
arpl
cmp
in
inc
lock
cld
shl
je
lods
push
scas
fstpt
ljmp
mov
push
push
pop
out
cmc
push
xchg
mov
sti
jle
ss
pop
test
mov
adc
out
lods
popf
cmp
mov
and
pop
daa
ss
notb
add
cmp
inc
adc
and
insb
mov
inc
stos
inc
xlat
xchg
adc
jmp
cmp
out
or
out
mov
aam
or
lret
clc
ss
cltd
int3
lcall
hlt
adc
and
pusha
aaa
cmpsb
push
jl
out
mov
mov
cltd
fcomip
rclb
pop
mov
ret
mov
xlat
mov
sbb
push
mov
xchg
frstor
orb
mov
sub
xchg
sbb
jo
xor
add
ret
in
testb
insl
jg
push
call
or
jne
js
jae
sbb
inc
lret
inc
xor
pop
push
mov
mov
sub
out
pop
ficompl
cld
mov
lock
adc
push
mov
inc
fmuls
jns
push
popf
or
mulb
daa
add
mov
jl
or
sbb
or
aaa
mov
inc
repnz
mov
insb
aad
jp
xor
imul
test
mov
jae
fldcw
pop
pop
repnz
or
xchg
cli
cmc
aas
cwtl
sbb
lock
test
jbe
and
cs
jp
pop
loop
add
or
xor
mov
mov
jle
cmc
in
jmp
test
dec
sub
xchg
test
fimull
jnp
aad
in
ret
repz
pop
inc
jg
mov
mov
push
lods
and
xchg
or
xlat
mov
and
int
push
repnz
pop
fsubrs
pop
in
xchg
inc
adc
scas
loopne
and
out
pop
jae
mov
and
fwait
cmpsl
rcll
enter
mov
sbb
cmp
push
out
pop
push
adc
push
inc
sub
int3
hlt
sbb
pop
rorl
add
out
test
repnz
ja
or
push
xchg
or
pop
cmp
pop
hlt
push
mov
add
std
push
cld
lret
gs
and
dec
xchg
clc
inc
xlat
imul
cld
xor
mov
dec
xor
jbe
adcl
in
jge
cmp
xchg
add
adc
xor
pop
lds
jg
push
pop
les
jb
pushf
or
ljmp
scas
sahf
jne
scas
fucompp
icebp
enter
insw
scas
ds
mov
faddp
xchg
shr
push
sti
lret
mov
sub
outsb
sbb
loop
add
test
hlt
imul
outsl
mov
popf
mov
hlt
les
mov
push
test
add
in
mov
imul
int
popa
inc
icebp
xchg
dec
out
jns
dec
mov
sahf
divps
leave
in
dec
sbb
jle
addr16
test
mov
sbb
cmpsb
adc
mov
hlt
aad
data16
les
cltd
pop
adc
sub
adcl
addr16
or
jnp
int
push
outsb
orb
ficomps
ficoml
lahf
sbb
xchg
jecxz
lret
cmpsl
xor
stos
in
add
ss
shrb
js
jp
jge
sbb
es
fistpl
repnz
add
data16
in
xor
aas
mov
xor
mov
testl
imul
inc
inc
xor
ds
into
insl
mov
or
inc
ja
sbb
xorb
fnstenv
lds
mov
fnstenv
jbe
jle
lock
sub
arpl
jmp
or
lods
addr16
cld
mov
hlt
mov
mov
int
jecxz
jne
mov
outsl
shr
ret
push
mov
sub
das
mov
aas
les
sub
in
push
mov
jecxz
rcrb
andl
sbb
call
adc
push
rorl
xchg
dec
inc
outsb
out
push
out
notl
mov
call
mov
lret
test
mov
mov
call
mov
cli
stc
add
pop
mov
cmp
xchg
add
pop
cmp
jg
das
push
push
xchg
sti
sbbb
insl
sub
aad
sub
xor
cli
mov
jbe
push
ret
push
adc
mov
sarb
sbb
outsl
cmpsl
adc
pusha
jge
dec
in
pop
fbstp
in
jno
std
enter
aas
jmp
cmc
stos
movsl
iret
adc
jae
xchg
xor
xor
shlb
dec
jl
mov
dec
sbb
repnz
loopne
inc
pushf
add
lods
push
or
outsl
test
pop
and
ret
mov
pop
scas
xchg
adc
sbb
lahf
lahf
sbb
or
sbb
je
push
mov
sub
add
sar
rcr
inc
adc
sub
sbb
sub
sbb
inc
jnp
adc
push
lcall
pop
pop
js
insb
out
test
nop
les
inc
mov
dec
or
sub
sbb
sbb
mov
sub
orps
hlt
out
sbb
enter
fwait
mov
xor
add
sub
insb
fldt
adc
fs
add
jecxz
data16
and
mov
dec
mov
fldl
pop
add
cmp
adc
xor
je
enter
jge
out
sub
mov
fldl
pop
add
mov
or
dec
movsl
sbb
loop
repnz
sub
inc
cmc
and
mov
cwtl
lcall
adc
adc
mov
gs
push
pop
xchg
std
or
push
or
js
in
insb
xchg
aas
xor
adc
cmp
pop
mov
mov
aad
pop
sbb
lock
aaa
dec
gs
mov
lea
cmp
mov
aas
out
or
andb
inc
and
scas
dec
pop
mov
ds
and
sbb
xor
fcmovb
sbb
subb
pop
cmp
sub
xor
sbb
sub
dec
or
enter
es
cmp
xor
stos
ret
sbb
sti
into
dec
xchg
xchg
xchg
cld
dec
dec
add
push
cmp
hlt
or
aam
in
dec
mov
das
outsl
aaa
adc
dec
inc
push
js
cld
aad
pop
repnz
adc
outsl
mov
sub
fwait
lock
dec
fs
mov
popa
cmp
stos
int
in
sahf
iret
jle
in
int
fisubl
loopne
pushf
sahf
xor
clc
cmp
xchg
call
fcompl
xchg
and
negb
out
stc
xchg
dec
xlat
enter
ret
and
sbb
mov
inc
in
push
or
hlt
lock
ja
lods
cmc
and
mov
push
ja
sti
sbb
imul
jl
bound
js
shll
xlat
ljmp
mov
xchg
and
or
pop
fists
clc
enter
and
std
insb
sub
or
arpl
fisubl
mov
mov
stos
pop
out
sub
jmp
js
dec
int
ja
lret
mov
dec
xor
add
fcmovne
inc
daa
or
outsb
loope
leave
scas
add
add
and
adc
mov
mov
mov
insl
sub
sub
jb
jecxz
ret
and
jmp
cmpsl
xor
int3
outsl
pop
outsb
pop
lahf
cmp
sbb
push
mov
sub
das
push
mov
pop
and
lods
add
or
dec
mov
jo
push
xchg
adc
rcr
push
fwait
rorl
cmp
xor
sbb
in
add
mov
xchg
test
mov
xchg
mov
lods
and
push
dec
mov
push
es
or
imul
stc
ja
inc
out
insl
cmpsb
cmp
imul
movl
repnz
lret
cmpb
shlb
cmp
sar
xchg
iret
fisubs
pop
mov
stos
xlat
stos
jle
fsts
adc
xchg
fsubl
sbb
test
sbb
or
push
out
xchg
ja
sbb
pop
mov
insb
movsb
repnz
aaa
dec
int
or
dec
mov
adc
pop
fstl
outsb
popa
pushf
dec
mov
inc
adc
lods
bound
shll
adc
xchg
and
mov
mov
call
xchg
push
jbe
in
fnstenv
ret
sub
add
push
jnp
in
push
bound
insb
xchg
push
mov
mov
leave
jbe
jne
pop
movsb
movsb
scas
jl
mov
addr16
in
push
out
lds
fsts
test
dec
push
lret
cmp
aad
cmpsb
mov
int
inc
in
loope
cmpsl
mov
dec
les
push
push
push
leave
test
adc
es
stos
add
or
rclb
adc
lret
mov
out
loop
stos
pop
jl
or
lods
sbbl
or
loope
lods
cli
pop
pop
cltd
jns
and
les
inc
in
jne
xchg
cmp
lods
push
incb
sub
push
sbb
cmpsb
popf
cmpsb
push
fcoml
jb
jmp
test
xchg
popa
cmc
and
dec
or
xor
dec
mov
mov
ja
sub
mov
shll
pop
push
cli
repz
adc
dec
jo
mov
in
mov
fdivs
ret
test
cwtl
iret
int
pop
mov
sbb
pop
cli
int3
inc
xchg
hlt
jnp
push
lahf
add
ljmp
and
push
mov
mov
imul
jmp
mov
lds
adc
mov
in
jg
or
out
adc
push
adc
mov
cld
cmpsb
push
dec
mov
pop
xchg
lds
test
add
sbb
jge
sarb
imul
rclw
push
jne
aas
inc
addr16
dec
or
pop
fnstsw
scas
sbb
insl
fsub
push
fildl
inc
addr16
mov
inc
jg
push
push
push
sbb
inc
xchg
out
xchg
inc
leave
pushf
sahf
add
sub
fmul
cmp
ficompl
mov
aad
pop
shlb
cmpsb
cmp
imul
pop
in
rcrb
lods
fisttpl
and
xchg
push
pop
in
jnp
lock
std
jb
aad
lock
scas
fidivl
pop
mov
stos
mov
jo
add
cmp
inc
neg
imul
in
mov
popa
enter
jnp
stc
ljmp
dec
pusha
lods
cmp
adc
mov
jmp
jp
lret
int3
scas
pop
ja
cmp
or
fwait
daa
mov
jae
mov
cmpsl
sahf
inc
out
mov
mov
out
and
cwtl
mov
int
adc
cs
pop
inc
push
cmp
mov
shll
add
mov
lea
xchg
stos
and
scas
lret
adc
faddl
mov
dec
xor
xchg
xor
pop
fisubl
out
mov
leave
dec
jmp
pop
xchg
cltd
loope
xor
fs
sti
test
xor
or
and
ror
cmpsl
mov
lretw
dec
scas
mov
test
sbb
mov
lds
out
sbb
popf
mov
scas
cmp
enter
dec
inc
decl
data16
mov
mov
repz
pcmpeqb
jle
fs
and
ret
ret
cmp
dec
push
fstpt
repz
jmp
mov
pusha
push
test
push
cwtl
adc
test
jl
cmp
leave
int
cwtl
jns
loopne
push
ljmp
hlt
orb
jge
xchg
pop
loope
jbe
imul
or
fisttpl
mov
mov
bnd
inc
cmp
mov
inc
jp
nopl
arpl
xchg
test
and
lock
sub
scas
dec
shl
dec
out
jle
sub
inc
fadd
mov
icebp
or
lret
dec
or
or
xchg
gs
call
or
or
dec
es
fidivrs
call
addl
lcall
jmp
test
adc
dec
add
mov
les
or
mov
test
and
cld
pop
adc
add
outsl
outsb
or
mov
in
jno
stos
pop
add
es
add
sbbb
add
mov
rolb
push
les
push
ret
ret
ja,pn
xchg
push
int
sub
inc
mov
xchg
fxch
mov
or
adc
inc
inc
jbe
outsl
or
es
xchg
adc
jmp
mov
inc
mov
fdivrp
push
subb
shrl
daa
sti
mov
xchg
xchg
mov
in
jp
or
push
pop
out
sbb
jl
nop
add
push
pop
jge
iret
ljmp
fldl
push
iret
cwtl
arpl
mov
mov
cmp
lds
les
inc
or
push
or
popa
repnz
cmp
mov
sub
mov
sub
mov
in
hlt
mov
sarl
jnp
cmp
mov
jb
pop
push
jns
outsl
cld
fs
push
and
dec
jl
mov
jl
cwtl
daa
or
push
push
es
inc
lds
or
jns
or
andb
push
mov
bswap
dec
mov
cwtl
jmp
mov
rorb
test
pop
xor
mov
jmp
dec
enter
and
mov
adc
adc
sub
xor
inc
std
jae
rorb
jmp
lods
cmp
enter
mov
dec
jg
inc
jns
lahf
xlat
push
push
out
lret
mov
aam
mov
dec
outsl
sub
jl
inc
dec
dec
mov
ljmp
sahf
xor
cmp
div
dec
adc
fildl
in
jle
ret
mov
popf
fucomp
maskmovq
testl
adc
and
lret
push
xchg
jl
mov
cmp
lock
lret
inc
sbb
aam
popa
inc
sub
mov
fidivrs
cmp
js
jne
outsl
xchg
cli
fidivl
pop
fbld
scas
xchg
inc
into
jle
cli
andl
outsb
cmp
sbb
fcoms
mov
dec
inc
stc
leave
jb
mov
outsb
jl
sbb
xor
jp
add
repz
push
xchg
movsl
mov
orl
cs
jne
lds
mov
or
dec
push
dec
xchg
test
mov
ret
push
fsubrl
call
adcb
ds
into
dec
or
jmp
push
fwait
and
cmp
daa
pop
xchg
lcall
enter
push
insb
dec
xchg
jg
iret
pop
dec
ljmp
pop
fnstenv
lods
out
sbb
fcmove
adc
mov
inc
and
dec
adcl
mov
and
or
push
jge
adc
mov
mov
nop
popa
lcall
or
rcr
adc
xchg
dec
push
sbb
xlat
addr16
sahf
lret
es
mov
dec
loope
fsubrl
call
das
dec
jnp
xor
sub
subl
leave
dec
xchg
pop
shrl
cmpb
sbb
addr16
mov
aam
andb
pop
xor
mov
pop
sub
cld
iret
jo
lock
call
cmc
fiadds
xor
outsl
loop
xor
inc
scas
and
stos
test
cli
test
mov
mov
sbb
dec
lds
wbinvd
push
push
movsl
out
jae
xor
fnstsw
rorl
mov
sarb
xlat
das
xchg
aaa
adc
pop
ljmp
xor
movsb
sbb
filds
int3
sti
pop
pop
cltd
jbe
mov
cmp
faddl
lods
inc
jge
or
mov
sub
shll
or
and
push
loope
push
dec
mov
fbstp
dec
jmp
std
and
dec
test
loope
dec
xor
cs
ds
daa
xchg
xchg
mov
xchg
mov
je
sub
std
jle
mov
sub
pop
sub
sub
repz
pusha
push
adc
pop
xor
imul
iret
push
jle
cltd
out
test
dec
mov
scas
jbe
jb
out
push
outsb
add
lcall
or
xorb
cmpsb
adc
out
enter
jg
or
mov
mov
stos
inc
pushf
pop
push
shrl
xor
fisubrs
cmc
mov
cmp
out
add
dec
sbb
sub
fildl
icebp
xchg
fnstsw
lahf
sbb
div
xchg
adc
pop
or
icebp
jle
push
cmp
adc
negl
mov
into
and
pop
sbb
xchg
sbb
jg
popf
add
sbb
xor
bnd
xor
and
push
mov
mov
mov
ret
pop
lods
into
dec
push
mov
bound
or
icebp
push
lds
out
xlat
dec
mov
or
jb
addr16
loopne
lcall
out
popa
xchg
arpl
sub
dec
cmpsl
sbb
loopne
fmul
sbb
jle
lret
xor
cwtl
lock
inc
xlat
xchg
jnp
js
jno
insb
sub
xchg
aam
mov
xchg
dec
xchg
stc
pop
testb
xcrypt-ecb
cmpsl
rcll
xchg
ret
mov
and
jecxz
cwtl
xchg
pop
hlt
mov
and
out
inc
fcomps
cli
testl
testl
add
dec
push
mov
sub
xor
cmp
lods
xchg
hlt
adc
sti
pop
bound
nop
scas
mov
or
jmp
xor
fldenv
dec
xor
pop
int3
push
sbb
stos
lahf
test
push
mov
dec
jns
lods
push
and
adc
push
fsts
movsb
leave
outsl
jmp
jecxz
mov
pushf
or
dec
mov
mov
das
imul
scas
cmp
faddl
push
ffreep
test
dec
ret
pusha
mov
sbb
ljmp
pop
add
and
daa
jmp
push
mov
iret
push
mov
pop
sbb
pop
arpl
mov
pop
test
shll
test
mov
std
cmp
xor
push
cmp
loop
stos
xchg
mov
dec
add
cmp
add
jno
xchg
push
sub
xor
negl
adc
add
mov
inc
lods
jge
xor
mov
lock
pop
popf
vphaddubq
push
ja
addb
inc
lods
loop
shlb
sub
push
inc
and
or
add
cmp
arpl
js
rcrb
outsl
jp
lret
mov
dec
add
enter
push
lcall
or
xor
xchg
push
nop
outsb
iret
fldcw
inc
cld
inc
inc
ja
push
xchg
and
lds
jb
mov
dec
loopne
daa
ret
sar
popa
cmpsb
xchg
mov
insl
xor
add
ds
aaa
sbb
iret
add
xchg
rcl
add
mov
push
pop
outsl
jnp
shr
pop
es
jmp
das
lds
in
repnz
inc
outsb
mov
cmp
lret
jb
lock
xor
cmp
test
inc
xchg
xchg
jge
call
inc
mov
bswap
pop
mov
cltd
jle
mov
arpl
xor
xchg
mov
or
xor
xchg
jmp
fisubrs
mov
cltd
cmc
leave
cmpsb
es
xor
jb
not
and
insl
in
icebp
lea
xchg
jecxz
add
adc
cmpsb
popf
fisubrs
mov
cwtl
les
lret
dec
fildll
mov
scas
insl
ds
loopne
jne
push
pop
push
rclb
dec
icebp
subb
aas
or
fstpt
push
in
or
loopne
or
xchg
enter
subb
movsb
or
sub
add
jbe
jae
int3
push
int
jg
cmp
sbbl
jmp
mov
out
dec
add
sbb
lcall
fisttps
fidivrs
jnp
insl
jp
fsubrl
fldenv
and
sar
add
xchg
cmpsb
cwtl
in
stos
pop
inc
jmp
stos
sub
sub
or
fidivrs
aas
jp
mov
push
mov
or
inc
ds
jno
sub
loope
mov
mov
or
stos
mov
popf
cmp
rcll
mov
cwtl
inc
fwait
mov
lds
and
cmp
pusha
out
test
shrl
inc
movsl
cld
leave
lahf
js
imul
insl
cmp
sub
inc
mov
cmp
insb
mov
jmp
sbb
xchg
sbb
ljmp
sub
xchg
jge
inc
sub
push
icebp
cmp
cmp
shll
fimuls
cmp
mov
movsl
hlt
outsl
sti
sbbl
jge
cmp
cld
jbe
or
shrl
add
fsub
loope
or
mov
add
movsl
mov
xor
inc
and
or
mov
pop
dec
xor
dec
adc
push
popf
test
pop
dec
jbe
mov
jae
flds
xlat
roll
adc
cwtl
cs
dec
cld
shl
pop
and
lods
sub
dec
scas
addb
out
adc
mov
mov
mov
xchg
imul
gs
dec
mov
movsb
and
mov
xor
xorl
jnp
sub
scas
or
and
lcall
repnz
test
dec
fisubrl
shlb
imul
dec
jp
pop
insl
cmp
inc
addr16
jno
pop
mov
adc
stc
adc
and
dec
imul
test
sbb
dec
fwait
xor
jne
mov
scas
fidivrl
scas
clc
pushf
out
mov
pop
add
mov
test
xchg
icebp
push
mov
pop
lret
mov
lods
sbb
sbb
sbb
adc
dec
neg
pop
test
into
or
and
out
adc
insb
jmp
sti
repnz
aad
adc
jne
sbb
mov
sahf
cmp
sarl
and
addr16
cmp
sbb
call
out
cwtl
adcb
xchg
xchg
mov
pop
xchg
and
mov
push
or
rolb
sub
push
lea
test
push
pop
leave
arpl
pop
aas
leave
out
loop
pushf
and
xchg
push
ja
mov
stos
xorb
out
mov
mov
jbe
je
jmp
cmp
dec
sarl
mov
ss
inc
imul
pop
cmp
xchg
dec
les
lock
pop
xchg
rclb
adc
mov
mov
jmp
into
inc
or
inc
ret
add
shr
jecxz
data16
outsl
out
pop
adc
pusha
jge
cmpsl
sbb
adc
push
aas
repz
leave
dec
sahf
in
repz
push
rorb
imul
jmp
ret
inc
lahf
out
cmp
adc
lods
push
pop
mov
out
xorb
xor
adcb
ss
xchg
and
imul
lods
push
or
test
mov
mov
rcll
addl
shl
or
dec
mov
fbstp
push
nop
dec
inc
fsubp
dec
ffree
sub
shlb
negb
add
mov
popa
popf
and
pushf
push
mov
test
js
fidivs
ss
outsb
jo
dec
bound
enter
arpl
mov
mov
test
cmc
addb
sarl
push
xchg
ss
stc
mov
jnp
clc
mov
loopne
divps
loopne
scas
es
jp
mov
and
adc
lret
xchg
ljmp
lahf
push
arpl
pop
stc
scas
mov
push
aam
dec
fiaddl
push
mov
arpl
push
test
iret
ds
xchg
cmp
pop
mov
mov
jmp
ljmp
imul
fisubrl
out
push
or
ljmp
mov
push
js
jmp
pop
mov
add
andb
test
stc
push
out
jp
jo
dec
cmp
dec
cwtl
aas
pop
out
cmp
cs
xor
xor
int3
sar
mov
fisubrs
clc
push
addr16
popf
out
ljmp
xchg
movsl
hlt
pop
ljmp
outsl
sahf
hlt
pop
inc
xchg
ss
xor
dec
imul
sub
in
dec
out
adc
call
adc
nop
fcmovnu
or
cli
mov
nop
or
pusha
pop
aaa
push
clc
adc
cbtw
movsl
loopne
sbb
pop
divl
cmp
pop
jbe
movsl
test
sub
mov
push
aas
div
std
or
addr16
loopne
addr16
jae
xchg
push
pusha
fwait
test
inc
dec
das
xchg
xchg
add
mov
repz
dec
mov
out
inc
jge
out
jmp
sub
je
jo
xlat
test
sub
ret
xor
add
dec
or
dec
sti
dec
xorl
mov
jo
ss
mov
pop
clc
dec
jecxz
push
mov
dec
mov
mov
dec
call
dec
add
mov
mov
rcl
call
push
xchg
dec
imul
dec
sbb
movsl
or
mov
cwtl
movq
lods
push
xor
addr16
jae
iret
outsl
rcrb
dec
jg
adc
inc
cli
dec
adc
mov
icebp
pop
add
lds
or
ljmp
not
ja
xchg
jle
in
sbb
cld
aaa
mov
add
dec
sar
enter
mov
nop
sub
cld
in
out
jecxz
dec
and
sbb
adc
aam
ja
mov
lods
ljmp
imul
adc
lock
add
scas
fdivs
or
mov
daa
push
mov
pop
repnz
cmp
rolb
inc
push
cli
fcoms
adc
mov
mov
push
aam
and
jno
push
roll
xchg
out
fldt
lret
pop
mov
les
or
cltd
popf
lea
das
js
adc
add
fbstp
sub
rcr
outsb
xchg
outsb
cltd
and
outsb
jbe
jbe
jns
jnp
dec
scas
cmp
add
pop
mov
push
roll
xchg
push
jbe
stos
push
dec
pop
xchg
insl
jg
mov
sub
mov
dec
jle
push
xor
dec
mov
pusha
loop
jle
push
xor
out
xchg
mov
xor
jnp
xchg
pop
ret
xchg
stos
add
ret
add
and
out
mov
out
repnz
push
push
dec
mov
push
jg
pushf
and
std
dec
stc
push
sbb
pushf
and
add
lods
outsb
inc
sbb
test
pop
daa
push
les
loop
pop
ret
pop
xchg
mov
adc
mov
dec
add
pop
or
push
into
and
scas
jmp
iret
into
sbb
pushf
inc
loope
sub
pop
and
jmp
add
cmp
push
adc
push
pusha
xor
mov
imul
icebp
and
and
lcall
aam
mov
jge
add
ja
dec
push
inc
mov
sbb
add
repnz
xor
es
mov
pop
jg
sbb
and
ret
fldl
adc
aas
jno
jae
add
hlt
rorb
or
sbb
pop
mov
test
movsl
sub
sbb
int3
aas
nop
je
sbb
dec
in
xor
ss
out
add
push
pop
fimull
mov
xchg
jl
sahf
jge
xor
bnd
cltd
movsl
cmp
int
xchg
mov
gs
xchg
enter
js
je
out
andb
loope
cmp
add
icebp
fcomp
testl
xor
insb
mov
mov
adcl
add
dec
mul
divb
push
cli
dec
insl
pop
jge
jne
fldenv
es
fdivp
sbb
ret
cmc
jge
pop
push
test
adc
pop
icebp
pop
adc
dec
push
icebp
dec
dec
out
lds
lea
lock
and
dec
out
scas
jp
mov
jb
cmp
and
mov
pop
imul
pop
and
adc
sub
je
mov
push
dec
into
mov
push
inc
sub
pop
add
jecxz
in
jge
push
outsl
cmpsl
mov
mov
sub
gs
sub
fdivr
push
mov
sub
inc
gs
sub
aad
inc
pop
orb
sbb
test
rcl
cmp
loop
pushf
movd
push
dec
lea
lods
jno
mov
xchg
mov
lret
cmp
lcall
push
cmc
lcall
sbb
ss
stos
fistl
outsl
mov
sbb
imul
cmp
mov
mov
outsb
negb
sbb
nop
dec
stos
push
xchg
add
or
loope
push
mov
in
inc
push
or
push
push
push
xor
shll
and
fld
mov
push
insl
mov
mov
cmp
ss
daa
cmpsb
nop
fisttpl
arpl
jbe
and
lcall
rcll
pushf
push
add
mov
mov
inc
add
test
cmpsl
pop
int
pop
pop
mov
pop
and
loope
push
mov
push
inc
push
loope
mov
ret
clc
aas
push
inc
sbb
sbb
loop
mov
lock
mov
add
xchg
or
imul
imul
repz
push
xchg
inc
push
jno
fucomip
push
test
mov
push
lret
sub
add
sub
adc
in
ret
cmp
pop
inc
sub
jb
mov
jmp
pushl
adc
data16
mov
xchg
cmp
jno
xor
pop
dec
lret
jno
ss
lret
push
cmp
in
loopne
pop
lock
imulb
cs
jle
mov
shlb
xor
das
mov
pop
es
ret
jmp
add
data16
cli
pop
or
dec
lods
out
mov
outsb
jne
lods
lock
imul
jl
sub
roll
xchg
lret
lds
sbb
jnp
sarl
sub
sahf
cmp
sbbb
out
bnd
xchg
std
jne
xchg
popf
add
movsb
cmp
sub
or
or
int
push
cld
adc
or
jbe
test
adc
cmp
stos
mov
andb
or
lods
push
cmp
xchg
fcmovne
pop
aad
les
and
loope
sbb
fadds
in
outsb
xchg
bound
test
sbb
in
push
pop
add
lret
aaa
pusha
or
fnstcw
repnz
pop
fstl
mov
shlb
mov
divb
aam
jns
jg
sbb
or
mov
add
xor
xchg
dec
bound
cmpsb
and
mulb
xor
push
movsb
mov
clc
clc
pop
js
repz
aaa
bnd
dec
das
adc
in
lret
mov
fdiv
push
push
ds
mov
inc
icebp
add
ficoml
repz
fdivr
int
lock
mov
mov
pop
mov
jmp
inc
ja
icebp
jbe
outsl
mov
mov
pop
xchg
cmp
js
cli
or
call
lods
cmp
repz
test
adc
push
cltd
mov
mov
stos
imul
jl
or
out
scas
add
das
jo
mov
gs
in
rcrl
mov
and
add
mov
inc
mov
pusha
push
fdiv
loope
mov
mov
lcall
pop
orl
stos
ds
sahf
data16
fsubs
push
pop
jb
addr16
add
cmp
stc
mov
push
mov
aaa
clc
mov
mov
aad
adc
jbe
mov
inc
xor
in
push
test
mov
fstl
int3
and
or
rorb
xchg
lret
in
jbe
push
stos
test
movsb
sbb
aad
notl
cmp
sub
pop
push
mov
add
push
xor
sbb
int
test
stos
call
mov
test
mov
mov
add
fildll
popf
js
and
int
adc
test
or
out
inc
cmpsl
pop
add
jl
test
xor
filds
jle
bswap
cli
pop
nop
mov
adc
sub
pop
ret
repnz
add
xor
lods
mov
push
repnz
outsl
inc
std
out
mov
mov
push
test
loop
add
dec
dec
ret
unpckhps
and
jge
xchg
sbb
adc
and
pop
pushf
arpl
pusha
movsb
mov
test
shlb
int3
test
mov
fwait
ljmp
cmpsl
repnz
loop
or
sub
and
ljmp
sub
pinsrw
mov
mov
fwait
pop
sti
cmp
jl
test
fucomi
xor
pop
stos
iret
rep
dec
pop
cmp
mov
inc
cmp
mov
push
mov
jl
mov
fucomi
fwait
cmpsb
or
inc
fcoms
test
fsubr
scas
dec
dec
xchg
dec
popf
lock
sbb
fldenv
mov
fcoml
pop
popf
js
fimull
test
imul
nop
sbb
out
or
xor
test
cltd
ljmp
add
adc
pop
sbb
das
call
test
inc
sub
fadd
mov
jns
scas
inc
adc
int3
int3
or
popf
jae
enter
ljmp
dec
aam
pop
inc
xor
jno
mov
addr16
or
sbb
lret
or
iret
mov
pop
cld
out
push
push
xchg
dec
shlb
push
orb
out
movsb
clc
insb
aaa
ret
push
enter
js
ja
cmpsl
pop
mov
dec
cmpsl
fisttps
cmp
pop
push
jle
mov
addr16
mov
jle
cltd
lret
xchg
mov
jne
xor
jbe
inc
mov
aad
push
or
inc
push
dec
mov
cmpsl
cltd
xchg
out
mov
fiadds
scas
sub
push
fdivrl
pop
icebp
jo
pop
sahf
lcall
sub
and
ret
scas
add
out
mov
fldcw
movsl
and
aad
int
clc
outsl
repz
cmp
jle
out
jo
dec
push
lahf
adc
scas
sbb
dec
jle
xchg
int3
arpl
in
dec
jo
fstps
data16
test
lock
inc
push
xor
mov
adc
mov
je
fs
into
pushf
test
ja
test
movsl
mov
jno
adc
mov
outsl
fnsave
pop
inc
int3
lret
pusha
repnz
xchg
mov
aam
lahf
addr16
mov
push
jae
push
sbb
fbld
jno
gs
in
sub
cmp
mov
sbb
adc
sub
leave
jae
dec
xchg
adc
push
inc
or
out
and
outsb
stc
add
add
mov
add
shrl
sbb
lds
jno
out
lock
add
xchg
ficoms
push
pop
add
std
inc
pop
jecxz
pop
and
push
xor
cmpsb
stos
cli
inc
bound
insl
adc
push
ret
pop
push
out
pop
aaa
nop
arpl
adc
outsb
repnz
cltd
popf
in
adc
mov
cmp
push
dec
insb
insl
jmp
xchg
adc
xchg
vprotq
mov
das
dec
iret
jo
xchg
fadds
scas
pop
add
xor
mov
add
xchg
sahf
scas
test
dec
pop
xchg
mov
xor
lds
mov
shll
jge
imul
rcl
frstor
jno
cmp
push
jns
ljmp
xchg
sbb
sub
cmpsl
dec
push
lods
test
into
js
dec
bswap
push
aam
mov
sub
mov
mov
mov
scas
jno
xchg
cmpsl
pop
mov
mov
xchg
dec
inc
xchg
mov
dec
pop
addr16
xchg
add
orb
or
fcoms
mov
arpl
adc
sti
push
repnz
inc
sub
dec
sub
das
shrl
fnstenv
call
insl
aaa
add
fisttpll
jno
inc
out
loop
or
push
add
dec
adc
insl
dec
je
dec
movsb
inc
aad
lods
xchg
loopne
sti
mov
jno
arpl
int3
popf
daa
in
addr16
leave
test
xor
pop
insb
imul
insb
mov
mov
test
inc
mov
das
xchg
cmc
sbb
mov
jmp
test
in
add
fstps
mov
test
imul
es
or
imul
push
pop
sub
leave
and
push
negl
push
lds
add
jge
sti
mov
mov
hlt
aas
mull
sbb
std
loopne
push
adc
inc
or
jge
and
jle
push
mov
mov
shl
dec
sub
lds
insl
imul
xor
inc
in
mov
jge
and
mov
insb
test
ljmp
xor
dec
ret
pop
jmp
sahf
movsb
jns
pushf
mov
xor
mov
nop
pop
jns
sbb
imul
aas
mov
aaa
cmpsb
and
adc
daa
xchg
jge
ja
sbb
adc
xchg
sbb
push
cmp
lods
dec
lahf
adc
dec
mov
fsubs
movsb
gs
and
call
mull
inc
popf
jge
fstpt
pop
pushf
sahf
push
mov
movsl
push
pop
mov
sbb
mov
in
push
mov
outsl
jle
mov
addr16
jge
loopne
and
xor
ja
fwait
dec
outsb
popa
mov
enter
mov
ficompl
sub
jl
mov
loope
sub
ss
std
cmpsl
lods
test
jne
dec
mov
lods
dec
lea
jg
outsb
add
cli
xor
cltd
outsl
stos
loopne
pop
lods
outsb
mov
ja
and
popa
inc
xchg
mov
popf
scas
lcall
xor
test
arpl
orb
inc
pop
xchg
jb
hlt
popf
inc
dec
lock
popl
outsb
enter
push
sbbl
cmpb
scas
jp
out
imulb
mov
dec
xor
sub
std
shrb
cmp
and
je
mov
jo
jle
sbb
xchg
lret
les
and
cmp
fmul
fiadds
cmp
mov
fst
in
or
cmpsb
hlt
daa
pop
sub
hlt
dec
pop
add
iret
and
mov
fwait
loope
mov
ds
fisubl
out
fs
stos
push
call
sub
dec
loopne
daa
test
rol
cmp
cmpsb
push
mov
into
xor
push
mov
shr
stc
fnstcw
lds
cmp
sub
pop
aaa
mov
xor
gs
loop
hlt
dec
or
jns
repnz
insb
inc
das
mov
int3
cld
hlt
ret
fwait
dec
jns
out
jae
call
faddl
fisttps
mov
mov
mov
out
cmp
movsl
pop
and
mov
lock
in
xor
test
lret
push
adc
ret
jb
es
pop
cmpsb
sbb
hlt
lock
jo
jle
adc
and
cld
pop
int3
push
jnp
cmp
xchg
xor
jbe
lahf
testb
fldcw
lret
lahf
cbtw
andl
dec
xchg
xor
pop
imul
inc
cmpb
stos
push
jnp
push
sub
jmp
dec
xorb
xchg
lods
rcr
sbb
jg
and
push
push
or
test
inc
test
in
xor
ficomps
sub
decb
and
push
aad
xchg
outsl
ret
adcl
xchg
xor
lret
sahf
sub
adc
loop
scas
lods
popa
cmc
aad
add
stc
cmc
sahf
in
mov
imul
dec
lds
and
loopne
into
imul
jl
popf
js
je
enter
imul
movsl
fisubrs
xchg
or
cmp
gs
or
mov
jo
add
push
mov
dec
lret
testl
xchg
jge
xor
xchg
negb
imull
addl
inc
mov
les
cld
mov
mov
push
fcom
aaa
shl
push
rcrl
in
jle
subb
fnstenv
sub
xor
jle
pop
hlt
adc
sbb
iret
movsb
dec
cmp
loopne
call
shr
xchg
pop
out
imul
pop
fstl
sbb
pop
and
cltd
nop
and
jnp
inc
rcrb
dec
push
xor
jo
fisubl
lahf
or
mov
mov
jo
pop
lcall
mov
cmpsb
fimull
dec
add
lret
in
cmpsb
inc
push
xor
movsl
shrb
imul
adcl
loop
pushf
aam
data16
jbe
dec
push
lret
cmp
fadds
js
pop
mov
or
sbb
pop
mov
fimull
das
mul
push
sbb
mov
imul
test
adc
and
negl
sbb
or
mov
mov
push
or
out
xor
cltd
pop
add
cmp
leave
xor
push
sbb
stc
cmp
ljmp
leave
cmpsl
and
lret
or
orb
inc
lds
ret
out
rorb
stos
cmp
cmp
xchg
insb
jnp
cmp
and
pusha
mov
dec
cmp
sti
add
cld
shrl
cmp
in
xlat
out
mov
std
inc
stc
arpl
and
push
sub
or
loope
push
cmp
cmc
fnstsw
inc
jno
pop
jl
push
push
pop
and
add
pusha
inc
pop
jns
enter
data16
cmp
inc
jp
movsl
lock
aam
pop
push
ja
daa
adc
insb
sub
test
leave
int
pop
or
jp
aam
in
pop
adc
add
xor
das
or
mov
mov
lahf
and
push
push
mov
in
jle
lods
icebp
ret
cmp
jmp
mov
pop
scas
mov
into
and
jno
dec
icebp
popf
cmp
repnz
lcall
push
mov
push
cmpb
mov
fisttpl
daa
xchg
pop
in
pusha
psubsw
push
xor
cld
out
mov
jmp
mov
addr16
insb
adc
or
inc
xchg
adc
fmuls
mov
jle
arpl
cmp
mov
mov
test
idivl
xchg
adc
div
push
inc
jno
mov
cs
xchg
jge
mov
mov
mov
cmp
and
jg
and
fidivl
movl
cmp
mov
mov
pop
adc
mov
arpl
ja
or
mov
rol
es
fldt
clc
aad
iret
fsubrl
or
push
pop
fiadds
mov
jb
andl
push
imul
xchg
xchg
mov
fistps
out
into
cwtl
mov
js
in
jmp
stos
add
cmp
cmp
jno
jmp
mov
ficoml
clc
daa
cmp
cmpsb
adc
add
sub
jne
fldt
jmp
imul
test
dec
mov
push
dec
dec
imulb
das
mov
ja
sub
mov
xchg
push
adc
ds
or
xor
stos
mov
mov
mov
cltd
pop
ja
jecxz,pt
fimuls
cltd
dec
loop
fldenv
cmpsb
scas
test
lods
dec
test
cmovl
jle
adc
popa
push
in
cmpsl
addb
loop
incl
shl
sti
popa
push
enter
adc
sbbl
test
xor
and
dec
mov
pop
add
pop
dec
enter
mov
lret
fs
mov
mov
in
cmp
ljmp
icebp
aas
add
mov
test
push
int
addr16
ret
mov
mov
inc
and
push
mov
leave
arpl
cmp
xor
ljmp
push
fiaddl
daa
dec
cwtl
insb
add
jl
jg
and
aam
push
shrl
add
push
mov
test
jmp
aam
push
or
sbb
inc
push
and
dec
fisttpl
lcall
add
cmp
sar
in
je
fidivl
hlt
out
hlt
fnsave
adc
stos
or
out
push
ljmp
cli
dec
notb
mov
mov
add
imulb
flds
pop
mov
das
xchg
and
mov
je
push
ror
clc
jp
or
mov
ja
mov
fwait
sub
jmp
xor
push
adc
outsl
add
add
inc
jecxz
insb
jmp
mov
jnp
or
pop
push
adc
iret
outsl
outsb
inc
insl
and
filds
lea
push
test
xchg
sub
mov
ds
ljmp
call
adc
lods
jns
popf
sbb
mov
sbb
and
adc
jle
mov
cwtl
jns
jns
les
xlat
loope
rcll
cwtl
dec
fsubl
xchg
inc
jb
movsl
nop
lock
iret
add
mov
ret
dec
inc
ljmp
mov
fs
aam
scas
aas
fstps
adc
sahf
mov
repnz
sbb
xor
adc
int
cs
jns
jge
nop
add
gs
mov
ds
mov
ret
and
adc
mov
dec
cli
leave
cmp
repz
arpl
xor
cli
imul
out
andl
in
jmp
mov
mov
pop
mov
mov
cmpsb
stos
adc
les
popa
jle
sbb
cwtl
or
add
add
push
mov
es
inc
repnz
pop
add
dec
sub
fldenv
inc
and
jecxz
mov
subl
out
imull
xlat
repnz
popa
adc
sub
leave
mov
idivl
xor
sahf
or
test
test
stos
adc
and
inc
pusha
icebp
cmp
repnz
push
mov
jle
add
subl
jns
in
adc
and
inc
xchg
inc
fistpl
cmp
cmp
cmp
pop
popf
inc
aam
testb
mov
xchg
dec
outsl
es
push
lods
jg
ja
pop
std
jne
push
xor
iret
out
pushf
cltd
sti
sbb
inc
lods
into
xor
inc
push
scas
shll
jl
cltd
mov
lock
xchg
imul
clc
or
das
dec
inc
cmc
aam
dec
loopne
mov
jge
icebp
fs
clc
lret
ja
pop
repnz
mov
jb
in
xchg
cmp
xchg
sarl
out
lcall
popf
pop
xor
clc
popa
std
loop
clc
push
fcoms
std
inc
jl
jo
xchg
filds
lcall
sarb
into
mov
cwtl
and
mov
test
aam
cmpsl
pop
mov
aam
push
sub
pusha
ja
push
jo
pop
call
sbb
movsb
mov
pushf
jbe
push
imul
lds
int3
push
cmp
std
sub
pop
imul
pop
mov
add
xchg
push
cld
mov
mov
imul
outsb
cltd
inc
loop
mov
xchg
imul
outsl
pop
addr16
jns
xchg
aad
iret
mov
push
gs
int
adc
lea
rcl
cli
pop
sbb
push
jle
add
pusha
mov
add
clc
mov
inc
mov
jg,pn
mov
mov
and
lcall
sbb
mov
loop
adc
fistpl
popf
sbb
or
xchg
push
orb
adc
add
pop
add
imul
addr16
pop
mov
sbbb
sub
jo
jmp
inc
arpl
std
sub
in
imul
cmp
fstps
sti
xchg
mov
shl
insl
test
cltd
pusha
xor
iret
jl
rorl
lods
out
repz
sub
cmp
lds
adc
fidivrs
dec
mov
push
mov
adc
sub
xor
iret
mov
jge
xchg
insl
leave
call
mov
out
push
pop
dec
addb
repz
das
arpl
mov
ds
mov
push
xorl
hlt
inc
aad
arpl
dec
call
jae
mov
pushf
shlb
idivl
enter
xchg
testl
andb
lock
repz
lret
jb
mov
rorb
xchg
divl
cmp
sub
xor
inc
mov
in
lods
testl
jbe
pop
int
imul
xor
pop
out
int
xchg
leave
jge
add
mov
pusha
insl
sbbb
popf
mov
lods
enter
xchg
stos
imul
mov
adc
hlt
adc
idivl
add
or
std
stos
adcl
inc
movsl
add
and
jp
or
shrl
mov
sub
cld
inc
je
in
or
fwait
repz
adc
add
out
outsl
js
adc
mov
adc
pop
mov
lret
in
dec
pop
xor
les
cmp
mov
pusha
stos
push
shlb
jle
clc
or
testb
cmp
jne
inc
push
into
dec
pop
push
enter
mov
push
movsb
iret
inc
add
adc
stos
inc
out
jnp
xchg
fimuls
test
pushf
arpl
bnd
aas
push
mov
rcrb
adc
mov
mov
out
scas
sbbl
mov
cmp
test
fcomip
jnp
in
imulb
ds
adcl
idivl
and
in
cltd
push
lods
ljmp
sbb
and
dec
je
lret
lods
int
sub
nop
mov
test
out
xor
test
inc
and
shlb
aam
adc
hlt
sub
pop
push
mov
ss
pop
inc
xlat
jo
mov
loopne
gs
addr16
or
hlt
pop
lea
pop
and
in
repnz
xor
repz
xchg
jb
and
xorl
xchg
xchg
mov
inc
or
or
dec
push
pop
stos
cmp
jbe
xor
xchg
add
mov
ficoms
cmp
out
shlb
push
sbb
int
fdivr
pop
xor
jmp
cmp
xor
pop
fsubp
cwtl
in
sub
mov
pushf
cmpsl
push
fidivrl
sarl
stos
push
pop
mov
jo
cmp
hlt
cmp
das
xchg
push
lds
push
addr16
jp
imul
iret
and
js
add
cmpb
add
cli
lcall
mov
mov
jg
sub
imul
dec
or
outsb
sub
es
adc
sbb
rorb
push
push
mov
mov
xor
jmp
dec
dec
pop
in
fistps
push
repz
push
cld
and
test
xor
cmp
adc
jns
adc
js
mov
fwait
mov
xor
repz
mov
lret
xchg
jb
orb
jno
xor
inc
clc
dec
sahf
sbb
dec
arpl
int
out
pop
clc
mov
push
push
aam
pushl
push
or
cmp
pop
xor
pop
sub
mov
adc
mov
je
cltd
test
test
xchg
stos
ljmp
aaa
adc
push
fsubrl
fcmovbe
cwtl
jbe
pop
xchg
fcomps
sub
sti
adc
jo
or
mov
dec
pop
mov
inc
sbb
or
pop
mov
mov
mov
xchg
inc
pop
fsubl
sub
pushf
mov
fisttpl
test
dec
jmp
mov
rclb
inc
jmp
ss
or
adc
lea
push
mov
imul
test
xchg
je
jno
mov
bound
rclb
push
or
sbb
mov
lds
jnp
push
outsl
test
ret
cmp
push
sub
sarb
aad
hlt
clc
cs
int
test
jne
mov
insl
mov
addr16
mov
nop
cli
xchg
sti
jg
inc
lret
mov
sahf
stos
lret
sbb
jbe
jb
and
pop
roll
mov
jmp
leave
mov
popa
inc
out
cwtl
orb
lret
cmp
scas
sbb
dec
cli
inc
aam
repz
cltd
lods
loop
lock
dec
inc
out
je
jle
in
imul
mov
leave
out
int3
insb
mov
jo
cld
pop
cld
in
xor
add
jmp
jne
mov
int
cwtl
outsb
sbb
fsubr
mov
or
xchg
pop
lods
lea
iret
add
add
lcall
mov
mov
pushf
pop
into
test
mov
out
xchg
shrl
inc
jno
sub
aas
rorb
clc
mov
cli
jbe
xor
push
jl
outsl
inc
shll
sub
or
mov
gs
and
push
into
scas
pop
into
int
je
push
scas
call
jnp
insb
test
loopne
lods
mov
outsl
pop
adc
or
out
add
cs
mov
mov
call
call
adc
cli
sub
sbb
ljmp
jmp
push
leave
ds
pop
mov
cld
push
repz
out
sti
addr16
push
xchg
out
push
orl
push
daa
mov
nop
sub
arpl
jne
mov
inc
and
fwait
iret
jg,pn
cmp
movsl
dec
push
fcomi
lret
xchg
jbe
bound
and
add
xchg
idivb
adc
mov
adc
mov
or
repz
shrl
push
push
cmc
pop
in
andb
push
in
shl
mov
ja
test
sub
mov
mov
push
sbb
sbb
popf
in
int
adc
mov
lds
cmpsb
and
sub
push
in
xlat
push
push
js
je,pt
mov
pusha
push
mov
pop
adc
sbb
stc
jns
sbb
jo
xorb
out
pop
mov
mov
paddusw
ljmp
rcll
bound
popa
xchg
gs
jno
clc
mov
xor
cmp
test
mov
adc
fistpl
mov
xchg
jbe
btc
aas
or
sub
add
rcr
jmp
popf
sub
stos
pop
out
aad
in
xchg
mov
lds
add
fnstcw
loope
sbb
dec
out
sti
ds
loopne
push
jecxz
xor
inc
mov
mov
sbb
outsl
mulb
xchg
mov
daa
cmp
int
fdivl
sbb
add
bnd
jecxz
mov
inc
mov
pop
mov
cmp
addr16
xor
add
dec
push
es
test
xchg
scas
jb
xchg
mov
pop
out
clc
fstl
and
in
mov
fs
imul
test
jns
lahf
cmpsl
xor
orb
dec
clc
or
and
call
sub
insl
repnz
sahf
jo
popf
sbb
movsl
push
dec
jno
aam
xchg
adc
insb
add
mov
rcll
xor
out
cmp
jb
les
push
jno
push
sbb
push
push
in
clc
lock
lret
push
iret
lock
mov
lods
in
sub
cmp
adc
les
jns
jno
mov
ja
sub
add
dec
xlat
cmp
sbb
ljmp
sti
and
in
and
cmpb
xchg
xor
jle
in
pop
pop
cld
xchg
jns
data16
int
jmp
call
and
insl
cmc
andl
jb
sbb
inc
shrb
fisubrs
mov
xor
mov
ja
cltd
xchg
mov
mov
pop
jmp
jge
push
or
test
cmp
adc
loop
adc
loope
imul
sub
das
ss
push
insb
pop
popf
mov
cmpsb
shrb
push
jle
je
jecxz
mov
lret
fcom
push
or
jns
mov
cmp
scas
aas
adc
sahf
or
and
scas
sub
cltd
negl
incb
and
sbb
sbb
xchg
bound
cmp
mov
mov
dec
push
xor
sahf
sub
cmp
or
aad
orl
ss
push
rorb
leave
aad
mov
out
out
unpcklps
out
stos
and
dec
jmp
outsb
sti
and
das
mov
sbb
cmpsb
inc
dec
shll
mov
cmpb
out
mov
int
insl
out
es
xlat
jle
clc
movsb
jae
jmp
add
test
aaa
loope
scas
stos
mov
aaa
sbb
ds
lods
jle
in
jns
scas
cs
push
popa
xor
sahf
push
mov
push
cmp
lds
push
in
mov
daa
mov
in
iret
in
movsl
into
mov
imul
lds
push
sar
ja
aam
out
mov
cltd
aaa
mov
cmp
shrl
sub
popf
fsubl
loope
mov
mov
mov
fildl
fcomps
cmp
lcall
dec
or
jbe
sahf
iret
mov
xor
adc
xlat
stos
jp
out
sub
fimuls
fsts
cmc
iret
gs
out
fadds
mov
dec
push
jo
and
das
mov
sub
sbbb
loop
cmc
jge
shll
lods
xorb
push
xchg
or
dec
jno
into
in
push
dec
push
das
test
xorb
inc
dec
scas
mov
add
jmp
inc
test
sarb
mov
popf
and
xchg
sub
psllw
mov
dec
inc
push
inc
stc
popa
adc
mov
lea
out
jmp
ss
adc
sahf
rcrl
cmp
push
ljmp
test
aad
or
stc
inc
pop
sub
leave
cmp
sub
push
stos
dec
cmc
movsb
cmpsb
ficoml
les
loopne
pop
or
push
fbstp
mov
jge
sub
mov
inc
loopne
popw
arpl
icebp
push
mov
jmp
cld
mov
frstor
pop
sti
or
jne
or
data16
sub
mov
adc
mul
lcall
xchg
jg
inc
mov
xlat
push
and
icebp
cmpsl
test
inc
shr
cld
cmpsl
orl
mov
push
push
bound
sub
sbb
std
sbbb
pop
cmpl
fstpt
and
or
imul
or
subl
ficomps
les
inc
xlat
in
jp
lock
xchg
shrb
adcl
mov
and
jns
daa
inc
mov
xchg
push
ja
pmuludq
dec
push
xchg
adc
mov
mov
popf
sbb
data16
jg
dec
xchg
xorb
cmc
mov
negb
pushf
lds
pushf
rclb
fisttpl
pop
mov
shr
lods
pop
or
push
add
dec
mov
jecxz
mov
jg
add
cli
leave
xchg
fmuls
es
sub
xor
insl
cmp
popa
inc
mov
ficompl
inc
in
aam
pop
mov
inc
int3
std
mov
test
fcomps
lret
jmp
out
jl
pop
jp
sahf
das
inc
rcl
mov
nop
mov
push
push
pop
pop
pop
cwtl
adc
jmp
inc
inc
push
frstor
sub
mov
add
les
push
xor
stc
popf
dec
xor
dec
fs
inc
test
inc
jmp
ret
das
xor
add
stos
and
and
or
fimuls
dec
fstpl
push
aaa
pop
and
inc
sbb
push
les
xor
aaa
sbb
repz
or
and
ljmp
leave
imul
xor
clc
sar
inc
cld
or
arpl
mov
imull
lock
fldl
sub
das
insl
mov
push
cld
xor
inc
xchg
push
xlat
pop
jmp
cmp
repnz
aas
push
and
outsb
jge
cmp
mov
jmp
pop
cmpsb
out
cli
jmp
xchg
lods
lcall
shl
adc
xor
mov
xchg
movsb
orb
hlt
call
inc
ss
loopne
lea
push
push
not
and
xor
jle
repnz
mov
inc
or
fadd
fadd
aad
orb
and
or
cmp
xchg
mov
bound
cmp
std
hlt
std
sub
mov
push
jmp
mov
xchg
xchg
xchg
outsb
push
or
sub
test
jne
push
pop
rol
mov
out
or
lock
lock
lods
hlt
mov
mov
push
adc
outsl
or
data16
inc
int3
adc
aas
cmp
lea
adc
cmp
fisubs
mov
pushf
ja
lcall
cmp
push
notl
push
or
movsb
out
jae
pop
fcom
xor
cmp
in
arpl
je
xchg
cmp
or
mov
out
or
call
out
mov
add
cmpsl
xor
aad
add
mov
jne
lahf
push
mov
adc
out
xor
mov
pop
xchg
sbb
push
sub
xchg
and
iret
mov
sub
subl
cmp
xor
xor
inc
xchg
add
flds
sbb
ljmp
push
in
pop
lds
rcl
mov
xor
cmp
imul
sbb
fnstsw
fisubl
pop
fisttpll
xchg
cmp
mov
inc
push
pcmpgtb
pop
inc
and
mov
adc
lds
push
dec
inc
cmp
jecxz
shrb
pushf
cli
cmc
xor
aaa
sbbb
adc
sar
shlb
ficoms
loopne
jns
mov
mov
push
dec
int
jno
cmpsb
out
int3
sbb
frstor
insl
mov
xchg
mov
sbb
bound
jbe
xchg
or
mov
adc
call
cmp
repnz
sbb
fxch
ss
shl
insl
inc
fldenv
or
xchg
stos
sub
add
inc
pop
roll
push
gs
mov
outsb
xchg
clc
mov
push
pusha
insl
pusha
outsl
stc
loop
mov
lods
mov
mov
outsb
aam
mov
and
cmpsl
lods
hlt
icebp
out
sub
mov
lcall
push
adc
sti
jecxz
push
and
xchg
adc
es
or
sub
jp
sub
fbstp
jnp
out
popf
dec
lahf
jbe
adc
and
jae
or
outsl
dec
sbb
sub
push
mov
cltd
bound
pop
nop
mov
mov
jo
xchg
jno
mov
mov
push
push
je
shll
adcl
jnp
inc
outsl
inc
sbb
push
lret
mov
pop
xlat
xor
adc
fidivl
add
push
dec
xchg
xchg
cmpsb
cmp
je
dec
test
xor
je
rorb
or
lods
push
out
pop
pop
test
mov
test
cmp
add
popf
fsubs
sbb
mov
cmp
hlt
iret
push
push
jp
out
stos
enter
jno
arpl
movsl
fcmove
dec
push
ss
loopne
mov
hlt
mov
js
enter
push
jmp
mov
xor
mov
push
mov
call
out
inc
mov
or
push
in
hlt
jg
or
mov
test
sbb
push
add
jo
dec
negl
pop
cmp
test
adc
add
roll
cmpsb
ds
in
sar
mov
push
and
jo
aam
and
dec
inc
cmc
cmc
aam
jmp
push
pushf
pop
mov
sub
cld
rcrl
add
fisttpll
mov
or
lods
push
icebp
sub
inc
lods
and
inc
jns
push
stc
mov
pop
mul
push
adc
sub
push
mov
mov
xchg
cmp
add
out
xacquire
mov
push
loopne
sahf
test
mov
cmp
add
or
sub
rcr
movsb
mov
outsl
jae
sub
xor
pushf
hlt
push
mov
fwait
dec
add
add
or
pop
jmp
call
popa
cmp
repnz
cmp
xchg
and
pop
jo
push
iret
mov
jb
fwait
mov
stos
sahf
jl
nop
repnz
stos
loopne
adc
add
jo
jmp
out
mov
pop
push
testb
mov
or
or
mov
mov
push
fimuls
loope
push
pop
imul
out
adc
out
xchg
popa
dec
mov
fdivr
into
test
add
add
cmpsl
sub
je
scas
inc
lcall
sti
hlt
push
cmpsl
es
inc
movsl
adc
or
int3
sub
jg
or
test
loope
xor
adc
inc
mov
inc
push
inc
pop
mov
int3
xchg
imul
sbb
sub
movsb
or
ss
ja
xchg
lods
xchg
js
inc
sub
sbb
imul
cmp
push
adc
mov
arpl
mov
enter
mov
or
in
lock
lretw
ds
inc
adc
scas
jo
ja
std
test
cltd
xor
loope
mov
repnz
sub
push
mov
imul
lods
cmp
xlat
pop
xchg
shll
inc
dec
xchg
sbbl
pop
leave
enter
push
xor
sti
dec
push
or
push
cmp
loope
xchg
test
pop
fists
fwait
xchg
adc
cli
fwait
jbe
iret
add
pop
inc
mov
xor
xchg
mov
repz
popl
cmp
es
mov
lret
jg
jae
bound
or
daa
cmp
aam
daa
add
xor
sub
cmp
inc
and
mov
stos
in
in
call
dec
ds
or
dec
shr
inc
lahf
outsl
or
mov
scas
or
fsub
test
test
adc
enter
loope
scas
nopl
ja
push
sub
cld
lea
jecxz
inc
add
xchg
sub
lcall
loope
sub
test
std
adc
dec
lcall
add
test
push
lods
stos
stc
pop
cmp
mov
ja
into
fnstsw
int
jle
hlt
int
movl
cmpsb
jnp
inc
mov
out
test
lock
mov
inc
mov
hlt
push
ret
not
xchg
out
lret
arpl
or
pop
mov
rcll
enter
arpl
shr
repz
cs
cwtl
mov
push
sub
push
fidivs
aad
out
fwait
out
fwait
cmc
sub
jmp
addr16
mov
sarb
pop
sarb
negb
push
adcl
stos
rorb
mov
inc
les
add
sbb
fimuls
insl
retw
mov
adc
xchg
dec
adc
xor
jns
dec
xor
lcall
cmp
dec
jg
dec
les
outsb
mov
cmp
into
jbe
jbe
xor
push
push
jge
popf
js
push
inc
push
sarl
jle
imull
mov
into
adc
cmp
sub
call
or
call
sbb
aaa
in
jle
hlt
dec
dec
mov
pop
jecxz
adc
jae
push
cmp
stos
in
sub
jnp
cs
ja
pushf
out
mov
test
and
xlat
filds
ja
mov
adc
gs
ja
mov
lods
mov
sub
call
fwait
lods
add
inc
aam
popa
mov
xchg
mov
push
or
mov
fmull
xchg
imul
lcall
mov
int3
sbb
loope
imul
xlat
jmp
mov
jmp
out
adc
ret
repnz
sbb
addl
push
mov
push
or
or
jnp
xor
cs
lahf
icebp
mov
xchg
inc
pop
cmp
pop
inc
add
sbb
or
or
adc
push
insl
push
jns
add
into
sub
add
mov
daa
mov
sbb
arpl
fwait
jnp
inc
pop
pop
stos
dec
push
rcrl
in
sahf
mov
push
jg
aas
daa
lret
push
mov
aam
rcl
dec
loopne
fnstenv
inc
inc
dec
xor
jmp
mov
int3
jp
mov
jo
popa
cvtps2pd
sahf
shlb
mov
mov
push
decl
inc
sub
lahf
lock
and
mov
out
ljmp
mov
clc
enter
insl
sbb
or
jne
adcb
mov
pop
outsb
push
mov
inc
repz
js
mov
pop
jl
outsb
mov
popf
aad
cmpb
popa
xor
scas
and
jnp
mov
movsl
xchg
jno
or
push
test
lods
mov
adc
pop
cltd
push
fs
xchg
outsb
es
cltd
hlt
pop
sub
addr16
test
add
ja
mov
insb
mov
scas
cmp
fdivrp
mov
pop
and
or
lods
or
mov
push
mov
fisubl
dec
inc
das
test
pushf
cmp
jo
mov
ret
in
inc
or
cmc
cmp
icebp
dec
sti
sub
loope
and
mov
mov
xchg
mov
int
dec
movsl
jge
cld
mov
enter
dec
pop
jb
dec
test
nop
cmp
push
adc
repz
sbb
push
mov
pushf
out
daa
push
cwtl
jns
jo
add
loop
out
mov
jg
mov
sub
jb
adc
outsl
adcb
lret
fidivrl
push
xchg
sbb
test
filds
sub
insl
or
loop
faddl
and
xchg
jge
xor
insl
jbe
test
sbb
leave
jae
sub
sbb
imul
sbb
int
xchg
add
ss
sahf
cmpsb
mov
pushf
dec
sahf
aam
cs
enter
mov
addr16
js
jecxz
and
sub
iret
push
pusha
cmp
mov
loop
mov
out
data16
js
fcoms
scas
cwtl
ljmp
and
inc
shlb
ja
jge
and
adc
mov
sub
inc
addb
jns
or
mov
sbb
add
insl
call
out
sahf
popf
dec
dec
jbe
vpmacsdqh
test
lds
adc
lea
xor
arpl
push
push
das
add
sub
int
popf
add
mov
xorl
and
cwtl
jne
sar
cmp
ja
xchg
incl
in
cltd
mov
or
leave
out
push
cmp
inc
jecxz
push
add
cwtl
xor
cmp
fcom
cmpsb
xchg
insl
hlt
push
ret
mov
and
insb
repz
imul
int3
push
sub
xchg
jge
ss
sub
hlt
out
daa
jb
adc
hlt
push
sar
out
rcrl
jmp
aam
mov
sahf
fcomps
push
fsubp
test
ja
js
sub
mov
xchg
inc
xor
jecxz
shlb
pop
xlat
push
pop
test
cmp
into
xchg
xchg
in
arpl
dec
fs
pop
or
push
sub
inc
pop
insl
roll
popa
push
pushf
mov
cmc
dec
ficomps
pop
adc
aam
inc
shlb
adc
scas
lret
adc
lods
dec
mov
shlb
sub
iret
sbb
insl
cmp
out
push
mov
dec
insb
adc
fwait
loop
popf
inc
outsl
out
pushf
push
test
mov
mov
repz
jp
je
repz
int3
aam
inc
lds
jmp
cmpsl
out
pop
inc
stc
sti
or
add
jge
cmpsb
jo
cmp
sbb
ret
lods
pop
pop
popf
stos
lret
add
pop
xor
leave
pushf
sbb
ja
in
dec
jecxz
hlt
sub
ficompl
and
mov
gs
pop
arpl
and
mov
mov
mov
outsl
out
nop
stos
sbb
xchg
rcrl
lods
push
xchg
stos
mov
fucomi
movsb
les
mov
push
cli
scas
mov
insl
cmp
stc
adcl
mov
aad
outsl
addr16
cmc
and
push
sbb
les
in
loop
enter
mov
icebp
in
out
in
nop
add
xor
jae
clc
jmp
repnz
pop
xor
lcall
adc
nop
addr16
pusha
and
xchg
push
add
test
cmp
scas
scas
mov
out
sti
je
sbb
sub
int3
jl
add
and
stos
daa
cmp
xchg
inc
xchg
cmp
rorb
mov
repz
out
xor
test
aam
add
std
pop
in
add
and
mov
mov
xchg
test
pop
imul
sub
es
dec
loope
and
xchg
push
pop
mov
out
mov
inc
xor
jg
gs
cmp
mov
pop
leave
arpl
icebp
loopne
sbbl
test
aam
sbb
mov
cmpsl
add
es
adc
in
and
push
in
xor
jb
xlat
leave
test
push
sbb
hlt
jb
hlt
adc
sti
jl
push
xchg
adc
xchg
lock
aas
xchg
ret
cmp
sub
cmp
lds
call
ss
jae
and
repnz
sbb
jae
and
dec
dec
cmpsb
es
call
pop
cmc
jl
xchg
stc
mov
adc
fiaddl
dec
sub
sarb
mov
cld
mov
or
cmc
into
add
add
subb
xor
outsb
ds
lcall
mov
and
repz
push
xchg
mov
jnp
shl
icebp
fiadds
gs
xor
popf
inc
sbb
jl
iret
xor
jo
sub
or
push
sub
or
aaa
subl
test
sub
fs
cmp
loope
pop
xor
cmp
mov
jp
sub
dec
decb
and
or
lods
addl
or
addb
jmp
ficoml
hlt
fdivrs
pop
loope
dec
and
imul
inc
mov
int
or
js
push
pop
jae
in
rcrb
les
fistl
or
lds
jge
fsubl
jns
and
inc
popf
inc
cmp
into
daa
mulb
enter
jg
out
aaa
pop
imul
les
cmp
cmp
cld
push
xor
jge
dec
or
popa
movsl
push
cmp
mov
inc
int
cmpl
xchg
pop
and
ja
jo
add
and
or
addr16
es
and
mulb
xlat
loope
and
ljmp
and
mov
xor
mov
arpl
mov
push
out
add
and
dec
mov
pop
fcoms
test
add
ficomps
cmp
pop
in
sbb
dec
scas
cwtl
jl
cmp
lds
push
ljmp
sub
mov
cmc
jo
fnstenv
dec
mov
cmp
bound
inc
scas
ja
mov
cld
inc
jg
adc
mov
out
hlt
fs
jae
jno
es
sbb
sahf
dec
inc
xchg
ljmp
loop
and
shrl
jp
ljmp
inc
in
sub
movntq
fstpl
pop
dec
rolb
daa
inc
jl
adc
movsl
mov
decl
dec
arpl
insl
xlat
aaa
cmpsb
imul
push
out
add
xor
adc
push
movsb
pushf
xchg
push
movsb
rcll
rorb
movsb
std
sbb
lret
cmp
and
divb
rcll
ficoms
insl
lret
push
aas
pop
pop
fwait
ret
mov
sub
cmp
jne
push
out
mov
mov
mov
in
dec
movsl
pop
mov
add
call
dec
mov
shlb
lret
cmpsb
ja
aas
fidivrs
xchg
arpl
jnp
jmp
lret
sbb
mov
push
or
call
inc
loopne
mov
inc
lahf
rcrl
int3
pop
mov
xor
or
cmpsl
xor
mov
pop
lea
andl
movl
ss
fldcw
bound
rcl
enter
sar
in
pop
inc
ds
lea
mov
notl
movsl
jno
orl
sub
mov
and
xor
push
aaa
mov
cmp
scas
xlat
stc
addl
xchg
out
repz
xor
xchg
stos
push
sbb
std
movsl
clc
jae
into
sti
mov
pop
ficoms
dec
lret
arpl
icebp
push
sar
pop
sti
scas
cli
clc
test
adc
add
hlt
inc
jl
xchg
pop
push
jl
icebp
pop
jle
push
cld
jbe
sub
testb
sub
out
push
dec
jns
and
jl
outsb
in
fistpll
adc
testl
jecxz
inc
mov
aaa
cmc
cs
clc
or
jae
lret
push
xchg
sub
hlt
sbb
xchg
inc
jb
aam
int
jb
xchg
fwait
call
adc
adcl
mov
cmpsb
daa
es
xchg
jne
xor
into
xor
cmp
clc
or
dec
xchg
test
in
stos
adc
or
imul
aam
sahf
mov
inc
jbe
sbb
into
xor
sub
inc
imul
pop
cmp
adc
mov
icebp
sar
je
pusha
or
in
xchg
iret
cwtl
pop
rcl
and
mov
lds
pop
add
dec
jo
insb
mov
inc
in
push
pop
mov
xchg
pop
and
push
aad
push
outsl
test
inc
test
xor
andl
xor
int
cld
mov
pop
sahf
xchg
or
std
cmpsb
cmp
ja
ds
add
nop
mov
mov
add
inc
push
sbb
mov
filds
shl
mov
jae
ss
test
add
sbb
popf
xchg
ror
cmpsb
mov
data16
repnz
cmp
and
imul
xor
xchg
or
sahf
adc
jecxz
mov
popa
mov
jno
ftst
cld
fs
repnz
xor
loope
fcmovnb
gs
mov
jg
sub
stc
ljmp
add
cmp
pop
push
jae,pt
sbb
mov
rcrb
xchg
out
jmp
fnstsw
push
les
pop
pop
jl
notl
insb
sbb
popf
cmc
and
cmp
bound
gs
dec
in
inc
rorl
in
call
das
mov
add
cmpsb
or
dec
jecxz
ljmp
in
mov
xchg
xor
xchg
xor
dec
daa
bound
cmp
inc
and
sahf
xor
sbb
sbb
push
rorl
andb
dec
fstps
cltd
mov
arpl
ljmp
fwait
inc
lock
fs
addb
aam
pushfw
sbb
popf
cmp
jns
mov
daa
sbb
in
iret
les
sbb
xor
test
enter
lods
push
or
cld
cmp
orl
loop
and
lods
pop
stos
jno
jno
ljmp
cmpsb
push
mov
out
loop
cmp
out
adc
aad
dec
cmpsl
stc
adc
test
ljmp
push
shll
jp
pop
lock
or
or
imul
adc
repz
dec
imul
mov
insl
push
fwait
call
dec
clc
adc
push
sbb
adc
bound
loopne
pop
add
mov
icebp
xchg
mov
push
pop
lods
test
lock
or
and
adc
push
xchg
push
xorb
icebp
sbb
fimull
out
push
in
lcall
xchg
dec
sbb
pop
sub
out
fs
mov
or
push
iret
popa
gs
out
cmp
inc
test
pop
call
fdivr
push
aaa
pop
fisubs
push
sub
dec
cmp
shlb
xchg
sbbb
mov
adc
xor
or
lea
std
movsl
dec
add
movsl
ret
push
mov
cmp
cltd
aad
shlb
xchg
xchg
add
jmp
xor
test
out
ljmp
dec
inc
ss
pushf
or
add
test
pop
testl
push
std
adc
inc
adc
dec
mov
mov
mov
push
jbe
push
ret
arpl
mov
sti
daa
ljmp
dec
and
arpl
aad
jae
sti
sbb
pop
cmc
sbb
mov
pop
jp
pop
les
outsb
sub
clc
rorl
xchg
cmc
das
in
cmp
test
pop
xor
imul
pop
xchg
or
mov
adc
and
bound
mov
pop
xchg
sub
ds
add
dec
mov
pop
inc
push
outsb
adc
out
aad
xor
lcall
jb
pop
rolb
jl
test
or
enter
popa
push
dec
stos
jmp
inc
dec
ljmp
jle
hlt
and
aaa
cmp
popf
jns
outsb
hlt
adc
into
insl
roll
cmp
and
mov
bnd
movsl
fmull
inc
xchg
sahf
or
mov
jg
dec
loop
movntps
cmpsl
fst
mov
or
add
stos
ljmp
je
inc
repnz
popf
je
fildl
clc
sub
xor
jmp
adc
pop
cmpsl
scas
pop
push
scas
mov
lret
aas
addl
jno
sbb
stos
pop
push
jge
jae
iret
in
adc
xchg
popf
sarl
mov
push
fisubs
cmp
in
lds
and
jmp
adc
mov
pushf
mov
inc
outsb
stos
test
sbb
sub
repnz
mov
inc
mov
adc
xchg
mov
frstor
cmp
cltd
adc
xchg
push
pusha
shll
sub
ss
and
daa
or
in
stos
adcl
cld
xlat
sub
mov
dec
or
and
push
mov
and
cltd
frstor
cmp
mov
push
push
imul
pop
jl
addr16
scas
mov
mov
jle
addr16
xor
sub
add
cmp
test
inc
and
inc
xor
push
mov
loop
int3
xor
cmp
sub
xchg
pop
movsb
std
push
scas
fisubs
push
mov
je
add
sub
loope
repnz
xchg
fucom
and
daa
test
mov
xor
movsl
outsl
dec
fldl
fwait
and
jb
sbb
out
arpl
daa
std
mov
mov
xor
add
or
inc
mov
pop
push
stos
decl
mov
adc
call
insl
xor
and
jl
sbb
loopne
pop
inc
rorb
jmp
insl
rcrb
sub
pop
pop
ja
ret
jno
rol
jmp
out
out
imul
repnz
cli
mulb
mov
rcll
push
mov
dec
nop
jnp
push
and
ret
pop
pop
test
popa
mov
jge
push
int
andb
mov
jecxz
loop
cmpsl
inc
inc
dec
mov
dec
mov
enter
ja
loope
xor
ret
lods
dec
ja
push
jle
gs
jns
in
ret
lea
lret
inc
dec
fadd
cmp
mov
pop
int3
xchg
push
xor
add
xor
add
sbb
inc
push
mov
add
inc
lahf
dec
scas
and
insl
jne
repnz
addl
addr16
and
sub
nop
or
push
or
or
push
ret
jecxz
subl
stos
in
dec
cmc
push
ss
stos
aad
and
dec
insl
mov
ss
repnz
or
lods
stos
jb
cs
in
mov
out
into
cmpsl
test
negl
sub
or
add
dec
or
sti
sahf
leave
into
mov
push
das
adc
popa
mov
push
test
sti
jmp
stos
push
jmp
adc
xchg
icebp
in
int3
jns
jmp
dec
xor
mov
ds
mov
aad
je
test
imul
into
fnstsw
lds
mov
adc
lea
jp
hlt
loop
mov
repz
rcll
pushf
pop
shlb
mov
in
xor
fisubrs
lock
jbe
dec
sti
mov
stos
push
and
inc
cwtl
outsb
jmp
or
jne
das
pop
adc
and
mov
xor
and
jp
and
pushf
je
xor
cmp
andl
sbb
xchg
stos
fdivrp
add
int3
xchg
repnz
add
ljmp
nop
jne
daa
push
add
imul
in
xor
mov
pop
pop
data16
aaa
icebp
mov
arpl
lret
fdiv
fisubrs
sub
push
cld
loope
and
lahf
xchg
lret
outsl
sti
dec
shlb
push
or
dec
sub
mov
sub
pop
js
lock
xor
ret
mov
mov
mov
xchg
cmp
arpl
pushf
ds
xor
out
lods
dec
lods
popf
aad
sub
mov
adc
ret
stos
inc
stos
xchg
cmp
jo
test
fisttps
leave
call
lea
dec
adc
xchg
cmc
mov
push
adc
test
addr16
jp
dec
mov
loop
sbb
ret
add
adc
lcall
mov
adc
adcb
fimull
jb
repz
inc
test
sub
dec
mov
pop
jmp
orb
mov
in
cmpsb
inc
jns
jns
cmp
push
testl
pop
mov
sub
ret
test
pop
int
cmp
aad
popf
cmpsl
into
aad
jmp
pop
mov
dec
out
xchg
xlat
jb
mov
jl
sahf
add
bound
sahf
cmp
repz
fwait
pop
mov
jns
mov
jns
movsl
inc
jle
outsl
or
pmulhw
push
leave
ret
jne
fwait
pop
in
inc
sbb
mov
ljmp
aas
scas
pop
cmp
int
lret
movsb
jbe
repz
daa
jle
adc
out
aas
std
jecxz,pt
adcl
jg
jecxz
enter
cmp
mov
sub
xor
movsl
or
test
shl
ss
mov
hlt
or
adc
mov
push
jnp
xchg
pop
sarl
sbb
icebp
gs
jb
jne
nop
test
jbe
dec
xor
sbb
aad
xor
mov
mov
scas
test
or
shll
pop
loopne
mov
inc
fistpl
shlb
xor
add
adc
cwtl
insl
inc
loopne
mov
scas
pop
mov
pop
add
std
inc
popa
mov
fldcw
add
clc
add
jo
mov
xchg
sbb
push
hlt
cli
fisttpll
dec
sbb
cld
into
jle
rolb
ret
cmc
shll
xchg
jb
sbb
outsb
mov
ret
pop
loopne
lods
jmp
pushf
pop
xor
mov
and
mov
insb
sub
lods
data16
dec
mov
das
out
negl
das
cld
sti
or
xlat
inc
xchg
pushf
imul
add
mov
inc
decb
dec
cmp
jge
int3
rol
insb
iret
pop
es
inc
xlat
mov
inc
jne
pop
cwtl
fs
movsl
pop
add
insl
sar
out
jge
xor
pop
dec
push
pop
ret
mov
inc
pop
testl
jo
call
adc
outsl
popf
out
jmp
push
movsl
or
pop
ret
mov
dec
pusha
xchg
push
mov
lret
jns
in
cmpsb
ljmp
les
gs
inc
test
ss
dec
add
mov
jno
mov
xchg
fcmovb
add
push
push
dec
enter
mov
pop
bound
fwait
xchg
xor
pop
int3
pop
jl
fistpll
fsts
inc
in
cmc
xchg
dec
mov
xchg
mov
out
jns
lods
fistpl
jp
xlat
cmp
mov
dec
lea
mov
sbb
inc
push
sbb
or
lea
je
push
push
movsb
test
sbb
xchg
in
mov
inc
dec
jg
sub
pop
push
cld
fstps
in
jp
movl
and
and
xchg
mov
adc
inc
lcall
jbe
mov
int
mov
or
cltd
stos
ljmp
or
or
or
xchg
or
rorb
out
dec
add
xor
in
rclb
cmpsb
ror
dec
testl
rcrb
cmpl
rcl
xchg
lods
je
dec
jmp
add
xchg
mov
jnp
pusha
cmpsl
jno
jae
fiaddl
jge
mov
insb
loop
and
sub
std
add
mov
outsb
cltd
push
mov
or
xor
adc
ds
lea
mov
pop
shr
in
adc
pop
xchg
cmpsb
add
cwtl
jecxz
cmc
mov
and
sbb
xchg
adc
outsl
div
mov
sub
sarb
insb
shl
inc
xchg
push
xchg
or
nop
test
cmc
xor
ja
fdivrs
cltd
mov
mov
jne
push
sti
sarb
cmpsl
adc
divl
cmp
and
ficoms
jb
sbb
imul
mov
and
divb
dec
scas
push
or
fadds
iret
xchg
cwtl
push
xchg
add
add
sbb
nopl
lcall
inc
out
or
mov
xor
out
int3
xchg
jno
inc
repz
push
jp
xchg
fcoms
xor
in
icebp
sbb
in
pop
xchg
in
lea
movsb
arpl
push
clc
cltd
ss
or
and
mov
mov
sbb
jecxz
xchg
mov
xor
int
cmpsl
stos
cltd
sub
stos
out
add
and
jne
call
adc
mov
je
jg
hlt
add
sbb
xchg
shl
xor
cmc
imul
mov
call
inc
xchg
cmp
daa
jle
rcrb
jo
xchg
repnz
out
popa
jle
bnd
sub
stos
ret
ja
sub
leave
mov
bound
pop
and
mov
lock
jnp
jns
push
sub
mov
jo
cld
xor
aas
add
xchg
scas
movsb
mov
adc
pop
mov
cwtl
xchg
push
mov
adc
xorl
fwait
mov
mov
rorl
adc
enter
push
cmp
outsb
outsb
fstps
mov
outsb
ja
out
mov
mov
pop
jno
rcr
or
ret
es
sahf
xchg
cmp
mov
jbe
pop
jp
push
ret
std
mov
mov
push
scas
pop
cmp
arpl
cmc
testl
nop
cmp
pop
inc
and
scas
test
mov
movsl
ss
pop
add
inc
insl
repz
call
mov
push
pop
inc
and
test
imulb
outsl
xchg
push
test
dec
push
push
sahf
cld
mov
outsb
lahf
in
lret
daa
repnz
dec
aas
mov
imul
loope
xor
fistpl
push
sub
fs
push
xchg
jg
cmovno
stc
xchg
xchg
cld
jne
in
adc
inc
xchg
leave
dec
int
mov
sbb
inc
iret
data16
aas
test
xor
ja
xchg
push
insb
clc
push
cmpl
push
in
hlt
mov
jmp
loopne
in
inc
cmp
movsb
fiadds
mov
push
adc
pop
mov
mov
cmp
leave
push
or
inc
push
dec
adc
xchg
rclb
xchg
jo
and
push
loope
lcall
aam
xor
sub
sbbl
push
mov
test
xchg
mov
test
aaa
scas
sub
js
sahf
mov
jae
push
lahf
push
jle
add
fistpll
sub
arpl
xchg
adc
pop
pop
push
mov
mov
ds
mov
test
mov
fdivrs
das
repnz
sub
cmp
push
divb
lret
rolb
mov
shlb
xlat
fdivr
sahf
mov
adc
xor
mov
idivb
add
dec
test
mov
das
or
sbb
icebp
cmp
mov
add
jae
mov
push
jmp
pop
sub
push
sbb
and
mov
inc
clc
add
lahf
mov
push
mov
shrb
push
cld
shrl
add
dec
sub
cmc
pop
mov
pop
fstpt
int3
adc
ljmp
lcall
or
nop
test
and
test
hlt
lds
push
and
in
sbb
testl
mov
xor
mov
das
test
movl
lods
pop
fidivs
mov
leave
rcrl
add
pop
incl
pop
inc
fsubs
outsb
sub
mov
pusha
in
jns
adc
pop
push
mov
mov
clc
jne
push
js
inc
inc
insl
sets
xchg
addb
in
and
push
call
inc
shl
fimuls
mov
adc
lret
cmove
sbb
inc
mov
cmpsb
push
dec
inc
lret
sub
xor
cmpb
push
fiadds
mov
or
mov
dec
fisttpll
adc
fcmovnb
xor
imul
insl
das
sub
inc
or
jne
dec
aaa
xchg
dec
notb
roll
xchg
mov
test
outsl
mov
xor
mov
pop
test
mov
and
ss
jns
pushf
loop
lret
insb
mov
movsl
add
ret
js
loop
push
lock
out
out
icebp
lds
dec
rorl
xor
mov
shrb
dec
mov
sbb
push
in
push
aaa
ss
cmp
mov
sti
pop
adc
out
ja
mov
cli
inc
dec
fnsave
inc
mov
or
sub
leave
sbb
jp
cmp
cmp
nop
pushf
mov
dec
push
jnp
push
arpl
add
mov
aam
or
dec
mov
lods
std
loop
xchg
push
rcll
cmpsl
clc
add
out
adc
test
mov
insl
mov
add
jg
cmpsb
loope
adc
insb
cmp
pop
mov
mov
add
loope
imul
or
fnsave
add
out
push
imul
ljmp
inc
daa
xchg
hlt
sbb
mov
lret
es
mov
pop
add
cmpsl
jecxz
mulps
leave
adc
push
sub
sbb
das
movsb
bound
add
mov
cmp
xchg
test
test
or
pop
repnz
adc
jg
jbe
pop
shl
iret
adc
hlt
sbb
pop
stc
repnz
sub
int3
dec
xchg
inc
cmp
or
in
into
xchg
in
insl
add
inc
mov
jecxz
test
cmp
cld
sub
sub
insb
fidivl
cltd
subb
mov
sub
jmp
test
xchg
insb
xor
jmp
push
xchg
or
cmp
ljmp
popf
xor
lods
and
mov
rcl
mov
mov
adc
mov
and
addr16
pop
adc
add
shll
fs
lock
paddw
sbb
sbb
push
cmpsl
mov
int
xchg
pop
repz
add
fwait
adc
pushf
in
test
andb
push
add
xchg
fnsave
adc
fdivl
add
fnstenv
push
pop
add
mov
pop
popa
add
testb
add
testb
mov
xor
lods
xor
into
leave
lret
rolb
scas
dec
popa
xchg
add
fimull
cmp
frstor
shll
das
stc
cmp
add
xor
insb
movsl
mov
push
aas
xor
mov
cs
out
mov
jo
fldenv
fidivrs
mov
gs
pop
imul
dec
outsl
into
sub
cli
dec
cltd
dec
fcoml
fdivr
jl
dec
xor
dec
sbb
add
mov
and
jmp
sbb
cmpsl
sub
mov
sti
lcall
push
or
test
mov
stos
xlat
mov
js
mov
nop
pop
scas
sbb
inc
pop
imul
cs
jne
mov
jns
aas
or
pop
dec
leave
jecxz
rcrl
mov
mov
movsl
adc
mov
mov
je
std
lds
add
jne
xor
sbb
push
insb
mov
xchg
je
sub
dec
clc
stos
outsb
ja
push
dec
inc
test
out
adc
mov
dec
stos
inc
outsl
lahf
pop
mov
pop
push
xchg
jmp
dec
stos
out
sbb
jl
add
mov
adc
cmc
outsl
and
icebp
es
xchg
sbb
push
xor
pop
sbb
pop
xchg
lret
in
mov
arpl
jge
sub
test
mov
lock
fucomp
cld
testb
jp
mov
push
out
fisttps
enter
push
std
lcall
das
sub
mov
xor
cld
cmp
add
iret
cli
dec
icebp
pusha
mov
add
fistpl
jg
loope
xchg
xor
jae
mov
ret
and
iret
dec
lcall
cmp
xchg
mov
pop
jecxz
xor
mov
push
add
inc
pusha
fmul
pop
inc
add
pop
ljmp
int
daa
adc
dec
inc
mov
ss
inc
stos
daa
insl
enter
push
pop
pop
add
int3
aam
jae
mov
mov
fstpt
popf
or
mov
or
popf
lods
les
cmpsb
xchg
movsb
hlt
in
cmp
stos
dec
ljmp
inc
les
fisttpll
popa
lret
nop
cmpsl
jle
mov
insl
xor
test
xchg
in
add
lahf
cli
test
lods
jnp
mulb
cmpsb
push
int3
dec
sub
out
int
rcl
adc
mov
inc
test
test
popa
pop
ds
addr16
mov
and
push
in
pop
mov
xchg
jns
lahf
orb
add
imul
jb
lret
mov
add
mov
mov
in
sbb
mov
xchg
mov
pop
rorl
sub
add
cld
pop
shlb
sahf
cmp
dec
mov
xchg
or
loope
fsubrl
pop
cs
xor
cs
and
out
sahf
or
aaa
dec
jg
inc
fnstcw
ret
inc
or
aas
popa
inc
mov
in
sbb
mov
or
mov
es
out
jl
lods
jg
test
xor
cmpsb
scas
ret
outsl
jle
loop
jle
sub
xchg
dec
jo
cmovle
add
dec
or
pusha
mov
movsl
sti
es
lret
dec
sub
imul
std
push
cmp
xor
stos
gs
dec
pop
pop
jecxz
inc
adc
xor
cmpl
adc
mov
arpl
push
insb
jge
cmpl
ror
mov
and
pop
imul
push
jbe
adc
sub
or
addr16
jb
mov
dec
into
out
pop
into
leave
std
arpl
aam
arpl
sub
jne
gs
and
test
js
add
mov
popf
lea
sbb
sub
sub
inc
or
adc
cmpsb
test
mov
ret
mov
push
xor
xchg
aad
lahf
mov
mov
jmp
es
jge
xor
mov
and
mov
or
sarb
adc
cmp
test
scas
rolb
sub
xchg
fdivrs
dec
stos
mov
push
lret
or
mov
xchg
mov
outsl
push
stos
mov
adc
or
enter
pop
insb
sbb
leave
call
adc
lds
mull
mov
mov
pop
cmp
and
xor
mov
lock
sbb
test
jo
gs
cwtl
lcall
jns
xchg
movsb
inc
insl
adc
jb
push
cmp
xlat
lods
sub
xor
pop
aad
xor
std
xchg
ds
aad
fs
pusha
fdivp
push
xchg
dec
fists
out
js
pop
sarb
mov
xchg
aad
ds
mov
mov
pusha
ljmp
mov
out
pop
mov
dec
xor
mov
ljmp
adc
es
xchg
nop
xchg
cld
push
test
xchg
sub
icebp
mov
fbstp
xor
stos
nop
repz
xorb
scas
adc
cmp
or
divl
mov
pop
lods
mov
dec
or
adc
add
xchg
push
mov
scas
jmp
and
push
cltd
aas
pop
icebp
add
cmp
sbb
addl
cmp
test
mov
cmp
repnz
xchg
nop
xchg
fidivrl
sbb
inc
pop
pop
out
pop
pop
rclb
test
adc
or
test
dec
pop
out
sbb
dec
ret
out
nop
lock
mov
mov
cmp
adcb
pop
cmc
data16
xorb
jno
adc
adc
mov
mov
imulb
ficomps
outsb
xchg
outsl
jge
jno
scas
mov
and
mov
push
das
lret
jae
sbb
ret
sbb
adc
xor
mov
sbb
inc
pushl
lds
loopne
mov
insl
sbb
ret
pusha
icebp
push
cmp
sub
mov
jecxz
hlt
jge
xor
push
mov
and
lods
xchg
mov
pusha
test
mov
jp
sbb
movsb
dec
bound
loop
jno
sahf
mov
push
lret
shl
xor
fldcw
pop
lahf
jge
cld
test
lods
nop
dec
lret
sti
popa
adc
sbb
rolb
sbb
popf
adcb
in
sarb
xchg
fistpll
mov
mov
inc
ss
fldt
xor
stos
adc
fcomp
cmp
mov
push
roll
push
xchg
pop
cmp
popa
ljmp
mov
into
es
adc
cmp
pop
push
or
cmp
out
fs
stos
lcall
gs
jge
imul
xchg
sub
push
add
xor
mov
mov
cmp
inc
mov
jno
ja
xchg
js
push
ror
rorb
cmp
dec
aad
in
push
shll
adc
inc
pop
push
inc
mov
ret
roll
pop
les
sahf
fldcw
addr16
cmpsl
outsb
pushf
out
cmp
jne
ja
mov
negl
cmpb
push
loop
mov
negl
jb
lds
ds
loope
movsl
add
inc
dec
sbbb
ss
sbb
iret
repz
or
mov
lret
xchg
mov
mov
adc
push
sub
mov
dec
mov
loopne
iret
mov
adc
mov
sbb
idiv
sbb
movsb
imul
in
push
cld
cli
orb
jg
popf
outsl
dec
or
insb
pop
dec
jg
popf
lock
cld
shl
jo
add
push
cmp
inc
cmp
cmp
iret
or
inc
jecxz
dec
mov
mov
dec
out
filds
xchg
push
stc
xor
xchg
stos
shrl
add
mov
loopne
adc
lods
dec
repnz
rcrl
je
adc
ror
pop
push
das
movsb
jmp
add
aaa
jp
mov
lods
icebp
adcl
inc
ja
cld
shufps
or
fwait
aad
mov
push
sti
clc
cmc
xchg
xchg
push
mov
cmp
test
inc
int
call
cmpsb
or
push
int3
mov
mov
iret
dec
ljmp
pop
leave
sbb
jle
pop
mov
sub
popf
cmp
cmpsl
popf
test
mov
mov
idivl
xchg
mov
adc
ja
inc
mov
shrl
call
dec
pop
cld
inc
push
mov
dec
jmp
dec
mov
stos
pop
leave
lret
out
cmp
cmp
sti
mov
int3
inc
in
iret
lret
dec
test
clc
add
push
inc
inc
in
pop
inc
les
dec
cmpsl
pop
fidivrl
jbe
imull
or
mov
addr16
xor
ss
faddl
test
xchg
std
pusha
pop
sbb
mov
cwtl
adc
xlat
ds
outsl
dec
sbb
ss
and
add
or
inc
popf
push
mov
xorb
shr
adc
je
dec
mov
inc
out
scas
in
inc
fnstsw
repnz
add
test
cmc
sahf
cmp
sarl
cltd
jg
mov
lret
stc
xchg
push
jmp
push
sub
cmp
std
cmpsl
jg
les
loopne
call
int
inc
mov
jmp
push
stos
or
mov
jl
popf
inc
add
leave
dec
dec
xchg
aas
dec
sbbl
and
cmp
sbb
jp
shlb
cmp
mov
fimuls
fwait
mov
nop
push
mov
jmp
shr
push
cmp
scas
or
lds
movsl
test
mov
mov
in
or
sub
adc
pop
jp
jg
dec
mov
jbe
xlat
aaa
lods
call
and
jo
sub
cwtl
sbb
js
outsl
test
cmp
repnz
out
adc
sbb
out
mov
sti
cmp
push
or
jb
pop
pop
mov
push
imul
pop
repnz
shll
outsb
dec
ljmp
iret
cmp
gs
dec
or
lahf
xor
xchg
pop
call
and
sub
test
cmp
std
mov
or
adc
icebp
xchg
sub
xrelease
and
adc
push
sbb
mov
cwtl
hlt
in
push
inc
insl
sti
xchg
sub
test
loope
je
push
jo
cwtl
and
inc
insb
xchg
mov
cmp
sbb
test
aad
jb
pop
mov
loopne
lock
aas
add
sbb
stos
jp
ss
cs
push
repz
jb
test
push
es
fists
sbb
pop
and
hlt
orb
mov
out
cmc
add
dec
loope
fldcw
aad
ret
shll
cmp
mov
dec
sti
sub
cwtl
test
xchg
mov
xchg
mov
add
xor
ret
cltd
lahf
mov
sub
add
ljmp
movsl
jbe
or
xor
sub
jmp
jmp
test
pushf
lret
sub
or
mov
cs
shrl
lods
mov
pop
aad
adc
pop
add
xor
adc
out
cmp
mov
jl
xchg
movsb
seto
sub
test
push
loop
xchg
jns
sub
mov
sub
enter
rorl
xchg
sbb
shlb
stos
int3
mov
and
scas
mov
cmp
dec
leave
adc
cmp
dec
int3
push
mov
push
and
pop
adc
mov
cmp
push
mov
jg
insl
nop
cmp
repz
pop
add
sub
mov
in
sbb
pop
and
sbb
ret
cmpb
push
xchg
or
mov
mov
xor
inc
mov
mov
mov
and
sub
xchg
inc
aas
sub
push
iret
pop
insl
adc
addr16
pop
fdivl
cmp
stos
xchg
push
pop
test
clc
pop
add
inc
ficomps
xor
ret
xor
jg
inc
cmpsb
jecxz
leave
pop
test
mov
xor
mov
mov
push
leave
in
hlt
xchg
add
outsl
and
push
ljmp
cmp
pusha
out
fnstenv
js
arpl
push
jb
enter
std
mov
lea
inc
enter
or
mov
push
jne
jge
xor
push
call
mov
and
jp
mov
loopne
push
inc
imul
mov
pop
cltd
inc
out
lret
add
in
or
jl
cmc
mov
cmc
jbe
bound
xorl
adc
adcb
das
loope
cli
loop
inc
push
xor
mov
sbb
mov
xor
and
dec
pop
dec
xorl
js
dec
jo
sti
icebp
aas
pop
inc
in
repz
mov
rol
flds
es
scas
ret
imul
cltd
ret
aaa
mov
pop
cmp
aaa
outsl
cmp
test
ds
jg
int
jb
clc
mov
daa
stos
addb
cld
inc
cmp
iret
inc
fmull
enter
dec
inc
lret
xor
sbb
pop
push
loope
bound
push
inc
inc
aad
push
lds
cltd
inc
inc
fdivl
or
mov
mov
jg
adc
cmp
jle
and
xchg
jge
insb
popa
es
adc
xchg
push
push
mov
icebp
mov
fsubl
inc
mov
adc
inc
mov
mov
iret
add
clc
or
ja,pt
out
add
xchg
mov
stc
xchg
test
mov
dec
inc
adc
sbb
jle
mov
sub
mov
adc
js
aaa
pop
sbb
push
scas
adc
add
jp
cwtl
jg
push
or
scas
aam
adc
add
repnz
or
dec
lds
imul
push
and
xchg
ljmp
jl
jl
push
pop
test
inc
ljmp
test
ljmp
repz
aaa
test
xor
test
xlat
sbb
inc
pop
iret
add
test
loope
add
xor
mov
gs
bound
mov
cmp
data16
dec
clc
popa
cmc
pop
in
inc
or
cmpsl
xor
cli
jecxz
cmc
int
dec
repnz
insl
pop
loope
lret
or
imul
movsl
lcall
das
das
mov
addr16
lcall
and
pop
add
mov
add
jae
aaa
mov
shl
push
jnp
fildll
bswap
sub
xor
push
dec
add
arpl
and
and
cmp
xor
in
jge
adc
cli
pop
out
mov
fisubs
lahf
jns
daa
fs
sub
push
leave
cmp
inc
xlat
push
mov
loope
sahf
fstpl
pop
jg
mov
mov
push
inc
jmp
sub
xchg
jno
nop
xlat
je
sub
pop
shrb
sarl
imul
ljmp
jne
fisubrl
inc
ret
ret
outsl
xchg
or
push
call
jp
adc
andb
and
push
jmp
xchg
aam
jae
out
fwait
sub
dec
sub
popf
adc
jno
sub
aad
sub
imul
xchg
in
cld
cs
xor
xchg
push
int3
enter
add
bound
cmpsl
jp
icebp
fs
test
out
lahf
mov
stc
imul
sbb
inc
pusha
outsb
add
inc
ret
sar
inc
cld
sbb
cmc
fcmovb
daa
xchg
mov
imul
inc
or
dec
jmp
jne
stos
mul
dec
or
in
cmp
popa
jno
add
sub
jne
aas
inc
cli
jno
and
jg
mov
xor
out
pusha
sbb
pop
out
push
pop
insl
lea
push
mov
mov
push
jns
inc
and
lods
add
mov
jg
xor
lret
dec
adc
cmpsl
and
lea
daa
sbb
xlat
pusha
adc
xchg
dec
orl
push
cli
push
mov
decl
adc
cwtl
fiadds
xchg
pop
push
dec
stc
xchg
adc
mov
or
and
lods
mov
cs
push
sub
les
jae
ret
ror
or
jmp
push
orb
leave
cli
sub
stc
insl
in
pop
pop
enter
aam
ljmp
sbb
js
jle
mov
pop
xor
insb
jns
cmpsl
mov
fdivs
in
rorb
fdivl
mov
outsl
xchg
cmp
mov
dec
xor
jae
add
push
cmp
or
pop
xor
xchg
push
lods
jg
or
mov
mov
mov
bound
xor
shrb
imul
les
ret
push
or
pop
jle
mov
pop
stos
ret
jl
inc
inc
in
fstps
out
cld
add
mov
inc
sub
out
cltd
lcall
mov
xchg
test
arpl
jne
dec
push
rorb
movsb
stc
movsl
popa
sbb
ljmp
mov
inc
mov
sahf
pop
sub
adc
icebp
and
jno
pop
mov
stos
fistps
test
in
xor
cmp
ljmp
dec
pop
hlt
jmp
add
gs
daa
std
cmp
mov
and
inc
mov
cli
mov
xchg
cmp
shrb
sbb
fld
push
fmuls
mov
hlt
sbb
daa
cmc
jge
push
lea
xor
inc
xchg
out
mov
js
iret
inc
ret
sub
xchg
push
mov
push
fidivrl
sbb
cld
mov
push
mov
lcall
fs
testl
outsb
jae
and
push
add
loope
jmp
sbb
xor
outsb
les
fs
les
sub
jle
xor
test
sbb
mov
mull
scas
sub
int3
addr16
mov
mov
cmc
shrl
jno
pop
inc
movsl
rolb
jnp
insl
dec
pop
inc
sub
insl
enter
cmpsl
fwait
mov
add
addb
sub
inc
inc
sbb
mov
outsb
add
cmp
aam
cmp
fstl
mov
dec
adc
inc
push
jns
and
fnsave
inc
mov
mov
pushf
pop
dec
faddl
fisttpll
imul
ss
sbb
sbb
or
mov
adcb
cmp
lcall
xchg
mov
cld
lods
cwtl
in
ds
js
test
adc
popa
iret
cs
jo
sub
inc
push
stos
xchg
dec
jno
pop
adc
pop
cmp
or
xchg
mov
mov
push
sub
fcomip
mov
mov
add
or
data16
inc
dec
pop
push
pop
in
shrb
push
xchg
leave
jne
sbb
push
cmp
sub
or
jmp
or
sbb
mov
rcl
sub
lock
mov
push
enter
jae
loopne
and
adc
loope
jl
daa
ret
pop
int3
insl
sub
mov
lea
jo
lds
push
dec
loop
lret
pop
jbe
adc
scas
inc
mov
add
mov
push
or
mov
push
and
and
adc
je
negb
sbbb
loopne
shlb
xlat
lods
ficoml
or
jne
rorl
sub
cmc
lock
add
out
sbb
cmp
adc
adc
sub
shll
and
push
mov
andl
gs
daa
and
dec
push
mov
mov
repz
loop
cli
or
pop
mov
xor
aaa
jg
rcrb
pop
gs
push
negb
add
cmp
fadds
push
dec
pop
rclb
test
sbb
fs
push
sahf
out
out
adc
add
pop
mov
jl
daa
in
push
loop
das
insl
xchg
and
in
mov
mov
cmpsb
mov
lock
in
in
xchg
js
insb
xchg
add
mov
test
insl
inc
clc
jl
outsl
dec
cltd
mov
faddl
dec
int3
fmuls
fildll
dec
push
dec
and
push
mov
popa
cld
adc
jle
push
push
int
hlt
stc
mov
cltd
add
into
jmp
push
ds
pop
jl
inc
mov
aad
adc
push
dec
loope
jge
sbb
cltd
fists
jmp
xor
xor
jns
jmp
xorl
popf
loope
or
mov
or
int
inc
leave
sub
pop
push
fildl
push
dec
or
fsubrs
pop
int3
rcrl
out
idivb
addr16
sub
jle
ds
xorl
pop
xor
sbb
inc
xor
loop
mov
sti
lock
fmull
cld
lea
xorl
sbb
mov
cmp
mov
fsubrs
mov
inc
cmc
sub
push
lds
aas
mov
rorl
iret
loopne
jge
xchg
enter
nop
movsl
adc
xor
push
xchg
sub
push
push
and
ja
rolb
iret
jns
dec
sbbl
xor
mov
mov
xchg
test
push
fldenv
dec
rcll
xchg
xlat
rcll
ds
push
lea
mov
das
ja
pop
xchg
ljmp
outsl
lock
pop
insb
dec
push
mov
cmp
mov
mov
and
adc
test
fadds
lret
pop
xor
sub
adc
loopne
shrl
lea
fnstenv
sbb
arpl
dec
cmp
dec
mov
mov
test
push
jmp
movsb
out
or
push
mov
and
lock
mov
je
push
jg
mov
push
inc
xor
aad
push
ror
mov
dec
push
shlb
in
xchg
inc
notb
arpl
xchg
xchg
add
or
or
xor
imul
inc
inc
adc
jl
pop
xlat
pop
xor
xor
lret
mov
subl
sahf
stos
lcall
jle
jne
scas
pop
test
mov
mov
lods
xor
movsb
sbb
pop
fcompl
mov
sub
out
or
fmulp
pop
cmpl
or
jo
aaa
mov
sbb
fmuls
jbe
sub
pop
in
test
leave
ljmp
daa
fbstp
cwtl
xor
push
jno
mov
xchg
into
cmp
dec
or
das
mov
out
push
jo
flds
sub
mov
dec
jne
mov
xchg
jp
sbb
shll
sbb
std
cwtl
loope
ja
daa
shr
mov
pop
adc
add
and
in
cltd
xchg
push
mov
push
repz
cmc
jb
daa
jno
ret
stos
push
ss
xor
push
pop
xorb
test
ss
add
pop
dec
mov
push
push
loopne
cwtl
jno
and
aad
fistpl
jnp
arpl
inc
rcrb
jo,pt
jbe
arpl
dec
inc
mov
add
pop
jae
push
je
mov
test
and
movsb
push
xor
dec
or
mov
in
mov
sbb
adc
jecxz
pop
andb
jg
mov
mov
dec
cmpsl
xchg
iret
sbb
push
xlat
movsb
jg
ret
les
mov
fistl
pop
js
test
push
jge
out
dec
pop
int3
shrl
aad
jnp
sub
imul
scas
sbbl
enter
mov
push
stos
cmc
mov
ror
add
lods
pop
loop,pn
jg
add
stos
das
jl
andl
cwtl
dec
mov
popf
shll
dec
stc
rclb
jl
leave
inc
dec
xchg
int3
push
and
scas
scas
out
lock
inc
js
aad
out
pop
clc
sub
inc
movsb
push
or
sub
xchg
sbb
mov
shl
inc
ljmp
sub
es
rcrb
loop
call
inc
clc
or
rcrb
jge
xor
repnz
inc
push
mov
mov
jne
add
pushf
nop
pop
out
into
or
sub
and
xchg
adc
mov
insb
testb
pop
es
jbe
sub
pop
pop
aam
adc
out
pop
pop
or
mov
mov
jae
adc
jl
lcall
push
test
cmp
lds
sbb
int
adc
popa
mov
repz
xchg
mov
sbb
or
sbb
sbb
imul
pop
cwtl
test
addr16
xor
dec
sub
aas
mov
sub
inc
movsl
push
add
or
scas
lahf
test
mull
fcmovnbe
xor
int
xor
sub
pushf
adc
gs
sbb
jno
push
cmp
inc
in
lret
test
cmpsb
cmp
testb
sub
int3
jge
jmp
insl
mov
add
xchg
loop
pop
pop
popa
inc
inc
cmp
int
cmc
fistpl
pop
sbb
xor
fadd
rol
sbb
cwtl
xor
adc
xchg
mov
push
dec
cmpsb
jno
dec
jmp
stos
adc
jbe
adc
ds
push
push
inc
xor
sbb
jg
scas
dec
mov
xchg
ffreep
cmpsb
insb
push
mov
jmp
push
lds
dec
xchg
mov
popf
or
xchg
pop
fldenv
add
adc
jmp
xchg
enter
aad
out
pop
sub
test
mov
rolb
aas
adc
sub
mov
mov
scas
mov
add
mov
xor
inc
cmp
cmpsb
mov
and
and
mov
fildl
rorl
jg
in
loope
sub
lds
shr
sbb
mov
push
test
inc
aad
int
cltd
inc
insl
subl
push
dec
dec
or
inc
inc
repnz
mov
sti
and
imul
and
cwtl
jge
mov
shrl
dec
into
xchg
imulb
push
mov
dec
cmp
cwtl
or
jbe
ja
push
lods
lcall
imul
cmp
lahf
test
mov
jo
imul
xchg
dec
ljmp
shll
adc
xor
addb
pop
subps
stos
dec
ss
pop
sbb
stos
jnp
dec
mov
xchg
nop
in
or
lock
out
pop
jp
cmpsb
loop
xor
divb
test
xor
fsubl
or
lds
push
adc
dec
gs
cmp
add
cmp
or
test
popa
insb
add
mov
nop
jne
adc
mov
or
sbb
or
sbb
add
addr16
xchg
pop
das
mov
xor
rcr
pop
pop
sarb
mov
in
adc
sub
repz
test
sub
mov
fstpt
and
xor
inc
aaa
loopne
cmc
lcall
stc
int
add
scas
push
mov
sub
cmp
aaa
xchg
push
pop
rcll
mov
pop
mov
pop
cmpsb
and
add
add
inc
cli
xor
sbb
mov
movsb
test
add
sti
mov
shr
gs
sbb
xchg
ss
out
aam
lods
das
xchg
pop
sbb
xchg
and
hlt
jp
sbbb
mov
jae
lea
sbb
adc
and
into
out
sub
dec
pop
dec
stos
pop
dec
dec
xorl
cwtl
sbb
cmp
xchg
sub
data16
mov
push
pop
sub
dec
stos
inc
mov
repz
add
shl
popf
lret
popa
jae
mov
xor
shlb
mov
js
scas
jle
sarb
or
imul
sbb
out
scas
lea
shll
movsb
jns
adc
xor
das
clc
xchg
xor
sbb
adc
cmp
addr16
es
sub
or
add
int3
bound
xor
shrb
fdivs
std
mov
out
xchg
sub
enter
out
jo
cmpsb
mov
add
mov
sub
push
test
mov
movsl
gs
sub
lahf
mov
les
cmpsl
and
gs
pop
hlt
imul
out
jmp
rolb
lock
mov
mov
mov
dec
int
jb
jns
and
ljmp
or
and
cmp
dec
cmp
push
loop
add
out
adc
dec
sbb
stc
or
inc
pop
scas
imul
int3
jno
cld
scas
cwtl
dec
jle
push
push
add
xchg
and
mov
adc
push
or
arpl
mov
in
xchg
jnp
dec
and
sbb
xchg
clc
fld
cmp
xchg
imul
andl
lcall
mov
leave
sbb
lahf
xchg
mov
sub
out
hlt
pop
xchg
into
mov
push
aas
inc
es
cld
push
stos
xchg
loop
js
or
mov
xor
xchg
call
es
arpl
rcrb
add
pop
inc
or
dec
mov
lods
stos
sbb
push
out
jmp
adc
rclw
mov
push
jg
push
stos
pop
inc
push
jmp
mov
inc
cmc
pop
js
jb
dec
xchg
es
pop
test
stc
test
pop
xchg
mov
push
push
push
aaa
outsl
push
ljmp
inc
fbld
pop
mov
xor
daa
pop
or
xchg
adc
cwtl
insb
sub
aaa
js
ret
adc
call
jb
fidivrs
push
lcall
mov
mov
mov
pop
ds
lods
and
loop
pop
cs
and
int3
or
push
pop
data16
lcall
int
ror
jo
pop
lahf
popa
push
js
pop
push
jl
push
mov
jl
push
ljmp
mov
xor
sahf
push
jb
daa
out
xor
push
ret
jge
adc
and
dec
subb
int3
mov
push
iret
out
xor
mov
cli
sbb
loop
mov
int3
gs
loop
mov
in
sti
sub
test
cltd
xchg
fdivr
imul
inc
pop
adc
xor
mov
jae
jmp
lock
mov
clc
std
sahf
mov
mov
mov
jno
decb
sbb
divl
xor
and
pop
xor
out
jbe
inc
jle
cmp
mov
outsb
add
fs
push
pop
inc
mov
sbb
ljmp
nop
fs
xchg
xchg
stc
xchg
dec
pushl
mov
in
pushf
and
cmp
xor
adcl
push
fld1
bnd
out
dec
xchg
mov
xor
rcll
rdmsr
push
es
imul
js
enter
push
divl
jmp
xchg
or
dec
in
lods
inc
ljmp
mov
jb
mov
mov
cwtl
mov
outsl
in
movsl
fstl
int
int3
repz
popa
add
xchg
test
jmp
out
pop
lods
inc
les
aam
sbb
jg
jecxz
inc
dec
in
out
bound
pop
push
push
icebp
cmp
cwtl
popf
and
pop
mov
sub
arpl
rorl
cs
lods
push
xor
jno
xchg
pop
jle
jl
pop
out
sbb
push
aaa
fcmovnbe
mov
xlat
in
mov
hlt
adc
mov
stos
outsb
xchg
call
scas
lahf
jg
cs
iret
cmpsb
push
push
jae
adc
shl
fs
mov
sub
mov
dec
gs
sub
imul
or
pushf
pop
mov
and
ljmp
idivl
adc
scas
shll
addb
pushf
push
jnp
inc
lret
mov
fisttpll
cmp
pop
mov
imul
or
mov
pop
sub
inc
xchg
jne
rolb
lock
cmp
jecxz
pop
ret
mov
jmp
pusha
cmp
mov
daa
arpl
sub
or
fiaddl
negb
cmp
dec
mov
add
push
out
pop
out
in
dec
inc
gs
scas
xchg
testl
daa
dec
stos
mov
les
addr16
push
mov
cmc
sbb
cmp
ja
dec
mov
hlt
mov
add
stos
inc
jle
frstor
out
sbb
rol
push
stos
mov
or
dec
adc
mov
insb
out
and
js
push
sahf
pusha
call
mov
lcall
dec
ret
inc
ja
jne
stos
xchg
nop
or
pop
or
test
notl
lods
mov
mov
ja
cs
jbe
dec
push
vxorps
cltd
jne
stos
inc
outsl
cltd
jecxz
stc
call
stos
movsb
cmp
jge
dec
jo
sbb
push
loop
icebp
sbb
cmp
ret
leave
sub
inc
push
stc
jp
inc
cwtl
les
mov
cli
mov
sbb
xlat
and
nop
mov
sti
call
fsincos
dec
push
dec
jb
flds
xchg
adcb
iret
cmp
xchg
lcall
dec
pop
out
test
arpl
jmp
insb
mov
sbb
mov
loopne
cmp
jnp
or
xchg
mov
mov
push
testb
and
jae
call
jno
sahf
sub
jb
flds
call
rol
sub
addr16
les
or
pop
sub
xor
shll
outsb
mov
in
sti
push
aad
insl
cmp
inc
ror
in
lahf
mov
push
pop
jl
xor
sub
inc
out
mov
fidivrl
aaa
dec
stos
bound
adc
sub
mov
lret
or
mov
int
cmp
mov
orb
cltd
pusha
inc
xchg
addr16
push
pop
test
xor
std
cmp
push
and
nop
addr16
movsb
push
jb
movsb
shll
loop
aam
adc
insl
cltd
pop
or
es
sarb
xchg
mov
or
mov
cs
inc
nop
pop
push
jmp
icebp
adc
mov
adc
roll
push
xor
pop
sbb
xor
xor
test
ds
clc
cld
or
loope
xor
test
and
cltd
je
iret
fs
cmc
push
addl
push
nop
ljmp
jge
shrl
jmp
adc
and
jecxz
sub
and
add
jnp
jle
push
dec
out
mov
xchg
mov
push
in
xchg
jg
push
hlt
mov
mov
ljmp
push
or
test
xor
aaa
jne
lds
ret
out
daa
aad
pushl
add
cmp
add
and
into
mov
jne
and
push
inc
test
aas
dec
fsubl
dec
mov
lret
aas
lret
pop
orl
out
pop
out
pop
and
cmp
das
scas
adc
outsb
mov
rolb
inc
inc
sbb
push
into
lods
jmp
or
xor
mov
mov
sub
dec
es
xchg
incl
cmpsl
or
cmp
or
lds
cmp
inc
out
stos
mov
adc
rcr
adc
rcrl
ljmp
nop
movsb
imul
mov
add
add
inc
arpl
lods
jmp
pop
xor
pop
aad
jae
pop
scas
xor
leave
fs
dec
ja
and
sub
test
push
jecxz
mov
loopne
mov
cld
mov
out
test
sub
push
and
rolb
or
jnp
jae
out
add
in
in
sti
ljmp
iret
xchg
dec
sbb
je
cmp
sbb
mov
push
shl
das
imul
push
idivb
push
xor
into
add
sti
adc
or
sub
mov
sub
loop
inc
gs
adc
jb
movsb
inc
mov
stos
mov
lods
adc
daa
es
in
sahf
push
inc
icebp
jo
sub
push
sbbb
xor
xchg
shrl
inc
testl
lret
mov
jl
testb
sub
push
rcll
mov
cmp
aam
or
dec
mov
lcall
and
push
std
mov
stos
inc
je
xor
cmpsl
and
push
mov
jno
ds
popa
bound
xor
lcall
jns
ficoms
or
add
add
jge
push
stos
lods
mov
nop
xor
cwtl
push
pop
dec
stos
imul
or
sahf
mov
push
and
in
mov
adc
inc
fisubrl
jmp
mov
imul
mov
pop
xor
mov
aas
push
rolb
inc
xchg
push
dec
lds
idivl
cmc
pop
dec
jg
add
fistps
test
insl
xchg
divb
lret
lea
jnp
xchg
push
outsb
pop
outsl
or
mov
adc
in
fadds
addr16
adc
stos
imul
dec
lret
leave
pop
jae
or
fimull
sbb
arpl
int3
mov
shlb
in
jae
sub
pop
data16
and
jb
dec
mov
cmp
cmpsl
mov
rcrb
mov
fnstsw
adc
and
loope
fisubl
mov
insb
mov
xchg
scas
jecxz
int3
and
xchg
jo
jmp
mov
mov
sub
push
stos
scas
pop
adc
lcall
cmp
jae
addr16
sub
jle
mov
repz
ds
mov
dec
lcall
aaa
jg
xor
mov
pop
aaa
fs
push
out
pop
mov
xchg
repz
jle
lods
das
dec
sub
testl
push
push
repnz
inc
shll
jl
xor
lahf
and
push
in
roll
scas
adc
push
mov
sbb
cmp
inc
subb
fimuls
cmc
add
push
mov
es
movsb
es
mov
ret
loopne
cmp
push
mov
mov
fcompl
or
into
cmp
rcl
or
jmp
dec
roll
das
jmp
cmp
loop
mov
ja
and
lods
xor
pop
inc
jb
and
in
pop
adc
mov
xlat
jle
stc
mov
push
adcl
mov
mov
test
ret
ljmp
hlt
mov
or
cwtl
push
repnz
xor
xchg
sub
jmp
adc
lret
in
or
add
test
cmp
pop
push
inc
and
arpl
dec
mov
int
or
push
sbb
jl
mov
pop
mov
lods
push
xor
and
jmp
andb
ja
test
and
jmp
push
icebp
sbb
ljmp
mov
pop
test
rorb
ss
or
mov
movsl
cs
jbe,pt
sahf
out
jmp
xor
adc
sbb
leave
mov
lret
inc
out
adc
inc
mov
mov
jno
jbe
in
ret
push
cmp
out
jecxz
das
pushf
and
jg
outsb
xchg
aas
shrb
out
and
mov
out
jg
pop
imul
add
jbe
pop
insb
cwtl
cltd
pop
sub
je
inc
sbb
nop
xor
and
add
mov
fsubrs
xor
sub
shl
mov
popa
push
cltd
mov
push
sbb
fdivrs
xchg
aaa
incb
insb
inc
mov
shlb
adc
addr16
ja
jbe
mov
push
push
loopne
lods
jle
push
mov
testb
loop
mov
adc
inc
mov
loop
out
pop
mov
lahf
je
jbe
mov
dec
add
and
cmpsb
mov
movntps
mov
and
roll
dec
icebp
xchg
pusha
lods
pop
dec
pop
hlt
stos
add
push
adc
jecxz
mov
daa
dec
cwtl
lea
jge
repz
or
inc
jge
xor
pusha
adc
inc
push
out
imul
adc
nop
mov
pop
xchg
addr16
jne
or
cmp
scas
jns
insl
std
sbb
loop
xor
pop
add
pop
imul
mov
inc
mov
cltd
and
jne
int
pop
cltd
jl
rorl
jo
add
mov
in
jbe
inc
in
loopne
pop
mov
es
xor
popf
ja
in
pop
or
arpl
dec
xor
jo
in
mov
andb
mov
dec
and
xchg
xchg
aaa
in
popf
mov
lds
loopne
addr16
inc
mov
imul
psubusw
rcr
cmp
mov
and
movsb
pop
xor
int3
mov
pusha
dec
test
push
mov
int3
mov
xchg
into
add
lret
push
mov
pop
in
sbb
rcrl
jl
pop
iret
fwait
mov
hlt
xchg
fwait
out
and
lret
loop
jnp
les
dec
adc
in
push
arpl
add
das
jno
xchg
adc
mov
pushf
pop
mov
sbb
or
lret
jl
lock
loop
jge
mov
jp
xor
sbb
test
andl
mov
or
outsl
inc
dec
jo
or
popa
pop
or
stos
jbe
and
imul
xchg
push
sub
repz
pop
sub
and
pop
cmp
xchg
jno
cmp
xchg
stos
pop
cmp
jle
pop
push
aad
ret
mov
push
sbb
icebp
in
dec
dec
test
fistpll
ljmp
sarb
lret
insb
imul
insl
dec
pop
hlt
shl
pop
je
xchg
mov
xchg
mov
mov
add
call
add
fstps
mov
add
ss
loope
mov
and
and
or
or
mov
sbb
scas
je
fidivs
mov
cmp
stos
jns
adc
fidivrs
pop
mov
shrl
mov
jp
mov
jp
or
push
in
mov
movsb
outsl
mov
subl
adc
mov
pop
movsl
sub
cmpsl
addr16
popf
inc
leave
jl
dec
xchg
aad
cld
dec
nop
outsl
fs
stos
stc
jecxz
negb
in
std
cmc
lds
jnp
mov
ret
mov
cmpsl
out
fildll
mov
cmpsl
bound
jecxz
mov
fisubs
xor
scas
loop
test
mov
jb
ljmp
decl
mov
inc
xor
mov
push
jp
movsb
imull
add
mov
inc
insb
inc
pusha
sub
jmp
leave
and
push
sbb
add
mov
xchg
popf
fdivrs
sbb
cli
dec
pushf
not
out
ror
bound
leave
outsb
mov
dec
push
jae
inc
mov
mul
repz
ret
sti
mov
cmp
and
js
aad
jg
loop
and
inc
out
dec
lods
dec
test
in
hlt
aas
sub
cmc
std
xchg
mov
jno
lahf
jecxz
enter
aam
cmpb
add
outsl
cmpsb
sahf
jp
inc
pushf
jne
mov
gs
and
movb
cmc
or
dec
sbb
cmp
add
loopne
xor
out
stos
or
mov
sbb
dec
jo
popa
popa
std
inc
hlt
inc
bound
sub
mov
rclb
pop
in
mov
jno
add
pusha
jge
js
enter
xchg
pop
jmp
sub
test
mov
pop
xor
sub
mov
dec
mov
int3
mov
dec
mov
mov
dec
xchg
ret
ljmp
inc
mov
scas
push
aad
sbb
data16
je
sbbb
jno
rol
call
xchg
xlat
mov
call
test
xchg
inc
add
loope
mov
add
xchg
sub
or
mov
jmp
cmp
push
iret
mov
jmp
je
call
sbb
scas
pop
dec
inc
mov
xor
testl
les
xor
mov
dec
jb
lock
or
or
fisubs
sub
fwait
enter
sbb
and
jmp
scas
and
push
cld
mov
jne
mov
addr16
cmp
test
inc
sbb
fxch
mov
sub
mov
and
sti
mov
movsl
fucomp
dec
ret
lret
mov
mov
mov
and
nop
push
xchg
mov
push
mov
inc
jp
sbb
mov
mov
jg
cmpsl
roll
sub
pop
xchg
lds
cs
and
xchg
orb
mov
repnz
mov
cmc
dec
inc
stc
repz
jecxz
mov
inc
imul
adc
jmp
dec
lret
pop
stos
sub
pusha
test
mov
mov
sub
test
push
mov
inc
push
inc
call
push
cmpsb
pop
or
dec
push
sub
sub
pop
mov
add
inc
pushf
outsl
pop
icebp
insl
xor
loop
arpl
les
dec
cltd
gs
mov
pop
out
inc
scas
jl
sub
rclb
in
mov
pop
push
shll
mov
enter
xlat
fcmovnb
xchg
orl
lret
clc
and
scas
jg
ret
cmp
adc
test
sahf
shrl
xchg
jbe
xor
test
jg
fisubrl
aam
pop
mov
ja
insb
pushf
daa
adc
sbb
jle
jno
mov
jg
mov
add
mov
out
mov
xor
addl
lods
lret
lcall
insl
cmpsb
ret
and
cmpsb
push
clc
in
pop
jmp
stc
jns
add
lock
shr
enter
adc
stos
add
cmp
and
cmpsb
pop
test
jle
cmp
mov
mov
imul
jne
pop
dec
aas
push
pop
cmp
jo
sub
pop
je
xchg
repnz
push
lods
add
fwait
xchg
adc
gs
pushf
mov
je
in
or
movsl
jno
mov
in
pop
std
shll
repz
xchg
push
push
fidivrl
test
adc
lods
movsb
mov
jmp
iret
push
and
out
mov
fisttpll
sarl
sub
cld
mov
iret
addl
sub
insl
mov
pusha
mov
fmuls
add
mov
sbb
je
loope
sub
fwait
xchg
inc
sbb
dec
jg
outsb
xor
and
mov
leave
cmc
or
jne
lcall
les
lea
movsl
scas
pop
mov
aaa
mov
push
xor
sub
and
in
test
mov
cmpsb
rol
fs
inc
into
adc
rcr
mov
arpl
fisubrl
push
xchg
jnp
inc
adc
ret
mov
sti
ja
fs
clc
aas
pop
push
pusha
ret
lcall
add
in
dec
pop
sbb
cmpsl
int
outsb
xchg
lods
psrld
or
lea
mov
out
js
arpl
dec
pop
lahf
out
inc
ja
cmp
clc
cld
divb
or
sahf
jne
push
push
mov
add
pop
enter
pop
sbb
jno
imul
push
daa
gs
push
pop
in
cmpsl
repnz
dec
inc
aas
dec
cs
lods
ret
mov
in
inc
shll
lock
xor
test
jmp
mov
cltd
ljmp
rcl
ja
push
fwait
cli
insb
out
es
mov
cmp
cld
sub
or
pop
push
icebp
aas
adc
push
pop
sub
jle
mov
lret
sahf
mov
mov
dec
mov
adcb
xchg
imul
mov
repz
inc
leave
pop
ljmp
dec
lds
pop
dec
push
int
enter
stc
test
adc
lret
dec
shll
push
jmp
std
cmp
lea
outsb
insl
dec
push
jecxz
mov
lock
pop
adc
icebp
adc
mov
ror
xlat
mov
inc
adc
add
ja
add
pop
pop
sbb
cmp
js
or
aam
push
lret
adc
pop
es
loop
fimuls
js
imul
sub
mov
push
jle
enter
jp
outsb
or
mov
in
dec
inc
sbb
push
loop
pop
sbb
mov
fwait
mov
adc
xor
and
js
cmpsb
cli
fdivrl
lahf
ret
insl
ds
cmp
xor
nop
lcall
mov
mov
outsl
mov
push
xor
enter
xor
nop
mov
jno
ja
lock
jg
xlat
addr16
mov
mov
aam
out
and
fdivrl
lea
out
jecxz
jl
sbb
add
and
jnp
adc
and
jae
jno
and
jns
movsb
cmp
popa
rorl
xor
aam
lods
sub
sub
shr
outsb
loop
sti
fistps
stos
lcall
nop
and
or
int3
jmp
inc
xchg
iret
mov
cltd
add
cmp
movl
shlb
ss
rclb
sbb
jb
push
jge
xchg
mov
movsb
xchg
dec
sub
add
mov
add
push
lea
add
cmp
inc
fdivs
push
mov
bound
and
mov
dec
in
pop
mov
call
pop
lea
and
std
jecxz
orl
fldl
sahf
and
aam
push
ja,pn
pop
fisubrs
mov
cmc
ret
stos
lods
or
sbb
repnz
popa
sub
jo
jo
out
jae
dec
cld
sub
sbb
pushf
jg
dec
push
adc
dec
cli
lods
popa
adcl
in
addr16
inc
test
sti
aad
sbb
or
out
pop
andl
insl
fisubrs
daa
mov
rcrl
lahf
mov
inc
jg
and
pop
jbe
call
add
push
or
lcall
push
mov
inc
mov
or
ret
mov
ljmp
in
xchg
cmpsl
loopne
cmp
or
xchg
sub
punpcklbw
stc
cmpb
aam
push
lret
sbb
loop
test
xor
notb
fidivrl
sbb
or
inc
mov
repnz
sub
xchg
daa
fildl
push
and
insl
xorl
lods
dec
mov
adc
rcrl
mov
test
dec
xchg
or
das
mov
push
and
add
jmp
dec
stc
jne
pop
mov
test
adc
jle
mov
inc
movsb
and
outsl
xor
pop
lret
loop
mov
add
das
pop
cmc
add
hlt
pop
push
sbb
mov
pop
cmp
inc
insl
jmp
in
add
cmp
mov
add
int3
in
aad
or
imul
dec
clc
xchg
and
hlt
popa
xchg
xchg
push
int3
xor
xor
xlat
loop
pop
inc
inc
cmp
sbb
int3
enter
sbb
jge
pop
icebp
jo
pushf
mov
sbb
popf
lds
or
add
lea
hlt
decb
push
pop
mov
imul
or
insb
fwait
rcr
add
mov
lcall
jmp
mov
push
inc
mov
test
xor
xorb
add
repz
jle
xor
test
inc
sub
popf
mov
cld
stc
mov
leave
push
std
ret
scas
popa
xor
js
out
movsl
leave
fimull
ret
dec
aam
mov
push
sbb
dec
stos
xchg
inc
xor
cs
inc
ds
pop
stos
xor
mov
jp
and
and
call
shrl
cmp
inc
push
adc
mov
adc
dec
fists
pushf
sbb
sub
das
roll
test
pop
loopne
inc
push
out
pop
and
xor
lods
lods
dec
jmp
xchg
addps
inc
mov
faddl
mov
or
cmp
inc
and
cmc
jb
adc
xchg
mov
mov
xchg
pop
push
dec
pop
dec
push
xor
pop
lret
leave
lret
push
pop
push
inc
push
dec
xor
imul
xchg
pusha
clc
stos
pop
sbb
sti
lods
outsb
loope
imul
loope
and
aas
jae
push
and
in
dec
mov
mov
sti
int
cmpsl
cli
and
mov
cmp
das
cmp
stc
shrb
ret
out
pop
ret
push
imul
xor
add
mov
xchg
push
mov
sub
adc
pop
cmp
cmp
and
push
mov
sti
decb
or
cmpsb
push
js
mov
mov
movsb
mov
in
pop
cs
in
insl
inc
inc
and
iret
negb
mov
aaa
stos
push
mov
ja
sbb
push
rorl
or
clc
push
and
xchg
or
outsb
pop
cmpb
fisubs
xor
add
jp
int3
push
cltd
jnp
pop
imul
or
or
inc
scas
in
mov
inc
fld
sti
xchg
mov
xchg
aaa
stos
push
movsl
and
pop
insb
xchg
stc
cwtl
aaa
pop
pushf
jl
mov
push
icebp
movsl
dec
mov
xchg
mov
xchg
pop
ljmp
popf
addr16
dec
xchg
push
inc
jg
call
mov
mov
sub
stc
mov
pusha
fimuls
mov
aam
int
js
testb
aad
cmpb
inc
mov
fidivs
mov
je
xchg
xchg
mov
mov
rcrb
lods
in
stc
xchg
xchg
imul
repnz
cmp
pop
in
cwtl
adc
xor
jne
std
jge
pop
mov
cltd
add
push
lcall
and
roll
sub
pop
xorb
leave
enter
shlb
mov
movsl
cld
movsl
or
xor
aas
xor
aam
test
out
sub
fsubrs
cmp
dec
notb
jmp
cmp
ljmp
sub
push
ficoms
fidivs
lods
fildl
lods
sbb
sub
adc
es
pop
add
and
mov
dec
add
sub
data16
in
stc
sub
pop
xchg
xchg
mov
js
and
ficoml
sub
xor
or
jmp
filds
push
jno
icebp
loopne
xor
imul
mov
pop
add
int3
in
ja
push
iret
pop
adc
xchg
imul
xchg
cmp
sbb
pusha
lods
loope
pop
fs
xor
cmpb
daa
adc
and
clc
stos
push
iret
in
pop
inc
scas
push
dec
std
test
subl
push
vorpd
test
test
mov
pop
push
fists
repz
cmp
in
xchg
jbe
insl
scas
and
xor
cmp
mov
movsl
mov
daa
out
in
jae
lahf
add
sub
stc
sbb
iret
or
jmp
jle
jae
xchg
xor
fcomps
sarl
cli
leave
dec
hlt
repz
xchg
jl
mov
roll
dec
or
je
mov
fildll
mov
out
outsl
jl
mov
nop
adc
jg
test
pusha
pusha
or
xor
adc
icebp
xlat
movsl
repz
jp
imul
cmpsl
inc
shl
jb
add
xchg
push
mov
inc
ljmp
int3
aam
cmp
or
jl
or
adc
mov
mull
adc
shl
sbb
ret
jl
inc
imull
enter
jle
or
dec
addr16
aaa
mov
orb
or
pusha
dec
dec
mov
cmp
sbb
pop
inc
jns
cmp
dec
cmp
in
lahf
or
jge
int
push
in
es
das
cmpsl
fwait
cmp
pop
add
out
xor
pop
push
das
sbb
and
inc
lret
jge
or
push
rorl
cli
pop
mov
std
icebp
loope
daa
cmp
push
test
lock
xor
scas
popa
lcall
or
and
jo
lret
ja
ja
lcall
js
in
and
mov
lods
cmp
inc
sarl
adc
xor
aas
add
scas
or
fmulp
scas
out
xor
out
adc
xchg
and
cmp
and
xchg
dec
or
pushf
loopne
sub
and
push
cld
pop
ficoml
lea
dec
aad
mov
std
xor
and
data16
nop
mov
loopne
cltd
outsb
popa
jl
inc
sub
mov
xlat
push
fcomip
add
add
jecxz
in
aaa
les
cli
xchg
mov
pop
cmp
jno
insb
or
cmp
inc
notl
rol
hlt
sub
dec
xlat
adc
pusha
cli
xor
mov
idiv
and
arpl
mov
scas
xor
jg
pop
xor
sarb
inc
iret
dec
xchg
ja
jp
clc
out
ss
fnstsw
jp
pop
das
push
fnsave
iret
mov
cwtl
aad
andl
insb
int3
fimull
cs
inc
xor
call
shl
pop
sbbb
xorb
mov
pop
sahf
fildl
push
in
stos
cmpsl
mov
jp
pop
js
testb
lea
movsb
pop
xor
mov
mov
ret
sub
imul
shll
sar
xor
add
iret
sti
adc
mov
cld
push
pop
mov
cld
jo
mov
scas
jge
mov
lcall
xchg
dec
jmp
sub
aad
mov
movsl
das
leave
fadds
roll
mov
mov
lds
adc
and
adc
scas
rcll
push
std
je
xchg
in
loopne
je
mov
lcall
inc
sub
loope
pushf
xchg
adc
lea
add
movsl
mov
insb
int3
mov
stos
xchg
add
in
aaa
sahf
loopne
mov
xor
outsb
jbe
aad
pop
or
das
add
mov
adc
sti
stc
mov
xor
pop
and
iret
jecxz
cmp
xchg
gs
int
jbe
cmpsl
lock
repz
and
xchg
mov
jmp
inc
and
mov
inc
jl
popa
cmp
shrb
scas
dec
mov
pop
or
xor
adc
mov
jae
or
aaa
pop
insb
call
inc
mov
push
insl
or
adc
popa
pop
test
jecxz
sarl
test
fstpt
lock
push
mov
push
out
or
dec
roll
iret
sbb
adc
xor
sub
stos
data16
sbb
mov
lds
dec
xor
pushf
xchg
imul
mov
mov
lret
ret
stos
rcrl
pusha
ja
cmp
push
sti
mov
or
clc
lret
sub
jbe
shrb
pop
or
xlat
imulb
hlt
mov
push
adc
ja
jo
divb
test
dec
xchg
push
in
leave
xor
mov
sub
outsb
in
out
out
pop
test
sbb
movsl
push
jecxz
push
jg
or
sub
icebp
pop
sbb
add
in
fptan
inc
adc
mov
jg
cld
adc
inc
pop
cwtl
lret
adc
xchg
fwait
movsl
pop
out
cmp
xchg
inc
push
and
mov
xchg
dec
mov
mov
push
movsb
add
stos
dec
cld
sub
fwait
adc
outsl
xchg
cmp
jnp
hlt
xor
sbb
mov
add
jg
xchg
fimuls
dec
xor
or
xor
scas
push
fsubr
mov
orb
xchg
pop
daa
rcll
js
lret
clc
xchg
fld
loop
decl
sub
mulb
sbb
test
add
cmp
lea
icebp
xchg
sub
stc
repnz
xchg
lcall
xchg
stos
pushf
push
mov
fwait
adc
inc
sbb
sub
loop
mov
lods
out
adc
cli
pop
jle
adc
stos
mov
inc
push
push
jae
or
sbb
lea
test
and
into
mov
arpl
mov
inc
cmp
adc
adc
rcll
add
aam
add
lret
dec
aaa
push
cli
push
lock
adc
inc
xor
or
daa
daa
pop
push
fwait
mov
and
push
mov
mov
out
lods
push
jp
sbb
addb
sub
sahf
push
jne
outsl
scas
push
clc
mov
sub
and
fisubrs
aaa
mov
push
xchg
xor
dec
fsubs
cs
and
inc
inc
testb
ficomps
and
pop
push
inc
pop
leave
adc
push
ljmp
leave
push
mov
inc
pusha
bnd
or
and
ss
sub
sub
orl
pop
xchg
jne
push
lea
and
clc
lds
sub
mov
enter
xor
fcomp
pop
lret
lea
dec
repz
xlat
out
and
mov
stc
call
xor
pop
mov
inc
sbb
jo
xchg
xchg
outsb
jmp
scas
push
push
dec
add
inc
mov
pop
xlat
cld
fcomps
out
jg
ret
add
sti
inc
adc
mov
dec
into
adc
pushf
ja
cmp
out
rcrl
mov
adcl
and
or
pop
shll
mov
xchg
mov
call
sub
out
jnp
mul
aaa
push
in
xor
repz
popa
enter
repnz
pop
test
addb
outsb
out
mov
lret
sub
enter
addr16
repz
mov
cmp
xchg
cmpsb
or
mov
dec
sbbl
pop
aad
scas
sti
cmp
ja
pop
je
imul
sbb
push
andl
cmp
xor
mov
int3
push
inc
dec
add
mov
sub
fstpl
jge
dec
shrl
and
lret
cld
rolb
mov
gs
xlat
sub
shll
out
pop
fs
adc
mov
loope
sub
jl
mov
cmp
das
mov
lret
imul
inc
jecxz
add
push
stos
stos
add
xchg
jmp
mov
xor
pushf
push
cmc
sub
fwait
popf
aad
mov
or
and
mov
cs
mov
push
mov
xchg
div
xor
and
loope
arpl
pop
mov
scas
sbb
add
sub
movsl
ret
ljmp
repz
push
cmp
lds
mov
js
cmp
fwait
shrl
fists
xor
adc
xchg
mov
cmpsb
pop
pop
imul
out
adc
imul
lret
in
xchg
add
pop
add
push
popf
lahf
xchg
and
jb
clc
add
mov
lods
dec
jo
scas
lahf
cld
cld
cld
jge
pop
mov
add
mov
dec
fsts
jnp
bound
jmp
sbb
xchg
xchg
xor
nop
sub
sbb
popf
pop
add
cmp
lahf
lods
loop
cmp
es
push
mov
xor
aaa
lds
push
mov
out
adc
cmp
lds
push
bound
ja
cmpsw
xchg
lret
fildll
lock
das
xor
cmp
mov
dec
loope
jmp
dec
aas
bound
pop
jge
icebp
pop
dec
clc
aas
push
mov
into
test
mov
or
cmp
push
stc
sahf
adc
dec
inc
xchg
leave
mov
addl
mov
loope
addb
mov
popf
pop
push
icebp
and
scas
aas
mov
stos
cmp
mov
aad
test
lcall
add
inc
xor
inc
stos
dec
and
pop
cld
push
mov
cmp
jb
nop
pusha
adc
test
out
fldenv
outsl
sbb
ja
and
cmp
jle
stos
xor
inc
test
add
outsl
and
daa
out
insb
mov
or
lods
shlb
xchg
push
fidivrs
sbb
mov
dec
xor
inc
int
pop
test
mov
sbb
sti
sub
in
sub
push
mov
sbb
pop
lret
jb
cli
daa
imul
or
stos
leave
fmull
xchg
nop
loope
loop
fisttpll
test
xor
cmovno
mov
idiv
xor
dec
out
icebp
or
or
cmp
sub
pop
sahf
push
mov
movsb
push
mov
lock
mov
cmp
dec
pop
and
dec
loope
or
pop
insb
lret
aaa
ffreep
out
movsb
add
and
jp
sbb
cli
sahf
jle
test
call
fisubrl
mov
test
fucompp
xchg
jns,pn
sbb
inc
arpl
adc
xchg
nop
pop
arpl
cltd
push
rcll
inc
or
fwait
pop
pop
jg
jge
mov
into
js
int
mov
das
pop
decl
bound
insl
sub
sbb
sbb
mov
xchg
jge
shlb
fcmovnu
pop
pop
sub
push
adc
dec
mov
jae
cmp
or
lret
mov
lods
sbb
and
pop
fwait
jge
xchg
sbb
pop
mov
and
pop
ret
rcll
sub
add
mov
push
rcll
pushf
das
test
shrb
sub
dec
mov
js
lea
jnp
jbe
mov
leave
mov
cmpsl
xchg
data16
mov
or
push
test
loopne
mov
repnz
in
dec
xor
mov
push
mov
cmp
xchg
mov
mov
into
int3
lret
xor
out
push
arpl
jb
sub
sbb
pop
and
push
push
jl
pushf
lods
dec
stc
es
jae
inc
negb
jg
imul
add
or
ficomps
rorb
add
mov
lock
pop
jae
mov
mov
lea
shl
jnp
fldt
roll
fisubrl
enter
xor
lock
shl
iret
mov
popw
mov
aaa
mov
add
mov
int3
js
jo
and
pushf
xlat
imul
js
test
sbb
je
subl
test
mov
movsb
mov
lret
ret
movsb
std
scas
jae
push
pop
sahf
add
inc
push
jb
and
xchg
inc
adc
rclb
cmp
ret
fiaddl
and
add
mov
ret
gs
cmp
xchg
ret
adc
ret
jbe
or
mov
pusha
lock
xchg
jecxz
or
jmp
js
dec
sub
mov
aad
mov
pusha
je
sarb
cld
lods
jnp
mov
sub
jns,pn
cld
dec
and
mov
or
in
jo
jo
movsl
sub
pop
xchg
sbb
daa
inc
stos
in
cmp
shrb
xchg
imul
cmp
scas
and
loope
fidivrs
leave
jmp
or
fcom
lahf
push
arpl
jmp
iret
add
mov
inc
pop
dec
push
dec
xor
dec
adc
dec
movsb
pushf
mov
mov
push
sbb
jnp
loop
xchg
cld
xchg
jecxz
pop
pop
mov
pop
pop
lret
movsl
add
jbe
fsubrs
push
lahf
pop
mov
xchg
into
out
stos
outsl
dec
sub
xchg
lock
inc
mov
xor
push
bound
daa
clc
andl
aaa
mov
jae
dec
stos
or
mov
xlat
cmc
mov
mov
xchg
mov
add
arpl
rol
rcr
add
aaa
xlat
or
ror
push
adc
inc
push
leave
loopne
dec
jbe
pop
push
fistpl
mov
aas
addl
adc
cltd
test
pop
dec
mov
subl
xchg
in
cwtl
lret
cli
and
testl
push
pop
shll
or
shl
jle
or
add
cld
outsb
andl
mov
mov
test
int
mov
push
hlt
jns
fmulp
mov
jle
repz
mov
jmp
pushf
sarb
ss
testl
stc
lahf
aad
notl
aam
nop
add
cmc
mov
mov
or
aas
nop
mov
mov
loopne
jle,pt
std
push
lret
or
dec
jmp
sub
es
js
or
mov
fs
xor
cmp
pusha
cmpsl
aad
jns
jge
into
and
test
mov
call
sub
aam
add
fimull
mov
popf
test
lods
jl
inc
mov
cltd
sub
jg
push
aas
jg
dec
dec
cmp
into
pop
lods
sti
ljmp
pop
cmp
push
sbb
pop
or
rol
sbb
mov
ds
inc
addr16
jnp
pusha
cs
into
test
enter
das
add
fcom
test
cltd
xlat
loopne
scas
clc
mov
dec
nop
sbb
xchg
xor
mov
outsb
fwait
push
inc
frstor
sahf
ja
imul
pop
mov
jbe
cmp
rclb
loop
test
movsb
dec
std
mov
ret
test
mov
push
pop
je
in
or
xor
and
xchg
pop
add
clc
mov
icebp
fsts
arpl
pop
ljmp
daa
sub
rcrb
mov
push
sbb
sbb
stc
xchg
or
or
mov
lcall
in
in
into
sbb
jno
fucomi
es
mov
scas
test
mov
pop
repz
aas
inc
pop
add
ret
and
or
sub
sbb
data16
fisubl
dec
adc
out
jmp
sbb
je
sub
push
pop
xchg
insl
loope
push
add
fwait
xchg
fidivs
xchg
fsubrl
js
int
incb
pop
mov
out
and
dec
xchg
ljmp
ss
arpl
inc
xchg
mov
sub
mov
stos
mov
cmpsl
pop
lahf
fs
in
sub
xchg
jne
fdivl
popa
cmp
sti
mov
scas
push
call
pop
sbb
lods
jge
dec
into
jb
aas
loope
mov
or
push
lock
int
and
and
andb
add
push
adc
mov
xchg
mov
pop
jl
std
lock
stc
scas
xlat
bound
cmp
push
mov
mov
push
and
push
xchg
call
std
mov
idivl
and
xchg
mov
pusha
movsb
xorl
cmp
pop
and
dec
bound
rol
and
test
and
lds
leave
movmskps
sti
aaa
into
leave
pop
je
mov
jp
xchg
cli
jp
or
xorl
and
addr16
jbe
inc
mov
adcl
push
sbb
addl
fdivrl
xchg
cmp
pop
add
ss
into
into
iret
out
in
dec
jae
call
fisubl
pop
cmpsb
push
andb
or
cmpsl
adc
add
inc
in
mov
addr16
cmp
bnd
mov
dec
loopne
js
sarl
inc
or
js
sbb
xchg
sbb
and
push
mov
mov
fistl
fdivr
xchg
in
mov
dec
es
int3
mov
xchg
push
pop
sub
mov
std
aas
cmp
rcrb
arpl
xor
sub
pop
dec
sub
fisubs
pop
xchg
sti
pop
mov
fwait
int
repnz
xchg
cmpsb
or
daa
adc
das
je
jg
add
jmp
lock
pop
fidivrl
inc
cmpsb
dec
xchg
cltd
sub
popa
add
xchg
fildll
repnz
pushf
in
push
pop
enter
pop
notb
jg
mov
sub
fistpl
inc
jecxz
fwait
and
inc
add
push
jl
jnp
iret
xchg
in
fwait
imul
cmp
xor
push
sub
ret
not
inc
sub
lret
sbb
dec
sti
sub
mov
shl
mov
adc
dec
inc
hlt
dec
lret
push
sbb
test
mov
mov
pop
push
xor
into
test
xor
inc
rorl
jle
mov
data16
popa
and
xchg
mul
or
out
dec
pushf
xchg
in
adc
add
insl
movsb
cmp
mov
or
push
mov
imul
mov
sbb
scas
arpl
shll
fs
test
aam
jo
loop
inc
in
out
pop
je
add
pop
and
iret
jbe
imul
iret
adc
dec
add
sub
inc
test
xorl
mov
repz
pop
inc
bound
mov
sub
cmpsb
dec
jge
mov
stos
sbb
dec
add
add
movsl
paddsw
mov
data16
ret
mov
mov
fidivl
rclb
dec
leave
daa
jecxz
cmp
dec
je
mov
mov
daa
cmp
fcomps
cli
lods
leave
cmp
mov
shll
mov
lahf
sbbb
imul
push
inc
out
mov
jp
cmpsb
mov
jl
les
je
addb
mov
mov
js
add
dec
movsb
add
mov
dec
push
sbb
pusha
mov
push
dec
xor
mov
fwait
mov
pop
xor
loop
cwtl
icebp
push
movsl
xor
cmc
repnz
pusha
cmpsl
add
sahf
aaa
sti
jae
lds
jp
sub
imul
push
mov
and
dec
jnp
lea
cmp
sub
imul
test
bound
sub
fisubs
nop
xchg
push
imul
lcall
je
xchg
sbb
fiadds
orb
and
ja
sub
sahf
pop
and
jbe
sbb
cmp
in
andb
xchg
inc
aas
push
mov
andb
mov
shll
push
arpl
mov
or
adc
iret
std
pop
jmp
add
push
sub
cli
je
loop
or
jp
repnz
add
ss
and
add
addl
xor
mov
fldl
mov
pop
mov
stc
push
sub
cld
pusha
pop
xor
dec
pop
xchg
jae
stos
jmp
rol
imul
int
lds
lock
mov
xor
sbb
dec
pop
lret
mov
jae
out
cmp
repnz
lret
xor
loope
push
dec
mov
daa
xor
negb
daa
mov
dec
push
cld
sub
rorl
jp
push
fwait
jge
jg
in
fcompl
and
idivb
jno
fildll
into
shrb
mov
icebp
das
shll
xchg
rcrb
scas
fisubrl
cmp
inc
call
sub
psubsb
shl
and
scas
mov
ds
insb
and
adc
sub
and
pop
insb
mov
mov
int
sub
insb
bound
enter
adc
xor
xor
aas
and
js
sbb
pop
push
mov
or
movsl
cli
xchg
imul
call
cld
test
dec
out
ret
mov
int3
dec
sbb
insb
mov
pop
pushf
jns
mov
pop
mov
push
iret
fs
sti
push
push
stos
data16
lcall
loope
mov
cltd
pop
cmp
add
out
sub
int3
adc
mov
js
adc
cmp
aas
and
sbb
mov
xchg
or
mov
mov
ret
and
sarl
aam
xchg
fucom
mov
aaa
cmpb
dec
push
mov
mov
pusha
into
or
inc
push
cs
mov
mov
cmpsb
ss
mov
or
mov
sub
adc
test
js
push
push
bound
push
pop
or
xor
orl
jns
lock
mov
mov
add
scas
push
fstl
or
pop
imul
ret
jns
jge
jno
push
xchg
and
inc
mov
adc
das
xchg
aam
lahf
pop
aas
push
cmp
movsb
xor
in
add
js
fistps
inc
and
outsl
sbb
pop
leave
fs
mov
shl
in
sub
aam
xor
or
cmpsb
test
mov
and
ror
push
mov
pop
arpl
lods
lea
lods
adc
mov
xlat
je
add
inc
sbb
in
andl
xlat
pop
jbe
imul
jmp
jno
aaa
cmpsl
mov
xchg
or
mov
push
adc
xchg
pushf
outsb
and
mov
call
outsl
cld
xor
loope
rcr
pop
sahf
scas
cmp
sarb
push
insl
or
sub
and
dec
icebp
adc
or
into
jp
repnz
rorl
popa
add
sub
aam
dec
and
sub
bswap
fdivr
dec
wrmsr
shrb
pop
aaa
push
lahf
inc
xor
fucom
nop
lods
add
jne
in
enter
mov
enter
pop
mov
outsb
je
mov
dec
cltd
add
mov
push
pop
fldenv
mov
daa
into
dec
cmp
push
sub
repz
jb
mov
inc
or
scas
in
roll
sti
out
outsl
imul
mov
inc
dec
inc
mov
scas
in
inc
add
repnz
pop
movsl
das
lret
and
stc
mov
pop
sbb
test
imul
xchg
xor
jecxz
pop
das
push
inc
mov
add
scas
sub
iret
lods
adc
mov
xor
in
jb
sub
pop
and
jg
jecxz
popa
bound
add
mov
fcomp
mov
sbb
pop
aad
ds
inc
hlt
or
push
mov
jo
lods
adc
into
sbb
out
mov
jmp
mov
pop
shll
and
test
xor
idivb
and
push
in
mov
cmp
xchg
mov
inc
mov
andl
int
pop
out
leave
aad
pop
or
xor
scas
mov
adc
enter
outsb
inc
xchg
cmp
xchg
mov
sbb
and
in
das
jo
fldt
cmp
jb
mov
adc
pop
mov
sub
mov
sarl
popf
xchg
jmp
gs
pop
jp
sahf
pop
xchg
jbe
adc
push
cmp
fucomi
cmp
and
adc
aam
push
dec
cwtl
std
pop
sbbb
hlt
jmp
mov
add
pop
addr16
jnp
jno
stos
push
xchg
mov
jb
pushaw
cmc
cmp
imulb
pop
mov
mov
js
arpl
mov
pusha
adc
jp
xlat
clc
movsb
add
and
mov
or
or
pop
aam
lods
inc
mov
lret
xor
iret
xor
cwtl
arpl
cmp
int
fisttpl
cwtl
xchg
push
xor
push
cmp
movsl
and
arpl
loopne
add
push
and
jne
idiv
aaa
adc
push
or
shlb
jmp
inc
inc
jbe
push
call
jecxz
and
int
lea
lcall
shll
add
in
push
and
lds
cmc
push
popa
xchg
pop
insb
lods
test
mov
cmc
mov
xchg
cmp
lds
xchg
loop
fsub
sub
pushf
sarl
pop
add
mov
stos
in
adcb
subb
and
xor
aam
int3
test
inc
std
xchg
in
pop
add
add
or
adc
mov
pop
cs
outsl
icebp
jg
jo
mov
xchg
rorb
ss
aaa
test
pop
cmc
mov
jge
jo
inc
xor
aad
test
mov
pop
push
jno
loopne
and
test
into
cmp
arpl
dec
sub
cmc
dec
insl
xor
cli
loop
iret
add
mov
inc
push
mov
or
sub
dec
lods
lods
fwait
or
cmp
mov
lret
push
push
jb
repz
sub
adc
fwait
inc
gs
mov
fs
mov
xchg
movsl
in
xchg
sub
movsbl
sub
dec
insl
and
popa
cmp
add
mov
fdivrp
gs
aam
add
push
jns
dec
push
outsl
dec
loop
xor
in
pop
sbb
fcomp
jno
in
pop
mov
pop
mov
movsl
sarl
les
push
jge
bound
in
insb
add
jmp
rorb
push
adc
lret
ja
mov
adc
mov
out
aaa
pop
arpl
scas
leave
jle
ret
xlat
or
or
das
jp
add
cmp
mov
mov
jns
into
aas
xor
adc
push
mov
mov
pop
out
fdivs
pop
outsb
cltd
decb
xchg
jg
jecxz
loop
and
sbb
ja
dec
or
test
and
push
push
and
aaa
dec
xchg
mov
loop
mov
jl
sub
adc
mov
mov
popf
iret
and
inc
mov
push
xchg
dec
outsb
aam
push
cwtl
mov
sub
rcl
pushf
ret
sub
push
mov
cld
push
lret
mov
inc
pop
ficoml
ljmp
jne
mov
call
adc
jp
mov
push
movsb
push
fwait
adc
xchg
cmp
mov
adc
sahf
jbe
pop
cmpsb
iret
mov
notl
insl
pop
out
jge
gs
xor
inc
mov
cmp
arpl
or
pop
or
test
push
cmp
subl
nop
imul
add
dec
lret
ret
lock
es
aas
xchg
adc
adc
fdivrs
inc
pop
add
lock
pop
or
sti
xor
mov
out
lods
sub
insl
insb
insb
int3
je
jae
out
icebp
cltd
and
mov
add
hlt
enter
mov
sarl
push
lods
fmul
add
xlat
stc
into
dec
push
getsec
xchg
inc
dec
pop
repz
mov
inc
inc
mov
pusha
sub
ret
mov
aaa
push
or
lret
xchg
cmpl
xchg
sub
xor
and
inc
xor
sub
subb
fistpl
repz
lock
cmc
mov
mov
clc
sub
mov
jno
divb
mov
dec
cmp
mov
imul
stc
fst
out
jmp
sbb
sbb
js
add
pop
lcall
jnp
push
fstpl
pushf
test
push
mov
or
and
test
push
stos
dec
movl
mov
mov
insb
movsl
push
mov
jl
add
push
xchg
sbb
add
ja
sbb
adc
pop
notb
cld
loop
pop
jno
movl
adcb
xor
jmp
pop
jno
mov
pop
cs
and
sbb
push
fwait
mov
xchg
adcl
loopne
dec
xchg
dec
fsubr
ret
loop
fists
jp
int3
lods
ds
stos
mov
adc
das
push
push
mov
push
mov
mov
ss
add
sub
mov
in
push
sti
cmc
fs
loop
insl
push
popa
aaa
mov
bound
fstp
nop
push
aaa
mov
mov
jmp
mov
push
andb
push
pop
sti
xchg
mov
xor
shll
mov
nop
addr16
lods
jp
in
movsl
or
cmp
mov
in
sahf
xor
xchg
fadd
addr16
popf
ret
xor
pop
js
cld
repnz
cs
add
adc
jno
test
push
sub
adc
pop
xor
andb
inc
mov
pop
push
dec
fs
and
out
add
jo
loopne
scas
sub
jmp
add
pusha
scas
gs
mov
arpl
add
test
mov
sti
pop
push
cmpsl
inc
out
in
add
mov
sub
add
sbb
dec
iret
jno
cmp
xchg
jl
and
fnstenv
loop
push
int
xor
arpl
add
data16
cmp
pop
stos
mov
cmp
push
jmp
dec
scas
push
inc
xchg
psubb
cmpsl
jmp
sbb
sub
jo
sub
and
nop
mov
leave
mov
idivl
daa
inc
mov
call
mov
in
rolb
mov
loope
cmpsl
lods
loop
daa
in
es
js
push
push
lahf
mov
pop
ss
stc
hlt
data16
mov
popa
jmp
mov
rcrl
mov
jmp
dec
pusha
adc
fcmovnb
lret
fimull
mov
cltd
addb
jle
push
gs
cmp
push
cmp
add
fmulp
sbb
cmpsb
pop
push
out
loop
push
jb
into
dec
je
dec
xor
rcrb
cwtl
dec
sahf
push
stos
ds
and
sti
mov
aad
out
xor
xor
nop
xlat
dec
ud2
lock
push
rolb
mov
out
add
int
mov
xchg
sbb
xchg
inc
sbb
sub
jle
push
mov
lret
int
xchg
outsb
or
test
push
xchg
pushf
mov
pusha
loop
lret
insl
pop
push
xorl
xchg
xchg
mov
inc
cmp
xor
enter
rolb
adc
mov
xchg
sub
mov
ret
rcr
sbb
jecxz
ja
and
jg
js
jae
mov
push
ds
push
les
iret
xchg
pop
call
cmp
pop
out
loope
dec
lcall
rcll
sub
out
or
shr
add
xorb
dec
movsl
jo
call
pop
sbb
pop
adc
xchg
aaa
jmp
or
in
mov
int
ljmp
mov
mov
ret
cmpsb
push
aad
xchg
mov
mov
sbb
lret
sbb
in
and
out
lret
enter
jb
fldt
adc
xchg
insl
fcmovnbe
xor
fucom
stc
rorb
cmp
scas
jg
sahf
in
cmp
bound
inc
bnd
test
pop
stos
add
pop
xor
mov
pop
ds
loop
fmuls
pushf
popa
or
test
and
pop
mov
movsl
and
mov
cmpb
sbb
iret
jae
inc
add
lret
pop
pop
sbb
add
pop
movsb
ret
insb
scas
jbe
es
or
mov
mov
xchg
sbb
sahf
adc
bnd
lahf
jecxz
int
leave
inc
adcb
fs
pop
mulb
sub
fimull
ret
call
jecxz
enter
sub
mov
lcall
repz
sbb
aad
add
cmp
fisttps
jp
jecxz
cmpb
in
lock
bound
push
xchg
lods
popf
jns
arpl
fcomps
cmpsb
int
dec
push
es
dec
xor
lea
int3
push
or
out
dec
mov
push
dec
clc
xchg
repz
sti
jl
ss
jp
mov
cmpsl
jle
cmp
inc
test
mov
cmp
mov
loopne
outsl
movl
dec
and
insb
pop
xorb
sahf
out
imul
call
in
and
mov
mov
mov
jmp
add
xor
ret
rorl
imul
xchg
xor
lds
sub
add
mov
mov
cmp
stos
and
jo
xchg
xlat
mov
and
fldcw
cmp
ret
ret
rorb
insl
and
test
sbb
adc
fdiv
icebp
iret
pop
es
mov
loop
dec
dec
xchg
aas
lret
sub
adc
push
cld
mov
jge
lods
mov
xchg
sbb
jo
test
ret
pop
jno
cmp
jmp
and
aas
cmp
pop
in
lahf
and
fstl
fwait
or
sub
pop
hlt
int3
pop
ljmp
mov
xchg
jno
sub
fsubl
or
hlt
sbb
xchg
lcall
fdivrs
mov
or
lahf
rolb
xlat
jae
repnz
push
mov
fldl
andb
enter
inc
xchg
rcrl
jnp
mov
je
mov
and
or
jae
aad
addr16
test
les
push
xchg
mov
pop
push
dec
je
mov
adc
xor
subl
subl
insl
push
loopne
dec
aaa
mov
xor
push
jb
jnp
das
and
cld
dec
mov
xchg
enter
mov
mov
inc
into
jns
pop
ret
sahf
pop
sti
push
into
mov
movsb
add
test
xchg
cmp
into
mov
push
xchg
mov
fcmovnu
sub
dec
repnz
sub
cmp
pop
stc
popf
imul
js
cmp
stos
int3
fisubrl
and
pop
or
jle
mov
adcw
xchg
and
cmp
xchg
imull
fwait
mov
es
test
aas
mov
in
jg
psubsb
fadd
dec
mov
push
xor
push
cmpsb
cltd
and
push
jb
push
clc
dec
push
das
in
adcb
fldenv
cs
dec
dec
pop
pop
in
adc
cmp
das
xchg
mov
mov
ja
jno
mov
adc
inc
pand
xor
lret
out
pushf
inc
in
push
push
jo
mov
mov
mov
push
cld
inc
test
inc
inc
xchg
hlt
divb
sbb
sbb
inc
mov
sub
jae
xor
ss
enter
jle
push
divb
les
xchg
mov
movb
pop
daa
push
cmpsb
fsts
fldcw
dec
jg
pushf
push
adc
xor
mov
dec
lock
pusha
pop
les
push
sub
or
jnp
or
mov
in
mov
dec
mov
or
jl
jle
aas
int
mov
scas
xlat
jo
cmp
fimull
pop
lods
lcall
sbb
push
mov
push
jg
adc
out
lods
hlt
cmp
jg
iret
inc
lods
xor
inc
sbb
push
repnz
xlat
sbb
aaa
dec
lret
incb
or
mov
push
mov
aad
icebp
cmp
pop
imul
jge
es
or
mov
cmp
inc
fdivrl
jg
jbe
cmp
add
or
lret
iret
xor
or
xchg
movsl
out
jbe
data16
repnz
mov
cltd
dec
mov
pop
loope
andb
incl
add
stos
mov
xlat
and
mov
add
push
lret
push
xor
push
and
mov
int
jp
outsb
pop
test
mov
mov
leave
lcall
sbb
inc
mov
adc
xor
cwtd
fnstsw
add
xchg
xchg
push
test
mov
sub
int
lea
lea
lcall
inc
or
jg
gs
push
pop
push
cwtl
cli
push
xor
jecxz
pop
inc
arpl
mov
loopne
aas
push
pop
dec
cmpsb
aad
sbb
stc
xor
in
dec
movb
xchg
sub
out
loopne
lea
lock
mov
test
xchg
sbb
loope
mov
mov
inc
movsl
adc
adc
cs
fdivrl
jns
ficoms
mov
fistpl
push
and
push
add
lock
faddl
and
pop
adc
adc
pop
cmp
push
push
out
stos
xor
lret
push
xor
stos
cmp
cmp
and
push
movsb
jae
xor
xlat
jecxz
in
imul
cli
fs
jo
test
cmpsl
dec
sub
sti
mov
and
sub
insb
std
mov
jl
mov
insb
cmp
subl
cld
push
xchg
inc
sub
movsb
xchg
sti
clc
mov
dec
or
ja
inc
mov
pop
xchg
adc
lea
mov
push
fnsave
sbb
adc
hlt
add
inc
sbb
xor
jge
int3
jle
xchg
cli
and
sbb
xor
mov
xchg
or
ljmp
lock
inc
stos
fisttps
inc
inc
fisttps
jnp
fsubrl
das
lock
mov
mov
sub
ljmp
sbb
test
dec
or
les
in
xor
sti
les
mov
pop
lret
sti
stc
mov
or
loop
test
pushf
imul
stos
pop
push
aam
jnp
adc
daa
mov
mov
out
loope
icebp
xor
inc
push
daa
xchg
outsl
fldcw
lea
dec
in
inc
std
jno
fwait
sub
jecxz
stos
dec
test
pop
sub
xchg
lock
out
pusha
jne
js
xchg
iret
divl
daa
nop
or
data16
add
push
push
or
loop
fcmovnbe
rorb
hlt
jbe
into
pop
addr16
cmp
out
pop
sub
inc
mov
lock
rol
shr
add
incl
pop
arpl
mov
mov
mov
repz
cld
inc
and
enter
outsb
sbb
testl
sub
or
aam
shrl
lock
inc
repz
in
in
insl
or
roll
nop
push
inc
pop
jmp
add
cmpsl
popa
arpl
ss
jg
sub
mov
inc
incl
inc
leave
scas
xor
pop
pop
and
add
out
sub
inc
in
test
push
iret
les
test
add
jecxz
dec
es
sbbl
mov
movsl
xchg
rcrl
sbb
imul
add
mov
jge
cs
mov
scas
push
mov
jbe
shrb
addr16
imul
jae
xchg
sub
loop
outsb
dec
xchg
sti
das
adc
in
sbb
jmp
into
jae
les
push
push
shll
aad
xchg
adc
push
ss
jbe
insb
push
fiaddl
or
jmp
stos
loopne
jae
insb
cltd
mov
inc
sahf
out
push
xchg
es
fimull
or
jg
aaa
xor
enter
pushf
jb
and
xor
ljmp
xchg
std
adc
sbb
dec
lcall
faddp
xorb
into
adc
add
out
mov
mov
scas
aam
lret
mov
adc
inc
arpl
jbe
sarl
dec
fs
repz
sbb
xchg
inc
pop
and
movsb
lods
add
filds
ja
push
jb
jg
inc
idivb
sbbl
sarb
inc
stos
push
inc
mov
stos
sbb
push
pop
pop
mov
popa
mov
mov
mov
jae
out
dec
dec
scas
push
push
mov
mov
jae
xor
xchg
xorb
inc
sub
push
divb
pop
mov
adc
or
and
lcall
jno
sbb
repnz
cmpsb
xchg
mov
sub
mov
aaa
push
int
jne
adc
lcall
sub
loopne
fimull
lahf
arpl
inc
test
add
repz
fistps
rclb
pop
adc
ja
xchg
sti
jecxz
xor
push
test
fs
aam
movsb
cmpsl
mov
sti
add
fs
enter
mov
in
repnz
inc
cs
clc
addr16
push
xchg
js
pop
add
and
mov
outsl
sbb
fidivs
dec
and
or
addr16
xorl
shrb
pushf
psllq
adcb
movl
add
es
fcmove
push
jp
test
aas
inc
mov
mov
scas
and
clc
push
scas
mov
hlt
fs
adc
jne
adc
jmp
imul
rcll
cltd
add
aas
bound
test
lods
mov
push
jnp
and
popa
ljmp
push
xchg
jnp
rcll
pop
jecxz
mov
lret
push
pop
in
ja
cli
dec
shrb
ss
das
rclb
in
adc
dec
outsl
push
mov
test
xchg
inc
and
sub
fwait
xor
mov
fs
add
rclb
sti
add
jnp
dec
mov
xlat
mov
outsl
popf
add
cltd
movsl
insb
add
mov
cwtl
daa
mov
push
decl
cld
aam
or
push
jp
insl
inc
fnstcw
xor
lcall
pop
mov
cmp
mov
cmp
xor
or
insl
inc
adc
bound
or
jnp
insb
sbb
inc
sub
std
test
pop
cmpsb
sub
push
and
add
shr
fnstsw
inc
in
movsl
xor
not
mov
sub
test
loop
add
adc
js
and
mov
addl
push
popa
shl
push
cmc
sub
lret
fnsave
add
in
mov
daa
repz
ss
test
leave
cli
js
adc
dec
push
stos
adc
call
adc
test
xor
pop
mov
jmp
mov
push
out
adc
mov
pushf
mov
jne
mov
outsl
neg
mov
je
push
mov
jge
pushf
test
dec
pop
movsb
rorl
arpl
stc
shrb
xlat
mov
xor
popf
aas
test
push
xchg
mov
call
lea
lret
roll
je
xchg
add
in
xchg
and
and
xchg
sbb
cs
test
enter
cltd
push
add
sbb
or
scas
loopne
lahf
mov
ljmp
mov
adc
xchg
mov
jnp
jno
push
sbb
call
fimull
and
roll
cmpsb
pushw
fs
popa
xchg
shll
mov
fsubl
adc
out
push
lock
inc
loop
test
or
in
int
repnz
mov
pop
loope
xlat
cmp
jecxz
dec
cmpsb
ja
dec
test
sub
cld
add
aam
mov
mov
push
out
adc
inc
daa
cli
and
sbb
mov
jmp
sbb
fwait
xor
hlt
pop
testb
sub
inc
cltd
loopne
mov
popf
sarl
aad
mov
mov
cmp
xor
int3
push
mov
adc
outsb
xor
pop
popa
push
fistps
movsb
sub
pop
mov
mov
xchg
and
pusha
shl
into
and
insb
jmp
mov
pop
mov
jecxz
imull
cli
mov
cltd
adc
pop
or
pushf
out
add
pusha
shll
ja,pn
loopne
add
pop
sub
out
jecxz
add
jmp
lcall
xchg
xchg
mov
inc
repz
fmull
frstor
dec
cmpsl
inc
pop
mov
mov
mov
je
xor
repnz
xchg
fstpl
test
or
sbb
fldl2e
stos
enter
mov
cmp
push
insl
jo
into
scas
shl
hlt
fistpl
enter
mov
imul
xor
mov
test
int
enter
or
sar
adc
dec
iret
add
pop
and
icebp
imul
sub
movsb
sub
daa
cmc
and
fucomip
jbe
cltd
pop
jbe
mov
mov
mov
or
push
aam
cmp
mov
scas
loop
cwtl
fs
fstl
mov
icebp
pop
mov
xchg
adc
push
stos
out
push
add
lds
mov
loopne
add
pusha
pop
or
es
mov
mov
dec
in
fs
and
es
arpl
sbb
pop
aam
sub
add
cwtl
inc
xchg
xchg
lcall
test
movsl
iret
ljmp
push
insl
imul
push
jnp
les
jge
dec
xlat
mov
mov
nop
inc
or
push
fcoml
mov
inc
mov
push
aam
cmpb
dec
imul
loopne
lods
cs
xor
push
in
jp
sub
addr16
cmp
xchg
fsub
sbb
lea
pushf
emms
stc
push
xchg
sbb
fstl
pushl
mov
rcrb
outsb
mov
leave
adc
out
fs
mov
sub
mov
dec
js
inc
cmc
pushl
out
sbb
mov
out
jp
pop
sti
mov
inc
pop
sbb
xchg
mov
mov
cltd
mov
push
leave
test
xor
add
xor
movsb
iret
fsubs
test
lcall
pop
sbb
xor
add
and
and
push
cmp
mov
fildl
cmpsl
lea
out
int
add
insl
lcall
fistpl
pop
jg
out
ja
push
mov
fdivl
ret
cmpsb
inc
in
test
xchg
call
jp
mov
pop
sbb
or
arpl
xchg
das
repz
movsb
ret
mov
loopne
adc
std
sahf
mov
scas
scas
jecxz
dec
negb
subb
nop
mov
jnp
test
mov
fcoml
mov
pop
bndldx
mov
cld
mov
test
fldt
dec
sub
sub
push
xchg
xchg
jp
add
outsl
rcrl
pop
jb
or
xor
out
adc
fidivl
mov
outsl
mov
sub
lds
push
cli
std
adc
pop
lods
xchg
and
shld
dec
xchg
xor
xor
jns
insb
pop
xchg
pop
mov
push
rclb
fstps
fcmovnbe
sbb
insb
xchg
je
cmc
out
pop
aaa
cmp
rorl
lds
daa
js
fsubs
cmpsl
addr16
mov
jae
ss
stos
mov
nop
js
or
bound
test
and
addr16
into
jl
dec
popf
dec
adc
xor
loop
mov
sub
xor
cmp
jne
xchg
out
sub
mov
cmpsb
or
jle
add
aaa
imul
or
ret
push
dec
mov
setg
mov
aam
jns
ror
inc
shll
outsl
movsb
je
ja
roll
adc
xor
mov
adc
enter
fsubl
mov
loope
hlt
test
insl
inc
leave
mov
ficoms
loop
push
stos
mov
adcl
test
data16
and
test
mov
lock
movsb
dec
das
sub
and
addr16
jno
xchg
inc
daa
cmc
pop
mov
repnz
sbb
cmpsl
mov
pop
jge
or
mov
in
xchg
sub
insb
pop
and
push
mov
dec
clc
mov
clc
sbb
sub
sti
dec
insl
pop
loopne
out
inc
inc
test
bnd
xchg
or
call
jmp
cmc
mov
adc
jb
add
mov
push
sti
dec
movb
pop
sub
cmc
loop
jecxz
jnp
push
pop
jmp
insl
mov
test
cmp
cltd
mov
jns
shrl
add
fs
dec
adc
outsb
mov
push
push
imull
and
mov
js
pop
jbe
dec
scas
mov
jmp
in
jp
rcrl
xchg
add
cmp
mov
xchg
mov
cli
or
aas
test
and
adc
fs
pusha
stc
ret
jl
adc
pop
pop
stos
xorb
fs
mov
fstl
les
jnp
xchg
lret
call
out
xchg
add
or
cmp
mov
lds
xchg
es
scas
lods
and
jge
cmc
psllw
sub
mov
xchg
sbb
push
ljmp
rcrl
cld
pop
sbb
outsb
in
dec
mov
add
out
inc
jno
mov
notb
jge
aam
into
and
out
pop
lcall
stc
add
enter
dec
xchg
xor
rclb
shlb
test
fiadds
and
cmp
cld
jg
xor
lcall
adc
dec
cmpsb
and
xor
jno
mov
push
cmp
cmpsb
ret
cmpsb
int3
inc
add
jbe
xchg
sti
and
iret
stos
sbb
pushf
comiss
jmp
pop
pusha
faddl
mov
cmp
fadds
andl
das
pushf
cs
ja
xchg
pop
loope
xchg
lcall
or
jnp
sbb
in
subl
dec
sub
lea
popf
lods
jecxz
pop
test
rcrl
sbb
cld
sbb
or
adcb
icebp
push
lds
daa
mov
pop
pop
xchg
jnp
in
pop
ljmp
std
outsb
ret
push
cld
mov
pusha
daa
add
and
in
push
fisubs
test
lock
pushf
pop
sub
jge
sub
movsl
lret
inc
sub
dec
je
inc
pop
mov
cmc
out
mov
rdpmc
and
icebp
cmp
lahf
sub
adc
mov
orb
pop
lea
fidivs
stos
bound
or
pop
mov
scas
dec
or
fsubrs
pop
mulb
add
rcrl
sub
ds
sarl
pop
aas
push
jne
sbb
pop
repz
mov
shlb
shrb
inc
insb
or
mov
cmp
sub
sti
inc
mov
push
nop
outsl
shll
das
roll
push
sub
clc
fwait
mov
pop
lcall
push
dec
jecxz
out
mov
call
shll
fsts
gs
mov
xchg
jbe
faddl
ss
or
adc
pop
pop
inc
shlb
fisubrs
ret
xchg
pop
pop
mov
int3
or
mov
pop
cli
add
mov
pop
dec
mov
pop
sbb
or
cmpl
pop
add
iret
jle
dec
push
jns
fbstp
es
xlat
rclb
jge
or
xor
mov
ds
push
ds
dec
clc
test
ljmp
fnstcw
rclb
mov
pusha
adc
lods
push
cld
out
pop
sbb
xchg
inc
xor
push
pusha
out
add
jmp
sub
mov
xor
sbb
mov
pop
or
cli
mov
inc
inc
test
push
mov
pusha
xchg
or
jnp
and
ret
xlat
pop
dec
lcall
repz
ja
mov
testl
pop
dec
out
mov
jge
lods
pop
stos
dec
jno
add
in
push
cld
push
jp
add
jp
cmp
jle
sbb
daa
rclb
jp
mov
inc
mov
imul
xchg
mov
mov
push
cmpsl
push
pop
cld
mov
das
push
mov
inc
arpl
fistpl
test
push
outsl
shrl
inc
lahf
sub
int
das
cmp
mov
mov
mov
lret
pop
jle
cltd
ret
jecxz
jp
fidivrs
jno,pt
dec
cmp
scas
and
stc
pop
ss
daa
push
gs
mov
filds
cmp
aaa
test
add
pop
inc
jbe
ljmp
adc
mov
xor
jo
jne
aas
fisubrs
cltd
lods
adc
jbe
aas
cmp
xor
jecxz
jns
and
sub
stc
data16
push
mov
pop
xor
jge
add
bnd
cmc
inc
cmpl
adc
add
and
jnp
imul
mov
out
repnz
add
xor
into
aad
arpl
push
jp
sbb
or
in
xchg
insb
call
dec
and
mov
sub
or
push
outsl
push
ret
adc
push
mov
dec
mov
cmp
mov
pop
movsb
push
push
lret
mov
add
popf
push
pop
ds
push
iret
pushw
call
rcrl
outsb
gs
xchg
mov
and
jne
cmp
dec
aam
mov
vcvtps2uqq
lahf
ret
cmp
xor
mov
or
or
push
out
push
and
mov
mov
scas
inc
jg
repz
xor
mov
cmp
aad
aas
imul
loopne
out
scas
xchg
cmp
and
pop
mov
gs
shl
rcrl
cmp
in
add
jo
les
or
push
jecxz
push
test
pop
jb
sbb
mov
push
and
xchg
push
mov
mov
cmc
xchg
fidivs
clc
sti
aaa
decb
push
cli
mov
push
shlb
enter
test
lods
data16
pop
dec
movsbl
pop
lods
das
jo
jp
push
pop
out
cmpsl
sbb
inc
fs
inc
lods
jmp
or
xor
jle
cmp
enter
pop
addb
xchg
mov
shlb
cmp
pusha
pop
pop
sub
cs
push
andl
push
test
inc
dec
and
jb
popl
cli
fiadds
jo
inc
dec
pusha
imul
fcmovnbe
jge
mov
mov
ret
jno
and
and
gs
les
dec
gs
cwtl
jg
cmpsl
je
enter
movsb
xor
dec
dec
push
fistps
jo
shll
xchg
stos
es
jecxz
jle
enter
mov
and
push
sti
jno
data16
jmp
sub
xor
mov
dec
scas
mov
dec
push
cli
adc
lahf
dec
mov
inc
enter
clc
popa
push
rorb
ret
lcall
sbb
xchg
xor
pusha
pop
int3
fsts
adc
lea
cmp
lret
daa
xchg
jmp
dec
out
jl
rcrl
sub
rorb
fcompl
negb
inc
pop
mov
jle
mov
outsl
mov
jnp
outsb
xchg
cmp
jb
xchg
ljmp
adc
or
aam
adc
mov
inc
adc
cmp
ljmp
jmp
xor
fs
cmp
popf
int
std
arpl
xchg
or
sub
lret
cli
dec
sbb
in
sbb
lock
es
mov
push
shlb
dec
mov
cmp
decb
jne
sbb
pop
test
push
push
xchg
or
adc
notb
shrb
or
mov
jae
icebp
clc
xchg
xchg
sub
les
pop
inc
test
lods
dec
jae
call
sbb
xchg
xor
adc
add
inc
xor
clc
ja
into
shrb
pop
loope
mov
int
fdivrl
dec
dec
fs
jge
aam
addr16
xor
addl
mov
and
mov
fsubp
pop
cmc
cwtl
cmpsl
dec
lods
pop
or
pop
cmp
xchg
cmp
sbb
addr16
shrl
and
jl
addr16
jae
xorl
push
insb
xchg
pop
xor
outsb
mov
sbb
fisubrs
fdivrl
rclb
xor
sbb
push
xchg
push
in
cltd
popf
pop
rclb
dec
jp
xchg
fstps
pop
jns
adc
jg
push
mov
loopne
sub
fimuls
cmpsb
sub
lret
and
xchg
cs
jo
cmp
lahf
std
je
jp
mov
adc
mov
gs
icebp
mov
inc
sub
dec
mov
lret
and
jae
mov
inc
jp
lock
xor
repz
aaa
mov
imul
mov
xchg
dec
aas
xor
es
gs
sarl
lret
or
or
popf
push
dec
pop
mov
fildl
jle
dec
hlt
xchg
mov
pusha
xor
or
jmp
push
lods
je
cmpsb
xor
jae
add
sbb
decl
fyl2x
push
arpl
mov
pop
dec
sub
mov
sub
mov
or
jnp
hlt
sbb
popa
sbb
outsl
cmpsb
leave
xor
es
shll
cmovb
xor
jl
xchg
pop
add
adc
imul
cmpsl
fmuls
cli
hlt
xor
add
jns
das
inc
push
aaa
pop
pop
call
insb
fsubr
mov
movsb
jge
adc
loope
mov
icebp
vmread
jmp
sbb
mov
xor
pop
leave
cmp
and
inc
xor
xchg
shll
jnp
cmp
inc
pop
inc
and
sub
sub
xor
xor
pop
int3
lock
outsb
inc
lds
and
jns
xor
xor
arpl
inc
dec
sbb
mov
push
out
sbb
outsb
xorl
push
jge
adc
lds
les
dec
nop
xlat
adc
cmpl
in
out
jp
inc
fisttps
lcall
add
daa
cli
ret
imul
ljmp
sub
ljmp
push
ret
sbb
fimuls
xor
add
loopne
lahf
xchg
dec
mov
sub
lret
repnz
pop
dec
mov
add
xlat
mov
jl
inc
cli
aas
xchg
xor
dec
xchg
fistl
xchg
add
jle
mov
jbe
push
or
sbb
mov
ret
jae
mov
out
inc
mov
aad
pop
add
jb
inc
mov
inc
roll
and
addb
cmp
cmp
pop
adc
clts
cmc
mov
mov
mov
sub
lods
in
jg
fstpl
push
mov
mov
sbb
inc
pop
daa
push
cmp
sbbl
pop
loope
jo
setl
jo
pop
cmc
test
jae
add
les
aam
je
loope
lock
std
test
ror
add
adc
bound
bound
fisttpl
push
adc
enter
aad
cmpb
out
daa
cltd
repnz
pop
aaa
in
jne
sbb
jae
pushf
mov
sub
lods
xor
mov
sahf
sbb
or
mov
test
cmp
mov
xlat
jb
add
lds
cmp
sbb
std
push
pop
out
jge
aaa
sbb
rcrl
imulb
add
ret
xor
addr16
add
xor
clc
lods
shrb
pop
int
jae
aad
js
aas
sub
ljmp
push
addl
out
out
test
sbb
test
shrb
xlat
jge
and
jne
fwait
sahf
xlat
ds
pop
adc
iret
fmuls
inc
imul
lahf
sbb
out
cwtl
cwtl
std
and
aad
fisttps
dec
mov
add
inc
mov
jae
push
popa
daa
sub
sub
mov
cmpb
scas
fsub
clc
out
jmp
cltd
jle
jno
dec
test
testl
push
dec
mov
dec
nop
xor
aas
jo
jo
mov
ja
xchg
xor
xchg
mov
add
sahf
testb
int3
or
aas
and
rcll
inc
mov
or
xlat
test
je
mov
mov
sub
jb
in
sbb
sbb
scas
std
sub
pop
or
sub
enter
pop
aas
cmpsl
mov
pop
push
mov
aam
add
mov
bound
ljmp
mov
ficompl
cmpsl
adc
dec
pop
std
mov
int3
inc
cmpsb
loope
out
std
cmc
sbb
idivb
cmp
popf
mov
jl
push
lea
js
into
sbb
sub
push
xor
in
ja
sbb
xchg
pop
xchg
out
push
aad
cli
pop
sarb
pop
arpl
xor
xor
mov
push
or
adcb
mov
push
notb
inc
push
jns
xchg
and
mov
out
mov
je
jne
adc
push
jns
lea
js
or
push
shll
or
pop
icebp
loop
jbe
dec
incb
fcmove
aaa
xchg
sahf
pop
adc
sub
out
sub
sub
insb
inc
imul
and
sbb
push
insb
das
fdivrl
or
mov
push
cmp
pop
popa
rorl
mov
stos
lods
sahf
dec
aam
lahf
pop
or
cmc
mov
in
xor
leave
or
fisttpll
jne
mov
or
add
pop
into
outsl
sub
imul
push
lock
subl
pop
dec
fldpi
cmp
sub
fiaddl
inc
cmpsl
testl
dec
pop
es
movsb
std
or
ss
pop
filds
movsbl
pop
int
fnstcw
xor
lock
fidivs
fstps
xor
pop
adc
subl
int3
or
cmp
mov
mov
sahf
add
pushf
add
sub
mov
aaa
pop
mov
cwtl
ds
repnz
sub
push
cmp
lds
int
cmp
in
cmpl
fistl
fiaddl
mov
jmp
push
mov
dec
adc
in
cmp
insl
mov
xchg
mov
outsb
mov
daa
adc
push
movsb
dec
sahf
fs
rol
dec
out
repz
xlat
lods
lock
or
and
sub
jbe
ret
aaa
xlat
stos
out
fists
xchg
mov
mov
push
ss
bound
jp
mov
loope
js
repz
xlat
pusha
pusha
push
sbb
add
dec
stc
adc
inc
das
or
push
rcll
gs
sbb
cmp
jecxz
push
sahf
das
outsb
andl
inc
push
js
lret
fnsave
fldcw
test
call
in
adc
pop
loopne
push
es
mov
in
cmp
xchg
dec
aas
int3
scas
sub
cltd
mov
popf
cli
pop
sarl
push
sub
fs
push
clc
xchg
mov
call
jmp
pop
out
test
fistps
lret
mov
inc
in
test
shrl
pop
cmp
mov
cmp
cmp
loop
inc
sahf
inc
sbb
xchg
push
jg
mov
adc
ds
cli
shll
jae
insl
adc
movsb
fsubrp
or
cmp
cmp
lcall
sub
mov
out
subl
pop
lahf
inc
cmp
pop
insb
arpl
xchg
out
push
push
xchg
cmpsl
mov
push
mov
imul
jo
hlt
lods
iret
xor
out
sti
hlt
sub
cmp
dec
pusha
xchg
ljmp
std
sbb
push
cld
sbb
mov
or
aaa
mov
popf
jmp
pop
fsts
iret
mov
inc
xchg
stc
fistps
jge
pop
jmp
enter
xchg
mov
or
lods
pop
arpl
lret
pop
incb
bound
cmp
ficompl
pop
adc
xchg
add
adc
pop
dec
jae
sahf
push
leave
sbb
pop
jbe
out
aam
imul
push
outsl
hlt
cmp
jae
mov
jecxz
sub
pop
imul
aad
into
lahf
imul
inc
ret
or
out
xchg
js
cmpl
sahf
movsb
xor
pop
sahf
ret
mov
jbe
or
jl
cmc
xchg
aaa
imul
pop
push
pop
adc
sahf
sub
push
dec
shrb
xchg
pop
adc
cmp
lahf
lret
shrl
inc
or
push
sbb
push
xchg
bound
jl
sub
fists
test
dec
cmp
aad
xchg
int3
popf
pop
outsb
push
add
fcmovb
or
lret
push
mov
aaa
repz
xchg
into
jle
cwtl
enter
sub
pop
mov
test
in
cmp
call
sbb
lods
xchg
in
fwait
lea
sub
dec
ja
jmp
jbe
add
mov
pusha
mov
mov
jecxz
out
push
rcrb
xor
mov
mov
cmpsb
sarb
push
stc
pusha
pop
divl
adc
xor
sbb
incl
xchg
jl
fbstp
push
mov
mov
mov
hlt
icebp
or
in
imul
jmp
xchg
adc
pop
adc
aas
add
push
mov
testl
movsb
mov
cmpsb
test
xor
popf
push
xor
adc
or
lahf
movsb
enter
data16
fwait
cli
dec
and
pop
cwtl
fs
mov
mov
in
ss
mov
dec
xchg
xchg
scas
outsb
xchg
shlb
mov
xchg
mov
xchg
cmp
shl
adc
and
mov
dec
out
cwtl
sarb
daa
cmp
mov
adc
inc
hlt
xchg
out
cmp
adc
or
inc
sbb
bound
pop
sub
shlb
or
pusha
sub
cmp
in
push
jg
mov
jne
push
push
repnz
fistps
pop
push
insb
inc
adc
jecxz
jmp
movsl
or
jnp
ficoml
sbb
adc
scas
xchg
cltd
push
ret
mov
test
cltd
cwtl
setns
mov
pusha
lods
popf
xchg
rcr
push
enter
pop
sub
lahf
test
adc
imul
outsl
cltd
xor
push
mov
ds
jmp
jnp
jp
push
jle
inc
outsl
mov
adc
sub
in
mov
dec
mov
iret
out
mov
inc
ret
push
int3
dec
sub
mov
fmull
in
push
dec
or
cld
dec
inc
mov
mov
test
fmuls
ja
lods
std
popa
pop
repnz
xor
jg
rcll
adc
les
xchg
cli
loopne
adc
push
sbb
shl
add
pop
inc
jnp
outsl
bound
loope
xchg
movsb
and
sub
jge
mov
sahf
ret
mov
dec
je
push
notl
inc
dec
incl
movsl
sub
mov
jne
sarl
sub
imul
ret
out
insb
xchg
fistpll
loopne
jge
aas
jbe
add
xchg
out
add
ljmp
mov
lock
xor
cld
ficompl
push
jecxz
ret
cmp
enter
popf
push
pop
sbb
dec
lock
jecxz
inc
fwait
inc
xor
inc
jecxz
mov
lahf
jo
movsb
push
sub
mov
pop
pusha
pop
idiv
xchg
xchg
shl
dec
fldenv
jmp
out
mov
fstpt
mov
adc
addr16
adc
cltd
lcall
adc
in
js
jnp
xchg
cld
jae
enter
iret
subb
xchg
and
sbb
enter
orl
sub
hlt
imul
out
pop
fbstp
lods
cltd
cmp
lahf
mov
jns
aam
push
lock
xchg
mov
pop
ret
inc
xchg
js
cmp
int3
rorb
adc
sti
xchg
adc
push
loope
outsb
bound
add
rcrb
sti
xchg
in
push
mov
lahf
fcoms
inc
cmp
test
shl
xor
and
add
push
mov
pop
pop
pop
lds
aam
enter
iret
mov
andl
repnz
lds
push
xor
jo
loope
pop
int
lret
jp
pop
add
pop
call
aad
mov
mov
fbstp
xchg
loope
adc
jnp
pushw
pop
mov
adc
sbb
inc
and
sbb
roll
mov
push
in
fsts
mov
shll
sub
sti
sti
sub
push
mov
ret
insb
daa
idiv
push
push
movsl
push
cmc
and
mov
and
pop
js
cmpsl
mov
adc
dec
in
jp
adc
add
cmc
inc
call
xor
daa
stos
xchg
push
imul
addl
inc
iret
nop
aas
orb
sbb
aad
cld
std
xchg
into
cwtl
xor
push
jp
xor
in
push
out
insl
add
das
adc
jo
stos
dec
mov
cld
shll
xor
hlt
or
sahf
xchg
jae
imul
push
mov
and
jp
and
js
cmp
xchg
repz
pop
cmc
lods
dec
popf
testl
mov
push
fidivrl
cltd
cmpsb
data16
enter
sbb
cmc
add
lahf
fildll
mov
xor
inc
xorb
sub
jno
lret
and
addb
fcoms
gs
aam
sub
jno
adc
shrl
pop
mov
stos
or
pop
and
repnz
loope
inc
and
aas
lock
bound
hlt
lea
adc
cmp
mov
cmpsb
xor
cld
dec
mov
jp
jp
jb
sub
mov
idiv
aas
sub
pushf
mov
int
int3
es
pop
mov
dec
gs
ret
fstps
inc
and
mov
xchg
movsl
pop
fbstp
mov
gs
jb
push
stc
push
sub
pushf
nop
lret
xor
mov
cmpsl
push
add
je
xlat
fisttpll
repz
icebp
dec
inc
inc
bound
adc
pop
xor
lds
or
aam
sub
inc
test
test
adc
mov
xchg
clc
dec
mov
lds
jns
je
arpl
jg
push
jmp
outsb
fwait
dec
daa
xchg
test
clc
inc
sbb
ja
pushf
or
mov
nop
and
fisubrl
cmc
ret
ja
frstor
shll
sbb
cmp
mov
hlt
mov
adc
push
cmp
ret
icebp
or
push
mov
xor
push
xchg
push
scas
repnz
sti
in
and
ret
inc
dec
lea
sbb
add
fisttpll
rcrl
ja
xlat
addb
in
add
sbb
mov
shll
stc
push
ficompl
add
dec
inc
cmp
jp
enter
and
test
push
sub
stos
or
cmp
cmp
loop
cmp
mov
movsb
mov
fdivr
test
push
adc
addb
imul
lahf
mov
hlt
adc
shlb
push
push
rclb
lods
mov
es
iret
xchg
inc
imul
jg
dec
shlb
dec
add
jl
dec
mov
sbb
push
dec
mov
push
push
mov
fldenv
divl
push
fs
js
push
cmp
enter
shl
icebp
pop
es
pop
shll
or
setl
dec
pusha
mov
and
add
add
mov
sub
dec
repnz
mov
jmp
fisttps
cmpsb
data16
test
cmc
std
int
jle
mov
out
xchg
mov
xor
cli
pop
jg
jae
mov
dec
leave
or
add
outsb
cmovnp
mov
hlt
pushf
jg
lret
xor
inc
pop
and
inc
fsubr
push
mov
mov
dec
js
inc
hlt
fwait
les
add
iret
mov
push
sti
stc
xchg
stos
jp
scas
int3
fsubs
movsb
inc
iret
sbb
inc
adc
subb
inc
fnsave
xlat
test
dec
dec
roll
mov
sti
mov
mov
imul
cmp
pop
add
push
and
push
pushf
scas
dec
xchg
mov
xchg
out
rorb
fiaddl
inc
testl
arpl
in
cmc
js
dec
xchg
mov
cwtl
pop
xchg
inc
xlat
pop
mov
shr
sub
aas
inc
mov
or
sbb
mov
or
sbb
scas
shrl
faddl
push
pop
lret
ret
je
ret
inc
or
jmp
inc
cmpsl
sarb
pop
jne
hlt
lret
jg
into
adcl
fidivrs
xchg
es
scas
decl
cwtl
out
popa
xchg
addr16
mov
mov
pop
xchg
adc
aam
test
fstpl
int3
imul
test
xchg
xchg
dec
test
mov
std
gs
jb
xchg
ss
outsb
adc
mov
lea
xor
in
xchg
outsb
add
sarb
xor
sbb
sbb
mov
dec
push
sbb
xchg
lea
push
jns
push
mov
movsb
ja
and
xlat
jo
imul
outsb
aam
nop
orl
add
repz
add
cmp
call
mov
shrb
pop
mov
inc
faddp
cli
out
pop
cmp
sahf
jne
fs
loop
or
call
in
scas
jno
pop
hlt
insb
into
ret
xor
dec
mov
dec
cli
adc
jae
loop
lahf
fidivs
insl
mov
dec
bound
mov
fwait
movb
mov
cmp
jle
sbb
and
subl
adc
outsb
jg
in
in
and
cmp
dec
pop
mov
cmp
adc
idiv
mov
scas
jp
xor
push
mov
faddp
mov
jl
mov
stc
inc
dec
sahf
daa
jmp
push
pop
add
or
or
or
mov
jecxz
sub
xchg
pop
hlt
xor
out
ja
aas
dec
mov
dec
cmp
jnp
and
xchg
jmp
mulb
es
adc
aad
add
das
lock
popf
push
lea
mov
sub
popf
mov
sub
mov
sbb
sub
cli
xor
xor
mov
lock
and
adc
cmp
add
mov
xor
data16
hlt
scas
clc
test
pop
pushf
std
dec
jg
xchg
ja
push
sbb
call
leave
sarl
adc
jg
push
cmpsl
jg
push
cmp
rolb
mov
mov
test
xchg
loopne
or
xchg
movsb
sbb
mov
or
in
or
cmpsl
test
fsubs
and
iret
das
jns
cmp
test
push
adcb
out
inc
decb
loopne
push
stos
lea
out
rclb
xor
sub
inc
sti
ds
insb
dec
jmp
pusha
test
mov
stc
clc
adc
pop
dec
and
mov
jg
or
xor
stos
nop
cs
and
rorb
or
data16
xchg
adc
mov
push
mov
jo
out
test
xorb
into
popf
aad
sbb
cwtl
sbb
pop
sbb
movsl
jp
adc
dec
xlat
sub
mov
call
loop
stc
pop
mov
gs
iret
fimuls
mov
cwtl
or
sbb
pop
pop
aad
push
sbb
mov
addl
xchg
sbb
add
test
test
scas
in
mov
addl
scas
not
and
mov
xchg
or
in
sub
and
and
int
inc
call
cmp
in
xchg
scas
out
lods
pop
mov
push
mov
lds
into
lods
notl
std
pop
test
add
dec
sbbl
jns
or
push
das
or
and
sbb
push
push
pusha
stos
xchg
nop
fdivl
test
fidivl
mov
add
inc
loope
jae
pop
pop
bnd
lods
push
jo
lcall
imul
inc
cli
pop
xchg
cld
or
outsb
jl
or
cltd
inc
dec
in
sbb
hlt
adc
insb
and
pop
pushf
xchg
push
jecxz
cmp
or
inc
mov
pop
and
push
mov
and
sub
cmp
imul
sbb
nop
dec
mov
mov
cld
cmp
das
popa
push
daa
repz
sahf
cmp
adc
inc
hlt
sbb
adc
cmp
jge
jbe
dec
jne
or
xchg
mov
neg
sub
push
or
sbb
iret
data16
jl
sub
add
addb
std
dec
cmc
pusha
sbbb
jecxz
pop
push
jg
test
fdivs
push
daa
push
imul
mov
mov
xor
lret
frstor
xor
das
cvttps2pi
add
es
fsubl
or
cmp
imul
push
pop
or
add
movsb
adc
fiadds
cmpsl
push
pop
clc
mov
pusha
adc
lret
loop
fbld
add
in
aaa
sbb
das
ds
mov
mov
popf
cltd
rcrl
pop
mov
xor
sbb
push
stos
jns
sbb
test
out
enter
mov
insl
movsb
cwtl
pop
repz
or
test
xchg
adc
sbb
sub
ret
insb
fstpl
inc
cwtl
cmc
insl
add
cmpb
mov
adc
in
imul
xor
ss
push
push
xchg
sub
sub
iret
hlt
pop
popf
sub
sarl
aad
sbb
daa
aad
cwtl
push
or
sarb
imul
repz
fucomp
loope
or
sarl
aas
push
cmp
test
out
orl
clc
sub
mov
repnz
push
jp
inc
sub
addr16
push
bound
pop
repz
bound
pusha
xor
outsl
and
ret
mov
and
outsb
fcom
dec
fmul
dec
cmp
and
pop
inc
in
pop
mov
mov
pop
fstpt
les
lods
add
jnp
shll
and
mov
addr16
mov
xor
bound
sti
aaa
es
out
cmp
add
pop
xor
sbbb
movl
rcrb
add
outsb
mov
and
push
ja
inc
push
jbe
pop
add
int
adc
cmpsb
sbb
popf
push
cmpb
pop
xor
adc
mov
movsl
into
dec
int
incl
cmc
imul
in
ret
push
ror
icebp
jb
inc
in
loope
orb
cmp
lret
sahf
cmpsb
adc
aas
cwtl
sub
pop
dec
xchg
inc
mov
xchg
mov
ret
daa
xor
loop
repnz
or
scas
imul
nop
mov
add
or
mov
dec
jne
sbb
inc
iret
cli
or
sti
lock
xchg
int
hlt
dec
mov
popa
sub
fs
test
repnz
repnz
cltd
imul
jl
mov
lea
sbb
shlb
inc
sbb
xchg
sbb
adc
push
mov
mov
add
insl
aad
or
popa
std
lds
add
sahf
adc
sub
inc
stos
dec
pop
notl
mov
stos
add
mov
icebp
shlb
cwtl
adc
imul
pop
cmc
stos
pushf
cltd
in
or
inc
ds
mov
xchg
fldl
filds
sbb
inc
pop
or
mov
xor
notl
jle
and
xchg
imul
jae
dec
in
mov
sub
and
xchg
push
jb
cmp
lahf
aas
add
stos
ret
or
sbb
mov
jno
inc
test
xor
pop
mov
sar
and
imul
in
push
outsl
aam
pop
add
xchg
cmc
ss
shlb
jb
shlb
jmp
clc
repnz
dec
add
push
jl
add
fimull
icebp
lahf
push
aam
filds
fwait
cmp
or
aad
inc
test
mov
xchg
std
dec
scas
aad
adc
pop
sub
sbb
adc
imul
das
stc
ficoml
jle
add
push
fsubp
sbb
ds
movsl
aam
or
loopne
dec
jns
and
or
ficompl
xor
int
xchg
aad
daa
adc
inc
push
stos
pop
cmp
mov
dec
sbb
inc
loopne
in
cmp
shll
xor
xor
call
sbb
ret
mov
add
push
mov
mov
into
lods
jns
jns
xchg
pop
mov
push
adc
or
mov
sbb
mov
adc
rclb
dec
repnz
xchg
or
sub
push
scas
insb
rorl
lret
dec
jae
scas
mov
js
insl
lods
mov
xchg
inc
cmp
jb
push
cli
pop
loop
pop
sti
xorl
sub
dec
mov
jns
inc
push
sub
mov
and
arpl
int
ds
adc
mov
les
lret
push
mov
cs
loope
jnp
out
fcompl
fistl
xchg
popa
sbb
xchg
jle
lds
ret
jo
scas
xchg
aas
push
test
sbb
out
xor
imul
jg
jbe
daa
out
add
or
lret
in
add
push
cmp
stc
cld
aas
cli
dec
jecxz
xchg
scas
pop
adc
addl
sti
rclb
pop
in
jo
fisttps
sub
cmp
cmpsl
adc
push
outsl
aas
fdivrl
stos
mov
xchg
out
call
sub
lahf
jae
mov
xorl
aas
mov
cmpl
lret
das
xchg
jecxz
roll
and
pop
jb
mov
test
cmp
mov
jne
shlb
repz
push
cmp
jne
lods
ret
pop
ret
imul
movsl
rep
cmp
bound
adc
dec
and
mov
add
pop
add
xor
push
push
fs
push
movsl
and
jno
addb
xor
inc
sbb
pop
pop
adc
inc
sub
inc
pushf
pop
mov
dec
mov
push
pop
xchg
jb
fistpl
add
xor
push
push
nop
adc
push
outsl
sub
push
lcall
and
testb
push
inc
mov
dec
lahf
pop
test
repz
push
mov
pop
xchg
mov
add
stos
or
jp
jnp
mov
push
cmp
mov
sub
mov
push
jo
pop
and
inc
rcrb
lods
insl
pop
aas
mov
lret
push
fst
lods
mov
xchg
fwait
imul
inc
xchg
sahf
sub
rcl
dec
xor
and
cmp
xor
sti
xchg
outsl
in
push
xchg
xchg
int3
xlat
ret
jns
jo
sub
lock
inc
sahf
push
shr
push
scas
jle
addl
mov
mov
divl
in
xchg
xlat
add
jecxz
in
mov
cwtl
test
paddsb
fcomi
ljmp
pop
sbb
mov
aam
push
push
mov
cmp
popa
ljmp
inc
sbb
jecxz
imul
jno
movsb
jge,pn
mov
lods
aad
fidivrl
outsl
and
in
or
mov
sahf
push
ja
jmp
push
mov
je
mov
mov
cmp
cmpsl
std
add
popa
std
negl
fwait
push
int3
nop
icebp
xor
mov
or
add
jge
pushf
lcall
das
push
xchg
rdtsc
and
ja
jle
iret
fildl
je
mov
cmpsl
push
in
inc
jg
adc
xchg
pop
das
sbb
mov
inc
dec
dec
lods
scas
add
adc
shlb
jo
jg
mov
in
lahf
mov
or
and
and
scas
sub
leave
lea
insl
test
les
push
or
mov
jnp
cmp
push
hlt
jnp
cmp
sub
mov
mov
mov
and
stos
loop
repz
sub
mov
clc
pop
push
xor
mov
ret
jg
xchg
call
inc
cmpsl
xchg
adc
lcall
stos
adc
into
ret
repz
cmovp
mov
add
and
fwait
mov
neg
mov
test
pop
fmull
js
jne
scas
into
push
in
inc
dec
mov
mov
stc
sbb
push
pusha
inc
fnsave
sarb
outsb
xor
addr16
mov
jle
popf
ret
orb
loop
mov
lret
test
xchg
add
dec
dec
cwtl
sub
rorl
jge
push
stc
or
mov
pop
les
aad
mov
mov
andl
movsl
ljmp
mov
mov
and
popa
rclb
aas
and
dec
add
sub
loop
aad
ror
sbbl
mov
push
lret
ret
loopne
inc
fisubl
nop
add
filds
pop
loopne
adc
cmp
push
mov
jg
call
xor
inc
ret
fwait
loop
jns
and
and
xchg
mov
xchg
fildl
outsb
fistl
push
add
jne
xor
xor
aam
lss
inc
jno
jle
aaa
sub
inc
inc
add
xchg
adc
mov
cmpsb
xchg
pop
cld
repz
xor
test
daa
loop
add
movsl
cli
stc
js
popf
in
stos
pop
or
ds
cwtl
jne
inc
fistps
dec
jl
cmp
add
fsubrl
leave
outsb
rorl
ret
lods
mov
fsubr
pop
jp
mov
jo
jns
cmpsb
test
fisttps
lcall
testl
aam
loope
jnp
fldz
notl
inc
mov
push
lods
leave
mov
mov
fwait
sub
aad
pop
stos
stc
dec
mov
int
sbb
or
lret
insl
adcb
sbb
test
dec
lods
nop
xor
insl
xchg
jno
pop
subl
lret
fldcw
mov
mov
outsb
mov
stc
scas
xor
les
jns
xor
repnz
nop
jo
outsb
mov
adc
adc
pusha
repz
sub
jge
repz
lret
xor
nop
xor
pop
mov
jle
mov
roll
shl
mov
push
adc
arpl
xor
add
cmc
mov
shl
pop
adc
lods
jns
pop
out
add
das
push
push
loop
test
mov
int3
and
not
addr16
not
push
mov
push
insl
mov
push
nop
cmp
pop
testl
jge
test
nop
sbb
xor
push
lret
adc
mov
mov
gs
push
push
mov
and
lods
out
scas
leave
lcall
ljmp
leave
mov
jmp
mov
popa
sub
sub
xor
fbstp
cmp
lds
inc
in
push
pop
mull
mov
test
add
fwait
pop
enter
sbb
test
pop
xor
mov
cmpsl
ds
adc
icebp
inc
dec
ja
xchg
into
test
add
int3
pop
jae
jae
ret
dec
lds
ret
loop
pop
or
cltd
dec
test
mov
shrl
inc
pop
iret
or
mov
push
push
jnp
push
mov
jecxz
adc
in
aas
cmp
sub
cltd
jp
inc
inc
aad
lods
hlt
push
insb
fcmovnb
push
faddl
icebp
sub
rcll
lods
aaa
cltd
xchg
adc
push
jae
cmpsb
inc
or
sub
xor
icebp
push
mov
xchg
cltd
jns
mov
lea
imul
sub
test
pop
out
dec
dec
mulb
xchg
push
adc
lahf
mov
sti
out
dec
cwtl
jecxz
loopne
jmp
adc
dec
insl
nop
or
ljmp
jno
dec
mov
hlt
outsb
mov
hlt
jae
or
xchg
mov
movsb
icebp
mov
out
push
ljmp
mov
dec
jp
mov
les
or
ret
rcl
nop
mov
movsl
mov
cmp
fs
pop
out
shll
data16
adc
dec
aad
inc
sub
pop
ss
inc
popa
cwtl
adcb
testb
popf
mov
imul
adc
dec
rcll
push
sub
in
test
lods
jbe
sub
and
xchg
cmp
jnp
cld
lret
push
insl
popa
jo
jno
sbb
pop
push
repnz
mov
popa
sahf
xchg
pop
sub
adc
cwtl
mov
int3
cwtl
and
lahf
pop
fiaddl
fsubr
xlat
sub
repnz
data16
cmp
bswap
inc
mov
jg
loope
push
add
inc
pushf
insb
nop
repz
aaa
mov
out
lea
lret
int3
mov
ret
lret
add
stc
int
cmpsb
into
shr
movsb
mov
mov
lahf
testl
fmulp
mov
cs
push
vpslld
jns,pt
and
cld
data16
push
sub
int3
jne
sbb
lcall
jg
mov
pop
scas
xchg
mov
sub
lods
mov
and
dec
pop
mov
sbbl
aaa
or
or
pop
data16
xor
aaa
jge
les
pop
lret
mov
jp
mov
mov
lret
cmp
cmp
cli
add
ss
out
mov
fwait
pop
lock
fmul
test
cli
or
sub
pop
lret
mov
lret
lods
scas
mov
jb
sub
bound
sbb
out
mov
decl
push
jo
out
popl
aam
ss
fadd
xchg
cli
cltd
dec
in
cmp
adc
cli
jecxz
out
and
or
loop
xchg
cmp
add
or
lods
sarl
fcompl
cmp
in
int
std
mov
cmp
imul
mov
lds
je
pusha
push
sub
test
cmpsl
addl
add
test
sbb
imul
adc
in
nop
jp
cmpl
mov
jns
add
jecxz
ja
es
out
xchg
inc
sti
xchg
lea
and
mov
jbe
pop
jl
cld
sub
lea
frstor
pusha
sbb
xor
push
nop
inc
scas
jnp
adcl
rolb
inc
cmp
in
lret
movsl
jp
inc
push
fcom
es
cmp
in
push
shll
sub
dec
inc
stos
add
aad
popa
fcompl
fsubr
pop
data16
jae
loope
dec
fstl
inc
adc
test
mov
and
mov
loope
icebp
push
xor
loop
add
je
mov
adc
add
fildll
outsb
das
shrl
cmc
inc
mov
mov
movb
popf
loope
jb
dec
ds
addr16
je
insl
and
add
sbb
mov
adc
mov
mov
lahf
fdivrs
inc
xor
pop
jp
loope
pop
movb
push
and
scas
into
pop
mov
fsubrl
call
and
call
in
adcb
aad
pop
jbe
inc
pop
and
and
cs
mov
out
push
cmp
sbb
mov
pop
or
push
and
gs
das
xchg
dec
enter
lods
out
enter
push
mul
mov
insb
inc
jnp
fdivs
leave
xchg
lock
rorb
cwtl
addr16
icebp
ja
jmp
push
add
and
fstpt
push
push
jne
jbe
adc
or
sub
stos
lock
ljmp
out
mov
push
ljmp
js
sbb
cwtl
jecxz
jnp
out
pop
imul
dec
std
pop
mov
pushf
mov
orb
faddl
xchg
xchg
sub
cmp
sub
sarl
push
cmp
cwtl
js
mov
addl
xchg
xchg
inc
insb
or
inc
pushf
icebp
cmp
pop
push
in
xlat
adc
test
lods
imul
scas
or
out
add
andb
fwait
mov
dec
gs
xlat
std
insl
inc
loop
rclb
pop
inc
test
inc
pop
cmpsb
rclb
sarb
cltd
fadds
fwait
push
cmpsb
insb
fmuls
call
in
and
or
and
inc
sub
mov
jecxz
pop
fwait
rcrl
mov
sbb
xchg
sahf
mov
mull
pop
push
adc
mov
aas
lods
rol
imul
push
out
popf
mov
jp
jg
adc
aad
xor
inc
aaa
in
mov
lret
mov
sub
les
and
aas
lcall
rorl
popf
mov
dec
cmp
sbb
and
push
push
icebp
pop
sbb
pop
icebp
in
aad
clc
idivb
jnp
gs
and
mov
sub
pop
dec
jge
sub
dec
xor
outsl
movsl
data16
std
imul
jecxz
push
lcall
mov
adc
insb
inc
inc
lret
mov
stos
cwtl
xchg
cmp
push
arpl
mov
dec
xchg
mov
div
jo
mov
add
jae
insb
or
cmp
add
inc
and
int
lret
jg
loope
loopne
test
loop
mov
sti
xchg
arpl
xchg
cmp
dec
in
sub
les
dec
mov
xchg
jp
mov
sub
mov
es
and
jmp
or
int3
repnz
or
jb
mov
enter
insb
push
aas
movsl
and
dec
out
pop
ja
fdivrl
adc
xchg
or
mov
pop
xor
jno
jmp
mov
add
insl
std
in
xor
cmp
iret
pusha
aad
pushf
mov
mov
in
scas
ds
xor
inc
add
dec
mov
jbe
lods
sbb
aaa
add
cltd
sub
pushf
inc
dec
inc
dec
jl
mov
imul
jne
add
popa
andb
mov
or
inc
mov
stos
sub
adc
loop
movsl
and
adc
add
or
pop
stos
adc
arpl
sub
mov
pop
loopne
mov
lret
mov
mov
div
aam
cmpsb
rolb
jnp
aad
lahf
xor
push
dec
lahf
xchg
lret
cmp
mov
call
ret
adc
in
icebp
dec
fisttpll
or
pop
or
inc
sub
or
les
xor
pop
loop
in
stos
inc
pop
out
xchg
add
sub
mov
stos
sbb
loopne
out
mov
adc
push
xchg
enter
inc
mov
xchg
pusha
std
and
and
jno
in
mull
jmp
mov
jmp
cmp
add
es
loopne
push
test
jg
das
sbb
subb
popa
sahf
mov
lods
jecxz
inc
cmp
mov
daa
push
push
test
cmp
mov
mov
jne
and
or
jne
movsl
rorl
mov
adc
xlat
data16
test
adc
icebp
jno
lret
js
dec
and
pop
lock
add
dec
dec
pop
add
call
sahf
fs
sbb
scas
lret
in
xor
test
test
and
mov
cmp
cmp
loopne
movsb
mov
cli
rcrb
popf
aad
pushf
scas
xor
rcrb
dec
push
rcl
add
push
ret
mov
je
bswap
push
mov
ret
mov
mov
into
push
dec
fs
pop
cld
or
dec
outsb
lods
imul
aas
sahf
shll
cmp
adc
jle
xor
mov
mov
or
xlat
or
mov
mov
cmp
imul
adc
cmc
inc
adc
jl
xchg
lahf
add
sbb
mov
icebp
pop
sbb
xchg
sbb
lods
jae
dec
or
jns
js
adc
pop
es
arpl
sbb
dec
add
push
xorl
stos
xchg
js
or
sbb
cltd
fwait
dec
in
cmp
and
push
jle
lret
jae
jnp
push
popa
nop
and
in
sub
and
add
jmp
out
cs
ja
pushw
sub
jmp
push
push
out
cmp
fisttpl
push
pop
repz
ror
aaa
pop
jno
pop
inc
pop
das
add
push
cmp
mov
insb
and
lds
cmp
cmp
push
ret
or
fwait
xor
ljmp
or
shlb
dec
stos
bound
xor
sub
push
stc
cwtl
add
js
pop
xor
mov
outsl
inc
call
mov
xor
mov
shlb
jmp
repz
gs
mov
pop
movsl
les
mov
mov
xor
cmc
repz
push
cmp
stc
stos
out
xlat
push
lods
mov
movsl
cmp
and
inc
sub
push
sub
adc
sbb
leave
lea
dec
mov
lods
rol
add
rcll
adc
in
data16
popf
jle
fsubs
out
data16
aam
push
lret
dec
adc
loope
scas
in
movsl
push
out
test
xchg
movsl
jne
mov
dec
aad
and
or
fisttpl
xor
dec
lea
mov
lds
outsl
pop
xchg
lret
mov
cli
rclb
lods
outsb
xchg
aad
push
inc
pushf
movsl
mov
jae
sbb
fistl
bound
sti
sub
xor
cmp
in
test
stos
mov
sti
inc
cltd
cs
pop
or
cli
ss
les
and
call
pop
les
jmp
sarb
xor
jne
out
movsb
es
daa
aas
pop
in
aas
dec
mov
jb
sahf
loope
insb
jb
push
or
in
fs
shlb
jmp
inc
inc
shll
sub
jmp
pushf
mov
orl
arpl
dec
mov
and
out
std
add
sbb
bound
jp
mov
inc
stc
ja
adc
sbb
adc
pop
and
lret
and
or
sbb
and
lods
lret
pop
cmp
cwtl
lock
or
adc
andl
sbb
cli
lods
add
ds
cmpb
lods
mov
or
xor
out
cmpl
jl
shrb
adc
stc
popa
push
dec
fsubrl
mov
mov
or
pop
jmp
xchg
dec
xlat
je
pusha
lahf
sub
jnp
daa
loope
jp
sub
daa
mov
xchg
mov
and
xor
jmp
sbb
push
xor
mul
or
mov
cmp
push
push
scas
push
stos
mov
insb
sub
jp
sub
sbbb
out
insl
lret
call
mov
pushf
ss
mov
pop
mov
jl
cmp
xchg
test
jg
and
push
push
cmp
stos
mov
xlat
adc
cmp
inc
push
sti
mov
dec
add
jp
scas
aam
insb
addr16
jbe
mov
inc
in
lods
and
mov
test
inc
jmp
jne
xchg
dec
add
inc
and
imul
sub
roll
or
ret
mov
bound
movl
decb
ret
jo
cmp
loopne
aad
les
cs
push
out
ficompl
jecxz
xor
jp
xlat
sub
mov
adc
mov
enter
sub
xchg
xor
fldt
aam
pop
testl
xor
sti
repnz
dec
adc
inc
sbb
test
cld
mov
js
xchg
mov
leave
pop
pushf
imul
mov
insl
adc
pop
das
movsb
xor
lret
and
lods
and
outsb
sbb
ss
dec
mov
cld
sub
adc
aam
je
cmp
cmp
ret
push
iret
xor
es
mov
sbb
inc
in
inc
push
shr
xor
lods
leave
sub
cmp
mov
sti
out
jb
adc
fwait
sbb
in
push
adc
mov
push
into
test
inc
dec
adcb
std
mov
aaa
aad
test
sbb
sahf
mov
cmp
push
pop
xor
cs
dec
lock
xor
sti
lods
popf
mov
rorb
xchg
mov
cmp
xlat
cmp
clc
cltd
push
subb
dec
cmp
inc
repz
jmp
lock
xchg
in
mov
and
jbe
shrl
sbb
mov
jne
outsb
push
jnp
out
outsb
insb
fwait
in
jno
sbb
imul
movsb
gs
popf
shlb
in
xor
jo
fstpt
ljmp
rorl
leave
jne
mov
jns
inc
fs
xchg
repnz
nop
dec
movsl
mov
rcrb
testb
mov
xchg
lahf
pop
pop
and
out
add
push
lea
leave
cld
int
pop
aad
insb
xor
or
movsb
test
sbb
ret
dec
cmc
and
addr16
fisttps
loopne
sti
fsts
pop
xlat
sub
je
jno
xor
jb
out
add
xor
mov
inc
repnz
imul
xchg
push
inc
push
iret
sar
imul
aaa
push
mov
jb
and
sahf
sahf
jo
lea
pop
inc
mov
cmp
inc
mov
add
adc
mov
test
jp
mov
test
cmp
sbb
xlat
push
imul
aas
fsubrs
rep
bound
xchg
aas
add
push
pushl
hlt
pop
xor
das
cmp
xchg
pop
cmp
aam
fildl
push
fstl
cmp
pop
sub
addl
xchg
xchg
push
aad
hlt
lock
cld
pop
lods
pop
mov
add
lret
push
cltd
call
add
sub
mov
out
mov
popa
sbb
xchg
inc
push
mov
addr16
test
les
not
mov
mov
in
std
cmp
push
les
outsl
test
jns
aas
or
add
jns
xchg
mov
ret
xchg
xor
sbb
out
roll
push
and
into
jb
mov
lods
loopne
jg
lods
lahf
adc
orl
pop
stos
mov
int3
and
cmp
ja
cli
in
test
jmp
jns
mov
call
pop
sub
fwait
stos
dec
push
dec
pop
dec
pop
jmp
sub
cmp
mov
fwait
stos
mov
subl
dec
dec
add
int
stos
mov
rorl
rolb
clc
fs
add
add
push
dec
jnp
cli
cmpl
xchg
shll
jns
ljmp
clc
imul
sbb
pushf
pop
xor
loopne
jmp
dec
mov
sub
mov
loope
push
movsb
jno
sub
mov
jmp
fldl
cmc
addr16
xorb
stos
loopne
pop
jl
mov
jne
sbb
or
gs
and
and
lds
es
mov
xor
lcall
cmp
xor
inc
mov
in
das
jo
add
cwtl
std
cmp
cmpsl
aam
test
pop
cs
jecxz
ljmp
xchg
loopw
les
fisttpll
loopne
outsb
xchg
scas
cmp
rolb
ljmp
shrb
fildll
pop
jno
in
fsub
cli
fstpl
sti
movsl
pop
mov
fldl
les
sarb
xor
cmp
in
cmpsb
test
or
cld
jp
adc
jmp
bound
cmovne
mov
or
pushf
aaa
adc
jno
jnp
shl
xor
call
mov
in
movsl
js
and
push
mov
push
mov
adc
leave
xchg
and
mov
xor
fcomip
roll
cmp
xor
imul
push
cltd
sub
sub
ljmp
xor
jmp
mov
dec
or
int3
and
and
es
les
jnp
ljmp
icebp
inc
push
add
jle
aam
mov
mov
push
out
jg
jp
rcrb
dec
xor
sbb
repnz
and
enter
mov
mov
jmp
shr
add
cmp
mov
pop
pop
push
in
push
in
cwtl
and
in
cmp
out
test
inc
das
sbb
lret
and
pop
xchg
repnz
cltd
fisttpll
jg
xor
push
repz
cmp
jne
out
test
fdivrs
cmp
fs
sbb
ficompl
xchg
in
mov
call
mov
mov
int
xor
arpl
repnz
mov
cwtl
pop
nop
mov
mov
xchg
call
rclb
and
jle
push
scas
mov
cmp
roll
fimull
pop
loop
xor
push
sub
and
sbb
inc
cmovs
xchg
movsl
inc
iret
or
insl
pushw
rclb
aad
push
and
pusha
daa
bound
fwait
lods
mov
mov
and
ja
push
mov
cmpsl
das
xchg
inc
pop
sub
pop
call
lock
lcall
jbe
or
adc
lods
je
xor
fdivr
mov
cli
mov
adc
lret
insb
lret
divl
jmp
mov
data16
inc
cmpsb
push
add
leave
jg
pushf
repz
cmp
pop
inc
imulb
dec
pop
cmpb
mov
push
sub
mov
xchg
sbbb
lds
jmp
add
popf
pop
fcmovnbe
ds
push
inc
shll
sarl
inc
or
pop
sbbl
sti
insl
fisttpll
and
xchg
out
lret
adc
pop
fiaddl
sbb
or
add
and
addr16
cli
xor
je
leave
sub
sbb
add
push
scas
mov
jns
dec
rclb
inc
xor
fnstenv
cmp
xor
and
lret
or
roll
dec
xlat
mov
mov
int3
pop
gs
and
jno
ret
lods
dec
imul
cmp
out
mov
arpl
in
mov
lock
jnp
fs
xlat
jl
pop
rol
mov
xor
jo
mov
ja
test
ja
pop
add
and
inc
je
jg
pop
mov
fsubrs
xor
sarl
insl
fcomip
scas
popl
mov
lcall
dec
in
repz
dec
adc
add
addr16
jecxz
jl
mov
arpl
mov
rolb
cltd
mov
loope
popf
fs
jns
cmpsb
test
popa
cli
adc
jnp
jbe
xchg
out
jmp
cli
sbb
in
push
pop
hlt
jle
fwait
mov
jmp
dec
ss
mov
ljmp
jge
sbb
loope
adc
shlb
mov
add
push
dec
mov
push
cld
sub
cld
jl
cld
ror
pop
jae
sar
idivl
cmpsl
push
mov
mov
adc
inc
sbb
outsl
push
mov
jo
jb
xorl
dec
xor
ret
daa
loope
stos
and
sbb
loope
movsl
xchg
sbb
scas
fwait
add
mov
fidivl
dec
icebp
xchg
mov
inc
cld
test
adc
ret
xchg
stos
inc
out
xor
scas
shll
mov
cwtl
mov
push
pop
les
insb
push
rcll
or
frstor
aas
lds
mov
in
sub
dec
jg
lcall
ret
sarb
imul
adc
outsl
cs
outsb
addb
mov
lahf
fwait
mov
or
or
pop
push
call
shrl
and
dec
xchg
xchg
addr16
popf
loopne
les
stos
in
test
loop
out
mov
mov
js
mov
and
xchg
jnp
in
pop
popf
inc
adc
mov
fldl
rorb
add
jae
lods
leave
stos
adcb
pop
jl
fcmove
in
cmpl
xchg
movsl
xor
or
out
jns
aam
add
push
mov
jb
inc
les
aas
inc
push
test
jno
jns
push
lret
pop
lods
xchg
mov
test
jle
stos
call
mov
mov
jmp
shrb
rcrb
sub
fdiv
push
sarb
pop
xor
cli
fcmove
cwtl
decb
jp
push
punpckhdq
cmpsl
push
mov
add
pop
es
bound
jmp
sbb
sbb
cmp
pop
and
pop
and
repnz
mov
add
mov
pop
and
adc
jmp
adc
pusha
mov
insb
mov
inc
loope,pt
push
test
or
leave
sbb
lock
and
cmp
data16
ljmp
das
or
sub
lahf
and
and
adc
stos
sub
xchg
push
in
out
xchg
jnp
dec
jle
sub
out
test
gs
mov
mov
xor
aas
adc
jge
pop
adc
insl
test
or
push
jg
push
inc
push
inc
nop
insb
and
in
xor
imul
ret
lret
and
pop
cmp
pop
stos
dec
jmp
dec
out
cmp
icebp
dec
and
jl
add
jmp
popf
mov
jb
mov
fnstcw
push
pop
rcrl
xchg
fisttpl
add
sub
dec
and
pop
das
push
dec
fcomps
jnp
cmp
loopne
cli
outsb
repnz
jne
jns
dec
ds
sbb
addl
popa
rcr
mov
insl
shr
jb
pop
out
jmp
push
cmp
test
lods
pop
mov
repz
sub
icebp
xor
xchg
jmp
int3
into
or
divl
popl
divl
pop
cmpsl
daa
xchg
adc
or
cld
fwait
jg
dec
cwtl
shr
in
pop
sub
mov
inc
imul
add
push
mov
out
or
test
jge
std
push
pop
and
ss
loope
cwtl
inc
mov
das
lods
xor
test
push
mov
repnz
sbb
movsl
push
cld
mov
jbe
sub
mov
adc
fistl
add
add
push
jl,pn
movl
cltd
clc
mov
in
jne
jb
xchg
xor
xlat
push
test
sbb
xor
push
test
fisubrl
insl
dec
lcall
sbb
or
lret
stos
addr16
outsl
mov
ret
cmpsb
out
dec
mov
adc
jmp
pop
iret
or
push
sub
jmp
faddp
lahf
xchg
xchg
jnp
inc
xchg
jp
xor
out
imul
ss
mov
sub
and
push
in
xchg
mov
dec
or
fisubs
lods
sub
push
cld
add
sti
inc
inc
mov
jae
pop
xchg
and
mov
or
mov
fisubl
push
adc
mov
call
and
push
loope
fmull
push
data16
pop
sub
dec
je
jg
push
insl
sahf
push
sbb
xor
cmp
popf
jbe
mov
into
or
push
popa
xor
lock
sti
fcoms
ret
xchg
std
shrl
mov
mov
arpl
pop
lds
lcall
ja
cli
mov
cld
pop
inc
inc
jns
sub
popa
xchg
push
add
std
xor
rclb
and
mov
arpl
cmp
jae
add
rorb
jne
cmpsb
pop
mov
bnd
outsl
mov
jne
test
pushf
iret
xchg
mov
cmc
cli
dec
mov
jl
enter
add
xchg
dec
jp
je
fdivrl
mov
adc
inc
jbe
jg
sub
out
gs
std
mov
xlat
jge
outsl
cmpl
addl
adc
mov
stos
out
clc
cmp
cmp
xchg
test
and
cmp
bound
faddl
inc
iret
clc
lret
add
std
insb
or
or
mov
test
xchg
and
pop
shll
adc
mov
jge
or
sub
or
sub
push
xchg
cmp
lock
mov
xlat
adc
sub
and
jnp
bound
add
jae
repnz
clc
jge
hlt
xchg
fisubl
fisubrl
add
xchg
sti
fnstenv
push
dec
push
sub
fdivrs
jle
mov
clc
cmpsl
es
adc
jno
out
stos
mov
shll
and
movsl
fdivrp
cmp
es
jg
mov
or
out
js
sub
jb
sub
sbb
aad
test
leave
mov
out
jns
sub
xor
stc
xor
adc
mov
push
out
mov
sti
cmpsl
add
and
pop
js
dec
cmp
or
inc
frstor
push
cltd
dec
fistpl
pop
and
insb
iret
sbb
out
xchg
int3
jmp
and
lret
lea
pop
xor
pop
outsl
fcompl
sbb
jge
data16
jbe
jnp
div
iret
out
jno
mov
add
jge
cld
rorb
ds
inc
sti
pop
push
mov
xchg
jb
mov
frndint
arpl
xchg
lock
sub
add
or
js
add
fwait
xor
dec
cli
inc
push
or
cmp
add
xor
jno
cmpsb
cli
sbb
xchg
mov
lea
call
imul
cmpsl
mov
andps
and
js
popf
mov
sub
push
jge
sub
push
stos
int
sbb
ret
pop
pop
jns
repnz
les
out
jb
or
mov
mov
xor
test
sbb
or
pop
dec
aas
push
xchg
out
push
dec
sbb
mov
push
dec
mov
sbb
or
mov
mov
xlat
inc
xor
mov
cmpsl
into
pop
rol
test
aaa
pop
dec
push
cwtl
pop
and
sti
jnp
jecxz
lahf
arpl
and
inc
add
add
cmc
mov
mov
jp
repnz
mov
pop
mov
push
inc
daa
mov
mov
rcl
nop
cmp
push
xor
enter
mov
adc
jae
std
lret
pop
and
mov
mov
dec
jns
shlb
sbb
sub
test
in
or
mov
cmp
or
daa
bnd
cmp
sbb
std
lcall
repz
adc
adc
in
stc
cli
testb
or
sar
rolb
lock
jne
gs
add
clc
int
or
or
sbb
xchg
popa
pop
sbb
test
in
or
in
adc
fmulp
lret
pop
xor
jae
and
fstps
cmpsl
and
push
out
jo
mov
mov
and
out
out
mov
push
dec
inc
jg
ljmp
movsb
jg
pushw
frstor
scas
mov
loope
cmpsb
sbb
fucomi
cmpl
inc
int3
bound
add
fbld
push
jp
aad
push
sbb
mov
imul
push
pop
and
cmpsl
sbb
int
aas
shr
pop
stos
aaa
out
adcl
aaa
rcll
push
push
divl
sbb
cld
loopne
xor
cmp
insl
fimuls
aas
divl
arpl
lret
push
jb
adc
xchg
xchg
incb
les
mov
jge
mov
inc
in
mov
pop
xlat
out
xor
enter
dec
test
mov
and
or
mov
push
add
jp
cmp
cmpsl
push
rorl
lret
sbb
lcall
add
pop
adc
inc
arpl
js
outsl
sub
mov
out
jle
mov
sub
jne
pop
or
test
rorb
cmpsb
push
xchg
fsubl
sub
nop
mov
daa
int3
dec
movl
and
jns
hlt
lret
aaa
scas
xchg
jae
inc
test
mov
lock
sysexit
push
popa
push
std
mov
adc
adc
loope
mov
aad
xor
xor
adc
daa
mov
sbb
lock
inc
cmp
dec
adc
sbb
add
movl
stos
out
aad
pop
cmpsb
push
imul
and
mov
push
fyl2x
push
xchg
jmp
aad
stc
and
mov
xchg
gs
int
or
shlb
sbb
jl
jecxz
dec
push
iret
movsl
lcall
repnz
mov
dec
add
loop
jp
sub
dec
dec
int3
jg
ljmp
bound
and
shrb
push
cmp
fwait
ret
pusha
aam
mov
mov
cmove
mov
sub
and
push
popa
jno
cmp
push
pop
fstpt
dec
adc
data16
les
aad
gs
sub
or
lock
lods
push
sbb
imul
iret
outsb
mov
rep
aad
hlt
ret
test
nop
sbb
mov
aaa
mov
pop
mov
or
imul
aad
std
inc
cwtl
rcll
cmp
test
adc
bound
gs
cmp
or
subl
icebp
aad
sbb
data16
fiadds
lcall
fdivrp
or
pop
sbb
push
cmpsb
adc
and
mov
or
jl
pop
push
mov
mov
testb
stc
ds
enter
in
dec
lahf
sti
inc
pusha
sbb
idivl
fbstp
mov
mov
cmp
xchg
or
cmp
test
mov
pop
push
jge
sub
cmp
aaa
dec
pop
xor
inc
enter
and
fstpl
jp
out
leave
mov
push
clc
lret
repnz
aad
dec
push
jno
and
addb
jbe
ficompl
hlt
push
stos
dec
sbb
gs
add
aaa
insb
fstpt
arpl
mov
call
mov
pop
leave
dec
loopne
cld
test
jge
mov
fwait
cmp
hlt
in
mov
daa
aas
stos
aas
mov
sti
push
mov
pushf
xor
out
mov
xchg
ret
pushf
and
push
lret
dec
ss
sub
pop
popa
sahf
lahf
insl
push
or
dec
xor
leave
xchg
scas
jle
pop
inc
lock
cld
negl
cmc
xchg
out
adc
jge
cmp
and
ficomps
adc
rorl
mov
push
mov
daa
sub
jmp
cmp
inc
cmp
idiv
outsb
jp
popw
xor
jg
stc
loope
in
test
cmpl
push
imul
or
in
es
pop
cltd
sbbl
movsl
inc
int3
xlat
das
mov
popf
dec
push
addb
push
push
mov
rolb
push
cmp
stos
mov
test
shr
add
pop
lods
xchg
and
pop
add
mov
movsl
fisttpl
inc
dec
mov
mov
fcmovnu
ljmp
sbb
test
outsl
hlt
int
popa
ljmp
mov
lock
jbe
push
sbb
or
xlat
push
dec
pop
add
sbb
cld
mov
mov
js
popa
dec
fistps
dec
mov
cmp
mov
xchg
sbb
or
arpl
ret
js
xchg
daa
shlb
rolb
add
loopne
ja
ret
loope
lods
lea
mov
fcoml
aad
sub
mov
lods
int
pop
and
mov
sbb
cld
mov
xlat
jbe
das
jae
mov
or
test
and
inc
pop
xchg
xchg
push
jb
add
or
cmpsl
xlat
addr16
push
imul
inc
pusha
lock
push
hlt
dec
push
lock
cwtl
test
adc
testb
jb
scas
cmpsl
mov
iret
push
out
jl
lcall
mov
mov
in
std
cmpsl
repz
xchg
push
sarl
add
addr16
int3
inc
icebp
test
add
or
push
xchg
es
mov
inc
sub
xor
pop
mov
cs
cs
mov
mov
stos
pop
pop
mov
xor
mov
cmp
loope
jge
orb
fdivrl
mov
gs
pop
or
dec
lret
test
les
xor
loope
loopne
mov
xor
iret
mov
mov
aaa
pop
data16
jne
cmp
push
jl
push
gs
out
inc
add
sbb
xchg
add
mov
xor
test
clc
divl
stos
movsbl
in
hlt
lret
and
cmp
push
loope
cmp
push
xor
sub
ss
outsl
ljmp
add
leave
lret
ficomps
or
lret
popa
aam
movsb
stc
xor
aaa
es
jbe
pop
fists
jbe
sahf
roll
push
imul
jmp
sbb
pop
in
jle
lcall
sahf
fstpt
mov
inc
pop
out
jp
leave
outsl
insl
jecxz
xchg
adc
in
je
inc
sub
add
leave
popw
inc
jnp
xor
cmp
mov
arpl
outsb
imul
outsb
lret
mov
cltd
outsb
cli
push
test
xchg
sbb
dec
loopne
arpl
fadds
mov
out
outsl
addl
int3
aam
mov
jae
scas
pop
cmpsl
inc
mov
push
aam
cltd
ret
push
inc
out
add
sbb
sub
outsb
sub
cmp
and
cmp
ja
sub
push
pop
fucomp
ret
dec
jnp
lods
aam
aam
aad
jmp
sti
dec
dec
rclb
push
sub
jp
inc
fnsave
into
xchg
sub
faddl
xchg
lret
call
bound
andb
ljmp
fisttps
inc
push
ret
cwtl
mov
pop
ret
sbb
mov
jno
fucomip
out
aaa
pushf
ljmp
pop
nop
int3
and
mov
add
ja
add
lea
adcb
cltd
mov
hlt
in
and
pop
and
lea
dec
push
cs
sbb
sub
cs
pop
jg
shl
lahf
push
sub
xchg
inc
addr16
pop
adc
cld
jl
or
push
jge
cmp
inc
lds
jg
cmp
dec
dec
adc
mov
add
and
cld
adc
fidivl
xor
or
jge
mov
lret
mov
mov
cwtl
cli
pop
dec
in
push
xor
shlb
cmp
cmp
jl
dec
out
cmp
adc
lret
pop
out
inc
push
mov
or
mov
pop
sbb
ret
push
into
xor
xchg
icebp
cmp
out
ja
int
xchg
in
jae
mov
push
frstor
stc
dec
fisubrs
sbb
outsb
sahf
data16
or
divl
mov
add
adc
sbb
int
jne
mov
jnp
cmpsl
mov
xor
into
shl
cmp
out
cmp
popf
sub
pop
and
pop
or
jne
adc
mov
jmp
lods
add
or
pop
xor
sbb
jge
xchg
aam
popa
filds
cmpsl
dec
inc
mov
icebp
mov
and
shrl
mov
mov
add
pop
stos
mov
xchg
add
mov
sahf
mov
data16
or
out
xlat
iret
jne
sti
push
sub
pop
outsl
je
pop
and
lahf
dec
loopne
test
and
jmp
sbb
out
pusha
xchg
test
inc
add
xor
sub
pop
pop
mov
xchg
sub
dec
in
mov
aas
mov
popa
movsb
iret
scas
mov
insl
insb
mov
ljmp
decl
jb
aas
cwtl
or
pop
je
fs
repnz
adc
lock
cmp
aam
and
dec
dec
decb
cs
inc
sub
pop
adc
pushf
loop
xchg
aaa
fcoml
inc
sbb
hlt
mov
mov
or
insl
loope
sub
rcr
rcrl
inc
adc
not
pop
mov
push
sbb
mulb
pop
sub
hlt
mov
lods
and
int3
sub
icebp
sub
fwait
mov
lcall
and
cmp
fnstcw
lods
ljmp
scas
cmp
aas
adc
imul
out
push
loop
and
ljmp
pop
imull
loope
jg
lock
lods
or
std
xor
push
popf
out
insb
mov
add
sbbb
sub
mov
pop
es
out
stos
jnp
dec
jle
xchg
dec
xchg
int
mov
rcl
push
jb
aam
push
mov
not
sub
mov
sbb
je
pop
mov
std
xchg
out
jne
sbb
mov
inc
mov
loopne
les
icebp
fucom
fistpl
jecxz
xorl
adc
lret
pop
sar
sbb
inc
jecxz
cmp
jmp
rcll
enter
push
mov
or
mov
ds
dec
test
mov
mov
sub
int
mov
xor
dec
adc
enter
aam
clc
and
daa
and
loop
mov
fists
pop
pop
mov
jmp
pop
mov
pop
push
call
xchg
sti
mov
sti
xchg
mov
add
mov
xchg
or
lret
inc
adc
je
divl
lds
jmp
xor
test
sti
adc
push
adc
add
sbb
jecxz
ret
push
add
xchg
stos
shlb
push
or
pushf
ret
ss
fwait
mov
insb
aad
jne
orb
mov
es
pop
pop
ret
or
mov
sbb
rorb
pushf
out
test
loope
pushf
repz
fimull
pop
add
insl
faddl
fwait
mov
add
or
inc
push
lret
xchg
call
dec
lods
ljmp
pushf
aad
xor
ret
flds
sahf
jl
loope
sbb
fwait
mov
push
arpl
dec
into
dec
push
mov
cmp
pop
lcall
lods
ficompl
push
xor
lods
pusha
rolb
sub
sbb
cwtl
adc
movsb
pop
push
adc
mov
sbb
cli
push
lret
loope
fcompl
inc
adc
nop
imul
dec
out
dec
iret
jp
rcll
dec
lods
sbb
jnp
mov
andl
or
dec
sub
icebp
jbe
cli
jns
dec
movsb
push
mov
incl
mov
ret
fdivr
addb
mov
dec
lret
cwtl
clc
xlat
add
ja
aam
xchg
punpcklbw
mov
test
sub
adc
test
stos
scas
inc
mov
fwait
add
aaa
sub
les
mov
pop
lcall
test
ljmp
mov
add
mov
leave
popf
mov
dec
pop
xchg
les
fldcw
imul
dec
xchg
jp
repnz
data16
sbb
pusha
push
pop
jns
insl
xchg
test
stos
gs
and
sub
pop
and
out
inc
dec
repnz
push
out
adc
rep
pop
out
adc
jge
xor
cmpl
mov
jp
jb
lods
mov
xlat
pop
out
xchg
fisubrl
repz
lods
cmpsb
jne
je
add
xchg
mov
mov
sub
xor
in
mov
xchg
fstp
mov
sahf
jmp
pop
pop
sarb
xlat
add
push
pop
xor
push
xchg
pop
add
mov
adc
mov
sub
sbb
push
inc
adc
pop
lcall
mov
dec
sahf
and
ret
lods
mov
jns
das
mov
imul
leave
xchg
daa
jle
icebp
insl
pop
cltd
push
pop
sbb
roll
push
dec
adc
jnp
in
ret
sbb
and
inc
lret
enter
flds
inc
gs
rolb
pop
push
cld
jns
call
cmpsb
fs
gs
cltd
add
lods
dec
fwait
pusha
sub
xchg
daa
sub
sub
ret
mov
mov
rolb
repnz
cmpsb
adc
sarl
stc
sbb
je
aaa
push
idiv
vminps
push
mov
ret
pop
rclb
popf
cmp
cwtl
test
adc
pop
je
xor
dec
pop
sub
or
push
mov
xchg
jns
sbb
or
mov
lds
movsl
pop
pusha
xor
mov
lds
je
mov
out
bound
push
mov
or
or
data16
scas
sub
inc
das
jmp
pop
xchg
fcmovne
shlb
out
icebp
rcrb
hlt
fwait
cli
out
in
hlt
pop
xchg
sbb
test
push
bound
and
jne
sub
divl
add
pop
into
jnp
idivb
iret
inc
in
mov
movsb
sbb
mov
outsb
in
push
push
hlt
mov
nop
lods
ja
mov
xchg
xchg
fcoms
movsb
enter
sbb
push
sbb
pop
push
jg
lea
push
mov
sub
adcl
sub
aad
shlb
nop
loopne
sub
mov
testl
pop
test
jl
mov
pop
inc
dec
push
and
decb
sbb
into
xor
dec
ffree
jmp
pop
adc
sbb
xchg
mov
or
xchg
or
cmpsb
lret
push
push
sub
cwtl
push
test
pop
out
movsb
cmp
je
rorb
pop
js
sub
sbb
movsl
lods
fwait
lret
frstor
push
es
cwtl
je
add
test
adc
inc
pushf
std
ret
aas
imul
out
xor
mov
test
push
popa
adc
out
pushf
orl
mov
jns
jns
jbe
in
pushf
cmp
test
and
xchg
push
int
pop
push
mov
rclb
scas
or
pop
movsl
mov
jge
sti
mov
mov
push
ljmp
or
sbb
mov
jae
fidivl
jp
cmpsb
adc
rorb
xchg
cmpsb
fwait
in
xchg
mov
dec
dec
test
pop
xor
sbb
shll
mov
hlt
jae
xchg
nop
jecxz
icebp
jl
lcall
out
call
xchg
mov
push
push
scas
dec
lods
cmp
outsb
mov
and
shlb
add
or
fdivr
mov
xor
stos
mov
enter
mov
ja
mov
aad
cmpsl
enter
hlt
js
ss
jecxz
imul
pop
pop
stc
sbb
xor
mov
push
mov
mov
sub
cmp
push
addb
lods
adc
out
push
iret
mov
inc
push
inc
inc
dec
rcll
fldl
nop
adc
mov
lahf
sbb
daa
pop
pop
push
jle
arpl
adc
or
pop
std
out
sbb
or
lods
arpl
dec
dec
jns
in
dec
popf
mov
and
mov
rclb
push
out
push
inc
int
xor
loopne
jmp
pop
or
enter
aas
sbb
add
repz
filds
aad
aad
rolb
pusha
or
adc
xor
jecxz
cwtl
arpl
push
adc
cmp
dec
inc
push
lock
lods
fs
xor
cltd
jo
lods
lahf
xchg
jnp
cmp
in
mov
or
push
call
mov
hlt
ds
jae
and
sub
sub
addl
test
notl
xor
xchg
mov
pushf
sbb
add
hlt
lea
mov
shlb
adc
xchg
lods
xchg
ret
dec
test
fwait
loopne
adc
test
sbb
push
fcompl
loope
mov
lsl
sub
and
and
std
add
cmp
enter
xchg
hlt
gs
mov
cmovle
dec
adc
sbb
popf
dec
xchg
push
add
sbb
mov
xor
inc
aaa
imul
bound
xor
push
mov
sbb
mov
dec
mov
xor
xchg
cwtl
cmp
mov
daa
jp
push
jnp
mov
cmc
add
xchg
or
stc
mov
dec
ds
xchg
xchg
cmp
divl
push
outsb
cmpsl
inc
lea
mov
sbb
or
mov
mov
fndisi(8087
roll
lds
int3
inc
xchg
jecxz
jecxz
ret
mul
mov
add
scas
cmp
sub
insb
outsb
jl
pop
mov
sahf
add
push
fimull
push
mov
lahf
and
push
xor
outsl
mov
or
xchg
jns
rep
repz
jg
jns
sub
jecxz
cmp
jo
xlat
and
inc
xchg
push
sbb
xlat
lock
mov
popa
clc
mov
and
pop
mov
into
push
push
add
aam
insl
push
bound
std
xor
dec
sbb
jno
cmp
sbb
cmp
rorb
dec
dec
call
out
xlat
cmc
cmp
call
dec
cmp
outsb
jmp
push
jp
negb
sbbl
das
divb
imul
loopne
clc
addb
jae
add
inc
jb
enter
xor
mov
outsb
das
int
aad
push
test
mov
testl
adc
mov
fxch
cld
pop
loope
pop
lods
fwait
push
std
loopne
xchg
xacquire
inc
fdivs
jle
mov
movsl
ljmp
mov
push
je
inc
push
dec
outsl
out
mov
mov
in
sbb
sub
mov
jns
adc
pop
push
dec
jmp
sbb
shrl
sbb
add
outsl
adc
scas
cwtl
pop
mul
mov
dec
jns
in
cmpsl
popa
adc
pop
outsb
push
cltd
adc
pop
or
aad
fmul
in
dec
call
xchg
stos
sub
mov
lds
dec
sar
adc
repnz
cmpsl
in
je
cmpsl
sbb
sub
inc
jns
add
icebp
lods
popf
repz
mov
mov
sub
push
sub
arpl
xchg
mov
sahf
stc
subb
repnz
and
pop
jb
movsl
mov
das
mov
push
inc
leave
fwait
pop
mov
mov
jae
xchg
cld
into
mov
adc
push
xchg
ret
push
popa
fs
sbb
push
mov
jmp
scas
dec
fisttps
sub
inc
jle
out
loopne
cltd
pop
cmpsl
cmp
and
and
push
mov
ss
inc
pop
jae
mov
rcrl
stc
push
and
icebp
sbb
std
mov
scas
adc
iret
fisubs
pop
mov
imul
ror
dec
cmp
or
nop
fistpll
mov
sub
dec
cli
sub
mov
adc
sbb
fsubs
popf
fsubr
mov
sub
ror
xchg
test
cmp
jno
aam
jge
xchg
jmp
in
sbb
ja
add
loopne
dec
out
jmp
jge
lret
cmp
daa
jb
out
inc
hlt
ud2
outsl
push
inc
idivb
fmull
pop
pop
popf
movsb
mov
dec
dec
les
aam
xchg
push
push
int
out
xchg
jp
movsl
insb
pop
inc
add
aas
scas
mov
ljmp
fidivs
pop
sbb
rcr
clc
hlt
sbb
mov
pop
loopne
mov
fsts
dec
aam
cmpsb
repnz
inc
in
mov
rcl
fadd
inc
lcall
fstl
mov
fcmovnbe
mull
add
jo
jle
adc
cmpsl
xor
fcmovb
lock
sahf
mov
out
jl
mov
clc
push
decb
sti
jp
pushl
leave
pusha
pop
cs
aas
into
mov
jg
cmp
or
adc
jl
cmp
sahf
popf
js
sbb
loope
int3
fisttps
push
ds
stc
sahf
jecxz
xor
lock
dec
arpl
inc
lcall
mov
arpl
xor
sbb
addb
push
movsb
or
dec
mov
cmp
push
fs
cmc
sti
xor
and
pop
cmp
jno
pop
mov
int3
lcall
adc
lods
in
mov
stos
xchg
or
add
cmp
int3
or
rcrl
in
sbb
mov
jno
es
mov
ret
leave
dec
xchg
dec
mov
sbb
push
orl
cld
iret
pop
adc
sub
inc
sbb
xor
rol
xor
imul
xchg
push
cmp
nop
mov
dec
notb
bound
cs
ds
jmp
sbb
adc
xor
adc
sub
fdivrl
xchg
jo
ja
push
cmp
daa
push
loopne
pop
daa
pmaxub
outsl
in
sub
mov
or
lock
repnz
push
pop
pusha
xchg
addl
push
pushf
fsubl
mov
pop
sbb
jge
out
imul
aad
popa
jne
ds
add
call
inc
push
and
mov
enter
clc
je,pn
call
repnz
hlt
fwait
insb
push
jp
divb
and
scas
fdiv
xchg
pop
shrb
xchg
jnp
jne
test
in
sub
or
fxch
inc
jge
mov
mov
insl
sbb
insl
push
fstpt
xchg
mov
jae
or
cli
fwait
gs
insb
loope
inc
lahf
lret
shl
xor
push
push
jge
inc
or
out
lahf
in
or
mov
cmp
adc
mov
sbb
loop
rol
jb
int3
out
mov
pop
std
cmp
push
stc
push
mov
mov
lods
lods
fucom
pop
add
jns
cmp
js
add
inc
xor
sbb
enter
call
stos
or
in
shll
cmpsb
scas
mov
jge
or
js
adc
pop
xchg
mov
adc
push
inc
sub
aam
push
push
out
jno
push
mov
mov
test
cmp
sbb
in
loope
nop
jb,pt
dec
mov
decl
cmpsl
test
and
xchg
cmp
mov
pop
ss
adc
xchg
jle
std
cmpsl
pop
pushf
in
and
ja
std
pop
enter
dec
or
ficoms
add
fdivrp
or
imul
hlt
in
daa
push
cmp
repz
daa
lahf
adc
dec
jnp,pn
mov
test
clc
mov
jg
xchg
cld
cwtl
stos
in
pop
ret
dec
mov
clc
pop
inc
mov
inc
pop
and
sub
mov
fisttpl
loopne
js,pt
jns
mov
cmp
inc
adc
and
mov
and
dec
jns
fsubp
and
inc
cmpsl
mov
pop
fdivs
push
testl
sub
in
jb
je
mov
xor
sub
repz
insb
sbb
movsl
pop
inc
cmpsb
add
cmp
inc
add
cwtl
sub
aaa
mov
sbb
jecxz
sbb
xorl
test
mov
mov
inc
dec
jg
or
clc
or
es
mov
scas
add
mov
dec
sub
add
out
movsl
push
arpl
sub
jle
fwait
adc
fidivs
dec
daa
xor
mov
mov
and
sbb
pop
shrb
out
adc
sbb
xchg
fwait
sarb
cmp
lea
mov
sub
cmc
or
jl
je
and
adc
push
jo
fwait
sbb
iret
stc
mov
dec
mov
in
out
cld
scas
insl
pushf
jecxz
inc
mov
test
into
add
mov
lcall
std
adc
lahf
pop
addl
adc
sbbb
xor
out
shll
sahf
movsb
add
in
stos
mov
cltd
scas
mov
add
add
push
lea
and
fs
mov
jmp
jae
dec
cmp
ret
insb
inc
cmc
or
xchg
daa
jmp
push
inc
dec
lods
pop
test
popa
sub
or
adc
outsl
lods
ret
cmp
or
cmp
loopne
enter
movsb
mov
dec
imul
push
mov
push
gs
lcall
je
sub
out
inc
push
orl
mov
adc
sarl
insb
adc
in
sbb
pop
sahf
insb
push
ljmp
cmp
loope
hlt
sarl
push
xchg
sub
aam
test
pusha
negl
dec
jae
in
shl
pop
push
cli
jle
sbb
mov
cmpsl
inc
mov
cmpsl
and
pop
dec
xchg
sub
jle
xor
sbb
rorl
fcoms
mov
pop
sti
jo
dec
imul
jp
mov
and
inc
mov
mov
subb
cli
push
es
push
jne
aad
mov
push
push
mov
pop
rcrb
dec
and
ss
jo
int3
jne
pop
movsb
and
fwait
push
jl
fiadds
test
ja
repz
out
into
push
sub
jmp
aas
movsl
add
push
mov
sbb
ljmp
jae
xchg
push
in
es
pop
mov
out
lahf
jnp
add
xor
pop
or
rol
mov
popf
test
aam
mov
int3
lahf
inc
mov
out
xchg
aad
popf
aas
sti
sub
lret
stc
or
in
sub
dec
ret
loope
cltd
ljmp
pop
pop
mov
loope
jo
cld
xor
push
scas
test
push
subb
adc
add
clc
popf
push
inc
sbb
sbb
sub
jb
cmc
mov
fcomip
pop
cltd
sub
aam
aad
push
insl
icebp
dec
inc
mov
lods
icebp
pushf
std
mov
cwtl
adc
sub
xchg
xchg
sbb
hlt
pop
imul
pop
jnp
mov
xor
mov
loope
push
fwait
in
cmp
outsb
cmc
insb
fildl
sbb
scas
jle
out
and
ljmp
jnp
test
mov
pop
lods
adc
mov
fs
les
xor
mov
into
and
jnp
test
inc
adc
mov
mov
popa
inc
cwtl
js
stc
scas
push
pop
jno
mov
push
cmc
enter
shlb
ds
dec
es
mov
sub
sub
sarb
inc
adc
inc
sub
xchg
mov
sti
cmp
into
rorl
xor
sarb
mov
inc
nop
mov
mov
aad
jl
cmc
dec
loope
and
aad
std
mov
aaa
sub
loop
push
mov
shll
jle
adc
add
adc
or
lods
out
fsub
hlt
cltd
jae
mov
mov
bound
inc
lock
nop
jne
enter
xor
or
push
fbld
dec
rorl
loope
and
pmuludq
into
xchg
xchg
dec
ja
leave
test
pop
outsb
sbbb
xor
js
stc
push
sbb
in
jns
mov
ss
mov
sub
test
mov
out
pop
jnp
cs
push
inc
mov
push
rcrb
in
jmp
test
lds
push
xor
ss
pop
dec
in
jb
push
lahf
xchg
bound
jne
test
dec
outsb
pushf
cmpl
push
ss
loope
cli
rcrb
adc
loopne
icebp
inc
push
xor
in
push
sti
icebp
jbe
in
shll
jecxz
push
sub
imul
cmp
jge
adc
xor
int
iret
mov
enter
push
leave
and
sbb
nop
mov
popf
lods
les
imul
mov
adc
les
mov
adc
fnstcw
lods
cli
sub
inc
and
popf
faddp
sub
and
dec
mov
pop
xchg
sbb
data16
fldcw
pushf
movsb
xchg
push
pop
pop
inc
rorb
aam
mov
xor
sub
in
push
or
jbe
into
bound
loopne
leave
stos
pop
ret
scas
cmpsl
mov
cmp
repz
push
push
sbb
mov
testl
mov
dec
faddp
popf
cmpsl
ret
in
sub
int
cld
test
test
cmpsl
push
imul
mov
xor
scas
out
bound
out
jbe
mov
div
bound
xchg
and
mov
aad
shlb
in
enter
inc
lea
shrb
mov
or
ljmp
pop
idiv
dec
dec
inc
pop
xchg
sbb
outsl
addr16
pop
jge
ret
jl
aam
js
add
lea
cmp
sub
pusha
ja
adc
pop
pop
mull
mov
in
or
cli
add
fisubrs
scas
insb
adc
add
loopne
sbb
xor
std
je
xor
mov
popa
adcl
sbb
sarl
stos
mov
int
bound
lahf
push
add
xor
insb
add
test
sahf
xor
sub
jl
icebp
daa
clc
add
and
sbb
pop
cs
dec
dec
jmp
adc
push
sub
xor
dec
daa
aam
adc
lret
pop
sti
test
jo
and
jp
shll
sub
cmp
test
pop
or
jno
push
cs
jae
mov
pushf
mov
loopne
in
pop
jb
lds
pop
push
adc
adc
ljmp
sub
daa
stos
add
and
test
push
xor
cwtl
mov
push
dec
jle
fistl
inc
lret
xor
scas
sbb
or
pop
inc
add
cwtl
push
out
inc
in
imul
daa
sub
cwtl
push
loop
ret
push
inc
fwait
mov
mov
push
cmp
nop
mov
ret
mov
cltd
xor
and
inc
sub
jo
das
inc
stc
or
ficomps
test
stos
dec
idivl
cmp
inc
aas
or
jo
dec
lret
clc
push
mov
dec
loopne
jecxz
shll
shrb
bound
leave
mov
and
or
in
pop
scas
pop
mov
or
outsl
sub
push
pop
aaa
sbb
adc
fcoms
movsb
mov
cmovo
inc
test
fbstp
sub
pop
ret
lds
icebp
fisttpll
dec
dec
fiadds
dec
cltd
shlb
lds
sub
test
or
loopne
and
and
push
sub
test
test
xchg
icebp
out
in
push
ds
gs
mov
sbb
inc
das
and
das
out
pop
xchg
frstor
into
mov
packssdw
jl
imul
mov
mov
in
mull
inc
mov
ja
leave
adc
aad
cmc
fsub
sbb
jnp
mov
daa
and
sub
lds
inc
sub
adc
and
ja
int
mov
sbbl
jecxz
adc
aad
movsl
lret
mov
lock
push
les
cmpl
jne
xorl
out
out
daa
aaa
add
pop
sbb
push
out
cld
scas
push
xchg
inc
jb
jge
sub
ljmp
test
repz
jo
jns
cs
cmpsb
mov
or
adc
arpl
inc
scas
pop
fucomip
pop
jb
add
inc
scas
jp
cmp
test
mov
mov
xchg
jns
out
in
fsubrp
mov
je
add
jne
push
jae
adc
mov
out
lods
icebp
pusha
mov
mov
mov
xchg
and
sbb
ljmp
adc
mov
and
add
dec
push
je
push
nop
popa
psrlw
orl
out
cli
pop
jmp
adc
jne
dec
lea
push
outsl
scas
cmp
fs
and
lretw
xchg
rol
adc
pop
in
add
mov
dec
xchg
xchg
mov
or
fstl
nop
mov
dec
jle
cmp
imul
adc
or
or
test
cmp
mov
daa
mov
xlat
inc
xchg
insl
popf
popf
pop
enter
sahf
ret
gs
addr16
out
cli
scas
sub
mov
pop
mov
test
bound
out
push
imul
mov
mov
int3
sub
mov
mov
mov
pop
pop
inc
out
sti
push
lret
rcrb
xor
leave
addb
in
popf
sarb
lea
mov
inc
add
lahf
dec
fcompl
in
jecxz
push
mov
jl
cltd
push
add
or
jae
movsb
clc
nop
lods
dec
rclb
xor
repz
xchg
cmpsl
int
jo
push
daa
cs
jecxz
cmpsl
sub
cmp
test
pop
or
in
ret
add
in
dec
dec
mov
daa
xor
inc
roll
icebp
clc
enter
leave
mov
into
xchg
out
js
sbb
lods
and
mul
adc
cmp
inc
pop
pop
ja
popf
sub
pop
aad
mov
inc
pusha
loop
jns
jbe
mov
in
pop
dec
js
in
push
or
xor
and
sub
adcl
xchg
cmpsb
inc
bound
cmc
popf
jge
pop
or
sbb
push
into
jae
mov
pop
push
jg
xlat
inc
dec
mov
jl
push
out
cltd
and
add
mov
lret
sub
fisttps
pop
push
cmp
test
ss
pop
mov
aaa
jl
lods
fistpl
jecxz
scas
add
sbb
and
sub
aaa
repnz
repnz
inc
rcr
stc
sub
xor
aaa
xor
jg
bound
jno
aad
and
mov
ja
push
test
add
jge
dec
and
popf
mov
mov
loop
cmp
mov
repz
cmp
push
repnz
adc
cmpsl
xor
test
xlat
in
cmc
xchg
into
push
fmulp
notl
sub
ss
dec
int
in
cmp
pop
lea
dec
jge
icebp
and
mov
aas
in
inc
pop
ja
mov
sbb
or
fcoms
cmp
scas
jmp
cmpsl
push
adc
adc
mov
outsb
push
mov
sub
and
test
xor
repz
and
sbb
push
push
addr16
push
cmp
xchg
xor
mov
loope
mov
push
xlat
loop
push
shld
cmp
sub
inc
stc
ljmp
in
xor
pop
push
jge
stos
xor
fsubl
enter
jb
xor
ja
fidivrl
push
or
pop
popf
adc
dec
inc
cmp
push
cmp
pop
mov
dec
cmpsb
test
or
dec
mov
lcall
sbb
cwtl
pushf
int
test
add
sub
jmp
daa
mov
mov
in
mov
dec
les
cltd
sub
push
mov
cmpsl
mov
movsb
or
jp
outsl
test
mov
add
mov
test
mov
dec
in
mov
int
shll
sub
outsb
popa
push
rcll
popf
stos
inc
push
xchg
cmp
dec
rorb
mov
inc
jg
mov
stos
jl
pop
arpl
mov
rolb
in
jns
xchg
jmp
imul
lcall
ljmp
jecxz
std
sub
or
pop
inc
xchg
cld
lcall
in
jle
in
push
or
adc
sbb
lods
mov
pop
shrb
pop
je
and
and
pop
jnp
lret
mov
ja
imul
stc
icebp
adc
sub
pop
test
adcl
fcoms
lret
imul
ret
repz
mov
aad
inc
repz
mov
sub
mov
jecxz
jbe
jp
inc
sbb
xchg
add
icebp
ficompl
mov
pop
jno
test
or
ja
fwait
pop
das
xchg
xlat
mov
scas
mov
icebp
push
push
mov
mov
cmp
ret
xchg
int3
xor
mov
and
orb
mov
dec
inc
fs
fisubrs
into
mov
dec
lea
sbb
loop
scas
divl
mov
iret
stos
int
aaa
jae
jle
pop
loope
add
movsb
scas
outsb
test
pop
xor
bound
push
push
push
shlb
cmp
lds
nop
xor
inc
xor
xor
pop
lock
xchg
jmp
lcall
dec
jns
xor
xchg
nop
mov
aaa
ja
cmp
jae
mov
dec
aaa
repz
int
insl
fmul
cmc
jecxz
push
add
jp
repnz
pop
add
push
gs
enter
mov
inc
mov
pop
stc
push
lcall
push
sub
dec
sub
add
jecxz
dec
stos
shll
subl
or
stc
out
movsl
out
xchg
pop
outsb
fnstenv
jecxz
xchg
and
push
add
ljmp
cli
xchg
inc
mov
lods
cmpsl
xchg
dec
pop
iret
in
ret
jecxz
icebp
and
dec
and
xor
inc
sub
adc
int
adc
ds
sub
das
jmp
or
rclb
rcrl
orl
adc
push
pop
mov
cli
movsl
cmp
adc
pop
mov
xchg
xorb
ficoml
push
push
icebp
enter
cli
push
or
out
adc
jb
sarl
pop
dec
jecxz
adc
pushf
jp
fisubrs
sbb
rcll
mov
loop
jne
sbb
loopne
ja
pop
dec
fmulp
pop
cmp
fdivrs
push
inc
pop
dec
cs
out
adc
les
nop
mov
ja
mov
push
nop
pop
out
mov
mov
clc
lock
stc
dec
pop
add
adcb
pop
sub
out
fwait
adc
push
dec
xlat
test
leave
jp
mov
repz
cmp
xor
in
mov
pop
popa
out
mov
movsb
push
mov
cmc
ja
aas
dec
sub
mov
add
into
inc
push
icebp
mov
outsb
sub
jg
mov
iret
aaa
bound
mov
xchg
dec
lcall
pop
sarl
stos
fsubr
sbb
pop
xor
in
push
test
sahf
mov
jbe
adcb
mov
pop
shlb
nop
inc
mov
dec
pop
cmp
pop
imul
inc
xchg
mov
xor
mov
in
jo
xchg
jno
fdivl
leave
and
sub
adc
data16
xchg
aam
xchg
les
inc
mov
push
addr16
jge
loop,pn
data16
inc
gs
cmpsb
xchg
xchg
inc
pusha
xchg
js
loope
daa
decb
ret
mov
cltd
dec
mov
xadd
hlt
add
subps
addr16
movsl
test
out
rcrl
mov
popf
lds
pop
faddl
and
dec
jmp
pushf
sti
ljmp
adc
mov
std
std
xchg
inc
fnsave
mov
adc
xchg
cmp
xor
sub
fistl
shrl
lods
je
outsb
dec
dec
dec
push
pop
xor
popf
adc
mov
out
repnz
push
pop
cmp
out
aad
es
das
mulb
fsts
leave
out
xchg
pop
les
xor
xor
enter
mov
mov
and
dec
jecxz
js
sub
add
sahf
mov
cmc
and
add
test
sbbl
or
pop
or
daa
mov
add
shlb
pop
xchg
xor
sub
insb
mov
xor
loopne
movd
shrb
mov
push
jnp
and
jmp
arpl
lret
lock
xchg
sbb
xchg
daa
ds
call
xor
jmp
ret
dec
jg
xchg
adc
mov
jg
sub
pop
in
push
xor
movsl
cmpsb
pop
ja
mov
and
dec
sahf
addr16
xor
and
jnp
int
xor
iret
sbb
mov
ret
pop
jo
sub
mov
mov
jecxz
or
or
in
into
repz
loop
sub
ret
in
jp
add
xchg
xlat
sub
insb
push
pop
les
sti
jle
setnp
mov
fstpt
cmc
jbe
test
es
int
mov
fcoml
xchg
cmp
push
mov
mov
push
xor
mov
lret
xchg
in
cli
popf
push
jno
ja
mov
maxps
aaa
cmp
icebp
je
push
cmc
int
sub
or
xor
ja
mov
stos
pop
cmp
aad
mov
orl
std
cld
scas
cmp
pop
dec
jle
cmp
push
hlt
lret
or
scas
lret
xchg
cmpsl
call
lds
or
jbe
push
and
jmp
das
outsb
lcall
rcrb
inc
pop
out
mov
jb
jmp
mov
inc
stc
dec
jb
jns
loop
cli
int
pop
inc
dec
push
dec
stos
jmp
nop
cmp
ja
test
add
cmp
daa
stc
lret
fdivrp
push
loope
and
inc
jge
xchg
jns
fldz
jmp
lahf
std
aad
xor
push
cmp
repnz
mov
push
jb
jne
push
jle
add
adc
fstps
test
xchg
dec
push
lods
cmp
push
sti
inc
add
xor
insl
lsl
rcrb
and
inc
xchg
and
fs
repnz
fcoms
or
out
fwait
ja
and
notb
popf
fs
dec
inc
fwait
ja
and
sahf
shrb
fadds
sbb
add
lods
mov
jp,pn
ss
test
mov
mov
dec
mov
lods
xchg
xchg
loop
push
mov
jbe
stos
xchg
ss
fstpt
sub
out
dec
mov
fisttps
out
sbb
mov
and
das
mov
push
mov
inc
in
push
cmp
sub
jle
cmp
add
xchg
push
sahf
lds
push
push
mov
js
movsb
dec
dec
hlt
cmpsb
mov
iret
lcall
aad
js
int
lds
sub
gs
inc
or
adc
clc
iret
je
dec
jns
mov
dec
mov
jg
mov
add
inc
pop
aam
cmp
push
inc
daa
adc
and
sarl
aas
and
out
fimull
pop
lea
dec
gs
pop
push
test
repnz
dec
dec
rcrb
enter
cmp
cmp
xor
shlb
jae
sahf
out
mov
pop
cltd
cmpsl
negl
cwtl
adcb
jo
push
ja
pop
leave
jl
outsb
or
stc
xchg
mov
data16
scas
lret
out
imul
test
cmp
jno
movsl
mov
pop
mov
test
or
push
std
and
dec
int3
fldcw
mov
sbb
stos
bnd
xchg
xchg
mov
test
or
fisttps
sub
mov
push
jp
cld
movsb
cwtl
lods
pop
mov
into
xchg
jb
jno
out
inc
jne
push
cmp
cmc
mov
push
mov
push
fisubs
lret
clc
lcall
pop
fimull
addl
xor
out
je
lret
out
and
insl
or
inc
mov
in
pusha
mov
mov
inc
or
xlat
xchg
divl
lds
xchg
dec
jg
lret
popf
sbb
mov
stos
pop
jae
xor
cwtl
clc
inc
mov
js
call
jecxz
or
fsubrs
mov
test
lahf
imul
inc
jae
sbb
lcall
push
pop
push
push
and
cs
rorb
cmp
pop
cmpsl
cmc
je
scas
inc
fcoml
in
sbb
out
mov
xchg
mov
xchg
cwtl
sbb
insl
adcb
xchg
shlb
mov
ljmp
add
cmp
jg
and
cmpsb
in
out
jge
mov
ffree
cli
mov
pop
and
test
scas
and
dec
pop
or
addr16
fnstenv
nop
in
inc
or
inc
ret
adc
jecxz
mov
iret
pop
in
je
stos
sbb
dec
shrb
xchg
mov
arpl
pop
pop
adc
push
rorb
adc
es
cwtl
xor
xchg
mov
mov
mov
xchg
loope
inc
fdivrl
popa
xor
xchg
pop
mov
xor
test
repnz
sub
pop
dec
decl
orl
fcoms
xlat
jne
ja
mulb
data16
xchg
cmc
insl
sub
icebp
outsl
repnz
sti
xchg
cwtl
inc
cmp
outsb
mov
pop
dec
cmp
xchg
sti
notl
jbe
jmp
lcall
bound
push
jns
test
xor
and
lahf
icebp
mov
nop
dec
add
imul
clc
pop
fistpll
xchg
mov
ss
call
adc
cmpsl
inc
enter
xor
or
js
xlat
mov
js
or
arpl
xor
push
cmpsl
push
inc
or
pop
test
push
orb
add
flds
and
jnp
push
movsb
mov
das
cmc
inc
in
out
cmpsb
cmp
or
arpl
jmp
out
mov
movsl
jne
aad
pop
test
sbb
push
xor
mov
or
jo
int3
imul
call
std
xchg
aas
popf
xlat
jmp
pop
pop
icebp
ret
call
mov
das
mov
lea
testb
jg
cmp
popf
mov
xor
iret
outsb
iret
scas
jno
pop
les
pop
sbb
push
add
inc
jb
cmpb
sbb
and
data16
aad
adc
shl
sbb
mov
or
dec
cmp
mov
shrl
mov
cmp
fldt
dec
xor
jno
dec
fmull
leave
add
mov
jo
add
fmul
shr
stos
aas
test
add
push
and
inc
enter
mov
push
lock
mov
inc
test
inc
xorb
pop
clc
data16
lea
jns
push
nop
or
or
xchg
mov
out
fdivs
mov
sub
cmp
cmp
sbb
cli
push
and
dec
jb
cmp
incb
mov
mulw
adc
jno
stos
xchg
imul
out
mov
jns
es
xor
daa
add
mov
insb
lcall
jnp
or
insb
mov
xor
test
dec
xchg
ds
lods
xor
lahf
es
cld
test
shr
sub
and
popf
imul
mov
repz
imul
xchg
mov
test
xchg
sti
shll
or
cmp
aas
dec
pop
lret
or
add
xchg
dec
in
or
imul
inc
cmp
and
and
cmpsl
and
scas
pop
push
sbb
mov
and
jg
pop
dec
cmp
adc
test
or
stos
pushf
mov
hlt
add
xor
add
xlat
cli
es
aas
sbb
jge
or
and
pop
outsb
mov
test
fpatan
cmp
jp
inc
pushf
adc
lahf
cmp
in
mov
pop
pop
add
pop
xchg
jne
cltd
rclb
jb
repnz
xor
aaa
rcrl
mov
mov
mov
shrb
fists
add
movsl
inc
sub
sbb
test
xlat
enter
add
add
lret
insl
pop
js
lods
sbb
mov
jne
mov
jecxz
and
mov
xor
imul
lahf
sub
push
pop
pushf
jb
out
pop
out
and
movsb
mov
adc
cmpsl
popf
mov
loopne
mov
pop
test
mov
fwait
mov
leave
cmpsl
jl
add
adc
pop
iret
xchg
ljmp
je
adc
into
dec
cli
std
push
add
das
mov
stos
mov
imul
adc
xchg
data16
loope
rcrb
je
andl
mov
movsl
push
xor
xchg
add
xor
adc
mov
ficomps
and
sbb
pop
jb
cld
jbe
cwtl
scas
std
lods
mov
and
rclb
sarb
ljmp
xchg
gs
fisttpll
xor
mov
jge
mov
mov
push
mov
xchg
incb
sub
xchg
xlat
or
sbb
mov
inc
popl
pop
enter
push
xor
add
cmp
leave
sbb
rcrl
push
push
icebp
xor
stc
repnz
loope
xor
pop
push
lret
push
mov
pop
dec
jne
imul
jns
and
inc
lcall
dec
loop
mov
pop
out
int3
out
rorl
cwtl
sarb
mov
outsb
je,pt
cmp
jle
leave
mov
add
push
loope
es
xchg
pushf
and
xchg
inc
aaa
scas
std
fwait
inc
adcb
push
adc
out
loopne
cmp
insb
ljmp
jne
idivb
sbb
in
ret
mov
and
sbb
inc
sub
xchg
xor
push
pop
daa
cmp
mov
fnstenv
sbb
dec
xchg
cmp
lods
jg
loop
dec
stos
fildll
dec
out
mov
imul
imul
pop
roll
dec
lret
lret
inc
int
xchg
jne
pop
into
or
inc
out
push
xchg
mov
mov
in
sub
imull
mov
int
notb
jg
inc
hlt
cmpsl
das
das
xchg
push
popa
mov
push
jne
enter
mov
cmpsl
in
sbb
mov
lret
mov
test
sti
cmp
ja
shlb
cltd
add
push
je
mov
ret
adc
add
xor
fsubs
test
pop
in
sub
ljmp
lret
rcr
rorl
pusha
mov
sbb
rcrl
into
je
andl
mov
popa
xor
stos
lcall
inc
mov
inc
push
mov
outsb
std
aas
xchg
push
or
jle
mov
adc
orl
inc
fsubrl
inc
test
ret
sub
jbe
dec
out
popf
in
scas
es
cmp
decb
mov
fcmovnbe
imul
cli
stos
jl
cwtl
loopne
sbb
fimuls
ljmp
cmp
inc
xchg
mov
addl
out
fcoml
sub
pop
mov
fisubrs
imul
xor
mov
pop
sub
mov
sbb
cmp
inc
mov
mov
fldt
sbb
das
xor
lret
lahf
test
daa
icebp
inc
inc
pop
inc
cwtl
out
inc
fwait
sbb
cmpsl
ret
pop
out
sub
hlt
pushf
add
cmp
repz
dec
mov
jo
scas
repz
ret
in
mov
add
inc
jo
adc
sub
ss
std
int
popa
cmpsb
mov
sti
dec
inc
inc
addr16
mov
out
inc
es
inc
mov
jnp
jle
pusha
movsb
mov
fdivp
into
inc
jecxz
ja
shrb
adc
fnstsw
aam
stc
int3
call
xchg
in
or
aas
gs
adc
mov
sub
jp
loop
nop
nop
lret
and
pop
pusha
leave
xchg
and
ja
loopne
mull
ffreep
pop
mov
and
mov
add
sbb
dec
stos
cmpsb
adc
cld
in
mov
ljmp
lock
cmc
call
outsl
imul
leave
jo
jp
lea
call
or
pop
xchg
movsb
out
into
ljmp
sub
dec
js
mov
ss
mov
aaa
and
cmp
xchg
pop
pusha
push
dec
lock
out
pop
jmp
popa
xchg
adc
xchg
pop
movsb
xchg
fistpl
dec
dec
mov
in
daa
clc
mov
mov
mov
lahf
push
cmpsl
mov
in
xchg
and
insl
out
pop
ss
outsb
pop
push
xor
loop
int3
enter
xor
mov
int
sub
and
and
es
sbb
or
hlt
jbe
mov
mov
scas
inc
ss
sbb
dec
inc
data16
sbb
mov
mov
pop
mov
add
or
clc
jnp
sbb
rorb
mov
sbb
xor
or
mov
popa
addr16
inc
loope
das
cmp
push
in
cmc
mov
jns
cmp
push
loopne
popf
jle
mov
mov
pop
test
fistl
repnz
mov
sub
jmp
jg
and
cmp
mov
out
dec
add
pop
aad
adc
fsubl
lret
pop
push
or
fimull
aaa
out
lea
cwtl
stc
mov
xchg
enter
shll
outsl
idivl
sub
jp
enter
enter
mov
loop
add
popf
sub
mov
es
pop
loope
test
or
lret
lds
mov
test
bound
xchg
pop
in
dec
gs
adc
mov
mov
mov
mov
push
dec
shl
repz
lods
jno
ds
fisttpll
pusha
int
push
scas
xor
std
sub
sti
and
and
push
inc
lock
fs
mov
push
jge
or
js
jge
and
jl
mov
pushf
sbbb
lahf
adc
sub
mov
mov
add
cli
xor
mov
mov
mov
pop
aam
lods
das
jmp
mov
divl
mov
ret
dec
cmp
lds
dec
fstps
mov
jl,pt
repz
aam
xlat
sbb
jle
mov
xchg
lods
xor
or
sbb
pop
jp
cmp
jp
wbinvd
mov
mov
fistpll
pop
or
mov
push
dec
imull
adc
sbb
outsb
add
sti
shl
pop
lock
mov
lahf
js
ja
cmp
cmp
sbbl
mov
lods
shlb
xchg
mov
cmp
cs
int3
pop
scas
pop
es
lods
or
mov
movsl
std
pushf
in
fmuls
pop
cmc
sbb
clc
fldcw
daa
jo
jb
loope
out
mov
std
mov
in
subb
xchg
daa
fistl
mov
cmpsb
clc
popf
stos
mov
dec
jno
int3
arpl
loopne
mov
jecxz
pusha
popf
dec
cld
lret
cmp
mov
adc
leave
sub
pushf
inc
scas
andl
ror
movsb
jmp
add
mov
pop
pushw
cmp
into
xchg
outsb
in
inc
jmp
jb
hlt
pop
arpl
mov
cmp
sub
cmpsl
stos
jnp
xchg
pop
and
sbb
scas
mov
les
btr
inc
or
pop
into
add
xchg
out
sub
cli
arpl
lods
jno
jns
je
jmp
test
mov
sbb
xor
dec
call
sbb
fcmovu
adcb
flds
dec
cmp
mov
popf
imul
push
inc
enter
xchg
mov
and
ss
out
loop
into
out
xchg
cmp
xchg
mov
pusha
stos
ja
vpslld
pop
in
cmp
mov
fimull
mov
gs
leave
or
cmpsb
fldenv
dec
das
push
std
fwait
repz
jns
addb
xchg
mov
insl
inc
call
test
fmull
sbb
loopne
mov
and
mov
andb
xor
iret
iret
add
cltd
sahf
jae
fistpl
out
jns
stos
xchg
jl
and
inc
icebp
inc
popa
push
sub
lret
sub
mov
xor
mov
sahf
dec
mov
xorb
add
in
repz
jno
adc
mov
call
mov
pushf
pop
sbb
xchg
stos
in
ret
mov
outsb
jle
popf
push
xchg
dec
dec
jnp
mov
sbb
enter
mov
xor
leave
incl
rcll
aas
pop
mov
dec
enter
push
lcall
out
or
cmpsb
mov
jge
xchg
insb
adc
xlat
add
sbb
sbb
mov
repnz
notb
mov
out
jecxz
sbb
js
add
add
jl
ja
in
shrb
sbb
ljmp
loope
call
jae
daa
es
popa
adc
push
mov
push
sbb
xchg
in
jl
or
inc
leave
adc
nop
dec
scas
inc
xor
mov
out
jmp
mov
adc
mov
mov
leave
mov
stos
push
or
add
dec
gs
mov
repnz
popf
or
aaa
mov
sub
adc
scas
pop
mov
jle
push
or
push
pop
cmpsb
inc
sub
ret
cmc
xchg
add
outsl
ljmp
ljmp
lea
loopne
cld
cltd
mov
jg
sbbb
bnd
insl
mov
iret
cmp
push
les
dec
idivb
xor
mov
push
repz
cmpsl
adc
or
mov
test
mov
pop
in
test
mov
sub
xor
jge
ss
jmp
popf
ret
dec
adcl
push
popf
xchg
sub
pop
jne
ds
loop
dec
add
ret
push
js
cmp
dec
call
cmpsl
lret
xor
cwtl
xadd
mov
out
rclb
fadd
mov
cmp
cmp
cmp
nop
jmp
sti
mov
pop
push
decl
mov
xchg
jmp
sbb
xor
cld
fs
and
divb
jae
xor
js
jl
ja
push
ljmp
je
in
inc
in
std
mov
pusha
cmp
ja
push
mov
shl
dec
mov
jge
inc
pop
jae
mov
cmpsl
xchg
xchg
sub
mov
xor
sub
adc
mov
push
mov
xor
pop
dec
pop
test
in
mull
cmpl
mov
vpsrad
inc
or
test
mov
jl
xchg
sbb
std
mov
out
mov
sbb
pop
popa
push
push
sbb
pop
aad
subl
and
pop
inc
dec
sti
stos
adc
das
mov
jl
or
pop
cltd
mov
push
scas
mov
test
lea
rorl
add
testb
pop
pop
mov
push
cltd
int
hlt
hlt
dec
loope
cmp
mov
mov
cmpl
mov
popa
mov
and
push
rol
mov
cli
jnp
pop
sub
sbb
or
push
and
insl
xlat
fildll
jg
loop
inc
stos
insl
mov
cmp
addr16
fildll
iret
and
jmp
idivb
xchg
dec
rorl
lret
jl
mov
or
cli
mov
sahf
sub
jmp
daa
pushf
stos
xchg
js
mov
adc
mov
cmpsl
sbb
cmc
out
push
and
fsubrs
pop
jmp
add
inc
pop
shll
int
lahf
roll
scas
daa
jbe
or
stc
repnz
jno
jp
push
aaa
jle
sahf
iret
add
std
jl
rorb
adcl
push
sub
cmpsl
push
mov
repnz
push
and
mov
push
js
xor
sub
sbb
dec
fldpi
cmc
jnp
sar
pop
cmp
jb
repz
dec
cmp
pop
or
and
lea
sbb
and
mov
fcom
into
cmp
out
xor
inc
imul
inc
cltd
std
jo
bound
or
xchg
in
call
hlt
shlb
scas
call
sub
and
pushf
adc
cld
mov
daa
lret
add
or
push
call
sbb
mov
cmp
sub
std
jne
cmp
dec
shrl
sbb
leave
insb
and
lea
into
and
ret
fistps
jb
jmp
adc
xor
push
dec
xor
cmc
xchg
out
js
ds
iret
stos
adc
mov
jno
stc
pop
js
bound
xor
sarl
pop
cli
movsb
cmp
test
mov
das
faddp
daa
xchg
in
rclb
mov
sbbl
mov
xchg
pop
jne
fsub
mov
in
adc
mov
pop
pop
stc
inc
add
cld
shlb
push
push
sbb
jl
dec
or
jmp
xchg
popa
fistpll
in
sahf
shrl
fnstenv
test
push
jp
fistps
xchg
ret
das
loopne
inc
push
icebp
cmp
add
ds
mov
inc
and
push
jecxz
xchg
pop
je
jg
pop
movsl
mov
out
mov
insb
or
mov
pop
insl
movsb
out
repz
mov
ja
leave
and
push
stos
insb
mov
int3
pop
inc
not
outsl
and
push
insl
push
nop
out
pop
in
push
cmp
pop
or
mov
jb
push
fprem
adc
cmc
lret
push
ret
lcall
sbb
pop
stc
pop
xor
ret
fwait
std
add
pop
aas
pop
sbb
repz
dec
jge
push
fldenv
subl
xor
das
icebp
jp
and
shl
dec
add
movsb
xor
imul
push
mov
ficoml
xchg
mov
jo
xor
xchg
pop
rcll
inc
pop
imul
fldcw
test
mov
incb
mov
push
and
pop
out
push
test
pop
mov
call
and
lods
scas
ss
orl
test
push
xchg
jecxz
shll
and
scas
clc
hlt
imull
adc
into
popf
ljmp
push
popa
popf
lcall
in
cmp
sbb
push
jg
inc
filds
pop
and
ljmp
mov
fistpl
jo
push
cmp
jo
in
rolb
sbb
data16
dec
push
shlb
mov
sbb
inc
mov
insl
outsl
cmp
push
ss
jbe
xchg
shr
adc
xchg
test
iret
divl
inc
leave
fdiv
jp
and
push
pop
enter
xor
lret
mov
roll
dec
add
sarl
dec
sti
push
icebp
add
adc
xor
fnstenv
xor
cs
ret
mov
cmp
mov
cmp
rorl
xor
sar
mov
jno
adc
arpl
rorl
dec
cmp
xchg
cmc
in
jo
pop
lret
pusha
cmp
pop
jo
or
fildll
je
enter
bound
into
pop
ljmp
push
push
dec
push
popf
lea
in
push
mov
cmp
repz
fcomp
fwait
cmpb
es
hlt
leave
xchg
jp
sbb
push
ss
ret
sbb
les
out
stos
stos
dec
cvtpi2ps
mov
xchg
mov
dec
inc
inc
push
mov
loop
loope
and
sub
ja
sti
lods
push
xchg
push
dec
stos
jnp
pop
push
xor
cmp
imul
and
in
ds
clc
out
pop
lds
fs
jns
sub
sbb
sbb
xchg
cmp
repz
imul
push
pop
push
lcall
xor
push
cmovl
pop
xor
pop
and
sbb
cmc
xchg
mov
inc
je
push
add
mov
loope
jno
push
and
mov
mov
call
pop
fisubrs
lods
ret
fiaddl
push
jg
inc
int3
cmp
jo
cld
jnp
sbb
or
xor
shr
out
xor
mov
fidivl
xor
adc
sbb
scas
cmp
jno
fildll
les
xchg
sbb
push
mov
hlt
xchg
and
mov
fwait
or
dec
sbb
cmc
pop
negb
mov
hlt
dec
sbb
xor
imul
mov
sbb
sbb
pandn
shlb
int
ds
scas
int
es
fcomps
mov
xchg
addr16
sub
fisttpl
mov
mov
jbe
mov
jo
loop
pop
dec
fsubrl
inc
mulb
es
into
insb
and
rol
imul
mov
mov
sbb
cld
mov
hlt
cmp
lods
leave
cmpsl
jb
mov
stc
aam
push
jbe
sub
push
push
xor
call
fiadds
add
dec
js
xor
loop
sti
inc
xchg
jae
jns
enter
loop
xor
dec
daa
mov
lahf
inc
mov
fwait
pop
cmp
scas
test
mov
jno
insl
icebp
lret
xchg
jbe
push
out
enter
or
cld
or
mov
movsl
ss
lods
sbb
pushf
lret
xor
jne
add
or
ffreep
dec
mov
out
aas
arpl
jmp
mov
fs
cmp
xchg
lods
fimuls
ficoml
gs
or
mov
nop
mov
imul
adc
lea
pop
out
shll
fistps
mov
int
mov
push
ds
xor
outsl
mov
shrb
inc
rcr
push
jne
pushf
sbb
mov
xor
push
sub
push
mov
push
sbb
rcrl
cmp
pop
and
sti
add
loope
ds
ret
xor
out
lods
or
imul
cmpsb
mov
hlt
push
lock
stc
mov
lahf
pop
add
mov
sub
push
sub
add
push
insb
push
or
jb
outsb
fidivrs
xchg
push
popf
nop
xchg
addr16
mov
arpl
repz
mov
mov
sbb
pop
push
xchg
sub
push
and
xchg
and
fldcw
ret
adc
cmpsl
push
cmp
je
adc
in
pop
or
xchg
fcmovbe
dec
rorl
push
sub
imul
cs
sub
aaa
sub
insl
mov
sub
fiaddl
push
ret
xor
movsl
inc
jae
mov
enter
mov
jo
ret
aaa
jle
mov
lahf
fcomi
xor
int3
xchg
cs
push
fisubrs
add
inc
push
xor
sub
cmp
add
insb
mov
sbb
pop
or
stos
dec
cmp
scas
aad
in
aam
std
dec
xchg
notl
fwait
sti
out
cmp
mov
cltd
inc
jbe
cmp
xor
test
xchg
std
nop
sbb
fs
jbe
popf
cmp
cmpsl
jne
lods
cmp
decl
xchg
dec
push
push
cmp
fninit
jge
gs
mov
add
and
orb
add
out
jbe
movsb
lahf
xchg
or
mov
jmp
xchg
mov
inc
sub
lahf
popf
adc
xor
or
push
shlb
cmp
xlat
mov
lahf
mov
pushf
push
divl
sub
jmp
fsts
loop
dec
ljmp
sti
sarb
sub
das
dec
pop
pop
sarb
rolb
xchg
mov
decb
add
fsubrl
jns
pusha
inc
inc
stos
sbb
mov
hlt
cld
adc
and
jb,pn
xchg
push
sti
and
push
sub
jo
sub
xchg
pop
sahf
orb
int
imul
pop
loopne
add
movsl
das
les
push
inc
imulb
cmp
jge
ss
in
inc
pop
imul
fs
icebp
cli
xor
mov
negb
xlat
and
or
lcall
add
jl
idivl
loop
les
dec
jnp
cmp
into
int
fs
push
arpl
adc
fxtract
fnsave
pop
push
push
inc
adc
ret
fbld
mov
loope
fistps
xchg
sub
imul
and
jmp
add
scas
xchg
jmp
cmp
movsl
pop
dec
mov
pop
cmp
jnp
jg
cmc
jmp
stos
call
and
sub
push
negl
sbb
rcrl
mov
push
cmp
int
fiadds
int3
jae
ret
push
addl
pushf
inc
ljmp
or
outsb
sub
out
scas
sub
fld
inc
inc
out
stos
push
shr
push
adc
js
mov
ss
cmp
push
mov
pusha
clc
sbb
ds
scas
insl
fcos
sti
pop
inc
fstps
loope
xor
addb
into
jmp
data16
push
inc
repnz
ret
mov
xchg
push
ret
or
je
add
sahf
xor
jp
lcall
xchg
mov
aad
daa
push
mov
sbb
jmp
sbb
mov
inc
jl
mov
dec
inc
mov
cmp
outsl
pop
pop
cmp
sbb
jae
and
ret
or
fwait
not
xorb
sbb
rolb
movsb
cmp
push
repnz
and
jo
sahf
nop
sbb
sub
sub
mov
sub
mov
jb
je
cmp
shll
inc
mulb
je
mov
fmuls
fsubs
out
stos
sbbb
stos
cwtl
mov
fdiv
popa
mov
add
out
in
addb
or
inc
lret
gs
mov
popl
fnstcw
lock
push
test
add
or
enter
mov
add
pushf
rclb
fdiv
lret
imul
test
push
and
cmp
mov
sub
in
leave
je
xor
sarb
call
mov
mov
fcmovne
roll
loop
pop
inc
je,pt
out
adcb
mov
fistpl
sbb
lret
fs
addr16
xor
sbb
push
inc
ret
adc
xlat
cli
aad
pop
mov
iret
popa
je
loop
test
mov
mov
test
daa
sbb
sti
mov
cli
mov
iret
sahf
push
mov
pop
shr
inc
cs
adc
inc
inc
pop
mov
popa
fdivp
pushf
mov
fstl
pop
pop
out
inc
mov
je
sbb
inc
bound
js
adc
ret
inc
and
call
adc
sub
je
jns
lahf
fstl
xor
bound
pop
adc
mov
push
gs
mov
pop
dec
xchg
mov
imul
pop
aaa
outsb
mov
jae
push
sar
sub
sbb
insb
adc
xchg
xchg
dec
stc
mov
sbb
jmp
cmpsl
sub
and
xchg
cmpsl
fildll
adc
xor
cwtl
dec
psubsw
shl
xchg
add
stos
insl
xchg
leave
rorl
xchg
cli
insb
inc
inc
mov
cmpsb
ret
inc
loope
xchg
cmp
in
popf
push
popa
pop
cmpb
mov
sbb
pop
enter
pop
cmpb
dec
nop
pop
push
pop
mov
orb
into
or
scas
sub
adcl
mov
add
outsb
sub
outsl
out
adc
call
mov
sub
arpl
push
stos
repnz
sub
int
jb
cmp
aaa
sub
and
lods
popa
xchg
sub
cmpsb
mov
lods
sahf
outsb
mov
and
inc
rcrb
dec
add
es
movsl
fs
sub
and
dec
push
out
mov
rcrl
inc
jl
fucomp
and
push
and
dec
fildll
addr16
pop
nop
mov
test
mov
inc
clc
pop
ds
inc
sub
pop
es
adc
mov
push
fiaddl
je
mov
pop
mov
das
dec
xor
mov
mov
jmp
fs
pop
pop
inc
or
push
lock
mov
fadds
mov
sbbb
lds
jecxz
inc
inc
inc
adc
push
cli
dec
jmp
mov
shufps
cmp
js
iret
outsl
push
mov
call
cmp
xor
mov
sbb
cmp
dec
out
test
adc
jns
sbb
xchg
loop
lret
cmp
mov
mov
outsb
xor
imul
sub
cmc
loop
push
xchg
cwtl
cwtl
add
jp
pop
push
pop
mov
fidivl
inc
xchg
sbb
cmp
inc
leave
das
aas
sbb
or
out
ds
scas
aaa
add
out
or
or
addr16
popa
jmp
cltd
pop
scas
adc
mov
stos
cmp
xlat
int3
mov
mov
pop
enter
add
xchg
cmp
sti
xor
mov
mov
mov
dec
in
aam
lcall
cmpsb
inc
das
cli
sbb
push
jge
fmuls
outsl
jecxz
out
dec
vandnps
or
adcl
inc
sub
aam
jg
fdivs
insl
cmp
pop
jo
insb
xchg
pop
leave
mov
or
les
sub
and
test
ret
jmp
sbb
mov
cmpsb
jp
sub
cli
mov
je
into
out
test
sbb
rolb
lahf
jle
cld
inc
adc
loopne
aas
ljmp
andb
and
dec
dec
mov
and
dec
or
in
xchg
lcall
mov
loopne
les
data16
jp
pop
pop
pushf
mov
mov
movsl
fcomp
imul
fcmovnbe
pop
aad
cmp
push
enter
clc
cld
inc
add
sahf
gs
add
rorl
pushf
in
data16
sub
add
dec
sahf
or
and
sbb
dec
jbe
mov
cmp
sbb
in
lods
sbb
ficompl
out
insb
out
cmpsb
clc
push
cmp
cmp
in
mov
jne
pop
lea
and
mov
sub
jmp
mov
cwtl
cmpsl
or
outsl
xlat
in
push
cld
sub
sub
cs
out
xlat
xorb
stos
sub
dec
movsl
test
or
hlt
bound
and
pop
inc
cmp
popf
push
outsb
aaa
std
outsb
xor
push
je
call
inc
or
jne
xchg
icebp
push
mov
test
sbb
fdivs
inc
jecxz
adc
adc
dec
dec
jb
stos
scas
push
cmp
sahf
cmp
aas
mov
xchg
cmp
divb
sbb
or
sub
jp
jbe
or
mov
scas
or
ret
jno
add
and
mov
fs
cmp
inc
sbb
mov
jae
psllq
data16
fisubs
in
mov
mov
mov
or
sbb
push
mov
shlb
push
xchg
push
cld
push
pop
cmp
cmp
or
test
pop
jne
jg
xchg
xchg
jo
inc
sub
fucom
mov
nop
add
pop
push
gs
mov
rcrb
push
aad
rorb
mov
jns
or
push
mov
sub
xor
pop
cmp
xchg
mov
add
mov
cmp
and
jne
sub
into
push
pop
mov
je
imul
std
and
repz
sti
inc
mov
cmp
mov
dec
cs
std
mov
push
sbb
fcmovnu
cmpsb
mov
movsb
push
inc
test
pmullw
add
adc
cmp
notl
xchg
stos
push
inc
pop
fisttpl
add
cmp
jp
movsl
pmaddwd
and
push
fnstsw
mov
mov
fstpt
outsl
pop
and
mov
rcr
dec
add
cmp
add
cwtl
test
adc
mov
mov
fistpl
andb
leave
out
fcmovb
and
lret
les
popf
insb
in
lock
mov
pop
pop
push
xchg
or
sub
and
pop
mov
sbb
pop
nop
das
push
hlt
pop
ja
mov
jno
fisttpll
inc
outsl
dec
cmpsb
cli
mov
and
xrelease
jno
jne
out
rclb
lret
mov
jb
out
mov
jnp
loope
sub
jo
int
adc
call
inc
subl
add
iret
iret
rorl
xor
xor
cld
es
sbb
cmp
in
in
sub
gs
scas
pushf
rclb
ljmpw
push
jecxz
mov
ror
ds
stc
mov
shll
adc
xchg
orl
add
xchg
push
cmp
jge
repz
shlb
push
xor
lcall
adc
movsl
out
adc
addr16
stc
test
out
push
insb
dec
mov
lret
bound
mov
mov
push
jns
mov
push
cltd
push
push
push
and
dec
fstps
jmp
or
mov
ret
out
rorl
xor
daa
shll
hlt
ret
shll
adc
add
xchg
sub
in
in
xchg
imul
fstpt
or
pop
xor
push
cmp
push
dec
int
push
dec
pop
jb
into
cli
ret
sub
and
push
mov
pop
push
mov
or
ja
jbe
xlat
cmp
lret
pop
psubq
mov
xchg
lahf
mov
test
jnp
inc
mov
adc
push
bound
out
cltd
fisubrs
out
cmp
stos
loope
add
or
cmp
imull
test
mov
xchg
xorb
mov
jo
xor
push
pop
adc
xlat
imul
xchg
mov
mov
mov
out
cwtl
sub
jecxz
mov
movb
jnp
jae
insb
and
push
sar
movsb
xor
mov
or
lret
mov
cmc
fwait
pop
mov
insb
cltd
ja
pushf
daa
ljmp
push
roll
es
mov
out
mov
test
sahf
pushf
cwtl
leave
pop
leave
jnp
or
jbe
mov
xchg
inc
mov
push
int3
fdivr
fisttpll
push
je
dec
cwtl
loopne
out
rep
outsb
das
add
xor
inc
xchg
mov
jns
daa
ja
mov
outsl
jbe
xchg
push
inc
xlat
pop
jnp
inc
test
pop
cmp
scas
ret
lods
insl
out
jb
sbb
mov
and
xchg
cmp
loopne
or
mov
inc
cmp
jnp
mov
sub
mov
xchg
je
cmpsl
adc
cmp
into
mov
fiadds
test
pop
sub
jge
clc
mov
mov
testl
into
mov
das
xchg
hlt
add
repnz
repz
push
dec
in
out
mov
pop
js
dec
dec
add
mov
call
cmpsl
push
loop
fisubrl
loop
mov
outsb
movsb
xchg
and
mov
push
lock
mov
mov
sbb
int3
cld
cmpb
sbb
mov
popf
push
jge
add
sub
scas
pushf
jnp
in
sub
repnz
leave
pusha
add
popf
sahf
cmp
and
lods
pop
fisubrs
pop
dec
push
push
mov
inc
in
cmp
sbb
push
xchg
mov
xor
xor
lea
fmuls
cld
sbb
mov
push
mov
push
fwait
xchg
cmc
add
roll
jne
lock
and
in
jno
rcrb
in
and
fsqrt
in
mov
hlt
adc
xor
push
cmp
mov
mov
loop
stos
das
ss
mov
lret
cmp
fs
inc
pop
int3
pop
mov
xchg
shll
lods
xchg
add
lds
in
bound
mov
pop
out
mov
arpl
jne
fstpt
loope
stos
xlat
mov
mov
sarl
imul
mov
push
mov
es
jge
jecxz
xchg
fmul
xchg
out
cld
mov
adc
sbb
repz
adc
mov
cld
pop
push
sahf
ja
mov
push
and
adc
mov
mov
push
cs
pop
leave
repnz
gs
mov
add
inc
rcl
and
fcmovnu
pop
popf
xchg
pop
out
jo
adc
sti
lea
xchg
inc
leave
in
mov
cmc
sub
pavgb
test
xor
lahf
test
inc
inc
sbb
divl
lods
jb
cli
pop
insl
mov
mov
cltd
jne
push
out
mov
push
mov
or
cmp
dec
jge
inc
dec
repz
imul
jl
jecxz
cli
add
lods
pop
push
cmp
xor
fiadds
adc
jmp
jnp
mov
sbb
sbb
cs
inc
jbe
pop
int
pop
push
and
mov
sub
stos
ja
cmc
xor
lahf
xchg
cltd
inc
call
jo
xor
lahf
imul
movsl
insb
jo
pushf
adc
imul
dec
lock
adc
push
mov
insl
xor
or
ljmp
pop
sbb
jp
cli
push
cmp
jg
pop
jmp
sub
lret
call
mov
add
adcb
jno
js
and
pop
and
add
xor
cmp
ficoml
aas
jae
cmp
stos
xor
mov
pushf
adc
or
out
cwtl
pushf
cmp
stos
or
test
call
sbb
xor
push
cmc
mov
mov
and
dec
mull
data16
jb
mov
cltd
ljmp
aaa
sub
push
sahf
push
sbb
cmp
mov
mov
mov
in
push
sbb
sub
ljmp
subl
dec
iret
stos
push
fidivs
cmp
cwtl
out
adc
out
int3
sub
dec
iret
std
lcall
and
jg
mov
push
mov
popf
xor
jnp
xchg
inc
ret
cli
mov
sbb
push
or
out
inc
lcall
xchg
test
mov
push
bound
out
ret
push
xchg
mov
push
push
stos
test
cli
pop
mov
adc
aam
jmp
xorb
subb
pushf
sbb
xor
mov
push
adc
popf
push
xor
sahf
pop
pop
lretw
adc
cmp
add
sbb
push
xor
fs
pusha
push
push
add
xchg
pusha
jne
jbe
xor
ljmp
cmp
aad
test
xor
stc
std
mov
cwtl
xchg
pop
pop
out
push
fwait
add
sub
xor
stos
add
jge,pn
sbb
sub
into
inc
movsl
insl
push
mov
pop
sahf
cs
out
int
dec
mov
jb
push
mov
mov
dec
pop
or
mov
adc
nop
cmp
jecxz
jmp
jno
aaa
inc
mov
jbe
repnz
loopne
imulb
push
push
adc
dec
lods
push
inc
ljmp
je
bound
int3
insb
cwtl
loopne
data16
pop
add
dec
and
xchg
mov
std
aad
sub
fildll
dec
or
cmp
shlb
sbb
divb
aas
cmc
fcoml
fisttpll
add
pop
pushf
add
pop
mov
dec
cmp
xchg
hlt
or
cmp
subb
mov
ja
xchg
mov
jbe
call
xchg
adc
pop
xadd
and
jno
imul
sub
xlat
xchg
call
xlat
xchg
mov
stc
sbb
push
add
insl
fmuls
push
aas
imull
cmp
arpl
adc
ret
pushf
ret
adc
cltd
fists
sub
lods
cmpsl
repnz
xchg
and
scas
test
xchg
outsb
cltd
mov
aaa
sub
xor
jbe
inc
inc
call
in
aam
inc
push
daa
add
inc
pusha
sbb
sub
test
arpl
push
adc
mov
or
fldcw
cmp
test
pop
push
cmpsb
mov
sub
and
xchg
push
mov
out
push
xor
add
lods
sub
mov
pop
jbe
jo
mov
js
cmp
imul
mov
push
sar
jno
mov
mov
mov
mov
jb
mov
sbb
clc
inc
or
fisubrs
dec
fnop
add
je
decb
nop
aaa
fbld
push
pop
fdivrs
mov
and
je
scas
in
fnstenv
xchg
pop
mov
sub
dec
iret
mov
es
rcll
insb
pop
out
mov
pop
push
mov
sub
add
loop
aas
test
rcrl
nop
mov
pop
in
sub
xor
jnp
jmp
shlb
xor
jecxz
push
insl
mov
jecxz
inc
ss
call
push
xchg
les
stos
fstpt
sub
sbb
add
sub
dec
fsts
lahf
loope
insb
lods
mov
inc
pop
loope
lcall
cmp
ret
push
iret
rcll
addr16
sub
dec
or
jmp
icebp
push
test
lret
xor
cli
or
sbb
enter
out
sub
cltd
ja
adc
pop
in
jecxz
inc
sub
push
sub
fwait
aas
mov
inc
sub
enter
xchg
jmp
cwtl
push
adc
mov
push
dec
jb
mov
ret
mov
adc
fisttpll
fwait
cmc
mov
pop
add
mov
dec
xchg
sub
jno
adc
ret
xchg
insl
fs
lods
and
in
bnd
pop
mov
sub
lret
sbb
push
repnz
les
fs
mov
sbb
movsb
adcb
add
xchg
cmp
outsb
mov
in
int
ret
sbbl
addr16
fcoml
and
dec
imul
and
imulb
mov
daa
dec
jp
jbe
movsl
xor
pop
cmc
mov
paddw
xchg
push
pop
mov
or
and
sbb
ja
in
in
cmp
neg
mov
inc
out
jmp
cmpsb
mov
mov
pusha
call
mov
sbb
cwtl
adc
add
rolb
movsb
dec
scas
js
xchg
push
imul
fiadds
enter
outsb
cwtl
xchg
pop
inc
lods
rcr
pop
insb
cmp
jmp
ja
xor
daa
movsl
push
push
xor
mov
pushf
pop
outsb
and
lds
dec
lahf
andb
jmp
lods
inc
add
mov
pop
mov
cmpsb
stc
aas
nop
xchg
inc
xchg
in
repz
jge
call
sub
xor
inc
mov
cmpsb
jno
pop
js
ret
insb
sub
roll
movsb
push
push
xor
iret
mov
adc
jmp
lods
loop
pop
sub
imul
mov
xchg
or
adc
cmc
add
std
sub
sbb
cmp
pop
fdivl
and
mov
movsl
pop
sahf
pop
fcomip
arpl
repz
lods
bound
jl
movsl
mov
push
push
icebp
mov
notl
xchg
in
add
adcl
loopne
mov
fiaddl
popa
sbb
popf
adc
pusha
scas
cli
sbb
xchg
outsl
or
inc
and
notb
cmpsl
cmp
pop
setne
push
mov
lcall
mov
lea
stc
es
xchg
aad
xchg
ficompl
mov
out
lods
jns
mov
jecxz
shll
or
cltd
xchg
pop
and
xchg
add
sub
pushf
test
push
inc
mov
cmpl
lret
addb
adc
daa
inc
scas
xor
mov
pusha
nop
fcoms
cmp
ficoms
inc
inc
outsl
sbb
insb
jnp
int3
add
insb
sub
lret
or
adc
fs
push
pop
out
outsl
aam
int
pop
pause
es
pop
lods
jmp
stos
mov
dec
jmp
test
cmc
andb
fists
xchg
xchg
repz
xor
mov
test
inc
push
xchg
push
jle
jo
xor
pop
popa
fsin
push
push
fstl
push
cmpsb
jbe
lret
jbe
sub
lds
icebp
das
push
xor
xor
xchg
dec
in
aad
sub
dec
or
test
loopne
lahf
push
and
cwtl
and
mov
inc
enter
ret
sbb
cltd
jge
arpl
jg
inc
push
bound
inc
inc
enter
out
in
cltd
dec
hlt
fists
mov
fwait
mov
loop
fistpl
popa
xchg
xlat
roll
and
rcl
or
out
fmuls
dec
cmpsb
inc
mov
repnz
push
mov
daa
dec
test
add
pushf
leave
mov
js
mov
fisttpll
mov
mov
mov
mov
inc
test
filds
pop
aaa
mov
stos
clc
xchg
mov
or
and
setge
xchg
dec
adc
pop
xchg
dec
jge
pop
in
imul
mov
faddl
stc
js
jecxz
jbe
add
cmp
jnp
pop
scas
xchg
adc
pusha
push
inc
jl
xchg
add
adc
fildl
fldl
test
fisubl
call
cmp
cmpsl
xor
fs
xchg
dec
mov
jae
loopne
jg
and
xor
mov
test
jle
dec
aam
push
aad
lret
scas
pop
mov
into
cmp
test
jb
dec
fiaddl
fnstsw
pushf
xchg
sbbl
lods
dec
vandps
leave
xor
int
sbb
lret
push
xchg
gs
sbb
addb
fidivrl
jmp
insl
fcmovb
es
insb
sahf
inc
jp
nop
idivb
out
aas
cld
push
or
pop
mov
dec
inc
xor
sbb
movsb
mov
cmp
or
ret
test
outsl
popa
mov
dec
inc
add
popa
mov
cmp
adc
and
jbe
loope
or
cmpsb
cs
insl
mov
scas
imul
sete
cwtl
andps
cmp
ja
inc
cli
adc
xor
push
mov
cmpsb
dec
xor
call
loope
and
add
sti
mov
jl
clc
outsb
jge
bound
dec
stc
adc
mov
popa
pop
mov
mov
cld
jno
xor
lahf
pop
fdivs
cmp
fcoml
sbb
push
lea
fwait
mov
mov
repnz
mov
add
out
adc
jo
lods
daa
inc
jge
mov
inc
xchg
mov
cmp
mov
mov
xchg
adcl
dec
jno
dec
jnp
add
sbb
lcall
xchg
jo
jb
xor
jg
lods
fscale
xchg
dec
aaa
movsb
clc
mov
ret
cmp
repnz
mov
mov
push
cmc
outsb
cld
jae
and
sub
xchg
int3
aam
add
cmp
mov
dec
iret
lahf
cmp
pop
mov
outsb
stos
shr
xchg
in
je
inc
js
lahf
push
mov
xor
xor
adc
loopne
fucomip
mov
jecxz
es
xchg
inc
pop
xchg
pop
dec
cld
mov
cs
les
iret
lcall
mov
lcall
jp
cltd
pop
jg
imul
loop
repz
mov
insb
pop
pop
push
xor
push
mov
add
scas
lcall
xor
mov
shrl
idivl
mov
push
loop
cmc
cmp
loop
repz
pop
dec
add
imul
fisubs
ds
lahf
or
xor
jle
sub
sbb
xchg
mov
repnz
inc
lret
mov
mov
lea
sahf
cmp
inc
lret
rcl
sbb
sub
jnp
imul
jne
xor
push
fnstsw
xchg
adc
sbb
mov
jl
push
pop
jp
scas
and
cmc
jg
cmpsl
sub
mov
js
xchg
int
fisttps
mov
fcompl
ss
ret
iret
adc
daa
and
dec
sarb
sub
clc
or
jp
adc
pop
sub
sbb
hlt
out
push
push
call
cmp
mov
fsubrl
insl
push
xor
ret
and
cld
in
mov
out
fbstp
les
jp
fcmovnu
lahf
inc
in
loop
negl
xor
jbe
jecxz
inc
ud1
push
and
fsubrl
repz
cmp
inc
mov
or
div
push
mov
sub
rcll
pop
mov
sbb
xorl
cs
and
add
pop
dec
push
int3
cwtl
pop
pop
inc
je
sbb
cmp
cwtl
shll
add
push
or
fcmovnbe
inc
jge
cs
mov
cmp
rcrl
mov
mov
stc
cmpsl
xchg
jmp
add
add
or
xor
or
scas
inc
notb
push
int
xor
adc
loop
dec
or
or
pop
inc
loop
loopne
cli
imulb
in
pop
aaa
lret
in
sarb
adc
sahf
inc
jbe
push
dec
and
mov
inc
mov
push
rcrl
movsb
jb
sbb
dec
std
repnz
and
imull
sarb
call
jno
cmp
pop
pop
test
mov
sub
cmpb
lds
pushf
aas
dec
adc
pushf
push
daa
pop
cmp
jle
sahf
shlb
es
std
xor
pop
jp
cs
jmp
fstl
out
jae
das
subl
in
ds
int3
push
xchg
in
shrb
sbb
icebp
addl
mov
lods
xorl
mov
or
movsb
in
stos
das
fwait
pop
bound
push
ror
nop
popf
sbb
maxps
cld
insl
ljmp
loop
out
pop
inc
sahf
pop
mov
push
fists
imul
pop
pusha
subb
lods
push
out
ja
push
dec
jb
push
jo,pn
sbb
and
lret
stos
xchg
neg
jns
dec
or
ret
jo
xchg
lea
dec
add
and
mov
add
pushf
dec
or
fs
mov
outsl
pop
and
int
add
repz
jmp
and
xor
loop
mov
bnd
loope
movsb
dec
das
jb
roll
dec
inc
outsl
mov
int3
icebp
cmc
lahf
imul
adc
arpl
imul
dec
repz
xchg
pop
out
int3
sub
dec
inc
cltd
imul
add
mov
jmp
pop
mov
shll
movsb
data16
or
sub
adc
rorb
and
repz
mov
test
shl
aas
shr
xlat
xor
lods
and
imul
test
aam
cmp
sarb
inc
lods
fwait
clc
jle
jno
js
dec
sbb
movsb
xchg
call
jns
sub
xor
movsl
xor
pop
xlat
lods
sbbl
and
mov
mov
jns
xor
call
mov
xor
rcl
hlt
or
insb
icebp
mov
imul
xor
fwait
mov
fwait
mov
xor
sbb
dec
movsb
jb
adc
xor
ret
or
jmp
push
out
mov
in
fisubs
fadd
push
out
sbb
mov
js
ljmp
fdivp
mov
popa
push
fwait
out
fiadds
jnp
inc
inc
cmc
pop
ss
jnp
jb
jp
and
pop
push
sub
cmp
in
in
or
pushf
cmpsl
cwtl
aaa
push
fmuls
sub
mov
xchg
mov
jo
vpsllq
push
add
sahf
and
lods
js
inc
shll
xchg
dec
pop
sti
shl
ret
push
rcl
adc
adc
push
fisubrs
shll
mov
or
push
out
icebp
fcomps
dec
out
and
inc
fildl
loopne
repnz
push
inc
sahf
in
clc
mov
sub
xchg
loope
pop
and
bound
cmc
mov
and
loop
data16
inc
push
xchg
in
jns
daa
es
scas
xor
rcrb
push
push
test
shl
xchg
pop
cmp
int
mov
mov
mov
mov
and
aas
pushf
jns
popf
sbb
mov
mov
cmp
cmpsl
lods
push
js
mov
test
fsubl
addr16
sbb
add
xor
xchg
pop
rorb
mov
cwtl
pop
ret
xchg
ja
mov
adc
fstpt
das
movl
mov
divl
stos
repnz
adc
mov
daa
test
call
cmpsb
xorl
inc
fisttps
lahf
mov
cld
jmp
mov
icebp
incl
jns
test
loopne
and
stos
inc
inc
jae
pop
stos
add
aad
mov
outsb
adc
subb
cmpl
orb
or
push
insl
dec
inc
in
daa
std
mov
hlt
cmpsl
ret
pop
or
mov
pop
aaa
inc
out
push
xchg
pop
and
xchg
out
fidivrs
or
rclb
adc
enter
int
xchg
hlt
cwtl
aaa
rol
loop
add
sbb
sbb
insb
mov
push
sbb
lods
lock
mov
push
decb
in
daa
push
into
cmp
mov
sub
shl
iret
ret
sbb
adc
mulb
xor
data16
cmp
and
loop
push
pushf
pop
sarl
cld
fidivrl
mov
pop
das
mov
fimull
cmp
lock
lods
stos
xchg
xchg
mov
mov
and
xor
sahf
dec
mov
xorb
dec
mov
outsl
dec
clts
and
loope
mov
dec
lds
cmpb
imul
das
cmc
mov
mov
add
pop
pop
dec
or
mov
mov
xchg
pop
fcoms
jecxz
repnz
mulb
out
test
imul
mov
stc
mov
cwtl
cmpl
sub
ret
dec
sub
lcall
dec
jg
stc
inc
push
add
cwtl
mov
or
into
push
sbb
jno
xor
and
cmc
popa
out
and
push
fsubrs
popa
rolb
sub
hlt
mov
push
push
fs
mov
jecxz
rorl
stos
filds
mov
in
shrl
cs
outsl
push
xchg
xchg
lret
add
mov
popa
pusha
hlt
xorb
in
shl
mov
jecxz
mov
jmp
ds
jl
imul
inc
out
movsl
fwait
inc
cmp
sub
arpl
pop
push
and
adc
js
mov
jo
insl
cmp
push
cmp
enter
popa
xorl
dec
sti
std
dec
or
xchg
enter
cwtl
in
push
stos
jne
push
outsb
ss
xor
add
sub
mov
xchg
je
inc
ds
mov
cs
xchg
jle
dec
push
stos
pop
je
mov
les
xor
and
jo
mov
mov
add
pop
test
sti
jne
push
mov
in
call
mulb
test
scas
jmp
icebp
sub
dec
mov
sbb
es
add
push
cmp
fs
xorb
mov
scas
add
push
cli
cmc
mov
lahf
sahf
fidivs
cmpsb
adc
loopne
xor
cmc
adc
stos
inc
jge
add
cmp
or
jecxz
adc
mov
cmpsl
pop
jbe
movsl
mov
repz
xor
jno
cmp
dec
repnz
pop
mov
lods
cmp
mov
cli
inc
outsl
inc
mov
test
pop
enter
sub
aas
dec
adc
sbb
ficoml
outsb
pop
stos
xchg
mov
jb
imul
xor
sbb
ja,pn
add
fcmovne
add
out
mov
cli
jb
cmpb
mov
xchg
in
jmp
inc
pop
sub
pop
insl
mov
shll
popf
je
mov
lret
nop
fs
xor
gs
sub
mov
orb
jg
subb
out
or
mov
out
pusha
lds
sbb
jnp
popf
mov
adc
pop
js
push
jbe
adc
cmp
cmp
or
cmpsl
addr16
or
push
test
inc
pushf
or
and
leave
push
pop
push
std
sub
insl
add
aas
mov
dec
in
outsb
rclb
add
test
mov
adc
sbb
test
cmp
mov
clc
xchg
arpl
dec
push
cli
jl
mov
mov
jo
or
add
push
and
adcb
pop
pop
mov
or
movsl
add
jmp
fdivrs
shll
push
pusha
int3
cmp
add
cld
mov
cli
add
mov
mov
sbb
cmp
shrb
cld
out
inc
add
pop
inc
mov
imul
gs
add
pop
adc
out
dec
or
fwait
cmp
mov
rolb
js
jmp
lret
leave
das
in
jno
stos
xor
hlt
mov
and
pushf
xor
or
fldt
mov
inc
jp
sbb
aas
xor
sarl
ret
mov
xchg
bound
mov
out
jb
pop
adc
and
cs
and
outsb
mov
dec
aaa
dec
sub
push
mov
and
loop
pusha
and
lods
xchg
aad
xor
or
aaa
jbe
push
subl
mov
iret
hlt
add
stos
mov
jmp
sti
and
add
aas
cmpsl
cmpsl
dec
xor
sub
sahf
scas
dec
xorl
ret
jb
cwtl
mov
cmpb
mov
dec
xchg
or
in
sub
jp
es
push
mov
movsb
or
cmpsb
add
inc
cmp
insl
lahf
xor
leave
mov
enter
in
lcall
xchg
adc
dec
push
divb
add
int3
add
dec
ja
bound
cmp
xor
ss
decb
fildll
xchg
push
ror
idiv
cwtl
std
sub
and
cmp
dec
sbb
sbb
adc
sub
sub
add
call
inc
ljmp
pop
loopne
loopne
out
xor
jle
xor
daa
cmp
pop
xchg
add
scas
xchg
mov
cmp
mov
xchg
nop
loope
imul
mov
imul
xlat
enter
push
or
jae
push
sti
sbb
xor
loopne
push
out
cmp
aad
mov
add
inc
push
push
mov
mov
and
mov
cmp
pop
in
pop
or
inc
repnz
lods
push
sub
jnp,pt
sbb
aas
test
dec
movsb
sub
add
loop
fmul
sub
xor
test
cmpsb
sbb
dec
pop
shrl
testl
push
imull
pop
xlat
stc
sbb
xchg
sbb
add
inc
and
shll
cli
push
sbb
pop
nop
cmp
adc
xor
xchg
sbb
mov
cmc
or
xlat
outsb
mov
cmp
gs
ja
lds
sbb
jae
push
cmp
test
das
hlt
add
mov
dec
clc
out
rcll
mov
imul
mov
das
pop
xor
dec
dec
sub
mov
orb
mov
cmpsb
inc
sbb
in
cmp
xor
pop
iret
push
call
and
or
repz
ljmp
push
xor
in
rep
stc
sbb
je
push
rol
add
pop
dec
or
sub
fwait
xchg
and
push
mov
bswap
iret
inc
cmpsb
cmp
lahf
mov
imul
aaa
push
pop
xchg
and
jge
je
mov
lahf
inc
mov
mov
push
int3
nop
fs
in
jb
test
dec
cmc
outsl
mov
mov
push
test
and
leave
jp
shlb
push
cmp
push
lea
orl
inc
or
ret
mov
push
mov
loopne
les
pop
out
pop
jmp
fmul
mov
fstpl
pop
cmpsl
mov
sub
add
scas
into
test
mov
nop
inc
enter
aam
int3
add
leave
mov
movsb
xor
xor
jb
xchg
icebp
mov
addr16
das
ret
inc
out
in
es
sub
notl
mov
lock
xchg
xchg
int3
pop
lods
inc
loopne
imull
repz
ljmp
inc
jbe
mov
je
cmp
cwtl
mov
xchg
push
mov
stos
das
pop
js
push
dec
adc
shrb
out
cmp
test
pop
xor
push
and
repnz
stos
movsb
mov
fbstp
and
jmp
push
dec
ja
cs
jecxz
mov
push
mov
and
pop
jl
pop
mov
ss
nop
sbb
pop
fiaddl
imul
cmp
adc
pop
js
sub
movsb
jnp
inc
or
xchg
add
jg
xlat
mov
sub
adc
xchg
add
inc
inc
adc
dec
mov
mov
outsl
dec
add
push
daa
dec
xor
roll
ficoms
pop
xchg
std
addr16
cmp
lods
retw
mov
mov
daa
push
aas
lcall
enter
pop
popf
ja
xchg
dec
mov
fists
movb
add
cltd
cs
fs
ljmp
sbb
loopne
xchg
stc
popa
jo
jl
test
mov
xlat
aad
out
sbb
mov
inc
mov
out
fcom
mov
xor
pop
test
or
stc
or
mov
int3
add
outsl
cmp
mov
or
fsubrl
ja
push
iret
in
push
jecxz
loope
icebp
aad
notb
int
loopne
ret
dec
push
inc
mov
jbe
and
nop
rcl
addl
sahf
mov
test
pop
pop
jns
test
push
add
and
sarl
loop
pop
dec
sbb
push
aas
sbb
cs
and
cmp
jg
mov
sbb
pop
xor
sbb
sub
rcl
lds
jns
sbb
xor
cmpsl
jnp
mov
sti
jecxz
jge
cmp
mov
or
mov
inc
or
xchg
bound
dec
sarb
jo
jbe
jbe
or
and
fwait
shlb
cmp
mov
inc
imul
fidivrs
pop
xor
fbstp
mov
addr16
push
call
xchg
mov
or
int3
out
in
cld
xor
rolb
into
lods
push
push
bound
scas
cmp
jle
push
inc
sub
sbb
or
jg
jl
fcoms
decb
pop
sub
mov
dec
xchg
inc
cmpsl
int3
je
movups
push
sub
jl
ds
adc
jne
pop
cmpsb
xor
daa
daa
aas
mov
nop
popf
dec
dec
xor
cmp
mov
sub
aaa
mov
leave
sub
fisttpll
aad
add
pop
aam
and
mov
pusha
push
and
scas
out
pop
lds
jmp
or
cmc
sarl
shrl
xlat
addr16
xchg
sbb
addr16
push
mov
push
sub
enter
or
and
je
push
test
in
mov
and
into
std
dec
mov
imul
pusha
adc
jge
cltd
aam
int3
xchg
ss
in
arpl
out
push
jb
clc
mov
mov
push
test
xor
faddl
adc
sbb
adc
pop
mov
xor
or
xchg
push
xor
outsb
xor
ret
test
stc
cmpsb
cmp
aam
rolb
lfs
sub
push
jnp
and
pop
loop
dec
pop
and
rcrl
movsb
incl
lret
jne
daa
push
mov
cld
wbinvd
cwtl
mov
ss
inc
enter
aaa
repz
lcall
add
xor
sahf
add
outsl
fs
out
sbb
mov
or
cs
cs
inc
or
pop
scas
ja
mov
out
and
hlt
xchg
pop
mov
lcall
mov
ja
dec
daa
sub
enter
test
jl
lea
cmp
push
xchg
mov
xchg
dec
adc
aad
xchg
out
push
imul
dec
rcr
cmp
dec
add
mov
addr16
iret
mov
and
dec
or
mov
mull
rcrb
jo
in
or
pop
mov
pop
nop
lods
xchg
test
dec
mov
popa
gs
jo
repz
mov
sub
out
jnp
xchg
sbbb
filds
pop
mov
xor
fcoml
adc
aam
fisubrs
aam
fwait
adc
test
divl
jnp
sbb
mov
pop
sbb
xchg
test
movsb
int3
jae
leave
notb
icebp
out
jae
adc
xchg
and
sbb
xor
dec
inc
adc
rcrb
jge
lea
sub
inc
fldt
fxch
aas
cld
jne
bound
sbb
fistpll
and
xchg
fildl
ljmp
subb
cmpsb
pop
mov
mov
mov
aas
dec
sub
dec
jb
test
movsb
or
sbb
mov
add
stos
or
cmp
shr
sti
xchg
das
aad
and
push
lret
cwtl
pop
jnp
sub
inc
add
mov
lods
mov
in
call
int3
jg
mov
test
aaa
and
mov
cltd
hlt
xchg
jmp
js
pop
and
stos
repz
fcmovne
scas
hlt
pop
cmp
mov
fdiv
fildll
clc
pop
sub
shlb
outsb
ret
jge
dec
jae
lods
sbb
cli
dec
sti
adc
mov
ret
or
mov
inc
popa
ja
lods
push
in
xchg
repz
stc
or
mov
int3
mov
xchg
xor
push
push
orl
fimuls
int
stos
mov
enter
ret
in
insl
scas
jns
sahf
xlat
les
imul
pop
jmp
repnz
cli
stos
addl
scas
dec
mov
jae
xlat
imul
inc
or
or
bound
andl
xchg
fnstenv
int3
shlb
dec
sub
js
jmp
movsb
xchg
aam
sbbl
sub
fcmovnb
mov
in
ret
pusha
mov
push
pop
mov
pop
push
cld
pusha
outsb
pop
jo
ljmp
stc
xchg
insb
ror
sub
scas
jle
test
pop
inc
cltd
sbb
push
or
sbb
leave
int
jnp
sub
sub
xchg
ljmp
dec
sti
mov
fsubs
cmp
out
std
out
lods
dec
add
sub
ja
loopne
add
jb
pop
fidivl
mov
std
fwait
push
das
fldenv
imul
dec
outsl
cltd
std
ret
int3
cmpsb
jb
in
test
jno
mov
inc
jecxz
pop
popl
pop
scas
pop
or
fldl
stc
push
clc
push
scas
rcll
popf
ret
push
cld
xor
add
in
je
in
cmc
loop
popf
add
fisubs
shlb
cli
sub
xlat
cwtl
jmp
cmp
enter
in
add
lock
and
inc
call
xchg
adc
and
cmp
dec
cmp
outsl
cmpsl
int
xchg
es
adc
lods
adc
aaa
xor
mov
cmpsl
and
dec
divl
lret
pop
cmpsb
ss
icebp
push
loopne
addr16
sub
inc
pop
mov
dec
inc
ja
mov
xchg
sti
inc
ret
xlat
dec
ja
push
in
dec
shrb
or
inc
mov
fimuls
xor
cwtl
mov
les
pop
or
cmp
es
aaa
dec
mov
add
dec
int3
mov
xchg
nop
enter
jns
inc
test
cmp
jecxz
filds
add
scas
mov
aaa
in
bound
mov
adc
cmc
sbb
aad
aad
iret
pushf
mov
xlat
xchg
lods
fwait
pop
aad
rcl
dec
outsb
push
ja
mov
and
je
adc
ret
dec
or
in
sub
pop
fistpl
mov
push
lea
cmp
dec
pushf
adcl
or
jl
movsb
add
mov
and
je
test
dec
popa
add
push
je
inc
popa
sub
enter
sbb
shl
leave
jnp
fdiv
nop
outsb
inc
mov
inc
lods
pusha
movsb
cld
and
push
cmp
dec
lods
inc
ljmp
xor
pop
jnp
movsl
or
insb
fwait
cmp
pop
xor
je
ja
imul
xchg
lret
aam
xchg
in
mov
and
sub
xlat
rolb
add
sub
add
sub
mov
loope
repnz
inc
mov
mov
call
testl
mov
and
out
xchg
pop
loop
cmpsb
sbb
icebp
cmpsb
cld
test
add
push
sbb
lods
aas
das
push
mov
or
popa
mov
shrd
xor
and
and
dec
jae
add
sub
dec
gs
pop
mov
fbld
push
movsl
push
mov
push
cmp
mov
cmp
push
pop
xor
lods
push
mov
andb
inc
mov
ss
mov
ljmp
push
ret
ficompl
je
push
cmp
xchg
mov
jecxz
sbb
push
scas
mov
ja
sub
sub
fs
push
loopne
je
and
lods
xor
push
dec
mov
or
addl
and
adc
inc
in
inc
jbe
inc
dec
pop
push
push
out
xlat
xor
lds
pushf
icebp
inc
jecxz
pop
sub
movsb
and
arpl
jmp
dec
jle
pop
and
gs
dec
call
cmpsl
fwait
adc
mov
cmp
xchg
jnp
rcr
pop
loop
mov
pop
add
push
inc
dec
shll
and
cld
push
fisubrl
in
test
xor
iret
inc
enter
outsl
sbb
leave
aam
add
xchg
pcmpeqw
cmpsb
aad
cmc
test
cli
lahf
jne
adc
movsb
test
mov
mov
mov
int3
push
mov
xchg
cs
loop
sahf
cmp
stc
jne
inc
adc
adc
hlt
xlat
pop
decl
addr16
nop
sub
sarl
push
das
and
repnz
sbb
jne
movsl
lea
push
jns
hlt
popf
xchg
call
and
and
dec
leave
iret
mov
jns
outsl
vaddsubpd
int
add
push
add
test
insl
loopne
jle
cmp
xchg
outsb
cwtl
adc
jmp
or
push
addr16
lods
push
and
jg,pt
fwait
shrl
inc
xchg
mov
jl
pusha
test
jnp
leave
movsb
jae
mov
iret
ffree
fcomp
dec
jg
xchg
sbb
xchg
xchg
xchg
jne
jl
lods
inc
bound
pop
pusha
test
xor
add
add
mov
dec
pop
enter
dec
pushf
int
dec
inc
scas
mov
xor
mov
mov
add
sbb
mov
add
mov
int3
cmp
lcall
cwtl
fists
pop
sbb
mov
lret
xchg
loope
inc
das
mov
inc
and
data16
repnz
xchg
gs
mov
dec
xor
arpl
lret
inc
shlb
or
xor
repnz
mov
in
and
mov
adc
lret
mov
dec
push
outsl
jmp
ds
mov
pop
push
movsl
shrb
pop
stos
mov
jmp
lds
jo
sti
jp
sub
push
xor
mov
inc
shrl
cs
aad
cmc
inc
fcompl
pushf
movsl
xor
push
lock
mov
add
das
push
mov
jle
xlat
inc
mov
xchg
out
push
xor
pop
sbb
ds
in
mov
cmc
add
in
inc
jbe
fdivl
lea
mov
cld
iret
divb
shl
mov
add
test
je
add
rclb
dec
mov
jp
pusha
inc
mov
lock
cmp
out
sbbb
cmpsl
leave
push
add
cli
mov
dec
or
sahf
in
fsubrl
icebp
inc
ds
in
iret
jbe
pusha
lret
push
adc
daa
lahf
jbe
adc
rcrb
in
rcrl
jecxz
leave
lock
lret
mov
sbb
pop
push
xor
or
cmp
lods
aaa
push
or
dec
pop
pop
xchg
sbb
sarl
mov
out
xor
insl
fldz
jae
mov
daa
dec
faddl
push
mov
mov
sbb
jae
xlat
call
jg
cld
pushf
jb
into
aas
cmpsb
and
lock
pop
es
mov
xor
lods
adc
xor
xchg
mov
xchg
or
sbb
inc
adc
add
pop
lret
pop
jns
dec
lock
pop
rorl
pop
iret
orl
lods
sbb
push
jmp
mov
data16
push
push
mov
pop
out
pop
add
icebp
sbb
fsub
sbb
adc
mov
stos
adc
std
jo
out
lea
push
push
fmulp
shrl
in
cmp
adc
cmp
jbe
lea
xor
sbb
mov
jge
xchg
dec
push
push
pop
imul
mov
xchg
xchg
pop
mov
inc
pop
andl
or
cli
jbe
stc
decl
add
out
xchg
inc
into
popa
pop
mov
mov
insb
repz
loopne
int3
rorb
jmp
jns
popf
mov
mov
stos
ret
testb
std
add
in
cmp
cld
dec
pop
add
add
push
sbb
jge
adc
and
stos
jnp
inc
push
cmp
fwait
mov
cmp
sarl
dec
mov
or
cmp
dec
sub
adc
stos
dec
jl
lock
cmp
cltd
stos
verr
lods
jae
inc
add
push
int
mov
addr16
adc
nop
jae
mov
lret
add
fdivl
xchg
inc
inc
cli
mov
sahf
cli
pop
insb
repnz
jae
int
push
sahf
jp
insb
imul
enter
push
cmp
je
push
fidivrs
mov
testl
sub
inc
xor
sub
inc
mov
in
cmp
hlt
push
mov
xorl
sbb
push
xor
mov
bound
lahf
call
imul
stos
stc
scas
inc
mov
pop
fldenv
sbb
push
aas
mov
enter
mov
fsub
inc
decl
add
loop
cmp
xlat
popf
adc
arpl
mov
fsubrl
jg
push
mov
mov
mov
cmp
mov
sub
mov
adc
dec
mov
ds
arpl
push
pop
out
movsb
xor
je
jmp
cmp
ss
out
out
adc
rcrl
sub
in
or
xchg
dec
mov
or
popf
mov
mov
fs
sub
xchg
sti
in
stos
push
out
add
adc
xchg
jne
js
xor
pushf
fisubrl
inc
js
in
icebp
and
or
test
xor
cmp
xor
xorl
ror
fs
mov
orl
dec
lods
arpl
cmpsl
xor
adc
mov
jne
test
outsl
jp
sub
lret
jno
pop
cli
pop
bound
cmp
adc
lods
sub
sbb
xor
add
out
test
stos
jp
mov
fisubrs
std
mov
js
es
aad
iret
mov
es
das
jle
mov
sbb
or
jne
test
push
or
dec
addr16
xor
sub
shlb
icebp
push
add
lahf
fbld
repz
lret
cmpw
js
dec
xchg
dec
test
xchg
out
add
je
movsl
loop
mov
faddl
add
int3
in
jmp
nop
and
or
insb
fmulp
movsb
push
pop
lahf
fstps
push
loop
adc
in
push
loop
inc
rcrl
mov
cmp
xchg
add
data16
fld
mov
movsb
mov
cmp
mov
cltd
sub
sti
and
movsl
leave
cmpsl
ret
stc
jg
fistpll
and
ret
arpl
mov
dec
jecxz
arpl
lock
adc
mov
xor
fcomip
inc
ja
sub
fistl
je
xlat
or
sub
jle
aas
mov
xchg
push
xor
arpl
dec
enter
fmuls
mov
or
out
fsubrl
mov
jg
push
or
les
dec
xchg
mov
jl
mov
dec
inc
jb
repnz
sub
scas
stc
outsl
rclb
jnp
xchg
or
mov
or
pop
xor
cld
repz
fdivr
dec
jbe
es
inc
lea
push
scas
mov
pusha
or
inc
push
leave
xchg
aad
cmp
cld
sub
mov
jmp
ja
push
sub
pop
sarl
pop
pop
lcall
mov
sub
enter
mov
mov
loop
mov
pusha
fwait
xor
in
push
je
and
mov
pop
push
lea
jl,pn
lods
out
repz
jno
cwtl
pop
mov
lret
dec
push
fwait
stos
xchg
out
or
lea
pop
mov
jp
pop
mov
and
cmpsl
mov
pop
and
mov
xor
in
fnstenv
lock
adc
jmp
bound
xor
jle
xchg
aad
int
loop
and
xchg
cmc
aaa
inc
pop
je
jge
xor
das
lret
subl
cli
fs
mov
add
lret
and
pusha
xchg
sbb
jmp
iret
adc
cwtl
mov
push
inc
sub
mov
nop
jnp
stc
movsl
or
int
pop
cli
jp
int
fsubrs
fisttps
push
mov
cld
test
ss
scas
popf
mov
xchg
jl
insb
push
inc
push
sahf
adc
xchg
cld
and
push
pop
add
repz
pop
fdiv
je
pop
dec
aam
pop
adc
int
rcrb
rcrl
lcall
push
inc
daa
push
or
call
iret
sub
icebp
lock
jecxz
movl
mov
repnz
mov
pop
scas
cmp
adc
movsb
popf
cmp
cwtl
lds
and
lret
jl
stos
and
cmpsl
loope
push
xchg
repnz
xchg
pusha
mov
mov
fwait
mov
mov
pop
dec
imull
mov
xor
dec
lcall
cltd
mul
xlat
dec
add
inc
pop
or
and
push
adc
out
pop
pop
mov
loope
insb
cmp
xor
fdivrs
cmp
sti
out
jecxz
imul
in
adc
push
or
and
loop
clc
add
sti
sahf
add
jne
aas
xchg
or
rorl
jl
rorl
bound
lea
js
aaa
and
cmc
jge
push
aaa
xchg
clc
mov
push
xchg
xchg
stc
jno
inc
loope
out
ljmp
hlt
in
sub
cmp
xchg
popf
mov
rcl
movsb
jo
push
sbb
repnz
fs
cs
sub
add
ja
into
or
xchg
and
in
add
imul
mov
and
leave
in
aam
lret
ret
je
or
mov
xchg
cwtl
mov
inc
lods
lock
movsl
stc
int
mov
rol
mov
xchg
lahf
cmp
sbb
pop
or
xor
clc
adc
lahf
rcl
into
push
in
fiaddl
push
rolb
sub
dec
pushw
jg
sbb
aas
push
push
mov
adc
enter
negl
add
fadd
inc
inc
rolb
pop
pop
addr16
jo
shr
fwait
stc
inc
mov
push
stos
xor
dec
loopne
aad
clc
jp
mov
xor
mov
xchg
mov
test
jnp
push
sbb
mov
fsubs
or
out
fs
or
fiaddl
inc
jne
xor
adc
jae
in
ds
dec
incl
mov
fwait
sub
push
or
scas
xor
sub
xchg
or
out
jno
loop
jge
arpl
inc
mov
jecxz
icebp
xorl
cmp
daa
push
jecxz
or
xor
pop
test
repz
decl
sbb
les
mov
mov
mov
fisttpl
pop
dec
aad
mov
popa
mov
xchg
or
sbb
pop
push
push
inc
jg
sbb
sub
mov
cli
inc
mov
test
pop
add
add
mov
push
sbb
sub
mov
mov
dec
xchg
lret
xor
sbb
enter
mov
sbb
into
fsts
repz
jp
xchg
cmpsl
push
dec
fnstcw
xchg
into
aad
lret
icebp
push
or
pop
daa
test
add
pop
push
insb
mov
add
push
push
xchg
insb
ljmp
roll
iret
sbb
adc
dec
dec
xchg
in
xor
adc
adc
cltd
add
popf
mov
adc
jns,pt
push
dec
or
call
push
test
jo
lahf
mov
jmp
dec
repz
xor
imul
loop
fdivs
js
mov
adc
fwait
lahf
pop
outsb
mov
pushf
hlt
add
popf
aaa
xlat
in
dec
cltd
call
nop
and
mov
mov
addl
iret
jns
ljmp
ret
enter
push
jg
jns
aad
insb
jbe
push
fdivrl
ss
push
sub
and
adc
adc
stc
or
mov
lret
scas
fstp
xchg
cltd
xor
ds
xlat
scas
xchg
icebp
lret
or
rorb
ljmp
cmpsb
jmp
pop
adc
fimull
cli
xchg
test
pop
sbb
shl
rcrl
clc
jne
out
pop
rol
jg
xchg
add
pop
test
push
sbb
or
fimuls
cld
sub
add
inc
inc
push
and
pop
gs
pop
aad
sbb
xor
fwait
and
xchg
mov
mov
cld
scas
pusha
test
mov
push
mov
xor
dec
lret
imul
testl
test
leave
popa
add
xchg
lahf
aas
loope
xchg
mov
add
dec
mov
insl
mov
xor
push
xchg
iret
jo
sub
nop
sbb
adc
pop
mov
mov
lret
aaa
lods
push
mov
sbb
mov
dec
sbb
popa
push
inc
inc
adc
mov
cmpsl
cmp
or
gs
cmpsl
test
cmp
ljmp
mov
cmp
in
jbe
cmp
int
pop
cld
xor
int3
les
call
in
push
bound
dec
pop
sbb
mov
lret
and
sub
jge
mov
sbb
mov
push
fnstenv
jle
pop
movsb
push
sbb
mov
mov
out
lds
sbb
pop
enter
dec
mov
adc
push
sub
fsubl
cmp
mov
int
xor
mov
jb
pop
cmc
dec
popf
adc
push
add
xchg
mov
jno
lahf
aam
out
jle
repz
xchg
dec
jg
and
outsb
add
enter
jle
cmp
enter
jo
lcall
stc
xchg
sub
jecxz
fwait
jp
push
push
fbstp
addr16
push
add
fistpl
shl
push
outsb
fiadds
ljmp
xchg
test
lcall
lret
xlat
ljmp
mov
cltd
push
jg
adc
adc
push
aam
xchg
xchg
cmp
push
jecxz
jecxz
cmp
pop
mov
cs
xchg
icebp
popa
adc
adc
fistl
jbe
int3
test
jg
fdivs
ret
fistpl
mov
aaa
adc
lret
and
mov
je
gs
leave
mov
mov
out
sti
out
mov
pop
jbe
mov
filds
lret
test
scas
jle
mov
push
int3
adc
outsl
and
or
push
lcall
dec
push
or
int
push
lea
xchg
aam
mov
out
js
movsl
shll
cmc
nop
inc
push
les
nop
adc
int3
inc
pop
cmp
jp
popa
jno
sub
jae
int
cmpsb
bound
mov
jg
adc
iret
inc
test
fs
decb
movsl
xchg
jg
or
bnd
cli
mov
addl
dec
stos
mov
xor
push
test
lock
cmp
dec
or
dec
push
push
in
pop
mov
xchg
add
je
pop
mov
les
enter
mov
pop
int
pop
pop
or
or
mov
out
aad
xor
ljmp
dec
mov
std
and
nop
pop
sar
mov
xchg
in
dec
adc
xchg
mov
fstpl
ja
mov
test
adc
mov
in
or
mov
imul
mov
ds
mov
mov
pop
cld
jb
sbbl
sbb
sahf
add
mov
outsb
or
inc
xor
lcall
mov
jo
hlt
add
xor
xor
cmpl
adc
scas
and
enter
bound
aad
inc
fbstp
push
push
lcall
popf
data16
dec
mov
in
cmp
rol
mov
jge
xchg
es
fwait
push
push
dec
stos
das
sub
xor
xchg
daa
mov
test
jb
fsubrl
push
adc
push
adc
insb
add
pop
dec
pop
dec
push
jo
sub
mov
arpl
mov
add
cmc
jmp
xlat
inc
push
cmpsb
and
and
arpl
dec
push
arpl
sbb
cld
jno
scas
pop
pop
and
adc
and
cs
push
add
jb
out
in
push
mov
mov
lret
xor
jb
mov
xchg
daa
jns
push
sbb
pop
mov
in
dec
pop
adc
dec
add
inc
pop
lcall
lret
jne
dec
adc
cmp
rolb
jp
add
mov
sub
aad
bound
shll
mov
jo
mov
movsl
ret
push
cmp
stos
add
and
mov
lret
shr
sub
test
ss
sub
sti
push
mov
es
fwait
scas
sub
shrb
arpl
ret
hlt
sbbl
pop
test
out
bound
stos
in
dec
inc
xlat
shll
or
jecxz
rclb
scas
insb
out
xlat
or
push
les
and
out
dec
shll
pop
inc
data16
ja
loopne
lods
dec
cs
pop
jle
mov
jmp
push
jmp
lret
test
cli
arpl
sbb
mov
xchg
les
jl
or
shll
pop
gs
ja
xchg
repnz
js
mov
cld
push
imulb
or
mov
dec
aam
push
xor
cmp
adcl
push
or
rol
int
stc
or
push
out
jno
jge
fsubr
xor
lock
lahf
jmp
stos
sub
jle
test
jnp
scas
cmpsb
push
add
loopne
fidivrl
mov
pusha
cmp
xor
cmp
or
add
test
mov
test
mov
repz
loope
addl
adcl
or
outsb
cmp
ficoml
subl
jp
addr16
cmpsl
jge
lret
out
pop
cwtl
dec
xchg
jp
push
fstpl
addl
add
ja
or
cs
pop
jae
mov
fwait
ret
nop
gs
adc
pop
xor
xor
faddl
adc
sub
outsl
pop
xchg
pop
cmpsb
inc
adc
cmp
imul
sub
add
bound
fwait
inc
out
ljmp
mov
in
fldcw
mov
fstps
jge
hlt
add
xor
add
dec
add
loope
cli
movsb
jae
ja
or
pop
pop
rol
or
outsl
mov
std
mov
cld
mov
mov
xchg
push
jb
jne
adc
test
add
xchg
pop
pop
inc
in
loope
cmpsl
mov
add
cltd
pop
cmpsb
sub
pushf
pop
push
jmp
inc
outsl
adc
xchg
dec
stos
mov
int
jb
and
mov
cmp
mov
adc
daa
mov
mov
fwait
out
orl
out
in
and
hlt
add
movsl
xchg
inc
mov
scas
dec
lods
scas
xor
sub
jns
mov
or
xor
mov
decl
dec
stc
aad
loop
clc
cwtl
mov
int
jne
lret
out
test
mov
scas
dec
mov
sub
jg
inc
dec
mov
imul
xor
pushf
call
insl
cmc
data16
movsb
mov
xor
test
mov
in
negl
ljmp
xchg
int
stc
mov
out
std
push
shll
shll
and
lea
or
adc
rcrb
cmc
pop
movsl
dec
in
lods
mov
rcrl
cmpsl
pushf
inc
testb
les
xchg
adc
xor
jbe
jge
cmpsl
and
adc
mov
stos
push
int
and
mov
push
inc
test
mov
pop
addb
lods
adc
and
sahf
int3
pop
push
out
mov
dec
xor
mov
loop
or
pusha
inc
cwtl
or
or
lret
andb
jmp
push
mov
leave
xchg
mov
popf
and
mov
cmpsl
inc
add
insl
add
pop
leave
insb
test
push
add
lret
xchg
fidivrs
xchg
pop
mov
sti
repz
ret
sub
and
push
ret
add
dec
loop
push
into
jno
imul
fnstcw
jbe
nop
roll
sbb
add
sub
push
or
ss
std
ds
das
xchg
inc
es
mov
pusha
xlat
int3
scas
push
rorb
inc
lds
inc
push
aaa
lods
clc
loopne
cwtl
xlat
js
mov
mov
lret
sbb
mov
loopne
pop
xchg
xor
jge
hlt
pop
in
lods
jb
scas
mov
jo
fstl
mov
es
dec
xor
xchg
test
adc
ds
in
pop
jl
lea
adc
daa
lret
mov
and
int3
inc
or
dec
sbb
push
int3
add
and
loopne
andl
aam
adc
cmpsb
jnp
jl
test
pusha
add
rdmsr
sub
xchg
and
pop
in
or
iret
fcoml
dec
pop
and
les
mov
xor
xor
cmp
aam
mov
mov
jae
push
loopne
outsb
or
dec
push
mov
mov
js
dec
outsb
sub
mov
pop
mov
cmpsb
pop
pop
pop
call
loope
test
insb
mov
sar
or
adc
inc
test
xchg
inc
popa
jle
push
inc
xchg
loop
inc
mov
xchg
nop
call
cmp
sub
adc
rclb
and
outsl
addr16
add
add
mov
lock
mov
iret
hlt
cwtl
lock
sub
hlt
andb
pop
roll
sub
xor
cmp
pop
popa
xor
sub
cmp
je
pushl
sub
fmul
jb
cmp
paddusb
xchg
push
mov
push
lods
inc
cmpsb
iret
stos
jne
mov
cmpsl
mov
in
and
sbb
jae
xchg
rorb
icebp
sbb
adc
imulb
adc
mov
ss
lds
mov
dec
and
inc
push
mov
sub
push
xor
xchg
add
push
cs
and
push
push
imull
fdivrl
cltd
ret
mov
enter
mov
out
stos
test
sbb
pop
inc
repnz
filds
xor
stos
in
imul
add
jb
gs
cmpb
decb
push
or
sti
repz
jecxz
or
outsb
mov
subb
aad
mov
rcr
mov
mov
out
inc
xchg
push
inc
lea
add
int3
sbb
or
lds
sub
or
shll
fisubs
std
xchg
scas
xlat
lahf
jnp
and
mov
inc
fstps
iret
add
push
mov
xchg
ss
push
hlt
inc
mov
fcomps
outsl
inc
test
and
mov
fs
scas
rorl
mov
sub
adc
xchg
inc
dec
mov
jl
sbbb
mov
cmp
and
dec
test
cli
pavgw
lahf
out
or
xor
scas
mov
cmc
enter
cmp
movsb
mov
push
imul
xchg
divb
jae
rcrb
test
mov
test
cltd
xor
mov
rcrb
pop
adc
jl
xchg
push
pop
add
sub
ljmp
popa
notl
lret
js
inc
jge
mov
jle
outsl
push
cmpsl
mov
test
push
xchg
jl
or
les
dec
out
sahf
mov
add
test
cmp
movsl
adc
mov
cmc
mov
fwait
lods
push
dec
xchg
pop
stc
sahf
hlt
mov
sbb
push
mov
in
pop
inc
fstpl
fimuls
andb
out
mov
or
popf
fcompl
ljmp
dec
ret
pop
add
pop
out
les
mov
jmp
xor
jnp
xorl
and
popa
mov
jmp
sbb
push
leave
popf
scas
or
add
jp
dec
jecxz
lcall
call
test
orl
inc
sbb
mov
jl
cmp
and
and
xchg
popa
inc
adc
xor
mov
add
cmp
imul
fldl
mov
jmp
mov
pop
push
out
xor
shll
and
mov
mov
mov
in
loop
and
jo
out
pop
out
pop
enter
lcall
popa
out
lret
movb
movsl
or
mov
rol
jno
or
arpl
xchg
pushf
ret
cmp
icebp
mov
shlb
dec
dec
xchg
jo
push
jmp
cmc
dec
or
cmp
cmp
nop
or
xchg
mov
into
pop
shll
push
mov
pop
mov
xchg
push
xchg
xchg
inc
in
fs
stos
mov
aam
mov
outsl
outsl
pop
mov
out
fsubrl
vpsraw
sub
shlb
scas
dec
ret
mov
jo
cmp
mov
lret
push
sbb
pop
es
mov
out
pop
xor
inc
or
adc
mov
push
dec
xor
icebp
cmp
popf
push
loop
add
mov
fcomip
push
cld
aaa
lret
xor
mov
sahf
les
sbb
push
xchg
flds
into
idivb
rol
inc
pusha
jmp
cmp
repnz
jo
add
test
dec
iret
inc
stos
fcmovu
clc
dec
push
out
pop
mov
adc
movsb
movsb
push
pop
mov
xor
mov
pop
xchg
dec
xchg
rcr
in
cld
or
imul
adc
repnz
and
mov
mov
dec
pop
inc
outsl
ljmp
inc
lods
sub
dec
cmp
and
pop
jno
pop
cltd
ja
jb
inc
push
sub
stc
xor
adc
jl
jl,pn
push
sub
rolb
xor
cld
adc
int3
or
scas
push
fildll
jnp
inc
add
inc
push
popl
test
fcompl
stos
test
adc
andb
test
dec
call
sub
nop
fcmove
push
fdivs
mov
mov
mov
cmc
out
pop
hlt
cmc
or
into
mov
fs
sti
scas
xorb
mov
scas
inc
inc
rcl
nop
pop
jg
inc
push
sub
push
push
jmp
sti
or
mov
push
fildll
mov
shrl
and
mov
nop
xchg
test
out
mov
xor
fsubrl
aad
outsb
xor
sub
fwait
das
loopne
cli
pop
cli
xlat
jnp
arpl
ljmp
cmp
andb
insb
adc
xchg
mov
jmp
in
xchg
or
out
pop
into
or
xchg
sub
mov
or
fistpll
aas
sub
add
int
dec
fldenv
jae
cmp
rcrb
jno
xchg
pushf
gs
mov
pushf
into
lods
sbb
je
ljmp
pop
inc
add
mov
into
stos
icebp
xlat
ljmp
imul
dec
int
rclb
ljmp
movsb
cmpsb
shl
xchg
movsb
push
dec
xchg
dec
iret
scas
int
inc
xchg
xlat
dec
jae
insb
dec
rcrb
mov
call
sub
sbb
aaa
not
repnz
js
sbb
mov
inc
mov
out
fsubrl
subb
jle
cmp
cmp
rolb
test
inc
cwtl
sbb
movsl
data16
and
mov
mov
inc
sub
mov
pop
lds
xor
and
and
loope
adcl
jnp
pop
repnz
fwait
push
shrl
sahf
mov
mov
pop
add
popa
rcl
pop
inc
mov
push
incl
or
daa
outsl
out
movsl
cmp
or
imul
mov
shrb
fadd
jns
mull
cs
mov
fsubp
mov
fimuls
bound
sbb
test
and
mov
ror
aam
mov
in
jge
aad
inc
sbbl
jg
js
out
mov
sbb
shrb
inc
lock
inc
inc
dec
jg
xor
movsb
jbe
mov
cmp
mov
sub
sub
ljmp
mov
sub
repz
and
sbb
lods
data16
popa
packsswb
iret
daa
pushf
dec
pop
add
ja
sahf
and
pop
test
incb
out
test
addb
add
fstl
push
adc
push
mov
push
call
jl
adc
and
jns
dec
adc
outsl
adc
jae
adc
dec
daa
enter
xchg
test
shrb
push
fs
cmp
sahf
xor
inc
iret
mov
mov
mov
inc
push
mov
out
nop
mov
hlt
cmpsl
psllq
pop
sbb
pop
fimull
lock
stc
cmp
gs
add
movsl
cwtl
add
dec
xor
xchg
mov
aad
pop
ljmp
and
shl
in
aam
xor
push
dec
cmpsl
jp
icebp
and
or
fisttps
xchg
fidivrs
decl
ds
xchg
dec
jne,pt
mov
test
push
repnz
mov
jns
jns
dec
xor
sbb
aaa
shrb
cmp
add
fimull
and
sub
scas
xchg
lds
in
xor
sbbb
adc
out
pop
pop
dec
lcall
ljmp
or
adc
test
jp
jge
dec
or
iret
jno
in
xchg
cs
inc
adc
push
test
insl
andl
jmp
fwait
adc
dec
sbbb
pop
sbb
push
out
pop
jle
inc
ds
dec
mov
call
mov
xlat
aas
pop
icebp
and
xor
lahf
sarb
sbb
lods
repz
rorb
xchg
sbb
pop
ss
aam
sub
push
push
test
adc
stc
inc
mov
test
jl,pt
test
neg
jle
into
into
das
xlat
pop
iret
jo
addl
rclb
popa
aas
xor
adc
imul
lods
xor
fdivrl
lahf
outsb
int3
pop
lret
cmp
loop
std
sysenter
andb
into
xchg
and
shl
dec
daa
push
sub
xor
pop
pusha
stc
xchg
xchg
mov
inc
push
push
out
jecxz
aam
jg
aaa
dec
into
pop
sbb
hlt
or
jl
mov
and
sub
lock
mov
push
pop
or
push
jge
cmp
and
pop
pop
movb
sti
xchg
xchg
jmp
xlat
arpl
dec
pop
jl
out
loop
negb
xchg
test
out
int3
pushl
dec
pop
leave
popf
and
ffreep
mov
ds
test
addl
inc
mov
lods
sbbl
icebp
testl
mov
mov
inc
xlat
call
clc
arpl
mov
ficompl
xlat
jl
les
xor
arpl
inc
mov
push
add
les
xchg
out
dec
rcl
or
inc
aas
pusha
shlb
cltd
imul
sti
xor
fdiv
enter
xor
lock
int
pop
repz
shl
or
inc
or
rol
icebp
jno
idivl
lret
mov
mov
fucomp
xchg
adc
popa
jmp
fidivrs
call
repz
aad
mov
movsb
lahf
rcrb
push
into
push
jge
lcall
push
cwtl
sub
test
push
inc
and
into
dec
shl
mov
jg
cmpsb
xor
cmpsb
xor
mov
cmc
add
cmp
xor
sub
inc
in
call
add
rorl
jbe
fnstcw
test
in
sub
mov
cmp
mov
dec
cltd
sub
cwtl
inc
jno
xchg
sub
iret
fidivrl
in
shlb
fwait
sub
cwtl
lahf
mov
mov
rclb
push
push
aas
jg
cmp
cld
in
lret
xor
sub
seto
adc
xchg
sti
cmp
xchg
mov
leave
movsl
lret
jo
jge
test
fistpll
ljmp
mov
jnp
push
mov
arpl
mov
pop
jp
movsb
pop
lock
mov
mov
aaa
dec
fmull
mov
negl
mov
lret
hlt
push
cs
adc
sub
imull
pop
imul
stc
cmpsl
push
stc
shufps
in
lahf
mov
dec
mov
call
add
int3
sub
jp
sub
dec
bound
mov
loopne
loope
inc
sub
push
pop
pop
es
pop
jb
shr
pusha
push
mov
mov
hlt
sahf
mov
jg
cmp
test
xchg
cmp
jbe
sub
out
jne
pushf
dec
out
and
mov
push
fs
sub
cmp
idivl
popa
or
jbe
das
add
dec
inc
adc
loopne
cmpsl
in
inc
mov
inc
jp
loope
cmc
mov
hlt
outsb
out
inc
je
push
insl
fnstcw
push
mov
out
lds
out
xor
lret
xchg
and
mov
mov
add
add
xchg
add
pusha
repz
aaa
aam
mov
loopne
sti
in
dec
pop
pop
cmc
dec
imul
and
sti
cld
or
and
or
cmpsl
sbb
dec
jbe
iret
sub
outsb
mov
les
lahf
mov
mov
leave
jmp
or
aaa
outsl
sti
adc
pop
mov
pop
scas
hlt
fwait
mov
add
test
and
lods
not
cwtl
sub
and
adc
push
insl
adc
dec
jno
sbb
or
jle
iret
xchg
popa
orl
loope
jge
je
aaa
fbstp
inc
pop
and
cmp
icebp
ss
lods
cmc
adc
pop
fisttpl
dec
int3
lahf
push
cmp
or
pop
inc
arpl
fisttpll
add
jne
repz
pop
lods
mov
insb
fildll
dec
push
dec
in
stos
adc
movsb
cmp
pushf
pop
fwait
in
lea
aas
push
pushf
mov
xchg
cmp
ret
out
push
adc
or
dec
js
cltd
or
pop
jns
in
pop
lea
jge
xchg
jnp
outsb
mov
out
mov
jle
int3
stos
ljmp
or
mov
dec
and
jnp
xchg
add
mov
rolb
xchg
lea
loope
stc
xchg
xchg
lods
sub
lock
mov
mov
push
pop
in
stc
dec
rorb
xchg
imul
or
shll
dec
popa
push
mov
inc
sub
test
imul
push
in
xchg
aaa
inc
adc
nop
mov
std
mov
shrb
adc
xlat
shll
lahf
pushf
mov
inc
aas
pop
push
scas
std
jnp
popf
addr16
push
aam
into
pop
cmp
outsl
cld
stos
imul
scas
into
mov
addr16
cmc
or
pushf
in
in
adc
jmp
fisubrl
cmp
xchg
outsb
push
cld
cmp
call
out
sbb
cwtl
sarl
xchg
push
out
jae
jnp
push
addl
mov
sti
pop
sub
jb
or
or
adc
popa
call
jae
mov
sbb
icebp
cmc
icebp
sbb
rolb
out
loope
mov
sbb
je
sbb
lcall
repnz
cmp
add
mov
jnp
inc
sub
scas
inc
pop
pop
not
jo
int
jmp
inc
fstps
jno
cwtl
push
mov
mov
jbe
mov
mov
nop
inc
out
xlat
into
mov
roll
inc
ret
push
lock
mov
add
jne
cmp
mov
sbb
add
inc
xchg
out
mov
jbe
add
add
arpl
sbb
and
pop
lods
sub
pop
adc
or
in
ss
push
ret
addr16
add
mov
iret
cmp
test
rol
sub
js
hlt
mov
and
sub
sub
or
popa
add
mull
js
mov
fsubl
in
lret
insl
push
jns
popa
clc
out
push
jb
mov
mov
mov
xor
or
xchg
sub
sarb
lcall
imul
xchg
test
enter
jg
jp
nop
insl
lods
leave
mov
outsb
hlt
fstl
insb
inc
clc
xchg
call
js
outsb
andb
scas
fcmovbe
ss
inc
xlat
xlat
adcb
hlt
dec
cmp
and
enter
adcl
dec
aaa
aas
nop
jno
imul
test
adc
mov
insb
and
cmp
sub
sahf
ljmp
dec
jne
mov
repnz
cwtl
movsb
negl
add
mov
fwait
lea
dec
pop
movb
cmp
in
int3
fists
and
lret
aaa
lret
jno
outsl
out
jl
xchg
icebp
mov
xor
push
pop
xor
sbb
and
adc
cld
mov
jle
mov
cmc
cli
movsl
lods
push
ss
xor
repnz
cmc
pop
aas
push
push
iret
stos
xlat
sub
pop
ljmp
and
xor
das
cmp
inc
mov
insb
cmpsl
repz
cmpb
ds
in
fisubl
jp
sbb
repnz
mov
loope
lret
lea
push
and
ret
out
jg
mov
mov
cwtl
fdivl
xchg
add
cli
in
and
adc
aad
inc
push
int
cmp
cwtl
or
mov
mov
nop
cmpsl
add
jno
call
sub
sbb
cmp
inc
inc
xchg
push
jmp
adc
int3
mov
mov
adc
into
or
xchg
gs
addr16
jo
int3
inc
or
out
push
dec
imul
adc
sbb
vzeroall
scas
push
cmpsb
mov
shrl
push
xor
or
mov
push
push
js
fnstcw
inc
shrb
sbb
jmp
cld
scas
mov
dec
jp
pop
lods
jne
adc
stos
fwait
lcall
fldcw
mov
inc
stos
cmp
xchg
xor
pop
fs
pop
aas
xor
xchg
bound
dec
je
outsl
incl
mov
je
jl
sub
or
jmp
lea
shll
scas
popa
cmp
mov
push
sub
add
aaa
push
and
sub
sarl
cs
lods
cmp
push
add
inc
lods
fistpl
adc
dec
xchg
xchg
pop
lock
xor
xlat
adc
loop
add
push
cmpsl
cmp
mov
and
adc
das
ljmp
lea
shlb
je
xchg
pop
jge
xchg
jb
fwait
mov
imul
out
mov
aam
loope
jbe
mul
and
aam
adc
sub
andl
xchg
lret
out
enter
sahf
sbb
push
pop
push
gs
adc
in
sub
mov
outsl
or
pop
in
push
push
call
mov
outsb
testb
jne
shr
mov
or
jne
pop
xchg
mov
test
inc
sahf
lods
call
repz
ret
addl
std
and
fdivl
out
inc
enter
into
push
inc
cmp
push
fldenv
xor
inc
lret
or
add
push
mov
or
aas
enter
test
jne
pushf
icebp
xor
pop
and
sahf
cmp
ja
mov
mov
out
mov
popf
js
fucomip
rcrl
or
mov
aas
call
add
jbe
inc
dec
jmp
mov
sub
into
idiv
push
cmpsb
nop
jp
testb
xor
ljmp
nop
push
sub
outsl
pop
jne
push
dec
sub
jge
push
fsts
fistpll
mov
sub
test
mov
fs
add
pop
aaa
imul
push
aad
pop
mov
inc
adc
mov
push
mov
jns
fsts
adc
xor
dec
cmp
or
stc
lcall
mov
mov
ficompl
sti
mov
sbb
mov
lahf
jp
dec
push
mov
mov
cmp
scas
in
mov
inc
test
lods
dec
pop
lock
jns
mov
fwait
sbb
shll
aaa
ficoms
jns
icebp
lret
xchg
push
vcmppd
test
xor
aad
inc
cmp
popf
or
jnp
adc
sbb
leave
push
push
sub
xchg
shll
sbb
in
call
subb
mov
jg
jns
pop
or
movsl
leave
or
pop
mov
inc
in
aaa
in
inc
jnp
loopne
stc
insb
xor
mov
inc
insl
cmpsb
adc
pop
adc
sbb
ret
sahf
cli
enter
jae
pop
sbb
xor
cmpsl
xchg
xor
rcl
xchg
je
in
cmp
jp
add
xchg
or
call
adc
push
lret
mov
in
ss
sahf
and
sbb
jmp
inc
cli
mov
mov
daa
cmpsb
ds
sbbb
cwtl
stc
push
cwtl
jno
sbb
popf
pop
roll
and
xlat
add
and
adc
xor
sbb
filds
pop
cltd
imul
adc
rol
sarl
popa
jns
aaa
xchg
mov
mov
or
outsl
or
fstl
call
jg
sbb
and
mov
cli
stc
sbb
test
outsb
pop
cmc
push
xchg
push
movsb
shr
inc
arpl
lret
pop
or
in
data16
adc
mov
cli
jbe
xchg
pusha
sub
sahf
ljmp
inc
cmp
xor
test
fs
ja
fxch
xchg
fwait
and
fs
push
xorb
aad
ss
push
sub
sub
je
fdivl
clc
jns
imulb
mov
sub
mov
adc
and
add
fisubrs
into
sub
cli
adc
mov
js
gs
out
mov
cmp
mov
sahf
jecxz
pop
or
lods
in
testb
mov
out
shll
and
adc
imul
add
sbb
testl
rcll
xchg
xchg
mov
je
and
xor
inc
insl
and
xchg
cmp
jg
add
stc
clc
mov
xchg
out
jo
xor
insl
xchg
push
push
imul
mov
faddl
fcom
aaa
xor
fnstsw
fwait
test
test
lret
out
dec
hlt
sbb
inc
fsubs
je
jp
cmpb
das
mov
and
lcall
loopne
sub
pop
xchg
pop
insl
js
add
in
mov
push
scas
mov
stc
lahf
ret
sbb
dec
xchg
jbe
add
sub
add
sbbl
inc
xchg
nop
push
add
jo
in
xchg
sbb
jne
addr16
mov
dec
mov
cmp
mov
notb
in
dec
and
jmp
jmp
push
cmp
fwait
shrb
adc
lds
lcall
sbbl
fisttpll
ret
in
addr16
sbb
in
lret
fnsave
rclb
pop
icebp
mov
push
stc
stos
sbb
mov
or
sub
adc
divl
xor
lret
or
and
int3
aaa
out
sub
mov
lock
add
lcall
lea
andl
pop
cmp
add
xlat
push
xor
icebp
or
cmp
adc
cmp
fists
dec
stc
loop
cmc
aam
cwtl
xchg
fidivrs
arpl
repz
sub
dec
and
aas
push
mov
sarl
fsubrp
fdiv
xchg
in
push
push
popf
dec
inc
je
das
mov
inc
lods
ret
jmp
aad
xchg
cs
je
push
add
iret
sbb
repz
sub
test
inc
add
adc
pusha
xchg
cltd
and
in
pop
push
and
pop
movsl
pop
pop
cmp
frstor
out
mov
dec
cltd
push
pop
jmp
cwtl
push
jb
mov
dec
jo
pusha
xchg
dec
inc
xor
jge
dec
and
popa
cmpsl
dec
test
mov
mov
outsb
repz
loop
rcll
adc
call
loop
mov
xor
in
xchg
out
push
out
mov
xchg
ja
lcall
or
cli
jno
push
pop
adc
fwait
xchg
pusha
mov
cltd
or
pop
jno
dec
int
mov
push
add
jo
sub
xchg
cmpsb
std
dec
cli
sbb
xor
jecxz
adc
call
or
adc
ja
adc
sbb
inc
xchg
mov
xchg
cmpsl
popf
movsb
lds
push
jbe
mov
xchg
insb
push
push
jo
call
std
jl
jnp
shl
mov
mov
pop
ja
and
add
ljmp
sbb
push
insl
or
or
inc
pop
inc
mov
xchg
sbb
mov
xor
cmp
pop
and
pop
push
push
bnd
and
mov
add
sub
xchg
push
clc
in
inc
cld
leave
test
pop
sub
pop
sbb
xor
or
pop
data16
mov
out
push
arpl
repnz
dec
jbe
inc
flds
cmc
outsb
xor
xchg
jmp
test
in
mov
in
into
push
add
loop
add
mov
js
lock
pop
xchg
inc
fs
push
or
stc
pop
sub
sbb
jnp
inc
rcrb
js
test
call
stos
cmp
add
pop
add
lret
mov
lock
adc
fldl
dec
or
mov
jo
pop
mov
int3
into
pop
hlt
imul
pop
push
ljmp
inc
nop
ja
jg
fstp
jo
call
int
cmp
xor
pop
mov
mov
mov
mov
jg
stos
addl
jl
cltd
push
jb
inc
sub
xlat
sbb
sbb
jmp
jns
lret
jnp
rcll
sbb
pop
xor
inc
jbe
mov
xor
mov
icebp
stc
lock
mov
pusha
addl
jno
insl
add
pop
cmp
jle
jo
cmc
and
into
cmp
mov
ss
dec
dec
data16
or
push
inc
gs
push
and
and
das
pop
in
addb
test
xchg
sub
jns
dec
pop
mov
jns
adc
aas
cwtl
cmp
std
mov
push
inc
push
sub
imul
dec
or
xor
ljmp
fildll
adc
xorb
mov
out
iret
cmp
into
push
rcr
ficoms
scas
hlt
inc
push
jecxz
imul
push
sbb
jge
int
out
outsb
and
xchg
stos
mov
and
xchg
xorb
pusha
push
rcrl
mov
jae
rolb
daa
aam
repnz
xor
in
sbb
add
addr16
insb
sub
in
stos
inc
cwtl
aad
add
mov
aaa
cmpsb
ljmp
hlt
loopne
xchg
lret
addr16
ret
inc
or
and
jbe
aas
inc
mov
jg
or
inc
xorl
aad
jb
inc
add
mov
inc
push
pop
arpl
enter
jb
and
mov
sub
dec
mov
ja
fiaddl
mov
mov
jmp
sub
add
mov
sbbb
push
divl
pop
xor
lret
daa
inc
and
inc
std
xor
cmp
outsb
xchg
xor
aam
leave
mov
push
dec
insb
popf
or
mov
scas
lea
inc
stos
pushf
xor
movsl
inc
sub
stos
mov
sub
in
pop
sub
fstpt
dec
mov
push
xor
cltd
inc
nop
test
pop
xor
cmc
xchg
mov
adc
dec
xchg
mov
lcall
dec
ret
xchg
jns
xor
out
cmpsl
sti
in
repz
fwait
out
sub
xor
inc
mov
adc
mov
les
pop
loope
xchg
hlt
les
clc
enter
iret
add
lcall
mov
fldl
push
sarl
aad
mov
cmc
mov
fs
rcr
repnz
xor
and
push
mov
cwtl
insb
arpl
loope
sbb
pop
and
loop
cmp
add
sti
sbbb
int
mov
xlat
fsubr
xor
outsb
pop
je
mov
rol
mov
xlat
sub
sbb
ljmp
and
push
lahf
inc
add
stc
adc
push
inc
jo
cmp
data16
sbb
mov
cmpl
cmp
daa
and
data16
loope
fwait
shlb
into
mov
aas
and
nop
js
sbb
sbb
lods
mov
push
mov
insb
ljmp
xor
inc
rolb
mov
jb
cmp
add
jecxz
lock
jl
cs
or
std
add
xchg
imul
dec
xor
int3
mov
and
fisubrl
loope
lds
andl
sbb
lock
xor
lods
cltd
mov
testl
lock
and
pop
fsubs
mov
mov
dec
jbe
leave
cmpsb
adc
add
scas
cmpsb
cmp
dec
pop
dec
sub
fwait
mov
call
loop
push
dec
cmpsb
mov
lret
push
aad
call
xlat
icebp
loop
sbb
or
enter
cwtl
mov
lea
push
mov
iret
dec
shrl
iret
jl
mov
into
mov
rclb
out
mov
and
lahf
jmp
xor
push
out
fwait
loopne
xchg
add
push
adc
scas
lods
inc
xchg
scas
and
pop
mov
adcb
gs
sub
and
add
test
adc
test
or
inc
fildll
pop
out
rcr
pop
jl
arpl
mov
movsb
inc
cmp
adc
sbb
cmp
lcall
cmpsl
sti
xchg
outsb
aam
adcb
mov
mov
popa
push
aam
adc
add
outsb
lcall
cltd
inc
mov
push
pushf
int3
clc
jnp
sub
repnz
mov
mov
insl
pop
push
into
sub
adc
jne
js
ds
out
dec
shll
sbb
outsb
loope
imul
mov
jg
xor
mov
dec
mov
cwtl
ss
aam
mov
xchg
sub
std
ficoms
mov
lret
push
pop
or
sub
sti
jle
cmc
xlat
sbb
xchg
in
std
sub
and
mov
imul
addr16
js
lgs
xor
test
jnp
fs
jge
stos
cmp
jnp
mov
insl
lds
adc
loop
mov
outsb
inc
lock
or
in
mov
xchg
lea
test
dec
dec
fldenv
xor
pop
cs
out
cmc
mov
movsb
nop
test
sahf
mov
sbb
push
sub
insb
popf
icebp
aas
xchg
push
fs
nop
divb
add
in
add
xchg
xorb
mov
bound
subb
lret
imul
outsl
outsl
mov
movsb
aam
or
test
pop
lds
mov
mov
jle
scas
mov
sbb
in
xchg
dec
rclb
jl
scas
mov
add
aad
gs
adc
sti
iret
xchg
stos
inc
mov
aaa
cld
mov
scas
mov
xchg
jo
xchg
in
sbb
repnz
inc
enter
push
ds
add
inc
mov
push
out
shll
fldl
shll
xor
sub
mov
add
dec
mov
push
xlat
and
js
mov
mov
stc
bound
in
add
push
bound
shll
inc
cmc
cli
fucomi
push
pop
stc
rol
lea
in
inc
mov
sbb
push
or
cmp
aas
fidivl
and
ss
inc
pop
xchg
mov
pushf
repnz
mov
sbb
movsb
cmp
mov
lea
mov
mov
xchg
mov
inc
push
xor
cmp
roll
jo
and
lds
pop
es
ds
sub
xlat
in
or
pushf
dec
sti
mov
sbb
out
dec
bound
push
loope
rclb
out
sahf
xchg
stc
inc
xchg
adc
push
xor
or
mov
in
xchg
cli
out
lret
xchg
mov
jg
or
into
jo
dec
or
stos
push
cld
lret
cmp
fidivl
inc
jb
cmp
sbb
mov
inc
out
sbb
jbe
cmpsl
mov
js
cmp
cmp
sub
ss
xor
je
jecxz
jp
stos
push
xor
je
cld
mov
mov
dec
mov
lea
dec
or
sbb
in
es
pusha
sbb
mov
ds
and
cmpsl
cmp
outsb
pop
sahf
cmp
mov
ljmp
mov
sub
fists
jb
dec
cmp
pop
shlb
in
out
bound
int3
pushf
out
in
and
cmpsb
cs
shrl
fstl
in
lock
xchg
pusha
mov
push
mov
test
jne
push
int3
mov
pop
rcll
xchg
inc
jp
xchg
mov
mov
pop
sub
in
push
lret
mov
not
xchg
je
xchg
iret
jecxz
out
aas
fstpl
xor
mov
rorl
sarb
push
mov
rcrl
dec
stc
fistl
xchg
ja
popf
cmpsb
and
hlt
xchg
outsb
xchg
sub
jle
pop
add
cwtl
aam
call
xor
std
mov
testl
int3
mov
ds
les
sub
xchg
push
push
inc
inc
jbe
pop
popf
hlt
sub
inc
inc
out
in
and
cmp
cltd
cld
and
or
add
es
pushf
ds
xchg
mov
cmp
or
cmp
into
das
or
dec
mov
xchg
mov
jmp
scas
xor
out
cs
push
fnstsw
push
xchg
push
xor
pop
addr16
inc
fnstcw
jne
shll
mov
add
inc
int
and
cmp
int
std
mov
mov
and
fldt
in
ljmp
sbb
xchg
dec
dec
imul
push
pop
icebp
add
in
test
pop
mov
ss
sbb
stos
sbb
outsl
xor
fstpl
in
stos
sti
not
sti
jle
popl
inc
jo
or
push
cmp
inc
mov
iret
xor
repz
pushf
sbb
bound
in
and
push
sbb
aad
pushf
jns
or
push
cmpb
je
test
lahf
movsl
pop
or
pop
repz
repz
pop
push
fstpt
add
xchg
aaa
clc
daa
and
stc
imul
sbb
xor
xlat
js
scas
xor
mov
lret
imul
movsb
sub
icebp
daa
and
sub
loop
xchg
mov
push
inc
or
ret
sbb
repnz
cmp
fldt
pop
call
stc
loopne
cmp
jae
add
mov
rorb
fwait
push
xor
lret
mov
rol
jno
pop
imul
aaa
sub
lret
or
stos
lock
and
out
pop
mov
push
sub
cmpsb
mov
mov
mov
adc
scas
std
clc
les
sub
das
nop
dec
xchg
out
out
add
xchg
scas
roll
pop
jne
rclb
les
sub
inc
cmp
ljmp
fmull
bound
jnp
stc
or
movsl
sahf
mov
dec
scas
inc
mov
adc
cwtl
out
in
lidtl
mov
mov
sbb
das
sub
cld
sahf
ss
inc
cmpl
pop
adc
push
in
push
mov
lret
lahf
aad
cs
pop
pop
movsl
pop
aam
ficoml
push
dec
xor
pop
test
mul
and
popf
jl
decb
mov
cs
inc
aad
lods
pop
insb
pushf
lcall
push
fistps
nop
mov
test
mov
sbb
push
add
xor
push
aad
incl
test
inc
lock
mov
xchg
rcrl
push
jp
mov
lock
jns
pop
fsubrl
and
dec
mov
pop
inc
fimull
dec
bound
in
jae
shlb
jecxz
cwtl
sub
int
sbb
pop
push
std
frstor
dec
mov
daa
dec
mov
fwait
dec
ja
mov
dec
fcoml
roll
push
clc
mov
mov
push
add
mov
fisttpll
outsl
sbb
inc
xor
loopne
jmp
adc
aaa
mov
pop
jae
pushf
cmp
mov
aad
out
xchg
cmp
or
mov
mov
pop
aaa
js
inc
outsl
mov
xor
out
push
inc
or
pop
mov
mov
mov
fadds
pop
cwtl
sbb
lea
mov
dec
add
xlat
sub
add
ss
test
jge
and
movsl
rcrl
lock
cs
iret
jbe
push
mov
cmpb
stos
enter
pusha
hlt
add
add
mov
inc
sbb
popf
pop
add
mov
cmpsl
xor
sub
mov
aad
mov
push
xchg
ljmp
out
adc
loope
in
push
mov
int
pop
pop
and
cli
loop
aaa
sbb
cmpsb
adc
pop
pop
mov
cltd
pop
in
fcoml
or
call
lahf
mov
lcall
popf
jb
fwait
or
es
in
jmp
sahf
stc
dec
sub
icebp
mov
xchg
lret
in
sbb
sbb
nop
test
mov
cmpsb
jmp
stc
sbb
sub
loopne
bound
nop
in
bnd
jns
aas
pop
xchg
push
jecxz
movb
pusha
xor
and
je
clc
cld
sbb
jbe
jb
stos
sbb
loope
push
pusha
cli
icebp
jecxz
aaa
movsb
hlt
mov
sbb
jl
xchg
mov
sub
sahf
mov
icebp
notb
fildll
push
push
cmp
inc
fs
jbe
xor
jb
rolb
inc
sub
jmp
pushf
jmp
jno
arpl
pushf
fs
dec
cmpsb
sar
mov
mov
inc
sar
xor
sub
std
sub
mov
mov
lret
pop
mov
jle
adc
rcrb
push
sub
stc
jne
sub
sub
rorl
cmp
enter
out
mov
pop
addr16
mov
sbb
rorb
ret
mov
ret
sub
mov
xor
mov
sub
lea
data16
imull
sbbb
adcb
jo
jae
or
ja
mov
stos
scas
out
stos
cwtl
xchg
or
ss
add
sub
mov
sub
fsub
loopne
xchg
icebp
cmpl
shll
adc
scas
mov
pushw
mov
mov
incb
adc
mov
jne
out
cltd
mov
testb
xor
adc
frstor
imul
sbb
imul
inc
les
dec
dec
int
dec
dec
mov
sbb
pusha
out
je
push
adc
hlt
push
in
jp
add
mov
shr
add
stos
push
test
dec
xorl
jecxz
xchg
xchg
push
loop
xchg
fwait
scas
gs
mov
sub
orb
inc
push
lahf
les
mov
loopne
aaa
lds
inc
sub
jnp
pop
sbb
mov
sbb
xchg
jae
call
mov
mov
lcall
les
or
cmp
and
sub
mov
ljmp
in
mov
and
or
sbb
jg
or
mov
sbb
xlat
pushf
loop
or
pop
out
stos
flds
xor
popa
add
std
lea
aaa
lahf
into
adc
movsl
fistpl
je
ror
lahf
pop
cmp
fptan
shll
insl
inc
mov
mov
push
sub
push
mov
inc
xor
adc
cmp
incl
mov
xorl
enter
pop
jbe
push
sub
mov
ds
adc
leave
rcrl
mov
mov
mov
dec
cli
addb
jle
or
sub
leave
inc
mov
lods
sub
dec
aam
sub
and
jns
push
mov
or
and
test
xchg
lret
sahf
push
or
repnz
jo
inc
nop
mov
dec
xchg
pop
jp
fildll
lods
ja
fisubrl
jnp
das
pop
pushf
loopne
hlt
jb
call
js
pop
inc
aaa
decl
cs
add
sbb
jo
testl
imul
adc
pop
jecxz
leave
stos
lret
fsubl
mov
dec
and
pop
dec
outsb
lds
push
decb
loopne
or
roll
inc
in
cld
sbbb
negb
cld
testl
cmc
xchg
clc
push
jne
push
lock
sub
mov
loopne
jno
or
mov
enter
andb
inc
movb
fstps
xor
iret
and
ljmp
jae
fidivrl
js
pushf
outsb
subl
in
mov
lahf
in
adc
jecxz
mov
stos
xchg
popf
rcrl
into
sub
loope
scas
cs
cwtl
dec
sti
cmp
push
lea
ljmp
out
jo
sub
fsts
jecxz,pn
lretw
jge
dec
adc
dec
fisubs
pop
cmp
js
push
std
and
jl
cmp
and
int
dec
jno
cli
jmp
cs
in
pop
mov
sub
sbb
inc
sbb
mov
ljmp
lods
lods
gs
dec
cli
jg
mov
push
adc
and
xchg
push
cs
insb
pop
adc
arpl
aas
mov
mov
incb
jmp
sub
out
in
xor
int
or
jns
movsb
mov
inc
mov
insb
out
lea
negb
popf
lock
add
add
fstpl
xchg
mov
call
mov
push
push
pusha
and
mov
pop
movb
jnp
scas
arpl
add
pop
adc
js
ljmp
and
data16
fstpt
jno
gs
mov
sbb
repz
mov
fldcw
push
or
jg
push
test
lds
xchg
sbb
mov
add
lods
pusha
inc
jge
fsubr
xchg
fxch
out
dec
and
loope
sub
mov
ficompl
sub
fisubrl
fimuls
or
mov
pop
jne,pt
loope
stos
pusha
xor
fistpll
jbe
mov
push
fcoml
repnz
rcrb
jno
mov
fsub
mov
lds
inc
dec
mov
imul
fstps
addl
mov
outsb
and
adc
or
sbb
xor
or
les
jge
loopne
xchg
adc
scas
and
ret
loope
add
popa
jb
in
xchg
std
jl
adc
cmc
iret
xor
push
xchg
scas
mov
sub
sbb
mov
push
stos
pop
and
scas
std
je
hlt
and
pop
add
cmp
push
out
and
cmc
lods
mov
and
in
xor
testl
mov
dec
jle
pop
ljmp
push
out
movsb
sub
in
jle
or
mov
test
jecxz
stos
ljmp
jb
or
cmp
sub
sbb
or
dec
sbbb
rcr
negl
lock
fsubs
add
fists
repz
xchg
pushf
daa
shlb
imul
mov
push
push
aaa
mov
lock
cs
outsl
and
push
out
mov
pop
dec
stc
mov
push
sub
xchg
xor
test
mov
dec
pop
jno
push
xchg
outsb
maskmovq
xor
jle,pn
test
test
lret
or
sbbl
jnp
imul
push
out
push
cs
jae
add
xchg
jne
sahf
inc
xchg
jnp
mov
stc
xor
adc
pop
mov
fldenv
test
adc
ss
jno
pushf
les
mov
cmpsb
or
inc
add
cli
lds
jecxz
sub
loopne
repnz
mov
jne
or
xchg
in
lock
test
add
fmulp
inc
aas
repnz
and
fldt
test
jae
mov
jbe
ret
mov
add
fildll
out
fisttpl
movsb
add
aam
jae
jne
aaa
jbe
out
pop
scas
daa
inc
out
out
add
cmp
pop
inc
aaa
adc
xor
cld
sbb
in
xor
pushf
and
jl
jo
mov
jne
mov
je
jp
jmp
sub
add
push
push
daa
jae
lret
adc
sub
cmpsl
pop
cwtl
sbb
das
inc
sub
jno
xor
push
shlb
sahf
sarb
xchg
test
rorl
and
addr16
or
cmpsl
or
mov
fisubs
int3
xor
cli
mov
aad
std
sbb
xchg
lods
jecxz
notl
pop
cli
and
pop
mov
cmp
shlb
in
push
and
inc
mov
lds
ds
test
clc
mov
or
sub
jg
rcrb
fimuls
fcomps
js
pop
out
sarl
imul
sbb
addb
cmp
dec
and
stc
fadd
inc
lea
das
test
push
pop
dec
out
mov
or
sub
mov
shlb
sub
inc
lahf
sub
rcrb
iret
mov
cmpl
decl
lret
adc
daa
pop
dec
sbb
mov
or
stos
sub
mov
cmpsb
cltd
roll
sub
or
push
cmp
and
inc
in
pop
sbb
mov
stos
push
shlb
xor
jecxz
sub
jns
mov
scas
or
or
clc
mov
aam
popa
jge
test
nop
mov
syscall
mov
push
add
push
cmp
xor
and
mul
lods
lds
push
xchg
sbb
adc
cmp
push
xchg
int3
and
sahf
fsubs
fisubl
movsl
cmpsl
dec
adc
and
mov
test
int3
xchg
pushf
jle
mov
stc
lret
ss
or
stc
cmp
dec
push
inc
sub
sub
enter
scas
fucom
dec
incb
inc
cmpsl
add
add
rcll
dec
cltd
jle
sbb
mov
jle
cmpsb
adc
insl
push
xor
mov
push
fldcw
out
popa
jo
sbb
cmp
mov
add
or
sbb
aas
or
in
sbb
jl
xor
xor
mov
xor
stc
sbb
mov
and
loope
divb
out
push
insb
lods
inc
std
jo
xor
mov
dec
xchg
rolb
fiaddl
in
mov
cwtl
ficomps
pop
or
iret
stc
outsl
xor
popa
ret
outsb
push
sarl
in
jecxz
xor
lret
std
add
arpl
cmp
and
mov
frstor
adc
loop
jecxz
pop
lahf
inc
adc
xchg
lcall
imul
outsl
out
pop
cmp
pop
add
cli
stc
or
cmp
and
push
popf
mov
movsb
dec
xor
push
in
mov
mov
test
pop
sahf
dec
inc
roll
jl
dec
mov
mov
xchg
push
orb
cmp
js
xchg
mov
inc
test
xchg
jge
lds
aad
mov
mov
xchg
es
inc
imulb
mov
cmp
out
push
sahf
cmpsb
or
stos
pop
dec
adc
dec
aam
lcall
clc
cli
pop
mov
inc
mov
jb
mov
add
and
popf
sbb
add
mov
xchg
mov
jae
mov
ljmp
lods
fisttpll
stc
add
pop
rorl
or
jnp
ss
cli
std
mov
mov
mov
loop
and
sub
mov
or
out
pop
addr16
sarl
or
cld
and
inc
int3
xor
lret
pop
hlt
daa
cmpsl
xchg
mov
inc
dec
pop
out
sbb
inc
aam
mov
jg
adc
in
push
xchg
test
adc
and
xchg
in
sbb
xchg
outsl
aam
sub
adc
jne
cmpsl
les
push
dec
jecxz
shll
ljmp
ret
rcrl
fstsw
int
js
xor
add
stos
fs
dec
mov
data16
adc
push
jne
adc
dec
add
dec
jb
pushf
aaa
push
movsl
mov
push
pop
xchg
mov
dec
imul
fdivs
xchg
test
bound
ficoms
inc
fidivl
mov
or
int
int
popf
clc
inc
inc
pop
aas
fcmovnbe
inc
rorl
pop
lcall
sub
or
add
xor
pop
jne
mov
cmp
or
out
pop
mov
cmp
jne
loop
je
inc
mov
gs
fisubrs
jmp
xchg
sbb
jne
outsb
jne
and
dec
sbbb
and
mov
repz
adc
add
sub
fiaddl
lea
adc
xorb
mov
or
movsb
mov
fsubrs
and
addr16
aas
pop
xchg
dec
gs
xchg
jne
mov
push
add
push
in
cmpsb
push
mov
pop
add
jl
je
mov
and
xlat
xor
daa
sbb
stos
les
add
dec
mov
movsl
cmp
test
cmpl
adc
inc
ljmp
in
push
fisubrs
and
sub
inc
dec
iret
and
in
fdiv
adc
mov
dec
pusha
mov
inc
imul
dec
dec
arpl
lret
xor
mov
push
aaa
sbb
pop
inc
int3
scas
lea
mov
rcll
mov
add
imul
pop
pop
adc
jb
loopne
lods
dec
sti
nop
es
inc
adc
enter
xchg
jl
stc
das
outsl
push
enter
stc
mov
lret
dec
call
das
shlb
pushf
aaa
andb
std
bound
testl
jle
pop
sub
inc
cmc
pusha
mov
pop
add
stos
aaa
inc
andb
push
xchg
mov
mov
mov
pop
sub
or
stc
xor
dec
rcll
mov
mov
mov
decb
mov
xor
call
sbb
fbld
xchg
mov
cmp
das
and
popf
push
inc
xchg
pop
nop
in
add
push
imulb
jbe
dec
inc
push
aas
enter
addb
inc
aaa
insb
or
stos
outsb
enter
scas
mov
sbb
scas
lea
mov
mov
mov
in
imul
dec
and
cmp
adc
jne
or
push
data16
push
pop
push
ret
out
pop
xchg
loop
fs
imul
mov
add
enter
add
fidivs
je
sarl
imul
xchg
sub
mov
adc
mov
cld
test
ficompl
mov
sub
outsl
shlb
xchg
sbb
adc
mov
out
xchg
xlat
jp
ret
or
test
jecxz
aam
or
and
pop
jle
divb
stc
in
and
jbe
mov
lea
pop
or
repz
sbb
adc
mov
mov
je
ror
pop
xchg
xor
arpl
pop
add
js
loope
push
and
out
in
aam
jmp
cli
data16
push
mov
push
movsb
cmc
dec
ljmp
or
mov
pusha
loop
mov
sbb
jl
sbb
pop
mov
stc
arpl
sub
sbb
aaa
idivb
test
out
ljmp
pop
out
jle
decb
insb
mov
sbb
xor
mov
stos
ja
scas
cmp
out
test
push
loop
movsl
leave
popf
cmp
dec
xchg
movsl
sahf
jns
mov
or
push
je
jbe
mov
aaa
push
testl
shl
cmp
xchg
test
push
insb
lock
test
lea
es
and
and
pushf
pop
or
dec
sahf
xor
pop
mov
lods
imul
sbb
movsb
test
pop
xor
popa
mov
cli
aam
dec
mov
dec
jae
stos
xchg
jmp
inc
stc
mov
rolb
and
jo
insb
or
pop
fistpl
cmp
int
aas
mov
cs
mov
pop
jle
int
jg
jmp
pop
adc
lcall
xchg
mov
push
cmp
push
int
mov
pop
testb
cli
cmp
lods
clc
rclb
xchg
pop
cmp
cmp
cmp
cltd
insb
loopne
mov
adc
mov
pushf
cld
sbb
ss
test
ret
movsb
cmp
or
in
mov
mov
loopne
inc
push
imul
movl
pop
or
add
cmp
sbb
jno
hlt
mov
popf
push
aad
sti
xchg
repz
or
loop
sub
dec
stc
pop
jl
popf
cmpsb
outsb
daa
call
lcall
aaa
xchg
sub
pop
ds
push
mov
or
lock
mov
aad
mov
mov
sbb
outsl
dec
iret
lea
add
fisubl
jno
push
iret
jns
pop
popa
cltd
adc
jecxz
inc
movsl
adc
push
in
in
jg
pop
negl
and
dec
xor
push
imul
jmp
mov
xor
mov
push
std
dec
stc
lods
out
mov
fildll
adc
fstps
xchg
cmpl
mov
insl
das
idivl
cmpsb
imul
mov
or
or
cwtl
jg
dec
loop
outsb
xor
in
mov
test
push
push
imull
lcall
mov
mov
js
cmc
xor
xor
fwait
sbb
push
xor
adc
std
xchg
sub
mov
lret
shr
fldl
push
bnd
and
fwait
clc
test
mov
aad
adc
xchg
data16
mov
push
mov
testb
mov
ds
mov
push
roll
mov
xor
dec
inc
addl
ljmp
dec
xchg
shll
add
icebp
pushf
stos
test
sub
jno
xor
rorb
mov
dec
mov
sub
mov
xchg
outsl
mov
scas
cmpb
sbb
ja
test
fs
xor
push
pop
fwait
push
aam
test
inc
sbb
into
mov
out
jae
outsl
jne
sbb
outsl
shr
mov
add
icebp
dec
int
addr16
mov
stc
cmc
sbb
add
repz
pop
js
cmpsl
cmpsl
jbe
lahf
sbb
dec
sub
add
lods
es
and
add
mov
add
add
cmp
inc
in
jmp
inc
lcall
ja
lcall
icebp
add
xbegin
cmp
insl
rcll
add
test
xchg
out
rcrl
dec
push
push
xchg
xorl
insl
inc
push
add
mov
icebp
jle
faddl
mov
fs
js
xchg
and
push
lret
adc
popf
lods
dec
and
mov
out
sub
sub
add
mov
fcoml
into
hlt
outsb
ss
fwait
jns
pop
push
inc
or
or
call
dec
pushf
sbb
jge
adc
sahf
pusha
hlt
mov
sarl
dec
nop
js
push
rcrb
subl
pushl
bound
jb
loope
inc
jp
sbb
lret
add
and
jl
jg
pop
cltd
repz
xchg
jne
lods
imul
cltd
sub
mov
mov
test
stos
ja
popa
orl
popf
cmp
iret
or
sahf
or
and
add
xchg
bnd
jnp
mov
xchg
adc
das
mov
mov
test
pop
or
add
push
mov
adc
mov
in
sub
xor
daa
int
pop
shlb
outsl
push
and
cmp
inc
or
push
adc
int3
push
lods
pop
xchg
sbb
and
cli
cmpsb
pop
out
clc
push
subl
jg
xchg
adc
and
xchg
out
in
test
dec
daa
int3
int
cwtl
mov
iret
insl
sub
pop
es
shll
jae
mov
dec
cmp
fcomp
pop
push
mov
das
inc
bound
data16
sub
roll
inc
clc
xchg
pushf
mov
movsb
daa
in
push
cmp
pushf
adc
fs
add
adc
and
dec
gs
jmp
mov
sub
rclb
out
pushf
mov
sub
mov
cmp
xorb
pop
scas
in
rorl
jl
cmp
jmp
iret
outsl
fstpt
sub
push
mov
cmovs
dec
je
repz
adc
mull
mov
jne
lods
movsb
push
cmp
filds
mov
mov
mov
cmp
sub
jbe
push
push
bound
les
jne
xchg
xor
jo
add
out
pop
jle
push
or
test
pusha
mov
dec
push
sub
xchg
pop
mov
push
stos
dec
jmp
mov
neg
das
jne
jnp
nop
mov
cmp
lds
or
push
sbb
xchg
test
xchg
xor
pop
xor
mov
icebp
stos
dec
add
popa
push
test
sti
aas
pop
pop
out
mov
jl
jne
push
fsubrl
adcb
dec
xchg
gs
push
movsb
xchg
cld
stc
frstor
dec
test
ja
dec
jnp
jg
mov
pop
test
mov
je
push
push
xchg
cmp
sar
jle
dec
pop
xor
outsl
loopne
ja
xorl
and
xchg
push
test
and
cli
mov
cmp
xor
jnp
jae
inc
int
or
cld
into
push
inc
jmp
popf
test
adc
fdivl
aam
ret
fstp
fstpt
add
jno
pop
popa
repz
push
shrl
movsb
xchg
cmp
out
mov
and
mov
adc
hlt
ss
mov
cmp
ja
and
mov
data16
and
jb
jbe
movsl
idivb
fsubrs
xchg
lods
movsl
lret
mov
xor
jo
jmp
xchg
sbb
or
inc
mov
ljmp
add
sub
lcall
xchg
cs
adc
mov
sbb
xchg
test
pop
mov
add
mov
in
les
mulb
mov
xor
pop
push
stos
jae
call
pop
adc
aam
gs
or
test
mov
mov
xchg
xchg
bound
xor
xchg
push
enter
je
sbb
adc
inc
mov
cmp
push
push
push
inc
int3
subb
scas
in
dec
addb
push
sub
test
push
xchg
ljmp
ficoml
adc
and
xchg
jmp
stos
add
sahf
push
xchg
mov
sbb
rolb
jne
loopne
arpl
mov
mov
sub
and
test
push
arpl
pop
setno
and
add
jae
cmp
add
ds
xchg
xchg
cmpsb
sbb
ljmp
ljmp
js
pop
lock
cmc
mov
mov
mov
and
push
add
test
mov
pop
gs
mov
pop
repnz
in
or
mov
push
sub
add
adc
dec
faddl
adc
test
loope
fcomps
sbb
xchg
cmpsl
cmp
mov
push
xchg
in
jns
or
fs
ret
das
lds
pop
sbb
das
out
out
mov
xor
dec
mov
lods
popa
les
dec
mov
lds
sub
out
lods
and
lods
and
xor
pop
mov
mov
mov
or
add
inc
inc
fsubs
adc
sbb
xchg
lahf
push
test
jmp
enter
ss
inc
pop
popf
das
jmp
mov
adc
mov
popa
and
int3
dec
pop
sub
cli
movsb
lods
mov
cmp
add
or
popf
ja
out
pop
cmp
sahf
outsl
movsb
je
popa
mov
cmp
sub
lods
lcall
cmpsb
adc
lret
cmp
xchg
mov
adc
xchg
mov
jg
les
adc
stc
jl
test
xchg
jl
pusha
iret
add
scas
xor
jl
xor
mov
icebp
cmp
insb
jg
cld
fstpt
push
fsubp
xor
loope
cmpxchg
dec
lods
fldcw
push
sbb
mov
sub
inc
mov
adc
jg
andl
mov
mov
aaa
mov
lods
popa
inc
or
nop
or
fadds
mov
lret
std
pop
jns
or
xchg
add
clc
and
add
sub
mov
jmp
cmpsl
xchg
pushf
or
hlt
push
adc
sub
mov
pop
cmp
push
or
xor
xorl
mov
cmp
mov
jmp
xor
ja
jnp
je
push
or
enter
cmpsl
add
lock
dec
or
std
dec
mov
xor
sarl
add
jbe
inc
nop
cmp
lods
mov
jns
sarb
sub
sbb
jecxz
mov
mov
mov
movsb
adc
inc
mov
xorl
lods
push
fsts
ja
push
cmp
jo
out
fsub
out
adc
cs
in
mov
xchg
and
mov
dec
xchg
fimull
xor
aam
push
pop
jno
push
pop
mov
lds
gs
or
lods
mov
out
insb
insb
push
sbb
push
xor
lods
lret
pop
sahf
arpl
stos
push
jle
je
push
cmpsl
subl
add
xor
aaa
jne
push
mov
xchg
test
cmp
mov
dec
jmp
js
lahf
fldpi
xchg
inc
xchg
or
movsl
rcll
mov
jae,pt
and
rclb
pushf
cmp
xlat
mov
lcall
mov
push
andb
adc
out
roll
and
jns
int3
pop
inc
sarl
je
insl
pop
int3
popa
mov
call
loopne
mov
cmc
fists
fldenv
sub
out
scas
arpl
mulb
mov
mov
dec
imul
sbb
sub
stos
push
mov
stos
ror
mov
adc
jne
lds
sub
push
scas
iret
js
adc
pop
push
sub
sbb
jl
lods
jmp
lods
push
cmp
sub
add
pop
push
jecxz
test
jmp
hlt
add
mov
mov
pop
jns
popa
scas
inc
xlat
inc
and
jle
fcoml
neg
mov
push
cli
xor
hlt
sarl
fldt
jg
cli
mov
jge
dec
jg
lahf
or
jno
icebp
rcrb
dec
test
mov
mov
mov
icebp
daa
lea
sub
test
test
nop
ss
mul
nop
imul
shrl
loopne
fimull
dec
inc
stos
cmpsb
add
inc
bound
mov
cwtl
mov
inc
xor
lods
push
neg
scas
and
xlat
mov
popf
cwtl
out
xchg
jle
adc
addr16
lods
popf
push
hlt
clc
aam
dec
sbb
pop
mov
or
test
xor
push
xor
jl
loope
jl
cli
out
sti
mov
add
mov
aaa
je
mov
mov
enter
mov
xor
dec
cmp
popf
pop
fwait
maxps
xor
int
scas
xchg
sub
test
jge
adc
call
jl
sbb
mov
sbb
and
jge
mov
repnz
mov
shl
push
outsb
movsb
jmp
xchg
fmull
scas
fiaddl
xchg
fwait
mov
add
sbbl
xchg
xor
mov
fwait
mov
xor
bound
inc
or
psraw
rcrl
pusha
xlat
sbb
lret
adc
fistl
mov
lods
fsub
mov
hlt
ss
dec
add
mov
xor
insl
pop
jb
ret
jmp
fwait
mov
mov
fnstcw
adc
xor
loopne
dec
fadd
xor
movsb
rcl
sub
pop
xor
mov
pop
andb
push
or
aaa
ja
mov
fcmove
fimull
mov
mov
std
push
sbb
iret
aaa
xchg
fsubs
mov
ljmp
mov
xor
xorl
sti
inc
jne
push
or
lcall
xor
inc
sbb
pop
arpl
mov
rcrl
outsl
or
jp
rcll
pop
xchg
inc
repz
jb
sub
pandn
in
test
mov
ficomps
fistpll
push
and
aas
fdivs
hlt
jl
pop
and
arpl
adc
mov
push
lds
pop
inc
xchg
adc
cmc
cmc
sbbb
fcmovnbe
outsl
xchg
mov
inc
fnstenv
out
into
mov
add
adc
outsl
jb
and
ret
cmp
inc
insb
lock
scas
cmp
rcpps
xor
jp
add
hlt
pop
inc
or
popa
test
in
mov
xchg
push
cs
int3
jno
dec
iret
add
add
mov
faddl
call
mov
or
iret
mov
adc
xchg
sbb
lcall
lret
movsl
call
aam
fimull
out
push
fstl
dec
movsl
dec
aam
std
xchg
mov
inc
mov
push
mov
cmp
mov
inc
mov
cvtpi2ps
fsubs
stos
js
push
adc
les
cmpsb
or
stos
cmp
xchg
repz
imul
push
add
enter
aaa
fildll
inc
sbb
sahf
lock
push
push
sbb
push
xchg
xchg
aam
pop
sar
roll
test
imul
cld
mov
mov
shrb
sahf
cld
movntq
std
push
sahf
stos
les
jno
hlt
scas
pushf
arpl
xchg
mov
mov
dec
ja
imul
stc
rorb
xor
inc
pop
push
popf
mov
push
pop
push
outsb
push
into
jmp
mov
fisubl
pop
dec
sub
push
popa
jae
lret
mov
xor
pushw
into
in
bound
icebp
leave
fmull
mov
outsl
movsb
add
imul
pop
push
xor
das
mov
fldcw
or
stc
inc
rcll
mull
mov
or
or
loope
mov
or
dec
inc
daa
addb
push
xchg
stos
popf
cmpl
jecxz
fwait
xor
test
and
pop
adc
imul
repz
add
inc
dec
sub
mov
and
pop
aad
idivb
cmp
xchg
or
sub
push
vpsrld
push
add
mov
mov
leave
and
pop
jb
out
loope
and
pusha
add
cmp
fistpll
icebp
and
push
sbb
pop
aaa
fcompl
pop
mov
jmp
mov
xchg
lods
insl
mov
or
call
js
mov
in
jne
pushl
fidivs
outsl
stos
lods
pop
inc
pop
jo,pn
loopne
je
pop
scas
outsb
data16
sub
xchg
out
push
sbb
or
inc
dec
cmp
pop
fimuls
push
leave
push
xchg
aad
pop
adc
push
ds
mov
and
lock
jnp
add
fs
stos
add
test
pop
mov
jo
add
cwtl
adc
xor
hlt
pop
pop
andb
dec
loopne
cmp
push
gs
pop
dec
dec
mov
cmp
sti
fdivrs
xor
lea
fiadds
sbb
sbb
imul
pop
mov
sbb
fisttpll
int3
mov
or
jno
adc
and
add
cld
jns
inc
mov
out
and
fcmovnb
jbe
int3
inc
sbb
addl
inc
dec
pop
sub
dec
fprem1
xor
fwait
push
mov
shl
xchg
shlw
in
pop
xor
std
mull
or
repnz
sbb
outsl
ss
or
push
mov
inc
mov
ret
mov
push
fdivrs
cltd
popf
xor
fldl
loop
es
cmc
sbb
mull
jl
iret
daa
cmpb
add
test
sti
popf
pop
sbb
xchg
lods
dec
arpl
pop
pop
push
iret
xor
jmp
jnp
imul
outsb
inc
sarl
je
or
add
in
into
pusha
out
addb
adcb
lret
lahf
arpl
sbb
rolb
sbbl
mov
out
cmp
sub
ret
mov
and
ds
sub
jae
lock
insl
sbb
andb
sub
imul
push
bound
jno
pop
push
mov
shl
arpl
sbb
out
and
pop
int
push
addps
mov
push
pusha
xchg
pop
inc
in
mov
sahf
fnstcw
jne
lods
cwtl
adc
out
out
inc
test
loop
xchg
cld
xlat
or
rcr
adc
mov
cmp
incl
push
sub
rcrb
xlat
jge
outsl
jae
cmp
inc
inc
in
pop
mov
insb
xor
sbb
cmp
nop
cli
inc
ja
pushl
mov
test
lds
call
xchg
inc
or
les
inc
jnp
pop
sub
xor
pop
fs
fimuls
stos
pop
push
pop
out
dec
push
loopne
sarl
mov
xor
ret
mov
pusha
mov
dec
ljmp
inc
mov
inc
lods
dec
lds
imul
lea
cmp
inc
pop
arpl
cmp
scas
ljmp
imul
inc
jl
mov
scas
pmulhw
cmp
xor
inc
stos
lret
mov
pop
mov
iret
fwait
push
mov
divl
add
jae
mulb
mov
mov
jp
or
popa
lret
cmp
xchg
xchg
push
xor
mov
cmp
adc
jp
sti
arpl
int
dec
inc
cmp
dec
inc
pop
ss
gs
adc
je
fsts
push
sub
sub
inc
push
adc
roll
jg
out
jl
mov
lret
cmp
add
mov
sbb
add
fnstcw
adcb
hlt
xchg
cmpsb
add
hlt
ja
jae
xor
fldcw
xchg
push
mov
inc
and
mov
and
in
jge
jo
adc
insl
sarl
insl
push
ror
fimull
icebp
xchg
mov
pop
lock
sti
push
push
les
mov
mov
push
std
hlt
jbe
or
in
sbb
test
hlt
inc
aam
cmp
or
mov
jecxz
sub
lahf
or
push
idivl
push
hlt
fsts
push
test
mov
lea
dec
clc
mov
dec
lcall
jmp
cmpsb
das
shlb
jbe
cmp
and
add
jge
cli
fcom
or
movsl
xchg
mov
mov
mov
jbe
pop
pop
xor
jbe
loopne
mov
pop
cmp
dec
fnsave
ja
xlat
push
daa
jmp
sbb
aaa
dec
inc
or
mov
lret
push
rorl
lcall
add
adc
mov
cmpsl
enter
orl
xor
scas
pop
jb
stos
stos
xchg
dec
hlt
pop
adc
xchg
cmpsl
scas
in
lock
push
sbb
out
call
js
scas
jnp
mov
aaa
repz
sbb
cmp
rclb
out
xor
mov
push
pop
pop
inc
arpl
mov
mov
or
push
mov
out
sbb
lcall
sti
pmulhuw
cmpb
fcoms
aam
decl
inc
sub
enter
rorb
fisttpl
xor
pop
das
inc
lds
pop
loopne
mov
repz
fwait
ds
clc
mov
outsl
mov
mov
inc
sub
cmc
cmp
sub
xchg
mov
mov
sbb
and
fs
dec
enter
fsubrp
frstor
push
jg
inc
lahf
lock
mov
fstps
rol
test
test
lods
dec
cli
inc
jecxz
sahf
cmc
das
mov
test
adc
adc
push
sbb
cld
into
sub
dec
mov
fisubrs
mov
cmp
sahf
scas
jmp
push
pushf
es
lcall
jl
mov
push
std
mov
in
sub
sbb
push
mov
aad
jo
cmp
push
mov
push
xlat
inc
and
jno
stos
cmp
dec
xlat
pop
lahf
sbb
sbb
out
jno
adc
in
cmp
cmpl
out
gs
inc
and
or
sub
daa
arpl
xor
cs
adc
jge
push
jp
add
lcall
sbb
ljmp
sub
mov
jecxz
cs
fisttps
jmp
jae
pop
aaa
add
data16
fstps
popa
xlat
shrb
xchg
rclb
inc
stc
aam
mov
inc
in
lods
dec
xchg
adc
sub
pop
xor
and
add
cmp
fsts
mov
pop
in
mov
repnz
in
loop
pop
xchg
xchg
loop
or
mov
add
int
in
xchg
aam
mov
daa
xor
sbb
testb
xchg
outsb
divb
cmpsb
cli
mov
jb
mov
dec
xchg
inc
cmp
shrl
lods
lds
sub
lods
outsl
pop
arpl
or
jae
roll
jae
jbe
sub
jnp
push
push
mov
jo
jp
cmp
sub
jbe
inc
in
lock
call
nop
mov
clc
outsl
mov
repz
popa
test
cld
jle
dec
add
bound
subl
mov
adc
inc
jp
inc
icebp
jo
sub
mov
sub
outsb
stc
lea
jne
jecxz
stc
pop
sarl
adc
xchg
push
mov
popa
clc
lock
jl
jne
adc
gs
dec
sub
mov
dec
ds
clc
jnp
mov
inc
fimull
cwtl
pusha
repz
lods
cs
inc
inc
push
cmp
dec
adc
jnp
adc
sub
pop
push
pop
mov
fcompl
js
mov
orl
xchg
jb
fwait
icebp
daa
adc
add
sub
dec
lret
adc
sbbb
daa
cmpsb
mov
push
enter
hlt
fldcw
sub
paddusb
rcrb
sbb
into
sarb
sub
shl
lret
jl
call
xchg
adc
inc
adc
fs
mov
mov
or
dec
or
lods
xchg
pop
xor
cmp
jle
ja
shl
jmp
scas
jb
ret
pop
push
icebp
xchg
xchg
data16
sub
jb
xchg
mov
ret
mov
adcb
rcr
popa
inc
ljmp
push
dec
fwait
inc
std
and
ret
negb
or
jne
mov
testb
gs
jbe
pop
mov
scas
mov
bound
cltd
cmpb
insb
cmpsb
sub
aas
mov
jno
xlat
les
xor
ds
mov
xor
lahf
pusha
aas
mov
xchg
mov
cmp
movsl
jne
cwtl
dec
xor
repnz
push
clc
rclb
adc
popf
sbb
xchg
fistps
fisttpl
dec
pop
sbbb
inc
test
fisttpll
adc
cltd
adc
insl
int
xchg
add
mov
mov
testb
cld
dec
dec
dec
mov
hlt
add
sub
aas
icebp
pusha
cmpsl
adc
add
in
inc
adc
das
test
sahf
out
arpl
jae
jmp
and
orb
xchg
inc
test
mull
push
ljmp
aas
sub
adc
sahf
adc
enter
mov
xchg
or
inc
sbb
ljmp
xorb
enter
xchg
iret
jmp
xchg
and
mov
into
or
fsubl
gs
add
push
data16
aam
xchg
inc
pop
inc
lea
mov
push
leave
mov
add
cli
jns
pop
sbb
add
and
inc
add
mov
aam
movsb
fcom
icebp
xchg
call
cwtl
mov
jmp
xchg
add
xchg
push
clc
mov
popf
nop
mov
or
loope
aam
test
xchg
mov
dec
dec
js
add
jp
psllq
cmp
das
call
adc
sub
lock
repz
sti
stc
iret
jno
testb
xchg
add
insb
loope
sti
push
cmp
xorb
push
das
stos
add
pop
xor
iret
push
pop
movsl
stos
inc
or
push
jmp
cmp
outsl
or
idivb
in
adc
and
inc
js
fsubs
in
mov
mov
cmp
xor
in
or
fwait
lcall
fwait
mov
adc
pop
je
xchg
pop
pop
and
mov
jb
test
hlt
fldcw
push
mov
inc
cs
and
sbbl
mov
and
aad
mov
jne
ret
fldenv
mov
xor
mov
divb
sub
mov
popf
mov
aam
imul
jno
add
addb
xchg
xchg
test
jp
mov
pushf
outsl
and
sbb
pop
loope
mov
in
or
jae
add
push
in
cs
add
push
lahf
out
decb
mov
xchg
inc
cli
xor
cmp
cmovp
xlat
stc
pop
insl
cmpsb
pop
mov
loope
arpl
add
call
mov
out
repz
sub
or
lds
mov
mov
stos
cmp
lret
mov
sti
sahf
sahf
scas
sarl
pop
push
addr16
push
ret
test
icebp
iret
pop
nop
pop
loop
and
xor
lock
out
fstpt
mov
mov
push
int3
aas
repz
ret
mov
js
mov
daa
lahf
enter
stos
das
jnp
ss
lcall
xchg
mov
inc
or
pop
cmpsl
sub
mov
or
loope
ret
out
clc
mov
dec
xchg
or
jne
mov
mov
lods
push
push
adc
mov
inc
test
andl
icebp
and
std
inc
insl
fcoms
push
hlt
pop
ss
repnz
inc
pusha
xchg
cmp
sbb
mov
mov
std
push
cmp
adc
mov
xchg
fptan
imul
pop
gs
outsb
icebp
cmp
xor
nop
mov
sub
adc
sub
hlt
es
inc
stc
push
jmp
inc
lea
es
cmc
ja
or
cmp
shrb
or
mov
jno
add
cmpsb
cwtl
ljmp
push
ret
adc
popf
xchg
aas
popa
sub
push
dec
ljmp
adc
jmp
inc
adc
xor
xor
xor
lahf
jg
mov
cld
mov
js
jae
add
rcrb
inc
push
xor
arpl
jb
popf
lcall
sub
out
sbb
sti
sub
in
and
push
mull
sub
and
or
pop
and
iret
and
lret
lods
stos
ljmp
cmp
shll
adc
dec
je
sub
call
lret
push
jo
insl
adc
jp
iret
int3
push
lea
jmp
incb
out
push
mov
cmp
or
pop
movsb
loope
je
mov
sbb
or
cld
lock
mov
jns
loopne
pop
mov
insb
fistl
pushf
js
jo
jae
mov
dec
cs
rolb
mov
lods
dec
cmp
mov
jp
filds
subl
insb
in
les
in
jl
fwait
adc
pop
js
ficomps
ja
push
lret
inc
add
rcrb
mov
or
inc
test
jbe
sub
push
jle
jle
loopne
pop
jns
add
sub
add
inc
dec
ja
aas
dec
ret
ret
adc
push
aam
enter
andb
cld
bound
cmpl
sti
xor
arpl
mov
push
xchg
pop
push
cmp
xor
daa
xchg
push
dec
jl
add
push
mov
xorl
lods
cwtl
xchg
popf
iret
std
pop
xor
dec
icebp
lods
les
mov
daa
mov
js
pmaxsw
push
ss
add
sub
lahf
mov
lods
jno
or
and
xchg
loop
pop
mov
mov
add
pop
mov
mov
movsb
xlat
cmp
loope
jp
test
xchg
cld
mov
inc
test
mov
mov
scas
add
or
ror
xchg
sub
stc
imul
mov
and
cmc
pop
inc
insl
xchg
popf
icebp
cmp
lret
test
push
scas
cmc
push
fwait
inc
inc
out
dec
sub
cld
and
lret
sbb
push
pop
inc
and
das
sbb
clc
and
dec
mov
out
into
and
mov
arpl
inc
sub
or
jle
cld
jle
add
inc
adc
mov
cmp
cmp
dec
aam
add
out
repnz
jle
popa
push
lret
xor
sar
je
loope
aad
ret
outsb
call
ja
int
mov
jae
mov
leave
enter
scas
sti
ficomps
adcl
leave
pusha
outsl
cmp
test
sti
or
mov
sub
mov
loopne
cmp
mov
nop
dec
adc
cwtl
dec
push
xor
imul
xor
pop
daa
dec
sbb
add
add
xor
clc
mov
mov
lods
cmp
addr16
sbb
xor
or
movsb
fnstenv
jge
arpl
sbb
call
test
rcrl
cmpsl
loopne
mov
sbb
mov
lret
insl
jecxz
lcall
repnz
aas
inc
call
lock
leave
fistps
add
lret
cmp
in
jbe
outsb
sbb
jg
call
xchg
dec
ds
out
ds
mov
inc
jmp
push
mov
test
add
in
stos
call
cs
bound
inc
stc
addr16
inc
lret
sbb
rcl
add
mov
icebp
aad
inc
lods
out
and
jns
test
decl
mov
addl
loopne
enter
insb
inc
cmp
out
insl
int
ljmp
out
jns
or
and
sbb
dec
insb
imul
mov
loopne
fsubrl
test
pop
cld
sbb
popa
push
dec
rorb
dec
fistpll
outsl
push
sarl
out
enter
in
aaa
rol
outsl
pop
cwtl
test
pop
adc
and
dec
mov
daa
xor
xlat
and
xor
mov
pop
lret
insb
shl
and
test
sub
jns
gs
jecxz
sub
out
je
add
sbb
sub
and
insb
cwtl
mov
and
fsubl
sub
shrl
push
xchg
pop
dec
jbe
mov
loope
mov
lret
lahf
jo
fucomp
jg
sub
inc
mov
fistl
mov
add
jl
rcrl
test
push
sbb
pop
hlt
and
or
xor
fisubrs
test
or
adc
es
lods
mov
in
insb
into
pop
loopne
add
fadds
xor
rcr
jns
aam
push
xor
dec
push
cmpl
sub
sbb
rorl
inc
sub
add
ss
fs
sub
sahf
xor
dec
repnz
adcl
xchg
test
pop
mov
je
enter
movl
dec
mov
sbb
inc
ret
ds
aam
gs
sub
in
sub
pop
inc
push
dec
ljmp
int
xchg
ljmp
dec
sbbl
das
fdivr
jl
leave
ret
jg
xor
add
xchg
fs
icebp
lds
jg
dec
insl
pop
sub
add
push
jecxz
mov
repnz
mov
idivb
inc
int
cmp
data16
xor
xchg
popa
push
xchg
enter
cli
daa
cld
shll
dec
pop
push
es
pushf
inc
test
pop
add
insb
lock
hlt
sbb
inc
daa
test
sbb
sbbl
xor
lds
mov
dec
push
inc
mov
int
adc
xor
repz
mov
mov
shlb
test
pusha
fstl
pop
add
sahf
arpl
cmp
xchg
je
mov
push
mov
aaa
xchg
and
repz
pop
cmc
mov
push
mov
dec
mov
mov
push
pushf
out
sub
add
lods
cli
mov
testl
jecxz
pop
lods
mov
pop
xchg
jnp
xchg
es
cmp
pusha
in
xor
jb
push
clc
jg
bound
pop
or
clc
std
cmpsb
push
xor
xor
xchg
jle
cmp
or
jno
dec
minps
inc
mov
repnz
mov
push
cmp
aad
cli
es
xchg
cmpsl
or
mov
subb
scas
popa
jg
cmp
push
fstl
sub
push
lahf
push
pop
test
push
or
dec
gs
sbb
mov
dec
xchg
stos
scas
arpl
xor
inc
cld
aam
xchg
fildll
pop
mov
out
pop
cmp
mov
movsl
jae
data16
mov
outsb
mov
stos
sub
gs
or
jns
es
aas
inc
mov
jl
jns
inc
fwait
inc
pop
or
push
sub
jge,pn
rcrl
dec
pusha
adc
and
xchg
cmpl
or
insl
fisttps
jae
inc
or
mov
das
ret
jmp
into
mov
mov
sub
scas
in
sbb
cwtl
outsl
das
dec
and
dec
pop
dec
xchg
xor
add
es
mov
mov
int
out
xchg
add
inc
aas
xchg
sahf
or
add
inc
mov
popa
lcall
or
shl
arpl
sbb
xor
les
pushf
cmc
test
test
aam
xchg
jns
ja
lock
sbb
icebp
test
shl
mov
data16
mov
cmpsb
movsb
push
mov
inc
adc
mov
fstps
lahf
and
and
lods
inc
pushf
clc
sahf
clc
nop
jle
adc
dec
ljmp
sub
or
mov
test
movsb
aas
xchg
push
inc
and
xchg
leave
in
jo
jnp
sar
movsl
into
push
jnp
mov
movsb
cmp
ficompl
sub
lock
cmp
mov
push
loop
pop
insl
mov
dec
lock
repz
js
lock
mov
cld
xchg
call
testl
int3
in
loop
adc
ljmp
sti
push
mov
jnp
pop
lahf
sbb
jp
popa
ss
pop
add
adc
rcll
inc
add
les
test
fnstcw
ret
stos
fsubs
dec
mov
stos
xor
xor
xor
call
orb
xorb
dec
pushf
pop
stc
or
je
mov
outsb
call
pop
jp
mov
ja
jns
jnp
popa
dec
sbb
and
mov
das
mov
jecxz
test
fwait
xor
out
shlb
adc
adc
adc
scas
adc
push
fcomip
xchg
pop
call
cmp
xchg
cmp
popf
movsb
pushf
or
movsl
push
cmp
add
xlat
sub
cli
rorl
out
mov
out
pop
rolb
cld
push
jge
mov
add
mov
pop
xor
pop
test
mov
mov
ds
enter
xor
rclb
adc
out
mov
push
inc
dec
mov
mov
cmp
xchg
cmp
cmp
xchg
lcall
inc
pop
add
jno
and
push
loopne
test
push
fs
or
and
jmp
jecxz
sbb
sub
outsl
stos
insl
sbb
pusha
or
mov
fwait
pusha
mov
daa
out
popf
sub
pop
mov
popa
and
jne
cltd
push
arpl
cmpsl
push
sbbl
mov
dec
jge
push
out
xchg
subb
dec
mov
xlat
adc
and
fwait
sbb
xor
jmp
insl
ljmp
insl
cmpsb
mov
cwtl
loope
dec
leave
fcomi
adc
imul
mov
jmp
mov
push
push
imul
adc
or
jmp
andb
inc
adc
bound
mov
sub
scas
and
jg
sub
arpl
sbb
xchg
xchg
scas
popf
outsb
sub
out
sbb
cld
fcoms
loop
dec
lahf
shll
and
inc
test
popf
xchg
fistps
inc
daa
xor
and
roll
repnz
stos
lret
dec
mov
mov
fcmovnb
mov
cmpsl
mov
inc
pop
jmp
dec
fdivs
sbb
jg
or
push
xorb
popa
add
stc
push
mov
sub
fsubrl
mov
aas
pop
icebp
xchg
test
push
movsb
inc
add
pop
jp
or
jae
repnz
inc
push
add
out
insl
xor
mov
sbb
shlb
movsb
shlb
cmp
in
mov
rol
aas
adc
mov
dec
adc
mov
mov
and
popf
call
aas
or
or
mov
inc
gs
mov
xchg
repnz
je
enter
sub
ja
mov
xlat
sbb
clc
sbb
stc
inc
gs
jg
std
cmp
shlb
mov
loop
sub
fsubrl
mov
adc
add
daa
mov
inc
pop
mov
test
push
cwtl
je
jg
cmpl
test
pop
mov
stos
cmp
lahf
or
test
scas
ja
push
movsb
add
jne
lahf
fmuls
rcrb
cmp
les
in
push
and
push
pop
loope
inc
mov
push
jnp
jmp
lret
arpl
sbb
imul
outsb
xor
hlt
test
jl
sub
cld
sti
push
inc
rcll
test
push
sbb
or
mov
test
jnp
ja
or
mov
or
cmp
lcall
and
cltd
mov
lods
mov
jb
adc
popa
in
pop
rclb
pop
inc
js
inc
dec
test
ret
mov
xchg
movsb
cmp
std
xor
xor
int
adc
mov
add
aaa
insl
inc
xchg
fistpl
outsb
xchg
mov
xor
stos
push
iret
aas
sbb
data16
sub
loope
add
ljmp
xor
jns
dec
test
call
sarb
xor
jge
cmpsb
pushf
rclb
inc
push
movsb
push
mov
jne
xchg
lods
cli
arpl
xor
icebp
jo
retw
cmpsb
or
dec
adcl
test
mov
push
pop
sub
inc
dec
inc
dec
shlb
push
test
or
outsb
loope
fsubl
cmp
fsubrl
push
jbe
lock
mov
in
jg
pusha
idivl
pop
and
loop
pusha
incl
xchg
das
sbb
int
jl
gs
loope
scas
sbb
dec
mov
dec
cmpb
outsb
aas
mov
jns
mov
mov
sahf
push
or
pop
enter
fistpll
repnz
push
cli
in
clc
xchg
sar
sti
int
cli
xlat
push
adc
inc
ret
sbb
jnp
mov
dec
inc
lretw
neg
push
xchg
imulb
xchg
xlat
mov
xchg
xor
jb
add
sahf
std
fildll
adc
test
mov
mov
leavew
in
cli
icebp
dec
mov
test
out
pop
mov
sarl
dec
jo
push
aaa
aad
pop
inc
mov
stos
sbb
inc
imul
pop
xchg
xchg
jne
shl
leave
add
jb
stc
es
or
dec
shlb
mov
jb
jle
out
pop
mov
xlat
lds
lahf
rorl
scas
dec
jbe
cli
ja
popf
sbb
inc
pop
sbb
je
sbb
in
and
stos
jbe
mov
movsl
sbb
inc
fs
fisttpll
daa
jnp
push
push
adc
adc
sbb
jne
movsb
dec
pop
pop
inc
pop
cmpsb
mov
mov
insl
inc
mov
add
ficompl
clc
or
fs
jno
dec
mov
rorl
or
loop
pusha
into
test
bnd
push
mov
xor
dec
push
mov
pop
inc
jo
sbbb
jp
sbb
inc
lahf
and
fidivrs
xchg
rolb
jle
sub
sahf
cld
outsb
sarl
mov
cltd
sbb
jo
int
loop
mov
into
push
add
dec
and
divb
adcb
mov
adc
popa
lods
leave
mov
xchg
js
lods
sti
adc
addr16
roll
shlb
jecxz
and
jo
popf
test
jmp
movsb
mov
jbe
pop
subl
adc
jge
lcall
orl
aaa
outsl
addb
mov
sub
jo
js
cmp
or
xor
ret
movsl
ret
dec
push
pop
ljmp
cmp
in
xor
push
sbb
or
imulb
fwait
popf
test
xor
repnz
cmpsb
daa
out
aaa
jnp
pop
xchg
insl
cld
aam
fimuls
fs
mov
ljmp
xorb
imul
jg
or
les
int3
pushf
adc
fldt
outsb
leave
stc
roll
lods
push
popf
out
sbb
push
inc
shlb
daa
mov
sbb
pop
mov
xor
sti
hlt
push
js
inc
dec
pop
lahf
xchg
add
ss
out
popl
add
shll
scas
mov
jnp
fs
dec
sbbl
loopne
insl
sbb
jmp
and
jnp
out
ja
cwtl
mov
loop
js
or
lret
lcall
aad
mov
or
jns
clc
sub
jecxz
or
or
cwtl
adc
out
push
sbb
aam
pusha
cmp
jp
adc
rcrb
mov
dec
pop
xor
stc
or
mov
push
imul
cmpsl
push
xor
add
or
into
xchg
fs
add
and
sahf
fucom
dec
mov
test
xor
insl
sub
mov
ljmp
jmp
dec
stos
mov
stos
lds
dec
dec
inc
mov
cmpsl
popa
in
xchg
pop
jge
scas
inc
cs
and
sub
push
sbb
xchg
aam
stos
jne
pop
out
insb
addr16
out
lods
pop
idiv
scas
jno
jle
js
pop
xchg
loop
arpl
jb
lcall
xor
mov
add
xchg
add
xchg
enter
cmpsb
inc
mov
jns
addr16
fs
outsb
and
xchg
lods
ret
lods
adc
pop
int3
je
mov
push
push
dec
pop
jmp
jno
xor
test
addr16
add
dec
inc
mov
or
ret
ss
push
rolb
pushf
into
cli
push
sti
cmp
pop
cmp
adc
and
or
mov
cwtl
in
outsl
adc
in
cmp
sbb
stc
cmp
xchg
push
inc
out
inc
mov
mov
jge
xorb
adc
mov
xlat
es
or
loop
cmp
sahf
cli
pushf
cltd
leave
mov
mov
xlat
inc
pop
test
mov
adc
sti
lcall
mov
clc
cli
mov
lock
cmp
jge
test
into
xor
add
lret
mov
stos
push
bt
sub
fwait
ljmp
mov
fmull
push
mov
lret
mov
mov
pushf
enter
dec
fcmovne
sub
fcmovnu
adc
into
push
sbb
cmp
clc
fdivl
add
cmpsb
pushf
push
mov
sbb
addr16
add
cmp
xlat
in
aam
ja
aam
mov
push
int
push
fcompl
jg
ja
xor
lcall
mov
mov
fs
ljmp
test
push
leave
push
decl
push
jge
jge
cli
ja
mov
add
in
dec
sbb
out
scas
out
mov
sub
xor
js
fiaddl
xchg
sub
mov
mov
add
hlt
dec
inc
jmp
bound
adc
and
push
jmp
pop
int
aaa
mov
push
push
outsl
arpl
cmpsl
es
mov
and
mov
into
imul
fmull
lahf
and
xchg
mov
lock
mov
andb
sub
add
sub
xchg
jns
shll
mov
repnz
insl
lods
xor
cmp
jp
sub
or
adc
mov
push
repnz
mov
sarb
dec
xchg
rcll
std
inc
fs
xchg
lods
xor
fldenv
push
push
and
fwait
adc
jbe
lock
int3
sti
hlt
sub
pop
cmpsb
jnp
bound
cwtl
pop
mov
dec
jg
xchg
imul
pop
push
test
iret
aas
leave
dec
adc
insl
in
mov
roll
lea
int3
adc
out
lret
js
jne
cmp
jg
adc
ds
xor
or
push
xor
decb
mov
mov
jb
test
sbb
and
sahf
xlat
sbb
mov
xchg
inc
dec
out
cmp
push
out
sub
pusha
ja
pop
insb
popf
pop
cmp
les
rcrl
mov
nop
add
gs
dec
mov
sub
imul
jp
sub
data16
xor
ljmp
lods
sub
repnz
push
mov
lahf
xchg
paddsw
mov
popf
out
nopl
daa
xchg
divb
les
sub
movsl
jp
mov
aad
int3
outsb
inc
repz
mov
outsb
and
mov
mov
push
ja
or
jecxz
int3
repz
and
sub
or
jae
call
enter
out
mov
jae
loope
xchg
inc
xor
imul
imul
pop
mov
les
pop
aaa
push
fwait
adc
or
int
in
cmp
or
rcrb
lret
andl
repz
pop
test
mov
sbbb
lret
adc
jbe
inc
push
cmp
enter
add
arpl
mov
jl
jecxz
leave
imul
and
mov
negl
outsb
insb
imul
in
movsb
mov
testl
xchg
sahf
mov
rol
push
mov
fwait
popf
test
mov
test
cwtl
in
add
data16
fisubl
and
std
jno
pop
repnz
scas
mov
sbb
sbb
xor
pop
xchg
out
pop
mov
adc
sbb
shlb
xlat
mul
outsl
jb
jge
mov
cmp
out
sbb
mov
mov
push
movsb
inc
rorl
or
mov
mov
in
movsl
testl
enter
mov
sbb
es
imul
cmc
cmp
push
mov
adc
inc
pop
mov
mov
add
mov
xchg
mov
pusha
ss
dec
lahf
jecxz
mov
fistpl
aam
into
lds
push
xchg
push
mov
dec
xchg
mov
int3
sahf
inc
mov
pop
fs
imul
ret
and
cld
loop
bound
into
push
or
lret
lods
mov
add
push
adc
and
or
stc
xchg
sahf
es
mov
fisubrs
mov
adc
sbb
loopne
cmpsl
dec
push
shlb
loope
gs
or
js
jbe
lea
dec
stos
fdivl
jmp
imul
js
mov
cmp
sbb
lcall
into
lock
outsl
pop
mov
imul
jmp
xchg
enter
adc
outsl
call
fdivrp
addr16
daa
jbe
fnstsw
jmp
loop
outsb
insb
xor
cmp
fdivr
sar
lcall
mov
mov
pop
lcall
aam
jmp
jg
xor
jg
loope
add
call
pop
cmp
imul
fstp
cmp
stos
adc
cmc
inc
xor
pusha
or
pop
pop
popf
cmp
jnp
or
hlt
stos
lods
lock
push
push
je
mov
jb
sub
mov
mov
sbb
push
cltd
pop
push
inc
push
sub
fmull
es
dec
push
ss
cmp
add
in
test
add
dec
xor
outsl
icebp
push
mov
fldenv
lea
inc
pop
fwait
pop
insl
hlt
stos
movsb
push
jl
mov
sub
jl
pop
cmp
xlat
inc
mov
imull
or
sbb
nop
jb
mov
mov
outsb
cmp
pop
outsb
push
outsl
sbb
leave
ret
pop
out
lock
sarl
sar
xchg
xor
or
lods
bnd
add
push
iret
add
data16
mov
adc
movsl
jge
cltd
cmp
sbb
pop
popf
jnp
fs
push
inc
lea
xchg
push
xlat
adc
xchg
or
lock
jns
das
aad
div
xor
rcr
cwtl
inc
inc
push
subb
inc
xor
pop
inc
fdiv
or
mov
ret
mov
or
cmp
dec
push
sbb
icebp
lret
cmp
sbb
or
mov
push
xchg
sub
jmp
and
sbb
stc
fdivrs
dec
adc
add
push
jmp
movl
gs
bound
aaa
push
cmp
popa
sub
xor
sub
xchg
xor
scas
dec
add
jb
dec
push
insl
push
mov
push
dec
test
lcall
data16
into
sbb
rorl
inc
sahf
data16
loop
icebp
aaa
mov
bound
lret
iret
mov
inc
imul
and
aad
dec
fs
insb
xor
sub
mov
arpl
mov
outsl
cli
lock
aas
xor
or
jle
lods
dec
or
xchg
pop
stos
scas
in
test
fistps
hlt
push
enter
cmp
pop
jbe
pop
ror
mov
rolb
pop
aaa
xchg
popa
stc
insb
xor
sbb
jne
aaa
stc
push
orb
pop
pop
lret
lret
movsl
mov
push
mov
xlat
enter
cli
pop
cmp
sub
inc
or
flds
std
xor
mov
inc
sub
das
pop
sbb
or
int
rcl
les
xchg
andl
sar
scas
pop
inc
pop
ljmp
jne
movsbl
add
rcll
ja
inc
cmp
lret
in
jge
jecxz
imul
aad
ret
loop
pop
mov
mov
or
loop
outsb
mov
jns
aas
xchg
ret
je
fisubrl
xorb
jno
inc
xor
test
pop
adc
jns
dec
adc
mov
fs
pop
jl
add
notl
in
jmp
mov
mov
dec
sbb
push
sub
adc
repz
dec
pushfw
std
stc
scas
data16
or
test
push
iret
daa
or
xchg
out
jl
xchg
mov
push
out
sahf
push
mov
xchg
adc
insl
sarb
sub
mov
mov
popf
neg
jge
iret
xchg
push
sarb
jle
cmp
mov
mov
lcall
sbb
lock
gs
and
stos
cmpsl
divb
push
jmp
xchg
xchg
scas
fstpl
jl
out
pop
imul
addr16
jecxz
jg
outsl
lea
dec
add
loope
adc
pop
mov
js
xchg
inc
push
mov
lcall
jns
int3
cmp
sahf
fldl
imul
mov
mov
dec
mov
ret
mov
fmul
and
jge
inc
shrb
cmp
in
inc
das
mov
add
mov
adc
jp
mov
pop
or
into
push
mov
loop
jnp
pop
leave
enter
int3
ljmp
xor
push
inc
or
fsubrs
insb
xlat
sub
jnp
lds
inc
xchg
arpl
xor
xchg
mov
lcall
inc
mov
xor
outsb
fsts
pusha
push
and
or
mov
sub
mov
mov
adc
gs
outsb
jg
imul
jle
gs
stc
and
fldcw
ret
mov
jo
xor
aaa
jns
scas
jbe
xchg
mov
ljmp
stc
mov
ljmp
mov
imul
push
mov
insb
jb
adc
cmp
lds
mov
pop
mov
jae
sub
fimull
out
or
push
xchg
stos
adc
xor
out
roll
adc
into
imul
mov
in
add
jge
adc
xor
add
mov
pusha
ret
cmp
xor
inc
daa
adc
mov
jo
mov
shll
sbb
jnp
push
cmc
mov
cmc
jno
sti
mov
xlat
sbb
addl
mov
adc
fs
loope
dec
cwtl
dec
pop
ss
ret
into
jp
inc
arpl
dec
ret
add
mov
test
dec
fisttpll
in
push
inc
jge
dec
pop
add
mov
out
int3
push
jecxz
jmp
shlb
and
inc
aam
pusha
adc
into
mov
daa
inc
call
icebp
mov
jmp
vpcmpeqw
dec
inc
mov
and
mov
mov
cli
les
fiaddl
dec
xor
dec
cmc
xchg
lret
test
fldl2e
mov
and
push
cmp
push
pusha
xchg
push
sbb
mov
dec
mov
jns
pusha
mov
fbstp
xor
add
popf
lea
psrad
andl
repz
mov
stos
cmpsl
dec
xchg
clc
mov
and
push
lds
clc
insl
or
out
pushl
xchg
lds
filds
and
pusha
lods
mov
out
jg
lods
sbb
out
pop
data16
adc
aad
sub
aaa
pop
pop
inc
mov
repnz
popa
and
cmp
fisttps
mov
es
mov
pusha
lret
iret
aas
and
sahf
sub
cmp
dec
mov
add
cld
daa
test
les
loope
js
mov
xor
mov
cmp
inc
cmp
scas
or
cld
jb
dec
or
mov
pop
jl
out
push
mov
inc
mov
inc
popf
adc
loopne
ret
out
vpmulhw
insl
cli
pop
sti
pop
cli
aam
mov
cltd
mov
mov
mov
inc
adc
enter
ds
clc
xor
adc
fadd
gs
fisubl
stos
movsl
cwtl
jmp
cmc
push
out
pop
gs
xor
stos
in
xchg
scas
test
dec
mov
sub
add
nop
mov
jmp
adcb
and
loop
xlat
sub
loopne
or
mov
xchg
xlat
out
adc
in
bound
push
aam
dec
adc
xor
adc
cmp
xor
cmp
inc
nop
insb
lcall
js
ret
add
dec
pop
mov
es
jnp
adc
popa
add
jb
adc
pop
and
aam
mov
mov
xlat
cmp
sub
xorb
jnp
mov
pop
lods
mov
shrb
das
inc
outsl
mov
pushf
roll
lods
lock
lock
mov
insb
cmp
aas
pop
sarb
pop
lret
ret
mov
pop
mov
push
and
push
push
inc
pop
daa
cs
xor
mov
mov
loop
out
in
mov
ja
push
xor
or
fdivs
mov
addr16
push
push
rcrl
adc
dec
leave
lahf
stos
xchg
and
stc
lods
inc
in
xchg
test
mov
mov
mov
or
pop
push
dec
lods
and
test
ljmp
fld1
iret
sub
sbb
xor
test
dec
pop
mov
add
dec
xor
gs
jecxz
jnp
movsl
jne
push
popa
fninit
inc
cli
jl
jnp
sub
icebp
xabort
sbb
mov
add
inc
adc
imul
int
pop
imul
inc
mov
addr16
in
jecxz
jno
scas
cmp
pop
sbb
xor
rclb
ret
sub
pop
inc
jnp
inc
inc
cmp
jle
andl
call
loop
jbe
push
arpl
xchg
jle
les
xor
mov
jle
vmread
andb
jbe
out
mov
lock
jno
add
cli
shlb
js
icebp
imul
mull
add
push
push
mov
stos
add
icebp
faddp
in
xchg
bound
pop
popf
insl
int3
lds
in
mov
outsb
pop
fs
add
fwait
sub
inc
add
sub
aas
mov
cs
movsl
cmp
aad
cld
fdivp
repz
into
inc
mov
xchg
addl
xor
or
stos
rcl
das
xorl
lahf
and
flds
push
jg
and
xor
pop
pop
cld
addb
cmc
mov
lcall
cmp
dec
jne
loop
clc
lahf
sub
sbb
ds
in
jbe
repz
rcll
std
xor
dec
or
mull
lea
mov
aas
insb
mov
pop
cld
cld
sub
jmp
arpl
xor
push
movsl
ror
cmp
adc
lods
scas
mov
dec
inc
outsl
or
lea
and
mov
mov
xchg
xor
rcll
ljmp
xor
inc
loop
mov
inc
mov
push
and
ret
pop
clc
and
dec
data16
push
pop
das
sbb
push
lods
lret
cmp
dec
dec
mov
dec
adc
mov
pop
mov
sbbb
jle
inc
sahf
sub
movsb
idiv
push
stos
cmpsb
sbb
or
test
inc
add
jp
fldt
jp
shlb
stc
pop
xchg
ja
dec
and
pop
pushf
mov
add
ds
push
test
ljmp
js
sbb
das
data16
aam
addr16
jo
inc
xlat
popf
cld
ret
icebp
xchg
jnp
mov
das
jno
add
ret
mov
outsb
push
jg
pop
and
cmp
xchg
insl
push
lahf
push
xor
fs
data16
pusha
icebp
dec
fldl
cld
std
popa
dec
out
shlb
stos
fistpll
out
and
cli
push
call
lret
orb
dec
sbb
call
lock
pop
pop
into
mov
push
mov
push
ret
cld
fimuls
push
xchg
shl
xchg
xchg
mov
add
mov
popl
mov
mov
xchg
icebp
pop
inc
fdivs
sub
out
ljmp
loopne
imul
adc
xor
pop
pop
fcompl
mov
insl
lcall
sbb
call
dec
dec
add
inc
cmpsb
insb
lods
jg
jmp
xchg
inc
data16
xor
daa
lods
mov
gs
mov
push
loope
sbb
not
pushf
lret
xor
je
mov
or
mov
jae,pt
add
loop
sbbl
sbb
into
adc
fsubr
push
mov
or
subl
inc
lods
add
lods
pop
insb
nop
bound
pop
cmp
sbb
xchg
xor
inc
add
cli
pop
xchg
cmp
ss
xchg
int3
aas
or
or
jb
fidivrl
fcmovne
scas
mov
insl
inc
mov
xor
sbbl
jmp
jge
roll
imul
pop
out
dec
fwait
imul
out
cwtl
add
cli
lods
cli
sbb
cwtl
add
int
scas
mov
outsl
sti
insb
lret
in
mov
sub
mov
jno
jge
mov
pop
jge
mov
jmp
mov
xchg
mov
dec
sub
mov
adc
shll
aad
mov
lret
lods
dec
fwait
daa
push
xor
incb
test
movl
sub
jl
into
movsl
and
cmpb
jae
sbb
xor
cmp
frstor
add
pop
or
jb
insl
test
aam
xlat
jbe
arpl
insb
inc
jb
out
xchg
jmp
adc
jle
ret
push
je
loope
push
and
shll
mov
stc
rorl
xchg
fstps
aad
lods
inc
imul
cltd
mov
std
shrl
lret
inc
loope
mov
js
gs
jns
mov
testb
in
icebp
inc
sub
cmpsb
jnp
lds
jge
cmp
adc
sub
lds
not
add
and
mov
mov
and
pop
cwtl
imul
pop
lret
ja
push
std
imul
cltd
cmpsl
mov
mov
es
jecxz
test
pusha
or
mov
jl
push
repnz
add
fsubrp
movsb
xor
imul
pop
cld
movsl
xchg
aas
insb
push
inc
mov
add
fidivs
xchg
movsl
pop
cmp
cmp
mov
int
pop
mov
movsb
and
dec
mov
cld
pop
lahf
shll
arpl
addr16
lock
xchg
outsl
filds
jp
or
int
sbb
dec
xlat
adc
xchg
push
pop
cmp
or
push
popf
add
das
adc
sub
jb
dec
int
xor
outsb
push
leave
aad
ljmp
ret
sbb
mov
push
pusha
xlat
dec
dec
and
mov
mov
mov
pop
mov
jns
into
push
mov
das
push
sub
test
shl
dec
sub
pop
loope
sysret
ficompl
and
cltd
mov
push
lahf
cmp
mov
sti
inc
pop
pop
or
movsb
inc
insl
jb
insl
push
and
mov
mov
lds
lahf
mov
inc
pop
xchg
dec
fadd
jnp
jb
sahf
out
cmp
loop
and
jl
rclb
std
jo
outsl
sub
cmpsb
jecxz
sbb
mov
rorl
and
mov
fsqrt
loopne
arpl
iret
push
push
in
enter
jle
outsl
and
cmp
add
stos
ljmp
sar
pop
push
mov
imul
sub
lods
cmp
xor
xor
lret
pop
adc
adc
mov
fidivs
or
adc
arpl
or
test
fstpl
pop
cmc
xor
jns
scas
std
int3
xor
jp
mov
lcall
adc
add
jnp
pop
fdivrs
inc
push
mov
in
mov
sarl
inc
add
fstpl
jle
cmp
shld
pop
rcrb
and
ret
imul
mov
sub
aad
push
lret
mov
inc
aaa
sub
inc
inc
push
ja
fwait
jnp
push
call
rorl
and
fisttpl
inc
arpl
inc
adcb
mov
cmp
dec
iret
fcoml
test
shrl
fcompl
int3
mov
pop
in
mov
adc
mov
lret
mov
ret
jg
pop
ss
mov
adc
xchg
rcrl
add
jo
xlat
cmp
leave
mov
in
arpl
adc
pop
addr16
psllq
cmp
mov
jecxz
mov
call
pop
call
in
or
out
cld
xchg
jns
xor
stos
fwait
cld
outsl
or
inc
or
cwtl
in
pop
mov
lods
cmpb
adc
xchg
pcmpeqw
popf
pop
pop
lods
cmp
sbb
push
xchg
fldln2
aas
push
or
aad
sub
pop
add
mov
dec
lods
scas
mov
push
setbe
sbb
aaa
mov
jl
mov
sub
inc
dec
jne
xchg
push
iret
inc
push
dec
sub
fcomps
mov
xchg
fistpll
stc
xchg
mov
lret
mov
insb
mov
jbe
pminub
loopne
stos
inc
xor
test
xor
and
sub
int3
xchg
xchg
es
std
movl
cmpl
dec
fwait
pop
dec
loop
sahf
jne
mov
mov
outsb
fdivrl
mov
sahf
jns
pop
xor
pop
adc
shlb
and
fsts
pop
adc
xor
pop
es
je
or
fidivrl
inc
subb
andb
loopne
stos
enter
push
mov
fwait
call
out
mov
or
xor
xchg
aad
mov
out
and
ficoms
cmp
rcll
inc
lret
sbb
mov
pop
adc
or
cwtl
jo
jge
lock
mov
inc
jle
scas
add
xor
cmpsl
add
mov
into
sbb
cltd
mov
in
cmp
jecxz
in
pop
insb
jecxz
mov
fs
push
movsl
imul
and
shrl
adc
insl
and
pop
inc
ds
iret
cmpsl
cs
push
outsb
cmp
nop
mov
jnp
cmp
dec
mov
addr16
pop
mov
daa
push
push
loope
inc
stos
out
and
mov
inc
jmp
shll
mov
jecxz
push
loop
and
mov
les
push
jae
lcall
xor
jecxz
dec
iret
mov
add
mov
xchg
mov
pop
lock
fwait
sub
sar
sarw
push
cwtl
mov
cs
fnstsw
xor
xchg
adc
imul
xor
adc
sbb
cmp
mov
shrb
mov
shl
push
stc
jmp
lret
mov
adc
loop
mov
mov
mov
xor
call
outsb
imul
xchg
jmp
xorl
scas
sarb
fnstsw
xchg
sub
fisttps
pop
xor
addr16
lcall
sti
in
mov
imul
pop
filds
ret
leave
cmp
dec
loop
ja
hlt
aad
and
adc
call
insb
mov
in
add
popf
xchg
hlt
js
hlt
rcr
sub
pop
xor
mull
add
out
flds
xchg
push
leave
test
cmp
mov
arpl
push
xor
incb
xor
mov
shlb
or
mov
add
add
movsb
xor
mov
xchg
and
pop
shrl
inc
pusha
inc
mov
or
loopne
movsl
jno
lcall
sbb
pushf
cli
shrb
xlat
adc
add
enter
pusha
xchg
loop
out
or
add
push
cmp
scas
mov
lock
test
shrl
lods
or
jno
add
jae
and
mov
scas
testl
movsb
jp
call
lahf
pop
pop
dec
in
mov
frstor
mov
dec
jno
sti
inc
sub
scas
sbb
ret
pop
test
push
inc
movsl
dec
test
into
mov
mov
aad
outsb
inc
hlt
gs
je
mov
or
repnz
dec
fwait
addr16
cmp
imul
push
sbb
fisttpll
xor
ret
xchg
inc
sti
aaa
push
jbe
enter
out
xchg
push
enter
mov
gs
adc
imul
stos
mov
and
xor
sti
int3
fistps
loopne
or
loop
jbe
cmp
pop
cmpsl
push
mov
pop
push
loop
sub
cltd
mov
js
ret
sti
pop
dec
push
dec
leave
adc
out
test
or
cmp
pop
pop
add
xchg
push
out
pop
cmp
sub
sbb
inc
mov
mov
push
and
lcall
imul
sub
inc
sbb
dec
sbb
fldt
out
outsl
outsl
subb
or
pop
data16
jns
adc
cmp
dec
movsb
cmp
push
mov
cmp
jbe
loope
lea
sbb
ss
push
push
add
or
inc
dec
repnz
shlb
bound
popl
inc
lock
pusha
adc
cwtl
mov
aad
or
push
dec
or
or
in
in
bound
daa
pop
aaa
popa
rcll
popf
inc
lcall
aas
enter
lcall
mov
pop
sbb
jecxz
pop
dec
divb
sbb
cmp
fcmovu
pop
jno
pop
shlb
das
arpl
and
int3
or
jl
cmp
mov
in
jo
adc
pop
insl
mov
lcall
call
xor
push
push
mov
ljmp
add
shrl
sbb
rcrb
pop
shrb
sub
sbb
mov
pop
testl
mov
jmp
lock
mov
or
bnd
test
addr16
adc
lret
inc
inc
adc
mov
pop
stos
cmpsl
push
mov
fcoms
mov
dec
stos
lock
insb
dec
xchg
fiaddl
add
sbb
sbb
sbb
or
adc
jae
and
push
icebp
xor
retw
js
fcmovne
ds
xchg
int3
aaa
push
mov
or
mov
mov
stos
mov
add
xor
push
xor
xor
out
loopne
push
repnz
scas
out
mull
inc
adc
cltd
adc
mov
jg
xchg
cs
mov
call
pop
lret
or
jl
xchg
mov
js
push
push
lods
nop
out
cmp
fidivrs
adc
and
and
push
inc
loopne
mov
push
cmp
pop
cmp
and
mov
cwtl
jno
cmp
sub
mov
pop
mov
mov
lds
push
push
mov
mov
dec
xor
pop
scas
mov
cli
pushf
dec
iret
xchg
rcl
jb
leave
dec
inc
sub
cmp
cmp
int
jnp
or
in
decl
mov
xor
pop
mov
sub
ret
lahf
cli
dec
aaa
into
adc
leave
mov
fstp
sub
adc
leave
push
aas
jb
jne
and
sti
shrl
mov
popa
xchg
xlat
into
sbb
rcrl
push
mov
mov
xor
sub
cmpsb
push
insb
inc
jae
ficoml
out
pop
in
adcb
outsl
cmpsb
push
or
lahf
enter
iret
into
inc
cmpsl
mov
inc
cltd
outsl
cmp
roll
or
rcll
xor
inc
repz
inc
cs
push
test
fists
lock
es
adc
dec
lds
and
or
push
aad
daa
aam
cwtl
xor
push
inc
add
ret
xchg
cmp
imul
adc
enter
je
push
mov
daa
xlat
mov
cmp
data16
add
movsl
mov
sti
add
outsl
jl
into
sbb
stc
inc
cmpsb
mov
cmp
stc
fldl
divl
into
mov
pop
shrl
lock
mov
jne
pop
sahf
dec
push
push
inc
adc
fildll
push
adc
sahf
push
push
fimuls
adc
cltd
movsl
ja
aam
lds
clc
outsb
sbb
mov
lahf
jno
adc
dec
aad
bound
and
subl
test
shll
int3
pushf
sbb
cmp
sub
fucom
out
and
fisubl
adcb
sub
mov
jmp
jo
pop
add
or
rorb
int3
and
clc
mov
add
inc
push
pusha
xchg
lods
not
fsts
fnstsw
push
sti
lds
and
sbb
sbb
and
push
cmpsl
push
xchg
mov
cltd
pop
movsl
dec
in
lock
das
cmp
imul
sbb
sbb
xchg
sbb
mov
jno
imul
adc
mov
mov
sub
mov
cmp
call
inc
ja
pop
divl
or
in
jg
lret
xor
xor
loope
shr
jnp
int
test
sti
pushf
div
adc
inc
dec
xchg
int3
sbb
or
and
xchg
imull
das
faddl
hlt
cwtl
popa
pop
xchg
pop
dec
imul
jmp
sbb
mov
les
inc
sbbb
shlb
sbb
cwtl
jne
jns
mov
jnp
sbbl
cmp
xchg
and
inc
mov
sbb
sbb
lock
mov
ljmp
jp
mov
js
loope
sbb
test
dec
insb
cmp
cmpsl
jno
mov
lcall
or
xchg
mov
in
add
pop
sbb
mov
in
pop
sbb
pop
mov
sahf
or
cmp
mov
pop
aaa
subl
or
jb
int
pop
push
mov
cld
add
lret
vmovdqa
xchg
int3
insl
sbb
cmp
mov
push
es
push
neg
jle
push
mov
ss
adc
dec
cmp
inc
sub
popf
or
mov
insb
cmp
pop
repz
outsb
jb
mov
imul
xor
addr16
scas
lods
inc
scas
add
lods
mov
jecxz
addr16
xor
jmp
cld
pop
popa
dec
xchg
add
jns
aaa
pop
bound
shl
xchg
mov
jne
shlb
inc
mov
and
and
jae
test
adc
dec
mov
inc
and
inc
stos
adcb
mov
inc
add
jae
in
sbb
add
xorl
sbb
xor
lds
mov
xor
xor
xchg
mov
or
push
mov
dec
dec
and
pop
jbe
and
adc
int3
aad
and
stc
scas
outsl
imul
adc
xorb
xchg
cmp
fbstp
out
icebp
adc
aam
pop
aam
inc
in
movsb
or
push
cmpsb
or
loopne
push
jmp
jecxz
inc
pop
dec
cltd
js
outsb
fwait
add
clc
xchg
mov
aam
mov
fimuls
add
or
stos
mov
std
dec
in
les
xor
mov
pop
xor
mov
icebp
lock
dec
jg
call
pop
jno
mov
push
lret
mov
in
out
sahf
in
and
xchg
clc
rclb
cmp
data16
mov
out
gs
aam
imul
xchg
pop
cmpl
push
out
cmp
rcrb
jno
mov
mov
leave
ret
xchg
movsl
dec
xor
pushf
addr16
lret
add
sbb
das
mov
popf
pop
and
stos
icebp
jmp
jae
cltd
and
lahf
cmc
test
pop
rorb
add
pop
mov
xor
in
into
and
es
push
les
shrl
int
mov
jl
mov
iret
test
xor
jecxz
arpl
jecxz
lcall
stos
mov
xchg
fldcw
es
insl
dec
and
xor
mov
sbb
pop
stc
mov
cmp
les
push
icebp
test
les
push
pop
stos
push
sbb
cmc
ret
int
jle
xor
loopne
and
jmp
jle
sub
mov
push
in
inc
das
push
out
int
int
cwtl
pop
aam
mov
out
push
in
call
out
clc
enter
inc
clc
shlb
cmp
jne
pop
push
mov
adc
jge
mov
push
fisttpl
lret
scas
sti
dec
stc
lea
insb
je
mov
out
sub
mov
loope
popa
cmp
inc
push
mov
xor
notl
sbb
cld
ljmp
dec
lcall
xchg
push
sub
dec
out
dec
les
mov
jae
clc
outsb
mov
or
and
adc
dec
push
jno
adc
lret
mov
cld
jl
in
dec
pushf
jnp
pop
inc
xchg
rcrb
sbb
push
ja
sub
ret
cmp
movsl
xchg
ja
fucomi
inc
rcr
cmp
cltd
mov
sbb
js
jno
add
shll
out
aaa
js
dec
dec
fnstcw
sub
pop
addr16
cmp
enter
mov
jae
push
jo
fnsave
popa
mov
sub
add
xor
lret
mov
add
test
scas
inc
inc
cmp
jecxz
mov
lcall
push
ss
lock
add
aas
push
ret
outsl
and
imul
pop
ret
sub
jmp
andl
andb
sbb
inc
in
cmpsl
test
push
aas
ret
dec
lods
sahf
or
mov
xchg
jnp
lods
jmp
push
sub
push
mov
push
ja
inc
outsl
in
dec
into
sbb
lock
sub
in
lock
or
aad
pop
push
xor
cmp
ss
push
cmpb
mov
push
ja
insl
push
or
sbb
sahf
mov
push
jnp
sti
pop
fidivl
decl
dec
daa
ss
lret
or
in
test
jnp
mov
xchg
inc
clc
mov
sti
fidivs
test
mov
xchg
out
dec
enter
or
int3
mov
jno
dec
mov
les
sahf
inc
xlat
sbb
and
push
jp
xor
jge
dec
test
movsl
ds
repnz
sbb
xlat
sub
or
orb
xor
xor
in
test
xor
cs
scas
jl
lea
fisubs
mov
push
aas
stos
lea
imul
mov
push
mov
je
fisubs
sbb
xchg
aam
mov
mov
cmp
add
cmpsl
add
jae
lret
insb
jno
dec
or
xchg
cmp
add
mov
mov
addr16
xchg
cltd
lcall
cmpsl
je
pop
push
fwait
push
pop
cmp
mov
pop
mov
cmpsb
inc
xchg
jbe
or
test
and
imul
add
xorb
lea
insb
in
mov
rolb
aad
sub
mov
jl
lret
cmp
dec
push
shrl
xor
movsl
push
js
cmp
dec
out
mov
jns
or
fisubs
lahf
inc
sbb
call
out
aad
subb
or
cmp
add
sbb
push
adc
mov
jns
cltd
sub
pop
mov
lret
inc
ret
lds
int3
test
xchg
pushfw
je
je
pop
and
pop
cli
jo
fnsave
scas
ja
aam
jg
xorl
xchg
pop
cmp
bound
call
mov
jbe
cmpsb
pop
mov
cmp
xor
push
repnz
daa
inc
subb
xchg
xchg
cmp
scas
ljmp
cmp
dec
pop
or
icebp
fs
pusha
sbb
sbb
adc
jle
hlt
adc
aas
xchg
xor
mov
icebp
xchg
mov
test
in
sbb
fs
or
test
mov
int3
out
out
xor
sarl
xchg
sbb
add
push
inc
outsb
jno
jnp
jns
and
jmp
xchg
test
cmpsb
iret
pusha
mov
mov
out
or
cmpb
add
mov
cmp
and
jae
popf
sbb
cmpsb
hlt
jne
and
dec
pop
fidivrl
xchg
jg
repz
andl
daa
out
enter
jle
fcmovu
in
mov
ret
inc
mov
push
test
pop
or
add
or
inc
add
add
and
arpl
mov
mov
mov
test
cs
lahf
ljmp
push
cmc
and
dec
cmp
lahf
out
movsl
sbb
jbe
inc
jns
mov
gs
mov
jnp
inc
xor
les
jo
mov
mov
xchg
call
jb
pop
adc
jne
xor
mov
sahf
push
clc
out
cmp
cmc
hlt
scas
mov
mov
scas
test
maskmovq
mov
mov
sahf
sub
pop
jl
ss
arpl
sub
adc
or
clc
sub
pushf
pop
mov
mov
pop
ja
leave
dec
sbb
jae
mov
inc
cs
lret
shll
xor
sub
jae
or
icebp
lds
or
or
mov
data16
les
faddl
cmc
in
les
dec
dec
nop
mov
pop
aam
loope
std
orl
push
stos
lcall
pusha
scas
ret
movhps
insb
mov
jb,pn
jo
cmp
cmp
arpl
dec
mov
jmp
notl
test
scas
and
ljmp
xchg
js
pop
sbb
jg
jno
in
pop
mov
iret
jbe
ficoml
ljmp
fsubr
pop
iret
notb
push
xor
pushf
xchg
xchg
lods
jle
sbb
mov
xchg
adc
cmp
jecxz
xchg
dec
xchg
push
shl
push
dec
cli
leave
sbb
aad
adc
cmp
pop
int3
cli
mov
mov
repz
mov
sub
mov
dec
dec
xchg
lret
lahf
dec
mov
adc
xchg
and
movsl
outsl
mov
ljmp
and
push
test
adc
pop
dec
lds
dec
hlt
into
es
js
cmpsb
jg
iret
fwait
pop
fdivrl
pop
sbb
popa
xor
int3
lret
in
cmp
aad
sub
mov
lret
sbb
and
dec
mov
sarl
lret
cmc
cmc
ja
rclb
sbb
add
or
imul
cmp
test
clc
sbb
inc
mov
mov
dec
xchg
lds
or
inc
mov
adc
jns
xor
jo
test
xchg
add
outsb
sahf
lods
mov
adc
sub
cmp
push
mov
loope
push
lock
pop
jns
cmp
into
into
push
into
aad
insb
add
inc
jno
add
movl
sbb
or
jl
xchg
cmpb
int3
daa
dec
dec
out
repnz
mov
cmp
pop
push
aaa
les
xor
rcr
test
jge
sub
xchg
imul
sub
mov
es
je
add
andb
cs
lods
sti
in
pop
sub
sti
adc
cmpsb
lret
push
dec
je
and
pop
aad
fucomip
inc
mov
adc
inc
fsts
or
jmp
fnstsw
ja
push
pop
adc
xchg
movsl
mov
jl
inc
sub
or
repz
in
push
push
mov
and
xor
pop
mov
xchg
ja
mov
pop
xor
jg
push
mov
pop
sub
adc
push
fstpl
or
sub
dec
daa
stc
xchg
mov
mov
cmpsb
and
scas
in
dec
sbbb
mov
mull
mov
jbe
cmp
test
and
lret
cli
icebp
pop
mov
jge
int
xchg
test
adc
data16
push
push
js
push
ja
mov
push
mov
push
jmp
leave
addr16
add
es
movsl
cs
cmp
ret
add
cmpsl
jge
imul
adc
pop
loopne
mov
adcb
add
push
pop
mov
xchg
mov
shlb
icebp
inc
dec
dec
push
mov
dec
inc
int
js
mov
lret
dec
mov
mov
inc
mov
gs
pushf
out
or
gs
mov
pop
fsubr
fsts
push
repz
loop
xor
in
lock
push
mov
xor
lds
cli
xor
aam
xlat
popa
sub
add
scas
mov
pusha
stos
sub
mov
insb
mov
shlb
xor
jecxz
loope
xchg
jl
cmp
mov
lahf
orb
loope
lock
fstpt
and
ret
jno
fisttpll
std
jb
cmpsb
jns
outsb
ficomps
lret
mov
and
inc
mov
push
mov
push
cmc
loopne
xchg
cmp
fcmovne
dec
and
repnz
mov
incl
imul
mov
gs
mov
and
add
imull
sbb
cmp
int3
rcl
push
ret
pop
loopne
dec
aas
mov
lahf
adc
stos
loope
leave
aam
js
ds
adcl
xor
js
into
out
lcall
sar
jo
xlat
and
inc
sahf
js
imul
push
data16
xchg
cs
hlt
and
cmpsb
adcb
pushf
xor
inc
push
test
pop
js
movsl
sub
fwait
loop
push
inc
insl
jo
xchg
or
sar
xor
icebp
repz
xchg
mov
pusha
popf
mov
and
divl
adc
add
sbb
lcall
add
enter
mov
jno
sub
sub
std
outsl
push
jp
xchg
xor
imul
adc
pop
xlat
push
leave
inc
out
cmp
dec
or
or
push
push
stos
lods
jo
in
cld
ds
mov
add
int3
outsl
sbb
sub
xchg
std
adc
sub
pop
out
xchg
jg
sub
dec
mov
lea
cli
mov
xor
sbb
xchg
loop
pushf
lds
out
mov
jnp
xchg
jg
out
push
movsb
pusha
mov
lea
inc
jno
cld
inc
lods
test
dec
sti
push
and
dec
lahf
jp
cwtl
xchg
mov
pop
js
stc
into
jle
xchg
enter
filds
je
loope
sub
cmpsb
jo
jle
or
sub
mov
loope
lcall
ret
incl
adc
test
test
fnsave
mov
clc
xor
jns
icebp
das
fstl
lock
mov
add
sbb
push
aam
adc
insl
subb
mov
xlat
int
in
movb
jge
or
adc
faddl
ret
out
sbb
mov
mov
adc
cld
scas
fisubrs
je
jl
repz
dec
jb
xor
inc
jo
cmp
ret
push
aas
cs
sbb
std
insl
mov
ja
lahf
loopne
sub
or
or
mov
mov
inc
out
inc
jns
xor
push
sbb
clc
fcmovbe
movsl
aas
adc
jle
pop
xchg
push
cmp
push
jns
popa
loope
daa
aad
int
es
loopew
dec
and
bnd
mov
or
cmp
scas
fcomip
inc
pop
add
lea
xchg
fidivl
fidivl
push
mov
call
pop
mov
outsl
ljmp
in
imul
inc
imul
movsb
mov
inc
jno
mov
jo
lret
mov
or
and
mov
cmp
icebp
add
std
jp
jge
shl
aas
push
mov
sub
and
fisubs
clc
lea
mov
xor
test
jns
js
mov
and
inc
jns
sahf
frstor
cs
cld
shll
sbb
shlb
movsl
test
negl
scas
mov
pushf
addr16
add
or
bound
sub
pop
in
inc
in
pop
xchg
lds
xchg
or
loopne
push
pop
sbb
push
mov
push
add
or
jno
int3
push
imul
out
push
inc
inc
mov
sti
jns
pusha
sbb
scas
adcb
stos
flds
std
sbb
mov
mov
and
jne
filds
imul
sbb
ds
adc
dec
sarl
cs
iret
cmp
out
adc
pop
xchg
cmp
repz
xor
mov
cmp
or
push
rcr
cwtl
lock
pop
mov
imul
sbb
push
push
stos
mov
adc
pop
dec
rclb
fimull
imul
sub
loopne
clc
jmp
cli
or
cmp
imul
test
lea
mov
adc
in
dec
xor
mov
fsts
pop
testb
add
jp
loop
xor
add
adc
repz
cmp
mov
xchg
mov
pop
scas
or
lds
test
fisttpll
add
daa
dec
sahf
mov
loopne
push
pop
xorb
cmp
xor
sub
mov
mov
add
popf
xor
faddl
daa
movsl
mov
fdiv
or
insb
sarb
adc
or
lock
push
dec
push
jae
pop
pop
add
sarb
sub
lds
imul
mov
or
mov
fdivl
cwtl
ret
cs
in
imul
in
lret
jns
jno
out
push
ss
imul
insl
inc
out
mov
push
or
add
imulb
push
leave
cmc
or
scas
notb
jne
cmp
addr16
adc
ja
rorb
cltd
in
adc
mov
divb
mov
mov
jbe
xlat
mov
es
js
test
sub
dec
sub
inc
sub
add
testl
test
mov
clc
mov
mov
mov
adc
test
into
lock
test
mov
push
xor
sbb
add
shr
sbb
jl
jne
fisubrl
add
push
push
adc
push
hlt
loope
cmp
movsl
fldenv
jmp
pushf
sbbl
mov
aaa
andb
xchg
aam
jae
jne
and
dec
mov
test
add
ja
mov
sbb
inc
cwtl
out
mov
insl
lret
jno
adc
outsl
dec
fsubrs
rcll
mov
loop
fs
loopne
out
mov
out
jecxz
adc
mov
std
outsl
dec
inc
int3
cmpsb
jmp
lods
adcb
cwtl
jle
fs
std
das
push
xchg
adc
push
out
and
hlt
dec
in
in
je
add
lcall
push
mov
sbb
push
fstl
lahf
into
cli
inc
cmpsl
rorb
pop
test
inc
in
and
stos
inc
mov
mov
or
arpl
mov
fdivr
mov
in
decl
mov
or
xchg
out
sarl
add
push
rclb
or
mov
hlt
addb
dec
push
fwait
jl
jl
sbb
cmp
push
idivl
inc
or
pop
mov
inc
scas
cmp
and
fldenv
add
cmpsl
xchg
aaa
xchg
jge
pop
fwait
jbe
call
iret
mov
in
and
rolb
dec
push
adcl
or
sti
sbb
stos
cmpsb
fcmovnbe
mov
enter
aad
fiaddl
fs
test
filds
fistps
xchg
scas
pop
gs
sets
inc
pop
ret
and
inc
pop
push
and
lea
aam
sbb
aam
sbb
fimuls
push
pop
hlt
mov
ret
pop
movsl
sbb
add
inc
loop
mov
sbb
stos
sub
cmp
fsubs
mov
push
sub
sub
jge
and
mov
shr
mov
lret
js
fildll
scas
cmc
cli
mov
jbe
push
add
sbb
repz
cwtl
icebp
in
pop
or
ficompl
jmp
dec
jle
mov
movsb
aaa
push
pop
sub
es
adc
leave
mov
dec
jmp
cmp
hlt
frstor
pop
pop
fsubr
test
xchg
sub
icebp
stc
cmp
cmp
ljmp
movsl
mov
aad
adc
dec
imul
ret
test
mov
filds
push
ret
aas
sbb
dec
push
xchg
fs
pop
xor
loope
xchg
mov
in
pop
adc
cltd
das
sbbb
and
mov
int
aad
std
loope
lcall
sbb
sahf
stos
les
push
and
daa
pop
push
fldcw
call
mov
or
xor
push
sbb
pop
pop
insb
out
bound
outsb
inc
mov
xor
movsl
add
jmp
cmp
loope
adc
pusha
aas
xor
cltd
xchg
stos
mov
lret
adc
push
ret
mov
or
cmp
clc
xchg
sub
out
push
push
mov
arpl
adc
shlb
mov
or
pop
dec
xor
aad
ret
add
out
fnstenv
mov
lock
push
ret
cmpsb
mov
sarb
pop
cmpsb
pop
dec
lea
test
es
and
sub
or
data16
aaa
ret
adc
loope
pop
mov
ret
dec
inc
shrb
jecxz
pop
mov
rol
lods
jmp
out
inc
jecxz
mov
je
pop
push
clc
jb
push
sub
dec
cmp
out
daa
into
into
or
add
cmp
mov
xchg
or
or
and
sub
lock
out
addr16
mov
dec
out
mov
pop
jmp
in
cmp
mov
xchg
pop
lds
mov
or
scas
push
jo
daa
fadd
cmp
mov
sbb
in
jp
ret
cmp
xor
dec
mov
dec
xchg
divl
cmp
clc
popf
adc
ja
pop
jo
stos
mov
popf
pop
sarl
push
stos
lock
sub
bound
mov
push
push
or
in
test
cmp
jl
out
cs
inc
in
and
mov
jns
dec
xchg
add
data16
cmc
popf
fdivrp
movsl
push
ds
arpl
js
or
inc
jns
std
mov
out
icebp
cmp
jge
mov
add
sbb
jns
xchg
pop
cmp
andl
sub
das
js
out
mov
data16
mov
inc
out
insl
sbb
rolb
push
dec
lcall
push
rorl
mov
stc
xor
ret
test
mov
imul
cmpsl
inc
mov
cmpsb
out
shl
popa
and
loopne
loopne
inc
sbb
in
xor
aam
icebp
stos
inc
or
xchg
orb
cmp
sub
dec
in
lahf
pop
jg
adc
jae
fcoms
xchg
jnp
fwait
xor
cmpb
mov
jmp
aaa
cmp
int3
pop
pop
in
test
sub
fs
cwtl
fsubrs
ss
pop
sahf
and
adc
cmp
or
or
les
mov
mov
mov
fidivrl
xchg
dec
sub
outsb
cmpsb
inc
loop
push
and
cmp
inc
xor
mov
pop
dec
test
and
jecxz
test
and
sbbb
push
adc
ret
sbb
lods
adc
push
add
xchg
lds
xchg
pushaw
shlb
and
ret
sbb
divl
push
nop
insb
lcall
mov
cmpb
inc
adc
push
in
and
nop
xchg
sub
lods
data16
cld
or
pop
fbld
xor
jge
js
mov
pushf
inc
xchg
arpl
mov
or
pop
jl
bswap
into
xchg
repz
pop
dec
and
outsb
inc
jae
jl
push
lret
int3
out
sbb
test
pop
loopne
jge
dec
adc
das
sbb
push
pusha
stc
sahf
sahf
xchg
mov
lds
lcall
test
xchg
sbb
jne
jne
jg
mov
or
cmp
stos
push
mov
call
push
stos
rolb
scas
test
mov
xchg
out
jp
test
add
pusha
stos
sbb
pop
xchg
dec
adc
loop
pcmpeqb
je
jbe
dec
inc
add
mov
loopne
push
pop
or
cwtl
add
mov
ljmp
lds
add
jo
and
lahf
imul
xor
push
sub
inc
adc
mov
and
push
out
pop
adc
daa
das
and
mov
xor
out
movsb
push
push
loope
shrl
ljmp
add
inc
jg
mov
mov
xchg
pop
stc
jnp
repnz
or
outsb
pusha
dec
pop
movsl
mov
mov
pop
mov
in
xlat
fiadds
aam
mov
movsb
ret
mov
sbb
or
cwtl
adc
sub
loope
mov
loope
cmc
jae
ret
in
add
ss
or
rorl
pop
in
negl
int3
push
push
dec
inc
cmp
mov
cltd
push
dec
add
push
xchg
mov
pop
jle
push
lods
cmp
xchg
push
and
out
int3
sub
and
mov
loop
scas
adc
test
or
jl
fisubs
cmp
mov
lcall
std
addl
in
lds
push
jmp
loopne
xchg
jbe
in
mov
movsl
int3
adc
sbb
fstpl
std
mov
ss
mov
mov
mov
push
add
mov
xor
mov
loop
enter
sbb
sbb
xchg
push
sbb
push
xchg
dec
sbb
mov
push
test
sbb
cmpl
inc
mov
test
xchg
andb
out
rolb
pop
daa
fpatan
pop
in
xchg
jg
loope
adc
add
or
mov
add
push
fdivs
dec
pushf
fcmovnbe
fs
jle
mov
clc
cmp
mov
push
testb
or
gs
sbb
jmp
jo
cmpsl
push
jle
mov
push
lods
jge
add
sub
inc
push
fdivrl
arpl
xchg
shl
roll
jno
dec
idivl
sub
push
popf
add
lods
imul
mov
push
loop
iret
jp
pop
mov
into
mov
scas
lea
inc
scas
sub
sbb
mov
js
stc
stos
xchg
movsl
dec
test
pushf
call
sbb
and
mov
dec
jne
pop
rcrl
mov
mov
xchg
lods
sub
lret
push
push
ss
stos
lds
pop
fs
stos
push
mov
sub
jno
xchg
pusha
or
xchg
adc
outsb
fwait
insb
mov
inc
lcall
push
out
imul
xchg
lods
popf
jb
lret
mov
inc
jb
arpl
nop
scas
push
add
mov
fistl
std
mov
cmpb
lret
jmp
fwait
imul
mov
dec
xchg
inc
mov
sub
mov
cmp
fidivrl
clc
mov
cmovno
sub
loope
add
pop
pushf
push
cmp
subb
enter
xchg
add
div
jne
aaa
loopne
sbb
outsl
sub
in
lahf
xor
jnp
mov
mov
movsl
in
test
enter
das
inc
jmp
sbb
jg
jo
rcrl
arpl
popf
insl
lock
ret
mov
aaa
xor
les
dec
inc
mov
jae
cmp
or
mov
push
lds
pop
lret
test
mov
push
nop
fs
sbb
in
mov
popf
mov
mov
mov
pushf
iret
jb
imulb
pop
rorl
push
inc
mov
mov
push
rcrl
stos
or
mov
test
pop
xor
fdivs
es
cmp
xchg
repz
sbb
adc
popa
idivl
cli
xchg
dec
inc
or
lock
pop
incl
cmpsb
mov
cmp
stos
adc
test
mov
cmpsl
sub
cmp
les
cmpl
orb
adc
mov
mov
cmp
mov
xor
in
int
fcompp
and
or
adc
jns
cli
lea
ret
sbb
xchg
jb
and
jae
clc
repnz
sbb
and
sbb
int
jbe
pop
sbb
into
cs
mov
in
in
and
js
inc
aam
je
mov
pop
and
mov
nop
jno
fsubrs
jmp
sub
and
jno
jnp
loopne
ret
adc
test
fwait
inc
ret
cmp
push
cmp
push
xor
and
push
cld
sbb
and
mov
xchg
push
cmp
incl
fiadds
dec
jb
mov
bound
push
jmp
aad
cld
mov
test
mov
cld
lods
test
mov
ja
sub
dec
arpl
lahf
inc
out
out
arpl
pop
movsl
cmc
sbb
xlat
push
xor
mov
lea
fwait
popl
cmp
mov
jno
call
pop
pop
sbb
in
add
inc
cmp
or
ss
adc
push
je
and
jmp
hlt
jo
cmpsb
mov
sbb
mov
pop
out
insl
push
pop
dec
mov
sbb
push
cmp
inc
ss
sbb
xor
cmp
call
ror
lahf
nop
and
stos
fsubl
and
sbb
fcoms
jmp
cmp
out
cld
ja
mov
ljmp
call
jnp
out
out
cs
sub
enter
mov
sbb
shlb
mov
lcall
mov
subb
jg
in
cld
notb
adc
clc
sub
dec
int
cmp
nop
mov
xor
fstps
int3
rclb
fs
pop
lret
pop
jne
cmp
popa
pop
cmp
adc
mov
repz
jbe
fmul
mov
or
flds
stc
outsb
or
sbb
mov
dec
scas
adc
jne
inc
imul
push
adc
inc
inc
test
stos
sbb
out
test
insb
inc
loope
stos
xchg
and
cwtl
les
call
test
sub
inc
add
shlb
fisubl
mov
popa
mov
jbe
mov
cltd
imul
adcl
mov
jo
xor
lret
faddl
jbe
jnp
dec
ret
sbb
cmc
push
dec
adcl
adc
lods
add
rorl
es
int
loope
adc
sub
std
sbb
into
testb
leave
scas
add
cmp
inc
int
dec
arpl
pop
pop
dec
mov
pop
jbe
jae
out
mov
cmc
stos
mov
lahf
sub
jns
inc
mov
cwtl
daa
stos
sahf
and
in
pop
ss
jo
mov
mov
cmp
and
push
rcl
hlt
jb
xor
iret
pop
push
das
faddl
pop
pop
aam
cmp
adc
fisubs
pop
movsl
outsb
imul
aas
and
pop
or
jo
sbb
lods
pcmpgtw
rol
pop
mov
sbb
and
stos
xchg
cmp
stos
pusha
adc
cmp
mov
loop
jnp
mov
hlt
and
add
cmp
jbe
and
data16
inc
push
pop
cmovbe
xor
or
jae
ljmp
mov
and
scas
cltd
mov
out
movsb
jns
xchg
pop
jns
dec
in
stc
push
movsl
adc
push
das
sbb
jb
mov
scas
ja
cwtl
outsl
aam
arpl
pusha
add
ds
shrl
and
fstl
out
mov
cmc
pop
aam
inc
nop
dec
mov
fcoml
jmp
cmc
dec
int
jge
popl
les
movsl
fmull
xchg
sbb
ud1
pushf
mov
xchg
cmpsl
jg
sahf
cmp
fdivl
mov
jo
in
sub
sbb
xchg
negl
sbb
jp
movsl
cli
xor
mov
mov
or
push
call
cmp
inc
jmp
std
mov
aad
dec
push
mov
pop
mov
mov
push
loop
jbe
jp
gs
pop
mov
hlt
scas
and
daa
mov
out
pop
lock
fidivrs
push
mov
hlt
out
fs
cli
pushf
add
scas
jbe
int3
mov
add
jns
sbb
fnstcw
xchg
pop
icebp
fldt
out
adc
scas
jbe
sbb
jecxz
cmc
nop
lahf
jno
test
mov
loop
xor
inc
imul
shlb
sub
aaa
mov
dec
sbb
push
jecxz
pop
mov
outsl
es
and
xchg
int3
mov
adc
jnp
stos
cli
cmp
push
jg
and
sbb
les
in
ret
scas
xor
xor
pop
ret
mov
jno
sub
aaa
cmpsb
negb
sub
xchg
xor
adc
out
push
mov
sbb
mov
stos
sbb
mov
push
popf
sub
std
std
js
mov
fdivrs
mov
outsl
xor
adc
in
xchg
mov
push
jae
jp
xor
lahf
nop
inc
outsb
jl
in
jae
lahf
ret
sbb
push
mov
scas
sarb
mov
out
in
sbb
dec
out
lcall
in
jns
push
xor
mov
nop
lahf
in
sbb
inc
xchg
xor
mov
xchg
into
lahf
push
ret
sub
mov
stos
clc
cmp
mov
bound
lahf
sbb
out
cmc
pop
push
les
jl
outsb
xchg
inc
jg
loopne
repnz
sbb
hlt
dec
lahf
int3
mov
cltd
pusha
add
out
push
enter
dec
cmp
imul
hlt
cmc
mov
add
jb
jo
lods
sub
dec
mov
not
push
iret
enter
jnp
ret
adc
mov
mov
aas
cld
mov
mov
xchg
jecxz
jecxz
daa
dec
mov
addb
sub
in
inc
mov
mov
inc
add
ja
inc
xorl
test
adcb
in
jl
sbb
pop
out
ljmp
mov
dec
sbb
sbb
xchg
leave
sbb
mov
jbe
stos
sbb
lock
loop
cmp
rolb
insl
xchg
sbb
out
push
mov
push
pusha
or
stc
adc
adc
add
cmp
mov
jmp
sti
mov
lcall
loopne
sti
xchg
mul
gs
and
cmp
pop
cmpsb
cld
or
inc
test
and
sarl
subl
mov
dec
icebp
pop
iret
mull
lods
cmp
icebp
cld
sbb
popa
mov
fistpl
adc
xor
clc
jg
inc
pop
rcll
out
mov
adc
add
cwtl
rolb
inc
xchg
mov
cmp
fcoms
xchg
adc
sahf
mov
dec
repnz
dec
bound
jno
cmp
adc
push
xchg
mov
pop
push
xchg
repnz
adc
push
mov
scas
push
push
out
jecxz
mov
js
int
xchg
lret
push
jp
sbb
or
add
push
jmp
and
or
bound
ror
in
into
shlb
and
div
pushl
push
shlb
test
jg
mov
jecxz
fildl
frstor
fs
xor
std
mov
int
jbe
or
popa
leave
insl
enter
outsb
xchg
pop
decb
addr16
rcrl
and
fisubl
adc
ss
in
push
test
mov
inc
repz
mov
fstps
mov
lds
orb
dec
popa
xchg
xor
adc
cltd
popa
pop
push
cltd
rcrl
lods
push
imul
push
sarl
mov
sbb
std
mov
popa
and
mov
or
roll
mov
mov
sub
pop
and
add
dec
imul
jl
pop
pusha
jo
es
fistpll
pusha
mov
rcll
pop
xchg
mov
lcall
lods
push
rcr
add
cmp
mov
jp
mov
call
xor
sbb
dec
push
add
or
inc
mov
test
inc
subl
pop
or
out
dec
mov
dec
xor
xchg
xchg
rcl
mov
stos
ret
arpl
mov
or
mov
sbb
movsl
xor
jl
js
xchg
and
std
sbb
jl
dec
pop
jg
movsl
jno
xorb
mov
iret
repnz
xchg
test
xor
add
or
fmuls
test
pop
cli
mov
in
rol
fldenv
push
ret
adcb
test
adc
pop
adc
mov
popl
fistpl
orb
dec
lods
push
adc
pop
test
psubd
call
pop
mov
repnz
adc
popa
movsl
pop
idivl
or
add
pop
roll
cld
int
mov
movnti
sbb
or
mov
les
mov
inc
adc
cltd
mov
hlt
in
enter
fidivl
pop
nop
sti
push
jmp
xor
in
mov
sbbl
sub
mov
pop
cmp
jmp
push
in
fcompl
pop
and
out
dec
shlb
mov
in
or
sarb
sub
jp
int3
lret
push
gs
sti
push
cld
xor
jmp
sahf
mov
mov
push
adc
dec
xlat
push
adc
adc
or
sahf
nop
test
xor
inc
lods
pop
sub
sub
or
mov
cmp
bound
fimull
inc
rcrb
das
xchg
xchg
pop
aaa
sbb
int
sub
lods
out
sti
jecxz
lds
loop
push
mov
aas
bound
push
testb
frstor
pop
pop
adcl
outsl
xor
in
dec
dec
test
not
mov
push
scas
lcall
xchg
popa
in
jbe
inc
in
and
mov
popa
mov
sahf
loop
adc
cmp
push
jne
push
insl
jmp
js
mov
mov
mov
and
and
aam
push
add
mov
or
push
aas
sub
jbe
mov
push
hlt
xchg
dec
js
shlb
adc
add
insb
cmp
mov
insb
cmpsl
fmuls
dec
clc
mov
testl
cmp
outsb
into
and
push
xchg
dec
cmp
bound
and
and
xor
xlat
aam
sbb
jle
addr16
dec
arpl
out
scas
pop
imul
pop
test
subb
and
pop
add
arpl
stos
fildll
movsb
push
pop
push
outsb
enter
pop
das
add
dec
add
fistps
and
or
xor
inc
insl
cli
ret
fldenv
rclb
jo
mov
add
pop
loopne
scas
mov
mov
xor
mov
xor
int
push
nop
punpckldq
inc
xchg
cwtl
and
jo
add
lcall
cmp
push
or
xchg
or
imul
dec
les
addl
cmp
dec
lock
clc
icebp
mov
sbb
mov
clc
dec
pop
fcom
outsb
jno
addr16
rcl
es
sub
adc
cmpsb
cmp
aas
pop
sub
fistl
cmp
enter
loop
pop
mov
and
mov
dec
push
pop
mov
pop
data16
inc
dec
std
push
dec
inc
addb
jb
fildl
pop
loope
mov
nop
js
addr16
mov
inc
adc
xor
cltd
adc
cmp
insl
test
add
push
and
mov
loop
pop
push
sbb
or
cmp
mov
push
jno,pt
and
cmp
mov
mov
push
mov
cmp
inc
mov
inc
mov
mov
lods
cli
sub
icebp
adc
mov
leave
xlat
and
or
adc
mov
insl
jg
push
jmp
mov
lret
add
inc
lods
mov
hlt
fisttps
sbb
enter
cmp
das
xchg
xrelease
add
jb
andl
test
lret
cld
add
jle
cwtl
stc
ret
mov
nop
and
cmp
cld
into
jmp
idivb
mov
in
or
inc
and
inc
fwait
lock
mov
lret
fisubl
pop
lds
mov
mov
sbbl
xchg
adc
add
jge
push
test
mov
pop
pop
sbb
inc
adc
fimuls
mov
cs
inc
xchg
mov
xor
enter
inc
push
adc
es
pop
movsl
sbb
div
mov
or
lods
adc
sbb
and
sbbl
pushf
mov
lret
add
pop
cmp
aam
stc
sbb
push
psubsb
lret
push
sbb
cmp
ret
in
sub
jle
xlat
adc
xchg
leave
and
xor
xchg
dec
out
mov
lcall
or
sahf
fadd
stc
sub
pop
cltd
cmpsb
or
aad
repnz
xchg
popf
fsubs
xor
lret
outsb
loope
mov
mov
outsl
and
inc
adc
cmp
sub
test
xchg
jae,pt
fdivs
dec
inc
xchg
pmaxsw
mov
mov
jmp
cli
mov
lahf
test
mov
push
pushf
in
fs
mov
jns
mov
repz
mov
outsl
xchg
inc
dec
xor
or
scas
inc
or
push
push
dec
xlat
inc
cmp
ja
jmp
push
or
cwtl
add
cltd
clc
dec
fldt
rclb
jp
jne
cs
and
xchg
sbb
cmp
push
or
and
icebp
pop
push
sbbl
call
push
movsl
lods
add
outsl
xor
dec
push
mov
les
push
add
divl
cmpsb
fs
mov
iret
dec
xor
jns
pop
scas
sub
add
dec
dec
jbe
jle
out
jl
lret
sbb
out
imul
lds
jne
lret
imul
push
pop
test
add
in
push
in
pop
adc
lods
gs
popf
imul
sti
inc
cmpsb
sub
cs
lock
jge
mov
xchg
jb
mov
jge
and
test
adc
inc
movsb
stos
jb
xor
ljmp
ds
rcrb
push
push
jns
nop
adc
pop
add
cmc
mov
lret
push
stos
push
add
and
dec
cmp
xor
bound
adc
xor
ja
test
mov
add
add
incl
mov
xchg
add
pop
out
pop
sarb
in
insl
test
repnz
xlat
sbb
aaa
cmc
push
jno
jno
lahf
cli
sub
stos
imull
mov
cmp
fldenv
or
xlat
fdivl
sbb
addb
fsubrs
inc
or
jle
aas
mov
jnp
outsb
pop
test
ds
loop
insl
in
jns
aas
and
cmp
insb
imul
lods
pop
mov
xor
outsl
lcall
push
arpl
jns
sub
iret
insl
jl
dec
cmp
or
cmp
imul
pop
ds
vphadddq
mov
test
sbb
rcr
xchg
and
cmc
addb
cli
push
shrl
in
test
cmp
ja
xchg
fsubp
scas
fisubrl
mov
scas
xchg
jp
fdivl
inc
pop
cmpsl
mov
iret
lret
hlt
pop
cmp
lods
mov
test
adc
push
xchg
xchg
fisubrl
int
mov
mov
push
shl
xchg
bound
mov
mov
cmp
xor
in
or
mov
inc
jno
sarb
leave
dec
mov
xchg
inc
insl
add
mov
xor
cmp
push
mov
aaa
inc
scas
xchg
cld
mov
addr16
fnsave
xchg
aaa
rcrl
jmp
into
in
jge
inc
pop
enter
subb
sahf
loopne
xchg
das
movsl
push
or
les
fs
ret
sub
mov
fdivr
cltd
or
jg
outsl
and
fwait
cmp
jno
add
int3
out
stos
mov
ds
cmp
jae
ja
cwtl
out
push
pop
aad
cmp
adc
sub
rcll
fbld
cmc
mov
orl
xor
das
jle
mov
lahf
cmpsl
clc
ss
stos
add
mov
iret
ret
inc
decb
mov
aas
jl
pop
roll
cmp
repz
decb
mov
dec
mov
xchg
pushf
push
add
in
mov
pushf
in
lret
sbbb
sti
cmpsl
pop
shrb
mov
push
mov
inc
inc
pushf
sti
jo
and
stc
or
roll
cltd
mov
dec
or
mov
mov
push
addl
xor
int
inc
in
pop
cmpsb
outsb
inc
iret
aad
xchg
fbld
xor
test
xchg
nop
adc
dec
adc
cmp
adcb
sahf
std
xchg
dec
js
jecxz
or
stos
aas
in
mov
es
jae
popa
cmpsb
cltd
mov
pop
mov
inc
mov
dec
cwtl
pop
adc
dec
and
test
mov
dec
arpl
adc
fsts
movb
daa
mov
mov
cmp
xchg
leave
sbb
scas
jb
and
xor
or
jo
jno
jp
or
jb
dec
je
and
aad
xor
mov
pop
push
inc
adc
sbb
inc
push
iret
adc
cld
xchg
jg
or
adc
cmpsl
pop
push
xorb
inc
mov
out
adc
scas
and
or
adcl
les
mov
and
ret
inc
add
cli
mulb
mov
mov
mov
or
outsl
xor
fwait
mov
cmpsb
mov
ret
sbb
jno
or
into
inc
addr16
leave
arpl
or
dec
call
mov
and
cmp
hlt
xor
fs
jne
insl
arpl
hlt
ja
jnp
xchg
jno
add
cmpb
mov
sub
out
rcr
dec
cmp
and
xchg
enter
add
popf
xlat
imul
cmc
push
push
push
sbb
jge
sti
and
fs
sbb
int
dec
mov
cld
jmp
mov
pop
inc
cmp
dec
in
add
in
int
dec
sbb
adc
adc
enter
aaa
xor
mov
rol
xchg
loope
mov
aam
data16
inc
out
cmc
add
mov
jg
cmp
mov
xchg
add
jbe
pop
aaa
and
lock
out
pop
mov
sahf
shrl
lods
push
dec
insl
push
jmp
jl
lea
xor
cmc
pop
jl
and
outsb
int3
mov
aaa
shl
lret
add
lea
and
je
push
push
pop
sbb
rcll
push
xlat
out
iret
mov
orl
sti
xor
rcrl
vpmadcsswd
es
loopne
mov
adc
jno
dec
rorl
aas
rclb
push
ljmp
inc
cmp
inc
xor
pop
mov
lahf
dec
es
cmp
jl
fstps
mov
std
inc
loopne
shll
repz
cmp
push
add
insl
jne
mov
je
lcall
cmp
xchg
adc
xor
push
adc
js
imul
pop
test
es
mov
ss
mov
in
xlat
and
cmp
lea
mov
shll
jbe
ljmp
sahf
pushf
or
dec
clc
cmp
fstpt
jl
popl
mov
jl
mov
enter
lods
ss
xchg
sub
fcom
and
lret
das
jbe
fld
push
add
js
jecxz
jbe
inc
or
mov
xorb
lods
inc
inc
fistl
or
aad
add
inc
mov
das
outsb
in
int3
sbb
int
xorl
ds
in
xor
fisubl
ss
pop
push
cmp
lret
rorl
push
popa
sbb
mov
jmp
adc
jg
xchg
mov
sbb
inc
mov
xchg
cmp
xlat
or
mov
pop
jb
movsl
call
cld
imul
pop
shll
sbb
mov
add
nop
sbb
pushf
lahf
fdivs
addr16
adc
leave
sar
jbe
cltd
pop
cmpsb
scas
xor
flds
movsb
and
das
int3
jl
clc
sbb
mov
data16
cli
sahf
add
mov
cld
pop
xchg
dec
jmp
jg
mov
loop
insl
or
mov
pop
fnstsw
popa
int3
and
inc
sub
outsl
jb
fptan
sub
addr16
jecxz
cwtl
push
jp
dec
popf
mov
aam
or
nop
or
lahf
rorb
rorb
fisubrl
pop
icebp
pop
das
sbb
inc
mov
int
cmp
jge
je
xchg
aad
addl
and
and
fs
sbb
mov
fucomp
repnz
gs
push
pop
nop
rcrl
push
lea
mov
mov
clc
or
adc
outsl
or
mov
jl
push
pop
cli
jne
xlat
jb
frstor
pop
lret
mov
pop
mov
aas
inc
xchg
mov
push
jle
sub
push
ds
insb
jmp
push
out
fs
mov
jge
xor
cmpl
in
cmp
ficoml
xchg
lods
ljmp
and
test
insl
insl
jmp
add
fwait
jl
adcb
mov
pop
pop
imul
sbb
fcomp
clc
and
stc
out
add
aaa
mov
sub
std
hlt
bswap
popf
js
mov
in
jle
dec
mov
sbb
and
xchg
pusha
popa
fsub
dec
lds
push
orb
repnz
mov
add
inc
aam
add
in
sbb
cltd
stc
xor
loope
dec
and
xor
sub
and
stos
roll
cmpsb
lea
dec
adc
nop
out
and
mov
mov
sbb
lea
adc
sub
sbb
xor
inc
mov
xchg
inc
les
ds
jnp
popa
iret
sti
or
mov
jecxz
xchg
mov
mov
dec
push
gs
mov
push
push
decb
adc
push
xchg
into
jg
inc
pop
out
mov
pop
jmp
xchg
and
dec
inc
popf
xor
fisttpl
dec
mov
push
dec
stos
xchg
dec
mov
loopne
inc
enter
sub
dec
cmp
mov
mov
out
mov
enter
dec
mov
cmpl
pop
into
dec
pop
scas
push
add
dec
sub
notb
and
sbbb
add
iret
clc
shl
pop
cwtl
scas
xchg
mov
lods
xlat
lret
adc
ret
xchg
pop
ret
mov
mov
icebp
jo
jecxz
pop
xchg
lods
push
pusha
test
rorl
shlb
adc
push
push
mov
or
decl
or
xchg
mov
add
clc
mov
adc
aam
mov
cld
imul
fsubp
test
bound
jg
lock
adc
cmp
mov
mov
push
cld
sub
cmp
fbld
dec
fs
adc
lahf
xor
dec
pop
fs
clc
sti
test
jb
cs
inc
mov
or
cmpsb
adc
or
das
ror
repnz
cmpl
imul
les
push
dec
addr16
sahf
cmpsb
aad
xchg
arpl
rorl
and
or
bndldx
jns
mov
mov
push
dec
notb
sub
sarl
or
test
fidivrl
mov
stc
and
cmp
mov
in
stc
mov
loope
mov
mov
mov
aaa
and
cmpsl
mov
mov
xchg
cmp
mov
mov
push
xchg
outsl
mov
je
xchg
and
pushf
aam
xchg
jo
fidivrl
dec
mov
mov
mov
mov
cmp
test
out
xchg
icebp
jl
ficoml
aad
gs
jg
arpl
jl
hlt
sub
mov
lahf
push
sbb
cmc
testb
loope
mov
fsubl
jno
dec
xlat
clc
repnz
mov
aas
insb
cmp
xor
scas
sti
xchg
mov
push
sarb
in
neg
pop
or
mov
fwait
call
sti
lods
push
nop
sahf
push
in
shl
and
pop
mov
push
fcmovne
bound
fwait
in
adc
test
outsb
xchg
cmp
daa
jg
cmp
dec
not
lock
add
or
cmp
mov
jg
mov
dec
mov
test
pusha
mov
push
push
sub
lds
adc
adc
test
das
fcmovnu
out
fisttpll
adc
es
lahf
xchg
stos
in
dec
push
mov
add
cmp
sub
es
bound
push
inc
mov
push
xlat
adc
clc
testl
icebp
shrl
ja
imul
mov
movsl
ret
mov
push
hlt
add
mov
lret
pop
popa
rcll
mov
in
inc
imul
adc
push
xor
lock
loopne
jp
xor
xor
frstor
xor
fcoms
insl
testl
mov
mov
mov
mov
cmp
jbe
cmp
leave
jmp
lods
ljmp
xchg
in
enter
icebp
cwtl
xchg
fisttpll
fcomi
imul
xor
sbbl
lahf
sub
dec
fdivr
stc
sub
mov
movsl
rolb
mov
negb
sub
jge
or
jl
mov
xlat
ss
adc
pop
sub
fsubrs
push
fimull
in
lds
mov
pop
adcb
mov
sbb
push
sub
jge
icebp
pop
lcall
scas
lahf
fs
jmp
pop
dec
fldcw
sub
stos
decb
stc
fldcw
fildll
jnp
cltd
pop
mov
fistpl
xchg
iret
or
sbb
sub
cmp
dec
popa
cmpsl
popa
stc
dec
inc
hlt
mov
xor
pop
rclb
adc
das
jp
adc
add
sbb
jp
insl
imul
imul
xchg
xor
cmpsb
sub
mov
hlt
pop
cmp
and
adc
in
jbe
mov
fs
movsl
sbb
dec
xchg
je
dec
rep
clc
sbb
fistpll
add
repz
ljmp
sbb
mov
sbb
dec
adc
arpl
cmp
jl
test
push
xchg
push
jne
xorb
mov
xchg
orl
movsb
xor
insl
cmp
push
mov
fmulp
mov
aam
fstl
ljmp
inc
cmc
mov
adc
mov
mov
inc
adc
xchg
xor
stos
inc
adc
sbb
stos
pop
or
push
das
or
xor
cmp
mov
aad
inc
push
shrb
fwait
push
push
sbb
xor
aaa
xor
repnz
loope
test
or
shr
rclb
xchg
push
jnp
sbb
xchg
std
mov
daa
pushf
xchg
sub
xor
mov
and
pop
push
dec
cmp
mov
pop
jb
xor
dec
enter
lock
sti
rorl
pop
ds
dec
xchg
cmpsb
fs
jo
mov
stos
call
pop
repnz
xlat
shr
pushl
mov
add
das
out
enter
stos
dec
call
lea
adc
lahf
mov
and
mov
call
sub
lahf
mov
mov
les
dec
lods
sbbl
inc
gs
pop
xchg
int3
es
movsb
cld
push
push
push
insl
sarb
mov
insl
or
inc
aam
repnz
cmp
test
jns
add
adc
and
mov
mov
mov
cs
lds
push
in
movsl
fstpt
aaa
andl
cs
fwait
icebp
js
ds
jne
adc
pop
ficoms
inc
js
jo
es
fsts
jmp
mov
mov
cmp
mov
mov
int3
aam
movsl
mov
aas
push
jnp
xchg
dec
add
xor
loopne
add
or
cld
xchg
xor
adc
sbb
data16
jle
push
xor
bound
xor
cmp
outsl
cmovns
pop
xchg
aas
gs
cmp
jo
mov
mov
rcl
test
sub
sbb
std
ret
xor
je
scas
adc
imul
ret
pop
jmp
sub
arpl
and
pushf
call
mov
push
fildl
add
lcall
mov
jae
cmpsl
sub
notl
cmp
loop
mov
in
mov
icebp
in
xor
mov
push
jg
jnp
add
fwait
push
test
xchg
hlt
and
or
cmp
adc
loop
push
mov
lret
mov
mov
mov
aam
clc
mov
push
gs
es
std
nop
gs
in
lock
mov
mov
pop
lods
fstpt
pop
mov
adc
push
xchg
push
scas
jmp
bound
in
mov
mov
jno
ss
cmp
jno
mov
in
testl
xor
sbb
loopne
clc
imul
adc
dec
dec
add
inc
out
in
xlat
fnstsw
jecxz
and
and
nop
cli
xchg
sub
lret
rcll
ja
cmp
popf
insl
insl
mov
xor
lcall
data16
jae
or
jmp
mov
mov
fisubs
push
outsl
or
mov
in
jmp
loopw
push
mov
jmp
repz
mov
mov
popf
sbb
cmp
cmp
or
mov
cmp
aas
cmpsb
lret
sub
push
dec
je
and
jne
push
xchg
aam
ret
mov
inc
stc
mov
sbb
bound
int
and
add
insl
mov
cmp
imul
outsb
insl
cmpsl
jecxz
adc
fildl
adc
pop
cmp
shl
jle
aaa
nop
fimuls
int3
pop
xchg
test
adc
arpl
sbb
pushf
inc
addr16
aad
out
je
push
xor
jp
shll
shll
or
gs
fyl2x
lea
jg
in
pop
out
jne
sbbl
push
xchg
jmp
negb
arpl
and
cmp
adc
pop
test
cmp
pop
sub
jb
xor
fbld
loop
loop
xchg
mov
popa
repnz
popa
push
pop
lods
fmull
lret
adc
imul
push
push
adc
cld
lea
mov
scas
dec
cmpsb
faddl
add
cs
push
cli
icebp
ja
inc
aaa
inc
mov
pop
popa
imul
iret
repnz
jns
dec
cmpsl
fcmovnbe
pop
jne
mov
lea
dec
addl
std
fsubs
cmp
mov
mov
icebp
jns
sahf
inc
or
mov
dec
adc
dec
pop
es
std
stc
xor
sbb
ficoms
jae
imul
push
sub
or
xor
fs
pop
adc
mov
stos
cwtl
or
or
sub
xchg
mov
movsl
scas
rorl
bound
aas
jno
cmp
xor
jge
shl
shrb
pop
xor
fcomps
ret
push
mov
scas
icebp
mov
bound
push
lcall
inc
lret
fwait
jae
out
push
and
pop
pop
add
cmpb
adc
sbb
cmp
lods
inc
and
subb
in
push
je
jnp
lds
mov
les
notl
jp
and
adc
aam
jecxz
mov
movsb
in
or
jp
fcmovu
divl
shrl
adc
arpl
jbe
arpl
cmp
pusha
mov
pop
dec
popf
ljmp
push
jecxz
js
outsl
mov
push
pop
lods
lock
stc
mov
fbld
mov
mov
lea
fildl
pop
cmp
xor
sub
inc
fldl
rclb
fcmovbe
fnstcw
out
mov
mov
jne
mov
jl
pop
inc
xorl
arpl
enter
jns,pt
jmp
movsl
xlat
scas
mov
sub
aaa
xor
in
xor
xchg
inc
mov
jno
in
mov
cltd
or
ljmp
dec
inc
sub
xchg
out
inc
jl
add
mov
stc
shr
fwait
adc
and
test
push
pop
and
clc
loopne
popf
fadds
mov
mov
pop
sub
mov
or
add
add
jmp
fstps
inc
stc
out
jg
int
cmp
cld
jnp
gs
jae
je
popf
cmp
roll
jbe
add
dec
pop
in
rcrb
jg
loope
xchg
cmp
cmpl
push
jne
sub
mov
adc
inc
mov
lret
mov
dec
push
inc
mov
mov
sbb
xchg
out
scas
or
add
movsb
pop
stos
cmp
cmpsb
xorl
loop
xor
gs
jae
adc
pop
xchg
cwtl
std
sbb
push
and
adcb
cltd
rcrl
lret
clc
scas
loop
sub
lret
ja
xor
xor
fadd
fisttpl
mov
test
cmpsl
pop
jge
adc
cmp
nop
ffreep
mov
mov
loopne
adc
sti
sub
dec
aas
movsb
mov
insl
sbb
pop
xchg
mov
aas
and
adc
mov
sub
mov
scas
outsl
mov
ficomps
sub
cmp
lea
cmpsl
ja
adc
aaa
imul
mov
outsl
cmp
push
test
lret
aas
jmp
dec
xchg
pcmpeqw
loopne
inc
mov
enter
add
inc
push
in
sub
adc
int3
test
mov
sub
aas
shll
into
push
imul
popa
cmpsb
aam
call
xor
jno
fldcw
out
dec
data16
mov
pop
jno
leave
push
add
into
mov
lea
adc
pop
cwtl
cmpl
rcl
pop
xor
adc
aaa
mov
les
xchg
xchg
xchg
and
xor
lock
mov
add
xchg
mov
test
fcoms
test
test
popf
lea
jl
js
dec
out
ljmp
cmp
in
js
add
stc
mov
dec
inc
or
test
loope
pop
sub
push
sub
daa
dec
push
shrb
mov
adc
repz
mov
popa
cmp
loop
cmp
inc
push
out
xchg
xor
jp
mov
cli
aaa
shll
jmp
adc
nop
inc
rclb
aad
out
test
inc
jecxz
sub
sub
scas
mov
imull
add
xchg
imul
test
cli
loop
int3
pop
ret
fidivs
sbb
daa
cmpsl
push
aam
xchg
add
pop
and
gs
andb
dec
xor
jle
dec
shl
push
fstpl
xor
xor
cmp
test
push
add
push
cmpsl
push
add
push
dec
pop
in
out
sti
fwait
shll
mov
cmp
fnstsw
sbb
movsl
dec
xlat
inc
jbe
andb
sub
mov
notl
int
pushf
cmpl
daa
xchg
fs
push
xchg
sbb
pop
std
pusha
lods
mov
inc
ds
fisubrl
lret
loop,pn
push
inc
add
and
cmp
fmuls
in
not
pop
ds
adc
pop
mov
dec
push
jp
call
ljmpw
ds
fcomp
outsb
jge
push
sti
lds
cld
aas
cs
jge
push
sub
jmp
call
dec
jo
pop
jge
dec
dec
jle
jge
adc
nop
lret
mov
cmp
test
or
ret
adc
mov
adc
jns
inc
rcr
push
insb
sbb
dec
out
pop
inc
cmp
and
fs
adc
dec
adc
and
pop
icebp
std
mov
lods
shlb
call
sbb
je
mov
andl
out
movsl
scas
fldcw
lcall
push
xchg
rolb
sub
xorl
popl
insl
add
mov
sbb
adc
sbb
mov
push
pushf
jbe
sahf
inc
push
add
out
fnstenv
cwtl
in
fsubl
xor
test
lret
cmpsl
pop
cs
ret
ret
xchg
mov
icebp
inc
xor
dec
icebp
dec
iret
andl
loopne
inc
push
push
jbe
or
int3
js
cmp
xchg
sub
sub
push
cmpsl
cwtl
xor
mov
lret
xor
and
mov
fld
shll
sti
fwait
jns
and
pop
inc
mov
sbb
xor
movsl
pop
adc
xchg
or
iret
inc
mov
push
lcall
jns
scas
scas
cmc
mov
or
stos
fs
jg
add
push
cmp
cmc
lock
sbb
jb
dec
xlat
lds
mov
cltd
into
sbb
cmp
cmp
xchg
mov
push
or
or
lret
jns
jae
les
les
jae
bswap
in
push
lds
dec
pushf
mov
push
mov
mov
cwtl
cltd
loope
and
clc
call
call
push
jae
lahf
scas
adc
in
notl
imul
arpl
xor
sti
js
and
xorl
aad
ja
out
arpl
call
pop
cmpsl
xchg
jg
jo
xor
sub
les
enter
ds
dec
ficompl
jo
in
int
adc
jns
call
mov
leave
xchg
lock
cmc
sbb
xchg
icebp
mov
das
fucomi
iret
lock
notl
repz
mov
test
xor
inc
jmp
aam
cwtl
jb
sahf
pop
por
push
jl
repnz
js
jb
ljmp
enter
mov
daa
mov
daa
xchg
rclb
jp
jns
push
xor
mov
fdiv
sbb
inc
adc
add
mov
inc
test
dec
sbb
mov
inc
scas
mov
inc
or
pop
sbb
cmpb
dec
in
leave
decl
xchg
leave
test
test
mov
cs
dec
push
mov
mov
ljmp
icebp
push
adc
scas
dec
sti
std
out
inc
add
ret
loope
mov
stos
cmp
dec
sbb
iret
mov
and
push
fisttpl
push
je
mov
or
out
inc
rcl
jle
pop
les
and
movsl
xor
aas
mov
jne
fsubp
int3
dec
aad
fnstcw
movsl
lea
lret
and
shll
xor
pop
rolb
imul
cmpb
jg
push
or
pop
adc
je
and
xchg
nop
sub
cmp
call
cld
sbb
dec
jmp
in
ss
repz
cmpsb
shrl
pop
hlt
jl
pop
push
cli
jmp
xor
inc
test
call
xchg
cmp
push
cmpsb
movsb
sub
push
dec
jle
and
data16
cmpsl
pop
data16
je
mov
outsb
test
pop
lock
sub
add
xchg
int
inc
popa
jp
cmp
pop
pop
inc
lods
xchg
xchg
or
cmovb
add
xchg
pop
sbb
mul
adc
enter
stc
cmc
ret
and
or
int
pusha
lods
ss
pushf
lock
push
adc
add
shrl
fidivrl
cltd
stos
les
xchg
adc
iret
push
cwtl
enter
jl
pop
icebp
or
into
hlt
cld
enter
pop
ret
je
cmpsb
sub
std
stc
push
push
jl
dec
cmc
mov
scas
mov
push
scas
dec
ss
lahf
inc
inc
sti
leave
lock
push
andb
rorl
inc
or
or
rol
insl
mov
xchg
test
clc
in
adc
mov
lret
aaa
lahf
and
inc
aas
scas
scas
je
movsb
mov
pusha
dec
scas
sub
int
mov
xchg
jo
aad
sbb
jg
adc
dec
cmpsb
sahf
jecxz
mov
jo
mov
inc
push
and
jg
sub
mov
mov
popf
movsb
xlat
mov
push
es
sbb
stc
sub
push
ret
pop
andb
mov
mov
add
add
rcrl
jl
xchg
sbb
xchg
sub
bound
addb
mov
lods
outsb
add
ret
pop
es
sub
in
stos
xchg
adc
or
test
cmp
lea
jno
hlt
xchg
push
add
daa
rcrb
rol
popa
or
into
shl
rep
scas
mov
fldcw
mov
inc
rolb
sbb
lds
push
mulb
inc
lea
adc
xlat
and
sub
inc
sarl
xchg
in
aas
mov
and
dec
or
mov
mov
jl
dec
adc
pop
xor
inc
jecxz
mov
bnd
sbb
mov
pop
data16
stos
dec
mov
stos
dec
orl
sub
out
lret
cli
fldl
cmp
mov
sbb
pusha
fdivrl
or
jbe
inc
xchg
mov
sub
jp
pop
mov
xor
pushf
lods
push
cltd
jmp
hlt
xlat
aaa
ja
mov
cmp
test
iret
daa
les
dec
ljmp
sti
mov
push
fcomi
out
pushf
sub
fld
aam
or
shlb
push
mov
inc
or
jae
outsl
lods
mov
push
adc
cmp
mov
daa
icebp
push
inc
xor
cli
xor
mov
rol
push
movsl
xchg
jno
loope
cli
and
imulb
fdivl
stos
sub
xor
jg
pop
popf
scas
cmp
outsb
fcmovne
mov
fmul
loope
into
mov
test
addr16
in
daa
push
outsl
push
push
rcrb
jge
and
out
xchg
pop
and
push
incb
outsb
out
add
sbb
fldcw
mov
stc
and
rorb
imull
inc
in
rorl
jge
pop
add
testl
dec
mov
push
sbb
cwtl
clc
xor
sub
mov
lods
inc
popa
push
xor
mov
loopne
push
add
into
fisttps
add
ds
test
lea
call
add
in
dec
cmp
jb
push
and
repnz
pop
mov
and
cmp
push
add
pop
ljmp
aaa
ret
mov
jns
xor
xor
fisubl
mov
pop
jae
stos
out
mov
mov
sbb
xchg
xor
inc
cmp
stc
cmpsl
or
pop
lods
mov
inc
jno
in
cwtl
cld
rcrl
loopne
aam
inc
push
sbb
inc
jmp
jns
xor
or
push
bound
cmpsb
sub
arpl
push
pop
outsb
or
pop
mov
lcall
pop
addb
fcompl
lods
ficoms
push
dec
fdivrl
jns
push
and
mov
adcb
jp
addr16
fs
xchg
test
sbb
push
inc
dec
cli
sub
mov
stc
repnz
fiadds
mov
rol
xor
pop
mov
xchg
cmp
sahf
dec
mov
dec
xor
sbb
je
dec
jo
mov
bound
xchg
mov
scas
dec
lods
lods
mov
repnz
mov
jae
jns
mov
mov
cmp
mov
adc
mov
jns
movzwl
sbb
jmp
out
stos
inc
inc
jo
test
pop
cmp
mov
cmp
sub
pop
jae
sub
or
xchg
or
push
je
sub
push
out
addb
push
negb
sbb
dec
jl
mov
mov
cmp
ret
sbb
sbb
dec
sbb
inc
int3
jle
xlat
inc
push
sub
or
pushf
jbe
outsl
lret
imul
inc
fld
leave
popa
lret
mov
in
outsl
sar
jmp
out
mov
sbb
cmp
in
dec
stos
inc
mov
lret
mov
mov
mov
sub
cmp
imul
push
sbb
ret
sbb
mov
dec
lcall
push
nop
pop
sub
lods
ds
mov
xor
mov
or
mov
pop
lods
dec
add
cld
cmp
add
sarl
imul
popf
cld
stc
mov
cmp
add
mov
hlt
ja
cmc
push
pop
cmp
push
push
and
jno
pop
mov
sub
insl
push
lahf
enter
outsb
movsl
mov
add
pop
push
cmp
shll
neg
out
in
inc
shlb
int3
lahf
std
and
jge
inc
jmp
lret
xchg
sbb
push
andl
cmp
dec
and
rorb
xor
push
mov
push
sub
adc
mov
sub
inc
into
es
lods
daa
cmp
add
jl
jle
dec
imul
xchg
push
imul
fnsave
idivb
sbb
or
push
dec
imul
pop
mov
fdivl
or
orb
jmp
lods
in
jae
scas
test
hlt
xchg
jg
mov
sbb
inc
add
jle
das
and
mov
lret
adc
add
adcb
fistpll
add
adc
push
pop
and
add
pop
insb
shl
xchg
mov
ret
jg
dec
hlt
xchg
aam
dec
pop
xchg
cmc
shlb
pop
cmpsb
pop
cmp
sub
js
cmpl
sbb
test
ja
enter
sub
mov
inc
out
imul
push
jnp
mov
sbb
dec
call
repnz
sub
pop
or
push
loope
and
fidivl
testl
adc
dec
or
cmpsb
rcl
lcall
hlt
push
cwtl
mov
sbb
push
xchg
adc
cld
cmpsl
sub
test
enter
test
ja
pop
stos
mov
pop
stos
push
and
lret
push
add
notb
cmc
mov
fildll
and
sbb
arpl
test
mov
outsl
in
mov
out
out
frstor
push
push
xchg
or
lea
loop
sbb
xlat
push
negl
sti
ljmp
ljmp
push
push
push
cli
in
xchg
pusha
test
adc
mov
imull
leave
adc
sub
sbb
mov
outsl
mov
lcall
add
sbb
aam
cli
inc
int3
repz
jl
loope
push
cld
inc
mov
lds
dec
mov
mov
pop
pop
imul
mov
mov
add
push
pusha
pusha
sub
jmp
sbb
movsl
addl
xor
pop
xchg
xchg
push
sbb
jb
pop
fisubl
loope
adc
mov
mov
mov
scas
push
mov
negb
xor
adc
cmp
insb
mov
sti
daa
sub
jmp
adc
mov
loop
test
sub
ss
jecxz
lds
pop
xor
add
mov
cli
addr16
and
xor
xor
test
pushf
xchg
enter
sbb
repz
mov
dec
int3
sub
sbb
fisttpl
mov
mov
dec
pop
xor
js
mov
cltd
push
jne
ficompl
or
in
clc
pop
pop
xor
addl
add
mov
dec
sete
lea
gs
and
xor
jg
addr16
pop
dec
pop
xor
adc
fimull
es
jmp
inc
inc
fcomps
jae
fistps
add
ds
loopne
inc
enter
loope
js
lea
xchg
das
or
xchg
fistpl
decl
mov
jae
push
rorb
xchg
mov
sbb
pop
gs
shl
stc
filds
stc
in
fadds
std
cmc
sub
je
aas
dec
add
jle
inc
push
stc
pop
mov
lds
push
jnp
push
push
ss
adc
hlt
add
sarb
pop
adc
bound
add
add
xor
outsl
mov
fistpl
rorl
xor
cmp
shll
fidivrs
int3
jno
xor
test
sahf
stos
and
cli
fistpll
pop
imulb
pop
and
xchg
sbb
test
pop
test
sub
pushf
push
mov
sbb
repz
scas
mov
fadd
fnstcw
das
std
ret
mov
jo
les
add
and
sahf
int3
sub
and
adc
shlb
cmp
pop
bound
xchg
sbb
sbbb
sbb
sahf
scas
mov
add
or
xchg
sbb
iret
rcrl
jmp
sbb
shrb
and
add
test
push
sub
or
sbb
add
push
sub
mov
lods
xor
sbb
jns
xchg
xchg
les
cmp
pop
sti
jbe
cmp
ret
int
sbb
sbb
inc
les
pop
mov
scas
ss
push
and
mov
bound
loop
cmp
sub
cmp
mov
push
cwtl
lret
aam
adc
mov
lds
adc
mov
cmpb
pop
pop
lahf
jns
mov
repnz
loop
push
gs
js
or
hlt
sbb
xchg
scas
mov
roll
fmull
pop
adc
in
xchg
ret
int
ret
mov
mov
mov
fnstcw
push
jo
imul
sbb
and
jns
loope
arpl
insl
jg
ss
fwait
pop
dec
stos
stos
repz
mov
and
and
mov
fwait
dec
inc
pushf
push
stc
orb
pop
test
lds
test
setl
dec
int3
dec
fstps
dec
rcrl
xchg
sbb
sub
je
fnop
xchg
ss
arpl
or
mov
repz
pop
jb
cmp
xor
loop
jns
push
xchg
pop
lret
cmp
ret
lahf
clc
pop
loop
ja
push
mov
fmull
sbb
hlt
jbe
jo
leave
sbb
mov
cmpl
xchg
and
insb
dec
sbb
adc
pop
pusha
xchg
call
mov
sub
push
adc
fbld
xchg
fwait
dec
jg
mov
sub
mov
jge
dec
adc
add
pop
add
arpl
std
sbb
cmp
out
lods
into
loopne
sbb
lcall
daa
cmc
loopne
jne
inc
mov
repnz
mov
fmull
in
adc
fisubrs
mov
xor
or
aad
mov
mov
popa
cmp
std
sub
fdivl
push
and
jmp
inc
imul
jg
loope
xor
adc
mov
icebp
cltd
xchg
adc
ljmp
movsb
sbb
lock
jns
jle
mov
fnstenv
jecxz
cltd
insl
cmpsb
fidivs
push
lcall
adc
out
lock
imul
jb
adc
ret
mov
xchg
es
movsl
jb
ficomps
int
sbb
add
push
mov
out
sub
sahf
mov
repz
dec
cmc
clc
mov
sbb
into
in
mov
stc
mov
push
adc
int
out
mov
jecxz
pop
sub
push
sbb
pop
sub
sbb
cli
xor
shrl
std
pop
cmp
pop
outsl
sbb
push
xchg
aad
lcall
sub
imul
inc
scas
fs
mov
daa
les
cmc
adc
xchg
jne
pop
pop
jbe
and
jne
enter
mulb
inc
push
cmp
push
xchg
sub
pop
inc
xchg
lahf
negb
out
jmp
or
repz
push
outsb
mov
fisttps
addr16
lret
fdivrs
mov
jecxz
and
mov
pop
pop
pop
lods
js
cwtl
insb
ja
clc
js
and
dec
xchg
arpl
inc
or
std
dec
xor
mov
xchg
fcompl
xor
push
mov
cmpsl
adc
mov
in
adc
mov
daa
fisttpll
leave
lods
mov
daa
push
data16
movsl
imull
jbe
jno
aam
sub
dec
cmpsb
mov
mov
nop
fisttpll
push
in
shrl
or
ficoml
movsb
jbe
add
enter
clc
pushf
addb
std
fldcw
bound
push
fisubs
testl
js
inc
loop
and
lret
fnstenv
mov
inc
mov
pop
and
ret
fbld
mov
cmp
jns
fs
xor
dec
iret
inc
scas
sbbb
in
xor
jns
xchg
and
int
pop
adc
outsl
bnd
inc
add
xor
fimull
lret
fcompl
outsl
push
xchg
aas
xchg
nop
repnz
inc
inc
adc
pop
bound
jno
xor
sub
cld
sub
out
jbe
push
clc
add
aam
dec
fdivl
mov
fstps
inc
push
xor
jne
and
and
in
bound
pop
fisttps
fldenv
pop
and
or
dec
sbbb
in
and
in
inc
xor
movsl
inc
sbb
jp
jmp
repnz
popl
std
xor
pop
insb
jmp
xchg
or
in
jno
push
fsubl
and
imul
sbb
inc
faddl
cmpsl
addr16
fimuls
ds
cmpsl
xchg
imul
rcr
out
loopne
stos
add
imul
scas
sbb
and
add
stos
stc
sbb
sub
popa
int
orl
icebp
hlt
enter
icebp
add
inc
sbb
icebp
cmp
xor
xchg
ljmp
xor
sbb
cmpl
das
cmp
sub
dec
sub
icebp
rolb
in
jae
int3
fstpl
jmp
dec
jae
add
and
je
in
fcompl
aam
pusha
pop
add
sbb
mov
ljmp
lods
sbb
int
jmp
enter
insb
dec
mov
push
aam
xchg
imul
scas
and
loopne
pop
shl
out
sub
jnp
ja
pop
outsl
fdivrs
call
fcmovnu
pusha
mov
xchg
sbb
data16
cwtl
dec
insl
xchg
pop
or
pop
sub
andl
and
and
test
lcall
jg
xchg
repz
mov
or
adc
sbb
sub
and
sub
sti
fimuls
hlt
enter
push
pusha
jp
push
pop
mov
sub
aad
mov
and
daa
repz
testb
mov
int3
add
xchg
push
ljmp
out
pop
scas
adc
push
out
jle
sub
and
mov
inc
fstps
iret
mov
lods
sub
dec
mov
ljmp
je
movsl
add
xor
lret
test
sub
ja
add
mov
stos
scas
leave
jo
add
jne
and
jne
xor
cwtl
and
pop
adc
loopne
adc
mov
in
enter
add
sbb
inc
mov
cli
lods
dec
dec
fcoml
stc
addl
jmp
pusha
dec
mov
inc
jl
movsb
push
aaa
lods
shlb
dec
inc
jne
and
and
test
andl
test
mov
push
roll
push
dec
cmp
mov
xchg
adc
fsubrs
popa
call
mov
xchg
push
mov
jne
jne
mov
rclb
inc
push
dec
in
clc
fildl
jmp
inc
adc
jne
xchg
jl
xor
lcall
cltd
or
lcall
shll
ds
mov
test
jae
or
fnstenv
in
les
push
sbb
scas
aad
jge
or
dec
movsl
rcr
mov
popa
ljmp
idivl
xchg
mov
adc
mov
dec
add
roll
movsl
adc
xor
out
mov
imul
cmc
sbb
jmp
mov
mov
xor
shll
into
fildl
stc
jle
inc
sub
das
test
push
pop
stos
enter
sub
sarl
dec
mov
add
lods
sub
mov
add
aad
xor
out
xchg
adcb
cmpsl
lret
pop
imul
je
pop
jle
push
sbb
leave
ret
mov
add
mov
ret
cwtl
repz
pop
mov
adc
movsl
test
divb
dec
jo
pop
or
sbb
mov
roll
cmp
mov
fiadds
stc
add
mov
fidivl
movsb
xlat
fcoml
scas
push
ss
stos
iret
cld
aam
and
push
xlat
clc
jmp
icebp
jp
pop
in
lea
push
fidivrs
jno
jle
lds
out
shll
and
outsl
fisttps
loopne
add
ljmp
add
mov
mov
cmp
insb
aas
sub
mov
cmpsl
stc
jmp
mov
lret
mov
sub
ret
cs
cmp
mov
lea
cmp
xchg
jae
out
scas
inc
mov
xchg
mov
push
jp
xor
dec
or
mov
mov
icebp
mov
imul
ficomps
dec
jne
mov
std
jbe
lea
sbb
jecxz
xchg
sbb
out
inc
or
orb
xchg
pushl
jb
xchg
lods
shll
ja
movsb
jno
and
dec
mov
push
cmp
pop
lock
inc
stos
rcrb
adc
ss
in
ljmp
add
add
push
and
inc
arpl
sub
add
sbb
fs
in
mov
pop
adc
shlb
lods
jmp
ret
cli
sbb
shrd
rclb
leave
sbb
pop
and
inc
xchg
outsb
dec
test
aam
lret
adc
clc
push
js
add
cs
jne
shrl
mov
sub
mov
push
xlat
cmp
jg
shr
sub
call
sub
mov
or
jns
or
js
shl
dec
idiv
xchg
xor
mov
sti
and
dec
pop
xor
cld
hlt
mov
es
mull
jecxz,pn
add
pop
incb
mov
inc
xor
xor
loopne
mov
lret
negb
lret
sti
repz
xchg
sub
push
call
pop
jns
inc
divl
add
cmp
lds
loope
add
cmc
and
mov
adc
out
div
cmp
nop
inc
xchg
push
add
and
or
outsl
in
xlat
xchg
lahf
or
scas
aad
inc
mov
xchg
fstl
xor
iret
loopne
mov
fsubrs
push
js
stos
popf
bound
sti
aad
mov
and
dec
xor
call
jnp
mov
mov
xor
stos
or
sub
push
push
pop
or
adc
sub
ja
xchg
loope
movb
loop
pop
jmp
or
push
cmpsb
cli
mov
dec
add
push
je
int
fidivrl
or
or
jne
or
mov
iret
addr16
cmp
outsb
lods
inc
inc
daa
add
rclb
jns
mov
push
push
scas
rolb
mov
sti
add
das
ret
xchg
out
mov
insl
jb
xchg
fwait
ljmp
mov
sub
sub
fsubp
cmp
into
into
xor
push
imul
dec
or
rclb
jb
jecxz
fldenv
daa
jp
xchg
bound
cmpsb
addr16
scas
movsb
fisubs
xor
dec
pusha
aad
jb
mov
repz
mov
or
lods
pop
popa
idiv
repnz
pusha
mov
mov
and
jbe
lcall
pop
stos
flds
mov
or
outsl
cli
and
sbb
mov
fstpl
rclb
rcl
das
stc
popf
mov
add
movsl
add
test
inc
mov
mov
xchg
mov
mov
in
add
adc
pop
pop
mov
hlt
add
xor
inc
andl
mov
mov
xchg
adc
xor
jnp
mov
into
xchg
movsl
pop
es
jecxz
test
add
out
cmovns
sub
xchg
bound
xchg
mov
jmp
pop
ret
pushaw
loop
or
adc
inc
in
xor
sarb
lods
pop
nop
jmp
pop
cmp
popw
shr
fcoms
push
notb
rclb
je
repnz
jl
inc
enter
in
jae
or
push
shrl
mov
jne
pop
popl
adc
loopne
enter
xchg
pop
mov
and
fwait
xchg
xlat
dec
mov
sbb
repnz
shrb
push
outsl
sub
xchg
cld
aas
xor
jo
shl
pop
cmpl
lea
fs
mov
or
imul
shlb
mov
mov
fistl
add
or
sarb
push
ficoml
cmp
lcall
jno
fldl
outsl
nop
xor
jmp
xchg
sub
dec
adc
push
mov
mov
xchg
and
les
xor
cmp
cmpsb
sahf
mov
jmp
stos
mov
and
cmpl
jg
mov
or
aaa
inc
cmp
and
popf
push
ljmp
stos
jp
and
leave
xor
push
jnp
outsl
mov
outsb
ds
pop
pop
push
jnp
adc
mulb
xchg
mov
xor
ret
sub
rcl
fstps
loop
loope
sbb
jecxz
push
and
push
shl
test
test
andb
jnp
mov
fcompl
adc
cmpsb
and
and
jns
jne
mov
es
test
lock
out
xlat
flds
xor
jp
pop
sub
out
inc
or
in
pushf
xor
testl
test
loope
xchg
jno
popa
sti
push
xorb
sahf
cld
xchg
dec
mov
push
gs
lock
es
jo
test
enter
aad
mov
and
add
adc
or
adcl
jmp
cmc
add
pop
mov
das
stos
add
and
xor
bound
outsl
jb
mov
mov
stos
cmp
mov
les
fcmovne
or
jne
add
je
sti
rcl
xchg
iret
insb
rcrl
cmp
cmp
dec
mov
add
lahf
lds
and
in
test
clc
push
push
sbb
clc
push
dec
ret
das
ja
and
dec
and
loopne
cwtl
push
gs
or
jne
int
lret
jns
inc
jl
inc
fsubrs
jmp
rolb
add
repz
push
push
js
cmpsb
mov
das
roll
mov
das
and
mov
outsl
imul
xor
mov
jmp
clc
cmp
xchg
pop
inc
mov
jnp
shr
dec
sbb
and
cli
jne
xchg
sbbl
mov
jp
and
leave
loopne
xor
daa
inc
aam
mov
jo
xchg
mov
push
or
mov
data16
inc
call
into
and
cmp
ja
inc
test
and
insb
aad
mov
jb
jg
xchg
add
cmp
frstor
lcall
and
mov
movsl
stc
pop
xor
subb
push
dec
lret
std
lahf
xchg
repz
jl
flds
and
xchg
adc
enter
or
int3
ds
push
cmp
mov
inc
or
imul
inc
and
jmp
and
cmpsl
add
rclb
repz
cmp
mov
xor
jbe
jne
jecxz
xchg
lods
xchg
dec
fistps
sub
inc
jmp
lahf
xor
dec
shlb
jnp
in
adc
cmp
pop
mov
nop
jle
xchg
push
scas
sub
sti
enter
mov
or
dec
lock
or
nop
sahf
ds
inc
jns
dec
add
cmpl
sti
imul
cltd
pop
mov
js
add
clc
xchg
data16
xchg
or
and
xchg
loope
aad
mov
mov
pop
push
sahf
repnz
ss
cmp
xchg
cli
push
and
stos
cmpl
pushf
mov
imul
jbe
pushf
push
stc
lock
mov
sahf
out
mov
fcmovnb
ja
add
add
loop
mov
sbbb
insl
stos
outsb
pushl
jo
popa
inc
les
movl
push
loope
imul
sub
call
xchg
fdivrs
shl
sahf
xchg
aam
sahf
sbb
std
sbb
jb
xchg
mov
ret
xor
sar
andl
mov
lahf
push
stos
mov
cltd
or
xchg
lods
mov
sbb
andb
mov
xchg
das
scas
xchg
xchg
test
dec
aas
repz
loope
fldcw
cmpsl
jbe
pop
ja
enter
mov
push
and
push
cmp
mov
repnz
enter
xor
inc
jo
jo
mov
dec
lcall
mov
jae
mov
insb
ficomps
arpl
cld
cwtl
ret
or
popf
bound
cmp
or
lds
inc
addr16
mov
js
mov
push
imul
and
shlb
test
aas
sub
test
or
call
or
lds
xor
and
and
sub
lahf
int3
adc
inc
fadds
mov
inc
in
and
xlat
into
icebp
xor
lret
add
enter
add
std
lods
sbb
mov
push
jmp
jecxz
jnp
in
sub
imul
ja
sub
xchg
inc
pop
pusha
jmp
ret
push
out
mov
pushf
push
mov
jno
jb
shr
push
cli
or
xchg
jecxz
lds
fsubrs
fisubrl
jns
mov
jb
or
pop
in
cmpl
sbb
vpcmpeqd
lea
aam
test
and
je
dec
pop
cmpsl
int3
lahf
xchg
aam
popa
jle
enter
cmpsl
adc
sub
insl
in
rcl
inc
mov
pop
jae
pop
idivb
add
jl
mov
call
sub
in
imul
rcl
mov
mov
cwtl
xlat
sub
pop
cmpsb
xchg
icebp
add
movsl
pushf
out
xchg
dec
and
idivl
ljmp
fisubrl
xchg
shrl
repz
xchg
inc
cltd
cmp
iret
push
sbb
push
mov
mov
in
sub
xchg
pcmpeqd
lret
dec
xor
push
sahf
das
and
repnz
aas
test
jle
xchg
and
mov
pusha
mov
sbb
adc
lcall
leave
popf
adc
scas
push
cld
into
push
enter
sar
dec
in
rclb
mov
sahf
inc
mov
cltd
pop
pop
out
lcall
dec
jo
mov
inc
aaa
cmpsl
decb
xor
test
jmp
imul
add
cmp
test
mov
cwtl
daa
cwtl
out
xchg
inc
xchg
lods
idivl
inc
xchg
jb
cmc
xchg
pop
mov
jns
sbb
test
cltd
lahf
xor
dec
add
or
pop
sbb
outsl
add
sub
adc
insb
ret
ljmp
mov
stos
adc
mov
mov
stos
cmp
scas
clc
or
sbb
xchg
add
stc
inc
lea
push
and
ret
cmp
pop
or
jne
cmp
mov
fsubrl
or
jge
sarb
repnz
jae
sub
mov
push
jl
in
test
loop
push
mov
lods
adc
inc
lods
inc
out
adc
mov
cmp
push
das
jnp
lods
aad
xor
test
mov
inc
and
nop
clc
divl
scas
jb
sub
inc
pop
iret
nop
inc
and
add
outsl
loop
mov
nop
dec
push
jo
fdivp
or
jb
dec
lea
enter
addr16
in
fcmovne
xor
nop
mov
es
clc
adc
jecxz
adc
fidivl
cmpsl
jnp
lock
sbb
lret
orl
xchg
clc
or
inc
xor
push
adc
fstpt
dec
xchg
xor
dec
mov
movsb
bound
clc
pop
test
xchg
mov
fcmovnb
mov
sbb
test
lret
popa
scas
mov
mov
lret
cmc
sbb
mov
sub
int3
adcl
adc
aaa
add
jbe
cmp
ret
popf
js
cmp
test
and
movsl
and
pushf
hlt
xchg
cli
xchg
sbb
cmp
dec
lea
fstpl
data16
mov
jmp
or
movsb
add
inc
ds
leave
js
inc
sub
dec
imul
mov
or
add
stc
frstor
fsubp
xchg
pop
int
inc
arpl
fadd
sti
cmpl
gs
jp
std
or
loope
xor
and
adc
aad
shll
adc
sub
bound
mov
repz
mov
ret
mov
push
mov
pop
out
adc
pop
inc
mov
sti
andl
sti
cld
cld
mov
clc
inc
dec
sbb
aad
jo
ljmp
pop
push
fs
shll
push
inc
mov
mull
outsb
stc
into
shrb
jae
lahf
mov
push
inc
dec
out
jl
pusha
jns,pt
xor
test
outsl
loop
loope
movsb
mov
test
cmp
cwtl
mov
adc
out
sub
lcall
repz
mov
in
loopne
mov
cmp
movsb
pusha
fwait
pop
mov
cmp
je
add
push
dec
call
js
add
push
pop
fnstcw
mov
and
test
mov
push
popa
out
cmp
loop
roll
stos
mov
lea
cmpsl
and
push
insl
pop
out
push
ja
mov
movsb
inc
fidivl
dec
adc
push
subb
jle
push
jle
or
mov
orb
fldl
fs
cwtl
stos
int3
inc
dec
xchg
mov
xchg
fimuls
push
test
insb
xchg
and
sbb
pop
aad
ds
push
out
shl
add
xchg
mulb
jo
cld
jl
push
divb
cmp
mov
shll
sahf
outsl
add
xchg
mov
sarl
test
gs
sub
dec
lcall
mov
xchg
dec
pop
lret
mov
mov
push
aas
lret
push
jo
aas
sbb
sub
out
jns
push
sbb
inc
mov
pop
push
es
pushf
mov
xchg
out
int3
pop
imul
aaa
cmpsl
cmp
push
out
and
aam
flds
cltd
ret
shll
sti
scas
arpl
jl
sbb
in
cld
scas
je
mov
fildl
push
jno
fsubs
addb
xchg
dec
shr
sti
cmc
in
cmp
ud1
xchg
mov
addr16
add
shl
jb
loop
and
push
xchg
icebp
xchg
mov
mov
mov
pop
dec
add
dec
fisubs
notb
pop
and
out
or
bound
addl
incl
inc
and
sbb
xchg
jge
push
add
push
sbb
adc
not
dec
loope
xor
cs
js
jnp
or
mov
dec
lods
mov
and
ds
cmp
lds
dec
dec
enter
ror
jno
test
mov
fs
jl
jmp
mov
sbb
std
push
int3
sbb
dec
into
test
add
rclb
or
out
and
or
and
lcall
out
leave
xchg
sbb
call
mov
loope
or
scas
repnz
call
sbb
pop
clc
xchg
pop
test
ffree
xor
cmp
push
gs
scas
adc
idiv
aas
add
rorl
rclb
stc
and
adc
dec
data16
lods
pop
mov
xor
adc
into
popf
inc
sahf
sub
int
sahf
test
pop
inc
enter
dec
mov
push
movsb
cmpsl
lods
fs
pop
push
jae
aaa
mov
ja
push
adc
shlb
stos
sbb
addb
fwait
cs
sub
rcll
cmp
out
mov
fidivrl
xor
ss
lods
mov
sub
test
lcall
and
sbb
lret
iret
lods
addb
in
mov
xor
add
lret
mov
mov
in
mov
xlat
inc
fisttpl
xchg
dec
adc
das
sub
clc
testb
sub
inc
aad
rcrl
ret
pop
mov
push
or
lret
jns
wrmsr
cmp
mov
mov
add
aas
add
add
lret
ds
roll
cmp
or
push
cwtl
xchg
pop
call
lds
aad
fs
jp,pt
xchg
std
xchg
test
ret
js
dec
daa
lods
inc
push
lret
xchg
repz
aam
pop
mov
mov
loopne
pop
es
cmp
imul
decl
mov
or
jnp
incl
sbb
sbbb
movsl
test
inc
sub
adc
push
mov
ret
pusha
jno
xlat
jnp
fadds
dec
mulb
push
jne
scas
add
sub
mov
jnp
xchg
push
push
lahf
push
shlb
mov
unpcklps
mov
xor
fbstp
pop
mov
fdivl
in
lock
inc
gs
mov
mov
in
enter
imull
or
sti
pop
movsl
ficoms
in
adc
loopne
push
mov
mov
js
dec
pop
jecxz
jo
mov
data16
jbe
inc
out
pop
lds
xchg
out
inc
hlt
dec
aaa
add
and
fcmovnb
enter
mov
leave
psllw
add
std
ret
out
mov
adc
daa
push
add
mov
mov
push
test
add
in
mov
and
jbe
mov
dec
arpl
xchg
daa
push
pop
cmp
fisubrs
jge
clc
ja
sbb
aaa
and
fdivrs
aad
cmc
mov
fnstenv
div
into
and
enter
push
push
mov
shll
daa
inc
or
jo
lret
mov
push
push
sbb
pushf
push
sub
adc
or
daa
jnp
dec
movsl
aaa
gs
test
inc
jo
andb
jae
lcall
in
sbb
fwait
xchg
dec
addb
adc
xor
mov
outsl
ja
mov
pushf
dec
and
cwtl
mov
or
pop
fstpl
int
xchg
js
popf
jl
scas
or
int3
fcomps
mov
add
nop
mov
lds
mov
sub
adc
jmp
jae
icebp
push
mov
fisubrl
mov
lock
je
insl
pmulhuw
cwtl
xchg
adc
mov
adc
fdiv
cli
jns
fldenv
enter
imul
shl
xor
push
jl
inc
repz
jge
test
mov
cwtl
pop
test
outsl
pushf
adc
dec
and
stc
cmp
mov
cmpsb
test
rcrl
insl
xorb
push
cmc
jp
gs
stos
mov
add
cmpsl
out
mov
mov
xchg
sub
pop
and
adc
int
mov
cmp
fidivrl
std
xlat
xchg
push
pusha
jmp
mov
rcrb
sub
inc
cmpsb
jmp
mov
inc
push
dec
jl
mov
jmp
xchg
jo
pop
and
jae
jnp,pn
xor
lods
or
sbb
inc
cmp
sbb
lock
sub
pop
xor
cmp
mov
inc
xchg
pop
inc
xchg
in
mov
cmp
outsb
outsl
shll
dec
sahf
cltd
pusha
sbb
add
add
cmp
push
inc
xchg
fs
cli
imul
pop
push
leave
push
insl
aad
xchg
aad
aam
int
test
sbb
call
dec
mov
pop
mov
es
les
xchg
jecxz
movsb
or
mov
push
lea
and
fistpll
sbb
lock
xchg
mov
and
inc
cmc
sbb
cmc
fndisi(8087
mov
sub
push
lods
mov
sub
jne
test
std
adc
hlt
sub
push
add
add
imul
xchg
loopne
imul
iret
movsl
mov
addr16
idivl
pushf
cwtl
movsl
xchg
imul
inc
and
mov
dec
sub
popa
sub
mov
and
loope
mov
lahf
mov
test
mov
xchg
lahf
call
pop
orb
stos
mov
add
mov
adc
mov
mov
cld
int3
clc
mov
xchg
repnz
push
xchg
xor
xchg
pop
cmp
insl
jno
mov
mov
mov
ljmp
sti
mov
xchg
out
stos
pop
cmpsb
sbb
cli
dec
out
pop
mov
stc
mov
orl
es
xorl
bound
cmpsl
jno
cs
inc
movsb
mov
mov
sub
leave
or
test
stc
hlt
das
push
int
divl
xchg
pop
inc
sub
out
jae
aas
dec
out
push
cmp
clc
std
jmp
fwait
clc
andl
es
mov
lds
aam
pusha
fld1
sub
popf
dec
test
pop
add
cmpsl
int
or
sbb
jb
inc
scas
mov
xchg
sub
pushf
jg
pop
js
imul
cmc
in
or
fcomps
insb
out
arpl
test
lock
imul
mov
mov
ret
call
leave
gs
and
into
outsl
fcmovbe
xor
pushf
sub
es
or
push
inc
mov
stc
call
jmp
adc
daa
and
cmp
mov
jle
cmp
ret
xchg
add
add
rcll
xor
or
icebp
dec
in
jae
xchg
sub
xchg
cmpsl
xchg
inc
pusha
cmp
xchg
lods
insb
mov
xchg
and
sub
lret
pop
cmp
mov
jmp
arpl
xchg
aad
lea
xchg
sbb
out
mov
sub
jne
sar
and
lods
push
xor
scas
repnz
cli
fmull
inc
xchg
mov
mov
dec
and
orl
repnz
mov
mov
pop
lret
inc
pushf
lock
mov
pop
inc
push
jmp
iret
sub
insl
push
mov
xor
insb
push
divb
mov
sarb
xchg
jle
jle
popa
mov
mov
ror
sahf
scas
shll
lahf
mov
loope
jp
pop
xor
adc
mov
shl
or
shll
bound
xor
les
push
lret
inc
andl
clc
into
mov
rep
imul
cli
jg
mov
push
lods
push
mov
in
adc
inc
sbb
cltd
lret
push
inc
inc
xchg
fadds
hlt
nop
xor
dec
push
or
dec
sarl
std
mov
inc
mov
xor
push
popf
push
data16
test
icebp
xor
lea
dec
mov
push
mov
into
mov
lahf
xlat
push
or
mov
stos
lds
jb
stos
and
fsubs
adc
fwait
mov
das
insb
jns
fsubp
cmp
push
and
outsl
sub
mov
mov
add
cli
loope
mov
fsubp
jl
push
loop
push
dec
xchg
lock
push
inc
xchg
inc
test
adc
lea
adc
xchg
scas
mov
mov
lock
cmpsb
hlt
mov
lret
xchg
arpl
cmpsb
lods
cmp
out
adc
scas
cmp
sti
lret
adc
add
in
or
call
repz
adc
shrb
lahf
movsl
push
shlb
pushf
adc
aas
arpl
mov
pushf
pop
pop
add
mov
mov
pop
xchg
adc
iret
data16
mov
push
test
inc
sub
std
jne
lods
xchg
pop
jne
pop
testl
popa
xchg
rcrl
pop
and
xlat
sar
cli
in
or
mov
test
fwait
inc
out
pusha
add
pop
and
mov
sbb
mov
mov
aaa
mov
into
jno
fs
inc
lcall
ja
fdivrl
push
loopne
jae
add
into
out
shl
aam
sub
xor
push
push
pusha
shlb
sub
mov
pop
out
and
fistl
popa
inc
mov
pop
cli
dec
fwait
add
sub
jmp
hlt
mov
popa
lock
lods
test
lods
cmp
insl
mov
cmp
fwait
xchg
ds
sarl
dec
test
andb
aaa
enter
pop
aad
mov
stos
jmp
sub
xor
mov
nop
inc
mov
xchg
imul
adc
test
fxch
out
fcomps
add
jae
fs
jbe
cli
cld
cwtl
add
inc
imul
xchg
inc
mov
sbb
popa
sub
ret
shlb
insl
mov
scas
xchg
mov
xchg
mul
xor
insb
xchg
test
dec
jb
pop
dec
dec
add
xchg
cmp
cmpsl
dec
test
sarb
std
push
jno
imul
add
add
data16
ret
xchg
xchg
jno
imul
ja
push
or
int3
pop
mov
cmp
lcall
sarl
jle
adc
push
push
inc
cmp
inc
cmp
adc
adc
shll
push
call
ds
jmp
and
adc
mov
fldenv
sahf
jl
out
add
outsl
popf
std
ss
mov
shll
pusha
lods
shll
jnp
les
lds
push
dec
ss
cmc
cmpsb
lcall
dec
push
xchg
mov
and
loopne
loopne
cmpl
loop
adc
in
sbb
sbb
orb
adc
push
jl
jge
and
movsl
and
out
sti
mov
or
or
push
or
add
shlb
mov
insb
std
sub
repz
sub
sub
out
adc
mov
sbb
jo
je
sub
aam
test
xor
or
repz
xchg
xor
xorb
fldenv
inc
pop
stos
divl
addl
inc
sbb
inc
mov
clc
imul
adc
sbb
lahf
push
sbb
dec
sub
enter
xor
popl
pushf
mov
or
xor
jmp
fidivrl
subl
jns
negb
out
and
xor
mov
inc
inc
arpl
or
cwtl
lret
mov
scas
pop
les
mov
mov
pop
adc
adc
and
rcll
dec
out
add
mov
push
outsl
lcall
adc
push
outsl
dec
push
test
cld
lock
js
sub
jno
inc
rol
into
pop
xchg
adc
dec
push
test
out
mov
mov
sbbl
cmpsb
sbb
imul
into
imul
stos
push
std
imul
adc
decb
std
or
push
mov
inc
int3
push
or
test
or
test
xor
repnz
xchg
jns
sub
callw
mov
sub
adc
out
rcrl
aam
popa
ljmp
mov
push
mov
mov
repnz
shrl
xorl
push
push
sahf
dec
or
push
inc
pushf
inc
mov
or
fadd
clc
pusha
mov
sbb
lods
ja
jae
inc
scas
and
ljmp
sbb
and
mov
adc
dec
sbb
jb
sbb
enter
pop
mov
out
inc
dec
test
cvtps2pi
fsubs
mov
inc
lahf
inc
popf
andb
pop
loopne
push
cmp
hlt
xchg
sbb
popa
push
lahf
or
or
jno
jo
lea
mov
xlat
push
and
test
out
push
bound
jnp
and
cmpl
ffree
test
cld
rorb
dec
pop
repnz
or
pop
ja
iret
fbstp
movsl
ret
sbb
out
mov
mov
enter
inc
cmp
lahf
dec
fimull
hlt
call
add
mov
lods
loope
movsl
into
lods
inc
mov
mov
mov
jmp
inc
mov
sub
push
jno
sub
std
push
gs
es
xor
lret
mov
aas
dec
jmp
jge
ret
xchg
sub
cltd
sahf
sbb
mov
int3
dec
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
dec
outsl
arpl
inc
jb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
gs
imul
gs
jne
jb
outsb
je
push
dec
add
add
je
push
dec
outsl
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
fs
gs
imul
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
gs
imul
add
inc
js
je
jb
arpl
jae
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
push
je
push
outsb
ja
outsb
add
add
imul
jo
imul
gs
je
dec
popa
outsb
fs
add
add
je
gs
outsl
popa
jb
push
jns
add
add
jae
popa
addr16
outsl
js
add
add
popa
jb
gs
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
push
gs
popa
insb
jne
add
add
inc
gs
popa
insb
jne
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
imul
jae
dec
gs
outsl
jb
add
add
jb
jne
insb
push
jne
jb
inc
js
add
push
imul
jb
je
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
gs
imul
outsl
arpl
jae
add
push
imul
jae
jne
arpl
add
push
gs
push
inc
outsl
outsb
je
js
add
add
jae
insl
gs
push
add
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
add
imul
outsl
jne
arpl
add
dec
outsl
popa
fs
gs
jne
arpl
add
dec
outsl
popa
fs
imul
add
add
outsl
bound
push
outsb
insb
outsl
arpl
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
add
outsl
bound
dec
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
gs
imul
add
inc
imul
jne
arpl
add
add
gs
je
push
jb
arpl
jae
add
add
outsl
jae
dec
popa
outsb
fs
add
add
add
add
and
pop
add
add
sub
nop
add
clc
nop
add
cmp
pop
add
nop
add
or
add
add
add
inc
roll
or
add
push
roll
adc
add
sub
add
add
add
pop
roll
sub
