in
jle
push
shll
nop
push
jns
xor
xchg
pop
xor
je
xor
in
bound
sysexit
test
test
lods
mov
xchg
popf
push
cwtl
test
clc
rolb
les
sahf
mov
xchg
cltd
xchg
imul
xchg
mov
addl
fistpl
jp
mov
and
push
rolb
and
sbb
jl
fwait
rolb
xor
push
rclb
adc
rcl
jbe
mov
pushf
addr16
jae
nop
cmp
cmp
mov
sahf
shlb
cld
mov
sub
cmpsb
insl
mov
cmp
push
lret
in
jle
push
mov
mull
in
out
fldcw
std
xchg
loopne
into
rolb
pop
adc
cmp
dec
mov
pop
pushl
dec
in
add
push
ljmp
cmp
sbbb
repz
fisubrs
mov
and
aam
sub
push
cld
int3
and
xchg
aam
xor
inc
mov
mov
enter
sbb
push
mov
daa
mov
lcall
sub
sbb
mov
and
push
lods
les
mov
rorl
insl
sarl
rclb
fadds
push
aaa
pop
lret
inc
xchg
inc
cmc
lahf
leave
inc
shlb
daa
push
dec
ljmp
jl
sub
mov
xchg
mov
pusha
test
add
lods
sbb
bound
popl
sbb
mov
push
jmp
pusha
shrl
rcll
sti
or
mov
movsb
mov
mov
fldenv
in
lds
fcompl
push
dec
or
jge
xor
sahf
in
stc
jmp
stc
das
mov
jl
mov
das
stc
pop
in
mov
mov
das
cwtl
and
inc
or
xchg
popa
sub
xchg
nop
inc
mov
sub
xchg
out
imul
push
iret
loop
in
sti
aam
push
and
mov
test
push
add
jp
adc
and
out
inc
push
jno
sbb
and
in
xchg
loop,pn
jecxz
lock
je
and
mov
movsl
cmpsl
in
lock
stos
push
xchg
enter
dec
out
shll
in
daa
dec
out
and
cltd
out
jecxz
mov
mov
mov
mov
enter
mov
sbb
sbb
in
sti
fistpl
repz
xchg
stos
sub
push
jp
popa
xor
jno
lods
sbb
mov
xchg
jno
sub
adc
xor
xor
mov
test
cmp
xor
pop
imul
sbb
jno
jo
es
mov
roll
xchg
pop
pop
sbb
int3
popf
cmp
jnp
mov
or
test
lock
pop
stos
push
xchg
scas
jno
sub
xor
dec
adc
dec
adc
mov
rcll
push
mov
daa
adc
jne
sub
adc
adc
and
testb
aad
pop
xor
adc
jl
mov
out
lds
arpl
xorl
xor
push
dec
add
lret
mov
push
mov
fnstsw
xchg
pandn
and
stos
xchg
std
pop
shr
pop
addr16
adc
sbb
pop
pop
push
sub
xor
pop
add
lods
xchg
push
shlb
xchg
std
imul
xor
push
popf
xor
push
pop
mov
nop
sbb
sub
xchg
es
cmpsb
ds
xchg
jp
lret
mov
cmp
sbb
mov
cs
push
sub
sbb
adc
cld
inc
cmp
dec
movsl
xor
pop
cmc
jbe
in
pop
ret
sbb
xlat
mov
repz
push
aaa
out
sub
popa
lock
pop
mov
lods
setg
in
dec
fimull
add
or
pop
xchg
arpl
out
je
cmpsb
sbb
pop
push
adc
insb
xor
outsb
fldl
std
xor
jle
or
idiv
mov
cwtl
adc
fstpt
push
fisttpll
xor
cs
mov
fadds
test
out
fadd
fcoml
std
mov
test
mov
push
sbb
xchg
js
cmp
sbb
mov
in
cltd
mov
push
enter
xor
dec
mov
jno
jle
push
sub
push
cmp
fdivrl
xchg
scas
dec
int3
jge
cld
cmc
scas
in
pushf
cltd
mov
adc
popa
adc
lretw
dec
iret
mov
xchg
mov
dec
call
sbb
cmp
or
mov
lcall
pop
pushf
nop
inc
jg
lock
rcll
into
mov
dec
mov
out
out
dec
je
daa
push
lock
mov
imul
fsubrs
lods
xchg
cmp
mov
cli
in
adc
jne
les
lock
das
sbb
cs
mov
and
jmp
in
ljmp
sar
faddl
mov
leave
xor
call
xchg
out
cmc
lds
mov
adc
sarb
pop
enter
xchg
icebp
clc
xchg
inc
inc
ss
rcrb
inc
push
push
jle
fbld
fiaddl
adc
push
inc
cs
xchg
out
sub
or
leave
dec
or
push
cmc
mov
test
lods
adc
rcll
xorb
inc
add
pop
iret
mov
and
adc
out
pop
inc
adc
nop
adc
push
fistl
fdivrp
aaa
dec
jo
jmp
loop
and
outsb
sarb
fiadds
pop
movsb
iret
and
rcl
daa
dec
negl
push
xchg
out
mov
mov
dec
add
dec
xchg
sbb
jg
hlt
dec
flds
shrb
add
inc
icebp
stos
pop
movsb
inc
cld
mov
pop
test
ljmp
mov
jne
stos
pop
sub
stos
mov
xchg
ljmp
adc
lea
sub
sub
fildll
pop
sbb
pop
ret
out
cld
out
push
cmp
std
loope
repnz
mov
xchg
sahf
sbb
jp
mov
sub
sahf
push
jno
movsl
sub
sub
stos
mov
adc
inc
pop
jb
iret
pop
mov
jg
sbb
int
inc
les
jl
icebp
or
movsl
xor
sub
stc
mov
iretw
mov
inc
sbb
push
sbb
cmc
mov
and
hlt
mov
aaa
sahf
push
adc
jge
es
and
lock
mov
push
sub
lcall
pushf
dec
cmpsl
cmp
test
dec
pop
insb
mov
std
mov
and
testb
movsl
lock
pop
shlb
cmp
test
pop
clc
and
and
jmp
and
les
pop
pop
inc
hlt
sbb
lret
pop
push
icebp
movsb
sbb
sub
xchg
xor
push
mov
pop
jne
mov
jo
mov
pop
aad
in
pop
test
cwtl
popf
push
sub
xchg
jp
and
or
mov
sahf
das
arpl
jge
pop
xchg
mov
jo
xor
sbb
ds
pop
sbb
imul
add
push
lds
lock
iret
adc
lret
cmc
push
icebp
test
jecxz
fidivs
add
adc
add
and
orb
jb
mov
push
pop
fdivrs
iret
inc
insl
in
cmp
add
adcb
ficoml
gs
push
sub
xchg
add
mov
adc
mov
cmp
adc
push
fcmove
mov
es
mov
loop
inc
mov
push
loope
aas
mov
jno
outsl
imul
loope
nop
jo
jge
and
in
xchg
lret
mov
adcb
std
cmpsl
into
sbb
lods
test
loope
pop
insb
lods
out
pusha
pop
pusha
add
jae
xchg
test
arpl
insl
cltd
aam
arpl
insb
adc
pop
adc
mov
sbbl
mov
push
xchg
dec
js
mov
sub
gs
push
scas
imul
xchg
push
and
lret
mov
pushf
enter
or
repnz
in
mov
xor
js
icebp
shll
loope
movsb
mov
pop
fucomp
aaa
sub
scas
loopne
mov
sbb
fsts
popf
stos
icebp
fnstcw
fiaddl
adc
mulb
mov
add
movsb
jge
popa
movsb
adc
jmp
lret
cltd
frstor
pop
cmp
aas
push
adc
lret
xor
cld
pop
mov
and
sub
mov
sub
scas
and
lods
xchg
mov
std
ja
cmp
cmp
imul
adcb
rol
or
adc
mov
lahf
lock
mov
scas
sub
sub
mov
adc
add
push
movsb
mov
rolb
in
cmp
push
pop
xchg
cmp
cmp
inc
jmp
cmc
clc
es
cmpsl
or
mov
push
lcall
test
pushf
mov
dec
jp
je
jg
dec
mov
je
sbb
adcb
mov
hlt
xchg
out
std
flds
enter
pop
stos
lret
xor
test
sahf
cli
mov
mov
leave
test
andl
or
loope
imul
cld
fistpl
fs
negb
shll
xchg
call
rcll
sbb
test
jmp
scas
jb
loope
int
gs
rcrl
mov
cmp
add
daa
or
popf
test
xchg
mov
push
add
in
sub
xlat
add
aas
movsl
xchg
pop
pop
cmpsl
mov
jno
jbe
xor
mov
in
and
mov
stos
cmp
xor
loop
xor
aad
push
aam
jo
or
sub
out
add
jnp
call
cmc
ljmp
fstpt
daa
cmp
test
jnp
out
sub
push
test
sbb
push
outsl
xor
je
mov
ret
rcrb
fwait
repz
imul
mov
int
lret
xchg
stos
stc
mull
jmp
insl
lcall
scas
xchg
fidivrs
xor
pop
cltd
push
pushf
pop
stc
cmpsb
data16
lods
scas
xlat
insb
xor
cs
push
pushf
in
sub
mov
pop
xchg
push
push
icebp
loopne
test
push
add
and
movsb
xchg
cmp
and
cmc
jl
lock
and
lods
fstpl
jecxz
std
xor
cld
in
lea
dec
test
adcb
pop
mov
pop
popf
in
arpl
add
jge
fcoml
aam
jbe
out
adc
adc
xchg
mov
test
outsl
dec
faddl
in
rol
add
lea
xchg
popa
xlat
pop
outsl
adc
cmc
mov
pusha
mov
mov
sbbb
xchg
lock
das
or
adc
mov
fstpt
int
sub
test
dec
les
adc
jnp
adc
jns
pop
sahf
add
jl
sub
push
or
cwtl
lods
int3
lods
fsts
mov
xor
mov
fwait
call
sub
mov
and
fadds
scas
icebp
mov
mov
pop
stos
sar
mov
xor
lods
pmuludq
xor
push
cli
sbb
mov
ljmp
pop
sbb
imul
dec
out
popf
lods
es
and
dec
inc
lahf
cli
ficoms
push
and
mov
push
mov
sbb
pop
aas
sub
movsl
movsl
sub
xchg
out
in
and
lods
pop
and
rorl
lret
ret
pushf
push
xchg
andl
pop
jnp
in
ficompl
dec
xchg
nop
pop
adc
dec
shrb
insl
xchg
imul
aad
cmp
sub
outsl
pop
lods
add
flds
sub
stc
jecxz
sub
bndldx
cs
xor
lea
int
lahf
push
lcall
imul
adc
daa
push
or
test
push
push
cmpsb
pop
stos
test
pop
out
jnp
mov
rcrb
rolb
stos
cld
mov
push
dec
in
push
es
jae
mov
sub
out
out
sub
pusha
jmp
push
por
dec
f2xm1
leave
lret
jg
mov
sbb
movsl
jp
add
xchg
adc
sbb
sbb
xchg
push
imul
pop
jmp
pop
jmp
sbb
or
adc
cmpsb
sahf
jnp
cwtl
icebp
pop
jns
pop
nop
lock
jnp
sbb
pop
push
imul
es
fdiv
into
xchg
les
jbe
xchg
inc
dec
sti
lret
push
cmp
fimuls
adc
dec
xchg
push
pushf
adc
cmp
test
lret
out
push
cmpsl
arpl
xchg
pusha
mov
or
sub
sbb
insl
jp
iret
hlt
push
in
push
aas
cmp
aam
mov
mov
and
and
ljmp
sbb
xor
add
push
dec
mov
cmp
fucomi
fbld
faddl
out
mov
lods
dec
data16
subl
rolb
xor
mov
push
lock
adc
and
cs
aad
push
pop
clc
jp
in
int
movsl
mov
pushf
cmp
jl
adc
dec
adc
std
pop
or
push
mov
push
pop
notl
jbe
in
icebp
sti
scas
xchg
mov
mov
push
insl
scas
xor
outsb
and
pop
mov
mov
sub
add
push
das
sub
in
sub
popf
jl
sub
cmp
lods
cmp
lret
mov
aaa
mov
cld
mov
adc
and
jmp
push
inc
mov
mov
dec
int3
and
lods
cwtl
je
and
fdivrl
jae
stc
cmpsl
stos
adc
xor
cli
mov
mov
pop
sub
sahf
movsb
ds
repnz
pop
es
pop
outsl
out
pop
popf
repnz
fsubl
nop
inc
iret
movsl
andb
and
adc
mov
sbb
xchg
dec
inc
mov
mov
popa
enter
inc
arpl
insl
imul
push
test
inc
in
dec
int
dec
iret
je
loopne
addr16
inc
movsb
test
pop
sub
int
fs
inc
mov
jl
pop
add
push
loope
jbe
popa
sub
arpl
push
int3
rorb
push
popa
mov
fimuls
xchg
cld
dec
cwtl
bound
sarl
pop
enter
pusha
test
jae
idivb
xchg
push
jle
or
stos
xchg
xor
xchg
jg
and
inc
aas
test
popa
jo
inc
fiaddl
data16
insb
xor
mov
jl
fwait
dec
jno
mov
or
cmpsb
xchg
test
jb
andb
lret
jb
mov
out
addb
ret
jno
jbe
pushf
and
dec
push
push
lret
xchg
repnz
sti
int3
xchg
aad
xchg
lods
sbb
lret
cmp
dec
das
push
popf
sbb
rcpps
in
jnp
push
aad
mov
scas
popa
imul
dec
arpl
push
dec
pop
pop
mov
lret
sbb
lahf
adc
lds
push
jb
es
push
mov
cld
cmovge
les
sbb
jbe
xchg
mov
lahf
and
les
ficomps
shl
sub
rorl
push
ret
lods
repnz
bound
jg
outsb
jg
lea
outsb
or
inc
xchg
fisubs
test
sub
out
sub
mov
fs
shll
pop
movsl
push
hlt
push
mov
mov
out
out
in
int
loope
xor
stc
out
sbb
lods
add
xchg
insb
mov
imul
pushf
adc
in
push
in
popf
inc
testl
fldt
push
adc
xor
ret
mov
outsl
and
stos
add
add
orl
xchg
lods
sub
xchg
outsb
pushf
jmp
sti
out
sbb
mov
pop
sarb
fnstsw
xchg
xchg
xor
add
xor
lret
inc
and
fcoms
xchg
js
jbe
je
adc
jp
notl
rolb
imul
dec
mov
gs
rclb
mov
cs
fisttps
subb
pop
sub
fdivs
push
lcall
push
mov
inc
popa
insb
cltd
fwait
out
add
out
dec
mov
and
test
and
mov
mov
inc
cmc
lods
arpl
sti
lret
mov
sbb
mov
add
data16
jae
pop
xchg
lcall
inc
sbb
xor
and
int3
push
icebp
and
inc
pop
js
jp
jl
test
sub
adc
int3
cmp
cld
jns
add
push
popf
mov
into
in
test
test
pop
sub
xchg
imul
insl
popf
push
mov
sbb
sbb
test
mov
fs
xchg
fwait
in
stos
xor
adc
sbb
cmpsl
lock
mov
cmc
sbb
push
lcall
inc
pusha
aas
and
cld
cmp
pushf
xorb
sti
aaa
push
std
aam
fs
cmp
add
scas
xor
mov
add
push
push
push
lcall
fs
std
cltd
xchg
sub
add
pop
ret
pop
repnz
jne
movsl
and
shrl
lcall
shlb
mov
inc
push
lods
pop
xor
xchg
inc
mov
mov
movsb
dec
rcll
popf
pop
aad
dec
sbb
cli
push
fs
imul
mov
mov
push
mov
movsl
rolb
shlb
cltd
je
popf
nop
lods
sub
je
add
pop
jno
add
sub
sub
aam
and
fsubrl
out
sub
sub
jecxz
in
xchg
sbb
and
movups
mov
mov
push
add
adc
fsubrs
adc
lods
push
jne
mov
push
aad
movsb
lahf
xor
out
mov
stos
xchg
mov
xor
and
pop
mov
pop
dec
cmp
rcrl
adc
jmp
pushf
push
jbe
std
mov
xor
lods
lds
loope
es
or
mov
js
pop
xchg
repz
dec
test
sub
pop
push
push
pushf
dec
mov
shl
clc
loopne
mov
mov
and
dec
sbbb
xor
stos
sub
sbb
lods
jo
push
std
xor
push
cld
mov
push
aam
mov
aam
lods
xchg
stos
shrb
orb
imul
shlb
mov
out
rol
push
or
mov
mov
lret
ja
mov
sub
mov
insl
sub
scas
mov
cs
subl
adc
rclb
inc
pop
push
jo
push
sbb
and
xor
adc
jae
sbb
aas
es
jbe
dec
lret
xchg
or
out
mov
leave
add
jl
mov
dec
xchg
xor
cld
popf
pop
movsb
insl
or
fidivrs
cwtl
daa
dec
mov
jle
imul
js
pop
cli
dec
in
fistpl
aaa
pushf
lcall
add
xlat
incb
mov
in
mov
jl
dec
push
xchg
adcb
jmp
test
in
jns
lods
cs
push
popf
add
pop
sbbl
push
rorl
cmp
xchg
cmpsl
insb
loopne
in
cmp
mov
jmp
fnsave
or
movsl
sub
dec
call
inc
rolb
sbb
push
xchg
mov
and
out
pop
mov
fisubrl
das
ds
mov
jp
push
mov
pushf
pop
push
push
add
lods
add
mov
sub
adc
loope
out
pop
rclb
aad
mov
test
loopne
mov
cmp
xor
sub
stos
das
ret
fisubl
adc
push
mov
push
mov
push
psubsb
dec
sahf
inc
inc
fistps
dec
sbb
mov
daa
sbb
xchg
add
lcall
dec
insl
out
cmp
push
or
push
lds
cmpsl
cmpsb
daa
push
inc
pushf
mov
ret
xchg
scas
shrb
fwait
dec
in
jecxz
sub
out
imul
out
das
or
xchg
jecxz
out
nop
fidivrl
push
out
aam
test
lea
lcall
dec
insl
cmc
lcall
stc
fidivrl
mov
xor
xchg
fwait
arpl
and
mov
cmpsb
mov
fwait
in
ja
popa
add
adc
mov
sub
shlb
or
call
xor
cmc
mov
mov
loope
xlat
scas
push
cmp
pop
cmp
cltd
jl
cwtl
scas
xchg
jmp
push
mov
xchg
mov
push
fwait
movsl
loop
ret
mov
int3
sub
fwait
dec
mov
lahf
xchg
mov
ror
cmpsb
push
fs
jno
and
sbb
sub
xchg
sbb
jo
popf
in
or
mov
mov
cmp
push
and
subl
fisttpll
mov
fcoml
inc
iret
jecxz
cmc
xor
xchg
int3
sub
jp
pop
xor
iret
addl
ljmp
pusha
cmc
sbb
push
in
imul
test
test
in
data16
mov
lods
adc
ficompl
inc
bound
jmp
in
repnz
aam
in
pop
hlt
in
sahf
and
outsb
test
lret
inc
aad
mov
rcrl
push
and
adc
es
psrlq
xchg
sbb
je
sahf
out
jbe
lods
xchg
orl
and
mov
mov
add
out
jb
xchg
mov
cmc
sbb
fwait
mov
xchg
mov
sub
adc
outsb
stos
stc
or
movsb
cmp
sbb
lock
sti
aam
rorb
sahf
add
jae
jb
bound
xchg
lods
pop
pop
xchg
add
pop
mov
pop
out
out
call
push
mov
and
push
mov
icebp
test
test
fst
je
pushf
movsl
std
cbtw
les
fists
ljmp
fucom
lods
enter
mov
jp
pop
loope
fdivs
mov
pop
sbb
fcom
scas
cld
mov
repz
mov
mov
mov
mov
shl
out
lret
cmp
adc
movsl
in
notl
push
adc
xor
bound
ret
jp
sbb
lock
sahf
mov
stos
fcomps
cmc
mov
add
and
out
add
and
push
scas
ficompl
xor
lcall
jp
adc
push
test
dec
mov
lea
arpl
lret
xchg
xchg
outsl
xor
dec
push
adc
sub
mov
out
outsl
cltd
sbb
aad
shr
pop
push
data16
push
fstpt
add
fldenv
push
add
and
mov
ja
scas
ds
cltd
pop
leave
mov
in
sub
pop
je
stc
js
push
or
inc
push
pop
int
cmp
adc
mov
fidivs
mov
push
movsl
loope
mov
dec
or
lods
mov
pop
xor
sbb
mov
stos
fnstcw
lock
jne
icebp
adc
xrelease
pop
lods
pop
xchg
and
dec
xchg
scas
ss
pop
shl
jne
sub
or
std
push
xor
lea
data16
sub
and
pop
daa
jg
jecxz
dec
jne
cltd
arpl
pop
fwait
adc
cmpsl
jnp
inc
and
mov
repz
movl
dec
mov
cli
aad
bound
mov
sbb
movsl
xchg
jno
lea
or
cli
sbb
cmp
xchg
mov
inc
xchg
push
mov
int3
ljmp
sbb
arpl
xchg
repz
and
mov
sub
bound
push
movsl
orb
jge
sahf
push
jo
daa
mov
scas
xor
scas
mov
cld
jae
enter
or
negl
xchg
adc
jle
push
cwtl
cs
mov
sti
mov
stos
sbb
jbe
popf
push
lock
pop
push
shl
mov
xlat
mov
cli
stc
sbbl
mov
mov
lret
mov
aad
push
rolb
js
cltd
jo
nop
xorl
jb
jno
int3
js
xor
call
xchg
or
jns
in
nop
add
gs
mov
cld
out
lahf
paddq
popf
push
ljmp
clc
test
cmpsb
scas
add
fdivrs
sbb
in
xchg
inc
add
mov
repz
outsl
push
leave
movb
cwtl
mov
inc
fimuls
push
mov
subl
push
fisubrs
sarb
imul
sbb
xor
and
lock
pop
push
es
mov
fstl
fldl2t
xchg
cltd
mov
mov
xchg
mov
sbb
pop
test
xchg
sbb
stos
push
jno
add
ret
in
fwait
sub
mov
lods
xor
lods
fld
popa
mov
test
cltd
mov
mov
xor
inc
push
rol
cmp
in
xor
sub
inc
sub
divl
rolb
in
or
in
repz
cs
xor
mov
jns
inc
stc
sti
jl
repz
jbe
cltd
insl
repnz
test
and
add
sahf
enter
arpl
repnz
shll
adc
cli
punpckhbw
xchg
std
enter
push
sbb
fistps
pop
mov
xor
or
add
lcall
iret
jge
adc
jne
sbb
or
push
aam
jb
outsl
add
ja
or
mov
jbe
stos
xor
test
icebp
dec
inc
rcll
or
mov
stos
pop
mov
iret
stos
nop
pop
cmp
mov
aam
loope
fwait
stos
sub
repnz
stos
in
sbb
das
stc
sti
ret
cmp
shrb
es
xchg
pop
int3
xchg
dec
xchg
pop
sahf
out
inc
movsl
inc
push
jle,pt
cmpsl
add
repnz
sub
je
into
outsb
movsl
pop
push
lock
mov
cmp
mov
and
mov
es
push
inc
fldt
je
fwait
scas
push
hlt
adc
cmpsb
pop
insb
sbb
orb
call
insl
inc
or
push
rcll
mov
adc
xor
xorl
fwait
xchg
pop
popf
xorb
pop
in
loopne
nop
push
pop
mov
push
xchg
fstpl
mov
idivl
jecxz
sub
out
into
inc
ja
clc
pop
daa
psrld
stos
xor
shrl
clc
mov
int3
int
iret
sbb
std
xchg
xlat
pusha
aas
cmpsb
rorb
sbb
ljmp
movl
push
into
push
vprotd
imul
popl
fadds
xor
das
stos
sub
fidivl
mov
insl
sbb
iret
hlt
cltd
lcall
adc
dec
xchg
xor
aam
and
push
mov
inc
lahf
inc
shrb
xorb
stc
dec
arpl
test
xor
sub
inc
add
inc
add
xchg
int3
es
fnsave
popf
fisubrs
push
add
push
loopne
test
dec
sti
pop
mov
neg
and
repz
cs
adc
sub
fcmovnu
dec
sahf
jne
stos
ljmp
cwtl
sub
push
aad
sub
xchg
mov
push
pushf
mov
imul
stos
mov
leave
insb
push
fidivs
push
insl
popf
daa
mov
fwait
leave
fwait
jbe
std
mov
and
lods
push
icebp
add
jbe
adc
fidivl
out
mov
inc
hlt
out
gs
xchg
jp,pn
jns
icebp
pop
sbb
pop
xor
mov
in
mov
insb
cwtl
sub
mov
and
data16
sub
inc
pop
sub
sbb
jne
adc
jl
mulps
inc
aam
mov
lahf
adc
fs
inc
push
pop
stos
xchg
jp
xor
imul
sub
push
clc
rcr
xchg
push
icebp
ret
fsubl
out
test
inc
mov
iret
jne
dec
or
nop
faddl
mov
je
fucomp
dec
insb
add
xchg
lret
mov
cmpsb
sub
pop
outsb
mov
out
cmp
cmpsb
jl
mov
mov
cmp
movzwl
push
enter
outsl
imul
cmp
jmp
cli
addl
mov
jp
mov
ljmp
test
pop
in
fwait
pushf
mov
jbe
mov
pop
sbb
jge
je
push
enter
cmpsb
xor
hlt
popa
cmp
pushf
lahf
push
xchg
pop
aam
sub
std
jb
inc
nop
or
pop
sub
lods
push
clc
fisttps
shrb
popf
idivl
cltd
cmp
lahf
xchg
or
lods
out
cltd
mov
cltd
mov
xchg
mov
mov
xchg
push
add
dec
adc
scas
push
sahf
aaa
lods
and
dec
loopne
sbb
nop
push
lds
jle,pt
test
jno
mov
mov
xlat
add
std
xchg
push
xchg
fistpll
add
xchg
ret
cmc
popa
xor
pop
sbb
fucomp
pop
and
cld
les
int3
mov
sub
repz
pop
fsubs
adc
sbb
bound
das
sbb
ret
nop
fwait
adc
loop
ja
push
adc
mov
in
adc
dec
mov
mov
loopne
push
and
outsl
push
adc
inc
sbb
mov
push
or
pop
adc
add
push
pop
imul
jo
push
or
enter
xor
adc
imul
adc
lods
test
jp
ret
imul
mov
xchg
xchg
insl
mov
das
jp
xchg
adc
push
and
rol
cmc
lret
lcall
xor
dec
cs
sub
lret
dec
sub
jo
enter
test
int3
sub
insb
mov
mov
lods
imul
mov
imul
sahf
outsl
shlb
cwtl
ja
scas
or
aad
pop
inc
push
rcrb
fdivrs
pop
arpl
add
lds
and
sbb
pop
sub
addl
movsb
sbb
lock
mov
or
test
test
out
hlt
sub
inc
scas
hlt
movsb
mov
nop
enter
clc
mov
jnp
xchg
flds
gs
add
test
push
xor
push
icebp
into
adc
stos
stos
pop
fsubrs
stos
push
fsubs
mov
stos
sahf
scas
in
mov
in
fs
std
lcall
add
pop
or
xchg
std
adc
jl
jl
mov
dec
adcb
movsb
or
es
jmp
adc
pushf
lods
pop
or
mov
iret
xchg
jb
adc
mov
xor
jecxz
jns
int
cmp
ret
test
decl
mov
xchg
and
adc
xchg
lock
mov
jo
jl
and
fdivl
scas
out
cmpsl
jmp
dec
push
pushf
jp
xlat
mov
ret
xchg
dec
out
orl
fmul
dec
xlat
test
out
scas
ret
in
mov
movsl
push
ret
imul
cmpb
mov
hlt
push
cmc
loop
enter
loop
push
cmp
lods
xchg
adc
movsb
lods
pop
dec
cltd
push
arpl
mov
mov
js
mov
jnp
push
shr
inc
add
jns
mov
imul
push
fcomps
jns
xchg
pop
and
imul
and
dec
jl
or
out
loope
mov
std
daa
mov
int
mov
or
jne
stos
aaa
or
pop
or
subb
fwait
jmp
push
dec
in
fs
data16
cmp
loop
fdivl
lods
test
hlt
movsb
mov
and
lods
adc
jae
out
fldl
push
out
jmp
jmp
dec
dec
adc
idivb
call
in
xchg
sbb
adc
sbb
and
jnp
xor
and
test
mov
bound
enter
or
rclb
dec
daa
sub
inc
std
shlb
fistl
fs
rcl
mov
sbbb
out
insl
mov
and
in
ljmp
jo
sub
jecxz
pop
fsubr
adc
stos
out
xor
cmp
jbe
ds
adc
icebp
pop
inc
js
push
mov
arpl
fwait
mov
clc
addr16
xchg
aaa
movsl
popa
repnz
dec
scas
sub
cmpsb
push
push
sub
dec
adc
push
stc
sbb
ds
arpl
xor
fisttps
je
cmp
ret
loopne
out
mov
fidivl
popa
jge
cmc
jl
jne
xchg
mov
int
lcall
cld
sbb
and
js
xchg
pop
ficoms
mov
jmp
jl
jge
orb
or
add
pop
mov
dec
cmp
imul
aad
insl
and
popf
cmc
or
insl
jge
or
sub
icebp
pushf
gs
push
mov
push
mov
sti
adc
flds
xlat
out
mov
pusha
xor
fwait
enter
popa
pop
cld
jo
enter
push
ret
sbb
fbld
iret
mul
cmpsl
in
insb
enter
icebp
cmpsb
sahf
add
or
xchg
pop
add
cmp
cmp
pop
int
and
nop
stos
inc
mov
mov
pushf
xchg
push
lods
loop
js
adc
xchg
or
xchg
aam
sub
aam
sub
and
push
sub
mov
push
xchg
fidivrs
dec
hlt
jne
xor
ss
lock
push
xor
mov
pusha
pop
sub
fdivrp
and
xchg
xchg
rorl
fsubrs
xchg
gs
jae
cld
int
cmp
jnp
in
lods
in
popf
sbbl
sub
repnz
lahf
nop
mov
mov
sub
xor
push
in
inc
adc
and
xor
cli
in
xchg
add
push
sub
mov
push
hlt
mov
push
frstor
insl
lret
bound
sbb
imul
xchg
rep
adc
or
lea
ss
pop
add
add
inc
fstpl
insb
xchg
or
mov
xor
insb
shr
movsl
loopne
arpl
jns
arpl
pushf
lds
and
ficomps
mov
or
sbb
add
pop
sbb
mov
mov
sub
pop
push
mov
sbb
imul
imul
jmp
stos
push
daa
data16
mov
adc
mov
dec
push
lods
loope
mov
adc
cs
inc
fdivrl
ffree
in
add
sbb
jmp
push
cld
sti
nop
lock
adc
imul
sar
pop
dec
mov
aad
or
or
dec
xchg
sti
adc
int3
jno
inc
mulb
jp
jb
sub
imul
mov
xchg
cli
or
fwait
xor
stos
les
sahf
xchg
lods
xchg
push
divb
xchg
mov
cmp
lcall
push
cmp
int3
mov
ret
bound
loope
xchg
cmp
orl
lock
mov
jle
test
shr
or
cmp
cmpsb
push
movsl
insb
mov
sbb
movl
mov
push
adc
or
outsb
sbb
add
and
adc
mov
xchg
out
inc
clc
jp
sub
inc
adc
ds
rcl
mov
cwtl
sti
mov
divl
loope
out
mov
sti
or
fwait
outsb
shr
push
imul
mov
fs
popf
movsl
clc
cmp
push
repz
mov
adc
mull
jo
stos
pushf
push
iret
lods
std
int
in
pop
pop
and
adc
cmp
cli
nop
xor
push
ret
xchg
enter
cmpsl
out
mov
mov
imul
mov
mov
jns
out
jl
shrl
jbe
iret
adc
out
call
aad
negl
or
sub
in
movsl
and
test
and
int3
mov
mov
push
push
pop
mov
and
mov
mov
arpl
insl
in
xchg
iret
sbb
push
ficoml
in
mov
or
mov
call
cmp
mov
jle
inc
ljmp
pop
push
int3
cmpsl
push
pusha
cmpsb
movsl
je
mov
orb
mov
xor
xor
add
xor
inc
sub
cli
rcrb
inc
in
xorb
sahf
in
ret
pop
mov
push
testb
sbb
jecxz
jbe
and
push
bound
mov
cltd
or
jge
pop
leave
dec
lods
das
pcmpeqw
inc
ja
loope
out
hlt
push
int
jne
stc
out
or
or
fs
fsub
xor
fmull
jl
jno
jnp
push
dec
xor
push
repnz
mov
pop
mov
push
nop
sub
mov
out
sahf
and
pushf
shlw
cmpsb
adc
rcrl
inc
jmp
pop
xor
pop
cltd
mov
sbb
je
xor
xor
push
cmpsl
stos
clc
nop
shrb
ljmp
ret
inc
rol
mov
sbb
sarl
or
jmp
sbb
test
test
xchg
dec
xchg
xor
adc
push
mov
sbbl
sbb
ljmp
cmpsb
fistpl
xchg
push
lods
dec
xchg
pop
xchg
add
sub
stc
mov
mov
fldt
shrb
sbb
push
mov
add
outsb
test
rcr
movsb
jbe
sbb
mov
das
xlat
stos
mov
lss
cmpsl
jmp
mov
rclb
cmc
push
mov
adc
enter
fwait
imul
jp
push
mov
lret
inc
movsb
popa
mov
icebp
rcl
js
sar
mov
movlhps
adc
dec
add
pop
pop
aaa
fcomps
or
mov
push
or
push
mov
cmpl
dec
sbb
jo
mov
fistl
mov
cmpsb
push
aas
sbb
lcall
ljmp
std
dec
das
adc
insl
mov
adc
idivb
hlt
outsb
adc
jl
hlt
xchg
shlb
sub
sbb
inc
or
inc
das
imul
movsb
lcall
sbb
sub
mov
int
add
fldenv
or
daa
dec
arpl
sahf
pusha
or
mov
lock
jmp
mov
ret
test
mov
scas
scas
fwait
insb
repnz
stos
push
xor
inc
sub
out
shrl
rcrb
fsubr
and
pushf
std
loope,pn
loope
mov
dec
ss
cmpsl
imull
mov
out
aam
jae
pushf
push
jnp
bound
cli
mov
push
fdivrs
mov
push
outsl
stc
mov
pmaddwd
mov
sub
aad
jecxz
rclb
mov
sbbl
ret
popf
mov
and
pop
sub
shl
cli
cli
ficoml
or
test
shrl
pop
sub
sbb
test
cmp
stos
popa
call
or
data16
pushf
or
out
stos
push
xchg
aad
sub
xchg
sbb
sbbl
mov
adc
push
xchg
je
adc
je
pop
xor
imul
dec
sar
enter
push
dec
push
shlb
dec
movsl
popaw
push
lds
add
sub
or
das
mov
rdtsc
lcall
adc
mov
or
mov
dec
push
push
xchg
add
pop
mov
cld
xor
sar
rcl
adc
repnz
int
ficoml
xlat
repnz
or
daa
dec
xchg
cld
pusha
sbb
add
cmc
mov
mov
shlb
xchg
mov
cmc
inc
roll
stos
cs
xchg
dec
xchg
bound
sbb
push
jnp
pop
cmc
and
dec
push
adc
inc
or
mov
and
dec
mov
js
movsb
mov
xchg
outsb
ret
sub
mov
jmp
in
adc
adc
roll
lods
js
sbb
repnz
ficomps
out
sub
cld
pop
push
mov
push
pop
push
cwtl
push
and
and
test
add
out
mov
add
orb
scas
xchg
adc
mov
stc
mov
fcoml
adc
test
xor
or
mov
and
push
sub
enter
out
xor
and
in
xor
in
inc
in
cmp
mov
js
push
mov
add
lcall
pop
loope
xchg
pop
cmp
testl
jl
push
sbb
in
fwait
mov
cmp
sub
shrb
in
shlb
and
enter
lcall
xchg
je
cs
mov
fwait
test
icebp
xor
dec
rclb
mov
mov
inc
xchg
lahf
loope
xchg
adc
insb
jns
out
das
lcall
test
and
notb
xchg
shr
push
and
mov
or
mov
fmull
cmp
movsl
xchg
fwait
mov
mov
xor
fwait
shrl
aam
sub
and
cmpl
mov
movsb
jecxz
ds
sbb
daa
fbstp
mov
in
outsl
sbb
push
and
imul
xchg
adc
ja
mov
test
jmp
arpl
mov
movsl
insl
xor
mulb
pop
es
mov
mov
arpl
and
pop
jb
scas
add
cmpsb
adc
arpl
hlt
ret
mov
dec
out
pop
icebp
and
mov
push
pop
cli
adc
cltd
sbb
xchg
xor
mov
add
icebp
jge
sti
test
jo
in
sbb
cmp
aaa
pop
fdivrp
int3
movb
jecxz
lret
or
mov
mov
loope
ljmp
pop
pop
sub
xchg
pop
ljmp
jle
jo
sub
fwait
push
pushf
adc
shl
outsl
mov
cwtl
arpl
jl
scas
clc
clc
jb
push
ss
insb
jp
in
lods
fildll
xchg
dec
aam
xchg
js
pop
icebp
cld
add
adc
xor
into
fbld
or
comiss
mov
out
jno
or
mov
cs
push
or
movsb
add
insl
pop
pop
out
mov
ds
mov
lock
mov
rclb
mov
pop
or
push
xor
nop
sbb
add
sbb
ljmp
mov
xchg
insl
jns
inc
mov
xchg
or
or
xchg
cmpsb
out
rorl
jecxz
mov
sbbb
adc
inc
aad
mov
mov
lods
fs
loope
mov
out
popf
push
add
inc
add
cmpsb
sti
call
adc
xchg
jl
aas
inc
inc
js
mov
xor
int
aas
jg
xchg
iret
lret
or
sbb
push
aaa
xchg
psubsw
and
push
mov
dec
push
pop
aaa
sbb
dec
sar
and
or
pop
dec
or
add
sub
fwait
outsl
es
xor
loope
xor
sbb
mov
popf
int
repnz
rcl
mov
sbb
and
clc
or
popf
mov
sub
rorl
mov
in
mov
dec
xchg
cld
int
sub
xlat
push
gs
loopne
loop
xor
cli
insl
data16
pop
mov
xchg
imul
push
sar
stos
inc
xchg
mov
ss
pop
mov
jecxz
lcall
jns
xchg
xor
loopne
sarb
lahf
lods
push
adc
jle
imul
add
cmp
insl
inc
std
popf
pop
xor
iret
sbb
cltd
mov
mov
icebp
jecxz
mov
adc
stos
xor
fwait
push
cmc
out
mov
push
pop
jo
addl
or
int
leave
mov
sbb
cld
mov
call
outsl
test
mov
adcl
lds
push
pusha
mov
xchg
in
pop
call
call
ret
sub
mov
popf
sbb
fldl
and
cwtl
pop
in
ficompl
adc
push
jns
shlb
xorb
push
nop
out
cld
sub
scas
pop
pop
out
loopne
pop
sbb
pop
mov
xorl
mov
fmull
push
and
pop
in
inc
leave
pop
clc
shrl
add
adc
mov
xchg
das
and
ja
mov
sub
lods
xchg
push
cmp
mov
adc
mov
std
dec
cmp
cmpb
and
push
xchg
rorl
xor
clc
ret
sbb
mov
das
inc
adc
pop
inc
cld
xchg
jecxz
loopne
rcl
pop
jecxz
or
lret
sbb
scas
inc
shlb
imul
and
jg
push
and
movsb
pusha
dec
mov
mov
hlt
ds
push
les
jne
ss
sub
shr
insl
leave
pop
cmp
flds
pop
cmp
mov
fs
in
iret
lret
push
push
mov
fidivl
dec
sub
cmp
xchg
xorl
jg
push
ret
mov
movsl
icebp
and
and
inc
test
mov
fsubrs
loopne
aad
rorb
jae
dec
mov
jmp
pusha
xor
repz
std
sahf
cmc
lahf
test
stos
sub
push
push
adc
push
fstps
push
mov
cmc
pop
lret
lock
in
or
pop
ret
test
xor
xor
inc
enter
mov
fisubs
fldenv
inc
fs
fmuls
dec
and
rcrl
cmp
push
mov
add
or
dec
sub
ja
and
lret
jne
imul
insl
push
and
data16
jmp
stos
adc
sbb
pop
stc
adc
and
faddl
add
xor
jle
bound
inc
ret
inc
mov
arpl
leave
outsl
flds
xchg
xchg
jge
mov
js
je
aas
sub
mov
and
test
filds
imul
test
stos
push
ret
mov
xor
mov
scas
shlb
pop
sahf
clc
repnz
xchg
stos
getsec
xchg
xchg
pop
pop
and
lahf
xchg
mov
lret
pop
xor
inc
insl
mov
imul
cmp
cld
inc
xorl
movsl
jae
shlb
adc
test
nop
jne
sti
xchg
push
sub
rcrl
jae
push
in
dec
jbe
push
std
push
pushf
pop
cli
in
lods
sub
int3
mov
inc
mov
lcall
popf
ljmp
ds
cmpsl
mov
and
lds
mov
cmc
add
sub
jns
push
fcoml
sbb
lods
pop
in
arpl
lcall
fistpll
mov
push
dec
filds
std
outsl
or
icebp
inc
pop
sub
xor
mov
repz
adc
les
out
aaa
repz
arpl
xchg
xchg
iret
add
arpl
leave
mov
leave
adc
push
fwait
jne
push
loope
jbe
cmp
in
rcr
fwait
test
jnp
test
dec
jecxz
fdivrs
xchg
fisttps
mov
push
or
lock
inc
push
test
mov
shrb
ficomps
mov
xor
popf
inc
movsb
notl
push
sub
cwtl
cmpb
hlt
xchg
mov
cwtl
nop
or
mov
dec
arpl
addr16
xchg
mov
nop
sbb
daa
cmp
pusha
pop
push
fnstenv
mov
cmp
xchg
dec
cwtl
xor
add
jno
mov
fs
mov
push
sub
mov
pop
jge
cmpsl
xchg
loopne
cmp
cs
sbb
mov
jecxz
test
shll
pop
into
xor
insb
enter
pop
sbbb
ds
xor
and
dec
sbb
sub
xchg
bound
push
xchg
es
nop
rol
loope
shrl
mov
jno
adc
mov
inc
movsl
in
jnp
fs
lret
cmc
pop
xor
test
js
push
mul
adc
pusha
aam
mov
mov
bound
adc
and
mov
clc
call
fsts
std
xchg
aad
clc
fwait
loope
xor
xchg
add
addr16
xchg
cld
out
xchg
dec
mov
addl
int
pop
testl
out
iret
dec
arpl
push
dec
adc
int3
in
cmp
cmpsb
fs
and
xchg
jne
mov
lahf
push
mov
pop
cmc
pushf
sbb
out
lcall
cltd
repnz
lcall
adc
xchg
or
jg
push
les
aad
fsubr
sbb
xor
adc
mov
mov
mov
push
push
jl
xchg
cld
icebp
out
pop
ret
pop
sarb
push
addb
push
xlat
fbstp
xchg
adc
pop
in
test
jae
mov
sub
lcall
les
or
repz
xchg
add
cmpsl
push
movsl
cmpb
jbe
leave
dec
inc
fistps
push
movsb
jmp
dec
iret
mov
push
sbb
popa
add
call
add
jl
xor
sarb
repz
dec
out
fdivl
mov
lods
icebp
push
push
push
hlt
pushf
hlt
shrb
stos
sbb
mov
mov
mov
out
push
or
fistl
mov
add
xor
mov
push
mov
into
jno
push
add
and
dec
cmp
in
dec
and
arpl
mov
mov
fwait
dec
mov
sti
push
xchg
int3
sbb
mov
fwait
popa
lret
mov
xchg
xchg
movsl
mov
repz
js
mov
pop
cli
rolb
xchg
mov
popa
add
push
lods
mov
pop
cwtl
and
mov
insb
pop
mov
cmpb
sbb
imul
sub
hlt
ds
jmp
dec
mov
cmp
cmc
mov
pop
and
pop
sahf
add
leave
mov
inc
and
pop
mov
add
adcb
push
inc
pop
pop
insb
shl
int
lret
sarl
loopne
mov
dec
clc
std
inc
repz
xor
cli
xchg
cmp
fs
add
adc
mov
inc
sub
jno
adc
loopne
leave
jns
pop
cmp
mov
cld
orl
cs
outsl
shld
adc
idivl
pop
and
mov
push
stc
mov
pop
mov
xchg
fabs
xchg
das
mov
andb
pushf
and
fsubrs
sub
xorb
mov
gs
les
inc
je
jnp
cmp
sub
mov
pop
mov
adc
stc
xchg
adc
or
fldl
bnd
adc
loop
sbb
push
push
gs
cmc
xchg
idiv
or
pop
mov
lock
mov
mov
xchg
sub
jo
mov
mov
mov
cwtl
aad
mov
bts
cwtl
clc
push
out
fstpl
lcall
dec
and
in
mov
pop
dec
sub
pop
xor
xchg
repz
mov
xchg
arpl
std
push
out
cmpb
ror
in
xchg
push
push
add
mov
add
mov
into
adc
das
jmp
lret
test
sub
imul
lods
xchg
aam
fstl
imul
push
inc
aad
sub
jb
inc
add
mov
cmc
mov
cwtl
sub
push
fld
std
adc
or
mov
aaa
xchg
and
jnp
pop
push
shlb
jmp
sbb
sub
jo
xchg
ss
ret
jae
mov
xor
fcoms
jge
mov
xchg
pop
incb
jge
ffree
jb
mov
jl
sub
jl
lea
cltd
xchg
mov
pop
pop
movq
cmovs
sub
dec
sahf
inc
pop
cltd
les
push
adc
jno
inc
xchg
sub
inc
addl
sbb
dec
xor
andb
jp
add
movsl
add
das
call
ficompl
bound
rcrb
mov
or
int
sub
mov
mov
mov
xchg
leave
cmp
test
pop
inc
mov
sub
lods
into
pop
fnsave
adc
das
inc
lock
dec
xchg
out
and
jb
or
mov
jmp
adc
push
and
mov
shll
sbb
add
test
loopne
jns
cld
cmp
popf
imul
ja
cltd
stos
nop
rcr
cs
enter
rcl
pop
mov
mov
sub
jb
test
sub
pop
or
addb
je
jecxz
in
nop
jno
pop
mov
cmp
aam
cmp
addr16
out
outsl
cli
xchg
repz
in
cmpsl
andl
sahf
bound
inc
lahf
jae
testb
push
jmp
loop
cmpsb
jno
fisubl
sub
aad
xchg
popf
cwtl
aaa
xchg
aad
mov
and
pop
lock
mov
jmp
fsub
adc
test
cmpsl
rorl
adc
mov
hlt
jle
ret
repz
push
and
pop
mov
lock
es
or
xchg
push
jecxz
jecxz
loope
loop
loopne
outsb
scas
mov
movsb
mov
add
cmpsl
shl
int
imul
hlt
mov
rol
icebp
push
and
in
push
lock
adcl
pop
push
es
call
push
ret
or
or
cmpsl
ret
pop
outsb
dec
mov
movsb
inc
fsubl
adc
jl
test
cmpsl
rcl
int
imul
mov
xor
shrl
xor
and
in
jae
xorl
pop
jbe
cmp
dec
cmpsb
shll
add
leave
movsb
fbld
das
mov
pusha
or
and
sbb
lcall
xchg
mov
ficoml
popa
popf
clc
adc
lea
add
mov
adc
and
sbb
sbb
cmp
pop
addr16
pop
lcall
xchg
xlat
jno
jno
test
xlat
popf
ret
xchg
mov
push
scas
xor
push
imul
mov
pop
int
or
mov
fsubrl
pop
popf
xchg
addr16
add
stos
imul
cwtl
fldt
ficomps
mov
mov
popf
mov
lods
mov
pop
and
adc
std
or
fsubs
dec
je
dec
je
push
dec
jmp
inc
outsl
cmp
inc
outsl
sub
xchg
push
lods
lea
je
fwait
jp
jns
and
les
mov
cmc
fwait
arpl
push
dec
insb
mov
mov
jle
xchg
sub
adc
fnstenv
jae
pop
subl
outsb
xlat
andb
and
leave
lea
insb
loop
mov
xchg
xchg
dec
test
dec
fnsave
add
fdivs
xchg
sub
sub
je
pusha
jp
push
pop
add
mov
nopl
jmp
add
xor
jbe
stc
fs
es
cli
dec
pop
js
jne
pop
leave
call
jge
sti
dec
mov
pop
call
ljmp
lahf
mov
es
cli
and
xor
jle
add
mov
and
sub
sub
lea
and
test
fcmove
lods
sbb
jl
xor
stc
push
xor
add
xchg
xchg
add
in
lcall
jge
std
xor
push
fbstp
ds
adc
push
jo
cmp
fsubrs
pushl
and
mov
push
mov
inc
cmp
push
mov
lock
scas
repz
and
scas
adc
fiadds
jae
nop
aas
test
sbb
mov
xor
inc
lahf
scas
loop
push
pop
adc
mov
daa
icebp
popa
xchg
jmp
sub
clc
or
jge
nop
pop
push
aad
std
popf
inc
sub
xchg
mov
pop
jno
popa
adc
movsb
je
mov
sub
loopne
enter
fbld
shll
xchg
addr16
push
pusha
dec
push
rorb
or
fistps
mov
test
pusha
sahf
xchg
jge
daa
in
popa
stos
hlt
or
xchg
cmp
adc
inc
movzwl
lcall
lea
rclb
inc
cmp
repz
jb
shll
lods
mov
addr16
fwait
sbb
sub
ret
mov
xchg
test
cmp
adc
test
imul
jns
mov
dec
ja
jno
jecxz
xchg
push
cmpsb
adc
jb
inc
cmp
cmp
push
in
rcll
clc
leave
xor
pop
jl
adc
movsb
xchg
adc
insl
jp
fimuls
sub
jae
inc
cmp
mov
jb
lea
lods
pushf
inc
out
xor
mov
sub
push
ret
cmp
lds
lock
inc
adc
bound
pop
mov
mov
hlt
adc
xor
enter
push
xchg
roll
or
lods
aaa
jge
out
int
push
les
xchg
inc
jmp
out
push
jle
and
xor
dec
push
icebp
scas
stos
cmc
ret
and
cmc
mov
sub
push
xor
call
or
ficomps
hlt
loopne
xchg
cmp
in
inc
push
xor
or
imul
decl
push
sub
mov
inc
rorl
sub
pop
jp
or
jo
pop
sbb
mov
xor
repz
mov
lock
push
sub
out
rcrb
cmpsl
jmp
sti
shlb
in
jb
loopne
adc
je
add
mov
pop
ss
cmpsl
xor
lods
jne
jecxz
outsl
adc
xchg
adc
or
cmc
xchg
bound
push
xor
iret
sbb
in
dec
in
in
imul
movsl
in
jns
and
mov
lods
rcll
movsb
outsl
pop
loop
cmp
out
test
sbbb
push
aas
mov
fsubrl
sbb
cmpsb
pushf
cmp
repz
leave
pop
dec
insb
scas
les
and
cli
xor
aas
mov
sahf
popf
popa
das
or
rorl
adc
hlt
fisubrl
sub
lret
sti
jmp
add
cmc
rcll
or
mov
xchg
and
jecxz
in
xchg
xor
dec
mov
dec
in
cld
and
jge
enter
jbe
dec
lods
mov
xchg
and
ss
sbb
aam
aad
push
popf
mov
xor
xor
iret
std
adc
pop
lret
mov
pop
mov
imul
add
scas
loopne
clc
in
iret
cwtl
ret
scas
jmp
xor
xor
fcoml
cmp
push
mov
mov
mov
pop
adc
fldt
popf
lds
mov
sbb
adc
mov
cmpsl
fnsave
dec
lock
pop
sbb
push
movsl
outsb
mov
mov
mov
push
jo
or
pop
cmp
lea
mov
add
xchg
xchg
mov
lret
sbb
fldt
sub
xor
into
gs
jge
int
sbb
adc
adc
popf
out
sahf
int
test
or
adc
jl
pop
push
sbb
or
popa
inc
dec
mov
add
outsl
ret
stc
ret
mov
nop
in
movsl
xchg
outsb
loope
je
pcmpgtb
xor
lods
fnstsw
stc
insl
cmp
jnp
sbb
scas
push
push
pop
sbb
jmp
push
aad
in
roll
loope
mov
lret
pop
roll
aam
pop
dec
dec
inc
cli
mov
lock
fnstcw
out
loope
in
aad
jo
xor
daa
xchg
xchg
mov
inc
xor
dec
jg
outsb
ss
or
ja
jno
roll
and
and
mov
movsb
push
adc
sbbb
pop
or
aam
xchg
jns
incl
cmp
add
jo
pushf
out
or
in
push
or
iret
fcoml
xchg
xorb
add
jns
fwait
jle
jmp
adc
jo
pop
arpl
mov
je
cmc
sbb
cmc
stos
push
push
lahf
jmp
xchg
out
sub
pop
or
mov
shl
pop
movsb
mov
das
pop
mov
pop
pop
inc
sub
sub
sahf
push
pop
das
psrlw
push
add
lcall
or
sub
mov
xchg
push
nop
fadds
bound
test
addb
jb,pn
jno
fildl
inc
and
push
push
bound
xchg
mov
push
sbb
stos
dec
mov
mov
lock
js
jno
dec
xor
mov
add
lods
out
lock
mov
bound
sbb
mov
je
or
rorb
hlt
das
adc
mov
mov
lcall
mov
addb
xchg
adc
mov
loop
push
mov
inc
je
daa
nop
or
mov
aam
popf
mov
icebp
xor
push
jb
mov
jbe
daa
jno
std
lret
pop
daa
and
pop
and
sub
cmc
push
lahf
clc
push
insb
lock
adc
jb
out
push
dec
cmpl
sbb
xchg
push
xchg
push
mov
xchg
lcall
nopl
inc
mov
push
sub
imul
inc
fwait
mov
sbb
pusha
mov
call
add
imul
loopne
js
movsl
cmpsb
inc
int
push
stc
dec
inc
movsl
outsb
mov
jle
fcomip
xchg
stos
xor
or
push
arpl
pop
repnz
idiv
ljmp
mov
out
xchg
xor
mov
mov
inc
adc
push
and
into
nop
popa
jecxz
movsb
sahf
pop
sub
aam
pop
call
cmp
test
scas
fcoml
jmp
fcoml
add
pop
mov
popf
fwait
push
add
pop
out
push
sub
push
adcl
jl
cwtl
pusha
mov
and
lods
jmp
sub
inc
xor
pop
hlt
rorb
xlat
cs
cmp
neg
data16
adc
mov
push
inc
pop
dec
adc
ljmp
outsl
jecxz
xchg
shll
lock
popa
rclb
inc
in
dec
sub
sub
mov
popf
jg
shl
data16
std
push
aam
ja
scas
xor
cs
dec
sub
add
and
dec
lret
mov
cmc
std
scas
pop
mov
fisubrs
add
and
inc
and
mov
and
sbb
cmp
pop
repz
inc
add
or
aad
jge
mov
mov
or
xchg
outsl
adc
push
addb
mov
paddsw
add
xchg
ret
lods
push
jno
fs
and
mov
add
rcrb
mov
pop
inc
add
std
test
mov
scas
out
decl
mov
test
sti
inc
xor
jecxz
lahf
pop
pushf
jp
cmp
jl
and
add
mov
nop
push
or
lret
jecxz
rorb
pop
and
in
adc
mov
fildl
in
push
rorb
cmp
push
cmp
mov
rcl
mov
insb
fdivp
cltd
fsts
adc
lods
jge
pop
push
icebp
adc
out
lahf
xor
xchg
dec
jmp
cld
jmp
lcall
and
jb
jp
or
mov
add
aam
stos
orl
jb
mov
arpl
xor
dec
mov
xor
out
xchg
xchg
cmp
mov
mov
mov
iret
test
mov
cmp
arpl
fidivs
mov
test
xor
pop
shrl
dec
jecxz
sbb
std
and
adc
daa
lock
call
mov
xchg
jl
lcallw
gs
xchg
je
idivb
xlat
add
pusha
cwtl
stos
mov
xchg
lds
lods
or
pop
fs
push
xor
lods
outsb
sub
pop
fstps
and
pushf
dec
mov
rcll
and
aam
mov
cs
cs
icebp
js
push
out
mov
cmp
fsubrs
in
mov
or
aas
dec
inc
outsl
dec
and
movsb
cmpsb
add
mov
pusha
sbb
push
stos
dec
lods
mov
adc
pop
mov
xor
stos
jecxz
sahf
mov
inc
int
adc
push
inc
push
ror
and
outsb
repnz
ss
pop
push
mov
loopne
jecxz
movsl
and
sbb
outsl
adc
mov
dec
mov
sti
push
jbe
mov
sbb
int3
pop
cwtl
test
cmpsl
xchg
ja
xor
rcrl
int3
mov
inc
mov
stos
cmc
pop
push
push
mov
mov
sbbl
gs
stc
xchg
mov
repz
or
pop
mov
and
xchg
xor
arpl
test
stos
bound
lods
cmpsb
push
jne
cltd
cmp
lret
arpl
dec
jo
test
std
lods
test
push
rol
faddl
sub
popf
and
rcrb
adc
pop
daa
popa
shrb
test
inc
out
inc
sub
repz
leave
movsl
lds
hlt
out
loopne
not
and
cmpsl
into
mov
js
pop
ss
test
sbb
ja
mov
lds
lret
scas
push
ljmp
loopne
xchg
push
rolb
and
sbb
aam
xchg
mov
icebp
jae
lods
push
push
sahf
cltd
adc
imul
cmp
jo
lods
mov
add
negb
lds
pop
push
cwtl
dec
sbb
adc
mov
fsts
test
test
dec
mov
test
cmp
or
cld
test
or
leave
dec
adc
imul
mov
lock
xchg
sahf
test
inc
and
dec
jge
adc
cmp
sbb
test
out
xorb
jnp
ret
bound
push
adc
fdivrs
sub
popa
pop
inc
xor
mov
fidivs
inc
loope
mov
mov
jecxz
and
push
jb
ja
push
cmp
mov
jo
dec
xchg
sub
dec
fcompl
jecxz
rorl
push
or
adc
pushf
lcall
fisttpll
pop
fidivs
js
inc
cmc
xchg
push
xchg
mov
int3
xor
adc
inc
sbb
imul
popf
jl
fsubrs
xor
rclb
dec
clc
pop
mov
out
pop
pop
push
dec
movsl
pop
fs
xor
ljmp
xor
push
jle
sub
adc
xchg
sbb
jle
xor
out
insl
popa
push
pop
add
mov
and
out
mov
cmp
clc
sub
mov
jns
out
insb
adc
adc
in
aad
in
mov
jb
xor
xchg
pop
sbb
test
dec
aad
adc
adc
rcrb
fnstenv
add
arpl
sti
sbb
enter
ficompl
pop
mov
cwtl
cmp
or
pop
dec
sbb
les
inc
push
and
mov
and
into
push
test
dec
paddsw
mov
int3
cwtl
add
aad
out
lcall
fnstsw
out
into
xor
nop
mov
ret
js
and
mov
in
rorl
cli
cmpsl
inc
inc
ss
ds
sub
push
and
in
xor
cs
sub
push
mov
std
iret
xchg
jmp
add
mov
pop
xchg
fwait
dec
push
pushf
adc
jl
imul
sti
popf
jb
sbb
cmp
mov
les
ficoms
rorl
clc
and
sbb
mov
test
out
imul
push
insl
outsb
mov
xchg
out
ret
dec
sbb
mov
push
pop
scas
adc
xchg
adcl
xchg
mov
shrl
popa
xchg
sub
xchg
dec
dec
and
movsb
mov
pop
add
adc
setne
mov
andb
xchg
mov
lds
push
mov
fucomip
pop
lds
cmp
mov
in
stc
es
pusha
lods
push
mov
mov
xchg
sbb
loop
mov
push
ret
pop
fstpl
mov
jno
mov
dec
xlat
cmp
shl
xchg
sub
mov
xlat
sub
cmp
dec
pop
lahf
sub
in
and
inc
cli
push
xchg
and
adc
xor
imul
test
or
or
daa
jae
or
notl
imul
cwtl
rcrl
adc
add
mov
test
pop
movsl
pop
jnp
inc
mov
leave
mov
pop
and
inc
jb
lock
jno
sub
nop
incl
sub
adc
je
add
mov
jg
pop
jno
xor
xchg
sarb
push
mov
pop
daa
stos
inc
cmp
sahf
jp
mov
xchg
shl
push
push
lds
jle
sbb
popa
mov
fnstcw
mov
mov
mov
adc
mov
neg
into
repnz
mulps
push
mov
clc
jp
sub
lcall
push
loope
movsl
xorb
mov
fdivrl
dec
aas
xor
sbb
push
lea
xchg
pop
cmc
pop
xor
sbb
dec
xchg
test
cmp
add
push
fisttpll
mov
fwait
pop
mov
nop
call
mov
mov
sbb
lods
int3
xchg
cltd
stc
push
cmp
fadd
and
fwait
mov
or
xchg
iret
dec
jbe
and
mov
adcl
pop
pop
imul
rclb
mov
xchg
bound
adc
pop
mov
repz
imul
pop
push
ljmp
ss
stc
stos
clc
data16
cmp
jmp
mov
push
add
stos
js
test
in
xchg
cmp
xor
dec
cmp
lahf
ret
imul
fwait
push
movsl
or
xorb
insb
jns
out
repnz
mov
adc
pop
imul
push
stos
adc
js
int3
jmp
xchg
stc
cmpl
push
imul
xchg
in
jo
mov
hlt
xlat
adc
mov
shr
jg
cwtl
dec
ret
dec
dec
mov
xor
scas
aam
sbb
cmc
and
mov
addr16
pop
nop
mov
leave
out
out
movsl
into
arpl
jl
ficoms
jo
outsl
test
xor
nop
inc
pop
hlt
push
mov
int3
sbb
fwait
dec
fldl
mov
xor
mov
add
rcrl
cltd
iret
es
push
nop
xor
jb
jmp
aad
sbb
lea
cs
sub
in
mov
mov
pusha
idiv
movsl
mov
or
pop
shrb
jbe
xchg
dec
push
cmp
or
imul
mov
out
arpl
mov
push
mov
push
imul
insb
mov
mov
or
or
sub
lods
repnz
repnz
jne
mov
loopne
gs
push
pop
jne
jbe
and
jbe
sbbl
dec
pop
ficomps
xchg
out
lock
popa
scas
cs
sbb
sbb
xchg
lods
fcoms
leave
fs
inc
dec
std
cltd
cmp
or
pop
cmp
rol
outsb
dec
jge
mov
ja
pop
addr16
push
pop
cld
icebp
jmp
cmp
cmp
fcom
divb
xor
aam
mov
cli
mov
dec
xchg
xor
mov
insl
in
pop
mov
push
rorl
dec
outsl
loope
xchg
push
push
pop
pop
loopne
cli
cli
xor
push
daa
inc
add
pop
cmp
xchg
hlt
adc
cmpsb
xchg
iret
inc
or
out
out
cmc
aam
mov
lret
mov
subl
lock
hlt
xchg
outsl
mov
sbbb
xlat
xor
sub
lds
sbb
push
adc
decl
in
fwait
cli
push
and
repz
out
call
lods
popf
mov
jl
nop
loopne
cmp
nop
stos
scas
faddl
sub
sbb
test
je
mov
icebp
and
xchg
movsl
dec
add
pushf
shlb
mov
les
lret
and
js
push
lods
sbb
fidivl
xchg
push
pop
sti
fisubrs
lock
sarl
std
test
ja
cld
mov
mov
divl
lret
pop
dec
jne
push
or
rcl
add
and
hlt
lret
pop
imul
and
adc
xor
movsl
aad
add
add
out
adc
in
jmp
cmp
jecxz
shll
lods
add
dec
lcall
xor
addb
or
mov
push
add
pop
sbb
cmc
ds
cmp
mov
pop
imull
mov
dec
push
jb
fsub
sbb
test
in
mov
lods
js
push
pop
and
popf
jne
aam
fisttpll
dec
fstps
and
scas
pop
cltd
push
nop
roll
insb
test
add
shlb
pop
push
cwtl
mov
sub
pop
lock
push
enter
imul
fiadds
xor
cmc
dec
or
popf
push
lcall
addb
push
cs
xchg
sub
arpl
push
es
ds
sti
xchg
sar
rclb
test
fdivr
xchg
ss
stc
cltd
scas
addl
jmp
add
inc
rcrb
sbb
lcall
xor
pusha
cmp
rclb
jp
add
gs
int3
and
rclb
sbb
aam
xchg
lret
lahf
ds
mov
insb
lods
and
pop
nop
add
loopne
sarb
push
repz
out
jecxz
cltd
cld
push
mov
out
dec
mov
js
xor
aas
push
mov
mov
call
mov
into
ret
push
fisubl
mov
sti
iret
jmp
xor
xchg
sbb
cmpsb
pushf
mov
fidivrs
mov
xchg
xor
pop
movsb
mov
pop
push
aam
es
and
dec
iret
and
jg
dec
stos
adc
sarl
repz
add
ljmp
adc
xchg
or
pop
jne
lods
dec
sbb
adc
int
test
enter
mov
mov
bound
mov
adc
mov
cwtl
jns
add
push
aas
lea
inc
sbb
sub
xor
adc
js
mov
ljmp
pop
movsb
lea
aam
ret
fimull
sub
repz
push
cld
mov
popa
lcall
ds
mov
les
call
pusha
add
cmp
arpl
mov
xor
out
mov
mov
xchg
divb
movsl
jb
leave
fisttps
inc
pop
cmp
stos
mov
popf
lcall
adc
sub
jge
sbb
jmp
lock
fstpt
jmp
fnstsw
xchg
or
jg
out
inc
jae
repz
pop
pop
cli
fwait
mov
pusha
mov
loopne
pop
jg
sbb
adc
bound
xchg
cmp
movsl
fmuls
lret
pop
fwait
pop
pop
call
pop
out
scas
sub
xlat
scas
dec
pop
shrl
xchg
xchg
xor
xor
lods
scas
dec
sbb
and
sub
xor
iret
lret
push
aaa
cmp
mov
pop
push
popf
jmp
scas
lods
ret
adc
mov
cwtl
cwtl
sub
sbb
push
call
scas
cmc
jl
fsubr
ficomps
enter
iret
daa
notl
xor
sbb
pop
popf
lock
sbb
pusha
or
pop
stc
cli
mov
fwait
jmp
lock
push
mov
cmp
mov
or
flds
call
cmp
aam
or
sbb
dec
push
xchg
xchg
roll
je
repz
push
inc
lahf
dec
mov
scas
mov
xor
test
xchg
int3
pop
push
arpl
fbld
or
pop
and
arpl
sbb
lahf
stos
mov
mov
sbb
fs
in
or
int3
xchg
push
xor
loop
mov
jg
mov
mov
lds
aas
mov
aaa
and
jno
lds
cmp
xlat
sbb
xchg
pushf
jge
mov
sbb
mov
push
cmc
or
test
xlat
mov
aaa
fisubrl
loop
movsl
xchg
adc
add
xchg
jle
pop
test
and
add
ret
jno
lock
xchg
sbb
add
ds
add
ljmp
pop
inc
movntps
dec
mov
sbb
gs
add
dec
push
dec
lods
cmp
and
mov
jo
mov
int3
and
mov
stc
adcb
push
mov
push
pop
repnz
pushf
adc
out
xorb
push
pop
cmpsb
pop
shlb
mov
push
insl
mov
cli
cmovge
mov
push
xchg
nop
xchg
jmp
scas
xor
nop
cltd
addb
popl
cltd
out
mov
push
out
sub
cmpsb
and
inc
inc
les
stos
in
xchg
mov
in
xor
ret
cld
push
mov
sahf
xlat
push
iret
or
rcrb
loop
mov
fwait
or
daa
rcll
hlt
xor
fnstsw
jno
iret
mov
mov
pop
std
push
sahf
fwait
dec
sbb
fxtract
jbe
cmpsb
mov
or
icebp
mov
lds
mov
or
cmc
jb
jge
out
xor
sbb
fsts
push
cmp
mov
leave
push
hlt
scas
fistpll
xchg
mov
in
lahf
inc
das
mov
xchg
and
int3
mov
sbb
sub
push
clc
jmp
xchg
dec
mov
push
sbb
ja
or
xchg
scas
mov
jo
imul
imul
cwtl
lods
xorl
sub
inc
rorb
pop
ljmp
and
daa
or
call
cmp
stos
nop
addl
sub
or
orl
bound
insl
fcomps
cmp
test
dec
push
push
subl
xchg
adc
movsb
cwtl
and
jb
dec
cmp
stc
mov
pusha
xor
xorl
mov
dec
and
std
insb
xchg
jne
adc
mov
cmpb
pop
hlt
mov
fsubrl
mov
cmp
cld
pop
std
fwait
in
lahf
fdivr
lods
out
loope
das
adc
icebp
out
mov
push
adc
pop
dec
dec
out
push
add
xor
push
xchg
add
push
push
xchg
xor
imul
jecxz
idivw
cmpl
sbb
inc
bound
xchg
cli
dec
add
hlt
pusha
mov
mov
std
adc
pop
pop
in
push
insl
pop
fmull
jb
aaa
ret
mulb
popa
xor
sbb
adc
enter
sbb
stos
jle
mov
js
enter
movsl
pop
jmp
or
fmuls
pop
pop
xchg
out
xor
fiadds
pop
xchg
shlb
hlt
dec
add
shlb
ljmp
call
data16
add
call
daa
mov
push
shl
xchg
rcrl
daa
xchg
add
in
or
jmp
icebp
mov
fisubl
add
pushf
call
repnz
and
pushf
push
adc
sub
movsl
pop
mov
test
inc
scas
ret
lock
jnp
loope
fdivr
jmp
sbb
insb
xor
sub
sbb
and
jne
cmpsb
popa
les
out
fsubp
inc
mov
mov
mov
xchg
pop
test
std
xor
inc
add
inc
push
adc
icebp
icebp
bsf
push
repnz
daa
mov
out
adcl
sub
in
in
pop
and
add
imul
dec
dec
and
or
xor
jl
mov
sub
faddl
or
hlt
inc
lcall
stos
pop
insl
mov
shlb
cmp
add
les
stos
cmpsl
adc
xchg
jle
shl
inc
clc
jae
adc
xor
idivb
iret
fsts
inc
lret
lds
or
fsubrl
mov
jnp
mov
and
jl
cltd
test
jg
hlt
push
xchg
test
or
or
add
mov
and
fcomps
mov
iret
ficompl
push
or
mov
fdivrl
sbb
sub
add
shl
mov
outsl
mov
mov
pop
lock
fdivr
insb
lock
xor
sbb
popf
rclb
dec
or
aas
daa
fwait
or
js
cwtl
lea
add
or
out
rcl
jnp
adc
push
outsb
mov
adc
imul
adc
mov
fninit
sub
or
pop
dec
jl
dec
dec
add
fmulp
fmuls
adc
cmp
mov
xchg
sbb
ret
mov
adc
aas
js
mov
inc
leave
dec
push
iret
xor
repnz
xchg
stc
push
mov
mov
xchg
push
fsts
fstps
push
jg
push
mov
push
push
adc
and
or
dec
mov
rcll
pop
insb
cmp
shlb
fldl
cmp
sbb
stos
icebp
jbe
and
adc
loop
sub
loopne
insl
imul
rcrb
add
jge
imul
movsl
xlat
dec
shrl
xchg
dec
xor
mov
pop
das
dec
repnz
adc
mov
sarb
popf
insb
fwait
and
aam
popf
xchg
data16
sub
lock
fsts
dec
cmp
cs
push
xor
aad
idiv
fsts
lock
lods
fidivrs
popf
xchg
dec
dec
jecxz
cmp
and
not
aam
push
xor
ficomps
sbb
dec
mov
sub
adc
sub
rcr
popf
cwtl
cs
or
aam
arpl
in
das
lahf
popf
shrb
lahf
pop
jmp
mov
negb
mov
insl
mov
adc
and
inc
out
test
fwait
xlat
popa
mov
or
pop
insb
scas
js
mov
insb
shlb
insb
pop
loop
or
inc
push
push
push
scas
xchg
lods
pop
rcl
and
movsl
sub
das
dec
pop
sbb
push
cld
or
mov
aaa
dec
add
push
movsl
scas
adc
cmp
out
lcall
or
pop
sub
xor
xlat
and
cli
mov
loope
pop
mov
dec
popf
adc
lret
in
pusha
popf
push
mov
cmp
pushl
nop
sub
mov
jl
pop
rorb
fsubl
sbb
push
cmp
add
nop
push
cmp
inc
sbb
ffree
lret
mov
dec
cltd
iret
shr
add
xchg
mov
xchg
in
fwait
iret
and
sti
push
jl
jb
cmp
mov
mov
fisttps
adc
in
or
mov
or
dec
test
rclb
fsubl
or
ret
sahf
jecxz
das
jecxz
fimull
cmp
xlat
test
iret
inc
subb
es
cli
sbb
xor
mov
fsubrl
pop
pop
push
in
hlt
fldt
and
shlb
adc
stos
scas
mov
hlt
mov
outsl
and
out
pop
test
jo
or
bound
mov
in
repnz
movsb
pushf
or
data16
pop
mov
flds
add
sub
mov
and
pushf
ret
mull
cmp
iret
inc
pushf
mov
ja
pop
ret
popf
push
inc
pop
cld
into
inc
loop
aam
push
pop
sbb
mov
insb
inc
lods
xchg
shlb
mov
mov
cmp
mov
xor
push
sub
aam
aad
fidivrs
xor
shll
ljmp
sbbb
push
mov
adc
xor
cmpsb
ja
sbb
pop
xchg
mov
cwtl
xchg
sahf
in
es
mov
cmc
sub
dec
inc
dec
lods
xor
xchg
fcomip
adc
sub
mov
movl
repnz
movsl
fists
bound
rclb
loopne
int3
loop
dec
push
icebp
pop
cmc
jle
adc
add
add
imul
mov
call
push
adc
scas
pop
mov
dec
loope
into
or
test
icebp
push
sbb
out
sub
outsl
jo
inc
push
mov
mov
mov
aad
pusha
ja
in
or
and
pop
mov
out
jnp
push
mov
mov
push
pop
xchg
pop
sbb
mov
push
repz
in
addr16
adc
xchg
std
push
push
or
jne
popa
mov
mov
incb
fisubrs
inc
ret
mov
lret
or
add
cli
adc
jns
int
sub
mov
jle
cld
bound
leave
std
adc
inc
cwtl
cmovbe
daa
loop
aad
test
mov
sbb
movb
jg
das
out
loope
testb
test
andl
enter
mov
mov
sbb
mov
mov
ds
mov
push
xor
in
imul
pop
aas
hlt
fmull
sbb
mov
aaa
adc
sbb
ret
in
adc
adc
xorb
in
xlat
adc
aaa
repnz
icebp
pop
inc
or
inc
cmp
lods
mov
out
push
xchg
push
pushf
push
xor
mov
pop
xor
cmp
sbb
mov
subl
adc
iret
repnz
add
cmp
fcmovne
filds
ss
in
mov
clc
mov
lods
mov
mov
push
pop
pop
enter
test
stos
push
test
sub
mov
dec
sbb
fsubs
aas
jl
sbb
stos
sbb
xor
adc
daa
mov
call
push
sub
mov
loop
ja
fwait
repz
loop
or
push
add
lahf
jmp
xorb
sbb
sbb
mov
rcll
push
mov
stos
ljmp
push
stos
sub
dec
pop
int
ret
in
cmp
loop
movsl
ds
pop
adc
cmp
int
sub
xchg
adc
jae
je
stos
insb
add
jg
pop
ret
push
pop
sarb
loopne
aam
test
sub
xlat
popa
repnz
xchg
sub
sbb
mov
and
xchg
rclb
push
lds
stos
out
xchg
in
ljmp
add
push
stc
adc
adc
pop
mov
das
cld
stos
pusha
push
cmp
aam
or
mov
mov
mov
lea
ljmp
repz
addb
xchg
enter
push
test
cmpsb
cmp
std
mov
push
out
add
sbb
xchg
xchg
data16
mov
push
xor
test
cmp
xor
lock
jne
insl
xor
push
movsb
sub
adc
mov
stc
hlt
adc
into
pop
xchg
pop
rcl
in
push
mov
std
sub
fisubrs
cmp
out
movsb
lods
fwait
push
sub
mov
push
push
dec
je
push
mov
mov
xchg
mov
mov
mov
mov
sbb
jecxz
mov
mov
int
and
sahf
addr16
mov
and
jo
pop
or
push
cli
or
fldl
ror
std
push
or
out
sub
daa
mov
fwait
ljmp
adc
adc
stc
test
sbb
xor
cld
int3
gs
xchg
dec
dec
pop
push
sbb
outsl
mov
push
push
mov
or
std
jmp
mov
sub
in
and
add
les
mov
fucom
mov
aas
and
rcl
jge
insb
push
inc
push
adc
adc
jmp
aaa
jns
sub
add
or
push
xchg
add
les
mov
arpl
mov
scas
in
jmp
mov
push
sbb
cmp
shll
sar
into
sahf
mov
in
dec
imul
sahf
push
loop
pop
dec
out
add
push
push
push
sbb
rorb
les
xchg
in
inc
pop
pop
inc
push
ja
mov
int3
adc
xor
cmp
mov
inc
in
ss
mov
in
mov
or
push
dec
jecxz
jnp
push
int
in
dec
mov
outsb
out
and
mov
mov
repnz
and
and
xor
add
cmpsb
push
inc
pop
testl
scas
pushf
lahf
and
mov
rclb
das
fstpl
sahf
pop
loop
jno
xchg
add
shll
pushf
scas
shlb
inc
stos
mov
pop
mov
mov
mov
lock
pop
popf
pop
mov
out
jmp
pop
loopne
sbb
sub
jno
aam
rclb
adcl
and
pushf
pop
sub
scas
es
cmpsl
out
sub
bound
sbb
test
push
scas
imul
idiv
ljmp
out
xchg
fstpl
jae
je
sub
and
push
fsubs
mov
jg
mov
movsb
xchg
mov
fsubs
popa
bnd
imul
fstpl
inc
lcall
adc
cmc
dec
icebp
call
mov
mov
fcomps
push
test
and
sub
jno
or
lods
divl
movsb
mov
sbb
sarb
pusha
sahf
xchg
sub
cwtl
cs
xor
and
shl
xor
add
sub
fstps
mov
imul
repz
sub
cmpsl
stos
scas
cltd
xchg
and
dec
mov
insl
pop
loope
out
shrl
jb
or
mov
fwait
push
pop
out
fs
and
sarb
cmpb
cmp
lcall
scas
add
lds
sbb
int
in
movsl
insl
cmp
fdivrl
punpckhwd
adc
nop
std
loop
push
gs
and
pop
jb
push
sarb
jg
xlat
test
and
div
sub
pop
push
sub
push
das
mov
mov
lock
and
cmp
lcall
pop
movsb
mov
jno
std
gs
mov
push
lahf
in
repnz
xchg
ljmp
sbb
cld
or
push
test
or
insl
lods
pop
sbb
mov
or
pop
cwtl
xchg
or
dec
mov
ljmp
popf
arpl
repnz
dec
mov
pushf
lock
xor
mov
shl
lods
or
int3
mov
inc
mov
push
or
sub
dec
and
push
dec
popf
fwait
sbb
xchg
fstpt
cmp
fsub
or
mov
jle
xchg
dec
sbb
sbb
insl
ljmp
or
shll
pushf
loopne
iret
inc
stos
xchg
in
rorb
pop
ret
mov
pmuludq
mov
pop
xor
popf
int3
hlt
sub
lret
aad
mov
nop
cmp
shrl
push
xor
lds
pusha
inc
or
push
inc
jg
fsub
pop
fcoml
int3
test
and
jbe
sub
out
xchg
push
push
pop
jae
or
xor
mov
sbb
adcb
inc
test
jl
repnz
mov
xchg
push
frstor
sbb
push
pushf
outsl
cmp
lea
xchg
pop
movsl
outsb
imul
and
mov
dec
aas
out
fidivl
movsl
mov
aaa
negb
pop
clc
mov
pop
sub
orb
std
add
ret
pop
push
movsb
fcomp
lahf
push
mov
xor
lret
push
push
aad
ds
popf
mov
fcomps
inc
jno
dec
imul
pushf
mov
xor
mov
cmpsb
fmull
sbb
inc
fisubrs
mov
fldenv
push
or
in
or
lods
and
sbb
sub
call
adc
loope
jno
stc
addb
sbbb
insb
jno
stc
pop
cs
fsub
add
lret
sahf
fldcw
sti
ficomps
sbb
or
hlt
adc
sbb
movsb
lods
jecxz
push
aas
aaa
sbb
mov
mov
sahf
push
or
es
cs
cmp
out
inc
lahf
fcomps
mov
test
outsl
clc
mov
test
iret
jb
cli
cmp
sbb
loope
mov
into
push
gs
pushf
ss
mov
ret
out
jns
fwait
mov
filds
jp
mov
cmpsl
and
stc
sub
lea
and
idivl
mov
mov
iret
add
orps
bound
and
xchg
add
pushf
cld
iret
pop
pop
les
xor
xchg
and
xor
adc
mov
xorl
lods
xor
and
push
dec
inc
cmp
lahf
das
int
fmul
into
cli
pop
lahf
mov
pop
cmpsl
lods
repnz
mov
jb
mov
and
pop
test
popa
pushl
in
loope
dec
push
xor
fwait
sub
arpl
xchg
xor
lock
xchg
xchg
dec
lods
inc
int3
push
push
or
mov
and
jp
outsb
push
fwait
hlt
fdivrs
xchg
pop
fcmovne
inc
popf
or
sub
and
sub
out
mov
sub
divl
lcall
mov
sbb
lds
ret
adc
or
loop
ja
dec
xchg
test
dec
in
dec
mov
xchg
faddl
lock
push
mov
mov
inc
fstps
aam
mov
dec
push
scas
int3
mov
sbb
pop
push
jmp
lret
push
dec
popf
pushf
test
xchg
adc
jecxz
xchg
jnp
jb
sub
aaa
leave
mov
add
push
scas
pop
insl
in
jmp
cmp
jo
jl
mov
xor
mov
push
fwait
adc
push
pushf
push
icebp
inc
orl
fcoms
adc
sti
xchg
jno
and
out
sbb
sbb
ret
xchg
push
jnp
push
push
mov
int3
inc
xchg
mov
sbb
push
push
mov
lock
and
fsubr
mov
cmp
inc
or
scas
arpl
cmpsl
ret
stos
xchg
mov
lods
das
push
outsb
push
out
mov
dec
sub
in
ds
sub
fsubrs
int3
fldl
sbb
aad
push
popa
iret
dec
test
adc
rcll
fidivs
lods
scas
rorb
test
in
test
in
sti
push
sub
adc
inc
gs
or
aad
mov
jne
cmpsb
fildl
add
adc
cmp
data16
jns
xchg
push
lock
into
mov
add
in
xor
or
cmp
mov
int3
arpl
push
clc
and
push
cs
shrb
aam
test
sub
pop
jbe
cld
adc
shll
inc
insb
xor
fwait
or
xor
push
jae
jp
cmpsl
adc
pop
adc
call
mov
mov
add
pop
sub
imul
or
jbe
pop
ja
jae
insb
dec
lret
jp
and
adc
inc
inc
imul
pop
stc
sbb
icebp
popf
ret
shll
lds
lahf
shrl
lahf
movsl
rcll
push
xlat
sub
cwtl
out
sub
and
popf
cmp
jmp
push
and
mov
lcallw
xor
dec
adc
jg
add
icebp
pop
imul
jmp
ret
jge
cld
sarb
sub
lods
jbe
mov
adc
mov
sub
adc
sbb
push
and
idivl
cmp
sbb
mov
adc
lock
cmp
mov
jmp
cmc
les
dec
xchg
mov
pop
jmp
xchg
and
push
nop
inc
lret
xchg
push
leave
icebp
xor
movsl
iret
out
pop
lods
pop
pop
fdivs
enter
mov
repz
faddl
and
rorb
inc
pop
sub
adc
roll
aaa
stos
pop
cld
xchg
xchg
call
fstpl
mov
mov
loopne
in
push
and
fistps
mov
int3
mov
sbb
pushf
stos
xor
fwait
jge
add
xchg
cmp
scas
mov
iret
cmp
clc
test
test
lods
ret
iret
int
push
sub
fstl
loope
out
loope
jae
je
fisubl
jbe
leave
jg
repz
loop
adc
cmpl
adcb
std
pop
cmp
mov
pushf
aaa
ds
mov
pop
xor
lret
cmp
les
mov
lods
mov
jbe
mov
mov
and
push
mov
lods
loop
push
lods
push
arpl
sahf
cmpsb
xchg
and
xcrypt-ofb
cmpsl
sub
cmp
mov
fldt
rolb
or
xchg
fwait
adc
xchg
xlat
rcrl
and
sub
cltd
pushf
lock
cs
aad
pop
and
xchg
ret
pop
push
imul
and
inc
cmc
gs
mov
inc
jne
sub
xchg
jno
xchg
imul
cwtl
lcall
popa
nop
pop
mov
imul
mov
dec
inc
fimuls
test
dec
icebp
sbb
out
pop
lcall
cwtl
push
push
dec
in
std
cli
lahf
sub
push
aas
aad
lock
or
rcrl
nop
shrl
mov
mov
popa
push
push
sahf
cmp
jecxz
mov
sub
adc
repnz
gs
je
mov
orb
inc
loopne
bound
sti
push
inc
andb
or
cmp
adc
xor
mov
dec
mov
lods
mov
jo
aam
xor
and
mov
bound
insl
cld
std
jecxz
push
sub
pushf
ds
lret
adc
dec
mov
jns
pop
jns
ds
jmp
pusha
mov
mov
rolb
ror
lcall
icebp
inc
inc
stc
fidivl
lea
aas
push
movsb
mov
in
sti
dec
or
push
out
out
mov
lahf
push
mov
mov
outsb
ret
pushf
cli
fisubrs
mov
xchg
popf
pushf
xchg
push
repz
adc
in
mov
mov
movsb
loopne
pop
fisubs
push
mov
das
es
das
cld
add
adc
jnp
push
aad
imul
xor
add
mov
pop
sti
addr16
and
sar
pop
imul
jnp
mov
mov
cmc
mov
mov
jecxz
jno
pushf
fnsave
inc
fcompl
mov
mov
in
shrb
dec
push
or
pop
addb
subb
mov
into
je
test
inc
fcompl
repz
outsb
add
test
inc
pop
cmp
push
lahf
xchg
pop
jmp
push
dec
sub
xchg
push
call
movsl
fwait
mov
and
pop
and
pop
push
int
aad
stos
cmc
sub
out
loop
lock
mov
in
outsl
push
stos
push
sub
lea
repz
cmpsl
xchg
daa
add
sbb
nop
cmp
movsb
mov
mov
in
movsl
jae
rolb
fdiv
cmp
cmp
hlt
jl
inc
mov
adc
cld
lods
push
inc
aam
outsb
xchg
int
in
mov
aam
clc
xchg
adc
xor
ret
pop
jb
dec
sub
shll
add
aaa
in
jle
nop
insl
mov
aaa
imul
fwait
mov
mov
lods
cmpps
mov
les
ljmp
xchg
in
fnstsw
loop
and
xor
mov
jp
sbb
ret
fadds
lods
sub
outsb
dec
cmpsl
imul
push
jecxz
inc
sbb
mov
xchg
inc
xchg
mov
cmpsl
sbb
jmp
ja
loop
hlt
sub
mov
sub
enter
fs
sub
test
rcrl
cmp
ljmp
nop
pop
sub
pop
imul
dec
mov
mov
or
xchg
jae
icebp
lea
lahf
outsl
cmc
mov
jle
adc
test
movups
scas
andb
mov
mov
or
cld
push
pop
lods
jge
sbb
roll
aad
stos
mov
std
ficomps
shll
push
loope
cltd
int
mov
mov
dec
push
test
call
mov
cmpsb
jp
cmp
cmp
jae
inc
lcall
push
add
aaa
subb
sbb
pop
out
adc
mov
repz
loopne
sub
pushf
test
lret
mov
sbb
out
aam
and
adc
and
mov
popf
ds
ljmp
mov
aam
in
mov
pop
mov
and
inc
cmp
or
aas
test
and
sbb
push
ds
dec
push
call
or
mov
sbb
inc
popl
test
shl
lcall
jae
pop
inc
mov
xchg
xchg
add
pop
fldenv
pop
test
cmp
imul
sub
sub
in
iret
push
inc
xchg
movsb
loopne
lods
nop
pushf
mov
cmp
lcall
mov
lahf
jb
call
adc
pop
inc
enter
outsb
in
sub
das
jg
negb
sub
bound
mov
add
insl
js
dec
fnsave
pop
movsl
sbb
negb
mov
mov
pop
jmp
divb
repnz
sahf
adcl
mov
sub
or
add
bound
cld
sbb
sub
cs
pop
or
pop
nop
scas
mov
or
int
pop
sti
out
xchg
mov
push
mov
in
clc
sub
sarl
filds
in
into
out
in
imul
jnp
xor
sbb
xchg
out
dec
pop
inc
pop
jnp
xchg
push
aas
dec
inc
movsl
nop
pop
stos
sbb
sub
mov
imul
lcall
and
insl
cld
push
aam
enter
fcompl
add
push
pop
leave
push
sti
and
lret
stc
popf
or
fsubl
iret
mov
mov
in
cmp
test
jae
movsl
call
clc
mov
pop
sbb
nop
pop
push
icebp
inc
and
pusha
sbb
sub
lods
ljmp
cs
xchg
loop
jb
cld
adc
cltd
adc
sbbb
cmp
inc
in
subb
adc
mov
cwtl
mov
test
push
sti
and
and
ret
loop
es
movsl
sub
mov
jle
jp
lret
lds
loopne
stos
sbb
rclb
push
comiss
movsl
cld
std
cmc
and
xchg
or
hlt
jl
lcall
adc
jecxz
dec
out
sti
push
sub
jae
sub
push
clc
and
jo
and
fidivl
stc
jno
orb
xor
jae
sub
add
xor
jge
push
orb
int
and
cmpsb
jmp
fbld
pop
addb
les
dec
fwait
dec
or
push
xchg
adc
je
mov
das
mov
aaa
add
pop
loopne
ret
clc
cmc
jae
xchg
in
mov
popa
sub
mov
fcoms
pop
test
stos
pushf
xchg
lret
jmp
daa
pusha
inc
subb
jnp
push
jno
out
and
or
mov
xchg
ljmp
cltd
ret
scas
fs
and
dec
cmp
fs
test
xorl
mov
and
mov
xchg
sbb
lcall
std
sbbb
push
mov
jmp
lds
jmp
adcl
sub
test
mov
ja
rcrb
jle
push
or
mov
cmp
xchg
popa
fwait
xchg
pop
jp
mov
clc
mov
inc
ret
sub
sub
sub
or
xor
fxch
inc
pop
pop
cmc
adc
push
push
xchg
imul
xchg
dec
scas
xor
je
sub
movsl
mov
cmp
bound
mov
push
insb
loop
mov
test
dec
push
sbb
loope
out
fstl
sbb
adc
pop
jns
lcall
or
pop
push
lock
fidivrs
jecxz
cmp
jmp
add
or
inc
int3
ss
inc
jmp
and
cmp
jae
arpl
rcll
cmp
shll
shlb
inc
cmpb
push
lea
in
stos
lods
out
jp
stos
stos
sbb
and
sti
fstpt
or
out
add
push
mov
mov
lret
or
sub
mov
ja
dec
mov
sbb
xchg
std
adc
or
sub
inc
pop
xchg
mov
mov
add
lock
je
cmp
inc
cmpl
jle
or
sub
mov
test
mov
add
xchg
sbb
scas
imul
popf
scas
adc
test
mov
test
popf
push
movsl
sub
std
cwtl
loope
out
mov
out
mov
or
mov
sub
push
jge
xor
lock
sahf
mov
sbb
lcall
xor
sti
mov
mov
shlb
int
bnd
lds
decb
aaa
mov
dec
subl
jge
rolb
pop
push
sub
xchg
test
cs
pop
sub
movsb
mov
arpl
rcll
push
and
call
cld
sbb
popa
sbb
sbb
std
cltd
inc
pop
in
sarl
aam
sbb
push
dec
inc
xor
push
mov
pop
jmp
outsb
ret
mov
dec
inc
pop
ror
jge
push
lret
stos
and
mov
outsb
cmpsl
lock
gs
xor
sub
xchg
insb
mov
jnp
mov
sbb
aad
inc
mov
mov
popf
rclb
xor
jp
in
fldenv
jnp
test
fistpl
adc
jo
sbb
mov
jle
test
adc
cli
mov
scas
xchg
repnz
hlt
or
fldenv
mov
outsb
sub
mov
fstpl
adc
xchg
inc
outsb
cmp
sti
sub
cltd
jle
cmp
mov
mov
pop
push
inc
jmp
pop
aam
lds
inc
sahf
lahf
aas
add
adc
or
arpl
icebp
push
sti
dec
mov
mov
enter
rclb
sub
adc
cld
mov
sub
mov
outsb
lods
and
pop
repz
mov
mov
push
fwait
enter
movsb
push
or
mov
lods
sub
loope
stos
test
cmp
push
inc
or
inc
sub
into
inc
and
test
dec
or
mull
pusha
imul
dec
xlat
mov
out
scas
fwait
xchg
repnz
adc
jmp
notl
sbb
cltd
cmp
lret
int3
inc
clc
shl
icebp
pusha
push
clc
out
into
xchg
loope,pn
ret
sbb
arpl
cld
dec
movsb
out
adc
fdivs
mov
movsl
psubsw
sub
mov
arpl
dec
mov
inc
mov
test
jmp
mov
add
mov
push
adc
xchg
shll
adc
aaa
add
rclb
test
roll
int3
mov
pop
ljmp
dec
sub
xchg
cmp
daa
mov
das
rcrb
push
ds
gs
fistpll
sbbb
dec
aam
sti
xchg
lods
outsb
nop
insl
loop
scas
cmp
lods
leave
mov
popl
outsl
cmp
jp
outsb
lods
mov
or
adc
cmp
mov
mov
das
rclb
insl
icebp
popf
test
mov
pop
adc
or
cltd
in
pop
pop
cmp
pop
mov
loopne
divb
mov
fsubl
push
adc
mov
insl
divl
sub
das
adc
cmp
xchg
cmp
sbb
test
add
mov
add
cmpsl
jg
mov
push
xchg
xlat
int
shll
push
mov
aad
mov
sub
ds
adc
adc
push
movsb
add
xchg
mov
or
adc
jge
lock
cmp
xchg
mov
mov
xchg
ret
push
mov
lods
stos
jae
add
and
inc
mov
push
mov
add
pushf
clc
and
mov
or
mov
sbb
mov
sti
int
insl
push
fnstsw
cld
xor
xor
inc
test
cmpsb
imul
mov
add
mov
or
mov
je
push
insb
mov
ds
jo
and
pop
test
xor
mov
inc
rcrl
test
cli
mov
and
sub
mov
fbld
ljmp
pop
push
pushf
push
std
dec
shr
insb
jno
jp
cld
movsl
push
cmp
pushf
fadd
pop
mov
jne
int3
push
ljmp
pop
mov
push
inc
xor
and
push
mov
adc
cmpsb
and
push
in
inc
mov
xchg
movsb
out
mov
cmpsl
out
in
in
fstps
fs
mov
sar
jno
imul
ret
int3
xchg
dec
push
je
cmp
mov
int3
or
dec
push
lea
clc
aad
cmp
add
leave
sub
pop
and
dec
pop
and
sub
lods
in
gs
xchg
push
mov
fiadds
sub
mov
iret
data16
or
fwait
cmp
xchg
test
sbb
clc
in
fxtract
mov
push
mov
push
inc
mov
mov
cmpsl
scas
cvtps2pi
push
jmp
pop
push
insb
jae
mov
es
sbb
enter
int3
mov
cmpsl
iret
dec
jmp
lret
ds
jmp
mov
push
push
push
push
nop
sarl
jno
scas
lcall
divl
dec
sub
sub
and
gs
jae
movsb
int3
mov
leave
fs
xor
pushf
iret
pop
add
std
cwtl
repnz
ret
jae
mov
and
insb
dec
les
mov
mov
rcll
jge
imul
cwtl
ljmp
dec
mov
sbbl
sbb
fwait
mov
leave
sti
cltd
pop
sub
push
xchg
je
mov
out
push
cwtl
sub
int3
mov
lds
scas
adc
outsl
sub
dec
popa
hlt
les
mov
mov
push
bound
mov
in
out
hlt
scas
mov
andl
repz
cld
call
fisttps
sbb
lret
scas
xchg
mov
int3
xchg
mov
std
sub
push
call
inc
inc
insl
jecxz
push
pusha
jmp
cmpsb
adc
sub
scas
fucomp
inc
xchg
icebp
xchg
cmpb
movsb
arpl
sbb
leave
mov
adc
add
aad
stos
xor
out
lcall
lock
cmp
xchg
and
mov
pop
stos
jo
mov
movsl
int
sbb
fidivl
inc
movsb
add
rclb
sub
scas
jg
mov
cmpsb
popa
add
ja
push
scas
pop
lods
rolb
in
int
fcoml
inc
rcrb
mov
jnp
push
pop
adc
test
xor
lock
pushf
xchg
xlat
push
cltd
jns
rcrl
xor
popf
xchg
or
cmp
sub
stos
jae
xor
idivl
test
cmpsb
jle
jl
inc
popa
inc
or
and
popf
jge
subb
xor
cmc
mov
pop
jmp
push
adc
cmp
add
pop
adc
jle
adc
popa
sti
inc
push
xchg
mov
es
mov
ds
in
mov
mov
ljmp
out
adc
or
cmc
adc
push
pop
movsb
insb
lods
jne
movsb
inc
test
push
jmp
lds
fstps
push
imul
ja
shrl
shlb
push
xchg
push
sbb
inc
mov
add
lock
lods
ljmp
out
and
dec
rcll
cmp
imul
xor
out
les
mov
xchg
fiadds
mov
jb
adc
aas
pusha
addr16
movsl
sti
and
addr16
out
jns
sub
sbb
push
shlb
jl
test
jno
and
push
adc
fiaddl
nop
sub
loope
fdivl
jo
add
jle
sub
fsubrs
divb
rorl
in
push
sbb
add
fmuls
ljmp
fiaddl
out
mov
pop
mov
push
sbb
hlt
fcompl
incl
xor
js
aad
lahf
xchg
enter
fmull
lcall
and
cltd
xchg
xchg
cmp
jne
inc
dec
or
arpl
fwait
push
addl
gs
out
push
les
inc
fimuls
lock
sub
sub
inc
sub
sti
jno
push
repnz
outsb
sub
popa
lods
sbb
mov
movsb
cmp
dec
nop
fsubs
add
icebp
pop
rorb
push
sbb
xchg
loopne
inc
lcall
mov
enter
xchg
popa
and
cwtl
ficompl
insl
or
xchg
or
cltd
jo
inc
cmp
test
pop
cmc
mov
jno
ja
mov
xchg
jne
fcoml
out
xchg
jb
pop
int
mov
push
push
dec
pop
nop
add
mov
sahf
mov
sub
call
xchg
mov
jo
int
sbb
pop
jl
fisttpll
mov
imul
sahf
push
dec
pop
jnp
or
jge
lahf
std
outsl
sub
jmp
test
pop
aam
xchg
mov
nop
xchg
ljmp
js
cmp
jo
ds
pop
movsl
int
fidivrl
fcompl
jle
addr16
pushf
outsl
adc
ficoml
pop
js
scas
or
aad
icebp
ljmp
clc
out
pop
popf
rorb
add
dec
dec
mov
adc
push
outsl
add
stos
out
loopne
mov
jnp
cmp
jle
lea
test
in
add
push
jmp
push
lods
and
cwtl
cld
xchg
adc
cmp
shll
push
xor
lods
xchg
into
fwait
clc
pop
and
movsb
mov
lds
insb
iret
into
ret
into
inc
pushf
mov
call
stos
xor
addr16
stos
iret
outsb
xchg
insl
mov
nop
push
insb
fisubrl
jp
mov
mov
adc
cmpsb
push
or
cmp
push
stc
iret
fsts
fwait
out
xor
adc
push
xor
inc
out
push
mov
sub
jmp
cld
data16
popf
sub
fstpt
jne
jmp
movl
xor
stc
cmp
pop
icebp
jmp
mov
ja
imul
and
pop
and
in
push
or
pushf
loopne
sti
cwtl
cwtl
lret
jb
or
ffree
lcall
push
mov
push
xchg
orl
cmp
test
fldt
add
fwait
stos
hlt
insl
pop
push
std
ljmp
hlt
aam
push
and
fdivl
lods
push
push
call
inc
pop
sarl
lock
int3
add
fildll
xchg
das
push
movsl
mov
ret
sti
and
outsl
cmpsl
lock
xlat
outsb
push
xchg
push
ss
sub
ficomps
int
divb
mov
outsl
insb
inc
push
shrl
xchg
jmp
sbb
pop
sub
cmp
jne
ds
add
mov
cmc
jnp
lods
ret
sahf
or
mov
icebp
popf
sahf
cmpl
rclb
xlat
jne
ss
push
sub
nop
fimuls
rolb
mov
mov
mov
cmpsl
fbld
cmpsl
cmc
daa
in
scas
in
movsb
aad
fisttps
insb
sbb
xchg
xor
jmp
mov
aad
and
ret
sub
push
xor
lock
nop
push
int3
out
sub
rcll
mov
pushf
adc
adc
jnp
adc
popf
cmpsb
dec
inc
pop
pop
das
jmp
mov
stos
cmp
xor
imul
sbb
jmp
lock
xchg
xchg
inc
out
aam
fdivrl
push
outsb
push
sbb
push
or
imul
sar
cmp
sbb
shrb
iret
cmp
outsb
cli
pop
andb
xor
and
shrl
cld
dec
aaa
loopne
fcos
push
stc
mov
ds
repz
push
sbb
sub
or
out
lock
sub
and
lret
pop
lret
mov
in
sbb
jns
inc
sbb
and
push
fiadds
mov
scas
xor
cmp
out
mov
ljmp
mov
mov
aas
xchg
movsl
mov
xchg
into
dec
sub
xor
xchg
addr16
lods
pop
fsubl
outsb
sarl
shlb
pop
nop
repnz
addl
sub
or
add
mov
cld
inc
rorb
ffreep
mov
mov
in
jp
mov
pushf
arpl
int
fbld
into
lahf
popa
imul
sbb
pop
aam
aaa
out
add
loop
cld
or
dec
fisttps
es
and
xchg
xchg
arpl
mov
sti
pusha
fwait
pushf
lock
lods
mov
xchg
fldt
add
outsl
xchg
ja
iret
jg
movsl
test
cmpb
xor
pop
xor
pop
bound
lahf
lret
mov
es
and
lods
cmp
testb
stos
adc
jb
sbbl
test
sti
dec
hlt
mov
sbb
adc
jb
xor
sbb
jge
pusha
nop
fldt
push
jl
pop
xchg
pop
cmp
adc
fcoms
cmpsl
xor
adc
inc
and
jnp
ja
pop
or
add
add
xchg
mov
sbb
cmp
push
popf
orb
shrb
outsl
popa
dec
cwtl
sahf
push
xchg
pushf
push
test
add
or
push
adc
insl
orb
loope
fcoms
xchg
outsl
push
pop
movsb
mov
out
pop
and
and
cli
outsb
idivl
add
hlt
mov
cmp
mov
popf
lcall
aam
cmpsb
mov
das
popa
enter
mov
in
lcall
xchg
jno
stos
and
and
xchg
shll
or
movsl
loope
icebp
xchg
jnp
sbb
adc
mov
ret
push
pushf
hlt
ret
into
mov
push
mov
mov
and
xchg
cmp
lods
dec
outsb
xor
and
std
add
cmpsl
popf
xor
jo
lcall
or
in
xchg
loope
and
test
sub
rcll
sub
aad
ret
push
sub
xlat
call
pop
xor
imul
push
push
push
sbbb
fsubrs
cld
lcall
inc
outsl
ret
sbb
and
xor
dec
pop
push
sub
iret
rcrl
fdivl
adcb
scas
loopne
fisttpll
cmc
dec
test
clc
mov
ret
jl
dec
sbb
mov
mov
xchg
repz
pushf
push
sbb
es
inc
push
cmp
mov
inc
testb
subl
and
fists
mov
and
xchg
repnz
and
divl
loope
xor
push
popf
std
or
cltd
dec
call
xor
adc
dec
inc
call
daa
lcall
cltd
cmp
in
nop
clc
or
mov
jns
or
mov
sub
sbb
in
dec
shlb
or
shrb
push
enter
jmp
leave
dec
and
pop
jp
jg
xchg
cltd
rcrb
popa
xor
pusha
adc
subl
mov
cs
iret
and
sbb
add
mov
hlt
or
add
std
adcl
dec
popa
cmc
popa
popa
int3
cld
call
sbb
andb
pop
scas
shrb
xchg
push
xlat
call
out
mov
jb
js
stos
in
ds
mov
xchg
dec
imul
shlb
mov
lods
xor
sbb
and
mov
mov
cmp
push
fmul
mov
cld
mulb
sbb
push
outsb
adcl
scas
in
rorb
xor
lods
jmp
or
int3
pop
and
push
lds
orb
inc
testb
nop
adc
rorl
mov
xchg
aaa
fmuls
iret
je
mov
das
and
mov
lods
cmp
mov
in
fsub
dec
sbb
stos
inc
sbb
xor
jb
popa
hlt
pop
arpl
xchg
repnz
mov
jecxz
mov
test
in
stos
fisttps
add
ds
mov
lods
push
inc
inc
es
add
int3
dec
out
pop
mov
xchg
sub
mov
xchg
stos
pop
rcll
aad
sbbl
lods
cmpsl
scas
push
push
cli
jnp
scas
ljmp
xchg
movsb
and
hlt
sbb
push
push
mov
inc
xlat
lods
inc
jp
jl
cmc
test
or
push
and
jno
cli
mov
sub
movsb
out
pusha
outsb
add
outsb
cmp
js
addl
daa
sbb
aam
aaa
and
sbb
push
aas
loope
sbb
pop
popf
jle
mov
ds
in
fdivrp
shll
dec
add
nop
mov
insl
adc
mov
sbb
outsb
push
mov
or
stos
mov
and
out
inc
and
or
rcrb
test
inc
pop
repz
dec
push
std
mov
jo
ljmp
sbb
lock
xchg
repz
xor
pop
mov
ja
cld
jne
xchg
repz
pop
into
mov
mov
lock
push
out
int
insb
shll
das
cwtl
adc
cmp
cld
out
xor
jne
aam
fnstenv
push
inc
mov
mov
lret
push
jae
mov
jb
push
push
xchg
xchg
xor
gs
mov
out
fidivs
adc
inc
sti
sub
mov
jo
pop
push
pop
or
sahf
mov
xchg
sub
lea
out
pop
in
push
rcl
into
xor
push
mov
xchg
ret
xchg
push
icebp
sarl
mov
popf
push
fiadds
sbb
push
aaa
dec
pop
pop
jno
scas
and
dec
fstpt
xor
and
mov
arpl
ror
mov
into
shl
pop
and
mov
stos
pop
lods
pop
imulb
cmp
scas
xchg
lods
mov
add
fldl
pusha
mov
add
jmp
jnp
out
mov
sahf
js
movsl
and
mov
push
sti
xchg
push
outsl
mov
icebp
sbb
loop
cld
stc
xchg
mov
adc
push
shlb
fnstcw
repz
push
les
xchg
push
fcoms
icebp
test
clc
insb
cmp
mov
dec
fdivl
ficoml
test
and
aad
mov
pop
cli
xor
and
pop
dec
adc
fwait
sti
lods
out
test
inc
sti
pop
lods
mov
sbb
and
inc
push
popf
xchg
sbb
adc
jmp
push
faddl
pop
fimuls
sbb
mov
sub
and
push
arpl
in
in
jle
xor
adcl
inc
rcr
adc
mov
lcall
stc
cmp
push
add
add
sbb
sbb
test
jno
inc
push
andb
in
sbb
jge
adc
mov
icebp
mov
icebp
dec
in
or
lods
scas
add
dec
lock
js
pushf
sbb
jge
sbb
push
mov
or
lock
jp
push
sub
pop
jl
repnz
dec
aad
push
push
cwtl
mov
stos
pushf
leave
mov
mov
xor
push
inc
std
adc
fidivrs
lods
enter
mov
mov
pop
int3
xchg
rclb
xlat
cld
lret
inc
or
dec
adc
inc
jg
fst
lods
or
mov
and
lock
xlat
and
mov
and
int3
fisttpll
xchg
and
mov
xchg
cmp
and
fisttps
add
sub
or
bnd
fs
push
sub
int3
repz
or
aad
lcall
mov
dec
lods
sbb
sbb
lcall
xlat
add
adc
mov
or
adc
mov
in
outsb
and
pop
jl
inc
inc
bound
ret
and
movsb
mov
inc
dec
and
pusha
in
nop
leave
inc
or
cs
xlat
mov
pushf
and
int
xor
inc
xchg
pop
push
inc
scas
cmp
movsb
sbb
pop
xchg
adc
hlt
mov
dec
ljmp
pop
push
in
xor
adc
addr16
ret
lods
mov
sbb
sub
xchg
imulb
ror
push
add
jne
adc
mov
mov
sub
mov
ret
test
ja
mov
sarl
add
xchg
cs
cmp
std
sarb
shrl
dec
xor
insl
cmp
add
sbb
and
push
popf
addr16
or
rorb
mov
mov
fistl
xchg
in
loopne
mov
lods
dec
push
cmp
into
xchg
cs
jge
or
loop
inc
call
or
mov
adc
enter
cmp
or
outsl
jo
add
mov
sub
sub
pop
popa
jnp
cld
mov
push
jle,pn
xchg
add
test
push
out
aas
shlb
and
cmp
lods
pop
fmull
cmpsb
adc
and
andb
jo
jb
jae
mov
mov
sti
sbb
dec
and
ljmp
jno
jno
lret
test
mov
jo
icebp
jo
dec
repz
dec
xor
je
pop
and
push
in
xchg
xchg
fcoml
pop
les
inc
test
inc
loop
mov
or
lods
sbb
cwtl
stos
test
add
xchg
add
push
mov
in
aaa
mov
lret
cld
bound
jns
ljmp
sub
cmp
cmc
test
or
outsl
cli
andl
or
enter
mov
xor
cld
les
test
xchg
subl
jecxz
push
pop
out
dec
fildl
aaa
dec
shl
enter
lret
repz
loop
cli
add
movsb
cmp
shlb
push
das
inc
xchg
jmp
sar
std
sbb
sti
outsl
jno
clc
dec
sbb
rcl
lahf
test
adc
push
scas
rolb
mov
enter
dec
sub
jg
push
add
psubb
testb
fwait
adc
push
add
inc
mov
jge
xchg
scas
add
mov
cmpsl
jo
xchg
inc
dec
insl
adc
enter
mov
lret
addr16
push
xchg
movsl
inc
jle
ljmp
cmpsl
mov
xor
rcll
shlb
mov
pop
lret
loopne
andl
pop
std
and
mov
or
mov
mov
out
dec
jno
pop
add
pop
ss
call
ffreep
xor
rcr
and
push
in
int3
pop
fwait
add
mov
movups
insl
data16
imul
mov
enter
out
sbb
lahf
adc
scas
jno
push
lahf
inc
jmp
add
sti
cmpl
aam
sbb
jg
push
cli
xchg
out
shrb
pop
sbb
xchg
cli
push
out
loopne
pop
test
outsl
xchg
icebp
neg
xchg
fidivrs
cs
je
mov
test
aad
push
or
out
mov
jg
add
mov
xor
and
and
shll
or
jns
inc
aaa
shl
dec
adc
fdivrs
std
stos
and
cwtl
push
movsb
mov
mov
sub
sub
mov
dec
or
jp
xchg
into
adc
jno
icebp
adc
or
push
mov
out
and
xlat
mov
cld
add
and
bound
pusha
sbb
jbe
dec
xchg
std
adc
pushf
fs
add
push
test
lock
call
dec
movsb
loope
in
pop
and
jl
pop
xchg
push
cli
jne
jno
xchg
stos
push
push
inc
sub
rorb
inc
jp
mov
ret
popa
mov
adc
insb
std
and
das
push
add
mov
xchg
insb
and
dec
adc
fsubrs
rclb
dec
pop
aas
pop
inc
in
hlt
outsl
icebp
mov
and
insb
repz
cld
fcomps
mov
sbb
fs
mov
in
xorl
mov
xor
cwtl
mov
repz
cli
rcl
xchg
pop
mov
loop
repz
xchg
xchg
push
sti
inc
mov
fstps
loopne
adc
fisubs
hlt
mov
pop
inc
mov
lock
mov
mov
xchg
push
int3
nop
add
mov
mov
jb
int3
dec
sub
lock
cmp
cwtl
sbb
out
dec
push
cld
out
into
xchg
fsts
jns
aad
sbb
push
shrb
inc
adc
push
out
sahf
sbb
push
mov
cmp
rorb
xchg
mov
movsb
imul
adc
pop
jl
test
cmpsl
shrl
int
imul
fstpt
sub
fsubrs
dec
push
sbb
outsl
in
sbb
insl
sbbl
push
pop
pop
es
scas
std
sbb
or
or
cmpsl
test
push
fnstsw
js
push
shrl
cmp
push
adc
xchg
enter
push
add
ja
or
or
je
out
and
test
loopne
sbb
add
sbb
xor
dec
cmc
mov
lds
cmp
stos
lds
pop
xorb
in
mov
xchg
in
dec
sub
cld
adc
cmp
in
repnz
xor
cmpsl
mov
sbb
out
cmpsl
das
out
mov
sbb
sub
iret
aad
out
pop
dec
sbb
push
push
sub
add
pop
fwait
add
push
xchg
and
pusha
xor
in
icebp
push
or
mov
lods
lds
push
sbb
or
inc
repz
add
mov
in
push
pop
orl
daa
dec
insl
test
lods
push
ja
mov
cmpsl
leave
sub
cmp
mov
push
insl
es
test
xchg
fwait
lods
push
data16
movsb
fdivrl
xchg
in
mov
cwtl
mov
stos
nop
pop
mov
mov
jb
es
mov
das
movsb
dec
sub
nop
push
sub
cmp
aam
into
mov
jmp
cmpsl
cmp
mov
xchg
pop
orl
cmp
mov
cmpsl
das
popf
movb
adc
clc
negb
mov
xchg
int
xchg
push
adc
insb
push
jo
cmp
sti
je
mov
test
cmpsb
mov
out
adc
cltd
mov
xchg
flds
inc
jmp
and
popf
movsb
lods
fnstsw
inc
pop
jbe
mov
pop
cmp
fistps
das
add
mov
xor
xlat
and
pop
ljmp
jo
jg
mov
adc
jg
and
syscall
rclb
hlt
push
ret
mov
ret
pushw
mov
cwtl
inc
scas
stos
in
pop
push
jne
push
and
aam
jno
push
push
pop
std
fisubs
cwtl
xchg
mov
repnz
aad
mov
imul
xchg
scas
mul
ret
pop
shlb
sbb
lret
mov
sub
dec
add
push
mov
cs
xor
stos
lret
out
xor
insl
sub
jnp
std
mov
or
mov
aas
test
sub
into
lcall
pushf
das
lock
jbe
cmp
and
inc
incl
dec
cld
adc
and
xchg
inc
add
pop
adc
mov
rorl
xchg
scas
push
jmp
and
mov
push
add
jne
pop
mov
scas
inc
outsl
lds
jl
mov
pusha
lcall
add
mov
jl
cltd
pop
sub
mov
cmp
or
sbb
pop
cld
gs
or
mov
idiv
insb
iret
jle
sub
mov
in
out
xchg
jmp
adc
jmp
lcall
int
fsub
dec
mov
scas
inc
popf
xor
and
mov
cmp
jp
mov
lods
outsb
or
xor
lods
ljmp
negl
push
pop
fisttpll
imul
sbb
ljmp
sbb
call
xor
lret
je
jg
lods
lcall
mov
lcall
jmp
lods
fs
ffree
das
push
xchg
pop
test
sbb
cs
adc
daa
push
sub
fldt
repnz
jns
arpl
decb
nop
movsb
dec
fst
cmp
in
mov
and
mov
push
insb
loope
jle
inc
out
movsl
push
ret
mov
dec
mov
int
pop
repnz
add
dec
mov
mov
jb
insb
insb
push
cwtl
or
xor
mov
inc
stos
xchg
cli
ret
enter
or
jbe
pop
movsb
lret
or
popa
mov
pop
jns
jmp
inc
cli
jle
xor
test
clc
pop
rcrb
mov
and
xcrypt-cbc
cmpsl
xchg
add
jl
scas
fisubs
ret
in
addr16
add
pop
fcoms
adc
jmp
outsl
ja
in
push
jmp
subps
xor
rcrb
mov
xorl
cltd
xor
cli
xchg
je
shrl
inc
and
or
aad
into
jo
cmpsb
jb
leave
jp
imul
jno
mov
pop
scas
xchg
or
cmpsb
mov
xor
jge
mov
or
adc
push
xor
xchg
xchg
xor
xchg
sbb
ja
add
jo
jmp
jno
test
mov
movsl
lret
fstl
push
test
inc
jg
push
movsb
faddl
jae
cs
mov
out
mov
lcall
dec
lock
aam
add
js
pushf
or
dec
sub
adc
das
in
dec
popf
mov
jl
jmp
cltd
lods
decl
fnstenv
fisttps
xchg
aaa
fsubrs
jno
mov
mov
sub
adc
jne
push
nop
out
mov
push
fwait
add
pop
jae
or
into
orb
mov
fadds
rcrl
mov
mov
sbb
jo
mov
ret
jge
out
rclb
xchg
in
movsb
call
jno
mov
push
xchg
pop
jno
rorb
jae
sub
in
xchg
xchg
and
scas
sbb
inc
fdivr
into
fucomi
lret
mov
or
aad
pop
jne
adc
mov
or
mov
movsb
xchg
fldenv
cmp
xchg
fisubs
or
cli
cwtl
and
mov
ds
icebp
aad
sub
lods
jle
insb
jbe
in
push
fsubrs
push
add
cmpsl
sti
lea
inc
shrl
movsl
mov
xlat
call
mov
and
mov
fisubs
test
lcall
cmp
int
lods
sbb
xchg
mov
rorb
sbb
jl
in
lcall
jge
adc
addb
imul
sub
cmp
mov
push
mov
xor
xchg
ljmp
mov
or
js
mov
mull
fidivl
dec
sbb
insl
mov
aad
add
add
ss
jge
jb
mov
fistpll
jne
mov
scas
es
cmp
cmp
pop
nop
jnp
pop
sub
call
adc
adc
std
jno
fnsave
rolb
mov
sub
and
out
imul
jne
stos
adc
fcoms
sub
jo
sarb
xchg
xchg
mov
xor
rcrb
pop
in
pushf
out
lock
subb
inc
jb
adc
sbb
mov
fsubr
hlt
push
pusha
mov
sub
push
jno
out
fld
test
jle
loopne
inc
ret
lods
jns
cmp
mov
movl
lds
aad
dec
insb
jne
scas
add
xchg
lret
and
xchg
mov
adcb
lock
ja
push
movsl
mov
xor
ret
jecxz
xor
inc
js
dec
cmp
dec
xlat
inc
adc
je
inc
pop
in
pop
cmp
sub
jg
xchg
js
sub
pop
hlt
mov
into
jb
sub
mov
sar
pop
pop
inc
vcmpps
enter
jge
shll
lods
inc
push
rolb
mov
jmp
pop
fisubrl
jb
fisubrs
xchg
sub
iret
jmp
inc
jae
lea
addl
cmp
ljmp
pop
loop
test
arpl
dec
push
jmp
cmp
push
iret
pop
mov
adc
shrl
mov
xchg
fmul
fwait
inc
in
inc
gs
arpl
sbb
js
outsb
push
jg
cmpsl
inc
test
push
xor
loop
in
out
test
jge
sbb
out
push
push
outsl
adc
ljmp
xor
push
out
ficomps
xchg
lods
mov
std
outsb
fidivl
push
popl
mov
push
or
sub
or
jne
mov
les
pushf
dec
xchg
int3
xor
push
shll
repnz
test
popf
add
fldt
clc
popa
adc
or
inc
movsl
xlat
cmp
pushf
mov
rcrl
xchg
pop
in
mov
ss
dec
adcl
rorl
mov
imul
aaa
jge
stc
push
sub
adc
in
xlat
sbb
add
mov
xchg
fstl
mov
sbb
sub
add
mov
or
ljmp
dec
sub
xchg
push
mov
ljmp
jno
les
out
shrb
adc
and
cld
arpl
lods
pop
jne
lods
test
xchg
jbe
inc
popa
in
pop
cwtl
cmp
jnp
or
and
push
sbb
jo
fisubrs
sbb
nop
std
xlat
jb
sub
and
cmp
and
popa
nop
xchg
or
jnp
push
nop
clc
dec
outsb
shll
imul
in
lods
mov
scas
push
and
flds
jp
adc
ficompl
ja
dec
jg
in
dec
bound
push
mov
sbb
je
and
sbb
fnstenv
insl
and
jns
sbb
xchg
int3
add
push
jmp
pop
inc
add
outsb
xchg
mov
push
fsubrl
in
and
dec
stc
arpl
cmp
xchg
aas
lret
les
rolb
xlat
mov
mov
cs
ret
add
push
sub
pop
test
jno
or
push
jmp
or
in
dec
clc
push
and
pop
fsubr
out
in
rcrb
mov
xchg
iret
jb
imull
xchg
push
xchg
jnp
jb
fmuls
sbb
adc
fsubrs
sub
movsb
adc
push
sub
mov
mov
pop
fiaddl
adc
rcrl
pop
ss
andb
mov
inc
jmp
popf
int3
jb
dec
push
insl
jmp
mov
cmpsb
cmpl
push
jmp
push
mov
pop
pusha
adc
dec
pushf
dec
dec
inc
aas
clc
mov
push
and
fisubrl
imul
setae
xchg
mov
mov
adc
loope
sbb
and
sbb
or
out
cmpsb
pop
sahf
pop
and
test
mov
mov
lock
push
stos
scas
sbb
pop
mov
fs
pushf
nop
jno
clc
inc
in
clc
add
jecxz
pop
popa
mov
push
and
mov
push
fisttpl
fnsave
jmp
xor
pop
sbb
stos
adc
add
pop
lods
test
repz
and
lahf
aaa
adc
and
sbb
cld
mov
outsb
into
jno
imul
sbb
push
into
lahf
fidivs
stos
add
call
scas
mov
xchg
ss
push
lahf
or
or
mov
sbb
popf
cli
pop
push
gs
xchg
pop
cmp
pop
pop
fwait
test
aam
sbb
sub
scas
jae
sbb
mov
or
dec
movsb
xchg
test
push
jle
pushf
mov
out
mov
fidivrs
movsb
sub
addl
cmp
mov
idivl
call
mov
sbb
cmpsb
and
push
cld
lea
jp
fbstp
popf
adc
mov
sbb
in
sub
test
push
mov
sahf
mov
out
xchg
jns
arpl
jmp
pop
repnz
leave
jp
mov
xor
popf
popa
aad
push
fldt
cmp
mov
xchg
rcll
push
scas
jle
and
fsubl
sub
jno
movsb
mov
icebp
test
sub
loope
dec
mov
adc
or
or
xchg
shl
xor
xchg
shr
xchg
fstpt
aam
xchg
ds
aad
mov
sti
xchg
xchg
sbb
xchg
cli
rcrl
or
out
andb
sbb
dec
cli
in
xor
lahf
fwait
xor
popf
xchg
xchg
popa
cmc
shrb
sub
mov
sub
inc
sbb
push
ds
insl
jge
psrld
add
xchg
push
std
xchg
cltd
mov
pop
mov
xor
pop
jle
add
mov
icebp
push
pusha
pop
pop
or
adc
call
rorb
pusha
mov
or
dec
and
enter
loopne
mov
mov
cld
out
and
sub
dec
dec
push
imul
xchg
scas
adc
xchg
add
and
cmp
sbb
inc
inc
dec
lret
mov
ret
cmp
adc
je
push
mov
gs
pop
push
jl
hlt
and
lcall
in
push
cmpsl
fcomps
jp
into
cmp
sub
add
adc
jmp
in
jns
cmp
pop
movsl
das
pop
cwtl
cmpsl
out
das
mov
or
and
sbb
sub
dec
sarl
rorb
push
fsubs
pop
xor
aas
xchg
dec
cld
movl
scas
push
jmp
idiv
ljmp
pop
fdivs
mov
sbb
push
loop
outsl
cltd
gs
sub
sti
shl
imul
mov
pop
fisttps
mov
or
lock
fwait
inc
mov
test
mov
mov
mov
inc
outsl
test
aaa
div
cmp
cmp
out
sub
aad
sahf
xchg
push
test
call
jle
out
or
fistps
adc
pop
fstps
xchg
add
scas
jp
repz
or
sub
mov
xchg
push
faddp
lret
stos
fldl
sub
iret
cli
iret
xor
iret
mov
mov
sub
xor
xlat
push
jae
vmovmskps
jno,pn
xchg
rcrb
and
test
ds
push
and
or
loop
ljmp
xor
pop
mov
dec
shlb
xor
aaa
pop
add
add
and
sbb
cmp
outsl
lea
int3
mov
outsb
out
out
scas
sub
leave
and
data16
into
inc
adc
cwtl
cwtl
xchg
cmp
inc
cmpsb
shrl
inc
mov
jle
adc
bound
in
dec
rorl
xchg
int3
and
xchg
push
or
mov
les
test
mov
aad
mov
fstps
imul
jno
cltd
or
fstp
push
outsl
or
jmp
fcmovnb
and
stos
lock
lods
adc
sahf
sbb
pop
xchg
fldlg2
push
push
iret
jle
mov
clc
xchg
js
test
xchg
jmp
or
std
and
cmpsl
ja
xchg
pop
mov
sarl
fs
setbe
call
sti
mov
dec
and
mov
in
dec
fsubrl
std
xor
sahf
xchg
pusha
ficoms
or
pop
mov
cmp
pop
xlat
pop
cmpsl
sbb
pop
hlt
jno
lods
cltd
daa
dec
arpl
out
sub
adc
and
test
push
xor
ja
out
dec
insb
cmc
cmp
out
shrb
outsl
icebp
jge
mov
js
and
push
pop
pushl
cmp
stc
in
lahf
addb
mov
icebp
daa
lock
xchg
mov
pop
jns
mov
mov
mov
fadds
mov
sti
add
lock
jnp
ljmp
fnstenv
mov
push
fldl
cmp
push
subb
ficompl
inc
xchg
pop
test
push
push
jecxz
cs
and
mov
sbb
jl
inc
test
addr16
lret
ret
test
cmp
xchg
sbb
fildl
mov
repnz
dec
xchg
or
ret
or
mov
test
add
movsb
imul
jecxz
inc
loope
or
jecxz
sahf
ljmp
mov
xchg
mov
pop
xchg
mov
jmp
add
cmc
addl
push
aam
enter
pop
test
mov
cmp
pop
sub
lods
stos
mov
test
push
adc
mov
push
icebp
fisubl
fwait
aam
scas
and
sub
je
add
or
lods
arpl
into
or
xchg
cwtl
dec
push
xchg
inc
jge
sbbb
dec
std
shrl
mov
mov
sbb
lea
pop
or
mov
mov
dec
cmc
jae
mov
jge
sbb
test
mov
push
jo
aas
fiadds
aaa
in
cld
sahf
xchg
mov
mov
sub
scas
sub
sbb
push
dec
or
or
gs
cmp
cmp
inc
inc
ds
int3
call
xchg
mov
inc
push
lcall
std
inc
adc
push
in
xlat
repnz
repnz
imul
xchg
lock
pop
cmp
adc
xlat
stos
add
mov
roll
aas
push
int
push
shrb
jecxz
and
adc
rcr
xlat
testl
out
fisttpl
mov
lods
inc
mov
xor
push
insb
mov
cli
dec
iret
pop
dec
ffreep
push
mov
sbb
leave
push
sub
add
push
xor
mov
fiaddl
sbb
jns
lds
cmp
inc
cwtl
mov
int3
out
mov
ja
jno
cmp
jo
pushf
fcomi
loopne
pop
adc
fs
pop
cmc
pop
cmp
in
popf
dec
cld
shrl
pop
add
rcrb
or
push
cmp
shrb
xchg
sub
rcr
test
orb
xchg
call
inc
cwtl
xlat
xchg
ja
fisubrl
gs
shll
lods
cmp
sbbb
adc
outsl
sub
sbb
sub
adc
cmpb
vminss
push
test
and
outsl
test
fdivrl
add
aad
icebp
xor
push
mov
sub
cmp
mov
push
gs
repnz
insl
popf
sub
out
pushf
jge
sbb
mov
adc
out
mov
out
es
pop
cmp
jl
in
enter
xor
out
mov
fnstcw
fdivrl
jbe
lds
or
cmp
repz
nop
arpl
cmp
mov
mov
fnstcw
or
xor
cs
pop
fiaddl
add
hlt
les
mov
fimuls
ret
inc
lods
xchg
lret
lret
arpl
dec
aam
and
fsubrs
mov
cltd
jno
in
icebp
ljmp
sub
adc
pushl
dec
xchg
xchg
mov
stos
pop
stos
repnz
xchg
mov
dec
and
out
sub
mov
in
and
hlt
xlat
jp
cmp
lcall
les
lea
sti
ret
shrb
push
outsl
in
fmuls
nop
dec
dec
fcmovu
jmp
das
loop
or
scas
in
lods
dec
push
jl
push
mov
scas
shl
push
pusha
rorb
cmp
pop
inc
pop
in
mov
pop
gs
cmpsl
pop
mov
pop
outsl
aad
addl
cs
add
add
mov
inc
jo
jg
sbb
inc
sub
pop
imul
dec
push
inc
push
or
pusha
imul
jno
cmpb
loopne
sub
mul
add
rclb
push
inc
sbb
add
jb
pop
xchg
mov
lods
dec
cld
mov
ds
mov
and
out
or
mov
mov
xchg
xor
std
sbb
adc
sahf
stc
xchg
and
mov
pop
aaa
stos
repz
bound
inc
imul
out
mov
or
push
push
mov
test
imul
movsb
mov
sbb
stos
sbb
ds
xchg
pop
push
xlat
sbb
inc
push
mov
cwtl
fnstenv
jle
cmp
xor
push
sbb
push
sub
sub
dec
sti
fwait
ljmp
sub
in
mov
fwait
addr16
mov
adc
jl
mulb
and
dec
loop
fcomps
cmp
cld
mov
subb
jge
lds
out
cmp
mov
mov
test
sbb
or
mov
das
inc
cli
out
ret
insb
push
adc
xor
test
aaa
sbb
aad
repnz
or
inc
dec
pusha
imul
fadds
cld
int3
inc
loope
rcl
out
xor
inc
ss
jbe
scas
dec
xchg
or
clc
divl
lcall
push
and
lret
mov
mov
cltd
mov
xor
or
sub
xchg
sub
xchg
ficoml
pop
ret
xor
mulb
dec
cmp
ret
mov
dec
xchg
cmp
and
popf
cmp
mov
mov
cs
push
mov
jne
cmp
sbb
and
dec
pop
ficoms
push
sbb
add
push
cld
xlat
cmp
insl
inc
pop
std
ret
movsb
fldl
sti
mov
nop
mov
and
scas
xchg
lea
mov
mov
adc
dec
push
fcmovu
sub
jbe
aad
std
int
data16
lahf
mov
mov
cltd
dec
or
sub
inc
mov
test
test
push
push
push
or
sbb
sarb
rcrl
add
sahf
cli
pop
gs
fldt
xor
mov
scas
jnp
mov
mov
xchg
mov
cmc
faddl
fstpt
hlt
dec
cmp
in
stc
aaa
imul
inc
push
sahf
push
jmp
popa
cs
das
test
fstps
mov
xchg
movsl
aas
push
pop
dec
cmp
add
sbb
cmp
shr
xlat
jmp
inc
push
xchg
insb
les
lods
idivb
insb
mov
ror
push
pusha
sub
push
sarb
stos
jb
inc
sub
pop
cmp
mov
aad
sub
mov
mov
ret
dec
outsl
insb
std
sahf
push
je
pop
and
arpl
dec
or
loop
test
push
data16
and
mov
loop
aad
ljmp
push
or
hlt
fstl
test
outsl
sbb
push
rcr
xor
call
imul
mov
sbb
fisubrs
cmp
lods
xchg
orl
sub
aas
leave
in
ljmp
stos
pop
outsl
jne
lret
mov
cli
loop
mov
rol
movsb
adc
hlt
gs
push
pushf
sbb
pusha
inc
fs
mov
sti
into
cli
xchg
out
rcrb
nop
ret
sahf
fs
in
xchg
das
pop
int3
push
les
jb
andl
iret
push
inc
neg
adc
jg
mov
test
popf
sbb
mov
movsb
mov
xchg
jl
jmp
stos
and
shld
repnz
mov
or
mov
xor
scas
std
in
fidivs
mov
cmp
test
mov
mov
push
fldl
jp
ja
in
insl
insb
gs
imul
fbld
cmp
cmpsl
push
push
pop
call
fldenv
xchg
ret
out
add
add
scas
add
push
add
xchg
stos
es
dec
scas
push
arpl
xor
lahf
dec
sbb
pop
jbe
or
loop
daa
int
push
rcrb
pop
mov
inc
and
push
add
lahf
jge
mov
lret
cld
inc
or
mov
or
out
xchg
cmpsb
cmpsb
push
loopne
lret
dec
les
call
push
xor
or
push
inc
pop
jl
add
jl
cmc
fs
pop
add
xchg
popf
jge
dec
js
and
or
test
fsts
jp
xor
ret
xchg
adc
scas
dec
sbb
xor
mov
sahf
mov
jp
xchg
sbb
shlb
rol
mov
mov
xor
dec
fadd
push
xchg
push
daa
xchg
aad
dec
in
xchg
push
mov
repz
into
mov
ficomps
cmc
cs
sbb
movsl
inc
add
push
call
outsl
cwtl
cwtl
int3
or
adc
mov
lds
adc
mov
cmpsb
sub
lds
shlb
mov
mov
sahf
mov
dec
ficoml
lret
jns
adc
push
mov
es
xchg
enter
mov
adc
scas
lods
pop
sbb
and
inc
sub
lds
fs
mov
push
mov
sarb
out
fcomps
clc
mov
xor
scas
mov
jmpw
pushf
sbb
jl
mov
sbb
insl
or
test
mov
or
xor
movsb
inc
sbb
pop
enter
push
push
aas
loop
arpl
and
sub
das
dec
jle
or
lods
xor
pop
aam
cmp
xor
xchg
jae
adc
int
xor
adc
fsubrl
and
roll
inc
xlat
xchg
push
xchg
out
sbbb
cli
dec
insl
mov
push
lret
fmul
andb
sbb
dec
and
xor
add
fwait
cs
jb
enter
subl
or
push
cmp
stos
lods
xor
lret
lea
ffreep
and
mov
stos
outsl
shll
pop
les
ds
rolb
and
cmpsb
lahf
cwtl
popf
adc
icebp
cli
mov
mov
movsb
xlat
cmp
jp
jmp
aad
cwtl
dec
ss
sti
pop
xchg
imul
adc
fstp
push
inc
repz
jo
loope
stc
push
xor
dec
and
ss
push
cmp
daa
add
cmpsb
sahf
xchg
insl
out
ljmp
sbb
lods
cmpsb
pop
jno
pop
sbb
mov
mov
je
xor
add
insl
mov
cmp
mov
jbe
jnp
ja
bound
fwait
repz
scas
cwtl
in
sub
pop
test
mov
xchg
hlt
outsb
ss
jl
mov
push
mov
scas
jl
and
sahf
or
es
rorl
and
pop
lcall
enter
pushf
movsl
cmp
or
iret
movsb
push
push
adc
cmc
movsb
jp
push
jnp
ljmp
dec
sti
lahf
les
imul
je
dec
clc
and
clc
and
stos
inc
psraw
data16
mov
inc
push
mov
in
jg
outsb
enter
out
jnp
jecxz
imul
into
pop
mov
cld
pop
pop
sub
data16
or
and
inc
inc
loopne
and
sub
stos
push
mov
fistpll
popa
out
push
loope
mov
aas
xor
pop
scas
sub
push
xor
gs
push
push
pop
push
jne
or
leave
les
loope
test
add
aam
adc
push
sahf
mov
lock
test
xchg
imul
push
inc
stc
and
sub
add
fs
push
cmpsb
mov
mov
mov
pushf
mov
xchg
mov
pop
jbe
mov
sarl
push
int3
push
inc
pushf
jae
shrl
cwtl
mov
std
mov
in
sahf
fidivrs
into
xlat
idivl
daa
push
dec
pop
imul
ljmp
inc
xchg
addl
mov
cmp
js
lock
fs
xchg
std
and
dec
shr
jg
movsb
js
cs
mov
mov
cs
mov
je
sar
bound
daa
fsubrl
lcall
test
test
inc
imul
sub
xchg
sub
xchg
fiadds
push
cmp
mov
fdivs
arpl
cmp
jge
or
adc
sbb
sub
je,pn
mov
mov
pop
pop
je
stc
adc
imul
test
mov
sub
jnp
pusha
subl
xor
out
mov
in
mov
pop
in
xchg
popa
pop
mov
pop
jb
inc
mov
cmp
or
lock
xchg
andl
sahf
test
outsl
jae
aas
stc
sbbb
mov
rolb
sbb
addl
sbb
fldenv
in
jb
or
dec
inc
arpl
jmp
outsl
push
jp
divb
unpcklps
jo
mov
jle
mov
sbb
sbb
push
pop
out
mov
and
pop
mov
mov
mov
out
pop
xchg
mov
xor
movsb
lret
ljmp
es
mov
out
incl
fwait
inc
std
int
rcrb
mov
adc
movb
lods
dec
or
scas
sub
ret
mov
xchg
xchg
inc
fistpll
idivl
icebp
fsincos
xchg
pop
popa
loope
push
cmp
mov
xchg
ds
ffreep
mov
sahf
jbe
fdivl
repz
jae
popa
pusha
pop
or
push
lods
sub
ljmp
mov
and
lcall
mov
jecxz
and
mov
ds
test
jg
mov
xor
xchg
aad
mov
pop
push
cmp
jae
xchg
pushf
loop
cmp
jle
mov
lods
inc
cmp
fs
jno
loop
adc
xchg
push
lcall
add
sahf
and
fidivrs
out
or
pop
dec
cmpsb
dec
inc
and
pop
inc
out
xor
cld
fsubr
int3
push
xchg
imull
imul
dec
aam
add
pop
and
aad
scas
fadd
ret
sub
rcll
inc
pop
pop
xor
aas
mov
xchg
cmp
sarl
sbb
into
ret
bndldx
push
data16
pop
std
xor
sub
or
cmp
jecxz
into
loopne
mov
repnz
mov
cltd
idivl
adc
ljmp
dec
scas
mov
lock
mov
movsb
xchg
and
and
clc
mov
push
xor
adc
sbb
sbbl
inc
lods
mov
sahf
push
int3
mov
sbb
dec
mov
movsl
insl
mov
lret
int
adc
inc
jb
andb
or
mov
les
movsl
push
cld
push
mov
ja
push
xor
subl
aam
adcl
mov
je
lret
scas
movsb
fucompp
push
sub
in
pop
mov
mov
test
sahf
fiadds
mov
iret
out
shrl
mov
cld
sbb
and
ja
cwtl
ja
inc
mov
sarb
sub
inc
or
lock
xchg
nop
sub
ret
mov
xor
fs
pop
and
mov
add
imul
int3
mov
int3
in
outsl
out
fistl
mov
in
scas
test
xor
sbb
or
sbb
dec
dec
jo
sub
pop
ds
test
daa
cmp
loopnew
sti
in
cmpl
inc
repnz
push
inc
jnp
sub
dec
sub
andb
push
xchg
inc
cmpsb
mov
pop
and
or
cmp
cmp
idivl
ja
imul
inc
push
sub
int3
adc
in
roll
mov
jb
push
jnp
fwait
or
imul
sahf
faddp
cmpsl
add
cmpsb
xchg
mov
jbe
notl
jecxz
popf
sub
mov
insl
mov
sbb
test
xor
push
stos
mov
je
mov
inc
in
push
cmpsb
mov
in
xchg
xor
pop
or
cs
sub
in
or
popa
dec
loope
popa
mov
sbb
or
popa
in
add
fs
xchg
or
xchg
lcall
add
xor
mov
scas
xchg
xchg
mov
pop
into
scas
or
jb
cmp
dec
cmp
mov
fdivrs
cs
fdivl
insb
lea
cld
adc
jl
nop
stc
cmpb
fisubs
lock
out
dec
inc
pop
adc
loope
sub
test
adc
out
sbb
test
mov
mov
sub
pop
outsb
and
lahf
stos
int
test
out
sbb
in
scas
mov
popf
fs
mov
push
or
imul
les
xor
mov
arpl
cmp
sub
or
out
xchg
test
xchg
mov
xor
inc
mov
jb
xchg
enter
sahf
mov
dec
loopne
frstor
hlt
jae
dec
rclb
mov
iret
lret
push
ja
xchg
imul
xchg
adc
adc
adc
aad
sub
and
rorl
stc
mov
lret
es
mov
push
ds
cwtl
arpl
lret
sahf
push
push
and
fs
in
fst
bound
pop
xchg
std
cmp
das
cbtw
mov
sub
in
in
sub
out
sahf
clc
inc
scas
jns
dec
rcrb
cld
add
push
xchg
mov
scas
push
inc
fxtract
mov
or
out
fmull
out
xchg
pop
sub
or
mov
mov
ficoms
mov
mov
filds
adc
repnz
or
and
out
int3
cmp
lds
test
adc
xor
pop
into
inc
lds
and
xor
lods
in
lret
mov
out
push
cltd
je
push
enter
xchg
pop
xchg
mov
daa
push
jae
sbb
mov
adc
mov
fisubrl
jecxz
mov
into
addr16
fmull
repz
imul
cltd
pop
pushf
repnz
and
pop
pop
jmp
dec
ljmp
pushf
lods
outsb
dec
js
scas
sub
push
dec
sbb
mov
aam
rcrb
mov
lahf
or
je
adc
jnp
pop
cmpsl
inc
jbe
mov
mov
pop
mov
push
jl
fidivs
mov
ret
mov
ds
fnstcw
ficoml
mov
scas
loope
rolb
cmp
popa
adc
jmp
and
mov
js
pop
popf
pop
xchg
push
or
mov
xor
adc
push
xchg
fdivrl
jae
aam
negb
dec
push
adc
cs
push
and
jle
add
push
inc
nop
aaa
dec
out
jg
adc
add
cltd
xchg
test
imul
jecxz
mov
imul
iret
mov
mov
popa
repz
pop
mov
cmc
add
sbbb
adc
movsl
push
jo
inc
rcrl
cmpsb
xchg
fwait
add
loopne
mul
xor
cwtl
or
incb
inc
mov
sub
dec
out
xchg
push
shrl
out
jnp
orl
test
adc
push
mov
shrb
loope
pop
ss
adc
inc
or
pop
mov
jg
dec
sub
xchg
add
outsl
pop
cmp
push
movsb
add
das
les
xlat
adc
push
mov
jae
dec
mov
jg
aaa
in
lcall
adc
fwait
call
daa
cltd
pushl
mov
mov
jecxz
nop
fsubs
inc
outsb
xor
dec
ret
mov
mov
test
xor
and
andl
hlt
insb
push
sub
lods
rolb
sahf
mov
jbe
add
int3
mov
pop
xchg
xchg
int
dec
mov
nop
dec
stc
add
xchg
inc
push
adc
mov
jbe
sbb
in
adcb
sub
cmc
imul
jb
jle
cmpsb
stc
push
imul
es
cmp
or
ret
xchg
arpl
mov
mov
ret
jo
fcmovnu
pop
push
mov
inc
outsb
jbe
dec
scas
jno
and
daa
lods
in
or
imul
mov
aaa
rcll
xchg
hlt
ss
pop
daa
push
xor
inc
adc
imul
mov
lods
xor
jge
sub
or
jle
add
sub
outsl
push
jge
fs
sub
sub
mov
mov
pop
xchg
sub
mov
es
cmpsb
fnstsw
scas
rolb
rclb
cwtl
mov
out
scas
clc
mov
cmp
cmp
rcrb
inc
sub
scas
ret
mov
cld
pop
aam
fwait
cwtl
push
es
les
and
mov
mov
testl
out
pop
aaa
cmp
add
cmp
cmpsb
icebp
out
mov
gs
mov
sbb
add
pop
mov
nop
mov
mov
or
movsb
mov
add
shlb
scas
mov
jae
pushf
int3
les
xchg
mov
sahf
adc
std
imull
xor
ljmp
fadds
jg
gs
sar
and
and
jnp
push
repz
ret
pop
inc
inc
mov
out
mov
xchg
adc
or
iret
push
pop
ljmp
add
dec
sub
aad
das
pop
inc
mov
fists
add
test
fdivrl
pop
inc
xchg
mov
jae
pop
nop
icebp
out
mov
mov
push
dec
or
test
sbb
repz
adc
mov
pop
xchg
ds
mov
in
push
adc
xor
adc
fsts
hlt
fcoms
mov
cmp
movsb
stc
pop
ret
adc
add
sbb
out
dec
lods
push
mov
lock
mov
jne
xchg
push
or
mov
lods
in
fxch
aam
mov
mov
frstor
imul
jbe
push
jb
pop
rcrl
pop
xchg
dec
jl
sbb
cltd
pop
cwtl
in
sbb
pop
fmull
std
hlt
addl
fdivs
lahf
lahf
pop
sbbb
into
and
cmpsl
push
push
mov
cs
lea
xchg
mov
test
filds
lret
sub
movsb
arpl
testb
mov
enter
shlb
lahf
sub
nop
jae
sub
sub
fwait
outsl
repz
lock
shr
fmuls
arpl
fldenv
cmp
insl
mov
mov
jge
jecxz
repnz
cmpsb
ss
cli
daa
clc
mov
jb
xchg
cmp
mov
jne
je
xchg
lock
rcll
mov
test
mov
adc
xchg
sbb
xor
push
repnz
jnp
rcrb
cli
and
mov
sub
repz
sbb
sti
outsl
mov
and
das
mov
sar
out
push
add
add
mov
insb
ja
mov
push
call
mov
iret
push
decl
out
pop
and
mov
lcall
scas
rolb
add
jge
push
gs
sbb
or
js
cmp
in
mov
xlat
mov
jo
xchg
outsb
in
push
in
push
xor
xor
setg
js
sar
xchg
ds
lret
lea
or
sub
lea
mov
jmp
mov
add
test
jle
lcall
ss
push
stc
ja
loop
mov
and
adc
sub
jnp
lock
notb
lea
testl
push
mov
mov
fisubrs
and
inc
std
out
dec
icebp
mov
xor
ror
insl
jmp
addb
fs
mov
jl
out
add
push
sub
ds
js
sti
sub
stos
mov
cmpsl
loop
fisubrs
movsl
pop
fsubr
repnz
xchg
mov
nop
ds
inc
gs
mov
jg
xchg
fistps
insl
cwtl
mov
loopew
sahf
sahf
sub
sub
dec
adc
data16
jge
in
arpl
and
xchg
movsb
sbb
testb
cmp
pop
loopne
aam
insl
mov
dec
pop
cld
mov
sahf
rorl
or
dec
mov
push
lds
pop
shrl
dec
outsl
jne
popf
cli
inc
jno
mov
hlt
faddl
in
cld
cs
and
cmpsb
out
pushl
inc
clc
leave
add
sbb
scas
rclb
pop
xchg
leave
std
or
into
mov
xor
shlb
rol
push
cmpsb
not
push
dec
cmp
xchg
adc
xor
xorb
lea
adc
inc
jmp
lock
mov
fidivs
sub
punpcklwd
pop
add
push
in
add
cmc
push
add
sti
push
and
rcll
mov
mov
int
mov
and
mov
xchg
xchg
dec
inc
dec
dec
mov
mov
pop
mov
lret
iret
dec
dec
and
lods
aam
jecxz
les
jae
dec
lret
jne
cwtl
rcll
add
jnp
dec
jne
lods
xorl
gs
scas
sub
ljmp
cmpsl
mov
sub
sahf
mov
fisttpl
and
pop
cwtl
cmc
js
sub
jp
adc
pop
add
shrl
mov
divl
lods
inc
xor
dec
out
jmp
xchg
dec
xchg
mov
repz
xchg
mov
inc
xchg
and
dec
mov
dec
fsubr
xchg
cmp
adc
subb
addr16
dec
shr
loop
add
inc
in
gs
xchg
and
pop
pop
lahf
jne
movsb
movsl
loopne
iret
mov
shlb
and
lcall
ds
and
ret
sub
cmp
pusha
xchg
arpl
out
lods
add
pusha
movl
cli
loope
adc
fsub
adc
loope
mov
add
data16
bound
pop
adc
loope
je
dec
stos
or
in
xor
pop
dec
icebp
stos
int
push
in
popa
out
ja
jmp
test
mov
dec
xor
dec
movsl
xchg
fsubl
and
push
cmc
icebp
andb
sbb
cwtl
in
xor
fldcw
ficoms
sbb
pop
pop
out
aad
add
xlat
js
dec
mov
mov
push
sbb
enter
push
loope
mov
or
push
frndint
push
mov
jmp
inc
mov
scas
push
mov
dec
fsubrs
stc
stc
dec
adc
ljmp
loopne
cmc
xchg
cmp
loop
dec
xor
test
pop
mov
sub
push
ss
pop
add
les
adc
cmp
and
out
dec
mov
aaa
shr
push
je
jo
fiadds
lret
repz
fidivrl
leave
pop
jg
dec
popf
mov
mov
fxtract
div
mov
jb
rolb
adc
xchg
shrd
mov
xchg
into
int3
lods
push
hlt
scas
adcl
sbb
xor
fisubrs
or
xchg
jge
enter
push
mov
cmp
pushf
jl
xchg
xchg
pop
sub
lods
xor
xchg
stos
add
pop
test
mov
sbb
fldl
ja
subb
inc
repnz
sub
dec
int3
push
add
and
jle
mov
dec
fistl
mov
push
sub
mov
ss
push
scas
iret
pop
test
inc
inc
add
fstpl
insl
es
data16
xchg
push
dec
cmp
sub
jmp
adc
and
cltd
cmpsl
in
lret
jg
shrb
gs
and
add
mov
sbb
mov
movsb
xchg
push
push
pop
imul
clc
fwait
popf
loope
xchg
jg
aam
inc
imul
push
sahf
cmp
popf
and
add
ret
push
or
cld
xor
add
in
push
jb
lahf
shld
lcall
hlt
or
adc
sbbb
push
and
mov
xchg
notb
pop
sub
scas
mov
fldt
fidivl
mov
and
leave
pop
sbb
jle
mov
xchg
dec
xchg
mov
jnp
pushf
xor
xchg
movsl
cld
sub
jo
test
push
mov
lock
icebp
adc
icebp
out
lods
sbb
sbb
cltd
xchg
shlb
push
imull
movsl
shl
out
xor
and
fxch
mov
mov
sar
hlt
push
fwait
xor
daa
xlat
push
rorb
sub
in
hlt
bound
jno
xchg
push
ja
pop
dec
sub
test
and
mov
mov
in
movsl
xorb
cmpsl
test
lds
jmp
scas
adc
xor
fildl
add
mov
sahf
pushf
sub
mov
pushf
mov
std
add
vprotb
adc
rolb
add
addr16
pop
rol
sbb
mov
xor
mov
xor
sbb
adc
imul
hlt
pop
cs
jno
cmp
maxps
adc
inc
lcall
arpl
repnz
add
xor
ds
loopne
lret
mov
clc
cmpxchg
mov
xchg
setns
push
out
add
sahf
sahf
push
jne
xchg
hlt
mov
fidivs
sub
pop
lods
fsubrl
mov
push
repz
rcrb
int3
loopne
lea
mov
mov
sarb
inc
mov
stos
and
pop
gs
pusha
mov
xor
notl
xchg
rcrb
loopne
and
adc
cltd
jo
in
jl
shlb
pushf
rcrb
bound
lret
gs
mov
and
shll
inc
and
push
ret
sahf
mov
and
cli
mov
ret
sbb
pop
mov
xchg
fdivl
cmp
xchg
adc
pop
gs
loope
lods
lret
sbb
roll
and
jns
ds
pusha
imul
sub
shll
or
and
mov
mov
xorl
inc
pop
jl
into
sub
test
adc
dec
cltd
sbb
adc
dec
pop
cmpsb
inc
add
add
fucomp
pushf
nop
push
add
adc
stos
mov
cli
in
add
and
pop
push
insb
in
cmp
ret
push
mov
push
mov
pop
or
outsb
cmp
movsb
push
cmp
insb
add
sub
ret
push
pop
mov
adc
xor
adc
shll
shlb
fists
pop
or
fs
subb
loop
jbe
push
xchg
clc
inc
lock
das
repnz
sub
push
loop
xchg
jne
jnp
aaa
mov
and
pushf
lahf
in
jecxz
xchg
jge
inc
fnstenv
cli
xchg
std
hlt
movb
xor
ds
and
inc
out
pushf
mov
add
outsl
adc
shr
les
rolb
adc
shlb
int
dec
lods
pop
mov
pushf
mov
mov
leave
adc
cmp
push
mov
imul
shl
mov
adc
mov
push
xor
rcl
and
repz
dec
xchg
jne
xor
and
ja
cltd
pop
fidivs
fistps
mov
inc
dec
arpl
inc
mov
pop
add
push
and
rep
mov
xchg
sti
cmpsl
ficoml
xlat
loope
jb
cmpsb
mov
push
jno
ja
ds
jno
lret
sbb
rclb
aad
movsb
cld
xchg
sub
xchg
int3
mov
fisttps
dec
les
add
lret
and
or
sbbb
jp
mov
cmp
jo
in
mov
mov
mov
push
push
mov
push
into
sbb
les
out
jnp
pushf
fldcw
jno
fdivrs
mov
add
xchg
jb
bound
mov
lock
cld
push
loopne
outsb
hlt
int
js
jb
xor
ret
sbb
adc
arpl
cwtl
les
push
dec
popf
or
mov
rcr
xchg
jle
xchg
dec
test
dec
dec
cmp
xor
gs
ss
out
repnz
lahf
arpl
jo
cmp
ficoms
push
mov
push
cs
scas
and
cli
sbb
rolb
lcall
stc
jne
push
fists
out
out
mov
loopne
loopne
mov
xor
xor
dec
lret
sub
push
fnop
sbb
mov
mov
cli
out
xchg
mov
ficompl
mov
cmp
cwtl
jle
adc
sbb
je
aam
leave
adc
cwtl
sub
bound
mov
negl
mov
pushf
ss
push
pop
mov
xor
xor
lcall
fdivr
xor
imul
cli
cmp
arpl
jno
mov
mov
es
mov
push
out
pushf
or
sbbb
jge
ficoms
mov
xor
mov
and
mov
jmp
je
std
sarb
ret
mov
imul
jne
lret
fcompl
popa
lods
mov
inc
or
jg
and
mov
and
or
fwait
xchg
and
andl
fneni(8087
iret
js
pop
jl
xchg
int3
in
push
add
loopne
mov
subl
mov
out
sub
or
jl
dec
jle
pushf
adc
mov
aaa
inc
xchg
push
mov
outsb
add
imul
test
rolb
xchg
popa
lods
in
pop
mov
xchg
xchg
jne
and
insl
xchg
sahf
push
add
push
push
push
addr16
pushf
jo
ficoml
filds
jmp
mov
outsl
outsl
fnsave
lods
test
clc
fists
dec
inc
xchg
aas
and
shlb
jnp
jecxz
loop
sub
stc
daa
push
jae
push
lret
push
mov
push
jns
and
xlat
fldcw
push
add
in
popa
stos
push
nop
and
fidivrl
or
sub
cmpsb
xor
popa
push
inc
sub
pop
scas
fisttpll
dec
rcll
and
mov
inc
pop
cmp
je
mov
fisubrl
mov
push
jb
imull
aas
pop
les
and
aam
jns
fimull
jno
fistpll
mulb
lds
dec
dec
es
sub
or
or
loope
std
rorb
mov
dec
jne
ljmp
sbb
stos
inc
loope
std
fwait
mov
push
mov
dec
stc
push
sub
popf
rcll
and
xchg
out
arpl
dec
fsubr
in
lods
jne
jae
fs
insl
in
or
and
rolb
mov
push
add
jmp
pushf
push
ror
inc
pop
cltd
adc
stos
pop
out
add
fs
stc
xlat
mov
out
aas
ret
aaa
aam
adc
imul
mov
add
daa
push
pop
sbb
push
test
dec
xor
fmuls
inc
dec
push
test
or
xor
insb
in
fcmovne
xchg
ret
lods
imul
add
sub
mov
jmp
shlb
repz
testb
call
mov
rorl
mov
sub
mov
ds
dec
pop
xchg
push
sub
shr
mov
jns
lahf
test
or
and
insb
decb
cmp
es
and
push
dec
xchg
inc
mov
call
cltd
inc
and
xchg
cmp
or
sahf
stos
mov
in
icebp
inc
adc
mov
ljmp
mov
aas
pop
add
arpl
cmp
push
out
mov
cmp
jnp
xchg
adc
rcrb
addl
fdivrs
int3
mov
pop
pop
ret
pusha
repnz
daa
pushf
dec
aas
outsb
inc
dec
cwtl
push
push
shl
xor
mov
shrb
adc
movlps
mov
cmp
add
jnp
mov
mov
movsl
outsl
fldl
insb
pushw
and
test
repnz
xlat
loop
cli
cmpsl
push
xor
lds
bound
mov
jns
pop
popa
inc
dec
and
test
js
pushf
and
mov
stc
mov
jns
mov
or
pop
int
out
push
push
cmp
pop
ljmp
mov
je
fildl
xchg
dec
xchg
cli
scas
dec
rclb
xor
popf
lds
cmp
cmpsl
aas
cld
mov
mulb
lods
push
push
sub
or
fldt
dec
fbld
mov
mov
sbb
mov
inc
outsb
push
push
test
stos
push
in
test
aam
shr
mov
sbb
and
mov
inc
xchg
dec
cmp
int
sbb
xchg
push
test
movsl
jmp
push
xchg
dec
ljmp
inc
mov
movsb
pop
roll
cwtl
enter
cmp
fistl
inc
bound
cmp
test
fistpl
jp
add
call
ss
aam
xor
push
mov
push
push
and
shrb
popa
adc
outsb
in
jnp
and
ds
loopne
inc
pop
pop
mov
dec
dec
in
sbb
cmp
sub
addb
add
int
nop
xor
cmpsb
cld
mov
push
in
pop
pop
jmp
dec
xchg
sub
adc
sahf
sub
rcl
cltd
or
out
loope
mov
sets
data16
in
cmp
cmp
jae
jbe
push
je
push
bound
mov
mov
stos
push
mov
mov
jle
in
pop
or
pop
js
jne
fwait
sub
loop
inc
mov
lds
sbb
push
outsb
mov
xor
pop
xchg
push
stos
shrb
fisubrl
adc
sarb
push
outsb
ljmp
mov
fcoms
mov
add
div
int
imull
testb
inc
test
mov
sub
jmp
cwtl
dec
loope
idivl
lcall
mov
mov
ljmp
jmp
ret
lods
dec
shll
push
cwtl
add
stos
outsl
ret
fildl
mov
xor
pop
lds
insb
push
mov
fdivl
xor
movsl
mov
push
lods
and
ficoms
mov
decl
xchg
push
fucomp
jmp
subl
jne
imul
arpl
cmpl
fisttpll
shrb
incl
pushf
lcall
psubsb
jae
movb
or
sbbb
push
sbb
add
sbb
loop
cmc
push
cmpsb
clc
cmp
or
test
xchg
and
inc
addl
fstl
and
pushl
push
xchg
gs
jno
mull
mov
mov
cwtl
mov
das
add
sbb
push
xchg
push
jae
add
mov
fcoml
je
cmp
jb
inc
cld
sbb
add
lret
pushf
xor
fnstenv
int
aaa
mov
lods
push
sbb
addr16
inc
sbb
imul
xor
lods
sahf
pop
add
mov
mov
pop
and
cmp
shlb
ret
inc
sbb
sbb
jnp
pop
sbb
pop
addr16
mov
adc
mov
inc
push
pop
jo
adc
push
cli
push
fwait
sti
lds
sbbb
mov
jbe
js
xchg
jmp
cwtl
mov
push
out
icebp
lock
ds
outsl
lret
mov
aaa
ret
in
mov
aad
outsb
cmpb
and
cmc
sub
push
into
xor
out
mov
xor
mov
xlat
dec
out
adc
jg
adc
or
cli
xchg
cmp
cmp
pop
mov
lret
shlb
mov
in
sarb
ss
mov
xchg
push
cmp
push
in
adc
stos
mov
adc
cltd
mov
fbld
dec
rcll
mov
mov
xchg
jg
insb
rclb
sbb
sbbl
sub
inc
dec
cmc
jae
mov
insb
outsl
jecxz
xchg
sbb
js
aaa
and
or
sti
cmpsb
xor
fcomps
repnz
pop
sar
cld
in
imull
sbb
dec
lods
push
push
enter
mov
dec
sbb
scas
push
jmp
test
lods
es
xor
in
pop
testb
adcl
aaa
pop
sbb
mov
fnstenv
fistps
in
ds
add
movsb
xchg
test
aaa
xor
insb
std
mov
push
mov
lret
pop
xlat
outsl
movsl
sbb
push
inc
outsl
mov
mov
inc
mov
sarb
adc
lods
push
rcrl
stc
cld
mov
fbstp
cmpsb
jl
mov
xchg
adc
nop
dec
jbe
or
push
jecxz
pop
or
dec
fwait
and
mov
inc
mov
lods
mov
xchg
pop
ljmp
pop
adc
xor
lods
sbb
and
in
mov
add
xor
popa
mov
pop
mov
cmpsl
jp
mov
jns
push
rorl
adc
and
jg
fadd
ss
xchg
and
or
inc
jecxz
addl
sub
test
nop
or
cmpsl
out
clc
jns
xrstors
cmc
adc
fistl
xchg
mov
aad
adc
pop
repz
ficomps
inc
push
lea
fcomip
out
mov
mov
dec
fsubs
xchg
orb
and
jb
sbb
cmc
rcl
icebp
icebp
cmp
dec
in
push
lock
xlat
sub
dec
or
sbb
push
in
outsb
outsb
test
push
mov
leave
push
add
rolb
cs
dec
dec
and
insb
shll
pop
mov
ljmp
pusha
int
mov
push
pop
lock
ret
inc
pop
jle
sbb
push
inc
lods
ret
fildll
lods
cltd
mov
leave
and
mov
xchg
scas
push
orb
or
xor
push
dec
push
subl
addr16
in
adc
xor
push
dec
adc
pop
sbb
fnstcw
sub
testb
cmp
jle
imul
es
aam
pop
ret
mov
int3
push
mov
ljmp
cmpsl
test
or
push
add
cmp
push
cs
repnz
jns
into
add
xor
mov
mov
and
jp
inc
iret
loope
pusha
jp
ss
movsl
cmp
push
sub
rorb
xchg
cld
jg
xor
cmc
jns
loopne
push
pop
stc
lret
or
fwait
push
aas
xor
pusha
mov
and
mov
or
rcrb
mov
sub
fists
mov
jno
into
xor
jl
mov
jecxz
les
test
mov
and
add
xchg
mov
pop
cmp
loope
lods
addr16
mov
mov
xchg
daa
loope
orb
ffreep
mov
mov
mov
scas
jge
shrl
and
mov
sbbl
push
fwait
and
les
sbb
leave
insl
push
andb
xchg
inc
xchg
ja
cwtl
xchg
dec
fildl
xchg
adc
xor
jmp
orl
mov
dec
adcl
addr16
jecxz
sti
and
mov
int
test
dec
and
mov
stos
cmp
loop
jmp
push
ds
inc
in
leave
push
pop
fisttpl
fstl
sub
mov
jne
sbb
and
jno
arpl
arpl
xchg
xor
sarb
or
scas
inc
loope
inc
add
movsb
add
push
pop
sar
clc
orb
lret
movsb
pop
sub
mov
jno
lret
shrb
jno
in
cmp
push
bnd
xchg
cs
in
imul
clc
sarl
ss
fcmovne
xor
gs
xchg
lds
jnp
adc
adc
adc
int
jmp
ror
out
push
xchg
push
push
and
notl
rorb
popa
andb
lcall
mov
pusha
fwait
jecxz
movsb
rolb
fdivrl
push
mov
loope
sahf
mov
fldl
sahf
mov
std
ss
int3
xchg
xchg
add
in
imul
nop
push
popa
xlat
dec
mov
xor
mov
andl
rcr
push
hlt
repnz
push
adc
arpl
xor
sti
insl
inc
fisttpl
cmc
xchg
fwait
mov
aas
cld
out
in
data16
sub
inc
mov
mov
mov
int3
rcrl
sbb
repnz
les
add
xchg
aas
mov
nopl
mov
sub
xchg
aad
clc
movsl
inc
jne
test
pop
xchg
xchg
dec
add
cmpsl
sub
inc
dec
cmp
add
imul
inc
mov
push
xchg
pop
cmc
push
fists
enter
and
cmc
je
xor
pop
lahf
pop
sbb
pmuludq
in
incl
mov
ds
mov
stos
inc
jl
inc
sahf
sub
inc
lock
mov
mov
and
outsl
daa
mov
jne
aas
push
pop
daa
cli
lds
lods
aaa
fiadds
or
mov
or
pop
fs
dec
loopne
xchg
aaa
mov
test
add
cmp
cli
cmp
lret
add
cmpb
push
pop
xchg
sub
mov
xor
in
push
daa
inc
or
jg
cmp
dec
mov
call
into
std
lods
lea
push
in
fucomi
nop
push
inc
sub
test
outsb
mov
or
js
xlat
nop
jle
test
jbe
imul
jbe
mov
and
add
adc
and
lods
int3
pop
imul
mov
movsb
movsb
and
push
dec
mov
or
lret
into
lcall
insb
mov
push
das
cli
push
adc
add
adc
scas
iret
js
popa
aaa
add
aam
into
lret
insb
add
sbb
mov
enter
stos
push
push
push
dec
inc
xchg
lcall
xor
sti
pop
cmp
mov
push
mov
cld
shll
dec
mov
addr16
cwtl
call
outsl
add
mov
push
aas
pop
add
or
mov
mov
mov
mov
mov
sarl
test
mov
mov
xor
mov
jge
cmp
push
sahf
into
test
mov
adc
iret
add
lods
lret
iret
ret
dec
pop
sub
pop
ljmp
gs
pop
add
lcall
pop
cmp
xchg
inc
mov
or
lea
lock
sub
insl
cmp
je
mov
movsl
std
xor
xchg
shr
xor
aad
xorb
stos
scas
aad
mov
into
adc
sbb
pusha
mov
int
adc
sub
cmpsb
pop
xchg
push
xchg
ja
push
shll
adc
stos
ljmp
pushf
mov
rorl
pop
or
adc
mov
fnsave
scas
cmp
adc
inc
dec
cmp
pushf
cli
add
imul
cmp
xchg
les
add
sub
repz
int
and
mov
mov
cmp
xlat
repz
push
cmc
xchg
lock
in
imul
and
sub
mov
lock
sub
test
rolb
push
incb
lahf
shrl
lods
sub
jge
mov
adc
cs
jmp
out
mov
cli
test
cmpl
xor
mov
mul
scas
mov
jge
mov
clc
inc
sub
mov
aad
loopne
inc
loope
adc
fcoml
lcall
pop
fwait
enter
jo
test
adc
ficomps
pop
pop
pop
xchg
push
mov
adc
adc
mov
push
jle
js
movntps
mov
addb
cmp
sbb
push
sub
xor
lods
mov
mov
fsubrl
cmc
popa
mov
xor
dec
call
fidivrs
push
cmp
jp
jg
jle
fmuls
inc
adc
fcmovnu
mov
hlt
sbb
fs
inc
cmp
popa
and
fwait
jbe
mov
jecxz
xchg
mov
mov
cmp
pop
pop
add
sbb
mov
sub
pop
fsubs
repz
jb
pusha
push
xchg
in
add
or
mov
sti
pushf
mov
fwait
dec
xchg
and
mov
cmpsl
mov
fsubr
adc
fildll
inc
out
mov
cld
inc
xchg
ror
mov
scas
enter
mov
fs
outsl
xlat
cmp
in
xor
out
mov
outsb
out
bound
pop
pop
dec
push
pop
jmp
aam
ja
scas
fdiv
stos
scas
xchg
xchg
sub
mov
dec
out
jo
ficompl
cs
push
iret
popf
jp
cmp
jb
push
test
xchg
fidivrs
out
sub
test
mov
pushf
push
int3
hlt
sbb
popa
fsubrl
mov
mov
out
mov
pop
and
jp
sub
or
mov
imul
dec
xchg
out
push
jno
rcll
mov
lock
adc
loop
dec
push
sbb
dec
sub
push
pop
lret
repnz
ret
gs
add
enter
nop
fisttps
and
cmp
cs
lods
and
subl
test
sub
adc
inc
xchg
cli
iret
movsl
jb
cmpsb
dec
mov
push
push
fisttps
pushw
ds
jb
push
mov
rcr
xor
push
pusha
frstor
movmskps
jecxz
stos
insb
pushf
cwtl
stc
ljmp
jmp
pushl
adc
jg
fwait
daa
push
outsl
fiadds
loopne
pop
push
loope
fldcw
cmp
repnz
xor
aad
cmpl
and
mov
decb
xor
sbb
insb
mov
roll
mov
inc
mov
ret
pushf
mov
mov
sbb
sub
ret
push
lods
jo
jbe
mov
and
push
jecxz
shlb
repz
in
es
xchg
pushf
lock
dec
inc
int3
pop
gs
jb
adc
leave
inc
lret
rclb
dec
aas
icebp
mov
imul
into
loopne
aam
adc
mov
push
cmp
xlat
pop
ss
dec
mov
test
addl
in
cli
jae
pushf
repz
xchg
repz
xchg
inc
xchg
leave
jae
jns
dec
int
repnz
in
and
xor
inc
mov
clc
jl
orl
mov
or
push
pusha
filds
jg
jmp
popf
shl
and
lock
jp
je
xchg
sbb
jecxz
xchg
jne
xchg
into
sbb
rorb
mov
lds
iret
xchg
mov
jp
or
stos
loopne
cmp
xchg
mov
xchg
out
scas
cwtl
hlt
pop
call
cmpsl
lret
testb
mov
and
xchg
add
jb
sbb
mov
pop
xor
xlat
adc
cmpsb
mov
xor
aam
xchg
and
ljmp
sub
adc
xchg
rcll
push
int3
call
jae
xchg
iret
inc
js
out
or
pusha
mov
cmc
addr16
push
xlat
int3
les
mov
or
mov
inc
sbb
insb
cmpl
jae
out
sub
pop
sbbl
pop
and
mov
pop
je
inc
sahf
movsb
sub
sbb
arpl
int3
mov
jmp
mov
dec
shl
ja
push
inc
inc
mov
lods
mov
xor
and
sahf
and
inc
adcb
sarb
mov
push
cs
jb
sbb
lock
pop
mov
push
es
mov
mov
aam
mov
icebp
sbb
mov
mov
mov
jbe
xchg
push
loope
movsl
push
mov
push
rcrb
faddp
addr16
mov
lret
shll
xchg
xchg
sbb
mov
sub
xor
ret
lock
shll
inc
and
adc
fisubrs
or
mov
pushf
jecxz
popf
fldl
mov
jge
sub
mov
lock
shrl
cwtl
adc
and
call
in
jns
pop
mov
adc
ret
in
fsub
mov
sbb
push
cmp
xchg
out
sub
mov
shrb
pop
xchg
mov
test
loop
in
sarl
and
and
and
cs
in
sbb
movb
popa
gs
xor
push
adc
popa
data16
and
sbb
mov
push
imull
insb
pop
push
mov
jmp
dec
push
inc
sti
push
add
call
cltd
sbb
add
incb
in
jl
jp
jge
roll
mov
mov
mov
aam
xor
sbb
stos
xor
push
js
mov
enter
inc
or
xchg
adc
loopne
inc
daa
ljmp
and
adc
lret
ljmp
adc
inc
pop
dec
and
sub
stos
imul
aas
mov
mov
or
dec
out
xor
push
push
pop
daa
and
or
faddl
push
cmp
adc
mov
into
test
lret
xchg
mov
sub
dec
push
mov
imull
outsb
jl
cwtl
jmp
dec
xor
sub
push
push
adcl
jecxz
sbb
pop
outsl
sub
and
mov
xor
push
push
and
dec
and
cmpsl
out
js
adc
sub
inc
inc
je
sbb
add
cld
test
hlt
in
sbb
es
xchg
or
xchg
ror
out
push
insb
adc
cmp
aaa
mov
cmp
ret
mov
dec
daa
sbb
rolb
xchg
cld
jecxz
xchg
push
jnp
xchg
in
push
adc
sub
daa
sbb
imul
loopne
sub
loopne
xchg
pop
push
sbb
fs
mov
pop
jg
mov
or
notl
sub
ffreep
and
sbb
shll
aaa
sarl
mov
f2xm1
ficoml
jecxz
xchg
inc
iret
mov
js
and
jnp
xor
aam
dec
pop
mov
in
fnstenv
jns
and
mov
or
int
imul
je
out
mov
pop
sbbb
cltd
orb
xor
ss
mov
lret
mov
pop
or
test
and
jo
mov
dec
imul
pop
das
negl
pop
clc
loop
popa
mov
xchg
filds
cmp
out
stos
push
out
push
cmp
push
mov
punpckhbw
add
inc
sub
stos
aam
mov
mov
clc
xor
pop
add
mov
adc
pop
enter
fbld
mov
cs
jp
mov
in
inc
or
jne
sub
ds
mov
pop
jge
push
mov
mov
xor
push
mov
add
test
push
push
lahf
iret
or
in
stc
lock
cmp
xlat
add
push
and
stos
pop
pusha
mov
imul
fsubl
loop
pop
cmp
and
in
imul
or
inc
add
ljmp
lods
mov
xchg
mov
arpl
sbb
mov
jne
and
lods
cmpsl
or
lods
test
in
jnp
lret
xchg
divl
in
pop
sbb
inc
fistpl
int3
jge
dec
pop
push
inc
dec
in
pop
enter
out
stos
cmovnp
cwtl
scas
sbb
fchs
test
clc
out
imul
pop
cld
popf
scas
xlat
mov
mov
xchg
loopne
in
or
cmpl
aas
int3
rorb
pusha
pop
cmc
adc
mov
adc
test
gs
fidivs
fwait
je
mov
dec
pop
fstpt
imul
sahf
gs
xchg
loope
mov
xor
dec
ja
aam
add
int
sub
push
or
pop
movsb
cmpsb
pop
cli
sub
nop
fidivl
fsub
roll
nop
sbb
cli
xchg
ret
ljmp
cwtl
ficoml
adc
xor
jbe
cltd
mov
and
movsb
cmp
lahf
add
pop
add
scas
iret
jge
cwtl
sbbb
pushl
pop
pop
sbb
ds
pop
sbb
inc
imul
negb
outsb
stc
dec
push
inc
cmpsl
xor
xor
sbb
dec
sub
push
jnp
bound
add
lods
adc
add
mull
iret
cmp
push
add
leave
cwtl
out
sbb
add
xor
sbb
repz
pop
out
ds
dec
rcrb
test
test
mov
repnz
rcll
fidivrl
xor
mov
es
push
out
add
xor
daa
outsb
test
into
in
lret
inc
lahf
ds
shlb
insb
jg
pushf
push
xchg
mov
pop
cmp
pop
stos
push
jnp
loope
push
outsl
mov
xchg
aam
aaa
cld
lods
scas
shrl
pop
cli
mov
mov
shr
and
testl
mov
xor
repnz
pusha
out
jno
andl
cmpsl
sbbl
cmp
lods
fsubp
mov
test
nop
mov
mov
pop
test
mov
mov
hlt
sub
dec
push
data16
out
mov
mov
ficoms
test
test
fs
or
je
lahf
pop
movsl
mov
hlt
rol
jg
and
cld
mov
fcmovnu
push
aaa
int
nop
out
adc
pop
mov
popa
test
movsb
inc
fs
cmp
sub
jo
mov
lock
jecxz
outsl
scas
xchg
push
xor
xchg
inc
fsubs
dec
loop
stos
xchg
push
inc
mov
imulb
daa
insl
imul
daa
jbe
add
xchg
cmpsl
repz
xchg
pusha
cmp
cmp
push
mov
push
dec
shrl
push
pop
ss
shrb
push
mov
dec
stc
pushf
dec
test
repz
sub
fbstp
cmpsl
mov
stc
mov
dec
scas
aad
rorb
inc
out
xchg
loop
fsubs
or
jno
inc
je
frstor
movsl
or
loopne
stos
mov
and
stc
ja
xor
rclb
fsubl
aad
cmp
pop
mov
cwtl
ds
mov
ja
sbb
into
aaa
sub
test
dec
cmpl
xchg
sub
mov
pop
mov
add
push
daa
jbe
cmp
dec
icebp
fdivl
cmp
add
lea
dec
in
sbb
jae
sub
das
sti
pop
imul
cwtl
push
ss
mov
jae
pop
pop
stos
lret
mov
aad
mov
push
loop
inc
xchg
or
dec
fsubrs
mov
sbb
adc
push
and
imul
sahf
fnsave
outsl
stc
fmull
push
and
jl
ret
popa
rcl
mov
arpl
cmc
inc
enter
and
dec
push
in
inc
xchg
cmp
fsts
xchg
addr16
dec
cmp
pushf
xchg
add
mov
xchg
mov
cmp
or
test
pop
out
mov
outsb
ss
out
inc
rclb
push
mov
loope
scas
loop
aad
into
cltd
or
or
push
push
pushf
fmulp
cmp
mov
sahf
loopne
push
popa
pop
es
cmovo
in
les
or
cwtl
nop
fwait
mov
arpl
and
cmpsl
xchg
hlt
pop
and
xlat
add
sub
dec
jae
add
cmp
push
xlat
mov
imul
scas
dec
push
pop
mov
jae
clc
fidivl
scas
cld
lret
inc
add
push
jne
lret
xor
pop
ficoms
test
xchg
repnz
adc
aad
enter
jbe
mov
or
or
sub
iret
cs
push
ja
adc
xchg
add
outsb
cmp
or
pusha
fldl2e
movsw
cltd
xor
jmp
pop
xor
and
xor
push
push
fnsave
mov
and
or
dec
pop
mov
gs
test
insl
or
mov
jle
adc
and
addr16
xchg
and
les
add
adcl
xchg
sarb
adc
xchg
sbb
add
stos
nop
mov
pop
push
aaa
imul
adc
pop
pop
lcall
add
rcll
mov
lcall
stc
sub
sub
inc
nop
add
dec
lock
add
push
inc
add
xlat
repnz
fnstsw
sbbl
add
xor
or
mov
int3
mov
in
popf
je
cli
pop
subl
jmp
out
mov
jp
jne
push
inc
cltd
sub
repnz
mov
mov
jbe
enter
sbb
in
xchg
xor
xor
sub
inc
lods
push
packsswb
push
adc
adc
or
test
cli
scas
in
sti
aaa
sbb
push
cld
popf
mov
inc
hlt
mov
cmp
mul
fdivs
inc
lods
mov
pop
aad
fwait
mov
std
sahf
cld
lods
stc
xchg
imul
fstps
enter
pop
mov
imul
int
cs
mov
mov
pop
mov
mov
gs
push
jns
les
dec
mov
cmp
mov
and
mov
lahf
push
in
iret
pop
cmp
cmp
incb
adc
xor
ljmp
add
adc
orl
cwtl
sub
cli
fdivr
inc
adc
cmp
pop
popa
gs
mov
pop
or
mov
mov
cmp
fmull
pusha
xor
sbb
pop
adc
sub
dec
popa
inc
dec
lahf
xchg
lods
and
and
popf
cmpsl
xor
in
mov
scas
aam
les
pop
fisubrl
loope
jmp
or
push
jl
les
adc
mov
fldcw
std
out
imul
andl
wbinvd
sbb
mov
inc
inc
inc
decb
hlt
mov
in
cli
xor
cmpsb
adc
outsl
push
mov
xchg
jp
pop
je
lock
inc
mov
movsl
xchg
bt
sub
cld
frstor
pop
pop
in
push
mov
ds
push
dec
loop
and
in
fs
dec
mov
test
inc
shlb
scas
shll
mov
enter
fldcw
jle
mov
inc
les
leave
out
push
jecxz
jecxz
andb
or
lea
pushf
outsb
imul
daa
inc
fwait
out
xor
add
lret
fsubrs
addr16
mov
mov
nop
xor
pop
into
sub
cld
xor
push
mov
xor
and
pop
push
test
pushf
xchg
push
mov
rcrl
and
mov
sub
xchg
push
fnstsw
dec
loop
add
cmp
stos
sbb
in
adc
jo
pushf
daa
or
dec
dec
cmc
add
mov
pop
jle
jecxz
testl
push
sbb
push
outsl
mov
popf
repz
lret
and
repnz
jb
popf
lret
xchg
cmp
jae
mov
int3
dec
mov
in
daa
test
ss
imul
jge
int3
cmpsl
or
in
inc
movsl
loopne
insl
aas
dec
cmp
jmp
mov
add
mov
xchg
mov
or
loopne
aaa
test
push
jge
inc
in
sahf
sub
xlat
stc
mov
daa
pop
les
out
cld
pop
cmp
inc
mov
pop
in
cli
and
popa
in
shlb
lods
enter
sub
mov
mov
add
pop
call
cwtl
arpl
daa
jecxz
pop
nop
into
xchg
mov
push
pop
push
loop
mov
push
or
enter
adc
int
mov
mov
lds
scas
in
iret
loope
sti
xor
jecxz
push
pop
cli
sbb
inc
in
ror
cli
jecxz
dec
test
loop
mov
xchg
push
jmp
fidivs
or
xor
push
pop
icebp
mov
cld
jge
xchg
xor
mov
sahf
sbb
sbb
rolb
cwtl
lods
lahf
pop
shll
test
adc
pop
and
test
aam
loope
xchg
fidivrl
imul
and
repz
jle
cmpsl
out
fstl
inc
xlat
jo
int
lahf
lods
rcrb
push
enter
mov
sbb
jle
dec
xor
jno
ficomps
push
pushf
pushl
cmpxchg
hlt
int
fldlg2
adc
test
sti
mov
insl
jg
add
repnz
cwtl
jge
mov
out
cli
sbb
inc
stos
ja
pop
shlb
and
lret
stc
mov
and
lods
mov
mov
push
or
xor
in
andl
or
daa
insl
jbe
movsl
je
ficoml
mov
dec
and
adc
dec
pop
fcomps
xor
outsb
in
mov
std
add
daa
xchg
xor
fisubrs
inc
arpl
jns
stos
jae
inc
shrl
aad
mov
je
dec
hlt
fildll
mov
sub
mov
jl
clc
mov
cmp
insl
ret
insl
pusha
mov
xor
xor
xor
movb
xor
adc
add
cmp
dec
fdivl
inc
in
aaa
or
loope
or
push
dec
daa
dec
sti
loopne
test
cmpsb
lcall
imul
push
repnz
push
cli
inc
rorb
cmp
sahf
xorb
push
sub
ret
filds
jmp
xchg
ljmp
stos
into
ja
insl
sarl
dec
mov
ret
cmp
jno
cmp
mov
scas
xchg
xor
sub
cmpsl
cmpsb
jmp
fdivl
scas
insl
xor
shll
fadd
mov
and
pop
push
or
cwtl
inc
shll
aad
jp
jecxz
in
int
in
lret
push
mov
stos
pop
xchg
std
lcall
sti
cwtl
jecxz
adc
pop
cld
inc
mov
jmp
pop
cmpsl
lock
repnz
cmc
jmp
mov
bound
xor
pop
jno
ds
add
cmp
inc
or
mov
cltd
test
jg
mov
stos
pop
mov
es
xor
push
das
sub
and
lret
enter
push
sbb
lcall
leave
lods
sub
jno
push
push
in
test
outsl
aad
mov
cmpsl
cmpl
mov
pusha
shlb
mov
popf
xchg
or
push
sub
and
xchg
sbb
and
or
repz
fs
mov
fldt
pause
arpl
xchg
push
add
andb
clc
dec
cld
push
shll
cmpsb
sub
pusha
cmp
loope
pop
mov
movsl
jns
xor
sarb
imul
mov
mov
outsb
or
mov
add
mov
xor
jle
add
mov
or
movsb
sbb
leave
rorb
mov
sti
outsl
push
daa
mov
aad
or
movsb
enter
iret
lahf
call
lea
add
mov
cli
sub
mulb
inc
fdivrs
nop
sbb
inc
xchg
popf
pop
sub
clc
je
out
stos
xor
mov
and
adc
push
add
les
cli
mov
adc
dec
cmp
imulb
pop
push
push
xor
adc
leave
push
movsb
mov
adc
mov
out
lret
loop
inc
ljmp
fsqrt
sti
rcrl
xchg
jp
sub
pop
test
pop
add
outsl
stos
mov
dec
xor
test
mov
cmp
fucom
xor
cmp
call
mov
inc
leave
push
inc
mov
xchg
dec
shrl
dec
or
lock
sti
insb
push
repnz
xchg
cli
add
mov
push
daa
mov
sbb
mov
addps
jl
dec
or
push
adc
rcrl
pushf
mov
test
stos
js,pn
push
mov
iret
xchg
pop
jle
or
jl
sbb
xor
lods
sti
push
sarb
in
sub
int3
lret
sub
call
add
dec
mov
pop
and
loop
push
bound
pop
sub
aam
jle
xor
cmp
fwait
mov
add
gs
lods
es
sub
fidivrl
push
mov
call
sbb
inc
mov
out
xlat
cmp
in
sub
lock
mov
je
xchg
push
shl
inc
xchg
inc
adc
rorb
gs
dec
push
testb
pushf
pop
pop
adc
cmc
cmc
imul
mov
movsl
dec
push
cwtl
pop
je,pn
sbb
pop
xor
push
pop
sbb
jno
sbb
jo
xchg
mov
outsl
xchg
push
mov
push
sub
pop
rep
mov
or
push
bound
lret
sbb
mov
inc
and
mov
and
xor
popf
push
push
test
and
popf
iret
add
stos
dec
fisttps
inc
aam
sub
fidivs
test
icebp
jns
push
mov
sbb
mov
xchg
subl
mov
je
jle
sbb
cmp
outsl
pop
fistpl
and
ret
mov
sarl
jbe
shrb
jecxz
inc
loopne
jmp
inc
add
xchg
popf
mov
or
mov
nop
iret
daa
movl
into
mov
aad
jp
outsl
pusha
ret
mov
mov
jmp
pop
fiadds
inc
aad
and
std
lods
repnz
pop
iret
jo
fwait
fs
pop
test
pop
inc
xchg
sti
fsubrs
sub
rep
dec
dec
sahf
dec
fsubl
test
es
add
sub
mov
fidivs
leave
and
push
movl
sub
repnz
cld
popa
shrb
fmul
insb
cmp
js
sub
es
xorb
pusha
cmp
jbe
in
movsl
pop
fstps
jmp
inc
enter
sbb
fiadds
clc
cli
adc
xchg
mov
call
pop
movb
addb
mov
mov
hlt
fiaddl
sahf
cli
cld
sbb
push
xchg
add
int3
sub
sub
and
mov
aam
sub
pop
inc
stc
stos
outsl
movsb
fsubrs
or
mov
xchg
mov
jmp
shlb
xchg
push
push
dec
in
lock
or
xchg
jb
add
aaa
in
cmpsl
inc
dec
int3
inc
mov
pop
sbb
xor
shrb
popf
xchg
sbb
iret
or
or
sbb
data16
ret
mov
push
mov
sbb
pushf
rorb
lea
adc
add
sub
push
fnstsw
jp
inc
stos
fdivl
nop
cmpsl
out
cmpb
mov
mov
aam
inc
loope
ja
pop
push
or
mov
dec
push
xor
push
mov
imull
mov
mov
jnp
adc
out
std
mov
mov
imul
adc
jecxz
and
in
or
inc
enter
mov
mov
sub
or
sub
and
dec
sub
mov
loopne
das
sub
das
pushf
push
imul
mov
xlat
repnz
xchg
loopne
outsl
fdivrl
pop
and
cmpsl
test
pushf
ds
adc
sub
jmp
mov
pop
iret
xchg
adc
xor
add
lods
mov
leave
sub
cmp
mov
sarb
add
xorl
inc
gs
sub
xchg
addb
mov
cmp
sbb
adc
icebp
popa
or
sahf
dec
imul
sbb
std
cld
jle
or
push
popf
sbb
jmp
or
lahf
mov
push
push
dec
and
jge
fsubl
inc
mov
clc
push
push
mov
aad
inc
rol
push
fstl
dec
imul
arpl
sub
jb
test
mov
push
mov
lret
movsl
pop
in
mov
push
dec
jns
xchg
adc
nop
lock
out
out
iret
loop
inc
jns
lods
mov
pop
mov
push
ret
out
fisttpl
int
lods
or
sub
fildl
mov
mov
rcrb
or
jp
push
loop
dec
mov
into
es
push
jmp
ficomps
leave
adc
push
jae
jb
mov
inc
les
shr
xor
cmc
and
mov
je
out
fidivrl
mov
jnp
sub
cmc
lock
jno
jo
xchg
jl
adc
push
jp
push
adc
and
icebp
leave
stc
ja
in
insl
lods
movd
jns
sbbl
xchg
in
loop
out
inc
popf
arpl
stos
pushf
into
pop
add
ss
inc
aam
sub
mov
popf
cmp
push
lods
mov
aaa
cmp
cmpsb
stc
lea
push
int
adc
xchg
scas
pop
cmp
and
scas
mov
or
pop
adc
in
jns
add
mov
gs
or
or
inc
xchg
loopne
and
ljmp
arpl
mov
fisubl
pushf
inc
je
hlt
adc
in
nop
scas
dec
fadds
aaa
sbb
fisttps
lret
mov
push
mov
add
add
jmp
push
and
pop
pop
cli
dec
xlat
and
loope
mov
adcl
aaa
cmp
iret
jecxz
cltd
insl
loopne
mov
repnz
jl
mov
push
stos
mov
jge
lcall
adc
jge
xor
stos
dec
cs
nop
mov
out
lods
ret
push
or
add
loope
es
imul
iret
notl
rcl
lea
push
jne
std
jno
outsb
stc
mov
jae
in
push
push
insb
test
loopne
xchg
push
inc
xor
sbb
addb
adc
inc
pusha
mov
cmpsl
xor
jno
push
mov
or
test
repnz
cmp
and
push
or
mov
inc
nop
inc
adc
pop
insl
fstps
cwtl
arpl
js
addr16
leave
add
push
push
push
in
mov
xchg
daa
xchg
mov
or
xor
push
dec
adc
sbb
es
jae
mov
dec
filds
mov
test
or
jnp
jbe
outsb
ljmp
dec
fsts
inc
xchg
shrb
jae
aaa
xchg
xor
fstps
add
xchg
sbb
gs
test
pop
jecxz
jbe
fdivl
mov
xchg
mov
dec
push
shl
sbb
clc
sub
sub
push
les
movsl
mov
and
cwtl
pop
sub
inc
loop
rclb
cwtl
enter
subb
sub
loope
xchg
inc
sub
lret
jo
mov
xor
inc
jmp
mov
imull
hlt
in
out
lahf
push
mov
mov
loop
mov
xchg
daa
lods
jo
fildll
push
mov
fsts
jae
addr16
mov
xchg
movsl
pushf
enter
hlt
cld
rep
ljmp
mov
xchg
sub
aam
mov
rcll
out
push
push
popf
hlt
dec
aam
xor
fiadds
add
imul
xchg
mov
pop
sahf
adcl
sub
mov
push
adc
stos
stos
push
push
cmp
call
into
inc
cld
int3
dec
scas
mov
add
lcall
out
shll
adc
pop
lahf
arpl
and
mov
and
jbe
dec
movsl
movsl
xor
push
xor
jb
xor
inc
test
in
test
sub
clc
push
enter
arpl
dec
jmp
fidivrs
mov
aam
sub
or
int
mov
xor
std
fidivrl
das
mov
mov
mov
cli
xchg
sub
daa
outsb
jmp
pop
sub
inc
fdivp
inc
cmp
insl
mov
inc
adc
ja
in
jge
push
push
xchg
lock
std
lcall
loop
sub
rorb
arpl
sbb
pop
faddp
nop
push
inc
clc
mov
add
push
and
arpl
fs
mov
mov
push
pop
pop
mov
lock
in
je
pop
sbb
loop
xchg
arpl
shll
ds
call
dec
or
mov
outsl
and
add
mov
dec
scas
aam
fwait
mov
push
lret
shrb
mov
mov
inc
mov
pop
test
jge
mov
daa
xchg
dec
sbb
in
inc
cmp
and
cmpsb
mov
dec
mov
jno
bound
loop
mov
sbbl
andb
sbb
insb
test
jl
mov
mov
insl
fwait
mov
es
std
out
mov
inc
pop
loope
mov
insb
out
test
push
aad
and
loop
frstor
icebp
aad
std
push
xchg
scas
lods
out
popf
shll
xchg
sbb
and
mov
testl
inc
out
int3
and
das
aam
add
std
xor
jg
out
push
movsl
push
pushf
stos
lods
rcrl
xor
add
cmp
cmpsl
arpl
int
jl
outsl
mov
scas
jmp
jge
hlt
add
shrb
or
pop
mov
neg
scas
and
shlb
dec
xor
hlt
mov
pop
insb
lea
out
jg
sub
pop
arpl
xor
out
mov
xor
shlb
push
out
lahf
out
scas
fiaddl
movsb
cmp
popa
pop
push
xchg
and
es
push
sub
gs
fbstp
iret
stos
fwait
movsb
fsubl
cmp
xchg
fs
inc
les
pop
pusha
test
das
push
popf
push
aad
loope
xor
xor
mov
jbe
test
push
mov
mov
sub
fidivs
cmpsl
jl
xor
mov
xchg
xor
scas
fdivl
out
push
inc
jl
jb
ds
jg
lods
dec
mov
cli
or
add
lret
cs
data16
mov
ljmp
and
inc
inc
inc
rorb
mov
in
adc
pushf
mov
mov
leave
jge
xor
mov
mov
mov
flds
je
mov
inc
lods
mov
jge
jae
sarb
xchg
rolb
push
mov
add
sarb
add
adc
add
sbb
int
imul
mov
jle
mov
ja
xor
jne
ss
or
pop
sub
xchg
gs
arpl
push
pusha
or
or
lahf
out
pop
outsb
and
test
daa
add
test
push
int
push
adc
pop
jle
ret
outsb
pop
pop
insb
pop
pop
xchg
push
aad
fwait
out
sub
cltd
test
dec
mov
inc
cld
inc
pop
inc
push
dec
or
or
in
pop
outsb
les
stos
adc
add
jge
test
int
push
adc
mov
push
aaa
jge
inc
jno
cmp
jle
sbb
fdivrs
sbb
ss
ret
adc
lcall
and
push
xchg
loope
ja
xchg
sbb
pop
fs
xchg
jg
sub
shll
test
lock
lret
cwtl
inc
and
je
imul
ret
shlb
sbb
sahf
push
movsl
xorl
mov
push
add
inc
jb
stc
in
nop
in
movsb
out
dec
mov
cmc
and
push
aad
leave
into
sub
xchg
sbb
inc
and
dec
outsb
lret
push
lcall
test
aam
xor
insb
pop
mov
cld
fildl
es
ljmp
rcl
scas
into
mov
arpl
sbb
lret
pop
push
xlat
lahf
js
ret
inc
lds
imul
xchg
mov
and
lea
adc
imul
ss
mov
cld
pop
dec
test
sbb
lcall
stos
in
or
mov
mulb
fldt
pushf
pushf
loop
aas
fisubl
nop
push
andb
inc
daa
xor
out
jbe
push
popf
not
adc
js
pop
push
dec
neg
fidivs
xlat
or
std
cwtl
xor
push
repz
fmul
loopne
leave
fcoms
out
sbb
mov
jnp
bound
jmp
sahf
push
adc
sub
and
jle
int3
push
cmp
fbstp
ficoml
jno
inc
inc
jb
push
les
or
push
cmc
arpl
pop
mov
xchg
jne
test
adc
out
pop
jo
push
aam
rcll
push
aad
shl
and
inc
mov
pop
test
lods
outsl
mov
mov
test
subb
rcll
dec
jo
in
cmp
fwait
jecxz
fs
sbb
mov
xor
sub
ja
sahf
cmp
testb
inc
push
mov
mov
andl
push
sub
add
lea
push
cld
mov
js
pop
imulb
mov
pop
or
mov
je
fs
dec
add
mov
push
jno
inc
test
mov
mov
std
data16
in
cmp
xchg
cltd
cwtl
xchg
pop
fbstp
flds
sbb
mov
inc
push
or
stos
mov
aas
or
add
cmpsb
sbb
fadds
loope
fdivr
rolb
inc
push
adc
xor
adc
jle
xor
adc
sbb
stos
rcll
cmpsb
add
test
add
mov
cmpsb
movsl
scas
loop
or
add
and
sub
pop
sub
fdivrl
fadds
fidivs
xchg
vmread
lahf
push
mov
mul
enter
jo
xlat
cltd
jge
jle
popa
xchg
push
jbe
data16
pop
sar
aam
lret
push
jo
or
xchg
xchg
cmpsb
stos
mov
test
pop
inc
rclb
dec
insl
or
mov
adc
inc
ja
cmp
push
lds
push
add
movsl
jns
shll
sbbl
in
mov
bnd
lods
into
sbb
out
jb
fnsave
lahf
fldenv
out
cltd
aad
xchg
insb
lods
out
fbld
aas
xor
xchg
cld
mov
pop
add
and
sub
mov
and
int3
xchg
mov
mov
xchg
mov
popa
imul
and
mov
addr16
nop
aas
arpl
push
ret
pop
add
outsl
push
insl
mov
and
inc
lds
xchg
push
roll
xor
and
push
imul
hlt
stos
pushf
cmp
fisubl
push
lahf
stos
push
nop
mov
and
jae
and
cmp
add
outsb
scas
dec
lcall
cli
scas
aad
rcrb
aam
in
adc
test
mov
mov
xchg
ljmp
sbb
in
mov
push
cwtl
xor
icebp
shlb
sub
call
ret
and
cmp
mov
mov
inc
sti
mov
aam
push
dec
mov
iret
fsubp
adc
lret
add
pushf
mov
sub
loop
movsb
dec
jmp
mov
or
lock
jge
je
cmp
in
call
arpl
inc
sahf
sbb
xor
popf
pop
sub
popf
push
jmp
lret
stc
mov
enter
cs
int
daa
filds
inc
in
daa
into
inc
loope
lahf
sub
add
scas
adc
jle
outsb
enter
shrb
cwtl
cmp
xor
cmc
lds
push
push
xchg
mov
iret
mov
cmpsb
xor
jl
jno
push
and
mov
jb
insb
inc
popf
sbb
filds
jl
fwait
mov
ds
xlat
arpl
sub
pop
push
add
rorl
add
and
and
add
repnz
add
inc
fiaddl
in
repnz
mov
shrl
je
push
ja
sub
movsb
aas
insb
ret
sti
mov
or
jae
into
mov
jg
cld
clc
cld
es
jl
ja
ret
xor
loopne
mov
inc
fisubrl
insl
mov
sub
fidivs
lret
call
pop
sti
xchg
and
fldl
int
lahf
and
dec
nop
cwtl
and
sbbb
daa
rcll
pop
rcr
roll
icebp
jnp
jo
pop
inc
rolb
and
scas
push
ss
add
popa
mov
cmp
mov
ljmp
cmc
mov
fsubrl
dec
mov
xor
xchg
xor
jl
pop
pop
push
and
pop
ret
adc
and
mov
and
xor
rolb
repz
mov
jge
les
div
jmp
xchg
imul
pop
out
popf
out
jno
int
and
fldcw
and
imul
ror
cmp
xchg
pop
movsl
push
leave
cmp
cli
in
cmp
mov
add
setno
push
cmp
sbb
xchg
in
imul
test
jg
xchg
dec
push
dec
imull
pop
movsl
cwtl
add
sbb
adc
push
popf
xor
add
mov
pop
arpl
fcoms
xor
lods
ss
iret
pushf
test
fs
dec
and
dec
lods
mov
adc
cmp
or
ss
jecxz
xchg
lods
jge
sub
lods
aam
int
movsb
inc
xchg
mov
hlt
aad
pushf
xchg
arpl
insl
add
cmpb
out
mov
cmpsb
push
jl
ljmp
dec
lea
dec
test
call
push
repz
xchg
fisubs
jae
mov
xlat
xchg
fadds
repz
cmp
add
push
jnp
outsb
or
arpl
out
push
inc
bound
pop
mov
push
ss
arpl
and
dec
dec
repz
mov
pop
dec
mov
mov
push
popa
int3
sub
fisubrs
sbbb
xchg
sahf
test
pusha
pop
loope
out
and
sub
add
cmovae
loope
pusha
cs
pop
inc
and
xchg
scas
push
shlb
leave
lea
cwtl
pushf
arpl
jno
sub
pop
jnp
xor
inc
in
cld
dec
int
pop
repz
stos
popf
mov
mov
xlat
stos
xchg
pop
jae
sbb
mov
add
adcl
xor
std
imul
adc
add
cmp
inc
in
xchg
add
cwtl
lea
mov
push
sub
xor
fnsave
loop
sub
data16
xchg
sar
fistps
xchg
dec
push
xchg
loope
sub
dec
sbb
and
loop
mov
push
add
xlat
ficomps
pusha
je
and
inc
fwait
dec
jns
jl
mov
dec
dec
lods
je
out
fdivs
dec
pop
jno
mov
mov
ds
rcll
shl
push
mov
pop
outsb
pop
adc
loope
xor
clc
rclb
and
adcb
pop
ljmp
xlat
cmp
pop
mov
and
dec
cmpsl
loope
ja
test
cltd
push
shrb
and
xchg
fwait
pushf
insl
in
jb
xchg
sbb
pop
out
pop
and
out
pop
push
jmp
arpl
cs
outsl
inc
dec
jmp
enter
or
or
rcr
test
sub
push
pop
mov
xchg
or
xchg
lahf
sub
lods
loop
xchg
das
std
cwtl
fsubr
enter
dec
shll
fwait
mov
arpl
sub
pop
xchg
jbe
mov
mov
xchg
sub
into
pusha
cmp
jmp
mov
fisubrl
sub
stc
cmp
iret
shrl
adc
int
lret
les
mov
push
xchg
addl
sbb
fnstenv
mov
cmp
aas
pusha
stc
lods
filds
data16
ja
lods
push
sub
mov
push
mov
xlat
daa
inc
fs
xchg
insb
jmp
add
scas
loopne
push
mov
pop
mov
hlt
cmp
shrl
jb
or
nop
cld
mov
std
mov
movsb
data16
mov
test
stc
lods
out
xchg
ds
ljmp
mov
imull
insb
nop
pop
pushf
es
xlat
loope
and
or
sahf
jle
jmp
push
scas
enter
repz
int
dec
aad
pushf
icebp
mov
gs
mov
xlat
daa
sbb
or
push
rcll
or
sti
movsb
mov
sub
fiaddl
mov
xchg
imul
in
lds
lahf
aam
add
push
lea
or
inc
les
or
push
xchg
dec
scas
lret
dec
cld
repnz
jge
fbstp
andl
mov
stc
dec
in
movsb
mov
push
frstor
and
inc
sti
pop
scas
sub
or
insl
rolb
xchg
loop
jp
daa
popa
mov
sub
push
cmp
mov
or
sti
je
adc
xlat
cmpsl
jb
repnz
mov
pop
jmp
jns
mov
stc
mov
pop
repnz
ret
lock
icebp
lods
adc
or
ret
scas
push
fldt
jmp
inc
in
dec
pusha
icebp
cli
mov
movsb
int
imulb
aad
sub
out
insl
sbb
xchg
imul
cld
shll
jecxz
mov
mov
mov
add
push
or
sbbl
lods
aaa
and
call
clc
cmp
je
push
pop
mov
shll
int
pop
stc
imul
int3
push
jmp
dec
add
fstpl
out
mov
idivb
lods
cmp
xchg
push
cmp
sbb
push
hlt
stc
aas
jp
lea
cmpsl
shlb
pop
pop
dec
in
mov
outsl
or
mov
ret
xor
jae
mov
push
popl
sub
std
cmc
mov
jae
and
into
dec
popf
lea
nop
movb
sbb
jnp
inc
push
mov
jns
ja
enter
int3
push
xchg
ss
cmp
jge
mov
js
and
jg
movsb
cltd
cmp
cmpsl
dec
add
popf
mov
and
push
sub
pop
movsb
inc
push
int
repz
cld
inc
scas
xchg
push
pop
fdivl
and
sbbl
pop
xor
xchg
jbe
das
fildl
jp
and
bound
lds
xlat
vpcmpgtb
inc
test
jns
add
ficompl
shlb
fistl
push
mov
rcll
jecxz
enter
cltd
push
fistl
sub
or
test
xor
jmp
add
sahf
rolb
in
jo
fsubs
mov
jg
rol
push
dec
out
test
rclb
jg
jae
lcall
nop
dec
aam
aaa
lss
arpl
repnz
sbb
xor
mov
rcl
rcrb
arpl
scas
ja
decb
jb
jns
or
addl
xor
fcompl
or
pop
es
movsb
xchg
or
cmp
pop
fwait
xor
cs
sbb
sub
es
mov
xor
cwtl
fsubrs
add
xchg
test
fsubrs
pop
fcoms
pop
movb
lcall
push
sahf
sbb
insb
cmpsb
push
lods
mov
push
subl
lds
push
out
popf
xlat
push
cltd
push
inc
xor
pop
scas
jae
mov
xchg
jo
pop
movsl
in
dec
pop
xlat
pop
xchg
hlt
clc
inc
lods
sub
jo
push
fstpt
fidivl
mov
push
rolb
jno
push
aas
outsb
into
jbe
ja
or
push
xor
cmp
outsl
bound
mov
in
lret
pop
lods
mov
xchg
mov
add
jne
pusha
mov
sub
enter
fidivrs
bound
inc
mov
push
mov
cmp
ljmp
aaa
add
sub
mov
pushf
xorb
pop
mov
sub
outsl
fisttpll
mov
in
mov
ja
daa
sbb
sub
inc
mov
imul
arpl
test
int
in
popf
cmp
int3
cmpsl
pop
daa
lds
pushf
sbb
jo
cmpsb
sub
add
push
fld
stc
lea
test
pop
sub
es
arpl
pop
inc
inc
xor
stc
sbb
fucomp
in
sbb
aad
lea
cmp
test
pop
mov
es
xor
movsb
or
cld
xor
pop
jb
shlb
out
les
jnp
jmp
out
test
and
cmpsb
int3
cwtl
cltd
out
adc
cli
addr16
mov
and
mov
sub
dec
adc
iret
sbb
pop
sahf
jle
mov
ja
lret
shlb
xchg
mov
rorl
in
mov
jb
jmp
mov
scas
out
xor
outsb
fistpl
xor
jo
add
lret
dec
cmp
push
mov
jle
out
jg
movsl
pop
test
sbb
push
jo
adc
test
sbb
arpl
cli
test
and
lods
lock
cli
and
data16
adc
mov
pop
fwait
push
cmpsb
xor
pop
add
call
mov
xchg
jb
sub
sub
test
stos
nop
shrl
leave
loope
jne
mov
es
neg
dec
push
hlt
fistl
test
test
sub
push
push
sub
lahf
adc
xor
movl
leave
lds
jbe
fcmovnu
cmpsb
int
mov
test
loope
jb
inc
add
add
lds
dec
or
cs
xchg
adcb
stc
in
sub
daa
xchg
cli
xlat
scas
insl
repz
push
arpl
cmp
push
mulb
cmp
loopne
add
aad
push
aam
gs
cmc
jbe
push
inc
pop
pop
iret
iret
jl
fwait
aas
popf
ficompl
fisubs
lret
mov
jle
sbb
ljmp
push
scas
imul
dec
pop
inc
sbb
mov
push
shll
mov
arpl
cmp
cld
inc
stos
push
mov
out
in
rorl
add
add
cs
sahf
xlat
cs
dec
movsb
xchg
pop
sub
out
push
add
fs
jnp
lcall
outsb
lds
clc
lcall
and
mov
aam
daa
inc
mov
insb
pusha
in
sub
loop
xor
dec
popf
cltd
jns
pop
es
and
ja
aaa
or
in
fnsave
sarb
in
insl
mov
jp
ret
and
mov
scas
lods
dec
lods
mov
cmp
and
pushl
es
pop
rcrl
pop
push
lahf
sbb
mov
push
mov
daa
pusha
shll
imul
xchg
inc
dec
push
mov
mov
xchg
ss
pop
out
lods
cmc
inc
rorl
aaa
xchg
pop
arpl
xchg
sbb
shlb
test
sub
sub
in
repz
xchg
add
mov
sarl
adc
and
aas
sbb
stos
jmp
mov
fldl
push
icebp
ds
test
mov
cmp
aam
xchg
ret
loop
cmc
mov
and
frstor
pop
fnstcw
pushf
sbb
lock
inc
fidivl
pop
pusha
clc
xchg
jge
xchg
fists
sub
jo
mov
ficompl
xchg
xchg
mov
or
out
mov
sub
xor
subb
pop
imul
pop
roll
insl
push
dec
out
filds
push
adc
and
or
jae
pop
xor
pusha
xchg
xchg
xchg
cmp
mov
sbb
jmp
adc
mov
clc
addl
jae
xchg
add
push
clc
lea
cli
dec
pop
xorb
rcrl
sahf
and
mov
or
clc
fs
lock
enter
inc
mov
lods
jbe
jecxz
sarl
aad
inc
mov
adc
inc
jno
jle
dec
nop
out
repnz
jmp
shlb
cld
pop
jb
in
sarl
mov
mov
xchg
or
cmp
adc
adc
jecxz
hlt
outsl
sub
adc
sub
movsb
mov
icebp
fistps
xlat
mov
add
fsubl
inc
movsl
andl
stos
push
push
movsl
fdivrl
fld
movsb
cld
pop
mov
dec
or
inc
mov
out
adc
inc
aaa
jp
sbb
insl
loopne
adc
inc
lods
idiv
addr16
or
jae
mov
iret
in
loope
mov
in
xchg
sbb
es
inc
fiaddl
repnz
and
clc
sbb
sahf
ret
out
sub
mov
xchg
push
adc
cmp
nop
shl
mov
dec
push
pop
and
mov
out
fnstenv
xchg
jle
scas
arpl
movsl
mov
mov
xchg
lcall
jecxz
fwait
xor
test
mov
push
fcmovbe
dec
push
test
movsb
sarl
mov
in
xchg
test
imul
mov
cmc
ds
ljmp
test
xchg
and
xchg
sub
insb
out
xor
xchg
mov
inc
inc
cli
sub
push
idivb
dec
xchg
and
push
shr
outsb
movsb
in
pop
add
mov
pop
mov
mov
je
pop
jns
int
sbb
mov
mov
mov
test
pop
pop
cmp
mov
inc
add
fists
lods
inc
mov
mov
and
xchg
scas
mov
fwait
out
andl
notl
shrl
insb
mov
jge
out
nop
inc
jbe
mov
aaa
jnp
xchg
xor
pop
pushf
pushf
cs
add
adc
ret
ret
push
push
clc
inc
movd
decb
pushf
imul
pop
fs
and
dec
xchg
into
icebp
push
les
xchg
enter
aam
push
nop
dec
es
jmp
sub
dec
fimull
test
mov
pop
mov
mov
stos
xchg
or
addb
insl
xchg
div
popa
or
and
mov
roll
dec
in
push
pop
push
mov
pop
sub
cmc
sub
mov
xor
push
imul
aaa
hlt
imul
mov
push
xchg
sbb
mov
ret
stc
fnstsw
xor
icebp
out
adc
jmp
into
scas
lret
adc
mov
and
or
testb
dec
or
adc
pop
inc
sbb
jle
ds
sub
dec
mov
dec
inc
into
sub
gs
sub
dec
outsl
test
pop
repnz
add
lret
movsl
pop
jae
mov
fwait
adc
inc
pop
mov
push
mov
movsb
mov
adc
xchg
sbb
mov
push
lcall
scas
mov
arpl
call
icebp
ds
mov
jae
fs
xlat
xchg
pop
sbb
ja
stos
pop
sahf
lcall
xchg
mov
adc
fidivs
movsl
or
ljmp
outsb
cmovb
fs
sub
ret
mov
adc
sub
imul
js
sar
stc
fs
xor
idiv
inc
push
aam
rcll
or
push
xchg
dec
pop
mov
sub
or
mov
movsb
aam
xchg
push
adc
cmpsl
js
jp
adc
pusha
addr16
test
enter
imull
daa
movsb
push
jle
imul
xlat
ja
icebp
mov
xor
ret
lock
inc
dec
inc
shrl
mov
repnz
in
and
mov
test
lods
mov
fcomp
pop
sub
imul
sbb
popf
sbb
and
dec
imul
xor
jg
push
fldenv
and
das
xchg
fcomp
adc
cmc
pop
cmp
adc
xchg
aaa
mov
subb
or
into
filds
mov
repz
ret
outsb
insl
dec
xchg
add
es
pop
pop
shrl
and
pop
inc
adc
popa
xchg
cmpsb
repz
popa
loop
or
int3
xorb
out
sti
stc
cmp
pop
bound
sahf
xor
orb
sub
adc
jno
inc
xchg
lods
pop
and
imul
mov
divl
scas
cmp
pop
aam
addr16
data16
push
sub
divl
cmc
fsubrs
sbbb
loope
jne
sub
sub
jno
mov
rclb
push
push
out
fisubs
fimull
aam
adcb
xor
and
nop
cmp
pop
adc
push
lods
inc
lcall
andb
shll
adc
iret
loop
mov
xor
mov
xchg
mov
xchg
fsub
xlat
sub
jo
imul
mov
cmpsb
scas
mov
sub
roll
shrb
lods
xor
xor
ret
mov
adc
aam
stos
adc
mov
ficoml
ffree
cwtl
push
hlt
xchg
push
push
int3
aas
fisttps
in
mov
ret
lea
icebp
stc
lcall
or
shrb
push
jmp
cmp
push
aad
lret
shlb
jae
xor
add
inc
inc
or
jmp
stc
sbb
xor
dec
inc
inc
adc
xchg
adc
shl
mov
lods
sub
in
jne
push
outsb
or
xchg
popf
sti
fiadds
or
push
rcll
leave
pop
sbb
mov
adc
inc
jno
inc
and
cwtl
or
test
idivb
aam
inc
dec
popf
cmp
inc
in
fisubrs
iret
sahf
xchg
cwtl
nop
mov
dec
rolb
inc
xchg
inc
loopne
arpl
add
mov
cmp
and
push
addr16
sarb
sbb
aas
sahf
int3
iret
mov
inc
out
push
hlt
mov
rorb
hlt
adc
scas
mov
or
cmpsb
loopne
dec
xchg
cmp
out
nop
outsb
dec
lret
or
mov
jge
popf
int
icebp
xor
add
lahf
sub
jnp
fdivrl
scas
hlt
jbe
cmp
and
out
push
mov
lock
adc
sub
cmpsl
divb
push
sahf
and
push
aaa
je
hlt
sub
insl
cltd
xchg
cmp
popf
in
loope
stos
mov
enter
adc
sbb
testb
inc
sub
bound
dec
push
stos
negb
movsl
cltd
divb
and
std
sub
lret
in
or
fstps
es
cld
outsb
out
push
mov
sbb
sbb
xchg
cmc
jno
sub
repnz
inc
mov
out
lahf
mov
mov
jno
test
int
inc
popf
in
adc
daa
jecxz
filds
xor
sbb
cmpsb
insl
add
mov
rorb
notl
pusha
sub
mov
divl
clc
inc
inc
loop
out
dec
xchg
mov
les
shlb
hlt
cs
jnp
and
push
enter
pop
dec
sub
call
sbb
out
out
push
inc
sbb
mov
mov
rclb
mov
stos
sub
mov
out
out
jno
mov
shrl
adc
push
outsb
fists
mov
inc
sbb
mov
and
mov
adc
lret
int3
sbb
in
dec
jno
inc
push
call
xchg
mov
in
fnsave
sbb
jp
ret
dec
pop
or
mov
ljmp
sub
fisubrl
shrl
and
xor
jp
adc
aam
mov
out
fidivrs
insb
push
fnstcw
lods
mov
adc
mov
aad
lock
fcomp
insl
push
sahf
ret
and
pop
test
je
xlat
in
pushf
outsl
jge
lcall
xchg
mov
lds
je
xor
cmp
adc
into
sbb
cmpsb
loop
inc
sub
rcl
mov
mov
cmc
out
mov
jmp
popf
push
and
mov
popf
inc
movsb
mov
or
jp,pn
push
pop
pusha
dec
testl
stos
push
in
xor
jle
mov
pushf
aam
in
mov
ficompl
inc
cmp
daa
enter
or
inc
cli
ds
pushf
fwait
outsl
jbe
ficoms
cmc
add
stos
pop
jge
mov
push
shlb
adc
sub
pushf
aad
imul
pusha
int3
inc
fbld
inc
arpl
push
testl
or
scas
je
in
mov
or
inc
dec
sbb
popf
sarl
je
dec
int3
popa
dec
ret
into
in
or
add
ds
and
mov
outsb
mov
shrl
xchg
jns
jp
mov
sbb
divl
cmp
mov
fwait
ror
sbb
or
cmp
stos
inc
dec
xor
xchg
pop
jno
lock
pop
icebp
icebp
dec
pushf
pop
xchg
xchg
aad
sbbb
in
push
out
stos
xchg
cmc
adcb
adc
insl
aas
push
cmp
out
ret
mov
add
add
push
test
push
mov
xor
adc
fwait
push
add
adc
jbe
sbb
in
push
hlt
jb
xor
mov
out
mov
mov
aaa
stos
add
xor
imul
inc
sub
xor
mov
adc
xchg
pop
add
cwtl
lods
clc
dec
pushf
mov
pushl
pop
scas
and
adc
int
push
pop
out
jnp
or
fisubrs
jge
xor
gs
adc
aas
and
imul
mov
lahf
mov
cmpsb
cli
inc
push
cmp
jbe
out
scas
and
dec
and
test
fcoml
int
sbb
sbb
imul
outsb
fistl
sub
arpl
inc
pop
mov
sbb
dec
js
inc
icebp
dec
dec
addl
or
cmp
inc
mov
xor
xor
notb
rcrl
ret
cmp
out
mov
jmp
dec
and
popl
jne,pn
insb
fcmovbe
dec
outsb
sbb
dec
xchg
fisubrs
in
out
mov
ja
pushf
ret
adc
imul
sbbb
xor
cwtl
add
mov
pusha
mov
push
mov
push
push
in
dec
lret
test
xchg
lods
mov
lcall
je
inc
and
xchg
mov
or
mov
adc
xchg
mov
les
iret
aas
fldenv
out
pop
out
dec
mov
das
fmul
or
adc
pop
mov
xchg
or
xor
mov
sub
mov
popa
sbb
push
lret
mov
call
imul
jnp
mov
xchg
and
fwait
jne
sbb
jno
das
adc
mov
or
jecxz
pop
lcall
divb
xor
jbe
mov
fidivs
cltd
mov
xchg
xor
lock
mov
sbb
sarb
fcomps
or
pushf
stos
push
jp
das
mov
mov
fldt
jg
enter
addr16
subb
jae
scas
imul
out
repnz
ficomps
push
push
mov
dec
xchg
push
fsubrl
cwtl
and
fstl
pop
testb
fistl
push
dec
sbb
inc
push
push
mov
shll
fdivp
mov
jmp
lods
psubsb
inc
mov
popa
arpl
and
loopne
jmp
cwtl
cmp
mov
pop
shrl
jae
sub
or
jle
std
fwait
cmpb
out
push
outsb
fldenv
loop
loope
mov
aam
test
pop
adc
push
sbb
inc
jle
pop
adc
mov
push
jno
adc
sti
ret
pusha
pop
dec
fstpl
xchg
fisubs
loop
jnp
in
and
mov
sub
mov
xchg
xrelease
inc
in
fisubl
push
in
aad
xchg
std
sahf
sub
lahf
orb
xlat
push
sub
scas
insl
ljmp
sub
inc
add
pop
int3
push
mov
ljmp
jns
dec
into
and
stos
les
mov
ljmp
stc
inc
push
sub
shlb
pushf
int
stc
call
jb
addr16
xchg
pop
mov
stos
aam
and
pop
aaa
pop
dec
mov
cmpb
pop
int3
lret
adc
inc
sbb
xchg
xchg
ljmp
sub
out
cld
mov
mov
inc
xlat
dec
or
outsl
inc
test
jl
sbb
xchg
arpl
xchg
enter
inc
mov
repnz
loope
leave
and
and
shlb
fisubs
mov
add
outsb
popa
cwtl
fidivl
pop
scas
cmc
push
aas
push
xchg
mov
enter
aad
xor
add
fcomps
xchg
mov
cli
dec
rclb
xchg
into
or
sbbb
pop
popf
sub
xchg
out
addl
sub
fcompl
iret
fs
in
stc
add
pop
cmp
addr16
cs
mov
insl
and
bound
insl
sub
insl
arpl
dec
pop
ja
mov
cwtl
out
sbb
sub
rclb
jnp
les
inc
fsubrp
lods
ljmp
fidivl
push
add
shll
aam
in
or
gs
dec
push
imul
fcoms
add
lods
jbe
imul
mov
and
sub
orb
or
xor
dec
cmp
adc
fwait
push
jecxz
lahf
fmull
xchg
and
sub
stos
int
jmp
and
or
push
movsb
xor
and
cwtl
stos
pop
insb
mov
jmp
mov
jae
mov
mov
inc
mov
pushf
lret
ljmp
fwait
xor
or
or
mov
mov
test
mov
mov
js
xchg
imul
mov
icebp
ja
iret
arpl
push
sub
pushf
dec
xchg
jmp
sub
in
xchg
jg
cmc
fiaddl
dec
mov
xchg
ja
aad
pushw
test
add
push
aad
push
adc
iret
test
test
mov
dec
add
nop
cmpsl
cmpb
adc
fwait
popa
in
scas
das
cmp
xchg
push
cmp
mov
ja
sarb
cmp
int3
ret
adc
ljmp
in
mov
fistps
jge
pop
cmpsb
cmc
or
lds
arpl
cld
jnp
lahf
sbb
adc
negb
mov
xchg
inc
add
fnstcw
mov
leave
fisttpl
mov
repnz
mov
cmc
mov
popf
pop
sti
in
cmpsb
mov
pop
xchg
mov
ds
push
fsubrp
out
mov
mov
mov
fisttps
sub
scas
aaa
pop
cmp
fs
jne
int
sbb
loopne
mov
cwtl
pusha
cwtl
pop
int
fsubs
test
inc
scas
lcall
arpl
dec
xchg
pop
inc
push
loopne
and
pop
pop
jmp
mov
pushf
fidivl
add
and
fstpt
pop
fwait
jl
add
cs
cmp
ret
mov
add
aad
mov
mov
mov
and
mov
cmp
and
push
stos
imul
scas
fisubs
mov
and
jbe
das
jp
addb
sbb
aas
or
jnp
sub
cs
daa
repnz
insl
lock
xchg
fldl
lret
push
mov
adcb
mov
push
xlat
popa
and
lods
outsl
jno
xchg
pushf
stos
popf
ret
daa
mov
xor
popa
fimuls
adc
sbb
mov
test
sbb
mov
add
mov
or
mov
cmp
cmp
add
push
mov
pop
and
icebp
dec
dec
jp
test
dec
jne
mov
add
mov
data16
adc
scas
ficoms
dec
insb
shll
movsl
cmp
mov
or
jnp
push
shl
lret
popf
rorb
sbb
pusha
sbb
fstp
push
test
pop
mov
scas
lahf
cmc
mov
ljmp
mov
clc
loopne
adc
cmpsl
loope
popa
mov
inc
clc
jg
xor
shlb
push
mov
lods
adc
xchg
push
mov
mov
insl
or
pop
nop
mov
sahf
out
cltd
cld
add
adc
in
repz
scas
adc
into
pop
in
es
xlat
pop
dec
fsubs
mov
hlt
or
fcmovb
push
push
pop
jmp
mov
cwtl
adc
or
mov
mov
mov
dec
mov
fs
pop
push
xchg
out
sahf
xor
rcrb
pop
arpl
lock
movsl
xchg
mov
enter
push
mov
aam
sbb
pop
gs
fsubrl
data16
sub
stc
out
repnz
pop
or
lret
in
iret
inc
xchg
lcall
xchg
xor
rcpps
fsubs
cmp
aam
int
xlat
jle
into
add
dec
push
lock
lock
inc
iret
mov
js
adc
sub
inc
add
lds
sub
fucomi
lods
pop
xorb
subb
out
int
xchg
cmpsl
lds
nop
cs
mov
shrl
xor
gs
mov
push
mov
fdivrl
test
jl
dec
cwtl
sub
mov
push
enter
xchg
xor
movsl
jno
cmp
es
adc
mov
mov
push
lods
out
out
push
shl
jae
fs
cmp
pop
inc
sub
add
dec
aad
or
cli
test
call
add
es
jecxz
sbb
push
xchg
sahf
arpl
cmp
adc
dec
aaa
jg
int
inc
arpl
lcall
movsl
pop
mov
xchg
adc
cltd
nop
leave
and
insb
cwtl
popf
adc
ljmp
pusha
mov
mov
hlt
sbb
js
pusha
cli
lea
icebp
inc
lock
inc
lods
fiadds
mov
mov
test
lcall
push
pusha
inc
jns
in
repnz
test
sbb
daa
push
out
outsb
push
and
jb
xchg
out
lock
fiadds
xchg
rcrl
cmp
xchg
neg
sbb
gs
lret
mov
imul
aam
fcoml
popf
in
insb
cwtl
rcl
lea
add
iret
xchg
sub
and
and
frstor
push
fs
in
pop
cli
add
sahf
sub
lods
movsl
neg
stos
fistps
cmp
leave
rcr
jmp
push
popf
out
gs
adc
sbb
xchg
movsb
jecxz
push
lods
pop
push
push
push
inc
push
in
jge
and
cmp
cmp
insl
adc
cld
inc
pusha
scas
inc
or
adc
mov
lds
popa
dec
push
pop
out
jg
je
inc
lahf
mov
xor
xchg
pop
jbe
ja
inc
adc
insb
cmpsl
jmp
bound
xchg
and
hlt
mov
mov
insl
push
sahf
shl
mov
pop
addr16
fdivrs
aad
gs
fs
ret
les
mov
sbb
test
mov
push
sbb
bound
rcrl
xchg
fmull
inc
add
jns
pop
cs
cli
lock
daa
and
adc
adc
iret
and
movsb
repnz
sahf
daa
sub
mov
js
test
sub
rcrl
sub
sub
xlat
inc
ficoms
mov
movsb
and
mov
and
std
xchg
movsl
hlt
insl
imul
leave
cmpsb
sbb
cltd
lahf
fimull
data16
push
add
scas
imul
jne
es
adcb
addl
push
push
pop
pusha
cmp
inc
pushf
mov
xor
xorl
in
lret
mov
add
fucomp
add
jl
inc
push
ret
clc
sub
je
mov
ret
push
sub
pop
popa
and
das
mov
push
imul
adc
add
push
outsl
lock
xorb
push
call
data16
fildll
js
add
pop
cmp
scas
push
lock
mov
add
cmp
push
push
mov
ror
insb
mov
es
repnz
test
fsubs
pop
and
fldl
lds
repnz
sbb
jle
or
jb
pop
pop
xchg
lcall
mov
xor
ja
sarl
outsl
mov
popf
push
pop
or
aam
adc
movsb
ficomps
arpl
xchg
push
sub
and
icebp
jae
std
dec
loopne
xchg
inc
push
fistps
lods
push
into
gs
ljmp
hlt
and
sub
push
and
inc
xchg
mov
xchg
pop
mov
push
push
xor
sarb
or
mov
dec
nop
cmp
pusha
test
sahf
dec
rcrb
mov
inc
mov
inc
jg
pop
or
enter
subl
int3
xchg
pop
sub
pop
lea
xchg
mov
sub
imul
mov
sub
stc
cli
mov
mov
movsl
rorb
cmp
ljmp
xchg
cmc
and
clc
jne
or
push
mov
cmpsb
popa
jl,pt
mov
out
rclb
insl
ss
mov
movsl
mov
popf
jl
sbb
ret
lods
clc
pop
shlb
cmp
cmpsb
cmp
data16
jo
clc
push
xchg
push
fcoms
and
arpl
daa
out
scas
adc
negb
cld
lcall
cs
push
sub
call
pop
aam
das
cmpsl
sub
push
dec
add
cltd
add
sub
in
or
jb
jg
jns
push
bnd
and
push
sbb
daa
call
xor
int3
mov
test
or
mov
sub
je
mov
or
icebp
xchg
and
int3
pop
mov
sub
or
mov
pop
call
sti
in
push
inc
mov
popf
lods
sub
fiadds
push
jnp
add
dec
cltd
adc
cmc
cli
sahf
xchg
imul
jmp
xlat
pop
push
or
dec
jnp
aam
loopne
push
dec
push
pop
movsb
xor
adc
int
pop
js
jmp
sub
inc
sbb
or
sbbl
in
lods
iret
clc
sti
loop
cmc
jo
mov
stc
push
mov
xchg
dec
jnp
sub
ds
sub
mov
stos
aas
mov
xchg
xor
iret
pop
sbb
push
imul
add
push
fiadds
call
pushf
mull
dec
mov
mov
dec
sbb
xor
stos
inc
out
or
add
test
loopne
or
jbe
add
push
pop
lahf
flds
mov
lcall
sub
pushf
andl
mov
jno
movsl
lret
push
mov
repnz
inc
sub
mov
ret
stos
mov
inc
sbb
jne
cwtl
adcb
bt
ds
cmp
movsb
aam
sarb
lods
outsl
fcmovbe
test
scas
dec
cltd
int
cmp
imul
enter
sti
or
insb
clc
add
lcall
jge
pop
or
dec
jp
mov
je
loop
in
dec
movsb
mov
xchg
imul
lret
sarl
dec
xchg
out
jp
inc
add
bound
mov
sarl
pop
fcompl
sub
sbb
xchg
pop
adc
xor
jno
imul
cld
enter
in
adc
lock
insl
in
add
adc
push
test
mov
mov
out
in
sbb
push
mov
test
sub
pop
add
insb
out
pusha
mov
rclb
into
inc
mov
cltd
mov
mov
adc
test
aad
mov
xchg
inc
jl
repnz
cli
cmp
jg
fwait
cltd
or
mov
test
pop
adc
xlat
xchg
shlb
pop
testb
add
das
xor
adc
cltd
arpl
mov
mov
dec
mov
xlat
cmp
push
lret
shlb
jnp
ljmp
xchg
inc
fwait
mov
enterw
xchg
cmp
fdiv
sub
lcall
push
sbb
xchg
imul
mov
fsub
xchg
push
sbb
jmp
aad
mov
mov
int3
sub
adc
ss
test
sbb
test
rcll
and
pop
mov
inc
daa
aam
mov
mov
mov
js
push
sbb
in
repz
inc
fcompl
fxch
rol
or
out
cmp
xlat
or
aad
adc
outsb
jno
inc
xor
sub
push
hlt
mov
daa
or
nop
sub
shrl
xlat
iret
mov
shll
cs
gs
ret
push
out
mov
mov
sub
sbb
inc
dec
insb
pop
pop
cmp
daa
sbb
mulb
lock
scas
fistl
adc
shlb
lret
inc
pop
rolb
stc
in
push
add
fsubrs
sbb
xor
popf
xchg
mov
loopne
add
dec
sub
fwait
push
pop
movsl
je
mov
pop
ret
jb
dec
push
shr
mov
repz
jne
leave
ds
inc
xor
outsb
ja
loopne
mov
mov
aas
std
andl
jns
jmp
pushf
fsubrl
repz
jns
loope
iret
cmp
sbb
test
mov
sbb
in
jbe
mov
pop
imul
xor
cmp
sbb
mov
sub
push
in
jno
inc
xlat
sub
mov
dec
add
aam
lahf
std
sbb
filds
add
and
mov
mov
sbb
xchg
ret
mov
jo
xor
adc
mov
jb
daa
mov
push
mov
push
xlat
dec
xchg
ljmp
mov
push
int
popf
sarl
in
es
mov
xor
stc
out
mov
insb
sbb
insl
in
scas
out
ss
stos
ljmp
fcoms
adc
push
out
push
loope
mov
jb
xchg
push
cmp
xchg
xchg
cmp
push
adc
stos
stc
ret
adc
cmc
cld
dec
repz
push
scas
popa
sub
sub
and
xor
mov
sbb
xor
mov
dec
pop
mov
mov
adc
jp
repz
xchg
sahf
adc
and
mov
or
dec
sti
aam
test
cs
pop
inc
cli
add
loope
pop
iret
insl
jb
xor
lret
fmulp
mov
push
mov
xchg
sahf
sbb
bound
repnz
mov
out
movsb
push
fdivs
xor
pop
push
loopne
fisubrs
stos
int3
add
fidivs
xchg
xor
out
mov
popa
xchg
and
nop
cs
jmp
pop
jns
pushf
xor
adc
fistl
cmp
dec
dec
mov
push
or
mov
or
in
mov
aad
mov
cld
push
test
xor
outsl
out
sbbb
popf
lds
subl
push
js
inc
fstps
ret
mov
dec
mov
mov
xor
push
out
inc
sbb
add
inc
test
aam
sti
cmp
rorb
popf
out
mov
les
scas
mov
out
lret
mov
or
aam
xchg
aam
xchg
push
test
xchg
mov
pop
mov
jmp
popa
movsb
sarl
add
lods
ret
inc
mov
cltd
sub
push
sub
sbb
push
mov
jecxz
sbbb
scas
mov
cmp
jmp
fcmovnb
cmp
pop
add
call
iret
sub
xorl
in
rcrb
div
outsl
cwtl
pop
xchg
cmp
test
xchg
sbb
leave
hlt
inc
and
dec
dec
and
mov
xchg
popa
scas
xor
out
cwtl
scas
inc
dec
dec
mov
cmp
nop
sub
pop
ret
push
and
mov
xchg
addl
test
or
lods
fdivs
movsl
insl
mov
insl
lods
mov
outsl
mov
cld
insl
in
mov
or
das
push
or
lock
push
enter
fdivrl
mov
pop
cwtl
arpl
jns
inc
add
push
sub
mov
jb
inc
lock
push
sarl
jo
mov
xchg
jl
popa
push
stc
cmc
cmovs
cmpl
xor
outsb
dec
shrl
roll
jp,pn
add
and
xchg
push
out
testl
bound
imul
sub
push
jmp
fsubr
rolb
sub
rcll
rcll
mov
adc
push
xchg
or
dec
jl
mov
aaa
xchg
adc
pop
push
adc
lods
and
neg
addl
lods
xor
mov
test
mov
mov
stos
cmp
jb
or
push
inc
push
insb
addr16
xor
enter
test
xchg
mov
add
je
cmc
adc
les
push
cmp
ds
movsb
stos
rclb
sahf
outsb
sub
sub
ss
das
mov
loopne
jbe
jle
pop
bound
nop
sub
jg
lret
popf
lock
pop
test
out
mov
push
jmp
popf
mov
popf
xor
test
mov
aam
mov
sbb
dec
ljmp
pusha
js
sub
insl
iret
rolb
test
scas
sbb
pusha
loope
or
dec
test
push
jbe
mov
mov
test
jae
pop
and
mov
andb
stc
in
jp
mov
mov
test
pop
sub
pop
hlt
xor
sub
sub
movl
inc
or
ja
imulb
icebp
jnp
and
pop
test
int
lock
daa
xor
mov
enter
in
adc
xchg
sarl
insl
inc
fwait
lds
arpl
or
sbb
stos
dec
and
addb
ss
sbb
cld
fisttpll
add
sbb
test
decl
sbb
call
mov
outsb
lcall
insl
jmp
push
inc
imul
inc
jae
out
add
or
fsubrl
dec
dec
nop
sub
xor
mov
push
lods
inc
xlat
inc
lock
mov
adc
cs
mov
adc
out
iret
cmp
jge
push
rorb
shrb
mov
sarl
sub
mov
mov
cmpsb
mov
push
into
lret
sbb
jae
popa
bound
imul
pop
inc
enter
jle
jb
ret
push
sub
incb
xchg
cmp
dec
pop
lods
mov
outsl
cmp
mov
cmp
mov
push
and
int3
xor
ret
lods
shl
pop
aad
test
xor
xchg
cmpl
xchg
mov
into
aad
insl
add
dec
jns
repnz
xor
dec
loopne
adcb
mov
jnp
bound
inc
and
xor
lods
cmp
jg
mov
rol
add
insb
flds
shl
or
test
addr16
repz
out
lcall
xlat
and
scas
lods
out
xchg
jle
push
dec
je
mov
cmp
push
repnz
lret
ficoml
add
fldcw
fldenv
fucom
cmp
sbb
fwait
in
pop
push
xchg
dec
cmp
push
push
mul
cmp
push
mov
cltd
lds
add
xor
icebp
push
iret
lret
xchg
mov
inc
pop
in
out
aas
inc
xchg
mov
and
bnd
push
idiv
scas
xor
push
adc
dec
mov
movsb
add
ret
add
mov
mov
push
addr16
mov
mov
insb
ja
mov
adc
ja
lret
jbe
rcrl
test
clc
fwait
arpl
push
mov
adc
ds
jmp
movsl
in
pop
ret
dec
add
jns
mov
lds
out
int
dec
loopne
cmp
jp
pushf
popf
adc
pusha
mov
addr16
sub
repnz
pop
popf
out
mov
ds
inc
sbb
outsb
sahf
push
xchg
pop
mov
dec
lea
mov
or
ja
imul
and
in
and
or
xor
push
loop
cld
or
and
jmp
inc
repnz
inc
cmp
fwait
dec
pop
rorb
pop
mov
scas
outsb
int
push
inc
pop
cs
cli
data16
aaa
loope
lds
hlt
push
pop
or
jbe
inc
icebp
test
sub
insb
inc
out
stos
mov
gs
gs
loope
mov
shlb
repnz
call
sub
add
inc
dec
stc
aad
stos
in
popf
outsb
or
in
hlt
movsl
jb
in
lock
and
pop
cld
mov
xchg
dec
outsb
in
iret
stos
mov
test
xor
mov
loop
xchg
mov
adc
dec
mov
cmp
iret
ljmp
scas
push
lcall
iret
jle
sbb
push
sub
cmp
adc
std
pop
jmp
shr
mov
sbb
dec
mov
mov
and
loopne
das
jl
push
sete
push
dec
into
or
jle
push
adcb
ret
jp
sbb
out
roll
jns
std
and
iret
xor
mov
repnz
xlat
test
add
aaa
push
inc
cmc
pop
mov
mov
sarl
pop
xchg
loope
jmp
cmp
xor
mov
mov
jp
mov
dec
js
sbb
xchg
outsl
add
scas
cmc
adcl
xchg
fimull
sub
inc
or
aaa
cs
sub
push
push
arpl
bound
out
lds
add
inc
aam
cmpb
icebp
sub
mov
daa
adc
add
inc
das
adc
popf
xor
loop
test
mov
out
push
fisubrs
insl
dec
out
repz
inc
dec
push
adc
pusha
out
loope
test
leave
pop
outsl
test
push
fdivl
xor
loopne
daa
cmpsb
std
movsl
mov
loopne
lcall
movb
sbb
cmp
inc
test
cld
imul
popa
pushf
lcall
or
jne
rol
jle
and
cwtl
cmp
outsb
fiaddl
fbstp
push
lret
or
fs
ret
pushf
lahf
push
sub
movsb
jbe
pop
push
mov
stos
fidivs
pop
xchg
fs
in
aam
pop
and
add
cmp
cld
xchg
sub
xchg
adc
stos
stos
aam
movsb
negl
fidivs
inc
push
nop
fldt
mov
add
pusha
in
ret
out
shrb
mov
or
lret
shll
sbb
add
ja
mov
imul
pop
fwait
jl
mov
je
and
out
leave
push
outsb
jmp
cmpsl
and
cmp
in
cld
xchg
ds
psllq
cmc
mov
xchg
mov
adc
fwait
out
mov
insb
sbb
or
and
adc
insb
sub
movsl
pop
test
mov
push
mov
push
test
das
cld
insl
mov
repz
jbe
cmp
push
aad
aam
dec
jbe
xchg
ret
nop
dec
aam
aad
pop
mov
mov
ss
pushf
xchg
nop
cwtl
mov
adc
or
sbb
jbe
pop
pushf
orl
mov
fcmovb
adc
xor
icebp
sub
fstpl
jb
inc
subb
out
sarl
mov
fidivl
leave
cltd
cwtl
xor
pushf
sub
les
in
jo
adc
ja
inc
jmp
and
fdivs
jmp
mov
loop
or
push
inc
stos
ret
dec
jmp
sbb
cmc
push
cmp
enter
mov
in
sub
ja
xchg
push
mov
sub
xchg
int3
xor
jo
pop
cmp
cltd
or
mov
int
fsubp
stos
push
int3
lods
cmp
ja
jne
divl
xchg
sub
rcll
rorb
ss
sub
in
xchg
inc
dec
xchg
dec
mov
scas
iret
pop
aad
mov
push
gs
mov
ljmp
test
and
add
or
data16
pop
hlt
pop
lcall
loopne
insl
cmpsl
cmpsb
ja
mov
dec
xlat
push
pop
je
scas
dec
and
daa
or
outsl
jne
pop
mov
sub
sub
dec
out
into
push
push
sbb
lahf
cltd
mov
inc
arpl
arpl
das
testb
adc
xchg
add
mov
into
outsb
sub
pop
fildl
call
jne
nop
adc
xchg
rolb
jns
pop
dec
sbb
xchg
cmpsb
push
aad
add
es
das
aam
sbb
push
stos
jmp
pushf
mov
stc
cli
dec
mov
push
sub
mov
pop
sub
into
and
xlat
out
leave
or
fsubrl
cli
mov
jmp
lock
xor
sti
stc
or
fcompl
insb
pop
dec
stos
das
movsl
mov
mov
pop
mov
jmp
mov
cwtl
pop
sub
roll
xor
add
pop
mov
lret
pop
icebp
addr16
xchg
xor
inc
push
sbb
cmpsb
into
mov
sub
push
ljmp
scas
int3
lds
gs
sub
lods
inc
mov
mov
push
js
test
inc
and
pop
add
push
push
sub
outsb
push
xchg
jns
jbe
mov
dec
outsb
aam
filds
jno
and
sub
imul
xchg
lahf
rolb
flds
jns
lret
mov
js
rcll
and
mov
jecxz
sub
ret
scas
push
in
xchg
lcall
iret
add
or
pop
mov
jno
push
mov
and
dec
cltd
mov
jo
pop
call
in
sahf
dec
push
roll
or
pop
xchg
stc
sub
adc
inc
push
cld
push
fldenv
adc
cs
mov
pushf
adc
test
xchg
mov
pushf
aam
ror
push
decl
push
out
mov
hlt
push
cmpsl
xchg
arpl
out
mov
pop
adc
lret
fisubl
inc
adc
loopne
rclb
mov
adc
add
jmp
divb
movsb
aam
pop
mov
mov
clc
imul
jp
fwait
push
popa
fdivl
mov
xor
mov
dec
jne
adc
popf
popf
outsl
into
iret
sub
jmp
insb
call
aas
inc
push
lea
pusha
mov
add
mov
pop
fnsave
repz
cmc
popf
fsubrl
rcll
push
mov
fsubs
pop
push
sarb
cli
psrlw
outsl
lea
mov
in
ds
xor
hlt
or
setb
lcall
mov
mov
and
mov
xor
into
in
nop
loope
mov
inc
xchg
mov
pushf
add
arpl
sbb
mov
mov
xchg
ljmp
or
adc
cld
fiaddl
mov
dec
ret
icebp
mov
push
ja
push
pop
or
push
and
loopne
xchg
and
jecxz
jo
mov
push
sbb
insl
int
add
jne
das
xor
and
cmpsl
xor
inc
pop
add
adc
jge
sbb
cwtl
dec
add
rorl
sub
outsb
mov
push
mov
adc
fidivrs
mov
fimuls
cmp
cli
adc
in
repnz
mov
in
sbb
lcall
jmp
adc
shll
leave
add
sub
xor
mov
adc
sbb
testl
cmp
inc
add
and
dec
cwtl
mov
stc
fistps
adc
adcb
hlt
mov
xor
mov
test
ss
push
imul
scas
mov
and
or
cmp
mov
dec
lcall
insb
mov
out
iret
fistps
fwait
leave
repnz
lret
fbld
movsl
fiadds
clc
jmp
int3
insb
lret
add
and
lret
test
sub
daa
push
pop
pop
pop
stos
push
jg
inc
pop
jp
mov
bound
push
inc
inc
pop
add
out
loop
xchg
adc
adc
outsb
and
dec
adc
hlt
push
cmp
sub
and
shrl
adc
xor
add
dec
mov
les
pushf
fwait
out
idivl
icebp
or
sub
inc
mov
mov
mov
push
mov
data16
jns
mov
adc
aas
adc
mov
out
mov
lret
repnz
fwait
pop
mov
hlt
jnp
mov
pushf
aam
push
sahf
mov
jno
clc
sbb
fidivrs
sub
dec
stc
sbbb
cmp
push
aas
lods
adc
sub
xor
mov
lock
icebp
stc
jg
fmull
pop
and
test
popl
in
cmp
movsb
out
push
xchg
xor
add
and
out
mov
pcmpeqd
pop
ret
in
cmp
adc
lret
mov
and
push
aaa
dec
out
cld
out
into
rcr
test
mov
adc
idivl
xlat
jnp
and
sbb
mov
cmp
adc
add
out
push
fsubrs
push
or
loope
in
ret
add
sbb
and
loope
mov
pop
test
pop
shrb
data16
and
dec
cmc
mov
push
loop
and
fdivl
push
daa
popa
cld
push
mov
movsb
cmp
adc
loope
ret
shrl
lahf
pop
icebp
mov
pop
aaa
or
das
pusha
jle
sbb
and
leave
fcomp
std
push
cvtps2pi
cli
frstor
repnz
mov
ja
or
clc
gs
in
cmp
sbb
test
out
mov
push
and
mov
xor
addr16
jl
pop
stc
sbb
scas
sub
xor
mov
and
data16
inc
add
cli
xchg
repnz
popa
movsb
lods
add
mov
and
pop
push
or
mov
xchg
cmpsl
out
or
cmpsl
dec
sub
or
imulb
inc
or
cmpsb
shl
clc
fisubrs
sbb
mov
add
loop
jb
mov
xor
mov
dec
test
lods
dec
add
repz
in
push
into
xor
mov
jns
lds
fcom
mov
loopne
out
outsb
jmp
imul
mov
loopne
xchg
jo
pop
xchg
fistpll
and
iret
imul
xorb
das
in
push
and
xchg
or
jne
popf
mov
mov
xchg
xor
rcr
add
pop
mov
int
xchg
add
xchg
andl
popa
adc
in
outsl
cmp
punpckhbw
insb
adc
js
loop
push
add
je
push
mov
out
inc
lcall
bound
cld
mov
push
adcl
pop
clc
mov
mov
push
arpl
cmp
xor
scas
cmp
fadd
mov
cwtl
test
sbb
data16
sub
dec
jge
fidivs
insl
mov
mov
push
or
loopne
testl
mov
popf
mov
cwtl
jb
das
aam
into
fidivrl
mov
dec
xchg
sub
imul
call
adc
push
mov
xlat
add
mov
dec
xchg
adc
insl
cmpsb
cld
int3
push
dec
imul
push
std
mov
icebp
sub
adc
xchg
data16
push
lds
fisubl
ljmp
push
out
aam
in
push
cmc
jp
mov
and
jge
enter
cli
xor
xchg
jbe
add
mov
scas
dec
mov
int
shrb
popf
sbb
pop
sbb
fwait
jb
stos
cmp
daa
push
lea
cmp
ljmp
lods
jo
testl
leave
idivl
and
add
pop
xchg
sbb
and
adc
sbb
push
jp
cld
dec
testl
push
xchg
inc
dec
inc
pop
stc
or
lahf
hlt
mov
loope
ret
adc
jge
and
outsb
mov
mov
and
dec
mov
add
pop
cld
adc
rcrb
xorl
sbb
xchg
outsl
bound
mov
xor
stc
mov
xlat
sti
push
pop
lret
lcall
xlat
repnz
cwtl
imul
je
inc
sub
shll
pop
fldt
sub
cmpsb
xchg
push
mov
and
aaa
or
loop
mov
fcoml
stos
pop
ret
lret
mov
inc
pop
or
lret
repz
shlb
pop
mov
mov
mov
ja
mov
and
outsl
sub
loop
pop
in
and
mov
jo
sbb
pushf
cmp
sub
inc
data16
int3
pop
mov
inc
mov
das
mov
push
inc
ljmp
loop
outsb
dec
sub
cwtl
inc
in
movsl
aam
cld
std
movsl
dec
adcl
add
mov
push
xor
shlb
cmpl
scas
and
adcl
andb
cmpsl
hlt
cld
jnp
test
sbb
addr16
jnp
push
inc
test
xchg
pop
outsb
cmp
cltd
sbb
shrl
pop
test
push
xor
pop
call
pop
into
xchg
aas
das
movsl
mov
in
mov
fbstp
jne
xor
dec
dec
mov
add
popf
in
cmc
test
xchg
jb
or
pop
out
lea
xor
sbb
or
pop
pop
push
dec
pop
sub
std
insb
mov
addr16
push
sub
inc
fsubr
add
dec
test
loop
push
fsubl
sahf
aas
icebp
jg
cmp
cli
pushf
test
jl
outsb
cmp
enter
dec
int3
loop
lods
shrb
push
cmp
mov
mov
in
pop
fwait
aad
xor
rcr
js
jmp
fcoms
pushf
bnd
dec
and
sbb
mov
jne
aaa
divb
jae
mov
add
pop
xchg
push
xor
sbb
or
and
xchg
in
bound
shlb
pop
mov
data16
test
cltd
loop
rcll
test
sbb
pop
loop
mov
in
shlb
mov
gs
bound
inc
xor
inc
xchg
xor
test
mov
das
iret
adc
xchg
xchg
add
or
fsubrl
push
out
jle
jge
jnp
mov
pop
aaa
ret
cmp
mov
xchg
aaa
push
mov
cwtl
repz
stc
dec
and
xlat
lret
fsubl
pop
mov
pop
fildl
xor
push
push
add
pop
mov
fadd
ret
fs
notl
sbb
std
aad
aad
inc
or
dec
mov
push
mov
xor
mov
cmp
out
mov
dec
sbb
and
cld
fcoml
cli
sub
ficomps
inc
ljmp
or
xchg
stos
cmp
mov
sub
dec
rorl
and
jge
gs
adc
pop
in
fldcw
hlt
in
ljmp
or
mov
sub
dec
mov
inc
or
mov
sub
pusha
ja
xchg
dec
js
fwait
adc
test
out
push
jne
cltd
stos
shrb
pop
xchg
out
dec
movsb
clc
popf
int
or
jmp
clc
push
mov
insb
dec
xchg
pop
je
out
dec
fdivrl
scas
and
rol
lods
cmp
loope
push
mov
add
ljmp
bound
push
sahf
jno
inc
fwait
lea
enter
jle
sahf
pop
dec
xchg
cli
addr16
or
add
pop
fs
das
cmp
or
out
push
jbe
xchg
sub
mov
ja
cmp
xlat
enter
cmpb
push
lock
sub
push
outsb
jmp
lcall
cwtl
xchg
push
hlt
jle
pop
mov
mov
inc
jmp
loop
jo
hlt
jge
ja
int
mov
push
cmp
aam
sbb
mov
mov
xchg
push
xchg
stc
cli
sbb
leave
ret
divb
cs
push
mov
es
add
sub
mov
subb
and
movsb
mov
es
stc
dec
push
cmp
mov
aas
dec
mov
pushf
jne
push
loop
jo
xor
xchg
and
push
pop
frstor
or
push
dec
loop
testb
into
movsb
rorl
icebp
in
and
jl
shlb
pop
in
adc
xlat
sub
or
jmp
mov
and
aas
sahf
fmull
jns,pt
add
mov
sbb
adc
ficompl
outsl
adc
imul
shr
adc
xor
pop
jl
xlat
lcall
in
rolb
sub
push
xchg
mov
xor
gs
ss
xchg
lods
aam
ljmp
cmp
fstl
ret
fst
mov
add
dec
jb
pop
xchg
dec
sbb
lea
and
aas
inc
cmp
rol
push
add
dec
adc
cmpsb
mov
cmovb
inc
hlt
mov
stos
addr16
xchg
stos
cld
jb
push
dec
cmp
and
in
pop
clc
insb
or
dec
mov
sub
mov
scas
mov
movsl
push
mov
andl
mov
add
ja
lahf
push
insl
dec
dec
popa
inc
scas
inc
icebp
sbb
je
mov
and
jmp
test
fwait
stc
inc
jecxz
mov
fisttpll
int3
jae
push
inc
sbb
and
in
repz
push
popa
inc
inc
fildll
in
popa
movsb
dec
push
loop
rcl
push
xchg
xchg
mov
sub
jp
xor
sub
mov
jo
mov
jns
loop
mov
popf
fdivl
jmp
lret
sub
jne
xor
repz
fiaddl
in
fsubr
mov
fists
cmp
mov
ss
inc
icebp
mov
nop
push
mov
sub
pushf
mov
jle
fiadds
adc
and
lods
ss
inc
hlt
ljmp
mov
inc
fwait
shrd
cwtl
or
icebp
popa
sub
enter
stc
lods
sub
cs
nop
aaa
pop
loopne
jne
js
loope
scas
outsb
cli
add
lods
inc
jo
sub
mov
inc
sti
push
ret
add
push
jae
xor
popf
xorl
gs
pop
sub
sbbb
dec
cmp
fdivrl
push
dec
lods
sub
add
and
pop
mov
xor
add
insb
aad
dec
sub
or
ret
fsubrs
scas
inc
mov
jg
inc
dec
push
je
add
cld
mov
adcl
mov
sub
sbb
out
fnstenv
loopne
adc
sub
xor
adc
sub
cmp
mov
add
rcll
mov
and
sbb
icebp
mov
lods
or
sar
int
jmp
push
add
mov
int
mov
sahf
and
loope,pn
push
outsl
jmp
sbb
int3
inc
icebp
lods
mov
rolb
inc
ljmp
jb
pop
shrb
cwtl
push
sub
push
rcrl
lock
adc
addr16
xchg
inc
and
lcall
fnstenv
sar
ds
pop
enter
mov
mov
shlb
adc
in
repnz
fcmovu
sti
pop
jl
inc
jmp
xchg
mov
cmp
insb
push
jmp
cmp
in
mov
dec
sbb
adc
mov
and
test
mov
leave
jg
cld
adcb
pop
mov
movsl
mov
add
and
pushf
cmp
jmp
adc
fsubp
mov
mov
icebp
les
xchg
cmp
fsubrp
into
pop
ret
push
push
pop
mov
sub
or
icebp
scas
dec
xor
test
movsb
hlt
sub
cli
test
mov
lods
add
adc
loopne
imul
push
out
lcall
push
in
push
pop
dec
aas
sub
sti
fsubrs
addr16
pop
test
movsb
lods
cmp
fbld
xchg
movsl
xchg
lret
sti
jl
pop
adc
jle
push
insb
jae
mov
cmpsb
int
int3
jb
add
and
fsubl
sub
push
pop
mov
and
popf
inc
cmpsl
fsubr
iret
jle
cmp
into
bnd
rcl
sbb
push
lods
push
andl
lret
shrb
pop
int3
push
ss
cs
frstor
mov
mov
adc
dec
enter
movsb
lods
fistpl
int
push
inc
add
addl
lock
add
mov
movsl
and
mov
add
and
jg
push
es
fsubp
popa
mov
sarl
dec
add
cmp
in
jnp
cs
das
push
divl
test
das
jmp
jge
pop
jns
jae
enter
imul
push
and
ret
lret
jge
imul
jp
cmp
mov
lea
fstpt
or
rcl
fstps
outsb
lods
mov
es
pop
add
cmp
loopne
stos
sub
jecxz
adc
pmaxsw
dec
cmc
and
jmp
and
cs
movsl
adcl
sub
push
push
scas
mov
sub
pop
lods
mov
mov
or
dec
mov
sbb
jge
mov
movsl
sti
xchg
in
jns
shlb
pop
pop
cli
xchg
xor
adc
push
in
int3
bound
adc
ds
or
popf
and
xor
xchg
cmp
je
lods
lret
adc
mov
repz
push
cld
push
leave
jno
andl
lock
sub
and
addr16
rol
jmp
arpl
add
insb
jno
out
push
dec
and
add
nop
loope
xchg
stos
jmp
mov
faddl
inc
jg,pt
nop
test
inc
inc
sub
add
push
xchg
and
std
pop
leave
cs
ficompl
orb
lock
scas
lret
inc
mov
push
ds
adc
cmp
xchg
arpl
xor
mov
cld
xchg
scas
adc
and
sub
jp
mov
insl
sbb
or
lahf
xchg
pop
scas
data16
lods
mov
aam
jo
jae
clc
enter
push
lds
cmp
inc
pop
lods
in
pop
add
sbb
jae
ror
and
fwait
dec
bound
adc
insb
data16
mov
je
sbb
jp
cmp
mov
inc
outsl
test
pop
xlat
add
jg
adc
adc
test
cmp
cli
or
and
push
mov
pusha
sbb
fcompl
inc
inc
sbb
popa
adc
mov
xchg
or
nop
pop
mov
cwtl
jno
xchg
push
pop
dec
imul
imul
fstps
shll
xor
hlt
dec
imul
test
mov
dec
add
cmp
js
cmpsl
mov
and
sub
dec
pop
loopne
ret
gs
sub
push
xchg
xor
cmp
xchg
cwtl
push
push
scas
out
lods
xor
fsubrs
and
arpl
lret
inc
adc
insl
inc
lcall
jno
adc
dec
enter
push
mulb
dec
fcoms
add
push
popf
pushf
mov
jbe
and
icebp
rcl
lock
jo
xor
mov
push
push
pop
test
stos
pusha
sti
int
fcom
cli
jmp
jb
cmp
pop
test
sub
das
pop
xchg
adc
pop
pop
mov
sub
insb
repnz
cltd
pushf
enter
aad
mov
in
mov
fbstp
jl
xor
cmpsb
jb
dec
jns
pop
aas
and
fwait
lahf
enter
jecxz
nop
popa
xor
jg
insb
cmp
pop
cmpsb
mov
fwait
xorb
push
xor
popa
add
std
loop
mov
jae
fidivl
xchg
inc
pop
mov
sarl
fs
clc
pop
add
in
push
scas
fsts
mov
pop
xchg
hlt
xchg
mov
mov
push
outsb
cltd
or
inc
in
inc
push
xchg
sbb
push
outsb
repnz
les
jo
jl
adc
enter
sbb
dec
dec
test
push
xor
inc
cmp
dec
stc
stos
dec
data16
outsb
pop
dec
and
mov
mov
xchg
inc
and
rcrl
out
cmc
aad
fisttpll
in
jle
lret
movsl
mov
pop
sti
mov
sahf
mov
xchg
sub
popa
jno
adc
push
fbld
xchg
aad
or
popf
mov
pop
imul
mov
int
loopne
sbb
insl
loop
push
mov
in
movsb
mov
xor
mov
adc
mov
bound
loope
or
pop
in
push
or
cmp
js
sbb
icebp
rcrl
push
xor
aaa
jle
mov
push
js
jbe
les
imul
call
mov
dec
in
into
imul
mov
push
push
mov
adc
pop
scas
fimull
xchg
insb
mov
cli
mov
arpl
sbb
loop
jp
out
mov
fldt
rclb
nop
cltd
lods
mov
lock
insl
mov
std
push
sbb
cmpsl
jp
dec
outsl
jo
mov
mov
mov
dec
lock
shrb
out
enter
enter
mov
das
push
pop
pop
enter
mov
mov
push
pop
call
cltd
rclb
xchg
mov
call
data16
dec
sahf
lea
popf
fwait
mov
into
push
or
add
int
fstps
stos
jg
mov
jmp
es
push
mov
mov
shr
bound
push
adc
dec
lret
cmpb
fs
lea
mov
sti
xlat
pop
mov
out
xorb
aam
bound
std
lock
mov
aas
jae
push
lret
mov
inc
orl
in
movsb
push
add
xor
inc
pop
add
scas
push
sub
pop
pop
in
and
pop
pusha
loop
mov
xchg
add
int3
jno
mov
push
ja
inc
sbb
je
jns
sub
stos
jle
mov
hlt
jae
test
add
and
dec
popa
int
push
cmp
scas
sbb
stos
lods
lret
sub
flds
loope
jns
push
icebp
loopne
push
cmpsl
jle
pop
test
mov
pop
rclb
inc
ror
test
xchg
out
sti
sub
mov
push
xchg
jmp
adc
std
insb
and
xchg
xlat
adc
roll
adc
mov
enter
fwait
loopne
mov
out
mov
rcrl
push
xor
sub
gs
fsubs
sub
mov
popa
out
jmp
aas
xchg
push
xor
cmc
add
jl
enter
add
test
jecxz
inc
sarl
inc
ja
xchg
rorl
jnp
sbb
lock
scas
out
fimuls
mov
jle
lods
je
sub
xor
shlb
jae
and
mov
lahf
cmp
insl
stc
jge
push
popa
mov
xchg
sub
bound
xlat
xor
mov
push
mov
pop
xor
popfw
xlat
sub
mov
sub
outsb
mulb
pop
sub
add
arpl
mov
scas
bound
jb
and
sti
call
movsl
iret
xchg
pushf
inc
test
leave
adc
adc
jno
jns
sbb
test
mov
sahf
in
and
mov
adc
fdivs
sbb
push
arpl
xlat
outsb
bound
sub
mov
test
shrl
jg
dec
sbb
mov
sbb
jnp
into
rol
ret
mov
sbb
repnz
pop
xchg
or
jb
sbb
mov
pushf
ja
adc
sbb
sub
fsubl
inc
jle
inc
mov
sub
push
pop
push
loop
xor
hlt
imul
pop
lea
bound
sti
scas
push
and
pop
loopne
lret
jl
mov
mov
loop
pop
cmpsb
xor
lret
mov
adc
popf
jno
jo
pop
int3
sti
mov
xchg
in
pop
sub
sbb
call
lds
sub
int
pop
mov
out
jmp
jo
push
mov
icebp
adc
dec
xchg
xorl
jno
sub
adc
jg
fimuls
push
rcr
lahf
pusha
mov
rolb
fists
xchg
xchg
fimull
std
push
sbb
fnclex
rclb
stos
mov
stc
and
mov
mov
pusha
or
adc
dec
adc
or
cmp
lcall
faddl
inc
adc
and
shlb
pushw
pop
jnp
mov
and
nop
adc
cli
sbb
and
sub
lret
clc
lret
sub
sbb
jle
aaa
daa
test
mov
rcrb
addr16
cs
mov
sbb
adc
pusha
xchg
data16
and
pop
pop
jne
jno
test
out
cmp
mov
enter
add
aam
pop
jae
push
sub
pop
mov
cs
fisubl
dec
push
xchg
rcr
negb
inc
push
imul
roll
pop
aaa
test
sub
test
inc
in
sbb
call
jbe
addr16
mov
int3
inc
pop
sbb
fidivrs
mov
repnz
jno
dec
jno
roll
pop
stc
push
leave
or
lret
xor
addr16
xchg
adc
pusha
stos
xchg
sbb
pop
push
xchg
into
cltd
lods
push
fsubrs
iret
inc
sbb
pop
shlb
push
mov
or
roll
pop
ds
push
or
pop
pop
fmul
pop
outsl
sbb
jg
inc
pushf
fstps
mov
cld
mov
mov
sub
insl
lock
inc
mov
mov
std
scas
into
push
je
sub
in
pop
pop
ret
rorl
shlb
rorb
xchg
in
scas
aas
pop
fst
adc
sbbl
leave
dec
push
loopne
dec
div
xchg
xchg
test
mov
loop
sahf
add
pop
notb
pop
lcall
ret
or
adc
jp
push
ja
in
dec
jns
shlb
xchg
dec
sbb
and
or
jle
scas
aam
cmpsb
insb
or
inc
pop
push
data16
das
aad
sbb
lret
pop
pop
stos
daa
dec
adc
inc
xchg
test
xchg
push
js
insb
mov
push
nop
xchg
ljmp
mov
imul
bound
out
cmp
out
xchg
or
repz
add
and
cmpsl
inc
sar
push
pop
adc
sti
add
nop
cmpsl
or
cmp
adc
sub
xor
test
inc
pop
xchg
stc
fildl
mov
pop
int3
movb
jae
daa
and
in
dec
lock
push
mov
out
cmpl
aad
mov
insl
lret
cmp
imul
cmp
xchg
lcall
push
push
jmp
pop
cwtl
cmp
mov
adc
jnp
and
lret
xor
xchg
and
pop
movsl
mov
adcl
out
insb
mov
adc
and
jo
sub
adc
sbb
in
lahf
es
cmc
inc
icebp
inc
and
imul
adc
rcrl
fdivl
push
cld
add
imul
outsl
cld
test
ds
popa
mov
mov
add
xchg
add
or
cmp
das
rolb
jb
andl
mov
xor
adc
insb
adc
ret
or
cmc
je
lods
jmp
int
or
sub
mov
mov
xor
pusha
and
push
in
out
sub
mov
jb
cltd
rolb
shrl
sbb
ljmp
insb
lods
push
cmp
iret
insb
fdivl
iret
mov
push
sub
mov
inc
lods
or
inc
mov
pop
ficomps
sub
push
add
mov
or
push
or
dec
loopne
xchg
enter
push
out
push
pop
xor
push
sub
mov
rcrl
pop
sub
xchg
mov
adc
xchg
jb
shll
int3
fisubrl
sub
dec
mov
adc
xlat
inc
add
fwait
mov
frstor
inc
insb
out
fisubrl
lcall
sub
xlat
nop
pop
fildll
orb
cld
enter
adc
dec
les
cmp
lock
dec
sub
call
mov
repz
sbb
hlt
paddusw
adc
pop
pop
add
cmpsb
dec
adc
mov
push
push
pushf
jo
add
shlb
cmpsl
push
lock
cs
sub
push
push
or
int
pop
in
push
push
inc
ret
push
js
mov
push
mov
xor
imul
ret
loop
or
and
xchg
in
inc
add
dec
ja
push
test
push
xchg
fisubrs
push
add
int
xchg
rolb
mov
inc
test
out
notl
cmp
xor
lods
mov
fstl
push
push
subl
dec
cwtl
mov
adc
or
fidivl
lods
pop
out
inc
xor
pop
and
pop
adc
fwait
sarb
pop
frstor
mov
push
or
and
jb
insl
aaa
sbb
xchg
jge
aad
sbb
cltd
popa
or
call
dec
fisttpl
lret
push
stos
push
dec
pop
dec
inc
jle
movsb
and
int
inc
push
rep
fisttps
iret
pop
cs
push
cmp
add
cmc
mov
lret
jns
xchg
leave
fstps
into
dec
adc
bound
adc
popf
fidivl
mov
xchg
outsl
xor
out
stos
stos
xor
push
aaa
or
int
push
cmp
mov
bound
jg
mov
cli
or
pop
jne
repnz
pop
subb
outsl
cmpsb
cltd
insl
lahf
bound
mov
xor
jp
fmulp
rolb
pusha
loopne
out
rcrl
decl
pushf
in
mov
imul
cmp
shll
daa
cmp
jne
aaa
mov
adc
cs
and
and
arpl
add
sub
shl
lods
cmc
jno
xor
jnp
jl
testl
outsb
test
out
sub
fcomps
movsl
cmpsb
enter
inc
icebp
sub
lret
fidivl
inc
addl
lods
ljmp
sub
roll
xchg
das
aam
sub
inc
pop
rorb
jo
adc
sub
enter
xor
jbe
xor
outsb
ja
rcll
rcll
sar
xchg
sahf
mov
lret
jp
xlat
cmp
fdivr
xchg
cmp
in
push
ret
jbe
in
inc
adc
imul
cmpsl
cs
fnstsw
push
mov
push
pop
push
inc
cli
push
or
fidivrs
jne
ret
ds
lods
ret
pop
out
pop
test
call
jbe
inc
stc
dec
lahf
inc
mov
pop
add
add
cli
or
xlat
loope
sub
shl
pop
xor
jo
mull
mov
cltd
mull
cld
cwtl
push
outsl
notl
addr16
mov
icebp
fwait
add
scas
xlat
add
or
pusha
sub
fsubl
xchg
adc
hlt
cli
pop
mov
gs
push
aad
xchg
std
jg
cmp
js
rolb
dec
lret
xor
pop
loope
sbb
fldl
gs
dec
cmp
push
jo
arpl
out
repz
xchg
inc
outsl
xchg
int
test
inc
sbb
cmp
jae
cmpl
das
sub
inc
std
in
inc
fdivrl
xor
sbb
arpl
push
add
mov
sub
adc
or
mov
jge
popf
push
push
mov
lea
sbb
or
and
out
int3
mov
pop
add
scas
jne
adc
mov
in
xchg
and
push
cmp
adc
or
outsl
jb
add
cmc
mov
pop
mul
cmp
mov
into
push
enter
sub
jmp
insb
iret
add
cmp
pop
scas
clc
cmp
ret
push
jno
cmpsb
je
mov
sti
jnp
out
xchg
sbb
dec
out
leave
mov
mov
mov
jno
push
pop
fmulp
mov
test
jp
pusha
mov
out
push
cmp
dec
jecxz
dec
adc
les
pop
pushf
into
pxor
add
std
push
mov
imul
test
cmc
aas
xlat
push
cmp
ljmp
ja
mov
mov
xchg
and
les
int
mov
inc
cmp
sub
and
adc
mov
mov
cwtl
popa
lods
repnz
out
ja
popa
pushf
arpl
sbb
je
xor
inc
sar
sub
sub
push
loop
test
sbb
lcall
inc
sbb
out
out
inc
xchg
mov
inc
hlt
int
pop
jle
push
or
xchg
cmp
adc
cmp
jne
imul
cld
push
in
sub
xor
popa
jp
add
fadd
out
pop
mov
std
je
pushf
lahf
ds
pop
lea
push
bound
sub
scas
ret
inc
xchg
jge
imul
mov
mov
repnz
mov
aaa
popa
ja
xor
jnp
sbb
movsb
xor
or
push
mov
hlt
push
popl
stos
inc
cltd
out
jmp
scas
fstps
pop
jo
or
arpl
insb
lods
sub
xchg
or
and
mov
imul
cmp
fwait
into
dec
lcall
xor
xlat
push
ljmp
test
jge
add
scas
mov
int3
pop
push
push
mov
mov
mov
push
mov
cmp
jo
mov
xor
nop
add
push
or
push
or
ret
test
subb
out
gs
xchg
arpl
pop
pop
lahf
xchg
push
inc
pushf
sbb
lods
mov
insl
sbb
test
jge
jne
bound
sub
cmpb
and
sub
xor
daa
mov
jnp
xchg
inc
dec
loop
rorb
test
xchg
jo
cs
push
loop
pop
pop
add
pop
dec
sub
dec
mov
mov
int3
xor
dec
shlb
imul
dec
pop
push
std
aaa
xor
insb
xchg
xor
sarb
xchg
aad
mov
hlt
icebp
or
jbe
test
cmp
jle
loopne
add
or
mov
pop
fs
push
addr16
les
fmull
push
add
mov
addl
mov
sub
cmp
ds
sbb
jbe
mov
push
in
orl
cmc
xchg
jo
pop
bound
push
pop
clc
mov
jnp
out
out
aas
fwait
mov
mov
and
sbb
test
out
fs
mov
and
push
ret
lods
xlat
adc
lea
pop
cltd
sbb
mov
push
and
std
icebp
repz
ret
push
enter
in
stc
fsubl
inc
pop
mov
xchg
movb
repz
mov
jno
mov
mov
mov
mov
sahf
push
sbb
jp
in
jle
sub
sub
push
ja
test
and
or
xchg
arpl
and
jl
push
test
jno
jmp
icebp
adc
stc
push
sub
mov
mov
fnstsw
mov
push
dec
push
push
ret
xchg
mov
pop
cs
or
rcr
fcomip
xchg
sbb
mov
mov
pusha
pop
fsubrl
and
fmull
xor
xchg
mov
addb
cmp
lret
outsb
call
mov
ret
movsb
stos
rcl
inc
mov
sub
sub
aad
out
cmc
dec
inc
push
test
or
sub
and
jnp
iret
mov
xor
fsubp
mov
push
aam
cmp
and
pop
stos
mov
pop
shlb
xor
fwait
dec
gs
fcomps
pop
js
outsb
or
jbe
dec
sbb
popf
mov
and
je
sub
loop
lret
jne
push
sub
or
mov
add
xlat
dec
mov
mov
push
aaa
jbe
xor
es
sbb
arpl
add
cltd
cmp
lret
out
jl
stos
mov
or
insl
xor
stc
and
clc
shrb
cmp
call
mov
xchg
out
addr16
std
cmc
sbb
push
and
jne
adc
mov
mov
lret
es
and
xor
mov
push
push
lea
sub
fsubrs
xchg
lds
nop
hlt
push
fdivrl
hlt
jecxz
add
sub
mov
cmpsb
out
callw
pop
fwait
sahf
add
push
mov
push
loopne
add
inc
xchg
push
xchg
sub
stos
sahf
imul
adc
xor
dec
sti
add
popa
pusha
std
repnz
jo
es
cmpsb
and
push
xor
push
jb
mov
mov
mov
int3
jecxz
icebp
xchg
fisubrs
jnp
ret
repnz
sti
mov
push
scas
xchg
sti
cmp
sub
mov
lods
sbb
sub
pop
push
rcl
stos
scas
rcrl
lcall
inc
mov
jbe
outsb
loop
cmp
clc
ja
adc
fcmovnbe
loopne
mov
fidivs
js
int
das
je
out
pop
bound
xchg
into
lret
adc
out
push
sbbb
xchg
pop
std
nop
mov
mov
es
lret
iret
push
or
adc
xchg
ret
mov
popa
call
mov
ljmp
pop
fildl
push
movsl
lods
into
jg
cmc
pusha
inc
or
mov
cltd
pusha
inc
cmp
mov
repnz
repnz
nop
inc
stos
ja
xchg
movsl
jl
aad
scas
dec
cltd
imul
sub
cmp
nop
jo
mov
add
leave
movsb
enter
call
fst
xchg
push
mov
inc
jns
jle
imul
inc
inc
test
and
xchg
mov
stc
cli
ss
out
std
pop
jo
imul
cld
jge
lahf
popf
xchg
push
lods
adc
outsb
mov
shll
popf
sbb
and
xor
inc
and
bound
icebp
push
cwtl
call
jmp
cmpsb
and
or
ret
dec
jbe
out
xchg
pop
fadd
mov
notl
jl
sti
subb
mov
pop
mov
scas
xchg
ds
out
movsb
les
into
and
push
push
pop
jnp
subl
jg
cmpsb
sahf
fdivl
cwtl
or
sbb
dec
cmp
in
mov
xchg
adc
push
lret
add
nop
sub
mov
push
inc
out
mov
sub
xorb
leave
ljmp
inc
std
push
arpl
or
stos
or
in
data16
adcb
outsb
cwtl
push
jle
mov
or
mov
adc
fcmovnb
xchg
imul
bound
pop
add
push
imul
rclb
xchg
test
movsl
pop
mov
or
mov
mov
in
mov
rcl
icebp
inc
dec
arpl
mov
aam
arpl
lea
pop
dec
push
xlat
xor
call
cld
in
outsl
cld
dec
pop
es
cmpsl
subl
iret
mov
loopne
out
or
add
mov
push
pop
xchg
in
push
sub
fistpl
and
mov
fs
movsb
out
pushf
insl
lret
mov
popf
aam
adc
add
fisttpll
and
mov
addr16
jns
push
pop
fsubl
mov
pop
nop
data16
pop
jp
cld
out
jbe
push
faddl
mov
mov
cli
mov
jmp
sub
xchg
icebp
push
rcrl
loope
mov
push
fcoms
pop
and
inc
iret
cwtl
loope
xchg
xor
cs
ljmp
inc
cmp
push
in
sti
lcall
hlt
sbb
or
call
and
pop
dec
jmp
add
sti
test
push
jb
mov
fistpl
pop
in
or
jo
mov
push
inc
jg
int3
pop
into
push
xor
xchg
jecxz
add
push
mov
popa
and
adc
mov
mov
xor
pop
push
scas
fsubl
dec
cs
pop
clc
jbe
mov
lock
shlb
mov
scas
sub
jl
and
or
dec
rolb
outsb
sarl
and
dec
xchg
or
fldcw
mov
jb
rorb
mov
push
ficoms
inc
inc
imul
or
push
mov
jl
lahf
push
addb
sti
ret
gs
cmpsl
and
jp
or
or
js
in
dec
pop
int3
and
insl
leave
pop
mov
imul
sub
add
inc
push
in
lret
and
test
mov
movsl
data16
in
mov
jae
jle
cmpsb
cmpsl
stos
sarl
aam
out
lcall
and
jge
aad
xchg
test
data16
sbb
pushf
arpl
leave
into
aam
and
popa
push
leave
inc
pop
dec
into
xor
sub
nop
pop
stc
out
push
lods
dec
sbb
xchg
mov
shll
pop
in
cltd
shrl
cmpsl
dec
sbb
stc
fldt
loope
fistpll
xchg
shr
mov
idivl
outsl
jbe
mov
sub
cs
jns
rclb
sbb
push
mov
xchg
cmp
pop
adc
les
sub
out
xchg
fwait
pop
adc
xchg
lret
fisubrs
test
fisubl
imul
pop
add
push
jo
popa
mov
push
bound
mov
jl
out
int
pop
fnstcw
bound
arpl
fcmovbe
add
scas
aaa
add
inc
adcb
iret
dec
mov
int3
imul
inc
sbb
xchg
ja
pop
pop
testl
data16
cli
adc
xchg
fs
xor
rcl
adc
pop
xchg
jecxz
push
js
idiv
sarb
mov
mov
add
adc
icebp
or
sti
mov
sub
scas
add
inc
jmp
dec
fnstsw
iret
inc
int3
jg
fdivrp
stc
push
mov
mov
test
inc
pop
call
cltd
aaa
add
setns
push
push
push
mov
test
jae
inc
push
ret
gs
scas
loop
push
xor
test
dec
and
jae
sub
lret
cld
in
std
dec
mov
stos
movsb
push
fiaddl
sub
ja
testb
hlt
fildl
nop
add
jae
cmp
sub
movsl
out
cmpsb
dec
jae
xchg
jne
sub
cwtl
movsl
cmp
cmp
stos
js
sub
jmp
push
mov
ficompl
fldlg2
fdivs
mov
jl
adc
mov
jno
cmpsl
mov
mov
push
dec
in
idiv
vcmpunord_spd
sbb
inc
ljmp
push
ficoml
lods
sbbb
cmp
dec
popa
xchg
xchg
sub
outsb
aas
sub
outsl
sub
ret
inc
test
jno
loop
fwait
lahf
ror
sub
mov
in
mov
gs
jno
cmpsl
sbbb
cld
repnz
scas
jbe
add
mov
xchg
xor
sbb
mov
adc
mov
jmp
push
mov
lock
xor
pushf
xor
mov
push
in
xchg
mov
icebp
xor
sbbl
lods
xor
xchg
cmp
in
aam
jmp
pushf
pop
aam
mov
fcmove
shlb
in
and
mov
cmp
adc
clc
or
sbb
out
nop
pop
shrl
stc
icebp
movsb
push
or
jecxz
push
cmpsb
sahf
cld
inc
push
adc
push
orl
negb
lret
xchg
add
out
imul
pop
loopne
shrl
push
cmp
xchg
xchg
fs
push
or
es
sbb
dec
aam
enter
xchg
rol
mov
test
insb
inc
pop
mov
xor
and
mov
aas
insl
rcrl
out
push
or
mov
xchg
mov
jae
sbb
mov
mov
xor
sbb
orb
cmc
jne
loopne
mov
ljmp
add
add
or
dec
hlt
imul
insl
fadds
push
loopne
pop
mov
pop
cwtl
and
fisttpll
incl
lahf
dec
jmp
out
hlt
and
test
and
insb
or
mov
call
sub
push
insl
and
repz
jp
mov
mov
popa
in
inc
nop
cmp
adc
popf
mov
dec
and
movsb
add
movsb
dec
jne
jno
xor
jle
mov
jmp
xor
dec
or
jo
cmp
jle
lea
mov
sub
dec
repz
les
std
or
lods
dec
fimuls
mov
insl
mov
int
shlb
ret
pop
jg
inc
les
mov
int
shlb
lahf
in
test
add
or
pop
push
lret
cs
inc
out
push
sbb
add
cmc
inc
out
xchg
adc
rclb
and
cmc
adcl
call
ret
loop
push
adc
shrb
push
mov
xchg
pop
xchg
addr16
daa
ja
faddl
out
sub
int
inc
arpl
data16
mov
pushf
adc
or
cmc
xor
dec
inc
call
dec
sub
jb
fsubrl
sbb
test
sti
add
mov
xchg
adcl
fsubp
dec
and
rcr
push
push
mov
add
sbbb
movsb
mov
data16
js
pushf
jp,pn
xchg
mov
out
mov
ss
and
pop
cmp
dec
cltd
sbb
out
sbb
pushf
aad
out
rcrl
stos
push
cwtl
mov
push
cwtl
mov
pusha
ret
dec
es
out
lret
out
push
ss
push
xchg
lods
cmpsl
pushf
sbb
enter
xchg
xor
ret
mov
das
sbb
xor
arpl
fimull
int3
out
in
fsubrp
aad
pop
stos
and
pop
mov
dec
push
shl
jb
xchg
jbe
and
push
adc
movsb
push
pop
xchg
std
stos
xchg
inc
popa
sbb
xchg
ss
adc
push
fstps
cmp
sbb
fimull
icebp
in
or
mov
jmp
pop
inc
mov
dec
mov
lcall
sbb
je
adc
or
idivb
mov
cmp
shlb
xor
icebp
push
sub
and
sub
stc
lds
cmpsl
push
sti
popf
pop
enter
int3
ds
pop
loopne
mov
mov
pop
push
cltd
leave
clc
movsb
mov
push
sub
pop
pop
adc
ss
xor
xchg
ficoms
mov
pop
repnz
aad
dec
inc
rcl
cmp
into
movb
mov
mov
inc
test
sub
leave
xchg
idiv
rorl
out
in
scas
scas
mov
or
outsb
lret
sub
int3
xor
std
pop
xbegin
scas
push
cmp
in
and
hlt
push
fcmovnbe
in
scas
pushf
cs
out
xchg
into
pop
mov
push
hlt
cmp
jno
jp
mov
pop
shr
fsubr
xchg
rclb
dec
adc
sub
out
iret
xchg
pop
les
in
addr16
jp
xchg
hlt
scas
fbstp
push
sub
call
popf
adcb
mov
sarb
jae
aas
mov
fidivrl
cmp
mov
fsubs
xchg
adc
adc
jo
cli
pop
icebp
test
push
fdivr
xor
rcr
lock
pushf
mov
test
test
mov
cmpsl
repnz
fwait
mov
or
ficompl
mov
ret
lock
ret
ds
rorb
sub
loop
inc
in
mov
rclb
push
out
jo
dec
xchg
push
push
movsl
xchg
inc
adc
pushf
fldt
cmp
scas
adc
cwtl
add
sub
xlat
fsubrl
sti
jp
adc
cmpsb
sub
jbe
push
popf
outsl
iret
pop
sub
add
movl
sbb
dec
fstl
add
mov
mov
pop
xor
ja
setp
iret
pop
sub
shlb
cmp
int3
dec
out
mov
sub
jmp
ds
sub
popf
or
push
test
lahf
mov
cmp
ja
stc
or
dec
or
mov
or
lods
nop
sbbl
push
push
jno
add
in
call
out
mov
fimull
js
into
shrb
in
push
jmp
push
add
pop
enter
adc
sbb
in
mov
push
ja
shrb
sub
mov
cmp
gs
scas
lods
arpl
push
arpl
cmp
movsb
mov
jno
ljmp
cmp
insl
scas
out
shlb
imul
hlt
mov
bound
mov
mov
push
lods
into
push
maskmovq
negl
int3
cmp
in
scas
pop
loope
in
lods
mov
fcomip
xor
leave
popa
mov
push
mov
int3
mov
ljmp
into
adc
into
pop
xor
insb
test
loop
push
fstps
cmp
js
fadds
pop
xchg
push
loopne
jo
jle
ret
sti
std
fimull
mov
or
faddp
cmpl
fidivl
mov
movsl
test
and
jne
push
scas
lret
and
or
rcrb
popf
mov
sbb
sahf
pop
inc
xchg
mov
mov
jo
fwait
jns
push
gs
push
outsl
lock
clc
mov
cli
jno
push
lods
arpl
outsb
jae
lods
sbb
ficompl
out
xor
fbstp
int3
and
mov
cld
fwait
adc
sbb
aas
inc
mov
cmc
adc
xor
push
sbb
enter
shll
mov
mov
ret
rcrl
roll
and
aam
jnp
mov
outsl
xor
pop
in
sub
pop
fwait
inc
adc
repz
add
pop
imul
outsb
dec
inc
pop
xchg
pop
dec
insb
mov
cld
pusha
mov
lock
insb
and
push
outsb
icebp
std
xor
mov
orb
sbb
insl
mov
fdivrl
sub
pushf
arpl
addr16
lret
mov
gs
inc
or
inc
pop
adc
lods
scas
decb
cld
sbb
movsl
ret
add
xchg
cmpsb
dec
push
in
cmc
add
lods
lock
and
mov
xor
outsl
fwait
in
sti
lds
push
jae
add
sub
sub
lods
mov
pushf
sub
xchg
mov
repnz
xchg
lahf
nop
adc
inc
stc
mov
stos
xor
lock
xor
sbb
gs
repz
jmp
outsb
stos
and
mov
addr16
cmp
int3
rorl
jnp
notb
add
xchg
popa
push
inc
adc
xchg
and
hlt
shll
xchg
std
stos
int3
dec
shrl
fisubrs
mov
loopne
add
cs
ret
in
jne
jbe
jnp
inc
lahf
movsb
mov
dec
aas
repz
jb
test
and
dec
fucomi
jecxz
mov
pusha
cmovg
sub
jnp
icebp
or
mov
lock
xor
jl
mov
jnp
and
mov
sbb
xchg
and
psubusb
inc
cltd
or
lock
jmp
mov
int
dec
enter
xchg
das
movsl
mov
sub
xchg
dec
xor
fstpl
sub
adc
cwtl
lds
lahf
sbb
pop
cmp
outsb
pop
insb
mov
jb
jb
mov
sahf
repnz
outsb
aas
and
pop
sub
out
adc
fimuls
inc
jecxz
aad
inc
or
or
jg
adc
push
aam
popf
mov
xor
mov
push
pop
daa
test
stos
xchg
add
or
lret
xlat
int3
adc
movsl
repnz
nop
sbb
jmp
into
repz
adcb
mov
xchg
adc
and
pop
enter
inc
cwtl
sahf
data16
inc
or
icebp
jo
cli
cmpsl
aas
jmp
add
jl
testl
jne
sub
sub
cmp
loope
notl
sti
mov
xor
inc
mov
adc
adc
mov
outsb
inc
fimull
scas
push
mov
dec
adc
sti
shrl
push
scas
pop
mov
roll
sub
sahf
xor
rcrl
imul
inc
pop
jb
mov
sbb
hlt
cld
xor
cli
mov
pop
arpl
push
insb
mov
jbe
push
shl
lods
aaa
stos
cli
loopne
movsb
aam
imul
mov
dec
lods
into
pop
aam
xor
push
pushf
shrb
xchg
or
pop
push
and
pop
lock
dec
inc
faddl
jl
pushf
cld
and
cmp
out
ret
adc
dec
orb
and
ja
push
mov
xorb
sarl
dec
fistpll
insb
ret
fdivs
mov
mov
dec
xchg
roll
pop
xchg
lds
xchg
popf
jae
rcrl
push
push
xchg
je
fildl
mov
movsl
ss
mov
dec
aam
cld
sub
in
mov
jmp
cwtl
scas
jbe
andl
fucom
xchg
adc
out
sarl
xlat
loopne
gs
and
sarl
xchg
push
cmp
jg
and
insl
arpl
mov
pusha
or
js
sub
and
pop
mov
dec
cmp
adc
lods
stos
es
aam
lods
pop
add
sbb
jge
shlb
pop
mov
fists
jne
aam
push
or
pop
mov
lret
loope
das
pop
mov
fucomip
dec
cltd
or
test
aam
ljmp
rcrb
sub
jnp
inc
daa
mov
cmp
pop
adc
nop
pop
push
mov
addr16
or
jmp
push
int3
xchg
sbb
sub
push
cmc
roll
add
xchg
fildll
lock
push
aad
and
or
ljmp
outsb
add
into
fisubs
lock
jae
mov
cli
add
inc
mov
lret
out
outsb
clc
or
adc
xchg
mov
jb
adcl
rorb
mov
insb
psrad
cmp
inc
mov
mov
nop
negb
jno
mov
xchg
add
push
clc
pop
andl
push
xchg
rcr
dec
movsl
push
inc
pmaxsw
test
in
popf
mov
push
inc
sub
jg
dec
gs
dec
aas
xor
aad
inc
test
js
xchg
inc
nop
mov
dec
or
enter
es
add
dec
pop
sbb
push
insb
addb
adc
sub
ss
lods
pop
notb
push
jne
inc
pop
sbb
xchg
mov
fmul
fdivl
jns
mov
shrb
lret
faddl
jb
push
fldt
fdivrp
mov
mov
mov
xchg
pop
pop
aas
lea
leave
bound
pop
lcall
xchg
pop
mov
pop
sub
popf
xchg
sarl
jne
sbb
mov
cwtl
enter
inc
pop
popf
pop
out
shll
cmpsb
into
add
push
cmp
mov
xchg
mov
pushf
mov
into
cmp
out
fiadds
mov
jne
addr16
push
ret
jg
sub
pop
mov
or
jl
xchg
jbe
fdivs
jp
cmpsl
or
xchg
and
cmp
dec
shll
negl
pop
mov
mov
mov
sub
pop
mov
into
jno
insb
loope
jns
ljmp
ret
xchg
jbe
jno
jb
rorl
pop
xor
cli
in
mov
inc
and
lcall
mov
sub
fnsave
mov
mov
dec
aaa
ficompl
mov
test
pushf
std
jns
shlb
in
or
mov
cmp
push
jmp
and
mov
aad
neg
js
inc
cmpsb
xchg
push
inc
push
jnp
clc
sbb
dec
inc
push
dec
rcrl
shrb
fs
shl
test
push
push
xor
add
movsb
scas
mov
jg
movsb
into
push
fidivrs
insl
mov
adc
push
rorl
mov
sub
daa
das
sub
cli
enter
mov
mov
testl
in
aaa
leave
inc
lods
aas
inc
xor
sbb
int3
push
pop
test
das
popf
adcl
mov
push
add
pop
sub
jmp
jmp
sbb
push
loop
in
add
repnz
mov
pop
lea
fstpl
jl
daa
push
and
sahf
lret
scas
mov
pop
jl
sub
lock
cmc
xor
xor
aaa
and
ffree
iret
cmpsl
ljmp
and
cmc
aam
adc
imull
mov
inc
cmp
xor
xor
popf
add
fisttps
adcl
cli
mov
lahf
add
cmc
xchg
pop
mov
fcmovne
cmc
xchg
test
cld
cltd
cmp
aaa
in
sahf
test
adc
scas
adc
sub
mov
cmp
or
lods
pop
mov
adc
pop
mov
test
sbb
lods
jne
xchg
mov
jmp
push
cmc
gs
aad
arpl
pop
scas
and
lock
pop
mov
mov
sti
mov
mov
jmp
daa
fs
rolb
and
in
xor
pop
loopne
sub
ss
or
movsl
xor
test
xchg
ljmp
or
int3
lahf
jnp
daa
mov
les
mov
scas
inc
or
cmp
sahf
ficoml
repnz
popf
popa
add
shrl
push
pop
setb
mov
xor
xchg
mov
aaa
mov
std
mov
jp
mov
inc
into
pushf
sahf
mov
pop
adc
nop
scas
cmp
push
jecxz
ds
mov
pop
cmp
fs
lret
sbb
or
int3
sbb
push
popl
jo
aam
lods
mov
jns
fsubl
mov
xor
repnz
aaa
adcl
out
int3
jno
sub
adcl
or
cltd
mov
outsl
fwait
mov
and
xchg
push
fsubrl
ss
lea
dec
aam
scas
stc
fcmovnbe
in
jnp
xchg
lea
daa
fldl
pop
mov
fisttpll
in
jge
js
in
bound
mov
mov
mov
int
sub
movsb
fs
sti
lods
mov
inc
ljmp
xchg
push
fwait
inc
insl
inc
and
mov
in
ljmp
xchg
pushf
test
sub
jbe
scas
push
aad
dec
add
icebp
movsl
out
ljmp
faddl
cmp
ror
leave
pushf
jo
mov
das
stc
jnp,pn
lods
cmpsb
push
shrb
lret
movsb
test
xor
pushf
enter
arpl
sbb
push
rcrb
cli
jne
cmp
mov
test
and
rolb
in
mov
sub
addr16
stos
xchg
cmpsb
sahf
and
ja
dec
loope
or
jecxz
pop
imul
mov
push
xchg
cs
imul
divl
mov
fisubs
push
push
enter
xor
addr16
movsb
and
sbb
mov
or
pushf
cs
xor
fisubrs
lcall
rolb
and
fs
repnz
fnsave
xchg
insb
mov
insl
scas
dec
xchg
andl
sub
rol
fisubrs
push
jno
test
push
sub
and
rorl
out
and
std
test
xchg
mov
sbb
mov
jo
movsb
xchg
pushf
or
push
pop
xchg
pop
out
jle
xchg
in
or
cwtl
xor
jns
adc
ja
icebp
inc
mov
sahf
arpl
lods
or
in
add
jle
push
iret
stc
enter
lcall
adc
mov
imul
xchg
push
fsubrs
dec
cltd
jne
jne
sbb
xor
mov
jns
jnp
insb
outsb
pop
clc
outsb
push
cmp
loope
adc
mov
cmp
out
stc
loope
inc
movsb
in
cmpsb
push
push
dec
cmp
into
adc
bound
push
dec
test
mull
push
loopne
mov
xor
rol
out
inc
rcrb
mov
jmp
mov
and
int3
mov
dec
mov
and
inc
fiaddl
andl
insb
aam
std
mov
xlat
out
jl
xor
stc
xchg
adc
pop
push
in
loopne
pop
out
push
jp
ret
popa
cs
data16
loopne
xchg
lods
fsub
xchg
scas
xchg
into
or
mov
test
dec
ss
shlb
jl
mov
inc
cmpsl
pusha
es
xor
ror
daa
cwtl
popf
sbb
mov
or
sbb
xor
ja
or
dec
cmp
pop
or
push
add
mov
lahf
xlat
inc
aas
mov
test
xchg
fidivrl
cmpsb
cli
loope
sub
fidivl
nop
addr16
mov
add
shlb
sub
jb
mov
in
shll
popa
xor
outsl
xchg
popa
sahf
dec
rolb
push
popf
pop
daa
sub
pop
sub
and
mov
fimull
bound
shll
push
pop
repz
jo
test
test
mov
xchg
ja
jne
mov
loope
lcall
ja
les
xor
and
sahf
in
aaa
mov
sub
and
pop
jne
xor
daa
xor
cmp
in
ret
ds
add
adc
adc
push
clc
iret
into
ficoml
cwtl
adcb
push
xchg
das
mulb
test
cwtl
dec
ljmp
xchg
in
pop
fbstp
inc
adc
pop
pop
in
dec
xchg
lods
jp
push
nop
fcoml
sub
fsubs
insl
lds
stos
xor
mov
xor
mov
xchg
iret
sub
and
mov
lods
nop
add
decb
jmp
cmpsl
xchg
outsb
cwtl
add
lahf
std
mov
pop
lret
mov
mov
push
ret
lods
inc
push
inc
addl
je
pop
mov
mov
fimull
ret
adc
test
mov
inc
lret
inc
call
jle
inc
scas
fistl
jno
pop
nop
insl
cltd
pop
xchg
push
addr16
data16
lahf
and
pushf
add
popf
test
std
fcmove
testl
push
pop
cld
pushf
fwait
scas
imul
jecxz
xchg
mov
ds
adc
mov
clc
adc
cli
dec
mov
clc
lock
push
sti
pop
push
xchg
sub
sub
sbb
incl
into
fs
loop
xchg
adcb
movsl
adc
xchg
adc
cli
jb
stos
scas
adc
mov
jo
push
jbe
fs
cmp
shl
jne
inc
daa
mov
push
lret
lods
and
loopne
subb
pop
mov
jne
std
or
fnstsw
fmull
push
and
popa
xor
iret
jae
mov
shl
sbb
mov
mov
addb
mov
test
pop
pop
mov
and
pop
xchg
loop
dec
adc
fwait
inc
lods
mov
aaa
inc
pop
xchg
xor
jnp
xor
cmp
lods
out
int
cld
sub
push
pop
loopne
lahf
loop
and
xor
out
cld
daa
pop
sbb
ret
negb
mov
scas
cli
sti
fbld
push
mov
mov
pop
mov
jne
sbb
orb
mov
jge
mov
fdivs
je
dec
sarb
mov
pop
fcomps
or
es
push
lock
aas
inc
scas
sub
xchg
into
sbb
add
push
shrl
dec
pop
call
in
scas
push
out
fdivs
adc
sub
cmp
out
mov
jg
aaa
push
nop
sub
dec
dec
sub
sbb
push
push
dec
jmp
add
cmp
or
lock
mov
add
mov
sti
jecxz
lods
divb
jmp
sbb
mov
in
push
mov
data16
mov
movsb
je
ds
mov
xchg
in
adc
fiadds
cwtl
fs
dec
mov
cltd
enter
push
jmp
fsub
or
push
mov
mov
jg
jo
jo
sub
dec
inc
jle
ret
das
sub
lret
bswap
inc
es
cld
lret
popf
test
push
cmp
ret
iret
or
movsl
xlat
mov
sub
notb
pushf
push
aaa
cltd
aaa
or
das
jne
sbb
arpl
out
negb
mov
sbb
ja
pop
adc
jg
lods
xchg
daa
jbe
test
shrb
in
jmp
push
pop
rcrb
stc
test
add
mov
sarb
rorb
out
xchg
cmp
ret
cltd
lods
aas
pop
mov
out
and
daa
arpl
rorl
xchg
notl
mov
xor
push
fsts
loopne
dec
scas
aaa
add
mov
xor
xlat
mov
popf
cmp
nop
fimuls
mov
aam
push
xorb
push
adc
cmp
ret
xchg
stc
negl
mov
lods
inc
xlat
add
mov
loop
sub
mov
dec
test
push
cmp
mov
cmc
mov
push
int
into
mov
outsb
dec
push
clc
enter
scas
jge
int3
rorl
push
jmp
and
and
or
iret
stos
testb
dec
cmp
jnp
stc
aaa
arpl
ja
adc
dec
faddl
or
dec
jle
mov
sbb
imulb
jmp
lds
push
mov
pop
cmp
or
and
lods
cmc
cwtl
out
jo
filds
leave
mov
rcl
loopne
int
xor
mov
in
push
mov
lock
pop
sbb
test
inc
push
or
xchg
mov
fbstp
pop
pop
fs
mov
jl
mov
dec
jl
int3
movsb
mov
repnz
cmpsl
and
push
push
pop
or
xchg
ljmp
inc
iret
lods
lret
rcr
add
popf
push
mov
fiaddl
or
xor
fcomps
mov
fs
xor
push
movsl
hlt
push
add
int
cwtl
test
inc
mov
inc
mov
push
xor
mov
pop
mov
and
mov
stos
loopne
sbb
js
cmp
inc
xchg
jmp
mov
mov
pop
mov
call
xor
adc
pop
dec
mov
push
sbb
inc
xor
std
addl
push
and
stc
jae
mov
cmp
jmp
daa
mov
lahf
cs
adc
clc
out
mov
popf
fcoml
lock
out
es
movsb
mov
inc
mov
repz
enter
aad
sti
push
adc
push
push
sub
dec
pop
test
call
movsl
in
sbb
sahf
data16
clc
loopne
sbb
fwait
dec
adc
xchg
pop
sub
ret
dec
xlat
push
dec
mov
jecxz
push
cwtl
out
jg
mov
mov
push
mov
jb
sub
pop
cmp
aam
and
lds
sub
mov
int3
jl
xchg
shrl
out
lret
sbb
or
push
into
adc
pop
outsb
int3
andb
push
sbb
and
les
jnp
jecxz
outsl
cmp
push
insl
pop
scas
fisubs
sub
ljmp
hlt
pop
mov
xlat
scas
sbb
mov
fimuls
movsl
ret
lcall
leave
add
ja
dec
push
pusha
shll
leave
xchg
je
lods
test
adc
insb
xchg
pushf
add
fisubs
sahf
push
sbb
add
dec
dec
pop
aam
out
nop
mov
imul
lods
stos
cmp
inc
sarl
stos
cmp
ret
push
in
lock
cmpxchg
cmp
jl
hlt
pop
outsl
and
inc
pop
mov
cmp
add
xchg
cmp
cmp
out
fsub
jno
js
cs
push
push
pop
mov
mov
dec
jge
and
lahf
add
mov
test
out
pop
stos
loopne
push
imul
mov
mov
xor
test
data16
nop
and
fadds
xchg
dec
pop
mov
inc
xor
mov
mov
cli
pause
dec
loop
fsubrs
aad
sub
xor
sbb
mov
inc
call
ja
sbb
push
je
hlt
push
aad
sub
pop
mov
les
aas
mov
sbb
in
cmp
mov
dec
loop
mov
lods
into
arpl
ljmp
pop
loope
xchg
movsw
addr16
inc
cwtl
and
adc
scas
push
inc
adc
xchg
push
fdivs
or
push
loopne
ficompl
fimuls
sbb
and
test
nop
outsb
adc
insl
dec
outsb
mov
js
es
cltd
or
flds
mov
insl
ljmp
fmull
in
push
stos
cld
mov
jnp
test
stos
add
and
std
loop
pop
push
mov
popf
loope
mov
mov
scas
mov
xor
jmp
inc
lock
sbb
movsb
rorl
push
popf
or
leave
push
sub
add
cltd
xchg
sub
outsb
mov
mov
jp
sub
or
pop
cld
int
lret
fwait
pop
cmp
loop
pop
cwtl
cmpsb
loop
xor
jae
insl
dec
lods
cld
aam
out
pop
repz
mov
aad
xchg
sbb
lret
cs
ret
fdivl
fisttps
xchg
idivb
movsl
out
mov
add
in
mov
sarl
repz
mov
pop
xchg
inc
sbbb
xor
dec
fldenv
je
scas
es
cld
mov
jne
int3
test
iret
xchg
mov
loope
mov
loope
lock
sbb
jl
mov
and
jo
movsl
push
mov
mov
xchg
testl
scas
pop
pop
or
movsl
fcomip
pop
mov
jne
push
xchg
xchg
nop
cwtl
iret
rcl
mov
ret
adc
cltd
lahf
fstl
push
ret
fwait
xor
push
scas
loope
das
and
fwait
addr16
and
insb
mov
imul
test
fldcw
cli
fisttpll
cmp
mov
sub
sbb
popf
and
xchg
xchg
pusha
or
ljmp
pop
pop
sbb
mov
dec
sub
ficoml
push
push
inc
xor
push
inc
pop
mov
insl
test
mov
sahf
or
mov
sub
cwtl
fisubl
fisubs
or
pushf
into
sbb
pop
movsl
push
lahf
insl
lds
sub
inc
inc
jp
xlat
sub
mov
out
jb
fisttps
dec
jno
and
jmp
cli
mov
out
hlt
repz
mov
fadds
call
pushf
xchg
add
and
jnp
arpl
jmp
jp
inc
cwtl
sbb
push
pop
mov
cmc
orb
in
mov
rolb
xor
pushf
insl
adc
mov
add
movsbl
std
mov
and
imul
insl
sbb
push
sbb
in
ljmp
in
inc
subb
lret
cmp
in
sub
stos
add
or
arpl
push
xchg
shlb
mov
nop
jbe
mov
mov
aam
movsb
xor
out
cld
out
dec
test
and
enter
push
je
or
inc
or
ficomps
adc
stos
mov
pop
pop
dec
testb
cmp
jo
xor
pop
into
ds
mov
popf
mov
jb
cmp
inc
das
sbb
testb
mov
mov
adc
mov
cmp
es
mov
mov
xor
mov
push
fidivs
pop
xor
pop
out
gs
rorl
fucom
lcall
xchg
xchg
mov
es
or
fs
pop
sbb
push
jb
inc
and
inc
pop
inc
addr16
push
jp
cmc
inc
sbb
es
repnz
and
mov
jo
inc
je
xchg
xchg
push
sbb
je
cmp
add
jmp
in
mov
push
cmp
pop
sarb
cmp
jmp
cmpsl
push
cmp
ja
stc
out
shr
stc
das
fidivrl
jnp
xchg
inc
mov
scas
js
xchg
fdivrp
rolb
pop
add
inc
clc
xchg
sbb
sahf
xchg
lods
mov
jge
fucomip
mov
adc
pop
push
pop
xchg
inc
scas
xchg
test
dec
call
mov
fists
or
mov
sarb
rcll
mov
outsb
mov
outsb
ds
outsl
push
or
mov
mov
jecxz
mov
cs
jmp
inc
iret
sbb
pop
int3
shl
insb
inc
jnp
int3
in
mov
sub
lods
test
bound
stc
xchg
mov
arpl
mov
dec
sti
out
adc
in
pop
clc
push
xchg
popf
mov
xchg
cli
fisttpll
mov
outsb
sbb
lock
in
ja
mov
add
add
and
and
aad
jns
dec
les
ror
mov
inc
repz
cld
inc
cmc
stc
movsl
inc
scas
cmpsl
outsb
xchg
adcl
stos
ret
loopne
aam
ret
loope
rcll
mov
sub
fucomi
pop
pop
pusha
bound
sub
xchg
cmp
xchg
cmpsb
sti
fs
mov
fcmovnbe
mov
leave
ficomps
adc
jle
insb
lea
shr
adc
jne
in
add
mov
sub
sar
mov
lods
mov
ljmp
shlb
push
wrmsr
mov
aam
cld
adc
loope
aam
subb
das
leave
dec
pop
mov
pusha
ret
xor
into
nop
lock
test
subl
scas
or
xchg
cmpsl
sbb
mov
jnp
mov
and
cmc
scas
push
outsl
or
push
push
add
std
ret
xchg
insl
mov
mov
cltd
imul
icebp
or
fisubs
dec
loop
and
aas
loope
push
mov
inc
and
mov
in
push
cwtl
sub
mov
cmpsb
and
ja
aam
popf
sbb
adc
ljmp
push
and
inc
sub
and
sahf
aam
jge
pop
dec
shlb
xor
push
sbb
xchg
sub
sti
or
popf
mov
in
daa
sbb
mov
aaa
sub
test
andb
popf
jge
push
flds
jge
push
pop
aad
fisubrs
sbb
or
in
bound
cmpsb
pop
inc
dec
movsl
push
cmp
dec
mov
pop
gs
in
push
push
mov
int3
dec
in
pop
shrb
sub
fstpt
shll
and
mov
stc
xchg
sub
jb
insb
fcom
xor
mov
cmp
in
movq
sub
inc
mov
push
jl
pop
lods
xchg
xor
mov
mov
cltd
mov
ljmp
add
xor
sbb
xchg
fadds
push
sti
unpcklps
fcomps
fs
jmp
xchg
adc
or
xchg
out
out
lahf
out
mov
sub
dec
inc
push
ret
jg
mov
call
js
adcl
or
push
sub
movsl
incl
test
cli
cmpsb
cmp
inc
nop
push
aad
cmp
rcr
xor
inc
push
xor
mov
fiaddl
pop
cwtl
pop
outsb
pop
and
jae
mov
and
xchg
jb
ret
aam
negb
mov
inc
mov
fs
push
in
pop
push
fcompl
ds
xchg
inc
push
mov
cmp
dec
add
jmp
cltd
xchg
cmp
dec
push
push
cmp
jmp
pop
or
mov
dec
mov
filds
imul
shlb
sub
in
cmp
mov
jg
in
cmp
loop
dec
in
sub
pop
ljmp
aaa
loope
add
js
push
mov
jecxz
adc
dec
sub
sbb
inc
cmp
xchg
orb
sub
sahf
rcr
pop
mov
xchg
incl
mov
iret
fldt
pusha
test
pop
mov
loopne
fbstp
lcall
pusha
xchg
push
scas
std
adc
and
psraw
lcall
ljmp
icebp
pop
cmpsb
cmpl
dec
or
and
xor
jmp
ja
xchg
adc
loopne
xchg
shrl
and
mov
add
ret
sub
jecxz
shlb
popl
pop
fnstcw
push
test
out
pop
pop
or
dec
cwtl
xchg
xor
cltd
xchg
fadds
adc
aas
mov
testl
add
cmp
scas
fstps
shll
push
sbb
fsubl
icebp
rcrb
lds
popf
test
scas
cmovl
cs
adc
popa
cmp
loope
cmp
push
mov
mov
adc
lods
or
rcll
mov
std
cmp
shlb
cli
sbb
mov
pop
sbb
cmp
in
jp
in
xlat
jecxz
push
cld
rcll
pop
scas
adc
mov
and
sbb
cmp
dec
adc
pusha
ljmp
mov
in
jle
ret
xchg
fst
insl
sbb
push
loope
xchg
ficomps
dec
add
enter
lds
add
daa
lods
push
in
jno
jg
xchg
inc
push
stos
out
popf
cmp
adc
and
pop
fisubs
mov
ljmp
cmc
mov
out
movsl
mov
cmpsb
notb
sub
mov
daa
xor
sub
imul
adc
divb
cmp
and
jae
out
pop
lret
aam
scas
inc
and
xchg
lret
insl
add
dec
stos
shr
fadds
ret
inc
bswap
mov
rolb
dec
dec
pop
lods
xor
fcoml
aad
push
and
iret
insb
pop
and
push
dec
push
dec
movsl
fs
cmpsb
inc
adc
movsb
aad
mov
sub
sub
lcall
adc
in
pop
jmp
clc
xor
mov
cmp
inc
lahf
lods
xchg
data16
or
cli
add
mov
mov
mov
call
mov
fs
mov
popf
popf
jmp
mov
inc
ljmp
bound
xchg
divb
fsubl
in
ja
inc
cmp
jne
pop
jnp
mov
aad
test
sub
movsl
and
xchg
pop
jb
inc
fs
inc
inc
pop
mov
outsb
test
lcall
xor
lret
jge
pop
cmpsl
mov
pop
gs
push
mov
cmp
jns
aaa
shl
aaa
das
push
or
mov
and
call
sub
add
sbb
xor
jge
or
or
arpl
repnz
ja
iret
mov
inc
sbb
bound
jl
jns
sub
aam
scas
in
or
pop
xchg
xchg
shl
push
push
mov
scas
xor
mov
mov
ret
lcall
lods
add
jo
jb
push
pop
ret
pop
aam
dec
jnp
scas
ds
sbb
fstpl
int3
adc
xchg
sub
pop
xlat
push
sbb
xchg
push
jae
iret
lret
fwait
jnp
jmp
dec
pop
cmp
daa
mov
ja
ret
test
push
out
adc
testl
cwtl
cmp
lock
cld
mov
xor
cmp
test
ss
inc
xor
in
mov
and
fbstp
hlt
nop
dec
push
fisubs
fistps
inc
test
inc
push
fs
test
aaa
in
add
lock
sub
or
pusha
xchg
mov
xor
add
xchg
loop
cmc
and
cmpsb
mov
add
daa
fstpt
push
jno
loope
arpl
out
loope
shll
nop
filds
loopne
stc
repz
adc
divb
push
jmp
sbb
push
mov
call
push
pop
leave
movsl
jg
jbe
xchg
adc
cli
jge
adc
pop
mov
ljmp
dec
sahf
loop
jp
nop
xorl
mov
or
inc
movsb
mov
sti
mov
jge
rorl
lock
inc
sbb
aad
movsl
ja
or
lods
xchg
icebp
or
adc
xchg
ret
es
cltd
mov
push
push
sbb
sti
fsubrl
push
jmp
lds
mov
shl
stc
and
sbb
and
cld
adc
push
lods
in
push
subl
sbb
pusha
mov
mov
cmp
cmp
pop
xchg
or
mov
add
sahf
mov
ror
loop
sbb
add
cmp
stc
and
mov
xchg
cmc
mov
add
mov
int
decl
mov
mov
jo
shrl
sbb
mov
add
mov
add
push
mov
sub
icebp
lods
push
dec
dec
and
int
mov
sbb
adc
pop
stos
out
xchg
sbb
dec
jge
fndisi(8087
lahf
ljmp
insl
dec
xor
inc
push
dec
sub
mov
sbb
outsb
mov
ss
cmp
hlt
mov
test
adc
fwait
popf
sbb
orb
fbld
xor
xor
push
shrb
scas
dec
or
sub
lret
scas
sbb
test
bound
mov
int
sub
ror
lcall
pop
pop
dec
decl
jmp
push
jnp
dec
push
cmp
jp
sbb
out
pop
pop
push
mov
dec
add
mov
pop
insl
jmp
gs
stc
cmp
cmp
sti
mov
pop
fidivs
dec
daa
push
sub
xlat
pop
add
or
dec
mulb
sub
cltd
ljmp
xchg
inc
insl
fxch
xchg
pop
fstpl
cmc
mov
ljmp
fstpt
cs
repz
sbbb
scas
add
sbb
cwtl
fmuls
test
inc
push
mov
mov
and
jmp
mov
in
shll
xlat
inc
xchg
lret
adc
mov
adc
push
or
and
nop
push
fwait
sbb
aam
jecxz
mov
sahf
rorb
xor
sub
or
cwtl
in
icebp
lds
push
lcall
sahf
pop
mov
addl
mov
mov
lea
iret
dec
xchg
push
in
xchg
jmp
pop
pop
jmp
adc
or
adc
and
shll
rcll
in
stos
pop
inc
sbb
jge
fsubrs
jmp
jg
jbe
insb
xor
push
dec
in
mov
xchg
mov
mov
and
fscale
sub
jno
push
pop
rcrb
inc
xchg
mov
xchg
jmp
or
cmp
pusha
xor
jecxz
mov
or
push
in
pop
cmp
xor
sti
cwtl
xchg
pop
dec
pop
push
cmp
in
jno
sbb
xchg
sbb
cmp
push
jp
cwtl
loope
dec
add
sub
outsl
inc
push
mov
adc
xchg
rorl
pop
out
mov
in
fstps
push
xor
add
js
mov
or
outsl
stos
dec
sbb
mov
in
push
movsb
mov
int
imul
in
dec
clc
sbb
mov
fisubrs
mov
inc
mov
cmc
mov
leave
push
inc
loopne
cmp
dec
in
and
inc
mov
loop
dec
xor
xorl
inc
mov
pop
lahf
xlat
push
dec
rcrb
pop
fcompl
xchg
push
and
sub
mov
call
dec
pushf
xor
lahf
xchg
jmp
insb
fsubs
pop
dec
sub
test
fmull
popf
out
fsts
xor
xchg
mov
icebp
addr16
jns
mov
fists
test
mov
leavew
push
jnp
aad
jns
mov
dec
mov
mov
xchg
daa
shll
es
dec
mov
cld
jg
xor
push
lret
sahf
xor
pop
gs
and
mov
sbb
push
hlt
inc
adc
insb
or
sbb
fwait
push
orb
jnp
shll
scas
repnz
movsb
cltd
outsl
mov
xor
loop
sahf
in
mov
frstor
repz
pop
mov
inc
cwtl
xor
mov
aam
xchg
dec
in
test
cmpsl
lahf
cmp
lea
push
xor
jmp
pop
cmp
ja
dec
cs
sahf
mov
xchg
pop
and
pop
adc
es
and
xchg
mov
andb
cmpl
mov
ss
imul
jnp
jb
inc
test
mov
dec
rorl
mov
sub
mov
stos
adc
dec
test
add
repnz
scas
sti
ss
fucomp
add
mov
xor
out
mov
pop
mov
push
sub
xchg
and
aaa
add
xchg
jne
fstpt
test
sti
inc
ss
sbb
or
mov
ret
and
sub
cmp
addl
int
aas
mov
jno
cwtl
lahf
mov
and
pop
sub
jl
and
dec
add
test
xchg
mov
in
cmc
ret
scas
pop
lcall
cmpl
jp
sbb
xchg
sub
push
mov
scas
or
jecxz
sub
xchg
cwtl
push
scas
cmpsl
cli
clc
jns
movsb
cmpsl
xorb
dec
aas
mov
sbb
dec
xchg
insl
leave
movsb
cmpsl
pop
mov
adc
shlb
pop
outsl
sbb
push
push
loop
fsubl
test
add
push
add
mov
shll
xor
pop
popf
sbb
push
lods
mov
mov
fmul
insb
lret
enter
sahf
pop
popf
out
es
inc
sub
pushl
lahf
fisttpl
inc
fldcw
gs
mov
test
sbb
shl
std
jp
inc
jecxz
jb
cld
xchg
cs
ja
jno
dec
mov
cmp
hlt
lods
scas
cwtl
push
iret
or
cld
ja
out
fsubr
rclb
cld
inc
aam
nop
sti
in
js
dec
shl
or
test
fucomp
iret
loop
std
jnp
aaa
push
jmp
jp
adc
mov
cmp
jo
popa
aas
and
jns
xchg
push
das
sti
jno
mov
or
add
lea
dec
scas
mov
cltd
sub
xchg
int
aam
testb
add
sar
clc
jns
lea
outsb
fisttps
dec
mov
push
pop
inc
pop
mov
dec
jge
lret
sarl
loop
pop
push
sub
mov
mov
adc
test
or
push
lods
sub
push
aaa
repz
inc
cmp
arpl
push
adc
and
cli
repz
js
and
imul
arpl
sub
dec
mov
lahf
cmp
and
jo
push
ret
and
and
xchg
pop
popf
cli
pusha
push
add
clc
mov
cmp
fsubrp
adc
icebp
lds
push
ss
jae
pop
ret
sbb
sbb
dec
push
push
into
mov
cli
adc
insb
sbb
outsl
insb
rolb
lods
dec
fcmovnbe
pop
sub
xchg
test
outsl
cmp
cwtl
xchg
mov
add
test
adc
push
les
or
pushf
xlat
int
pop
in
or
jge
inc
lds
ror
stc
aas
xchg
and
xchg
mov
roll
xor
adc
and
in
in
xor
ja
les
push
pop
in
movsl
mov
lcall
dec
jmp
mov
and
rorb
data16
xor
lds
mov
pop
jge
test
xchg
xchg
lahf
jo
pop
push
sbb
cld
and
stos
out
out
int3
dec
enter
xchg
sbb
inc
imul
into
mov
clc
lods
into
mov
fstl
fwait
mov
xor
inc
sub
sub
std
mov
ret
xchg
dec
mov
cmpl
jno
sub
out
ror
cwtl
mov
ljmp
push
mov
insl
or
and
mov
cwtl
dec
jle
test
fadds
pop
bnd
aad
mov
pop
and
cli
or
lret
pop
ss
sub
pop
pop
jmp
cmc
lretw
jmp
cli
push
int
xor
and
dec
xchg
pop
push
fcom
and
push
push
fsubr
cmp
xlat
add
test
movsb
cwtl
push
rorl
pop
and
icebp
lea
cmp
fsubp
mov
fistps
sahf
xor
daa
jmp
aad
ss
mov
cmpsl
push
mov
dec
pop
pop
add
cmp
mov
adc
mov
mov
or
int3
das
fstpl
les
insl
xchg
and
add
jae
ja
xchg
or
ljmp
mov
mov
lods
cmpsb
shlb
mov
lea
cmp
push
ret
dec
sarb
mov
sub
pop
sub
in
icebp
ljmp
or
iret
stc
mov
pop
pop
pushf
xchg
pop
pusha
daa
jbe
xor
movsb
jne
scas
outsl
mov
sahf
pop
lahf
stos
push
negl
pop
rcl
rcll
arpl
pop
outsb
orl
dec
bound
shlb
xchg
movsb
sahf
loope
jl
fs
ljmp
sub
xchg
cli
sub
pop
jb
stos
rcll
mov
stos
push
arpl
stos
xchg
fwait
inc
and
adc
push
adc
test
adc
jp
push
fisubrs
mov
jno
orl
mull
arpl
jo
xor
jecxz
fcomps
adc
xor
cmp
fdivrp
or
push
in
push
dec
out
clc
testl
outsl
aas
mov
sbb
dec
push
pushf
cwtl
push
mov
add
jns
adc
pop
fcompl
push
push
ret
and
stc
xchg
pop
jmp
pop
mov
bound
int
ja
adc
mov
mov
ja
into
or
popa
int
rolb
mov
mov
clc
and
ljmp
push
xor
xlat
sub
clc
dec
aam
or
mov
rcrb
cmpsb
in
sbb
cld
mov
add
and
dec
mov
repz
clc
mov
cld
dec
out
push
int
and
mov
jo
adc
loopne
icebp
jp
jne
imul
rorb
pusha
ret
and
inc
push
pop
icebp
or
lods
mov
mov
cmp
outsb
xchg
stc
mov
insb
insl
ds
incl
xchg
sbb
lods
pop
jg
shll
sbb
mov
cwtl
jns
jnp
pop
loope
xchg
pop
cmpsl
movsb
jae
mov
jecxz
cmc
orl
dec
or
xchg
mov
pop
sbb
mov
push
pop
insl
jb
daa
cli
xchg
dec
pushf
in
jl
mov
shr
mov
pop
add
pusha
cwtl
inc
scas
cmpsl
mov
mov
or
jno
mov
xchg
and
add
sti
and
divl
mov
imul
pushf
push
and
or
push
mov
push
pop
mov
jns
cmpl
or
mov
lock
divl
jo
sub
dec
js
mov
jo
inc
jns
mov
mov
outsl
jnp
or
dec
repnz
jle
xchg
jno
adc
adc
pushf
push
mov
sbb
xchg
xor
scas
adc
gs
cmpsl
mov
xor
mov
lock
movb
rolb
out
sti
fldl
pop
xor
push
cltd
cli
movsl
add
es
mov
leave
cmpsb
sbb
jg
lds
jp
iret
adc
cmp
sbb
sbb
mov
aam
pushl
out
jb
aad
scas
xor
loopne
pop
cmp
pop
xchg
stc
push
and
cmp
ds
std
ljmp
out
push
mov
add
xchg
inc
aam
push
dec
xchg
sbb
inc
mov
and
bnd
iret
mov
inc
pop
xchg
dec
xor
inc
push
outsl
gs
int
enter
ret
stos
adc
bound
fistpl
sub
lcall
rcr
sbb
mov
insb
xor
xchg
cmpsl
push
mov
insb
je
hlt
pop
mov
inc
jge
scas
mov
aaa
js
or
div
in
mov
pop
xchg
jo
addr16
insb
xchg
mov
les
dec
inc
aad
aas
loope
fisttpll
sbb
lret
mov
ret
sti
fidivs
ljmp
addr16
mov
mov
cmpsb
outsl
rcrl
fidivs
fdiv
notl
pusha
aaa
cmpl
nop
push
repz
stos
in
aad
jp
mov
xor
outsb
in
or
xor
dec
clc
sbb
mov
push
inc
push
lods
lret
sub
scas
loopne
cmp
sti
es
jp
aam
or
push
scas
mov
movsl
int3
test
cltd
dec
repnz
js
scas
or
out
imul
fdivr
inc
imul
loope
or
inc
test
loope
sub
and
dec
shr
stos
in
mov
int
ljmp
out
jle
push
outsb
subl
xor
adc
cmp
inc
cwtl
pop
data16
cltd
cltd
adc
mov
cwtl
aas
dec
mov
pop
mov
in
adc
dec
and
sub
mov
test
jmp
repnz
cmp
or
das
inc
test
orl
sbb
jecxz
xchg
fdivrl
cs
inc
inc
rcrb
fwait
daa
lret
in
jg
cld
jp
lds
and
sub
xor
jb
dec
cltd
daa
and
mov
cmp
push
xchg
jns
and
pop
in
data16
add
cli
pop
es
jb
mov
repz
test
sbb
out
sahf
push
and
adc
push
pop
cld
mov
lret
movsb
ljmp
xchg
es
mov
loop
mov
pop
fmuls
xchg
add
ss
xor
dec
in
mov
cmp
xchg
cmc
das
aaa
sbb
insl
push
dec
pop
arpl
fs
mov
mov
cwtl
fidivl
pop
pop
lods
push
std
push
popa
push
dec
stc
mov
xchg
jnp
mov
lods
mov
cmpsb
inc
push
jg
mov
hlt
inc
or
int3
sbb
dec
cltd
mov
mov
xchg
pop
lods
int3
ljmp
aaa
sub
pop
arpl
xchg
das
ficomps
push
push
movsb
adcl
icebp
out
subl
mov
mov
and
mov
in
push
xchg
lds
jp
shrb
fidivrs
mov
pop
cmp
xchg
mov
gs
jne
pop
add
rorb
repnz
out
clc
push
movsb
jl
ret
fbstp
je
pop
sbb
inc
adc
mov
sbb
in
mov
es
mov
mov
mov
jnp
xor
rcll
adc
or
lahf
pop
mov
cmp
imul
enter
jl
pop
adcb
adc
push
ja
ret
jbe
mov
mov
movsl
idivb
ret
scas
cmp
add
mov
out
dec
sbb
popf
std
je
loope
test
pop
pop
repnz
xchg
arpl
inc
mov
mov
fbstp
sub
into
popf
mov
shlb
mov
xor
outsb
les
pop
out
cmc
stos
mov
cmp
scas
and
addb
and
insb
lret
push
mov
inc
imul
mov
xchg
nop
pop
mov
pop
cwtl
out
mov
sub
fbld
std
outsb
shl
sbb
or
enter
push
ja
mov
or
xor
movsb
xchg
scas
pop
mov
fsubp
xor
loopne
pop
pop
int
lock
mov
aad
fimuls
sti
shrb
pushl
lods
pusha
insb
movl
mov
mov
test
lcall
xor
fiadds
pushf
mov
into
jle
mov
outsl
addr16
xchg
push
jmp
adcb
xchg
and
in
psrad
sub
and
subb
repz
movsl
fidivs
add
leave
popa
lock
sahf
outsl
inc
les
dec
and
pusha
std
in
mov
sub
mov
pusha
sub
mov
andl
out
cwtl
mov
cs
shll
lods
cmp
xchg
lahf
out
outsb
xchg
pushf
jle
cmc
repnz
fadds
nop
fsubrs
sbb
insb
xchg
fwait
mov
gs
aaa
inc
call
lods
pop
or
fcompl
outsl
divb
mov
lock
jo
imul
jge
push
cs
inc
pop
mov
mov
sbb
and
std
repz
sub
mov
adcl
pop
sbb
enter
jecxz
sarb
lods
hlt
pop
xor
insb
insb
mov
inc
mov
sub
addl
mov
push
jae
dec
filds
xchg
mov
stos
push
jmp
lods
je
jb
add
insb
gs
mov
lahf
inc
adc
arpl
mov
jno
push
cmp
insl
mov
negl
mov
mov
aad
enter
mov
es
cmpsb
push
ljmp
pop
aam
mov
shl
sbb
jno
mov
push
jl
or
inc
sub
aas
push
insb
adc
push
movsl
int3
sarb
test
add
decl
arpl
sahf
pop
loop
ljmp
push
mov
xchg
cmp
dec
out
in
adc
ljmp
mov
fmul
mov
mov
test
fidivs
aam
sbb
sub
loopne
xor
fs
insb
push
dec
push
mov
arpl
xchg
icebp
mov
jl
insl
movb
in
mov
sbb
int
and
out
repnz
std
push
or
bound
inc
mov
jmp
sahf
out
and
std
sub
jmp
in
in
mov
fwait
arpl
les
clc
and
xchg
in
or
cmp
sub
icebp
loopne
ja
fldenv
adc
push
es
negb
in
lret
rclb
mov
les
cmp
xchg
popf
rclb
idiv
sahf
std
aas
pop
cli
xchg
outsl
jp
and
movb
xor
std
shlb
arpl
addr16
lcall
jmp
mov
mulb
cld
lret
jae
movsb
cmp
pop
jecxz
in
jmp
dec
xchg
sahf
sub
xor
adc
orl
shlb
das
mov
mov
cmp
jns
xor
movsb
and
jne
add
cmc
sbb
xchg
xor
inc
sarb
pop
push
ss
inc
mov
and
dec
fildl
xchg
cmp
sbb
cmp
arpl
sbb
sti
insb
jo
scas
hlt
sbb
and
ss
rorl
xchg
lret
lss
jne
or
sub
int3
dec
cli
negl
sbb
movsb
fildll
test
dec
sub
pushf
std
sub
orb
mov
mov
push
xchg
adc
adc
fwait
stos
push
jae
dec
cs
ds
jmp
fnstenv
inc
repz
xchg
mov
stos
and
adc
cmpsb
cmp
dec
push
add
push
loope
dec
add
xchg
pop
sub
mov
dec
jg
lret
sbb
stc
jne
mov
mov
popa
xlat
lret
push
call
divl
jno
outsl
aaa
sub
adc
popf
mov
jb
lods
lret
jbe
jmp
xor
nop
dec
rcrl
cmp
dec
lods
push
insb
cwtl
addb
mov
dec
cmp
sahf
fldcw
mov
fisubs
cmpsl
xor
and
lret
fcmovbe
lock
mov
outsl
push
loop
sarb
push
dec
or
movsb
pop
cmp
push
cld
cmp
and
inc
sbb
inc
loope
and
lods
outsl
push
mov
push
data16
or
mov
scas
push
pop
lods
and
or
aam
mov
mov
gs
mov
in
test
nop
mov
loop
bound
mov
or
cmp
scas
or
lods
mov
ret
sbb
pushf
stos
loop
push
push
ja
xor
xchg
sub
push
push
sub
loop
in
inc
pop
sti
jo
mov
rcrl
rorl
ja
les
out
add
push
lods
sbb
mov
iret
inc
and
cmpsb
test
dec
lcall
dec
xchg
push
dec
pop
or
sub
jno
mov
nop
jmp
inc
push
imul
mov
xor
xchg
cmp
test
cld
icebp
sub
cli
repz
jo
push
inc
mov
out
xor
or
ljmp
cmp
mov
or
xchg
clc
or
and
lods
stc
adc
jmp
movsb
lret
inc
movsb
or
mov
jae
cld
hlt
adc
in
les
test
add
xchg
into
cmp
push
data16
pop
ljmp
and
mov
jmp
imul
outsb
pushf
and
mov
sbb
inc
sub
ficoms
adc
jle
pop
aaa
bound
fidivl
fimuls
or
cld
psubq
inc
pop
sbbb
xchg
std
xchg
loop
cltd
dec
arpl
jne
lods
unpckhps
lahf
lock
mov
mov
in
adc
arpl
xchg
xor
push
in
dec
lret
mov
imul
fists
pop
mov
jmp
fcmovne
stos
push
xchg
adc
fisubl
jle
push
cmpsb
clc
icebp
mov
ljmp
adc
das
add
scas
mov
add
jno
pop
int3
lret
imul
mov
fs
std
jmp
jb
sbb
mov
push
xchg
push
or
cmp
mov
divb
inc
into
and
mov
jo
or
and
stc
sub
mov
jge
testl
and
add
dec
stos
pop
xchg
aas
cltd
dec
mov
pop
xchg
and
sub
sub
icebp
mov
pop
mov
enter
ret
lcall
in
out
mov
es
insb
scas
int3
cmp
adc
push
daa
ret
ret
mov
cmp
stc
imul
mov
mov
inc
cwtl
push
jae
ret
and
mov
and
adc
movsb
adc
xlat
cltd
push
push
mov
clc
mov
sbb
rcrl
mov
pop
iret
out
mov
ret
sub
mov
rcl
mov
sbbl
test
test
mov
mov
in
addb
mov
lods
xlat
cltd
push
sub
cmc
and
test
cmc
in
lods
xchg
adc
enter
dec
jmp
jo
xor
fldt
mov
lods
sub
cmp
cld
xchg
mov
sub
adc
pop
mov
je
jge
cli
dec
xchg
mov
jmp
mov
xor
xchg
cwtl
mov
or
jns
and
cld
inc
xchg
hlt
repnz
addr16
push
jb
test
bound
cmpsb
ret
mov
jo
cvtps2pd
mov
mov
dec
mov
outsb
insb
fsubs
mov
insl
adc
test
lods
lret
call
mov
dec
cwtl
mov
push
lods
jp
movsl
rcrb
daa
popa
movsb
lds
inc
sti
pop
add
into
sahf
aaa
stos
int
outsl
dec
xchg
pusha
push
das
movb
jg
xchg
mov
sbb
sbb
enter
movsl
addr16
out
loopne
ret
adc
rorb
fsubrs
shll
xlat
sahf
xchg
imul
loope
mov
or
loopne
stos
and
add
push
repz
stos
rol
xor
pushf
push
or
cmp
adc
or
pop
mov
xchg
mov
scas
sarb
or
loop
mov
fsubr
mov
lcall
adc
push
subl
mov
sti
sbb
sahf
mov
mov
call
mov
in
fwait
and
push
inc
rcrb
mov
xor
out
in
popa
mov
sub
pop
pop
mov
bound
mov
inc
rcll
arpl
mov
pop
inc
cmovp
gs
mov
and
popf
and
in
js
jno
dec
and
xor
in
jns
lea
andb
lods
outsb
xchg
fwait
cmp
jae
jne
in
lcall
add
sbb
dec
push
fldt
sti
jl
insb
into
in
mov
outsb
jmp
xor
movsl
fdivs
jmp
add
dec
pop
inc
in
dec
pop
repz
add
popf
iret
orl
add
mov
lods
in
loop
xorl
sub
mov
mov
sub
and
outsl
or
pop
insl
in
in
xchg
out
in
fsubrs
sub
popa
leave
mov
sub
cs
shl
cmp
aam
mov
nop
rorl
lret
mov
mov
pop
sbb
jmp
rclb
or
add
cmp
ljmp
mov
daa
xor
jmp
push
pop
mov
mov
mov
cld
push
mov
jl
int3
xchg
or
arpl
mov
fs
adcl
es
adc
testl
adc
test
and
scas
into
int3
scas
hlt
pop
add
dec
scas
xorb
dec
imul
insb
pop
hlt
int3
js
insl
inc
push
sbb
popf
dec
mov
mov
and
sbb
mov
daa
lret
repz
clc
fdivl
lock
cmp
addl
sbb
sub
pop
ds
fdivl
dec
vmaxsd
aaa
repnz
fstps
js
imul
push
int3
cmpsl
data16
test
leave
test
repnz
cltd
test
fbld
lret
scas
xchg
dec
rcl
push
adcb
fwait
push
lds
mov
movsb
ja
fdivl
jb
pop
mov
pop
mov
add
outsl
inc
mov
fidivs
sbb
loope
or
mov
xchg
and
test
adc
lods
pusha
push
in
jo
and
push
dec
movsb
sub
inc
pop
jb
cld
int3
loop
adc
and
andb
xchg
lret
insb
or
das
xchg
pop
fwait
mov
fs
mov
and
stc
cli
sbb
mov
cwtl
lret
sub
xchg
mov
stc
test
mov
pop
lock
int
inc
lds
and
mov
dec
xor
xchg
insb
and
lods
cmp
fisubs
lods
add
sub
add
cwtl
jmp
push
shll
sbb
mov
hlt
mov
repz
sarb
and
popa
sub
scas
int
ret
lahf
mov
cmc
stc
mov
fmul
sbb
sbbb
cmp
movsb
mov
popf
cld
js
aaa
pop
pop
push
in
ljmp
sahf
in
movsl
dec
pop
and
sub
mov
cmp
rcr
std
cmc
xchg
lret
pop
rcrl
in
mov
jns
lcall
out
outsl
sbb
out
xor
push
and
test
outsl
mov
jbe
scas
cmpsb
fcmovnbe
xchg
pop
cmp
xchg
cli
test
gs
mov
mov
sbb
pop
ja
scas
mov
sub
or
jns
loope
scas
cmc
inc
pushf
cmp
loope
loop
mov
sub
sub
lret
lahf
pusha
jno
mov
xchg
or
push
inc
test
dec
pop
test
sbb
aaa
fwait
pop
lret
cmp
notb
jno
cltd
mov
pop
xchg
jmp
call
cli
shl
xor
jl
sarb
mov
ja
sbb
mov
loope
mov
test
incb
mov
aad
imul
ficompl
scas
mov
outsl
sbb
and
pop
movsb
movsl
ds
jg
push
in
cld
jmp
cltd
jmp
cmp
lret
push
adc
and
pusha
lret
mov
or
push
js
cwtl
out
cmc
dec
sub
daa
and
or
mov
pop
or
lods
sbb
cwtl
push
push
ds
sub
cltd
cmpsb
xchg
add
scas
cmp
cmpl
fidivrl
jge
push
xor
scas
xchg
lock
jmp
cmp
mov
adc
rol
stos
das
cs
cmpl
cmp
js
adc
jecxz
add
dec
jp
pop
shlb
xchg
sbb
std
dec
adc
and
fldenv
jno
mov
cmp
movsl
mov
ret
lods
mov
pushf
sbb
push
mov
mov
lods
mov
mov
div
inc
pop
adc
mov
xchg
adc
fisttps
add
les
inc
jmp
fmuls
xchg
pop
std
jp
lock
fadd
ret
fisubs
ja
test
mov
xchg
inc
mov
sub
cltd
pushf
or
sbb
mov
fsubrs
cli
jne
out
and
sub
or
call
gs
ja
fwait
or
lds
push
pop
fisubl
add
mov
cli
push
fdivrl
xchg
xor
mov
xor
add
int
loope
cmp
lds
xchg
add
cmpsb
xchg
addb
inc
jle
mov
lods
push
sbb
push
inc
stos
mov
repnz
sub
enter
lret
ror
jmp
push
xchg
inc
loope
push
jge
pop
xor
push
insb
scas
jno
push
insb
push
hlt
xor
inc
icebp
push
inc
repnz
xlat
and
jg
movsb
push
and
cs
ror
inc
xor
pop
cmp
cmp
sub
push
pushf
nop
cmpsb
mov
mov
test
jmp
sub
mov
rcr
sbb
mov
xchg
mov
push
xchg
push
fimull
and
cmpsl
mov
push
test
fdivrs
popf
out
pushf
mov
shlb
imull
jbe
xor
mov
xchg
mov
test
scas
fsubr
push
in
es
pop
add
clc
out
fists
jnp
cs
pop
test
mov
jle
inc
std
cmpsl
pushf
and
xchg
pop
hlt
push
mov
dec
scas
push
lods
daa
jbe
in
inc
mov
and
insb
mov
jge
leave
hlt
mov
jno
jl
mulb
rcr
daa
add
out
insb
jecxz
mov
xor
fisubl
jmp
pop
lret
test
dec
or
int3
int3
push
mov
xchg
push
mov
mov
lds
rcl
das
xchg
cltd
cmpsb
jb
sbb
dec
mov
and
rcrl
sub
roll
repz
lock
mov
pop
mov
jae
gs
lcall
lds
aam
cld
addr16
in
mov
pop
test
insl
pop
dec
xchg
popa
add
xchg
jae
loop
mov
std
inc
aad
jmp
mov
loop
mov
sub
mov
sbb
jecxz
jmp
imulb
push
pop
xor
adc
js
push
push
movsl
adc
in
das
lods
cld
js
imul
pop
pop
in
dec
push
imul
mov
gs
and
lret
ret
ja
and
xor
cmpsl
or
xlat
mov
push
pushl
rolb
out
and
fldenv
mov
ret
jno
mov
mov
shr
fcoml
test
xor
in
xchg
sahf
jae
jmp
stos
mov
or
mov
loop
push
je
push
scas
subb
mov
arpl
xor
sub
sub
push
push
out
push
xchg
mov
pop
arpl
mov
movsl
fsts
leave
jnp
sbbb
mov
ror
into
push
rclb
mov
adc
fcomps
sbb
das
jno
jb
pop
or
fsubrs
xchg
sarl
mov
pop
mov
sub
call
outsb
lods
mov
pop
push
jo
pop
nop
pop
pushf
pushf
mov
pop
mov
and
pop
jmp
movsb
roll
push
enter
in
xor
ds
xor
ljmp
clc
loop
fadds
xor
das
xor
test
ds
mov
inc
lods
cmp
pop
push
and
inc
inc
xor
into
lods
lahf
mov
inc
orb
xor
aam
add
lds
popa
pop
clc
jg
arpl
lret
mov
sub
sahf
mov
cmpsl
nop
in
cmp
jb
sbb
inc
and
push
and
popf
xchg
adc
xor
sub
cwtl
arpl
movhlps
fs
sbb
in
xchg
pushf
lcall
clc
out
xchg
popf
dec
in
testl
push
lods
lods
pop
and
xlat
jecxz
xchg
fs
scas
push
xchg
push
mov
shll
jns
or
in
push
ror
cli
repz
aam
int
lahf
sub
xchg
and
pop
jmp
or
or
mov
cs
push
fistl
std
push
xchg
jge
adc
push
pop
std
jb,pn
loopne
xchg
and
outsl
mov
stos
sub
fldt
arpl
iret
inc
cld
sbb
pop
inc
xor
or
out
dec
rcl
jo
cltd
push
push
inc
sti
xor
cld
or
push
sbb
xchg
popa
aaa
jg
add
add
sub
js
xchg
mov
and
pop
cmp
mov
shlb
ss
out
jl
and
fcmovnu
stos
or
shlb
or
test
lock
out
mov
fistpll
sbb
inc
jg
xor
jge
and
mov
lea
fwait
out
fwait
sahf
lods
xchg
std
lods
scas
in
pxor
lods
lods
fnstenv
imul
xor
dec
mov
push
shlb
mov
and
push
mov
or
dec
mov
xchg
add
lcall
lds
jl
xchg
pop
nop
jo
std
xchg
xchg
ss
push
push
jno
mov
je
mov
adc
fcmovnu
lahf
xchg
pop
aas
bound
rcrb
ret
cltd
cmpsl
loopne
adc
fisubs
addr16
popa
or
xchg
jl
repnz
fisttpll
sbbb
fldt
pop
and
std
jns
jbe
shlb
std
xchg
cld
mov
push
imul
mov
pop
fst
test
sbb
inc
adc
xchg
cmp
je
cmpsl
cs
out
aad
aam
das
addr16
lret
fwait
xchg
add
xchg
add
aam
call
mov
xlat
iret
mov
xlat
std
ss
xlat
out
ss
xlat
les
movsb
xlat
lods
movsb
add
xor
ret
mul
mov
lock
orl
mov
orl
add
addl
add
sbbl
add
sbbl
add
fldt
sbb
mov
popf
rorb
and
mov
inc
pop
pop
push
shlb
or
or
fdivrl
mov
jns
les
fwait
dec
push
dec
mov
xor
lcall
ficompl
iret
mov
fwait
sub
fldenv
push
stc
mov
xchg
xchg
xor
xor
nop
insl
in
test
orb
loope
fisubs
mov
cmpsl
adcb
and
gs
hlt
add
jmp
push
mov
dec
sub
scas
pop
add
dec
dec
cwtl
insl
mov
cli
shrb
loop
cmpsl
ljmp
xlat
jp
adc
fsubrl
cld
mov
pop
pop
push
pop
popf
es
mov
pop
shrl
les
and
or
mov
sbbb
mov
stos
add
fiaddl
mov
outsb
shl
sbb
in
fidivs
popf
mov
jb
mulb
mov
fcoml
add
pop
rclb
fmul
xlat
out
cwtl
aaa
sahf
cmc
sub
lret
dec
test
out
or
push
sub
xchg
cmpsl
mov
addl
jno
shrl
sahf
icebp
repz
scas
jb
frstor
sahf
mov
pop
inc
mov
dec
push
insl
inc
and
aaa
stos
cmc
insl
sbb
xor
mov
lea
int3
pop
dec
and
jmp
xor
and
ss
dec
fldt
sbb
mov
in
dec
or
mov
lds
dec
stos
stos
fstps
cmp
mov
and
lret
leave
and
xor
pop
adc
xchg
jo
cltd
rorl
cld
sbb
xor
leave
popf
rcll
jle
jae
xor
xor
test
inc
xor
push
stos
idivl
and
movsb
aam
mov
xor
mov
dec
dec
push
fcmovbe
xchg
cmp
sub
nop
rcrl
repnz
jnp
test
jl
repnz
xchg
mov
sub
arpl
xor
push
test
repnz
push
outsl
ljmp
leave
not
outsb
dec
out
push
rcrl
js
add
jl
insl
inc
pop
ljmp
enter
movsl
das
and
mov
add
add
hlt
pop
push
pop
outsl
push
shll
fnsave
jge
out
test
xchg
stos
and
inc
cwtl
jnp
inc
pop
push
sbb
outsb
mov
lret
push
cmpsl
push
xchg
fildll
cmpsl
lret
sub
cmp
dec
cmpsl
out
sub
sub
add
lea
cmpsl
mov
daa
jno
test
push
fsubrs
int3
push
bound
in
xchg
sub
sahf
clc
dec
test
inc
mov
hlt
jge
dec
inc
int
mov
xor
out
dec
repnz
roll
stc
rorb
jns
pop
clc
sbb
andl
mov
push
out
xchg
in
xchg
in
xchg
inc
cmpsl
xchg
mov
rcr
pop
shlb
rclb
rcll
and
mov
insl
and
and
cli
add
in
sub
sahf
test
add
and
push
xchg
jge
push
adc
das
push
stos
mov
xchg
inc
popa
xor
cmc
incl
push
fwait
in
insl
in
lcall
movsb
enter
test
sub
adc
ficomps
std
inc
mov
in
aam
jmp
push
fldenv
rcrb
sub
cmp
add
mov
mov
into
cmp
dec
mov
call
jecxz
je
cmpb
adc
inc
xlat
divb
shrl
mov
daa
mov
pop
arpl
adc
sbb
lret
lods
sub
movsb
xor
mov
push
xchg
test
int3
out
fucomip
xchg
cltd
daa
xor
jne
jg
xor
test
push
jne
cmp
in
imul
int3
adc
cmpb
les
lret
cmp
shll
inc
xchg
xchg
and
sub
jmp
and
push
outsb
mov
sbb
inc
ret
setl
xchg
lock
ficomps
xor
inc
push
stos
sbb
pop
push
push
stos
into
lret
pop
repz
cmpsl
ljmp
sahf
ret
mov
push
pushf
int3
sub
mov
insl
cmp
or
xchg
xor
xor
mov
mov
cwtl
mov
jo
sub
nop
fs
xor
repz
out
and
lods
in
adc
hlt
cli
adc
mov
ja
ja
add
insb
xchg
loope
jno
dec
hlt
xchg
lret
lock
psllq
outsb
add
iret
imul
sbb
out
test
adc
jmp
je
push
xor
outsl
sub
outsb
xor
mov
in
test
adc
jecxz
fadd
vpunpckhwd
loope
jb
add
lods
or
sub
das
jecxz
int
xlat
xor
lods
fldt
int
scas
push
xlat
push
test
dec
mov
lret
or
mov
sub
jb
fisttpl
fisttps
jmp
xchg
cs
jle
es
fmulp
out
pop
and
mov
movsl
xlat
into
dec
movsb
mov
fs
push
gs
or
xor
mov
out
cmp
inc
fwait
xor
repz
ror
popa
pushf
mov
xchg
push
dec
dec
popa
dec
pop
cmpl
add
sbb
xchg
int3
movsl
lds
movsl
and
sbb
rorb
xchg
fisttps
adc
rcrb
daa
mov
pop
sbb
cwtl
push
arpl
adc
adc
subl
insl
in
push
cmp
sub
ljmp
jb
test
or
and
jle
add
push
cmp
xchg
insb
rcr
roll
out
and
int3
cmpsb
lret
ficoms
push
je
xor
sub
test
push
aad
add
arpl
pop
aad
push
push
lahf
xchg
xor
inc
out
sub
jmp
mov
push
aaa
xor
out
test
insl
mov
dec
gs
push
add
xchg
sbbb
or
lret
sub
inc
lock
pop
int
dec
imul
mov
sbb
jb
lret
and
rorl
cmp
pop
mov
outsl
fiadds
push
lret
inc
popa
test
stos
inc
xchg
pop
les
cmp
out
inc
dec
sub
push
xchg
pop
je
jo
ljmp
pusha
mov
sahf
sarb
jecxz
icebp
jle
jo
js
add
adc
add
fcomp
fnsave
shrl
jo
mov
jo
or
xchg
test
pop
sbb
fsubl
ret
insl
scas
jno
insl
xchg
sub
and
popa
or
inc
dec
mov
into
outsl
jg
jns
lcall
xchg
xchg
add
fisubl
lcall
push
cld
outsl
jo
ficomps
xor
cmp
scas
or
fisubrl
mov
out
in
imul
repz
fisubrs
xchg
or
leave
test
jae
and
pop
fidivrl
mov
xor
push
or
push
daa
and
xlat
mov
dec
nop
push
leave
xchg
fcmovbe
mov
pusha
push
adc
inc
mov
inc
clc
ds
mov
fisubrs
rcll
lret
xchg
pop
bound
sbb
cld
fs
sahf
jnp
shr
arpl
rclb
in
push
dec
inc
sub
push
push
lret
push
nop
xchg
inc
mov
pop
or
mov
xchg
popf
and
mov
and
ss
mov
and
insb
movsl
je
add
andl
into
sarl
mov
lea
mov
mov
adc
and
mov
adc
dec
pop
fmuls
fadds
mov
sbb
lahf
mov
mov
inc
jp
mov
sub
xor
pop
jmp
into
pop
setnp
fwait
adc
or
mov
push
inc
ja
cltd
std
iret
mov
aam
into
inc
sub
outsb
pop
jae
jbe
pop
insl
mov
push
out
mov
outsb
scas
adc
push
push
orb
leave
stos
inc
ficoms
sbbb
je
adc
mov
inc
mov
andl
jecxz
fisttps
push
repz
fbstp
mov
cmp
jge
push
fnstenv
jo
push
cmp
or
or
rol
sub
push
mov
push
jge
push
insb
adc
xor
push
pushl
adc
andl
cmp
mov
cmp
xchg
inc
jbe
mov
int3
pop
inc
popf
in
fptan
push
xchg
push
test
sub
adc
das
shll
jle
mov
mov
inc
nop
dec
add
fs
mov
lret
pop
mov
pop
mov
sub
pop
sub
movsl
das
sbb
lods
and
cwtl
outsb
mov
inc
inc
cwtl
mov
ljmp
popa
imul
mov
xchg
stos
and
jae
pop
or
mov
hlt
xchg
js
in
mov
sti
or
dec
sub
xchg
cmpsb
insb
mov
scas
nop
xorb
fsubrs
imul
or
imul
je
adcb
push
sub
test
xchg
mov
add
imul
xchg
dec
sub
push
ficoml
data16
insb
mov
out
push
mov
adcb
jnp
stc
or
out
lret
sbb
ss
sub
popa
and
mov
negl
adc
popa
adc
xchg
repz
shrl
and
lahf
jg
add
sbb
sub
xorb
inc
lahf
xchg
sahf
and
mov
xchg
mov
jb
cwtl
fldcw
cs
push
fs
cmpsl
push
or
arpl
and
cld
inc
fwait
ljmp
insl
rolb
call
push
xor
std
push
jnp
dec
xor
dec
xacquire
jbe
es
jbe
mov
cmp
fs
addr16
repnz
add
fdivr
stos
push
cmpsb
xchg
pusha
aaa
add
ss
xor
add
mov
pop
fbstp
data16
cwtl
mov
test
bound
cmp
pop
test
test
add
jp
push
dec
cmp
call
fdivp
push
cmpsb
fstpl
outsb
cltd
enter
subl
jnp
ja
mov
xchg
add
cmp
repnz
or
mov
ds
int
imul
mov
insb
cmpsb
icebp
jbe
test
std
push
mov
add
jnp
sbb
bound
inc
push
insb
je
push
mov
test
cmp
mov
dec
into
loop
popf
test
cmp
add
in
ficoml
push
or
shlb
mov
popf
mov
data16
fldcw
popf
xor
rcrl
push
mov
jo
ss
enter
or
pop
sub
cld
lahf
xor
xor
hlt
cmpsl
popa
out
cmpsb
imul
idivl
dec
push
inc
cmp
mov
aam
or
pushf
cs
mov
xchg
pop
ficomps
std
movsb
insb
xchg
aad
sub
sub
jmp
aad
rclb
xchg
data16
jge
add
xchg
sbb
cmc
shlb
inc
or
dec
and
mov
jb
shrl
xchg
mov
in
cmp
jl
xchg
xor
test
ret
and
movsl
mov
in
lret
adc
adc
xchg
lods
dec
jle
cmp
lock
xor
jne
out
fwait
out
lods
aam
out
jo
sub
mov
inc
cmp
cmpl
jbe
lods
jg
cmp
sub
mov
cld
mov
in
fsts
ljmp
dec
adc
ss
dec
cmp
adc
std
push
stos
pop
fadd
rorl
jp
pop
lods
das
or
xchg
add
cli
notb
cmp
fcoml
mov
mov
push
aas
pop
jae
mov
push
add
lods
xor
mov
sahf
jb
jmp
test
fmulp
arpl
dec
sub
scas
in
mov
jmp
pop
xor
dec
sbb
movsb
ret
es
mov
shlb
shll
jp
pop
push
and
mov
ror
adc
and
cli
insl
inc
inc
and
or
push
cmp
adc
rolb
lret
cmpsb
mov
push
xor
int
aad
incb
pop
sbb
rorb
int3
mov
mov
lahf
aaa
add
cmp
pop
jecxz
inc
add
addr16
mov
jbe
push
adc
leave
or
cltd
xchg
ds
js
push
mov
mov
mov
aam
std
dec
push
in
jl
dec
push
sar
fiaddl
fcoml
mov
sbb
mov
js
xor
xchg
test
push
pop
mov
stos
roll
fiadds
dec
jle
pop
jecxz
and
pop
lea
sbb
fstp
pop
mov
daa
icebp
dec
into
push
xor
pop
subl
mov
shrl
sarb
push
dec
imul
loope
shl
mov
xchg
imul
enter
mov
push
jae
sub
clc
xchg
divl
xchg
fwait
inc
and
clc
and
cmpsl
lret
scas
inc
or
mov
mov
lahf
xchg
nop
addr16
jns
fnstenv
dec
mov
addr16
dec
push
mov
and
loopne
mov
adc
fiaddl
adcb
xor
das
xchg
leave
cwtl
pop
or
fistps
icebp
ja
jmp
dec
sbb
jns
ror
test
aaa
and
aam
cmp
test
or
and
lods
mov
daa
mov
lahf
cmp
xchg
sahf
mov
lds
and
testb
mov
sub
cltd
bound
loope
insl
dec
test
cmp
cmp
cmpsb
aad
movsl
scas
test
mov
push
push
and
mov
stc
xchg
imul
test
dec
bound
add
lret
mov
inc
mov
mov
adcl
sub
dec
push
shrb
scas
cwtl
jb
sbb
mull
iret
inc
dec
lahf
fistpl
mov
stos
xchg
call
pop
subl
pop
pop
dec
or
pop
arpl
xor
cld
icebp
mov
data16
push
and
scas
add
push
mov
bound
xchg
xchg
imul
scas
inc
mov
daa
push
hlt
xchg
cmp
movsb
je
add
xchg
fs
push
mov
mov
rclb
xchg
cmp
and
jnp
xlat
bound
hlt
insb
insb
dec
adcl
pop
jno
les
mov
mov
cmp
shlb
les
in
arpl
mov
adc
mov
aad
sbb
dec
pushf
jg
inc
sahf
add
cwtl
mov
push
sahf
xor
loop
fidivrl
aad
xor
test
rclb
popf
das
mov
push
out
enter
aas
dec
dec
mov
lds
mov
xor
out
cmpsb
adc
fimull
lahf
stos
xchg
fwait
repz
mov
leave
and
std
dec
cltd
js
pop
pop
aas
gs
jmp
xchg
mov
arpl
xchg
mov
popf
xor
orb
mov
hlt
stos
xchg
cmpsb
and
loop
xchg
mov
data16
xchg
dec
test
hlt
sbb
dec
stc
sub
lods
xchg
test
out
push
outsl
insb
cmc
mov
aad
sub
das
sub
cmpsb
lcall
leave
je
or
adc
push
push
adc
mov
cmp
sbb
dec
mov
mov
and
insl
frstor
clc
cltd
lods
stos
fsubl
jmp
movsl
or
ds
mov
mov
pop
push
ss
int
bound
movsb
push
xchg
icebp
xor
movswl
fstpt
xor
lods
sub
and
sahf
fistpl
lcall
cwtl
pushf
out
lret
sti
mov
jl
insl
jmp
sub
mov
leave
mov
jle
pop
or
xor
cmpsb
repz
or
iret
mov
inc
test
xchg
dec
xchg
xchg
inc
fildll
in
adc
mov
dec
mov
out
add
cmp
and
js
inc
andb
dec
adc
imul
rclb
call
pop
xor
ret
daa
lods
dec
adcb
mov
pop
mov
cmp
mov
scas
mul
sbb
pushf
xor
dec
rorb
adc
shr
pop
fldt
push
out
mov
rclb
int3
lea
cmc
insb
lret
lahf
mov
pop
scas
xchg
es
push
les
loop
ret
shlb
mov
enter
imull
fldl
dec
sbb
insb
or
sub
lods
jmp
outsl
aaa
pop
mov
leave
sti
test
pop
int
and
jno
pop
pop
dec
ret
xchg
negl
aad
lcall
in
mov
sbb
xor
hlt
add
or
dec
pusha
push
mov
mov
mov
add
lcall
xor
test
and
shlb
pop
cltd
cmp
add
jne
jnp
mov
bsr
inc
insl
fst
gs
jno
fidivrl
and
pop
ds
cmc
mov
ret
pop
js
jne
mov
cmp
imulb
push
or
pusha
stc
mov
in
shl
in
fsts
cmp
cli
fdivr
add
cwtl
cmpsl
das
iret
mov
mov
arpl
clc
outsl
cmp
popf
or
xchg
mov
pop
and
mulb
mov
pop
push
mov
push
pop
sub
pushf
or
dec
adc
or
lcall
cmc
or
pop
icebp
adc
jno,pt
popf
add
adc
repnz
sub
cmp
push
dec
dec
repnz
ret
scas
sbb
in
add
popf
jecxz
inc
clc
sbb
jl
in
xchg
addb
sbb
jno
mov
test
xchg
pop
testb
cmp
adcb
test
rcrl
jle
mov
lods
adc
fsts
mov
xor
scas
mov
test
xlat
or
in
push
mov
jg
test
inc
xor
enter
add
arpl
clc
fs
cmp
enter
test
pop
xchg
push
les
repz
fbld
imul
inc
repnz
imul
or
repnz
mov
sub
sbb
mov
repnz
mov
das
cmp
mov
xchg
dec
jo
sahf
jle
jne
pop
mov
mov
jg
cli
ljmp
je
mov
mov
cmp
div
ror
stos
dec
xchg
inc
je
cmp
nop
cld
rcr
adcl
imul
jg
dec
imul
movsb
cmp
sbb
jb
xchg
push
mov
pop
roll
mov
cmp
adc
movsb
sti
lock
sub
mov
and
lcall
lock
and
jnp
xchg
sbb
sbb
or
sub
inc
or
pop
cmp
fcmovu
xor
xchg
push
insb
pop
js
cmp
sub
cli
lcall
inc
adc
lds
inc
sahf
jo
nop
daa
test
lcall
insb
fwait
inc
mov
dec
cli
mov
scas
or
fidivl
cmp
jecxz
inc
movsl
fs
xor
ss
lock
or
scas
incl
jb
mov
jne
and
cmpsl
loopne
into
and
and
and
scas
imul
aad
sahf
mov
aad
ljmp
xchg
fbld
jno
xlat
sub
sbb
add
movsb
or
loopne
cmpsb
pop
divb
orb
xchg
add
push
pusha
loop
scas
jmp
cs
and
nop
and
jle
mov
push
sarl
jg
loop
aas
je
add
push
imul
fnsave
addl
test
cmp
xchg
imul
inc
mov
test
addr16
mov
pop
push
dec
sbb
loopne
pushf
mov
aad
fidivs
in
push
and
pop
arpl
test
loopne
xlat
sub
push
sbb
ret
sub
mov
imul
ja
insl
mov
cmp
je
pop
adc
inc
jmp
shll
jl
call
xor
subb
or
push
fisubs
loopne
mov
jo
repnz
lods
xchg
cmp
cmp
insl
add
adc
out
insb
mov
ret
mov
xchg
into
lods
sarb
xor
or
cmp
pop
mov
push
mov
add
pushf
into
pop
cmp
aad
push
lret
sub
sets
xchg
mov
inc
or
mov
dec
push
mov
push
inc
xor
popf
mov
aaa
mov
les
shlb
data16
fildll
jno
pop
pop
loopne
into
icebp
cli
sub
xchg
adc
imul
lea
sbb
dec
xor
pop
push
cltd
lret
push
adc
cwtl
xor
push
jp
mov
pop
popa
sbb
pop
push
mov
into
stos
std
outsl
fmuls
test
xchg
aam
or
das
test
or
es
sub
scas
bound
clc
mov
hlt
je
or
inc
rcrb
xlat
popf
xchg
test
lcall
movsl
cmp
ficompl
ror
int
pusha
ror
out
fmull
or
add
or
mov
shrb
and
jmp
arpl
adc
pop
mov
cmpsb
out
rolb
notl
adc
rorb
dec
mov
xchg
cmp
loopne
roll
xchg
sub
mov
jl
int3
push
rcl
or
fadd
mov
out
insl
std
push
repnz
ret
test
dec
insb
popf
dec
rcll
cmpsl
push
jo
stc
imul
insl
fwait
xchg
addr16
ja
dec
cld
lahf
mov
decb
out
mov
and
loopne
rol
jmp
lock
loop
fstl
dec
and
cmp
or
aad
add
xchg
repnz
mov
lea
sbb
push
hlt
mov
inc
icebp
mov
stc
test
leave
out
lods
mov
mov
or
jmp
cltd
push
call
pop
les
loope
inc
in
scas
xor
es
fsubrl
and
cmp
std
pop
mov
sbb
jl
fs
aaa
cmp
cmpsl
outsb
les
test
mov
jno
inc
fadds
pop
inc
pop
sub
ja
pop
das
lret
xor
mov
and
fimuls
mov
js
mov
in
xor
xchg
jae
rcr
xor
cltd
movsb
xchg
and
aad
adc
out
push
incb
popa
add
lock
push
mov
icebp
push
aas
cld
jp
sbb
call
rclb
jo
out
and
sahf
je
int3
xchg
sbbb
shlb
je
dec
push
dec
lret
mov
mov
int
xlat
mov
out
outsl
int
lcall
ret
sarl
pop
lahf
mov
inc
fidivrl
push
cld
dec
stc
fcoml
mov
cmp
adc
sahf
fwait
enter
push
lods
lods
aam
roll
outsb
int
xor
in
pop
outsl
test
ljmp
jp
add
pop
mov
push
xorb
adc
sbb
xor
lahf
mov
xchg
test
into
cmp
add
addr16
rolb
and
test
add
jmp
gs
ss
out
lods
and
insl
cmpsl
and
rorl
out
mov
loope
scas
mov
fnstcw
scas
jecxz
lods
ds
jae
hlt
pop
data16
test
xorl
pushf
xor
adcb
xor
mov
pop
mov
insl
loope
mov
inc
cld
lods
push
xchg
or
scas
scas
jno
push
inc
adc
sbb
cmpsb
sbb
adc
xchg
dec
ret
or
xor
fmuls
pop
int
sub
sbb
in
scas
ljmp
jge
xor
popa
test
test
and
inc
inc
and
enter
lret
push
stos
mov
xchg
xchg
mull
je
adc
mov
push
cltd
rcl
add
pop
or
inc
mov
adc
or
sub
inc
pop
movsl
mov
rolb
cltd
sub
imul
lcall
divl
addb
mov
pop
ret
pop
pop
xlat
in
xor
sbb
mov
or
mov
jbe
sub
dec
arpl
adc
sbb
fisttpll
nop
add
mov
cwtl
and
cmpsb
pop
outsb
enter
push
lahf
sub
xchg
cld
sbb
mov
mov
xchg
adc
dec
fcompl
jno
sbb
pop
sbb
test
cld
loop
sbbl
or
mov
lds
rorl
cld
movsb
setb
cmpsb
pop
jbe,pt
add
inc
bound
add
dec
arpl
out
mov
push
push
outsb
jb
aaa
cmpsb
adc
nop
movsl
pusha
xchg
lock
loope
in
ret
lods
mov
xchg
jae
gs
in
in
insb
mov
or
mov
cli
and
mov
lods
sub
jmp
xor
mov
mov
scas
dec
es
outsb
loopne
leave
fldl
and
scas
xchg
les
insl
jmp
mov
jae
sbb
repnz
mov
xchg
and
or
in
lods
jge
xlat
mov
mov
cwtl
xchg
push
add
cmp
and
fsubs
stos
insb
pop
push
mov
es
or
xchg
gs
mov
mov
rcl
cmpsb
imul
mov
add
inc
fists
pop
sub
pushf
jnp
icebp
cld
outsl
lods
nop
and
int3
and
pop
mov
lea
sub
cmpsl
dec
cmp
sarl
stos
adc
notb
adc
out
and
shl
test
shlb
shlb
jp
aas
adc
ret
dec
xor
sahf
out
push
sbb
idivb
mov
mov
scas
jle
fwait
inc
shrl
dec
sti
outsw
or
mov
outsl
aam
cmp
addr16
inc
lcall
sbb
nop
cwtl
das
lret
mull
push
sahf
cmp
insl
pusha
jmp
mov
xchg
adc
xchg
or
xchg
push
push
int3
pop
and
sub
xor
test
out
mov
mov
xchg
clc
mov
jo
sbb
adc
das
lcall
push
add
divb
call
lret
and
jl
loope
sysenter
popf
imul
or
sti
mov
lods
sarl
std
cld
jg
xor
mov
inc
or
and
movsl
push
lcall
mov
mov
sub
push
jae
mov
lods
mov
mov
push
idivl
or
inc
mov
sbb
xor
and
movsb
mov
out
jmp
or
and
push
inc
lods
out
icebp
cwtl
popf
and
and
xchg
rcll
pop
lods
or
popl
in
mov
ret
ljmp
ss
fwait
out
inc
mov
xor
ret
out
scas
fisubs
xchg
rolb
xor
jl
arpl
add
stos
jg
loopne
mov
mov
lds
sarl
adc
mov
enter
scas
jno
push
jns
enter
das
cmp
loope
sub
insb
mov
xchg
jg
mov
popa
adc
incb
and
xchg
mov
adc
jbe
cmc
ja
mov
xchg
mov
mov
pop
ljmp
mov
mov
or
lods
push
ret
cmp
nop
mov
adc
enter
hlt
jbe
scas
jp
mov
mov
and
cmpsb
cmp
cltd
stos
lods
dec
movsb
outsb
cwtl
push
cmpsl
inc
cs
rcl
fidivl
leave
adc
pop
jmp
repnz
add
mov
xchg
add
rcrl
std
ds
shl
sbb
jno
popf
cwtl
arpl
lea
pop
sahf
es
xor
rorl
jp
add
xchg
jecxz
xor
pop
in
pop
pop
xchg
jmp
push
jmp
test
inc
push
mov
in
nop
repz
mov
xlat
mov
xchg
push
dec
jbe
push
pusha
jae
cmp
int
or
adc
cld
les
pop
push
mov
fcos
adc
out
fwait
lods
scas
xchg
outsl
cltd
mov
scas
icebp
je
fcompl
fwait
mov
dec
cmp
icebp
stos
btl
bound
inc
shr
mulb
lea
test
and
xchg
adc
push
enter
dec
lret
jbe
cmp
xor
or
popf
sub
nop
cmp
dec
or
jl
ss
and
out
mov
popf
and
sahf
in
mov
sahf
loop
mov
and
jnp
pop
dec
out
jl
xor
scas
dec
cmp
pop
adc
out
adc
notb
cli
in
xor
lret
and
or
ror
jmp
mov
cmp
les
hlt
or
mov
sahf
pop
xchg
into
imul
push
jl
fisubrs
or
adc
lret
push
cmc
dec
and
adc
jp
lods
cmovl
xchg
iret
cmp
in
jge
cltd
aam
adc
es
loop
insl
mov
iret
sub
ss
repz
aam
lods
call
mov
pop
ret
adc
push
jmp
inc
jmp
adc
mov
lret
mov
cld
fs
add
faddl
in
xchg
and
leave
sub
jae
das
or
xchg
pop
in
add
xchg
shrb
jo
rcrb
pop
mov
popf
insb
ss
ja
les
push
xor
inc
rolb
adc
bound
setnp
mov
sbbl
inc
rolb
xchg
pop
inc
inc
scas
inc
lock
cwtl
das
xchg
scas
xchg
ror
xor
cmp
mov
rcll
pop
xchg
dec
adc
fimuls
ljmp
scas
cld
std
push
and
push
daa
jl
lods
test
inc
xor
ds
stc
fldl
fstpl
add
dec
xorl
inc
out
sub
adc
movsb
adc
xlat
and
push
les
gs
sti
lret
lcall
pop
jl
dec
insb
arpl
xor
and
mov
mov
setg
mov
mov
roll
xor
mov
cwtl
xor
out
fwait
pop
daa
push
push
movsb
cs
roll
scas
xchg
out
mov
scas
mov
lock
or
add
mov
out
pop
pop
call
and
rcrl
xor
mov
push
in
mov
jle
stos
or
int
sub
jbe
cwtl
orl
inc
sahf
sub
pop
dec
fldcw
dec
dec
and
icebp
orb
push
insb
dec
mov
push
mov
pushf
lea
mov
int3
xor
mov
bound
inc
daa
mov
mov
cltd
xchg
push
add
xchg
sub
arpl
mov
fstpt
loope
xor
push
sub
inc
into
out
mov
push
ret
shlb
int
xchg
lods
sub
mov
sahf
sbb
fsubrs
cmp
mov
cwtl
insb
sub
cmc
pop
testb
cmp
ljmp
ds
cltd
pop
push
add
cs
dec
pop
fdivr
dec
decb
xchg
push
call
mov
add
fidivl
mov
xor
insb
push
ja
mov
cmp
ret
addl
dec
ficoms
arpl
jl
shll
shr
mov
outsb
pop
out
scas
push
mov
xor
sbb
sbb
les
inc
incb
jmp
sub
cltd
mov
mov
sahf
push
sub
sbb
sub
jecxz
jle
mov
and
inc
pushf
push
mov
leave
inc
addb
add
inc
xchg
xchg
test
jo
adc
in
std
jg
cmp
popf
rclb
icebp
int
shll
js
mov
sbb
cltd
add
sub
jno
popf
jo
sarl
mov
mov
adc
or
mov
movsl
push
mov
jnp
or
xchg
mov
and
out
ret
cmpsb
sbb
cwtl
mov
stos
cwtl
push
call
xor
jp
push
xlat
push
mov
mov
mov
mov
xchg
mov
data16
les
test
popa
xchg
aaa
push
sbb
les
mov
push
sub
inc
andl
or
lods
dec
inc
mov
xchg
mov
fidivrs
xchg
add
pop
xchg
fimull
test
pop
mov
adc
and
dec
enter
in
xorb
lret
in
mov
adc
add
mov
push
xchg
cltd
ds
lods
mov
repnz
pop
xor
into
cmc
in
or
pop
sbb
or
add
sub
icebp
xchg
cmpsb
jbe
outsl
sub
adc
je
sahf
mov
lods
aas
jae
clc
mov
mov
jne
imul
lea
push
and
pop
cmp
stos
sbbl
jmp
sub
nop
cmpsl
ret
and
sti
out
lcall
ja
add
outsb
nop
jle
ja
jmp
inc
jecxz
aam
xlat
pop
mov
std
sub
xor
scas
stc
pop
mov
movsb
cs
adc
imul
mov
es
inc
int3
mov
outsb
xchg
push
jnp,pn
gs
sahf
sbbl
mov
imul
push
insl
mov
stc
outsl
and
enter
loopne
inc
xor
dec
or
movsl
aam
jp
gs
mov
roll
mov
fdivrs
xorl
inc
test
dec
cmp
mov
sbb
or
mov
sbb
cmpsl
notb
push
ss
mov
and
loopne
lods
sbb
dec
sti
sbb
cmp
nop
sarb
ret
adc
lea
ja
cmp
xor
sbb
xchg
jae
adc
icebp
lret
mov
fs
into
jge
mov
pop
xchg
and
push
adc
nop
push
fcmovnb
cs
lea
xchg
adc
int3
add
mov
jbe
clc
mov
fistpl
pop
rorl
mov
out
xchg
mov
rcr
jae
sbb
add
scas
push
lods
pop
mov
and
repnz
outsb
add
xor
mov
iret
int
movsb
mov
fstpl
mov
fs
daa
rcll
adc
shlb
push
aam
xorl
sbbl
mov
lea
and
sarl
sarl
dec
mov
mov
lods
out
or
jbe
sub
add
mov
mov
addr16
push
sahf
xor
fimuls
jbe
push
aam
lahf
lock
push
inc
daa
jnp
fcomip
sub
addr16
stc
push
vmovaps
cmp
adc
lods
sbb
sahf
sub
xlat
aaa
pmaxub
or
nop
enter
dec
push
cmp
sarl
cli
adc
fstps
inc
lods
mov
sahf
fwait
adc
imul
repnz
lcall
sub
lcall
nop
xlat
adc
pop
mov
mov
aam
repz
add
and
stc
das
xor
pop
push
xor
test
fldt
inc
sbb
jns
inc
loopne
mov
imulb
lret
xchg
cmp
push
mov
addr16
cmp
cmpsl
sbb
cwtl
aaa
dec
xchg
pushf
fldt
pushf
pop
icebp
jmp
mov
mov
dec
arpl
aas
mov
cltd
xor
ret
outsl
in
les
hlt
xchg
mov
orl
xor
xchg
out
inc
in
and
imul
imul
sahf
dec
xchg
inc
sub
je
popa
push
pop
jbe
mov
xchg
scas
pop
aad
loopne
cli
scas
insb
push
xchg
push
orl
fstpt
add
push
lahf
adc
stos
sub
push
aad
and
dec
bound
lret
outsb
xchg
inc
dec
addr16
inc
pop
xchg
dec
pop
sub
adcb
pop
gs
test
jno
add
ret
cld
sar
test
cld
mov
and
loop
testl
subl
xor
pop
jecxz
fldcw
mov
xor
dec
push
mul
adc
in
mulb
and
sub
ffreep
arpl
add
out
xchg
adc
sbb
arpl
push
xor
mov
push
push
pop
push
nop
sub
fsubl
lods
call
mov
dec
xchg
mov
aas
mov
andb
icebp
adc
adc
and
ret
or
xor
mov
mov
mov
and
sbb
sbb
in
iret
outsb
xchg
inc
jmp
push
push
cwtl
cmc
mov
das
pop
or
pop
inc
jg
jbe
mov
je
popa
adc
arpl
adc
ljmp
andl
add
sub
sbb
mov
cwtl
lret
push
mov
das
lea
xchg
pop
push
xor
add
repnz
sbb
cs
xchg
xchg
mov
jg
push
mov
and
fdivrp
cmp
adc
pop
dec
imul
in
xor
mov
sub
xchg
outsl
add
std
popf
push
cli
jnp
jno
mov
inc
sub
mov
imul
jbe
fsubl
and
xor
popf
xor
mov
mov
or
jp
adc
xchg
xor
add
lods
out
outsl
aas
xor
mov
shlb
pop
pop
mov
jbe
dec
loopne
cmp
mov
arpl
shr
scas
xchg
gs
push
loopne
sti
or
add
pop
or
add
xchg
push
sahf
pop
xlat
data16
popf
test
xor
insl
stos
shl
shrb
mov
xor
scas
pop
insl
cmpsl
mov
movsb
pushf
mov
cmc
inc
cli
ds
call
imul
loope
mov
add
cmp
mov
inc
shrb
cmpl
jne
inc
push
repz
ljmp
mov
lcall
int3
jae
push
or
mov
dec
sbbb
lret
and
inc
adc
jbe
cld
inc
add
sub
jae
mov
lock
cmc
lahf
cltd
mov
repnz
clc
cmp
lods
push
test
js
inc
fildl
arpl
dec
ror
fldenv
scas
sub
jne
mov
or
stos
sbb
test
cltd
add
mov
stc
js
or
jmp
das
pop
dec
mov
mov
push
jmp
scas
xlat
pop
mov
jg
xchg
neg
cmpsb
mov
andb
loopne
push
jbe
push
mov
or
shlb
or
mov
in
outsb
pop
mov
pop
jne
xor
dec
cmpb
test
mov
add
mov
iret
mov
repnz
loop
cmp
clc
insb
jp
pop
clc
rol
mov
mov
cmpl
cli
mov
cmp
inc
imul
xchg
adc
jle
imull
and
pop
xlat
xchg
push
lods
push
cmpb
jno
es
sbb
push
xor
fucomip
xchg
roll
jbe
adc
ljmp
gs
lea
cltd
lcall
rcrb
sarl
push
out
xor
adc
lcall
xlat
or
push
imulb
fstpt
test
test
xchg
adc
divl
or
out
outsl
rcr
lods
jecxz
negb
or
jmp
sti
popf
fwait
push
cmp
sub
mov
fwait
fwait
inc
jecxz
mov
sub
aam
push
lret
in
xchg
sub
mov
flds
in
int
cmp
jg
inc
add
filds
sbb
in
cmp
pop
lods
lret
or
inc
lahf
adc
notl
bound
out
idivl
test
xor
mov
fdivs
outsb
cwtl
pop
add
imul
lds
mov
mov
mov
pop
fnstsw
mov
push
aaa
addr16
cmp
ljmp
sbb
xchg
push
xchg
cmp
shl
cmp
popf
loopne
and
sub
inc
mov
in
int3
call
mov
stc
jle
or
adc
movsl
pop
shrl
and
sub
sahf
and
sub
clc
or
fnstsw
cwtl
pop
xor
xchg
cmp
xchg
stos
xchg
push
cltd
pop
shl
faddl
clc
cli
mov
cmc
popa
xchg
jb
mov
mov
xlat
fimull
push
in
jmp
movsb
test
or
mov
push
cld
xchg
out
sub
in
mov
xor
push
inc
push
cld
jae
rorb
push
out
pusha
sub
adcl
push
mov
pop
stos
js
scas
adc
mov
cmpl
mov
mov
mov
xchg
xorl
inc
xor
test
mov
jmp
jno
jne
cmp
mov
stos
push
cmc
add
mov
sub
nop
mov
std
lret
aas
add
testl
je
movsl
fnstenv
lcall
sub
sub
pop
cmp
push
xchg
ss
jno
pop
mov
push
cs
adc
test
sub
cmp
jo
repnz
call
push
pop
loope
popf
out
lock
jle
test
dec
and
fcomps
sub
in
dec
outsb
jle
add
push
test
icebp
shll
cmc
movsl
call
pushf
or
ficompl
nop
pop
and
jne
adc
mov
add
sub
repz
repnz
xchg
lret
xchg
push
add
mov
stc
mov
jl
fnstcw
xor
pushf
fisubrs
cmp
sub
and
into
hlt
and
stc
bound
or
daa
xchg
dec
mov
cltd
cld
and
not
jne
call
or
push
fidivrl
xchg
add
cli
out
iret
sub
and
adc
pop
frstor
test
enter
add
cmp
pop
enter
int3
bound
pop
lods
out
leave
adc
or
pop
das
ret
dec
repz
jmp
popf
hlt
mov
cmp
out
xor
inc
test
xor
stc
push
xor
aam
inc
dec
pop
sahf
mov
xor
lahf
pop
lret
adc
adc
push
out
insb
mov
xor
aad
xlat
cli
lcall
mov
mov
mov
xor
and
jmp
dec
sub
adc
aad
add
push
leave
lcall
iret
sub
stos
xor
push
mov
and
leave
inc
call
push
std
jnp
lods
fistps
cld
pop
dec
pop
str
cmc
xchg
jle
in
into
cmpsl
rcll
test
push
jecxz
sub
popf
sub
pop
push
outsb
mov
sbb
fidivs
cmp
jge,pn
or
push
sahf
dec
out
jb
adc
pop
jge
inc
add
addr16
jae
movsl
mov
or
mov
push
xor
add
mov
add
jle
sub
sti
movsl
lcall
sbb
insl
vorps
mov
or
xchg
pop
nop
cwtl
and
xchg
xlat
push
mov
xchg
adc
fistps
inc
inc
aad
mov
mov
inc
and
mov
mov
cld
push
xchg
lods
sbb
popf
xchg
lret
push
xor
outsb
rol
dec
lods
cld
push
ror
or
and
inc
sub
jge
es
sahf
push
xchg
jle
dec
adc
sbbl
pop
lret
jecxz
sub
rcr
addr16
sbb
adc
addl
cld
dec
mov
xchg
xchg
sbb
cwtl
fnsave
cmp
enter
ss
add
sbb
xlat
mov
inc
cwtl
inc
cwtl
mov
scas
notb
jecxz
dec
sbb
nop
jb
leave
lret
pop
inc
movsb
sub
or
stos
aad
test
xor
test
add
dec
hlt
mov
lret
adc
adc
mov
ret
int
lods
fisttpl
mov
push
dec
adc
sub
push
aam
loope
lods
mov
dec
int
sub
jg
mov
or
inc
push
fisubrs
mov
inc
mov
clc
negl
lds
lcall
scas
xchg
lock
mov
sub
gs
sub
pop
xchg
mov
out
cs
pop
push
jge
adc
pop
sub
xor
mov
push
pop
clc
popf
ljmp
jmp
insl
sub
out
or
pusha
in
sub
pop
iret
or
ja
dec
xor
out
xchg
lea
xchg
loopne
push
divl
fs
pop
mov
add
cmp
je
outsl
lret
hlt
or
fbld
mov
in
mov
jge
sbb
push
fisubrl
sahf
add
icebp
fwait
mov
mov
jno
popa
mov
sbb
jnp
dec
in
cltd
xor
popf
dec
cwtl
arpl
das
and
cwtl
xchg
mov
das
mov
cmp
mov
call
dec
xchg
mov
outsb
and
jle
mov
adc
ret
fisubrl
out
insb
jnp
loop
fnstcw
xchg
ljmp
pop
dec
loop
imul
push
inc
adc
cmp
push
xchg
jb
pop
ljmp
sub
pop
mov
loopne
jns
adc
stos
mov
adc
jle
cli
leave
pop
scas
ss
cmp
and
loop
cmpsb
scas
testb
lret
pop
xchg
dec
mov
jg
and
mov
inc
lods
in
push
push
inc
sub
jmp
and
test
xor
and
sahf
and
jb
sbb
push
jg
std
mov
or
fwait
add
test
xchg
popa
xchg
mov
pop
outsl
mov
test
cli
sbb
sbbl
sti
add
cmpsl
push
push
mov
pop
cld
loop
mov
mov
pop
xor
sub
sub
mov
aaa
jle
leave
loop
insb
cltd
and
push
iret
mov
mov
jbe
mov
push
xchg
and
int3
mov
test
inc
inc
xor
ljmp
cmpsl
push
or
inc
xchg
sbb
pop
mov
mov
jmp
into
mov
sub
aaa
jmp
cmp
ja
ret
imul
push
or
xor
stos
push
jne
xchg
mov
sbb
fsubr
cwtl
aam
data16
jno
sub
test
call
inc
lahf
fldt
cld
popl
xchg
pop
cwtl
cli
out
out
shll
outsl
lods
dec
pusha
ret
xchg
ljmp
jp
push
js
icebp
lcall
jg
outsb
mov
mov
mov
and
add
sub
mov
adcl
fcoms
cmpl
lock
inc
pop
jmp
in
lcallw
inc
aam
cmp
mov
leave
outsb
cmp
pop
sbb
pop
mov
mov
pop
movsl
sbb
mov
push
mov
ljmp
dec
out
mov
mov
push
mov
mov
mov
add
xchg
ret
ss
mov
jmp
mov
pop
cli
push
arpl
cmp
dec
popf
inc
jle
ret
push
mov
sub
daa
out
imul
lret
mov
fsubl
mov
cli
fisttpl
stc
add
mov
xorb
cmpsb
outsb
adc
lahf
icebp
and
xchg
mov
cmp
scas
or
push
xorb
movsb
movsb
in
out
js
testb
jp
mov
mov
inc
jae
dec
jno
aaa
xchg
in
jg
lret
sub
jecxz
pop
enter
and
xchg
and
cli
dec
lret
mov
mov
xchg
in
popa
cli
rcrw
mov
xchg
mov
xchg
mov
sbb
faddl
test
pop
inc
jb
lods
sub
shl
xor
push
out
cli
test
push
dec
or
test
and
pop
je
jg
pop
add
mov
repz
dec
cltd
mov
xlat
popa
cs
pusha
fldl
lret
pusha
in
popa
xlat
pusha
fdivrs
insl
or
cmpsb
inc
mov
jne
lods
jl
cmp
scas
cld
popa
xchg
and
rcl
cs
xchg
test
sub
gs
inc
and
rep
shrl
push
out
add
push
aaa
inc
fidivrs
daa
add
stos
or
mov
fnsave
stc
movswl
jo
xor
cmp
push
push
movsb
inc
and
imulb
push
xor
outsb
outsb
rclb
dec
sbb
mov
mov
arpl
mov
insl
idivl
xchg
pop
push
jb
pushf
outsb
fs
sbbl
dec
xor
fdivrs
test
mov
push
das
or
mov
jb
xor
popf
cmp
xor
inc
pop
lcall
mov
test
adc
je
mov
mov
ss
pop
mov
mov
sbb
fcmovnb
mov
loopne
test
xchg
sbb
jnp
mulb
enter
xchg
out
scas
dec
in
add
mov
xor
nopl
pop
pop
dec
adc
mov
int
mov
bound
sbb
push
mov
jmp
sub
mov
mov
mov
jno
and
push
jb
inc
sbb
xchg
and
xchg
pop
bound
repz
or
fldcw
or
ss
cmpsl
pop
pop
dec
shl
xor
daa
fsubrl
sbb
jbe
and
mov
in
or
mov
movsl
cmp
push
out
xchg
insl
mov
mov
mov
aaa
mov
clc
sbb
jne
ds
mov
xor
push
les
cmp
or
testl
std
xchg
pop
mov
or
orb
sahf
mov
fld
daa
dec
cmpsb
and
sahf
sbb
dec
mov
dec
sbb
push
cltd
jg
jecxz
sub
ficompl
jno
cmpsb
test
mov
mov
pusha
data16
in
inc
mov
adc
aad
in
xchg
inc
ja
and
jle
sub
cmpsl
xor
mov
mov
mov
js
loopne
arpl
xchg
pop
dec
add
mov
inc
popf
add
xor
or
je
sub
mov
sub
shrl
adc
xor
in
cld
ffree
mov
push
and
in
es
out
xor
and
mov
popa
jle
ds
mov
push
cmpsl
sub
sub
sbb
popf
mov
adc
add
add
push
and
mov
lcall
hlt
xor
fildl
je
jecxz
flds
cmp
sbb
xchg
pop
mov
push
lods
xchg
aam
inc
fistpll
ds
jmp
movsl
xchg
jmp
mov
lret
and
divl
fcmovu
xchg
push
int
into
mov
inc
xchg
arpl
fstpt
adc
testl
cld
mov
out
sub
pushf
fsubrp
add
cwtl
addl
out
or
jmp
fdivl
loope
cmp
cs
loop
rcr
cld
sub
inc
sbb
cmp
mov
push
in
dec
mov
or
xchg
in
arpl
mov
into
xor
mov
mov
mov
std
dec
popa
dec
pop
roll
cmp
fsubl
fmull
xchg
leave
shll
sub
pushf
add
sbb
nop
ds
xchg
and
mov
sbb
imul
lahf
outsl
addr16
xchg
xchg
nop
mov
stc
jl
out
cltd
addr16
subl
arpl
negl
adc
insb
push
rcll
push
aad
push
sub
push
iret
push
imul
dec
dec
shlb
adc
jae
push
scas
xor
push
sub
into
data16
mov
and
sbb
or
and
imul
and
pop
jmp
mov
mov
mov
sub
and
xchg
test
dec
imul
loopne
mov
mov
jl
inc
repz
aam
test
push
out
push
pop
mov
ret
or
cmp
popf
stc
call
iret
jmp
push
sbb
mov
cltd
popf
push
sub
push
and
in
std
and
mov
cli
scas
cli
sub
xor
pusha
sbb
xlat
bound
sub
cmpsb
push
mov
sub
and
popa
mov
lcall
and
cmp
push
and
dec
ror
imul
pop
lahf
lock
stos
and
push
inc
mov
dec
fcomip
fwait
push
mov
movsl
or
cld
adc
fld
or
add
push
mov
cmpb
xchg
mov
daa
push
lds
mov
leave
sahf
lcall
sbb
cmpsl
adc
inc
rcrb
pop
sbb
clc
mov
and
adc
mov
rorl
pop
es
mov
and
scas
ret
push
aaa
imul
sbb
sbb
dec
out
popa
or
dec
testl
jmp
in
adc
mov
aad
iret
pop
mov
cltd
rol
mov
mov
inc
adc
addb
mov
mov
mov
xor
loopne
jge
insb
shlb
mov
sbb
scas
imul
jge
jo
scas
pop
icebp
out
mov
jo
push
aad
mov
push
xchg
inc
mov
xor
push
cmp
jecxz
inc
sub
mov
dec
mov
aad
ds
push
loope
sub
aam
or
data16
lcall
fs
daa
add
shrl
fmuls
neg
jecxz
cwtl
xchg
cld
bound
cmovns
insl
xchg
and
sub
jae
popf
je
es
push
call
sbbl
add
test
fsubrp
sub
loope
sub
sub
das
ret
jecxz
add
cmpsb
rorb
std
pop
adc
xor
mov
xchg
pop
addr16
outsb
aad
test
and
call
push
xor
mov
popl
pop
nop
jl
dec
cmpsl
clc
out
lahf
outsb
fucomip
jo
in
aas
sahf
shl
stc
test
out
push
loopne
mov
sti
jb
fdivp
ror
out
scas
ss
ljmp
mov
mov
fstpl
fmull
mov
ret
mov
arpl
aam
outsl
push
push
ja
adc
adc
scas
es
int3
push
lret
enter
scas
jecxz
lahf
xor
mov
cmp
insl
add
jg
ljmp
jo
adc
push
and
push
iret
pop
adc
fdivl
add
mov
imul
mov
ficoml
lcall
xor
and
and
out
or
dec
repz
mov
pushf
jbe
mov
testl
out
lock
test
lods
imul
and
sub
sub
cmp
stc
dec
shlb
add
je
insb
clc
cmp
jp
sbb
inc
imul
test
cmp
sahf
cwtl
jns
or
sbb
ja
mov
mov
push
push
xor
mov
dec
push
scas
pop
xchg
lds
sub
sbbl
ds
push
pop
popf
movsl
xor
scas
loope
lahf
mov
rep
jecxz
lods
pushf
sub
lret
mov
mov
push
inc
pop
shrb
hlt
cs
or
ds
movsb
sub
je
idivl
test
fsubl
sbb
cmpsl
jecxz
fldenv
adc
adc
repnz
jg
cmpsl
sub
out
nop
cmpsl
pusha
popf
xchg
dec
sbb
shrl
sub
sbb
add
mov
sahf
out
jnp
xchg
fsubs
fnstenv
xlat
notb
hlt
xchg
and
jecxz
enter
sub
insb
adc
es
jp
jge
fisubl
cmc
mov
mov
iret
and
xchg
xor
xchg
sub
or
sbb
xchg
stc
cmpb
outsb
dec
aas
jl
xchg
stos
xchg
lods
in
outsl
xchg
xlat
dec
sbbl
ficomps
negl
data16
popa
outsl
ljmp
inc
or
loopne
xlat
jmp
lahf
cltd
xchg
sbb
xchg
xor
mov
popf
lock
insl
mov
cmp
int3
lahf
loop
jl
fildll
push
dec
xchg
fisubl
fsub
aam
ret
insl
test
cld
pop
lock
std
iret
mov
inc
sub
int
push
in
lea
addl
pop
clc
mov
test
lock
add
aad
cltd
iret
adc
push
dec
out
pushf
test
or
sub
mov
pop
insl
sahf
lret
pop
push
pop
aas
jp
rorl
xor
pop
cltd
add
xchg
mov
aam
data16
mov
mov
out
mov
jb
pusha
add
inc
add
icebp
cs
std
test
in
push
sbb
push
aad
lods
sbb
loope
mov
loope
jae
in
popa
incb
pop
sbb
jno
xor
repnz
xchg
jp
rcrl
rol
sbb
push
add
pop
int
adc
int
jbe
cmc
cmpsb
je
sub
mov
inc
add
popf
popf
int
mov
push
hlt
sbb
or
or
and
jp
outsl
cmp
pop
lods
adc
and
fwait
pop
add
loope
rcr
jae
push
push
enter
push
and
sahf
movsl
xchg
dec
in
rcll
mov
sbb
shlb
cmpl
in
push
sarl
xchg
push
jl
fadds
sub
xchg
into
mov
jno
ja
add
push
bound
lret
enter
aaa
rolb
xchg
outsb
sub
or
stc
loope
pusha
adc
mov
popa
pop
mov
sbb
aas
shlb
and
pusha
stc
outsl
sti
scas
outsl
leave
out
pushf
outsl
mov
repnz
push
movsb
sbb
arpl
loope
loop
lahf
into
adc
leave
add
xor
loop
call
mov
js
xlat
sbb
lock
adcl
aas
mov
jp
push
mov
scas
fsubs
leave
push
ds
jns
mov
aas
pop
shlb
test
cmp
test
xor
adc
and
mov
mov
cmpsl
pusha
add
and
xchg
xorb
sub
fwait
and
dec
sbb
cmp
sub
xor
mov
call
scas
fucomi
mov
mov
push
lret
push
into
inc
insl
jns
rorl
mov
jb
push
pop
pop
repnz
xlat
dec
in
jae
nop
not
push
adc
cmp
add
test
xchg
sub
cwtl
cld
cmpsl
dec
lcall
lods
inc
stos
aam
fistps
mov
and
adc
sarl
subb
inc
xchg
fbld
clc
mov
lods
adc
mov
mov
lods
mov
loope
cmpsb
adc
inc
mov
rcr
loop
sub
outsb
rcrb
xchg
push
lcall
ljmp
out
push
ret
xchg
dec
dec
mov
dec
inc
sbb
loop
jg
xor
push
xchg
repz
aaa
add
notb
mov
jno
cmpsl
int3
push
cmpsl
lods
or
stos
fistpl
lods
add
adc
lcall
mov
mov
jge
movsb
das
call
aas
jl
mov
pushf
idivb
xchg
sub
les
push
fnsave
xor
gs
mov
add
es
push
mov
mov
stos
push
pop
lods
out
in
cmpsb
push
lret
repnz
xor
mov
lods
sbbl
mov
jb
fxch
loopne
iret
push
in
scas
or
cwtl
les
out
rcr
and
cli
pop
lret
lds
bound
mov
or
adc
and
jge
cmp
push
push
push
mov
out
adc
pop
mov
lods
inc
sahf
outsl
sub
in
cli
ljmp
loopne
jno
mov
sub
imul
scas
int
enter
int3
push
movsl
push
bound
stos
cs
xor
fadd
pop
xchg
fiaddl
xchg
cli
or
aas
sbb
idivl
xor
pushf
insl
and
push
dec
jbe
cmp
in
push
add
inc
sub
cmp
out
jnp
rorb
test
jmp
push
mov
adc
mov
sub
int
in
jle
mov
xor
or
fsubs
shl
xor
insb
lds
inc
and
adcl
mov
insl
cmp
gs
jp
xor
cld
jp
push
push
fsubs
mov
sub
add
mov
push
push
int3
data16
or
push
add
fwait
sbb
sub
jp
dec
fbld
fmuls
lret
xor
xchg
mov
jae
pop
cmp
or
mull
mov
clc
sbb
popf
mov
or
cltd
sub
das
sub
mov
cmc
enter
or
push
fsubp
jl
mov
daa
push
movsl
fsub
mov
xchg
es
cli
fidivrs
sbb
insl
push
enter
sbb
in
bswap
add
mov
sbb
sbb
sbbl
sbb
mov
lahf
xchg
and
mov
xor
xor
cmpsb
shlb
enter
dec
cmp
push
fstps
sahf
outsb
jmp
add
cmp
jbe
pop
outsl
pop
hlt
sbb
int
aam
xchg
fsubs
cwtl
out
in
mov
xchg
sub
and
push
leave
jle
jge
enter
jno
xchg
movsb
std
ret
mov
inc
cwtl
loop
push
das
jecxz
out
ret
mov
jns
lcall
or
mov
enter
cmp
jne
mov
push
outsb
sbb
dec
pop
imul
sub
das
gs
mov
or
push
mov
xor
mov
mov
mov
and
out
add
add
int3
adc
xchg
lcall
and
mov
stos
ljmp
rorl
xor
push
int
inc
jle
aad
mov
int
add
xchg
mov
add
outsl
jp
add
filds
push
mov
and
sbb
push
cli
nop
pop
stc
test
call
nop
lods
rcl
in
ror
mov
push
repnz
sbb
adc
cmp
pop
leave
push
xor
test
pop
sti
pushf
push
mov
and
jae
jmp
mov
cmpxchg
cs
sbb
mov
xor
mov
ljmp
sahf
push
mov
mov
push
adc
mov
mov
pop
mov
push
out
pop
out
cmp
mov
aam
dec
or
aam
xchg
movsl
lods
and
sbb
xchg
outsb
lods
sbb
and
scas
aaa
rcll
sbb
loop
dec
mov
sbb
fildl
xchg
jo
repnz
sahf
sub
std
movsl
and
mov
ljmp
jmp
and
sub
jle
sbb
es
imul
xchg
lods
in
jne
add
lahf
xlat
pop
xor
mov
enter
shrl
in
std
and
movsb
mov
fcomps
div
les
inc
in
dec
lret
mov
in
pop
push
dec
imul
outsl
cmp
xor
int
movsl
stos
sbb
mov
ret
fisubl
xchg
ljmp
js
dec
in
pop
xchg
adc
test
lock
add
stos
gs
jno
add
or
pop
cmp
cltd
loope
movsb
movsl
xor
and
ja
sub
jecxz
fwait
push
or
fwait
sub
push
mov
xor
std
dec
jp
hlt
jne
scas
sub
fbstp
xor
mov
imul
and
pop
pop
mov
jb
loope
imul
jmp
cmp
jecxz
dec
das
lods
adc
bound
into
imul
cmp
jae
outsl
movsl
lahf
scas
cmc
divl
adc
sbb
jmp
mov
das
psllq
repnz
leave
loopne
mov
sub
fstl
faddl
inc
mov
adc
xchg
outsl
orl
or
cli
mov
push
ljmp
mov
and
es
ljmp
loope
cmp
sub
addr16
pop
xor
mov
cmp
out
xchg
push
or
cld
inc
cmp
sarb
int3
inc
mov
ficoms
sti
sti
mov
or
repnz
push
push
mov
pop
ljmp
sub
dec
adc
fildl
lock
sbb
sub
es
enter
js
pop
cmp
outsb
aad
aam
scas
es
movsl
xchg
cwtl
mov
lcall
add
push
out
les
mov
rorl
push
mov
adc
xor
lret
mov
xchg
scas
mov
sbb
sub
frstor
mov
mov
pop
pop
xlat
cld
lods
dec
std
jns
call
mov
outsb
jp
xlat
cmp
pop
xor
imul
roll
adc
dec
es
test
jmp
test
adc
in
fdivl
into
pop
in
cwtl
aad
or
ds
les
lock
popa
xchg
pop
test
imul
adc
jg
pushf
pop
pop
cltd
divl
push
repz
jmp
stos
shll
cmpsl
movsb
push
inc
xlat
xchg
sbb
aas
outsb
and
sub
movsb
mov
sbb
faddl
popf
jo
ret
aaa
scas
xchg
mov
cwtl
push
xchg
mov
jo
out
mov
add
xor
mov
jg
mov
bound
stos
mov
mov
jl
and
jp
mull
pop
adc
mov
mov
pop
lock
jmp
divb
imul
lock
or
jno
or
das
or
push
mov
into
jge
fldenv
xor
scas
movsl
xor
int3
lock
jecxz
mov
xchg
sub
out
inc
jno
imul
pop
xchg
jmp
iret
fs
loope
enter
out
xchg
loope
std
shll
out
sbb
adc
xchg
dec
movsl
push
jo
push
rcl
mov
xor
xchg
cmp
or
pop
and
push
test
sbb
pop
xor
sub
sti
dec
sarl
lcall
stos
imul
dec
sub
adc
pop
push
push
repnz
mov
cld
mov
xchg
mov
xchg
lret
mov
rolb
lock
mov
scas
fmuls
sub
jb
inc
adc
jae
cmp
inc
push
jns
mov
shr
call
popa
sbb
xchg
push
xchg
mov
js
push
lret
pusha
dec
sbb
jge
cmp
js
and
push
adc
es
and
or
in
dec
lock
cmp
adc
xor
imulb
cwtl
pusha
push
cwtl
add
notb
cmp
pushf
and
push
xor
adc
mov
in
add
xor
stc
cltd
scas
ljmp
sub
je
add
inc
cmp
pusha
roll
inc
mov
xchg
movsb
loopne
xchg
inc
fisttpl
stc
cs
sub
mov
icebp
pop
jle
sub
lea
mov
popf
jne
imull
xor
fwait
xchg
cltd
mov
aam
insl
dec
adc
cmp
dec
and
into
dec
jbe
pop
ud1
popa
cld
and
andl
sub
jg
or
dec
idivl
jns
in
out
cmc
push
push
mov
les
stos
outsl
icebp
mov
cld
pusha
cwtl
fcoms
mov
sub
cltd
fildll
movsl
push
jmp
push
cld
pop
je
mov
dec
test
dec
lahf
lea
dec
sub
and
into
adc
dec
std
mov
nop
int3
outsb
stos
sbb
ss
movsl
loop
cmc
and
scas
mov
xor
rcrl
xor
subb
in
lods
rcll
or
mov
dec
rorl
xchg
shlb
ffree
xchg
xchg
shl
out
cld
adc
in
mov
xor
mov
loopne
inc
icebp
lds
sub
inc
es
sbb
pop
rcl
lods
push
push
dec
cs
and
loop
jae
mov
test
ljmp
mov
orl
cmp
xor
sub
xchg
sbb
sub
cli
cmp
push
push
jg
cmp
add
xlat
sti
mov
insb
imul
or
lods
or
imul
fdivs
ror
lcall
fsubr
inc
sub
pop
ljmp
loopne
jle
test
xchg
sbb
mov
ficoml
pushl
fidivrl
cld
daa
arpl
mov
cmc
popf
adc
xchg
xchg
dec
shll
xchg
imul
shl
jns
push
icebp
sbb
in
pop
call
shr
aad
into
jle
adc
and
pusha
in
xchg
pushf
in
xchg
cwtl
and
scas
in
iret
test
out
lds
test
push
xor
jb
nop
fwait
and
imul
das
add
xchg
add
out
push
iret
jnp
mov
out
dec
imul
pop
in
dec
xchg
sbb
adc
inc
sub
dec
fwait
sub
adc
rorb
div
or
pop
pop
fidivrs
lea
xor
fcmovnbe
sbb
cmp
jo
divl
cmp
cld
jp
lods
lods
pop
or
cwtl
jge
xchg
les
mov
adc
xchg
ljmp
xor
out
mov
cmp
push
adc
repz
and
adc
xor
fstps
jns
loop
xchg
ja
sub
pop
lahf
cmc
and
movsb
dec
jge
mov
div
mov
cmp
ja
mov
lret
mov
arpl
or
xchg
pop
sarb
je
ds
stos
or
mov
mov
setnp
rorb
mull
insb
mov
lds
in
xchg
shrb
and
insb
movsl
xor
jl
jne
mov
jp
mov
mov
mov
pop
xor
jp
out
popf
rcl
xchg
mov
jp
inc
mov
fsubr
inc
pop
push
jecxz
mov
clc
add
and
xor
mov
int3
mov
and
out
out
in
fmuls
cmpsl
add
mov
pop
repz
cmc
inc
lret
xor
iret
mov
gs
push
jmp
lret
outsl
addr16
cs
enter
rclb
call
dec
imul
rclb
subl
ljmp
sbb
lods
lahf
xlat
or
sub
imul
cld
inc
imul
in
jle
shr
and
dec
pop
sti
xchg
insb
addl
arpl
fcoms
push
test
imul
sub
push
jo
test
fdivr
ret
xchg
fmull
mov
movsb
sbb
hlt
icebp
sub
sbb
inc
clc
jg
out
mov
out
ljmp
lds
int3
cld
cld
jnp
popa
push
xlat
xchg
pop
mov
test
mov
mov
push
fst
call
movb
subb
sub
xchg
fnstcw
nop
insl
outsl
out
nop
leave
cwtl
hlt
push
cld
fstpt
dec
xchg
xor
lods
in
push
mov
cwtl
push
stos
gs
int
jl
sub
aas
hlt
sti
push
iret
mov
mov
ja
mov
in
lahf
mov
in
or
jno
into
cli
std
push
cmc
mov
and
pop
mov
fidivrs
cld
ret
sub
sbb
xor
ret
and
or
daa
lret
inc
mov
mov
add
test
jo
mov
mov
ja
xor
or
sub
mov
cld
pop
inc
bound
push
push
fsubl
pop
fpatan
push
push
clc
adc
ja
jb
push
inc
or
pusha
test
xchg
cmp
and
cltd
iret
jg
add
leave
mov
jl
ja
jae
mov
mov
push
andl
cli
or
in
loope
data16
jne
xchg
fists
out
je
fs
jg
inc
xlat
xor
push
in
dec
int
scas
inc
in
std
mov
lcall
ljmp
and
adc
push
and
and
fldcw
test
fisubs
ja
xor
mov
jo
jp
push
pop
and
fldt
imul
movsb
sbb
cmp
push
sahf
cmp
push
inc
fsubl
cltd
mov
aam
push
mov
xor
loop
cmpsb
mov
mov
cmp
outsb
mov
pushf
scas
mov
adc
pop
push
add
fists
std
push
fwait
popf
sti
into
sahf
mov
push
jbe
jmp
cmp
inc
push
sub
jecxz
inc
test
bound
jl
and
imul
ljmp
insl
jnp
xchg
pop
push
pop
push
inc
imul
mov
dec
sub
in
imul
mov
jg
ja
push
aam
ror
bound
ds
xchg
cmp
movsb
icebp
push
rcrb
inc
cs
mov
stos
dec
jnp
iret
xchg
out
cmpsb
pusha
mov
inc
cmp
mov
stos
pop
and
pop
ljmp
push
mov
shll
inc
pusha
out
mov
and
popa
add
mov
ret
lock
mov
mov
push
push
pop
test
data16
arpl
pop
sbb
fwait
lock
xchg
mov
push
into
inc
bound
out
adc
fsts
je
inc
push
pop
xchg
xor
negl
test
rcll
inc
andl
mov
setle
sub
negl
or
ret
jmp
or
push
inc
push
out
inc
sbb
jno
stc
xchg
cmp
and
jnp
mov
inc
xor
mov
aam
inc
pop
jecxz
add
xor
pop
push
push
loopne
sarb
lret
faddl
lods
rclb
fsubs
iret
les
jmp
js
cmpl
xor
sub
sbb
cmc
push
xor
fs
out
loop
inc
mov
sti
popf
pop
int
jmp
jb
dec
mov
xor
stos
sub
cmp
jecxz
push
test
das
cld
leave
dec
sbb
addl
movsb
pop
xchg
sub
xchg
sbb
mov
mov
stc
pop
mov
push
mov
sbb
jecxz
push
lret
mov
mov
sub
mov
insl
and
cld
sahf
lcall
fsubrs
push
mov
push
mov
cmp
cltd
jmp
stos
jp
inc
pop
outsb
cmc
rcrl
daa
test
push
aas
aaa
cmp
jbe
pop
add
sub
jmp
aaa
push
iret
aas
adc
xchg
lcall
or
insl
test
dec
insl
mov
in
out
xchg
mov
or
pop
stos
mov
leave
in
dec
add
frstor
cmpsb
lea
xchg
pop
push
roll
lret
repz
cmp
push
or
pop
fs
loopne
pop
shlb
sbbl
mov
mov
inc
mov
and
xchg
lods
in
hlt
inc
ret
push
jno
add
fildl
mov
rol
mov
pop
sti
dec
dec
dec
lods
mov
es
je
fwait
sub
jno
sub
push
dec
mov
sti
mov
movsb
dec
enter
and
cmpsb
popa
roll
dec
repnz
or
dec
loope
nop
jb,pt
js
jl
mov
cmp
std
or
aas
jmp
add
leave
mov
mov
sub
test
fcmovnu
daa
popa
fcoml
bound
jp
mov
movsb
clc
insl
xor
sahf
dec
mov
and
push
in
insb
dec
es
mov
stc
adcl
fnstcw
xor
hlt
jecxz
xor
popf
clc
cmpsl
gs
push
inc
enter
sub
mov
fbstp
les
push
lret
loop
xchg
es
enter
cmc
mov
lock
fsubl
aam
inc
pop
outsb
aad
lock
cmp
push
aad
fwait
xor
and
push
xchg
sub
or
mov
pop
cmc
sahf
std
dec
add
jne
mov
adc
push
xchg
add
sbbb
push
incl
std
loope
in
jg
int3
and
lret
mov
pusha
push
cmp
dec
loop
cmc
arpl
cmp
rcrb
dec
pop
xor
cmc
fs
mov
out
lret
mov
sbb
push
mov
push
in
xchg
movsl
out
sbb
cli
js
outsl
out
hlt
push
cli
stc
mov
pop
js
repnz
jno
daa
push
sub
sbb
mov
mov
fadds
leave
imul
repz
daa
out
rol
adc
stos
jmp
mov
mov
ftst
mov
adc
imulb
or
lcall
in
rcr
das
out
sub
sahf
mov
je
mov
jne
addl
push
add
cmc
inc
aam
mov
inc
fldenv
outsl
jl
into
push
pop
jl
mov
xchg
inc
sbb
xor
adc
xchg
mov
les
scas
jge
pop
fnsave
inc
fwait
pushf
scas
mov
pop
in
mov
inc
or
in
movsl
xor
push
fcomi
lret
cltd
xchg
cwtl
inc
pushf
dec
pop
and
daa
push
jl
sbb
add
adc
aaa
daa
jo
in
out
xchg
jg
dec
popa
push
inc
or
and
sub
in
stos
int3
sub
inc
lea
scas
out
adc
out
or
push
test
aam
sahf
push
fs
mov
jmp
cmc
leave
popa
into
imul
mov
jb
sbb
shlb
mov
inc
sarb
push
sbb
cltd
pop
cmp
int3
sti
stos
insl
or
adc
js
addr16
jle
icebp
in
sub
lea
pop
jno
dec
push
cli
jecxz
xchg
adc
xchg
add
lock
in
fcmovu
inc
sti
addr16
stos
pop
roll
insl
idivl
enter
out
and
push
jno
xchg
sti
cmp
ficoms
pop
fbstp
cli
xchg
ja
pushf
ret
xor
xlat
rcrb
mov
ret
cmpb
in
testb
imul
adc
mov
mov
cs
xchg
lock
scas
mov
mov
loopne
and
mov
lods
dec
test
xchg
push
pop
imul
mov
sbb
jb
add
cmp
lret
jae
shll
js
dec
adc
xchg
paddw
cmp
jmp
imul
gs
popa
push
push
inc
packsswb
ljmp
and
fs
test
push
lret
add
xor
int3
lcall
test
jbe
mov
test
loopne
mov
push
out
or
mov
mov
aaa
les
leave
lods
adc
mov
mov
push
or
sti
jb
sbb
dec
inc
incb
push
push
or
and
fwait
inc
orb
xorl
cld
stc
in
jmp
push
push
test
lods
xchg
push
lea
cmp
and
and
jle
fs
addr16
inc
enter
pop
and
mov
int
add
daa
xor
ret
mov
add
mov
mov
sbb
movsl
movsb
adc
mov
cltd
negl
shll
lcall
pop
or
jecxz
cmp
add
adc
push
jo
bound
and
push
push
jp
std
lahf
jbe
popf
js
push
out
mov
in
mov
jno
inc
movsl
nop
loopne
xor
icebp
sbb
sti
lret
in
push
test
xchg
jle
mov
mov
inc
jmp
cmc
data16
cli
paddsb
adc
mov
inc
stc
cmpsb
pushf
jl
icebp
mov
pop
sub
lcall
sbb
push
adc
mov
sub
movsl
cmp
aas
leave
les
pushf
adc
jp
aaa
inc
pop
jmp
ds
mov
jecxz
xor
idiv
adc
dec
jmp
in
aas
hlt
sub
js
xor
sub
mov
insl
mov
mov
and
addr16
sbb
pop
and
stc
sbb
data16
xchg
sbb
out
data16
pop
loop
jp
push
fldenv
je
mov
pop
cwtl
popa
mov
jecxz
cmc
pushf
lcall
inc
or
jle
xchg
cmp
sbb
jmp
decb
mov
dec
inc
jo
gs
sarb
cld
mov
xchg
jbe
idivl
mov
mov
inc
loopne
mov
and
imul
mov
xor
pusha
loope
pop
jle,pn
and
stc
cs
push
inc
cld
imul
lods
leave
shll
dec
sub
outsb
dec
loopne
fisubrs
test
dec
out
cld
sbb
adcb
add
imul
pop
dec
and
mov
popf
lcall
subb
mov
aad
aas
xor
insb
stos
sub
sub
imul
mov
push
bound
mov
xor
scas
push
in
dec
into
dec
xchg
int
out
cwtl
xchg
jns
cmp
or
jmp
add
setb
insb
insb
dec
dec
xor
cmp
rcrb
cli
cmp
in
cmp
je
call
mov
dec
push
jno
movsb
pop
cmc
xchg
fcmovbe
cmp
sub
and
pop
rolb
test
pop
push
icebp
xor
sbb
mov
subl
xchg
dec
fs
jp
cmp
cwtl
subb
cmc
ret
outsl
pop
ja
scas
pop
mov
lahf
dec
push
lock
push
pop
fnstenv
add
and
loopne
sbb
repnz
xchg
hlt
aad
sub
enter
fisubrs
mov
mov
out
fnsave
cmp
jg
cwtl
push
inc
pop
mov
shll
neg
int
and
inc
jb
adc
push
enter
pusha
inc
push
lret
loop
cmp
aam
inc
lock
xlat
out
sti
std
add
notl
loope
fistpll
ret
stos
add
aas
xor
mov
fdivrs
fmul
insb
movsb
fidivs
inc
sbb
pusha
repnz
and
jbe
pop
pop
pop
fisttps
sub
pop
and
and
cltd
ret
inc
xchg
test
add
divl
xchg
cmp
push
test
jnp
push
inc
addr16
xorb
popa
icebp
mov
fldcw
inc
jb
pop
jmp
inc
add
cmp
sub
pop
and
rorb
jne
mov
sub
std
add
es
scas
leave
cwtl
push
mov
inc
cli
inc
fdivrs
stc
sbb
frstor
pop
add
in
mov
lds
ficoms
xchg
pop
inc
in
in
and
add
push
fbstp
cmp
sahf
mov
ret
lods
sub
add
mov
fwait
ror
fs
pushf
stc
cwtl
xchg
sahf
add
scas
sub
sbb
inc
and
mov
mov
icebp
aam
sarb
dec
fildl
lock
push
clc
lds
xorl
pop
std
add
pop
lahf
ja
dec
leave
enter
test
mov
fwait
add
mov
lahf
push
mov
dec
sub
orb
inc
jecxz
outsl
xchg
addr16
and
jecxz
out
scas
ljmp
hlt
popa
ljmp
inc
jmp
cmp
lock
scas
sahf
jbe
sub
mov
sarb
sub
push
dec
dec
push
jge
dec
jbe
jne
xor
mov
clc
push
enter
cmc
push
jmp
or
dec
inc
das
dec
in
popf
sub
xchg
imul
mov
insl
inc
or
sbb
sbb
xor
out
jb
std
fcom
aas
mov
or
outsl
mov
fsubrl
and
faddl
fnsave
jnp
mov
je
xchg
dec
ds
sbb
ds
cmp
push
shlb
xor
pusha
inc
xchg
dec
sahf
orb
lds
pushf
dec
cwtl
test
cmpsb
bound
or
sub
lods
mov
mov
pushf
stos
pop
decb
cmp
cmp
mov
insl
add
fwait
insb
dec
scas
fiaddl
repnz
out
daa
and
mov
nop
ja
xchg
mov
adc
jmp
shrb
popa
cmp
ds
and
std
and
ret
stos
sub
cmp
and
es
es
mov
dec
dec
and
fs
lock
cmp
mov
inc
add
shrb
test
mov
loop
adc
mov
lock
cli
add
pop
in
cltd
mov
loop
mov
pop
stc
rclb
fbld
mov
jne
push
or
dec
fisubrs
aad
push
cmp
mov
mov
mov
mov
les
fdivl
out
xchg
nop
sbb
in
lret
xor
icebp
jle
lahf
xchg
adc
int3
push
aam
sar
xchg
sbb
or
sbbl
or
sub
cmp
jbe
xchg
xor
sbb
test
xlat
mov
cmp
imul
jno
jne
fiaddl
aas
wbinvd
leave
add
pop
outsl
rcrb
push
ljmp
ror
cmp
cwtl
inc
outsl
in
push
scas
push
cld
rorb
or
mov
sbb
sahf
xchg
repnz
xchg
push
outsb
mov
popf
int
lret
sahf
xchg
cmp
repnz
mov
sub
jae
outsl
jecxz
ret
pop
sti
adc
iret
pushf
sub
xor
lret
mov
fsubr
xchg
fimull
cltd
xchg
insl
cmp
enter
fnstcw
xor
cmc
push
mov
add
sub
xchg
fdivrs
in
and
mov
rcll
sahf
cmp
jmp
daa
pop
lret
sub
int
add
lock
jg
cli
insb
hlt
pop
and
push
int3
cmp
mov
sub
das
mov
insb
xor
push
push
in
xchg
sti
add
push
push
mov
push
push
xlat
jecxz
imull
and
jb
adc
mov
ljmp
loop
rclb
cmp
leave
push
xchg
into
mov
push
cmp
mov
shll
jne
xchg
nop
xchg
enterw
push
adc
jnp
mov
xchg
orl
sub
ret
daa
sbb
fwait
adc
cmc
adc
inc
in
push
arpl
repnz
lods
orl
mov
lret
push
test
xlat
xor
out
hlt
pop
pop
dec
enter
imul
lsl
ds
jb
or
fwait
out
pop
aad
ss
or
insb
sbb
add
push
negb
aaa
sub
lret
pop
enter
int3
or
mov
popf
mov
sbb
shrl
sbb
popa
mov
push
sub
add
shrl
mov
jno
add
inc
push
push
mov
mov
xlat
mov
and
into
outsl
jne
loopne
scas
xor
out
push
ds
push
mov
cmpsb
out
shlb
dec
popf
cmpsb
popf
mov
dec
hlt
cmp
std
negl
das
aaa
cmp
addb
xor
arpl
mov
rolb
inc
arpl
sahf
into
mov
cltd
jge
jbe
test
test
mov
xor
loop
adc
mov
xchg
loope
hlt
shld
ret
test
gs
fcmovbe
mov
lods
nop
add
aaa
add
jmp
stos
ficoms
test
aas
int
mov
lcall
cmc
adc
or
dec
hlt
cmp
sbb
jle
mov
daa
cmp
mov
fdiv
cmp
mov
xchg
mov
lods
cmp
lods
mov
out
sbb
cs
fmull
sbb
sub
xchg
adc
cmp
sbb
cs
push
jl
or
enter
aas
dec
rclb
jnp
push
rorb
push
and
mov
lahf
test
leave
cmpsb
fldl
andl
push
std
and
out
mov
dec
xor
pop
ret
sub
ds
adc
or
pushf
mov
ror
mov
inc
mov
pop
pop
jmp
jecxz
add
sbb
mov
sub
push
fwait
sbb
jle
xchg
mov
xor
out
cwtl
scas
inc
mov
cmc
fiaddl
jmp
out
sub
loope
cltd
mov
xchg
mov
cmp
and
xor
and
mov
and
nop
or
mov
push
pop
mov
je
and
jb
jne
or
daa
ja
rcrb
xor
cmpsb
inc
int
and
movsl
iret
lods
fisubrl
mov
sub
aam
and
movsl
arpl
test
loope
add
xor
aam
cmp
xchg
xchg
fwait
mov
adc
and
adc
mov
add
mov
mov
imul
xchg
imul
lods
xchg
ljmp
inc
push
cld
mov
xlat
and
jl
mov
push
test
jmp
inc
cmpsb
lret
adc
pop
dec
js
push
lahf
fdivs
fwait
scas
addr16
pop
sub
adcb
inc
and
jmp
insl
mov
scas
xchg
fadd
nop
lock
xchg
nop
mov
in
das
inc
xchg
cmp
dec
mov
adc
sub
je
es
int3
push
cmp
js
jmp
pop
adc
pusha
cmp
scas
loop
xlat
inc
cmp
data16
btr
nop
pop
clc
sub
call
aam
xchg
push
push
push
jns
pop
sbb
in
mov
sbb
mov
xor
shrl
and
jb
cmp
mov
xchg
pop
jnp
mov
and
adc
push
in
rclb
lret
pop
xchg
mov
and
xor
xchg
sub
inc
mov
inc
into
icebp
stc
inc
inc
fs
outsb
outsb
xorl
pushf
popa
into
push
inc
mov
fisttpl
fsts
jg
and
mov
push
mov
cld
imul
lock
addr16
movsl
rorb
pop
shrb
test
lahf
inc
xchg
mov
loopne
fsts
push
or
out
mov
sub
pop
mov
rclb
push
dec
pop
mov
xchg
adc
out
std
mov
imul
cmp
fists
stc
add
push
add
cwtl
lods
push
or
sub
cmpsb
out
int
aad
aaa
add
test
xchg
scas
xchg
cmp
rcrl
hlt
int
les
jg
fwait
test
pop
mov
movsl
sub
mov
jae
jbe
sbb
jns
jl
and
and
dec
xor
adc
subl
lods
insl
scas
out
sbb
mov
jmp
imull
fisttpll
out
loop
ja
xchg
sub
push
mov
sub
dec
mov
and
icebp
push
mov
push
cmc
sbb
ror
cli
mov
sub
sti
sub
sbbl
scas
cmpb
rcl
popa
imul
jmp
fwait
out
xlat
sahf
rcll
sub
popf
cwtl
dec
ljmp
push
scas
push
js
dec
and
push
jb
in
aam
sbb
mov
and
loop
add
cld
sbb
push
dec
jno
nop
jl
in
inc
sahf
subl
in
ljmp
sub
scas
sbb
aaa
pop
xor
adc
cld
js
mov
leave
sub
and
stos
sbb
arpl
ds
div
ss
cmp
out
cs
stos
dec
movsl
sahf
xchg
outsb
out
and
stc
aad
xchg
rorb
mov
in
rolb
jge
mov
in
cmp
int3
outsl
xchg
jae
sbb
dec
data16
and
aam
pushf
sbb
cmp
dec
sub
or
pop
fldenv
subl
inc
mov
lcall
lea
stos
pop
mov
push
mov
cmc
in
sbb
push
xchg
loope
cmp
bound
jmp
push
push
daa
sti
test
xchg
or
lahf
gs
jnp
mov
sub
mov
ja
adc
jns
push
cmp
inc
adc
stos
int3
pop
js
lods
repnz
inc
xor
out
fstl
test
mov
test
dec
stos
cmc
ficomps
mov
icebp
movsl
mov
mov
fsubrs
mov
mov
imul
nop
jnp
sub
dec
adc
js
push
jae
loop
sub
ljmp
cwtl
cmp
dec
sub
cmovns
mov
cmpsb
popa
dec
je
in
in
adc
push
shrb
orb
cmp
jg
out
cmp
add
popf
sahf
mov
std
ror
pop
leave
mov
xor
push
mov
sbb
xchg
xchg
sahf
lahf
cmp
fmul
and
cmp
or
cmc
test
push
pushf
xor
dec
mov
mov
push
mov
pop
cmc
xorl
jno
push
push
and
outsb
xchg
cmp
lret
push
fcoml
adc
cmp
stc
in
hlt
mov
pop
pop
inc
les
xchg
insb
inc
fdivp
aam
xchg
ds
xchg
push
pop
mov
rol
pushf
pop
and
mov
inc
jne
mov
mov
inc
shrb
pop
pusha
cmc
xchg
xchg
stc
add
fistl
in
stos
add
les
rcll
hlt
or
outsl
in
sbb
je
cmp
das
fcmovne
in
dec
enter
inc
pop
scas
or
push
movsl
out
in
sub
push
pop
dec
pop
sub
pop
pop
ret
std
int
shrb
push
std
out
xchg
ret
sbb
sti
ret
and
ficomps
insb
cmc
bound
hlt
int3
push
mov
xchg
dec
pop
mov
add
jmp
mov
inc
imull
call
pop
loope
int3
jp
add
ret
sbb
mov
xchg
push
call
dec
fsubs
adc
scas
push
adc
mov
jns
dec
cmp
into
push
or
pop
xor
pushf
mov
fs
out
test
fcmovnb
mov
adc
sub
imul
mov
cmp
pop
out
out
popa
xchg
cwtl
sbb
jns
push
or
fldcw
lock
xor
clc
popa
sbb
xchg
daa
jmp
pop
movsl
pop
movsl
xchg
jmp
adc
shll
fucomp
cmp
pop
sti
out
sub
cmc
std
push
lahf
mov
cld
jae
lods
test
mov
sbb
mov
add
mov
in
fmull
scas
idivl
xchg
shrb
sbb
aad
rorb
jge
lods
rol
mov
fs
mov
cmpsl
int3
mov
shlb
sbbb
xorb
mov
inc
cmp
mov
push
lahf
adc
flds
mov
fwait
popf
add
mov
xchg
imulb
adc
sub
sub
imul
sub
mov
add
fdivl
mov
push
jp
aam
popa
popa
xor
sbbl
enter
in
mov
add
lods
fsub
loope
mov
enter
sbb
notl
mov
in
push
ss
cmp
jp
repnz
subl
stc
mov
in
push
mov
inc
xor
mov
and
mov
cmc
clc
movsb
xchg
fwait
cmp
loope
lcall
out
mov
push
cmp
les
cltd
mov
shll
sarb
out
push
loopne
xchg
push
sbb
rolb
push
pop
out
scas
mov
or
insl
add
addr16
xchg
ficoml
lea
mov
and
sahf
mov
arpl
pushf
push
mov
mov
or
mov
stos
orl
pop
sub
xchg
pop
sub
mov
xchg
cltd
or
dec
xchg
shll
add
orb
xchg
data16
scas
imul
add
adc
mov
fsubs
cld
mov
jne
pushf
insl
fsubr
push
xchg
sub
mov
cwtl
out
jo
and
and
leave
mov
cmp
loope
or
popf
or
je
xchg
mov
fistl
ljmp
in
mov
xchg
push
hlt
lock
ret
mov
pop
divl
xchg
aam
out
movsl
insb
jb
fmull
pop
xchg
sub
xlat
into
jecxz
pop
push
sbb
test
movb
inc
bound
pop
enter
and
rcll
jp
dec
movsl
or
sti
in
ret
jmp
sub
cmpsb
shrb
mov
movsb
cld
cwtl
pop
scas
inc
mov
pop
pop
popf
insl
ljmp
in
lods
add
sbb
xchg
push
and
mov
jg
pop
adc
ret
insl
sub
jle
in
sub
int3
sbb
in
dec
pop
push
and
cmp
pop
loope
or
mov
dec
pop
or
pop
sub
add
out
push
xchg
fildl
and
push
push
mov
aad
sub
dec
scas
ss
fbstp
loopne
inc
iret
mov
xchg
push
lret
ljmp
mov
inc
xchg
mov
pushf
enter
stc
dec
int3
fs
or
adc
std
jo
movsl
xlat
lret
and
mov
outsb
sbb
aad
sbb
std
lock
mov
mov
pop
inc
lcall
mov
mov
outsl
hlt
xchg
lret
cli
test
and
or
mov
mov
add
imul
popa
xor
stos
push
mov
jb
adc
pushf
cmc
sub
xor
fsub
fldcw
sbbl
sub
xchg
arpl
lods
out
out
cld
icebp
pop
into
loope
imul
enter
loopne
xchg
mov
xchg
sbb
and
movsl
fwait
mov
lahf
xchg
sub
int
jbe
xchg
push
push
xchg
ret
push
xor
xchg
test
dec
mov
imul
dec
jmp
aad
sub
pop
das
mov
outsb
ds
mov
subb
mov
in
cli
mov
push
dec
push
lahf
testl
shll
pop
add
pop
xor
pop
rorl
xor
push
je
outsl
fld
lock
lahf
rclb
xchg
mov
xchg
mov
jge
aad
pop
out
lea
mov
loopne
jnp
and
jb
enter
nop
mov
sahf
jge
push
cld
and
sub
mov
mov
cld
mov
adc
in
cmp
lahf
or
std
xchg
xchg
test
fisttpll
ss
mov
pop
jnp
jno
cmp
jne
adc
sbb
sbb
mov
pop
loop
xchg
loope
push
negl
ljmp
imul
ret
aaa
decl
out
push
mov
scas
push
xchg
or
jg
outsl
xchg
pop
dec
imul
out
and
popa
stc
fwait
pop
lret
stc
cmp
cmp
ss
fidivl
shlb
lret
mov
nop
jno
pop
mov
les
push
scas
pop
je
pushf
sbb
cli
cmp
mov
sar
adc
rclb
pop
mov
cli
shl
mov
or
sub
mov
rorb
bound
repnz
xor
out
or
dec
pop
adc
repz
push
xchg
jmp
roll
sub
xchg
imul
mov
push
cmp
mov
nop
inc
xor
pop
jne
outsb
dec
sti
rcr
jle
lcall
out
pop
icebp
repz
cld
shrl
aam
cmp
mov
sub
xchg
mov
xchg
dec
call
and
or
outsb
cmc
test
xor
fstpt
cmpsl
sbb
pop
cmpsb
fldt
fcmove
sbb
test
cmp
out
jbe
xchg
ds
dec
pop
xchg
jecxz
inc
mov
mov
pop
xor
shrb
lods
scas
add
xchg
andl
fwait
xchg
xchg
pop
push
jl
imul
mov
popa
mov
inc
fidivs
int3
and
xchg
add
lods
mov
insb
cwtl
mov
xchg
std
xchg
lret
inc
xchg
ljmp
jl
inc
test
loop
adc
jle
mov
dec
bound
out
jb
daa
cltd
dec
adc
sbb
xchg
mov
notb
sahf
rolb
mov
dec
loope
jl
jmp
or
inc
loopne
lods
dec
ljmp
mov
mov
push
xchg
out
in
lret
aam
cwtl
jecxz
test
data16
push
sbb
inc
cmpl
loope
sub
pop
or
dec
jb
push
jmp
sbb
in
aad
pop
aaa
andl
push
dec
out
mov
loopne
mov
movsb
cs
cmp
int
hlt
decl
mov
xor
loopne
pop
ljmp
cmp
cmpsl
nop
fldenv
add
sbb
mov
movsl
inc
shr
mov
mov
sub
test
xchg
jmp
scas
jne
imul
mov
imul
clc
mov
test
pop
cmp
mov
xchg
mov
lret
push
cmp
ficompl
jl
lcall
fiadds
movsl
lock
pop
fnstsw
mov
mov
iret
mov
mov
mov
loop
ret
xlat
adc
inc
int
mov
inc
or
sub
mov
xor
push
pop
in
add
cwtl
ds
inc
fsubrs
push
adc
push
test
jge
setl
mov
pop
popf
dec
lods
scas
pop
ljmp
pop
jmp
jmp
inc
inc
mov
push
loope
or
movsb
add
mov
dec
lcall
lock
and
push
testb
mov
and
xor
ret
add
pop
cmp
add
iret
cmc
adc
test
dec
rolb
or
popa
hlt
cli
mov
inc
push
adcb
out
mov
pop
and
iret
bound
cs
pop
shl
mov
and
or
subl
adc
mov
test
hlt
mov
dec
cmp
mov
xor
and
std
jp
xor
add
out
pop
nop
fwait
ljmp
mov
push
or
push
mov
xor
mov
mov
mov
cli
aam
fildll
mov
push
lods
ret
dec
mov
inc
pop
cmp
lea
xchg
test
cmp
or
and
das
jl
cmp
incl
lret
int
and
cmpl
cmp
inc
push
jnp
add
std
dec
lock
js
in
inc
cli
sub
xchg
les
movsl
push
loop
push
cld
adc
lods
fnstsw
nop
inc
je
pop
xchg
adc
rorl
stos
push
jmp
aam
cmp
mov
je
jbe
insl
es
pop
lock
push
push
add
bound
or
jns
mov
inc
pop
ds
test
fsts
mov
xor
arpl
sahf
cmp
ljmp
sti
out
mov
mov
mov
iret
lods
and
lock
int3
in
scas
fwait
cs
jb
hlt
mov
imul
and
push
aaa
hlt
mov
outsb
or
mov
pop
mov
xor
mov
lods
int3
addr16
mov
shlb
xor
push
pop
xchg
insb
xchg
les
pop
push
adc
addl
cmp
pop
jmp
call
jle
push
pop
sarb
fldcw
pushf
fs
dec
jb
cwtl
xchg
orl
push
sub
add
push
mov
xor
pop
nop
mov
cmpsl
int
mov
insl
cmpsl
pop
sbb
pushl
ret
imul
lahf
into
pop
xchg
xor
aas
push
ret
mov
scas
les
xchg
jo
and
jb
cmp
xchg
rcrb
popf
movsbl
aas
push
cmp
movsl
lret
gs
int
inc
scas
idiv
and
sub
stc
in
or
jmpw
sbb
push
dec
dec
cli
pop
sub
xor
pop
add
je
sbbl
gs
outsl
cli
adc
cmp
test
jbe
adc
in
jbe
paddusb
nop
test
fisttpll
fstps
loope
jb
xchg
mov
fs
outsb
sbb
cmc
push
dec
repz
daa
mov
aas
imul
and
push
sarl
add
in
mov
nop
fs
out
pop
outsb
dec
std
jp
pop
mov
adcl
clc
int3
jo
pushf
push
popf
fwait
xchg
add
and
nop
aam
push
xchg
fcompl
xchg
outsb
repnz
imul
and
movsb
mov
push
jne
ret
push
fmuls
mov
fisttpl
mov
mov
or
sti
or
pop
mov
popf
aam
and
jns
adc
ss
jmp
push
pushf
arpl
ret
dec
xchg
pop
cmpsb
xor
arpl
mov
push
push
push
enter
cwtl
jo
test
js
dec
add
adc
push
into
bound
xchg
out
outsb
push
dec
mov
add
or
mov
js
scas
lahf
pop
aam
sub
imulb
adc
cmpsl
and
push
pop
fsubs
mov
cmc
dec
stc
cmp
rcrl
mov
andb
jl
insl
roll
xor
mov
adc
lock
inc
mov
cmp
mov
push
mov
ljmp
movsb
xlat
loope
test
inc
test
push
sahf
sub
sub
fmuls
and
loope
iret
cmp
in
xor
adcb
pop
fiaddl
or
adc
sub
jmp
sub
in
dec
lcallw
rorb
and
dec
push
cmpsb
std
inc
dec
subl
scas
push
pop
daa
lcall
nop
pop
pop
jge
jo
int
insb
pop
jecxz
fs
xor
cmp
push
sub
cwtl
or
xor
aam
adc
decb
pop
loop
fldenv
bound
lods
and
jne
imul
repz
inc
sub
add
lea
jg
ja
xchg
repnz
xchg
cmp
sarb
in
push
push
scas
loopne
fdivrl
lods
and
dec
ss
mov
fistps
push
and
xor
mov
xchg
xor
and
rcll
mov
push
ja
inc
cltd
out
sbb
xor
or
sahf
fidivrs
sbb
shll
push
pop
mov
xchg
out
cmp
int
cwtl
outsb
pop
hlt
insl
aam
ret
lods
aad
mov
mov
aas
insb
mov
jl
jge
or
out
movsl
ret
fstl
mov
push
dec
jmp
add
ds
jns
push
cmp
lret
add
or
ljmp
sub
or
pop
inc
sub
stc
mov
mov
xchg
mov
sub
sbb
fsubl
xchg
pop
loopne
ficompl
jp
mov
or
mov
stos
sub
cmpsb
movsb
mov
xchg
ret
out
nop
test
addl
scas
pop
mov
shlb
push
mov
sub
add
add
or
dec
cltd
imul
jbe
in
adc
pop
jo
mov
fdivrl
test
mov
in
jo
ja
xor
adc
mov
dec
inc
cmp
std
std
xlat
sahf
loop
xor
or
aas
xchg
push
mov
fisttpll
add
and
cmpl
cmp
xor
or
in
add
pop
sub
xchg
test
sub
in
out
les
cmp
mov
ss
pop
pop
pop
cmp
js
push
xor
decb
negb
mov
hlt
rol
movsb
push
push
lcall
add
adc
push
ret
and
xchg
in
xor
mov
imul
fbld
cmpsb
or
movsl
push
fldenv
jmp
dec
cmpl
out
pop
mov
lods
aas
mov
loop
mov
out
daa
mov
cmp
lret
loop
inc
ja
xor
idivl
pop
int
fmulp
pop
repnz
fcoms
outsb
mov
dec
orb
jno
imul
int3
movsb
mov
fmull
dec
push
inc
test
or
sahf
adc
sub
mov
jl
je
push
pop
ljmp
into
test
pop
jno
or
fnstsw
xchg
ljmp
push
mov
es
outsb
daa
cwtl
xchg
lea
mov
pushf
jg
and
mov
push
out
push
scas
mov
fbstp
aas
jo
mov
push
pop
push
cmp
pop
pop
mov
or
mov
xchg
jmp
arpl
lea
and
xchg
mov
jl
scas
sbb
sahf
ds
hlt
pop
adc
dec
mov
stos
lock
mov
mov
fisubrs
mov
scas
imul
push
daa
jle
lods
ficoms
cmpsb
push
ds
cmp
faddl
test
and
push
setae
sbb
mov
pop
pop
aas
jno
add
mov
vpaddsw
aas
dec
insl
push
ficompl
in
jbe
sti
pushf
pop
out
jno
xchg
sub
sbb
les
insb
sbb
iret
mov
sarb
jno
pop
fs
test
adc
dec
lock
nop
lahf
mov
inc
jmp
jne
sarl
aam
pusha
push
loopne
mov
mov
loopne
dec
xchg
add
imul
jecxz
sub
aad
icebp
repnz
les
or
sub
add
push
enter
jne
jle
xchg
es
xchg
icebp
out
xchg
push
adc
adc
push
add
rclb
sbb
loope
shll
fimuls
pusha
ss
iret
sbb
mov
mov
cmp
out
jle
dec
sbb
jb
stc
mov
and
fwait
jge
push
scas
movsb
cmc
test
int
push
adcb
xlat
pop
fcomp
mov
xlat
mov
mov
jl
pop
push
mov
mov
xchg
mov
mov
arpl
mov
pop
mov
clc
vmovaps
mov
lahf
test
out
outsb
out
aam
cmpl
mov
dec
or
fmul
or
jle
shrl
push
xor
fnstenv
cmp
mov
inc
mov
das
es
pop
lods
xchg
push
subb
xor
mov
enter
ja
mov
or
jl
inc
stos
lods
aam
adc
adc
xchg
adc
xor
dec
xchg
mov
jae
lock
ret
jb
fmuls
popa
mov
jmp
inc
scas
xchg
pop
or
iret
ret
xchg
into
cld
jg
insb
in
cmp
sbb
adc
orl
jne
cmp
scas
bound
mov
xor
push
or
or
call
out
stos
jecxz
push
sbb
cs
pop
lcall
out
fidivrl
arpl
dec
lret
push
push
push
xor
xorl
inc
int3
add
dec
jno
daa
testl
mov
nop
dec
les
repnz
adc
jbe
lods
jmp
cli
ds
shrl
push
lret
add
mov
lcall
mov
ss
dec
gs
cmpsb
pop
ret
inc
push
pop
xchg
pop
les
push
jnp
sbb
ss
std
jne
dec
mull
xor
xchg
cli
fldenv
les
adc
out
sbb
xor
outsb
xchg
test
xchg
rcrb
sbb
mov
call
push
in
xchg
loopne
add
es
xor
arpl
cli
pushf
ja
push
loope
les
cld
ret
push
lret
dec
out
lahf
mull
movq
andl
int3
pushf
or
sub
pushf
and
cmp
fsubrs
in
cmp
jp
xchg
mov
mov
loope
loopne
leave
mov
fwait
rcrb
rolb
lret
and
lods
cli
pop
test
inc
scas
ds
shll
add
adc
mov
cmc
subl
sbb
xchg
cmp
jbe
dec
xchg
inc
insl
imul
push
and
xchg
arpl
dec
xorl
pop
mov
jo
movl
cmp
addr16
dec
mov
push
pop
lcall
sbb
pop
mov
cmp
or
mov
dec
cmpsl
dec
jb
push
dec
xor
arpl
arpl
mov
and
rcrb
sbb
push
cmc
cmp
pop
sti
or
popa
bound
ljmp
aad
lock
daa
cmp
addr16
in
gs
sub
adc
mov
mov
movsl
lahf
jno
mov
iret
xor
idivl
test
fnsave
pop
aam
xchg
sbb
add
movsl
mov
icebp
jmp
inc
lock
sti
adc
or
push
pand
cmp
js
or
scas
push
or
lahf
adc
mov
jl
fwait
pop
mov
es
stos
inc
fldcw
sub
sbb
mov
and
mull
jns
shrb
dec
cmp
into
and
in
je
mov
fists
mov
adc
sbb
xor
mov
cs
and
jb
out
mov
mov
fidivl
clc
jmp
pop
orb
sub
insb
repz
popw
fwait
out
ret
mov
imul
ljmp
jae
jo
xchg
std
lea
enter
mov
pop
loop
pop
js
or
dec
roll
test
fwait
adc
adc
jmp
xchg
push
cli
int3
in
push
sbb
les
sub
mov
adc
enter
fst
repnz
mov
fmull
iret
cmpsl
test
sub
xlat
dec
mov
cmc
sub
mov
xchg
mov
jo
jp
and
cmp
fdivrl
test
mov
pop
ss
cmp
aam
or
stc
sahf
popa
leave
stos
push
cmc
sub
push
lea
js
jl
std
and
pop
push
arpl
rorl
jge
mov
sahf
hlt
cwtl
lods
pop
jg
add
icebp
sti
sub
test
mov
hlt
das
jmp
mov
and
push
jnp
mov
push
mov
sub
icebp
jg
adc
jp
push
xlat
std
mov
scas
lock
cltd
fbstp
push
adc
or
push
xchg
adc
call
out
fldcw
or
mov
dec
dec
inc
xor
btrl
push
sbb
fxch
std
dec
dec
mov
cmp
dec
mov
and
jp
xchg
xchg
out
in
mov
add
lahf
movsl
imul
pop
lea
fisttpll
movsl
xchg
cli
popf
inc
jmp
ret
sbb
pop
push
mov
mov
jmp
mov
xlat
scas
xor
fstl
addb
imul
mov
mov
hlt
mov
rcrb
push
fwait
ss
in
and
mov
cltd
arpl
mov
cli
popf
xor
std
in
ficoml
sahf
dec
fldl
out
dec
int3
mov
mov
arpl
pop
test
imul
std
adc
push
fistpll
gs
mov
sarl
ds
movsb
ljmp
push
faddl
shlb
mov
repnz
test
xchg
std
and
sbb
mov
repnz
sub
sub
shr
fldl
in
mov
aaa
aad
stc
xchg
arpl
test
xor
pop
xorl
sbb
or
out
sarb
shl
add
lds
ds
testl
nop
pop
jmp
sbb
outsb
jnp
jmp
pop
fdivrl
mov
stos
push
jb
icebp
or
sbb
negb
add
lret
add
and
sahf
xor
int
mov
and
lock
fs
xor
pop
jle
pop
testb
decl
sbb
pop
cli
push
mov
ret
inc
lods
inc
push
clc
dec
xor
fbld
ja
sbbb
imulb
push
movsb
add
cld
insb
stos
jmp
leave
mov
lock
fcoms
cs
test
imul
sti
jmp
xchg
and
pop
pop
adc
rcrb
jecxz
rcrb
pusha
jmp
iret
pop
mov
jo
lods
mov
repz
insl
dec
jbe
sbb
pop
cli
popa
stos
sarb
mov
jbe
or
shll
and
mov
push
cmp
mov
pusha
push
ds
enter
sub
insl
aam
cmp
in
mov
pusha
scas
dec
shlb
inc
test
xchg
fld
add
mov
aad
lcall
adc
rcrb
pop
movsb
lret
ds
mov
cmp
xor
gs
iret
das
xchg
repnz
sti
sbb
adc
xchg
out
mov
mov
sub
xorb
jae
xor
popa
imul
and
shlb
pop
loope
fidivrs
jo
jle
or
cmp
jae,pn
leave
clc
sub
mov
sti
shll
mov
xchg
jnp
lods
sub
mov
scas
push
test
pop
mov
pushf
pop
insl
fadd
push
dec
into
aad
mov
xor
or
sbb
lods
cwtl
push
xorl
fs
aam
push
jle
cmc
mov
jo
ret
sbb
nop
mov
add
push
jnp
lods
rol
in
cmp
add
movsb
int
adc
dec
cmc
and
xlat
cmp
xor
cs
fildll
test
mov
mov
pop
mov
mov
adc
fs
mov
pusha
leave
pop
pop
push
lret
lock
mov
sti
ret
in
movsl
sub
xchg
movsb
cmp
push
outsl
mov
sbb
outsl
cs
addb
das
xchg
push
addr16
and
and
arpl
sbb
pop
add
sbb
or
mov
cli
shl
jno
arpl
std
push
cmp
movsb
and
rcrl
sbb
das
out
aam
adc
jg
xor
test
in
repz
dec
movsl
mov
aaa
aas
mov
adc
popa
xorl
jnp
and
jmp
andb
jno
xor
sub
mov
fistpl
aas
cltd
pop
test
xlat
js
fwait
sbb
outsb
test
xor
add
mov
setge
clc
lcall
or
cld
ret
inc
adc
sbb
add
add
cmp
add
gs
mov
cmp
adc
into
push
ret
cmp
jecxz
xchg
loope
pop
xchg
dec
pop
pop
neg
test
pop
lret
in
leave
or
in
mov
mov
sarl
lock
sahf
fdivrs
push
push
scas
sub
cwtl
sbb
xlat
addr16
dec
jb
outsb
xor
roll
pop
mov
stos
mov
adc
adc
mov
pop
xchg
push
popf
mov
mov
nop
or
insl
shld
and
xlat
xchg
mov
out
jl
pop
arpl
mov
cmp
adc
add
pop
mov
xchg
sbb
xchg
test
cmpl
insl
mov
in
aad
movsb
and
imul
lcall
xchg
xor
int3
push
ljmp
test
jmpw
cli
sti
or
ss
add
in
jne
sub
movsl
adcl
fcoms
stos
fnsave
xor
divb
or
push
adc
fisttpll
add
jle
fcomi
jnp
in
shr
stos
pop
mov
dec
cltd
mov
inc
sub
cmpsl
xchg
and
fcmovbe
jb
daa
sub
or
push
sub
xlat
mov
lock
nop
jne
out
fldcw
add
jns
mov
jmp
mov
adc
cmp
aam
sub
cmpsb
jno
xor
stos
add
or
aam
test
roll
mov
mov
push
mov
test
loope
or
sub
add
pop
ja
sub
mov
test
jo
das
fwait
or
insb
std
repz
fs
sbb
inc
inc
dec
loope
popf
mov
jle
mov
mov
jp
xlat
loopne
xor
icebp
sub
jno
pop
sbb
fcoml
xorl
lret
jbe
clc
mov
scas
imul
test
adc
out
and
inc
push
cmc
stos
or
faddl
xchg
add
mov
fdivrs
add
xor
fdivrl
setge
cmp
mov
cld
jne
push
fstpl
stos
push
dec
popl
dec
ret
out
xchg
ffreep
std
adc
lahf
in
pop
imulb
mov
pushf
imull
inc
das
mov
div
xor
shrl
lret
jl
mov
data16
sbb
push
xchg
mov
dec
es
cmp
mov
adc
adc
or
pop
cli
jl
popa
fstl
mov
jge
xor
orb
fucom
mov
outsl
fs
aaa
in
movsb
jge
cmp
push
test
addr16
mov
es
call
mov
fdivl
das
or
push
push
sbbb
mov
sub
jmp
repz
hlt
int
add
ja
mov
sub
stos
sub
xor
push
and
arpl
push
sub
jno
andl
cmp
xor
push
aas
pop
fstpl
add
cmp
add
jle
add
dec
ljmp
xor
mov
sti
pop
pop
das
mov
or
xchg
ljmp
adc
je
inc
cwtl
scas
out
mov
jp
pop
popa
and
inc
shlb
pop
ljmp
cs
lcall
arpl
pop
mov
stos
add
out
push
ficompl
mov
mov
cmp
andb
and
sub
rcll
test
nop
inc
adc
sub
mov
mov
push
cmc
sbb
nop
sub
mov
fldl
sti
clc
dec
movsb
mov
lock
lret
repnz
and
andnps
lods
mov
and
shrb
jnp
pop
xchg
cmpsb
jne
arpl
mov
aaa
dec
imul
mov
cmc
mov
xchg
arpl
jo
in
pushf
jne
or
cmp
cli
or
enter
mov
aam
sbb
cmp
inc
clc
pop
mov
dec
int3
push
xchg
jno
repz
jnp
es
dec
lea
bound
mov
scas
add
or
sbb
popa
lods
xchg
stos
adc
sub
hlt
mov
wbinvd
and
movsl
pop
pop
xor
outsl
xor
adc
scas
inc
shrb
test
jns
jg
push
movsl
xchg
loope
pop
aas
mov
pop
fsub
mov
lret
sbb
div
pop
pop
out
les
sbb
je
mov
pop
xor
in
or
imul
inc
or
outsl
bound
hlt
push
and
xor
pop
fbld
sub
and
ljmp
pushf
fistl
inc
fidivl
xchg
cli
scas
dec
out
jb
shlb
dec
rol
xchg
jno
mov
mov
pop
lods
push
sbb
stos
jns
fidivs
les
xchg
repnz
inc
lea
lret
sti
loope
push
adc
cmpl
mov
shr
int
adc
pop
stos
int
mov
test
aas
sub
fsubrs
push
icebp
ja
mov
mov
and
sahf
xchg
out
divl
mov
sti
mov
push
xor
stos
loope
std
imul
mov
mov
stos
aam
mov
mov
pop
idivb
mov
fistl
jecxz
test
and
push
xor
cmp
in
fcoml
out
xchg
and
mov
jbe
in
adc
adc
xchg
sbb
movsl
xor
push
or
adc
or
adc
mov
adc
xchg
movsl
and
xor
push
cmp
andl
icebp
outsl
mov
dec
sub
rcll
adc
pop
mov
adc
push
sub
andb
sub
cltd
sbb
mov
mull
test
adc
inc
pop
ss
mov
jnp
pcmpgtb
xchg
push
dec
fistps
or
shl
into
ret
dec
es
outsl
jp
add
mov
shr
test
stos
les
add
xchg
mov
mov
jmp
sbb
shrb
xlat
pop
rcr
mov
mov
jne
push
mov
inc
inc
ret
and
push
rorl
inc
test
pop
inc
jl
arpl
adc
and
inc
cmp
fwait
aam
mov
bound
inc
sarb
in
or
xor
shll
icebp
in
icebp
je
loopne
or
and
into
sub
add
cs
pop
push
push
in
movsl
out
push
je
out
popf
loope
cli
imul
jns
aam
leave
arpl
je
cmp
cltd
and
jl
xlat
addb
add
lcall
insl
sub
jmp
add
inc
icebp
push
xchg
xlat
js
sub
mov
adc
testl
cwtl
ret
push
pop
scas
xchg
mov
xchg
and
imul
fldenv
stos
enter
scas
aam
movlps
mov
mov
hlt
push
leave
push
out
scas
int
or
jnp
cmpl
cmc
push
xor
inc
mov
dec
lock
cmpsb
fisttpl
cmc
sub
push
leave
push
push
mov
jne
sti
call
pusha
cwtl
xchg
lcall
dec
pop
dec
rcr
fnsave
call
jecxz
test
ret
je
pop
iret
mov
fidivs
addr16
in
arpl
or
imul
aam
sub
dec
icebp
andb
dec
outsl
mov
mov
mov
fs
adc
cld
loope
xchg
ss
inc
addb
outsl
add
inc
aaa
cld
movsl
add
add
adc
dec
mov
sub
inc
loopne
sub
add
add
stos
pop
pop
xor
xchg
arpl
outsb
gs
loope
mov
into
pop
loopne
mov
popa
lock
faddl
push
adcb
popf
fcoml
cld
pushf
into
fsubl
and
add
add
imul
cld
loopne
dec
jge
inc
jae
daa
sub
bswap
cmpb
xchg
push
cld
or
std
sbb
cmp
xchg
mov
nop
pop
push
lds
arpl
pop
jne
mov
push
jae
fcompl
adc
push
mov
daa
sub
sub
mov
int
in
int3
push
push
and
test
in
push
xor
mov
popf
lea
cpuid
fidivrs
ljmp
hlt
adc
or
fstps
outsb
sbb
aas
pop
pop
lcall
flds
inc
sbb
imul
pop
mov
mov
sbb
sarl
pop
xchg
pop
mov
and
nop
imul
in
lret
mov
mov
and
or
jecxz
push
mov
sub
push
mov
mov
and
and
sub
pusha
inc
iret
mov
push
cmp
push
mov
icebp
jno
jbe
icebp
loop
inc
dec
sbb
aam
ds
mov
jl
ss
xchg
and
lods
xor
mov
jmp
lods
sub
push
xor
lret
mov
cmp
jo
or
sub
rcrl
dec
fcompl
mull
shll
sahf
xchg
loope
enter
mov
push
pop
jp
add
js
sbb
insl
lahf
sahf
mov
push
insl
mov
insb
call
jae
jbe
mov
and
pop
mov
xor
lret
roll
xlat
mov
jle
inc
mov
fldl
ja
mov
xor
jb
lods
test
inc
cmc
xchg
scas
fimuls
bound
and
jmp
rorl
loop
xchg
shl
aaa
mov
stc
fistl
stos
stos
cld
push
fiaddl
mov
xchg
ret
lods
push
add
lods
aam
mov
dec
sar
add
xorl
jo
repnz
pop
ret
mov
outsl
pop
fldenv
fadd
fdivs
ret
arpl
jno
dec
push
mov
sub
into
and
push
and
dec
lods
jb
xchg
jge,pn
lods
notb
inc
lods
into
cld
in
les
xor
repnz
xchg
movsb
inc
cld
roll
scas
jae
or
pop
dec
mov
xor
inc
lret
cmpsl
fcomps
loope
fsts
xlat
test
mov
inc
rcrb
add
in
fbld
sub
leave
push
mov
xchg
cmpb
jge
jg
add
repnz
loop
and
add
and
mov
repnz
out
pop
jnp
lods
jo
push
xchg
adc
jb
or
mov
fistpl
lret
or
addr16
aas
or
push
sub
sahf
mov
mov
mov
subps
sbb
xor
ffree
sarb
lods
iret
out
lahf
movsl
adc
lret
mov
xor
inc
and
mov
cli
ret
mov
bound
xor
cltd
scas
inc
test
sub
cmp
lods
sbb
sub
pop
xchg
dec
pop
pop
push
imul
jmp
mov
cmp
and
xchg
pop
repz
sub
jp
dec
cmpsl
addr16
dec
mov
jecxz
mov
push
es
xchg
or
inc
pop
sarl
fs
and
and
or
xchg
sub
lods
jg
inc
ret
mov
pop
pop
mov
sbb
inc
cld
dec
inc
mov
pop
std
cmp
das
ljmp
xor
sub
and
decl
mov
xchg
push
lock
jae
popaw
mov
mov
fdivl
mov
mov
sub
lahf
push
mov
scas
iret
int3
inc
xor
mov
mov
jp
inc
xor
cld
sbb
stc
push
and
cmp
push
in
rol
into
or
ljmp
pop
xchg
in
pushf
add
mov
shl
cmp
rcl
lret
push
xchg
dec
and
fstl
cmp
jo
imul
pop
fnsave
xchg
stc
fsqrt
std
cmp
leave
lret
inc
sbb
popf
fwait
cmc
mov
mov
jl
fidivrl
lea
fwait
mov
shrl
push
pop
fiadds
jae
or
sbb
dec
xchg
aad
jp
pop
out
jle
lret
mov
add
stos
das
in
cli
adc
sub
mov
mov
xchg
xor
mov
pop
jecxz
inc
push
fsubr
xchg
xor
loopne
arpl
add
cmp
adc
xchg
pop
sbb
movsl
shrb
push
fcoml
sbb
insb
xchg
mov
mov
adc
lds
add
aad
or
nopl
push
cli
sub
xchg
ljmp
xchg
std
insl
xchg
fs
mov
test
iret
xchg
pop
jns
idivl
mov
sub
add
cltd
rclb
jg
mov
ret
ss
fistl
inc
push
imul
cwtl
mov
lcall
jmp
mov
cltd
and
xchg
xor
rcl
aas
mov
aad
inc
push
sub
shll
push
push
call
cmp
cld
mov
in
adc
inc
cmpsb
push
das
cmp
sbb
repnz
mov
xor
out
mov
clc
add
mov
sub
inc
pop
loope
lock
jns
dec
adc
xchg
rolb
ja
dec
xchg
rcrb
neg
lods
xor
ljmp
jecxz
fists
nop
movsl
divl
pop
sub
inc
jno
adc
cltd
shlb
mov
lahf
push
rol
mov
xchg
movsb
das
fstps
and
or
sub
sbb
cwtl
inc
xchg
cli
jne
call
mov
dec
out
xchg
cli
cmpsb
and
xchg
icebp
cltd
sbb
scas
out
out
cli
xlat
and
mov
pop
cmp
sub
insb
and
sti
inc
lret
mov
mov
xor
sub
xor
loopne
or
adc
xor
cs
lret
dec
jecxz
nop
mov
scas
push
clc
lret
test
fiadds
fadd
push
push
je
xchg
movsb
fiaddl
aaa
aaa
popf
xor
push
ja
push
add
push
mov
lods
loopne
sbb
jb
mov
cmpsl
nop
push
xchg
imul
stos
jge
xor
sbbb
js
ss
sub
aam
in
js
mov
jo
xor
fs
repnz
call
fistpll
and
fdivs
xor
decl
fwait
and
scas
inc
adc
cwtl
mov
sub
add
and
adc
mov
int3
xchg
cld
into
xor
push
mov
aam
in
scas
ss
fiadds
je
loop
rolb
cmp
push
jns,pn
rorb
out
mov
dec
or
mov
fmuls
int3
xor
pop
add
jns
icebp
jg
pop
loope
pop
jmp
cltd
and
push
or
out
mov
shrl
add
mov
hlt
dec
arpl
enter
arpl
sub
sub
xlat
fldl
push
popf
popa
aaa
add
and
clc
in
insb
enter
fdivr
ficomps
mov
bound
add
stos
testl
fists
insl
pop
pop
mov
sarb
sahf
pop
ucomiss
int
nop
add
jnp
xor
aam
cmp
js
cmpb
dec
push
pop
and
mov
pop
orb
push
sbb
mov
fs
and
cmp
test
in
stc
out
and
out
mov
jno
pushf
sub
adc
adc
aam
movsl
adc
adc
pushl
nop
mov
jns
lds
pop
mulb
and
fstl
or
lods
sahf
mov
jmp
stc
shlb
repnz
call
mov
movsb
aam
fnstsw
mov
scas
scas
pop
cwtl
cwtl
push
jge
aaa
in
mov
loop
ficomps
cmp
and
cmpsb
fistl
test
sbb
mov
pop
stos
in
mov
cmpsb
rcll
adcl
les
xchg
aam
push
loopne
jp
xor
push
xchg
fucomip
xor
or
jmp
in
es
adc
insl
jle
lcall
sbb
mov
jl
loopne
jns
push
sbb
sub
sub
inc
popa
mov
adc
ss
in
xchg
sahf
pop
shrl
push
fwait
lret
movsl
cmc
mov
jno
cmpsb
js
fcoms
push
lret
mov
pushf
int
xchg
rcll
sbb
loope
inc
lea
xor
mov
jge
mov
int3
xor
xlat
nop
xchg
jg
or
sub
cwtl
lods
sub
mov
outsb
jmp
fstl
ret
and
lods
ficomps
lods
nop
pop
push
into
pop
cltd
test
push
stc
mov
push
std
lods
mov
test
push
jmp
jb
daa
jno
jmp
into
sub
leave
outsb
leave
and
push
sub
adcb
fisubs
imul
sbb
cli
in
xchg
sub
push
xchg
inc
fidivs
fs
xchg
imul
ficomps
inc
lods
jb
and
pop
push
lret
test
lahf
sbb
imul
mov
inc
sub
negl
imul
cwtl
fildll
test
fcoml
movsb
shrb
xchg
movsb
shrb
sbb
call
cltd
lods
pop
sti
aas
mov
outsl
outsb
mov
es
sbb
int3
and
fdivrl
push
dec
frstor
ljmp
push
int
mov
push
out
fsubrl
lds
xchg
sub
mov
fsubr
loopne
lods
push
mov
shrl
adc
push
jmp
cmpsb
std
lods
push
xlat
in
pop
frstor
iret
lret
stos
rcrb
in
test
cmp
lret
sbb
movsl
stc
sbb
enter
fwait
push
cli
mov
icebp
adc
arpl
cs
pop
fcoms
jge
push
xchg
jge
in
fcompl
pop
cld
push
aas
popa
movsb
mov
fs
jge
je
aas
pop
pop
out
or
push
cmp
icebp
jno
imul
mov
movsl
arpl
and
ror
fstl
add
lods
jl
adc
mov
test
mov
bound
and
jae
es
xchg
xchg
sbb
xchg
popf
or
sub
sub
sahf
in
hlt
lods
test
enter
sahf
mov
in
clc
mov
mov
imul
flds
test
sbb
cmp
mov
hlt
shrl
lock
inc
fsubrs
xor
test
fcmovbe
jl
sbb
jnp
icebp
shl
xor
pusha
test
mov
xlat
repz
sub
rclb
nop
jp
and
rorb
rol
outsb
sub
shr
push
ds
push
pop
cmp
repz
fidivrs
push
add
mov
push
inc
jne
cld
out
adc
jae
sbb
frstpm(287
or
xlat
mov
dec
fsubrl
shrl
ljmp
pop
btr
in
jle
cwtd
mov
push
or
pop
loop
xlat
add
and
pop
fimull
and
lcall
aas
sub
outsl
xchg
fwait
mov
mov
jecxz
jnp
push
adc
mov
int
mov
insl
imulb
or
lret
lea
sbb
mov
insl
mov
inc
sub
sbb
lods
mov
push
xchg
push
in
stos
push
lods
mov
adc
test
mov
popa
shlb
jmp
sub
loop,pn
fcomip
stos
std
mov
xor
lock
push
rcrb
out
dec
cmp
shrl
xlat
or
mov
sbb
mov
or
xor
mov
divb
jae
lret
mov
inc
xchg
or
sub
aad
push
fidivrl
mov
stc
fcomps
sub
sub
adc
inc
imul
xor
inc
pop
xor
cmc
xchg
sbb
mov
xchg
insb
bound
ret
notb
xor
sarl
cmp
jmp
jmp
mov
jno
xor
ficompl
out
clc
dec
add
xor
das
pop
mov
inc
dec
fsub
popa
iret
jp
sub
hlt
aad
divl
fisttpll
jge
cmp
push
jb
fstpt
decl
je
je
lods
out
call
push
mov
shll
clc
sti
push
rolb
fistl
mov
or
cld
adc
lea
push
lods
sub
addr16
stos
aad
loopne
shll
sbb
aam
cs
mov
xorl
inc
jbe
test
adc
dec
xchg
cmp
popf
pop
loopne
mov
aad
mov
mov
mov
sub
xchg
out
les
add
mov
push
cmpsb
mov
push
sbb
push
jns
je
pop
aad
std
into
test
adc
add
mov
mov
pop
pop
add
bound
add
sub
add
ds
stc
dec
xchg
mov
sub
pop
xchg
add
in
mov
es
loope
pop
enter
lods
or
mov
add
jecxz
enter
inc
adc
fidivl
or
mov
cmc
push
mov
dec
subl
js
in
inc
fildll
outsl
pop
adc
cmp
mov
mov
arpl
sbb
aaa
mov
mov
mov
aad
add
es
fidivs
or
xchg
xlat
inc
push
mov
cld
or
lea
fcomps
and
and
mov
push
pop
movb
lret
fnsave
int3
add
mov
or
div
xor
sub
lret
xor
cmp
or
pop
in
inc
clc
and
lcall
adc
jecxz
popa
test
int
fidivl
jge
xchg
jp
testb
js
cmpsl
jp
cmp
ds
sbb
push
or
aam
lret
add
jp
lea
stos
adc
or
xor
xchg
fstps
outsb
pop
sbb
mov
cmp
negb
push
dec
in
addr16
push
stc
cwtl
sub
dec
fstl
cmp
and
pop
add
mov
mov
ja
mov
jle
push
hlt
je
adc
cmp
je
fs
test
mov
push
lods
and
mov
out
push
out
cld
mov
ret
ror
jae
pop
mov
cmp
inc
sub
jb
mov
out
push
movsl
and
sub
mov
adc
xchg
adc
fimuls
dec
mov
fistl
mov
adc
jge
jae
pop
push
jg
cmc
scas
adc
jecxz
mov
aam
jecxz
popa
dec
mov
enter
mov
bound
sub
push
add
xchg
lcall
mov
mov
in
pop
lcall
scas
fisttpll
mov
ljmp
insb
loopne
inc
xchg
xor
sbb
xchg
xor
and
add
cmp
add
push
and
adc
inc
in
in
pop
lods
enter
xor
in
out
jge
cmpsb
and
dec
faddl
lahf
jo
nop
repz
xor
mov
inc
xchg
movsl
popa
nop
shrb
push
or
imul
ds
rolb
inc
std
ss
jge
sub
xchg
sahf
ficoml
shll
cmc
rolb
bound
cwtl
enter
push
decb
inc
jmp
jno
gs
cltd
inc
fldcw
mov
mov
movsl
aaa
push
fstps
xchg
cli
rol
ljmp
lods
nop
xchg
ja
jge
mov
xlat
movsl
xchg
or
es
dec
cld
cmp
test
and
icebp
bound
sub
outsb
fimull
outsl
stos
clc
sub
ficoml
ret
lods
mov
stc
stos
fimuls
aad
and
aad
testb
arpl
jg
xchg
js
and
cmp
cwtl
sub
push
cs
scas
jmp
mov
xlat
ljmp
test
dec
enter
test
repnz
shrl
mov
repz
mov
jge
and
out
xchg
fsincos
ret
xor
pop
adc
jnp
sbb
mov
mov
cld
adc
in
mov
add
dec
cli
mov
rorb
fsubs
and
rclb
mov
xor
push
push
jb
movsl
cmc
adc
xchg
push
sarl
cmovno
call
in
mov
and
in
push
rorb
xchg
or
and
inc
or
sub
fsts
mov
fdivrl
dec
dec
sbb
fwait
xor
mov
inc
sbb
es
dec
outsl
cmp
loopne
or
sbb
lret
popf
aas
add
jecxz
movsb
jnp
dec
jp
mov
sub
push
mov
sbb
aaa
add
sarl
add
shrl
or
xor
repnz
addl
mov
mov
cmp
mov
jnp
insb
jg
aaa
mov
cmpsb
cmc
xchg
sub
cmp
and
push
adc
xchg
movsb
xchg
mov
sti
outsl
lcall
incb
out
in
jmp
rcrb
and
adc
fisubs
or
and
or
xor
add
add
fsubrl
inc
repz
test
loope
imul
std
btc
and
stos
xchg
into
cmpsl
dec
bnd
sbb
inc
shll
push
dec
jmp
inc
mov
stos
lret
inc
add
and
fs
dec
inc
inc
movsl
out
ja
notb
lods
int3
pop
cwtl
cmpsl
xlat
pusha
add
out
mov
push
lds
sub
xor
mov
out
mov
inc
lea
in
dec
int3
adcb
and
das
inc
inc
dec
lahf
fbld
fsubs
sub
mov
fldlg2
sbb
mov
fbstp
sub
int
and
sbb
out
in
mov
push
add
fsts
test
jno
dec
or
push
mov
mov
inc
lret
push
fldl
lret
push
sub
daa
mov
pop
fldt
mov
cwtl
fucomip
pop
out
cmp
cmp
pop
aas
xchg
stos
into
push
shl
dec
in
ja
aas
mov
out
cmpsl
push
orl
xchg
stos
or
mov
negb
xor
xor
loope
xchg
data16
mov
lret
in
push
outsl
dec
cltd
enter
leave
jmp
sarl
pop
insl
sub
xchg
push
xchg
in
xor
mov
ljmp
push
fidivrs
mov
into
pop
scas
push
sti
sub
inc
pop
mov
lock
mov
xor
rcl
dec
cli
repnz
and
xchg
xor
rcrl
outsb
js
jbe
nop
sarl
dec
mov
es
inc
test
sarb
mov
or
lods
or
cmp
mov
xor
pusha
cltd
iret
dec
jmp
aam
rcrl
cmp
and
mov
imul
jno
and
mov
imul
or
jne
jmp
sub
fistpll
iret
xchg
xchg
pop
hlt
jmp
cltd
mov
out
fnstenv
loope
fcompl
add
push
icebp
mov
pop
cmpsb
and
daa
popf
and
mov
mov
fcmovnu
mov
xchg
mov
adc
sub
dec
sbb
xlat
lret
imul
gs
aaa
or
jecxz
sub
pushf
outsb
ficoml
ss
sbb
and
dec
mov
xor
hlt
gs
xchg
iret
stos
lods
insl
inc
mov
test
sti
adc
lock
push
js
cmp
and
fcoml
xchg
dec
jnp
stos
data16
mov
sub
stos
xlat
into
sbb
ss
aam
fisubrs
xchg
mov
and
xchg
cli
test
jno
xchg
nop
adc
in
xchg
cmpsb
aad
push
pop
xchg
pop
test
push
rorl
mov
aas
push
mov
imul
lock
or
fwait
js
mov
xchg
adc
inc
subl
dec
jle
dec
pop
mov
test
ja
cli
push
pop
mov
or
aam
sub
subl
iret
inc
sub
pop
pop
fstl
adc
add
jle
xchg
or
pop
std
adc
and
scas
mov
sub
aad
inc
scas
rolb
sbb
dec
jo
xchg
cmp
in
jne
adc
xchg
repnz
inc
mov
lahf
mov
or
xchg
out
mov
in
add
divl
adc
sub
mov
dec
sub
adc
imul
mov
jbe
cwtl
xor
dec
inc
addr16
lahf
mov
int
push
out
fwait
sar
out
gs
or
push
scas
packsswb
adc
test
dec
mov
aaa
mov
xchg
mov
push
jp
rcll
xor
test
add
mov
jnp
sub
xor
inc
push
and
aad
pop
dec
pop
icebp
mov
mov
sub
push
popf
sub
fcom
outsb
mov
es
push
pusha
dec
cwtl
push
test
outsb
imul
push
in
add
sub
aam
loope
xorb
insl
and
push
fnstcw
aas
xchg
and
dec
sbb
fdivl
sub
push
mov
sbb
dec
in
mov
std
xor
dec
sbb
fcom
int
xchg
loopne
fwait
ds
clc
or
lea
jbe
mov
cmpsb
testb
inc
in
jae
mov
iret
vcmpps
jmp
sub
xchg
addr16
scas
lock
or
addr16
popf
sub
dec
stos
dec
or
xor
mov
and
and
sub
fsubrl
mov
cmp
stos
loopne
jo
mov
push
loope
insb
dec
fsub
xlat
mov
push
imul
fcoml
sbb
xchg
cli
pusha
incl
xchg
push
shlb
jno
adc
iret
movsl
adc
sub
sub
ds
int3
sbb
xor
mov
push
and
lahf
mov
push
add
in
or
sarl
sbb
popf
jne
add
andb
je
xchg
add
addr16
sbb
stos
ficoms
popf
push
mov
inc
in
mov
enter
push
pop
push
fwait
mov
in
mov
mov
sbb
sub
cmp
mov
cmpl
fcompl
and
aad
jl
jmp
insb
adcb
pop
rorl
adcl
or
test
icebp
icebp
mov
fs
mulb
mov
loopne
xchg
jp
in
xchg
cwtl
and
jnp
xchg
imul
mov
sbb
enter
in
fldt
cmp
fiadds
sub
push
adc
std
je
add
cltd
mov
test
add
scas
repz
jge
clc
shrl
scas
push
lock
mov
xlat
push
imul
jb
sbb
sub
push
lods
insl
shll
test
les
adc
iret
add
fisubrs
pop
xchg
mov
bound
adc
lahf
fwait
test
lock
or
inc
xchg
dec
imul
push
inc
xor
and
cld
and
fs
movsl
subb
subl
inc
repz
mov
test
test
add
ss
add
push
test
push
out
in
pop
dec
sub
loop
adc
ficoml
pop
sbb
adc
inc
hlt
iret
pusha
shlb
mov
mov
ficoms
push
xchg
sub
pop
and
or
aam
cmp
ret
ret
rolb
cli
into
sub
mov
out
mov
aam
ficoml
mov
out
fucomp
std
fidivl
inc
mov
adcl
cli
test
push
mov
sub
pop
cwtl
mov
in
mov
jbe
mov
loope
dec
cmp
adc
push
mov
xor
or
lret
mov
fs
gs
push
mov
lret
push
or
jo
add
push
mov
mov
or
inc
aad
mov
call
in
ljmp
pushl
sub
dec
mov
dec
popa
sub
or
mov
fiadds
jae
fiaddl
inc
jo
dec
lods
add
dec
xchg
popa
jg
enter
mov
jmp
shr
mov
sub
jns
dec
cwtl
and
jle
pop
outsb
cmc
and
mov
sub
pop
repz
push
xchg
inc
test
arpl
test
xlat
enter
jle
push
das
push
xor
or
test
out
cmp
mov
mov
rclb
jbe
arpl
dec
add
fs
add
cmp
cld
xchg
das
xchg
fidivrs
mov
cmp
lods
xchg
inc
mov
stc
lcall
mov
lods
ja
sbb
mov
test
in
vmaskmovdqu
shl
inc
stc
xchg
xor
sti
sbbl
mov
into
push
mov
outsl
xchg
push
mov
push
out
movsl
lret
mov
inc
jb
mov
popf
cs
int
cmp
xchg
and
js
sbb
mov
and
daa
jecxz
ljmp
xchg
pop
sub
xchg
inc
rorl
enter
pushf
mov
cmpsb
xchg
or
add
mov
dec
pusha
or
jecxz
add
int
adc
or
xor
sti
mov
or
fld
in
out
nop
cs
cli
cld
into
outsb
repz
cmpsb
cld
xor
popf
das
je
cli
lret
mov
lods
push
and
mov
lahf
mov
jmp
rolb
shlb
rorl
adc
mov
dec
pop
imul
or
enter
sub
dec
xor
pop
mov
mov
in
fwait
xchg
adc
cmpl
enter
imul
stos
jo
or
mov
mov
or
aad
rcll
mov
or
popa
loopne
sub
pusha
pop
lahf
lock
test
rcrl
mov
add
jmp
cmp
fadd
sbb
xchg
sbb
pushf
into
cmpb
push
xor
movsb
pop
mov
dec
into
popa
popa
jne
mov
rorb
xchg
iret
adc
or
push
iret
outsl
rcrl
jmp
jle
cli
inc
cwtl
sub
aaa
sub
sbb
sbb
push
pusha
and
sub
mov
mov
pop
sub
dec
inc
push
sub
mov
pop
insl
testl
out
push
call
leave
push
jecxz
in
popa
mov
loope
xchg
add
or
aad
pop
repnz
loop
adc
or
cli
ljmp
sahf
xor
icebp
sbb
adc
pop
mov
enter
shlb
nop
lret
adc
sub
push
cmp
mov
fwait
push
jp
sbb
xor
lcall
sbb
sub
jmp
repnz
in
movsl
cltd
addl
test
push
outsb
into
xlat
outsb
ret
lea
mov
notb
mov
cmp
add
dec
inc
ret
inc
cwtl
pop
xlat
push
es
sbb
cltd
imul
in
lahf
push
insl
cwtl
les
pop
cmp
enter
xchg
xchg
xchg
jns
pop
cmp
int
adc
test
xchg
lea
pop
adc
or
push
shrl
movsl
xlat
and
xor
cld
and
shrb
and
lods
dec
mov
out
jae
jae
push
push
mov
cs
mov
pushf
jno
das
mov
rcll
fstps
push
rcrb
lcall
cmpl
push
mov
jge
fbstp
jl
mov
adc
jae
jbe
test
js
cli
in
adc
fcom
cmpsl
test
dec
and
push
push
jmp
xchg
out
inc
sarb
xchg
push
push
mov
ja
cltd
pop
adc
and
mov
xchg
fcomps
dec
fsubs
xchg
outsl
mov
push
push
xchg
std
aad
xchg
add
mov
cltd
bound
mov
pop
cwtl
pop
push
sti
jg
insl
and
shl
dec
xor
int
fs
mov
push
jecxz
cmp
das
xchg
bound
addr16
pop
push
mov
lds
popf
jbe
mov
lea
cwtl
sarb
xor
mov
stos
sti
mov
add
ja
sub
ss
cmp
mov
mov
adc
lods
push
mov
idivl
mov
dec
cmp
test
mov
repz
push
mov
popf
lret
bound
xchg
xor
adc
or
dec
xchg
inc
jne
or
and
ljmp
sub
out
jno
push
lcall
adc
jg
xor
jmp
jge
movsl
fidivrl
ds
mov
add
ds
jno
ss
rcr
out
pop
fisubrl
or
jne
fisttps
sub
ss
cmp
dec
adc
or
add
mov
cmc
pop
fsubs
adc
xor
adc
xchg
movl
lds
mov
push
loop
out
sub
and
sbb
sub
call
hlt
repnz
fld
xor
adc
test
out
xchg
mov
imul
adc
test
movsb
fildll
add
xchg
push
cld
loop
mov
test
sarb
push
loope
push
fdivrl
sarb
stos
aad
fistl
mov
mov
xor
aaa
jecxz
fisubs
mov
xchg
mov
cltd
fs
inc
inc
stos
mov
sub
xor
scas
inc
jmp
mov
or
nop
or
cmc
loope
test
sete
bound
xchg
adc
insb
jo
jecxz
lea
movsl
jno
cld
test
xor
popf
orb
lock
xchg
sub
cld
xchg
movsb
repnz
hlt
rcrl
xchg
int
aad
add
sub
je
mov
or
sub
dec
jmp
fwait
mov
cmpsl
das
push
xchg
pop
inc
xchg
daa
dec
pop
mov
cmpsb
rcr
inc
xchg
test
dec
sbb
inc
or
inc
adc
mov
dec
or
adc
fdivs
sub
dec
aam
cli
and
mov
inc
frstor
lds
push
pushf
int3
pop
fcmovu
fnstcw
in
cs
lock
xchg
xchg
cs
into
xchg
xor
lds
mov
pop
sbb
xchg
cmpsb
mull
push
rcrb
andl
and
lret
xor
pop
movsl
ljmp
pop
fsts
lcall
lahf
inc
fstps
jp
xchg
cmpsl
popf
pusha
mov
sub
mov
xchg
mov
stos
xor
jge
sub
fistl
movsb
andb
pop
es
pop
sub
pop
adc
rcll
lret
call
jo
inc
aas
arpl
loope
sbb
pop
cltd
out
mov
in
adc
test
jecxz
js
adc
inc
sti
xchg
inc
popa
cmp
xchg
popa
stos
sti
aam
subl
xchg
and
sub
jo
imul
pop
xchg
xchg
xchg
int
xchg
pushf
push
xchg
jae
jnp
xchg
xchg
popa
aad
leave
lcall
sbb
js
sub
out
xchg
xchg
aad
leave
push
xchg
xchg
push
pop
fs
test
xor
popf
or
fistpll
xchg
stos
inc
loop
scas
mov
jl
movsb
ss
nop
out
xor
in
add
insl
loop
les
add
push
call
je
inc
xchg
add
cmp
xchg
xchg
imul
mov
jmp
mov
fisubs
xchg
pop
fdivrs
nop
xor
es
jne
adc
fsubrs
nop
xor
popa
pop
cltd
mov
cld
iret
fdivr
popw
fldenv
ja
scas
js
mov
repz
pushf
mov
sub
out
sbb
mov
mov
std
jno
daa
clc
sub
and
xchg
aas
fiaddl
shlb
and
mov
cmp
nop
sub
mov
je
pop
push
mov
pop
pop
jmp
mov
xchg
sbb
cltd
aad
gs
out
pop
daa
sarl
fbld
fmuls
cld
mov
and
push
ljmp
adc
cmp
jl
int3
sbb
and
lods
lahf
xchg
lar
shlb
add
cmp
jbe
and
xchg
sahf
sbb
push
lret
je
xchg
fwait
das
or
shlb
jge
add
mov
jae,pt
out
mov
test
pop
das
and
repnz
and
scas
xor
and
mov
cld
pop
mov
xor
lcall
nop
and
adc
cmp
nop
lods
mov
cmpsb
lahf
jne
call
shr
outsb
xchg
sub
jne
jne
pop
push
cltd
push
sahf
shlb
pushf
fsubrs
and
xor
cld
mov
adc
stos
jno
jae
and
xlat
inc
fdivs
out
mov
dec
xchg
mov
ss
jno
xor
mov
add
out
mov
stc
jb
int
shlb
jns
ljmp
mov
data16
sub
sbb
mov
push
aam
imul
mov
jecxz
in
pop
sbb
push
mov
mov
inc
adc
push
inc
add
outsb
push
add
test
add
xlat
aad
ret
loopne
enter
sbb
or
and
xchg
mov
fisubs
mov
sbb
mov
pop
loopne
movsb
pop
arpl
std
daa
mov
std
push
mov
std
sub
addb
fmuls
cmp
jbe
xor
xchg
xor
mov
push
imulb
test
movsl
add
mov
imul
jb
adc
mov
sbb
popf
stc
ror
adc
push
cmc
adc
sahf
cld
mov
xor
out
repnz
xchg
mov
xor
mov
push
out
push
negl
xchg
lods
mov
mov
adc
and
popa
xchg
push
adc
fbstp
pop
and
test
movsl
push
xchg
cmp
les
mov
pop
out
jecxz
nop
or
shll
sub
mov
scas
sub
jo
out
in
xor
sbb
and
jo
and
lods
in
or
mov
sbb
imul
xchg
fldcw
dec
iret
leave
sub
rclb
adc
xor
sbbb
mov
int
ljmp
fsubrs
outsl
lock
test
in
lods
mov
fadd
pushf
mov
shlb
lcall
inc
dec
xor
push
fwait
push
lahf
test
pop
das
and
fidivrs
aaa
mov
push
push
mov
xchg
xchg
push
js
cmp
dec
add
imul
nop
jns
mov
mov
mov
or
mov
sbb
jecxz
fisubs
sbb
scas
mov
add
jno
xchg
sbb
scas
or
aad
jno
cmpsl
cmp
in
lea
jbe
jae
cmpb
jne
in
xor
xor
fidivs
xor
sub
pop
mov
mov
les
fildl
xlat
jmp
lds
jle
adc
adc
push
fwait
dec
outsb
test
movsb
dec
lock
inc
add
das
pop
pop
sbb
xchg
add
fnstsw
mov
lret
push
scas
cmpsb
adc
test
inc
pop
neg
dec
repnz
xchg
filds
push
outsb
popf
mov
xchg
pop
sub
iret
inc
sub
outsl
cmp
inc
mov
push
and
push
sbb
cld
mov
insl
xchg
into
fsubrp
pop
fdivr
cli
mov
mov
pop
jge
or
dec
loop
outsb
mov
mov
push
movsb
push
pusha
mov
mov
cmpl
in
lcall
sbb
xor
xor
imul
push
sahf
sbb
sub
pop
sub
ds
shrl
adc
adc
ss
sub
push
cltd
mov
jge
imul
ds
int3
or
push
dec
test
gs
inc
testb
mul
orl
sbb
pop
pop
sbb
push
pushl
push
or
stos
gs
inc
das
sub
xor
pop
sub
sahf
not
mov
mov
fwait
imul
shll
push
inc
adc
lock
sarb
jge
adc
and
mov
adc
insb
sub
mov
leave
mov
jne
jb
fsts
in
inc
dec
arpl
data16
stc
xchg
push
push
fbstp
dec
jno
add
mov
lods
mov
loop
pop
stos
adc
mov
jmp
add
inc
out
sub
js
jae
fmuls
jge
mov
mov
rclb
jnp
xchg
iret
mov
mov
arpl
mov
imul
xor
gs
fistpl
sbb
jae
xor
jge
mov
jle
int
xor
sbbl
and
je
jge
mov
adc
or
mov
sarl
xor
add
xor
scas
scas
clc
out
sub
jge
inc
jne
dec
or
outsb
scas
scas
rclb
and
in
dec
movd
sbb
rorb
adc
pop
in
mov
push
testl
add
or
sbb
loop
insl
fstpl
scas
xorl
push
adc
jle
test
and
inc
dec
cmc
popf
enter
outsb
jne
outsb
sahf
test
jge
test
test
adc
mov
sub
sbb
sbb
adc
sub
and
scas
es
jbe
stos
pop
inc
mov
sub
mov
xor
icebp
ret
je
pushf
imul
aad
sub
nop
data16
xor
jne
loop
mov
xchg
xor
mov
adc
mov
add
mov
adc
jl
aad
mov
and
rcll
pop
dec
sub
inc
bound
pop
ret
pop
pop
insb
xchg
cmpsl
ja
jae
movb
rol
xor
mov
sub
adc
xchg
jl
in
pop
into
scas
fidivs
pop
mov
mov
adc
test
pop
outsb
inc
aam
dec
xlat
or
push
push
mov
repnz
mov
fwait
push
rcrl
pop
in
inc
sub
outsl
lcall
add
fcmovnu
xchg
out
dec
in
cltd
sub
xor
inc
imul
cwtl
xor
xor
pop
into
imul
xchg
and
pop
stos
mov
faddp
enter
inc
jb
push
jmp
bound
and
inc
rcrl
nop
scas
sub
into
ds
mov
stc
in
test
test
int3
sti
gs
pop
sub
sub
and
pop
gs
pop
mov
xlat
push
push
incb
fidivl
xchg
push
loope
leave
jle
mov
mov
add
jno
mov
sbbb
inc
push
mov
cs
ljmp
sub
mov
mov
push
and
push
bound
jp
xchg
inc
stos
push
scas
lcall
xor
lods
nop
cmp
cmovb
enter
sbb
cmpsb
xor
mov
mov
jne,pt
lahf
or
sub
xchg
push
js
dec
xchg
sti
out
dec
sub
add
adc
inc
and
sbb
hlt
leave
jle
mov
pushf
sub
jle
popf
dec
hlt
mov
in
cs
jae
push
syscall
and
cmp
out
mov
sbb
rcl
decb
movsb
inc
pop
test
ljmp
cltd
enter
or
push
inc
push
adc
mov
andb
push
cmc
jb
mov
cmpsb
mov
pop
mov
rcrb
xlat
sbb
xlat
or
mov
cmpsl
in
in
sub
or
xchg
cli
adc
lods
xchg
mov
fisubrs
jbe
insb
push
cmc
addr16
xlat
sbb
sbb
push
push
adc
shll
mov
cmp
scas
pop
xlat
push
mov
push
ret
enter
and
ja
mov
push
daa
rorb
insb
push
pop
jecxz
or
cli
xor
add
fistpll
mov
rcr
into
cltd
stos
jmp
ret
daa
inc
push
mov
movsl
mov
es
jge
test
inc
imul
adc
xor
stos
inc
test
fistpl
dec
add
test
in
adc
mov
in
mov
into
test
das
adc
jb
sbb
ficomps
sub
shlb
sbb
sub
sbb
popa
scas
xchg
xchg
jle
pop
roll
shll
test
call
fsubr
mov
mov
sahf
xchg
fadds
xchg
popa
xchg
push
xor
push
jnp
jnp
shrl
push
addr16
stos
mov
jnp
movsb
nop
sub
sbb
or
mov
popa
insl
sti
orb
dec
cltd
lods
xchg
add
push
inc
pop
mov
mov
cmpsb
int
insl
xchg
outsl
push
sub
adc
mov
push
cmp
fdivl
adc
mov
repnz
pop
push
xchg
addl
test
inc
arpl
sbb
adc
pop
rcrl
cmp
outsb
aam
push
imul
aad
inc
call
cld
mov
pusha
ja
or
cwtl
nop
iret
mov
pop
or
mov
mov
cmp
cmpsl
fistpll
inc
dec
xor
in
adcb
dec
sub
sarb
xchg
sub
xor
cmp
fsubl
mov
add
pop
push
les
in
int
ret
roll
jmp
sbb
mov
mov
jmp
movsb
int3
and
leave
mov
adcb
fcompl
adc
mov
stc
inc
xor
and
fmuls
xchg
es
std
adc
fcmovbe
mov
lret
fsubrs
test
and
loopne
sbb
jnp
cmp
mov
push
stos
mov
out
je
push
mov
sbb
add
push
fsubrs
jb
and
cltd
mov
and
cmp
mov
xchg
jb
aaa
cmp
jge
ret
inc
pop
push
xchg
or
ret
out
and
mov
icebp
test
pop
jecxz
arpl
fsub
inc
pop
outsl
aam
jl
xchg
cmp
mov
pop
mov
dec
lret
cli
call
mov
ljmp
fs
or
addl
push
mov
sbb
insl
and
mov
mov
insl
pop
sub
jmp
inc
mov
xchg
outsl
test
loop
xlat
jnp
nopl
mov
xchg
mov
insl
mov
push
frstor
mov
pop
mov
movsb
cmp
stos
fs
addr16
sbb
sub
dec
inc
shrb
xchg
mov
xor
add
mov
jge
adc
cmp
inc
popa
cli
gs
adcl
sub
and
call
sbb
fdivrl
outsb
ja
sub
scas
aam
push
cmp
in
sbb
addr16
aaa
pop
cmp
fldpi
fwait
mov
out
cmp
stos
clc
dec
arpl
aaa
mov
xchg
out
cmp
rorb
jae
das
sub
jnp
mov
adc
cwtl
mov
mov
std
mov
or
pop
fstps
sbb
mov
loope
dec
sub
mov
pop
push
lock
inc
daa
dec
in
in
fnop
push
scas
dec
fwait
cmp
movsl
loopne
insl
stos
cmpsl
lahf
loop
je
js
sbb
or
push
dec
add
out
jmp
mov
sbb
jl
mov
adcb
mov
mov
inc
add
or
out
iret
jbe
jle
out
inc
scas
aam
sbb
out
and
stos
shlb
lods
fcomps
jl
lock
std
xor
test
mov
mov
hlt
icebp
mov
jbe
fcompl
mov
lcall
pop
popf
sub
cltd
cli
add
outsl
repnz
push
pop
popf
xchg
ficomps
xchg
out
pop
xchg
sahf
adc
cli
mov
cld
data16
jecxz
xchg
dec
mov
xchg
xchg
data16
lods
shrb
dec
in
xchg
pushf
incb
lods
jnp
mov
xor
dec
sbb
mov
push
or
movsb
mov
mov
stos
xchg
sub
and
shll
stos
push
sbbl
jbe
and
rcrb
lret
aam
mov
sti
cmp
add
fists
nop
cmp
movsl
mov
push
lds
sbb
repz
mov
xchg
jg
cmpsb
mov
cmp
loopne
push
popa
jb
pop
sub
sbb
cwtl
sub
cltd
sub
sbb
int3
mov
enter
adc
out
adc
fsts
push
dec
in
lods
jmp
sub
sbb
mov
stos
cld
leave
dec
int
jge
fcompl
in
jne
fadds
fisubrs
in
int
cmp
and
push
lods
sub
push
shll
arpl
adc
movsb
inc
jno
into
inc
loope
inc
dec
jbe
mov
add
out
nop
bound
aas
sbb
fldl
pop
mov
outsl
fldenv
and
push
stos
adc
and
xchg
xor
fcoml
inc
and
jmp
cltd
nop
mov
push
fdivl
into
mov
out
in
faddl
sahf
aam
pushf
bound
insl
xchg
dec
sbb
adc
sub
xchg
cwtl
add
fcoml
inc
push
xor
nop
jbe
fwait
inc
inc
pop
fbstp
mov
and
andl
loop
xorb
push
mov
cmp
icebp
pop
sbb
push
inc
dec
pop
inc
fdivl
cmp
sbbb
push
cmp
cmp
add
inc
shrd
out
scas
lahf
scas
xchg
scas
mull
mov
leave
negl
arpl
push
fldcw
dec
movsb
push
cmp
mov
cs
push
lock
push
pop
test
fdivrs
out
sbbl
jnp
in
sub
fsubs
pop
clc
fisubs
mov
gs
out
jle
adc
inc
or
mov
int
adc
fistl
mov
xchg
outsb
outsl
pop
fstp
outsb
testb
jl
sbb
xchg
add
inc
orl
sti
push
xor
inc
fstpl
aaa
push
mov
lahf
and
inc
push
mov
jl
movsb
repnz
mov
test
out
xor
inc
lods
stc
aas
aaa
push
mov
int
add
leave
sbb
jg
jne
mov
nop
inc
scas
inc
xchg
xchg
std
stos
into
cmp
mov
rol
repz
enter
and
sbb
push
cld
aas
daa
dec
and
jle
xchg
or
movsl
jae
cmpsb
nop
pop
sub
frstor
and
push
mov
sbb
jb
arpl
push
or
testb
mov
xor
add
pop
sub
jb
inc
pop
jbe
loop
jnp
adc
sbb
xor
stos
enter
lock
pop
inc
js
inc
lret
sahf
int
cld
ret
and
lods
jbe
mov
int
js
test
pushf
inc
cli
push
xchg
sub
and
or
cltd
icebp
push
ret
mov
sub
xchg
inc
jmp
je
mov
dec
shr
scas
outsl
sub
dec
push
je
mov
add
lods
sbb
test
adc
arpl
daa
xchg
add
sub
nop
movsl
or
adc
adc
cld
push
stc
mov
mov
cmp
dec
dec
and
pusha
cmp
sub
dec
cmpsb
sbb
arpl
test
push
cltd
pop
filds
out
pop
div
sub
scas
mov
push
mov
cmp
xchg
iret
adc
jne
adc
mov
xchg
inc
lret
movaps
mov
std
scas
dec
in
sub
mov
outsb
sbb
dec
push
lods
mov
dec
fisubrs
sub
xchg
hlt
psllq
lods
xor
pop
fcomip
sarb
lcall
daa
and
dec
sbb
cmp
and
jbe
mov
mov
frstor
stos
inc
cltd
mov
add
mov
jg
lahf
fbstp
popf
mov
jecxz
stos
adc
hlt
dec
dec
mov
stos
stc
push
mov
push
sub
inc
cwtl
and
out
inc
aam
sbb
or
sub
test
mov
insl
mov
cwtl
and
out
fstl
xor
in
orl
loop
popf
lds
pop
sub
mov
or
pop
ret
fisttpl
mov
mov
or
outsb
hlt
cmp
sahf
shrb
push
pop
mov
pop
in
idivb
dec
lret
movsb
xor
inc
sub
cltd
in
subb
mov
inc
mov
movsb
jp
adc
adc
fcmove
mov
pop
fdivs
subb
pop
in
adc
or
push
sahf
sbb
mov
into
inc
lods
movsl
push
push
stos
sub
inc
cmp
bound
lods
scas
dec
int
mov
push
push
xor
pop
mov
sub
into
jle
jo
xchg
cwtl
stos
mov
pop
ljmp
es
adc
movsb
add
stos
mov
push
push
adc
jno
and
xor
mov
lock
movsb
call
in
xchg
sbb
xchg
add
mov
adc
dec
sahf
mov
arpl
pop
push
subl
cmpsb
movsl
aam
pop
or
add
push
push
jecxz
mov
jae
mov
cmpsb
ret
sbb
cmpsb
iret
leave
adc
or
lret
jg
in
push
mov
push
pushf
jno
add
ficoml
and
imul
add
insb
lret
ja
and
adc
cmp
imul
pop
push
mov
subb
adc
mov
out
cmp
sbb
mov
xchg
dec
insb
out
fcomip
cmp
fists
sub
pop
fcoms
cli
es
testb
popf
add
into
jbe
adcl
outsl
mov
sub
imul
call
jbe
or
in
pop
cmpsl
fnstcw
and
pop
sub
cmp
dec
push
pop
xor
jl
icebp
pop
sbb
and
fisubs
push
inc
scas
addr16
sti
arpl
sub
js
lea
pushf
pop
cwtl
sub
sbb
fisttps
mov
or
out
out
shl
movsl
fucomp
cs
adc
and
decl
jbe
into
push
mov
add
mov
sbb
cmp
cwtl
pop
rorb
jmp
jb
cmp
test
add
pop
push
out
or
stos
cli
add
inc
movl
ds
in
mov
push
mov
xor
ret
cmp
mov
pop
daa
dec
outsl
xchg
or
cli
jl
mov
shlb
mov
cwtd
mov
inc
adc
cmp
inc
xor
lods
or
shlb
push
in
into
push
loope
mov
movsl
push
inc
cmp
mov
icebp
adc
mov
jecxz
scas
and
mov
push
outsb
out
lret
mov
pushf
ljmp
push
mov
dec
mov
test
lret
mov
fidivrl
popa
mov
and
mov
jne
popaw
or
fs
lcall
std
fidivrl
mov
cmpsb
mov
adc
shlb
pop
xchg
outsb
cmpsb
mov
pop
lcall
add
xchg
pop
add
and
mov
subb
jmp
cmpsl
cmp
rcll
scas
mov
lock
xor
insb
xor
push
cmc
nop
aas
push
fwait
js
outsb
xor
rclb
pop
add
cli
test
sbb
jle
pusha
push
ss
cwtl
dec
and
sahf
push
aad
fwait
outsl
xchg
frstor
into
sarb
negl
aam
sbb
aam
and
ret
lock
nop
lock
lds
or
mov
loope
mov
lret
lea
jb
f2xm1
dec
repnz
leave
xor
movsl
stos
ret
sub
in
std
repnz
stc
lods
test
pop
int
push
sbb
xchg
pop
nop
cwtl
fcompl
fldt
out
pushf
adc
orl
sahf
cmpsl
mov
push
add
stos
sarb
test
xchg
dec
adc
sarb
lahf
scas
popf
sahf
dec
outsl
dec
jge
dec
fdivrs
xor
test
or
push
movsl
aaa
sbb
cmpsb
cs
movsl
shlb
pop
mov
sub
jb
mov
xlat
jno
cmpb
add
jo,pt
and
stos
jno
sbb
aas
add
loop
mov
mov
cmp
push
xchg
push
lret
outsb
cmpb
cmp
mov
rcl
addl
aam
fmull
jne
clc
pop
aas
hlt
inc
sbb
mov
inc
test
or
mov
fdivl
inc
and
jbe
leave
repnz
xor
pop
cmp
fstl
shll
int3
jae
les
dec
dec
movsb
rcrb
shll
xchg
les
fldenv
shll
push
aas
jbe
sbb
mov
pop
push
pop
adc
cmp
mov
ds
movsb
push
xlat
shrb
jno
test
cmp
cmpsb
fwait
inc
imul
sub
sahf
in
out
rcl
rcrb
popf
decl
cmpsl
insl
mov
adc
mov
test
pushl
lahf
test
int3
jae
cmc
iret
es
xor
js
sub
dec
dec
cmp
sub
movsl
hlt
pop
nop
pop
mov
sti
inc
add
xor
sbbl
push
jae
loope
cwtl
int
mov
xchg
lods
in
sahf
mov
test
popf
mov
loop
and
xor
sar
sbbb
sahf
aaa
and
push
jg
call
or
rclb
fwait
enter
out
idivl
pop
mov
sarb
gs
adc
movsb
xchg
mov
mov
adc
xchg
hlt
ret
pop
cmp
call
fsubrs
fcomps
rcll
mov
dec
sub
mov
add
xor
fdivl
icebp
mov
ljmp
clc
mov
in
movsb
decl
loopne
mov
mov
push
xchg
adc
nop
bnd
mov
ja
mov
xchg
test
xor
cmp
xor
mov
das
je
fdivrl
lds
pop
daa
push
and
adc
aam
ret
popa
shll
jns
int3
cmp
popf
subl
inc
or
fidivrs
das
jo
sub
inc
mov
movsb
xor
fnstsw
fdivrp
popa
push
mov
or
dec
or
mov
int
xchg
adc
sarb
call
xor
mov
xchg
mov
and
jg
clc
dec
cmp
xor
testb
lcall
aas
and
and
add
lock
adc
jle
cmp
jnp
inc
rcr
dec
dec
icebp
dec
outsb
dec
fsubl
and
jno
dec
xchg
push
jb
call
es
xor
xchg
dec
outsb
jmp
xor
lods
xor
inc
pop
and
jge
xchg
jnp
and
adc
mov
sbb
and
jl
cmp
out
sbb
test
int3
and
or
xchg
push
sub
sbb
mov
daa
or
lret
jb
xchg
outsl
test
cmp
test
push
sub
lds
das
cmp
push
leave
cmp
into
mov
xchg
enter
int
pop
stc
rclb
jno
fisubs
xlat
sub
in
mov
mov
dec
pop
cmpsb
xlat
mov
xchg
mov
mov
sub
dec
mov
cmp
cmp
fcoml
xor
sub
mov
lods
movsl
xor
arpl
mov
jne
lea
push
adc
cmp
dec
inc
icebp
jbe
push
into
mov
pop
mov
or
mov
pushf
cmpsl
mov
addb
xchg
mov
mov
nop
lock
lock
inc
icebp
dec
pop
les
leave
add
cli
inc
cmp
or
push
inc
jnp
push
adc
shrb
in
fnsave
fcmovbe
xchg
sub
sti
mov
lds
inc
iret
rclb
jp
add
fsts
jp
rcr
xchg
and
movsl
sbb
pop
les
mov
jg
add
xor
psrld
popl
mov
pusha
pop
scas
dec
fimull
loop
mov
or
dec
movsb
xor
xchg
ss
xor
cwtl
pushf
in
loop
jmp
out
mov
push
xchg
cmp
cwtl
das
call
into
sub
adc
test
fs
sub
testb
push
pushf
push
mov
divb
and
and
jae
jecxz
xor
jge
inc
mov
cwtl
nop
cmp
sahf
and
add
mov
fcmovnbe
mov
iret
mov
incb
fwait
cmp
ljmp
stos
dec
mov
nop
or
stos
rolb
adc
xchg
push
sti
psubq
xor
or
fcoml
jp
xor
xchg
pop
mov
xor
add
dec
icebp
pusha
inc
xor
je
inc
pushf
les
push
insb
aas
push
push
cmp
loop
sbb
lock
add
loope
mov
cld
mov
icebp
filds
in
push
mov
adc
mov
and
jmp
in
test
lods
imul
xchg
mov
jae
and
insb
lds
cmpsl
test
aas
loopne
sub
jae
lock
mov
mov
je
das
sbb
push
jns
xchg
rcll
or
sbb
mov
lret
test
popa
sub
mov
js
outsb
adc
inc
addr16
mov
cwtl
push
jge
xor
jne
xor
lret
arpl
pop
lcall
mov
or
dec
scas
jbe
inc
mov
sub
dec
std
xorl
xor
aam
adc
fldl
cld
mov
mov
inc
aaa
cmpl
jae
lock
jno
xor
ret
adc
cltd
sbb
inc
insb
mov
test
adc
xor
outsb
aaa
sub
lock
lahf
inc
jmp
push
enter
dec
rolb
inc
add
aam
lods
xor
sbb
push
push
imul
adc
fs
out
stos
xchg
iret
xor
fcompl
jae
cmc
mov
scas
xor
hlt
adc
mov
jb
pop
mov
mov
mov
cmpl
jecxz
cmp
dec
jle
sahf
mov
outsb
out
adc
js
pop
insb
mov
push
and
pop
ljmp
dec
sbb
and
and
cwtl
xlat
loope
out
xchg
dec
mov
in
and
fnsave
into
cmp
das
mov
sub
push
inc
sbb
or
scas
cwtl
mov
jne
cwtl
sbb
lods
pop
jo
subl
ficomps
push
adc
mov
mov
and
sub
xchg
scas
inc
stos
sub
scas
xorb
aaa
push
mov
out
scas
pop
mov
pop
sub
dec
push
inc
ret
mov
cmp
fstpl
test
jns
adc
arpl
adc
ljmp
std
xlat
test
cmp
inc
ja
jbe
in
mov
sbb
subl
data16
push
aam
insb
mov
cmp
insb
inc
ljmp
adc
repnz
pop
pop
dec
cli
jl
shrb
sub
loop
fsubrs
scas
addr16
xlat
lcall
popa
xor
mov
les
addr16
mov
cmp
fimull
jnp
adc
adc
call
lret
dec
dec
pop
mov
cli
adc
in
ret
lahf
sbb
mov
lods
mov
inc
shl
mov
je
stos
and
iret
and
icebp
iret
dec
fstpt
and
pusha
aad
out
mov
mov
stc
dec
xor
shr
fwait
xor
sbb
pop
cli
jmp
test
or
inc
inc
loopne
inc
sti
or
add
int
dec
mov
mov
jge
popa
push
enter
test
in
sbb
sti
dec
jnp,pt
pop
dec
xchg
push
pop
inc
test
loope
inc
shll
lock
mov
inc
dec
lea
jo
pop
adc
enter
xchg
push
mov
les
loop
loopne
lods
dec
jbe
gs
sbb
inc
lcall
les
adc
pop
mov
pop
mov
fsubp
scas
shrl
push
in
int
fbld
test
xchg
sahf
or
jmp
sbb
add
je
cwtl
fcom
clc
push
in
add
in
sar
fcoml
leave
gs
jno
inc
loopne
gs
les
sub
je
mov
lret
stos
sbb
and
sahf
insb
das
test
adc
enter
inc
mov
mov
shll
xchg
movsl
loope
xchg
nop
fsubr
popf
dec
das
xor
aam
ficomps
iret
das
movsb
fbstp
sbb
aaa
sets
sub
or
fcoml
shrl
mov
rcr
inc
mov
in
xlat
cmp
lcall
push
mov
mov
loopne
es
sub
sbb
inc
xlat
sbb
loopne
stos
popa
sarb
ret
pushf
out
mov
imul
jl
inc
mov
xchg
push
pop
or
ljmp
or
pop
lret
nop
fiadds
sub
icebp
dec
lods
sti
inc
jb
jle
popa
imul
and
add
stos
xchg
xchg
call
aam
cmp
xchg
or
arpl
dec
jmp
mov
jne
aam
jb
push
push
jecxz
in
aaa
add
sub
sbb
movsb
imulb
pushf
jl
lock
int3
loopne
daa
xchg
or
mov
push
shlb
adc
inc
aaa
in
adcl
fdivl
jae
push
jl
aad
or
enter
outsb
stc
int
jo
xlat
cmp
int3
mov
lahf
mov
bound
loop
mov
jae
jo
jl
rcll
mov
jmp
xlat
xor
icebp
imul
mov
adc
cmp
push
or
cmpsb
xor
cmc
lcall
and
mov
vpsubusw
daa
ret
repz
adc
push
addb
rcr
lods
pop
xchg
and
inc
popa
lret
push
cltd
mov
les
outsl
fs
mov
push
sub
ja
xchg
push
pushf
pop
and
rolb
sarl
paddsw
outsb
pop
sub
and
lods
insl
cmp
movb
push
repnz
aam
mov
mov
mov
and
cs
lret
daa
sbb
test
mov
sub
add
xchg
mov
or
neg
stos
mov
or
mov
push
fwait
sbb
aaa
push
out
cmp
inc
les
cs
cmc
add
push
push
addl
jbe
sub
push
and
cmp
sub
dec
je
out
adc
cld
and
aad
into
jo
cmp
push
in
xor
or
lret
std
leave
jp
in
movsl
das
sbb
jbe
mov
int3
push
arpl
and
nop
cld
xchg
and
movsl
hlt
push
aam
enter
imul
movsb
jb
inc
insb
imull
lds
out
in
into
cmc
nop
divl
jno
lcall
out
dec
nop
loopne
xor
mov
ss
aas
in
xlat
lods
ljmp
icebp
dec
and
sti
pusha
xchg
call
insb
cmp
and
add
cld
and
insb
and
lea
cmp
dec
inc
pop
adc
add
imul
cmp
and
bound
das
orb
add
sti
mov
jb
test
and
in
int
sahf
cmp
ret
lret
cmc
mov
dec
adc
dec
push
cmc
scas
pop
in
mov
mov
fcompl
into
data16
xchg
inc
xor
jle
ljmp
and
sub
aam
cltd
lods
and
sbb
inc
xor
and
pop
adc
js
gs
xor
rcll
or
xlat
js
cmpsl
stos
or
mov
push
lcall
pushf
push
mov
jns
push
mov
gs
aam
mov
stc
cmp
rcrb
pop
notb
outsl
xchg
ljmpw
cmp
mov
pop
pop
fsubl
mov
iret
pop
push
jg
fsubrl
sbbl
sti
imul
pop
xchg
mov
subl
js
sub
push
icebp
sbb
pusha
das
mov
stc
mov
lock
xor
lock
fs
mov
dec
xchg
int
mov
in
stos
stos
sahf
sub
xchg
lret
hlt
test
pop
fildl
xor
jnp
aam
ficomps
sub
in
mov
xchg
adc
repz
ret
ljmp
or
loop
or
sbb
or
pop
lahf
jp
pause
add
testb
pop
cmp
add
and
arpl
std
jae
push
into
and
test
cld
popf
pop
inc
jnp
cmpsl
pop
out
sub
jecxz
repz
pop
or
sahf
or
in
push
cld
sub
fcmovne
in
push
scas
mov
aaa
mov
mov
arpl
mov
pop
xchg
mov
in
jl
jne
cld
arpl
leave
pop
notl
filds
aaa
pop
push
decl
push
ret
fstps
outsb
enter
in
nop
jl
int3
fwait
mov
dec
adc
jno
pop
dec
xlat
leave
pusha
popf
jns
daa
sub
pop
mov
rcrb
repnz
fcomps
not
mov
cmc
in
inc
or
dec
adc
dec
imul
test
sahf
cs
sub
sarb
rorl
shll
popa
dec
push
jg
mov
add
xor
inc
aaa
adc
mov
jecxz
fcoms
pusha
inc
ss
push
add
decb
or
pop
repz
mov
sbb
push
or
sbb
sbb
fistl
popf
outsb
mulb
scas
repnz
iret
test
jge
call
ror
jns
xor
fsub
sbb
mov
sbb
lock
scas
sbb
movsl
das
or
icebp
shlb
ffree
pop
and
add
bound
imul
sbb
jp
or
loop
inc
dec
cmp
and
stos
mov
sub
push
adc
fwait
sub
loope
mov
mov
dec
fnstsw
cwtl
jp
inc
in
mov
mov
out
sbb
mov
mov
daa
mov
jne
fcmovu
je
mov
push
pusha
test
mov
mov
loope
push
cmpsb
loope
jg
rolw
mov
mov
loopne
and
loopne
pop
mov
add
pusha
test
shlb
and
mov
out
xchg
push
mov
sti
add
jecxz
popl
mov
jge
cltd
inc
dec
andb
lods
and
mov
cmc
sub
test
xchg
sub
cmpsl
pop
xchg
add
dec
pop
cmp
out
mov
popf
daa
or
xchg
lods
adc
or
push
mov
scas
popf
fbstp
lock
fwait
pushf
out
andl
or
insl
or
sub
mov
xchg
shll
mov
or
push
pop
outsl
lahf
mov
icebp
push
xchg
add
lea
adc
push
adc
mov
ficoms
inc
lahf
scas
mov
je
xorl
out
xchg
leave
sub
adc
loop
iret
hlt
lock
pusha
push
nop
add
sti
repnz
mull
push
mov
sub
scas
hlt
adc
icebp
pop
popf
sbb
pop
sub
jbe
and
mov
xchg
and
mov
iret
push
lds
pop
cld
je
mov
out
test
dec
push
mulb
adc
js
iret
loopne
mov
and
pop
push
mov
pop
mov
leave
dec
inc
arpl
movsl
mov
shrb
push
sarb
jne
mov
pop
sti
push
cli
and
jecxz
sub
popf
inc
repnz
jmp
push
movsl
aad
xchg
jmp
pop
sbb
daa
push
pop
or
imulb
rcll
movsl
jge
int
lret
sarb
cli
addl
inc
cmp
mov
fdivrl
sti
in
rcrb
loope
movsl
cmp
pop
scas
xorl
sub
xchg
push
jg
dec
push
scas
sub
inc
arpl
adc
fwait
sbb
std
jb
aad
mov
mov
xor
xchg
cld
xchg
pop
popf
cs
fsubrs
sbb
test
es
out
pop
inc
das
in
xchg
sub
add
xor
pop
mov
dec
icebp
iret
ficompl
and
xlat
add
js
dec
call
inc
int3
xor
ljmp
orl
out
sbb
mov
adcb
adc
scas
les
push
mov
or
add
fstpl
loopne
lods
xor
ret
push
out
mov
sti
and
orb
inc
cmp
mov
scas
das
rcrb
out
call
repnz
fcoml
ret
inc
vsqrtss
or
adc
negb
dec
nop
sti
rcr
and
addb
and
lods
xchg
mov
popa
mov
out
icebp
cmp
jb
lods
arpl
push
jecxz
stos
cmp
mov
jl
fcmove
fisttps
pop
mov
out
mov
sbb
lds
repz
rorb
jae
cltd
int3
test
lcall
cmpl
cmpsl
sub
xchg
lods
and
stos
xchg
adc
cwtl
int
xchg
mov
jbe
clc
dec
inc
mov
mov
mov
xlat
add
inc
push
mov
cmp
adcb
push
mov
xor
push
pop
cli
push
sub
fdivl
stos
jo
loope
sub
jns
fcmove
mov
pop
jge
sbb
or
mov
jecxz
jae
pop
adc
ret
mov
incb
leave
push
movsl
scas
int3
shll
cli
push
pop
push
js
adc
inc
cmp
jb
push
out
insl
mov
jno
ret
fcmovnb
ljmp
aas
sub
cs
sbb
mov
fimull
pop
cmp
mov
adc
in
bound
inc
lods
lds
fists
add
shll
movsb
pop
ficomps
fldt
sub
aas
lods
adc
mov
dec
and
imul
out
sbb
adc
mov
or
push
into
mov
dec
loope
mov
jbe
add
repnz
fwait
xor
int3
mov
adc
test
mov
push
or
iret
movsb
fistpl
lods
cltd
push
dec
jle
sub
add
xor
sub
adc
pop
out
add
xchg
imul
and
mov
das
mov
sub
xor
jmp
out
xchg
daa
push
stc
arpl
mov
mov
add
or
xor
mov
aad
ss
stos
mov
stos
mov
mov
cmp
jo
loop
insb
mov
imul
rolb
and
jg
jbe
loop
aad
aam
lds
notl
movsl
outsb
mov
jo
push
push
pop
xlat
mov
sub
inc
and
cmp
mulb
popa
cmp
xchg
fisubs
pusha
pushl
pop
cmp
int3
not
and
fwait
stos
subl
xor
jecxz
jbe
leave
das
add
push
fcom
mov
xor
rcr
addb
jne
in
adc
stc
ljmp
push
test
push
pop
lret
jnp
pop
std
andb
fdivrl
mov
add
stc
sub
movsb
push
sub
scas
aas
add
sub
mov
scas
push
lods
mov
xor
enter
push
lcall
repnz
addr16
lret
orb
imul
into
ret
xchg
or
fists
lcall
std
andb
jb
in
cmp
mov
les
rclb
mov
js
into
dec
stc
test
jg
pop
cmp
frstor
in
stc
mov
xor
imul
scas
xor
je
push
jle
fildll
sub
daa
scas
mov
pop
pop
pop
ficoms
mov
daa
inc
jmp
sti
pop
pop
add
scas
je
dec
mov
dec
xchg
inc
icebp
fsubp
out
roll
sbb
daa
adc
sub
inc
or
in
and
add
and
rcrb
and
aam
out
hlt
imul
mov
push
add
outsb
and
push
mov
or
jmp
test
dec
imul
add
push
shl
dec
push
lods
mov
jl
pushf
xor
int
sti
popf
adc
adc
stos
add
sub
fcmovnu
fsubl
push
push
mov
arpl
or
jns
into
sbb
into
push
in
push
jmp
adc
pushf
pop
out
repnz
xchg
mov
test
push
mov
jbe
push
push
xchg
and
pop
ret
jmp
mov
mov
cmc
fldt
aaa
fwait
adc
and
popf
xchg
mov
mov
jno
sbb
out
mov
inc
in
aaa
add
inc
out
mov
cmp
in
faddl
dec
push
lock
rclb
mov
cmp
cmp
jg
orl
push
cmp
pop
sub
lock
and
adc
and
in
aas
xor
ret
add
es
pushf
test
bswap
mov
ljmp
popf
popf
xchg
lahf
mov
stc
push
hlt
popa
sarb
in
dec
sub
jae
sbb
mov
pushf
mov
and
mov
ja
jmp
add
fldcw
stos
xchg
xchg
orb
jle
lea
fildl
negb
cs
call
into
in
add
pushf
ljmp
gs
push
mov
dec
jecxz
cmpsb
jbe
cmpsb
mov
call
mov
jge
xchg
mov
mov
fnstenv
out
call
adc
jne
push
in
jge
dec
lahf
lock
or
jmp
cmp
jae
xor
jmp
inc
push
das
mov
icebp
pop
mov
fs
lods
cli
aaa
push
or
movsl
jb
and
mov
in
xor
out
in
mov
mov
outsl
mov
fdivrl
pop
xor
pop
shrb
clc
sbb
movsb
jecxz
pushf
fstpl
jge
lahf
inc
in
jae
std
jmp
xchg
je
sub
push
nop
imul
push
fldt
xchg
sti
sbb
push
mov
arpl
daa
mov
push
repz
sti
pop
fistpll
loopne
mov
insl
ret
outsl
aad
pushf
sbb
push
and
sbb
cltd
jmp
pop
and
rcl
ja
pop
movsl
cmpsl
add
scas
and
mov
hlt
jb
pop
pop
dec
push
mov
mov
inc
hlt
bound
decb
pushf
stc
lods
out
mov
dec
mov
and
outsl
scas
dec
insl
push
sub
sarl
dec
mov
repz
or
pushf
fsubl
shrl
and
jnp
insb
mov
ror
dec
dec
xor
dec
inc
nop
and
insl
std
leave
mov
dec
xchg
int
lahf
outsb
xor
jmp
out
mov
jb
sub
and
popf
fcoml
xchg
cmp
ficompl
popf
adc
xchg
inc
in
loopne
cmc
dec
jno
sbb
and
mov
and
imul
jne
xor
sub
cmp
mov
repz
xchg
adc
sub
mov
gs
inc
and
fsubl
push
xchg
adc
jbe
es
and
cmpsb
pop
loop
lcall
arpl
stos
stos
xor
adc
add
in
movsl
out
jno
bound
sbb
fisubrs
movsl
aad
jbe
jnp
mov
outsb
xchg
mov
dec
cmp
mov
mov
xchg
push
push
inc
adc
fimull
mov
adc
popf
xorl
dec
xchg
sbb
stos
xor
fisubl
or
pop
mov
lahf
negl
push
sbb
imul
fldt
test
xlat
jmp
jmp
jle
xchg
ss
dec
push
cmc
aad
sbb
adcl
paddusw
dec
insb
subb
dec
xor
sbb
jmp
jns
push
loop
orl
ds
jle
sub
or
cltd
jl
loope
shlb
jp
int3
inc
mov
daa
scas
cmc
sub
push
mov
icebp
fiaddl
mov
flds
sbb
mov
subb
insl
jg
cmc
push
in
pop
fidivrs
out
mov
in
xchg
pop
scas
aas
enter
xor
sub
repz
xchg
add
adc
adc
notb
push
addr16
mov
sub
gs
mov
out
jo
xchg
xchg
pop
lahf
pop
xchg
pop
ds
int3
cmpsl
jp
lret
js
daa
jmp
fisubl
cld
cmpl
in
js
jecxz
sbb
mov
push
leave
es
mov
hlt
jno
push
jmp
pop
lret
rorb
loope
and
lods
mov
push
outsl
int
shrl
jg
or
or
dec
ljmp
add
push
in
mov
mov
pop
sbb
pusha
pop
ficoml
rorl
shrb
pop
pop
in
sbb
incb
test
mov
cmp
stos
pushf
out
adc
je
outsb
out
je
add
cs
and
bound
adc
xchg
mov
jne
adc
loope
lods
pop
sub
ret
aas
sbb
in
inc
inc
sub
dec
cmp
mov
xchg
sub
mov
push
dec
fdivrl
inc
sarl
sti
lods
cltd
shll
mov
jp
loopne
inc
mov
repz
inc
shrl
xor
les
dec
sbb
aad
mov
pop
std
in
test
xchg
mov
mov
fs
inc
mov
cmp
sub
out
cmp
xlat
push
inc
sbb
jecxz
pop
pop
sub
xchg
mov
xchg
call
daa
inc
int3
mov
movsl
loope
lock
push
scas
into
pop
adcb
mov
or
inc
adc
cli
out
jbe
push
rcr
xor
ljmp
mov
xchg
xor
mov
mov
out
cmpsl
jl
pop
fbstp
btc
adc
mov
cmc
test
rorl
or
pop
adc
xlat
pop
pushf
rcrl
mov
icebp
sub
mov
call
jb
fbstp
aad
xchg
in
push
js
sub
mov
dec
or
out
cmp
mov
jno
mov
ljmp
fucomip
push
xchg
pushf
fwait
or
dec
shrl
mov
fdivs
mov
fsubl
mov
cmp
pop
pusha
jo
xor
loopne
mov
push
push
and
pop
xlat
cwtl
icebp
xchg
int
xorl
xor
mov
lret
enter
sbb
pop
loope
mov
add
mov
addr16
xor
inc
add
jmp
sbb
mov
ljmp
into
int
xchg
xchg
jmp
sarb
dec
outsl
push
or
cld
pushf
pop
pop
mov
adc
outsb
and
notb
cmp
shl
lock
sti
inc
fldcw
ret
inc
rorb
mov
mov
loopne
mov
mov
push
fisttps
sub
ret
add
xchg
sbb
add
cmpsb
lds
mov
dec
cmpsl
out
inc
fistpll
jbe
sub
cltd
incb
js
lcall
test
scas
push
das
mov
mov
xor
mov
xor
aas
aas
popf
pop
push
cmp
mov
movsb
addr16
xlat
fadds
add
fisubrs
xchg
push
dec
rcl
sarb
xchg
or
sub
push
loop
fdivs
mov
fwait
xor
lahf
xchg
sub
jp
mov
dec
in
mov
xchg
stos
cld
ss
jmp
jle
push
dec
fs
add
push
sbbl
in
pushf
ffree
fcomps
add
or
fsubs
ret
call
and
outsl
adcl
xchg
test
ss
decb
or
in
lods
fisttps
inc
popa
sub
dec
adc
ret
cmp
ficomps
imul
adc
outsb
push
popa
js
xor
push
ret
cwtl
aad
fcmovbe
inc
push
popa
adc
int
ja
decl
mov
sti
xor
adc
xor
imul
push
cmp
jmp
sbb
arpl
dec
imul
mov
or
xor
nop
into
in
outsl
jo
mov
imul
lock
fs
push
sbb
fmull
je
and
lods
jno
lcall
inc
cmp
fwait
cli
popa
xor
jle
xor
push
arpl
pop
lds
mov
and
imul
mov
fdivrp
jecxz
in
and
fdivrp
fwait
lds
jbe
gs
popa
test
mov
popa
xor
xor
adc
pusha
pop
sbb
fs
lds
dec
jns
lahf
lods
push
mov
sahf
sub
push
mov
cmp
inc
cmc
inc
cli
movsb
lock
daa
cs
test
scas
imul
jns
inc
js
lods
ds
fnstsw
sub
cmp
fsubp
pop
dec
xchg
cmp
mov
pop
int3
aaa
sbb
sbb
clc
loope
jle
push
cmp
sbb
cmp
add
mov
stc
or
fimuls
rcr
ficoms
loopne
push
sbb
cmp
ljmp
mov
addr16
push
repz
and
mov
fcom
and
pushf
push
fistpll
cmpsb
addl
lods
mov
inc
in
movsb
sbb
mov
insb
mov
push
ficoms
setns
jns
mov
jmp
into
sahf
in
lods
cmpsl
mov
or
subl
rolb
xor
or
or
cmp
mov
into
repz
mov
mov
push
orl
es
mov
and
cmp
jo
push
mov
push
in
lods
push
shrb
jg
mov
cmp
xchg
repnz
punpckhdq
fdivrl
test
out
mov
iret
ds
cld
fwait
loop
fcmovnu
push
dec
mov
sub
scas
inc
fidivrs
outsb
sub
insb
rclb
das
ja
xchg
mov
mov
daa
movsb
add
insl
cld
push
jg
in
lds
mov
cmp
lcall
mov
or
adc
and
movsb
movsl
push
sub
loopne
cmp
notl
mov
xchg
mov
push
push
iret
xor
pop
dec
subb
ljmp
movsb
xor
scas
and
dec
in
and
shlb
xchg
ljmp
insl
mov
jmp
and
in
int3
ss
sub
push
xchg
in
mov
sbb
cwtl
and
inc
pop
test
leave
movsl
out
scas
or
idivb
push
xchg
mov
or
icebp
cmpsl
pop
push
mov
push
enter
mov
sub
mov
ret
pop
mov
cs
ljmp
jl
pop
add
push
inc
pop
mov
add
test
cmpb
cmp
mov
sahf
ljmp
scas
dec
aad
aaa
mov
xchg
sub
add
daa
mov
mov
mov
push
ret
cmp
imul
aad
push
cmc
push
shlb
hlt
and
std
xchg
cltd
sbb
and
mov
xor
lock
stos
orb
sahf
bound
mov
and
fnstenv
mov
and
adc
pop
clc
shll
cmp
add
cmpsb
jecxz
dec
in
push
pop
shll
aad
jle
scas
mov
aas
insb
jle
and
mov
in
adc
divl
fstp
pop
cmp
das
jl
jp
inc
sbb
sub
sub
add
in
push
mov
xchg
or
fnsave
dec
scas
pushf
or
mov
sbb
cltd
insl
mov
and
jbe
out
xchg
stc
loope
insl
loopne
pushf
mov
inc
push
out
imul
out
jbe
push
push
xor
mov
push
jmp
movsl
shrb
iret
jo
fisubrs
mov
out
inc
call
popa
or
sahf
mov
sub
adc
xchg
rcl
ljmp
mov
dec
adcb
fnstsw
adc
push
jecxz
cmc
inc
orb
add
enter
lods
loopne
testl
imul
push
cltd
push
jl
add
cld
repz
arpl
dec
mov
icebp
push
dec
and
lcall
pop
mov
enter
pop
inc
mov
push
push
push
xlat
clc
jb
push
xchg
add
repz
clc
nop
xor
mov
out
nop
adc
por
into
lock
lock
inc
push
imul
cmp
popf
fldl
cld
adc
push
shll
and
mov
lcall
jge
add
mov
js
push
jecxz
mov
xchg
and
fildl
enter
fsubr
aaa
outsb
xlat
jne
or
ds
bound
test
xor
in
lret
ja
inc
and
xor
popf
xor
icebp
shll
out
ljmp
rcl
inc
lahf
cmp
jnp
rep
mov
push
push
sbb
jp
xchg
insb
add
add
aas
push
cwtl
jns
xorl
cli
ljmp
pop
jo
les
cli
jl
sub
pop
fs
sbb
xor
std
pushf
mov
add
add
mov
adc
or
xchg
fdivp
fdivrs
fisubs
jb
push
out
adc
mov
adc
scas
mov
pop
push
ret
addb
out
stos
fs
sbb
call
jne
push
xchg
outsl
fildl
add
lahf
cmpsl
daa
push
push
loopne
test
fldenv
jecxz
cmp
xor
aaa
movq
mov
pop
dec
aad
add
mov
lods
shrl
lods
sub
xor
popa
mov
fwait
fwait
mov
adc
xlat
dec
das
dec
popf
int
jl
in
jo
mov
pushf
mov
add
out
pop
test
subb
stos
or
je
lret
mov
out
push
les
popa
cs
adc
jmp
movsb
pop
pop
jnp
idivb
push
js
pop
inc
or
xlat
sub
jle
xchg
dec
mov
sbb
arpl
mov
pop
push
and
inc
sarl
pop
xor
daa
cmp
mov
pop
mov
jns
dec
mov
adc
jbe
inc
loop
sbb
rclb
mov
adc
add
rep
into
rol
push
daa
aas
jo
cld
lods
dec
xchg
pop
fcoms
pushf
dec
movsl
mov
out
sbb
shlb
movsl
mov
pop
mov
in
imul
mov
or
hlt
jo
adcb
out
stos
mov
int3
icebp
aaa
sbb
icebp
push
add
cwtl
jns
add
inc
jge
jb
mov
mov
mov
cmpsb
fldenv
cli
cmc
pop
sub
loope
popf
jb
imul
push
jo
in
sti
adc
orl
ret
movsb
pusha
inc
jp
lret
lret
jmp
or
mov
or
mov
test
mov
rol
sbb
das
push
push
jne
imul
or
cmove
sbb
add
mov
ja
cli
mov
and
cs
ss
fwait
xor
ljmp
push
push
mov
mov
shrl
xchg
or
hlt
jmp
push
xchg
dec
adc
sti
inc
xchg
and
ds
add
cli
shrl
pushf
sub
and
fsubr
mov
insb
push
nop
insb
jge
pop
in
in
fbstp
mov
das
push
pushf
repnz
enter
inc
jp
popf
and
loopne
pop
insb
dec
iret
addl
rcrb
ret
cltd
xor
nop
les
fistpl
push
lods
loopne
std
out
lea
dec
in
pusha
mov
and
or
in
call
scas
pop
adc
js
cltd
cld
cmp
mov
mov
cwtl
aas
xor
fisttpll
mov
push
inc
cmp
mov
xchg
shrb
add
jp
in
scas
out
mov
xor
sub
mov
fucomip
mov
adc
imul
cmp
adc
or
or
mov
sbbb
sbb
daa
test
cmp
xor
mov
cltd
roll
jb
sub
daa
cmpsl
push
rcrb
push
lea
popf
in
or
push
cmp
inc
cs
daa
cmp
jle
outsl
mov
testb
xchg
xchg
pushf
and
push
jnp
push
test
push
stos
cmpsl
dec
jns
gs
push
fwait
jmp
pop
in
movsl
add
aam
push
sub
adc
ficomps
adc
leave
cs
shlb
cmc
packuswb
sti
cwtl
data16
mov
xchg
mov
mov
enter
push
scas
scas
and
mov
loopne
enter
add
push
mov
lock
addr16
add
shlb
jge
mov
scas
pop
or
mov
nop
loop
dec
rcll
xor
cmpsb
pop
sahf
loop
nop
and
fwait
sbb
and
mov
mov
stc
cltd
push
and
sub
inc
cmp
push
mov
mov
test
adc
filds
push
shl
mov
sbb
dec
adc
cmp
in
mov
enter
int3
or
js
xchg
mov
mov
lahf
adc
adc
adc
shr
push
addr16
or
cmpb
mov
imul
adc
push
mov
out
cmp
push
mov
loop
mov
inc
push
push
rclb
test
loope
ret
ljmp
xor
leave
scas
in
lahf
pop
in
lock
leave
fs
xor
enter
popl
pop
jo
pop
push
mov
mov
add
xchg
mov
fs
lods
setne
mov
jmp
cmc
or
fildl
xlat
xlat
das
sbb
mov
xlat
js
mov
mov
loope
data16
pop
loop
push
je
add
sub
and
cmpsl
dec
stc
add
mov
xchg
mov
push
idivl
xchg
or
and
xchg
iret
fidivs
xchg
jb
scas
mov
cwtl
movsl
sub
test
in
dec
xor
mov
int3
pusha
or
rcll
push
inc
add
movsb
mov
push
idivl
jl
adc
jbe
sbbb
mov
dec
xor
enter
jmp
or
arpl
mov
fstps
popf
push
shll
loopne
imul
sub
shll
sbb
mov
jne
nop
mov
push
std
aam
xlat
mov
xchg
jns
in
xor
inc
mov
jp
mov
xor
sub
movsl
call
daa
xchg
and
push
pop
mov
out
into
jnp
imul
pop
cmp
lods
sub
ljmp
jle
cwtl
inc
imul
adc
dec
sahf
pop
jecxz
sbb
jecxz
dec
dec
mov
stos
push
pop
icebp
sti
pop
mov
orb
ss
movsl
and
nopl
mov
pop
lods
ja
cmp
pop
bound
push
pop
inc
cmpsb
jmp
or
in
lea
inc
bound
xor
fcomip
cs
fcmovu
push
and
push
xchg
in
adc
ja
xchg
xor
iret
hlt
or
repnz
dec
andl
hlt
insl
nop
in
aaa
scas
xchg
lods
shlb
pop
in
outsb
push
add
stos
sbb
rorl
dec
jae
and
pushf
jg
lods
hlt
test
hlt
xchg
inc
sti
xchg
insb
pop
fisttpll
push
daa
sti
cld
and
lret
repz
mov
test
subb
inc
pop
sbb
xchg
jp
adc
outsb
inc
out
mov
mov
jp
test
fistpl
fidivs
lds
pushf
and
jmp
mov
ss
jnp
jge
pop
dec
fisubrs
mov
sbb
sbb
mov
pop
sub
mov
dec
cs
inc
mov
push
out
loop
push
jecxz
in
cmp
or
stc
aaa
dec
sbb
xor
sti
filds
xchg
test
xor
mov
es
pushf
jg
xchg
sbbl
inc
xor
div
in
dec
dec
iret
and
push
pop
js
jmp
out
pop
mov
out
es
mov
xchg
aad
push
jp
xchg
and
out
sbb
jnp
inc
enter
adc
and
repnz
int3
je
push
mov
mov
jo
cld
or
xor
cld
pushl
arpl
pop
lcall
fdivrs
shrl
mov
gs
mov
loopne
pop
jl
inc
sbb
pop
fldl
dec
jl
add
or
xchg
jnp
sbb
xchg
fadd
in
repz
mov
or
mov
andb
dec
and
mov
jae
rcrl
icebp
inc
xchg
xlat
jnp
pop
insl
gs
or
hlt
xchg
sbb
inc
or
call
inc
mov
add
ss
mov
mov
arpl
scas
xchg
es
cmpsl
pop
loop
movsb
fisubrl
into
or
bound
sbb
inc
cmpsl
mov
dec
test
jp
out
push
pop
mov
cmpsb
test
ret
les
cmc
aad
mov
addr16
loopne
test
adc
roll
inc
sub
jp
sub
mov
xchg
outsb
inc
mov
jmp
mov
or
je
fs
lret
sahf
push
stos
lock
push
ss
sub
cwtl
dec
sbb
in
std
ffreep
adc
cli
mov
imul
pop
fdiv
jns
popa
fmull
pop
test
jne
rclb
divl
adc
dec
and
adc
in
lret
lods
adcb
jle
jbe
pop
fs
cmpsb
adc
outsb
xchg
jns
sub
fiadds
cwtl
inc
cwtl
test
movsb
and
or
push
xchg
cmc
sub
xor
xchg
push
and
add
test
dec
je
mov
lods
movsb
xchg
jbe
cli
mov
das
jno
mov
mov
push
loope
in
loopne
std
pop
mov
jecxz
sar
inc
or
jne
xchg
aad
fcmovne
loope
mov
in
cmp
repnz
mull
dec
or
mov
inc
aad
loop
push
xchg
push
and
adc
cmc
xor
cs
or
rolb
mov
movsb
rcll
addr16
jnp
jb
lock
mov
lret
push
addr16
gs
mov
mov
add
pop
add
mov
adc
dec
jo
pushf
aas
adcb
jmp
popf
sti
and
lock
int
inc
test
pop
sub
mov
adc
in
pop
mov
aam
into
mov
sub
fsubl
lock
and
pop
sbb
mov
cwtl
cmp
imul
push
stos
int3
dec
in
and
xchg
bound
in
mov
in
add
rorb
sub
dec
cmp
sub
xchg
icebp
ficomps
std
or
dec
insl
movsb
jb
jp
jnp
stos
insb
add
push
lea
data16
sahf
xor
pop
shrb
push
push
xor
xor
adc
push
fcmove
rcll
push
leave
test
jge
inc
dec
imul
jp
xchg
mov
xchg
bound
sbb
sbb
mov
cs
aaa
cmpsl
sbb
lea
or
add
adc
add
mov
fisubrs
cmp
fwait
dec
cwtl
mov
jo
aas
stos
fidivs
adc
fildll
cmp
lret
inc
mov
dec
outsl
push
sub
subl
sbb
and
aaa
das
rolb
cmpsl
sub
out
scas
fisubs
insb
or
lret
cwtl
mov
out
adc
pop
add
mov
jnp
pop
push
into
push
adc
cmp
iret
outsl
cmc
into
cmpb
push
test
ret
or
push
xchg
fistpll
push
inc
inc
and
push
movsb
test
xchg
xchg
jle
arpl
mov
jno
ss
add
lcall
cld
sub
imul
test
nop
loopne
xor
out
test
jnp
pushf
or
pop
pop
xor
adc
mov
cmp
mulb
fcoms
sub
aas
and
lahf
sbb
lods
aad
scas
leave
and
rcrl
dec
popf
insb
and
push
leave
arpl
push
aam
and
and
cmp
xchg
xor
sbb
fidivrs
int
out
xchg
xchg
pushf
outsb
mov
sbb
andl
and
cmp
popa
orl
std
rcrl
mov
lods
push
xchg
fildll
fsubrp
mov
inc
popa
test
dec
push
mov
punpcklbw
lcall
pop
and
test
dec
loope
out
movsb
out
daa
cmpsl
add
sbb
cmpsb
stos
adc
pop
stc
js
cmpsb
fs
cltd
rol
fisttpll
in
lea
out
mov
loopne
jo
sub
int
xchg
xlat
push
das
cmp
test
mov
push
mov
mov
add
inc
arpl
lods
pop
notb
pop
mov
fmul
add
js
cmp
mov
inc
xchg
jae
lods
cltd
sti
pop
sub
pop
inc
xchg
ljmp
andb
js
jg
out
in
and
jecxz
mov
mov
mov
push
dec
inc
cs
add
aas
test
or
push
xchg
jno
push
fiadds
aam
das
inc
bound
ja
push
jg
jmp
jmp
jmp
cmpsl
mov
scas
adcl
push
insb
shlb
mov
roll
push
sub
loop
adc
aad
push
jmp
mov
addr16
dec
pop
xlat
ret
xor
mov
xchg
insb
push
jmp
fwait
leave
std
mov
xchg
mov
mov
int3
sbb
xor
imul
xchg
lret
and
roll
into
mov
or
or
insb
inc
das
ficomps
inc
jo
and
xchg
lock
cltd
sub
push
jp
inc
dec
sti
fisttpll
jo
push
mov
inc
mov
insb
test
xchg
stc
mov
mov
adc
adcl
fimuls
ficoms
mov
in
in
popf
cmp
push
sbb
into
jmp
mov
dec
andb
inc
adc
cmp
test
mov
lret
push
cmp
repz
mov
jl
ds
insb
sbb
mov
dec
jbe
rcl
fnstsw
sub
movsl
mov
mov
notb
cmp
jo
or
xchg
and
mov
mov
imul
push
shll
mov
pop
mov
and
adc
push
mov
ljmp
inc
subl
in
push
mov
sub
mov
out
dec
cmp
xor
gs
gs
jl
jecxz
sahf
dec
addr16
das
sbb
jb
ss
fiadds
dec
adc
lds
repz
imul
shr
rol
je
mov
je
in
adcb
bound
push
sbb
xor
dec
rolb
lahf
adc
cmpsl
test
push
ja
cld
mov
xor
mov
inc
mov
cli
jbe
mov
or
push
shlb
rolb
sbb
es
iret
ljmp
sti
mov
fdivl
mov
xchg
xchg
pop
jns
in
arpl
ret
arpl
es
cmp
push
push
pop
push
sti
mov
loope
sti
dec
inc
inc
push
xchg
pop
test
inc
fidivrs
orl
and
jne
lret
cli
adc
cwtl
adc
sub
lds
adc
mov
test
arpl
in
jae
testl
je
imulb
cli
cli
push
imul
jnp
imul
je
xchg
cmp
mov
xchg
outsb
xor
or
repnz
xchg
ja
jno
mov
pop
push
aam
pop
adc
push
adc
loopne
inc
call
stc
xlat
cs
jp
sbb
loop
aaa
imul
dec
and
cltd
ret
cmp
mov
les
fs
jl
or
pop
cmp
jbe
jb
shll
mov
xchg
xchg
ret
mov
lock
or
fsubrl
cli
pop
je
pop
bound
and
jnp
shll
sub
and
dec
fcompl
jb
sub
or
sbb
mov
test
push
dec
ljmp
dec
mov
xchg
and
and
dec
shrb
push
lock
xchg
out
xlat
xor
ljmp
mov
enter
aam
fnstcw
mov
adc
mov
xor
cmpsl
and
and
xchg
addr16
ret
int
jg
pop
cmpb
test
fs
push
adc
cs
push
inc
sub
dec
dec
movsb
pop
push
ss
insb
xor
clc
add
dec
icebp
in
jmp
sub
jl
xchg
jne
push
adc
in
push
dec
pop
test
int
lret
mov
popf
lahf
lock
and
push
or
jne
push
mov
std
sahf
pop
int3
cmp
push
scas
xchg
mov
gs
ds
lret
push
shlb
rorb
loopne
lods
mov
inc
cmc
mov
xor
xchg
mov
nop
dec
bound
add
jnp
mov
sbbb
lcall
push
mov
daa
and
ret
adc
pop
mov
mov
call
or
pushf
jae
cmp
mov
lods
jp
jmp
sub
cmpsb
fcomps
xchg
popa
push
and
hlt
cltd
fs
jne
xor
mov
lahf
repnz
and
push
sub
sbb
int3
cld
fwait
jl
popa
and
dec
in
lcall
cld
cwtl
jo
mov
movsl
adc
in
nop
in
inc
fldl2e
aam
push
push
shrb
shlb
dec
fldt
jecxz
xchg
std
loope
ret
xorl
and
aas
shrl
adc
insb
jno
mov
bound
push
xchg
xchg
pop
insb
arpl
inc
cs
xchg
or
adc
mov
push
ret
test
call
jecxz
lods
call
push
cmpsb
mov
in
fiaddl
add
cmpsb
sub
add
and
sub
ja
jae
mov
std
sub
fsts
icebp
cltd
jp
push
mov
or
cmpsb
xor
adc
jnp
dec
bound
lret
lea
push
xor
std
loopne
arpl
pop
mov
ret
push
mov
int
lods
mov
out
jl
scas
sbb
mov
aaa
pop
fldl2e
sbb
mov
pop
outsl
or
mov
sbb
mov
mov
cli
jns
popf
adc
sub
inc
xor
ja
lock
imul
dec
mov
dec
push
fs
mov
add
sbb
in
mov
dec
add
sbb
and
mov
idiv
jmp
imul
mov
in
fs
sbb
stc
mov
sbb
add
inc
insl
cld
push
adc
cwtl
cmpsl
mov
cld
push
divl
in
cmc
sub
and
js
leave
inc
mov
pop
sbbb
cmc
sbbl
rcll
inc
out
pop
lret
aam
aam
push
fucom
divb
push
aas
inc
and
xchg
push
pusha
cmp
adcl
subb
test
bound
and
notl
lock
push
mov
pushf
sub
clc
push
lods
mov
mov
sub
jo
adc
imul
lea
icebp
jp
popf
faddl
cmpsb
push
pop
jb
add
insb
inc
outsl
sub
xchg
pop
scas
jne
sub
mov
and
mov
test
and
hlt
mov
xlat
push
and
rcrb
jo
push
in
sbb
test
xchg
shrb
jl
mov
out
in
leave
push
push
mov
cmp
mov
stos
fldt
mov
les
lods
cmp
xlat
sbb
jae
test
cmp
aaa
or
add
nop
xor
adcl
adc
sub
cmpsb
add
inc
xor
push
cmp
sbb
lcall
into
push
dec
icebp
mov
and
loopne
ret
dec
jp
push
int
jl
ficomps
into
inc
fs
stc
mov
nop
imull
push
cmp
clc
inc
out
fidivs
lock
lock
and
jae
popa
xchg
js
mov
jp
hlt
fistl
xchg
addr16
sbbl
mov
add
ds
aad
addr16
cmp
xchg
arpl
rorl
push
pop
out
cld
mov
insl
fwait
pop
bound
fstpl
and
mov
jge
xor
inc
lcall
inc
sbb
frstor
inc
inc
cltd
fidivs
push
data16
stos
and
inc
mov
iret
ja
xor
inc
fimull
adc
cld
ficoms
mov
sarl
push
push
add
cld
icebp
dec
icebp
jne
rcrb
pop
add
fwait
loop
movsl
and
jl
gs
loope
cwtl
inc
nop
jb
mov
test
mov
lea
fs
aad
xchg
loopne
test
mov
pop
dec
mov
ret
call
add
sub
call
sub
pop
je
jmp
fs
out
and
sbb
sub
jle
xor
add
nop
enter
push
js
arpl
mov
daa
dec
sarl
lods
ja
imul
int
bound
push
ljmp
cmpsl
jmp
cwtl
loope
lods
filds
ja
and
jno
cmp
clc
mov
sub
adc
mov
and
jns
out
popa
out
insl
ficomps
nop
push
aad
mov
xchg
jo
scas
mov
cld
das
movsl
int3
cmpsb
adc
sbb
scas
adc
int3
push
aam
mov
ret
mov
cwtl
int3
pop
sbb
sbb
enter
shrl
jmp
sahf
xor
out
mov
xchg
pushf
scas
mov
sbb
in
fsubrp
hlt
arpl
push
jle
push
pop
dec
std
movsl
ljmp
and
mov
mov
fcmovnu
sbb
vmwrite
aam
mov
dec
fwait
iret
and
mov
or
inc
cmp
iret
ljmp
add
nop
sub
mov
pop
push
loop
loopne
pop
lret
mov
pop
ret
in
imul
add
nop
movlps
mov
add
out
fstpt
aas
push
inc
add
in
sbb
pop
cld
lcall
scas
xor
jg
push
fisttpl
mov
xchg
mov
cmp
subl
sub
ret
sub
mov
mov
enter
test
pop
imul
sahf
mov
mov
dec
fildl
outsb
popa
mov
push
stc
xchg
cwtl
xor
repz
shll
cmpsl
push
xor
xor
push
xchg
mov
ljmp
shll
dec
mov
xchg
pop
and
mov
mov
shl
dec
mov
imul
pop
sub
pushf
sarl
lcall
std
inc
nop
jb
fs
cltd
push
leave
mov
xchg
mov
lods
jle
xchg
fnstenv
mov
aam
mov
stos
int
cwtl
jo
mov
fdivr
sub
and
bound
cmp
mov
jno
push
jmp
and
cltd
inc
idiv
fistpll
scas
and
mov
roll
jp
xor
sub
ds
jle
aas
sub
lret
cmpsl
inc
mov
push
pop
andl
ffree
sub
mov
out
jae
ja
stc
fisubl
cld
pop
sub
xchg
mov
mov
insl
cld
cmc
movl
mov
dec
std
dec
push
mov
mov
cld
es
sbb
pop
mov
mov
push
ret
inc
push
and
ja
pop
repz
dec
sub
dec
imull
mov
mov
in
xchg
cmp
jnp
mov
mov
aas
lahf
outsb
in
pop
and
lods
xchg
sub
push
xchg
addr16
clc
xor
aas
cld
fsubp
xor
mov
dec
sub
adc
xor
sub
cmp
fidivs
movsb
mov
xor
jecxz
hlt
cli
mov
shl
loop
into
inc
xchg
iret
mov
ret
out
sarl
and
shlb
mov
insb
or
inc
mov
testl
pop
mov
dec
outsl
xchg
out
inc
mov
jo
nop
enter
push
and
and
mov
sbb
negl
insb
push
clc
nop
add
mov
xchg
jbe
icebp
mov
lods
into
and
fnstsw
arpl
cld
dec
xor
bound
push
fists
add
and
jmp
mov
imul
fnstcw
jae
mov
cmp
push
cmp
add
lds
jg
outsl
clc
or
inc
leave
xor
mov
insl
xchg
stos
popf
push
sti
xchg
imull
mov
xorb
data16
divl
test
sbb
sub
stos
xor
pop
inc
bnd
popa
add
jnp
flds
mov
jnp
mov
aam
push
movsb
mov
and
dec
mov
pop
sbb
xchg
gs
lock
leave
xchg
add
pop
xchg
std
sbb
test
xchg
pop
mov
pop
fs
or
in
in
or
andb
in
and
jle
repnz
mov
sub
aas
jb
sub
sub
inc
outsl
sbb
fdivl
jle
daa
je
sti
lods
gs
rcll
popa
push
xor
dec
inc
jecxz
lods
sub
popa
and
mov
xchg
pop
jbe
mov
pop
lock
fcomip
dec
xchg
loopne
pop
daa
sahf
fcompl
add
xor
dec
es
push
xchg
mov
dec
or
dec
shrl
cs
adc
mul
outsb
sbbb
rcrb
imul
fs
ljmp
repnz
insl
movsl
jmp
sub
into
jmp
xchg
pop
adc
cmpl
scas
mov
sbb
push
icebp
test
mov
das
ret
sahf
sahf
repnz
std
mov
cld
cli
cli
sbb
mov
lock
das
divl
or
or
xor
inc
in
cmpsb
scas
dec
les
inc
popf
cltd
adc
fsubrl
sbb
xchg
leave
stos
shl
aaa
cld
push
icebp
pop
sbb
fidivs
mov
sub
jecxz
adc
iret
pop
pop
addb
jb
inc
pop
push
mov
push
loope
jmp
aam
adc
mov
fsubp
cltd
xor
add
pushf
mov
add
jo
pop
cmp
cmpsb
xor
leave
insb
testb
mov
and
pop
fsts
iret
into
shll
sahf
pop
jb
pop
cmp
adc
push
push
xor
dec
push
xchg
xor
int3
repz
cld
xchg
mov
fprem1
and
inc
inc
test
xor
out
mov
xor
inc
or
sti
mov
or
lcall
fisubrs
outsb
xor
sahf
pop
sahf
sbb
jmp
push
jbe
testl
rcll
fwait
test
jmp
xor
out
mov
jle
xchg
std
sbb
fisubrl
pop
lcall
outsb
enter
out
and
fs
aas
popf
cmp
movsl
add
lahf
shrb
sub
bswap
insl
movsb
mov
pop
mov
xor
les
cmp
cli
mov
bound
sti
ficompl
lret
fadd
xor
outsl
jo
pop
pop
lret
scas
lahf
jo
addr16
dec
sbb
xor
cld
sbb
stc
mov
adc
jecxz
aad
popa
pop
mov
push
clc
dec
shrb
dec
lods
pushf
jbe
lea
scas
jp
mov
jno
lcall
enter
cs
scas
mov
ja
xchg
cld
mov
sub
push
add
add
aad
adc
insl
dec
fildl
pop
aad
in
push
outsb
aam
sbb
push
lods
jbe
mov
dec
xorl
dec
xchg
in
xchg
enter
xchg
sub
xor
inc
leave
jge
sub
hlt
inc
or
loope
decl
pop
popf
sbb
mov
mov
xor
nop
push
mov
gs
aas
mov
fstl
imul
lock
push
lret
sub
lds
or
cld
inc
cs
pop
pusha
jbe
xchg
jl
and
pop
push
mov
cmpsb
shr
and
add
jp
and
push
loope
out
lods
cli
mov
or
ss
imul
movsl
aam
adc
sbb
jne
loope
mov
loop
push
jmp
mov
std
sarb
movsl
data16
arpl
mov
pop
imul
mov
jo
xchg
sbb
loop
or
mov
jp
popf
mov
out
outsl
pusha
push
add
bound
adc
mov
or
mov
lahf
or
imul
pop
jecxz
testb
jecxz
roll
xor
lcall
add
xchg
jmp
xchg
ljmp
mov
ror
leave
xor
sahf
jle
adc
push
or
ds
adcl
push
aas
jmp
in
jne
push
push
in
add
sub
call
push
jo
mov
dec
shr
test
pop
movsl
jbe
je
inc
lock
and
mov
xchg
lcall
cmp
xchg
std
dec
les
sub
dec
popa
stos
loope
sbb
dec
mov
shll
adc
sub
int3
shlb
lcall
dec
mov
es
arpl
or
xchg
and
mov
dec
cmp
sub
mov
stc
icebp
push
xor
sub
and
adcb
jecxz
inc
scas
inc
sti
sbb
pop
les
cmp
inc
pop
ds
pop
clc
sub
pop
push
xchg
subl
pushf
mov
lds
mov
mov
xor
push
xchg
leave
les
jo
inc
push
inc
push
dec
and
cmpsl
mov
xor
aaa
push
dec
mov
into
scas
shlb
fwait
xor
das
js
je
call
pop
ror
loopne
jbe
adc
fldcw
les
stos
pop
mov
push
push
jnp
fadds
dec
push
std
add
add
lret
adc
out
out
jecxz
and
icebp
xor
push
adc
inc
fwait
lcall
sbb
pop
or
add
sahf
xchg
mov
aad
sub
insb
or
cld
mov
and
xchg
push
and
xchg
std
mov
movsb
icebp
shl
out
loopne
sbb
bound
fnstsw
sahf
pop
and
sub
add
stc
cli
add
mov
xor
mov
cld
cmp
test
jmp
mov
mov
iret
xchg
mov
arpl
mov
jecxz
jnp
lock
je
dec
insb
pop
ljmp
sbb
rcrb
jbe
je
sahf
data16
stos
arpl
and
cmpsb
inc
sbb
fwait
lock
xchg
dec
icebp
and
cltd
cmp
orl
push
inc
nop
and
lea
lods
aas
in
int
adc
testl
lods
shll
cmp
inc
aad
jae
xor
mov
js
out
ficoms
xchg
mov
clc
cld
pop
mov
add
in
in
fildll
rolb
inc
imul
rorl
out
sbb
jo
fsubs
fbld
call
sub
cli
xchg
cmp
cmc
sub
cwtl
push
or
cmpsl
dec
adc
dec
out
ds
inc
sub
xor
std
add
test
xchg
in
mov
popf
mov
aad
stos
out
aas
push
out
fwait
push
es
mov
or
xor
sahf
and
and
pushf
adc
leave
push
cld
dec
cwtl
mov
dec
rcl
popa
in
mov
sahf
sbb
xchg
push
shl
mov
lods
out
xlat
jb
imul
cld
fsubl
cwtl
out
mov
loop
xor
push
movsl
jo
les
pushf
pop
aam
testl
std
mov
push
repnz
pop
dec
outsl
mov
addl
jo
daa
sbb
shl
hlt
mov
lds
ljmp
cld
jb
jmp
xchg
dec
mov
xorb
inc
sub
aam
sbb
movl
sbbb
dec
push
or
jbe
std
xchg
cmp
inc
sub
pop
push
and
ja
mov
push
push
rcl
adc
mov
outsb
push
pop
lret
and
jo
test
mov
push
inc
mov
fstps
pop
adc
jo
xchg
dec
lods
mov
imul
add
fidivs
mov
jns
add
test
xor
sub
pop
shlb
out
or
xor
js
xchg
jge
cmp
out
mov
cmp
test
push
lret
repz
out
dec
andl
pop
sbb
mov
lahf
shlb
lahf
neg
popf
mov
jle
push
out
out
push
push
bound
jno
mov
sub
adc
mov
ljmp
push
sahf
movsl
lock
and
rolb
pop
das
inc
pop
pop
fistpl
outsb
lret
imul
bound
in
and
pop
loope
jmp
out
pushf
sbb
bound
push
adc
arpl
outsl
lock
jg,pt
push
xchg
xchg
lret
sub
jmp
mov
sbb
jl
test
gs
fwait
icebp
jp
shlb
das
ret
sbb
xchg
mov
and
pushf
fnstcw
jns
jb
xchg
mov
cmp
sarb
repz
and
pop
xor
push
dec
pusha
out
icebp
sbb
and
push
mov
dec
mov
icebp
shlb
adc
xchg
xchg
movsl
cmp
ficoms
inc
jmp
mov
xor
adc
cmp
ret
cltd
mov
imul
sbb
dec
outsl
mov
inc
cmpl
icebp
xor
clc
std
sbb
dec
mov
xchg
aad
test
dec
push
in
mov
out
pop
popf
cmp
cld
scas
push
stos
faddl
cmpsl
mov
mov
push
mov
xorb
fldt
sbb
and
loop
and
mov
mov
jg
in
xor
adc
dec
movsl
and
rcl
inc
or
inc
mov
and
nop
daa
cwtl
add
loope
mov
sbb
fmulp
sti
scas
shl
aaa
jne
aas
or
aas
ret
fdivr
jb
int3
pop
xor
loope
icebp
mov
sar
aam
lds
arpl
inc
cld
clc
andl
icebp
in
mov
cmp
cli
dec
and
fistps
cltd
out
pop
ljmp
data16
ret
sarb
push
mov
dec
mov
jecxz
cmp
lahf
arpl
sub
push
mov
enter
lock
mov
lret
xchg
and
scas
cli
xor
inc
pop
popa
pop
mov
cs
xchg
add
xor
ret
cld
data16
mov
xor
add
mov
scas
and
sbb
jns
in
std
cmp
sti
mov
mov
into
mov
ret
cmp
xor
xchg
pop
lds
mov
scas
dec
push
push
push
das
xchg
mov
andl
xor
mov
mov
clc
shlb
xchg
push
out
dec
fisttpll
call
popa
loope
insb
lcall
xor
in
pusha
bound
fimuls
loop
into
adc
fs
mov
push
ja
mov
sub
daa
jne
test
push
fwait
push
sbb
popf
mov
cmp
fisttps
cmp
inc
adc
cmpsb
sahf
and
xchg
daa
sbb
fcompl
xor
clc
icebp
test
add
lods
add
push
nop
pop
xchg
adc
sub
roll
cltd
nop
lods
daa
sub
icebp
jle
mov
stos
mov
dec
xchg
mov
xchg
cmc
jmp
fistpll
add
dec
mov
or
cmc
xor
cmp
inc
fsubs
out
inc
shlb
and
pop
popa
movl
inc
xchg
pusha
fsubr
stos
mov
adc
add
aas
aas
pop
xor
push
loopne
ret
das
pop
lahf
sbb
push
shlb
xchg
xchg
test
shrl
mov
imul
mov
sub
xchg
and
push
or
mov
jne
xor
and
mov
movsl
cs
sti
mov
test
adc
mov
test
lcall
in
jnp
divb
cmp
or
mov
jmp
lcall
gs
lcall
outsl
cli
sub
mov
hlt
xchg
inc
xchg
fwait
jnp
bound
cwtl
lods
cmpsl
or
nop
fmulp
je
mov
inc
mov
dec
xor
jb
sub
jae
jnp
cmp
stc
sbb
sub
mov
lahf
xchg
and
or
leave
xchg
ja
test
xchg
insb
mov
fdivr
in
sbb
je
fucomp
mov
inc
lods
bswap
insb
fstp
repnz
mov
inc
push
mov
and
jg
in
mov
jp
in
sbb
inc
cmpsl
lods
mov
cli
sub
out
cmp
gs
shll
xchg
clc
mov
lock
gs
scas
je
insb
and
xor
or
movsb
xchg
adc
xor
mov
lcall
dec
dec
pushf
rcrb
push
leave
fsubs
push
pop
lahf
pop
jns
sbb
out
adc
cld
lds
xlat
pop
fidivl
in
push
mov
in
fsubrl
movhps
cwtl
das
sub
mov
imul
aas
fldcw
icebp
in
in
addr16
fistps
lcall
sub
and
mov
or
cwtl
mov
mov
scas
jbe
iret
rcl
fs
fsubl
rcr
sbb
jb
daa
sub
push
out
sti
jmp
insl
pop
out
mov
mov
ljmp
xor
out
loopne
sub
loope
rcll
pop
lahf
xor
and
aas
push
nop
sub
inc
int
adc
cmpb
loope
es
xor
fdivs
sahf
adc
call
pop
push
fidivs
aaa
sbbl
pop
cld
rol
sub
out
mov
sbb
cmp
ficompl
scas
shrb
push
dec
dec
xor
enter
in
and
aas
pop
or
sub
movsb
inc
sub
mov
sub
pop
test
and
jbe
mov
xchg
filds
jb
xchg
push
and
ret
jo
push
ljmp
add
adc
clc
int3
adc
sbb
jecxz
xchg
fisubrs
mov
sbb
pop
xchg
adc
aaa
lods
xchg
push
sar
pop
inc
add
enter
sbb
ret
or
jbe
or
push
mov
cmpsb
and
mov
push
fwait
adc
sbb
popf
push
push
test
adc
mov
testb
out
cld
pusha
test
cmp
outsb
popa
pushf
push
or
xchg
jg
shlb
aaa
jg
adc
sub
sbb
movsl
mov
pop
loop
sub
or
cmpb
sub
fbstp
xchg
jo
ret
sbb
mov
mov
or
xchg
or
sbb
scas
mov
push
cmpsl
fcoms
mov
adc
fwait
imul
pop
adc
in
mov
scas
mov
imull
mov
int3
adc
fidivs
call
pop
gs
or
mov
mov
jl
data16
xchg
push
into
ucomiss
pushf
mov
addl
push
jp
lahf
pop
pop
ds
cmc
flds
jl
flds
mov
cmp
aam
or
mov
into
ret
pusha
push
pop
shrd
or
jbe
aad
test
stos
push
jg
loopne
adc
sub
pop
call
aaa
sbb
shlb
addl
outsb
or
xor
fs
mov
movsl
jp
push
xchg
adc
scas
push
lret
mov
xor
popf
data16
cld
sti
shrl
mov
jg
stc
cltd
inc
ret
pop
mov
jl
jl
movsb
jo
jmp
mov
imul
scas
pop
push
shlb
fists
cmpsl
cmc
push
xchg
mov
mov
gs
das
shlb
jae
fcomps
in
out
lods
into
adc
xchg
and
insb
or
pop
ret
out
movsb
sub
mov
push
bswap
dec
mov
xchg
pop
push
sub
sub
inc
or
mov
push
sub
bound
pop
cmpsb
cwtl
dec
dec
filds
cld
cmp
scas
rcrl
sbb
dec
push
jecxz
push
dec
clc
or
arpl
pop
data16
aam
daa
fistpll
pushf
cmpsl
shrl
lods
xchg
insl
aam
movsb
adc
cmc
dec
idiv
pop
cmc
jnp
sahf
cli
push
movsb
js
push
mov
lods
cmc
js,pt
bound
and
lret
jg
loopne
imul
inc
pop
pop
push
dec
pop
xor
dec
movsb
xor
adc
dec
cmpsb
in
cs
push
lcall
addl
xchg
int3
sbb
add
mov
pop
pop
cmp
nop
fmuls
pop
or
mov
loope
pop
mov
xlat
cmp
insb
sub
lret
or
cli
pand
inc
or
ljmp
jbe
fcmovu
mov
dec
pop
nop
add
imul
or
dec
push
jmp
daa
mov
jae
jb
das
xor
mov
inc
rclb
jo
out
aam
cmp
mov
push
or
inc
cwtl
add
fucom
aaa
mov
lock
popf
stos
cmovs
in
or
rcrl
mov
push
popf
test
cmp
sbb
lret
inc
sub
sbb
subb
mov
in
cmp
mov
lds
xlat
and
add
cmp
mov
imul
imul
sub
sub
adc
or
push
leave
inc
and
push
ja
lods
jo
mov
fisubrl
stc
scas
xchg
stc
cmp
outsb
nop
gs
pop
push
jo
pcmpeqb
arpl
mov
aam
ljmp
mov
bound
gs
fstp
scas
lods
addb
ds
inc
sub
inc
mov
fs
add
movsb
xorw
jmp
inc
jecxz
cltd
mov
imul
push
mov
xchg
out
push
mov
push
xchg
sub
cmp
pop
mov
pusha
in
jbe
mov
imul
mov
xor
jb
ret
cmp
loope
push
mov
fbld
add
pop
out
mov
stc
push
inc
lods
xor
xor
imul
idivl
stc
lret
sbb
sbb
mov
call
adcl
push
sarb
loopne
or
mov
lods
push
and
decl
jmp
pop
shrl
lea
mov
cmc
jmp
jno
jns
or
pop
mov
mov
mov
addb
imul
push
std
cmp
push
mov
cmp
in
insl
ret
iret
fdivp
scas
pop
cmpsb
pop
pop
push
push
jle
push
int
call
sub
ds
or
mov
mov
jae
mov
or
dec
lods
outsb
or
insb
xchg
dec
cwtl
push
int3
adc
cwtl
sbb
pop
dec
jp
in
or
push
jne
aaa
adc
dec
icebp
pop
movsb
fwait
or
mov
mov
cmc
cmp
cld
rclb
xor
xlat
int3
or
leave
stos
loope
push
sbb
push
cs
lahf
pushf
or
mov
xorb
cmp
xor
addr16
pop
imul
fstl
mov
xchg
gs
sub
hlt
xlat
adc
lahf
xor
inc
imul
xor
rcrb
cmp
test
aad
mov
rorl
jmp
scas
mov
mov
movsl
xor
push
enter
std
push
stos
nop
xor
adc
shl
add
sbb
in
test
lods
movsl
mov
xchg
inc
gs
xchg
jle
add
or
push
mov
call
loope
cmp
jecxz
adc
mov
pushf
or
push
inc
pop
repz
mov
jecxz
shll
push
lcall
jae
in
lahf
xor
jg
setne
xchg
lahf
idivl
cwtl
fsubs
jb
test
xchg
movsl
insb
jb
mov
dec
mov
xchg
cmc
mov
mov
stos
push
add
sarl
jmp
jge
into
inc
loopne
jo
scas
and
aas
fs
adc
mov
test
sub
cmp
pop
mov
push
jne
jnp
inc
fadds
inc
call
gs
icebp
add
sub
jl
mov
xchg
or
xlat
mov
xor
sub
test
push
add
adc
xchg
repz
ds
mov
push
movsl
cltd
and
gs
add
arpl
subl
repz
nopl
mulb
and
cmp
dec
pop
adc
pop
jo
mov
jnp
mov
pop
in
rol
pop
dec
mov
lret
lea
jo,pn
faddp
push
xchg
insl
lods
adc
lret
xor
sub
cld
inc
arpl
and
out
xor
or
pop
sbb
lds
loop
jo
pop
pop
dec
push
cmpsl
ficoml
jns
jns
js
cmpsb
in
movsl
push
daa
imul
push
push
cmp
xor
test
cmp
mov
sbb
subl
mov
add
fnstcw
les
enter
xchg
imull
xor
sbb
ffree
repz
roll
jne
mov
sahf
dec
jg
xlat
stos
jl
fwait
out
or
inc
fisttps
mov
test
test
xor
mov
lret
scas
push
jl
mov
and
sub
and
mov
xchg
mov
inc
mov
mov
and
mov
fstp
jne
mov
lods
mov
mov
loopew
push
popf
mov
fldenv
inc
cmp
lahf
inc
lret
and
dec
insl
rorl
je
lret
inc
jg
inc
aas
mov
sbb
inc
cmpsl
push
inc
and
je
adc
js
jo
lods
jae
or
int3
jecxz
bnd
in
or
add
test
dec
dec
lea
mov
cmp
dec
dec
add
jecxz
lock
into
imull
insl
pop
xchg
in
fs
in
add
out
and
add
mov
pop
aad
add
pop
mov
mov
enter
pop
lcall
insb
xchg
xchg
lcall
arpl
xchg
sti
add
movsb
lcall
xor
notl
arpl
mov
jge
aas
add
mov
addr16
mov
arpl
xor
cmp
sbb
hlt
mov
jae
aam
roll
call
popf
cld
dec
mov
es
pop
mov
mov
dec
loope
xchg
push
jp
shll
mov
lock
mov
push
subl
lret
jl
push
lea
xor
push
cmp
test
and
fstpl
fidivs
std
push
add
jl
push
pop
jo
pushf
fildl
mov
inc
jecxz
sub
cwtl
push
nop
and
pop
mov
pop
daa
jmp
imul
jne
inc
push
sbb
jg
pop
in
mov
aad
push
fisttpll
out
mov
mov
scas
adc
push
inc
jl
fildl
nop
xor
popf
mov
sub
jp
lock
push
mov
add
push
push
or
imul
jns
and
xchg
adc
lods
cmpsb
xchg
fwait
add
std
xor
sahf
mov
inc
outsl
mov
pop
mov
test
in
mov
outsl
icebp
or
jo
ljmp
scas
bswap
out
lret
cmpsb
mov
je
pop
mov
push
repz
mov
mov
ret
mov
or
and
rcr
rcrb
cld
sub
std
push
popf
xchg
fadd
push
and
jl
pop
or
lea
push
in
dec
scas
xchg
out
cmpsb
push
vandps
or
into
pushl
push
sub
sbb
lock
cmp
es
jae
push
pushf
mov
in
in
add
cmc
xchg
inc
cmp
mov
xor
cmp
mov
sub
ror
jle
inc
popa
fs
jl
fbstp
dec
add
jb
inc
stc
inc
js
leave
aas
cmp
test
data16
aad
enter
pop
movsb
cmpsb
xor
les
test
and
js
or
jbe
rolb
in
adc
mov
iret
and
adc
test
add
push
sbb
sub
pop
stos
pop
jno
jg
and
push
add
and
dec
xchg
out
jne
push
es
lret
jg
push
ret
and
sbb
fcompl
xor
imul
jl
cwtl
inc
jp
test
pushf
mov
and
adc
fsubrl
jmp
iret
outsb
ss
xlat
mov
push
cmp
or
cld
xchg
mov
sub
mov
or
push
ja
or
inc
mov
cld
mov
push
dec
in
jg
out
andl
ds
adc
xor
in
xorb
mov
scas
scas
shlb
cmp
mov
cwtl
xchg
in
or
xor
ds
arpl
mov
jb
dec
dec
ret
sbb
and
mov
cmc
enter
std
insl
in
out
mov
repz
sub
test
adc
outsb
lds
xchg
das
in
pop
ljmp
lret
nop
adc
jg
fwait
pop
gs
jp
lods
cwtl
movsb
imul
or
push
ret
fdivrs
scas
arpl
lret
data16
jnp
or
fwait
adc
add
ret
shl
push
ror
push
in
test
lret
cmpsb
pop
jecxz
xchg
pop
push
fcoml
push
ljmp
test
cmp
push
mov
cltd
inc
xor
scas
sub
cmp
lods
mov
sub
or
dec
jnp
sub
mov
adc
mov
or
movsl
jmp
std
mov
mov
shlb
into
bound
in
iret
xor
movsb
push
add
xchg
std
mov
lods
call
addr16
aad
or
mov
aam
mov
cmp
int
dec
fistpll
mov
sub
jecxz
pop
mov
jb
notl
sbb
adc
or
mov
out
loop
arpl
loope
mov
outsb
out
cli
mov
inc
jbe
and
xchg
sbb
imul
out
push
repz
int
pop
mov
enter
add
pop
mov
mov
cmc
outsb
idiv
nop
add
rcll
data16
pop
pop
mov
inc
mov
xchg
jge
or
sub
insb
cmp
cmp
push
pop
stc
imul
fisttpl
adc
xchg
add
subb
stos
xlat
scas
xor
out
bound
enter
imul
sub
xor
jg
adc
leave
mov
ljmp
ret
test
mov
daa
pop
inc
and
clc
bound
stos
imul
insb
test
sub
mov
aad
sbb
pop
xchg
ficoml
adc
adc
mov
jg
movsb
xlat
rcll
and
lret
sbb
sub
ret
sub
scas
in
pop
adc
mov
xor
int
fcmovnu
adc
fsubrs
lret
sub
mov
mov
mov
dec
push
dec
sbb
int
popa
mov
xor
ret
add
push
ja
movsb
fldcw
adc
jo
xchg
cli
mov
dec
mov
xchg
xchg
add
and
lea
pop
xchg
adcb
and
addr16
jge
pop
mov
leave
inc
in
ficomps
and
nop
inc
ljmp
push
enter
or
lahf
add
hlt
in
or
icebp
cwtl
lea
jne
loopne
sbb
dec
mov
mov
stos
nop
pop
in
and
sahf
mov
dec
jmp
and
jnp
ss
out
xchg
fs
pop
jmp
fcomip
dec
push
or
cmp
aas
lock
out
mov
sahf
lock
jl
push
mov
push
bound
and
cmpsw
fsubrs
push
push
sub
pop
iret
adcl
lods
out
rorl
jae
jb
cmp
sbbb
cld
lcall
aad
fimuls
inc
mov
cld
test
pop
je
push
pop
stc
cltd
fmuls
pushf
mov
fimuls
push
test
adc
adc
xchg
xchg
mov
mov
push
mov
shlb
and
xchg
enter
lcall
jl
mov
fld
push
xchg
sbb
push
push
cwtl
xchg
xchg
pop
in
gs
mov
adc
lcall
out
test
cmp
fsubs
je
ret
adc
int
in
mov
popf
adc
jo
mov
int
mov
andb
sbb
mov
xor
and
ss
or
inc
xchg
add
xchg
aam
sub
jle
scas
xchg
dec
lcall
cld
cld
aad
mov
mov
push
or
lods
fnstenv
loope
es
dec
mov
push
mov
lock
dec
push
pop
adc
arpl
fiaddl
xchg
lret
mov
lods
cli
jne
idivl
mov
add
gs
in
scas
jno
jne
leave
in
xchg
xor
fsubs
adc
push
insb
sbb
cmp
loop
inc
sti
stos
xor
out
sti
rcll
jns
adc
cmp
xchg
mov
sahf
mov
das
test
data16
cmp
lds
pop
ja
loope
lcall
ret
xchg
xlat
rolb
sbb
push
dec
addr16
pop
lahf
in
cmp
test
orb
and
xchg
fidivs
add
cmp
filds
jmp
aas
lods
mov
lods
ret
pop
cld
xchg
lret
jno
int
push
cld
popf
and
sbb
xchg
in
fisubs
popf
ret
lcall
cmovae
out
popa
adc
addr16
data16
aad
push
xchg
pop
pop
jb
xchg
aad
sub
xchg
enter
cmp
push
mov
lds
xchg
xor
lahf
ror
nop
mov
push
je
xchg
cltd
jmp
sub
pop
nop
cmp
xchg
popa
sahf
xchg
or
dec
or
sar
lods
test
cltd
aam
or
cmp
bound
sub
push
pusha
mov
movsl
mov
in
stos
mov
push
clc
mov
fs
divl
and
xchg
mov
mov
pop
mov
loopw
cmp
cmp
imul
xchg
xchg
xchg
in
test
jge
push
bnd
popf
push
and
pop
pop
xchg
lea
mov
rcl
or
pop
and
popf
jo
stos
les
pop
ljmp
fistpl
in
jno
sbb
jp
lods
popf
outsl
cwtl
xor
pop
cmc
mov
dec
jl
cmp
cmp
gs
pop
ss
push
push
scas
xor
pop
pusha
fcoml
fcompl
or
sti
mov
mov
mov
cmp
jae
fisubrs
shll
or
push
mov
dec
subl
nop
lret
pop
sti
inc
clc
bound
xchg
mov
mov
pop
imul
mov
xchg
dec
daa
sti
mov
mov
out
scas
cmp
int
push
gs
mov
movsl
sub
sar
cwtl
fcomps
or
and
jl
sub
les
xchg
pop
jnp
lods
inc
popf
xorb
xchg
mov
xor
cmpsl
je
int3
sarl
mov
push
test
or
imul
arpl
das
mov
nop
insl
hlt
xor
pop
cmp
popf
sub
jne
xchg
adc
js
mov
sub
fcmovbe
jno
xor
add
xor
sub
imul
fimull
push
xor
sbb
imul
push
ja
cltd
scas
sub
fs
sub
mov
mov
mov
xchg
in
mov
int
fdivr
into
xchg
mov
cwtl
push
jmp
repnz
mov
popl
add
adc
bound
push
fidivrs
mov
and
cwtl
rorb
add
test
mov
test
push
loop
jno
aad
es
or
roll
icebp
jge
mov
testl
push
fisubl
aaa
cmovl
sbb
inc
mov
xor
pop
stos
imul
adcb
fidivl
fcoms
add
push
stos
and
jmp
push
loop
pop
jecxz
fwait
jne
add
fstl
cmp
cmp
daa
and
outsb
repz
jge
push
or
movsb
repnz
les
push
mov
adc
scas
adc
lods
sub
and
das
stos
mov
pop
std
fdivrs
xchg
mov
mov
mov
pop
stc
push
pop
inc
cmp
cltd
into
aas
cmp
call
and
cmc
in
mov
xchg
lret
rclb
cmp
sbb
popa
cmp
shl
xor
xor
sti
icebp
mov
fucomp
xor
pop
lods
inc
ja
ret
lods
out
mov
xchg
jmp
dec
inc
push
pusha
mov
andb
mov
lods
xchg
dec
dec
sahf
addr16
sbb
cld
ja
rorl
jbe
ljmp
mov
fs
jecxz
add
mov
pop
dec
cmp
pop
sbb
and
mov
pop
dec
sub
sub
jne
psubusw
inc
fnsave
xor
enter
add
mov
hlt
popa
xor
out
sub
dec
sti
movsb
cmpsb
xchg
or
dec
mov
in
push
movsb
out
out
fstl
jo
mov
imul
add
or
xchg
insb
adc
inc
ret
xchg
mov
jne
loopne
cmc
and
pause
push
pcmpgtb
imul
xchg
mov
mov
add
pusha
adc
cmp
mov
xor
push
lcall
gs
jbe
dec
mov
dec
push
fistps
dec
inc
sub
mov
push
lcall
and
das
mov
xor
fwait
pop
and
xor
cltd
push
bound
push
pop
es
xlat
lds
mov
in
call
xchg
adc
inc
cmp
cmp
lcall
or
leave
and
mov
xchg
lock
jae
push
and
mov
mov
xchg
lods
pop
ror
adc
lods
sub
out
icebp
xor
cld
sub
pop
stos
adc
push
sbb
cmp
adc
adc
lods
dec
lds
mov
dec
inc
fadd
inc
enter
and
popa
lea
fwait
push
jno
popa
jp
gs
fs
subl
sbb
fstpt
and
cli
icebp
lret
repz
mov
mov
dec
ss
jnp
xor
jg
data16
movsb
das
jmp
jmp
and
loopne
loope
adcl
cld
cmc
xchg
popf
repnz
mov
xchg
fbld
push
xchg
test
xor
inc
outsl
loop
aad
mov
jbe
mov
dec
adc
or
scas
out
shlb
inc
xchg
pop
and
sti
lret
adc
adc
inc
mov
mov
ljmp
xchg
outsl
jp
jnp
inc
outsl
imul
lret
pushf
mov
cmp
mov
bound
sbb
sub
dec
ret
xor
push
imul
add
out
inc
std
push
popf
push
icebp
cli
mov
dec
scas
fcmovb
cmp
and
mov
movsl
cltd
mov
sub
xor
test
aas
bound
sti
push
sub
adcl
push
adc
fcomps
js
fidivs
fwait
sub
ljmp
adc
lock
loopne
xor
jle
mov
mov
pop
ss
mov
les
xlat
sti
popf
fdivrl
mov
je
pop
stos
push
ja
mov
lds
negl
popa
repz
push
sub
lret
outsb
mov
pop
xchg
cmp
stos
je
pop
int3
std
dec
mulss
mov
icebp
stos
insb
jl
mov
in
cld
mov
daa
pop
xchg
sub
xor
rcrl
sub
jbe
loopne
mov
sub
arpl
xor
jl
insl
insb
xor
mov
jp
push
repz
sub
out
bnd
lods
je
test
bound
icebp
stos
aaa
add
ret
movsl
es
xor
fiadds
bound
xor
sub
cs
lods
insl
int
xchg
outsb
xchg
mul
dec
je
jo
pop
cmpsl
jno
aam
jp
cwtl
cwtl
ret
mov
pop
jecxz
insl
jecxz
jecxz
cli
enter
imul
cmpl
insl
cmpsb
cmpl
mov
lods
ret
push
and
dec
adc
push
sti
es
pushf
and
roll
sbb
js,pt
test
in
push
add
test
jne
or
ja
je
andl
xor
in
xchg
inc
test
push
stc
cmp
and
out
outsl
inc
stc
notb
stc
aas
or
ret
test
popf
push
into
jns
and
cli
ret
std
push
stc
lods
jle
or
cmp
mov
inc
mov
test
xchg
fisubrs
lock
outsl
jo
push
dec
adc
ljmp
and
add
jecxz
fldl
icebp
mov
fadd
lds
pop
cmp
jmp
dec
xchg
push
clc
es
int3
icebp
mov
lods
adc
sbb
sub
fstpl
out
ja
xchg
ret
iret
inc
inc
mov
dec
sahf
dec
lds
mov
movb
inc
leave
sbb
xor
pop
adc
inc
jno
push
movsb
mov
sub
xor
mov
dec
adc
xor
push
sub
or
xchg
xchg
imul
sbbb
cmp
push
mov
insb
imul
jbe
pop
pop
in
popf
push
xchg
jae
xchg
mov
cmpsb
icebp
or
or
and
inc
mov
fistpl
and
shlb
xchg
sbb
or
out
xchg
adc
xchg
nop
movsl
adc
lock
call
les
pusha
in
jmp
call
push
loop
lock
aaa
adc
ljmp
jb
pop
hlt
lret
xor
ucomiss
adc
jp
push
outsb
out
dec
adc
test
inc
in
mov
and
push
jl
pop
dec
sbb
cmp
jae
lret
cmpb
xchg
pop
push
sbb
push
insb
dec
and
cmp
adc
sbb
sbb
push
cmpsl
sub
add
adc
mov
adc
addr16
adc
or
icebp
gs
push
fcomps
lods
hlt
sbb
pop
aam
mov
lret
inc
es
xchg
sub
das
push
icebp
push
je
add
idivb
sub
mov
pusha
test
je
clc
fs
movsl
rcr
adc
lock
lret
xor
xchg
lea
test
rcrb
lret
in
sbb
in
imul
sub
shrb
cwtl
sbb
data16
in
pop
outsb
jo
test
sub
pop
popf
xchg
pop
insl
pop
and
and
ficomps
outsl
lahf
in
sbb
dec
not
xchg
mov
fisubs
xchg
loope
cltd
mov
imul
inc
fstl
sbb
fisubrs
push
insl
adc
jmp
mov
dec
dec
jne
arpl
mov
inc
les
shl
frstor
push
in
inc
dec
push
lds
inc
sub
mulb
adc
icebp
pushf
xchg
jae
aam
in
stos
dec
pushf
jne
adc
sub
inc
hlt
clc
fs
sti
daa
xchg
stc
test
add
mov
andb
inc
outsl
cmp
scas
mov
mov
mov
in
mov
stos
nop/reserved
lods
loope
pop
repnz
mov
popf
inc
repz
shll
test
sub
das
adc
xchg
xchg
in
je
inc
repnz
inc
sbbb
pop
cmp
aad
das
xor
popf
cmp
xor
inc
and
fs
fwait
pop
ficompl
int3
sub
jo
sti
loope
int3
dec
cwtl
lock
xchg
mov
fldl
sbb
xor
aam
xor
cmp
dec
lcall
addr16
js
popf
subl
imul
inc
push
or
or
rcrb
sbb
int
insb
cmp
xlat
sbb
xchg
jns
adc
repz
mov
cmc
cwtl
aad
push
pushf
shr
shr
fadds
add
pop
sub
mov
or
out
jmp
mov
inc
fidivrl
jg
mov
push
in
lahf
mov
sahf
imull
test
pop
shll
xor
repz
das
shll
xchg
add
xor
xchg
mov
sbb
and
push
xchg
es
cmp
adc
fwait
mov
popf
mov
divb
push
ret
sbb
sub
jno
fbld
frstor
outsb
popf
or
movsl
mov
std
repz
mov
mov
adc
in
insl
popf
cmpsb
in
xchg
test
jmp
push
dec
push
or
or
inc
xchg
push
sahf
add
movsl
mov
sbb
popa
mov
dec
test
shlb
pop
imul
mov
or
add
clc
push
and
shll
and
iret
mulb
sbb
arpl
pop
in
gs
mov
push
repnz
or
nop
add
and
pop
mov
jp
and
push
std
lret
lods
daa
js
lahf
adc
mov
mov
dec
push
es
cmpsb
cmp
inc
scas
mov
stos
cmp
xor
add
mov
and
lea
dec
loope
push
pop
in
pop
mov
in
cmp
xchg
test
movsl
sub
das
lahf
pop
fildll
push
inc
aas
rcrb
flds
push
xchg
fcompl
push
or
fs
pop
pusha
dec
push
mov
inc
fiaddl
cli
notl
jle
aad
data16
pusha
sarl
in
add
jo
lock
add
nop
and
daa
pop
xchg
pop
lods
xchg
pusha
pop
add
jp
sub
in
jp
mov
xchg
sub
lret
in
xchg
pop
nop
pop
nop
pop
fs
pop
push
les
rorb
in
mov
inc
mov
outsl
pop
xchg
insb
test
mov
cmp
lods
dec
and
mov
mov
in
cmp
mov
xchg
pop
pop
movsb
insl
mov
inc
push
loope
lret
xchg
xor
ret
data16
mov
push
jl,pt
jnp
xor
mov
adc
or
inc
dec
inc
incb
aad
push
jmp
mov
dec
xor
mov
fldenv
bound
lahf
push
xchg
shrl
pusha
cwtl
ret
outsb
adc
push
xchg
mov
daa
adc
push
rol
dec
nop
shlb
into
inc
add
fwait
pop
adc
xor
lret
xor
psrlq
test
add
and
cli
push
movsl
incb
mov
das
adc
sbb
push
xchg
out
jmp
test
mov
pavgw
loopne
pop
fcompl
mov
mov
sahf
mov
jnp
xor
lahf
aad
pusha
pop
aam
xor
fsubs
stos
hlt
dec
pop
inc
sub
lahf
fwait
inc
adc
outsb
mov
push
mov
leave
push
adc
mov
cltd
or
mov
imul
arpl
out
or
mov
and
inc
xor
cmp
adc
xchg
int3
jns
pop
pop
adc
pop
and
adc
popf
mov
fldcw
push
shll
call
inc
sub
imul
and
sbb
jge
pop
imul
jmp
inc
mov
int
repz
fdivl
adc
cmp
mov
mov
cmc
cmc
jmp
push
andl
push
mov
inc
test
sub
int
push
rclb
lea
dec
das
or
lods
shrb
sbb
shl
mov
outsb
mov
or
subl
mov
gs
imul
mov
mov
rclb
fwait
or
or
adc
in
addr16
shl
add
popf
hlt
cltd
daa
xor
pop
xor
jne
xchg
ljmp
mov
stos
repz
push
sub
mov
mov
inc
dec
adc
mov
inc
pop
ficoml
mov
je
cmpsl
and
inc
mov
xchg
inc
add
and
call
push
mov
mov
xor
mov
or
popf
mov
dec
lahf
mov
sbb
in
add
xchg
cmpsb
jno
dec
rcrl
stos
mov
adc
push
inc
pop
pop
mov
outsb
outsl
loope
fbld
xchg
push
out
ficoml
int3
call
in
je
adc
add
lods
shrb
aam
xor
ret
sub
mov
iret
roll
pop
jg
repnz
push
arpl
adc
fcmovbe
mov
cmp
cmpsl
stos
mov
es
leave
mov
mov
fimuls
jle
push
test
push
pop
jp
test
fsubrp
lea
mov
add
adcb
jb
icebp
adc
mov
icebp
test
pop
xchg
or
and
mov
fnstenv
dec
scas
aam
or
pusha
jge
push
aad
xlat
std
cmp
loopne
dec
in
fcoml
xor
rorb
repnz
stos
movsb
ds
std
xchg
fdivl
shlb
fwait
iret
fstpl
aam
mov
lahf
daa
xchg
adc
push
and
scas
test
dec
jle
and
jae
inc
roll
mov
mov
loope
adc
sub
fiadds
mov
push
and
fs
aad
cmpsl
inc
nop
ljmp
inc
cmp
iret
cltd
xor
xchg
push
outsl
mov
mov
xor
mov
inc
shrl
jmp
xor
inc
cmp
movsl
test
dec
dec
adc
scas
sbb
dec
filds
jge
pop
inc
aas
fs
cld
fidivrl
or
pop
mov
mov
daa
aad
pop
xor
xlat
mov
push
dec
lods
mov
sbb
into
test
insb
scas
vmread
cmp
dec
shlb
pop
jp
xor
xchg
mov
jmp
xchg
sub
cwtl
jbe
pushf
test
xchg
aad
and
inc
mov
xchg
xor
mov
push
cmpb
out
or
push
jo
xchg
sarb
add
push
icebp
mov
mov
xchg
pop
mov
fidivrl
sub
cs
jmp
lcall
mov
sub
fldt
into
imul
push
jne
xchg
in
xorl
push
sbb
sub
jmp
ficoml
add
fwait
dec
xchg
repnz
daa
pop
or
fcomp
out
adc
pop
ret
jp
cmp
mov
clc
stos
pushf
sub
sub
xchg
adc
or
inc
stos
in
hlt
rcll
jp
testl
loop
loopne
mov
nop
aam
add
jnp
cmpsb
insb
pop
mov
cld
iret
outsb
into
aam
jecxz
cmpsb
leave
pop
add
mov
dec
hlt
or
push
xchg
pusha
adcb
jle
cwtl
pusha
xor
xor
pop
stc
std
stos
mov
leave
fs
das
mov
ret
popf
fldcw
in
and
jb
mov
jbe
popa
push
daa
hlt
mov
mov
sahf
stc
lret
adc
les
jmp
push
sub
fcmovnbe
sub
push
das
sti
js
and
into
pushf
out
sub
pop
cmp
lret
pop
orl
scas
sub
push
negb
mov
or
lods
cltd
das
or
mov
bsf
or
pop
add
test
pop
adc
sbb
cmpl
mov
popf
loopne
pop
stc
fxch
pop
and
pop
loope
outsb
mov
in
cld
in
xor
in
dec
push
dec
inc
push
mov
rcrl
push
lret
rcr
xor
adc
xchg
xchg
xor
fisttps
mov
cld
inc
loope
es
mov
push
add
and
dec
int3
inc
popf
out
sbb
or
sub
mov
sbb
pop
sbb
hlt
and
mov
jbe
rclb
popf
mov
arpl
mov
sarb
notb
fsub
add
push
or
xlat
mov
loop
lahf
dec
in
scas
mov
adc
xor
dec
adc
mov
push
and
fs
stos
sub
mul
pop
idivl
inc
daa
flds
xchg
outsl
mov
push
and
and
fsubl
ds
fdecstp
rcrl
lret
pop
bound
mov
pusha
into
push
ljmp
xor
out
cmp
mov
movsb
data16
lods
pop
aaa
xor
and
pop
cmpsb
les
leave
inc
mov
sarb
cmp
fs
pop
xor
shr
rorl
dec
sub
push
test
mov
inc
and
setns
scas
and
and
daa
dec
lds
jge
pusha
add
push
sub
lahf
or
std
mov
outsb
hlt
rorl
jl
mov
std
jnp
sub
sahf
add
out
push
pushf
jmp
push
popf
into
fiadds
mov
addb
xchg
pop
std
xchg
ret
testl
fisubs
jno,pt
popa
daa
jnp
rcrl
cltd
mov
bound
cs
push
push
pop
rcll
jecxz
and
lcall
and
add
cmpsl
nop
jae
fcoms
or
rclb
loopne
arpl
leave
xor
cs
mov
clc
je
scas
add
aam
push
push
mov
xchg
sbb
inc
push
leave
pop
mov
in
mull
sbb
divl
loope
add
or
xchg
shr
lds
mov
icebp
pop
cmc
pop
mov
xor
jmp
out
stos
mov
xchg
jle
sar
lds
insb
pslld
lock
push
mov
xor
and
pop
sub
push
sbb
mov
sbb
sub
insb
in
push
cmp
fwait
cmp
cmp
push
xor
repnz
jne
inc
pop
int
inc
inc
bound
mov
xor
xor
pop
pop
inc
in
ficoms
es
lahf
mov
dec
push
frstor
xchg
add
inc
push
xchg
ret
and
je
and
push
mov
stos
test
cmp
cmp
test
and
dec
nop
movsb
das
xchg
mov
int
xor
loope
or
jnp
aad
adcb
dec
lahf
rorb
sub
xchg
sub
in
jl
out
pop
fistpl
push
adc
jg
cli
or
cli
ljmp
cmp
add
xchg
sub
and
test
xchg
aaa
mov
mov
lcall
sub
pop
incb
pop
lods
into
cmp
adc
leave
push
mov
push
push
stc
cmpb
xchg
jp
aaa
inc
es
hlt
or
adc
sub
stos
arpl
lret
mov
shl
les
jae
inc
adc
call
xor
jae
push
scas
xor
inc
lret
insb
dec
push
cli
scas
fwait
add
pushaw
inc
mov
ds
mov
adc
lods
aad
hlt
jo
mov
fnstcw
sub
adcl
pop
or
sti
xchg
adc
pop
sbb
sahf
js
pop
xchg
cltd
insb
jo
adc
or
fstl
dec
jmp
and
xchg
rol
push
xchg
dec
xlat
pop
fnstenv
push
pop
push
int3
xchg
fidivl
test
leave
jns
push
xchg
sbb
mov
mov
fwait
jmp
cmp
inc
and
adc
in
test
add
and
cmp
pop
scas
daa
dec
bound
daa
out
mov
xlat
xchg
push
push
xor
stos
in
pop
adc
and
stos
or
mov
shlb
pusha
fwait
sbb
cld
fstps
movsb
xchg
dec
fs
fldcw
rorl
mov
sub
sub
imul
mov
lds
push
jne
or
je
setnp
je
mov
xchg
lcall
ss
cmc
fsubrs
in
outsl
sbb
adc
dec
testl
outsl
jnp
push
jo
or
clc
pushf
push
jp
xchg
jmp
ficompl
push
mov
mov
and
cwtl
and
hlt
aas
pop
outsb
movsb
lahf
insb
popf
cmp
movsb
nop
mov
fwait
daa
xchg
movsl
jl
out
dec
lods
std
and
xor
mov
mov
xchg
mov
mov
scas
loop
shrl
adc
sbb
push
or
inc
jns
push
movsl
into
jb
movsb
inc
and
mov
xor
mov
push
ret
push
xchg
into
jo
icebp
mov
mov
xor
in
lret
bound
xchg
mov
xchg
lcall
aaa
icebp
jno
fprem1
push
outsb
xchg
xchg
and
adc
fmuls
lret
push
xchg
xchg
and
jg
rolb
cmp
push
cwtl
ret
test
popf
fidivl
filds
cmp
adc
mov
nop
or
xchg
jle
rcrl
mov
jnp
xchg
fwait
pushf
in
lods
testl
movsl
sahf
xorl
xor
xchg
mov
and
rclb
pop
out
test
pop
rorl
push
xchg
mov
icebp
dec
pop
es
cmp
and
das
arpl
mov
in
xor
xor
mov
adc
mov
xchg
push
and
stc
adc
popa
cli
dec
xchg
in
or
cmp
dec
mov
ss
std
jae
mov
jae
push
mov
lods
sub
inc
xchg
mov
in
aad
ljmp
ret
mov
push
setge
push
cwtl
push
pop
insb
fidivrs
out
clc
ljmp
cld
stos
adc
push
pop
out
pop
jmp
out
mov
jns
shlb
cli
test
xchg
pop
loopne
sbb
sarl
cmp
jl
fsubl
push
subl
into
mov
pop
push
imul
pop
repz
or
mov
mov
jecxz
stos
and
jb
mov
inc
xchg
in
inc
test
adc
cbtw
fcoms
sahf
dec
imul
mov
fsubs
xor
cwtl
incl
fists
les
xchg
mov
pop
clc
xchg
test
in
bound
mov
das
cmp
je
and
loop
xchg
aam
xor
sbb
fnstsw
mov
xchg
jp
xchg
les
popf
push
mov
mov
dec
adc
jmp
sub
cmp
punpckhwd
sub
push
addr16
loopne
imul
sbb
add
insb
repnz
or
outsb
add
inc
jl
add
ret
adc
inc
add
shrl
xor
les
rolb
push
xchg
decl
arpl
xlat
sub
sbb
mov
outsb
cwtl
out
lods
jge
cwtl
lds
push
imul
adc
or
outsb
jno
fninit
addr16
push
push
out
ljmp
scas
add
fdivrl
mov
std
push
xor
sarl
lock
or
push
inc
insl
adc
call
loope
stc
stos
dec
mov
movsb
sbb
jecxz
repz
cmc
out
xorb
push
daa
fistps
out
jns
icebp
dec
addr16
push
dec
jle
cli
push
xlat
les
fcoms
fld
xchg
rcrl
pop
out
inc
imul
test
in
mov
clc
insl
gs
iret
movsb
test
repnz
outsb
fsubs
movsb
stc
push
pop
adc
cld
gs
mov
mov
xchg
push
jecxz
addr16
jmp
mov
cli
push
mov
setno
mov
push
xchg
xchg
sub
movsl
fsubrl
pop
test
ret
lcall
xor
iret
dec
inc
and
clc
xorb
nop
sub
imul
repz
sbb
xchg
imul
sti
lret
jne
mov
fadds
clc
mov
adc
mov
sub
imul
mov
in
lods
in
sub
mov
jb
or
jl
loopne
aad
out
out
jne
inc
push
inc
inc
das
xchg
mov
sub
xchg
pop
mov
lahf
xchg
push
outsl
adc
adc
fsubrp
out
jge
xor
push
and
pop
enter
adc
push
jbe
out
repnz
fcmovu
scas
pop
pop
mov
jl
mov
jns
ficompl
clc
cld
fmull
push
bound
mov
out
push
xchg
cmp
mov
pop
idivl
add
and
popf
xchg
ljmp
sub
xchg
sub
stos
jge
jp
sub
repnz
aam
insl
scas
or
xchg
cli
lods
mov
xlat
add
incl
leave
push
and
fcomp
adc
jmp
mov
jge
adc
sbbl
repz
jmp
repz
faddl
fisttps
lock
inc
mov
mov
rclb
insb
nop
jecxz
andb
imul
insb
lret
test
fisubrl
out
aam
and
je
xchg
popf
push
xor
cli
pop
cmp
adc
inc
imul
fwait
xchg
dec
sahf
sub
popf
ljmp
xchg
or
lock
out
and
int3
sub
fnstsw
mov
cmp
mov
insl
mov
mov
mov
shlb
pop
push
jno
test
jp
out
repz
pop
jg
jmp
ja
lret
lods
push
and
cmc
loop
test
xchg
xchg
adc
inc
test
rolb
mov
push
or
sub
fsubrs
movsb
push
je
dec
and
lods
fadds
pop
stos
fsubr
in
pop
mov
cmp
pop
ljmp
push
pop
movsb
jmp
movsl
jp
lret
sbb
sub
sti
cwtl
xlat
push
dec
push
mov
int
jae
add
dec
arpl
or
mov
dec
hlt
test
sub
insl
pop
stos
dec
enter
popf
int
test
hlt
dec
and
ficomps
orb
jg
jns
jae
dec
outsb
rcll
xchg
sahf
inc
frstor
imul
inc
ds
xor
ljmp
out
pop
xchg
fwait
xchg
xchg
popf
enter
push
sarl
scas
mov
jl
xchg
xchg
mov
and
push
push
dec
sub
push
xlat
dec
cli
jg
or
cld
rclb
mov
int3
mov
dec
cli
jge
dec
sti
cmp
es
xchg
and
and
lea
push
jne
adc
js
je
mov
gs
iret
ljmp
hlt
mov
lods
xchg
sbb
inc
imul
mov
jae
scas
test
lods
lods
hlt
mov
xchg
ss
and
add
test
push
imul
fldcw
xor
fisttps
sti
cltd
mov
pop
fstpt
aad
aad
push
int
adc
adc
je
fstl
mov
into
dec
out
movsl
stos
les
xlat
sub
jae
or
cld
ret
push
cli
push
pop
dec
cli
dec
mov
cmp
es
lcall
pop
push
mov
insl
jnp
ret
mov
gs
lcall
push
and
mov
mov
aam
imul
mov
jae
scas
inc
push
pop
lods
lods
hlt
mov
xchg
ss
and
dec
ds
ret
insb
xor
repnz
xchg
xor
or
sti
cltd
mov
and
mov
aad
aad
push
int
adc
adc
je
fstl
mov
into
dec
out
movsl
xchg
les
xlat
sub
pop
xchg
xchg
cld
xchg
and
subb
sbb
sub
xchg
cmp
jno
mov
dec
gs
push
je
xor
sub
sbb
insl
jno
push
movsl
jbe
mov
jmp
sub
mov
aam
std
fdivl
push
jb
fcomps
xchg
sbb
mov
xor
mov
sbb
pushf
insl
inc
popa
addr16
lods
aas
and
popf
sbbb
sub
pushf
xchg
lods
orb
popa
push
jno
in
scas
flds
sub
pop
sar
jle
lods
push
dec
movsb
rclb
sub
imull
es
mov
sbb
pop
dec
icebp
out
push
mov
lahf
dec
into
and
or
mov
pop
sbb
adc
enter
test
out
dec
ja
data16
push
mov
lods
je
mov
sbb
dec
lods
dec
int3
inc
imulb
stos
aam
andl
xchg
push
mov
in
sbb
fldcw
loope
push
mov
lods
add
pushf
push
scas
pop
pop
scas
cmpsb
sti
fmuls
sub
push
cmc
xor
cld
ret
mov
rcl
adc
or
add
lea
dec
or
fistl
fcomps
sub
mov
mov
pop
stos
cmpb
js
or
push
xchg
push
mov
sub
mov
enter
mov
mov
shlb
pop
push
push
push
sbb
xchg
fidivrs
adc
adc
mov
movsl
outsb
sbb
jno
inc
inc
and
pushf
cmp
fsubrl
iret
cli
ljmp
mov
push
push
insb
push
jno
scas
push
or
push
mov
aam
adc
ret
enter
and
sahf
dec
xchg
mov
jmp
or
repnz
in
dec
stc
pop
push
enter
jbe
xchg
push
pusha
cmp
sub
test
scas
xor
mov
push
mov
pop
adc
scas
xchg
xchg
or
ret
je
fildl
mov
repnz
cmp
jge
mov
jg
dec
sub
jns
xchg
pushf
lods
xchg
cmp
and
mov
loopne
sti
push
aam
mov
gs
xor
outsl
in
inc
test
cmp
push
das
jns
lods
orl
shlb
inc
mov
jle
mov
pop
leave
into
push
mov
adc
fsubl
mov
fsubrl
add
jae
add
scas
xchg
pop
pusha
jo
loopne
xchg
out
xchg
pop
fcoml
sbb
mov
jmp
add
dec
test
and
jle
xchg
ljmp
mov
int3
lea
xchg
insb
cmp
mov
movsb
fbstp
dec
push
or
pop
cld
movsl
nop
xchg
sub
in
repnz
xchg
mov
mov
stos
out
push
push
jmp
cltd
ret
inc
xorb
cli
icebp
inc
xchg
fbstp
xor
xor
lret
aam
popa
rcrb
sahf
fwait
sub
mov
xchg
std
dec
cmp
fs
push
int
sub
adc
stos
icebp
leave
pushf
xor
shll
cli
add
flds
addr16
aaa
or
lahf
jne
stos
add
scas
pop
xchg
cmpsl
jae
pusha
xchg
outsl
xchg
cmpsb
jle
mov
jge
ds
sbb
rclb
cltd
lret
pop
popa
adc
mov
mov
cs
push
out
push
jb
cmpsb
lds
mov
nop
and
je
dec
aam
aad
adc
push
pop
outsb
aad
fdiv
out
jl
repz
pop
std
add
sahf
mov
pushf
cwtl
jl
hlt
mov
outsl
dec
jne
dec
test
adc
mov
sbb
mov
dec
scas
test
clc
mov
sti
push
lock
pop
mov
fsubr
inc
pop
sbb
test
jmp
mov
mov
ja
pop
mov
mov
jle
jb
loopne
xchg
jl
push
xor
mov
xor
xorl
and
sbb
test
jp
adc
dec
inc
xor
sahf
mov
and
aas
or
pushf
push
jg
popf
fistps
shrl
push
push
xor
pop
add
enter
pop
pop
xchg
jbe
cmp
inc
pop
loopne
xchg
sub
scas
in
mov
cmp
je
aam
or
push
test
in
aas
mov
loope
mov
pop
sbb
cli
cmc
js
imul
repnz
loopne
or
fsubl
jbe
dec
aad
mov
cmpl
js
out
push
movsb
jo,pn
shl
sti
lahf
popf
nop
roll
dec
pop
outsb
in
sbb
pop
sub
ret
icebp
jnp
cwtd
jge
js
fsubrs
popa
adc
mov
mov
test
inc
mov
and
pop
mov
sahf
mov
lcall
jl
ret
or
or
iret
sub
cwtl
enter
xor
xor
and
gs
jmp
xchg
scas
jb
pop
adc
mov
pop
adc
sbbb
cli
ss
into
cmp
inc
jb
and
in
daa
xchg
and
mov
or
or
pop
outsb
in
lret
movsl
clc
or
fucomp
adc
shrl
push
adc
cltd
les
pop
pop
ficoml
sbb
jle
ret
or
ret
add
push
and
in
test
in
xchg
pop
xchg
pop
mov
repz
adc
or
or
movsl
sbb
cmpsl
or
mov
hlt
movsb
mov
cli
adc
mov
mov
ljmp
popf
xlat
insb
xchg
jno
add
loope
or
jge
pop
ljmp
dec
mov
xor
inc
jle
cmp
or
lods
inc
jb
jne
xchg
sub
test
mov
orps
cmp
add
jno
ljmp
xchg
dec
rolb
inc
jo
in
cltd
mov
xor
add
arpl
push
xor
aam
rolb
shll
data16
data16
push
mov
stos
and
fucomp
sbb
xlat
push
jl
mov
mov
xor
cmp
xor
sub
andps
fidivrl
pop
push
cmp
lods
mov
adc
popaw
or
insb
bound
movsl
stos
xchg
into
and
bound
jle
imul
xchg
mov
test
fwait
adc
sahf
xor
lea
mov
mov
sbb
xchg
stos
les
lock
mov
inc
jne
les
cmp
mov
mov
mov
and
dec
lret
andl
lret
mov
es
dec
push
mov
lahf
clc
sub
pop
out
in
fmuls
push
sahf
mov
mov
dec
or
fdivr
and
jge
fidivrs
fidivrl
mov
loop
dec
js
mov
sbb
push
fmull
sub
dec
cmpl
fwait
sti
aaa
mov
push
insl
push
jmp
mov
rcl
xchg
or
call
shrb
movsl
mov
clc
sarb
ret
mov
or
sbb
inc
jp
dec
aaa
cmp
data16
pushf
mov
cld
xchg
out
xchg
scas
mov
jo
aaa
xchg
jno
push
mov
mov
mov
cmpsb
stc
jnp,pn
lret
in
lods
daa
cli
rcr
sub
mov
dec
sbbb
add
insb
lds
shlb
bound
and
mov
xor
xchg
push
sbb
cmpsl
pop
xor
cmp
lods
and
sub
inc
stos
mov
popl
and
lret
adc
loop
insb
or
mov
mov
fisubrs
xchg
sbb
inc
in
add
xchg
outsl
daa
jecxz
lods
es
sub
and
sbbl
cltd
dec
pop
mov
insb
lods
xchg
daa
pop
pop
cmp
dec
pop
test
push
push
fidivrl
test
fbstp
or
lcall
mov
dec
lods
mov
or
repz
xchg
xor
pop
test
andb
imul
rcrl
lret
movsl
fsubrp
jne
inc
dec
xchg
and
lock
lods
shrb
ret
mov
insl
xchg
or
ljmp
xchg
xchg
push
aad
call
xchg
int
movsb
stos
jne
cld
ja
fnstsw
arpl
sub
push
loope
arpl
out
loopne
sahf
mov
xchg
dec
mov
imul
test
mov
ret
arpl
cmc
int
orl
cmpsl
push
scas
aas
sub
jmp
xchg
stos
testb
dec
mov
sahf
stos
jmp
lods
jne
fmull
and
mov
push
fstl
and
jb
fistps
movsl
pop
dec
cmp
jno
ds
sahf
je
jno
mov
test
sub
jp
shlb
jge
scas
jae
jnp
or
jg
push
jno
sub
test
cwtl
or
and
and
mov
xor
cmp
sbb
xchg
lea
dec
cmp
sar
xchg
push
aad
cmp
pop
nop
lods
popf
syscall
sbb
sub
cmp
das
popa
push
aam
repnz
jp
sbb
jbe
inc
aad
mov
lcall
enter
sub
xchg
test
xchg
and
popa
js
xor
fcmovu
pop
inc
sbb
cs
inc
inc
push
or
lds
movsl
loopne
in
push
jae
repz
cmc
popf
popf
cmpl
sbb
add
mov
cltd
xchg
jbe
mov
push
cmp
test
mov
inc
dec
and
cmpsl
insl
repnz
addr16
push
push
in
bound
jo
jnp
nop
in
out
xchg
adcb
inc
push
cld
push
or
leave
clc
sarb
lret
mov
out
int
test
int3
jb
mov
jmp
shll
pop
fs
add
xchg
dec
mov
xor
dec
fucomi
mov
add
cmp
adc
daa
sub
add
fisubs
in
lods
push
shrl
pop
lods
movsb
hlt
sti
sub
cmp
fwait
lahf
xorl
mov
and
lods
adcl
imul
mov
out
stc
lahf
sub
fwait
idivb
lods
jmp
sti
lret
jle
lcall
xchg
xor
outsb
or
cmc
dec
ds
shlb
and
or
ljmp
pop
mov
pop
push
xchg
mov
test
xlat
push
xor
pop
lods
adc
outsb
test
das
push
mov
stc
mov
lods
jnp
pop
gs
mov
mov
xchg
or
mov
movsb
xor
push
dec
dec
outsb
cmp
push
push
jb
cmp
push
jecxz
push
rclb
cmc
or
and
pop
dec
aaa
in
es
out
cmpsl
fs
inc
xchg
inc
call
movl
mov
shlb
sub
cmp
and
insl
mov
cmp
insl
adc
cmpsb
pop
or
movsb
inc
movsb
call
hlt
bound
dec
fwait
xchg
mov
and
out
cmp
mov
xor
cld
insl
mov
jns
out
dec
outsb
mov
add
rorl
or
xor
ret
inc
push
cmp
sbb
pop
sti
mov
xlat
mov
popf
and
imul
paddusw
fbstp
lcall
sti
int
mov
lock
outsl
loop
loopne
test
lret
addl
push
dec
or
clc
xor
inc
mov
out
movsl
and
dec
dec
dec
dec
pop
cmp
insb
mov
xchg
xchg
cmp
lock
xchg
ret
pop
sub
clc
clc
sbb
into
mov
and
dec
xchg
sub
insb
in
adc
inc
cmp
ljmp
jne
stc
fwait
adc
xchg
push
sbb
es
jbe
call
out
das
pop
and
xor
xchg
sub
fbstp
ret
mov
mov
and
mov
or
mov
arpl
mov
hlt
cwtl
movsb
test
dec
divl
stos
test
nop
mov
inc
mov
inc
dec
cwtl
cmp
mov
out
and
push
inc
stc
mov
adc
dec
dec
sub
push
stc
jbe
sub
xlat
cmpsl
lea
mov
push
xchg
adc
push
dec
ficoml
sub
mov
shll
jbe
jg
inc
lods
mov
dec
pop
cmc
add
fisttpll
inc
jb
xor
loopne
ljmp
mov
loop
and
lret
cltd
stos
pop
add
pusha
loop
out
lds
adc
cmpsb
push
lea
outsl
sbbl
enter
dec
adc
pusha
cmp
sarb
jo
and
xchg
push
jbe
daa
mov
cwtl
cmpsb
pop
insl
pop
dec
into
out
rsqrtps
xchg
dec
sbb
push
es
jnp
dec
jge
mov
xor
or
aam
push
lret
cmp
mov
paddusb
jne
fisubrs
mov
nop
in
push
cld
push
jne
cmp
mov
sbb
adc
out
mov
dec
mov
jb
sub
xorl
push
and
repz
notl
int3
movhps
jp
push
mov
adc
push
clc
and
mov
adc
mov
pop
std
out
and
gs
lods
test
jg
nop
bound
cltd
xchg
subl
lods
rcrb
pusha
inc
addl
insb
popa
add
pop
in
mov
mov
pop
adcb
pop
rcl
shrl
cmc
je
mov
and
iret
and
stos
add
push
jno
xchg
out
popf
add
mov
mov
sub
push
push
push
in
les
into
int
js
pop
sbb
orb
ficoms
lods
mov
and
ret
arpl
adc
push
movsl
icebp
or
rcrl
or
cmp
pop
pop
mov
insl
lods
mov
jmp
sbb
jbe
add
ss
rol
push
cmp
add
cmp
cld
sub
loope
loop
fcomip
mov
mov
cltd
hlt
andb
int3
enter
add
sbb
fs
xchg
rcl
in
dec
shl
mov
mov
xlat
jp
test
in
mov
dec
lea
push
xchg
pop
insl
pushf
sub
in
out
pop
adc
xchg
inc
test
daa
data16
and
dec
adc
cmc
lahf
lret
popf
movsl
xor
jp
loop
jbe
pop
lock
daa
push
ret
mov
mov
fwait
xchg
movsb
shrb
mov
pop
inc
aam
fcoms
xlat
and
or
ret
or
in
xor
mov
adc
negl
pop
les
ljmp
cs
adc
sub
out
mov
xor
in
push
dec
cmc
or
inc
rcrl
pop
xchg
loop
push
mov
push
push
cmp
inc
and
scas
nop
or
ret
jnp
sub
icebp
int
lock
fwait
inc
out
call
mov
and
movsb
push
lret
push
jae
and
adc
nop
and
ss
lock
cwtl
mov
adc
out
lahf
jp
out
sbb
and
aam
inc
push
xlat
mov
or
mov
or
repnz
popf
cmp
dec
and
jnp
cmp
adc
pop
outsl
mov
cli
add
adc
and
arpl
nop
push
enter
xchg
mov
add
adc
stc
cmp
enter
push
fwait
lret
jg
dec
cmp
xchg
xchg
mov
adc
mov
mov
cmp
xchg
xchg
ret
lods
lods
dec
loopne
jnp
mov
in
mov
mov
xchg
dec
inc
mov
js
pop
xor
jmp
gs
movsb
ja
mov
filds
push
or
adcl
mov
jne
enter
cmp
sub
mov
jmp
dec
rcll
mov
push
mov
and
aam
xchg
fadds
nop
jno
loope
sbb
mov
outsl
mov
shlb
mov
or
push
leave
andl
out
adc
fdivrs
insl
add
inc
inc
fcomi
mov
mov
fnstenv
and
out
sub
adc
and
inc
fwait
dec
dec
stos
jne
add
adc
popf
push
nop
push
push
inc
adc
add
xchg
loopne
lret
nop
sbb
pop
insl
inc
jmp
out
pushf
pusha
jo
xor
cmp
xchg
mov
push
pop
jo
lods
pop
cmc
xor
out
dec
and
arpl
in
mov
cmp
frstor
pusha
imul
mov
pop
sbb
scas
adc
jmp
inc
adc
sub
repnz
pop
jle
inc
or
fbstp
ljmp
nop
nop
or
sarb
out
lcall
mov
inc
lahf
jle
sti
fs
mov
aam
gs
dec
sti
push
sbb
mov
mov
xor
jmp
push
int
dec
sub
loopne
rcrl
cmp
test
cmp
cmp
cwtl
jp
in
mov
mov
movsl
or
mov
sbb
push
stos
ret
xchg
dec
fnsave
sbbl
dec
iret
lods
shll
out
xor
idivb
cmc
pop
push
repnz
pop
lea
shrb
push
stc
inc
push
jmp
dec
cmc
clc
mov
push
pop
dec
sti
push
pop
rorl
cmp
iret
int3
mov
fiadds
pavgb
inc
adcl
jo
or
jns
lea
xchg
leave
into
or
sub
xor
lret
adc
cmp
call
cmp
dec
iret
sbb
mov
dec
xchg
lock
cmpl
mov
xchg
mov
shll
sub
arpl
test
jo
mov
filds
daa
push
arpl
pop
mov
mov
adcb
sbb
pushf
cli
mov
dec
lfs
xchg
bound
addb
push
jb
mov
xor
mov
push
sub
mov
ret
loopne
test
xor
enter
xchg
in
mov
out
push
pop
jp
mov
andl
jno
mov
lcall
mov
jg
mov
cmpl
insb
lock
push
push
loope
cs
jne
roll
pop
pop
cmp
fs
pop
aam
shll
rclb
cld
lea
sbb
fiaddl
cld
cmp
leave
mov
jmp
mov
stc
jo
add
test
std
fistps
xor
dec
xchg
cmpsl
aam
xchg
test
out
mov
pop
mov
push
das
ljmp
paddusb
in
xchg
outsl
jb
addr16
imul
xor
jae
mov
movsl
xchg
mov
in
and
jl
add
add
std
add
stos
push
shll
jmp
out
cs
xorb
mov
add
lahf
outsl
sbbb
std
pop
sbbl
frstor
fldt
push
movsb
je
mov
and
out
push
lods
scas
cmp
stos
scas
push
lods
subl
xchg
cld
rcrl
in
push
cmp
jge
push
bnd
mov
lret
daa
sub
in
inc
mov
cmpsl
mov
outsb
in
sti
jns
sub
test
je
stos
mov
jo
dec
adc
xor
outsl
int
mov
or
adc
mov
adc
ja
mov
or
inc
in
add
in
push
jl
fmull
iret
mov
mov
mov
or
push
je
adc
popf
ljmp
xchg
sahf
sbb
movsb
int3
ds
push
mov
push
fwait
loop
mov
mov
adc
push
cmp
movsb
dec
lahf
sbb
jg
mov
and
jmp
push
xor
in
fsubl
repnz
pop
scas
outsb
sahf
lods
loop
push
lods
push
insl
movsb
je
jl
test
xlat
and
add
xor
popa
mov
rcr
jo
push
jo
xchg
push
sub
mov
push
and
lods
lods
jle
adc
pop
or
fnstcw
out
aad
add
cwtl
jbe
test
jge
inc
or
pop
dec
scas
into
sti
sbb
subb
aad
lds
les
sub
rcll
jne
or
or
xchg
add
mov
add
in
cmp
mov
jae
mov
loopne
faddp
movsb
es
incl
psubq
in
mov
and
inc
movsl
int
push
stc
sarb
adc
cli
cmpsb
inc
xor
adc
lret
iret
jmp
mov
loopne
push
inc
fistps
icebp
rcrl
lods
bnd
sti
mov
mov
xor
in
push
cmpsl
out
inc
inc
stos
adc
add
ret
xor
int3
shr
xchg
or
sbb
scas
and
push
dec
sti
stos
push
cmpsl
jmp
sahf
subb
lea
dec
jns
or
aam
push
mov
xor
loope
mov
in
call
orl
data16
bound
outsl
frstor
sub
sub
nop
adc
cwtl
icebp
cmpsb
in
dec
out
lods
push
dec
adc
lea
es
lods
push
add
push
mov
fistl
call
push
lock
jge
lods
test
mov
imul
insb
test
jno
pushf
sbbb
or
jge
inc
stos
pop
movsb
fs
arpl
jmp
arpl
mov
test
sub
popa
fists
add
sub
adc
js
lods
sub
icebp
push
mov
hlt
jo
sbbl
push
xor
pushf
ds
jb
push
lock
out
stos
in
inc
test
lods
jns
icebp
push
jae
add
bound
rolb
fisubrl
dec
pop
cmp
popf
pop
scas
xchg
cld
and
fwait
sahf
sub
mov
push
movsb
shrb
ret
pop
mov
lods
andl
rorl
scas
sub
std
fcomps
bnd
xchg
and
es
push
push
sbb
lret
fnsave
lahf
frstor
sub
inc
in
mov
inc
ljmp
test
push
lcall
inc
and
jnp
jge
arpl
test
scas
sub
test
movsl
and
enter
into
lock
iret
push
in
adc
add
dec
sub
pusha
xchg
dec
xchg
push
adc
fildl
mov
inc
int
sub
jle
cmp
subl
mov
inc
movsl
ljmp
addr16
cs
fs
les
jo
inc
nop
les
movsb
inc
sti
and
and
cmp
pushf
or
mov
inc
icebp
dec
popa
push
and
loopne
pop
popa
int3
bound
pop
xchg
pusha
scas
jp
dec
and
pop
orl
mov
pop
jns
or
pop
xor
cwtl
jbe
add
push
movsb
lods
fisubrl
jns
loopne
lods
dec
dec
dec
xchg
pusha
sub
adc
adc
jle
or
insl
mov
pop
imul
push
inc
iret
call
cmpsl
fimull
inc
scas
jb
add
gs
or
sbb
xchg
hlt
mov
je
mov
and
sub
cli
scas
les
mov
mov
and
add
imul
inc
in
push
test
out
inc
fmul
cmp
cwtl
rcr
or
out
in
daa
repnz
test
inc
popa
lods
mov
and
cwtl
rolb
and
push
inc
fmuls
mov
inc
in
pop
jl
jle
sbb
pop
pop
mov
jl
int3
add
jb
and
pushf
mov
push
dec
xchg
mov
jecxz
lods
subl
mov
or
pop
jns
xlat
mov
xchg
xchg
ss
mov
pop
push
pop
stc
pushf
add
lock
dec
jo
loop
sarl
jae
mov
ds
sbb
mov
ljmp
adc
dec
fdivl
jp
pushf
sarl
pop
fbld
lret
icebp
push
sub
xor
dec
xchg
adc
xchg
adc
pop
jb
fadd
repnz
cmp
pop
xor
jae
jge
rorl
adc
adc
ror
mov
sub
mov
push
or
ljmp
push
and
ljmp
inc
sbb
dec
stc
and
scas
sar
or
test
xor
out
mov
jl
pushf
and
fstl
jbe
lret
or
in
mov
cmp
xchg
lea
lahf
lcall
aaa
add
jns
out
pop
mov
rcll
lock
push
lds
and
out
dec
push
pusha
push
pop
scas
lods
ret
add
int
or
or
mov
jnp
and
leave
fdivs
sbb
shrb
rcrl
jo
jle
xchg
xchg
mov
pop
mov
bnd
aad
jb
mov
and
fst
adc
repz
push
push
or
lods
and
inc
inc
jecxz
js
push
push
cmpsb
xchg
sub
push
mov
rep
mov
jb
and
pushf
pop
test
in
pop
dec
xchg
push
lods
movsb
and
sti
xor
std
divb
cmp
and
jno
jne
xor
and
mov
xchg
iret
lahf
fsubrp
mov
fidivs
mov
movsl
lock
dec
push
iret
push
ret
adc
repnz
pusha
cmp
fdiv
mov
fiadds
in
mov
into
jbe
mov
adc
cld
lret
bound
push
push
test
xchg
sahf
lcall
lahf
mov
mov
ja
inc
test
icebp
or
pop
xorb
repz
and
push
lahf
imul
mov
nop
jae
mov
push
icebp
jp
data16
imul
sti
in
cltd
ljmp
out
ds
in
xor
push
mov
mov
mov
add
sahf
imul
imul
cli
imul
imul
dec
aaa
sbb
movsl
push
fcoml
fcompl
mov
pop
lods
into
push
lods
or
mov
sar
mov
fidivrs
mov
inc
inc
dec
mov
inc
dec
mov
test
int
push
leave
fidivs
rclb
pop
or
sbb
inc
sbb
push
inc
add
add
sbb
add
adc
mov
mov
mov
and
mov
in
lea
sbbl
push
in
adc
mov
sbbb
push
bound
pop
jl
xchg
pop
and
out
push
test
cld
lods
int3
scas
int3
test
into
add
mov
insl
stos
mov
mov
or
inc
adc
adc
jp
adc
adc
mov
mov
sub
sarb
xchg
popa
push
fsts
imul
test
jo
mov
or
xchg
add
sbb
leave
mov
and
mov
xor
cld
pop
adc
push
ror
and
into
push
sbb
inc
and
dec
and
adc
into
adc
aam
adc
aam
adc
mov
int
scas
fmulp
sbb
sbb
sub
xor
adc
test
sti
sbb
sti
cmc
pop
sbb
inc
push
lods
mov
and
in
mov
aam
fdivrp
nop
cmp
fidivs
dec
or
adcb
repz
lret
mov
movsb
jo
inc
mov
pushf
or
bound
aaa
in
loopne
ss
and
popa
test
notl
jb
mov
pop
shrl
mov
jl
inc
lock
sub
xchg
test
jecxz
lock
shlb
lods
jge
lods
cmp
ucomiss
out
out
fistpl
call
xor
imul
and
xor
sub
and
lock
or
daa
mov
imul
push
fisubs
and
inc
push
inc
lods
test
cs
out
jnp
xchg
repnz
dec
popl
stc
or
les
push
stos
call
sbb
mov
stc
sub
or
cmp
sti
cmp
mov
sbb
nop
test
add
push
jno
int3
xchg
and
mov
insl
loope
mov
sub
sub
pop
adc
clc
xor
movsb
aam
popf
cli
cmp
int
cmpl
xor
addb
clc
xchg
les
pushf
rclb
mov
pop
cmc
xchg
mov
fdivl
mov
lds
xorl
or
pop
dec
lock
shl
dec
les
pop
fsubrs
cmpsl
daa
mov
fxch
icebp
mov
cli
or
movsl
cmpsl
out
call
repz
push
popa
cmpsl
xchg
mov
int3
jns
push
pop
push
arpl
aaa
mov
and
mov
call
mov
dec
rcrl
and
lock
nop
lods
push
mov
sahf
mov
xchg
inc
jae
xor
and
cli
loop
pop
ret
in
hlt
testb
jno
outsl
sub
mov
or
xor
xor
cmpsb
aam
ljmp
cmpsl
inc
pop
insb
adc
shr
push
stos
jbe
lock
sahf
outsb
inc
dec
sub
pop
movsb
out
push
jo
out
add
cs
jge
test
fdivs
add
pop
xorb
pop
xchg
adc
xor
pop
add
enter
cmp
xor
aas
shl
divl
mov
popl
or
inc
xor
push
cmp
jp
shlb
dec
jg
jle
and
aam
jmp
lods
mov
dec
out
cs
pop
jl
cmp
mov
jo
jne
jae
repz
pop
mov
inc
push
nop
add
int3
je
in
pusha
add
movsl
in
sarl
inc
pop
int
mov
bound
rolb
and
pop
fwait
xchg
fs
add
push
popf
mov
mov
jb
push
jno,pt
jl
fldcw
mov
jp
aam
aaa
adc
and
ss
xor
scas
lods
imul
movsl
leave
sbb
out
sub
mov
xor
js
mov
or
mov
in
jp
add
jo
jne
test
test
push
test
movsl
pushf
and
andb
repnz
mov
hlt
repz
dec
aas
hlt
jae
enter
xchg
mov
push
in
sahf
xor
shr
xor
call
les
clc
push
in
push
push
push
ret
sbb
add
leave
in
sti
inc
pusha
jns
out
jb
inc
aad
test
dec
lock
xchg
loopne
mov
xchg
push
sub
mov
xor
out
loopne
adc
insb
cmp
mov
fmull
iret
mov
out
sub
mov
out
push
push
cs
repnz
lds
int
in
fnstsw
mov
sahf
clc
xor
outsl
in
mov
mov
xor
ljmp
pop
testl
outsl
call
mov
add
dec
ljmp
cld
inc
fdivrl
int
ljmp
xor
fmull
int
ljmp
or
movsb
xchg
out
mov
repz
addr16
cli
mov
das
fcoms
jge
push
sti
sbb
add
gs
mov
cmc
fstl
cmp
push
sbb
repz
iret
fadds
ja
cmp
cmpl
dec
push
sub
inc
mov
jmp
filds
mov
push
das
add
mov
cmp
call
inc
add
repz
push
xor
adcl
icebp
pop
mov
cld
or
cltd
scas
outsb
sub
inc
mov
pop
inc
lock
clc
repz
push
xchg
rcr
mov
hlt
inc
sbb
aam
fs
bound
add
fidivl
insl
shrl
rorb
clc
lods
mov
jle
xchg
inc
icebp
sbb
xor
and
shl
shll
loopne
jp
mov
pop
mov
fbstp
popa
icebp
mov
mov
mov
call
loop
mov
insl
mov
sub
icebp
and
sbb
scas
xor
dec
test
loopne
imull
and
and
xchg
inc
dec
jb
in
dec
in
mov
push
icebp
clc
fnstenv
aas
imul
add
push
push
gs
cmp
adcl
adc
and
mov
xchg
jl
orl
imul
out
fsubrp
or
mov
xlat
pop
push
xchg
sub
jecxz
inc
in
xor
and
sub
sti
pop
filds
cmp
es
hlt
out
int3
lcall
fnsave
ret
mov
xor
popf
dec
jno
popf
or
jmp
js
fsubrl
adcl
and
adc
cs
jecxz
lret
aas
imul
pop
loope
sbb
icebp
xchg
mov
jno
jae
ret
fisttps
dec
mov
inc
push
push
fbld
imul
cld
popf
pushf
ljmp
push
and
sarb
out
fidivrs
test
pop
insl
ret
xchg
testb
into
pop
sbb
outsl
scas
cs
or
xor
iret
repnz
sub
xchg
add
sbb
and
or
ljmp
jno
mov
lods
repnz
mov
ret
fcompl
into
jb
cmpl
xor
mov
into
pop
sub
sbb
pusha
xchg
and
or
aas
and
in
lods
sub
aaa
jmp
cmp
xchg
push
cltd
jae
sbb
aas
popa
cmp
pushf
scas
loopne
xor
mov
and
dec
movsl
jnp
cmp
inc
in
cld
push
adc
mov
in
cmp
xchg
mov
cmp
lods
push
add
pop
jb
ror
push
mov
xchg
sbb
push
jge
mov
rolb
pusha
int
xor
fisubrs
dec
mov
orl
movsl
mov
insl
sbb
std
fsts
push
rcrl
loop
mov
xchg
dec
scas
cmp
lock
mov
xchg
xchg
push
push
sub
pop
fnstenv
in
jns
les
and
sbb
cwtl
add
adc
mov
mov
ja
aas
push
shrl
inc
stos
jo
das
add
cmp
sbb
popf
xor
xor
xchg
sub
aaa
lods
xchg
clc
dec
pop
jae
push
sub
mov
cwtl
sbbb
mov
mov
pop
and
inc
adc
imul
mov
jo
int3
and
sub
jbe
pop
adc
or
xchg
test
mov
jo
lods
inc
push
cmpsl
movsl
out
int
inc
adc
xor
bound
jo
add
mov
push
lods
cltd
jp
movsl
jbe
out
jo
stos
daa
dec
clc
mov
incl
cld
jl
push
bound
inc
adc
sub
adc
mov
test
mov
push
mov
inc
mov
shll
outsl
imul
stos
xchg
cmp
ret
jne
mov
pop
int
sub
jb
inc
add
mov
jg
pop
test
mov
cltd
xlat
jae
xor
popa
aaa
jae
aam
dec
in
xlat
and
jo
push
xchg
in
bound
stos
stos
mov
pushf
sub
add
nop
or
xchg
stc
mov
push
mov
cmp
rcrl
rcr
xchg
andb
mov
stos
xor
imul
pop
pop
adc
xor
push
mov
sar
xor
enter
xchg
inc
mov
jno
fnstsw
lret
sti
cmp
jl
sbb
nop
std
xlat
adc
fs
or
movsl
inc
mov
xchg
gs
adc
cmp
out
es
imull
es
je
fcoml
cmp
iret
loop
testl
imul
mov
ret
popf
dec
fs
xabort
dec
ret
and
mov
mov
and
cwtl
jb
push
arpl
movsb
nop
dec
dec
or
mov
cmc
jno
sub
sbb
aaa
fs
sti
mov
push
jmp
fimuls
movsb
shlb
fidivl
mov
xchg
push
inc
jo
je
in
push
cmp
pushf
push
dec
or
cs
scas
mov
ljmp
push
jns
jmp
inc
jl
inc
in
push
testb
mov
aad
xchg
movsl
inc
jp
aad
arpl
inc
ret
daa
fcomps
lret
lcall
int
int3
jl
push
loope
pop
mov
out
mov
out
loopne
mov
push
dec
dec
stos
lahf
xor
std
cmp
pop
cmp
clc
jmp
or
insl
mov
arpl
or
fimull
call
push
jne
xchg
icebp
ja
jmp
test
repz
jbe
sub
adc
mov
adc
lahf
in
lods
jmp
cmp
push
xchg
movsb
pop
lea
mov
pop
stos
cmpsb
add
mov
out
jbe
jmp
jg
and
in
cltd
dec
int
repz
mov
rolb
and
mull
lahf
out
ja
cli
xor
inc
xchg
in
pushf
or
int
pop
and
xchg
mov
sbb
daa
and
dec
insb
and
add
clc
xor
out
sbb
rcrb
popa
into
fildll
js
in
loopne
adc
mov
lods
pop
push
sbb
adc
and
sub
sahf
adc
adc
cmpsl
add
out
cmp
xor
jecxz
sbb
lds
or
mov
mov
xchg
decb
lahf
pop
cltd
lret
in
adc
cmp
mov
add
sbb
inc
repnz
dec
jmp
xor
cmpsl
sbb
insl
imul
mov
mov
cmp
xor
dec
cltd
or
mov
lods
scas
popa
push
push
mov
mov
fists
xlat
push
mov
jl
adc
imul
mov
shlb
xor
mov
fbld
pop
push
push
push
das
push
push
jne
xor
into
in
xchg
aaa
sub
rolb
into
insl
mov
cmp
push
mov
jb
mov
sub
ffree
popf
mov
loop
subl
int3
fld
sbb
lock
inc
jne
fmuls
aam
cmp
out
dec
test
out
sbb
out
outsb
pop
jo
push
mov
aam
pop
repz
inc
sbb
push
loope
shr
adc
jge
fnstcw
rorb
xchg
dec
mov
cmpb
cmp
outsb
xchg
fs
pusha
test
pop
andb
sti
and
push
clc
pop
pop
add
stc
xchg
ficoms
and
in
xchg
clc
sti
push
adc
pop
cmp
add
push
mov
dec
xor
pop
ds
out
inc
pop
test
in
ror
stc
adc
push
mov
imul
dec
add
mov
mov
shl
dec
xchg
in
mov
mov
mov
jae
dec
ljmp
int
sbb
rcrl
rcrl
inc
mov
loope
adcl
xchg
inc
lcall
and
inc
repz
sbb
repz
fwait
mov
lret
mov
and
insb
loopne
lods
fstpl
shlb
popa
pop
mov
sub
jo
out
xor
add
xor
jae
ret
mov
testb
fidivl
cmp
inc
mov
cmp
adc
outsb
jg
insb
adc
in
fincstp
fstpl
pop
mov
mov
xchg
push
cmpb
hlt
jne
xor
mov
inc
or
fimuls
outsb
mov
xchg
out
add
testb
cmc
sbbl
movsb
insl
adc
leave
fs
push
lods
daa
cmp
fbstp
out
scas
mov
mov
movsb
out
dec
cmp
xchg
push
mov
inc
mov
and
fcmovnu
divl
mov
push
pop
pop
dec
pushf
pop
sbbb
aas
or
cmpsb
sbb
cmp
repz
gs
jg,pt
jle
mov
push
cmp
movsl
cmp
fwait
sbb
mov
pusha
popf
sti
fcmovnbe
cmp
xchg
or
pusha
or
sbb
in
xor
movsb
push
out
mov
repnz
jcxz
jae
insl
insb
inc
push
push
insl
jns
jae
dec
cmp
push
je
cmc
lds
push
sub
mov
into
dec
jecxz
rol
ja
fisubrs
jnp
sub
or
pop
nop
sbb
xchg
leave
lods
call
int3
sti
pop
jge
mov
pop
data16
loopne
fs
dec
mov
daa
fs
mov
aas
mov
gs
pop
jbe
xchg
jno
insb
arpl
mov
jb
xchg
lock
movsb
aam
dec
sbb
in
cltd
sbb
pop
in
mov
daa
es
mov
lcall
dec
loope
mov
repnz
out
les
rcrb
pop
mov
and
xor
sti
push
push
int
movsb
aas
fildll
push
inc
ret
or
cwtl
mov
decb
test
push
adc
xchg
jl
adc
movl
lods
jmp
sti
ja
jae
and
jmp
pushf
and
sahf
mov
sarl
push
daa
imul
dec
pop
test
mov
sti
sar
mov
ret
insl
jmp
das
mov
jno
dec
pushf
movsl
mov
add
pop
in
pushf
jmp
mov
pop
dec
hlt
subb
lods
ja
icebp
dec
pop
mov
into
cs
cmpsl
ret
repz
cli
jbe
sub
mov
lret
ljmp
insl
data16
push
jno
push
ret
js
addb
nop
inc
mov
mov
cmp
pop
gs
jge
dec
scas
std
in
rclb
mov
or
xchg
popa
and
mov
mov
jle
fcom
hlt
sub
add
inc
jg
in
push
rolb
mov
sbb
push
sbb
into
sub
pop
xor
popf
insl
cmp
mov
out
mov
push
mov
or
lret
pop
add
imul
adc
clc
cltd
out
push
jno
mov
fucomi
in
insb
ja
xchg
dec
jne
adc
xchg
sub
sub
or
dec
and
cmp
ret
lock
aad
sbb
sbb
repnz
cmp
add
pop
lods
inc
sub
adc
sbb
and
aas
push
jae
jnp
xchg
mov
addr16
frstor
mov
pop
pop
add
lds
cmpsb
ret
cmp
mov
fsubrl
popf
pop
jmp
movsl
sahf
xchg
pushf
imul
frstor
sbb
movsb
icebp
cld
jns
scas
ret
test
aam
scas
mov
adc
sbb
push
lock
lret
loopne
out
jp
fisubs
insb
add
and
lods
or
call
and
pop
add
lods
packsswb
sbb
jb
decl
sahf
addb
popa
jmp
aam
pop
loopne
and
repnz
push
mov
inc
pop
sub
fnsave
inc
jmp
mov
enter
push
mov
or
adc
mov
push
cmpsb
or
stos
push
mov
jno
mov
xchg
test
std
hlt
es
and
add
pop
stos
sub
lds
lret
jb
cmp
push
xchg
aam
mov
mov
sub
push
pop
cld
fnstsw
js
sub
filds
lock
mov
and
xchg
faddl
xor
inc
arpl
std
idiv
in
mov
pop
xchg
and
lea
shlb
sbb
sbb
add
jge
sbb
out
icebp
and
cmpsb
push
sub
loope
shlb
push
push
roll
test
insl
out
es
cmp
sahf
jae
repnz
pop
inc
push
xchg
sub
xor
mov
mov
sbb
mov
or
cmp
push
loope
adc
cwtl
in
pop
inc
push
push
int3
sub
jns
cmc
in
mov
leave
jno
lret
outsl
pop
lock
out
add
clc
and
xchg
shl
mov
mov
ljmp
movsb
xlat
add
or
je
cltd
cwtl
addr16
and
daa
imul
dec
aad
cwtl
cmp
mov
or
lods
xchg
sub
imul
shll
and
cmp
jns
add
xor
fstpt
adc
fiaddl
pop
cmp
jl
add
test
repnz
test
rol
cmp
xchg
or
sbb
cli
or
sub
scas
mov
xchg
jns
lcall
popl
into
sbb
ljmp
dec
sbb
ror
dec
cld
dec
mov
fwait
jle
sub
mov
out
scas
ljmp
lea
and
mov
mov
xor
inc
inc
stos
in
sbb
lods
xor
dec
sub
fcmovnb
mov
aaa
cmpsl
loop
fimuls
adc
mov
out
fsubs
xchg
or
fidivrl
in
xchg
in
cmp
sbb
insb
loop
or
int
add
push
adc
call
pop
fwait
inc
jno
daa
mov
hlt
jmp
cld
xor
aaa
stos
cli
sbb
imul
mov
insb
pop
add
jecxz
xchg
popa
pop
lds
in
xor
sbb
xadd
cld
incb
sbb
jne
fldenv
ljmp
fsub
sbb
loopne
push
hlt
inc
cmp
mov
and
ret
mov
push
and
test
jmp
outsb
ror
shrl
ret
fldenv
pop
neg
or
and
aaa
int3
mov
loope
jp
fisubl
push
push
roll
jns
mov
cmp
imul
int3
ds
into
mov
sbb
hlt
push
mov
jg
adcb
pop
gs
xchg
mov
lret
lret
push
in
imul
es
jb
imul
xchg
lea
test
add
dec
mov
sub
mov
into
mov
daa
imul
or
pop
mov
cs
xor
mov
jae
inc
in
pop
sti
jnp
mov
pop
fwait
add
mov
mov
pop
rol
outsb
push
filds
mov
inc
nop
sbb
test
add
shll
and
jp
arpl
rclb
iret
mov
rol
jae
mov
xor
mov
cmpsb
lahf
insb
sub
outsl
dec
pop
push
popf
fstps
call
inc
dec
les
fdivr
insb
stos
mov
lds
fs
into
jne
sbb
mov
mov
xchg
pop
or
lea
mov
mov
nop
fidivrs
push
imul
push
pop
rolb
fisttpl
cli
stos
mov
in
jb
add
dec
in
xchg
adc
mov
enter
pop
dec
fistps
push
xor
pop
mov
adc
dec
push
mov
sub
mov
scas
gs
pop
or
leave
mov
fildl
mov
fmull
icebp
dec
inc
push
jne
push
add
inc
cmp
push
xchg
add
ja
jae
sbb
jg
cmc
and
aad
mov
das
push
xor
adc
adc
cltd
jnp
fisttpll
sub
or
push
cmp
or
ljmp
enter
ficomps
ret
mov
add
sti
xchg
mov
add
push
mov
lods
pop
sbb
sub
pop
mov
sti
cmpl
clc
sbb
mov
loope
aaa
nop
iret
mov
ficoms
mov
pop
sti
bound
movsb
adc
loope
cmpsb
ljmp
dec
dec
pop
ljmp
popf
jns
pop
pop
pusha
popf
lds
dec
push
insb
jbe
out
jecxz
adc
fcoms
ficompl
and
jns
pusha
idivl
rcll
xor
movsb
pop
xchg
xlat
lea
nop
adc
scas
loope
dec
adc
rcrb
sub
repnz
pop
fwait
dec
sarl
insl
jge
cmpsb
mov
out
in
sub
sahf
cmpsl
xorb
movsb
cmpb
sub
sub
mov
shrb
pop
mov
pop
add
pop
xlat
pop
xchg
mov
mov
ficompl
arpl
mov
mov
pop
imul
and
mov
popf
add
adc
jge
jecxz
mov
adc
ret
dec
inc
andl
add
mov
int3
outsl
push
popf
repz
or
ds
loop
dec
subb
out
mov
jno
adc
and
cmpsb
sbb
jecxz
jae
inc
fldenv
int
sbb
ret
insb
jb
mov
push
jo
pop
jbe
inc
rolb
lcall
sbb
lods
imul
frstor
or
stc
or
mov
sbb
cld
insb
lds
arpl
in
icebp
sbb
add
clc
mov
inc
push
lods
jae
push
aas
push
adc
sahf
xor
inc
gs
push
es
jl
and
and
shrb
xlat
sbb
cs
lods
mov
shlb
test
mov
cld
stc
aaa
aaa
leave
jmp
pop
xchg
lea
cmp
shlb
das
push
pop
data16
pop
push
gs
jmp
sbb
adc
popa
fwait
xlat
push
in
std
imul
les
and
sub
push
sub
jns
flds
rcr
adcb
shl
inc
nop
xchg
xor
incl
sub
pop
fiadds
leave
xchg
jl
jp
xor
fadd
adc
jp
scas
pop
and
shlb
push
xchg
hlt
loopne
nop
or
cli
mov
pop
ljmp
ljmp
push
sbb
add
aaa
mul
xor
push
pop
les
ljmp
or
jg
dec
jmp
lret
out
cmc
sub
pop
stc
fs
dec
dec
xor
loope
xchg
sahf
add
dec
imul
push
les
push
inc
jb
pop
and
enter
in
daa
or
pop
mov
adc
repz
cmp
fcoml
lods
adc
cmp
cli
adc
add
mov
mov
movsb
jne
mov
pusha
mov
sub
sbb
cmp
loope
xadd
cltd
fisttps
cmc
jbe
lea
add
fdivl
aad
cltd
fdivl
insb
lret
add
xchg
lods
ret
mov
jge
inc
mov
or
push
pop
fists
jns
xor
jp
jnp
add
add
repnz
jno
test
in
pop
rolb
push
or
in
mov
movsl
mov
pushf
pop
xor
mov
aad
lds
popa
dec
jne
mov
mov
mov
push
cmpsb
jmp
aad
lods
or
and
cmpsl
mov
rcrl
push
dec
jne
mov
adc
sti
mov
xor
cld
ljmp
outsb
scas
dec
repnz
push
sbb
std
xlat
mov
push
imul
ds
popa
rcll
jp
xor
test
lods
jmp
mov
push
mov
inc
push
sub
shl
imul
or
in
loopne
push
or
inc
mov
inc
add
push
cli
aad
xor
sahf
fld
int3
je
adc
insb
mull
xor
jo
and
aaa
jb
dec
shll
out
rcrb
inc
fstps
sbbb
cmc
inc
sub
xlat
dec
sub
xchg
mov
sbbl
xlat
into
fs
mov
dec
call
repz
pushl
mov
adc
dec
mov
rolb
or
ljmp
sbb
add
shlb
loope
mov
cltd
fistpl
mov
js,pt
or
fdivp
jge
mov
push
adc
sub
mov
pop
fidivs
in
and
imul
xchg
sub
inc
mov
loopne
cmc
lret
add
pop
loopne
sbbb
stc
push
cli
sahf
push
repz
daa
or
jp
jo
js
sti
mov
mov
dec
mov
fadds
sti
jecxz
and
push
and
incl
push
cmp
cmp
and
sbb
xchg
pop
scas
rcl
pop
pop
cmp
jg
subb
adc
xchg
or
incb
ss
cmova
pop
push
push
push
and
call
addr16
imul
sub
mov
bound
mov
push
jo
push
dec
xchg
fnstenv
add
push
jno
jbe
xor
sub
lret
sub
cmpsl
mov
pop
dec
adc
inc
jl
xor
push
les
dec
testb
mov
scas
ret
sub
popl
pushf
lds
loopne
in
rol
dec
xlat
xchg
pop
arpl
mov
pushf
dec
push
sbb
cli
or
or
or
push
rclb
mov
pop
jnp
les
and
ficoms
mov
nop
aaa
push
incl
xchg
adc
push
pop
dec
ret
adc
inc
push
pop
cli
shll
popf
cmp
and
pusha
mov
sbb
xor
push
insb
testl
jmp
mov
arpl
push
and
xchg
cli
xchg
or
popa
pop
xchg
sti
xchg
jl
mov
lret
mov
ret
and
fisttpll
jp
arpl
mov
sbb
aam
imul
mov
lods
lcall
stos
fs
lahf
mov
cmp
aas
mov
aam
int3
clc
pop
inc
push
outsb
outsb
mov
xlat
add
sbb
pop
sbb
jae
pmaxub
cmpl
pop
test
pop
movsl
test
xor
jnp
cld
xor
dec
mov
popa
inc
mov
jb
hlt
icebp
loop
ficomps
lds
push
push
inc
in
mov
out
cmp
sbb
aaa
fs
fsubr
add
dec
mov
jl
sub
fisubrl
fcompl
testl
addr16
add
ja
in
fistl
push
adc
cs
or
aad
jmp
std
outsl
xor
adc
stos
imul
and
enter
dec
sbb
mov
xor
out
push
es
mov
jno
push
xchg
jg
jge
xchg
dec
fwait
and
mov
adc
outsl
stc
sub
imul
gs
add
ljmp
jmp
data16
in
push
sahf
push
mov
sub
add
or
test
lods
out
fnstsw
fsub
and
or
mov
cmp
shl
sbb
shll
adc
nop
adc
pop
mov
fmull
in
cwtl
sbbb
dec
loope
dec
in
push
mov
sub
push
dec
jb
ror
jae
mov
mov
or
push
fwait
hlt
push
jmp
jbe
shrl
or
cmp
and
xchg
cmpsl
repnz
shlb
push
loope
cld
cli
lret
out
jl
ja
mov
mov
shl
push
add
dec
pop
and
lods
mov
out
jg
cmp
cs
pop
movl
les
lock
jecxz
inc
xchg
in
pop
inc
subb
mov
xor
jge
mov
pop
xchg
cmc
fcompl
push
aas
sbb
fdivrs
cs
stos
and
test
mov
lahf
mov
in
ss
std
mov
inc
aas
lea
movsb
pop
pop
je
loop
or
or
inc
mov
mov
lcall
pop
inc
adc
hlt
loope
mov
and
aam
int
pop
jecxz
mov
in
cmpsl
aam
push
jo
push
lret
push
and
cmpsl
push
fstpt
adc
fbld
jno
inc
in
movsl
lods
test
leave
into
es
cs
mov
loop
ss
jb
iret
in
movsb
sbb
jb
mov
fdivrl
cmp
inc
adc
sti
mov
scas
fsubrs
iret
lds
in
jbe
xor
pop
fsubp
std
rcrl
mov
xor
insb
std
scas
ss
and
mov
jp
icebp
push
cmp
mov
mov
jmp
pop
mov
mov
mov
adc
je
inc
pusha
mov
push
adc
das
and
scas
push
aad
jb
cwtl
pusha
movq
push
lret
jle
mov
pop
fists
inc
insl
arpl
ljmp
test
ljmp
add
add
aaa
sahf
xor
mov
add
mov
xor
xchg
xchg
scas
cmp
icebp
jo
and
mov
icebp
xchg
cwtl
jle
loopne
dec
jp
pusha
lcall
cld
mov
push
sub
fdivrs
imul
cmp
ficompl
add
cmp
inc
stc
dec
movsl
ds
std
and
ret
insl
call
mov
lods
out
fdiv
fldl
xor
inc
xchg
out
push
inc
push
xor
mov
push
sbb
lock
cwtl
ret
xor
notl
xor
fwait
pop
ss
movsb
std
xor
sub
add
xor
push
je
pop
repz
repnz
test
mov
loope
jae
dec
dec
fcmovu
ljmp
cmp
mov
nop
addb
aaa
dec
imul
ljmp
pop
mov
xlat
bound
loopne
shlb
add
bound
cwtl
jnp
jp
iret
push
push
shr
sub
pop
bound
std
out
xchg
sub
in
loopne
and
ljmp
inc
cs
cmpsb
sbbl
insl
movsl
aaa
jge
mov
ret
sub
jno
fistpl
xor
mov
arpl
loopne
push
jo
inc
adc
push
cmp
cmp
pop
and
adc
shll
push
int
movsb
pop
mov
adc
cld
movsl
roll
sub
popf
dec
and
adc
or
movsb
gs
or
inc
je
sub
notb
pop
mov
jae
stos
int
cmp
dec
add
repnz
stc
movsb
xor
xchg
xchg
and
inc
cmp
fs
inc
jo
sti
push
add
cmp
icebp
mov
adc
xchg
sti
jbe
mov
mov
mov
cmp
mov
fcmovbe
mov
sahf
push
jne
mov
pop
mov
nop
testb
or
sbb
enter
mov
adc
add
xchg
daa
movsb
mov
repnz
mov
adc
fdivl
loop
ret
mov
imul
push
fnstenv
pop
fst
mov
cli
mov
arpl
gs
popa
aam
sbb
lret
cmpsb
test
gs
cwtl
mov
ficoml
jae
xchg
das
cmp
cwtl
adc
jmp
adc
add
and
pusha
cmpsl
inc
mov
out
and
rolb
push
mov
xchg
out
call
fstl
or
shlb
jno
jl
mov
lods
cmpsb
les
adc
adc
jns
push
mov
in
cwtl
sbbb
loopne
and
jae
imul
ja
pop
pop
and
push
addl
inc
sbb
mov
and
scas
and
stc
jg
pusha
or
pop
cli
or
dec
mov
push
cmpsb
push
pushf
jge
mov
loopne
xchg
pop
push
movsl
dec
mov
test
lret
mov
notl
sbb
lods
in
pop
pop
mov
and
adc
cmp
push
mov
loop
jnp
xchg
pop
sarb
push
mov
mov
adc
pop
in
push
es
sbb
movsl
fistps
enter
or
or
mov
mov
xchg
xchg
aad
fdivrl
lret
xor
or
and
mov
xchg
add
dec
ss
rcrl
in
test
and
xchg
cs
sarl
or
das
rcll
xchg
enter
ss
inc
xchg
ficoml
mov
les
add
cmpsl
rclb
je
cmp
mov
jecxz
mov
cmp
pop
mov
push
dec
jno
mov
repnz
adc
cmp
js
jo
or
sub
cmp
push
cmp
sti
push
push
jg
mov
cmove
popf
insl
stc
rorl
xor
mov
insl
dec
jo
jb
lods
es
fdivl
jge
push
sub
cmpl
push
imul
and
dec
nop
enter
dec
pop
loopne
mov
arpl
sarl
outsl
cli
mov
jle
fdivrp
out
and
dec
sub
mov
mov
je
mov
push
imul
hlt
xor
mov
or
aas
cld
sahf
or
insl
repnz
or
outsb
mov
mov
mov
pop
or
mov
fbstp
dec
mov
inc
push
mov
cmp
sub
and
or
je
nop
jnp
adc
cmp
jle
push
pop
ret
stc
inc
hlt
das
hlt
dec
mov
push
pop
mov
iret
pop
push
iret
and
mov
lret
cmc
dec
dec
mov
xor
dec
sbb
xor
fdivl
xor
sti
xorl
pusha
push
les
shl
jmp
mov
adc
aad
mov
sub
mov
push
aas
inc
fisubrs
or
sub
jbe
push
push
jo
std
cld
js
sub
or
iret
mov
fcoml
outsb
int
inc
inc
js
fwait
inc
mov
cmc
mov
shrb
jae
jb
xchg
cmc
sub
aad
push
jbe
jmp
sub
cld
aam
jp
and
cli
dec
sti
dec
movsb
push
cmp
fisttpll
jl
cmp
notl
sbb
xchg
enter
shlb
mov
mov
sub
mov
push
inc
jle
pop
mov
push
enter
xor
xor
in
push
icebp
adc
es
inc
push
fdivrs
xor
out
add
dec
sbb
mov
push
insl
imul
dec
jnp
mov
les
jl
inc
cmp
insb
shl
sbb
popf
popa
inc
popf
test
push
test
inc
or
xchg
loop
ror
mov
sub
pop
nop
pop
adc
push
inc
in
mov
stc
popa
xchg
add
pop
sub
arpl
out
pop
push
pop
cli
lods
xor
lods
in
add
mov
fisttps
mov
xchg
out
fsubrl
mov
and
outsl
data16
repnz
fcoml
lahf
and
in
lcall
push
jnp
fidivs
dec
mov
push
mov
mov
xlat
or
std
push
fcoms
cltd
sbb
push
and
mov
pop
arpl
cmc
mov
dec
adc
pusha
xor
inc
pop
jmp
push
imul
xor
mov
mov
jg
movsb
stc
fwait
aam
fwait
pop
cmpsb
lods
jns
mov
add
fisubrl
jg
shll
mov
dec
cwtl
push
push
mov
push
jecxz
mov
mov
mov
imul
jbe
lods
and
rorb
push
and
andb
cwtl
movsb
push
jecxz
jno
subl
xchg
pop
std
in
pop
sbb
ljmp
out
pop
outsb
mov
fsubrl
adc
sub
pop
test
cmpsl
rcr
int
imul
jmp
fnstcw
ret
fadd
call
dec
and
jns
push
lcall
je
nop
mov
ret
pop
or
in
push
dec
xor
push
add
in
xchg
xor
or
mov
dec
imul
cs
or
out
test
cltd
loop
lcall
insl
jge
cmp
sbb
addr16
jmp
mov
repnz
mov
rcll
mov
push
mov
mov
leave
inc
mov
hlt
cmc
sub
daa
push
je
inc
data16
inc
ss
je
lcall
into
push
add
es
popf
xchg
aam
test
mov
addl
pop
push
inc
fstl
sub
mov
into
fmuls
addr16
mov
jl
mov
jno
pop
sahf
and
add
scas
es
outsb
aaa
dec
push
push
xchg
scas
loopne
jecxz
adc
push
cltd
dec
not
mov
into
jle
shl
in
lea
icebp
xlat
nop
repz
mov
and
dec
inc
pop
fbstp
scas
lods
es
pop
dec
sbb
in
imul
out
adc
mov
jmp
pop
inc
push
jne
sti
mov
pop
arpl
and
fwait
cmc
sub
or
sub
cli
rolb
jne
mov
int3
add
jmp
push
enter
push
movsl
test
mov
fcoml
scas
or
jns
aaa
call
inc
dec
xchg
mov
mov
icebp
push
mov
jno
mov
aad
arpl
jl
cltd
mov
enter
adc
loope
mov
xchg
push
mov
jno
sub
xchg
pusha
xor
pop
pop
mov
outsl
cli
jmp
sub
or
jo
pop
adc
adc
mov
xchg
mov
mov
lock
popa
push
imul
hlt
fwait
or
jle
insl
mov
insb
arpl
adc
mov
outsb
xchg
fstpt
cmp
jae
pusha
mov
mov
xchg
dec
fucom
movsb
mov
pusha
or
mov
insl
ficoms
and
mov
sbb
lds
mov
jb
dec
pop
lock
inc
mov
insb
mov
arpl
ja
in
push
int3
sub
outsl
pop
xchg
clc
popa
imul
xchg
sbb
fidivs
cltd
cmp
add
int3
gs
or
jg
mov
popf
xchg
xor
pop
sbb
jge
mov
std
push
push
sarl
imul
jnp
push
es
push
or
test
pop
mov
fdivp
popf
inc
gs
out
popf
enter
inc
and
mov
sbb
sbb
inc
aam
es
aam
pop
jmp
loop
push
leave
xchg
fs
jo
rcl
push
push
fidivs
ret
push
dec
movsb
jecxz
pop
xchg
cltd
mov
mov
das
shrb
popa
sub
enter
insb
add
push
xor
xchg
shl
test
push
xchg
cld
push
push
in
jns
and
jmp
mov
jmp
sbb
inc
lods
pusha
lcall
push
mov
repz
mov
pop
sub
ds
mov
add
sbb
pop
push
jp
pop
pop
enter
std
data16
lret
call
push
xchg
cltd
xchg
pop
cmp
inc
jb
movsb
push
jmp
dec
push
std
dec
loop
jbe
loope
sub
mul
push
fsubr
cltd
pop
add
addr16
mov
mov
jecxz
xor
mov
xchg
push
push
or
inc
pop
imul
add
imul
xchg
sbb
cmp
cmpsb
stos
and
mov
stos
rcll
aad
arpl
and
or
clc
pop
les
pop
cmpsb
fimull
mov
out
lea
cld
decl
rep
xor
pop
xor
inc
loop
mov
cli
movsl
dec
int3
jecxz
push
pop
jno
xchg
pop
stos
xchg
mov
sbb
notl
pusha
leave
movsb
aad
xchg
repz
lea
cld
je
and
cwtl
loopne
ret
pop
sub
inc
mov
mov
notb
test
pop
pop
sub
pop
push
mov
sub
push
loop
mov
fisubs
out
mov
bound
ds
jno
cld
addr16
movsb
mov
xchg
dec
or
adc
sub
test
scas
test
scas
fisubrs
cmc
les
nop
stc
dec
fldl
xchg
out
in
jmp
mov
int3
rorb
sahf
jns
dec
and
repnz
cwtl
push
lock
es
jg
mov
test
pop
imul
lods
mov
cltd
es
xor
enter
fstpt
into
mov
mov
into
dec
push
mov
cmp
jne
bsf
enter
out
xchg
xchg
mov
pop
icebp
dec
pusha
je
jo
sbb
cmpl
iret
jb
cli
sub
jo
mov
out
or
out
lret
cmp
mov
shll
jno
pop
idivl
add
xor
fstpl
fimull
jno
pop
cmp
out
add
jbe
iret
xor
ljmp
shrl
add
pop
jo
inc
lahf
cmc
sahf
mov
push
and
dec
push
and
add
xchg
lods
sub
lods
mov
jnp
dec
fcoms
mov
dec
mov
lret
mov
test
mov
bnd
mov
sbb
rclb
fimuls
stc
mov
jle
sbb
inc
push
and
iret
mov
mov
xor
xchg
lahf
push
inc
push
mov
xor
jbe
ret
add
cmp
xor
cmc
jmp
and
adc
cmc
fdivrs
add
jp
mov
mov
mov
dec
xor
test
lret
movsl
mov
psrld
xor
jbe
daa
fistps
loopne
out
hlt
sarb
sahf
cmpsb
pop
lahf
xchg
test
push
adc
ja
add
cwtl
pusha
push
notb
jmp
fwait
scas
mov
icebp
fnstenv
jmp
pop
xchg
push
sahf
outsl
rolb
mov
xlat
cwtl
ficoml
sub
out
adc
or
xlat
inc
push
shlb
and
mov
or
test
bound
fs
sbb
into
int
jnp
cmc
sti
sbb
mov
lret
xor
pushl
iret
fmulp
fisttpl
dec
mov
sahf
test
scas
cmp
and
lock
outsl
cmp
xor
or
aad
int
popf
popa
addb
lods
mov
jmp
cmp
xchg
inc
or
xor
jne
mov
jle
mov
test
jo
iret
popf
iret
push
cmp
shrb
clc
sub
mov
push
jmp
rorb
shll
test
pop
push
mov
lcall
lods
dec
test
ret
add
cwtl
jb
movsb
push
sbb
ret
pop
xor
insb
pop
xor
pop
pushf
lret
ds
add
or
cmp
in
das
in
mov
daa
data16
imul
mov
cmp
xor
pop
xor
scas
xchg
outsl
mov
jo
testb
push
loop
in
add
cmp
ficoms
pop
pushf
outsb
out
xchg
ds
lock
xor
fisubrs
stc
jb
in
mov
mov
lret
rep
cld
sub
sub
add
shl
xchg
mov
in
lahf
icebp
ja
mov
sbb
lods
mov
jge
popf
dec
addr16
pop
add
dec
sub
je
push
nop
in
pop
in
adc
mov
cltd
mulw
xor
pop
sahf
je
mov
in
add
add
inc
mov
mov
popf
popf
or
fisubs
cmp
mov
push
or
push
lods
jbe
push
mov
icebp
pop
dec
lea
aas
mov
in
movsb
xchg
bound
dec
ja
movsb
inc
fldt
cltd
out
insl
cmpsl
add
push
rolb
shl
jbe
or
loop
sbb
les
push
into
sbb
in
lds
mov
ret
out
movsl
cmpsl
jbe
arpl
or
xor
pop
dec
movsl
idiv
fbstp
push
fcomps
imul
icebp
xchg
scas
outsb
xor
cltd
add
lods
ror
xor
shr
stos
into
mov
dec
cmp
adc
mov
cltd
dec
arpl
ljmp
adc
loopne
mov
fists
cmpsb
push
mov
test
pusha
sahf
addb
dec
jae
imul
inc
sti
mov
mov
and
imul
push
cmp
movsl
mov
fisubs
sub
mov
mov
call
and
cmp
je
popa
xchg
push
mov
sub
mov
xorb
insl
adc
sub
call
jg
xorb
cs
stc
xchg
mov
xchg
pop
test
mov
pop
cmp
adc
push
adc
sbb
dec
sbb
lea
cltd
push
pop
repnz
mov
or
and
test
movb
pop
jno
mov
scas
jle
sub
sbb
pusha
jae
inc
or
pop
xchg
xchg
daa
popf
fcomi
jb
popa
xchg
subb
outsl
cmp
js
fistps
mov
push
xchg
dec
subb
mov
or
std
adc
daa
stos
mov
flds
mov
loop
and
or
fsubrs
xchg
frstor
and
jo
jb
mov
scas
icebp
push
and
xchg
cmp
pop
test
js
jg
enter
fnsave
mov
xchg
mov
out
sahf
cmpsb
je
adc
and
xchg
loope
mov
push
in
rclb
ds
cmp
aaa
les
mov
jmp
adc
enter
xchg
mov
push
inc
stc
les
add
adc
lea
jmp
cmpsb
movsb
pop
imul
mov
mov
mov
jo
ds
movsl
xor
xor
xor
rcr
icebp
cmc
mov
ds
mov
mov
sub
js
jge
pop
rclb
out
je
sub
adc
outsl
sub
or
out
out
dec
jno
adc
loopne
jo
sub
push
jmp
fsubrl
fadds
mov
sbb
pop
mov
or
addr16
xchg
or
mov
xchg
push
imul
add
mov
fwait
jne,pn
test
aaa
repnz
mov
mov
cmp
rorb
pushf
lods
sub
out
mov
fsubs
add
stc
sbb
aad
mov
popf
push
daa
scas
sub
xchg
out
loope
scas
sub
test
sti
mov
int
in
push
add
jbe
out
mov
or
dec
xchg
jmp
cmpsb
xor
pop
outsb
hlt
popf
inc
sub
pop
lcall
fisubrl
sub
cltd
les
mov
and
lret
inc
mov
mov
fucomi
dec
scas
mov
and
cs
sub
push
icebp
movsb
enter
adcb
lret
mov
fsubp
adc
es
ffree
inc
jne
pusha
dec
cmp
mov
jno
push
inc
sbb
and
and
sub
dec
repnz
fisttpll
push
dec
mov
out
fcmovnbe
jbe
push
ljmp
cltd
lods
xchg
dec
push
cmc
xchg
xchg
push
xor
push
lcall
rol
and
sbb
mov
test
gs
sub
xor
jo,pn
loope
add
cwtl
mov
mov
pushf
dec
je
pop
xchg
cmp
xlat
jb
out
xlat
add
xchg
cmp
jne
mov
pop
loop
jne
dec
cwtl
mov
xor
or
and
js
add
xchg
int
mov
ss
sub
sarb
jae
mov
xchg
jl
loope
jmp
sbb
cld
xor
inc
xchg
mov
pop
daa
adc
xchg
jg
insb
xchg
mov
xchg
out
sbb
stc
cld
xor
jno
push
popf
mov
jp
inc
icebp
sahf
push
mov
mov
sahf
cmp
mov
mov
mov
decl
sbb
stos
push
xchg
push
push
call
aam
cmc
mov
xchg
mov
sarl
xchg
fwait
lret
in
inc
jecxz
outsb
pop
dec
daa
cmp
lock
cmp
insl
js
mov
hlt
scas
repnz
faddl
mov
andl
lcall
data16
mov
pop
out
push
pop
cmc
je
les
inc
push
mov
adcb
push
mov
sbb
out
fisttpl
push
adc
les
divb
in
jle
mov
enter
mov
cmp
shll
and
mov
mov
popa
das
xor
daa
insb
pop
push
or
lock
cmovg
xor
sub
pusha
mov
fldenv
dec
out
push
mov
inc
xchg
ja
pop
and
fwait
mov
xlat
dec
sub
cld
stc
ds
rcl
or
and
dec
sub
push
and
sub
inc
push
jp
ret
clc
mov
fs
cltd
mov
mov
int3
ret
xchg
jns
dec
dec
mov
shr
lret
jae
push
pop
in
int
xchg
add
loop
xchg
pop
ds
adcl
cmp
std
nop
aas
out
ret
cli
mov
repnz
and
adc
call
subl
sub
fs
sti
pop
fildll
shl
add
cmp
mov
in
mulb
adc
testl
loopne
push
xchg
push
dec
push
cmp
outsb
in
pop
outsl
push
mov
call
xor
mov
inc
xor
int3
in
cltd
jmp
movsb
adc
iret
jo
add
movsb
adc
mov
and
je
or
fsubrl
pushf
jp
xchg
and
test
push
push
jge
leave
pop
mov
stos
out
or
or
fwait
and
mov
scas
inc
lds
sbb
adcl
xchg
in
movsb
lahf
aaa
jns,pt
dec
int
mov
or
movsb
xchg
pop
pop
sub
lea
pushf
test
out
in
mov
cwtl
ss
ja
fiaddl
jo
sbb
xchg
pop
sarb
sti
addr16
mov
fisubs
frstor
test
push
cld
cmpb
sbb
or
mov
mov
popa
movsb
pop
jae
ret
outsl
imul
sbb
inc
xlat
stos
cmp
xlat
fsubs
imul
test
lret
xchg
push
adc
pusha
jo
dec
scas
out
jmp
pop
stos
push
jb
adc
pop
in
in
movsl
mov
xor
cmc
pop
mov
cli
in
xchg
adc
mov
jnp
dec
aaa
je
dec
hlt
aam
mov
adc
insb
push
inc
dec
aad
xchg
jmp
pop
dec
scas
cmp
sbb
fistps
add
xchg
mov
hlt
sub
adc
out
pusha
pop
insb
mov
insb
xchg
push
ljmp
es
jne
jmp
rclb
cmp
lea
lods
pop
sbb
mov
fadds
add
push
sub
test
cmp
pop
xchg
mov
inc
aad
int3
inc
lods
and
pop
es
jae
leave
sub
popf
out
xchg
into
call
int3
pop
in
xor
insb
sbb
sti
xchg
aam
cmpsl
test
movsb
pop
push
in
adc
arpl
sbb
aas
push
in
mov
out
dec
sub
add
dec
ljmp
daa
adc
mov
lods
fsubrl
loopne
mov
out
and
mov
fwait
test
iret
adc
cmp
int
ljmp
push
dec
lock
adc
sbb
into
pushw
pop
test
lock
sbb
cmp
mov
test
jnp
int
mov
mov
pop
lods
cmc
out
cmc
or
pop
mov
xchg
loope
cmp
pop
js
pop
dec
shrb
lahf
xor
adc
adc
iret
inc
int3
push
stc
mov
bound
and
insb
or
ds
push
mov
sub
mov
fdivs
call
rorl
nop
sub
test
mov
sti
jno
ret
aam
je
fwait
mov
into
fisubrl
notl
push
or
jg
jg
cmp
mov
fdivp
lret
lds
ss
xchg
pushf
lods
pop
jmp
inc
outsb
aaa
sbb
push
fisubrs
push
test
imul
aad
adc
popaw
mov
mov
mov
and
ds
iret
nop
cmpb
add
dec
mov
inc
cmpsl
sbb
call
stc
shl
imul
sbb
clc
xchg
jp
mov
je
movsb
xor
cmc
mov
cmpsb
test
and
push
push
add
push
or
mov
mov
insl
cli
int3
inc
fcmove
jp
aas
mov
or
lahf
mov
dec
mov
aaa
in
xchg
out
mov
pop
sbb
sub
sub
ss
out
push
sbb
in
or
pop
arpl
mov
decb
jne
mov
scas
mov
push
pop
dec
popa
loope
jno
xlat
dec
xor
mov
imul
insl
add
sbb
popf
iret
pavgw
and
push
inc
test
push
shl
mov
insb
dec
in
jge
ds
xchg
sub
daa
mov
lret
daa
mov
stos
cli
xchg
outsl
in
adc
aad
sbb
or
incb
xlat
mov
es
gs
nop
jmp
cmp
jo
jnp
fsubrl
mov
and
test
movsl
and
add
mov
add
inc
push
push
inc
mov
mov
hlt
adc
xor
test
add
mov
clc
pop
adc
ljmp
aam
or
in
push
mov
jge
dec
ljmp
push
fiaddl
cmpsb
push
clc
and
in
out
mov
leave
dec
fs
insl
xchg
jb
xchg
push
push
addl
mov
sbb
pop
test
or
push
xchg
fdivrl
mov
fiaddl
sub
loopne
push
cmc
push
inc
popf
or
cltd
daa
loop
bound
shlb
xchg
dec
lock
and
into
in
outsb
push
iret
push
cmc
imul
addr16
fwait
xor
mov
push
ds
or
push
push
nop
dec
pusha
aam
xchg
aaa
fwait
jo
push
pop
push
cmc
jge
cs
push
pushf
push
rcll
add
gs
xor
or
inc
push
cltd
jbe
or
sbb
pop
pop
inc
xor
dec
and
mov
and
push
dec
mov
cwtl
frstor
adc
inc
lret
push
and
gs
daa
fiadds
mov
xchg
adc
mov
adc
cltd
jbe
repz
popa
lods
out
mov
cmp
stos
push
add
push
xchg
inc
divb
das
jo
mov
fstl
or
push
push
mov
or
scas
adc
lret
js
loop
dec
in
pushf
or
cmp
push
and
loope
xchg
or
pop
ljmp
cltd
cmc
cli
je
lods
push
jae
lea
lcall
mov
mov
jns
ja
xchg
pop
lret
pop
sub
sbbb
add
xchg
mov
and
sub
push
leave
test
aad
or
js
xlat
jbe
ss
leave
rorb
adc
aaa
sti
or
cmp
stos
scas
pusha
test
adc
xchg
test
call
xchg
mov
lahf
inc
loopne
jge
lret
cld
aad
mov
pushf
sub
je
fs
mov
leave
mov
jns
aas
fs
pop
mov
in
leave
push
pop
xor
mov
dec
mov
sbb
dec
in
and
push
lock
lret
in
adc
stc
mov
push
sti
jae
push
test
out
push
dec
mov
push
test
frstor
jmp
fistl
in
mov
icebp
mov
or
jle
in
outsb
push
lcall
js
or
sub
dec
sarb
dec
sbb
imul
out
lea
lret
mov
fstl
je
push
push
faddl
jle
fs
pushf
lcall
mov
adc
cmp
push
push
mov
mov
mov
fmuls
mov
push
lock
sub
decl
pop
lods
push
fbld
sub
mov
xlat
loop
xchg
test
inc
iret
lcall
and
inc
pusha
mov
fists
cmpsl
inc
push
push
loope
int
out
fcompl
in
pop
adc
xchg
sbb
repz
ss
add
push
orl
pop
hlt
cmc
cmp
in
add
fnstenv
adc
mov
push
nop
and
stos
rol
cld
inc
aam
xchg
pop
iret
add
lea
stos
mov
lods
pop
xor
pop
mov
lcall
cmp
and
outsl
std
ljmp
aas
in
or
psrad
add
cli
fwait
cmp
aad
pop
sub
cltd
jae
push
scas
pop
rcl
cmc
mov
pop
loop
fidivs
add
mov
dec
inc
popf
push
ficoml
and
jns
push
xor
ficoms
icebp
mov
sbb
aas
pushf
sbb
xchg
cmpsb
push
leave
cmpsb
std
jb
adc
adc
rorl
cltd
sarb
inc
and
or
pop
pop
mov
sbb
or
fcmovnb
aaa
push
int
loope
addb
push
jle
mov
popf
mull
push
outsl
mov
mov
icebp
popf
cmc
dec
fisttpl
pop
rcrb
enter
inc
mov
push
arpl
dec
xchg
pop
push
decl
enter
push
mov
mov
int3
or
clc
jl
mov
push
fs
mov
mov
mov
jnp
outsb
faddp
popf
pop
lea
adc
in
dec
sbb
adc
and
push
popa
xchg
push
lds
xorl
push
orb
cwtl
mov
in
or
test
add
test
filds
rcrb
mov
lock
test
dec
pop
cwtl
mov
sub
leave
out
cmovns
scas
mov
push
add
cmp
and
call
repz
sbb
inc
xchg
mov
inc
inc
mov
daa
sqrtps
call
sub
in
dec
fbstp
xchg
mov
repz
dec
fcom
lock
iret
xor
mov
pop
out
dec
xor
ret
fdiv
ds
jbe
xor
test
mov
aam
cld
push
push
lret
fdivl
push
aad
js
clc
push
pop
jmp
jne
out
popf
push
shrb
test
pusha
scas
in
shl
pusha
dec
mov
test
shrb
js
mov
pop
imul
mov
mov
sti
icebp
ljmp
or
pushf
dec
or
lea
pop
das
add
mov
jge
pop
push
sbb
leave
mov
loopne
mov
dec
rcrb
add
int3
popf
push
and
lock
push
aad
mov
sub
push
ret
orl
jnp
adc
xchg
mov
popa
hlt
addl
lods
int
mov
sahf
pushf
and
in
mov
ljmp
xor
push
aas
ja
adc
push
push
and
adc
je
sbb
cmpb
popa
inc
pop
dec
mov
push
mov
or
test
call
fmull
icebp
jmp
adc
xor
sahf
mov
bound
aam
mov
adc
push
cmp
push
mov
outsl
and
les
std
cmp
or
sar
scas
and
test
adcl
mov
je
push
xchg
sbb
dec
inc
and
shrl
push
pop
aad
mov
dec
xchg
lret
fmull
insb
xchg
pop
and
iret
ljmp
dec
lods
xor
imul
push
stc
sbb
orb
pop
xchg
and
cmpsl
inc
test
insb
cmp
pop
jge
imulb
jmp
lods
push
ret
and
into
push
pushl
and
movsl
cmova
jne
out
xchg
xchg
mov
pop
int3
push
sti
enter
jo
test
adc
sub
mov
xor
dec
loopne
into
jb
stos
movsb
dec
fistpll
or
cmp
jno
mov
gs
mov
ds
mov
jno
add
push
xchg
sbb
add
cltd
and
test
mov
dec
popf
cmp
fmuls
and
push
shl
loop
mov
and
aam
dec
repnz
adc
lods
loop
sbb
adc
sarb
cmp
sarl
mov
lods
shr
or
push
sub
leave
sub
pop
push
into
mov
adc
sub
mov
movsl
xlat
xchg
fucomp
add
push
je
sarl
in
jg
dec
popf
mov
fadds
sub
inc
test
cmp
cmc
movsl
lahf
mov
cmp
pop
sbb
mov
loope
fcomps
sbb
dec
arpl
movsb
xchg
clc
pop
outsb
jmp
out
das
push
and
clc
test
and
xchg
mov
jbe
add
shlb
fsubs
sub
lahf
cmp
adc
jae
xor
xchg
popa
mov
and
xor
ror
cwtl
jge,pt
sbb
or
pop
enter
fldl
pop
inc
clc
push
xor
cmp
sub
mov
sahf
cmp
fiadds
stc
mov
adc
push
push
test
std
cs
stc
mov
add
mov
dec
jecxz
push
pop
inc
repz
xor
pop
fldenv
xchg
or
dec
les
pusha
mov
lods
in
negl
in
test
ret
mov
movsb
loop
mov
dec
xchg
xchg
jp
jp
inc
test
sub
enter
movsl
addr16
sbb
in
cmp
lret
adc
flds
push
out
cwtl
or
sub
push
lret
xchg
mov
pop
and
and
icebp
pusha
mov
insb
adc
and
movsb
cmpsl
bound
sbb
testl
and
lods
lret
jl
ret
mov
pop
pop
mov
push
adc
movsb
inc
xchg
imul
adc
mov
dec
lods
cmp
test
and
lods
out
push
sbb
cltd
imul
jne
pusha
xchg
adc
ss
cmp
xchg
ret
mov
pop
inc
jae
push
fnstenv
push
mov
stos
insb
push
add
fwait
push
adc
lds
mov
sbb
int3
xchg
pop
cmpl
dec
shr
lds
cmp
push
dec
pop
sub
fimuls
sub
imul
movsl
arpl
jne
sub
pop
cmp
fstl
xchg
adc
movsl
or
ficoml
fsubrl
movsb
shrl
outsb
aam
out
stos
lock
jmp
sub
xchg
aaa
xor
sbb
sub
mov
in
pop
insl
gs
pop
xor
sbb
sbb
mov
jmp
jb
inc
lock
dec
sub
mov
sub
fs
pop
dec
popf
scas
xchg
fstl
das
xchg
xchg
push
push
add
jmp
mov
daa
inc
pop
jge
mov
push
sub
nop
sub
imul
xor
or
cwtl
push
xchg
sub
sbb
push
imul
mov
adc
fs
xor
mov
and
mov
lock
lods
sub
or
scas
nop
push
pusha
fimuls
sub
pop
imul
jge
sbb
ljmp
inc
lock
dec
sbb
sub
cld
loope
imul
out
bnd
jbe
iret
stos
xchg
add
mov
cmp
and
sbb
ficoml
dec
aam
sbb
mov
dec
jecxz
push
roll
in
push
and
push
lods
into
cmpsb
adc
pop
loope
lods
fsubs
aam
data16
pop
bound
push
lods
push
pop
mov
out
xchg
sbb
add
mov
ret
mov
ljmp
cmp
xchg
jae
mov
jno
inc
or
jmp
mov
clc
adc
sti
sbb
sahf
sub
mov
hlt
rclb
int
mov
call
cmc
sahf
mov
mov
mov
dec
xchg
mov
mov
dec
ss
add
mov
ds
jle
mov
pushf
in
addr16
push
mov
in
scas
outsb
mov
jo
bsr
sub
iret
add
loopne
nop
mov
jno
negb
mov
outsb
cmpsl
scas
aas
push
jg
lods
adc
and
push
adc
sbb
or
inc
es
add
es
inc
dec
mov
push
pop
fldl
dec
sbb
sbb
lods
scas
aam
adcl
lods
iret
jg
clc
testb
push
and
and
sub
sbb
mov
push
inc
pop
leave
jecxz
aad
mov
lods
push
dec
ret
push
push
sahf
mov
inc
imul
into
xchg
xchg
mov
xchg
cmp
xor
shrl
je
cmp
js
xchg
mov
mov
push
mov
mov
gs
and
push
out
xchg
aad
mov
daa
mov
adc
pop
add
ret
subb
cmp
fildl
mov
sub
les
inc
je
add
jo
pusha
inc
jae
ljmp
out
cmp
lcall
in
add
or
sub
cwtl
lods
push
sti
stc
pop
add
inc
lods
fsubrs
sbb
fcompl
push
mov
mov
push
jp
xlat
mov
xor
mov
xor
cwtl
sbb
cmp
jp
stc
pop
cli
mov
dec
push
insb
enter
in
fisubrl
stc
xor
cmp
add
insl
xchg
aas
pop
dec
and
sbb
add
pushf
pushl
pop
sbb
mov
adc
mov
call
out
xor
adc
mov
cmp
push
sub
out
mov
es
cltd
push
mov
fbld
les
in
dec
mov
pop
out
xor
test
in
mov
shlb
pusha
lea
and
push
pop
loop
mov
movsb
movsl
scas
js
mov
insl
mov
ljmp
jbe
int3
ret
test
out
mov
lods
aam
and
xor
xchg
jl
rcr
ret
pop
dec
insb
adc
insb
in
js
xchg
jb
shll
out
loop
mov
jge
inc
lret
into
iret
pop
aaa
mov
outsb
mov
aam
add
mov
inc
test
out
pushf
xchg
and
ds
movsb
mov
in
inc
loop
xor
decl
cld
sbb
inc
xchg
cs
jb
and
insl
mov
sbb
push
push
xchg
pop
jne
loop
or
popf
sub
aam
pop
or
movsb
mov
popf
pop
data16
in
xor
xchg
mov
call
stos
sub
orl
aad
mov
xchg
imul
int3
jns
adc
aam
inc
popf
inc
or
and
mov
mov
cltd
rcl
jecxz
mov
clc
add
cmpsl
sub
inc
notl
sub
xor
adcb
cmp
adc
lret
xor
pop
dec
aam
push
lods
cli
xor
pop
stc
out
inc
add
dec
mov
pop
das
sbb
leave
fs
adc
ljmp
push
ret
inc
cld
push
push
outsl
and
xchg
ljmp
xchg
test
dec
nop
out
jnp
pushw
inc
arpl
insb
popa
inc
push
push
inc
popf
mov
std
mov
test
std
mov
ficoms
lods
int3
sti
popa
xor
dec
push
popf
jne
int
jl
add
xor
popf
or
push
xrelease
movsb
out
data16
shll
addr16
add
xchg
xor
mov
fdiv
cmp
dec
in
fnop
pop
mov
push
xchg
je
sub
pop
js
adc
cmp
lcall
xchg
push
fbstp
filds
cmp
inc
imull
pop
jmp
mov
cs
mov
sbb
stos
rorl
sub
insl
enter
out
scas
lret
cmp
mov
jl
or
mov
stos
push
cmp
mov
les
int
test
push
mov
jae
sbb
sub
push
xchg
cmp
lcall
popf
adc
call
pop
movsb
icebp
sbb
int
incl
imulb
inc
push
insl
xchg
fbstp
lods
cs
add
mov
pop
mov
imulb
xchg
jno
call
mov
sbb
ds
mov
iret
int3
leave
add
test
push
int3
cli
sbb
sub
xchg
cs
popf
pushf
ror
xor
repnz
and
nop
aad
mov
push
sahf
and
cmc
lea
adc
les
mov
ficoms
cmp
jle
mov
pop
or
repnz
es
fildl
pop
fstpl
aad
lods
into
lea
xchg
mov
mov
mov
inc
xchg
repz
pop
mov
aaa
mul
jmp
imul
cwtl
push
pop
ds
add
push
mov
leave
add
jmp
imul
dec
xor
sub
mov
test
popa
mov
mov
in
xchg
jl
fcmovne
cmc
jae
pop
gs
adc
pop
shll
popf
shlb
pop
push
pop
xchg
and
xor
xor
jg
jb
in
stc
jbe
shlb
lods
shll
mov
xchg
mov
addr16
sub
cmp
pop
insb
aas
and
cmpsl
popf
shlb
jge
ficoms
lret
mov
xlat
lods
jnp
jns
fbld
imul
imul
add
pop
hlt
or
add
dec
cs
imul
or
sbbl
jbe
xor
mov
xor
xlat
mov
mov
jo
jle
subb
fistps
or
je
xchg
andl
out
mov
in
and
sbb
ror
out
xor
and
std
push
sub
loop
fs
xor
addr16
cltd
mov
xchg
dec
inc
adc
mov
mov
leave
push
sahf
mov
lcall
imull
dec
mov
and
fs
xchg
ss
mov
cltd
jb
xchg
arpl
mov
fnstcw
xchg
mov
sub
mov
mov
inc
aam
fdivrl
lea
sarb
test
mov
adc
into
cmpsb
and
push
push
stc
sahf
sub
aad
cmp
cwtl
iret
gs
sbb
xchg
cltd
inc
popa
pushf
fldenv
mov
sbb
jae
nop
ret
push
push
ja
lods
or
mov
into
cmpsl
mov
cmp
aas
loop
lds
push
push
mov
stos
push
sbb
nop
lret
arpl
sti
sub
imul
scas
mov
sub
fs
in
sbb
ja
mov
loope
aad
cmc
bound
ljmp
xor
jb
outsb
into
movsb
add
jns
add
pop
pusha
sbb
out
jp
sbb
sbb
sti
sub
outsl
adc
pop
inc
xchg
fstl
jno
push
fstpl
cmp
adc
cmp
stos
fdiv
inc
leave
or
lret
inc
lret
stc
dec
mov
mov
push
xchg
jmp
sbb
cld
mov
mov
push
ret
sbb
daa
cmp
fwait
push
fmulp
test
xor
sbb
rcll
aaa
sbb
ljmp
lret
rcll
loope
hlt
mov
sbb
fistl
mov
ja
inc
int3
mov
mov
cmpb
mov
cs
inc
ss
hlt
mov
sbb
mov
sub
sub
out
add
repnz
incb
cmp
add
les
ljmp
ret
mov
in
xor
imul
ljmp
sub
xor
lods
aad
shrb
and
cwtl
cmp
mov
and
xlat
and
shr
cmp
adc
push
xchg
jmp
in
cmp
call
sub
fdivrl
mov
sbb
inc
push
sti
jae
mov
lret
cmp
pop
fbstp
mov
cmpsl
inc
sub
pop
and
imul
xchg
imul
push
cs
mov
adc
jmp
les
movsl
push
sub
mov
mov
sbb
jg
pop
sti
lahf
mov
rcr
popf
dec
xor
lock
test
pop
sub
push
loope
das
cmp
clc
dec
add
movsb
sub
cmpsb
daa
test
sbbl
mov
and
jb
or
xor
inc
mov
jbe
pop
jle
ljmp
loopne
adc
cmpl
or
jp
subb
loope
add
stc
aam
jle
cmpsb
repz
dec
cwtl
dec
or
clc
sub
push
pop
shll
faddl
adc
cli
jmp
sub
mov
in
imul
jmp
cltd
int
inc
pop
inc
cmp
call
pop
xchg
sub
fbld
adc
insb
mov
xchg
imul
shr
mov
int
sub
lods
lea
stos
imul
jl
pop
jbe
outsl
inc
mov
fldl
insb
roll
adc
gs
push
or
jmp
test
lret
cwtl
sub
or
xchg
jb
aas
pop
cs
lock
lret
and
nop
repnz
cs
mov
xlat
sbb
test
mov
jg
loop
and
mov
imul
add
push
sub
adc
inc
jb,pn
pop
dec
aas
rorb
inc
stc
cmp
or
pushf
mov
clc
scas
mov
pop
into
movsb
mov
mov
leave
sar
adc
jbe
lea
xchg
ss
cld
pushf
cmc
jmp
mov
lods
jge
imull
jae
jae
ror
loop
into
xchg
mov
mov
ret
dec
jae
in
movsl
mov
js
push
movsb
or
push
aaa
clc
pop
pop
lods
xor
adc
sbb
xor
sti
aad
dec
adc
lods
int
scas
lock
lods
das
sahf
adc
sub
push
or
fidivrs
or
test
fwait
pop
cmp
sbb
dec
mov
mov
push
jno
mov
and
inc
das
aaa
push
push
and
adc
mov
push
pop
int3
pop
fisubrl
push
icebp
test
inc
or
mov
cmpsl
hlt
sub
in
cli
lret
pop
fisubl
sbb
int
xchg
inc
lret
lods
and
rcr
aas
mov
pushf
jge
mov
fwait
pop
mov
test
cmpsb
and
fsubrl
pop
loopne
std
or
push
sti
xorb
pop
pop
mov
popa
lahf
frstor
sub
lock
adcb
add
mov
push
mov
jp
clc
mov
mov
mov
lods
sub
outsb
in
push
mov
sbb
pop
mov
shrl
push
mov
or
inc
dec
fisubs
fs
ljmp
jne
jmp
sbb
icebp
test
add
sbb
cmp
push
repz
mov
scas
jle
imul
jmp
cwtl
xor
xchg
repnz
int
jnp
xor
sub
dec
out
les
insb
pop
jbe
add
pop
ret
mov
pop
sub
mov
sahf
jnp
repnz
sbb
mov
adc
js
push
into
sti
sub
jl
mov
shrl
sbb
push
sarb
loop
xchg
push
ljmp
into
mov
or
jle
jb
loopne
add
ret
or
jne
fs
or
movsl
dec
lea
stos
and
cmpsb
and
icebp
push
bound
mov
popf
popf
int
adc
insl
in
or
out
dec
popa
jae
in
movsb
in
and
xchg
mov
or
cmpl
rcll
daa
fildll
jle
cld
ljmp
inc
and
cld
xchg
loopne
addr16
out
adc
sahf
fmul
mov
and
and
imul
aad
sbb
out
push
pop
push
push
add
sub
aad
xor
rcrb
mov
push
insb
push
push
insb
aam
loop
xor
and
insl
aad
cmp
jp
adc
and
jne
and
subb
or
cmc
outsl
xchg
dec
shlb
insl
icebp
push
push
add
xor
js
push
test
cltd
testl
sbb
jno
pop
sbb
xorl
out
fbld
addl
ja
int3
cli
jp
je
adc
lock
and
repnz
push
mov
and
push
rcll
and
cli
cmpsb
lods
jmp
or
insb
dec
and
dec
jmp
xor
mov
call
xchg
and
adc
sub
mov
add
mov
push
jecxz
pop
inc
xorb
sbb
cmp
adc
pusha
orb
aad
mov
cmp
pop
jp
out
inc
xchg
pop
mov
bound
jb
pop
or
repnz
addl
xchg
jnp
xchg
sbb
push
xchg
xchg
loopne
jns
and
mov
jle
push
and
adc
adc
mov
push
in
rcll
es
or
mov
imul
sub
cmp
mov
addr16
push
daa
sti
or
vhaddps
mov
fcoml
mov
in
xor
es
or
int3
mov
mov
cmp
test
push
in
in
test
in
adc
mov
push
ror
push
jbe
fidivrl
sub
pop
xchg
add
fwait
leave
imul
pushf
sub
cmp
test
mov
sub
fisubrs
mov
and
push
in
fldt
cmpsb
mov
cld
cmp
mov
inc
scas
test
fadds
in
jmp
add
js
xor
push
add
fists
push
and
fildl
cli
repnz
daa
divl
es
popa
ljmp
or
mov
xchg
dec
into
int
xchg
stos
mov
roll
cld
sub
and
rclb
push
in
fisubrs
shrb
and
jnp
mov
scas
push
mov
lret
iret
xor
add
in
inc
cmovge
mov
pop
test
cwtl
icebp
and
sbb
lods
ljmp
adc
repz
ret
fucomip
inc
into
mov
ljmp
cld
and
jb
sar
ljmp
int
inc
into
push
adc
aad
add
lcall
adc
sub
mov
out
movsb
mov
jo
and
lcall
loop
sub
insb
lods
mov
mov
out
lret
sub
aaa
push
jae
mov
int3
sarb
lds
sarl
ror
cmp
push
cmc
lea
fwait
cmp
inc
adc
fmulp
xor
insb
aad
jne
rcrl
insl
and
imul
in
sti
cwtl
jno
ror
sbb
and
dec
jmp
clc
mov
xchg
ljmp
xor
jl
int
fwait
dec
jae
subb
sbb
cmp
cmpsl
fidivs
dec
jge
inc
das
mov
je
test
push
pop
adc
jmp
scas
and
sahf
cs
sbb
aam
fwait
cmc
mov
imul
dec
aas
push
dec
loop
lea
es
push
adc
movsl
or
out
scas
lahf
mov
cmp
call
push
pushf
cltd
jnp
mulb
repz
jbe
add
mov
stc
shlb
jns
adc
loope
cld
icebp
test
xlat
cmpl
jmp
in
adc
clc
or
sub
in
jecxz
dec
add
cmpsl
mov
mov
adc
mov
repnz
lods
push
mov
sbb
ror
xlat
pop
or
addr16
push
arpl
sub
cmp
sti
push
adc
ljmp
mov
sub
outsb
pusha
sub
fs
pop
jnp
jecxz
insl
pusha
sub
rcll
sahf
xchg
rcr
pop
add
lods
mov
mov
out
sahf
jnp
pop
add
push
mov
fwait
stc
das
and
pop
sbb
mov
jns
pop
mov
das
das
dec
icebp
imul
fsub
push
lock
xor
std
mov
scas
push
or
push
loop
xchg
xor
aaa
mov
dec
scas
mov
pop
movsl
mov
and
repnz
mov
into
lahf
and
jmp
sarb
icebp
nop
int
xchg
movsb
rorb
cmpsl
push
icebp
mov
and
and
inc
and
lret
fbld
add
lahf
mov
or
lahf
iret
sub
cwtl
loope
pop
cld
mov
jmp
xchg
adc
and
repnz
and
fsub
push
in
pop
lret
push
and
mov
sub
shr
xor
mov
xchg
pop
jb
pop
mov
in
and
js
stc
int
mov
or
dec
ja
cmpl
les
ds
sub
mov
sti
pop
std
cld
rcll
and
sti
push
xorl
and
sub
sbb
js
shrl
mov
jmp
pop
adc
or
fcmovne
mov
ljmp
scas
jmp
test
dec
ja
adc
repnz
addl
loope
cld
or
shlb
iret
adc
xor
mov
nop
dec
fistl
mov
pop
add
jg
push
push
xchg
add
loopne
aad
mov
or
sub
std
movsl
mov
dec
xor
adc
dec
mov
jp
cs
mov
movsl
jge
lcall
stos
xor
xor
pop
jb
in
inc
mov
into
leave
or
test
out
inc
xchg
add
dec
dec
in
xchg
xchg
add
mov
je
sti
jne
ja
xor
daa
call
test
xor
dec
mov
sti
xchg
push
fs
out
in
into
xor
dec
cwtl
arpl
rcrl
data16
lret
sbb
jp
mov
pop
sbb
and
dec
in
pop
sarl
cwtl
dec
mov
jo
cld
sti
sbb
mov
fsubrl
fs
imulb
repnz
orl
out
mov
cli
popf
insb
xor
shll
popf
adc
mov
or
mov
outsb
xor
popa
test
ret
movsb
push
std
ss
dec
push
jg
pop
loop
hlt
mov
popa
loopne
mov
in
cld
fcoms
mov
jb
adc
inc
jmp
jmp
push
aaa
dec
adc
and
mov
sarl
movsb
sbb
jge
cmpb
add
int
in
xchg
subl
sbb
pop
pop
adc
add
lret
fisubs
sbb
xchg
add
outsb
mov
mov
call
pop
jge
sbb
xchg
mov
adc
pop
cmpsl
mov
jp
sbb
xlat
cmpsb
jle
jo
cs
icebp
cmpsb
fs
dec
adc
nop
iret
jbe
popl
out
je
sbb
loope
fidivrs
mov
mov
ss
dec
dec
add
jmp
ljmp
js
ljmp
push
ss
cs
add
ret
add
jns
pusha
movsb
xor
and
scas
out
cld
in
jbe
add
test
lret
cs
fldenv
cmpb
xor
int3
fisttpll
shl
mov
xchg
sbb
lods
loop
dec
cmpsb
aas
pop
mov
mov
neg
lods
push
mov
mov
imul
sub
sub
and
add
mov
push
push
out
pop
jl
sub
test
ljmp
sub
sbb
shld
jmp
cmc
dec
data16
and
xor
outsl
jo
xor
pop
dec
sbb
fstpt
push
loopne
les
pushf
jno
dec
cmpsb
faddl
cmp
pop
xor
add
inc
pushf
mov
sbb
nop
xchg
mov
mov
insb
jmp
inc
mov
and
inc
push
cmc
aam
clc
ja
cmp
sub
shl
xchg
mov
mov
fwait
nop
fldcw
rclb
arpl
pop
jmp
mov
shlb
inc
adc
mov
dec
mov
xor
fucom
push
sub
sbb
rclb
aam
push
ret
enter
sbb
rcrb
push
gs
inc
inc
xor
mov
lods
cmpsl
inc
das
sub
dec
shlb
inc
mov
pop
fdivrp
insl
mov
mov
mov
bound
mov
sbb
or
movsl
sahf
rorl
jg
out
mov
out
outsl
pop
clc
cmp
fwait
addr16
sbb
hlt
sub
aad
popf
xor
fcoms
int
sub
mov
adc
add
popa
jb
pop
ja
cli
repnz
flds
js
mov
insb
push
jo
push
ljmp
cmc
lahf
cmc
fsubrl
faddl
popa
insb
sub
mov
xor
or
dec
fldt
mov
mov
xchg
dec
dec
je
jbe
imul
out
dec
xchg
lret
das
and
mov
ja
fistps
popf
dec
mov
cwtl
dec
lds
shld
cli
fcomp
test
stos
dec
mov
jnp
push
sub
pop
pop
sbb
lret
or
push
cmp
call
imul
repnz
sbb
push
fmull
xchg
sbb
dec
repnz
arpl
orb
mov
lds
mov
lods
pop
push
loope
and
shll
jmp
fidivrl
and
in
pop
dec
inc
js
adc
or
mov
idivb
scas
montmul
cmpsb
add
stc
jmp
mov
call
test
rcrb
icebp
jg
adc
movsl
out
push
xchg
sbb
imul
in
dec
daa
bound
movsl
xor
push
sti
dec
sub
ljmp
push
leave
sbb
fldt
cwtl
mov
jle
insb
icebp
mov
addl
mov
sub
pop
popa
into
mov
ss
outsl
add
inc
out
mov
and
in
testl
call
lods
xor
in
add
dec
mov
es
cwtl
jl
arpl
pop
lcall
xchg
jne
or
inc
xor
sbb
repnz
aad
mov
dec
sub
stos
push
fs
sub
jb
jns
clc
xchg
mov
mov
adc
cmpsb
lods
jb
and
fnstenv
jl
sbb
in
or
push
push
inc
addr16
adc
lret
out
xorl
and
mov
stos
movsb
fsubrs
mov
lret
rcl
adc
pop
push
pop
outsl
ret
mov
test
sub
push
mov
xchg
in
push
fcomp
mov
and
mul
or
mov
in
repnz
and
push
aam
das
icebp
jl
out
cmp
mov
stc
ja
mov
insb
scas
push
fsubr
sub
add
jne
imul
in
mov
jmp
loope
xor
xor
lock
out
cmp
adc
ret
sub
jmp
adc
fisubl
mov
fistpl
xor
inc
bound
push
pop
subl
jl
test
cmc
andl
push
lret
pop
cmp
cs
xorb
cmp
push
add
sbbb
leave
push
imul
loop
insb
aaa
inc
inc
mov
popf
out
mov
fwait
and
daa
jg
xchg
inc
adc
push
pop
sbb
xor
lcall
mov
jmp
lds
icebp
int
or
popf
mov
cwtl
scas
add
mov
fiaddl
sub
in
dec
int
aad
ljmp
out
cltd
pop
bound
cltd
mov
sti
and
pusha
popa
mov
cld
sub
jle
xor
sbb
xor
xchg
andb
or
aaa
mov
cmpsb
mov
pop
dec
pushf
ljmp
dec
mov
add
mov
lcall
in
sbb
jl
imul
popa
lock
sbb
popa
and
jbe
mov
rorb
sub
int3
and
adc
mov
leave
nop
insl
cli
scas
xchg
jnp
call
sbb
std
adc
adc
lods
adc
push
jmp
mov
es
aad
push
call
sub
push
test
adc
push
shrl
mov
cwtl
loop
mov
out
test
loop
ret
or
sub
insb
mov
mov
enter
ret
dec
insl
and
push
push
and
or
sti
push
or
cld
mov
stc
cmpl
jl
scas
cmp
jl
sub
ret
add
insb
shlb
and
lcall
mov
jmp
sarl
or
add
xchg
mov
rcl
outsb
in
push
js
sbb
cmp
sti
in
adc
xor
xor
in
dec
arpl
shlb
mov
adc
shll
dec
push
int
cli
rcll
repnz
nop
icebp
fnstsw
and
cwtl
push
gs
mov
rcll
frstor
pushf
push
xchg
repz
icebp
cwtl
jns
out
push
mov
hlt
imul
insl
int
in
imul
adc
je
adc
sbb
movsb
pop
xchg
push
inc
loope
jmp
push
dec
push
sub
xor
addr16
shrl
in
int
fsub
rcrl
and
mov
mov
ja
in
or
dec
jo
rcll
inc
xor
jno
sbb
ret
mov
insb
jecxz
cmp
push
mov
hlt
popf
sbb
dec
adc
ffreep
outsb
popf
cmpsl
mov
add
insb
xchg
inc
lock
jge
mov
cmp
mov
inc
in
push
outsl
push
xor
xchg
add
mov
and
daa
in
sar
inc
fisubs
rorb
or
clc
jl
enter
dec
mov
mov
and
sbb
test
xchg
xor
jecxz
sarl
pop
push
stc
xchg
add
sbb
idiv
adc
jle
loope
mov
repz
or
lret
mov
xor
insb
ja
fmull
mov
xchg
push
mov
cmc
push
aam
popf
imul
stos
sub
pop
mov
push
sbb
subb
cli
jmp
pop
cmp
ljmp
adc
sub
or
dec
or
cmp
ss
sbb
hlt
notb
jmp
mov
or
adc
sahf
int
ret
outsb
cmovle
mov
lods
and
fistpll
jb
mov
dec
push
push
xchg
xor
add
add
cltd
sti
stc
push
add
dec
inc
roll
inc
insl
xor
mov
outsb
and
imul
jo
lea
xchg
and
sbb
adc
int3
xorl
addl
movsb
hlt
push
pop
inc
xchg
in
int3
push
mov
mov
jl
test
mov
out
mov
in
ss
stos
cmpsb
ja
arpl
xor
push
outsb
rolb
push
lahf
jae
inc
xchg
fcoml
dec
sbb
adc
pop
out
push
fisubrl
inc
mov
decb
mov
adcb
int3
sti
sub
cmpb
jbe
sbb
dec
data16
arpl
fimuls
pop
add
cwtl
cmp
mov
sub
lds
or
movsl
aas
pop
pop
aad
and
lcall
dec
jp
pusha
fimull
push
inc
ret
enter
fsubrs
ret
test
inc
imul
iret
and
arpl
mov
pop
into
and
mov
pop
sbb
in
sub
ror
adc
mov
jp
mov
inc
sbb
rcr
inc
iret
aas
push
pop
gs
in
mov
pop
push
dec
outsl
test
push
enter
ja
push
fiadds
popf
sub
mov
pop
pop
scas
ds
adc
mov
hlt
je
out
xlat
add
daa
test
imul
fwait
rorl
bound
sahf
mov
jge
call
and
cwtl
and
xchg
jne
das
stos
adc
jb
mov
xchg
push
popa
pop
cmp
popa
lahf
out
movsl
sti
xor
icebp
cmp
cmpl
out
ja
outsb
ja
jg
mov
dec
cmp
cmc
call
push
add
pop
push
lods
push
pop
scas
scas
ljmp
sub
or
xchg
cs
xchg
in
push
aaa
or
movsl
and
dec
mov
popf
daa
push
popa
sub
xchg
cld
ds
cmp
or
sub
sub
rorl
and
fwait
loop
enter
test
outsb
jbe
les
jnp
lds
cltd
mov
popa
push
int3
lahf
loop
mov
pop
mov
or
lret
xchg
sbb
jmp
cs
sbbb
adc
mov
ret
xchg
sub
adc
pop
addr16
pop
sub
pop
mov
xor
xor
dec
adc
into
cmp
sub
cli
repz
sub
imul
mov
mov
mulb
aad
xchg
jg
push
scas
cld
cltd
insl
add
jb
fidivrs
lcall
push
pop
push
loope
popa
or
out
mov
cmp
imul
adc
jns
cs
mov
lea
mov
xchg
loope
sbb
fldenv
push
aas
cmpl
add
je
scas
das
pop
loope
sbb
add
loopne
and
mov
push
aaa
sbb
scas
push
mov
add
mov
jmp
lock
ja
and
lret
xor
sub
cmp
ljmp
ss
outsl
xchg
data16
push
jge
iret
jnp
lret
aaa
sbb
mov
loopne
cld
mov
movsl
xor
push
inc
and
cli
push
int
loope
setnp
clc
rcl
in
sbb
jp
push
rcrb
push
test
xchg
adc
mov
or
daa
jo
subb
dec
inc
mov
jb
mov
or
sbb
mov
fisubrs
and
push
sub
mov
call
sub
clc
push
mov
lods
movsb
outsl
scas
sbb
jb
mov
cwtl
mov
fstps
jbe
pop
arpl
lock
mov
mov
mov
or
outsb
daa
jo
jae
mov
xchg
adc
hlt
jno
and
add
test
outsb
cmc
xor
and
fsubl
cltd
test
out
pop
sub
mov
sbb
je
mov
icebp
je
es
in
in
les
mov
sub
pop
dec
push
mov
mov
sub
movsb
out
mov
je
fwait
sub
cltd
inc
ror
xor
insb
xchg
adc
inc
adc
and
pop
push
aam
jge
xchg
dec
push
sbb
jecxz
rcll
xchg
enter
inc
dec
mov
adc
mov
dec
aad
iret
adc
scas
int3
in
mov
dec
mov
inc
dec
incl
pop
shrl
rol
popf
xor
mov
jle
push
inc
les
push
aam
adcl
js
popa
call
iret
lds
dec
xor
xchg
dec
leave
sbb
push
outsb
cli
arpl
cmp
ss
enter
dec
jno
cmp
icebp
mull
push
pop
mov
jmp
dec
and
jecxz
loop
jge
and
loop
push
mov
cmp
imul
outsb
adc
inc
cmpl
mov
ds
pop
pushf
fs
sbb
nop
aam
insl
cli
push
jmp
jmp
pop
push
test
pop
imul
mov
fildll
mov
and
mull
loopne,pn
hlt
rcrb
bound
xlat
jne
cmpsb
mov
mov
ss
int
cmpb
mov
movsb
mov
xchg
pop
pop
and
aas
xchg
cli
sbb
std
icebp
push
cmp
dec
mov
sub
fisubrs
imul
cs
mov
xor
mov
push
mov
popf
inc
mov
sbb
je
pusha
push
fcoms
mov
movsl
movsb
mov
shll
aam
movsl
and
ljmp
insl
xor
jecxz
lock
add
fsubp
sbb
int3
xchg
dec
sbb
sub
scas
and
sbb
jns
add
mov
cltd
test
fldl
mov
and
negl
int3
cmp
push
sbb
pop
pop
lds
testb
xlat
jle
or
mov
imul
ja
or
jns
xlat
mov
loope
adc
jae
mov
leave
push
ret
fisttps
int
shll
fsubrs
popf
lods
cmp
jl
pop
or
mov
inc
push
push
and
and
cmp
movsl
add
sar
cmc
mov
mov
ss
sub
sub
out
and
pop
and
popf
push
ret
and
xchg
mov
mov
push
xor
cmpsb
cli
outsb
ret
bound
mov
or
dec
push
or
cmp
push
xor
adc
bound
nop
es
leave
ljmp
and
adc
loop
dec
loope
dec
add
adc
in
push
pop
dec
adc
adcl
sub
push
mov
jnp
test
sbbb
jle,pn
jp
psrld
rclb
adc
int3
sbb
sub
cmp
frstor
and
add
cli
mov
fidivs
fstps
push
jecxz
or
arpl
mov
add
outsb
pop
outsb
cmp
xchg
ret
repz
inc
js
clc
jo
inc
fisubs
mov
stos
cld
movsb
movsl
mov
adc
insb
out
push
xchg
jb
mov
sub
es
repz
pop
adc
test
and
ja
sub
push
call
das
push
push
cltd
mov
inc
dec
or
and
jnp
inc
insl
jmp
xchg
adc
pop
and
and
loope
shrl
add
inc
stos
shlb
out
mov
aaa
xor
gs
sbb
arpl
xor
mov
cld
xor
inc
sub
sbb
aas
fistpll
mov
and
or
inc
jnp
in
les
pop
aad
xlat
subl
js
les
mov
xchg
cmc
int3
push
jne
cmpl
push
adc
mov
int
std
adc
cld
popf
pop
outsl
popf
dec
lods
mov
mov
lcall
inc
mov
sarl
in
out
pop
sbb
mov
arpl
jne
inc
mov
dec
mov
xor
clc
inc
pushf
repnz
mov
repz
lahf
movsl
xchg
je
mov
dec
xchg
or
leave
cmp
insb
bound
xor
inc
dec
bound
jmp
and
sub
jne
mov
dec
dec
js
pop
sub
or
cmp
mov
fdivl
cmc
sub
fs
ds
ret
inc
out
cltd
pop
imul
jno
xor
mov
inc
mov
js
mov
std
popf
sub
jne
jg
inc
mov
addr16
jge
push
add
jne
in
jne
inc
cs
fwait
lea
jge
xchg
pop
insb
fisubl
jnp
push
xchg
jno
mov
ss
insl
mov
mov
mov
test
vunpckhps
inc
test
lret
mov
mov
mov
sti
sub
mov
sbb
daa
sbb
lcall
call
pop
into
inc
mov
xchg
jle
lods
mov
push
mov
test
mov
jo
aas
cmpb
jae
sub
popa
sub
jo
push
jo
jl
cmp
mov
jmp
aaa
pusha
sub
fisubs
cli
adc
popf
sbb
mov
or
lret
mov
pop
out
jl
pop
mov
sbb
je
test
jle
imul
pop
sahf
enter
dec
in
dec
cmc
dec
out
jno
push
enter
lret
ja
outsl
iret
insb
sub
sahf
dec
and
and
xchg
mov
xor
push
rol
outsl
jo
pusha
jle
push
pop
mov
inc
leave
inc
mov
sub
test
test
push
decl
aaa
in
in
dec
fnstenv
stc
rol
cmp
adc
jle
popa
push
pop
inc
and
outsb
xor
inc
push
inc
dec
dec
lds
and
fcomps
leave
lahf
pushl
xchg
aam
lods
pop
jg
fs
push
shlb
mov
jo
popa
adcl
add
mov
push
js
bound
jge
jle
out
jns
jg
push
je
hlt
popa
int
outsb
movsb
test
ret
inc
or
and
and
push
mov
jl
outsb
mov
aad
push
insb
out
mov
inc
in
sahf
inc
mul
fadds
mov
xchg
inc
pop
sbb
repnz
imul
xchg
pop
mov
add
pop
mov
xchg
loope
shll
inc
mov
ds
mov
test
roll
mov
mov
inc
insl
mov
push
mov
fnsave
call
mov
icebp
sbb
adc
pusha
movsl
jp
js
pop
mov
shrl
jnp
mov
fucom
push
enter
pusha
dec
inc
fistps
mov
adc
into
dec
cltd
push
dec
mov
dec
push
dec
jae
testb
into
sbb
mov
int3
dec
testl
fsub
push
lods
lods
lret
mov
mov
arpl
xlat
dec
jg
jnp
cmp
inc
nop
sbb
mov
fstpt
xor
fdivl
mov
fnstenv
mov
mov
mov
push
sub
pop
inc
mov
jle
rclb
mov
fstpt
dec
lock
aam
adc
rcl
addr16
icebp
mov
hlt
xchg
xchg
fmulp
cmp
add
jo
jecxz
movntps
inc
or
sub
inc
push
aam
mov
cmp
scas
push
mov
push
or
mov
andl
xchg
fimull
adc
or
add
idivl
cmp
std
dec
mov
push
das
inc
jns
aas
inc
pusha
mov
dec
push
xlat
jle
scas
les
xor
push
jno
fs
inc
xchg
and
xchg
mov
pop
popf
outsl
rorl
into
inc
mov
push
or
shl
jo
and
lcall
cmc
mov
jo
shll
or
inc
jge
ret
subb
jl
ja
cmp
fwait
and
sub
mov
imul
bound
fs
sub
xor
inc
mov
adc
push
mov
ret
fistpl
rol
sub
pop
jg
mov
imul
ss
sub
js
lret
mov
add
xchg
and
sub
movsb
in
xchg
enter
mov
int3
test
dec
mov
arpl
jae
or
repnz
dec
enter
es
mov
jle
push
xor
je
icebp
lahf
xchg
jg
ret
js
lea
inc
cmpb
lods
inc
mov
cmpsb
pop
into
fdivrl
inc
shlb
lea
mov
mov
loop
cmp
loope
pop
mov
jg
cwtl
lret
inc
idivb
mov
dec
shrl
cs
mov
inc
add
mov
out
push
pushf
fidivl
and
jb
popf
scas
xchg
cs
mov
xlat
push
cwtl
test
insb
popf
incb
test
es
aaa
sarl
int3
jnp
test
cmp
cs
mov
addr16
jle
dec
sub
dec
and
xchg
mov
inc
addb
jno
xchg
jno
adc
inc
dec
jl
jg
xchg
addr16
ret
fidivs
daa
fnstenv
sub
push
int3
jle
push
push
int3
or
sub
inc
inc
pop
movsl
int
adc
into
scas
pop
inc
sbb
sub
out
call
fiaddl
xor
push
fwait
jne
dec
sbb
into
mov
inc
pop
adc
sub
inc
mov
sub
gs
inc
scas
and
gs
jae
dec
mov
outsl
lods
jmp
push
xor
loopne
push
lret
cli
pop
shl
into
mov
std
pop
xor
mov
repz
shll
sarl
inc
mov
jg
push
mov
in
rcl
int3
cmpsb
sub
lea
fnstsw
in
sbb
adc
mov
aam
out
cli
jo
lods
pop
xchg
jb
dec
add
ficoms
pop
stc
enter
lods
mov
scas
mov
cmc
xchg
addr16
dec
xor
add
jge
dec
loopne
ret
rclb
int
cmc
lds
inc
push
rolb
in
std
popa
mov
leave
add
inc
mov
mov
les
lea
jb
roll
mov
rcl
sub
filds
push
imull
cmpsb
jae
leave
flds
push
dec
fstl
dec
mov
clc
adc
shrb
push
cld
add
mov
dec
scas
inc
inc
inc
adc
or
mov
jp
imul
fs
pop
push
and
inc
sub
pop
sub
inc
mov
push
imul
mov
inc
sti
pop
and
les
or
add
and
cltd
jl
xchg
sub
dec
aam
test
daa
jmp
xchg
jmp
mov
insl
jle
mov
outsb
fdivs
mov
lahf
inc
mov
mov
adc
scas
add
iret
jl
xchg
ljmp
jae
mov
xchg
into
push
jp
cmc
jns
jg
clc
mov
jle
jbe
and
mov
scas
ret
jl
repnz
inc
in
cld
incl
push
dec
je
iret
inc
int
mov
and
jb
in
pushf
pop
mov
sahf
jnp
or
dec
mov
mov
inc
in
es
jle
jae
int
mov
into
insl
test
push
sbb
cmp
fstl
addr16
stos
xor
dec
mov
dec
loope
mov
pop
into
inc
adc
inc
mov
xchg
mov
push
push
and
push
dec
and
jae
outsb
or
in
adc
cmp
jns
and
movsb
jb
inc
scas
shlb
inc
out
add
adc
fcmovu
mov
sahf
mov
addr16
xchg
inc
out
fiadds
cmc
fldl
xor
repz
mov
pusha
add
gs
inc
lahf
test
mov
fs
cs
sbb
scas
inc
lds
push
jl
mov
and
pop
and
sub
mov
jl
push
xor
xchg
loop
push
jo
sub
jg
dec
fistps
enter
cld
rorl
lods
adc
subb
rclb
ja
push
jl
imul
ljmp
das
adc
arpl
sarl
and
cmp
imul
aas
push
lods
add
loope
mov
imul
inc
fwait
outsb
std
xchg
and
out
cmpsb
rolb
test
adc
mov
pop
cltd
lcall
in
xchg
pop
and
or
jge
push
or
lahf
dec
adc
push
lds
jae
cmp
sub
cltd
rcrb
je
mov
jb
mov
insl
or
sahf
push
scas
jae
pop
push
lretw
addr16
cli
jb
mov
and
dec
mov
jp
in
inc
mov
cli
or
push
int
mov
jae
in
rcrl
je
into
pop
rcrl
nop
mov
jle
mov
fidivrl
push
pusha
lcall
fnsave
xor
or
mov
rolw
cltd
sbb
pushf
in
pop
incb
jo
mov
in
inc
push
jb
inc
out
fwait
mov
jp
push
jge
into
mov
loopne
add
push
adc
mov
ror
sub
scas
mov
xchg
pusha
aad
mov
or
inc
sub
lret
sbb
dec
xor
jns
jle
push
adcl
push
mov
mov
push
lahf
adc
dec
sub
mov
jne
mov
add
push
insb
fmuls
cmp
jno
into
shll
inc
clc
cltd
test
push
cmpsb
xor
rcll
xor
mov
enter
xor
je
xchg
pop
mov
jle
mov
adc
pop
push
add
les
nop
outsl
lret
xchg
aam
push
lret
shrl
adc
leave
js
repnz
aad
mov
lods
subb
or
jle
popf
mov
loop
cld
in
push
adc
jnp
pusha
test
dec
xor
dec
gs
inc
mov
lret
out
mov
sbb
loop
adc
nop
add
dec
jmp
jno
mov
and
into
adc
cmp
and
addr16
rclb
xor
mov
fidivrl
add
add
ret
or
jg
cbtw
push
xor
cmpsl
sub
dec
mov
pop
add
add
lods
add
xor
fisttpl
push
das
inc
mov
mov
inc
mov
push
data16
lds
testl
ret
out
adc
loopne
pop
adc
pop
mov
dec
jl
fwait
inc
push
int
mov
pop
add
mov
jbe
mov
orb
inc
push
pop
pop
push
sbb
jne
inc
sub
cmpl
dec
mov
push
xor
dec
out
inc
fidivl
pop
jmp
adc
mov
inc
stos
cwtl
pop
mov
pusha
and
jne
in
xchg
fmull
inc
jo
inc
jecxz
daa
faddl
inc
sub
pop
fiadds
cmpsb
push
scas
cmpsb
mov
mov
dec
inc
mov
sub
and
mov
or
fistpll
sahf
dec
addb
or
les
mov
inc
negl
jge
push
mov
hlt
dec
fcompl
push
push
pop
sub
adc
add
mov
push
popa
jl
sub
icebp
icebp
sub
aas
sahf
jb
mov
sbb
dec
inc
ja
cmp
sub
data16
pcmpgtd
nop
fwait
mov
pop
in
add
insb
clc
add
fcoms
xor
dec
cmp
xchg
dec
push
xor
sbb
and
test
push
scas
xchg
jle
mov
daa
int
test
ljmp
lods
ret
roll
and
lods
and
movsb
test
loope
in
rolb
mov
mov
cli
inc
mov
fdivr
or
push
add
in
and
xchg
bound
xor
rol
bound
cmp
inc
sub
popa
inc
add
pushf
sbb
data16
aas
subl
adc
jmp
adc
ret
mov
push
int3
fs
decb
jp
outsb
out
int
cmpb
jl
roll
jmp
push
mov
inc
adc
mov
inc
xchg
daa
jno
sti
inc
jle
frstor
or
cmpsl
jg
sbb
dec
jge
test
push
je
adc
movsb
mov
jge
jo
dec
std
dec
cmp
adc
dec
jne
push
ja
iret
mov
add
das
mov
inc
add
cmp
push
aam
sarl
mov
mov
xchg
jl
push
mov
push
and
ret
mov
icebp
pusha
xor
out
into
in
inc
jbe
mov
dec
xor
add
or
shrl
movsb
mov
cmp
bound
gs
nop
iret
inc
fistps
dec
lret
pusha
ret
ret
sbb
outsb
add
jg
jp
repnz
je
pop
movsb
jbe
pop
mov
aad
cmp
inc
clc
inc
mov
add
mov
movsl
les
arpl
xchg
rcll
dec
xchg
notl
and
stos
xor
or
jl
dec
sub
lods
in
jbe
dec
cmp
aad
jp
xor
fsubrs
rclb
sub
imul
cmpsb
sahf
test
ja
sub
adc
aaa
stc
mov
add
adc
loopne
repnz
cwtl
mov
lock
in
mov
ja
sti
int
movsl
sub
stos
dec
addr16
mov
fcmovne
testb
jle
adc
lods
cmp
mov
push
mov
pop
movsl
repz
movsb
jmp
test
gs
pop
fcomp
mov
mov
mov
mov
dec
ficompl
dec
jge,pt
and
rcrl
rorl
rolb
iret
inc
in
push
cld
les
clc
sub
int
mov
jle
mov
shl
or
inc
lds
push
mov
test
imul
jno
jecxz
mov
addr16
adc
jno
pop
cld
xor
push
stc
icebp
imul
mov
cmpsl
inc
adc
jnp
cmp
mov
or
repnz
out
lret
ds
push
shll
hlt
fcomps
idiv
mov
mov
jne
nop
and
pushf
clc
xor
jl
and
mov
aaa
jb
mov
mov
cmp
add
and
mov
scas
mov
jl
ret
dec
sub
in
xor
push
ficoms
mov
push
dec
fs
repnz
jp
push
push
mov
add
inc
sbb
mulb
mov
rclb
inc
cmc
pop
mov
xor
daa
fiaddl
xchg
or
subl
add
jns
fwait
insb
imul
sub
dec
jg
int
subb
inc
jmp
sub
mov
out
xor
and
inc
loope
sbb
push
incb
and
pop
jg
dec
push
or
mov
jmp
push
stc
imul
fadd
movsb
mov
mov
btcl
loope
insb
dec
ja
outsl
leave
sahf
inc
int3
jle
mov
jge
sbb
mov
sub
aad
or
aam
and
mov
pop
arpl
xchg
movsl
xchg
test
ret
cmp
insb
mov
aad
fbstp
pushf
fistl
jle
xchg
push
lods
xchg
addr16
pop
pop
or
jns
js
adc
lea
daa
cwtl
mov
gs
sbb
fwait
inc
mov
rcrb
pop
je
adc
jp
jb
inc
pop
cli
icebp
test
jmp
push
pop
jg
pop
inc
sbb
lods
ja
xor
lock
add
jmp
inc
mov
roll
fadds
or
inc
mov
ficoms
je
leave
je
loopne
sbb
push
lock
cs
mov
daa
les
push
popa
setae
cs
mov
ret
dec
lret
jl
mov
xor
aad
inc
sar
dec
js
cmpsl
cmp
add
es
sub
outsb
inc
les
stos
negb
shrl
inc
mov
jmp
sbb
inc
sub
lcall
push
in
push
in
pop
fsubrs
sbb
popa
loop
daa
lods
pop
jno
aam
inc
or
dec
mov
ret
xor
mov
jg
lret
add
movsb
mov
loope
in
jl
icebp
arpl
adc
mov
mov
repz
lods
pop
in
lahf
stos
popa
mov
or
xchg
in
push
mov
scas
cmpsl
push
lds
aam
pop
in
add
jo
and
push
out
dec
fcoml
cmpsl
sub
ss
mov
scas
lea
mov
pop
add
sahf
jg
sbb
jae
lret
es
subl
mov
mov
dec
imul
imul
add
jg
xlat
pop
ds
add
jns
pop
and
cmpsl
pop
sub
jl
jmp
inc
call
in
lock
xchg
mov
ljmp
and
dec
les
in
bound
mov
mov
pop
adc
lods
inc
pushf
scas
sbb
cltd
out
dec
fistpll
jo
push
mov
cwtl
cmc
sahf
push
mov
ljmp
mov
fdivp
sahf
jg
add
or
ljmp
std
mov
test
out
xor
cmp
inc
adc
sbb
aas
dec
push
jg
add
mov
xor
dec
repnz
arpl
add
les
xchg
pop
bound
jge
fidivrs
sbb
in
mov
adc
and
gs
in
mov
cmpsb
insb
mov
push
xor
js
lahf
jl
fcom
sub
movsl
and
mov
ljmp
aas
xor
mov
sbb
cmp
jo
pusha
or
mov
in
stos
inc
xor
mov
jo
or
fiadds
mov
scas
inc
fiaddl
lods
xor
wbinvd
or
negb
pop
inc
push
insb
out
xor
popa
insl
sub
or
sub
inc
cmpl
dec
es
icebp
jge
into
loope
pop
mov
data16
ja
pop
push
icebp
add
iret
ret
add
jmp
hlt
xchg
inc
adc
ffreep
mulb
pop
inc
cmp
mov
pop
and
and
add
pop
jae
and
jb
adc
xchg
inc
ja
insb
jbe
dec
and
and
add
rcll
mov
xchg
pushf
push
es
enter
mov
or
sub
mov
inc
xor
ljmp
push
fsubs
icebp
mov
and
fidivl
cli
fimull
dec
fsubs
push
and
dec
mov
repnz
mov
mov
jnp
outsl
jecxz
lret
daa
js
pop
filds
lahf
dec
jp
sbbl
jle
dec
sti
xor
mov
insl
outsl
sub
fimull
mov
mov
stos
dec
cmp
mov
das
call
lcall
and
sbb
xchg
push
enter
push
dec
enter
enter
popa
aaa
or
dec
pop
mov
push
xor
mov
es
fsubl
add
mov
inc
out
pop
mov
add
cwtl
inc
cli
mov
mov
das
les
fs
ret
xchg
push
sarb
out
adc
ja
xchg
fs
repnz
add
vandnps
lock
mov
lcall
bound
sbb
sahf
cltd
arpl
xchg
lea
test
sub
sub
ret
or
stos
shl
shrl
or
adc
dec
movsl
mov
pop
shlb
push
div
xor
sub
dec
and
mov
ss
les
fcoms
mov
push
sahf
cmp
jne
mov
mov
mov
cmp
or
mov
push
sub
test
push
scas
imul
adc
push
inc
hlt
pop
adc
rclb
sbb
add
jno
and
insl
mov
imul
pop
es
into
lret
and
das
cmp
in
mov
inc
push
pop
cld
into
mov
sub
mov
jp
sbb
test
aad
out
scas
push
mov
roll
enter
in
inc
les
sub
call
pop
jmp
out
dec
add
in
xchg
xor
lcall
push
or
rclb
popf
and
addr16
ret
stos
mov
xor
cmc
int
adc
xchg
push
fadds
mov
hlt
mov
pop
lret
jns
fs
icebp
cld
add
ds
jno
test
jnp
or
scas
pop
or
push
pop
fisttpll
xchg
and
push
xchg
pop
add
pop
call
loop
fidivl
or
icebp
xor
cmc
popf
enter
push
dec
icebp
jno
xchg
loop
in
pop
mov
mov
push
flds
lcall
mov
dec
hlt
push
lods
ss
and
mov
loopne
pop
int
lods
je
xlat
push
xchg
add
jl
ljmp
cli
sub
pop
and
inc
push
inc
xchg
into
jmp
aad
cs
gs
outsl
xchg
mov
insl
sbb
pusha
nop
popa
push
adc
dec
fisubl
mov
shrb
fdivl
loope
pop
adc
mov
mov
mov
shl
mov
nop
scas
adc
jmp
pusha
pop
adc
inc
push
mov
adc
fldenv
sub
js
je
andl
xor
jne
pop
xchg
je
movsl
fwait
jne
int
gs
lods
xchg
add
push
sub
cmc
iret
jno
jae
jae
cltd
stos
push
dec
dec
lcall
mov
push
aad
imul
push
or
mov
sub
mov
pop
mov
ja
je
lret
sarl
xor
mov
in
movsb
xchg
ds
popa
out
cwtl
and
mov
out
fldenv
daa
int
adc
daa
sub
or
dec
pop
popf
dec
lods
dec
les
outsb
out
lret
lcall
cwtl
test
or
adc
inc
push
or
adcl
dec
sbb
sub
jns
dec
fdivp
pushf
xor
pushf
mov
adc
xchg
and
in
les
cmp
adc
mov
aas
cmc
repnz
adc
ja
adc
adc
jno
xchg
push
rorb
mov
repnz
jne
jo
sub
popf
repz
jp
enter
clc
out
or
jl
aam
loope
jmp
std
lret
stos
test
sbb
mov
mov
adc
in
ja
cli
mov
mov
mov
cmp
fisttpll
pop
clc
iret
arpl
fwait
cmp
and
mov
ret
fwait
push
inc
mov
pop
fidivl
xorb
hlt
push
aaa
xchg
add
adc
fwait
cwtl
lock
cmp
sbb
xchg
dec
mov
inc
pushf
addr16
pusha
aaa
hlt
push
inc
fdivrs
lret
xor
cltd
out
in
orl
testb
iret
add
imul
in
jmp
sub
jb
xor
mov
pop
xchg
dec
popf
mov
cmp
aad
js
mov
cwtl
mov
push
in
pushf
rorl
lods
nop
aam
xor
dec
jne
cli
dec
sbb
mov
dec
aas
lods
je
cs
xchg
cmp
sub
or
inc
mov
test
sbb
jg
cmp
lret
push
mov
mov
loop
lods
ret
sub
cmp
fstl
xchg
aas
and
pop
stos
or
pmuludq
enter
adcl
fcmove
mov
imul
sub
pop
fs
filds
dec
outsb
fcompl
dec
sti
repz
mul
cld
adc
xor
ja
sub
sahf
das
shlb
jae
cmp
add
rorl
insl
sub
imul
js
pop
or
inc
sbb
shlb
pop
lret
and
lds
mov
aas
mov
xor
sub
add
dec
lcall
daa
pop
outsb
mov
arpl
xchg
enter
les
cld
or
cvttps2pi
xor
mov
mov
lcall
std
imul
es
and
add
leave
lods
sub
xchg
out
inc
rorb
xor
mov
cmp
imul
inc
cmp
lahf
insb
jb
mov
cmp
imul
pusha
mov
push
and
mov
mov
jge
push
int3
in
adc
xchg
jmp
jne
mov
dec
inc
jl
fcompl
shrb
adc
mov
lea
jbe
aad
inc
pop
add
mov
ljmp
fiadds
clc
pushw
lods
cwtl
out
stos
out
cltd
and
mov
jge
popa
xchg
pop
loopne
out
mov
js
in
pushf
cld
fnstsw
test
and
cli
cltd
sub
std
adc
add
call
cmp
mov
cmp
xor
fsubp
and
mov
fmulp
lea
ss
dec
leave
data16
pop
rorb
inc
testl
cmp
or
mov
les
and
out
repnz
ror
xchg
mov
dec
clc
arpl
cltd
loopne
mov
iret
in
ficoms
sahf
les
push
mov
mov
push
pop
lret
rcll
cld
sbb
pop
xor
test
xchg
out
push
push
xchg
sti
fistps
cmc
mov
sbb
jae
movsl
lods
pop
inc
ret
sub
shrl
mov
mov
out
pop
push
cmp
push
enter
lret
sbb
mov
mov
and
mov
das
cli
bound
je
imul
mov
clc
icebp
inc
lahf
sti
popf
jle
add
and
clc
or
bound
jp
ja
into
cmpsl
scas
movsb
jae
mov
lods
inc
lds
fcoms
movsb
rcrb
test
and
mov
sub
mov
xor
imul
lret
loopne
incl
sub
shrl
jne
aam
imul
int
repnz
aam
outsb
sbb
scas
inc
push
int
jg
pop
or
push
jmp
push
jae
adc
std
adc
cmpsl
cmp
stos
jge
in
jo
push
cmpsl
push
push
test
jmp
adc
sarb
insl
mov
cld
push
adc
sbb
mov
push
sub
icebp
push
pusha
movsl
jp
xchg
ja
scas
jg
daa
es
pop
dec
fs
imul
pop
adc
mov
clc
jno
data16
xchg
stc
insl
xchg
out
dec
push
mov
lods
int
movsl
xor
dec
jae
loopne
in
cwtl
xchg
sub
insb
push
inc
imul
fdivrl
push
fisttpll
test
std
push
xchg
jl
mov
mov
pop
push
int
loopne
insb
xchg
or
fwait
pop
and
into
sbb
mov
sub
mov
mov
push
push
sbb
ljmp
movsb
xchg
jae
xchg
xor
push
push
icebp
xchg
lcall
jle
ret
lret
icebp
mov
and
lret
arpl
in
sbb
add
outsl
movsl
jg
test
je
les
adc
cltd
sti
inc
stc
int
cmp
sub
xchg
adc
sub
cmp
push
push
and
push
aas
rclb
push
push
mov
ss
mov
lea
or
adc
xchg
aaa
je
lahf
leave
std
fldcw
mov
lahf
cmp
inc
mov
xchg
xor
cli
cs
aad
iret
cltd
mov
sub
xor
add
mov
shr
mov
dec
cltd
cmp
push
inc
add
fisubrl
test
fildll
sbb
dec
std
jmp
loopne
cwtl
enter
xor
push
insb
test
iret
add
adc
pop
pop
cmp
int3
bsf
mov
push
aad
or
test
push
mov
repnz
je
repz
jge
xor
jns
mov
and
xchg
pop
iret
pushf
cs
cld
pushf
enter
adcb
pushf
ret
fwait
fwait
cli
mov
and
ja
mov
push
int
cmpsb
jbe
jae
movsl
push
lcall
cld
test
rorl
sti
mov
sbb
subl
repz
jp
mov
cltd
inc
ss
insl
incb
mov
jb
sahf
jne
pushf
sarl
push
mov
jb
loope
sbbb
hlt
jno
insb
xchg
dec
sub
outsb
pop
inc
test
dec
pushf
iret
repnz
mov
pop
movsl
cmp
xchg
lock
mov
pushf
loop
les
inc
imul
es
lahf
xchg
inc
rolb
dec
inc
xor
push
addr16
and
out
pop
in
pop
sbb
ljmp
and
stos
nop
shl
jns
es
sub
ret
fcoml
xchg
lahf
dec
loop
fdivs
or
dec
pop
push
or
popf
daa
scas
and
pusha
lds
or
push
lds
push
fildl
jae
mov
push
mov
mov
xor
dec
mov
aas
fisttps
push
sub
xor
cmp
shll
push
adc
sbb
ss
xchg
sbb
mov
rcrb
push
mov
insb
inc
and
fwait
add
add
xlat
push
adc
push
scas
jecxz
xlat
inc
mov
mov
and
adc
pop
xchg
pop
imul
jbe
mov
sbb
jg
jle
xchg
ret
pop
cld
jp
aad
inc
mov
cmp
mov
data16
jo
jl
outsb
loopne
into
jae
aam
gs
mov
jno
sbb
fisubrs
fbld
jns
pushf
stos
xor
pop
push
lcall
outsl
nop
ds
bound
les
fcomps
push
dec
loopne
repz
xchg
sbb
jnp
pop
mov
sbb
jmp
insb
and
pop
inc
xchg
push
icebp
daa
jmp
jbe,pn
lds
insb
inc
push
pop
cld
faddl
inc
push
stc
pushf
cmp
insl
aas
addr16
mov
inc
sahf
xor
ret
test
add
lcall
ds
fs
push
roll
pop
cmp
jmp
shlb
les
out
addl
adcl
loopne
dec
sahf
cmp
lods
xchg
aaa
fistps
ret
mov
test
ljmp
dec
dec
fcomi
push
sub
pop
sub
in
movb
fisttpl
sub
mov
xchg
in
mov
push
push
sbb
jnp
sbb
dec
je
aad
push
sahf
pop
mov
repnz
jne
lret
push
cmpsb
out
and
sub
push
jae
scas
xchg
les
out
movsl
loop
aaa
push
arpl
cmovp
add
xchg
cmp
inc
lods
jbe
add
mov
jno
call
ds
mov
lcall
mov
push
jle
lret
in
jle
jg
jp
ds
sbb
out
loopne
sbb
in
cwtl
adcl
into
pop
in
jge
loopne
xchg
mov
dec
xchg
mov
sub
xchg
movsb
rolb
cmp
cltd
jg
sub
push
mov
imul
and
or
outsl
xchg
xchg
mov
jmp
mov
data16
push
das
in
leave
sti
fisubrs
push
jmp
aas
add
add
mov
jl
negl
mov
push
xchg
enter
loope
rdtsc
jb
inc
ss
cmp
jnp
push
jmp
pop
jmp
xchg
pop
int3
leave
lret
cltd
aaa
sti
mov
gs
jecxz
lock
xchg
jmp
mov
mov
pusha
push
idiv
push
inc
jno
or
push
aam
mov
fsubs
arpl
int
jbe
and
in
mov
repz
rcrl
arpl
xor
push
addr16
pop
lods
mov
cli
pop
push
jge
aas
cmp
and
fwait
cwtl
inc
shl
sub
cmp
push
gs
mov
outsl
and
xchg
hlt
cmpsl
popa
mov
lea
mov
pop
stos
loope
add
dec
cmp
fidivs
lret
or
mov
lock
lods
lea
mov
push
rcl
dec
jae
jbe
jle
stc
jnp
xor
xchg
lret
cmp
dec
aaa
xchg
mov
pop
lods
mov
push
adcb
push
nop
cmp
cmp
outsb
inc
add
inc
pusha
in
jbe
aad
std
xor
out
ret
cmc
ja
mov
test
push
pop
jns
push
mov
or
cld
std
arpl
fwait
jns
xor
ret
faddl
ljmp
or
jno
fsubs
mov
adc
inc
add
add
out
sahf
ffreep
std
xor
mov
sub
jle
pop
dec
sbb
pop
cs
test
push
int
int3
cs
xchg
jecxz
push
jle,pn
dec
int
enter
inc
sub
sahf
sub
pop
and
mov
or
enter
sub
dec
stc
mov
and
imul
pop
lret
mov
mov
jmp
mov
jns
pusha
divb
je
movsl
jne
pusha
inc
popf
mov
mov
pop
sub
mov
jle
lds
aad
nop
pop
jns
ljmp
xorb
rcrl
fldcw
push
rcr
lods
sahf
loopne
xor
pop
cmp
sahf
or
paddsw
adc
or
out
jge
push
xor
int3
jae
jae
icebp
mov
pushf
pop
add
jg
hlt
xor
xor
jno
cli
repnz
mov
cmp
inc
cmp
fcmovnbe
mov
jp
in
dec
dec
and
xor
into
push
ja
xchg
pop
sbb
int
mov
test
das
fwait
xchg
scas
outsb
push
mov
or
jle
push
mov
mov
scas
fmuls
jbe
iret
xchg
xor
out
cmp
call
ud0
push
pop
jmp
movsl
mov
mov
sahf
jle
pop
mov
popf
pop
nop
xchg
mov
ror
lcall
shrl
pop
sti
push
adc
lock
or
lahf
cmp
mov
push
sti
inc
lahf
out
insb
icebp
shll
scas
bnd
int
mov
or
inc
loopne
lret
mov
shlb
pop
mulb
xchg
push
and
nop
sub
push
adc
add
cld
pop
push
repnz
adc
sbb
stos
scas
or
leave
mov
mov
daa
fstpt
ret
jo
xchg
xor
ds
adc
in
or
pusha
out
pusha
or
jp
iret
scas
mov
popf
sub
fwait
lret
loopne
mov
or
sbb
inc
in
adc
jl
xor
xchg
mov
aam
mov
xchg
out
inc
and
mov
cmp
sub
aaa
pop
fcompl
cltd
inc
xor
mov
xchg
mov
push
shlb
xchg
push
sub
jae
nop
cltd
std
cmpsl
fcompl
inc
push
loopne
filds
cltd
sbb
lods
stc
sub
fadds
inc
inc
sbb
int
into
mov
imul
pop
push
lods
push
inc
ja
aaa
fstpl
into
andb
adc
jae
daa
lds
push
cmpsb
mov
xchg
cs
or
xor
and
lcall
dec
xchg
fnstsw
js
sub
mov
adc
xlat
mov
sub
enter
hlt
lret
adc
mov
int
addb
cmp
in
dec
jbe
cs
push
movsb
push
dec
inc
out
inc
cmp
inc
jmp
dec
in
pop
out
xchg
adc
incl
pop
mov
int
addl
adc
mov
pop
sar
push
aad
jg
cld
xchg
mov
ds
outsb
cmc
sub
fisttpll
push
and
push
cltd
and
push
mov
or
std
lock
inc
xor
dec
sti
xchg
fisubrl
xchg
jns
inc
sahf
mov
sahf
xchg
les
xor
iret
ficoms
sbb
jmp
cmp
mov
cld
loope
arpl
loop
cmp
inc
ret
sarl
mov
sub
inc
cmp
movsl
aas
sub
cmp
push
scas
inc
push
xchg
push
jmp
fs
xor
inc
outsb
sub
inc
imull
lcall
jg
inc
push
xchg
cmpsl
inc
stos
push
pop
inc
jnp
movsb
mov
pop
rorl
data16
adc
mov
mov
push
or
divb
pushf
fcompl
push
int3
shld
inc
sti
cli
mov
out
mov
out
aad
inc
dec
call
fucom
shlb
fxch
movsb
mov
std
mov
pop
pop
ljmp
push
inc
cmpsb
lahf
push
xor
or
mov
leave
movsl
or
add
rorl
cmpsb
and
fsts
cli
xor
enter
shr
and
jns
push
or
push
aam
pop
inc
iret
dec
and
pop
push
bound
push
adc
xor
and
push
fldcw
bound
loop
mov
or
mov
mov
adc
mov
inc
test
imul
sub
sbb
popf
iret
mov
fnstcw
cmp
imul
xchg
sbb
loope
jo
call
add
cmp
jmp
andb
imul
push
insl
push
mov
xchg
dec
test
sbb
icebp
shrl
adc
inc
jno
pop
and
lods
mov
enter
mov
insl
push
or
outsl
xchg
out
lcall
cli
sarb
loop
push
pushf
xchg
sub
lea
bound
insl
and
cltd
inc
sbb
mov
test
das
enter
in
push
pop
xor
jnp
sbb
mov
jb
dec
in
inc
adc
mov
cmpsb
insb
rcll
jo
adc
push
or
inc
sahf
pop
xlat
mov
sub
cmp
cmp
mov
daa
jmp
fwait
mov
sti
movsl
sub
mov
sub
insl
sub
push
push
fstl
jle
mov
mov
movl
pop
xor
lock
cs
mov
xor
cmp
sub
jge
add
scas
dec
negl
mov
or
push
dec
cli
test
arpl
fnstenv
jo
or
call
ds
jns
push
jmp
rol
out
mov
lea
in
fimull
stos
ds
aam
mov
adc
jnp
pop
sbb
ja
aam
jne
mov
inc
scas
addl
pop
dec
scas
int3
es
dec
xor
popa
aas
and
sbb
data16
mov
out
jge
jb
xchg
dec
leave
stos
lock
mov
mov
rcrb
xchg
outsb
rcrb
ss
lcall
popa
andl
xchg
jle
lea
jp
mov
pop
call
orb
arpl
lret
stc
into
xchg
mov
dec
enter
jno
push
scas
pop
aad
and
inc
sub
loop
outsl
out
addb
cmp
mull
mov
fwait
and
cmc
sub
mov
clc
push
rol
inc
pop
out
push
fldenv
push
xor
dec
or
pop
pop
ret
outsb
cmp
in
or
pop
data16
cli
test
jp
xchg
lods
scas
mov
sbb
lret
jge
ljmp
es
stos
jb
movsl
cmp
mov
cmpsb
pop
and
mov
insb
lea
pop
stc
jmp
enter
iret
lcall
sbb
arpl
test
push
pop
dec
nop
mov
and
adc
adc
mov
lock
mov
sbb
shrb
jno
jge
jo
add
andl
or
popf
dec
lock
fldenv
jg
and
sub
outsl
outsl
ret
xchg
and
xor
cmp
rcl
insl
js
les
je
and
stos
mov
adc
bound
aam
clc
sti
xor
and
xchg
jg
jmp
fmul
sbbl
jo
push
mov
adc
pop
or
inc
mov
mov
rcll
hlt
and
mov
ret
cmpsl
and
adc
adc
ror
adc
stc
iret
mov
mov
or
mov
fiaddl
loopne
sub
mov
cmp
pop
insb
xor
dec
fsubrl
mov
push
jg
push
fstpl
gs
lods
hlt
lea
lock
in
lods
jecxz
repz
sub
popf
jns
jne
and
pop
nop
push
cld
sti
jo
negb
jne
and
adc
or
gs
fisttpl
ret
insl
mov
cmp
cmp
cli
test
jmp
jnp
adc
dec
mov
push
sbb
mov
divl
adc
mov
jb
xchg
stc
cmpsb
ja
mov
imul
jl
es
mov
xor
push
std
pop
fidivs
fiaddl
inc
into
mov
nop
loopne
nop
inc
out
repnz
repz
pop
ror
xchg
gs
mov
inc
pop
inc
mov
mov
data16
or
mov
and
ss
out
mov
adc
outsl
in
lret
hlt
scas
sub
daa
int3
sub
sbb
jecxz
imul
jmp
xor
and
xor
test
loop
nop
adc
mov
inc
dec
outsb
rcrl
into
mov
mov
mov
and
xchg
xlat
or
jnp
hlt
shll
andl
in
pop
fisubs
jns
jg
lret
cmp
int3
push
sbb
mov
dec
negb
sbb
push
mov
inc
pop
roll
and
movsb
rcrb
je
cwtl
xchg
push
jb
push
loop
xor
out
mov
lods
in
push
push
jge
stos
pusha
test
push
inc
popa
inc
lock
outsl
ffree
sbb
jge
test
rcll
stos
hlt
cld
dec
stos
mov
ret
mov
xor
inc
dec
mov
xchg
iret
outsl
outsl
jne
daa
xchg
es
fwait
adc
test
lret
xchg
jmp
fpatan
notb
push
scas
cli
in
xchg
push
push
jecxz
push
cld
and
inc
cmc
scas
bound
loop
add
cmp
out
fdivrp
add
or
mov
outsb
mov
test
xor
xchg
cltd
sahf
add
push
inc
push
sub
aas
push
mov
dec
jmp
orb
aaa
pusha
push
adc
hlt
fwait
xchg
inc
test
ss
inc
int
icebp
mov
xchg
fstl
xor
mov
inc
jae
stos
pop
inc
cmp
dec
or
shr
in
jb
mov
cltd
out
ficompl
loope
lods
or
in
insb
dec
jne
or
clc
fistpll
cmp
in
and
in
mov
or
sub
je
test
shll
imul
js
jne
popf
xor
ss
push
fcoms
inc
mov
push
aad
pop
push
xor
cwtl
shrb
andb
push
and
outsb
ret
aad
inc
mov
sbb
shr
cltd
test
mov
pusha
pop
jecxz
lods
subb
movsl
push
aad
fidivs
faddl
push
repz
loopne
jns
jb
rorl
xorb
sahf
xor
shrl
and
in
fadds
popa
mov
push
sti
movsl
mov
iret
sub
push
leave
add
negb
in
and
add
test
bound
into
mov
jg
aas
pop
or
nop
jl
bound
ret
out
sbb
mov
out
les
mov
mov
int
cmc
inc
int3
jne
shlb
enter
cltd
mov
dec
mov
fstl
jl
sbb
cmp
or
cmp
mov
icebp
dec
shll
cmc
jecxz
clc
cmp
iret
jbe
data16
xchg
les
mov
cmp
dec
mov
xchg
shrb
vmovss
dec
bound
cwtl
push
dec
sahf
xchg
scas
sbb
pop
movsb
rcrb
cmpsl
pop
pop
clc
mov
push
xor
xor
scas
mov
movsl
test
sub
mov
sti
pop
push
jns
and
cmp
lds
push
mul
pop
push
cltd
je
inc
into
xchg
leave
and
into
lock
call
add
imul
sbb
dec
add
inc
fisubl
stc
push
nop
ret
mov
push
leave
pop
and
add
jge
pop
add
dec
ljmp
add
addr16
test
dec
jno
pop
sub
insl
mov
sti
arpl
pop
sarb
dec
hlt
cltd
shrb
push
cwtl
es
std
ja
cld
push
jo
sti
push
fsub
rcr
jecxz
inc
subb
bts
into
jae
add
sbb
int
stc
xlat
fbstp
dec
jp
fcoms
sahf
and
repz
pusha
lcall
sbb
aam
adc
cmp
in
fwait
inc
or
xchg
or
xor
sbb
ret
xor
imul
jo
add
sub
mov
mov
scas
xchg
push
xchg
mov
inc
sarb
cld
ja
fistl
scas
test
pop
pop
lret
mov
rcrb
les
sti
std
and
mov
lods
or
pop
pusha
out
and
mov
and
movsl
adc
stc
popa
sti
sub
xchg
xor
repnz
xchg
dec
mov
lods
push
xchg
dec
faddp
out
add
lods
inc
insb
test
call
mov
mov
mov
out
mov
xor
fcoml
mov
mov
std
pop
push
stos
push
inc
dec
fsubrp
mov
push
imul
in
mov
fldl
inc
sub
cltd
repnz
std
mov
mov
sub
popf
mov
jecxz
mov
repz
movsb
cmpl
adc
sbb
xchg
mov
lret
roll
int3
inc
jo
dec
out
sbb
das
adc
pop
mov
adc
lods
pop
daa
mov
inc
mov
sbb
decb
jg
enter
sahf
jns
mov
add
in
and
sub
mov
int3
sub
mov
sub
xor
cli
mov
jge
iret
jge
mov
cli
mov
lods
mov
or
in
outsl
dec
dec
push
inc
mov
or
push
test
mov
loope
inc
mov
loope
pop
lock
icebp
cmp
popf
add
mov
int3
std
movsl
fdivr
mov
pop
int3
in
sbb
shlb
fidivs
push
test
in
lods
or
loopne
and
call
sub
ret
cld
test
lods
pop
jmp
lret
inc
lcall
int3
and
aas
ja
loopne
add
adc
jl
mov
movsb
jge
cmp
pushf
push
mov
aam
jno,pn
lods
sub
sub
push
lret
fisttps
mov
mov
jl
out
fmul
mov
mov
aas
dec
repz
stos
lret
mov
push
jmp
int3
shrl
mov
mov
cs
mov
rcrb
mov
enter
pop
jmp
cmp
int3
loope
or
sti
popf
push
sti
add
adc
xor
insb
loopne
sbb
sub
test
into
adc
and
mov
pop
mov
push
cltd
imul
add
jno
push
xorl
sub
fldz
out
mov
xchg
dec
lock
dec
sub
aam
mov
data16
or
xor
sbb
stos
jno
repz
mov
jae
and
dec
push
or
mov
mov
xchg
leave
stos
mov
stos
in
or
fistpll
int
icebp
stos
fidivrs
xor
fdivrl
mov
jp
and
add
cmp
push
adc
push
add
test
enter
stos
fs
mov
and
ret
lcall
push
and
cmpsb
push
cmp
gs
in
jg
push
outsl
push
std
loop
dec
je
add
stos
stos
lretw
add
lret
pop
pop
mov
outsb
es
mov
cmc
sub
cltd
rorb
xor
lods
scas
pushf
add
sub
repnz
push
push
arpl
outsl
cwtl
or
push
in
hlt
jge
cmpsb
lcall
xlat
dec
push
inc
inc
popf
stos
mov
std
pop
xchg
xchg
inc
jl
push
jae
mov
iret
leave
sti
pushf
lods
les
jo
call
clc
fcoml
mov
or
inc
mov
call
xchg
fcmovu
mov
sahf
outsl
stos
pushf
addr16
pop
cltd
mov
in
std
dec
push
lret
xorl
and
mov
mov
jno
push
xchg
cwtl
lock
xchg
mov
mov
notl
fdivrl
ret
jmp
inc
fwait
xor
insb
or
push
pop
push
mov
mov
dec
mov
mulb
jmp
adc
xchg
add
sub
mov
out
mov
mov
into
inc
xor
add
fiaddl
lea
inc
pop
das
daa
inc
mov
jecxz
aas
in
test
jp
mov
es
movsl
xchg
ret
cs
icebp
leave
daa
jmp
mov
or
cmpsl
add
pop
mov
adc
mov
adc
dec
fadds
mov
add
adc
inc
je
adc
lods
push
sbb
jnp
mov
arpl
popf
inc
rcr
pop
insl
ljmp
aaa
pop
inc
lods
jle
mov
sti
push
bound
push
sub
and
insb
nop
sti
inc
push
mov
xor
push
out
mov
out
lret
insb
mov
cli
pop
cmpsb
sbb
sub
in
jge
sbb
mov
mov
ficoml
loopne
shl
or
jmp
das
xor
test
mov
adc
int3
jno
sbb
dec
add
lret
scas
and
sub
push
orb
xchg
std
ljmp
xlat
ret
xlat
sbb
fsubrl
push
and
mov
out
test
mov
adc
mov
mov
inc
inc
je
in
push
ljmp
xchg
xchg
and
dec
es
enter
fldl
adc
and
imul
pop
jno
cmp
cld
push
or
xor
push
out
cmpsb
push
in
mov
pop
mov
ss
arpl
mov
mov
in
jns
or
mov
push
pusha
sub
lret
cwtl
clc
fs
in
movsl
mov
adc
sub
push
fsubrl
cmp
aad
leave
mov
mov
inc
enter
and
adc
and
dec
adc
xlat
pop
push
mov
je
test
iret
jp
mov
inc
lds
jo
jb
fidivl
loope
rcll
xchg
sahf
fstpl
push
test
popa
sbb
repnz
aad
xlat
push
ss
mov
daa
mov
jb
insb
push
out
cmp
pushf
inc
dec
pop
mov
jp
cmp
xchg
rclb
push
jns
mov
dec
add
dec
daa
lret
cs
rcrb
cmp
pop
dec
jo
mov
inc
adc
or
mov
lret
mov
rorl
ret
mov
scas
cmp
adc
rolb
pop
sub
lods
pop
add
mov
in
outsb
inc
and
cmpsb
cmpl
out
mov
int
test
loopne
mov
inc
xchg
cmpsb
stc
shrl
arpl
xchg
test
hlt
pop
cmpsb
aam
stc
sbb
into
divl
mov
fcmovnb
test
roll
imul
out
repz
enter
dec
xor
lahf
ljmp
pop
mov
stos
ja
shll
jmp
in
pop
rclb
fbld
repnz
sbb
int3
pop
leave
mov
mov
cs
call
adc
sub
mov
xchg
test
shl
sbb
sahf
add
cmc
test
aas
cmp
fsubp
add
fnsave
das
aad
cli
gs
cltd
cmc
and
cld
mov
sub
sub
scas
sub
mov
sahf
pushf
cmp
sub
loop
les
dec
inc
jo
cli
movsl
dec
fildll
mov
addr16
add
inc
fwait
and
imul
sub
or
pop
xchg
fs
push
pop
pop
pushf
xor
leave
inc
imul
ret
jmp
pop
push
es
jno
xchg
mov
xchg
jns
cld
push
in
stos
jge
movsb
sbb
xchg
pop
xor
and
fisubrs
xchg
into
cs
sarb
iret
pop
add
lret
dec
jo
les
mov
sbb
testl
loop
and
pop
inc
xlat
and
jo
sti
negb
daa
mov
data16
add
mov
fstl
orb
mov
outsl
or
sub
rclb
pop
xor
mov
dec
sub
shrb
aad
fstpt
mov
femms
mov
jae
dec
push
add
clc
enter
jno
jbe
push
outsb
ss
mov
cmp
or
dec
mov
pop
mov
in
sarl
and
xor
add
add
and
and
mov
xchg
pop
mov
mov
dec
sub
jae
stos
ja
mov
or
imul
pop
dec
in
add
xchg
push
xchg
mov
mov
pop
lcall
add
ds
loop
push
sti
ja
cs
adc
bound
loopne
iret
mov
push
fwait
add
rorl
dec
fwait
and
mov
adc
jnp
in
cmpsb
adcl
pop
and
sub
add
out
daa
das
or
jae
mov
orb
fcomps
data16
ret
insl
test
in
mov
dec
adc
js
int
lahf
test
iret
jb
dec
sbb
lret
inc
push
jge
adc
js
iret
pop
data16
cmp
push
cld
ljmp
push
shrl
decl
dec
mov
push
push
jmp
cli
arpl
test
xchg
jmp
adc
mov
mov
mov
out
and
push
inc
ror
xlat
xor
mul
mov
dec
lds
ljmp
or
xchg
cmpsl
pop
jmp
ss
in
dec
dec
add
jg
test
fisubrs
pop
fldenv
lds
cmp
inc
mov
jnp
or
sbb
mov
dec
bound
dec
xchg
in
jbe
xchg
sub
and
add
sti
push
jb
and
dec
cmpsb
test
into
mov
jl
ja
out
xchg
lcall
lcall
adc
pop
add
int3
imul
xor
inc
fmuls
insl
jp
mov
inc
fisttps
jns
imulb
pop
push
addr16
test
test
rclb
aad
push
imul
push
test
daa
jecxz
add
xchg
mov
hlt
pusha
call
clc
mov
cmp
adc
sti
or
xchg
and
fcoms
mov
xlat
fdivs
outsb
mov
mov
sub
mov
adc
jl
xlat
xchg
pusha
lods
nop
inc
cli
and
sbb
fdiv
jmp
and
ljmp
push
orb
adc
rcr
rcrb
shll
outsb
loope
enter
jecxz
push
mov
push
sub
dec
sbb
pop
mov
in
test
xchg
inc
test
pushf
xchg
jl
hlt
addb
ret
ja
mov
push
jno
dec
pop
sti
loop
jmp
mov
pushf
insl
addr16
xor
push
push
dec
mov
pop
into
icebp
xor
out
mov
jae
in
test
icebp
popf
sbb
sbb
mov
or
mov
and
ds
inc
jns
movzwl
add
outsb
aam
scas
fcoml
mov
into
sub
xor
dec
mov
or
xor
and
ficoml
push
lcall
movsb
aad
movlps
out
dec
arpl
orl
rcll
ja
andl
and
fisubl
xor
outsb
js
sbb
test
inc
addr16
bnd
xor
fldcw
adc
xor
pop
xor
or
or
jnp
mov
ss
and
mov
pop
xor
push
mov
push
inc
xor
dec
test
clc
mov
decb
sahf
movsl
push
sub
inc
fwait
lock
popf
and
push
xor
call
lds
std
push
jbe
pop
popa
mov
xchg
in
into
out
out
insl
jp
rorl
int3
cmp
sub
lea
mov
mov
ffree
arpl
push
xchg
loopne
scas
lret
js
xchg
jne
and
enter
hlt
mov
ret
cmp
jae
or
sarl
in
xor
cld
adc
cmpl
in
mov
mov
loope
xchg
fisttpl
lods
sub
mov
xlat
jmp
jg
stos
pop
push
stc
test
sti
mov
and
fucomi
pop
add
adc
mov
and
popf
pushf
cmc
inc
jo
push
test
insb
iret
outsl
popf
rol
shl
mov
daa
pop
sub
fmull
pop
dec
fnstcw
lahf
fldln2
xadd
cmpsb
xchg
iret
jp
mov
movsl
jnp
rcrl
cmpl
mov
les
mov
push
xchg
lods
jae
mov
daa
inc
out
fcmovbe
fldl
xchg
xorl
mov
xchg
pop
fcoms
pop
lea
hlt
test
xor
sub
sub
aas
inc
nop
pop
xor
jne
int
pushf
mov
std
mov
and
pop
and
pop
xchg
sub
pop
loopnew
popa
jmp
and
imul
fnstcw
pusha
aaa
gs
xchg
testl
push
xchg
xor
xchg
and
dec
lea
addr16
xchg
fcomp
mov
jmp
jbe
dec
stos
cli
sbb
insb
repnz
cmp
xchg
mov
andl
lods
jg,pt
cmp
mov
stc
scas
xchg
mov
test
dec
es
das
popf
movsb
jo
mov
jle
aad
pop
subl
pop
cmc
fistl
sbb
daa
insb
cmpsl
xchg
fwait
aad
xor
sbbb
mov
sbb
push
sbbb
roll
add
mov
jnp
test
push
outsl
add
fistpl
ljmp
push
std
aaa
xor
add
or
push
sbbl
rcrl
jl
dec
jae
push
shrl
gs
dec
add
push
xchg
xchg
ficomps
push
pop
push
sti
popa
mov
in
pushf
adc
es
imul
dec
xchg
dec
mov
mov
mov
aas
jnp
sahf
xchg
pop
insb
bound
jb
xor
mov
inc
dec
cld
inc
frstor
add
dec
cmpsl
sahf
mov
xchg
pop
xor
or
negl
fs
test
xchg
aad
incb
cmp
rcrb
dec
out
in
and
pop
mov
imulb
iret
push
mov
lods
mov
mov
xchg
fsubrp
lea
sbb
xchg
and
fnsave
add
or
or
jecxz
lea
je
lods
movsb
mov
adc
in
sub
arpl
mov
in
pop
sub
push
in
test
pop
ss
or
fistpl
sbb
lods
into
iret
aad
cmpsl
xchg
push
test
cli
push
cltd
pop
mov
jmp
into
sub
cmp
leave
dec
jmp
mov
fidivl
sbb
mov
sahf
mov
fs
mov
xchg
mov
js
test
scas
xorl
mov
popa
sub
or
pop
cmp
into
and
push
fnclex
jp
cmovnp
loop
push
loop
pop
and
add
sbb
xchg
push
pop
test
les
orl
push
adc
sbb
jge
fmuls
jl
adc
add
js
or
scas
push
sub
das
in
les
enter
sahf
xchg
cs
clc
std
cltd
mov
insb
add
xchg
popf
xchg
xchg
pop
mov
dec
xor
movsb
cmpsl
ret
and
add
lods
rclb
imul
rcrl
add
das
or
and
xlat
repz
test
xchg
push
aas
je
rcrb
push
adc
dec
loope
and
xor
adc
mov
stos
cli
xor
sub
and
inc
repnz
stos
out
jno
cmpsb
hlt
mov
mov
cmp
ds
cmpsb
push
cli
pop
pop
jle
inc
inc
sub
cmp
aaa
clc
jno
xchg
cltd
out
push
jmp
sbb
mov
dec
inc
mov
push
xlat
test
xchg
enter
out
push
xchg
add
mov
or
xchg
inc
icebp
xor
cmpsl
js
aad
out
xchg
add
subb
mov
pmuludq
mov
popf
stos
out
addr16
aaa
std
fwait
cmp
adcl
das
arpl
xor
pop
xor
push
pop
pop
call
pusha
in
test
outsl
stc
mov
and
pop
sub
sbb
in
and
push
xchg
xor
std
xchg
dec
add
stos
or
jl
pop
mov
xchg
aaa
fcmove
loopne
test
or
scas
scas
add
sti
imul
lods
inc
add
mov
lret
jnp
jmp
mov
dec
pop
mov
push
jmp
pop
ljmp
ds
sub
add
test
push
mov
subl
jne
pop
sub
orl
popf
xor
negl
je
pop
xor
and
cmp
pop
pop
inc
inc
data16
and
xor
or
out
xchg
jle
mov
sahf
in
jb
in
pop
mov
orl
lcall
sub
cmp
enter
cld
pop
rcrb
out
push
mov
sti
ret
outsl
jae
fnstenv
cwtl
pop
mov
shrb
mov
dec
pop
xchg
jb
inc
pop
mov
mov
adc
insl
movsb
push
sbb
push
sub
mov
xlat
cmp
pop
push
sbb
test
mov
loope
mov
hlt
inc
fs
or
and
fbstp
shl
mov
dec
lret
pusha
cmp
push
xchg
mov
mov
sub
mov
or
pusha
xor
stos
out
movsl
fistl
sub
or
sbb
addr16
pop
sub
test
popa
lods
adc
jbe
popa
adc
mov
sub
fistps
adc
xchg
mov
hlt
or
shlb
jae
xchg
cmpsl
aaa
aam
mov
arpl
in
repz
addr16
mov
call
cmc
icebp
cmp
lds
movsb
repnz
insb
inc
rep
gs
jno
clc
mov
sub
mov
daa
xchg
sti
es
adc
scas
ss
jmp
test
mov
sub
call
outsl
adc
mov
rcrl
mov
pop
mov
mov
jle
push
popf
push
dec
insb
dec
push
nop
jo
or
mov
dec
mov
xlat
aaa
in
cs
test
cltd
adc
xor
mov
push
mov
bound
mov
add
mov
cld
xchg
cmc
addb
adc
pusha
out
data16
cld
sti
out
mov
jb
jo
push
stc
fucomip
loope
scas
mov
pop
push
pop
gs
jmp
gs
jnp
add
lret
mov
dec
adc
fsubrs
adc
sti
lahf
movsl
sahf
add
loope
mov
push
or
sbb
add
cld
mov
ja
pop
and
adc
push
lahf
pop
fistl
cwtl
shlb
push
pop
dec
lods
fldt
les
clc
mov
xchg
and
sbb
inc
int3
inc
rorl
jno
ret
loope,pn
shlb
shlb
push
adc
dec
in
mov
xchg
sub
sub
push
inc
out
mov
sarl
orl
mov
jle
hlt
mov
and
pop
leave
pop
cmp
xchg
push
mov
movsb
or
and
pop
jns
dec
popf
cmp
adc
pop
pop
xor
and
sbb
adc
loope
fld
jns
in
pop
cltd
cmpsb
lock
inc
xchg
mov
rcr
xor
fucomip
loop
jbe
mov
or
pushf
push
sub
jmp
rcll
insb
jnp
push
js
insb
push
call
ret
pop
cmp
and
mov
mov
jmp
cmp
push
mov
push
cld
pop
bound
lock
fs
xor
inc
call
mov
ret
or
jbe
filds
cmp
dec
or
mov
in
or
movb
mov
dec
and
negb
inc
pop
and
mov
adc
test
jmp
cmp
dec
jns
mov
sarb
cmp
inc
pop
and
movsl
cwtl
adcb
cmp
push
mov
jl
adc
bound
adc
insb
pop
adc
jns
test
in
lcall
leave
pop
sti
dec
sbb
xchg
adc
push
jb
pop
test
loopne
js
enter
sbb
loop
mov
loopne
stos
rcrb
inc
clc
sub
rorl
add
ds
out
lds
xchg
sbb
adc
int
cmpb
jecxz
push
fwait
out
jge
fwait
adc
in
aad
insl
fnsave
repz
sub
mov
bound
jle
mov
sti
mov
jae
cmpsl
lret
mov
pop
idivb
test
imull
sub
ja
cmc
outsl
repnz
and
or
pop
and
dec
std
aam
dec
dec
lea
sbb
repnz
adc
fsubrp
mov
stc
jge
add
out
fstpt
sbb
xor
xchg
mov
push
jge
sub
scas
mov
pop
inc
sub
inc
aaa
and
cmpsl
push
and
cltd
insb
scas
mov
fdivs
xchg
into
push
adc
pop
das
lds
dec
shl
add
push
lahf
mov
adc
pop
test
fs
lods
std
add
outsl
clc
mov
xor
jne
insb
fisttpll
sbb
stos
sub
sub
push
jg
fmul
jge
mov
mov
push
repz
xchg
push
jmp
call
dec
leave
mov
xchg
fmuls
push
add
rolb
mov
mov
ja
loopne
outsb
sub
cmp
imul
push
frndint
mov
fwait
popa
ret
mov
repz
inc
fsub
and
push
fucom
xchg
sbb
cmc
mov
clc
stc
scas
pop
cli
ret
xor
and
mov
push
mov
lds
inc
pop
cwtl
push
add
cmc
sar
xor
push
mov
cmp
adc
or
dec
mov
jne
leave
pop
popa
pushf
jl
aam
xor
push
sbb
sub
lock
divl
pop
mov
js
pushf
cmp
or
sahf
loopne
or
out
aad
scas
inc
aas
add
movsl
mov
dec
mov
or
xchg
sub
mov
lea
leave
inc
dec
or
shll
push
sbbl
fprem
adc
push
sti
mov
xchg
lcall
mov
mov
inc
test
jbe
out
sbb
stos
jbe
fdivrs
dec
repz
ret
ljmp
cltd
into
clc
fiaddl
mov
add
add
inc
dec
daa
push
pusha
insb
aas
bound
popa
pop
lods
test
adc
add
out
pop
mov
cmc
xor
xlat
dec
inc
mov
lods
xlat
adc
scas
insb
adc
mov
scas
fnstsw
dec
or
inc
cmpl
pop
insb
adc
sbb
xchg
pusha
add
or
xchg
dec
loop
imul
cmp
rolb
sbb
test
or
and
add
dec
inc
arpl
sub
jmp
add
add
fmuls
shl
int3
fcoml
fdivs
stos
or
ret
push
pop
sub
jmp
xchg
and
repz
mov
mov
lods
inc
jbe
pop
adc
fldcw
xor
inc
ds
stos
aad
shrl
push
outsl
icebp
fbstp
rcll
push
fistps
mov
sub
mov
or
sub
cmc
inc
fucomi
and
ds
shufps
mov
stc
xor
lock
mov
outsb
in
pop
pop
mov
xchg
xor
xchg
fisubs
pushf
les
add
into
shlb
subb
lea
jae
mov
outsl
push
std
mov
xchg
enter
and
adcb
mov
test
out
lret
cmc
fsubrs
mov
mov
fdivs
mov
push
cmpsb
xchg
rclb
inc
movsb
mov
cmp
and
jae
add
lret
pop
lods
or
test
movsb
adc
lods
push
mov
hlt
xor
test
inc
stos
lods
in
xchg
lods
bswap
sub
in
ljmp
loope
orb
addr16
ffreep
andl
rclb
ljmp
cmp
test
lret
push
ret
mov
sbb
mov
and
and
ss
pop
xor
ljmp
adc
cmp
push
in
fists
sub
and
repnz
mov
inc
xor
add
jmp
lahf
cmpsb
lea
sbb
push
jae
sbb
push
lock
daa
xchg
jge
insb
aaa
cmp
out
jb
shlb
or
inc
and
pop
cmc
paddusb
out
push
pop
jge
fs
add
call
xchg
xchg
lret
pushf
scas
cmpsb
inc
xlat
push
rcll
add
inc
dec
sahf
fcompl
dec
leave
addr16
in
push
and
movsl
xor
sbb
xor
add
das
push
sahf
jle
push
aad
push
outsb
jnp
sahf
in
clc
xchg
jnp
insl
xchg
dec
sti
add
into
push
shr
xchg
insb
cmp
push
sbb
mov
sbb
mov
loopne
sub
hlt
scas
stos
jge
push
je
mov
out
sub
scas
mov
fstpl
adc
in
int
sub
xor
and
imul
pop
and
test
popf
inc
push
jno
lods
jno
jmp
push
std
popf
jmp
imul
jnp
sbb
pop
loopne
jno
jp
hlt
pop
in
pop
jo
mov
movsl
sbb
push
and
xlat
loopne
sti
pop
pushf
pop
mov
sahf
addr16
xchg
xor
and
int3
mov
dec
pop
and
and
pop
mov
lods
push
testb
daa
test
jbe
add
sbb
fisubl
jnp
scas
xchg
push
je
mov
negl
lods
lea
xlat
mov
cli
faddl
adc
dec
jne
movsl
cmp
cltd
cmp
and
fwait
mov
in
aam
xchg
fwait
adc
cld
loop
popf
ss
and
nop
scas
mov
call
ja
add
test
into
lods
into
ds
rol
in
fadds
pushf
xchg
stos
int3
sbb
sbb
ljmp
lea
sbb
xchg
lods
test
ljmp
xchg
dec
inc
outsb
dec
mov
pop
mov
filds
cli
push
clc
insl
fldt
sbb
es
dec
fidivrl
xchg
or
enter
sbb
insl
lcall
incb
xor
out
pop
imull
push
shrb
stos
pusha
dec
jmp
mov
into
daa
xor
and
ss
jp
mov
xlat
popf
jmp
add
fs
jnp
out
rclb
fisubrl
nop
dec
add
sub
dec
outsb
pop
ds
jle
and
rcrb
dec
jno
xchg
and
fstpt
movsl
mov
jb
jg
test
fadds
cmp
leave
fstpt
pop
in
and
outsl
cld
inc
push
and
mov
js
stos
jp
add
inc
pop
add
push
daa
jae
imul
xchg
loopne
sahf
and
ret
or
movsl
dec
mov
addb
add
or
jp
rol
pop
xchg
repnz
in
sbb
inc
xor
xchg
outsb
mov
call
pushf
mov
fimull
in
pop
ficomps
shlb
dec
leave
cmpsb
hlt
xor
lret
and
pusha
stc
popf
shl
push
adc
dec
cs
cltd
int
pop
lods
sbb
fwait
cmpsb
imul
mov
mov
mull
or
je
outsl
mov
cmpsb
lahf
testl
in
test
mov
jmp
push
adc
push
aas
inc
push
fyl2x
pushf
sbb
add
ljmp
add
lock
data16
mov
sbb
leave
sbb
fwait
leave
cmpb
add
cld
cmc
jns
stc
scas
in
in
push
mov
fcmovne
inc
adc
sbb
pushf
push
jno
jmp
mov
inc
add
push
and
stos
aad
imul
xchg
fdivs
mov
push
pop
mov
andl
repnz
add
scas
xchg
push
in
sub
add
xchg
lods
aaa
fistpll
mov
xor
arpl
pop
push
cmp
mov
fmull
xchg
cltd
lods
sbb
ret
es
xchg
or
sbbl
lahf
sub
xchg
inc
je
ss
add
and
mov
or
mov
mov
mov
mov
dec
pop
mov
sbb
cmp
inc
bound
inc
push
ret
add
aas
data16
pop
ja
ds
movsl
cmp
mov
mov
out
mov
mov
pop
adc
sub
dec
pop
insb
xchg
xchg
movsl
jl
mov
mov
mov
xchg
outsb
fisubrs
add
rolb
popf
pusha
push
sub
cld
and
out
je
inc
jl
or
mov
in
mov
pop
cmp
lcall
xor
add
stc
and
test
dec
outsb
test
mov
cmpl
push
adc
shrb
test
mov
or
push
test
inc
int3
outsl
push
pop
sub
xchg
mov
gs
test
fld
cmp
andps
cmpl
iret
cmp
std
and
xchg
popf
in
rolb
sbb
js
push
push
jmp
leave
out
in
repnz
sub
out
popf
out
negb
in
add
and
push
cld
mov
mov
xchg
or
in
add
mov
xor
jg
test
add
aas
inc
mov
repz
nop
push
in
int
mov
mov
push
add
pop
pop
fs
nop
gs
pop
mov
data16
sbb
adc
int3
outsb
jae
jle
movsb
push
adc
aad
jb
push
jp
push
sbb
cmp
pop
lcall
mov
fucom
jnp
mov
mov
movsb
lods
or
sub
cld
mov
or
mov
mov
and
dec
sub
dec
xor
and
scas
add
sbb
sub
sub
sub
mov
mov
mov
xchg
out
jno
push
pop
adc
in
xlat
and
push
cli
dec
pusha
xchg
dec
mov
test
add
scas
inc
mov
pop
adc
in
das
or
cmpsb
int
mov
xorl
test
sub
outsl
cld
cmp
add
jp
pushf
pop
push
inc
sbb
into
mov
push
loopne
inc
or
dec
adc
sub
ljmp
test
lock
sub
and
mov
shll
icebp
jmp
inc
sub
addr16
dec
push
scas
ds
mov
stc
pop
adc
push
jo
popf
into
das
dec
dec
mov
pop
xchg
rcl
cld
scas
mov
pop
sub
xchg
push
cld
repnz
cmpsl
push
cmp
aad
xchg
xor
lret
and
jb
mov
aam
mov
xchg
xchg
inc
jge
int
sbb
shr
fsubp
adc
xchg
loop
pop
xor
pop
sbb
aad
jecxz
push
or
sub
mov
mov
cmc
sub
cmpsb
lretw
or
int3
pop
loope
into
lahf
lods
adc
cld
sub
fsubl
mov
sahf
ret
xor
or
inc
shl
in
les
or
scas
and
dec
fcoml
nop
push
mov
sbb
xor
push
clc
sub
cli
mov
in
pop
xchg
or
adc
sti
fisubrs
adc
mov
or
xchg
pop
pop
insb
es
jmp
outsb
mov
mov
push
add
xchg
push
xor
sbb
push
jno
push
sub
ss
sar
movsl
add
mov
ret
inc
pop
icebp
mov
sub
fiaddl
mov
xor
in
mov
out
scas
push
cwtl
into
rcrb
push
in
lock
ja
push
or
and
xchg
nop
jmp
cmp
rorb
adc
sub
push
rcr
jp
cmp
sahf
out
jnp
sti
inc
gs
arpl
push
pop
sahf
push
push
sbb
test
adcl
gs
aam
and
and
jb
stc
in
push
pop
mov
lods
cld
sub
data16
ds
sub
push
std
add
outsb
push
xor
ja
ret
lcall
loope
cwtl
ret
jl
push
xchg
js
sbb
fwait
ds
shlb
mov
mov
movsl
or
in
shlb
xor
cmp
popa
ffreep
movsb
out
push
adc
into
popf
cmc
cld
push
or
mov
popa
fdivrl
and
lods
inc
or
mov
movsl
or
inc
jb
insb
cmp
in
and
sbb
repnz
xchg
sbb
lods
xchg
sub
shlb
pop
jl
lahf
stos
lret
adc
lods
push
aas
xchg
add
arpl
cli
pop
pop
pop
cwtl
mov
cmp
sub
xchg
xchg
outsb
sub
repz
mov
ret
push
jne
or
hlt
adc
imul
insb
jnp
das
mov
js
test
xchg
lret
scas
mov
and
dec
lea
mov
sbb
xchg
push
shrd
mov
mov
int3
lock
xchg
mov
jp
xchg
sbb
in
cmp
mov
jmp
xchg
inc
stos
xchg
int3
rorl
scas
adc
mulb
pop
mov
mov
xor
mov
mov
add
inc
mov
lea
ja
pop
cmp
cmpsb
push
jne
aam
mov
sti
mov
popa
arpl
cld
std
jne
out
clc
out
mov
outsb
fisubrs
je
lret
lock
jmp
xor
fsubl
mov
scas
les
scas
movsb
dec
je
and
mov
mov
adc
push
cli
lods
aas
inc
cmpsl
fsts
fsubrl
and
dec
insl
inc
sub
mov
and
fistps
push
mov
insl
scas
scas
push
cmc
or
ds
mov
pop
fdivrs
rorl
test
cmp
cmp
sbb
and
aam
ljmp
mov
ljmp
push
inc
mov
xor
dec
mov
jmp
inc
pop
fdivr
push
xchg
fstps
das
loope
icebp
and
loope
fnstenv
fcmovbe
push
shll
mov
jmp
rolb
aas
sbb
scas
dec
xor
rcrb
sahf
movsb
das
mov
in
cld
push
pop
mov
jne
ja
mov
push
stos
rcrb
xor
mov
shlb
int3
fmull
std
or
lods
dec
leave
movsl
mov
movsl
push
js
inc
adc
out
xchg
and
int
in
dec
push
test
push
sbb
fbld
es
sub
xor
push
or
dec
mov
ret
shl
imul
fiadds
int
loop
rorb
adc
push
stos
cmc
and
scas
or
test
popf
jg
dec
pop
add
cmp
inc
roll
inc
adc
in
inc
xchg
jmp
lahf
pop
jo
in
add
xlat
unpcklps
sub
into
cmp
call
jae
push
into
xor
andl
sub
pop
jmp
les
sub
push
cmp
xor
popf
insb
fadd
jae
out
outsl
and
or
adc
outsb
and
jge
loop
movb
mov
dec
push
jbe
jae
adc
cmc
pop
mov
push
movsl
inc
xor
mov
push
dec
mov
jne
jp
je
loopne
push
lret
rcll
aaa
lods
in
mov
jns
ret
push
lods
fnstenv
sbb
cmpsl
add
fnstsw
int3
arpl
repz
mov
pushf
jp
cmp
mov
lahf
mov
hlt
sub
sahf
fdivl
or
adc
sarb
xor
subb
jns
jb
xchg
xchg
shrl
push
sti
xchg
lock
pop
std
jnp
ss
mov
pop
loope
push
xor
mov
fldenv
push
lahf
and
or
or
sbb
or
lret
or
push
out
sbb
mov
dec
push
int
lock
movsb
inc
pop
mov
push
xlat
jle
mov
pop
fsts
out
push
cmpb
fstps
cmp
mov
jge
sbb
dec
sub
faddl
lods
pop
movsl
jno
lods
into
repz
cld
cmpsb
lock
test
pushf
mov
xchg
lock
fsubr
add
adc
mov
js
adc
fs
popf
nop
pop
dec
mov
fidivs
rcr
andl
movsl
push
sti
jo
negl
inc
pop
push
test
fwait
nop
pop
cwtl
add
jns
push
push
add
nop
in
stc
mov
ror
insl
sbb
fwait
lock
pop
hlt
mov
push
and
mov
negb
fimull
pop
in
push
fstl
cmc
push
and
xor
aas
movsb
mov
stos
pop
mov
movsb
xchg
arpl
and
add
jge
stos
out
in
cmp
dec
int
push
pusha
cmp
les
cld
aad
lods
adc
mov
cli
cld
pop
add
and
in
mov
cmp
push
mov
out
scas
cmpsb
ljmp
scas
fmulp
push
and
lods
jl
xchg
lods
out
sti
mov
inc
add
sbb
stos
add
pop
daa
xor
imul
inc
imul
add
pop
sbb
lahf
sbb
and
mov
icebp
or
movsb
xor
je
mov
fistpll
xorl
cltd
in
lcall
out
mov
jp
divl
dec
call
xor
jmp
mov
cmp
pop
xchg
enter
shlb
and
or
fs
push
movsl
xchg
dec
cmp
push
sbb
push
xor
push
stc
push
inc
movsb
jne
adc
insl
cli
sub
in
jne
push
data16
mov
outsb
push
daa
data16
out
iret
fildll
xchg
incl
call
mov
add
xchg
xchg
push
cmp
or
sbb
mov
movsl
dec
repz
fmuls
loop
pop
lcall
xchg
lahf
cwtl
hlt
adc
inc
cmp
shlb
stos
inc
aam
and
loopne
mov
push
aad
popa
xlat
stc
ljmp
mov
loopne
mov
adc
sahf
push
mov
pop
pop
mov
mov
jae
rcr
stos
test
adc
std
leave
pop
and
shlb
inc
packuswb
pop
scas
cmpsb
lahf
lcall
inc
cmp
sub
push
out
fadds
ljmp
scas
jmp
adc
stos
push
and
adc
mov
scas
gs
mov
mov
cmp
inc
movsb
scas
rcl
out
xorb
ret
jg
adc
inc
pop
rolb
insl
mov
bound
jne
xor
pop
call
lock
rol
push
pop
pop
or
mov
dec
mov
js
push
jecxz
mov
mov
scas
jae
imul
mov
mov
xchg
or
cltd
repz
sbb
loopne
jmp
push
arpl
outsl
mov
addb
popa
ss
jnp
sub
cmp
les
mov
jle
arpl
and
push
mov
cmp
enter
mov
sub
xchg
add
push
mov
sub
mov
out
pop
imul
movsb
or
ret
or
lds
push
pop
mov
lcall
ror
cmp
push
and
sbb
push
add
cmp
xor
jmp
cltd
jno
pop
pop
jl
inc
dec
dec
add
outsl
add
in
scas
mov
iret
stos
xchg
hlt
sub
repz
cmpsb
adc
dec
jae
mov
jl
pop
sbb
sub
mov
adcl
adc
mov
and
push
mov
xchg
adc
cmp
mov
clc
rorl
inc
cmpsb
cmpb
adc
or
in
jmp
aad
stc
cmc
int3
or
mov
aam
pop
fsubrs
mov
movsl
std
xchg
adc
xlat
mov
movsb
out
std
lcall
adc
mov
dec
mov
adc
fsubs
aam
lods
mov
push
pop
insl
repnz
cld
sub
pop
insb
adc
mov
jl
shll
mov
xchg
mov
sub
ret
pop
frstor
bound
dec
roll
dec
push
sbb
cmp
mov
sti
cld
ljmp
xor
mov
dec
and
icebp
rclb
xchg
sahf
inc
xor
xchg
out
jbe
and
or
push
cli
lret
adc
jns
movsl
lock
mov
fsubrs
push
add
imul
cmp
mov
mov
xor
sub
dec
xor
ja
xchg
aam
xchg
mov
daa
mov
pop
adc
sti
jecxz
sti
sbb
clc
movsl
repz
cmp
nop
mov
dec
icebp
or
dec
push
imul
out
mov
repnz
and
jg
aas
ss
xor
push
dec
jb
notl
mov
stos
xor
dec
pop
pop
mov
fucom
push
cli
mov
mov
jmp
iret
cmp
mov
enter
popf
test
mov
mov
aam
enter
movsl
cmp
sbb
sbb
mov
clc
sbb
adc
mov
je
dec
icebp
jge
lahf
std
add
stos
pop
fisubrs
dec
mov
xlat
jae
fsubrp
pusha
leave
and
je
and
jmp
mov
sub
in
push
jmp
fstl
pop
xor
xchg
out
xchg
mov
and
push
test
pop
stos
cmp
push
es
and
sub
mov
add
push
nopl
adc
xor
and
es
push
cmc
sbb
jge
add
and
sti
jecxz
xchg
inc
clc
into
dec
iret
xor
jp
fistl
dec
mov
lahf
scas
mov
or
push
les
jno
std
and
aad
or
push
xchg
inc
shrb
sti
cmc
xchg
fsubp
outsb
push
add
inc
push
pop
jnp
stc
pop
and
roll
out
xchg
arpl
lret
dec
inc
adc
push
inc
mov
out
dec
push
push
sub
fdivrs
sbb
sbb
ljmp
and
in
sbb
push
ficoms
pop
jge
sub
and
add
sarb
arpl
or
sbb
jo
mov
adc
lahf
mov
push
push
mov
xchg
mov
fidivrs
jae
dec
fcomps
scas
je
dec
pop
pop
cmp
fisubrs
sbb
movsb
xor
add
es
pop
jne
dec
sti
xor
inc
pop
push
fidivs
push
movsl
xchg
adc
jo
mov
mov
push
mov
inc
pop
lods
cld
mov
dec
mov
movsb
sti
lcall
cmp
ror
scas
scas
lret
outsb
pop
pop
sub
sub
pop
mov
mov
repnz
imul
jo
add
adc
push
jecxz
mov
jmp
scas
mov
mov
cmp
push
cli
je
repz
jae
add
mov
stos
mov
push
std
cld
out
into
jge
adc
push
or
mov
cmp
adc
pop
sub
out
jae
popf
cwtl
cmp
rorl
xor
lods
or
pop
aaa
jno
enter
enter
jg
nop
scas
adc
notb
lret
iret
dec
mov
and
jecxz
pusha
inc
inc
jp
ja
inc
pop
inc
outsb
out
fisttps
ja
push
sti
loop,pn
fistpl
push
mov
fisubs
xor
mov
dec
cmp
inc
rorb
data16
outsl
xor
stc
push
movsb
and
jo
jb
aam
out
scas
test
sbb
cwtl
jne
inc
mov
lods
and
int3
scas
mov
or
push
pop
sti
out
ss
xchg
arpl
mov
icebp
jns
bound
xchg
addb
cmp
cld
mov
mov
cmp
call
stos
mov
out
inc
xlat
cmc
xor
sbb
je
cmp
add
fists
push
sub
out
mov
mov
movsl
mov
sbb
add
out
xchg
dec
es
cwtl
lahf
jnp
in
arpl
mov
push
rdtsc
push
scas
outsb
jo
mov
out
pusha
iret
movsb
sbbl
scas
rorb
mov
loopne
inc
mov
adc
jmp
cmp
iret
xchg
inc
rorb
pop
inc
push
xchg
cmp
sub
in
adc
cmp
dec
and
ds
mov
loopne
inc
ret
jb
iret
adc
repz
mov
stos
jo
and
and
cmp
lods
push
pop
push
cmp
stc
scas
mov
cltd
mov
insb
movsb
mov
repnz
roll
add
cmp
sub
mov
mov
mov
das
and
rcrl
mov
arpl
lods
scas
mov
iret
sbb
push
or
or
and
adc
xchg
int
fidivl
xchg
mov
shrb
cwtl
inc
inc
jo
fldl
xchg
in
sub
dec
pop
mov
sbb
mov
cmpsb
push
insl
mov
and
pop
rorb
sub
sub
fdivs
jp
sub
and
mov
dec
jae
cli
sti
pop
idivl
pusha
pop
adc
sbb
push
popf
inc
ret
and
sbb
xchg
mov
or
lahf
xor
lods
in
rorb
jo
mov
inc
incb
mov
mov
add
jge
and
push
lret
jo
jl
cld
push
and
rol
and
add
push
inc
cmc
mov
cli
adc
inc
fists
imul
jne
mov
loope
pop
cltd
es
xor
outsb
dec
mov
js
in
mov
dec
mov
out
addr16
fwait
pop
std
arpl
or
lods
movsb
js
jl
or
add
fnstenv
scas
shr
xchg
jl
or
or
subb
inc
sbb
mov
pop
iret
insl
icebp
push
fwait
sbb
xor
test
adcb
mov
sahf
test
push
data16
dec
std
lods
or
repnz
push
fsubs
sub
fistl
ret
add
mov
push
mov
js
push
adc
outsb
scas
sub
add
fs
insl
aaa
mov
mov
repnz
sub
sahf
fdivrl
add
dec
adc
cmp
fisttpl
mov
mov
dec
pshufw
je
test
jp
xor
mov
cmpsb
sbb
adc
pop
xchg
bound
xchg
addl
shlb
mov
clc
dec
xchg
movsb
cld
mov
push
idivl
bound
decb
adc
cmp
mov
rcl
adc
stos
pop
popl
inc
shlb
push
dec
lcall
out
into
adc
aaa
adc
mov
nop
dec
icebp
pop
ja
sbb
mov
mov
in
fdivl
xchg
fiaddl
push
lret
aam
shlb
mov
mov
cmpsl
sahf
or
fwait
cs
jbe
popf
or
popa
data16
mov
lds
popa
jae
push
pop
xor
cmp
insl
mov
xor
mov
inc
push
test
mov
mov
pop
push
pop
pushf
dec
cmp
nop
xchg
sbb
insb
sub
jo
mov
rorl
xor
or
fbstp
xor
lret
sbb
out
popf
sbb
inc
mov
inc
dec
lds
addr16
movsb
loop
push
pop
fadds
jl
sbb
dec
sbb
or
lods
subb
stc
je
sub
fimuls
jae
movsb
jle
jmp
inc
xchg
fistps
push
aad
mov
add
std
xchg
addb
dec
mov
idivb
xchg
mov
lret
push
push
sub
dec
mov
pop
fcoml
nop
and
sti
in
cld
icebp
cli
mov
sub
decb
loopne
jl
inc
fsubrl
jmp
ljmpw
gs
test
mov
push
adc
or
xchg
mov
jae
mov
mov
pop
pop
and
repz
push
sahf
insl
pop
jmp
js
icebp
push
out
push
mov
into
ja
les
adc
popf
sub
mov
and
ja
push
int3
push
adc
rolb
mov
daa
mov
int3
mov
xor
mov
mov
imul
fsubrp
mov
lea
and
sbb
xchg
jb
jp
mov
sbbb
sbb
jmp
inc
shl
and
rol
or
dec
repnz
sbb
js
fidivrs
pusha
bnd
adc
xor
and
jmp
rcrl
push
jb
ret
lret
mov
xchg
pop
push
mov
idivb
je
sbbl
data16
es
inc
stos
sbb
loope
mov
xor
add
lcall
gs
fisubl
jge
aad
icebp
push
cmpb
xchg
jl
or
and
push
jg
jae
jae
mov
push
in
test
cmc
mov
loope
pop
push
arpl
in
mov
test
mov
mov
arpl
add
xchg
xor
test
dec
mov
flds
imul
into
scas
and
xchg
clc
sub
sahf
xchg
cmpsb
xor
test
sbb
stos
ss
repz
vmaxps
movsl
xor
adcl
call
mov
ficompl
mov
dec
push
mov
lds
je
jp
xchg
push
and
jne
nop
or
stc
mov
add
xor
mov
sbb
shlb
aam
push
mov
test
rcr
mov
data16
mov
fstpl
inc
sub
and
in
roll
cmp
pop
lods
mov
inc
xchg
cmp
outsl
adc
cwtl
push
test
jecxz
push
ljmp
out
loop
inc
add
mov
mov
mov
jl
loopne
loop
or
mov
les
xchg
fsub
mov
jo,pt
imul
cmp
sub
push
push
mov
mov
adc
mov
data16
xor
inc
loop
loop
shrl
push
jno
lret
dec
adc
in
das
test
dec
dec
addr16
and
dec
fsubl
xchg
into
jae
fidivrl
dec
adcl
vshufpd
in
dec
sub
cli
and
and
roll
sbb
mov
mov
stc
lods
dec
lret
nop
xchg
out
lahf
jg
in
mov
push
cmp
icebp
adc
movsb
insb
fstl
mov
push
ficompl
mov
mov
stos
in
pop
cmp
fisttpll
rcrl
popl
pop
push
repz
frstor
aas
cmc
movsl
mov
out
sub
hlt
dec
mov
xchg
push
outsl
xor
stos
or
shll
mov
lds
out
jne
movsl
scas
sbb
xchg
xchg
cmp
sti
mov
fwait
dec
xchg
out
cld
mov
mov
adc
pop
shll
dec
sub
sub
std
leave
stos
push
adc
push
inc
movsb
push
push
cmp
cmp
popa
dec
sub
jmp
adc
ret
adc
dec
test
jno
aas
sub
cmp
stos
xor
push
push
in
jno
sbbl
pop
shl
jno
xorb
jg
jbe
aam
push
push
sub
push
push
dec
xchg
testb
mov
pop
jne
sub
push
xchg
scas
hlt
push
mov
xchg
adc
jne
addr16
xor
inc
jecxz
in
sub
xchg
out
cltd
xchg
cmp
insb
pop
hlt
mov
push
cmpb
xor
xchg
mov
test
addb
sahf
into
sahf
and
cltd
mov
scas
jle
shlb
movsl
jb
cmp
inc
stos
popa
fimuls
jb
cmovb
push
stc
sbb
jmp
sub
mov
pusha
and
sub
lods
mov
jmp
push
sahf
push
xchg
movsw
push
inc
pusha
mov
mov
pop
cwtl
pop
stos
sbb
sub
and
cmc
push
jmp
repz
mov
test
inc
pop
sub
lret
test
arpl
int
xchg
push
sarb
in
sbb
icebp
in
cmp
mov
push
rol
sahf
xor
fcompl
data16
mov
mov
mov
and
add
sahf
xchg
std
arpl
les
jbe
call
test
into
lret
nop
movsl
push
in
and
shr
jnp
int
xor
es
add
int
call
ds
roll
push
push
sub
mov
pop
popf
pop
out
flds
lock
jge
mov
xorl
test
mov
mov
inc
in
or
xor
jae
das
int3
push
test
mov
aam
lods
and
outsl
adc
pop
push
fimull
lret
xchg
dec
psubusw
add
lcall
enter
ret
loopne
push
push
imul
mov
push
push
or
in
push
inc
xchg
sub
xchg
imul
iret
leave
mov
sti
in
js
stos
cmpsb
push
andl
mov
dec
sub
push
sti
movsb
ret
div
cmpb
scas
push
cltd
insl
push
jmp
sub
push
or
andl
int
int3
cmp
mov
jo
out
pop
jns
sti
fldcw
inc
cmc
inc
xchg
push
shlb
pushf
ljmp
dec
sub
push
bound
xchg
movsl
lods
out
cmc
pop
test
addr16
stos
ds
xor
pop
jb
in
outsb
shr
inc
pushf
scas
mov
xor
loopne
xchg
xchg
imul
mov
inc
push
popf
push
clc
arpl
addl
shr
inc
push
jne
xchg
xchg
push
outsl
mov
push
arpl
cld
jp
xchg
pop
lahf
cmc
mov
mov
inc
cwtl
dec
sub
push
adc
and
std
fbld
mov
cmp
sub
push
mov
pop
stc
rclb
lea
gs
lods
jmp
js
lods
mov
bound
outsb
lcall
xor
xchg
cmc
adc
enter
scas
ljmp
adc
jne
sbb
pop
das
idivb
fsubp
cmp
ja
mov
xchg
int3
mov
into
lock
std
imul
lds
push
stc
cli
fs
ret
enter
shl
push
out
pop
mov
mov
ljmp
cli
xchg
jne
lret
or
into
pop
iret
jb
sub
rcll
jns
sub
out
ret
mulb
or
sub
popa
mov
push
test
jmp
cld
test
pusha
cli
pop
cmc
dec
adc
call
flds
adc
mov
cmp
jno
sbb
mov
aam
pop
push
push
test
xchg
mov
outsl
add
adc
imul
ja
ljmp
scas
das
xchg
mov
mov
and
dec
xchg
subb
xor
repnz
icebp
cmp
pop
mov
dec
scas
fnstsw
mov
faddl
and
test
test
adc
mov
push
shl
pop
imul
shrb
mov
pop
aad
aad
subl
loopne
dec
sbb
hlt
stos
adc
or
pop
push
jb
mov
jbe,pn
cltd
test
pop
dec
loope
push
jb
or
mov
negl
mov
dec
and
sti
jns
stos
shlb
int
jmp
mov
test
js
mov
mov
mov
adc
fistpll
cltd
ret
push
jge
cmpsl
filds
xor
sahf
adc
cmp
fisttps
mov
cli
push
icebp
or
mov
jmp
fcmovnb
js
rcr
pop
pop
mov
mov
ret
rcll
add
test
mov
lods
xor
mov
xchg
std
inc
xor
and
adc
jecxz
cmp
cmp
fiadds
lds
inc
outsl
or
in
int3
dec
stc
add
mov
xlat
jbe
lock
fsubr
pusha
fisttps
xchg
push
fmull
loope
in
fcompl
push
jecxz
sub
inc
dec
rorl
sbb
push
mov
cmpsl
inc
push
jo
das
xor
inc
leave
push
out
add
inc
into
repnz
fnstsw
or
and
push
dec
push
cmp
fcoml
data16
jbe
mov
inc
pusha
pop
dec
xchg
and
jg
sub
add
aam
jl
mov
add
negb
jle
jmp
add
inc
lds
inc
push
push
lods
outsb
cmpsl
negb
inc
insb
jne
sub
pop
pop
adc
shlb
inc
test
push
mov
push
push
shlb
imul
sbb
jmp
jnp
and
and
je
inc
or
push
and
mov
and
aad
std
push
jne
jns
xor
fcoml
mov
jae
mov
sti
clc
mov
jno
dec
and
mov
mov
xchg
cmp
push
lret
mov
push
scas
sahf
ljmp
ret
fisubs
cmc
add
lahf
mov
rcrb
xchg
sbb
out
fildl
ss
clc
pop
push
insb
and
mov
hlt
fmuls
or
jecxz
adc
cmp
pop
push
push
popa
fmuls
xlat
xchg
inc
in
js
insb
cmp
dec
pop
ljmp
fcoms
rclb
arpl
sub
pop
scas
dec
cli
ds
std
or
pop
or
cmpsl
jae
test
jbe
push
mov
xchg
out
add
jl
cltd
fdivl
inc
frstor
imul
mov
stos
mov
ret
fdivrs
cwtl
rorb
mov
cmpsl
cs
sbb
xor
mov
xchg
push
sbb
xor
lods
mov
pop
mov
subb
adc
add
in
push
test
lahf
movsl
sub
xchg
pushf
cmc
pop
ljmp
push
mov
cmpsb
into
pop
xchg
cmpsb
rclb
rolb
mov
inc
cmpsl
fistps
scas
aad
jo
popf
push
push
jge
and
cmpsl
ljmp
push
ficoms
pop
dec
scas
push
adc
and
xor
pusha
movsl
xchg
mov
xlat
outsb
mov
data16
jl
fmuls
mov
push
repz
xchg
movsb
pop
imul
and
cmp
fucomip
fidivrs
adc
les
or
pop
sub
repnz
xchg
arpl
dec
cmp
loop
int
scas
push
subl
cmp
jno
cmp
mov
leave
jo
xchg
and
mov
movsl
loopne
sbb
jo
pop
insb
stos
arpl
dec
pop
fsubl
in
push
mov
subl
hlt
adc
cmc
push
ds
ret
mov
or
pop
icebp
add
mov
ljmp
enter
sahf
lock
mov
popl
xor
add
test
mov
jecxz
shrb
sub
jne
jo
inc
mov
fs
hlt
push
ficomps
pop
ficoms
or
insl
loope
dec
inc
in
ds
add
in
inc
shrl
mov
ret
arpl
jo
inc
mov
dec
mov
fidivrl
pop
xchg
inc
lock
lds
mov
addr16
aas
ljmp
ss
push
xchg
inc
cli
xchg
cmp
stos
in
mov
or
adc
dec
mov
hlt
inc
std
inc
loop
push
mov
xor
pushl
aad
cwtl
lret
cmp
int
mov
sbb
andb
les
sbb
push
inc
call
jmp
sub
imul
inc
rolb
insl
fstpl
ds
mov
in
insl
sub
inc
add
cwtl
add
push
ret
and
cwtl
jo
outsl
hlt
xor
fsubrl
sbb
mov
sub
pop
or
cmp
mov
popa
mov
int
in
movsl
sbb
add
sbb
fildll
cs
sbb
in
inc
inc
in
cmp
rcrl
repnz
rclb
ret
jge
popa
jo
and
xor
ljmp
jns
andl
imul
cmp
in
icebp
in
mov
cmp
jg
vprotq
lds
jb
mov
mov
leave
add
repz
rcl
or
cmp
dec
lods
jg
mov
loope
pop
mov
sbb
jp
dec
pop
mov
int3
jg
adc
lahf
sti
and
mov
ret
sarb
jb
test
sbb
inc
add
lcall
or
or
cmc
dec
push
jae
cmc
jp
mov
push
arpl
lock
repnz
add
aas
mov
scas
adc
mov
lock
cmp
adc
lret
xlat
push
leave
faddl
and
jne
dec
gs
xchg
js
outsl
fnop
sub
outsb
iret
jnp
jb
jno
mov
aam
adc
pop
movsb
pop
pop
add
out
cmp
and
mov
popa
out
mov
push
inc
pop
mov
aaa
mov
insb
sbbb
sbb
sti
pop
jle
insl
add
xchg
add
cmp
pop
int3
mov
adc
fiadds
sub
scas
ret
push
aam
outsb
iret
test
insb
xchg
jb
mov
sbb
mov
inc
je
cmp
jnp
adc
jnp
sti
jne
pop
movsb
jae
adc
outsl
movsb
mov
es
add
fstpl
dec
sub
in
push
sbb
jae
jns
scas
in
adcb
andb
mov
push
mov
adc
lods
pop
loopne
xor
outsb
push
sar
rcrl
dec
jb
lods
sub
inc
shlb
test
scas
mov
jne
pop
test
jmp
call
xchg
mov
movsl
ds
test
push
ror
in
insb
dec
or
inc
mov
mov
push
outsl
add
ror
mov
push
mov
push
jne
add
inc
in
lcall
movl
mov
jl
jnp
sbb
sbb
mov
ds
and
imul
push
mov
xor
sub
mov
les
gs
repz
xchg
mov
ffree
push
pop
cmp
test
sub
fimull
jne
mov
scas
mov
push
xchg
inc
pop
push
ja
adc
es
dec
xchg
insl
mov
int3
pop
inc
push
jno
push
mov
mov
push
push
xchg
pop
repnz
or
pop
mov
and
mov
in
mov
es
stos
aam
adc
in
push
insb
movsb
dec
dec
mov
scas
jbe
repnz
mov
jp
push
ds
mov
sub
jle
rcll
in
adc
lock
dec
and
add
faddl
cmc
jbe
filds
sbb
mov
lods
stos
pop
push
in
loope
xchg
or
adc
and
enter
xchg
ljmp
fwait
iret
xorb
push
cmp
jne
xor
sbb
and
lods
adc
cmp
scas
rolb
jle
pop
fmull
mov
test
cs
xor
shrl
shr
not
mov
clc
scas
js
test
jecxz
sarb
rcr
xor
xchg
imul
insl
in
scas
mov
cmp
nop
pop
cmp
jecxz
lds
int3
sub
fsubp
pop
scas
popl
push
xchg
mov
std
and
cmp
push
fcomip
xchg
je
lods
adc
inc
xchg
insb
repz
fisttpll
int3
adc
mov
mov
push
leave
out
sub
mov
repz
cmp
sub
mov
test
push
inc
in
jo
and
add
lock
and
adc
ret
loopne
or
cmp
into
movsb
and
fcom
sbb
lods
mov
fsub
inc
lahf
mov
into
fistps
or
adc
push
daa
enter
fwait
iret
movaps
sub
adc
bound
rorb
test
sub
sbb
mov
es
fisttps
cmp
mov
ljmp
mov
fstl
mov
dec
or
movsb
mov
ljmp
cmpsb
cwtl
or
sahf
mov
lret
shl
leave
push
paddq
addr16
stos
push
mov
xor
orb
enter
dec
das
push
xchg
mov
dec
xchg
es
xor
xchg
jge
and
dec
mov
clc
arpl
cli
jl
subl
movsb
leave
fnsave
xchg
ds
and
push
loope
stc
push
adc
dec
push
lret
cmp
xchg
xchg
cltd
xchg
push
xorl
jmp
stc
hlt
jns
push
repnz
xchg
fnsave
cmp
push
jb
rorb
movb
and
iret
and
xchg
rcr
xor
mov
adc
adc
inc
sti
jp
mov
sbb
inc
or
cwtl
aas
pop
add
inc
in
xchg
mov
clc
and
cmc
jno
jle
pop
inc
lods
ret
fidivs
adc
fnstenv
xor
stos
ret
xchg
add
dec
add
xchg
pop
fsts
dec
mov
cmpl
into
xchg
jns
ljmp
xchg
fwait
addr16
lret
pop
in
hlt
fabs
mov
loope
fldt
stos
mov
int3
test
push
mov
mov
xchg
fcom
int
xchg
and
repz
or
in
sub
shr
adc
leave
mov
push
cmp
and
adc
loop
cmpsl
cmp
pop
push
outsl
push
mov
adc
jecxz
rcl
sub
sub
in
mov
cmp
and
cmp
lahf
and
xchg
dec
jb
or
adc
pop
ret
mov
mov
push
cmp
sub
ret
es
js
lods
ljmp
imul
test
fimuls
stos
and
jecxz
inc
xchg
outsl
dec
iret
sbb
adc
sub
xchg
push
xchg
sbb
adc
adc
out
and
loope
inc
lock
in
dec
inc
or
jns
mov
into
jo
bound
popl
and
inc
sub
ljmp
dec
int3
shlb
pop
rolb
and
test
sti
jb
in
imul
sbb
es
jb
cmp
mov
mov
lods
lea
scas
xorb
xchg
mov
orl
popa
jo
xchg
jo
jne
mov
add
sahf
ja
cmp
lcall
adc
pop
je
cmp
in
and
fistpl
out
sbb
pushf
cltd
and
lea
adc
mov
inc
sub
lcall
and
and
mov
adc
pushf
sub
dec
pop
pop
popa
and
pusha
cwtl
mov
out
pop
fidivs
insb
movsl
sarl
cs
mov
lret
mov
push
sbb
add
mov
mov
fmulp
push
jne
stos
push
into
sti
mov
das
outsb
jnp
and
rcrl
adc
or
mov
cmp
test
dec
std
ja
cmpsb
push
cmc
push
repz
xchg
xchg
pop
pop
not
mov
movsl
repnz
cwtl
push
or
sub
and
fcoms
stos
je
repnz
push
std
div
push
pop
push
rcll
jl
insl
fisttpl
iret
xchg
ljmp
or
sahf
out
push
dec
imul
jle
jno
xor
add
inc
mov
dec
pop
inc
je
dec
and
loop
xchg
jg
lods
aas
or
nop
mov
inc
xor
sub
mov
das
mov
xchg
andb
adc
dec
xchg
rorl
in
stc
push
movsb
iret
subb
mov
xchg
andps
popf
shlb
cmpsb
and
mov
adc
cmp
xchg
nop
push
inc
push
sub
cmp
jl
in
pop
movsb
lcall
adc
xor
xor
push
cmpsl
add
and
flds
jmp
cli
rcrb
adc
in
push
into
sub
stos
sbb
cmp
push
fsubs
sub
adc
call
arpl
inc
lahf
outsl
xchg
mov
mov
in
sub
gs
lea
and
rcrb
ss
mov
in
jb
jp
cmp
shl
in
mov
jne
add
cltd
lock
mov
iret
and
xchg
sbb
repz
fldcw
cmpsl
mov
mov
imulb
add
sub
xor
rcr
fld
lods
adc
fiadds
cltd
cmp
jp
or
push
movsb
cwtl
rol
pop
lahf
jmp
adc
enter
ds
hlt
stos
dec
mov
inc
adc
fistps
cmp
jo
ja
push
out
push
in
rcll
es
or
arpl
cmp
js
insl
icebp
jne
pushf
push
popa
std
push
lods
rcrb
sarb
insb
jae
mov
repnz
cmc
and
scas
or
lods
divb
add
jmp
movsb
cld
cs
clc
or
cmpl
fs
push
mov
lcall
js
mov
mov
jp
jno
pop
imul
nop
mov
leave
rcll
gs
ror
outsb
pushw
or
mov
and
mov
loope
mov
arpl
lock
rorb
push
shlb
sbb
push
push
divl
mov
cmp
aam
push
sbb
dec
shll
data16
scas
jae
out
in
fcompl
mov
jnp
push
sub
and
jb
out
out
inc
pushf
daa
cmc
xchg
jns
ficoml
adc
ret
in
in
insl
aam
jg
ret
and
stos
fwait
mov
pushf
and
mov
cmp
and
popl
sahf
leave
insl
push
xchg
cmpsb
outsb
ret
sbb
fmuls
in
jae
mov
aaa
lahf
and
xchg
js
dec
popf
daa
outsb
push
xchg
push
insl
ret
scas
loope
adcb
andb
mov
das
test
add
out
lods
xor
lahf
inc
adc
lret
add
outsb
repnz
sub
fisttpll
in
in
sbb
gs
pusha
push
lods
pop
dec
dec
in
mov
push
insb
inc
ret
leave
mov
and
iret
cmp
insb
xor
pusha
out
sbb
fsubrl
pop
outsl
push
xchg
popa
ret
pushf
mov
repz
ret
scas
pusha
outsl
andb
insl
stos
repz
loope
inc
sbb
movsl
stos
adc
bound
xchg
shll
outsb
aas
adc
lcall
sub
fists
xchg
mov
push
shlb
inc
pop
repz
insb
mov
mov
js
pushf
jp
mov
lahf
and
mov
sahf
and
popa
pushf
pusha
subl
cmp
popa
out
sbb
adc
scas
pushf
push
or
adc
mov
fs
mov
imull
mov
sahf
mov
add
pusha
cli
cltd
pushf
test
sub
sub
xor
test
jp
js
cli
cmp
push
and
jle
mov
arpl
mov
popf
and
cmpsb
lahf
cwtl
aaa
pusha
iret
mov
push
jb
arpl
shll
jp
movsl
lahf
dec
jmp
in
outsl
jae
pop
inc
adc
and
lret
cltd
vaddpd
repnz
es
pop
xor
aam
xor
sbb
lcall
addr16
lret
lcall
mov
push
lea
aaa
xor
outsb
cmp
mov
cmpsl
sbb
push
std
jno
dec
xor
lods
cmc
fmull
jno
jl
data16
hlt
sahf
in
jge
inc
lock
lods
test
lea
lcall
push
dec
addr16
push
sub
pop
xchg
and
push
pushf
and
aam
mov
xlat
mov
iret
push
push
xor
ficomps
dec
mov
clc
sub
stos
and
inc
push
jb
pop
push
lds
fsubl
push
jg
ror
and
adc
lds
sbb
pop
ss
frstor
scas
insl
dec
mov
xchg
dec
jmp
push
xchg
lds
pop
mov
add
fwait
jb
dec
mov
mov
outsb
sbb
out
xor
scas
shlb
test
pop
and
pop
cmp
add
sub
out
dec
jmp
add
rcrl
fdivs
cmp
rol
and
insl
cmc
adc
jmp
push
dec
mov
cli
xchg
ja
mov
scas
icebp
jno
out
sbb
xchg
jnp
jae
pop
push
lds
popf
jb
sub
adc
adcl
insb
push
jb
insl
out
sbb
fsubrl
xchg
mov
es
and
dec
xchg
sahf
pop
push
aas
cmc
cmp
lea
cs
jae,pn
pop
push
outsb
in
movsl
out
jns
cwtl
fwait
ds
scas
insl
cmp
and
mov
pop
cmp
movsb
mov
jne
scas
outsb
dec
push
xchg
sub
fs
lret
xchg
lds
pop
mov
cmp
or
fidivl
mov
js
cmp
jns
mov
and
xchg
dec
sbb
jecxz
inc
cmp
insb
pop
cmp
xor
ljmp
and
xchg
mov
jg
and
jae
xchg
sub
push
xchg
dec
jmp
push
xchg
ret
rcrl
mov
insl
pop
xor
bound
loop
jne
fcmove
lock
mov
add
adc
stos
push
xchg
pop
cmp
lods
arpl
sti
mov
xor
cmp
cli
fmull
fucom
int3
xchg
jae
pop
dec
outsl
adc
cmp
je
into
pop
jo
movsl
cmpsb
jo
jge
jo
shrb
fidivl
xchg
imul
cmpsl
mov
push
pop
inc
dec
sbb
pop
sub
mov
inc
or
push
xchg
mov
je
es
dec
sbb
stos
lcall
scas
jecxz
jns
pop
jg
in
and
adc
mov
rorb
xchg
ja
cmpsl
push
pop
adc
add
jl
shll
sub
pop
test
cmp
sub
sbb
jle
dec
mov
xchg
adc
xchg
jge
outsl
leave
movsl
cs
jns
pop
inc
pop
mov
fwait
cmp
push
mov
mov
mov
loop
std
lods
adc
or
stc
mov
les
shrb
int
jmp
movsb
push
outsb
or
adc
pop
add
push
in
iret
mov
inc
push
jmp
mov
mov
insl
stos
ror
mov
fsubr
sahf
repz
fidivl
inc
std
sbb
xor
dec
jmp
push
test
push
push
sbb
fwait
sub
fstpt
xor
cld
jbe
ror
je
movsl
sbb
pop
in
popa
pop
mov
pushf
pop
scas
cmp
push
andb
dec
push
sahf
pusha
ljmp
js
test
xchg
mov
imul
mov
hlt
sbb
xchg
fcoml
fstps
fsubr
fcmovb
xor
imul
fstl
pop
add
jmp
je
fstl
mov
pop
push
push
jo
lock
andl
mov
mov
adc
adc
addr16
cld
sbb
bound
mov
adc
les
lods
pop
xchg
stos
and
pop
dec
aas
ljmp
ja
ror
mov
imul
ret
push
or
and
notb
push
js,pt
mov
xor
mov
je
mov
dec
fmull
xchg
imul
or
adc
mov
dec
xlat
add
rolb
pop
hlt
inc
aad
outsl
sahf
ret
in
mov
inc
cmp
fsubrl
fisubl
nop
es
pop
jns
and
xlat
cmp
mov
xchg
imul
in
xlat
sub
xchg
pop
push
xchg
dec
repnz
push
negl
mov
scas
lea
xchg
imul
push
stc
movsl
cmp
cmp
les
lods
ret
lods
or
lea
adc
int3
mov
or
adc
pop
inc
lods
and
push
insb
cmp
mov
push
imul
push
jae
idivb
stos
andb
inc
lea
sbb
push
cltd
mov
and
mov
shr
icebp
mov
in
mov
push
jo
xchg
lret
push
in
cs
mov
in
or
ja
sbb
xchg
jge
pop
popf
stos
sbb
cmp
dec
mov
jp
sub
sbb
subb
inc
das
mov
addb
sbb
call
fmul
mov
ljmp
je
shrb
das
xchg
mov
jecxz
shrb
push
imul
ror
ret
xchg
mov
lret
push
dec
xchg
imul
push
les
hlt
jnp
pop
shl
dec
xor
inc
pop
insl
cmpsl
push
sub
fmulp
mov
push
mov
dec
xlat
add
and
imul
mov
scas
push
outsl
mov
jmp
outsl
outsl
outsl
stos
das
movsb
lret
mov
test
dec
fsubrl
pusha
fldl
int3
fstp
xchg
mov
sbbb
lcall
fdivrp
jp
das
out
push
and
gs
xor
cs
lods
mov
xchg
pop
push
lcall
pop
mov
mov
and
push
or
adc
ja
out
sbb
xor
es
out
shrl
sti
dec
mov
cld
stos
scas
pop
cmp
sbb
pop
test
sub
xchg
int3
inc
xor
cld
cs
push
xchg
fsubs
jno
dec
mov
jmp
fsubs
mov
jl
aaa
jb
sti
dec
mov
mov
jns
xchg
fwait
mov
bound
jae
cmp
push
jg
mov
insl
repz
out
sbb
mov
pop
mov
jbe
add
sub
orb
pop
fsubs
lods
or
pusha
nop
rcrb
std
rorl
jne
and
out
jb
pop
push
xor
xchg
rolb
mov
mov
fisubrs
into
fsubl
stos
fnsave
loopne
mov
daa
ljmp
repnz
dec
mov
icebp
dec
dec
std
shrb
dec
sbb
dec
push
xchg
or
dec
subb
sub
fmull
mov
je
pop
inc
mov
sub
imulb
test
shrl
push
jb
inc
out
int
inc
fcmovne
cwtl
mov
and
mov
push
adcl
mov
inc
and
mov
pusha
cli
lds
mov
aaa
add
and
and
pop
cli
insl
xchg
inc
push
jge
outsb
das
mov
inc
and
mov
pusha
cltd
mov
inc
push
jb
inc
out
sbb
inc
cs
jno
stc
inc
adcb
cmpb
mov
sahf
sbb
xchg
sub
scas
test
adc
adc
shrb
hlt
iret
insl
sbb
iret
movsw
inc
pop
inc
lock
cmp
add
or
push
and
mov
pusha
cli
scas
mov
scas
imul
movl
inc
and
and
bound
sahf
push
inc
push
xchg
arpl
scas
xor
push
in
inc
adcb
mov
iret
out
into
push
inc
out
sub
push
and
mov
popa
out
and
dec
leave
outsl
in
push
jb
inc
out
sbb
fs
and
xchg
adc
jl
pop
jge
outsb
das
add
mov
lcall
jle
pushf
mov
cmp
mov
pusha
cli
lea
push
inc
aas
mov
mov
sbb
sarb
scas
leavew
mov
iret
int3
leave
insl
loope
push
jb
inc
out
sbb
mov
das
cwtl
imul
mov
mov
iret
fs
push
jb
dec
out
sbb
jb
das
mov
adcb
mov
mov
iret
out
imull
dec
push
jb
inc
cs
mov
aaa
inc
adcb
or
adc
push
leave
outsl
iret
daa
imulb
dec
push
jb
dec
cs
adc
scas
sbb
inc
jne
repz
iret
dec
and
mov
clc
int
cli
fidivs
je
ficomps
mov
aas
outsl
pop
scas
scas
push
mov
adcb
fldenv
cmpsb
popa
xchg
push
pusha
hlt
arpl
rclb
je
lret
mov
out
push
nop
pop
fsubl
imul
shlb
sbb
mul
mov
mov
cmp
pop
dec
jns
inc
mov
inc
push
jnp
jnp
pmulhuw
inc
mov
add
sti
mov
pop
mov
pop
pop
xor
arpl
loop
mov
inc
cltd
cmpsl
movsl
dec
cmc
jp
orl
mov
pop
jmp
lahf
test
pop
punpcklbw
lcall
pop
adc
lcall
jns
fmull
xchg
ljmp
gs
push
movsl
cwtl
scas
int
pushf
push
repnz
subb
sbb
jp,pn
xor
xor
and
push
std
std
out
out
inc
inc
fwait
rolb
popf
jo
jbe
push
int3
sar
mov
jmp
xlat
clc
in
repnz
bound
into
push
lods
or
test
push
sbb
inc
fcoms
sahf
push
dec
call
fcoms
sub
xchg
jb
pushf
addr16
push
pop
and
ljmp
cs
mov
out
inc
and
mov
fcomp
imul
xchg
mov
scas
push
inc
sbb
xchg
mov
nop
ljmp
test
cmp
stos
mov
inc
jmp
inc
jp
fnstcw
dec
leave
fxch
push
lds
pop
xchg
adc
sub
add
mov
sbb
xchg
lret
inc
fwait
test
dec
dec
flds
mov
xor
mov
xchg
and
ljmp
sahf
mov
mov
add
orl
pop
outsb
adc
pop
adc
inc
jl
test
cmpsl
fidivrs
xor
xlat
fistps
cmp
push
xchg
movsl
popf
mov
cwtl
outsb
push
push
push
add
mov
jo
addl
popf
mov
and
fnsave
cs
inc
add
push
jl
sahf
imull
or
jne
and
iret
xor
pop
jns
jo
es
scas
sub
out
mov
pop
jae
xor
jns
and
mov
sub
xor
lods
int
aam
mov
scas
push
adc
push
pushf
and
ljmp
mov
in
test
cli
xchg
fsubs
jmp
and
push
cltd
outsl
cli
dec
inc
arpl
test
push
ficompl
xor
sub
jge
loop
sbb
dec
imul
insb
sub
psubusb
jl
or
adc
sub
iret
rorb
jg
xchg
sub
mov
push
imull
jb
inc
adc
xchg
add
lds
and
stc
cld
dec
sub
pop
mov
jle
sti
cwtl
cltd
in
lods
sbb
or
fnstsw
add
movb
es
mov
in
stos
push
inc
icebp
xchg
fmuls
cwtl
cltd
in
dec
xor
leave
dec
popf
lcall
and
push
mov
dec
mov
cmpsb
ljmp
loopne
jno
mov
data16
rolb
cmp
xor
mov
mov
push
fdivrl
ss
stc
pusha
loopw
push
xchg
sbb
daa
ljmp
xor
pop
test
or
xchg
xorl
stos
ret
xchg
mov
xchg
sbb
dec
lds
mov
faddp
lret
test
std
pop
scas
pop
daa
aad
loopne
mov
sbb
jb
dec
out
push
scas
adc
mov
mov
out
mov
adc
mov
mov
leave
mov
xchg
add
inc
lret
filds
xchg
pop
or
sub
daa
adc
shrb
comiss
cmc
push
push
pop
add
rcrb
test
fdivs
cwtl
ret
mov
push
xor
jle
mov
in
mov
sbb
mov
dec
mov
push
mov
loope
adc
stc
cs
fsubs
mov
push
inc
inc
rcrl
pop
add
or
xchg
inc
jno
out
or
data16
pop
jmp
lcall
mov
sbb
and
test
insb
roll
add
sbb
out
lea
std
jb
shll
push
aad
xchg
cmp
push
stos
fstl
cmp
xor
sub
ficoms
cld
fmull
fsubs
imul
inc
mov
fildl
into
adc
fists
sti
xchg
dec
mov
insl
iret
pop
cli
sbb
adc
mov
jno
cmp
push
iret
sub
sbb
sub
pop
and
loope
cmpsl
pop
cmpsb
cmpsb
lcall
cmp
inc
lahf
fucomp
and
test
mov
push
jns
inc
fs
mov
push
out
insl
popf
adc
js
cld
xor
mov
lods
mov
sub
push
scas
es
repnz
fcoms
cmp
sub
sti
dec
add
popf
add
sahf
push
sub
mov
cli
pusha
in
inc
sub
data16
notl
cmp
pop
in
jge
and
mov
lahf
aam
cmp
mov
pop
mov
insl
scas
ss
and
lret
outsb
sub
in
inc
push
out
adc
inc
xchg
adc
mov
sahf
popa
test
scas
push
xchg
inc
pop
pop
jp
repz
cmc
mov
lods
add
push
mov
movsb
and
idivl
pop
sub
push
pop
push
sbb
repz
or
clc
xchg
lock
xor
lea
roll
lds
push
cmc
xchg
insb
or
repz
lock
and
test
adc
dec
lods
xlat
pop
fdivl
adc
jb
dec
mov
xlat
loop
pop
push
mov
mov
aad
or
push
fcom
sbb
scas
imul
repnz
lock
imul
daa
aad
cmpsb
adc
sti
lret
fisubrl
movsb
dec
fldl
inc
fcoml
pushf
mov
je
popa
in
xchg
mov
sbb
pop
iret
cmp
fcoml
lods
subl
push
out
orl
mov
xlat
enter
cli
mov
pop
mov
fsubrl
fmul
scas
pop
inc
pushf
xor
and
stos
or
push
popf
mov
push
movl
hlt
shrb
popf
pop
iret
fimuls
sub
in
mov
mov
sub
lods
sbb
fldl
out
test
pushf
iret
je
mov
mov
in
mov
xor
dec
stos
pop
stos
sbb
push
mov
sbb
lcall
jl
mov
stos
inc
stc
mov
mov
add
aas
iret
add
cmp
hlt
pop
cli
hlt
jns
push
lret
repnz
movsl
fsubrs
out
ljmp
movsb
mov
imul
in
sub
leave
stc
scas
fwait
jp
test
fs
xchg
xlat
mov
and
add
hlt
xchg
mov
repnz
stos
movsb
mov
mov
jno
xor
outsl
dec
pop
cmp
insb
pop
out
into
cld
cmp
lods
pushf
js
divl
lret
fadds
sti
cmp
pop
xchg
rorb
mov
xor
jecxz
sub
out
jne
or
dec
stos
ljmp
loopne
cs
ljmp
fadd
push
je
mov
outsl
shrl
dec
cwtl
stc
fwait
sub
clc
mov
mov
jmp
push
out
pop
pop
aaa
lahf
pop
fldl
data16
scas
mov
jnp
in
shl
hlt
lret
insb
add
fxch
mov
filds
popa
pop
and
mov
ret
and
push
pusha
cli
fcmovb
outsl
xor
jae
mov
test
outsl
iret
cmp
insl
icebp
pop
push
sbb
lea
popf
dec
xorb
and
sub
adc
mov
pop
and
mov
popf
lret
add
pusha
cli
xchg
lret
mov
mov
lods
xorb
dec
mov
mov
mov
stos
loop
mov
pop
inc
mov
mov
scas
xchg
fildll
aad
in
push
gs
mov
xchg
lds
adcb
xorb
mov
out
push
jns
insl
push
jmp
daa
inc
fsubr
push
ficompl
push
pop
cltd
mov
mov
pop
adc
mov
sub
lods
pop
cmp
movsl
shll
mov
push
lods
pop
xor
pop
cmpsb
int3
mov
cmp
xor
mov
dec
jge
sub
xchg
scas
addb
mov
out
mov
iret
fchs
insl
negb
jb
pop
out
sbb
insb
or
scas
adc
mov
push
mov
mov
sub
xor
cli
in
mov
push
lods
aas
pop
out
fwait
sub
out
mov
or
les
xchg
shl
and
movsl
xor
loope
pop
pop
pop
pushf
dec
mov
pop
popf
push
xor
mov
sub
iret
mov
popf
enter
shl
push
mov
out
sbb
mov
xchg
mov
leave
fsubl
inc
xor
sahf
scas
lods
push
xchg
mov
mov
push
popf
and
aas
cmpsb
in
stc
mov
add
adc
gs
fwait
jl
sub
dec
fmull
jb
lret
fdivrp
pop
mov
xor
sub
out
mov
jmp
fildl
add
aam
dec
mov
shr
mov
push
and
fdiv
adc
adc
xor
and
push
scas
and
pop
jmp
dec
jmp
scas
sbb
mov
jmp
fmull
xchg
push
jae
mov
xchg
cmp
scas
out
test
sub
xchg
sbb
adcb
test
outsl
iret
xchg
out
insl
fldenv
push
mov
jae
sarb
fsubp
imull
dec
pop
cmp
xchg
lret
stc
mov
mov
iret
pop
jmp
jb
and
frstor
push
push
stos
out
shll
dec
sub
inc
mov
mov
dec
ljmp
mov
cwtl
je
sti
pop
pop
ja
mov
sub
cmp
fidivrs
jmp
fcoms
jmp
shll
mov
xor
fsubl
mov
cmpsl
mov
jp
adc
xor
push
and
and
fs
sbb
cs
movsl
adcb
xorb
xlat
outsb
mov
sub
adc
mov
mov
mov
idivl
fldt
cmp
lret
ficoml
rcrl
add
fcomps
jnp
sub
add
loop
sbb
inc
dec
inc
pop
loope
in
push
fidivl
adc
pop
outsb
cmp
mov
dec
lods
rcrl
cmpsb
repnz
cmpsl
in
adcl
sub
movsl
push
sub
scas
sub
fldt
push
fmul
cmpsl
movsl
aad
push
shlb
and
mov
sbb
push
ds
mov
loopne
xchg
repz
pop
cltd
repnz
xchg
rolb
cmpsl
cmc
pushf
push
inc
cmpsl
subb
adc
lcall
jne
scas
sub
aam
pop
insb
push
fcmovb
pop
add
outsl
pop
jge
push
or
push
push
mov
or
dec
xchg
pop
pop
pop
xchg
or
push
push
dec
jmp
xor
outsl
pop
xchg
push
loope
push
cmp
lcall
cmp
xlat
and
lcall
lcall
cwtl
mov
mov
push
xchg
scas
cli
mov
mov
inc
lds
in
stc
mov
sub
int
mov
ds
shrl
cmpsl
int3
daa
xchg
int
dec
sarb
scas
push
daa
into
andl
fistpl
sub
xchg
mov
sub
sub
rorl
sub
movsl
sub
lods
sub
subb
movsl
adc
jb
mov
stc
mov
xchg
iret
cld
pushf
stos
adc
xor
cs
shrl
icebp
int
cmpsb
rol
mov
lds
enter
mov
push
xchg
mov
popf
adcb
subb
push
mov
shr
cmpsb
cmp
aad
stos
push
pop
or
adc
adc
adc
sbb
test
cli
loop
scas
lods
pop
sbb
rorl
hlt
push
fmul
nop
cmp
int
pop
fcomps
sbb
loope
sub
and
shlb
adc
rcrb
xchg
push
outsl
cwtl
adcb
adc
clc
xchg
outsl
iret
sub
insl
add
push
jb
sub
sbb
lret
sbb
mov
int3
aad
adc
in
pusha
cli
ret
rcrb
negb
andb
dec
loop
jmp
repz
aad
popf
mov
roll
mov
xchg
fcompl
sbb
sbb
les
xor
pop
scas
xor
shrl
leave
lret
in
lds
xchg
repnz
loopne
push
jmp
scas
or
xchg
ljmp
fdivr
mov
lahf
repnz
sub
xchg
aas
pop
popf
fwait
sub
lahf
mov
test
xor
movsl
adc
jne
scas
sub
jmp
push
in
lds
push
frstor
lods
popf
dec
xchg
imul
or
adc
xchg
pop
ds
add
sahf
pop
repnz
jl
sbb
sbb
addr16
mov
mov
cwtl
jo
sub
pop
mov
in
cmp
js
push
mov
lcall
sbbb
xchg
or
popa
mov
sub
sbb
push
shrl
repnz
pop
ret
decl
push
outsl
fnstsw
jbe
cli
fnstsw
mov
sbb
insb
mov
stos
and
inc
sar
lahf
and
cld
mov
imul
sub
dec
push
push
xchg
push
cli
clc
sub
std
test
movsl
loop
mov
or
adc
pop
loopne
and
and
scas
cmp
jp
or
pop
sub
pop
mov
and
pop
or
jl
dec
inc
jno
inc
mov
lcall
loope
das
call
lcall
mov
push
push
imul
mov
xchg
lock
adc
inc
jns
imul
lahf
je
movsl
in
mov
mov
sub
in
jecxz
mov
fistl
sbb
sub
mov
stos
into
sbb
cmc
push
and
mov
cmp
mov
or
pop
sub
cmp
jge
pop
pop
iret
pop
ror
cli
ljmp
and
pop
or
jne
pop
fsubrs
mov
sub
push
xchg
or
mov
xlat
xor
sbb
insl
fists
push
cmp
xor
imul
repz
push
stos
nop
es
cwtl
add
adc
cmp
jmp
movsl
bound
push
mov
dec
fcompl
test
mov
or
push
aad
imul
xor
mov
roll
mov
adc
pop
adc
rorb
cmp
push
fistps
jle
in
mov
dec
fdivrl
dec
add
imul
dec
mov
adc
lods
push
sbb
cmp
lds
int3
jne
outsb
xchg
pop
lcall
push
cld
jge
fisubrs
mov
or
and
ja
data16
fisubl
lds
shlb
hlt
mov
jle
bnd
pop
push
cli
lock
sbb
and
push
movsl
out
fdivrs
and
mov
xorl
push
ds
mov
ret
cmp
clc
nop
mov
mov
push
shll
fdivs
aam
imul
lods
or
addr16
lods
js
in
stc
mov
mov
cwtl
les
jle
mov
popf
mov
sahf
inc
jmp
jo
sub
sbb
xchg
and
cmp
fisubrs
dec
pushf
leave
jp
mov
std
movsl
jbe
sbb
pop
pop
iret
push
push
sbb
fisttpll
movsl
mov
pusha
and
sbb
popf
inc
ljmp
sbb
inc
push
data16
movsb
add
jns
adcb
jae
adc
mov
das
repz
shrb
aam
inc
lahf
mov
add
mov
jnp
lods
out
push
xor
gs
and
xchg
pop
cli
stos
dec
fistpl
dec
xor
sbb
mov
xor
stc
push
imul
pop
or
dec
fsincos
jae
pop
xor
test
push
sti
mov
nop
mov
pop
rorl
lcall
in
dec
fidivrs
rol
sbb
bound
jnp
fsubrl
pusha
sbb
dec
mov
mov
aaa
inc
dec
xchg
dec
or
mov
jmp
fildl
in
enter
in
fs
push
lcall
lea
adc
push
inc
lods
adc
out
inc
mov
push
fwait
add
push
cs
adc
pop
sub
push
in
popf
sub
fcoml
and
dec
les
dec
movsb
in
popf
and
fbstp
aad
and
movsb
fbstp
push
lds
xchg
mov
loopne
cli
cltd
xlat
scas
shlb
dec
sarb
jge
cmp
xchg
rcll
loopne
mov
jne
jmp
ffree
xor
loopne
push
push
imul
repz
cmp
xor
sbb
scas
fdivl
outsl
fcmovbe
mov
loopne
inc
push
rolb
and
lods
push
mov
xchg
jb
sub
popa
mulb
and
mov
xchg
dec
cli
and
int
in
sar
add
fsubrp
movsl
push
and
and
push
and
sbb
dec
mov
sbb
fdivrl
rol
rcrb
mov
mov
mov
and
fsubl
stos
jae
sbb
push
rclb
sbb
movsb
pusha
sub
or
repz
aad
pop
mov
movsb
int3
pop
loopne
arpl
dec
movsb
js
jp
mov
cld
pop
scas
loopne
lahf
mov
mov
sub
js
and
pop
push
jb
adc
cs
mov
rorb
add
insb
push
sbb
xchg
cmp
ret
mov
hlt
mov
pop
ret
adc
frndint
insl
into
call
insb
scas
xchg
and
push
dec
movsb
pushf
adc
xor
loopne
lahf
xchg
mov
sub
shrl
push
jb
adc
bound
and
push
adc
daa
sti
push
xchg
and
fdivs
fsubrs
outsb
push
xchg
and
insb
fisubs
movsb
pop
jge
mov
pop
movsb
ss
insb
mov
jb
sbb
dec
push
pop
xor
mov
inc
out
jno
xchg
mov
xlat
add
inc
fisubl
sti
cmpsl
push
inc
sub
add
mov
mov
ja
ror
dec
out
fldl
std
cmpsl
mov
cli
mov
push
out
insb
push
sub
pop
out
loop
mov
lds
mov
out
cli
icebp
lods
sub
or
pop
sbbb
xor
xchg
ljmp
adc
out
dec
pop
ja
dec
out
sub
inc
popf
mov
mov
push
popf
push
xchg
sbb
cmp
jp
cmp
mov
ljmp
scas
leave
adc
jl
out
cmp
cwtl
cmpsb
ljmp
xchg
jmp
xchg
shll
pop
test
mov
cltd
mov
mov
sub
scas
push
mov
imul
fisttpll
fcompl
in
lret
js
mov
stos
les
lret
mov
add
sarl
or
xor
adc
pop
addl
push
ror
call
mov
notb
mov
adc
mov
cwtl
and
clc
jae
movsb
in
inc
out
loopne
or
repnz
mov
cld
xchg
xchg
rclb
pop
mov
rcrb
aad
sbb
in
or
pop
sbb
cmp
les
loope
negb
leave
sti
mov
cs
mov
dec
lahf
xchg
pop
outsb
sub
pop
push
mov
cmp
lahf
in
xor
repnz
popf
subb
scas
xchg
mov
repz
xor
out
jecxz
jmp
xor
aas
out
inc
pop
pop
sbb
sub
test
mov
sbb
das
sti
lds
push
or
jns
mov
xchg
pop
das
jecxz
lods
add
ficompl
iret
or
inc
and
push
test
incl
stc
cmpsb
xchg
xchg
shlb
or
pop
push
addr16
mov
out
mov
bound
icebp
jae
jbe
cwtl
mov
in
jg
scas
cmp
cli
cmp
data16
or
mov
push
sub
dec
or
dec
icebp
mov
or
pop
ret
pushf
xor
mov
in
jnp
ffreep
sub
in
popf
jmp
xchg
or
mov
xor
test
jae
pop
inc
jmp
pushf
and
inc
out
imul
in
pop
into
cmc
cmp
mov
repnz
in
push
aaa
test
stos
mov
in
pop
inc
jbe
icebp
movsl
hlt
adc
cli
mov
fimuls
cmp
cmpsl
insb
pushf
mov
jnp
mov
sti
cli
in
pop
cli
in
aam
cwtl
out
jl
dec
add
and
movsb
ja
mov
add
pop
fmuls
pop
cs
xor
fsubrl
cli
fucomi
mov
xchg
xchg
push
loop
sti
cmp
push
call
loope
sbb
cmp
xor
mov
and
or
lea
or
mov
push
call
test
xchg
in
mov
fstps
pop
call
scas
xor
jmp
or
and
xor
mov
pop
adc
pusha
add
mov
mov
or
cmp
sub
and
subl
sub
xor
dec
repz
fidivs
ds
mov
in
push
mov
mov
sub
push
jmp
in
fadds
cmc
mov
and
lock
push
jge
fisubs
add
out
push
shlb
scas
les
sti
cld
in
xor
ds
pop
mov
imul
push
cltd
mov
aaa
pop
ret
fnsave
or
push
int
xchg
jnp
push
xchg
cmc
idivb
sub
rcrb
paddsb
ds
cmp
cmp
mov
fadds
xor
inc
pop
xchg
loopne
push
je
je
call
mov
adc
mov
iret
je
adc
jle
insl
lock
mov
xchg
test
inc
mov
test
adc
aad
xchg
jle
in
into
ret
mov
nop
inc
cld
imul
push
stos
xchg
mov
shlb
jg
mov
aad
fsubrs
ret
mov
in
fnstcw
fisubrl
call
sarb
add
in
subl
outsb
push
test
fmull
ret
xor
in
jae
xchg
lcall
aam
fists
jbe
push
mov
lcall
add
and
lea
pop
sub
mov
shll
gs
mov
cwtl
rcll
pushf
mov
mov
or
inc
dec
loope
mov
mov
shr
mov
jmp
int
mov
cmp
or
cmp
push
adc
mov
cmp
push
jge
sub
xchg
jmp
aas
in
add
mull
enter
xchg
outsl
jmp
lret
push
dec
add
push
pop
lods
mov
lods
jno
insb
gs
cmpsl
push
addr16
mov
mov
fdivs
pop
pop
mov
addr16
jnp
subb
mov
dec
xor
pushl
test
jge
rcrb
and
popf
jl
fsubrl
mov
jmp
adc
mov
and
pushf
icebp
mov
sbb
sbb
and
into
in
jmp
shl
push
push
inc
push
dec
movsb
dec
lods
jne
dec
push
jp
xor
sti
sbb
cli
adc
lods
idiv
push
fcomip
xchg
jo
fbstp
mov
data16
repnz
mov
mov
inc
or
popa
lcall
inc
adcb
mov
jmp
inc
push
cli
jns
in
fwait
test
int
fcomps
xchg
dec
inc
frstor
push
ljmp
es
dec
xchg
xchg
movsl
js
fistl
int
loope
iret
push
js
iret
xor
sub
sub
in
pushf
pop
push
jno
shrb
nop
pop
xchg
add
in
incb
jb
sbb
sub
add
jmp
dec
add
fdivp
in
cmpb
les
adc
fildl
fildll
pop
js
jne
jb
pop
pusha
mov
movsb
nop
pop
std
xchg
in
fisubs
jo
dec
adc
cmp
test
pop
mov
jp
inc
aad
cwtl
mov
push
das
sub
lods
das
enter
lods
loope
pop
addb
mov
sub
xor
mov
and
lods
push
sbb
divl
movsl
loop
iret
adc
cmp
aad
jg
rcrl
or
lods
jbe
dec
push
dec
std
sub
mov
es
cmp
scas
push
jge
rolb
sub
sub
dec
dec
in
push
xor
adc
adc
flds
adc
lds
xor
loop
xchg
sub
mov
mov
call
and
pop
sti
inc
sbb
gs
stc
add
push
xchg
mov
roll
push
push
and
aad
push
dec
cwtl
stos
dec
in
fstpl
rcr
push
pop
aaa
push
push
dec
push
dec
xchg
dec
xchg
sbb
loope
inc
fbstp
shll
enter
sub
mov
jp
lret
movsb
xchg
and
sbbb
push
pop
test
adc
mov
int
mov
ss
lock
mov
sarb
and
aas
clc
cltd
push
jne
imul
je
les
and
mov
push
add
inc
pusha
push
int
mov
test
loope
scas
mov
push
lods
sti
pop
addr16
xor
or
jg
or
shr
popf
into
and
cltd
push
and
lods
dec
gs
sbb
lods
pushf
mov
gs
cwtl
or
dec
add
and
test
pop
int
shl
inc
jb
pop
jmp
jge
xchg
sbb
out
mov
sbb
aam
cmp
or
shrb
movsb
and
cmp
mov
xorb
mov
mov
inc
add
outsl
mov
xchg
jl
sbb
sbb
jbe
ja
sahf
fs
cmpsb
sub
cli
mov
int
lds
mov
mov
loopne
iret
scas
cmp
outsb
adc
test
lods
ljmp
jo
and
jle
inc
movsb
push
push
insb
movsl
dec
push
sti
xor
dec
out
xor
push
xchg
and
aas
out
add
jp
cs
mov
pusha
xor
fildl
xor
imul
out
mov
sahf
mov
inc
ror
sub
push
into
mov
js
inc
rep
push
movsl
or
test
mov
fwait
xchg
and
cld
cmp
jb
out
gs
repnz
xchg
scas
push
pop
pop
daa
and
popf
inc
repnz
mov
loope
es
xor
xchg
call
and
inc
repz
ficoms
sub
mov
movsb
jmp
in
cli
sbb
dec
adc
pop
insl
mov
shrb
dec
enter
scas
push
cld
adc
adc
dec
sti
jp
inc
xchg
ja
jo
inc
sub
jae
lock
mov
push
aad
xor
cli
add
jb
shrl
sub
adc
ds
push
aad
call
jge
cmp
jle
arpl
xchg
push
mov
and
sbb
adc
jmp
rcrb
pop
mov
jg
test
and
lods
mov
mov
ficoms
sub
adc
aaa
mov
xchg
lods
xchg
ss
js
xor
addl
jge
or
jl
sub
pop
dec
enter
mov
std
jb
pop
fists
push
fcompl
jecxz
jl
scas
add
fstl
cmpsb
fistpll
in
std
add
jb
jns
push
add
fwait
mov
lret
jnp
pushf
fists
jl
push
pop
adc
xor
mov
jb
fiaddl
xchg
cli
cmc
test
cmp
sbb
daa
insb
lahf
movsb
ror
popf
test
sbb
xchg
popf
pop
in
dec
sahf
es
add
or
mov
arpl
shrb
adc
adc
out
popf
cmp
icebp
pop
in
mov
mov
cld
inc
or
cmp
stos
push
xchg
jle
jmp
inc
nop
iret
xlat
mov
in
test
fsubrs
sub
push
popf
cwtl
rcrl
fcom
xchg
ret
enter
inc
pop
sti
arpl
add
int
fisttpl
mov
int3
inc
int
rcrl
fdivrs
pop
fwait
xor
nop
movsb
pop
sbb
enter
jp
xchg
cltd
adc
mov
lret
je
or
mov
dec
mov
pushl
fmuls
lods
lods
out
pop
call
and
sbb
mov
push
jl
push
jp
movl
fwait
jle
fwait
fs
popa
xchg
inc
lds
into
xor
mov
sahf
or
adc
out
jne
jle
adc
shr
push
test
pop
jp
cld
mov
popf
push
rolb
xor
adcl
loop
inc
in
nop
pop
lods
in
sti
ss
add
add
ljmp
xlat
ljmp
xor
and
test
mov
pusha
push
add
movsb
sbb
adc
jnp
push
adc
pcmpgtw
push
popa
aaa
jp
and
adc
ds
or
rol
addb
ret
pop
aam
push
out
xchg
mov
outsb
sti
or
das
clc
mov
fdivs
xchg
mov
xchg
push
jecxz
cli
xchg
push
push
pop
stos
mov
mov
ljmp
push
pop
scas
push
cmp
pushf
fs
mov
mov
int3
pop
scas
mov
dec
jp
adc
xlat
repnz
xchg
fsubr
out
mov
and
negb
jp
shll
popa
push
test
add
mov
add
lret
mov
rorl
xchg
pop
lea
ror
inc
jge
and
cld
mov
popf
jp
mov
push
push
adc
mov
mov
clc
cmp
fcoml
jo
sub
fildll
ret
ds
aas
pushf
mov
shlb
mov
sbb
test
sub
pushf
mov
mov
and
fists
and
iret
xor
mov
push
outsl
stc
ret
mov
xchg
ds
jne
sbb
push
negl
loopne
outsb
xor
in
and
fs
or
and
js
add
push
add
pop
fldl
adc
leave
out
mov
nop
out
mov
clc
fnstsw
xchg
fldenv
cmp
or
sbb
pop
icebp
ficoml
int
xorl
mov
test
push
aam
push
stc
xchg
pushl
std
jne
add
nop
pop
fbld
nop
lea
cmpsb
mov
xlat
cmp
inc
cmp
mov
leave
lds
rclb
adc
out
out
sbb
call
or
mov
icebp
cmc
adc
push
jl
aaa
jg
adc
movsl
jbe
call
clc
scas
js
mov
lods
jb
pop
xor
or
int3
xor
push
out
pop
sub
out
rcl
test
test
mov
xchg
mov
addr16
xchg
push
xor
dec
inc
movsl
sub
cmpsb
into
sub
sub
jg
jp
sub
es
mov
inc
rcll
nop
fisubrs
into
into
faddp
and
pop
add
mov
pop
nop
shrb
and
push
stc
push
mov
adc
imul
insl
mov
add
adc
push
lock
in
out
sahf
cld
pop
dec
shlb
xchg
insb
jp
lret
sbb
dec
adc
xchg
mov
lods
mov
pop
inc
and
adc
jb
jge
pop
push
bound
int
jnp
outsb
test
sbb
mov
outsb
mov
imul
fisubrs
xchg
movsl
mov
imul
push
aam
xchg
mov
jge
pop
int3
sahf
sarb
mov
dec
sbb
and
into
jbe
fstpl
test
sub
lahf
fdivl
and
in
dec
mov
insl
pushf
data16
jo
and
movsl
rcrb
mov
in
cmp
lods
inc
xor
inc
xlat
xchg
mov
xchg
or
sbb
jbe
icebp
int
loop
cld
iret
ljmp
and
icebp
movsl
push
xor
movsl
mov
es
adc
and
mov
pop
and
fisubl
in
repnz
fcmovnu
push
cli
ret
fmuls
std
aad
push
sbb
sar
in
ljmp
fsubr
fwait
jae
push
out
push
cmp
mov
cmpsb
nop
into
imul
lods
in
mov
in
popf
mov
push
push
movsb
lds
fstp
pop
push
into
and
sbb
movsl
jbe
aad
pop
xchg
push
sbb
mov
es
lock
rorl
fidivs
mov
pushw
into
xchg
ficomps
leave
cmpsb
pop
dec
push
jp
lods
and
ret
mov
outsb
mov
push
shrb
sarb
clc
loope
or
mov
insl
sbb
or
sbb
mov
sbb
rclb
mov
jb
jo
shr
or
pop
ret
cld
cmp
movsl
mov
insl
lea
cli
and
imul
fimull
aaa
mov
pop
sahf
xor
inc
mov
in
shrl
aad
cwtl
fwait
sub
fs
jmp
jo
ljmp
xlat
in
mov
aad
xchg
div
sub
dec
mov
adc
fs
push
sub
jnp
mov
lds
cmp
aas
ss
scas
push
sahf
fsubs
cmpsb
popl
lods
movsb
jmp
mov
mov
jmp
mov
insl
movsl
pop
jno
mov
push
adc
fsubrs
jmp
jb
mov
filds
in
leave
mov
out
sbb
ret
jo
cmp
and
xchg
and
ja
pushf
loopne,pn
and
movsb
out
adc
mov
sbb
lcall
jmp
enter
mov
xor
push
sub
cltd
loopne
push
mov
jecxz
test
push
pusha
dec
sub
jmp
and
sarb
pop
call
ljmp
dec
sbb
popf
popf
add
fists
movsl
cmp
pop
aam
and
jnp
xchg
pop
mov
and
icebp
xor
clc
push
jns
insb
and
xchg
push
fucomip
out
into
xchg
cmp
stos
fbstp
cmp
arpl
je
push
lcall
and
cs
cmpsb
imul
dec
pop
stos
mov
inc
insl
fidivrs
and
mov
movsl
pop
cmpsb
cltd
inc
rclb
outsl
adc
pop
pop
push
pop
xor
adc
lods
je
aas
enter
fbstp
pushf
jl
ljmp
xchg
mov
aad
arpl
mov
pushf
xchg
and
mov
or
dec
cmp
and
loop
sub
xor
pusha
sbb
daa
sbb
icebp
jge
mov
xchg
jge
aad
pushf
out
xchg
fbld
movsb
sbb
push
dec
les
push
xchg
push
pop
adc
jbe
add
test
loopne
pop
mov
dec
mov
xchg
ds
push
mov
adc
in
iret
mov
jbe
in
imul
adc
mov
dec
and
push
ja
jp
enter
clc
and
fsubp
and
stos
xor
and
mov
decl
sbb
jg
aad
movsb
enter
mov
sub
outsb
mov
into
adc
inc
inc
adc
xor
jmp
shl
adc
ljmp
add
sub
push
push
hlt
repz
or
insb
das
js
das
pushf
nop
xor
fs
iret
das
xchg
inc
mov
xor
mov
mov
nop
and
mov
jmp
pop
pop
mov
ffreep
pop
enter
or
rcrb
fistpll
divb
mov
loop
xor
filds
push
jmp
mov
mov
xor
or
scas
mov
and
xchg
pop
xor
shll
and
xor
cmp
mov
decl
fcomps
and
and
fsubrs
lret
mov
sub
push
xor
fwait
jecxz
sub
push
mov
push
mov
in
xchg
mov
pop
sti
mov
test
leave
inc
pop
jge
push
int3
outsb
shrl
xchg
cld
jge
xchg
sbb
sub
clc
stos
sahf
jns
jb
pushf
push
pop
sbb
jmp
cmp
fs
lea
cmpsb
sub
or
scas
adc
bound
bound
pusha
fidivl
dec
jmp
mov
xchg
dec
out
pop
xor
lods
mov
leave
xchg
cltd
ds
xchg
sarb
outsb
adc
lea
test
xor
mov
jb
shrl
xchg
cmpsl
std
mov
jecxz
pop
pushf
cmp
pop
test
mov
xorl
push
adcl
add
sbb
into
add
pop
mov
jmp
test
dec
adc
and
mov
insl
int
hlt
push
rcll
popf
adc
fimuls
xchg
sub
fistps
out
outsl
sub
in
mov
lock
lret
inc
mov
inc
xor
xchg
sahf
ret
pop
mov
aad
lcall
lock
pushf
mov
xchg
in
add
pop
leave
cld
int
repnz
mov
out
sahf
test
into
outsb
lods
add
and
addr16
and
enter
mov
mov
out
inc
nop
in
out
dec
fxch
pop
in
jno
dec
dec
jl
aam
and
mov
js
and
jae
data16
sarb
fs
pop
adc
int3
lods
rcrb
lods
cmp
xchg
jp
insb
inc
sbb
push
cld
inc
xchg
shrl
xchg
imul
in
repz
lock
and
pop
add
jb
pop
lret
inc
pop
lgs
add
xchg
cmc
mov
add
lret
mov
cmpb
fs
or
mov
fs
add
xchg
mov
test
cli
jne
or
aam
sbb
test
mov
aaa
push
jne
out
xchg
ret
xchg
pushf
lods
sub
sbb
and
mov
outsb
in
leave
push
cld
push
mov
adc
jae
bound
mov
xor
xor
lcall
movsb
sahf
adc
sbb
clc
add
stos
push
push
jmp
int3
jne
je
mov
aam
loope
xlat
hlt
pushf
mov
outsb
popf
and
push
xchg
push
aam
adc
jbe
je
cld
xchg
loope
icebp
jb
pop
aad
xor
dec
dec
pop
in
and
xchg
inc
nop
xchg
and
gs
or
xor
fidivl
rolb
pushf
dec
fsubl
fs
je
fisttpll
pushf
push
clc
fbstp
repnz
test
nop
fldl
dec
sub
xchg
jnp
or
pop
fs
movsb
pop
lea
repz
cmpsb
cs
mov
cltd
sbb
fcoml
sbb
pop
outsb
push
mov
movsl
ds
adc
mov
stc
std
cmp
outsb
test
out
bound
pushf
push
sub
fs
icebp
add
jp
pop
outsb
xor
movsb
push
sub
sub
ds
test
arpl
and
icebp
dec
cmp
jle
lret
daa
xchg
repnz
lcall
or
cmpsl
mov
push
pop
outsb
mov
mov
movsl
outsb
fsubrl
jge
test
test
jnp
dec
push
adc
mov
add
push
out
pop
sub
scas
xchg
push
inc
mov
fld
daa
pop
pop
jb
jmp
in
nop
icebp
push
adc
hlt
pop
mov
mov
daa
xchg
jb
mov
push
or
or
cmpsl
mov
inc
pop
outsb
inc
mov
movsl
push
cmc
call
test
add
inc
mov
pop
iret
push
jnp
out
out
sbb
scas
test
pop
mov
in
pop
movsb
xor
mov
dec
or
xchg
jge
mov
popa
push
into
data16
xchg
out
repnz
xchg
imul
mov
push
les
and
mov
cld
jmp
mov
cmpsl
cld
out
pop
outsb
push
mov
movsl
test
call
add
lock
xor
fcompl
adc
or
or
cmpsl
mov
cmp
test
test
iret
int
push
adc
mov
push
roll
mov
mov
or
or
cmpsl
scas
out
pop
outsb
mov
mov
stc
add
rclb
int
push
incb
push
and
add
cwtl
pop
lsl
pop
in
ret
pop
adc
pop
aaa
add
jmp
adc
int
cwtl
pop
adc
jg
pop
adc
adc
leave
add
push
pop
enter
adc
int
adc
out
xchg
pop
adc
loope
out
dec
xchg
xchg
add
adc
leave
out
movsl
xchg
xchg
sti
mov
int
cmp
out
popa
xchg
xchg
pop
mov
test
out
vpmaxsw
cmc
test
lods
sub
mov
pop
or
ret
sub
pusha
fs
mov
popf
lcall
das
shrl
es
or
sti
popa
lods
push
and
sbb
and
mov
shrb
sbb
mov
adc
in
pop
rclb
rclb
nop
push
dec
leave
sbb
hlt
mov
lea
or
jnp
jb
call
mov
add
push
ret
dec
xchg
or
mov
mov
cmp
aam
sbb
sub
jp
add
in
mov
mov
fisubrl
out
sbbl
in
mov
pop
aad
je
stc
jg
outsl
test
aaa
xor
push
stos
gs
mov
out
mov
dec
fistps
xchg
inc
xor
shll
jbe
movsl
xchg
lcall
popf
dec
fldt
sbb
mov
xor
loop
lea
aas
mov
loop
push
inc
dec
sbb
sub
filds
mov
cs
mov
ret
cmp
js
pop
inc
fcoml
push
arpl
and
sahf
and
stc
mov
mov
pop
push
xchg
add
and
stos
mov
daa
inc
dec
test
mov
test
dec
jl
aam
cltd
ljmp
cmp
movsl
insb
fildll
lahf
adc
fsubr
pop
mov
inc
xchg
mov
dec
fsubl
mov
inc
int
mov
jae
mov
add
xchg
mov
mov
stos
pop
mov
adc
lret
stos
mov
clc
sbbl
inc
inc
xchg
hlt
inc
dec
xchg
lock
dec
xchg
or
add
jns
add
sbb
popa
xchg
sbb
adc
and
fsubl
imul
lret
mov
cld
xchg
adc
push
call
aas
test
push
std
sub
push
mov
and
insb
push
test
andl
stc
or
or
mull
enter
dec
mov
les
xor
fldcw
jge
push
inc
xchg
aad
cmc
inc
pushf
push
mov
cmp
loope
jp
push
orb
out
nop
sahf
test
das
sbb
cwtl
cmp
xor
or
adc
ficoms
fistpll
jl
mov
rep
cmp
mov
iret
fistl
inc
xchg
push
cmp
sbb
xor
push
mov
and
mov
or
mov
or
outsb
test
pop
mov
cmp
mov
cmp
mov
lcall
push
pop
fsubl
pop
scas
movsb
outsb
xor
sbb
and
pop
repnz
insb
inc
jmp
mov
adc
jmp
shrb
mov
lea
mov
pop
xor
and
push
das
and
xchg
stc
pop
sub
xlat
aam
or
pop
loopne
lahf
adc
mov
insl
out
mov
cmp
dec
arpl
fsubl
out
lds
fs
js
jno
std
out
inc
test
adc
inc
add
lahf
mov
xchg
fistpll
push
lds
das
lods
sub
fiadds
add
jnp
cld
and
or
sahf
mov
out
lahf
rcrb
cmc
xchg
lahf
mov
js
inc
divl
sbb
cld
add
loopne
cmc
sub
pop
jl
sti
mov
mov
mov
pop
pop
inc
dec
aam
or
pop
jae
or
cmp
mov
xchg
frstor
mov
mov
jnp
pop
addr16
sub
outsb
ja
push
cvtdq2ps
aaa
jbe
push
pop
pusha
jg
pop
lahf
push
adc
clc
jne
mov
fstpl
sub
sbb
jecxz
sbb
mov
xchg
pop
jge
div
insb
in
cwtl
jle
and
dec
xor
out
imul
das
push
jnp
or
xchg
adc
bound
cmp
mov
cmpsl
jns
vmread
outsl
xor
push
adc
movsb
pushf
xor
js
xchg
pop
jl
pop
dec
orb
test
sub
les
lods
inc
fstps
and
mov
outsb
or
fs
adc
aad
cmp
rcll
push
push
xchg
call
push
or
adc
mov
push
mov
ja
dec
loopne
xchg
aam
mov
xchg
dec
into
push
jno
lods
push
dec
push
dec
pop
sub
movsb
test
negb
and
mov
insl
add
push
and
cld
movsl
inc
xor
pop
mov
fidivs
push
fucomp
cmp
repnz
pop
or
mov
fidivs
imul
lods
push
mov
rcr
xchg
mov
lods
xchg
add
push
and
cmp
push
and
mov
in
fldcw
int3
lods
mov
push
jno
call
inc
ret
and
andb
cmp
cmc
in
fxch
push
rolb
les
lods
lcall
nop
ret
into
adc
aam
data16
push
dec
jmp
int3
lcall
lods
ret
or
xorl
into
xchg
adc
dec
mov
hlt
movsb
xchg
mov
xlat
jb
sub
in
in
adc
mov
jns
int3
push
leave
push
lods
lcall
nop
lret
into
loop
std
cld
lods
out
xor
xchg
cld
fst
sahf
imul
fisubs
xor
pop
cld
lods
xchg
xor
push
sti
push
lods
push
sbb
mov
insl
dec
and
movsl
push
clc
xor
xor
lods
mov
je
push
mov
jno
enter
std
int3
cmp
movsl
dec
in
push
fwait
mov
jb
sbb
in
ror
rolb
les
cwtl
xchg
adc
leave
nop
push
imul
mov
xlat
jbe
pusha
fimuls
imul
push
fimuls
pop
xchg
xchg
pop
nop
xchg
imul
fidivs
or
push
in
into
xchg
movsl
pop
push
sti
inc
lods
jb
sbb
sbb
push
cmp
adc
fiadds
std
popf
aaa
xchg
stos
fwait
mov
fldenv
push
xor
cmp
cli
fstl
jae,pn
into
sub
adc
sbb
sbb
test
lret
int3
dec
rcll
popf
cld
jns
mov
push
mov
insl
test
fmul
and
xlat
jp
lods
xchg
push
sbb
jno
sub
and
and
fnstsw
je
sbb
jle
cmp
push
hlt
push
add
cltd
cmp
stc
mov
outsb
aad
mov
push
rcll
enter
std
test
dec
mov
jb
dec
push
popf
in
add
pop
sar
lds
jmp
dec
nop
pushw
into
mov
inc
mov
in
lds
xlat
dec
push
into
lcall
and
pop
or
ret
das
insl
dec
fwait
xchg
push
xor
push
dec
jno
in
or
dec
jo
sub
pop
andb
rclb
icebp
int3
fisubs
mov
xchg
adc
fdivrp
xor
adc
adc
jge
pop
int3
lcall
lods
dec
sbb
and
iret
pop
push
xchg
mov
jle
sbb
and
push
inc
push
sbb
inc
pushf
fsubl
frstor
mov
adc
fcmovbe
rcrl
in
lods
or
jnp
inc
jmp
int3
cld
sbb
lods
mov
insl
test
std
jmp
into
jle
pop
mov
gs
xor
pop
mov
jno
mov
inc
testl
movsl
and
push
shr
int
out
shr
pop
add
cld
pushf
int3
jb
gs
xchg
in
add
pop
leave
cld
leave
lods
loop
sbb
and
leave
ds
inc
int3
jb
popa
pop
xchg
cld
or
push
mov
insl
mov
enter
mov
ret
push
cmp
sbb
push
cmc
in
fxch
push
rolb
aam
adc
std
pop
nop
xchg
imul
ficomps
dec
lods
dec
mov
add
mov
imul
sbb
and
mov
outsb
and
mov
push
fstl
cmp
cli
fsts
cmp
cltd
sub
mov
int3
lcall
lods
fidivl
in
test
mov
cmc
fidivs
test
pop
push
jno
fcoms
in
test
inc
ljmp
xchg
push
sbb
mov
insl
pop
and
push
mov
in
les
cmp
push
xor
in
push
add
stc
mov
outsb
sub
jo
sbb
int
enter
icebp
nop
ds
cwtl
adc
push
test
cmp
push
cli
xchg
adc
mov
int3
lcall
lods
fidivl
sub
lods
mov
jno
pop
push
into
jbe
imul
dec
pop
sub
mov
fstpl
sub
mov
jl
adc
jbe
push
adc
int
push
jo
sub
pop
xchg
movsl
cmp
push
shr
int3
push
rolb
pop
sub
mov
jb
js
mov
rcr
pop
or
push
push
int3
inc
adc
sahf
jns
mov
faddp
sub
mov
fldlg2
pop
roll
jno
insl
lods
adcb
inc
and
and
adc
fwait
enter
lods
push
and
sub
aad
adc
mov
sub
stc
in
loope
push
es
movsb
jb
or
fucomp
ror
rolb
mov
sub
rcr
incb
mov
jno
sub
in
jmp
push
sub
and
sub
rcll
jne
mov
int3
lcall
lods
idivb
loope
push
std
inc
nop
jbe
fs
mov
adc
adc
pop
loopne
ljmp
into
dec
sbb
and
add
and
push
test
lods
mulb
cwtl
movsl
es
jno
adc
popa
jmp
les
out
imul
push
fdivrp
loopne
sahf
inc
outsl
and
roll
jne
pop
lods
sahf
sbb
add
lods
mov
sub
lock
js
roll
roll
rolb
loope
daa
sbb
mull
push
add
sub
inc
inc
sub
inc
xchg
fdivr
and
shr
gs
adc
xor
outsb
push
and
gs
and
add
lods
jne
adc
mov
popf
iret
ficoml
sub
mov
and
push
arpl
pop
insl
ret
mov
arpl
sbb
pop
cmp
stos
cwtl
xor
dec
sub
adc
stos
lock
sbb
stc
sbb
es
add
iret
mov
adc
sub
sub
mov
movsb
popf
fidivs
push
into
mov
pop
adc
enter
out
jmp
pop
pop
in
inc
insb
jmp
fwait
in
cmpsb
int
push
mov
bound
lds
mov
btr
push
insb
test
sub
dec
inc
iret
jecxz
ret
int
lcall
sub
dec
cmp
addr16
xchg
inc
mov
lods
jecxz
sub
xor
popf
cmp
push
sahf
mov
xor
adc
add
mov
repnz
cmpsl
psubq
push
sub
dec
jp
sti
add
imulb
int3
int
xor
dec
loop
popa
inc
cmp
fcomps
hlt
mov
gs
lock
ss
scas
xor
and
es
cld
lea
fs
fcomps
std
jb
or
jle
clc
xor
add
cmp
sub
pop
sbb
fistps
das
mov
int
scas
push
int3
je
inc
leave
mov
fstps
sti
mov
and
jne
out
jg
inc
mov
jmp
popa
xchg
inc
inc
fldt
push
mov
int
jl
xchg
push
mov
pop
sbbl
inc
loop
aaa
jge
mov
aam
loopne
shrl
ret
repnz
iret
mov
and
sub
or
sub
xchg
push
push
cmp
cmc
incl
xchg
xchg
jle
rorl
add
and
js
adc
je
or
jecxz
rcrb
xchg
mov
imul
and
fdivs
xchg
xor
imull
jbe
cwtl
lods
mov
add
fisubrl
jmp
std
out
test
push
sub
push
icebp
xor
int
cwtl
inc
ljmp
movsb
cs
sbb
cmp
xor
std
icebp
and
repz
stc
test
xlat
cmp
lods
xor
pop
jg
jne
pop
add
xchg
cmp
sub
lahf
pop
jmp
push
mov
in
sub
sbb
pop
lods
mov
in
jnp
pop
jb
data16
inc
mov
adc
mov
insl
rcrl
adc
sbb
jmp
lods
aaa
mov
rcrl
iret
loop
in
aad
jo
movsb
repnz
lock
cmp
sbb
or
pop
gs
xor
pop
aam
clc
fcompl
les
jno
lods
pop
scas
jnp
jle
xorl
das
test
lods
jg
bound
lods
mov
les
call
daa
icebp
pop
jae
inc
push
fwait
dec
mov
jecxz
cmpsl
scas
arpl
pushf
gs
sub
data16
popa
cmp
pop
inc
cmpsl
out
mov
xchg
cli
fnstcw
pop
jmp
fdivs
or
xchg
shll
je
sub
mov
int3
xchg
and
nop
dec
inc
sbb
imul
fsts
mov
loope
jg
ss
imull
fisubl
push
sub
jp
sub
sahf
sub
dec
data16
cmp
scas
loop
pop
add
in
arpl
mov
push
dec
enter
std
into
dec
js
inc
insb
xchg
adc
repnz
and
not
lret
inc
out
aaa
sbb
xor
adc
addr16
mov
repz
jmp
test
loope
jo
sub
daa
int3
sub
and
mov
mov
push
add
jbe
fwait
out
sahf
or
mov
mov
add
popa
xor
test
sar
adc
sahf
sub
dec
jns
xor
dec
idiv
mov
mov
movsl
push
push
arpl
sbb
xor
push
pusha
jbe
mov
xchg
jno
or
rcll
mov
insb
lahf
movsl
mov
push
movsb
mov
and
pusha
clc
lea
in
xchg
in
xchg
in
xchg
jmp
lret
xchg
or
mov
sti
ss
adc
aam
std
rorl
std
adc
clc
std
add
out
mov
xor
shrb
add
mov
xor
jle
add
outsb
add
pop
add
add
add
add
add
incb
test
push
in
into
push
hlt
sub
les
sahf
add
adcl
fs
cmp
pop
cld
or
cwtl
test
jge
mov
dec
sbb
xchg
push
add
push
cmp
pop
mov
cmp
cmpsl
cmpsb
pop
les
stos
mov
popf
pop
mov
jmp
mov
ret
clc
out
mov
loopne
xchg
scas
jnp
dec
mov
push
outsb
jbe
push
add
push
loop
dec
test
es
movsl
push
imul
mov
and
inc
sar
test
fidivrs
lock
pushf
dec
test
ficoms
add
mov
loopne
iret
pop
lds
sbb
cmp
andl
mov
aas
dec
jg
sbb
adc
push
mov
mov
fisttps
pop
lea
data16
in
in
lret
jge
push
jl
add
les
inc
dec
pop
xchg
dec
movsl
imul
jbe
mov
sbb
jne
stos
jp
cmpl
aas
out
and
cmp
add
mov
adc
dec
mov
pusha
or
jmp
test
repz
xor
or
mov
stos
or
mov
icebp
in
cmp
imul
sbb
push
popf
inc
mov
adc
and
stos
rorl
loop
hlt
mov
or
test
mov
adc
push
mov
push
ljmp
xor
nop
push
push
pop
mov
sub
lret
mov
incl
andb
add
xchg
mov
dec
addr16
dec
jo
dec
xchg
testl
sbb
repz
or
sbbl
sti
inc
jle
push
ffree
sub
scas
push
xchg
rcrb
test
aas
jno
adc
iret
sub
mov
into
out
adcb
cmpsb
into
or
into
mov
push
inc
mov
push
sbb
cld
dec
mov
fcomp
mov
xlat
or
pop
dec
shlb
addb
movsl
cmpsb
popf
insl
jb
mov
sub
jmp
loope
mov
adc
pop
fidivl
lock
mov
jg
lods
xchg
jle
in
dec
mov
inc
pop
jb
and
mov
dec
xlat
or
fisubl
pop
pop
cltd
test
fisubrs
iret
cwtl
pop
push
jl
cmp
pushf
mov
dec
cmpl
mov
mov
jl
fwait
cmpsb
pop
les
stos
push
fnstcw
test
add
lahf
jo
ret
scas
movsl
pop
lds
test
cmc
cwtl
cmpsb
stos
subb
pop
scas
test
ss
iret
jle
and
out
std
pop
std
pop
lea
test
push
mov
clc
inc
lea
lea
mov
xchg
lea
xchg
push
cmpsl
xor
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
push
or
pushf
in
dec
lret
dec
mov
ja
push
lcall
push
icebp
mov
push
icebp
cmpsl
mov
icebp
xlat
mov
icebp
mov
sbbl
add
sub
cmp
std
lret
and
mov
rclb
lcall
push
jp
add
push
adc
pop
mov
push
dec
mov
push
cmp
push
push
sbb
mov
cli
mov
push
ljmp
test
fdiv
mov
mov
shlb
lcall
ss
add
pop
pusha
xor
cmp
inc
xor
sbb
mov
xor
ljmp
mov
dec
call
push
sbb
sbb
jg
ljmp
cmp
push
sub
push
sbb
push
or
push
cli
jbe
push
ljmp
daa
lret
cmpsb
mov
out
fcompl
mov
icebp
mov
mov
icebp
fbstp
icebp
pushl
out
pop
mov
icebp
cmpxchg
comiss
cmpsl
pop
pop
stos
mov
dec
mov
push
out
andb
xorl
xchg
pop
out
adcl
scas
andl
filds
out
adc
inc
push
mov
cmp
mov
sti
mov
push
stos
dec
cmp
addr16
lahf
lea
lea
in
lea
scas
push
mov
cmp
jo
enter
testl
in
xchg
pop
sub
scas
lret
pop
addr16
push
pop
pop
push
pop
outsb
push
sbb
xchg
push
push
sbb
xchg
test
mov
out
fnstcw
dec
sub
ds
pop
mov
icebp
cmpxchg
cmc
cmp
jno
adc
jg
push
icebp
outsl
mov
icebp
lahf
mov
icebp
mov
icebp
mov
mov
icebp
fbstp
icebp
pushl
out
pop
mov
icebp
cmpxchg
ret
sbb
jmp
or
push
movsl
cmpsl
xor
neg
push
fscale
test
jl
popf
mov
sbb
ss
xlat
shlb
cwtl
xlat
and
mov
add
mov
push
inc
push
jp
xor
dec
std
and
pop
std
adc
stos
std
add
mov
jmp
mov
jl
cmp
inc
mov
pop
std
mov
lea
lea
ljmp
cmp
push
sub
push
sbb
push
or
push
clc
jbe
add
jns
dec
fdivrs
dec
enter
mov
ja
push
cwtl
push
and
icebp
mov
mov
icebp
fnsave
sbb
add
push
shlb
loope
lods
in
sub
out
out
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
je
mov
mov
xchg
mov
les
stos
outsb
fcomps
data16
sahf
fldcw
xchg
fnstenv
mov
or
into
fnstcw
test
testb
push
pop
std
sbb
mov
in
call
xchg
xchg
out
test
jmp
adc
out
mov
dec
and
and
ja
mov
icebp
test
cmp
dec
and
pop
and
test
aam
and
mov
push
cmpb
fnstenv
mov
jns
xchg
add
mov
adc
push
pop
std
sub
push
lock
mov
inc
add
lret
lods
cmpsb
pop
les
mov
lret
cmpps
rdmsr
std
js
push
std
pusha
push
push
std
push
push
push
std
pop
push
jp
sub
push
std
adc
stos
std
sbb
mov
std
or
mov
loopne
outsb
add
push
out
dec
dec
out
dec
inc
jmp
sub
add
andl
push
adcl
outsb
addl
clc
pop
sbb
mov
push
or
mov
hlt
mov
test
inc
std
sub
lods
dec
or
insl
mov
xchg
test
movsl
lea
std
fisttpll
xor
int
enter
lock
or
lea
loope
into
xchg
pop
pop
jl
cmp
cld
sbb
shrl
idivb
in
out
in
out
in
out
hlt
dec
out
or
stc
and
add
test
mov
sub
lods
decl
pop
out
andb
subl
xorl
cmpl
adcl
roll
shl
or
cmc
adc
out
mov
in
ljmp
or
jno
mov
fsts
ja
push
je
or
jbe
push
fs
push
insb
dec
adc
icebp
in
mov
mov
cmp
mov
jecxz
adc
push
jl
cmp
inc
push
test
pop
mov
xchg
inc
cmp
mov
stos
mov
cmp
mov
cmp
mov
cmp
or
mov
dec
test
scas
out
in
out
in
out
in
push
jbe
cmp
dec
in
out
in
out
in
repnz
dec
int3
mov
lret
jecxz
repnz
add
orl
in
pop
pop
mov
push
inc
mov
push
dec
mov
test
jnp
das
mov
mov
xor
sbb
lret
sbb
lahf
dec
mov
push
addr16
mov
and
sub
pop
fsincos
sub
pop
adc
mov
loope
outsl
bound
add
inc
lock
dec
or
pop
push
sarb
and
adc
fistpl
pushf
sbb
adc
mov
shrl
emms
jle
aaa
lea
push
aas
dec
dec
popf
mov
mov
icebp
lock
icebp
call
mov
mov
mov
cwtl
scas
xchg
out
in
sbb
incl
mov
lcall
sbb
push
call
ret
jl
dec
jp
inc
cmp
scas
xor
and
outsl
stos
sahf
pop
or
xor
xor
pop
dec
lret
imul
add
aaa
out
cmp
mov
shl
rol
adc
push
idivb
push
outsb
xchg
or
notb
das
jg
jno
adc
cwtl
push
jae
nop
mov
xrelease
arpl
add
add
cli
push
inc
lods
jmp
test
insl
jbe
jae
mov
cmp
mov
fwait
les
mov
cs
and
aam
inc
enter
and
movsb
fidivrs
xchg
faddl
dec
aas
movsl
aaa
dec
adc
in
or
mov
adc
aaa
loope
in
xchg
dec
nop
dec
les
push
data16
push
add
mov
mov
dec
insl
add
ret
clc
rorb
stc
xchg
lds
xlat
jp
push
add
cmc
fidivrl
xor
dec
mov
loopne
gs
sub
or
mov
xor
negb
insb
sbb
pop
test
test
inc
sub
daa
adc
adc
daa
sbb
sub
ljmp
xchg
jecxz
nop
dec
jge
and
lds
mov
push
hlt
call
mov
xor
xor
push
xor
leave
mov
jge
mov
lods
decl
pusha
int3
pop
jecxz
repz
cmp
cltd
cmpsl
jp
dec
jne
outsb
dec
push
push
mov
inc
es
lds
insl
nop
fldl
adc
xchg
in
outsb
fmul
test
js
stos
mov
pop
push
adc
mov
xchg
or
cwtl
pop
pop
jnp
cwtl
sbb
xchg
mov
insl
mov
cmp
dec
jecxz
ljmp
add
inc
pushf
push
adc
leave
add
adc
mov
cltd
test
inc
adc
jl
cmp
movsl
mov
push
or
xor
jg
and
xchg
pop
es
pop
sbb
jecxz
outsl
push
and
loopne
xchg
in
pop
leave
adc
inc
xor
int
stos
fnstsw
adc
mov
mov
cmp
aaa
mov
mov
lock
dec
lret
jl
dec
repnz
xchg
push
movsl
insl
mov
pop
into
ret
sbb
fnstenv
mov
add
lea
or
cltd
pop
xchg
out
cmpsl
insb
in
es
jmp
pop
fsubs
stc
dec
pslld
mov
lret
adc
xor
test
or
nopl
mov
push
mov
mov
pop
fnstenv
adc
in
loope
in
sbb
push
hlt
cwtl
out
aam
jae
pop
bound
gs
enter
mov
into
data16
push
sbb
lods
pushf
inc
insb
push
sbb
push
aam
insl
pop
push
sbbl
inc
mov
pop
sbb
scas
std
add
mov
std
cld
push
addb
mov
int3
lret
stc
inc
pop
jns
push
nop
add
sbbb
push
pop
rolb
sub
xchg
jb
xor
dec
cld
and
push
or
push
les
shrl
jns
inc
xchg
scas
xchg
push
repz
gs
dec
xor
push
mov
idivb
mov
cmp
xchg
add
out
enter
daa
sub
std
sbb
pop
pop
popa
out
sbb
sub
dec
pushf
adc
cld
push
xlat
scas
mov
xchg
idivb
dec
decl
rorl
fisttps
clc
out
dec
pop
sahf
mov
sub
mov
ja,pn
jp
jnp
xlat
add
sub
dec
mov
and
mov
cmp
mov
cmp
or
ja
push
jmp
and
stos
dec
push
out
dec
inc
clc
dec
inc
je
scas
lahf
add
or
mov
push
jnp
or
imul
jne
es
pop
mov
mov
cmp
mov
cmp
or
insl
mov
cmpsl
mov
dec
les
mov
out
data16
dec
adc
lret
cmpsb
sbb
cmpsb
cmpsb
mov
sub
dec
push
pop
fs
bound
and
fldl
xor
adc
enter
or
sub
and
mov
data16
test
push
mov
mov
clc
dec
insl
mov
xchg
sub
fwait
into
ljmp
mov
fdivr
in
cmp
in
sub
mov
popf
out
sar
mov
inc
sub
inc
mov
adc
sub
mov
pop
insb
push
and
lds
ds
pop
xor
jo
shlb
lds
imul
mov
popl
pop
mov
cwtl
repz
mov
jecxz
sahf
dec
mov
addr16
xchg
jp
mov
out
adc
daa
pop
icebp
sbb
pop
sahf
movsl
and
cwtl
lock
fptan
adc
jp
and
and
inc
test
inc
pop
and
mov
mov
jg
cwtl
mov
mov
in
xlat
dec
pop
xor
dec
addl
outsb
adc
sbb
and
test
rcrl
ror
ds
dec
xchg
test
dec
adcl
insb
sbb
adc
enter
sti
test
inc
outsb
dec
push
inc
cmc
inc
outsl
leave
imul
jne
push
test
stos
cmp
mov
clc
movsb
outsb
aam
ljmp
aaa
cmp
sarl
inc
int3
pop
jbe
push
pop
jbe
inc
pop
or
jns
push
cs
fildll
pop
enter
std
mov
mul
add
pop
xor
jns
pusha
mov
outsl
mov
imulb
xor
and
xchg
xor
add
mov
rorl
in
aad
idivb
js
jle
push
stc
mov
adc
push
decl
in
sti
push
les
mov
js
xor
test
mov
push
push
lret
mov
lret
daa
cltd
stos
jnp
xor
inc
in
out
in
in
mov
pushf
mov
mov
test
push
call
fsubrl
and
add
mov
lea
std
and
pop
dec
fs
lods
sahf
push
adc
cmp
test
push
mov
fstps
dec
pop
jp
dec
inc
js
mov
mov
aaa
mov
scas
test
mov
js
out
imul
or
addr16
fwait
jle
repz
jo
inc
shrl
loop
arpl
fwait
jb
mov
push
adc
push
repz
dec
dec
test
hlt
mov
pop
test
dec
xor
add
fs
fwait
sbb
sbb
sub
insl
divl
adc
pop
sbb
mov
icebp
clc
sub
stc
les
enter
es
mov
dec
icebp
jne
push
icebp
insl
mov
icebp
mov
fstps
mov
cmp
cmp
js
dec
jge
adc
mov
icebp
or
mov
mov
fadd
test
insl
push
lds
nop
mov
mov
mov
sti
dec
adcb
insb
pop
cld
adc
xchg
pop
sub
mov
push
sub
pop
popf
ror
mov
jl
stc
sbb
outsb
jne
cmp
pop
mov
in
xchg
inc
movsb
push
mov
mov
cmc
lds
outsb
sbb
or
jbe
mov
cmp
fs
mov
out
or
icebp
cmc
lcall
xchg
sub
or
cltd
inc
movsb
bound
sbb
mov
dec
and
lds
test
arpl
or
les
dec
cld
jns
dec
adc
insb
test
fincstp
cltd
push
mov
push
ror
fmulp
adc
lds
xorb
adcl
loop
xor
sbb
xchg
negb
adc
push
sbbl
mov
jb
or
sahf
test
inc
lds
cmp
js
adc
subb
push
mov
push
pop
fwait
bound
adc
mov
mov
dec
jp
xchg
lret
sub
cld
xor
in
imul
and
jg
xor
clc
push
leave
pop
push
pop
dec
popa
jae
out
sbb
daa
jne
pop
and
fiadds
adc
jecxz
repnz
add
sbbb
inc
mov
push
add
sbbb
mov
dec
mov
cmp
adc
xchg
or
out
adcb
dec
dec
push
sub
mov
ficompl
or
xor
aas
ficoms
pop
pop
test
aas
jge
std
push
aam
push
or
pushl
fldcw
dec
nop
movsb
lods
sbb
cmpsb
incl
xchg
sub
push
and
or
dec
call
push
pop
pop
pop
loop
pop
jp
cmp
inc
xlat
ss
xor
out
outsb
out
jge
out
jl
sbb
xor
push
scas
xchg
enter
mov
in
xlat
dec
and
push
xchg
mov
shrb
push
and
inc
jbe
inc
dec
imul
mov
inc
subb
loopne
adc
mov
in
in
fcoml
and
push
cmp
bound
or
lahf
sbb
adcb
rol
mov
scas
push
jle
or
inc
lret
fs
popf
mov
xor
jl
add
movsb
rolb
inc
rcrl
test
add
mov
pop
dec
outsl
sbb
repz
or
sbbl
mov
dec
sti
invd
xchg
clc
lcall
and
xchg
test
cs
je
imull
punpckhdq
pop
or
movsl
sub
sub
sub
dec
ljmp
jl
imul
and
adc
mov
mov
fldt
pop
gs
inc
mov
push
sub
stos
push
sbb
cmpsb
insb
adc
cmp
mov
cmpl
push
aam
decb
lods
inc
jl
jle
addr16
sbb
jle
adc
push
rclb
adc
stos
sbbb
jno
xor
lret
inc
cmc
or
xlat
dec
test
dec
sub
mov
add
pusha
push
out
mov
jge
cld
add
dec
rcpps
inc
dec
xchg
inc
add
sub
data16
push
xchg
fwait
sub
imulb
cmp
jbe
mov
pop
outsb
icebp
loope
xchg
adc
insb
test
insb
push
push
push
xchg
and
dec
mov
cltd
in
or
daa
mov
mov
out
out
sub
pusha
push
imul
add
outsb
in
insb
insb
mov
pop
pop
icebp
push
xlat
cmpsl
inc
jp
jns
fildll
sub
xor
cwtl
adc
inc
loop
mov
cmpl
adc
ret
loop
xor
add
ljmp
loopne
dec
repz
cmpsb
mov
repz
mov
lahf
cmp
mov
jnp
sub
in
out
adc
push
or
movsb
js
add
test
dec
inc
sub
jno
push
and
dec
mov
adc
in
inc
xor
sub
out
pcmpgtw
push
loopne
add
xchg
jno
adc
mov
mov
push
int
loope
jl
hlt
push
stos
addl
sahf
pop
pusha
push
inc
call
mov
nop
dec
outsb
sub
ja
mov
stc
cmp
adc
jns
fstpl
out
push
lock
shlb
lcall
and
mov
dec
add
hlt
push
rol
mov
jl
pop
cmc
rcrb
mov
mov
sti
popf
es
jp
pop
jbe
mov
push
test
cmp
dec
mov
icebp
jg
adc
cbtw
push
inc
xchg
mov
xor
daa
scas
into
sub
xlat
loopne
adc
cmp
jge
and
mov
rcl
lret
movsb
ret
sub
lock
out
cmp
pop
lret
inc
les
ds
pop
rcll
leave
pushf
xchg
cli
icebp
xchg
pop
out
mov
pop
ja
fcomi
inc
xchg
mov
imul
push
sub
push
shr
mov
jl
dec
xor
jmp
push
jns
cli
and
rorl
lods
lods
cmp
into
sbb
or
mov
aam
and
outsb
cmp
dec
xorl
imul
addb
jl
inc
adcb
sahf
lcall
pop
das
out
inc
xchg
lret
and
jno
push
cmp
adc
mov
ss
pop
repnz
xchg
pushf
scas
xchg
mov
sti
and
inc
mov
es
dec
cli
xchg
leave
mov
icebp
push
bound
jl
sub
shll
jbe
mov
mov
mov
rcll
mov
mov
push
or
lods
mov
es
xchg
pop
lds
in
fstpt
xor
aad
fcoms
insb
mov
repz
stos
addb
lds
xchg
popa
test
mov
inc
cld
mov
mov
and
sbb
cmp
call
in
out
in
in
or
xchg
mov
adc
jp
mov
loopne
les
push
fsts
and
cmpsl
out
inc
lea
popf
into
jge
mov
adc
inc
cs
inc
call
in
mov
push
sub
nop/reserved
cltd
adc
test
jnp
dec
aam
xchg
xchg
outsl
and
mov
clc
lods
ja
inc
inc
xor
xchg
stos
sub
pop
xchg
test
xchg
pushf
lods
mov
jecxz
push
cmc
in
insb
sub
cltd
fcomps
push
or
mov
repnz
pusha
or
mov
inc
icebp
out
or
lods
gs
sub
inc
push
movsb
jno
aaa
into
pop
fstl
push
lods
std
or
jl
mov
hlt
mov
jne
xchg
fsts
mov
fisubl
sbb
jno
stos
inc
shlb
xor
mov
mov
scas
test
outsb
ljmp
mov
loopne
rclb
jns
inc
movsl
jbe
mov
insl
sub
xor
inc
shl
cmp
adc
call
mov
fldt
mov
or
xor
push
adc
fmull
imul
mov
in
inc
cmp
add
dec
mov
leave
dec
push
lcall
pop
sub
sub
aaa
mov
fwait
js
mov
mov
mov
sub
call
dec
sbbb
or
xor
faddl
inc
test
rcrl
es
sbb
push
aam
dec
jns
mov
cmp
adc
aad
out
bound
pop
pop
mov
jbe
add
inc
into
mov
adc
adc
push
ret
mov
loopne
mov
test
js
add
cs
and
insl
sub
jnp
cld
jae
lds
loopne
dec
std
lds
int3
pop
dec
pop
jle
dec
cmp
push
aam
clc
cmp
push
cmpsl
inc
push
cmpsb
mov
fisubs
lods
arpl
inc
add
ds
outsb
je
or
lock
push
mov
int3
repz
dec
adc
dec
fldl
repz
in
and
and
sub
mov
out
bound
pop
sarb
adc
gs
sub
pop
loop
mov
mov
jns
pop
out
inc
xchg
push
jne
push
pushf
adc
pop
nop
sbb
jne
fcompl
mov
hlt
mov
xor
enter
cmp
and
sub
lods
sbb
aam
outsl
shl
sbb
add
mov
test
adc
cmp
incb
push
push
dec
push
add
stos
imull
push
or
pop
shl
sub
jle
xor
std
jbe
sub
lds
std
in
xchg
les
movsl
test
sub
push
lcall
adc
insl
adc
les
addr16
jp
jbe
test
inc
mov
pop
mov
lods
rorb
dec
add
mov
imul
into
neg
mov
push
push
or
subb
jle
scas
cltd
push
mov
push
mov
push
cmp
xchg
sbb
popf
movsb
pop
add
mov
xchg
mov
shll
xchg
test
shlb
insb
pop
add
cmp
push
insb
into
or
pop
sub
dec
aad
data16
sbb
jl
pushf
dec
movsl
test
xchg
mov
pop
jp
leave
adc
outsl
clc
push
or
push
popa
mov
cld
xchg
jbe
out
sbb
sbbl
xchg
hlt
mov
pushf
les
ss
mov
mov
clc
loopne
sub
pop
and
jbe
mov
push
loop
inc
sub
scas
loopne
push
mov
pop
pop
aad
or
jno
sub
sbb
xchg
sti
out
push
cltd
and
push
pop
xchg
in
sub
jbe
loop
clc
jne
test
inc
adc
in
cld
push
or
sbb
push
pop
sti
jl
js
push
mov
aam
loopne
and
push
xchg
aam
fucomi
hlt
loopne
frndint
fidivl
mov
data16
lret
repnz
jmp
repz
sti
and
add
sbb
adc
js
inc
nop
mov
push
or
incl
push
test
in
es
lret
sbb
out
mov
mov
rorl
std
ret
mov
out
leave
lcall
out
cld
sarb
adc
je
xchg
push
test
lock
lods
in
movsl
cmp
cli
leave
sbb
icebp
je
inc
enter
push
jo
xchg
adc
dec
and
push
and
pusha
push
dec
push
jge
repnz
lock
dec
fucomp
loope
mov
adc
pushf
ds
stos
and
test
lea
lods
add
data16
and
test
roll
dec
in
dec
xchg
push
call
lods
sub
pop
xchg
push
mov
push
jle
xor
movsb
les
in
std
leave
test
shrl
nop
cs
mov
xchg
mov
mov
xlat
push
xor
adc
std
inc
push
dec
ljmp
test
push
pop
fsubs
inc
fiadds
mov
xor
xchg
cmpl
mov
inc
sbb
repz
push
mov
insl
inc
cs
in
mov
and
cmc
ljmp
inc
clc
cltd
shll
dec
les
push
jmp
pop
add
jns
xchg
cmp
test
xor
mov
rol
mov
push
movl
ja
mov
mov
xchg
xchg
cmp
movsb
jmp
adc
jno
ja
sbb
pop
out
rcr
xchg
stos
sub
cmova
out
jp
mov
mov
mov
and
movsl
test
jp
shl
dec
out
adc
mov
das
negl
mov
pop
in
mov
int3
clc
sbbb
mov
cmpsl
mov
insl
js
sub
into
in
mov
outsb
mov
cli
shrl
nop
fstps
das
rcrl
push
mov
push
andb
ret
movsb
std
repnz
rcrl
xchg
adc
adc
inc
pop
in
pop
jecxz
jl
pop
cmc
pop
xor
dec
sub
adc
stos
in
xor
or
out
push
and
in
inc
jecxz
mov
cmovae
dec
push
loopne
sub
mov
mov
pop
push
adc
inc
rep
lods
popf
push
mov
xchg
and
jp
mov
ret
fcmovu
clc
xchg
mov
inc
pop
adc
ds
sbb
xchg
dec
xor
jbe
fiadds
xor
cmpsl
pop
arpl
sbb
aam
xlat
loopne
or
icebp
pop
push
push
add
adc
ljmp
dec
es
stos
test
out
pop
fdiv
aam
data16
or
mov
inc
mov
fildl
mov
cmpsb
jb
addr16
and
insl
leave
push
xor
or
inc
pop
jecxz
shlb
add
dec
pop
jp
shr
xchg
fmuls
xor
and
repnz
popf
mov
inc
add
xchg
mov
cmp
and
in
cs
repz
push
mov
leave
inc
pop
xchg
push
les
jge
test
int
int3
and
cwtl
sar
lcall
jecxz
jl
lds
inc
hlt
inc
mov
sub
int
rorl
fs
movsl
ret
fwait
add
fsubrs
mov
mov
pop
dec
rorb
jb
mov
ds
jle
mov
pop
mov
je
xchg
cmp
fisubrl
cmp
int3
insl
xor
and
and
push
mov
lods
sub
adc
cmpsl
pop
std
mov
xor
or
hlt
adc
cld
jge
jne
andb
cld
mov
jo
bound
push
aaa
add
mov
into
imul
movsb
scas
sbb
popf
fildll
sub
pop
ret
in
ja
into
push
mov
mov
mov
mov
mov
popa
das
insb
aaa
dec
enter
shrl
leave
adc
cmp
cmp
ret
cltd
outsb
test
push
jne
jnp
push
fstl
cltd
mov
popf
inc
cmp
sub
mulb
lcall
xchg
sbb
mov
cmp
lods
inc
push
mov
mov
clc
inc
push
scas
sub
testl
aam
sahf
loopne
xor
adc
sbb
nop
dec
cmp
push
imul
push
fbld
fwait
push
push
xchg
xchg
aad
push
xor
icebp
adc
aam
std
inc
adc
inc
dec
enter
insb
adc
push
cmp
push
out
jmp
ds
popa
das
fnstcw
or
bound
mov
fisttpl
cs
ds
repz
mov
clc
cmp
sahf
loop
cs
in
vmovhpd
xchg
and
xchg
insl
sub
push
inc
jl
jbe
push
push
inc
mov
roll
xor
mov
dec
xchg
sub
mov
ja
mov
dec
fs
dec
aad
insb
xor
rorb
loop
mov
arpl
mov
xchg
push
cwtl
adc
jle
mov
inc
mov
mov
sahf
fldl
mov
pop
dec
ljmp
push
push
dec
xor
gs
push
jne
adc
mov
test
test
push
mov
fidivs
adc
add
mov
shll
adc
xchg
es
push
dec
xlat
and
jle
iret
mov
inc
push
sbb
movsb
and
insb
xchg
mov
inc
outsb
xchg
xchg
insl
aad
push
lock
mov
mov
in
pop
cltd
lcall
pop
std
push
inc
jbe
mov
out
fcmovb
mov
addb
inc
mov
sbb
ljmp
cmp
xor
mov
push
mov
push
lcall
fnstenv
mov
lds
push
hlt
cltd
outsl
push
sbb
jo
std
jecxz
test
mov
cmp
adc
adc
addl
dec
aam
cmp
dec
mov
add
addb
jl
dec
push
jns
inc
add
inc
mov
sub
outsb
or
jle
or
dec
into
adc
mov
stos
lret
add
mov
mov
nop
pop
sub
mov
cmpsb
lods
sbb
out
es
xor
xor
dec
or
fidivrl
xor
fistl
insl
sub
out
rclb
jno
stc
cltd
jle
inc
push
pop
mov
subb
xchg
ret
loopne
or
fimull
cmpsl
sahf
movsl
sub
cmpsb
dec
and
pop
stos
mov
xchg
sbb
pop
in
sahf
popa
nop
mov
add
repz
roll
test
xor
stos
push
push
das
xchg
insl
outsl
jno
inc
pop
adc
add
fnstcw
dec
xchg
adc
mov
loope
dec
popf
ret
mov
aam
push
xchg
fs
mov
hlt
clc
and
pop
ljmp
mov
out
push
and
pop
or
mov
aas
sarl
inc
mov
popf
dec
push
dec
and
and
pop
jo
jle
popa
loopne
pop
mov
cmovb
icebp
sbbb
mov
ljmp
xchg
rcrl
push
ds
mov
push
sarb
aad
hlt
data16
xor
adc
sarb
xchg
or
sub
mov
test
sub
loopne
stos
addb
jb
xchg
add
jmp
cld
iret
inc
loopne
jnp
jp
adc
fwait
rol
or
xchg
outsb
push
mov
outsl
push
ficoms
push
mov
mov
mov
add
fisubrl
xchg
stc
push
out
and
mov
mov
imul
lcall
negb
xchg
sahf
iret
sti
int
cltd
fnstcw
push
cmpb
mov
sub
shlb
rcrb
ret
test
clc
fsts
iret
insb
lea
aad
jmp
push
dec
cmp
fcoml
in
out
pop
cld
inc
mov
cltd
imul
or
add
fwait
std
adc
roll
dec
inc
std
sbb
movsb
outsb
xlat
lock
je
ss
pop
sub
aam
mov
jmp
xchg
vmovq
or
movsl
xor
inc
lock
mov
push
xchg
dec
movsl
adc
push
lods
clc
outsl
ljmp
mov
push
or
lock
jmp
pushaw
cld
add
fisubrs
ret
mov
mov
icebp
aaa
xchg
lret
mov
cmpsl
cwtl
les
and
push
aaa
and
arpl
loopne
push
and
popf
pusha
mov
outsb
clc
test
or
pop
adc
adc
insl
aas
mov
lds
icebp
lahf
fsts
adc
mov
sbbl
lock
mov
and
scas
xor
es
gs
pusha
xor
sub
movb
gs
add
push
shl
xor
aas
fucomi
or
pop
inc
imul
test
jg
xchg
adc
push
popf
adc
loope
mov
in
mov
cmp
js
push
popf
ja
mov
mov
mov
jne
cmpsb
sbb
sbb
aas
pop
fwait
mov
sub
mov
mov
jns
mov
xchg
daa
aam
subb
push
outsb
add
mov
dec
cs
repz
mov
lret
mov
xchg
in
inc
push
shll
aad
sahf
push
rcll
or
scas
int3
mov
inc
pop
sti
out
inc
or
add
enter
mov
mov
xchg
push
dec
mov
mov
xchg
mov
dec
cmc
popa
hlt
xchg
cmp
les
aaa
lods
movsb
popa
repnz
mov
into
mov
push
mov
fsubrs
dec
add
pop
sub
out
imul
addl
mov
das
les
and
pop
mov
or
mov
pop
das
shl
jg
mov
xchg
dec
xor
fcmovnbe
xchg
sahf
pop
punpckldq
and
mov
sbb
push
aam
cs
cli
popa
and
add
sarb
jbe
adc
xchg
ja
mov
adc
ret
xorl
xchg
push
nop
cmpsb
mov
mov
jbe
sub
stc
adc
jns
inc
lret
push
cmp
data16
jae
pop
cmpl
adc
testb
bnd
mov
ds
dec
cmpsl
fsubs
push
in
mov
fisubrs
jo
and
scas
imul
es
xchg
jns
adc
cld
mov
push
push
pop
mov
pop
stc
push
pop
xchg
sbb
ss
xchg
or
jbe
pop
inc
xor
pop
lahf
cmp
inc
sub
or
incl
pop
or
cmc
dec
test
or
mov
jg
je
arpl
adc
xchg
arpl
daa
and
ljmp
and
fstpl
push
mov
jecxz
xor
mov
mov
cld
fcmovbe
mov
jns
mov
divl
dec
adc
push
enter
lods
test
sar
dec
mov
inc
push
fwait
psubsb
pop
push
aam
lcall
test
test
sarb
out
push
cmpsb
xchg
dec
out
sbb
lds
inc
mov
cmpsb
add
in
mov
sahf
xchg
leave
xor
jnp
int3
ds
es
stos
movsb
fdiv
pushf
push
mov
in
cmc
clc
xchg
lret
mov
popa
xor
mov
js
shl
outsl
popa
stc
inc
popf
out
jmp
cld
jl
jo
cs
jle
and
out
sbb
dec
dec
mov
sbb
test
jns
pop
loop
jbe
cmpsl
mov
push
fdivl
lret
sbb
roll
sbb
aas
mov
mov
mov
dec
and
pusha
mov
push
push
cmp
pusha
cwtl
and
test
pop
mov
enter
xchg
dec
xlat
dec
jecxz
cmp
jns
push
sbbb
fdivrs
mov
scas
add
jmp
insb
xlat
push
pop
mov
in
cli
mov
push
js
shll
and
insb
hlt
xor
lods
out
dec
jae
add
test
lock
nop
mov
mov
aaa
adc
mov
pusha
insl
ret
pop
mov
jp
jnp
xor
loop
popf
sbb
xor
iret
clc
loope
cld
pop
or
jp
mov
arpl
rolb
daa
loop
gs
ficompl
sbb
inc
xchg
loop
mov
repnz
mov
adc
loop
loopne
in
mov
notb
cmp
insl
inc
lgs
paddusw
cltd
adc
les
inc
inc
fnstsw
pop
sbb
adc
cmp
out
dec
imul
cmpsb
add
cs
jle
js
std
and
loopne
and
and
fldenv
notb
jl
scas
mov
mov
adc
xor
aaa
cltd
pushf
mov
in
or
dec
cmp
add
push
add
in
ficomps
sahf
add
enter
mov
jl
cmp
dec
xchg
adc
fildl
leave
insb
in
add
xor
jno
icebp
pop
xor
push
je
push
fidivl
adc
inc
hlt
and
in
arpl
push
mov
movsb
in
mov
sub
mov
bound
ljmp
inc
and
data16
sbb
aam
push
test
cld
or
sbb
mov
ss
loopne
imul
pop
xchg
addr16
or
inc
enter
insb
aad
shlb
mov
jl
mov
repz
lahf
test
insl
cmc
ja
aas
adc
and
lret
data16
push
les
out
xchg
in
dec
jl
push
xchg
add
fwait
xor
movsl
inc
inc
cltd
dec
jl
sahf
lret
leave
fdivp
inc
test
ficoml
lcallw
ljmp
add
xor
or
in
cwtl
insl
shrl
xchg
loop
scas
lods
sbb
and
sub
cwtl
cs
fisttpll
aad
jo
test
js
sub
xchg
lahf
mov
lcall
clc
mov
and
inc
mov
fmuls
jl
scas
push
rcrl
inc
xlat
popa
jl
das
xchg
movb
cli
imul
mov
out
sbb
pop
fisttps
fcompl
ret
sbb
mov
hlt
jp
push
negb
push
cmp
or
cmpsl
in
pusha
addr16
lahf
push
jl
pop
sub
cmpsb
or
xlat
mov
dec
sub
add
add
cmp
jno
and
dec
outsb
in
push
test
icebp
mov
jl
jl
clc
pop
fimuls
test
int
fldenv
and
les
push
fstl
jmp
jl
add
mov
subb
push
loope
in
in
xor
lods
jne
pusha
fisubrl
fs
data16
pop
lcall
mov
push
mov
add
mov
mov
ror
pop
fucomp
pop
push
sub
adc
int
push
sub
mov
adc
pop
popf
js
dec
adc
xchg
and
inc
mov
xchg
mov
int
pop
cmpsl
std
push
adc
subb
in
imul
mov
clc
pop
lea
in
dec
sbb
or
mov
fmull
cmp
and
inc
ljmp
and
out
jecxz
cwtl
test
mov
mov
out
cwtl
mov
jl
sahf
jl
pusha
and
scas
lcall
mov
xlat
rol
js
push
add
bound
inc
add
push
out
notl
or
push
ljmp
fdivs
addb
leave
pusha
les
roll
jmp
xlat
sbb
subl
mov
ljmp
sbbl
js
fs
dec
shr
loope
dec
lock
es
jbe
psraw
and
push
jb
cmpsl
mov
adc
iret
aad
dec
aas
dec
aaa
roll
ljmp
or
inc
push
out
loopne
ficompl
inc
imul
cmp
jmp
into
bound
int
les
mov
clc
inc
and
add
and
stos
ret
inc
inc
dec
dec
adc
mov
repz
inc
cmpsb
lock
dec
pop
sub
inc
cmpsl
imul
mov
jl
add
push
out
in
insb
lods
dec
adc
or
test
cmp
lahf
fs
roll
jbe
push
aam
or
lret
mov
out
jle
xor
pushf
jns
mov
fnstenv
sub
push
js
rcrl
cmp
imul
out
dec
mov
outsl
cmpb
inc
mov
test
sbb
mov
sahf
push
cmp
outsl
dec
and
mov
movsb
das
les
inc
js
cmpsl
insl
ret
insl
movsl
stos
orb
imul
xchg
cltd
mov
xchg
or
pusha
lret
xor
test
sbb
sbb
das
aas
adc
inc
xchg
mov
pushl
xchg
mov
pop
jb
orl
sbb
xor
ficomps
inc
mov
rolb
jp
xor
xchg
mov
rcll
cmc
mov
in
fdivrs
fcmovu
repnz
mov
cmp
mov
es
out
jo
daa
cmp
mov
cmp
jno
insb
mov
inc
xor
jnp
sub
push
movsb
push
frndint
dec
fistl
aas
shlb
cmpsb
ja
mov
into
popf
shll
movaps
or
neg
and
incl
scas
add
or
adcl
daa
into
frstor
leave
out
psraw
cs
cmp
adc
sahf
dec
in
push
and
jg
repz
vpshaq
and
out
mov
inc
mov
repz
outsb
cltd
aas
popa
enter
cld
dec
inc
sub
dec
bound
and
es
ret
xchg
cld
mov
dec
xlat
hlt
sub
cwtl
push
fdivrl
test
lret
mov
pop
mov
and
lods
mov
xor
loopne
mov
insb
pop
popf
push
ds
adcb
or
imul
stos
je
add
ja
shll
cmp
enter
push
aad
scas
pushf
inc
jle
or
fsubrl
inc
pop
adc
dec
mov
inc
cld
jae
lds
add
pusha
addb
mov
cmp
lds
rcrb
insb
and
ret
sbb
jo
mov
push
xor
push
inc
push
xlat
add
jl
fidivl
mov
push
inc
dec
js
dec
out
in
inc
ds
and
adc
enter
cmc
dec
mov
cs
iret
add
sbbl
rorb
xchg
enter
icebp
in
pop
sub
fbstp
shlb
and
arpl
sub
cmc
push
or
sahf
lcall
or
add
lea
dec
aaa
repz
cmc
add
mov
jecxz
inc
mov
inc
xchg
cmp
sbb
jb
pop
aaa
repz
aad
enter
sar
mov
cli
xor
xchg
pop
mov
aad
mov
jno
stc
mov
sub
push
jle
loopne
out
lods
mov
or
push
dec
mov
pop
imul
ret
push
dec
mov
sub
cmpsb
xchg
adc
nop
pop
addr16
push
mov
adc
shrl
ljmp
pop
int3
cld
outsb
ja
movd
jl
into
jp
push
adc
inc
insb
xchg
xlat
sar
mov
mov
sub
jl
push
cmp
mov
pop
outsb
mov
mov
cmp
push
out
out
lods
mov
pop
adc
sbb
mov
test
cld
icebp
mov
sub
sbb
addr16
add
jmp
dec
mov
dec
rcr
add
dec
xlat
or
add
das
lock
xchg
push
pop
daa
lcall
mov
and
fbstp
ds
lahf
aas
cmp
int
subl
xchg
inc
xchg
js
inc
into
js
lahf
in
or
aam
sub
sub
out
loope
jp
insl
and
xor
stos
icebp
and
adc
sahf
cld
cmpb
ljmp
mov
outsl
psubusb
adc
bound
xchg
movsb
pop
in
and
pusha
int
dec
and
test
mov
repz
xchg
sbb
lds
inc
pop
je
stos
cmpsb
sub
jae
lods
dec
stos
test
popf
into
or
xchg
in
nop
adc
cmpsl
inc
hlt
inc
mov
jmp
pextrw
and
aam
and
cmp
mov
aad
iret
sbb
iret
mov
int
out
es
jmp
insb
xor
mov
mov
lcall
add
inc
inc
jae
mov
pop
movsb
mov
inc
ficoms
insb
cwtl
cltd
inc
js
adcb
repz
movsb
add
mov
sbbb
pushl
inc
adc
pop
cwtl
mov
adc
mov
test
scas
loop
call
dec
xchg
jmp
xor
lret
aad
int
js
stos
stos
cmpsl
imul
lock
dec
mov
jno
adc
jle
push
inc
and
adc
jle
inc
xchg
xchg
xchg
call
dec
mov
rcrb
xorb
aad
les
mov
adc
mov
mov
loopne
addr16
inc
movsbl
daa
and
ja
mov
jmp
xchg
mov
data16
data16
js
fst
pop
push
aaa
mov
data16
lods
dec
loop
sbb
pop
hlt
dec
ret
jg
jp
mov
imul
andb
shl
push
inc
push
jnp
push
sub
jne
mov
mov
fld
mov
adc
mov
mov
sub
sub
mov
add
mov
hlt
ret
ljmp
mov
stos
mov
mov
xor
push
mov
ficomps
inc
or
jo
iret
jns
cmp
add
mov
hlt
shll
testb
push
jle
sti
int
jnp
dec
cmpsl
push
cmp
adc
fists
incb
nop
mov
inc
jmp
sub
xchg
movsl
fcoms
scas
sub
fsubs
std
pop
lret
mov
test
mov
in
insl
sti
sbb
inc
inc
rcr
das
jge
out
sbb
ret
cmpsb
pushf
mov
leave
sbb
jo
sahf
subps
or
sub
push
mov
pop
mov
cwtl
pop
sar
les
sbb
xor
aam
dec
addr16
mov
and
and
iret
insb
inc
inc
cli
out
pop
mov
inc
test
in
sub
arpl
int
mov
in
imul
in
sub
push
les
in
leave
test
sbb
dec
xchg
dec
aaa
cwtl
add
jno
sbbl
pop
imul
xor
dec
xchg
push
pushf
sahf
mov
rolb
arpl
iret
insb
dec
stc
xor
pop
std
insb
mov
xchg
pop
fcmovu
jg
icebp
mov
aam
jecxz
pop
xor
leave
and
cmp
ret
rclb
cmp
aad
insl
stc
out
mov
imul
pop
or
lea
lods
lea
inc
in
insb
cmc
fwait
push
aam
in
sbb
popa
lods
pop
popl
jb
mov
mov
es
push
dec
rcll
shrb
enter
cmp
arpl
repnz
or
call
bound
xchg
sahf
shrb
mov
mov
dec
add
shll
inc
and
jo
and
dec
jle
mov
lock
decb
xor
cmpsw
sub
fldenv
scas
mov
hlt
jg
mov
cmp
cwtl
push
push
xor
mov
int3
xchg
int
stos
addl
push
in
les
and
addb
mov
mov
icebp
push
mov
push
cmp
sbb
xor
test
loopne
lcall
pushf
xor
ftst
or
jle
add
mov
push
xchg
pushf
scas
rolb
xchg
outsb
icebp
pusha
add
mov
addr16
inc
xchg
shl
xchg
movsb
sub
push
popa
mov
mov
ret
push
stc
icebp
and
mov
addb
pop
sub
in
jl
cmp
lahf
int3
sub
movsl
dec
and
fidivl
rol
stos
lcall
data16
test
loope
sub
mov
add
mov
adcl
scas
sbbl
cmpsl
fmuls
iret
xchg
in
xchg
in
pop
push
sar
sbb
add
mov
out
out
fcoms
push
adc
xchg
lret
fsubs
and
fst
xchg
push
sahf
bound
adc
movsl
push
cmpsb
or
sub
rorb
out
pop
jns
dec
or
dec
sub
inc
sub
fldlg2
or
mov
sub
mov
mov
orb
inc
pop
cmp
clc
jns
lret
mov
mov
xchg
mov
mov
push
and
sub
call
pop
lock
stos
scas
fsubs
test
adc
jp
out
jmp
stos
pop
enter
das
leave
adc
sub
das
cmp
mov
adc
jbe
test
mov
rcrl
pop
mov
mov
mov
mov
jecxz
xchg
das
std
in
leave
inc
mov
jp
mov
xor
xor
aad
mov
push
hlt
or
subl
mov
aaa
push
stc
rolb
sbb
xor
pop
lods
pop
lods
scas
xchg
cmpsl
inc
call
ljmp
pusha
enter
hlt
shlb
inc
fcomip
out
addr16
mov
inc
mov
or
imul
add
cli
aad
mov
push
xchg
test
cwtl
mov
hlt
mov
sbb
clc
mov
fwait
imul
add
sarb
divl
push
xchg
dec
sub
cwtl
fstl
or
fxch
pop
mov
push
shll
cmp
jns
cmc
fmuls
cmpsb
lock
outsl
mov
jns
sbb
pop
adc
pop
repnz
lds
stos
imul
or
call
in
in
mov
add
sahf
dec
fistl
out
inc
xor
pop
clc
fnstcw
adcb
and
push
pop
loop
mov
call
push
and
sbb
jne
insb
mov
fcomps
jle
lret
std
shll
pop
pop
push
sti
je
jnp
push
mov
repz
in
mov
js
mov
push
mov
add
pop
or
mov
movsb
pop
mov
popf
clc
lret
mov
icebp
dec
jo
adc
sbb
outsb
xor
dec
andb
out
xchg
jns
pop
imul
xchg
cmpb
dec
inc
sbb
push
roll
daa
mov
mov
call
xchg
push
mov
mov
fwait
push
loop
repz
bound
cmp
and
cmpsb
mov
mov
data16
nop
inc
enter
cmc
out
dec
push
flds
adc
jl
push
out
insb
sbb
std
sub
jl
sbb
fcomps
popa
mov
and
nop
je
pop
cltd
lcall
popf
pop
lahf
stc
add
adc
push
mov
sbb
movsb
mov
loope
dec
lret
adc
je
lea
lret
fstpt
cmp
jbe
mov
test
or
xchg
or
imul
pop
subb
and
sbb
mov
push
mov
add
jp
mov
testl
js
rolb
fwait
cmc
jge
cmp
xor
mov
mov
or
xchg
mov
xlat
add
data16
adc
rclb
pusha
mov
sbbb
out
insl
std
pop
das
popf
add
outsb
ja
inc
pop
push
imul
or
lret
push
test
cmp
mov
jge
push
jnp
in
dec
push
dec
repz
xchg
pop
iret
mov
test
clc
pop
xlat
sbbb
or
add
jl
pcmpgtd
sbb
clc
lcall
add
fs
cmp
adc
loop
pop
jne
push
xor
stos
jnp
or
mov
sar
pushf
int3
out
inc
aas
dec
mov
and
movl
mov
stos
fucom
or
sub
mov
xchg
pop
inc
cld
mov
in
pop
sbb
pop
fists
mov
push
dec
fnstcw
mov
cltd
adc
arpl
outsl
dec
cmpsl
pop
notb
pop
and
data16
cmp
mov
and
jmp
ds
es
inc
rclb
rcl
add
sbb
xorb
jnp
inc
fs
aad
pop
aas
lret
scas
pusha
or
cwtl
or
pushf
mov
mull
ds
inc
xlat
in
ss
iret
jbe
cwtl
test
aad
cs
mov
div
ds
jl
out
dec
mov
xchg
fmulp
mov
sbb
mov
push
mov
add
lcall
pop
rclb
mov
or
mov
adc
mov
push
or
push
cmp
sti
js
leave
adc
lret
test
daa
jbe
mov
pop
mov
jle
pop
xchg
pop
jmp
ss
pop
pusha
fcompl
push
push
xor
push
xchg
xchg
pop
push
xor
xchg
pop
cmp
mov
mov
pop
outsb
cmp
jp
xorl
es
pop
mov
inc
cmp
lea
mov
imul
cmpsl
out
test
mov
mov
stc
mov
inc
test
repnz
mov
movsl
and
scas
stos
pop
icebp
mov
gs
sbb
lods
filds
popa
xchg
inc
aaa
out
pop
mov
das
insb
and
cmp
sahf
add
lcall
hlt
data16
shlb
lds
cmc
movsb
push
adcl
xchg
aam
scas
lock
lds
jno
sbbb
adc
and
out
dec
mov
xor
sti
mov
pop
fwait
aam
mov
mov
push
shrb
shrb
shrl
mov
and
jnp
lock
fistl
cltd
cwtl
push
xchg
cli
nop
mov
stos
dec
sbb
insl
cmp
or
xchg
pop
pop
test
stc
push
outsb
scas
jge
mov
xor
inc
mov
lds
or
inc
jbe
ror
jo
mov
into
pusha
push
sbb
sbb
xchg
shlb
pop
cmp
jle
jg
or
inc
sub
scas
scas
lods
push
jl
cmp
jg
inc
mov
xchg
fwait
mov
mov
inc
cs
lods
sti
repnz
jne
repnz
lret
into
fiadds
andb
fmull
xchg
push
add
and
lcall
sti
mov
leave
mov
and
xor
loopne
dec
mov
lret
jbe
add
js
xor
movsb
push
imul
sti
inc
cmp
dec
loopne
outsb
test
leave
test
scas
jle
ret
iret
data16
in
addl
or
setns
stos
mov
or
filds
cmp
push
jge
dec
mov
and
cmp
out
add
mov
mov
fcomps
inc
in
movsl
adc
pop
add
xchg
out
repz
sub
aas
cli
mov
jns
mov
clc
jp
mov
mov
mov
pop
or
inc
pop
dec
lods
popa
sahf
rorl
sbb
push
out
mov
mov
lahf
hlt
and
mov
pusha
in
mov
push
cs
lds
dec
mov
ljmp
cmp
mov
call
sub
pop
mov
popa
imul
jae
push
inc
adc
insl
je
ret
ljmp
mov
fstps
repnz
jle
rcrb
push
dec
in
imull
xchg
rcl
enter
add
jmp
mov
divb
cltd
dec
cs
jl
iret
popa
sub
mov
and
xchg
add
aad
lods
das
dec
repnz
fwait
dec
packssdw
mov
ljmp
mov
inc
in
and
je
lods
jmp
sub
sti
gs
mov
movsb
mov
and
mov
fstpl
repnz
cltd
sub
insl
jp
sub
aaa
js
push
cltd
jno
jne
push
std
xchg
test
sbb
mov
es
rcr
lcall
outsb
movsl
xor
adcb
scas
aad
das
cmp
xor
push
mov
pop
int
jl
psubb
inc
addb
lahf
cmpsl
ret
outsl
divl
dec
dec
ja
push
loop
out
lock
pusha
mov
mov
add
mov
scas
shlb
xlat
lods
mov
dec
mov
xor
or
aaa
rcr
jp
mov
loop
insb
dec
dec
xor
add
gs
cmp
in
inc
test
dec
mov
ret
dec
cmp
mov
sbbl
fiadds
fldenv
inc
in
lock
cltd
mov
xlat
add
push
xchg
jmp
dec
add
xchg
mov
stc
ficoms
dec
push
or
fwait
mov
mov
mov
fwait
shrb
nop
rorl
je
loop
push
mov
enter
jl
cwtl
mov
outsb
iret
mov
pusha
nop
lcall
mov
pop
loopne
mov
fdecstp
push
pop
and
xchg
sahf
stos
ljmp
adc
sub
push
int3
sub
push
add
dec
sub
mov
push
push
xor
push
dec
in
sub
out
in
cmp
dec
cmpsb
cmp
cmc
js
push
jbe
outsb
mov
or
push
mov
inc
or
aad
sarb
jne
adc
imul
dec
fnstsw
ret
adc
orb
mov
xchg
mov
inc
and
sahf
xor
adc
dec
mov
dec
roll
xor
fiadds
mov
aam
dec
or
cmp
mov
pop
rolb
or
add
cmp
mov
pop
inc
adc
xchg
jmp
xchg
std
mov
inc
fwait
in
loopne
lock
xor
movl
pop
and
jmp
pushf
dec
xchg
push
inc
xchg
outsb
cmc
jmp
hlt
sarb
enter
sub
xchg
xchg
in
clc
adc
push
adc
fidivrs
push
xor
pusha
fcomps
mov
fisubs
lret
pop
sub
xchg
jmp
out
les
fwait
push
and
mov
jp
mov
cli
mov
dec
js
mov
test
aas
aad
outsb
dec
inc
add
and
lea
hlt
ret
xor
pop
bound
hlt
aam
arpl
js
fisubrl
push
mov
daa
push
mov
loope
cltd
push
in
in
ljmp
xchg
lock
xlat
bound
mov
aam
fdiv
push
mov
and
mov
sub
scas
frndint
adc
pushf
mov
insb
and
fildl
es
adc
xchg
push
cld
hlt
push
mov
ja
add
or
xor
stc
xchg
les
subl
mov
lret
out
ret
add
or
inc
stos
sub
or
xor
mov
cmp
mov
mov
sbb
or
inc
aaa
scas
push
push
mov
cmp
mov
pop
testl
cwtl
inc
sbb
jecxz
in
gs
mov
push
sbb
jl
add
repnz
mov
pop
xor
cmp
clc
lock
mov
stos
sub
lock
pop
insl
out
pop
adcl
addr16
inc
pop
sub
jb
out
sub
fistps
in
xchg
push
imul
movsb
inc
or
sahf
lahf
rol
loope
adc
fmulp
leave
xchg
xlat
mov
in
insl
sub
jl
mov
ds
sti
lock
xchg
ljmp
mov
gs
loopne
jmp
movsl
push
mov
pop
ljmp
scas
mov
xchg
push
adc
adc
mov
iret
insb
xor
mov
lds
dec
iret
js
aas
imul
mov
pop
andl
loopne
xor
sub
and
pop
pop
test
add
popa
int
shll
mov
aaa
mov
cld
pop
lock
popa
js
and
dec
loope
jmp
fiaddl
stos
test
lcall
and
xchg
xlat
les
dec
or
jnp
mov
js
cld
rcrb
mov
and
bound
mov
fists
pop
pop
scas
loop
add
sub
xchg
mov
popa
repnz
mov
push
icebp
shl
fidivrs
adc
incb
pop
or
test
gs
mov
negb
mov
mov
add
or
push
lock
mov
fs
mov
jb
xor
mov
rorb
push
mov
pop
int
push
cmp
adc
jmp
push
adc
mov
cld
mov
mov
pop
jnp
lcall
mov
insb
and
call
adc
aam
dec
sub
jne
int
push
adc
adc
ds
sbb
jnp
xchg
dec
subl
call
aaa
sub
jle
sub
loopne
aad
nop
xchg
in
aam
insb
outsl
mov
mov
imul
and
je
adcb
mov
mov
xchg
inc
mov
mov
pop
jecxz
out
or
pop
lcall
mov
ljmp
fs
loopne
and
fnstcw
mov
cmp
sbb
adc
mov
loop
cs
cs
fimull
cltd
mov
dec
addr16
js
leave
push
outsl
mov
push
adc
aad
fldcw
fldt
xchg
aam
pusha
pop
or
bound
mov
enter
sub
and
enter
sub
xor
hlt
and
lret
popa
clc
stos
or
aaa
cmp
mov
inc
rcll
lret
nop
sub
pop
loop
cmp
out
inc
xor
enter
ljmp
gs
push
and
lea
push
xchg
pop
js
pusha
xor
cmpsl
sbb
lcall
popa
pusha
mov
sarb
dec
mov
fnstsw
sbb
mov
testb
xor
jnp
adc
pusha
mov
cmp
xchg
rclb
sbb
adc
jmp
xor
orb
jmp
leave
fiaddl
and
xor
int
repz
repnz
mov
mov
mov
cmp
sub
and
fldl
add
or
xchg
decb
cmp
push
sbb
leave
sbb
into
and
or
lods
pusha
or
push
cmp
mov
ret
movsb
mov
cmp
or
adc
cmp
jl
sahf
pop
add
adc
divl
pusha
mov
ljmp
mov
int3
push
movsl
sub
xlat
int3
add
nop
cmp
pop
pop
test
adc
dec
js
mov
mov
dec
adc
pop
call
out
sbb
es
sti
clc
jnp
ss
out
pop
popa
cmp
sbb
pop
jmp
cmp
outsl
idivb
jp
aad
stos
std
and
divl
sahf
or
adc
inc
fcomi
inc
test
push
in
scas
fists
in
push
outsl
fs
ds
std
sub
or
mov
cmp
or
adc
scas
inc
shl
push
movsl
mov
xlat
imul
lock
mov
lock
jg
insl
fdivrl
cld
icebp
jne
addr16
sub
popa
inc
stc
adc
adc
inc
xchg
pushf
fistpl
push
add
pop
fidivrl
loop
in
pop
push
daa
push
jno
jmp
pop
jge
mov
sub
cli
insl
out
pop
lock
outsl
mov
add
cmc
adc
mov
cmpsb
fisubs
stc
bound
fwait
add
movsl
enter
jbe
iret
mov
movb
cli
popa
xor
lods
adc
gs
pop
push
mov
fs
repnz
insb
xor
push
and
mul
loop
daa
pop
mov
pusha
adc
mov
add
inc
imul
icebp
jle
and
inc
add
mov
pop
mov
int3
cmpsl
stos
test
jne
mov
sub
sub
into
cs
cmpl
fsubs
or
cmp
ja
jbe
inc
or
xchg
stc
in
push
fwait
inc
roll
cli
mov
jnp
add
out
jno
jecxz
je
adc
cmpsb
mov
push
roll
cmp
adc
sahf
mov
xor
test
dec
pop
push
mov
test
xchg
adc
jnp
in
jmp
cmp
mov
les
inc
mov
push
lods
mov
pop
mov
add
add
loopne
loopne
push
jae
lea
inc
out
add
test
and
cld
jb
icebp
xor
xchg
inc
push
out
xchg
xchg
dec
xchg
push
mov
and
les
movsl
add
mov
sbb
push
inc
jnp
loopne
xchg
dec
jno
pop
aaa
repnz
les
mov
mov
inc
dec
adc
bound
mov
fucomip
shr
lcall
jae
cmp
repnz
hlt
in
clc
jmp
pop
adc
gs
mov
fwait
rcll
mov
nop
shrl
xchg
int
rcr
add
pusha
js
push
rcll
mov
sub
in
faddp
and
scas
adc
cld
push
or
imul
jbe
mov
dec
ja
mov
and
xor
dec
lods
mov
mov
mov
icebp
les
push
hlt
cltd
enter
push
cmp
or
cmp
xor
dec
mov
mov
jbe
adc
mov
pushf
mov
loope
add
and
jl
jecxz
sub
push
ljmp
pop
sbb
push
fs
mov
push
sub
adc
xchg
enter
dec
mov
mov
xchg
cmp
mov
push
in
mov
clc
mov
aas
adc
sub
cmp
int3
mov
stc
mov
aam
mov
mov
in
nop
lahf
insb
xchg
add
je
leave
cli
test
sbbb
sbb
mov
jns
pop
sbb
pop
int3
cmp
cmp
pop
scas
test
idivb
pop
pushf
adc
xor
mov
call
push
push
sbbl
inc
add
nop
cli
ret
sarb
pushf
sbb
mov
xchg
cmp
sub
mov
jl
icebp
xchg
dec
out
or
mov
cmpsb
xor
je
outsb
inc
push
and
sbb
pusha
xchg
movsl
dec
notb
jle
push
sbb
int
mov
cmpsl
stc
xor
je
int3
sub
mov
and
cmpsb
inc
fisubrs
mov
and
test
add
jecxz
out
xchg
jle
into
adc
leave
fxch
mov
mov
cmp
pop
xor
lea
ficoms
xchg
lahf
adc
test
push
pop
mov
xchg
into
mov
lock
xchg
cmp
add
sub
das
nop
fcoml
cltd
dec
mov
xor
add
imul
fsubl
lahf
insl
xchg
popf
jecxz
movsb
inc
sub
xchg
frstor
test
push
mov
push
jge
cs
sahf
mov
jno
insl
test
pop
add
test
imull
vpmulhw
or
mov
movsl
fisubs
loop
jg
movsb
dec
push
fdivrl
in
pusha
lds
inc
outsb
jae
mov
pop
adc
push
scas
mov
aaa
loopne
stc
sub
js
pop
aam
xor
sbb
dec
sbb
movsl
inc
push
push
popf
xchg
dec
push
xchg
int3
scas
in
es
sub
shrb
fists
lcall
addr16
xchg
sub
ljmp
enter
out
sub
hlt
cwtl
xchg
rcrb
lret
les
iret
pushf
push
lock
rorl
pop
cmp
push
pushf
enter
mov
cmp
in
push
outsb
mov
push
outsb
xchg
cs
test
orb
ds
or
mov
mov
push
fnstsw
jno
lods
les
leave
pushf
or
pushf
std
int
cmp
sbb
out
mov
sahf
or
mov
push
cmp
ss
or
into
ret
pushf
pop
ds
pop
push
dec
jno
loop
add
ret
mov
jbe
mov
push
mov
rcrb
add
lods
cmp
je
js
int3
insl
jns
cmp
in
js
mov
enter
mov
dec
or
dec
xchg
icebp
mov
aad
mov
movsb
loop
xchg
insb
stc
in
add
popf
ret
jbe
push
mov
pusha
inc
test
jmp
out
inc
in
inc
cmpsb
mov
cmp
imul
movsb
dec
pop
arpl
push
sub
xchg
in
push
mov
pop
inc
ds
clc
hlt
jno
shll
and
mov
lock
add
mov
push
pop
mov
mov
cmpsb
call
jmp
mov
ljmp
jno
sbb
arpl
lods
add
dec
clc
add
and
sbb
nop
pop
popa
aam
dec
xorl
enter
repz
add
mov
mov
and
lahf
clc
mov
mov
mov
xchg
and
outsb
mov
jl
andb
sub
clc
pop
xor
out
jmp
addb
mov
pop
ret
push
xchg
mov
mov
and
cmp
shll
inc
or
adc
add
dec
push
js
or
adc
or
mov
adc
scas
sbbl
stc
insb
iret
push
cmp
adc
test
outsl
jae
and
imul
or
mov
sbb
push
loope
mov
dec
pop
lahf
shlb
pop
mov
and
cli
mov
mov
xchg
test
into
test
shlb
cmp
mov
push
outsl
add
fcompl
sub
push
pop
mov
dec
mov
xor
pop
mov
pop
lahf
add
dec
and
dec
mov
mov
es
gs
sub
adc
or
insb
dec
add
dec
rcll
lock
fwait
sbb
insl
fimull
insl
fs
adcl
aam
hlt
addr16
jnp
mov
divl
pop
jne
sbb
pop
xor
lock
in
push
xchg
dec
sbbl
pop
lods
sub
pop
add
cld
push
adcb
jg
dec
imul
mov
and
les
mov
inc
inc
out
xchg
in
leave
inc
clc
insl
add
mov
aad
les
xor
dec
xchg
mov
es
pushf
stos
sub
ret
jecxz
lret
jecxz
repnz
repz
xor
cmp
mov
cmp
xchg
lds
pop
out
je
jae
dec
aam
insl
and
cmp
fnstsw
lea
ljmp
or
push
dec
negl
push
dec
jns
mov
or
mov
ficomps
add
mov
aaa
out
clc
xchg
jl
pushf
push
out
push
xchg
into
inc
fs
fdivrp
push
mov
jb
dec
inc
hlt
sahf
out
iret
ret
mov
cmp
das
xor
push
add
in
in
out
and
add
cmp
stos
pusha
pop
and
data16
mov
test
xlat
test
aaa
aad
cmp
pop
cld
pop
out
jl
scas
cwtl
fisubrl
or
sarl
aad
iret
inc
aaa
fwait
and
pop
inc
in
inc
shll
sbb
mov
sub
leave
shrl
adc
mov
cmp
das
mov
inc
ljmp
mov
inc
xchg
imul
or
loop
insb
adc
repz
dec
pop
cltd
mov
and
mul
pop
sbbb
mov
insl
rolb
xorb
outsb
and
add
mov
icebp
pushl
test
push
in
pop
cli
cmc
adc
pop
cmpsb
out
bound
daa
shl
or
mov
dec
push
dec
mov
mov
sbb
scas
mov
mov
mull
push
and
in
push
clc
in
inc
add
stos
sbb
push
pusha
push
inc
daa
push
ja
xchg
jge
je
adc
sub
inc
and
add
fstpl
xorb
rolb
dec
rclb
cmc
shr
jecxz
sbbb
call
lock
jge
adc
push
dec
je
testl
pushf
push
fwait
stos
xchg
xchg
loope
lock
jae
in
cmp
movsl
cltd
sub
stos
test
push
test
or
and
js
or
ret
jo
rcrl
scas
shl
mov
lret
stos
inc
sub
mov
dec
inc
hlt
and
sub
jbe
or
data16
bound
mov
sbb
stos
add
sbb
rcrb
lock
jecxz
mov
mov
cmpsl
dec
dec
sahf
jl
add
pusha
stos
and
insl
addr16
stc
push
rolb
cpuid
add
jp
imul
sbbb
xchg
sahf
lods
adc
test
outsb
das
or
or
inc
js
sub
push
inc
mov
sub
test
sbb
push
inc
fildl
and
daa
enter
mov
xchg
addr16
lret
or
test
and
and
add
mov
xor
sysret
mov
xchg
push
mov
stos
xlat
aad
iret
inc
andl
fildl
inc
daa
aas
jl
es
mov
dec
jbe,pn
in
out
insl
cmpsl
outsb
cmp
out
faddl
popf
xor
push
lods
cmp
jb
andl
ret
fsubrl
sub
jg
jmp
mov
cmpsb
int3
adc
inc
test
ss
jecxz
xchg
fcoms
mov
sahf
add
shl
out
push
lods
aam
pop
fnstenv
into
jp
idivb
inc
mov
adc
push
mov
mov
cmp
and
jb
cmp
ss
lock
ficompl
mov
xchg
ja
adc
enter
nop
dec
fldln2
and
addr16
es
repnz
repz
in
in
xchg
fcomps
scas
push
idiv
shll
dec
mov
xchg
stos
shrl
jmp
pushf
movsl
xlat
pop
adc
mov
adc
sbb
test
mov
mov
popa
jl
inc
dec
or
cld
sub
test
jge
mov
in
fadd
addr16
movsb
popa
outsb
leave
dec
or
cltd
cltd
push
cmp
xchg
lds
repz
out
adc
pop
scas
popf
xchg
mov
sub
jmp
les
ljmp
les
mov
cmp
notl
imul
jnp
cmp
jbe
les
aaa
negl
les
cwtl
ret
adc
cmp
hlt
push
mov
pop
dec
lcall
jbe
jno
jo
or
addr16
imul
jle
cmp
movsb
jmp
shrl
dec
mov
fs
lcall
push
push
pop
xchg
test
or
fistpll
sbb
jecxz
ret
xchg
sbb
mov
fwait
dec
adc
mov
push
cmpsb
cmc
xchg
xchg
iret
dec
rcrb
xchg
inc
in
scas
int3
xor
addr16
mov
push
and
push
dec
mov
ljmp
sub
fldcw
gs
fwait
stos
rolb
leave
pop
push
hlt
loope
lods
fdiv
mov
sahf
lock
bound
ja
inc
imul
sub
lods
fildll
jl
jl
push
hlt
les
aas
in
mov
ret
test
and
ja
add
es
adc
sarb
ss
cmp
nop
mov
fldl
les
repz
mov
jp
jno
pop
xchg
loope
outsb
cmpl
push
inc
lock
fcoms
inc
cld
mov
dec
and
shlb
repz
push
mov
xor
xor
mov
das
jns
lahf
xlat
lahf
xchg
lods
lret
call
aad
jns
cs
shlb
outsl
jecxz
pop
notb
jge
pusha
fwait
cmp
cmp
mov
push
shrb
xchg
mov
aam
dec
sbb
incb
or
sar
nop
push
in
data16
imul
cmpsb
inc
and
lods
jl
mov
or
mov
push
cmc
dec
lds
nop
mov
mov
imul
fadds
test
sub
sbb
mov
mov
inc
jg
loopne
lret
fwait
and
inc
cmpsb
jb
adc
adc
jg
jb
xchg
lods
push
mov
xor
jecxz
out
movsl
insl
data16
adc
in
hlt
stc
idivb
mov
mov
cmp
mov
push
scas
cs
mov
mov
lods
pop
repz
inc
mov
ja
adc
mov
lods
cltd
out
inc
mov
mov
ss
movsb
sub
add
ljmpw
out
cmp
addr16
call
add
and
popa
add
push
loop
cmp
mov
ret
aas
repz
std
ja
out
inc
clc
push
ret
push
cmp
push
arpl
je
std
out
andl
fisubrl
mov
mov
push
test
data16
hlt
and
xchg
add
pop
push
sbb
or
aad
cmpsb
insl
dec
sub
je
popf
mov
loope
fistpll
xchg
mov
mov
mov
mov
lods
subb
jo
adc
sub
ljmp
mov
jnp
mov
jns
mov
mov
mov
sub
bound
flds
cmp
push
pop
imul
sbb
mov
or
sub
mov
dec
xor
sub
cwtl
mov
test
mov
inc
xchg
xorb
jae
push
push
mov
push
popf
stos
xor
dec
push
je
lods
adc
enter
and
aad
int
or
xchg
or
pop
dec
cmp
push
lcall
jge
sbb
scas
shlb
or
test
fldt
ret
jae
fcomip
aam
outsl
lret
inc
in
xor
pop
outsl
fwait
sbb
lahf
sub
adc
dec
testl
scas
push
rcll
add
cmp
mov
les
lcall
fnstsw
pop
into
mov
xchg
jae
mov
cmp
jbe
inc
mov
pushf
lcall
faddl
inc
adc
cmp
dec
incl
pop
rcrb
or
sub
lods
cmp
stos
cli
mov
fiaddl
scas
stos
sub
sub
mov
sub
ja
inc
outsb
jl
mov
mov
dec
and
push
add
nop
or
mov
cs
mov
mov
xchg
popf
in
push
dec
xchg
xor
rcll
jge
pop
das
cs
icebp
ss
fsubp
loopne
jl
loope
lea
cmc
inc
adc
aaa
das
std
movsl
mov
sbbl
sub
sub
mov
jne
jecxz
iret
push
jl
xor
repz
repz
cwtl
xchg
bndstx
mov
xchg
pusha
sub
dec
imul
inc
rorb
pushf
jno
cwtl
jbe
mov
xchg
fsubs
inc
aad
rcrl
and
aam
fsubr
popa
mov
hlt
ds
dec
or
xor
sarb
pushf
vandps
or
cmp
dec
xchg
and
in
cltd
mov
and
and
xchg
adc
add
jns
sbb
scas
out
cwtl
jno
in
or
mov
adc
sarl
out
sub
xchg
lcall
xor
xor
lock
and
jns
mov
popf
call
cmp
cmpsl
cli
fstl
mov
jns
fs
xchg
cmp
xor
sbb
dec
hlt
add
adc
or
in
daa
in
enter
enter
subb
je
xchg
imul
pushf
sbb
push
sbb
xlat
push
shlb
add
xchg
push
sbb
adc
ret
pop
adc
movsl
inc
sub
insb
sub
mov
mov
fucomip
push
fimuls
mov
es
inc
jmp
movsb
cmpb
aam
in
push
lcall
scas
repz
xchg
and
xchg
sub
cmp
clc
xor
data16
dec
jg
int
inc
and
lods
mov
xor
mov
mov
cmp
pop
subb
lds
jns
xchg
pop
daa
inc
inc
mov
outsb
mov
jg
out
arpl
icebp
adc
push
addb
in
add
pop
divb
rorl
jbe
aad
push
insl
push
out
ret
sbb
aas
and
jbe
pop
daa
shrb
push
test
popl
add
js
addr16
inc
inc
jbe
xor
adc
xchg
int3
xchg
cld
sbb
mov
adc
mov
mov
aad
and
mov
repz
inc
pushf
dec
jmp
repnz
adc
outsl
pop
jmp
mov
push
test
mov
je
dec
mov
mov
fmul
pusha
push
hlt
push
ljmp
inc
or
outsb
or
lret
inc
rolb
aad
call
mov
pop
sbb
roll
xor
pop
cmp
sbb
sbb
bsf
sub
mov
and
inc
fldl
and
mov
das
imul
mov
cli
rcrb
movl
les
cwtl
rcl
iret
jl
or
repz
or
popa
fistpll
mov
dec
xchg
or
int3
dec
jns
test
jecxz
sub
lcall
fsin
mov
add
jo
sub
push
fisttpll
xchg
inc
aaa
in
or
movsb
sub
lcall
xchg
repnz
jno
add
aam
mov
jno
mov
stos
sub
jae
pusha
dec
rolb
pop
popa
jp
clc
mov
cmp
mov
inc
pushw
mov
mov
inc
cmp
mov
add
in
xchg
test
sarb
mov
fistpl
push
adc
idivb
fcomip
xlat
cmp
imull
enter
sub
mov
into
lahf
into
pop
inc
dec
pop
push
into
ljmp
adc
jecxz
xchg
or
out
mov
js
adc
adc
out
shrl
pop
jp
outsb
sbb
ljmp
adc
mov
imul
std
mov
adc
sbb
in
std
jle
jae
test
shrb
push
stos
pop
mov
pop
sbb
arpl
xchg
ret
push
gs
add
jmp
loopne
test
insl
sbb
xor
cs
or
cmp
and
pushw
das
sub
enter
lea
jl
cmovge
push
mov
jae
decb
inc
adcl
movsl
fmuls
push
mov
and
pop
push
mov
push
filds
insb
pop
xor
mov
dec
sbb
jle
dec
dec
mov
lods
insl
sub
jne
lret
rcl
stos
lock
in
test
shll
mov
push
sub
mov
orl
pop
fsubrs
cmp
mov
fmull
mov
mov
or
mov
xchg
addl
push
sub
sub
rcrl
rorl
imul
js
push
inc
mov
popf
mov
mov
iret
clc
stos
mov
stc
push
mov
mov
mov
in
push
mov
nop
mov
insl
lock
movsb
inc
imul
jbe
ret
cli
stos
hlt
shl
sub
sub
sbb
xchg
add
or
outsl
je
jecxz
sbb
xor
xor
inc
hlt
dec
icebp
xchg
pushf
sahf
mov
das
int3
mov
and
insb
inc
int3
sub
sbb
add
fsubp
mov
out
cs
stos
bound
fists
xchg
hlt
outsb
push
adc
arpl
loop
das
add
cld
repz
sbb
and
sbb
jle
inc
xchg
cmpsb
sub
xchg
jp
inc
clc
ds
push
and
pop
hlt
adc
dec
outsl
pop
loop
and
sbb
jno
nop
pop
popa
mov
pop
sbb
fs
push
pop
cli
jg
stos
insl
std
leave
loopne
fsubs
movsl
pusha
pop
insb
push
lock
cmpsb
jo
xor
cwtl
mov
out
xor
imul
and
cwtl
ss
or
inc
push
test
pop
pop
idiv
jno
adc
scas
sbb
or
mov
js
dec
int3
rcll
inc
push
mov
mov
sti
jg
mov
sbb
loopne
pop
jge
push
sarl
into
ljmp
cld
in
xchg
sub
push
and
das
lods
retw
ja
hlt
xor
sbbl
repz
not
mov
bound
mov
dec
cmp
or
sub
mov
sti
mov
das
test
push
or
sbb
inc
mov
pop
adc
dec
sub
push
and
mov
cmpsb
lahf
pop
push
mov
enter
xchg
inc
cmp
mov
jbe
sbb
jns
or
movsb
jne
inc
push
aas
jae
add
out
mov
aad
cmp
lds
cwtl
cmp
xchg
jl
pop
cmp
inc
dec
push
iret
pushf
dec
cmp
mov
clc
or
cmp
xchg
ret
movsb
xchg
stos
pushf
shll
and
sub
sar
int3
out
es
sti
shl
jae
in
xchg
xchg
adc
mov
mov
into
fwait
idiv
mov
out
jle
cmc
int3
dec
add
mov
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
repz
pop
jp
inc
std
and
pop
fists
adc
js
sub
je
push
cmc
js
add
cmp
and
outsb
xchg
add
sti
cld
cwtl
mov
or
std
inc
push
push
fs
and
inc
and
push
jle
adc
inc
ljmp
cli
dec
mov
add
gs
jo
mov
push
out
push
call
inc
cmp
dec
adc
mov
inc
jno
aas
jns
pshufw
scas
mov
test
mov
mov
adc
pusha
call
in
jae
dec
adc
xchg
std
adc
mov
rcrl
test
jmp
or
call
push
cmp
and
ds
adc
mov
je
pop
dec
fisttps
add
aad
jmp
call
add
pusha
out
pop
sub
mov
movl
inc
mov
cmpl
and
xchg
or
adc
adc
jmp
fsubl
es
ret
add
add
stos
add
or
test
add
rol
mov
inc
push
mov
adcl
jecxz
daa
adc
mov
orb
mov
js
shl
invd
sbb
scas
ret
inc
inc
xchg
dec
xor
push
inc
shll
mov
push
cmp
jb
call
sub
lahf
popa
jmp
adc
and
add
jb
inc
jle
mov
rclb
jecxz
movb
cmpsb
dec
sbb
push
push
rdpmc
testb
fnstenv
and
xor
mov
sbb
mov
test
rorb
cmpsb
addr16
mov
orb
push
fimull
add
aaa
add
jne
cmp
or
push
ret
sub
cmp
loopne
or
mov
jmp
repnz
add
push
pop
or
mov
fsubr
and
cmp
mov
add
xor
adc
movb
test
clc
bound
mov
popf
or
je
bound
lret
push
call
movsl
imul
mov
and
xor
add
mov
sbb
mov
out
add
xor
pop
je
test
fstpt
mov
shlb
adc
cmpb
jne
and
shr
and
cmp
mov
jg
mov
fadds
test
leave
je
mov
xor
push
ret
sub
int3
rclb
pop
mov
jnp
cltd
arpl
add
jne
adc
ret
cmpb
and
xor
add
push
popa
or
adc
pop
shrb
aaa
jmp
and
inc
pushf
jge
cmpl
cld
add
lea
jg
clc
test
lock
push
hlt
push
adc
gs
lock
shl
add
in
sub
fisttpl
sti
lock
xor
ja
jmp
and
cli
or
ficomps
mov
adc
push
test
or
outsl
and
or
pop
lock
hlt
in
cwtl
add
jbe
movsl
xor
cmp
push
cld
jb
loopne
fistpll
es
sbb
sbb
adc
sarl
cmova
jne
mov
mov
cmp
mov
adc
pop
mov
mov
repnz
sti
push
lret
add
adc
les
and
shlb
push
les
mov
mov
xor
ss
inc
push
sbb
les
inc
inc
push
les
add
in
mov
sub
ret
mov
mov
shlb
add
push
outsb
mov
and
mov
gs
mov
xor
addr16
add
jbe
adc
sarl
cmp
inc
bound
cs
gs
push
push
lahf
add
push
mov
roll
sub
jne
xchg
adc
repz
adc
aaa
jo
in
or
mov
int
lods
out
pop
xchg
incl
ja
mov
mov
adc
adc
jae
or
js
or
sbb
seto
dec
or
jle
xor
test
adc
jne
mov
aas
out
or
out
leave
xor
pop
and
adc
inc
xor
inc
jmp
les
dec
and
adc
rolb
pop
subb
data16
xchg
and
mov
mov
xchg
inc
mov
pop
ljmp
mov
mov
jbe
fimull
imul
loop
call
inc
or
adc
rcrl
inc
sahf
cltd
repz
mov
sbb
add
sub
stc
out
nop
jge
mov
sub
fists
sbb
mov
add
stc
ljmp
dec
sbb
jg
add
out
sbb
xchg
fcoms
xchg
les
jb
push
jmp
adc
mov
fs
dec
cmc
sarb
inc
push
mov
shl
stos
sub
stos
mov
inc
pop
xchg
fcmovne
inc
ret
adc
cs
sub
imul
shll
xor
add
sub
jb
pop
shr
mov
hlt
cli
icebp
add
test
push
data16
imul
stos
or
divb
pop
mov
aam
jo
bound
sbb
pushf
jg
add
lea
pop
adc
pusha
pop
add
clc
and
pop
add
adc
lods
xchg
sbb
inc
cmp
rolb
rcrb
adc
sbb
push
neg
jo
cmp
mov
dec
ljmp
xchg
or
loopne
dec
lods
jle
fwait
cmc
inc
and
outsl
test
add
cmpsl
lret
jp
xchg
xor
add
pushf
jnp
stos
or
adc
filds
pop
ds
pop
mov
aad
add
mov
and
fs
xchg
pop
sub
jg
mov
fisubrl
enter
or
xor
cwtl
sar
sbb
in
fnstsw
add
inc
test
dec
lock
jnp
shlb
or
adc
add
pop
mov
add
jmp
scas
sbb
out
push
dec
in
mov
leave
pop
cld
cld
je
aas
cwtl
xchg
add
sbb
repnz
mov
jnp
dec
add
call
loope
ds
sbbl
movsb
les
pop
sahf
xchg
scas
inc
orl
shrb
add
and
mov
pop
pop
data16
bnd
int
lds
fdivl
add
mov
dec
lods
pop
add
hlt
cmp
pop
or
adc
lcall
xor
pop
add
icebp
imul
mov
lock
push
inc
stos
dec
lods
in
icebp
sbb
and
dec
std
dec
arpl
int
inc
sbb
adc
insl
lcall
or
out
sarl
cmc
repz
and
stos
pop
lods
push
dec
mov
arpl
enter
xor
jbe
jg
jp
jl
dec
add
in
mov
fnsave
sbb
jbe
loopne
jl
cltd
mov
pop
and
dec
mov
push
cld
sti
add
sbb
inc
in
or
mov
insl
aam
jne
xchg
mov
jmp
xchg
inc
shlb
xor
mov
xor
jl
inc
in
adc
js
gs
mov
mov
and
push
push
xor
in
mov
push
mov
pop
mov
orl
lock
push
add
das
jl
mov
dec
int3
bound
imull
pop
lods
add
loope
mov
mov
add
pop
xor
and
str
inc
cwtl
mov
incb
mov
pop
call
rcll
leave
cmp
imul
nop
adc
jle
test
pop
imul
dec
cmp
jnp
cmpsl
add
cltd
lods
fiaddl
pop
add
dec
ja
or
ret
into
daa
sub
xchg
mov
pop
mov
sub
add
xor
adc
inc
push
or
frstor
loopne
enter
fcmovne
cwtl
aad
fidivl
dec
les
xor
fmull
dec
mov
in
inc
call
jmp
leave
push
lods
push
mov
cmp
enter
cmp
push
mov
jecxz
shll
dec
lahf
add
fnsave
rcrl
mov
jg
push
insl
jl
mov
sbb
or
sub
push
cmp
inc
jle
mov
addb
push
sub
sub
pop
leave
leave
inc
mov
inc
sti
push
test
push
loope
push
js
cmp
add
insl
xchg
inc
mov
jp
and
adc
fnstcw
bound
hlt
dec
adc
aaa
jb
shrl
push
bnd
gs
in
add
mov
add
stc
lea
or
test
jle
xchg
add
dec
inc
mov
icebp
call
jle
mov
cmpl
out
in
jne
call
sbb
xchg
xlat
xor
ret
and
int
add
push
stc
push
add
icebp
movsl
in
pusha
sub
mov
adc
add
inc
jg
nop
call
add
xor
aad
nop
sub
fildl
sarb
sbb
add
mov
jnp
push
test
fcoml
sbbl
shlb
pop
sbb
push
stc
and
mov
sbb
fnstsw
mov
inc
and
sahf
add
inc
xor
jb
add
mov
sarl
test
adc
call
or
hlt
or
rclb
adc
add
mov
push
in
sbb
or
inc
sbb
lea
loop
lds
push
push
insb
dec
pop
nop
stc
les
add
jnp
or
mov
mov
add
mov
stc
push
or
jg
lods
push
mov
cli
cmp
add
xor
js
push
cld
jle
fcmove
dec
sub
push
adc
js
pop
jns
sub
inc
ss
dec
jo
xchg
iret
xchg
dec
xor
fs
jnp
loopne
cltd
std
or
movsl
test
std
pop
out
xchg
xor
xor
enter
pusha
test
cld
xlat
dec
rcr
pop
fbld
sub
sub
addb
adc
flds
mov
xchg
fdivr
lds
fisubs
stc
aas
xor
sub
pop
movsl
imul
jg
xchg
subb
enter
scas
push
sqrtps
sarl
push
lods
test
sub
cwtl
js
andl
mov
mov
lock
fildl
sub
or
sub
mov
inc
jl
add
sbb
sub
jmp
stc
aaa
mov
filds
or
lods
inc
clc
std
aaa
sub
fildl
inc
mul
push
push
das
mov
add
push
push
push
inc
icebp
movsb
in
jg
lods
push
inc
call
dec
mov
xchg
sarb
add
wrmsr
dec
addr16
cmp
and
aam
add
xor
or
lret
or
mov
shrl
xchg
sbb
cmp
popa
mov
mov
push
rol
mov
xchg
loope
xchg
jl
aam
jns
jne
xor
test
rol
adc
or
cmpsl
push
add
pop
insb
aam
shrl
loope
insl
outsb
add
inc
movsb
pushf
and
test
flds
push
test
mov
xchg
les
mov
adc
cmp
fstp
sbbl
mov
hlt
adc
imul
inc
or
jb
mov
add
jle
cmp
loopne
sbb
mov
or
dec
stc
jns
pusha
fisubl
mov
roll
add
in
idivl
sub
sub
or
sti
nop
cwtl
in
shrd
adc
loopne
cmp
jb
mov
lcall
jg
dec
jne
mov
or
stos
out
xchg
xor
mov
dec
cwtl
jae
cmp
dec
jns
in
dec
and
cmp
movb
sarl
pop
orb
cld
call
mov
roll
cs
mov
nop
mov
inc
addb
pop
aad
sub
cmp
scas
pop
cmp
lods
jl
add
or
pusha
dec
dec
mov
addl
insb
push
outsl
xchg
roll
sbb
mov
add
jl
lret
in
add
inc
in
shl
sub
gs
push
or
jo
jns
push
std
jle
xchg
test
push
jne
xor
and
dec
mov
sahf
scas
cmpsl
add
enter
cmc
sub
sti
mov
or
fdivl
test
pusha
cmp
mov
sub
add
jle
loopne
jnp
push
scas
cmp
and
push
mov
loopne
or
mov
je
orb
sti
adc
pop
leave
or
push
push
ret
push
xor
ljmp
repnz
jbe
xor
push
test
dec
enter
inc
je
repnz
imul
test
mov
test
mov
xchg
add
dec
xor
decl
jno
fcomip
xchg
hlt
shll
sub
int
testl
stos
fsubrl
inc
xchg
test
push
and
andl
testb
adc
xor
ds
popa
inc
xchg
clc
jo
xor
cwtl
arpl
lods
inc
or
rep
inc
icebp
push
add
fistpll
stos
daa
pop
lods
mov
adc
lds
and
xor
loope
add
insl
mov
push
mov
addl
xchg
jmp
mov
inc
add
gs
add
sbb
sbb
iret
mov
inc
bound
pop
dec
mov
jns
add
cmp
out
in
addb
fcmovnb
add
adc
jl
xchg
je
dec
add
scas
movsb
mov
mov
xchg
inc
jnp
lds
adc
mov
mov
in
aas
add
push
clc
stc
add
xor
fdivrs
fsub
loopne
xor
andb
lea
pop
mov
xchg
jo
sbb
jne
fildl
pusha
std
dec
jl
popf
mov
cwtl
loop
jge
orb
scas
in
addr16
pop
popl
lds
imul
stos
add
mov
addr16
jo
push
sub
mov
data16
cwtl
cmp
xor
pop
lret
pop
cmp
std
pop
dec
shll
jne
mov
push
scas
mov
lds
sbb
cmp
jb
call
add
je
cmp
hlt
icebp
test
frndint
jne
pusha
xchg
inc
push
das
adc
orb
xchg
gs
pusha
add
stos
mov
cmp
cmpsb
in
mov
sbb
fcmovne
mov
rol
hlt
dec
std
xchg
add
int3
lcall
adc
adc
mov
insb
add
xchg
or
mov
mov
mov
ret
adc
add
add
fbstp
jmp
add
push
jbe
stos
out
mov
mov
jl
add
sbb
mov
cmp
or
repnz
pop
and
mov
out
jg
iret
pop
mov
ljmp
pop
dec
mov
lods
and
mov
jmp
cmp
incl
nop
ds
add
jl
out
or
pusha
xor
add
adc
lods
and
adc
insb
cmpsb
sub
sbb
gs
scas
xor
incb
and
sbb
orb
sbb
xchg
cmp
fwait
cmpsl
xchg
sbb
add
out
cmp
or
pop
dec
int
mov
push
dec
add
mov
pusha
mov
in
loopne
stc
jae
jge
dec
mov
pop
push
pop
ds
dec
push
in
sbb
add
add
xchg
scas
xchg
or
test
movsb
test
or
inc
outsb
arpl
push
or
dec
stc
lods
or
xchg
ss
xchg
jne
add
pop
sub
dec
sbb
and
lock
add
mov
cmp
in
je
cmp
lock
adc
add
lock
push
leave
xor
pop
mov
movsb
inc
mov
add
inc
or
fdivs
sahf
gs
add
push
dec
mov
sbb
scas
mov
in
inc
cmp
or
stos
jp
or
shll
inc
adcl
xchg
rorl
nop
cmp
cmp
or
fcoml
sbb
jle
icebp
push
in
cmc
pop
inc
mov
fucomp
movl
sub
mov
jo
mov
cltd
fsts
lahf
pop
addl
aas
in
add
pop
js
pop
scas
lea
adc
add
fldcw
inc
repz
pop
xor
inc
test
and
push
push
cli
test
jge
out
cmpsl
inc
sbb
pusha
mov
daa
stc
cld
inc
and
jl
sub
inc
pop
xor
bnd
dec
inc
cmp
daa
cmc
aas
pusha
mov
insb
jae
add
mov
inc
insl
cmc
push
add
outsl
iret
test
inc
adc
loopne
sub
add
sbb
dec
out
loop
pop
xor
insb
jl
or
adcl
dec
sbb
mov
roll
dec
in
mov
rolb
lret
mov
inc
hlt
dec
rcr
call
andl
adc
push
or
jns
xor
insb
jl
repz
add
arpl
xchg
stc
pusha
add
jge
pop
mov
ja
or
adc
push
movsb
jg
dec
sbb
frstor
and
popf
nop
aam
daa
add
xor
lock
jg
clc
loopne
js
push
cmp
fiadds
inc
dec
mov
orps
js
rorb
xchg
xor
loope
inc
iret
cli
xchg
and
adcl
adc
fs
mov
inc
add
sbb
orb
and
stos
add
subb
add
cld
clc
aaa
outsb
jge
je
inc
add
sbb
js
inc
mov
jbe
repz
andl
pop
into
sub
jecxz
or
int3
mov
sbb
divl
lock
fidivrl
lahf
test
ret
movsl
and
or
ds
inc
mov
pop
or
sbb
ficoml
jmp
jecxz
sub
mov
pusha
jl
add
dec
dec
mov
pusha
or
movsl
push
dec
jno
add
pusha
fsts
adc
lret
dec
out
and
ficoml
inc
in
push
xor
lret
daa
or
add
jno
adc
test
pusha
icebp
imul
add
add
inc
xor
cmp
pop
ja
add
pusha
test
mov
sbb
pop
sbb
jle
subl
inc
mulb
out
sbb
mov
xorl
jle
cltd
aam
inc
sbb
jb
add
fs
jns
mov
loopne
xor
scas
mov
pusha
pushf
dec
cmp
dec
sub
mov
movsl
jge
cmp
cmp
cmp
ror
xchg
out
sbb
xchg
mov
decb
dec
inc
loopne
add
jmp
test
sbb
xchg
pusha
cmp
in
pop
cwtl
mov
std
stc
lret
push
sar
adc
dec
and
inc
inc
and
pop
xchg
dec
sbb
int
aas
and
pop
jae
jle
inc
mov
dec
adcl
dec
cmp
mov
jl
push
or
mov
mov
dec
push
enter
xor
les
mov
xor
shrb
sub
rclb
mov
or
dec
push
cld
jo
xor
or
fadd
lret
ja
add
adc
imulb
fbstp
add
and
fcoms
in
lock
jns
orb
add
cli
mov
loop
insb
jnp
add
add
std
inc
scas
add
fwait
ja
cmpsl
or
xor
movsb
cmp
ja
pop
movsb
test
add
insl
arpl
nop
push
cmp
imul
mov
dec
test
xlat
sub
add
call
add
xchg
mov
mov
mov
sub
shl
add
dec
rcrb
xor
pop
test
fcoml
inc
adc
xchg
mov
add
add
jns
mov
push
push
add
ss
add
insl
add
sti
adc
jae
push
scas
xchg
pop
and
mov
pop
adc
xchg
test
lahf
mov
ret
orb
inc
push
jmp
pop
mov
dec
cmpl
and
rclb
fsubs
jge
or
and
ss
test
aas
sbbb
addl
push
push
test
sub
in
popf
mov
jns
pop
inc
add
xchg
xchg
mov
xchg
jbe
popa
push
dec
in
jle
or
adcb
add
test
loope
add
add
les
lret
js
fdivrs
jo
add
imul
stc
push
test
jmp
scas
inc
and
pusha
fcoms
das
add
ljmp
jl
sti
push
out
or
fstps
and
dec
and
lahf
sbb
movsl
insb
dec
lret
lds
add
xor
roll
add
or
ljmp
je
add
mov
cmp
fldl
ret
sbb
test
push
pop
push
jbe
out
push
dec
in
fcoml
dec
das
sarb
filds
ficomps
stos
sbb
pop
push
add
inc
add
cmp
mov
xor
adc
inc
push
or
push
lods
cwtl
nop
les
fsubp
and
push
dec
jg
adc
add
rolb
xor
movsb
shrb
nop
les
or
stos
add
fcomi
add
inc
lret
rcrb
sbb
push
loopne
jg
jb
push
xor
clc
movsb
pop
sbb
adc
mov
les
jecxz
lcall
imul
adc
movsl
ffreep
inc
add
xor
inc
call
out
jbe
cmp
bound
mov
pop
mov
and
jo
adc
xchg
insb
jl
sub
pop
imul
js
popf
filds
dec
jo
pop
add
mov
xchg
fadds
fisttpll
pusha
loope
popf
scas
push
loope
adc
or
mov
xor
sbb
cwtl
enter
and
jo
pop
repnz
outsl
add
shr
pop
xor
cmpl
push
push
add
cs
xchg
dec
sub
shlb
sub
in
lret
jbe
pop
nop
pop
pop
cmp
flds
fisubl
dec
adc
xor
repnz
xchg
rol
inc
mov
test
jo
rorb
ror
fbld
push
movsl
shlb
push
test
ret
mov
sti
add
and
jg
mov
mov
cmp
sti
fwait
mov
shlb
in
xor
mov
sbb
push
je
push
lods
sub
insb
add
adc
mov
loopne
inc
iret
stc
movsb
movsb
lods
pop
cltd
nop
pop
pop
fnstsw
inc
adc
lret
cmp
call
sub
push
adc
out
lret
sbb
lcall
push
jg
mov
xchg
jb
lcall
or
lea
dec
in
pusha
add
add
dec
dec
outsb
jmp
or
mov
add
add
in
nop
pushl
ds
rcl
cmp
push
xor
inc
mov
cli
xchg
sarb
dec
sub
ja
enter
push
mov
adcb
sub
push
out
loop
lds
push
in
mov
add
or
jmpw
inc
push
or
aad
adc
xlat
add
jno
xchg
mov
sti
add
les
push
jns
mov
lcall
and
adc
xor
jl
dec
mov
jns
data16
push
lods
les
mov
mov
in
cltd
idivb
and
sbb
push
test
ljmp
and
mov
test
movsl
adc
inc
call
xchg
scas
test
xchg
lock
cmp
loope
addb
jnp
ds
xchg
sbb
sub
dec
sarb
insb
negl
xchg
mov
popf
loopne
loop
fsub
shrl
int3
jl
dec
mov
adc
imul
cmp
mov
into
std
push
lods
add
dec
sub
icebp
orb
lahf
test
mov
fsubrp
mov
add
cli
fs
or
pop
movsb
mov
clc
xor
in
call
movsl
dec
mov
xchg
rolb
rcrl
jns
dec
mov
jp
imull
jne
xchg
add
aad
add
cmp
std
adc
adc
add
jae
or
mov
add
lods
dec
or
adc
roll
sbb
dec
add
jp
gs
jle
fsubrs
jne
incb
in
mov
add
stc
dec
pop
enter
add
mov
jns
and
mov
orl
xor
mov
mov
xor
out
sub
mov
jmp
popf
mov
push
inc
and
cld
mov
pop
jb
mov
and
push
sahf
pop
shll
or
aam
and
scas
repnz
push
int3
lcall
out
mov
mov
add
les
sub
lods
in
inc
nop
loop
repnz
xor
cmpsb
add
jl
cld
sbb
xorb
in
shlb
iret
add
mov
or
add
mov
push
fucom
jl
adc
popf
cmpsb
andb
sub
scas
cmp
mov
push
outsl
inc
add
inc
fsubrs
adc
cmpsl
dec
iret
icebp
stos
sub
add
mov
add
sub
inc
add
sbb
mov
or
add
into
daa
call
vcvtsi2sdl
jge
mov
pop
add
nop
and
in
daa
pop
insb
xchg
rcrl
cmp
xchg
mov
imul
inc
insl
mov
dec
pusha
scas
popf
out
sbb
inc
loopne
mov
fnstsw
mov
add
push
out
fcmovnb
aam
ret
add
sbb
inc
sub
pop
cmp
inc
daa
pop
lahf
into
add
xor
adc
outsb
adc
js
cmp
test
out
sti
adc
inc
popf
adc
xchg
mov
pop
imulb
xchg
dec
mov
movsb
push
repz
push
les
stc
movsb
ror
testl
ljmp
inc
adc
jle
fadds
movb
cltd
cmpsl
jns
push
inc
in
mov
mov
clc
dec
mov
loop
inc
mov
and
adc
outsl
and
ljmp
stc
push
int3
mov
mov
lods
pushf
jge
inc
adc
and
jo
mov
and
test
push
mov
or
push
rol
sbb
sbb
pop
jo
dec
mov
repnz
aaa
xchg
jb
inc
add
inc
xchg
push
fnstcw
aad
shlb
in
jnp
out
movhps
rcrl
mov
ret
mov
push
std
sbb
in
add
mov
jmp
mov
inc
sbb
lock
shlb
mov
aam
daa
adc
xchg
adc
dec
mov
mov
inc
stc
shl
xchg
jecxz
xor
das
std
aaa
pop
push
adc
adcb
popf
inc
lret
and
and
test
mov
xchg
in
leave
dec
test
inc
push
push
mov
mov
cmp
and
jmp
mov
mov
fildl
cmc
mov
hlt
std
jl
test
adc
and
add
lods
adcb
sbb
pop
sbb
or
hlt
adc
scas
inc
mov
cmc
sub
add
insb
push
jge
jp
ret
push
sub
and
mov
mov
mov
xchg
and
xor
xlat
add
jg
lods
dec
mov
cmpl
mov
test
xchg
lret
dec
subb
adcb
inc
jmp
inc
fists
rolb
je
dec
xlat
or
and
and
scas
hlt
faddl
push
fistpll
subb
insb
jmp
sub
dec
std
adc
push
xchg
mov
adc
sub
or
dec
push
sbb
mov
decl
pop
pop
dec
or
mov
jo
dec
subl
mov
jecxz
cmp
xor
add
xor
out
dec
mov
mov
cli
testl
push
xchg
out
ljmp
and
insb
or
mov
sub
xor
fisubrl
insb
push
inc
inc
or
ror
std
jmp
arpl
push
or
aas
jle
xchg
dec
inc
cwtl
ja
int
or
push
jns
or
std
cmp
iret
int
pusha
rol
cmc
sub
out
xlat
lods
ljmp
or
mov
dec
xchg
pop
xor
out
sub
rclb
push
and
jge
or
das
push
xorb
mov
or
sbb
and
jg
xor
rorl
int
lods
test
sbb
lret
push
insb
pushf
fucom
xchg
sbb
push
leave
mov
inc
sbb
mov
sub
aam
mov
push
mov
roll
loope
xor
mov
or
sub
mov
jecxz
ret
inc
mov
dec
and
aad
sbb
cmpsb
test
inc
test
mov
sbb
lahf
aaa
in
mov
jmp
pusha
sbb
rclb
test
and
mov
mov
movsl
rorl
mov
ja
xchg
pop
inc
push
mov
inc
jle
add
in
mov
mov
rorb
dec
dec
dec
mov
xchg
jl
cli
jnp
outsl
pop
dec
xor
adc
enter
pushf
mov
and
or
js
icebp
inc
pop
aad
cwtl
push
dec
and
sub
or
push
fsubl
xor
pop
lods
pop
js
movl
mov
insl
adc
or
jg
cmp
and
or
fs
push
add
jl
in
filds
fsubrl
into
or
int
and
xchg
das
and
faddl
imul
es
add
lret
inc
mov
dec
pusha
stos
jns
cmovle
divl
in
push
mov
in
jle
or
xor
mov
add
push
aas
loop
aam
inc
mov
mov
and
inc
pusha
sbb
xchg
nop
jo
jp
fildl
pop
sbb
aaa
jmp
call
add
lods
push
out
cmpsl
dec
hlt
sti
inc
daa
mov
push
test
mov
aas
aad
cmpsl
inc
clc
outsl
rcll
leave
mov
mov
aas
cmpsb
outsl
pop
dec
sub
pop
test
pop
rcrb
hlt
pop
dec
add
sarb
pop
inc
add
adc
mov
inc
test
out
dec
jb
jl
xorb
jne
dec
gs
in
pusha
aam
and
sbb
cmp
add
add
dec
das
ror
rcrb
xor
add
mov
mov
push
lock
inc
fildl
push
gs
lcall
lods
sub
enter
es
flds
repnz
repz
les
into
pop
add
stc
sub
xchg
and
fildll
xor
adc
add
dec
in
arpl
dec
rol
ret
pop
hlt
daa
cld
shlb
adc
sub
hlt
daa
rcrb
jl
les
in
call
test
andb
jo
hlt
add
jnp
mov
mov
hlt
and
dec
pop
rorl
cmp
in
pop
aad
dec
pop
rolb
or
dec
sbb
sub
xchg
add
stc
test
test
outsl
and
enter
les
add
pop
in
dec
std
jb
add
mov
or
pop
insl
jmp
gs
sbb
fistps
mov
inc
or
sbbl
xor
sbb
movsl
or
pushf
xchg
mov
jle
pop
cmp
pop
add
jl
stos
pushf
push
sbb
cmpsb
or
jno
outsl
pop
rorb
add
push
lods
inc
dec
jecxz
adc
inc
mov
adc
inc
and
and
ret
add
popa
push
pop
cmpsl
dec
test
and
jge
insl
cmp
sub
imul
iret
loop
cs
loope
add
and
adc
xor
adc
inc
enter
test
mov
xchg
mov
mov
hlt
mov
test
arpl
std
dec
movsl
dec
sbb
add
lds
jle
je
mov
push
test
jmp
pop
lods
ljmp
adc
mov
sbb
icebp
and
inc
adc
mov
cmpsl
sub
jae
roll
popf
and
out
mov
push
and
cmp
xchg
and
ret
or
cwtl
data16
dec
adc
inc
cli
pushf
sub
sbbb
pop
negb
inc
add
or
add
jns
daa
jno
add
arpl
into
movsl
add
jg
clc
push
inc
jnp
lret
pop
mov
dec
cmp
push
faddl
pop
imul
mov
int3
lahf
inc
stc
xor
adc
stos
out
leave
adc
cli
inc
cmp
roll
out
cld
xchg
dec
mov
icebp
std
shrl
or
sbb
push
loopne
inc
mov
lock
push
test
jecxz
mov
leave
in
cmp
jo
cld
hlt
cmpsl
js
pop
pop
int
mov
addb
and
sbb
mov
adc
pusha
cmp
add
testb
cmp
and
or
inc
mov
push
cs
rcll
neg
mov
adc
lea
pushf
pop
adc
fcmovnb
sbbl
xor
mov
fnstenv
incl
hlt
dec
push
enter
mov
fidivl
mov
and
jp
or
leave
or
xor
jle
inc
jns
inc
test
je
and
movsb
jl
add
or
mov
insl
mov
shlb
jg
mov
dec
mov
enter
movsb
sar
xor
mov
rorb
sbb
loopne
xchg
jecxz
and
into
cli
cltd
je
add
aad
pop
xchg
and
adc
shrb
mov
adc
pop
add
loopne
mov
inc
movsb
daa
or
fbstp
xlat
cmp
aam
push
mov
lods
push
cmc
mov
fucomip
jbe
outsb
addb
sub
loopne
iret
nop
sbb
push
mov
addr16
flds
and
addl
xchg
pop
mov
pop
hlt
cld
repz
xchg
adc
clc
dec
fwait
fs
xchg
adc
jge,pt
cld
inc
mov
pop
dec
in
mov
fcoms
dec
cltd
mov
push
pop
das
pop
dec
adc
in
jnp
add
xchg
mov
test
sti
xchg
sbb
fisttpll
sbb
push
jno
mov
int3
and
stc
push
addb
nop
add
rorl
pop
sub
ret
sbbl
inc
movsl
add
dec
sub
inc
fdivrs
sbb
jno
cmpsl
inc
inc
dec
dec
xchg
mov
xor
mov
ret
cwtl
cmpb
xor
scas
mov
enter
or
std
iret
loope
jle
shlb
sub
movsb
jo
add
fisttpl
les
push
xor
sbb
adc
xchg
sbb
add
sbb
jns
stc
pop
xor
push
pop
cld
ret
in
pop
add
imul
mov
add
imul
roll
mov
mov
sbb
push
lret
and
sti
xor
mov
inc
orb
cltd
pop
outsl
push
cmp
add
enter
ds
jg
in
push
mov
dec
xchg
push
dec
repz
ds
dec
xlat
call
mov
jp
adc
sbb
sti
pop
and
dec
fdivs
sub
add
sub
int3
sbb
out
push
js
insb
inc
out
mov
je
pop
gs
mov
lock
pop
repnz
mov
and
ret
pop
pusha
adc
loopw
adc
add
insb
arpl
in
mov
rcr
out
add
sub
in
adc
test
dec
xor
popf
mov
inc
push
sub
in
cmp
movsb
jmp
mov
add
push
mov
xor
leave
insb
or
gs
pop
xchg
cmp
incl
nop
cmp
ljmp
jae
cmc
inc
lea
enter
push
or
dec
fldl
cmp
dec
inc
fs
xor
dec
add
std
push
adc
cmpl
jge
add
outsb
and
mov
nop
push
repz
lea
pusha
into
lock
push
dec
in
enter
push
scas
pop
cltd
xor
sti
sub
std
inc
das
or
pop
add
cmp
dec
add
mov
cltd
sarb
pusha
les
in
adcl
shl
les
add
shl
dec
rol
pop
fisubrl
dec
mov
pop
mov
lahf
pop
mov
sbb
push
dec
and
pusha
and
pop
push
xchg
or
out
inc
shlb
mov
pop
inc
or
dec
js
inc
leave
push
out
bound
out
sbb
inc
faddl
popf
test
sbb
sti
aaa
leave
mov
jo
mov
repnz
xorb
xor
mov
jae
loop
xor
push
xchg
inc
fcoml
pop
enter
cwtl
mov
add
cmpsl
pop
adc
dec
add
popf
leave
xchg
mov
cltd
xchg
cmp
fwait
rol
cmp
jge
sbb
sbb
pop
push
push
jns
push
nop
pusha
cmp
add
cmp
dec
mov
mov
or
jo
pop
movsb
dec
jns
sbb
sub
dec
gs
inc
mov
in
pop
xchg
hlt
inc
pushf
inc
inc
add
jecxz
add
mov
fwait
mov
inc
adc
mov
mov
adc
pop
jle
mov
in
push
jbe
inc
shrb
les
jo
je
cli
inc
cmp
pop
add
imul
xchg
scas
pop
nop
jge,pt
lret
add
fildll
mov
jg
test
mov
pop
test
jb
nop
cld
mov
push
push
xor
ss
pop
cld
dec
imul
sub
in
incl
popa
adc
push
jl
cmp
jge
or
mov
repz
xchg
and
add
xor
pop
outsb
jge
add
mov
popf
pusha
adc
out
push
pop
in
push
xor
daa
idivb
bound
push
sub
inc
ljmp
jbe
xchg
bound
pop
lahf
and
inc
subb
clc
inc
cmp
cmpsb
sar
or
int3
adcb
aam
pop
jp
xchg
add
sahf
cmp
in
int3
rorb
test
daa
mov
sbbb
pop
sub
inc
call
or
jg
sbb
mov
shrb
push
dec
and
and
inc
ret
js
je
add
test
pusha
add
inc
iret
cld
stc
jo
sub
cwtl
adc
mov
jnp
inc
adc
mov
stos
mov
inc
pusha
lock
test
xchg
mov
rorl
adc
xlat
add
mov
inc
in
negl
insb
dec
jmp
call
fs
out
in
arpl
lods
cwtl
push
repz
cmc
adc
enter
aad
aas
ljmp
shr
inc
inc
add
lret
enter
jno
pop
dec
or
out
iret
andl
movsb
loop
sbb
inc
and
data16
cwtl
mov
cmpl
dec
sub
jg
xchg
xor
xchg
sarb
incb
sti
pop
stc
daa
push
xor
fcoml
je
ja
sbb
icebp
cld
das
jecxz
rcll
xchg
xchg
push
and
and
add
in
add
fstpl
loopne
or
add
cltd
ret
mov
movsb
cmp
xor
or
dec
or
pusha
mov
dec
outsl
sbbl
cwtl
rolb
xchg
test
int3
push
mov
dec
pushf
out
lods
and
jae
or
push
mov
dec
mov
inc
pop
call
sti
lock
fnsave
aam
xor
pusha
inc
test
hlt
or
lds
pop
out
ljmp
add
mov
jge
adc
add
inc
sbb
add
push
nop
add
rorb
out
xchg
movsb
mov
sbb
jl
and
insb
xchg
push
cmp
and
inc
jge
imul
mov
lahf
mov
inc
orb
cmpsl
scas
gs
mov
hlt
cwtl
ss
cmp
mov
popf
pop
sub
push
movsb
scas
pop
fadds
icebp
fucomp
cwtl
aaa
ror
add
mov
dec
repnz
cmp
mov
addb
ret
std
insl
aaa
jle
and
lods
jnp
pop
pop
inc
icebp
jge
and
das
popa
js
sti
test
pop
add
or
dec
and
leave
pop
cmp
mov
or
jns
jns
sbb
insb
outsb
fdiv
andb
jbe
push
psubsw
mov
movb
sbb
mov
or
dec
push
cmpsb
js
cmp
cmp
das
mov
cs
ret
and
pushf
add
add
ljmp
dec
out
loopne
lea
inc
add
loop
or
add
cvtps2pd
sub
pop
add
daa
jne
in
iret
add
pop
push
std
mov
shr
andb
mov
iret
je
pop
loopne
xor
add
fs
mov
jle
xchg
js
rcrl
adc
sub
lods
out
mov
std
dec
xchg
jl
dec
and
mov
add
adc
int3
shl
fsts
cmp
push
dec
lock
xchg
or
add
mov
outsl
dec
cld
xor
popa
fistl
jne
imul
ret
nop
scas
dec
pop
mov
inc
inc
enter
jmp
lahf
mov
popf
test
test
add
sbb
and
add
mov
cld
adc
inc
or
push
out
in
scas
cmp
xchg
or
push
fsubs
cs
inc
add
call
idivb
pusha
dec
mov
xor
add
insb
mov
sbb
adc
pushf
sarb
dec
pop
mov
stc
inc
mov
shlb
and
sub
or
pop
cmp
test
les
cli
xor
ja
sbb
cmpsl
xor
sbb
adc
sub
push
xchg
adc
aam
adc
and
add
shrl
jle
mov
sub
popa
sub
and
stos
mov
popf
lds
pop
sub
insb
xor
in
cmc
mov
mov
into
xchg
add
loop
mov
dec
mov
inc
dec
fwait
or
lcall
inc
mov
dec
adc
xor
jmp
pusha
xchg
add
divb
add
sub
rorl
movsl
cmp
mov
adc
adc
or
mov
fisttpll
push
and
mov
mov
incl
sub
adc
mov
and
add
cmp
je
repnz
and
incl
call
stos
scas
fdiv
xchg
jb
add
stc
fimuls
and
sti
es
icebp
and
popa
adc
pusha
push
das
xor
push
xor
sarb
jle
pop
sub
sbb
outsb
or
cwtl
cmp
leave
mov
adc
cmp
std
cmp
dec
xor
shlb
dec
dec
test
dec
mov
mov
arpl
pop
cmp
pushf
cs
sub
std
das
or
dec
adc
pushf
mov
pushf
inc
test
aad
jge
pop
jl
jecxz
sub
outsl
xor
arpl
jp
mov
pusha
mov
add
sar
pop
icebp
sub
jmp
push
pushf
adc
std
cmovnp
arpl
pop
imul
scas
clc
loope
mov
mov
imulb
mov
inc
adc
push
and
in
add
fiadds
or
lret
mov
add
mov
repnz
and
fistl
das
push
push
mov
hlt
out
adc
out
shrl
xlat
push
inc
sbb
jo
add
jge
cmp
loop
mov
xchg
inc
or
insb
aad
pusha
push
push
push
inc
loopne
sub
and
inc
cld
mov
pushf
je
mov
xor
dec
xchg
subb
mov
adc
add
ret
scas
jp
push
lock
pop
inc
movaps
shlb
adc
pop
add
js
pop
xor
enter
aam
mov
sub
pop
icebp
cmpsl
dec
push
ja
clc
mov
popa
push
clc
xor
orb
push
movsb
pop
subl
in
fidivl
xor
sbb
mov
icebp
movsb
jb
or
int
or
dec
inc
xchg
sti
insb
and
dec
mov
fnsave
lahf
popa
shl
mov
insl
cmp
mov
push
lahf
inc
cmp
add
lods
jg
inc
cld
and
mov
cld
add
dec
insl
lret
popf
enter
mov
cwtl
popf
or
mov
dec
stc
pop
and
movsb
mov
mov
pushf
push
add
clc
pop
pop
aam
adc
clc
push
je
pop
inc
dec
pop
insb
push
add
icebp
rcll
fisttpl
inc
popa
inc
inc
push
jmp
or
pop
inc
lret
jle
adc
dec
xor
mov
loop
sub
or
sbb
enter
dec
jno
scas
or
add
and
xchg
rolb
aam
and
insb
and
or
or
lock
or
cmp
fadds
imul
leave
sub
add
clc
sbb
cmc
add
sbb
ret
push
sbb
adc
fstp
or
cltd
add
sbbb
push
int3
or
mov
pop
inc
jg
xrelease
or
or
mov
fsubl
lods
loope
sub
push
or
add
in
inc
mov
or
les
jmp
or
adc
mov
sub
loope
inc
xor
and
bound
add
sbb
pop
out
or
dec
popf
lahf
push
push
inc
das
xchg
add
cmp
int
or
sbb
sub
dec
lret
push
sbb
aaa
fs
sub
push
push
push
jne
push
xor
popf
push
mov
addr16
movsl
sbb
loopne
adc
or
sti
add
mov
dec
ss
sbb
cli
sbb
adc
or
xor
pop
or
sbb
outsb
inc
into
jnp
fsubrs
orb
adc
into
or
cmp
mov
repz
cmpsb
incb
call
sbb
mov
mov
pusha
and
push
add
pop
or
in
lcall
bound
adc
fadds
adc
cmp
inc
or
arpl
or
adc
and
dec
mov
or
or
xchg
or
push
or
inc
addb
mov
mov
bound
pushf
dec
pushf
jae
mov
loope
fs
hlt
add
xor
or
ret
nop
test
cli
adc
lea
adc
add
push
cwtl
mov
jae
ja
and
in
mov
les
pop
cmp
ja
cwtl
xchg
test
arpl
pop
movsb
js
outsl
pop
aas
mov
and
mov
enter
push
push
sub
add
jmp
cmp
lock
inc
cwtl
or
pop
push
inc
mov
in
add
fcoms
sub
push
loop
lock
push
out
shll
cwtl
fisubrs
xchg
int3
mov
mov
test
cmpsl
push
xor
and
add
lea
jae
mov
loop
pandn
dec
loope
arpl
cs
ds
cmp
jns
cli
fadds
pop
inc
hlt
leave
jecxz
mov
or
or
fisubl
in
ficomps
icebp
loopne
xchg
inc
xchg
adc
push
mov
sbb
dec
jge
cmpsb
xchg
cltd
movsl
pop
dec
sub
nop
call
movb
dec
adc
das
test
cmp
pop
ret
add
sbb
out
fdivrs
add
add
mov
and
dec
sbb
lahf
inc
out
das
mov
out
sbbb
sahf
imul
cmp
in
testb
lock
mov
sarl
xor
fnstcw
jecxz
add
stos
or
mov
sbb
cmp
jae
sub
mov
or
addr16
lods
shlb
jge
xor
popa
mov
enter
inc
pop
fbstp
das
pop
jmp
movsb
inc
add
stos
inc
mov
add
mov
xor
sbb
xchg
nop
ret
or
jns
pop
pushf
icebp
add
dec
insl
sub
or
xor
pop
into
out
iret
mov
mov
mov
inc
jmp
out
mov
sbb
or
enter
add
pop
pop
pop
aas
in
add
mov
inc
mov
inc
insl
sub
sarb
mov
loopne
or
or
fsubr
sub
sbb
inc
mov
dec
jmp
mov
popl
dec
sub
adc
pop
or
mov
xlat
repz
mov
jmp
aaa
fstps
mov
pop
jle
aam
in
adc
or
nop
sub
bswap
xchg
insb
or
add
jl
push
push
cli
adc
ja
add
test
dec
inc
jae
and
xchg
jle
cwtl
je
scas
sub
leave
addb
sti
rclb
arpl
leave
arpl
lock
das
add
test
fs
testl
mov
shlb
and
je
sti
call
loopne
add
scas
mov
xchg
in
add
jl
addl
les
mov
push
cmp
in
xchg
inc
push
cltd
dec
push
loopne
or
pop
cmp
sbb
ljmp
sub
inc
inc
xor
imul
mov
xor
cltd
pop
pusha
shlb
sub
or
notb
cld
sbb
js
push
ja
insb
sub
icebp
ret
int3
push
push
jl
and
aas
dec
push
in
pop
es
cmp
cmp
into
mov
push
jl
push
xchg
add
daa
mov
hlt
jno
and
ja
and
sbb
shlb
sub
in
mulb
nop
jmp
fbstp
cmp
xor
cmp
fdivl
add
loopne
push
jmp
inc
xchg
insb
ja
call
popf
inc
pop
dec
or
call
adcb
punpcklwd
dec
lods
xor
pusha
push
cmp
aas
mov
fimuls
xchg
les
mov
imul
mov
mov
test
gs
cmc
je
lods
mov
or
xchg
dec
sub
subb
push
add
pop
fwait
ret
mov
test
add
ficoml
or
sub
dec
pop
mov
mov
xchg
and
sub
cmpb
jo
dec
cmc
ret
div
xchg
cmovp
roll
add
mov
xchg
ljmp
ds
dec
enter
inc
fildll
lcall
jns
dec
sbb
test
sahf
and
or
or
out
mov
mov
pop
adc
cmp
int3
or
sbbb
sub
push
pop
sahf
out
push
rcrl
leave
mov
dec
add
cld
xchg
add
lock
das
xor
std
sbb
addr16
rol
rorb
fsubr
pop
int3
jns
sbb
insl
outsb
scas
fsubrs
jmp
les
jecxz
adc
test
shrb
sub
add
or
push
fcompl
je
rclb
mov
lret
fbld
dec
push
or
jmp
scas
jle
stc
adc
aam
iret
or
dec
cltd
aad
fidivrs
mov
push
mov
repz
movsl
mov
ljmp
mov
cmp
xchg
hlt
fbstp
sbb
cmpsb
lods
es
insl
imul
jge
push
adc
sub
insb
and
jle
repz
fwait
jg
fmuls
sub
mov
mov
int3
cwtl
inc
jo
sbb
pop
bound
inc
sub
and
or
jmp
add
lods
sbb
add
in
and
mov
lcall
or
adc
lds
xor
push
jecxz
nop
adc
stos
fsubs
hlt
adcb
subb
pop
ja
mov
cltd
pop
clc
fadds
sbb
xor
sbb
adc
push
shrb
and
mov
sbb
lock
lea
lret
fwait
in
add
jb
das
xor
dec
stc
insb
jo
repz
rolb
cmpb
outsb
jecxz
sbb
outsl
pusha
mov
xor
jno
adc
shl
cmpsb
adc
inc
inc
int3
cmp
aam
jge
out
stos
sbb
test
pop
lods
xchg
adc
sti
loopne
xchg
gs
nop
and
xor
inc
mov
adcl
or
in
adc
mov
add
repnz
push
in
add
lcall
js
mov
jns
mov
in
xlat
sbb
mov
or
js
adc
inc
or
js
xchg
xor
iret
sub
xor
push
and
jo
icebp
sub
ret
and
pop
pop
mov
mov
cmp
adc
xor
clc
mov
jl
mov
insl
out
xchg
push
xorb
adc
pop
and
stos
push
in
or
inc
movsb
movb
xor
dec
loopne
mov
and
test
pop
mov
inc
adc
out
jns
jo
fisubs
sbb
js
sbbl
jae
fadd
add
cmpsl
push
inc
out
mov
test
negb
dec
hlt
mov
push
es
nop
and
inc
cmp
ds
aam
insb
dec
jmp
loope
stc
pop
arpl
add
inc
and
pop
data16
andb
stc
and
in
out
cmp
cmpsb
mov
dec
add
jl
add
ret
inc
nop
les
icebp
gs
xor
inc
and
sar
add
fstp
pop
outsb
push
push
dec
sub
jne
lds
mov
test
movsb
cwtl
add
inc
xor
sub
popf
sbb
jmp
xor
mov
mov
lock
leave
adc
add
lahf
jg
xor
fwait
jmp
pop
jns
das
loope
cmp
clc
mov
add
xor
aad
stos
enter
ds
add
lds
adcb
jp
dec
sbb
inc
mov
mov
lods
ret
sbb
mov
mov
shlb
enter
enter
cwtl
sub
lods
push
and
and
and
cwtl
pop
shr
sbb
fsubs
lods
sbbl
aad
das
adc
shlb
mov
jo
stc
mov
lods
sbb
pusha
idivb
or
enter
dec
adc
pop
call
xchg
xchg
popf
push
test
dec
cwtl
loopne
insl
shll
inc
push
fnstenv
xchg
mov
bound
test
imul
mov
aam
popa
fcoms
push
add
js
loope
jl
mov
adc
lock
das
cld
imul
cmpsl
xchg
stc
xor
ljmp
pop
or
push
rcl
dec
push
add
adc
clc
mov
push
add
addb
mov
ss
cwtl
les
shll
insb
inc
dec
lcall
add
shrb
inc
xor
add
add
inc
jno
sbb
dec
mov
stc
jge
fdivs
or
test
xchg
in
dec
cmpsb
mov
or
mov
les
pop
dec
or
lods
adc
xchg
loopne
jns
add
das
xchg
xor
push
xchg
inc
pop
inc
icebp
leave
divl
and
xchg
popf
and
mov
lock
add
cltd
leave
ljmp
hlt
adc
add
adc
sbb
pusha
sbb
mov
mov
or
add
fwait
jl
sub
dec
lret
cmp
cmc
pop
rolb
xor
mov
popl
aam
jb
insl
sub
push
cmpsb
pushf
xchg
int
popa
or
sti
mov
cld
cmp
call
loop
push
in
neg
out
rcrb
or
xchg
je
cmp
nop
sub
arpl
lea
cmp
jns
add
xor
and
loopne
in
xchg
sbb
mov
cwtl
in
inc
cmp
mov
je
jg
daa
mov
repnz
and
mov
adc
into
jae
push
push
sbb
mov
sub
cld
nop
loopne
ret
loopne
icebp
imul
rcrb
adcb
xor
scas
stc
add
dec
jle
js
lods
lock
out
arpl
ret
xor
push
or
or
mov
push
rclb
cltd
pop
loopne
enter
and
xor
clc
in
cmp
jmp
inc
stos
jp
dec
inc
mov
sbb
pop
leave
adc
or
shlb
icebp
xchg
and
push
pushf
or
clc
fsubs
dec
aad
sbb
cld
xor
pusha
test
cwtl
sahf
dec
les
adc
sbb
cmp
addl
int
cmp
popa
rolb
jl
adc
xchg
pop
push
xor
addb
inc
aaa
orl
imul
jmp
int3
pop
jle
sub
adc
aam
pop
lcall
and
inc
mov
push
sbb
mov
pop
inc
pop
push
dec
sbb
xchg
xor
cltd
out
mov
test
mov
adc
roll
adcb
add
or
or
jg
jl
cltd
mov
push
sahf
dec
ljmp
mov
dec
roll
sub
sub
xchg
sbb
jo
sbbl
stc
cmp
add
xchg
cwtl
adc
sub
lret
sti
js
add
test
xchg
mov
mov
add
push
dec
aad
mov
inc
mov
pop
mov
test
xchg
je
mov
in
and
or
mov
fucomi
addb
and
push
bts
fwait
or
mov
in
cs
fcomps
int3
orl
adc
add
js
shrb
shll
shlb
jo
sbb
cld
out
add
sub
mov
inc
mov
push
xorb
inc
xor
add
xchg
mov
mov
xchg
jne
push
roll
mov
add
imul
lods
cmpsl
cwtl
add
cmp
les
xor
pop
cli
adc
or
and
mov
add
out
cmp
push
mov
sbb
popa
sbb
repz
and
xor
push
push
dec
rcrb
std
cmp
subb
adc
rolb
lods
lahf
jns
or
repnz
je
xorl
pop
jp
pop
sbb
popa
pop
jle
les
out
scas
loopne
xor
add
mov
jns
dec
add
jg
daa
das
xlat
loopne
dec
dec
dec
mov
in
cwtl
cmp
sbb
ja
pop
xorb
adc
cmpl
je
mov
dec
ja
adc
pop
subb
orl
push
insb
and
rcr
adcb
inc
cmpsl
daa
fs
aas
dec
cld
push
mov
add
insb
pop
xchg
sbb
cmp
aam
jl
addr16
loopne
decb
fs
decl
xor
clc
test
add
dec
insl
cwtl
movsb
pop
push
add
add
xchg
aad
add
sbb
movsl
int3
cld
mov
aaa
mov
jns
mov
or
daa
sub
xor
and
loop
pop
mov
cmp
push
xchg
push
jb
fmull
repz
push
push
push
xchg
jo
xor
and
or
jbe
mov
orl
scas
je
cltd
and
adc
pop
push
add
lahf
push
pusha
xor
sub
mov
insl
xor
stc
adc
popa
outsb
sti
lock
mov
enter
mov
mov
mov
jbe
mov
dec
xor
pop
enter
mov
popa
sbb
sti
push
shlb
outsl
fists
and
fdivs
pop
fs
dec
mov
mov
jmp
pop
dec
xor
push
and
js
pop
test
enter
out
dec
je
jo
xchg
mov
nop
jne
cmpsl
add
xchg
xor
mov
cmp
and
popf
fadds
mov
pop
lret
jno
xor
inc
sbb
jb
mov
mov
sub
rcrb
mov
icebp
inc
cmc
jl
es
xor
ror
xor
sbb
movsb
or
mov
mov
stos
adcb
pusha
jo
sbb
cmp
out
rolb
jl,pt
sbb
xchg
jbe
pop
lahf
ret
loopne
into
aam
pop
or
mov
add
stos
shlb
lea
rcr
cmp
dec
inc
sbb
push
add
insb
push
xor
pop
add
xchg
lret
or
lods
loope
nop
idivl
shl
data16
test
or
push
hlt
pop
in
mov
mov
or
mov
and
arpl
sub
lret
idivl
dec
pop
and
inc
add
js
sbbb
sbb
in
aam
pop
or
out
repnz
je
adc
or
sub
sbb
xchg
sub
xchg
mov
loop
pushf
sub
rorl
call
push
xchg
aaa
popf
add
mov
and
cmp
inc
les
rcrb
dec
mov
andb
xchg
test
add
aad
inc
mov
add
cli
xor
fmuls
int3
dec
in
add
mov
or
sub
or
cmc
mov
dec
or
test
push
mov
out
add
rcl
inc
pop
test
repnz
mov
mov
or
add
fmul
add
add
popl
xor
push
cli
and
cltd
jne
int3
jp
add
push
shll
bound
inc
adc
idivl
je
mov
mov
sbb
rclb
jp
or
js
shrl
pop
or
add
adc
icebp
xorb
push
stc
jnp
dec
mov
xorb
mov
addl
xorl
add
xchg
in
cmp
add
pop
add
inc
sub
or
sbb
and
mov
xchg
cld
test
sti
loopne
sub
cmp
daa
subb
mov
hlt
sahf
insb
jg
cmpsb
sub
addl
insb
cmc
testb
pop
dec
pop
stos
fdivrs
mov
cmpl
xor
imul
fs
inc
xchg
add
or
out
lock
mov
lea
sub
bound
or
adc
push
imul
addr16
das
push
test
and
ja,pt
add
les
mov
sbb
popa
xchg
sbb
dec
clc
outsb
xchg
stc
outsl
cmp
or
in
xor
sbbb
sub
int3
lcall
addb
push
sbb
cmp
push
mov
jle
in
or
adc
in
das
add
add
cmp
xchg
aaa
cmc
in
push
call
push
push
add
add
cmp
xor
iret
sahf
pop
std
jns
or
sbb
incb
pop
fwait
or
pop
pop
xor
stc
or
pop
imul
or
lds
addb
inc
enter
emms
dec
nop
enter
adc
fildl
adc
jle
dec
inc
mov
sbb
loopne
loope
inc
fs
mov
add
out
inc
pop
xchg
xor
mov
push
jmp
lods
push
test
add
xchg
mov
pop
mov
push
pusha
sub
jg
xchg
loopne
xor
add
jnp
mov
sbb
mov
xor
xchg
orb
sahf
outsl
mov
dec
movsb
cs
or
jmp
xchg
mov
sub
dec
out
adc
pop
add
sti
jecxz
add
ret
out
jns
add
outsb
data16
jp
dec
and
inc
mov
dec
inc
inc
andb
xorl
inc
insb
ret
pop
js
incl
movsl
xchg
in
push
adc
lret
push
pusha
jge
addl
test
lahf
sahf
or
insb
sbb
mov
es
addr16
or
jp
pop
mov
std
loop
add
cltd
fsubp
subb
scas
jle
cld
inc
xchg
enter
push
pop
dec
jl
push
and
jge
inc
aas
imul
jp
sub
dec
cwtl
inc
sbb
xor
cmpb
push
inc
xchg
test
cmp
negl
mov
fiadds
xchg
add
repnz
dec
jl
push
mov
dec
mov
test
shlb
aas
out
add
jge
pop
cmp
stc
das
data16
mov
xor
xchg
insb
adc
cmp
cmp
push
sbb
pusha
cmpb
mov
lds
cltd
les
in
mov
cmp
mov
add
test
inc
call
cli
aad
stos
mov
mov
xchg
jo
mov
jmp
add
enter
mov
sbbb
jl
add
mov
jns
fdivl
sbb
mov
shrb
add
sub
inc
cmp
and
xor
mov
insb
xor
loopne
imul
mov
cmp
pop
adc
add
sbb
and
cld
mov
xchg
jmp
clc
fwait
icebp
push
movsl
aam
hlt
dec
std
sar
sbb
pop
pusha
test
idivb
dec
lret
insb
dec
in
xor
xchg
fcompl
int3
pop
xchg
mov
cltd
adc
sbb
xchg
int3
mov
cmp
test
inc
dec
test
js
mov
xchg
push
and
fs
add
ret
jbe
jo
inc
adc
sub
sub
push
inc
cmp
add
cwtl
sbb
and
jle
sbb
mov
xor
enter
sub
pop
cltd
jmp
enter
add
jns
dec
inc
xchg
enter
pop
faddl
dec
push
rcll
addb
inc
std
inc
push
cli
and
sub
cwtl
fwait
lock
clc
mov
xchg
mov
or
cmpsl
push
insb
cmp
push
add
inc
pop
mov
sub
or
xchg
sbb
enter
ja,pn
adc
cltd
pop
ret
nop
adc
sti
xchg
add
loopne
inc
adc
jbe
sub
leave
xchg
bound
sahf
out
aaa
mov
test
rol
mov
decl
test
rolb
or
fs
push
push
or
jno
mov
mov
fidivs
insl
and
jle
push
es
adc
nop
xor
jae
xor
arpl
adc
sbb
addb
xchg
call
fstpl
pop
xchg
adc
add
repnz
push
popa
jl
add
mov
pop
sub
pop
bound
dec
out
pusha
mov
cmpsb
cmp
jnp
sti
xor
das
sub
aaa
push
sub
shlb
adc
pop
cld
adc
loop
repnz
fxch
and
mov
cltd
push
xchg
mov
sbb
inc
pop
mov
sub
jge
les
ret
mov
dec
loope
andb
and
mov
adcl
jle
ja
jle
push
imul
shl
push
and
clc
leave
inc
sbb
clc
imul
xchg
sub
sahf
dec
pop
orb
mov
sti
or
loopne
in
out
push
lds
dec
xchg
fs
add
mov
push
in
nop
into
add
int
add
fadd
insb
out
insb
rolb
cmp
pop
andb
lds
pop
decb
add
cmp
add
or
loopne
pop
jns
dec
cmc
les
pop
and
and
or
nop
push
sbb
jge
xchg
xchg
dec
in
push
ljmp
jns
jmp
mov
and
pop
sbb
cwtl
pop
mov
fistl
add
jecxz
dec
insl
pop
sbb
xor
push
js
sbb
das
and
push
or
sub
mov
adc
push
sub
jle
dec
add
add
inc
cmc
rorb
add
inc
mov
insl
add
dec
aad
push
mov
clc
xchg
add
nop
jmp
js
les
test
rcrb
test
inc
sbb
int
sbb
and
or
jmp
rep
adc
sbbl
mov
les
mov
cwtl
pusha
sub
cltd
push
les
js
mov
or
mov
or
test
mov
or
cmp
add
push
add
lret
pop
loopne
outsb
mov
xchg
arpl
push
add
ja
inc
popf
mov
add
in
dec
push
lahf
dec
int3
add
insb
hlt
fstpt
scas
pop
mov
das
or
cmp
xor
pop
or
jle
lcall
or
mov
xchg
insb
test
xchg
pop
enter
mov
sbb
inc
mov
mov
js
fcoms
aaa
rcrb
jl
inc
inc
lret
mov
add
lock
pop
cwtl
add
pop
mov
cmpb
xchg
jl
or
push
rorl
inc
fs
jns
dec
out
hlt
pop
mov
and
insb
mov
sbb
jge
push
repz
or
es
add
dec
add
mov
push
sbb
xchg
jg
cmp
das
sub
jns
jmp
hlt
push
out
je
cmp
pusha
jbe
inc
fucomi
add
push
lret
nop
das
loopne
add
pop
cmpsl
jl
dec
sarb
and
gs
mov
add
test
inc
cltd
sub
mov
adc
shrl
fsubl
xor
or
popf
cltd
int3
rolb
sbbl
add
xchg
icebp
andb
out
add
cwtl
fldenv
add
addb
nop
or
dec
icebp
js
test
mov
sub
and
pushf
sub
inc
lods
jb
pusha
pop
fbld
enter
add
insl
inc
fdivrl
cltd
pushaw
or
scas
jg
dec
mov
lea
mov
test
xchg
or
enter
lods
hlt
or
mov
sbb
inc
xchg
sbb
or
loop
pextrw
jo
popa
in
js
clc
inc
inc
inc
push
nop
add
shll
push
popa
push
insl
sub
and
cltd
mov
nop
pop
inc
push
jmp
ret
pop
lret
sbb
pop
xchg
xor
pusha
mov
dec
sbb
and
pop
or
xchg
xor
test
sbb
call
loopne
mov
in
scas
lds
jns
test
aam
mov
sbb
test
and
inc
testl
mov
sub
cmp
add
push
xorb
jns
stos
cmp
xor
shlb
jle
or
insb
sbb
or
jbe
stc
bound
das
xchg
adc
jmp
push
push
or
insb
inc
xchg
cmp
push
xorb
xor
mov
cs
rolb
push
xchg
mov
rolb
addr16
rcl
enter
adc
and
in
fistl
fstp
lea
int3
movsb
or
xchg
mov
dec
adc
clc
setp
mov
and
or
cmp
repnz
dec
leave
or
jo
hlt
aaa
add
xchg
jo
push
mov
cmpsl
push
das
test
cwtl
ret
in
enter
movl
mov
mov
in
lock
cmp
sub
repz
adc
add
mov
sub
inc
nop
push
icebp
or
out
push
clc
or
js
push
insb
iret
sub
adc
into
shrl
or
mov
xchg
and
rcrb
sahf
shlb
outsl
jmp
push
sbb
xchg
or
fyl2xp1
rolb
adc
add
scas
xor
loopne
inc
mov
adc
and
insb
rorb
popa
test
adc
sahf
xor
fwait
jne
push
jl
cmp
lahf
int
lds
pusha
cli
adc
das
test
fdivrs
add
or
pop
xlat
lock
aas
or
mov
fistps
xor
out
sahf
and
daa
xor
adc
cmp
out
sbb
hlt
cwtl
enter
pop
nop
mov
inc
cmp
out
adc
adc
das
fmull
negb
sbb
pusha
inc
push
xchg
adc
dec
sub
test
movsb
fiaddl
adc
sub
fmul
push
mov
enter
sub
cmp
ret
add
xor
cmp
dec
inc
sbb
add
or
sub
pop
pushf
adc
add
insb
mov
imul
cmp
cmpb
lock
mov
pusha
dec
out
pop
dec
sbbb
arpl
mov
xor
dec
jecxz
mov
pop
mov
xor
nop
jmp
add
dec
mov
inc
bound
nop
or
jp
dec
sbb
and
cmp
clc
cmpsl
cmp
or
aam
popa
mov
dec
add
ja
adc
clc
jo
jg
inc
pop
rclb
mov
leave
jp
xchg
cmp
mov
in
test
sbb
jl
or
into
sub
scas
jle
lods
in
insl
ficomps
xor
or
push
adc
adc
ja
inc
cmc
lahf
insb
jb
je
shll
add
add
push
lahf
mov
sbb
adc
out
lock
test
cltd
dec
pop
call
imul
loopne
mov
add
stc
and
push
or
testl
mov
jge
into
sub
arpl
std
aam
in
fucom
and
add
insl
sbb
add
lods
icebp
outsb
jge
cmpsl
add
pop
mov
push
add
ja
lock
push
insl
add
sbb
add
pop
loopne
nopl
or
fs
mov
cmp
addr16
cmpb
dec
paddb
jmp
mov
xchg
fdivl
add
add
scas
mov
xor
mov
push
jno
push
mov
cmp
and
rclb
add
int
inc
out
arpl
outsb
fists
test
das
sbb
fsubs
adc
add
ljmp
sub
mov
push
ret
bound
pop
es
inc
pop
jb
push
ljmp
sbb
stos
insb
ja
push
bound
pop
pop
add
inc
push
add
jp
and
add
add
pop
lret
xor
add
addr16
adc
ret
sbb
sbb
or
xor
mov
mov
xchg
js
add
imul
add
xchg
das
int3
adc
leave
jecxz
stos
adc
mov
roll
popf
lea
sub
mov
sbb
imul
mov
rcll
mov
pusha
insb
cmp
pushf
lahf
mov
add
sbb
xor
int3
sbbl
addl
movsb
mov
mov
jle
outsb
xor
loop
aam
add
andb
leave
lret
sti
fisubs
lock
ljmp
ret
out
test
fidivrs
jo
cmpsl
adc
nop
or
mov
clc
cmpsl
push
ficompl
xchg
cmp
enter
adc
mov
xor
inc
lods
outsb
add
rorb
mov
and
flds
inc
and
cmp
js
add
mov
lock
rcrb
orl
xor
js
dec
dec
push
mov
nop
push
mov
dec
dec
insb
sbb
stos
xchg
in
jp
pop
dec
cli
js
insb
repnz
fucomi
add
sub
movsl
stos
push
push
inc
or
mov
test
sub
test
lret
xchg
sar
andl
insb
push
imul
jmp
pushf
dec
addr16
mov
int3
fcomps
cld
and
stos
jecxz
push
sbb
adc
cmp
add
and
flds
repz
sqrtps
mov
add
ret
test
add
test
insb
jl
push
pop
add
fisttps
test
push
or
push
xor
fs
pusha
inc
pop
sub
hlt
adc
outsb
or
iret
dec
pusha
inc
mov
add
stos
dec
loopne
sub
mov
fwait
pop
and
ss
roll
inc
mov
push
jo
mov
lcall
and
js
or
in
xor
enter
and
inc
or
test
jecxz
aas
fscale
andb
dec
add
xchg
mov
xchg
jbe
inc
adcb
shlb
das
out
scas
jl
fwait
inc
pop
jno
jo
xor
jbe
and
incb
fs
add
sbb
cmp
cmp
jno
and
mov
or
andl
inc
lret
in
xchg
or
mov
jle
add
repz
pop
pop
and
sbb
scas
adc
fucomi
jo
ds
mov
push
js
sub
ficoml
or
inc
inc
dec
cmp
push
fcmove
dec
sarb
mov
push
or
sub
mov
add
cmpsb
or
sahf
jg
add
sbb
sbb
lret
push
dec
in
test
nop
and
mov
out
push
jle
pop
sbb
in
mov
or
ja
add
push
xor
loop
leave
lds
nop
in
adc
xor
sbb
shll
pushf
ljmp
adc
inc
adc
xchg
rcrb
fstpt
and
rolb
push
ljmp
pushf
sbb
xor
jb
test
mov
xchg
mov
inc
push
ljmp
je
xchg
orb
jb
dec
mov
andb
mov
sbb
outsl
mov
jecxz
or
xor
add
dec
and
inc
mov
sbb
aas
cs
int3
jl
xchg
rorb
sub
push
nop
insb
imul
push
sbb
adc
out
lretw
or
in
cmp
pusha
mov
add
ds
mov
dec
lahf
mov
sbb
mov
mov
inc
and
fucomi
xchg
adc
out
movsb
mov
add
adcl
add
mov
mov
test
and
sub
dec
dec
dec
mov
push
inc
in
fadds
jns
mov
insl
xor
dec
mov
enter
sub
inc
adc
dec
outsl
inc
cwtl
mov
add
push
mov
xor
xchg
nop
add
jecxz
or
fcoml
cmp
fcoml
xor
cwtl
imul
dec
sbb
js
cwtl
clc
mov
out
cmp
pusha
call
test
adc
xlat
add
popf
mov
scas
ret
pop
ret
insb
add
nop
push
jl
xchg
cwtl
sti
adc
sub
push
int3
fs
fidivl
clc
and
popw
inc
adc
inc
and
mov
mov
or
add
sbb
addr16
sbb
stos
das
cmp
scas
jae
pop
icebp
outsb
roll
pop
lods
push
mov
sub
xchg
mov
inc
mull
sbb
mov
pop
inc
adc
mov
lret
or
add
add
insb
mov
xchg
mov
adc
std
sbb
cmp
mov
cmpsb
mov
inc
int3
add
sub
sarb
lahf
add
adc
inc
pop
pop
mov
loopne
aam
outsl
xchg
rcll
mov
jecxz
pop
outsl
stos
and
inc
mov
add
pop
icebp
adc
jl
aam
dec
cli
outsb
rorb
bound
jmp
int3
mov
stc
sbb
mov
mov
cmp
jne
mov
cmp
inc
adc
decl
mov
and
nop
xor
loopne
jp
pop
inc
mov
call
push
pop
and
dec
mov
or
leave
popaw
mov
add
or
les
adcb
sbb
jmp
and
loopne
xor
mov
push
add
push
xorb
mov
sub
xchg
xchg
or
adc
sbb
jae
cmpsl
mov
jno
jl
es
add
dec
cmp
out
in
xor
cwtl
push
push
cwtl
rcrl
out
dec
shlb
add
int3
mov
push
or
and
test
inc
lods
push
les
sbb
insb
push
lretw
xor
and
lds
js
jne
addl
cmpl
repnz
sub
fnclex
in
cs
mov
pusha
push
mov
sbb
enter
push
mov
pop
pop
jmp
jle
inc
pop
push
pop
sub
inc
pop
mov
mov
in
out
xchg
mov
pushl
add
daa
pop
out
rol
pop
add
in
jb
fildll
dec
cmpsl
cwtl
sbb
push
mov
add
jmp
add
call
xchg
mov
sbb
stos
xchg
es
add
stc
stos
sbbb
cld
push
frstor
sarl
or
mov
sub
jmp
add
or
jmp
mov
push
pop
push
mov
mov
les
jbe
ret
es
fwait
add
je
push
popf
sti
popf
and
and
jmp
push
out
inc
out
push
dec
pusha
jle
add
dec
mov
pop
shr
add
push
fs
xor
mov
sub
or
xor
psubusb
xchg
xchg
inc
insb
push
flds
out
or
add
pop
pusha
jmp
pop
sbb
dec
rorl
sbb
adc
push
daa
fidivrl
pushl
sbb
xor
in
or
fcmovnbe
int
adc
sub
add
xor
nop
popa
add
sbb
roll
xchg
nop
lds
or
xor
aam
mov
int3
push
sub
and
ficoms
or
push
stos
inc
mov
add
xor
and
or
xchg
lods
xlat
mov
mov
rcll
jl
das
mov
es
lock
aad
aam
add
sbb
xor
adc
mov
sbb
dec
push
xchg
or
xor
xor
push
or
dec
mov
sub
in
outsb
pcmpgtd
dec
stc
push
push
shll
pop
pop
outsb
clc
or
imul
sub
ljmp
add
fldcw
push
shll
sbb
mov
pop
and
nop
orl
hlt
adc
je
xor
adc
jae
sub
shl
push
push
dec
or
lahf
inc
or
loop
or
sub
add
mov
add
mov
pop
dec
push
filds
push
dec
xchg
inc
aaa
mov
fsub
cmp
pop
fs
fstps
mov
push
loope
add
mov
icebp
pop
adc
pusha
pop
inc
mov
bnd
mov
imul
pop
push
adc
adc
aad
in
outsl
mov
mov
add
rcrb
lds
clc
jge
jmp
mov
sub
stc
dec
cmpl
shrd
bound
or
mov
xchg
js
mov
push
sub
jmp
jge
mov
cwtl
ficoml
xlat
pop
fs
and
cmc
or
mov
adc
addr16
mov
sti
mov
dec
xor
sub
pop
out
ds
sets
lea
mov
jmp
push
mov
pop
orb
sub
xor
mov
lret
roll
or
mov
addb
add
pop
mov
inc
andl
aaa
add
shl
pop
push
push
push
js
fildll
ja
add
adc
add
cmp
or
jmp
pop
xor
in
rorl
push
push
adc
mov
in
es
add
out
push
push
sub
adc
pop
sub
or
in
sbb
mov
pop
xor
in
pop
add
test
outsl
push
sarl
movsb
nop
and
xchg
sub
sbb
cli
jp
xor
adc
inc
ljmp
dec
add
sub
dec
fwait
lret
ss
cwtl
shlb
shrl
popf
into
lods
aam
xchg
pop
lret
push
dec
inc
pop
int3
ffreep
test
add
sub
sub
add
rclb
loope
imulb
sub
out
popa
push
or
arpl
es
sub
adc
mov
xor
sub
push
scas
push
aad
enter
out
imul
enter
je
push
mov
cwtl
out
fs
push
mov
pusha
aaa
mov
dec
decb
push
pop
xor
jae
or
test
or
sbb
mov
add
or
loopne
cmpsb
lds
int
jae
pop
inc
loope
mov
jno
or
or
rcrl
cld
cmp
aas
jne
mov
sub
lret
ret
ljmp
mov
pusha
push
mov
mov
lods
sub
pop
add
fwait
shlb
shl
fnclex
addl
sub
std
inc
addb
fsub
cs
dec
cmp
push
data16
push
sbb
aaa
pop
pop
scas
jmp
xor
out
testb
push
rcrb
push
cwtl
mov
into
jge
push
fistps
pusha
mov
inc
push
jnp
sbb
testb
or
sub
insb
fcompl
sbb
cmp
xor
pop
lock
adc
loopne
add
add
jmp
and
pop
dec
and
aad
aaa
pop
mov
push
xor
xchg
repnz
lret
mov
shl
add
fcmovbe
mov
rolb
push
loopne
jecxz
pop
xor
cmp
sub
sarb
pop
sbb
adc
jns
jnp
nop
int
les
mov
mov
cltd
not
fadd
ljmp
or
add
push
pop
fcom
or
xchg
pop
mov
pop
fs
add
jle
and
pop
or
inc
hlt
fdivl
sbbl
test
and
dec
add
loopne
sbb
push
push
std
loopne
jge
jp
shlb
fsubrs
nop
cmp
sub
xor
leave
inc
and
jbe
jo
sbb
insl
push
mov
pusha
dec
dec
cld
test
incl
pusha
out
adc
popa
push
sub
mov
inc
xorb
aas
jo
mov
addr16
jmp
xchg
pushf
xorb
ja
inc
xchg
xor
sub
mov
pop
xor
cld
inc
mov
insl
std
jge,pt
aas
or
jnp
popf
adc
addb
inc
movl
inc
lcall
not
shr
push
jge
lock
or
lret
add
jmp
pop
lret
pop
pop
sub
movsb
mov
and
and
add
iret
push
insl
popa
and
aas
inc
mov
xchg
push
sub
hlt
or
inc
sub
jns
out
pusha
push
push
add
leave
pusha
adc
xor
adc
jno
xor
fisttpl
movzbl
fisubrl
sbb
pop
xor
jmp
cmpsb
pusha
scas
in
mov
or
add
aam
and
add
push
push
test
jbe
dec
jo
sub
cmpsl
add
orl
cmp
dec
sub
or
pop
ds
das
dec
inc
pushf
xchg
inc
loop
xor
and
pop
pop
sub
divl
lock
dec
and
sub
out
les
sub
dec
add
imul
not
sub
xchg
aas
jmp
jae
mov
push
mov
inc
jmp
cltd
or
test
xchg
push
fs
aad
pushf
mov
out
add
and
shrb
fstl
xor
xor
ret
or
sbb
enter
push
lods
inc
int3
inc
jae
es
loop
and
jno
xchg
lods
sub
enter
sahf
add
xchg
lods
out
mov
pop
or
adc
fdivr
in
push
adc
cmp
mov
loope
add
mov
faddl
or
and
xchg
imul
or
inc
adc
xchg
add
mov
mov
test
add
rorl
sbb
lds
push
dec
mov
sub
aam
into
sbb
addb
xchg
cmp
or
add
std
es
mov
and
add
add
push
push
es
jecxz
or
and
or
out
adc
push
leave
push
andl
pushf
or
setle
repz
adc
mov
pop
ficoml
outsl
enter
sbb
push
sub
push
test
add
xchg
dec
xchg
movsb
push
inc
inc
fisubs
out
clc
sub
add
push
addr16
dec
fwait
pop
add
or
cmpsb
push
mov
adc
insb
add
xor
int3
or
add
es
add
movsb
lds
push
ja
popf
adc
shlb
ds
add
xor
mov
sub
adc
je
or
adc
or
jmp
int3
push
subb
pop
xor
jmp
cmpl
and
test
ficoml
mov
jmp
rol
jp
jmp
ret
push
sarl
rolb
pop
aas
push
mov
xor
mov
mov
push
mov
push
orl
adc
ror
sub
pushf
mov
out
add
pusha
les
movsb
xorb
in
or
rol
outsl
pop
xchg
adc
pop
rol
inc
leave
fdivs
adc
pop
xchg
insb
add
mov
mov
push
mov
mov
shl
test
mov
rclb
popa
sub
pop
mov
push
jns
pop
icebp
or
lret
sub
in
and
add
pushf
ja
jmp
fs
mov
or
add
sub
std
push
xchg
xchg
add
int3
mov
and
mov
xor
push
mov
jo
add
pop
xor
pop
add
mov
pushf
add
mov
icebp
hlt
pop
shl
loopne
sahf
sbb
sub
xchg
fadds
xor
jae
add
mov
or
or
pop
mov
cmpsb
out
push
cmp
das
pop
adc
lds
add
sahf
cmc
stos
or
loop
cltd
lds
pop
sbb
push
pop
xchg
jmp
repz
adc
lock
addr16
mov
xor
cmp
shrl
outsl
or
or
mov
fsubs
add
xor
inc
mov
arpl
ja
ljmp
jl
fiadds
mov
inc
movsb
or
adc
out
dec
ljmp
sbb
sub
mov
std
nop
cmp
mov
fucom
xchg
call
add
loopne
mov
ror
mov
sub
mov
inc
sub
pop
dec
not
out
cs
push
inc
xchg
not
or
loope
lret
jmp
jg
mov
push
and
dec
mov
addr16
sub
sar
add
xor
add
fstl
pop
sub
pushf
lock
push
in
pushaw
fistpl
inc
dec
cmp
jmp
sub
adc
stos
sbb
insb
clc
fidivrs
xchg
cwtl
add
out
or
sbb
push
mov
xchg
pop
jmp
fnstsw
out
into
fisubl
or
or
mov
in
mov
cmc
push
pusha
aad
icebp
scas
fcmovnu
pop
je
jge
xchg
push
dec
cwtl
roll
fs
pop
mov
lds
cmp
xlat
pop
insb
cmp
xor
sti
cs
add
popa
xchg
xlat
bound
and
add
inc
jmp
shl
add
mov
lds
mov
test
lods
xor
xorb
fldenv
dec
enter
and
inc
push
adc
xor
or
dec
cmp
mov
test
mov
imulb
jnp
adc
nop
mov
out
add
jg
add
adc
xchg
push
xchg
lret
scas
jbe
xchg
pop
sub
sbb
dec
into
test
orb
or
call
enter
or
pop
push
mov
and
pop
xor
in
jmp
btc
inc
test
and
and
inc
cmp
sub
and
ret
jbe
dec
and
and
and
cmp
data16
rcr
daa
cmp
pop
cmp
xor
int3
dec
jmp
pop
push
mov
ds
adc
xchg
call
mov
cmpl
push
push
jmp
pop
insb
mov
or
sbb
sub
sub
sbb
and
xchg
into
add
jno
mov
addb
mov
add
push
jl
lds
pop
sub
mov
push
mov
push
jmp
mov
xor
data16
dec
xor
pop
wbinvd
mov
push
outsl
gs
in
adc
cmp
and
push
jmp
loop
les
sub
ret
push
sub
mov
push
js
hlt
pop
test
or
or
cmovs
adc
jmp
xchg
fcoml
or
rol
jns
jns
push
inc
lret
orl
lret
sahf
mov
adc
cmp
adcb
in
sub
inc
popa
add
push
jmp
iret
pop
neg
shrl
add
and
adc
cs
or
in
out
es
sub
dec
adc
pop
jmp
rorl
sbb
add
aam
or
mov
jb
pop
add
lds
inc
mov
xchg
cmp
xchg
sub
je
jo
cs
push
dec
shl
jecxz
shll
movsb
push
push
or
lods
test
pop
pop
push
ret
push
les
pop
xchg
and
xor
repnz
mov
movsl
and
or
inc
mov
sub
enter
push
adc
dec
inc
inc
sub
cwtl
jns
pop
dec
dec
pop
push
push
pop
std
add
xchg
sbbb
mov
cli
adcb
or
push
xchg
gs
clts
push
jb
movsb
add
and
sub
out
xor
push
push
aad
push
ret
mov
data16
jmp
cmp
xor
adc
sub
aad
cltd
cmc
push
push
jecxz
add
push
add
lds
in
insl
mov
sbb
or
dec
ss
sub
cmc
sbb
sub
ljmp
ficoml
push
jmp
flds
push
shlb
adc
js
sub
add
push
add
nop
sbb
jae
and
and
dec
push
push
shrl
mov
adc
das
xor
xor
push
mov
in
ret
add
jge
jns
add
loop
push
mov
sub
ss
xchg
movsl
mov
fistl
jg
les
sbb
fisubrs
mov
dec
shrl
adc
fcomps
out
repz
aaa
sbb
add
jmp
cmp
push
add
shl
dec
pop
ja
jo
dec
lret
push
cwtl
xchg
add
add
sub
fnsave
push
adc
outsb
mov
pop
imul
or
sub
inc
in
inc
mov
sbb
mov
sub
ja
jno
mov
cmp
scas
mov
call
sbbl
inc
stos
inc
xor
sbb
les
mov
pop
add
mov
aaa
xor
imul
and
jg
ds
xchg
mov
mov
cmp
dec
fcom
xor
daa
and
push
pop
out
mov
pop
in
sub
pop
loop
push
xor
cmp
fdivs
push
dec
sbb
ret
test
sbb
rorb
xchg
mov
sub
inc
mov
popa
orb
cli
pop
cmp
pop
nop
repnz
push
pop
push
xchg
repz
and
icebp
mov
push
push
push
mov
jmp
mov
pop
push
pop
cmp
adc
xchg
addr16
pusha
fcomps
shr
adc
pop
into
cmp
aaa
push
pusha
in
add
pop
and
lea
loop
dec
sub
or
pop
jmp
ret
push
push
jg
in
inc
fistpll
pop
cmp
or
push
in
jmp
sub
repz
ret
hlt
lret
jnp
into
and
push
push
lahf
xorb
push
push
arpl
mov
jp
into
push
and
mov
or
jo
mov
ss
mov
loopne
push
ret
push
movsb
imul
push
and
inc
insl
jmp
push
inc
pop
sahf
pushf
jmp
jmp
stc
pop
popa
xchg
sub
adc
cmp
popf
mov
aas
sub
outsb
int
push
ds
jbe
aam
fisttpll
lock
bound
push
xor
mov
push
dec
sbb
decb
or
add
into
jl
lret
xchg
jae
out
mov
push
or
xor
adc
inc
jnp
lock
repnz
sbb
adc
add
adcb
pop
orb
cmp
call
ljmp
mov
push
mov
std
and
push
sarl
add
pushf
roll
inc
jge
add
jmp
dec
not
jne
xchg
push
or
sbb
mov
xchg
lock
inc
adc
adc
dec
jae
push
xchg
dec
xor
push
push
pop
pop
neg
clc
loope
sbb
jns
outsb
adc
add
adc
jg
test
or
cmp
cmpb
movsb
loop
pop
mov
adc
bound
or
mov
mov
pusha
xor
jo
add
sbb
or
fistpll
add
cli
cmp
popf
test
inc
xor
inc
xchg
movsb
out
inc
cwtl
adc
or
shrl
jo
jmp
push
mov
es
sub
pusha
dec
sbb
xor
in
jp
pusha
fstl
lea
sub
in
cli
or
dec
add
mov
and
rcll
xor
fisttpl
push
cmp
fwait
imul
shll
xchg
jmp
mov
addb
fwait
shr
sbb
nop
mov
push
inc
adc
popf
sub
jmp
mov
xor
or
sub
jb
pop
push
xor
dec
inc
mov
test
xor
aad
mov
lcall
fs
adc
lds
out
dec
pop
lcall
or
jmp
sarl
cmp
dec
and
data16
mov
out
in
and
pop
repnz
dec
out
pusha
cmpsb
add
sub
adc
pop
ljmp
loopne
cmpsb
xchg
subb
mov
mov
sbb
push
mov
cltd
push
rolb
rcr
movsl
pop
add
iret
push
sub
xorb
or
movsb
and
and
add
cmpsb
push
arpl
in
shrl
sub
mov
push
inc
stos
ds
adc
push
sub
pop
pop
cmc
xor
in
lret
xchg
sub
pop
mov
outsb
sbb
add
cmp
mov
hlt
push
out
mov
lods
in
or
mov
xor
mov
pop
jecxz
cmp
insb
js
pop
pop
and
and
cld
dec
out
orb
test
add
mov
cwtl
mov
mov
pop
js
cwtl
cmp
test
in
sub
add
or
adc
jp
scas
push
adcb
mov
add
sub
jp
sbb
xlat
pop
sub
adc
sbb
xor
sti
loope
inc
or
mov
inc
sbb
loopne
xchg
rorl
aaa
outsb
xor
mov
add
rclb
push
lock
xchg
xor
xchg
daa
push
inc
or
les
popa
mov
maxps
add
and
test
xchg
add
das
jne
inc
push
subl
jmp
xor
shll
call
add
adc
das
pop
ret
and
pop
or
xor
int3
inc
jge
in
or
pusha
aas
adc
mov
ret
hlt
test
sub
sbb
push
xorb
sbb
shr
and
pop
data16
and
xchg
aad
jb
sub
and
mov
dec
xor
cmp
fstpl
pop
mov
sahf
mov
lahf
les
cmp
daa
fs
ds
mov
loop
push
dec
push
jmp
loope
in
scas
add
scas
jae
pop
fmull
jbe
and
jmp
fisttps
data16
push
mov
mov
rcl
sub
negb
xorl
or
nop
push
lds
pop
push
mov
add
and
and
jns
pop
icebp
dec
mov
or
push
mov
add
shll
xor
gs
aam
cmc
cmp
jmp
mov
into
mov
clc
dec
xchg
scas
out
imul
filds
pop
pop
or
pop
xorb
dec
push
inc
bnd
daa
sahf
repz
xor
lret
pop
rol
mov
or
sbbl
andb
sub
pop
mov
or
call
pop
std
mov
cmp
call
and
add
mov
jp
lock
fdivrl
lods
xchg
lahf
fisubrs
ret
out
incl
sbb
push
lds
inc
add
push
jnp
inc
test
outsl
push
das
jmp
gs
lahf
push
push
adc
int3
cltd
pop
add
daa
push
call
ljmp
mov
push
adc
sbb
call
cmp
adc
and
xor
mov
xor
fstps
mov
xchg
add
xchg
mov
pop
lock
sub
and
neg
orb
std
stos
jmp
adc
sub
jg
jae
mov
push
push
fnstsw
rcll
mov
push
mov
outsb
outsb
repz
test
fcomp
icebp
xchg
sub
pusha
push
lcall
lock
cmp
aad
jbe
jp
xchg
pop
jmp
add
addr16
movups
push
pop
push
add
xor
or
orl
mov
or
pop
or
pop
stc
inc
jmp
dec
enter
mov
mov
jbe,pt
dec
rorb
sbb
js
std
add
jp
data16
dec
jne
sub
loop
xchg
push
movsb
fdivs
movb
mov
cmp
xor
jg
out
or
cmp
push
mov
xor
out
pop
fsub
fwait
into
adc
or
inc
loop
jmp
and
dec
rclb
push
and
shl
push
inc
mov
adc
in
mov
jl
jmp
pop
mov
push
xor
pop
jl
out
stos
cs
pop
push
or
sahf
or
add
pop
push
dec
pop
sub
out
or
ficomps
inc
mov
inc
lret
push
lds
add
sarb
dec
cmp
lods
stc
les
cmp
pusha
push
shl
add
sarl
scas
loop
cmpsl
and
lret
clc
scas
int3
mov
mov
ss
nop
xor
cmp
pop
fsubl
add
je
jnp
and
mov
add
add
or
cmp
jae
push
add
insb
mov
xor
rorb
dec
jl
stos
popa
clc
cmp
push
not
and
jbe
out
ja
mov
lret
sub
icebp
and
aas
dec
not
push
add
clc
jmp
rolb
adc
leave
mov
mov
shlb
notb
pop
out
lret
shlb
push
pusha
cmp
and
shll
xchg
mov
xor
lret
cwtl
scas
xor
cli
cmpsl
enter
add
push
jmp
scas
imul
push
mov
mov
jnp
out
dec
or
pop
push
inc
aam
inc
add
in
sbb
or
adc
and
pushf
mov
or
sub
cmp
mov
aaa
pop
js
jns
cli
lds
cs
sub
das
jbe
and
mov
mov
mov
inc
sbb
adc
push
xor
jo
cli
or
jle
mov
mov
cmp
insb
or
or
pop
repz
mov
pop
flds
push
test
pop
inc
mov
fs
mov
orl
in
out
sarb
push
orb
aad
inc
and
sti
popf
dec
inc
xor
or
imulb
imul
push
push
popf
inc
loope
sarl
jne
push
fs
xor
jae
or
dec
imul
push
cs
sub
xlat
mov
stc
data16
xchg
pop
sbb
adc
sub
or
dec
push
and
rorb
jnp
lcall
and
xchg
repnz
inc
jb
lods
movsl
adc
xor
mov
add
lret
add
pop
cs
push
mov
das
mov
or
push
or
lds
push
test
scas
andb
aad
lods
cmp
int3
and
sti
or
dec
loopne
iret
xchg
sbb
lret
lahf
sub
jmp
push
repz
psadbw
jmp
popa
push
jmp
adc
adc
dec
pop
inc
addl
add
les
jmp
lret
ret
rcrb
cmp
aas
cwtl
je
dec
ret
dec
out
xchg
xchg
in
jne
dec
cmp
inc
test
popa
jmp
and
pushf
and
sub
pop
pop
push
jl
cwtl
mov
in
lods
pop
xor
ret
pop
cmpsl
mov
fiaddl
xchg
loop
jo
add
inc
roll
cmp
lds
xlat
int3
shrl
pop
jl
jge
pop
add
mov
and
bound
jmp
fbld
or
movl
push
dec
rclb
dec
int
pop
cmp
mov
out
sbb
mov
push
or
add
push
cwtl
cmp
and
fucomp
xor
pop
push
push
loopne
add
and
push
fdivp
add
adc
inc
jmp
sub
pop
fs
je
int
loope
jl
pop
mov
jle
fidivs
call
and
pop
and
and
mov
ljmp
ror
cld
or
jp
add
xlat
aam
pop
adc
xor
daa
xor
push
je
push
loop
mov
push
add
pop
mov
lock
cmpsb
cwtl
adc
pop
adc
adc
cmc
aaa
outsl
dec
stos
xchg
sub
pushf
in
out
lods
adcl
sub
neg
pop
shl
lret
add
jl
and
addl
fdivl
xor
dec
std
inc
pop
or
pop
push
pop
mov
lahf
adc
jg
push
repz
das
or
lods
push
jae
or
or
addl
sbb
aas
mov
inc
mov
aaa
cmp
lock
scas
mov
fs
dec
add
lahf
arpl
pop
fsubs
rcll
inc
or
pusha
sbb
add
pop
push
or
xorb
data16
jmp
jbe
loop
mov
dec
pop
inc
jns
mov
mov
loopne
leave
hlt
jp
jbe
loope,pt
cmpsl
lcall
xchg
or
mov
sbb
jle
push
sbb
stc
outsb
or
incb
or
add
les
pop
mov
pusha
xor
jp
adc
mov
aaa
outsl
test
int
xor
cli
fnsave
ds
in
pop
jle
push
add
inc
iret
mov
popf
push
out
mov
xchg
adc
sbb
dec
sub
push
jno
push
insl
fldcw
xchg
pop
std
sti
jle
ja
sbb
mov
insb
sub
pop
sub
inc
sub
add
dec
pop
xchg
pushl
pop
mov
je
cwtl
inc
movsb
gs
sub
in
xchg
jno
add
and
xchg
in
aad
or
ret
jbe
inc
pop
mov
xor
loopne
sub
popa
imul
push
jg
sbb
sub
or
push
pop
mov
jmp
push
pop
pop
mov
xor
in
inc
jbe
sub
imul
sarl
xchg
nop
fdivrl
xchg
lret
addl
iret
hlt
push
addb
jmp
jae
adc
pop
jmp
mov
and
sbb
mov
add
adc
dec
pop
adc
testl
inc
add
adc
popf
push
sbb
vmread
insl
add
sbb
or
das
mov
push
adc
cmpb
shl
mov
std
es
mov
pop
mov
test
addl
push
add
iret
mov
lods
push
pmulhuw
xor
das
adc
mov
lock
add
xor
not
jmp
les
pop
jne
in
jmp
xchg
jo
andb
or
addb
and
cmp
add
subl
gs
and
shl
push
arpl
pop
imul
sub
pop
push
or
sub
jle
or
shrl
lret
fstl
xor
add
sarl
testb
inc
xor
and
test
add
ret
xor
pop
cmc
fisubrl
sub
push
stc
pusha
and
dec
mov
add
jmp
xor
shlb
push
in
jl
xchg
lods
shrb
mov
stc
inc
pop
stc
cs
or
into
fsubl
and
dec
icebp
roll
cmpb
out
pop
xor
out
std
push
add
data16
mov
cmp
pop
mov
icebp
stos
cmp
inc
xor
dec
jge
repnz
adc
out
jl
xor
or
sbb
es
sahf
add
add
xor
icebp
fxch
rorb
cmpsl
fnstsw
testb
mov
adc
cld
xor
pop
mov
shr
cmp
fists
add
loope
push
shl
xchg
pop
data16
jmp
mov
inc
stc
sbb
pop
add
pop
pop
rcrb
xchg
mov
int3
push
ret
sar
js
cmp
and
jb
je
dec
js
push
test
out
xchg
in
sub
or
loopne
sbb
jno
mov
add
sbb
or
jmp
pop
jmp
stos
add
push
adc
xchg
mov
rcll
movsb
mov
nop
mov
aam
cmp
icebp
cwtl
das
movsl
jae
rcrb
dec
rorl
mov
mov
inc
sub
push
addb
into
gs
pop
popa
outsl
pop
sub
add
popf
push
add
loop
add
push
push
pop
inc
inc
pop
jmp
add
push
mov
cmp
pop
mov
nop
cmp
dec
xor
add
sbb
rcrb
jbe
js
add
and
test
das
jmp
sub
loopne
mov
dec
sub
and
lock
lret
push
or
cmp
push
adc
fadds
jle
cmp
lock
xchg
pop
jns,pt
add
add
pop
clc
leave
inc
pusha
dec
call
cli
outsl
adc
xor
popf
loope
mov
cmp
inc
mov
subb
inc
pop
adc
es
and
aad
xchg
test
jmp
push
lds
in
add
and
jle
jns
daa
shlb
pop
xchg
push
add
aas
push
rcll
jmp
add
std
and
sbb
or
mov
in
push
pop
daa
or
adc
aaa
xor
movsl
jnp
sub
sub
lock
push
push
push
push
shr
push
mov
mov
shll
xor
mov
push
adc
mov
out
mov
test
les
ljmp
sti
push
inc
pop
push
sbb
jmp
orb
insl
mov
xchg
add
add
push
jmp
jle
dec
insb
cmpsb
aad
add
push
add
test
and
pop
add
xchg
cs
pop
xchg
into
mov
stc
push
fcomps
xor
test
addb
sub
mov
mov
int
inc
test
ljmp
pop
mov
cwtl
sbb
addb
sbb
push
pop
push
jmp
mov
enter
add
lods
in
dec
add
mov
sub
insb
gs
sub
in
stc
and
cmc
push
mov
sbb
js
mov
psubsw
push
es
inc
xor
pop
repnz
and
xchg
add
inc
cwtl
adc
outsl
pop
loopne
in
xor
and
and
loopne
aad
scas
sub
cmc
test
sbb
pop
mov
sub
mov
jbe
or
cmp
add
push
or
push
lret
fnstenv
inc
pusha
dec
mov
cwtl
xchg
sbb
add
xorb
fldenv
bound
xor
ret
add
repnz
je
xor
pop
icebp
movl
pop
mov
pop
add
jbe
xchg
js
dec
notb
mov
sub
aam
cmp
bound
pop
imul
mov
add
or
loope
inc
lret
cmp
add
adc
es
jle
rorl
pop
xchg
jmp
je
xchg
mov
sar
push
add
call
pop
and
or
adc
test
inc
dec
lea
std
pop
es
pop
call
pop
inc
test
out
or
push
lds
cld
and
in
add
pop
mov
jnp
testl
adc
adc
xor
fistpll
in
pop
outsb
pusha
outsl
or
stc
cwtl
popa
sahf
add
icebp
inc
addb
and
shr
push
pop
pop
jl
sub
mov
jmp
push
xlat
dec
or
mov
inc
xor
push
pop
mov
push
adc
adc
xchg
insl
jg
xchg
and
dec
push
jns
pusha
add
push
push
xor
push
dec
loop
ja
sub
cli
add
shr
inc
cld
xchg
push
push
mov
insb
int3
add
xor
je
and
flds
shll
xchg
sub
mov
arpl
sbb
push
xchg
sub
and
inc
stos
sub
nop
daa
ds
xor
cmp
mov
adc
pop
into
cmp
cs
subb
test
or
xor
push
clc
das
dec
sub
or
pop
dec
add
pop
stos
jg
jno
sub
repnz
jg
jae
into
adc
in
sbb
mov
out
push
and
sbb
jmp
subb
aad
mov
clc
subb
popaw
nop
ds
sbb
test
dec
jae
mov
pop
rorb
push
xorb
rorb
add
sub
push
ret
shlb
pop
aad
pop
add
sbb
sbb
or
adc
mov
mov
dec
cmpsb
aad
push
add
push
push
mov
dec
sbb
into
cs
push
cmp
dec
dec
or
xor
push
jbe
push
ret
hlt
lahf
push
rcll
or
push
lock
loope
in
pop
popl
xor
dec
lret
or
adc
cld
jge
or
ljmp
cmp
enter
sub
jl
pop
push
pop
sbb
add
xchg
pop
or
xor
insb
stc
icebp
pusha
mov
cmpsl
pop
fdivs
fwait
repnz
lret
ret
or
and
xchg
cmpb
andb
aaa
fimull
mov
push
mov
shl
and
cld
pop
loop
bound
cmp
jno
cmpsb
add
in
jmp
scas
cmp
bound
sbb
ss
es
mov
push
inc
jp
and
fbstp
mov
sbb
repz
or
push
xor
add
lock
out
movsl
out
sarl
js
lret
push
jbe
cmp
add
mov
shrl
in
cmpb
inc
xlat
jno
aad
ss
and
jg
fbld
mov
sbbb
pop
popf
add
insl
iret
add
cmp
cmp
andl
push
roll
xor
inc
mov
push
sub
pop
sub
mov
fbld
cmp
push
mov
sub
cmp
movsb
dec
imul
pop
and
pop
dec
add
or
mov
rol
or
out
cmp
repnz
adc
push
addr16
rolb
ret
dec
jmp
mov
into
push
mov
inc
jle
int3
or
inc
out
sub
fsubrp
lahf
arpl
ret
inc
xchg
and
inc
add
cmp
sub
clc
ljmp
aam
insl
inc
or
pop
push
cld
iret
ret
add
xor
int
adc
ljmp
jecxz
ds
inc
and
mov
call
aas
inc
adc
gs
add
pop
fstps
jae
dec
jle
pusha
or
ffreep
orl
lods
pop
cs
adc
lods
push
roll
xchg
cmp
and
test
dec
inc
jl
out
sbb
mov
pop
loop
inc
aad
adc
das
jmp
inc
cmpsb
mov
add
pop
sub
shll
dec
add
inc
or
js
xchg
or
jno
jns
das
sub
jmp
push
insl
adc
mov
push
jae
xchg
push
mov
sbb
push
repnz
lods
pusha
or
jmp
fldl2t
xchg
test
push
dec
add
sarb
mov
fs
dec
insb
pop
pop
sub
sbbl
and
daa
and
shr
push
fidivrs
adc
decb
neg
orb
jmp
push
ret
stc
jne
adc
xor
jo
or
hlt
shl
pop
add
add
xor
mov
mov
pop
jmp
ret
stc
sub
jge
mov
scas
ds
dec
add
dec
sbb
adc
add
inc
jmp
add
xlat
pop
and
sub
arpl
sub
leave
stc
std
push
insb
inc
add
and
les
ret
push
clc
stos
data16
fadds
xchg
add
ficoml
in
jno
sahf
sub
or
mov
jmp
pop
sbb
add
scas
xor
dec
mov
mov
outsb
mov
jmp
push
jecxz
not
dec
fstpt
push
imul
xor
add
xor
loop
test
out
mov
sub
imul
adc
pop
lods
mov
jno
pop
dec
nop
add
orl
adc
mov
or
jbe
mov
stos
out
cltd
jo
in
adc
push
mov
mov
icebp
daa
insl
aad
and
mov
mov
inc
and
dec
mov
mov
jmp
push
push
mov
pop
or
test
add
js
nop
aad
push
mov
sub
shl
or
xor
push
enter
inc
adc
fsubl
outsl
adc
movntq
rolb
jmp
dec
lret
push
adc
repnz
inc
call
pop
or
cs
add
adc
rcr
inc
loopne
xor
sub
call
adc
repz
mov
dec
in
add
add
std
jmp
sbb
clc
pop
xlat
lock
and
inc
insb
mov
int3
lahf
scas
out
sub
js
push
mov
pop
add
pop
rcrb
bound
pusha
shlb
popa
mov
fcompl
jns
test
sub
jp
or
inc
jbe
pusha
jae
movsl
or
jb
push
fldcw
mov
or
fisttpl
cltd
add
jge
jmp
jecxz
mov
push
or
jmp
xor
inc
push
add
or
push
out
aas
je
add
pop
push
xor
mov
stos
pop
cmp
mov
inc
sub
hlt
sti
push
jp
pop
jge
cmpsb
adc
dec
jmp
xor
loope
pusha
xor
mov
pop
sub
decl
inc
push
rolb
in
add
test
pop
insl
cmp
test
mov
ljmp
lret
push
push
sub
add
xor
clc
sbb
sub
dec
pop
orb
dec
test
or
int3
sbb
sbb
in
shl
repnz
aas
inc
jmp
insl
bound
dec
mov
bound
cmp
mov
or
mov
pop
nop
add
aaa
sub
sub
adc
mov
cmp
mov
push
sti
nop
leave
and
decl
ds
hlt
push
or
xchg
or
jmp
cmp
pop
xor
xor
loope
pusha
push
adc
xchg
add
into
xchg
jle
js
jne
sub
adc
xchg
pop
add
cmp
sbb
adc
addr16
inc
sbb
xor
adc
dec
lahf
aad
in
mov
mov
roll
sub
dec
cmp
shll
into
popf
pop
xchg
jbe
popw
jmp
sub
and
add
mov
cmpsl
mov
arpl
daa
subl
dec
ljmp
pop
inc
jge
cmp
mov
cmp
push
std
lahf
xchg
push
cmp
mov
popa
pop
push
cld
sub
inc
push
gs
jae
lahf
imulb
mov
push
out
fwait
es
rol
jecxz
sub
or
mov
and
test
daa
cwtl
and
sbb
push
cmp
sub
and
dec
add
sub
sub
adc
loop
pop
faddl
jmp
dec
jb
xor
fwait
xor
push
bound
fs
add
jg
movsb
cmp
jnp
pop
ret
loope
hlt
inc
inc
sahf
adc
sub
testl
outsb
leave
out
ret
std
push
push
xchg
mov
inc
movsl
add
push
test
jb
cltd
test
fwait
mov
negb
pop
push
jle
bound
push
movsl
inc
jns
nop
or
int3
inc
sti
popa
daa
sub
jns
push
rorb
inc
mov
and
addr16
or
clc
testb
jp
sub
lock
push
sbb
shl
in
incb
ret
inc
push
mov
push
xlat
jmp
lret
inc
dec
adc
mov
pop
pusha
dec
pop
in
push
and
sub
js
rolb
loop
js
jmp
loop
push
mov
sbb
adc
nop
inc
jmp
sub
cltd
mov
ret
lret
sahf
xchg
inc
pop
pusha
sbb
daa
sbb
ja
sub
mov
or
cmp
add
sub
hlt
add
faddp
jbe
dec
idivb
leave
pop
push
mov
mov
push
push
inc
add
or
mov
and
loope
stos
xchg
cli
add
sub
adc
pop
xor
int3
loope
cmp
rcll
jmp
int
cmpl
loope
xchg
jl
mov
les
pop
xchg
mov
loop
pop
xor
rolb
loope
jb
jmp
or
mov
adc
in
push
xchg
lods
test
add
lds
pop
repz
or
mov
div
sti
xor
and
push
cmpsl
push
mov
mov
or
lret
xchg
or
outsl
lds
or
fs
rolb
xor
add
xchg
mov
test
out
mov
cmp
pop
sub
or
adc
in
aam
mov
jg
in
push
sub
add
mov
or
cmp
jo
adc
sub
mov
daa
pop
lds
push
jl
cs
mov
mov
lds
mov
xchg
enter
xor
dec
adc
into
inc
es
xchg
jns
mov
pop
adc
and
daa
stos
inc
ja
sti
mov
mov
mov
outsl
movsl
jmp
js
popl
rolb
cmp
rcll
mov
fcoms
or
cmp
movsl
stos
adc
cwtl
cmp
popa
mov
inc
ljmp
fisubl
lods
cli
sub
sub
sub
mov
aam
adc
in
inc
testl
mov
ja
fadds
or
js
aas
cmpsb
xchg
popf
daa
cwtl
dec
lds
push
sbb
xor
cmp
orl
jo
jne
cs
push
mov
sub
and
mov
push
sub
xor
xchg
cmpb
add
mov
push
cmp
mul
or
push
jmp
add
pop
sarb
pop
idivl
ds
xchg
add
sbb
out
pop
mov
out
push
mov
outsl
inc
cmp
add
or
mov
adcb
std
push
fwait
lods
mov
ds
jp
cltd
jge
imul
cmp
push
lcall
mov
cmp
push
mov
and
dec
data16
je
js
cmp
push
or
ror
mov
sub
inc
push
lods
xchg
add
stc
in
and
pop
negl
jmp
cmp
test
sarb
clc
sub
sub
loopne
cmp
insl
jae
sarb
pop
xor
add
fwait
add
dec
inc
add
xchg
add
aaa
popf
pop
js
sbb
push
mov
and
cmp
jl
out
loop
sbb
pop
push
mov
mov
cmc
and
pusha
sbb
icebp
ja
or
pop
add
xor
aad
inc
insb
xchg
dec
aaa
ss
dec
iret
sub
lcall
cmc
mov
shl
leave
and
pop
push
jmp
addb
xor
inc
iret
imul
sub
add
sub
hlt
andl
dec
add
in
jnp
enter
fsubs
cmp
decl
xchg
inc
cmp
andb
cmp
jne
or
cwtl
sti
and
push
mov
push
sub
jae
jmp
or
pop
jbe
push
dec
cmpsb
push
pop
fcom
aad
pop
mov
adc
cs
push
push
pop
loop
fdiv
add
sub
sub
dec
pop
xchg
addr16
or
cwtl
sbb
xor
pop
or
sbb
hlt
gs
jmp
imul
add
jo
adc
push
lds
jns
pop
jmp
rcll
xor
push
push
ds
shl
subb
jl
add
in
xor
or
sbb
or
pop
xchg
mov
imul
jno
int3
pushw
dec
repnz
jl
sub
xor
or
sub
ljmp
popa
cltd
repnz
ret
sti
test
and
fsubrl
pop
nop
mov
add
sbb
adc
cmpsb
or
stc
inc
aam
jmp
test
add
inc
mov
sti
pusha
or
and
lods
dec
push
sub
lea
fs
add
adc
jnp,pt
dec
test
inc
or
jns
jp
or
or
sub
cld
xchg
sbb
push
adc
lock
rcr
xor
popf
mov
ja
xchg
dec
idivb
push
sub
add
push
or
pop
or
adc
push
rcrl
jmp
add
cmpb
out
out
out
add
mov
sub
pop
sub
jge
adc
xor
addl
xchg
inc
and
push
das
mov
loope
mov
add
cmp
addr16
dec
inc
mov
xlat
mov
rorb
cs
test
jl
mov
pusha
cmp
shll
sub
pop
pop
cmpsb
mov
pop
sub
pop
int3
pop
shrb
popf
hlt
daa
inc
push
mov
js
movsb
add
add
push
add
add
xchg
adc
mov
pop
sti
sbb
jmp
xlat
add
mov
xchg
fiaddl
push
inc
adc
repnz
loop
xlat
xor
adc
cs
xor
inc
testb
add
movsb
push
sbb
insb
cmp
lods
mov
add
jo
adc
pushf
lock
popa
sbb
in
sub
cmc
adcb
shlb
lods
cmpsb
dec
mov
cmp
mov
dec
xor
inc
pop
and
push
jmp
movsb
scas
cmp
push
adc
jbe
dec
xor
lret
fsubl
mov
pushl
jno
cmp
in
inc
inc
lock
add
push
sahf
push
inc
add
sub
inc
dec
add
mov
mov
sub
imul
frstor
cmp
xor
mov
stos
js
je
sbb
mov
push
int3
jmp
or
pop
stos
xchg
testb
or
lcall
or
into
sarb
jmp
hlt
scas
pusha
das
dec
jns
dec
sub
dec
stos
sbb
jbe
fildl
xor
cmp
sbb
sub
xor
fldcw
popa
push
inc
int3
inc
jle
dec
gs
or
ja
mov
addl
sub
push
pop
test
ss
ret
aaa
inc
ret
or
mov
hlt
mov
jo
jae
fidivrl
pop
pop
pmulhw
lcall
shlb
mov
jb
daa
sub
lds
das
jmp
mov
push
sub
bound
stc
mov
pop
int3
push
in
inc
dec
jne
or
push
push
mov
clc
jle
pop
jmp
bound
push
ret
push
jle
sub
pop
test
mov
lods
inc
add
or
daa
fstpl
loop
push
mov
les
jmp
xchg
das
movsl
inc
and
outsl
adc
cs
es
or
dec
nop
cmp
pop
push
xchg
or
jl
int3
mov
nop
notb
mov
int3
pop
shl
add
pop
jmp
sub
subb
sbb
sub
lahf
paddb
sbb
xor
and
mov
pop
add
cld
jle
push
dec
adc
pop
addl
movsb
cmp
popa
pusha
xor
pop
sub
xchg
std
adc
cld
dec
ljmp
mov
xor
pushf
dec
xor
dec
movsl
add
inc
dec
add
and
adc
out
add
cmp
and
jno
and
dec
add
pop
or
xor
std
jnp
popa
bound
sbb
add
cmp
adc
cs
aad
sbbb
sahf
inc
loope
xchg
fld
fdivs
fiadds
cmp
jmp
inc
shrb
cwtl
or
lods
mov
pop
mov
stc
ds
pop
nop
xor
and
ss
xor
adc
adc
pop
fstps
pop
fistpll
outsb
imul
lret
or
and
in
lea
and
lahf
inc
mov
or
jmp
pop
jns
das
flds
sbb
imulb
or
cmp
pop
push
xchg
xlat
lea
and
push
push
jmp
mov
push
push
add
sbb
dec
rclb
cmp
pop
xor
movsb
mov
ja
push
dec
pop
nop
arpl
xor
pop
arpl
fldl
sub
popf
loop
or
lods
mov
testb
nop
gs
and
or
and
xor
add
push
adc
pop
inc
out
add
dec
fbld
pusha
imul
xor
push
dec
jmp
adc
dec
push
push
mov
xchg
lds
fdivl
lret
adc
inc
iret
add
inc
arpl
pusha
pushf
jo
movsl
jae
add
repz
jmp
fmuls
sub
imul
jae
daa
insb
cmpb
jmp
sbb
dec
pushf
dec
ss
mov
data16
popa
pop
cmc
push
xchg
jb
andl
orl
insl
ds
rolb
mov
lret
movb
aam
push
dec
out
xchg
mov
push
xchg
insb
mov
incl
ret
xor
or
jnp
daa
xor
mov
fdivr
lods
pop
and
jns
or
arpl
push
int
pop
je
dec
pop
loope
jle
adc
jnp
xor
dec
mov
jmp
xor
fdivr
fiadds
pop
rorb
sub
adc
jns
sbb
out
push
jns
add
cmp
js
test
xor
aaa
jmp
jl
pop
jo
adc
xor
mov
push
clc
mov
sub
addr16
aaa
add
add
ss
xchg
add
dec
repnz
fs
outsl
jecxz
dec
jmp
push
or
and
jns
push
dec
fstpl
mov
push
jmp
loop
pop
in
xor
cwtl
add
mov
cmp
pop
sarb
inc
or
stc
xorb
add
mov
or
sub
xor
mov
mov
aad
arpl
and
cmp
jns
outsl
and
das
xchg
ror
or
mov
push
lock
dec
call
pop
clc
lret
orl
aam
add
sbb
inc
cmp
sbb
arpl
add
sub
ja
enter
je
stc
loopne
dec
xorl
inc
ret
aad
sbb
or
icebp
arpl
cs
push
gs
and
fs
mov
call
shl
hlt
xchg
imul
add
mov
inc
push
mov
mov
icebp
std
sbb
ret
loop
push
shr
rcl
out
pop
shr
sti
test
or
loope
inc
call
outsl
aam
pop
or
jg
aad
cmpsb
test
es
jl
inc
popf
push
cmp
sbb
in
mov
pop
nop
faddl
repz
fidivs
jmp
mov
add
ss
xor
aam
jg
mov
and
pushf
push
and
scas
hlt
xchg
loope
les
test
sbb
jbe
cwtl
in
shrb
mov
jg
dec
aam
or
fs
mov
lock
xchg
mov
fcomps
xchg
std
dec
xchg
mov
test
add
xchg
js
jne
mov
scas
add
dec
mov
dec
push
dec
cmpsb
xor
xor
inc
cmc
in
outsl
mov
movsb
inc
lcall
fsubs
daa
sub
sbb
push
push
jmp
push
sub
sbb
inc
test
das
popa
imul
or
push
in
cltd
xor
dec
sub
pop
aas
pusha
cltd
push
jmp
sbb
pop
xchg
xchg
adc
jmp
cmp
shll
in
mov
xchg
inc
fcmove
or
cmpsb
push
jmp
mov
aam
or
push
or
pop
dec
lock
push
testl
dec
enter
inc
add
dec
cmp
lcall
aad
int
loop
pop
aaa
pop
mov
push
popa
pop
pop
xor
inc
xchg
popf
subb
addl
cmp
xor
rcrl
shll
adc
sarl
adc
xchg
dec
and
push
and
sub
or
jle
sbb
imul
jmp
jno
stc
mov
push
les
lcall
daa
and
aad
sbb
push
jmp
sar
and
into
push
or
adc
loopne
xchg
mov
xor
jl
sub
or
pop
sub
xchg
out
icebp
add
inc
dec
push
xor
loopne
jmp
ror
add
add
add
lds
dec
pop
add
mov
and
loope
sub
stos
repnz
loop
addb
and
add
cmp
addr16
xchg
loope
call
xchg
js
jbe
outsb
jle
adc
pusha
sbb
and
jae
bound
push
or
je
cmp
cmp
pop
sub
lock
data16
dec
je
add
push
xlat
cmp
pushf
jmp
pop
out
rol
inc
cmp
pop
cmp
mov
add
lds
push
mov
loopne
cwtl
sub
lds
sub
jmp
pop
xchg
push
push
insb
mov
push
loopne
jnp
subb
loope
pop
xor
popf
scas
inc
mov
aas
rolb
fsubrs
mov
rcrb
sbb
dec
dec
mov
dec
add
jmp
or
pop
sub
or
push
mov
mov
test
or
push
lds
sub
jo
andl
xchg
sub
push
jmp
mov
adc
idiv
jle
jne
xchg
sarb
das
js
pop
ja
hlt
and
pop
xlat
jl
lahf
lret
call
dec
ss
pop
mov
test
repz
push
add
loop
sbb
ret
inc
hlt
push
sbb
push
sbb
cmpsl
nop
mov
sub
push
ret
cmp
mov
push
mov
cmp
dec
lock
or
std
ja
test
jbe
inc
sbb
xor
add
cmp
mov
fidivrl
gs
scas
push
int3
sub
das
pop
xchg
jle
pop
jmp
bound
jl
push
dec
test
ret
xor
icebp
adc
cmp
jmp
in
add
sub
and
rolb
pop
mov
subb
jge
or
jmp
mov
scas
pop
lds
mov
hlt
push
push
xor
pop
xchg
sahf
jae
imul
std
pop
push
xlat
sub
jnp
mov
mov
stos
inc
mov
inc
or
adc
pop
jmp
or
pop
enter
push
pop
icebp
xor
jmp
ret
and
mov
or
ds
dec
mov
scas
xchg
xchg
push
lock
jno
sbb
rclb
je
dec
add
enter
push
addr16
leave
outsl
jp
add
pop
pop
or
int3
les
sub
or
dec
and
lock
call
or
add
or
les
aam
decb
popa
pop
imulb
push
imul
add
js
or
sahf
lods
sti
jno
sub
push
and
jne
xchg
add
aas
jl
mov
rorl
dec
int3
push
sbb
sub
loope
cmpsb
addb
das
sub
ret
inc
movsb
and
popf
or
xor
rclb
aad
fsub
add
dec
xchg
xor
pop
pop
dec
cmp
cmp
dec
aad
in
int3
loopne
lret
outsl
mov
add
sbb
or
jg
cltd
loop
cld
add
data16
fld
dec
invd
movsb
adc
pop
pop
sbb
fildll
xor
lret
mov
cmp
leave
iret
mov
and
jg
push
add
pop
push
or
add
jmp
scas
and
sbb
jecxz
ljmp
adc
pop
adc
decl
dec
jmp
arpl
sbb
lock
xchg
sub
sbb
mov
adc
add
sbb
xor
cs
ljmp
sub
bnd
popf
fs
xchg
xor
xor
test
and
xorb
fwait
pop
and
mov
add
mov
pop
pop
xchg
subb
dec
popf
adc
inc
mov
insl
xor
xor
mov
cmp
sub
lea
mov
ljmp
stos
xor
in
aad
cs
in
cmp
lret
loopne
nop
aad
mov
dec
jge
xchg
daa
jmp
shr
add
bound
bnd
xor
stos
pop
pop
rcrb
dec
cli
idivb
pop
inc
or
xchg
loope
cmpsb
jl
or
xor
or
sbb
aaa
imul
xchg
shr
cmpsb
pop
inc
sub
add
lods
adc
outsl
test
xchg
or
xlat
mov
adc
and
jmp
sbb
cpuid
pop
xor
cmp
adc
pop
mov
sbb
pop
stos
cmp
jmp
aad
hlt
or
ljmp
or
inc
neg
adc
pusha
fstpt
xor
xor
inc
mov
or
pop
dec
shrl
and
push
mov
loop
or
push
add
xchg
inc
and
mov
xor
add
mov
andb
lcall
stc
and
dec
mov
int3
pop
pop
out
xchg
jo
xor
mov
into
ret
jge
lods
lret
mov
jb
orl
mov
pop
cmp
dec
jno
rcrb
dec
jo
jnp
pop
ret
mov
loope
and
push
cmp
dec
mov
iret
fisttpl
out
or
mov
jg
movsb
sub
inc
pop
xchg
js
mov
andb
mov
cmp
mov
sub
fdivr
pusha
movsl
repz
pop
sub
xor
fldcw
jecxz
adc
in
and
pop
push
pop
adc
adc
out
inc
pop
and
jmp
or
pop
and
inc
push
inc
mov
test
mov
ficomps
pop
mov
dec
adc
and
adc
or
or
in
pop
popa
sub
test
jl
out
scas
pop
xchg
pop
in
fiaddl
pusha
ret
cs
push
jns
add
roll
add
push
addb
inc
ljmp
add
sub
orl
inc
jg
xor
jmp
add
fadds
ljmp
xor
sub
aas
inc
jmp
dec
add
in
xor
adc
inc
into
sub
and
inc
bound
test
scas
popf
add
sti
push
xchg
cmp
cmpsb
mov
mov
mov
andb
shrl
add
cmp
fwait
add
popf
into
adc
mov
xor
adc
popa
daa
mov
addb
bsf
adc
loop
jmp
cmp
sarl
and
jne
rorb
add
xor
adc
shll
and
xchg
outsb
cmpsl
js
or
bound
mov
rolb
in
cmp
sub
ljmp
mov
bswap
jmp
adc
add
dec
pop
mov
sbb
subb
ljmp
outsb
and
jg
mov
sub
push
adc
ds
outsl
jp
and
fcmovb
ret
lret
rcrb
insl
cmp
cmp
or
out
data16
sub
sub
inc
out
mov
adc
ret
jnp
insl
or
fwait
inc
or
add
jmp
ret
lea
mov
adc
pushf
test
call
clc
inc
movsb
aam
out
sub
dec
mov
lcall
cs
mov
inc
mov
leave
sub
or
pop
add
push
jbe
fs
sub
mov
mov
sub
and
jno
jno
mov
pop
and
jb
and
lods
test
jmp
lret
push
jg
insb
mov
movsb
jmp
add
mov
pop
push
push
inc
sbb
add
push
icebp
or
add
fisttpl
call
stc
add
pop
add
lock
push
call
jp
xor
test
add
xchg
xchg
add
imul
sub
adc
les
cmp
dec
jmp
or
or
clc
dec
cltd
daa
cs
inc
xchg
dec
jno
sub
add
add
dec
or
shl
dec
lahf
jnp
cmp
pop
dec
sub
lock
rorl
pop
out
repz
push
or
idivb
dec
lret
add
call
in
addr16
dec
add
ja
lds
xlat
pushl
mov
mov
pop
dec
lods
mov
es
cmp
dec
vmwrite
pop
fadds
rolb
dec
enter
adc
mov
outsb
adcb
ljmp
xchg
ret
pop
jg
mov
out
ljmp
jno
jo
push
call
fisttpll
mov
dec
push
or
pop
mov
and
push
aad
mov
add
mov
jmp
mov
out
add
daa
jo
jecxz
ret
add
in
daa
imul
add
pop
sub
enter
pop
fcomps
sbb
mov
std
pop
scas
scas
pusha
jno
mov
jbe
adc
adc
mov
sub
inc
jl
adc
mov
divb
mov
cmpb
sub
or
cld
loop
shrl
je
sub
jo
cmp
leave
or
pop
jmp
nop
add
dec
mov
pop
mov
out
dec
mov
push
test
test
sbb
orb
pop
in
mov
xchg
push
lahf
js
xchg
dec
and
and
cld
mov
cmpsb
add
push
jmp
pop
ss
xchg
push
notl
sbb
dec
or
inc
ja
xor
jb
les
orl
add
lods
fimull
inc
add
loopne
ljmp
js
ret
repz
dec
add
in
ret
shr
shl
cmp
push
test
and
dec
mov
test
cmc
mov
jmp
add
pop
xchg
les
imul
loopne
mov
pop
or
mov
imul
xor
mov
pop
fs
mov
iret
jnp
lret
aas
mov
movsl
jmp
xor
cli
xchg
jae
out
shl
push
and
pop
popl
xorl
xor
xor
hlt
mov
jnp
dec
push
test
mov
mov
inc
cwtl
mov
aas
or
pinsrw
cmpsb
pop
aam
cs
ret
leave
fiadds
xor
push
loopne
mov
jne
pop
into
jmp
jmp
adc
xchg
dec
daa
fiadds
scas
ret
jne
push
pop
xor
pop
push
cwtl
cmp
jb
add
mov
test
shr
lds
lcall
dec
jl
dec
call
push
jg
mov
pop
mov
insl
add
lock
sub
pop
insb
adc
and
jg
jns
jbe
outsl
and
ja
and
and
jno
add
push
daa
pop
add
repz
imul
cmp
arpl
pushf
xchg
dec
cmpsb
out
mov
and
inc
cwtl
jo
mov
sub
mov
xchg
jmp
pop
cs
jo
ss
dec
or
jmp
cmp
or
test
je
jmp
mov
dec
pop
fsubrs
dec
popf
push
insl
dec
aam
in
inc
sbb
mov
push
mov
ret
lock
jmp
inc
dec
stc
je
pop
push
mov
mov
jbe
ljmp
ret
sub
add
lds
xchg
sbb
push
pop
mov
mov
push
ljmp
popa
hlt
xor
and
xor
arpl
jbe
ret
cmp
clc
lcall
add
dec
add
cmp
out
cld
in
inc
push
leave
out
mov
and
sub
test
ja
push
pop
adc
jmp
xchg
jns
shlb
sbb
push
jmp
pop
pop
push
mov
addr16
fbld
pop
cmpsl
mov
outsb
and
mov
push
add
dec
xchg
loopne
dec
es
pop
sub
imul
repz
shrb
es
loopne
or
mov
jb
je
sub
and
and
jns
out
in
xor
add
push
bound
xchg
test
mov
add
mov
popa
add
mov
jmp
cmp
pop
imul
insl
and
sub
or
sub
pop
sbb
lret
inc
loop
fldenv
or
divb
xchg
and
outsl
jmp
sarl
in
cltd
shlb
in
adc
sbb
cmc
mov
xchg
and
push
adc
xorb
popa
cmp
fstps
mov
jnp
cmpsl
ljmp
lods
sub
xor
xor
and
add
push
inc
or
mov
and
xlat
dec
xchg
clc
jns
adc
ja
stos
xor
rcrl
push
neg
sub
push
or
ss
or
jmp
aas
shlb
aad
sbb
sbb
dec
loopne
ret
jns
cs
xchg
cli
cli
and
paddsb
pop
sub
cmpsl
jmp
loop
cmpb
jo
or
push
mov
jo
add
dec
jmp
movsl
test
pop
scas
dec
loopne
push
push
add
pop
add
es
pop
call
dec
mov
mov
dec
repnz
xor
shll
pop
cmc
sub
mov
pop
arpl
xor
scas
xsha256
cmpsb
adc
mov
sub
push
xor
and
stc
dec
mov
fldenv
ret
cmc
and
mov
or
pushf
add
add
and
icebp
gs
mov
push
rclb
dec
sub
pusha
or
daa
out
insl
sbbb
inc
cmp
jmp
cmp
rorb
je
rorl
aas
cmp
push
les
test
lock
jmp
lret
push
push
dec
sub
and
push
push
scas
adc
dec
add
or
adc
mov
movsb
mov
xorl
add
and
or
push
addl
frstor
mov
int3
data16
dec
add
push
sbb
shlb
or
cmc
xchg
nop
rolb
jb
push
mov
mov
dec
fucompp
mov
andl
repnz
loopne
popf
cmpsb
sbb
in
adc
pop
xor
lcall
jl
dec
sub
xor
and
sub
cmp
push
call
add
fcomps
inc
and
adc
or
cmp
xchg
xorb
js
inc
pop
mov
scas
sub
stos
lret
xchg
add
aam
mov
add
cwtl
loop
or
push
dec
test
out
inc
push
testb
mov
add
stc
cmpsb
cli
adc
inc
lock
inc
jmp
mov
sbb
sahf
mov
sti
adc
stos
popa
dec
adc
cmp
daa
push
test
stos
adc
mov
aam
cmpsb
cld
bswap
stos
or
loope
jbe
imul
add
cs
pop
xchg
loopne
pop
sub
outsl
ja
inc
xor
jo
inc
dec
call
mov
sub
add
shlb
inc
nop
dec
cmp
cmp
cld
insl
add
mov
cmc
pusha
push
adc
lcall
cld
sub
mov
dec
icebp
lret
cld
dec
dec
jne
xchg
wbinvd
test
adcb
mov
outsl
inc
push
pushf
pop
mov
and
inc
pop
aaa
sbb
ret
adc
inc
cmp
ret
lcall
push
shl
dec
cmp
and
cmp
pop
call
lret
nop
lods
dec
test
jle
imul
or
xor
push
and
shr
dec
xchg
decb
roll
rcrl
testb
inc
push
les
dec
imul
mov
mov
dec
push
inc
lods
out
jl
pop
pop
lods
stos
or
insb
pop
stc
mov
push
popa
aam
mov
or
xchg
xchg
mov
push
jge
add
je
jne
cmc
dec
int3
jmp
shl
aad
loopne
or
adc
loope
inc
push
lods
lods
xor
orl
in
mov
jbe
inc
jmp
leave
adc
xor
movb
add
dec
push
cmpb
inc
icebp
shll
or
pop
inc
jae
jle
repz
ds
mov
push
jmpw
out
into
jo
pop
lret
pop
jne
and
frstor
push
mov
sub
testb
adc
jmp
pop
cltd
adc
adc
jmp
outsl
loop
sar
aad
mov
mov
sahf
rcrl
decb
jmp
loop
das
mov
mov
mov
mov
cmp
push
jnp
sbb
jge
push
dec
mov
jb
pop
fs
sub
lret
adc
das
sub
jmp
out
imul
imul
mov
jmp
rol
push
and
add
ds
pop
ss
mov
hlt
ja
mov
sti
push
pop
xor
in
sub
adc
jmp
shr
aas
inc
std
inc
xor
loopne
sbb
sahf
pop
sub
xchg
mov
push
data16
enter
cmp
cmp
jle
push
xchg
out
das
pop
jbe
sub
or
pop
and
dec
pop
insl
lock
adc
inc
clc
addl
sub
adc
call
xchg
pop
shl
pop
pushl
and
movl
jns
std
ficomps
pop
loopne
movsb
gs
ljmp
ljmp
les
aaa
fisttps
test
add
ljmp
bsf
cmp
or
outsb
shlb
add
sbb
xchg
and
and
loope
ret
adc
adc
or
dec
pop
mov
ret
or
jg
cld
adc
inc
add
add
inc
inc
rclb
test
jmp
xor
xor
inc
into
dec
add
xor
dec
and
xor
ljmp
nop
hlt
xor
enter
test
push
popf
cld
outsl
mov
xchg
mov
push
jmp
pop
jb
jbe
mov
xchg
lret
mov
mov
nop
test
int3
ljmp
jmp
insb
xchg
ljmp
jl
fdivrp
shll
jge
ret
jmp
testl
xchg
rclb
test
out
inc
add
test
add
imul
sbb
xchg
pop
push
jmp
out
push
mov
pop
push
test
pop
xchg
fs
mov
cmp
mov
mov
or
jp
push
push
push
mov
sbb
and
icebp
pop
ja
xchg
jecxz
dec
inc
push
mov
je
push
in
mov
add
fdivrp
and
sub
sub
cmp
in
fimull
add
xor
sbb
inc
mov
sbb
and
mov
orl
add
cli
rcll
test
lods
jmp
incb
sbb
and
mov
fs
enter
lret
js
lds
roll
loop
add
inc
push
sub
inc
xchg
adc
rep
cmp
lods
int3
adc
out
or
or
movsb
mov
lods
popf
fists
clc
out
pop
sbb
ljmp
hlt
push
les
sbb
rorb
or
es
in
pop
adc
fnstcw
lock
or
pop
sub
mov
xorl
sarb
sbb
add
add
sub
jmp
xrelease
dec
mov
push
daa
dec
dec
push
add
aad
cld
pop
mov
push
adc
adc
daa
and
xchg
sub
add
dec
jno
faddl
scas
or
inc
clc
xlat
push
mov
jae
add
stc
es
adc
and
popa
ja
adc
or
scas
add
les
or
push
or
jno
nop
and
stos
in
outsl
sub
lea
push
mov
popf
push
mov
or
inc
push
jge
and
clc
incb
cmp
cmp
adc
ds
xchg
cmp
cmp
add
jbe
fbld
pop
pop
out
xor
pop
mov
stc
push
add
fincstp
jl
jmp
sbb
mov
test
cmp
pop
das
inc
xor
dec
push
movsb
int3
pop
test
dec
cmpsb
iret
push
jg
daa
xor
out
xchg
jbe
cmp
sub
aam
les
or
out
iret
push
mov
fmuls
nop
xchg
add
shlb
push
shll
sub
out
enter
shlb
push
pushf
popa
mov
mov
loopne
icebp
jo
mov
xor
push
push
into
cs
mov
push
xor
fnsave
fldl2t
daa
repz
aam
add
push
bound
xor
fstps
jb
jecxz
adc
lods
jge
mov
add
push
test
adc
pop
add
cmp
pop
dec
in
insb
xlat
xor
in
jmp
cmp
add
or
ds
sub
stc
je
nop
mov
mov
rorb
add
xchg
fisubrs
mov
pusha
ds
ret
aad
and
movsl
aas
pop
rol
or
faddl
inc
enter
cmp
pop
lods
jmp
xor
xchg
adc
test
mov
jo
mov
sub
dec
xchg
inc
ret
lock
jmp
mov
sub
sub
mov
mov
jle
aaa
or
pop
jmp
push
shrl
pop
push
jmp
pop
mov
cmp
push
pop
adc
mov
xor
xchg
inc
jmp
jmp
adc
out
pop
pop
sbb
and
and
inc
inc
xor
cs
pop
push
add
sbb
pusha
xchg
jmp
xchg
daa
pop
mov
mov
jmp
push
loopne
inc
loop
clc
sub
and
int
cmp
push
cwtl
sub
fbld
rcl
adc
sbb
lret
or
pop
lcall
sub
dec
ficompl
and
jl
cmc
sub
pop
js
or
mov
jb
sbb
shr
sbb
cmp
add
out
pop
mov
stos
jg
cld
add
or
dec
insb
aaa
adc
cmp
xchg
inc
imul
or
pushf
daa
stc
fs
mov
pop
popa
adc
shll
pop
cmpl
aas
and
dec
rorl
ret
outsl
inc
rorl
rcll
push
jbe
jl
push
or
insl
inc
sub
mov
push
add
jmp
andl
mov
mov
bound
xor
sub
pop
adc
mov
sbbb
and
mov
sbb
or
add
xor
cld
pop
xchg
add
inc
dec
outsb
push
xor
push
jns
pop
popa
add
mov
sbb
data16
call
push
mov
stc
jae
rcrl
call
xchg
jmp
add
dec
dec
pop
and
hlt
dec
into
data16
popf
and
pop
ret
cmp
movsb
sbb
je
pop
sahf
and
iret
or
repz
add
mov
ret
les
add
pop
enter
add
fdivl
pop
xor
xchg
bnd
sub
add
or
sub
sub
sarl
inc
popf
call
dec
popa
sub
jmp
pop
cli
add
xchg
or
pop
add
cwtl
dec
or
xchg
push
jl
mov
mov
idivb
dec
or
lcall
or
adc
pop
mov
test
mov
push
add
lret
cltd
dec
outsb
pop
add
cld
cwtl
sub
adc
int
pop
jbe
push
xorb
or
dec
push
mov
jmp
mov
adc
xchg
into
or
xor
pusha
cs
mov
sub
add
mov
inc
imul
gs
mov
aad
mov
cld
outsb
cmp
and
xchg
adc
sbb
xor
mov
dec
aaa
mov
push
xchg
sbb
fs
jo
push
movsl
cwtl
jp
dec
add
popa
sub
jecxz
push
push
aaa
dec
mov
imul
scas
ds
rolb
add
lahf
pop
push
adc
data16
xchg
jge
mov
mov
cmc
xorl
je
dec
fcmovnbe
adc
pusha
jbe
lock
enter
subb
xchg
sbbb
cmp
aaa
leave
pop
jno
dec
pop
sti
pusha
mul
push
lods
addr16
dec
xor
adc
dec
clc
jl
adc
pop
cmpb
sbb
cmc
out
in
or
xchg
inc
inc
dec
adc
pop
dec
add
fnstcw
gs
inc
clc
push
nop
mov
mov
pop
mov
ds
rorb
add
ffree
in
push
mov
popf
cmpl
icebp
ror
push
aas
mov
lahf
out
movsl
iret
out
pushf
fiadds
pop
into
mov
negl
in
dec
pop
dec
mov
fwait
dec
std
lock
out
sbb
sub
or
push
cld
inc
inc
add
inc
ret
mov
pop
bnd
idivb
ljmp
pop
call
cld
pop
mov
out
xchg
xchg
xor
out
xor
pusha
sbb
int3
pop
mov
add
adc
xor
jnp
data16
xor
or
push
jno
sub
andl
loope
and
push
sbb
sub
ret
repz
sub
dec
orl
push
cld
imul
dec
rorb
push
fisttps
push
iret
adc
push
xor
or
call
imul
iret
loope
mov
jg,pt
popa
ret
dec
addb
inc
push
lahf
and
push
jo
popf
stos
add
cmc
push
jmp
leave
xchg
push
xchg
movsl
fdiv
ja
add
pop
insl
in
out
es
add
mov
mov
aaa
mov
cli
jae
add
cmpsl
adc
inc
pop
js
pop
sbbl
xor
add
add
fsubl
jle
adc
divl
or
in
loopne
push
xchg
add
stos
dec
das
cli
add
mov
pop
xlat
cmpl
movsb
mov
inc
xchg
test
cmpsb
push
and
lock
or
mov
sub
jmp
cld
cvtps2pi
pop
loopne
jmp
fmull
xorl
fistpl
add
pushf
jnp
jnp
mov
pop
fcmovbe
mov
jbe
add
dec
cwtl
jne
fstps
pop
notl
or
in
daa
fistl
adc
mov
fildl
jmp
ja
daa
and
xchg
cmp
jno
xchg
out
lods
jl
pop
inc
scas
and
sarl
pushf
insb
ljmp
faddp
xor
test
mov
adc
sub
incb
jecxz
jl
icebp
inc
pop
add
pusha
or
jne,pn
jecxz
clc
cmp
shrb
sub
aam
inc
jno
sub
cmp
xor
xor
add
mov
jae
inc
aad
or
vshufpd
cmp
push
scas
push
scas
je
sbb
xor
mov
cmp
mov
push
add
out
ret
and
dec
or
pop
ja
jecxz
mov
push
pop
cvttps2pi
call
push
push
sbb
aas
shl
inc
sti
adc
out
add
icebp
pop
andl
mov
mov
jge
clc
mov
or
aad
movsl
shlb
cmp
test
sub
in
mov
mov
imul
lcall
dec
test
cld
outsl
dec
dec
test
in
arpl
addr16
sub
adc
or
ret
out
pop
mov
and
popf
pop
xchg
push
fs
pop
jmp
sub
jp
fisubs
mov
and
and
mov
push
insl
sub
push
mov
addb
or
lcall
sbb
iret
add
arpl
and
bound
xor
aas
stc
mov
dec
mov
adc
bound
push
out
and
dec
popa
aad
aam
push
mov
inc
adc
pop
pop
in
shll
daa
out
xchg
mov
and
push
push
rol
xchg
inc
or
cmc
mov
adc
mov
stos
cld
mov
mov
jmp
scas
leave
or
fs
pop
add
mov
shrl
cmp
nop
xchg
sbb
or
pop
mov
pop
push
pop
xchg
movsl
xchg
lret
mov
shrl
icebp
or
mov
pop
shl
out
dec
pop
inc
jle
cmp
lret
popf
test
sbb
push
cmp
shl
cs
push
sbb
push
mov
inc
addl
sub
pop
or
out
add
add
test
mov
sub
stos
mov
orb
and
dec
adc
dec
mov
xchg
jmp
pop
arpl
pop
pop
xchg
push
add
adc
testb
adc
imul
xor
ja
cmpsb
cli
test
cmp
jne
orl
jnp
sub
in
icebp
lock
xlat
push
mov
push
stos
add
pop
push
test
mov
out
jbe
xor
mov
add
push
aas
xor
sub
outsl
push
fadds
push
pop
push
mov
and
jmp
loopne
lret
cmp
cmc
push
pop
shl
push
jge
adc
push
shlb
and
das
xor
xor
fiadds
call
and
ljmp
fs
or
or
shll
mov
outsb
and
add
dec
mov
lods
int3
fisubrs
mov
and
jnp
flds
xor
sbb
pusha
add
push
jle
jecxz
pop
enter
fdivp
mov
lods
inc
aad
push
sub
adc
loopne
xor
mov
sarl
mov
pusha
xor
adc
shlb
stc
and
cs
jmp
out
daa
fs
add
sub
mov
rolb
scas
jae
pop
lods
daa
xchg
push
mov
jbe
les
mov
jmp
insb
push
imul
ret
je
push
pop
xor
add
lods
push
dec
test
mov
lcall
jne
xchg
inc
and
push
pop
aas
push
sahf
pop
divb
sbb
push
arpl
mov
ret
mov
call
xchg
sub
push
mov
adc
pop
cmpsl
pop
dec
sub
jmp
jns
xchg
loop
ret
jnp
push
push
adc
push
adc
insb
adc
adc
xchg
ljmp
mov
jno
sub
adc
je
jecxz
sub
mov
data16
jle
aam
sbb
add
sti
cmp
xor
jo
test
ret
fcoms
scas
or
adc
and
pop
inc
sub
dec
flds
pop
mov
or
lods
fistl
fisttpl
push
fists
cld
pop
pop
jecxz
iret
dec
inc
mov
push
sbb
jne,pt
aad
dec
mov
js
jmp
adc
pop
push
cmp
movsb
cmp
roll
sub
mov
adc
call
es
add
sbb
push
cs
rcll
sub
bound
or
add
add
mull
std
in
add
cld
mov
fs
sub
xchg
mov
daa
adc
mov
call
out
orb
test
adcb
testl
cmp
jns
nop
mov
xlat
dec
push
mov
je
mov
xchg
aam
jmp
lock
or
out
popa
pop
pushaw
testl
or
jge
es
sub
xchg
xor
mov
dec
ret
pop
sarb
fs
mov
dec
xor
inc
lods
iret
sarl
push
cmp
jae
jge
aad
adc
daa
fistpll
or
addr16
mov
sahf
shr
cmp
shlb
xor
pop
sub
adc
push
ret
pop
jl
jns
js
movsl
test
lcall
add
push
rorl
xchg
mov
inc
cmc
rclb
xchg
push
xchg
jmp
std
das
mov
push
mov
cmpsb
dec
push
js
vmread
push
inc
sbb
add
jl
xor
mov
add
add
ja
or
push
lods
adc
add
xor
sub
cmpsl
dec
outsl
xor
xor
push
mov
xor
iret
dec
xchg
push
std
sub
xchg
ljmp
jmp
sbb
int
movsl
out
loop
jg
push
inc
push
lock
xlat
cmp
adc
pop
push
pop
mov
pop
mov
or
pop
test
dec
and
pop
dec
or
lods
dec
pop
cmp
daa
ret
xlat
xchg
aam
fists
add
pusha
mov
jmp
jne
ds
movsl
icebp
cmp
pop
lcall
adc
push
push
mov
mov
leave
in
xchg
or
movb
pop
jb
pop
push
add
mov
cmpsl
shl
add
call
mov
mov
cmp
sbb
in
icebp
and
hlt
fmul
mov
out
jmp
cld
mov
pop
xchg
mov
cmp
pop
add
idivl
push
in
cmp
pop
or
outsb
push
iret
mov
repz
jno
jmp
xchg
adc
aaa
test
add
add
add
jmp
add
into
cmc
and
push
ds
repz
and
or
push
js
enter
fdivl
es
add
jmp
sbb
cld
and
sbb
push
data16
sbbb
leave
pop
pop
push
shrb
repnz
push
data16
xchg
fcmove
sub
shll
jl
cmpb
and
pop
lret
in
jbe
scas
sbb
sub
push
out
adc
or
sti
xchg
cmp
mov
adcl
push
jmp
lea
std
inc
lds
test
add
push
jmp
pop
jno
dec
jg
adc
loop
rcll
xlat
in
sub
sub
pop
adc
call
xchg
add
add
jne
jb
mov
out
and
test
mov
js
mov
in
or
xor
lods
inc
leave
adc
xor
int3
and
pop
push
push
fdiv
rorb
std
push
nop
das
add
sbb
fimull
mov
or
adc
in
pop
inc
xlat
add
ljmp
and
pop
orl
out
add
ds
sbb
pusha
stos
jle
xchg
nop
add
repnz
sbb
pusha
mov
push
add
jp
sub
aad
sbb
test
jmp
in
repnz
inc
sbbl
push
inc
cmpsb
lcall
or
stos
arpl
lahf
xchg
dec
push
push
push
add
jmp
pop
push
iret
inc
cmc
inc
popl
test
add
push
or
adcb
xor
pop
dec
icebp
std
fwait
cmc
shll
xor
cmp
adc
jmp
mov
mov
sub
ja
jns
shlb
addr16
xchg
bndldx
sbb
scas
sub
sub
movsl
out
pop
or
dec
xor
jns
sbbb
shrb
jo
lahf
addl
test
scas
sub
add
add
mov
lret
mov
orb
insb
sbb
jmp
add
idivb
adc
subl
add
in
mov
pop
cvtdq2ps
cmpsb
add
sub
lahf
pop
mov
xor
arpl
or
xor
xor
mov
inc
arpl
jne
fistps
loop
push
inc
dec
pop
jae
sub
lea
shl
xchg
aad
enter
nop
out
add
and
aam
es
dec
sub
arpl
xor
pop
sub
inc
push
push
mov
jle
mov
lock
push
mov
jle
pushf
gs
mov
pop
lods
scas
push
pop
test
roll
jno
add
add
pop
xor
rcrl
push
add
int3
repnz
mov
test
inc
sub
test
iret
rol
jmp
fstpl
mov
cld
push
push
jge
addb
push
jg
inc
add
es
adc
fildl
aas
clc
add
or
roll
aas
adc
mov
pop
add
cmc
cmp
stc
xchg
and
cmp
or
clc
hlt
push
dec
jle
mov
sub
xchg
ja
dec
and
mov
movsl
loop
test
loop
jmp
and
ljmp
es
dec
pop
les
call
adc
adc
or
and
mov
jmp
roll
or
xor
jnp
fwait
lock
jmp
add
dec
xor
mov
out
and
sub
jecxz
ja
iret
mov
push
dec
test
pop
add
test
fldl
jmp
enter
lods
in
or
dec
ret
jbe
subl
and
mov
cmpsl
mov
jne
dec
push
mov
aas
subb
pop
decb
test
in
xor
andb
push
and
test
mulb
jmp
sub
jmp
inc
imul
pop
mov
fsubrs
shl
mov
sub
scas
inc
std
mov
inc
mov
mov
mov
push
test
or
sub
push
dec
jmp
lock
cmpsl
cmc
into
add
jecxz
out
cmc
and
adc
pop
cmp
adc
add
pop
enter
sbb
out
mov
lock
insb
in
dec
mov
mov
push
jae
add
data16
adc
hlt
dec
mov
leave
pushf
jmp
push
in
sbb
movsb
mov
jmp
shrb
jo
in
add
inc
or
scas
addl
shl
pushf
bound
inc
add
push
xor
and
jne
dec
push
adc
lret
mov
adc
ret
ja
push
lods
mov
mov
adc
push
jl
sub
inc
jmp
lret
pop
jmp
mov
aam
cld
hlt
sub
repz
pop
inc
jnp
push
cltd
stos
push
jl
imul
iret
mov
or
pop
xchg
repnz
jbe
xor
xor
or
pop
mov
mov
in
loop
loop
push
dec
lods
pop
ja
das
lods
test
idivl
jbe
inc
cmp
dec
pop
mov
lea
jb
adc
jne
push
cmp
cmp
pop
lea
xor
inc
add
xor
add
ds
mov
mov
pop
adc
rcrb
inc
xchg
mov
js
pop
push
std
daa
and
cmpsb
push
popa
lods
pop
icebp
enter
adc
dec
pop
and
pop
add
lods
adc
xor
lods
add
cltd
or
jne
repz
xchg
adc
mov
mulb
icebp
push
jne
dec
or
jmp
fs
cltd
pop
inc
mov
sbb
jmp
fisttpll
lret
sub
and
arpl
xor
xor
adcl
hlt
or
gs
push
mul
push
or
push
cli
add
mov
xchg
shl
pop
daa
std
hlt
mov
jecxz
push
or
mov
mov
rorl
sbb
sbb
jne
subb
and
push
xchg
inc
add
add
push
jp
push
and
sbb
add
jbe
pop
ljmp
mov
mov
mov
mov
repnz
mov
loope
loop
inc
outsl
mov
or
sub
jmp
add
adc
bound
inc
insb
mulb
adcl
enter
fsubrs
xor
cmc
mov
mov
or
inc
cmp
sbbb
fidivrl
rorb
popf
pop
mov
dec
or
and
into
mov
mov
add
xor
jne
jns
scas
adc
ret
out
pop
push
mov
cmp
mov
xchg
mov
and
pop
in
lods
mov
aas
test
lds
adc
fmuls
mov
aas
xor
sbb
or
popa
jecxz
and
lods
add
and
lock
shl
xchg
mov
pushl
scas
or
pop
adc
or
push
pop
adc
push
pop
pop
bound
jmp
pop
mov
xchg
or
inc
fsubrl
add
xor
jl
pop
int
ret
push
insl
sub
or
out
int3
add
add
or
out
lahf
xor
and
ret
sub
sub
xor
adc
jmp
lcall
shll
idivl
fstpt
fs
scas
int3
xor
push
jle
lods
inc
jae
lods
sti
daa
inc
or
adc
add
bound
lahf
enter
pop
inc
sahf
ds
mov
mov
or
loop
sub
into
test
or
push
sub
push
andb
in
ss
movsl
push
mov
les
or
lret
out
adc
xor
cmp
loop
add
inc
test
mov
adc
jnp
test
jp
loope
sub
inc
xchg
or
push
fwait
movsb
dec
sub
sub
icebp
inc
dec
mov
cwtd
dec
push
jno
nop
mov
and
out
pop
cld
cmp
push
push
shrb
mov
jmp
pop
ret
loope
cltd
jnp
cmp
and
call
pop
or
pop
out
bnd
pushf
mulb
inc
or
push
dec
or
ljmp
mov
xor
ret
dec
mov
inc
mull
subl
nop
or
jmp
sub
outsl
cwtl
jae
lods
and
in
das
in
push
daa
fdivrl
and
std
add
mov
cmp
stos
sbb
pop
aad
mov
xchg
shll
push
sbb
and
mov
pop
clc
add
jmp
fcoms
pop
data16
sub
sti
ret
loope
es
pushf
shr
mov
pop
add
cmp
sub
pusha
pop
push
cmpsl
pusha
mov
and
pop
fsub
icebp
xchg
or
cmc
xor
cld
add
fbld
dec
das
rclb
aas
cs
dec
lods
sbb
push
cltd
xor
mov
push
add
sbb
xchg
mov
push
adcb
mov
filds
out
jge
cmp
sbb
out
adc
push
cli
incb
mov
adc
jb
test
js
movsb
and
or
in
nop
pushf
loope
les
sti
lret
rcl
xchg
cmp
mov
test
pop
xchg
loope
jo
xchg
mov
xchg
and
stc
inc
xor
adc
or
in
mov
push
mov
jp
imul
scas
aas
sub
sub
add
addr16
jae
xor
in
sub
sub
pop
sub
or
and
pop
cmpb
add
xchg
or
lds
iret
jb
sub
xchg
push
push
sahf
addr16
rep
inc
jmp
push
mov
mov
jl
ret
jp
xchg
lea
add
cmp
rclb
pop
jmp
mov
sub
repnz
push
pop
dec
pop
lods
popf
dec
mov
push
fidivrs
addr16
push
mov
je
mov
cmp
gs
jae
jnp
aam
lds
pop
jle
add
push
add
pop
adc
fisttpll
xchg
or
add
aam
xchg
fs
jmp
cmp
es
decb
leavew
or
pop
cmp
sbb
xor
xchg
sbb
lock
mov
push
jg
out
mov
lahf
repz
lock
lods
test
mov
dec
sub
pop
mov
jle
add
mov
popf
jbe
outsb
stos
jo
mov
add
or
mov
cs
loopne
ret
xchg
aam
inc
enter
sub
cmc
leave
lcall
push
dec
ror
sahf
movsl
out
rorb
aam
adc
adc
push
pop
xlat
orb
push
call
jecxz
push
jmp
pop
pop
push
and
push
int3
adc
idivl
cwtl
cwtl
repz
push
push
adc
mov
add
mov
and
push
cld
shll
movsb
add
xor
or
int
fs
mov
jmp
aaa
mov
out
popa
fs
addr16
or
inc
sub
add
pop
cs
cld
std
cmp
outsl
fsubp
mov
sbb
dec
jp
mov
daa
loope
cwtl
mov
mov
jmp
mov
adc
mov
sbb
jno
sahf
sbb
setns
aas
repz
test
stos
mov
pop
jae
or
ret
xor
stos
cs
subb
jle
bound
push
repnz
test
dec
cmp
rorb
push
cmp
add
fisubs
sub
sbb
cmp
jnp
or
bound
imul
pop
popf
xchg
imull
push
stc
in
cmp
inc
jno
dec
sbb
cmc
push
push
mov
mov
sbb
or
inc
xchg
jns
push
les
js
test
sub
loop
xchg
xchg
xor
fs
les
xor
jle
add
push
stc
add
pop
xor
fnsave
push
nop
dec
and
cmc
das
sub
neg
pop
pusha
pushf
cmpb
bswap
pop
mov
jno
xchg
out
mov
push
lret
pusha
shr
jp
imul
xor
fldcw
dec
movsl
and
mov
mov
jbe
imul
lods
or
in
arpl
fistps
pop
in
sbb
cmp
and
nop
inc
shlb
daa
mov
cmp
je
dec
inc
in
cmp
xchg
lahf
or
cmp
sbb
add
or
leave
or
fcmovnu
adc
push
cwtl
stos
mov
adc
xor
push
or
pop
mov
aaa
stos
dec
movsl
cmp
adc
mov
push
rcrb
inc
xor
mov
adc
jns
xorb
inc
lret
out
push
pop
adc
inc
xor
es
add
movsb
repnz
sarb
hlt
xor
repnz
pop
xlat
pop
aad
decl
stos
add
sbb
mov
add
dec
cmpsb
cwtl
xchg
sti
cwtl
sbb
pop
ljmp
pushf
cmpsl
mov
outsl
mov
jmp
pop
adcl
and
movsl
jge,pn
dec
testb
cwtl
test
add
idivl
jl
sbbb
data16
dec
shr
mov
divb
movsbl
ret
in
or
mov
xchg
add
sahf
loopne
xchg
repnz
ja
call
inc
cwtl
inc
loop
and
xchg
pop
mov
or
arpl
lock
lahf
rcll
push
jbe
add
arpl
popf
loop
pop
movsb
and
ljmp
aaa
popf
mov
pop
fisubrl
pop
sbb
dec
out
adc
loope
add
xor
test
pushf
cs
hlt
cmp
cmp
push
mov
arpl
push
pop
andl
sahf
arpl
push
add
lds
fs
lea
xor
sub
imul
add
adc
pusha
loop
inc
gs
add
inc
filds
out
rcl
int
xor
into
mov
add
sti
hlt
inc
add
add
and
mov
push
dec
data16
jmp
imul
ds
add
cmp
mov
dec
mov
push
cmp
fildll
inc
into
insl
jno
push
daa
pop
push
sbbb
shr
dec
jl
dec
pop
push
enter
ret
loope
test
pusha
std
sbbb
and
scas
iret
xor
sbb
sub
adc
aam
jge
popa
push
push
and
cmp
mov
add
jmp
mov
mov
lahf
push
and
mov
adc
mov
ljmp
xchg
mov
jl
sub
sub
and
add
jmp
pop
pop
outsl
out
xchg
hlt
mov
pop
pop
icebp
imul
cmp
loop
ds
es
test
cmp
popf
hlt
inc
sbb
jp
add
xor
push
jo
lds
pop
rep
jmp
push
out
insb
jp
xor
jmp
lds
pop
addr16
ror
or
outsl
sub
loopne
jns
mov
dec
mov
aam
mov
add
out
subb
add
jmp
push
add
pop
mov
xor
lds
add
lods
decl
stos
add
ljmp
imul
mov
pop
push
nop
hlt
and
mov
fwait
leave
das
test
push
mov
jno
pop
ja
mov
jmp
sbb
dec
add
insl
mov
or
movswl
mov
cmc
daa
loop
jnp
and
bound
arpl
dec
xlat
cmp
int
xchg
into
push
je
push
pop
out
pusha
std
add
mov
sub
enter
sub
ds
cmpsl
icebp
inc
enter
ljmp
outsb
pop
fwait
xor
clc
jmp
notl
pop
push
in
jns
lods
pushf
mov
cmpsl
add
xchg
adc
int
rorb
dec
stos
add
shrl
adc
jge
push
adc
sub
inc
js
jb
int
add
cld
stos
mov
adc
pop
lds
gs
orb
mov
jmp
jmp
cli
mov
xor
dec
jl
ret
cmp
mov
or
imul
sub
jp
mov
push
pop
fimull
push
jbe
das
fidivs
mov
int
js
enter
xchg
stc
cmpsb
sbb
test
gs
add
or
jmp
push
mov
and
in
repnz
push
pusha
call
mov
in
dec
xor
ret
cmp
daa
fcmovnu
aaa
push
jecxz
adc
jmp
mov
pop
out
cltd
shrl
cmp
adc
in
mov
pop
jl
lret
jb
repz
das
add
je
bound
pop
lods
rclb
lods
shlb
repnz
sub
sub
clc
notb
test
or
mov
pop
leave
xor
dec
jne
pop
aad
cmp
push
xchg
pop
sahf
adc
jmp
je
push
adc
mov
adc
popa
mov
sub
out
jnp
ret
imul
add
xchg
push
sub
int
mov
lret
dec
dec
jb
nop
or
daa
or
daa
jmp
push
in
jne
jae
cmp
dec
loopne
in
icebp
or
or
jmp
lret
lahf
jmp
pop
dec
pop
ds
sub
add
add
inc
add
push
add
dec
add
call
pop
pop
add
mov
jbe
xor
dec
imul
pop
test
test
mov
data16
or
xor
push
lcall
xchg
pop
pop
pop
lods
sti
rorb
dec
mov
adc
rcll
pusha
add
fs
push
add
lret
add
or
stc
js
ljmp
push
push
pop
inc
int3
xchg
add
pusha
dec
add
push
jle
and
push
cmp
sub
pusha
repz
aaa
mov
stos
dec
adc
repnz
roll
mov
loopne
jmp
dec
lret
scas
mov
enter
mov
jo
daa
sbb
or
push
loopne
or
inc
cmp
or
sub
pop
xor
jmp
push
push
add
push
inc
push
mov
out
pop
fcoml
add
add
pop
pop
outsb
mov
das
and
and
sub
stos
and
mov
add
jmp
xor
pop
xchg
in
jmp
adc
lds
push
data16
pop
repz
test
fucomip
and
test
mov
cwtl
pushf
daa
adc
xchg
dec
jmp
in
fs
nop
movsb
movsl
jle
pop
xor
push
cltd
rorl
push
push
pop
mov
push
dec
mov
test
jl
xor
xchg
mov
inc
and
cmp
mov
imul
dec
mov
jnp
into
jmp
lods
shlb
mov
push
ret
repnz
outsb
loop
add
jae
dec
aam
push
frstor
sbb
add
cli
jmp
and
dec
pop
outsl
mov
add
add
add
and
xor
pop
lea
cli
xor
push
call
jmp
xchg
add
pushw
push
mov
test
xor
mov
push
inc
in
xor
push
paddd
xchg
in
dec
test
daa
pop
fsts
jo
sbb
fnstcw
shll
xchg
push
mov
and
loopne
jmp
shll
jns
sub
imul
test
push
add
dec
nop
es
push
add
clc
add
sub
pop
ret
es
out
and
mov
add
int3
adc
dec
add
ljmp
push
mov
sbb
xchg
mov
push
jge
cld
push
cltd
addr16
shlb
aas
push
int
dec
adc
sti
xor
mov
inc
pop
lods
jo
fs
jo
icebp
inc
xor
inc
xchg
sub
dec
pop
icebp
xor
pusha
dec
frstor
jno
cmpsb
imul
adc
out
dec
dec
imul
stos
in
pusha
aam
or
xor
insb
and
in
leave
jnp
cmp
mov
sub
jl
or
aad
or
or
fimuls
insb
cmp
inc
and
push
ljmp
sub
adc
popa
sbb
or
sub
cwtl
rcrb
push
mov
daa
dec
insl
clc
ret
add
add
dec
add
pop
sub
and
mov
push
or
inc
cvtdq2ps
hlt
cmp
xlat
sti
mov
and
enter
imul
mov
mov
nop
sub
fmuls
pop
mov
cmp
sub
sub
inc
sub
and
add
cwtl
sub
pop
push
cli
mov
lret
incb
test
scas
mov
out
lahf
xchg
jno
leave
jge
rclb
rorb
movsb
add
sub
jb
in
add
jbe
push
dec
pop
lods
insb
push
aam
lock
xor
sub
jle
push
ret
ss
mov
repz
lock
ret
or
push
or
test
add
sti
jmp
xchg
cmp
sbb
adc
pop
jmp
frstor
mov
shll
and
add
push
mov
inc
pop
fs
adc
popf
mov
sub
push
out
cmp
pop
mov
pop
and
enter
adc
shrb
lock
jle
orb
xor
mov
sub
sub
daa
jle
insb
test
inc
jne
fs
loopne
int3
mov
and
rcll
int3
dec
sbb
jo
subb
mov
stc
lods
sbb
cli
mov
sub
sub
clc
jp
shlb
stc
bound
imul
rorl
adc
xchg
cmp
mov
or
jg
fwait
add
xor
sub
xchg
out
push
fcmovne
aam
das
rol
sub
cs
adc
xor
ret
into
and
es
mov
lods
and
std
pmaddubsw
dec
mov
or
je
xor
ds
and
icebp
pop
or
dec
xorb
dec
outsl
cmp
ljmp
mov
and
iret
push
push
popa
icebp
mov
jne
mov
push
rclb
mov
scas
jmp
push
pushl
xchg
cltd
sbb
mov
fadds
mov
xor
cs
adcb
shll
xchg
loop
xchg
in
add
sub
nop
in
popf
push
in
or
sbb
push
fimuls
pop
adc
mov
add
dec
add
jmp
pop
cmp
sbb
lret
inc
adc
in
scas
pushf
or
and
adcb
aam
pusha
cmp
mov
repz
add
fldcw
push
or
es
loope
mov
sbb
pop
aas
inc
pop
xorl
scas
insb
add
or
xor
ds
jns
insl
jmp
sub
insb
xchg
lea
aaa
cmp
xor
shl
xor
pop
mov
fildl
add
jmp
mov
cmp
insl
sbb
mov
or
call
iret
push
mov
int3
mov
mov
adc
or
lahf
in
imul
xor
out
or
cmp
dec
push
call
loope
push
cmp
or
imul
push
jmp
leave
pop
and
ficompl
jp
adc
or
cwtl
movsl
mov
mov
jbe
pusha
add
xchg
jmp
aad
stc
add
push
mov
je
push
inc
adc
add
rolb
int
pusha
ss
out
lock
or
adc
mov
push
jmp
ljmp
nop
cld
mov
imul
sbbb
in
sub
inc
les
sub
cmovl
jo
sub
arpl
cmp
cwtl
pop
pop
mov
jb
or
insl
pop
jmp
jg
jp
add
inc
imul
mov
push
xchg
ret
sub
xchg
add
cli
pop
orl
pop
decl
or
mov
xor
sub
popa
pop
and
into
push
clc
mov
mov
es
push
push
testl
mov
inc
push
add
push
or
pop
dec
cld
mov
movsb
push
fadd
push
pop
push
adc
or
imul
push
je
clc
fsubl
and
cmpb
push
push
ja
outsb
sarl
add
mov
xchg
jae
mov
pop
push
adc
or
rcrl
push
push
or
int
sub
xchg
outsb
out
cltd
sbb
pop
or
jp
hlt
call
shlb
jecxz
or
les
into
inc
stos
dec
les
ja
outsb
sbb
adc
adc
mov
adc
scas
andl
pop
mov
mov
add
pop
xor
mov
sbb
jmp
xchg
pop
lock
jmp
les
arpl
pop
mov
pop
ds
lock
mov
and
adc
mov
adc
decb
adc
mov
push
mov
mov
jbe
xor
adc
jmp
popl
aam
and
testl
mov
xor
or
lds
mov
push
repz
or
in
add
or
adc
push
or
out
push
lock
pop
pop
jmp
push
mov
cmc
sub
mov
mov
cli
lret
pop
add
out
pop
rcrb
pop
mov
cmp
mov
ret
repz
scas
mov
xchg
mov
test
dec
xchg
cmpsl
dec
scas
xor
xor
jbe
mov
das
cmp
or
or
dec
inc
add
pushf
add
jmp
in
fwait
daa
int
repz
jg
imul
pop
pop
icebp
dec
jle
jo
pop
cmp
jmp
sub
lods
lahf
mov
xor
jae
mov
fs
pop
out
ret
ret
rcr
xchg
jb
inc
shll
pop
hlt
aas
cmp
cmp
and
inc
repnz
out
mov
rolb
xor
pop
js
div
or
ds
insb
push
test
mov
inc
sahf
add
das
push
push
mov
shlb
shll
and
loop
dec
repz
pop
insb
lea
std
daa
inc
out
aam
sbb
aam
push
loop
stc
or
push
test
pop
sub
dec
sbb
push
push
jo
addb
fildll
xchg
cld
clc
push
dec
jmp
sbb
or
inc
sub
xchg
or
xor
scas
mov
adc
lock
movsl
hlt
jnp
add
mov
sbb
jo
cmp
add
icebp
repnz
ljmp
push
in
cmc
xor
dec
lcall
subb
or
push
xchg
out
leave
jae
mov
jbe
cwtl
add
pop
dec
dec
xor
jmp
add
and
test
scas
popf
push
cmpsl
or
pop
test
ret
sbb
ss
mov
sub
or
movsl
mov
pop
push
sub
or
inc
out
mov
or
push
xor
mov
es
adc
aad
adc
mov
lea
sub
xchg
loop
out
cmp
xchg
mov
pop
repnz
adc
mov
lar
inc
fidivrl
push
jmp
fsub
xor
mov
and
pusha
add
pop
pop
sub
adc
xor
push
call
adc
icebp
daa
xor
lcall
mov
adc
push
loopne
mov
dec
and
push
add
rcll
or
jge
jo
scas
adc
pop
outsl
sbb
mov
movsl
push
sub
inc
sbb
cltd
int
add
push
rorb
adc
mov
push
mov
rcrb
add
push
mov
add
xor
mov
jns
inc
insb
push
pop
jp
aas
push
mov
sbb
pop
push
shrb
mov
dec
loope
das
ficompl
or
push
mov
xor
ds
pop
push
cmpsl
mov
add
mov
fs
jmp
add
shl
mov
loop
loop
sbb
stc
les
pop
lods
mov
iret
ficoms
adc
push
repnz
shr
xlat
cld
stos
les
mov
shlb
imull
jns
bound
pop
aad
rorb
sar
fwait
jnp
aad
inc
in
bound
jmp
jle
jo
and
add
rcll
add
mov
mov
and
cmp
push
xor
lret
and
add
out
jmp
mov
xchg
pop
pop
or
mov
and
loope
int
add
enter
lahf
test
jns
pop
pop
iret
stos
xor
push
and
add
pop
xor
add
lds
cli
push
adc
inc
not
nop
add
lods
aas
rorl
xor
jb
inc
arpl
inc
inc
jmp
je
int3
sbb
pop
or
mov
xchg
sbb
imul
call
movsb
movsb
int
jp
pop
push
std
add
sti
adc
mov
dec
fidivrl
nop
cwtl
mov
sub
push
pop
leave
lods
lock
mov
add
mov
inc
pop
clc
pop
int
lret
fsubrl
lret
imul
mov
shrb
mov
insb
xchg
pop
push
and
or
rorb
sub
sub
movsb
xchg
jle
jmp
jmp
push
pop
jnp
or
inc
andl
xchg
inc
push
mov
icebp
push
and
addl
rorb
fistpl
sbb
mov
sbb
or
adc
cmp
jno
gs
dec
test
push
stos
aaa
pop
lret
jo
xchg
pop
imul
or
push
imul
aam
ret
pop
pusha
xchg
xor
cs
pop
push
add
dec
ja
ljmp
xor
xor
pop
enter
push
push
cwtl
mov
mov
popf
dec
subb
jg
mov
sub
push
mov
push
or
decb
add
mov
mov
or
push
push
in
mov
sbb
inc
insb
dec
jp
push
push
and
negb
pop
outsl
dec
pop
fs
jno
jmp
push
mov
lret
lods
test
push
pop
iret
popf
or
push
sub
sub
sbb
add
jae
xadd
divl
enter
push
push
pop
jno
mov
cwtl
call
por
insb
and
cmc
add
or
lods
and
orb
inc
adcb
or
out
xchg
jns
iret
leave
popf
ret
cmc
int3
insb
dec
pop
mov
insl
pop
dec
jmp
pop
ja
lods
and
pop
lret
mov
pop
mull
push
push
call
xor
dec
adc
dec
popa
into
pop
add
pop
adc
push
lcall
adcb
sbb
cmpsl
push
mov
pop
movsb
xchg
fldenv
xorb
jae
jne
stos
pop
sbb
sub
xchg
mov
xchg
ret
mov
and
add
popf
and
inc
fsub
add
scas
add
or
adcl
out
xor
cmp
adc
pop
push
push
nop
mov
les
add
dec
xor
repz
repz
lahf
add
lcall
in
adc
pop
jb
add
and
in
mov
cmpsb
push
xchg
sub
xlat
add
jne
xchg
inc
pop
sub
ss
add
loope
and
push
or
test
mov
mov
pushf
push
pop
icebp
das
mov
or
out
jmp
mov
inc
jecxz
and
and
add
icebp
pusha
leave
add
push
pusha
out
in
and
sub
pop
les
je
jo
inc
mov
or
call
aad
add
and
inc
in
mov
push
shrb
les
out
jmp
icebp
cmpsb
cs
mov
rcrb
es
xor
cmpsl
jbe
jno
push
imul
xchg
sbb
or
test
movsb
xor
cmp
loop
or
jl
sbb
fimull
or
dec
sub
ret
add
push
push
lea
daa
xchg
imul
iret
add
push
mov
aas
jmp
testb
movsb
mov
xchg
push
xor
aas
push
lods
dec
fdivl
ja
xchg
jb
test
pop
cmp
push
out
cmp
sbb
xor
adc
jns
jp
shl
sti
sarb
adc
cwtl
push
ljmp
shrl
adc
mov
add
jmp
mov
push
jg
inc
jmp
call
push
scas
mov
stc
dec
test
stos
mov
sub
in
add
clc
jae
aas
xchg
sub
shlb
sub
mov
js
sbb
int3
push
cld
push
iret
lcall
and
movsl
fsub
sub
add
add
pop
mov
push
lcall
jmp
flds
xchg
mov
loop
mov
push
jl
push
sub
aas
pop
sub
add
xor
das
mov
adc
repnz
jne
iret
inc
pop
mov
inc
shl
ja
adc
loope
sbb
cmp
icebp
sub
adc
cmp
or
pop
jp
push
dec
pushl
mov
dec
adc
dec
js
aad
test
jl
dec
sahf
add
jmp
cmp
popaw
xchg
loop
faddl
mov
add
pop
xor
adc
jmp
loop
inc
mov
cmp
aas
push
daa
push
cld
xlat
lods
inc
jg
sub
subl
test
repnz
mov
incl
jmp
adc
fldl
pop
or
xlat
sbb
adc
push
fisubs
xchg
jne
sub
pop
lcall
dec
add
sub
add
and
popa
outsl
or
push
pop
mov
adc
les
rcrl
push
data16
lds
mov
or
mov
mov
jmp
push
orb
in
adc
push
adcb
mov
sub
in
jmp
pop
nop
cmp
dec
mov
cmpb
dec
dec
and
jae
popa
add
into
mov
add
or
adc
call
mov
jp
jp
cmp
cmp
sarl
test
subb
cltd
adc
adc
fucom
out
xchg
arpl
lret
add
cltd
push
ja
lahf
sub
mov
push
mov
jl
dec
lock
pop
jmp
xchg
fists
pop
and
sbb
idivb
lock
sub
data16
aad
cmp
sbb
test
sub
push
add
inc
push
sub
repnz
add
stos
aam
mov
test
imul
rcl
mov
mov
cld
jle
push
negb
lahf
inc
cmp
xchg
lahf
fsubl
xlat
dec
pop
negl
xorb
sub
bound
dec
cwtl
mov
mov
push
inc
test
pop
not
xorb
mov
pop
fildll
push
adcl
xor
adc
mov
cmp
pop
sarb
leave
sbb
dec
lods
psllw
inc
shr
pop
sbb
je
setge
xor
jg
iret
jmp
cli
cltd
xor
add
dec
bound
mov
xor
sbb
mov
xor
aaa
or
loopne
pop
push
sbb
jp
dec
add
push
xorb
mov
loope
sbbb
rcrl
pop
bound
jo
mov
or
mov
neg
leave
or
adc
cmp
jecxz
pushf
jmp
mov
mov
out
ss
jnp
dec
xor
xchg
inc
testb
jno
and
mov
or
out
repz
jo
daa
xor
pop
adc
je
push
push
addr16
adc
pop
adc
mov
inc
mov
jecxz
nop
fistpl
jno
aam
or
cmovo
push
xor
jmp
inc
cmp
lods
jo
push
incb
mov
mov
add
mov
push
adc
jmp
cmp
push
insb
add
xchg
add
dec
popf
jo
pop
mov
mov
xor
inc
push
push
hlt
mov
xor
and
orl
push
jmp
lret
push
daa
jmp
icebp
jmp
sub
jecxz
push
jmp
sbb
lods
imul
insl
lcall
jne
outsl
notb
cmp
into
lods
adcb
mov
add
sahf
push
dec
enter
aaa
adc
dec
mov
xor
dec
inc
jns
fnsave
rorb
or
pop
rcrb
lret
inc
rorl
test
sbb
out
out
pop
mov
sbb
sbb
sub
ret
push
iret
xchg
ljmp
or
mov
xor
mov
mov
shlb
jmp
add
test
daa
push
inc
add
adc
movsb
fadd
sarl
pop
cmp
dec
mov
jmp
or
call
je
dec
adcb
jmp
scas
das
add
pushf
adc
outsb
pop
xorl
add
mov
ret
insl
cs
jo
push
add
mov
pop
jmp
xchg
push
cmp
xchg
stos
dec
shll
mov
mov
push
sub
popf
call
daa
pop
xlat
and
push
sbb
pop
mov
cmp
dec
pop
add
and
xlat
inc
and
clc
or
add
sarl
out
add
jne
inc
not
pusha
out
push
adc
jb
fldl
mov
dec
dec
ffreep
subb
scas
xor
jmp
mov
scas
sub
inc
inc
dec
inc
push
xor
mov
add
inc
add
xlat
cs
pop
mov
sub
cltd
cmp
dec
sbb
cld
fcompl
iret
addb
popa
dec
cld
insl
and
push
mov
jbe
sub
pushf
push
aam
adc
lods
sub
mov
cmp
lds
xor
mov
imul
push
fsubrs
popf
ret
adc
cmp
lock
sbb
push
fldcw
aaa
push
add
loop
pop
mov
inc
add
push
pushf
and
mov
sub
loopne
aam
mov
ss
xor
or
jge
and
stos
or
popf
insl
aaa
daa
push
or
sbb
repz
cmp
lds
not
mov
fs
movntps
fnop
jge
and
xchg
cli
call
xor
pusha
sub
pop
xchg
add
sbb
pop
inc
ds
ret
xchg
jmp
xlat
lret
cmp
int
and
jbe
dec
shl
pop
jmp
cmp
std
add
popa
jge
and
cld
cmp
movsl
dec
adc
es
and
and
shr
into
testb
jp
stos
fsubs
insl
push
outsl
popf
push
pop
jmp
in
adc
das
push
mov
hlt
mov
mov
lds
lret
outsb
pop
mov
add
mov
xor
fstps
imul
testl
aam
test
sub
and
je
leave
dec
push
lock
repz
shr
push
xchg
mov
xlat
mov
fcomps
dec
xchg
pop
sub
jmp
clc
add
setbe
add
icebp
push
jmp
aas
adc
or
out
jmp
lret
push
push
mov
sbb
aam
and
mov
outsb
and
shr
mov
mov
call
and
icebp
repnz
jnp
lret
ds
xor
shll
dec
mov
movl
pop
push
loop
jl
add
adc
lock
jmp
jecxz
mov
lahf
mov
std
or
insb
cmp
push
out
sbb
daa
push
sub
mov
push
imul
sahf
into
lods
imul
rclb
sbb
add
or
xchg
jmp
shl
xchg
ret
mov
pop
push
push
pop
mov
repz
dec
test
add
cmp
add
fsubs
jl
daa
in
sbb
clc
mov
jno
pop
push
or
clc
add
push
jmp
or
mov
bound
imul
xor
pop
sub
add
dec
mov
mov
adc
ljmp
das
ljmp
cmp
cmpl
and
mov
rclb
sbb
add
mov
loope
adc
jo
shl
or
in
add
call
addb
pop
xchg
aad
mov
sub
inc
aaa
or
out
or
inc
not
enter
sahf
aas
dec
push
mov
add
push
data16
lods
xor
inc
incb
or
jmp
stos
aad
adc
or
pop
and
int3
hlt
jne
not
push
mov
shlb
xor
sub
mov
loope
mov
cld
es
subl
testb
or
push
sub
imul
sub
aaa
push
cmp
pop
pusha
push
or
stc
fcomip
push
push
mov
xchg
adc
imul
and
cmp
and
sub
mov
scas
imul
scas
push
push
pop
fwait
cmp
sbb
popa
mov
jmp
inc
nop
inc
cmp
pop
in
es
addr16
adc
jmp
dec
shlb
push
repz
aaa
cmc
cli
hlt
pop
sbbb
pop
or
mov
bound
jbe
arpl
jecxz
icebp
cmc
pop
aam
pop
outsl
push
sub
shrl
jmp
in
add
cmp
stos
pop
rorb
not
shl
add
aad
xlat
pop
mov
pop
not
popf
push
dec
test
inc
push
jmp
dec
fs
or
pushf
adc
mov
adc
cltd
das
sub
jge
repnz
popa
xor
mov
mov
neg
clc
stos
or
rol
test
xor
adc
aas
roll
aad
sub
popf
jecxz
gs
out
mov
cmc
add
dec
fstpl
pop
dec
sbb
sbbl
mov
cs
lds
dec
xorb
jmp
mov
push
stos
and
dec
mov
add
or
cmp
mov
daa
mov
push
nop
lods
scas
mov
adc
and
sbb
push
sub
mov
fmull
pop
push
cmc
add
pop
aad
jmp
jb
clc
jae
add
or
push
out
cmp
inc
mov
or
addr16
fwait
imul
xchg
push
inc
andb
add
cmpsb
mov
sub
xchg
pop
pop
mov
jmp
out
aam
jae
inc
xchg
and
pop
jmp
aad
movsb
add
push
sti
sbb
add
adc
ds
pop
add
mov
mov
mov
cld
nop
pop
jl
jmp
call
shlb
popf
push
push
je
cmp
scas
mov
aam
ljmp
push
mov
fists
inc
movsb
sub
shlb
data16
daa
or
xlat
xor
shr
xor
iret
mov
push
inc
addr16
mov
mov
xchg
mov
push
gs
ret
sub
cmp
cmpsl
dec
sahf
pusha
jmp
ret
shl
xor
cmp
daa
sub
andb
jmp
xor
adc
sbb
lds
or
xor
das
mov
xchg
xor
adc
inc
push
sbb
mov
or
dec
mov
shll
or
add
ret
lock
add
sub
scas
or
cmp
imul
cwtl
mov
out
lds
arpl
cmpsl
jle
clc
push
mov
push
jmp
pop
data16
mov
jmp
and
cmc
add
insl
stos
and
ljmp
jmp
repz
cmc
leave
push
or
ret
rcl
and
repz
fldt
mov
jne
std
add
pusha
lods
repz
orl
icebp
vmread
mov
dec
push
jo
push
sub
mov
subb
mov
jl
pop
cmp
adc
out
jl
mov
mov
xchg
push
dec
out
dec
jmp
clc
jne
arpl
test
xchg
mov
rol
mov
cmc
xchg
mov
int3
iret
sub
push
mov
add
mov
jmp
and
cmp
mov
jge
sub
jmp
jae
xor
push
pop
neg
add
add
out
iret
idiv
pop
cmp
cmp
xchg
sbb
adc
pop
scas
rorb
xor
xchg
pusha
adc
adc
mov
scas
test
mov
enter
fisttps
icebp
add
xor
and
andb
add
jo
ss
or
sbb
sub
sbb
or
adc
ss
lods
and
inc
sub
push
adc
adc
push
jbe
test
xlat
inc
jmp
mov
xchg
xchg
and
mov
lock
xor
aaa
mov
push
aas
jge
push
jne
mov
sbb
daa
pop
adc
mov
or
loope
push
pusha
int3
add
out
test
or
push
mov
sub
or
adc
add
fstps
leave
out
test
arpl
xchg
insl
shr
xchg
adc
add
adc
test
jmp
roll
je
mov
jge
ljmp
and
add
pop
ljmp
sub
or
inc
popa
dec
and
sub
dec
add
xor
in
clc
je
inc
mov
add
js
dec
inc
clc
loop
dec
xor
and
das
repnz
es
pop
fnstsw
orb
pop
xor
or
cs
mov
sbb
sbb
ss
vpavgb
or
xor
fildl
gs
xchg
pop
pop
jns
mov
adc
pop
inc
aas
push
mov
cwtl
outsl
xlat
sub
shlb
pushf
cmp
pop
dec
add
roll
orb
add
push
in
mov
adc
lret
sarl
or
push
mov
adc
xor
ret
in
in
out
sub
ret
push
aam
leave
cmp
add
sub
dec
stos
xchg
call
cmp
push
inc
adc
xorl
nop
push
lret
xor
icebp
in
ficoml
fsubrp
add
je
or
enter
add
jno
mov
dec
popf
sbb
add
sub
inc
add
imul
hlt
out
out
xchg
cwtl
mov
cmp
mov
push
push
shrl
mov
aaa
or
daa
lock
adc
ret
mov
testl
in
jo
mov
and
divb
outsl
jg
nopl
pop
push
in
faddl
pop
ljmp
enter
mov
sbb
incb
ljmp
sti
push
and
addr16
hlt
sbb
movsl
sbb
sub
sbb
pop
aad
mov
nop
call
popa
sub
inc
and
push
repz
outsb
inc
and
jo
insl
fs
ja
or
pop
mov
jae
or
xchg
mov
lods
fistps
cmp
push
jb
sub
jo
jmp
fists
or
sbb
addb
ret
repnz
movsl
pop
adc
pop
inc
insb
bound
push
sarb
jmp
push
xchg
movl
cld
fidivrl
cmc
mov
cli
in
adcb
cmp
icebp
movsl
nop
je
test
mov
call
push
sub
add
rorb
dec
sub
or
pop
jmp
in
movsb
lds
insb
sbb
fistpll
sbb
add
ret
push
icebp
inc
xor
mov
dec
dec
add
push
pop
mov
rol
fsubr
pushf
cmc
xchg
pop
dec
lock
outsl
inc
iret
push
xchg
adc
nop
mov
cli
cmpsl
xchg
mov
sbbl
add
fs
add
mov
arpl
incb
mov
sbb
xor
and
add
flds
and
mov
or
jae
lret
add
xchg
cwtl
mov
cmp
daa
add
arpl
jnp
mov
and
add
clc
mov
pop
ret
iret
mov
scas
fcoml
daa
jne
hlt
dec
push
daa
dec
xor
js
filds
add
jecxz
inc
iret
fisubrs
inc
xor
pop
mov
jb
or
lock
jne
sbbb
add
jg
cwtl
or
inc
dec
add
mov
push
in
ja
pushf
sub
and
xor
pop
and
ja
das
outsb
test
jecxz
mov
enter
inc
or
mov
mov
lds
shrl
jbe
inc
mov
add
mov
xchg
pop
add
cmp
pop
jge
push
enter
pop
push
mov
xor
xchg
push
add
movl
pop
add
mov
push
dec
jp
mov
sbb
inc
sbbl
test
js
aad
add
lock
movzwl
inc
jge
pop
clc
fiadds
and
ret
aaa
inc
addl
ljmp
pop
or
adc
add
sti
subb
push
repnz
jge
pop
pusha
dec
lods
popa
js
ds
push
cmpsb
pop
or
imul
pusha
jmp
xchg
daa
push
and
cmpsl
and
mov
nop
lods
and
stc
xor
cmc
mov
jmp
inc
jg
pop
pop
push
movsl
test
push
subl
ss
mov
xor
jmp
dec
or
divl
test
inc
pop
sub
pop
aam
add
pusha
negb
pop
cs
and
dec
or
push
scas
repnz
cltd
xlat
inc
adc
add
xor
fcoms
push
jmp
arpl
call
mov
pop
les
pop
scas
add
subb
add
mov
dec
cmpsb
add
das
lock
cltd
stos
cmp
cmp
jmp
jnp
or
das
in
loop
inc
cwtl
inc
or
push
mov
push
dec
les
fwait
bound
fistps
shr
cmp
jle
pop
int
push
sub
gs
inc
add
sbb
inc
int3
pop
xchg
in
mov
xor
in
outsb
lahf
xorl
push
jbe
add
nop
inc
gs
orl
in
dec
push
mov
push
sub
adc
cli
sub
jno
sub
adcb
ss
jbe
ss
sahf
pushf
clc
test
and
push
mov
faddl
and
adc
aad
xchg
cmp
lcall
mov
into
sub
xor
inc
ljmp
push
mov
subb
cmp
sub
add
inc
mov
adc
loopne
int3
xchg
nop
fdivrs
ss
add
fucomi
mov
inc
mov
loope
pop
scas
mov
adc
mov
inc
add
idivb
add
dec
addl
gs
and
pop
fs
dec
cmp
outsl
sti
mov
xchg
scas
xor
pop
pop
xchg
dec
or
push
pop
mov
pop
jp
enter
scas
and
push
push
xor
loope
fs
dec
push
inc
or
sub
xor
jmp
cmp
pop
dec
jo
mov
push
stos
daa
subb
enter
rcrb
xchg
jns
xor
das
mov
adc
push
stc
fwait
imul
push
push
inc
jmp
bound
enter
movsl
jmp
xlat
out
cmc
push
and
xor
add
pop
or
push
in
std
pop
stos
xor
pop
xchg
inc
add
std
mov
lcall
loope
jmp
mov
repnz
jl
aas
loop
nop
ljmp
dec
leave
jge
sub
and
fildll
shl
fabs
ret
popa
frstor
cmp
dec
sub
ja
sub
neg
jbe
and
int3
hlt
push
add
jns
cmp
add
stos
adc
mull
lods
add
sbb
jmp
aad
in
ljmp
fs
push
and
jmp
jmp
push
or
test
push
add
inc
nop
cli
or
popa
roll
rclb
ret
out
or
frstor
jo
outsl
adc
inc
mov
push
rcr
pop
jmp
jge
mov
fcomps
jbe
imul
cli
jl
cwtl
aas
mov
jmp
pop
in
pop
leave
jp
adc
sarb
inc
add
cwtl
scas
push
sub
inc
mov
sub
jmp
lahf
sti
adc
mov
lock
sub
xchg
add
sub
pop
mov
clc
add
push
stos
jno
xor
lret
pop
cmc
and
scas
or
pop
pop
gs
sbb
cwtl
pop
ret
ret
xchg
dec
daa
adc
add
dec
xor
pop
xor
adc
jg
mov
push
pop
sub
and
into
sbb
inc
in
jmp
sub
xchg
gs
add
cld
cmpsb
and
push
cs
jo
and
dec
pop
mov
int3
push
jl
adc
neg
jmp
lret
mov
inc
xchg
rclb
add
je
jmp
ret
and
xchg
fst
outsl
or
ds
and
push
cmp
in
movsb
ja
mov
jo
pop
add
cmpb
aad
test
in
nop
jno
sub
mov
rcrl
xor
daa
loop
rolb
xchg
into
popf
push
push
inc
out
pop
inc
sub
shll
sub
mov
push
rolb
test
jne
mov
sub
jb
ret
or
and
jge
pop
fwait
mov
loop
pop
nop
fs
testb
int
and
in
ret
add
push
cmp
inc
addb
cmpsb
dec
not
or
jmp
add
jmp
test
mov
xchg
add
out
push
outsb
imul
jno
add
dec
dec
add
insl
pop
aaa
jmp
paddq
lods
mov
mov
insl
orb
mov
out
pop
inc
repz
mov
out
mov
ret
xchg
in
mov
inc
in
lock
add
ret
push
sbbb
jns
aaa
add
dec
push
xor
bound
add
sbb
negl
cmp
jb
xor
stc
xchg
int
mov
jae
or
loop
pop
mov
std
mov
jmp
mov
repnz
je
sub
add
insl
cmp
gs
sbb
push
enter
ret
mov
in
neg
push
mov
nop
jmp
sub
pop
fsubrp
or
dec
in
add
inc
cltd
jb
sbbb
add
loope
mov
mov
sar
imul
jmp
mov
dec
inc
pop
hlt
repnz
and
pop
out
lock
je
cmp
push
dec
shrd
adc
sub
jmp
push
xlat
flds
iret
and
rcl
jle
pusha
sub
push
or
pop
and
mov
pop
bound
adc
out
inc
fisubs
sub
sub
xor
inc
jb
arpl
ret
lods
in
mov
in
xchg
ds
test
movsbl
jmp
mov
jmp
cmp
xor
push
mov
hlt
incb
sarl
lcall
andb
aas
and
loopne
mov
mov
dec
es
shlb
inc
push
fs
sub
add
enter
mov
mov
scas
sbb
aam
jg
das
data16
jmp
mov
mov
pop
xor
jle
sbb
dec
bound
or
insb
out
addr16
xchg
mulb
iret
fucom
test
cmp
cli
in
ljmp
dec
mov
cltd
insb
push
mov
stos
lea
jl
jo
aad
dec
push
sub
in
mov
mov
pop
dec
arpl
sbb
sbb
xlat
sub
inc
cs
aaa
mov
xchg
out
jnp
push
or
cmp
je
nop
mov
add
dec
and
ja
mov
fcoml
jbe
repnz
movsb
outsl
jge
int
and
fisttpl
call
cmpl
lods
cmp
decl
dec
js
fisubl
jns
cmpl
jmp
mov
cmpsb
pop
jmp
ljmp
loope
aas
loop
dec
jecxz
or
pop
push
xchg
jecxz
pop
push
jge
jns
push
sub
jecxz
push
pop
sub
mov
sbb
sub
imul
inc
repnz
mov
inc
xchg
shlb
or
adcl
mov
movsl
xor
gs
push
cmpsl
fsubrs
push
mov
hlt
mov
push
loop
fsub
add
pop
push
fadds
jecxz
ret
shll
aam
aam
lret
xor
pop
dec
aaa
lock
pop
test
inc
pop
mov
cmp
leave
lds
jl
pop
test
cwtl
mov
pop
mov
sub
aas
pop
xchg
mov
xchg
cmp
push
push
sbb
jl
cmp
ja
stc
mov
ret
lcall
pop
adc
sub
mov
add
out
sbb
cltd
pop
pop
incl
insl
push
push
out
pop
push
xor
imul
dec
adc
jl
inc
add
push
push
cmc
inc
sbb
es
ljmp
in
enter
incb
push
popa
and
ja
je
dec
fcoms
mov
scas
flds
push
mov
jno
lcall
jbe
xchg
aam
lds
fcoml
pop
das
and
stos
pop
mov
add
jbe
sub
inc
cld
jb
mov
mov
and
mov
or
inc
add
leave
gs
mov
dec
pop
test
push
mov
add
mov
or
js
jbe
xor
cwtl
xor
adc
mov
inc
not
add
sub
pop
nop
outsl
jmp
mov
inc
scas
in
shrb
adc
push
in
loopne
mov
jns
faddl
push
pop
xchg
or
inc
test
pop
jnp
loope
and
dec
pop
ljmp
and
xor
clc
xchg
enterw
mov
sbb
inc
pop
pop
loop
sbb
jmp
xchg
mov
fiadds
or
sub
dec
bnd
push
xor
push
ffree
adc
push
pusha
mov
leave
adc
sti
sbb
or
shrb
add
icebp
stc
xchg
or
imul
xchg
shrb
notb
add
sub
ljmp
leave
or
pop
std
and
sbbl
roll
int
add
dec
shl
xor
daa
jmp
rolb
push
fdivrl
sub
sbb
js
mov
jno
loop
mov
jg
mov
aam
push
jle
dec
mov
lods
shlb
pop
in
roll
sub
jmp
add
loopne
lahf
in
xchg
and
cld
nop
sub
vcvtsi2sdl
sti
push
pusha
or
dec
jmp
out
push
sub
adcl
ds
pop
or
incb
cwtl
dec
jmp
lods
push
push
ds
cwtl
fs
or
sub
pusha
add
pop
mov
push
push
loop
std
in
les
add
mov
push
pop
call
sbb
aad
sbb
or
or
jns
pop
pop
add
jmp
test
js
loopne
sti
or
ds
fsub
adc
pop
dec
sub
ds
arpl
push
nop
orl
dec
stos
adc
add
lret
pusha
mov
cmp
pop
dec
andb
ret
push
hlt
mov
mov
pop
xchg
mov
fldl
pop
push
ja
add
das
cmp
inc
add
daa
bound
cmp
jae
jb
or
stos
dec
push
push
call
and
repz
mov
add
sti
xchg
dec
sbb
add
xchg
js
cwtl
arpl
es
push
outsb
dec
mov
out
jo
xor
das
add
push
or
pop
push
cmp
daa
test
out
and
xor
add
sbb
adc
jp
dec
paddw
sbb
push
test
fwait
xchg
or
sbb
and
in
xchg
iret
and
push
stc
add
pop
pop
mov
or
idivl
xchg
pmuludq
push
push
pushf
mov
nop
insl
rcr
or
movsl
adc
inc
mov
lea
imul
clc
push
sbb
mov
scas
scas
xor
and
cli
jmp
push
pop
mov
aam
inc
mov
inc
xor
rolb
jmp
shlb
pushw
ljmp
lea
in
lea
jg
stos
push
pop
test
sub
dec
outsb
mov
add
cltd
loope
addl
outsl
mov
mov
pop
add
pop
dec
mov
ds
push
pop
mov
jns
or
rolb
out
in
sub
adc
mov
jne
incb
loop
xchg
mov
lcall
stos
shl
push
mov
xor
jg
ret
sub
or
cmc
nop
push
dec
and
testb
or
lret
aam
jae
inc
imul
sahf
sbb
add
add
xor
fs
cmp
jbe
mov
test
mov
bound
or
sbbl
add
add
ds
push
add
xchg
cmp
jle
into
dec
insb
mov
add
cmp
pop
sbb
push
cmp
add
mov
cld
jmp
xor
shll
gs
jae
lds
sub
or
adc
loope
sbb
cmp
sbb
ficomps
daa
sbb
adc
inc
bound
mov
add
lock
inc
inc
push
nop
movaps
xchg
roll
dec
adc
pop
xchg
dec
daa
xchg
add
enter
cmp
or
call
cld
out
ret
jg
cmpsl
loopne
mov
popf
xchg
cwtl
or
adc
test
aas
inc
sbb
and
mov
sub
mov
scas
hlt
aas
pop
xchg
lock
add
jmp
jmp
fucom
in
add
pop
mov
imul
cmc
je
and
mov
cmpb
adc
or
pop
push
stos
push
mov
sti
mov
and
jmp
mov
loop
xchg
sti
mov
imul
push
out
dec
or
jmp
cli
mov
inc
loopne
loopne
repz
lock
mov
pop
jmp
pop
push
push
cmpxchg
sbb
mov
addb
dec
and
cmp
loop
cmp
push
dec
cmpsl
jge
data16
daa
push
sub
loop
pop
popf
sub
add
sub
inc
ja
fcomip
pop
rcr
pop
jge
jmp
movsb
in
mov
add
dec
pop
dec
xchg
fmuls
jge
mov
mov
loopne
sbb
mov
mov
inc
push
add
push
scas
je
cs
repnz
push
mov
das
xor
inc
insl
loope
xor
push
and
mov
cld
loope
sub
pop
mov
pop
jae
pop
lock
ret
dec
in
imul
dec
pop
mov
dec
pop
lods
ljmp
add
dec
jl
add
adc
jae
rolb
clc
cs
sar
pop
sbb
clc
lahf
or
test
stos
xchg
jno
aad
ret
and
and
mov
jg
add
scas
inc
mov
cmp
jno
out
mov
mov
cld
sbbb
faddl
out
das
fdivs
idivb
sub
pusha
sti
or
mov
cmpb
lods
pop
fisttpll
mov
sahf
sbbb
xor
push
imul
inc
inc
or
loopne
call
addb
dec
xor
daa
pop
loopne
push
pusha
imul
repz
inc
aad
repnz
in
movsb
adc
mov
dec
mov
in
mov
lret
pop
test
out
pop
jb
xchg
outsl
ljmp
push
loopne
jnp
inc
aam
push
popa
repnz
mov
popf
clc
xchg
mov
pop
test
lock
jbe
push
or
cmc
pusha
repnz
insb
xchg
pop
ret
jmp
sahf
mov
jge
loop
xor
hlt
add
xchg
mov
inc
dec
andl
push
testb
mov
and
stc
repnz
adc
jnp
int3
add
call
mov
xlat
int
sti
inc
adc
xor
dec
jp
xor
and
fsubrs
loop
add
shlb
and
inc
push
push
push
sub
push
scas
xorb
or
arpl
jg
mov
pop
popf
iret
push
pop
xchg
push
add
add
dec
sub
and
push
xchg
lret
dec
pop
fnstcw
dec
rcrb
xchg
jle
mov
add
lock
sub
adc
push
mov
ja
inc
icebp
fcomps
dec
xchg
dec
jo
mov
in
or
or
cmp
pop
xor
mov
add
cmp
push
lods
or
shlb
jae
xchg
inc
pop
or
jmp
and
sub
jbe
into
rol
movsb
add
pusha
jle
or
es
mov
adc
dec
xchg
sbb
mov
aas
jmp
adc
mov
icebp
sti
pop
aas
and
adc
jg
movsb
and
push
and
pop
mov
rorb
ret
or
insb
mov
and
inc
pop
in
xchg
sub
stc
adc
inc
cs
xor
mov
xlat
out
shlb
jl
or
fildll
sub
push
pusha
mov
iret
jo
mov
clc
or
xchg
jb
jp
daa
sub
idiv
pusha
mov
mov
lock
mov
pop
add
xor
ljmp
es
pop
sbb
mov
add
cwtl
xchg
jmp
ret
push
sbb
pop
ja
adc
pop
sub
jns
xchg
jb
and
and
arpl
lds
fisubs
rol
mov
mov
and
ret
push
push
mov
fidivrs
jl
jns
and
push
aam
mov
lea
popa
mov
jle
daa
je
pop
pop
fimuls
addr16
adc
and
inc
sub
or
or
or
inc
je
icebp
out
adc
adc
loop
add
mov
and
sbb
push
mov
jmp
and
test
push
mov
sbb
and
pop
fstp
sbb
jl
test
lock
add
std
sub
add
inc
push
mov
test
add
sbb
push
or
dec
add
sbb
and
sbb
xor
mov
mov
sbb
pop
lds
js
push
sub
loopne
mov
cmp
push
adc
test
cmp
aaa
mov
cld
leave
mov
or
cmp
fadd
adc
mov
addr16
jne
enter
pop
mov
je
stos
test
jecxz
cwtl
sbb
and
inc
push
xor
jg
inc
pop
adcb
mov
mov
int3
icebp
xchg
outsb
test
cmp
shll
xor
inc
pop
dec
mov
rolb
add
and
sub
jmp
sbb
les
xor
test
ret
pop
mov
ljmp
imul
cmc
adc
pop
sub
jb
repz
mov
mov
and
pop
push
or
scas
add
adc
sub
rolb
xchg
les
dec
add
mov
push
mov
pusha
cmp
push
imul
adc
mov
add
lret
mov
and
int3
addr16
mov
movsl
test
add
pop
pop
jg
jmp
repz
adc
insb
mov
push
in
add
xchg
jle
ds
cwtl
sbb
imul
push
mov
gs
pop
mov
cmp
inc
inc
mov
jmp
mov
imul
movsb
push
sub
add
bound
loope
call
or
popa
jns
cmp
push
jg
add
xchg
jmp
and
jge
add
sub
mov
sbb
push
sub
jmp
cmpb
inc
shr
dec
inc
xchg
and
mov
xchg
adc
mov
adc
sbb
scas
or
into
sub
or
ret
fstl
jl
jae
clc
test
dec
dec
lcall
mov
or
loope
mov
or
or
stc
sbb
inc
jnp
inc
ret
cmp
xchg
or
das
xor
gs
fisttps
push
xor
test
or
push
lds
or
cmp
add
add
add
lahf
add
cwtl
popa
fsubl
loope
xor
cmp
or
sbb
enter
es
aam
adc
add
xchg
add
push
add
ljmp
mov
dec
rorl
mov
test
sub
sbb
repz
or
lods
push
test
and
scas
and
or
jmp
add
xor
movsl
mov
lods
sub
fdivs
jne
adc
add
xchg
or
rcrb
xor
popf
add
sti
inc
in
in
sahf
rorl
leave
leave
adc
push
sub
cli
test
sbb
push
sbb
sarl
popf
or
jecxz
add
cld
push
int3
mov
push
adc
jnp
cmp
mov
movsb
mov
aas
add
pop
jb
adc
and
pusha
sahf
shrl
mov
mov
dec
dec
andl
adc
sbb
push
add
jne
mov
ds
sub
loope
xchg
sub
and
pop
adc
in
ljmp
loop
xchg
cmpb
mov
push
mov
sbb
jp
xor
roll
enter
mov
out
adcb
mov
jmp
xchg
inc
std
ror
pop
pushl
add
pushf
cld
call
in
pop
mov
mov
stos
adc
cmp
jne
jmp
mov
push
mov
add
inc
leave
jne
testl
jb
cmp
rolb
mov
xor
mov
xchg
loope
test
adc
jle
fstpl
rcrl
dec
rorb
add
add
sahf
mov
and
pop
sbb
repnz
xor
out
jle
sarb
add
mov
cli
or
arpl
pop
jmp
loopne
cmp
jbe
pusha
xchg
mov
lahf
jge
fmull
pop
inc
push
xchg
ja
test
sub
mov
loop
xlat
ret
into
pop
jmp
jb
or
push
add
add
xor
jp
add
mov
rcl
sbb
add
lret
arpl
push
adc
jmp
out
xchg
xor
or
ljmp
fsubs
adc
push
add
out
addb
sub
je
sub
repnz
fisttpl
loop
jb
sbb
repnz
push
xor
dec
inc
xor
lods
mov
jmp
ret
adc
shl
pop
mov
leave
push
dec
scas
push
mov
push
inc
aad
add
add
stos
pop
mov
or
pop
mov
ss
mov
adc
and
or
imul
push
decb
fs
mov
push
rorb
neg
and
addb
inc
mov
lods
pushf
pop
dec
push
outsl
push
inc
pop
imul
rorl
fidivs
sahf
clc
pop
push
add
pop
outsb
dec
pop
jge
xchg
mov
jo
rclb
mov
loop
sub
jmp
shrl
xor
lock
xchg
jbe
fldt
push
pop
dec
xchg
and
pop
xor
and
stos
xchg
lret
add
push
mov
sahf
mov
pop
jle
aas
dec
mov
fmulp
mov
cmp
sarb
pop
ror
lock
outsb
test
addr16
and
daa
push
mov
mov
xor
xchg
xor
jmp
add
cmp
jle
arpl
repz
xor
orb
adc
xor
push
push
cmpsl
mov
pop
test
or
push
mov
xchg
lahf
dec
in
xor
add
adc
shl
push
stos
xor
inc
push
push
sub
adc
jmp
iret
insb
call
sbb
shlb
xor
loopne
and
test
pop
cwtl
mov
dec
push
adc
pop
and
cmp
scas
je
pop
movsb
adc
or
dec
addr16
outsl
lods
fidivrl
xor
sub
mov
push
ficoms
add
sarl
gs
cmp
cld
ret
sub
sub
adc
xchg
gs
and
pop
xchg
jbe
jb
xlat
andb
dec
jmp
inc
jno
daa
adc
popa
or
add
jmp
pop
or
cmc
dec
jae
mov
jb
das
dec
mov
pop
lock
cld
push
xchg
push
push
fidivl
movsb
jmp
out
shlb
cmpsb
out
rorb
sbb
fs
mov
popa
mov
in
sbb
sub
movsb
jnp
jecxz
lret
pop
add
push
add
xchg
ss
das
movsl
loop
or
inc
out
dec
ljmp
jge
dec
loopne
push
shlb
pop
mov
loop
aas
and
push
pop
cmp
xor
push
outsl
sbb
in
sub
xor
ret
push
adc
or
xor
lods
or
fcomps
xlat
cld
icebp
mov
pop
xchg
xor
pop
mov
mov
leave
xlat
and
mov
aam
iret
loop
adc
add
add
xor
mov
shll
mov
cwtl
int3
rorl
xor
jne
push
push
push
ds
mov
ja
pop
jg
xchg
test
dec
mov
push
jle
mov
xor
xor
or
push
loopne
cmp
ja
in
cld
test
jp
or
loope
sbb
pushf
adc
push
daa
rolb
addr16
xor
add
stos
cs
shll
and
jmp
test
inc
sti
mov
outsl
add
inc
dec
lds
mov
mov
iret
in
xor
ret
push
push
pop
or
aaa
jbe
fiadds
ds
adc
dec
pminsw
adc
jecxz
loopne
cmp
inc
lcall
inc
addr16
in
ret
jne
in
push
mov
loopne
mov
rep
cmp
dec
neg
pushl
sub
pop
test
mov
mov
cmp
jo
xor
cmpb
mov
jno
add
or
jmp
stc
push
cmpsl
divl
cld
in
or
aas
fistps
rolb
fcoml
leave
jecxz
js
or
ret
shr
fistps
cwtl
sbb
dec
cmpsb
and
jbe
ljmp
mov
push
jmp
adcb
jge
and
pusha
rclb
lock
lcall
push
lock
add
hlt
sbb
out
testb
inc
das
testl
rorb
stc
cmp
hlt
lds
lea
pop
xchg
jecxz
push
fwait
add
nop
inc
gs
and
and
cmp
imul
mov
iret
adc
notb
push
and
rcrl
pop
dec
movsl
or
xchg
jl
int
rcl
inc
mov
adc
lret
pushf
roll
dec
sub
sub
xor
jmp
out
int3
xor
aam
das
lods
jge
orb
jecxz
cmp
inc
mov
and
jl
pop
lahf
push
push
push
mov
push
out
and
repz
xchg
jae
push
jge
add
cmc
adc
pusha
cmc
fadds
pop
addr16
icebp
add
mov
inc
push
xor
dec
dec
push
or
data16
hlt
sub
mov
dec
lods
push
inc
subl
or
dec
test
dec
cmp
mov
stc
dec
dec
mov
dec
test
mov
mov
add
outsl
adc
aad
cld
filds
sbb
inc
mov
dec
sbb
pop
pop
or
ficompl
das
jp
pop
out
lret
jmp
jle
fstpl
test
mov
aaa
push
mov
imul
out
mov
pop
scas
jns
jnp
sbb
dec
idivb
mov
subb
inc
sub
add
mov
inc
dec
mov
test
xchg
push
inc
jmp
hlt
xchg
fs
lock
in
pop
pop
cs
adc
jmp
sub
pushf
bound
and
mov
or
cmpsb
xor
loop
enter
jmp
xchg
sbb
mov
pop
lret
in
sbbb
bswap
repz
fnsave
ret
lods
ljmp
and
and
jmp
aaa
cwtl
in
inc
lds
ljmp
add
cltd
mov
addr16
notl
mov
rolb
inc
in
out
aam
or
pop
lock
rolb
mov
sub
jmp
jecxz
adc
pop
jmp
inc
fs
push
or
push
pop
sub
ja
in
xchg
jge
jmp
cmp
cs
xchg
loopne
shl
add
or
into
fiaddl
imul
fidivs
lods
sub
xchg
bound
cmp
pop
repnz
fmuls
pop
push
jge
push
push
pop
faddl
push
shll
sbb
xor
pop
jmp
cmp
pop
dec
push
jle
xor
sahf
xchg
push
cmp
unpckhps
test
les
push
push
loopne
roll
push
inc
push
dec
sub
clc
xor
rcrb
fisubs
imulb
sub
push
adc
mov
dec
mov
add
mov
and
jns
mov
mov
das
push
cwtl
push
sub
das
sub
fadd
jle
sbb
mov
iret
and
pusha
hlt
test
aam
loopne
sarl
jmp
scas
dec
fsubrs
mov
pop
xor
inc
ret
aad
mov
icebp
pop
inc
bound
mov
arpl
adc
sbb
leave
dec
pop
or
push
add
cmp
push
mov
push
push
mov
pop
dec
ds
mov
lds
les
dec
push
add
lret
sub
or
jmp
cmc
sbb
cmc
ret
sub
into
imul
xor
in
pusha
aad
shr
push
mov
mov
jecxz
jb
cmp
fistpl
lods
fistps
inc
daa
or
inc
add
inc
rclb
push
out
cmp
inc
sbb
adc
push
or
mov
int
mov
push
mov
mov
push
cmp
push
cmp
inc
in
nop
jnp
call
pop
pop
test
das
xchg
pop
pop
popa
mov
push
cmpsb
inc
cmp
in
push
pop
push
xor
lds
addr16
in
scas
mov
fsub
mov
cmp
adc
mov
fmul
jne
sbb
or
mov
std
push
sub
lcall
subb
pop
in
lods
jmp
push
scas
jecxz
ror
push
lds
jge
orl
push
pop
stc
mov
jle
out
mov
adc
or
mov
pop
mov
pop
mov
and
loop
popa
and
push
pop
in
sub
out
jg
addb
pop
pop
mov
adcb
mov
xor
jb
push
inc
add
std
or
add
jno
push
sbb
popf
jns
lahf
and
or
add
in
mov
jbe
int3
lret
jmp
rcll
shl
and
mov
loope
pop
push
orb
jl
inc
jmp
mov
mov
into
add
jmp
push
or
jo
xchg
out
mov
xchg
sbb
mov
cmpsl
aas
cmpsb
pop
pushf
aad
mov
stos
orl
push
sub
inc
jmp
xchg
mov
push
loope
cld
push
push
rolb
imul
mov
sbb
pop
push
xor
dec
and
div
sbb
jbe
jl
fiadds
icebp
into
fstl
nop
and
fwait
add
adc
cmp
fists
push
pop
mov
dec
push
jl
xor
xor
or
xor
inc
jmp
mov
jmp
cli
add
mov
jle
add
pop
ljmp
inc
cmp
addb
add
outsb
jo
add
mov
js
adcl
and
add
roll
enter
dec
out
cmp
push
loop
xchg
pop
push
and
adc
cmp
aad
stos
or
shll
sub
xchg
jo
adc
repnz
adc
or
into
xchg
cmp
jo
movsl
mov
icebp
repnz
sbbb
jmp
insb
xlat
push
xor
pop
xchg
and
mov
dec
cmpsl
std
xor
enter
icebp
js
fisubrs
cmp
xchg
mov
scas
mov
push
mov
std
lds
gs
inc
jo
cwtl
cli
adc
adc
shlb
out
add
in
xor
dec
dec
jmp
adc
sub
shrl
xor
add
es
add
jge
imul
gs
es
add
push
mov
xlat
mov
push
test
popf
inc
add
pop
sarl
mov
rcl
scas
push
push
lahf
add
jl
push
ja
or
inc
popa
push
dec
cwtl
popa
rorl
add
sub
enter
xchg
insb
pop
mov
xchg
or
loop
fidivs
mov
dec
out
adc
fstps
int3
enter
lahf
sbb
jnp
dec
and
ret
or
dec
pop
xchg
lods
push
lahf
xchg
hlt
mov
incl
or
fsubp
sbb
nop
push
aad
xor
cmpps
in
jno
mov
into
arpl
mov
push
scas
sub
jmp
cmovge
lds
jmp
leave
adc
xor
mov
imull
std
jmp
out
inc
dec
mov
inc
enter
in
jp
push
and
jne
add
fisubrs
shl
jl
test
push
xchg
push
inc
xchg
lcall
add
shl
xchg
mov
mov
dec
in
ljmp
in
or
aas
sbb
in
pop
lret
call
std
inc
pop
ja
lcall
pop
into
and
xchg
es
sti
push
daa
jmp
fcoml
add
outsb
shlb
dec
pop
nop
push
push
sub
aas
daa
outsb
push
insb
cli
fdivl
sti
sub
jns
push
cmp
bound
bnd
scas
pop
jl
imul
enter
xchg
or
cld
inc
pop
call
shl
into
xchg
icebp
push
or
adc
mov
or
sbb
out
xchg
adc
cwtl
andb
scas
and
mov
push
jecxz
aaa
jmp
jae
sub
push
sbb
mov
add
lret
rolb
daa
xor
adc
or
add
pop
cli
fcoml
jmp
outsl
dec
aaa
mov
lret
test
mov
int3
orb
sarb
mov
pop
and
cmp
call
push
sub
sbb
jmp
scas
cmp
test
inc
and
sub
adc
pop
test
jne
mov
ljmp
pop
mov
cmp
loopne
jge
les
adc
inc
fs
dec
pop
out
fnsave
test
std
in
out
lret
lods
sub
dec
ret
leave
pop
ss
add
add
adc
and
inc
add
push
adcl
int
cld
add
clc
leave
add
or
add
lret
mov
push
cmp
dec
cmpsl
loop
or
dec
fldl
push
mov
xchg
sub
rcr
mov
sub
xchg
leave
jge
scas
mov
test
inc
jnp
push
pop
adc
pop
cli
sub
jb
add
sbb
stos
lods
push
pop
xor
add
jecxz
icebp
adc
adcl
gs
sub
mov
movsl
shr
bnd
mov
xchg
or
test
cmp
mull
xchg
sti
push
hlt
popa
test
or
adc
loopne
repnz
adc
lahf
lods
je
stc
mov
push
je
jle
dec
sbb
add
xor
pop
cmc
ret
xlat
ret
into
pop
adc
or
xor
push
or
and
inc
add
add
dec
push
push
adc
cmp
lds
sbb
or
call
mov
xor
sub
xchg
adcb
int3
pop
lods
stos
push
test
mov
rcll
mov
incb
dec
mov
andb
testb
sub
dec
and
pop
lea
jmp
incl
les
outsb
pop
fs
sbb
leave
lods
dec
add
rorl
scas
pop
add
jle
mov
out
sbb
aam
decb
dec
cld
stos
mul
sub
addr16
lods
out
popa
cmpsb
xchg
rorl
ljmp
inc
sarb
add
jle
ret
push
sbb
pop
pop
xor
orb
push
jle
call
jbe
and
jno
sub
jp
xor
test
lret
mov
jmp
movsl
sti
fimuls
mov
inc
jbe
lods
pop
pop
jp
push
sbb
cli
mov
and
jl
loope
push
das
daa
jg
push
mov
dec
es
pop
or
je
adc
push
cmp
jle
data16
dec
fisttps
mov
jae
pop
push
or
mov
sub
pop
xlat
aad
jno
movsl
faddl
loopne
jns
mov
mov
pop
push
push
or
pop
pop
pusha
ret
fstl
cmpsl
rcrb
xor
stos
mov
xchg
pop
insb
sub
je
daa
lock
adc
jo
cmc
dec
fldcw
mov
adc
ja
mov
mov
lcall
jg
sti
jne
and
stos
inc
push
movsl
sub
pusha
mov
sbb
loop
xor
ja
in
sbb
and
ljmp
test
jl
jle
clc
sub
pop
call
mov
dec
add
push
popl
pop
mov
jecxz
inc
xor
jmp
adc
cltd
and
sbb
pop
xchg
nop
mov
mov
div
cmp
stos
arpl
push
inc
and
mov
xchg
jle
mov
js
fiaddl
fisubs
cmpb
dec
lret
sti
stos
fdivs
out
pop
insb
mov
es
push
gs
test
pop
pop
scas
mov
pop
fsts
jmp
push
pop
push
inc
cmp
add
pop
inc
xor
xchg
push
adc
in
jle
dec
push
or
add
shr
sub
pop
int
add
jmp
push
imul
pop
push
mov
push
popa
cmp
lcall
add
pop
int
int3
fisubl
cli
xchg
cltd
dec
push
jp
sub
xor
popf
sbb
cmp
inc
mov
fsubrs
push
push
into
push
push
jmp
mov
scas
push
cld
cld
add
jg
int
pop
mov
ljmp
pop
stos
add
popa
push
xor
sub
adc
cmp
lods
repnz
jne
stos
add
inc
xrelease
pop
sub
mov
aaa
neg
add
lret
sub
or
hlt
mov
mov
pusha
jl
cwtl
and
xchg
cmp
jns
adc
pop
das
or
jb
insb
add
sahf
loope
test
flds
pop
sbb
xchg
movl
jmp
pop
or
dec
mov
rol
push
divl
xor
rorb
cmc
push
xlat
adcb
bound
sbb
xchg
loope
add
mov
int3
iret
into
cwtl
mov
jb
dec
mov
mov
pop
adc
inc
fbld
cmpsl
push
loopne
and
dec
xchg
outsl
push
push
loope
pop
and
push
ret
add
mov
xor
jmp
or
adc
repz
in
rcll
gs
mov
addr16
sbb
movsb
add
mov
dec
mov
sub
imul
int3
ficoms
rolb
pop
sbb
pop
adc
push
cmp
pop
inc
fldl
pop
xchg
aam
cmp
lahf
insl
inc
daa
push
inc
cmp
dec
into
mov
sub
popw
sub
mov
repz
les
repz
xchg
neg
mov
xor
push
pop
stos
int
insl
nop
loope
nop
jne
push
sub
pop
fwait
push
rclb
pop
aad
imul
push
pop
jp
hlt
int
ja
pop
insl
in
mov
add
fstpl
in
clc
iret
or
xchg
adc
int3
adc
ljmpw
xorb
hlt
cmp
xor
jecxz
out
cmp
pop
and
xchg
pop
dec
fucomip
or
mov
sahf
adc
repnz
std
push
pop
ret
call
cmp
in
pop
out
cmp
cmpsl
and
sbb
add
push
pop
insl
ljmp
add
inc
sub
lahf
add
push
push
sub
push
pop
sbbl
cs
add
pushl
add
repz
subb
push
out
mov
repz
mov
loop
xchg
xchg
and
cmp
dec
lock
pop
push
or
or
sub
jle
push
pop
mov
shll
test
daa
push
jecxz
test
sub
ja
jo
and
fcmovb
add
jmp
loope
add
jb
mov
mov
sub
inc
cmpsb
sub
push
jb
jbe
mov
loopne
mov
pop
and
inc
or
push
enter
xchg
insl
add
jmp
roll
out
mov
nop
clc
sub
push
in
setnp
jnp
adc
cmp
les
cmp
negb
jge
mov
jg
ret
or
or
pop
mov
mov
sub
std
push
cmp
fimull
icebp
adc
ret
pop
jae
roll
xchg
cmp
sti
xchg
loopne
inc
xlat
sbb
lods
mov
mov
add
mov
das
jl
sub
pop
mov
pop
sbb
popf
push
lret
int3
fldl2t
sub
dec
sub
fisubrs
popa
pop
add
push
icebp
out
popf
mov
outsb
ja
lock
xchg
pop
mov
mov
dec
fldcw
mov
add
xor
sub
inc
cmp
imul
mov
je
fsubrs
aad
rcll
adc
cmp
js
or
popl
push
lock
push
popa
xor
xchg
add
pop
jmp
lret
push
jb
and
and
jmp
cmpsl
adc
out
test
jbe
js
add
or
cmp
xor
jmp
lahf
push
pop
xor
mov
ret
push
mov
jmp
xchg
bnd
cmp
inc
popa
imul
fdivrs
sub
repnz
aad
push
xchg
repnz
mov
xor
mov
js
mov
shlb
pop
ret
add
sub
in
jl
pop
and
push
jmp
ds
push
push
nop
cwtl
mov
outsl
movsl
sub
mov
popf
jl
icebp
jmp
or
mov
daa
out
and
addr16
test
repnz
lea
inc
lds
mov
xchg
js
dec
xlat
pop
out
outsb
sub
subb
xchg
sbb
es
mov
pop
push
cld
inc
lret
pushf
inc
inc
pop
inc
cli
int
add
ret
ja
in
sarb
mov
mov
clc
or
aas
add
loop
or
jge
push
mov
sub
push
push
lock
xchg
aas
pop
dec
jg
xor
cs
pop
stos
cmp
jmp
lret
inc
jne
insb
daa
xor
pop
push
pop
push
or
mov
sbb
cld
rorl
mov
jno
jle
and
jae
aaa
pop
and
inc
out
add
loop
hlt
adc
push
xchg
das
pop
decl
cli
sub
loope
out
pop
in
insl
mov
je,pn
inc
out
pop
and
cmp
add
outsb
filds
sbb
dec
pop
ret
incl
mov
mov
inc
push
mov
push
movsb
jb
les
or
incb
and
add
adc
xlat
xchg
test
mov
adc
mov
sub
cli
jg
sarb
pop
out
mov
jmp
add
mov
jle
add
xchg
mov
pop
inc
fdivl
loope
loop
pop
jo
or
out
and
in
addr16
dec
mov
repz
mov
jmp
test
cmovg
popa
out
or
jno
or
pop
cld
nop
pop
add
and
xor
push
mov
sbb
or
sbb
sub
sub
lds
mov
push
inc
or
sub
shll
mov
jg
ret
or
dec
add
pusha
jo
int
pop
fdivl
pop
mov
push
xor
push
pop
dec
cmp
pop
test
mov
push
add
movsb
or
je
orb
in
jmp
mov
and
add
xchg
push
inc
push
sub
lods
xchg
push
or
jmp
fsts
rclb
mov
out
ret
mov
in
or
loope
repnz
inc
js
jmp
pop
jns
ja
inc
in
js
add
pop
inc
push
mov
js
in
cmpsl
popl
shrl
pop
cmp
inc
rclb
add
cltd
add
dec
sbb
inc
mov
pusha
push
neg
mov
jge
sbb
lods
push
pop
add
xchg
divb
stc
daa
jg
push
xorb
xor
adcb
push
dec
gs
nopl
pop
das
call
and
sub
fsubr
cmpsb
js
push
xor
lret
cmp
and
sbb
test
adc
in
jp
sub
pushf
addl
lds
jbe
insl
addl
jbe
arpl
test
or
pop
decl
mov
int
pop
fldl
andb
mov
lret
ret
and
ret
dec
aaa
mov
pop
cmpb
aam
arpl
ljmp
shlb
repz
pushf
push
lahf
cmp
dec
xchg
cmpsl
sbb
idivb
jmp
sbbb
and
cmp
xor
jnp
pop
sub
and
mov
add
in
movsl
jnp
add
fmull
lods
shll
mov
push
movb
push
sbb
stc
xlat
cwtl
add
dec
push
movsb
and
or
xor
pop
daa
int3
js
arpl
push
mov
sub
push
leave
add
js
dec
mov
cli
arpl
lods
jg
jno
adc
push
or
fidivrl
ja
imul
jne
shrl
xor
mov
add
xor
inc
or
loopne
add
aas
shl
dec
lahf
dec
mov
pop
push
enter
mov
jmp
add
lret
adc
pop
xchg
inc
mov
push
mov
pop
mov
mov
dec
xor
jmp
das
popa
push
out
pop
data16
push
jmp
ret
and
outsb
jle
stc
mov
sbbb
jmp
shlb
out
push
bound
movsb
addl
pop
orb
cltd
sub
inc
inc
jle
fcomps
lahf
mov
pop
out
cmp
pop
enter
js
fistpll
sub
mov
jmp
and
inc
repnz
pusha
inc
inc
inc
adc
mov
ficomps
or
shrl
cli
inc
pop
push
aam
rcrb
imul
std
dec
ret
out
js
fcmovbe
pop
popf
mov
test
jns
jl
push
mov
in
dec
ficoms
cli
add
push
mov
arpl
add
dec
mov
mov
push
xor
cmpb
js
cwtl
inc
mov
add
push
jp
add
add
mov
and
scas
push
and
adc
in
xchg
push
cwtl
add
hlt
or
dec
aad
cmp
sub
pop
fmulp
lds
dec
rorb
iret
pop
into
cmc
sbb
add
aam
push
pop
xchg
enter
or
cmpsb
push
test
jno
push
in
pop
dec
xchg
incl
pop
jp
out
sub
mov
push
out
subb
cld
push
xorl
clc
add
ja
or
inc
push
mov
cli
inc
pop
sub
sbbb
add
sub
dec
insb
push
and
sbb
or
push
pop
jmp
mov
sub
xor
xchg
in
adc
jnp
bound
fwait
dec
sub
out
xor
sbb
sub
bound
or
cs
leave
ljmp
push
xor
out
inc
movsl
and
jmp
add
test
cmc
mov
scas
in
adc
out
lods
loope
or
push
pop
pop
sub
std
arpl
pop
out
cld
andps
sbb
leave
push
orl
pop
jmp
push
pop
mov
sub
out
mov
xor
pop
xchg
sti
or
sbb
mov
fs
mov
outsl
pop
loop
sbb
adc
cltd
call
lds
inc
xchg
jle
or
adc
lret
or
and
nop
mov
into
add
incb
sub
outsb
pop
jg
mov
cmp
mov
push
pop
out
arpl
fstpt
jbe
and
mov
push
adc
movsb
inc
adc
mov
test
lahf
xchg
mov
into
mov
jne
xor
pop
ss
jo
xor
inc
inc
imul
in
mov
loope
mov
jecxz
add
xchg
jno
fcomi
mov
fmuls
sub
jmp
addb
jmp
cltd
mov
mov
in
pop
push
push
ror
lds
mov
dec
dec
inc
sub
dec
mov
bound
pusha
and
xchg
fs
daa
mov
adc
or
or
ljmp
push
jecxz
stos
mov
das
outsl
add
push
jo
inc
popa
pop
adc
mov
rol
in
icebp
decl
lahf
icebp
stc
imul
loop
push
jle
inc
inc
xchg
clc
subb
add
pop
pop
cs
addb
ss
dec
dec
cmp
push
sub
clc
or
adc
xor
pushf
rolb
das
push
dec
cmpsl
sbb
mov
push
mov
fcoms
sub
je
or
int3
push
push
mov
lea
add
xor
add
std
add
les
add
dec
pushf
sub
lds
and
out
cmc
js
loopne
movsl
mov
xchg
repz
out
and
jbe
pop
push
not
mov
rol
aad
add
xor
or
fadds
sub
lock
jle
push
push
push
push
jmp
mov
jle
addl
int
lods
xchg
ljmp
push
pop
push
pop
stc
add
push
xor
orb
inc
jmp
xchg
ret
je
and
add
sub
mov
rclb
mov
or
addb
xor
das
inc
adc
es
mov
sbb
divb
pop
push
jmp
fs
ljmp
lds
in
outsb
add
xor
out
jecxz
fnstenv
into
in
add
cmp
jmp
xor
nop
aaa
add
rcll
filds
add
sbb
shrb
addb
jno
push
mov
lahf
das
ret
pop
sub
jecxz
loop
pop
and
sti
int3
xchg
xchg
jbe
pop
andl
mov
inc
cmc
std
push
mov
push
cmp
xor
add
hlt
sub
nop
ret
lret
dec
pusha
dec
mov
jmp
xchg
fdivr
cwtl
dec
fwait
inc
jbe
outsl
push
push
sbbb
shlb
add
pop
insb
aaa
lret
xor
testb
cmp
cmp
push
sbb
add
icebp
add
jb
and
sub
add
jmp
fmulp
jle
sub
arpl
push
cmp
adc
or
xchg
sub
push
adc
xchg
add
je
dec
ss
stos
aam
pop
or
pop
pop
mov
sub
lods
push
and
adc
lar
outsl
mov
add
add
fildl
sub
ror
sbb
mov
nop
push
sti
inc
dec
adc
les
ret
adcl
jmp
lods
add
sub
daa
sub
fnstsw
dec
clc
stos
je
shll
push
or
adc
pop
mov
outsl
adc
add
inc
or
jmp
add
not
add
push
repnz
std
lcall
mov
mov
insb
mov
cmp
adc
add
or
push
and
mov
ret
sub
pop
call
mov
or
call
inc
dec
mov
je
adcb
cmp
hlt
sub
pop
inc
mov
cmp
lahf
rolb
push
incb
shll
orb
xlat
push
xchg
out
mov
dec
inc
mov
mov
popf
inc
xor
push
mov
push
xlat
jo
adc
pop
or
nop
sub
mov
sti
xor
pop
adc
and
jge
mov
cmpsl
jmp
mov
test
imul
mov
push
mov
sbb
push
or
push
pop
jo
push
or
xlat
stc
outsl
cmp
int
jge
gs
push
in
push
cmp
xchg
lods
bound
test
inc
lret
hlt
shrb
or
push
push
adc
sub
jmp
addr16
push
push
mov
push
pop
add
sti
out
push
cld
jle
bound
xchg
daa
stos
test
fdivrs
cmp
std
jo
mov
in
and
xor
add
lods
adc
fnstenv
dec
sbb
jnp
mov
mov
clc
push
mov
push
jne
lds
enter
jecxz
add
lods
fsubl
loopne
jp
or
mov
push
add
adcl
stc
addb
fucomp
shll
sub
mov
xor
add
imul
jmp
mov
jo
sbb
jbe
js
cmpb
lret
dec
fcoms
cld
lds
xchg
sbb
dec
cli
pop
dec
out
mov
dec
push
inc
icebp
or
test
mov
stc
mov
mov
in
cmpsb
scas
mov
cli
popf
cmpsb
mov
inc
je
lock
and
pop
lahf
inc
lods
icebp
adc
cmp
adc
cmpb
or
pop
cmpsb
adc
lock
mov
int3
in
std
loopne
fs
mov
sbb
adc
je
cmpsb
sub
loope
into
es
pushf
mov
dec
add
xor
stos
dec
out
popa
mov
aad
cs
lret
dec
sub
sub
add
sti
shl
push
sbb
lods
push
imul
popa
dec
sub
and
rorl
movsb
sub
icebp
std
icebp
sub
add
rcll
shlb
jae
xchg
and
inc
sub
pop
test
jnp
repnz
and
lock
stc
dec
inc
push
push
pop
loope
and
jle
loopne
lret
sbb
jg
cld
push
pop
das
mov
test
sti
faddl
dec
sti
out
pop
push
dec
arpl
mov
push
cmpsb
mov
sbb
xorl
mov
add
cmp
adc
xor
and
mov
sub
bound
ret
add
ds
adc
into
call
adc
xchg
into
jmp
mov
push
mov
aas
jbe
lahf
lods
push
adc
adc
jmp
lret
pop
dec
call
fwait
mov
push
xor
jle
pushf
mov
push
andb
sbb
mov
repnz
add
push
mov
mov
and
test
sbb
cs
push
sub
or
jp
jo
stos
push
push
mov
sbb
jo
rcrl
or
jbe
jmp
imul
push
lahf
imul
outsl
add
push
or
fsubrs
mov
pop
inc
xor
js
orb
jno
repz
add
test
out
bound
pop
add
add
test
scas
test
jge
cmp
add
add
dec
lcall
jp
jg
sti
jle
outsb
imul
jbe
sbb
xor
rclb
pushf
dec
inc
das
pop
mov
cmp
in
or
rorl
pop
mov
pop
jge
mov
mov
add
aad
fbstp
mov
aaa
imull
jmp
mov
add
repnz
sahf
fnsave
das
mov
mov
rclb
mov
xchg
fucomi
aam
dec
hlt
mov
dec
add
test
lods
mov
inc
sub
dec
dec
in
fsubp
scas
dec
aaa
nop
cmpsb
iret
lock
push
adc
or
add
pop
push
lahf
pop
mov
inc
pop
mov
out
xorb
outsb
push
push
sub
mov
xor
sub
daa
push
mov
jbe
rclb
push
out
or
ror
daa
pop
add
std
lea
or
pop
mov
add
popa
leave
sub
xchg
filds
cli
cmpsl
or
push
pusha
movsb
mul
sbb
xor
dec
hlt
lock
mov
negl
scas
add
add
or
mov
call
push
pushf
jp
inc
and
movsb
sub
jmp
mov
ja
fistl
repnz
push
popa
add
arpl
jg
jmp
jg
dec
lahf
icebp
in
mov
push
in
inc
sub
in
int3
in
jno
add
push
and
pop
pop
cmp
mov
loopne
subb
cmp
mov
sysexit
imul
ja
sbb
addr16
fisttps
dec
jmp
mov
dec
pop
xchg
pop
xchg
dec
cmp
loope
pop
ds
jl
sub
pop
aas
stc
sbb
inc
sub
jno
and
pop
xor
hlt
or
mov
addps
je
jmp
cld
mov
lcall
and
adcl
fs
mov
and
imul
jbe
xchg
xchg
add
loope
loope
pop
sbb
cltd
pop
es
inc
out
out
std
movsl
sub
lahf
pusha
or
popa
sbb
inc
dec
and
movl
or
pop
pop
dec
adcl
aaa
adc
lsl
xor
cmp
or
jg
push
dec
cmp
shl
jmp
xchg
cmp
xor
addr16
testl
dec
xchg
sub
fdivp
inc
sbb
fistps
sbb
or
and
movsb
inc
addl
push
mov
rcll
mov
push
inc
dec
idivl
lods
cld
jno
push
icebp
add
xchg
ret
add
cld
mov
jb
pop
add
add
insl
xor
pop
pop
sti
dec
dec
fs
outsb
les
mov
repz
sub
rcr
jecxz
out
test
insl
inc
loopne
and
adc
call
sbb
push
data16
sub
cwtl
pop
or
cmp
jecxz
and
xchg
push
jb
xor
and
pusha
cwtl
push
mov
loopne
dec
clc
lret
push
aaa
add
or
xor
clc
or
js
dec
inc
or
push
add
jg
push
add
or
mov
sub
pop
and
ljmp
mov
in
out
adc
add
jl
invd
mov
jmp
into
or
repnz
mov
jl
add
push
imul
popf
pop
add
sub
dec
xor
add
test
movsl
jnp
je
xor
insb
addl
cs
mov
or
cmp
push
dec
sbb
mov
rclb
rolb
jmp
fdivl
mov
gs
mov
dec
in
pop
dec
faddl
sub
cmp
sub
les
push
push
jne
lods
mov
fidivs
imul
nop
sub
pop
xchg
push
mov
jmp
xchg
testb
xor
push
shr
shrb
orb
add
repz
ljmp
jg
ret
push
jo
rcrl
xchg
pop
xchg
aaa
xchg
sub
bswap
std
pop
popaw
into
push
jmp
mov
jmp
rcrl
mov
adc
fnstenv
add
pop
add
fistps
and
aas
imul
call
fmul
mov
fucompp
xor
xchg
mov
adc
sub
pop
push
inc
add
mov
mov
mov
test
sarl
push
mov
hlt
je
push
mov
push
inc
add
sbb
or
adc
add
scas
sub
dec
scas
xor
pushf
aas
pushf
cmp
scas
or
jnp
push
xor
lods
outsl
xchg
out
mov
cmp
cwtl
mov
movsb
xor
rcrl
add
add
jmp
or
xor
mov
cmpsl
jecxz
fmulp
dec
ret
stc
add
in
ret
cmp
xchg
or
push
jmp
outsl
adc
or
ja
add
push
mov
shrl
adc
and
orb
leave
and
movsb
out
and
aam
sbb
shr
jbe
js
inc
jbe
pop
jecxz
pop
loope
iret
loope
xchg
andl
movsb
les
xchg
outsl
popf
icebp
jl
pop
jns
loope
inc
int3
ret
adc
rcrl
addb
dec
fstl
loope
and
or
daa
cli
mov
jg
sub
mov
xchg
rorl
sbb
out
std
mov
add
adc
pop
sub
jne
clc
lcall
inc
or
rcrl
add
sti
pop
lea
ljmp
inc
mov
int
fldenv
fmulp
ss
je
aad
mov
mov
mov
cwtl
cmp
es
add
add
and
je
mov
add
in
sbb
add
mov
pop
subb
jnp
adc
test
sub
xchg
sahf
jp
dec
or
cmp
pop
jmp
xor
in
sub
jg
orl
xchg
dec
stc
push
inc
or
or
xor
shl
push
push
xor
sbb
mov
popf
nop
push
rcrl
addb
fildll
add
outsl
lods
lret
pop
repnz
mov
mov
xor
push
push
inc
add
aas
outsl
insb
pop
inc
adc
mov
mov
mov
in
or
stos
insl
add
enter
and
aaa
add
mov
jp
sub
xchg
in
xchg
adc
in
ficompl
inc
xchg
std
pop
push
push
push
mov
jmp
push
sub
push
daa
arpl
add
sub
aad
arpl
cld
pusha
and
mov
or
sub
test
xchg
sub
xor
pop
imul
xchg
shrl
mov
xor
xor
cmp
loope
pop
int
jg
inc
push
outsb
mov
push
push
push
sbbb
cmp
mov
sti
push
push
stos
lock
stos
mov
mov
inc
dec
fiaddl
testb
inc
loop
stc
mov
dec
repz
mov
lods
mov
call
jecxz
adc
xor
lods
pop
lret
add
jo
pop
sub
pop
nop
test
xor
adc
and
dec
pop
mov
pop
bound
and
xorl
xchg
cmp
pop
jne
aad
dec
movsl
pop
mov
inc
cld
cld
lds
xor
jae
fdivrs
roll
loope
inc
or
push
lahf
sbb
pop
pop
sti
and
add
std
in
mov
push
mov
popa
sub
jp
aas
cs
cmp
push
cmp
adc
outsl
negl
push
add
or
or
pop
push
mov
push
push
stos
push
add
add
test
add
lock
nop
push
push
inc
jns
inc
push
lock
das
jmp
xor
mov
jl
push
add
xchg
imul
rcrl
outsl
in
out
mov
jg
or
inc
or
push
rorb
dec
jmp
add
pop
mov
sub
adc
cwtl
aaa
or
popf
fneni(8087
movb
les
rcll
add
pop
push
push
sbbl
inc
nop
push
orb
xor
lcall
xlat
mov
pusha
rcrb
or
dec
jmp
shl
cmp
adc
pop
mov
xlat
inc
add
movsb
xchg
testl
ret
js
or
ds
add
push
add
xor
mov
ret
cmp
adc
push
rorl
popa
lods
ljmp
out
sbb
lds
cmc
les
jbe
icebp
out
pushf
sub
out
sbb
inc
and
pop
adc
pop
scas
dec
mov
add
push
push
idiv
xchg
loop
push
inc
fsubs
mov
pop
fprem
scas
add
aas
add
mov
jae
les
repnz
or
or
mov
mov
jp
or
cli
jns
push
ds
sub
jmp
dec
jg
test
add
inc
mov
dec
mov
dec
mov
std
add
mul
sub
adc
add
add
xchg
pusha
and
add
pop
adc
call
imul
dec
push
sbb
ljmp
dec
outsb
or
shrl
test
test
popa
cmp
pop
je
popa
cltd
not
push
movsl
jecxz
pop
dec
pop
sub
jae
dec
sub
syscall
push
xlat
scas
leave
or
mov
rolb
stos
hlt
lds
or
mov
insb
leave
jae
add
das
sbb
mov
sti
push
lock
lock
lods
push
lock
cwtl
or
fldenv
rol
loope
nop
lcall
mov
mov
stc
in
sti
xor
ret
shl
lods
adc
lret
cvttps2pi
loop
sbb
ja
mov
lock
in
fs
dec
in
nop
or
les
pushf
push
jns
pop
scas
push
cmp
add
pop
and
lock
push
pop
lds
jae
mov
and
jmp
subb
insb
push
mov
jmp
inc
shll
jge
imul
add
test
or
imul
add
jmp
hlt
push
push
inc
popa
das
or
je
jmp
sbbb
inc
sub
push
mov
pop
mov
incl
and
push
push
cmp
push
sbb
test
out
jge
jle
and
sub
add
adcb
sbb
sbb
or
xchg
mov
mov
mov
out
out
push
cmc
jge
andb
xor
push
pop
adc
push
xor
or
mov
push
add
xor
mov
push
dec
pop
push
fstps
push
add
mov
cmc
fmulp
add
out
or
xorb
in
and
mov
pop
dec
div
lahf
and
jmp
push
push
into
xchg
dec
pop
call
cmp
lods
sub
and
push
mov
nop
xchg
add
dec
add
aaa
cmc
mov
push
pop
sbb
or
mov
out
jmp
in
jo
stc
movsl
xor
in
inc
inc
or
fxch
jmp
call
mov
imul
pop
push
jmp
push
aaa
test
dec
dec
cmpsb
in
jg
jge
dec
addr16
fimull
sbbb
jmp
mov
stos
push
les
leave
cmp
sti
sub
sub
lret
mov
pop
pop
jle
sub
lods
jle
inc
addr16
jb
nop
outsb
cmp
cmpsb
push
mov
push
cmpsl
shll
add
push
pop
addl
pop
outsb
fs
add
xor
ret
add
cmpsl
pop
mov
out
clc
ffreep
outsl
inc
or
cs
lea
sub
hlt
je
mov
lea
or
pusha
xor
jno
inc
mov
dec
andb
pop
into
and
mov
shlb
and
out
jmp
or
pop
push
jmp
pop
xlat
dec
dec
adc
sbb
sub
and
orl
jl
jg
addb
dec
xor
mov
addr16
mov
xlat
pop
mov
call
jg
aad
pushf
cmp
push
push
push
hlt
mov
xor
add
xchg
xor
and
and
adc
je
movsw
cmp
and
cli
aad
cltd
inc
xchg
aam
lea
mov
mov
add
or
sub
mov
jecxz
shlb
push
add
mov
mov
jge
out
cli
negb
test
sbb
xor
ret
das
or
pop
aam
rorl
inc
mov
pusha
subl
mov
sti
ljmp
xor
or
mov
adc
inc
cs
mov
in
push
jmp
mov
add
cmpsb
xchg
mov
mov
xchg
into
add
inc
in
movsb
orb
mov
xor
inc
neg
mov
jnp
mov
sub
subb
je
arpl
xchg
xchg
or
dec
sub
mov
add
enter
fmuls
add
mov
jmp
negb
push
push
mov
xor
aas
jmp
ret
cmp
lods
loope
dec
aam
add
lret
data16
test
or
push
dec
jecxz
enter
das
xor
rclb
dec
stos
mov
mov
fiadds
pushl
jle
sbb
mov
or
add
add
inc
and
pop
adc
dec
mov
sti
aaa
xchg
stos
add
dec
pop
dec
push
shlb
adc
add
scas
mov
push
mov
mov
sbb
sub
or
mov
or
ljmp
lret
xchg
or
jne
mov
push
test
fistl
dec
ljmp
bnd
adc
mov
push
push
stos
mov
mov
stos
test
leave
pop
jge
push
daa
jmp
out
dec
inc
jns
inc
lret
ret
les
add
xor
adc
sub
das
les
mov
hlt
std
adc
out
xor
shr
xor
out
out
and
pop
pop
call
rcll
pop
xor
dec
cld
shlb
in
into
dec
mov
mov
in
xor
and
andl
sbb
mov
and
jns
pop
xchg
mov
or
pop
push
mov
mov
pop
inc
push
mov
outsl
sub
push
je
fmull
ret
aam
mov
and
test
lcall
jmp
or
sbb
cmp
mov
add
mov
pusha
adc
int3
jnp
cli
sub
cwtl
iret
sbb
lret
lock
push
subb
jnp
jge
mov
cmp
dec
jge
sub
jecxz
xchg
mov
insl
or
or
lea
imul
out
cmpsl
xor
add
pop
push
cli
lret
xchg
push
out
out
xchg
mov
clc
jne
fs
arpl
add
pop
scas
dec
and
fistps
scas
xchg
sti
mov
sbb
xlat
add
ljmp
repnz
mov
jno
mov
testb
xor
repnz
sub
popl
ljmp
push
neg
in
jg
adc
xor
add
cmc
sub
push
repnz
sarl
add
xor
popa
dec
jmp
add
add
and
ljmp
push
pop
rclb
lds
into
jbe
lods
mov
cltd
pop
adc
or
xchg
test
push
sub
insl
cmp
push
gs
test
adc
sub
or
xchg
or
sub
add
push
nop
dec
mov
scas
mov
outsb
adc
push
jmp
scas
inc
or
fs
and
cmp
sub
rol
and
cltd
add
imul
int3
mov
pop
xlat
into
xchg
mov
sbbb
dec
or
or
dec
jmp
sbb
push
int
sub
and
add
sub
xchg
rol
cmp
add
sbb
xor
xor
lds
sub
and
sbb
and
mov
adc
dec
pop
sbb
push
or
es
pop
or
and
popa
mov
loopne
or
or
push
mov
fldl
pop
inc
lock
or
ret
pop
sub
add
jmp
jae
xchg
inc
sub
es
mov
sbb
jno
pop
jg
inc
ljmp
and
xor
rolb
aad
or
and
pop
dec
dec
add
out
adc
or
jl
int
add
ret
mov
pop
mov
sub
xorb
fimuls
aaa
dec
add
flds
mov
repnz
mov
jg
sub
adc
mov
dec
push
dec
or
add
mov
pop
xor
add
jmp
push
lods
pusha
jl
adc
pushf
pop
cwtl
cmpsl
jno
cmpb
loope
add
xchg
aaa
fldl
imul
imul
data16
scas
jg
or
dec
pop
dec
and
push
jge
add
or
pop
push
ret
test
and
sar
sar
in
add
cmp
pop
lds
sub
push
lds
stos
cmp
dec
jmp
xchg
fdivl
inc
int3
xchg
jo
push
mov
add
shr
push
xor
and
pop
rorb
push
add
push
add
movb
add
mov
pop
or
xor
sahf
push
xchg
sub
les
and
push
cmp
mov
int3
repnz
mov
mov
xchg
pop
lds
push
popa
nop
pop
inc
pop
pop
jecxz
test
adc
push
fbstp
xlat
push
or
cli
popf
daa
pop
bnd
bound
bound
dec
and
stos
xchg
not
pop
add
mov
loop
add
adc
fnstcw
inc
add
mov
sub
jge
ds
inc
fidivl
stos
or
jb
and
lret
jg
jle
ljmp
add
xor
sub
jmp
lds
or
pop
xchg
stos
cwtl
mov
or
outsb
orb
xchg
cmpb
mov
aam
call
and
push
cli
pop
insl
jmp
push
mov
scas
and
pop
loopne
add
lcall
testb
pop
mov
jmp
rcrl
cmp
push
or
mov
ja
outsl
pop
sub
gs
stc
sbb
mov
test
push
add
stos
adc
mov
xchg
sub
test
lods
and
stc
add
sbb
xlat
push
jmp
bound
sarl
cwtl
loopne
mov
pusha
xchg
subl
pcmpgtb
push
push
rol
adc
push
pop
int
xchg
mov
adc
data16
jno
mov
jg
addr16
sub
jae
push
sub
jmp
bound
mov
rcrb
mov
pop
add
pop
xor
mov
js
cmp
nop
into
add
outsb
jmp
push
mov
das
mov
mov
pop
aaa
push
xor
or
pop
movsl
lea
loop
mov
aam
iret
ljmp
sarb
lret
mov
int3
and
repnz
add
fadds
and
adc
sbb
sub
insb
sbb
inc
cmp
es
leave
xor
call
jo
inc
inc
jmp
pop
sbb
ret
call
nop
add
add
addr16
pop
lret
mov
add
jmp
lcall
in
sub
add
dec
inc
jp
pop
sub
xor
jecxz
push
or
idivl
je
and
movsb
lret
inc
or
add
push
test
mov
aam
jmp
cmp
dec
stos
mov
adc
inc
out
ret
push
rolb
scas
mov
cld
daa
mov
cmp
test
jmp
imul
repz
out
or
xor
nop
popf
jl
ret
jne
pop
or
std
jp
push
sub
xor
das
xorl
or
test
pusha
jbe
add
or
or
pop
pop
or
pushf
adc
jg
adc
push
mov
addl
jb
mov
movsb
rcr
fnstsw
xor
push
push
incb
add
fisttpl
push
pop
insb
test
xor
pop
push
fisttpl
mov
jmp
mov
dec
xor
adc
shr
xchg
push
pop
lock
mov
inc
sub
xchg
dec
jns
cmc
pusha
cmp
adc
dec
stos
inc
jge
mov
sub
add
xor
mov
loop
mov
rclb
xchg
mov
and
loop
dec
inc
andl
mov
or
fwait
pop
adc
je
scas
mov
xor
ss
mov
xor
or
and
sti
mov
ds
loope
sbb
xchg
sub
cld
in
aam
mov
xchg
sti
and
movsb
add
inc
dec
inc
shlb
call
mov
push
push
add
push
xlat
pop
cmp
sub
bound
orl
shr
mov
inc
repz
stos
addb
rclb
lods
ss
pop
orl
sarl
sahf
inc
sub
mov
xor
bound
adc
std
and
rcll
dec
lret
or
dec
cmp
inc
inc
jmp
and
mov
fldcw
daa
sti
pop
dec
aaa
pusha
pop
shrb
clc
and
test
sub
mov
ds
push
pusha
fcomps
daa
js
push
popa
mov
das
xchg
cwtl
xchg
outsb
add
mov
mov
add
lahf
lahf
push
pusha
lods
aad
sahf
mov
xchg
insb
xor
mov
inc
aam
or
in
push
cmpsb
lock
daa
push
out
inc
cmp
punpckhdq
cwtl
popa
add
lret
ret
test
out
push
push
rcr
xor
xchg
sbb
push
cmpl
add
push
leave
fcomps
jae
outsb
addr16
mov
pusha
fbld
inc
sub
cmc
pop
add
jecxz
dec
ljmp
mov
shll
xchg
xor
push
sarb
push
push
pop
pop
jo
and
outsl
pop
push
lods
adc
pop
xchg
xor
int3
in
mov
dec
add
pop
jmp
ja
xor
add
stc
or
sub
adc
sbb
les
ret
inc
jne
scas
push
push
cmpsb
adc
mov
push
xorl
addb
imul
mov
xor
pop
sbb
or
aam
ljmp
fnstsw
ds
xchg
adcb
mov
xor
mov
loopne
xchg
sbb
loopne
and
adc
popf
rcrb
xor
stos
pop
cmp
sahf
enter
notb
mov
mov
stos
loopne
orl
add
stos
mov
sub
rorb
jl
sub
push
pop
in
and
sub
adc
fistpl
push
inc
push
loop
jb
popf
dec
xchg
dec
lcall
sub
adc
in
jl
out
push
lds
scas
rorl
cmp
divb
jb
mov
jae
popa
sub
add
mov
mov
mov
shl
pop
push
push
push
mov
in
sti
push
sbb
mov
xor
test
and
nop
inc
or
ds
shrb
mov
dec
push
imul
stc
mov
add
data16
ret
push
jb
scas
leave
cmpsl
and
cwtl
sbb
in
xchg
rorb
rcl
iret
daa
sbb
movsl
jmp
mov
mov
jnp
adc
cmp
outsl
fstp
sbb
jbe
or
pop
sbb
push
lds
iret
rcll
out
and
pop
imul
sub
mov
cmp
mov
adc
jle
out
sbb
and
cltd
addr16
xor
or
setge
jns
das
out
xor
in
imul
push
addb
adc
xchg
mov
fs
xacquire
pop
mov
aam
fcom
aas
inc
sub
rcrb
push
adc
ficomps
inc
test
adc
add
sub
loopne
sub
and
add
inc
sub
pop
jae
xchg
orl
mov
leave
sbb
mov
ret
dec
lds
jmp
jo
dec
adc
lock
pop
push
nop
iret
or
add
xlat
scas
xchg
popa
jns
cld
jne
cmc
shrb
xor
sbb
pop
out
xor
xchg
test
addb
pop
jmp
sub
in
in
adc
push
xor
rclb
push
or
and
xor
push
rorb
cmpsb
sub
jmp
mov
mov
pop
jecxz
xchg
pop
ds
xchg
inc
dec
mov
pop
xor
sahf
stos
pop
negb
cmpsb
repz
sbbb
push
xacquire
or
push
das
shlb
jns
or
cmc
loop
push
push
mov
orb
popa
cwtl
fsubl
lods
push
or
pop
inc
mov
inc
pop
imul
shll
jl
push
loopne
lock
pop
mov
daa
ds
int
js
pop
aas
mov
cmp
sub
out
inc
inc
cs
and
adc
xor
and
shrl
push
adc
ficomps
adc
test
aad
jl
push
xchg
cmp
jmp
outsb
lcall
mov
ret
push
or
orl
pusha
inc
jnp
add
es
fdivrs
adc
pop
ljmp
mov
mov
aas
add
mov
add
fs
adc
or
nop
outsb
jge
or
or
xlat
jg
into
jae
int3
loope
cmp
and
xor
gs
or
pop
scas
fs
out
xor
lock
sarb
pop
scas
mov
mov
sub
xchg
sbb
add
lahf
jno
imul
daa
mov
divw
aas
add
int3
loop
sbb
push
cmp
or
push
jg
popf
dec
fistpll
inc
pop
xchg
lds
in
lret
stos
sarl
movsl
divb
add
dec
cmp
pop
out
hlt
dec
or
cwtl
out
shll
or
mov
shld
in
data16
push
and
cmpsb
mov
fbld
pop
imull
mov
cmp
mov
cwtl
sbb
pop
pop
test
push
and
xchg
or
fildl
sbb
add
ret
repz
xor
sbb
fstps
loop
and
outsb
push
adc
add
lret
add
jl
jecxz
add
sbb
mov
pop
test
adc
jno
add
scas
mov
out
scas
mov
into
mov
lret
js
ret
test
cltd
add
xchg
rclb
add
mov
or
pop
shlb
fdivp
add
scas
add
jg
xor
sti
cmp
sub
and
adc
fisubrl
xchg
xchg
add
ja,pt
sub
sbb
xchg
jb
sahf
lcall
add
or
cwtl
sbb
jmp
je
and
pop
jmp
imulb
push
ret
leave
pusha
pop
sarb
pop
adc
fbstp
cmp
fiadds
cmp
cmp
or
jle
cmp
mov
and
ret
sbb
dec
out
jp
shrb
aad
xlat
cmp
clc
cmp
dec
push
push
stos
adc
movsl
jne
lds
xor
loop
test
call
mov
or
push
lcall
adc
sub
dec
jns
or
inc
add
xchg
dec
jo
in
mov
lret
push
add
call
adc
mov
divb
jg
xchg
sub
mov
push
sti
xorb
rcll
mov
dec
sub
bswap
pop
aad
cli
sub
loop
add
int
pop
pop
push
adc
xlat
mov
jno
push
sahf
mov
sub
jp
sbb
dec
call
or
mov
inc
cltd
pop
jle
out
cmp
movsl
add
jo
cmp
sti
and
insb
xchg
or
adc
ret
jnp
dec
test
scas
jo
pop
ja
sub
or
jg
xorb
bound
popf
adc
out
and
inc
cwtl
jp
testl
xor
lret
stc
inc
hlt
js
adc
jno
adcb
sbb
push
pop
inc
repnz
inc
inc
inc
jb
mov
outsb
popa
gs
les
lea
les
adc
cmpb
xor
enter
push
fstpt
adc
scas
ljmp
cld
imul
add
jmp
cmp
lret
mov
orb
cwtl
mov
pop
sub
add
dec
frstor
inc
jge
push
and
notl
std
mov
shl
dec
add
dec
push
pop
xor
das
xor
adc
push
mov
mov
movsl
and
adc
insb
mov
loop
cmp
subb
faddl
pop
jmp
pop
in
pop
xchg
dec
or
ret
cmp
dec
xchg
sbb
xchg
bound
push
mov
push
add
cmp
imul
out
outsl
or
in
jg
sarl
aam
or
pop
pop
repnz
or
imul
js
popa
push
insl
std
or
and
call
add
insl
push
mov
dec
ret
push
dec
test
mov
shl
mov
xor
jmp
push
addl
inc
or
push
in
jne
xchg
xor
fwait
mov
add
test
jge
out
sbb
out
dec
adc
outsl
sbb
jbe
test
aad
adc
inc
mov
enter
inc
in
jg
inc
adc
test
sbb
adc
jmp
sub
pop
pop
sarl
add
jmp
push
mov
addl
or
test
or
pop
or
adcl
roll
insb
pop
test
mov
push
cmp
or
testl
fsubr
js
movsb
dec
ss
add
inc
lcall
or
shlb
fcomps
adc
sub
add
or
je
sbbl
xchg
loop
pop
pusha
xchg
sbb
les
paddb
push
ja
ss
mov
mov
jge
xchg
pusha
jo,pn
ret
out
cmp
fimull
push
or
sub
pusha
insb
testb
cmp
mov
add
add
pop
subl
arpl
data16
sbb
std
or
push
jo
mov
call
inc
push
pop
pop
in
ds
jns
xor
sub
sbb
adc
cltd
jo
cmp
sbb
xchg
aam
shr
or
push
xor
pop
mov
daa
loope
fidivrs
xchg
push
fstl
mov
xchg
mov
pop
push
pop
lods
lods
cmp
pop
cmp
add
pop
xor
add
xor
cmp
cs
add
shrb
pop
and
sub
sub
sahf
insl
mov
xor
je
das
frstor
sub
sbb
bound
fstpt
pop
pop
mov
mov
or
push
sbb
add
fnstenv
dec
cs
adc
repz
dec
bound
xor
and
pusha
xor
repnz
push
leave
pop
push
push
push
mov
test
lahf
or
lock
push
mov
repz
mov
and
inc
xchg
icebp
test
xchg
or
jb
pop
jmp
push
inc
mov
jmp
ret
push
push
jmp
pop
and
repz
pop
inc
push
ret
andb
xchg
jp
mov
cmpsl
test
fdivrl
inc
aad
mov
lods
jb
mov
icebp
and
adc
out
sbb
dec
fs
xlat
push
sbb
mov
nop
cmp
imul
into
repnz
mov
sbb
ret
dec
pop
je
push
mov
or
sub
push
fdivrs
mov
and
shrb
aad
pop
scas
add
pmulhw
pop
jmp
cmp
pushf
pop
adc
mov
inc
insl
inc
jge
push
jnp
lret
mov
cmp
sbb
lret
movsb
adc
dec
mov
mov
scas
fisttps
ljmp
shl
cmpb
mov
mov
bound
and
jnp
stos
sub
ret
push
and
add
je
dec
pop
jecxz
mov
nop
dec
sub
mov
add
repz
adc
or
add
mov
mov
jg
icebp
das
mov
sub
ja
rsqrtps
sti
addr16
out
cltd
add
cs
ret
add
xchg
xchg
aad
and
pop
push
mov
xor
in
mov
sub
cmpsl
aam
push
push
jle
or
pusha
adc
aas
and
and
outsb
mov
jmp
enter
hlt
sub
daa
cmp
pop
cmpsl
test
leave
fcompl
push
adc
sbb
xor
imul
pop
rcl
out
movsb
mov
bound
lret
add
lds
jns
and
icebp
jecxz
lret
pop
or
test
cmc
pop
cmp
cmp
std
pusha
daa
shl
andb
dec
pop
insb
adcb
sub
shl
jmp
xor
cld
cmp
scas
test
push
push
jp
cmpl
mov
jo
cmp
fwait
cmp
stc
std
jns
lret
pop
cwtl
or
nop
mov
sub
and
add
dec
cmp
adc
inc
mov
inc
icebp
mov
inc
xor
push
pusha
dec
lret
mov
mov
jae
clc
repnz
jae
push
xchg
in
daa
insl
bound
idivl
or
push
xor
or
add
loop
rcrl
into
inc
cltd
jmp
dec
jecxz
jnp
xchg
pop
loop
cmp
mov
push
mov
fwait
rolb
xchg
adc
rorb
pop
cltd
inc
lock
cmp
pop
addb
das
mov
mov
inc
ljmp
sub
ja
inc
icebp
jbe
and
pop
iret
dec
xor
scas
push
mov
fistpll
xchg
dec
jmp
mov
flds
pusha
push
adcb
lahf
sarb
cwtl
rorl
xlat
sbb
push
or
push
and
inc
mov
jmp
push
cmp
lret
cmp
cmp
into
adc
dec
jg
comiss
inc
aam
out
sub
mov
jmp
mov
adc
gs
pusha
fdivp
shlb
add
xchg
jb
inc
loopne
aaa
dec
xchg
fwait
mov
mov
xchg
dec
loope
ret
pop
jmp
inc
push
add
inc
ds
dec
xchg
cmp
pop
loop
sub
mov
mov
push
push
inc
jmp
dec
cmp
movsl
pop
int
cli
cmp
cmp
pop
scas
cmpsb
push
cs
pop
pop
shrb
outsl
leavew
lret
sub
fdiv
pop
nop
lods
aad
imul
repnz
jne
test
jmp
xchg
add
dec
push
xor
or
jle
adc
push
mov
imul
or
add
jecxz
xor
push
pusha
in
mov
xchg
cmp
mov
inc
sub
push
pop
push
pop
push
xchg
push
pusha
adc
out
ret
push
les
and
push
test
cld
dec
push
push
jp
gs
dec
das
jge
pop
mov
mov
hlt
rcr
notl
or
jg
sbb
xor
aas
push
pop
inc
shrl
shlb
and
jo
pop
sub
and
sub
jo
imul
and
shrl
pop
nop
xchg
mov
xchg
out
xor
or
pop
loop
out
mov
es
shrb
in
outsb
mov
mov
sub
pop
scas
mov
inc
out
aaa
lret
rcr
sbb
ja
sub
fs
push
or
dec
mov
pop
xchg
sub
outsl
xlat
mov
shll
adc
xchg
popf
aaa
sub
into
hlt
nop
lahf
rcrb
sti
out
outsb
dec
pop
sti
rol
push
mov
mov
call
popa
test
xchg
iret
push
nop
cmp
imul
pop
fisttpl
movsb
add
and
cmp
fldl
sbb
jmp
pop
push
int3
lret
popa
je
sbb
sub
sub
mov
aad
outsl
jo
adc
es
cmpb
lods
bound
mov
xchg
mov
rorb
push
fistps
cmpsb
xor
sbb
mov
neg
test
out
sbb
cwtl
daa
pop
fidivl
not
and
loope
sbb
or
fsubrl
call
jne
hlt
add
fbld
mov
pushf
or
mov
fcmovnbe
mov
pusha
aas
inc
mov
or
cmp
xchg
or
push
push
in
cwtl
xchg
push
xchg
test
pusha
insl
pop
xchg
mov
test
xchg
aam
jp
jbe
inc
nop
iret
cwtl
cmp
jge
pop
or
pop
push
and
or
adc
lahf
cli
dec
jge
adc
test
pop
or
add
xor
jmp
jns
xor
ljmp
pop
jnp
cltd
aam
jmp
neg
xchg
lea
sarb
adc
je
add
or
idivb
xor
xchg
movb
xchg
push
mov
dec
nop
icebp
dec
idiv
mov
out
adc
arpl
and
scas
and
mov
lea
and
pop
jae
or
sub
sub
cmp
sbb
cmp
fsubs
push
ror
fiadds
pop
mov
jmp
into
imul
mov
dec
inc
fdivr
sbb
add
aam
xor
ljmp
or
dec
jmp
jp
fnstsw
pushf
aam
sub
dec
mov
cmp
push
outsl
sub
xor
bound
adc
push
push
or
or
add
inc
mov
cmpb
fwait
mov
jge
dec
add
xor
scas
cmp
pop
outsb
inc
pop
fisubl
pop
test
sti
add
out
mov
add
sub
mov
push
sbbl
or
ds
rorl
push
lods
push
jns
clc
data16
sahf
pop
pop
popf
inc
push
scas
and
pop
insl
std
pop
les
add
aas
jle
enter
in
xorl
inc
dec
xor
xchg
or
daa
sarl
add
call
inc
inc
pop
out
fisubs
xchg
pushf
xchg
jns
add
sbb
jp
xchg
sbb
lret
mov
out
sti
mov
shr
cmp
push
shlb
pop
outsb
ljmp
sbb
subl
aad
subl
test
cmpsl
xor
xchg
or
xlat
pop
push
in
mov
pop
sub
mov
out
das
andb
shlb
rcl
mov
push
mov
adc
mov
sub
sub
ret
push
xchg
sub
hlt
cmp
inc
push
out
mov
push
fists
sahf
jl
cmp
daa
into
out
xchg
je
arpl
lods
dec
mov
shll
and
add
pop
fucomip
or
jg
or
cmp
mov
xlat
pop
lods
js
fnstcw
or
adc
dec
add
push
push
dec
dec
rolb
sub
subb
push
sbb
jg
scas
and
xchg
sbb
fcoml
push
inc
repz
hlt
cmovne
push
mov
mov
adcb
mov
mov
push
punpckhbw
shll
mov
addb
xchg
sub
jge
es
jecxz
insl
test
mov
push
subl
dec
cmp
rolb
jecxz
pop
idivl
fldcw
push
pop
push
ffree
jp
jo
and
sbb
adc
enter
repnz
sub
jne
out
cmp
imul
pop
inc
insl
add
daa
neg
jne
icebp
rcr
jmp
ret
jns
pop
inc
test
jb
and
xor
push
les
leave
sbb
mov
cmp
mull
insb
or
jb
ja
add
sbb
jl
cli
movsb
and
jge
push
xor
jg
jg
mov
rorl
dec
addr16
cmpsl
xor
adc
call
pop
pop
int3
js
mov
lods
call
push
or
mov
push
int
enter
jle
mov
dec
sbb
fnstsw
sub
sub
jg
inc
aaa
add
test
out
sub
daa
pusha
in
jge
loop
cs
mov
inc
clc
hlt
push
dec
rcrb
iret
jns
dec
or
pop
or
adc
add
cmp
dec
jmp
pop
push
mov
dec
stc
scas
daa
xor
scas
ret
mov
push
mov
and
ja
inc
dec
repz
mov
push
push
fucomi
and
test
je
and
into
das
sbb
mov
add
mulb
pusha
sub
out
neg
push
ret
or
repnz
loop
xchg
add
xor
pop
and
cwtl
sub
andb
sub
jnp
mov
xor
inc
push
mov
xor
mov
xchg
cltd
and
out
mov
push
enterw
xchg
pop
call
pusha
push
xor
dec
cmp
adc
push
mov
shr
jmp
roll
push
orl
fiadds
adc
popa
lods
iret
and
cmp
fucomi
and
mov
mov
add
outsl
rcrl
push
jmp
rol
mov
xor
and
cmp
pop
daa
in
add
jo
cmc
add
dec
adc
cmc
push
xor
mov
fxch
stos
cltd
and
push
stos
or
mov
mov
or
add
orb
jge
outsb
imul
add
push
cld
data16
pop
adc
jmp
mov
pop
jp
and
out
fildll
je
pop
add
mov
clc
jo
pop
sub
fistpll
cmpb
add
and
ja
pop
into
mov
out
push
mov
add
lods
insl
add
ss
andb
loopne
mov
cmc
mov
pushl
ja
andb
mov
xor
mov
fadds
sbb
lret
inc
cmp
shl
xor
jmp
nop
dec
in
mov
ret
pop
fcmovb
repz
loope
dec
int
jg
jae
dec
xor
adc
adcb
jle
xor
jmp
mov
mov
hlt
ja
xchg
xorb
pop
fstl
in
push
lds
pop
push
loop
lret
jmp
rorb
xor
mov
shl
mov
mov
cwtl
jecxz
cmpb
jnp
pop
outsl
jns
adc
add
scas
add
aad
mov
pop
popf
jge
aaa
pusha
sti
push
mov
je
jno
jb
and
fstl
repz
xchg
pop
test
imul
js
or
jo
lret
push
lahf
rorl
adc
push
jne
xchg
lahf
push
cs
mov
push
mov
inc
rcrw
addr16
mov
movl
mov
cmpb
pop
mov
mov
and
xchg
jg
push
cwtl
jb
addb
push
push
and
imul
outsl
mov
jg
roll
js
sar
xchg
xor
jmp
cmp
and
or
popf
and
mov
xor
outsl
and
ret
shrb
movsb
inc
mov
int3
jp
push
inc
add
add
sub
sbb
cmpsl
pop
lock
or
xor
pusha
fbld
cli
mov
fildll
mov
xlat
mov
add
push
or
lret
pop
add
fstpl
pop
or
insl
pop
andb
xchg
jmp
roll
sbb
jge
lret
adc
jmp
pop
push
add
adc
adc
push
jge
nop
or
sahf
cltd
and
jge
jmp
jns
dec
push
mov
loope
cwtl
push
cmc
mov
adcb
ret
std
xchg
push
push
not
xchg
mov
dec
push
mov
sub
outsl
pop
push
outsl
sbb
pop
mov
mov
fcoms
das
mulb
icebp
push
aad
fdivrl
xchg
pop
add
inc
ljmp
jno
or
add
loop
jl
xor
in
sbb
pop
sub
xlat
or
pop
sbb
dec
add
ljmp
shr
pop
or
mov
pushf
add
fcmovb
aad
fpatan
add
and
inc
mov
or
push
ljmp
negl
mov
ja
push
neg
rclb
loopne
jne
ud0
icebp
das
mov
outsb
cmpsl
cli
cmp
mov
sub
cmp
xor
and
cmp
fadds
pop
out
jg
imul
ljmp
in
loop
in
hlt
int
cmp
fnsave
aad
sub
pusha
sub
fs
fs
ror
and
int
add
mov
sbb
inc
iret
and
scas
hlt
lahf
dec
and
fisttpl
dec
outsb
pop
sbb
add
gs
out
inc
adc
add
mov
adc
outsl
add
mov
dec
or
sub
push
xchg
push
jmp
loope
jnp
mov
adc
out
scas
cmpsl
or
pop
push
lds
push
inc
movsb
adc
cwtl
jnp
xchg
out
inc
pop
xchg
idivl
jp
cmp
mov
add
mov
call
mov
jno
xor
imul
lock
stos
add
adc
add
movsb
nop
push
pop
je
cli
fldcw
sbb
sarb
jae
pop
std
cwtl
push
xchg
sbb
pop
push
jne
pop
pop
cmp
push
push
jl
xchg
shr
inc
and
call
icebp
test
mov
jne
ljmp
add
cmp
push
lock
adc
jecxz
ret
push
inc
push
lods
ds
inc
mov
adc
test
xchg
es
inc
subl
test
mov
xchg
movsl
pop
mov
adc
push
push
lea
fisubrs
in
mov
les
adc
lahf
les
cltd
mov
faddl
rolb
push
mov
add
lcall
mov
pusha
daa
shlb
and
or
js
mov
jnp
add
sbb
cld
dec
mov
xchg
inc
lods
cmpsl
and
adc
pusha
adc
mov
or
lock
enter
sub
sub
add
sub
sub
cli
inc
or
or
lret
orb
or
pop
jge
addb
and
jmp
dec
pop
scas
push
leave
pop
adc
add
pop
sub
xor
add
dec
inc
mov
mov
popa
push
mov
and
inc
stos
into
cmp
loopne
es
cmp
movsb
rcll
push
mov
lock
sti
jo
adc
mov
imul
lahf
xlat
ljmp
dec
imul
outsl
cwtl
sbb
das
xchg
or
jns
loopne
lods
inc
fnstcw
push
jnp
mov
mov
fildl
xor
xor
pop
cs
lds
add
and
jns
dec
call
lret
pop
pop
lods
into
add
outsl
arpl
sub
les
pop
xchg
xchg
xor
add
and
sbb
hlt
push
push
inc
jp
xorb
addr16
rclb
lock
mov
fisttps
fisubrl
imul
jno
push
movsb
daa
xchg
sti
pushf
movups
jne
jmp
in
jae
jmp
mov
orl
xor
mov
xor
xor
pop
cmp
sub
icebp
mov
sub
fsubrl
leave
dec
fcom
xchg
xchg
jae
push
jmp
sahf
pop
loope
inc
pop
mov
dec
mov
sbb
andb
rcrb
xor
in
cmp
push
int
pop
outsl
sub
scas
sbb
or
mov
dec
ss
pop
cld
or
or
fidivrs
pop
push
stos
jae
push
loope
in
jg
pop
add
mov
xchg
push
pop
sub
icebp
jmp
mov
call
icebp
jle
mov
xchg
fdivl
cmpsl
call
jmp
cmp
es
outsl
add
pop
pop
aam
add
xor
test
subl
pop
call
cmp
loope
and
sbbb
inc
add
and
xor
mov
movsl
daa
cmc
data16
lds
js
stos
jecxz
adc
jg
sub
std
js
jmp
leave
pop
movsl
mov
lock
movsb
or
stos
inc
pop
aas
push
rorb
or
pop
repnz
push
push
cmp
mov
mov
or
pop
push
jns,pt
rol
or
jg
xor
icebp
push
divb
or
gs
mov
cwtl
or
pop
loop
fldl
cmp
xorl
jnp
repz
pop
dec
dec
dec
pushf
dec
add
pop
aam
mov
pop
not
cwtl
cld
or
mov
add
push
pop
mov
icebp
push
or
or
dec
adcl
fwait
push
add
sub
and
faddl
sub
push
pop
mov
jns
push
push
es
xor
insl
std
ss
xchg
or
cltd
sub
xchg
stos
or
xchg
jnp
clc
sbb
or
divl
divb
cmp
push
in
sub
daa
or
aad
stos
insb
fiadds
sub
sub
pop
mulb
repnz
and
repz
inc
mov
pop
mov
adc
cmp
sbbb
push
push
les
and
or
push
push
adc
jbe
fs
scas
inc
test
stos
in
push
cwtl
add
pusha
push
sub
add
push
call
test
or
adc
xor
stos
xchg
push
inc
mov
ljmp
push
and
in
rol
or
sub
xor
aam
fwait
adc
lea
mov
pop
mov
loop
dec
lods
cltd
dec
mov
shrb
xlat
inc
bnd
inc
jg
jbe
jb
jo
enter
xlat
or
dec
push
adc
lcall
lcall
or
roll
or
repnz
push
xchg
popa
mov
sti
pop
xchg
popf
nop
out
aam
jns
push
mov
or
pushl
inc
jne
cmpsl
add
add
addb
addr16
inc
leave
mov
cmp
rolb
mov
sbb
jg
mov
xchg
xchg
push
js
xchg
dec
lods
and
add
daa
gs
jae
or
out
dec
add
pop
sub
add
fnstcw
pop
inc
pop
jmp
mov
dec
jb
outsl
xor
xchg
sbb
shlb
je
pop
insl
testl
mov
adc
sarl
divl
insl
or
cmp
pop
mov
push
out
ljmp
in
dec
or
pop
adc
mov
in
xchg
mov
mov
jmp
xor
sar
leave
pop
and
stos
pop
xor
out
push
stos
bound
out
cltd
mov
mov
fldcw
and
push
and
and
test
adc
inc
mov
out
xchg
cwtl
aam
adc
xor
cmpsl
jne
enter
or
push
aam
mov
fwait
mov
dec
and
out
cmpsl
icebp
call
pop
sbb
out
test
sti
iret
mov
incb
or
cmp
test
rolb
cs
adc
in
ret
dec
test
adc
popf
test
sub
in
loop
pop
sub
add
sub
cmp
add
and
jnp
call
out
jno
cmp
in
enter
jne
and
pop
mov
adc
xor
inc
and
push
and
negb
jmp
push
mov
loop
aad
jle,pn
jg
mov
adc
leave
mov
mov
and
enter
dec
sub
cmp
clc
out
lret
out
adc
pop
push
push
mov
push
lret
jb
xlat
out
fwait
enter
pop
xchg
inc
push
mov
push
pop
sub
sti
mov
sub
pusha
add
dec
dec
add
xchg
inc
cmp
shrb
sti
movsl
xchg
add
pop
push
pusha
mov
pop
nop
fiaddl
cs
sbb
sub
jno
dec
nop
cmp
iret
xchg
cli
jo
jmp
arpl
or
mov
jnp
out
jge
jo
mov
lret
xchg
push
outsb
mov
call
sbb
or
lock
pop
pop
sub
pop
cmp
leave
xlat
icebp
jne
test
nop
inc
sbb
inc
jns
xchg
xor
jo
push
pushf
push
pop
mov
mov
std
xchg
or
mov
sub
dec
mov
xchg
inc
rorb
pop
movsb
push
pop
jbe
add
std
dec
push
aad
push
push
push
or
sbb
or
adc
jg
and
sub
sub
or
sub
out
sbb
repz
cmp
and
scas
pop
cld
and
jbe
add
es
test
stos
mov
pushf
into
in
cmp
push
add
pusha
lret
push
cmp
and
nop
std
imul
inc
pop
add
arpl
add
int
test
les
dec
cmp
mov
orb
gs
mov
mov
adc
sbb
jne
mov
lods
jnp
xor
scas
jecxz
mov
test
gs
or
xchg
fwait
sub
je
ret
sub
dec
xchg
push
sub
jecxz
push
in
mov
lds
std
pop
aas
popf
dec
lcall
dec
pop
out
nop
ja
loop
pop
push
mov
push
adc
pop
cmp
cs
pop
popf
cmp
movsl
inc
jns
mov
adc
sub
aas
sub
lret
push
jle
add
into
or
add
and
cld
or
mov
and
pop
popa
pusha
mov
push
dec
rcrl
loopne
and
pop
inc
xor
dec
sbb
cld
rcl
or
mov
fucom
lds
jns
add
insb
pop
neg
loopne
jp
xor
xchg
out
pop
outsb
jg
add
mov
inc
scas
or
inc
sub
pusha
or
rclb
dec
xor
mov
das
push
idivl
mov
mov
inc
les
add
push
sbb
xorb
jmp
sbb
adc
and
sbb
jnp
jae
mov
or
sahf
mov
jae
cmp
pop
imul
adc
add
mov
roll
mov
adc
rclb
jg
or
cmp
lcall
iret
and
xchg
mov
loope
mov
ljmp
je
and
dec
xchg
lret
rol
push
or
sti
orps
js
mov
daa
xchg
subb
fisubs
pop
lods
mov
mov
push
and
dec
jle
gs
shl
dec
cld
or
pop
push
or
pop
pop
pop
ja
adc
inc
aad
sbb
mov
bound
pop
cmc
inc
add
push
inc
test
push
cmc
adc
xor
mov
jl
push
mov
mov
sub
lea
test
sbb
lret
jbe
nop
lods
js
sub
test
imul
ret
push
call
pop
pop
out
jbe
dec
aas
outsl
shll
push
xchg
imul
data16
bound
in
xchg
mov
ja
lret
fsubrs
pop
sub
push
inc
or
arpl
int
pop
adc
repnz
adc
pusha
cwtl
lock
bound
out
iret
cmp
popw
mov
xor
push
xchg
jp
pop
push
or
xchg
sbb
mov
stc
and
push
sub
inc
push
add
inc
inc
out
adc
xor
xor
iret
add
pop
adc
push
lahf
in
gs
push
xor
or
xchg
sub
mov
dec
push
bound
nop
mov
xor
cmp
pusha
lods
pop
lahf
pusha
mov
push
inc
rcrl
cmp
add
loopne
adc
and
add
dec
cli
outsb
xchg
cmpsl
test
add
jmp
xchg
scas
adc
iret
int3
and
xor
fistpl
scas
sbb
out
addl
or
cmp
je
sub
pop
loope
dec
dec
xchg
mov
imul
filds
dec
decl
sbb
xchg
push
add
mov
push
add
xor
data16
inc
rolb
push
jmp
fistps
xchg
stc
in
inc
or
push
pusha
cmpsb
inc
mov
hlt
lret
adc
fdivrp
dec
int
and
or
add
pop
add
or
xor
push
cmp
cmpsb
xchg
pushf
push
test
pushf
roll
mov
data16
daa
mov
mov
xchg
adc
shl
pop
pop
je
rcr
jmp
or
add
nop
add
sub
push
rcrb
lahf
outsb
mov
jmp
add
cwtl
repnz
nop
add
dec
andl
mov
pop
cmp
aas
mov
add
push
lcall
roll
popf
in
or
fdivl
cmpb
gs
daa
in
cli
jmp
xchg
ret
add
sub
test
add
or
nop
std
xchg
inc
jae
shrl
std
loop
or
dec
lret
mov
push
dec
shl
daa
sub
stos
mov
xchg
jl
insb
testb
push
push
ds
pusha
mov
mov
mov
dec
adc
lahf
test
fstpt
clc
inc
push
mov
xchg
add
popa
mov
or
ss
cmp
clc
xor
jns
mov
xchg
and
leave
lock
shrb
mov
xor
loopne
xchg
sbb
cwtl
inc
outsb
add
pusha
mov
ljmp
push
push
les
jge
xor
or
xor
push
gs
sub
and
popa
fs
add
sbb
dec
and
divb
cli
dec
mov
xchg
clc
add
sub
xor
mov
inc
mov
or
jg
cmp
fdivrl
jmp
clc
fdivl
jg
movsb
mov
ficoml
ret
xor
xor
sbbb
mov
sbb
push
dec
negl
test
jbe
xchg
ljmp
and
push
sbb
cs
rcrl
fidivl
push
scas
pushf
pushf
sar
mov
sbb
mov
into
negb
and
mov
push
divb
sbb
xchg
jne
xchg
pushf
ss
jmp
and
in
ds
das
mov
cmp
inc
nop
sbb
jle
or
jge
mov
mov
jae
cld
push
sahf
sbb
pop
push
daa
pop
pop
jne
push
mov
add
fldcw
stc
sbb
or
push
scas
dec
or
dec
fwait
movsl
loopne
cmp
adc
pop
dec
lret
dec
sub
fidivs
lahf
addr16
mov
jg
xchg
cmp
ret
jb
jmp
mov
in
push
pop
imul
add
sub
inc
mov
push
dec
pop
pop
and
or
jns
jmp
test
aad
lock
aam
xor
dec
sarb
loopne
mov
xor
icebp
pop
and
push
mull
jmp
xchg
stos
sub
lods
inc
shll
jp
pop
jbe
adc
addl
sti
push
sbb
push
aad
stos
and
pop
mov
mov
and
cmpsl
mov
loop
icebp
jge
xor
addb
push
je
dec
fimuls
sub
rolb
mov
clc
mul
in
mov
sub
dec
pop
mov
cld
cmpsl
test
cmpsb
mov
add
pop
popl
in
inc
mov
imul
mov
xor
insb
add
push
jmp
addb
jbe
jmp
or
pop
jl
arpl
add
and
shr
jmp
orb
in
pop
daa
mov
into
pushf
or
add
xchg
add
jg
sbb
mov
pop
add
mov
arpl
fisubs
lret
filds
int3
sahf
sbb
test
or
cmp
push
pushf
mov
movsb
pop
inc
pop
dec
orb
out
push
pushf
jb
nop
jge
jb
int3
inc
jmp
cmc
push
sbb
add
popa
xchg
mov
scas
xchg
mov
jmp
mov
sbb
ss
pop
cmp
or
xor
sub
xchg
dec
adc
jmp
call
sbb
or
pop
into
sbb
and
push
or
pop
jmp
jg
sub
cli
fsubl
cmp
push
push
hlt
adc
adc
and
push
dec
and
sub
xchg
pop
cmp
sub
test
push
inc
lea
mov
or
hlt
sbb
sarl
cs
mov
shrl
add
inc
pop
jmp
fst
dec
arpl
cmp
es
add
dec
xchg
inc
jns
hlt
outsl
inc
push
mov
pusha
es
or
mov
pop
mov
push
or
jle
dec
out
adc
jg
jmp
dec
lods
xchg
pusha
insb
push
inc
and
pop
hlt
icebp
es
test
cwtl
scas
dec
mov
jp
and
mov
mov
xor
add
jne
mov
cs
push
push
add
inc
push
or
mov
stc
jb
les
enter
call
mov
sbb
mov
outsb
mov
pop
fistl
leave
adc
movsl
outsb
push
jne
shrl
pushf
pop
adc
mov
inc
push
xchg
js
pushl
int
pop
aam
fadds
rorl
push
mov
xchg
mov
add
repnz
rorl
push
popf
test
inc
bound
cwtd
add
push
jmp
push
pop
fcomip
pop
test
push
pop
adc
sub
adc
cltd
repz
mov
test
jmp
cli
adc
sahf
andl
inc
and
in
dec
jae
mov
jmp
lock
inc
jns
add
clc
dec
sub
pop
data16
mov
rcl
xlat
jns
xor
sub
sbb
pop
xor
inc
xchg
sbbb
mov
cmp
roll
fstpl
xchg
mov
or
dec
xchg
xchg
pop
nop
arpl
sti
mov
xchg
sub
pop
mov
xchg
pop
xor
sub
sbb
mov
sub
pop
mov
sbb
jmp
mov
dec
pop
sub
push
inc
inc
aad
out
adc
push
jecxz
push
or
lret
and
mov
jb
jle
push
pop
push
and
pop
loope
ds
adc
stos
mov
pop
mov
ds
add
adc
pop
xor
scas
je
stos
insb
pop
push
add
lock
stos
sbb
subb
jl
rcrl
xorl
lock
sbb
jnp
jns
repnz
test
adc
jmp
jg
rcll
push
jmp
dec
bound
adc
inc
fisubrl
add
adc
sub
repnz
cmp
dec
bound
sbb
stc
add
out
pop
mov
adc
cs
adcb
sahf
jg
jo
and
adc
cmc
adc
cmpsb
movsl
js
shlb
ret
pop
outsb
sub
push
mov
add
in
cli
jmp
jmp
mov
int3
pop
mov
adc
and
ds
mov
inc
sub
and
jecxz
xchg
and
fisttps
and
int
push
mov
pop
mov
inc
testl
sbb
cmp
lret
cs
jns
pop
std
or
or
popa
pop
push
outsl
push
insl
sbb
icebp
push
rorb
and
loope
ds
movsb
jne
jge
push
out
jo
push
mov
add
mov
jmp
push
jge
sub
cmp
subb
test
jae
jne
jp
pop
sbb
adc
add
hlt
xchg
ds
aad
leave
jbe
scas
adc
pushf
xchg
daa
lahf
or
xorb
inc
xchg
lret
and
in
add
flds
push
jmp
pusha
mov
cmc
filds
sub
call
xchg
or
or
inc
xchg
push
pop
nop
das
sbbl
and
or
mov
jmp
add
adc
mov
orb
cmp
fiaddl
pop
gs
out
sarb
xor
xchg
stos
jno
cld
pop
imul
arpl
sbb
cmp
aas
loopne
mov
mov
xor
shl
push
add
iret
fs
inc
jecxz
ficoms
jg
adc
pop
fsubrs
add
inc
push
fsub
inc
mov
inc
in
cmpsb
jo
jmp
vcvtps2pd
ds
iret
push
push
ret
jl
jns
sbb
dec
and
mov
jp
inc
orb
dec
pop
fisttpll
lret
fsts
add
mov
xchg
and
push
pop
push
pop
dec
add
pop
mov
jge
pop
dec
andl
mov
icebp
or
push
add
es
pop
mov
jmp
pop
dec
addl
sarb
xchg
cmc
mov
dec
nop
mov
outsl
aaa
cs
xor
sbb
jmp
mov
xor
fwait
jnp
lea
repz
cmp
mov
lret
bound
rclb
sbb
fistl
sarb
push
jmp
xchg
add
into
cltd
push
inc
push
jmp
pushf
loop
rcl
loope
hlt
adc
inc
adc
testb
divl
dec
adc
add
aaa
inc
aad
jnp
cmc
xor
and
ds
ret
shr
add
mov
sbb
xchg
pop
add
and
add
pop
jmp
in
stos
push
fs
push
ret
out
cmp
int
std
sbb
cmp
jg
shrb
cmpsb
pop
cmp
xor
loopne
stos
or
test
push
stos
test
movsl
insb
mov
je
mov
pop
cmp
in
ljmp
cmp
xchg
aaa
sbb
aas
jo
mov
pop
push
lret
in
sub
stos
mov
or
dec
icebp
or
mov
in
add
xchg
insb
in
dec
test
push
push
push
push
pop
dec
loope
stc
test
xchg
mov
push
push
mov
push
xchg
fldt
sub
add
sub
dec
push
push
push
push
add
dec
popf
popa
frstor
das
mov
or
inc
sti
daa
test
xchg
push
stos
shrl
mov
shrl
in
lods
cmp
sub
push
push
les
lret
jbe
cmpsb
push
push
enter
out
jne
adc
dec
leave
iret
test
and
loopne
dec
fidivrl
push
jmp
subb
pop
addr16
mov
aas
iret
pop
out
ret
ret
ja
dec
aam
mov
dec
or
dec
test
push
or
dec
push
dec
fsubs
xor
scas
mov
push
daa
adc
or
outsl
pop
push
add
jb
das
xor
pop
pop
movsb
mov
sahf
fistpl
pop
mov
test
fidivrl
outsb
adc
nop
mov
icebp
repnz
and
push
mov
adc
stos
cmp
mov
loope
inc
xchg
out
popf
adc
xor
mov
jecxz
jmp
rcrb
add
jle
loope
addb
mov
fsub
inc
xor
add
pop
les
or
jno
mov
pop
hlt
mov
jg
clc
jecxz
pop
add
jmp
js
xchg
pop
clc
and
lds
jno
and
or
pop
cmc
jmp
out
shl
fcomps
jecxz
lahf
mov
add
ficompl
lea
inc
lret
dec
repz
mov
sub
push
push
mov
pop
lods
dec
jae
pop
mov
cmp
imul
in
cmp
icebp
push
rorb
arpl
sub
push
pop
mov
in
addb
movsl
add
cmp
div
or
jl
ss
jg
repnz
cs
xorb
and
push
and
lea
rorb
repnz
subb
mov
clc
and
add
outsl
dec
inc
dec
jmp
push
popf
pop
mov
lds
xchg
pushf
imul
outsb
lret
inc
insb
arpl
imul
add
dec
and
push
push
mov
sub
jg
push
mov
sbb
imul
imul
lods
nop
jnp
push
push
or
lock
call
out
xor
mov
test
jg
xlat
addr16
inc
jmp
pop
in
ss
test
sar
xor
sub
in
pop
push
mov
imull
add
mov
testb
add
jmp
popf
into
inc
xchg
hlt
push
jmp
mov
pop
cmp
mov
mov
xchg
subb
aad
rclb
mov
scas
jno
cmc
pop
ret
or
pop
push
mov
das
movsb
iret
out
or
je
pop
divl
out
add
pusha
pop
dec
mov
dec
push
and
sub
repnz
jno
or
mov
sub
mov
jp
in
sub
sub
daa
push
adc
outsb
sub
lret
and
loope
movsl
jae
icebp
xchg
or
push
xchg
iretw
xchg
mov
fsubl
or
aam
and
push
lods
push
jmp
fstp
test
and
pop
pop
pop
andb
loop
aad
pop
add
pop
pop
inc
ljmp
jge
xor
pop
test
xor
mov
add
shrb
call
ss
imul
xchg
mov
add
sbb
leave
mov
es
sarl
and
pop
push
push
fstl
dec
sti
mov
push
dec
push
mov
call
sbb
dec
and
jmp
daa
jbe
cli
or
icebp
ret
dec
or
mov
gs
mov
cmp
icebp
insb
js
dec
adc
mov
pop
stos
cwtl
cmp
test
stos
in
into
pop
daa
mov
xlat
push
or
pop
into
lods
sub
or
dec
pop
in
popa
pop
dec
ret
inc
jge
in
sahf
rclb
xchg
push
mov
mov
mov
pop
pop
cvtps2pd
cld
mov
push
push
scas
jno
jnp
cs
test
cli
adc
jo
outsl
inc
mov
jp
lea
cmp
jmp
push
mov
push
bound
xor
sarl
mov
pusha
push
sahf
sbb
sub
aaa
sub
inc
jns
push
das
das
jl
pop
aaa
sub
or
ljmp
or
rclb
pop
aas
stc
mov
dec
aaa
push
inc
jmp
pushf
xchg
fcmovnb
adc
fwait
pop
cltd
push
push
cli
sub
pop
adc
push
pushf
xor
or
lock
add
jo
aas
mov
xor
adc
ret
pop
cmpsb
mov
xchg
lock
aad
fstp
pop
xchg
cld
dec
push
inc
or
out
xchg
sbb
add
int3
mov
and
cmp
xor
xchg
push
xlat
inc
mov
add
adc
sub
sbb
je,pt
and
sub
cwtl
pop
add
xor
sub
jo
add
dec
fmul
add
jp
fadds
push
cli
and
fs
stos
add
repnz
mov
in
adc
loop
ret
pop
pop
call
in
push
push
dec
es
add
out
push
jle
cli
ja
sbb
movb
arpl
lret
mov
xor
mov
xchg
mov
inc
divl
lock
adc
push
push
sbb
cmc
mov
mov
stos
les
mov
jge
push
add
dec
jmp
cmp
in
push
pusha
xor
pop
outsb
and
sub
mov
sbb
mov
xchg
jp
test
cmp
sub
xor
add
jmp
cltd
sbb
push
push
add
loopne
cmp
into
cwtl
sub
ja
and
add
cmp
sbb
loopne
cmp
add
xchg
test
jmp
xor
xchg
aam
xor
push
aaa
js
jmp
sar
add
or
aam
int
or
ds
and
rorb
inc
es
sub
neg
ljmp
mov
xchg
and
mov
jge
push
jb
sub
mov
dec
cmp
sub
xor
pop
cmp
sbb
cld
mov
cmp
mov
out
pop
or
jne
mov
divl
loope
out
add
pop
add
dec
leave
xor
add
inc
pop
pop
and
icebp
pop
push
mov
xlat
cli
popa
mov
insb
sub
pop
push
test
cwtl
xlat
mov
add
xorl
mov
xchg
fdivs
aaa
pop
rcrl
push
mov
inc
ret
push
pop
xchg
lret
loopne
xor
js
sbbb
pop
adc
mov
jbe
flds
daa
mov
out
loope
sub
push
pushf
push
daa
mov
adcb
pop
int
je
jmp
pop
and
mov
enter
push
mov
pop
pop
mov
sbb
or
xchg
pop
sbb
jge
cwtl
jnp
pop
je
or
pop
fidivs
add
mov
sub
push
mov
mov
xchg
std
lock
andl
ret
dec
push
aas
push
scas
daa
sahf
mov
mov
add
push
and
xor
push
or
das
movsb
inc
push
out
ljmp
imul
adc
mov
xchg
inc
pop
jmp
dec
xlat
add
loop
jecxz
or
cmp
cmp
sub
xor
pop
cmc
add
adc
outsl
inc
clc
rorl
dec
fmull
jae
adc
sbb
and
adc
xchg
pop
cld
xor
lea
call
lret
push
push
jmp
or
dec
addr16
rcl
sub
loop
movsl
out
js
lods
mov
pop
xchg
push
cwtl
or
push
pop
int
out
or
scas
dec
cmpsb
sahf
pop
xor
scas
jno
push
gs
adc
pop
mov
and
adc
cmp
or
dec
sbb
cli
and
loop
push
push
icebp
dec
cltd
shr
jbe
insl
shll
dec
in
orb
push
gs
mov
adc
lahf
cld
xor
and
push
stc
bound
pop
imul
cmp
aas
xor
push
imul
or
and
push
ret
pop
lcall
add
das
out
mov
and
insl
pop
cmp
mov
mov
addr16
xor
int
in
push
lcall
inc
pushf
and
pop
mov
sub
repnz
cld
orb
cmp
push
pop
pop
pop
or
sbb
lds
xor
or
pop
push
inc
and
imul
stos
addr16
sub
jmp
scas
fnstsw
jmp
adc
call
aad
add
xor
mov
fdivrs
xor
bound
aad
push
fs
mov
adc
enter
push
aas
mov
inc
dec
add
add
push
xor
or
aam
add
cmp
orb
xchg
rclb
or
or
paddusb
div
das
aad
inc
inc
xor
mov
aas
movsb
inc
inc
ret
ds
push
mov
jle
inc
pop
push
jae
jmp
adc
sub
ds
popf
cmc
pop
or
dec
popa
ljmp
addr16
xor
jecxz
ret
push
dec
pop
fcoms
test
add
pop
sub
dec
lods
fwait
push
cwtl
ret
or
sbb
dec
pop
xchg
repz
adc
inc
jns
pop
cmp
dec
pop
pop
xchg
xchg
data16
nop
jns
xchg
sub
push
pop
mov
sar
xor
jge
lds
add
or
jbe
push
dec
inc
and
inc
jle
out
sub
subb
jne
push
jmp
repz
cmp
sub
sbb
fwait
dec
popa
dec
mov
icebp
or
pop
ficomps
or
insb
xchg
sbb
adc
mov
mov
and
mov
rorl
adc
out
out
adc
out
jno
adc
or
dec
cmc
in
and
push
lahf
cld
push
push
iret
add
in
push
inc
add
push
xor
xor
mov
push
jns
ret
scas
je
ret
cli
xorb
mov
popf
pusha
lret
lcall
push
dec
clts
pop
inc
xchg
stos
lds
adc
or
les
inc
sub
push
cmc
inc
jnp
andb
adc
or
pop
lcall
add
xchg
cmp
cltd
push
cmc
jno
imul
mov
jg
adc
xor
push
test
rol
cld
negl
inc
cmp
ds
sbb
mov
lods
dec
in
xchg
mov
inc
lods
push
popa
xchg
addl
loope
dec
ret
mov
inc
jo
outsb
xor
add
cs
or
push
mov
popa
shlb
int
add
jl
daa
sti
add
adc
jecxz
sbb
sbb
arpl
pop
ficoms
jmp
int
inc
dec
addb
push
inc
out
push
or
enter
and
in
sahf
pop
jnp
dec
and
nop
or
lret
pop
test
jg
pop
push
je
clc
test
mov
not
mov
adc
fdivp
addr16
pop
push
mov
sbb
aas
rorb
jns
iret
dec
pop
mov
inc
add
or
ja
or
push
cmp
fidivs
pop
pusha
out
and
pop
push
push
jmp
js
add
dec
inc
pop
jae
repnz
call
pop
xor
mov
pop
subl
pop
sub
cmc
jmp
in
shrl
imul
sbb
add
pop
daa
neg
mov
out
dec
lahf
iret
pop
xchg
iret
inc
jae
adc
cs
mov
push
jmp
clc
mov
stos
adc
dec
loop
push
inc
and
pop
pop
mov
fnstenv
cmpsl
push
lea
and
mov
loop
ja
dec
pushf
mov
shl
ret
inc
rorb
add
adc
mov
cmp
jp
mov
push
cld
sub
psubb
int
loopne
pop
sarl
daa
jae
cmp
rol
pop
pop
lea
fdivrl
orl
add
jle
inc
pop
and
ret
sbb
xchg
aaa
int
xor
lods
aad
push
inc
dec
cwtl
je
gs
out
pop
lock
add
add
sub
sub
xor
push
inc
or
enter
jo
aas
or
lock
leave
push
lods
xorb
arpl
inc
je
cmp
cmp
test
sbb
sub
in
push
add
scas
mov
bnd
and
jnp
add
outsb
pop
sti
push
xchg
test
repz
sbb
out
in
jno
or
xlat
push
mov
pop
scas
inc
lcall
arpl
dec
leave
add
jbe
add
imul
aam
pop
loopne
mov
or
iret
dec
jne
jno
shlb
push
push
in
dec
icebp
pop
adc
push
inc
adcl
dec
xchg
xchg
cmp
ds
stc
push
xlat
scas
int3
insb
stos
mov
jl
bound
cmpsb
or
popf
cmp
mov
daa
test
repz
xchg
push
sbb
adc
subb
call
pusha
push
sub
cltd
adc
mov
push
stc
iret
push
std
cwtl
dec
mov
pop
dec
fucomi
std
fisttps
ret
push
movsb
int3
mov
hlt
lahf
fbstp
dec
adcl
xchg
mov
rcrb
outsl
and
cmc
scas
rcrb
ret
das
aas
test
mov
sbb
mov
push
sub
ds
and
enter
jmp
data16
push
jge
js
bound
xchg
or
jno
daa
shl
movb
or
sbb
xchg
pop
scas
icebp
imul
jae
enter
mov
mov
das
and
jmp
scas
repnz
push
sub
imul
push
cmp
mov
repz
xchg
stos
sub
das
fdivrs
dec
shlb
jne
pop
ret
xlat
jno
addr16
clc
arpl
sub
pop
pop
cmp
add
push
inc
sbb
jp
push
das
inc
mov
cli
cltd
pop
pusha
flds
jo
popf
cmc
xor
cwtl
pushf
dec
inc
scas
popf
mov
mov
mov
and
shll
mov
int3
xor
mov
cmpb
scas
xor
xor
pop
xchg
xor
rorl
lods
jb
sub
mov
sub
idivl
inc
mov
shll
xchg
cmpsb
xor
icebp
lods
mov
test
dec
or
mov
cmp
jmp
shrl
and
cmc
xor
sub
in
in
filds
outsb
jmp
ret
adc
mov
test
cs
jp
mov
jp
in
or
arpl
mov
daa
mov
cmp
jne
in
dec
mov
jge
or
inc
add
lret
jmp
jnp
scas
sub
imul
inc
repz
adc
xor
xorb
mov
incb
add
adc
xlat
adc
cmp
inc
js
mov
ljmpw
dec
pop
repnz
stos
incl
pop
xchg
add
sub
clc
xchg
insl
adc
pusha
cmp
xor
push
add
test
pop
jp
xchg
jp
mov
dec
ret
push
pop
jmp
mov
imul
mov
sub
scas
inc
ljmp
jns
dec
jnp
jbe
js
dec
sub
jmp
pop
push
pusha
jmp
add
pop
and
cwtl
gs
xlat
add
pusha
ja
andl
in
mov
inc
orl
or
lret
jnp
adc
xchg
sbb
nop
stc
adcb
xor
in
xchg
sub
push
pop
adc
mov
sub
je
scas
sub
mov
jp
dec
push
xor
cmc
test
sub
scas
das
cmp
sbb
cs
lods
hlt
push
mov
mov
jl
fdiv
rorl
es
movsl
inc
in
mov
add
mov
mov
popf
fcomp
mov
in
outsb
mov
sub
clc
pop
pop
dec
sbb
test
dec
sub
jb
repz
or
lahf
sub
mov
jmp
mov
xor
push
sub
je
mov
repnz
icebp
scas
adc
les
sbb
ret
lahf
aam
jno
daa
aad
and
jmp
popa
test
xor
pushf
ss
mov
and
xlat
or
es
imul
arpl
xor
adc
test
stos
mov
xchg
dec
xchg
jno
negb
imul
lods
xor
jmp
scas
mov
pop
mov
ljmp
orb
pop
fisubrs
push
es
add
push
or
nop
mov
dec
xor
xchg
out
lds
inc
mov
dec
adc
push
xor
lds
or
xchg
imul
inc
daa
jmp
adcb
cli
addb
addr16
jnp
add
das
out
inc
or
add
sub
sub
or
add
andl
mov
add
dec
xchg
or
add
adc
and
mov
outsw
shr
jmp
scas
popf
pop
out
sbb
popa
std
cmp
push
and
mov
in
dec
js
clc
cmp
or
cmp
cmp
add
jbe
pop
jno
add
push
fcoms
lods
ss
dec
cmp
scas
mull
push
movsl
sti
sbb
pop
mov
inc
xchg
imul
xorl
rorb
in
xor
fistpl
cmp
pop
sbb
pop
push
ror
pusha
cmc
sbb
mov
repnz
fiaddl
shlb
push
add
or
arpl
arpl
push
shrl
das
repz
test
clc
aaa
pop
jbe
jmp
ror
out
ljmp
stos
sub
mov
fnstsw
shlb
push
popf
enter
cmp
jge
jecxz
push
xchg
sbb
jmp
xor
inc
lcall
or
push
mov
pop
or
pop
adc
mov
lret
out
push
lcall
das
out
cmp
sbb
dec
test
add
das
push
nop
jne
pushf
movsb
jmp
sbb
shl
icebp
xchg
sub
or
add
jmp
dec
mov
add
roll
pop
xor
dec
clc
mov
movsb
pusha
pcmpgtb
inc
jb
in
out
hlt
pop
dec
es
push
pop
popa
bound
ficompl
lret
sub
pop
stos
loope
cs
sub
mov
push
repnz
xor
std
xchg
pop
sbb
mov
or
pop
and
sbb
daa
push
enter
frstor
sbb
adc
or
add
add
jmp
jne
cmpsb
es
loope
sub
sahf
dec
mov
adc
adc
aas
addl
sub
pop
ret
pop
mov
cmp
not
xor
dec
iret
movsb
xor
imul
lods
mov
mov
sti
or
cmp
call
push
add
push
jno
jb
jp
mov
daa
xlat
inc
or
subb
sbb
not
cwtl
test
inc
adc
adc
sahf
mov
jl
mov
adc
add
bound
pop
sub
mov
addb
dec
and
mov
push
push
sar
pop
pop
or
test
lcall
push
arpl
or
into
incl
add
inc
movsb
dec
cmp
cmpb
lret
mov
dec
inc
cmp
pushf
adc
jo
pop
lock
dec
pusha
inc
ss
push
sbb
stos
ret
adc
dec
or
movsb
xor
mov
push
call
je
jne
mov
addr16
addb
je
fwait
in
data16
push
mov
shl
enter
or
out
lds
xor
jmp
mov
jl
loopne
or
jmp
int3
mov
mov
mov
lods
cmp
lret
es
out
or
les
and
in
pop
lahf
repz
andb
fists
stos
cltd
test
stc
mov
mov
push
sub
das
inc
sbb
bound
pusha
stos
push
xor
or
jmp
inc
hlt
push
lcall
mov
inc
pop
add
pusha
mov
add
cmp
lret
pop
mov
dec
push
inc
sub
into
pop
pop
in
in
repnz
mov
in
mov
roll
mov
push
xor
pop
dec
div
dec
mov
and
pop
dec
jl
pop
xchg
push
aas
lcall
add
mov
andb
inc
or
mov
pop
call
and
jl
mov
lds
popf
inc
les
icebp
out
daa
shlb
mov
cmp
push
leave
outsl
push
movsb
dec
shr
and
inc
jno
push
addb
dec
mov
pop
lods
cmpl
je
cmp
rolb
pop
jne
decb
mov
pop
push
inc
push
out
fldl
mov
inc
call
pop
imul
ss
xor
dec
pop
mov
into
sti
and
stos
insl
imul
sti
push
ljmp
sub
or
and
mov
inc
adc
enter
scas
repz
leave
add
rolb
sbb
popf
cli
ja
addl
pop
pop
leave
cmpl
mov
sub
stos
mov
fisubrl
pop
jb
int3
testl
daa
sbb
jne
in
fistpll
add
xor
loop
inc
sarb
dec
push
lahf
push
js
cmp
mov
shlb
sub
les
jmp
or
jecxz
or
sbb
aad
mov
xchg
sub
and
lods
scas
std
adc
testl
movsb
add
jb
sub
sub
cmc
pop
or
sub
jg
scas
lahf
pop
push
cli
pop
stos
pop
push
bound
cmp
sahf
clc
scas
not
pop
add
adc
pop
out
sbb
push
jecxz
popa
dec
jmp
xchg
push
mov
push
rclb
je
mov
orl
lret
jb
xor
and
pop
xor
add
movsb
sub
jns
xchg
call
inc
imul
jmp
stos
lret
mov
sub
jnp
xor
lds
cmp
push
mov
pop
enter
sub
divb
cwtl
hlt
cmp
pop
pop
push
and
mul
repz
cs
sbb
pop
out
cld
push
xchg
add
sbb
in
cmp
jp
and
push
ret
mov
inc
loope
inc
and
daa
pop
cmp
iret
add
xor
mov
push
pop
add
or
jns
pop
jmp
daa
inc
adc
cmp
fmull
test
jl
loopne
into
daa
mov
push
test
inc
mov
and
or
xchg
xchg
cmp
cmp
lea
and
out
pop
mov
repz
jmp
pop
not
shrb
pop
mov
iret
icebp
push
sbb
sbb
add
hlt
inc
adc
sub
inc
ja
xchg
lds
in
adc
inc
in
cmp
loopne
xchg
jp
repz
or
test
mov
mov
push
pop
mov
sbb
cmp
in
pusha
mov
sub
mov
fs
out
pop
pop
adc
jge
sti
shll
push
ret
std
xor
xlat
faddl
jmp
mov
popa
popf
jo
popa
sti
and
mov
lcall
out
mov
sub
inc
sbb
lcall
fimull
or
xchg
iret
incb
pop
mov
test
call
add
cmc
jge
xchg
push
jno
daa
xchg
jg
cmp
inc
aaa
push
pop
pop
cli
incb
insb
sub
das
xlat
pusha
sub
jp
outsl
and
adc
sbb
pop
rorl
sub
aad
dec
xor
push
test
je
ds
or
mull
sub
adc
xor
mov
jmp
dec
add
sbb
jb
dec
jne
dec
and
push
xchg
ds
orl
push
push
xor
dec
addr16
xor
dec
scas
mov
sbb
pop
push
push
dec
xlat
leave
faddl
xor
into
pop
sub
inc
push
push
and
outsl
mov
push
flds
orb
ja
fidivl
mov
insb
add
push
mov
pop
pop
jl
das
inc
jo
cld
jno
mov
and
add
jo
lea
mov
js
in
inc
in
outsb
mov
mov
jae
stos
push
xor
pusha
leave
enter
je
movsb
jmp
add
xor
pop
leave
mov
cmp
mov
xchg
out
hlt
fsubrl
adc
leave
out
fwait
mov
cli
pop
fisttps
loopne
or
add
adc
decb
push
jnp
ret
pop
subb
xchg
push
out
pop
jg
roll
dec
fadds
mov
and
add
insb
hlt
push
test
or
jecxz
xchg
out
xor
jmp
jmp
or
sbb
mov
mov
movsl
fs
lock
lds
shr
daa
push
cwtl
jg
pop
and
inc
adc
push
sbb
orl
or
mov
popa
sarl
dec
pop
add
out
je
and
jmp
fstpl
hlt
xchg
push
pop
inc
mov
xchg
cmpsb
pusha
sti
jle
or
xchg
clc
pop
mov
sbb
jbe
call
adc
add
mov
push
xor
pop
dec
testl
test
and
orb
inc
add
cmp
outsl
pusha
shlb
pop
inc
mov
es
test
sub
mov
cmp
adc
mov
orb
out
pop
jle,pt
mov
pop
pop
and
aam
adc
mov
in
inc
mov
sbb
in
mov
cmp
pop
push
ret
movsb
inc
sbb
repz
ds
sbb
aas
or
mov
psubsw
or
push
jns
sbb
mov
lahf
dec
nop
lcall
stos
adc
cld
js
jmp
mov
or
xchg
jmp
testl
mov
mov
cmp
das
js
mov
aaa
xchg
inc
mov
ret
hlt
daa
stc
xchg
xchg
xor
stos
clc
jmp
sbb
jl
test
pop
repnz
mov
aas
shrl
mov
xchg
orl
call
and
cmpb
xor
fstl
or
sub
or
lds
adc
dec
push
and
lock
js
shlb
dec
aam
orb
xchg
mov
sub
bound
in
fs
and
xor
dec
bound
fwait
jmp
mov
pop
and
jg
push
mov
out
jno
cmp
xor
jae,pn
incb
out
lret
gs
mov
pop
jl
and
add
sti
push
rcrl
fsubrs
ljmp
xor
pop
mov
cmp
sbb
pop
jne
sbb
jbe
bound
sarb
and
dec
xchg
add
push
popf
jbe
pop
jb
popf
js
mov
loope
popa
push
push
sub
jb
shrl
adc
mov
inc
and
inc
negl
or
fiadds
adc
addr16
adc
movsbw
jp
sahf
lcall
add
sbb
xchg
jo
sbb
incb
lock
or
hlt
push
xchg
inc
xor
lss
mov
or
pop
cmc
mov
arpl
mov
jmp
fnstenv
stos
adc
jno
negl
lods
mov
pop
dec
pop
pop
out
add
sbb
mov
sarl
mov
cmp
orl
pop
push
ret
lods
test
and
aaa
mov
mov
ja
and
dec
test
xor
in
dec
ljmp
test
inc
mov
mov
xorb
sub
enter
adc
enter
aaa
and
mov
stos
xor
mov
mov
and
xlat
adc
test
ds
or
cmp
pop
sub
mov
push
jmp
addl
nop
daa
mov
divl
dec
js
test
mov
mov
dec
les
rclb
inc
daa
int3
jns
cwtl
dec
cld
cmpsb
dec
inc
adc
jne
and
enter
push
mov
cli
mov
push
jl
addr16
add
jge
jecxz
jns
mov
jle
sbb
sbb
addr16
push
shll
popa
dec
les
repnz
dec
fs
sbb
push
call
fneni(8087
mov
fwait
pusha
mov
out
loop
sarb
sub
lods
addr16
cmp
mov
and
jl
rclb
push
movsl
lret
sub
imul
clc
lret
and
scas
mov
fimuls
shl
scas
xchg
lock
cmp
and
add
ja
stc
jb
ret
testb
push
jmp
mull
sub
xorl
xlat
rcl
jg
push
iret
les
or
jmp
push
push
jno
aas
mov
mov
push
jecxz
aam
movsb
xor
dec
inc
xlat
filds
mov
sub
lea
sub
aam
adc
pop
clc
daa
js
stos
xchg
dec
jge
pop
bound
pop
mov
lock
or
cmpb
scas
xor
mov
push
jg
add
add
jns
shr
test
call
and
clc
or
push
push
aam
inc
outsl
cmp
pop
mov
jmp
pop
pop
mov
test
jge
inc
or
adc
ret
push
nop
test
add
xlat
xor
add
std
or
pusha
sahf
ret
ja
jne
xor
pop
jg
jbe
ficoms
pop
fwait
es
push
movsl
pusha
inc
test
sub
jecxz
in
adc
rorb
ljmp
jae
sahf
arpl
push
mov
pop
loopne
out
cld
stos
mov
mov
in
mov
mov
cmp
aas
jmp
jmp
enter
pop
mov
sbb
push
mov
lahf
je
and
rorl
das
add
cmp
sub
cmp
xor
std
sti
das
daa
decl
ficoms
jp
cwtl
movsb
dec
pop
loop
nop
test
add
sbb
cmp
sub
jl
repnz
sbb
adc
icebp
xor
add
pushf
lcall
jle
mov
in
sub
pop
and
dec
inc
pop
ss
inc
push
push
ret
in
js
cwtl
rorl
enter
out
dec
loope
cs
or
inc
cmp
cmc
sarl
stos
add
stos
jl
add
jl
push
xor
cld
dec
inc
or
in
lret
pop
rcrb
add
jg
dec
cli
mov
sub
cmp
mov
popf
sub
xor
jmp
mov
notl
jmp
adc
xchg
jns
xor
pop
pop
out
stc
mov
or
sub
add
pushf
cld
sbb
push
dec
add
adc
jmp
test
inc
cmp
imul
imul
negl
xor
push
jg
daa
push
cmc
mov
dec
push
mov
mov
daa
addl
scas
jmp
pop
fidivrs
pop
push
lret
push
push
pop
jnp
mov
iret
mov
mov
testl
pop
jmp
popf
pop
jmp
test
or
icebp
sti
rcr
jg
and
and
push
xchg
push
xchg
inc
loopne
mov
ss
loope
sarl
sbb
xor
les
and
push
icebp
test
and
lret
push
rclb
sub
lcall
xlat
aaa
sahf
js
rolb
push
addl
nop
or
adc
jg
and
cltd
test
inc
out
cmp
inc
pop
mov
xchg
xchg
scas
adc
pop
push
fnstenv
stos
mov
mov
add
insl
loop
push
icebp
testb
dec
pop
xchg
pop
mov
add
orb
jmp
fsubs
mov
cltd
int3
xor
aaa
and
nop
inc
add
leave
push
push
mov
mov
pop
call
mov
jp
lods
clc
iret
or
mov
js
jp
inc
lret
xchg
test
mov
jl
inc
cmp
inc
pop
xlat
imul
jp
xorb
not
inc
loop
test
add
cld
enter
adc
and
and
pop
ucomiss
add
xchg
ja
add
popa
or
push
dec
sub
mov
test
jle
dec
pop
adc
nop
shlb
cmp
sbb
mov
add
ret
or
loopne
add
jbe
inc
in
adc
repz
icebp
call
movsb
xor
add
nop
jne
push
add
and
pop
ss
add
movl
pop
leave
mov
push
or
sub
push
jmp
movsbl
in
mov
mov
sub
and
and
rorb
pop
dec
mov
sarb
pop
push
push
or
mul
sub
jnp
xor
xor
pop
fstp
fwait
out
loope
lret
out
add
push
push
push
or
fsts
dec
inc
jle
and
pop
xchg
in
rcr
inc
pop
mov
push
jno
inc
sub
mov
adc
scas
cmp
dec
jmp
pop
mov
cmp
jmp
incb
iret
scas
leave
dec
jp
sub
adc
or
jmp
lret
or
pusha
push
add
and
lds
adc
sbb
adc
xchg
sbb
cmpsl
movsl
xchg
mov
and
and
jg
jl
shrb
shrl
icebp
sub
lcall
add
in
xor
mov
push
add
aas
dec
enter
shr
andb
pop
pop
pop
add
dec
cmp
sub
dec
push
sub
sbb
pop
imul
hlt
or
mov
and
cmpsb
xor
or
aaa
jno
and
fistl
dec
test
push
mov
push
cli
and
adc
mov
movsb
mov
inc
pop
pop
mov
xchg
xor
testb
pusha
jl
sarb
std
imul
pop
add
fmull
jecxz
mov
fiaddl
inc
aad
add
mov
andb
sbb
sub
and
sbb
xor
sub
or
pop
jmp
xchg
jae
xchg
pop
mov
mov
xlat
mov
cli
add
add
pop
or
addr16
pop
xor
bound
or
pop
incb
sub
pusha
and
sub
jb
inc
pusha
mov
mov
mov
pop
jae
dec
adc
dec
mov
dec
cs
xchg
xchg
add
clc
mov
push
xchg
rolb
or
push
pop
sahf
fsts
aas
mov
pushf
adc
mov
sbb
or
or
mov
pop
xor
rorb
daa
pop
push
les
cmpsb
dec
push
sbb
into
cli
shr
mov
fld
hlt
pop
and
mov
loop
mov
inc
cli
jo
push
inc
mov
lret
repnz
ficompl
ret
add
or
sbb
pop
out
jmp
add
adc
sti
add
das
and
or
sub
or
jbe
push
push
dec
daa
jg
xor
jnp
inc
and
pop
in
test
leave
in
repz
jp
dec
aad
jne
or
mov
sub
lahf
pop
mov
dec
popf
dec
mov
or
cmp
out
ret
jmp
sarl
rorl
popa
pop
pop
aad
xor
lods
mov
add
and
pop
mov
scas
cmpb
mov
lock
orb
push
xor
xchg
std
ret
insl
jp
dec
jle
int3
pusha
repnz
arpl
stos
add
add
xor
out
enter
jmp
pop
cli
mov
or
es
pusha
leave
pop
pop
jbe
pop
das
jne
jns
movsl
push
xor
jmp
xlat
test
pop
pop
clc
dec
dec
sub
outsb
mov
jae
cmpl
add
inc
or
clc
enter
stos
mov
js
sbb
lret
addr16
sbb
mov
dec
sub
popf
xlat
sub
pop
jnp
jecxz
arpl
adc
push
add
xor
adc
pusha
dec
pop
adc
mov
scas
adc
popa
icebp
mov
loopne
xor
sbb
inc
sbb
jmp
xchg
push
dec
inc
sub
pop
inc
jno
stos
bound
inc
aam
push
es
adc
xor
fs
xchg
fsubrp
push
enter
sbb
loopne
sub
xor
xchg
dec
or
aad
fidivrs
fnsave
jp
aaa
shlb
pop
push
dec
pop
ret
or
push
pop
mov
jae
orl
jbe
and
sti
mov
dec
mov
pop
push
inc
mov
xor
push
adc
inc
jmp
jmp
imul
jne
xchg
mov
push
shr
jno
ds
fdivr
call
pushf
not
adc
xchg
loopne
mov
ret
inc
into
push
arpl
jbe
add
push
sbbb
or
jp
rorb
movsb
pop
das
cmp
hlt
js
cli
lods
or
sbb
ss
adc
cmp
jns
ds
or
mov
repz
bound
subb
xchg
pop
stc
sub
jo
or
jl
cmp
mov
or
inc
outsl
add
test
adc
je
add
mov
and
xchg
bound
mov
and
xor
pop
push
lods
push
jmp
or
push
rolb
testl
xor
jl
lods
dec
xor
inc
imul
popf
pop
loopne
or
add
sti
add
daa
pop
pop
sbb
cmp
cs
sub
aam
shlb
or
push
scas
es
jmp
push
ucomiss
clc
movsl
cmp
pop
clc
pop
stos
add
or
push
loope
cmp
stos
je
jecxz
dec
int3
lahf
roll
mov
mov
inc
pop
cmp
mov
stos
int3
hlt
push
fistps
cmp
cli
adc
and
jno
aam
mov
movsb
frstor
loopne
sub
or
imul
dec
push
imul
dec
addb
add
xor
sbb
out
xor
sub
insb
in
jge
daa
and
mov
cmp
inc
xchg
xor
hlt
push
ds
sbb
mov
and
pop
icebp
add
les
mov
in
jmp
mov
leave
out
mov
jmp
mov
scas
movsb
pop
repz
push
lods
pop
adc
or
stos
or
ja
loop
fsubrp
leave
std
push
mov
ljmp
xor
test
or
cs
mov
sti
test
in
jg
xchg
test
push
mov
sub
mov
push
xor
and
sub
mov
insl
ljmp
mov
sbb
and
fiaddl
and
cmpsl
xchg
mov
adc
jl
sub
mov
data16
scas
mov
push
pop
xchg
out
or
or
push
ja
dec
lret
dec
scas
bound
cmpsb
ja
mov
pop
testb
ret
push
les
sub
mov
or
loope
jne
cmp
pop
sub
sar
into
jle
jmp
jno
ljmp
scas
loope
add
jne
jnp
push
lret
nop
jo
lds
cmc
jecxz
sbb
addr16
xlat
xor
push
jp
xor
push
sub
xchg
sbb
or
fdiv
mov
mov
sti
push
dec
insb
push
sbb
add
mov
arpl
xchg
in
or
movsb
xchg
popf
and
fabs
inc
mov
cmc
pop
and
xchg
negl
sbb
cld
mov
sub
add
dec
add
pusha
arpl
mov
mov
icebp
add
rol
jg
out
jnp
movsb
add
push
lret
mov
push
lahf
mov
inc
sub
out
jne
sbb
xor
enter
or
std
dec
addl
xor
pop
andl
push
leave
cmc
xorb
mov
jne
sti
xchg
cmpsl
fisttpl
jmp
test
das
mov
pop
testb
fmul
fsubl
push
ljmp
lret
ror
xchg
shll
xor
push
and
orl
inc
call
lods
sbb
in
pop
and
and
stos
sbb
mov
or
mov
fstl
cld
inc
les
sarl
pop
icebp
xchg
pop
mov
jb
dec
jmp
sbb
int
pop
ja
cld
xor
movsb
pop
les
pop
scas
daa
arpl
or
loope
pop
mov
adc
push
mov
shrb
push
popf
lret
jae
loopne
scas
gs
clc
add
push
mov
rcll
scas
ret
adc
jo
or
sub
push
adc
stos
mov
inc
or
fs
xlat
jmp
clc
roll
stos
mov
dec
ja
xchg
cmc
sub
pop
pusha
mov
enter
pop
int
or
mov
cmc
shl
add
aam
mov
sub
pop
xor
xor
adc
mov
hlt
cmpb
fwait
negb
lods
sub
mov
test
jecxz
xor
test
mov
call
add
xlat
mov
pop
xor
push
mov
pop
dec
lods
jns
mov
sti
add
dec
les
scas
sbb
sub
mov
xchg
sub
das
xchg
fdivrs
das
xchg
cmp
dec
movsl
xor
sbb
mov
dec
mov
jns
pop
or
jecxz
mov
sbb
push
pusha
inc
mov
cmp
push
dec
in
jg
rcrb
std
in
in
mov
jae
sub
pushl
gs
inc
pushf
not
and
in
cmc
add
ss
push
cld
mov
pushw
xlat
mov
adc
lcall
mov
jmp
xchg
dec
mov
out
fs
mov
xchg
or
test
pop
movsb
lods
fists
pushl
pop
clc
std
add
xor
jmp
cli
aad
aam
rcll
test
add
jmp
mov
mov
add
and
or
xchg
ret
or
pusha
call
inc
cmp
rcrl
js
test
add
xor
xor
hlt
fdiv
sub
adc
jno
xchg
scas
ret
leave
push
pop
jb
lahf
xchg
rorb
add
or
pop
push
mov
push
adc
ret
testb
lock
push
shrb
loopne
mov
cmp
mov
nop
push
jo
pop
add
dec
add
jg
xchg
pop
repz
xchg
pop
jnp
jo
adcl
and
gs
inc
ret
dec
loope
or
incb
sub
sti
hlt
xor
ret
ds
mov
subb
inc
call
cmpsl
cld
add
jmp
leave
icebp
push
inc
mov
fs
out
aas
daa
sti
or
xchg
or
dec
cmc
or
scas
inc
mov
aas
dec
mov
int
stc
jnp
test
cmp
mov
xor
lret
or
add
mov
mov
sub
push
icebp
mov
jg
mov
mov
aaa
jl
shld
rcrl
or
fsubp
data16
sub
sbb
sbb
add
jnp
or
pop
sub
push
push
add
sti
sbb
xor
daa
push
jl
es
les
insb
pop
xor
cli
or
or
pop
andb
sti
ret
cmp
sub
gs
popf
scas
subb
fs
add
rcrb
lret
push
fcoml
out
jp
rolb
add
jae
rorl
pop
jo
pop
xchg
push
xlat
push
outsl
outsb
cmp
aad
push
icebp
out
andb
hlt
push
and
xchg
fsubs
jns
dec
sub
dec
xchg
sti
orb
js
mov
popa
cwtl
dec
pop
shl
lea
mov
adc
fldl
pop
xchg
mov
pop
mov
or
cmp
push
cwtl
or
ja
cld
cmp
cmc
les
mov
jnp
in
jmp
mov
loopne
inc
add
add
dec
call
out
push
mov
pusha
in
movl
and
dec
xchg
mov
jmp
es
inc
dec
jnp
movsl
subb
xor
push
jbe
jne
xchg
loop
mov
jnp
and
xchg
push
test
movl
ss
add
jp
push
test
dec
mov
cmp
repnz
sub
pop
push
jmp
push
adc
daa
pop
mov
jp
or
rcr
jns
push
pop
std
push
je
push
and
pop
mov
repnz
adc
sub
popf
int3
and
push
jecxz
push
mov
inc
inc
mov
fisttpll
add
sbb
mov
xor
daa
jmp
jle
jp
fs
ja
sub
test
and
in
mov
push
dec
pop
rcll
cmc
mov
pop
in
mov
sbb
cmp
xchg
shr
out
aam
add
decl
fistpl
loopne
sbb
push
out
jnp
push
mov
sub
push
movsl
ljmp
or
inc
and
mov
clc
fwait
xchg
jp
mov
lahf
inc
mov
mov
sbb
mov
push
add
xchg
inc
push
push
arpl
lods
pop
or
pop
jge
in
jg
mov
jmp
add
push
mov
mov
sub
dec
cmp
add
xchg
pop
add
hlt
mov
popf
ja
mov
or
dec
lcall
inc
xor
lret
inc
xchg
mov
or
fdivl
xor
fldcw
jnp
adc
pextrw
or
mov
testl
movsb
jb
call
ljmp
sub
adc
cs
xchg
mov
jmp
add
inc
out
push
jns
jbe
sahf
iret
insb
pop
shlb
not
mov
aad
push
rorl
push
inc
sub
or
and
push
push
pop
pop
mov
lods
out
inc
and
enter
into
lods
pop
lret
pop
std
dec
dec
scas
add
pop
push
stos
in
int
pop
in
daa
roll
add
mov
ds
mov
popf
iret
pop
ds
xor
jno
adc
and
shl
or
imulb
add
test
lahf
push
add
jnp
pop
pop
add
sub
inc
popf
stc
dec
cmpb
pop
or
sub
sub
out
mov
cmp
ja
dec
add
and
and
btc
in
sub
pop
or
add
lret
push
stos
shlb
jb
lret
or
jno
inc
gs
or
xor
fwait
lahf
cmpb
push
dec
pop
add
push
cli
sub
or
loop
adc
add
xchg
xchg
inc
stos
sub
push
add
inc
cmpsl
xor
les
decb
mov
cld
push
and
and
shr
mov
jns
sbb
inc
sbb
fimull
jp
lock
insb
mov
add
push
inc
addl
arpl
sbbb
dec
jge
addl
jb
and
or
push
jmp
pushf
pop
pop
and
sub
rorl
inc
and
cmp
and
lret
and
xchg
push
sti
movsb
add
xchg
or
push
addl
mov
dec
pop
add
xor
push
ljmp
inc
jmp
ror
push
or
out
test
repz
lock
mov
cmpb
fcompl
mov
ds
xor
lock
fisttps
mov
dec
dec
sub
inc
out
mov
xchg
sub
mov
and
inc
cmpsb
add
lods
dec
mov
xorb
dec
or
pop
adc
and
scas
cmp
cmp
mov
loop
fisttps
and
aas
push
push
xchg
nop
xor
hlt
add
sbb
add
adcl
outsb
cwtl
pusha
sbb
and
and
dec
pop
lcall
mov
or
xlat
cwtl
out
add
fsub
in
aas
daa
pop
or
outsl
dec
sub
pop
or
xchg
jmp
inc
pop
pop
leave
shl
add
popa
or
pop
add
mov
mov
mov
jne
lcall
shl
sub
testl
inc
adc
hlt
stos
ja
test
sub
lahf
add
xor
push
push
mov
icebp
out
jns
lcall
cmpl
cmc
sarb
add
sub
inc
shlb
faddl
jl
cmpb
popf
push
sbb
call
int
push
loope
mov
and
cli
orb
jp
ds
dec
cld
xchg
sub
sbb
xor
outsl
add
mov
je
enter
cmp
push
push
xchg
pop
xor
jo
cs
popf
pop
repnz
cmc
jo
adc
ret
lea
fdivs
adc
dec
cli
fisubrl
cmpsl
push
ja
push
mov
fldenv
pusha
pop
pop
test
dec
adc
push
mov
jge
fistpl
sub
xchg
adc
xor
cmp
lds
aam
mov
sbb
adc
popf
out
adc
cmp
in
test
inc
inc
push
mov
push
add
or
loope
dec
or
adc
mov
pop
pusha
adc
into
adc
xchg
movsb
mov
mov
or
dec
jl
bound
dec
cmp
shll
jge
pop
or
cmc
sub
and
xorb
dec
inc
cltd
sbb
xor
cmp
and
jp
jns
xchg
or
adc
push
mov
inc
cli
jbe
jmp
jne
jnp
or
das
repnz
ljmp
pop
jbe
and
ss
jo
pop
jnp
push
leave
lcall
add
adc
nop
push
pop
imul
lock
mov
pop
mov
je
or
cmc
lcall
sbb
xchg
mov
dec
mov
mulb
sub
ja
lret
in
push
pop
stc
js
adc
mov
cmpsl
mov
or
inc
fwait
ds
add
or
xchg
jmp
neg
or
or
push
mov
pop
fsubp
ret
mov
mov
or
in
add
jmp
dec
pop
mov
lahf
fcompl
sub
inc
dec
adc
ret
out
pop
cmp
xor
jl
adc
jmp
sub
sbb
xchg
stos
je
decb
pop
stos
jecxz
and
cmp
sub
imul
jecxz
dec
xchg
add
jp
add
jo
pop
cmp
inc
ljmp
test
fcmovnb
jg
frstor
mov
sub
jbe
xchg
pop
stos
fldl
gs
mov
mov
lea
and
sbb
clc
ljmp
and
cmp
dec
dec
dec
add
popa
xchg
jl
inc
sbb
push
mov
and
cli
push
push
fimuls
or
out
popa
test
xor
add
mov
test
adcl
adc
mov
sbb
dec
sub
xor
and
push
sub
pop
push
mov
cmpsb
sub
mov
repnz
add
sub
jle
out
lds
stos
jbe
pop
cld
ds
daa
dec
ljmp
lret
mov
daa
pop
sbb
jmp
aam
jo
xchg
pop
sub
mov
pop
gs
or
jo
or
subb
das
xchg
data16
inc
dec
fsubl
add
jge
adc
add
rolb
mov
and
mov
sub
movb
or
ds
dec
adc
mov
fistpl
pop
rcrb
jmp
fiaddl
mov
mov
rcr
xor
insb
jmp
jmp
rclb
push
push
or
mov
das
fdivl
cmp
fdivr
mov
dec
push
and
or
imul
enter
add
pop
shr
or
int
adcb
pusha
mov
sub
mov
ljmp
jmp
mov
add
or
inc
jno
or
pop
lods
aas
lock
loope
adc
aad
bound
popa
add
addl
pop
pop
loop
shrb
paddb
mov
sbb
or
push
addr16
out
test
inc
dec
lods
test
adcb
mov
cld
das
add
push
sub
fistl
adc
popf
incb
jp
pop
lret
push
or
mov
daa
std
xchg
xchg
js
jg
lahf
push
mov
aaa
popf
mov
mov
jp
pop
fwait
adc
or
out
lock
repz
inc
inc
pop
push
jbe
ficompl
in
push
xchg
mov
mov
dec
inc
adc
cvtps2pi
in
neg
push
sahf
push
inc
sub
int3
outsl
pop
inc
add
negl
in
xchg
mov
add
fisubs
xchg
sub
xor
xchg
pop
adc
test
sti
movsb
fwait
mov
add
dec
add
adc
add
push
or
push
mov
cmp
ficoms
cmc
inc
loope
data16
cmp
std
sub
pop
push
shlb
movsb
push
sub
push
mov
cmp
add
loope
jo
sub
cmp
ret
xor
push
popf
jbe
jb
jns
in
or
jmp
add
mov
adc
and
into
add
pop
adc
add
loopne
push
mov
sbb
out
pop
mov
or
pop
std
jo
xchg
movsb
push
nop
or
cmp
and
not
pop
or
or
out
xor
daa
mov
xlat
ret
or
pop
jb
sahf
add
pop
in
daa
ja
out
xchg
out
mov
in
xor
movd
xlat
push
scas
iret
inc
add
stos
bound
push
shll
fisttpl
nop
or
arpl
mov
shrb
and
cmp
push
test
cmc
jmp
sti
lret
jmp
repz
stc
test
fnstsw
cs
test
out
iret
inc
pop
pop
mov
cmp
pop
jle
mov
sub
pusha
xchg
jl
jmp
adc
jge
daa
fcmovne
leave
xchg
add
mov
mov
adc
or
popf
ret
sbb
mov
orl
add
adc
call
jne
mov
cltd
jo
push
outsb
mov
jl
jecxz
sub
dec
test
add
sub
out
mov
jmp
dec
inc
jnp
mov
xor
xchg
or
mov
adc
jmp
push
sbb
loopne
sub
jle
mul
adc
or
mov
insb
or
je
shlb
add
fcomp
pop
mov
add
cli
aaa
scas
jo
jmp
jne
popa
sub
ja
std
cmp
sahf
lds
mov
inc
mov
add
cli
hlt
push
popf
push
sub
pop
or
mov
sbb
adc
cmp
and
gs
adc
push
pop
ljmp
aas
dec
bound
inc
adc
mov
mov
jne
ljmp
mov
jmp
nop
xchg
xchg
push
addb
in
pusha
in
js
mov
xor
cmpsb
add
jle
ds
fsts
rcl
dec
scas
adc
pop
sub
icebp
inc
fidivs
mov
sub
add
clc
mov
lret
daa
adc
jns
data16
mov
inc
jg
cs
or
jp
shr
inc
xor
rcrb
mov
push
push
push
add
inc
imul
and
je
dec
das
jge
push
in
fisttpl
mov
pop
push
jmp
mov
loopne
pusha
mov
xchg
sbb
push
fs
cmc
add
ret
dec
int3
call
fildll
pushf
jb
outsl
inc
mov
mull
out
les
sbbb
inc
or
sub
loope
int
jle
jmp
mov
lods
jmp
xor
mov
jge
xchg
add
lcall
addb
mov
mov
outsb
or
sbb
int
jo
in
jle
jmp
or
jae
dec
sti
je
stos
cld
jp
jmp
jecxz
pop
push
xchg
ret
jnp
push
adc
mov
roll
xchg
cmp
add
mov
cmp
or
mov
mov
xor
xor
jg
and
icebp
jo
jno
mov
push
push
outsl
mov
or
push
das
dec
add
mov
or
sbb
adc
mov
sbb
xchg
add
lcall
jns
and
mov
imul
pop
inc
and
pop
pop
push
out
and
push
lods
repnz
or
fldl
pop
mov
jne
nop
in
jno
xor
or
outsb
mov
movsb
adc
popf
cmc
add
jns
or
lcall
adc
scas
ja
and
rclb
jo
sbb
out
jno
xchg
rorb
jg
outsl
mov
sub
mov
push
or
pop
push
mov
pop
insb
das
pop
lds
add
or
mov
xor
xchg
addl
push
dec
sbb
mov
shlb
and
push
rcll
adc
data16
inc
pop
fisubrl
sub
xchg
adc
push
inc
in
mov
pusha
outsl
adc
xor
mov
adcb
dec
in
cmp
repz
add
cmp
xchg
fldcw
hlt
mov
mov
mov
and
jmp
sub
out
adc
iret
daa
cmc
sbb
or
subb
pop
xchg
cmpl
rcrb
pop
jmp
pop
adc
movsb
call
cmpsl
movsb
orb
jbe
add
xor
push
pop
add
jne
movsb
pop
mov
test
daa
scas
cmp
push
sbb
pop
repnz
aam
sub
ret
dec
enter
and
lock
cwtl
jp
ljmp
mov
pop
jle
pop
push
cwtl
inc
or
pop
pop
pop
pop
test
je
loope
pusha
jo
int
idiv
out
jmp
fsubl
xor
sub
in
call
inc
fs
je
icebp
mov
loope
in
jmp
pop
repz
cmpsb
pop
mov
loope
daa
daa
xchg
add
lds
icebp
mov
mov
std
push
cs
sub
loopnew
inc
sbb
rcrl
dec
loop
or
ja
xor
add
clc
lret
adc
mov
aas
out
add
mov
push
mov
lret
push
pop
sbb
cmp
push
or
cmp
cmp
and
sbbb
sub
push
adc
sbb
notl
and
inc
sbb
ja
push
ficoml
push
inc
xor
push
test
push
mov
xor
pop
push
les
pop
sub
jmp
xchg
fnstcw
or
loop
xlat
ds
ret
int3
adc
jae
jmp
in
lods
fcmovu
pop
cmp
aaa
dec
jmp
and
test
xchg
sar
mov
add
hlt
xor
push
sbb
adc
jle
pop
js
push
jno
daa
mov
lcall
jae
shlb
jno
lds
xlat
push
fcomip
jecxz
fildl
dec
and
lcall
push
sbb
lea
sub
add
xlat
dec
inc
inc
jo
add
jg
fnsave
stc
jbe
lahf
aam
push
push
aaa
inc
cmpsb
mov
andb
mov
je
popf
in
cmc
dec
mov
inc
jp
iret
sub
pop
dec
sbbl
add
scas
ja
pop
mov
dec
pop
add
adc
mov
dec
pop
mov
roll
jp
dec
push
lahf
test
push
or
push
stc
pop
pop
aas
mov
push
lahf
pushf
shl
int3
loope
and
stc
jnp
mov
push
popa
test
and
scas
movsl
jg
xchg
and
xor
dec
lods
push
in
imul
das
or
iret
mov
lret
jl
daa
cmpl
xor
mov
mov
or
je
pop
add
imul
push
xchg
jne
ret
sahf
mov
jmp
mov
sbb
sbb
sbb
xchg
repz
mov
sbb
insb
xor
or
ja
inc
dec
sub
mov
aas
push
lret
testl
jns
in
imul
out
dec
fdivl
cmc
mov
push
dec
dec
pushf
xor
pop
cltd
shl
xor
jmp
inc
aas
into
out
cmp
hlt
std
lock
ret
push
sahf
sub
cmp
adcb
push
jb
stos
pushf
adcb
add
icebp
or
xchg
xor
mov
lret
mov
sub
and
push
ja
mov
pop
cld
ljmp
xor
ficoms
push
push
aad
adc
insb
cld
cmp
add
xchg
sbb
cmp
loope
pop
push
xchg
cmpsb
cmpb
and
mov
aad
mov
or
pop
add
xchg
sbb
sbb
js
pusha
cmp
jnp
leave
jns
push
xchg
outsb
add
adc
sub
xor
adc
in
adc
std
fucomp
lock
lods
adc
jle
jmp
push
mov
dec
in
popf
xchg
stos
push
add
jb
mov
push
bnd
pop
adc
mov
pop
and
jno
mov
movsb
mov
int3
mov
mov
ss
dec
cli
sub
aad
push
std
in
or
insl
test
cmp
sub
aas
jns
outsl
ret
call
push
bound
dec
jbe
or
adc
or
xchg
ficomps
or
sbb
nop
and
ja
scas
gs
ljmp
cmp
jno
sbb
lret
pop
in
sbb
pop
out
sbb
mov
mov
leave
jb
andl
mov
and
test
mov
dec
data16
xor
addr16
jne
rcrl
push
jne
jge
sub
add
xchg
loopne
out
xlat
and
push
adc
mov
inc
outsb
cwtl
adc
xor
dec
dec
mov
cmc
sub
xchg
incb
dec
inc
out
out
aaa
add
inc
repnz
lahf
fdivrl
jmp
shr
shrl
ret
fwait
xchg
push
test
adc
sub
dec
add
sub
or
inc
push
repz
pop
pop
inc
sarb
add
xor
xor
mov
push
cmpb
ja
cmp
jp
jo
cmp
and
dec
add
pusha
cmp
addb
outsl
icebp
lock
pusha
xchg
and
mov
ret
dec
pop
push
mov
adc
test
inc
popf
jmp
loop
lahf
xchg
mov
and
fldt
push
sub
adc
int
out
int
jbe
insb
or
sub
sub
sub
mov
test
and
ds
or
mov
cmp
dec
mov
mov
mov
js
fcomps
pop
jne
fsubp
push
mov
clc
hlt
mov
push
rclb
push
inc
mov
push
test
or
cltd
cltd
idiv
dec
mov
ljmp
xchg
xor
sbb
shl
push
or
adc
cwtl
aaa
pop
mov
pushf
add
repnz
lods
outsb
sarl
fs
xchg
movlps
push
pop
pop
pop
mov
jmp
fnstsw
enter
xchg
mov
xor
cmp
sub
mov
iret
pop
xor
das
loopne
std
inc
add
dec
pop
jg
push
ficompl
ljmp
adc
xchg
fidivrl
lds
push
jecxz
dec
aad
jmp
xchg
adc
jb
cmpsl
in
push
sub
push
ret
cmp
idivb
pop
sub
and
add
sbb
push
subb
test
mov
inc
mov
popf
ror
wbinvd
push
mov
add
mov
shlb
mov
shl
call
cmp
ficomps
fstps
sub
inc
push
mov
ja
paddd
dec
jb
mov
sub
dec
xchg
movsb
mov
icebp
sbb
sub
inc
push
flds
sti
test
lahf
or
mov
lea
pop
in
cmpsl
cmc
test
ficompl
js
mov
sub
insl
and
imul
pop
inc
cmp
movsb
cwtl
out
mov
and
add
roll
and
fs
xchg
xor
jmp
in
cmp
lahf
loopne
fcom
jne
rcll
mov
sub
xchg
in
loop
lock
or
adc
cld
mov
sbb
jmp
add
mov
stc
jb
xchg
push
cld
hlt
leave
add
out
add
xchg
popa
push
inc
xor
cld
ljmp
fcmovbe
call
cli
pop
push
mov
dec
xor
mov
outsl
push
and
les
outsl
add
fisubs
mov
pop
adc
movsl
pop
test
mov
xchg
mov
popf
hlt
sbb
stc
repz
pushf
and
xor
push
and
jnp
add
mov
ss
add
leave
xchg
xor
mov
les
mov
pushf
jae
xor
jecxz
xchg
push
mov
inc
jmp
pop
add
pop
data16
js
mov
adc
or
stos
push
or
in
mov
add
inc
pop
pop
mov
cs
dec
icebp
test
and
mov
xchg
xor
fiadds
push
ds
sbb
movsl
sbb
or
repz
loope
repz
sbb
les
loope
lock
mov
shr
testb
sbb
out
cmp
rolb
in
mov
adc
mov
enter
test
sahf
in
lods
xchg
ja
loopne
mov
and
orb
les
les
xor
push
daa
mov
xor
adc
inc
mov
lods
xchg
in
cmpsl
mov
push
jmp
sub
shrl
jmp
mov
fs
test
rclb
in
loope
and
lret
out
decb
push
pop
sbb
std
xor
sub
add
sub
int3
test
mov
inc
shl
loope
pop
add
fwait
in
jl
lret
dec
push
sub
mov
push
xchg
cltd
xchg
inc
div
repz
pop
add
loope
bound
loopne
xor
cs
xlat
adc
sbb
dec
mov
jns
arpl
and
sbb
sub
dec
lahf
dec
outsb
mov
add
jp
dec
add
jge
cmpsl
mov
xor
and
push
and
dec
xor
cmc
sbb
or
adc
enter
imul
cmpsb
jl
cmp
sub
jns
push
mov
outsb
mov
add
jmp
pop
out
or
je
xchg
and
fldpi
shlb
std
dec
sub
add
movntps
add
aas
pop
sbb
pop
adc
mov
sbb
rorb
decb
mov
xor
loope
lock
sub
cmpl
ljmp
and
add
test
and
popa
push
negb
mov
ljmp
jmp
xchg
and
out
sbb
popf
jp
orl
or
xor
dec
pop
jg
ja
jbe
decl
mov
pop
popa
jmp
aad
filds
lahf
out
fadds
das
mov
pop
xorl
or
jmp
movl
ja
js
imul
pop
loopne
lock
dec
inc
dec
pop
mov
cli
cwtl
add
insl
fisttps
lret
pop
and
pusha
int3
pop
or
pop
arpl
xor
mov
mov
add
xor
sub
lea
lods
pop
xor
jmp
pop
popa
iret
test
and
push
clc
gs
mov
mov
pop
add
sub
sbb
pop
xchg
pop
jl
adc
je
data16
movsb
or
push
pusha
out
add
inc
inc
jle
les
push
and
xchg
dec
push
lahf
push
mov
cmc
insl
add
or
jg
cmpsb
or
cmp
ljmp
aam
and
push
into
repz
loop
and
movsb
mov
std
and
sub
test
mov
sub
stc
pop
xor
fldl
pop
lock
mov
ret
fs
mov
jmp
shr
repnz
pop
ss
dec
xor
or
dec
mov
nop
add
andps
int3
pop
add
jbe
cmp
sub
pusha
push
or
out
ss
or
pop
mov
incl
jbe
adc
dec
nop
xchg
and
add
dec
pop
and
xor
push
mov
push
push
xchg
cwtl
shlb
out
sbb
fstps
aam
stos
popf
sbb
in
jg
bound
and
add
orl
adc
jbe
dec
mov
and
cmpsl
out
or
mov
jge
fcomp
loop
outsl
add
push
rcrl
mov
daa
jecxz
sbb
push
cmp
dec
mov
xor
push
std
xchg
fwait
int3
test
frstor
repz
mov
xlat
shr
push
sarl
mov
mov
push
out
sbb
and
mov
xchg
stc
ds
shrb
dec
sbb
ja
int
leave
sub
jg
xor
stc
jmp
psrld
popa
imul
cmp
add
rorb
out
pop
push
pop
add
sub
push
pop
out
cmp
add
xor
adc
mov
xchg
lods
mov
outsl
or
xlat
shrb
lds
jne
movsb
dec
jle
pop
daa
stc
push
dec
pop
adc
inc
and
dec
jmp
pop
daa
push
and
sub
xor
inc
mov
mov
fcmovne
inc
xor
cs
or
and
add
mov
jb
orb
jl
shlb
sarb
test
xor
popf
inc
xor
xor
pop
jo
sbb
pop
mov
jmp
cld
pop
push
inc
sub
xor
into
xor
pusha
jg
push
addb
adc
loope
pop
mov
xchg
pop
popf
fneni(8087
add
repz
dec
or
scas
pop
jo
lds
fistpl
rcrl
pop
mov
adc
dec
jne
sub
call
pop
ja
paddw
push
test
out
dec
lods
push
test
imul
pop
test
lods
cmc
arpl
mov
cmp
ret
push
push
les
jmp
test
iret
aas
lock
inc
pop
jge
je
std
mov
jmp
ljmp
push
or
cmp
sbb
test
or
or
loope
xchg
idivb
push
jmp
hlt
fs
ret
out
jmp
lods
mov
push
mov
mov
imul
adc
hlt
jmp
data16
adc
or
ret
mov
insb
sub
pop
add
and
in
rorl
imulb
dec
push
pop
dec
repz
daa
ljmp
dec
sbb
jmp
aad
test
cmp
adc
dec
rol
adc
push
mov
das
pop
xor
aas
and
insl
out
cmp
pop
mov
or
jns
shlb
push
test
adc
jnp
clc
dec
jne
pop
or
xchg
bound
push
cmp
mov
rorl
arpl
mov
jne
lock
cli
sub
jecxz
test
add
mul
mov
push
adc
jae
and
push
mov
jmp
hlt
inc
cmc
pop
push
ja
cmpxchg
push
scas
mov
lds
pop
mov
push
repnz
popf
sbb
pop
inc
cmp
and
pop
push
je
adc
movsl
negl
and
loop,pn
xchg
cld
pop
add
cmovg
sbb
jmp
pop
fbstp
pop
pop
push
xlat
out
lret
pop
sbb
xor
clc
inc
jmp
dec
in
fsubr
jmp
sbb
pushf
and
sub
adc
das
test
pop
jg
push
jbe
jnp
xchg
shlb
add
or
push
shrb
es
dec
aaa
or
pop
add
inc
incl
pop
or
ljmp
sahf
add
xchg
pop
and
jo
pop
mov
shrl
mov
icebp
pop
add
imul
sub
pop
push
push
icebp
pop
cmpsl
push
add
or
cs
nop
jno
or
jns
outsl
xor
mov
add
jg
lods
push
add
jo
dec
mov
shrb
jmp
push
les
push
test
cmp
mov
jmp
cltd
call
lahf
sub
jo
in
adc
stos
mov
and
jg
pop
sub
pop
add
push
lock
sti
sub
loope
add
decl
push
mov
not
jmp
scas
adc
xor
ja
or
jmp
cmpsl
insl
cli
sub
or
pop
jp
jo
cwtl
adc
out
or
push
sub
cmc
ja
and
add
rclb
ficoml
push
pop
pop
or
mov
jno
add
lods
or
push
neg
cmp
lcall
mov
shrb
inc
mov
mov
pop
movsl
jmp
out
or
dec
test
xor
fsts
mov
push
in
push
daa
loope
mov
lods
fsubrl
imul
dec
adc
adcb
mulb
mov
or
movsb
adc
push
push
repnz
mov
push
xchg
cmp
or
jge
stos
add
sub
sbb
xchg
ljmp
adc
scas
xchg
outsb
arpl
or
cmp
pop
sbb
cmp
pushf
fs
push
mov
push
mov
mov
pushf
push
jmp
pop
jecxz
dec
sbb
stc
jbe
dec
mov
insb
cmpsl
mov
ret
add
add
or
in
push
xchg
jle
add
push
aaa
sti
cmp
out
test
test
ss
movsb
enter
or
sub
fcmovb
mov
in
ljmp
aas
test
fdivrl
leave
dec
pop
adc
jmp
cmc
fistpl
jae
push
jnp
fstpl
cmp
scas
enter
inc
dec
push
neg
adc
xchg
and
mov
out
inc
sbb
fs
ret
insl
mov
sub
cmpsl
addr16
orb
in
xor
loope
insl
repnz
xchg
fsubrs
xchg
dec
cmp
sbb
and
shll
int
cmp
dec
repz
fstl
outsb
sub
xor
sub
out
dec
js
fmuls
adc
pop
push
inc
rsm
pop
and
mov
or
cmp
add
mov
lret
repz
pusha
rcrb
inc
cmp
pop
cltd
in
dec
subb
inc
add
sub
js
and
sub
js
cmp
and
lds
pop
push
add
daa
mov
testb
int3
mov
das
jnp
dec
xlat
mov
test
add
mov
mov
inc
popa
sbb
daa
int
mov
jnp
sub
inc
popa
leave
xchg
jmp
mov
cld
pop
popa
or
mov
popa
push
and
sbb
sub
push
or
bound
push
and
cmc
hlt
scas
aaa
add
or
add
add
shl
sahf
mov
fimull
xorl
pop
xchg
not
or
sahf
jle
jge
ret
inc
lods
sub
push
test
adc
push
xchg
rcrl
dec
pusha
outsl
cmc
push
std
mov
push
shrb
js
sbbl
dec
outsb
pusha
lret
and
inc
neg
pop
test
jl
jbe
cld
ds
push
pop
cmp
xor
lods
cltd
jl
jle
das
stos
push
ret
testl
outsl
lret
mov
movsl
mov
xor
push
mov
and
jne
addr16
xor
cmp
pop
jns
sarb
adc
mov
push
stc
pop
mov
ret
push
push
test
fwait
cld
pop
dec
sti
iret
mov
and
push
jge
dec
scas
push
in
sbb
xlat
inc
and
push
mov
imul
cli
popa
mov
pop
jns
dec
sub
push
jb
roll
sbbb
aad
mov
cmpsb
shr
push
add
lods
dec
insb
nop
out
into
dec
aaa
push
add
push
push
inc
add
push
push
cwtl
mov
or
in
and
dec
inc
cmc
dec
in
movsl
push
jmp
mov
push
xchg
loop
ja
or
stc
xchg
lods
jne
push
aaa
pop
adc
sub
jmp
push
mov
push
adc
xor
jle
int
cmp
shll
add
shr
dec
mov
jg
pop
mov
mov
arpl
xor
dec
pop
jne
adc
and
sbb
leave
scas
ss
push
int3
in
cwtl
stos
dec
push
shlb
jns
and
add
mov
shrb
jl
xor
rorl
sub
mov
or
push
push
pop
shl
add
cmpsl
mov
leave
adc
test
and
pusha
fstps
or
or
bound
add
or
stos
push
mov
or
pop
les
add
mov
test
adc
push
cmp
jmp
ljmp
inc
adc
mov
and
jge
and
jmp
cmp
imul
cld
mov
dec
insb
ret
add
mov
movsb
mov
scas
in
lret
fiadds
test
lock
pop
xchg
lret
bound
mov
out
cli
mov
pop
dec
leave
scas
roll
cmp
enter
push
aaa
nop
decb
sbb
adc
idiv
xor
pop
mov
and
pop
jmp
xorl
add
inc
push
orb
gs
push
or
shlb
lret
adc
sub
and
pop
inc
inc
xor
xor
pop
xor
and
and
fbld
add
into
addb
add
int3
ftst
push
push
push
scas
mov
fildl
mov
xchg
or
or
push
push
push
jb
or
aas
in
ja
mov
mov
fs
cmpsl
mov
clc
scas
repz
or
mov
shrb
lret
adc
add
stos
pop
repz
add
push
sub
add
push
add
jg
mov
ret
inc
out
jge
cmp
shlb
jmp
test
stos
jge
cs
or
xchg
cmp
mov
ret
clc
or
mov
cmpsl
push
dec
daa
mov
cmp
dec
dec
popaw
cmp
xor
pop
cwtl
add
dec
call
cwtl
or
aaa
xor
add
inc
push
push
daa
push
jmp
sbb
mov
rclb
pop
flds
jmp
pcmpgtw
pusha
icebp
aad
and
cmp
rcll
cmp
cmp
and
add
mov
jae
pop
mov
pop
js
pop
cwtl
mov
mov
insl
or
jbe
in
fs
push
pop
negl
stc
adc
and
nop
jo
push
jns
daa
andb
sub
cwtl
adc
and
xor
pop
sub
mov
sub
fimuls
pusha
or
arpl
jo
pop
push
dec
push
pop
pop
pop
jg
sub
mov
jmp
test
loope
xor
xor
xchg
sub
sbb
orb
push
sbb
pusha
call
int
xlat
insl
jmp
mov
mov
negb
js
pop
or
sbb
push
bound
fnstenv
mov
shrl
or
outsb
loopne
mov
dec
sarl
out
out
push
jno
adc
xor
out
aam
push
ds
add
xor
mov
adc
mov
cli
scas
push
stos
add
mov
and
ret
testb
push
jmp
sbb
mov
pop
and
add
and
adc
mov
cs
add
mov
adc
xor
jmp
jp
xchg
jge
testl
xor
mov
je
test
scas
sub
dec
lods
mov
sub
push
negl
adc
xor
repz
jg
cltd
lods
aad
aam
xor
cs
or
movsb
imul
and
call
push
push
orl
push
cmp
gs
push
pop
add
daa
dec
shll
pop
push
push
lret
pop
loopne
xchg
mov
push
mov
add
cmp
push
outsb
sub
loop
sub
adc
sub
jle
and
mulb
int3
ljmp
jb
xor
pop
sub
push
dec
xor
jmp
add
iret
adc
daa
inc
sub
cmp
or
ljmp
jl
pop
push
jno
add
lock
scas
push
rcrl
test
push
dec
ja
aad
jns
dec
or
cltd
push
pop
pusha
addb
stos
push
cmp
lcall
sub
sarl
push
mov
mov
out
push
lcall
ljmp
push
pop
add
cmpsb
outsl
in
int3
test
es
sbb
in
jnp
mov
cmp
sbb
mov
jecxz
or
push
popf
push
add
xchg
adc
lret
add
faddp
pop
dec
and
and
add
cmp
add
pop
add
inc
or
stc
out
jnp
or
jmp
jmp
test
mov
movsb
xchg
in
inc
cmp
rcrb
sbb
fs
in
daa
icebp
mov
push
out
mov
jmp
and
mov
jne
fstpl
jmp
imul
dec
cmp
cmc
pop
xorb
jns
push
enter
jmp
inc
jle
mov
les
adc
add
jle
fldcw
jo
bound
cwtl
jo
or
jne
dec
subb
leave
scas
and
and
jmp
push
cmpsl
add
pop
or
xor
pop
clc
lahf
ficoms
xor
pop
or
lcall
fsubrs
nop
loope
push
push
cmpsl
ud0
mov
mov
and
mov
ds
or
push
jecxz
xor
loopne
mov
fistpll
orb
and
daa
mov
roll
mov
add
push
shl
add
es
xchg
pop
add
mov
mov
pop
xor
enter
lret
clc
lds
sbb
or
pop
mov
mov
addr16
xorb
bnd
pop
pop
imul
addr16
jg
std
int3
cmp
pop
call
nop
add
push
lds
and
push
adcb
cmpsb
dec
movsl
movsb
pop
and
aad
pop
lods
push
pop
das
mov
add
xchg
mov
jb
xor
cmpsl
inc
ret
and
add
ljmp
inc
jmp
pop
mov
lock
mov
shl
loope
not
mov
adc
sub
mov
mov
shl
loopne
mov
stos
lahf
xor
jne
lods
jmp
push
add
das
cltd
jge
out
add
mov
mov
jge
out
inc
pop
das
inc
fs
mov
popf
out
adc
ret
push
adc
out
pop
push
in
mov
ds
pop
and
out
and
mov
pusha
jno
andl
inc
cli
and
int
mov
sahf
loop
jns
push
sub
or
into
es
mov
fcmovne
jg
shrb
jne
push
mov
sarb
fists
pop
push
int3
les
ret
ljmp
push
hlt
ljmp
sbbl
add
adc
push
cli
imul
pop
or
daa
push
xor
rcr
mov
and
fisubrl
repnz
sub
roll
mov
mov
add
mulb
aam
add
in
pushf
outsl
fldt
add
push
ljmp
mov
jmp
add
jge
out
add
adc
cmp
call
leave
cmp
mov
add
mov
imul
rcll
jmp
dec
clc
fwait
imul
fnsave
cmp
jne
loop
adc
mull
stos
cmp
fldl
cmp
xchg
push
and
pusha
jne
insl
jnp
jg
and
inc
mov
test
in
jo
xor
mov
not
pop
mov
fisttpll
aaa
ja
add
shll
add
push
mov
and
jmp
iret
add
out
or
adc
jo
xchg
ds
arpl
into
cmp
pusha
and
out
adc
push
clc
add
jmp
rcrb
jo
add
inc
cli
push
jno
sub
pop
pop
cld
pop
jmp
lds
pushf
pop
add
cltd
fcmovne
and
in
in
adc
rol
imul
sbb
or
adc
lcall
stos
lret
stos
sub
pop
sti
or
in
call
pop
or
push
inc
adc
xchg
jmp
jno
daa
fidivrs
sub
xchg
enter
test
add
scas
lcall
rorb
xchg
adc
xchg
inc
pop
int
adc
rcl
lret
add
push
nop
add
inc
sahf
push
ja
inc
xchg
sbb
xchg
lahf
and
cwtl
cmp
int3
sbb
cmpsb
pushf
mov
sub
les
xor
add
stos
add
push
xchg
adc
dec
clc
push
enter
add
fidivl
or
test
pop
xchg
pop
je
mov
dec
insb
ss
lea
mov
shl
push
aad
xchg
adc
xchg
aas
orb
add
dec
jmp
xchg
les
xchg
rolb
xchg
pusha
push
xchg
inc
das
adc
xchg
dec
imul
test
xor
cs
roll
mulb
icebp
jo
int
push
or
adc
jge
push
orb
insb
inc
xchg
push
fcoml
mov
pop
sbb
addl
jge
dec
fstl
sub
dec
orb
xchg
daa
cmpsb
idivb
js
roll
std
push
dec
mov
sbb
push
sbb
mov
or
jge
jnp
xor
cmp
out
xor
pop
pop
clc
add
sbb
ds
cltd
inc
fsubs
sbb
repz
push
mov
push
adc
pop
mov
mov
pop
xor
in
mov
add
push
add
add
pop
cmp
adc
cmpsl
mov
fmull
mov
cld
dec
adc
push
js
nop
xor
mov
mov
dec
mov
out
in
lret
dec
inc
mov
daa
orb
and
sarb
xor
daa
iret
sub
xor
add
fistpl
push
and
enter
pop
add
jle
out
or
xchg
mul
dec
mov
or
adc
jnp
sbb
loop
scas
mov
cltd
dec
push
outsb
ss
mov
mov
test
cmp
loope
ds
imul
test
jecxz
repnz
xchg
push
leave
cmpsb
scas
ret
push
fwait
xchg
sub
je
imul
ror
scas
outsl
nop
mov
add
dec
sub
rcl
test
cmp
ss
jo
push
xchg
popf
mov
jge
mov
adc
inc
dec
les
pusha
pop
dec
push
push
in
xchg
sub
xor
or
xchg
sub
jne
and
sbb
dec
lock
add
incl
pop
in
mov
cwtl
shll
jmp
inc
mov
movsb
add
cmpsb
dec
outsb
lea
add
mov
push
jmp
xor
icebp
test
push
scas
pusha
mov
lock
or
mov
jecxz
add
lods
test
les
mov
cmp
push
test
dec
into
dec
xchg
sbb
mov
pop
les
push
incl
adc
lock
and
fstps
inc
ror
add
pop
js
jmp
adc
int3
outsw
enter
jecxz
lods
fbld
das
movsb
pop
ret
cmpsb
mov
push
pop
mov
addr16
movsb
cmp
lock
jg
sbbl
daa
push
xlat
outsl
out
mov
xchg
dec
mov
push
pop
imull
add
pop
scas
loope
orb
or
jmp
jge
push
jnp
or
dec
pop
in
mov
mov
xor
xlat
stc
xchg
mov
aaa
inc
cmp
xchg
pop
popa
cmp
dec
shrb
pop
fcmovnb
lock
jmp
cmp
jnp
inc
sarl
sbb
add
xor
leave
push
roll
push
xlat
push
cmp
shll
adc
inc
popa
cmc
lret
roll
jno
inc
jns
xor
inc
jp
movsl
stc
cli
mov
sbb
cmc
or
pop
pop
ret
lcall
cltd
mov
xor
pop
cmp
sbb
clc
jns
push
jns
call
ror
mov
data16
mov
add
or
hlt
lea
mov
sub
or
mov
iret
sbb
outsb
in
or
sbb
decb
adc
fmull
lret
mov
pop
cld
mov
movsb
or
xchg
shl
adc
mov
sbb
enter
dec
jge
je
push
adc
es
sub
andb
jmp
sbb
xor
or
push
or
inc
push
outsl
pusha
std
dec
cs
cli
arpl
jmp
jo
out
cmp
mov
push
jmp
lods
sub
or
ret
push
jo
testb
push
test
add
mov
mov
int
dec
mov
jp
cmp
mov
add
sbbb
mov
in
or
jg
in
mov
shl
sub
inc
movsb
add
mov
jp
aad
in
dec
add
sub
dec
mov
mov
pushf
mov
repz
out
cltd
pop
and
fiadds
loop
mov
jle
push
dec
cmp
or
xlat
pop
pop
dec
mov
jae
cltd
js
mov
dec
add
mov
icebp
scas
sub
sub
inc
xchg
out
jne
gs
ljmp
jmp
gs
out
or
test
push
push
repnz
movsw
add
jmp
jns
or
xchg
push
sbbl
jmp
xor
or
pop
or
jmp
push
sbb
aas
movsl
sub
inc
push
xchg
and
and
icebp
ljmp
push
fs
scas
inc
xor
mov
mov
movsb
xor
test
dec
inc
mov
sub
push
loopne
int
add
add
sub
or
fs
add
or
dec
mov
ljmp
cld
mov
add
int3
lods
mov
jmp
pop
lds
mov
cld
loop
add
popf
ja
adc
mov
clc
in
push
sub
push
and
lds
cli
add
mov
jmp
mov
movsb
mov
add
das
mov
mov
mov
adc
lea
popf
mov
mov
sarb
lret
jne
out
lahf
aam
adc
sub
enter
jecxz
and
loop
data16
and
xor
adc
cmp
sarl
xor
stos
inc
rclb
sub
push
cltd
out
xor
cli
cmpl
cmpl
repz
xlat
mov
jns
test
mov
rcr
dec
std
mov
ret
ret
std
push
dec
sub
add
in
sub
pop
clc
dec
cs
test
lea
insb
cmp
jmp
dec
lods
add
inc
xchg
mulb
jg
dec
jb
sarl
lock
cli
jg
fmull
stos
mov
xor
fs
out
dec
mov
js
sub
gs
repz
jmp
jg
push
cmpsb
addr16
push
push
and
add
fildl
jae
pop
shll
lods
add
adcl
je
sar
dec
add
adc
testl
nop
fsin
xor
mov
gs
stos
fstp
add
ret
filds
nop
call
push
push
jne
pop
and
loop
ficoms
cmp
dec
pop
int3
test
pop
lcall
icebp
in
in
jns
jmp
mov
imul
mov
sbb
orb
push
nop
pop
push
pop
cmpsb
jne
inc
cmpl
push
gs
add
and
out
test
and
in
cmp
arpl
push
leave
add
cmpsl
xor
pusha
sub
cmp
or
jo
sahf
adc
jmp
add
ret
and
fadds
repnz
pop
pushf
ret
pop
jge
dec
pusha
aam
adc
ds
xchg
pop
insb
jo
sub
inc
xchg
adc
pop
dec
fwait
pop
mov
add
pop
inc
mov
ficoml
pop
idiv
push
push
daa
inc
jecxz
enter
loope
add
or
add
jl
jge
push
cmp
or
je
inc
mov
insw
jo
xchg
jne
int
mulb
push
lods
loopne
aad
mov
mov
xchg
ret
and
popf
jl
jp
xchg
sub
mov
inc
dec
sbb
outsl
pop
or
and
and
sbb
xor
and
adc
negl
lret
gs
test
or
stos
add
or
daa
or
xchg
or
or
les
mov
sub
jns
inc
mov
dec
or
xor
sub
cmc
pushf
pop
xor
add
data16
or
cmp
pop
push
aaa
push
sbb
scas
test
cltd
sbb
out
add
popa
and
rcrb
adc
push
popa
adc
and
add
ss
daa
mov
arpl
sub
add
adc
cld
sbb
sub
xchg
mov
lahf
push
sbb
test
bound
les
or
lcall
and
sub
loopne
and
and
jmp
and
pop
cmp
adc
mov
lcall
sub
cmp
subl
mov
add
adcl
jae
out
jg
mov
test
mov
mov
jle
sbb
jno
add
clc
mov
push
cmp
aam
cmpl
or
mov
test
xor
push
inc
outsl
filds
testb
inc
xchg
mov
cmp
inc
es
inc
mov
jo
les
sbb
stc
jge
mov
icebp
or
pop
lahf
data16
and
push
xor
pop
or
add
xchg
sbb
cmp
mov
cwtl
repnz
movups
and
scas
mov
mov
cmp
cltd
repz
xchg
adc
inc
in
jb
or
rol
std
sahf
inc
pop
inc
test
and
or
ret
dec
sbb
in
icebp
sbb
neg
push
lds
ret
stos
adc
shrb
ficoms
inc
adc
outsl
popa
xchg
movb
or
and
sbb
pop
pop
aas
sub
pop
fistpl
loopne
add
loop
or
nop
test
data16
add
je
pop
push
mov
push
mov
faddl
jecxz
and
add
xchg
push
mov
mov
aad
jmp
mov
addl
loop
add
daa
jmp
cmp
add
add
inc
sub
jb
xor
pop
mov
das
add
jge
inc
pusha
test
sbb
cmc
lcall
in
and
ret
xchg
popf
jecxz
and
cwtl
push
shrb
pop
push
sbb
mov
inc
jb
jl
sub
jmp
dec
and
push
or
adc
icebp
push
mov
xor
lea
add
jmp
cwtl
rcrb
movsb
mov
cmc
repz
jmp
cwtl
daa
fdivrs
push
inc
inc
out
add
inc
lcall
cmp
and
jmp
loop
cmp
dec
stos
xor
cltd
movsl
adc
lcall
xchg
mov
jl
sub
int3
add
and
in
or
inc
cmp
pusha
lods
and
imul
repnz
aad
mov
push
rclb
pop
or
js
dec
jnp
jle
js
xor
and
cli
popa
pop
ret
aam
jmp
mov
push
js
or
adc
pusha
aam
mov
sbb
inc
aam
out
lret
test
cli
lock
pop
dec
add
mov
dec
jo
push
aas
mov
testb
and
out
rclb
add
jmp
sbb
xchg
jae
pop
pop
adc
shlb
mov
inc
mov
add
pop
aad
jle
addb
pusha
pop
out
insb
sbb
out
adc
das
pop
jo
pop
into
mov
out
aas
fnstcw
out
sbb
dec
push
sub
add
add
cmpl
mov
jmp
in
cld
fnsave
jp
sbb
test
notl
hlt
jo
jno
add
pop
and
add
sbb
stos
jmp
mov
dec
add
out
xlat
rcrl
sbb
mov
and
mov
xor
pop
das
lret
add
jle
or
js
jo
push
push
mov
ljmp
les
xor
cmp
rcrl
pop
xor
xchg
dec
mov
popf
sub
mov
inc
or
lret
daa
and
jae
out
sbb
test
mov
jmp
ret
sbb
cmp
and
test
push
stos
ror
push
movsl
cltd
and
test
xchg
sub
ljmp
mov
add
int3
or
pop
add
inc
stos
cmp
jge
push
mov
push
cli
mov
dec
push
sub
sbb
mov
add
xor
mov
cmpsl
pop
jl
jbe
push
scas
mov
lret
mov
or
inc
dec
or
ss
jae
adc
mov
mov
test
shlb
and
cmpsb
mov
or
repz
cwtl
mov
xchg
pop
pushf
push
cmp
fisttps
daa
inc
jl
pop
ror
mov
add
popa
sub
outsb
nop
cmp
loopne
das
jl
ja
mov
adc
lods
and
add
not
jns
sarb
inc
out
and
push
push
das
and
mov
xchg
ret
pop
lahf
sub
or
xor
push
mov
sub
push
sbb
adc
lret
ja
push
cmp
fs
pop
leave
push
inc
xor
pusha
pop
out
pop
sub
das
pop
lret
in
in
loopne
sbbl
or
sbb
push
testb
mov
jmp
idiv
in
push
and
adc
aas
int3
dec
pusha
mov
push
mov
pop
dec
addb
test
icebp
repnz
dec
jo
jmp
hlt
pop
test
shl
cltd
mov
jmp
das
mov
addl
adc
dec
clts
into
push
mov
test
mov
adc
push
pop
inc
daa
jns
cmpb
in
cltd
pop
ds
push
add
xor
addl
inc
loopne
pop
ja
pusha
loop
lea
push
or
nop
lcall
lds
pop
add
mov
jmp
inc
or
aas
mov
sbb
add
add
pop
pusha
jmpw
inc
xor
loop
or
push
fs
cmp
test
and
pop
or
pop
clc
into
cwtl
test
insb
push
lods
cmp
ja
in
shr
push
mov
xor
cmp
fs
mov
movsl
inc
xlat
into
add
xorb
rcr
add
dec
or
sar
roll
pop
mov
aas
mov
pop
test
xor
mov
out
sub
add
mov
std
adc
cmp
icebp
mov
adc
fwait
lret
das
xchg
enter
ret
pop
jnp
add
push
bound
push
in
dec
and
and
add
adc
inc
push
and
jne
jl
ret
idivl
hlt
xorb
aad
pusha
rcrl
inc
mov
add
jmp
sbb
cs
pusha
dec
xor
and
mov
pop
ja
scas
add
movsb
pop
adc
or
sub
push
ljmp
incl
fildl
scas
push
cld
scas
scas
jne
addr16
pop
sub
or
sub
push
stc
mov
jns
push
pop
lcall
pop
add
iret
cmp
loope
pop
cmp
adc
lods
lds
stc
icebp
inc
lods
sbb
outsl
mov
daa
mov
inc
xchg
out
or
mov
adc
jle
lret
xlat
jmp
push
dec
push
jmp
adc
mov
jmp
pop
mov
mov
or
xor
push
add
xchg
sbb
add
sbb
subb
add
sub
pusha
int3
int3
add
orb
pusha
ds
push
sbb
clc
jo
inc
pop
xor
lods
pop
pop
push
cmp
sub
or
pop
rcrb
outsb
adc
pop
clc
mov
test
jl
mov
mov
scas
add
fwait
mov
rol
in
cmc
cld
aas
fisubl
inc
ja
test
pop
push
sar
mov
mov
mov
jo
jne
jb
mov
clc
je
stos
jb
inc
les
cmc
pop
sbb
xchg
xor
mov
push
jnp
jle
dec
stc
xlat
pop
fnsave
clc
mov
es
out
outsl
repz
test
or
test
dec
testl
es
xchg
sbb
jecxz
repz
xor
pop
xchg
add
shr
mov
xlat
jne
jmp
sub
mov
or
mov
jmp
xchg
sbb
mov
ficompl
or
pop
out
cmp
pop
aad
lods
add
sub
push
push
jmp
cmpsl
xchg
add
cmpsb
mov
pop
xor
leave
ret
and
push
inc
xchg
inc
lea
xchg
push
pop
or
cmp
dec
add
jno
lock
and
addr16
nop
jno
fsubs
sar
or
push
jmp
nop
js
sub
in
mov
or
push
adc
arpl
cmp
sub
pop
mov
or
jo
jne
add
cmp
xchg
aad
fiadds
shr
adc
inc
clc
mov
sub
push
add
bnd
adc
cmpsl
inc
dec
imul
int3
mov
pop
jmp
sub
xor
add
xchg
sbb
mov
decb
pop
push
sub
ret
lods
pop
xchg
cmpb
xchg
daa
add
or
sub
sbb
dec
lret
pop
push
les
shlb
push
dec
es
or
inc
sbb
aaa
dec
testl
add
pop
lods
dec
add
inc
repz
jmp
mov
xor
loope
mov
adc
xor
pushf
add
and
jmp
rolb
ret
push
pop
xchg
xchg
and
mov
mov
repz
neg
addb
inc
pop
push
ja
mov
fldl
mov
jbe
fsts
add
sub
xor
mov
add
pop
jo
jge
insb
lods
or
jae
or
pop
sbb
je
push
cmp
jl
or
mov
add
je
and
inc
clc
je
pushf
repnz
mov
push
and
pop
jp
add
out
mov
andb
add
sub
sbb
mov
cmp
in
push
mov
clc
js
sbb
add
addb
dec
enter
jmp
or
popf
push
sub
jmp
or
mov
or
gs
daa
sbb
pop
or
cs
jp
mov
pop
adc
xor
sub
int3
aas
jmp
into
jp
pop
stc
push
test
daa
jmp
das
push
mov
loope
enter
add
pop
mov
rcll
mov
push
mov
add
push
lahf
jns
and
add
cmp
incb
icebp
stos
aas
push
sub
or
or
mov
mov
leave
daa
pop
sbb
push
pop
in
sub
adc
hlt
push
pusha
push
mov
sbb
loop
int3
ret
cld
sbb
sbb
push
pop
push
push
jns
jo
icebp
rcrl
xor
movsl
cmc
aas
mov
imul
fsubrl
jae
push
mov
stos
mov
jmp
lret
imull
jne
sub
shrb
sbbb
in
jmp
loope
lock
adc
aad
add
add
sub
das
ss
dec
lods
pop
push
add
mov
xor
repz
dec
sub
insb
or
pop
or
mov
pop
inc
jg
outsl
add
test
std
jo
repnz
das
popa
xorb
sbb
mov
jmp
stc
sub
push
dec
pop
ret
push
push
add
ljmp
add
and
out
push
push
adc
push
jnp
daa
dec
out
xchg
sbb
in
loop
mov
inc
or
icebp
or
xchg
xor
mov
nop
jl
jmp
mov
scas
pop
inc
ret
sub
xlat
cmp
dec
rorl
outsb
add
fisttps
sar
lcall
mov
testl
les
adc
mov
jno
sub
in
ja
ret
test
mov
ss
mov
in
sbb
and
or
dec
enter
iret
imul
mull
xchg
adcb
into
fcomps
jb
popf
sbb
ret
inc
lcall
jge
fucomi
mov
mov
pop
fwait
scas
cwtl
test
js
sbb
push
cmp
lahf
add
popa
pop
add
push
push
inc
inc
mov
inc
add
pop
sub
xor
dec
or
jo
jmp
or
loopne
int
push
out
mov
push
push
loopne
inc
adc
nop
jge
push
popf
ljmp
push
mov
bound
pop
add
in
shrl
stos
dec
sbb
addr16
add
scas
dec
fstps
frstor
push
pop
jle
push
jge
inc
pop
jmp
dec
shlb
inc
jl
sub
pop
and
cmp
fimuls
mov
fistps
mov
add
negb
sub
sbb
add
cmp
pop
lcall
mov
inc
jmp
dec
fsub
aad
inc
in
outsl
or
push
daa
fimuls
lock
cmp
jmp
int3
incl
das
out
add
mov
push
rcrl
xor
pop
cs
stos
mov
push
push
pop
push
push
and
jo
or
sbb
mov
sbb
into
lods
push
mov
push
push
cmpl
xchg
add
xchg
sbb
add
xor
outsb
cmp
out
jnp
mov
out
pop
cmp
pop
out
gs
cmc
dec
scas
push
movsb
adc
hlt
add
inc
sub
mov
jl
fsubl
dec
xor
mov
rcl
add
int3
out
jmp
or
jne
lock
and
and
out
ret
push
mov
ds
push
rorb
jo
sbb
mov
dec
or
inc
jmp
neg
push
push
and
dec
and
and
add
or
out
jno
and
mov
aaa
movsl
pop
sbb
cwtl
test
dec
cltd
adc
fists
jmp
add
adc
mov
cmp
cld
mov
and
dec
push
mov
jmp
arpl
pop
xor
pop
or
push
aad
out
or
movsl
xor
es
push
cmpb
stos
mov
shll
mov
or
mov
cs
xchg
dec
stos
dec
rcrb
jno
bound
fstps
lcall
push
mov
decl
cltd
loopne
in
cwtl
inc
cmpsb
pop
push
pop
mov
cmc
pop
mov
or
ja
add
aam
ljmp
dec
push
adc
lcall
hlt
adc
lock
push
or
enter
out
xor
rorb
cmp
push
sbbb
das
sahf
fdivrp
xor
fiaddl
jg
arpl
push
sub
dec
pop
jmp
or
test
pop
loopne
mov
pushf
and
cmp
mov
jmp
out
push
adc
add
in
mov
lock
daa
mov
jo
into
pop
orb
cmp
lods
cmpl
push
out
jmp
xorb
sub
push
add
pop
or
jns
out
stc
sub
pop
mov
dec
inc
pop
call
lea
jl
xchg
xor
enter
cs
cmp
push
push
adc
cwtl
cmpsl
xor
sbb
jle
dec
decb
dec
sbb
mov
push
add
sbb
shl
jno
push
testb
fsubl
sub
cs
outsb
int
jmp
mov
ret
pop
lds
inc
fistl
add
cmp
out
push
fnstsw
mov
push
inc
add
sub
and
mov
imul
addb
xor
push
push
cs
xor
pop
mov
add
popf
mov
jnp
add
ret
sub
or
cmp
imul
mov
or
inc
neg
push
mov
sub
jmp
xor
cmp
pushf
inc
mov
sbb
cli
mov
add
in
cli
add
jl
cmp
pop
js
add
jbe
xchg
iret
push
dec
std
adc
adc
arpl
imul
out
or
or
add
dec
jae
xchg
mov
jno
mov
mov
pop
icebp
xchg
mov
jns
fs
push
mov
cmp
repnz
jmp
sub
pop
testb
dec
pop
nop
das
les
push
arpl
jns
dec
jg
pop
jl
mov
jbe
in
testl
fdivp
jnp
inc
dec
cmpb
sub
xor
cli
inc
xchg
jge
loope
push
mov
inc
push
rolb
push
lret
aaa
mov
out
mov
dec
cmp
mov
dec
xchg
cli
decb
jecxz
repnz
lods
push
jmp
jl
push
cli
mov
push
mov
inc
lret
out
lock
shl
loope
xchg
and
push
push
sub
lretw
out
rclb
pop
adc
push
adc
rolb
idivb
cmc
jp
or
cmp
ds
test
xlat
or
push
insl
sahf
sbb
out
dec
add
cli
add
fmull
pop
cmc
mov
jmp
push
mov
add
xchg
repnz
mov
jne
out
adcb
jle
mov
add
sbb
ret
pop
inc
mov
adc
aaa
rcl
sarb
xor
or
pop
mov
out
pop
xor
sub
adc
or
loopne
idivb
sub
ficoms
push
mov
arpl
pop
and
adc
push
push
scas
rorl
repnz
neg
lds
add
int
nop
cli
mov
pusha
dec
enter
rorb
jg
jmp
inc
add
xchg
dec
das
jmp
push
push
dec
mov
test
dec
cli
out
scas
pop
shlb
xor
cmpsl
dec
push
rcr
pop
push
jnp
test
pop
mov
imul
out
push
sbb
sub
dec
pusha
mov
rolb
sti
adc
and
stos
add
inc
pusha
pop
mov
jmp
scas
add
mov
mov
xor
push
lret
add
adc
sub
mov
dec
roll
pop
jmp
push
adc
in
dec
scas
test
je
cmp
sub
xor
dec
ljmp
popa
stc
jne
cmc
pop
popf
pop
add
insl
sbb
clc
sbb
jno
adc
loope
in
adc
mov
or
loopne
inc
xorb
or
pop
xorb
jmp
cmp
bound
fstpl
jle,pt
xchg
lret
or
bound
enter
das
sub
push
xchg
jmp
repz
sub
inc
jecxz
loopne
fisubs
punpckhbw
in
jnp
loopne
or
inc
popa
push
and
push
add
push
jmp
or
cmp
lea
xchg
out
testl
inc
jno
dec
jg
inc
jge
rcr
xchg
xchg
xor
mov
mov
stos
push
xor
jne
or
testl
out
add
push
sbb
cmp
or
xchg
cmp
test
push
cld
and
inc
out
inc
add
rol
adcl
popa
jmp
nop
inc
out
pop
insb
daa
rcrb
clc
pop
push
or
push
cmpsb
dec
pushl
cld
add
or
dec
push
inc
test
adc
push
dec
mov
dec
stc
add
inc
pusha
out
xor
call
out
insl
out
lods
fcoms
icebp
loop
xor
lcall
insb
mov
rcrb
data16
xchg
cli
cwtl
xchg
lcall
cmp
aas
in
add
outsb
dec
jns
test
call
push
mov
std
pop
mov
or
into
ficompl
sbb
pop
xchg
jo
mov
or
push
mov
adc
add
adc
cld
addl
or
jae
lret
incl
ja
jmp
xor
lea
inc
pop
stos
adc
shlb
lock
mov
mov
push
inc
add
or
jno
in
ss
cmp
dec
out
adc
sti
xchg
test
andb
inc
jns
in
or
int3
and
push
test
dec
mov
lcall
mov
fcmovne
dec
and
and
inc
or
or
or
jnp
push
push
mov
fldl
inc
jne
ret
sub
cs
xchg
fidivrl
ret
stc
push
jge
or
cmp
cmp
jge
inc
or
int3
or
push
sbb
push
int
pusha
mov
push
and
sub
or
js
inc
lock
jmp
neg
jp
mov
sub
push
xchg
dec
imul
dec
orb
jge
int
addr16
not
test
lds
mov
into
ja
jb
push
nop
movsl
jge
sbb
xor
ret
inc
test
popf
mov
or
push
aas
dec
pop
sub
lcall
pop
test
adc
fndisi(8087
and
cli
lret
and
mov
push
jp
xor
xor
add
pusha
adc
fldl2t
cmp
pop
lods
lock
xchg
fldenv
or
addl
jmp
repnz
mov
adc
outsb
jg
arpl
push
out
pop
add
dec
sbb
out
xchg
push
das
in
movsb
in
hlt
jg
cmp
sub
testl
aaa
insb
jae
sub
in
xchg
aas
test
xchg
out
insb
jmp
inc
xchg
lds
sti
push
call
mov
mov
cvtps2pd
pushf
in
or
pushf
cmpsl
adc
cmovno
push
push
mov
nop
pop
jle
in
mov
or
inc
mov
int
imul
cmpsl
sti
inc
push
stos
fsubp
cli
jne
sub
mov
dec
dec
add
and
sub
cs
je
jp
data16
sub
aaa
and
shl
fldt
dec
sub
fwait
dec
jmp
xor
pop
pop
cld
and
mov
test
not
jmp
adcl
lret
dec
mov
jg
mov
xor
jns
inc
test
or
ret
int
pop
hlt
imul
xchg
sbb
test
aam
iret
push
dec
push
sub
jb
inc
iret
aam
cmp
jno
add
addr16
mov
loop
push
ss
and
push
pop
mov
mov
test
push
pop
insb
sub
clc
mov
clc
push
mov
sub
popa
jmp
ljmp
jo
push
push
mov
shlb
loop
and
daa
incb
xchg
push
flds
in
aaa
pop
add
push
cmp
mov
push
add
cmpb
mov
out
xlat
cwtl
or
paddw
or
mov
mov
insb
or
push
neg
adc
jbe
push
cmp
decb
cs
sub
pop
pop
push
mov
pop
daa
les
pop
cld
mov
or
fucomi
adc
stos
sub
mov
aad
out
mulb
icebp
fld
loope
cld
test
pop
xchg
call
mov
adc
add
add
xlat
inc
movsl
jne
jns
pusha
cs
repz
pop
jmp
lods
add
sub
cs
pop
adc
rolb
aas
ds
mov
cmp
lods
lods
shrl
jg
testb
jns
add
jl
add
inc
pop
test
cmp
jae
add
fsubs
mov
mulb
push
add
xor
xorl
dec
mov
outsb
or
pop
ret
cmc
out
and
test
ret
xchg
xor
add
push
pusha
sub
sub
push
sub
jne
fistpl
stc
daa
jne
mov
dec
sub
push
push
inc
imul
pop
push
cmp
cmp
les
sub
aad
cmp
pop
or
jmp
dec
insb
jmp
sbb
adc
call
out
mov
sub
ss
jp
lret
pop
test
lock
out
cwtl
pop
xor
pop
rol
aas
cwtl
mov
dec
fucomi
or
outsl
or
in
inc
mov
push
push
inc
popf
mov
or
iret
xor
inc
sti
lock
repz
bound
mov
es
aaa
adc
aad
or
sbb
or
or
or
dec
adc
test
xor
sub
pop
daa
jmp
out
out
int
add
xchg
add
stc
cmp
mov
sbb
jmp
movsl
push
mov
mov
jmp
leave
inc
ret
and
mov
mov
or
xchg
pop
sub
jp
adc
bound
jo
add
aas
out
add
iret
leave
lods
and
insb
jno
push
loop
add
inc
sub
xchg
jmp
addl
xor
in
fldl
and
inc
fldcw
mov
inc
imul
es
pop
push
lahf
sbbl
inc
adc
btc
sub
insb
in
pop
push
outsl
xor
ss
jmp
xchg
adc
loopne
mov
and
jmp
outsl
adc
and
cmpsl
mov
xor
arpl
or
inc
rcl
sub
dec
adc
int
jmp
sub
push
mov
fnclex
adc
cmp
push
or
xor
ret
sub
inc
clc
inc
fsubrs
mov
adc
ja
enter
dec
adc
rol
add
jp
and
sbbb
xor
nop
add
mov
push
push
pop
or
fstpl
lock
imul
jbe
pop
push
shr
mov
enter
sbb
push
daa
out
bound
jb
jns
in
cmc
lock
xor
or
testl
fidivrs
jle
push
mov
mov
pop
mov
adc
sbb
jmp
mov
push
jbe
test
pop
adcb
sub
and
or
and
sbb
stos
jg
std
mov
dec
push
jmp
sbb
ret
adcb
repnz
or
pop
mov
add
out
sbb
and
pusha
push
rcll
add
push
xchg
jmp
xchg
sub
and
jnp
out
adc
cli
or
and
xchg
aas
dec
jmp
pop
jns
adc
arpl
cmpsb
inc
daa
sbb
jle
mov
sarl
mov
jnp
sbb
push
adcb
jle
and
and
and
roll
jecxz
jge
fwait
inc
int
sti
iret
sub
xor
jmp
pop
push
cmp
scas
or
push
in
jns
dec
pop
push
in
mov
or
movsb
adc
stos
pusha
int
sbb
mov
not
adcb
push
xchg
js
adc
js
ljmp
jle
aaa
and
pop
push
push
test
cli
sub
adcb
add
cmp
cwtl
out
jbe
loope
push
repz
jb
pop
jno
arpl
fiadds
jb
inc
sub
push
add
xorl
shl
jns
pop
mov
je
aad
pop
push
mov
daa
shll
pop
xlat
push
leave
popf
mov
pop
clc
rcrb
lods
xor
dec
add
out
or
js
cmp
jbe
or
jb
fiaddl
xor
mov
push
sub
movsl
xor
add
dec
adc
daa
push
sbb
dec
es
mov
enter
xchg
outsb
add
aas
pop
or
dec
mov
sbb
inc
sbb
and
add
mov
aas
notl
scas
sub
push
or
sub
sbb
mov
add
pop
inc
jbe
adc
push
js
jge
pop
in
adc
sub
mov
pop
push
push
sbb
adc
pop
pop
add
xor
jns
hlt
divb
mov
phaddw
shr
mov
popf
mov
neg
or
shll
addl
or
sbb
jmp
or
imul
out
mov
jno
popf
inc
sub
or
jle
orb
pop
popa
pop
cli
mov
pop
stos
dec
pop
aam
lcall
and
lds
dec
pop
add
and
fstl
adc
mov
pop
call
outsb
push
and
mov
pop
jle
or
in
xchg
stos
aam
rclb
pusha
jno
adc
mov
out
adc
sub
and
lods
push
jmp
push
pop
jbe
js
pop
mov
gs
adc
insl
mov
pop
out
mov
cmp
ret
fsubrs
push
pop
jle
jp
subb
cmp
adc
mov
and
test
push
xchg
add
dec
push
mov
add
repz
fs
inc
push
mov
xchg
out
pop
bound
jae
push
xor
and
xor
or
je
add
adc
or
adc
push
in
mov
test
shlb
mov
sub
stos
inc
mov
imul
or
pushf
sub
sub
out
pop
jne
mov
jle
pop
enter
jnp
push
mov
pop
add
mov
jns
cld
adcb
in
movsb
stc
ljmp
add
rcrl
cmp
mov
ret
dec
sbb
and
mov
pop
leave
add
das
data16
jmp
jnp
rclb
pop
leave
cmpl
loop
cmp
outsb
lret
xor
or
xchg
and
orb
jne
call
jmp
roll
lret
das
fsubrs
pop
stos
repnz
push
inc
shrb
cltd
fs
xchg
and
adc
inc
push
push
sarb
lret
into
inc
nop
and
push
mov
cmp
js
sbb
ja
loop
in
fisttpl
out
or
push
stos
bswap
in
call
mov
add
mov
lcall
push
push
inc
into
mov
dec
inc
out
imul
pop
rcl
jmp
gs
sub
and
sbb
jg
in
in
dec
mov
xor
push
jmp
out
test
pop
sbb
cwtl
jge
add
cmp
cmp
ja
nop
cld
push
dec
mov
push
or
js
call
and
pop
adc
jmp
or
adc
add
xchg
pop
sarb
dec
fs
dec
fwait
push
sbb
popa
cmc
psllw
movsl
mov
jle
add
sub
pop
dec
icebp
or
pop
fsubs
int3
push
pop
and
xchg
dec
fmulp
clc
inc
add
daa
jo
push
pop
add
push
jecxz
jmp
pop
or
int3
sbb
push
xchg
loope
jne
fildl
pop
jns
pop
mov
push
and
inc
iret
adc
push
push
mov
xchg
loope
shrb
adc
mov
cld
xchg
dec
mov
test
add
pop
aad
fucompp
adc
rcr
repnz
pop
ret
pop
add
sub
and
pop
sbb
insl
loopne
jmp
or
jo
cmpsb
imul
xchg
push
mov
and
xchg
gs
aam
mov
enter
mov
jg
xlat
or
je
inc
push
push
and
ljmp
pop
inc
xor
jmp
pop
mov
in
xchg
insb
cmp
push
pushf
lds
es
test
push
mov
repnz
pop
sub
xchg
loop
pop
ficoml
cmp
les
mov
int
enter
jecxz
and
pop
fstpl
je
lahf
mov
sbb
sub
subl
add
fs
sub
scas
test
rorb
sbb
mov
iret
add
sub
adc
pop
es
popa
adc
sub
add
cli
xchg
adc
adcl
test
dec
adc
sub
fs
loope
mov
jnp
scas
les
cmp
sti
bound
out
outsb
in
xchg
or
mov
ljmp
mov
pop
out
inc
shrl
inc
cmc
stc
add
push
das
push
sub
lock
sbb
push
push
jmp
popa
ret
jle
inc
xchg
adc
xchg
in
pop
xlat
bound
mov
cs
popf
or
jne
imul
fucomp
push
add
cs
xchg
mov
pop
inc
ljmp
popa
mov
xchg
sub
add
repz
es
dec
or
add
pop
mov
or
cli
lea
or
jbe
mov
rcr
or
xlat
inc
shll
repnz
push
ds
xchg
jmp
xor
push
adc
outsb
sti
shlb
adc
pop
or
imul
outsb
out
xor
xchg
jp
jge
loope
nop
cmp
sbb
or
mov
push
xor
int3
rolb
mov
add
push
mov
test
adc
xor
popa
and
jge
adc
arpl
xor
loopne
shr
add
mov
sub
sarb
or
pop
push
add
repz
adc
sti
pop
pop
pusha
mov
mov
fildll
repnz
push
pusha
shll
jbe
add
jecxz
dec
and
in
std
dec
and
sbb
iret
sbb
arpl
lret
or
repz
jae
pop
stc
push
xchg
pop
int3
cli
push
xlat
adc
ret
push
je
push
adc
mov
push
jb
inc
lock
or
stos
dec
ja
stos
add
cmc
mov
or
xchg
or
xchg
shrb
mov
arpl
cli
fcmovbe
shll
call
fidivrl
mov
and
je
xchg
es
or
or
repnz
pop
pop
xor
fimull
jo
lods
dec
pop
inc
daa
dec
das
jno
leave
std
cmp
jmp
pop
pop
xchg
and
sub
and
stos
push
xchg
shll
cmpb
cltd
xor
test
pop
xchg
gs
fs
call
arpl
and
mov
xchg
das
mov
adc
push
push
mov
mov
mov
sahf
shl
pusha
in
push
jmp
ret
and
sub
icebp
loopne
call
cmp
jmp
push
ljmp
lods
jnp
mov
addl
lock
out
and
dec
scas
push
push
push
shl
and
lock
outsl
inc
xchg
xchg
pop
pop
jg
jb
inc
and
jns
in
jmp
xor
xor
mov
or
mov
cmpb
mov
shr
in
jmp
push
mov
sub
sub
rorb
sub
sub
xor
dec
add
pop
dec
push
mov
aaa
fidivl
mov
hlt
je
cmpsl
stc
add
shrb
call
xor
pop
sti
push
lret
adcb
or
les
cmp
iret
or
add
icebp
or
pop
incb
mov
inc
adcl
lret
xchg
adc
cs
cmp
push
or
daa
into
gs
xchg
sbb
pop
rorl
xor
jbe
dec
xchg
je
shl
shr
or
jg
sbb
lahf
inc
mov
imul
mov
push
int3
mov
add
jmp
lock
jp
in
jmp
dec
xchg
pop
inc
jns
xor
jl
sub
popf
cmp
in
and
into
outsb
stc
test
in
je
push
push
mov
shl
call
xchg
pop
pop
pop
mov
push
sbb
inc
jmp
out
das
or
pop
pushf
aam
je
xor
loope
movl
repz
inc
inc
pop
add
js
mov
sub
adc
ds
into
aaa
push
sub
adc
mov
stc
cmp
mov
outsl
dec
cmp
pop
add
imul
sbb
mov
push
sti
mov
push
sbb
andl
add
stc
dec
push
and
and
jp
mov
push
inc
pop
mov
xor
dec
or
jl
push
sbb
ret
popa
mov
jecxz
add
icebp
int3
dec
mov
cli
std
jns
and
jns
mov
push
lret
gs
xor
fisttpl
addr16
lds
pop
and
mov
ror
fcomip
sub
sarl
pop
xor
repz
jmp
mov
scas
jne
or
push
pop
orl
ja
movsb
add
aas
xor
fwait
arpl
subb
mov
sarl
dec
imul
rorl
xchg
loop
adc
cli
jo
push
sbb
xor
dec
es
movl
imul
adc
inc
or
pop
push
and
or
inc
or
dec
xor
lods
pop
push
sar
and
mov
push
xchg
loope
mov
test
bound
mov
or
push
push
dec
cltd
cmp
xorl
insl
xor
negb
cmp
stc
xor
test
mov
push
pop
fistpll
leave
jmp
xlat
lds
imul
dec
xor
stos
faddp
push
aad
dec
loop
cmpsb
inc
cld
push
mov
aad
test
sub
popf
ja
rclb
enter
and
or
or
push
sub
fmull
lret
jne
das
pop
jmp
mov
loop
and
arpl
cld
xchg
movsb
jbe
inc
jmp
lods
push
pushf
das
loope
pop
outsl
lods
pop
adc
push
add
push
add
or
adc
fstl
pop
stos
lret
stc
and
dec
dec
xor
inc
in
inc
pop
mov
push
pop
mov
xor
scas
push
daa
das
lods
mov
mov
push
jmp
loope
xor
notb
and
pop
divb
dec
jp
xor
xor
ss
pusha
pop
xor
inc
iret
lret
aaa
pop
scas
sub
pop
dec
xchg
lea
jle
jb
clc
rcrb
push
in
adc
nop
mov
or
adc
and
hlt
dec
out
gs
jle
inc
inc
push
jbe
adc
aad
mov
dec
test
jb
rcrb
cmc
mov
je
or
out
jne
or
adc
adc
push
or
mov
add
jns
mov
aad
and
pop
mov
and
sub
cwtl
jge
ret
mov
add
je
das
jbe
push
std
jns
nop
ret
pusha
sti
lock
sub
lods
pop
mov
add
and
push
pop
fidivl
in
jne
mov
pop
icebp
daa
push
jle
xor
sbb
ljmp
jmp
mov
fcomp
cmpsl
mov
rcl
sub
xchg
adc
mov
sub
loopne
nop
ffree
gs
add
dec
xchg
pop
sub
and
add
pop
sbb
push
jmp
mov
push
dec
mov
xchg
xchg
clc
jmp
mov
aaa
and
push
pop
jae
or
and
test
rcrl
inc
add
fucomp
add
inc
xchg
ret
insb
mov
aas
lock
push
mov
cmp
inc
cli
sbb
pusha
add
inc
sub
rorb
aam
pusha
mov
aas
cld
ret
xchg
int3
adcb
jmp
in
and
subb
jle
jmp
add
add
mov
push
fisubl
add
popa
jp
cmp
inc
es
push
test
aad
dec
stc
lea
in
rorl
sub
stc
mov
or
cmpl
push
je
push
push
pop
and
adcw
cld
mov
add
xor
xchg
ljmp
mov
bound
adc
mov
cmp
mov
pop
nop
into
aas
das
out
or
xor
add
fs
pop
pusha
jae
dec
je
sti
scas
xorb
lods
push
es
cwtl
and
adc
pop
in
jle
ficoml
xchg
in
out
jmp
jmp
pop
sub
pop
shll
and
jnp
mov
push
mov
inc
loop
fdivr
mov
pushf
ret
out
test
stos
dec
cmp
movl
sub
and
and
lods
pop
adc
out
cmp
lds
and
jge
mov
es
inc
adc
frstor
or
icebp
rcrb
xor
and
stos
in
out
fisttpll
pop
out
nop
fldl
dec
pusha
in
pushf
add
inc
or
addb
sbb
movsl
dec
popf
push
push
sub
in
int3
push
cmp
dec
dec
out
jb
cltd
shl
pushf
or
xchg
or
pop
ljmp
ja
mov
xlat
mov
jb
in
int
inc
adcl
jns
and
jl
jp
pop
jmp
leave
push
popaw
popf
xor
sti
lret
and
sbb
xor
push
inc
pop
push
mov
or
mov
dec
push
int
call
cmp
jmp
or
into
sub
loop
das
fldl
dec
inc
add
add
sbb
pop
or
insb
cmp
jo
xchg
ret
inc
test
or
sbb
add
mulb
cmp
and
or
dec
push
sub
and
sbb
insb
jo
jns
aad
fcomps
stos
push
push
inc
xlat
in
push
outsl
adc
pop
jl
or
jmp
lds
dec
stos
test
stos
in
cmp
xor
push
jbe,pt
decb
mov
push
jmp
add
inc
mov
fadds
pop
xchg
jo
push
push
push
xlat
in
cs
push
test
pop
dec
cli
pop
popf
xor
mov
fwait
or
push
pushw
not
lea
add
int
cli
mov
lret
mov
pop
mov
and
pop
and
inc
rorb
sbb
push
in
neg
scas
push
push
mov
or
jp
andl
and
inc
cmp
dec
stos
enter
mov
mov
lods
cmc
add
ljmp
sbb
inc
inc
jmp
mov
push
mov
mov
push
adc
mov
lods
pop
xlat
jmp
inc
sub
pop
add
fidivl
push
inc
mov
pop
push
jmp
fimull
or
add
push
popf
call
push
imul
dec
clc
cmp
push
add
not
rcll
sub
int3
sub
jno
imul
imul
sti
jg
or
sub
jmp
xor
add
push
jmp
das
mov
rcrb
inc
sbb
or
mov
mov
out
sbb
push
repz
enter
gs
pusha
fimull
or
push
popf
js
or
sub
jmp
cld
out
addr16
inc
mov
or
repz
adc
rorl
pusha
mul
adc
movsl
imul
or
out
test
inc
decl
fldlg2
add
mov
cmp
ljmp
jb
fbld
das
ret
sbb
mov
xchg
in
test
cmc
push
std
aad
mov
sbbl
push
dec
sbb
cmp
or
les
mov
adc
xchg
cmp
dec
outsl
in
xchg
add
push
add
xor
mov
cli
movsl
jle
fs
punpckhwd
loop
push
xchg
test
xor
mov
lret
lcall
imul
pop
pop
cwtl
std
pop
in
inc
decb
or
or
sub
into
or
cmc
in
dec
jo
orl
add
push
mov
sub
faddl
xchg
in
adc
jl
add
mov
mov
xorb
jnp
sub
jg
add
add
push
sbb
sub
sub
dec
jb
cli
rorb
pop
push
mov
pop
jge
and
push
cmp
push
cmp
cwtl
mov
push
push
ljmp
push
adcb
pop
jae
frstor
sbb
lods
cmp
sub
pop
and
pusha
jb
pop
pop
push
lahf
aam
jb
ret
mov
ljmp
xor
sub
jl
fistl
call
xchg
cmp
and
rorb
inc
in
adc
or
push
cmp
inc
and
ljmp
sbb
rcll
jecxz,pn
mov
mov
adc
mov
pinsrw
push
jmp
adc
add
inc
push
data16
dec
movsl
cmp
inc
push
fsubr
xchg
xchg
add
mov
lret
add
pop
shl
pop
jmp
ret
mov
jnp
mov
loop
pop
dec
jmp
lahf
ret
mov
mov
jnp
es
pop
cli
push
push
in
and
mov
push
fimull
cmp
mov
push
or
sub
insb
jb
sub
fdivrl
scas
push
subl
pop
and
mov
jo
mov
decb
cmp
cmp
pop
push
jne
rcrl
jmp
adc
add
or
aam
jne
out
lods
pop
push
scas
pop
fdivrs
inc
movsl
xor
nop
imul
dec
mov
pop
sub
and
pop
shrb
loop
sbb
push
aas
mov
sub
dec
mov
fbld
or
xor
ret
and
and
btr
gs
add
xorb
and
sub
stc
jp
or
stos
in
push
mov
outsb
in
ret
popa
mov
iret
inc
or
dec
sub
dec
and
jno
mov
pop
mov
jnp
stc
outsb
mov
push
pop
scas
adc
or
sarl
loopne
push
adc
cld
ret
xchg
hlt
add
dec
ud2
ja
imul
decl
jbe
or
and
int3
xchg
in
fdiv
ret
or
aam
mov
fcompl
mov
lret
scas
sub
jmp
imul
push
out
inc
xchg
gs
das
jg
xchg
or
jae
mov
inc
sub
out
jns
add
pop
sahf
in
repnz
dec
mov
loope
call
das
cmp
pop
ljmp
push
mov
xor
push
push
push
mov
shr
not
addb
hlt
dec
cmp
add
fstpl
xlat
pusha
inc
mov
mov
adc
mov
das
pop
leave
outsl
jne
imul
pop
add
pop
test
mov
xchg
ljmp
pop
xor
add
cmp
mov
popa
adc
cmp
sbb
sar
pushf
adc
imul
jmp
in
icebp
shrb
shr
das
inc
mov
adc
cmp
pop
and
loope
sbb
xchg
adc
or
mov
les
jmp
scas
in
cmpsl
pop
scas
jecxz
push
mov
jmp
mov
push
mov
sub
inc
idivb
add
shl
lock
cld
jne
es
icebp
cmp
inc
imul
jnp
in
jo
and
bound
push
cwtl
adc
hlt
jmp
fsubrp
sbb
dec
cmpsl
pop
roll
out
and
inc
xchg
add
jnp
push
bound
ret
add
jl
push
shll
movsl
mov
mov
xor
jmp
add
inc
adc
mov
ret
pop
xor
xlat
mov
add
mov
mov
incl
dec
cmp
dec
mov
push
xor
and
sahf
push
xchg
data16
ja
sti
outsl
and
mov
dec
xor
and
rcll
out
lods
std
adc
cld
jmp
adc
jg
test
sub
stos
aas
inc
pop
jne
divl
jecxz
xor
mov
mov
push
das
and
stos
sub
or
adc
lcall
jmp
enter
xor
dec
pop
decb
iret
pop
scas
std
jge
bound
icebp
enter
fisttpl
cli
or
inc
mov
mov
daa
inc
ret
dec
cmp
xchg
aam
inc
test
or
clc
and
popf
dec
shll
adc
pop
jmp
pop
jne
sub
or
incl
aad
int3
jmp
push
negb
sub
pop
sub
mov
cmp
mov
repz
fistps
mov
pop
fistpll
mov
stc
adc
repz
push
push
inc
ret
push
xor
jns
inc
push
das
stos
sub
xor
mov
push
mov
jmp
jns
pop
aaa
push
cltd
cmp
stos
ret
add
xor
popf
ljmp
ret
push
test
mov
pusha
adc
sub
out
bnd
mov
dec
xchg
jmp
mov
ss
dec
daa
orb
xsavec
add
xlat
ret
push
pop
sahf
pop
push
mov
jp
sbb
popf
add
mov
inc
pop
sbb
cs
push
add
push
xor
int3
add
test
andb
xchg
pop
adc
mov
dec
pop
jmp
mov
xor
insb
xorb
xchg
fsubl
jmp
int
xor
xor
in
sub
in
sbbl
jmp
je
adc
jmp
in
jae
dec
hlt
in
sbb
or
insl
ljmp
nop
xor
cld
xchg
das
add
mov
loop
dec
bound
js
lahf
pusha
mov
inc
es
mov
push
jmp
sarb
iret
gs
ljmp
adc
push
pop
sbb
push
push
and
push
fiadds
pop
aam
push
out
lret
sbb
aas
adc
push
neg
or
push
divl
aad
adc
shrb
je
push
orb
or
cmpsb
cli
insl
and
pop
pop
rcrl
add
xor
ret
add
mov
push
push
inc
stc
add
rcrl
sbb
mov
out
or
mov
shl
push
cmpl
xchg
mov
cs
mov
pop
mov
adc
in
mov
jle
subl
push
cmp
add
loop
mov
into
inc
es
push
cmpl
jecxz
adc
mov
push
inc
adc
incl
sub
test
jg
in
js
push
mov
jge
pop
fldl
insl
pop
shr
pop
into
xor
sub
push
jmp
jecxz
pop
fsubl
movb
push
push
das
lret
pop
pavgw
jnp
jge
adc
add
mov
push
nop
ds
mov
ja
dec
jl
cwtl
xor
pop
pop
xor
or
cmp
or
pop
inc
dec
add
rcrb
mov
push
and
push
adc
add
xor
fsubrp
dec
mov
sti
mov
cmp
add
les
push
in
sar
cmp
push
or
out
mov
fisubl
sbb
mov
dec
push
or
push
xor
adc
out
cmpsb
mov
pop
push
mov
mov
daa
push
lock
xor
pusha
dec
xor
int
pop
xchg
bound
dec
jnp
mov
dec
and
aas
jmp
lcall
sahf
push
lret
xor
inc
mov
cltd
addb
lahf
mov
cwtl
fmull
fnsave
fs
je
cld
push
addb
dec
leave
pop
add
pop
xor
and
sbb
sbb
int
jbe
fsubrl
adc
xlat
xor
mul
loop
pop
or
pop
jp,pt
xor
mov
enter
push
fcomps
roll
mov
out
add
add
jmp
mov
out
inc
ds
inc
imul
scas
inc
jle
jne
push
inc
xor
jo
jno
xchg
jo
xchg
popa
sti
inc
jle
rolb
loope
push
out
subb
enter
pop
das
xchg
cmpl
imul
inc
xchg
jg
cwtl
or
mov
jmp
dec
add
mov
cmp
dec
es
jo
pop
cld
inc
mov
bsr
sub
pop
sub
imul
jnp
stc
imul
mov
xor
lds
jmp
sub
cwtl
add
sub
add
add
iret
pop
sbb
sbb
xchg
push
dec
pop
es
lret
push
mov
inc
cld
and
loop
bound
movsb
push
jnp
sbb
jmp
mov
sub
or
in
jo
repz
test
in
adc
pop
sbb
inc
jmp
or
rorb
mov
and
and
mov
enter
mov
lcall
mov
faddl
imul
sub
sbb
fadd
ds
mov
pop
mov
inc
insb
outsb
push
dec
jge
fwait
sbb
addb
pop
dec
jns
fldt
lds
fstpl
in
lret
in
std
sbb
mov
je
aas
icebp
aaa
daa
pop
push
jg
and
iret
or
and
pop
push
decl
sub
or
pop
add
xchg
ret
xchg
xchg
setne
orl
pop
mov
cmpb
scas
sahf
mov
icebp
loopne
stc
jg
fwait
jns
jb
test
lods
adc
sahf
cwtl
call
insb
push
and
int3
or
loopne
sub
adc
lea
and
movsb
sbb
aas
lock
out
lock
decb
lods
jecxz
loop
xlat
dec
sbb
jmp
add
jmpw
subl
jmp
pop
jb
pop
add
out
mov
and
xchg
cld
cmp
jmp
cmp
pop
push
fistpll
xchg
adc
cli
aaa
fisubrl
sub
hlt
mov
mov
ljmp
add
or
mov
push
and
xor
pusha
mov
aaa
fldt
jle
mov
int
push
xchg
jno
sub
pop
cmp
xchg
inc
pop
cwtl
push
lea
mov
jmp
sarb
xchg
lock
fldcw
and
lahf
aad
loope
jg
or
loope
push
adc
rorb
mov
xor
push
cld
or
jmp
rolb
jg
add
push
inc
sbb
gs
xchg
xor
cmpsl
jle
adc
js
fdivrp
adc
or
call
xchg
clc
or
lock
negb
mov
pop
inc
xchg
mov
pop
and
test
mov
icebp
sbb
jmp
pop
add
xor
imul
loop
push
add
xlat
das
loopne
push
mov
sub
push
pop
icebp
ljmp
push
mov
ret
mov
clc
and
xor
addr16
cmpb
sub
jmp
mov
int
add
repz
rorb
mov
xor
je
or
xchg
call
loop
adc
int3
sti
lret
add
jne
xchg
clc
cmpsl
or
dec
add
rcr
sbbl
daa
and
sub
cmc
sarb
mov
xor
xchg
outsl
mov
add
xor
sbb
addb
sub
shl
sbb
ljmp
push
lds
aaa
sbb
xor
cmpb
shr
xor
hlt
sub
add
cmpsl
add
dec
lock
or
dec
mov
inc
pop
insb
pop
es
jmp
jg
pop
sar
je
adc
mov
sub
neg
xor
mov
ljmp
mov
sub
divb
movsl
stos
rcrb
sbb
cs
sub
and
push
adc
pop
xor
test
sbb
lret
cmpsl
jl
sub
rolb
sahf
sbb
add
fbld
movl
sarl
fwait
dec
mov
mov
adcb
dec
sub
pop
out
push
pop
or
xor
xor
std
out
gs
and
sub
imul
and
movsb
lods
xchg
pop
test
cmc
jmp
out
cmp
sub
lock
mov
insb
mov
and
imul
jne
mov
mov
jl
add
rcrl
add
lods
adc
arpl
mov
mov
mov
mov
jmp
cmpsl
insb
movsb
inc
loopne
leave
ljmp
xor
clc
push
popl
or
pop
mov
cmp
push
out
insl
dec
inc
cld
inc
hlt
mov
pop
shrl
scas
pop
adcb
ffree
es
add
fistps
xor
inc
dec
loope
enter
jne
sub
popf
adc
out
adc
push
daa
xchg
cli
sub
mov
cld
push
and
sbb
add
add
sub
pop
and
sbb
adc
insl
or
mov
mov
not
in
dec
scas
push
jns
loop
leave
pop
pop
cwtl
add
outsl
sbb
sub
fdivs
inc
jg
dec
and
in
add
inc
mov
push
push
xor
fwait
push
int
sub
inc
int3
add
mov
mov
and
test
mov
dec
push
mov
push
inc
xchg
add
pop
mov
sub
movsl
jmp
or
inc
outsl
push
jg
push
add
or
stos
cmp
mov
and
sub
push
shlb
sbb
sub
repnz
test
out
ja
or
out
rcll
or
outsb
out
xchg
rorb
dec
xor
sub
and
adc
pop
fstps
mov
rcll
mov
leave
jl
pop
ret
pop
push
sbb
mov
mov
pop
clc
aas
and
dec
pop
stc
jns
pop
stos
ja
cmp
aas
pop
inc
jbe
sub
pop
mov
in
bound
js
adc
or
ud1
cmovns
icebp
mov
jmp
mov
and
out
pop
push
neg
leave
enter
push
pop
fisttpll
imul
add
idivl
std
add
push
int
sub
pop
daa
cmp
and
call
adc
adc
push
push
leave
outsl
shlb
push
mov
add
ljmp
into
push
adc
push
pop
jbe
sbb
inc
mov
mov
push
jbe
loope
outsb
call
cmp
imul
mov
cmc
adc
pop
mov
clc
mov
sub
push
sub
orb
xchg
lds
pop
mov
adc
out
sub
mov
fisubs
lock
inc
push
cmp
into
adc
or
pop
xchg
xlat
mov
rolb
add
or
insl
inc
outsl
add
gs
jmp
outsl
test
cmp
test
jecxz
push
pop
pop
jmp
xor
jnp
cmp
jmp
pushl
cwtl
xor
jl
cmpsl
cmp
inc
mov
cs
pop
jbe
adc
test
rcll
cmp
ja
jecxz
out
das
in
mov
repz
mov
push
mov
push
into
loope
xor
mov
push
popf
mov
iret
stos
jmp
outsb
push
mov
iret
cmpb
sub
inc
dec
lahf
push
pop
cltd
jg
xchg
lock
sbb
imul
notl
sqrtps
sub
adc
xor
lcall
out
sbbb
jmp
mov
xchg
inc
adc
repz
or
jl
sub
cmp
xchg
in
push
ss
add
sti
pusha
sbb
cltd
mov
mov
push
jge
outsl
pusha
xchg
sti
xadd
cli
or
push
xchg
outsb
jl
orb
or
push
xchg
dec
lahf
sbb
jmp
sub
inc
mov
push
test
sbb
and
adc
push
cmp
or
xchg
jl
orl
pop
sub
lcall
cmpb
jmp
bound
fimull
or
call
mov
int3
mov
pop
push
jecxz
adc
push
adcb
in
dec
and
sub
push
mov
dec
or
sbb
cmp
out
imul
sub
push
pop
fcoms
add
cmp
xor
add
cmp
movsb
pusha
int3
jmp
cli
in
push
push
in
fidivrs
and
and
add
jecxz
push
push
mov
das
rcrl
mov
xchg
mov
and
sub
mov
jmp
cmpsb
jne
in
sahf
add
dec
and
inc
add
mov
jnp
fdivrs
jmp
imul
gs
ret
add
dec
rolb
xchg
xor
or
out
dec
sub
ss
push
sbb
inc
add
adc
aas
or
and
xor
jmp
dec
add
dec
jmp
ret
jl
rclb
arpl
pushf
dec
pop
sbb
andb
pop
ds
push
push
aam
cmc
add
jmp
adcl
outsb
dec
sub
stc
std
nop
mov
out
jle
pop
int3
jno
out
and
lock
pop
xchg
sbb
jmp
mov
sub
adc
add
ss
push
sbb
and
into
push
mov
or
xor
jmp
mov
stc
or
cmpsb
iret
or
and
and
pusha
xor
xchg
jbe
lcall
fsubrs
dec
add
jmp
xor
mov
sub
sub
call
pop
popa
xchg
fdivrs
add
add
add
adc
clc
sub
sub
cltd
lea
hlt
push
sub
stos
aaa
int
xor
push
test
inc
jmp
or
mov
sub
movsb
dec
cmp
xor
ljmp
pop
inc
add
lods
xchg
adc
dec
mov
mov
mov
sub
fdivl
xor
scas
mov
push
mov
push
mov
add
push
ret
xchg
xchg
or
dec
stos
mov
mov
sbb
pop
xchg
jnp
aad
add
movsl
push
xchg
cmpb
xlat
add
imul
fsub
xor
push
ret
out
dec
mov
pop
mov
daa
repnz
dec
inc
push
lock
adc
pop
inc
pop
sub
dec
stos
inc
cmp
mov
jb
adc
cmp
jmp
out
and
xchg
sbb
push
push
testb
jb
pop
mov
outsl
push
ja
flds
pop
mov
mull
add
cmp
adc
mov
pop
sbb
xor
lods
popa
sub
fsub
or
jge
or
pop
dec
push
daa
pushw
pop
testb
call
stos
adcb
lods
dec
pop
orl
sub
sub
mov
or
fistpl
movsl
test
cltd
mov
int
or
rorl
ss
jo
add
mov
pop
xchg
mov
daa
fwait
mov
or
fadds
mov
imul
inc
dec
cmpsl
je
cld
inc
mov
fmuls
or
dec
js
pop
xchg
or
cs
testl
cmp
adc
mov
pop
gs
add
mov
iret
fldt
cwtl
test
fiaddl
push
pop
lods
mov
test
cmp
sub
jecxz
icebp
not
and
push
dec
inc
inc
out
add
flds
iret
repz
dec
push
subb
repnz
pop
dec
lds
popf
jns
xchg
jb
adc
jg
add
pop
jmp
push
mov
in
in
jp
aas
mov
nop
adc
dec
enter
imul
cli
in
push
addr16
pop
scas
xchg
inc
in
add
js
jnp
inc
popa
aas
mov
dec
xor
pop
clc
add
dec
and
jmp
popf
pusha
cmp
lock
mov
inc
nop
and
jge
push
fdivs
mov
mov
pop
test
pop
jne
test
sbb
imul
pop
test
pop
mov
std
add
clc
sub
jge
scas
mov
cmp
fsts
xchg
in
fs
xor
push
mov
dec
sub
fistpll
enter
cmp
mov
lds
jge
in
xchg
adc
inc
push
es
jne
ret
fwait
push
add
sti
decl
ds
adcl
dec
adc
les
mov
jmp
clc
push
and
pushf
test
pop
sbb
shl
rol
ret
jmp
mov
inc
add
mov
fucomip
es
or
add
lcall
lds
and
inc
mov
cmpl
movsb
aas
jmp
xor
mov
xchg
clc
and
pushf
sub
push
mov
orb
gs
fadd
movsl
out
ror
sub
pop
fwait
aam
mov
xchg
dec
shr
add
fucompp
xor
loop
inc
pop
test
jmp
and
sub
leave
mov
pop
fstpl
aam
cmpsb
or
push
pop
shll
mov
cmp
rclb
outsb
jp
insl
dec
lret
xchg
sti
lds
and
mov
imul
push
arpl
outsl
jp
push
mov
lods
pop
notb
ljmp
push
jnp
sub
sbb
sarb
mov
rcrb
mov
add
icebp
lret
hlt
pop
xchg
mov
add
adc
shrb
sbb
sub
jmp
imul
adc
mov
xchg
test
fimuls
mov
inc
outsl
push
xchg
mov
or
dec
xlat
pop
xchg
jb
or
dec
fdivs
in
or
hlt
lock
imul
cltd
jmp
stc
push
mov
out
mov
add
push
push
push
mov
sbb
add
add
jo
fcomps
xor
call
mov
into
es
or
nop
lods
cmc
out
fwait
nop
fbld
mov
mov
pusha
xor
pop
daa
sub
jg
int3
rcl
ss
jmp
addb
out
cmp
push
xor
and
scas
pop
nop
push
pop
xchg
pop
flds
mov
adcl
enter
lea
shr
xchg
psubsb
pop
add
aad
fcompl
mov
pop
adc
shld
jae
test
scas
mov
adc
xchg
fs
lods
jo
xor
mov
xor
insb
ror
adc
or
enter
sbbb
and
adc
inc
cmp
cmpl
test
jmp
insl
cmp
and
push
pusha
or
push
mov
out
cli
pop
adc
loopne
mov
add
dec
and
or
sbb
popa
jmp
or
adc
out
mov
pmullw
inc
movsl
call
adc
xor
popa
lods
adc
mov
mov
push
sbb
jnp
sub
cmp
rcrl
ds
xchg
fistpll
cmp
xchg
mov
inc
cmp
xchg
scas
push
sub
xor
into
inc
sub
std
or
imul
and
inc
jg
ja
pop
sub
push
mov
neg
sahf
ret
sbb
adc
dec
mov
sub
repz
add
dec
and
and
push
add
aas
and
ljmp
jnp,pt
cmp
pop
aam
call
test
pop
push
clc
ds
out
cmp
sbb
xchg
pop
mov
dec
stos
scas
add
ret
out
jl
mov
sbb
dec
fwait
pop
sub
std
jmp
jmp
or
mov
mov
sub
push
mov
jmp
lods
sub
fisubs
pop
push
push
outsl
jbe
rcl
add
repnz
add
sub
jl
aas
fs
int
ror
jg
push
and
loope
mov
dec
jmp
fildl
jmp
pop
add
adc
test
hlt
jbe
adc
js
aad
xchg
sub
clc
jns
and
test
mov
adc
aas
pop
iret
out
jle
ffree
jae
jno
daa
and
jne
std
xor
aam
mov
je
pop
push
mov
sub
fistl
mulb
fs
in
inc
push
pop
jge
rclb
add
adc
hlt
push
dec
mov
lods
das
lret
stos
xchg
or
div
ret
jmp
pop
pop
das
shld
cmpsb
push
adc
in
rorl
in
in
cmc
les
scas
test
cld
xchg
mov
fsub
xchg
mov
adc
in
inc
insb
or
or
test
push
fsubr
inc
fistpll
mov
push
xchg
daa
popf
or
or
sub
cmp
mov
xlat
mov
rolb
test
push
xchg
cmp
and
jne
out
cwtl
mov
ret
sbb
xor
xor
enter
mov
mov
pop
push
mov
mov
jae
test
sub
fs
nop
cmpsl
bound
jbe
dec
bound
push
mov
in
imul
sbb
inc
pop
mov
loope
pop
xchg
xchg
push
cld
mov
cwtl
fnstcw
imul
out
in
test
xlat
cmpsl
ret
fistps
popl
icebp
inc
and
mov
cli
dec
hlt
scas
cmp
stc
rcll
fistl
rcr
xchg
decl
sub
push
dec
inc
int3
inc
jmp
leave
or
jle
dec
adc
xchg
dec
stos
inc
cli
add
popf
adc
pop
lret
cmp
dec
daa
pop
fwait
cmpb
pop
jmp
inc
adc
inc
push
rclb
scas
cmp
sbb
xchg
and
xor
sub
xor
mov
push
orb
icebp
mull
int
ret
jno
adc
sub
pop
cmp
lcall
cmp
and
outsl
dec
aam
das
push
add
icebp
shrb
mul
push
push
jmp
add
xchg
stos
sub
or
subb
dec
sub
ds
ds
or
lock
stos
or
out
xchg
or
div
pop
push
mov
aad
add
pop
rcr
dec
pop
mov
pop
mov
adc
pop
jmp
adc
sbb
lds
inc
out
sbb
jmp
pop
jp
xor
daa
pop
aad
int3
fidivs
push
jge
xor
cmp
add
roll
pop
inc
jp
sub
out
mov
jno
popf
push
push
sub
push
mov
scas
inc
push
push
and
xchg
shll
xchg
or
das
call
cli
push
shl
in
add
into
push
subl
add
pop
jecxz
xchg
xor
push
cld
lock
movsb
clc
bound
add
jnp
pop
rcr
pop
push
and
pop
scas
mov
jle
dec
mull
movsl
pop
mov
out
adc
mov
push
cmp
or
and
mov
pop
lock
add
mov
imul
daa
mov
inc
sbb
fdivl
add
mov
adc
pop
popa
fldcw
xor
pushf
ljmp
inc
mov
not
shrb
js
shll
popa
cld
inc
push
adc
leave
mov
add
lcall
outsl
fiaddl
inc
cmc
pusha
add
inc
leave
cmpsb
inc
movsb
ret
or
fldt
or
sub
sub
adc
inc
lahf
jg
jmp
add
rcl
inc
pop
scas
add
jmp
add
loopne
jne
cwtl
bound
jne
outsl
sbb
ret
inc
jp
cmp
sti
add
and
mov
push
les
dec
and
and
mov
shl
xchg
pop
adc
imul
popa
lcall
xchg
fcoml
and
je
loopnew
pop
push
lcall
addb
push
pop
jo
cwtl
rorb
aam
and
pusha
add
jle
adc
fistl
or
xorl
dec
cmpsl
jno
dec
ja
outsl
das
mov
cmpl
inc
mov
add
or
sub
push
mov
add
outsb
xor
jb
leave
xchg
sbb
loope
pop
sarl
mov
dec
movsl
jae
mov
lahf
mov
xor
aaa
andb
jmp
ffreep
push
jmp
mov
aas
add
out
xor
adc
outsl
outsl
push
pop
idivb
repnz
out
cmp
das
or
lahf
nop
fistps
cli
jne
scas
mov
adc
rorl
popa
push
mov
dec
js
lcall
pop
mov
mov
in
jp
pop
addr16
pop
inc
les
mov
push
push
mov
in
dec
mov
cmp
cmp
stos
lcall
testb
cmp
aad
enter
cmp
or
hlt
or
jmp
add
fidivrs
into
or
shl
inc
pop
jmp
add
data16
in
and
add
dec
or
sbb
fisttpll
jge
cli
jne
bound
fidivrs
sbb
sub
xchg
pop
in
sub
push
or
mul
pop
mov
bound
insl
pop
push
addb
mov
das
fldt
popf
dec
mov
mov
inc
sbb
or
sub
pop
pusha
pusha
mov
and
pop
jle
int3
mov
add
xchg
jns
xor
sbb
add
jnp
sub
xchg
mov
shrl
dec
in
cmp
add
jl
dec
orb
and
pop
pop
jmp
outsl
or
cwtl
cmc
push
sub
stc
lods
inc
je
pop
and
je
lcall
imul
sbb
adc
and
add
sbb
lret
pop
pop
inc
ret
lret
xor
mov
dec
add
lods
pop
or
lods
mov
mov
dec
jp
jg
in
mov
lret
sub
or
pop
stc
clc
imul
mov
xchg
and
sbb
jmp
or
mov
movsb
jne
and
add
lahf
adcb
pop
push
jae
pop
jmp
ds
rol
add
inc
push
add
xchg
scas
clc
pop
into
xor
mov
popf
in
cwtl
cmp
roll
sbb
lock
shrb
data16
loope
pop
xchg
sti
adc
stos
idivb
insb
mov
int3
loope
sub
pushf
insb
outsl
test
add
dec
adc
pop
das
and
push
xchg
inc
pusha
jge
and
add
push
push
jmp
call
pop
dec
cs
cmpsl
rcll
push
push
mov
scas
push
xor
dec
push
jbe
lock
test
ret
inc
out
orl
xchg
mov
daa
pop
mov
mov
cld
decl
push
rcrb
in
clc
xchg
ret
mov
sub
fstps
jmp
imul
cmp
cmp
sbb
arpl
mov
clc
pop
ljmp
dec
jecxz
xchg
movsl
jno
push
sub
outsb
add
mov
and
jg
jnp
jmp
in
or
test
pop
inc
adc
fists
in
pop
shrl
repnz
mov
adc
or
pusha
add
xchg
lods
sub
mov
repz
adcb
sub
push
add
in
sbb
mov
popa
or
mov
cmp
les
int
imulb
and
in
xchg
ja
or
pop
pop
lret
aam
mov
mull
jl
daa
ja
cmp
xchg
xor
push
jge
lahf
push
cmc
std
cs
or
dec
inc
xor
push
out
push
shlb
mov
mov
and
call
icebp
jno
fistpl
aad
adc
xlat
inc
cmp
test
rorb
inc
push
stc
adc
jg
xor
aad
add
sub
and
cmpsl
test
inc
jge
jge
popf
hlt
pop
mov
add
aam
clc
neg
add
xor
fwait
add
pop
shr
jmp
fistpll
mov
mov
xor
push
push
jle
and
dec
xchg
pop
enter
cmp
xchg
xchg
pop
xor
sbb
jmp
dec
sub
into
rclb
mov
pop
scas
nop
scas
jmp
add
jae
sub
les
imul
rcrl
add
xchg
outsb
and
nop
lahf
pop
lahf
cmp
test
mov
dec
lret
loope
mov
test
jnp
popa
add
cmpl
loopne
push
push
or
push
and
and
inc
mov
mov
scas
jbe
pop
sbb
adc
fcom
stc
popf
idivb
out
test
popf
data16
cmp
pushf
test
sbb
push
test
leave
jge
pop
pushf
scas
nop
jmp
and
cwtl
stc
xor
aam
push
mov
loope
pop
push
mov
pop
daa
jle
xor
add
fcompl
jle
xchg
jp
xor
in
adcb
imul
add
xchg
inc
pop
push
sub
xor
das
mov
into
lret
dec
cwtl
pop
cs
add
or
jle
push
scas
out
cwtl
push
sub
add
pushf
faddl
mov
xchg
data16
sbbb
jns
adc
inc
inc
xchg
js
das
jmp
mov
in
shll
xbegin
push
ljmp
ss
jb
cmp
pop
or
mov
mov
cmp
or
push
iret
test
pop
scas
sub
xorl
cmpsl
push
jmp
sub
ret
insl
dec
xor
in
addb
adc
or
popa
sub
jp
xor
jg
jp
sahf
push
sub
xor
push
loopne
inc
push
dec
sbb
out
sbb
mov
sub
nop
mov
fsts
dec
adc
add
popa
mov
push
shr
rolb
cld
lret
add
lods
bound
ljmp
cs
sbb
int
sbb
sub
push
ret
sub
sbb
pusha
and
cld
les
xorb
sbb
xor
push
jo
data16
jne
lcall
test
inc
add
loope
pusha
add
cwtl
mov
mov
and
testl
mov
xchg
leave
mov
pop
add
dec
cli
sbbl
dec
dec
sub
jb
mov
int
add
repnz
push
pop
addl
pop
cmp
add
rcrl
dec
pop
pop
les
jle
cmp
mov
lret
flds
and
mov
pop
aaa
pop
cmp
pop
mov
out
cmc
fbld
out
es
push
sbb
lds
jno
cld
loope
and
push
push
xchg
adc
push
xchg
push
jmp
add
add
rcrb
cmp
insl
mov
sbb
sub
cmp
push
mov
out
add
mov
cli
and
add
mov
icebp
adc
mov
lds
cmp
push
mov
jb
fbstp
mov
ljmp
ljmp
mov
xchg
test
push
and
stc
pop
jmp
shrl
ja
mov
sahf
mov
int3
pop
pop
xor
iret
add
pop
pop
pop
jge
gs
stc
popa
adc
sub
adc
xor
bound
sbb
hlt
loopne
inc
cmc
ret
push
add
cmp
mov
fs
adc
jmp
and
out
rcll
cmpsl
xchg
jnp
cmp
mov
push
out
mov
scas
sbb
mov
jo
mov
mov
mov
jo
pop
leave
sub
sti
pusha
inc
push
and
pop
adc
cwtl
pusha
mov
pop
neg
inc
cmpb
xor
mov
add
push
jb
ljmp
add
sub
aad
xchg
add
imul
jmp
sahf
xchg
push
push
shll
and
sub
or
jle
jns
dec
fistps
add
outsl
adc
adc
or
loop
adc
sub
repnz
stc
push
loope
daa
insb
cmc
dec
test
fnstsw
add
bound
sti
jmp
push
sub
lcall
test
add
les
jmp
mov
int3
decb
xchg
push
arpl
sub
mov
dec
lret
nop
lret
subb
in
sub
xchg
and
jmp
xchg
and
jno
and
mov
ljmp
stc
xchg
pop
cmp
nop
dec
loope
outsb
sub
or
fisttps
push
xlat
in
inc
jge
mov
xchg
mov
inc
jo
jns
and
mov
add
mov
and
sbb
sbb
ret
fdivrl
lret
or
scas
and
inc
lock
dec
jge
push
xchg
pushf
sbb
sub
sbb
push
mov
xchg
repnz
lds
push
mov
or
add
sub
add
sbb
shll
iret
sub
jns
enter
dec
dec
or
jg
cmpsl
cmp
and
inc
imul
es
pop
xchg
lret
sub
push
sbb
add
jns
add
jle
iret
adc
push
push
jmp
shrb
cmp
add
repnz
inc
repz
andb
xchg
inc
fmuls
push
or
movsl
addl
and
movb
ljmp
and
xchg
or
mov
and
push
inc
mov
and
insb
push
movsb
scas
and
xchg
aad
mov
add
add
test
sub
in
jnp
lock
addr16
push
add
push
mov
inc
shr
scas
inc
mov
xor
push
push
and
add
test
nop
push
push
ret
mov
adc
jo
adcl
mov
ds
in
pop
aam
xchg
sbb
sbb
pop
jmp
test
std
andb
pop
or
repz
push
pop
or
arpl
and
adc
inc
adc
mov
dec
push
mov
in
and
xorl
subl
pop
add
adc
sub
adc
mov
sub
loope
in
repz
add
mov
ss
repz
mov
pop
sub
jge
pop
jmp
jb
jmp
jle
js
fs
daa
inc
enter
jb
pop
jnp
mov
mov
not
mov
add
icebp
add
and
jge
add
mov
xchg
out
mov
pushf
xchg
mov
out
and
sbb
push
sub
push
push
pop
sbb
rep
lahf
leave
adc
mov
imul
sbbl
ret
sarb
sub
sbb
or
imul
xor
lcall
imul
sub
mov
xchg
add
xor
dec
nop
out
cmp
jmp
stos
sub
pop
xchg
mov
stos
cmc
jns
push
mov
pop
fstps
ds
loopne
aad
add
inc
jmp
shl
cvtps2pd
pusha
jmp
stos
pop
lods
leave
mov
ja
adc
cli
xchg
xchg
gs
or
popf
aad
ret
jmp
dec
aad
mov
lar
sbb
scas
les
out
push
movsl
outsb
popa
cmp
cltd
mov
pushf
and
bound
and
sub
rcll
or
xchg
je
mov
clc
mov
pop
xorb
sar
leave
push
or
int3
movsl
pop
jbe
ss
ds
shrl
lock
mov
in
mov
xchg
adc
in
jb
js
or
jae
loope
roll
add
rcrl
jmp
aas
lea
xor
xorb
rcrw
enter
pop
subl
push
jecxz
stc
ja
mov
inc
fs
jno
jle
lahf
movsbl
jbe
pop
adc
xor
cld
xor
push
mov
mov
pop
pop
pop
test
out
lret
mov
pop
js
add
xor
int3
push
outsb
mov
stos
adcb
repz
gs
das
das
je
aad
pop
dec
mov
jge
pop
stos
mov
add
pop
incb
enter
notl
jns
jmp
inc
sub
jns
dec
stos
add
sbb
dec
pop
xor
mov
fsubp
inc
add
notb
jnp
sub
mov
dec
lds
rolb
jae
add
add
rcrb
scas
fsubl
or
ja
test
das
shrl
lret
and
pop
dec
add
sbb
sbb
sub
cmpsl
jl
pop
lret
dec
in
inc
mov
cmp
out
orb
and
arpl
jecxz
test
pop
sbb
scas
mov
imul
cmovo
or
push
jmp
pop
sarb
cmp
push
or
add
aad
pop
jb
cld
xchg
and
cmova
insb
sub
dec
xor
mov
ret
add
ret
into
inc
pop
ljmp
mov
pop
cmc
fcmovb
or
jle
adc
add
dec
mov
xchg
stos
mov
outsl
clc
cmp
movb
aas
inc
adc
mov
xor
icebp
sub
fcoml
sub
add
jae
mov
les
add
jge
xor
pop
and
pop
cs
or
in
pop
or
scas
test
push
xor
pop
add
or
dec
scas
in
ds
xorl
rorb
jmp
adc
jge
ljmp
js
push
aad
xor
jo
mov
das
sbbb
jbe
cmp
sub
xchg
jle
xchg
pop
ja
into
or
fucompp
cmp
pop
sub
xchg
add
or
lret
cmc
mov
push
xchg
push
xor
mov
jbe
add
data16
dec
and
loop
mov
loop
ljmp
mov
jmp
add
sub
inc
aaa
sbb
push
add
inc
repz
mov
and
sbb
dec
sar
sbb
test
es
mov
pop
push
adc
mov
outsl
popa
enter
lods
shrl
lock
pop
sub
icebp
jmp
mov
iret
xor
mov
in
sub
push
jnp
add
xor
push
xor
add
mov
fldl
adc
mov
or
mov
mov
shlb
aaa
sbb
jl
out
nop
andb
addr16
jmp
pop
dec
inc
pop
in
sbb
ret
dec
sub
adc
or
add
jmp
test
out
std
movsb
inc
add
out
xchg
mov
jmp
mov
xor
ret
jg
cmpsb
pop
jno
imul
push
push
sub
int3
scas
outsb
mov
sub
mov
inc
imul
ret
aaa
cs
ret
fistl
daa
std
or
rcrl
ja
je
sahf
in
pop
pop
test
fstl
loop
movsb
movsb
shll
clc
jmp
pop
movsl
repnz
add
mov
loop
inc
test
cli
and
ljmpw
adc
or
adc
pop
mov
or
mov
jnp
add
ret
lds
mov
jb
pop
push
add
cmc
xor
inc
cmp
sbbl
movsl
loopne
sarl
jno
sub
mov
subb
inc
popa
jmp
in
jae
sbb
add
or
add
jns
ds
sti
jmp
mov
test
cmp
mov
popf
ja
xor
fsts
aas
pop
and
sub
in
add
pop
and
les
call
movsb
or
int
les
push
xor
jmp
out
jp
sbb
fidivl
into
jmp
sti
jge
sub
or
jno
jne
xchg
xchg
repnz
inc
pop
sub
mov
jge
cmp
jg
fdivs
dec
scas
xchg
mov
add
test
xchg
xchg
clc
rorl
jge
hlt
sti
imul
loopne
js
or
mov
add
rorl
push
cld
adc
loope
pop
mov
sbb
xchg
rcll
xorl
jmp
jmp
aam
ja
dec
test
repnz
ret
stc
mov
leave
push
fmul
mov
push
pusha
push
sub
pop
mov
add
push
sub
adc
jl
adc
dec
mov
ljmp
xchg
pop
push
jmp
pop
or
fadds
push
repz
sub
jb
sbb
stos
mov
and
jl
mov
sub
sub
sub
adc
rcrl
sub
or
in
stos
das
pop
stc
movsl
shrl
push
mov
add
test
jno
push
lds
and
outsb
dec
mov
mov
lret
aas
inc
sub
es
mov
shll
or
pop
xchg
bound
test
pop
pop
imul
mov
popf
pop
inc
test
xor
inc
mov
xchg
xor
mov
or
push
mov
je
mov
push
add
or
pop
imul
push
pop
add
dec
jmp
mov
sub
xor
das
mov
jne
cwtl
in
out
cmovne
sbb
cmp
push
jmp
or
rcrb
rcll
loopne
sahf
lahf
pop
jecxz
adc
dec
loopne
movsl
xchg
mov
std
das
jmp
add
inc
aad
push
add
in
add
repnz
dec
ret
pop
pop
inc
adc
subl
sti
inc
mov
xchg
outsl
clc
push
mov
sub
mov
fwait
cld
cmp
push
xor
les
daa
sub
lret
addb
or
push
xchg
xchg
jb
push
mov
cwtl
ljmp
fimull
lods
shlb
andb
push
repz
out
bound
sub
jmp
in
jge
dec
sbb
fmul
rclb
or
add
xchg
loop
mov
mov
fmuls
loope
outsl
ret
daa
movsb
pop
mov
pop
jg
in
add
mov
mov
xchg
out
mov
shl
les
pop
dec
add
mov
xchg
loopne
jge
lds
dec
daa
std
pop
fs
sub
dec
xlat
mov
jp
das
test
add
adc
and
add
test
add
dec
pop
jbe
pop
iret
clc
inc
sbb
in
ss
add
jl
out
add
aad
and
add
and
adc
ljmp
sub
pop
lock
pop
icebp
mov
sti
mov
lret
xchg
sbb
rol
xchg
inc
fisttps
or
fistpl
insl
das
xor
inc
xchg
popf
add
aaa
or
enter
sub
insb
and
ret
or
inc
pop
push
test
mov
xchg
mov
pop
pop
sbb
fisubrs
ja
cmc
mov
adc
xor
push
jge
popf
in
jo
jmp
neg
imul
cmp
lock
insl
dec
rcrl
pop
adc
xor
enter
hlt
daa
inc
or
push
add
or
aas
leave
addr16
sub
push
add
push
mov
xlat
fdivs
in
jb
loop
xchg
add
ds
push
lret
or
loopne
jle
not
sbb
loop
and
cmp
mov
sub
pusha
jl
pop
xor
add
ds
push
sbb
xor
xchg
xor
adc
push
pop
lret
mov
sub
ret
js
fucomip
jp
mov
cld
sbb
cmovno
roll
sub
and
sub
je
push
push
je
ds
into
test
addr16
jp
iret
bnd
xchg
mov
std
shl
jl
das
pop
fs
or
sub
enter
and
leave
xor
adc
dec
rolb
push
mov
and
dec
pop
jno
or
and
pop
and
imull
clc
xchg
sti
aas
sbb
xor
push
mov
lahf
sarb
xor
imul
push
pop
jmp
lahf
mov
addb
push
push
dec
jecxz
cmp
cmp
adc
pushf
dec
out
inc
xchg
push
andnps
test
push
rorl
xor
sub
int3
sub
add
cli
jecxz
cmpsb
insb
jnp
clc
mov
dec
mov
cmp
loop
xlat
sti
adc
add
xchg
sbb
call
loopne
mov
mov
add
cmp
in
push
neg
cld
jmp
insl
insb
adc
jmp
jns
mov
adc
fs
jb
jmp
pop
inc
inc
sub
je
test
sub
shll
jl
out
sub
jg
dec
test
mov
es
xchg
mov
add
push
xchg
lds
dec
pop
mov
jmp
sub
push
jge
and
adc
mov
jmp
pop
out
jge
xor
aad
push
push
xor
shrb
scas
mov
ljmp
mov
jg
dec
iret
stc
cmc
add
xor
cs
mov
cmp
inc
imul
std
mov
imul
loop
mov
cltd
dec
inc
cltd
jno
and
outsb
ljmp
loope
cmpsb
std
add
ffree
xor
push
ljmp
mov
repnz
xchg
xor
adcb
push
lods
jnp
aaa
push
sbb
popf
jmp
test
xchg
cld
push
sub
sub
or
rcrb
pop
dec
fsts
stos
mov
xlat
arpl
sbb
adc
jae
in
mov
aas
adcb
xchg
push
jle
dec
push
or
inc
dec
xlat
adc
xor
lock
pop
fsts
js
push
mov
shr
dec
xor
xchg
stos
les
jmp
sbb
jns
shl
add
pop
sbb
mov
jno
jmp
mov
fs
dec
aas
mov
sbb
pop
adc
dec
repz
loop
and
adc
outsl
call
and
mov
adc
sub
subb
add
add
cmpb
notb
xchg
leave
jmp
mull
roll
fdiv
aaa
cmp
dec
js
sti
jne
stos
mov
and
jmp
lahf
cli
or
mov
pop
pop
mov
or
pop
aas
inc
mov
inc
pop
or
and
cld
dec
add
push
pop
pop
inc
imul
in
xor
nop
adc
pop
xchg
ret
movsl
mov
shlb
jg
inc
push
jmp
dec
or
movsb
sti
dec
sub
xor
jge
xchg
and
stc
mov
sub
lret
test
mov
lea
mov
push
mov
mov
and
or
push
mov
xchg
movb
shll
push
rorb
inc
aaa
or
adc
add
dec
jle
jmp
cmp
cmc
mov
stos
imul
sti
xchg
daa
je
loop
add
pusha
inc
dec
pop
pop
sbb
or
pop
jmp
movd
lods
push
xchg
jno
lcall
aam
push
leave
jp
push
mov
and
mov
inc
lcall
insb
sub
filds
addb
dec
xchg
not
jns
outsb
sbb
push
sub
pcmpeqd
sub
call
mov
or
je
and
out
mov
scas
add
int3
out
add
into
push
mov
mov
outsl
aas
and
shr
fcoml
gs
ret
popa
and
cmp
cli
sub
add
pop
pop
adc
push
scas
pop
loopne
out
mov
add
pop
sti
sbbb
hlt
cli
aaa
nop
and
xor
add
movsb
fs
or
mov
fimuls
jmp
push
fbld
cmp
xchg
loopne
dec
cwtl
cwtl
or
or
add
and
rcr
dec
push
add
jmp
pop
lock
cmpl
mov
sbb
jns
je
leave
aam
xchg
popa
adc
call
and
add
sbb
pop
push
scas
test
mov
es
bound
addb
adc
in
xchg
jo
shll
or
xchg
and
inc
outsl
dec
xor
lods
or
repz
mov
push
jmp
add
jnp
and
mov
add
push
push
push
pop
pop
fwait
notl
gs
add
in
adc
outsb
nop
scas
push
dec
repz
jp
movsb
push
jmp
inc
jg
pop
pop
xor
add
fbstp
lahf
mov
bnd
sub
das
clc
pop
xor
adc
cmpl
mov
xchg
stc
mov
push
push
push
jns
and
inc
dec
pop
mov
outsl
mov
pop
add
fs
add
sbb
add
cmp
ds
mov
lds
and
sbb
cmp
or
out
add
push
enter
xor
jmp
sbb
out
stos
test
loop
xlat
out
ret
add
mov
mov
fcoml
aas
push
jecxz
out
xor
xchg
rorb
cmc
xor
dec
adc
mov
sub
push
movsb
push
inc
cmpsb
imul
xchg
sub
pusha
call
pop
pop
in
lods
inc
xor
cmp
sbb
rcrl
sarl
sti
leave
xchg
ss
popf
fimull
scas
pop
dec
xor
mov
cmc
push
xor
bound
mov
push
xor
push
mov
icebp
std
enter
fldl
xchg
mov
mov
jnp
sub
lret
sub
or
jmp
lsl
into
and
cmpsb
jg
fcmove
push
inc
or
sub
pop
in
jl
icebp
in
outsb
shrb
iret
dec
pop
jmp
sub
jnp
mov
xchg
dec
mov
popf
add
jmp
xor
shll
xchg
mov
popf
pop
pop
loopne
lret
data16
das
fcmovne
movsl
movsl
mov
inc
sub
loope
or
pusha
je
or
push
jmp
jge
popa
fisubrs
loopne
sub
or
mov
pusha
add
mov
cmp
sub
xor
fistl
dec
int3
mov
arpl
inc
xchg
pop
or
add
add
testl
push
mov
push
nop
and
jmp
pop
mov
or
js
popf
frstor
clc
fldenv
push
inc
cs
shr
loope
movsb
pop
cltd
add
sahf
bound
int
jl
sbb
or
or
inc
scas
lds
mov
das
or
push
or
push
ret
or
pop
cs
and
dec
pop
dec
xchg
xor
jne
xor
xchg
xorl
xchg
fisttpll
stos
sub
pop
imul
push
mov
add
mov
sbb
add
add
sub
rcrb
in
stc
cwtl
test
cmp
mov
test
or
xor
add
data16
add
scas
sbb
mov
inc
or
add
jmp
out
jmp
inc
add
bound
in
fwait
dec
insb
dec
jnp
xchg
test
ja
xor
dec
ret
stos
cmc
mov
aaa
rcr
das
idivl
mov
sahf
add
lahf
adc
sub
mov
pop
aam
stos
mov
sub
cwtl
stc
add
or
loop
pop
sub
push
push
loop
add
aad
mov
data16
xchg
divb
xchg
add
inc
pop
add
mov
mov
jmp
cmp
cmpsl
and
fnsave
push
add
dec
in
in
dec
push
les
add
sub
jmp
dec
pop
xchg
dec
mov
sub
and
xchg
shrl
out
fildll
dec
xchg
cmpsl
clc
add
stos
fdivrs
xor
or
psrad
or
and
or
fcoms
sub
push
xchg
add
stos
test
shll
dec
lods
sub
lcall
imul
iret
adc
xchg
or
add
sbb
sub
push
out
mov
rolb
loop
sar
movsb
and
sbb
mov
xchg
adc
xor
je
call
imul
repnz
cmp
jg
sub
adc
and
popa
pop
ja
addb
mov
jo
aad
push
mov
push
mov
dec
enter
sub
dec
add
stc
cmp
sub
sbbl
ret
xchg
aaa
push
xchg
sbb
hlt
xchg
in
inc
imul
mov
pop
in
mov
lods
pusha
lea
mov
arpl
mov
sti
orb
mov
mov
testl
jne
movsb
popa
cmpb
insl
pop
mov
lods
push
incl
pop
fs
mov
cwtl
adc
pop
pop
lds
sti
pop
mov
leave
push
and
sub
shlb
pop
mov
jno
push
testb
ja
xor
xorb
and
leave
jnp
loopne
mov
addl
xor
cmpb
je
or
stc
and
pop
pop
sub
cmp
cmp
jl
and
cwtl
or
imul
out
js
es
sbb
rorb
bnd
mov
push
pop
sbb
jle
mov
jl
push
mov
add
imull
sub
test
and
adcb
inc
xchg
je
pop
mov
lds
sbb
pusha
aad
int
psubsw
jge
sbb
getsec
lds
inc
mov
push
push
push
andb
test
loopne
iret
jmp
pop
or
xorb
adc
or
pop
mov
pop
cld
insb
shr
iret
adc
icebp
insl
pop
enter
shrl
and
das
inc
sahf
xor
test
and
scas
add
pop
addl
adc
ds
inc
pop
inc
int3
mov
shr
add
pop
xor
das
fdiv
and
xor
mov
js
xorl
stos
xor
jp
shl
add
pop
pushw
sub
lcall
xchg
nop
or
jne
adc
dec
ret
adc
add
cmpl
popa
push
jb
and
mov
add
add
int
jmp
out
repnz
pushl
out
sbb
in
mov
das
jle
jae
addr16
jne
and
in
push
pop
xor
xor
xchg
jge
andb
push
daa
aad
je
lret
dec
insl
pop
and
pusha
sbb
xor
or
fmuls
xchg
shrl
cmpb
mul
ds
adc
push
push
dec
fnstcw
pop
popf
dec
jnp
mov
push
pusha
dec
clc
jns
lods
mov
add
jne
xor
push
loopne
in
jns
adc
mov
mov
call
xor
filds
lret
push
xchg
mov
jl
pop
aas
movsl
xchg
adc
mov
out
add
fwait
xchg
jg
jp
pop
jmp
pop
jle
int3
std
jmp
into
lret
pop
push
mov
sbb
sbb
jnp
out
mov
pop
adc
fildll
pop
or
push
xchg
dec
lret
add
addb
push
adc
pop
sub
sbb
jne
aad
sub
lea
repz
lock
cs
inc
push
daa
sub
andl
dec
test
jnp
pop
mov
mov
cltd
jnp
cmp
push
in
in
dec
mov
popa
add
add
test
or
or
insl
rcr
push
das
dec
aam
sbb
pop
xor
xchg
ja
inc
dec
mov
jno
push
jmp
push
ret
cs
mov
pop
jo
sbb
push
int3
cmp
cwtl
and
cmpsl
inc
adc
add
adc
xor
daa
dec
jo
pop
fs
add
and
jmp
mov
addl
mov
ret
inc
and
sub
sub
and
popf
frstor
add
es
push
push
aaa
pop
xor
popf
dec
sub
jl
adc
ds
out
add
jle
mov
mov
in
mov
mov
imul
add
inc
popa
pop
shll
push
add
ret
dec
push
negb
mov
ret
xor
mov
xchg
fcoms
pop
sub
jle
adc
fldl
repnz
sti
push
adc
mov
mov
fldt
cmp
shrl
and
in
push
and
and
imul
push
cmp
loope
pop
dec
shl
or
dec
push
xchg
add
hlt
mov
mov
jmp
mov
xchg
sbb
loope
out
mov
in
cli
lock
negl
dec
mov
adc
fsubrs
add
icebp
xor
das
xchg
fists
dec
pop
imul
mov
cmpsl
sub
jg
je
push
mov
jmp
xchg
mov
mov
fists
std
test
sbb
jecxz
or
sub
push
jmp
inc
add
nop
xorb
cld
push
pop
or
aas
daa
or
decl
jns
jmp
lods
inc
outsb
les
fnsave
cmpsb
cmc
subb
push
sarb
repz
and
mov
gs
pop
test
bound
pusha
and
mov
mov
mov
sub
lods
mov
push
xor
inc
enter
pusha
or
cltd
pop
push
mov
lcall
jge
inc
or
out
inc
daa
mov
jl
jno
sub
mov
clc
test
mov
popa
dec
sti
sub
sub
pop
and
push
pop
pusha
loopne
popf
jmp
inc
out
xchg
pop
jg
pop
mov
jmp
lods
lock
or
adc
inc
int
jnp
mov
sub
mov
addr16
leave
add
mov
shl
stc
push
idiv
xchg
rclb
ret
or
pop
xchg
movsl
pop
adc
jmp
je
or
jmp
lds
or
xor
inc
clc
in
call
sub
sub
push
dec
pop
adc
pop
cli
cmp
outsb
or
test
movsl
repnz
dec
lahf
cmp
add
xchg
add
data16
call
fcomps
push
push
sar
pop
es
out
iret
in
mov
push
not
inc
test
dec
mov
jle
rcll
or
dec
dec
ljmp
jmp
andb
sub
push
out
setno
jecxz
mov
lods
pop
mov
sub
loop
mov
sbb
inc
call
add
xor
and
xorb
jge
daa
sub
cmp
dec
jbe
inc
shr
mov
mov
inc
not
and
add
pop
jmp
cli
addr16
jbe
insl
xchg
pop
add
push
xchg
inc
lahf
pop
cld
stos
dec
sub
mov
je
pop
mov
xchg
pop
adcb
cmp
jbe
icebp
nop
push
orb
addr16
adc
push
fsubrl
cltd
add
clc
test
jp
dec
cmp
test
out
jg
loope
subb
dec
call
in
mov
enter
cmpsl
mov
mov
push
mov
fstl
adc
ffree
push
mov
sbb
idivl
pop
mov
enter
mov
mov
pop
dec
pusha
jmp
add
test
insb
jo
pop
inc
addb
fstl
mov
push
mov
arpl
lret
aad
jp
xchg
dec
pop
cmp
mov
push
push
cld
cmp
and
adc
pop
sub
inc
jbe
and
cltd
aam
jns
je
push
lahf
pop
push
jmp
inc
lods
jae
movsl
push
xchg
sub
in
sbb
sbb
push
ja
mov
pop
test
jnp
stos
into
pop
push
xchg
jnp
sub
jmp
push
fisubs
cmpsl
inc
icebp
insl
sbb
dec
shrb
or
or
or
adc
pop
shl
inc
fidivl
hlt
popa
adc
ret
dec
add
push
into
dec
lret
pop
adc
lock
push
jle
sbbl
inc
pusha
ljmp
icebp
je
insl
imul
and
sbb
dec
pop
dec
test
inc
stc
in
into
jb
dec
dec
and
jl,pn
testl
movups
dec
fcmovnb
cmc
xlat
loop
mov
clc
add
pop
lock
mov
sahf
iret
jnp
inc
sahf
out
js
test
loop
push
addl
repnz
sub
jnp
aas
xchg
ret
fsubrp
div
es
jp
add
mov
inc
xchg
call
jae
jnp
xor
cltd
push
xor
fdivr
jmp
push
ret
pop
push
mov
nop
out
pop
pop
xchg
lock
push
jmp
add
cmp
std
push
xchg
mov
jmp
pop
cmpsb
cmp
adc
dec
dec
icebp
mov
xchg
popa
dec
inc
pop
jle
cmp
pop
xchg
fsubp
jmp
pop
xchg
push
inc
and
or
sbb
lret
or
fldt
sub
inc
insl
add
js
adc
sub
xchg
jg
icebp
and
es
mov
aas
or
sub
testl
dec
add
das
or
fdiv
nop
mov
pop
sub
hlt
ljmp
dec
jp
shrl
pushf
mov
dec
adc
mov
popf
push
fwait
mov
jne,pt
cmp
mov
pop
cmp
addb
mov
mov
add
shlb
push
or
cli
xchg
cmpsl
ret
push
mov
loope
cld
lods
fstpt
push
enter
les
int3
dec
js
and
pop
add
out
sub
and
movsb
cwtl
sbb
or
jno
dec
add
pop
ljmp
mov
xchg
ljmp
jmp
sub
jb
mov
and
mov
and
je
mov
inc
imul
sbb
and
ret
mov
lock
xchg
pop
imul
cmpsb
out
dec
int
adc
and
rolb
ds
popf
cs
and
jp
mov
cmpsb
pop
add
in
negl
inc
push
sub
shl
xor
push
xor
pop
pop
loope
idivb
jmp
or
test
out
scas
xchg
js
dec
cmp
addr16
ljmp
gs
mov
cmpsl
mov
jb
push
les
ret
jge
and
dec
or
inc
sub
pusha
jae
pop
adc
add
mov
les
push
pop
pop
call
xorl
pusha
and
jnp
jle
adc
scas
push
sub
in
jge
push
adc
shrb
andb
jmp
fucomip
sub
pop
loop
mov
insl
into
push
loop
mov
sub
inc
jmp
xor
ja
add
xchg
mov
mov
daa
mov
xchg
ljmp
es
add
lahf
inc
xor
das
xchg
cmp
sbb
pop
jmp
pop
cmp
jne
dec
sub
pop
add
stos
or
imul
push
jmp
out
adc
push
push
jae
addb
xchg
add
jecxz
adc
leave
fadds
jne
push
mov
jmp
push
pop
xor
sub
mov
sub
mov
inc
mov
and
loopne
movl
mov
pop
mov
lret
mov
stos
inc
xor
cmpsl
stos
shlb
mov
loope
xchg
dec
pop
test
loop
movsl
enter
jb
sub
pop
dec
cmpsl
out
ret
dec
das
cld
or
int
xlat
push
scas
sbb
push
mov
out
sti
insl
outsl
outsb
sub
pusha
test
arpl
jo
pop
addr16
cmc
loopne
int
push
inc
or
sub
ja
and
pop
jge
and
jbe
push
push
mov
pusha
jmp
inc
add
out
loop
adc
push
cmpb
push
bound
and
mov
mov
jg
push
cmpb
sub
add
jg
push
sti
push
fwait
jo
dec
jbe
push
add
jp
push
jmp
in
sahf
mov
add
adc
push
pop
leave
test
xor
jge
fisttpll
movb
jl
xchg
lock
or
int3
and
cmp
jnp
popf
bound
jl
push
cwtl
fs
pop
mov
sbbl
xor
pop
les
dec
or
push
mov
and
dec
dec
and
add
roll
aad
push
pop
pop
sti
lret
in
xchg
and
mov
xchg
pop
mov
pop
adc
call
pop
jle
data16
xor
inc
xor
sub
add
adc
sub
xor
adc
sarl
mov
push
mov
cmp
sbb
gs
push
lds
sbb
outsb
dec
and
hlt
sub
out
adc
scas
xchg
ja
inc
arpl
scas
pop
or
ljmp
dec
adc
jne
push
jmp
jnp
adc
and
aam
sub
push
outsl
cmpl
fistl
xlat
cwtl
daa
sub
dec
mov
out
daa
push
faddl
xor
push
fistpl
and
pushf
add
popa
xor
jmp
mov
dec
lods
cwtl
jae
dec
jmp
fdivr
xorb
push
nop
mov
add
subb
or
cmp
outsb
pop
or
add
and
mov
xchg
iret
mov
out
pop
repnz
cld
sub
repz
dec
xor
sbb
dec
lret
fadds
push
xchg
and
push
jp,pt
adc
pop
call
imul
adc
nop
out
and
rcrl
push
mov
sub
xchg
add
push
data16
mov
mov
push
mov
lret
mov
ds
jae,pn
movsl
push
pop
xchg
add
mov
push
shl
jmp
mov
mov
pop
mov
sbb
inc
loop
dec
xor
push
hlt
and
mov
popf
shll
scas
subl
adc
push
add
inc
stc
dec
mov
into
add
in
inc
xchg
enter
mov
rcrl
adc
inc
add
pop
stos
mov
push
aaa
or
roll
mov
inc
add
xor
jnp
add
jno
pop
xchg
movsl
sbb
sub
or
xor
rorl
lret
sub
xchg
ret
inc
movl
or
mov
jo
push
sbb
nop
inc
mov
andl
cmc
lcall
shll
mov
loop
add
inc
or
dec
test
pop
push
sarb
das
xor
imull
or
adc
pop
dec
jno
push
imul
xchg
pop
adc
adcb
repz
mov
and
jg
aam
sbb
cwtl
pusha
rclb
or
jmp
out
jnp
or
jb
push
or
dec
sbb
push
push
pop
jo
push
and
cmpsl
mov
and
xor
sbb
jecxz
js
add
mov
sub
subb
mov
je
fscale
sarw
mov
push
jmp
push
andb
xor
add
xor
jmp
jg
adc
int3
arpl
push
cwtl
shrl
test
push
jmp
ds
add
icebp
inc
and
fildl
roll
repnz
inc
pop
icebp
mov
pop
adc
or
or
sub
addr16
mov
prefetchw
or
pop
mov
xor
mov
jbe
push
jmp
add
sub
jnp
mov
push
xor
sarl
pop
push
call
add
imul
insl
orb
mov
pop
dec
in
jge
adc
repnz
andl
dec
or
test
mov
and
jecxz
add
rcll
add
mov
sub
jb
les
lret
pushf
stos
movsl
add
inc
add
or
lock
lcall
insb
into
cmpl
nop
loope
sbb
ds
xor
mov
imul
push
sarl
jl
or
outsl
dec
adc
cmovg
mov
test
or
or
adc
push
cmp
push
and
lock
or
faddl
xchg
and
or
add
pop
xor
add
shll
add
gs
out
jns
xchg
sub
inc
lcall
nop
aad
leave
inc
xchg
push
test
ficomps
in
lret
sbb
and
shll
ret
out
pushf
getsec
cmc
jbe
and
mov
fwait
lret
fbld
push
les
mov
test
sarl
cmp
sahf
movsl
xchg
sbb
and
or
pop
inc
xchg
jae
add
mov
and
add
ss
cpuid
mov
mov
add
push
and
into
cmpsl
div
inc
add
sbb
call
mov
jo
aam
add
imul
in
popa
sub
push
pop
fwait
dec
filds
pop
es
cmpsl
fidivl
repnz
repz
sbb
flds
mov
sbb
scas
xor
sub
pop
fbld
repz
out
dec
fstl
popl
ffreep
cwtl
add
cmp
in
int
adcb
fsubl
mov
xlat
pop
add
aaa
bound
mov
arpl
jb
xchg
jno
notb
in
mov
push
pop
inc
mov
push
inc
and
fadds
daa
outsl
aad
mov
out
or
out
add
cmpsb
imul
dec
in
xchg
into
mov
cwtl
xor
add
add
stos
lahf
es
push
add
pop
and
leave
jmp
jge
jg
add
in
mov
pop
gs
dec
adc
pop
cli
add
mov
xchg
hlt
lcall
ljmp
scas
mov
xor
sub
push
popa
out
loopne
decb
add
movl
repz
and
ret
mov
std
or
testl
pusha
add
cmp
jecxz
push
jb
add
test
nop
movsb
aas
call
stos
outsl
mov
cmpsb
pop
sub
movntps
clc
rcrb
test
add
fxch
push
adc
leave
jg
or
scas
std
xor
sub
dec
sub
fistpll
adc
test
add
xorl
add
mov
es
inc
movsl
and
cmp
fsubr
ds
jne
icebp
repnz
pop
out
mov
pop
aas
ret
sti
vprotb
test
add
aad
jge
push
mov
push
addb
xchg
es
int3
inc
add
mov
fst
add
leave
jns
lahf
cmp
add
in
mov
mov
in
add
movsl
adc
jecxz
and
outsl
mov
popa
push
jo
add
pop
lret
mov
add
out
xchg
cli
dec
add
mov
test
outsl
cmpl
in
lret
pop
inc
add
mov
fsubrs
push
sub
jnp
int
push
sub
xchg
cmp
orl
clc
sub
cmpps
and
ljmp
ficoms
adc
mov
movsb
notl
xorb
mov
push
inc
adc
rclb
xorb
ljmp
popf
mov
add
ss
roll
xor
ret
xor
pushf
scas
or
push
aas
mov
xor
xor
cld
mov
in
add
leave
lea
and
lock
inc
pop
repnz
add
movsl
add
mov
rcr
cs
add
pop
mov
jno
inc
push
mov
test
fildl
stos
sbb
clc
shrb
sub
fisubl
or
and
popf
shrl
push
cltd
ljmp
add
mov
in
insl
xrstors
push
mov
add
jp
jnp
xor
xchg
nop
pop
add
jle
sub
test
fwait
push
popa
push
mov
sbb
xchg
sbb
fs
add
cltd
push
imul
les
fadds
xchg
cmp
adc
insb
rolb
xchg
sub
ficoml
or
aam
mov
add
aam
cmp
push
mov
out
add
int
les
mov
pop
cltd
mov
call
xchg
and
sbb
pushf
sub
push
pop
adc
mov
mov
xchg
pusha
movsb
ret
js
add
movsl
and
jmp
sbb
dec
add
dec
jmp
daa
fistps
cli
add
nop
aaa
mov
leave
xchg
push
call
ss
jecxz
fistps
loop
add
stc
shlb
mov
add
xlat
test
imul
loope
cwtl
fs
jp
push
into
mov
addr16
je
push
push
fdivrs
inc
pop
icebp
add
and
mov
cmpb
mov
sbb
or
test
push
popf
test
push
xor
sub
inc
lods
pop
cmovns
call
mov
push
cmp
add
jno
xchg
cmp
fcmovb
mov
mov
popa
add
int3
xor
mov
ljmp
movb
cld
push
xchg
jne
mov
xchg
cmp
sbb
in
add
and
or
loop
mov
shll
clc
loope
rol
push
leave
or
outsb
jb
inc
mov
bnd
mov
std
mov
shlb
mov
dec
inc
roll
xlat
das
inc
push
push
adc
notl
add
sbb
aas
push
es
jg
jle
dec
dec
and
loopne
in
adc
iret
cs
adc
mov
shlb
xchg
sbb
out
lcall
icebp
fnstenv
lcall
in
add
loope
jnp
ljmp
test
test
dec
pop
ret
adcb
fdivrl
inc
cwtd
loopne
pop
xlat
scas
push
add
subb
adc
add
adc
mov
arpl
sub
stc
int
jge
inc
lcall
sbb
add
jo
xchg
jns
lahf
pop
or
scas
sub
aaa
stos
add
push
cmp
out
loopne
call
hlt
xchg
pop
loope
lock
or
sahf
add
inc
adc
jb
inc
dec
inc
or
andb
loopne
xchg
mov
jmp
dec
f2xm1
and
dec
inc
shl
andb
adc
pop
aad
inc
dec
and
call
mov
add
mov
faddl
rorl
loopne
xchg
add
mov
add
aad
outsb
inc
xchg
add
nop
xchg
push
notl
add
dec
adc
dec
add
sub
cmpsb
fistpl
adcb
dec
insl
bswap
movl
mov
mov
aad
cmp
add
cld
cs
rorb
sbb
das
loopew
xor
insb
add
ret
xchg
rcrl
mov
popa
ljmp
mov
jecxz
xchg
das
add
pop
mov
xchg
loope
rclb
loopne
test
add
or
cmp
xchg
fdivrl
pop
outsb
xlat
xchg
jne
add
push
es
jb
push
cmp
xchg
add
mov
aad
cwtl
enter
push
jp
and
lea
sbb
aas
sbb
jnp
mov
push
lahf
in
pop
add
cmp
scas
add
nop
pop
cltd
cmc
addl
xchg
lock
ret
shlb
outsl
popa
add
call
mov
add
cmp
xchg
add
sbb
scas
daa
stos
stc
fs
mov
lret
pushf
in
int3
add
cwtl
dec
xor
push
fildll
xor
and
add
ror
inc
aas
js
sbb
sub
jne
addps
inc
and
xor
add
adc
jae
pop
adc
jmp
pop
sbb
inc
jbe
adc
cmp
shl
mov
xor
sub
mov
inc
jp
push
stos
or
jns
test
inc
add
mov
jbe
std
pop
movsb
mov
and
shll
adc
ljmp
add
ss
int
adc
out
sbb
pop
cwtl
add
push
add
mov
mov
mov
fdivrl
add
and
enter
and
sbb
xlat
aam
sbb
pop
push
lcall
mov
mov
cmpsl
in
add
add
lods
mov
cs
inc
adc
imul
mov
scas
pop
sub
add
into
add
pop
mov
dec
nop
fcom
repz
insb
pop
xlat
rclb
jl
fdivrl
rcll
orb
push
lea
pop
inc
lods
in
add
mov
jp
add
ret
add
sti
jle
mov
xorb
cwtl
add
loope
xor
jo
push
imul
pop
jmp
xor
shlb
mov
mov
call
lret
sub
sbb
cmpsl
fisubs
push
ret
fcmovne
push
add
shll
lods
cmp
lret
out
push
fcoms
add
notb
xchg
push
fcomps
addr16
push
aad
mov
xor
jns
mov
cmp
xchg
cmp
addb
aam
xor
cltd
adc
das
push
sbb
call
or
lock
and
adc
cmpsb
dec
bound
sub
jbe
pushf
sbb
mov
adc
int3
roll
aas
push
dec
dec
andb
iret
add
push
inc
xchg
pop
mov
cwtl
sub
mov
adc
mov
cwtl
insl
add
xchg
xor
mov
out
inc
pop
movsb
add
inc
inc
adc
add
out
jp
insl
push
fwait
add
fldt
cmc
xchg
lret
outsl
xor
sbb
mov
mov
and
add
lods
sub
xor
add
mov
jmp
orb
paddsw
gs
pop
xor
add
pop
jns
loop
inc
and
xor
ficompl
test
inc
sub
add
stos
add
aad
ja
sbb
add
popa
ds
pop
mov
jg
andb
xchg
adc
mov
push
stc
or
in
sbb
jnp
test
orb
psubsw
bound
leave
and
aas
sbb
ss
mov
cwtl
add
add
pop
pop
test
add
xchg
decl
orl
mov
cmp
and
les
push
orb
pop
rorb
movsl
sub
into
pop
test
ds
fcmove
jae
add
xor
sub
cmpsl
stc
and
jne
mov
add
ret
pop
sbb
and
aas
inc
mov
es
arpl
jae
xchg
jp
add
jnp
test
jbe
pop
lcall
push
popw
lods
fucom
in
jecxz
sub
xchg
clc
leave
subl
mov
jle
pop
mov
pusha
js
push
or
add
or
out
sub
mov
insb
push
incb
jbe
mov
popa
icebp
mov
cwtl
sahf
daa
add
lods
ret
jo
addl
out
xor
lds
dec
add
aam
int3
enter
add
ret
cmpsl
gs
xor
ljmp
sahf
loope
push
cltd
adc
iret
add
inc
insb
pop
call
jge
test
pop
jecxz
lret
mov
or
push
mov
fstpt
or
loope
fs
clc
nop
xor
xchg
js
mov
xchg
in
add
loop
push
push
add
jge
add
test
add
in
jo
cli
in
dec
add
push
movsl
mov
or
ss
add
paddq
push
lds
sub
inc
fs
shlb
pop
imul
adc
add
mov
dec
dec
pushf
cmp
sub
xchg
ss
clc
ja
loop
mov
adcb
add
or
adc
cmp
mov
ljmp
mov
sub
add
mov
test
jl
mov
loop
aaa
mov
adc
sub
or
add
inc
scas
cmp
inc
lret
add
test
clc
add
sbb
es
sub
cmp
push
std
lock
inc
sbb
push
iret
inc
out
push
pop
xabort
fnsave
jbe
xchg
rolb
push
xchg
push
scas
pusha
xchg
loopne
incl
adc
sti
nop
add
aas
outsl
add
mov
mov
cmpsl
add
jno
shll
and
xchg
sbb
add
stos
test
notb
add
mov
mov
js
dec
sarl
add
dec
push
mov
lea
jbe
push
fs
mov
mov
add
mov
xlat
adc
jb
add
loopne
sub
addr16
push
repnz
jge
dec
inc
or
xchg
aas
sbb
xor
mov
mov
jl
add
push
or
and
movnti
push
hlt
mov
das
push
push
inc
int
cmpl
in
test
nop
dec
add
testb
sbb
dec
fmuls
xchg
add
pusha
outsb
pop
int
xchg
add
add
or
add
cmpsl
pop
push
sbb
pop
mov
pop
inc
mov
mov
mov
mov
es
insb
outsl
mov
mov
fistpll
jb
enter
out
cs
cmp
fmuls
sbb
jmp
xor
push
mov
cmp
les
inc
mov
and
outsb
or
testl
sbb
push
add
loop
dec
loope
xor
lock
cmc
mov
movsl
jmp
sbb
daa
pop
pop
jb
or
addb
std
movsb
cmpsb
in
pop
cld
stos
je
test
aas
cwtl
dec
and
cmp
rcrb
int
xchg
rorb
repnz
shlb
cmove
push
outsb
add
movsl
std
pop
pop
loop
add
pop
mov
cs
xchg
mov
andb
cld
negl
add
test
dec
add
arpl
xor
dec
sub
and
ss
test
and
inc
test
cmpsl
inc
add
dec
pop
and
cmp
and
cmp
adc
add
lahf
scas
movsb
flds
cmp
out
notb
push
push
js
cs
inc
jno
mov
adc
mov
test
mov
pop
pop
and
orl
push
pop
mov
subb
dec
dec
and
and
cld
and
nop
push
sbb
lret
arpl
xor
cmpsl
adc
movl
repz
cmc
cmp
add
and
pusha
mov
adc
and
push
xchg
dec
fwait
adc
lea
lods
add
mov
jecxz
pop
ss
or
cmp
inc
test
mov
add
jae
rcll
lods
adc
jbe
in
add
push
xchg
ss
adc
je
sbb
or
cmp
scas
out
add
xor
out
add
and
lock
add
mov
mov
jae
sarb
xchg
jmp
sbb
das
mov
inc
and
testl
fsubl
hlt
lock
sub
test
sbb
and
pushf
andl
mov
or
pushf
sub
add
shr
inc
sub
mov
dec
dec
in
or
fmuls
xchg
xor
les
movsb
sbb
inc
and
fadd
sbb
ds
hlt
pop
jnp
jle
mov
nop
xchg
jmp
mov
xchg
mul
test
bound
sub
cld
mov
stc
repnz
adc
sarb
mov
scas
mov
sub
xor
std
sub
ds
and
les
xchg
sub
cmp
add
lahf
push
mov
imul
test
in
sub
xabort
outsl
loopne
cwtl
nop
pop
decl
and
mov
ss
loopne
rorb
fisttpll
subl
inc
ljmp
iret
stos
fldl
xor
in
sub
lahf
aam
xchg
mov
loopne,pn
fadd
push
or
mov
push
test
orl
mov
or
les
push
xchg
xchg
adc
ljmp
mov
aad
imul
sub
pop
adc
int3
inc
lods
mov
push
cmpsl
mov
xor
cld
loopne
movsb
les
xchg
dec
fs
push
nop
mov
mov
cmp
test
and
sub
aad
push
icebp
cmpsb
pop
pop
adc
and
addl
xor
lcall
in
adcl
xacquire
aam
aas
repnz
outsb
dec
add
movsb
das
and
jno
adc
xor
xor
mov
sahf
jecxz
or
movsb
addb
add
cmpsl
lcall
repnz
cmp
fcoml
xorl
inc
cmp
aad
nop
repz
call
sbb
xchg
push
je
shll
push
jnp
aas
add
mov
push
sbb
scas
inc
dec
mov
jecxz
loopne
push
sub
pop
push
cli
cs
push
les
and
mov
sub
sbb
icebp
add
adc
loopne
scas
add
aaa
lds
enter
add
and
fisttpll
xor
add
ret
ljmp
fs
movsl
loopne
or
mov
sbb
imull
mov
cld
test
mov
mov
sbb
leave
pop
sub
rorl
and
xor
arpl
fdivs
in
mov
lcall
mov
aaa
and
push
cmp
add
nop
pop
lea
fcomps
inc
in
sub
sti
inc
ds
adcb
addl
add
scas
lods
hlt
fsub
fimull
sbb
vmread
dec
inc
stos
and
mov
or
call
clc
cmp
add
enter
push
inc
test
mov
sub
push
scas
dec
and
jge
sbbb
pop
movsl
pusha
xorb
sbb
mov
cmp
hlt
and
or
and
inc
jecxz
stc
bound
imul
xchg
sbb
stos
xor
inc
bswap
xor
mov
in
xor
cs
cld
cmp
nop
xor
or
mov
cmp
push
push
fdivl
push
xor
jo
jge
fbstp
pop
loope
cmp
mov
push
sbb
jnp
enter
test
adc
mov
jl
scas
daa
int3
in
mov
jae
pop
cmp
inc
or
add
movsl
icebp
je
add
xchg
arpl
je
arpl
or
testl
stos
aaa
and
inc
adc
inc
adc
mov
movsl
xor
jge
mov
sbb
flds
aaa
jmp
add
adc
or
dec
xchg
lea
repnz
and
outsl
cmp
or
or
cli
and
sbb
sbb
jo
rep
push
add
je
stc
push
sbb
xlat
add
adc
push
nop
and
xchg
jo
jae
add
cs
xor
hlt
and
dec
inc
rcll
or
inc
lea
push
adc
or
ret
jno
add
pop
mov
sub
sahf
or
inc
xor
popa
pop
add
cmp
and
data16
dec
and
ss
mov
and
repnz
xor
mov
and
pusha
or
adc
aas
icebp
mov
xchg
push
add
lret
outsl
frstor
cmpsb
and
cli
xchg
adc
add
pop
jne
add
sub
icebp
push
xchg
xor
xchg
sub
push
adc
out
lret
mov
inc
ja
repz
add
xchg
xchg
adc
dec
call
add
inc
pop
push
in
test
enter
push
cmpsb
or
dec
sbb
shrl
adcl
shll
incl
xchg
push
push
dec
or
repnz
out
aaa
add
fwait
cmpsb
leave
cli
mov
ret
out
data16
add
cmp
inc
repz
xchg
add
push
xor
add
pop
add
test
rol
pushf
into
adc
sbb
and
mov
cmp
aam
mov
jo
test
cmp
sbb
stc
xchg
mov
js
or
inc
shrb
mov
add
int
movb
jbe
jecxz
shl
inc
or
push
push
xchg
add
mov
mov
rolb
pop
inc
and
mov
mov
roll
add
xor
adc
and
call
sbb
test
dec
sub
insb
imul
sbb
cwtl
scas
dec
cwtl
mov
nop
icebp
add
sbb
and
or
notb
roll
das
dec
dec
sbbb
or
inc
pop
jae
clc
testl
cmp
and
mov
add
dec
xor
loope
dec
push
cmp
and
sub
pop
test
sbb
loop
rolb
lods
mov
add
push
cmp
and
inc
mov
or
or
add
and
inc
xchg
sub
sub
add
xor
cmpsb
add
enter
inc
xor
sbbl
cmp
push
dec
test
int3
xor
orb
sub
and
jne
gs
or
jge
pop
dec
sbb
mov
mov
jl
push
sbb
xor
mov
data16
test
adcb
or
test
sub
cmc
mov
test
and
inc
or
or
pop
in
jno
inc
ret
or
sub
jp
pusha
pop
adc
jnp
cs
fisubs
js
shrb
mov
sbb
std
loope
loop
push
pop
mov
push
push
fwait
jbe
add
cld
gs
or
test
sbb
nop
rclb
mov
and
push
clc
test
inc
add
and
pop
hlt
adc
inc
add
cmp
push
and
loope
insb
insl
push
pop
xchg
sub
jecxz
cmp
and
pop
sub
lods
je
mov
cltd
pusha
sbb
mov
inc
imul
or
mov
filds
or
sub
ja
jo
mov
and
pop
jecxz
cmpxchg
popa
shrb
adc
out
push
jge
stos
pop
nop
test
push
sub
repnz
and
push
jp
inc
cwtl
or
es
cmp
enter
pop
out
mov
push
subb
in
mov
leave
inc
sbb
lcall
lock
jb
dec
pop
cs
lock
cltd
test
mov
xorb
jg
pop
xchg
jle
cmp
repnz
test
add
cli
js
jne
add
aad
insb
mov
fwait
mov
add
jb
xchg
shll
xor
mov
mov
xor
add
mov
mov
dec
mov
push
mov
add
cmpl
shlb
shll
mov
loopne
and
shlb
shlb
dec
xchg
js
push
shlb
pop
pop
pusha
popa
inc
imul
jne
in
loopne
aas
pop
loopne
sbb
ds
dec
adc
add
mov
add
xchg
cmpsb
or
pop
lock
jb
shlb
add
movsl
cmp
push
out
loop
fimuls
lock
pop
and
inc
mov
dec
pusha
popf
inc
sbb
fisubl
add
test
dec
push
lea
outsl
sub
js
or
dec
add
add
call
sub
jl
push
sub
je
inc
fincstp
or
pop
jl
inc
mov
inc
add
mov
add
jno
pusha
les
int3
jmp
jl
and
xor
fcoml
inc
es
test
inc
and
xchg
iret
xchg
test
sbb
jl
mov
jno
shlb
push
or
push
xchg
and
aam
fdiv
fdivl
mov
mov
pop
cmpb
inc
sub
add
pop
mov
pop
addr16
xorb
jb
jecxz
adc
cli
inc
loopne
and
adc
ljmp
lods
es
add
shrb
scas
je
and
mov
add
addl
mov
call
int3
or
add
pushf
shll
sub
add
imul
sub
mov
pop
jmp
mov
fcomi
in
inc
dec
and
dec
pop
or
or
jge
shrb
mov
add
pop
sahf
icebp
mov
sub
cmpsl
pushf
pusha
add
scas
mov
sub
mov
xor
add
sbb
test
cmp
mov
add
inc
jns
xlat
pop
cmp
or
sub
and
pop
lock
test
ret
in
mov
cmp
cmp
jb
pop
insb
lock
mov
je
outsb
loopne
inc
add
push
adc
hlt
ret
popa
out
sbb
mov
jo
addr16
repz
fidivrl
insl
cmp
jb
imul
pop
xor
pop
data16
push
imul
insb
push
sbb
cmpsl
cwtl
inc
popa
add
ret
in
ljmp
insl
hlt
into
pop
arpl
cmp
inc
insb
subb
call
ret
loope
push
or
jp
outsb
xor
xor
ret
pop
cmpsb
or
mov
and
addb
add
push
sbb
aad
pop
cli
adc
mull
mov
cmp
dec
add
or
xchg
into
cltd
daa
cmp
in
push
sbb
jnp
add
frstor
test
xchg
xor
pop
fs
pusha
mov
jp
inc
mov
pop
gs
or
shlb
shlb
xor
dec
push
test
and
sbb
ja
loope
inc
sbb
lret
add
inc
fisubrs
cmp
push
xor
sbb
pop
cmp
dec
inc
pop
inc
loopne
js
test
sbb
mov
fnstenv
lock
push
xor
push
fistl
in
xor
mov
add
or
xor
dec
sub
sub
push
lret
cmpl
pop
push
adc
xor
shrl
adc
dec
and
adc
xor
or
fsub
shl
inc
sbb
xchg
jmp
dec
rcll
pop
add
mov
lcall
push
cmp
xor
fstp
dec
sbb
and
dec
call
adc
xchg
mov
in
sub
or
les
test
divl
outsb
pop
sbb
loopne
mov
jbe
sub
jl
test
or
test
or
inc
divl
test
xchg
xor
adc
jae
dec
sub
sahf
push
test
mov
test
fwait
mov
aam
adc
and
mov
sbb
adc
scas
mov
inc
add
or
int3
loope
icebp
mov
cs
or
adc
int
ret
bound
fisubl
rcll
cwtl
cltd
dec
dec
data16
lret
pop
mov
out
fdivp
pop
dec
pop
fs
inc
push
inc
mov
adc
pop
add
or
jno
fisubs
add
cmc
push
movsb
js
into
or
ss
inc
xor
cld
push
pusha
xor
or
adc
mov
jns
add
aaa
insb
testb
inc
xchg
cmc
lds
repz
cmp
jae
les
add
push
addr16
add
xchg
in
mov
adc
push
stc
jno
pusha
pop
in
add
push
cmp
jae
pop
out
jo
hlt
pop
ret
les
push
push
add
pop
repnz
sbb
orl
loopne
cmp
icebp
push
sub
ja
inc
je
adc
dec
shlb
roll
dec
jmp
dec
sbbb
lret
loopne
dec
mov
jo
pop
shrl
xor
shl
mov
or
divb
or
add
pusha
fmuls
mov
dec
push
pop
add
roll
or
sti
test
rorb
push
je
daa
mov
mov
xlat
pop
jmp
dec
or
jns
popa
jp
inc
std
adc
pop
in
popa
jp
and
push
pusha
inc
and
fstpt
sti
cltd
testb
pop
add
push
dec
and
inc
or
inc
lock
sub
jp
mov
jo
gs
scas
mov
pushf
fistl
repz
sub
mov
adc
add
push
jo
fiaddl
push
mov
push
mov
dec
jecxz
dec
es
bound
mov
jns
sbbl
cmpsl
loopne
incb
scas
push
out
adc
ret
ffreep
pop
addr16
js
imul
adcb
arpl
mov
inc
insb
mov
adc
iret
stos
inc
rolb
rclb
add
push
xlat
lds
jg
inc
insl
enter
lds
loop
sbb
loopne
cmp
mov
call
in
or
stos
mov
call
fs
cmpsb
iret
sub
nop
sbb
or
push
inc
ds
pushf
jl
leave
push
aas
or
mov
mov
push
xchg
xchg
xor
and
and
inc
loope
mov
adc
and
dec
xchg
mull
clc
inc
stc
cli
mov
xchg
or
and
inc
imul
mov
adc
out
outsb
xor
dec
pop
xchg
rorl
mov
movsl
add
push
sub
inc
mov
push
in
xorps
mov
scas
pop
push
out
lods
iret
inc
xor
xlat
xchg
movl
orl
out
fistpll
push
dec
pop
cli
pop
add
push
dec
push
int3
mov
andl
cmp
xchg
sbbb
mov
stos
lods
roll
decl
dec
pop
pop
push
into
sub
bound
adc
adc
stos
add
nop
dec
jecxz
clc
cmp
push
sbb
inc
aad
add
dec
ret
icebp
inc
dec
xchg
mov
sub
imul
jns
add
dec
adc
lock
movsb
in
scas
loopne
sub
addr16
adc
pop
cmp
and
fidivs
cmc
pop
pop
arpl
jge
js
out
stos
jnp
add
iret
pop
lcall
pop
loop
adc
fstpt
mov
rolb
adc
shlb
pusha
roll
cltd
insb
nop
push
xlat
test
sbb
packsswb
xchg
test
sti
add
das
in
mov
add
popa
mov
sub
loop
xor
andb
ds
lea
pop
orb
popa
sbbl
in
mov
insl
push
int3
jo
stc
dec
leave
and
pushf
ja
add
popa
xchg
push
jno
sbb
sbb
pushf
inc
sub
add
sarb
or
das
push
out
addr16
movsb
call
cmp
adc
add
ret
mov
jno
add
aam
les
nop
sahf
push
and
cmp
pop
xor
inc
addb
sarl
popl
xor
cmpsl
out
add
sbb
aad
loopne
insl
test
add
pop
cltd
xor
pop
mov
leave
lea
call
das
and
sbb
and
dec
jge
jnp
ja
push
or
pop
mov
cmc
nop
cld
add
inc
mov
into
add
int3
add
sub
dec
add
negl
sub
adc
inc
push
adc
add
dec
call
imul
adcl
dec
cwtl
addr16
push
pop
mov
aam
add
jle
cli
rorl
clc
dec
mov
or
and
movsb
add
mov
mov
mov
scas
jne
jns
add
pop
popf
xor
push
pusha
or
cltd
fisttpl
add
add
or
jp
test
imulb
xchg
aaa
mov
xor
jo
mov
xor
push
mov
cli
and
andl
loope
je
xchg
mov
out
jmp
mov
or
inc
or
push
sub
leave
and
mov
pop
add
inc
aam
add
jl
xor
enter
fmuls
popf
cmp
insb
aam
add
xchg
sbb
xor
sbb
mov
pushl
adc
fldl
adc
lahf
inc
cmc
xlat
test
sub
mov
add
mov
add
sub
shlb
nop
inc
and
jp
scas
test
lea
xor
fs
xlat
outsb
jno
add
jae
xorb
jbe
leave
mov
loopne
adc
xchg
xchg
xchg
imul
xor
mov
and
add
or
shl
pop
out
in
lds
lea
xchg
pop
arpl
xor
sub
add
fadds
adc
xor
outsb
sub
jbe
shlb
cmc
sbb
push
aaa
lock
fistl
enter
push
sbb
pop
adc
mov
and
sbbb
jnp
int3
add
movsl
jge
cmpsl
inc
test
dec
out
mov
nop
pop
pop
mov
daa
cmp
mov
adc
adcb
into
pop
sbb
subb
fadds
lahf
xchg
loop
pushf
push
inc
cmp
or
xchg
pop
ret
jge
cmp
ds
aaa
and
idivb
aas
lret
jle
enter
mov
dec
adc
loop
xchg
movl
push
mov
lock
add
cld
lahf
mov
mov
jno
ret
sbb
aam
xor
pop
jns
inc
mov
pop
loopne
jp
add
outsl
scas
testb
xchg
cmp
movl
enter
adc
adc
mov
pop
pop
iret
daa
rcrb
lahf
notl
fs
xor
inc
xchg
pavgb
in
loopne
jecxz
xchg
inc
or
push
mov
jo
add
mov
add
nop
xor
or
pop
fimull
pop
outsb
pop
xchg
divl
add
int
xchg
and
and
gs
loop
push
sbb
enter
cmpsb
call
outsl
jecxz
adc
mov
add
mov
int3
inc
push
outsl
jmp
sbbb
pop
or
dec
scas
sbb
xor
incl
out
xchg
jo
sub
cmp
cmp
lds
pop
test
xor
add
loopne
sbb
jge
into
add
clc
fsubp
jno
cmp
mov
add
sbbl
mov
jp
adc
lods
xchg
cmp
adc
and
aad
xlat
push
inc
mov
out
push
popf
ljmp
pushf
add
mov
mov
adc
out
jmp
loopne
xchg
mov
mov
cltd
ficomps
add
inc
push
sahf
mov
scas
adc
inc
cld
push
mov
jo
sbb
negl
add
cmp
jne
add
sti
lret
ja
jmp
mov
pusha
stc
adc
fstps
fstl
enter
shrb
daa
and
xchg
pop
ret
xchg
and
pop
add
lret
fidivs
jecxz
loopne
xchg
jb
cmp
inc
adc
xchg
push
sbb
push
add
aas
add
mov
inc
adc
add
ret
aaa
jmp
cli
lods
dec
add
jg
pop
mov
adc
test
jns
sbb
and
or
xchg
orb
mov
jle
cltd
inc
add
orb
rolb
pop
add
lock
sbb
pop
add
and
mov
movsl
hlt
mov
mov
ret
mov
ds
add
lds
in
roll
mov
and
push
inc
dec
imul
adc
push
shl
cmpsl
ds
pop
nop
mov
push
xor
mov
sbb
mov
fldenv
pop
mov
xchg
push
loop
mov
fcoms
fcompl
fnstenv
fwait
jo
test
outsl
cmpsb
mov
shlb
imul
or
and
ror
rorb
cmp
lret
mov
mov
dec
add
hlt
adcb
xchg
sub
xchg
or
and
mov
add
pop
stc
adc
jno
sub
imul
dec
add
js
or
xor
sub
inc
and
add
mov
imul
lret
xchg
mov
lret
cwtl
je
xor
hlt
xchg
adc
scas
cld
test
xchg
mov
mov
bound
dec
pop
or
push
xor
je
cmp
shlb
and
rcr
xchg
les
imul
out
mov
aam
les
les
add
cmpsb
shlb
je
je
and
mov
cmpsb
shll
mov
lahf
or
pop
mov
or
inc
xchg
ds
xchg
je
daa
enter
mov
jl
jmp
xor
movsb
and
sub
rcrb
xchg
clc
push
xchg
mov
aam
push
sub
out
cltd
xorb
cmpsl
and
cmp
dec
cwtl
or
aas
sbbl
and
mov
xor
jl
and
loopne
and
pusha
inc
add
mov
and
or
xchg
mov
mov
pushf
in
es
or
xchg
sbb
fwait
xchg
sbb
push
imul
fsubl
les
in
cmpsb
push
pop
imul
xor
and
xor
and
xchg
pop
aad
inc
cmpsb
enter
xor
pop
cmp
and
imul
xchg
and
xor
sbb
cmp
and
cwtl
sub
dec
insb
mov
ret
popf
sbb
pop
enter
test
rorb
cmpsl
rcr
or
cmp
add
loopne
addb
xor
xchg
or
fs
pop
call
mov
add
rorl
pop
cmp
in
sahf
call
push
lahf
movsl
es
mov
xor
mov
push
and
add
mov
xor
mov
fcomp
mov
adc
pop
adc
xor
xchg
sub
xor
dec
add
add
out
test
nop
mov
push
xchg
or
push
mov
mov
mov
and
rorl
movsl
aam
mov
mov
enter
mov
xchg
cmp
adc
movsl
fistl
call
sub
test
fsubl
and
insb
cmpsl
and
daa
xor
hlt
in
les
or
jnp
add
inc
and
fisttpll
sub
mov
fcmovnb
cmpsb
mov
sbb
mov
add
imul
lock
imul
les
xchg
pop
cwtl
lock
adc
xchg
lods
fwait
mov
pusha
mov
ss
nop
inc
jmp
hlt
sub
xchg
add
inc
and
jl
jp
mov
mov
shl
mov
loopne
xor
subb
sub
mov
mov
add
xchg
jns
cmp
jecxz
xor
add
aad
fnstcw
pavgw
xlat
inc
inc
jg
cwtl
add
mov
cmp
add
and
sbb
adc
fistpll
call
xor
iret
inc
lds
jecxz
call
mov
mov
mov
test
xor
mov
and
jp
sbb
jp
inc
adc
push
jmp
lea
loope
add
fisttps
push
shll
scas
jo
lds
inc
sub
mov
pusha
lock
or
and
jae
adc
outsl
and
pop
inc
data16
add
sub
mov
sub
xor
pop
xchg
pop
dec
into
cmp
sub
inc
push
scas
mov
mov
jne
in
fcomps
mov
xlat
adc
sbb
mov
mov
xchg
or
fcoml
test
pusha
cmp
jmp
xlat
in
lret
cmp
pop
add
pop
loop
pusha
sbb
aam
sbb
in
mov
rcr
mov
cmc
pusha
xor
and
cmpsb
imul
xor
mull
inc
add
iret
pusha
push
inc
leave
inc
adc
aam
sbb
mull
cwtl
mov
add
cmc
pop
jp
xchg
data16
aaa
stos
or
sub
pusha
inc
jo
ffree
daa
mov
call
cmp
cmp
adc
add
or
cmp
add
cmp
mov
inc
in
xor
jo
fs
inc
pop
repnz
out
lret
ja
cld
mov
add
mov
xchg
cmp
pop
push
out
int3
lods
mov
orb
cwtl
cmp
jmp
and
js
push
inc
or
xchg
cld
jle
jnp
loop
mov
pushf
cmp
mov
loopne
andl
dec
and
and
adc
clc
mov
cmp
mov
pop
aad
stos
movsb
mov
inc
cmpxchg
mov
shl
add
sub
mov
dec
jne
sub
xchg
ret
or
and
leave
fmuls
inc
dec
push
adc
mov
fcmovnb
inc
nop
je,pt
add
outsl
fs
call
mov
addb
pop
jnp
call
fsub
pop
filds
mov
ja
cmp
icebp
adc
or
dec
add
pop
lds
xor
popl
lcall
mov
mov
push
dec
xor
jno
das
out
enter
dec
cmp
mov
iret
xchg
mov
mov
int
jae
push
push
je
mov
andb
iret
orl
or
and
orl
xchg
inc
adc
mov
loope
les
insl
mov
and
pushf
or
cmc
push
call
cltd
add
push
pushf
xchg
gs
add
incl
pop
inc
jae
push
and
xor
rorb
cmp
cmp
fsubs
xchg
enter
mov
add
mov
ja
jno
cmp
lret
out
jnp
xchg
sbb
add
add
jne
jg
enter
jne
es
xchg
cmp
adcb
xor
sbbb
sub
into
dec
mov
and
cmp
push
xor
scas
aaa
xchg
push
cld
sbb
shr
cld
adc
int3
and
push
les
addr16
mov
mov
aas
dec
imul
addb
fisttpll
lock
xchg
cmp
xchg
jle
jno
and
pop
add
sahf
cmp
adc
mov
jecxz
xor
sub
push
lock
cltd
xor
adc
sub
jl
out
cmp
xchg
sub
cwtl
push
sbb
jnp
add
enter
pop
jo
pop
add
or
lods
mov
mov
sahf
add
mov
cmp
aas
add
orb
push
cmp
mov
cmc
loop
dec
jl
cmp
xorb
test
es
adc
mov
sub
cwtl
xchg
faddl
mov
push
aas
mov
push
test
ds
add
orl
out
lods
pop
push
add
ret
push
inc
mov
and
push
mov
adc
adc
pusha
inc
push
cmp
or
pusha
xchg
js
sbb
and
push
mov
loopne
incl
xchg
pop
sub
push
xor
fidivl
insl
mov
popf
add
popa
pop
andb
adc
mov
mov
cmpsl
out
and
clc
jnp
mov
out
mov
fnstenv
shlb
das
add
cmc
sahf
pop
dec
loopne
and
rcrb
xor
mov
int
dec
pusha
mov
faddl
enter
and
add
cmpl
mov
xor
lahf
nop
lret
shr
and
ds
sub
repnz
mov
xchg
or
ret
ret
dec
jne
jg
xchg
test
and
mov
imul
sbb
bound
mov
mov
inc
nop
jle
mov
cmc
arpl
mov
adc
inc
push
into
xchg
xchg
mov
adc
inc
inc
or
pushf
das
fsts
mov
add
dec
mov
jae
pop
cmpsl
mov
cwtl
cmp
add
fsubr
lret
les
add
or
mov
mov
xor
pop
dec
fucomp
add
sahf
fbstp
stos
rcrl
cmp
aam
jmp
add
or
or
rcrb
xor
js
push
pop
aam
cmp
jae
loope
stc
push
pop
je
inc
das
lods
xorl
or
loope
rclb
addr16
daa
lds
jae
lret
jno
leave
inc
jl
andb
inc
repnz
test
shlb
mov
and
mov
sarb
ds
add
movsl
jo
xchg
insb
add
pop
lahf
sbb
fs
fs
pusha
pusha
cmp
mov
mov
add
jno,pn
lock
xor
mov
sbb
movl
cmp
addb
mov
popf
mov
add
cmp
push
mov
popa
inc
rcrb
add
and
cmpsl
xchg
xor
and
jbe
shll
sbbb
jl
inc
mov
pop
lahf
rcl
mov
inc
fdivs
xchg
insl
or
sbb
inc
pusha
mov
int
mov
ljmp
repnz
inc
mov
add
add
in
push
cmpb
adc
add
cmc
lahf
cmp
or
sbb
fadd
mov
fiadds
cltd
rclb
mov
mov
sahf
xchg
mov
xor
je
ficomps
dec
test
mov
mov
pop
sbb
sub
xor
loopne
leave
sub
add
jecxz
mov
xchg
les
flds
xlat
aad
lds
nop
subb
mov
rep
fnstsw
or
js
cmp
add
pop
ss
in
xor
xorb
add
and
xchg
lock
mov
in
je,pn
pop
int3
mov
pusha
mov
ds
mov
adc
popf
imulb
scas
pop
test
sub
mov
adc
add
pop
mov
dec
rorl
stos
fsub
and
pop
xlat
add
loop
mov
xchg
jo
mov
fistps
cs
or
sbb
cmp
dec
in
xchg
mov
mov
xchg
sbb
jp
jg
idivb
mov
add
adc
mov
add
sub
xchg
xor
and
testb
mov
pusha
std
mov
mov
or
fs
push
mov
out
jae
cltd
sahf
fwait
sbb
ror
pushf
jp
hlt
cmp
adc
mov
or
cmp
jl
and
xchg
test
int
mov
into
and
or
popf
movsl
mov
dec
pop
push
jo
adc
or
jnp
jns
adc
pop
and
push
mov
or
aad
fists
jmp
stos
inc
jnp
xor
ljmp
inc
popa
sbb
mov
sbb
js
jo
jno
cli
xor
cmp
dec
aas
adc
cmp
imul
dec
or
incl
mov
xor
pop
mov
push
add
ret
lret
wbinvd
pop
loope
cmp
stos
shl
jae
jno
nop
jecxz
xchg
fdivl
add
addr16
test
pusha
mov
lds
adc
dec
int3
inc
dec
and
shl
and
sbb
popf
vphaddudq
loope
pop
cmp
push
or
dec
aam
xor
cmc
loop
push
jo
jl
adc
lret
addl
add
mov
popf
xchg
mov
add
jp
push
mov
add
xorl
xor
adc
aas
push
imul
lfs
mov
add
sbb
jb
jo
mov
pop
nop
cld
cmc
xchg
mov
inc
cwtl
lock
xchg
popl
xchg
or
into
hlt
sahf
in
mov
add
push
lahf
pop
outsl
add
cmp
push
or
mov
cmp
adc
in
ret
mov
aaa
outsb
cmp
push
loope
les
call
mov
pop
loopne
stc
add
inc
pusha
adc
and
adc
pop
sbb
testl
jo
inc
pop
xchg
add
xchg
and
cmp
adc
pop
add
js
fmull
mov
stc
faddl
sub
dec
sub
sub
adc
cmp
mov
dec
lret
and
push
nop
rorl
sub
dec
xchg
sbb
daa
cmpsb
xor
js
lahf
inc
test
lret
cmp
rorb
fsubrs
fiadds
stc
sub
push
cmp
add
call
fcoml
jnp
nop
xchg
rorb
xchg
leave
pop
cmp
sbb
inc
push
hlt
add
jl
mov
pop
dec
subb
xchg
lods
push
addl
jmp
test
sahf
cmpsb
mov
fiadds
sbb
xchg
pop
sub
or
adc
inc
inc
lock
std
enter
xchg
mov
adc
inc
rcrb
sbb
push
mov
pushf
inc
mov
and
dec
pusha
cwtl
icebp
je
fstpt
cmc
mov
xor
mov
sbb
cmp
jae
or
xor
xor
in
rolb
cmp
mov
sub
mov
jnp
and
push
push
jecxz
adc
inc
xchg
pop
movsb
scas
adc
js
scas
push
les
inc
pop
push
add
mov
mov
add
test
or
sub
push
mov
cwtl
mov
test
sub
test
pop
and
sub
lahf
adc
scas
roll
daa
mov
pusha
mov
adcb
pop
mov
xor
dec
add
cwtl
inc
sub
lods
imul
or
les
cwtl
rolb
inc
push
xchg
fldenv
sbb
inc
fdivl
and
rolb
adc
leave
add
add
sbb
cmp
ja
sub
es
and
shlb
add
jo
mov
and
add
mov
sbb
xchg
movsl
lret
xor
clc
cmp
add
stc
cmp
add
and
cltd
sub
and
das
xor
mov
and
xor
test
pushf
sub
add
push
roll
adc
fs
test
jl
mov
test
dec
inc
cmp
ret
sbb
or
and
sbb
cmp
imul
push
and
inc
or
mov
add
cwtl
call
enter
lret
sbb
or
stos
push
data16
insb
add
out
je
sbb
jle
shlb
or
cwtl
jo
loopne
dec
sahf
je
icebp
xchg
or
mov
adc
mov
push
inc
in
insb
mov
icebp
add
and
cmp
mov
ficoms
dec
pop
sub
fldl
sti
pop
pop
sbb
int3
inc
mov
mov
add
sar
aas
push
mov
pop
dec
xor
movsb
lcall
mov
cmpb
lret
shr
sub
aam
adc
gs
fnstenv
shll
ja
stc
sub
nop
xchg
add
mov
mov
adc
pusha
pusha
pop
out
jecxz
pushf
jo
and
xor
out
mov
xchg
push
lock
aaa
xchg
push
adc
and
add
and
mov
hlt
testb
push
lret
adc
test
and
or
or
test
mov
inc
pop
fiadds
rcrl
add
ffree
fucomip
push
jno
xor
mov
cmpsl
inc
or
pop
sbb
add
js
push
test
mov
add
insl
sbb
and
or
lds
sbb
stc
and
xchg
sub
enter
xchg
in
xorb
test
mov
mov
movsb
loope
cwtl
pusha
pop
cmp
xchg
add
std
scas
pop
jg
call
jbe
in
sbb
lret
push
data16
test
ficoml
dec
pop
movb
inc
pusha
mov
mov
push
cltd
cmp
fsubr
sub
xor
stos
and
mov
adc
je
sbbl
in
fdivr
push
sarb
mov
clc
xchg
pusha
push
push
or
inc
push
or
loopne
sbb
mov
sbb
adc
cmpb
and
cld
mov
mov
mov
cmp
call
mov
or
or
mov
call
cmp
add
mov
jnp
lea
call
add
mov
xor
cmp
or
and
cmpsb
push
mov
push
pop
mov
call
ljmp
xchg
mov
and
push
ret
std
and
or
sbb
sub
icebp
add
mov
shrl
sbb
js
push
pop
ret
inc
mov
and
ret
add
adc
movsb
sarb
inc
mulb
mov
fisubl
fsubp
cli
mov
sbbl
popf
imul
mov
pop
ret
adc
inc
loopne
push
ret
js
add
add
arpl
ds
jb
jl
aas
pusha
push
add
cmpsb
jecxz
lret
sbb
lods
xchg
add
xor
cmp
add
jbe
aam
adc
mov
mov
dec
jmp
ret
pop
ret
xchg
mov
mov
adc
outsb
cmpsl
jg
xor
nop
push
jb
adc
cmc
and
jecxz
push
leave
mov
or
dec
scas
push
mov
aam
lock
xchg
cmovnp
imul
lods
test
push
jp
mov
pop
and
aad
pushf
test
loop
ret
call
add
and
inc
add
lods
shll
loope
add
push
fwait
test
adc
add
fs
mov
push
push
push
pop
ret
inc
mov
and
ret
pop
add
push
xor
xchg
movswl
and
outsb
dec
push
add
mov
pop
shll
daa
mov
bound
aad
add
iret
ja
inc
xor
cmp
xor
add
bound
or
sbb
cmp
inc
jo
jmp
push
and
push
bound
mov
inc
sbb
push
ret
fidivs
sub
int3
push
add
mov
push
and
adc
sub
lcall
or
fcoms
sbb
xchg
jge
shr
pusha
in
lret
movl
out
mov
sbb
xor
push
call
adc
jb
rcrl
jnp
pop
jmp
stos
ja
insb
add
dec
adc
data16
inc
pop
orl
popf
or
adc
push
xor
mov
lock
and
xor
test
test
push
cmc
mov
sub
add
shrb
mov
push
push
pop
ret
inc
mov
add
ret
imul
test
repz
pop
test
sub
add
adc
pop
jg
repz
sbb
add
xchg
loop
or
lea
leave
or
adc
jnp
call
mov
xchg
sbb
je
addr16
sbb
popf
or
add
insb
sbb
lcall
inc
aas
sbb
jp
add
fisttpl
xlat
cltd
ljmp
adc
test
loopne
out
adcl
push
movsl
dec
aad
cs
test
les
mov
add
fldenv
iret
dec
add
into
pop
popa
push
rcll
pop
xor
adc
sbb
add
mov
and
cmc
inc
xor
or
mov
and
push
ret
roll
mov
adc
push
pop
pop
pop
and
sbbb
and
mov
pop
mov
mov
jmp
mov
add
les
shrb
mov
dec
pop
sbb
mov
and
dec
loopne
or
adc
popa
xchg
adc
mov
enter
leave
add
aas
push
enter
adc
test
dec
sbb
pop
add
adc
rorb
fsts
daa
or
fwait
add
jmp
dec
orl
nopl
lahf
in
dec
lds
add
pop
and
addr16
inc
cmp
sub
es
sbb
dec
rclb
test
stc
jmp
push
xor
outsb
dec
mov
mov
inc
js
push
cmp
push
ds
dec
or
jge
sbb
pop
pusha
add
mov
pop
sbb
movsb
lcall
or
les
sub
cwtl
int
popf
sub
mov
pusha
sub
mov
andb
xchg
sbb
cmc
cs
icebp
adc
pop
lock
lcall
and
jb
sbb
aaa
or
adc
sbb
pop
and
jno
sbb
adc
clc
aas
mov
or
and
mov
mov
or
or
sarb
pop
pop
shlb
mov
je
pop
or
adc
pop
imul
bound
cld
das
mov
cmp
xor
sub
and
mov
xorb
cmp
dec
popf
sti
mov
test
jb
pop
sub
sub
add
adc
icebp
or
xchg
call
and
orb
je
pusha
lret
lods
cmp
fwait
mov
adc
push
push
xchg
add
jnp
popa
call
movsl
push
repnz
fmull
xor
dec
shll
sbb
mov
movsl
mov
xchg
lea
jnp
push
clc
cmpsb
dec
fiadds
xlat
into
adc
leave
cwtl
jle
adc
and
xor
fs
addb
add
sbb
and
mov
dec
je
pop
pusha
and
jae
dec
add
lds
sbb
call
adc
mov
dec
aaa
mov
sbb
or
pop
in
repnz
cmp
xor
ss
adc
sbb
sti
hlt
stc
out
les
lahf
cmc
in
dec
xor
push
jmp
jne
pusha
mov
testl
test
sub
mov
icebp
inc
xchg
scas
xchg
mov
inc
mov
adc
adc
call
xor
xchg
mov
in
lea
inc
call
add
inc
xor
add
or
mov
jns
add
decl
xchg
aas
pop
pop
push
js
xor
fdivl
jle
push
sub
lods
in
mov
fcoms
sbb
lock
fiadds
push
pusha
sub
xchg
xchg
sub
and
into
aas
and
add
sub
cwtl
jo
in
int
sub
addb
mov
int
and
mov
adc
push
rcrl
popw
ss
in
jo
add
call
in
jbe
inc
xor
pop
mov
inc
testl
dec
add
int
sub
ja
add
mov
add
cwtl
cmpsl
dec
xor
mov
inc
adc
mov
rorb
sbb
and
jns
mov
test
nop
xchg
ss
and
test
add
xchg
sub
xchg
jne
repnz
jns
sbb
add
cmp
mov
stc
rorb
sbb
push
dec
fwait
add
and
add
jp
aas
dec
rolb
ret
ss
mov
and
or
mov
add
add
push
add
imul
xor
mov
cmpsb
push
mov
adc
add
and
sti
pop
rorl
test
call
int
pop
inc
jne
sbb
mov
addb
popa
add
icebp
cli
inc
jl
mov
adc
aas
in
fdivr
fmuls
ret
sbb
dec
lea
repnz
push
jl
and
es
push
xor
jl
insl
icebp
and
mov
fsubs
mov
lret
test
icebp
ficoms
xchg
test
pop
sbb
sbb
rorl
cmp
sub
push
add
jne
sbb
call
imul
dec
sub
test
jnp
add
xor
es
fistl
push
and
pop
cltd
addb
pop
mov
and
int
xor
imul
xchg
add
fnstenv
cmpsb
mov
nop
sub
pop
js
fscale
cmp
mov
stos
and
je
sbb
or
push
and
stc
inc
and
cmpsl
jmp
sub
adc
mov
pop
ljmp
call
rcrb
xchg
mov
ret
icebp
push
sbb
and
aaa
xor
add
adc
pop
mov
sub
or
cld
cmpb
add
mov
xchg
es
sub
lahf
add
inc
adc
inc
sub
add
and
xchg
push
rcrl
sbb
lds
add
hlt
jp
xchg
or
inc
sbb
push
cmp
pop
xchg
adc
dec
mov
jl
push
push
dec
daa
popa
push
sbb
xor
add
xor
cs
xor
test
xchg
cmp
mov
loop
xor
mov
in
push
call
roll
test
xor
insl
and
inc
sbb
mov
xlat
test
add
xchg
push
sub
pop
lret
fdivrl
push
jne
movsb
xor
out
iret
inc
not
nop
and
jmp
xor
divl
jle
xor
pop
adcb
push
sub
insl
jo
mov
and
cmp
add
mov
and
adc
mov
test
jbe
orb
sbb
leave
xchg
jmp
add
or
push
nop
dec
cs
mov
in
jbe
pop
mov
add
sarb
cs
lcall
idivl
movsl
fstpl
and
inc
sbb
jecxz
int
shlb
adc
dec
repz
leave
roll
dec
add
negb
jnp
mov
lock
cwtl
ret
leave
inc
adc
pusha
cwtl
xor
inc
pop
jb
clc
mov
jae
repnz
nop
fld1
leave
add
cmp
push
pusha
mov
mov
mov
mov
sub
aas
int3
push
ja
jns
ljmp
adc
or
rorb
mov
jno
sbb
pop
mov
or
push
andb
in
pop
gs
xchg
ss
add
scas
push
ret
and
pop
mov
inc
in
add
xor
repnz
sbb
adc
popa
les
push
ds
sbb
dec
loopne
test
loope
jae
mov
push
lods
sub
jb
faddp
sub
xor
add
and
in
or
sbb
mov
and
sub
rorb
push
mov
cld
pop
or
mov
mov
imul
cmpb
insb
nop
mov
adc
sub
lock
push
inc
loop
fs
rcrl
int3
mov
mov
filds
cs
lea
sbb
sbb
xor
xchg
fcompl
jno
and
fwait
or
mov
sbb
sbb
stc
push
add
js
je
mov
enter
in
cmp
dec
mov
adc
jns
test
or
and
sub
pop
add
pop
test
outsb
push
cmp
loopne
push
pop
fnstsw
sbb
push
std
add
mov
sbb
mov
ja
and
mov
rorb
sti
xor
mov
scas
add
xor
or
or
je
pop
mov
push
fwait
mov
addl
lret
rolb
jge
cmp
xchg
jecxz
and
loope
and
mov
test
and
or
sarl
mov
mov
pushf
mov
imul
and
icebp
decl
std
dec
call
in
jno
icebp
jbe
movl
fldl
pop
test
pop
sbb
pusha
push
jl
or
jmp
js
and
push
cwtl
push
dec
aad
xor
sub
fs
inc
lret
cmp
push
or
xor
add
inc
into
pop
dec
add
jb
imul
jmp
adc
mov
inc
pop
insl
out
mov
adc
jle
jecxz
jge
xchg
inc
sbb
push
xor
xchg
xchg
mov
pop
adc
out
cltd
adc
pop
xor
outsb
inc
add
mov
test
cmpl
dec
sbb
sbb
push
js
pop
add
and
out
fs
addl
fwait
lods
sbb
push
bound
lock
push
dec
push
loopne
stc
and
sbb
sub
test
jne
jne
inc
push
mov
enter
dec
push
andb
mov
add
push
mov
ret
je
mov
loope
adc
in
adc
xor
mov
sub
test
inc
push
cmp
xchg
add
cs
cmp
rolb
mov
xor
ret
mov
hlt
lret
jecxz
loop
fstps
lea
or
dec
mov
je
sbb
add
clc
push
fs
xor
cs
jnp
and
sub
out
imul
roll
js
out
lods
dec
add
mov
adc
xchg
leave
enter
xor
cmp
push
cmpb
sub
fwait
jbe
or
mov
popf
sbb
xor
push
je
mov
aam
mov
jecxz
jl
add
pop
adc
inc
mov
popa
movsl
ret
or
arpl
pop
xchg
pop
adc
andl
sbb
mov
mov
push
lret
jo
test
and
movsl
out
or
and
ds
enter
repz
or
jmp
sub
or
movl
adc
mov
push
call
in
fimull
mov
mov
or
dec
rcpps
pop
xor
rcl
pop
repnz
xchg
in
call
sbb
ret
sahf
inc
mov
lock
adc
mov
pushf
fld1
xchg
pusha
cmpb
cli
xchg
jnp
add
xlat
sbb
mov
mov
add
aam
xchg
mov
inc
ljmp
sti
push
or
sub
add
jmp
stos
add
jg
ljmp
adc
jmp
xchg
push
repnz
scas
dec
xchg
mov
or
xchg
in
add
data16
mov
xchg
pop
dec
lahf
dec
es
or
sbb
pop
cwtl
push
rcll
aas
in
xor
loopne
push
mov
jne
out
mov
arpl
orb
pop
and
jmp
call
inc
filds
xor
jg
ja
inc
jp
adc
adc
sbb
push
or
add
or
pusha
lods
cmp
lods
test
popf
and
stos
shl
lret
xor
aas
es
popa
pop
rclb
ljmp
dec
flds
mov
cwtl
mov
push
insb
mov
mov
pop
clc
cmp
or
sub
test
mov
pop
pop
pop
xchg
lods
and
lea
and
xor
fidivl
mov
ljmp
cmc
call
dec
mov
sti
pop
jo
cli
add
es
sbb
push
call
cs
jmp
ret
mov
pop
jl
shlb
or
mov
loopne
mov
push
in
mov
test
push
add
mov
mov
push
call
neg
int3
inc
add
push
push
clc
push
inc
add
xchg
sbbb
out
mov
mov
aad
or
mov
popa
rcr
add
lea
adc
nop
hlt
mov
xchg
jbe
mov
xor
mov
adc
sub
xor
bound
jle
cltd
iret
adc
pop
or
xchg
jmp
fisubrs
scas
sub
inc
fistpll
add
mov
gs
mov
pop
add
cmp
jecxz
into
mov
xor
pop
fadds
imulb
xor
and
push
jp
out
insl
test
pop
dec
andl
hlt
or
push
cmp
or
lods
lcall
or
js
xorb
adc
add
out
fidivrl
sbb
adc
dec
les
add
xor
sbb
push
mov
fldt
mov
add
xchg
push
adc
cwtl
xchg
sub
or
stos
in
mov
or
jmp
inc
push
xor
xor
add
add
add
xchg
je
call
gs
imul
in
jb
insl
popa
or
mov
out
xor
arpl
je
pop
jle
mov
outsl
pushaw
lods
jb
fs
jbe
insb
cli
jo
in
jae
ja
shll
sbb
addr16
popa
cmc
imul
cmc
jne
or
mov
jo
jae
outsb
inc
push
push
dec
sub
jmp
js
push
inc
pop
fs
sbb
jnp
jns
or
cld
fisubl
add
inc
fbld
and
arpl
and
push
push
jo
jb
incl
bt
mov
xorl
mov
push
sbb
push
push
dec
sets
je
lods
movaps
add
ss
jmp
push
add
jg
pop
dec
sarb
and
or
pop
mov
adc
dec
pop
rcll
insb
inc
and
xlat
sbb
dec
mov
jno
sbb
adc
lret
sbb
sbb
jmp
out
sbb
sbb
sbb
or
ficompl
enter
or
add
mov
and
pop
lcall
pop
push
cmp
rolb
mov
lea
xor
inc
ret
pop
aam
mov
xchg
movsl
scas
movsl
frstor
mov
js
cmpsb
mov
in
and
inc
pop
and
in
and
adc
cli
or
inc
int
flds
sub
sub
nop
sbb
adc
sbb
adc
or
decb
dec
popa
push
sbb
sbb
cmp
and
movsl
sbb
icebp
adc
pop
pop
add
mov
movsb
dec
sbb
loop
mov
cmpsb
add
ficomps
add
js
add
and
outsl
cmp
std
and
xchg
push
cld
pushl
push
sub
jle
jmp
pop
insb
pop
fcomps
shll
push
pop
ljmp
repz
insl
cld
imul
sub
hlt
shrb
add
cld
ja
sub
subb
sub
test
call
movsb
cmp
adc
icebp
pop
jmp
aas
or
add
fisubs
or
inc
enter
mov
xchg
jnp
add
inc
sub
jmp
adc
push
in
cs
jge
push
adc
lret
mov
sbbb
sbb
orb
sahf
mov
jmp
pop
stc
sbb
sbb
cli
xchg
setno
cmp
in
xorb
js
mov
or
mov
test
adc
mov
inc
sub
leave
sti
xchg
cmpsl
xlat
adc
lock
into
insb
out
add
push
ja
jo
pop
push
notb
aad
xchg
pushf
out
adc
movsl
fwait
or
lcall
cmpsl
loopne
cli
cmp
push
rorb
mov
test
push
dec
add
loopne
lahf
movsb
xchg
out
jmp
jae
pop
lock
and
ljmp
in
adc
dec
int
mov
dec
pop
dec
pop
add
jne
loopne
adc
xchg
lret
outsl
les
lahf
sub
sarb
repz
imul
loopne
mov
mov
mov
popf
das
call
push
scas
lods
divb
adc
sbb
dec
jo
add
mov
hlt
daa
pop
in
xchg
clc
pusha
pop
fimull
xchg
sarb
add
shlb
out
push
cltd
xchg
push
sbb
inc
inc
push
or
or
mull
inc
and
jns
sbb
jmp
sbb
inc
call
xchg
je
and
cltd
je
jbe
sub
ljmp
inc
cmp
in
add
insl
push
adc
add
addr16
dec
dec
xor
das
push
repnz
add
adc
cmp
loope
push
jge
add
das
ds
aaa
add
mov
mov
xchg
sbb
sub
sbb
xor
jns
pop
jns
sbb
inc
test
stos
push
pusha
push
jae
shll
loop
pop
icebp
inc
jno
or
and
aaa
add
mov
and
lods
dec
add
enter
jne
fstl
push
and
cli
inc
xor
andl
adc
out
test
push
movsb
fnstcw
pop
or
sbb
gs
pop
mov
lea
inc
sub
inc
scas
imul
ficoms
cmp
test
push
popa
xor
xor
nop
adc
sbb
and
sbb
jo
jmp
cwtl
sub
mov
pop
sbb
add
stc
les
and
mov
cmpsl
add
pop
xchg
xor
xchg
jmp
xor
and
jp
sub
stc
aad
lds
add
and
sub
in
ds
mov
aad
or
xchg
inc
adc
cli
or
xor
sub
dec
inc
sub
fdivr
inc
test
or
rolb
movsl
rclb
sbb
xchg
inc
shrl
js
popa
pop
ljmp
in
xchg
adc
repnz
js
sub
and
pop
push
pusha
xchg
call
jl
in
in
push
lcall
enter
sarb
pushf
push
push
add
mov
orb
sub
or
inc
and
pop
inc
mov
xchg
cmpl
repz
insl
fmuls
jmp
ljmp
jge
jp
add
mov
xchg
jl
jmp
ljmp
or
das
stos
testb
sahf
int3
sub
pop
add
mov
sub
insl
dec
addr16
mov
inc
aam
sbb
repnz
pushl
stos
decl
es
int
mov
lcall
dec
inc
sbb
push
out
and
stos
dec
stc
dec
add
out
pop
add
cmpsb
pusha
repz
rorb
jb
cmp
inc
sbb
ljmp
jno
fwait
in
jns
fsubl
jne
les
adc
lods
js
mov
repz
dec
shrl
subb
repnz
or
dec
inc
lods
cmpb
test
jo
mov
sbb
or
mov
std
pop
not
fs
jge
addb
and
push
mov
test
jmp
aaa
addr16
dec
enter
in
xchg
shll
pop
nop
sub
fwait
add
repz
push
das
or
in
pop
and
lcall
data16
xchg
pusha
jns
sbb
inc
out
outsb
pop
stos
aaa
add
push
cmp
mov
insl
xchg
pop
cmp
inc
mov
inc
or
dec
adc
into
add
je
add
and
call
xor
xchg
scas
adc
or
out
jl
jmp
out
xchg
cmp
jno
in
ljmp
fsubl
mov
add
lea
mov
cmp
mov
push
pop
adc
xchg
mov
pop
xchg
push
inc
test
mov
inc
cld
movsl
jge
push
test
xchg
dec
or
hlt
add
xor
and
xor
mov
xor
std
xchg
sub
and
adc
cli
push
xor
mov
shrb
mov
mov
mov
mov
data16
loope
dec
add
xor
add
push
rcll
push
icebp
ljmp
pop
add
add
and
push
rcrl
adc
sahf
and
jno
cmp
dec
daa
in
lret
sbbb
dec
cwtl
les
popa
popf
jne
jp
inc
sub
mov
xor
xor
inc
movsb
jmp
call
nop
call
and
out
out
push
cmpsb
mov
jecxz
out
or
pop
xor
popf
pop
push
ja
leave
inc
dec
rcll
imul
les
adc
gs
and
jo
sbb
jnp
inc
sbb
add
dec
xchg
mov
pop
xor
xorl
inc
aam
repz
and
sub
jno
and
adc
jge
dec
sbb
cmp
xor
sahf
xchg
dec
inc
inc
cmpb
loopne
sbb
dec
xchg
sub
lret
inc
inc
pop
mov
or
inc
ret
add
inc
push
push
ja
inc
jle
add
xchg
scas
fidivrs
pop
add
nop
xchg
stos
addr16
pushf
mov
lret
test
xor
int3
iret
cmp
mov
cmpsl
clc
mov
and
in
adc
or
fldenv
xchg
sbb
cmc
movsl
dec
sbb
cmp
insb
add
pop
mov
adc
mov
push
add
test
movsl
jg
add
xor
dec
clc
pop
add
es
push
test
pop
dec
out
add
mov
add
in
out
repnz
jne
adc
mov
pop
cld
add
and
adc
ds
rorl
push
cmp
shrb
xchg
mov
adc
add
popf
add
js
ja
jae
add
aam
push
lcall
dec
jo
add
push
negb
dec
subl
pushf
pop
jge
mov
jns
orb
mov
negl
outsl
arpl
cwtl
jnp
add
and
iret
add
push
xor
and
jb
fsubl
cmp
add
test
sbbb
in
pushl
fcmovne
cli
mov
and
xor
les
inc
add
rcl
outsb
add
inc
jno
cmp
mov
pop
and
ss
push
int3
or
cwtl
punpckldq
add
and
outsb
sub
jae
popa
ltr
adc
jno
out
jbe
fcmovne
jg
push
push
popa
pop
cmp
xor
xor
int3
test
push
xchg
mov
daa
push
addl
lods
lock
or
iret
cli
outsl
ja
inc
add
cltd
lods
test
adc
mov
mov
add
mov
inc
pop
mov
int
mov
fmull
pop
pop
aas
add
add
and
scas
pop
dec
add
clc
fstpl
insb
mov
adc
xchg
repnz
jnp
sbb
jmp
mov
cld
out
pop
pop
mov
imulb
testl
inc
daa
dec
cmc
dec
sbbb
movsl
jle
or
or
jne
xor
nop
rcrl
jns
add
ja
add
push
mov
int
icebp
jge
push
add
dec
subb
fidivl
adc
pusha
lods
shlb
mov
ret
sbb
pop
push
and
inc
cmp
pop
test
mov
stos
enter
add
lret
scas
mov
add
ret
andb
cli
add
rcrb
adc
pusha
xor
lock
leave
frstor
and
or
adc
scas
jne
add
adc
sbb
pop
jmp
test
das
js
push
xlat
pushf
loope
mov
sbb
push
inc
test
inc
shrb
push
icebp
imul
sub
xchg
jl
add
popa
fists
adc
mov
roll
jne
pop
add
mov
sahf
aad
sbb
popa
addb
mov
add
das
gs
or
cli
std
add
cltd
in
inc
cmpb
pop
add
jb
sarb
aad
push
cmc
popl
push
push
lock
scas
add
pop
mov
mov
and
jmp
faddl
mov
imul
stos
rcrb
jg
call
mov
cwtl
dec
xor
fstpl
push
sbb
xor
add
and
add
lret
mov
jns
xchg
xor
add
pusha
bound
add
pop
ljmp
ss
adc
xchg
add
arpl
stos
xor
adc
sbb
xor
jp
mov
cmc
ret
fistps
add
or
shlb
dec
pop
repnz
loopne
outsb
cld
in
adc
sbb
pslld
dec
in
lret
movsb
and
mov
ficoms
sbb
popf
xchg
push
jle
idivl
jns
mov
test
enter
rolb
mov
pop
cmp
lcall
mov
add
idivb
aaa
or
insb
in
add
into
shlb
je
push
or
mov
or
sub
mov
xor
test
mov
add
pop
insl
and
test
push
jmp
pop
mov
push
xchg
pop
lods
enter
roll
gs
add
ds
dec
or
fsub
dec
test
cmp
mov
scas
cld
push
inc
add
shll
mov
sub
xchg
push
inc
ds
add
pop
mov
aaa
mov
sti
unpcklps
xor
lds
adc
sub
mov
mov
push
jae
xchg
ss
cmpsb
stos
nop
push
shrb
js
imul
add
jp
push
lock
dec
add
icebp
push
add
jp
pop
mov
sub
jecxz
add
clc
mov
cwtl
pop
pop
jne
adc
cmpsl
push
mov
imul
cmpb
cmp
jae
and
iret
and
test
fidivrs
jae
xchg
lcall
mov
daa
inc
call
in
mov
mov
enter
jo
inc
mov
dec
or
add
inc
push
ds
cmp
add
jg
pop
add
inc
cmp
jge
js
fcomp
sbb
mov
shrb
add
popf
into
fdivl
add
addb
sbbl
lret
mov
and
xor
push
pop
sub
xchg
xor
sbb
iret
mov
sahf
pusha
out
xchg
gs
cmp
add
mov
loopne
je
add
testb
push
insl
call
pop
mov
adc
dec
cmp
jecxz
add
aas
add
xor
add
or
rorb
in
adc
js
push
insl
jo
int3
roll
push
ret
pop
and
cmp
scas
mov
mov
cltd
or
xlat
pop
add
daa
push
fidivrl
rol
cmp
pop
mov
add
loop
in
adc
insb
mov
ret
jge
jne
imul
fadds
shl
aas
sbb
pusha
leave
dec
mov
add
mov
or
clc
jmp
imul
mov
call
int3
mov
cmp
int
scas
cmp
mov
jbe
cmpsb
enter
add
mov
addb
fimuls
aam
mov
dec
into
fsts
add
fiadds
mov
cld
mov
insb
or
nop
mov
into
cmpsb
dec
sbb
sbb
push
addl
imul
xchg
inc
pop
mov
jnp
add
scas
fldl
add
push
mov
sub
jp
xchg
pop
daa
jbe
scas
lcall
popf
ja
fbld
leave
sbb
sub
xchg
add
scas
outsl
or
ss
leave
arpl
add
in
lods
std
push
sub
sti
or
nop
mov
or
pop
add
xchg
cmp
mov
mov
into
sbbb
ljmp
mov
stc
add
adcb
popa
add
adc
sti
and
cwtl
sbb
and
add
in
cs
enter
adc
xchg
jmp
sbb
inc
add
insl
mov
and
out
aas
dec
lds
sbb
fidivrs
mov
sbb
adc
jne
jb
stc
sbb
js
cli
xor
push
add
call
jmp
cltd
in
in
movsb
push
xchg
jns
cmpb
pop
lahf
rclb
out
cmp
and
add
xchg
call
out
mov
je
lret
add
loopne
roll
lds
addr16
out
pop
and
mov
adc
or
cmp
push
sbb
pop
orb
jg
pushf
adc
daa
adc
sbb
inc
sub
mov
sub
in
pop
and
inc
adc
push
outsl
sbb
sbb
add
inc
adc
mov
xchg
lock
pop
xchg
ficomps
mov
push
inc
bound
outsb
sub
nop
gs
arpl
leave
cmp
sarb
add
adc
pop
dec
cmp
nop
add
es
cmp
mov
jb
hlt
mov
add
stos
or
dec
dec
call
and
adc
mov
and
mov
cmp
xlat
and
ljmp
aaa
mov
loop
or
and
fidivrl
inc
or
out
pop
add
cmp
mov
add
ret
lret
movb
sarl
jne
mov
add
outsl
lea
xor
loop
imul
add
bound
add
adc
push
xchg
jl
ret
out
xor
add
mov
int3
add
movsl
or
pop
mov
addps
in
xchg
ret
loope
imul
xor
mov
jne
sbb
mov
test
mov
lock
push
mov
or
out
idiv
outsl
adc
xor
sti
popa
adc
jg
push
push
aaa
xchg
mov
add
stc
pop
cmp
in
mov
loopne
lret
jl
fimuls
jo
mov
push
xor
add
jb
or
push
adc
daa
mov
sub
mov
cmp
shlb
outsb
into
icebp
mov
orb
jle
mov
insl
and
jbe
push
sbbl
add
and
add
ret
add
ljmp
push
adc
lret
adc
pusha
int
inc
jb
add
lds
fdivl
pop
push
aam
lods
data16
inc
and
pushf
add
xchg
pushf
cs
inc
pop
addr16
lods
pop
pushf
mov
fldl2t
call
add
std
jge
inc
cmpsb
sbb
pop
add
dec
add
pop
in
pusha
and
add
xlat
adc
lock
pminub
outsl
sti
and
jl
test
roll
add
mov
sbb
xorl
popa
pusha
lret
jmp
and
jno
add
push
inc
icebp
imul
scas
or
clc
jecxz
xchg
mov
or
mov
push
add
mov
pop
sahf
fwait
cmp
xor
cld
sbb
lock
das
movsl
sub
lret
mov
add
sarl
mov
add
jnp
rcll
out
outsb
pop
jbe
sar
pop
sub
adc
lods
add
pop
in
adc
int3
lds
push
jo
push
or
das
mov
mov
mov
sbb
pop
mov
cmpsb
cmp
sbb
pushf
lcall
in
mov
shll
aas
push
xlat
call
xchg
testb
popf
repz
in
push
add
push
cs
nop
cmp
mov
sahf
and
mov
pop
fistl
jb
pop
out
orl
out
cmp
into
orb
mov
scas
xchg
push
lock
orl
adc
jae
dec
dec
mov
push
pusha
sbb
or
call
adc
sub
and
rcrb
test
jge
pmulhuw
mov
jb
push
js
or
inc
pop
flds
test
imul
lahf
push
xor
das
add
cwtl
or
icebp
je
add
and
xor
icebp
inc
scas
add
push
call
movsb
inc
xor
pop
xor
adc
push
xor
shl
popf
cwtl
xor
add
xchg
sahf
pop
cmp
jne
or
and
jb
shrb
std
push
cpuid
xchg
pop
into
hlt
pop
add
sub
mov
and
out
fcomps
int3
rolb
test
nop
add
lea
clc
sub
xchg
jns
cwtl
add
add
add
sbb
jmp
adc
jno
push
adcb
xor
outsl
hlt
lret
dec
mov
mov
adc
add
scas
or
lock
or
nop
cmp
es
push
dec
sbb
mov
movsb
imul
push
xor
mov
and
in
cltd
add
pop
add
dec
jbe
ljmp
fiadds
sti
movaps
pop
inc
xchg
mov
inc
xchg
and
jbe
add
adc
test
pop
pop
stos
dec
xlat
and
loope
out
shlb
adc
lock
jge
inc
dec
inc
add
sbb
mov
pop
pop
cmp
ds
push
pop
pop
mov
mov
add
mov
lods
mov
pusha
push
repnz
inc
addr16
add
iret
or
dec
jnp
cld
add
cmc
cmpb
sub
clc
pop
add
lahf
or
loopne
lea
cs
mov
add
jne
pop
push
pusha
dec
cmp
push
lods
ljmp
sahf
adc
popa
sub
es
stos
outsl
inc
add
jb
xchg
mov
popf
and
notb
jecxz
inc
mov
fistpl
sub
fwait
jg
ja
into
fs
sarb
jns
jl
mov
push
jnp
dec
imul
out
pusha
pushf
push
and
fstl
mov
pop
call
inc
xor
xor
sbb
ljmp
push
xchg
mov
cmp
mov
mov
lods
das
and
add
push
out
jmp
insb
mov
add
xchg
subl
in
in
psrlw
sub
adc
or
mov
fcomi
insl
add
popa
push
dec
inc
fstpt
rol
push
add
sbb
insb
cmp
inc
cmp
inc
int3
aas
dec
pop
mov
test
sbbb
inc
cmc
out
sub
jbe
inc
lret
xchg
test
movsl
xor
xchg
fldt
rcrb
cmc
lret
mov
mov
cld
push
pop
xor
outsl
in
movsb
movd
xorl
mov
out
pop
cmp
add
jnp
or
inc
repnz
enter
pop
sbb
sub
add
in
sub
push
sbb
addr16
hlt
push
jne
add
loopne
or
and
mov
mov
add
test
and
pop
sahf
add
leave
cwtl
xor
int3
pop
add
xchg
sub
inc
sub
add
stos
jge
jl
inc
aam
in
push
rorl
movsb
dec
cmpsl
mov
shl
xlat
mov
push
jecxz
faddl
ds
test
into
cmp
jo
adc
hlt
pop
pop
mov
filds
dec
xor
inc
leave
mov
les
inc
aas
out
add
inc
js
mov
mov
cmc
mov
icebp
dec
mov
pushl
dec
jmp
nop
mov
popf
cs
rcll
stos
jb
int3
xchg
jle
filds
sub
cltd
arpl
fsubrp
inc
and
mov
lahf
ret
jo
out
add
or
dec
add
icebp
subl
pslld
stos
xor
f2xm1
cmp
mov
jns
add
xor
lret
cmp
jnp
xor
in
inc
testb
pop
or
outsl
lcall
add
lret
mov
nop
push
or
add
xchg
xchg
daa
sarl
adc
cmpsl
scas
add
push
daa
mov
movsl
add
pusha
cli
mov
jnp
jbe,pt
int3
pop
add
pop
jo
icebp
in
lds
dec
lahf
movsl
inc
lods
lock
std
push
add
adc
add
sbb
rolb
or
ficomps
std
and
sti
lret
nop
xchg
adc
push
fmul
pop
js
pop
mov
sbb
test
imul
sahf
or
frstor
or
sub
add
pushf
push
data16
mov
adcl
add
push
pop
stos
rclb
mov
mov
fbld
jo
arpl
pop
enter
xor
xchg
adc
ret
js
or
aas
dec
inc
test
call
shrb
sub
cmp
add
movsb
in
inc
cli
in
add
cmp
jne
outsl
sub
and
pusha
rclb
cld
lcall
push
ja
fstps
jbe
lret
dec
pop
mov
enter
shl
sbb
testl
ret
dec
add
fstl
in
lret
jnp
loope
or
nop
push
pop
jp
and
enter
insl
push
iret
subb
lret
cmpsl
out
xor
cwtl
mov
lock
inc
dec
adc
lahf
popa
inc
add
push
sbbb
lea
or
cld
out
and
test
or
mov
add
and
imul
aam
or
jmp
mov
lock
cli
add
sub
xchg
jmp
aaa
inc
jecxz
fcoms
filds
sub
jge
shlb
add
inc
and
outsb
push
jo
sar
ds
and
loopne
adc
add
mov
test
adc
repz
mov
pop
add
popa
or
mov
cmpsl
aam
cmp
popa
inc
setno
or
int
jge
dec
sbb
sub
add
daa
jl
popf
pop
fwait
push
add
mov
push
xchg
add
jno
jne
xchg
xchg
cmp
sub
int3
add
imul
int
cli
cli
mov
mov
add
cld
pop
jle
inc
jbe
shl
lock
filds
push
stos
clc
jb
xor
bound
jns
mov
push
add
xor
add
cmc
push
int
sub
xor
jne
adc
add
jo
loope
inc
adc
cld
add
inc
iret
in
and
xor
push
dec
das
bound
loop
sub
inc
fisttps
add
popa
in
cmpsl
adc
xlat
popa
mov
jecxz
mov
imul
sbb
inc
inc
jmp
adcb
and
fsts
sub
jle
test
push
aam
dec
adc
je
sub
dec
mov
stc
mov
dec
adc
out
adc
xchg
imul
mov
add
pop
dec
testl
cmp
adc
outsl
and
out
or
adc
filds
and
inc
xor
dec
sbb
push
adcb
push
imul
inc
repnz
add
cld
jmp
loopne
lods
pop
add
loopne
shll
push
cld
xchg
shlb
int3
mov
out
enter
flds
sti
jl
sarb
add
lds
pusha
pop
xchg
cmp
mov
roll
dec
mov
faddl
push
mov
in
add
popa
stos
sbb
js
adc
pop
and
push
out
add
in
in
cld
xchg
pop
and
xchg
add
iret
add
cmc
pop
xlat
dec
pop
daa
ds
repnz
sub
jmp
xor
out
sub
sbb
dec
push
inc
cmp
add
lret
ret
lcall
test
add
xchg
mov
gs
add
or
jl
xor
push
sub
out
jns
std
addr16
shr
fstpl
das
lods
xchg
sbb
add
sbb
adc
fwait
inc
sbb
enter
jg
pop
mov
jbe
int
jns
add
addr16
mov
int3
add
adc
push
sub
adc
in
add
ja
mov
stos
movsb
push
mov
add
in
arpl
insl
jmp
mov
cwtl
lods
mov
adc
inc
add
jp
lds
fwait
push
inc
in
add
adc
add
mov
test
test
test
push
addb
outsl
cmp
testl
mulb
aam
rolb
ret
addb
or
into
mov
jg
repz
fcmovnu
int
pop
in
gs
push
sub
xchg
xor
pop
mov
sbb
inc
dec
cmp
movsb
xchg
and
jbe
cltd
out
dec
lock
jno
add
fidivs
aad
mov
pop
stos
lea
xchg
cmp
cmp
scas
aas
out
add
add
lods
adc
add
bswap
test
bound
mov
iret
xchg
cltd
shl
ret
add
mov
imul
movsb
dec
or
lods
pop
push
out
inc
addr16
je
pop
pop
test
cmp
daa
jl
add
pop
jp
xchg
adc
xchg
inc
dec
imul
sbb
faddl
lods
xor
cmc
push
mov
cmp
mov
sbb
mov
push
pop
sbb
lds
sbb
add
adc
test
insb
cmp
inc
adc
jle
ljmp
jmp
push
fucom
pop
pusha
dec
mov
popf
add
out
repnz
inc
mov
cmp
popa
xorb
icebp
jp
add
mov
fwait
sub
mov
sub
and
add
cltd
mov
pop
or
cmp
ffreep
dec
in
dec
dec
jl
or
dec
push
add
test
pushf
add
imul
add
bound
insl
shll
and
add
mov
lret
and
test
mov
aas
cmp
jmp
cmpsb
cli
mov
fcoms
cmpl
mov
mov
cltd
test
lahf
add
orl
inc
test
jl
fcmovu
add
scas
or
hlt
push
inc
xor
or
dec
sbb
xor
dec
in
outsl
xchg
pop
adc
sbb
sbb
sahf
aam
push
mov
add
mov
sub
fcmovu
in
xchg
add
test
xchg
jmp
out
add
mov
xor
loope
push
add
jns
dec
shrl
or
fists
fmul
add
mov
lods
fsts
mov
loopne
add
stos
sub
imul
roll
stc
imul
cmp
out
pop
jmp
sub
call
pushf
jno
stc
mov
add
mulb
xlat
add
inc
push
pop
loopne
outsl
mov
int
inc
jne
nop
lock
add
scas
mov
clc
clc
add
subl
fnsave
stos
aam
stc
fcoml
movsb
jle
dec
cmp
pop
cmp
mov
lret
cmp
add
inc
push
add
jle
mov
sar
imul
out
xor
jle
bsr
cs
xchg
enter
stos
in
sahf
pop
out
movl
loop
pop
push
pop
int3
add
in
or
cmp
sbb
dec
mov
jp
xchg
jne
lock
add
scas
sahf
fsubrs
adc
adc
daa
jne
add
in
test
push
jl
add
push
ss
sbb
add
test
clc
and
add
jnp
rclb
stos
dec
sbb
jmp
test
xchg
inc
jb
mov
out
mov
pop
pop
das
inc
leave
add
testl
sbb
adc
pop
scas
sub
inc
fldt
dec
add
les
insb
rorb
mov
and
sub
add
outsb
wrmsr
mov
push
cltd
adc
sbb
int
inc
and
je
fsubs
or
mov
in
movsl
add
xor
xchg
call
clc
pop
add
fwait
inc
outsl
in
incb
aas
sahf
loope
movsb
sub
cmove
pop
add
pop
je
or
mov
xor
call
dec
pop
int
and
mull
add
lahf
xor
testb
xchg
and
fwait
das
xchg
cmp
mov
jnp
fbstp
push
push
sbb
pushf
loope
rolb
inc
sub
xor
add
in
fnstsw
aam
daa
jae
das
add
jg
movsb
fmuls
cmpsb
xor
push
mov
pusha
lret
dec
and
dec
pop
pop
mov
xlat
pusha
fwait
add
cwtl
pusha
and
and
cltd
lahf
movlps
addl
mov
test
mov
in
add
dec
aad
mov
push
sbb
fstp
ret
lahf
aaa
push
xchg
shr
iret
popa
pop
push
xor
jmp
push
cs
jo
add
outsb
shlb
sub
cmp
mov
jo
pop
push
mov
push
add
pop
mov
pop
sub
jg
shlb
out
cli
in
fisttpll
add
pushl
mov
mov
add
push
push
pop
or
adcb
xor
push
inc
add
mov
or
nop
les
pop
enter
outsb
add
push
mov
cmp
add
punpcklbw
and
aam
js
shlb
cmpsl
insl
xchg
in
ljmp
shrb
popa
or
jns,pn
mov
adc
je
jo
rolb
fs
dec
pop
rorl
mov
in
or
dec
cmpsb
dec
mov
or
stos
mov
loopne
insl
stc
and
gs
jnp
pop
mov
and
aas
shll
cmp
adc
mov
dec
mov
pop
add
into
cs
cmp
adc
or
fcoml
pop
or
cmpsb
pop
dec
aaa
sbb
jbe
cmp
daa
pop
or
add
aad
push
div
push
movsb
in
mov
inc
jmp
loopne
mov
cwtl
rorb
sbb
xchg
add
mov
add
lret
movsl
cmpsl
std
hlt
push
add
and
scas
and
and
test
pusha
rol
cmpsl
cmp
imul
xor
enter
xor
imulb
xchg
dec
aad
dec
push
dec
pmulhuw
add
repz
add
dec
and
mov
cmp
aad
lds
in
xchg
jns
pop
adc
or
mov
add
and
lahf
add
call
mov
add
mov
adc
clc
sbb
pop
mov
jns
cmpsl
cld
mov
jg
add
cmpsl
mov
or
cmpb
add
mov
mov
xor
mov
mov
add
in
cmp
inc
mov
out
fnsave
or
mov
iret
mov
mov
into
or
mov
xchg
dec
lahf
in
in
xchg
pop
mov
nop
nop
pop
js
add
ret
pop
daa
jle
add
sub
jae
xchg
add
inc
popf
push
cvttps2pi
add
add
jecxz
in
mov
in
out
aaa
sahf
cmp
inc
fsubrp
jle
or
mov
pop
insl
lods
lea
idivb
jo
push
insl
scas
fidivl
inc
loop
lock
push
fcmovnb
repz
add
cmpsl
int3
inc
les
insl
jb
inc
xorb
sub
icebp
pop
add
mov
jecxz
ret
jnp
sbb
setae
add
insb
jns
fldl
and
jecxz
add
es
negb
test
in
lea
testl
pop
mov
xchg
pop
xchg
jo
jp
jo
push
dec
filds
mov
lcall
rolb
adc
fstps
cmc
sub
movsb
out
sub
or
mov
add
mov
cmp
loopne
lods
mov
popl
sbb
shlb
inc
sbb
jle
test
test
sub
insb
hlt
add
inc
xchg
clc
fiaddl
inc
ror
xchg
addr16
hlt
jmp
jmp
mov
cmp
in
add
cwtl
imul
xchg
mov
xor
add
insb
xchg
inc
mov
out
icebp
sti
xor
xor
add
inc
mov
add
inc
push
inc
add
test
stc
add
aam
pop
jmp
jmp
inc
cmpsl
lods
or
int3
lods
pop
repz
nop
push
xorl
xchg
popa
mov
and
add
xchg
outsb
shl
or
inc
mov
cmpsl
nop
pop
add
iret
mov
mov
mov
lret
cmp
rclb
add
in
push
sub
outsb
jo
sbb
mov
xchg
jg
cmp
push
or
loopne
mov
mov
add
adcl
lcall
or
inc
cmp
add
sbbb
cli
lret
sete
add
lods
out
ret
xchg
and
adc
mov
scas
jo
lods
mov
or
push
adc
test
jo
xlat
jbe
int3
and
inc
pusha
push
jnp
push
sahf
mov
adc
pop
add
sbb
push
add
sbb
sahf
or
mov
sub
fs
sbb
inc
stc
lcall
add
fmuls
insb
sub
fwait
sub
mov
push
clc
xor
add
addl
stc
adc
add
cmp
iret
hlt
add
xor
mov
mov
outsl
lock
push
push
mov
add
data16
int3
add
xlat
adcb
cld
repz
int
out
push
fdivrl
cmpb
xor
push
jp
je
ss
inc
xor
sbb
mov
je
fstl
sti
lods
pop
add
subb
jae
add
dec
cmp
add
rorl
dec
inc
pop
push
rolb
das
pop
sahf
imul
sbb
and
test
pop
into
sub
fsub
loopne
cmpsl
nop
addb
add
xorl
cmp
std
popf
f2xm1
add
xor
cmp
add
in
adc
cwtl
imul
mov
add
adc
xor
add
movsl
orl
int3
dec
mov
mov
jl
add
xchg
scas
aam
mov
in
jge
subb
mov
xor
add
jbe
lock
add
sbb
mov
mov
add
inc
mov
dec
movups
mov
out
leave
add
hlt
outsb
fwait
ret
repnz
subps
in
dec
adc
je
add
sub
loopne
adcl
into
shlb
mov
and
cltd
loopne
xchg
add
mov
xor
les
adc
pop
push
xchg
into
dec
jle
es
xchg
pop
adcb
inc
mov
mov
xchg
pop
in
mov
dec
adc
cmp
insb
mov
push
pop
or
out
sub
std
hlt
add
icebp
sub
add
or
pop
jge
rcrb
adc
lds
rorb
jmp
pop
imul
add
or
jnp
sub
xchg
add
imul
pusha
cmp
into
mov
clc
sbb
outsl
or
add
rcrb
xchg
shlb
movl
push
sahf
xchg
das
dec
inc
add
vmread
sbb
sub
lcall
jbe
cmp
fbstp
cs
out
icebp
add
jo
enter
pop
cmp
pop
fisubl
mov
lret
xchg
pop
add
popa
cmc
fistl
insb
add
mov
or
in
or
fs
and
adc
imul
rorb
test
cmpsb
adc
add
xor
add
jle
aad
call
faddl
sbb
cwtl
xchg
sbb
pop
pop
sarb
out
xor
push
add
popf
pop
cmp
ret
add
sub
and
add
add
scas
mov
cmp
xor
xchg
jno
xchg
mov
jp
adcb
call
add
nop
jg
or
sbbb
cs
in
es
cmc
ljmp
pushf
xchg
add
fwait
xchg
sbb
int3
mov
addb
lock
lcall
or
imul
cmc
not
pop
mov
push
dec
add
ret
mulb
push
jbe
pop
sub
mov
add
xchg
inc
add
hlt
lds
js
lock
repz
cmp
sub
je
xor
add
inc
xor
push
add
rolb
int3
fldenv
cmp
pushf
and
xchg
jge
jb
sub
add
arpl
jg
jno
add
pop
mov
jmp
sub
jno
daa
sbb
push
popa
sbb
lods
das
lret
jb
xchg
in
add
add
or
pop
roll
push
mov
pop
mov
dec
add
jbe
adc
jp
jl
xorb
jecxz
mov
mov
xchg
das
mov
cltd
push
cmpsb
aaa
mov
lahf
add
mov
fisttps
or
sub
cmp
ror
and
dec
mov
add
add
mov
push
adcb
mov
sti
sbb
pop
testb
aas
and
lahf
dec
jp
es
insb
push
or
call
inc
jne
imul
push
leave
xchg
shlb
xor
cmp
jl
jp
adcb
ret
jl
add
sub
add
lahf
inc
dec
mov
add
dec
movsb
xchg
enter
add
or
jo
xchg
aaa
xchg
add
lahf
dec
xor
sub
loop
add
mov
imul
icebp
subb
lahf
cs
xorb
cld
cmpsl
mov
cmp
cmp
mov
nop
cli
ror
add
pusha
xor
stc
rorl
imul
and
into
mov
cltd
cwtl
add
shll
adc
add
dec
mov
add
rorl
outsl
daa
std
pop
dec
sbb
mov
xor
les
xor
xlat
sub
xor
jmp
add
mov
mov
std
les
mov
pop
sbb
xor
sbb
cmpsl
jbe
scas
jae
mov
mov
jge
stos
add
data16
jecxz
pop
xor
hlt
add
and
in
sbb
cmp
out
movsb
test
pop
inc
mov
sub
and
andb
adc
shrb
push
jle
mov
call
icebp
push
jecxz
mov
jno
add
jp
sbb
insb
mov
add
scas
insl
xchg
add
movsb
add
push
add
inc
add
lcall
dec
cs
mov
icebp
add
inc
daa
ds
adc
cmp
call
pop
or
cs
adc
add
mov
add
pop
cmc
add
cmp
pop
loopne
rol
pop
xlat
jg
sub
jle
add
std
stc
sub
pusha
and
push
push
stos
add
lock
es
jnp
add
cs
and
rorb
cwtl
add
fwait
and
sub
push
jmp
jecxz
add
xchg
testb
sbb
sbb
xor
out
add
cmpsb
or
adc
and
int3
mov
inc
mov
xchg
jns
inc
dec
sbb
rolb
sahf
xchg
and
mov
or
add
pushf
dec
pusha
cld
pushf
adc
add
inc
sbb
daa
pop
and
pop
mov
dec
rorb
mov
dec
aad
adc
jno
imul
push
dec
fwait
sub
jl
or
push
dec
mov
mov
fadds
pusha
xchg
cld
cmp
ret
mov
pop
xchg
arpl
test
cmp
xchg
sbb
stc
sbb
sub
lret
mov
negb
xor
add
inc
jge
adc
cltd
loopne
into
add
xchg
sti
sub
add
sbb
xchg
shr
stc
push
push
repz
push
insb
push
jg
loopne
mov
push
sahf
pusha
incb
cmp
insl
fldl
mov
sbb
popa
jp
shlb
mov
xor
int3
mov
jge
ret
jnp
sbb
in
jl,pt
imul
aas
push
lods
subb
mov
flds
inc
fwait
ljmp
and
arpl
add
mov
mov
pusha
movhlps
add
mov
jns
push
mov
js
cltd
clc
adc
cmp
xchg
ss
into
jne
jle
add
mov
mov
cmp
rolb
or
and
mov
loopne
pop
subb
add
fmull
rep
xor
lods
cmpsl
mov
mov
sub
pop
add
dec
jb
add
insb
leave
or
sbb
sub
nop
cld
add
push
push
cmp
testb
fistpl
clc
sub
scas
add
out
cmp
rcrb
in
or
sbb
push
add
mov
cmpsb
stc
es
notb
xchg
in
push
clc
decl
out
cmpsl
jle
add
imul
mov
add
cmp
subl
sbb
mov
out
in
inc
out
mov
inc
out
icebp
aam
adc
frstor
movsl
loopne
dec
pushf
add
jmp
arpl
hlt
or
loope
mov
aam
inc
aam
xchg
nop
and
or
add
xor
inc
or
pusha
mov
sti
unpckhps
insl
rorl
push
lcall
jl
out
dec
std
pop
jb
insb
lock
mov
or
xlat
fsubl
pop
inc
or
mov
mov
lret
adc
and
push
mov
fsub
imul
mov
sub
xchg
fcomps
mov
adc
in
add
and
jle
and
jmp
jmp
or
ljmp
jl
mov
pop
xchg
sbb
pop
dec
rcll
test
gs
add
or
add
xchg
int
cmpsb
in
mov
adcb
jne
push
dec
addl
mov
lcall
insb
add
pop
or
jno
fsubs
sbb
add
push
sbbl
xor
inc
movl
push
push
push
leave
mov
repz
adc
int
mov
cmp
mov
js
push
add
loop
sahf
xlat
cmp
stos
mov
pop
shlb
mov
icebp
out
push
add
ljmp
iret
stos
add
addr16
mov
in
movsb
mov
inc
or
push
push
rcll
add
add
pop
mov
adc
add
pmulhuw
cs
add
lock
add
or
sub
dec
add
mov
xor
sbb
jle
xchg
and
jo
iret
push
lahf
push
dec
lret
testb
fcompl
fs
fsin
sub
xchg
out
lock
adc
shrl
das
incl
xor
push
sub
adc
popf
add
clc
clc
jg
cwtl
add
cmp
adc
add
ja
testb
es
inc
fldenv
add
das
ficoms
add
testl
xor
mov
jle
aaa
dec
lock
arpl
xchg
nop
sbb
int3
sbb
sbb
xchg
pop
pop
inc
lret
out
sbbb
dec
testb
rorl
jb
add
mov
cwtl
ds
sub
push
sbb
clc
cmpsl
mov
or
inc
sub
icebp
xor
mov
push
cmp
pop
mov
add
aas
push
inc
ss
xchg
enter
ret
xor
ja
add
cmp
repz
sti
xchg
add
mov
fsubs
push
cmp
pop
sbb
test
cwtl
rcll
jecxz
int
test
fs
lret
mov
inc
add
shrl
loope
adc
pop
in
sbb
sub
jp
add
xchg
adc
js
pop
clc
mov
shll
jb
imul
push
push
outsl
add
popa
jg
lock
arpl
in
sbb
das
test
adc
and
adc
sbb
cmpsb
mov
filds
add
add
mov
clc
or
sub
nop
add
or
jae
xchg
pop
xor
add
shlb
inc
ret
pop
pushf
adcl
cmp
jns
shlb
adc
jge
mov
dec
mov
pop
jmp
mov
je
xor
xchg
test
inc
or
shlb
adc
adc
dec
sub
inc
xchg
rcr
xchg
mov
mov
or
push
push
je
mov
inc
shll
js
push
fadd
jae
mov
lods
or
mov
add
xor
jmp
inc
xchg
out
jo
iret
aam
mov
idivl
das
out
add
out
in
adc
daa
cmp
inc
pop
add
clc
sbb
push
shlb
add
imul
lret
inc
pop
or
verw
cwtl
xor
and
cmp
loopne
cmp
and
jns
sbb
push
mov
test
nop
and
add
push
sbb
or
lds
hlt
sub
inc
dec
adc
inc
mov
sbb
stc
jecxz
pop
repz
push
lret
out
sbb
movsl
cmp
or
mov
sub
dec
loop
dec
std
ljmp
mov
dec
loopne
mov
shlb
or
addl
cmp
adc
add
roll
jo
xor
sbb
add
mov
mov
mov
xlat
xor
pop
adc
nop
inc
movsb
mov
pop
mov
pop
pushf
add
mov
pop
jo
sbb
add
cmp
dec
enter
daa
mov
dec
mov
jno
lahf
sarl
sbb
gs
ficoms
sti
dec
popf
out
lods
test
cmpsl
mov
and
iret
repnz
pop
popf
adc
cmp
sbb
add
orl
cwtl
jecxz
aaa
inc
add
adc
mov
fmull
lcall
aad
jns
nop
mov
jb
sbb
movsbl
add
adc
add
mov
inc
adc
add
add
loop
inc
cmpsb
cmc
add
cmp
movswl
sub
sub
orb
add
ja
push
lahf
iret
push
js
add
xor
push
add
in
outsl
add
aaa
inc
push
and
and
fsub
popf
xor
movsl
xor
fsubrs
mov
imul
stos
inc
add
cs
add
xchg
mov
push
sub
in
dec
movsl
xchg
or
push
add
inc
push
push
mov
push
jo
pop
fstl
add
aad
or
lcall
push
mov
dec
mov
add
adc
add
mov
outsb
sbb
rcrl
fisubl
leave
fcmovnu
mov
pop
or
hlt
inc
cs
push
mov
sub
pop
jp
pop
mov
emms
add
inc
sbb
pop
xor
fmull
jecxz
pop
js
add
jns
add
and
pop
imul
loope
movsl
aam
ss
add
sbb
ds
lds
rorb
andl
add
and
push
mov
fnstenv
mov
les
pop
xchg
add
mov
mov
or
mov
add
in
sub
test
daa
push
hlt
lahf
popf
add
jl
xchg
add
into
jmp
and
add
push
hlt
dec
std
lods
cmp
pushf
add
outsb
mov
ds
rorb
dec
call
loop
hlt
add
aad
cmp
outsl
mov
jp
pop
or
leave
jle
rcrb
je
sub
jns
lock
lret
test
lcall
dec
mov
and
add
xor
in
lods
or
cmpsb
dec
sbb
add
sbb
add
lods
pop
cmp
movsb
movsb
adc
sub
sub
fucomi
inc
leave
inc
enter
repnz
and
mov
cmp
add
and
add
xchg
jae
daa
pusha
clc
in
xchg
andb
pusha
cmp
sbb
iret
push
xchg
loope
mov
push
add
pushf
push
xlat
pusha
mov
aam
enter
outsl
jno
add
ss
push
mov
add
inc
add
push
sbb
push
dec
xor
push
and
in
imul
xor
pop
mov
jbe
jbe
scas
mov
sub
mov
loopne
add
cs
or
mov
lods
js
add
jmp
js
cwtl
sbb
lret
insl
fldcw
aam
test
out
push
popa
xor
sbb
push
lahf
mov
cltd
fwait
add
adc
in
cmp
dec
jge
outsl
into
add
cmpsb
test
add
int3
imul
push
adc
rorl
fimuls
cmp
in
ja
push
dec
push
add
cwtl
sti
in
aas
add
repz
dec
push
std
in
and
add
push
cltd
rorb
sub
rorb
pop
insb
cmp
mov
mov
lods
jp
rcl
push
je
sub
mov
mov
ror
fimull
iret
add
adc
add
hlt
cwtl
sbb
pop
ret
add
stc
movsb
and
mov
xchg
cmp
xchg
lods
insl
cmp
jno
adc
pop
sbb
push
add
and
and
dec
daa
or
rcrb
sbb
push
shlb
lret
addb
mov
daa
inc
pop
mov
adc
mov
rorb
xchg
add
inc
pop
mov
add
sbb
inc
push
add
xor
ljmp
add
aas
jo
mov
push
jae
add
nop
jp
pop
clc
ss
das
divb
and
jl
mov
test
xor
xchg
movsb
push
sub
hlt
and
add
xchg
test
add
cmc
jp
and
xor
sar
js
push
sbb
imul
pop
mov
pusha
cmp
cmc
add
and
adcb
cs
fs
mov
shrl
push
shrb
add
and
dec
fiadds
sbb
xchg
sbb
into
movsb
sub
int
inc
repnz
or
add
cmp
pushl
add
cmp
in
jnp
mov
mov
cmp
add
mov
push
icebp
add
mov
bound
push
adc
add
and
subl
es
pop
loope
testl
imul
cmpsl
add
xor
add
in
mov
test
out
mov
xor
mov
subb
lret
das
jo
addb
dec
outsl
add
inc
mov
mov
sub
xor
xorl
xchg
xor
mov
sbb
dec
les
shlb
mov
repz
movsb
lock
add
dec
jne
and
xor
cmc
add
fisubl
jmp
jecxz
jno
aas
xlat
loopne
push
lahf
xor
daa
nop
ss
mov
mov
sub
roll
sbb
aam
xchg
das
or
xorl
push
push
cmp
xchg
add
subl
mov
outsb
sar
repnz
dec
jae
daa
xor
pop
adc
int3
jae
arpl
or
int
adc
lahf
mov
lcall
js
and
loopne
inc
out
int3
mov
sbb
popf
push
or
inc
fstl
ror
mov
add
add
dec
sarw
jo
in
cmp
rcrb
pusha
or
jmp
cmp
and
push
scas
dec
add
shlb
stc
int3
adc
pop
out
leave
mov
add
push
push
mov
or
sub
or
jae
add
push
add
sub
in
lock
push
test
add
mov
sub
sahf
mov
add
ret
mov
hlt
cmp
adc
mov
mov
cmp
inc
push
inc
jg
shlb
insb
into
sti
in
adc
jo
loopne
cli
add
fisttpl
sbb
sbb
add
sbb
leave
ret
lea
mov
fnstcw
fimuls
stos
adc
mov
test
loop
movsl
ljmp
testl
mov
dec
adc
mov
aas
testl
out
push
sub
dec
cmp
hlt
nop
lock
xor
mov
jg
adc
fcoml
jle
dec
jnp
lcall
jmp
inc
test
sub
lret
ret
jo
or
popa
sbb
add
adc
push
loopne
push
fdivrl
subb
dec
popa
cwtl
mov
xchg
iret
xlat
mov
sarl
ljmp
add
dec
jnp
jae
jp
pop
test
xchg
push
jae
clc
shrl
inc
push
push
je
loope
rclb
sbb
xchg
aas
pop
jae
sub
dec
cmpsb
sub
add
je
leave
xor
inc
xchg
imul
nop
xor
dec
add
jo
addb
loope
insb
or
jl
inc
stc
cmp
cli
fwait
inc
sub
sti
cmpl
add
cmpsl
rorl
lahf
out
jmp
in
mov
adc
add
cld
push
push
sub
mov
and
and
lret
mov
xchg
inc
xor
add
in
add
mov
mov
xchg
pop
xor
stc
add
mov
and
mov
sbb
in
push
push
mov
xor
jp
and
pop
psadbw
xor
cs
sub
fsts
add
or
push
test
inc
adc
fdivs
push
pop
out
lret
dec
aam
adc
in
add
cwtl
insl
call
loopne
add
lret
adc
mov
xchg
in
inc
pop
push
test
mov
int3
loopne
mov
clc
mov
insl
inc
pop
dec
or
out
insb
jo
xlat
arpl
xor
mov
pusha
push
mov
and
push
mov
or
sahf
adc
push
pop
mov
test
fwait
out
arpl
pop
pop
jo
push
xor
inc
xchg
mov
loope
dec
xchg
enter
mov
add
imul
sub
xchg
movsl
inc
dec
xor
mov
jl
dec
jp
in
bound
fwait
mov
cmp
inc
push
nop
or
pop
adc
cmp
adc
lea
lock
add
lods
cmp
dec
add
push
xchg
shr
lock
xchg
or
cltd
int3
fldpi
or
pop
push
enter
add
lods
push
pop
jecxz
inc
lock
pop
mov
adc
sbb
sub
inc
add
sbb
xchg
test
shlb
in
add
ja
int3
mov
or
adc
mov
lret
mov
imul
push
jbe
add
shrl
xor
test
add
inc
mov
mov
clc
xchg
ja
add
dec
jne
lret
insl
sbb
fidivs
popf
bound
xor
roll
xor
xor
mov
shlb
or
add
jg
test
sub
adc
inc
xor
mov
movsb
or
fdivrl
mov
xchg
shlb
dec
cltd
mov
mov
mov
aas
popa
add
movsl
loop
or
xchg
xor
lock
out
sbb
xchg
xchg
cmp
cli
es
adc
jno
hlt
ds
sbb
add
mov
push
sahf
cmp
cmp
or
cwtl
inc
jo
mov
xor
mov
pop
or
push
xchg
int3
xchg
or
xchg
xchg
incb
xlat
jp
cmp
add
testb
lea
mov
add
lds
xor
mov
loopne
scas
iret
jb
and
adc
jae
test
cld
adc
test
mov
cs
push
inc
push
add
pop
popf
sub
mov
sbb
jge
inc
cwtl
jp
and
add
add
push
or
cmp
js
and
mov
addr16
mov
add
insb
inc
loop
sbb
sub
outsb
daa
jae
mov
jo
add
lock
or
ficompl
insb
test
nopl
and
cmp
mov
cmp
mov
pop
pop
in
ficoml
rcl
test
pop
repnz
movsb
pop
mov
mov
cld
xchg
aas
movsl
cmc
add
xor
rolb
dec
sub
js
sbb
inc
xchg
xor
add
loop
incl
movsl
pop
dec
push
mov
int3
push
dec
xchg
sbb
inc
dec
fsubrl
mov
mov
cmpsb
mov
enter
fildl
push
pop
test
push
shrb
add
cmpsl
xlat
or
outsl
test
push
push
mov
ret
xor
dec
add
dec
cltd
mov
add
into
cmp
lock
xchg
mov
fadd
or
nop
jl
jo
jle
xchg
add
rclb
and
mov
aad
or
sahf
das
add
cmp
xchg
push
add
lock
push
add
adc
ret
push
jno
add
add
jg
sub
mov
fld
mov
dec
dec
jnp
pushf
and
sbb
in
push
sbbb
jmp
mov
adc
sub
les
mov
xchg
or
push
jecxz
std
mov
or
insb
int3
inc
or
pushf
daa
mov
add
sub
add
sbb
insl
fsubs
or
cltd
mov
sbb
add
or
push
sub
or
dec
mov
add
ficompl
push
adcl
jmp
pop
dec
cmp
xor
frstor
push
outsl
lods
xlat
add
incb
push
hlt
add
loop
sbbb
cmp
test
sub
cmpsb
mov
rcrb
cmp
xchg
add
std
push
mov
or
mov
and
rcll
scas
cmp
add
mov
ja
loopne
add
adc
lret
cmp
push
add
dec
xor
mov
pop
lods
add
pop
jno
add
cmp
outsb
add
fcomps
jg
call
sahf
dec
jns
add
test
ds
sti
cmp
xor
inc
mov
mov
pop
add
enter
jbe
loop
jno
mov
pop
add
lds
icebp
sbb
aas
das
adc
or
hlt
in
fdivr
outsw
addb
jns
sahf
add
sbb
cltd
add
std
jmp
clc
rol
mov
jnp
fldl
insb
cwtl
push
paddd
push
sub
add
js
mov
xchg
sub
lret
test
outsl
pop
call
imul
enter
mov
movsb
dec
bound
pop
cmovge
sbb
icebp
popa
inc
sarl
int
push
mov
mov
loope
sahf
repnz
lret
lret
mov
jno
jecxz
jmp
push
mov
inc
enter
loope
dec
add
jmp
jae
xchg
into
mov
pop
sbb
mov
out
cmpsl
fidivrs
xchg
add
lahf
sbb
mov
out
cmp
sbb
or
dec
jecxz
nop
cmp
jmp
add
inc
xchg
icebp
xchg
pop
adc
sub
xchg
hlt
inc
sub
xor
sub
out
out
add
push
and
cmp
scas
jle
add
imul
out
movsb
cs
or
add
xchg
rolb
pop
ret
test
xor
add
jmp
int3
add
je
popf
in
inc
rol
cmp
adc
xchg
ds
push
pop
into
and
push
test
mov
call
push
jo
add
in
frstor
add
jb
paddsb
xchg
lods
nop
add
add
inc
cwtl
and
fistps
add
popf
adc
int3
subb
mov
js
inc
sbb
sbb
insl
aam
repz
test
pop
adc
xor
in
pop
repz
lods
ret
mov
mov
and
add
loope
js
repnz
imul
call
lcall
cmp
enter
loopne
call
aam
fptan
sub
add
or
xor
push
int
pop
lcall
jg
mov
add
pop
das
pmaxub
bound
pop
mov
movsb
cmpsl
lock
pop
jle
insl
mov
leave
xchg
and
and
jo
cmpsb
pop
push
inc
movsl
stos
aad
add
sub
bound
or
cwtl
mov
std
push
cwtl
sahf
aad
add
inc
clc
ja
mov
arpl
dec
lahf
sub
cmp
inc
sbb
ljmp
jmp
sbb
add
incb
pusha
push
sgdtl
adc
jle
push
sub
add
lea
aaa
outsl
or
or
stc
orl
dec
adc
in
faddl
stos
cmc
pop
ss
aam
adc
xchg
pop
stc
lods
iret
push
into
pop
dec
ljmp
adc
sub
repz
out
add
jb
sti
xchg
and
add
out
movsb
call
xchg
xor
lea
jo
xchg
lods
mov
jb
xor
and
stc
jle
jge
add
mov
scas
sbb
adc
repz
in
sbb
imul
shlb
mov
xchg
fiadds
mov
cmp
mov
and
cld
pop
ss
pop
lahf
inc
adc
iret
mov
inc
in
mov
stos
xchg
icebp
push
mov
cmp
push
pop
mov
out
test
pop
iret
cmpsb
add
fstl
call
add
inc
push
insb
cltd
add
js
pop
add
jl
sbb
fisubl
mov
inc
call
repz
inc
movsb
lods
xchg
mov
jne
and
insl
lret
dec
jbe
push
ja
inc
adc
dec
jnp
imul
jge
scas
mov
nop
mov
cmp
daa
popf
into
adcb
dec
addb
mov
or
adc
jl
mov
testb
add
pop
inc
addr16
or
or
adc
cmc
push
mov
shll
daa
jne
addb
loopne
mov
jg
inc
fcomps
or
push
cmpsb
adc
xor
sahf
jecxz
pop
lods
popa
sbb
mov
adc
jg
out
inc
les
mov
sbb
cmp
rorb
ja
mov
mov
xchg
shrb
xchg
add
mov
mov
pop
sbb
jb
push
imul
cmp
insl
fcoms
and
ret
xor
jecxz
scas
andl
adc
jp
adc
add
imul
cmp
mov
pop
popa
sti
push
pusha
imul
into
fistpll
pushf
lcall
orb
aas
and
jg
gs
or
sbb
add
jnp
xchg
lar
mov
pop
mov
cmp
pop
pop
and
add
mov
or
outsl
or
test
les
aad
xchg
sbb
jb
stc
outsl
cmpb
adc
mov
or
sub
or
adc
xor
add
repnz
sub
lcall
test
inc
mov
lret
outsb
jb
or
faddl
jbe
mov
pusha
dec
sub
test
pop
cmp
pop
add
push
jp
ljmp
xchg
gs
push
xchg
cmp
mov
mov
shrl
add
inc
pop
xchg
cmp
add
push
xchg
dec
pusha
xchg
loope
mov
shl
cmpsb
inc
and
adc
mov
orb
adc
insb
add
rorl
add
adc
pushf
cltd
fidivl
pop
add
adc
add
xchg
sbb
pop
pop
adc
ret
jae
mov
xchg
sarl
pop
adcb
insl
add
imul
lret
xchg
andb
mov
inc
testl
pop
or
inc
push
imull
add
sub
clc
stc
push
lock
add
xchg
orb
negb
lds
hlt
sub
dec
push
add
push
or
ss
mov
inc
dec
or
insb
sbb
mov
clc
popa
and
xchg
aaa
add
cld
pandn
pop
in
jmp
cmp
add
mov
clc
outsb
mov
dec
xor
in
mov
push
xchg
lret
fdivl
mov
adc
scas
add
push
pop
lock
pop
pcmpgtw
pop
stos
loope
movsb
jp
add
push
cmp
or
dec
dec
sub
dec
aad
sbb
add
out
popf
xchg
ja
notb
adc
mov
push
int
add
cmc
loopne
add
incb
push
add
sbb
cmpl
gs
sub
imul
bound
in
add
sbb
sbb
fisubrs
jnp
add
jl
pop
sub
fcoml
je
test
add
adcb
dec
inc
or
enter
add
jnp
test
jbe
incl
cmpsl
xor
push
mov
push
add
rol
mov
mov
rcrl
adc
or
mov
add
xchg
xor
adc
and
xorl
das
in
shlb
bndstx
add
pop
ljmp
xchg
add
adc
addb
testb
outsb
insb
addb
popa
out
js
sbb
jg
in
dec
jmp
add
mov
sbb
pop
cli
adc
outsl
dec
out
mov
call
cmpsl
xchg
addb
ret
ss
xor
jae
shl
ds
mov
and
aas
cmpsb
mov
addb
and
decb
out
xor
and
gs
xor
add
dec
pop
scas
push
ja
cmpb
decb
adc
mov
adcl
mov
lret
dec
fcoms
push
dec
mov
jns
add
sub
xor
mov
ficoms
and
out
repnz
pop
inc
cmpl
daa
in
scas
sub
xchg
addr16
loopne
fs
nopl
out
sub
add
adc
mov
test
scas
xor
inc
adc
push
pop
ret
cmpsb
shlb
pop
add
xchg
loopne
dec
and
push
andb
outsb
mov
aaa
xchg
cs
sub
inc
aas
jo
fcompl
add
out
jg
jp
push
push
inc
sbb
std
pop
pop
loop
sub
mov
sti
fcmovnu
adc
sub
push
add
inc
mov
add
inc
movsb
xor
es
cmp
nop
scas
into
loopne
cmp
roll
mov
pushf
subb
fstpl
adc
sti
in
lahf
mov
or
pop
mov
add
into
cmpsb
movsb
mov
addl
dec
std
in
lds
negb
aam
mov
mov
xor
pop
je
jb
in
lcall
imul
xchg
jbe
xor
cmp
mov
add
fs
pop
sbb
rolb
pop
movsl
or
test
sub
mov
and
loop
lea
mov
call
orb
pop
les
jecxz
inc
enter
aas
add
iret
adc
sti
inc
int3
cmp
add
lds
and
and
push
addl
int3
sub
add
and
cltd
shll
sub
add
mov
push
cmp
pop
cs
pop
adc
mov
and
mov
add
jmp
mov
and
stos
add
xchg
push
out
xchg
xlat
cwtl
ss
inc
out
insb
jae
xchg
xor
cmp
repnz
lret
mov
ss
dec
jl
mov
arpl
mov
pop
loopne
xchg
or
and
and
inc
push
cmp
add
push
mov
aaa
cli
adc
push
icebp
pop
cmovae
fmuls
xchg
adc
xlat
aad
add
mov
mov
lods
mov
lcall
sbb
mov
or
and
das
sub
frstor
aas
xor
icebp
in
sub
add
clc
xchg
pop
xchg
mov
ror
cwtl
in
add
or
out
xchg
pop
pusha
and
mov
jno
movsb
mov
sub
dec
dec
add
xorb
lret
add
insl
subl
add
fwait
aam
or
repz
inc
orb
ss
add
ret
inc
das
and
add
stc
out
mov
loope
mov
dec
sub
scas
xor
xlat
jecxz
add
pop
cmp
cmp
ret
aam
and
vmovdqu
or
mov
lahf
es
ret
leave
jle
pop
cmp
jg
test
je
int
sub
lcall
add
push
mov
and
inc
rolb
test
xchg
xor
sbb
mov
adcb
add
cmp
push
mov
daa
mov
jge
mov
imul
mov
push
push
sahf
in
jl
inc
xchg
int
jae
add
cmpsb
je
pusha
jnp
mov
or
mulb
xchg
inc
shr
sahf
dec
and
lods
mov
and
jle
or
popa
bound
mov
inc
mov
jle
mov
fistl
add
je
mov
push
stc
js,pt
adc
and
js
or
sbb
xchg
xor
repz
sub
dec
dec
mov
insl
add
rorl
mov
jmp
lock
mov
xor
push
mov
insl
popa
into
push
cmpsl
pushf
and
ret
nop
jmp
fwait
add
inc
add
mov
xchg
pop
pop
orb
jbe
or
fisubrs
mov
mov
add
pop
dec
cltd
xchg
sbb
mov
add
inc
push
sub
mov
lcall
jmp
jb
and
push
pop
stos
mov
mov
aam
scas
icebp
pop
mov
loope
add
sub
jo
mov
aam
in
push
sub
loop
add
nop
enter
mov
cmpb
jns
mov
out
cwtl
adc
lock
es
popl
sti
xor
inc
movhps
test
out
xor
dec
or
mov
or
lds
out
in
sbb
cmp
or
dec
pushf
test
aas
add
mov
jns
pop
js
stos
xor
push
push
pop
call
jo
cwtl
pop
lahf
pshufw
sbb
add
sub
out
mov
add
inc
rorb
pushl
cmp
test
push
mov
push
cmpsb
mov
loope
test
lods
add
xor
xchg
push
sbb
mov
das
int3
in
imul
jne
adc
push
repnz
cltd
scas
and
lea
test
sbb
roll
insb
jb
shlb
nop
test
add
popa
and
lds
adc
adc
fimull
faddl
cmp
bnd
addb
xor
inc
or
stos
add
sbb
add
ljmp
cmp
mov
ja
mov
movsb
add
mov
aam
mov
daa
addl
mov
xor
xor
cmovp
movsl
aam
cmpb
das
cli
sbb
clc
add
or
rcr
into
add
test
cmp
aam
adc
lods
pop
sbb
and
cmpsl
xor
cld
add
lret
or
jle
imulb
mov
mov
sub
sbb
loopne
mov
add
hlt
nop
add
and
cltd
cli
mov
and
test
call
pushf
test
and
pusha
adc
add
lods
dec
in
pushf
iret
inc
gs
and
mov
inc
sbb
insl
jp
jae
add
pusha
pop
into
addr16
fisttps
lods
and
cmp
movsb
cli
inc
jbe
xchg
add
push
cwtl
fucomip
dec
fstps
add
mov
shrl
dec
das
fsubr
lods
out
add
dec
push
xchg
mov
pop
mov
add
dec
aas
add
push
add
outsl
adc
push
and
add
sti
out
cmp
cmc
pop
cs
daa
mov
mov
add
movsb
push
jns
cmpsl
fadd
addb
inc
ret
jge
sbb
inc
scas
cld
pop
lcall
pushf
ret
sub
adc
add
push
in
insb
mov
add
adc
in
inc
in
stc
out
xchg
das
mov
mov
add
pop
sub
aas
lods
stos
or
cmp
pushf
les
cmpsl
sbb
dec
push
mov
in
push
adc
add
push
push
jmp
movsb
daa
mov
popf
sbb
js
mov
imul
push
test
jecxz
cmpsl
add
addr16
inc
cmp
dec
adc
inc
mov
into
inc
incb
cld
das
ss
and
push
dec
test
push
sub
mov
add
and
inc
loopne
mov
test
addb
ror
leave
add
pop
push
jb
mov
adc
loope
push
inc
add
or
shll
je
pop
lea
rcll
sub
fldl
push
jmp
inc
push
in
adc
int
and
cs
rorb
and
xor
mov
lret
mov
push
lret
and
cwtl
shlb
dec
mov
xor
push
andb
leave
mov
test
add
sbb
and
cmpsb
aam
lods
mov
add
outsl
call
nop
clc
add
sbb
adc
mov
std
pop
jecxz
push
imul
mov
das
jmp
dec
adcb
push
dec
xchg
or
ss
ds
cmpsl
add
inc
test
in
pop
push
and
mov
out
mov
add
sub
repnz
scas
mov
mov
sub
into
je
daa
movsl
dec
cmp
divb
add
scas
in
loopne
sbb
jp
das
push
jle
inc
gs
outsb
add
jp
xchg
add
push
mov
jl
jecxz
adc
mov
mov
dec
out
push
inc
aam
mov
sbb
ljmp
cmp
sbb
daa
mov
imul
sti
cmp
mov
stc
int3
adc
ss
add
movsl
xchg
xor
inc
inc
mov
or
ret
repnz
xor
dec
aad
inc
cmpb
mov
repnz
aam
lret
dec
adc
sti
cmc
add
js
addb
fldl
orl
sbbl
dec
push
cs
mov
add
mov
lock
pop
stos
jge
mov
cs
daa
cmc
lret
push
scas
sub
sbb
mov
imul
mov
or
mov
xlat
jo
add
mov
or
and
aaa
pop
into
sbb
sub
fnstenv
xor
in
and
xchg
add
in
mov
add
and
call
pop
inc
jbe
daa
ret
cmp
js
out
xor
add
mov
movsb
adc
adc
jb
outsb
xor
inc
nop
gs
push
or
and
mov
cmp
pop
lcall
sub
repnz
pop
adcb
and
mov
shrl
cld
add
out
inc
inc
sahf
cmp
jge
pop
arpl
push
loope
add
xchg
cwtl
je
lods
loopne
loopne
lahf
mov
adc
pop
mov
test
addr16
shrb
arpl
std
pop
lock
add
xor
je
shl
push
push
mov
dec
stos
hlt
and
pusha
cmp
sbb
loop
xorb
sbb
testb
call
push
out
xor
mov
xchg
and
outsb
icebp
dec
sahf
pop
pop
mov
lea
loop
stc
incl
xchg
sti
enter
lahf
mov
out
push
in
push
add
jno
pop
inc
jp
cmp
rolb
pop
jbe
fadds
push
xor
inc
into
push
sti
xlat
push
stos
popf
sbb
or
faddl
push
dec
jmp
cld
jns
adc
dec
mov
mov
push
inc
add
movsb
inc
imul
add
and
daa
mov
add
cmp
shrl
and
mov
mov
test
fiadds
cmp
sbb
into
stos
sbb
or
mov
sub
jae
shufps
cmpb
inc
je
cmp
shll
lret
test
push
jnp
add
mov
loop
xchg
push
xchg
shl
pop
nop
test
je
add
pop
daa
and
int3
pusha
or
jge
addl
pop
sbb
push
xor
lret
add
mov
add
mov
push
cmp
push
cmpsb
out
cmp
pop
pop
adcl
aas
push
add
stos
ljmp
and
stos
rclb
lods
mov
add
mov
mov
add
adc
add
adc
ret
xor
inc
add
and
sbb
push
mov
adc
mov
add
ja
pusha
or
inc
loope
fiaddl
fbld
mov
mov
adc
dec
std
add
sti
mov
push
es
add
push
adc
stc
enter
arpl
add
and
popf
cmp
lea
add
arpl
loopne
pop
adc
jp
cmp
call
cmp
mov
in
or
nop
add
mov
xchg
dec
std
mov
mov
clc
pop
push
and
pop
mov
xor
or
pop
mov
pop
mov
dec
loop
popa
mov
shlb
cmp
leave
mov
pusha
push
adc
mov
mov
cld
repnz
add
inc
test
jo
jnp
adc
scas
cmc
add
aaa
data16
jne
pusha
add
jge
pop
sbb
mov
testl
lods
inc
decl
scas
jl
js
add
test
aad
test
lret
call
or
xchg
push
xchg
js
adc
out
cmp
cmp
jo
mov
data16
xchg
add
test
scas
jp
insb
pop
push
adc
or
pop
pop
xchg
mov
xchg
and
das
mov
xrstors
rorb
pop
push
aad
int3
add
ljmp
outsl
nop
add
aaa
mov
xchg
mov
nop
in
add
mov
ja
das
mov
cmp
shlb
push
in
or
mov
add
loopne
roll
xchg
loopne
push
add
bound
popa
mov
pop
cmp
adc
nop
addl
cwtl
out
call
add
mov
sub
mov
dec
add
xchg
jp
leave
pop
test
xchg
jmp
sarb
popf
pusha
js
lahf
add
loopne
jl
mov
mov
movl
inc
shrl
pop
mov
mov
add
jbe
adc
push
sbbl
mov
cwtl
cmp
or
fs
sub
mov
push
dec
js
mov
loope
jmp
cmpsl
shlb
inc
mov
adc
loopne
popa
pop
xorl
jo
shlb
fldcw
cltd
lahf
push
fbstp
rorb
or
movsb
xor
das
push
add
enter
add
dec
pop
pop
or
subb
rolb
jmp
push
jge
hlt
sbb
add
or
not
sub
xor
into
mov
add
push
push
cwtl
push
add
inc
jmp
bound
jno
imul
insb
add
cmp
pop
xchg
nop
enter
push
mov
adc
idivl
loope
push
movsl
clc
add
gs
pop
inc
adc
or
call
jge
sub
loopne
jnp
or
xchg
add
movsl
call
add
inc
push
mov
test
xchg
nop
adc
pop
add
add
push
add
rclb
dec
std
cwtl
add
mov
push
in
sub
and
adc
or
fnstenv
sbb
push
jo
adc
imul
clc
bound
je
cmpl
push
add
push
adcb
adcb
pop
fdivs
add
jno
js
mov
add
push
xor
xchg
adc
xchg
mov
fwait
mov
xchg
scas
dec
xor
enter
xchg
loopne
xor
sub
fildl
scas
pop
cmpl
mov
gs
vmwrite
sbb
mov
das
sarb
lea
add
xor
cmp
pop
clc
and
add
scas
adcl
mov
sub
nop
add
pop
jp
add
stc
faddl
xchg
sub
jne
add
rorb
or
cmp
mov
pop
mov
sub
jae
mov
cmp
loopne
jno
rcrb
inc
fldt
nop
xchg
add
int3
test
xchg
or
xchg
xor
jno
adc
dec
mov
mov
stos
test
cmpb
dec
lcall
add
mov
hlt
push
mul
test
sbb
or
xchg
pop
sbb
jo
cmpsl
adc
test
shrb
loop
hlt
adc
dec
stos
or
mov
cmp
shlb
add
mov
xchg
push
mov
push
imulb
add
add
mov
cli
push
xlat
sub
sbb
shlb
xchg
ficoms
mov
mov
cltd
ds
cmp
jl
lahf
inc
adc
cld
and
cld
sub
xchg
int
adc
push
add
loope
mov
jno
adc
pop
xor
adc
mov
add
mov
or
pop
jnp
jecxz
scas
mov
rcrb
testl
xchg
sbbb
sbb
sbb
sarl
dec
jmp
mov
mov
std
add
add
test
jecxz,pn
add
xor
jb
pop
adcb
insb
enter
xor
jmp
add
pop
int3
push
add
mov
add
lock
xor
inc
sbb
push
bnd
movsb
add
in
cmpl
fcmovb
mov
loopne
xlat
ret
add
jae
mov
repz
std
jo,pt
fldl
xchg
fcomps
or
push
ret
sbb
dec
mov
cwtl
sub
mov
mov
adc
sub
pop
jg
inc
loopne
push
inc
mov
pushf
subb
test
add
xor
out
int
sbb
add
sub
sub
sub
pusha
push
push
push
jle
xchg
pop
xor
xchg
push
sbb
sbb
das
insb
adc
ds
or
jle
add
mov
hlt
mov
ret
cmp
fldl
cmp
subb
jge
cwtl
pop
fistpl
daa
addr16
fld
sub
repz
pop
mov
xor
fnsave
arpl
mov
push
mov
sbb
inc
xorb
mov
adc
jb
popa
or
push
sbb
inc
dec
rolb
pop
pop
or
cmp
xlat
push
fadd
shr
test
imul
jbe
movsb
cmp
daa
movsl
dec
movhps
mov
xor
andb
ds
sarb
mov
mov
rol
jnp
inc
push
or
jb
push
mov
dec
add
insb
add
jae
outsb
cmp
lldt
cltd
scas
sbb
sbb
js
xor
xor
add
fincstp
jge
mov
sbb
jl
adc
ja
inc
or
in
inc
add
out
enter
inc
aam
xor
rorb
push
imul
fcompl
call
daa
xchg
add
add
and
rorl
add
xchg
sbb
push
cltd
add
jl
push
add
lcall
add
popa
xlat
or
jmp
mov
lock
mov
dec
cmp
je
and
push
or
loopne
aam
stos
inc
add
lock
popf
mov
fidivrs
mov
mov
sub
decl
cli
sub
pop
or
outsb
ret
jb
hlt
dec
cmp
mov
inc
sub
push
mov
add
push
stc
cmp
pop
inc
das
xlat
rcl
inc
pusha
test
psrlw
shlb
clc
mov
clc
fcomp
mov
cmp
cmp
dec
lock
add
add
add
arpl
fdivrl
shrl
add
adc
test
add
mov
aam
lods
jg
push
add
mov
jmp
inc
jge
imul
sub
inc
jnp
loop
add
aam
pop
cmpsb
stc
in
imul
jmp
cmpsl
xchg
add
push
hlt
insb
push
inc
inc
ljmp
rcrb
push
lock
jb
mov
pop
adc
inc
add
out
push
xchg
lahf
lds
imul
xor
mov
push
in
js
pop
lds
dec
inc
mov
sbb
jle
sbb
pop
jae
add
out
fisubrs
cld
mov
sub
mov
inc
lds
scas
roll
stos
cmpsb
fidivrl
xchg
dec
pop
sbb
je
and
push
add
scas
sbb
insb
add
pop
xor
shlb
inc
mov
xor
icebp
dec
pop
test
out
inc
push
sbb
sub
movsb
pop
push
mov
and
in
add
arpl
shr
xor
inc
add
and
add
fsubrp
lret
mov
pop
xchg
inc
rcr
xor
pusha
mov
xlat
es
dec
rolb
outsl
jl
test
add
mov
xor
pop
mov
mov
or
dec
xchg
sub
push
aad
mov
scas
rclb
imul
xor
inc
mov
mov
fwait
add
push
lcall
cmp
arpl
aam
cwtl
ds
insl
add
imul
dec
add
es
aas
cmc
inc
ret
in
xor
mov
xor
add
rsqrtps
fcomip
inc
or
in
add
stc
sub
xor
ja
leave
jge
fdivp
xchg
mov
scas
icebp
inc
xchg
inc
dec
sub
or
fs
dec
cmpb
cwtl
movsl
ljmp
jo
push
loopne
or
out
add
lret
adc
fimuls
push
lahf
or
xor
push
psubsb
mov
cwtl
add
sbb
xor
fnsave
insl
mov
fiadds
sbb
jle
mov
loopne
outsl
fnstenv
fsubl
enter
cmp
adcl
push
add
in
pushf
or
mov
fldenv
popf
xlat
fsubr
jae
adc
mov
fildll
add
shrl
xor
jecxz
xchg
lods
hlt
cmc
mov
push
push
imul
cld
pop
loope
push
add
cwtl
add
dec
push
ja,pt
xor
jmp
sub
and
insb
inc
ja
jno
das
clc
pop
adc
mov
mov
aaa
add
xchg
ret
sbb
mov
shll
add
jl
fs
into
adc
dec
add
inc
iret
jno
arpl
adc
or
jg,pn
jne
mov
xor
test
jecxz
push
enter
xchg
or
loope
orb
fisttpl
add
sti
dec
add
or
jecxz
aas
pop
add
sub
cld
adc
xchg
mov
pop
pop
loopne
loope
addb
lcall
rolb
xor
loope
or
mov
aaa
scas
fcmovu
or
in
mov
add
jmp
pop
add
mov
nop
mov
lahf
mov
call
inc
cmp
cmp
mov
mov
leave
sub
imul
push
adc
or
rolb
pop
adc
notl
repnz
pop
or
adc
add
pop
nop
out
xchg
mov
insb
pop
xchg
push
fldcw
mov
xor
iret
mov
sub
adc
xor
xchg
dec
sbb
iret
adc
pop
insb
xorb
push
add
add
insl
and
mov
repz
aam
jae
ljmp
lods
lea
loopne
fiaddl
add
faddp
sahf
adcb
into
and
sbb
jmp
mov
xchg
imul
ficomps
lock
fbstp
mov
or
fdivl
lods
addb
xor
mov
aaa
jns
push
pshufb
pop
xchg
pop
rcll
andb
pop
mov
out
xchg
inc
xor
add
fidivrl
clc
clc
add
xor
sbbb
pop
sbb
inc
fs
add
sar
mov
dec
add
dec
mov
push
mov
js
lahf
testb
enter
ret
sub
mov
jg
lahf
cld
adc
lods
test
dec
mov
xchg
into
mov
jns
push
scas
sub
xchg
adc
or
cmp
mov
stos
pop
xchg
mov
cmp
in
enter
add
mov
ret
in
xchg
mov
inc
sbb
mov
call
fmul
or
sub
push
mov
add
jp
sub
xor
mov
fists
or
loopne
xorl
mov
test
mov
mov
loopne
and
popf
stc
add
jnp
lea
ficoml
mov
mov
fldenv
repnz
add
in
inc
dec
mov
cs
sbb
pop
jp
popf
add
adc
imul
mov
cmp
ret
lcall
add
adc
mov
xor
ljmp
adc
movsb
scas
inc
call
mov
mov
push
lock
xor
add
ret
arpl
movsb
loopne
or
cmp
sub
xor
jge
sub
rcrl
sbb
in
xchg
cltd
pop
popa
cld
ret
fldl
adc
mov
cli
xchg
in
je
aam
ljmp
sbb
mov
or
js
add
mov
add
xchg
push
aas
push
push
jb
rorb
sbb
sub
pop
aam
mov
mov
add
out
fwait
lock
and
mov
mov
adc
nop
sarb
pushf
xchg
jo
shrb
mov
iret
lock
lock
lods
imul
pushf
dec
jno
rcr
dec
mov
jl
fdivrs
rol
scas
fcompl
add
sub
cld
jg
add
jl
jl
adcb
push
icebp
sub
mov
push
nop
xchg
inc
and
scas
mov
xor
fcompl
push
inc
xor
jmp
inc
scas
subb
add
jmp
arpl
mov
nop
and
addr16
fwait
out
pop
cltd
mov
sub
jmp
xor
push
loopne
xor
add
rcrl
pop
ret
adc
mov
add
adc
and
les
sub
dec
sbb
call
xchg
inc
push
addr16
add
lret
mov
fwait
add
xor
add
out
xchg
and
insb
xor
int3
push
inc
js
push
inc
mov
mov
adc
test
lock
in
add
inc
add
inc
add
cmp
adc
cmp
add
mov
or
push
mov
and
sbb
push
push
dec
jo
loope
jl
xchg
call
dec
ja
and
repz
setp
popf
jo
cmp
push
dec
lock
and
paddusb
das
scas
mov
jl
pop
cmp
adc
bound
xor
pusha
add
inc
aad
das
push
xchg
add
cwtl
dec
sbb
dec
add
shr
sbb
fldl
adc
sbb
cwtl
and
adc
jnp
hlt
sbb
xor
iret
jns
pop
push
mov
loope
mov
lock
out
pop
inc
scas
icebp
jbe
rcrb
add
inc
fst
fucompp
jp
inc
cwtl
aas
sbb
pop
insb
out
jge
dec
sbb
rcrl
mov
addl
jne
mov
add
add
mov
ror
fiaddl
aas
xor
shll
pop
push
icebp
arpl
popa
sub
addr16
rcll
pop
in
jecxz
int
add
adc
in
lahf
es
pop
sub
mov
jp
adc
pop
rcrl
jmp
in
add
mov
ret
mov
add
lods
xor
roll
int3
mov
fadds
push
lret
decb
jge
add
lods
cwtl
xor
xchg
inc
shrl
push
imul
call
aam
or
add
xor
mov
fwait
pop
jle
sbb
testl
inc
in
add
or
or
out
fwait
add
sbb
lods
bound
jne
rcrb
inc
add
dec
xor
jecxz
push
inc
and
push
push
jb
add
popa
push
add
sub
mov
add
lock
into
andb
rolb
cmp
mov
loopne,pt
xor
arpl
cmp
inc
sarb
jns
xlat
xchg
je
xor
mov
sbb
or
aaa
sar
adcb
scas
pushl
push
cmp
lcall
sarb
call
jne
out
jmp
aaa
stos
push
cmp
cmc
xor
sub
cmp
xor
ljmp
rorb
xor
mov
cwtl
xlat
pop
push
outsl
aad
inc
loop
mov
adc
mov
test
movl
or
mov
jo
mov
and
dec
call
aad
dec
rcll
mov
or
iret
jg
insl
add
sub
push
incb
test
ja
lea
imul
mov
mov
and
sbb
loop
movsb
jns
inc
pop
push
lret
pop
add
int3
aam
xchg
loopne
add
push
mov
inc
mov
add
pop
int
xchg
jle
lcall
mov
or
pop
push
sub
jne
add
push
into
push
testb
lret
mov
jg
mov
jne
outsl
jmp
popa
mov
out
push
outsl
xchg
out
sbb
popf
or
lret
je
pop
mov
nop
pop
lea
jae
add
add
mov
lret
les
scas
cmp
ret
bswap
mov
mov
push
mov
mov
xchg
add
add
bound
sbb
push
das
cmp
lret
faddl
mov
nopl
inc
scas
push
ljmp
dec
testb
jecxz
movsb
scas
inc
add
or
jg
subl
adcl
add
adc
neg
pop
mov
xor
mov
icebp
add
mov
and
loopne
sub
stc
lock
mov
sbb
lock
cs
lcall
popa
lea
push
nop
js
lret
cmp
addr16
and
inc
add
sbb
xchg
cmp
stos
xchg
popf
cmp
hlt
add
es
add
pop
out
xchg
mov
loopne
sub
add
iret
fistl
jns
out
int
pop
jno
add
pop
adc
js
mov
arpl
pop
dec
enter
add
adc
add
dec
icebp
cs
js
sub
nop
add
mov
sti
cmp
loopne
xchg
test
mov
xor
add
jne
aas
mov
and
sub
add
pop
pop
push
cmp
mov
sub
jl
xchg
adc
ja
xchg
js
cmp
mov
mov
jns
xchg
arpl
mov
int
pop
pop
adc
stc
fidivrs
stos
push
mov
add
in
or
xchg
mov
jg
xchg
add
jp
nop
popf
push
pop
sti
add
das
cwtl
push
mov
adc
adc
daa
adcb
dec
cmp
mov
dec
mov
ret
jno
cmp
fs
jno
bound
push
data16
or
ss
sbb
lret
sbb
cmp
push
mov
pop
inc
add
mov
mov
and
jecxz
js
push
add
enter
or
call
aaa
add
mov
idivb
out
subb
jbe
jl
and
test
cs
pushf
sbbb
mov
adc
sbb
mov
mov
add
outsl
add
cltd
sub
or
cmc
int3
mov
add
cmp
dec
or
cld
lea
sti
add
fcmovu
add
loope
cmc
lret
cmc
das
push
add
rcrl
sbb
add
mov
fidivrl
cmp
popf
mov
cmp
sbb
jne
push
jae
jle
icebp
push
add
mov
push
jmp
lock
aad
lret
add
add
into
insb
jae
iret
out
add
fstpl
inc
in
add
mov
xorb
mov
mov
add
pushf
fildl
and
xor
push
pop
scas
outsb
adc
add
mov
add
sub
aas
call
subb
push
dec
pop
int
out
ljmp
std
orl
ds
jle
add
in
cli
ss
pop
out
andnps
inc
jae
push
xchg
mov
in
sbb
lods
add
shufps
and
push
mov
ja
je
or
pop
add
icebp
jecxz
adc
add
add
push
lret
fdivs
and
lds
outsb
repz
cmp
add
push
loop
sbb
aaa
xchg
push
add
push
in
cmp
sbb
arpl
insb
push
cwtl
daa
add
clc
nop
cmp
add
adc
mov
roll
test
adc
cmc
ret
add
mov
call
sahf
aam
out
stos
jo
and
movsl
lret
test
cmp
dec
add
hlt
mov
outsl
xorl
test
xchg
shl
in
in
mov
jmp
add
and
mov
jb
pop
test
and
pop
push
and
cld
andb
dec
loop
xor
lock
mov
lahf
and
sub
xchg
testl
mov
sti
add
push
fcomps
fsubs
push
lock
mov
repnz
repnz
jge
loop
cmc
loopne
insl
mov
icebp
add
idiv
pop
sbb
add
adc
mov
jb
mov
clc
add
fwait
in
pop
push
xor
gs
add
mov
sbb
nop
cmpb
add
mov
adc
and
push
mov
sbb
cmpl
mov
in
mov
ja
push
enter
bound
pop
repnz
mov
aam
add
inc
rclb
addl
and
sub
dec
dec
cli
ss
test
scas
and
lock
add
cld
jae
cs
or
pop
jp
in
jbe
inc
and
jne
aad
das
inc
jecxz
inc
aam
and
mov
neg
push
jae
inc
add
fsubrs
or
andl
mov
iret
data16
enter
add
mov
out
sub
ljmp
mov
cli
add
push
loopne
sbb
add
and
mov
test
js
mov
jb
pop
and
test
mov
inc
and
mov
pop
push
daa
enter
mov
fldcw
jle
push
add
rcrl
loop
sbb
adc
call
mov
dec
js
xchg
and
dec
jne
jmp
dec
lock
nop
add
add
mov
stos
in
imull
aaa
and
pushf
xchg
mov
cmpb
and
push
cmp
cmpsl
fwait
adc
sub
daa
loop
dec
or
pop
fmull
push
add
cli
jnp
loopne
aam
hlt
out
add
jecxz
negb
out
add
xchg
ret
ss
push
add
loopne
je
dec
push
jmp
mov
adc
add
or
cmp
mov
add
setp
push
add
cmp
mov
movsb
adc
jne
repz
cwtl
orl
lds
icebp
add
add
inc
and
lock
lock
rcr
pop
hlt
or
sbb
neg
or
test
and
scas
add
fs
cld
rclb
sbb
inc
loope
jl
sbb
testl
fs
addl
push
xchg
ljmp
in
adc
xchg
add
loopne
or
sub
jno
jbe
adc
sub
in
lds
jle
aad
les
dec
add
jg
jns
ret
push
adc
roll
push
lods
inc
repnz
shrb
mov
test
sbb
cmp
je
stc
test
and
aaa
jge
and
popf
sub
loop
ret
cmp
mov
add
cmp
xor
shll
jns
add
hlt
shl
jl
fiadds
push
popa
or
add
sahf
mov
in
add
or
and
out
jge
sub
pushf
or
jg
push
push
test
add
add
fld
dec
fimull
divb
push
loope
inc
add
mov
add
mov
cmp
jno
pushf
out
incb
add
sub
aam
inc
cmp
fldl
icebp
sub
and
adc
xor
push
incb
lods
mov
inc
int3
fldl
xor
inc
xchg
roll
or
mov
or
dec
subl
mov
fcmovu
add
inc
loop
aaa
enter
mov
sbb
mov
cmp
repz
adc
loope
push
push
xor
push
jmp
popa
xor
add
pop
notb
mov
mov
aas
pop
cs
pop
mov
inc
sub
mov
cmp
addl
pop
fistpl
cltd
or
sar
ret
or
pop
sub
iret
mov
xor
fldcw
mov
add
sbb
sub
or
and
test
das
mov
xchg
add
loop
je
adc
add
cmp
ret
pusha
lods
ja
cmp
fcompl
and
mov
adc
loopne
adc
inc
add
lret
outsl
aam
clc
add
enter
push
dec
mov
and
repnz
mov
push
mov
or
jno
jmp
les
cltd
sub
add
imul
jo
add
aas
arpl
sub
sahf
add
jecxz
sbb
push
sbb
add
mov
test
mov
add
dec
dec
cld
mov
cmp
adc
add
ret
dec
lock
add
test
movsb
fcmovb
clc
hlt
pop
popf
addl
mov
sbb
xlat
fdivr
aas
data16
fdivs
lea
call
mov
fcomi
jg
lods
dec
cmp
gs
movsb
add
jnp
cmp
adc
in
fildl
movsl
add
mov
push
repnz
into
in
dec
lcall
add
inc
shll
stc
add
pop
xor
movsl
data16
inc
adc
xchg
mov
shrb
push
push
or
mov
sbb
mov
arpl
add
mov
xchg
repnz
fs
push
add
mov
jecxz
mov
ret
hlt
mov
ds
inc
jl
mov
mov
add
stos
cmp
fistpl
ret
cli
orl
cli
out
add
enter
leave
push
in
daa
add
adc
subb
add
or
fisttps
push
push
repz
add
ror
lds
movsl
ja
scas
or
add
add
mov
jo
pop
stos
cmp
into
mov
popa
out
jmp
dec
sub
sahf
add
imul
add
and
cmp
aas
test
jecxz
out
sub
fs
xchg
sub
sub
adc
je
add
lahf
cmc
sub
mov
adc
and
mov
lods
push
add
xor
outsb
add
scas
and
add
jno
xor
xlat
add
aaa
add
adc
push
fwait
add
je
addl
xchg
add
cmp
cmp
lret
into
sub
imul
cmpsl
out
add
push
call
xor
add
fisubl
jnp
jle
jge
add
popf
add
mov
jae
jne
add
lret
mov
hlt
mov
adc
and
add
inc
or
sti
scas
xor
cmove
xorb
or
inc
cli
and
adc
or
and
xor
mov
inc
lret
or
sbb
sar
or
fs
sahf
rorb
push
scas
mov
lahf
sbb
push
int3
fcoms
inc
lds
pop
cmp
in
add
xor
lock
jb
or
mov
inc
nop
dec
xchg
and
aas
subb
adc
add
xor
cs
and
inc
pop
push
shll
pusha
and
ds
pop
push
xor
cmp
ja
xor
mov
repz
aad
sbb
mov
inc
mov
in
frstor
and
orb
add
xchg
fwait
dec
clc
cmp
ror
adc
adc
enter
push
fmul
int3
sub
bound
inc
add
shlb
sub
test
clc
mov
jp
add
icebp
push
xchg
mov
pop
add
popa
insl
imul
lods
cmpl
and
push
int
sbb
cwtl
inc
cmp
out
add
outsl
shr
add
inc
add
mov
rol
inc
rcll
in
add
cmc
add
fcomip
mov
imul
aad
clc
and
imul
mov
pusha
mov
cmp
xchg
faddl
inc
out
not
jge
mov
icebp
es
jns
jmp
rcrl
jb
lock
dec
mov
adc
inc
and
cmp
sti
icebp
sbb
in
fsubrl
shl
hlt
clc
jo,pn
call
xor
sbbl
cmp
inc
shr
filds
xchg
mov
adc
ljmp
add
add
enter
add
nop
mov
mov
shld
pop
imul
ljmp
mov
jecxz
lret
aad
int3
or
xchg
add
jecxz
and
cmp
mov
xchg
add
and
add
adc
jl
arpl
add
dec
push
ljmp
fldcw
push
cmc
mov
adc
scas
rorl
push
mov
jno
mov
inc
sbb
mov
mov
test
pop
popa
mov
inc
fiadds
adc
test
ror
adc
popa
add
adc
push
out
or
push
in
sub
pop
ss
cmp
xchg
adc
push
jle
add
daa
push
add
fistps
inc
enter
adcl
mov
popf
ficompl
fdivp
jo
or
flds
adc
sbb
int
xchg
sub
mov
rorl
adc
xlat
or
insb
and
sbb
mov
mov
pop
and
push
inc
push
add
sbb
movsb
and
sub
je
fstps
add
addr16
dec
push
adc
hlt
out
ljmp
fisubrs
lock
adc
shlb
push
inc
or
or
dec
inc
and
es
call
cmp
nop
add
sbb
push
xchg
adc
push
lahf
add
jge
ja
xchg
mov
test
add
rcl
push
mov
sbb
cmp
insl
and
push
shrl
je
or
lea
cmp
add
insb
mov
mov
loope
sbb
fcoms
std
add
adc
xchg
xchg
jb
in
push
ror
ret
int
repnz
xchg
lock
nop
pop
push
pop
cmpsl
or
push
stos
jle
pushf
mov
and
pop
rclb
pop
inc
shrb
adc
add
add
mov
popf
popa
pop
push
mov
fs
xchg
push
movsl
popa
xor
pushf
sub
cmp
sahf
jbe
adc
jmp
xchg
test
cmp
orb
add
stos
inc
mov
test
dec
add
stos
mov
test
add
push
cmp
arpl
nop
adc
sub
and
lret
jecxz
int
cmp
les
stos
cmp
jge
and
movsb
rcr
test
add
adc
add
stc
in
adc
cmp
push
movsb
push
push
or
outsb
or
mov
xchg
dec
cmp
mov
iret
xor
mov
add
test
mov
in
and
dec
test
pop
inc
lcall
call
add
outsb
push
rclb
xor
sub
sub
adc
ja
jo
addb
aam
add
push
mov
dec
xchg
in
or
xlat
mov
push
inc
cmpsb
mov
cmp
lods
cmp
adc
xor
xor
dec
adc
insb
xor
mov
push
and
shl
jmp
pop
xchg
cmovns
stos
adc
movsl
xor
mov
adc
cmc
add
add
cmp
add
lahf
cltd
inc
mov
inc
add
add
lea
adc
enter
lock
fistl
mov
dec
adc
lds
pop
mov
mov
sub
insl
cld
scas
pop
popf
call
aam
cs
es
ret
divb
push
add
enter
in
inc
lods
pop
add
xchg
lea
clc
sbb
mov
adc
and
sub
xchg
cs
and
cmp
cld
mov
inc
cmp
mov
mov
clc
js
andb
pop
inc
adc
push
inc
add
fsubl
rorl
inc
push
adc
ja
or
and
lods
and
cmp
mov
insl
int
fwait
adc
enter
loop
mov
stos
je
add
cmp
inc
pop
jge
cmpsl
sbb
push
shl
or
dec
shlb
inc
cmpsl
sub
add
dec
inc
inc
sbb
test
xchg
nop
lods
dec
and
and
nop
xor
and
mov
std
js
ficomps
inc
mov
leave
jecxz
cltd
sub
push
fs
jbe
cmp
int3
pusha
cltd
sbb
or
movsb
sbb
and
dec
adc
fsubrs
fcomi
fbstp
daa
mov
or
or
push
cmpb
inc
aas
movsl
stc
and
dec
mov
xor
repz
out
arpl
add
rorb
add
mov
or
sbb
push
pop
lea
lcall
lds
pusha
mov
mov
popa
push
push
call
mov
push
and
and
mov
aam
cmp
fstpl
cld
dec
mov
dec
add
lret
lret
daa
push
dec
dec
mov
and
popa
and
out
or
mov
dec
sbb
in
cltd
pop
stc
and
jmp
aam
jle
repnz
push
xor
fcoms
in
in
pusha
pop
push
orl
movsb
push
es
jbe
sub
inc
hlt
fidivrl
imul
mov
or
mov
scas
sbb
int
stc
mov
pop
rclb
fildl
mov
dec
xor
sbb
icebp
or
xchg
add
lea
push
add
and
orb
sub
cmp
mov
dec
inc
add
sahf
pop
call
pop
leave
or
inc
dec
mov
inc
movsb
jno
sbb
imul
in
push
daa
clc
loopne
jg
mov
pop
shrb
les
add
xor
jecxz
fmuls
sub
lahf
add
jecxz
cmp
or
adc
cmp
out
inc
scas
popa
fists
xor
or
xor
clc
dec
cmp
call
pop
mov
addb
in
xchg
sbb
es
jb
or
or
add
dec
lea
fcoml
leave
test
arpl
add
cmp
pop
hlt
sbb
jmp
mov
mov
mov
orb
or
push
push
sub
inc
cmp
icebp
add
cmc
mov
push
inc
pushf
repz
popa
push
push
xorb
inc
mov
shll
add
inc
cld
or
daa
push
fiadds
jns
mov
int3
mov
or
hlt
push
sbb
leave
scas
mov
sbb
adc
adc
pop
mov
ljmp
imul
mov
pop
nop
and
lret
dec
adc
rcl
cld
scas
add
aaa
movsl
ljmp
add
bound
or
xchg
nop
scas
pop
or
cmp
sbb
add
xchg
subb
dec
adc
addr16
cmp
and
punpckhbw
cmp
test
mov
adc
push
adc
or
int
pushf
popa
pop
push
nop
xchg
lds
aam
jns
inc
loopne
cmp
or
mov
mov
fists
or
sub
cld
add
cmp
test
pusha
and
add
sub
loope
pop
or
or
ljmp
add
lods
addl
out
push
jo
stos
subb
pushf
dec
or
lods
adc
popa
push
push
pop
clc
je
shrb
jbe
xchg
mov
add
pop
pop
repz
cmp
and
adc
adcl
push
mov
xor
dec
test
nop
in
push
sub
loope
jg
repz
push
inc
int
mov
fistps
push
outsb
push
orl
repnz
mov
nop
test
mov
popa
pop
push
cwtl
bound
mov
mov
mov
andb
jb
sub
or
addr16
jbe
push
adc
shrb
outsl
es
mov
imul
insl
mov
xchg
subl
lret
in
xor
dec
push
cmp
xchg
mov
mov
mov
pop
cwtl
and
call
pushf
or
movsl
int
in
sahf
or
push
js
push
cmp
test
test
xchg
fldt
maskmovq
mull
fwait
mov
test
xchg
ror
insb
rclb
push
or
mov
add
sbb
mov
add
bnd
dec
jl
mov
mov
adc
sub
call
push
cmp
adcb
rcrl
aaa
lock
xchg
clc
push
add
testl
or
or
jae
pop
cmovg
stos
dec
adc
jg
pop
mov
shll
js
mov
mov
jne
push
jge
mov
add
push
std
mov
stc
cmp
pop
pop
shll
clc
sub
leave
ret
in
clc
test
cmpsl
dec
lods
adc
scas
nop
jp
incl
test
in
cmovp
and
pop
jo
cwtl
sbb
adc
lods
bnd
loopne
stc
xor
add
loope
push
mov
xchg
xchg
jl
mov
or
jbe
lock
les
shl
nop
popf
inc
inc
orb
add
sub
dec
inc
scas
adc
out
enter
mov
add
jmp
in
mov
or
daa
fisttps
mov
aad
xlat
cmp
mov
es
pop
and
iret
rcrb
and
pusha
dec
add
cmp
push
rcrl
int3
subb
shlb
inc
xor
xchg
lds
xchg
mov
add
dec
ss
xor
inc
mov
jle
sub
les
sarl
mov
popa
add
imul
pushf
arpl
pusha
nop
mov
xchg
lcall
adc
jecxz
and
dec
xor
fwait
mov
leave
adc
in
mov
xchg
mov
int3
jae
test
popa
lods
sarb
jmp
cltd
nop
sub
sarb
call
sub
xor
pop
mov
xchg
mov
call
mov
icebp
jne
hlt
sti
xchg
or
test
out
inc
xchg
pusha
xchg
dec
fsubs
xor
outsb
lods
adc
loope
xor
sub
push
mov
cli
into
in
xchg
iret
jecxz
andb
stos
inc
mov
lock
add
ss
mov
sub
mov
incb
xchg
jmp
jp
orb
lret
add
bound
repnz
and
jl
adcb
int
jmp
inc
lods
mull
into
or
pop
fbld
add
pop
fs
pusha
lods
out
stc
add
scas
je
cli
orb
or
mov
neg
js
dec
xchg
orl
xor
repz
and
mov
push
or
aad
pop
inc
pushf
mov
pop
and
fisubrl
push
adc
inc
push
jae
add
sbb
push
add
pop
inc
and
pop
pusha
push
mov
xchg
or
lods
cmovns
adc
pushf
sub
arpl
push
je
pop
insb
cmpsl
stos
lcall
iret
jnp
sub
and
rcll
dec
cmp
sbb
or
loopne
xchg
pusha
push
add
cmp
inc
add
aaa
stos
jns
adc
xchg
push
leave
imul
test
nop
hlt
rcrl
mov
cmp
popa
jle
add
push
mov
add
xlat
push
mov
lret
xchg
cld
movsl
sbb
jl
xchg
xor
or
add
jle
push
outsl
add
adc
push
sub
aam
add
fwait
and
fnstenv
notl
inc
push
pop
jecxz
add
mov
pop
inc
xchg
into
jecxz
out
add
pop
movl
adc
call
pushf
pop
aaa
aam
sbb
frstor
or
enter
sbb
into
sbb
cwtl
xchg
pushf
test
sbb
movsb
out
xchg
hlt
and
in
pusha
pop
fdivrp
add
aas
imul
leave
mov
dec
das
push
and
add
mov
cwtl
aam
xlat
or
popf
push
mov
mov
rolb
int3
and
or
test
adcb
push
cmp
xor
hlt
jnp
jl
inc
pop
xor
xorl
hlt
loope
jg
add
lea
sbb
xchg
mov
fnstenv
aam
ret
mov
sub
outsb
sbb
jle
adc
loope
enter
adc
call
jo
repz
push
insb
test
jmp
dec
inc
es
int
xor
xchg
enter
xchg
and
mov
mov
cmp
add
pop
sbb
popa
xchg
xlat
xchg
mov
or
aam
push
or
popf
mov
test
dec
or
add
fldt
int3
cltd
mov
std
adc
cld
hlt
add
fwait
shr
int
push
mov
fs
inc
xchg
mov
adc
push
adc
loope
daa
xchg
lock
xor
inc
movsb
sub
or
popa
fcmove
gs
notl
and
and
dec
mov
add
arpl
and
add
movsb
push
test
xor
dec
jns
and
int3
jecxz
int
sbb
sahf
hlt
add
loope
xchg
push
add
adc
push
pop
and
cmp
pop
xor
dec
mov
insl
rclb
mov
sbb
mov
bound
dec
xlat
add
mov
outsl
movsl
adc
addr16
pop
mov
out
jmp
rorl
js
daa
or
insl
push
cmpb
fisttps
add
sub
int
add
xchg
ret
add
sbb
aas
sbb
mov
cmp
addb
cmp
adc
pop
ja
mov
mov
test
adc
pop
inc
jnp
and
call
mov
filds
fs
les
mov
push
push
int
push
adc
jl
clc
mov
int
fmull
sbb
jno
call
nop
jne
mov
movsb
jns
sub
inc
add
lret
pop
leave
les
notl
data16
add
dec
repnz
inc
and
aad
js
add
cmp
hlt
mov
adc
mov
adc
rol
pop
cmpb
dec
cmc
enter
add
sbbb
jge
lods
mov
andl
dec
sub
mov
push
add
orl
clc
aad
adc
fimull
xor
and
sub
jb
lock
shrb
pop
fisttps
xorl
xlat
gs
push
mov
inc
daa
push
push
mov
mov
into
lock
xchg
lods
xchg
push
mov
pushf
inc
les
jl
test
sbb
mov
mov
mov
pop
and
xor
stos
dec
push
pop
sub
and
or
les
inc
or
hlt
add
lds
inc
add
adc
xchg
shlb
test
cmp
sub
jle
inc
leave
push
je
movsl
loop
jno
add
sbb
popa
lcall
mov
pop
fmul
mov
dec
xor
stos
test
xchg
mov
jb
add
insl
push
scas
cwtl
mov
add
ret
dec
enter
fildll
sahf
mov
xchg
xchg
movsb
arpl
stos
xor
jl
mov
adc
add
xor
mov
add
mov
cmpl
xor
stos
cld
add
and
jmp
mov
movsl
xlat
lea
outsb
and
jge
cmc
add
jo
sub
jae
add
inc
pusha
enter
add
lods
xchg
inc
lret
in
xchg
jno
sub
or
clc
mov
das
xchg
cmp
xchg
pop
mov
loope
sbb
testl
adc
jbe
cmp
xor
and
test
hlt
mov
cmp
jl
sbb
enter
stos
or
insb
inc
mov
push
movb
dec
adc
mov
faddl
ffree
or
inc
add
push
test
mov
or
mov
jns
and
js
mov
or
inc
add
jo
sti
cmc
call
and
add
in
icebp
daa
add
mov
mov
inc
lods
pop
fsubp
cmp
xor
js
add
ror
mov
add
xchg
pop
pop
pop
mov
ficompl
je
fnstcw
hlt
imulb
xchg
adc
in
inc
clc
add
add
insb
sbbb
push
pop
push
hlt
or
mov
es
sbb
cmc
cltd
or
adc
jp
add
inc
ror
enter
mov
call
dec
xor
inc
adc
rorl
shll
add
or
jl
nop
push
lock
es
mov
bound
and
repnz
sub
mov
add
jl
push
and
ret
xorb
cmp
pop
add
add
mov
mov
inc
jnp
faddl
cmp
aam
in
movsl
push
mov
imul
push
fcoms
gs
dec
into
xchg
adc
inc
pop
rorl
loope
stc
addb
jmp
and
mov
loopne
hlt
fisubs
inc
shlb
mov
push
gs
mov
psrlw
push
inc
inc
scas
lret
fwait
push
jle
sbb
popf
jl
push
add
shll
adc
cmp
xor
mov
sbb
cmpb
enter
aam
fs
out
xchg
xor
pop
inc
inc
call
dec
dec
mov
cmp
mov
sub
insl
fsts
testl
dec
scas
xchg
dec
or
jg
lds
pop
movsl
or
vucomiss
clc
inc
and
add
jge
jo
mov
aam
lea
mov
add
fidivs
push
xchg
push
outsb
sbb
and
or
inc
add
lahf
cmp
pop
imul
popf
cmp
loopne
xor
fwait
orb
adcl
mov
lret
pop
pop
add
sbbb
insl
push
sub
dec
das
cwtl
and
add
cmc
in
mov
jg
xchg
mov
and
and
jae
jo
sti
nop
out
or
sub
and
push
jns
pop
cld
xchg
xor
out
daa
push
test
or
jmp
leave
push
mov
xchg
add
pop
and
mov
and
xchg
mov
rorl
and
inc
cmc
hlt
cli
icebp
add
leave
jmp
jge
ucomiss
add
aad
outsl
enter
fs
lock
xchg
and
in
jl
mov
inc
addb
mov
inc
sti
push
sbb
pop
add
call
jl
mov
and
sub
or
xor
inc
daa
or
hlt
shrl
mov
add
shll
push
sahf
xchg
sbb
std
je
mov
adc
aas
or
and
xchg
adc
ljmp
adc
lcall
dec
add
hlt
or
addr16
jo
cmp
sbb
mov
jno
xchg
nop
add
movsl
test
pop
adc
mov
in
xchg
jmp
out
jbe
sub
sbb
add
nop
cs
jae
adc
mov
xor
mov
inc
pop
in
aaa
out
and
inc
sbb
pop
xchg
insb
arpl
negb
inc
cmp
mov
push
daa
add
loop
mov
test
scas
fisttpl
cmc
and
pop
xor
mov
repz
push
xchg
leave
insb
mov
outsb
call
sbb
adc
out
add
ds
in
dec
adc
push
jno
lret
adc
enter
pavgb
xchg
cld
sub
faddl
pop
mov
pop
or
fisttpll
sbb
mov
xor
inc
dec
fcomps
xorb
push
or
jmp
addb
je
sub
filds
sbb
das
nop
pop
nop
repnz
sub
pop
xchg
loopne
fsub
inc
or
xchg
add
mov
cmp
hlt
push
mov
add
mov
shll
test
cmp
add
sti
into
pushf
mov
lcall
in
js
mov
fcmovne
lret
jge
pusha
add
hlt
mov
fmuls
in
mov
jns
into
jl
inc
push
sub
stos
add
gs
orb
fiadds
lods
notb
and
adc
les
dec
push
lret
movsb
enter
push
push
add
in
les
loopne
mov
test
out
add
enter
in
out
inc
sub
mov
call
js
push
enter
mov
out
add
dec
mov
popf
imul
pop
sub
mov
leave
xchg
push
cwtl
and
add
leave
lock
add
iret
mov
fstp
clc
pop
mov
dec
shrb
adc
xor
popl
push
mov
sub
mov
mov
mov
js
cmp
xor
fdivs
outsl
push
push
xchg
dec
lds
push
add
add
inc
imul
ds
add
xchg
or
add
jge
daa
or
add
push
mov
nop
pop
add
repnz
xor
xchg
xchg
popa
jge
clc
inc
js
inc
sub
xchg
mov
les
or
sti
pusha
mov
jns
jmp
pushf
sub
and
xor
pop
xor
mov
mov
movsb
mov
push
or
addb
pop
lods
stc
mov
inc
jb
pop
idivl
jb
pop
push
or
cwtl
dec
outsb
mov
xchg
push
cmp
js
mov
sbb
add
adc
mov
into
nop
es
dec
cmpsl
roll
subl
mov
xchg
lret
jno
mov
and
or
mov
fs
insb
mov
stos
xor
cmpsl
daa
adc
dec
cmp
and
xchg
imul
fdivrp
ljmp
push
push
mov
ds
xchg
cmp
mov
sbb
adc
push
shl
out
nop
add
lret
xor
cmc
ljmp
je
or
enter
inc
add
loop
xor
cmp
mov
dec
mov
add
dec
dec
cwtl
cwtl
sub
aad
inc
int3
pusha
jo
icebp
outsl
push
sbb
shl
mov
mov
xchg
adc
insl
loope
mov
enter
xchg
add
mov
adc
movsl
push
xor
test
cs
mov
aad
pusha
or
test
mov
jmp
inc
mov
push
push
in
fstps
daa
or
mov
add
mov
mov
and
pop
test
add
daa
push
aad
mov
in
push
xchg
dec
leave
mov
mov
mov
cwtl
loopne
pop
jge
push
sti
jnp
xorl
stc
inc
hlt
divl
push
push
addb
dec
mov
xchg
and
mov
scas
out
adc
aad
ja
and
pop
jle
jne
cmpsb
dec
inc
jb
incb
or
rcrl
or
pop
inc
sbb
mov
xor
pusha
ret
je
adc
cmpsb
mov
ljmp
fsubrs
mov
xchg
pop
add
cwtl
add
mov
or
push
js
add
add
repz
shll
adc
movsb
ja
jl
adc
add
cmp
fwait
sbb
shlb
mov
sbb
pop
add
mov
movl
xchg
pop
adc
jo
jge
and
dec
nop
add
pop
sbb
add
cltd
scas
or
cmp
xor
push
add
leave
mov
sbb
int
or
add
adc
or
lods
sbbb
loope
sub
mov
xor
dec
mov
inc
add
std
mov
jp
aas
imul
sbb
jo
mov
sub
adc
add
jg
negb
popf
add
mov
xlat
sub
jb
adc
add
pusha
hlt
cwtl
jg
xchg
loope
bound
in
inc
pop
xor
and
xor
xor
lock
push
add
jnp
mov
out
pushf
test
rorb
add
xlat
xor
jns
fdivr
push
add
imul
xchg
push
pop
jmp
inc
dec
in
int
jg
xchg
add
daa
std
aaa
imulb
cmp
les
inc
out
sti
add
test
sarl
inc
jne
add
ljmp
pop
adc
and
xor
mov
incb
mov
jg
repz
xor
jl
push
out
push
aas
push
mov
adc
and
push
adc
fadds
call
xor
mov
lock
addr16
cmp
mov
out
cmp
adc
or
imul
bound
mov
add
int
pop
mov
jmp
mov
jle
inc
pusha
in
aas
leave
repnz
outsl
xlat
sub
js
cs
push
add
cmp
popa
dec
andl
or
jo
add
push
sbb
ficomps
inc
cmp
push
add
outsb
inc
leave
mov
andb
mov
daa
inc
add
dec
push
out
dec
jo
adc
xor
in
addr16
pushf
xlat
leave
push
cmp
cltd
mov
je
xor
sbb
jmp
dec
mov
add
fcmove
andb
in
bound
sahf
cs
int3
adc
mov
adc
xchg
repnz
pop
cld
cmp
mov
sub
mov
lret
jl
jne
add
or
cmp
enter
repz
aad
repz
mov
stos
sbb
add
mov
mov
add
loopne
repz
fadds
setae
mov
es
jg
testl
push
sbb
int3
hlt
mov
mov
mov
adc
imul
push
and
add
jle
nop
sub
mov
jb
jl
or
scas
push
mov
add
and
mov
sub
ss
add
pop
clc
push
inc
lods
add
leave
pushf
fistpll
clc
mov
ja
jno
add
ds
data16
jp
mov
nop
add
cmp
and
cs
movsl
dec
out
jge
cmpsl
and
pop
sete
ret
push
dec
clc
test
dec
inc
xor
les
repnz
cld
out
sub
fs
lcall
jl
popf
popa
cmpsb
sbb
mov
ljmp
xchg
pop
fs
jae
cli
push
push
mov
gs
enter
pop
loopne
pop
shrb
add
pop
mov
sub
sub
add
ds
repz
jns
add
jle
ljmp
fmul
inc
mov
jl
ret
add
xor
les
icebp
adc
add
lock
add
mov
jecxz
lock
jg
and
rorl
add
in
or
insb
push
rorl
dec
inc
add
cld
sub
lds
mov
inc
in
add
push
mov
add
stos
add
pop
rclb
lock
add
cmpsb
mov
outsl
xchg
add
loope
jl
and
pop
add
jp
add
pop
jmp
mov
xchg
js
jno
add
xor
dec
aam
add
push
popl
data16
insl
out
mov
loopne
aad
mov
push
cmp
inc
cli
ss
rolb
idivl
mov
add
push
cmc
cmp
out
sbb
and
popa
popf
and
roll
jns
and
mov
rorb
je
mov
int
dec
clc
cmp
ret
xchg
flds
cltd
push
xor
enter
or
mov
add
int
cld
add
jbe
stc
add
mov
outsl
ss
jns
cld
add
jg
decb
pop
fwait
mov
adc
mov
loopne
mov
sahf
das
aas
xlat
cmp
mov
pop
sbb
rol
dec
add
stc
out
pop
push
aam
push
add
push
pop
test
insl
add
cmp
call
cld
enter
outsl
stc
xor
shlb
xor
adc
dec
and
std
int3
sarl
or
add
andb
xor
icebp
mov
dec
adc
dec
mov
aas
adc
mov
add
and
test
and
loopne
sbb
push
dec
ret
mov
jle
jns
add
ja
outsl
inc
test
into
sub
xchg
jg
int3
iret
in
xor
mov
cmp
ret
mov
out
cmp
sub
hlt
adc
pushf
jecxz
inc
icebp
jne
add
gs
or
or
outsb
cmpsl
mov
cmp
sub
call
push
test
data16
pusha
fldl
lret
cli
lock
movl
fwait
shl
fiadds
repz
mov
sbb
xchg
xchg
lea
aam
clc
rcrb
in
dec
sub
add
jbe
subb
pop
mov
mov
ret
dec
adc
sbb
jmp
mov
pop
add
jle
outsl
inc
adc
cwtl
into
adc
inc
loopne,pn
xor
js
rolb
add
push
jo
push
decl
cmp
fdivs
ds
les
jecxz
or
adc
addr16
adc
arpl
push
jns
test
fcom
sbbl
add
and
dec
push
add
mov
mov
sub
addb
pop
mov
pop
fwait
repnz
xor
pop
cmp
sbb
push
mov
call
and
mov
pop
insb
adc
lock
out
inc
or
fmul
loopne
shr
mov
dec
inc
aaa
fld
xor
loopne
leave
and
mov
or
enter
mov
inc
iret
gs
fmuls
push
jge
andl
or
pop
add
jbe
cmc
cs
add
pop
sti
pop
test
lcall
mov
iret
leave
cmp
jecxz
xchg
std
inc
fcomi
rcrb
jmp
pushl
ror
xorb
sub
fsubs
sbb
outsl
setle
xor
pop
in
mov
add
bound
ja
cmovnp
add
inc
jecxz
jae
pop
adc
fs
in
inc
add
push
cwtl
sub
pop
lods
mov
mov
ss
sub
sub
dec
add
dec
dec
jae
pop
addl
adc
icebp
movsb
das
xchg
add
pop
scas
test
cmc
in
or
adc
leave
bound
loopne
mov
push
add
xor
xchg
add
cmp
inc
inc
roll
mov
mov
add
fcompl
out
fs
add
jg
or
sub
bswap
mov
dec
add
ret
out
enter
mov
into
push
insb
add
imul
pop
fildl
iret
inc
add
jecxz
mov
push
lea
pop
stos
sub
clc
xchg
cmc
fld
jbe
cmp
fistpll
mov
insl
stos
aas
and
in
add
aad
jbe
add
lcall
dec
es
or
cwtl
jl
mov
outsl
xchg
and
sub
in
inc
pusha
dec
sub
sub
add
add
xchg
and
aaa
fwait
loopne
or
stos
pop
xor
push
mov
in
mov
jnp
into
sub
add
and
test
js
cmpb
mov
int3
lret
xchg
add
mov
je
cmpsb
mov
push
loope
inc
jbe
push
mov
insl
add
aam
add
loope
pop
popa
pushf
je
sbb
mov
adc
ret
add
add
xchg
xor
pop
mov
inc
je
cmpsl
out
insb
inc
adc
inc
ljmp
xchg
mov
mov
daa
adc
cmc
clc
sbb
jns
mov
add
and
mov
mov
xor
adc
pop
fnstenv
movsb
add
aas
sbb
xor
push
jns
outsb
int3
arpl
sbb
jb
adc
adc
in
jmp
or
insl
into
and
inc
jmp
push
inc
stos
jmp
mov
test
sbb
sub
dec
stos
fcom
inc
rcrb
je
rcll
mov
and
into
fwait
out
cmp
push
jp
mov
testl
push
xchg
ss
xor
icebp
mov
imul
ds
jmp
int3
repz
add
cmp
insl
add
mov
pushf
sbb
frstor
sbb
add
inc
out
scas
cmp
call
and
xor
mov
loopne
fcoms
iret
pop
out
mov
test
cmp
sbb
addr16
lock
adc
or
push
mulb
add
mov
jns
mov
jnp
in
xor
push
shl
popf
arpl
scas
mov
std
sub
dec
dec
push
add
inc
xor
cwtl
rclb
xchg
aad
out
icebp
pop
jae
push
fisttpl
add
imul
inc
xor
aam
rorb
setae
dec
xchg
inc
jno
jecxz
xor
and
add
adc
mov
xchg
out
mov
adc
cmp
pusha
jecxz
jl
add
das
add
adc
sbb
add
icebp
inc
or
xchg
stos
xor
or
adcb
outsl
mov
aas
in
outsb
sub
pop
mov
sahf
xor
in
jmp
icebp
out
js
mov
in
push
mov
movsl
ffreep
add
sub
orb
or
xchg
inc
inc
adc
and
or
mov
jge
and
xor
aam
js
mov
add
stc
pusha
mov
lret
js
sub
push
fcmovnbe
testb
pop
in
cmp
inc
mov
and
mov
mov
sub
sbb
cmp
insb
add
sbb
push
add
jmp
add
jmp
into
mov
insb
test
dec
cmp
push
sub
outsb
movsb
xor
cmp
push
or
popa
or
push
flds
dec
lds
negl
pop
adc
mov
filds
push
test
jns
jbe
fildl
dec
jne
psrad
adc
outsb
push
daa
fdivp
add
sub
mov
jecxz
sbb
sbb
push
in
fbstp
out
sbb
mov
hlt
dec
sbb
add
sbb
xlat
cmpb
xor
xchg
add
mov
aaa
jbe
dec
mov
shrb
fiaddl
or
push
fildl
mov
add
scas
out
ret
mov
enter
daa
add
lcall
xchg
rolb
pop
scas
jns
pop
push
add
or
add
movl
pushf
add
dec
movsb
je
arpl
popf
lahf
push
and
jle
add
push
cmc
int3
stc
fstp
sub
jmp
pop
add
inc
pop
jae
or
in
enter
cmp
push
push
fidivrs
lret
sub
add
inc
enter
movl
mov
push
enter
rol
fadds
mov
test
icebp
sbb
pusha
ljmp
sar
jl
nop
pushf
jne
clc
xchg
add
movsl
dec
ss
mov
xchg
je
add
adc
stos
jg
mov
inc
sbb
add
sti
add
nop
pop
push
mov
adc
imul
mov
loope
je
inc
clc
rcll
push
pop
or
add
xchg
sub
fdivrl
fiadds
in
push
into
mov
mov
jbe
mov
idiv
push
ja
jle
add
jo
push
xor
sub
or
push
jl
xchg
sbb
cmp
add
rolb
adcb
add
movb
xor
lcall
nop
shlb
sbb
xchg
adc
sub
sarb
nop
clc
cmp
pop
push
sbb
enter
imul
dec
aad
loope
out
sbb
or
mov
shlb
leave
outsl
mov
es
push
fisttpl
jae
push
adc
add
aaa
cmp
cmp
orb
dec
clc
roll
sbb
movsl
test
mov
pusha
pop
cwtl
xor
imul
or
out
mov
insl
sub
xchg
push
adc
inc
pusha
jge
mov
inc
xor
sarb
jae
jp
mov
inc
lock
sbb
fs
je
popa
inc
jne
fstps
xor
std
mov
adc
outsb
inc
add
adcb
add
cmp
hlt
mov
mov
mov
xor
shrl
ljmp
xor
dec
inc
or
lock
and
or
mov
cs
mov
rclb
in
jl
sbb
xor
xchg
jp
lret
repnz
shlb
gs
cltd
loopne
adc
sti
or
mov
ret
dec
popa
std
adc
les
mov
sub
push
add
outsl
jne
cmc
ret
jbe
push
mov
cmp
dec
pop
pop
rcrl
sbb
fwait
sbb
sub
icebp
mov
scas
pop
js
mov
pop
add
cmp
sbb
mov
mov
stos
pusha
push
cmp
xor
mov
enter
adc
iret
daa
add
vfmaddsub231pd
mov
mov
xor
xor
test
adcb
dec
mov
in
test
xlat
ret
out
rcr
popf
ror
mov
aas
inc
mov
pop
cmp
xchg
lret
cmp
jle
jbe
dec
mov
add
or
neg
and
and
cs
test
adc
mov
cmp
inc
jo
call
add
ss
cmp
push
mov
pop
sbb
orb
aaa
jae
out
dec
or
loop
and
mov
adc
pop
xchg
jmp
inc
sbb
pop
ror
andl
cltd
jb
sarl
pop
jl
pop
xor
sbb
sbb
or
pushf
movsb
rcll
or
inc
dec
add
ret
addb
add
loop
cwtl
jo
mov
stos
mov
or
xor
dec
icebp
adc
dec
fldl
cli
add
inc
jp
lods
fiaddl
call
sahf
fs
add
cld
popf
mov
clc
add
mov
xchg
sbb
sub
xor
daa
ret
imul
dec
jns
add
inc
xchg
mov
dec
add
arpl
xor
pop
add
std
jbe
inc
stos
add
push
pop
jp,pt
sbbl
lds
scas
sub
popf
sub
jge
aad
movsl
lret
mov
movb
cwtl
or
out
enter
lret
dec
pop
mov
mov
lret
add
std
jecxz
push
cmp
add
es
shll
popa
mov
cmp
sbb
xorl
sbb
stos
mov
jp
add
test
cmp
pop
test
enter
out
iret
aaa
bound
arpl
aam
movsb
push
movb
add
popf
rolb
inc
mov
fcmovu
out
inc
enter
add
clc
cld
push
add
hlt
add
xor
enter
fmuls
xor
pop
and
add
jne
cli
lods
jmp
adc
call
cmp
pop
ds
mov
dec
shl
add
loop
dec
hlt
sub
add
xchg
sbb
add
sahf
ja
adc
dec
and
and
pop
mov
ljmp
mov
add
int3
jle
inc
push
ficoms
orl
leave
aam
push
nop
sbb
stos
cmp
gs
mov
push
aad
push
add
sti
push
clc
fldl
xor
add
mov
fiaddl
cmc
jnp
iret
and
sub
xorb
insb
rcll
lock
and
or
dec
jae
hlt
and
pop
into
pusha
js
loop
xchg
imul
call
xor
inc
aad
sub
xchg
mov
ret
push
xor
in
enter
xchg
add
cmpsb
fidivs
lahf
xor
adc
jmp
out
add
jnp
fs
faddl
lret
add
insb
and
add
je
sbbb
sar
stos
add
mov
mov
xor
ds
mov
faddl
xor
lcall
loopne
int3
xchg
sub
add
mov
sahf
std
fldenv
in
inc
jo
push
mov
add
sbb
mov
add
mov
sbb
leave
and
loope
aam
xchg
add
fstpt
xchg
mov
aas
sub
sbb
enter
add
loopne
movsb
add
ret
in
sbb
repnz
cld
jg
mov
dec
insb
cmp
std
mov
sbb
mov
pop
outsb
aad
push
sub
add
inc
jp
mov
cmpsb
repnz
int3
or
and
dec
inc
pop
stos
add
scas
and
pop
pavgb
mov
sub
inc
xlat
push
adc
movsb
fldl
loop
push
adc
jns
inc
pop
sbb
int
jo
add
outsl
fst
jmp
xlat
add
repnz
add
stos
aas
enter
xchg
adc
or
popa
add
fneni(8087
pop
in
lea
xor
loope
inc
push
aam
lahf
mov
mov
testl
sbb
adc
sbb
add
dec
imul
inc
jp
mov
stc
add
cmp
sbb
insl
xor
hlt
sub
add
pop
add
pop
xor
insb
push
mov
xlat
outsb
sub
sbb
push
fucomip
or
push
add
push
and
cmp
push
adc
jecxz
sahf
inc
lock
sbb
jle
adc
and
cmpsb
sbb
mov
dec
add
add
test
dec
mov
mov
in
aam
je
add
scas
jp
add
mov
cmc
dec
loopne
push
jg
push
sbb
push
aam
jae
dec
mov
add
movsb
mov
xor
mov
cld
add
cmp
add
inc
push
in
jae
inc
jno
add
and
or
dec
or
in
into
pusha
inc
mov
cwtl
movsl
sub
mov
popf
mov
add
cmp
jbe
jge
int3
sbb
lods
sbb
into
pop
mov
inc
pop
aaa
leave
and
pushf
mov
add
cmp
sti
add
sbb
inc
push
inc
adc
std
aam
cmp
les
pmulhuw
push
mov
xchg
or
or
pop
adc
mov
or
pushf
push
inc
je
mov
add
leave
pop
fisttpll
sbbl
loop
push
mov
lods
movsb
aas
mov
add
clc
inc
jo
jg
mov
mov
add
mov
xchg
pop
test
testb
and
fstpl
add
std
mov
sbb
outsl
nop
and
push
fstps
test
arpl
loopne
sub
sbb
push
add
jmp
imul
popa
insb
sbbb
xor
mov
movsb
aaa
push
mov
movsl
push
mov
mov
loope
into
rcrb
lahf
shrb
rol
outsb
pop
add
icebp
jae
add
mov
jge
movsb
fsubl
dec
push
shlb
cmpsb
cmp
test
fadds
fdivs
adc
push
jg
push
cld
loop
jb
adc
add
filds
jecxz
and
dec
cmp
bound
inc
daa
inc
cs
or
add
push
shlb
add
jae
repz
sbb
sub
push
pop
and
std
cwtl
lcall
aas
jge
and
xor
rorl
jnp
test
cmp
push
mov
and
pop
xchg
jne
cwtl
dec
xorb
sbb
iret
cltd
push
add
fxtract
jl
mov
xchg
pop
fcmovnb
sub
pop
test
cs
insb
mov
lahf
and
and
add
std
test
mov
inc
jl
jmp
negb
mov
lcall
xor
jo
js
add
jns
insb
cmp
lret
inc
scas
add
movsl
mov
push
insb
xlat
in
cmc
int3
pop
dec
in
les
and
je
cmovns
mov
cmp
add
adc
add
xchg
xchg
and
scas
jecxz
arpl
lret
pop
orl
jns
add
ret
jle
sbb
or
mov
xor
jge
jae
pusha
jmp
add
sbb
je
test
dec
jb
pop
rolb
and
push
lret
mov
in
cli
push
pop
into
fwait
movsb
mov
pop
je
mov
add
das
push
gs
pop
dec
jmp
push
mov
xorl
mov
add
push
mov
adc
ficoml
sub
pop
insb
dec
add
into
push
lret
pop
dec
cmp
repnz
xor
xchg
dec
sub
out
xor
iret
out
xor
mov
fmul
xor
fs
add
dec
cmp
cmp
in
xor
add
popa
mov
mov
add
jl
jge
xchg
sub
das
sub
punpckhbw
xchg
mov
inc
aam
adc
loope
sti
push
sbb
xor
push
rorb
test
sets
inc
mov
lret
push
es
inc
movsb
pop
jmp
mov
mov
fcomps
xchg
add
pop
addl
and
add
push
pop
cmp
xchg
xchg
push
stos
lock
add
and
movsl
rolb
fsubs
out
inc
std
enter
imul
jno
out
mov
add
push
cmp
rcll
push
mov
jmp
mov
cmpsl
mov
fcomip
mov
cmpl
aas
pop
dec
mov
hlt
iret
sub
pop
jle
dec
add
add
inc
pusha
and
fwait
pop
sarl
jb
js
pusha
js
add
xchg
jns
int
xchg
and
or
lds
sarb
les
push
mov
pop
sub
int3
inc
push
xor
aaa
add
adc
lcall
adc
mov
sbb
and
cmpsl
rol
mov
pop
add
sbb
push
adc
cwtl
insb
add
xchg
xlat
ljmp
push
jbe
jno
push
xchg
addl
push
push
clc
popf
mov
push
fcmove
in
pop
lret
pop
or
mov
mov
cltd
mov
sub
mov
mov
xor
xlat
xor
cmp
fxch
or
inc
pop
pop
adc
push
inc
or
xorl
incl
xchg
mov
xchg
push
pop
pop
add
xor
sbb
in
pop
cwtl
or
adc
add
mov
push
stc
lea
into
mov
sbb
cmp
inc
push
push
outsb
pusha
adc
scas
xchg
jns
mov
xchg
sub
std
mov
jnp
add
flds
add
sbb
or
rol
orl
xlat
jo
mov
dec
loop
jg
jnp
add
mov
mov
std
repnz
nop
lcall
inc
sbb
out
sti
or
xor
data16
std
push
sub
jnp
adc
and
ret
inc
xchg
mov
mov
lods
add
in
fidivs
jbe
jle
loopne
sbb
mov
sub
inc
or
in
sub
pop
rcrb
mov
sub
adc
cmp
xor
add
mov
enter
sbbb
pop
push
adc
ljmp
add
cmc
andb
cwtl
push
imull
or
test
loopne
insl
rclb
lcall
sbb
cli
sahf
pop
lods
mov
sub
out
add
jne
sbb
cmp
dec
test
orb
jmp
rolb
fsubrl
wrmsr
pop
mov
lret
add
xlat
pop
add
in
xchg
mov
sbb
rcr
in
dec
push
adc
pop
add
daa
xchg
rclb
jp
add
push
hlt
pop
jmp
arpl
leave
xor
add
sub
inc
out
push
xor
add
xor
fwait
stos
add
add
pop
add
mov
mov
comiss
push
mov
ret
xchg
sub
lahf
push
stos
pop
nop
es
add
mov
jo
imull
ds
aam
or
or
pop
sbb
pushf
jmp
cli
in
add
nop
cmpsb
push
aam
fbstp
mov
jae
add
lods
xlat
push
rolb
or
push
pop
jmp
test
aaa
aas
pop
xchg
sahf
loopne
adc
sarl
add
xor
subb
data16
add
add
cmp
fiaddl
outsl
sti
jecxz
push
dec
popa
imul
jp
sbb
nop
ja
int
dec
add
inc
cld
addl
pop
pop
or
stc
add
mov
or
add
sub
mov
loopne
icebp
mov
pusha
add
add
repnz
sbb
lret
pop
scas
sbb
movd
lret
pusha
sub
lods
jae
mov
dec
lds
lods
add
subb
aas
add
shlb
inc
scas
jle
inc
push
movzwl
imulb
outsl
add
shlb
add
out
pop
dec
pop
mov
add
data16
and
or
shlb
or
jge
sbb
jno
sub
sbb
clc
cwtl
in
sub
or
fbstp
cltd
mov
arpl
mov
rcl
pusha
add
inc
add
ja
add
in
test
add
sbb
dec
sub
pop
mov
stos
pushf
loopne
cmpl
int3
gs
ret
imul
add
mov
mov
jne
jp
adc
divb
add
jecxz
jb
add
push
jmp
roll
in
movsb
je
out
mov
lret
cli
scas
xchg
mov
rol
test
outsl
lds
xchg
adc
add
pop
int3
push
add
int
insl
push
and
mov
enter
nop
xor
imulb
je
add
dec
es
lods
add
and
pop
xchg
push
mov
sub
pusha
or
aaa
push
shl
cwtl
mov
or
fstps
inc
xchg
sarb
mov
sbb
stc
mov
push
cmp
inc
add
adc
cltd
jno
add
add
mov
shr
addr16
push
push
and
aas
hlt
dec
pop
sahf
sub
sbb
jl
dec
xor
add
test
test
jg
add
jo
cld
add
mov
jnp
test
jecxz
cli
loopne
add
lea
mov
inc
add
mov
push
pop
push
icebp
or
inc
add
add
neg
arpl
lods
out
jl
scas
jae
cmp
pop
push
subb
ret
dec
test
mov
in
push
cld
clc
sarb
add
pop
aam
mov
add
lock
or
jg
maxps
add
fiaddl
add
notb
daa
dec
add
aaa
and
leave
xchg
test
mov
scas
push
in
mov
xchg
mov
loopne
test
mov
add
mov
ret
jge
cmp
subl
add
xor
jl
adc
xchg
lds
lods
shl
mov
pop
pusha
xchg
sbb
pop
xchg
add
push
lret
pop
mov
add
gs
adc
add
xchg
dec
test
adc
popa
jmp
xchg
pop
in
jge
test
jg
inc
test
fs
xchg
jno
push
lock
std
lods
sbb
add
xorl
adc
jnp
add
add
pop
test
icebp
add
mov
hlt
dec
bound
add
xor
clc
cmp
clc
adc
or
pop
inc
mov
jge
sub
lahf
mov
mov
pop
xor
cmp
ds
push
sub
sahf
shrb
pop
push
lds
int3
push
xchg
sar
add
push
add
inc
and
inc
sub
mov
mov
sub
cmc
xor
pusha
cmp
jp
movsl
adcb
cwtl
stos
cld
mov
add
mov
fs
inc
xchg
adc
cmp
cmp
shlb
cmp
rcrb
add
fcom
test
cmp
sbb
pusha
adc
mov
lods
arpl
jmp
mov
add
sub
add
cltd
mov
into
iret
addr16
movsl
fadds
dec
jne
in
push
sbb
push
fildll
mov
jmp
rorl
dec
in
out
mov
insl
fsubrl
daa
xchg
and
cmpb
in
subb
rorb
fcomp
cmp
mov
outsb
add
in
inc
rolb
mov
out
cmp
call
imul
pop
xchg
xchg
js
mov
shrb
push
dec
jo
sbb
mulps
mov
sbb
test
std
test
adc
pop
xchg
jae
dec
inc
or
pop
cmovne
sub
add
or
stc
or
lock
adc
push
sahf
cmp
cvttps2pi
sbbl
stos
push
xor
clc
push
inc
mov
add
mov
repnz
cld
sub
fisubrl
add
fucomi
xchg
lds
xor
or
add
enter
pop
les
add
fwait
ja
dec
jle
cmp
dec
arpl
mov
fnstenv
cmpsl
add
mov
filds
mov
sbb
push
or
push
sub
std
in
flds
clc
cmp
or
and
leave
pop
int3
push
push
pusha
add
adc
sahf
pop
cld
push
es
pusha
rep
add
out
or
sub
xor
cmp
xor
sbb
pop
jae
loop
sub
dec
lock
aad
add
mov
xor
mov
je
gs
and
rolb
adc
js
cmpsl
scas
in
cvtps2pd
push
nop
lds
arpl
loope
subb
xor
and
inc
movsb
xor
pop
mov
dec
mov
repnz
pusha
cmpb
inc
repz
or
pop
push
cmp
mov
gs
pop
sub
inc
sbb
in
mov
dec
int3
movsb
adc
jae
add
lcall
mov
jg
inc
faddl
dec
push
lea
icebp
adc
rcrb
push
pop
adc
jmp
adc
movsl
jne
loopne
out
add
xor
fld1
add
in
adc
pushf
loopne
insl
inc
adcb
pop
jne
shr
add
cmp
xchg
test
stos
mov
jne
add
ret
loope
in
mov
je
xchg
pmullw
sub
cmp
lahf
jnp
pop
adc
lods
cmp
jae
cwtl
movsb
sti
sbb
in
data16
add
mov
mov
sbb
adc
insb
mov
ret
dec
cli
pop
push
and
mov
popa
jne
fs
cmp
dec
fnsave
jae
push
or
and
inc
add
pop
pop
aam
orb
repz
je
inc
arpl
sbb
dec
mov
adc
inc
enter
xor
movsb
or
clc
sbbl
imul
lcall
push
push
xor
ret
call
aas
cwtl
push
push
outsl
loopne
add
fwait
pop
in
xchg
mov
pusha
adc
nop
scas
sub
push
push
fwait
dec
leave
cmpsb
outsb
xchg
inc
mov
and
push
pop
xchg
outsl
cmp
test
pop
add
mov
xor
mov
fldl
and
xlat
cmpsb
fcomps
inc
test
je
xor
mov
and
adc
mov
sbb
jae
adc
wrmsr
pushf
and
sbb
nop
bound
and
stos
sub
sbb
insb
adc
jge
xchg
arpl
cld
and
out
outsl
mov
mov
mov
xchg
fmuls
add
test
ss
lcall
subb
push
push
xor
pusha
cmp
inc
adc
mov
or
dec
mov
dec
xchg
adc
aam
out
fistl
or
sbb
add
jp
xchg
jne
or
gs
jg
add
fadd
adcb
jae
dec
jmp
out
xchg
shrl
out
scas
jecxz
mov
sbb
ret
inc
xor
cmc
mov
jne
add
les
arpl
mov
cmp
mov
lcall
add
in
mov
cwtl
in
aad
dec
or
xor
push
pop
mov
sarl
sbb
mov
mov
push
mov
adc
rcl
add
cmpsl
daa
add
faddl
and
andb
les
xchg
adc
adc
test
outsl
gs
and
cmp
push
sub
mov
push
add
xchg
dec
xchg
fistpll
add
xor
dec
cmpsl
inc
mov
push
out
add
aaa
mov
shll
js
addb
xchg
mov
dec
or
or
xchg
adc
pop
and
xchg
and
inc
sbb
jns
add
mov
xchg
add
scas
pop
and
shrb
fdivrs
ret
loopne
out
int
shll
pusha
sub
or
mov
les
adc
cmp
pop
and
roll
shll
ret
pop
and
jbe
add
addb
js
adc
add
push
pusha
push
sub
or
sbb
or
addb
and
adc
pop
cmp
cmpsb
add
add
dec
mov
sub
rorb
sub
test
pop
mov
mov
cmp
xchg
sbb
cmp
inc
pop
push
aam
cmp
stos
idivb
add
add
cmp
test
inc
repz
xchg
lods
enter
fistpl
arpl
xchg
dec
sub
sarb
fwait
inc
je
or
pop
subl
add
hlt
cmp
jae
add
dec
movsl
orb
test
pop
mov
inc
pop
dec
mov
aas
rorl
mov
pop
sbb
ret
mov
stos
addr16
and
mov
inc
xchg
shrb
mov
mov
int
fldl
mov
divl
add
fwait
ret
push
jle
or
xorl
adc
inc
or
adc
lahf
jne
std
fcoml
and
fmuls
push
repz
mov
stc
jae
add
ret
or
pop
inc
add
inc
dec
loopne
jecxz
clc
sub
pop
push
mov
add
jl
fiadds
pop
mov
pop
stc
jno
xor
andb
dec
cli
mov
mov
mov
inc
xchg
cmp
xlat
out
leave
fcmovb
xor
enter
adc
iret
mov
push
push
cmp
mov
inc
shr
addb
add
filds
push
xchg
shl
mov
push
sub
mov
sub
xchg
or
lods
adc
xchg
int3
subl
xchg
add
inc
int3
or
push
loope
jmp
inc
mov
aad
inc
mov
add
cmp
mov
push
push
xchg
nop
push
stc
loopne
sti
sub
nop
loopne
mov
inc
or
data16
pop
sbb
ja
xlat
lock
fistps
add
mov
inc
dec
inc
xor
push
inc
mov
add
xchg
xlat
cs
cmp
add
test
adc
pop
jae
xor
add
add
xor
mov
xchg
dec
adc
add
cld
xor
mov
push
sub
stos
dec
mov
mov
mov
jg
in
loope
push
mov
cmc
sub
xor
xor
bound
mov
dec
fistps
ljmp
aad
rcrb
jmp
pop
cmp
sbb
pop
sub
or
add
cmpsb
mov
das
dec
loopne
lcall
popf
inc
dec
sub
insb
popa
xchg
dec
jbe
sbb
sub
daa
jae
add
and
fimull
mov
pushf
test
add
inc
repnz
daa
shr
sub
dec
add
and
fwait
or
xchg
mov
or
pop
pop
mov
inc
ret
jl
mov
cmp
push
and
and
aad
jno
push
insb
lds
push
fwait
push
cmc
adc
sub
add
sub
testl
cwtl
or
and
mov
pop
bound
xor
roll
xor
mov
mov
inc
pop
sbb
mov
pop
push
push
jmp
mov
shll
addb
mov
sbb
pop
mov
sbbb
pop
mov
inc
push
pop
jb
cmpl
jnp
sub
sbb
jns
inc
ficoms
dec
and
dec
call
jno
jo
push
iret
insb
pop
lock
mov
dec
xor
xchg
faddl
sbb
add
push
call
push
notl
roll
jno
sub
mov
jmp
pop
adc
and
jmp
add
aaa
push
icebp
ja
dec
aas
in
cmp
add
stc
test
ja
repnz
or
outsb
sahf
imul
sbb
add
mov
fidivl
xor
inc
pusha
mov
mov
andl
insl
mov
sub
bound
ds
nop
add
xchg
cmp
adc
movsb
sub
adc
xor
ja
sbb
insb
loop
xor
push
add
pop
add
loop
cmp
lods
add
aaa
jbe
sbb
fnsave
mov
call
xchg
xchg
hlt
inc
adc
inc
in
js
jae
xor
jp
movsb
ljmp
popf
jmp
das
add
out
inc
in
jne
loope
xor
negl
add
push
jno
mov
push
dec
xchg
ror
filds
push
jge
out
scas
add
cmp
adc
add
dec
or
and
je
cmpl
dec
add
or
dec
mov
stos
jo
sbb
push
cmp
inc
mov
dec
movsb
lock
daa
jo
lock
and
pop
mov
push
sub
popf
int3
adc
pop
icebp
mul
xor
push
leave
into
sub
add
or
negl
gs
pusha
xor
in
out
fistpl
call
dec
mov
subl
jmp
pop
mov
push
push
xchg
or
add
loope
popf
push
jge
add
jbe
cmp
xchg
dec
add
nop
icebp
cmp
sbb
scas
cmpl
xor
shl
mov
cwtl
in
add
bound
and
lods
cs
lock
add
movsb
out
mov
in
das
cmp
push
push
fsubrl
outsl
mov
out
cli
xchg
push
mov
mov
rolb
mov
inc
fnstenv
lods
pop
sub
jnp
and
fidivrl
dec
insl
push
dec
mov
and
pop
push
imulb
mov
and
lahf
inc
rolb
clc
pop
sub
fisubrs
and
mov
test
mov
jo
clc
or
xor
test
inc
and
cmp
add
jne
push
icebp
enter
lcall
add
dec
pusha
cwtl
push
fnstenv
and
bound
inc
add
mov
iret
arpl
lock
and
shrb
fiaddl
sahf
pop
ret
test
andl
aad
insb
or
jmp
pop
and
jmp
das
or
or
xor
xor
adc
push
or
cs
dec
jo
mov
xchg
fbld
cld
or
mov
mov
adc
sahf
shrl
nop
and
pop
fmull
sti
mov
adc
xchg
int3
roll
or
pop
repnz
jg
imul
mov
jb
popa
sbb
stos
mov
xchg
loop
pop
leave
sbb
js
xor
mov
sub
push
call
or
dec
adc
pop
sarl
push
or
sbb
sub
test
std
push
data16
and
in
testb
push
xchg
dec
xchg
mov
xor
cwtl
in
pusha
pop
xchg
rol
cld
fisubs
orb
jne
repnz
mov
ja
mov
dec
mov
mov
xchg
lcall
push
add
jno
add
push
rcrb
jnp
xchg
test
jno
sti
mov
in
movsl
add
pushf
xlat
mov
dec
or
or
add
pop
pop
and
add
adc
loopne
xor
in
xor
xor
pushf
jge
loopne
mul
cmp
out
xlat
mov
into
pop
or
xor
or
dec
addr16
ja
push
test
movl
and
in
jno
gs
es
mov
cmc
and
mov
mov
inc
lock
or
inc
dec
or
popf
add
mov
ljmp
add
dec
inc
pop
mov
mov
sub
add
clc
ja
xchg
dec
lds
fs
pop
ror
add
push
xor
and
shrb
pop
daa
and
repz
mov
negl
loopne
inc
mov
les
mov
ljmp
xchg
sub
jg
sbb
add
push
into
stc
xor
pop
es
mov
insb
adc
mov
add
rclb
or
dec
iret
and
xor
pop
sbb
dec
add
or
aam
in
scas
out
push
test
or
aad
add
mov
arpl
je
hlt
mov
mov
add
sbb
mov
shll
adc
test
or
jmp
and
rcrl
lahf
dec
add
push
sbb
push
repz
add
xor
adc
add
xchg
lcall
bnd
sbb
js
bnd
xchg
jg
popf
pop
loope
mov
mov
enter
pop
ds
pop
cwtl
adc
push
adcl
mov
dec
sahf
add
je
push
adc
scas
push
xchg
aaa
jle
mov
enter
or
jmp
jl
mov
sub
add
mov
in
cltd
nop
mov
mov
mov
inc
orb
and
inc
decb
mov
jecxz
adc
test
inc
ljmp
int3
loopne
and
loope
sub
inc
sbb
inc
or
ret
cld
add
jge
or
mov
push
in
sub
or
sbb
popa
mov
and
dec
add
sub
xor
inc
adc
flds
dec
adc
or
lods
loopne
add
sub
xchg
inc
subb
call
outsb
push
add
sub
sar
xorl
int3
sbb
fcoml
ja
cli
push
addl
and
inc
add
or
pop
inc
fnstcw
jle
sub
loop
push
movl
subl
rclb
pop
or
mov
out
and
arpl
test
sbb
andb
dec
jmp
sbb
in
lahf
orb
pop
xchg
or
loope
inc
inc
cmc
sub
jb
pop
mov
cs
mov
push
fadd
sbb
pop
dec
sub
dec
ret
inc
fnstcw
subb
rorl
movq
mov
xchg
add
cmp
dec
mov
push
stc
fadds
gs
push
add
jmp
or
lock
jge
inc
xor
jnp
add
sti
cld
rcrb
jg
mov
push
stos
scas
fldcw
mov
lods
push
in
dec
xorb
test
clc
shr
sbb
xchg
inc
or
cld
mov
mov
in
pop
add
xor
fs
or
test
mov
fs
loopne
inc
cmp
lea
icebp
inc
sbb
bound
andb
add
test
jns
rcl
shll
movsb
sbb
push
mov
cmp
rorb
js
mov
addb
and
cmc
mov
mov
js
das
sbb
and
addl
hlt
mov
xchg
cwtl
icebp
jle
lea
add
xlat
adc
jp
xchg
xchg
or
orb
mov
aaa
jo
sbb
sub
lahf
dec
loop
lods
test
js
loopne
mov
push
cltd
in
inc
xchg
xor
dec
push
dec
sbb
subb
rcl
ret
and
or
enter
fisubl
push
adc
nop
push
mov
mov
and
ret
rcrb
addb
add
test
test
dec
add
mov
add
arpl
les
sti
sub
add
add
scas
inc
pop
in
jae
pop
pop
shrb
test
lock
fbld
sbb
add
add
xor
sub
add
aaa
sbb
dec
pusha
mov
int3
jae
mov
repnz
inc
add
jns
xchg
and
add
or
fiadds
lock
add
mov
shll
bound
sub
jmp
push
add
insl
jge
add
lahf
fwait
loop
push
sbb
lcall
or
push
cmp
sbbb
stos
out
gs
mov
push
cs
jle
xor
cli
and
stos
add
fildll
xor
cmc
pop
add
xchg
xchg
aam
enter
test
lods
pop
movsb
pop
xorb
ret
add
dec
inc
rorb
fdivs
sub
aas
fdivp
sub
loopne
add
imul
xchg
stos
popa
std
flds
out
sub
icebp
ja
cwtl
aad
rolb
popf
mov
movsl
mov
pushf
decb
jle
js
add
lods
mov
or
pop
jp
add
leave
inc
or
mov
popl
mov
cwtl
daa
hlt
outsb
add
push
mov
add
rcr
jmp
xor
sub
or
lcall
lret
cwtl
mov
mul
sub
xchg
ss
mov
or
cmp
addb
cmpsl
pop
xchg
outsb
fstpl
pop
dec
adc
and
adc
data16
and
xor
popa
pop
loopne
adc
or
inc
in
cmp
xor
add
mov
fwait
popl
repz
jle,pt
movhps
cmp
add
xchg
cmp
mov
shrl
xor
lds
jae
jecxz
xchg
mov
xchg
add
scas
nop
pop
call
cmp
and
or
ror
cwtl
inc
xor
mov
inc
or
lret
call
xor
js
inc
mov
push
imul
pop
sbb
bound
or
vphaddwq
sbb
cmp
dec
adc
adc
add
cmp
shlb
add
xchg
fs
jne
in
inc
add
sub
and
mov
sbb
cmp
lods
test
incl
jge
sub
push
or
mov
jle
in
add
jbe
loopne
add
cmpsl
and
or
adc
jl
xchg
nop
xchg
and
andl
ret
or
and
sub
pop
loop
push
add
push
add
xorb
add
scas
enter
mov
sub
mov
xor
or
leave
adc
jb
in
fcoml
lcall
data16
dec
mov
inc
add
je
push
add
xchg
jmp
fists
fdiv
mov
imul
jl
daa
cmpsb
fstpt
xor
sub
lods
rolb
cmp
xchg
in
cwtl
or
mov
mov
add
jo
pusha
or
or
icebp
jp
loopne
je
sti
dec
add
lret
fcompl
sbb
add
mov
push
adc
lods
mov
out
fstp
jns
add
in
fwait
mov
add
mov
or
test
add
in
das
jmp
lock
sbb
int
or
aad
cmp
fs
mov
out
cli
and
add
fistps
sub
je
loope
pop
hlt
add
xchg
cld
add
inc
out
pop
fiadds
adc
pop
add
addr16
inc
je
fucomi
add
push
mov
jo
stc
loopne
dec
outsl
xor
mulb
ret
andb
es
loope
dec
add
push
fadd
xchg
shrl
adc
cmp
insl
mov
repz
add
fwait
pop
add
fldcw
imul
stos
mov
or
out
inc
lea
dec
sahf
je
cld
xor
adc
sti
adcl
push
push
enter
popf
or
and
xchg
xchg
sbb
mov
push
pusha
test
xor
test
fbstp
hlt
mov
sbb
mov
cwtl
pusha
test
in
in
add
push
pop
fwait
cmp
mov
cmc
inc
loopne
stc
shrb
add
lahf
cltd
cmp
add
xor
loop
or
push
jecxz
imul
or
push
sahf
add
push
stos
mov
add
lea
pop
mov
pop
push
shl
inc
push
add
push
cmp
repz
jae
idivb
adc
cmc
jbe
popa
jne
les
dec
es
mov
jge
adc
mov
add
data16
enter
imul
add
add
inc
sub
cmpsl
dec
bound
test
jne
sub
mov
xlat
add
test
sbb
mov
out
push
add
adc
xchg
jge
add
aas
out
add
sbb
call
add
xchg
orb
xchg
aaa
cmpsl
popl
pop
movsb
leave
filds
ds
dec
lret
xor
mov
es
sbb
loop
push
adc
add
pop
popf
jg
or
fisttpll
dec
cmc
and
addr16
push
mov
xrstors
sub
testl
fs
in
or
mov
xor
xor
out
push
adc
xchg
clc
mov
jle
or
inc
sbb
movsb
lret
out
test
pusha
sbb
mov
xor
arpl
or
mov
jecxz
ds
pop
dec
shr
pop
cmp
sub
push
jg
cltd
inc
sti
lods
and
sbb
pusha
out
aad
popf
jp
imul
cmp
into
dec
fistps
call
rcr
jae
mov
add
mov
push
loopne
fdivl
cld
movmskps
xchg
and
xlat
xor
stos
and
mov
scas
jle
pop
mov
xor
sub
ljmp
adc
clc
cmc
pop
jae
in
and
push
stc
add
fcoml
popf
incl
sti
and
mov
xchg
and
lret
les
cmp
dec
adc
inc
arpl
or
add
icebp
frstor
mov
mov
test
hlt
out
add
add
imull
push
pop
aam
repz
mov
inc
dec
out
jnp
push
gs
fadds
xlat
pop
lret
push
and
add
movsb
dec
and
push
mov
add
dec
sbb
push
xor
outsb
add
mov
addr16
cmp
add
lcall
add
mov
ss
jg
xchg
dec
mov
pop
xchg
pusha
mov
cmpsl
cmp
sbb
jno
popa
pop
inc
mov
or
jns
pop
push
iret
and
and
cmp
xchg
movsl
sub
ja
jae
add
in
fsubs
iret
sysexit
cmp
faddl
rcl
roll
insb
xchg
inc
lahf
ds
add
test
pop
jbe
addb
cmp
pop
lods
mov
mov
ret
or
ret
adc
add
int3
scas
addr16
fdiv
es
andb
add
xlat
lret
lods
add
lcall
sbb
pop
mov
sub
xchg
inc
cld
jbe
stos
add
or
push
add
push
ficoms
push
xchg
mov
xor
and
std
roll
nop
out
xchg
movsl
ds
test
and
movsb
xor
add
std
mov
jae
cmp
pop
add
aas
imul
pushf
pusha
jge
sbb
and
sbb
mov
aaa
xchg
cmc
cmp
sub
mov
dec
xor
push
cmp
enter
mov
pop
scas
mov
dec
out
aas
fadds
or
sub
mov
test
dec
add
mov
pusha
loope
add
int
mov
add
and
pusha
mov
xor
lds
movsl
add
lock
pop
ret
cli
xchg
or
jge
or
cmpsb
dec
movl
stos
add
mov
mov
xchg
test
mov
and
cs
xchg
add
ret
cmpsl
clc
push
xor
add
jl
ffree
test
loop
xlat
fwait
jge
mov
aaa
lods
dec
cmpsl
call
sahf
adc
outsb
loop
inc
cmp
mov
sbb
xchg
test
dec
psllw
test
shrb
call
add
dec
dec
add
in
cs
test
add
dec
cld
xchg
inc
adc
add
mov
sbb
push
and
out
xor
mov
scas
mov
adc
and
inc
xor
rcrb
pop
enter
les
mov
or
pop
add
and
ja
mov
inc
pusha
je
testl
out
xchg
dec
dec
fwait
mov
in
out
test
pop
jbe
add
mov
cld
cmc
xor
cli
add
out
clc
inc
mov
xor
adc
xor
aas
and
loope
add
dec
mov
jne
scas
call
lds
loope
add
pop
inc
xor
mov
or
mov
scas
in
cli
and
add
and
push
sarb
mov
and
add
lret
pop
push
and
jecxz
xor
lods
cwtl
jno
lret
cmp
jne
adc
out
adc
inc
mov
scas
xor
sub
fimull
je
push
xlat
sub
and
movsl
int3
xchg
mov
cmp
outsb
mov
push
repz
andb
cmp
nop
add
in
in
add
pushf
and
mov
data16
mov
iret
sbb
mov
mov
fsubrl
mov
iret
pop
xlat
add
int
add
adcl
jecxz
int3
xchg
xlat
roll
fbstp
mov
mov
push
in
sub
mov
xchg
mov
loopne
int
add
sub
leave
outsl
clc
jbe
aaa
or
ss
add
ljmp
inc
mov
shll
or
push
mov
sub
sbb
mov
sbb
test
ljmp
add
aad
int3
or
pop
dec
xor
push
add
les
inc
or
and
icebp
pop
in
mov
cmp
mov
iret
sub
add
sbb
mov
adc
jmp
pop
jo
add
lods
push
jae
arpl
pop
or
jns
pusha
popa
and
cmp
out
push
call
xor
cmp
push
int3
add
ffree
sub
repnz
or
and
in
lds
sub
inc
cmp
lock
pop
push
or
insl
mov
ret
scas
hlt
in
add
xor
hlt
or
sbb
and
repz
in
mov
loopne
dec
stos
sbb
in
add
adc
mov
or
mov
xchg
mov
and
lcall
arpl
sbb
vpsllq
adc
jg
push
pop
xor
push
aad
xorl
ficomps
in
cs
leave
in
xlat
cmc
inc
mov
daa
xchg
inc
push
and
aad
inc
arpl
jmp
adc
inc
es
push
and
push
stos
rolb
mov
adc
adc
sbb
mov
or
adc
andb
lods
jl
inc
and
pop
popa
in
cmp
dec
push
je
lock
adc
lds
enter
addr16
mov
sbb
add
or
dec
ficoml
pop
cld
sub
inc
test
adc
xchg
jge
jns
fnstenv
add
andl
int3
jecxz
enter
testb
dec
and
int
loopne
mov
adc
mov
pusha
add
int3
add
pushf
mov
adc
pusha
push
or
jecxz
pop
mov
add
pop
adc
xchg
and
mov
inc
dec
adc
push
push
clc
daa
or
or
and
faddl
mov
push
in
xor
xorb
push
add
lds
jmp
sbb
mov
loope
lds
js
xor
sub
mov
push
ret
popa
jmp
push
fsubl
dec
es
sub
xor
push
pop
stc
mov
arpl
sub
push
aas
sti
movsl
mov
es
push
or
cwtl
mov
add
push
adc
mov
inc
dec
sbb
and
jbe
scas
lret
add
cltd
sti
sub
dec
mov
sbb
pop
and
add
inc
hlt
push
in
cmc
cwtl
pop
jge
jb,pn
lret
pop
mov
subb
and
cmpl
aam
rorb
add
fucomi
push
dec
and
arpl
add
adc
add
stos
insb
push
sar
ja
cmp
adc
adc
pop
add
jbe
mov
add
shl
xor
xor
mov
jae
fcmovnb
bound
scas
jae
add
dec
ds
cmp
or
shlb
mov
bound
inc
sbb
xor
jae
int
loope
jl
mov
mov
ds
pop
es
adc
jo
jecxz
and
inc
cmpb
dec
subl
outsb
je
jae
xchg
stos
mov
fsts
cmp
hlt
cwtl
inc
or
js
mov
sbb
pop
add
andl
lods
sub
adc
pusha
es
lds
cmc
dec
aam
mov
cmp
add
leave
add
mov
adc
jo
and
imul
int3
mov
fldenv
lods
sbb
sbb
mov
sbb
and
and
add
pusha
hlt
xchg
adc
dec
cli
stc
lods
cmp
push
cmc
add
ja
negb
xchg
fs
fnstsw
add
popf
dec
xor
inc
jmp
pop
aad
push
or
mov
mov
dec
or
stos
or
sbb
push
mov
data16
mov
mov
pop
adc
sub
mov
mov
les
shrb
lods
dec
xchg
in
and
cmc
push
in
jp
sbb
dec
cmp
dec
mov
ja
push
lods
jne
xor
pop
shlb
loop
inc
xchg
mov
test
jmp
dec
xor
adc
pop
adc
dec
and
push
jl
and
cmp
and
jmp
adc
mov
pop
nop
mov
dec
xor
mov
pop
mov
je
scas
outsl
mov
lock
std
lahf
push
sub
mov
lret
int
mov
inc
sub
aam
sti
and
aad
pusha
add
or
mov
add
pop
mov
dec
push
repz
adc
pop
je
scas
int3
and
and
dec
cmp
pop
pop
push
pushw
push
cmpsl
push
and
popa
sub
lock
xor
aaa
imul
add
mov
sarb
mov
mov
les
insl
pushf
or
test
mov
xlat
in
arpl
rclb
mov
pop
pop
inc
sbb
icebp
dec
fcoms
and
push
add
inc
repnz
fs
jae
pop
jl
into
mov
add
add
sbb
mov
fcomps
subb
ds
lock
test
into
adc
xchg
das
or
je
inc
push
add
into
add
mov
imul
adc
mov
mov
add
mov
or
push
movsb
cmp
push
loopne
rcrb
pusha
push
je
lock
in
lock
xchg
std
aas
add
push
or
add
nop
scas
int3
pushf
jge
adc
mov
mov
addl
and
add
lea
add
mov
add
int3
stos
fidivrl
jecxz
dec
cmpsl
pop
ret
into
je
lods
or
pop
mov
sub
sbb
hlt
sbb
fiadds
ror
pop
dec
sub
scas
xor
and
getsec
rolb
movsb
xor
cltd
bound
popf
dec
dec
jl
clc
sbb
clc
pop
int3
jns
sbb
jbe
cmpsb
push
fsubs
xchg
push
sbb
cmp
fsubrl
dec
pusha
sub
fcomps
jle
mov
xchg
nop
inc
mov
or
cmc
dec
sub
roll
stos
adcb
sti
mov
dec
xchg
add
sahf
push
ja
int3
and
push
mov
adc
lock
mov
cmp
mov
fiadds
out
push
test
out
out
mov
jl
in
adc
test
lahf
sbb
ds
imul
call
fwait
pop
movsb
inc
fsubs
in
repnz
xor
inc
add
outsb
std
fidivrl
and
cmp
loope
sbb
and
inc
pusha
pop
pop
sub
mov
test
loopne
or
call
int3
sbbl
and
xchg
mov
xor
dec
push
pop
mov
and
fcmovnb
add
inc
push
and
pop
andb
cmp
add
inc
ja
sbbl
sub
push
sar
sbb
sub
mov
mov
aad
aam
cmp
call
add
jb
std
mov
add
leave
aad
mov
test
or
repnz
test
in
lret
lods
add
pushf
cmp
jnp
mull
pusha
adc
push
popf
xchg
push
out
dec
mov
push
decl
add
sbb
push
adc
push
arpl
push
mov
or
shlb
ds
mov
mov
movsb
pop
orb
pushf
rcrl
adc
cmp
jmp
lahf
sbbb
mov
add
pop
push
dec
jne
add
pop
jo
out
pop
add
adc
aad
mov
aam
mov
dec
jmp
jae
enter
mov
cli
lds
fadd
fmull
jo
pop
add
stos
cmpsl
scas
repz
in
out
aam
adc
sbb
dec
bound
jns
sbb
jg
mov
push
in
jge
inc
in
adcl
fistl
addr16
aas
aad
cmc
pop
stos
add
test
pop
imul
loop
xor
push
sbb
and
ja
jne
push
int3
mov
sub
into
pop
enter
jle
outsl
or
and
xor
dec
sbb
in
jbe
add
cmpsl
ljmp
dec
xor
mov
sbb
testb
mov
jmp
jae
addr16
hlt
push
in
adc
int3
cli
daa
imul
mov
inc
shrl
adc
sbb
xchg
stos
ficomps
dec
mov
and
hlt
loopne
in
sbbb
inc
mov
pop
fucomi
ror
enter
test
ljmp
movsb
inc
cwtl
mov
sbb
add
rclb
das
int3
and
add
mov
aam
jno
add
pop
fldt
mov
cld
adc
jl
cmp
or
xlat
add
adc
in
mov
popa
movsl
inc
pop
aam
cmp
xchg
orb
fmull
inc
sbb
adc
icebp
push
adc
call
dec
push
mov
hlt
adc
pusha
in
mov
stc
or
mov
lea
mov
cmp
pop
and
pop
pop
pop
push
cmc
pop
add
push
add
lods
add
jmp
xchg
dec
call
bswap
ds
push
sbb
cmpsb
pop
ret
in
in
js
les
ret
test
mov
push
jge
icebp
js
or
sbb
orb
sub
add
dec
arpl
sbb
xchg
sub
add
jecxz
mov
dec
xor
pusha
vaddpd
inc
add
mov
jecxz
jo
push
add
lds
add
in
adc
push
js
fisubrs
mov
test
sahf
inc
repz
pop
fdivp
sahf
pop
inc
or
subb
mov
mov
and
pop
inc
adc
xchg
or
xor
jge
mov
out
mov
xor
imul
add
das
in
mov
add
adc
pop
sbb
pop
or
and
test
adc
test
mov
push
aaa
sbb
xlat
cmp
push
cwtl
repz
push
dec
in
add
cmp
and
lea
movb
ret
stc
mov
ficomps
loope
les
sbb
xor
jg
test
jno
stc
arpl
mov
add
pop
sub
adc
add
jno
xor
stos
mov
in
sub
mov
lock
cmp
mov
jmp
dec
add
shll
shl
inc
dec
enter
nop
and
jmp
test
cmpsb
add
add
lock
hlt
daa
dec
lea
enter
lock
adc
dec
or
in
insl
add
sahf
and
pusha
push
jne
dec
pushf
cmp
aaa
rolb
xor
leave
xchg
je
and
imul
adc
inc
andb
mov
dec
xchg
xchg
bound
mov
and
mov
sti
mov
cltd
enter
out
and
cmp
rcrl
cmpsl
cwtl
and
jl
xor
mov
push
mov
mov
sub
mov
and
dec
or
das
xorl
and
faddl
dec
out
fidivrl
pop
dec
xchg
mov
roll
or
test
lods
push
loop
xor
loope
add
shll
xchg
stos
xchg
mov
sbb
xchg
icebp
and
loope
fsubs
sbb
jb
mov
mov
jae
ja
mov
inc
mov
or
loopne
and
inc
das
insb
and
mov
jo
push
inc
mov
rcrl
add
and
cmc
ret
stc
xor
fwait
xor
popf
dec
mov
mov
aas
push
sbb
mulb
add
enter
leave
xchg
rclb
cli
adc
sarb
call
push
inc
xor
jo
pop
pop
fsubrs
int3
mov
push
xchg
call
subl
jo
inc
inc
pop
or
ret
adc
pop
pop
shrb
cli
jae
cld
sub
cmc
cltd
lds
or
mov
or
loopne
les
jae
fcmovne
lds
mov
mov
insb
inc
pop
addb
or
mov
fdivrs
hlt
es
inc
movsb
cltd
push
sub
add
inc
mov
daa
adc
adc
fmuls
mov
sbb
popa
aas
jl
mov
cli
inc
cmc
nop
inc
pop
in
fcoml
cmp
add
jecxz
push
aaa
jle
enter
and
insl
cld
pop
ret
sbb
jmp
enter
sbb
add
jl
adc
mov
or
mov
push
cwtl
andb
add
in
dec
or
jns
pusha
arpl
push
or
in
add
stos
clc
in
es
and
cmpsb
movsb
mov
jge
lea
and
inc
jno
mov
pop
mov
or
xchg
repz
mov
sbb
push
shlb
pop
inc
jmp
mov
pop
div
iret
nop
sub
sub
imul
jb
test
and
orl
xchg
pusha
loop
or
cmp
inc
sbb
call
int
rcrb
daa
sub
add
adc
add
lcall
ds
push
or
or
adc
ret
inc
sub
lds
pop
xor
pop
lret
pop
dec
adc
clc
dec
mov
mov
cltd
push
add
add
jns
and
xor
jne
add
icebp
pop
outsl
nop
or
test
xchg
pop
cmp
je
push
or
out
add
lods
dec
sub
jl
popa
popf
inc
add
and
cld
fs
pusha
push
ja
scas
stos
dec
xchg
lods
call
add
enter
ds
cmp
cwtl
mov
js
pusha
push
mov
nop
mov
lods
inc
mov
jns
xchg
xchg
jo
repz
fwait
add
push
pusha
jle
ss
iret
es
sub
add
mov
add
xor
shlb
call
gs
mov
addb
out
cmpsl
sbbl
adc
adcb
xchg
call
mov
add
mov
je
inc
js
mov
push
aas
mov
jp
nop
ljmp
in
lods
add
ficompl
add
rclb
push
pop
filds
fimuls
mov
xor
cwtl
decl
lock
mov
nop
push
enter
mov
in
add
push
cltd
and
push
xchg
and
adc
adcl
cwtl
shrb
or
xor
fdivrs
lcall
call
sub
mov
push
jae
add
movsl
cmp
cs
mov
sub
push
cmpb
cmp
push
xchg
shll
inc
add
or
jno
dec
sbb
mov
push
adc
loope
push
push
jp
add
cltd
inc
sbb
roll
in
pop
out
loopne
stos
jbe
jmp
je
inc
enter
adc
inc
push
dec
in
into
call
mov
dec
sub
xchg
int3
mov
lock
dec
inc
xchg
push
subb
push
sub
ss
mov
ja
push
fwait
jge
sarl
add
xchg
or
and
mov
and
mov
pop
pop
sbb
push
lret
and
push
pop
push
pushf
les
inc
push
or
dec
rcll
ret
lret
cmp
xor
push
push
imul
mov
xchg
rorb
and
stos
sbb
icebp
pop
orb
adc
data16
add
fcmovnbe
pop
movsl
add
push
out
enter
test
adc
mov
aaa
add
rorl
push
xchg
movsb
jp
adc
into
shrl
fildll
sbb
inc
call
jo
xor
adc
faddl
cmp
xor
and
js
lret
push
insb
inc
loopne
lret
push
dec
icebp
jo
sbb
jne
xchg
add
push
pop
mov
out
adc
push
xor
mov
nop
rorb
cmp
test
inc
insb
mov
xor
je
pop
adc
adc
scas
sbb
loopne
pusha
add
and
cmp
or
stos
cmp
mov
shr
fwait
sub
xor
mov
sbb
mov
mov
mov
outsb
sbb
sar
popf
mov
aas
push
adc
cmp
cmp
xlat
dec
add
loope
adc
jns
sbb
imul
mov
lret
pop
pop
je
push
pusha
cld
leave
dec
shrb
push
pop
outsb
add
sahf
mov
add
orl
nop
mov
jb
repnz
xor
add
mov
inc
stos
sti
add
ja
jmp
mov
das
adc
push
add
cmpsl
push
inc
pusha
out
call
in
mov
loope
arpl
mov
mov
cmpb
lods
sbb
dec
mov
sbbb
adc
jnp
test
lock
xchg
fadds
dec
pusha
mov
and
pop
cmc
xchg
lea
jb
repnz
xor
sbb
mov
xlat
sub
pusha
mov
ffreep
das
into
jns
bound
int3
push
and
mov
repz
and
push
xor
mov
pusha
stos
adc
cmp
or
jl
clc
pusha
cwtl
clc
adc
ret
out
cmc
mov
movsb
icebp
pusha
aaa
xor
jecxz
push
jno
adc
fwait
adc
pop
loopne
mov
add
mov
push
andl
cld
pop
inc
adc
in
popf
push
bound
mov
das
mov
rclb
jns
xorb
dec
add
pop
mov
pop
aaa
mov
enter
addb
hlt
in
add
out
mov
popa
faddp
lds
mov
mov
or
add
jo
and
sub
enter
cmp
push
dec
sub
test
aad
enter
out
popf
xlat
in
cmc
xor
mov
sbbb
loop
loopne
xchg
mov
enter
pop
dec
jmp
inc
push
jl
mov
adc
mov
lods
xchg
xor
mov
mov
inc
js
xor
ret
add
pop
xor
test
andb
xor
add
adc
xor
jo
or
das
xchg
and
outsb
inc
lcall
jnp
call
and
push
enter
push
sbb
mov
in
push
mov
js
dec
sbbl
adc
xchg
jl
and
sbbl
les
addr16
xor
xor
sub
sbb
addb
dec
cwtl
mov
jo
cmpb
das
push
xchg
jp
push
push
push
pop
lahf
xor
and
pop
pop
pop
pusha
push
push
mov
sbb
dec
decb
fists
inc
jae
pop
scas
mov
xor
mov
sbb
mov
add
push
popl
add
push
jmp
inc
repz
insb
mov
pop
add
es
call
fbstp
hlt
add
cmp
pushf
mov
add
mov
in
sar
popa
movlps
inc
mov
add
cmp
cmp
mov
xchg
jle
mov
mov
mov
xor
push
pop
adc
add
adc
lret
cmp
push
and
dec
sub
xchg
mov
pop
mov
rcll
dec
jo
pop
test
mov
dec
adc
pop
pop
shr
push
testb
jge
pop
xor
sub
and
mov
insl
add
js
dec
mov
mov
and
cmp
andb
cli
xlat
lret
dec
sub
push
call
fnsave
rcr
sarl
inc
adc
les
test
inc
lods
lret
addl
adc
gs
popa
in
jmp
mov
xchg
inc
xor
pop
cmp
jbe
sbb
pop
jno
dec
mov
sub
mov
mov
and
cmp
dec
add
roll
jns
sub
popf
rorl
push
pop
and
or
push
pushf
sub
popf
cmpsb
adc
sbbl
pop
cmp
xchg
adc
xchg
cmc
sub
jmp
dec
cs
stos
lea
dec
lret
arpl
pop
sub
mov
xchg
test
sbb
add
push
jmp
stos
stc
iret
sub
ljmp
xchg
popa
add
jge
adc
popf
imul
repnz
sbb
sbb
pop
ljmp
mov
adc
std
and
rclb
xor
sbb
jle
aas
pop
mov
xor
incl
lock
mov
movsl
push
push
testb
jo
aam
xchg
fisttpll
add
adc
out
inc
adc
je
or
jle
adc
mov
adc
daa
icebp
mov
mov
add
popf
pop
imul
out
idiv
jecxz
movsb
lock
sbb
pushf
pop
movsl
lret
jnp
jl
inc
add
test
pusha
jo
fucomip
mov
xchg
lcall
fs
pushf
sub
inc
mov
popa
push
hlt
mov
jns
ficomps
pop
jmp
or
mov
ss
cmpsl
push
and
mov
lea
dec
adc
fwait
adc
int
test
loopne
push
jmp
stos
and
scas
and
lcall
nop
jl
loopne
jp
icebp
push
pop
push
fldenv
add
push
pop
pop
nop
aaa
int
mov
add
push
sbb
sbb
push
fiadds
sbb
lret
inc
repnz
rcrb
sub
sahf
adc
insl
add
out
inc
push
pusha
je
mov
push
jmp
adc
lds
popa
or
add
cmp
icebp
jbe
enter
in
lret
cmp
testl
mov
xor
mov
call
jle
popa
and
in
add
sub
pop
xor
jmp
int3
bound
mov
lock
mov
add
or
inc
out
mov
add
call
es
xchg
pushl
test
jecxz
mov
insb
pushf
cli
or
mov
mov
mov
test
or
test
pop
stc
lcall
fidivrl
push
push
cmp
loope
or
cmp
push
hlt
cwtl
fiadds
fistl
rcll
xchg
pusha
sti
loop
pop
sub
mov
adc
ljmp
and
and
push
or
add
pop
icebp
and
dec
lahf
ret
nop
xchg
imul
stos
sahf
push
roll
leave
fcoms
xor
mov
sub
pop
data16
mov
pop
outsb
enter
clc
and
pusha
mov
or
ret
inc
dec
mov
inc
pop
add
pop
sub
es
aas
xor
add
push
add
out
or
xchg
rolb
pop
add
dec
or
aas
lods
ficompl
xchg
pusha
mov
popa
mov
nop
push
pusha
cmp
add
xchg
add
sbb
adc
or
adc
mov
push
dec
xchg
es
cwtl
fiadds
in
cld
xchg
xchg
pushf
dec
sub
inc
loop
call
rcrb
xchg
or
out
pushf
and
les
inc
or
cs
jno
xchg
loope
insb
and
pop
movlps
fwait
inc
ret
int3
inc
fcmovnb
and
jo
mov
or
lock
in
xor
xchg
popf
sbb
lea
out
adc
int3
inc
lock
mov
xchg
scas
xchg
pop
lahf
xchg
add
dec
cmp
dec
add
std
aaa
bound
int
pop
ss
add
inc
sbb
test
iret
mov
sub
or
xchg
sbbl
inc
xor
addb
pop
jbe
mov
dec
jnp
or
pop
pop
out
orb
les
fisubrl
mov
pusha
push
and
sbb
xchg
mov
adcl
jle
insl
lret
or
dec
das
sub
pop
frstor
mov
sbb
ds
stos
add
cwtd
mov
dec
add
scas
mov
fldcw
daa
inc
cltd
ds
popf
nop
mov
enter
xchg
xor
daa
pusha
push
dec
add
pop
aaa
add
inc
mov
mov
popf
xchg
pop
pop
or
je
repz
dec
orb
fstl
leave
dec
jae
xchg
ret
jne
cmp
dec
popa
and
xchg
in
push
mov
sahf
outsl
movsl
add
jp
imul
inc
sbb
pusha
lcall
mov
pop
mov
jns
fwait
mov
jno
sbb
cmp
call
inc
lods
sub
and
xchg
jge
addr16
or
pop
sub
shrl
mov
push
lcall
aaa
out
lcall
jmp
in
xor
xlat
and
inc
push
pop
xchg
divl
repnz
je
jae
jmp
inc
add
mov
dec
mov
mov
cmpsb
lahf
daa
inc
cmp
dec
add
fwait
mov
mov
sub
sub
xchg
stos
ret
mov
nop
cltd
sbb
lcall
mov
aam
push
rorl
push
cs
xchg
addr16
jo
mov
sbb
pop
xor
sbb
addr16
push
pop
jle
jle
xor
adc
xchg
inc
mov
out
sub
xor
pop
sub
or
testl
dec
sbb
es
out
adc
and
xor
popa
rol
adc
aad
leave
xchg
pop
cmp
cmc
inc
daa
nop
push
daa
mov
and
adc
mov
xchg
notl
out
inc
sahf
jmp
rcll
cmp
int
dec
add
adc
add
in
add
andb
jo
dec
add
lods
mov
xor
daa
and
inc
pop
jg
add
cmpsb
cmp
pop
mov
pop
pop
je
fiadds
clc
add
push
add
mov
pop
in
pusha
dec
roll
and
add
jne
popa
movl
inc
inc
push
add
or
inc
popa
or
xlat
xchg
rcl
add
add
cltd
adc
icebp
movl
into
jne
jnp
xchg
jno
ficoml
add
out
loopne
mov
xchg
bound
adc
pop
xor
or
inc
cmp
mov
rorl
add
xchg
ret
and
pop
or
leave
push
inc
loopne
xchg
roll
pop
scas
adc
mov
and
adc
push
push
push
ret
iret
test
mov
and
mov
mov
dec
decb
inc
xchg
jmp
mov
jmp
fmull
nop
inc
mov
jle
sbb
loopne
mov
insb
sub
jns
stc
mov
jbe
icebp
rorl
repnz
outsb
pop
pop
add
xchg
jp
xchg
dec
jmp
aam
stc
dec
push
xorl
out
fcmovu
push
int3
lods
mov
test
js
xor
cwtl
xchg
add
ja
adc
jl
jb
inc
fwait
and
dec
add
stc
or
or
push
xchg
xor
cmp
sub
push
pop
stos
inc
rcll
xlat
jmp
pop
inc
dec
bound
mov
movsl
ja
addl
scas
sti
or
push
jne
into
insl
outsb
shrb
iret
push
or
adc
rclb
inc
je
jg
stos
aas
add
je
cmpsb
bnd
lret
cwtl
loopne
mov
rcrb
aad
fcoms
cmp
mov
and
seto
cmp
test
cli
leave
or
mov
pop
mov
lods
push
jo
repz
and
push
sub
xchg
outsl
es
aaa
mov
incl
cmp
movsb
cs
add
mov
jnp
add
ljmp
subb
xchg
push
insb
movsl
sbb
in
in
loopne
in
rcrb
popa
lods
cmc
call
xor
xor
xor
xor
jge
div
arpl
out
mov
in
ja
sbb
movsl
lock
sub
loop
mov
xchg
lret
pop
mov
shlb
mov
mov
jge
pop
xchg
idivl
adc
lret
lcall
stos
add
test
xor
adc
pop
pop
into
mov
adc
popf
dec
mov
sahf
mov
fwait
cmp
sbb
add
lds
inc
push
mov
movsl
test
mov
imul
xor
lea
inc
addb
lock
aam
xchg
jns
insl
inc
mov
xor
loope
add
add
xchg
mov
adc
sahf
rcr
lcall
int
insl
dec
arpl
mov
andl
loopne
mov
dec
cmpsb
subb
xchg
sub
pop
adc
jecxz
add
sub
sub
sbb
pop
sbb
add
or
repnz
notb
je
or
lret
lock
inc
add
fld
sbb
cmc
xor
mov
rcll
jns
test
dec
fsub
dec
mov
aaa
cmp
jbe
je
xor
iret
negb
out
movsb
nop
mov
icebp
add
xorl
add
cmpsb
movl
jp
push
cltd
add
xchg
cmpsb
mulb
hlt
aaa
shll
inc
sbbl
shl
shrl
and
fldt
xchg
add
jnp
out
jg
mov
mov
or
nop
sub
push
or
mov
cmp
mov
push
push
push
push
push
xor
sub
jbe
adc
nop
divb
loop
pop
repnz
ret
push
loopne
fisttps
cmp
add
shll
es
add
movb
xchg
mov
test
mov
adc
mov
int
ret
bound
xor
add
xchg
cmp
fcoml
pop
and
and
inc
and
aam
sbb
xchg
insb
bound
dec
mov
andb
mov
pop
adc
cwtl
pop
mov
adc
jnp
stc
je
js
add
out
ljmp
out
add
les
stc
mov
in
jns
adc
xchg
test
int
add
loope
adc
jmp
shlb
add
or
adc
add
jmp
mov
add
mov
inc
sbbl
aad
in
mov
mov
sahf
je
loopne
xor
fsubrl
pop
xchg
std
xor
addb
loope
mov
das
adc
je
inc
jo
jae
aad
subb
and
xchg
xor
int3
mov
adc
nop
push
pusha
jnp
sbb
push
adc
and
mov
nop
cmpb
add
rolb
mov
sbb
push
cld
pop
out
mov
subb
das
in
insl
add
pop
ret
daa
fimuls
inc
xor
jo
outsl
add
imul
and
mov
inc
pop
add
mov
js
pushf
or
push
jo
mov
call
xor
repnz
mov
inc
pop
leave
jge
adc
dec
push
pop
jne
adc
pop
scas
dec
sub
adcb
mov
add
mov
and
add
mov
sbb
cld
push
cli
fs
test
rolb
xchg
add
inc
add
and
pop
fistpl
mov
aad
xor
and
add
mov
dec
lcall
xor
dec
mov
shl
xor
hlt
fs
mov
inc
mov
push
ja
cmpsb
fidivs
xlat
push
jle
mov
cli
mov
fsubr
test
xor
jg
mov
or
into
pop
mov
subb
cmpsl
dec
es
decb
mov
jge
das
pop
pop
add
add
pop
loopne
lret
adc
je
xchg
push
inc
push
movsb
mov
pop
ret
push
stc
add
scas
inc
sahf
jb
xchg
or
dec
inc
inc
rcrb
adc
cmpsb
insb
pop
les
mov
cmp
pop
pusha
call
ret
or
pop
jbe
es
cwtl
cmp
sub
inc
in
dec
mov
lahf
mov
in
das
dec
or
je
les
push
add
adc
dec
xor
lock
sahf
ret
push
cmpsb
adc
mov
loopne
mov
xchg
mov
shrl
scas
mov
inc
sahf
inc
dec
mov
loopne
rolb
jns
sub
adc
dec
dec
adc
xor
sbb
mov
repnz
dec
shlb
movl
roll
dec
mov
rcrb
adc
adc
jae
mov
inc
aaa
cwtl
arpl
stc
sub
movsl
in
in
icebp
imul
sbb
cltd
inc
mov
repnz
jae
jo
inc
daa
sub
pop
subl
mov
jle
add
xor
sahf
sub
fmull
push
imull
mov
in
add
arpl
stos
mov
scas
jno
add
daa
xchg
mov
mov
push
cmp
stc
lea
popa
sub
jge
sbb
xchg
xorb
xchg
sbb
lods
lock
flds
dec
in
pusha
mov
mulb
rolb
mov
push
inc
jmp
xor
shrl
dec
push
rclb
test
or
fldt
inc
jmp
mov
pop
jle
or
es
repnz
pusha
icebp
out
jg
xlat
mov
nop
push
shl
or
repz
push
out
mov
mov
lds
mov
pop
inc
push
push
imul
xchg
mov
rorb
int
xchg
adc
pop
inc
or
push
in
mov
mov
scas
mov
cmc
dec
pop
in
loopne
sbb
xchg
inc
and
or
mov
movsl
push
filds
pusha
push
shl
xor
push
pop
pop
xchg
leave
dec
in
lods
lea
mov
rcr
xchg
dec
adc
mov
or
jns
adc
push
dec
test
shrb
mov
pop
push
faddp
in
dec
mov
lods
and
push
sbb
test
cwtl
pop
adc
inc
loope
pop
rcrl
adc
es
push
mov
adc
shlb
or
xchg
mov
das
xchg
insl
aas
add
cmp
leave
adc
push
push
mov
or
adc
adc
sbb
cmp
add
mov
shll
push
add
cmp
and
pop
xchg
jns
sti
out
cmpb
nop
pop
and
adc
jmp
outsb
cs
jne
xor
negb
sub
push
cmp
stos
test
inc
lea
outsb
and
mov
daa
mov
dec
push
jge
mov
push
cmp
popa
fldl2e
mull
mov
dec
nop
js
jb
into
enter
cwtl
pop
add
cmp
mov
pop
icebp
int3
cld
pop
mov
push
pop
mov
shr
mov
sub
popa
mov
or
shrb
ficoms
popf
ja
dec
xorb
xchg
dec
andb
mov
push
inc
fsub
jmp
outsb
sti
add
sub
ss
cwtl
mov
out
jo
jne
adc
mov
add
out
shll
jno
in
pop
add
adcb
sub
das
add
mov
iret
mov
pusha
out
add
pop
mov
xchg
mov
jae
jb
cmpsb
or
push
enter
push
jbe
xchg
pop
nop
inc
cmp
repz
adc
cmc
jo
mov
js
or
jb
push
rclb
aam
add
stc
xor
in
pop
sub
add
jae
popf
adc
pop
jnp
or
adc
mov
xor
add
jnp
and
cwtl
sbb
sbb
pop
mulb
xor
jns
sbb
not
mov
pop
fwait
mov
movzwl
test
dec
sbb
xchg
or
and
lret
mov
cli
and
popa
mov
subb
inc
jle
push
inc
repz
shlb
sub
enter
outsb
dec
daa
adc
iret
or
aas
adcb
out
mov
adc
add
subl
adcl
mov
push
and
pop
inc
setge
imul
stos
add
xchg
imul
pusha
mov
addl
stc
pop
add
inc
nop
mov
insb
adc
repz
add
jge
adc
in
jae
cmp
js
int3
push
scas
jne
cmp
push
cmp
mov
in
pop
and
icebp
pop
xor
push
dec
in
dec
or
or
xlat
fs
outsb
jle
dec
xchg
scas
rclb
js
dec
pop
fisttpl
test
cmpb
or
mov
xor
sub
add
cmpsb
mov
dec
je
adc
sbb
mov
dec
outsl
scas
mov
add
addb
push
mov
fidivs
dec
lcall
pop
and
cwtl
mov
movsl
daa
pop
arpl
adc
jle
pop
xchg
inc
mov
pop
jne
dec
test
pop
jg
adc
or
testl
and
sub
nop
outsb
adc
mov
sub
mov
mov
nop
cltd
jns
add
addr16
jecxz
sub
fimuls
adc
or
sbb
nop
adcb
mov
and
jg
cmp
aam
out
pop
inc
jne
or
setle
add
aad
popa
int3
idiv
push
out
xor
sar
mov
and
out
daa
movsl
inc
add
sub
pop
mov
and
notl
pop
and
or
xor
shrl
pop
hlt
jl
cs
pop
cmp
mov
repz
movsl
iret
add
jmp
in
pop
and
add
sub
xor
cwtl
lods
or
xchg
push
push
out
mov
pusha
call
jl
pusha
or
fdivrs
jo
add
dec
pop
mov
popa
pop
push
push
xchg
mov
ja
bound
mov
loop
lcall
inc
xchg
cwtl
add
ljmp
out
dec
cltd
lods
push
negl
test
stos
or
andb
push
andl
popf
mov
fsincos
jle
sbb
out
pop
movsl
xlat
sbb
mov
mov
cs
cmp
mov
aam
xor
faddl
mov
ljmp
adc
mov
mov
out
mov
jmp
push
add
daa
cmp
lret
out
pop
cmp
enter
dec
mov
xchg
outsb
pop
dec
mov
gs
and
pop
adc
test
rol
les
dec
lock
pop
and
jbe
jnp
mov
sbb
pusha
jmp
jne
inc
push
pop
xchg
sbb
out
xor
mov
addr16
mov
sbb
das
mov
data16
mov
adc
outsl
lods
add
mov
aas
cld
jle
pop
mov
das
int
sub
aaa
adc
xchg
rorl
mov
sbb
dec
inc
or
arpl
jnp
add
insb
mov
je
pop
outsl
shlb
mov
popf
xchg
sub
and
rorb
jne
or
lods
dec
rolb
mov
out
xor
pop
dec
push
loop
add
lds
pop
pop
enter
ret
testl
mov
add
sub
movsb
ljmp
pop
jl
add
or
sub
sbb
or
mov
hlt
push
mov
cmp
test
xor
push
div
xor
testl
pusha
mov
push
in
movsb
push
xor
inc
cmpsl
ss
fwait
loopne
repz
arpl
int
xor
lea
add
cmp
out
sub
or
lahf
mov
test
lods
and
loop
loopne
sub
xchg
jne
jo
jp
mov
cmp
mov
sbb
frstor
es
push
je
push
pusha
movsb
fwait
lock
cwtl
add
nop
pop
push
les
mov
xor
pop
popa
pop
stc
sbb
mov
mov
mov
or
fcoml
sbb
dec
pop
pusha
out
movsl
cwtl
mov
popa
jmp
fcompl
adc
lret
sbb
dec
inc
xor
add
mov
add
cmp
dec
jo
push
cmp
test
add
data16
es
pop
mov
lea
test
les
sub
xlat
jnp
pop
add
stc
dec
lock
pop
leave
je
and
cmp
adc
push
bound
or
push
call
rclb
mov
jmp
sub
loope
lea
push
mov
cmp
jl
mov
mov
and
inc
fwait
add
test
je
lret
and
mov
je
cld
pop
pop
outsb
add
and
jecxz
adc
add
mov
mov
pop
pushf
lea
push
add
or
mov
addr16
pop
sub
hlt
and
cmc
xchg
jnp
test
jmp
jo
lea
mov
adc
xchg
bound
aad
cmpb
pop
mov
aaa
bound
arpl
fcmovnbe
push
xchg
pusha
add
adc
push
xor
lock
mov
cmp
sahf
xadd
or
dec
cmpsl
push
cmp
or
aam
pop
popf
dec
cmp
add
outsl
add
add
or
push
pop
pop
roll
fwait
sbb
inc
cmp
dec
cli
pop
jp
adcb
or
add
jnp
pop
pop
and
jg
fstps
push
notl
test
outsl
loopne
movsb
or
test
adc
ljmp
rcl
sub
leave
dec
pop
lock
mov
sub
add
movsb
in
lds
sub
adc
and
adc
loop
cld
loope
add
mov
mov
enter
test
daa
mov
in
mov
dec
jge
popf
in
xchg
das
rolb
adc
jmp
pop
ja
outsl
jecxz
mov
hlt
jae
ljmp
test
mov
loop
jne
cmc
mov
lods
and
mulb
mov
mov
stc
test
notl
push
add
out
in
add
and
and
loopne
adc
push
stc
push
ds
sub
pushf
xchg
addb
mov
add
cmp
jo
dec
cmp
mov
pop
xchg
add
popl
xchg
jnp
pushf
or
popf
pop
xchg
and
ret
and
icebp
pop
adc
xor
mov
push
push
or
push
mulb
adc
adc
adc
negb
push
pop
leave
jne
pop
aam
add
out
cli
or
dec
fnsave
jo
inc
add
jp
subb
lahf
fs
jmp
xor
pusha
xor
mov
lods
add
push
fisttpll
mov
faddl
enter
push
es
pop
mov
imul
sub
shl
xchg
rcrb
sub
push
rclb
pop
push
push
test
xchg
call
andb
pop
push
fiadds
jno
arpl
xchg
push
cwtl
test
add
push
xchg
sbb
add
push
adc
mov
push
xchg
ljmp
mov
push
inc
into
push
pop
popa
lds
pop
inc
std
leave
inc
add
dec
outsl
and
pop
xchg
insl
xor
adc
nop
and
pop
and
fdecstp
std
dec
and
jno
dec
inc
adc
mov
adc
dec
test
je
shl
cmp
fsubrp
mov
sahf
mov
mov
push
dec
add
aaa
nop
inc
add
ficoms
ja
leave
loop
push
jmp
stc
in
mov
add
into
pop
adc
jl
adc
add
dec
test
jge
and
push
mov
mov
pop
push
cld
inc
jno
adc
mov
data16
daa
int
stos
cmc
fstps
cmpsl
pop
in
add
pop
push
dec
jns
nop
push
push
cmp
out
stc
int
enter
push
lock
lahf
nop
fcmovne
fwait
xchg
sahf
xor
or
xorb
adc
push
jno
inc
or
adc
jmp
jl
lods
movsb
xor
repz
icebp
adc
das
dec
mov
cmp
mov
mov
or
inc
rclb
enter
daa
or
ds
sub
add
mov
cmp
lds
or
pop
test
lock
int
ret
popa
push
or
imul
pop
xlat
or
sub
test
rorl
push
stc
mov
scas
or
pop
cmovne
or
lret
xor
jp
mov
jecxz
jge
push
out
dec
lret
loope
iret
adc
jne
pop
in
push
xor
out
sahf
pop
add
xlat
jo
dec
push
adc
insb
pop
xor
mov
push
add
sbb
add
mov
jns
testb
and
sbb
mov
adc
adc
test
rorb
cmp
dec
xchg
adc
imul
xchg
push
out
test
pop
je
es
sub
xchg
pop
cmp
add
in
xor
add
pop
loop
adc
or
es
call
shll
pop
xor
sub
jp
xor
mov
subb
inc
pop
nop
dec
mov
cmpsb
jnp
add
push
pop
dec
popa
cmp
or
jge
mov
push
daa
sbb
push
out
jo
add
xchg
or
sbb
and
jns
daa
push
bound
push
dec
jmp
add
test
cmc
mov
mov
popf
sbb
and
push
adc
or
pop
adc
popa
pusha
stos
js
rol
pop
mov
mov
hlt
push
hlt
sub
iret
stc
add
and
xor
sub
jno
sbb
add
sbb
push
xchg
mov
xchg
mov
loopne
int
mov
imul
pop
es
pop
push
mov
add
lea
adc
mov
mov
iret
add
push
inc
sub
les
xchg
push
mov
mov
adc
sub
popf
icebp
cltd
nop
inc
dec
leave
pop
cmpsl
dec
pop
mov
mov
cltd
inc
sub
xor
mov
gs
popaw
es
out
rcrl
jmp
nop
sub
mul
add
nop
es
testb
push
fs
sbb
outsb
lcall
mov
imul
negb
sarl
push
mov
sub
mov
push
mov
shll
data16
pusha
add
inc
sbb
adc
enter
pop
outsb
loop
xchg
sahf
and
pop
jns
cmp
or
scas
jp
add
iret
xchg
push
mov
xlat
add
mov
mov
mov
orl
push
mov
mov
mov
movl
imul
push
sahf
pop
sbb
add
insl
clc
inc
jbe
mov
adc
xchg
js
das
leave
dec
cmp
pop
mov
lcall
or
xchg
out
daa
in
int
shl
mov
jnp
xor
pop
dec
sbb
pop
mov
cmp
mov
add
out
fldl
ss
cmp
mov
sahf
in
cmp
movsl
add
notb
clc
xor
fwait
jmp
je
mov
inc
adc
cmp
add
in
stc
mov
daa
test
pop
add
mov
test
pusha
cwtl
lods
lods
mov
pop
leave
cmc
stos
xor
mov
xchg
push
inc
movzbl
xchg
add
std
arpl
mov
cmpsb
and
push
dec
aam
jbe
push
adc
sbbb
or
add
pop
js
mov
sub
jnp
pop
mov
fldenv
icebp
cli
pop
dec
repz
add
repz
pop
sbbb
in
cmpsb
sub
fiadds
mov
mov
enter
jmp
popa
jne
inc
jb
mov
adc
and
add
fbld
add
jmp
std
sub
add
test
xor
ljmp
adc
xor
cmp
pop
filds
test
jbe
rolb
adc
in
and
pop
outsb
cmp
push
xchg
or
xchg
fcom
mov
fs
loope
jno
pushf
popa
sub
xor
jnp
pushf
xor
add
movsl
jle
or
xor
je
cmp
mov
int3
or
cmp
fcoml
xchg
iret
jne
sbb
mov
bound
fadds
inc
clc
lea
sub
inc
jge
rolb
jns
lds
insb
mov
mov
jmp
sub
pushf
cmpsl
mov
xor
call
mov
add
mov
inc
jno
insb
dec
add
roll
xchg
pop
pop
movsl
stc
jle
ja
adcl
in
add
jb
cmc
lds
xchg
dec
mov
pop
xchg
add
add
add
push
push
out
mov
std
and
pop
pop
int3
repnz
mov
inc
sti
aam
xor
mov
movsb
popl
cmp
add
inc
push
dec
adc
add
testl
and
jno
lcall
xor
ljmp
cmpsb
test
pop
adc
mov
inc
testb
or
loope
icebp
inc
ss
insl
or
mov
pop
sbb
adc
sub
testl
add
leave
sub
cmpsl
add
and
mov
out
xor
jg
sahf
aam
sbb
add
out
mov
xor
adc
pop
dec
mov
xor
inc
sti
push
and
add
inc
fst
sub
std
or
nop
xchg
or
add
cli
jmp
xlat
xor
or
dec
pop
nop
adc
add
idivb
movb
mov
sub
dec
inc
and
mov
push
adc
jne
and
jo,pt
mov
imul
jo
cwtl
add
mov
or
pusha
adc
or
and
testb
xor
add
fisttps
or
mov
jnp
mov
popa
sarb
dec
jo
repnz
and
das
mov
or
ret
or
icebp
adc
add
sbb
fimull
mov
and
int
push
orb
inc
add
sub
aaa
add
andb
or
lods
sbb
popa
shlb
aaa
mov
mov
mov
imul
push
lock
xchg
cmp
mov
sub
or
cmp
sub
int
sarb
jmp
test
inc
mov
adc
loop
push
pop
outsl
mov
push
sahf
mov
jge
push
pop
dec
or
push
stc
hlt
mov
icebp
mov
sub
cmp
push
jno
jne
xor
or
inc
and
das
or
pop
sbbb
xor
shlb
or
mov
xchg
or
sub
sub
xchg
xorb
fisubrs
cmp
cld
mov
pop
adc
push
or
mov
xor
mov
dec
push
xor
cmc
popa
rcll
imul
sbb
xchg
mov
jmp
add
or
test
pop
jb
push
xor
outsb
cmp
sub
xchg
dec
mov
mov
inc
sub
and
xchg
inc
and
stos
addb
scas
or
sbb
pusha
imul
cli
adc
mov
jnp
push
mov
dec
test
jp
add
mov
les
test
push
lcall
and
cli
add
mov
jp
add
cmp
pop
add
push
jae
mov
cltd
inc
cmp
add
repnz
imul
popa
call
add
push
xor
dec
cli
and
dec
out
sub
ja
sbb
sahf
js
nop
adc
repnz
jb
dec
cmc
loopne
mov
jg
xor
dec
outsb
mov
jo
xor
mov
test
sbb
push
dec
orps
sbb
pop
or
xorl
mov
test
mov
xlat
or
mov
mov
repz
jno
mulb
push
mov
aad
dec
or
sub
sahf
dec
cmpsb
lret
push
mov
jmp
test
cmp
fs
ljmp
mov
cld
out
mov
movsb
adc
in
pusha
jns
jbe
lret
and
xchg
adc
sub
fildl
pop
aad
add
aam
lds
push
movsl
bound
jbe
hlt
add
jno
mov
mov
mov
popf
test
add
inc
pop
push
neg
inc
mov
push
ja
and
dec
stos
add
mov
jne
fsubrp
cmp
adcl
pop
scas
enter
add
movsl
and
dec
dec
pusha
mov
push
jne
or
popf
sbb
mov
and
push
add
sti
inc
pop
mov
repnz
in
mov
adcb
dec
pop
scas
fwait
mov
gs
or
pusha
unpcklps
stc
mov
popa
mov
pop
lcall
mov
loopne
xchg
cwtl
arpl
pop
dec
daa
jne
popa
inc
or
cwtl
xchg
jb
push
mov
iret
pop
nop
imul
leave
xchg
push
xor
sub
push
sbb
divb
inc
xor
dec
loop
add
xor
int3
loopne
cmp
nop
js
push
mov
adc
adcb
and
mov
fwait
outsb
test
jl
js
int3
jg
out
push
mov
ret
add
and
or
jno
fcmovbe
pop
push
testl
or
mov
sbb
cmpsl
jb
rolb
bound
sub
test
call
in
outsl
pop
adc
loopne
sub
mov
pop
mov
lds
mov
pushf
xchg
inc
bound
cltd
mov
lcall
inc
cs
nop
pop
or
add
je
mov
mov
adc
mov
jge
out
dec
pop
daa
jne
fdivp
cmp
inc
sbb
sahf
fcoml
fisubl
or
aas
jge
imul
fisubrs
cld
test
add
or
sbb
cmp
sbb
pop
xor
mull
shrb
push
insl
sbb
out
dec
xchg
popl
and
add
jmp
mov
lret
cmc
cmpsb
jo
addl
pop
cmp
mov
add
sbb
cmp
sarb
cld
sub
call
xor
sar
pop
fcoml
js
mov
out
test
clc
push
testb
sub
adc
sub
movl
mov
adcb
xor
pop
dec
push
loope
js
fcomps
mov
xchg
jp
sub
js
or
xor
and
or
ror
mov
cmp
xchg
or
and
mov
mov
inc
loopne
in
xchg
and
aaa
js
mov
sbb
inc
push
sub
and
test
lcall
dec
mov
loope
rcrl
jmp
stc
sub
sti
jno
loopne
imulb
add
sahf
faddl
jnp
mov
xor
add
jecxz
mov
push
and
nop
jb
dec
lsl
pop
mov
mov
lds
sub
xchg
sbb
or
jmp
mov
cmp
mov
cmp
add
cmp
mov
daa
stc
clc
inc
cmp
lahf
dec
and
sub
shll
andb
test
jns
int3
lds
sub
xchg
pop
dec
fsts
out
pusha
dec
sbb
sub
loopne
or
jb
mov
mov
and
jle
cmpsb
push
daa
dec
sbb
sbb
sbb
push
mov
pop
mov
sub
and
jmp
jbe
roll
aaa
bound
sbb
adc
loope
repnz
add
push
punpckldq
incb
outsl
daa
lret
adc
test
jae
sub
pop
mov
aad
lds
jecxz
test
scas
inc
mov
sub
lds
outsb
ja
pushl
adc
imul
sti
pop
shlb
jbe
hlt
jae,pn
lds
xor
repz
and
and
xchg
rcr
loope
adc
mov
loop
pop
cli
cmp
cmp
inc
cmp
sub
cmp
cmc
xor
mov
dec
fsts
scas
adcb
dec
out
mov
mov
daa
test
cld
sub
pushf
cltd
lods
cmp
cld
dec
ror
es
and
js
mov
mov
imul
mov
adc
scas
pusha
int
sar
punpcklbw
sub
mov
jge
imul
outsl
nop
inc
fiaddl
mov
push
xor
jbe
mov
lahf
mov
sbbb
add
push
xor
cltd
inc
adc
test
leave
mov
or
xchg
adc
mov
jno
add
mov
sub
or
repnz
shll
sbb
mov
xchg
pop
push
add
push
pop
pop
shl
in
jecxz
lock
daa
mov
jbe
loopne
aad
popa
xchg
aaa
pop
add
fisttpll
cmc
pusha
mov
dec
push
fmull
repz
jmp
mov
push
inc
enter
mov
or
daa
push
xchg
hlt
or
call
xchg
andl
loope
mov
push
jnp
lcall
pop
ficompl
out
pop
je
movsb
imul
cmp
cmp
or
sbb
roll
pop
sbb
jge
add
mov
pushf
cwtl
and
jne
pusha
mov
popf
cltd
stc
data16
fnsave
or
push
add
mov
xchg
or
and
inc
or
cwtl
sub
and
fwait
adc
mov
dec
cmp
sbb
cmpsl
sbb
push
mov
iret
cmpb
imul
or
sub
out
mov
je
push
mov
pop
call
scas
mov
fwait
adc
lds
lods
xchg
jne
add
dec
call
sarb
stos
add
inc
dec
lea
imul
cmc
inc
add
and
pop
out
mov
hlt
sub
lret
insb
fldenv
add
addr16
lods
out
call
fsub
inc
adc
or
sbb
or
call
cmpsl
fiadds
or
sbb
inc
mov
scas
shr
inc
add
mov
call
bound
xchg
rcr
jmp
lock
lods
addl
call
cmpsl
test
jno
add
ljmp
or
inc
cld
mov
jb
and
test
cmp
push
test
mov
jo
call
gs
popf
push
jecxz
jae
pushf
and
insb
fdivrl
push
leave
or
loop
sub
rclb
add
test
rolb
dec
and
push
add
iret
add
inc
out
xchg
adc
imul
nop
imul
lret
mov
inc
push
lea
add
xor
scas
cmp
xchg
mov
call
add
adc
mov
add
js
xchg
or
je
sub
nop
inc
and
dec
sub
dec
inc
std
inc
out
add
test
call
test
xor
aaa
fs
add
stos
add
mov
aaa
add
xor
mov
jne
add
lods
mov
mov
or
fcoms
das
mov
imul
pop
xor
nop
adc
add
push
jnp
jle
rorb
mov
adc
test
push
mov
push
push
sub
sti
pushf
dec
pop
mov
cmc
xchg
adc
push
and
fcoml
leave
and
dec
subb
clc
repnz
inc
add
push
mov
push
xchg
outsl
fdivl
stc
adc
std
cmp
mov
add
mov
nop
and
mov
lds
inc
add
aad
sbb
jp
leave
cmp
int
shlb
hlt
cli
dec
mov
add
jmp
sahf
dec
adc
or
push
xchg
test
mov
data16
adc
rclb
xor
push
test
in
xchg
lcall
mov
xchg
movsl
inc
xor
mov
in
add
mov
test
dec
xor
aaa
add
inc
add
int
mov
mov
arpl
sub
into
mov
mov
mov
xchg
inc
stos
mov
sub
push
or
xor
add
test
cmp
je
mov
loope
inc
scas
fcomi
xchg
out
add
rcll
dec
lock
jg
pop
aam
faddl
test
xor
je
inc
mov
mov
inc
pop
mov
in
pop
div
add
push
out
jecxz
push
dec
dec
mov
xor
jmp
outsb
popf
daa
in
add
fadd
jnp
clc
pop
or
mov
shr
into
cs
pushf
sbb
xchg
add
pop
lock
stc
loope
ljmp
sub
fcmove
sbb
dec
cltd
icebp
or
dec
mov
add
jno
push
int
in
mov
negb
jb
sub
repz
aaa
rcrl
loope,pn
sub
sbb
or
rcrl
lahf
mov
push
cmp
mov
daa
mov
aaa
inc
add
or
jg
sbb
xchg
loope
xchg
sub
inc
cmc
or
sub
inc
in
adc
lcall
adc
js
mov
or
xor
cmc
rorl
ret
jo
data16
push
call
cld
mov
mov
out
inc
cmp
and
and
pop
in
mov
xchg
sti
repz
xor
mov
rcl
lock
add
jno
lret
jne
mov
push
pusha
cmc
xor
arpl
loope
outsl
bound
movsl
loope
mov
adc
rol
jp
push
fwait
or
lret
mov
sbb
mov
loope
je
adc
mov
xor
push
mov
mov
divl
insb
pop
mov
cmp
fcmovne
clc
enter
and
sbb
mov
aam
dec
bound
loop
dec
xor
jmp
dec
test
sub
cmpsl
insb
repnz
dec
popa
pop
mov
push
xor
mov
mov
dec
jmp
push
pop
pop
fldcw
shlb
and
jo
sbb
sbb
jns
sub
pop
or
lret
mov
inc
and
and
loope
and
dec
sbb
scas
adc
sbb
adc
mov
pop
mov
add
test
mov
lods
or
push
adc
std
ja
mov
in
inc
pop
and
dec
std
mov
mov
stc
fnstcw
je
mov
or
ret
mov
push
add
jb
stos
pop
outsl
int3
cmp
inc
push
or
push
fcompl
out
xor
outsb
dec
in
decl
xchg
dec
lods
imul
xor
sub
inc
and
cs
pop
pop
mov
or
in
je
inc
loope
cld
xchg
inc
jnp
add
das
or
shr
add
in
dec
roll
cmpb
adc
test
dec
movsl
cmpsl
aas
and
jbe
dec
jno
add
pop
ss
add
mov
je
or
mov
add
cmpsl
xchg
dec
fcomi
ret
sub
mov
pop
push
adc
pop
mov
aaa
into
mov
add
mov
adc
dec
add
ja
mov
gs
pusha
dec
pushf
dec
xchg
pop
test
adc
sbb
add
cmp
out
mov
cmp
subb
mov
mov
or
cmp
orb
mov
lret
add
loopne
fsubrl
ror
mov
popa
adc
or
ja
and
jne
in
sub
mov
cld
call
dec
adc
lods
or
lahf
add
out
dec
sub
pusha
adc
pop
xor
popa
aam
cmpb
fs
xor
and
add
cmp
lods
xor
rol
rolb
jmp
ds
mov
mov
mov
or
hlt
pushf
pop
loop
les
movsb
fldt
popa
add
es
dec
cmc
adc
pop
mov
pop
mov
sbb
adc
imul
test
nop
test
popa
mov
xor
push
cli
ret
aaa
add
or
pop
out
outsb
adc
push
lds
lods
adc
cs
movsb
or
daa
das
roll
jo
inc
inc
adc
stc
jmp
push
inc
add
faddl
hlt
jns
fs
ja
sti
aam
add
dec
add
call
pop
dec
dec
adc
adc
ds
clc
insl
push
sub
mov
cmp
sbb
icebp
sbb
adc
lcall
mov
mov
mul
push
mov
xor
push
dec
or
filds
call
and
fwait
mov
clc
or
mov
in
xor
sub
xor
lret
ret
and
push
popa
mov
cs
das
insl
sub
je
jmp
add
dec
hlt
push
popf
inc
roll
es
adc
mov
sbb
push
xorl
mov
sbbb
push
ljmp
xchg
adc
loopne
femms
push
xor
xorb
in
mov
jmp
pop
or
popf
sbb
test
outsb
sub
fiadds
mov
sbb
call
ja
mov
mov
sbb
lahf
movsl
dec
in
push
lods
jae
jo
push
add
out
mov
xor
sti
femms
push
scas
or
and
dec
pop
jns
mov
lds
inc
mov
pop
adc
cltd
pop
push
testl
adc
ret
add
or
adc
push
adc
mov
cmpl
add
pop
orb
xor
sbb
inc
xchg
mov
pop
xchg
xchg
aaa
sub
lcall
inc
add
push
pop
pop
jecxz
dec
out
jl
mov
daa
negl
mov
inc
dec
lcall
sub
and
or
sub
and
popa
gs
xchg
push
inc
pop
xorb
faddp
mov
add
stos
inc
popa
pop
cli
daa
aad
dec
xchg
pop
lcall
fwait
inc
fstps
xchg
mov
mov
add
push
cmc
fidivrl
sahf
fs
orl
sub
mov
cmc
xchg
das
loopne
insl
inc
das
pop
test
rcrl
xchg
xor
scas
sub
mov
aad
dec
addl
jle
inc
outsl
shll
push
cmpsl
loopne
xor
or
inc
psrld
call
or
nop
cmpsl
out
fnsave
loopne
fs
loope
sbb
sub
and
pop
adc
rclb
pushf
or
fdivp
dec
hlt
repz
shlb
test
xor
pop
int
shrb
pop
lea
ss
jns
loopne
pop
stc
dec
mov
sbb
and
sbb
or
sub
lahf
test
inc
inc
and
sbb
adc
mov
sbb
les
xor
shl
push
mov
mov
pop
outsb
dec
add
lea
loopne
out
ret
push
ret
xorb
fstps
mov
and
xchg
and
roll
sub
ljmp
xchg
test
imul
pushf
dec
outsl
sbb
iret
pop
pop
nop
sbb
adc
in
movsb
mov
scas
mov
and
xchg
xor
fstpl
pop
testb
and
xchg
sbb
addb
sub
std
adc
cs
js
inc
and
popf
mov
pop
stc
jp
xor
jle
test
mov
or
fmul
add
insl
or
mov
sahf
xor
sub
push
mov
mov
push
nop
in
dec
rcrl
pusha
ja
jmp
flds
pop
push
add
popa
push
test
andb
mov
dec
repz
mov
loopne
cmpsb
popa
pop
jge
cli
cmpl
sbb
jl
mov
pop
sbb
rorb
fldt
push
pop
dec
inc
lret
cmp
dec
ret
aad
dec
inc
dec
aaa
add
js
sbb
addl
ret
and
push
adc
and
mov
xchg
daa
insb
outsl
test
mov
mov
xchg
inc
xchg
mov
add
test
daa
mov
or
insb
push
pushf
push
scas
mov
jne
pop
add
addl
dec
xchg
arpl
jb
pop
mov
int3
dec
or
arpl
sarl
dec
xor
or
xor
sub
mov
add
mov
sub
mov
shrb
bound
jle
add
sub
pop
stos
inc
mov
movl
mov
fbld
jge
cld
sub
jle
inc
jmp
cmpsl
movsb
std
pop
or
enter
cmp
gs
add
jmp
pusha
mov
leave
inc
cmp
test
sbb
mov
xor
adc
roll
cwtl
add
cld
ljmp
out
in
and
add
cmp
std
sbb
or
stos
jp
cmp
mov
in
mov
clc
ret
enter
jmp
mov
jno
fldenv
inc
pop
loope
and
cltd
test
mov
dec
mov
push
iret
fildl
cli
aam
hlt
fiadds
stos
icebp
dec
mov
add
imul
mov
pop
pop
jne
jo
pusha
icebp
loopne
int
jno
jbe
sub
add
mov
lock
mov
mov
adc
scas
xchg
loop
jp
add
nop
mov
out
add
test
inc
jns
add
movsb
sti
jb
add
xchg
xchg
aaa
add
xlat
enter
test
add
pop
xchg
pop
cs
mov
std
pop
dec
mov
add
xlat
clc
loope
add
mov
roll
scas
mov
repz
stos
xor
ljmp
mov
add
xchg
add
je
mov
xor
sub
xchg
sbb
bound
adc
mov
outsl
and
outsb
stos
dec
sarb
xchg
andb
cmp
nop
jp
dec
jl
pop
imul
jecxz
add
into
mov
add
pop
mov
add
mov
nop
iret
adc
pop
mov
pop
add
xchg
jmp
mov
pop
lods
add
mov
pop
test
push
cmp
sub
jne
orb
shll
jno
cmp
xorb
sub
loopne
add
push
xchg
or
in
roll
add
sub
mov
mov
mov
and
cmp
popf
dec
adc
jb
pusha
add
mov
xchg
bound
mov
aas
jnp
xchg
cmp
aas
in
adc
pop
sbb
in
leave
loop
lret
lock
sahf
mov
adc
jecxz
sub
mov
mov
sbb
push
cwtl
inc
inc
cmc
fiadds
or
leave
push
sub
cmc
cmp
hlt
or
clc
in
jmp
or
pushf
cmp
mov
out
lds
lret
ja
mov
pop
inc
sbb
pusha
jnp
push
cmpl
lahf
dec
arpl
inc
mov
mov
or
ret
test
repnz
and
sub
orb
cmp
and
cs
subb
push
ret
test
sub
add
mov
and
add
aaa
xchg
sti
mov
mov
stc
add
clc
and
mov
loopne
movsb
rolb
ja
data16
xchg
sbb
pushf
push
push
ja
in
sbbb
gs
call
out
pusha
loopne
dec
mov
test
pop
and
mov
insb
inc
add
sub
and
inc
jno
pop
jb
ss
add
jecxz
and
pop
mov
cmp
pop
sub
in
add
das
test
fisttpl
add
scas
inc
mov
add
lea
mov
xchg
push
imul
jle
mov
std
mov
mov
add
xchg
outsl
adc
sub
mov
inc
inc
push
in
jp
and
sub
movsb
sbb
add
mov
lahf
repnz
xor
outsb
sbb
or
and
jmp
inc
mov
das
add
push
or
pop
pop
orl
xor
sbb
adcl
dec
mov
int
adc
es
jno
fcomps
sbb
outsb
mov
jne
add
jnp
and
add
lret
cmpsl
clc
arpl
nop
sbb
jl
cmp
and
subl
jb
insl
jl
add
mov
subb
jmp
arpl
sub
das
pop
xor
lods
fsubp
scas
fwait
cmp
pushf
cmc
shrb
push
sub
or
loop
push
es
cmp
dec
shlb
cmpsb
add
add
loop
push
adc
add
push
cmp
inc
dec
or
mov
jg
es
insl
cmp
adc
adc
cld
fsubs
lret
aaa
sbb
dec
add
hlt
test
outsl
add
out
mov
outsb
or
push
arpl
mov
ret
or
xor
in
push
bswap
out
cmc
push
mov
add
notb
mov
lret
aam
fidivl
es
std
or
and
pop
test
test
adc
rol
adc
pop
dec
ss
insb
adc
jl
out
push
sub
testb
in
add
mov
hlt
adc
mov
andb
push
scas
add
icebp
mov
sbb
pop
inc
inc
cmpsl
bound
jle
mov
push
add
call
out
test
add
repz
mov
fadds
add
int
xchg
push
loope
lret
sbb
jne
or
into
add
out
ret
add
stos
mov
outsb
add
pop
dec
xchg
orb
xor
jno
sbb
dec
lahf
sub
mov
andl
nop
sub
sahf
or
push
xorb
jle
sub
and
shl
xor
movsl
subl
rcll
out
jecxz
les
loop
pop
xchg
mov
iret
mov
mov
clc
aaa
in
setbe
js
dec
sbb
lods
jmp
fs
movsl
push
add
aad
icebp
ljmp
mov
cld
ret
jns
mov
rorb
mov
inc
outsb
cmp
xor
in
sbb
jo
cli
pop
xchg
cwtl
in
add
push
mov
cmp
jb
mov
test
and
push
sub
mov
sbb
lret
jmp
pop
sbb
adc
push
lds
es
xchg
rorl
and
xchg
mov
add
rcll
adc
inc
add
scas
push
shlb
pop
nop
lmsw
out
pusha
repz
aas
mov
gs
es
mov
adc
cmc
add
jne
rcrl
cwtl
repz
popf
sub
xchg
inc
cmp
ror
add
mov
iret
lock
add
mulb
fstpl
stos
add
ret
aas
fildl
lret
or
stos
rep
pusha
aad
mov
ret
sbbb
cs
lock
mov
rclb
push
aam
ret
add
sub
pop
mov
jmp
dec
sti
push
sbb
cmc
pop
lods
inc
mov
mov
addb
mov
movsl
inc
imul
jp
cs
subb
jge
mov
out
sbb
push
arpl
push
clc
xchg
shlb
std
loopne
movsb
orl
cwtl
jp,pn
imul
pop
cmp
mov
add
test
mov
sbb
sarb
push
in
jp
sbbb
ja
bnd
add
out
nop
dec
das
insl
and
shll
aaa
add
roll
or
dec
sub
fsubrl
cmp
adc
adc
and
aad
cwtl
mov
sbb
lods
inc
test
push
cmp
adc
dec
adcl
das
loope
and
pop
addl
aaa
movsb
or
xchg
pop
jb,pt
push
dec
inc
jge
int
subps
xchg
jno
add
sbb
sbbb
add
jae
dec
andl
pop
add
imul
jns
sub
orl
outsl
pop
or
aad
arpl
je
cmp
outsl
dec
cmc
loop
mov
push
test
jge
repnz
mov
aaa
add
mov
and
fadds
shrb
add
stos
jno
adc
mov
test
pop
lods
xchg
mov
rcr
cmp
pop
push
mov
add
push
xchg
mov
push
mov
es
or
lds
outsb
sub
add
jecxz
add
mov
or
push
into
sub
pushf
test
mov
enter
push
xlat
out
lods
loope
or
cltd
aam
jno
subl
ret
push
shlb
mov
adc
push
adc
lds
jo
and
add
fcomi
sub
scas
jl
xor
imul
and
add
pop
std
push
push
adc
cmp
adc
push
push
pop
popa
lds
nop
repz
xchg
mov
add
into
imul
pop
movsl
jbe,pn
or
lods
repz
jns
and
repz
test
mov
dec
cli
shll
movsb
in
add
lret
nop
insb
add
and
daa
bound
dec
add
call
pop
daa
xor
das
xor
jb
or
adc
in
sbb
push
push
mov
leave
outsl
imul
scas
adc
dec
push
jae
test
ret
dec
jbe
dec
jno
push
inc
add
adc
push
jnp
sti
fwait
pop
shlb
js
je
fiadds
xlat
push
xor
dec
dec
push
jbe
das
jo
mov
push
mov
or
orb
ficompl
out
popf
pop
and
call
push
aaa
dec
add
mov
ja
sbb
mov
andl
mov
outsl
adc
push
add
mov
nop
mov
test
pop
pop
lahf
jb
test
in
mov
jge
aad
in
adcb
pop
push
lods
scas
in
mov
push
mov
xchg
pop
fistpl
push
and
hlt
imul
pop
add
mov
jne
mov
icebp
sbb
outsb
add
mov
cltd
pop
cmp
inc
or
shrl
loopne
mov
ret
pop
xor
imul
add
push
sbb
insl
das
dec
cmp
fucom
push
aaa
pop
dec
lahf
fs
ljmp
mov
mov
or
cmp
mov
out
mov
xor
lods
xor
outsl
cmp
std
test
push
mov
cmpsb
push
mov
mov
popf
pop
testb
push
pop
inc
fs
pop
sbb
jns
adc
xchg
xchg
mov
adc
jo
xor
fiadds
mov
in
pusha
sbb
rcll
sub
out
dec
lods
jbe
sub
aas
imul
add
int3
cs
pop
inc
mulb
outsb
cwtl
mov
and
mov
addr16
mov
sbb
jmp
or
sub
xchg
rol
mov
sub
adc
xchg
lret
or
mov
ficoms
mov
push
add
mov
sbb
jmp
adc
mov
std
testb
sarl
adc
popa
jnp
xchg
xor
mov
push
daa
cmp
jns
sub
push
outsb
jns
sar
dec
popf
in
jg
xor
fwait
pop
sbbb
fstl
pusha
icebp
adc
psubw
ret
sub
push
add
pop
in
push
fwait
inc
add
sub
pop
sbbl
ljmp
pop
mov
shlb
stos
add
sub
addr16
adc
shlb
jo
cmp
push
in
popa
shrl
insb
hlt
into
jp
lcall
lods
dec
sbbl
stc
testb
xor
push
decb
pop
and
pop
cmc
add
loop
divb
mov
pop
movl
das
lret
mov
jne
inc
daa
sti
gs
xor
and
add
mov
push
add
jbe
xchg
and
es
aaa
scas
inc
pop
adc
mov
testl
sub
popf
sub
push
jnp
es
cwtl
push
das
mov
sub
push
pop
push
and
test
sub
stos
mov
mov
fmull
pop
mov
push
scas
jecxz
or
jl
faddl
sub
push
out
dec
stc
sahf
das
int3
cld
imul
lcall
out
outsb
inc
jae
fwait
and
aam
or
pop
pop
add
test
fisubs
mov
sub
pop
scas
testl
roll
mov
pop
movsb
andl
mov
inc
inc
and
add
sub
ja
inc
cmc
push
mov
add
jp
repz
mov
aad
xorl
jo
icebp
adcb
js
or
lods
dec
add
test
je
in
sub
jge
std
add
hlt
jge
pop
cmp
and
lods
push
jnp
mov
pop
adc
add
lret
jnp
push
mov
jge
mov
jnp
sub
nop
jbe
dec
add
pop
int
jp
jne
pop
mov
js
mov
mov
xor
push
data16
stc
movsb
shrb
inc
add
repz
std
cli
push
adc
es
mov
adc
jne
jne
dec
push
mov
add
test
jecxz
out
xchg
daa
adc
push
cmc
fmull
ja
mov
sti
lahf
js
or
outsl
pushf
mov
cli
add
sbb
add
imul
sub
add
push
or
xchg
and
xchg
and
sub
mov
mov
adc
cmp
and
cmpsb
aam
mov
add
xchg
mov
push
and
cld
mov
mov
cmp
push
stc
xlat
mov
rolb
add
cli
arpl
xchg
adc
sbb
ret
mov
fwait
jle
xorb
lret
aaa
outsl
pop
aam
fisubl
push
mov
pop
rclb
stos
or
bound
je
fidivrs
js
lds
mov
adc
sbb
lea
inc
or
hlt
mov
es
pop
pop
jmp
repz
mov
mov
add
imul
pop
ror
das
ljmp
pop
push
pop
or
testb
or
dec
add
std
sbb
mov
and
bound
or
shlb
fwait
cwtl
or
sti
add
pop
hlt
icebp
lret
pop
mov
cs
roll
outsl
rorb
add
and
fidivrs
imulb
repnz
testb
loope
push
xor
mov
sub
imul
cmp
jle
adc
dec
pop
jge
pop
push
push
and
cld
mov
mov
or
out
jmp
cmc
or
jo
or
cwtl
pop
pop
mov
adc
adc
data16
sahf
inc
jecxz
pop
outsb
or
in
repz
mov
mov
sbb
out
das
aaa
dec
sahf
bound
cmpsl
mov
jo
pushf
mov
xor
lret
pop
mov
add
loope
mov
mov
jge
leave
pop
add
mov
add
in
pop
sub
addb
shrb
cmp
cld
dec
insl
fsubs
andb
add
xchg
call
pop
insb
stos
add
xor
cld
mov
jb
dec
push
into
cmp
or
lret
mov
pop
std
mov
dec
imul
inc
add
pop
je
loope
cmpsl
scas
mov
xor
sub
xchg
xchg
xchg
mov
xchg
xor
adc
jb
push
mov
test
sbb
mov
iret
jge
sub
pop
dec
add
add
and
mov
lahf
hlt
stc
mov
inc
push
xchg
ficoml
mov
add
push
dec
jle
pop
xchg
pusha
scas
sbb
ljmp
jae
mov
mov
mov
imul
lds
outsb
ljmp
fucom
cld
adc
sbbb
in
mov
fcmovne
lds
sub
icebp
mov
loope
div
lock
loopne
cmp
std
add
jp
add
std
mov
push
stos
ljmp
and
add
push
out
mov
loop
or
push
push
fiadds
js
lahf
fidivs
mov
adc
lret
inc
inc
icebp
and
popf
aad
cs
and
jbe
shll
lahf
push
sbb
xchg
xor
orb
dec
jno
xorl
scas
fisubs
int
rorb
push
cmp
mov
clc
movsl
xlat
xchg
inc
mov
addb
insb
mov
add
push
fistpl
sti
cmp
mov
xorl
xchg
adc
icebp
mov
xchg
mov
adc
mov
mov
cli
aam
scas
cmp
test
sbb
pop
xor
daa
mov
add
push
add
cmp
mov
pop
or
mov
and
lret
ficoml
xor
mov
add
fcoms
push
rorb
lds
add
loop
xchg
scas
mov
dec
popa
std
xchg
lods
adc
or
lea
sub
adc
jb
lods
pop
mov
repz
pop
out
cmpsl
xor
xchg
lret
or
jnp
in
pop
adc
mov
cltd
loopne
mov
add
and
and
pop
movsb
pop
daa
pop
inc
daa
inc
scas
mov
push
add
push
ficompl
push
leave
mov
ret
les
add
mov
pusha
mov
out
dec
movaps
incl
and
dec
rcrb
cmp
pop
cli
int
lret
popa
nop
cmp
das
mov
int3
lcall
arpl
sbb
add
mov
jp
push
xchg
rcrb
add
stos
jmp
dec
push
dec
dec
test
xchg
push
addl
ret
fisttpll
lcall
ja
or
cltd
cli
xor
pop
jmp
testl
or
jnp
mov
xor
lret
aam
mov
je
adc
loopne
sbbb
je
fdivrp
hlt
out
or
inc
shl
imull
pop
pop
lcall
mov
lcall
pop
add
scas
adc
jmp
scas
lret
mov
aad
or
sbb
cmp
sub
pusha
fstpl
sahf
popa
lahf
enter
mov
test
out
jae
mov
add
jno
test
inc
dec
inc
xchg
cmp
sub
sub
sahf
pop
and
popf
or
dec
aam
mov
or
sub
js
or
mov
aaa
sub
jnp
or
mov
pusha
rcr
pop
aas
jb
popa
dec
jmp
test
rcrl
imul
psrlw
cmp
test
cltd
push
xchg
push
push
add
enter
mov
jne
xlat
mov
cmp
push
or
movsl
subb
push
add
and
test
push
out
dec
sti
cwtl
xor
inc
jg
xor
ss
stos
testb
cmp
pop
imul
cld
sub
jg
roll
mov
cmp
cmp
push
daa
es
or
iret
mov
mov
push
int3
cmpsl
mov
cwtl
jmp
sbb
inc
jns
sbb
pop
sub
xchg
dec
out
shlb
xor
add
adc
xchg
lcall
mov
jae
mov
mov
sahf
xor
stos
jae
jnp
dec
mov
das
adc
jp
fbld
or
icebp
rolb
cmp
mov
js
jg
negl
imul
sarl
jp
xor
or
and
mov
imul
xor
dec
add
mov
mov
mov
enter
sub
mov
repnz
xor
add
lret
and
roll
xor
dec
loope
dec
lret
mov
jp
in
xchg
jmp
fadds
pop
inc
out
je
pop
bound
lea
sbb
daa
pusha
insl
xchg
shlb
sbb
inc
in
or
notb
mov
fwait
and
and
push
aad
outsl
std
pop
jge
xchg
inc
rcr
or
mov
loop
cmc
adc
es
icebp
lret
in
test
adc
mov
stos
js
or
mov
jne
insl
add
cwtl
sub
in
pop
dec
pop
imul
fisubrs
mov
cmp
mov
nop
scas
jae
xorb
popa
fcompl
push
pop
fst
nop
fndisi(8087
orl
dec
sbb
or
xor
sub
xorl
inc
add
ficoms
push
shll
test
mov
pop
cmovne
popa
pop
sti
and
push
inc
outsb
sbbb
scas
jbe
xor
adc
outsb
jecxz
jp
pop
jle
enter
push
out
les
xchg
fsubrl
or
jb
push
mov
dec
clc
jle
pop
push
daa
pop
adc
jmp
shlb
mov
push
loopne
and
iret
or
jge
cmpsl
fistpl
pop
sbb
test
std
pushf
xchg
iret
xor
dec
mov
test
sub
test
mov
lods
and
fwait
and
jg
and
mov
cld
mov
lods
push
dec
js
ja
push
cmp
sub
jge
jp
adc
xchg
lock
and
das
adcl
adc
cmpsl
xor
pop
add
ds
push
stos
add
scas
sub
push
aas
pop
cli
xchg
xor
xor
in
adc
xor
out
notl
or
mov
dec
lds
pop
jmp
cld
mov
adc
jecxz
mov
in
or
aam
pusha
xor
outsb
loop
sahf
sbb
sbbl
adc
addr16
rcll
sti
mov
add
mov
adc
in
mov
xchg
inc
push
dec
movsl
idiv
iret
nop
repz
jecxz
mov
add
movsb
idivl
sub
add
dec
add
adc
add
icebp
testb
popa
mov
mov
cmp
lcall
or
cld
in
jno
xchg
aaa
call
movb
jmp
rcrl
mov
aaa
cmp
inc
mov
aad
or
dec
fistpl
and
dec
mov
push
sub
xchg
push
or
int
sub
aaa
rclb
popf
test
cld
sbb
push
jb
mov
push
cwtl
inc
and
mov
pop
inc
cmp
cmp
sbb
pusha
mov
pop
or
xor
xchg
rolb
mov
adc
add
aam
add
sub
cmp
pop
adc
orb
add
mov
or
or
jne
pop
div
pop
or
roll
mov
movsl
in
inc
rcrb
xor
call
shlb
lock
xchg
insl
xor
js,pt
subb
adc
imul
mov
inc
xchg
inc
rcl
fldenv
cmp
push
mov
adc
les
jmp
adc
pusha
jo
pusha
mov
nop
int
aas
push
add
aam
or
mov
pop
add
cwtl
mul
mov
xor
jae
xchg
cmc
xchg
push
pop
cmpl
popf
rolb
les
pushf
pop
jecxz
adc
mov
push
cwtl
mov
inc
mov
popf
xchg
sbb
sub
mov
xor
inc
lock
adc
mov
out
cmc
outsb
and
lahf
adc
test
adc
or
or
aaa
mov
add
movsl
or
push
mov
divl
push
test
test
bound
or
out
xchg
cltd
shr
andb
inc
popa
int3
cmc
imul
mov
jnp
cmpsl
dec
or
mov
out
sbb
hlt
xchg
aam
push
mov
mov
shlb
inc
in
cmp
or
mov
rorl
mov
dec
mov
nop
ja
incl
cmp
dec
pusha
cmp
hlt
int
sub
adc
jns
lods
outsb
out
xchg
out
daa
sbb
aam
cmp
mov
add
es
mov
movsb
cld
imul
pop
faddl
testl
loope
dec
xchg
das
jecxz
push
mov
scas
insl
sbb
mov
dec
mov
les
lods
pop
decb
stos
xor
cli
fcmove
shlb
loop
imull
push
dec
nop
cwtl
incl
or
sbb
sub
pusha
pop
cmp
add
mov
ljmp
ret
and
ja
and
xchg
jb
jbe
jmp
pop
pop
nop
and
xchg
ds
shlb
xchg
loope
and
ffree
sbbl
adc
and
cmp
dec
imul
or
cmp
sarb
inc
inc
ljmp
and
mov
sbbl
popf
and
int
push
mov
daa
cs
test
xlat
dec
jp
pop
mov
cld
mov
jmp
mov
ss
or
and
push
insl
sub
adc
sub
jg
xchg
push
jmp
in
int3
pop
mov
jo
rclb
pop
or
jnp
adc
add
add
add
sbbb
pop
cmp
mov
mov
jmp
lds
sbb
fwait
mov
adc
add
inc
lods
sub
jne
ret
rcrb
push
das
and
xchg
insl
pop
lods
cmpsb
push
gs
cmp
imul
pop
adc
sbb
pop
push
pop
lahf
sbb
cli
nop
dec
fucom
xor
push
clc
xlat
dec
or
aaa
jns
sbb
ja
out
jmp
sti
mov
cmp
mov
jmp
testl
imul
jp
pop
mov
mov
pop
xchg
fcoml
cmc
inc
or
dec
xlat
xor
repz
pop
cmp
imul
jo
or
ret
jle
fwait
lock
push
cs
jl
cltd
mov
push
push
push
cs
aad
test
fdivrs
or
mov
mov
test
or
mov
les
shlb
inc
in
sbb
add
mov
daa
fdivrl
dec
mov
movsl
xor
outsb
cmovnp
xor
inc
mov
mov
pushf
sti
mov
mov
add
int3
call
scas
push
or
imul
hlt
scas
mov
gs
cmp
ficompl
out
add
sub
xchg
add
je
sarl
lock
sub
sarb
xchg
dec
mov
adc
out
jmp
or
scas
push
xchg
push
loopne
push
and
sbb
pushf
or
inc
fiadds
and
xchg
aaa
or
sbb
out
mov
add
popa
out
insl
xlat
ror
daa
das
and
ja
loopne
or
push
iret
fwait
pushf
jns
mov
fiadds
mov
sub
sahf
add
daa
cmp
inc
in
cmp
and
and
push
sbb
xor
xorb
mov
dec
sub
jl
orb
pop
fnstenv
orb
mov
inc
aam
pop
xchg
push
aad
ret
loope
add
shl
ret
nop
mov
lcall
add
sti
je
iret
sbb
mov
in
push
inc
test
rcrb
or
mov
leave
add
adc
jmp
jns
cmp
out
aad
fidivrl
add
ret
call
jbe
out
daa
dec
pusha
xchg
insl
aad
adc
in
stos
es
push
push
xor
xor
cwtl
xchg
mov
add
sub
popf
ljmp
out
inc
pop
data16
lods
sbb
imul
fists
pop
mov
lods
movsl
out
fsts
jle
pop
xchg
sub
push
lds
daa
jle
add
push
xorl
push
adc
lret
dec
ljmp
addr16
nop
out
loope
pusha
jo
popa
inc
and
in
push
ss
xor
mov
or
mov
mov
movsl
add
loop
in
push
pop
out
pop
or
andb
repnz
mov
jne,pn
mov
jg
movsb
add
in
push
aas
or
hlt
nop
call
popa
shl
add
jns
jmp
or
lcall
dec
add
dec
inc
ljmp
xchg
lcall
std
das
clc
mov
push
mov
or
jl
sbb
mov
and
repz
roll
mov
adcb
jne
xchg
jle
daa
lock
rol
inc
sbb
add
dec
lahf
jg
cmp
sub
push
cmpsb
ss
out
pop
xchg
mov
repnz
add
push
add
lods
iret
push
dec
pusha
xor
jmp
stos
fldenv
das
inc
out
scas
rcrb
sub
adc
push
mov
mov
push
adc
stos
xor
cmp
jle
add
push
stos
adc
mov
and
lods
add
push
or
or
inc
popa
cld
in
popf
je
inc
dec
sbb
shrb
xor
sub
stc
fstpt
testb
psubsw
adc
nop
xchg
push
outsb
sub
add
push
fwait
loope
add
pop
ja
jg
and
rorb
lods
push
mov
popf
and
roll
cld
imul
outsb
shrb
mov
push
mov
mov
add
dec
mov
aam
fbstp
or
aas
int
jae
adc
je
pop
icebp
sbbb
push
dec
in
lds
insl
cs
add
adc
push
mov
push
int
pop
xchg
mov
jle
pop
ret
push
les
in
stc
inc
pop
ds
notl
xchg
mov
adc
xor
mov
lods
xchg
push
push
addl
stc
adc
xor
stos
and
mov
pop
or
adc
fsubs
and
mov
xor
in
inc
cmc
popf
mov
hlt
push
outsl
adc
jno
movsl
ret
iret
cli
das
adc
cmpsb
sub
pop
push
icebp
push
js
les
stos
frstor
push
mov
iret
rclb
sbb
mov
and
fs
or
jns
jge
int
mov
das
add
sbb
mov
in
daa
jbe
xchg
push
inc
push
in
mov
jb
mov
pop
rcll
mov
add
out
cmpsl
jnp
cs
je
gs
sub
popa
pop
or
fists
ljmp
add
test
mov
or
icebp
jne
add
inc
add
aad
in
jg
inc
adc
and
jmp
push
or
sub
mov
lahf
xor
mov
cmp
outsb
adc
out
rorl
fcoml
mov
inc
or
pop
ja
loop
dec
mov
sub
scas
mov
scas
int3
mov
ljmp
in
pop
aad
pop
xchg
and
es
leave
ret
das
sbb
xchg
cwtl
and
jnp
or
leave
mov
or
add
outsb
mov
sub
inc
xchg
mov
daa
dec
cmpsl
inc
mov
push
dec
cltd
mulb
sbbb
pop
stos
xchg
ret
gs
loope
das
adc
fisubl
pop
mov
sub
mov
xor
outsb
repz
jmp
popf
and
add
pop
in
mov
cwtl
adc
push
fists
sub
mov
inc
and
xchg
pop
or
sub
dec
nop
push
bound
int3
push
pop
push
mov
and
pusha
fwait
pop
xor
int
test
mov
nop
mov
cmp
subb
rorb
xor
or
and
loopne
lcall
jo
cmpsb
cmp
jmp
clc
pusha
shlb
jg
and
aad
xchg
popa
fimull
das
sbb
arpl
cmp
adcl
nop
pusha
mov
push
add
lods
adc
xchg
aad
sub
imul
mov
cmp
jl
fimuls
push
sub
loopne
pop
push
inc
fiadds
rclb
xchg
popf
mov
jmp
cmc
adc
cmp
inc
fwait
add
push
repnz
ja
cltd
inc
sbb
pop
add
xor
into
mull
out
insb
test
clc
mov
call
mov
stos
jns
pop
push
in
add
mov
jg
cltd
cld
pop
mov
cltd
fcomi
subb
mov
aad
mov
and
cmp
dec
push
add
mov
fcompl
pop
pop
or
popa
sbb
mov
frstor
ds
hlt
push
or
pop
mov
popf
jno
and
sbb
aaa
sbb
mov
fimuls
shl
fdivs
js
out
add
std
ljmp
mov
int3
pop
xchg
jno
mov
jmp
hlt
out
mov
scas
and
lock
jmp
lret
push
fisttpll
imulb
mov
pop
xchg
push
jo
or
pop
pop
sarb
sub
mov
outsl
lds
int3
mov
dec
std
mov
faddl
cmc
add
cmpsl
add
mov
pop
mov
adc
mov
inc
cmc
mov
cwtl
cmp
iret
xor
and
fsubs
and
or
add
xor
int3
rclb
adc
xchg
loopne
and
mov
cltd
mov
bound
sub
sar
cmp
int3
push
adc
enter
shr
sbb
shl
or
call
dec
movsl
fdivr
cmp
repz
iret
or
dec
fucomp
pop
js
test
pop
scas
mov
out
sub
fstps
in
mov
sahf
or
add
mov
mov
mov
add
mov
adc
add
xchg
push
out
insl
mov
repz
xor
out
jo
rcll
mov
cs
jne
mov
xor
mov
subb
outsb
or
lods
outsl
push
filds
and
nop
lods
add
sbb
cld
pop
mov
mov
pop
mov
adc
or
divb
rclb
pop
push
test
fldcw
add
or
sahf
dec
xchg
nop
scas
sahf
orb
adc
repnz
mov
mov
lea
adc
fimuls
imul
xchg
pop
lret
adc
aam
insl
enter
sbb
mov
das
je
test
mov
movsb
addb
xchg
mov
das
sub
dec
cmc
inc
pop
idivl
mov
jg
call
mov
inc
cmpsl
push
arpl
cmpsl
es
mov
cmp
jo
push
mov
pop
pop
jno
andb
push
shl
andb
or
mov
stos
cmc
mov
dec
call
sbb
aad
enter
sub
dec
sub
or
add
dec
mov
add
movswl
pop
inc
adc
add
mov
nop
jge
and
push
push
adc
stos
mov
or
add
jns
sahf
out
insb
jle
xor
add
push
in
sqrtss
pusha
xor
jns
incl
aaa
je
sbb
repnz
add
sbb
mov
add
loope
in
seta
scas
or
mov
adc
or
fsub
pop
add
mov
jl
ljmp
mov
pusha
mov
pusha
in
shll
das
xor
and
xchg
stos
push
push
cmp
sbb
mov
mov
outsb
xchg
add
inc
pop
xchg
fs
push
enter
test
xor
ljmp
inc
and
mov
and
inc
lods
cld
daa
mov
or
test
lods
test
or
imul
or
push
lret
hlt
imul
cwtl
or
xchg
aaa
fisubs
stos
add
jns
xor
icebp
jg
test
sbb
or
not
fistl
lock
mov
dec
mov
nop
je
jne
jbe
push
mov
add
and
cmpsb
mov
push
xchg
out
pop
inc
hlt
mov
jb
push
inc
xor
push
dec
adc
test
add
insl
das
inc
push
add
in
stc
mov
cwtl
mov
xor
loop
shl
incl
sub
push
and
mov
mov
and
stos
or
adc
out
std
jp
xor
pop
dec
add
xchg
add
jb
push
movb
push
sbb
ret
jne
lahf
jecxz
pop
add
insl
inc
lods
sbb
add
jmp
dec
stc
popa
popf
mov
or
and
jb
mov
in
pop
mov
add
lock
push
or
das
pusha
inc
popa
jp
test
hlt
push
clc
add
lods
fwait
mov
and
lahf
dec
rol
pop
aas
push
clc
in
mov
jb
add
popa
fiadds
sub
sbb
jl
in
xorb
fdivs
xor
jbe
push
lret
mov
repz
cs
mov
jbe
dec
mov
pop
lret
cmpsl
ret
pop
nop
test
xchg
mov
push
pop
jo
test
jno
mov
clc
jp
mov
xchg
sbb
cmp
xchg
cld
cmc
adc
push
popf
stc
shlb
add
stos
pusha
inc
mov
add
xchg
push
mov
add
out
xor
enter
mov
ret
rcr
popa
pop
push
pusha
xchg
sbb
or
cltd
and
mov
add
mov
inc
test
jo
dec
mov
das
xchg
pop
add
or
mov
sbb
add
enter
gs
adc
std
out
cmc
or
out
pop
jns
inc
mov
dec
mov
bound
push
mov
outsl
push
sbb
xlat
mov
jns
lret
pushf
mov
pop
cmpsl
hlt
and
adc
movsb
sub
mov
ret
imul
rcrb
xchg
fwait
add
sti
pop
mov
or
dec
push
and
xor
mov
inc
mov
in
and
dec
add
clc
jbe
in
fcomp
andb
pop
pop
sbb
imulb
dec
movsb
movsl
in
mov
rcl
arpl
add
sbbl
imul
and
push
mov
cld
jl
push
lret
sbb
mov
pop
stos
adc
repnz
call
or
jp
or
sarb
dec
clc
popl
push
stos
jl
mov
mov
add
aaa
cmp
jp
cltd
add
pop
mov
mov
or
popf
stc
inc
add
cmp
fwait
mov
mov
rcr
xor
xor
sub
pop
dec
pop
dec
sub
nop
pop
push
jo
das
add
in
push
pop
les
mov
imul
jmp
fwait
add
pop
mov
sub
clc
push
pop
fstl
or
adc
lahf
ficoms
sbb
mov
rcrl
jns
mov
mov
add
pop
stc
sub
mov
or
inc
add
lods
sar
popf
sbb
sbb
notb
push
js
adc
adcb
xor
sbb
imul
pusha
je
inc
jmp
aad
push
nop
add
push
stc
jo
mov
lods
or
repnz
jns
cmc
es
fisubs
lods
adc
push
push
push
push
push
clc
mov
enter
fldenv
mov
push
and
add
add
out
divb
pop
mov
pop
subb
jmp
les
nop
mov
jle
jo
xchg
dec
inc
fs
lods
lahf
dec
push
cmp
xchg
push
mov
adc
adc
sahf
xchg
int
add
lahf
cld
mov
sub
std
sub
cmpsb
and
lahf
lcall
or
mov
daa
fldenv
out
test
adc
and
popf
push
test
out
adc
adc
jno
hlt
pop
pop
shlb
lea
jge
jecxz
adc
mov
pusha
or
sti
add
mov
mov
loope
mov
sbb
xor
mov
scas
add
add
dec
and
dec
pop
cmc
or
cmp
js
xor
int3
icebp
jnp
add
mov
sysexit
add
sahf
mov
pop
sbb
subl
jo
fnstcw
or
jmp
add
loopne
repz
and
lds
add
pop
pop
scas
xor
mov
jmp
dec
add
xlat
aad
xchg
popa
idivb
sub
test
mov
push
add
xlat
cltd
adc
cwtl
inc
push
movsl
xor
mov
pushf
pushf
push
inc
or
sub
notb
cmp
jge
add
push
jl
mov
aam
fidivs
gs
sub
out
mov
mov
mov
mov
and
sub
dec
ret
aam
scas
leave
hlt
push
cmp
int
loopne
fnstenv
stos
icebp
and
mov
mov
adc
pop
fcmovnu
add
push
arpl
sarb
xchg
add
div
mov
cmpb
cmc
add
stos
push
dec
mov
fwait
fwait
pop
loope
inc
xor
push
inc
sar
cmpsb
inc
dec
add
aad
or
jmp
imul
pusha
outsl
ret
and
pop
mov
mov
decb
cmp
aaa
xor
lods
xor
ficompl
jne
daa
nop
enter
and
adc
repz
pop
cld
imul
mov
das
add
mov
pop
rcrl
add
mov
mov
add
mov
popf
mov
mov
xorb
sbb
mov
sti
add
outsl
adc
je
push
repnz
in
push
mov
adc
inc
cltd
pusha
xor
xor
mov
or
shlb
jl
int
inc
addr16
clc
mov
mov
push
cmp
mov
stc
je
inc
sbb
push
lret
int
pop
nop
cltd
addr16
push
mov
push
xor
decb
adc
dec
push
push
push
pop
pop
mov
arpl
add
cltd
daa
inc
gs
mov
push
lds
add
lods
adc
mov
cmp
mov
sbb
dec
mov
push
dec
flds
inc
in
aad
cmp
pop
sub
lods
adc
dec
mov
jge
add
sti
lock
jp
sbb
cmp
add
int
xor
outsb
sbb
jbe
ficomps
and
fidivrs
int3
push
xor
pop
pop
scas
imul
pop
add
in
lret
add
or
jp
mov
ficomps
lods
pop
add
mov
shlb
push
movsl
xor
mov
jl
push
mov
cmpsb
and
pop
je
bound
lea
int
popf
aad
sbb
push
adc
jae
pusha
mov
sti
rcrb
or
popa
mov
sbb
repz
or
or
adc
ja
lods
cs
shll
lods
xor
pusha
es
clc
mov
mov
inc
cld
in
sbb
pop
jmp
xlat
call
in
out
jb
dec
adc
dec
xor
add
jno
mov
fstpl
jmp
xchg
dec
std
shlb
addr16
inc
pop
lods
pop
adc
cmpsb
mov
sti
jne
sbb
add
sub
sub
jg
mov
dec
sub
mov
push
lret
arpl
or
test
loope
fidivl
xorl
xchg
rorl
leave
pop
sbb
lds
in
mov
push
adc
xchg
pop
inc
lahf
pop
in
mov
cmp
test
jno
pop
stos
imul
outsl
shrl
in
lret
daa
adc
pusha
xchg
dec
jbe
adc
js
xchg
or
fst
movb
jecxz
fiaddl
jmp
popf
jb
and
shll
cld
adc
outsl
cmp
add
pop
inc
or
sub
xorb
jmp
xchg
adc
sub
sbb
push
lods
loope
popf
cmc
add
cmp
ficompl
mov
xor
push
daa
xchg
xor
xchg
and
sub
mov
xchg
sbb
enter
pop
or
adc
jmp
xor
mov
movsl
xor
pusha
mov
jb
cmp
jg
dec
mov
cmc
stos
incl
lds
push
jl
xorl
xor
xor
clc
pop
add
je
push
popa
daa
loop
enter
lds
mov
pusha
shrl
sbb
fstl
and
clc
pop
lock
cwtl
adc
and
scas
xorl
in
adc
mov
lret
jbe
mov
sarl
jo
pushl
sbb
loop
or
mov
pusha
rcll
movsb
loop
repz
or
ljmp
push
sbb
inc
lods
jbe
daa
movsl
and
cmc
pop
insl
mov
jno
and
mov
int3
pop
jno
or
inc
sub
sbb
aad
dec
adc
xchg
wbinvd
leave
push
scas
jo
mov
mov
dec
jp
add
and
dec
test
filds
ficoml
rolb
jo
pop
pop
xor
dec
add
lds
jp
push
dec
pop
les
or
mov
adc
adc
pop
mov
lcall
mul
and
push
fsubrs
push
lret
call
pop
fildll
cmp
mov
sbb
push
lods
dec
dec
mov
cmc
scas
ds
loop
lds
and
mov
add
mov
scas
adc
stc
loopne
ds
or
jmp
fnsave
icebp
and
in
or
xor
es
pop
dec
lea
xor
cmc
arpl
lea
jl
push
push
bound
shlb
std
scas
cltd
rep
repz
mov
fwait
sbb
or
mov
xor
mov
adc
dec
pop
push
std
and
xor
addr16
sbb
hlt
pop
icebp
mov
movsb
dec
cmovs
pop
movsl
notb
pop
popa
add
sub
mov
mov
iret
add
push
mov
xchg
xor
or
lahf
pop
add
jno
fwait
xor
jecxz
adc
aaa
loop
cmc
add
jg
loop
push
insl
push
aam
jmp
mov
sbb
mov
hlt
cmpsb
roll
test
fsubrp
insl
cld
jecxz
xchg
push
in
add
jae
cwtl
pop
dec
mov
je
movsl
in
outsl
xlat
push
scas
jnp
or
fiadds
mov
test
sub
cmpsb
pop
movsl
jae
cmp
aaa
and
mov
mov
pop
ret
mov
dec
subl
mov
sub
stos
lea
adc
popf
stc
cltd
imul
daa
push
sti
cmpsl
jo
dec
add
inc
bound
cli
adc
xor
pusha
push
arpl
aad
aam
mov
adc
and
inc
add
and
imull
mov
add
jo
xor
in
push
sbb
rcrl
jl
inc
clc
mov
pop
adc
sub
call
xor
int3
mov
popa
dec
sahf
fdivrs
mov
add
adc
sub
repz
fmuls
mov
nop
xchg
adc
out
aas
cmpsl
je
mov
ja
ljmp
sub
xchg
sbb
adc
cmpsb
sub
rcr
push
lock
push
bound
test
shrb
int3
in
push
cmp
mov
sarb
repnz
add
ljmp
mull
jno
and
cmpsl
imul
inc
add
repz
pop
sahf
fiaddl
insb
fucomip
mov
xchg
sbb
pop
jge
icebp
adc
add
sti
mov
sbb
pusha
pop
sbb
into
jge
adc
outsl
sbb
mov
dec
push
cltd
cmpb
mov
pop
xor
neg
cld
stc
xchg
out
add
adc
clc
mov
add
enter
dec
pop
mov
push
in
push
js
dec
sub
daa
testb
cmp
mov
je,pn
outsl
cmc
pop
lods
icebp
xchg
mov
add
jae
push
xor
nop
xorl
cmp
adc
pop
add
sbb
daa
jnp
inc
ficompl
cmp
das
outsb
xor
jnp
adc
pop
je
out
adc
test
adc
mov
mov
xor
mov
xchg
inc
stos
jmp
int3
pop
jmp
xchg
stc
addb
or
sbb
shll
and
xchg
adc
dec
test
dec
sar
cltd
inc
aas
xor
mov
mov
das
xor
or
scas
pop
jno
inc
stc
mov
adc
das
pusha
fstpt
and
int
and
insl
and
add
push
mov
cs
mov
movsb
mov
sbb
std
test
push
lock
pop
pop
pop
adcb
mov
sbb
jbe,pn
in
push
jae
mov
ss
adcb
out
shrb
out
push
daa
pusha
into
xor
testb
mov
add
rclb
sub
xchg
pop
aaa
lahf
add
or
cli
mov
mov
rcl
adc
dec
imul
cs
adc
mov
pop
pusha
cmpsl
mov
cmc
sub
push
push
cld
push
dec
test
cmp
mov
or
loopne
jmp
or
bnd
push
in
test
idivl
aad
cmp
mul
out
mov
adc
push
jp
mulb
fs
adc
cmc
gs
inc
xchg
notl
inc
lea
mov
faddp
xchg
mov
data16
add
xchg
in
cmpl
stc
mov
mov
xchg
inc
orb
rorl
lods
adc
in
push
jns
fimull
icebp
pushl
jno
jle
push
loope
cmp
shrl
lods
sub
mov
add
xor
ret
push
pop
std
or
je
push
filds
les
pop
jmp
inc
and
pop
sub
hlt
xchg
mov
pop
ja
stc
push
mov
mov
or
mov
adc
mov
xor
addr16
iret
xor
mov
adc
inc
mov
mov
sbb
push
jb
add
jno
leave
xchg
mov
mov
or
ja
lret
jecxz
scas
pop
lock
sbb
mov
arpl
add
mov
mov
ret
out
notb
add
aam
xchg
xor
and
inc
mov
cltd
lods
les
loop
cli
mov
xchg
xchg
sarb
cwtl
cmpb
xor
ret
jmp
and
jmp
or
lahf
push
sbb
mov
or
push
cmp
out
jnp
jns
daa
adc
sub
and
pop
jno
and
xchg
pusha
jecxz,pn
jbe
xchg
add
pop
xlat
and
nop
xor
add
add
aam
jbe
popa
fs
in
std
xorb
xlat
inc
leave
push
fs
out
lret
sub
loopne
push
jne
testl
rep
dec
xchg
add
pop
mov
pop
dec
fisttpll
dec
daa
std
sahf
mov
hlt
mov
pusha
add
sbb
testl
out
dec
enter
insl
je
inc
push
out
add
ljmp
shr
jle
nop
fs
imul
xchg
and
push
sub
bound
and
add
call
mov
jge
in
clc
jle
pop
popa
jle
ret
mov
pop
mov
mov
mov
lea
inc
sbb
or
aam
sbb
add
insl
pushw
mov
rolb
mov
jmp
pop
cmpsl
ljmp
add
insb
xchg
jg
mov
test
ret
add
jge
xchg
cli
jl
call
fbld
cmp
das
ja
dec
mov
movsb
lea
ja
out
bound
mov
adc
js
pusha
clc
or
popa
xchg
aad
int
inc
mov
ds
lret
pop
ljmp
fcmovbe
mov
outsl
loopne
cmp
fstpt
mov
dec
loop
shl
add
outsb
pushf
add
stos
test
mov
aad
sbb
add
jo
out
sub
clc
pop
popf
sti
jg
push
mov
pop
pop
cli
push
xor
or
scas
jl
and
or
jns
xchg
stc
scas
inc
dec
popf
lea
xor
dec
pop
ret
insl
lods
mov
jmp
repnz
jle
xor
shrl
jecxz
mov
adc
out
and
pop
pusha
inc
dec
roll
jp
xchg
nop
push
aaa
ret
add
cmpsb
push
popw
mov
mov
das
hlt
pop
sub
adc
pop
addb
test
cs
fs
mov
mov
loop
fists
decl
jl
adc
xchg
mov
cli
cmp
mov
fs
jno
ljmp
stc
push
adc
andb
sbb
xor
or
repz
mov
xor
lods
sub
js
mov
aam
addb
dec
mov
das
and
jbe
xchg
dec
xchg
lcall
add
insb
xchg
add
mov
ficoml
adc
imul
cld
push
cmp
pop
fs
mov
or
clc
nop
push
data16
and
mov
add
pusha
clc
mov
and
inc
dec
push
sub
mov
loop
repnz
jmp
bound
xlat
in
dec
out
imul
and
inc
inc
add
adc
push
push
cmp
ret
nop
rcll
cmc
stos
sub
xchg
xchg
jb
fsub
xchg
add
push
or
imul
mov
nop
out
and
test
ja
pop
inc
lret
scas
inc
bound
test
cs
mov
add
inc
cmpsb
or
out
rclb
mov
pop
cmp
jmp
lods
ds
insl
pop
dec
cld
mov
ret
clc
xor
pop
adc
pop
mov
fld
pop
or
lods
mov
cmc
cs
mov
and
or
mov
push
loopne
addb
outsl
mov
sub
enter
cmp
loope
push
das
mov
add
dec
dec
in
std
rorb
jmp
fs
lea
jbe
popa
mov
and
jg
in
outsl
dec
pop
xchg
pop
add
mov
jmp
adc
outsl
pop
jno
pop
pop
xchg
mov
and
mov
cld
movsl
mov
pop
jmp
and
addl
mov
sti
jp
add
xor
mov
in
loop
cmp
jno
aas
add
cmpsb
fisttpll
xchg
or
push
mov
and
jo
xorl
dec
and
push
daa
bound
pop
add
pop
dec
cmp
lock
and
or
dec
test
add
insb
cmpsl
out
xor
dec
jnp
inc
xlat
insl
call
mov
sbb
xlat
add
lods
mov
jnp
pop
cmp
mov
lods
and
add
out
stos
cmp
jmp
xchg
out
xorb
jbe
das
mov
repz
push
fadds
push
mov
add
adc
push
stos
adc
push
pop
xlat
jecxz
inc
lods
rcl
or
mov
dec
jg
cmp
mov
and
inc
sbb
daa
mov
dec
dec
mov
push
ljmp
lea
inc
ret
and
sub
dec
lret
dec
mov
cmc
adc
jp
stos
sub
xor
rol
sub
cmp
cli
imul
and
inc
flds
cmp
outsb
ficompl
mov
mov
sbb
pop
incl
mov
push
sbb
adc
or
push
pop
mov
lahf
cwtl
dec
push
pop
xchg
pop
inc
scas
sbb
pusha
push
lahf
sbb
outsl
roll
xchg
and
sbb
dec
sbb
and
push
sar
sub
jecxz
mov
jbe
aad
aad
push
subb
jmp
cltd
dec
popa
test
shrb
lret
or
gs
add
cli
lods
lret
shll
jge
lods
jns
adc
fimuls
into
or
addb
xchg
jp
sub
xchg
jg
mov
adc
pop
les
test
shrb
sbb
or
push
adc
dec
mov
inc
mov
adc
cmpsl
push
sbb
arpl
inc
adc
cli
xchg
addb
mov
or
push
mov
loope
jns
pop
in
ret
mov
pop
jne
cmp
shl
adc
cmp
cmp
dec
ja
outsb
xchg
add
insb
sub
mov
adc
mov
add
js
add
jmp
js
xchg
and
sbb
daa
outsl
arpl
loope
sahf
sbb
or
out
mov
insl
lock
fcoms
xchg
add
pop
and
dec
stc
mov
mov
cwtl
mov
psllq
mov
and
frstor
in
and
mov
inc
mov
and
mov
mov
mov
pusha
mov
cs
pop
rcll
sahf
fbstp
add
bnd
bound
cmp
mov
jne
mov
mov
jmp
lcall
loopne
hlt
test
loopne
cmp
mov
mov
mov
loope
sub
insb
mov
mov
mov
testb
xor
add
or
sub
mov
fsubr
or
push
cmc
andb
popa
push
jmp
mov
dec
xlat
xchg
dec
stc
sub
jae
int
or
addl
test
pop
cmpsl
divb
sub
jbe
mov
loop
push
enter
test
adc
pop
push
jae
stos
jecxz
pop
loopne
pop
dec
stos
insb
pop
mov
lret
sbb
push
outsl
mov
data16
jno
xchg
mov
pop
mov
or
inc
mov
clc
inc
icebp
aam
add
mov
mov
fdivs
pop
xchg
xor
push
daa
push
xchg
pop
mov
dec
xchg
jp
pop
icebp
and
imul
sub
and
ljmpw
adc
es
mov
das
inc
and
xor
arpl
clc
popf
loop
loopne
popf
push
addb
ret
xchg
shrl
lods
push
sub
addl
jp
cld
clc
jne
cli
push
int
aad
inc
push
gs
fisttpl
sbbb
mov
and
lea
mov
mov
adc
mov
mov
mov
add
sub
push
and
xlat
xchg
and
and
pop
out
add
insl
mov
jmp
gs
clc
mov
leave
insb
push
adc
cmp
dec
pop
jnp
nop
mov
add
sub
int3
adc
dec
lcall
add
test
pop
sub
data16
xor
popf
fwait
sub
push
pop
mov
pop
nop
outsb
sbb
je
push
and
mov
insb
inc
out
mov
in
push
int3
loopne
mov
xor
adcl
fwait
test
jne
push
inc
mul
pop
push
mov
mov
jmp
adc
outsl
cmp
add
add
adc
cmp
pop
mov
push
jns
es
adc
test
popf
int
movsb
daa
mov
imul
sti
insb
push
mulb
adc
dec
ret
scas
cmc
cs
adc
fildll
outsl
test
xor
jle
pop
enter
mov
pusha
xchg
sbb
lds
cmpsl
dec
cs
dec
data16
movsl
adc
hlt
and
sub
pop
mul
cmc
stos
enter
inc
xor
xchg
pop
sbb
ja
repz
xchg
int
add
dec
push
out
daa
xchg
add
stc
imull
out
outsb
test
ljmp
pop
fs
xchg
stos
nop
and
inc
add
push
xchg
enter
sbb
shlb
mov
mov
add
adc
jmp
hlt
xchg
cmp
push
clc
pop
xchg
insl
enter
lret
mov
daa
jg
push
push
and
pop
jecxz
cwtl
mov
ret
add
popf
loopne
rorb
fildl
push
or
mov
push
xorb
jns
and
or
repz
sbb
mov
push
fbstp
add
dec
jp
call
mov
or
int3
add
pop
pop
jp
push
push
repnz
or
jmp
inc
aas
xchg
xor
adc
mov
jo
daa
mov
jns
andb
and
std
dec
scas
add
in
mov
or
aas
mov
loope
adc
hlt
dec
loope
sub
addr16
icebp
mov
decb
add
hlt
movsl
dec
inc
mov
xchg
fidivs
inc
mov
mul
je
inc
cmp
mov
and
pop
add
push
repz
and
daa
cmp
push
adc
nop
inc
dec
mov
in
xlat
and
xor
jecxz
or
sub
popf
push
add
mov
mov
repz
movsl
mov
pop
and
popf
std
mov
pop
loopne
add
and
pop
cld
ret
or
push
mov
gs
mov
cli
das
xchg
js
ja
sbb
sbb
sub
push
mov
mov
jo
mov
loope
xchg
in
aad
adc
lods
icebp
add
fwait
stc
andb
inc
pushl
xor
jge
mov
push
rorb
std
sbb
cld
les
decb
imul
push
mov
pop
dec
popa
push
xlat
fwait
push
cmpb
cli
xchg
lods
in
mov
jmp
jp
repnz
mov
add
mov
test
in
mov
or
pop
iret
push
push
imul
xor
rcl
aam
movsl
add
sub
pop
or
add
push
fldenv
add
bound
daa
sbb
in
dec
or
sbb
add
mov
mov
or
sti
fsts
dec
dec
gs
hlt
mulb
stos
or
pop
call
mov
xchg
add
enter
push
push
xchg
divb
cmc
iret
xor
in
arpl
pop
mov
mov
cwtl
es
clc
dec
dec
cli
lds
sbb
lock
push
push
and
add
pop
leave
push
and
jmp
jno
sub
sbb
inc
mov
lds
in
mov
mov
test
jmp
and
push
fucomi
xor
xor
aam
daa
nop
mov
add
aaa
daa
add
subb
add
pop
xchg
das
sub
fsubs
jg
inc
add
mov
cmovl
sti
xchg
cs
jb
add
adc
mov
push
dec
xchg
icebp
mov
out
xchg
push
popf
sbb
ds
sar
sbb
out
xchg
fildll
xor
add
push
scas
mov
lds
lods
outsb
lret
push
popa
inc
pop
push
ret
xchg
or
les
ret
adc
int
mov
ss
adc
xchg
lcall
dec
mov
mov
xlat
je
mov
mov
cmp
clc
loop
sub
ror
xor
addr16
pop
gs
mov
inc
testb
test
mov
and
add
mov
and
or
xchg
sbb
stc
cs
insb
psubsw
stc
popf
sbb
popf
mull
lock
ja
pop
js
lahf
jae
jo
xchg
pop
jne
pop
jns
push
adc
hlt
cli
jb
sbbb
mov
or
pop
out
jno
xchg
movsl
addl
mov
fsubs
testb
imul
out
cmovg
loopne
mov
cmc
add
lret
mov
scas
sbb
sub
fdivs
lret
inc
cmpb
int3
shl
cmp
les
test
out
sahf
xchg
ret
cs
fsubs
hlt
fisubrs
fiaddl
mov
cmp
mov
test
xor
repz
data16
test
jno
cs
hlt
mov
or
jmp
mov
add
xchg
mov
test
mov
rclb
cmp
outsl
rolb
inc
and
fsubl
fildll
mov
and
lret
mov
mov
std
fcomps
jl
add
mov
mov
mov
mov
xchg
adc
xchg
jnp
cmpsl
pop
gs
push
lds
jns
mov
out
adc
sti
pop
dec
lods
and
loop
xor
dec
mov
mov
jge
es
push
into
movl
loop
stc
aad
and
sbbl
addb
movsl
jle
or
mov
mov
scas
sahf
sbbb
xchg
sub
mov
mov
xchg
pop
stos
aam
add
mov
cmp
test
sub
jne
cmp
jbe
out
sub
push
and
and
cmp
lods
test
icebp
push
jp
pop
in
xor
pop
cld
sti
adc
jno
sub
xor
dec
mov
dec
or
mov
add
push
mov
jb
movsl
lods
std
and
mov
loope
add
lds
mov
push
xchg
nop
arpl
xor
cmp
xor
and
pop
int3
and
add
xchg
es
lock
push
add
pop
adc
lods
lea
imul
dec
jmp
mov
mov
or
push
cmovs
fidivrl
lock
test
stos
loop
xchg
popf
in
cmp
xchg
fmuls
testb
xor
lock
sbb
in
or
add
or
jbe
mov
sahf
push
inc
pushf
mov
sub
les
sub
mov
ficoml
ss
jg
sub
mov
rcrb
mov
push
mov
dec
mov
stos
mov
lock
shl
add
cmc
mov
xchg
push
adc
jne
stc
pushf
xor
add
enter
dec
mov
out
and
lock
or
lcall
or
sbb
pop
test
filds
pop
jae
js
mov
popf
jae
pop
repz
cli
mov
jmp
sub
lret
dec
push
jne
out
jl
inc
push
out
add
ljmp
leave
filds
jne
loopne
adc
jg
add
adc
cmp
add
lret
push
in
loope
lret
in
mov
mov
femms
jb
jge
lea
aas
jne
mov
daa
push
cmp
mov
pop
nop
mov
and
or
add
and
dec
sbb
clc
push
dec
mov
rcrb
jae
push
mov
lea
jmp
pop
adc
jae
ljmp
mov
add
lods
sub
cmc
cmp
add
mov
or
popf
mov
pop
mov
or
and
nop
sub
jb
mov
dec
pop
movsl
out
inc
fldl
test
jmp
xchg
jo
xchg
jmp
and
inc
or
cmpb
push
dec
inc
add
ljmp
les
bound
je
faddl
and
fimull
sarb
lret
movb
mov
mov
push
dec
cs
cmp
jmp
es
es
sti
or
out
push
adc
cmc
in
add
adc
push
ret
test
leave
push
test
in
addl
clc
hlt
shlb
int3
jbe
xchg
mov
fcoml
mov
mov
add
fstl
push
rclb
das
jge
jo
push
mov
sbb
movsb
push
outsl
xor
sbb
add
sub
lahf
sub
popa
imul
cmp
fimull
mov
dec
in
inc
icebp
cs
shrb
fwait
les
jno
cmpsl
push
add
int
sbb
sar
add
push
cli
sbb
fcoml
lret
push
sarl
addl
fnstcw
xor
cmp
cltd
dec
mov
roll
int
push
or
and
add
xor
mov
insb
pop
jl
dec
cwtl
add
rorl
cmp
pop
sub
lock
inc
inc
pop
clc
popf
mov
pop
sub
daa
in
dec
std
cmpsl
adc
imull
cld
mov
stos
mov
and
fidivs
cmpsb
xchg
sbb
mov
adc
cmpsb
add
lods
sbb
lahf
je
xchg
clc
mov
mov
test
fistl
jno
adc
popf
mov
movsb
mov
inc
nop
push
sbb
lret
xchg
mov
stos
leave
cmp
and
mov
or
sbb
adc
jno
dec
mov
pop
stc
pop
push
xor
mov
push
mov
xchg
mov
ja
xchg
jmp
scas
mov
lret
mov
cmp
add
jbe
and
push
sub
rcr
mov
test
popf
adc
sub
mov
xchg
out
loopne
test
add
push
cmpsl
repnz
xorb
int
ret
orb
dec
push
mov
adc
out
sbb
ljmp
andl
xor
dec
ja
dec
lock
outsl
push
sahf
jp
mov
mov
imul
mov
push
fs
repnz
add
xor
jg
mov
inc
data16
call
loope
clc
repnz
popl
mov
cmp
cmp
aad
pop
mov
dec
add
shll
xchg
xchg
loope
test
sbb
push
out
push
clc
or
sub
mov
ljmp
cmp
test
mov
fs
push
das
push
mov
jge
aaa
das
dec
cltd
mov
xorl
adc
out
fisubl
pop
cld
push
xlat
cld
mov
ja
inc
and
scas
jae
fnstcw
mov
test
sbb
sbb
ret
push
pop
or
jp
pop
ja
in
fmuls
xchg
aaa
add
dec
inc
xchg
jp
or
and
cli
inc
pop
push
pop
mov
push
loopne
pop
xorb
pop
adc
add
orl
sub
jb
jo
or
jno
add
push
inc
gs
pop
pop
xchg
xchg
pusha
stos
fnstcw
gs
cmpsb
mov
idivl
and
stc
out
lcall
sbb
xor
insl
mov
sub
xor
test
xchg
push
jb
cmpsl
cld
xchg
sti
or
cmp
imul
sub
outsb
mov
sub
call
jge
sahf
dec
sub
call
arpl
in
adc
push
in
bound
adc
lcall
popf
daa
std
sbb
mov
pop
out
ret
or
or
in
mov
aam
sarl
popa
fwait
xchg
ret
scas
stc
push
push
insl
mov
push
push
pop
loopne
out
xchg
lret
inc
es
inc
sub
es
add
cld
movsb
push
fistl
pushf
loopne
xchg
mov
cs
jae
cmp
add
call
mov
test
mov
pop
popa
sub
outsl
inc
cmp
fiadds
pusha
push
jecxz
pop
dec
cmpsl
sub
push
pop
mov
mov
lods
sbb
rcl
test
xchg
fiaddl
lock
inc
pop
adc
pop
aaa
jle
cmp
sti
xor
mov
sub
pop
sub
js
outsb
stos
das
mov
xorb
add
loope
mov
setg
push
mov
sbbl
adc
ss
sub
adc
inc
ds
mov
pop
mov
mov
addl
clc
xchg
stos
es
add
lea
pop
cwtl
push
xor
fstl
movsl
pop
push
ret
add
outsb
in
cld
popa
clc
test
sbb
xchg
cmp
and
repz
popl
lcall
cmc
or
push
repz
call
push
jmp
push
pop
icebp
addr16
mov
sbb
jl
xlat
adc
xchg
mov
adc
mov
in
out
jp
or
lods
aad
pop
xchg
adc
inc
jl
inc
arpl
add
hlt
out
pushf
fdivr
adc
and
push
jno
popf
cmp
pop
outsb
pusha
lret
mov
mov
stos
or
mov
daa
pop
inc
push
js
mov
xor
jl
sar
mov
ss
movsb
xchg
cmpsb
fisubs
push
mov
sub
inc
repz
add
pop
mov
lock
jle
or
popf
or
hlt
scas
faddl
xchg
xchg
xor
mull
jmp
test
add
movsb
pusha
popf
call
mov
mov
pop
cwtl
imul
and
jmp
xchg
ds
dec
fidivs
imul
or
dec
cmpb
iret
fstl
add
ffreep
push
jns
inc
in
adc
daa
popa
and
test
xchg
push
mov
mov
ret
or
pop
hlt
dec
ret
mov
fyl2xp1
popa
into
std
inc
mov
cli
popf
sbb
ds
int
mov
iret
popa
inc
dec
sbb
aad
fwait
orl
sub
mov
bound
xlat
add
repnz
inc
addr16
stos
shrb
js
xchg
das
out
in
add
push
or
cwtl
sbb
pop
xchg
jne
cwtl
mov
and
sub
and
mov
insl
add
aam
je
push
xchg
orl
fidivl
enter
arpl
pop
mov
hlt
fs
or
dec
in
jns
mov
mov
xor
inc
stc
dec
mov
fstps
xor
mov
xchg
lods
es
cmp
jns
xchg
mov
mov
xchg
lds
cmp
int3
pop
out
or
jmp
push
jae
jno
push
add
shrl
popa
xor
push
xor
movsl
daa
adcl
pusha
mov
cltd
out
cmp
shll
add
mov
into
movsl
aaa
and
mov
cmp
push
xchg
pop
scas
les
jp
add
clc
fisubrl
test
mov
lods
dec
les
sub
xchg
jnp
lcall
sti
nop
movsl
mov
mov
lcall
sar
imul
and
push
mov
test
xchg
popa
divl
js
sub
or
jp
les
fldcw
rcrl
rcl
mov
sub
mov
cmp
inc
cmp
sbbl
dec
and
in
mov
test
dec
mov
or
add
adc
icebp
push
notb
dec
clc
shl
sub
lret
xchg
sbb
jnp
adc
xchg
hlt
add
rcll
or
scas
jo
jnp
pop
scas
jo
sub
test
lahf
adc
push
and
dec
fstpl
popf
xor
xchg
aaa
aad
xchg
loop
push
pop
push
jns
lcall
in
xchg
mov
pop
int
ja
shrb
adc
idivb
fbld
cltd
sbb
or
out
xor
gs
push
mov
cmpsb
mov
test
and
in
jns
pop
out
into
push
sbb
mov
cld
out
cmp
jno
and
repnz
lret
repz
jb
inc
negb
mov
pop
adc
inc
xor
cltd
sbb
aaa
lret
lods
push
test
add
sbb
cmp
js
sub
xor
xor
repnz
andl
adc
sub
cmpb
mov
mov
std
sub
pop
lods
sbb
or
addb
js
mulb
mov
js
pop
jmp
mov
test
and
pop
daa
inc
fisttpl
dec
cmp
inc
sbb
xor
mov
mov
mov
push
repz
cmp
lahf
pop
push
add
iret
push
or
mov
pusha
enter
or
push
and
adc
daa
cld
int
sar
cld
or
jmp
dec
or
les
sub
mov
mov
jno
pop
pusha
mov
xor
push
push
in
daa
sbb
dec
idivb
dec
xor
add
xor
popa
dec
mov
push
ret
lods
cmpsb
and
cmp
add
int3
dec
add
cmpsb
sbb
mov
inc
addl
inc
jb
test
test
dec
add
out
jno
repnz
add
jg
lods
cmp
pop
mov
mov
cld
mov
scas
push
dec
pusha
int
sub
pop
aad
mov
daa
jmp
aaa
mov
shrl
movb
int3
std
mov
scas
mov
pop
pop
cmp
das
sub
pop
jo
mov
call
mov
das
test
int
cs
xor
push
pop
shrb
lret
es
popf
sti
push
pop
loope
xchg
lret
rcrb
fldenv
iret
jb
push
or
int
ja
pop
or
int
dec
xchg
sub
mov
xchg
cmpsb
mov
dec
xlat
call
add
and
popf
das
cmp
cmp
ds
enter
lret
stc
lret
pop
and
and
stc
outsl
cltd
inc
lock
dec
xor
add
pop
das
pop
imul
ja
or
pop
pop
push
add
push
sar
out
test
jl
enter
pop
or
jnp
sub
mov
sahf
sbb
xchg
pop
repnz
sub
lods
sti
jl
inc
enter
js
fisttpll
fsub
or
push
xchg
jae
jns
sbb
setb
mov
orb
mov
and
jmp
inc
cmp
dec
rcll
mov
mov
imul
jbe
pop
add
xchg
js
lea
mov
mov
lret
mov
nop
out
push
push
inc
iret
scas
sar
mov
dec
scas
nop
ja
in
and
push
push
or
adc
dec
inc
stc
push
push
sub
xor
aaa
cmpsl
add
jne
rol
nop
je
sbb
pop
fsubr
xor
imul
jle
inc
inc
add
sub
xchg
int
mov
xchg
xchg
mov
sbb
or
and
stos
fucom
inc
pusha
or
cmpl
aad
mov
shlb
push
dec
push
call
mov
das
and
jae
test
fistpll
das
into
fsub
bnd
ret
mov
jp
nop
pop
aad
jmp
test
insb
pusha
or
and
adc
mov
mov
xlat
stos
adc
xor
cmpl
gs
adc
cmc
loop
popf
and
or
xor
sbb
and
fwait
mov
aaa
ds
fstpt
jmp
gs
add
jo
ficoml
cmpsl
jo
add
or
jge
sbb
add
dec
iret
pop
nop
fadds
in
daa
add
icebp
jmp
das
icebp
push
repz
stos
mov
popa
pop
xor
push
pop
sbb
lahf
pop
mov
sub
jecxz
add
xor
and
iret
sarb
push
mov
sbb
mov
lahf
mov
or
pushf
add
xchg
pop
aam
mov
push
add
cmp
sub
arpl
ret
mov
enter
popf
and
push
add
daa
sarl
dec
cmp
add
mov
xor
lods
insb
test
add
dec
push
cmp
or
fsubr
lret
mov
loop
imul
jns
orl
inc
shll
pop
sahf
or
mov
xchg
or
es
ljmp
iret
mov
sub
xchg
xor
xor
push
cs
dec
mov
mov
popf
stos
cld
aaa
push
ss
std
test
ret
mov
ljmp
and
xor
pop
mov
cmp
and
add
dec
pop
xchg
negb
mov
xor
sub
adc
xor
fisubrl
mov
adc
xchg
pop
adc
pop
scas
mov
mov
ret
pop
push
or
popf
push
mull
push
jo
dec
pop
lcall
fwait
adc
and
jnp
jno
push
insb
repnz
xchg
dec
sbb
dec
loop
and
test
sbb
xor
push
xchg
jp
or
pusha
daa
xchg
pop
jecxz
rorb
mov
jle
divb
vcvtsd2ss
mov
xchg
pop
sub
sahf
fimuls
mov
mov
outsl
outsl
daa
adc
push
cli
fs
add
adc
int
and
mov
jbe
jp
cmpb
jmp
add
xor
mov
and
and
adc
pop
dec
les
jl
add
dec
push
and
adc
add
push
das
mov
pop
dec
add
jnp
aam
fadds
jne
xor
mov
push
cmp
ljmp
repnz
mov
out
fdivl
stos
movsb
repnz
add
push
mov
test
pop
inc
int3
add
js
sbb
xor
inc
sbbb
pop
insb
stos
add
mov
pusha
mov
adc
lcall
adc
xor
hlt
fdivrl
cs
loop
aaa
xor
adc
dec
add
ss
jb
mov
shl
add
int
repnz
mov
add
outsb
jb
sub
inc
lahf
imul
jnp
cltd
gs
out
xchg
jg
add
cmp
outsl
dec
incl
mov
shr
aas
add
aaa
cmpsb
in
jne
push
sub
add
push
out
aaa
and
and
mov
add
or
test
or
std
add
push
jp
in
cmp
and
pusha
cmp
dec
ja
fisttpl
mov
cs
add
in
push
pop
sub
shll
xor
psubusb
add
cmp
pop
push
sbb
jns
or
mov
xor
mov
mov
pop
mov
mov
jbe
xor
cltd
out
and
lods
popf
fimull
icebp
push
add
cmp
or
sarl
test
mov
push
inc
cmp
pop
gs
adc
pop
nop
insb
inc
inc
adc
test
sub
adc
mov
enter
xor
in
pop
orb
sti
sahf
pusha
popf
push
xchg
pop
inc
add
xchg
lods
sbb
adc
imul
daa
xchg
hlt
sub
in
jne
loop
add
jge
call
jle
imul
sbb
out
cmp
enter
test
adc
add
or
and
aas
scas
rcrb
daa
lods
push
mov
jecxz
mov
std
mov
shlb
jnp
push
outsl
pop
add
mov
adc
movsl
inc
mov
cli
push
ret
sub
or
pop
push
loopne
mov
call
or
or
add
cmp
pop
repz
sbb
mov
ret
lahf
ret
iret
inc
es
add
jo
nop
mov
call
and
sub
sbb
push
add
sub
xchg
or
mov
cmp
bswap
cmpsl
ljmp
pop
dec
js
push
int
lea
pop
outsb
or
scas
cmp
insl
add
mov
rol
loop
lahf
xchg
hlt
xlat
and
xor
jb
inc
outsl
inc
adc
xchg
dec
das
xorb
cld
out
dec
call
sub
lock
movsb
xchg
adc
mov
cmpsl
adc
cmpb
rcr
or
fs
arpl
pop
jp
sbb
mov
sbb
movsb
sti
pusha
fdivrs
adc
fmuls
enter
dec
aam
fists
or
pop
js
repz
add
leave
push
sbb
push
jge
add
mul
scas
loopne
aad
mov
int
cmp
jbe
dec
in
dec
repz
sbb
dec
cmp
out
loop
movsl
jno
xor
cmp
sbb
movswl
add
xor
jb
aaa
add
repz
or
sbb
repz
neg
mov
and
xchg
push
mov
mov
cmp
in
xorl
add
loop
punpckldq
pop
mov
sbb
adc
and
jne
or
sub
adc
int
cmpsl
lcall
sub
lret
sub
loop
stos
adc
syscall
shrb
mov
mov
xchg
pop
mov
lods
outsb
jg
adc
adc
fildl
xchg
mov
pushf
add
mov
rorb
ficoml
add
add
xchg
jle
cmp
pop
dec
jmp
sti
movsb
jno
add
fwait
cmp
ljmp
and
loope
or
fmull
adc
sub
mov
cltd
add
lcall
add
adc
jecxz
hlt
add
mov
mov
shll
mov
jb
xor
adc
mov
dec
sbb
jb
aam
push
xor
ret
push
dec
js
sub
xor
jg
inc
enter
loop
scas
cmp
in
mov
add
xchg
mov
xor
lcall
inc
add
out
icebp
pushf
enter
add
pushl
fcoms
ljmp
push
jb
stos
jp
call
cmp
push
cwtl
inc
xchg
sbb
mov
fwait
xchg
mov
add
lods
call
aas
pop
xorb
ficompl
xchg
adc
add
test
jge
sbb
movsl
dec
je
fcmovnb
fnstenv
lods
sbb
add
dec
push
mov
cwtl
sub
pop
sub
outsl
cmp
stos
lock
pop
xor
pusha
mov
loop
pop
push
add
add
sub
push
sbb
lods
sbb
in
pushf
cmc
add
sahf
lock
add
ds
mov
xchg
add
cltd
xchg
mov
xchg
jg
dec
inc
mov
jae
jle
mov
clc
mov
into
push
lods
sbb
in
add
dec
push
jnp
adc
pop
mov
shrl
inc
imul
mov
testb
push
inc
pop
test
andl
sbbl
lds
sub
cmpsl
cmc
test
jb
fldcw
add
push
mov
jp
pop
dec
sub
popf
pop
jnp
pop
inc
cmpsl
and
and
mov
jns
les
or
idivl
dec
cmp
bound
add
les
mov
add
pop
ret
mov
jns
dec
dec
dec
stc
ds
ret
pop
mov
mov
test
add
mov
outsl
inc
sub
or
int3
enter
mov
mov
pop
icebp
or
push
scas
cwtl
std
das
inc
rcrl
test
rcrb
sbb
push
mov
xchg
lods
jg
sub
xor
or
int3
add
ljmp
nop
mov
or
add
aas
sbb
aam
into
rcr
mov
mov
pushf
fmul
adc
negl
add
sbb
add
mov
or
pop
jb
sbb
out
pop
rorb
pop
nop
leave
push
or
or
clc
xchg
dec
add
jne
rorl
adc
mov
pop
and
jg
les
mov
add
pusha
jns
xor
add
pop
orb
adc
test
leave
test
xlat
mov
dec
rcrb
jae
xor
sub
add
mov
ja
fs
es
adc
dec
cwtl
jno
cmpsl
rolb
add
sub
xchg
nopl
sub
addr16
cmp
mov
fstp
arpl
xor
and
mov
mov
aas
or
les
add
scas
rclb
mov
stc
adc
add
out
and
add
dec
adc
cs
jne
test
push
mov
add
jg
mov
push
loop
push
pop
loope
mov
shlb
aaa
out
mov
sub
jnp
and
xchg
xor
pop
xchg
rolb
and
mov
movl
sbbl
insb
enter
lcall
and
add
cwtl
xor
out
add
sarb
push
repz
std
addl
mov
and
xor
daa
scas
paddw
mov
enter
inc
arpl
push
jno
jl
mov
cmp
mov
pop
push
aaa
punpcklbw
add
pop
xchg
add
inc
cwtl
jns
or
add
popa
jmp
pusha
jl
push
add
fs
add
push
sahf
inc
fcomps
ret
loope
push
mov
sub
in
sarb
nop
ret
adc
mov
or
test
jns
repnz
add
aad
stos
adcl
cmp
or
pop
sub
bound
test
mov
jmp
mov
push
jno
jge
push
or
add
fstl
loopne
arpl
sub
xchg
sti
movsb
rcll
je
into
shlb
xchg
sub
sub
mov
adc
pop
push
mov
les
mov
pop
cmp
cli
lcall
dec
push
inc
xchg
jo
mov
repz
lock
push
bound
test
sub
lea
mov
lcall
mov
inc
dec
callw
leave
verr
arpl
push
xor
adc
xchg
or
stos
insl
mov
sbb
fists
mov
testb
sub
and
mov
stc
mov
mov
sub
jo
xchg
insl
jnp
push
mov
scas
adc
dec
test
scas
xchg
add
fsubrl
ljmp
adc
jne
lahf
adc
xchg
push
in
adc
aad
shlb
stc
cld
jnp
aam
push
add
in
nop
clc
xchg
mov
jne
out
jmp
jne
dec
adc
sysexit
fwait
add
pop
pop
pop
cld
test
pop
pop
add
nop
mov
push
stos
mov
or
dec
aaa
pop
jae
js
or
mov
in
xchg
pop
adc
mov
add
xor
dec
sub
or
and
rcr
and
add
dec
stos
lahf
adc
mov
adc
ret
mov
rcrb
pop
cld
push
xchg
movsb
lahf
leave
sbbl
pusha
add
push
aad
adc
inc
xorl
out
and
pusha
cwtl
mov
lods
adc
repz
cli
jo
and
xor
daa
js
push
clc
adc
or
loopne
mov
das
or
pop
stos
loopne
mov
xor
adc
popa
jmp
dec
xchg
out
sbb
cld
mov
stos
popa
inc
test
xor
mov
inc
sbb
adc
cmp
test
rcrb
inc
push
dec
cmp
pop
or
sub
ja
cli
int3
bound
pop
cwtl
add
mov
call
sbb
cwtl
lods
adc
mov
add
gs
lahf
jbe
push
push
fildl
jno
inc
or
rcrl
mov
push
xchg
out
push
mov
adc
jnp
daa
test
cmp
stc
cli
mov
and
lock
and
into
andl
xor
test
sbb
decl
je
sub
xor
add
cmc
in
push
out
xor
pop
cld
out
mov
add
mov
push
and
enter
add
shll
fisttps
cmpsl
add
mov
push
scas
test
addb
pop
mov
mov
out
xchg
negb
and
xchg
movsl
and
jb
cmpsb
mov
dec
adcl
lret
sbb
loopne
push
pop
xor
enter
add
cmp
xchg
add
mov
loopne
inc
dec
loop
lcall
daa
or
or
repnz
sbb
popf
xor
pop
xchg
inc
mov
cmp
mov
push
stos
fsubrl
dec
mov
adc
clc
repnz
roll
orb
dec
lret
dec
das
lock
cli
xchg
add
mov
push
adc
dec
or
jg
repnz
jno
add
repz
jns
inc
jns
out
mov
mov
mov
fisttps
cmc
xchg
aas
repnz
mov
fwait
or
test
je
addl
out
loopne
fiadds
add
mov
aas
shrb
aas
mov
or
jbe
repz
and
cmc
cmp
repnz
jge
mov
hlt
adc
and
test
rcrl
sub
lea
dec
push
adc
es
popa
mov
mov
pop
xchg
idivb
mov
in
mov
dec
cmp
pop
add
mov
xchg
xlat
xor
push
jmp
and
push
ds
jg
push
pop
xchg
add
test
ret
jmp
cld
pop
push
es
outsl
xor
fs
jb
mov
push
sbb
cmpsb
mov
jnp
cmp
loope
out
mov
in
add
testl
loope
test
adc
sbb
test
nop
mov
jmp
mov
pusha
in
mov
ljmp
and
repnz
das
inc
xor
pop
jg
out
push
cmp
sahf
push
insb
loopne
jg
fnstsw
dec
add
in
gs
rorl
xor
xchg
nop
scas
mov
pusha
xchg
arpl
daa
mov
or
mov
ljmp
sbb
ja
jmpw
push
aas
sub
pop
jl
outsb
inc
notl
mov
pop
clc
pop
popa
xlat
adc
or
das
stc
sbb
mov
flds
fisttpl
sar
cwtl
add
lds
lahf
popa
or
sub
outsl
sbbb
add
mov
repz
js
push
push
push
pop
mov
imul
nop
push
push
xchg
and
and
lahf
fildll
inc
dec
add
push
and
cmpl
mov
dec
sub
pop
mov
leave
cmpl
ja
pop
xchg
and
xchg
mov
repnz
xchg
mov
mov
xchg
data16
insl
shlb
outsb
push
mov
rcll
mov
push
add
mov
pop
xor
or
mov
jae
mov
and
pop
cld
mov
inc
pop
loop
into
jmp
ret
movsb
pusha
or
mov
popa
push
xor
fcompl
cli
scas
imul
cmp
bound
fs
xchg
adc
sti
mov
adc
and
cwtl
jb
cs
stos
xor
mov
and
xchg
in
mov
notl
sbb
stos
rol
add
int3
popa
imul
stc
pop
scas
jo
ror
mov
data16
push
push
dec
negb
lock
dec
popf
test
repnz
mov
insl
jne
jne
mov
pusha
or
test
je
xchg
mov
xchg
mov
movsl
jge
dec
sbb
push
outsb
enter
mov
xchg
mov
into
cmp
sbb
dec
lcall
sarb
jmp
aam
xchg
cld
popa
pop
and
sbb
xchg
lods
dec
gs
stc
lds
fwait
jbe
sub
in
push
mov
push
cmp
hlt
jge
xchg
add
mov
xchg
out
stos
xorb
cwtl
imul
sbbb
js
aas
xchg
mov
add
movsb
fs
out
out
sbb
dec
cmp
xor
cmp
sbb
insl
push
and
or
movsb
adc
cmp
insl
xor
jp
mov
adc
or
loop
cmp
subb
fisttps
scas
mov
jne
cmp
pusha
adc
mov
mov
add
xchg
inc
sbb
sbb
stos
cmp
in
js
dec
arpl
aad
out
loopne
out
mov
ret
pop
stos
push
adc
cmp
lock
das
add
xchg
and
mov
or
popf
iret
fmuls
pop
incb
bound
mov
sub
sub
xchg
lret
jae
push
jae
push
cltd
stos
cltd
dec
add
push
jbe
adc
xchg
push
push
pop
and
outsb
mov
xchg
cmp
lds
sbbl
and
aad
std
xchg
pop
sbbb
sub
add
xchg
dec
mov
dec
ja
fildll
lahf
out
pusha
xchg
fidivl
mov
popf
insl
adc
fnstenv
pop
popf
int
shrb
xchg
mov
insb
jl
clc
pop
lods
push
or
xor
enter
js
sub
push
fsubrl
sbb
bound
xor
push
mov
cmp
int
pop
sbb
add
cs
gs
out
xchg
mov
mov
stos
mov
in
mov
cmpsb
imulb
int
sub
or
jae
rclb
in
stos
test
mov
cmp
or
and
mov
das
lods
push
mov
daa
lods
sbb
jl
add
inc
cmp
test
mov
daa
cld
or
popa
xchg
fisttpl
loopne
sub
in
test
ds
pop
mov
mov
push
data16
repnz
ror
testb
and
sub
add
cmp
sub
or
add
cmp
cltd
mov
aam
cltd
in
inc
sbb
sbb
cld
push
mov
xor
jmp
push
dec
pusha
fisttpl
push
or
enter
add
fdivrs
push
mov
add
out
gs
mov
icebp
js
mov
mov
xlat
test
push
stos
sub
xchg
push
out
ljmp
mov
jnp
aas
sbb
pushl
mov
xor
pop
jnp
push
into
cmp
add
shll
pushf
pop
sub
int
cmp
cmpsb
cmp
das
fs
pusha
mov
ds
jno
mov
js
jmp
int3
je
test
sbb
daa
mov
dec
call
adcl
push
mov
dec
pop
scas
aad
stos
sub
mov
sbb
push
lds
jno
cmpb
sti
loopne
dec
mov
cmp
and
cmp
neg
pop
mov
dec
test
dec
push
mov
add
inc
movsb
pushf
jb
pop
popf
or
out
cmp
xchg
cmpsl
es
add
push
rcl
xchg
mov
pop
xlat
out
add
push
popa
mov
add
xor
push
mov
fwait
movsb
andb
adc
mov
jecxz
pop
stos
cmpsl
adc
pusha
and
pop
jg
jo
iret
test
or
jnp
cmp
pop
nop
ja
mov
sub
pop
pop
lahf
adcb
mov
and
xchg
push
outsl
mov
dec
fnstsw
push
add
cmp
mov
pop
mov
and
cwtl
std
mov
call
aad
stos
lcall
cmp
mov
insl
stos
adc
push
lret
pop
adc
jmp
shrl
add
inc
jno
imul
xchg
push
push
mov
push
inc
ret
cltd
mov
or
inc
nop
push
pop
mov
sub
fcomp
das
cmpsb
pop
jo
inc
or
xor
insl
test
lea
xor
xchg
les
dec
sub
std
inc
inc
arpl
dec
add
cmp
dec
or
enter
addr16
jle
cmpsl
mov
std
lcall
mov
cwtl
xchg
xrelease
pusha
popa
jg
arpl
push
xchg
sbb
add
bound
movsb
push
test
das
aam
push
mov
add
sbb
xlat
arpl
addb
in
cs
aad
into
orl
dec
cld
repz
and
into
jle
mov
xor
sbb
sbb
sbb
jb
hlt
dec
dec
jmp
sub
aam
mov
int
xor
and
nop
dec
xchg
pop
inc
sbb
nop
mov
adc
push
cmpsb
jp
jns
sub
movl
loop
cmp
and
push
mov
out
fs
clc
pop
cwtl
cmp
push
inc
fnstenv
inc
push
xor
aas
stos
lods
sbb
aas
popa
add
add
add
scas
cltd
jg
xlat
nop
call
mov
mov
rcll
clc
int
popf
roll
dec
sbb
jae
das
fstps
add
jmp
xor
mov
ds
add
jmp
fisttpll
lods
sub
add
push
inc
call
sbbb
add
hlt
ljmp
jb
pop
cmp
dec
lds
stos
jae
push
sar
pop
jbe
lret
aad
adc
aas
mov
push
fisttpl
test
dec
cli
mov
pusha
sub
adc
popf
mov
push
out
sbb
sub
addr16
ds
mov
outsb
xchg
leave
mov
in
push
push
sbb
xor
rclb
mov
sti
fidivrl
xchg
pop
lods
pop
mov
or
daa
adc
mov
inc
popa
loope
push
daa
jbe
nop
xchg
mov
popf
sahf
inc
or
popf
xchg
movsl
and
aad
mov
leave
sbb
jmp
fsubp
mov
push
push
inc
or
mov
insl
add
fs
shll
fnstcw
lahf
xchg
icebp
xor
and
add
push
push
lea
jne
cmpl
mov
clc
cmp
popf
enter
outsb
sbb
sub
or
pop
mov
gs
jge
clc
fsub
insl
push
or
mov
call
sbb
adc
stc
cltd
and
loope
mov
sbb
mov
repz
jae
sub
js
lock
mov
dec
gs
daa
pop
or
pusha
xlat
mov
arpl
dec
add
and
xor
xchg
in
out
rcll
cmp
xchg
dec
scas
xchg
daa
call
loopne
test
jo
mov
icebp
adc
fwait
lds
leave
adc
ja
out
imul
jb
pop
add
push
add
dec
idivb
or
imul
pusha
outsl
mov
add
mov
push
std
roll
xor
je
out
sbb
leave
call
push
fdivrs
mov
mov
icebp
sbb
imul
test
insb
hlt
call
push
jmp
xchg
sbbb
in
lcall
mov
mov
fs
lods
mov
jb
cmc
push
xor
push
rorb
fmull
mov
mov
fcoms
dec
cs
cmp
mov
mov
sahf
repz
imul
es
fisubrl
aaa
enter
lods
jnp
js
mov
testb
dec
shlb
pop
cmc
jg
in
clc
outsl
and
xchg
inc
jge
mov
jbe
sub
mov
dec
pop
lea
sub
dec
test
ds
mov
mov
lret
js
xchg
dec
inc
adc
mov
push
mov
jl
fildll
mov
add
xchg
leave
inc
test
add
adc
rcrl
pop
aad
iret
bound
pushf
add
xchg
enter
mov
pavgw
ret
push
jge
ret
jae
ja
jle
push
shlb
pop
push
or
pop
movsl
scas
sub
pop
add
mov
jne
and
or
sarb
daa
fiaddl
icebp
outsl
mov
movsl
stos
dec
loopne
jmp
sub
ja
inc
shrb
dec
cmc
fildl
popa
cmpsb
sti
cmp
xchg
enter
sbb
pop
cmp
imul
in
cltd
mov
stc
mov
sub
orb
add
sub
mov
mov
mov
adc
inc
inc
inc
out
mov
cmp
arpl
add
or
and
add
scas
fwait
or
divb
lea
outsb
lahf
pop
xchg
pop
mov
call
jmp
call
add
pop
icebp
jno
in
push
pop
test
pop
int
inc
sub
mov
cld
sti
sarb
mov
fldt
sti
loopne
add
sub
in
lret
popf
jg
sahf
clc
scas
imul
adc
fadd
xchg
mov
dec
stc
rcr
les
xchg
rolb
push
mov
pusha
jmp
inc
das
or
out
mov
and
lods
xchg
sub
mov
add
adc
in
xchg
out
mov
mov
push
push
dec
mov
push
das
jo
or
sahf
add
add
mov
mov
fcmovu
and
sub
pop
das
push
rcll
ds
mov
push
and
push
sbb
jle
jns
data16
andb
add
xchg
mov
jo
dec
inc
push
add
movsb
mov
adc
add
sarb
scas
repz
popf
cmp
mov
and
icebp
xchg
fwait
bound
test
adc
or
adc
pop
mov
lret
imul
mov
dec
dec
int
xor
add
repnz
ja
sub
pop
pushf
push
sub
jmp
pop
daa
cld
xchg
je
jb
sbb
mov
test
lods
andl
cmpsl
int3
jo
fidivl
add
clc
in
inc
testl
idivb
mov
std
lea
dec
sub
xor
sub
movsb
ss
push
sbb
jg
push
shlb
or
stc
cmpb
xchg
mov
jne
outsl
loope
ds
xchg
sub
cmp
mov
fs
movsb
mov
test
dec
pop
xchg
push
mov
push
pop
sub
adc
lret
mov
jo
inc
xor
repnz
xchg
mov
mulb
mov
cmp
push
xor
pop
in
xchg
je
fs
sti
divb
sbb
cmp
or
gs
xchg
out
and
nop
push
sub
mov
mov
adc
add
movsl
and
aad
pop
outsb
inc
add
rdtsc
push
cmp
scas
xor
dec
add
mov
punpckhdq
bnd
decb
mov
jb
or
mov
fisttps
test
push
rorl
mov
push
push
lock
pop
popf
and
andb
jnp
jo
roll
inc
ret
dec
cmc
cmpsb
dec
loope
movsl
or
push
cmp
fs
and
pop
mov
xorb
or
add
das
in
cmp
and
xor
shll
sti
lods
cmc
imul
adc
lea
es
pushf
pop
pop
mov
std
leave
pop
jns
adc
inc
sar
push
aas
cmpsb
add
add
nop
scas
insl
adcb
scas
push
mov
ljmp
inc
sub
fildll
mov
ret
mov
in
sub
popf
jns
ret
or
test
mov
or
stc
andb
cmc
sbb
pop
cli
add
lea
jo
add
aas
add
aad
xor
stos
jb
jb
orb
adc
jb
in
arpl
loopne
push
cmc
dec
pop
mov
add
xor
lahf
inc
sbb
jmp
outsb
jns
push
dec
stos
and
xchg
loopne
popf
add
sahf
into
sbb
test
rorl
pop
ljmp
push
addb
and
push
push
pop
pop
or
enter
jle
lret
sub
clc
mov
ds
cmp
fnstsw
movaps
mov
pxor
mov
test
xchg
popf
rorb
test
sub
inc
mov
ja
mov
test
subl
mov
hlt
jae
sbb
movsb
stos
xor
mov
or
or
movsb
jnp
xlat
sbbl
shl
negb
lods
bound
dec
dec
or
not
inc
sbb
scas
dec
outsl
sub
dec
data16
sbb
aam
insl
sub
lea
out
dec
mov
ffree
out
xchg
cmp
fwait
mov
stc
dec
sbb
xchg
or
daa
push
cld
das
fimuls
imul
cmp
mov
popf
push
mov
fldt
mov
fstps
inc
sbb
inc
cmpsl
xor
jo
je
push
xchg
sbb
int
cmp
cs
or
ja
add
cmp
adc
and
sahf
imul
out
es
nop
mov
ja
andl
stc
cmpsl
dec
mov
mov
xchg
mov
inc
xchg
scas
imul
test
push
mov
push
adc
mov
dec
dec
pop
push
out
lock
jbe
mov
jb
iret
arpl
stos
mov
push
xor
push
cli
mov
repnz
cwtl
imul
inc
push
cli
mov
stos
das
out
bound
lcall
nop
mov
sbb
add
out
jae
adc
clc
adcb
jg
int
push
imul
ficompl
push
dec
in
sbb
cmp
dec
sti
loopne
cwtd
cmp
hlt
mov
lods
add
inc
cmp
add
lcall
dec
insb
je
into
add
add
mov
and
pop
xlat
dec
stc
imul
mov
clc
xchg
mov
pop
aaa
dec
pop
enter
imul
jg
pop
loope
sbb
jo,pt
add
sbb
dec
and
out
sahf
arpl
leave
pop
mov
inc
sub
adc
imul
int
rorb
cmp
xchg
xchg
push
dec
or
cli
in
movsb
and
dec
loopne
cmc
cmp
push
sahf
pop
cltd
push
pop
mov
insl
mov
pop
lahf
adc
ja
mov
test
call
cmp
testl
hlt
fisttps
sub
and
cwtl
in
mov
push
inc
jne
out
mov
ror
push
push
push
cmp
sbb
je
pop
cli
scas
sub
rdtsc
outsb
in
push
rcl
rcr
incb
std
orb
jge
pushl
lret
faddp
sub
stos
repz
mov
stos
jb
in
mov
xor
jae
adc
pop
mov
insl
ds
je
xchg
sub
cmp
cmovle
sarb
or
inc
je
cmp
inc
stc
and
pop
loope
and
pop
jecxz
stc
dec
jge
add
addr16
out
jb
sbb
leave
mov
fmuls
add
mov
divl
jmp
adc
xchg
stos
and
push
jbe
mov
mov
cmpsl
iret
add
call
aaa
push
aam
jmp
and
mov
xor
rolb
mov
mov
das
pop
sbb
repz
xchg
add
aad
mov
out
adc
stos
outsb
cmpsl
add
and
add
adc
pop
jb
ret
push
loop
shr
mov
int
leave
divb
mov
and
sti
dec
stc
mov
lods
push
mov
push
pop
sbb
add
lcall
cmpsl
add
dec
fists
data16
mov
jae
sub
insl
test
stc
bound
dec
cmp
loopne
jbe
adc
jp
xchg
mov
mov
xchg
test
jae
shll
jmp
and
xorb
sub
adc
push
push
repz
xor
pop
mov
sbb
jl
lret
js
or
xor
sbb
mov
fsts
es
xchg
fimuls
scas
or
rcrl
inc
mov
jnp
adc
add
jp
add
cltd
sub
mov
sbb
das
sub
adc
push
pusha
leave
repz
xchg
je
sarl
mov
xor
jl
inc
sub
ja
mov
lea
sbb
cmp
pop
test
loopne
pop
popa
add
push
stos
test
testb
sbb
mov
cs
push
and
adc
addb
lods
push
ret
stc
cmp
fimull
mov
dec
jmp
jbe
call
adc
add
cld
cmp
aad
cmp
push
mov
outsb
fcomi
pop
push
sbb
jno
add
imul
adc
outsl
dec
add
test
sarl
sub
xchg
xor
cmp
push
sub
rclb
fildl
clc
cmp
xchg
pop
inc
dec
and
mov
dec
jge
outsb
int3
pushf
movsb
add
cmp
mov
push
xlat
iret
jecxz
ljmp
cs
popa
xor
push
das
test
add
inc
cmp
or
mov
shl
push
aam
pop
sbb
dec
fldl
lea
adc
mov
push
push
sbb
call
xor
imul
mov
outsb
sub
loop
pop
out
sub
cmp
leave
mov
outsl
dec
dec
inc
hlt
xchg
je
movsl
jb
mov
call
mov
add
out
mov
loop
mov
mov
lea
insb
mov
jo
cmp
not
stos
adc
fucomip
add
lods
dec
movsb
xlat
inc
sub
jne
sbb
jns
mov
outsl
dec
sarb
ret
mov
add
loop
jae
arpl
inc
xor
aam
nop
test
fstps
jp
cmp
xchg
and
pushf
sub
shr
pusha
adc
mov
pop
les
jmp
jmp
rep
adc
add
outsb
cmp
int
sbbl
mov
insb
test
add
jmp
test
sbb
adc
popf
jns
inc
pop
lcall
mov
xchg
add
xchg
jmp
loopne
ss
add
xchg
arpl
push
mov
push
add
shlb
lock
or
inc
add
imul
jp
mov
add
fisubrs
lock
cwtl
in
cld
push
push
insl
mov
ja
pop
insb
sti
adc
or
sub
push
add
ljmp
mov
test
test
scas
stos
add
popf
movsl
sub
push
ret
in
sub
jo
adc
and
add
inc
or
ret
stos
xor
pop
out
mov
test
subl
push
pop
jg
loop
stos
or
cmc
jmp
push
fucomp
aad
in
mov
in
sarb
fwait
dec
inc
inc
add
inc
sarb
stos
dec
pop
add
imul
insb
add
jecxz
add
dec
addr16
sub
mov
add
ret
jle
dec
or
jmp
add
sbb
outsl
adc
push
pop
nop
cli
or
jae
iret
rolb
fidivs
xor
scas
mov
pop
sti
sbb
mov
daa
xchg
pop
lcall
call
hlt
data16
adc
xchg
and
push
cmp
daa
lret
loopne
out
cmp
or
mov
dec
scas
sub
mov
push
push
subb
in
shlb
hlt
mov
rclb
dec
xchg
ja
test
add
sub
push
add
dec
lcall
jecxz
pusha
add
add
adc
inc
pop
roll
hlt
lahf
add
pop
mov
jno
enter
xchg
clc
push
movl
or
movsl
adc
jns
xor
popa
lret
cwtl
jmp
mov
icebp
jmp
fsub
cli
mov
nop
aad
leave
repnz
mov
fisubl
dec
add
or
lock
mov
pusha
insb
lods
push
jne
add
frstor
xchg
jo
inc
pop
add
andl
in
sub
jnp
add
lods
mov
in
stos
fistl
pop
xor
lcall
inc
stos
movsb
cs
andl
cmp
mov
rcr
jns
mov
xchg
pusha
cmpl
cmc
pop
cmp
add
mov
mov
add
sub
sbb
cli
ret
fimuls
in
filds
lret
jg
dec
and
jns
lds
mov
repnz
pop
decb
outsl
mov
adcb
loop
shll
idivb
pop
cmp
push
jge
jae
push
lahf
cltd
push
jo
add
cmpsb
enter
add
loope
into
mov
lcall
xchg
adc
mov
pop
pop
dec
cmp
add
mov
test
testb
mov
cwtl
mov
insb
fisubrs
fdivl
add
push
mov
sub
mov
loope
dec
adc
adc
push
xor
xchg
pop
and
pop
lock
mov
adc
mov
dec
jl
dec
leave
add
adc
sbbb
xchg
mov
mov
push
add
shl
loopne
or
lret
mov
rcll
cwtl
and
cmpsb
sub
jbe
push
cli
loope
hlt
push
add
dec
xchg
ss
sub
movb
flds
inc
push
jbe
mov
add
xor
mov
les
sbb
movb
int
adc
loope
orb
push
out
add
aas
push
ljmp
sbb
jmp
iret
mov
mov
mov
fcoms
inc
das
lcall
shlb
add
push
add
mov
lock
sub
push
inc
sbb
xlat
dec
xor
das
mov
add
out
sub
xor
jge
dec
cmc
push
scas
pop
arpl
add
inc
sbb
pop
and
incl
insl
push
push
push
data16
mov
add
push
sbb
mov
xor
add
add
push
pop
mov
sbb
add
add
inc
add
aam
repz
and
adc
or
push
cwtl
mov
sbb
iret
or
popf
add
add
std
mov
sub
or
jo
add
jecxz
xchg
pinsrw
ret
mov
fmul
and
xor
push
push
add
sbb
inc
xchg
sbbb
loope
push
into
pop
jnp
sub
xchg
adc
pop
ret
pop
jge
pop
jb
mov
je
test
sub
cmpb
sbb
aad
movl
decb
fwait
xor
sbb
insl
push
filds
sbb
mov
cmpsl
xchg
xor
mov
adc
mov
jg
push
es
nop
add
into
dec
subb
dec
dec
mov
sti
cmp
adc
fiadds
mov
cwtl
notl
dec
cmp
fwait
jne
adc
leave
pop
cmpb
mov
repz
push
and
roll
jl
sbb
call
aam
mov
adc
int
out
mov
and
scas
xor
mov
mov
jb
xchg
jb
adc
mov
add
push
leave
jg
cmpsl
ret
bound
lcall
ror
pop
add
std
jp
jnp
push
xchg
dec
and
movsl
je
adc
add
enter
test
push
jg
mov
popf
pop
sub
and
or
stc
shrb
sbb
adc
xor
bnd
pushf
andl
add
das
rcrl
rcrb
dec
jb
add
pop
jg
mov
add
inc
imul
mov
cmp
mov
mov
fs
clc
xchg
push
loope
out
fistpll
lret
sub
sbb
stc
and
adc
sub
sbb
sbb
flds
mov
pop
out
and
imul
lods
mov
cs
lcall
xor
pop
and
jno
add
or
iret
fwait
in
dec
add
inc
cwtl
fsts
dec
or
lret
adc
or
mov
mov
cs
jno
orb
inc
mov
pop
push
js
mov
mov
mov
add
testl
lods
arpl
push
fs
sub
insb
mov
cwtl
test
aaa
xchg
sbb
lock
orb
ret
and
icebp
add
inc
popa
mov
add
pop
daa
xchg
sti
push
mov
test
and
dec
mov
mov
aad
add
push
and
add
dec
mov
andb
and
test
mov
stc
add
push
ret
aam
push
add
mov
icebp
mov
xorl
sarl
dec
pop
sbb
jecxz
rclb
pushf
xchg
add
call
mov
add
add
cli
jae
add
mov
xchg
js
in
inc
ljmp
mov
push
sub
clc
add
mov
out
leave
add
ds
or
xchg
movsb
gs
inc
shlb
pop
jmp
or
cld
add
xor
loope
mov
jns
imul
clc
lret
inc
cwtl
jbe
cmp
pushf
movsl
xchg
mov
jne
mov
repnz
xorb
aaa
pop
sbb
sahf
mov
not
cmp
lds
dec
mov
push
aam
add
mov
add
rcll
cli
adc
mov
shr
mov
add
mov
ficompl
mov
outsb
aaa
xchg
enter
xor
sahf
add
loop
pop
xchg
stos
or
sbb
scas
cs
jns
xor
insb
xchg
cld
sbb
ds
dec
ret
push
sbb
adc
ret
ja
pop
and
or
adc
xor
adc
and
sbb
sbb
pushf
adc
cs
jo
mov
sub
ds
mov
pop
dec
inc
xor
pop
sbb
xor
or
add
mov
lret
jbe
push
faddl
mov
push
sbb
inc
sti
or
mov
mov
add
jae
xor
cmp
add
sbb
jle
push
add
pop
xor
jle
mov
inc
sub
and
cmp
inc
ljmp
pop
pop
cmp
fiadds
mov
add
leave
xlat
fsubrp
leave
shrl
loop
fstl
inc
or
or
jmp
add
sti
scas
stc
ljmp
or
xchg
mov
add
mov
cli
add
imul
dec
cmp
push
push
adc
xchg
cmp
sub
and
out
pop
push
add
mov
sarl
add
adc
mov
addr16
push
adc
mov
seto
punpckhwd
jl
inc
mov
inc
test
repnz
mov
adc
lods
lcall
pop
pop
test
xchg
cmp
nop
aam
cli
and
mov
movsb
les
xchg
mov
shl
pop
dec
test
inc
add
lock
cld
inc
dec
mov
push
add
rol
jge
pop
aad
sbb
and
out
rclb
sub
adc
inc
fimull
ja
subb
faddl
mov
jl
add
sub
aad
pop
add
sti
repz
test
dec
cmp
mov
mov
es
shr
cwtl
mov
shlb
cmpsb
pop
add
stc
xor
xchg
pop
in
es
decb
ljmp
or
add
and
repz
jle
pop
in
push
jnp
xor
stc
push
mov
add
fldt
stc
add
adc
cs
xlat
cmpb
pushf
arpl
mov
or
popf
movsl
daa
and
faddl
adc
test
pop
decb
add
loopne
inc
push
int3
addb
mov
xchg
in
popf
fisubrl
push
jmp
smsw
test
inc
and
into
je
test
sub
add
inc
ret
sbb
mov
inc
faddl
js
add
jl
ficoml
aaa
test
push
cmpl
jl
or
sub
push
pop
add
in
imul
cmp
and
inc
xor
mov
push
addr16
int
ja
add
cs
popa
adc
cmp
mov
inc
add
pop
pop
pop
not
xor
cmp
scas
cmp
jle
rclb
mov
mov
jmp
add
xor
jg
mov
mov
or
jne
jmp
jecxz
cmp
enter
xchg
sbbl
add
or
xor
mov
xchg
inc
ret
divb
adc
lea
sti
xor
stos
xchg
jp
jmp
pop
mov
add
and
stc
mov
sbb
cmp
sub
outsl
or
and
pop
or
inc
push
pusha
loop
push
enter
push
stc
ret
mov
das
aaa
push
je
fsubp
out
adc
outsl
push
or
stc
stc
mov
cmpl
test
jecxz
aam
hlt
push
xchg
xchg
add
adc
lods
call
xchg
and
push
add
hlt
jg
je
inc
fwait
gs
ss
cmpsl
ja
pop
addr16
lea
or
leave
sub
fdivrp
mov
adcb
jne
jae
sub
fildll
dec
fldcw
mov
add
shl
jp
cmp
and
lods
movsl
test
xchg
jae
ficomps
add
hlt
rcrb
aas
mov
aam
call
das
rcrl
pop
pop
jmp
lcall
enter
sub
movsl
lods
jle
aam
loop
add
mov
xor
adcb
mov
mov
xor
mov
mov
inc
and
add
mov
movsb
mov
add
xorb
pop
decl
mov
scas
add
push
pop
jle
pop
add
movsl
pop
iret
adc
das
inc
xchg
in
or
push
hlt
das
jne
in
adc
xor
push
mov
and
outsl
and
jg
addl
fisubrs
xchg
fdivrs
and
add
loope
cmpsb
dec
repnz
mov
mov
push
xor
fiaddl
inc
xchg
mov
pop
popf
lahf
jb
lahf
rep
pop
sbb
add
jle
xlat
outsl
push
lods
pop
orb
dec
and
mov
sub
lea
cli
xor
xor
lea
incb
dec
insb
lods
cwtl
or
mov
push
mov
testb
push
push
mov
bnd
leave
js
fcoml
or
fs
ljmp
out
lahf
repnz
mov
leave
xor
dec
add
lret
inc
cmc
sub
call
enter
add
mov
mov
shrl
aaa
or
push
or
jno
outsl
mov
adc
imul
lea
mov
inc
sub
xor
adc
shlb
inc
aas
std
add
mov
jg
push
mov
call
adcb
stc
pushf
pop
je
das
xor
cltd
cmpsl
jne
sub
pop
pop
mov
pop
repz
inc
addb
out
adc
add
mov
mov
mov
stos
inc
pop
dec
lods
or
mov
sarl
sub
inc
inc
fwait
pop
push
nop
add
in
add
add
xor
cmp
mov
and
leave
nop
ds
cmc
out
lock
mov
inc
in
push
bound
xor
pop
jge
cmp
mov
jo
mov
add
add
stos
stc
out
xchg
and
stos
sub
flds
sbb
inc
pop
add
out
cmp
lods
incb
jmp
or
mov
mov
sbb
int
and
add
inc
cmp
or
out
jle
add
loopne
add
sub
pop
push
sub
les
scas
lods
mov
adc
push
popf
in
and
xor
cld
into
outsl
ja
int
sub
push
and
push
inc
push
or
jnp
lods
pop
iret
xchg
push
das
dec
push
in
dec
call
aam
mov
aam
add
push
sbb
mov
int
pop
dec
push
mov
cmpsl
xchg
mov
and
les
mov
adc
dec
push
lock
stos
das
add
out
pop
sub
repnz
lahf
lock
fdivrs
cs
cmc
mov
out
int3
repnz
or
dec
test
dec
push
or
popa
pop
push
scas
lcall
jmp
sbb
and
inc
jns
adc
cwtl
roll
bound
shll
jmp
jae
std
shrb
sub
inc
jmp
xor
pop
stc
pop
inc
clc
inc
out
xor
sbb
pop
clc
mov
and
jo
mov
loopne
push
adc
roll
xchg
and
jg
xchg
sub
adc
push
mov
mov
pop
cmc
xor
pusha
mov
lods
mov
popa
mov
daa
xchg
popa
add
sbbb
lods
push
int3
enter
mov
lret
xor
mov
test
jge
xor
outsb
push
add
lock
mov
push
add
jo
lret
aaa
add
add
out
jp
add
and
xchg
mov
push
mov
rolb
cwtl
sbb
mov
xor
mov
or
aaa
xor
outsl
lods
fsubl
cmc
mov
int
push
mov
addl
repnz
push
sub
sub
jb
add
js
pop
xchg
das
add
add
aaa
mov
mov
popf
jae
lds
add
inc
mov
mov
sbb
or
mov
dec
lods
fiaddl
sbbl
sbb
mov
or
push
cld
cmp
push
xor
jl
push
mov
popa
jne
adc
pop
int3
inc
jno
add
and
sub
mov
mov
adc
cmc
pop
inc
popa
not
push
xor
std
sub
mov
sbb
inc
hlt
add
xchg
icebp
inc
stc
mov
and
jg
push
mov
jo
sbb
push
add
sbb
and
cli
lods
test
mov
dec
mov
mov
pop
push
std
adc
xchg
or
jp
dec
test
or
bound
add
sbb
xor
stos
mov
repz
popa
js
enter
xor
mov
es
cmp
mov
pushf
nop
mov
cmp
jae
xor
add
mov
mov
lods
xlat
jne
icebp
sahf
mov
sbb
into
mov
pop
and
adc
popa
nop
add
mov
xlat
push
aaa
mov
xchg
sub
and
sahf
xor
sub
cmp
and
adc
add
push
xor
je
hlt
add
dec
jae
xor
xlat
popf
adc
dec
test
mov
sbb
xor
stos
rol
fsub
mov
cwtl
jecxz
fwait
mov
gs
in
ret
jle
cmp
xchg
push
out
mov
icebp
cli
int
lret
out
inc
fsubl
cld
jns
mov
imul
pusha
mov
cmp
push
mov
mov
in
mov
cmp
add
jp
icebp
mov
xchg
and
int3
cmp
fsub
outsb
push
lock
push
and
cmp
subb
mov
popa
subb
repnz
or
or
lods
ficompl
adc
sarl
sbb
xchg
lcall
pusha
dec
mov
mov
inc
mov
mov
stc
popa
mov
dec
in
nop
dec
movsl
daa
bound
xor
and
mov
and
pop
mov
insb
jbe
fiadds
shrb
pop
inc
fisubl
mov
je
rcrb
xor
jns
dec
or
incb
or
adc
jl
subb
mov
cmpsl
hlt
call
leave
pusha
or
mov
sub
loopne
xchg
jge
test
movb
mov
pop
jmp
mov
jmp
dec
cmp
dec
or
mov
das
test
movsl
push
xor
dec
adcl
sub
or
aaa
cmp
inc
jno
pop
fwait
test
adc
mov
mov
inc
xchg
and
je
adc
inc
push
fildll
loopne
shrl
cli
es
orl
push
in
test
popf
rcr
mov
push
xor
lcall
cmpsl
outsb
mov
outsl
hlt
psraw
cld
stc
pop
outsb
pop
add
stos
sarb
xor
add
shll
dec
fsubrl
sub
das
mov
das
adc
cmp
jmp
pop
jae
or
shlb
leave
jbe
adcb
repz
sub
add
xor
dec
cmp
call
cmp
les
and
scas
call
cwtl
xor
sarb
rcrl
and
inc
dec
adc
cld
sbbb
sub
popf
adc
pop
pop
jnp
adc
or
repz
add
xchg
imul
jnp
int
mov
popa
xchg
pop
lock
xor
mov
hlt
add
insb
cmpsb
pop
in
mov
popf
adc
das
pop
add
cmp
xor
je
push
mov
add
jno
stos
cmp
stc
sub
or
sub
sbb
pop
mov
push
test
lahf
sub
xchg
pop
pop
mov
jno
cmpsb
out
dec
daa
je
fs
xor
jbe
and
xchg
xor
stos
enter
stc
pusha
mov
cmp
stc
icebp
loop
fnstsw
push
jae
add
mov
cmp
xorb
nop
fldl
out
pop
insl
int
fdivrl
mov
adc
pusha
and
mov
fwait
dec
loop
push
pop
movsl
mov
inc
sub
negb
xchg
stc
mov
jnp
pop
pop
mov
pushf
lea
mov
add
insb
mov
test
gs
xor
add
push
or
mov
gs
add
push
es
and
and
push
inc
sbb
xor
loopne
subl
bound
xor
insl
sub
jmp
sub
cmc
outsl
lea
icebp
xor
in
lds
push
inc
or
and
cmc
and
neg
sbb
mov
inc
xchg
ja
jg
sti
insb
push
rorl
sub
fstps
sar
xor
push
pop
pop
cmp
testl
addr16
xchg
mov
cs
lret
and
js
scas
add
or
ret
adc
sub
or
rorb
mov
ljmp
mov
and
shl
adc
mov
or
enter
repnz
pop
mov
sub
xchg
cmp
sbb
sub
jbe
push
sbb
stc
lahf
mov
xchg
mov
add
adc
daa
ja
sub
testb
xlat
add
daa
cltd
add
pop
fidivl
add
pop
dec
into
or
icebp
mov
dec
ljmp
sar
jns
jp
dec
popa
int3
cmp
shl
sub
pop
loopne
lods
pop
adc
sarl
cmp
loopne
mov
push
inc
jbe
cli
jno
push
pop
js
addl
aad
mov
pusha
add
arpl
test
lea
arpl
fdivs
push
aaa
fstpl
inc
mov
sub
inc
fnsave
dec
jecxz
icebp
mov
outsb
je
mov
add
jne
call
clc
lret
and
add
add
fistl
add
dec
inc
dec
mov
add
cmp
xchg
fnstsw
scas
add
cld
mov
clc
lock
inc
es
sub
out
xlat
push
dec
jp
pusha
loop
arpl
xchg
daa
mov
mov
mov
inc
hlt
push
jmp
pop
mov
pop
lods
lock
mov
shll
mov
sub
pusha
sub
dec
movsl
push
add
cli
xor
pusha
pop
popf
aaa
addb
mov
xchg
jmp
mov
stos
add
push
add
push
add
mov
rorb
mov
lcall
mov
mov
lods
inc
add
loopne
test
adc
or
mov
pop
testl
jbe
imul
dec
sti
mov
xlat
mov
push
adc
in
mov
push
xchg
pusha
cwtl
mov
paddb
out
lahf
dec
addl
and
out
pop
aas
out
int3
sbb
lock
push
mov
adc
mov
push
data16
adc
fisttpll
cltd
icebp
jae
push
test
scas
jne
xchg
mov
adc
ljmp
add
add
cmp
pop
jp
fimull
fsub
xchg
add
xor
sbbb
adc
sub
lock
or
xlat
loope
jle
dec
hlt
stos
mov
xlat
jae
out
clc
pop
inc
ds
sbb
inc
ret
rcrb
test
test
sbb
pop
xchg
mov
andb
xchg
cmp
andb
pop
std
push
add
jae
xor
sbb
push
pop
pop
test
inc
or
jne
push
jnp
push
fistl
mov
mov
movsl
scas
mov
sbb
add
push
cld
sub
neg
jns
imul
cmpsl
sahf
inc
aam
cmp
or
add
or
push
and
mul
pop
rcrl
mov
xchg
push
mov
mov
jmp
inc
xchg
push
inc
mov
leave
orb
jns
cmpl
mov
add
jge
cmp
sbb
xchg
or
dec
add
and
mov
sub
ds
add
add
cltd
cld
sub
mov
push
pop
dec
ret
adcb
scas
adc
jmp
mov
orb
das
inc
lcall
lahf
xchg
pushf
adc
push
jl
push
bound
orb
cs
lock
jo
xchg
out
jo
push
jo
push
xchg
clc
dec
push
fdivrl
inc
stc
and
out
ficomps
xorw
inc
jb
and
das
inc
push
jmp
dec
xor
fs
push
andl
popa
inc
call
les
and
sub
pop
sub
push
jge
cld
cmpb
sti
addr16
add
shlb
push
or
cmpl
mov
movb
add
std
incb
xor
loop
outsl
dec
mov
add
push
push
mov
jge
xorb
mov
inc
dec
mov
xor
sbb
dec
mov
xchg
cli
or
lods
or
add
jmp
inc
and
je
inc
inc
cmp
in
adc
lcall
data16
sub
mov
int
cmp
adc
mov
cmpl
xor
imul
inc
test
std
inc
lods
arpl
mov
cwtl
lret
mov
ret
shr
mov
jmp
mov
clc
mov
mov
ror
addb
add
add
jmp
test
or
mov
push
add
or
fimuls
rcrb
sbb
mov
into
sarl
pop
cmp
lret
xor
xchg
test
roll
cltd
out
dec
fistpll
test
fwait
xchg
imull
test
or
fisttpl
pop
jmp
inc
enter
sub
sub
filds
or
in
mov
add
or
mov
adc
or
lea
push
xchg
nop
and
or
jne
sahf
xor
adc
insb
jmp
mov
jle
xor
mov
or
sbb
dec
and
out
jg
xchg
adc
sbb
xchg
pop
add
idiv
dec
mov
push
push
fadd
subl
inc
sbb
xor
cmp
and
mov
add
hlt
add
push
sbb
std
inc
xor
or
test
pop
pop
rol
leave
ret
pusha
sbb
mov
mov
add
jbe
add
sbb
mov
inc
adc
jne
jmp
pop
sub
sbb
rcrl
pop
add
pop
xorb
jbe
jo
mov
loopne
jmp
enter
pop
sbb
inc
cmp
push
xchg
ret
mov
rcll
sbb
pop
sbb
add
and
jnp
bound
adc
add
out
test
int3
mov
mov
dec
and
adc
mov
xor
nop
and
mov
pusha
mov
inc
push
aam
mov
out
inc
popl
loop
ret
incb
sbbb
enter
pop
repz
xlat
pop
aas
clc
cmpb
add
or
es
pop
push
adc
movsl
cmc
incb
fwait
mov
or
ret
mov
cmpsl
mov
xor
jle
aaa
hlt
out
or
mov
jo
push
add
xchg
or
fdivrs
enter
adc
push
loop
jne
mov
mov
dec
inc
nop
adc
les
add
pop
mov
xchg
insb
pop
xchg
jns
sbbb
lahf
sbb
dec
or
push
andl
adc
adc
insb
pop
jmp
ja
pop
add
sahf
subb
fwait
ret
aam
enter
jno
add
imul
ret
add
inc
fsubrs
test
mov
jp
jo
jmp
int3
jle
add
ficompl
fucomip
repz
rcrb
add
xchg
xlat
data16
ret
sub
push
add
xchg
sub
mov
jmp
sbb
push
sbb
xor
push
add
loopne
js
pop
ljmp
int3
addr16
repnz
cmp
push
adcb
add
or
add
sbb
xor
bound
dec
mov
iret
inc
sbb
loop
xor
cmp
jo
fisubs
push
test
lock
add
ds
mov
sbb
fistpll
mov
stos
aam
cmp
jo
or
pop
fdivrl
out
mov
adc
call
lret
pop
add
ja
mov
stos
jmp
pop
popa
pop
mov
mov
cs
lock
pop
jb
and
adc
or
sarb
in
add
cmpsl
mov
mov
xchg
pcmpgtw
xchg
adcl
add
lds
mov
inc
xchg
sbbb
cmp
repnz
sbb
xchg
and
push
ror
jge
lock
jecxz
loopne
xchg
sub
loopne
aad
movsb
dec
mov
xsha1
cmpsb
or
mov
push
mov
cmpb
dec
mov
or
push
fsubr
nop
imul
xchg
push
add
rcrl
shr
add
jb
test
pushl
jg
xchg
clc
mov
shrb
pop
lahf
jle
bound
ljmp
js
lock
xchg
adc
cmpsl
mov
pop
test
jmp
mov
pushf
add
mov
sub
aas
adcb
imul
ljmp
aad
or
push
pop
add
hlt
inc
xor
sub
sub
les
push
pop
mov
pop
add
fcoml
mov
mov
lods
jbe
and
push
test
lock
fisubl
xor
sbb
mov
mov
pushf
cwtl
pushf
inc
jp
mov
ret
dec
in
push
dec
sbb
pop
frstor
xchg
adc
inc
jbe
lcall
sub
mov
mov
or
loop
sahf
js
jp
xor
in
loopne
ret
push
imul
lahf
test
clc
je
cmp
xor
call
inc
pop
in
fisttps
std
mov
mov
xor
mov
stc
sbb
adc
jne
jp
push
aaa
popf
leave
lret
rcl
xchg
fmull
repnz
les
fwait
aam
pushf
enter
es
pop
into
cmp
pop
arpl
adcb
das
in
pop
jae
hlt
dec
adc
mov
mov
cmp
add
call
fsubrl
repnz
mov
jg
push
loopne
jo
or
or
sbb
aaa
add
mov
insb
lret
jge
cwtl
sbb
push
shll
lea
icebp
push
sbb
sub
inc
pop
add
aaa
adc
add
fbstp
test
pop
pushf
repz
test
push
mul
jno
mov
mov
int
jmp
jp
jne
sar
xor
inc
jae
add
loop
cmp
jbe
cs
icebp
adc
fwait
clc
xchg
mov
add
pcmpeqw
out
inc
stc
fldenv
xor
clc
lods
add
pop
add
mov
jge
mov
rolb
hlt
sahf
ret
mulb
push
mov
arpl
jp
add
push
test
or
fistpl
pop
lcall
jl
sub
xor
js
add
adc
mov
xchg
push
fistl
mov
addb
dec
fsincos
inc
add
inc
arpl
add
test
roll
ljmp
or
mov
roll
sbb
cmp
pop
mov
push
repz
pusha
stc
and
mov
outsl
or
fidivl
fbld
push
push
xchg
pop
in
pop
cmp
dec
adc
faddl
lods
repz
inc
cmpsb
sub
jno
popf
push
mov
lahf
mov
and
in
cmp
add
sub
xorb
xchg
dec
cli
lds
test
jge
add
mov
jbe
jmp
test
mov
sbb
sbb
adc
pop
jl
mov
or
lret
adc
scas
test
mov
pusha
sub
call
notl
pushf
mov
push
mov
cmpb
or
xchg
and
lds
lret
adc
faddl
add
cmpsb
addr16
das
xor
add
divl
pushf
cmpsb
leave
adc
adc
leave
test
movsb
add
mov
scas
fdivrp
fistl
push
mov
shlb
cmpsb
push
inc
rolb
push
or
cmpsb
mov
jb
inc
dec
add
sbb
stos
pop
repz
push
inc
jno
jge
in
enter
notl
mov
cs
add
jmp
loop
shlb
leave
cmpsb
push
inc
orb
in
rcrb
aas
nop
imul
cmp
popa
shrb
jmp
pop
dec
je
dec
and
add
pop
test
mov
mov
shlb
pop
push
or
inc
and
fmull
add
inc
popf
pusha
mov
and
mov
mov
enter
push
scas
pusha
shl
mov
ds
push
aam
adc
xor
xor
test
pop
mov
cmpb
insl
jno
call
testb
mov
data16
adcb
jmp
cwtl
stos
or
pop
inc
push
sti
and
add
adc
xor
call
mov
jmp
xor
xchg
out
loop
mov
movsb
xchg
add
pop
xchg
jecxz
mov
xor
mov
sub
addl
enter
dec
xor
cmp
aam
in
out
cmpsl
and
sub
or
add
pop
jle
test
pcmpgtw
mov
and
pop
fimuls
cmp
xor
add
mov
xchg
dec
pmulhuw
pop
sbb
cmpl
inc
andb
test
add
lahf
sbb
adc
mov
pushf
xchg
sbb
xchg
ds
jno
jns
roll
add
in
fldt
repz
ljmp
sbbb
inc
ljmp
mov
jns
clc
add
sysret
stos
push
es
ss
push
test
mov
popf
mov
cltd
add
cmp
fwait
sub
jl
sub
mov
mov
sub
test
adc
jl
lds
dec
cmp
xchg
add
jl
add
mov
mov
clc
cmp
popa
cmp
negl
jae
std
dec
movsl
orl
js
fldlg2
mov
lds
jae
cltd
adc
leave
xor
push
add
pop
push
loopne
je
daa
pop
iret
jbe
inc
test
adc
xor
ret
inc
test
int3
pusha
jmp
outsl
add
mov
daa
xor
mov
add
loope
lea
xchg
mov
add
popf
sub
daa
and
shrb
add
mov
xor
mov
das
hlt
mov
push
cmpsl
mov
dec
adcb
repz
ret
pushf
sub
push
xor
adc
sub
xchg
gs
dec
pop
lods
add
add
inc
sbb
adc
repz
or
cs
push
xchg
mov
push
xlat
addr16
and
add
sbb
sahf
mov
rorb
sub
or
sub
clc
sbb
lea
pop
or
leave
inc
scas
add
shll
cltd
vpgatherdq
repnz
mov
dec
cld
out
sbb
or
movsl
pusha
dec
ljmp
add
jg
jl
cli
cltd
mov
xor
loop
and
mov
ja
rorb
iret
inc
insb
andl
add
inc
add
movl
push
dec
lods
mov
push
cmp
je
enter
add
imul
dec
scas
les
sub
in
fldcw
sub
xchg
repnz
jno
or
add
pop
add
nop
outsl
lret
add
mov
add
cmpb
data16
inc
push
cmp
jg
xor
dec
adc
sub
subl
lock
add
stc
stos
les
or
jge
test
push
arpl
and
adc
xorb
pop
movsl
pop
xorl
repnz
adc
in
mov
jecxz
xor
xchg
scas
xor
jno,pn
int3
or
and
data16
call
sbb
std
bound
lock
sbb
add
stos
stos
add
xor
insb
xchg
mov
add
cmp
jb
ret
push
push
cmpsb
push
add
decb
int
sbb
lds
sbb
mov
add
mov
orb
mov
das
test
xor
xchg
xchg
movsl
mov
or
pop
dec
rolb
inc
iret
jno
repz
in
addl
dec
add
imul
int3
xchg
out
fdivs
add
xchg
enter
popa
jp
push
mov
clc
pop
jns
insb
inc
mov
mov
add
cmpsl
inc
mov
or
jmp
push
lock
xor
fstps
add
xchg
xor
cli
insl
and
out
ret
add
mov
mov
dec
arpl
and
pop
test
in
dec
test
xchg
scas
sub
inc
pop
mov
sbb
mov
jnp
lock
pop
add
jb
divb
cmpsl
call
loope
in
fadd
dec
sub
add
inc
dec
add
xor
adc
test
add
in
cs
pop
sub
mov
andb
or
insb
lods
das
in
cltd
and
sahf
jp
and
xor
or
mov
xchg
xor
cli
mov
and
mov
ret
sti
mov
add
mov
xor
and
mov
xchg
ror
scas
movsl
mov
mov
dec
lcall
fs
lret
enter
cmpsl
xor
dec
xchg
push
lock
scas
add
into
inc
add
stos
mov
add
test
sub
push
xor
lea
sub
dec
mov
mov
sbb
int
mov
rcrl
loopne
push
cli
scas
ja
lret
les
adc
push
lds
cmpsb
inc
mov
sbb
or
xor
add
mov
add
cmpsb
add
cmc
add
cmp
jmp
movsl
sti
jnp
push
mov
and
push
xor
inc
cld
dec
dec
nop
dec
mov
add
and
mov
cltd
adc
cmp
inc
add
clc
pop
rorl
push
add
test
inc
movsl
or
add
mov
stos
add
xchg
jbe
lds
mov
sub
pop
test
mov
mov
xorb
mov
add
dec
jo
fsts
lret
dec
add
jne
insl
subb
repnz
sub
push
mov
jge
imul
or
data16
gs
cmp
or
leave
push
xchg
jo
pusha
loope
add
sub
sbb
and
dec
ja
add
adc
jae
add
push
xor
push
test
cmc
pop
in
xchg
subb
add
into
cld
shlb
push
add
xor
ficoms
or
data16
pushf
adc
cmc
xchg
sti
enter
lock
stos
jl
or
je
lds
leave
jl
inc
test
les
stos
push
lock
push
pop
rcrb
stos
jae
jmp
sub
pop
xor
lahf
mov
xchg
out
and
dec
dec
inc
add
mov
inc
jg
cmp
push
les
pusha
sbb
test
push
and
or
xor
call
out
adc
push
daa
pop
jbe
inc
mov
fistl
sbb
jo
shrb
add
inc
jne
fistpll
xor
sbb
mov
xchg
pop
addr16
incl
and
inc
scas
insl
orb
data16
xchg
dec
push
test
inc
jb
add
lret
gs
mov
mov
clc
ss
popf
pop
lods
push
decl
incb
rol
sahf
jae
dec
aam
hlt
cmp
jmp
je
in
add
jnp
mov
add
xchg
sbb
outsl
add
mov
ror
push
add
out
fnclex
enter
add
mov
sbb
fstpt
mov
fldenv
add
mov
bound
mov
outsl
jbe
dec
mov
xchg
inc
mov
and
icebp
mov
sbb
je
sbb
sbb
xor
add
pushf
cwtl
or
and
add
loopne
fistl
sbb
std
nop
bswap
clc
jo
pusha
and
push
sbb
in
and
outsb
and
push
out
loopne
xchg
inc
push
sub
punpckhdq
push
xchg
add
ja
add
xchg
rcrb
add
sbb
mov
or
adc
imulb
sbbb
xchg
out
push
call
stos
movsb
loopne
add
inc
push
pop
mov
jo
inc
pop
add
lds
test
lcall
scas
cld
aad
leave
jge
jno
popa
nop
ret
rcrb
add
cltd
mov
sub
mov
ds
and
mov
movb
jle
or
popa
add
dec
aas
or
pusha
and
inc
add
pop
ds
sub
in
pusha
adc
sbb
or
stos
aam
cmpsl
cwtl
adc
jge
adc
jl
pop
sbb
mov
int
cmpb
xor
add
jbe
test
movaps
cmpsb
sarl
mov
sub
aad
add
inc
and
mov
test
xchg
mov
icebp
dec
filds
sbb
insb
aam
sub
addb
pop
test
pop
xchg
insb
jmp
add
inc
sub
xlat
xor
add
sbb
in
orb
inc
scas
mov
xchg
mov
add
dec
mov
push
pop
inc
add
jno
call
fisubrs
sbb
add
sahf
clc
arpl
outsb
mov
mov
call
daa
cwtl
movups
insb
fmull
punpcklbw
push
sub
adc
cmpsb
add
mov
lcall
int3
in
jae
sub
cld
mov
leave
adc
or
rclb
add
cwtl
das
data16
push
repz
push
mov
dec
and
testb
xchg
cwtl
gs
or
fimull
push
add
test
ficoml
sahf
imul
sub
push
fldenv
or
cmc
jne
movsl
cmp
test
push
out
les
es
sti
test
nop
sbb
in
and
or
xchg
negl
adc
add
pop
aas
sbb
insb
sbb
mov
das
or
ffreep
fwait
and
add
sbb
xchg
cmp
out
jbe
xchg
fs
xor
pop
mov
add
out
je
push
push
insb
sbb
inc
sbb
add
fcomps
in
imul
sub
jns
outsb
js
clc
cmpsb
push
inc
lods
push
jne
pusha
xlat
rcll
pop
sub
sbb
dec
add
in
sub
imul
pop
add
fst
lods
and
pop
dec
add
shll
mov
cwtl
insl
dec
push
add
insb
pop
pop
add
cmp
clc
dec
dec
cmp
add
loop
iret
adc
add
nop
sarb
and
mov
pop
das
pavgw
or
movsb
addl
scas
stos
push
aad
xor
mov
pop
rcrb
addl
cmp
lcall
lahf
imul
or
jle
aam
cli
cli
stos
add
sub
std
inc
dec
nop
adc
mov
push
aaa
mov
les
rclb
inc
test
adc
imul
jb
mov
add
in
mov
daa
addr16
iret
xor
jl
aas
repnz
mov
pusha
leave
test
push
pop
push
dec
in
jp
in
inc
mov
movsl
jge
jb
cmp
mov
mov
jl
iret
add
jae
mov
fimuls
xchg
push
ss
daa
cmp
adcb
movaps
cmp
add
mov
les
mov
add
push
loope
add
xlat
std
sbb
imull
cmp
jge
ljmp
mov
sub
mov
adc
shrb
ret
jns
lods
outsl
add
addb
shl
std
mov
xchg
out
sbb
push
pop
inc
mov
jnp
xor
add
test
mov
lock
data16
add
mov
jo
roll
xor
lods
pushl
add
fmuls
pop
mov
inc
push
xor
or
es
cvtps2pd
sub
sub
pop
mov
xor
lret
add
clc
mov
js
xor
mov
mov
cmpsl
add
mov
fistps
in
add
dec
mov
arpl
pop
and
inc
or
outsb
adc
rorl
push
ss
test
ja
addr16
ret
add
repz
and
mov
rcrb
sub
data16
das
cld
out
add
mov
adc
pop
lock
je
add
data16
xor
or
xchg
pop
out
jge
pop
push
test
clc
subb
mov
jmpw
dec
cld
mov
cmp
mov
dec
out
and
repz
sub
add
inc
lea
sbb
add
out
cmpsb
add
jge
clc
mov
jo
test
jns
sbb
add
xlat
dec
inc
dec
mov
mov
fs
cwtl
test
lds
pop
mov
out
fistps
arpl
push
les
dec
jne
jle
add
test
ss
cmp
arpl
dec
cmpsl
insl
test
test
shrb
mov
dec
or
jno
xchg
add
test
nop
jo
std
or
pop
dec
cmpsb
repz
inc
lcall
add
dec
call
pop
imul
add
loopne
roll
add
mov
test
jno
lods
xchg
xlat
add
fwait
negl
cmpsb
pop
push
popf
imul
ljmp
mov
adc
cmp
push
jns
dec
gs
or
jb
aas
add
push
rclb
cltd
or
nop
in
outsl
mov
mov
and
pop
out
sub
ds
pop
add
idivb
add
mov
into
sbb
nop
xchg
rolb
aam
nop
or
add
xchg
hlt
add
xor
mov
outsb
shl
xchg
add
sti
push
negl
add
hlt
xchg
fdivl
rcrb
cwtl
insl
sbb
sbb
cmp
adc
dec
pop
movsb
fldenv
cltd
out
or
pusha
cwtl
addb
mov
imul
cmp
enter
inc
add
inc
push
jae
add
cmp
mov
fcompl
js
lcall
dec
jl
sbb
imul
add
fildll
subb
cmp
lock
pop
test
addr16
or
cld
push
and
mov
out
push
pop
jno
jb
rclb
and
push
aam
mov
pop
mov
pop
mov
pop
xchg
rolb
or
sub
fisttps
jbe
and
mov
dec
mov
je
sbb
rcrl
xor
adc
or
jecxz
mov
cs
pop
fstps
add
inc
insl
notb
mov
mov
pushf
mov
add
loopne
add
jo
sub
mov
rolb
arpl
push
popa
xor
or
sbb
out
add
sbb
cmp
xchg
xchg
sbb
out
pop
jmp
call
or
movzbl
xor
adc
das
sbb
cwtl
and
or
lret
mov
dec
add
icebp
ret
xor
imul
push
jg
sbb
lcall
out
loop
dec
add
es
inc
daa
xor
mov
loope
sub
cld
pop
repz
int3
mov
pop
clc
sahf
dec
dec
imul
add
cmp
ret
mov
xor
pop
add
int3
sub
push
cwtl
pop
inc
mov
dec
push
add
cli
push
out
xchg
dec
xor
add
sbb
cmp
addb
mov
rcrb
repnz
stos
jno
mov
xlat
mov
scas
daa
mov
nop
xchg
sub
push
xor
pushf
add
jl
arpl
mov
jnp
dec
addl
cmp
je
cmp
lret
dec
lret
addb
hlt
push
sub
sub
nop
add
into
sbb
push
flds
mov
inc
jne
push
add
ljmp
jl
inc
push
add
in
mov
cwtl
clc
nop
lods
jb
cltd
add
mov
mov
xor
pusha
in
sbb
adc
iret
xlat
and
mov
shlb
sbb
jb
push
mov
adcl
mov
neg
or
and
mov
subb
add
mov
sarl
add
lods
mov
or
push
pop
inc
ds
push
xor
stos
call
inc
add
lods
jge
mov
fmul
int3
mov
add
mov
cmpsb
out
xorl
js
test
pop
sub
inc
movsb
push
push
pushf
js
add
std
sbb
add
sbb
lock
cmp
nop
add
jg
push
xchg
jecxz
jb
addl
shl
mov
out
aaa
add
fisubrl
jo
aad
inc
cld
dec
pop
sbb
dec
cs
pusha
pop
in
adc
push
add
cmpsb
push
push
sub
movsb
push
in
nop
test
shlb
mov
or
adcb
add
jnp
mov
add
leave
insb
andl
sub
out
shl
mov
std
add
es
push
in
or
dec
add
add
xor
setno
xlat
cmpsl
or
inc
stc
jnp
lret
add
jp
popf
push
pop
movsl
in
jno
shll
jb
xchg
add
or
push
mov
and
jae
jg
call
push
inc
add
add
popf
xchg
addb
jg
sub
in
mov
pop
nop
mov
insb
or
add
mov
mov
sahf
js
hlt
faddl
pop
imul
jmp
lahf
push
les
aad
pop
rcrl
mov
xchg
add
or
cmp
pop
push
sub
inc
lcall
repz
aad
xor
sbb
adc
mov
nop
mov
sbbb
adc
inc
insl
jle
add
lret
fcmove
and
stc
sarl
cld
fnstsw
rolb
incl
mov
dec
fidivs
std
loop
mov
lahf
dec
sbb
gs
xor
mov
push
data16
decl
adc
test
fmul
or
fcmovnb
jge
mov
fistps
out
or
cs
sub
push
lcall
pusha
ljmp
inc
test
add
jb
aam
lods
or
inc
pop
lahf
andb
mov
pusha
cmpsb
push
add
loope
jp
mov
mov
mov
jae
add
cmp
cltd
xor
cld
ud1
pop
dec
dec
loopne
xchg
mov
add
push
add
enter
ret
iret
test
add
dec
jo
int
loop
add
cli
out
sbb
scas
mov
dec
stc
adc
or
fistl
shll
add
std
push
movb
push
test
xor
add
adc
add
add
in
mov
inc
add
lea
fadds
or
jmp
andb
adc
jg
lods
mov
add
shll
les
push
jmp
fsubp
loop
sub
add
mov
out
jmp
lods
mov
add
xchg
clc
add
adc
outsb
add
loop
inc
push
rclb
add
sub
sbb
jecxz
add
mov
mov
dec
add
pop
and
or
pusha
stc
pop
dec
xor
xor
popa
insl
bound
and
addr16
out
rcrl
mov
or
add
push
or
icebp
inc
je
dec
imul
cwtl
arpl
pusha
rep
mov
imul
adc
dec
jbe
add
pop
sbb
daa
pop
adc
xchg
dec
or
push
adc
xor
cmpsl
outsl
mov
test
and
das
std
xorb
cmpsb
mov
mov
cmp
popl
sub
ret
sbb
filds
or
jae
sar
add
mov
xchg
adc
stos
xchg
test
aaa
inc
pusha
fstl
push
adc
lret
add
xor
pusha
outsl
inc
outsb
mov
push
jecxz
jg
out
add
in
in
add
add
pop
fs
jno
scas
mov
cmp
bound
mov
add
mov
hlt
add
sbb
fcompl
ja
add
loope
test
shl
add
or
sub
add
dec
jnp
jg
push
push
lea
adcb
nop
and
push
das
add
xor
jl
mov
push
add
mov
dec
decl
sub
sbb
out
dec
jp
imul
pusha
inc
out
imul
aaa
xchg
xchg
daa
xor
call
sarb
mov
add
lods
dec
pusha
add
xor
cli
sbb
jb
test
insb
mov
loope
test
lret
faddl
push
mov
sub
pop
inc
push
or
add
jge
pop
pop
aad
cli
fstp
mov
dec
and
out
push
js
cmp
aas
call
test
add
add
pop
test
push
jp
add
cmp
xchg
cmp
popf
add
jne
popa
and
sbb
sbb
pop
fmull
addb
xorl
mov
pop
pop
loope
leave
sarb
scas
and
aaa
fisubrs
inc
psraw
sub
add
sahf
ud1
loope
cs
lods
add
ficoms
xlat
add
or
lods
mov
call
fcompl
xchg
sub
jmp
mov
add
jno
jbe
adc
mov
adc
adc
or
xor
mov
mov
daa
out
negb
mov
cmp
jge
jns
add
push
xor
add
add
rcr
enter
push
sub
xchg
jle
xchg
jns
xorl
cli
xchg
pop
lea
adc
or
pop
jns
jbe
in
je
nop
das
push
add
xor
add
lret
and
clc
sub
add
ret
leave
fnsave
fisubrl
push
mov
ret
jo
sub
lret
sub
jae
mov
xchg
add
sbb
jle
lret
pop
cld
roll
mov
rorb
cmp
mov
es
add
inc
pushl
sbb
test
add
aas
cmp
in
push
mov
pop
lret
das
cmc
arpl
sbb
mov
add
fists
xchg
jnp
ret
or
jo
stos
push
scas
out
xor
nop
or
pusha
addr16
rolb
not
pop
mov
mov
jo
adc
xor
and
lahf
mov
inc
adc
arpl
pop
add
push
xor
inc
insl
xlat
add
outsb
jne
int
mov
out
ret
sub
cltd
push
adc
stos
incb
jnp
jmp
xchg
test
mov
arpl
jge
add
test
roll
inc
fcomps
ja
je
sub
mov
insl
les
cmc
push
sub
mov
mov
ret
add
pop
int
into
inc
sbb
ds
pop
and
daa
pop
popf
add
add
repnz
shl
scas
add
sub
cli
cmp
sbb
pushf
add
fadds
pop
mov
aas
mov
hlt
pop
cmp
roll
popa
iret
aam
in
aad
outsl
testb
sbb
icebp
inc
shll
sbb
in
cli
sbb
ja
adcb
popa
mov
jmp
push
push
cmp
stc
and
dec
add
xor
lods
jge
orb
dec
add
xor
jns
in
add
stos
leave
fsub
mov
scas
mov
jle
add
xor
shrl
test
adc
jmp
sbb
lods
in
add
push
fdivs
rclb
push
das
enter
jmp
sub
add
dec
das
sbb
imul
mov
mov
das
or
aas
outsl
in
cld
sub
mov
dec
xor
pusha
xchg
adc
negl
xchg
mov
add
int
loope
sbb
jbe
add
je
dec
ror
add
mov
jp
or
mov
aam
dec
add
cmp
shr
xchg
adc
mulb
arpl
mov
andl
and
push
test
sbb
aad
popa
mov
repz
push
andb
jecxz
fmull
add
clc
add
xchg
xor
mov
lret
rcrb
sbb
lahf
add
push
rorb
ljmp
mov
shr
add
dec
in
pop
mov
xor
fldenv
dec
or
add
inc
fnstsw
mov
mov
xchg
psubusw
mov
sbb
jmp
fs
mov
add
bound
mov
xor
scas
in
inc
divl
mov
ljmp
call
insb
nop
repnz
cs
add
push
adc
xor
loopne
popa
xchg
xchg
pop
xor
frstor
and
mov
push
idivb
clc
jmp
xor
inc
mov
add
dec
mov
mov
add
sbb
mov
fnstsw
jle
clc
hlt
jns
rorb
push
add
shl
and
add
aad
xor
dec
out
adc
jns
sub
ljmp
movsb
sbb
into
adcb
xchg
mov
inc
xor
repnz
add
xor
add
or
mov
inc
icebp
mov
repz
jnp
repnz
and
and
and
xor
bound
loope
sahf
in
fsubr
shr
roll
inc
ds
les
push
inc
add
out
jge
orl
rolb
pop
xchg
icebp
cmp
fwait
negl
xor
sbb
cmp
cmp
jmp
and
movsb
hlt
mov
xchg
std
jne
adc
pop
adc
add
lea
out
ljmp
cmp
xlat
sbb
gs
sbb
cmp
xor
lahf
ja
pop
or
out
cld
cwtl
or
sbb
xor
jo
subl
dec
add
nop
mov
mov
std
or
and
testb
scas
jmp
popa
sbb
addb
fiaddl
inc
or
mov
cmp
movsb
jge
push
loopne
pusha
dec
flds
mov
inc
cmp
scas
repz
mov
push
xor
fucom
les
mov
mov
sbb
rolb
add
fxch
mov
les
shll
arpl
push
movsb
inc
and
xchg
dec
add
add
dec
in
jns
add
sti
gs
and
cmc
rol
imul
es
test
pop
lret
add
push
xor
cld
push
add
and
or
xor
ret
fcmovb
inc
or
lods
loope
add
fiadds
xabort
xchg
xchg
les
sbb
mov
and
or
add
push
mov
xchg
add
mov
pushf
cmpb
add
dec
testb
push
ret
dec
imul
and
push
xor
fdiv
andb
and
add
out
add
or
icebp
pop
cmp
push
or
xor
ss
mov
add
mov
lds
jge
add
leave
test
in
jg
sbb
js
add
xchg
movsl
mov
popa
and
inc
test
dec
mov
add
mov
flds
pop
push
push
fadds
adc
and
inc
lods
pushf
sbb
adc
mov
mov
std
aad
xchg
add
mov
lods
adc
add
jnp
sub
cwtl
fs
pop
add
xchg
push
loopne
dec
add
mov
xor
xchg
mov
je
popa
imul
movsl
insb
add
or
imul
add
scas
add
jge
add
or
xchg
xchg
daa
sbb
cli
mov
sbb
cs
fiaddl
jns
hlt
pcmpgtb
mov
mov
push
insl
sub
jp
mov
jb
mov
addb
popf
in
pusha
inc
mov
mov
jnp
jl
or
push
mov
dec
pop
and
cmp
xor
inc
imulb
stos
dec
shrb
add
mov
mov
add
push
repnz
mov
fcomp
rolb
out
es
rorl
add
jno
mov
push
insb
add
jbe
jle
mov
cmp
mov
pushf
rcr
call
jno
outsb
mov
test
pushf
lahf
xlat
shlb
adc
add
js
add
mov
cmp
xor
add
bound
std
inc
pusha
pop
insb
push
push
imul
pop
mov
ret
jnp
repnz
jne
mov
cld
aam
add
int
jae
xchg
pop
jg
je
fwait
push
pop
xchg
mov
sbbb
test
cwtl
push
add
cwtl
add
insl
dec
dec
push
test
sub
lods
loop
add
roll
and
jl
ret
ss
cmp
shlb
push
sbbb
in
call
push
add
jne
cs
arpl
adc
and
addl
pop
xchg
rorl
adc
wbinvd
adc
ljmp
adc
cmc
cli
rcrb
push
jle
mov
mov
jmp
xchg
pop
fld
scas
rcrb
add
mov
les
scas
add
mov
mov
push
inc
jge
fildl
add
sbb
lock
inc
xchg
adc
scas
sub
and
hlt
dec
test
out
add
sar
jnp
push
out
jp
inc
test
xchg
add
pop
inc
nop
pushf
rorb
negl
leave
xchg
sbb
test
insb
test
add
pop
mov
cwtl
jbe
add
in
jo
mov
std
push
mov
mov
add
movsl
xchg
flds
cmpsb
enter
mov
pusha
cmp
add
in
sub
dec
int3
add
xchg
adc
add
jne
push
jl
inc
fdivrl
sub
sbb
xor
addr16
test
loope
sbb
cs
call
sub
lods
adc
inc
adc
add
add
or
sarb
adc
insb
sbb
sbb
add
out
js
adc
adc
or
stos
in
add
pop
push
mov
ja
cwtl
or
jb
cmc
ljmp
adc
std
inc
mov
outsl
pop
xor
add
mov
out
inc
dec
sbb
repnz
fst
pop
pop
mov
pop
pop
cli
int3
xchg
loopne
push
push
adc
xchg
les
and
in
add
push
fldl
mov
pop
lods
jae
xchg
mov
adc
mov
push
push
jbe
inc
jp
xchg
push
add
mov
xchg
add
lret
cli
sub
sub
add
shll
jg
roll
es
cmp
mov
push
out
out
cmp
xchg
add
mov
icebp
iret
out
mov
add
imul
sahf
aad
test
clc
sub
add
les
sbb
xchg
into
rorl
jl
add
movsl
add
outsl
aam
or
movsb
jge
test
adc
mov
rol
xchg
dec
jle
add
pop
sbb
lea
mov
adc
add
push
jae
mov
add
sahf
xlat
mov
pusha
out
lret
dec
cmc
aad
in
sub
add
out
pop
fwait
add
or
add
xchg
int3
push
sbb
push
pop
inc
adc
cmp
subb
or
jo
out
addl
and
popl
cmpsl
push
in
test
loop
fidivrl
pushf
mov
mov
cmp
mov
addr16
or
nop
jne
xchg
pop
iret
je
test
xor
inc
pop
pusha
add
mov
lea
mov
cmp
mov
add
ret
add
xchg
popf
add
in
jae
mov
mov
sub
add
mov
leave
add
rcrb
add
rorl
pop
out
lahf
das
mov
andb
push
nop
leave
jp
iret
enter
xlat
mov
cmp
std
scas
jns
sbb
arpl
add
sarl
out
add
lock
cmpsl
mov
push
sub
push
dec
sbb
pop
cli
aas
add
shl
divb
add
lock
mov
add
adc
mov
adc
std
jb
ljmp
sub
ja
jns
hlt
adc
loopne
aas
xchg
cmp
popf
add
and
xchg
jmp
incl
pusha
sar
stc
add
hlt
inc
pop
mov
push
add
add
mov
inc
pop
imul
stos
repnz
mov
punpckldq
rcl
push
push
add
sahf
pop
mov
mov
sbb
add
movsl
insb
sub
push
stos
mov
sar
inc
mov
aas
sahf
xchg
add
int3
fildl
fcompl
add
push
mov
sbb
test
mov
fidivrs
cwtl
scas
lods
add
jns
lock
inc
push
icebp
jno
add
mov
push
in
xchg
dec
sbb
or
mov
cmpb
icebp
cmp
add
inc
roll
add
xlat
rorb
cmp
fnstsw
add
push
sub
push
add
mov
iret
pop
push
jno
pop
jb
in
outsl
dec
repnz
loopne
imul
xchg
test
rorb
push
jge
mov
popf
inc
sbb
xchg
sti
lds
stos
out
sbb
jbe
hlt
cltd
rcrl
push
or
cs
insb
outsb
and
sub
addb
mov
jp
xchg
cltd
mov
mov
fidivs
push
sbb
int
ljmp
push
mov
test
add
nop
shll
dec
or
add
xor
pop
fsubrs
mov
pushf
xchg
add
pop
adc
out
pop
test
ja
add
pop
and
xor
cwtl
mov
jae
add
shl
and
addr16
adcb
pop
xchg
pop
sbb
sub
mov
inc
js
cmc
or
add
repnz
mov
jbe
loopne
mov
call
js
add
out
les
sbb
pop
aam
outsb
sub
xor
fbld
addl
adc
lock
jmp
mov
movsl
jg
call
push
gs
adc
push
fistpl
imul
stos
mov
cmp
xchg
pop
add
adc
ret
mov
pop
mov
push
xchg
jns
mov
lods
cltd
mov
push
xor
xchg
stc
jo
add
add
push
out
inc
xchg
pop
test
add
std
jecxz
pop
inc
push
mov
jmp
lahf
add
ret
test
xor
jmp
dec
enter
and
je
adc
arpl
test
or
push
sbb
sbb
adc
enter
rcrl
ficompl
int
push
add
sbb
dec
lea
cmp
xlat
and
nop
outsb
sarb
xchg
adc
jl
paddb
loope
mov
cmpsl
pop
inc
imul
mov
in
dec
add
cmpsb
or
lods
cmp
sbb
adc
dec
cwtl
push
cmpsl
inc
call
les
add
cmp
inc
das
add
sub
xchg
or
and
popf
in
imul
jno
add
xor
rolb
rolb
clc
in
hlt
add
pusha
into
outsl
jecxz
clc
subb
mov
xchg
push
cs
cld
rcrb
icebp
es
sbb
cltd
sbb
sub
push
push
push
ja
xchg
jecxz
and
in
scas
add
daa
fbstp
add
mov
xor
push
pusha
sub
pop
orl
int3
lods
ljmp
clc
es
cmp
pop
mov
loopne
addl
xor
or
aam
cmp
add
dec
clc
aad
add
in
mov
mov
push
lock
cmp
fbld
fs
js
pop
out
clc
and
jmp
push
adc
lea
jnp
jns
fldt
cmp
adc
add
and
adc
repnz
jo
aam
xor
leave
xor
out
fildl
xchg
sbb
adc
and
and
shr
push
sbb
aaa
clc
fstp
mov
add
ss
popa
lret
repnz
mov
in
sub
out
xchg
iret
or
jge
add
mov
push
add
add
mov
add
les
jg
je
popa
adc
add
movb
add
aaa
rcrb
mov
shr
push
mov
add
inc
test
jg
add
jle
leave
sbb
add
aad
add
add
das
mull
movsb
call
lea
popf
sbb
mov
stos
sbb
push
dec
sbb
push
push
lret
addr16
sbb
sub
xchg
push
mov
mov
loopne
adc
cmp
sub
add
cmp
or
subb
cmpsl
mov
rcll
mov
movsb
inc
shrb
add
cltd
hlt
enter
fistl
mov
add
or
cmp
mov
movsb
aam
mov
push
sbb
in
dec
adc
add
mov
add
sahf
xchg
jnp
sbb
clc
add
out
mov
add
fs
lea
push
add
fcoms
push
sbb
xchg
add
lret
and
les
inc
sbb
xor
mov
or
ret
mov
mul
push
push
popf
repnz
roll
fiaddl
pop
and
hlt
dec
and
cwtl
push
fs
pop
cmpb
in
testb
add
ja
add
pop
and
jno
add
cmp
push
xchg
loopne
sub
lcall
xor
je
add
mov
adc
into
pop
bound
push
fstps
popl
lcall
fmull
pop
or
jmp
fstpl
or
or
cld
add
cmpsl
jg
test
xchg
add
cmp
add
or
jl
add
and
mov
sub
lret
pop
mov
pop
in
inc
sbb
fsubrl
mov
mov
and
je
cli
and
mov
pushf
andb
in
xchg
movl
pop
push
in
inc
les
out
add
jo
hlt
add
icebp
xchg
aam
jno
das
pop
xor
pusha
cltd
sarb
add
mov
sbb
outsb
dec
lods
add
addr16
lcall
inc
or
mov
sub
dec
repnz
loope
adc
orb
mov
sbb
aam
xchg
stos
sbb
dec
ljmp
add
into
xlat
lret
mov
inc
call
shll
clc
cld
stos
pop
and
cmc
or
rol
add
fwait
addr16
pop
in
jl
or
pusha
sarb
jae
mov
dec
push
lds
inc
imul
lahf
js
or
add
add
sbb
jl
add
test
aad
add
mov
sbb
std
sbb
dec
xchg
adc
outsb
adc
pop
mov
repnz
incb
inc
mov
lcall
cmp
std
jne
in
jb
jno
call
hlt
rcrb
repz
mov
dec
xlat
and
add
add
mov
dec
hlt
js
repz
mov
mov
cmpsb
sarl
jb
push
add
adc
add
and
pop
stos
and
lock
jns
push
inc
out
pop
add
xor
xchg
scas
xor
pushf
andb
add
insb
or
clc
mov
cmp
rclb
lds
sub
loop
push
push
adcb
dec
clc
xchg
add
mov
inc
add
lcall
pop
aam
push
add
pop
lahf
cmp
pop
cltd
call
orb
adc
scas
dec
cmpb
jae
daa
jnp
pusha
pop
mov
hlt
mov
lcall
loopne
sbb
mov
test
xorl
jnp
push
fcom
add
sub
enter
pop
cmpsb
mov
aam
push
push
pushf
add
decl
inc
daa
mov
lds
bound
jbe
pop
mov
leave
gs
fcomps
repz
push
ds
lcall
sub
jecxz
inc
dec
add
cmc
xor
mov
mov
sub
mov
xchg
cmp
mov
inc
lcall
xchg
inc
push
in
push
sub
cwtl
and
sub
movsb
jge
cwtl
lcall
test
lahf
loopne,pt
sbb
mov
mov
jge
lcall
xor
inc
iret
fwait
mov
daa
mov
push
rolb
add
xor
adc
into
call
and
int3
ret
mov
jl
rclb
xor
cmp
iret
add
sub
inc
push
mov
add
add
mov
add
ljmp
cmp
push
mov
add
push
xorl
cmp
pusha
roll
xchg
and
xor
jge
sbb
mov
jle
lahf
jno
test
scas
add
and
cmpb
sbb
xchg
mov
jmp
pop
or
xor
hlt
adc
add
cmp
testb
xor
add
jae
xor
push
add
mov
inc
leave
dec
xchg
xor
shlb
mov
out
sbb
loopne
aas
mov
adc
mov
adc
and
dec
inc
xor
add
es
daa
in
jge
enter
mov
or
push
je
inc
addb
jmp
mov
and
push
add
fadds
fst
movsl
cs
rcrb
add
adcb
nop
add
xor
adc
pushf
and
dec
mov
clc
daa
out
pop
js
mov
add
jbe
aaa
sub
sti
mov
cs
in
add
xor
pop
mov
adc
ds
rep
aam
sti
sbbb
testl
xor
shrb
hlt
dec
and
sbb
mov
pusha
add
sbb
es
pushf
add
inc
outsb
mov
repz
mov
fcompl
sbb
sub
mov
cmpsb
add
jns
and
sbb
mov
push
data16
test
imul
xor
test
cli
movl
push
das
arpl
cs
jb
in
sbb
stos
xor
add
aas
fsts
test
push
xor
incb
lahf
sub
cmp
jl
out
add
mov
pop
lcall
lods
and
repz
je
movsb
je
in
cmp
inc
inc
push
sbb
cmp
aam
cmp
cli
outsl
stos
xorl
test
add
add
jl
lods
imul
jo
les
cmp
mov
jb
dec
fldcw
add
addb
mov
cwtl
sub
test
ret
testl
imul
add
int
dec
ja
insl
in
xchg
and
dec
mov
jg
adc
cmpsl
aam
xor
or
sub
loopne
cmp
mov
push
mov
rep
inc
adc
xchg
and
test
repz
das
and
add
addb
cmpsl
mov
or
mov
mov
xchg
icebp
movsb
sbb
clc
std
orb
test
stos
pop
dec
daa
dec
add
in
xchg
pop
mov
jmp
rcrl
sbb
inc
mov
js
mov
adc
mov
out
and
in
notb
add
pop
lcallw
out
add
in
pusha
pop
jecxz
add
shrb
xchg
sub
fwait
or
xorb
dec
sahf
add
int3
das
test
or
and
mov
cld
mov
jl
jno
add
js
movl
mov
daa
int
mov
mov
adc
cmp
std
jo
nop
sbb
hlt
inc
add
outsl
imul
sbb
dec
dec
insb
daa
pop
and
addl
stc
das
jg
lods
jne
out
add
inc
add
or
and
add
xlat
rorb
inc
les
es
dec
xchg
je
fistpll
and
mov
jae
mov
xchg
push
je
and
insl
dec
add
or
sarb
adc
ret
cmp
lods
adcl
inc
mov
mov
imul
pop
or
sub
pop
ret
pop
bound
or
test
push
mov
test
adc
xor
lds
int3
outsb
and
flds
push
add
sbb
ja
xchg
add
into
jle
lods
loopne
int
sti
data16
nop
in
adc
pop
scas
call
cmp
int3
arpl
push
mov
lds
add
mov
or
loopne
mov
sbb
adc
into
fildl
popa
mov
jecxz
dec
cs
insl
or
push
sbb
hlt
jge
jmp
adc
inc
mov
mov
jge
inc
imul
push
push
into
outsl
add
sub
dec
clc
mov
gs
stos
rolb
add
and
fnstcw
inc
pop
push
inc
adc
xchg
icebp
or
pop
pusha
inc
jbe
or
jl
dec
cwtl
or
in
and
cmp
pop
nop
inc
add
sbb
negb
popa
push
add
cmp
and
nop
adc
js
icebp
out
sub
idivb
lret
sbb
rorb
add
mov
jnp
add
or
stos
js
xchg
add
les
xchg
add
test
imul
outsl
add
pop
sub
lcall
or
xchg
sbb
push
aaa
stos
lldt
and
outsb
int
inc
mov
xor
subb
into
xabort
push
out
stc
add
add
add
lret
loope
cmpb
mov
or
add
negl
and
pop
fnsave
pusha
popa
add
xor
pop
inc
sub
les
sub
shrl
add
out
fcmovnbe
dec
add
ss
je
aaa
adc
add
mov
imul
cmp
jmp
add
sub
cmpsl
cmc
pop
out
in
mov
xor
pop
xchg
adc
xor
out
std
push
add
cmpsb
cld
sbb
pop
jnp
push
daa
pusha
pop
movmskps
sub
das
mov
sub
xor
add
mov
add
sbb
jle
sbb
pxor
and
mov
iret
pop
inc
add
and
popf
and
icebp
inc
add
sbb
cmpsl
add
sbbl
addb
lret
add
js
lcall
mov
xchg
sahf
mov
push
cltd
out
fs
mov
add
push
mov
jp
cmp
orl
lods
shlb
testb
negl
mov
mov
into
cwtl
and
jns
mov
cld
popa
sub
lods
loopne
adc
add
pop
mov
cmp
and
or
sub
add
lods
cmp
das
leave
jecxz
xor
jg
mov
pop
adc
jge
lods
clc
andb
pop
out
xchg
add
pop
adc
pop
adc
cld
aad
jae
jno
add
aaa
jne
pop
xchg
sbb
popa
cs
adc
and
cmpsl
add
les
or
or
push
div
jo
stc
xchg
jbe
ja
fwait
das
setno
jae
push
pop
sti
movsl
pop
jo
repz
out
mov
add
jbe
mov
inc
das
pop
ret
test
dec
sub
mov
jbe
sbb
pop
clc
fldcw
insb
jp
fsubrl
xchg
and
and
fcoms
fisttpl
add
rcr
aas
mov
inc
loope
cltd
hlt
sub
ret
cmp
flds
out
mov
inc
sbb
adc
hlt
xor
jp
das
insb
mov
cwtl
sti
add
jp
add
inc
push
xchg
mov
mov
pop
or
mov
scas
pop
mov
insb
or
popf
add
pop
jle
ret
jge
incb
inc
add
add
sub
sbb
or
push
fs
add
mov
add
add
mov
or
push
cmp
adc
add
pushf
aam
gs
incb
cmp
imul
punpckhdq
or
mov
scas
clc
xchg
jbe
xor
xchg
add
and
pushf
xchg
adc
adc
jle
iret
std
test
xchg
push
jae
cltd
gs
paddq
out
adc
add
dec
xchg
xchg
fidivrs
sbb
adc
jb
aaa
push
add
cmpsl
imul
incb
lds
out
xchg
mov
shll
test
cwtl
fldenv
adcl
shll
icebp
push
sbb
adc
or
jl
cmp
cmpb
adc
loop
stc
xor
cmp
je
add
mov
in
filds
inc
ljmp
loop
mov
sbb
roll
aaa
lods
xchg
dec
dec
iret
add
pusha
pop
sbb
xor
cs
test
sbb
mov
repz
pop
dec
pop
sub
rolb
enter
shrl
in
ss
mov
sarb
sbb
dec
add
and
gs
ljmp
mov
lods
dec
mov
cmp
add
inc
push
jmp
add
sbb
data16
mov
add
out
push
sub
and
add
subl
xor
add
pop
mov
jp
add
outsl
jl
fiaddl
add
mov
into
push
pop
xchg
sub
orb
flds
sarb
in
dec
jmp
test
aas
pop
lret
or
rorb
push
inc
inc
add
jg
int
xchg
or
pop
and
xor
dec
mov
out
xor
sub
push
int
mov
jb
sbb
rcl
jmp
xor
rcrb
pop
dec
xor
popa
add
lods
addr16
push
and
jp
test
push
adc
and
leave
ja
push
xchg
int3
fldenv
pushf
lods
in
adc
or
test
inc
icebp
xchg
pop
into
and
sbb
sub
loope
fcom
lods
pop
pusha
iret
sub
jns
mov
inc
call
js
or
jle
xchg
das
sbb
mov
fadds
pusha
sbb
jae
jb
roll
cmpsl
and
cmpsb
test
test
mov
iret
add
sbb
add
cwtl
sbb
or
pop
out
push
ds
call
sub
icebp
mov
jae
inc
add
shlb
push
fisubs
ds
pop
jg
testl
sub
inc
add
push
lahf
faddl
test
pop
xor
subl
add
or
push
dec
add
lret
movsl
pop
inc
pop
imul
sub
scas
dec
je
divl
push
movsb
push
dec
add
cmp
pop
or
and
test
imul
and
xchg
into
mov
sub
jmp
movsb
cmc
add
push
shl
mov
sbb
lea
add
xor
push
out
and
fadds
iret
and
jno
xchg
arpl
stos
or
lods
movsl
or
add
sbb
add
ljmp
loopne
in
sbb
out
lods
sbb
cmp
add
pusha
add
jno
push
xchg
mov
aaa
mov
push
jae
push
add
in
sub
imul
sarb
mov
xchg
test
aad
add
in
sti
pop
dec
cmp
lret
lret
push
xor
xor
imul
insb
sahf
ficoml
push
dec
loopne
add
jle
imull
call
jne
sub
jecxz
outsb
add
test
push
daa
pusha
xchg
fistl
lods
shlb
push
cli
pusha
or
mov
cmp
fadds
int3
imul
andb
add
cmpsb
or
sub
push
ret
inc
sbb
into
fstpt
sub
loopne,pt
sub
xchg
insb
cmpl
add
or
mov
add
push
ljmp
mov
sbbb
cmp
cmpl
xor
push
xchg
negl
adc
dec
je
push
mov
stos
and
in
or
cmp
in
mov
sub
popf
nop
sbb
jne,pt
add
movsl
shll
loopne
movsb
and
in
mov
dec
add
shlb
sbb
dec
push
enter
adc
ds
pusha
xlat
icebp
rcrb
adc
imul
xor
shrb
in
sub
push
or
lock
inc
jle
add
xor
add
or
outsb
jne
inc
int
fsubrs
je
and
loope
repnz
adc
jl
mov
sub
inc
cwtl
and
int3
int
inc
sbbb
xor
mov
sub
pop
int
or
ds
add
popf
cmp
cmp
or
les
adc
test
add
es
mov
add
inc
fisubs
sbb
inc
xchg
dec
loopne
jb
dec
cmp
xchg
or
xchg
mov
mov
and
insl
sti
idivl
mov
push
mov
popa
ret
cmc
add
pop
aad
ror
add
lea
int3
hlt
sbb
adc
add
pop
out
push
or
add
sbb
jmp
cmp
xchg
rclb
add
sub
add
push
and
test
idiv
repnz
push
sbb
sbb
adc
sarb
sti
sbb
test
xchg
mov
scas
add
aas
lret
pushf
mov
js
pop
arpl
imul
js
add
push
xor
push
jp
add
add
es
or
inc
cmp
inc
int3
dec
pop
incl
in
add
dec
mov
sbb
pop
sub
mov
xchg
cmp
sub
xorb
sub
das
mov
inc
fistpll
sub
inc
add
pop
inc
inc
sahf
loop
pop
int3
popf
add
inc
faddl
out
rcl
sahf
push
cmp
add
xchg
dec
cmc
inc
je
push
loopne
dec
inc
dec
add
sub
push
les
sub
mov
repnz
mov
and
adc
fsubrs
mov
sti
test
jns
out
add
or
ret
movntq
sub
imul
jne
in
inc
add
scas
mov
rclb
movsb
in
mov
inc
int
jg
testl
jno
jmp
inc
sbb
out
pusha
push
enter
andl
shr
add
jne
hlt
or
add
out
out
stc
fisttps
in
xchg
push
add
clc
imul
mov
cli
int3
mov
les
add
push
adc
fsts
add
lods
inc
jl
mov
add
shrb
mov
add
mov
fisttpll
sbb
adc
push
outsl
fdivrl
out
cltd
in
sti
sub
pop
push
jmp
adc
scas
popf
jl
or
ret
add
and
sbb
enter
mov
add
add
lcall
push
pop
add
lds
lcall
jae
add
movsl
xor
xchg
push
mov
cli
mov
add
enter
es
inc
xchg
ror
inc
add
cmp
mov
inc
push
xchg
add
stos
cwtl
mov
pop
je
pop
lahf
scas
inc
subb
or
shrb
add
mov
ja
test
sub
int
pop
out
sbb
jmp
roll
cld
cmc
sub
add
sbb
add
addb
std
fs
adc
or
push
xchg
stos
mov
xchg
xor
add
and
xor
add
mov
stc
lock
push
clc
orl
jne
add
fwait
loop
cltd
movsb
mov
pushf
add
stos
jl
mov
shll
xchg
mull
loopne
sbb
pop
add
sahf
mov
scas
addr16
cwtl
sbbl
pop
out
jmp
xchg
jne
xchg
movsl
and
sub
pop
mov
sbb
and
and
xchg
inc
fidivrl
out
loop
testb
mov
xor
and
mov
add
cmp
lret
fldl
cmp
roll
dec
fisttpl
shlb
call
mov
add
push
pusha
push
js
sub
adc
cmc
pop
add
aaa
addb
leave
jle
mov
es
andb
sbb
mov
jo
loope
shrb
clc
xorl
pop
push
jl
insl
mov
and
jl
jns
jl
pop
jno
sbb
sub
add
or
or
call
and
popf
mov
or
push
add
lret
xlat
mov
and
lahf
fs
outsb
add
add
popa
mov
xchg
rolb
clc
sbb
je
jno
addl
xorb
mov
js
fdivrl
cs
push
shl
add
shlb
lret
addb
push
mov
adcl
add
and
cmpsb
or
jo
xorl
mov
cmp
jmp
pop
into
sub
add
pop
in
mov
mov
mov
jecxz
add
pop
rcl
adc
jle
fdiv
lock
shlb
mov
outsb
scas
jae
movsb
dec
cmp
adc
or
xor
jne
insl
das
cwtl
int3
add
call
add
mov
imul
xor
jnp
add
push
lods
hlt
jo
xor
lea
adc
and
cmp
fildll
mov
add
movl
int
jne
add
pushf
adc
add
test
pushf
dec
orb
pop
mov
push
ss
jle
test
xchg
test
lahf
lcall
dec
inc
pop
mov
lods
test
cmp
stos
jmp
fadd
push
es
call
test
stos
jns
adc
cltd
pop
hlt
mov
into
lcall
hlt
adc
mov
add
inc
std
fcoml
dec
scas
nop
enter
cs
add
movsl
and
ret
pusha
loopne
jno
add
loopne
das
insb
icebp
xlat
movsl
pop
jne
jl
push
sbb
movswl
loopne
add
out
add
idivb
in
lahf
and
jge
pop
adc
loopne
ret
test
cld
scas
mov
cld
and
xchg
mov
mov
inc
daa
or
mov
pop
jp
inc
sub
ljmp
out
cmp
arpl
jnp
jge
and
add
xor
add
pop
mov
aas
lods
xor
mov
fs
pusha
call
mov
or
aad
or
or
fnstsw
arpl
adcb
pop
inc
fimull
jns
or
in
adc
jmp
xor
add
out
mov
imul
sub
loopne
pop
negl
hlt
inc
and
jecxz
push
cmp
pop
fs
or
and
push
int
test
and
dec
loopne
int3
fidivrs
loopne
xor
std
pop
cld
pusha
pop
jl
xor
add
adc
xor
lds
fstpt
pushf
sbb
push
insb
loopne
cmp
cmpsb
cli
lret
loope
out
add
ljmp
mov
inc
fbstp
scas
out
mov
add
int3
xor
iret
rol
nop
pop
add
stos
loope
lock
enter
inc
push
movsl
cli
pop
mov
pop
xor
sub
sub
and
cld
mov
orb
xor
sbbb
sar
iret
sbb
sbbb
mov
dec
sbb
test
sbb
mov
std
add
or
icebp
dec
lret
add
jno
cmp
sahf
add
pop
pop
xchg
pushf
jmp
add
jnp
sbb
sub
subps
nop
in
sarl
or
fisubs
jge
mov
jne
clc
xlat
sbb
mov
imul
mov
add
cmp
sub
mov
test
in
scas
js
in
add
inc
dec
mov
outsl
dec
xchg
add
xchg
vmovhps
addr16
cld
pop
inc
sbb
jb
inc
sti
sbb
and
jle
movsb
add
aad
push
push
gs
enter
mov
add
pop
pop
mov
dec
fldt
daa
xchg
icebp
add
sbb
js
xchg
rcrb
add
into
mov
mov
add
xor
test
cmpsb
mov
pop
imul
pusha
xorb
repz
mov
lahf
mov
nop
in
and
sbb
mov
add
inc
bound
aam
sbb
das
mov
das
and
add
cmc
inc
or
mov
pop
scas
or
nop
xchg
pusha
jmp
out
stos
fiadds
loop
dec
mov
or
add
into
lods
or
fsubs
inc
push
mov
es
mov
movsl
and
jo
pusha
push
testl
rolb
inc
xchg
aad
jmp
stos
add
shrl
mov
push
add
xchg
nop
mov
dec
add
imull
xor
dec
cmp
xor
stc
jmp
pop
das
fdivrl
mov
jno
or
imul
scas
shl
std
jb
add
inc
filds
sbb
pusha
insl
pop
je
dec
test
sub
add
iret
ret
jp
inc
sbb
xor
pop
inc
sub
inc
scas
bswap
adc
xor
nop
js
sbb
xor
jae
jne
or
xor
and
jne
add
popf
imul
dec
or
push
mov
lea
push
sbb
add
pop
scas
push
or
cwtl
lds
pop
cmpsl
add
mov
cmp
xchg
cmp
lcall
insb
add
adc
fisttpl
dec
push
inc
test
push
lods
call
xor
mov
lds
add
or
cmp
xor
xchg
cmp
cmp
ds
into
shl
xchg
fisttps
sbb
adc
dec
cwtl
cs
sbb
sbbl
jo
mov
cli
mov
insl
lds
or
and
faddp
dec
cmp
or
or
stos
mov
not
xchg
cmp
jg
les
movb
enter
scas
add
out
fstps
ficoml
xchg
mov
pop
sub
into
mov
lods
jmp
sbb
mov
mov
or
call
add
inc
jno
push
mov
nop
pop
cmp
push
mov
sbb
add
outsb
aaa
dec
jge
xor
orb
inc
int3
add
mov
mull
pusha
out
cmp
xchg
jnp
test
fcompl
test
and
sub
roll
bound
pop
add
fsubrs
enter
dec
dec
cmp
popa
push
or
jnp
xor
call
mov
push
add
mov
inc
scas
mov
dec
repnz
out
push
sti
movsl
loop
movsb
dec
mov
mov
int3
cmp
lahf
fisttpl
push
rclb
mov
in
je
enter
inc
aas
insb
les
xor
xchg
in
in
push
pushf
ret
adc
cmpsb
jl
add
mov
mov
add
shl
or
add
cmpsl
inc
push
lock
jp
aas
xlat
mov
sub
decb
push
rolb
mov
sub
fidivrs
adc
jo
sub
mov
add
jmp
mov
add
inc
test
jle
add
bound
or
lretw
sbb
mov
cmp
out
cmp
cs
add
in
repz
add
push
scas
inc
adc
cs
pop
je
add
sub
stc
sub
fbstp
imul
je
pop
adc
out
icebp
rcrl
jno
pushf
or
jne
jbe
js
mov
test
sub
pop
jae
sub
in
add
and
mov
jp
test
sbb
addl
jge
add
movsl
int
jmp
lock
fisubs
add
cmpb
jnp
clc
fwait
add
test
dec
loope
cmp
cmp
loop
pop
loopne
pop
adc
pop
push
mov
add
mov
cmc
in
mov
add
push
xor
push
mov
add
fucom
jl
icebp
mov
sti
mov
mov
xorb
mov
xor
lods
and
lahf
jle
push
je
lods
and
push
xchg
fcoms
push
arpl
orb
mov
mov
mov
outsb
imul
sbb
aad
es
add
test
push
sub
mov
jle
add
cld
das
sbb
popa
pushf
bound
dec
sbb
dec
add
mov
into
pop
jns
sub
out
ret
add
inc
pop
iret
aam
mov
pop
pop
fsubrs
jnp
or
dec
scas
fadds
ds
je
sbb
enter
sbb
cmp
ss
push
je
add
sbb
in
int3
fstpt
in
jg
jle
pushf
add
and
shll
jp
xchg
repnz
pop
mov
inc
adc
mov
mov
dec
ffreep
add
push
jns
test
push
jmp
aad
add
pop
mov
add
cmp
jno
ja
or
add
dec
cwtl
and
jmp
sbbb
xchg
cltd
out
vmread
sahf
rorl
jo
add
jmp
mov
roll
xor
push
adc
flds
push
sub
mov
sub
add
in
push
in
loope,pt
inc
in
mov
ret
mov
cmpsl
mov
and
je
xor
xor
rclb
aaa
and
pusha
mov
jp
push
test
mov
and
lret
push
dec
dec
movsb
pop
mov
cli
addb
add
test
inc
inc
mov
sti
xchg
add
roll
repz
mov
pushf
mov
sub
cmp
add
add
filds
mov
xchg
mov
movzbl
mov
mov
push
jg
add
lock
imul
mov
loopne
jo
inc
cmp
push
jns
inc
dec
lds
imul
cmpsb
sbb
add
mov
add
add
ficompl
xchg
or
fs
dec
sar
add
ret
mov
test
xchg
clc
and
push
cmp
sbb
pusha
test
je
nop
mov
add
mov
or
shll
stos
and
xor
shlb
aas
sbb
inc
sbb
lahf
out
mov
lret
push
das
pop
lock
add
xchg
lock
add
cli
inc
inc
mov
push
popl
mov
imul
in
pop
dec
mov
dec
add
sub
int3
sub
inc
add
lret
in
jns
add
or
gs
jae
ljmp
andb
sbb
add
int3
add
jg
sarl
adc
cmp
jg
fidivrl
inc
cwtl
stc
push
or
fldl
pushf
sbb
mov
cmp
jle
jno
xchg
je
test
lds
hlt
mov
jmp
cmp
mov
stc
mov
mov
or
mov
cmc
adcb
and
fldt
fsubrp
outsb
andl
add
and
add
inc
out
mov
add
xchg
in
or
sti
loopne
add
xchg
jb
sbb
insl
add
es
sub
pop
mov
push
inc
xor
mov
outsb
add
jmp
dec
cmp
pop
jne
pop
add
arpl
loope
xchg
jbe
xor
add
mov
imulb
movsb
inc
push
enter
insb
lahf
add
sarb
addr16
repnz
mov
xchg
and
sbb
neg
push
jl
push
jno
xor
or
jb
subb
adc
fisttpl
mov
or
add
mov
dec
mov
divb
cmp
test
jae
dec
sar
adcb
jbe
jne
xorl
loope
addr16
int3
jns
jl
add
and
rcrb
mov
std
call
add
jecxz
into
fsubrs
clc
sbb
lock
sub
lahf
imul
and
or
xchg
add
lea
adc
pop
push
ret
dec
mov
subb
psadbw
icebp
ljmp
sbb
mov
mov
pusha
out
or
inc
push
movsl
cld
dec
in
xor
sub
insb
shlb
add
aam
iret
nop
dec
add
adc
clc
jg
dec
jg
xchg
nop
add
enter
sub
xor
jmp
cmpsl
or
add
icebp
loopne
jmp
in
mov
cmp
sbb
out
jns
ljmp
icebp
ret
xchg
add
andps
je
nop
mov
sbb
inc
mov
das
dec
arpl
and
cmp
popl
sbb
xorl
cwtl
sub
insb
xchg
cmp
xchg
push
push
or
lret
mov
add
sbb
add
testb
and
leave
sub
hlt
cld
cs
outsb
dec
iret
or
cld
add
cli
out
or
outsb
add
mov
add
jmp
or
xchg
pop
add
xor
dec
lea
fdivrs
adc
enter
mov
jb
lock
push
adc
sbb
mov
xor
test
fmul
outsl
pop
dec
mov
es
cld
add
mov
inc
mov
movsl
adc
jecxz
sti
push
add
rolb
popa
in
inc
arpl
mov
adc
dec
ffreep
enter
mov
jno
mov
lahf
call
xchg
es
add
sti
jge
mov
pop
lods
clc
sub
aaa
add
cmp
add
xchg
int3
and
scas
enter
cmp
push
in
fidivs
lds
aad
jge
cmp
insl
add
lods
mov
push
test
push
mov
je
add
push
int
scas
xchg
add
and
add
sub
out
add
add
fs
ss
pop
cmp
pusha
ficoms
inc
or
pop
daa
or
or
xchg
inc
scas
add
notl
ret
dec
lods
sbb
or
hlt
out
pop
sub
pusha
call
and
insb
jo
adc
jg
or
or
jne
push
sbb
lahf
mov
test
mov
sub
iret
cmp
adc
movsl
push
sub
push
js
push
jno
mov
cmp
outsb
add
fs
mov
jne
stos
loop
loopne
test
call
xchg
adc
mov
jbe
cmpsl
dec
adc
and
mov
sbb
daa
mov
adcb
mov
mov
add
movsb
daa
hlt
pusha
push
inc
xchg
add
nop
lock
out
inc
movsl
dec
test
icebp
xor
pusha
inc
add
cmpl
mov
push
push
and
pusha
inc
imul
je
xchg
jns
add
bound
xor
add
loopne
notl
sbb
das
add
lock
or
mov
add
popa
ret
dec
add
shr
daa
mov
pop
pop
out
mov
xchg
insb
add
shr
lds
sub
mov
xchg
and
add
cwtl
sub
sbb
je
push
orb
stc
fisttpll
in
cmpsb
lock
sahf
outsb
cltd
push
ja
pushf
pop
incb
lock
leave
subl
dec
add
out
pop
jg
adc
jae
or
nop
fmull
bswap
shlb
mov
pop
or
add
fsubs
sub
push
inc
or
mov
and
mov
jnp
or
cwtl
jb
lods
popa
sub
dec
sbb
in
or
pop
idiv
jle
cmpsl
inc
dec
fadds
test
xchg
test
mov
fsubrs
ds
cli
arpl
sub
loope
aas
inc
cmpb
and
sbb
pusha
adc
inc
das
mov
pop
aam
adc
mov
cli
fidivrl
fildll
sub
out
pop
add
xor
and
cli
dec
sarb
sbb
shl
cmp
add
ja
dec
xchg
test
flds
or
je
add
arpl
addl
sbb
cld
and
sbb
mov
xor
mov
inc
dec
ds
ds
add
bound
push
add
sub
jb
cwtl
push
pusha
inc
sub
xor
add
dec
mov
stos
into
mov
stc
int
cld
movsl
sbb
int3
orl
test
mov
dec
mov
xor
stc
subb
pop
iret
clc
push
dec
add
add
jno
imul
sysenter
mov
inc
xchg
add
jne
add
inc
shrl
sbb
mov
addb
pop
mov
and
sub
sbb
add
dec
and
adc
add
mov
imul
notb
push
mov
xchg
jmp
rorb
add
mov
mov
or
sub
ucomiss
nop
add
sub
and
pop
push
and
add
sub
iret
rclb
xchg
push
ja
ret
shll
cmp
in
pop
mov
jno
add
bound
sar
jmp
mov
and
mov
bound
xor
mov
inc
sbb
add
nop
insb
pop
sbb
pop
lock
add
ja
loopne
xor
dec
add
lahf
popa
xchg
mov
fsubrl
or
in
ljmp
pop
and
mov
imul
adc
rclb
decb
mov
stos
pusha
inc
jle
mov
xchg
jns
inc
movsl
mov
jb
inc
mov
push
lcall
xor
imul
inc
sbb
rolb
sti
cltd
cmp
sbbl
and
sub
cmc
mov
ja
movsb
add
stc
icebp
and
mov
jo
and
and
push
xchg
push
fisubrl
sub
ss
fistpl
mov
push
xor
and
dec
xor
addb
add
jmp
or
shlb
dec
jbe
adc
das
scas
pusha
jo
fdivs
cli
pushf
adc
fidivrl
pop
sbb
mov
lea
xchg
repnz
mov
ds
lcall
pusha
ja
andl
jb
aas
add
insb
pop
or
cmp
xchg
and
and
sub
and
cmp
sbb
sbb
fsubs
je
add
adc
cmp
pop
pop
pop
lds
sbb
xor
add
in
jmp
fwait
loopne
mov
mov
sub
movsl
stc
imul
or
pop
orb
push
sarb
cs
aam
decb
add
out
mov
pop
sbb
add
xorb
pop
pop
push
mov
xchg
add
call
cmp
xor
jnp
test
pop
hlt
loopne
inc
pop
test
and
jmp
mov
mov
add
or
std
cli
subb
mov
cmpsb
gs
push
or
and
loopne
push
negl
mov
adc
and
push
sbb
mov
fs
pop
out
push
xchg
rorb
aam
lods
add
cmp
jg
jnp
sub
xchg
mov
push
in
jp
cmpsl
and
lea
pop
je
and
mov
cwtl
xor
and
lcall
adcb
lock
and
mov
lret
ret
rclb
jmpw
dec
push
into
lret
jge
sub
mov
test
int
mov
or
push
xor
notl
fiadds
mov
pop
out
sub
clc
add
pushf
pop
imul
and
add
nop
inc
push
loop
add
clc
je
cmc
rcrb
pop
pop
loop
hlt
push
sbb
mov
icebp
into
movb
dec
or
cmp
inc
sub
and
dec
test
jecxz
mov
add
add
imul
into
xor
les
test
imul
lea
fiadds
xchg
dec
add
inc
adc
inc
mov
mov
xor
loop
sub
xchg
ret
jecxz
push
inc
movsl
jnp
or
add
mov
loope
loope
mov
rolb
pop
fadds
push
add
mov
mov
pop
int3
add
dec
mov
cmp
jno
les
mov
sbb
aad
out
push
loopne
inc
test
mov
rol
jns
inc
cmp
ret
rcrl
sahf
lods
inc
sti
shr
mov
shrb
jmp
mov
add
jns
inc
xor
test
sysexit
sbb
mov
add
push
test
push
pop
arpl
pusha
lcall
call
or
mov
sbb
sub
lret
clc
push
pop
mov
mov
push
xchg
mov
and
add
cmp
add
mov
fadds
fistpll
lods
add
or
adc
add
cltd
cmp
xchg
test
int
push
rcrb
adc
xor
xor
lahf
out
pop
add
repnz
sub
add
scas
lret
gs
xchg
and
clc
lock
xor
mov
cld
stos
pop
cmp
stc
push
xchg
jbe
dec
movsb
mov
mov
cmp
mov
push
data16
aas
dec
add
or
xor
pop
loope
cmp
out
mov
leave
push
add
jne
push
cmpb
mov
and
cltd
test
mov
lock
aaa
scas
insl
pop
sbb
lret
sbb
xor
outsl
sbbb
test
add
jg
push
das
mov
dec
lods
jge
xchg
sub
push
cld
test
add
rorb
nop
xchg
addr16
add
repnz
scas
cmp
repz
iret
push
aam
adc
pop
jne
inc
add
dec
test
jp
or
call
or
repz
push
mov
subb
fstpt
addr16
mov
jne
and
or
jne
inc
fwait
test
icebp
jnp
in
pop
mov
adc
mov
loopne
mov
cltd
inc
inc
push
scas
push
cmp
inc
sar
mov
pop
wbinvd
lods
lret
mov
mov
add
and
sbb
js
insl
cltd
push
inc
cwtl
std
or
adc
jle
inc
test
sbb
sbb
enter
sti
test
push
sbb
cwtl
or
fsubrs
mov
rorb
mov
cmp
add
xor
dec
cmc
push
cs
xor
mov
inc
fcomi
pop
icebp
stc
pop
mov
subb
lods
xor
enter
xlat
addb
cmp
adc
add
sarl
subl
cmp
repz
popf
clc
jns
aad
push
sbbb
movsl
jb
sbb
fdivl
dec
outsl
bound
xor
inc
faddl
pop
push
push
sbb
mov
lret
fadd
movsb
std
cmp
insb
cmp
cs
aaa
mov
jb
incl
dec
add
mov
push
sbb
int3
in
pop
ret
pop
push
and
cmp
dec
xchg
cmp
ret
ret
enter
inc
subl
pop
in
xchg
cli
jb
pop
and
sub
pop
push
loopne
insl
lret
faddp
add
lret
add
gs
add
fiaddl
pop
outsl
pop
roll
mov
sub
or
lcall
aas
lock
mov
pushf
mov
push
mul
and
xchg
dec
dec
push
es
mov
or
mov
loopne
jne
cwtl
push
test
add
jne
mov
and
pop
mov
enter
cmp
sbb
test
cmp
lcall
addl
sbb
jnp
int
jb
ljmp
int3
out
push
jno
push
fnstsw
and
pop
pop
jnp
xorb
aad
hlt
xor
repnz
rclb
xchg
or
lock
fs
jo
out
jnp
mov
jmp
xchg
filds
adc
cmp
ja
pusha
loopne
dec
xor
out
scas
jmp
inc
inc
ror
insb
xchg
mov
add
fadd
aas
mov
and
test
shrl
cli
cmp
lret
and
cwtl
arpl
pop
in
lock
rol
xchg
pcmpeqb
or
gs
push
jg
xor
add
bound
fbld
dec
lock
add
scas
nop
fmull
jne
xlat
shll
mov
add
dec
je
pop
lock
lret
pop
inc
lock
xchg
pop
cmp
inc
pop
add
mov
fcoms
sahf
dec
add
scas
cmp
and
cmp
add
fidivrs
sub
mov
mov
in
sbb
out
sbb
stc
add
movsl
or
loopne
mov
mov
pop
pop
daa
mov
aad
sub
mov
mov
vpsubsw
jp
jl
add
lret
out
mov
xchg
dec
or
loop
shlb
add
jge
out
add
daa
das
push
mov
hlt
lock
sub
add
and
jno
push
add
xor
loop
or
push
scas
mov
pop
inc
iret
imul
mov
pop
pop
cli
sti
hlt
push
ror
mov
addb
mov
jge
into
sbb
mov
orb
rorb
xchg
sbb
lret
ss
cltd
aad
repnz
xor
mov
dec
js
lret
jecxz
jb
and
pop
mov
or
sub
mov
test
popa
clc
test
pusha
pop
adc
jle
push
test
inc
lods
dec
sbb
nop
arpl
push
incl
dec
jg
pop
xor
xchg
jns
or
aam
dec
sbb
fidivrs
xlat
pop
icebp
addb
in
or
pslld
mov
fdivl
jle
mov
sbb
movups
fsubs
cs
push
mov
int3
arpl
sarb
pop
out
push
mov
lret
dec
cmp
push
add
aam
push
int3
popa
xlat
frstor
adcb
jp
lods
mov
hlt
mov
fcomp
push
js
aam
lea
xor
popa
push
cli
or
fadd
or
push
clc
xlat
cmp
mov
add
rcll
dec
js
dec
rolb
loopne
cs
mov
and
adc
sub
idivb
or
and
shll
scas
femms
cmp
daa
orb
test
jl
mov
add
inc
push
dec
clc
xor
loop
push
or
fs
insl
and
ret
stos
push
sub
and
jp
rcll
in
push
inc
add
lret
mov
andb
fdiv
or
fdivrl
sub
lock
mulb
dec
loopne
pop
add
cmp
inc
insb
rcl
lcall
cmc
idiv
and
pop
aaa
sbb
stos
add
add
pop
ljmp
fists
mov
jne
into
add
bound
imul
cmc
mov
enter
cmpsl
dec
rclb
add
mov
mov
enter
jg
mov
imul
lds
xor
rorl
fld1
out
jo
dec
pop
loop
inc
mov
add
out
int
cmc
sbb
in
mov
xchg
inc
pusha
popf
push
add
mov
into
xchg
add
jb
loop
pop
bound
testb
inc
add
ss
push
adc
sbb
fsts
push
xchg
pop
imull
push
inc
or
or
pusha
jnp
ss
xchg
incl
cmpsl
in
nop
sub
addb
jmp
push
and
call
mov
cmpl
test
add
mov
push
mov
pop
shl
stos
cmpsl
lods
ss
lds
xor
add
xor
sbb
movsb
jb
addl
sbb
rcll
xor
sub
popf
outsb
pusha
adc
test
popa
mov
push
iret
and
jl
fistps
cmpsl
add
decl
and
cmp
add
xor
add
mov
pop
mov
pop
fs
mov
bound
mov
jnp
ja
out
push
mov
lods
push
mov
fmuls
xor
push
adc
mov
jecxz
rcr
psllw
int3
mov
sahf
pop
into
repz
movsl
pop
out
push
cmpsb
adc
xor
in
mov
call
rcrl
lcall
rorb
pop
fwait
inc
cld
shr
add
mov
xor
bound
fwait
add
inc
inc
pop
popa
add
aas
inc
inc
add
stos
pusha
cld
cmpsl
jp
or
jns
sbb
adc
xor
fadd
and
jge
rorl
add
cmp
xchg
pushf
mov
xor
popf
inc
orl
out
in
add
sub
outsl
and
je,pt
mov
pop
clc
mov
dec
sti
xor
push
int
jge
enter
xor
repz
inc
rolb
and
add
push
pop
push
loope
shrl
or
jae
adc
add
mov
sub
add
int3
cmc
aas
movsb
std
lahf
sbb
or
xchg
xchg
clc
add
sub
jno
xchg
jb
jge
les
pop
mov
push
xor
xchg
in
mov
mov
xchg
dec
sbb
add
dec
mov
pop
or
add
add
mov
lock
and
inc
mov
cli
and
jmp
mov
add
jo
js
sub
loopne
cmc
adc
cmpsb
adc
lock
push
cli
sbb
push
ja
add
imulb
xor
adc
shll
ss
lock
cmp
idivl
dec
and
fcomp
xchg
xchg
and
adcl
inc
std
out
add
xchg
inc
add
lods
cld
inc
jbe
dec
in
mov
mov
add
shll
xchg
hlt
pop
cmp
mov
test
mov
cmp
aam
andl
jnp
inc
movsb
hlt
flds
mov
cmp
add
in
xchg
mov
and
outsl
jno
popa
pop
or
daa
inc
sbb
add
je
add
mov
sub
jmp
add
in
xlat
into
fldenv
movsb
adc
in
cmp
add
not
fwait
int3
loopne
add
sbb
jno
test
sub
dec
xlat
popa
es
mov
inc
push
je
push
repnz
pop
in
lods
xchg
bound
fsubs
lods
add
or
jge
sahf
fildll
add
dec
fs
lret
and
mov
or
mulb
sbb
repz
lods
ficomps
aam
lods
add
popa
pop
inc
out
xor
add
mov
and
cwtl
push
mov
mov
mov
inc
insl
ret
add
cld
les
xor
nop
add
push
cmp
scas
xchg
dec
mov
cmp
in
mov
out
add
inc
frstor
inc
xchg
in
add
push
lods
imulb
outsb
scas
nop
add
in
arpl
and
xor
call
dec
and
jne
pop
adc
mov
sbb
lret
fwait
or
cmp
shlb
and
add
adc
je
mov
cmp
das
cwtl
nop
xchg
jb
dec
fwait
or
dec
jno
scas
sbb
enter
add
mov
aam
push
add
fdivrl
add
or
inc
das
into
sbbb
jnp
and
lahf
idivl
rorl
xor
sub
fwait
mov
hlt
jbe
test
mov
mov
pandn
xor
fwait
xor
in
add
cwtl
lea
jmp
into
cmp
mov
lds
lods
push
mov
aam
faddp
fistpl
inc
ffree
lahf
mov
ds
mov
faddl
mov
stos
idivb
sub
sub
cmp
jg
repnz
dec
addl
xor
stc
and
xchg
fildl
jl
sbb
aam
and
into
sahf
hlt
add
mov
and
sub
sub
subl
add
sbbb
inc
out
dec
and
xor
iret
mov
lods
wbinvd
out
cmp
cmp
fwait
mov
bound
aad
or
sub
jecxz
add
stc
pop
pushf
push
or
ret
xor
add
repz
lds
cmpsb
gs
or
or
les
cmp
into
adc
sbb
enter
xor
mov
cwtl
add
lret
jno
loopne
add
adc
inc
out
add
cmp
add
into
dec
nop
or
xor
aam
cmp
aas
push
mov
add
aad
faddl
mov
sbb
add
inc
cs
divb
add
jns
inc
mov
aas
stos
das
adc
icebp
push
faddl
add
sti
clc
dec
fldl
pop
repnz
addb
sub
add
mov
jnp
jmp
dec
cs
rorb
mov
and
ja
fldl
test
cmc
xor
clc
cld
pop
popf
cwtl
js
add
xchg
addr16
adc
add
or
hlt
testb
xchg
in
add
rclb
nop
insb
add
setge
pop
pop
rorl
mov
ljmp
fistpll
or
push
daa
jnp
pop
add
mov
sub
pushf
into
mov
movsl
test
sub
dec
test
loopne
cmpsb
or
add
xchg
insl
repnz
inc
sbb
fadds
sbb
lock
pop
jno
pop
xchg
popa
pushf
xchg
jbe
ja
jmp
out
add
movsb
xchg
daa
push
ds
xchg
xlat
lock
add
lock
fnstcw
sub
dec
out
sub
int
ret
mov
add
ljmp
jbe
push
sahf
jno
pop
inc
dec
cmpsl
cwtl
add
push
enter
jb
daa
mov
push
enter
xchg
nop
cmp
xor
in
xor
lods
add
js
ficomps
jmp
fnstenv
cmp
dec
cli
out
aas
push
outsl
arpl
fdivs
sbb
mov
insl
push
into
jp
jle
shr
imul
push
mov
mov
aad
loope
iret
sbb
and
imul
pop
inc
and
and
add
lock
icebp
hlt
xchg
add
adc
popa
das
xchg
add
out
cmpsl
push
pusha
mov
sbb
push
fmul
lcall
call
mov
push
pop
or
lahf
and
xchg
fwait
hlt
addb
mov
enter
add
inc
imul
shrl
dec
out
mov
or
movsb
sbb
lahf
xchg
in
add
js
fbld
jns,pt
cmpsl
adc
adc
add
dec
fadd
cmp
add
loopne
jl
outsb
push
inc
es
pop
mov
ds
add
aas
jmp
jo
andl
mov
mov
or
mov
pop
sub
mov
daa
sahf
mov
add
nop
adc
mov
sub
mov
sub
flds
jl
pop
js
stc
inc
rolb
push
mov
outsl
pop
movsl
lds
jmp
dec
push
adc
pop
mov
and
adc
or
sbb
mov
iret
les
push
sub
rcrb
pop
and
adc
cmpsb
push
mov
pop
sbb
loop
js
sbb
pop
adcb
and
xchg
sub
lds
adc
add
inc
xchg
in
add
cltd
andb
pop
pop
inc
dec
add
popa
out
pop
or
and
adc
add
fsub
popf
and
int
mov
out
in
xchg
inc
or
mov
cwtl
js
jno
cld
pop
shl
mov
cmovge
add
cmp
cmp
bound
pop
xchg
mov
or
enter
andl
fwait
add
cmc
int3
and
negb
dec
outsb
inc
insb
mov
inc
aam
inc
add
jp
cwtl
push
gs
rclb
rclb
dec
jmp
and
ficoml
sbb
add
xor
jmp
mov
bound
nop
ret
push
or
imul
jmp
std
test
or
sub
sbb
cmp
hlt
aam
add
mov
add
mov
inc
xchg
or
mov
xor
mov
xor
mov
popf
fisttpll
or
and
or
push
inc
mov
add
lahf
iret
inc
xchg
inc
add
outsl
cmc
push
arpl
jb
and
push
add
mov
stc
idivb
lods
mov
xor
and
sub
addl
mov
xor
add
test
jno
sbb
jne
xchg
cmp
mov
mov
mov
fdiv
add
es
pop
push
cmp
sbb
push
xor
sbb
fcomip
adc
clc
add
mov
add
jmp
lcall
jge
and
add
ja
push
addl
sub
loopne
xorb
imul
jecxz
mull
jle
sahf
xchg
cmp
cs
cld
add
mov
and
cmp
add
adc
jns
xor
inc
outsb
fprem
pop
loop
sbb
pop
shl
add
and
clc
add
nop
scas
push
insb
montmul
cmpsb
add
scas
ret
lahf
cmp
cmp
adc
jl
push
inc
add
sbb
push
dec
pusha
in
sub
mov
cld
or
movsb
or
int
lods
call
add
mov
xchg
add
insl
aad
cli
dec
add
add
push
push
mov
mov
hlt
mov
ds
xor
cs
movsb
add
and
add
jne
daa
jmp
and
mov
cmp
clc
pop
jne
test
sbb
cwtl
xchg
add
data16
cmpsl
dec
inc
or
or
movsl
stc
cmp
lods
je
movsb
xchg
xorl
push
and
scas
sahf
xor
sbbb
or
dec
flds
add
sbb
push
orb
int
test
hlt
push
fs
nop
and
add
or
divb
add
lcall
jecxz
jg
pop
push
jae
add
in
sbb
in
aad
push
mov
leave
lock
sti
sub
sub
pop
cmpsb
ja
cmp
and
xchg
jge
add
insb
mov
add
rclb
repnz
push
xchg
out
add
divb
pop
imul
inc
pusha
xor
lret
mov
xchg
and
aas
imul
cmp
mov
and
xor
addr16
mov
fstl
push
in
mov
int
add
sbb
jg
xchg
sub
pop
jne
hlt
cmpsb
pop
ret
mov
push
aam
inc
push
inc
imul
in
add
or
fadd
dec
fsubl
add
out
pop
stc
xor
add
push
sbb
xchg
sub
lahf
bnd
add
jnp
pop
pop
pusha
test
or
add
dec
jo
es
jns
nop
rcr
cmp
add
ja
cmp
lds
mov
out
sbb
inc
dec
mov
dec
adc
ja
add
cltd
in
cmp
pop
sarb
dec
pop
mov
mov
add
add
push
clc
adc
inc
out
cmpb
mov
xor
push
push
gs
test
outsb
xor
inc
xor
les
push
add
shl
mov
mov
cltd
pop
inc
push
sub
mov
lds
loopne
imul
cmc
adc
mov
data16
std
adc
shlb
and
lret
sbb
push
mov
mov
add
wrmsr
imul
scas
mov
cmp
pop
dec
and
pop
mov
dec
sub
mov
push
mov
sbb
push
adc
dec
bound
mov
add
jmp
add
out
loopne
js
and
push
add
test
pop
mov
out
sub
mov
lock
or
rolb
adc
pop
add
into
sbb
out
rolb
mov
push
push
add
inc
sub
mov
lds
ss
dec
mov
add
push
test
insl
mov
jae
inc
movl
cmp
test
jo
add
clc
ficoms
rcrl
scas
jns
inc
jl
push
add
mov
add
dec
les
jmp
imul
add
icebp
add
clc
jns
sbb
sub
js
lea
mov
xchg
cmp
in
push
xchg
inc
rclb
dec
scas
add
repz
add
or
cli
mov
push
dec
cmp
pop
mov
lcall
out
fisubs
mov
or
testl
push
sub
jge
fcomps
inc
mov
sbb
cmpsl
test
jbe
roll
daa
stos
mov
xor
test
clc
mov
call
or
jae
add
or
nop
sbb
or
mov
add
shl
mov
sub
pop
and
sbb
mov
xlat
scas
nop
pusha
push
test
mov
jg
cmp
ret
pop
rcl
dec
rorb
sbb
insl
test
aaa
mov
loop
mov
cmp
arpl
dec
mov
fildll
loopne
pop
cmp
inc
mov
shrb
sub
add
mov
inc
pop
hlt
test
or
mov
lea
add
lret
push
pop
jb
das
cmpb
mov
add
ret
xchg
scas
lret
fcomi
loop
arpl
inc
xor
inc
and
mov
add
in
inc
push
jge
pushf
js
dec
mov
add
and
xor
pop
add
or
jne
push
sbb
xchg
int
imul
testl
pop
insb
loop
lret
mov
fmull
add
in
add
jbe
mov
push
jno
pop
push
pop
mov
add
xchg
add
data16
subl
mov
dec
mov
dec
out
add
sbb
pop
in
mov
add
jecxz
sti
add
pop
push
sub
cmp
aad
mov
je
add
icebp
xchg
cmp
pop
lahf
cmp
adcl
negb
xchg
lahf
out
ljmp
dec
sub
cmp
icebp
or
movsb
adcb
ja
mov
ds
add
jnp
jo
in
mov
add
push
inc
pushf
cmc
pop
scas
add
sbbl
arpl
mov
cs
push
icebp
push
fwait
and
xchg
add
pop
dec
lret
inc
xchg
sbb
shl
add
je
mov
mov
dec
mov
add
loop
dec
add
inc
hlt
jp
inc
repnz
out
add
push
lcall
push
out
subb
arpl
jp
push
cmp
xchg
push
xchg
xchg
add
jle
stc
mov
add
cmpsl
insl
mov
cmp
pop
push
add
lock
movsl
bsf
mov
add
data16
lock
je
pop
cmp
sahf
jo
repz
aaa
dec
mov
fsub
cwtl
enter
out
add
cmp
bound
cli
cwtl
add
sbb
cmp
mov
addl
add
out
pop
notl
pusha
cmp
xor
push
xchg
push
rol
andb
xchg
in
push
adc
cltd
sarb
add
enter
dec
orb
pusha
jne
mov
xchg
lds
add
inc
decl
movsl
in
or
aas
and
cmp
jnp
push
add
xor
sbb
lods
insb
xor
add
rcrb
aaa
and
sub
push
inc
cmp
sahf
jns
add
pop
sbbl
enter
add
imul
int3
insl
and
call
dec
inc
andb
mov
notl
mov
sahf
cmpsl
add
test
mov
mov
int3
push
call
and
stc
xchg
inc
add
inc
jne
cmp
adc
push
sbb
pushf
in
xlat
jo
add
jp
rcl
fisubrs
sbb
imul
adc
or
xor
jb
mov
fistpll
xor
push
ljmp
ja
nop
cmc
aam
inc
pop
int
dec
mov
sbb
add
jne
test
add
jecxz
mov
scas
mov
add
jo
call
and
inc
daa
or
push
loopne
cli
push
int3
mov
add
ss
pop
into
xchg
fildl
loopne
dec
pop
filds
lret
push
daa
and
orb
add
addl
add
pop
imul
add
dec
mov
mov
rolb
test
lcall
mov
sti
mov
inc
lods
add
pop
add
and
in
mov
or
lahf
mov
sub
jle
and
cmp
or
pushf
jne
sarb
jo
loope
add
int
pop
mulb
dec
fimuls
add
mov
mov
push
mov
mov
cmp
aas
pusha
jle
pop
push
cmp
adcb
sbbb
add
cwtl
orl
loope
adc
adc
jnp
loopne
das
add
roll
inc
repz
inc
sub
roll
add
sbb
nop
pop
mov
orl
in
or
scas
and
loop
leave
and
jno
sbb
outsb
inc
arpl
shll
add
jge
push
adc
aas
cmp
and
adc
leave
and
mov
mov
mov
xor
and
xchg
pop
add
in
or
sub
inc
xor
mov
and
inc
ljmp
or
cmpsb
lock
or
cmpl
clc
ret
daa
or
push
ljmp
xor
fadds
test
iret
dec
dec
cmp
inc
mov
jge
push
xor
cmc
and
orl
xchg
bound
add
push
add
add
loopne
inc
fimuls
mov
sub
stos
ret
aas
andb
ljmp
flds
jmp
pushf
in
inc
pop
dec
adc
in
adc
adc
pop
or
les
jg
push
loopne
andl
pop
stc
rorl
movsb
jne
sub
pop
fisubs
out
push
in
popf
mov
and
fimuls
add
rclb
push
or
les
rolb
add
ss
pop
mov
test
add
jg
in
subb
sub
sbb
addr16
fadd
cli
adc
mov
adc
add
les
pop
pop
jmp
fwait
inc
add
cmp
ret
in
adc
leave
sbb
nop
lock
pop
dec
add
lret
pushf
add
out
lret
movl
repnz
fimuls
push
mov
jne
ss
in
add
pop
pop
stos
daa
inc
add
xlat
das
scas
or
push
ds
incl
mov
dec
dec
xchg
cmp
push
xchg
pop
xor
mov
in
mov
ljmp
leave
adc
mov
xor
sub
into
inc
adc
xchg
pop
outsb
str
sti
jecxz
fadds
fs
mov
cmc
dec
jno
sarl
sub
pop
pop
push
jl
jg
add
mov
add
cmp
aas
jno,pt
pop
pop
inc
push
add
add
xchg
add
clc
mov
xchg
data16
mov
add
nop
in
shll
shrl
mov
cmp
ret
pop
scas
stos
in
outsl
cmp
and
push
rclb
xor
arpl
sub
fisubl
xchg
int3
jo
xor
add
test
inc
decl
add
add
aad
ds
xlat
add
divb
mov
pop
les
xchg
mov
ret
mov
aam
dec
cmpsl
pusha
add
ds
fldenv
addb
imul
pop
outsb
fsubl
cltd
repnz
ficompl
pop
out
pushf
data16
cld
das
or
push
sub
dec
jns
jnp
add
test
xor
ja
scas
or
js
pop
test
add
or
mov
loopne
mov
les
pushf
repnz
out
popa
or
xor
pop
and
mov
ja
inc
push
adc
incb
aaa
insl
sarl
movsb
inc
sub
cmp
xchg
cwtl
movsl
and
es
dec
rclb
jo
and
js
and
lea
add
xchg
roll
or
add
out
jnp
pop
and
and
add
cmp
loope
or
cli
daa
add
dec
in
mov
push
xor
ljmp
dec
rclb
fiadds
movsl
xorb
das
fildl
pop
lcall
push
adc
dec
xor
add
sbb
lret
enter
ret
mov
cmp
cmp
aam
subb
les
imul
cmp
add
fcomps
pushf
inc
pop
mov
ljmp
sbb
push
cmp
repnz
stos
add
and
xchg
mov
insl
out
add
fwait
stc
xchg
mov
add
fimull
and
add
xor
dec
jg
push
fbld
popa
sbb
sbb
inc
add
add
movsl
mov
aam
inc
sub
adc
lcall
lea
mov
hlt
mov
nop
cld
stc
dec
cmpsb
call
outsb
pop
or
add
mov
add
inc
sti
hlt
mov
dec
std
mov
dec
insb
push
adc
add
jns
mul
cmpl
pop
clc
out
repnz
repz
xlat
jmp
shlb
ljmp
sarl
lahf
ret
mov
fdiv
addb
dec
adc
lcall
imulb
in
js
test
mov
pop
test
jno
add
sbb
add
aas
mov
sub
inc
add
dec
and
xchg
sub
add
addr16
sub
pop
pushf
push
mov
mov
popw
inc
shrl
fadds
mov
xchg
adc
mov
mov
addl
dec
inc
fdivl
mov
mov
lods
and
das
push
loope
hlt
add
cmp
pop
add
arpl
fsubl
imul
pop
push
insl
repnz
inc
testl
mov
pop
push
add
je
out
repz
pop
jg
add
fildll
pop
cmp
push
sbb
cmp
adc
inc
dec
imul
add
ss
sbb
inc
mov
push
popl
bound
add
mov
dec
roll
shrb
add
mov
add
inc
les
pop
stos
jb
adc
jp
stos
dec
jge
cmpl
call
sub
rcl
sub
jae
pop
jns
and
mov
xor
jecxz,pt
sbb
stos
xor
lods
rolb
dec
gs
sub
rcrl
sub
add
lret
inc
sbbl
stc
je
nop
add
jno
pop
addr16
jecxz
pop
xor
fidivs
nop
out
or
mov
xor
clc
lock
cmp
mov
lcall
xorb
sub
mov
jmp
dec
add
add
push
in
push
dec
lss
fiaddl
cmp
add
andb
jns
bound
add
lods
cmc
js
mov
push
mov
nop
sub
sahf
fwait
or
lahf
lcall
inc
xchg
pop
divl
loope
push
fs
push
daa
dec
fdivs
add
popa
dec
ret
inc
jne
add
push
or
test
sbb
and
ret
add
pop
rolb
in
mov
mov
inc
arpl
movl
stc
scas
mov
outsl
cmp
lds
fimull
ficomps
cld
pusha
daa
add
mov
xor
mov
mov
xchg
push
in
fdivl
jno
add
adc
les
adc
jno
inc
in
pop
and
in
nop
in
sub
add
popa
loope
lock
dec
jecxz
js
rclb
in
sbb
sub
mov
pop
mov
icebp
insb
inc
xchg
aas
adc
inc
or
imul
lahf
dec
dec
add
icebp
push
push
stc
mov
mov
dec
fildll
cltd
xchg
addb
cmc
mov
cld
addb
jge
and
sti
and
xchg
add
in
adc
out
mov
xchg
lods
test
jg
xor
push
mov
cld
in
pushf
je
jmp
cmp
imul
mov
mov
mov
add
insb
pop
repz
sub
pushf
add
dec
push
inc
or
pop
push
mov
pop
add
loop
cltd
les
addb
or
inc
add
sti
pop
push
aad
sub
lcall
adc
inc
cmpsl
pop
sbb
ror
xchg
pop
xchg
xorb
sbb
das
mov
adc
add
adcb
add
pop
and
stos
adc
add
push
jo
imul
adc
mov
jnp
and
add
fsub
mov
add
popf
repz
popa
je
add
sbb
jmp
nop
xchg
cmc
adc
pop
rcr
in
add
shlb
ss
adc
aas
shll
xchg
fadds
and
mov
jge
sub
inc
rolb
jns
daa
ror
sbb
and
cmp
push
pop
cmp
sub
adc
shlb
pavgb
pop
xor
mov
jno
ficompl
popf
push
cmp
repz
push
or
mov
sbb
lods
mov
add
jo
add
sub
xor
filds
push
fidivl
hlt
xlat
es
xor
cmpsb
cwtl
lahf
jle
pop
fwait
notl
lea
test
js
add
shlb
aad
xchg
orb
shlb
insb
sub
add
dec
push
cmp
cmp
add
adc
ret
xor
mov
pop
cmp
add
cmpsl
orb
bound
pop
cmpl
cmp
movsl
mov
pop
add
bound
cmp
fs
add
or
or
call
add
ret
ss
mov
movsb
jl
add
cmpsb
scas
mov
lcall
push
adc
and
jns
cmp
daa
insl
sbb
mov
xorb
mov
ficomps
rcrl
cwtl
mov
sbb
push
in
mov
movsl
sbb
cwtl
mov
add
daa
jge
test
jns
loope
popl
sub
pop
mov
rdmsr
outsl
xchg
dec
add
and
and
inc
and
arpl
jp
cwtl
jnp
add
test
cmc
cmp
mov
out
push
mov
mov
sbb
push
loopne
outsl
jbe
icebp
out
lock
xor
dec
fcompp
adc
mov
add
mov
lea
xchg
jg
mov
lcall
dec
cmpsb
sbb
or
push
add
inc
aaa
mov
or
enter
movsb
add
mov
in
inc
cltd
or
mov
fisttpl
add
lret
scas
pusha
push
add
push
dec
mov
mov
mov
push
push
or
adcl
xchg
repnz
xchg
adc
test
call
add
lods
lahf
adc
leave
scas
dec
lret
mov
adc
xor
push
enter
pop
xchg
mov
jmp
adc
in
add
mov
popf
pop
in
mov
in
dec
add
sahf
push
test
inc
out
addr16
shrb
or
gs
add
cltd
push
scas
pop
cwtl
dec
in
add
push
cmpb
mov
adc
inc
pop
repnz
cmp
loope
popa
js
out
dec
add
movsl
push
jge
lods
divb
mov
fwait
mov
shlb
sub
push
mov
dec
in
pop
nop
int3
add
daa
adc
rcr
sbb
sub
mov
dec
sbb
mov
test
insb
mov
daa
shrb
cmp
dec
pop
dec
sahf
es
adc
rorb
enter
fisubrl
icebp
aaa
daa
mov
int3
push
inc
lock
sbb
aam
rcrb
and
rolb
xchg
xchg
aas
lods
jg
xor
loop
add
mov
inc
add
sbb
mov
gs
enter
test
add
and
xchg
je
cltd
mov
pop
or
sbb
mov
shrb
cmp
mov
sbb
add
xchg
mov
stos
mov
jbe
mov
cmp
loopne
mov
jo
add
orb
add
push
pop
xor
add
addr16
fnstsw
les
cmp
loop
sbb
outsl
lds
adc
sbb
fwait
ret
inc
add
cld
inc
stc
jae
cmp
add
outsl
sub
jmp
adc
popa
daa
add
and
mov
negl
cmp
cmpsb
subb
jo
push
shr
and
sub
push
andl
out
sahf
subb
lds
cld
loope
pop
data16
ret
pop
aaa
pusha
adc
outsb
add
jnp
fnstenv
fwait
xor
test
rolb
sub
add
sbb
pop
hlt
ret
mov
adc
cmp
xor
loop
sub
jmp
je
paddb
push
push
loopne
mov
push
pop
and
adc
sbb
xor
pop
or
jp
jb
add
and
jnp
inc
sbb
push
add
inc
pusha
push
sbb
inc
int3
sub
adc
cmp
push
push
flds
and
movsl
pushf
pop
push
aas
add
fadds
call
sub
sar
test
cwtl
push
lret
push
add
jl
add
inc
incl
cmc
setle
mov
xchg
mov
xchg
lds
sub
add
pop
push
add
cli
daa
mov
pop
dec
cmp
jb
ljmp
mov
or
pop
sahf
jns
pop
imul
js
adc
in
jnp
pop
mov
addr16
push
cmpsl
pop
push
outsl
or
dec
dec
fmuls
push
test
hlt
std
pop
data16
fwait
cmp
movb
lds
jg
ret
ss
add
sub
lahf
in
or
rcrl
sbb
sub
xchg
cmp
inc
clc
sub
movsb
cmp
std
ficompl
and
jge
and
bound
mov
pop
cs
xchg
aaa
jnp
push
out
fistpl
add
rolb
cmp
cld
loopne
add
incb
movsb
cmp
inc
push
in
aaa
pop
ja
cmp
mov
xor
fldl
aam
mov
clc
data16
adc
mov
aad
inc
mov
or
adc
jbe
add
mov
add
out
mov
daa
cmp
pop
loope
pop
cltd
ss
push
roll
nop
pop
pusha
mov
add
jl
ljmp
push
or
mov
pop
jno
repz
or
add
or
mov
push
out
orl
or
dec
adc
and
shlb
rcr
sbb
jb
sub
mov
pop
pop
lock
add
push
xor
mov
test
in
push
mov
dec
jg
jl
add
xor
add
inc
sahf
or
and
mov
mov
add
mov
notl
push
add
push
out
ljmp
xorl
out
add
dec
xchg
dec
xchg
xchg
shlb
add
pandn
fdivs
bound
add
mov
add
cmpsl
push
adc
cld
orl
lods
fcomps
xchg
add
dec
jb
xchg
sahf
jnp
sub
push
rclb
push
jno
adc
enter
repz
dec
in
test
shrl
mov
hlt
pop
cli
add
add
add
adc
nop
incl
mov
cwtl
push
cmp
or
in
add
cltd
bound
scas
ds
add
aas
rcll
xor
std
mov
cmc
lock
call
ss
push
mov
js
jns
bound
andb
pop
in
popa
add
push
ja
push
xor
add
xor
inc
pop
sub
add
call
bound
inc
jns
pop
fdivrp
add
and
cmp
jg
pop
pop
aam
pop
lret
xchg
xadd
in
add
adc
cwtl
pop
filds
add
adc
mov
dec
movsb
mov
ds
lds
movsl
fucomi
sbb
inc
xchg
arpl
xchg
mov
shlb
push
add
shr
add
cmp
aad
adc
mov
add
cmp
push
into
aad
cwtl
lcall
mov
lods
jmp
add
jp
xchg
pop
test
adc
insl
and
inc
or
sbb
jl
or
mov
cmp
aas
pushf
add
sub
mov
sbb
add
jbe
cmp
shlb
pop
std
jmp
or
stos
xor
cmp
insb
sbb
add
inc
mov
or
cs
lock
mov
add
push
arpl
add
repz
in
add
lret
daa
enter
sbb
dec
jno,pt
cmp
jbe
add
jl
dec
scas
leave
add
or
sbb
jo
fistl
and
push
mov
arpl
dec
xchg
push
cmpsl
push
sbb
mov
pusha
push
cmc
shrb
and
fwait
pop
orb
add
mov
test
int3
xor
in
push
adc
ss
pop
mov
in
add
dec
mov
xor
outsl
faddl
nop
xchg
enter
cld
dec
adc
pop
leave
cmp
dec
cmp
inc
shrl
cld
and
out
push
sub
test
popa
cmp
and
push
jo
mov
cwtl
aam
cwtl
mov
fcomps
sbb
jno
sbb
or
jnp
mulb
or
adc
dec
mov
cmp
outsl
adc
mov
nop
outsb
push
pop
stc
add
jns
push
negb
loopne
jg
in
add
rcrb
adc
stos
cmpsb
and
ds
cmpsl
fadds
int3
call
or
iret
out
jo
dec
add
out
mov
cli
mov
sar
imul
loopne
add
push
mov
or
frstor
xchg
nop
xchg
add
pop
repnz
clc
jp
sbb
sbb
pop
sbb
mov
idivl
push
shl
aam
adc
fldl
jge
xchg
and
mov
out
cmp
or
add
cld
outsb
xchg
cmp
jp
push
js
pop
xor
or
xchg
into
cs
cltd
aam
add
loop
rclb
cmp
push
pop
adc
or
inc
out
add
loopne
cmp
lahf
dec
lahf
inc
pop
iret
jl
xorl
xor
pop
mov
jae
lock
repz
bound
cmpsl
adc
popf
insl
sbb
xor
cmp
and
and
jb
js
xor
push
inc
mov
cmp
loopne
sbb
sar
pop
inc
rorl
lock
loope
dec
add
sbb
pop
pop
pop
imul
lahf
mov
imul
test
add
or
loopne
inc
insl
jmp
jno
cmpsl
xchg
cwtl
push
add
push
lcall
lods
jge
add
pop
xchg
bound
dec
outsl
loop
push
xor
jo
clc
xchg
or
gs
loopne
addb
add
sbb
ja,pn
mov
scas
xor
mov
xor
and
jl
shrb
loopne
or
add
dec
icebp
cld
arpl
pusha
jg
cmp
cmpsb
add
outsb
sub
int3
pop
cmp
repnz
push
add
faddp
and
insb
mov
loope
cmpl
add
jne
loop
sbb
mov
cmp
push
adc
fstpt
mov
movsb
mov
adc
cltd
clc
xor
add
call
fnstenv
ret
sbb
pop
pop
fdivrs
inc
add
rcll
mov
ljmp
clc
test
in
jns
popf
sbbl
inc
add
mov
jb
pop
lcall
push
add
insl
xor
xlat
add
xchg
sub
jo
sub
outsb
js
push
cmpsb
outsl
shr
add
in
cmp
mov
jo
and
sub
or
pop
xchg
in
add
push
or
cmp
cwtl
xor
scas
xor
cmpsl
dec
or
xor
lea
cwtl
jo
add
out
sub
or
and
mov
cmp
mov
add
stos
rcrb
xchg
andl
fwait
add
sbb
daa
les
cmp
and
fcom
sbb
fmull
add
and
jmp
xchg
mov
pop
pop
in
ja
add
dec
mov
dec
add
stos
ret
pop
in
fs
sbbb
fwait
dec
mov
or
pop
test
dec
repz
addr16
std
or
xor
js
add
popa
jnp
adc
fistpll
dec
or
mov
mov
push
loop
fldt
adcb
mov
dec
incb
orps
mov
pop
add
jmp
push
shr
test
mov
cld
js
mov
adc
scas
mov
cmp
xor
call
mov
and
adc
cmp
int
add
add
mov
rorb
adc
push
stos
sub
sbbb
cmpl
loope
popa
pop
pop
mov
xor
inc
sbb
cmc
and
add
sti
test
jnp
dec
mov
mov
sbb
adc
mov
in
adc
sub
addr16
adc
mov
adc
mov
aam
adc
adc
in
inc
and
ficoml
and
and
adc
adc
cmp
xchg
inc
pop
cltd
sarb
imul
inc
test
mov
xchg
xor
cli
mov
stc
mov
push
jecxz
inc
pop
testb
in
push
addr16
ficoml
std
gs
add
mov
cld
pop
jle
dec
xor
add
fucomip
add
test
in
mov
in
fiadds
mov
push
insb
mov
hlt
clc
add
xor
mov
xchg
js
mov
xchg
mov
adc
cld
add
pop
ljmp
mov
stc
rcl
mov
sahf
pop
pop
jmp
add
shll
insb
and
stos
lods
sbb
jo
sub
cwtl
rcrl
mov
dec
xor
add
jb
cmp
mov
popf
pop
add
jmp
ret
jl
popl
pop
loop
adc
arpl
add
mov
es
jno
shrb
lods
add
adc
pushf
out
in
add
xor
lock
insb
aaa
xchg
add
cmp
dec
jge
dec
movsb
fdivl
xlat
sbb
rclb
add
roll
add
xor
and
cli
cmpb
sti
jo
lret
push
mov
pop
enter
cld
leave
addb
lret
cli
sub
adc
imul
mulb
loopne
add
or
test
int
jecxz
and
lea
aad
or
and
sahf
inc
pop
add
mov
pop
adc
cmp
sub
shlb
ja
fcmove
pop
dec
dec
es
invd
xor
out
xchg
ret
shlb
cmp
or
add
add
lret
inc
sbb
shlb
into
mov
xchg
add
shll
mov
pusha
dec
pop
in
ds
mov
adc
pop
rcrl
add
jno
popa
lret
push
cli
cmp
adc
mov
popf
pop
scas
cli
add
cld
or
sub
xchg
add
and
fcoms
mov
scas
mov
rorb
xor
mov
out
mov
clc
jecxz
mov
sbb
pop
push
imul
daa
nop
out
adc
xchg
mov
lds
je
xchg
jb
adc
mov
fwait
test
add
mov
lock
bound
repz
inc
mov
add
inc
inc
mov
icebp
test
hlt
add
scas
xchg
jb
repnz
add
sub
repz
cwtl
movl
or
cmp
xor
sbb
add
cmp
and
push
pop
inc
cmpsl
jb
outsb
in
stc
jg
pusha
lods
cmp
icebp
ret
add
xor
mov
add
push
mov
lods
mov
insl
mov
jmp
dec
aam
add
clc
adc
mov
pop
in
es
adc
sahf
shrb
inc
shr
jbe
in
btr
push
dec
add
mov
sub
add
test
pop
ret
and
adc
add
pusha
push
mov
lret
pop
add
push
addb
or
push
cmpsl
psubq
int3
inc
nop
shl
push
mov
jae
add
pop
jecxz
push
outsb
or
add
pop
js
add
shl
add
adcb
fiaddl
scas
or
fnsave
sbb
push
cmpsl
and
popa
add
aaa
adc
dec
add
aam
push
add
inc
scas
mov
test
xchg
inc
jno
dec
div
add
sets
mov
aam
js
add
std
shrb
je
call
or
or
add
jp
cld
imul
sbb
inc
das
andb
adc
sub
mov
cwtl
pop
popf
add
mov
xor
xor
cwtl
mov
jns
add
inc
xorl
scas
or
xchg
in
xchg
mov
lcall
pushf
movsl
mov
inc
cmp
mov
add
add
mov
cmp
xchg
jo
mov
ja
ss
sub
push
rolb
test
rclb
divb
add
xlat
jnp
adc
add
cltd
mov
xor
mov
add
dec
jg
imull
js
or
clc
popa
sub
mov
sub
stos
scas
add
sarb
out
add
xor
push
pop
mov
add
cmp
sbb
adc
mov
push
rorb
xor
mov
loopne
rclb
imul
sarl
popf
aaa
push
neg
or
fcomp
icebp
cmp
xchg
int
jg
mov
aam
inc
mov
lcall
cmp
enter
mov
pusha
enter
ficoms
jl
enter
xor
cltd
es
sub
jbe
sub
inc
adc
xor
push
jecxz
rcr
or
jne
add
add
mov
adc
dec
inc
inc
add
test
cmp
not
add
mov
xorb
sub
sbb
sbb
add
push
cwtl
out
call
cmc
stos
inc
pop
je
bndstx
mov
frstor
fildll
push
scas
fldt
sbb
mov
lahf
int3
xor
adc
and
loopne
jb
lret
inc
add
stos
in
mov
call
jno
mov
cld
add
add
xlat
rcrl
in
pop
fiaddl
fnstsw
push
add
aad
lcall
or
and
xor
sbb
add
out
clc
rcl
xchg
add
cmp
stc
sbb
lcall
ljmp
ss
or
add
clc
out
jp
movsb
shlb
cwtl
sub
enter
mov
insb
adc
push
les
pop
adc
cmpsl
std
add
mov
push
xlat
adcb
rorb
push
out
adc
test
mov
lock
mov
test
in
inc
fldl
mov
xchg
or
cmpsl
lret
adc
mov
add
fistl
pop
fstps
add
pop
rcrl
or
testb
jno
test
clc
loopne
or
cmpb
gs
fstl
xor
ds
out
into
add
mov
add
add
and
jae
add
xchg
or
mov
push
cmp
add
orb
cmpsl
adc
pop
push
xor
adc
cmpl
dec
add
stc
cmpb
pushf
lock
add
push
cmp
lret
push
nop
sbb
out
sub
aas
add
cwtl
add
dec
int
iret
mov
pop
in
movsl
sbb
xchg
and
jp
jo
add
and
push
add
add
mov
add
jle
andb
in
mov
sbb
xor
mov
pop
pop
mov
out
cmp
add
xor
adc
stos
mov
lock
out
clc
sahf
outsb
movsl
sti
add
add
push
push
pop
add
in
nop
dec
in
push
and
ret
sub
rclb
shlb
add
adc
and
add
xchg
jbe
inc
aam
add
test
jecxz
sbb
xchg
mov
stos
test
jns
add
mov
mov
pop
sub
xor
in
sbb
and
ret
pop
inc
mov
push
adc
cmp
dec
or
push
and
xchg
lds
and
adc
dec
cmp
push
sti
ss
jne
bnd
add
in
mov
pop
and
and
mul
push
or
mov
add
mov
jp
add
aas
mov
dec
xchg
or
mov
jecxz
test
ljmp
pop
ds
pop
in
mov
pop
clc
leave
sub
jo
cmp
repnz
gs
add
daa
pop
fadds
jecxz
mov
jno
loope
lock
sub
xchg
pop
sub
loopne
sbb
sub
cmc
adc
add
stos
dec
pop
jo
nop
mov
add
inc
push
flds
outsb
mov
pop
jnp
cmp
add
mov
mov
je
add
dec
mov
push
xchg
stos
add
add
push
mov
scas
xor
js
cs
add
pop
loopne
aas
mov
bound
imul
or
lret
aas
inc
mov
pop
sbbb
mov
es
or
cmovo
add
loope
pop
add
int3
movsb
fcmovb
cmp
add
sbb
mov
adc
ret
or
add
xchg
out
dec
fiadds
mov
push
mov
add
sbb
mov
and
lahf
test
addl
xor
xchg
push
cli
mov
out
int3
ret
push
lds
jbe
pusha
out
andb
add
sbb
sbb
jecxz
add
fistl
mov
cmp
jns
adc
xchg
outsl
xor
xor
nop
inc
out
pushf
cld
xor
cmp
pop
imul
or
out
cld
and
xor
xlat
addl
jae
and
loopne
add
add
incb
mov
adc
adcl
mov
or
pop
push
out
jno
es
ss
js
pand
and
cmp
imul
dec
inc
fs
or
push
sbb
js
xchg
inc
popa
loopne
push
push
cwtl
les
stos
mov
inc
fnsave
add
int3
and
adc
jo
xchg
mov
add
or
cmp
mov
xchg
adc
aas
sub
jb
les
mov
mov
jno
jo
insb
add
hlt
mov
add
push
mov
pop
jo
ret
ret
inc
push
cli
imul
add
push
jge
mov
nop
xchg
jns
pop
mov
arpl
or
push
subb
js
jno
fildl
push
loope
outsb
add
push
pop
sub
cmp
mov
jo
es
adc
adc
loopne
adc
test
jg
and
pop
sbb
mov
adc
mov
adc
mov
test
pop
push
inc
movsb
mov
shl
ja
lea
imul
enter
and
pop
and
xchg
or
addl
push
mul
pop
adc
imulb
xlat
add
pop
pop
lcall
fs
xor
sub
orl
cltd
mov
xchg
add
ljmp
push
inc
popf
pop
or
sbb
bound
je
mov
push
jle
cmp
mov
jmp
test
push
inc
mov
pop
adc
bound
cmp
cmp
mov
adc
mov
pop
rolb
adc
sti
addb
mov
dec
icebp
jge
jae
pusha
sarb
dec
es
adc
insl
test
clc
out
addr16
cmp
addr16
gs
mov
push
mov
addl
mov
or
loopne
jmp
sti
add
mov
or
movsl
mov
add
jbe
push
or
xlat
add
in
mov
or
cld
inc
xor
adc
out
andb
leave
push
enter
mov
popa
insl
dec
scas
add
sub
push
cmc
mov
cmpb
add
and
andb
in
mov
push
fmuls
sub
or
xchg
pusha
test
add
inc
into
dec
xor
js
in
pop
lods
sub
push
pop
ja
add
push
xor
enter
jge
lahf
and
ljmp
and
fstpt
cmp
jo
movb
cmp
sub
adc
sub
in
add
and
lds
push
xor
cwtl
clc
icebp
cwtl
enter
add
imul
scas
pop
dec
inc
orb
fstpl
xchg
movsb
lods
add
jnp
adc
fidivrs
loopne
adc
add
xor
imul
rorl
push
sub
popa
hlt
mov
ds
ljmp
dec
jecxz
add
mov
add
test
incb
and
add
dec
xchg
add
mov
xchg
add
test
je
push
push
add
mov
jge
mov
pop
add
das
sahf
xor
orb
push
call
lods
cmp
mov
mov
shlb
pop
jecxz
fstpl
icebp
ljmp
and
push
aas
loope
inc
movb
aaa
test
cmpl
inc
test
incl
jg
push
or
adc
push
cmp
call
push
adc
int3
lahf
flds
fcoml
push
pop
aam
in
add
dec
arpl
adc
mov
inc
sub
mov
add
pop
jne
sub
add
mov
push
inc
faddl
insl
and
mov
les
jo
sahf
or
out
dec
enter
mov
mov
adc
push
sub
lret
jge
push
std
dec
jae
pop
dec
add
in
fwait
mov
icebp
xchg
popa
pop
shlb
shll
xchg
pusha
add
mov
aas
pushf
cli
lock
nop
mov
sbb
out
cld
xchg
inc
neg
int3
shll
cwtl
jl
in
jbe
test
arpl
add
pop
xor
inc
sbb
loopne
sub
add
xor
pop
adc
sbb
mov
xor
mov
hlt
leave
vmwrite
push
arpl
ret
push
and
cld
nop
and
sbb
rol
and
ret
out
pop
mov
ja
add
adc
mov
ficomps
ja
cmpb
lahf
iret
or
mov
push
das
or
fiadds
mov
inc
sbb
rolb
add
add
mov
ret
rcrb
jb
adc
pop
jno
dec
cmpb
push
in
ja
ret
push
mov
add
add
das
adc
mov
cmpb
xor
sbb
rclb
xchg
and
mov
daa
shrl
jecxz
sbb
fst
or
sub
add
lock
push
dec
add
push
lds
sbb
aam
add
pusha
mov
ja
add
jns
adc
ljmp
dec
flds
sbb
stc
sarl
dec
call
xchg
orl
adc
dec
add
mov
mov
push
leave
xchg
inc
and
cmp
loopne
lock
xor
lahf
add
in
fs
mov
add
pop
outsb
push
inc
pusha
add
pushl
mov
incb
pop
lods
or
test
ja
mov
aas
es
add
sub
add
outsb
add
out
je
add
out
add
movsb
call
pop
cmp
dec
jo
out
inc
cmp
test
fwait
cmp
jge
pop
pusha
fnstsw
mov
cld
pop
cmp
jge
sub
jns
iret
test
jl
adc
scas
les
ret
insb
aaa
inc
and
pop
ds
jle
jnp
adc
xor
inc
add
inc
sti
inc
leave
sbb
lret
cmc
aas
fildl
les
fmuls
rclb
divb
add
orl
jne
mov
lock
mov
mov
push
sahf
adc
dec
popl
dec
inc
mov
outsl
nop
pushf
pop
jmp
mov
loop
add
push
mov
adc
in
add
push
add
aas
es
sbb
push
pop
and
add
rolb
vpcmpeqd
mov
xchg
dec
sbb
les
and
push
jne
mov
in
add
push
dec
mov
jnp
adc
xlat
sahf
cmovo
pusha
sub
pop
xor
mov
add
sbb
pop
sub
cmpsb
add
int
sbb
loope
adc
add
xchg
mov
mov
jbe
sub
mov
or
or
lahf
push
addb
cwtl
popf
add
stos
int3
jnp
adc
mov
faddl
mov
mov
rorb
stc
gs
adc
out
aam
sbb
mov
mov
scas
xor
rcll
sub
mov
sbb
incb
popf
xor
fisttpll
rol
sbb
fwait
movsl
and
add
out
sbbb
loopne
icebp
adc
sbb
mov
xchg
cmpsl
push
imul
filds
data16
clc
inc
mov
je
inc
faddl
mov
ljmp
mov
ja
sub
cmc
lea
adc
add
faddl
cmp
sub
push
mov
stos
add
je
sbb
pop
adc
dec
imul
push
sub
add
push
xchg
movsb
inc
and
xor
imul
xor
fldl
mov
loope
cmp
dec
cwtl
add
arpl
hlt
dec
mov
jge
pop
movsl
je
cmp
xchg
inc
mov
xor
test
mov
fistpl
pop
lock
fidivl
ret
mov
and
lods
cmp
int3
jmp
rcl
and
or
in
int
cmp
neg
data16
cld
in
arpl
dec
or
xor
mov
mov
cwtl
std
faddp
in
out
inc
pop
imul
rcrb
mov
mov
pop
mov
jle
int3
in
fdiv
movsb
dec
add
add
aaa
movsl
adcl
sti
popf
add
mov
pop
push
pop
add
dec
bswap
mov
jmp
rcr
pusha
and
xor
xchg
pushf
push
out
cmp
xor
adc
dec
adc
mov
sahf
dec
rcpps
mov
repnz
les
adc
xor
cmp
fbld
add
adc
invd
jnp
cmp
cld
cmp
xchg
cmp
add
scas
stos
aaa
jne
add
addr16
fwait
and
xchg
push
adc
cmp
fnsave
jnp
add
ficoml
fwait
aad
push
sbb
sub
xor
add
jl
movsl
or
orl
mov
insl
dec
add
and
lods
add
sti
lret
mov
add
pop
sbb
orb
pusha
lcall
hlt
jb
dec
mov
add
cmc
ljmp
add
dec
mov
push
sbb
add
sbb
and
cmp
pop
ljmp
add
mov
push
test
pop
xor
or
adc
insl
out
adc
mov
or
mov
invd
cld
push
dec
or
xor
add
jmp
mov
loope
stos
and
mov
sbb
aam
fimull
pop
xor
je
and
shrl
sub
mov
dec
push
pusha
adc
add
xorl
inc
add
lret
cmp
push
pop
add
movl
lea
xchg
jae
aas
sub
push
mov
sub
pop
pop
sub
clc
ret
out
adc
xchg
push
mov
jne
and
add
and
mov
adcl
push
cli
add
and
add
cmp
stos
andb
inc
fadds
rolb
pop
scas
cmp
enter
xor
or
sub
flds
push
add
mov
dec
mov
xlat
add
outsl
out
adc
jbe
pop
movsl
sbbl
xchg
lret
adc
pusha
pusha
cmp
add
mov
and
cld
push
add
mov
xchg
xor
mov
shlb
rclb
add
shll
adc
enter
push
dec
xlat
dec
or
inc
add
filds
out
jb
pop
dec
cmp
pop
mov
lcall
dec
add
mov
and
icebp
add
scas
popf
adc
rolb
inc
out
jmp
insb
inc
pop
add
lock
lods
fwait
shll
lret
add
mov
and
xor
dec
cmpsb
loopne
xchg
sbb
pop
add
ja
pushf
pop
push
out
dec
stos
sbb
repnz
push
and
mov
add
aaa
rolb
lahf
sub
dec
jo
popa
push
pop
xorb
jo
ror
adc
dec
add
aam
aam
ss
test
xor
add
ret
sub
insl
cmp
push
lret
push
xchg
inc
mov
mov
sub
jbe
roll
push
mov
xchg
insl
int3
out
lods
imul
lret
xor
enter
pop
stos
cmpsb
jmp
int
pop
rol
xchg
mov
push
or
decl
cmpsl
and
mov
add
rcrb
push
sub
cmp
pop
pop
frstor
dec
imul
rorl
shlb
pop
scas
jle
cs
cmp
mov
or
push
add
outsl
shlb
mov
xchg
mov
filds
xor
mov
push
jne
cmp
bound
pop
and
xor
shl
pop
or
fmul
add
adc
addb
icebp
sub
in
popf
xchg
dec
in
cmp
pop
cmp
jmp
out
clc
jno
inc
popf
pop
fistl
or
rolb
sbb
sbb
push
add
xor
lret
loop
cmp
sbb
rorl
fistpl
subb
outsb
dec
les
pop
cmp
add
out
jp
cmpsb
mov
lods
and
mov
rcl
xchg
inc
cmp
mov
or
nop
xchg
test
ljmp
mov
loopne
and
or
add
es
dec
add
lahf
jno
aam
fstpt
add
arpl
ljmp
adc
xchg
dec
mov
adc
mov
andb
pop
in
cmp
sahf
push
loopne
cld
add
gs
adc
rolb
add
xor
adc
adc
adc
cmc
in
aad
adcb
push
xor
pusha
pop
lcall
dec
pusha
add
mov
cmp
loope
mov
add
in
shlb
inc
or
mov
arpl
sbb
xor
pop
shll
gs
data16
xor
pop
mov
jl
outsl
insl
jno
add
mov
xor
outsb
scas
popa
sbb
lret
pop
imull
add
xlat
das
push
cmpsb
mov
fnstsw
jle
loopne
add
or
adc
shlb
or
or
sub
aad
adc
jp
dec
movsl
std
nop
icebp
pop
sbb
cmp
ror
add
push
mov
loope
lret
dec
mov
pusha
mov
or
xor
push
and
mov
nop
out
jle
ljmp
pusha
int
pusha
cmc
xor
sub
ja
aad
and
cmc
adc
inc
loope
roll
cmp
mov
pop
cmp
inc
nop
mov
lret
sub
mov
push
pusha
hlt
mov
daa
stos
nop
clc
add
jmp
popf
je
sbb
int3
xchg
xor
mov
fbstp
pushf
adc
mov
inc
mov
das
add
cmp
pop
sub
andl
jmp
lds
sbb
push
test
movsl
in
adc
pop
cld
adc
dec
inc
add
inc
mov
inc
mov
and
pop
or
xor
xor
or
sarl
sbb
cmp
call
xor
xchg
orb
es
aaa
sbb
shlb
test
and
mov
or
and
ret
sti
jmp
sub
mov
into
lea
or
sbbb
sub
mov
cmp
xor
pop
mov
push
mov
ja
dec
add
lods
fimuls
pop
push
stc
por
mov
aas
or
add
lods
and
pop
arpl
add
xorl
add
idiv
pop
in
mov
jne
test
cwtl
cli
decb
cs
sub
add
adc
aad
sbb
cmp
fldl
adc
mov
ds
sub
xor
std
dec
inc
sbb
add
xchg
in
pop
test
mov
dec
sbb
xorl
jno
imul
ds
xchg
xlat
dec
xorl
cmp
loopne
jmp
pop
mov
sub
mov
add
mov
in
add
lret
jl
mov
ja
add
iret
sub
sbb
mov
mov
shlb
cmp
push
jl
add
jge
lods
mov
mov
adc
pop
cwtl
mov
fcmove
mov
push
mov
test
pop
jno
shl
push
shrl
rolb
jecxz
jge
fucomi
cmp
lret
hlt
insl
sbb
call
jne
push
aas
mov
mov
adc
pusha
add
mov
or
mov
mov
cmp
inc
fildl
jg
aad
and
jns
mov
jno
outsl
cmp
rcr
sub
push
sbb
sub
pop
add
stos
push
push
jns
sbb
inc
insb
fwait
add
push
jbe
movsl
scas
in
add
cmpl
negl
jg
cmp
mov
andl
adc
leave
dec
andb
jge
mov
push
push
imul
jo,pt
shlb
daa
je
and
cmp
sub
mov
or
pop
scas
pop
add
sub
add
loope
pop
inc
or
stos
inc
pop
nop
and
pop
xchg
mov
pop
jne
xor
repz
sti
mov
or
push
test
ss
push
push
add
cmp
fildll
loopne
pop
movaps
sub
sbb
cmp
fsub
sbb
push
and
inc
mov
out
and
dec
jge
sbb
into
js
push
int3
mov
add
adc
add
dec
pop
scas
jno
cmp
cwtl
lea
add
jae
inc
jnp
push
xchg
rcr
cmp
pop
loopne
lods
or
scas
idiv
lret
push
subl
pop
dec
sub
push
cmpsl
rorl
test
and
add
xchg
test
push
mov
loopne
xor
in
ja
test
jge
je
and
adcb
mov
scas
sub
xor
lods
pop
aad
mov
nop
add
hlt
das
mov
je
sarl
pusha
sub
or
or
adc
add
add
outsl
and
and
pop
ss
rorb
cwtl
jne
push
scas
cld
lock
push
push
insl
or
je
inc
add
out
push
cmp
outsl
xchg
or
je
or
popa
aas
jae
popa
xor
and
cld
jmp
je
popa
mov
add
mov
push
mov
into
xchg
push
aam
mulps
addb
sub
and
dec
testb
js
scas
lods
or
repnz
imul
lods
mov
sbb
or
add
push
mov
shrl
add
xlat
or
cwtl
enter
sbb
lret
and
outsb
sbb
add
enter
popf
pop
cwtl
hlt
outsl
aam
push
fmuls
shlb
inc
insl
sbb
in
sbb
adc
or
add
xor
lods
add
mov
jns
mov
jecxz
mov
adc
push
mov
repnz
inc
jns
loop
xchg
mov
mov
pop
mov
lahf
push
inc
pusha
xor
inc
dec
loop
xor
cli
pop
mov
add
mov
inc
adc
inc
adc
jns
out
or
mov
movsl
sbb
add
push
xor
push
mov
data16
decb
fs
in
inc
enter
bound
xchg
adc
sub
inc
lea
call
test
xchg
pop
pop
and
and
or
push
movsl
add
cmpsb
adc
test
push
add
and
adc
jl
shr
or
inc
inc
les
add
push
cmpsl
mov
jmp
mov
cmp
sub
les
jecxz
sbb
xor
cmp
or
pop
mov
rorb
cmpsb
pushf
dec
icebp
scas
in
add
cmp
jecxz
jle
ret
rorl
pop
xchg
pop
sbb
mov
sbb
dec
adc
jle
cmp
rolb
aam
hlt
repz
add
sub
jnp
xor
adc
or
mov
adc
pop
mov
das
and
add
sbb
sub
lds
xor
insb
ret
xchg
dec
adc
or
and
shl
and
mov
xor
leave
fdivrs
ja
mov
insl
dec
push
pop
dec
jmp
test
imul
add
inc
cmp
dec
cltd
leave
ss
pop
stos
mov
popf
push
rclb
add
pop
or
push
in
test
add
adc
frstor
cmp
mov
xor
repnz
push
ja
clc
mov
sub
or
jnp
adc
inc
add
cwtl
mov
lcall
mov
pop
call
rcl
lcall
push
cmp
pop
in
mov
sbb
or
mov
add
and
add
cltd
inc
les
dec
pusha
jg
stos
sbb
inc
jno
and
stos
test
mov
rcrb
pop
pop
push
dec
lcall
xchg
inc
pop
jg
mov
add
xor
adc
mov
pop
movsb
dec
in
cmpsb
sbb
sbb
mov
orb
mov
add
int3
and
aas
ja
mov
xor
subb
fisubrs
arpl
mov
loop
inc
add
mov
cli
and
sahf
mov
test
sbb
insl
inc
push
int
imul
inc
out
xchg
nop
push
add
mov
add
divl
add
xor
dec
jo
sbb
or
stos
cli
ret
mov
les
inc
adc
lods
cwtl
in
std
and
cmp
data16
adc
mov
and
add
cwtl
dec
cmp
jecxz
shrb
add
iret
adc
or
xchg
or
mov
pop
test
test
and
jo
sub
sbb
add
aas
ds
add
ljmp
xchg
je
loope
out
ds
int3
inc
pushf
ret
push
add
dec
pop
filds
pop
xchg
push
dec
sub
jecxz
hlt
add
push
lcall
hlt
lret
push
loop
and
adc
push
loopne
jnp
mov
test
iret
shl
jns
in
add
inc
testb
cmp
lods
lea
icebp
and
mov
mov
loopne
lret
sbb
into
add
or
and
push
hlt
pusha
and
lds
ret
in
sbb
mov
dec
jle
jmp
dec
mov
and
push
push
xlat
divb
push
mov
add
sub
stos
dec
xor
fildll
push
mov
or
sbb
into
xchg
add
jle
cmp
xor
xorl
lret
fwait
dec
enter
push
adc
ret
lret
mov
div
fiadds
dec
add
sub
add
data16
mov
cmpl
push
pop
inc
dec
dec
cmpsl
adc
test
loopne
shrl
mov
and
rorl
sti
cmp
inc
mov
in
sub
fldcw
out
out
mov
mov
dec
adc
aam
icebp
sbb
ljmp
and
inc
push
testl
mov
jnp
add
adc
mov
xchg
mov
or
nop
gs
inc
je
cmp
cmp
aaa
in
mov
adc
sbb
fimuls
ret
push
nop
cltd
inc
or
or
add
pop
jp
pop
cmc
daa
mov
leave
rol
ds
addb
cmpsl
clc
jg
aad
add
sub
push
cmp
add
or
pusha
incb
push
add
rorl
xorb
add
or
jl
cmc
and
add
and
inc
and
mov
or
xchg
add
add
outsl
ret
add
push
call
or
and
rolb
cwtl
aam
push
or
xchg
popa
popf
imul
inc
and
mov
or
adc
cli
add
rcll
or
out
xchg
or
mov
orl
mov
push
push
movb
add
lods
add
sub
roll
xor
mov
lahf
iret
xor
fcomps
and
sahf
enter
cmp
mov
roll
rorb
cmp
push
add
dec
push
movsl
pop
inc
pop
je
shlb
pushf
std
fmul
cwtl
pop
add
sub
sub
hlt
sbbb
into
jo
add
mov
into
adc
outsl
ds
add
pop
je
enter
cmp
and
mov
ds
add
pop
shlb
in
repz
xor
mov
add
bound
sub
inc
test
push
and
and
inc
adc
aas
test
rcrl
adc
inc
jns,pt
inc
push
mov
fs
adc
test
stos
and
sbb
inc
in
and
inc
mov
sbb
xor
data16
stos
std
xchg
dec
shll
ret
shl
mov
jns
cmp
lahf
loopne
and
ds
dec
jg
sbbb
push
mov
repz
add
pop
jae
je
xor
xchg
dec
and
xorb
xchg
cwtl
sub
add
xlat
mov
pusha
adcl
ret
lock
mov
popf
add
push
push
subl
hlt
add
jecxz
sub
orl
movsl
push
or
push
add
mov
pop
jne
aas
or
xor
adc
js
and
dec
scas
lods
xor
mov
cmp
in
pop
ljmp
iret
inc
or
rcll
lods
xchg
cmp
xchg
test
sbb
in
std
jne
add
out
insb
inc
inc
xchg
insl
loop
pop
mov
ds
cs
addr16
pop
jbe
push
mov
push
shrb
scas
add
setno
push
lods
mov
stc
inc
jecxz
jg
jle
push
in
lods
jno
rolb
jg,pn
cltd
ret
add
jle
jne
cmpsb
cli
orb
xchg
inc
lods
add
aaa
mov
inc
jnp
push
push
insb
mov
mov
dec
mov
addl
dec
add
pop
inc
jle
pop
gs
add
inc
sub
outsl
pop
mov
mov
inc
test
xchg
push
sbbb
in
push
ret
add
aam
popf
sub
cmc
pop
push
dec
loope
add
cmp
mov
mov
test
mov
jecxz
fcomps
insb
dec
pop
sahf
xor
add
rorb
add
scas
or
popa
sahf
jo
outsb
or
fdivrs
lret
mov
fistpl
pop
les
inc
add
mov
jo
add
push
and
sub
andb
jecxz
jecxz
rorb
push
xor
call
mov
shll
jb
pop
add
fwait
or
cmpl
mov
xorb
cmp
mov
pop
ret
testl
mov
sub
hlt
cmc
sbb
imul
sbb
add
je
pop
pmaddwd
push
jb
jl
bound
dec
mov
add
decb
movsb
call
cmpsb
sbb
add
je
lret
add
xlat
arpl
push
xor
fiadds
add
and
ja
push
and
mov
out
xchg
into
subb
add
fwait
pop
test
mov
stc
adc
cmp
add
lret
idivb
or
mov
mov
insb
add
add
add
or
testb
cli
out
sbb
adc
mov
xchg
leave
push
inc
cmp
cs
xor
sbb
xor
mov
adc
mulb
addl
inc
cmpsl
dec
xor
sti
pop
inc
xchg
fnstsw
loopne
cmp
in
addb
dec
out
loope
xor
aam
cwtl
ds
test
rorb
xchg
stc
jmp
pop
add
push
lods
adc
data16
adc
dec
add
stos
adc
mov
popf
jns
ds
jnp
add
xor
xor
mov
loopne
pop
add
add
dec
js
mov
and
cwtl
aaa
pushf
add
sbb
movsl
jo
add
stos
inc
mov
add
test
push
xchg
in
mov
xor
jge
sbb
add
jne
pop
mov
aam
mov
push
ret
cld
inc
add
push
mov
inc
pushf
add
int
push
cmp
mov
in
lea
dec
add
xchg
add
add
jb
cmc
and
add
cmp
adc
add
bound
jno
or
pop
testb
pop
mov
jmp
push
add
fs
sub
stos
xchg
add
mov
inc
pop
pop
or
lea
hlt
cmp
nop
xchg
dec
paddusb
xlat
and
mov
add
xchg
inc
push
mov
jecxz
add
inc
bsr
nop
pop
je
rorb
cmp
js
add
in
lret
xor
mov
mov
outsb
add
and
add
xchg
push
cmp
hlt
lods
lahf
push
and
in
inc
lret
sub
ss
push
jns
mov
push
clc
add
mov
loope
pop
cld
subl
add
xchg
jge
sub
mov
jbe
add
jnp
dec
sbb
pop
imul
mov
mov
add
sbb
leave
lods
xchg
in
cs
push
test
daa
in
shlb
int3
fcmovnb
add
aad
inc
iret
lret
mov
lea
add
adc
shll
scas
cmp
pop
mov
movsb
adc
clc
insl
inc
scas
into
or
test
fucomi
pop
fidivrl
popa
arpl
incb
xor
sbb
jge
cmp
aad
sbb
pop
fistpl
add
idivl
push
mov
ljmp
out
add
push
jae
jecxz
movsl
adc
lcall
decb
nop
jmp
roll
inc
insl
dec
add
jns
fdiv
stos
pop
jnp
out
add
sbb
mov
pop
push
mov
xchg
add
pop
stc
and
add
inc
out
cmp
in
rclb
jb
add
inc
jae
scas
int3
popa
add
fwait
push
push
push
imul
cmp
hlt
inc
push
add
xchg
jae
add
adc
pop
clc
sahf
add
lcall
add
ja
push
sub
fildl
pushw
mov
dec
add
jae
and
mov
sti
test
xor
add
std
mov
es
sub
sbb
add
fs
xchg
mov
jg
je
dec
dec
mov
rolb
mov
lcall
outsl
fnstsw
sbb
loope
andb
mov
inc
push
mov
add
xor
mov
loop
xor
mov
push
mov
add
fists
pusha
sub
push
sbb
mov
add
lret
add
xchg
push
mov
nop
cmp
add
call
sbb
sub
cmp
lods
lds
push
mov
lock
inc
sti
mov
vblendmps
mov
leave
mov
fdivl
scas
and
enter
movl
push
mov
dec
sbb
stc
inc
inc
cld
in
pusha
cmc
push
ficoms
sbbl
movl
in
mov
cs
inc
push
jg
lret
fiaddl
pusha
jno
sbb
repnz
sub
and
into
sub
inc
jl
arpl
sbb
add
push
fldt
add
or
mov
add
jno
inc
add
movsb
loopne
outsl
cmpb
mov
je
jg
pushf
leave
rcrb
pop
sub
ret
and
xor
pop
addb
int3
mov
jbe
mov
add
push
test
sub
fnstsw
pushf
cs
popf
imul
sbb
rolb
nop
or
lret
inc
xchg
and
jmp
cmp
add
sarl
gs
add
lret
add
mov
jle
push
cmp
mov
sbb
in
int
loopne
imul
insb
sub
mov
xchg
push
and
cmp
pushf
push
fcoms
add
xor
leave
out
cmc
mov
hlt
xchg
cmp
mov
xchg
add
jg
add
sbb
sahf
sbb
jmp
ret
in
insb
push
inc
inc
scas
and
or
frstor
test
add
lds
add
pop
jp
lcall
sar
jns
dec
push
add
mov
push
sbb
pop
fisttps
aas
mov
add
popl
fistps
push
add
pop
add
repz
jmp
insb
jbe
push
clc
and
and
loopne
mov
push
jle
add
lahf
add
jnp
inc
inc
fildll
inc
cli
fiaddl
push
add
xor
xchg
pusha
xor
sbb
leave
mov
mov
push
sub
xor
in
dec
adc
es
sti
clc
sbb
mov
adc
dec
movsb
das
add
jecxz
into
jmp
jns
popa
fnstsw
aaa
push
push
repz
mov
ret
int
cli
cs
and
aad
fadds
imul
xor
addb
test
xchg
or
xchg
out
ja
fs
nop
mov
add
mov
mov
pop
xchg
in
jg
fcmovnbe
mov
lods
in
mov
adc
add
mov
lods
fsubr
bnd
sbb
push
sub
xchg
dec
inc
in
imul
inc
dec
js
sbb
aam
push
inc
or
movsl
test
inc
add
jg
in
mov
int3
cwtl
inc
add
inc
std
push
xchg
shl
lcall
pop
add
pop
add
in
cmpsl
mov
jl
push
int3
push
cli
or
mov
lods
push
mov
fldenv
add
cmp
jle
jl
add
out
push
dec
movsl
fildl
push
mov
push
push
add
stos
xchg
add
push
sbb
cmc
mov
mov
aad
add
out
inc
add
lock
les
sub
add
lds
mov
fnstenv
dec
add
or
mov
lods
sbb
fs
int
rolb
cmp
icebp
push
add
pop
pop
ss
cs
movsl
fld
ljmp
fbstp
mov
mov
sub
mov
dec
sub
sub
mov
sbb
shrb
cld
add
pop
addb
pushw
sub
bound
fistl
repnz
aas
push
mov
hlt
xor
and
int3
cli
sbb
shlb
clc
mov
lock
add
inc
jns
add
test
pop
push
inc
push
ja
cli
xor
insb
movsb
data16
sub
orl
insl
push
sbb
or
loopne
pusha
pop
lahf
aaa
pop
inc
adc
stos
arpl
push
je
push
cmp
jge
das
push
xor
roll
lret
ja
imul
add
xor
icebp
lahf
punpcklbw
mov
incl
hlt
sbb
mov
cli
or
shll
add
add
inc
imull
mov
adc
sbb
adc
lock
mov
clc
pop
sbb
xchg
daa
mov
push
pop
lods
mov
jle
inc
arpl
insl
outsl
and
adc
aaa
pop
pop
cmp
add
arpl
ror
lods
fstpt
hlt
add
sbb
mov
and
dec
scas
sub
outsb
jbe
add
pop
mov
jo
in
or
and
add
dec
ror
sbb
add
cmp
sahf
loopne
es
ljmp
repnz
mov
outsb
add
fwait
shlb
adc
loop
call
iret
sbb
push
dec
add
ret
inc
xor
add
push
jbe
sub
mov
inc
int
xor
pop
add
pusha
pushf
jne
add
popa
jmp
mov
xchg
lret
mov
jns,pt
into
flds
inc
std
push
fs
cltd
add
dec
sarb
inc
xchg
mov
cmpsb
stos
or
pop
add
jbe
cmp
add
jl
add
xor
add
push
pop
enter
xchg
sbb
fucom
andb
jbe
pop
sbb
das
or
push
adc
cld
xor
xor
mov
loop
pop
dec
je
and
loopne
dec
clc
psrlq
outsl
or
push
add
loopne
or
stos
add
xchg
add
xor
or
adc
mov
adc
add
mov
loope
jg
push
pusha
add
rcr
test
cli
call
push
xchg
aaa
inc
jne
fiaddl
inc
faddl
inc
push
mov
add
sub
cmp
add
mov
xchg
mov
mov
outsl
mov
jnp
xchg
jb
add
xchg
testb
or
out
js
xor
je
addb
test
jnp
and
jle
cmpb
bound
and
hlt
add
lock
aam
mov
and
fldl
dec
leave
adc
add
fidivl
cmp
cli
push
xchg
mov
fidivrs
jno
push
jbe
add
ret
sbb
xchg
inc
in
xchg
pop
loop
sahf
into
nop
add
push
push
in
adc
pusha
mov
mov
inc
mov
lods
subl
enter
sahf
sti
hlt
jns
out
or
mov
cld
in
sbb
cld
adc
sbb
or
daa
xchg
dec
add
rclb
lahf
cmp
addb
nop
mov
out
add
cmpsl
and
sbbb
and
aaa
sbb
adcb
add
fldenv
roll
mov
scas
add
add
aaa
xor
sbb
mov
sub
pop
mov
cmp
movsl
sbb
add
mov
mov
add
daa
jno
xchg
jge
xchg
andl
dec
jnp
mov
add
pop
jns
aas
sti
in
sbb
movnti
loope
lock
out
add
popa
std
leave
dec
jno
dec
or
es
outsl
out
clc
sub
lods
jl
jp
push
xchg
jne
sub
into
dec
fldl
loopne
cld
rcrl
add
or
stos
mov
jp
leave
push
cmp
movsb
or
mov
xor
adc
push
sahf
rcrb
mov
dec
xchg
inc
inc
loop
fcoms
int3
setno
cmp
add
jne
mov
inc
int3
int3
mov
js
fwait
dec
in
add
scas
aad
mov
ja
loopne
mov
dec
repnz
sub
out
outsb
shlb
push
sti
adcl
jecxz
mov
adc
int
in
pop
xor
iret
movsb
add
mov
aam
adcb
sub
ja
mov
pop
sbb
leave
enter
add
in
call
sbb
cmp
mov
add
ficomps
push
pop
add
arpl
stos
js
add
adc
xlat
push
and
add
push
loope
mov
jg
fs
clc
cmc
push
add
pop
ja
fcompl
js
mov
out
and
add
mov
fld1
and
int
add
xchg
outsb
sti
hlt
add
aad
mov
sub
add
xor
test
sub
mov
push
aas
lret
xchg
test
test
mov
jnp
ds
adc
pop
lahf
sub
inc
mov
call
insl
movsb
das
mov
pop
sub
orl
outsl
push
pushf
sbb
nop
rcrl
add
cmp
shlb
xchg
xor
push
cs
insl
nop
mov
mov
int
pop
shl
fwait
adc
add
adc
adcb
inc
add
ret
flds
icebp
int3
xchg
xor
imul
pop
add
sarl
pop
mov
add
sub
xor
int
mov
data16
lcall
push
jl
add
mov
das
add
fwait
dec
movsw
push
divl
fiaddl
ljmp
faddl
fldl
sub
in
sub
ja
lds
fcmovb
push
add
jp
les
repnz
adc
add
cmp
mov
cmp
mov
adcl
insb
push
adc
adc
add
mov
jp
sarb
dec
fisubl
insb
dec
and
dec
jno
add
mov
pop
add
pop
lds
push
fwait
add
cmpsl
adc
shr
dec
and
int
xchg
jne
cwtl
add
pop
dec
and
out
xchg
pop
xor
sbb
lock
in
std
add
lahf
cmpsb
or
enter
lods
jecxz
xchg
add
out
imul
add
out
outsb
dec
push
cmp
popa
jno
xor
and
std
in
sub
adc
les
add
mov
mov
inc
push
es
mov
lea
out
jbe
rclb
cld
lret
mov
adc
sbbl
ret
cwtl
add
loop
fnstsw
lods
inc
lods
mov
mov
push
xor
std
mov
xchg
pop
mov
movb
dec
call
push
inc
cmp
xchg
loopne
dec
test
outsb
hlt
and
add
popa
pusha
cmp
sti
dec
xor
lock
push
sahf
and
add
les
inc
hlt
in
push
scas
or
popl
cltd
dec
ja
cmp
mov
dec
cs
push
mov
or
add
or
dec
push
movsb
ret
adc
inc
std
xchg
cmc
dec
ja
add
sub
push
cmp
push
add
push
fwait
cltd
and
aas
mov
jp
mov
mov
ja
ror
cmp
mov
adc
sbb
mov
pushf
cmpsl
scas
add
dec
fildll
repnz
pop
add
or
fs
add
and
inc
or
add
sbb
mov
jp
add
imul
int
rorb
push
dec
add
dec
inc
dec
add
mov
push
pop
xchg
scas
xorb
mov
push
add
cmp
test
lret
cmp
lret
inc
jmp
add
imul
jnp
inc
mov
xchg
lcall
jl
add
push
add
adc
push
movsl
sti
sbb
xor
sub
sub
jae
lcall
jmp
push
sub
jge
mov
xor
rolb
lret
jg
pop
mov
cld
cmp
xchg
adc
add
push
int3
lods
jns
sub
xchg
pop
sub
xchg
sbb
push
xor
mov
pop
hlt
xor
int3
jle
cmpsb
add
add
or
test
ds
clc
loope
and
idiv
cmp
cmpb
fwait
push
push
sub
loope
xchg
sub
jg
add
mov
dec
je
cmp
mov
cmp
cmp
and
aas
push
mov
inc
mov
push
sub
clc
add
call
jb
fildll
mov
inc
add
mov
pop
stos
add
xchg
add
push
ljmp
cmpsb
push
pop
mov
shlb
lods
pop
inc
add
dec
test
jg
fstl
add
cmp
add
je
jl
std
lcall
nop
push
push
inc
mov
imul
outsl
pop
jg
add
int3
xlat
pop
add
pop
lcall
jl
add
jo
or
add
std
movsb
nop
cmp
adc
xchg
test
aad
dec
dec
pushf
ret
test
out
pop
adc
add
xchg
arpl
xchg
ss
cmpsb
out
repnz
insb
dec
dec
cmp
shll
sarb
fs
sub
dec
sbb
test
loopne
mov
mov
pushf
stos
xor
pusha
add
dec
call
add
cwtl
enter
mov
jne
pusha
sub
and
sarb
popf
mov
add
inc
lods
pop
mov
in
iret
add
mov
push
dec
jl
add
xchg
adc
loop
fildll
in
add
pop
sbb
iret
push
adc
mov
int
loop
lret
pop
jmp
inc
aaa
hlt
sub
divl
cmp
jmp
popf
push
dec
stos
and
stc
jne
adc
call
add
push
mov
fwait
mov
push
dec
xchg
loop
shl
andb
pop
popl
scas
data16
les
pop
push
nop
mov
out
adc
ret
pop
add
add
addr16
add
push
sbbl
adc
pop
mov
loop
lock
mov
popa
mov
and
dec
ljmp
mov
sti
cmp
out
push
add
jno
push
sub
test
loope
adc
sbb
daa
add
aas
lahf
pop
xor
cmp
pop
stos
gs
mov
xlat
add
neg
mov
dec
xor
pushf
mulb
sbbl
add
test
mov
hlt
lcall
cmp
repz
push
and
sbb
outsl
mov
pop
cmc
add
aam
sbb
sub
push
repnz
jmp
xor
sub
push
popf
sbb
div
sbb
fs
adc
push
out
ss
push
add
pushf
movsb
xor
lret
xchg
repz
push
sbb
test
add
je
push
orb
sbb
loopne
aad
xor
and
nop
dec
xchg
cld
add
stos
jle
faddp
dec
add
pusha
xor
inc
sub
xor
add
fildl
jmp
std
out
iret
adc
lock
test
xchg
jg
add
les
push
jnp
shrb
popa
add
sbb
mov
add
insl
leave
fdiv
sahf
out
out
loop
jg
add
call
jp
shrb
mov
cli
add
jp
cmp
add
jb
mov
loopne
cld
mov
add
add
jno
add
outsb
jb
je
in
mov
lods
xchg
pop
adc
jle
push
sbb
movsb
push
pop
add
xor
ja
add
pop
cmp
xorb
adc
mov
mov
add
test
jbe
add
jbe
xchg
or
sub
in
add
int
sub
add
ss
adc
mov
sbb
push
bound
clc
out
pop
sub
jle
ret
sub
push
clc
mov
adc
jg
fcoms
pop
lods
adc
lock
jae
loope
add
jg
push
and
imul
xor
add
fs
xorl
add
adc
in
jnp
out
sbb
xchg
daa
pop
xchg
ficoms
ljmp
insb
sbb
fildl
jle
inc
jo
lahf
cmpsb
cli
repz
pop
stos
mov
sahf
js
jne
mov
and
je
lock
sub
and
xchg
adc
int
pop
cmpsb
push
hlt
clc
jne
push
add
adc
sbb
test
jmp
cmpsl
lods
jnp
mov
addb
aaa
arpl
cmpsb
sub
mov
cwtl
push
mov
int
pushf
adcb
xor
inc
sub
stos
jmp
pop
add
mov
sbbb
aas
in
ror
cmpsb
adc
pop
loopne
xor
stc
adc
add
mov
xchg
adc
ret
lcall
data16
mov
xor
das
sbb
pushf
push
scas
push
add
mov
xlat
pop
and
dec
aam
sub
test
or
shll
stos
dec
add
fidivs
add
jae
pop
xchg
stos
movlps
mov
and
xor
add
lahf
inc
push
lods
jge
dec
and
stos
add
int
push
scas
js
adc
add
popf
inc
sub
pop
fstl
cmp
push
add
pushf
dec
add
jb
or
sbb
sbb
mov
add
adc
add
adc
scas
sub
je
stos
das
rcrb
pop
add
insb
dec
sahf
jmp
lods
imul
push
sar
leave
mov
mov
pop
fwait
add
and
cltd
leave
adc
repz
pop
icebp
add
cmove
push
add
sub
ja
mov
and
push
pusha
and
mov
add
cld
add
inc
mov
jb
shll
add
sub
pop
cmp
sbbb
and
insb
stos
lahf
mov
fildll
and
mov
add
gs
maskmovq
divl
lock
lret
and
mov
add
xlat
xchg
sti
add
notl
mov
jg
mov
xor
stos
lods
inc
dec
jbe
in
add
mov
lock
ror
xchg
inc
cmp
clc
scas
pop
mov
jg
or
push
cli
sub
fildl
and
push
inc
loope
adcl
add
dec
ret
inc
add
rclb
pop
psubb
add
mov
cmp
sbbb
and
dec
pop
stc
push
fcomps
pop
sbb
arpl
xlat
subb
add
jp
and
jne
xor
jmp
add
sbb
inc
adc
outsb
sub
ret
loope
sub
and
inc
jnp
insl
es
sti
lods
xor
dec
jge
add
iret
jl
stos
cld
int
pop
or
arpl
rcr
adc
sub
push
adc
fcompl
and
adc
sar
jmp
mov
mov
cmp
iret
mov
nop
loopne
gs
add
sahf
mov
ficomps
add
ljmp
add
mov
xchg
jo
cmpsl
add
push
fstps
lods
dec
cmp
dec
pop
aas
jnp
push
add
and
or
add
gs
jo
jne
add
mov
cmc
jo
rcr
add
into
shlb
nop
add
adc
cmp
cmp
xlat
jno
in
dec
jecxz
mov
sbb
and
or
push
das
lods
bnd
cs
jecxz
cmp
push
add
rcr
adc
rclb
sbb
add
shlb
pop
add
adc
aaa
fnstsw
js
add
mov
push
add
shll
shr
js
stos
add
insb
push
inc
cmp
mov
scas
rorb
in
testb
pop
movl
add
push
fs
fwait
int
popf
add
lcall
xor
or
syscall
and
adc
jae
inc
popl
pop
lods
movsb
push
add
mov
int3
jbe
or
pop
stos
test
sub
adc
sbb
out
jo
lret
jbe
adc
inc
inc
add
mov
xor
test
jnp
add
aas
jb
insl
dec
dec
not
fs
add
outsb
mov
jo
loope
cmp
sub
cmp
call
pop
dec
test
in
data16
lret
pop
cmp
int3
stos
dec
add
xchg
cmp
iret
mov
cltd
movnti
outsl
or
inc
add
push
and
mov
xchg
push
add
lea
and
movntq
out
xorl
call
test
stos
or
inc
shl
pop
jp
adc
add
xchg
jns
sarb
data16
push
in
imul
or
ja
call
fwait
clc
xchg
dec
imul
dec
add
test
jns
jg
or
pop
push
cwtl
scas
clc
add
int
mov
add
push
sub
fstl
xor
add
jno
shlb
aad
imul
cmp
test
pop
push
scas
pusha
mov
fldt
jl
add
push
sbb
mov
sbb
push
add
outsb
cmpsl
sbb
or
mov
xchg
dec
je
adcb
mov
add
stos
fwait
push
out
out
add
adc
gs
imul
lock
insb
push
test
xchg
mov
push
divl
xchg
pop
push
nop
add
std
repz
cmp
iret
pop
sub
xorb
loopne
inc
out
and
mov
xchg
or
cwtl
add
aas
popf
push
insb
lahf
call
jg
add
subl
pop
mov
popf
and
lcall
push
sub
movsl
mov
aaa
adc
mov
jmp
movq
sahf
lods
addl
movsb
xchg
add
push
test
add
push
decb
nop
push
add
mov
addb
addb
dec
add
mov
les
push
push
cli
add
inc
pop
cmp
popa
shl
and
mov
ljmp
test
popl
sahf
push
jecxz
test
mov
xor
mov
es
pop
pusha
dec
dec
incl
push
add
xor
out
fistpl
arpl
idivb
cwtl
leave
lret
cmp
sbb
fnstcw
add
cwtl
clc
repz
pop
add
subl
imul
mov
js
mov
popa
es
mov
cmp
pusha
loopne
popf
mov
add
lea
jmp
adc
nop
or
add
pushf
icebp
out
arpl
loopne
add
je
mov
pop
add
sbb
decl
xchg
dec
adc
mov
xchg
out
sti
gs
enter
push
or
add
verr
test
add
sahf
sbb
adc
sub
sub
mov
fsubrs
pop
mov
pop
cmp
or
loopne
add
cs
xor
sbbb
iret
fcomp
test
xor
addr16
add
inc
enter
jle
sub
imul
movsl
sub
int3
ja
adc
aaa
insb
xor
or
ds
negb
inc
mov
mov
nop
push
pop
ds
xor
cmpsb
cmp
in
ljmp
push
aad
cmp
nop
add
aam
shlb
xor
sbb
mov
jg
ljmp
ja
lahf
jno
jo
add
mov
cmp
jae
sti
mov
add
dec
andl
test
mov
aaa
sbb
xchg
jo
mov
fistpl
mov
aam
push
add
xchg
test
cld
sbb
cs
ljmp
imul
pop
cmpsl
addr16
test
sub
imul
adc
mov
data16
add
aam
enter
and
pop
ljmp
es
xor
sub
jmp
add
add
adc
fwait
andl
imul
movsl
pop
das
ljmp
add
insb
add
mov
lods
test
fisubrl
sbb
jae
or
xchg
je
adc
shlb
and
mov
bound
adc
aas
divl
pusha
das
shll
icebp
dec
pop
into
idivl
xor
fadds
dec
xor
pop
ljmp
cs
add
jo
aas
cmp
sbb
icebp
das
cmp
fisubl
jle
cwtl
mov
inc
push
pop
adc
jb
mov
js
or
cmpb
sub
aam
scas
jne
shlb
mov
or
je,pn
mov
sub
fmuls
push
jo
dec
imul
xchg
lds
add
negl
mov
add
cmpsb
jecxz
out
imul
mov
nop
cwtl
mov
add
and
cmp
seto
hlt
jl
inc
pop
sbbl
mov
lea
jg
in
outsl
sbbb
inc
js
push
scas
push
xor
add
scas
cltd
mov
and
sbb
cmp
xor
dec
pushl
jg
cmpsl
and
insl
push
adc
andps
cmpb
cmpsb
scas
sbb
sbb
clc
add
lahf
les
das
xor
or
fs
pop
pop
filds
shrb
cmp
mov
jmp
push
add
push
daa
stos
or
pop
notl
jmp
aaa
mov
xor
adc
and
mov
add
push
push
adc
mov
xchg
add
add
repz
jno
fdivl
add
dec
and
dec
add
popa
lcall
pusha
mov
mov
mov
and
push
add
pop
nop
popa
xchg
sbb
loop
xor
and
sbb
xor
adc
pusha
sahf
nop
ljmp
add
pop
mov
cs
sbbb
or
mov
cmp
js
inc
add
add
ds
jae
sti
rcl
ja
add
sbb
push
pop
add
jo
nop
push
add
scas
push
daa
fbld
inc
call
cmp
jmp
add
in
push
add
dec
pop
arpl
push
nop
addb
dec
xor
fwait
xor
mov
mov
add
jecxz
or
loopne
or
add
adc
sbb
cmp
ret
shrl
outsl
add
mov
and
mov
rcl
mov
stos
lcall
cmp
repnz
pop
jae
add
add
sub
dec
add
loop
adc
inc
adc
mov
sub
outsb
xor
int3
in
mov
loopne
rcl
in
add
mov
stc
adc
test
cvtdq2ps
stos
jmp
dec
inc
xlat
fdivs
je
jp
cmp
scas
fbstp
xor
pusha
call
jnp
cmp
jge
cmp
push
xor
add
pop
test
ret
clc
shrl
sbb
in
mov
mov
or
add
xchg
imul
mov
sub
scas
lock
mov
push
loop
jmp
andl
add
in
nop
fdivrl
xchg
push
cwtl
or
inc
mov
jle
jl
mov
push
shlb
or
add
or
test
and
ret
ja
add
ljmp
aas
stc
das
push
ja
add
mov
or
add
push
add
insb
jp
mov
rcrb
pusha
push
iret
mov
pusha
xchg
cs
mov
popa
adc
or
movl
add
fidivrs
lcall
xchg
mov
clc
sbb
pop
xor
mov
jmp
jl
pop
cmp
mov
cmp
pop
xlat
mov
add
addr16
faddl
mov
cwtl
jp
jns
pop
add
dec
lret
testb
pop
dec
inc
outsb
fdivs
lcall
les
adc
add
cwtl
mov
mov
arpl
fistps
push
cmc
push
jmp
or
lret
movsl
add
pop
lcall
push
lock
test
mov
pusha
and
ret
addr16
or
jne
cwtl
push
sbb
test
pusha
outsl
icebp
gs
fiaddl
jnp
xchg
not
js
add
or
rorb
add
sbb
jecxz
jns,pt
add
movswl
and
jo
cmp
inc
push
bound
outsl
sahf
pusha
fcomps
add
jo
fmul
cmp
scas
xchg
nop
gs
pop
daa
add
mov
xor
xor
mov
test
int
push
ds
cmp
popf
addl
ljmp
outsl
mov
out
jmp
out
inc
xchg
add
push
sti
cs
addr16
mov
add
nop
in
ja
jo
or
loop
xor
sub
mov
rolb
aaa
jge
mov
nop
inc
dec
adc
decl
pop
movsb
arpl
and
mov
lds
sub
push
add
mov
cmp
xchg
in
call
testb
jmp
jbe
jae
cltd
add
mov
dec
dec
pop
ret
into
lret
je
iret
and
sub
or
fs
shlb
fucomi
adc
nop
je
jge
lods
mov
pop
push
test
cmp
subb
pop
fldcw
inc
xor
mov
dec
pusha
filds
ficoml
sub
xchg
add
ja
and
fwait
cmp
push
sarb
lret
scas
jne
push
xor
lds
test
adc
jg
cmp
fcmovnbe
sub
add
ljmp
push
push
mov
push
inc
xor
out
pusha
out
pop
arpl
dec
push
nop
les
and
sbbl
push
jg
push
cmc
addb
sbb
or
mov
sbb
add
pop
mov
mov
add
push
and
je
push
jae
jns
iret
test
arpl
mull
xor
add
add
mov
inc
mov
push
iret
mov
orb
pop
xchg
add
rol
mov
add
insl
pop
xor
orb
add
jne
mov
sub
lret
out
test
xor
ljmp
pop
test
jbe
push
fistpll
ftst
rorb
cmc
adc
pop
addr16
sbb
js
xor
mov
icebp
add
mov
ja
addl
out
sub
pop
inc
add
adc
fdivrl
lods
dec
push
mov
pushl
jg
nop
xor
clc
add
mov
mov
arpl
clc
in
cwtl
push
add
pop
xor
dec
add
sahf
add
jl
loopne
mov
aam
mov
cwtl
cld
int3
pop
mov
std
loopne
add
insl
shlb
les
pop
add
jle
nop
loop
inc
sub
mov
js
ret
add
pop
cwtl
stc
out
hlt
sbb
call
push
sbb
idiv
popa
outsb
fsubl
add
rclb
jl
and
insl
addl
sbb
mov
dec
sbb
js
movsb
out
movsl
pop
fisubrl
mov
cwtl
add
add
enter
fwait
les
and
or
test
roll
xchg
and
hlt
pusha
fstps
mov
mov
cmp
mov
psubb
jge
nop
mov
jb
call
jns
add
lock
cmpsb
add
popa
ret
mov
xor
xor
divl
pop
or
cmpsl
cmp
jl
aas
rcr
sub
cmp
mov
push
testb
shll
or
pop
add
mov
mov
pop
mov
xchg
mov
add
lcall
dec
cmpsl
out
or
dec
dec
pop
shrb
xor
adc
arpl
lret
loop
dec
in
add
das
cmc
les
add
cmpsb
mov
push
adc
and
mov
sbb
fiadds
or
push
add
out
dec
lahf
call
cmp
fnsave
push
pop
jbe
inc
dec
loopne
pop
mov
dec
jns
and
pop
add
mov
popf
add
lock
add
out
cmpsb
jae
out
rolb
orb
push
add
pop
or
fstp
xor
pop
add
mov
sub
out
cmpsl
es
sti
mov
inc
std
sahf
jecxz
xor
jle
add
in
add
xor
push
cmc
jns
in
lods
add
lret
or
cmpsb
stc
imul
dec
pusha
jecxz
ds
add
movsb
cmc
inc
pop
popf
sbb
pusha
es
jb
add
dec
dec
dec
in
in
pop
lea
cwtl
cmc
add
xor
mov
jno
xor
mov
mov
cmc
pop
jmp
sahf
insl
jmp
arpl
inc
in
addr16
dec
sbb
pop
jbe
cmp
mov
and
mov
inc
cmpl
rorb
mov
pusha
sbb
or
popl
jg
lods
pop
push
cmpsb
loope
push
pop
mov
clc
or
adc
jbe
and
repz
imul
cmp
adc
pop
int
inc
test
add
or
jno
loopne
daa
insb
jnp
cmp
mov
or
addb
push
fidivrl
cmp
rolb
stos
jb
sub
sbb
or
loopne
add
ja
out
push
add
out
add
int3
mov
pop
ret
or
mov
enter
mov
jbe
sbb
je
push
add
cs
or
push
insb
and
xchg
push
add
add
jnp
mov
push
pop
sub
and
std
pusha
inc
xor
mov
add
xor
mov
rcrl
xor
push
inc
push
inc
test
mov
pop
jns
or
sbb
or
sbb
and
or
push
nop
cmc
xchg
jns
icebp
adc
and
or
out
std
test
sub
test
dec
mov
mov
ret
add
adc
and
xor
mov
fnstsw
imul
ret
push
repnz
adc
push
mov
in
add
xchg
shld
loop
mov
inc
pop
int3
movl
aaa
xor
jmp
push
sub
mov
pop
add
fstpt
nop
daa
push
mov
pushf
inc
add
cmc
and
xor
divb
aas
lret
sarl
sub
add
jmp
and
or
cmovne
scas
addb
jecxz
dec
sub
out
repnz
add
arpl
ret
sbb
fs
adc
inc
sti
int
add
scas
or
pusha
and
sub
add
fcomps
xchg
inc
mov
sbb
inc
jno
imul
cmp
inc
sahf
cld
add
aad
andl
lods
dec
add
xchg
inc
add
in
xchg
push
mov
cmp
sbb
mov
addr16
popf
dec
and
shlb
je
sub
mov
hlt
dec
pop
mov
sahf
cmp
lock
pushf
or
mov
pop
add
jg
loope
dec
shl
cli
mov
xor
aaa
fwait
cmp
incl
outsb
mov
push
fs
xchg
cmp
imul
pop
xor
es
or
popf
das
pop
rorb
and
addb
orb
mov
je
enter
mov
pop
push
and
ja
sbb
mov
lcall
enter
jo
jns
std
add
xlat
add
lret
shrl
popf
lock
add
sub
icebp
and
and
jno
mov
pushf
std
push
test
stos
arpl
fimull
lret
jp
inc
mov
push
add
push
sbb
mov
rcl
dec
mov
imulb
cmpsb
loop
pop
add
jp
rcrl
adc
jecxz
or
mulb
add
das
xchg
test
movb
or
je
add
fs
sub
sub
add
xchg
dec
adc
cmp
insb
add
pop
sbb
pop
xlat
dec
and
iret
pop
push
scas
inc
push
data16
fs
insl
inc
movsl
add
sbb
cmp
push
add
push
add
xchg
xchg
jns
xor
out
add
jnp
and
add
xchg
jmp
scas
push
xor
or
clc
lahf
outsb
sti
test
popa
mov
xchg
lds
fnstcw
dec
pusha
loop
pusha
pop
mov
in
mov
mov
adcl
pushf
loope
xchg
fmulp
pop
cmpsl
push
subl
jg
sub
pop
repz
mov
loope
dec
pusha
insb
rclb
inc
in
cld
mov
pop
pop
subl
pop
pop
arpl
adc
mov
fcmovnb
int
mov
insl
aas
add
addr16
in
xor
and
mov
inc
flds
push
dec
mov
push
mov
movl
cmp
subb
insl
cwtl
jns
adc
shll
jge
subb
pop
sub
outsb
jb
mov
lret
testl
ljmp
sbb
lock
dec
xor
sbb
lods
cwtl
pusha
adc
aad
add
out
push
sub
fdiv
push
and
data16
add
mov
push
add
outsb
add
add
sbb
jbe
add
gs
and
scas
popa
inc
rclb
lahf
loop
mov
push
lods
and
add
pushf
xlat
xchg
loop
adc
jne
lods
dec
sbb
cmp
or
in
ljmp
sbb
and
mov
mov
loopne
mov
lds
rcl
xchg
dec
inc
in
out
add
cmp
cmc
out
repnz
pop
cld
outsl
xchg
rolb
fcoms
dec
imul
cmp
pop
cmpsb
pop
lock
push
aad
and
add
sub
cmp
mov
push
inc
add
fwait
adc
lcall
test
push
cmp
loopne
lahf
repz
and
add
out
xor
cmp
add
iret
divl
push
dec
mov
push
inc
fldl
push
xchg
mov
mov
test
inc
mov
aas
mov
jge,pt
add
jge
xor
add
lock
lods
lahf
mov
repz
add
movsl
mov
fidivrs
jb
xchg
xor
add
cmp
push
sbb
in
or
sub
cltd
adc
inc
ret
es
add
jmp
cmp
out
push
mov
loope
or
mov
flds
mov
push
pop
sti
rcll
in
es
repnz
testl
orl
unpcklps
pop
add
gs
jo
aas
xor
cmpsl
pop
xchg
shrb
push
and
in
push
add
sbb
pop
push
pmuludq
inc
daa
je
outsb
leave
shl
add
or
xor
aaa
ret
cmp
jo
decb
movsb
sbb
jmp
lahf
add
jbe
movsl
les
fcompl
int
push
add
arpl
dec
decl
cmpsl
sub
lret
mov
stos
jmp
xorl
into
addr16
add
push
jbe
and
and
filds
jle
or
and
push
add
scas
dec
int3
in
nop
pop
aas
add
push
or
add
add
dec
inc
test
xor
xchg
adc
rorb
sbb
out
dec
sbbb
nop
shlb
add
dec
jo
mov
pop
pop
pop
adc
add
dec
cwtl
add
cld
ss
cmp
popl
stc
fiaddl
fucomi
mov
mov
ret
mov
sarl
push
add
lock
cmp
lcall
mov
pop
ljmp
int3
add
das
pop
cld
sbbl
int
cmpsl
and
xchg
push
and
scas
in
and
lahf
dec
testl
add
adc
xor
iret
and
add
mov
push
add
fwait
xorb
aas
adc
es
pop
jo
lret
inc
mov
sub
outsl
mov
inc
add
test
repnz
xor
nop
add
les
xor
cmp
add
pop
lret
sbb
loopne
or
push
mov
xchg
mov
mov
adc
cs
pushf
add
sbb
bswap
xor
add
into
or
add
push
repnz
orl
add
pusha
aas
cmc
mov
cmove
pushf
rorb
inc
adc
push
imul
adcl
cmp
dec
push
push
add
add
lcall
pop
ficoms
outsl
aam
dec
fwait
inc
xchg
pop
addr16
add
pusha
ret
pop
fadds
jno
les
aad
xchg
mov
sub
mov
add
aas
xorl
dec
leave
aaa
int
xorb
add
dec
fldl
bound
pusha
mov
movsb
nop
cmp
jecxz
pushf
dec
sub
add
aad
shlb
fistps
popa
xchg
sbb
scas
xchg
ljmp
ja
or
cmp
fisttpll
notl
xchg
ret
add
adc
mov
nop
jo
inc
popl
sub
xor
shrl
ss
add
gs
add
xchg
add
add
subb
pop
pop
or
bound
xor
add
ds
fstpl
mov
fidivl
mov
add
loope
cmpsb
mov
jae
sub
gs
pop
cmp
insb
xorb
mov
or
aas
cld
addb
jne
mov
scas
in
cmp
cmp
dec
or
cwtl
mov
stos
xchg
inc
cmp
scas
adcb
mov
stos
jmp
notb
push
mov
adc
push
or
dec
jmp
fsubs
add
sbb
push
jbe
pop
dec
rolb
dec
mov
lea
cmp
mov
xchg
outsl
add
mov
xchg
jae
pusha
xchg
lods
mov
cltd
xchg
pop
mov
mov
add
jp
sub
out
sub
outsb
xchg
and
pop
test
jae
or
fidivrs
or
jle
dec
xchg
and
stos
aaa
push
add
cmp
xor
push
jno
cld
xchg
clc
shrb
dec
nop
int3
and
jmp
sbb
adc
add
aaa
jne
lahf
jno
push
and
xchg
shlb
xchg
add
ret
dec
stc
add
das
idiv
adc
mov
mov
mov
mov
frstor
add
loope
aaa
in
int3
or
cmp
test
xor
and
jb
cli
lret
add
jp
out
add
neg
and
aad
add
adc
adc
pop
movsb
inc
pop
or
sbb
dec
add
outsb
cmp
xor
inc
mov
push
movsb
in
pop
mov
adc
adc
add
adc
rolb
fs
cmp
gs
mov
imul
sub
push
push
add
or
add
sbb
xchg
push
mov
xchg
js
add
arpl
lcall
addr16
insb
add
mov
sbb
inc
push
dec
aas
sarb
or
in
test
shrb
enter
js
dec
pop
push
div
pushf
add
inc
inc
inc
cmp
outsl
mov
aam
add
aas
push
inc
add
fld
mov
cltd
in
fildl
iret
mov
les
pop
adc
movsb
xchg
mov
xor
mov
or
pop
ljmp
sbb
imul
inc
inc
and
je
xor
lret
cmp
mov
cld
call
sar
adc
cmp
push
jge
test
jg
add
cmc
or
test
dec
sti
mov
cld
adc
add
hlt
push
gs
fmuls
xor
shrb
jo
pop
clc
jmp
xchg
inc
push
push
fsubs
ja
int3
subl
push
nop
pop
sbb
lock
into
dec
push
aaa
mov
xor
push
xchg
cmp
mov
adc
add
test
flds
pop
mov
add
rsm
adc
sub
cli
push
dec
xchg
enter
add
insb
mov
and
add
or
sbb
push
sbb
ficoms
in
add
sbb
push
cmpsb
filds
imul
je
add
mov
movsb
mov
xchg
or
inc
sarb
push
add
lock
lret
pop
gs
add
aam
jge
loopne
add
jmp
sbb
popa
xchg
add
les
lcall
cmp
adc
xor
jnp
push
add
rcrl
in
jl
add
ja
mov
add
bound
push
pop
add
push
cltd
inc
lcall
jl
mov
dec
add
inc
shrb
xor
inc
add
stos
jno
sub
loopne
nopl
rcrb
push
out
mov
pop
cmp
mov
popf
sbb
rorb
add
rcll
call
scas
stos
sub
arpl
xchg
lret
cmpl
add
or
add
sub
sbb
sbb
push
sub
scas
loopne
mov
call
cmc
mov
ret
pop
and
sarb
cmp
std
repnz
out
andb
inc
jne
push
inc
cmp
out
jg
xchg
push
je
xor
pop
fsubr
add
mov
add
scas
shrb
ljmp
aaa
inc
fsubl
mov
fstpt
add
mov
dec
rolb
inc
ja
lock
add
fsubrp
insl
sti
mov
add
pop
addr16
dec
push
mov
sarb
out
ret
adc
push
or
mov
xorl
rorl
and
and
cmp
filds
and
decl
shr
repnz
cmc
roll
sub
mov
shlb
cs
lcall
fadds
iret
mov
pop
mov
push
add
mov
adc
cs
sub
rcrb
out
ljmp
add
ja
test
popa
pop
sbb
inc
mov
or
lret
test
ljmp
sub
movsb
sbb
imul
sub
scas
inc
ret
fs
and
sbb
or
adcl
andb
divb
sub
sarb
ljmp
xor
adc
xorb
jmp
out
repnz
cmpsb
icebp
sbb
pop
cld
sbb
mov
adc
daa
inc
aam
xchg
add
pusha
stos
adc
and
dec
fcmovu
add
mov
test
aam
ffreep
cmp
dec
leave
add
adcb
das
dec
lret
shll
sbb
rcll
mov
cmp
jg
aam
mov
pop
cmp
addl
es
dec
fldcw
fsubp
or
sub
or
lods
push
lcall
insl
sub
and
ret
mov
push
pop
sub
or
mov
pushf
push
cld
sbbl
loopne
and
rolb
inc
sbb
rcrb
add
sar
mov
pop
push
mov
xchg
or
jo
add
jo
dec
or
add
test
mov
neg
push
call
push
jge
inc
add
and
sarl
sub
pop
pop
stos
fucom
sub
dec
stos
bound
xchg
das
push
adc
push
mov
clc
add
lods
cwtl
or
icebp
gs
test
pusha
jne
enter
push
das
loopne
cld
rorl
shrl
sbbl
add
mov
mov
aaa
sbb
and
pop
rorb
sub
hlt
nop
add
mov
jns
xor
xchg
dec
jecxz
add
inc
and
in
out
add
xlat
mov
sbb
ret
xor
pushf
cmpsb
stos
cmp
sar
mov
mov
inc
and
cmp
psllq
push
loop
in
add
cli
pop
jg
je
add
mov
gs
into
das
xor
cmpsl
jl
sub
cmp
mov
mov
and
add
xchg
jecxz
mov
fiadds
pusha
sarb
lods
mov
adc
sub
jge
add
clc
test
cmpb
xor
nop
mov
xor
dec
movsb
cwtl
pop
mov
ror
les
xchg
push
int
js
nop
sbb
sub
sub
outsb
jecxz
xlat
add
sub
sbb
lds
fmulp
cmp
or
push
mov
inc
mov
lret
add
cltd
sbb
std
xchg
in
add
lds
js
out
fsubrl
ds
cmp
push
cmp
jmp
pop
pop
cwtl
hlt
add
xchg
scas
jae
les
pop
in
bound
rorb
cld
negb
sbb
mov
call
movb
cmova
jmp
fmul
add
incb
daa
xor
jnp
fsub
dec
shl
sarb
addl
jo
dec
cmp
pop
popf
loopne
pop
xor
mov
add
dec
push
sahf
sbb
dec
sub
jne
pop
scas
add
das
js
add
incb
jmp
into
loope
add
push
mov
mov
mov
mull
mov
and
mov
enter
xchg
negl
fcomps
push
fisttps
dec
mov
fs
push
jp
dec
and
mov
adc
mov
push
rorb
add
jg
ror
lcall
lds
test
daa
sub
nop
add
outsb
push
leave
cmp
aas
in
push
addb
inc
lcall
or
mov
or
ja
cmp
jmp
add
cli
aas
orb
out
adc
xor
add
jnp
out
pop
xadd
mov
push
push
popa
xchg
inc
ficoms
shr
jp
cwtl
sub
lock
lcall
inc
js
jae
mov
cltd
add
test
fisttpl
or
add
add
or
add
push
sbb
jb
adc
mov
add
fmul
das
fisubl
notl
add
iret
outsl
mov
fbld
add
add
jbe
daa
mov
jge
add
mov
mov
cmc
jp
dec
add
scas
outsl
lock
adc
imul
arpl
and
ljmp
out
mov
add
cmpb
mov
add
mov
mov
add
ja
cmpsl
xor
lret
or
call
into
push
mov
andb
pop
or
sbb
sub
das
adc
adc
popa
mov
test
bound
cmp
jl
sar
push
add
xor
add
sub
ja
add
inc
and
push
cmp
cmp
js
adc
push
push
ljmp
jne
add
sub
test
push
repnz
jl
and
call
add
adc
mov
sub
mov
inc
andl
pop
adc
jne
add
adc
getsec
add
mov
imul
jl
cmp
js
loop
add
push
ss
jns
push
xor
push
jg
nop
fwait
xlat
rclb
divl
jl
push
jb
add
loop
push
rcrb
jns
lret
icebp
add
out
sete
jbe
xor
sbb
data16
dec
lret
xchg
dec
aas
add
mov
lea
or
mov
sbb
add
fcompl
int3
repnz
jg
add
in
in
je
pusha
loop
pop
out
mov
mov
add
aad
pop
and
in
sahf
add
fcomp
add
jp
add
arpl
dec
dec
adc
movsl
lods
icebp
xlat
xchg
int
outsl
add
sar
mov
les
lods
push
aam
pop
andb
fwait
push
pop
loope
add
xor
cpuid
les
insl
arpl
add
repz
movsl
cmp
daa
cmp
pop
inc
and
mov
dec
adc
xchg
adc
cs
adc
cmpsb
je
aas
add
adc
hlt
out
pop
popf
pop
imul
test
xchg
nop
jecxz
or
sub
and
add
call
mov
scas
jns
jo,pt
xchg
push
mov
cmc
movsb
xchg
or
sub
test
add
addr16
jb
pop
inc
shll
sub
stos
mov
out
fidivl
dec
jle
pop
inc
add
inc
mov
add
inc
in
sbb
push
xlat
add
or
xchg
push
xchg
nop
mov
ret
mov
mov
iret
mov
push
movb
rcrb
pop
lods
pop
ds
jl
cmc
jnp
pusha
movsl
mov
add
cmp
inc
mov
sti
sbb
lret
fisubs
dec
xchg
add
xchg
imul
xor
mov
and
sub
mov
ds
push
mov
icebp
ret
add
clc
sbb
sbb
out
shlb
add
mov
add
fdivrs
lock
test
rcl
mov
add
cmp
fstl
mov
jg
push
orb
or
add
and
xor
add
rolb
jns
shl
les
add
addb
lock
shlb
inc
add
push
enter
add
dec
sbb
fists
jp
cwtl
add
clc
add
jmp
xchg
add
jns
mov
cmpb
pop
add
arpl
shl
and
push
xor
mov
out
sub
loop
jns
sub
sbb
jb
xor
push
add
and
xor
add
xchg
fadd
xchg
dec
jo
out
push
add
mov
int
out
xor
mov
shl
aas
cmp
mov
das
aaa
or
fldenv
mov
stos
sahf
or
mov
add
lods
xchg
fsub
mov
aad
add
imul
test
push
dec
adc
out
inc
mov
cmp
out
inc
cs
and
loopne
mov
or
jns
jmp
cmpsb
dec
pusha
inc
call
es
add
dec
int3
push
scas
inc
iret
jg
mov
lock
and
dec
icebp
fadds
negb
fstps
add
pop
adc
jl
pop
popf
pop
outsl
xchg
ja
push
pop
jnp
xor
dec
rclb
add
push
fcoml
ljmp
sbb
stc
add
fldt
int3
insl
mov
add
cmp
sub
push
movsb
scas
mov
add
pop
not
add
ss
hlt
xor
or
pop
sub
shll
add
bound
jmp
mov
mov
cld
lods
push
adc
fisubs
add
leave
stc
jno
enter
int3
dec
inc
mov
pop
jg
data16
inc
push
inc
adcb
out
sub
push
dec
xchg
jo
inc
lock
clc
fisttpll
mov
cld
or
adc
cmp
in
pop
ss
imul
js
sbb
mov
dec
or
inc
add
inc
mov
inc
dec
loope
add
sub
pop
dec
add
push
and
and
dec
add
scas
test
out
add
call
add
aas
rorb
in
add
jbe
ja
jo
xor
sbb
sti
push
add
and
movsb
xchg
test
xchg
inc
ds
cli
in
fsub
add
sbb
mov
cmc
dec
outsb
mov
ljmp
rorb
subb
fsubs
in
push
and
xor
testb
mov
fsubs
jmp
jnp
xchg
data16
lock
stos
add
mov
scas
dec
push
call
xor
ja
aas
inc
fdivrs
sbb
shl
sbb
push
add
and
sub
push
leave
addb
mov
inc
add
sbb
rsm
icebp
lahf
divl
or
add
pop
stos
mov
add
call
jp
xor
lret
arpl
jg
sbb
pop
ljmp
in
sbb
add
mov
jmp
inc
test
sub
in
out
mov
dec
test
jno
loop
lret
lea
cli
in
adc
push
test
nop
rcrb
or
testl
adc
and
mov
xorb
into
mov
dec
outsb
stc
aam
add
mov
lods
mov
add
mov
stc
outsl
sti
jmp
aad
push
jl
jp
add
sub
rcll
scas
fwait
add
das
leave
ret
mov
push
lds
or
mov
daa
loop
fdivrs
add
xchg
loopne
mov
fcmovnbe
not
sbb
arpl
mov
push
roll
dec
scas
in
sbbb
adc
les
int
in
insl
repnz
clc
inc
add
scas
imul
push
es
arpl
add
add
jp
pop
jecxz
and
xor
sub
xor
ret
add
jg
sub
mov
add
aad
daa
pusha
negb
test
fildl
lock
cmp
add
jge
mov
test
add
mov
add
xor
or
add
rcrb
ret
push
sbbb
out
xor
inc
add
mov
lods
jecxz
cld
pop
out
js
nop
pop
add
shl
in
sbb
pop
in
xor
add
lods
sbb
js
lock
add
xor
add
pop
push
aaa
push
cmpsl
ljmp
cwtl
addl
and
test
sub
sbb
sti
push
jecxz
add
mov
sub
adc
sub
rolb
scas
inc
ret
div
xchg
push
jle
cmp
add
jg
push
xchg
test
sbb
movsl
add
push
nop
pop
daa
adc
lock
rcrb
lea
xchg
or
push
sbb
lock
iret
shrb
cmp
add
cmp
adc
push
xor
xor
add
outsl
es
pop
pop
xchg
pushf
mov
pusha
push
xor
xchg
mov
and
jl
in
add
add
das
pop
add
inc
sub
cmp
adc
int
push
or
lods
lcall
stos
add
sub
into
pop
pop
inc
jmp
xor
cmp
jecxz
adc
mov
enter
repnz
mov
icebp
movsl
pop
mov
jbe
and
sbb
mov
loopne
adc
mov
das
jp
xlat
mov
subb
adc
pop
jnp
mov
popa
dec
push
pusha
inc
pop
dec
sbb
into
xor
rolb
data16
mov
cmp
cmp
inc
push
out
dec
cmp
push
and
or
add
mov
xlat
and
imul
mov
mov
notb
sub
pop
push
sbb
inc
fdivp
lock
add
orl
pushl
add
fsubr
pop
repnz
and
imul
lret
cld
stos
add
xor
addr16
repnz
pop
lret
cmc
mov
dec
adc
nop
adc
dec
mov
mov
mov
loopne
mov
fwait
jne
sar
add
xchg
enter
loopne
jmp
in
adc
add
jecxz
push
inc
xchg
add
mov
je
lahf
mov
mov
inc
mov
xchg
xor
repnz
add
push
frndint
add
pop
sbbl
cmpl
add
imul
pop
sub
pop
sub
inc
out
cmpsl
add
dec
or
jnp
add
fsubr
lods
test
or
out
and
inc
pop
add
mov
les
in
adc
xor
in
push
xor
cmp
sbbb
jle
mov
sub
sub
add
pushf
lahf
mov
add
cmpsl
sbb
and
inc
repnz
add
movsb
add
mov
cld
sub
and
push
mov
pop
sbb
movsb
add
push
fucom
xor
xor
pusha
in
add
jmp
mov
mov
lret
subb
mov
out
add
nop
mov
mov
stc
fcoml
add
enter
mov
jo
mov
pop
lods
leave
cmp
testb
adc
outsb
dec
js
jne
add
add
ds
lcall
pop
aas
add
pmaxub
cld
jmp
sub
mov
adcb
loopne
add
pushf
dec
or
add
jne
jno
dec
lea
repnz
pop
add
scas
push
add
aaa
inc
scas
sub
int
rol
ror
loop
dec
dec
fsubs
add
add
add
inc
out
test
clc
lcall
les
and
pop
cmp
inc
or
inc
mov
cmp
fimull
clc
or
add
fstl
and
testb
jne
repnz
push
sbb
xor
adc
mov
pop
int3
jl
or
nop
mov
sub
sbbb
mov
jbe
lds
aam
jno
out
and
cwtl
mov
in
cmp
push
or
dec
add
sbb
jb
dec
add
cs
jae
dec
dec
or
mov
mov
mov
inc
mov
add
imul
leave
loop
add
repz
shlb
ds
cmp
push
xor
ja
sub
push
cmp
add
jge
push
sbb
int3
add
xchg
ret
notb
lock
add
addr16
or
stos
fiaddl
add
aaa
xchg
jbe
dec
outsb
ret
sbb
imul
sub
jg
inc
andl
inc
aam
in
pusha
jb
add
inc
fists
into
xor
sahf
mov
xchg
jns
bound
andb
cmpsb
test
lahf
jb
orl
xchg
add
dec
scas
insl
sub
or
jge
mov
clc
dec
inc
rcll
rdmsr
lea
shl
shlb
ret
leave
lock
shll
jecxz
je
add
in
cmc
fimuls
mov
inc
sbb
inc
testb
add
mov
das
out
sbb
pop
mov
inc
dec
cld
cmc
and
jnp
pop
out
add
sbb
push
cvttps2pi
pusha
and
das
sub
test
xchg
mov
jle
cmp
adc
cmp
jno
hlt
shl
enter
jb
add
mov
mov
outsl
inc
sbb
pop
add
es
mov
sbb
pop
and
or
mov
pop
rolb
aaa
mov
cwtl
icebp
or
add
bound
mov
adc
divl
nop
xchg
sub
test
inc
add
rorl
mov
icebp
ja
pop
sub
pusha
xchg
and
xchg
sbb
dec
cmp
add
clc
mov
shrl
aaa
add
jae
push
jo
add
jmp
xchg
call
ljmp
dec
repz
shrb
movsb
add
loopne
pushf
push
cmp
sub
push
jl
je
mov
fnstcw
lahf
cmp
ret
xor
aam
add
and
cld
push
dec
sbb
ja
xchg
pushf
ret
int
mov
and
fldl
or
mov
pusha
fsubr
mov
mov
movl
dec
test
jmp
pushf
out
sbb
flds
push
aas
andl
clc
jge
xchg
pop
lahf
bound
lret
push
and
xchg
mov
in
dec
roll
jbe
sub
mov
pop
fimull
inc
adc
cs
add
rolb
pop
in
aam
inc
lods
add
mov
je
add
adc
add
mov
or
or
into
add
pop
add
movsb
ja
xor
pop
adc
push
adcb
cwtl
les
jno
cmp
cmp
sub
xor
pop
cmp
adc
cmp
outsl
mov
and
add
mov
jge
lock
add
in
shlb
sub
pop
dec
ja
mov
sahf
push
dec
icebp
pop
loopne
mov
inc
movsb
mov
xchg
push
vcvtsd2ss
adc
sbb
and
jb
adc
insb
add
mov
xor
sbb
mov
sub
loopne
bound
jl
sub
lret
test
lock
add
fwait
mov
test
aam
pop
or
hlt
add
sub
mov
mov
sub
push
subl
xor
jg
ljmp
sub
movsb
ffreep
push
adc
aas
cld
jbe
add
pop
out
jne
add
fcmovne
mov
add
push
test
mov
push
ljmp
outsb
sub
inc
push
test
pop
add
sub
mov
and
loopne
hlt
add
mov
adc
stc
insl
push
adc
mov
push
push
mov
xchg
mov
dec
push
sub
add
push
popf
sbb
add
mov
scas
inc
in
inc
push
sub
shlb
in
pop
inc
hlt
lahf
out
add
scas
out
xchg
pop
rol
add
test
repz
lea
arpl
cld
sldt
aaa
stos
jae
push
rolb
or
sub
iret
jp
leave
out
js
push
jnp
mov
nop
sub
xor
rcrb
pop
sbb
xorb
add
add
ds
pop
insb
pusha
mov
add
loope
adc
iret
negl
flds
sysret
in
lods
inc
mov
add
push
sub
add
repz
mov
mov
sub
popf
mov
xchg
jnp
sti
cmpsb
or
pop
xorl
lock
shrl
mov
rcrb
rol
lods
sbb
mov
dec
cs
daa
or
loopne
mov
testl
mov
out
test
test
movb
add
fs
loopne
aas
inc
mov
cld
cltd
fwait
sbb
and
add
lret
lock
ljmp
jmp
ss
divl
test
jp
out
or
pop
xchg
sub
sub
add
mov
inc
jns
outsl
mov
jp
jmp
and
adc
std
push
jnp
pushf
stc
add
push
jne
add
mov
or
popa
jnp
sbbb
mov
inc
inc
add
dec
mov
psadbw
loop
and
out
cld
call
xor
insl
rorb
lods
add
sub
xor
push
in
and
push
mov
add
push
mov
push
faddl
xorl
mov
xor
hlt
iret
cwtl
jecxz
fistpl
or
xor
cli
cmp
and
jp
add
loope
aam
xchg
cwtl
outsl
and
adc
testb
lods
js
add
or
push
shl
call
mov
repz
pop
lods
sbb
dec
popf
dec
cmpsb
jne
cmp
cmpsl
lock
sbb
push
stos
mov
pop
repnz
inc
stos
div
sahf
lds
add
enter
jo
add
aas
mov
cmpsl
add
es
pop
fadds
je
pop
sbbl
lret
orl
mov
loopne
int3
mov
mov
in
fwait
dec
popf
iret
inc
orb
or
ficoms
jno
mov
shlb
pop
jb
pusha
pop
cs
lods
cmpsl
sbb
add
xchg
stc
add
pop
mov
cs
testb
mov
shll
dec
jg
adc
das
xor
push
add
faddl
dec
and
jo
cmpsl
out
fcos
shlb
loope
cmp
repz
por
mov
sahf
xchg
and
pop
lret
in
or
inc
mulb
sbb
ja
add
and
or
jl
adc
pop
cmp
xchg
add
aas
mov
xchg
idivb
dec
mov
push
lret
sahf
cmc
mov
es
xor
shlb
pop
adc
call
add
adc
scas
add
jno
pop
rcl
ror
in
add
xchg
aam
inc
pop
push
add
scas
add
fidivl
mov
xor
xchg
mov
add
iret
dec
xchg
into
pop
int3
xchg
push
and
adc
roll
jp
mov
jns
dec
pop
shlb
pop
or
cmc
imul
xor
mov
scas
int
pusha
push
and
and
popa
outsl
mov
jae
aam
cmp
pop
lock
push
sar
clc
enter
roll
and
mov
jne
sbb
add
cmp
imul
and
sbbb
movsb
test
push
std
adcb
adc
aaa
clc
loopne
fwait
or
insb
enter
das
imul
xor
rclb
mov
jge
scas
mov
or
mov
inc
push
sub
inc
push
cwtl
cli
cmp
add
xor
add
mov
add
and
pusha
mov
insl
mov
inc
add
int
mov
in
dec
pop
sbb
loope
jge
sbb
pop
jl
and
mov
mov
rcrb
or
xchg
pop
aaa
loopne
cmp
and
sub
popa
stos
add
fcmovb
mov
jecxz
fildl
test
lret
test
or
inc
fwait
imul
fbstp
xor
nop
and
add
jno
jnp
mov
xchg
xchg
daa
cltd
pop
outsl
adc
jo
add
sub
aad
push
and
cmp
xor
adc
inc
jg
push
sbb
lock
xchg
adc
test
xor
add
mov
test
xchg
enter
mov
add
shl
std
fiaddl
jp
mov
out
insl
add
inc
mov
xorb
movsl
adc
lods
jno
jbe
xor
and
ljmp
inc
xorb
lds
mov
repnz
xchg
dec
loopne
push
adc
sbb
into
scas
add
push
scas
decl
push
cmpb
cmpsl
icebp
jno
cld
pusha
ds
cli
repz
sub
imul
add
sbb
les
or
pushl
xor
repz
jb
xor
je
push
xchg
call
sbbl
aaa
sbb
jmp
nop
dec
dec
in
out
dec
mov
mov
in
add
enter
rolb
adc
or
sub
add
push
je
add
push
adc
aad
push
add
stos
xor
add
aaa
add
sub
fadds
inc
roll
mov
aas
scas
je
stc
add
das
xor
cmp
mov
das
jo
jae
xchg
mov
add
sub
cwtl
add
loopne
inc
mov
outsb
xor
xchg
push
add
jmp
push
outsl
xchg
add
xchg
sub
mul
adc
loope
pop
adc
ja
mov
mov
and
inc
sbbb
fadds
in
mov
add
adcb
cltd
pop
jg
or
xchg
repnz
movsl
mov
loopne
mov
hlt
test
or
popf
mov
ret
cli
xor
je
pushf
arpl
cs
incb
mov
mov
js
or
js
cmp
mov
jg
mov
add
lock
inc
push
xchg
stos
mov
mov
fildll
stos
push
jae
and
adcb
sub
pusha
into
int
xrelease
inc
xor
fimull
jl
mov
sub
jg
mov
out
outsl
add
js
je
in
add
pop
fimuls
jno
rolb
mov
popa
imul
out
addb
jecxz
ret
rclb
scas
inc
bound
adc
std
jnp
mov
leave
clc
dec
test
arpl
fwait
imul
pop
adc
and
ret
gs
cmpsl
jns
adc
js
sarb
sbb
call
cli
lret
sbb
mov
push
add
pop
xor
call
lods
pop
mov
jo
pop
or
ss
loopne
sub
std
stos
out
js
lahf
add
mov
pop
mov
xor
out
xchg
sbb
int
add
jns
mov
sbb
jle
fcmove
add
adc
and
fidivs
adc
shlb
mov
dec
jns
in
jp
sub
xchg
adc
mov
test
add
xlat
lock
je
roll
add
insb
imul
cmpb
push
cwtl
nop
out
mov
dec
aam
mov
addl
test
movsb
mov
mov
add
je
jbe
mov
xor
ficoml
stos
jge
mov
dec
push
aad
insb
in
xchg
xor
xchg
sub
push
push
loope
roll
pusha
js
jp
loop
adc
lahf
xor
nop
sbb
xchg
fsubrs
pusha
push
dec
data16
dec
loop
add
inc
fs
mov
lcall
xor
xor
gs
lahf
test
call
mov
in
cmc
xchg
or
fadds
mov
sbb
lret
movsl
lods
mov
movsb
cmp
xchg
adc
mov
fs
adc
add
mov
push
pop
mov
jecxz
loopne
sbb
pop
aam
aad
nop
arpl
andb
dec
sbb
xchg
mov
pushf
mov
pop
loop
sti
shlb
push
rcrb
nop
out
push
sub
add
push
or
sbb
push
mov
adc
xchg
xchg
push
add
leave
das
les
xor
push
shrl
xchg
loop
jo
ficompl
pop
rclb
jo
fsubr
xor
es
stos
sub
add
adc
jle
test
adc
clc
mov
pop
idiv
fstpt
rclb
xor
pop
mov
lods
sub
outsl
push
or
addb
jp
cwtl
mov
out
fwait
jge
hlt
int
lea
mov
fstps
shlb
cmp
dec
dec
mov
xor
add
mov
jp
sub
jns
iret
add
jg
sbb
jge
add
adc
stc
inc
pop
lret
outsb
leave
test
add
jmp
repz
ds
push
mov
xchg
sub
push
test
xchg
popf
add
and
cmpsl
fstpt
add
cmp
in
lcall
pop
aad
jecxz
mov
bound
int
sbbl
sub
mov
nop
pop
ljmp
add
pop
aad
mov
leave
xorl
add
je
stos
inc
add
dec
lock
dec
mov
jge
xor
push
out
jnp
jae
xchg
mov
int
dec
mov
aam
jno
inc
cmp
mov
in
or
fnstcw
xor
adc
mov
mov
test
jl
inc
int3
add
daa
pop
out
mov
jle
or
fisttps
loopne
rolb
les
push
inc
roll
jns
jmp
sbbb
ret
pop
push
add
frstor
test
adc
mov
sbb
sub
shlb
add
mov
insb
dec
cmc
cmp
adc
add
in
add
sub
cmpb
cltd
nop
lock
ss
cmp
cmp
add
outsl
mov
add
test
stos
or
pop
jne
pop
add
cld
mov
or
mov
xor
add
push
sub
mov
adc
and
adc
rcrl
rorb
mov
jg
mov
mov
insb
jns
jecxz
sub
dec
sahf
icebp
arpl
cli
call
cs
dec
push
add
inc
adc
mov
icebp
shrb
in
xchg
jecxz
lret
add
shrl
movsl
cmp
add
inc
cld
xor
mov
adc
fmull
mov
or
sub
hlt
lea
jecxz
inc
mov
stc
dec
cmpb
add
es
push
outsl
into
addl
notl
test
cmpsb
add
add
orb
sbb
xor
clc
jg
cmovge
inc
icebp
cmpsl
movsb
mov
sub
lea
fdivl
shrl
xor
cwtl
mov
pop
dec
das
nop
adc
add
mov
jbe
add
add
add
out
jae
stos
out
jo
lcall
in
int3
js
out
xor
add
mov
movsb
lock
push
jecxz
bound
ret
lods
fildl
add
inc
jg
test
jge
out
push
xchg
jl
sbb
add
xchg
fbld
int
sub
lret
addb
cmp
enter
mov
es
mov
push
and
cmp
das
or
fidivrl
add
xor
jbe
and
ret
dec
icebp
insb
or
js
mov
scas
sub
jnp
cltd
in
pop
cmp
imul
inc
xchg
mov
or
testb
pop
mov
dec
cmp
in
push
jecxz
add
out
xor
sub
aaa
lods
mov
ret
push
sbb
jbe
jo
add
push
js
pop
mov
sub
int
loop
movsl
cmc
inc
out
jmp
loopne
add
rcl
pop
dec
or
add
je
pop
int
xchg
nop
in
jb
in
repnz
pop
or
pushf
in
cmp
jmp
or
and
inc
call
sub
inc
cmp
xlat
std
cmp
add
mov
lods
add
scas
sbb
cwtl
or
lock
mov
cmp
add
movsl
and
dec
push
insl
sbbl
mov
add
or
lea
repnz
repz
movsl
test
sub
rclb
pop
or
dec
or
add
bound
lahf
sbb
add
add
xchg
jge
push
mov
sub
inc
hlt
add
sbb
sub
adcb
cmp
cmpsl
icebp
add
jp
inc
xlat
jae
mov
mov
mov
test
pushf
cwtl
push
hlt
jnp
and
sbb
jb
pop
sbb
add
jns
jne
mov
mov
call
jmp
addb
cli
pop
add
sub
dec
add
hlt
dec
add
jl
dec
add
addr16
push
mov
add
stos
cli
dec
in
clc
sarb
or
add
add
add
fsts
jl
lds
cmp
inc
int3
push
nop
inc
add
js
mov
clc
xor
movsl
addb
in
ss
inc
xorl
mov
jno
jle
lcall
hlt
dec
push
lea
add
fnstcw
xor
pop
mov
insl
cmp
add
or
pusha
daa
add
out
xchg
pop
shrb
add
adc
into
sbb
cmp
or
push
jge
push
mov
mov
jl
pop
sub
rclb
sbb
in
loopne
lret
into
gs
jne
pop
dec
and
xchg
cmp
test
cmp
ret
lds
mov
push
out
iret
out
jo
dec
pop
inc
fisttpl
lock
dec
in
add
xor
jmp
insb
in
cltd
fists
mov
in
jnp
jo
add
cmp
sub
stos
rorb
jmp
mov
nop
gs
xchg
mov
fnsave
das
out
loope
sarb
nop
pusha
dec
je
or
jns
add
and
jmp
shlb
dec
cli
pop
fildl
lock
mov
pop
add
mov
flds
or
mov
inc
mov
xchg
push
leave
jnp
shlb
enter
nop
sbb
push
and
pop
push
xchg
add
mov
pop
push
movsl
jo
push
loop
sbb
cmpsb
jecxz
out
xchg
push
rclb
adc
add
repnz
imul
or
loopne
sbb
push
inc
icebp
in
mov
dec
add
adc
lock
lcall
cmp
jbe
xchg
js
add
or
mov
xor
mov
mov
lcall
pop
add
je
add
fs
sub
add
mov
pop
and
push
cli
mov
test
mov
movsb
js
mov
popa
and
mov
jecxz
mov
cld
aad
test
sbb
add
sub
test
in
dec
dec
mov
add
loop
add
das
imul
addl
adc
popf
aas
add
inc
sbb
loope
sub
loop
push
sub
ja
into
and
push
or
mov
add
cmp
stos
fbld
sbb
mov
jns
jb
and
pop
enter
jno
push
mov
dec
adc
add
nop
fldcw
adc
fsubs
in
pop
rcrb
fstpt
add
cli
inc
xchg
sub
loope
inc
mov
push
jo
add
mov
lret
mov
shrb
and
jae
xchg
cwtl
xchg
test
repz
push
add
sub
inc
lock
jbe
add
or
xor
cmp
popa
cwtl
pushf
add
jmp
add
pop
add
out
aad
add
test
ljmp
mov
add
pop
xor
loopne
mov
adc
pop
xlat
mov
sub
jl
or
cmp
push
and
test
add
cmp
dec
pop
xor
es
jo
movsb
into
pop
mov
das
add
pop
call
add
mov
sahf
adc
adc
add
jo
dec
mov
dec
pop
fwait
add
lock
out
aad
andb
cmp
test
pop
dec
and
mov
and
repnz
sub
mull
shrb
faddl
mov
add
sbb
hlt
jecxz
scas
jbe
mov
repnz
mov
jno
cmp
push
in
dec
add
and
stc
xor
int
jae
lcall
in
add
cmp
loope
adc
outsb
or
xchg
xor
add
fs
adc
cmpsl
cmpl
jge
enter
xor
cmc
loope
fsub
int3
push
scas
fnsave
push
out
add
lret
sahf
add
mov
push
faddl
mulb
sub
jmp
inc
add
cli
or
or
scas
push
clc
mov
push
push
adc
dec
jle
testb
or
mov
insl
cwtl
lds
pop
je
lcall
jno
cld
test
ret
test
pop
cmp
xor
call
mov
push
clc
test
jnp
jb
repnz
xchg
dec
sbb
push
xchg
adc
test
jno
xor
pop
push
imul
sub
or
mov
push
inc
int3
sub
adc
sub
cld
shr
xchg
aas
mov
add
cmp
mov
cmp
test
jno
nop
adc
repnz
mov
pop
xchg
add
mov
inc
mov
clc
ja
add
repnz
and
push
push
test
pcmpgtb
dec
jecxz
mov
insl
out
push
add
push
test
adc
mov
ds
pusha
push
lock
stos
out
mov
cmp
mov
adc
pop
jle
mov
inc
lock
loop
inc
std
mov
push
and
mov
loopne
aam
add
pushf
xor
stc
xor
or
fucomi
xchg
pushf
inc
fnstsw
nop
cltd
xlat
add
cmpsb
sbb
mov
cmp
mov
lods
adc
in
pop
or
lea
enter
sbb
add
push
adc
in
jnp
cwtl
and
jmp
sbb
scas
add
jns
ffreep
inc
pusha
sub
ljmp
inc
xchg
add
inc
int3
imul
jae
add
pop
xchg
mov
mov
cld
incl
xchg
fcompl
sub
mov
fs
or
loopne
add
inc
movsbl
lret
iret
lahf
sti
mov
mov
movsl
repnz
or
enter
lods
mul
cmp
xchg
cmc
iret
loope
clc
inc
add
fsubrl
push
add
mov
pusha
cmp
mov
enter
xchg
das
insl
fadds
adc
rol
push
xor
cmp
sub
fstpl
dec
movsl
add
fcoms
call
shlb
cld
jbe
iret
add
xlat
repz
in
pushf
gs
sti
push
cmpsl
mov
aam
repnz
dec
add
fwait
cmp
inc
inc
cwtl
push
add
mov
ds
lods
addb
das
jb
fs
fwait
imul
jae
push
inc
bound
push
inc
jno
push
xor
sbb
xor
mov
push
cs
insl
sub
jp
mov
hlt
sbb
add
fsub
les
add
dec
into
stos
mov
stos
aad
dec
mov
mov
jecxz
mov
adc
add
and
xchg
jecxz
jno
mov
cmp
in
add
sbb
xlat
lods
int3
add
add
pushf
lds
es
xor
pop
xchg
and
add
dec
mov
sbb
sub
shll
aam
push
out
mov
dec
lea
int
les
mov
add
call
add
call
out
cmp
stos
cmp
mov
xchg
es
adc
add
push
push
ret
mov
movsb
mov
call
icebp
insl
xchg
faddl
add
push
inc
dec
xor
inc
ja
add
cmp
and
mov
stc
xorl
adc
lock
push
pop
sbb
hlt
inc
aad
and
sub
dec
dec
mov
aaa
jecxz
enter
push
cmp
mov
and
mov
add
insb
sbbl
jge
sbb
jecxz
or
mov
push
mov
test
rclb
outsb
jl
add
sbb
push
sub
es
hlt
jo
movsb
add
rorl
data16
test
jno
and
and
aas
xchg
decb
add
mov
jbe
xchg
ds
lret
push
stc
out
int3
and
repnz
imul
cmp
aad
push
in
movl
mov
rcl
or
pop
mov
rcll
icebp
test
xlat
adc
cmpl
jo
jmp
lahf
es
add
daa
push
jecxz
pop
add
sti
jp
adc
shlb
adc
shlb
or
xchg
adc
arpl
in
je
cs
inc
mov
movb
push
push
fiadds
jns
int3
rol
pop
xchg
adc
adc
xchg
xchg
add
setbe
fstpt
shll
mov
dec
dec
mov
jo
mov
xlat
mov
sbb
add
pop
xorl
loop
pmaxsw
mov
xor
add
adc
dec
lahf
add
sub
xchg
decl
or
sub
push
xor
jb
xchg
mov
add
xchg
mov
and
push
je
xor
shlb
aam
mov
stos
jmp
fs
jecxz
pop
xchg
sarb
sbb
jns
xor
int
pop
in
mov
vmaskmovdqu
icebp
idivl
pop
add
xchg
stc
pop
int
lock
addr16
push
rcl
bound
or
mov
sbb
dec
add
dec
xchg
lock
push
into
dec
sbb
popf
push
adc
pushf
add
mov
mov
push
movsl
pusha
xchg
mov
sti
es
push
add
push
aaa
and
or
pop
popa
push
mov
iret
sub
pop
sub
jnp
xor
jne
out
psraw
stc
es
sbbb
movsl
scas
in
in
jo
shlb
data16
sar
pop
add
jae
xor
and
fcoms
mov
xchg
andb
sub
mov
add
push
ds
push
xor
push
mov
daa
sbb
jl
add
jp
aam
sbb
or
mov
pinsrw
jmp
and
and
inc
xor
and
sahf
add
pop
inc
adc
hlt
lret
jecxz
jo,pn
push
cmpsb
sar
inc
push
add
insl
fstpl
mov
jp
test
ja
cmp
xchg
xchg
or
mov
or
or
dec
push
cmp
ret
xchg
dec
fsts
and
or
lea
sti
adc
mov
movsl
aas
movsl
push
dec
sti
fsubs
movsb
xchg
sbb
xor
xor
shll
fwait
clc
sbb
lds
pop
push
jmp
cmp
add
add
or
int3
inc
cld
movsl
jno
add
xlat
cld
fstl
stc
out
jg
xchg
cwtl
add
add
pop
nop
call
js
xor
xchg
or
or
loopne
push
fmuls
fnstcw
mov
jge
ljmp
mov
cltd
int3
lds
mov
outsl
mov
out
add
nop
movl
adc
sarb
lret
push
cmpsl
leave
cmp
lret
sarb
add
jp
sbb
pusha
jno
adc
int3
add
sbb
out
dec
pop
add
jl
movsb
jecxz
jne
jae
pop
cld
add
mov
xor
xchg
xchg
xor
iret
pop
mov
loope
pop
mov
stc
stos
mov
notl
adcb
sub
jae
or
ret
xchg
mov
mov
nop
or
cld
add
pop
pop
sub
clc
pushl
mov
orb
adc
out
gs
call
in
xchg
int3
add
inc
testb
mov
das
cmp
cwtl
scas
test
sti
rorb
mov
imul
xchg
or
and
les
pop
mov
stc
mov
and
fwait
inc
sbbb
pop
push
dec
add
out
xchg
mov
sub
pop
pop
and
subb
ds
jbe
add
nop
into
in
daa
das
in
sbb
fcomps
call
mov
push
out
jmp
adc
shl
push
or
add
xor
push
scas
fildl
repz
ds
adc
loopne
repnz
mov
jb
xchg
mov
pop
int3
or
dec
fisubrs
stos
rcr
jecxz
inc
sub
loop
jge
add
mov
jle
pop
mov
dec
and
mov
pop
add
imul
scas
add
mov
movsl
movsb
jmp
mov
in
addr16
mov
shlb
pop
xchg
das
mov
mov
lea
dec
aaa
xor
lret
arpl
js
aad
pop
inc
fadd
xor
lahf
jle
inc
pushf
add
lea
cmpsl
cmp
rorb
push
les
in
loope
rcrb
jle
mov
movsl
mov
inc
sub
jp
shll
dec
mov
je
test
add
sub
test
inc
pusha
enter
dec
or
inc
pop
sub
pushf
add
push
xchg
addr16
mov
and
pop
fisubl
inc
add
mov
add
add
rol
dec
data16
add
mov
jmp
loopne
push
fmuls
or
xor
ja
xchg
pop
inc
add
rcr
rclb
lds
add
aam
cli
out
add
mov
or
push
loopne
xchg
mov
add
mov
out
insl
shlb
xor
xchg
minps
or
mov
cmpl
stos
pop
jle
add
test
add
sub
sub
lret
repnz
pop
leave
shrb
orb
test
push
popf
add
sbb
movsl
lcall
inc
mov
pop
lret
add
div
mov
mov
pushf
dec
enter
inc
out
call
std
leave
sbb
sbb
lds
jnp
imul
add
dec
inc
or
rorl
cmc
icebp
das
rolb
jmp
and
jno
arpl
ljmp
and
dec
sub
sbb
inc
int
add
and
push
sub
adc
add
push
sbb
std
add
cmp
int
inc
je
js
pop
xor
cs
arpl
call
mov
lret
sub
les
int
out
push
loopne
in
inc
fs
stos
cmp
cmp
sti
fs
lock
add
addr16
xor
call
push
adc
pop
dec
sbb
int
ja
xor
test
add
mov
inc
insb
rolb
outsb
push
push
adc
daa
add
jle
test
or
push
nop
stos
inc
lcall
mov
inc
rolb
jns
and
jbe
push
stc
jge
and
mov
dec
add
xchg
cwtl
xchg
add
push
roll
cmp
imul
and
sbb
je
mov
call
stos
lock
pop
and
add
inc
fcomps
adc
mov
mov
bound
loop
lds
ds
jg
adc
call
and
push
loope
sti
sahf
cld
cmpsl
movsl
jne
mov
push
xchg
cmp
push
jecxz
add
test
xor
enterw
cmp
movsl
shlb
call
push
bound
mov
mov
gs
mov
jno
inc
mov
push
lods
xor
add
or
les
jne
fwait
sarb
in
jno
dec
loopne
dec
adc
add
jl
dec
cmp
sbb
hlt
push
cmp
outsb
xor
sbb
arpl
cwtl
pusha
and
bound
mov
pusha
jb
push
add
or
clc
decb
cwtl
jl
mov
into
clc
push
lcall
rorl
xchg
or
fldenv
aad
push
dec
stos
movl
shr
mov
add
dec
shll
jo
add
cmp
ja
rcrb
aad
mov
add
mov
mov
es
inc
xor
xchg
fsubrl
pop
push
sub
xchg
test
add
push
imul
mov
outsb
fwait
ret
out
add
int
movsl
cmp
mov
and
pusha
int3
les
mov
mov
and
call
or
push
fldl
mov
loopne
loop
jle
xor
push
dec
mov
out
jae
pusha
xor
mov
xchg
lcall
inc
testb
jno
mov
sbb
inc
jl
popf
or
push
flds
xor
stos
add
sarl
xchg
pop
jo
movsb
xlat
call
xor
xor
dec
add
fisubrs
ja
xor
push
adc
in
daa
push
jb
sbb
add
xchg
jp
mov
cmc
sbb
sbb
fwait
mov
sbb
mov
out
nop
push
int3
add
and
adcl
dec
cmp
xchg
sub
cs
aam
cmpsb
or
lock
lahf
out
rol
ret
lret
pushf
cwtl
mov
jl
fists
mov
loop
add
sub
push
and
lret
jmp
mov
mov
mov
in
lods
mov
aas
adc
cld
xchg
sahf
or
push
cmpsb
scas
add
or
mov
fbld
push
ds
dec
arpl
imul
jmp
add
adc
aaa
add
adc
inc
ficompl
enter
push
aas
adc
or
loope
mov
rcrl
bound
add
and
clc
inc
movsl
add
push
jo
mov
shll
add
jg
jae
and
add
pop
lds
cmp
adc
add
pop
jge
nop
add
mov
insb
sbb
push
aam
cwtl
enter
add
and
in
pop
mov
hlt
pop
loopne
cli
or
ja
mov
fimull
pop
cmp
adc
push
nop
pushf
add
cs
dec
add
orb
scas
out
pop
xor
mov
out
or
or
subb
popa
xor
inc
dec
into
mov
mov
jle
adc
mov
xorl
mov
jl
add
add
cmpsl
int3
out
add
das
add
mov
mov
adc
pop
sbb
cmp
push
test
mov
xchg
mov
jnp
jno,pn
out
insl
adc
push
orb
out
cmpb
ret
mov
adc
inc
sub
push
fisttpll
repz
add
inc
dec
fs
shlb
out
jae
add
cmp
cmp
or
add
mov
cwtl
pavgb
mov
shr
fisttps
jecxz
imul
lahf
fwait
jecxz
mov
add
lods
xchg
add
inc
xlat
in
mov
mov
dec
pop
xchg
or
adc
sub
push
add
jnp
fucom
cmp
sbb
scas
xor
or
add
hlt
jae
pop
cmp
pop
jbe
jb
add
dec
xchg
dec
jmp
pop
repz
pop
call
pop
ja
add
fimull
inc
roll
mov
cmp
mov
test
mov
rol
mov
shll
mov
dec
pop
mov
push
cmp
inc
dec
mov
mov
pop
mov
inc
jg
popa
mov
pop
sub
add
inc
xlat
dec
add
xor
sub
add
xchg
push
mov
sub
xlat
push
jecxz
sub
dec
shll
push
fldenv
pop
je
popa
jmp
int3
loope
aas
adc
lds
jecxz
adc
dec
enter
dec
add
lahf
ja
sbb
inc
shlb
sahf
sbb
mov
pop
out
or
leave
fnstcw
add
add
fmuls
rcll
add
or
into
mov
or
xchg
mov
mov
xor
dec
inc
jb
cmp
mov
loop
mov
sbb
fsubrs
lcall
roll
ss
xchg
and
std
jg
xor
mov
xchg
icebp
dec
push
adc
add
subl
aam
lret
jmp
into
push
add
sti
push
sbb
sti
mov
mov
and
sub
inc
add
shlb
xor
jg
in
adc
in
xchg
or
sub
inc
sbb
or
fistps
das
test
mov
add
cwtl
xchg
sbb
add
gs
imul
lcall
mov
pop
pop
push
test
adc
mov
xlat
loope
or
add
xchg
orl
je
pop
loopne
add
imul
movsb
or
jns
je
mov
loopne
mov
lret
nop
cmc
loop
mov
lret
add
int
shl
xor
jae
add
jle
adc
push
dec
cmp
push
adc
add
or
adc
add
and
and
cmpb
and
xor
add
xchg
mov
clc
test
scas
add
mov
mov
lock
adc
movsl
xchg
dec
push
inc
jmp
rolb
aam
push
sub
mov
mov
cltd
pop
jno
add
loop
inc
add
addl
out
in
jnp
cmovo
in
scas
pop
or
or
xchg
lret
push
sbb
jg
jl
std
xchg
jno
xchg
cwtl
jbe
fwait
add
sahf
ret
and
add
ljmp
cs
mov
outsl
push
sub
ficompl
add
and
or
dec
adc
daa
push
add
gs
subl
rorb
dec
idiv
adc
in
add
mov
rcrl
pusha
or
xlat
icebp
add
dec
cmp
test
push
loopne
call
adcl
inc
imul
adc
xchg
dec
add
mov
stos
lea
mov
shl
add
fcomps
testb
cvttps2pi
push
add
jns
outsl
leave
add
mov
popa
shll
cmpb
inc
xor
pop
popf
addr16
in
iret
cs
push
rclb
and
ljmp
jne
cwtl
ljmp
icebp
add
test
sbb
inc
add
ljmp
inc
add
stos
mov
push
ss
test
or
imulb
add
adc
xchg
punpckhwd
jae
in
xor
pop
adc
sahf
popa
add
ret
lds
repz
stc
sub
inc
in
testb
mov
test
jl
xor
cmc
std
push
inc
pusha
mov
icebp
and
add
dec
inc
test
movsb
xchg
aam
sbb
xor
add
fsubrs
mov
inc
or
fcmovnbe
sub
addr16
xlat
in
cmp
daa
jge
mov
addb
int3
sar
xor
pushf
dec
dec
in
pop
ss
jp
shlb
shlb
sbb
rcr
popa
leave
sbb
outsb
data16
in
lret
int
sbb
loopne
movsb
pop
add
inc
cmp
arpl
in
insb
popa
out
jo
push
or
pop
xor
sub
jno
jecxz
orl
icebp
movsl
lods
add
mov
xor
in
test
je
pop
dec
cmpsl
pop
cwtl
sti
add
mov
xor
or
sbb
ljmp
add
sarl
push
cmp
and
adc
jns
out
and
mov
inc
imul
add
inc
cmp
cmp
adc
sbb
cltd
loop
les
cmovb
dec
xor
mov
sbbb
push
dec
fmul
push
mov
sub
add
cli
pop
out
adc
fcmove
mov
stc
out
lcall
xchg
or
clc
sbb
mov
cmpsl
imul
pop
loop
xchg
add
lret
ret
shlb
sbb
out
clc
mov
sbb
xchg
add
jecxz
pop
or
mov
add
push
cmp
imul
jb
jl
or
cwtl
in
sbb
nop
call
pusha
enter
push
ljmp
pop
push
jmp
std
and
push
adcl
mov
mov
push
add
xor
pop
addl
add
and
pushf
inc
inc
aas
aaa
mov
add
into
and
fs
cli
and
add
rolb
out
sti
ficoms
xor
jno
clc
add
data16
sbb
adc
sbb
bound
stc
enter
xor
xchg
fs
shrb
xchg
lcall
addb
and
jb
cmpsb
or
pushf
lds
shl
outsb
add
adc
sub
xorl
les
test
pushf
mov
add
addl
add
lea
push
mov
and
fcmovb
dec
jmp
dec
fistps
or
je
negl
push
push
sub
inc
xor
add
sbb
outsl
xor
call
addr16
add
jmp
repz
lea
sbb
fdivs
and
or
addr16
and
mov
pushw
add
inc
jno
cmpsl
rorb
push
ret
nop
bound
adc
loopne
xor
sbb
and
js
sub
cs
add
daa
les
outsl
mov
push
inc
in
adc
push
add
mov
icebp
xchg
clc
stos
pop
add
and
aaa
adc
add
scas
push
add
sbb
pop
push
pusha
mov
pusha
and
push
ljmp
sbb
mov
in
jl
pop
in
lds
imul
dec
jmp
pop
ficoml
push
pop
call
cmp
insb
sub
repz
cmpb
fmuls
nop
call
pop
or
rcrl
add
mov
dec
movsb
inc
out
add
inc
imul
pop
scas
add
pushl
and
add
xchg
mov
xor
add
hlt
cld
imul
push
inc
dec
popa
adc
cmp
pusha
cld
cltd
add
dec
or
xorb
dec
jp
push
loopne
addb
pusha
add
lds
add
insb
les
adc
add
mov
insl
arpl
mov
dec
pop
outsl
mov
js
fsubrs
or
xor
test
mov
inc
xchg
push
mov
xchg
jmp
out
stc
and
ljmp
lds
insb
adc
rol
sbb
ficoml
rorb
dec
dec
xor
js
sub
int3
pop
jg
test
add
outsb
out
mov
pop
sub
push
jge
pop
mov
das
pusha
adc
push
push
push
and
pop
sti
inc
add
mov
lret
sbb
add
cmpsb
push
fcoml
addl
cwtl
sarb
ds
mov
nop
inc
or
dec
cmp
es
mov
loop
fcmovnb
pop
jb
jo
xchg
cmc
cli
cmp
and
in
jl
pop
dec
dec
add
jns
ss
das
jecxz
add
subb
jno
adc
dec
sbb
dec
jmp
mov
sub
sub
mov
in
insb
jne
outsl
or
mov
pop
lods
mov
lods
lret
jno
mov
add
stc
scas
bound
cltd
push
ljmp
or
cmc
pop
cmc
js
adc
aas
ljmp
add
adc
add
push
mov
jne
repz
imul
xor
negb
les
or
jb
or
xor
push
mov
daa
mov
pushl
xlat
out
outsb
lock
test
pop
xorl
push
pop
pop
pop
jmp
sbb
ret
xlat
sbb
aam
push
rcll
hlt
lea
add
push
bound
push
cs
mov
lock
sub
and
nop
push
in
pop
adc
jo
cs
adc
stos
sbb
mov
mov
sbb
or
mov
ss
pop
ret
pop
fdiv
adc
pushl
jmp
push
enter
cmp
xor
xorl
sahf
mov
xor
arpl
push
xor
xor
sbb
xchg
add
clc
xor
test
dec
cmp
sbbb
ret
and
add
iret
mov
mov
daa
jge
jne
adc
mov
andb
mov
or
adc
adc
add
test
mov
inc
int3
test
js
xor
cmp
movsl
and
ja,pn
xchg
pop
cltd
dec
lret
add
ss
rcrl
out
stos
bnd
cmp
div
add
and
popl
mov
inc
test
add
movl
xchg
or
push
aaa
sbb
das
inc
addb
sbb
fcomps
je
add
mov
andl
or
lods
add
mov
xor
cmpsb
xchg
or
int3
sbb
jle
or
fsubrs
jge
scas
sbb
add
pushf
or
call
not
stos
out
mov
sbbl
daa
mov
adc
gs
inc
test
cltd
jae
aaa
cld
imul
push
sbb
pusha
cmp
xor
adc
mov
pop
mov
xchg
xchg
orl
cmpsb
imulb
sbb
xor
addb
xor
aas
pusha
mov
mov
jl
fs
cmp
pop
xor
sub
cmp
popa
pop
mov
inc
xchg
xor
or
aad
repnz
scas
jnp
add
das
pusha
imul
call
adc
jl
add
mov
data16
movb
or
inc
adc
dec
mov
xlat
or
and
cmp
data16
add
push
mov
lock
popf
xchg
mov
loope
into
inc
and
push
xchg
repnz
andb
out
cmp
xchg
and
lcall
push
and
jmp
lods
loope
pop
dec
and
xchg
lahf
cs
push
fmuls
rorl
mov
sub
lods
jg
ds
mov
jnp
adc
add
mov
ror
enter
dec
pop
push
addb
test
dec
stos
sbb
xor
sub
pop
subb
sti
push
dec
js
nop
cmp
push
insl
add
cmp
xorb
outsl
fdivl
mov
in
mov
jle
iret
cli
movsb
or
les
call
mov
out
aam
xchg
inc
add
call
push
lock
inc
and
add
xor
inc
call
push
out
mul
movsl
xchg
lods
jne
das
add
lock
movb
jns
sub
and
stos
jecxz
scas
mov
mov
lahf
subb
popa
out
and
enter
lods
popf
icebp
cmp
mov
cmp
mov
dec
scas
jns
cmp
roll
inc
gs
add
aad
and
daa
adc
or
adcl
and
or
sub
or
cmp
cmp
mov
daa
push
xor
add
adc
xor
mov
add
jb
and
jecxz
out
in
push
enter
test
icebp
jae
add
cmp
lods
cs
fwait
movsb
and
ja
xor
pop
mull
shrl
leave
loop
mov
or
sbb
shrb
out
jns
jle
sahf
pop
jle
cmp
xchg
sub
pusha
mov
testb
in
push
cmp
leave
add
xchg
scas
jle
add
mov
sbb
mov
out
xor
rcrb
scas
and
iret
mov
xchg
inc
ljmp
loopne
in
in
sub
pushf
sub
dec
sub
dec
adc
shl
cmpsl
push
or
lods
jne
push
add
jbe
movsb
jo
sbb
mov
cmp
sti
xchg
lods
sbb
or
fistpll
hlt
fsubrl
add
aad
jns
or
sti
cmp
dec
mov
cwtl
mov
cmp
add
xor
cmp
ljmp
arpl
sbb
repnz
sub
xchg
pushf
push
sti
lock
mov
add
or
sub
inc
mov
push
int3
sarb
fwait
cmp
psubusw
xor
dec
dec
addr16
bound
add
aaa
xchg
fstl
mov
xchg
mov
popf
xchg
hlt
dec
mov
aaa
movsb
inc
pop
push
adc
cmc
out
cltd
aad
rolb
lret
call
enter
and
testb
mov
popf
push
ss
mov
adc
or
xchg
push
xor
js
ss
adc
pop
adc
add
inc
xchg
and
fcoms
pop
xor
stos
push
jae
sbb
lret
aam
in
movsl
xchg
rorl
mov
jg
mov
jno
pop
and
jmp
mov
and
add
dec
sbb
dec
sub
adc
neg
or
mov
cld
jge
xor
add
sete
shrb
in
std
add
pusha
pop
scas
mulb
sub
imul
cwtl
outsb
mov
adc
stos
aad
jo
in
sub
mov
repz
add
add
add
add
jo
lods
dec
insl
or
jp
adc
mov
xchg
xchg
adc
sub
nop
icebp
in
repnz
or
push
xchg
cwtl
ret
xlat
shld
jns
pop
cld
mov
add
gs
cwtl
xor
adc
pushf
enter
mov
int
add
stos
sub
xlat
test
sbb
je
mov
enter
mov
cmp
add
xchg
lcall
xlat
adc
pop
jo
or
jl
je
add
jno
pop
insl
xor
cmp
cmp
lret
dec
sbbb
popa
jns
push
add
lcall
xor
xchg
or
add
mov
lods
adc
notb
cmpsb
mov
inc
add
mov
jge
add
jp
in
jecxz
hlt
jl
mov
loop
imul
or
and
loopne
cli
and
inc
jmp
or
movsl
out
add
stos
xchg
aad
push
addl
xor
and
loopne
ja
sub
fisubl
or
push
pop
ret
and
pusha
mov
pmaddwd
add
ljmp
mov
jmp
and
xchg
fldcw
cmc
mov
add
xor
jno
das
aam
andb
push
jge
push
xchg
mov
fnstenv
and
fcompl
mov
add
sbb
ljmp
xchg
daa
js
cmc
rcr
push
pop
pusha
mov
inc
jl
in
and
scas
cmpsl
test
adc
test
push
pop
mov
or
in
addl
and
mov
idivl
shll
femms
mov
decl
imul
lret
dec
in
or
xchg
out
sahf
das
pushf
lahf
mov
add
outsb
arpl
push
outsl
sbb
add
leave
xchg
rolb
cli
cs
int3
cmpsl
mov
jo
and
das
pop
and
into
sbb
sub
repz
sub
nop
daa
arpl
jb
scas
sbb
ret
mov
stos
clc
movsl
nop
push
jg
stos
mov
aas
mov
sbb
add
jne
in
pop
inc
dec
and
add
and
sahf
or
jg
aad
cli
sbbb
inc
add
and
add
mov
idivl
mov
subl
and
sbb
lods
mov
or
mov
sub
jne
pop
and
push
adc
adc
cmovl
add
push
stos
add
fidivl
jo
or
cmpsl
pop
sub
xchg
add
iretw
cmp
mov
ficomps
lret
push
pop
addb
inc
arpl
mov
push
fs
cmp
sbbb
jae
push
add
pop
mov
pusha
or
xchg
inc
pop
push
cwtl
in
add
adc
std
or
mov
sbb
xor
add
stos
out
mov
mov
aas
mul
scas
bound
add
pusha
cmp
ret
xchg
pusha
jnp
xor
or
lds
int3
add
jp
add
push
loope
movsl
xor
lret
int
iret
imul
xchg
dec
into
cwtl
out
cmp
btr
addr16
es
add
pop
mov
lcall
push
shrb
sbb
shrl
xchg
test
je
sbb
or
fcoms
pop
loop
ret
ljmp
gs
mov
sti
arpl
insb
inc
mov
xor
cmc
mov
push
xorl
mov
pop
or
popl
cmc
mov
lods
cltd
fs
orl
or
ja
call
mov
jnp
add
hlt
xchg
xlat
xor
cmp
mov
inc
add
jmp
xorb
clc
popl
rolb
dec
adc
fsubr
lds
mov
xor
sbb
jmp
dec
jecxz
movsl
mov
shlb
mov
push
divl
inc
mov
lret
add
pop
push
xchg
and
or
cmp
pushf
inc
movsb
xor
cmp
imul
mov
xor
mov
fdivr
mov
sbb
ror
inc
cmp
jbe
or
cmpsb
jmp
rcrl
mov
cmp
dec
mov
add
stos
push
inc
xchg
mov
sub
inc
dec
gs
and
lcall
lea
scas
cmp
imul
sub
add
jecxz
cs
add
or
cmp
ds
pusha
jns
add
pop
arpl
test
jb
xor
or
or
imul
add
aaa
lcall
mov
xchg
push
rcll
mov
shlb
es
je
cmpsb
and
jmp
push
push
mov
mov
push
adc
sbb
dec
outsb
pop
and
add
push
jecxz
mov
sub
push
sbb
dec
add
add
xchg
jl
add
xor
push
sub
int3
add
icebp
adc
pop
sub
popa
outsb
nop
push
push
adc
mov
cs
lcall
or
enter
ret
int3
pusha
jl
fadds
movsb
sti
cmp
fsts
add
xor
ja
and
jb
sahf
xchg
add
lcall
and
xchg
mov
add
lock
loope
add
dec
outsb
movsb
nop
lock
js
rorl
adc
rcrb
arpl
test
sbbb
testl
xchg
jg
bound
lret
clc
aaa
cmp
lods
je
mov
rolb
sub
mov
xor
ret
out
xchg
xchg
addb
loope
add
call
push
mov
shlb
push
add
dec
push
xchg
aam
add
and
cli
movsl
add
pop
shrl
addl
cmpsl
mov
jecxz
cmp
insb
lret
sahf
repz
jg
jae
dec
add
addr16
addl
movsl
outsl
add
add
xchg
rorl
adc
fwait
sub
mov
mov
cltd
clc
test
hlt
mov
popf
sub
mov
push
insl
enter
pop
add
outsb
mov
loope
jmp
adc
repnz
push
mov
push
imull
mov
mov
cmc
fisubrs
lahf
jle
stc
ja
mov
add
push
daa
stos
test
out
sbb
fldt
pop
add
xor
pushf
jbe
xor
xchg
pop
lret
mov
push
outsb
xor
pop
and
loop
xchg
cld
lea
cmc
fistpll
icebp
add
fsubs
pop
xor
in
add
xchg
ret
lret
pushf
lods
or
sub
sbb
into
inc
cwtl
mov
out
xchg
add
in
enter
loopne
xor
push
fs
sbb
out
lock
insb
call
movl
mov
xor
jge
xchg
jno
dec
jp
rclb
dec
je
shrb
add
or
cmp
inc
ss
xchg
daa
cmc
or
sarb
test
jns
arpl
cmpl
sub
sbb
sbb
arpl
dec
add
mov
hlt
addr16
jecxz
inc
add
sar
sbb
fisubl
clc
inc
jge
or
clc
pop
mov
stos
mov
bnd
pop
pop
add
xlat
hlt
jge
or
mov
test
and
aas
xor
mov
jge
mov
incb
lods
mov
test
adc
jno
cmp
test
add
cltd
xchg
sbb
add
xchg
adc
inc
iret
sti
add
dec
imul
fnstsw
sub
jns
into
in
and
push
jb
orb
push
add
xchg
cld
negl
xor
sbb
or
popa
dec
adcl
sahf
push
inc
pop
xchg
pop
mov
inc
inc
inc
xor
bound
xor
stc
setb
test
mov
out
pop
scas
mov
ret
ja
pop
cmp
pop
mov
andb
sbb
je
nop
cmp
inc
inc
or
jne
jo
push
pop
jg
out
dec
shl
sub
pusha
jge
inc
pop
subl
repz
or
aaa
leave
andb
jb
ficompl
pop
dec
rorb
xor
mov
fdivs
dec
stos
inc
add
js
das
push
imul
or
cmp
ret
dec
aam
inc
cltd
jbe
aas
lcall
lret
push
xchg
ret
jnp
test
adc
aam
icebp
push
in
cmpsb
das
sub
inc
mov
in
lcall
popa
sahf
cli
ljmp
xchg
pusha
inc
or
add
or
mov
and
lret
or
adc
pop
or
mov
add
fildll
pop
cwtl
jge
cwtl
jne
repnz
shl
fdivl
or
lods
pop
mov
adc
cmpsl
jl
inc
xchg
rcrb
push
cmp
sarl
add
mov
jo
xlat
repnz
mov
mov
adc
dec
ret
repz
fadds
pop
dec
cmp
outsl
add
cs
je
cmp
in
and
pop
or
out
mov
int3
adc
mov
xchg
sbb
or
sbb
shll
pop
and
sahf
mov
stos
sub
orl
das
lods
fsubp
scas
and
in
fidivrl
xchg
jg
leave
jnp
jo
mov
jmp
mov
rsqrtps
cwtl
mov
jo
jg
mov
inc
or
lock
cmpsl
icebp
and
inc
or
popf
dec
push
cld
pop
out
lcall
add
mov
stc
sub
call
pusha
das
cmp
arpl
clc
add
lods
into
in
fadds
stc
cmpsl
add
mov
mov
pop
jmp
std
sbb
dec
push
aas
mov
subb
das
mov
dec
or
lahf
inc
mov
xchg
pop
dec
dec
mov
adc
cmp
shrb
inc
test
das
pop
add
xor
push
xor
dec
leave
iret
pop
mov
sbb
or
adc
mov
and
in
fisubrs
lock
outsl
mov
add
ret
stc
mov
fsubl
inc
pop
insl
pop
xorb
sbb
jb
jns
add
dec
lahf
repnz
xor
pop
je
mov
sarb
and
and
mov
imul
pop
daa
xchg
sti
inc
adc
pop
into
add
lcall
movl
dec
xchg
add
mov
add
cmp
add
add
sub
clc
cmp
into
push
movsb
daa
pop
stos
add
sbb
jb
dec
adc
imul
js
adc
xor
pop
sbb
jmp
and
lret
fs
xchg
adc
orb
lock
roll
popf
decb
xor
test
out
inc
mov
mov
mov
xchg
sbb
sbb
jmp
test
lods
add
in
in
call
push
mov
add
jge
call
and
shrb
and
dec
decl
mov
xor
dec
stos
mov
pop
xchg
addb
and
int
pop
mov
add
js
or
arpl
cltd
test
adc
sub
jne
mov
pop
daa
xchg
mov
push
mov
dec
push
mov
xchg
enter
inc
cmpl
push
push
inc
pop
aas
sti
push
pop
add
fld
loope
inc
sub
sahf
mov
aas
and
inc
dec
pushf
inc
and
addl
test
repnz
lret
pop
push
das
pop
cmp
pop
dec
jmp
frstor
xchg
mov
sarb
adc
jbe
ds
mov
insl
xchg
push
xor
push
sbb
jg
add
ret
push
sarl
idivb
add
lea
jle
fcompl
mov
lea
dec
stos
lcall
aad
pop
loopne
sub
iret
rcrl
push
pop
ss
rcl
add
lock
mov
mov
or
sbb
mov
add
mov
xchg
js
mov
jmp
sbb
adc
mov
jns
icebp
cmp
sti
pop
pushl
jmp
fwait
mov
imul
xchg
pop
sbb
dec
mov
pop
lahf
push
nop
out
mov
aas
jmp
add
rorb
inc
andb
test
rclb
push
mov
cli
jg
add
dec
incb
xchg
decl
lds
inc
xor
movsl
stc
xor
pusha
and
in
push
std
loope
pop
push
pop
mov
test
es
xor
insl
cmpps
int3
outsl
sbb
mov
in
adc
sub
sub
xor
xchg
xor
lock
in
sbbb
xor
push
lock
or
sbbl
inc
mov
sub
enter
push
test
sti
pop
or
jbe
xchg
js
add
js
mov
or
cld
hlt
mov
ret
jl
cwtl
mov
jbe,pt
cmp
add
xchg
add
sub
std
add
inc
sbb
push
inc
mov
es
add
mov
or
mov
mov
add
pop
outsl
sbb
sub
int3
out
mov
sbbb
mov
pusha
fsub
and
xchg
ret
mov
cwtl
xor
mov
js
adc
sub
xchg
sub
dec
pop
mov
sar
lea
jnp
pop
add
lret
stos
cmp
xor
mov
arpl
add
addr16
popa
inc
xchg
add
jmp
aaa
movq
lock
or
inc
addr16
pop
sbb
insl
jge
add
sub
inc
mov
addr16
push
mov
push
ficoml
and
mov
add
call
ljmp
dec
cmp
sub
push
mov
cwtl
popa
inc
add
adc
cmc
push
bound
mov
sti
and
loop
pop
add
sbb
jae
sub
jmp
and
insl
imul
push
fadds
ds
call
xchg
rcrb
hlt
sbb
add
pop
jae
sub
add
jne
push
loope
imul
and
push
insl
ss
pusha
hlt
outsb
andb
and
adc
xlat
fstpl
insb
repz
testb
xchg
jae
int
inc
sbb
sti
or
and
in
pusha
cmp
xchg
test
pop
dec
bound
add
orl
xchg
mov
and
xchg
jne
popf
sbb
adc
pushaw
nop
pop
lahf
shll
aad
push
jnp
dec
test
dec
flds
jbe
and
sbbl
mov
adc
in
pop
xchg
inc
inc
stos
mov
andb
fwait
mov
or
inc
pusha
push
adc
jecxz
gs
pop
add
add
push
and
xchg
loopne
push
sti
pop
shll
add
mov
int
xlat
out
mov
mov
xchg
dec
loopne
or
or
and
dec
pop
dec
adc
cmp
fldl
mov
push
add
and
imul
add
xchg
clc
xor
outsl
push
push
push
jmp
pop
std
loopne
push
pop
nop
xor
add
xchg
fdivrs
push
divb
pop
jno
lods
mov
mov
adcb
inc
imul
cli
pop
add
shll
subb
lea
iret
push
or
sub
lret
add
lcall
add
and
nop
adc
add
ret
inc
test
out
add
leave
add
or
add
pop
repz
nop
inc
lock
fistpll
or
jb
int
lcall
popf
dec
pop
mov
pop
mov
add
lcall
push
outsb
dec
shll
mov
push
mov
add
mov
in
mov
or
add
jns
mov
ficompl
inc
in
mov
add
pop
and
addl
cmp
jne
push
out
jge
and
add
mov
and
int3
add
jge
rorl
daa
out
add
in
push
mov
mov
push
in
loopne
cmpb
call
add
ss
adc
jno
or
jns
push
jnp
add
sbb
jg
adc
jne
add
sbbl
dec
mov
imul
xchg
push
inc
rcr
add
into
sub
add
inc
fadds
stc
push
hlt
out
sub
jne
mov
imul
add
inc
dec
push
addr16
fnsave
add
adc
mov
add
sti
and
mul
mov
pop
and
loopne
dec
gs
adc
movsl
imul
push
add
ret
pop
dec
lock
push
movsb
clc
repz
cmp
push
and
mov
add
ret
jae
nop
fimull
bound
lahf
inc
xchg
mov
add
shr
testb
push
add
push
xchg
push
cs
in
sub
cmp
add
daa
subb
movsl
in
inc
push
fs
stos
adc
mov
fsubrp
cmp
fadds
inc
xchg
mov
or
mov
in
mov
add
insb
mov
xchg
cwtl
adc
mov
sub
clc
mov
clc
pusha
xchg
pop
call
add
and
or
dec
xchg
mov
pop
cmp
cmp
imul
test
divb
jle
mov
lods
sbb
stos
fcoms
pop
cmp
xchg
shlb
imul
fisubrl
filds
mov
int3
sar
add
push
sub
roll
and
or
add
inc
mov
add
shrb
add
jl
lcall
adc
mov
inc
lret
or
xchg
movaps
xchg
cmp
mov
xchg
hlt
imul
sub
adc
pop
mov
sti
xor
xor
adc
cmp
add
pop
addr16
out
sarb
aad
ret
cmc
pop
xchg
mov
mov
adc
push
xchg
mov
add
and
jmp
dec
jl
cmpb
cwtl
xchg
mov
loope,pn
fcomi
nop
sub
fiadds
jbe
popf
push
inc
test
out
es
adc
add
imul
pusha
mov
and
adc
pop
sbb
mov
jle
ds
cltd
add
xor
aam
cmp
mov
and
fs
loope
sbb
add
xchg
lahf
cmpsl
inc
push
jo
mov
xor
add
cmp
add
mov
jo
jmp
es
cld
hlt
les
adc
sub
sub
jmp
or
xor
sbb
dec
sbbl
add
mov
add
out
das
push
add
or
ds
rol
loope
int
add
repz
fildll
jmp
or
jl
add
sub
mov
xchg
insb
lods
and
push
add
mov
and
cmp
loope
lret
cmp
call
mov
ficomps
push
mov
mov
add
xchg
movsb
sbb
lds
mov
lods
inc
inc
dec
jg
push
add
add
mov
rorb
mov
xchg
add
sbb
add
jl,pt
push
ficompl
fstpl
pusha
loopne
dec
popa
sub
push
nop
clc
test
js
cmp
xlat
cwtl
enter
sbbl
add
call
rolb
lret
sbb
pop
pusha
sbb
mov
adc
pavgw
sub
mov
int3
sahf
mov
hlt
mov
lods
add
in
jg
cs
pop
add
pop
lods
add
inc
pusha
jne
add
pop
lret
adc
push
stos
mov
jb
add
dec
xchg
and
and
dec
mov
xor
icebp
flds
mov
test
mov
aas
add
pop
jno
call
add
pop
or
maskmovq
negl
xchg
ja
dec
int
ds
or
insl
sti
dec
mov
mov
sbb
add
inc
xchg
mov
cmp
xchg
push
subl
cwtl
outsb
push
or
data16
and
lods
iret
dec
inc
imul
adcl
jp
jns
outsl
pop
or
adc
rorb
add
cli
roll
cmp
mov
add
stos
rcll
int3
fucomi
mov
adc
push
outsb
subl
inc
mov
mov
sbb
inc
and
lock
mov
sahf
or
cmpsb
cli
sarb
sbb
add
rorl
mov
dec
icebp
cmp
jo
rclb
in
add
mov
jno
pusha
fmuls
dec
mov
arpl
add
inc
pushf
mov
jno
adc
insl
call
add
jp
mov
and
pop
jb
fiaddl
popf
mov
nop
and
cmc
pop
cmpsl
das
out
add
imul
sub
adc
jmp
mov
in
les
shll
pop
sbb
sbb
inc
mov
insb
mov
mov
popf
xor
cmpb
inc
push
inc
aam
mov
pop
rolb
int
sub
pop
testl
xchg
cli
add
mov
frndint
push
add
jge
mov
jmp
adc
sub
push
bound
jb
scas
enterw
push
jae
mov
dec
test
cwtl
sbb
xor
sti
xor
sub
mov
jo
mov
test
clc
loop
adc
xchg
add
cwtl
clc
inc
sbb
sub
lods
popf
add
or
shl
adc
add
les
push
cmp
insb
add
sub
je
or
mov
push
pop
enter
xchg
sub
lds
enter
add
lret
stc
mov
inc
call
fisttps
add
adc
scas
bound
fstps
in
ds
shr
xor
add
leave
test
subl
push
in
dec
lea
aas
pop
xor
adc
jle,pt
outsb
jecxz
mov
aas
add
mov
jl
fdivp
dec
xor
lahf
scas
popf
mov
add
or
jg
fcmove
adc
push
pusha
cmp
add
dec
ja
mov
enter
push
fistpl
sar
xorl
xor
out
push
or
mov
fiaddl
push
jns
jle
add
insl
in
add
jg
push
repnz
sub
shlb
pushf
iret
add
adc
sbb
lods
jge
or
pusha
pop
add
sbb
fwait
inc
push
jbe
ja
or
xor
sbb
das
lcall
adc
pop
pop
xchg
adcl
sbbb
aas
movsl
add
jecxz
and
add
adc
mov
mov
lods
in
xchg
loopne
or
out
inc
adcb
xor
add
pop
shll
enter
dec
sbb
fisubl
adc
pop
dec
sbb
push
outsb
or
sbb
add
adc
pusha
setl
or
lahf
mov
inc
loopne
popa
jecxz
inc
jl
add
jnp
add
sbbb
scas
shl
pop
push
decb
int
loopne
xchg
cmpsb
mov
fnstcw
cld
mov
add
imul
or
mov
push
sub
mov
pop
push
sbb
inc
xchg
int
aaa
sarl
cli
cmp
leave
add
jge
lret
ret
jp
pop
mov
call
rcl
leave
xchg
aaa
mov
out
or
lea
shll
icebp
stos
jbe
jo
test
scas
lcall
add
mov
mov
pop
jl
call
dec
test
add
or
jbe
jne
cmp
add
or
cmp
aas
or
lock
addr16
inc
push
jp
aaa
sbb
mov
daa
jg
mov
je
add
or
adc
sti
adc
push
cmp
add
int3
fisttpll
lret
sbb
jnp
enter
xchg
lds
fiadds
ja
xchg
hlt
filds
push
arpl
es
add
stos
push
lock
dec
xchg
xorb
test
movsb
ret
lock
inc
roll
add
inc
mov
movb
andb
cmp
push
andl
sub
xorb
scas
adc
sbb
fs
in
sub
clc
add
sbb
xor
sub
mov
add
add
dec
pop
or
fsts
shlb
mov
in
jle
add
jo
sar
aam
xor
adc
iret
sub
add
outsb
mov
cld
xchg
in
jnp
pop
lock
ret
jne
xchg
inc
pop
out
sbb
into
xchg
add
lds
cmp
dec
js
and
dec
sbb
xor
adc
push
or
data16
push
or
cmp
lds
jecxz
pushf
xor
and
push
add
ret
inc
fidivl
outsl
imul
ret
aam
adc
jmp
xchg
push
adc
mov
or
fcmovne
add
sub
push
push
dec
aad
add
dec
in
je
inc
mov
mov
and
jge
xchg
hlt
add
mov
xchg
add
fmuls
adc
sbb
nop
hlt
out
ljmp
add
push
lret
cmp
xchg
ret
or
add
les
xor
add
test
leave
roll
sbb
lods
pop
add
pop
xchg
cmp
add
dec
movsl
lahf
xlat
ja
add
outsl
mov
sbbb
fistl
or
in
cwtl
or
xchg
add
loope
divb
sar
outsb
cld
and
add
int3
xor
sbb
cmp
inc
enter
add
test
sahf
jb
pop
jbe
sbb
cmp
and
xchg
andnps
cwtl
dec
rclb
imul
icebp
add
mov
xor
addl
enter
add
out
cmp
cmc
push
rol
mov
aam
jge
jnp
xchg
and
or
popl
cmpsb
les
insb
push
push
out
gs
sbb
mov
add
pop
xchg
jmp
ja
add
pop
sub
nop
xor
pop
or
lods
imul
int3
adc
mov
lods
cld
add
add
enter
sub
add
inc
and
roll
xor
lret
lret
add
fiaddl
stos
js
psllq
scas
inc
daa
adc
call
rclb
nop
dec
add
jo
jns
nop
rorb
sbb
adc
enter
cmpsb
add
mov
call
pop
jecxz
xor
dec
adc
inc
das
insb
ljmp
pop
popa
bound
sbb
pusha
mov
or
int3
mov
mov
add
iret
ljmp
inc
test
filds
sbb
mov
ss
shll
jbe
push
cld
mov
add
sti
adc
adc
adc
push
cld
fcmovnbe
incl
and
adc
mov
cltd
sub
push
add
outsl
pop
int3
mov
pop
sbb
dec
jl
add
cmpsl
xor
cmp
lock
out
loopne
mov
test
andb
or
aam
pop
pop
nop
or
test
add
mov
jno
std
adcl
sbb
push
cmc
ret
imul
inc
andl
popa
mov
iret
cmp
out
inc
js
stc
or
cmp
loopne
movsl
push
pop
dec
inc
hlt
test
mov
imul
mov
cmpb
outsl
aad
add
fistpll
adc
add
jns
mov
cmc
ja
pusha
add
test
loop
add
mov
pop
stos
lcall
loop
and
xor
stc
cltd
das
push
push
in
mov
mov
or
push
adc
dec
andb
add
outsb
lock
in
and
rcr
push
inc
outsl
jnp
and
ss
jl
sbb
insb
subb
sbb
dec
in
insb
jnp
into
lds
popa
imul
call
dec
dec
jo
mov
sub
adc
jle
and
push
loop
add
pop
adc
andb
pop
add
mov
lgs
inc
mov
insb
cli
aaa
add
cmc
xor
lcall
inc
dec
shlb
xchg
shlb
test
push
insl
xor
pop
arpl
xlat
jg
fbstp
ss
mov
push
or
shr
and
jge
add
test
add
xchg
dec
add
sbb
inc
add
aas
in
sub
sbb
movsb
or
xchg
and
les
or
subb
in
mov
mov
push
stc
dec
scas
shlb
adc
or
push
mov
lahf
adc
ja
int3
dec
fs
cmc
jmp
lods
cmp
ja
aad
sub
push
out
ja
cmp
outsl
push
xchg
xlat
insl
insb
add
cmpsb
rolb
cmp
push
loop
std
rcrb
aad
scas
clc
add
dec
imul
inc
cwtl
pusha
xchg
adc
shll
xor
add
mov
mov
shrl
xor
mov
pop
mov
xchg
sbb
scas
mov
arpl
aad
mov
mov
test
fiadds
adc
or
mov
adc
sti
mov
sub
xor
adc
inc
cmp
jge
add
test
dec
addb
cmp
pop
int
mov
out
mov
dec
out
xchg
inc
add
into
push
mov
dec
lock
mov
daa
icebp
jmp
and
ror
mov
pop
jae
add
dec
xor
or
cmp
add
loop
pop
leave
rol
mov
imul
xchg
ret
cmp
ss
enter
imul
or
fldenv
xor
aaa
xchg
xchg
shlb
add
outsb
and
xor
fmuls
add
pop
xchg
adc
sbb
into
xchg
mov
add
sarb
jmp
and
shlb
adc
sbb
add
ljmp
je
mov
icebp
xor
inc
ja
lods
int
repnz
add
pusha
icebp
leave
add
dec
xchg
sbb
push
jl
jmp
add
jge
mov
into
mov
pushf
sub
add
push
dec
sub
repnz
adcb
inc
adc
push
add
xor
xchg
es
add
lea
iret
add
shlb
popa
mov
outsl
add
lret
cmp
push
cmp
imul
or
mov
outsl
cmp
sbb
sbb
cld
adc
ss
pop
mov
shld
sub
xor
pop
orb
mov
lcall
mov
jb
loop
divb
add
jbe
enter
cld
inc
bsr
fstps
adc
mov
cmp
lods
cmp
pop
add
mov
sbb
add
faddp
dec
cs
cmp
mov
add
stos
mov
or
fstpt
mov
es
pop
add
shl
rcrl
sub
add
lahf
jne
in
outsb
and
or
dec
mov
inc
ljmp
or
aam
arpl
push
add
fstl
clc
fiaddl
pop
xlat
inc
pop
testb
add
je
addb
jp
and
and
rcl
int3
push
ret
shrb
add
jmp
inc
les
vpaddb
add
pop
cmpsl
shlb
push
xorl
hlt
mov
xchg
lret
mov
mov
scas
in
xor
ja
add
adcb
test
xchg
add
adc
je
ss
stos
inc
rol
es
add
push
push
pusha
xor
add
push
cmpsl
or
inc
mov
scas
sub
inc
jo
add
cmp
sbb
push
pop
or
lock
gs
add
mov
mov
add
dec
mov
pop
cmp
mov
add
sti
mov
lock
xor
les
ror
pop
or
inc
pop
inc
and
loope
or
rcl
bound
pop
cmovg
jecxz
add
fsubl
cmc
sbb
test
inc
push
adc
nop
and
push
les
icebp
movsl
xlat
out
add
or
push
xchg
jmp
mov
sub
push
cld
mov
add
mov
subl
ret
das
and
pop
mov
jo
jne
mov
repnz
sub
in
cld
add
inc
or
outsb
mov
es
jmp
aad
mov
dec
add
xor
ret
sahf
mov
add
fs
sbb
pushf
push
add
dec
sti
lods
sub
out
or
adc
in
movsl
lock
into
loop
rclb
add
cli
cltd
out
sarl
into
pop
xchg
call
push
fstps
cmp
sbb
mov
add
push
sbb
je
push
rcrb
pop
push
std
out
data16
mov
pop
daa
add
mov
clc
and
mov
fmull
jne
dec
stos
shrl
addb
pop
in
movsb
mov
leave
mov
loop
cwtl
add
inc
mov
and
xlat
add
xor
lea
xor
sub
jno
mov
lods
fs
pop
shll
fwait
add
aaa
arpl
xchg
addr16
ret
sub
push
icebp
aas
and
fcoms
cltd
loop
and
lret
clc
jns
cmp
roll
dec
pop
mov
add
aas
clc
cmp
andb
mov
push
out
add
fmull
push
pop
xor
stc
enter
add
ffreep
lds
rcl
movsb
lods
sahf
faddl
and
add
xor
imul
imul
push
sahf
jns
rcr
inc
testb
xlat
insl
mov
push
xor
mov
aas
add
stos
inc
jo
lret
push
xchg
inc
xor
dec
pop
cwtl
add
or
sub
lods
push
shrb
pusha
mov
mov
jp
inc
daa
adc
sub
int3
add
push
mov
jns
mov
jg
or
movsb
lock
enter
mov
pop
cmc
inc
pop
cld
mov
bound
jecxz
push
inc
test
lock
adc
test
push
mov
push
sbbl
sbbl
sub
ljmp
dec
sbb
popa
int3
test
pop
cld
mov
and
inc
and
data16
hlt
inc
mov
add
adc
sub
add
push
jb
es
or
sub
add
and
mov
inc
lds
sub
mov
sbbl
sti
cmp
inc
sbb
cmp
aad
lds
pop
movsb
add
callw
xor
inc
and
mov
out
cld
rorl
pop
add
xor
popf
pop
loopne
push
cli
je
nop
mov
push
loop
daa
dec
pop
cmp
add
mov
pushf
jae
lods
lea
popf
iret
adc
xor
mov
lock
in
mov
add
pop
clc
ret
rclb
fs
push
mov
cmpsl
sub
nop
popf
roll
push
pop
add
ss
cmp
or
in
inc
cld
orl
lods
in
pop
xor
adc
add
mov
push
mov
aam
cld
pushf
sar
cmp
dec
aas
dec
adc
xchg
pop
sar
mov
pop
fiadds
and
roll
pop
sbb
test
in
mov
add
int
jg
add
mov
cmc
adc
mov
cld
movsb
cmpsl
and
adc
adc
orb
je,pt
push
out
inc
jmp
dec
stos
push
jg
add
jecxz
and
aaa
pop
fbld
pop
add
xor
sub
mov
xchg
cmp
lods
test
outsl
xchg
jae
sbb
mov
adc
repnz
add
out
jmp
pop
xchg
stos
xor
rcrb
loopne
push
and
pop
movsb
test
sarb
clc
mov
add
inc
arpl
cmp
fdivrl
cmpsb
sbb
xor
pop
mov
sahf
or
lods
popa
add
mov
es
out
sbb
orb
jmp
rolb
xchg
push
cmp
decl
push
repnz
les
sbb
mov
sbb
aas
mov
push
rorl
xor
movsl
or
cmpsb
mov
mov
jge
adc
out
lods
loopne
jg
add
sub
push
push
mov
sbb
sahf
push
mov
lods
push
jg
xchg
add
frstor
and
in
ljmp
jo
jp
cbtw
or
out
mov
ds
pop
pop
add
add
fistpll
sbb
aam
test
fwait
icebp
add
inc
push
mov
loop
test
cmp
loop
add
push
data16
push
push
push
fistps
cmp
add
ja
dec
and
rcrl
mov
loope
inc
inc
enter
test
clc
or
jbe
jmp
xchg
orb
cmc
loop
xchg
lods
pusha
je
sahf
add
inc
xor
sbb
mov
pop
pop
mov
roll
fadds
push
cltd
add
cmp
and
cmc
in
lret
or
xchg
pushf
mov
dec
pop
xchg
mov
andl
ret
cmp
sub
add
mov
add
insl
repnz
mov
stos
dec
push
xchg
push
cmpb
cmc
jecxz
test
push
dec
xchg
inc
movsb
sti
push
ret
mov
dec
and
and
orb
cmp
addl
add
jge
dec
xor
pop
add
rclb
mov
jle
mov
sbb
fs
mov
aam
push
xchg
sub
add
fmul
add
es
xchg
addl
in
jb
jmp
add
xor
dec
mov
push
orl
push
into
cmp
sahf
pop
add
movl
fisttpll
jae
or
mov
xlat
add
int3
int
jne
fwait
adc
outsb
in
xchg
pop
add
xchg
inc
xchg
push
fs
nop
sahf
inc
mov
cmc
jmp
pop
mov
lods
or
lret
mov
lods
push
add
adc
icebp
jecxz
dec
or
push
lea
ja
imul
scas
adc
dec
xor
add
adc
vpinsrw
add
push
cs
cld
subb
in
inc
leave
add
es
push
pop
sub
aas
aaa
negl
push
jae
test
inc
int
push
xor
call
cltd
pop
or
cmpsb
fsubs
push
adc
movsl
repz
imul
add
dec
add
dec
out
mov
outsb
adc
je
std
cmp
jne,pn
sub
addl
repz
adc
lret
faddl
jne
imul
jge
cmp
sbb
test
mov
fsts
or
aad
and
int3
inc
in
aaa
push
fsubrs
add
popf
add
filds
jo
jbe
pop
add
dec
adc
arpl
mov
wbinvd
mov
faddl
pop
jne
cltd
xor
lret
mov
add
fcom
in
shl
mov
fsubrp
fstp
mov
lods
jmp
icebp
and
cmp
clc
pop
inc
sbb
daa
mov
fadd
xor
add
xchg
jns
cs
pop
fnsave
fsubl
into
ja
sbb
inc
mov
adc
shll
and
das
imul
enter
rcl
mov
test
jo
add
mov
js
aam
aaa
xchg
cmpsl
or
lret
je
sbbb
nop
mov
sub
clc
mov
inc
loop
inc
clc
cmp
add
stc
jg
add
repz
inc
cmc
out
mov
shrb
cmp
mov
cmpsl
and
add
push
mov
jbe
sub
mov
int3
nop
nop
xchg
or
dec
into
mov
jne
jae
sub
xchg
shr
adc
je
mov
push
mov
lock
mov
adc
int
add
add
je
mov
andb
and
ffreep
pop
movsb
out
shl
or
arpl
out
fadd
push
adc
jns
dec
das
sub
mov
es
pusha
sub
icebp
in
jge
or
sub
push
iret
mov
sub
mov
pop
mov
mov
push
add
cmc
jo
push
add
or
adc
mov
icebp
test
addr16
push
add
and
add
ret
adc
arpl
cmp
loope
jge
dec
in
jmp
mov
mov
add
pop
add
push
imul
iret
mov
mov
add
sub
data16
add
cld
cmp
xor
cmp
mov
jnp
cmp
testb
int3
repnz
xorb
add
rolb
adc
das
lea
fists
add
add
xchg
ss
loopne
cld
aaa
mov
dec
pusha
pop
fs
test
pusha
dec
mov
lods
jle
add
adc
adc
andnps
jp
insb
pop
jno
add
mov
lds
data16
inc
fldcw
adc
adc
pop
ret
repz
in
aad
dec
add
jle
push
cmp
xor
dec
or
andl
int3
xorb
xchg
add
rcrl
mov
xor
add
nop
pop
inc
sbb
pop
mov
cmp
lods
cmp
rorl
and
fsubs
mov
xchg
rclb
mov
pcmpeqw
cs
dec
pop
orb
push
aam
add
pop
dec
popa
add
lods
test
nop
sbb
cmp
or
adc
push
js
negb
inc
adc
call
sbb
adc
pushf
dec
mov
cmc
jb
xchg
popa
dec
dec
daa
add
in
ret
clc
cmp
es
loope
pop
sti
invlpg
pop
stos
xor
adc
adc
lods
decb
add
mov
aad
test
out
jg
leave
daa
xchg
xor
cli
in
mov
mov
in
xchg
sbb
xchg
xor
stos
adc
add
repnz
mov
mov
sub
loopne
xor
sbb
mov
sbb
loop
or
sbb
shrb
add
dec
gs
add
sahf
push
mov
ja
clc
mov
inc
inc
sbb
call
cmc
test
popa
call
popl
out
xlat
lea
es
js
popf
jmp
adc
mov
add
ror
push
fisubs
incl
adc
in
addb
jbe
rorl
addr16
or
xor
pop
push
fnstenv
push
ss
sbb
in
or
jmp
cli
int
xchg
cmp
test
add
add
cli
dec
cmp
sub
lret
add
sub
test
jl
hlt
sub
fsubs
push
aad
popl
push
xchg
sub
loop
xor
and
adc
xlat
aas
jmp
cld
rolb
cmp
jecxz
jl
add
shrb
call
push
or
add
jle
cli
js
cmp
in
dec
mov
lods
in
add
ret
fistl
in
add
subb
daa
push
dec
sbb
push
incb
pop
cmove
and
je
jg
in
push
stos
dec
xor
add
inc
push
pop
in
inc
add
js
sub
cmp
add
jg
lret
or
sti
inc
and
mov
movsb
dec
xchg
jae
pusha
jne
push
cmp
pop
dec
out
les
inc
shll
dec
int3
dec
mov
mov
add
ret
addl
arpl
lret
test
outsl
testl
fnstenv
add
add
je
xor
add
or
jmp
stc
out
sub
cmp
lock
imul
mov
or
inc
pop
in
pop
xor
sub
push
in
or
sub
cli
mov
fucomp
in
mov
into
add
sbb
add
xor
add
mov
mov
adc
add
dec
clc
movsl
cwtl
and
ret
sub
and
xchg
sbbl
sub
push
pop
aaa
push
mov
js
mov
addl
out
out
pop
mov
dec
ljmp
sbb
outsb
scas
and
icebp
jns
loopne
jno
cmp
add
in
mov
pop
sbb
cmc
int3
add
shlb
and
add
add
xchg
mov
add
cmpsl
imul
or
add
and
cwtl
std
into
add
jo
mov
push
cld
cwtl
inc
jo
jbe
sub
fiaddl
fsubrs
inc
mov
pop
sub
xor
pop
mov
cmpl
adcb
add
dec
imul
inc
push
sbb
dec
cmpl
push
and
test
xchg
add
push
fwait
sub
incb
sbb
pop
or
rolb
shll
mov
add
sbb
push
call
add
mov
mov
pushf
xlat
cwtl
bound
les
xor
hlt
add
punpckhbw
sub
and
add
push
pop
ds
jne
adc
dec
shrl
movsl
mov
or
xchg
js
add
jae
sub
cwtl
fiadds
or
ret
jge
daa
mov
dec
cmpsb
sbb
rcl
out
popa
add
jge
aad
in
push
lods
adc
hlt
mov
dec
sarl
mov
bound
in
jg
and
inc
mov
add
fstpt
rdtsc
imul
mov
popa
shlb
popa
stc
push
mov
loope
sub
call
or
test
adc
fwait
add
movsl
pop
inc
push
mov
adc
sub
cmpsl
test
inc
fsts
add
cmp
les
clc
inc
mov
push
mov
hlt
pop
lods
pop
or
jno
dec
test
and
pushf
add
adc
push
call
dec
cli
sbb
lret
pusha
loopne
push
loope
sahf
arpl
push
xor
mov
aam
int3
loop
loope
sub
sti
leave
and
sub
fdivrl
push
cs
lret
mov
push
add
out
jnp
jl
push
add
pop
cmc
scas
nop
arpl
movsb
pop
test
lods
xor
aaa
push
add
mov
cmc
xchg
mov
loopne
test
daa
sbb
shrl
scas
lcall
cmp
pop
ja
xchg
push
cmp
cmp
popa
add
repnz
pop
ret
clc
cmp
pop
mov
dec
aad
cmp
cs
fisubrl
cmp
movlhps
xchg
dec
and
xchg
adc
mov
add
or
int
add
add
popf
popa
hlt
mov
pop
xchg
daa
rolb
xor
out
sar
xchg
pop
or
lret
test
add
inc
xor
sbb
sar
pop
mov
addl
repnz
inc
or
push
int3
cltd
push
adc
jb
jle
pop
loopne
lret
adc
js
and
test
subb
and
cmp
cld
fs
imul
cmp
loope
jbe
sbb
and
and
cmp
push
mov
xor
movsl
add
add
iret
jmp
adc
pop
add
xor
lock
pusha
das
outsb
call
push
jecxz
cli
or
adc
orb
inc
aad
mov
out
sbb
ror
dec
sub
cmp
movsl
sbb
fadds
xchg
loope
loopne
inc
pop
cmp
cmp
mov
and
adc
xor
out
bound
scas
inc
sti
nop
enter
loop
pusha
das
push
cmpl
mov
call
in
sbb
mov
pop
mov
adc
and
pushf
add
jnp
lods
push
cmp
clc
sarb
in
fmul
das
cmc
in
pop
sahf
mov
fbld
ja
loopne
arpl
imul
jnp
mov
add
sbb
add
outsl
mov
add
xchg
aam
xor
dec
fcoml
sahf
sbb
dec
in
test
dec
ja
cwtl
addb
fldz
jge
jo
sbb
jle
add
xchg
int
adc
adc
adc
adc
mov
sbb
jb
popf
pop
add
popf
inc
arpl
pop
data16
inc
mov
out
mov
pusha
enter
loop
add
push
mov
add
cmpb
dec
adc
adc
and
fsubrs
dec
cli
jge
add
sarb
dec
gs
and
cmpsb
or
jns
add
mov
pop
int3
mov
sbb
in
inc
out
je,pt
dec
sub
dec
mov
ja
addl
movsl
pop
jno
ret
sbb
cmpl
adc
push
push
dec
shlb
and
sbb
inc
repnz
sbb
sub
cli
mov
sbbb
gs
and
sbb
pop
inc
test
adc
in
or
lcall
inc
and
xor
insl
ret
jl
aad
add
push
pop
ja
mov
add
lcall
lds
pushf
and
inc
mov
fadd
nop
add
lds
jecxz
lret
push
sub
jae,pn
adc
cmpb
sbb
outsb
mov
sbb
dec
add
cmp
sahf
add
imul
add
arpl
addb
xor
cs
jnp
and
adc
jne
aas
pop
xchg
xorb
test
scas
popf
std
push
mov
pusha
loopne
or
subl
loopne
out
add
ret
scas
loop
rcl
in
insb
clc
fnstenv
sbb
inc
test
inc
push
and
jo
in
flds
lcall
out
cld
clc
add
adc
dec
insl
xor
cld
adc
shl
ljmp
leave
bound
or
aad
jle
fsubs
and
cld
pop
add
jae
adc
pop
jb
add
mov
adc
adc
popa
mov
stc
movsb
sbb
call
insb
fisubs
add
gs
sahf
add
jo
sbb
loopne
out
cmp
xor
mov
std
add
test
add
push
movsl
mov
add
ret
pop
inc
and
cmp
push
jb
and
rolb
dec
and
movsl
inc
lds
add
xchg
dec
and
and
stos
aaa
and
jmp
dec
jb
adc
push
add
int3
in
jp
inc
imul
pusha
lret
idivb
add
cmp
les
jge
add
jae
sbb
mov
mov
gs
dec
nop
xor
into
add
cli
add
add
xchg
dec
jge
inc
lods
jo
or
add
xlat
jne
mov
jl
dec
mov
xchg
push
adc
cld
add
test
add
ljmp
jns
add
adc
inc
loope
add
lea
jno
lods
stc
lods
sbb
or
rolb
pop
scas
dec
jle
cli
pop
adc
pop
mov
adc
into
test
les
and
pusha
inc
xchg
and
iret
or
int3
cmpsl
push
mov
xchg
mov
push
add
outsb
loopne
pop
mov
mov
add
mov
adc
scas
movsb
add
test
add
push
sbb
ja
add
stos
jecxz
add
push
lock
xor
adc
push
pop
mov
outsl
fsubrs
in
fisubl
and
cmp
lea
add
or
add
hlt
fistl
jae
lea
mov
loopne
jg
scas
mov
or
movsl
add
or
dec
movsb
arpl
dec
add
fistpl
mov
lret
inc
movsb
xor
test
pop
xlat
adc
pop
std
add
xchg
sub
fsubl
add
nop
push
cmpl
cmp
popf
repz
add
call
in
add
fsubp
or
add
daa
aad
or
and
add
pop
es
cmpb
add
sub
xor
sbb
out
daa
and
rorb
add
sbb
inc
pusha
movsb
add
out
int3
fldenv
ljmp
inc
pop
xor
popf
pop
adc
sbb
mov
imul
pusha
cltd
aas
or
mov
push
hlt
jo
add
jge
inc
pop
in
mov
ds
cmp
add
cli
ljmp
cmpsb
fmulp
test
inc
psrlq
pop
std
lods
into
loopne
lcall
jno
das
jbe
jg
mov
shrl
fwait
scas
cmpsl
jne
rclb
in
ljmp
hlt
ljmp
std
sbb
mov
add
fisttpl
data16
jb
adc
or
int3
mov
sbbl
rclb
mov
push
sbb
push
xor
and
decl
inc
xor
cmp
adc
cmpsb
and
sub
popa
rolb
add
inc
mov
lea
subb
pop
mov
mov
add
popa
cld
sub
push
lcall
jo
loope
inc
roll
or
loopne
sub
add
cmc
add
xor
cwtl
gs
aaa
cmp
mov
ret
push
and
mov
sbb
rcrl
mov
xchg
outsl
outsb
add
popa
insl
jmp
add
xor
cs
test
and
pop
outsb
lods
bound
or
enter
rol
es
in
xor
xorb
sbb
mov
xor
lods
xor
sub
loopne
mov
dec
xlat
lds
cs
and
mov
pop
test
mov
xor
mov
add
leave
es
mov
mov
mov
js
inc
add
add
cwtl
sbb
out
xor
cli
mov
pusha
das
dec
decl
jne
lgs
inc
les
ss
adc
xor
sti
dec
mov
cmc
mov
stos
xor
jmp
sti
jle
add
mov
push
shlb
xor
je
xchg
mov
call
and
cmp
sub
call
ss
aad
add
lahf
add
fisttpl
mov
ja
sbb
fcoms
pop
add
fadds
roll
dec
cld
cmp
xor
add
pop
cld
fnsave
jle
les
or
pop
movl
jbe
jnp
sbb
mov
int
xor
popf
sbb
sbbl
xor
add
fnstsw
flds
push
cmpsl
inc
or
and
adc
add
cwtl
sbb
flds
mov
or
mov
push
inc
es
dec
jo
aad
popf
or
mov
jge
jae
shll
test
aam
pop
shll
xor
and
mul
and
test
push
mov
daa
jo
fwait
dec
inc
add
test
stos
call
adc
ret
push
lea
jmp
adc
add
pop
movsl
dec
pushl
xchg
rolb
inc
cmp
adc
jne
in
sub
ljmp
cwtl
outsl
xchg
push
mov
sbbb
test
push
nop
gs
movsb
add
pop
orw
xchg
dec
add
addl
push
pop
icebp
fildl
xchg
cmp
repz
mov
aas
and
and
push
xor
cld
into
xor
stos
subl
or
add
xchg
cmc
sub
jl
inc
into
shll
sub
xlat
and
ja
pop
jae
fidivl
adc
xchg
outsb
add
push
adc
loopne
add
and
jo
imul
jge
fisubrs
std
cmp
lret
inc
icebp
jnp
or
popa
pushf
stos
pop
add
xchg
idivl
add
repz
stos
add
push
sbb
pop
jns
ljmp
cmp
loop
add
mov
adc
cwtl
sbbb
imul
je
test
mov
and
sbb
cmp
enter
push
js
sbb
add
adc
add
xor
or
push
outsb
inc
or
movsl
dec
xor
cmp
out
add
sub
xchg
or
push
jl
test
cmc
push
jecxz
xchg
dec
out
dec
sub
add
or
addb
pop
sub
ltr
pop
sub
xor
scas
movsl
add
rcrb
shr
push
sub
pop
adc
stc
add
fadd
xchg
jge
add
xchg
jno
ds
out
jle
add
enter
pop
imul
xchg
in
les
out
mov
sti
out
fiadds
loop
out
cld
add
sahf
cwtl
outsb
add
ret
jb
into
pop
lock
ljmp
lods
iret
ret
add
addr16
jbe
outsl
sbb
pusha
in
jmp
xor
fcoml
xlat
enter
pop
jle
mov
and
es
fsubrl
addr16
rcll
mov
scas
add
test
xchg
xchg
mov
sbb
xor
lcall
or
test
jg
xchg
orb
daa
fwait
test
loopne
and
stos
mov
sbb
inc
add
and
adc
jecxz
cmp
dec
jo
stos
or
gs
addl
aas
xchg
jbe
xor
ja
add
xchg
adc
movsl
insl
out
fwait
add
jle
popf
inc
push
add
testl
fisttpll
ret
in
andl
sub
adc
push
ja
repnz
xchg
fcomps
cmp
call
inc
inc
lods
dec
rcrb
mov
sbb
add
jne
cwtl
add
pop
in
mov
add
or
xor
or
cmpb
cld
lret
dec
add
jae
dec
notb
sbb
pop
jne
iret
jb
loope
int
mov
jecxz
hlt
add
imul
test
inc
add
cmpsb
cmp
jo
mov
dec
xchg
cmp
js
enter
cmp
es
movsl
and
mov
cltd
dec
xor
pop
shlb
xorb
faddl
dec
mov
lods
xchg
mov
add
xchg
ret
pop
out
cltd
jns
iret
jae
scas
push
add
cmp
cmp
inc
subb
and
loop
addr16
add
adc
xor
ljmp
mov
jo
jl
sbb
push
mov
xor
sahf
cmpb
ret
cmp
pop
sub
pop
fwait
add
add
mov
arpl
dec
sbb
add
popf
push
pop
call
lds
adc
inc
sub
imul
pop
mov
test
test
stc
jmp
sti
xchg
insl
faddl
or
stos
negl
dec
addl
movl
aas
jbe
cmp
andl
cmp
enter
rclb
add
and
pusha
add
inc
dec
push
enter
pop
repz
loopne
sahf
sbb
jl
jno
mov
mov
sub
push
dec
add
dec
xchg
sub
cltd
mov
cmpsb
lea
push
stos
add
movsb
add
pop
mull
lcall
fldt
or
shr
add
push
test
and
xor
incb
sbb
cmp
xchg
mov
xor
lret
xlat
call
jle
cmp
repz
xor
add
cmp
jb
and
mov
cld
rcl
ss
faddl
dec
mov
add
adc
add
out
jge
mov
adc
ret
ja
ljmp
adc
and
int3
mov
pop
sarl
sbb
das
pop
jb
mov
add
sub
out
and
testl
mov
ds
ja
mov
lods
mov
add
inc
addr16
dec
dec
add
lret
xchg
mov
aaa
inc
lcall
mov
and
inc
sbb
add
push
repnz
push
xor
adc
sbb
add
and
sub
add
insl
pop
jp
aad
inc
sbb
jae
pop
and
inc
pop
sbb
je
sub
mov
ljmp
add
adc
cmpsl
dec
jbe
add
gs
dec
fcmovne
xchg
lret
decl
aaa
jecxz
add
lods
dec
les
jne
and
or
cmpl
repz
jno
mov
push
add
mov
or
dec
pop
push
or
xlat
outsl
js
psrld
add
jle
les
je
jb
test
popa
cmpsb
shl
inc
mov
cwtl
push
gs
or
loopne
loopne
cwtl
xor
mov
add
popa
mov
mov
pop
add
jo
outsl
adc
scas
xor
aad
mov
xor
mov
arpl
pop
lret
and
clc
cs
inc
flds
jp
mov
add
jnp
ss
xchg
lret
out
dec
fisubl
add
icebp
lea
add
in
inc
xchg
test
bound
xchg
andl
lods
addb
mov
lret
rorb
imul
out
clc
or
mov
xchg
in
push
and
add
pop
inc
jmp
icebp
mov
int3
adc
xchg
xchg
lahf
add
pop
jns
out
xchg
jmp
pop
or
xchg
mov
rorb
or
add
ss
icebp
loopne
jo
and
and
pop
push
lret
xchg
addb
movsb
outsl
insb
icebp
jo
mov
mov
pop
test
test
push
les
xchg
add
or
roll
adc
pushf
je
inc
push
cld
fstpt
add
ljmp
cld
push
inc
loopne
pop
aam
fldl
lret
loopne
outsl
cmp
loope
rcrb
or
and
std
mov
mov
les
idivl
adc
mov
pop
sti
andb
cmp
cmc
dec
mov
stos
inc
dec
cld
push
pusha
inc
add
jl
jns
outsl
push
add
not
xor
add
xchg
lahf
push
inc
mov
enter
std
out
adc
dec
pusha
call
add
frstor
adc
sbb
in
mov
cmpsl
or
scas
or
cmp
mov
lods
add
add
cli
inc
push
mov
aad
mov
add
test
add
mov
push
lock
fists
popa
mov
xor
rcr
lock
pop
add
iret
cmp
add
push
push
and
xchg
push
enter
loope
cmp
xor
cld
mov
dec
or
mov
pop
adc
ljmp
jle
inc
add
push
xchg
dec
mov
sub
pushf
mov
push
rclb
shl
or
add
xor
dec
jg
inc
cmp
pop
sbb
test
ljmp
ljmp
dec
test
push
xor
mov
add
dec
lods
add
mov
incb
mov
mov
es
lret
mov
xchg
add
xchg
les
mov
mov
add
into
add
pushl
scas
pop
cmp
and
jge
add
in
inc
push
adc
pop
cwtl
call
loopne
cmp
fiadds
mov
addr16
sbb
add
push
cmp
mov
push
push
sbb
inc
in
leave
loope
test
adc
mov
call
out
loop
mov
sbb
cmp
loopne
lret
add
xchg
mov
push
mov
add
add
hlt
xchg
aad
lods
sbb
add
cld
enter
flds
add
mov
or
sbb
xlat
and
loopne
insl
sbb
lcall
cmp
inc
add
adc
or
ja
loopne
aam
enter
cmp
in
ja
lds
and
jg
adc
ljmp
add
sar
int3
loopne
jl
add
pop
add
sahf
into
mov
lcall
add
xchg
incb
pop
ljmp
insl
mov
push
add
add
xor
pusha
add
pop
mov
movlps
add
add
lods
cmpsb
add
gs
add
dec
enter
insb
mov
sbb
outsb
pop
xchg
hlt
cmp
add
add
add
sub
clc
add
cmc
pushf
fs
cltd
sub
imul
mov
jno
pop
xchg
xlat
das
icebp
shl
or
fadd
xor
add
test
sbb
or
push
xlat
xchg
call
add
cmp
cwtl
xchg
cltd
mov
lret
ret
lock
filds
sub
lahf
adc
mov
in
push
or
and
push
xchg
fstpl
inc
stos
cmpl
leave
xchg
fidivrs
jl
and
pop
inc
fldcw
add
sub
cmp
inc
xor
mov
add
roll
stc
sbb
loop
push
mov
shlb
call
scas
xchg
jne
ja
xor
xor
mov
lahf
sub
je
fistl
stos
cmp
in
jge
divb
ss
jo
push
add
jp
inc
cwtl
bound
lret
loope
int3
popf
inc
rcrl
addr16
movsl
sti
out
push
flds
mov
jno
rolb
or
fwait
inc
js
mov
lahf
jae
or
pop
mov
repz
sbb
cmp
adc
out
andb
arpl
xchg
enter
loop
sub
mov
add
jmp
jbe
add
push
jge
test
pop
clc
mov
adc
adc
jae
add
orb
mov
push
sbb
adc
fsubrs
ret
daa
repnz
sub
xchg
inc
pop
cmpsl
dec
movsl
add
leave
int3
pop
adc
cli
cltd
rolw
repnz
or
dec
stc
xchg
std
or
push
add
cmc
adc
mov
jb
sbb
popl
or
xor
xor
pop
cmpsl
cmp
adc
clc
loope
push
or
fbld
cmp
sub
sub
inc
in
jge
loope
lods
rolb
fcompl
jbe
cs
sbb
pop
push
imul
mov
pushf
sbb
add
jg
inc
sbb
aam
in
inc
push
pop
jecxz
leave
leave
mov
sbb
lds
lea
andb
or
cmp
dec
rolb
cld
movb
add
subb
push
cltd
mov
sub
add
cmp
xchg
and
jo
push
pop
or
in
popa
cmp
add
fisubrl
sarb
cmpsb
dec
mov
loopne
pop
pusha
in
sqrtps
jl
inc
mov
add
mov
ja
pusha
add
loop
add
xor
in
test
add
and
or
nop
or
lods
cld
insl
clc
push
push
mov
adc
push
add
enter
mov
ljmp
imul
rcll
mov
shll
loopne
dec
inc
push
add
inc
mov
pop
or
cmp
dec
xlat
aam
dec
inc
xor
dec
std
sbb
add
mov
mov
fmull
mov
andb
xor
rcrb
cs
adc
xchg
sub
xor
int3
clc
push
add
fsubl
push
es
sub
daa
movsl
sbb
jg
xchg
jnp
and
repz
sub
cltd
jecxz
inc
mov
ss
add
xor
add
adc
repnz
gs
les
addr16
add
rorl
pusha
jb
adc
ja
xchg
or
scas
add
mov
fmuls
imul
daa
xchg
pop
imul
xchg
push
push
xor
jno
stos
clc
rolb
add
mov
fldenv
sbb
into
sub
push
pushf
push
rolb
mov
mov
pusha
call
outsb
stc
xor
dec
movsl
mov
sbb
stos
ror
stos
and
add
mov
jmp
or
popf
call
nop
sbbl
mov
repnz
jbe
pop
fcmovnb
popf
mov
call
fcmove
push
pop
popa
mov
adc
mov
pop
xchg
mov
data16
aad
mov
enter
dec
cmp
xor
push
int3
adc
sarl
fidivrs
sbb
mov
mov
xorl
sbb
gs
inc
pusha
mov
ds
lea
out
dec
mov
sub
test
rolb
ds
or
out
sti
jb
add
sub
inc
loop
cwtl
clc
out
add
adc
das
add
aam
adc
dec
mov
add
xchg
adc
clc
bnd
cmp
sub
out
add
int3
push
cmp
sahf
push
mov
push
or
cmp
cld
lahf
inc
push
jns
mov
lcall
add
lcall
dec
sbb
pop
pusha
mov
test
es
pop
bound
fisubs
mov
sbb
inc
call
push
add
mov
cli
test
repnz
add
sub
inc
pop
add
dec
aaa
add
mov
cmc
mulb
push
add
or
xor
and
adc
push
lock
dec
or
add
cwtl
mov
adc
pop
loop
pop
pop
jne
bound
es
cmpsb
and
daa
sbb
mov
loopne
lock
pusha
push
adc
mov
int3
fidivl
std
sbb
push
mov
shrb
adc
dec
jg
cmp
loopne
mov
ljmp
enter
pop
add
jle
mov
add
lret
lds
stos
add
xor
sbb
dec
jo
lods
mov
jl
in
mov
push
lret
lods
sarl
mov
xor
rorb
enter
rcl
mov
sub
lret
inc
jo
pusha
flds
loopne
jle
pop
or
stos
dec
dec
stc
cmp
repz
jno
mov
sub
sbb
xchg
call
adc
jge
jmp
gs
and
dec
adc
ficoml
mov
mov
adcw
jmp
cmp
xor
dec
pushl
sarl
repnz
cld
fs
pop
in
dec
inc
xchg
popl
test
call
mov
push
sbb
roll
xchg
mov
test
aam
loop
sarl
xor
xchg
push
std
or
ss
add
loope
xchg
fadds
test
mov
leave
rorl
iret
cmpsb
add
or
mov
mov
sbb
adc
fcmovbe
and
add
adc
jp
and
roll
add
dec
loopne
test
pop
and
test
mov
inc
ficoml
enter
fcoml
dec
lret
and
or
scas
or
adc
nop
xor
dec
es
out
call
rorb
inc
inc
inc
movsb
leave
jns
in
jo
add
or
push
es
ljmp
sub
sbb
js
add
dec
or
cmpsl
add
inc
jge
sub
leave
pop
mov
adc
jecxz
popf
roll
stos
inc
cmpb
mov
dec
popl
or
push
xchg
inc
inc
data16
mov
or
inc
hlt
inc
jmp
mov
xor
add
sbb
mov
inc
or
imul
inc
fwait
pop
outsl
fildll
push
mov
jle
xchg
add
mov
push
bnd
insb
lock
jp
popf
and
xchg
sahf
add
pop
dec
std
adc
xchg
loop
stc
and
mov
js
jle
cmp
adc
or
push
das
ljmp
out
icebp
jo
pop
push
adc
mov
sub
xor
mov
test
mov
mov
arpl
nop
cmp
fistps
add
pop
inc
xlat
xor
mov
pop
adc
sahf
push
push
hlt
call
inc
into
mov
in
int3
mov
outsl
add
jae
sbb
xchg
mov
dec
sub
mov
lret
nop
add
dec
xor
js
cmp
test
push
add
test
repz
in
shll
inc
xchg
fdivrl
dec
shl
add
pop
push
sub
pop
hlt
sbb
jecxz
adc
and
pop
je
pop
sbb
fimuls
xchg
mov
add
popf
xor
add
or
cmp
mov
xor
not
inc
cwtl
xchg
adc
lods
sbb
sub
ljmp
call
icebp
js
add
andb
push
add
arpl
outsl
mulb
mov
cmpb
aad
jecxz
cltd
cli
xchg
ja
lret
mov
mov
and
inc
or
pop
adcb
shll
xchg
shlb
cltd
jle
aas
or
mov
jp
push
fadds
outsl
mov
and
add
jmp
cmp
pushf
and
test
pop
fwait
dec
add
pop
mov
sbb
int
call
cmovno
test
outsl
clc
inc
bndldx
popf
les
inc
lcall
movsb
fucomi
pop
mov
aas
test
aam
xchg
fs
xchg
int3
sbb
sarb
mov
inc
and
mov
or
mov
jae,pt
stc
mov
xor
sbbb
in
xchg
and
sti
cwtl
jp
jo
testb
clc
movsl
aam
adc
mov
dec
and
add
mov
lods
rclb
dec
mov
push
andb
mov
push
xor
lcall
cmpsl
loop
popa
lret
enter
lahf
stc
xor
xchg
aad
or
or
xchg
fcom
mov
jno
pop
subb
fs
shll
xchg
pop
cs
ret
jecxz
fisubs
aas
mov
add
pop
fsubs
ds
inc
or
int
sbb
add
repnz
pop
push
leave
iret
cmp
pop
orb
inc
cmp
jo
adc
jmp
dec
enter
jns
push
mov
xorb
sbb
mov
andb
aam
icebp
inc
xor
ret
add
push
xchg
cmp
aam
and
fs
inc
pop
add
dec
push
test
jno
cmp
clc
push
xor
pop
in
mov
ret
adc
add
cwtl
das
repz
or
add
pop
mov
and
cmc
scas
fdiv
pop
js
jns
imul
bnd
cmp
pushf
jbe
ljmp
add
clc
sbb
mov
lahf
popf
cmp
add
aam
out
ficoml
es
jnp
jno
or
dec
or
cmp
or
and
add
scas
inc
sub
into
xorb
sub
lds
in
fcoms
pop
mov
add
jmp
out
add
inc
adcb
xor
lcall
inc
fisubrs
dec
add
cmpsl
and
dec
and
add
shll
addl
lahf
sysret
xchg
aam
add
cld
mov
stos
jecxz
in
pop
add
addb
or
add
out
xor
outsb
sbbb
cmp
je
scas
sub
int
xor
jl
inc
mov
hlt
push
cwtl
jo
add
call
jmp
mov
dec
aad
xchg
jns
add
inc
shlb
xor
cmp
rorb
ret
sahf
mov
cmp
jg
or
repz
addr16
cmp
int
clc
imul
jecxz
mov
enter
mov
mov
mov
or
pusha
fdivrs
add
iret
xchg
xchg
lock
add
inc
push
jecxz
mov
loop
mov
stc
sub
add
add
ja
sbb
mov
mov
imul
mov
sub
xchg
lods
stos
aad
push
pop
sub
inc
pop
or
data16
aam
sub
inc
cmp
and
add
add
sub
mov
test
cmp
push
add
add
out
add
cmpsl
dec
bound
sti
sub
inc
daa
aaa
lcall
xchg
push
pushf
pop
add
cli
outsl
icebp
adc
cmp
lock
adc
inc
lods
int3
xchg
xor
push
inc
jbe
mov
inc
cmp
cmp
push
add
push
bound
stos
mov
or
fstps
xor
and
popf
loop
jecxz
pop
push
add
xorl
les
popa
out
add
dec
mov
jo
pop
add
inc
push
filds
testl
jae
cltd
subl
fwait
jg
popa
lods
mov
mov
test
mov
add
adc
and
je
xchg
in
decl
inc
cmp
je
add
movsl
mov
in
out
loopne
push
dec
bound
add
mov
mov
jbe
cmp
rcll
pop
aam
in
mov
xor
mov
jge
add
add
inc
je
push
jecxz
adc
push
enter
inc
aas
inc
xorb
xchg
push
sbb
cmp
and
mov
xorb
test
lret
add
pop
sbbl
ds
dec
adc
out
addr16
scas
xchg
pop
jge
nop
mov
call
jecxz
rcrb
jmp
and
es
add
cli
jno
dec
cld
bound
lock
mov
add
std
pop
xor
sbb
mov
sbbl
cltd
in
sbbl
xchg
notl
dec
into
pop
and
mov
cwtl
sarl
dec
jmp
nop
mov
lahf
jp
xchg
sbb
push
in
push
fsubr
push
ljmp
imul
pop
lods
dec
iret
in
jl
ja
xchg
pop
jle
sbb
mov
sbb
jo
int3
cmp
cmp
jge
jp
add
sahf
mov
mov
or
mov
inc
in
jo
ss
incl
ret
adc
mov
stc
add
dec
dec
jp
pop
dec
cmpsb
add
adc
adc
sub
insb
jns
cmpsb
test
ja
add
pop
sbb
scas
lock
add
pop
xchg
cld
push
sbb
fiadds
inc
sarb
push
pusha
adc
jle
cmpl
outsl
push
fnsave
push
jg
add
xor
repnz
sti
test
arpl
leave
push
mov
insb
cmp
pop
inc
movsb
out
sub
lahf
cmp
sub
mov
pop
aaa
push
push
add
data16
xchg
ficomps
sbb
pusha
jecxz
decl
add
dec
dec
shrb
iret
int
iret
clc
xchg
shrl
add
mov
stc
mov
in
sbb
mov
cwtl
fdivs
addb
ret
xchg
jmp
inc
adc
push
sub
ja
xchg
inc
cmpsb
pinsrw
inc
cld
xchg
or
push
add
fsubp
imul
test
and
mov
mov
in
outsb
xchg
pusha
mov
pop
js
int
addl
cs
clc
cmpsb
or
rcl
mov
ret
pop
sbbl
cli
add
sub
mov
iret
daa
cmp
mov
flds
into
fnstsw
cmc
push
lods
adcb
sub
add
stc
lds
incb
sbb
cmp
mov
inc
outsl
cmpb
mov
jg
xchg
ret
jmp
pusha
jle
mov
xor
add
repnz
pop
movsl
xor
insl
loopne
js
dec
xchg
out
mov
xor
inc
lcall
add
out
mov
mov
or
mov
inc
setg
mov
rcl
incl
mov
arpl
cmpsb
aad
push
adc
call
adc
scas
inc
insb
xchg
mov
mov
xorb
fimuls
push
sti
jle
push
adc
mov
lock
pop
lret
sbb
dec
mov
cmp
stos
jo
add
dec
ss
sub
loope
push
arpl
xor
jmp
add
xor
iret
adc
mov
imul
mov
or
and
dec
sbb
add
pop
clc
pop
dec
ficompl
jl
movsl
arpl
cmpb
cwtl
mov
sbb
push
mov
add
mov
lods
cmp
pop
add
outsb
sub
inc
sub
inc
jle
inc
pop
inc
xor
jg
and
out
lcall
lcall
std
out
mov
cs
dec
add
hlt
mov
sbb
sub
in
out
addb
fs
gs
pop
add
cs
jge
shrb
sub
fiaddl
cmp
push
les
or
xor
push
sbb
into
jl
cmp
inc
or
inc
add
mov
imul
add
mov
add
sbb
sub
or
jge
and
pop
pop
leave
dec
lock
jecxz
adc
adc
mov
or
jne
add
rorb
adcl
lods
add
cmp
mov
jbe
nop
sti
mov
xor
bts
jge
lcall
dec
sbb
repnz
pop
sub
add
cmp
sbb
mov
insl
ss
and
in
jnp
push
mull
xchg
mov
enter
push
call
ljmp
popa
sarb
ret
xchg
xchg
add
xor
mov
fwait
data16
enter
push
cmp
in
mov
mov
sbb
jmp
in
mov
push
idiv
cld
add
or
pop
dec
sub
jg
add
push
fld
cmp
inc
sub
or
fs
movsb
mov
cmp
pusha
add
arpl
adcb
adc
dec
mov
cli
mov
cmpb
test
js
rol
movsl
bound
enter
mov
arpl
pop
add
push
out
or
inc
mov
mov
adc
bound
and
add
mov
add
inc
xchg
movsb
adc
mov
gs
or
push
leave
add
fldt
fdivs
jne
adc
into
dec
sbb
rolb
jo
and
mov
adc
sarb
jnp
hlt
int
fistpl
test
les
add
cld
jae
lods
adc
cmp
call
addl
div
add
push
aaa
and
add
leave
in
inc
xor
mov
cld
mov
sub
aas
popf
enter
dec
imul
fcmovb
push
jne,pn
sub
sbb
fmull
and
add
ficomps
mov
push
nop
cmp
add
cmpsb
movsl
cli
xchg
mov
ljmp
push
push
sub
jne
pop
cli
cmp
dec
jno
adc
outsb
mov
add
jp
add
ja
addb
and
cmp
int3
daa
cmp
or
add
add
arpl
inc
cmpsl
cmp
pop
sub
cmp
inc
dec
inc
out
add
inc
ret
dec
push
rolb
mov
iret
jne
lret
add
mov
add
aam
leave
and
push
fadd
cmp
sub
arpl
add
cs
verr
cmc
scas
add
push
cld
mov
mov
mov
les
mov
call
inc
daa
add
push
add
popf
sbb
jae
es
sahf
nop
pop
xchg
js
fisubs
es
xchg
adcb
aaa
adc
mov
add
adc
add
sbb
sbb
out
add
or
movsl
inc
popa
lret
cwtl
add
cmp
mov
nop
sbb
movsb
and
std
push
sbb
push
push
add
rorb
add
mov
shll
xchg
cmp
test
sbb
push
out
outsl
int
subl
mov
xchg
in
sarb
test
shll
dec
and
xchg
nop
enter
cmpb
jo
or
insl
pop
and
lds
out
mov
mov
mov
xor
shlb
add
push
fwait
jl
mov
aad
xchg
repnz
stc
enter
movsb
add
pop
aaa
add
popa
add
xchg
loopne
jmp
es
shlb
orb
add
dec
mov
cld
add
pusha
clc
mov
test
add
repz
aam
xchg
xchg
inc
pusha
fcomp
stos
shrb
pop
je
jns
adc
out
loopne
ljmp
inc
in
aaa
lock
add
scas
inc
push
stc
aam
ret
or
xor
dec
mov
mov
cmp
xor
jno
jp
testl
pop
fimull
into
add
inc
nop
in
pop
cmp
or
inc
mov
jge
add
jns
jo
xchg
jo
stos
add
jae
mov
xor
sarb
pop
popa
xchg
or
out
js
inc
es
dec
icebp
add
aas
push
sbb
dec
sti
cmp
add
xchg
jae
bound
nop
dec
out
or
cld
xor
add
dec
xchg
nop
add
sub
pusha
cmp
push
mov
das
rorb
movups
mov
je
add
lret
aas
mov
loope
sub
mov
sub
mov
test
fsts
pop
add
enter
pop
cmp
xor
pop
nop
jg
sahf
scas
lock
orl
loope
cli
es
std
lret
pop
ja
pop
imul
sti
cmp
out
add
cld
mov
aam
aas
add
adc
sub
xor
add
add
mov
aas
push
roll
imul
push
push
cmp
std
lock
lods
add
push
call
sbb
sub
push
mov
aas
dec
sarb
movsl
aas
lcall
adc
and
mov
je
cmp
jo
daa
xor
mov
aaa
dec
sub
mov
mov
in
adc
mov
xor
mov
or
sbb
mov
push
push
add
aam
add
cmp
loopne
mov
fdivrs
and
mov
add
jmp
inc
dec
and
pop
inc
scas
inc
mov
dec
loop
dec
adc
push
sbb
outsb
add
orb
loopne
xor
lret
sbbb
or
adc
mov
out
mov
dec
test
or
ror
mov
shlb
cmp
add
shll
add
icebp
test
das
push
mov
adc
pusha
sbb
add
jne
in
dec
cli
enter
mov
push
sbb
jne
lahf
hlt
jnp
mov
adcb
cmpb
call
sub
cmpsl
test
loopne
sub
add
inc
inc
jb
dec
adcb
outsl
xchg
pop
rcr
dec
in
push
mov
adc
cmpsb
xor
int3
pop
scas
push
sub
ror
mov
pop
pop
jge
inc
jle
push
popa
inc
aaa
add
push
mov
push
xor
and
add
andb
jmp
mov
mov
add
fiadds
out
sbbl
arpl
dec
add
je
dec
push
add
mov
clc
xor
sub
lea
mov
add
push
mov
clc
stc
add
fidivrs
out
mov
push
add
push
jns
mov
pop
movsb
rolb
pop
addl
cmpsl
mov
mov
add
addb
mov
inc
stos
sbbb
xchg
dec
xchg
aad
out
dec
sub
fisubrs
mov
add
jmp
nop
xchg
lock
add
dec
test
pop
add
xchg
jns
aad
arpl
jge
pusha
sti
and
or
aas
adc
pop
inc
aam
scas
pop
sbb
movb
or
push
enter
bound
mov
inc
mov
sbbb
lea
imul
repnz
sti
xchg
fistl
cld
sub
sbb
push
sub
aaa
xor
into
jne
pop
rorl
outsb
jp
mov
jo
xchg
in
stc
xorb
in
loop
mov
add
dec
clc
jmp
nop
rorb
mov
pop
rolb
push
inc
call
add
jae
mov
mov
pop
push
pop
loope
add
cld
xchg
das
add
and
rcrl
xchg
filds
or
divb
inc
or
cmp
mov
test
rdmsr
xchg
push
jnp
test
enter
ret
data16
lea
aad
add
stc
mov
lods
push
add
add
pop
popf
aas
rclb
adc
repnz
fmull
cld
jnp
pushf
iret
cmp
les
and
jl
add
xchg
cwtl
aad
mov
jns
cli
test
in
into
xor
add
sub
jae
andb
add
and
cmp
jne
pop
mov
js
lock
sbb
pop
add
pop
sbb
push
sub
xchg
aas
data16
iret
in
mov
hlt
jg
daa
int
insb
dec
push
stc
stos
jle
testl
andb
xor
pop
loopne
in
xchg
loopne
jg
dec
aam
inc
cltd
xor
cmp
cmp
xor
add
mov
xchg
aas
in
mov
xor
arpl
push
sarb
pop
test
add
pop
not
add
fs
sub
xchg
out
inc
or
or
add
sub
and
sbb
stc
sub
div
add
dec
shl
cmp
push
ja
or
jo
or
je
push
mov
cwtl
xorps
jae,pn
xor
push
adc
mov
add
xchg
arpl
mov
fisttpl
xchg
and
mov
enter
push
lds
add
cmpsb
shrd
sahf
add
out
add
mov
mov
and
mov
sbb
sahf
add
mov
xor
mov
push
xor
or
cmp
add
mov
add
cmpsl
pop
les
std
sbb
lcall
sti
add
cmp
xchg
addb
add
xlat
lret
mov
pop
aas
ret
orb
mov
cmp
add
sub
push
lods
adc
clc
in
fnstsw
mov
and
test
add
jbe
andb
lock
xchg
fiadds
int
jecxz
mov
daa
or
inc
sbb
pop
pop
push
sbb
mov
jecxz
cwtl
jmp
gs
push
sbb
cld
pop
add
rorb
sub
sub
pusha
sbb
mov
call
inc
pop
loopne
imul
add
stc
mov
mov
dec
stc
inc
hlt
mov
mov
insl
add
leave
sub
les
add
jmp
in
outsb
insl
mov
loope
stc
inc
dec
out
sarb
rcll
dec
loopne
add
es
pop
dec
int3
or
fistpl
shll
repz
sbb
movb
iret
cs
mov
hlt
int
mov
xor
sbb
lods
pushf
sbb
pop
push
mov
cltd
fsts
mov
or
mov
mov
movsb
and
or
outsb
add
stos
in
xchg
lea
inc
cmp
mov
jmp
ljmp
fmull
nop
mov
cmc
pop
or
out
insl
out
orl
add
xchg
pop
and
push
jecxz
jl
xor
addb
inc
sbb
adc
add
test
ljmp
xchg
or
aas
test
inc
xorb
mov
in
call
test
addr16
cmc
push
inc
add
cmpb
xchg
or
add
mov
pop
sbb
cmc
lods
subb
sbb
push
jno
loopne
fcoms
sti
pusha
adc
cld
mov
add
mov
loope
cmp
pusha
hlt
pop
xchg
mov
sub
test
mov
cwtl
mov
cld
shl
jge
adc
cmpl
add
and
aaa
dec
dec
pop
or
inc
rclb
xorb
xor
and
dec
fdiv
mov
pop
cmp
sub
loopne
outsl
lods
or
fcoml
cmp
test
out
xor
popa
addb
incl
mov
jmp
loop
iret
in
mov
lahf
rol
mov
push
cltd
sbb
sbb
je
jnp
fistpll
es
test
push
outsb
dec
aas
mov
ljmp
jg
fnsave
loopne
mov
sti
mov
decl
add
dec
lods
in
addb
lock
loopne
adc
adc
jns
inc
dec
inc
jg
out
mov
shlb
add
fiaddl
push
inc
shlb
sarb
add
inc
movsb
adc
rorb
addr16
pop
pop
or
or
repz
and
mov
adc
int
and
cwtl
ret
test
ret
xchg
ficomps
add
arpl
add
and
or
jmp
mov
imul
add
and
push
mov
bound
dec
ja
jbe
out
add
add
data16
push
jg
push
addr16
or
pop
xchg
ret
rclb
fisubs
repz
add
popa
push
xorb
decl
stos
mov
cmc
sub
and
xor
inc
xor
repz
add
push
jge
dec
dec
fldl
xchg
mov
out
cmpsb
ficompl
jge
add
lcall
push
mov
pop
push
push
xor
push
lods
add
pop
mov
xlat
xor
inc
add
mov
sbb
lret
inc
pop
nop
xor
and
ud0
pop
stos
inc
bound
and
cmpsb
leave
jae
sahf
filds
dec
pop
push
mov
add
in
lods
sti
and
call
mov
sbb
nop
in
sti
loopne
cmp
add
call
sbb
add
pop
or
xchg
dec
cwtl
insb
add
shl
add
pop
xor
je
inc
incb
push
xchg
out
ja
in
dec
pop
shr
add
dec
pop
mov
mov
add
test
in
pop
xor
icebp
jge
adc
insb
ret
xlat
push
outsb
lods
rol
adcl
mov
shlb
add
adc
and
or
or
pop
sub
cmp
sahf
out
sub
add
popf
fcomps
imul
jne
daa
movmskps
inc
aam
mov
mov
imul
test
mov
movsb
add
lret
mov
ja
cmp
cmp
dec
add
dec
jl
ljmp
mov
and
nop
xor
mov
sti
dec
cld
add
dec
dec
cwtl
fldl
out
push
add
stos
stc
in
add
movsl
in
sub
mov
add
push
inc
orl
add
cmp
pop
add
pop
call
add
push
cmp
aas
adc
jbe
push
xor
and
push
sub
fildl
lcall
bound
movsb
push
xor
adc
pop
add
pop
loop
bound
adc
add
add
jecxz
rolb
cltd
addb
loop
es
or
test
lret
jl
lret
adc
mov
add
fwait
cld
test
fldl
js
movsb
push
dec
cli
daa
subb
sbb
and
bound
dec
pop
push
dec
jb
adc
cmp
aam
pusha
mulb
push
lock
mov
std
pop
and
xchg
mov
rcl
fistl
jmp
xchg
pop
repz
fdivr
scas
add
ficoms
nop
mov
sbb
inc
jo
sbb
lcall
pusha
pop
sub
adc
mov
popa
cmp
push
push
jge
push
mov
dec
add
xchg
cmp
cltd
pop
mov
or
pop
pop
pushw
add
repz
inc
push
add
das
lods
psrad
add
cmp
sbb
mov
xlat
or
rorb
xchg
jp
mov
sti
lock
lret
or
add
ss
subl
jge
inc
adc
mov
add
cmp
insl
push
push
sbb
fsts
int3
push
xor
pop
dec
or
ds
orb
inc
adc
rolb
xchg
mov
mov
mov
cmpb
pop
sub
repnz
mov
dec
sti
daa
push
pop
push
inc
mov
adcb
lcall
mov
daa
ret
ds
fists
add
push
mul
es
out
cmpb
adc
mov
js
cmc
add
mov
xchg
movsb
and
add
test
and
jne
loop
scas
psubq
into
je
loopne
hlt
mov
cmp
test
pop
push
ja
arpl
dec
xor
inc
add
incl
push
sub
loopne
cmp
push
push
insb
sti
sarb
and
stc
add
sbb
ficompl
mov
mov
add
data16
jnp
jns
lods
sbb
addr16
inc
insl
dec
repz
sahf
popa
add
mov
mov
in
xchg
int
adcb
xorl
xor
mov
loopne
lahf
inc
push
pop
xor
inc
bound
sub
jmp
in
movsb
std
data16
lock
fwait
mov
inc
add
loopne
out
inc
movsl
mulb
cmp
aad
push
add
aaa
inc
cmc
shl
add
xchg
pop
jb
rcrb
sbb
jbe
mov
rcrb
pop
ret
in
lcall
cwtl
pushf
imul
sbb
pop
pop
cmpsb
add
or
mov
push
cvtdq2ps
jp
sbb
inc
jnp
out
lock
jo
lahf
std
sbb
sbb
dec
loope
add
dec
xchg
mov
xor
or
cld
loop
push
xchg
jb
cmp
dec
add
xor
add
push
add
ja
pop
test
adc
out
arpl
test
add
pop
mov
and
aas
popf
cwtl
xchg
repz
cmp
in
push
cltd
out
hlt
and
in
sbbl
lock
pop
addl
xorb
dec
roll
or
shlb
or
and
shll
pop
xchg
outsl
cmovs
repnz
dec
or
add
insb
ljmp
pusha
std
nop
pop
and
test
in
jmp
jp
add
call
lret
xchg
lret
loopne
in
push
and
imul
int
or
add
and
pushf
mov
mov
sbb
insb
insl
adc
adc
jbe
ret
jno
and
mov
outsl
leave
mov
loop
add
cmp
mov
in
flds
mov
add
das
cmpsl
push
sbb
lea
pop
scas
in
jp
dec
mov
jb
or
xor
cmp
xor
xchg
mov
cmp
add
jle
xchg
inc
out
add
iret
into
mov
pushf
int
xchg
inc
aaa
push
pop
pop
sbb
adc
adc
fwait
pop
mov
add
or
dec
fisttpl
incl
loopne
sbb
push
add
xor
cmpsb
jl
xchg
xor
dec
scas
jns
add
rcrl
add
daa
push
insb
neg
xor
jns
add
inc
out
mov
pop
add
sbb
mov
insl
add
cwtl
stc
ret
ret
scas
nop
sbb
repnz
cld
mov
push
jae
pop
adc
roll
pop
mov
imul
scas
pop
sbb
pop
outsb
lock
cld
jmp
add
adc
rcrb
lcall
icebp
and
pop
push
pop
push
mov
popa
jg
dec
pop
bound
shlb
sub
adc
mov
call
enter
mov
jne
bound
xorb
adc
jg
mov
mov
test
subl
adc
and
insb
nop
fs
ja
pop
cmp
loop
adc
enter
std
add
stos
inc
pop
into
in
mov
test
jb
fiaddl
pop
push
fstpt
cltd
or
add
test
scas
outsb
xchg
pop
shlb
popl
lods
add
add
std
in
nop
add
lods
mov
add
add
mov
add
push
cs
aam
lock
jbe
add
xchg
outsb
mov
add
add
xor
add
push
jecxz
cmc
add
lea
push
shr
sbb
int3
push
xor
daa
adc
cmp
push
lods
push
in
lret
and
repz
dec
or
inc
add
push
cmpsb
pop
add
nop
sbb
mov
sub
pushf
add
test
add
cmpb
mov
stc
in
shlb
orl
pop
repz
lret
xor
rol
or
imul
in
and
pop
cmc
jnp
popf
sub
and
cmp
inc
or
mov
icebp
loope
push
mov
pusha
cmp
pusha
mov
and
adc
xchg
or
sub
inc
cmp
xlat
jae
add
out
fdiv
or
arpl
jmp
cs
sub
cmpl
mov
xor
push
jge
fstps
and
leave
push
mov
xor
adc
add
test
cmp
cld
cs
xchg
je
sub
mov
add
repz
fdivrs
xchg
add
insb
mov
stos
sbb
mov
or
sbb
xchg
out
push
jl
mov
push
pusha
fidivs
aam
add
pop
clc
inc
add
aad
sarl
push
out
push
mov
shrb
mov
mov
dec
add
loopne
cwtl
mov
scas
fldl
or
xchg
les
rorl
jne
dec
pop
sub
pop
andb
jae
and
sbb
push
cmp
or
mov
xchg
roll
cwtl
fwait
in
adc
outsb
das
inc
cmp
sbb
insl
jne
jp
adc
cmp
loop
adcb
idivl
lea
iret
add
mov
pop
dec
hlt
mov
push
dec
push
add
and
loope
add
add
push
mov
add
mov
cmp
mov
mov
les
jge
add
mov
or
mov
xchg
insl
popf
add
adc
out
faddl
mov
mov
inc
fucomip
mov
decb
fsubrl
dec
rol
mov
push
dec
and
clc
testl
dec
fldl
lock
stos
or
mov
int3
xor
xchg
adc
and
inc
fdivl
mov
mov
dec
push
xlat
jecxz
xor
adc
mov
push
adc
jns
or
subb
lock
and
out
test
addl
cld
dec
mov
or
mov
loopne
testb
xor
imul
call
aas
loopne
mov
fiaddl
xor
pop
rep
roll
or
cmc
lds
mov
and
pusha
add
in
pop
ret
sub
call
mov
mov
inc
cmp
mov
add
push
sub
cmp
nop
xlat
cmp
ret
mov
shll
nop
in
or
mov
add
xor
shrl
clc
sbb
inc
jp
add
push
dec
fmuls
pop
mov
adc
lcall
mov
pop
sbb
mov
mov
pop
xchg
popa
sub
mov
ret
add
imul
stos
add
pop
dec
and
or
shl
lahf
clc
push
xor
push
jg
mov
arpl
xchg
daa
xor
lret
mov
mov
sub
ja
add
pop
add
dec
mov
rorb
mov
test
adcb
sub
int3
add
ljmpw
popf
outsb
xchg
and
inc
add
sub
jg
sub
rcr
dec
push
push
jle
or
subb
movsl
rclb
sbb
xor
cmp
jmp
stos
mov
test
pop
push
add
std
or
subl
push
mov
rorb
mov
mov
popa
out
sarl
pop
add
pop
or
adc
or
xchg
pop
out
int3
add
leave
push
call
dec
nop
lock
jne
sarb
ja
push
sub
and
push
pop
insl
xchg
inc
mov
ror
fmul
push
push
add
shlb
in
dec
push
fadds
sbb
rol
fdivs
sbb
cmp
out
add
aaa
ret
xchg
outsl
add
iret
push
lods
stos
ret
pusha
out
sub
cmp
jne
add
push
and
mov
fiadds
es
jecxz
sbb
push
jno
notl
rcrl
sub
movsb
and
pop
adc
jg
pusha
das
inc
add
rorb
push
inc
cmp
push
inc
cmp
pusha
je
add
xchg
jecxz
cmpsl
mov
mov
adc
cwtl
mov
add
sub
test
push
ret
cmpsb
add
cmpsl
jl
push
cs
inc
js
cld
frstpm(287
bound
jmp
shrb
inc
or
sub
and
js
insb
cli
or
cmc
add
cmp
push
and
jo
xchg
test
fwait
mov
pop
rcrl
repz
pop
adc
xor
sbb
mov
imul
into
addr16
aam
stos
subb
movsl
insl
adcb
mov
add
icebp
mov
pop
scas
pop
dec
shlb
sbb
sub
xor
aam
adc
nop
int
fsubrp
mov
lret
cmp
in
in
jmp
out
pop
lret
cli
jo
add
mov
mov
repz
add
push
mov
repnz
in
cmp
sar
sub
mov
dec
aaa
add
arpl
sub
mov
data16
mov
or
sbb
gs
cmp
dec
sbb
add
and
fisubrs
int
je
cwtl
in
add
dec
lock
pop
add
fsubp
and
push
mov
ret
inc
add
bound
sub
and
push
sub
sub
rcrb
push
adc
add
shlb
push
mov
mov
add
add
mov
es
mov
add
push
sub
cli
scas
push
xchg
add
sahf
test
mov
xchg
stc
rclb
pop
enter
xchg
xor
dec
mov
push
add
add
or
add
pop
insl
ss
lea
les
mov
mov
pop
cmp
xchg
mov
sbb
mov
dec
push
std
leave
dec
scas
add
insb
in
push
add
and
imul
pusha
shlb
sbb
mov
jb
add
mov
stos
fldt
addl
mov
add
push
das
push
sahf
fsubs
fdiv
lods
xor
nop
cmp
sub
add
adc
and
clc
add
test
and
add
mov
ljmp
cltd
shrl
push
add
jl
mov
mov
mov
add
outsb
sub
jae
enter
xchg
inc
sbb
pop
arpl
dec
nop
subb
dec
add
dec
jnp
mov
call
xor
mov
add
jl
xchg
shl
jne
add
lret
fwait
jmp
cli
mov
add
movl
push
mov
adc
add
mov
dec
add
mov
lcall
push
iret
inc
into
lret
pop
in
outsl
js
aaa
inc
sbb
int
mov
pop
aas
call
cld
insb
sbb
ss
sbb
aam
hlt
lods
or
cltd
adc
mov
cmp
xchg
pop
add
or
add
dec
add
pop
push
jle
inc
inc
and
jo
out
add
or
imul
mov
aad
pop
add
pop
popf
mov
add
aam
rcrb
push
ss
push
nop
mov
push
out
icebp
mov
fwait
in
jno
outsb
mov
push
repz
add
xchg
sbbb
iret
add
scas
or
add
mov
mov
mov
dec
add
xchg
jge
insb
scas
out
push
loopne
or
pusha
mov
adc
pusha
int
jbe
pop
push
cltd
mov
xchg
push
mov
nop
pop
add
loop
rolb
mov
sub
add
adc
cmpsl
push
sbb
lret
sbb
push
sub
jae
test
fs
sbb
iret
cs
fildl
movsb
mov
lret
mov
aam
push
cmc
clc
outsb
add
xchg
fldcw
add
lods
leave
mov
adc
jmp
pop
sahf
daa
jno
je
test
adc
pop
add
add
dec
and
mov
cmpsl
mov
not
add
xchg
add
sub
push
shr
sbb
push
dec
add
roll
lret
pop
aam
in
jbe
sub
das
test
add
adc
cmp
mov
clc
out
push
xchg
pop
cmovbe
lods
bound
clc
test
inc
sbb
push
jmp
lahf
add
int
push
in
subl
sub
add
rol
push
dec
aam
aas
xchg
push
xor
out
pop
mov
in
or
jg
sbb
inc
jmp
cmpsl
scas
movsb
adcb
push
out
scas
std
cmp
jl
enter
shr
stos
xchg
adc
push
ds
movsb
add
jno
in
add
mov
lret
ss
add
xlat
leave
into
mov
mov
ffree
add
mov
in
xchg
fmull
mov
and
push
add
add
sub
or
adc
ficoms
mull
sti
pop
jg
add
dec
mov
mov
scas
arpl
shlb
jg
and
aam
call
mov
repnz
enter
mov
rclb
dec
xchg
jbe
and
push
push
or
or
nop
dec
and
xor
popa
push
arpl
push
pop
sbb
xchg
cmpb
mov
or
nop
push
or
mov
hlt
mov
roll
mov
lods
fisubl
jae
xchg
test
adc
mov
xchg
jns
xor
pop
fwait
add
mov
int
and
xchg
mov
push
mov
jbe
arpl
inc
jmp
or
inc
pushf
xchg
bound
nop
jmp
adc
sub
jo
push
call
mov
and
add
inc
in
push
ja
lods
lock
jb
push
jge
clc
roll
xor
push
mov
add
ja
add
cwtl
sbb
jmp
pop
inc
out
rol
test
mov
add
mov
mov
movsb
cmp
test
or
add
mov
xor
rcrb
jnp
lods
jl
and
bound
jecxz
cwtl
popl
imul
sbb
fstps
test
and
leave
lcall
mov
add
or
roll
push
dec
dec
dec
push
push
bound
sbb
mov
push
stos
bsr
add
insb
fstl
mov
ret
xor
int3
insl
in
jle
leave
xchg
cwtl
je
mov
sbb
mov
jno
andl
and
lahf
jb
mov
or
aam
push
pop
lods
xchg
test
loopne
cmpsl
sub
inc
call
lods
pop
push
xor
pop
pop
add
insl
add
pop
icebp
inc
add
jo
pop
push
pushf
or
push
mov
push
js
fnstenv
movsl
lds
cmovae
lock
add
out
sbb
jmp
call
mov
jnp
sbb
aaa
xor
in
push
sbb
pusha
inc
mov
add
pop
inc
push
js
mov
jae
pop
mov
mov
push
movsb
xchg
add
out
int
leave
out
push
push
insl
mov
pusha
stos
dec
cli
mov
je
nop
les
fisubl
enter
jge
nop
rep
icebp
cmp
xor
mov
mov
add
enter
pushf
mov
mov
add
mov
inc
int3
pop
ljmp
aas
lock
test
xchg
dec
out
mov
cmpsl
add
push
cmp
xchg
cwtl
fcmovne
hlt
cmp
imul
adcb
cmc
add
leave
jbe
in
je
add
push
stc
push
xor
fldpi
add
jnp
adc
pushf
das
adc
and
adc
mov
add
push
cmpsl
pop
jmp
sub
aad
cmp
out
add
bound
out
inc
sti
shl
mov
mov
pop
into
jno
push
pop
test
sub
in
add
fwait
jmp
cwtl
sar
add
ljmp
fs
jo
mov
addb
pop
xchg
cmp
nop
lods
lahf
sub
nop
cli
or
xor
movsb
sbb
imul
add
out
and
xor
xchg
clc
insb
cld
movsl
jg
jnp
pop
mov
jmp
adc
add
xchg
pop
lock
pcmpgtw
ja
add
pop
lods
arpl
add
sbb
adc
das
xchg
or
mov
popf
fildl
orl
pop
add
imul
add
dec
aas
mov
mov
subb
imul
pop
xlat
hlt
aas
or
sbbl
mov
nop
popl
insb
movsl
add
cmp
jo
add
stc
fs
gs
add
mov
scas
not
mov
leave
pushf
xchg
add
fstps
jge
xchg
cmp
hlt
and
adc
mov
lahf
push
xchg
aad
cmp
add
xor
pop
repz
cmpsb
pop
iret
cmp
and
nop
nop
push
inc
mov
add
shl
inc
enter
add
hlt
sub
jle
and
mov
and
push
loopne
pop
and
lods
push
xor
fldl
daa
dec
test
sub
jbe
add
cmp
fistps
inc
and
adc
add
jns
into
jne
cmp
fcoml
fcmovne
dec
cmpsl
sbbl
inc
sbb
push
push
inc
add
cmpsb
int
xor
sub
push
and
les
xlat
leave
dec
xchg
cs
fs
inc
sbb
push
push
jbe
je
add
and
sub
call
mov
test
ret
add
les
dec
ficomps
clc
jne
jg
add
jl
lock
leave
xorb
add
inc
add
mov
hlt
adc
pop
xchg
dec
out
pop
add
and
es
sbb
mov
add
repz
sbb
xor
cmp
xor
lret
inc
in
repnz
pop
dec
sub
adcb
lods
mov
mov
mov
int
hlt
imul
sarl
lret
mov
push
test
cmpsl
or
cwtl
imul
testb
movb
in
add
sbb
xlat
ljmp
mov
add
cmp
je
xchg
push
imul
aad
clc
movsb
pop
stc
loopne
ret
push
mov
mov
xchg
jo
loope
hlt
or
inc
out
jg
add
sti
lods
fmuls
sub
add
outsl
pop
adc
clc
out
pop
aam
es
xor
in
pop
fildll
lods
add
xor
shrl
inc
add
in
xchg
cmp
out
movsl
mov
add
aam
test
lahf
cmc
repz
inc
mov
jb
add
push
xchg
adc
sbb
add
and
xchg
push
incl
loopne
pushf
or
enter
inc
push
sbb
inc
pop
xor
add
mov
push
dec
inc
push
mov
pusha
out
mov
cld
lahf
pop
test
cmp
test
jo
imul
lret
add
push
lods
mov
cmp
push
iret
add
fidivs
aam
jle
insb
xor
xor
enter
fcompl
hlt
and
ja
add
or
cmp
arpl
or
fwait
add
or
pop
mov
cmovo
sbb
add
in
add
jae
dec
pop
jl
popf
int
inc
test
ss
xor
leave
loopne
add
dec
shlb
add
subl
sbb
int3
sar
add
dec
xchg
pusha
insb
into
add
imul
mov
inc
mov
bound
pusha
cmp
pop
adc
sbbb
dec
fcomps
ljmp
add
lock
mov
inc
add
out
dec
sub
mov
ljmp
sub
push
xchg
sub
xchg
cmp
add
shlb
sbb
push
xchg
not
add
pop
mov
les
iret
add
jl
push
sbbl
sbb
inc
std
jne
cmp
xor
bound
or
add
dec
mov
jmp
sti
and
pop
addb
cld
sbb
ret
xlat
sbb
xchg
neg
and
mov
push
and
and
cmp
or
jmp
loopew
sahf
in
nop
or
ret
sbbl
adc
dec
push
sub
data16
cmpl
dec
jbe
pop
sub
jp
stos
jns
inc
fistpl
push
test
jbe
cmp
adc
lret
enter
and
push
aaa
lods
add
lods
add
dec
mov
add
adc
jle
movsb
jb
add
cmp
test
mov
out
xor
mov
std
shl
ljmp
sbb
loopne
int3
pop
popa
lock
add
lods
pop
imulb
insl
filds
fmul
lcall
xchg
add
adc
jno
dec
das
add
jns
xchg
adc
adc
sbb
insb
int3
shrl
loopne
rolb
add
cmp
loopne
xor
jge
pop
mov
add
xchg
stos
xchg
xchg
ret
imul
adc
mov
add
rclb
add
repz
mov
mov
mov
dec
mov
scas
mov
shl
add
inc
mov
ja
sbbl
xchg
push
cs
movsb
incl
and
sub
add
lock
add
popa
in
movsb
cli
adc
sbb
add
xlat
fs
and
aam
mov
outsb
enter
sbb
movsb
xor
stc
out
inc
fwait
mov
add
mov
xchg
cmpsl
iret
fldl
scas
fnstenv
dec
gs
add
jge
mov
int
in
push
ljmp
sahf
lret
push
or
scas
pop
pushf
es
jb
cmp
js
mov
lock
or
dec
lods
loope
ret
loopne
xlat
cwtl
mov
je
outsb
inc
out
add
or
out
repnz
arpl
ja
clc
add
mov
xchg
sub
outsl
dec
arpl
shlb
sub
jg
pushf
add
stos
sar
cmp
je
add
hlt
pusha
clc
daa
push
pop
js
jp
fiadds
sbbb
adc
stos
lds
in
cld
iret
imul
movsb
mov
mov
jg
addr16
add
lock
aam
pop
cmp
rorl
imul
or
stos
pop
scas
xor
loopne
add
inc
fcmovbe
add
add
fwait
add
mov
push
push
mov
es
js
andb
mov
pusha
jo
xchg
add
ss
rcrb
dec
cmpsb
in
loop
pop
add
mov
lret
outsb
ficompl
dec
inc
icebp
jecxz
xor
mov
dec
cltd
mov
popf
pop
mov
insb
cwtl
xor
lods
pop
mov
inc
push
lret
or
mov
mov
lock
sub
jne
fsubl
ds
add
sarl
lret
lds
arpl
sahf
or
mov
push
enter
add
mov
pop
xor
pop
mov
adc
add
adc
xchg
add
and
je
pop
push
or
dec
or
iret
loopne
xchg
add
push
pop
rorb
dec
popf
push
jne
push
dec
cld
mov
pop
mov
iret
push
cltd
pop
icebp
adc
sbb
add
cmp
int3
mov
ljmp
or
or
repz
sbb
test
jmp
push
mov
add
cmp
adc
inc
addr16
mov
mov
pop
in
sahf
or
subl
sbb
add
arpl
inc
add
das
dec
sarb
add
cltd
cmp
add
and
mov
cmpsl
mov
addr16
push
out
daa
xchg
push
fcomi
or
clc
add
dec
loop
add
cwtl
gs
mov
sbb
pop
inc
nop
call
dec
xor
mov
or
sbb
shll
or
pop
add
fcompl
and
add
sub
int3
stc
mov
dec
cwtl
dec
es
mov
cmc
mov
inc
rcl
lahf
mov
add
cmp
stc
addr16
fdivrs
add
std
xchg
sub
cmpsb
mov
inc
fs
xchg
add
inc
jp
sbb
add
pop
je
sbb
cltd
nop
xor
enter
inc
push
push
addl
adc
jg
icebp
int3
add
and
out
dec
push
pop
push
add
es
inc
nop
adc
xchg
add
and
jg
loopne
cltd
fiadds
in
xchg
ss
outsb
pop
data16
xor
in
call
je
out
inc
or
rolb
test
mov
inc
add
mov
push
fs
loopne
stc
add
mov
dec
add
outsl
jmp
mov
add
inc
les
imul
sub
ds
add
jo
cld
fistpll
pop
das
stos
pusha
out
push
outsb
mov
or
add
aad
iret
pop
pusha
lea
sub
fsubl
icebp
xchg
sub
add
add
inc
mov
xor
sbb
pop
pop
roll
mov
das
loopne
nop
jmp
addb
lret
and
push
adc
sti
mov
aas
add
enter
xchg
add
rolb
add
flds
lods
jle
cmp
imul
cmp
mov
fldcw
inc
in
popf
or
pop
cs
andb
add
hlt
int
xchg
cmp
push
mov
clc
int3
data16
cmp
aam
adc
test
pop
cwtl
adc
fwait
orl
xchg
or
mov
xor
faddl
ja
adc
inc
pusha
fdivrs
cmpb
bswap
aad
sahf
mov
popa
cwtl
pop
repnz
xchg
xchg
sbb
mov
hlt
xlat
addb
lcall
ds
adc
jp
add
repz
fidivrs
and
cmp
xchg
cmp
adc
push
xor
int
scas
inc
sub
adc
add
jle
adc
aas
movsb
ret
daa
push
jp
orb
add
das
cmp
add
ss
cltd
mov
pop
fldenv
addb
mov
dec
xor
iret
mov
push
sbb
pop
sbb
stos
or
pusha
not
or
mov
xchg
jmp
cmp
sub
jnp
icebp
movsl
mov
mov
rcrb
subb
sbb
xchg
and
dec
mov
and
dec
adc
shl
and
stos
icebp
sub
inc
mov
xor
sarb
add
cmc
push
movsl
fcomip
in
int
popa
add
call
jp
add
ret
cltd
or
xor
fldt
sub
add
test
movsl
int3
push
fdivr
js
roll
scas
mov
dec
xor
dec
or
pop
and
cli
lock
add
mov
mov
cmp
cmp
daa
mov
rorb
out
push
inc
cmc
test
inc
out
cwtl
pop
push
and
dec
addl
push
and
imul
add
fcoms
inc
push
mov
mov
add
in
shlb
cld
cmp
pop
xchg
sub
add
mov
add
outsl
aas
mov
and
in
test
add
sets
add
lea
mov
xor
xor
or
fucom
dec
hlt
add
jb
pop
into
xlat
out
add
push
out
out
inc
sbb
sti
sbb
xor
or
fistpll
divb
xlat
push
cmc
add
mov
dec
add
fs
inc
data16
pop
push
aas
xor
inc
shlb
leave
lcall
xor
rolb
ret
pop
into
jle
jmp
rcll
rol
orl
enter
aaa
dec
in
jg
cmp
cmc
subb
test
aas
mov
or
jae
jp
add
push
add
pop
dec
add
cltd
add
fsubrl
fistpl
add
test
je
add
hlt
daa
sub
js
dec
inc
sbbb
sbb
sbb
mov
add
ljmp
test
add
mov
cld
shl
and
fisubl
ret
daa
mov
std
jp
cmp
movb
or
and
orb
xor
mov
adc
mov
mov
loope
int3
mov
jbe
and
mov
ljmp
push
lret
sbb
decl
xor
sub
addr16
push
int
jmp
ret
jmp
sbb
sbb
nop
pop
jp
add
stos
out
cmp
dec
xchg
xchg
lea
add
mov
push
int3
or
dec
add
fildl
pop
arpl
pop
jg
mov
repnz
cmpsb
addb
mov
mov
xchg
and
jle
add
xchg
mov
shlb
cmc
je
sbbb
mov
loop
and
sbb
xchg
or
or
loopne
stc
leave
pusha
pop
leave
outsl
add
dec
inc
addb
jle
aam
int3
pop
push
xor
rclb
fsubs
jne
add
and
inc
mov
sarb
mov
inc
push
add
mov
fs
lret
push
adc
add
pusha
adc
cmp
pavgb
adc
pop
js
cltd
cmp
adc
std
fcomps
jle
pushf
dec
stos
mov
ja
sub
xor
outsl
pop
mov
mov
cmpl
pushf
add
subb
outsb
add
cmp
andl
lods
fsubrl
and
subl
iret
inc
add
enter
cmp
mov
popa
jnp
xchg
fld
data16
cmp
in
lock
mov
fistps
mov
sbb
enter
cmp
les
push
push
lods
adc
inc
mov
adc
sub
sub
mov
mov
mov
jbe
ja
add
in
xchg
pop
loope
add
mov
pusha
pop
subl
pusha
lods
imul
inc
imulb
shll
test
push
out
xchg
xchg
mov
popa
cmp
mov
xor
inc
add
push
sti
lcall
call
insb
add
ds
loope
in
add
or
add
cmp
imul
shrl
add
mov
aaa
inc
jbe
aam
mov
add
inc
sub
cwtl
add
mov
jg
inc
push
sub
add
in
cmp
ljmp
adc
fneni(8087
and
sub
imul
adc
lret
bnd
xor
pop
ret
or
jae
add
dec
std
xchg
mov
mov
jecxz
sub
nop
mov
es
ret
loope
imul
xchg
std
scas
pop
add
xchg
mov
cmp
es
jne
push
fimuls
jae
iret
sbb
outsb
mov
mov
pop
xor
faddl
dec
in
sbb
ret
mov
cmp
faddl
in
inc
dec
adc
out
lret
inc
add
in
sti
cltd
adc
xor
daa
xchg
mov
imul
or
subb
dec
cwtl
and
push
sub
jg
loop
add
mov
xchg
and
or
jmp
pop
add
mov
loope
rorb
mov
and
out
mov
pop
ficoml
jp
jl
call
xor
push
xchg
xor
call
add
leave
nop
fldt
into
xor
sub
push
xorb
sarb
lods
faddl
mov
test
mov
testb
mov
sbb
push
cltd
adc
adc
lea
lock
jge
add
nop
test
lcall
adc
int
mov
stos
inc
and
test
sbb
push
pop
fs
es
jle
adc
adc
sbb
ror
adc
adc
jmp
scas
mov
fldl
pop
inc
jmp
test
ret
lret
jge
pop
movsb
and
int
call
mov
sub
popa
lds
pop
or
lcall
scas
lea
sbb
jmp
scas
leave
dec
push
test
push
add
mov
push
mov
pop
pop
jmp
inc
aam
insb
pop
jns
dec
bound
and
push
jmp
imul
add
cwtl
outsb
push
orps
andb
cmp
enter
add
pop
fbstp
push
inc
add
adc
sub
in
sub
hlt
cmp
pop
mov
xchg
pop
xor
mov
jp
pop
push
sti
xor
or
arpl
shlb
pusha
dec
sub
fisttpl
sub
mov
push
jne
adc
fwait
ds
fldl
repz
xor
add
and
aad
and
pop
arpl
js
add
cmpsb
rclb
dec
mov
rcl
cwtl
sub
xchg
add
push
loop
push
jmp
mov
sub
sub
jo
ds
or
cwtl
aas
pop
ds
add
pop
cld
pop
mov
inc
mov
test
mov
xor
pop
icebp
pop
jecxz
imulb
mov
sbb
cwtl
out
mov
xor
jmp
add
adc
addb
adc
test
dec
push
jns
stos
xchg
add
add
lock
mov
add
push
fistpl
jns
scas
add
xlat
shll
aas
mov
shll
and
mov
aam
sbb
faddl
sbb
outsb
xchg
sbb
addb
pop
sar
push
add
int
out
jp
aam
outsb
cmp
iret
push
jmp
push
xchg
and
out
add
sbb
dec
xor
imul
lahf
add
movsl
or
mov
add
popf
sbb
sbb
ficomps
imul
xchg
add
pop
in
incb
arpl
fs
xor
subb
mov
in
xchg
push
add
push
adc
add
mov
inc
jno
ds
xor
cmp
add
jne
push
mov
mov
xchg
push
bound
sbb
cmpsl
adc
mov
popa
pushf
test
and
dec
jb
or
enter
mov
in
out
add
xor
mov
in
sub
cmpsl
add
sbb
push
add
cmp
sbb
adc
xor
in
insb
jb
movq
jp
pop
imul
loop
int3
aad
or
cmpb
pop
xchg
mov
arpl
test
dec
mov
xchg
sbb
or
jmp
imulb
lock
fnstsw
pusha
shrb
movsb
gs
fsubrl
sbbb
mov
enter
push
das
andb
cmp
pusha
addr16
cmc
sub
adcb
push
jge
or
xlat
hlt
sbb
and
mov
cmp
push
or
rcrb
xor
into
push
push
jmp
sub
sub
lahf
in
jno
mov
sbb
insb
mov
push
xchg
add
sbb
dec
xchg
mov
es
adc
subb
cs
es
add
faddl
aaa
jmp
cli
xor
mov
push
lret
leave
add
test
rolb
add
fiaddl
pop
or
or
daa
rcl
add
lcall
jne
add
out
cld
add
mov
fsts
cmpb
jg
xor
adc
call
testb
in
popl
cltd
insl
add
or
inc
mov
jmp
mov
adc
push
xchg
clc
mov
insb
shl
je
mov
lcall
repnz
sbb
fsin
ret
add
sub
adc
inc
xchg
inc
pop
lods
iret
mov
dec
xor
pop
shrb
dec
mov
jnp
jle
sub
or
test
pusha
mov
pop
inc
fnstcw
leave
push
incb
mov
outsl
mov
dec
into
add
call
mov
push
sub
lret
popa
mov
pop
jle
add
dec
mov
adc
add
loop
jg
data16
inc
rclb
imul
pop
push
jno
mov
test
cmp
clc
fsubs
add
pop
push
mov
push
jle
sar
and
push
sub
inc
rorl
mov
and
ljmp
out
fs
aaa
dec
add
pusha
mov
push
ret
jbe
sub
pusha
pop
lock
sbb
cli
jo
fcoml
ret
and
sub
mov
push
sahf
mov
pushf
sbb
fidivs
xor
insl
inc
push
add
sub
push
xlat
add
push
mov
dec
rcrl
in
dec
dec
or
mov
inc
mov
cmpsl
adc
cmp
std
add
fistl
loope
sbb
or
les
out
inc
adc
xor
pop
pop
aaa
lret
and
lahf
scas
ret
or
dec
inc
jae
mov
outsl
add
movsl
cmp
ss
and
sbb
test
das
sbb
popf
insb
clc
add
mov
fwait
movsl
cmp
push
jge
jmp
fimuls
in
push
rolb
pop
push
mov
mov
loopne
add
lock
or
add
or
roll
repnz
in
out
shlb
cld
xchg
add
or
icebp
inc
ror
cmp
repnz
insl
push
popf
sbb
pop
mov
adc
xchg
sub
dec
and
mov
pop
inc
fisttps
mov
sbb
cwtl
add
or
por
out
std
pop
divl
jb
adc
sti
enter
ret
add
adc
mov
jbe
ror
push
popa
dec
cmpsl
cmp
mov
mov
dec
and
jae
adc
sub
add
push
lods
cmp
in
push
js
jbe
jl
movsl
inc
int3
mov
clc
aam
in
gs
add
and
xchg
cmp
jae
sbb
add
repnz
cmp
daa
add
in
lds
jl
sub
sbb
dec
outsb
add
outsl
dec
mov
pop
dec
call
add
jo
inc
add
incb
jl
jns
xchg
adc
xor
scas
inc
sub
test
cmpsb
push
or
iret
inc
sub
xlat
jb
add
mov
adc
lods
pop
mov
outsb
inc
jle
adc
sbb
inc
mov
jne
mov
add
aas
mov
imul
loopne
sub
mov
imul
adc
lret
pop
add
daa
jecxz
lods
or
pop
mov
and
sbb
shlb
xor
les
daa
enter
repnz
into
pop
fucomi
bound
js
xor
fimull
add
push
stos
add
mov
stc
addr16
stos
hlt
mov
cltd
cmp
sub
je
cmp
fwait
into
adcb
add
adc
scas
dec
cli
push
push
pop
push
cmp
in
stc
iret
adc
mov
or
dec
lds
and
movsb
mov
add
dec
mov
loope
into
xor
loopne
mov
sub
push
movsl
xor
cs
sbb
push
sbb
add
mov
mov
or
gs
stos
loopne
mov
mov
addr16
add
add
fwait
add
sahf
xchg
test
aas
or
mov
add
sbbb
or
dec
rcrb
or
shll
ljmp
xchg
lahf
add
mov
xchg
fldl
inc
fcomps
lds
inc
fcompl
fadds
mov
mov
add
fwait
adc
jle
pop
mov
mov
mov
add
fstpl
push
or
or
mov
enter
add
lret
sti
xchg
pusha
add
sub
inc
dec
adc
cmp
loop
xor
mov
jge
add
fimuls
pushf
add
mov
loope
pop
sbb
pop
flds
sub
push
add
imul
loope
sarb
add
jle
outsl
xlat
andl
dec
icebp
push
add
and
std
or
sub
mov
test
fsubs
add
push
inc
mov
je
out
push
mov
xchg
cli
mov
add
dec
fsubs
sub
xchg
test
jb
push
stos
xor
xor
stos
loopne
test
mov
out
js
add
xor
cld
cmp
cmc
xorb
adc
enter
mov
call
fistps
mov
mov
mov
or
test
add
rclb
aam
stos
add
push
shl
repz
inc
add
mov
mov
add
popf
adc
movsb
lods
pop
sbb
add
sub
mov
push
rorl
sub
push
mov
cwtl
cmp
or
cmpsl
pop
jbe
repnz
clc
fadds
dec
fldenv
jne
lret
jg
cmc
das
add
push
fisubrs
cmpsl
push
sbb
dec
fnstcw
cmp
adc
stos
pop
lret
push
clc
pop
pop
bound
xchg
ss
addb
add
ds
xor
mov
mov
add
test
fnstcw
sbb
popa
adc
in
mov
icebp
ret
inc
test
jg
js
add
push
roll
mov
add
adc
test
int
mov
mov
dec
jns
pop
cmp
and
icebp
sbb
cmc
cmp
lret
push
inc
jnp
and
ljmp
hlt
cwtl
adc
cmpsl
movsb
and
xor
inc
loopne
sbb
xchg
cmp
sbb
add
jle
repnz
cmp
and
out
add
mov
jo
call
movl
add
dec
sub
jle
xchg
add
mov
mov
xlat
lret
add
inc
and
rol
decl
push
or
fmuls
inc
add
nop
rol
push
add
jl
pop
mov
add
mov
jmp
mov
aas
push
imul
out
push
cli
sub
pop
push
add
int
cmp
jmp
sbb
aad
pop
push
push
int3
hlt
mov
push
in
shr
std
andb
pop
and
mov
add
jmp
push
jbe
lods
rolb
jmp
adc
nop
add
les
bound
lds
add
cmp
int
cld
bound
dec
mov
hlt
ss
shl
cmpsl
and
sbb
hlt
add
idiv
pop
add
pop
xor
add
mov
out
sbb
or
jmp
adc
lea
loope
movsb
adc
add
lret
pop
pop
stos
icebp
inc
add
loopne
add
repnz
pop
in
pop
sub
inc
andl
imul
scas
adc
adc
sarl
sub
adc
jo
sbb
add
cwtl
ja
movsl
cmp
sbb
adc
stos
add
insb
inc
shrb
sbb
mov
mov
ja
jle
add
jb
pop
adc
fmuls
rcll
insb
stos
inc
mov
cmpb
and
xchg
mov
adc
push
lods
cli
mov
mov
je
add
sub
sub
sub
ret
push
jg
aam
outsl
add
mov
xchg
cmp
mov
push
shll
add
icebp
leave
cmp
dec
xchg
aaa
fidivs
aam
cmp
push
hlt
add
loopne
loop
adcl
adc
mov
loopne
pop
add
cmc
in
stc
pop
out
sbb
add
mov
add
xchg
cmpsl
pop
jnp
loopne
adc
in
aaa
dec
or
add
movsl
subb
shlb
mov
les
stos
mov
js
sub
xor
add
lods
adc
add
gs
lock
sarl
sbb
ds
add
jbe
mov
pop
orb
jge
lret
jp
add
pop
rclb
cld
mov
push
inc
rcrl
push
out
addb
mov
sarl
dec
jp
popa
pop
arpl
xchg
add
faddl
push
jmpw
dec
sub
mov
cmpsl
cmp
add
sti
push
sbb
addr16
add
mov
xor
or
jo
hlt
xorl
jb
pop
mov
inc
repnz
jg
leave
push
push
add
xor
popf
add
shll
or
adc
xchg
cmpl
mov
mov
in
xchg
cmpsb
outsb
call
mov
sub
sub
xchg
enter
in
sbb
add
cs
sbbl
xchg
movsl
test
inc
int
je
push
jnp
out
xacquire
inc
mov
sbb
sub
sub
mov
cmp
adc
or
or
lds
sub
fnsave
xor
daa
ret
sbb
push
inc
or
xor
and
add
or
pcmpgtb
adc
dec
test
sbb
daa
mov
out
loope
add
add
cwtl
ss
or
pop
aaa
push
out
call
and
ret
int3
icebp
fadd
cmp
pop
jmp
scas
sub
adc
hlt
add
incl
lods
pop
and
nop
std
cmp
mov
cmp
xchg
ljmp
pop
movsl
addr16
int3
aad
add
leave
mov
in
mov
add
rclb
js
add
inc
jmp
push
pop
stos
jne
das
and
add
and
xor
or
jae
shlb
add
pushf
xchg
add
das
loopne
add
and
add
mov
mov
pop
adc
ds
out
mov
call
mov
sbb
mov
in
es
addr16
cmc
push
pusha
push
jb
sub
fwait
in
jo
sbb
aaa
pop
jae
and
push
fcomps
or
or
jmp
mov
jns
nop
outsb
add
or
add
insb
ret
and
ret
add
test
cmp
adc
inc
sbb
test
inc
test
pop
jg
js
or
icebp
push
mov
inc
jge
and
add
sbbb
cmp
je
mov
jnp
pop
lret
out
fidivs
push
xor
pop
imul
pop
data16
xchg
hlt
jns
int
aam
loopne
je
jae
add
popa
mov
add
jb
jle
stos
or
cmp
or
mov
push
nop
pop
add
push
outsl
out
mov
or
jno
lea
cmpsb
enter
xchg
test
test
test
paddsb
sbb
mov
xor
loopne
ret
cwtl
pop
ret
dec
cmp
cmp
daa
mov
ja
pop
adc
cmp
add
mov
out
repnz
outsb
ds
fwait
imul
rcr
dec
addb
sbb
push
and
inc
cld
aam
add
push
add
cmp
lods
mov
flds
dec
adc
clc
push
xlat
cld
add
sbb
add
out
push
scas
adc
add
xchg
push
sbb
sbb
add
mov
in
jecxz
mov
add
jnp
xchg
xor
inc
pop
and
int3
in
mov
add
add
jl
push
add
mov
jmp
add
xor
cmp
scas
in
sub
push
inc
leave
mov
inc
inc
std
sub
inc
pop
adc
mov
cmp
adcb
imul
jg
cmp
test
mov
push
aaa
int3
sub
mov
add
jo
mov
repnz
ficomps
into
lods
arpl
insb
sub
sub
pop
movsl
push
add
pop
and
rolb
mov
ficompl
movlps
sub
mov
repz
loopne
int
in
or
inc
mov
addb
or
nop
mov
add
pop
orb
inc
lods
sub
pop
mov
rcll
xchg
dec
mov
push
add
pop
inc
add
stc
and
flds
insl
fwait
and
gs
dec
ljmp
movsb
ss
cmp
clc
ret
sbb
mov
ja
scas
rcl
insb
dec
inc
lock
movsb
loop
add
cmpsl
xor
ds
xchg
add
out
les
dec
add
lods
push
fmulp
hlt
xor
add
fsub
pushf
pop
lcall
pop
xor
enter
add
push
adc
cltd
add
ret
add
or
in
push
mov
xchg
cmc
outsl
addb
xlat
iret
dec
fdivl
push
mov
jns
and
pop
mov
std
mov
ljmp
sbb
into
std
sbb
add
sbb
add
aad
pop
insb
stos
pop
add
jne
jp
movsb
adc
jb
dec
sub
mov
push
divps
or
mov
cmc
jg
cmpsl
and
scas
push
arpl
andb
add
push
nop
in
xchg
or
adc
sti
into
push
ret
je
cmp
add
add
or
add
cld
jle
test
or
jae
add
xchg
dec
out
xchg
sub
pop
add
loope
or
lea
cmp
shll
cmpsl
xor
add
out
jp
fld
lds
mov
xchg
rolb
test
push
cli
jae
adc
add
xchg
cmp
add
push
pusha
insl
push
mov
pop
or
push
punpckhwd
movsb
clc
cmp
adc
mov
ror
cmp
test
rcrb
add
out
add
rol
loop
mov
add
mov
dec
add
sub
repnz
add
inc
gs
lret
mov
es
enter
pop
jae
adc
and
mov
sbb
mov
je
iret
cmp
inc
or
dec
jbe
adc
pop
pop
jg
xorb
movsb
or
jmp
adc
lldt
adc
push
push
mov
lock
cmp
push
xchg
inc
adc
push
jmp
adc
es
insb
pop
sbb
sbb
clc
stos
jle
xchg
push
mov
rcr
popf
sub
inc
cmc
jo
sub
addr16
add
or
pop
xlat
in
mov
add
std
nop
jg
out
pushf
mov
test
xchg
sbb
rorl
add
repz
cmpsl
je
adc
lds
mov
mov
push
cmp
and
scas
pop
mov
pop
js
pop
or
add
imul
mov
dec
lock
xor
sbb
insb
add
mov
add
mov
loopne
add
and
insb
dec
push
push
pop
icebp
orb
cltd
and
inc
xor
outsl
shlb
mov
rcl
out
aaa
inc
mov
mov
mov
mov
ljmp
inc
jne
adc
sub
enter
test
dec
or
popa
das
adc
inc
adc
lret
aam
arpl
adc
roll
and
sub
mov
test
flds
jmp
leave
test
imul
mov
push
sbb
popf
xor
xchg
add
stos
jl
push
cmp
xchg
pop
adc
aaa
jp
nop
xor
and
or
data16
inc
pop
adc
imul
mov
sub
jg
push
addl
xor
jle
add
scas
inc
cmp
inc
add
stos
cs
add
sbb
jns
outsl
push
stc
add
sbb
aam
int
cld
cmpsl
or
in
in
and
pop
lahf
xor
push
jns
aam
mov
jno
dec
add
and
incl
cmp
es
dec
nop
jl
icebp
imul
lcall
add
arpl
push
pop
sarb
sbb
add
push
iret
add
add
lsl
popa
int3
jae
insb
mov
push
movsb
inc
push
add
mov
dec
push
adc
lock
js
in
imul
mov
out
push
test
imul
inc
mov
push
call
push
xchg
scas
xlat
pop
sbb
add
push
dec
add
inc
les
outsl
lret
add
add
adc
lea
xchg
cmp
test
out
and
ljmp
jp
jecxz
movsb
lcall
cli
dec
sbb
pop
jns
cmp
add
lret
sub
adc
aad
roll
adc
dec
jo
sti
gs
add
and
or
dec
fldl
xor
jl
or
jge
jne
stos
pushf
sbb
sbb
mov
add
imul
add
add
jo
leave
popf
cli
add
inc
insb
mov
add
call
add
pop
adc
pop
lods
test
dec
xchg
je
js
dec
jmp
add
push
rcr
addb
insb
je
lds
and
out
ds
enter
sbb
fidivl
mov
inc
dec
out
pusha
or
or
pop
out
jnp
movsb
testl
ret
arpl
movsl
xchg
dec
push
mov
adc
jbe
adc
int3
jns
add
pop
fdivl
fs
push
xchg
dec
jecxz
mov
sti
test
cmp
xor
movsb
dec
mov
loopne
jp
lret
inc
and
mov
add
out
dec
mov
pusha
mov
ss
add
push
mov
int
push
push
push
pop
push
jle
jp
add
sbb
push
lock
nop
inc
incl
xor
or
loop
test
add
add
aaa
mov
je
add
and
add
fisttpll
flds
lds
gs
sbb
add
inc
lret
xor
dec
imul
aas
jp
je
add
inc
imul
mov
stc
cwtl
enter
sbb
add
sub
lahf
pusha
sbb
cmp
pop
clc
sbb
pushf
lods
cmpb
mov
fsub
add
sbb
push
or
js
or
or
mov
int3
dec
add
sbb
pop
pop
push
xchg
icebp
and
sub
mov
jne
dec
add
mov
fiadds
pop
xchg
jae
ja
adc
add
negl
cli
xchg
nop
or
pop
add
insb
xchg
cld
out
adcb
inc
imul
addb
jl
cld
mov
sti
inc
pop
mov
add
pop
cmpsl
add
dec
ror
enter
sub
inc
sub
cmp
pusha
pop
cmp
mull
dec
mov
pop
adc
jnp
xlat
add
add
lock
add
pop
dec
dec
in
dec
add
popf
jne
mov
push
dec
in
test
jecxz
mov
inc
fmuls
cmpsb
add
or
pop
cmp
inc
pusha
xchg
add
inc
fcompl
add
shll
stc
add
adc
or
or
insl
add
sbb
mov
test
add
ja
cmp
mov
lcall
pop
cmp
inc
or
jle
cmpsl
push
rorl
xchg
inc
int
nop
pop
incb
das
andb
and
sbb
shrl
movsb
inc
mov
sbbl
sub
call
incl
mov
sub
add
pop
push
pushf
and
aam
xor
add
movsb
jp
ja
loopne
mov
mov
arpl
int3
or
push
repz
sbb
in
dec
inc
add
mov
mov
mov
repz
mov
shlb
jno
cmpsb
or
jnp
pop
mov
jne
andl
in
enter
add
lods
jns
xlat
flds
loop
push
aad
pop
loopne
push
sub
dec
mov
adcb
mov
mov
inc
and
in
inc
aam
sub
adc
adc
dec
shlb
aaa
add
sub
jge
movsb
rclb
stos
add
mov
popa
cmp
in
push
push
dec
mov
fiadds
xor
sbb
and
pusha
lds
pop
inc
push
add
ljmp
xchg
push
aad
int3
mov
inc
les
adc
sti
push
or
and
add
roll
or
mov
ljmp
icebp
fidivl
adc
lods
es
ficoml
adc
pop
add
sbb
pop
loop
jl
add
adc
push
push
cmp
mov
sbbb
div
or
jns
pop
iret
mov
loopne
sub
fs
sub
nop
cmp
ds
or
xor
iret
add
xlat
pushl
xchg
into
cmp
jge
sbb
add
out
jae
jns
add
xor
insb
and
push
mov
xchg
sbb
lds
or
flds
xor
adc
adc
adc
xlat
fxch
imul
jbe
cmp
repz
sub
adc
dec
pop
movsl
add
leave
bound
mov
add
inc
stos
pop
out
enter
adcb
pop
or
inc
xchg
sub
add
rclb
xchg
lret
push
add
mov
icebp
fistpll
add
mov
add
cmc
or
push
lods
mov
iret
outsl
mov
add
data16
std
push
pop
in
imul
out
jle
or
jne
add
push
mov
outsb
fnop
sbb
lcall
add
repz
fisubs
popf
sti
into
dec
mov
xchg
stos
push
cmpb
jb
loope
rorb
mov
add
xchg
mov
xchg
flds
bound
pop
mov
inc
xchg
incl
add
das
inc
pushf
cmpsl
dec
mov
idivl
mov
or
sub
jle
add
in
gs
cmp
pop
or
cmp
insl
notl
jns
mov
mov
repnz
dec
in
mov
subl
das
xchg
cmpb
arpl
mov
add
mov
adc
cli
add
inc
mov
and
add
xlat
mov
shrl
and
push
fsubrs
adc
repnz
jge
add
cmp
test
jg
add
inc
lods
add
icebp
gs
pop
sub
movsl
or
sub
cwtl
xor
fimull
jnp
mov
hlt
add
sti
adc
add
inc
pop
pop
pop
push
jae
jmp
outsl
mov
jo
daa
call
std
adc
rol
jle
inc
test
je
add
jp
and
jbe
in
ret
stos
add
negb
push
stos
das
push
or
mov
jp
jo
icebp
lahf
popf
mov
and
fidivrl
or
ret
cs
ss
imul
popa
in
inc
int
leave
aam
mov
imul
pusha
movsl
cmp
push
mov
sub
and
movb
stc
jle
insl
pushf
add
scas
sti
push
movsl
pusha
test
movsb
pop
push
fs
push
movq
cmp
mov
lret
int3
into
out
data16
fdivrs
fucom
add
push
or
shrb
loopne
rorb
mov
mov
push
add
sbb
popa
inc
xor
pop
dec
shlb
mov
lods
add
mov
js
inc
xchg
bound
cmp
pop
pop
cld
push
shlb
jle
xor
push
les
pop
add
push
fwait
adc
dec
stc
inc
add
shlb
test
or
dec
fcomip
mov
popa
es
dec
pop
adc
xchg
add
push
mov
sbb
mov
jb
add
mov
sub
pusha
sbb
pop
pop
repz
shll
into
or
cmp
js
pop
xor
ret
add
push
test
add
inc
xchg
add
sub
mov
fsubrp
mov
add
push
mov
movsl
nop
mov
lret
mov
fnsetpm(287
push
jmp
mov
aad
jp
clc
loopne
push
xorl
pop
mov
cmp
jmp
cmp
rorb
scas
mov
inc
std
push
jno
sub
add
nop
hlt
inc
xchg
fcompl
xor
add
out
and
pop
and
leave
add
push
xchg
push
je
inc
xchg
add
pop
lock
mov
add
setns
pop
pusha
test
test
xchg
test
add
cmp
cmp
cmp
or
bound
xor
push
inc
movsl
popf
add
jle
les
add
mov
inc
cld
cwtl
orb
pop
lcall
add
cli
bound
push
xchg
aam
pop
mov
mov
push
outsl
nop
jg
push
add
ficoms
adc
cmc
jp
push
dec
mov
or
jmp
aas
mov
mov
movsb
jle
add
popa
rcrb
test
out
sub
xchg
or
or
push
lret
ds
decl
cli
faddl
les
sub
sbb
leave
sub
scas
and
xchg
adc
xlat
filds
or
add
sub
mov
dec
xchg
pop
rclb
in
mov
shrb
dec
mov
add
leave
adc
push
xor
push
mov
fcoml
xchg
pop
push
or
mov
pop
outsb
jle
jecxz
inc
xor
adcb
push
in
out
add
iret
or
lods
popf
pop
add
imul
xlat
repnz
pop
xor
and
inc
adcb
xchg
add
lahf
shl
call
lea
dec
push
andb
push
outsl
mov
add
mov
mov
mov
push
or
jmp
test
aad
xchg
fdivp
push
mov
pop
or
mov
rcpps
stos
scas
loopne
xchg
std
jecxz
add
in
push
cmc
and
xor
mov
fcomps
roll
mov
cmp
and
mov
es
mov
adc
cmc
test
nop
or
rcrb
ljmp
fsub
mov
mov
rcll
cmp
int3
xchg
inc
insl
mov
lea
lret
lds
inc
inc
mov
add
sbb
gs
push
ret
push
jne
rcrb
mov
adcl
rcrl
cmp
movsl
mov
xor
adc
stos
add
cmp
ret
mov
enter
push
test
pop
inc
inc
out
jno
fwait
xchg
inc
mov
pmaxub
aam
inc
dec
lock
xchg
dec
inc
jns
dec
addb
pop
push
popa
adcl
rcrb
cmpsl
sub
add
stos
adc
xor
imul
xorb
fsts
ret
mov
fs
sti
adcb
js
xchg
outsb
add
cmp
cmp
or
insl
adc
or
int3
pop
dec
inc
inc
incb
xor
mov
xor
std
outsb
out
add
inc
or
add
push
fdiv
mov
push
add
lahf
push
dec
repz
xchg
xor
sub
jno
cmp
rolb
int3
inc
cmpsl
and
mov
pop
jle
add
aaa
xor
jg
sahf
bound
fldenv
xor
pop
into
ja
sbb
add
push
repz
jb
add
shl
cmp
pop
add
push
aaa
les
cli
inc
or
test
dec
nop
xchg
enter
sarl
xor
loope
jbe
scas
int3
clc
jne
fstpl
add
add
popa
mov
add
data16
cld
fidivs
lock
jp
insb
insb
mov
mov
xor
int
jle
sbb
dec
test
pop
idivl
out
add
and
rep
inc
mov
mov
loop
sub
loopne
pop
jnp
cmpsb
outsl
fimuls
xlat
dec
add
push
inc
cltd
dec
sub
add
or
outsl
shrb
inc
cwtl
out
adc
pop
add
fmulp
mov
xlat
push
sbb
bound
xor
xor
and
mov
ljmp
sub
adc
mov
ret
pop
pusha
pushf
test
push
pop
ss
movsb
sub
adc
add
push
jns
faddl
das
push
cmc
lret
pop
pop
inc
bswap
cmp
pop
sbb
sub
fistpl
add
lock
mov
add
inc
subl
enter
push
clc
adc
add
xchg
xchg
bound
xchg
movsl
call
xor
hlt
sarb
cmc
push
and
add
movsl
mov
pop
orb
push
add
stos
push
cmp
pop
push
dec
out
pop
nop
adc
pusha
aam
cmpsl
dec
insl
jmp
pop
inc
lods
lods
push
cld
bswap
adc
flds
in
add
ret
inc
add
pop
adc
or
fldt
loope
sbb
stos
add
mov
mov
sarl
int
in
or
rcrb
jecxz
jg
mov
out
idivb
add
lock
sbb
inc
add
sti
jle
repz
int
in
adc
jmp
outsb
pop
rorl
movsl
call
cmp
test
lahf
or
pop
add
inc
or
pop
ret
sbbl
add
push
mov
adc
sub
pop
jmp
mov
xor
mov
xor
push
loope
push
fwait
jg
pop
clc
mov
add
add
lock
add
out
insb
lds
sbb
fistpll
dec
or
push
xor
in
pop
std
and
cs
les
sbb
push
ror
add
aad
dec
jmp
add
jb
cmp
push
mov
push
add
call
mov
push
jecxz
shlb
insl
push
sub
rcll
cmpsl
lret
mov
cmp
xchg
xchg
sbb
adc
pop
pop
fidivrl
sub
les
jecxz
mov
adc
sahf
jne
sub
xor
or
fxch
or
ret
ret
inc
add
sub
pop
andb
jb
push
mov
jo
mov
lods
insl
loopne
rcll
adc
in
mov
shrb
push
jbe
dec
mov
addl
add
rcrb
or
and
subb
pusha
aad
dec
fwait
aam
flds
jne
sub
and
mov
lods
mov
cwtl
fadds
outsb
or
jl
xor
cs
mov
clc
add
xor
mov
pop
out
movb
movsb
repnz
cmp
es
add
sbb
adc
xor
out
mov
sbb
lret
enter
clc
cwtl
sbb
fcoms
out
sub
cmp
cmp
daa
test
sbb
ljmp
clc
mov
fiadds
push
xor
pop
enter
mov
adc
add
sti
or
and
inc
pop
jmp
xor
mov
lret
ljmp
inc
jns
decb
jnp
add
add
push
test
fsubr
cmp
arpl
mov
adc
add
fidivs
pusha
sbb
add
sbb
xor
or
idivb
or
dec
fmull
stc
test
xchg
imul
enter
adc
scas
into
add
xor
add
dec
dec
js
ficompl
icebp
xchg
mov
ja
or
add
sbb
rcrl
call
pop
das
add
incb
cltd
cli
xchg
sbb
jl
loop
add
adc
imul
loop
js
popa
ret
aaa
mov
jl
add
call
cmp
sub
aam
in
into
xchg
add
inc
popa
sti
and
ss
and
dec
rolb
in
adc
jo
sub
rolb
inc
xchg
inc
ljmp
mov
cmp
js
and
xchg
pop
mov
push
and
popf
add
jo
addr16
mov
pop
xlat
sbb
test
cmpsl
xor
sarb
or
js
push
inc
fs
pop
add
test
mov
cmp
arpl
fldcw
out
lock
mov
mov
call
in
adc
mov
cmp
nop
add
aad
icebp
xchg
xlat
or
cwtl
mov
jg
mov
loope
xchg
nop
mov
popa
sub
cwtl
dec
push
stos
or
or
jmp
push
add
dec
int3
jo
adc
es
pop
add
cmp
xor
or
jne
add
lea
cmp
pop
mov
xlat
xor
adc
iret
cwtl
fwait
dec
adc
cmp
stc
hlt
push
push
push
xchg
je
add
movsl
aas
mov
xor
call
out
ss
add
jmp
movsb
mov
sub
jne
or
and
cli
xchg
pop
int3
or
xorb
shrb
fmuls
add
test
lret
out
xchg
jmp
cmp
xor
xor
test
push
lea
sarb
fadds
sub
jne
bswap
and
mov
jle
out
add
call
add
mov
dec
jns
test
rcrb
adc
pop
test
ja
cli
aaa
mov
leave
xor
add
mov
hlt
daa
mov
add
std
mov
push
jl
cs
fildl
mov
movl
mov
bound
lcall
mov
popa
push
mov
imulb
jl
jg
lcall
and
shlb
test
lret
xchg
push
sbb
sti
pop
mov
add
cmpsb
sub
cmp
jno
lds
adc
adc
clc
lock
test
add
sti
cmp
pop
data16
adc
mov
and
cmp
movsl
ljmp
les
sti
mov
and
cwtl
mov
sub
daa
or
cmp
std
add
stos
mov
add
rcll
pop
pop
push
dec
mov
jl
mov
out
jne
out
push
mov
inc
dec
sbb
fucomp
add
mov
add
xor
jnp
and
cmp
push
rclb
bnd
add
xchg
inc
xor
dec
xlat
mov
test
add
sbb
test
cld
push
or
popf
mov
je
loopne
push
movsb
adc
xor
mov
stos
xor
dec
cmc
ret
and
loopne
and
shlb
inc
or
andl
daa
xchg
xchg
sbb
add
clc
add
mov
jge
pop
add
adc
sti
jmp
or
lahf
rcr
outsl
add
adc
add
jg
inc
pushf
mov
mov
les
inc
mov
jmp
fbstp
or
mov
outsb
add
rcll
cmp
mov
cmpsb
icebp
add
jne
and
pop
scas
jl
int
xor
push
push
sub
jle
mov
mov
inc
add
dec
popa
mov
mov
iret
push
cmp
xlat
daa
js
add
mov
sti
addr16
jns
psubusb
fwait
loopne
fisttpl
mov
dec
loop
enter
mov
adc
add
out
fsubrl
adc
cwtl
mov
mov
pop
push
pop
push
push
xchg
mov
add
and
add
cmc
lret
dec
cmpsb
rcll
rclb
push
push
repnz
les
inc
mov
arpl
mov
adc
push
add
cmp
xor
icebp
push
std
cmp
jo
adc
inc
movsb
jp
cli
les
or
sub
shlb
adc
mov
pop
shrl
mov
mov
mov
jl
sub
addr16
push
repnz
or
pop
mov
mov
aas
jo
loopne
push
pusha
jmp
rolb
jmp
adc
xchg
push
cmp
adc
les
imul
xor
jne
bound
pop
push
pop
loop
add
pop
dec
lock
add
pop
testb
sub
add
xchg
mov
and
add
sbb
sub
mov
inc
xchg
orb
mov
movsb
cvtps2pi
pop
add
or
sub
aas
mov
mov
pop
movsl
add
push
xchg
shlb
mov
pop
bound
add
push
call
sarl
xchg
inc
add
adc
in
filds
add
out
loop
or
cmc
loop
sarb
mov
lock
cmp
movsb
js
add
cmpsb
push
adc
rcr
pop
movsb
xor
xchg
or
and
rolb
jae
aas
mov
test
pusha
sub
add
popa
das
leave
mov
dec
mov
and
sbb
icebp
cmc
or
sub
push
int3
sbb
add
jns
dec
out
ficomps
fiaddl
mov
cs
cmc
dec
aaa
dec
adc
cmp
adc
testl
stos
imul
dec
jl
imul
mov
out
mov
fwait
or
pop
and
cwtl
cmpsb
add
negb
add
and
mov
insl
in
fstpl
insb
es
dec
mov
mov
sahf
xor
push
stos
aas
iret
push
cwtl
xchg
ret
mov
add
loope
add
pop
xor
cmc
shrb
pop
or
loop
outsl
add
pushf
xor
xor
lock
push
adc
cmp
or
add
cwtl
jo
adc
or
sbb
mov
mov
lock
adc
adc
dec
and
jmp
test
add
xor
xchg
inc
lock
sbb
flds
sahf
clc
add
loope
cld
mov
movsl
adc
xchg
dec
pop
add
popf
cmpb
cs
inc
mov
test
adc
fisubrl
lods
or
xchg
jnp
and
out
xchg
and
lahf
pushf
push
cltd
xchg
and
mov
adc
movsl
lods
ljmp
cmp
insl
fildl
test
xor
out
and
cld
sbb
inc
repnz
push
shl
push
test
pop
and
add
loop
imul
aaa
loopne
fidivrs
and
orb
and
and
ja
lcall
int3
enter
fiadds
mov
stos
add
push
mov
xchg
rol
fsubs
xor
xchg
push
push
jecxz
add
repz
dec
mov
add
cs
into
orb
mov
out
jp
cltd
test
xchg
add
mov
mov
in
xchg
mov
sbb
adcb
jecxz
add
mov
mov
mov
sbb
sahf
jno
rcl
mov
loope
enter
je
adc
or
xor
xor
adcb
pop
sub
test
test
lret
dec
mov
mov
pop
inc
jns
imulb
jl
pop
clc
xor
insb
stos
pop
fldl
rcrl
mov
enter
and
dec
pop
lods
loopne
mov
mov
frstor
call
popf
pop
add
sub
repnz
ret
adc
xchg
add
push
mov
push
mov
pop
jbe
loopne
fiadds
and
jmp
cli
jecxz
cld
ret
xchg
mov
sbb
xchg
mov
sbb
lahf
pop
jnp
inc
lods
pop
incl
lods
repz
pop
or
fistpl
jno
pop
xchg
dec
mov
out
jb
add
add
add
add
dec
adc
scas
and
dec
nop
pop
lret
aam
fstl
jae
iret
mov
and
pop
adcb
mov
add
sbb
mov
repnz
insl
pop
in
adcl
lea
pop
pop
mov
mov
inc
in
js
adc
dec
xor
mov
mov
mov
fidivs
shrb
iret
add
sarb
fdivrs
dec
cmp
scas
shl
add
mov
jmp
push
imul
ds
andb
jl
inc
pop
jns
add
xchg
mov
ret
ret
hlt
xchg
jmp
adcb
ljmp
add
loop
jae
push
cmp
sbb
mov
call
sbb
lcall
loop
add
push
dec
mov
push
pushf
out
cmp
cmp
mov
mov
in
sub
mov
dec
lock
sarl
and
jae
or
pop
add
rol
in
and
arpl
push
cmp
cmp
cmp
add
int3
std
loope
cmp
test
enter
push
or
dec
fmull
push
xchg
and
push
add
test
ljmp
adc
inc
adc
xor
clc
and
sbb
push
cmp
hlt
ljmp
sahf
hlt
loopne
push
push
adc
mov
jmp
cmpsl
cmc
jg
rol
clc
or
mov
stc
xor
cmp
adc
add
inc
xlat
outsl
push
jp
cmpsb
rol
lods
mov
lahf
out
negl
repnz
xchg
test
add
mov
pop
out
xchg
add
scas
in
aas
inc
mov
js
xorb
es
aam
ja
les
scas
add
lods
int
stos
inc
jns
out
clc
addr16
iret
add
push
movsl
pop
stos
in
sub
lods
bnd
adc
loopne
mov
xchg
and
mov
push
mov
das
arpl
xchg
mov
jmp
dec
push
jle
or
test
mov
mov
int
push
imul
int
frstor
xlat
xchg
mov
push
sub
pop
mov
in
add
mov
es
jge
and
pop
or
test
adcl
fwait
pop
mov
adc
insb
rcrl
add
lds
mov
test
fadds
sub
add
mov
xchg
test
inc
hlt
aas
cmc
loop
nop
sub
jns
push
mov
add
test
shl
sub
test
repnz
cld
sbb
mov
add
jb
add
fsubrs
jbe
pop
adc
or
xlat
cli
js
or
enter
repz
push
aaa
sbb
or
or
enter
and
add
out
shlb
in
stc
sarb
sbb
pop
dec
enter
dec
out
push
test
mov
push
mov
hlt
aad
shlb
fcmovu
sbb
lods
ds
jae
mov
jno
push
dec
ret
call
imul
ja
lock
cwtl
push
enter
dec
ficompl
pop
in
add
dec
sub
je
and
sbbl
xchg
pusha
js
pop
jne
pop
and
cld
mov
xchg
add
add
stc
int3
add
push
adc
nop
add
ss
mov
or
jnp
aam
js
adc
sub
pop
mov
loop
adc
inc
xor
and
fwait
push
faddl
loopne
hlt
cs
sub
pop
pop
mov
and
sub
test
mov
jne
nop
lcall
mov
call
jmp
lock
mov
push
int3
lcall
mov
fiaddl
sbb
idivb
xchg
jae
sub
xchg
and
dec
mov
adc
test
jmp
lods
jbe
mov
inc
mov
cmp
pop
int3
add
cmp
or
andb
add
jbe
lahf
pop
mov
int3
das
daa
mov
sbb
adcb
loop
sbb
dec
outsl
nop
add
xlat
fistps
add
popf
pushf
hlt
sbb
mov
jnp
fwait
xor
js
sahf
pop
pop
dec
aaa
mov
jno
cwtl
xchg
add
sahf
pop
push
imul
pop
mov
mulb
jnp
lock
pop
cmp
ljmp
test
bswap
cli
sti
cmp
loopne
mov
out
mov
pop
jo
flds
adc
pop
sbb
mov
jp
add
xchg
movsl
cmp
sub
cmp
call
sbb
fistpl
add
jb
dec
add
adc
aam
das
sar
in
inc
movntps
scas
xchg
inc
lret
sbb
mov
adc
bound
mov
cld
add
outsb
addb
and
std
adc
in
pop
incb
lds
lahf
add
and
outsb
shl
mov
lds
add
add
addb
mov
add
daa
xchg
dec
in
es
mov
add
pop
jae
mov
dec
or
cmp
push
jge,pt
add
ljmp
lock
mov
leave
push
lods
sbb
mov
fcoms
xor
iret
push
adc
add
lcall
add
fwait
pop
xchg
cli
es
fdivrl
hlt
lea
add
or
mov
mov
loopne
add
push
cmc
test
in
add
popf
adc
out
fisttpll
xor
cli
cmp
sub
shl
in
push
jp
jmp
loopne
data16
test
nop
dec
push
mov
dec
push
mov
or
stc
add
pop
call
ret
sub
mov
rclb
sub
out
test
aas
cmp
mov
mov
mov
add
mov
jecxz
ss
bound
add
in
xor
lcall
aaa
mov
push
lea
add
fnstsw
nop
hlt
push
outsl
fs
mov
mov
add
xlat
inc
inc
add
int3
arpl
sub
pop
sub
push
add
lds
xor
jbe
sbb
pop
xorl
hlt
sbb
xor
push
xor
pop
loopne
fldcw
ss
add
add
call
lret
xor
andl
jo
dec
jmp
je
push
or
push
popf
cmp
inc
fsubrs
mov
clc
add
int3
xor
js
repnz
add
jp
dec
pop
out
add
jle
sub
add
ljmp
add
add
cltd
int
inc
in
pop
jnp
mov
add
mov
dec
push
jle
add
jecxz
aam
or
in
or
dec
jp
add
outsl
stos
in
push
sub
fcompl
lret
int
dec
xchg
movsb
pop
adc
rclb
enter
dec
push
xor
je
sub
lds
shl
xor
or
dec
lea
movntps
jae
jbe
add
bound
ds
addr16
mov
adc
inc
out
mov
clc
push
or
nop
jnp,pn
fsts
outsb
mov
lods
cmc
mov
sahf
xchg
popf
add
test
xchg
nop
in
cmpb
push
dec
mov
jge
lock
xor
sbb
movsl
pop
pusha
inc
test
test
cmp
mov
push
add
xor
mov
repnz
push
lock
and
pop
mov
mov
in
xor
xor
rcr
mov
xchg
and
rorl
jge
icebp
ret
jo
outsb
sbb
mov
bnd
cmp
push
push
jno
adc
add
mov
sub
rorb
mov
lahf
adc
add
mov
inc
add
xor
sub
lret
jns
cmp
ficoml
out
imul
and
cmp
jg
and
and
add
add
pop
push
nop
bound
and
incl
stc
fisubrs
std
ret
aas
ljmp
lahf
lods
in
push
sbb
mul
adc
push
add
push
xrelease
int
dec
sub
sbb
lret
push
loopne
insb
repnz
incb
cmpsl
lahf
jno
les
mov
fadds
pop
add
sub
in
inc
push
pop
lea
dec
imulb
cmc
adc
xlat
inc
rolb
jmp
mov
add
subl
cmpsb
in
adc
jmp
add
data16
pop
enter
popf
stos
mov
cmp
aaa
cmp
add
shl
test
insl
sub
lock
inc
mov
and
lods
mov
fists
sbb
int3
mov
adc
jg
es
add
inc
test
inc
test
add
cmp
push
in
lcall
fcoms
movsb
leave
sldt
mov
jae
nop
filds
push
je
push
cmp
test
sbb
cmovs
pop
dec
scas
pop
addb
add
out
test
mov
xchg
sbb
xchg
push
mov
rolb
lahf
lret
pop
repnz
pop
add
hlt
les
stos
mov
scas
or
inc
pop
add
nop
and
inc
movsl
lock
inc
push
sahf
arpl
popl
mov
dec
inc
enter
loopne
std
mov
mov
cwtl
test
mov
adc
and
mov
cmpsb
jge
mov
addr16
loopne
push
lret
and
fwait
mov
test
andb
push
mov
data16
sbb
lds
sub
sbb
sbb
cmc
dec
xor
cmp
divb
inc
adc
sub
aam
inc
mov
mov
movsl
std
jae
stos
adc
jo
xor
sbb
xor
aas
add
fiadds
fstpl
sub
lret
push
jb
ret
and
test
sub
sub
aaa
fsubr
sub
adc
pusha
sbb
pop
sub
clc
clc
push
push
testb
and
and
mov
add
lods
jnp
add
push
mov
ss
and
xor
das
subl
push
adc
lcall
arpl
inc
sub
loop
enter
jne
gs
pop
xchg
cli
data16
push
fiaddl
mov
push
push
js
clc
inc
call
pop
mov
mov
push
jg
lods
jge
roll
loop
test
mov
out
cmpsb
addb
aaa
cli
mov
push
fsubs
je
movsb
pop
sub
cld
lock
add
mov
test
add
js
jno
add
test
cmp
and
fcompl
movsb
pop
add
jle
addb
test
add
fcmovnb
popa
rclb
popf
in
fsub
leave
mov
xor
sarb
ret
bound
and
scas
jge
loop
faddl
adc
sbb
xchg
jg
jns
sub
sub
xor
aad
pop
mov
sar
testl
mov
mov
rorb
cmp
sub
add
push
outsl
sub
cmp
jae
leave
pop
dec
es
add
popf
nop
adc
xor
cmp
fsub
cmpsl
add
add
mov
add
movsl
mov
imul
mov
add
push
and
add
adc
mov
dec
das
xor
insb
jbe
add
mov
pop
hlt
or
sub
inc
sbb
std
mov
jno
icebp
lock
mov
loop
add
mov
xchg
lcall
nop
pop
add
mov
cmp
repnz
jge
cmpsl
add
testl
add
subb
xor
pop
inc
xchg
sbb
adc
mov
hlt
ds
adc
jge
int3
or
jle
subl
ficoml
shll
mov
lods
mov
adcb
jl
repz
fs
bt
sub
outsl
push
add
pop
jbe
jmp
jb
fwait
out
add
ret
test
add
nop
mov
cs
sub
jge
rorb
repnz
or
mov
or
push
es
test
sub
inc
iret
jbe
add
and
push
sbbb
sbb
popf
mov
jl
sub
scas
int
or
ret
lds
pop
dec
icebp
sbb
fsubrp
jle
scas
or
add
cmp
pushf
je
testb
ret
loopne
ror
lahf
add
insl
out
lds
push
sarb
and
movsb
popf
roll
int3
icebp
lods
jecxz
mov
pop
andb
aad
inc
sbb
jae
movl
lret
dec
jp
push
repnz
scas
std
ret
ret
sub
sub
dec
push
es
repnz
mov
scas
mov
add
cltd
into
fcomps
fimull
xor
rorl
jo
push
jmp
xchg
call
stc
cmc
sub
push
pop
scas
mov
test
rolb
imul
mov
push
add
ret
push
xor
andb
pop
add
xor
jmp
neg
add
cmpsb
inc
aam
in
add
xorb
repnz
or
cltd
movb
cmpsb
insb
adc
in
daa
add
int
pop
aad
sbb
dec
jp
popa
loop
out
adcb
popa
jae
jbe
add
ja
cltd
add
scas
aas
daa
cmp
decl
aam
mov
add
xchg
test
pop
lahf
testl
clc
mov
mov
sqrtps
adc
mov
lcall
dec
mov
push
out
add
daa
enter
push
in
push
imul
arpl
mov
xchg
in
mov
into
mov
stos
add
and
sahf
add
lods
sub
ficomps
adc
cmp
incl
fdivrl
mov
mov
ljmp
adc
mov
add
sbb
test
mov
pop
shrb
jg
xchg
add
ds
shrl
wbinvd
scas
add
fldcw
push
fnstsw
jge
les
pop
sub
xchg
mov
insl
push
xchg
rcll
nop
es
xor
and
sarl
aam
add
mov
push
and
add
mov
leave
stc
mov
imul
cmp
jo
les
push
loop
aas
addr16
add
lret
in
add
inc
rcr
movb
andb
push
jae
roll
adc
adc
loopne
xchg
add
dec
add
push
mov
mov
add
sbb
add
andl
in
adc
ret
loop
mov
dec
pusha
xor
into
or
add
push
jnp
std
hlt
cmp
hlt
cmp
sbb
aam
gs
jns
jmp
nop
lret
roll
xchg
push
push
dec
scas
addr16
sub
add
dec
cmp
add
xchg
add
std
outsb
jns
pop
pushf
sub
notb
adc
rolb
dec
fdivl
lea
xchg
enter
xlat
sti
aas
ds
mov
dec
dec
and
loope
xchg
lods
inc
push
inc
sbb
cmpsl
inc
inc
ffreep
jle
push
add
push
call
push
pop
add
fdivrl
xchg
pop
add
repz
add
jo
xorb
test
push
or
jnp
cmp
sbb
movsb
ljmp
xorb
jecxz
out
or
je
mov
pop
add
movsl
icebp
inc
add
fwait
in
dec
push
pop
pop
xor
sbb
cmc
push
sahf
rorb
repnz
and
inc
and
and
or
sbb
sbb
push
lret
test
add
movsl
pusha
pop
rcr
test
jo
xchg
add
mov
xlat
push
push
lock
xchg
inc
call
stc
in
jle
add
push
mov
add
add
aas
pop
mov
mov
in
mov
and
add
fmull
jo
cmp
and
rol
xchg
dec
add
sbbb
push
pop
and
insl
rorb
dec
stos
xor
arpl
and
add
sub
add
or
lcall
cmp
xlat
xchg
fbld
push
add
push
ss
fsubs
fisubs
out
push
pop
sahf
mov
mov
inc
loopne
and
pop
xchg
inc
out
pop
add
shll
add
test
sbb
je
stos
pop
add
adc
in
add
cltd
pop
add
test
cmc
movsb
push
lret
mov
in
push
ja
add
andl
add
inc
push
xchg
cwtl
pop
std
cmp
cmpsl
adc
and
outsb
adc
cmp
arpl
les
add
outsb
sub
pop
test
hlt
nop
add
add
into
mov
add
sbb
cmpsl
add
inc
ds
sbb
ret
dec
push
jge
andl
fildll
mov
and
imul
faddl
mov
add
std
mov
xchg
add
nop
lea
jg
adc
xchg
and
rorb
cltd
mov
pop
or
aaa
cmc
sub
imul
or
inc
inc
fadds
inc
loopne
inc
add
dec
pop
ret
lahf
add
int3
sahf
adc
loope
mov
jns
ja
add
cmp
imul
cmc
push
out
add
dec
adc
add
mov
pop
mov
push
xchg
fnstsw
jmp
outsl
or
sub
fsubs
mov
outsl
inc
jb
mov
pminub
dec
xor
jl
jo
arpl
in
xchg
add
mov
aam
xlat
jnp
lcall
sub
es
push
push
adc
jo
add
push
out
cmpsl
fs
cmpb
dec
xchg
pop
xchg
setp
cmpsl
cld
add
cmp
imul
fbld
into
movsb
mov
pop
scas
push
jb
adc
push
decb
xchg
fs
div
and
and
push
test
clc
insl
cmp
and
push
adc
repnz
add
call
dec
add
ds
push
bound
inc
iret
add
inc
addr16
add
jecxz
jle
test
jl
out
inc
and
xchg
push
add
dec
sub
addb
fs
xchg
mov
mov
adc
iret
cmp
mov
dec
repz
dec
outsl
je
and
fadds
leave
out
mov
lret
dec
pop
xor
push
imul
imul
iret
pop
inc
mov
out
test
pop
add
cld
repnz
clc
cwtl
cmp
pop
repz
pop
stos
push
testb
inc
test
inc
subl
and
sbb
rolb
inc
gs
arpl
add
xlat
mov
push
add
cmc
aaa
add
mov
add
xchg
push
pop
sbb
sarb
push
pop
push
jae
rolb
repz
dec
cmp
mov
sbb
ret
cwtl
pop
mov
movb
rorb
roll
mov
pop
push
mov
jbe
movsb
mov
sti
call
gs
ror
rcrb
and
loopne
pop
push
jb
shrb
sbb
mov
mov
lods
fisttps
add
lahf
sbb
rorl
add
push
fwait
popa
jns
pop
add
ss
or
imul
ret
pop
add
je
in
loop
shlb
pop
add
and
scas
dec
push
add
cmp
jbe
les
add
ret
jge
jno
add
and
mov
inc
jnp
add
andb
aad
xor
cmp
mov
mov
popa
mov
jecxz
stc
mov
jle
ret
ljmp
sub
dec
adcl
shl
fcom
add
lods
aaa
inc
or
add
mov
dec
xchg
mov
std
mov
push
imul
jns
cmp
ret
xor
add
sbb
xor
push
stos
jmp
xorb
add
shll
add
fdivr
jae
add
aad
push
lods
lahf
outsl
add
cmp
sbb
inc
mov
jecxz
jno
lock
xchg
add
dec
mov
pop
test
adc
add
inc
lods
pop
xchg
fbstp
sahf
dec
daa
mov
js
mov
jne
test
out
add
jns
lret
dec
mov
addb
push
test
ret
scas
mov
pop
xlat
cmpb
cmp
push
cmovge
stc
mov
xor
test
mov
cli
or
hlt
pop
add
mulb
add
lock
repnz
xlat
add
lret
cmp
or
and
mov
shlb
push
test
xchg
push
cmp
add
pusha
sbb
cld
addr16
clc
das
test
std
add
xchg
add
cmp
adc
ret
test
std
mov
pop
add
pusha
pusha
in
stos
or
adc
jle
test
sbb
rorb
pop
pop
and
pop
sti
add
sbb
lahf
sbbb
jp
sub
dec
add
mov
pop
das
add
flds
pop
add
sar
int
hlt
dec
pop
or
mov
data16
adc
xlat
jo
aam
fiadds
mov
pusha
or
ds
sbb
mov
pop
xor
add
mov
push
add
rcr
cmp
movl
sub
add
inc
pushf
jp
popl
add
jo
pop
cmp
int3
leave
or
fadds
cld
cwtl
shl
mov
sub
iret
adc
or
adc
por
scas
icebp
push
fld
repnz
sar
mov
pop
repz
mov
sub
ss
scas
rcll
cmc
pop
xor
or
jge
ds
xchg
lret
rcrb
dec
dec
je
mov
or
sar
add
pop
or
xor
cld
xor
adc
in
clc
add
pop
or
ds
or
sub
xor
out
movsb
xchg
adc
cmp
push
mov
lret
jnp
mov
adc
test
sub
push
out
adcb
and
add
arpl
mov
xor
add
xorb
rolb
test
cmp
add
outsb
lret
orl
jp
int3
and
xchg
aaa
pop
pop
cmpsl
mov
and
aas
inc
pop
mov
das
sub
adc
scas
sbb
mov
es
mov
xor
cmp
add
jns
cwtl
test
and
cld
and
aas
sub
cmpb
cld
add
mov
lock
add
add
inc
push
call
in
or
mov
and
lcall
inc
movsb
movb
add
sub
inc
pop
sbb
popf
scas
sub
mov
pop
add
inc
loop
outsl
or
loopne
clc
inc
dec
mov
lods
dec
add
sub
add
jecxz
xlat
out
push
inc
inc
add
es
inc
adc
scas
add
jecxz
add
mov
cltd
dec
add
mov
lods
dec
test
rolb
push
mov
and
movsb
mov
and
add
cmp
fnstsw
pop
je
pop
pop
out
js
aam
xchg
movsb
xchg
inc
sub
pop
call
dec
xor
mov
je
outsl
and
arpl
push
call
jecxz
mov
movsl
inc
cmpl
add
xchg
mov
jl
loop
add
call
xor
xor
add
pop
lret
pusha
and
push
ljmp
les
and
xlat
insb
int3
mov
xchg
rolb
fidivrl
cmc
popa
and
mov
hlt
test
es
pop
fnstcw
add
out
aam
and
push
push
xor
dec
ljmp
jbe
mov
adc
call
lods
mov
jbe
xor
adc
pop
xor
rclb
xchg
in
popf
pop
sub
add
xchg
pop
loope
pop
jns
add
jmp
jecxz
ret
cmp
add
rorl
xor
lret
mov
sbb
inc
aaa
roll
add
shrb
adc
cmpsl
jo
movsb
or
xchg
push
popl
jmp
push
xchg
loopne
mov
dec
aam
push
out
daa
fistpll
repnz
shrb
inc
aam
cmp
jge
push
add
add
jo
mov
jg
fildl
daa
inc
lods
ds
pop
inc
add
push
dec
cmp
pop
cmp
adc
enter
subb
pop
shlb
cld
imul
pusha
xchg
xor
pop
jbe
pop
out
dec
subb
jae
jle
mov
add
push
pop
dec
movsb
xchg
out
push
add
jne
loope
mov
push
fisttpll
fdiv
xchg
out
add
and
outsl
jae
or
outsb
out
pop
pop
nop
push
ja
pusha
lahf
dec
jl
add
pop
int
imul
jns
jmp
es
add
and
fiaddl
pushf
pop
adc
jl
adc
aaa
dec
lock
std
icebp
add
mov
es
sahf
and
dec
pop
rorb
xor
adc
pop
dec
hlt
cld
sub
or
out
test
mov
mov
push
add
test
xor
add
fadd
jecxz
sbb
sar
sbb
push
sbb
aas
mov
lahf
xchg
cmpl
add
or
rcrl
pop
cwtl
add
cmp
mov
sbb
test
xor
adc
adc
mov
test
ja
out
sbb
test
out
add
xor
xorl
sbb
icebp
sbb
jnp
add
xchg
add
mov
leave
mov
call
pop
and
in
lds
rcrl
add
jo
nop
pop
les
adc
mov
sub
addr16
test
xchg
mov
and
les
jmp
inc
push
fcomp
dec
pop
jle
mov
pop
loope
jo
hlt
or
xor
int
mov
adc
sbb
rorb
mov
cwtl
fs
add
mov
add
leave
in
dec
mov
pop
sub
int3
mov
cmp
mov
in
sahf
add
rorb
sub
mov
lea
inc
insl
sub
fs
mov
mov
push
stc
test
cmp
ret
movsb
loopne
cmp
jp
and
xor
push
add
cwtl
jl
cwtl
int3
out
addb
dec
and
lods
push
cs
mov
pop
stos
in
mov
cld
iret
add
push
xor
push
roll
push
xlat
push
adc
adc
push
int3
jmp
push
aaa
flds
add
jecxz
and
and
push
cs
sub
push
insb
mov
push
push
call
inc
sub
xchg
ret
or
push
pop
add
rcl
inc
add
sbb
adc
xchg
mov
pop
xchg
push
popa
lods
call
mov
dec
out
add
stos
jle
xchg
loope
jb
mov
shrb
sbb
mov
adc
sbb
add
jns
in
ljmp
push
dec
loopne
jo
fldenv
rorl
inc
add
pop
push
xchg
mov
cmp
cmc
cmpsl
add
xor
jbe
pop
int
add
pop
mov
adc
xchg
mov
clc
jo
call
iret
ja
cmovs
or
inc
and
add
imul
call
les
fcoms
into
fcoml
sbbb
jo
xchg
push
das
add
mov
lcall
push
mov
dec
xchg
xchg
cld
pop
imul
in
cmp
movsbl
mov
mov
or
cmpsb
inc
jo
pop
jmp
js,pt
add
cmp
push
adc
fadds
testl
popa
cmp
xchg
jecxz
jb
shl
mov
xchg
outsl
int3
fcmovne
jp
sti
lock
and
fisubrs
jne
aas
imul
cs
mov
je
mov
lea
es
lock
aad
dec
pop
cmp
mov
inc
clc
adc
sbb
test
jb
mov
cmp
out
inc
jne
adc
xor
shrl
fistpl
ss
add
push
xor
insl
pop
fnstsw
cwtl
mov
jge
repnz
push
xlat
ja
loopne
mov
adc
mov
mov
push
int
jb
cltd
movl
in
pop
inc
dec
js
add
jb
sub
push
adc
push
and
xor
add
clc
pop
rcr
shll
data16
pop
mov
mov
jnp
adc
sahf
or
jl
pushf
lret
pop
xchg
mov
das
sbb
dec
loop
sbb
mov
sar
faddl
popa
or
push
jnp
pusha
sbb
jo
sbbl
jno
data16
into
pop
pxor
mov
push
and
loope
cmp
cmp
pushf
adc
cmp
ret
xchg
test
xchg
sbb
daa
add
loopne
pop
inc
ret
add
adc
mov
shrl
push
testb
jecxz
adc
add
mov
insb
jge
mov
add
pop
popl
ret
xchg
mov
jmp
mov
fwait
add
test
jo
aam
repnz
add
sbb
mov
pop
cmpsl
xchg
fsubs
pusha
outsb
cwtl
and
adc
dec
mov
or
dec
lods
faddl
sub
jo
pop
mov
loopne
add
in
movhps
ds
inc
das
and
add
adcl
or
pop
adc
sub
inc
fnsave
pusha
adc
out
sbb
ret
add
sub
jmp
scas
mov
ret
insb
std
sub
push
add
mov
ljmp
call
clc
push
xchg
shlb
add
cmp
loope
adc
and
push
xor
jbe
enter
loop
add
push
ret
mov
aaa
call
add
and
add
push
push
pop
repnz
outsl
fiaddl
adc
add
out
xorb
add
pushf
fadds
lahf
add
push
pop
sub
or
inc
xor
sbb
sub
sbb
push
flds
clc
sti
mov
adc
push
and
add
cld
call
inc
xchg
test
ret
and
inc
cmp
mov
and
adc
add
mov
jo
add
push
testb
out
cmp
add
jecxz
in
inc
jno
xorb
mov
aas
add
and
test
xor
push
lsl
and
add
cmp
ficoms
cmp
out
xor
pop
mov
and
inc
xor
push
inc
adc
dec
push
sbb
mov
mov
jge
and
add
mov
adc
ds
sub
add
xor
mov
pop
scas
inc
xor
push
shlb
mov
pop
push
stc
andl
andl
xchg
xor
cltd
jmp
jbe
jl
das
add
test
dec
cmp
xor
dec
jle
ljmp
in
push
mov
dec
leave
loopne
add
fsubs
add
repz
push
jge
imul
adc
add
pusha
shll
lcall
cmp
lahf
adcb
inc
inc
jl
mov
out
xchg
dec
mov
push
orb
mov
add
mov
or
cmp
pop
add
pop
pop
xor
mov
push
xchg
adc
data16
or
das
lods
and
nop
mov
aam
imul
jno
jmp
outsb
jecxz
movsb
and
and
add
mov
icebp
dec
cs
jno
cwtl
xor
jl
test
aad
sbb
mov
pop
cltd
pushf
mov
jl
sahf
pop
cmp
inc
or
test
addr16
ljmp
mov
aam
xor
cmpsl
jb
jg
add
adc
test
in
xchg
sub
psubd
inc
jo
push
add
adc
mov
mov
pop
adc
xor
fisubrs
sub
clc
pop
and
add
add
sbb
xor
mov
adc
add
xor
popa
push
fiaddl
sub
jge
ja
lcall
pop
adc
push
lock
sbb
push
fdiv
pop
add
popl
test
subb
lods
lods
mov
jae
fucom
cmp
enter
addl
test
dec
pop
addr16
mov
adc
inc
cli
sub
dec
jge
ja
ss
jle
pusha
add
stc
pushf
imul
dec
jg
mov
inc
lock
dec
rcrl
adcb
add
mov
xlat
bound
cmc
rcl
and
and
add
push
lds
cmp
fisubl
push
loopne
sbb
xor
dec
mov
mov
incb
addr16
jle
xchg
iret
add
insb
dec
fcompl
adc
or
lock
mov
outsb
mov
cltd
daa
lret
inc
ficompl
push
cmp
push
movsb
pop
mov
add
mov
sti
mov
iret
je
sbb
add
sbb
add
fucom
mov
sbbb
and
jbe
sbb
sub
cmpsl
mov
add
pop
mov
nop
les
mov
jne
js
xchg
out
rol
pusha
cli
sub
int3
mov
ds
rclb
pop
push
je
add
lret
ret
mov
pusha
movsl
cmp
jns
add
test
mov
into
xor
add
jmp
test
add
jp
lcall
scas
shrb
push
jo
adc
xchg
push
fs
xor
add
ret
clc
push
jae
sbb
mov
mov
add
movb
push
test
xchg
sub
clc
in
jmp
in
lea
pushl
mov
mov
iret
sbb
push
pop
cmp
or
arpl
or
lret
pusha
inc
js
cmpsb
pop
and
dec
and
loope
jge
xchg
icebp
mov
jae
xchg
mov
movsl
cmc
or
add
loopne
test
add
xor
loop
jne
mov
loopne
lret
xchg
ret
flds
cmc
cmp
stos
ljmp
or
rclb
lcall
pop
or
pop
mov
adc
shlb
adc
mov
sub
je
lock
test
aam
xchg
inc
scas
ja
rorb
clc
sub
fwait
push
ret
add
sub
out
mov
clc
mov
xor
inc
loopne
ja
push
stos
setnp
and
and
add
mov
add
lock
xchg
icebp
les
adc
or
xchg
and
mov
and
xchg
jp
jns
add
shrb
add
lock
xchg
jne
mov
inc
nop
add
lea
xor
or
add
movsl
pop
push
cmpsb
pop
les
shrl
hlt
inc
xor
inc
imul
jle
subb
fnstsw
push
sub
xchg
fwait
jl
testl
rclb
iret
push
out
jbe
repnz
inc
call
inc
add
mov
cmp
sbb
inc
fldt
adc
xlat
and
add
hlt
add
ret
dec
mov
cli
aad
inc
movsb
jne
push
push
mov
xchg
data16
inc
test
push
add
fdiv
cmp
add
xchg
xchg
add
roll
das
mov
jne
add
roll
and
stc
cmpsb
xor
mov
shlb
pop
jne
stos
loop
in
push
out
cmc
lods
inc
loopne
or
fists
gs
sub
lock
mov
scas
pop
sti
mov
ss
xor
jbe,pn
push
out
mov
pop
push
mov
call
aam
ret
imul
fwait
mov
add
loop
cmp
jbe
adc
roll
push
mov
xchg
out
lods
jge
cmp
mov
pop
jp
dec
pop
push
mov
push
sti
jae
enterw
add
mov
int
fsubl
mov
mov
clc
jno
in
out
cmp
sti
add
pop
sub
mov
add
out
mov
pop
ret
ljmp
pop
out
push
andb
sub
push
pushf
sar
cwtl
adc
or
push
mov
enter
add
ja
dec
sub
or
adc
loopne
add
pop
inc
jne
xchg
mov
lods
mov
mov
mov
sbb
notb
push
pop
lods
sti
mov
mov
jecxz
mov
push
int3
aad
fbld
cmpxchg
adc
dec
pop
xchg
cltd
and
fcmovnu
mov
jp
int
add
in
mov
xchg
and
or
enter
add
and
mov
fcomip
or
add
mov
cs
sub
enter
sub
mov
mov
add
xchg
pushf
ja
ror
mov
pop
movl
add
mov
lret
add
mov
clc
mov
or
divb
fistpl
pop
ret
stc
xorb
push
adc
cwtl
jl
push
std
and
cltd
out
jno
sub
outsl
test
pop
sbb
mov
imul
cs
push
nop
jl
sub
adc
inc
stc
jb
jns
add
mov
fists
cmp
mulps
in
loopne
cmp
shl
inc
pop
rcrb
push
call
outsl
adc
mov
and
jb
sbb
aaa
jns
cwtl
dec
imul
cmp
inc
mov
das
add
sub
jae
add
mov
outsb
repz
cmc
xor
cmp
int
stos
je
push
push
mov
cmp
mov
subb
aam
fsubs
push
add
push
sub
mov
in
je
cmp
cmpsb
addl
loopne
and
and
push
cld
add
dec
mov
push
lahf
movb
daa
jl
add
push
loop
aaa
sub
mov
adc
lods
jb
mov
pop
fnsave
cmpsl
nop
and
push
or
add
cmp
in
cmp
clc
sbb
dec
iret
add
dec
xor
popa
dec
adc
mov
mull
push
adc
jmp
js
and
stc
icebp
insl
xchg
mov
sbb
testl
add
inc
aad
push
popa
mov
sub
add
movsb
and
add
jp
in
pop
icebp
or
adcb
sub
addr16
or
lea
adc
orb
and
in
aam
cmpb
leave
in
popf
seto
dec
dec
add
mov
add
jl
push
xor
fdivl
stc
sub
sbb
sbb
repnz
mov
cmp
inc
sbb
daa
arpl
push
add
movsb
xchg
fs
dec
add
mov
mov
adc
ljmp
inc
rolb
xlat
ret
adc
add
std
lods
lock
xor
fld
xor
cmp
push
shll
ljmp
add
xchg
add
sti
inc
dec
hlt
push
fiaddl
in
jbe
pop
xlat
pop
lods
lods
je
add
flds
add
mov
cltd
sti
and
sbb
movsl
cmp
add
std
cmp
icebp
arpl
and
dec
add
sub
shll
leave
aaa
pusha
pop
and
data16
inc
push
inc
sbb
imul
jecxz
mov
leave
outsl
mov
scas
rorb
shl
mov
in
fldenv
sbb
xchg
xchg
in
cli
push
mov
sbb
cltd
push
inc
in
xorl
xchg
cmpsb
adc
test
rcrb
mov
and
jp
jg
in
popa
pop
invd
mov
pushf
push
fwait
jbe
mov
lock
mov
andb
push
addr16
andl
mov
out
jb
leave
adc
test
mov
cmp
push
dec
imul
js
add
add
sahf
jno
aam
push
pusha
clc
push
sub
sub
jo
or
mov
sbb
lret
jb
popf
fmull
dec
sarl
andb
xor
add
xchg
and
add
add
xor
movsb
ret
adc
rcr
pushf
xor
jmp
add
cwtl
dec
dec
jge
insb
dec
aam
rcrl
clc
or
mov
shlb
mov
jge
xor
cmp
sbb
mov
add
and
or
imul
dec
add
ds
adc
or
stc
add
cmpsb
ss
xor
xor
adc
jl
add
scas
or
xor
xchg
stos
ss
lea
cmpsb
aad
pop
push
ret
int
add
jbe
jmp
es
sub
mov
int
bound
add
xlat
pop
mov
stos
jno
repz
xchg
pop
jge
sub
and
test
in
lods
mov
lods
sbb
xor
sbb
jg
xchg
pushl
push
sub
or
pop
cmpsb
cmp
sub
loop
add
in
mov
sbb
inc
mov
outsb
ret
push
shl
push
add
leave
and
add
push
decb
shlb
push
pop
imul
mov
sbb
sar
cmp
cmp
jne
sarl
add
dec
mov
int
lods
cmp
push
add
sub
xor
add
sbb
mov
and
xchg
int
sti
fdivl
mov
cltd
lods
test
push
or
dec
mov
inc
push
xchg
inc
pop
and
add
xchg
inc
pop
xchg
aam
mov
jmp
outsl
xchg
adc
sub
jae
xchg
loop
ret
movsl
stc
dec
adc
ss
add
stos
insl
imul
pop
pop
sbbl
xchg
mov
sbb
sbb
pop
add
bound
int3
test
xorb
pop
jnp
xor
pop
or
jmp
cmp
mov
add
sbb
ret
and
subb
push
xchg
fstl
lcall
out
lods
in
xchg
jge
and
mov
je
add
cmc
int
andb
lods
add
mov
or
js
add
pop
xor
add
sub
add
xor
mov
aaa
add
outsb
xor
mov
pop
mov
push
scas
add
jns
lret
jb,pn
fildl
mov
iret
add
cmp
pop
sbb
sub
jo
shrl
mov
xchg
lcall
xor
cmp
mov
imul
repz
pop
push
xor
pusha
mov
mov
bound
leave
mov
and
hlt
sbb
movsl
pop
sbb
shl
or
pushf
sub
jmp
inc
loopne
mov
rdpmc
jge
push
imul
xor
insl
cmp
dec
add
in
les
pop
dec
lds
jns
push
andb
mov
push
or
jmp
mov
add
cltd
xchg
insb
popf
and
ret
lret
mov
jo
dec
out
shl
push
popa
sbb
fistps
cmp
fwait
and
pop
addr16
mov
xchg
inc
loopne
enter
or
ljmp
cmpsl
addl
es
mov
add
mov
int3
popf
cmc
jns
imul
aad
cmp
and
push
cmp
mov
mov
adc
incl
add
icebp
fisubl
test
dec
icebp
add
scas
in
sub
por
fnstenv
or
inc
and
jnp
pop
cmc
repnz
imulb
mov
push
insl
sbb
repz
popf
adc
and
cmpsl
add
pop
gs
and
sbb
sbb
sahf
add
inc
repz
mov
pusha
imul
sub
add
addl
mov
adcl
outsl
mov
mov
add
or
xchg
addb
xor
test
into
shll
sub
call
dec
add
in
xchg
fadds
mov
movsl
add
fbstp
adc
sbb
shrb
push
loopne
sub
jne
mov
cmpl
jg
in
jbe
sahf
fwait
cli
fidivs
pushf
add
inc
push
sub
sub
inc
push
rcrl
sbb
mov
aam
add
or
mov
xchg
hlt
lods
test
jnp
mov
test
mov
or
lret
inc
sbb
es
mov
inc
sbbl
mov
scas
add
jle
cmp
js
or
jne
and
jbe
dec
imul
repnz
lahf
sysret
sbb
push
add
jae
add
rorb
or
mov
adc
add
or
pop
arpl
pop
ror
jno
pop
shl
pop
inc
incl
sub
sub
xchg
xchg
xorb
mov
in
repz
idivb
add
das
andb
inc
outsb
dec
adc
and
clc
mov
pop
add
repz
enter
iret
and
inc
loope
stc
dec
mov
add
dec
in
scas
das
insl
jp
adcb
cli
push
divl
add
push
jg
and
jle
cmpsb
rclb
mov
xor
add
roll
loope
or
add
jne
fwait
xor
xor
loope
mov
mov
mov
adc
aam
or
popf
xchg
icebp
andb
push
mov
lret
cmp
lds
sahf
mov
mov
popf
nop
popf
pushf
inc
or
and
movsw
es
sbb
inc
sub
pushf
xor
insb
inc
aas
mov
adc
pop
ja
adc
dec
rol
cld
test
inc
or
insl
push
mov
cli
hlt
mov
insl
arpl
pop
add
int3
rol
push
test
sub
adc
mov
xchg
add
push
cmp
ja
add
das
imul
push
pop
psraw
jns
mov
inc
pop
rol
adc
xchg
data16
or
jmp
push
mov
pusha
push
test
sbb
pop
stos
sbb
sub
movsb
add
adc
clc
push
fldt
mov
test
data16
enter
std
mov
add
xor
in
test
pop
jmp
fisttpll
jae
mov
jle
mov
push
repz
insl
stos
xchg
push
adc
clc
test
add
sub
xchg
pop
xchg
jecxz
syscall
adc
xchg
dec
divl
shr
fcoml
add
fldt
add
test
jmp
ret
jle
mov
leave
adc
mov
in
mov
inc
cwtl
adc
nop
cmpsl
add
jbe
hlt
lods
or
loope
mov
shlb
xor
adc
push
add
flds
sub
lock
and
add
push
sysenter
fsts
das
xchg
xor
sbbb
xchg
stos
lods
inc
psraw
subb
lods
sbb
xchg
cltd
sbb
inc
adc
jle
xchg
jl
imul
sub
mov
popa
loop
pop
add
dec
cmp
lret
bound
popa
sbb
imul
adc
popf
cltd
cmc
lahf
cmp
data16
stos
or
xchg
les
jg
jle
jno
dec
decl
icebp
xor
icebp
push
cmp
add
out
sahf
nop
cmp
scas
mov
test
push
xchg
sub
jle
xchg
xchg
push
subb
lcall
sub
fdivrs
cs
icebp
pop
jl,pt
jmp
jne
adc
push
hlt
jae
and
jb
sbb
jg
mov
dec
push
xchg
mov
fwait
or
sbb
fidivl
aad
push
jnp
cmp
bound
pusha
add
leave
mov
push
xchg
enter
shll
or
lods
mov
iret
mov
inc
or
dec
les
ja
add
sahf
add
stos
fmuls
popa
adc
xchg
mov
and
je
jmp
inc
roll
mov
xor
outsb
and
jg
mov
dec
dec
add
aas
xchg
movsb
scas
andl
loope
loopne
add
mov
and
popa
jle
test
or
dec
lcall
fldcw
adc
sar
jbe
push
das
sub
lods
jo
and
cltd
cmp
jo
in
and
fisttps
cvtpi2ps
clc
test
xorb
xor
dec
push
or
lods
loopne
les
in
mov
lock
dec
rcrb
add
cmp
mov
icebp
dec
cmpsl
xor
jnp
add
stc
fstl
and
mov
lods
dec
inc
mov
mov
mov
mov
inc
fiaddl
fs
addb
lock
sbb
repnz
push
es
sub
jp
add
inc
mov
lods
add
test
lret
daa
cmp
xchg
dec
mov
cwtl
nop
cld
xor
add
mov
mov
add
sub
or
or
loopne
mov
lods
sbb
les
add
rcr
jnp
add
add
std
inc
out
push
inc
mov
mov
or
lds
cld
add
xchg
and
inc
jge
rolb
push
dec
or
adc
jg
fstl
clc
xchg
int3
clc
jle
fimull
in
pusha
jo
data16
add
pop
sahf
std
sbb
cwtl
push
or
xchg
subw
insb
aas
cld
add
out
xchg
or
pop
incb
ds
andb
cs
or
ljmp
pop
push
or
sti
mov
dec
pop
shll
pop
cmp
lods
add
das
popf
stc
mov
jne
out
jecxz
in
and
cmp
fdivrs
call
hlt
test
fsts
or
test
dec
cs
arpl
sarb
inc
or
mov
and
adcl
and
add
cmp
jle
add
mov
or
sub
add
mov
mov
lock
adc
push
add
hlt
sub
dec
fbld
sub
push
push
shlb
pop
daa
xor
fstpl
mov
rolb
int3
addr16
or
mull
aas
andb
fisttpl
mov
add
cmp
mov
or
jg
insb
dec
test
mov
pop
mov
push
jl
push
add
cs
outsl
idivb
int3
cs
or
dec
imul
pop
cltd
icebp
scas
add
pop
xchg
push
out
sarb
addr16
adc
pusha
dec
and
xchg
dec
in
dec
outsl
xchg
or
inc
add
nop
int3
add
int3
nop
call
mov
das
mov
cs
add
pop
arpl
jb
in
adc
jb
jl
jo
sbb
gs
mov
adc
movb
test
andb
add
xchg
jns
and
inc
std
add
mov
sub
filds
mov
mov
roll
jecxz
mov
cmpsb
pop
xchg
sti
repnz
scas
pop
mov
test
xchg
add
fistpll
mov
mov
xchg
pop
add
sbb
out
cmp
mov
xchg
repz
push
pop
movsb
aam
mov
push
mov
xchg
and
addb
dec
or
inc
int3
fists
push
ds
fsubl
add
hlt
mov
and
outsb
daa
nop
or
or
and
lahf
dec
add
cld
int3
mov
jmp
dec
adc
xor
pop
in
rol
sub
sbb
jp
sarb
push
jns
aas
das
cmp
fistl
pop
mov
loopne
xlat
mov
les
xchg
cmp
fnop
or
push
pop
ret
pop
sub
pusha
rolb
stos
mov
aas
in
inc
pop
inc
adc
cmp
int
int3
pop
xor
push
xchg
mov
mov
dec
dec
cltd
call
dec
add
push
inc
xor
fiaddl
mov
fs
inc
push
mov
jbe
jle
inc
jnp
decb
dec
pushf
addb
pop
lcall
lock
mov
add
aaa
cmp
outsl
dec
add
mov
fisttpll
subb
dec
test
push
orl
fsts
sti
inc
pop
mov
fwait
cmpsb
pushf
jb
jle
adc
xor
das
loopne
xchg
idivb
xchg
push
add
aam
or
xor
mov
add
mov
pop
cmp
xchg
xchg
lods
nop
int
orb
shr
jmp
fsubrp
xchg
faddl
popa
leave
cmp
inc
add
xor
add
cmc
in
and
cs
mov
int3
add
xchg
push
test
decl
adc
and
ret
mov
sub
dec
arpl
add
and
mov
cwtl
sub
incl
mov
and
sub
cmpsl
adc
mov
das
and
sahf
pushf
int3
push
out
scas
nop
insl
push
xchg
lock
push
scas
mov
adc
adc
mov
sbbb
mov
inc
popf
ss
mov
mov
orw
xor
xchg
in
sub
mov
jl
jmp
jo
xchg
add
push
push
fildll
rorb
imul
add
or
movsb
push
movsb
cmp
push
cwtl
add
adc
and
std
data16
add
jno
pop
lcall
sbb
rcll
mov
adc
out
adc
add
inc
push
sbb
insb
packuswb
sti
add
lock
jae
xchg
xor
xchg
pushf
cwtl
dec
mov
fsubs
or
xchg
sub
cmpsb
call
and
inc
loope
xor
xor
dec
rolb
xor
jns
scas
push
cmp
push
mov
mov
inc
mov
xor
gs
add
int
shrl
add
adc
jo
sbb
mov
jmp
popf
aaa
mov
repnz
and
xchg
jmp
cmp
jb
and
add
push
out
cwtl
outsb
xchg
int3
imul
into
and
push
adc
rcrb
dec
into
js
mov
repnz
add
fnstcw
popa
clc
xchg
and
orb
sub
test
pusha
add
jno
into
ljmp
fisttpll
or
mov
sbb
or
bound
dec
xchg
lods
and
dec
lock
repz
xchg
jg
leave
icebp
cltd
and
ficoms
xchg
pop
push
mov
and
inc
popa
test
lds
dec
out
sub
outsb
stos
rorl
into
pop
add
and
and
jb
push
add
jns
lds
clc
mov
fistpl
dec
aam
xchg
fldl
mov
and
jno
in
adc
sub
inc
add
lea
insb
mulb
out
sahf
rorb
add
push
fsin
mov
xor
or
negl
mov
sarb
xor
out
mov
dec
or
sbb
and
pop
jno
sub
aam
and
out
add
into
push
fimuls
xor
dec
xor
jnp
sub
adc
addb
mov
or
dec
push
sbb
int
add
les
test
imul
std
add
xchg
loopne
fstl
es
or
inc
xor
cmp
cs
adc
push
pop
cld
pop
cmpsl
pop
and
mov
enter
mov
cmp
pop
mov
int3
or
fisttps
jno
xor
lods
push
test
mov
fs
fadds
andb
sahf
mov
rcpps
fcmove
and
mov
jecxz
sbb
int
scas
dec
push
fdivs
cmc
add
mov
js
int3
lods
ficompl
push
push
inc
push
add
sbb
in
or
xor
push
and
lahf
mov
pop
cwtl
pushf
ffree
jp
and
dec
xchg
loopne
int
mov
xchg
fnstcw
es
mov
ja
xlat
and
sbb
pop
and
sbb
or
sbb
cmc
xchg
pop
jb
fisttpll
les
les
in
pop
pushf
pusha
ljmp
daa
out
shr
sub
xor
add
add
jge
and
cmp
sbb
push
adc
in
add
jno
push
fdivp
inc
xchg
sbb
inc
gs
jg
jle
mov
ja
add
xor
lock
and
fdivs
push
add
add
fisttps
dec
ds
test
inc
adc
clc
lret
xorb
add
lods
or
pop
pusha
xchg
add
ret
out
mov
push
xchg
xchg
sbb
lods
sub
fwait
pop
sbb
jb
add
cmp
popa
mov
sbb
es
mov
aam
mov
jmp
sub
push
and
test
sbb
loopne
add
xor
pop
repnz
cs
data16
shlb
cmp
jmp
xchg
or
or
sbb
cltd
call
xor
scas
or
and
inc
mov
lret
mov
addl
loope
cmp
loopne
xor
test
add
and
xor
cmpsb
cmp
or
sbbb
mov
cli
lea
add
xchg
sbb
int3
add
xor
sahf
les
xchg
xchg
xchg
aam
sub
inc
xchg
push
sbb
add
pop
add
or
xlat
inc
and
add
aas
test
add
dec
gs
add
nop
add
add
fnstenv
sub
nop
lods
xor
gs
ficompl
dec
inc
nop
cmp
insb
ror
pop
addl
jbe
je
enter
jo
mov
outsl
mov
adc
stc
add
add
dec
xchg
sbb
sbbl
push
fsubl
push
mov
xchg
push
popa
mov
jle
mov
xchg
adc
andl
adc
int3
add
jo
jno
xor
out
loopne
cs
int
call
cld
add
loope
push
and
or
pusha
adc
inc
es
data16
add
pop
inc
test
add
loop
roll
adc
xor
insb
test
bound
push
in
leave
in
pop
sub
or
stc
jecxz
add
fistl
inc
adc
pop
pop
shlb
imul
add
push
insl
lock
push
iret
sub
add
adc
sub
sbb
fldenv
add
jl
fidivs
jp
jne
adc
cmp
popf
icebp
or
mov
and
mov
pushf
nop
adc
xchg
mov
or
and
xchg
jecxz
cmp
inc
enter
push
repz
cs
mov
push
fs
mov
notb
sbb
add
lea
std
xor
xchg
fs
leave
gs
mov
hlt
xchg
pop
xchg
inc
sbb
push
or
inc
movsb
lods
pop
jo
cwtl
cmp
movl
icebp
std
sbb
fbld
sbb
cmp
lods
xlat
lods
fildl
test
pop
jmp
mov
das
movsl
or
xchg
cwtl
nop
xchg
xchg
cwtl
mov
mov
cmp
out
mov
fwait
pushf
dec
imul
inc
and
faddl
push
inc
pushf
movsl
mov
mov
cwtl
add
pop
push
or
andb
jnp
andb
push
mov
js
push
mov
and
add
mov
and
out
push
push
and
insl
loopne
add
jae
enter
roll
add
push
add
cmpsl
and
insl
pusha
xchg
push
add
add
adc
xchg
jecxz
xchg
sub
push
dec
pop
das
add
pop
lds
mov
push
mov
mov
lock
popa
jnp
testl
sarb
stc
mov
popa
pop
sbb
push
add
add
push
pop
std
movb
mov
push
xor
push
mov
int
mov
jae
xchg
cmpsb
inc
loop
mov
test
jle
adc
sub
sbb
gs
je
mov
xor
pop
or
aaa
fcoml
icebp
jl
lods
jmp
nop
mov
rolb
std
mov
add
int3
add
mov
leave
in
add
popa
jp
test
dec
sub
pushw
adc
mov
or
fisttpll
sbb
in
ja
xchg
mov
cmc
pop
es
add
leave
aaa
jb
jo
cmp
in
jne
or
subl
or
call
xor
ucomiss
mov
pusha
fwait
psubq
cmp
out
inc
cltd
stos
or
in
sbb
pusha
or
lods
sub
in
hlt
jecxz
sub
repnz
xorl
in
pop
xor
add
add
and
pop
cwtl
add
mov
mov
outsl
nop
popl
cmp
mov
sub
test
and
movsb
cmp
and
aad
pop
and
rolb
xchg
mov
xor
dec
xchg
xor
je
subb
hlt
lods
cld
mov
mov
and
add
dec
das
sbb
sub
les
push
adc
sub
loope
adc
das
sbb
sub
xlat
fidivs
bnd
lods
or
adc
movsbl
pop
xor
test
add
lods
and
mov
fdivl
xchg
cmp
xor
loope
sbb
cmp
add
mov
inc
outsb
enter
pusha
std
and
mov
add
dec
add
cmc
pop
dec
popf
sub
add
jmp
xchg
inc
jb
xorps
pop
jne
fstps
addr16
pushf
add
add
cmp
xorb
push
notb
outsb
sbb
in
xchg
loope
xchg
add
in
and
inc
in
xchg
add
and
jl
loopne
pop
mov
mov
data16
mov
add
sbb
pusha
in
jecxz
mov
lcall
ljmp
lock
fwait
add
cli
add
or
dec
data16
or
scas
out
adc
lcall
icebp
jge
fistps
mov
inc
sub
or
in
mov
add
lock
je
repz
xchg
inc
cmpsl
add
xor
xor
inc
daa
dec
lods
add
xchg
cmc
stos
dec
jns
inc
fadds
xchg
and
test
enter
add
fs
sahf
ja
pushf
jo
pushf
aam
and
pop
outsl
int3
call
fildl
fsubrs
stos
arpl
xor
sub
pop
inc
adc
test
jecxz
je
jg
cwtl
mov
ror
xor
sub
mov
rcrl
adc
dec
pushf
inc
jo
add
inc
in
shl
ja
sub
mov
and
pusha
cmc
cmp
ds
ret
cmp
addb
cmp
mov
ds
add
xchg
repz
sub
pop
stos
or
or
test
sbb
or
dec
mov
lret
add
rcl
fildl
jbe
pop
push
inc
enter
push
shrb
dec
mov
in
loope
clc
mov
jl
xchg
add
adc
movsl
hlt
pusha
loopne
mov
cltd
mov
jmp
mov
add
sbb
push
pop
pop
clc
adc
add
xchg
or
gs
push
repz
jg
mov
rcrl
ret
cmp
into
popa
cmp
mov
adc
in
ret
xor
add
mov
js
jg
sub
mov
shlb
jmp
push
or
cmc
and
adc
inc
loopne
repz
jnp
push
ret
notb
test
pop
push
or
add
or
mov
xor
gs
daa
xchg
jno
and
ljmp
cltd
pop
orb
cs
dec
push
inc
jle
pop
inc
fstps
lock
mov
test
mov
or
fcomps
int3
pop
mov
imul
push
jnp
push
fiaddl
lods
xchg
mov
xor
int
jo
push
inc
jbe
mov
push
aas
mov
mov
cli
mov
stos
add
inc
pop
mov
stos
add
add
xchg
dec
sar
push
pop
dec
mov
adc
mov
shll
cmpsb
cmpsw
add
xchg
les
add
fildll
js
add
pop
add
dec
add
lret
mov
lods
pop
pop
rcrb
ds
jg
movsl
loopne
fwait
dec
dec
shlb
std
insb
pusha
or
sbb
ret
cmp
addb
shrb
inc
fsubl
enter
add
add
mov
xor
fchs
icebp
aad
cltd
or
pop
rorb
or
incb
icebp
fcomps
cmp
dec
sbb
testb
pop
jecxz
or
pop
mov
inc
cmp
xchg
fmuls
ds
loopne
sbb
adc
hlt
pop
pop
mov
rclb
cld
pop
ret
dec
adc
lods
add
cmc
xchg
cwtl
sub
rol
pop
movl
add
jno
mov
lret
cs
push
popa
add
xor
insl
lcall
mov
decb
xor
inc
xchg
sub
daa
mov
je
test
jae
adc
fcomps
sarb
cld
das
repz
or
imul
add
push
mov
add
clc
ret
xchg
cltd
orb
imul
mov
bound
mov
or
adc
lcall
add
cmp
out
sub
sub
mov
je
adc
xchg
pop
dec
push
adc
or
dec
incl
mov
or
add
test
cmc
add
test
fs
mov
dec
cld
filds
cmpsl
sub
loope
ljmp
and
fdiv
push
pop
xchg
push
dec
les
mov
or
mov
jb
or
fisubs
inc
outsb
add
pushf
push
sub
pop
pop
mov
andl
inc
imul
mov
add
cmp
test
js
or
hlt
xchg
mov
sbb
inc
or
jo
mov
cmp
jmp
repz
dec
push
pushf
xchg
or
xor
mov
add
scas
pop
push
sub
mov
cmc
stc
fcoml
add
testl
outsb
jle
mov
add
mov
test
lds
xchg
jecxz
call
jmp
jo
adc
add
out
mov
test
sbb
push
mov
pop
ds
cmp
add
mov
add
push
das
sbb
push
loopne
sbb
mov
adcb
or
add
leave
jne
adc
test
xor
je
fs
pop
gs
or
add
inc
cli
int3
add
cmp
aam
dec
and
add
sti
popl
add
iret
fsubp
push
dec
imul
cmp
fcmove
jl
pop
push
sbb
jae
push
cmp
xchg
xchg
mov
xor
add
fistpll
adc
test
daa
sbb
outsb
faddl
cmp
xchg
jl
xchg
clc
adc
and
sub
int
mov
subb
pop
fcoms
mov
test
xchg
cltd
mov
stos
cli
and
inc
pop
jno
push
push
xchg
sub
lock
aam
add
lahf
pop
add
std
jne
inc
out
jno
add
popf
mov
fcmovu
les
inc
xchg
and
sbb
mov
lcall
ficompl
xorl
sbb
push
pop
outsl
jo
sub
jg
shrl
test
or
add
fisttpll
cmp
xchg
aas
subl
mov
sbb
cltd
cmpsb
or
scas
fcompl
fwait
add
stos
cmp
xchg
pop
or
imul
add
adc
lods
loopne
loop
add
int3
sbb
seta
stc
or
push
adc
push
and
add
jne
mov
sub
test
jb
inc
addr16
inc
pushf
dec
cmp
add
jge
rorb
add
add
jne
repnz
test
or
js
in
add
mov
call
int3
adc
lret
orl
push
adcb
in
xlat
xor
repz
fnstsw
aas
rclb
mov
xor
mov
sbb
data16
dec
adc
inc
jg
in
push
mov
adc
in
xchg
dec
add
xchg
dec
pushf
adc
rorl
mov
adcl
push
push
xchg
xchg
add
scas
xchg
jle
jo
mov
rorb
sub
sahf
mov
mov
in
pop
test
ljmp
arpl
out
add
mov
nop
scas
xchg
inc
js
lods
pop
iret
jae
xor
aas
add
xlat
jns
or
arpl
add
fldt
add
outsl
ljmp
rolb
hlt
pusha
pop
pop
fistps
inc
arpl
adc
add
scas
pop
sbb
and
and
xor
sub
add
push
jo
push
mov
dec
jl
mov
in
add
popf
rcll
loop
add
dec
sub
ret
pushf
mov
rclb
sub
sbb
add
mov
push
pop
sub
enter
xchg
mov
and
or
inc
sub
cmp
lods
add
dec
out
lods
in
xor
mov
je
mov
in
nop
ja
adc
cmp
pop
jae
data16
in
mov
push
add
or
daa
sub
pop
xor
xchg
sbbl
das
stos
pop
test
out
pop
mov
repnz
rcr
loopne
or
sbb
push
ret
frstor
hlt
pop
mov
inc
cmc
or
pop
xchg
pop
aas
sbb
add
or
inc
mov
incl
jp
add
and
shrb
bound
adc
xchg
mov
pop
sub
sahf
add
movsl
jecxz
jmp
pop
pop
jp
inc
xlat
aam
xchg
out
jb
mov
outsb
adc
mov
rolb
sub
mov
adc
jno
mov
xor
or
lahf
adc
int3
fucomp
out
and
sti
xor
push
test
or
mov
add
lods
push
addr16
mov
inc
mov
sbb
mov
xchg
add
jmp
mov
cwtl
push
xor
xchg
popa
push
roll
or
pusha
xchg
adc
pop
rcl
add
xor
repz
lret
add
shrl
test
fadds
add
or
leave
xor
repz
mov
loopne
scas
xlat
sub
push
pusha
fdivl
add
mov
pop
shll
dec
dec
mov
xchg
cld
lods
and
jne
shufps
xchg
test
or
fwait
cwtl
or
sbb
jnp
pop
add
inc
shlb
cli
sbbb
nop
cmp
mov
xor
xor
daa
imul
add
ja
mov
imul
dec
xor
icebp
mov
cli
outsl
add
imul
rclb
or
dec
das
cmp
jbe
subb
fdivs
cwtl
sub
scas
mov
push
dec
xchg
fdivs
sbb
cmp
inc
xchg
sbbb
lods
or
lea
mov
aaa
pop
adc
push
add
std
push
dec
or
cmpb
sbb
push
or
push
push
xlat
aas
rolb
lods
jmp
add
push
incb
adc
int3
shrb
mov
ret
frstor
mov
dec
inc
push
in
fs
push
fidivrs
xor
aam
dec
ret
inc
push
popf
mov
sub
hlt
jae
xchg
insb
mov
xor
int3
jns
enter
jge
dec
test
and
add
lret
push
les
sub
add
adc
sbb
cmpsl
fadd
addb
rcrb
fisubs
pop
xchg
ljmp
out
ds
add
or
pop
adc
push
push
pop
icebp
nop
fs
mov
sub
repz
sub
imul
fdivl
dec
mov
adc
dec
add
jbe
loopne
aas
imul
or
pushf
jmp
adc
pop
xchg
aaa
das
mov
mov
mov
push
xor
xchg
and
mov
push
cwtl
nop
mov
xor
punpckhwd
fdivrl
js
aaa
insl
inc
mov
mov
ret
cs
push
sub
or
dec
mov
and
and
mov
push
fisubl
inc
push
shll
dec
lods
fadds
push
push
pushf
mov
inc
add
stos
fmuls
pop
xchg
add
insb
pop
adc
js
mov
add
scas
adc
add
adc
jno
fdivs
cmp
add
jg
negb
shrb
inc
jmp
frstor
sbb
fildl
jmp
xor
fiadds
xchg
ret
jo
push
cmp
push
sbb
adc
outsl
test
rolb
pop
fidivs
in
nop
les
mov
pop
add
or
xor
dec
cmpsb
test
loop
add
jl
movsl
or
cs
jae
enter
xor
lods
push
cli
inc
mov
loop
int3
faddl
cmpsb
roll
divb
jns
jecxz
inc
adc
lahf
mov
repz
fldt
add
popa
push
ror
data16
sahf
xor
cld
mov
mov
cmp
adcl
enter
xor
add
call
or
inc
and
adc
add
pushf
dec
pop
cmp
add
rol
jl
in
adc
mov
mov
or
filds
mov
aaa
divb
sbb
inc
mov
mov
push
mov
adc
pusha
cmpb
dec
sub
jns
lods
pusha
mov
fmull
add
and
rcl
loopne
jle
mov
inc
addr16
filds
push
mov
add
movl
dec
xor
mov
dec
je
mov
sbb
int3
pop
add
cld
adc
dec
sub
std
stos
and
inc
mov
xchg
les
dec
xchg
lret
mov
mov
fildl
mov
inc
ret
orl
in
ds
mov
insb
shlb
xchg
cs
adc
or
mov
es
xchg
push
dec
pop
imul
dec
push
ret
fldenv
imul
aam
movsb
jae
pop
outsb
in
fadds
adc
push
imul
loopne
mov
pop
hlt
dec
inc
icebp
rolb
ss
add
stc
fldl2t
repz
jle
jmp
xchg
push
adc
in
mov
xchg
mov
jbe
add
push
shlb
or
jg
mov
aad
mov
dec
iret
iret
out
mov
test
xor
lock
xchg
daa
jno
cmp
jl
add
fdivrp
mov
jno
or
aam
outsl
add
pop
jmp
cs
sbb
filds
add
je
nop
xor
dec
mov
jecxz
mov
hlt
mov
mov
sub
dec
cmp
sbb
icebp
mov
dec
add
pusha
add
cmp
mov
mov
inc
rcrb
clc
add
cmp
sub
fwait
cmp
pop
call
mov
jg
xchg
andb
into
jb
ret
xchg
mov
leave
shrb
add
xchg
add
stc
lds
mov
std
ljmp
ret
pop
xor
enter
fsub
mov
add
sbb
sbb
and
lods
push
adc
add
push
cld
xor
mov
xor
mov
push
pop
int3
pusha
in
mov
mov
fs
adc
jecxz
push
repnz
mov
mov
dec
and
pop
xchg
into
adc
add
dec
test
lcall
mov
js
lods
adc
and
cmp
mov
xchg
sbb
mov
xchg
xchg
pop
dec
adc
add
mov
movsl
push
inc
lock
scas
and
call
or
add
sbb
fmull
mov
jbe
mov
into
adc
dec
push
hlt
cli
push
lock
inc
dec
pop
mov
pusha
cltd
sbb
imul
jmp
in
cld
xchg
add
pop
mov
pop
icebp
xchg
loopne
popa
mov
arpl
into
out
add
sbb
addl
inc
or
and
pop
push
jmp
imull
push
pop
add
and
cltd
inc
pop
cli
cmc
jg
movsb
xor
repnz
push
lds
xchg
and
or
inc
add
out
repz
mov
scas
inc
add
repnz
fnstcw
add
add
std
sub
xor
shl
mov
in
test
add
mov
outsl
push
sub
sbb
std
or
mov
adc
clc
cld
addr16
push
das
push
xchg
shlb
push
hlt
sub
les
imul
jecxz
imul
daa
loop
mov
xor
add
push
sub
and
hlt
popa
add
fmull
insb
jnp
or
jle
mov
sbb
push
gs
add
jmp
inc
lods
push
ret
jl
stos
pushf
add
pop
mov
mov
lock
lret
std
divps
fsub
loopne
int3
xor
adc
into
dec
or
push
mov
cs
xchg
loopne
cs
daa
data16
imul
cs
inc
fdivrs
ficoms
xchg
push
inc
pop
sbb
fimuls
nop
adc
adc
rolb
sub
and
push
push
testl
out
pop
imul
sub
add
les
jg
pop
push
pop
mov
leave
mov
lock
add
and
andps
xlat
test
out
cmp
addb
xchg
xor
or
enter
inc
mov
int3
add
or
fidivs
int
shlb
repz
pop
dec
and
add
jl
push
mov
add
pop
inc
insl
pop
pusha
add
sbb
mov
xchg
lods
fs
mov
je
add
inc
icebp
ljmp
pop
inc
cmp
adc
pop
xchg
loopne
repz
fcmove
les
cmp
xor
sub
mov
dec
mov
cmpsl
add
cmpsb
fmuls
mov
add
mov
je
fsubs
xchg
mov
les
std
popa
inc
mov
enter
lahf
push
fwait
jne
icebp
cmp
pop
and
adcl
sub
test
pop
jmp
sbb
sub
int3
nop
or
ret
dec
les
bnd
fstpt
scas
cwtl
dec
or
dec
pop
div
enter
incb
push
subb
pop
lcall
or
jno
push
sbb
clc
mov
inc
lods
jo
mov
dec
or
jo
mov
movsb
test
push
mov
jl
sti
fisttpl
in
mov
or
orb
dec
ja
sbb
sbb
xor
adc
ret
mov
mov
jo
add
inc
xchg
pusha
dec
jbe
mov
or
loopne
sub
mov
adc
inc
jne
pop
mulb
pop
jmp
cwtl
add
cs
add
adcl
sbb
pop
int3
add
mov
into
and
xchg
negb
cld
push
enter
mov
add
imul
subl
xor
jae
sbb
jns
ljmp
add
call
mov
aad
iret
jns
mov
xchg
sub
pop
push
addb
movl
mov
cs
dec
loope
and
jo
xchg
jge
pop
or
xor
clc
pop
cmp
adc
dec
das
orb
add
cld
mov
cmp
mov
push
mov
fdivrl
xchg
sub
add
xor
fwait
or
adc
and
push
push
ljmp
or
pop
lods
pop
inc
adc
mov
jmp
jae
imul
adc
cmp
ficoml
add
test
arpl
add
popf
enter
daa
loopne
mov
mov
pop
push
ja
mulb
and
inc
mov
add
jae
xchg
jl
cld
pop
notb
sub
pushf
add
daa
xchg
adc
mov
mov
push
inc
add
decb
jmp
add
fidivl
stos
push
push
pop
or
les
mov
add
fs
mov
add
fstl
dec
pop
xchg
rolb
cmc
mov
pusha
push
add
testl
nop
pop
pop
inc
add
out
sti
fdivp
sbb
ds
scas
test
add
stos
sub
pushf
add
add
inc
and
dec
in
nop
loope
mov
dec
fcmovnb
rorb
xchg
xor
arpl
push
xchg
mov
adc
adc
addb
xchg
push
movsb
ret
inc
or
add
jg
rcrb
in
add
leave
or
xchg
jae
enter
inc
sbb
int
fcoms
xchg
lock
adcb
int3
cli
stos
fiadds
cmpsb
pushl
mov
das
add
test
in
add
pop
loope
or
dec
jns
add
xchg
fidivs
or
les
cmpsl
repz
js
fiadds
test
xchg
or
pop
fucomip
push
cltd
nop
cmp
sahf
adc
and
sbb
xlat
jg
out
add
jo
dec
into
enter
mov
or
pop
je
push
add
mov
adc
fimuls
into
test
jo
hlt
push
sub
scas
adc
dec
mov
inc
pop
xchg
jo
jmp
or
addr16
mov
mov
es
sub
mov
sbb
test
imul
dec
xor
clc
sbb
cli
cmp
ret
lods
frstor
pop
rolb
dec
fs
add
ret
mov
add
and
sub
cld
pop
scas
test
mov
dec
cmc
pop
sbb
and
xchg
pop
je
xchg
sbb
pop
push
daa
cmp
xchg
add
sub
test
inc
repnz
shrl
xchg
movl
sarb
mov
xchg
cld
push
loope
cmpsb
jb
fs
mov
int3
mov
add
imul
dec
js
adc
das
andb
fistps
inc
icebp
pop
mov
inc
mov
pop
or
cmp
add
popf
mov
mov
dec
cs
loopne
cli
adc
add
pandn
mov
and
pop
in
ret
aad
fsubrs
mov
lcall
arpl
popf
ljmp
push
xchg
mov
repnz
adc
test
sub
mov
xchg
rcrb
cmpb
sbb
push
cld
test
fcoml
push
popf
sahf
sub
loop
mov
out
jno
loope
mov
jbe
in
lcall
and
inc
cltd
lret
inc
hlt
gs
mov
cmp
jne
add
andl
fimuls
into
pushf
in
add
loope
in
add
push
jl
pop
push
sbb
add
inc
mov
in
iret
jo
push
adc
or
adc
mov
add
ret
add
xchg
cmp
add
data16
enter
add
outsl
add
or
adc
sub
pusha
inc
push
push
mov
add
pushf
pop
movl
daa
sbb
sub
std
mov
aad
add
test
add
call
xor
dec
divb
add
mov
dec
add
addb
dec
jae
rcrb
or
and
jb
mov
mov
movsl
nop
aad
gs
popa
pop
es
inc
loop
add
jae
jne
push
and
pop
jo
xchg
push
push
sub
mov
sbb
imul
mov
adc
jecxz
gs
in
lret
or
enter
mov
mov
mov
mov
inc
fmuls
enter
pop
sub
test
push
add
mov
push
xlat
mov
jle
hlt
mov
cmc
adc
testb
in
cmp
es
cli
repnz
mov
mov
cld
dec
in
add
cmp
add
push
adc
sbb
pop
sahf
inc
jecxz
repnz
fiadds
shll
int3
pusha
aam
inc
dec
and
mov
mov
in
push
cmp
daa
jbe
cmp
sub
pop
hlt
jl
adcl
aad
pushf
in
xsave
popf
mov
mov
decb
cmp
repnz
shrl
add
pop
bound
std
sub
adcb
adc
mov
pop
fsubp
lret
popa
xchg
push
jae
outsl
push
xchg
mov
fisttpl
xor
das
insl
lock
call
out
enter
cwtl
cwtl
push
or
add
fucomp
inc
data16
push
sub
add
mov
pop
cmp
xchg
cmp
push
stc
or
inc
dec
xchg
cwtl
aas
sbb
pusha
inc
add
roll
or
xor
js
arpl
cwtl
test
adc
add
inc
in
insb
inc
xchg
flds
mov
daa
scas
cs
les
and
daa
int
xor
inc
pushf
repz
repnz
mov
push
mov
pop
add
add
dec
inc
dec
inc
jl
sub
scas
inc
mov
mov
xchg
scas
xchg
adc
xor
xor
jmp
adc
push
gs
and
jo
adc
pop
js
inc
loop
cmpb
test
xchg
push
mov
xchg
sub
hlt
add
and
test
pop
jmp
xor
add
jmp
cmp
adc
lahf
out
loop
add
ds
sub
addb
push
repz
sub
sub
inc
enter
cmp
repz
add
pop
js
xor
inc
add
mov
mov
push
add
sbb
jno
mov
cmp
sub
add
or
jl
jmp
and
push
inc
cmpb
mov
and
push
push
jecxz
jp
pop
or
sbb
xorb
sub
lahf
xchg
xchg
pop
push
mov
add
int3
dec
das
je
fcoms
sbbl
scas
pop
inc
and
lret
inc
adcl
add
xchg
add
and
add
mov
cltd
into
jno
mov
inc
pop
ret
pop
jne
inc
mov
sub
add
push
enter
sbb
push
loopne
mov
inc
inc
lds
add
loope
insb
fiadds
xchg
les
push
fcompl
add
push
dec
mov
xchg
fcom
sahf
movsb
and
and
inc
pusha
inc
sbb
or
cmp
mov
push
int
in
sbb
sbb
lds
popa
sbb
cmpl
or
push
push
out
push
cmp
loopne
fildl
cmp
xchg
jmp
dec
test
mov
mov
pop
in
in
popa
jns
add
adc
out
inc
rcr
add
adc
movsb
mov
sub
jl
jg
mov
mov
iret
out
and
test
outsl
in
fadd
xchg
fcoms
in
out
add
pop
add
fldl
imul
loope
in
add
adc
xchg
push
and
add
popf
sahf
mov
add
aas
sub
add
xchg
jl
dec
push
lods
decl
fmul
add
add
cwtl
jl
sub
lret
adc
add
and
xorl
hlt
cld
sub
and
lcall
or
sub
and
jbe
cmp
sbb
sti
or
mov
sub
cmp
hlt
pop
adc
sbb
in
dec
cmp
inc
sub
and
imul
mov
add
sti
adc
cmpsb
insl
test
add
ror
xor
jns
inc
in
and
enter
xlat
sub
mov
mov
add
into
pop
jb
sub
xor
xchg
cltd
int3
lods
les
add
inc
mov
pop
sub
push
jmp
adc
add
popf
push
sub
rcrb
mov
jmp
inc
mov
in
out
xchg
test
ds
call
hlt
push
sbb
add
dec
fadd
mov
and
inc
cmp
add
mov
xchg
mov
mov
add
testl
xchg
sub
add
jae
pop
ljmp
int
add
repz
repnz
mov
adc
mov
std
inc
shll
add
call
lods
mov
inc
add
in
and
push
das
jne
js
addr16
aad
push
adcb
aam
xchg
mov
cld
and
fstpl
inc
arpl
rcr
pop
adcb
mov
mov
nop
xor
or
pop
aad
sbb
sub
insl
cmovo
fwait
cmp
or
push
je
nop
inc
mov
inc
ss
sarb
jnp
add
push
fnstsw
dec
test
pusha
and
out
clc
push
lret
xchg
and
lods
decb
mov
dec
push
fdivp
fldl
aas
je
or
inc
adc
call
mov
jno
pop
push
mov
jae
loop
add
cmpsl
jb
shl
rolb
adcl
movsb
fstpl
or
das
repz
outsl
add
in
dec
out
push
cmpsl
sbb
mov
cltd
jge
add
xor
or
jle
jmp
pop
addl
cmp
dec
or
jns
jle
xchg
cwtl
pop
mov
or
sub
scas
or
lcall
test
in
add
pop
es
pusha
popf
dec
shr
jecxz
add
push
pop
mov
enter
add
pushf
add
aas
out
pop
into
rol
add
mov
push
popf
push
mov
mov
mov
add
xchg
std
inc
enter
mov
xor
cmp
jg
inc
add
push
in
add
pop
ljmp
and
mov
es
add
stos
ficoms
mov
test
sbb
fidivl
or
fwait
lahf
ja
leave
or
cwtl
sbb
jp
mov
dec
add
clc
lods
push
jo
add
xchg
out
or
jbe
and
in
insb
dec
in
repnz
add
mov
add
insb
sbb
aam
call
adc
cld
lret
or
orb
or
lcall
pop
mov
lcall
dec
hlt
mov
mov
lahf
and
mov
icebp
jbe
and
sub
loop
in
shlb
add
sub
in
mov
and
mov
addb
xchg
jl
add
imul
adc
adc
sbb
push
hlt
jae
cwtl
test
pop
sarl
insl
loop
pusha
add
jp
pop
push
inc
lret
xor
push
int3
cmp
scas
cs
pop
xchg
outsb
xchg
das
xor
mov
add
gs
data16
test
or
icebp
jo
dec
cltd
inc
pusha
stc
inc
outsl
cmp
ret
fisttpll
jo
lods
xchg
or
and
cmp
xchg
adc
mov
mov
add
inc
jl
add
sbb
sti
rcrb
push
ret
or
out
mov
jge
popa
clc
cmp
orb
ljmp
add
ja
loopne
pop
pusha
cmp
repnz
and
pop
inc
mov
fs
outsb
push
mov
ss
adc
pop
adc
fnstsw
fwait
sub
push
nop
in
bound
or
or
andb
or
add
mov
mov
adc
jle
sub
xchg
in
pusha
sub
pop
insl
pop
push
pop
les
pop
cmc
push
push
int3
add
pop
rcl
sti
mov
mov
pop
fldl
mov
pushf
mov
mov
jbe
sbb
cmpsl
daa
ljmp
mov
add
dec
icebp
ja
aam
xlat
and
cld
sub
clc
data16
add
into
xchg
xchg
jle
lock
test
mov
or
ret
xchg
lcall
nop
push
pop
or
les
mov
cltd
mov
mulb
insl
cmp
add
push
push
hlt
cld
xchg
sub
cmp
mov
cltd
shrb
movsb
lcall
addb
pushf
ret
fs
jns
and
outsl
pusha
shl
sahf
mov
pop
sub
jl
cmp
mov
sub
ja
in
dec
mov
jo
add
test
mov
mov
and
popa
rcrl
stos
add
data16
or
pop
xchg
lcall
add
mov
pop
loopne
xor
into
pop
popf
add
ret
add
sbb
stos
xchg
dec
sub
pop
cmp
repz
imul
shlb
add
in
pushf
mov
das
fiadds
xchg
and
jle
xchg
std
cmp
or
push
lock
add
mov
inc
sub
js
cld
imul
dec
pop
xchg
int
clc
xor
sbb
sbb
adc
and
inc
repnz
jo
xor
in
xlat
mov
cld
mov
inc
push
lock
pop
shlb
bound
xchg
cmp
add
shl
push
and
push
inc
movsl
jle
aad
int3
add
popf
rorb
mov
or
push
dec
jbe
sbb
fiadds
les
rcll
or
daa
push
pop
das
jmp
sbb
sub
jle
shrl
cmc
adc
dec
and
sbb
sbb
pushf
aad
fstpl
cs
pop
sbb
jno
lahf
pop
aaa
dec
ret
sti
test
lcall
and
pop
shrl
fbld
fnstcw
out
lods
mov
add
xlat
sbb
in
sub
push
andl
inc
sbb
dec
xchg
shrl
inc
inc
sub
arpl
sub
mov
cmp
fnstenv
mov
rcrl
jp
jo
test
test
rorb
inc
sti
aas
fwait
xorb
out
pop
mov
and
or
push
stos
and
xor
pop
jmp
sbb
sbb
les
fcmovnb
bound
jg
cwtl
or
mov
pop
xor
test
mov
addr16
clc
fmul
pop
imul
enter
add
lock
inc
fmuls
cmp
sbb
inc
push
add
dec
cmp
pop
ss
dec
add
adc
pop
mov
add
mov
movsb
push
fildl
stc
push
jle
inc
and
cli
or
mov
add
dec
insl
mov
movsl
or
aad
xchg
pop
and
push
xor
fildl
mov
mov
rcrl
in
ret
leave
pop
mov
push
xchg
jmp
popa
xor
incb
add
inc
jg
in
in
sub
and
lods
push
movsl
test
adcb
mov
cs
mov
push
or
inc
pop
xchg
mov
push
pop
mov
lock
cld
js
loop
rcr
in
push
inc
arpl
cmp
dec
jnp
sbb
jle
pop
mov
aam
and
in
sub
cmp
push
mov
xchg
xchg
mov
sti
xchg
xchg
mov
or
rol
add
jbe
mov
adc
std
repnz
and
pushf
pusha
add
sub
pusha
addr16
in
dec
mov
and
push
sbb
jne
repnz
jmp
lods
mov
pushf
mov
push
sub
scas
mov
xchg
lock
or
inc
jl
push
ss
lahf
add
icebp
xor
arpl
into
cwtl
ror
sarb
ja
sbb
adc
xor
fbld
add
iret
jae
loopne
jmp
mov
pop
adcb
cmp
lods
fs
sbb
fcomps
test
sub
adc
addl
inc
imul
or
jg
pop
pop
stos
push
add
std
out
call
sbb
loopne
jl
xchg
les
sbb
imul
inc
add
mov
in
sarl
lock
lods
mov
cmpsl
push
in
mov
or
in
add
dec
add
adc
cmp
pop
cli
cmp
inc
jle
cli
sub
lahf
cmp
push
xchg
xor
mov
mov
dec
int3
and
sti
insb
sub
sub
andb
or
lods
cmc
push
inc
sbb
insb
sub
dec
xchg
insl
sbb
adc
jns
jmp
testl
aam
test
add
adc
jbe
lret
add
mov
jge
ja
jnp
dec
pop
push
add
icebp
jmp
test
add
mov
inc
dec
xor
and
pop
int
mov
cmpsb
movsb
loope
jp
mov
mov
or
data16
or
jne
sub
jns
xchg
int3
or
cwtl
xor
scas
dec
jae
mov
push
xchg
pop
jg
and
lods
add
xor
sub
dec
dec
xchg
pushf
sbb
mov
adc
inc
xor
mov
popf
data16
popa
jno
sbb
das
push
jns
addr16
fmulp
and
popf
xchg
addb
lret
cs
aas
rcr
lds
mov
insb
or
push
mov
mov
into
lods
cmpb
inc
sbbb
sti
or
call
pop
nop
xchg
sahf
sub
add
js
jns
in
pusha
in
cld
add
or
sbb
xchg
add
mov
dec
test
and
std
mov
push
mov
jecxz
lods
mov
out
cmp
je
lcall
pop
loop
add
int3
mov
add
mov
add
sub
add
pop
test
xchg
pop
fstl
mov
sbb
jbe
mov
rol
push
pop
jmp
mov
aam
inc
das
mov
pop
dec
xchg
orb
psubq
sbb
negb
add
jae
sbb
ds
mov
jo
dec
test
mov
out
add
jp
dec
leave
mov
mov
pusha
pushl
mov
mov
inc
mov
or
xchg
arpl
sbb
pop
mov
sub
lock
sbb
test
sub
addr16
sub
cli
decl
dec
xchg
fwait
outsb
pusha
pushf
cmp
in
cmc
adc
pop
sbb
mov
movsl
pop
sbb
and
in
add
mov
pop
xor
cmp
std
and
add
pop
push
cmp
ret
push
inc
clc
aaa
add
js
sbb
or
add
pop
orl
jae
into
pop
sub
sbb
jb
adc
insb
add
mov
sarl
add
cmpsw
mov
xor
lock
repz
pop
lret
stc
mov
inc
mov
adc
jmp
outsb
in
js
add
mov
mov
clc
rcll
in
mov
clc
rcrl
mov
iret
clc
mov
jmp
cmp
cmpb
mov
mov
jmp
stos
add
je
mov
clc
cmpsl
js
add
push
sub
mov
jo
cmpsl
out
mov
mov
lods
test
inc
std
xor
je
in
xor
pusha
push
dec
mov
xchg
inc
inc
shrb
jae
jo
fs
push
pop
test
loope
mov
movaps
sub
lds
sub
adc
xchg
push
aam
js
jg
jmp
add
inc
ljmp
sbb
lret
push
push
or
sub
shl
addb
xchg
aas
aaa
add
std
in
cltd
adc
xlat
sahf
lods
std
movsb
mov
push
jl
or
arpl
xchg
lds
mov
test
dec
and
inc
pop
jg
mov
jnp
or
pop
xchg
mov
ficompl
in
xchg
mov
sub
lock
dec
iret
ss
js
js
jnp
adc
xchg
cli
cmp
sbb
cmpsl
pop
add
mov
sub
adc
inc
mulb
inc
mov
add
xchg
aas
scas
idiv
pop
test
push
jle
imul
movsb
adc
and
adc
inc
add
js
cmp
es
je
mov
and
jg
addr16
pusha
mov
add
xchg
out
sbb
int
bound
mov
dec
loop
call
jae
add
pop
sbb
add
fwait
xchg
sub
sbb
jnp
aas
in
call
out
pop
sbb
sbb
pop
incl
pop
mov
add
sbb
pop
add
xchg
and
lds
es
imulb
push
push
or
cmc
cltd
push
xorb
repz
fildll
push
leave
and
fstpt
ret
mov
inc
add
pop
add
out
pop
push
sub
pushf
add
mov
xor
inc
add
pop
popf
jno
mov
ds
ficomps
cmp
mov
dec
push
push
addb
and
adc
xor
lret
add
aas
das
pop
mov
xsetbv
jle
xor
arpl
jp
enter
fsubr
mov
dec
arpl
sbb
cli
pop
lea
call
mov
fdivl
adc
cwtl
mov
xchg
xor
or
mov
add
cmp
add
out
and
pop
loope
bound
push
pop
pushf
not
add
sbb
add
int
adc
add
negl
loopne
flds
or
sub
cmp
sub
xor
dec
in
stos
fwait
add
aas
jl
movsl
xor
andb
aad
fcompl
call
ss
icebp
sub
sbb
loopne
test
pushl
and
sub
push
lea
fildll
out
dec
arpl
clc
divb
out
cltd
fwait
mov
test
out
add
xchg
sbb
xchg
out
add
insl
push
cmp
cltd
cwtl
or
jo,pn
adc
bound
mov
ds
sti
andb
ret
es
xchg
and
sub
inc
lahf
rcll
loopne
out
xchg
sub
mov
aas
clc
out
xchg
mov
add
sub
nop
mov
int3
inc
xchg
ljmp
repnz
nop
imul
mov
xor
sbb
sbb
aaa
into
inc
and
cmp
test
ret
or
adc
sbb
add
shll
in
lahf
mov
xor
mov
ret
lock
orl
daa
sahf
pop
mov
inc
add
add
andl
insl
das
jns
xor
pushf
add
jo
addr16
jecxz
jae
test
in
orb
fwait
and
dec
hlt
lds
cmp
mov
int3
pop
fdivr
sbbl
adc
stc
jno
or
xchg
pop
movsb
adc
sbb
js
fsin
add
mov
cltd
cmc
ljmp
ja
das
add
icebp
and
insl
bound
addr16
fldl
and
cmc
pusha
jecxz
daa
aaa
mul
popa
ja
jo
add
add
in
dec
sbb
ja
adc
testb
pop
dec
out
xchg
inc
popa
inc
cli
jecxz
test
loop
push
cs
fwait
push
add
in
mov
inc
mull
push
jl
pop
pop
repz
inc
or
sbbb
inc
mov
sbb
cmp
mov
jle
cmp
cld
sub
scas
mov
das
adc
mov
inc
jg
test
ret
xor
jge
or
add
pop
xchg
fs
sub
jne
push
adc
add
add
repz
sub
scas
and
jmp
cltd
and
and
in
fwait
mov
adc
and
add
shll
add
mov
pop
cld
jbe
dec
insl
add
mov
inc
repz
mov
pop
dec
push
mov
pop
sub
rcrb
inc
push
sti
add
xchg
cmp
aas
inc
or
data16
cwtl
in
add
push
xchg
fldenv
cmp
aad
mov
mov
stos
ret
pushf
xchg
insb
dec
lock
jmp
and
repz
mov
inc
in
and
hlt
push
xchg
sub
dec
in
fsubl
xor
pusha
jb
jae
or
add
pushf
lret
popa
lods
loopne
inc
adc
add
dec
adc
sbb
mov
mov
and
mov
add
stos
cmp
cs
js
cli
sbb
dec
pusha
fldl
fiaddl
add
repz
push
dec
pop
movsl
sbb
icebp
jae
sbb
dec
repz
insl
add
and
and
int3
fsubr
test
pushaw
jo
mov
jp
sub
js
sub
mov
jge
fwait
inc
call
lret
ja
cmp
out
ljmp
stos
js
icebp
faddl
sbb
mov
xorl
or
imul
or
inc
push
arpl
and
mov
cmp
mov
andb
sbb
xor
fsts
add
and
andl
ds
add
sbb
mov
add
call
pusha
mov
add
je
inc
lret
add
and
addl
lds
pop
mov
lock
sti
sbbl
add
and
cmp
dec
jl
inc
flds
jno
xor
hlt
add
mulb
lcall
ss
pop
push
js
adc
cmp
lcall
pushf
jae
arpl
out
push
push
push
sbb
push
adc
scas
ret
shr
fldt
mov
adc
push
paddd
sub
ds
leave
add
dec
ljmp
imul
call
sub
add
mulb
adc
rcrb
fxtract
adc
add
cmp
pop
push
cltd
xchg
jo
push
imul
ljmp
inc
les
mov
test
lock
push
mov
pushf
mov
add
mov
shrl
int3
dec
adc
xchg
sbb
lret
jp
add
cli
jns
icebp
data16
mov
jmp
push
lahf
cmpsb
xchg
jl
psrlw
fcomp
mov
mov
popaw
add
shrb
add
cmp
add
cwtl
inc
pop
add
cmpb
add
sbb
pop
icebp
push
sbb
les
push
or
push
scas
sub
ja
es
xchg
flds
andb
jmp
movsb
adc
in
adc
push
xor
inc
sub
scas
push
scas
xor
push
or
outsl
mov
loop
jno
rol
sbbb
cli
push
lea
add
mov
xor
add
pushf
stos
lds
inc
test
add
test
aam
xchg
push
clc
jns
lds
sub
rcr
testl
adc
mov
jl
test
mov
or
fldl
jae
or
nop
rorl
xchg
add
inc
cmp
mov
fldlg2
cmp
xor
add
rcll
and
ds
nop
lret
mov
xor
cmp
add
in
aam
in
into
data16
inc
jmp
mov
shrl
adc
mov
sbb
push
clc
sbb
ret
add
sub
sti
lea
xor
aad
add
sbb
arpl
test
mov
mov
pop
add
cmp
xchg
add
sub
mov
lods
dec
xor
mov
or
cli
shrl
mov
mul
arpl
add
xchg
adc
dec
mov
add
push
loopne
enter
or
mov
std
lahf
mov
xor
mov
inc
and
xchg
je
xor
out
call
outsb
add
cmp
shlb
pop
pusha
or
ret
or
add
jg
pop
dec
rorl
lcall
ret
xchg
mov
mov
sub
testb
or
sbb
shrb
icebp
cld
and
enter
push
add
push
sub
out
add
mov
cwtl
dec
add
and
adc
arpl
hlt
popa
lret
add
rcrl
mov
outsb
push
push
aam
mov
imul
mov
add
add
adcl
push
push
add
pop
add
scas
mov
xor
push
in
in
mov
dec
adc
jl
push
inc
xchg
inc
pusha
mov
popf
jle
jae
add
sar
jmp
add
outsb
xlat
push
add
pop
sub
xchg
int3
loop
jmp
outsl
add
and
push
lea
dec
call
scas
int3
xchg
lcall
xchg
dec
iret
xchg
adc
test
popf
xchg
mov
mov
pop
lods
add
push
hlt
inc
mov
mov
icebp
dec
lret
rclb
adc
lret
in
push
cltd
ljmp
outsl
adc
adc
add
in
jg
cmp
add
test
cwtl
jo
jae
pop
mov
into
sbb
or
and
mov
andb
call
adc
sub
sbb
jl
sarb
add
and
call
in
call
or
xor
add
add
add
add
rol
sti
xor
xor
ss
xlat
cmp
pop
iret
inc
mov
pop
push
out
push
jge
jle
push
mov
loop
mov
testb
xor
or
add
inc
shlb
clc
mov
push
push
mov
fiadds
cmp
xchg
movsb
gs
sbb
add
call
mov
enter
pop
add
shlb
js
cmp
mov
sbb
sub
ss
sub
push
repz
ret
daa
jbe
push
dec
sub
mov
test
mov
cmp
sbb
in
adc
insb
and
cs
xchg
adcl
sub
push
xchg
xchg
pop
shrb
cmp
sub
xchg
mov
dec
movsb
xor
push
mov
ret
adc
cmp
adc
cmp
scas
cs
add
ja
mov
shr
xor
ret
pop
pop
mov
idiv
adc
cmp
fnstcw
xchg
add
inc
popf
add
aam
cmp
cmp
or
xor
mov
adc
test
mov
dec
add
dec
sub
mov
hlt
pop
add
out
mov
idivb
mov
in
movsb
adc
pop
add
mov
and
out
mov
fbstp
test
andl
sub
pop
aas
mov
dec
xchg
push
addl
mov
jb
xchg
idivl
add
cmpl
ss
out
jg
mov
mov
and
add
mov
pop
add
out
fsubrl
mov
fldl
inc
dec
sets
mul
lods
js
add
gs
add
rcr
add
push
mov
je
rorl
insl
repz
jae
xor
add
pop
in
rcrl
rcrl
lock
cmp
lock
mov
in
xor
loope
xchg
xor
cmp
fiaddl
adc
lcall
push
push
out
mov
sbb
xchg
add
cltd
inc
enter
jo
add
das
test
pusha
loop
sub
ss
sub
pop
ret
jnp
rcrb
adcb
jno
add
sub
pop
push
cli
add
cmc
add
orb
mov
pop
xlat
les
mov
sbb
repnz
xchg
sbb
loop
mov
inc
add
xchg
in
push
fwait
jae
dec
add
mov
add
adcl
add
jmp
push
xchg
fnstsw
aad
in
outsl
cs
dec
mov
sub
add
shll
add
aas
addr16
test
jmp
fcoms
sbb
cmpsl
sub
jo
mov
lret
insl
jns
xlat
adc
fdivr
addb
or
cmp
add
movsb
and
push
add
xor
lds
test
jl
clc
inc
or
jecxz
shll
sub
shrl
sub
fadds
jmp
push
add
fbld
xchg
repnz
lods
out
dec
or
mov
aas
adc
mov
jge
rclb
mov
leave
dec
mov
and
popf
mov
xchg
add
sbbl
and
shll
mov
or
dec
push
jbe
mov
add
andb
jge
out
mov
xorl
inc
add
push
sti
jae,pn
push
lret
aam
and
jnp
out
stc
insb
inc
jmp
add
sub
shrb
aam
fpatan
xor
push
mov
jne
mov
or
pop
mov
or
xor
mov
jl
xor
imul
xchg
inc
lock
test
jg
add
imul
ljmp
incb
fcompl
adc
pop
mulb
or
insb
sbb
mov
insl
enter
paddsb
jecxz
loopne
cmp
cld
jb
hlt
aam
testl
dec
push
push
or
push
lds
push
cltd
dec
add
cli
js
jmp
adc
jne
movsb
or
out
test
cmp
jae
insl
outsb
pop
lods
dec
add
add
popf
or
or
movsb
aam
fiaddl
jo
mov
enter
xchg
jecxz
roll
int3
xlat
jg
and
dec
iret
fistl
stos
jbe
std
mov
push
loopne
mov
mov
push
add
loope
pusha
insb
sub
jnp
pop
popa
add
mov
push
adc
inc
jle
mov
loope
jnp
mov
and
add
cmc
pusha
insl
sbb
stc
sub
aaa
add
in
xchg
inc
sub
cmpl
in
call
cmpsl
outsl
sub
sbb
push
mov
and
cwtl
or
cmp
or
mov
add
in
mov
pop
inc
sbb
add
clc
inc
inc
loope
sbbl
xchg
daa
test
add
xor
rorl
movsb
add
ljmp
push
push
mov
mov
mov
mov
inc
push
aaa
cli
inc
or
mov
cmp
mov
out
rclb
push
rolb
out
mov
push
or
mov
adc
and
add
mov
jo
fs
lea
jo
add
inc
out
mov
sub
hlt
jmp
dec
imul
xchg
lret
jne
inc
call
xchg
cs
shl
add
clc
mov
add
mov
ds
pop
add
cltd
sarb
fimuls
add
xor
movsl
xor
popf
mov
test
andb
subl
fwait
mov
repz
xchg
mov
sbb
fcompp
ss
xchg
addr16
movsl
xor
inc
xor
jp
and
jo
in
push
aas
jmp
sub
in
fs
sahf
sub
mov
and
or
xor
or
and
movsb
ja
adc
aas
inc
xchg
jge
ret
or
inc
leave
sub
pusha
pop
sbb
push
sbb
jecxz
adc
dec
fs
add
stos
jb
dec
xchg
sbb
ret
mov
xchg
mov
mov
into
mov
scas
add
jp
ljmp
and
lahf
sbb
das
or
andl
sub
mov
xor
pop
or
inc
imul
sub
imul
xchg
cmp
or
outsl
ljmp
xchg
xchg
outsb
adc
cs
ljmp
lock
pop
pusha
sarb
add
mov
xor
in
movsl
inc
pop
sbb
push
bound
dec
inc
xchg
decb
mov
shrl
pop
xor
loop
mov
inc
mov
xchg
mov
jb
pop
repz
es
cld
sahf
or
cmp
in
cmpb
pop
enter
test
mov
ss
jnp
mov
sub
mov
add
outsb
mov
add
adc
mov
pop
or
add
sbb
je
jae
add
int
pop
inc
das
lock
add
popa
in
test
mov
jno
mov
sub
sbb
add
and
cltd
movd
and
in
sti
inc
xchg
sbb
jbe
dec
std
bound
movsl
lret
mov
imul
inc
shll
adc
lods
push
mov
xchg
int3
mov
push
lock
mov
sub
push
cwtl
addl
testb
rsm
mov
or
dec
dec
cmp
or
inc
jae
pop
cmc
jno
jb
cmp
repnz
sarl
in
add
mov
and
adc
mov
xchg
add
push
xchg
push
test
xor
js
add
pop
inc
xor
add
adc
dec
mov
adc
cmp
or
inc
es
and
and
and
pop
mov
icebp
sub
lea
clc
and
push
mov
mov
pop
test
add
divb
ret
jb
add
mov
pop
fsubrs
les
nop
and
loop
imul
sbb
adcb
push
cwtl
xchg
ljmp
mov
and
aad
movsl
cmpsl
inc
add
rcrl
in
dec
mov
and
add
scas
mov
faddl
daa
jmp
inc
push
dec
dec
sbbb
cmp
pop
pop
mov
xor
mov
out
bound
addb
out
add
mov
add
fsts
or
jge
add
cld
pushf
push
add
roll
fmull
jnp
lock
shlb
jne
test
dec
mov
adc
push
pop
sub
in
add
fmuls
cmc
sub
inc
xor
dec
sub
scas
or
adcl
fstps
loop
xchg
cmp
sti
sbb
lock
pop
sahf
or
ret
cmp
cltd
xchg
add
or
add
in
inc
pop
cmp
decb
push
pop
nop
mov
movsb
mov
inc
jnp
add
inc
xchg
add
or
popf
sbb
push
sub
jl
fcoml
and
cmp
add
int
out
cmp
lret
fiaddl
xchg
add
or
add
ss
jp
dec
add
mov
outsl
add
aaa
in
cmp
add
add
add
sub
in
sahf
and
add
popf
cltd
andb
negl
pop
sub
xor
mov
fisttps
enter
dec
cmp
loopne
xchg
pushf
add
jecxz
loop
hlt
test
scas
imul
call
adcl
popa
inc
dec
add
xchg
mov
data16
out
call
xchg
test
push
test
fcmovu
cwtl
add
inc
xlat
leave
push
and
cmp
cmpsb
xchg
add
cmp
cmp
int3
add
int
and
nop
pusha
lea
add
xor
pop
add
or
out
lret
leave
or
jge
sbb
in
mov
inc
adc
mov
mov
cmp
rcrb
pop
or
add
push
xchg
mov
jge
stc
call
popa
testb
int
ds
xor
mov
pop
incl
add
inc
jbe
sbb
push
inc
add
sub
mov
add
jno
sub
lods
add
out
jg
stos
mov
pop
lock
cmp
mov
mov
loop
or
daa
arpl
sub
pusha
addr16
mov
jp
adc
data16
stos
xor
and
mov
clc
mov
mov
or
cmpsb
outsl
pop
add
mov
stc
add
mov
xor
fnsave
add
lea
add
in
shl
ret
dec
add
ds
sub
out
or
adc
xchg
outsb
push
add
lods
roll
and
add
lea
add
movsb
add
int3
jp
insl
xchg
cmp
ss
add
and
sbb
mov
push
mov
inc
lods
addl
ds
incl
inc
cmp
mov
cmp
movsl
pop
jmp
mov
sub
mov
dec
je
add
add
lock
aad
repnz
add
or
add
adc
in
pop
cwtl
xor
push
or
outsb
into
add
mov
dec
dec
in
xchg
data16
add
sbb
pop
cwtl
push
add
sbb
sbb
fisttpll
subb
lahf
test
test
mov
popf
mov
call
inc
lds
sub
push
loopne
nop
mov
hlt
dec
add
add
add
in
insb
paddq
test
jg
cmp
lret
adc
jnp
inc
push
add
add
lret
stos
mov
fidivs
mov
add
nop
cltd
leave
xor
push
add
repz
fdivr
add
outsb
imul
inc
add
add
rolb
and
iret
xor
add
idivb
push
adc
rorl
cmp
mov
imul
lods
mov
nop
inc
sbb
dec
repnz
adc
clc
inc
shl
adc
and
add
into
inc
outsb
cli
rolb
add
jns
inc
pusha
cmp
xchg
mov
push
jge
repz
fiadds
mov
jg
cmpsl
adc
add
cmp
mov
add
ret
aas
cmc
xchg
or
xor
mov
pop
sbb
pop
and
cltd
jg
out
addr16
add
jmp
dec
xchg
loopne
roll
lods
int3
sbb
fimull
gs
loop,pn
push
lods
inc
rorb
inc
mov
jge
ss
jle
mov
ja
xchg
and
sbb
mov
in
push
outsl
and
add
filds
sahf
inc
sbb
cmpsl
packsswb
cmp
hlt
push
in
mov
movsb
pop
sahf
add
shll
int3
add
aas
xchg
mov
inc
add
inc
xor
loope
xchg
push
cld
fldcw
in
sarb
pushf
dec
and
sbbb
ret
jne
and
insb
dec
mov
inc
jg
sbb
add
adc
rolb
pusha
addb
jl
in
sarb
sub
dec
sub
test
push
jbe
mov
mov
fadds
imul
sub
xchg
push
xchg
sbb
jmp
cmp
addr16
add
aad
lret
cmp
mov
inc
test
sbb
daa
add
aaa
in
sbb
add
scas
test
dec
pop
lret
xchg
int
in
jg
push
adc
mov
pop
stos
iret
add
faddl
pop
add
mov
lcall
xor
and
insl
loopne
cmp
inc
push
add
or
mov
pusha
movsl
dec
push
jne
js
int3
addr16
xor
cmp
lcall
dec
in
xchg
dec
sub
add
outsb
cld
push
ja
cmp
xor
out
insl
add
out
jns
xchg
rorb
nop
add
mov
loopne
lods
roll
cmp
add
pusha
and
mov
ss
test
rcrb
lea
pop
xor
pop
push
pop
std
mov
sbb
xchg
cmp
adc
call
sbb
call
mov
mov
int3
call
dec
push
aad
sbb
loopne
in
push
nop
clc
add
sbb
inc
clc
jecxz
ss
shlb
mov
push
mov
out
movl
add
push
nop
pop
adc
mov
add
aas
xchg
imul
call
jno
jb
mov
inc
rorb
daa
add
cmpsl
mov
int3
bound
dec
add
sub
fcoms
lock
mov
out
add
lea
pop
and
pop
int
push
pusha
icebp
loope
adc
aam
and
push
sbb
and
jle
add
mov
pop
lock
xchg
rcrl
stos
mov
fcoml
loop
dec
pop
arpl
mov
aaa
mov
outsl
mulb
xor
mov
xor
insl
push
and
stos
jl
add
mov
movsb
pop
xor
insl
negl
cmp
dec
cmp
sub
js
push
leave
xchg
jne
cmp
pop
adc
cmc
jl
adcb
inc
and
fisubrs
mov
shrb
psubsb
inc
add
aad
push
stos
sbb
mov
add
sbb
and
ja
sar
xchg
mov
nop
adc
pop
add
ficomps
mov
mov
jae
add
push
out
and
shrb
out
call
add
xor
pop
xor
outsb
cmp
lods
aas
and
add
popa
clc
sti
arpl
add
in
xchg
xchg
sub
dec
add
scas
aad
fldln2
sahf
and
add
mov
daa
push
insl
pop
add
mov
loope
add
movsl
push
cmpsb
mov
mov
test
into
aas
mov
xchg
addb
and
out
push
shlb
test
xor
inc
jno
stc
jae
add
adcb
mov
mov
leave
and
lcall
pop
mov
shlb
pusha
popf
adc
test
idiv
add
dec
xchg
dec
cltd
xor
jb
add
in
inc
aaa
push
es
stos
dec
adc
lock
jmp
fwait
mov
test
or
mov
jo
sub
gs
leave
push
testl
scas
ss
mov
add
lods
into
xor
mov
add
lret
push
inc
jno
pop
ret
adc
xlat
test
pop
mov
sbb
or
jmp
testl
test
enter
fdivrs
popa
pop
mov
cld
jge
add
mov
into
pop
pop
pop
arpl
mov
cwtl
sbb
add
dec
sub
dec
dec
xor
out
loop
or
or
jmp
add
inc
xor
xchg
int
sbb
out
pusha
push
cld
mov
sahf
xor
cmpsl
or
and
fisttpll
scas
and
push
imul
push
repnz
inc
pop
int3
dec
add
jmp
adc
pusha
and
rorl
add
xchg
pop
in
ficoml
add
mov
add
gs
mov
pop
cmp
xlat
shlb
into
add
stos
sub
mov
xor
call
fdivr
mov
cmp
movsl
in
sbb
add
imul
add
pushf
push
mov
add
loopne
and
mov
lret
pop
mov
xchg
or
in
sbb
inc
lret
dec
mov
mov
js
enter
jmp
cld
shll
pop
add
mov
inc
pop
into
add
es
popa
fcmovb
lods
pushf
clc
cmp
add
jb
sub
out
add
inc
lcall
sbb
xor
xchg
push
cli
push
movsb
add
in
std
jmp
cmc
ds
dec
int
add
push
test
add
sub
and
sbb
push
jecxz
lock
cmpsl
scas
push
or
pushw
xchg
inc
call
add
ret
lods
sub
sub
push
add
jns
adc
pop
add
inc
and
jge
add
dec
out
fwait
movsb
std
int
pop
xor
mov
mov
add
les
adc
test
add
mov
lcall
jo
pop
cmp
add
xchg
test
push
mov
dec
test
out
imul
cld
sbb
pop
ds
mov
push
movsb
jbe
pop
lock
hlt
in
in
pop
push
sub
aaa
clc
pop
inc
cmp
std
call
push
xchg
mov
mov
icebp
andl
add
jle
cmp
add
movsb
sbb
jmp
call
lret
outsb
cmp
cmp
inc
sti
mov
push
insl
nop
dec
dec
daa
jl
dec
orb
add
pop
push
loop
mov
xor
fisubs
ret
outsl
popa
loopne
pop
outsb
rcr
lock
cs
in
add
xchg
ljmp
or
scas
fldenv
push
das
out
clc
mov
pop
fistps
and
je
ret
test
add
dec
aam
dec
cli
add
push
adcb
rorl
push
imul
mov
in
sbb
dec
pop
pop
mov
movsb
xorl
arpl
aaa
push
testl
and
xor
adc
push
mov
jnp
jle
add
nop/reserved
punpckhbw
ficomps
push
push
into
adc
das
add
add
cmc
cwtl
ds
clc
cltd
push
popf
test
fistps
add
xchg
inc
jle
or
hlt
add
dec
lods
jbe
xchg
aas
lea
stos
inc
hlt
ret
cs
push
or
sahf
push
iret
adc
push
rolb
inc
aad
sub
mov
add
pop
cmpsl
pushf
pop
addl
insl
add
mov
cmp
fwait
mov
xchg
clc
sahf
mov
add
dec
jge
push
add
push
jg
jl
arpl
mov
mov
add
add
or
add
sti
hlt
push
mov
cmp
popf
lds
xchg
cli
movsb
pusha
rorb
adc
xchg
cs
in
hlt
cmp
call
pop
xor
mov
sub
rcrb
pop
dec
aam
cmp
sbb
add
add
lret
ljmp
cmpsb
jl
add
ljmp
jnp
lock
or
les
jp
rclb
divps
cwtl
add
enter
add
push
test
fchs
lret
add
mov
fs
add
shll
and
mov
pop
stos
in
mov
add
xor
out
pop
test
adc
jl
test
das
addr16
in
arpl
add
sbb
or
aad
cmpb
sti
inc
mov
jle
jne
sbb
fadds
sbb
into
xchg
sbbl
movb
jns
insl
xchg
cmp
mov
ucomiss
pusha
pop
mov
mov
pop
adc
or
jecxz
loopne
pop
ficoml
les
je
sbb
inc
or
and
add
pusha
xchg
mov
and
sub
xchg
icebp
shlb
pop
mov
add
sub
add
cltd
js
aad
dec
dec
flds
stos
jle
dec
mov
movsb
and
jp
jg
add
test
cmp
or
addr16
pop
fidivs
push
stos
mov
setbe
imul
shrb
adc
dec
add
sbb
sub
add
cmp
jo
sbb
mov
pop
insl
iret
jae
jecxz
andl
add
mov
loop
lret
in
xlat
add
or
mov
sbb
int3
jo
testl
pop
jecxz
mov
mov
sbb
xchg
sub
xchg
mov
daa
loopne
mov
and
shll
ds
mov
or
and
jl
imul
add
mov
add
dec
sbbl
cmp
mov
lcall
sub
std
cmp
adc
jg
mov
sbb
sub
fsub
loopne
in
jl
add
rolb
mov
mov
outsb
and
test
inc
lret
jne
mov
pop
hlt
add
test
mov
les
pop
fstps
cmc
mov
subb
xchg
les
sbb
add
shl
out
pushf
sub
cmp
and
bound
lahf
xor
xchg
lods
aad
cmc
adcl
addr16
xchg
inc
push
loopne
insl
inc
mov
xchg
xor
bound
xor
repz
mov
add
test
das
xor
jecxz
enter
add
push
cld
mov
push
push
add
cmpsl
subb
xchg
and
and
fidivrs
push
scas
inc
test
dec
dec
sti
cmp
dec
and
pop
cmp
add
cmc
xchg
xor
push
mov
in
pushf
cmp
jmp
mov
cld
inc
test
or
xchg
movsl
lds
cmp
or
add
aaa
cvtpi2ps
fcomps
popf
pop
push
pushf
adc
dec
pusha
xor
int3
in
icebp
into
xchg
loopne
hlt
push
cmpl
mov
pop
ljmp
ds
adc
leave
movsl
jl
popa
mov
and
in
add
in
loopne
push
add
dec
insl
jg
pop
add
les
and
mov
ds
sub
adc
add
or
xchg
dec
pmulhuw
lret
cmpsb
pop
std
add
imul
int
sub
out
scas
stc
roll
sbb
ja
add
and
cmp
insl
nop
pusha
fwait
mov
std
or
add
pop
rclb
mov
fsubrs
xor
push
add
xor
jb
add
mov
fsubs
jge
mov
nop
test
dec
and
dec
test
xor
cs
jb
xlat
mov
sbb
inc
shl
daa
and
sbbb
std
sbb
sbb
fwait
sbb
popa
add
in
pushf
fidivl
push
xchg
xor
inc
push
mov
push
jns
das
shrl
mov
add
pusha
repnz
jmp
mov
mov
pop
fwait
pop
adc
jbe
js
mov
inc
adc
test
xor
insb
les
lret
pop
jmp
cmp
cmpl
cmp
enter
ljmp
mov
cltd
pop
aam
iret
loope
js
add
xchg
jle
mov
in
imul
xchg
ja
push
fwait
scas
inc
or
add
xor
mov
dec
hlt
cmpb
ljmp
pop
bound
adc
cmp
xchg
add
shl
aaa
sbb
cmpsl
push
dec
mul
add
leave
xchg
mov
add
cmp
mul
add
leave
and
addr16
add
push
push
aam
daa
add
rcl
sbb
or
in
add
mov
mov
jle
adc
lahf
push
push
pop
xchg
inc
add
movsl
jno
call
loopne
jmp
lods
int3
inc
stc
testl
jo
add
bound
ret
mov
add
adcl
ja
and
mov
add
mov
ds
loope
add
fs
dec
mov
and
mov
push
in
cwtl
push
cwtl
nop
push
leave
inc
sarb
std
xchg
jo
add
xchg
mov
roll
jg
xor
test
add
lcall
add
jg
pop
add
xchg
lods
test
jge
add
aaa
roll
add
lods
shr
and
movsb
add
dec
pop
out
pop
stc
enter
add
push
fidivrl
sbb
repz
fsubrl
jmp
les
xor
test
sbb
sti
ret
dec
arpl
push
add
rep
inc
add
ss
jo
aaa
mov
out
or
mov
int3
xchg
addb
add
mov
rcrl
xchg
or
cld
add
loop
add
mov
xchg
xchg
enter
jl
add
sbb
jae
scas
add
inc
mov
sbb
push
adc
push
icebp
xor
mov
je
jns
in
xor
mov
push
push
add
push
cld
imul
sbb
test
sub
in
les
add
and
push
out
push
adc
push
pop
aad
xor
fwait
rcrb
inc
ret
or
fcmovu
push
xlat
add
dec
add
test
mov
jmp
dec
repnz
jecxz
push
or
cmp
icebp
fdiv
fnsetpm(287
adc
mov
daa
loopne
inc
add
jge,pn
stos
cmc
and
ret
rcrb
sub
push
adc
stos
xor
outsl
lret
fldt
add
mov
mov
sbb
pop
daa
or
or
add
scas
test
fiadds
mov
es
xchg
cmp
imul
cmpsb
push
and
inc
icebp
dec
jnp
add
dec
aaa
push
adc
imul
shlb
test
dec
pop
mov
iret
enter
cwtl
aaa
or
nop
xor
adc
scas
inc
jge
pop
inc
popf
stc
cmp
mov
cmp
sub
add
and
cmc
cltd
add
xor
outsb
jns
add
dec
pop
cmp
imul
pop
es
ret
ret
jnp
cmc
je
pop
sub
jle
ret
add
pushf
xchg
dec
add
inc
ss
add
enter
pop
push
sub
inc
rolb
xchg
dec
and
push
add
xchg
add
ds
int3
arpl
mov
jns
and
mov
insl
pop
jp
pusha
mov
add
sub
ljmp
dec
lock
add
mov
and
sub
jp
arpl
inc
xchg
aaa
add
dec
jg
xor
push
lods
jbe
xor
mov
pop
iret
pusha
movsl
adc
sub
push
add
loope
repz
or
ss
es
add
jp
pop
faddp
add
adc
daa
sub
rcrb
jb
out
and
sub
xchg
add
movb
adc
mov
and
jecxz
add
push
mov
jp
dec
mov
jmp
pop
cltd
xchg
add
out
test
push
fiaddl
push
in
and
jne
je
push
or
xor
loopne
dec
add
sti
orl
pop
int3
jmp
dec
hlt
mov
aas
push
mov
inc
dec
int
sbb
shlb
decl
add
or
dec
in
push
dec
mov
out
adc
adc
pop
cmp
mov
sahf
loop
ljmp
sbb
fmull
inc
add
cld
leave
aad
xor
xchg
xchg
hlt
stc
add
mov
cwtl
sbb
test
andb
xchg
push
out
sub
inc
jp
ss
push
push
js
or
add
insl
fimuls
jnp
add
test
lods
lods
out
out
in
xchg
pusha
mov
dec
adc
add
pop
mov
lds
xor
xorb
cmpb
pop
xor
push
push
mov
adcb
add
dec
aas
mov
std
add
push
mov
mov
or
das
pop
into
pop
adc
push
inc
fsts
sbb
add
stos
call
add
mov
aad
pop
int3
mov
sub
in
mov
pusha
add
dec
jl
scas
sti
jae
vpsadbw
dec
add
stc
cmc
mov
inc
out
mov
in
cmp
or
into
sbb
add
xor
cwtl
sub
xor
dec
fidivrs
xor
jl
cmpsb
xchg
add
xchg
out
cmp
cmp
sbb
jae
fldt
inc
or
inc
testb
into
or
and
and
adc
or
sub
add
sub
scas
adc
inc
inc
adc
adc
or
mov
es
mov
cmp
rolb
mov
inc
add
dec
add
add
cmp
cld
sbbl
stos
shrb
aaa
push
dec
inc
fdivrl
add
add
push
add
dec
sub
lods
loopne
push
adc
outsl
daa
movsb
shll
add
rorb
dec
jb
mov
jns
jb
add
jl
adc
loop
adc
add
fwait
loope
push
lret
test
ror
xchg
mov
xor
xor
out
fcmovnbe
xor
outsl
cmp
and
xor
pop
add
add
jge
movsl
add
sbbb
pop
sub
jg
xor
cmp
adc
add
lea
mov
add
jbe
stos
xor
sbb
fdivr
adc
adc
ret
out
jbe
sbb
or
and
stos
lods
fcompl
pop
inc
out
mov
mov
mov
jnp
mov
ja
push
daa
and
dec
rorb
adc
xor
jae
xchg
pop
out
add
jp
mov
cmc
cwtl
sub
in
mov
mov
cmpl
xor
sub
mov
dec
fcoml
sub
shll
add
jns
jg
xchg
outsb
jnp
add
mov
jp
and
rolb
inc
mov
test
inc
das
pop
loopne
xor
add
mov
js
push
push
jge
push
cmpb
push
mov
mov
lahf
and
xchg
inc
dec
adc
mov
dec
lock
adc
in
add
fcoml
mov
jne
iret
add
in
pop
cmp
mov
in
xor
fwait
stos
pop
add
cmp
and
cmp
push
pop
add
xchg
fcmovnbe
les
loop
roll
add
aaa
add
lods
iret
push
addb
adc
and
out
add
pop
sub
fisttpl
dec
pop
add
jg
push
push
ss
xor
push
sbb
dec
inc
or
and
roll
movsb
in
mov
fisubl
sbb
jo
pusha
jmp
ret
fwait
xor
cld
sbb
push
jle
ret
sbb
jl
cwtl
or
mov
sbb
decl
pop
daa
mov
mov
adc
add
jns
ss
sub
mov
mov
inc
sahf
rcr
fisttpl
iret
add
les
ja
xchg
hlt
verw
pop
xchg
and
roll
cmc
ret
mov
ficoms
jno
test
xor
fdivs
in
cld
aas
adc
mov
add
int3
mov
inc
lods
pop
push
add
stos
jb
shlb
fiaddl
cmp
sub
cmp
out
add
pop
mov
jp
adc
pop
clc
in
je
push
lret
pop
repz
push
or
rol
sub
ljmp
sbb
aam
shlb
mov
add
negb
cli
mov
xor
in
in
enter
mov
adc
sub
call
xchg
jbe
jecxz
roll
jns
dec
xchg
xchg
sub
push
add
fstpl
pop
scas
leave
lahf
jl
add
fwait
movb
loopne
pop
jbe
push
jb
jns
sub
push
aam
add
pop
out
jle
testb
popa
adc
test
movsb
or
aam
adcb
scas
clc
cmp
pop
push
std
mov
ds
add
push
pop
jmp
std
xor
cmp
in
xor
das
addr16
mov
add
jno
cmp
lret
cmp
add
sarl
fnstsw
data16
or
xchg
pop
out
xorl
pop
xor
add
les
pop
adc
xchg
int3
aaa
or
mov
int3
mov
adc
rclb
ljmp
incl
add
je
add
out
mul
jno
pop
loope
sub
fdivl
lods
add
rolb
add
mov
inc
in
sbb
jb
cld
jmp
add
pop
jnp
and
mov
sbb
aad
pop
mov
xchg
xchg
dec
jae
add
bound
dec
dec
jecxz
cwtl
nop
dec
scas
sub
in
pop
imul
xor
add
mov
mov
jbe
popf
out
aam
push
subps
pushf
cmp
dec
in
imul
push
es
sub
mov
lahf
add
bound
shll
clc
pushf
jecxz
add
lcall
fstl
adc
or
and
pop
cwtl
loopne
aad
xor
mov
fs
push
rorb
dec
jp
add
push
jmp
mov
pusha
add
mov
sbb
pop
mov
mov
pop
daa
mov
cmpsl
fstpt
pop
lahf
adcb
xor
fdivrl
in
lcall
rolb
pusha
sbb
jnp
test
rcl
pop
lcall
inc
push
mov
push
loopne
push
add
lcall
mov
shrb
lret
stc
and
icebp
dec
sub
xorl
and
out
mov
xchg
stos
add
and
inc
cmp
hlt
loope
pop
sti
les
inc
and
dec
and
icebp
add
cmpsb
jecxz
ficompl
mov
sub
daa
mov
mov
neg
cmp
loop
aas
mov
iret
or
shlb
sbb
out
aas
sbb
int
jecxz
pop
sahf
fldln2
mul
xlat
cmp
pop
xor
and
loope
mov
xor
mov
pop
in
inc
dec
adc
xlat
repz
jmp
push
out
dec
cmovb
das
inc
bndldx
fcomps
les
cmpsl
add
ds
jbe
lahf
loop
add
add
addr16
unpcklps
ja
add
sti
iret
add
push
adc
xor
cmpb
cwtl
xchg
cmp
mov
div
insb
pop
inc
or
movsb
shlb
mov
addr16
fldlg2
scas
add
and
inc
add
sbb
dec
cmp
sub
jl
jno
dec
lahf
inc
cmpsl
mov
mov
mov
mov
gs
loopne,pt
cli
aaa
add
inc
movsl
jae
rorb
testl
xor
imul
push
adc
in
shrl
or
pop
add
sbbb
mov
and
ja
add
mov
fsubr
sahf
push
repz
xchg
aas
mov
adc
add
bnd
sbb
roll
out
xor
cmp
andb
mov
sahf
movl
ret
sub
mov
out
shrb
add
repz
add
data16
mov
or
mov
aam
sbb
and
jo
sahf
es
cmp
push
jae
sub
inc
insb
shr
add
imul
dec
adc
xor
and
add
mov
std
lahf
gs
adc
out
mov
xor
out
xor
faddl
or
mov
iret
push
movsl
call
pop
pusha
sbb
mov
rorb
mov
dec
mov
aad
ja
in
adc
rol
add
mov
cmp
in
addr16
ds
enter
mov
add
inc
mov
cmp
mov
and
hlt
cmp
add
add
cmpsl
inc
cld
jnp
add
icebp
shlb
cmp
into
mov
mov
mov
push
int3
fisttpll
xchg
push
jbe
fdivl
lds
add
push
lock
or
add
cmc
add
hlt
dec
cmp
popa
movsl
and
lock
shrb
sub
jbe
movaps
shlb
mov
xor
xor
cmp
icebp
popa
xlat
jo
bound
add
or
cmp
inc
push
add
jnp
mov
add
or
test
mov
sarb
imull
add
stos
je
loopne
and
dec
or
call
add
fmuls
and
out
add
iret
xor
sahf
leave
pop
dec
xlat
push
sbb
add
pop
cwtl
jle
add
loopne
cld
jae
inc
frstor
inc
decb
es
xchg
jne
add
fwait
stc
test
out
repnz
add
sub
inc
mov
in
lock
mov
xchg
or
ret
mov
ret
pop
jmp
stc
mov
or
je
xorb
das
add
pop
daa
sti
insb
js
out
add
fstl
jae
xor
add
pop
fwait
test
lods
mov
cmp
add
rcl
pushf
xchg
cmpsl
enter
imul
sbb
lahf
mov
adc
push
sbb
sub
out
mov
mov
cmp
pusha
nop
cmpb
mov
sub
loope
dec
test
int
in
add
and
jmp
sub
cwtl
mov
leave
in
xor
lcall
pusha
xor
xchg
mov
adc
fdivrl
rcrb
push
pop
orb
or
mov
scas
repz
icebp
cltd
fistpl
add
push
js
mov
or
imul
jg
add
dec
stos
iret
mov
add
mov
aas
das
cmp
dec
jb
add
or
mov
cld
clc
xor
xlat
and
push
rclb
inc
rcl
pushf
shlb
add
je
pushf
cmp
ja
in
fisubrs
add
push
call
xchg
push
pop
add
jns
push
cltd
jns
inc
jge
sbb
add
xor
pop
push
jns
add
jbe
xor
dec
inc
cmp
test
hlt
cwtl
stos
mov
divl
jge
mov
or
popf
lcall
xchg
out
loope
add
push
push
xorb
pinsrw
out
or
mov
dec
cmc
push
sbbb
mov
sbb
into
lret
mov
test
push
js
jp
hlt
frstor
add
js
es
jne
mov
aaa
jmp
sti
in
inc
in
dec
adc
cmp
and
mov
nop
nop
imul
xchg
outsb
and
dec
cld
pop
add
pop
les
or
mov
adc
xor
and
aam
push
inc
push
push
dec
aaa
mov
dec
shlb
inc
add
push
inc
dec
ss
inc
pop
arpl
adc
inc
cltd
and
xor
aaa
rcrb
mov
push
inc
loopne
adc
movsb
jns
addr16
int3
inc
dec
outsb
lahf
and
aam
loopne
sbbb
push
int
rsqrtps
xor
jp
cmp
xchg
xor
popa
push
pop
test
cmp
dec
mov
cli
sub
rolb
aad
lock
mov
sbb
sbbb
lahf
dec
fisttps
rorl
shlb
cmp
mov
ret
call
xchg
mov
lods
inc
jp
sarb
jne
add
dec
fs
push
pop
leave
add
outsl
testb
pop
into
movb
mov
nop
loopne
cmp
pop
sbb
ja
add
mov
jb
mov
add
mov
pop
inc
pop
and
add
stos
into
orb
push
add
repz
push
cmpb
popa
test
mov
mov
std
imul
fwait
icebp
repz
in
hlt
add
and
mov
loopne
loope
ret
fisttpl
sub
or
rol
cld
push
fwait
shrd
jne
pusha
jae
stos
xor
or
or
aam
pushf
add
dec
out
and
int3
scas
in
add
mov
scas
add
jecxz
enter
jnp
fidivrs
imul
popf
cmp
add
xchg
jp
add
lret
sub
daa
add
and
sbb
xor
inc
sub
add
push
jne
addr16
leave
clc
test
fstps
sub
js
out
mov
lock
mov
addb
xchg
sub
lahf
cs
fcoms
repz
dec
cmpl
daa
add
jnp
je
xor
cmp
adc
mov
xchg
lret
out
daa
into
out
and
rcl
jge
inc
mov
add
test
mov
add
mov
and
subb
sbb
hlt
call
and
out
stc
mov
sub
adc
loop
add
daa
sbb
cmp
daa
sbb
add
stos
xor
push
add
sbb
dec
pop
adc
je
test
gs
cmp
pop
and
cmpb
lcall
ret
sub
inc
cmp
fucom
jmp
pusha
int
pop
or
xchg
mov
insb
mov
mov
dec
int
add
dec
test
inc
xchg
xor
add
inc
adc
cmp
sub
sbb
mov
jno
add
mov
mov
add
or
push
flds
test
movsb
xlat
mov
sbb
pop
add
push
mov
loope
lahf
cmpsl
stos
lret
add
idivl
aam
das
bound
add
rcl
pop
xor
mov
xchg
sub
rolb
sbbb
and
pusha
pushf
add
jg
xchg
fadds
pop
add
or
pushf
enter
lcall
loopne
xor
add
call
xchg
or
sbb
add
xor
sbb
jb
mov
and
add
das
shlb
jns
test
test
cmp
addb
ja
pop
arpl
mov
sbb
adc
add
xchg
insb
loope
add
cmp
sub
cli
mov
add
cmp
push
dec
mov
ds
inc
add
xor
test
lods
cld
test
or
xchg
add
pop
push
shr
add
xor
push
enter
dec
pop
jo
xchg
sbb
add
movsb
das
and
flds
lods
out
nop
fsubl
push
add
call
add
pop
daa
stos
dec
adc
in
xor
movsl
inc
sbb
pop
and
adc
push
lea
add
divl
add
into
call
jl
andb
lds
cmc
add
inc
and
mov
mov
dec
add
dec
les
jnp
pop
add
sub
push
add
sbb
dec
lret
inc
ret
lods
add
jge
aas
mov
push
inc
sbb
mov
add
ror
pop
add
pop
sbb
adcb
jb
mov
cmp
push
dec
add
addr16
sbb
xlat
push
xchg
cmp
sbb
pop
pop
js
jno
mull
cmp
in
add
push
add
mov
and
call
divb
inc
push
sub
cltd
sbb
ds
add
and
sub
loope
mov
adc
push
imul
stc
push
shrb
pop
xor
add
mov
leave
in
cmc
cmp
xor
cmp
cmp
and
or
add
mov
and
xor
popa
call
pop
cmp
std
out
pop
aad
in
int3
repnz
fisttpl
neg
xchg
fadds
and
dec
aam
fwait
push
in
and
pop
rol
out
out
js
sbb
mov
mov
jg
dec
scas
add
or
push
dec
xor
sbb
dec
jns
rorb
loop
add
pop
andb
clc
cwtl
xor
loopne
negb
jb
xor
sub
test
sub
or
mov
in
add
jp
mov
test
and
fnstcw
or
xchg
jns
shll
jb
ret
jne
fldenv
dec
push
movsl
cmc
push
cmp
add
fwait
inc
aaa
mov
cmp
mov
push
rolb
jl
in
divb
add
lods
xchg
sub
add
out
mov
ja
jbe
pusha
pop
add
inc
mov
cmp
mov
lods
in
jge
cmp
add
push
addb
cld
mov
mov
enter
xor
pop
inc
cmp
fistps
add
jp
jb
add
mov
pushf
call
cwtl
mov
add
mov
popa
pushw
test
cld
pop
imul
add
stos
aas
hlt
add
cmp
or
sbb
adc
adc
aaa
push
and
add
lods
nop
cmp
add
data16
iret
xchg
mov
dec
in
fldl
insb
or
andl
int3
add
jb
jnp
addb
imul
insb
mov
fidivrs
sbb
or
test
lods
and
ja
push
sahf
aad
add
add
aas
jmp
fadds
add
int
lret
add
call
pop
sub
movsb
add
push
lods
cmp
out
sub
push
popf
in
aam
orb
mov
and
push
movsb
pmaxub
dec
jecxz
add
xchg
mov
ljmp
pop
cmpsl
cmc
dec
add
cs
jge
mov
add
lods
outsb
rol
and
orl
test
mov
adc
xor
arpl
popa
add
mov
lods
in
fisubs
add
pop
mov
xchg
push
xor
das
pop
shrb
dec
mov
ljmp
cld
mov
loopne
add
out
test
pushf
adc
and
xchg
sub
loop
cwtl
cmp
imul
in
push
xchg
dec
mov
scas
adc
xor
popa
fisttpl
xor
aam
dec
inc
fisttps
cmp
imul
das
mov
jmp
inc
jo
mov
insl
xchg
dec
imul
xchg
sub
scas
pop
add
ds
jne
fisubs
out
sub
sbb
jns
add
mov
add
add
add
and
adc
sub
dec
and
dec
enter
jmp
xchg
add
sub
stos
shrb
nop
jecxz
jl
int
lock
push
arpl
cwtl
or
mov
in
shrb
dec
jns
jno
lcall
adc
rclb
or
cmc
and
sub
xor
popf
cmp
inc
mov
sarb
call
cmp
out
mov
movb
add
sahf
ret
enter
int
jne
pop
sbb
mov
pop
mov
push
add
and
rolb
jge
cmpsb
shld
jecxz
lock
dec
cmp
rolb
je
lods
repz
gs
inc
jecxz
jns
divl
das
adc
cmp
push
cmp
in
pushf
dec
cld
adc
add
xor
mov
rclb
add
andb
rorl
push
jge
jle
pop
in
addr16
fwait
movups
jp
add
add
lods
pop
mov
xchg
push
add
icebp
rclb
addr16
fcom
jne
out
or
das
loopne
and
or
or
mov
stc
mov
mov
cmp
arpl
cmp
add
cli
call
es
stos
and
in
loop
add
xor
adc
inc
dec
jle
aas
adc
cmp
cwtl
and
cmpl
adc
aas
lods
sbb
adc
inc
and
mov
enter
push
cs
hlt
add
in
push
cmp
lret
add
lea
dec
or
mov
and
mov
inc
push
adc
add
mov
cmp
xchg
push
jne
pop
inc
pop
jge
add
pop
mov
adc
mov
mov
pop
int
sbb
sub
xchg
add
lcall
std
pop
nop
insl
jb
popa
add
test
xchg
les
mov
mov
cmp
xor
cmpsl
or
add
and
mov
nop
and
pop
push
inc
lods
stos
xchg
add
jno
lret
or
popa
inc
add
call
xchg
push
inc
sarb
lods
and
in
femms
pushf
add
imul
push
test
push
call
jno
adc
add
or
je
pusha
loopne
cs
pusha
add
scas
mov
ret
pop
iret
lahf
rcll
jle
jb
mov
pmullw
xlat
jns
fcoml
pop
dec
jg
mov
xchg
je
inc
cmc
iret
lcall
pushf
cltd
ret
or
sbb
mov
jmp
in
cmp
xor
jmp
mov
je
sahf
mov
rcrl
push
jns
cld
adc
xchg
adc
dec
and
jp
jge
jbe
or
popa
cmp
mov
mov
sub
jecxz
jne
jbe
icebp
mov
add
dec
jmp
inc
add
sub
cltd
sti
out
adc
mov
add
cwtl
call
sub
aam
shlb
inc
sti
mov
add
dec
sbb
mov
pop
aaa
add
inc
add
cld
inc
cmc
and
dec
loop
jg
add
stos
and
jae
pop
add
mov
fdivr
adc
adc
cmp
sbb
test
mov
inc
sbb
leave
lcall
mov
lds
leave
and
lcall
sbb
push
xchg
cmp
add
les
sub
movsl
fs
jle
hlt
or
div
lret
lods
pop
cmpb
in
xchg
xchg
push
and
das
mov
sub
cmpsl
add
mov
push
jae
and
xor
icebp
or
loopne
sub
les
pop
mov
leave
cli
and
cs
sub
fsubl
sub
out
add
je
pop
adc
and
sbb
add
mov
mov
ret
outsl
xchg
movsb
add
sub
jnp
xor
add
ljmp
mov
adc
pop
inc
pop
rclb
mov
in
mov
mov
xchg
push
pop
movsl
js
sub
test
sti
add
ljmp
fdivrs
stos
adc
pusha
xchg
pop
xchg
xchg
push
push
push
int3
and
push
cmp
push
imull
xor
imul
les
loope
sub
inc
inc
test
or
sbb
lods
test
lods
pop
add
dec
add
cmpsb
into
inc
xor
loopne
xchg
dec
inc
jb
push
out
ret
test
mov
add
push
fimuls
shr
nop
add
add
mov
fs
add
in
fmull
lock
sub
aas
cmp
jge
mov
ret
cmc
orl
jne
addb
mov
cmp
push
and
and
sbb
mov
gs
test
out
cmp
mov
shlb
cmp
xchg
loopne
sbb
and
inc
xor
pop
add
dec
sbb
in
dec
stos
add
jge
jno
add
frstor
int3
jle
fwait
bound
adc
scas
cltd
lock
mov
xchg
lret
out
in
add
jle
mov
adc
push
mov
xor
je
sub
or
mov
cmc
repz
mov
shlb
pop
push
int
dec
aam
add
rorb
addr16
sahf
add
mov
xor
fs
inc
pop
adcb
out
loope
lcall
pop
push
jbe
push
xlat
fldl
pop
out
xlat
shl
or
add
popa
mov
mov
lcall
mov
pop
xchg
inc
push
pusha
mov
pop
fstps
add
lret
rcll
adc
or
sbbl
fisubs
add
mov
push
inc
lea
sbb
sub
pop
addr16
pop
cmpb
mov
adc
lods
push
test
cli
xor
jns
adc
jno
sub
or
add
add
stc
jle
loopne
add
add
dec
and
inc
adc
ret
aam
loopne
ltr
shl
cmp
or
aam
mov
pop
dec
inc
xor
imul
add
add
popf
add
fidivrs
or
cmc
stos
inc
aas
adc
test
orb
inc
aaa
out
sub
xor
dec
sub
rcrl
xchg
lcall
jl
clc
mov
push
bound
sub
add
idivb
add
leave
loopne
test
add
jmp
in
out
and
jl
mov
js
dec
add
push
sahf
adc
xchg
loop
xor
or
add
sub
jbe
jae
push
push
icebp
jb
adc
fistpll
sub
jecxz
incb
sbb
lahf
jne
movsb
fcmovu
sub
dec
pop
lock
xor
mov
xor
and
push
fwait
loope
lahf
out
movsl
sub
or
jmp
dec
shlb
test
out
loope
add
jmp
pop
xor
sub
mov
add
gs
pop
adc
dec
add
test
ds
sbb
pop
pop
add
jbe
push
mov
ss
adc
adc
shll
mov
push
rolb
cs
jg
inc
ds
mov
ja
fdivrl
fsubs
add
xchg
pop
mov
hlt
call
xlat
stos
js
mov
pop
mov
sub
xor
add
rolb
in
inc
mov
dec
fdivl
cmp
jno
push
movsb
popf
shlb
sbb
sub
adcb
fwait
add
cld
push
loope
cmpsb
jnp
lcall
pop
adc
in
xchg
inc
dec
shll
pusha
cmpsb
and
lea
sbb
push
push
mov
add
sub
fists
xchg
push
nop
mov
iret
add
xor
insl
outsl
fnstcw
mov
inc
daa
push
into
and
lcall
add
fidivl
push
or
ljmp
sub
in
add
jle
js
add
cwtl
mov
jge
sbb
jnp
andl
and
dec
cmp
loop
pop
test
lcall
mov
fists
inc
pop
mov
pop
sahf
in
std
xor
inc
add
ret
addr16
fidivl
pop
arpl
sar
ljmp
movsl
cmpb
add
aaa
xchg
js
pop
and
mov
loope
subl
push
add
in
adc
pusha
out
xchg
loopne
pop
outsb
test
vsubpd
add
jo
sub
jns
push
adc
adc
fistpl
movb
mov
xor
push
fs
sub
pop
pusha
jmp
pop
adc
jb
daa
shr
sub
pop
dec
and
pusha
mov
sbb
fucomp
push
jp
add
mov
pop
push
xlat
sub
push
xchg
xor
cmp
pop
nop
clc
loop
pop
dec
dec
insb
outsl
push
adc
adc
cmp
lahf
inc
mov
add
adc
mov
mov
mov
adc
lahf
and
xor
loopne
mov
cmp
add
loop
adc
subb
stc
jg
sub
cmpsb
into
mov
aam
adc
aas
pop
adc
arpl
shlb
les
xchg
rclb
jecxz
out
mov
sbb
jne
imulb
cld
lea
pop
aas
push
add
repnz
pop
jno
add
divb
jl
cs
incl
call
std
lock
sahf
adcb
in
add
push
shlb
mov
mull
jb
jnp
jbe
outsb
xchg
mov
add
ret
jbe
pop
dec
jae
dec
mov
pop
sbbl
xor
or
and
andl
lods
std
pop
jnp
lods
mov
cmp
dec
in
adc
xor
data16
arpl
jb
xchg
xchg
gs
jne
cmp
mov
mov
sub
sbb
movsb
mulb
ficoms
and
pop
or
idivb
adc
mov
push
push
lods
sub
jmp
cwtl
mov
fdivl
sbb
and
pushf
mov
sarl
or
add
adc
cmp
pushf
and
xchg
cld
lcall
inc
pop
xorl
imul
add
scas
adc
mov
or
ret
or
pusha
add
xchg
jl
call
jne
dec
inc
push
mov
sbbb
lods
pop
call
clc
sbbb
xchg
int
pop
rcrb
in
call
adc
mov
add
mov
mov
add
jecxz
add
movsb
out
xlat
rorb
push
out
popa
cltd
data16
lock
push
inc
xchg
mov
dec
ss
sub
stos
add
popa
mov
pop
xchg
or
xchg
data16
push
das
jo
jns
enter
stos
fildl
testl
outsb
pop
pop
nop
and
add
mov
dec
jecxz
push
cs
in
inc
add
addb
into
sub
pop
push
inc
lods
stos
mov
adcl
add
and
inc
add
aas
sbb
pop
cltd
cs
add
xchg
mov
sbb
dec
cmc
popf
sbb
nop
test
inc
and
sub
jno
lods
dec
or
push
fildll
bound
pop
add
mov
add
inc
movsb
test
scas
jl
xlat
jnp
jg
jle
jl
dec
xchg
cmp
add
sbb
push
mov
cli
jnp
cmp
cld
out
add
add
xchg
cmp
cmp
or
mov
and
push
filds
sub
jmp
test
or
in
xor
in
pusha
in
and
cmpsl
push
outsb
test
pop
add
sub
imul
cmp
sub
mov
cmp
sub
jl
jg
iret
add
hlt
subb
mov
mov
push
add
shrb
icebp
orb
jmp
cs
push
stos
aam
jb
fmull
incb
pop
pop
ret
mov
stos
rorl
mov
sbb
lods
cmpsb
cwtl
jne
add
pop
mov
or
push
inc
add
sub
fdivrs
cmp
add
pop
or
in
sbb
add
lock
aad
xor
add
pop
aas
add
inc
outsl
push
sbb
xchg
dec
add
mov
gs
sub
pop
mov
enter
jl
mov
sbb
repnz
jmp
retw
add
lahf
hlt
in
jbe
cli
add
scas
cmp
shlb
mov
filds
arpl
add
mov
mov
outsl
shlb
or
mov
pop
popf
push
add
adc
jno
adc
xlat
dec
enter
xor
inc
cwtl
test
outsb
cltd
scas
adc
push
add
leave
cmpsl
xchg
loope
pop
and
inc
jl
sahf
mov
pop
jno
add
testl
add
int
je
inc
addl
lods
xor
icebp
mov
int3
ret
or
and
add
cmpsl
icebp
dec
mov
xor
add
js
shll
iret
add
frstor
xchg
test
in
add
xchg
dec
adc
sub
push
mov
loopne
or
and
push
pop
cmpb
shlb
call
insl
add
cmp
sbb
push
cmpsb
jecxz
mov
imul
inc
sub
stc
lret
pop
xchg
sub
in
data16
mov
jle
popa
add
xor
add
dec
sbb
divb
fadd
sub
mov
xor
jns
jg
iret
pusha
adc
shrb
movl
cmp
gs
cmp
jne
movsl
lret
pop
fdivs
xchg
test
and
push
xchg
dec
xor
sbb
mov
mov
in
nop
test
sbb
jb
adc
lds
mov
cwtl
subl
addl
add
lock
sbb
fcmovbe
movsl
add
jecxz
int
mov
fmul
lea
add
daa
cmp
stos
pushf
cld
pop
mov
adc
in
push
int3
scas
in
mov
loop
lret
push
lret
sbb
mov
jns
filds
xchg
fisubl
imull
rorl
adc
into
mov
xor
add
adc
idivl
outsl
jmp
and
outsb
add
pop
repz
jne
enter
adc
repnz
xor
out
aas
or
xchg
arpl
xchg
ljmp
mov
cmp
es
pop
mov
mov
mov
insl
add
adc
lea
mov
pop
icebp
jp
jb
xorl
lock
add
mov
cmp
or
inc
repnz
add
adc
fwait
call
shr
cmp
ja
jecxz
xor
push
xchg
fidivs
pusha
add
xchg
and
xchg
adc
test
jno
mov
xchg
add
cmp
adc
add
or
mov
cs
dec
jb
repz
bound
xor
test
ljmp
imul
jg
cmpsb
mov
scas
lods
repz
mov
add
xor
cmp
jnp
arpl
xor
or
gs
movsl
pusha
add
add
mov
dec
jg
adc
pop
xchg
pop
sub
mov
out
inc
and
and
insb
add
fcoml
mov
scas
add
ret
loop
or
imul
stc
icebp
loopne
jb
push
cli
inc
adc
test
sbbb
inc
xchg
or
mov
cld
and
scas
pop
jb
inc
add
dec
jge
in
gs
add
xchg
add
push
sub
and
cld
daa
jae
mov
sbb
imul
pop
mov
push
ffreep
pop
aam
mov
shll
mov
add
repz
addl
mov
idivb
xchg
inc
add
fsts
add
xor
add
rolb
sbbb
mov
add
out
lods
add
push
ret
pop
jbe
dec
xchg
pop
clc
sbb
and
inc
xchg
add
lods
std
jo
repz
filds
adc
sbb
aaa
adcl
pop
ror
hlt
or
sbb
pop
cmp
in
pop
add
dec
pop
subb
adc
fldenv
je
jle
add
dec
ret
adc
ljmp
subb
mov
ret
daa
lret
adc
inc
in
xchg
add
and
hlt
sbb
adc
fnstsw
pop
sub
inc
cmp
in
rcrb
lcall
add
addr16
push
add
out
jmp
push
pop
lcall
or
fadds
cmp
in
movb
mov
int3
xchg
lea
in
stos
jb
popa
movsb
add
push
mov
test
jecxz
sub
inc
in
cld
pop
push
mov
pop
xchg
xor
mov
or
add
rcrb
cmp
mov
add
and
add
aas
stc
xchg
add
out
clc
inc
mov
imul
inc
es
int3
sbb
push
or
and
add
inc
shr
gs
js
mov
pop
or
rorl
pushf
xchg
mov
xor
and
ds
pusha
dec
cmp
addr16
xorb
push
add
scas
dec
aaa
add
add
add
js
loopne
repz
pusha
jb
sti
and
push
aam
jnp
xchg
sbb
mov
pop
xor
lahf
dec
add
dec
xchg
sub
shlb
add
sbb
aaa
inc
hlt
daa
or
arpl
inc
pop
ljmp
mov
or
repnz
jp
lahf
repz
jns
outsl
test
hlt
cmp
sbb
cli
mov
js
push
sbb
mov
jb
andb
cli
xor
ret
out
andb
or
push
insl
sbb
dec
jl
push
mov
fisubrl
call
das
push
mov
testb
mov
insl
add
mov
adc
mov
mov
out
out
or
add
subb
movsb
add
add
xor
ja
clc
adc
xchg
cmpsb
loopne
inc
and
notb
daa
insl
fiadds
enter
std
lock
add
ljmp
add
insb
or
dec
sbb
pop
fisubrs
xadd
dec
pop
mull
cwtl
lds
in
add
jle
pop
push
loope
cmp
filds
push
daa
inc
sub
hlt
in
add
jecxz,pn
jne
xchg
ret
mov
push
fnsave
mov
movsb
scas
rcll
scas
push
add
mov
cmp
add
hlt
jo
add
roll
cltd
mov
int
fimuls
clc
add
lock
add
or
add
cmp
and
add
hlt
inc
pop
push
fistpl
scas
scas
mov
add
fldenv
inc
jge
mov
das
inc
clc
jne
lock
lock
fs
sahf
stos
pop
in
push
ds
in
add
test
dec
ret
inc
add
mov
orb
and
inc
pop
rcrb
add
pop
cmp
movl
cltd
adc
jecxz
loop
push
mov
pusha
cmp
inc
push
fisubrs
dec
add
pop
test
sbbl
add
mov
xor
push
cmp
mov
faddl
jl
iret
movsb
in
arpl
xor
mov
aam
addl
or
pop
test
mov
sti
adc
popf
cmp
in
scas
cmp
cmp
out
andl
add
aam
jp
add
es
pop
add
hlt
movsb
add
sbb
nop
aam
sarl
xchg
ljmp
bound
inc
je
sbbl
cmp
pop
fs
pushf
and
test
cmp
lock
outsl
push
in
test
push
test
inc
push
mov
cmp
xor
test
pop
push
jl
xor
mov
cmp
sbb
dec
data16
or
xor
xchg
fwait
adc
cltd
scas
adcl
and
stos
inc
xchg
stc
jl
movsb
sahf
sbb
out
mov
inc
add
popf
jo
sbb
int3
scas
jns
insl
cmp
add
fwait
gs
jg
push
and
jge
outsl
add
fcoms
jno
adc
fldt
mov
clc
add
mov
xchg
sarb
jle
add
adc
call
add
cwtl
inc
lea
inc
in
mov
add
jb
xchg
fstpt
pop
lea
test
icebp
imul
aam
mov
mov
mov
std
push
idivb
mov
cmpsb
jne
jae
insl
mov
add
jae
icebp
jns
rcrb
adc
jge
mov
ret
jae
and
lcall
sarb
add
outsb
aad
ss
scas
aas
cmp
cmp
sbbb
stos
add
lock
mov
push
je
pop
inc
mov
mov
das
mov
dec
cmp
mov
dec
xchg
mov
pop
cs
das
sbb
ja
test
int
dec
xchg
inc
int
iret
mulb
add
out
mov
std
mov
scas
ds
sbbl
nop
call
mov
pusha
out
fsubs
and
scas
stos
mov
hlt
sbb
rcrb
aas
orps
sahf
push
pop
mov
mov
push
adc
orl
jns
mov
notb
xor
push
jne
push
mulb
adc
scas
sbb
add
cld
push
add
xor
jns
test
rorb
inc
or
jns
add
and
stos
adc
jp
jbe
cwtl
pusha
push
andb
fdivrs
mov
mov
test
pop
add
shlb
mov
loopne
and
mov
outsb
mov
sub
mov
push
add
cmp
jge
dec
mov
pop
sbb
jecxz
jmp
dec
xor
ds
sbbb
xor
cmp
add
push
pop
pushf
out
in
sub
xlat
pop
pop
in
clc
add
lea
into
hlt
ds
pop
add
adc
shrl
add
out
or
lds
addb
mov
jge
push
mov
inc
xchg
ds
movsb
sub
or
stos
test
repnz
jbe
std
xorb
dec
into
jmp
cmp
push
mov
push
hlt
mov
andl
rorb
xchg
ret
testb
insb
sub
js
push
std
add
xchg
incb
ret
inc
fdivs
stos
scas
jl
nop
cmc
jbe
add
push
dec
icebp
insl
mov
add
mov
roll
nop
cwtl
add
ret
add
das
out
push
xorb
dec
adc
divb
and
jo
add
cltd
add
xor
mul
push
cmpl
sub
arpl
lea
push
add
adcb
jb
loopne
inc
xchg
into
or
ds
xor
rolb
inc
dec
icebp
sbb
and
push
cli
adc
shr
sbb
aas
mov
pop
mov
add
cmp
int3
pop
cmp
sub
cmc
or
loope
xor
pushf
or
jns
pcmpeqd
add
sbbl
cmp
add
scas
inc
mov
xor
lock
jp
mov
into
sbb
shrb
xchg
outsl
or
aaa
xor
rclb
add
xchg
pop
cwtl
lock
cmpsb
fsubl
pop
mov
int
aad
add
mov
mov
sbb
ljmp
or
cltd
pop
pop
out
rcrl
inc
repnz
and
shlb
mov
les
jne
add
fstps
xchg
mov
fld
add
pop
sub
in
cld
jge
add
mov
dec
xchg
pusha
mov
pushf
jle
lea
sti
push
push
cmc
jnp
inc
movsb
clc
cmpsb
add
test
cs
mov
call
xchg
add
mov
outsb
ret
sbb
addr16
pop
shrl
das
aaa
pop
cmp
inc
pop
push
xchg
cmp
jno
dec
add
insl
jl
inc
fwait
lods
add
lods
push
cmp
jmp
or
pusha
dec
dec
xchg
adc
rcll
sbb
bound
mov
sbb
pusha
jne
push
repnz
mov
xchg
or
push
out
call
loop
bound
lret
pop
fdivr
sub
and
add
add
and
mov
in
inc
adc
imull
call
mov
fistpll
test
mov
pop
sub
data16
sub
xor
jg
fiaddl
popa
cmp
fstl
sub
adc
add
icebp
out
inc
jecxz
dec
mov
add
ror
sub
mov
fs
dec
or
jge
xor
xor
lahf
add
fs
mov
mov
sub
ret
jg
add
js
mov
jno
pop
rcrb
shlb
jl
cmpsb
mov
and
adc
add
outsl
inc
sbb
rorl
jae
push
scas
pop
dec
xor
daa
jbe
mov
mov
cwtl
ja
addb
les
push
jmp
rcrb
push
inc
adc
mov
repnz
out
mov
mov
sub
lock
sahf
adc
mov
lods
js
sbbb
lcall
mov
xchg
add
fildl
pop
push
add
clc
push
das
cld
push
lods
cs
cmp
popa
aas
clc
pop
mov
jb
add
sub
sbb
xor
xchg
inc
lcall
fstl
push
sarb
movmskps
scas
add
cmp
add
jno
push
and
js
stos
xlat
inc
xor
pop
add
dec
mov
add
ljmp
pop
cmp
sub
popl
jbe
push
add
pop
scas
and
cmpsl
mov
cmovne
call
fsubrl
xchg
and
mov
inc
add
dec
adc
int
and
add
sbb
and
sti
lcall
add
pop
jp
cmp
scas
sub
add
push
jae
mov
mov
cmpb
call
add
es
orl
cmp
mov
add
mov
fmull
aad
add
and
loopne
mov
pop
les
sarb
rcr
jo
mov
test
subl
out
inc
inc
mov
insl
add
or
dec
je
rcll
stos
pop
jns
dec
out
adc
or
inc
push
jg
addb
dec
pop
push
movsl
clc
inc
mov
std
cmp
imul
mov
jbe
jle
sbb
jnp
xchg
add
fldl
add
adc
sbb
pop
adc
mov
lods
add
jge
or
add
test
mov
inc
daa
add
jp
xchg
dec
sarb
dec
imul
pop
add
popf
xor
cmp
sub
push
mov
sbb
daa
sub
push
mov
inc
lods
adc
divl
out
xor
add
and
lods
jle
ljmp
out
cltd
test
jmp
sti
outsl
add
xor
xchg
mov
fimull
fldl
arpl
shr
mov
cmp
fbstp
decl
mov
scas
sub
adc
movsl
add
sahf
add
test
and
sub
and
shll
and
xlat
mov
cli
add
jge
cmp
aam
fistps
loop
add
out
das
test
cmp
orb
add
call
scas
xchg
xor
dec
movb
cli
xor
out
mov
xchg
sbb
cld
dec
add
add
loope
mov
pop
push
fwait
add
jno
push
fcmove
mov
add
pop
mul
pushf
add
or
cmp
mov
lock
adcl
pushf
lea
shrl
enter
lods
mov
pop
jne
mov
mov
pop
push
add
cmp
add
push
in
or
outsb
push
dec
mov
aad
test
add
divb
lock
jmp
pusha
push
push
add
mov
or
add
int
icebp
out
push
ds
mov
roll
cmp
xorb
les
or
adc
mov
jmp
sbb
mov
inc
pop
into
add
lock
mov
es
loopne
std
lret
in
in
and
inc
and
add
xchg
jb
inc
rolb
mov
push
push
cmpsb
mov
dec
xor
lods
fcmovnu
mov
add
xchg
pop
or
fsubr
sahf
mov
add
outsl
cmpsl
insb
lods
xchg
into
add
fsub
test
hlt
cmp
add
mov
pusha
add
roll
jmp
mov
mov
inc
cmp
in
les
inc
mov
ljmp
push
fs
fimuls
jge
xchg
sahf
clc
cmp
dec
ds
inc
repnz
out
out
nop
add
jo
mov
mov
dec
xor
or
add
sbb
add
jno
jb
shll
add
in
dec
jnp
icebp
loopne
add
es
mov
stos
mov
and
jg
shlb
andl
daa
hlt
mov
mov
notl
pop
sbb
je,pn
rcll
dec
ret
add
jl
jmp
push
dec
cmp
add
prefetcht2
and
fs
ss
add
add
xlat
pop
sbb
mov
pop
add
add
cwtl
xor
add
jmp
lds
mov
lret
mov
inc
dec
in
push
add
das
sbb
jb
xchg
fisubs
inc
sbb
add
out
add
scas
jno
int
daa
xchg
add
ljmp
pop
and
addb
fadds
add
repz
pop
not
nop
loopne
mov
jp
dec
loop
mov
leave
sub
movsl
dec
and
jle
int3
pop
in
inc
insb
add
pop
rorb
nop
mov
ja
adc
shlb
pop
cmp
and
cmp
xchg
jne
xor
mov
fstl
xor
mov
mov
sub
out
jns
arpl
mov
out
push
scas
sbb
or
fwait
mov
jb
sbb
insl
mov
mov
std
jmp
ss
cmp
mov
add
sub
sub
rcll
mov
mov
ja
add
popf
mov
nop
mov
es
mov
dec
add
adc
negb
nop
cmp
gs
xchg
mov
scas
les
adc
and
lds
jmp
push
xchg
inc
pop
in
add
add
inc
or
xchg
mov
arpl
loope
lret
xor
xor
into
cmp
adcb
pop
jecxz
pop
bswap
push
imul
add
ja
sub
jne
test
add
les
or
cmp
shlb
xchg
cli
ljmp
add
or
lds
int
clc
das
mov
movsl
rcrb
pop
repnz
and
in
addb
ret
sti
or
cli
out
aad
cwtl
loope
hlt
add
pop
repz
aas
xor
addr16
dec
enter
rcrb
inc
xchg
in
push
ja
pop
and
add
dec
add
mov
xchg
sbb
and
adc
das
and
ljmp
dec
add
in
aam
mov
dec
sbb
jmp
jo
bswap
mov
or
add
add
adc
lret
adc
loopne
pop
lds
dec
xor
mov
xor
lcall
xchg
mov
pop
insl
sbb
or
pop
xor
loopne
fldl
xor
adc
andb
daa
xchg
sub
test
iret
inc
lock
lock
mov
icebp
inc
test
orb
cltd
push
dec
dec
push
test
stos
push
xor
xchg
mov
sbb
push
aas
push
in
and
dec
lds
cmpsb
testb
dec
daa
cmc
mov
xchg
adc
xor
repz
cli
add
cmp
std
mov
jl
add
inc
cmpl
push
stc
xchg
mov
add
mov
pop
cmp
fcmovnbe
cmp
jno
and
flds
ja
xor
test
int3
xor
cld
mov
and
rcrb
inc
ljmp
add
clc
push
fsts
sub
hlt
lcall
mov
sub
lcall
mov
xor
notb
cmp
test
aaa
add
fsts
jno
mov
incl
jne
or
sub
dec
xor
cmp
cmp
out
or
sub
jo
jae
fstpt
inc
pop
add
jecxz
fcmovne
aad
xchg
inc
jno
addl
in
pop
add
cmp
mov
insl
pop
dec
and
mov
mov
jo
sub
cmp
jbe
mov
cld
inc
insl
add
inc
adc
push
sahf
dec
push
add
xlat
cmp
pop
movsb
pop
shlb
cli
sbb
jns,pn
xor
bound
cmp
dec
add
fsincos
or
and
adc
add
stos
inc
xchg
add
xor
push
and
add
call
push
cmp
test
or
repnz
sbb
jmp
and
push
jge
dec
ja
xchg
je
mov
pop
xchg
add
cmpsb
call
cmp
add
or
and
pop
push
hlt
insl
cmp
gs
adc
add
xor
cmp
xor
out
xchg
pop
add
cmp
scas
pusha
or
das
sub
xor
stos
pop
shlb
xchg
mov
clc
in
mov
mov
sbb
or
xchg
addr16
dec
pop
les
pop
cmp
enter
stos
pop
sahf
sub
data16
fldcw
paddw
loop
xchg
mov
fimull
insb
mov
lods
movsl
cwtl
ja
inc
mov
hlt
mov
pop
add
adc
jmp
jae
inc
pop
add
js
sbb
cmp
js
add
push
or
jno
call
stc
mov
les
sti
pop
dec
sbbb
mov
pop
mov
cwtl
lock
push
pop
dec
add
fidivs
push
jo
ficompl
jno
lahf
sbb
adc
add
sub
and
cmp
nop
ret
add
xchg
ret
gs
xor
cltd
repnz
in
ja
iret
hlt
push
add
pop
xor
mov
add
cmc
or
inc
dec
int
and
addb
adc
test
xchg
cwtl
dec
xorl
nop
cmp
adc
test
push
add
stos
mov
dec
pop
xchg
or
in
xchg
hlt
sub
sbb
cmp
adc
pop
inc
lret
outsl
test
mov
add
pop
and
ret
jnp
add
or
fdivrs
popa
repnz
inc
add
mov
push
adc
or
pop
andb
add
mov
cmp
add
pop
roll
seto
ss
cmc
xchg
cli
in
js
or
decb
aad
pop
imul
fldt
js
inc
aam
xchg
add
loop
aad
fmuls
adc
popf
enter
push
pop
pop
sub
sbb
add
cld
ror
inc
test
negb
push
dec
and
call
mov
pop
jo
int
cs
sbb
fildl
jb
push
pop
arpl
out
lcall
pushf
push
lds
push
add
and
or
or
sbbb
sbb
mov
std
push
mov
xchg
xchg
pop
adc
loop
popf
out
pop
mov
add
push
aas
rcrl
xchg
nop
loope
pop
cmp
dec
add
sarb
sub
mov
xchg
mov
mov
mov
and
mov
or
dec
xor
in
pop
xchg
sub
inc
enter
mov
xor
sub
cmp
in
jnp
jle
xor
mov
cmp
xchg
push
imul
adc
leave
add
out
addl
sbb
shrl
das
call
popl
addb
xchg
sbb
js
sub
int
add
or
pop
or
sub
addb
cmp
or
add
pop
push
cld
je
add
shlb
or
add
in
push
inc
xor
mov
jmp
mov
push
dec
add
sar
ss
mov
dec
dec
jo
jb
dec
jne
add
xorl
jg
push
mov
lds
push
adc
add
pop
pop
test
pop
lea
arpl
push
movsb
ret
je
inc
loope
bound
popf
add
inc
ret
add
rol
mov
inc
test
mov
add
inc
and
stc
push
mov
jecxz
mov
jae
push
test
mov
in
inc
add
ja
lock
inc
push
xchg
adc
add
daa
or
push
add
imul
rol
add
add
ror
faddl
and
mov
call
shlb
aam
enter
inc
cwtl
mov
clc
add
popf
jnp
adcl
inc
add
insl
cmpb
shlb
in
push
stos
ds
mov
add
sbb
inc
sub
adc
jae
dec
test
add
test
sldt
icebp
pop
les
jne
aas
add
iret
dec
add
in
dec
jnp
push
pop
cli
lods
dec
lcall
data16
add
push
pop
popa
fwait
mov
imul
jle
add
into
and
jne
and
jb
jae
jle
aad
icebp
xor
add
shl
rcrb
or
test
les
pop
lret
fwait
add
idivl
aam
xchg
sbb
xor
inc
pop
call
add
in
gs
inc
test
add
fwait
pop
std
cmp
add
mov
bound
add
adc
add
pop
pop
xchg
lods
push
in
xor
lds
xor
cmp
mov
insl
jg
mull
push
mov
or
in
xor
shlb
pop
add
out
jne
add
clc
mov
add
mov
aam
jns
jg
xor
into
xchg
mov
xor
test
pop
add
test
or
movsl
sbb
iret
or
xor
das
xor
test
insl
pop
pop
ficompl
mov
mov
sarb
add
push
int
or
add
xchg
out
xor
xchg
aas
lcall
out
out
add
icebp
sub
mov
ss
pop
push
jnp
out
add
subl
add
jae
out
mov
xorb
add
adc
sbb
dec
push
aas
fwait
in
es
loopne
xchg
mov
nop
clc
mov
jno
inc
cmc
cltd
roll
mov
movsb
pop
mov
je
pop
add
mov
invd
add
dec
ret
jb
xchg
xlat
dec
scas
loope
inc
pop
out
repz
ret
inc
mov
xor
pop
adcl
lock
jl
mov
adc
sarl
cltd
imul
imul
mov
fsubr
stos
testb
or
rcrl
cmp
jmp
repz
and
fbstp
mov
movsb
aad
iret
jl
jecxz
xchg
out
roll
ja
sub
cwtl
rolb
pop
dec
lock
fiadds
int
add
dec
ficoml
stos
xchg
xchg
add
xor
xor
xor
push
add
das
xchg
sub
fdivrs
add
dec
lahf
shrl
aam
test
cmp
xchg
cwtl
sub
xlat
ret
loopne
test
int
jecxz
adc
add
dec
add
adc
push
shll
lret
dec
imul
rcrl
orb
mov
scas
xchg
push
repnz
jmp
xchg
push
add
shl
jp
sbb
les
mov
shl
pop
add
dec
push
and
mov
int
pop
faddl
aad
movsl
add
inc
xchg
push
sbb
xchg
add
aad
and
mov
mov
clc
outsb
std
ljmp
xchg
mov
and
add
xchg
adc
cs
push
add
sbb
sti
mov
ret
mov
and
cmp
test
push
lock
fldt
pop
xchg
pop
mov
aam
cmp
mov
pusha
add
sub
fucomp
dec
xor
jge
js
ss
mov
rcrb
enter
psrlw
sub
inc
and
push
mov
out
outsb
adc
inc
xlat
bound
filds
jp
cmpsb
cmp
cltd
in
mov
push
mov
cmp
test
xorl
fisubl
or
cwtl
xlat
cmp
dec
push
adcb
shrl
or
or
mov
jg
ud1
or
dec
cmp
mov
ja
mov
mov
bound
push
jp
call
les
push
push
jns
mov
loope
fistl
cld
mov
mov
ds
in
divb
jle
jns
add
fnsave
into
add
jno
add
jl
mov
je
mov
nop
andb
and
mov
cmp
insb
inc
push
inc
mov
jl
mov
enter
pop
pop
inc
mov
lcall
lcall
xlat
sti
lock
dec
xchg
add
mov
push
add
lcall
add
cmp
jae
add
pop
sbb
outsl
pop
loop
dec
in
mov
xor
jp
aas
mov
adc
repnz
xchg
xor
in
mov
sub
icebp
push
mov
les
or
int
add
sbb
adc
rorl
ljmp
jg
gs
cmp
mov
add
dec
mov
loop
data16
cmp
add
lds
in
test
xchg
pusha
imul
mov
repnz
insb
dec
addb
add
lret
in
pop
es
dec
filds
call
jmp
clc
jo
add
int
push
in
pushf
jo
int3
add
mov
imul
pushf
push
xchg
sub
js
jle
loop
inc
pop
das
push
cmp
sbb
add
adc
popf
pusha
scas
pop
add
pop
movsl
mov
or
cmp
add
insl
mov
pusha
mov
test
sbb
push
mov
shl
jnp
nop
jl
orb
rolb
mov
fistpll
pop
aad
fdivl
movsb
inc
add
dec
or
add
test
ficoms
hlt
filds
cmp
sti
fs
cmpb
outsb
pop
dec
aam
sbb
mov
scas
xchg
add
lds
xor
hlt
int
mov
addl
pop
jo
add
pop
jae
in
add
aaa
xor
sbb
dec
mov
mov
rolb
in
ss
pop
push
mov
es
sbb
or
xchg
push
pop
jo
push
mov
mov
in
stos
enter
loop
add
sub
test
jno
jg
add
pop
aaa
add
mov
cld
xlat
jae
cmc
add
mov
dec
pushf
cmpsb
xor
push
dec
pusha
mov
cld
jnp
fwait
es
das
jne
iret
sub
daa
or
xchg
leave
push
aas
in
xchg
xor
pop
lcall
je
sub
rolb
data16
sahf
inc
add
test
sbb
sub
fs
movsl
push
movl
and
and
cmpsb
add
arpl
pop
push
jge
out
out
jg
rolb
xchg
lret
fiadds
mov
sbb
addb
scas
shr
std
hlt
add
cwtl
dec
add
xlat
pop
cs
sbb
cmp
test
and
mov
cmp
rcrb
or
mov
add
test
cli
adc
data16
mov
push
ss
push
loop
xchg
inc
aam
mov
imul
rcrb
lea
rorb
js
add
mov
add
fstl
xor
inc
xchg
lea
clc
aam
add
imul
add
adc
xorb
and
roll
and
orb
fs
add
negb
ljmp
repnz
and
pusha
ret
test
nop
jmp
xlat
cmp
jae
xor
jo
add
ja
mov
sbb
and
add
xchg
aas
add
test
hlt
into
punpckhwd
adc
add
push
int
add
pop
enter
adc
cld
dec
xor
leave
or
push
sub
cltd
rcrb
std
out
cmc
mov
and
add
mov
jno
mov
adc
loop
add
push
push
pushw
clc
testl
and
aas
sbb
add
popa
and
fldt
add
sub
xor
push
shll
dec
mov
out
cwtl
sub
addb
xor
xchg
insb
mov
jg
cmpsb
lea
jnp
mov
es
aaa
pop
insl
adc
push
scas
sub
jne
cmp
out
add
jb
add
into
pop
inc
pop
outsl
inc
lahf
lcall
add
push
pusha
push
cltd
aas
lea
xchg
dec
cmp
add
daa
pop
mov
push
add
scas
add
jmp
push
lahf
test
mov
shl
jne
jo
xor
jnp
add
mov
mov
sbb
dec
jmp
push
cmp
movsl
call
aad
out
in
mov
jl
nop
out
clc
clc
in
negb
sbb
mov
jl
xchg
cmp
mov
and
leave
lds
and
xlat
sbb
inc
je
loopne
xchg
jl
std
or
add
lock
addb
je
in
mov
cmp
adc
outsl
adc
out
mov
adc
loop
add
int3
inc
pop
or
ret
shll
xor
sub
or
add
clc
cli
add
and
adc
dec
popa
add
adc
mov
add
push
cwtl
push
fisubrs
rcr
stc
jg
add
mov
shr
in
scas
push
in
cmpsl
push
loope
mov
push
sub
cmpb
push
cmp
aad
mov
add
inc
aas
dec
jns
add
dec
cmc
aaa
les
mov
inc
mov
adcb
sahf
out
repz
jno
pusha
decb
xor
push
das
and
mov
movsb
mov
fcompl
sub
inc
addb
outsl
int3
or
in
pop
es
sub
inc
hlt
or
xchg
add
loopne
pop
aam
popa
shlb
push
or
in
add
movsl
stc
subb
jg
push
insl
mov
and
shlb
xchg
mov
pushf
ret
sbb
xor
mov
out
jecxz
and
les
xchg
addb
mov
jb
dec
cmp
jnp
xlat
add
dec
cmc
hlt
mov
cmp
cmp
jge
test
mov
add
adc
jge
jle
lock
mov
mov
jl
add
push
inc
mov
or
fwait
add
bound
les
sarb
push
cmp
in
faddl
sahf
dec
mov
int3
pushf
adc
fucomp
mov
push
xchg
xchg
add
pop
ljmpw
add
movsl
lds
xchg
outsb
add
pop
mov
and
mov
mov
xor
add
into
mov
add
or
repz
nop
mov
mov
mov
dec
nop
inc
arpl
and
fidivs
add
sarl
push
mov
mov
push
adc
add
dec
mov
mov
iret
inc
out
mov
mov
test
sub
or
ss
in
push
mov
ret
add
out
into
aas
jbe
in
mov
jo
push
mov
orb
mov
adc
mov
add
mov
rol
lock
add
movsl
pop
xchg
cwtl
add
push
aad
cld
addb
jnp
jle
je
cld
pop
sbb
add
test
shll
cmp
pop
sbb
fsub
xor
sbb
pop
inc
lds
and
rolb
cmp
jae
sbb
xor
adc
rol
stos
sub
clc
sub
dec
pusha
aam
cmp
add
cmpsl
pop
sbb
mov
cs
addr16
add
inc
add
adc
and
mov
add
mov
dec
dec
les
test
add
fstpt
mov
lahf
fdivp
int
add
adc
add
js
sub
pusha
sbb
roll
lcall
or
pop
push
loop
push
add
js
jbe
mov
cmp
and
cmp
sub
push
dec
or
pop
cmpsb
lods
mov
xor
int
inc
and
adc
cmp
fdivs
add
andb
dec
jb
add
call
stc
popa
pop
add
mov
pop
in
jg
sub
fs
dec
insb
mov
xchg
dec
int
sbb
pop
sbb
xchg
addb
xor
mov
add
in
andl
out
cmpsl
push
mov
or
mov
idivb
imul
ss
in
xlat
add
xor
cmp
pop
xchg
push
add
imul
int3
add
push
outsl
fildl
scas
xchg
addb
lea
sub
cmp
add
dec
sbb
push
xor
fcomi
arpl
rcrl
in
jg
cmp
fldenv
js
cwtl
in
imul
stc
jl
jmp
cwtl
rclb
push
sbb
cs
dec
loope
in
and
scas
mov
mov
inc
cld
les
adc
out
xlat
inc
mov
psrlw
add
mov
enter
jae
xchg
mov
mov
add
in
push
add
bound
lret
movsb
enter
mov
in
js
sub
cmc
bound
gs
cld
cmp
aad
pop
xchg
and
rcrb
in
xor
push
adc
add
sub
cmp
loope
insb
dec
add
jno
mov
and
lock
lds
jne
jg
cmp
add
jmp
rcrl
xchg
inc
popf
mov
in
mov
cmp
xchg
add
push
rdtsc
pop
mov
arpl
mov
dec
hlt
cmp
mov
push
inc
mov
stc
testb
das
mov
and
fistl
push
add
jmp
nop
push
and
daa
test
hlt
loopne
je
add
inc
inc
xchg
aaa
jl
jne
les
icebp
pop
out
sbb
sar
pusha
mov
cmpsl
inc
add
ja
cmp
and
sbb
dec
adc
xchg
dec
sbb
loopne
fdiv
jmp
outsl
jnp
push
int3
and
mov
hlt
push
in
pusha
imul
stc
lret
aas
xchg
adc
outsl
cmp
into
adc
pusha
and
ja
push
mov
pop
add
mov
in
add
add
push
mov
test
iret
xchg
outsb
add
add
movsb
add
xorb
nop
add
inc
inc
cld
lods
sbb
fstps
rcll
mov
iret
add
scas
shr
nop
insb
adc
mov
push
lods
add
imul
or
lock
mov
fs
push
cmpsl
fdivrl
std
cmp
shlb
popa
inc
imul
iret
mov
or
xchg
mov
push
sub
sub
lret
stc
adc
gs
xor
adc
stos
sti
inc
add
lcall
add
bound
pop
mov
loopne
pop
adc
jg
and
dec
and
adc
dec
add
insl
push
mov
adc
mov
scas
xor
sbb
setl
mov
adc
ret
popa
int
fptan
mov
ror
pop
cmp
maskmovq
idivl
inc
loopne
in
sbb
add
jb
mov
pop
adcb
cwtl
mov
loop
clc
dec
roll
add
sub
ret
inc
jl
mov
out
fadd
popa
stos
mov
in
lea
adc
inc
mov
add
into
dec
xchg
push
xchg
pop
and
mov
clc
xchg
add
nop
pop
sub
scas
sbb
xorb
mov
sbb
xchg
cmp
sbb
xchg
mov
inc
cmp
ja
lock
sub
stos
sbb
pop
enter
push
sbb
jge
add
or
add
enter
add
ret
add
repz
and
rorl
push
push
or
push
cwtl
pop
xor
inc
mov
call
adc
in
cmpsl
add
icebp
push
into
inc
leave
sahf
push
xchg
lods
pop
iret
adc
push
ds
sub
cmp
adc
lods
push
jmp
dec
sub
push
push
add
jns
jge
inc
xorb
notl
push
inc
pop
ljmp
add
dec
stc
add
in
insl
in
std
lahf
or
add
xor
jecxz
push
in
add
lds
imul
cmp
notb
sbb
incb
hlt
mov
test
add
push
cli
lods
ss
add
sub
push
paddq
and
lods
stos
loope
sbbb
xchg
stos
addr16
jbe
ret
pop
push
push
xor
std
inc
jns
adc
in
aas
test
inc
add
hlt
dec
cmp
dec
add
lret
sbb
sub
xchg
faddl
loope
dec
cmc
mov
add
in
shll
aas
inc
xor
dec
jmp
subb
ljmp
insl
add
sbb
roll
aam
dec
mov
ss
jl
jb
sub
test
jo
add
into
sbb
mov
push
mov
mov
mov
add
adc
in
cmpsl
subl
dec
sub
and
pop
push
fnstsw
add
insl
scas
popf
out
pop
or
and
les
or
mov
pop
mov
mov
or
add
psubsw
sub
dec
pop
sbb
int3
mov
fnstsw
rcrb
addb
push
add
adc
dec
adc
stc
lcall
stos
mov
mov
mov
add
ret
push
insb
dec
add
in
mov
add
and
arpl
xor
fmull
pop
ljmp
xchg
mov
movsl
and
stc
pop
popa
lret
outsl
test
scas
xor
fwait
xlat
add
pop
mov
lods
es
loopne
std
fxch
add
loopne
mov
sbb
cmpsl
sarb
sti
mov
add
loop
sub
leave
sbb
jae
add
fsubs
add
les
sbb
add
gs
mov
pop
cmp
xorl
and
mov
pop
add
sbb
lret
or
adc
fiadds
cmp
cwtl
mov
add
loope
icebp
add
xor
stos
and
or
pop
dec
mov
jno
xchg
xor
stos
add
inc
xor
xorl
inc
lods
pop
mov
repnz
adc
pop
divl
jne
aad
icebp
call
xchg
add
fldcw
dec
cltd
nop
andb
push
out
cmp
roll
sub
fdivl
add
je
in
mov
je
std
pop
test
lock
adc
ds
push
in
or
xor
dec
add
cs
pop
push
xlat
sub
aam
addl
sub
jmp
sbb
ror
sub
xchg
ds
mov
and
fdivrl
cmp
and
dec
push
add
lock
dec
sbb
sbb
add
imul
in
addr16
xor
cld
or
out
daa
pop
js
jle
add
xchg
out
jmp
mov
or
lds
je
dec
shll
call
pushf
fbstp
add
mov
cmp
repz
in
ljmp
ret
call
mov
add
loopne
nop
jo
mov
add
inc
das
jecxz
xchg
or
jge
sbb
cmp
outsl
mov
pop
and
inc
out
enter
lea
loop
xchg
cmp
mov
negl
mov
ss
cmp
xchg
call
das
cmp
mov
lret
aad
lret
add
adc
or
jae
loope
cmp
pextrw
xchg
jnp
out
push
xchg
adc
ljmp
imul
push
mov
push
and
pop
out
xchg
aam
push
cmc
fsubrl
add
into
inc
cmpsl
pop
lock
daa
mov
repz
mov
add
xacquire
and
xchg
mov
roll
scas
add
fwait
add
cmp
into
adc
push
inc
add
lods
mov
mov
ja
out
xchg
mov
testl
mov
iret
mov
push
sbb
out
jmp
xor
adc
adc
testl
adc
mov
and
or
das
mov
ds
push
pop
outsb
xor
shlb
mov
nop
mov
and
adc
sar
adc
ljmp
arpl
std
lea
add
addr16
or
add
inc
icebp
add
dec
daa
popa
int3
or
xorb
hlt
add
pop
mov
jle
add
push
jge
in
add
inc
mov
xor
jbe
std
cmpsl
outsb
add
add
fmuls
loop
stos
add
out
je
inc
fwait
add
xchg
or
cld
clc
int3
sbb
stos
add
adc
lcall
mov
add
lret
lahf
pusha
inc
cwtl
jge
push
fmull
shl
lds
jne
clc
sbb
mov
pop
inc
pusha
sub
fisubs
in
jo
mov
adc
mov
pop
scas
mov
cmp
add
mov
jo
jmp
push
mov
bound
ds
pop
mov
mov
or
cld
xchg
sub
jmp
shrb
mov
lret
ret
scas
and
lods
fdivrl
sahf
or
push
jecxz
cwtl
add
sub
cli
jo
add
xchg
movsl
shlb
addr16
testl
loop
stos
xor
lldt
fs
lods
cmc
addl
adc
andb
add
loop
jno
ljmp
push
ficoml
lods
add
insl
xchg
dec
xchg
cmp
sub
cmp
fidivrl
mov
sbb
mov
or
inc
cmp
popf
jl
iret
add
je
fiaddl
in
sbb
cmp
lods
and
fsub
imul
xor
std
push
or
pop
shr
inc
in
ficompl
dec
sub
add
nop
mov
iret
imul
mov
cmp
icebp
mov
dec
je
xor
lea
inc
push
push
adcb
xor
add
cs
js
outsb
mov
test
pusha
adc
add
mov
pop
xor
and
je
imul
mov
loope
add
lock
inc
sub
sbb
jno
mov
shll
adc
adc
lahf
mov
add
jp
inc
test
insb
pushf
sub
repz
add
rcll
dec
sbb
xchg
pop
hlt
rclb
test
popa
addb
fldl
pop
dec
inc
loopne
adc
test
js
ljmp
out
xor
xchg
scas
add
xchg
mov
add
lods
pop
sub
cmpsb
sub
stos
iret
loopne
jp
adc
cmpsl
adc
add
cmc
popf
stos
add
push
subl
call
inc
xchg
repnz
add
into
pop
verr
add
xchg
addb
or
roll
inc
add
pusha
xor
add
and
iret
aaa
popa
stos
les
std
sbb
call
adc
jg
jae
add
enter
repz
inc
push
adc
cmp
dec
cmp
add
cmp
mov
lock
or
xlat
mov
stc
add
out
fiaddl
add
adc
lret
pop
xchg
mov
mov
orb
cmp
fcompl
add
pop
popf
dec
int3
pop
fstps
add
mov
mov
inc
add
imul
xchg
mov
pop
adc
lods
add
divb
dec
pushf
add
mov
lret
fsubrl
add
push
int
fildll
push
pusha
ret
pop
je
das
push
sar
gs
mov
lret
and
pcmpgtb
mov
pop
sbb
mov
loope
mov
orb
mov
movsl
sbb
add
sbb
jnp
pop
lea
aas
pop
imul
add
pop
pop
sbbb
aaa
add
fwait
popf
aad
cmp
mov
and
mov
mov
add
adc
mov
mov
leave
push
inc
jp
xor
pusha
dec
xchg
into
mov
aas
add
ficompl
pop
and
push
fldl
pop
mov
jae
add
or
and
cmpsl
sarl
xor
cli
repnz
dec
test
cmpsl
ja
dec
mov
adc
loop
jo
inc
lea
push
push
test
pop
adc
clc
cmpsl
iret
mov
pop
call
lcall
shlb
or
pop
fwait
mov
pusha
sbb
jl
inc
in
lock
std
lret
cld
lcall
lods
shll
bound
sub
in
lods
sub
pop
xchg
add
jg
fisttpll
lods
xchg
add
stos
push
lret
add
sub
cltd
gs
inc
out
inc
add
mov
cmp
xchg
add
fsubr
in
add
scas
andl
inc
loop
inc
cwtl
mul
jnp
add
jecxz
dec
xor
adc
fwait
or
pop
je
inc
fiaddl
jo
test
add
pop
sub
jle
xor
add
cmpb
roll
and
int
addb
xchg
sub
ret
outsb
add
movsb
inc
adc
or
adc
and
sub
mov
enter
shl
dec
xchg
lock
dec
add
adc
rcr
push
sahf
fwait
dec
add
adc
lock
out
outsl
add
dec
addl
cwtl
std
push
fwait
pop
xchg
jg
mov
test
in
clc
movsb
mov
pop
mov
rolb
push
ljmp
inc
push
jp
push
dec
lret
xchg
or
outsb
cmp
add
push
xor
ss
inc
adc
dec
fsubrs
push
subb
cmp
adc
call
add
std
shll
add
add
loope
xchg
mov
push
mov
hlt
pop
cld
jne
aam
ss
mov
add
dec
adc
roll
push
push
popa
cmp
push
xor
and
outsb
pop
jae
mov
data16
es
jecxz
xchg
rolb
push
out
loopne
push
mov
das
xchg
inc
fwait
mov
ljmp
mov
add
iret
into
aad
aaa
stc
mov
xlat
dec
cli
xchg
fildl
adc
xor
sub
lds
outsl
addr16
fstps
lret
mov
dec
les
sbb
cmc
or
sub
in
aad
add
mov
enter
and
mov
push
add
adc
addb
cmp
lds
stos
fbstp
call
or
pusha
and
or
sbb
inc
lods
xor
xchg
mov
push
and
jno
jnp
add
test
dec
jne
add
fs
inc
les
lea
push
bnd
and
dec
push
add
xor
add
push
sbb
ja
add
jmp
hlt
jae
push
nop
sbb
dec
mov
xor
aaa
pop
cmpsl
mov
xor
add
movsl
int
push
push
jmp
int3
fmuls
pop
lahf
xlat
sbb
loop
pushf
push
adc
mov
jb
add
clc
lret
mov
aas
iret
call
or
push
pop
xchg
out
cwtl
xorb
js
mov
jmp
out
nop
mov
dec
cmp
rep
mov
inc
lods
push
lods
xchg
mov
xor
jbe
call
pushf
ret
fmuls
pop
sbb
fisubs
pop
mov
jecxz
cld
jmp
add
das
and
mov
in
push
cmpsb
loope
iret
push
test
cmp
ret
add
aam
mov
arpl
shrl
xchg
xchg
lret
pop
add
iret
and
daa
dec
mov
pop
test
lret
sub
enter
js
mov
clc
xchg
aaa
or
sbb
push
xchg
push
and
or
and
jl
or
mov
mov
imul
in
xchg
xor
sub
add
test
scas
inc
cmp
inc
cmp
into
inc
jb
push
xchg
inc
int3
lods
loope
sysexit
adc
int
lahf
cwtl
jnp
jg
pop
stos
inc
test
push
add
adc
mov
pop
imul
daa
pop
outsb
add
ss
add
leave
cld
sti
mov
mov
pop
add
mov
or
in
int3
cli
incb
inc
or
imul
gs
loop
mov
jle
add
test
pushf
dec
data16
bnd
inc
push
nop
and
push
inc
xchg
pushf
xor
pop
push
je
add
loopne
sbb
std
daa
ljmp
arpl
sub
ret
pop
mov
dec
aas
popa
loopne
loope
fadds
ret
jmp
add
loopne
push
aam
inc
push
dec
xchg
add
js
or
add
and
jo
in
jne
dec
clc
xchg
mov
fisubl
out
dec
or
adc
test
lahf
cmpsb
mov
mov
mov
and
or
and
add
mov
xchg
imull
mov
lock
pop
sbb
hlt
xchg
sbb
loope
fisubl
test
incl
pop
lahf
mov
inc
add
mov
sbb
cmpsl
pop
loopne
sub
add
mov
add
cmpsl
mov
sub
or
push
jp
les
xchg
rdmsr
rorl
or
adc
pop
icebp
push
div
push
mov
cmpsl
push
fiadds
scas
xor
jo
lds
sub
jns
add
leave
pushf
movsb
sbb
or
mov
jl
int3
inc
jp
or
shlb
loopne
add
mov
mov
repz
push
ja
lods
cmpb
adc
lcall
pop
js
lea
push
push
shl
pop
pop
sub
xchg
sbb
or
testl
pop
mov
adc
mov
sahf
push
lret
fists
adc
aad
push
sbb
into
push
popl
call
dec
cmp
add
cmp
dec
sub
inc
sbb
sub
xor
enter
sub
out
and
jmp
xor
add
cmpsl
loope
add
arpl
jbe
inc
add
stos
inc
sbb
cmp
add
ljmp
cmpsb
ds
icebp
sub
sbb
pushf
or
jo
ds
jmp
ljmp
sahf
cmp
push
je
add
outsl
sbb
and
fmull
popf
dec
das
add
ja
arpl
out
idiv
xchg
cmpps
mov
push
add
es
popa
add
and
or
aad
loope
add
mov
jns
jae
jne
sbb
push
orps
mov
data16
adc
sarl
fsts
push
lods
cmc
sub
and
mov
rorl
pusha
in
outsl
push
inc
fldl
pop
push
add
cmp
adc
leave
xor
pop
add
mov
sti
cld
dec
addl
outsl
pushf
mov
inc
push
inc
not
pusha
iret
cmc
cld
out
sub
ljmp
push
inc
push
push
pop
inc
xchg
sub
mov
fisubl
add
dec
aad
add
xchg
lcall
ret
adc
popa
insb
push
ljmp
mov
mov
sbb
mov
dec
mov
add
aas
fwait
add
daa
ret
cmp
dec
add
testl
les
jae
inc
rolb
sbbb
in
inc
inc
jnp
add
test
xor
sub
and
stc
pusha
dec
sbb
mov
outsb
inc
jns
and
cmc
jg,pn
in
add
pop
jno
fsub
add
lock
add
inc
loopne
or
jns
sbb
push
ffreep
and
dec
or
cltd
push
arpl
mov
push
pop
mov
xor
cld
aas
mov
or
addb
out
xor
loope
adc
nop
sbbl
ljmp
inc
pop
add
fsts
inc
icebp
push
or
xor
repnz
loopne
sub
push
cwtl
jns
rorl
std
movsb
add
push
xchg
push
call
imul
repz
fucomi
pop
cmp
dec
adc
shrb
aas
rcr
or
in
xchg
dec
or
stc
lcall
push
out
cld
rcrb
sub
push
add
and
rep
iret
or
mov
insb
mov
dec
sti
enter
add
adc
mov
add
add
insl
sbb
clc
addr16
mov
add
in
sub
and
jbe
xor
rolb
or
packuswb
push
mov
or
add
shll
cmpsb
shr
push
mov
inc
xor
dec
sbb
add
or
loope
push
sub
int3
or
mov
push
jae
sbb
imul
or
mov
mov
testl
push
rcll
nop
add
sub
test
push
flds
imul
pop
pop
pop
push
pop
lds
push
inc
shl
fmul
add
pusha
jne
ja
fiadds
adc
sbb
sbb
pop
inc
in
add
cmp
adc
push
hlt
add
imul
daa
xor
scas
out
add
push
pop
mov
add
push
in
loopne
test
call
xchg
pop
add
lea
jne
das
mov
xchg
dec
add
outsl
mov
sbb
hlt
push
into
icebp
sti
cmp
sahf
jno
or
mov
xor
lahf
jle
add
in
sbb
xor
repnz
add
add
mov
les
loopne
cltd
jnp
mov
xlat
movsl
add
pop
inc
push
inc
or
add
xor
cmp
insb
nop
clc
js
add
inc
je
add
sbb
not
cmp
pop
jno
clc
cltd
mov
insb
mov
fadds
test
push
xchg
hlt
popf
dec
add
sbb
scas
add
dec
inc
pop
adc
lret
add
cwtl
pop
mov
jne
pop
int
push
outsb
or
jbe
adc
repz
pop
cli
jp
or
jle
mov
add
lret
test
cmp
and
add
lret
cltd
sti
dec
add
scas
mov
jns
ficoml
mov
pop
xchg
xor
add
fistpll
gs
insl
fcoms
cmp
mov
xlat
add
repnz
enter
xchg
sbb
dec
add
test
jae,pt
aaa
pop
cltd
fst
add
popl
lret
jecxz
inc
cwtl
out
pop
add
lods
xchg
mov
out
adc
push
rolb
mov
add
dec
sbb
mov
push
push
jo
or
add
pop
icebp
test
bnd
cmp
jecxz
jns
addr16
aad
sub
fs
add
lcall
jne
add
lods
cmpsb
arpl
test
into
jbe
das
mov
xor
clc
movsl
cmp
push
push
outsl
add
test
xor
in
out
mov
xchg
jl
inc
aas
fldcw
nop
mov
sub
addr16
push
or
dec
add
inc
outsb
sti
arpl
mov
fldl
pop
pop
je
and
and
add
cmp
or
mov
add
ficoml
inc
lcall
xchg
xor
jmp
and
in
imull
outsb
push
xor
daa
popl
xorl
pop
lea
adc
aas
and
aas
mov
pop
or
ljmp
popa
dec
shrl
and
inc
cwtl
popf
imul
aam
add
mov
add
mov
jl
cld
xchg
adc
iret
repnz
and
sbb
add
sub
mov
ffree
jo
push
add
adc
idiv
test
jge
rorb
mov
aas
subb
sti
pusha
pop
mov
adcb
loopne
pop
out
clc
mov
jns
xor
inc
mov
pop
repz
es
outsl
movsb
addl
push
std
negl
out
mov
cltd
jmp
roll
add
or
mov
or
je
sub
imul
sbbb
sbb
pop
in
jbe
jmp
pop
jle
adc
test
mov
add
pop
or
loop
mov
cmpsb
inc
insl
sbb
pop
cmp
jb
add
sub
dec
in
ret
pop
adc
cli
dec
hlt
cmp
pop
outsb
daa
clc
and
mov
or
push
adc
jne
lods
pop
push
popf
push
mov
mov
gs
decb
roll
jne
inc
shll
loop
add
sub
mov
dec
rorl
push
sbb
fwait
cmp
lcall
movsb
das
sub
in
add
repz
and
js
cmp
jmp
push
jp
sub
adc
xor
mov
sbb
mov
pop
adcb
pop
sahf
fincstp
clc
push
aam
xchg
add
call
push
sbb
test
cmpsb
push
dec
sub
push
fsubl
cwtl
ds
ficompl
lahf
popf
std
or
mov
mov
call
repz
pushf
outsl
pop
cmp
xchg
ljmp
mov
test
out
nop
aas
das
xchg
in
sub
xchg
loopne
arpl
sbb
adc
lock
cs
pushf
lret
mov
jne
mov
or
test
mov
fnop
mov
mov
cmp
xor
jns
xor
sahf
pop
mov
flds
add
sarb
sub
movsl
and
lret
or
add
xchg
les
dec
je
add
jp
dec
dec
lahf
and
sub
cmp
cmp
push
lds
xor
testl
mov
je
add
pop
inc
inc
iret
js
add
mov
inc
add
jbe
or
mov
out
cmp
pop
dec
add
rcl
cmp
and
dec
sub
in
jb
xor
ljmp
into
repz
xchg
or
jle
add
out
add
inc
cwtl
add
insl
and
sbb
and
test
or
and
lret
cmp
xchg
xchg
add
inc
mov
movsb
add
or
push
adc
cli
outsl
outsb
ror
movl
int3
fiadds
add
adc
cmp
sub
dec
xchg
lds
test
push
call
pop
cmp
ja
jge
shl
lret
jle
test
sbb
cmp
mov
cmp
xchg
fdivrl
ljmp
mov
sbb
test
pop
pop
mov
push
sub
ficompl
outsb
push
mov
push
sub
ret
mov
mov
fisttpl
sti
inc
aas
shlb
or
mov
daa
std
in
or
flds
push
sbb
insb
add
mov
pusha
dec
sbb
dec
loope
mov
idivl
add
jne
xchg
lret
cwtl
fs
data16
nop
xchg
stos
mov
mov
ljmp
inc
and
mov
add
pop
clc
mov
shl
dec
xchg
add
lods
pushf
mov
call
xor
inc
es
jns
push
test
lock
xlat
enter
call
adcb
bound
add
insb
idivl
jmp
sbb
sub
popf
push
add
jne
sbb
imul
cmp
lea
xacquire
aaa
loopne
cmp
orb
cmp
cwtl
add
push
cmpsb
lods
pslld
addl
sub
add
jmp
int
mov
add
stos
mov
loope
inc
and
inc
out
or
pop
add
scas
or
mulb
inc
mov
add
xlat
pop
push
adc
jns
stos
jae
mov
test
dec
mov
mov
enter
mov
aam
xor
pushf
add
flds
or
pop
outsl
arpl
in
pop
sbb
add
inc
cmp
mov
sub
add
add
ja
xchg
add
sub
pushf
push
add
shlb
sbb
jge
mov
cmpsl
fwait
push
mov
or
aaa
clc
loop
add
cmp
add
dec
mov
add
sbb
fsub
cmp
add
test
ret
fstps
roll
ljmp
mov
adc
imul
lahf
push
xchg
push
out
push
hlt
andl
cli
gs
sbb
stc
lds
cld
mov
test
xlat
movb
dec
fstpl
xchg
add
int3
dec
jb
mov
xor
aaa
mov
lea
xchg
sbb
lcall
cmp
or
add
out
adc
lods
push
or
mov
scas
sbbb
lods
hlt
scas
add
dec
mov
int
pushf
push
popa
mov
stc
dec
je
cmpb
loopne
ret
sahf
sbb
fdivrs
xlat
mov
jae
pop
mov
jne
shlb
clc
aaa
pop
jge
shlb
adc
add
notl
push
xor
mov
add
and
scas
add
mov
adc
mov
sbb
mov
das
loopne
rorl
sbb
push
outsb
rol
mov
dec
sbb
mov
addb
mov
fcoms
or
dec
xchg
sub
loopne
cmp
xchg
shrd
mov
aas
std
and
lods
xor
xor
push
sbbb
andl
cmp
xor
and
mov
adc
frstor
int3
or
adc
loopne
cmc
mov
sti
dec
loop
cmp
xorb
mov
cmp
in
sbb
add
leave
pop
ljmp
pop
pop
loop
push
mov
rol
pop
ficompl
add
into
ret
sbb
out
mov
es
dec
push
imul
add
xchg
dec
jg
mov
xchg
xchg
ror
loope
add
call
jb
cmp
cvtpi2ps
and
sub
call
push
or
jo
xchg
add
cmpsl
lods
in
mov
stc
xor
xor
or
mov
in
iret
fidivrl
mov
loopne
jbe
outsl
clc
pusha
loopne
sahf
push
mov
inc
xchg
inc
mov
test
mov
xchg
adc
xchg
movsb
lret
das
adc
fidivrs
add
add
addr16
pop
nop
repz
adc
and
add
mov
lds
jb
dec
stos
mov
sub
jge
add
xorb
fiadds
and
xor
out
dec
aas
out
add
mov
aad
pusha
add
add
daa
cli
cld
clc
jnp
add
inc
movsb
add
add
push
push
es
in
add
xchg
or
xchg
add
mov
nop
pop
adc
add
xchg
fstpt
inc
movl
jne
pop
fwait
sbb
filds
jg
jns
dec
pop
and
pop
inc
xchg
xor
fimuls
imul
xchg
sub
cwtl
cmp
lods
pop
inc
add
repnz
mov
pop
sbb
adc
jnp
inc
mov
out
addr16
mov
and
xlat
add
mov
outsl
add
popw
loope
ja
sbb
loopne
test
insb
jl
mov
fnstenv
into
mov
lds
or
jp
loopne
jns
mov
cmpsb
out
jg
sbb
add
mov
mov
ret
ret
insb
inc
adc
lds
in
icebp
lcall
test
jg
pop
test
repnz
pop
fdivrs
sbb
subl
andb
in
popf
add
push
fadds
push
jnp
and
int
and
push
incl
test
dec
mov
outsb
mulb
pop
in
and
dec
xlat
add
mov
arpl
inc
repnz
cmp
mov
pop
add
daa
lcall
or
fwait
and
imul
mov
pop
test
inc
cld
jnp
scas
add
mov
or
or
xor
subb
insl
add
jnp
or
clc
cmp
cmp
xchg
fnsave
add
push
xchg
and
hlt
dec
adc
ret
out
jl
inc
and
stos
push
in
inc
and
add
aad
lcall
mov
inc
sub
add
loopne
gs
or
jle
shlb
push
cmpsl
sbb
add
push
mov
sbb
mov
cmpsb
loopne
sbb
inc
fs
pop
jns
movzwl
jno
add
enter
xchg
mov
sbb
nop
stos
add
lods
and
or
push
lret
add
mov
nop
in
stos
add
mov
fdivl
adc
mov
stc
jb
movsl
nop
push
ffreep
add
pop
push
cmpsb
imul
sub
sbb
test
add
xchg
add
jno
outsb
add
xlat
fistpl
loopne
sbb
and
adc
add
or
negb
jp
fdiv
addl
inc
cmp
sbb
cltd
and
push
sbbl
cmp
dec
push
insb
pop
jno
mov
sbb
inc
lcall
in
test
xlat
or
cmc
sbb
mov
sbb
inc
ret
movsl
in
add
cmpsb
insl
divb
addb
into
addb
pop
cmp
xchg
push
xor
or
pop
insb
add
sbb
sbb
xchg
sbb
inc
test
push
in
incl
das
jle
sub
in
inc
adc
inc
mov
adc
sahf
mov
mov
adc
jle
paddd
adc
jle
pop
dec
add
jp
add
cmpl
and
sbb
inc
out
add
mov
and
jo
adc
jne
fisubl
scas
movsb
cs
inc
add
arpl
icebp
push
sahf
insb
pushf
das
add
addb
inc
popa
dec
pop
sarb
adc
xor
cli
jb
add
push
int3
xchg
stc
sbb
sbb
insb
add
sub
mov
fmul
mov
lea
pop
andb
in
sbb
fadd
nop
pop
loopne
out
ds
test
mov
mov
adc
orb
popf
xor
scas
aas
mov
add
repnz
aaa
gs
add
sub
fwait
or
mov
fidivl
sub
adc
add
push
dec
pusha
adc
push
or
sub
add
ds
mov
jp
repz
add
xchg
ret
and
inc
negb
add
jae
sub
add
lcall
cmpsb
lret
movsb
add
pop
sub
adc
pop
not
and
or
xchg
mov
test
jle
icebp
add
push
or
mov
inc
gs
jae
sub
inc
inc
lret
xchg
pop
mov
or
ss
test
xchg
mov
daa
jne
stos
or
jb
or
mov
mulb
lds
lods
jg
fwait
stc
and
mov
mov
pop
mov
addl
mov
cld
clc
cltd
into
add
jno
fcomps
insl
sarb
pushf
xor
sbb
cmpb
add
lcall
add
xchg
fwait
aas
bound
add
sbb
add
pop
jmp
loopne
add
or
sub
pop
add
aaa
sub
ss
cld
xor
les
mov
adc
cmp
bound
cmp
sar
sub
xchg
add
cltd
mull
add
sub
and
ja
add
inc
cmpsb
push
jge
int
pop
sahf
addr16
push
sarb
add
arpl
mov
push
push
adc
cmp
scas
mov
inc
shll
ss
outsl
sbbb
xchg
or
push
fcompl
orl
fadd
add
adc
test
and
gs
dec
js
adcl
les
sub
stc
inc
dec
adc
andb
sub
push
int3
pop
addb
push
or
adc
cmp
mov
leave
mov
sub
sbb
scas
adc
inc
xor
scas
mov
adc
add
and
jle
xor
shlb
mov
mov
sub
test
add
or
adc
imul
jnp
insb
faddl
les
imul
mov
int3
addb
into
add
add
js
lahf
dec
addr16
roll
pop
das
jns
mov
xor
mov
sar
jbe
pusha
sbb
icebp
mov
sub
lea
dec
int3
add
push
pop
andb
clc
idivb
adc
inc
mov
push
aaa
add
xor
pop
mov
leave
imul
fwait
mov
xchg
enter
mov
jg
adc
in
test
cmpsb
int
push
sahf
xor
mov
jecxz
mov
add
dec
sti
mov
inc
mov
add
mov
xor
add
push
or
xlat
sahf
and
imul
mov
add
push
push
add
sub
shrb
add
fucomip
jg
dec
lahf
aam
and
int
jle
add
cli
movaps
pop
inc
out
das
or
add
lods
jns
add
jnp
lcall
loopne
add
fisttpll
xchg
and
xchg
and
pushf
pop
mov
scas
add
cmc
out
in
mov
push
sub
add
pop
ja
in
pop
jns
pop
cld
xor
arpl
in
adcl
in
test
pop
xchg
xor
jns
and
add
int
cmp
sbb
repz
pop
push
push
int3
stc
sbb
inc
outsb
enter
cmpb
pusha
cmp
incb
or
sub
add
andl
or
sub
inc
jmp
pop
xchg
mulb
adc
and
pop
cmp
add
jp
dec
pop
sbb
clc
dec
pop
cmp
gs
push
inc
push
add
outsb
mov
arpl
mov
mov
cwtl
add
hlt
sbbl
add
or
and
lcall
inc
paddsw
add
lret
jge
add
mov
aas
shll
ds
lret
inc
xchg
add
setnp
add
stos
lods
mov
ss
ja
pop
pusha
pop
push
sar
jg
sbb
adc
cmpsl
fdivs
push
shlb
push
jle
in
ljmp
mov
add
rol
sbb
mov
outsb
mov
int3
pusha
jae
add
mov
cmp
push
or
pop
jp
fwait
jbe
adc
mov
jmp
out
push
mov
int
mov
and
cmp
insl
repz
add
daa
repnz
jnp
mov
jne
lock
jbe
aaa
xchg
dec
rclb
mov
jmp
movsb
cmpsl
xor
pushf
andb
icebp
leave
shl
add
push
test
xchg
push
inc
outsl
daa
enter
push
aas
sahf
mov
cli
push
inc
mov
adc
push
jp
xor
add
lahf
insl
lcall
mov
adc
movl
imul
sbb
popf
xor
mov
mov
loopne
or
mov
cmp
bswap
jnp
cmp
ss
xor
int3
loop
psllw
inc
adc
push
add
dec
ret
test
add
jmp
jns
sahf
mov
and
fs
mov
sub
rolb
adc
enter
sbb
sbb
sub
cld
lods
push
outsb
dec
cli
call
pushf
and
cmp
cmpl
mov
shrl
mov
mov
jmp
cld
leave
stos
add
mov
pop
inc
cmpsl
popf
inc
jae
cmp
xor
push
add
fdivrp
cmpsb
xchg
shlb
bound
fisttpll
cmp
push
addr16
jnp
add
movb
arpl
mov
dec
add
jmp
int3
jmp
push
mov
mov
vmread
es
pusha
add
dec
push
sbb
inc
sbbb
sti
lods
xchg
jno
xchg
mov
adc
or
add
mov
ljmp
pop
adc
sbb
pusha
jl
cmp
push
mov
add
mov
add
and
hlt
pop
popa
movl
mov
shrb
aam
adc
jb
ss
xor
div
cs
out
mov
add
lret
sub
xor
xchg
jns
push
out
ja
mov
lahf
stc
lcall
add
pop
testb
and
or
jmp
ja
push
imul
roll
cmp
or
insb
sahf
cltd
aad
xor
sbb
inc
push
dec
mov
jecxz
mov
negb
and
mov
f2xm1
sub
out
es
shrl
dec
testb
cwtl
add
mov
pusha
enter
fdivs
dec
inc
out
xchg
add
mov
enter
test
push
xchg
adc
std
int3
xor
mov
jnp
aas
lcall
sarl
add
cmp
cmp
pop
js
add
add
mov
cmp
xchg
add
mov
or
mov
mov
sbb
pop
pop
roll
add
fs
mov
inc
xchg
out
and
loop
pop
push
pop
add
test
fimuls
cs
sub
cmpsb
sbb
push
add
jns
add
gs
mov
ja
pushf
add
inc
rorb
sub
jg
dec
jne
cmp
shl
ds
xchg
xorb
inc
repnz
sub
das
add
pop
sahf
sbb
aad
xor
add
lea
ljmp
mov
jecxz
not
rcrl
add
mov
cmpsl
sbb
shll
mov
pop
adc
mov
in
pop
xchg
clc
repnz
add
cmp
fcomi
outsb
cmp
add
jmp
mov
mov
mov
movsb
les
mov
xor
inc
xchg
mov
jns
or
sub
lods
out
mov
jno
daa
push
fs
int3
mov
sarb
inc
dec
clc
mov
jg
subb
cs
aam
bound
pop
cmp
lcall
repnz
add
or
push
sub
sahf
movsl
push
jbe
fwait
add
or
jnp
add
outsl
pusha
xor
add
loopne
push
int
dec
jl
lods
in
test
adc
add
mov
add
mov
sbb
pushf
add
js
xchg
dec
push
push
aaa
sarl
mov
xor
test
shlb
add
in
roll
xchg
leave
sarb
mov
divl
jbe
mov
aad
pusha
add
jg
xchg
add
sub
add
sahf
loopne
nop
cs
adc
mov
mov
sbb
and
xor
fcomps
add
jbe
fistpl
push
pop
insl
push
dec
mov
jl,pn
xadd
pop
loopne
mov
loopne
cltd
xchg
cmp
sahf
andb
int3
and
mov
add
data16
enter
out
inc
add
les
insl
rolb
ret
mov
mov
xchg
hlt
les
or
loop
in
in
add
xor
adc
nop
stos
in
lods
xchg
xchg
cmp
add
jno
pop
mov
xorb
in
push
mov
inc
out
xchg
sbb
inc
inc
insl
cld
jns
add
stc
loopne
testb
add
cmp
outsl
hlt
xchg
jecxz
adc
stc
xor
inc
daa
cmc
and
in
cmp
popl
test
aaa
stc
mov
cmp
cmp
mov
adc
test
mov
in
xchg
sub
loop
add
clc
lods
add
call
jmp
add
cmp
stc
xchg
sub
sbb
pop
pop
incb
fadds
xorl
aas
mov
int3
xor
or
xor
xor
and
jmp
adc
xchg
movsb
dec
and
les
das
cmp
mov
cs
pop
adc
ljmp
jb
cmp
and
sbb
mov
mov
mov
inc
pop
push
xchg
mov
push
fcoms
cwtl
mov
daa
fucomp
insl
lods
outsb
jne
int
jo
jb
rorl
scas
xchg
add
and
imul
cwtl
pop
pop
adc
adc
adc
push
jo
cs
pop
jp
lcall
testl
es
and
cmp
es
scas
add
jb
popf
add
mov
cmp
xor
xor
adc
lcall
add
movsb
inc
cmp
add
daa
aas
inc
inc
xchg
pop
std
add
push
pop
cmp
aam
and
add
sbb
repz
cmp
fnstenv
and
ret
mov
cmpsl
sarb
xor
or
repnz
out
lods
push
insl
add
mov
int
fld1
loopne
add
ds
adc
pop
pop
xor
movsl
mov
in
jmp
lods
jno
insl
add
sar
into
mov
push
and
or
and
data16
pand
xchg
daa
in
nop
movsl
jle,pn
add
dec
andb
aas
movb
xchg
stc
ret
sbb
dec
and
xchg
add
out
mov
lahf
jp
add
inc
inc
hlt
inc
mov
push
es
xchg
sub
rorl
psubsb
add
cmp
jmp
test
pushf
in
xor
cmp
and
add
adc
lret
call
leave
push
cmpb
test
mov
jne
cmp
sub
pop
lcall
mov
cmp
or
testl
pop
xor
lcall
adcb
nop
sbb
fs
adc
ljmp
pushf
sbb
sub
add
fwait
pusha
mov
adc
mov
out
adc
shlb
jl
enter
cld
out
divb
mov
gs
loope
stc
shll
jl
pop
fildl
in
pop
sub
adc
call
popa
sbb
out
jnp
add
stos
shld
les
or
fwait
arpl
jl
jmp
push
pop
adc
cmp
fimuls
mov
inc
xorl
or
mov
add
lea
es
loopne
cmp
test
push
popa
sub
push
add
or
add
add
aaa
lahf
xor
dec
fstpt
xchg
xchg
inc
aaa
pop
in
ja
dec
cmp
add
lea
dec
pop
sub
or
fadd
les
mov
cmp
add
inc
lcall
dec
inc
pop
and
adc
cmp
dec
mov
jo
add
rclb
mov
lahf
jne
push
cmc
hlt
add
add
or
leave
aam
inc
jnp
call
jmp
jns
stos
in
es
add
movsb
mov
decb
cmp
add
punpckldq
scas
mov
test
jp
mov
and
dec
pop
scas
dec
push
ret
add
in
loop
aaa
loopne
lret
pop
cmp
lret
std
popl
pop
adc
sbb
inc
cwtl
cld
push
pusha
add
fdivr
fs
xchg
or
jb
dec
filds
mov
push
add
dec
push
in
add
and
movsl
mov
jmp
fldl
mov
sti
mov
test
icebp
pop
orb
enter
in
dec
pop
fcoml
xor
sbbl
je
pop
add
enter
cltd
rolb
sbb
sub
in
les
add
icebp
mov
sub
pop
inc
sbb
leave
outsb
add
pusha
mov
jle
jg
xchg
pop
and
sub
nop
and
sahf
enter
add
pop
add
mov
lock
add
mov
mov
inc
mov
cmp
in
cmp
inc
jb
xor
pop
mov
addr16
loope
or
add
popf
fsubs
cmpsb
add
movsb
pop
adc
test
ja,pt
cli
incb
lock
inc
jne
pop
add
sub
cmp
div
xchg
mov
jbe
mov
inc
clts
xor
push
and
cli
sbb
cmp
nop
cmp
lret
add
jl
pop
mov
jo
or
push
and
push
cmp
sub
aam
add
imul
add
push
cld
rolb
and
push
pop
int
add
addr16
mov
add
les
add
popf
mov
pusha
adc
imul
push
insl
jmp
pop
xchg
lcall
das
push
imul
adc
mov
xor
rolb
lcall
add
sub
cld
jmp
lret
cmp
xchg
test
xor
mov
inc
pop
inc
mov
and
rorl
enter
cmp
push
sub
add
jecxz
xor
sbb
jl
and
xchg
roll
push
lock
rorb
ret
js
bsr
sub
jl
jnp
movups
scas
xlat
imul
or
fs
out
add
ret
es
rclb
enter
pop
addr16
fdiv
jecxz
mov
dec
lahf
add
stos
pop
dec
push
sub
mov
add
adc
sbb
jle
lock
cs
sbb
roll
aas
clc
out
imul
push
xlat
icebp
cmp
xor
pop
loop
add
mov
mov
cmpsb
mov
ds
sbb
mov
push
arpl
mov
fidivs
pop
push
icebp
fiaddl
fcompl
daa
mov
fildl
xchg
es
sti
call
xchg
lock
sbb
xorps
jmp
push
pop
add
jne
mov
insl
shll
xor
fstps
sbb
add
and
jmp
pusha
rclb
clc
jnp
sbb
add
mov
mov
int
scas
gs
inc
mov
xchg
test
add
mov
xor
adc
int3
clc
ds
aaa
mov
inc
cmp
verw
xor
out
xor
adc
test
push
and
sub
pop
aad
aas
sti
mov
mov
xchg
pop
push
add
xor
and
lea
sahf
xchg
pop
gs
aas
inc
jmp
test
sub
sub
and
and
cmp
or
lret
aam
into
and
xchg
xchg
loop
and
test
inc
sbb
lret
jge
add
or
jns
out
inc
movb
cltd
and
sbb
popf
lods
xor
add
xchg
fs
add
js
sahf
pop
xor
stos
dec
adcl
mov
jg
mov
add
int
sbbl
adc
fsub
jno
loope
cmp
inc
and
cld
enter
mov
push
push
add
inc
xor
jecxz
lret
addl
add
addr16
add
cmp
add
mov
mov
ljmp
je
shll
mov
ficoms
and
add
lea
ret
jl
pop
cmp
pusha
inc
mov
cmp
test
and
xchg
or
add
sbb
cltd
rol
sub
push
loop
mov
daa
push
andl
insl
jns
add
sbb
aaa
sub
pusha
add
test
adc
rol
stos
ljmp
dec
dec
popa
xchg
mov
dec
test
jo
jmp
mov
sbbb
adc
inc
mov
test
mov
xorl
xchg
sbbb
stos
add
inc
push
dec
pmulhw
pop
push
cmp
add
lcall
or
jp
gs
cltd
mov
ret
sbb
das
pop
in
wbinvd
sbb
and
call
js
inc
inc
jne
add
out
stos
mov
cmp
add
cld
repz
outsl
add
lahf
pushf
addl
loopne
and
pop
hlt
mov
dec
push
push
push
arpl
xchg
and
fwait
jmp
hlt
clc
inc
scas
cmp
rorl
ds
add
addr16
pop
mov
aas
jp
add
mov
mov
add
dec
sub
mov
inc
jecxz
flds
pop
sahf
cmp
add
mov
pop
mov
stos
lods
add
int
or
rcr
outsb
mov
sarl
dec
out
add
add
clc
add
add
and
jmp
adcb
loop
add
xlat
mov
inc
add
cmp
mov
jbe
mov
leave
xchg
or
sbb
gs
dec
aas
cmpsb
add
pop
push
xchg
and
adc
mov
or
cmp
mov
and
xor
repnz
in
and
cmp
adcl
inc
cmp
lret
push
xor
mov
pushf
push
clc
cs
fcmove
push
popa
jne
xchg
add
jo
js
mov
shll
mov
incb
cld
rolb
xor
test
rcrb
hlt
leave
add
lret
jo
sbb
gs
sahf
sub
fisubs
aam
jb
pop
fsubl
inc
push
shll
add
in
movsl
jnp
pop
jg
das
or
push
add
fs
sbb
jo
cmp
cmp
sub
in
or
xor
aad
mov
xor
push
dec
rcr
add
add
lods
lods
adcb
je
dec
mov
add
add
fisttps
add
pop
xchg
js
ffree
mov
xor
sbb
add
adc
fistl
popf
or
inc
push
push
jp
insl
pushf
add
test
out
push
add
rclb
sahf
mov
push
bsr
add
xor
jmp
lea
repz
inc
or
testl
sub
add
mov
leave
add
fidivl
mov
mov
push
or
mov
lret
divb
cmc
arpl
push
xor
xchg
add
mov
jmp
rol
jb
mov
sbb
push
icebp
test
lret
mov
jns
jmp
jge
addl
push
pop
mov
test
sarb
pop
push
std
insl
jmp
jo
fistl
lcall
cmp
and
test
flds
subb
or
ds
jb
and
jno
mull
cmp
stc
imul
add
sub
inc
adc
add
pop
scas
adc
inc
or
mov
add
mov
out
ljmp
push
inc
and
mov
popf
and
ret
cmp
xchg
add
pop
jb
je
add
ret
in
or
sbb
imul
lds
ds
sbb
rcr
setbe
jl
add
mov
mov
sub
add
push
rcr
add
cmp
jbe
add
fdivr
lret
add
bound
and
mov
daa
ja
add
cmp
pop
adc
xorl
xor
add
xchg
xor
in
in
mov
stos
push
inc
dec
sub
ja
add
das
jp
lahf
dec
les
and
cmpsb
jnp
add
imulb
jl
mov
or
sbb
jbe
add
dec
push
fmull
add
xchg
fidivrs
rolb
lea
mull
add
repnz
adc
push
icebp
aaa
xchg
add
lcall
pop
in
add
xchg
int
inc
or
add
jg
dec
inc
das
sbb
or
movsl
mov
mov
jne
jno
bound
inc
inc
inc
movsb
dec
add
cmpsb
fstpl
mov
sbb
adc
push
add
stc
fstpt
or
dec
cmc
add
out
mov
dec
movsb
jo
jnp
fwait
push
sbb
pop
shrb
adc
in
fidivrl
loope
filds
repnz
xchg
int
cmp
jecxz
clc
xchg
dec
push
sub
xchg
add
push
les
stc
add
cmp
imul
xor
fstl
or
bswap
inc
cmp
inc
jmp
pop
add
push
sub
js
dec
or
xor
inc
fsts
hlt
lret
xchg
add
dec
add
jl
fsubrs
add
iret
popa
std
jo
lock
shlb
add
imul
in
xor
add
shlb
sbb
add
fcoms
in
sbb
sbb
sub
sarl
lahf
xchg
jo
aam
adc
add
fldl
adc
push
jno
lods
aaa
push
xchg
pop
add
xor
and
cmp
push
movsl
sub
xchg
pusha
arpl
outsl
mov
xor
pop
sbb
sub
js
mov
adc
add
sti
ljmp
insb
fsub
sub
jne
add
xor
outsb
mov
push
xchg
rcrb
sbb
mov
pop
movb
insl
pop
mov
add
push
xor
add
dec
lret
leave
push
lahf
adc
out
and
fsubr
popa
pop
add
je
adc
add
insb
cmp
jmp
add
ds
js
repz
sub
add
cli
in
cmp
mov
cmpb
xchg
repnz
add
jp
adc
jns
jo
insb
add
lea
imul
jmp
movsb
add
mov
add
inc
sar
cmp
pushf
addb
pop
aad
jbe
and
and
add
adc
push
in
pop
dec
andl
subb
lods
int
leave
test
mov
mov
adc
fs
jecxz
add
mov
and
scas
je
or
jnp
pop
shlb
add
cmpsl
fldl
xor
outsb
jecxz
mov
inc
mov
mov
mov
jle
mov
and
pop
incl
iret
nop
je
mov
jno
and
add
or
std
cmpsl
ss
adc
add
mov
push
jmp
and
push
sub
push
push
mov
shlb
dec
mov
outsl
add
mov
cld
sbb
mov
add
mov
leave
push
add
pop
mov
testb
mov
orl
lock
mov
cld
mov
mov
mov
xchg
cwtl
sbb
mov
subl
lds
test
add
shrb
daa
sbb
outsb
xchg
iret
cwtl
pop
movsb
xchg
cmp
add
adc
add
jo
dec
and
out
call
add
xorb
es
adcl
and
aas
out
or
or
jecxz
push
push
mov
add
dec
sbb
dec
rolb
test
add
inc
imul
xchg
lods
jno
cwtl
stc
inc
sbb
sbb
lret
outsb
xlat
add
mov
lock
in
je
add
xchg
cmp
nop
pop
es
adcl
andl
adc
scas
mov
add
or
pop
clc
test
jge
rolb
in
mov
xor
mov
adc
loope
push
mov
lret
cmp
sbb
test
or
out
mov
call
int3
les
cli
adcl
in
mov
stc
filds
cmp
adc
clc
sbb
push
sbb
lds
push
in
shrl
scas
push
mov
add
mov
ja
fstp
or
inc
cmp
pop
icebp
dec
fidivrs
xchg
out
pop
sub
xor
lods
xchg
mov
into
outsl
push
lahf
add
or
loopne
inc
les
xchg
popa
add
loopne
outsl
xor
mov
imul
push
xchg
add
stos
xchg
sbb
sbb
in
jge
add
jnp
and
mov
mov
and
lods
add
imul
adc
and
adc
cmp
adc
mov
fimuls
sub
shlb
aas
inc
inc
fsubl
je
filds
cmpsb
pop
xor
cltd
adc
out
lea
iret
orl
pop
aad
jns
jg
adcb
push
movsl
or
add
or
adc
adc
sub
xor
shrl
add
push
jo
add
push
lcall
incb
movsl
inc
cmpl
inc
sbb
pushf
or
lea
cld
lar
add
mov
lret
push
scas
xchg
out
mov
add
mov
fstpt
lods
adc
lea
outsb
sbb
xchg
xor
cmp
sub
ret
icebp
iret
pop
mov
xchg
sbbl
aam
cmc
add
push
cltd
and
enter
outsl
sbb
jo
pop
sbb
sbb
rclb
add
mov
or
flds
xchg
rorl
pushf
pop
jmp
add
pop
dec
lcall
jno
xchg
cmp
add
out
shrb
sbb
sbb
inc
push
fwait
add
daa
sub
add
mov
repnz
rorl
roll
rcr
mov
adc
pop
add
aam
xchg
adc
jo
jecxz
push
sti
and
repz
movsb
push
and
or
inc
add
mov
test
pop
mov
sbb
mov
and
jp
add
dec
inc
sbb
lods
add
push
or
lock
pop
bound
adc
adc
mov
sbb
repnz
pusha
call
pusha
add
aam
xor
dec
xor
or
shrl
out
dec
dec
test
push
aam
pop
leave
in
cs
adc
hlt
jecxz
xor
rol
daa
xor
mov
fadds
adc
inc
inc
hlt
mov
cmp
dec
es
pop
bound
loope
sbb
movsb
in
nop
fistps
pushf
push
lea
jns
push
lret
lods
mov
sarl
mov
jne
add
adc
add
repnz
cmp
mov
clc
push
jle
loope
enter
cmp
dec
bound
xchg
leave
mov
jl
push
or
ja
loop
mov
inc
dec
pop
xchg
add
int3
xchg
adc
inc
cmpb
push
cmp
rcll
cmp
xchg
cmp
repz
pop
adc
lahf
add
es
mov
xor
xchg
sub
aas
lock
enter
jbe
pop
add
pop
imul
neg
jno
in
add
outsl
lret
add
sub
inc
xchg
loop
lcall
std
outsl
inc
add
mov
xor
fadds
pushw
aad
outsb
cli
inc
imul
add
xor
sahf
inc
enter
add
mov
or
daa
jae
cmp
dec
andb
fdivl
cmpsb
mov
inc
add
inc
mov
or
fs
pop
aas
adc
adc
add
fs
adc
stos
iret
psrlq
es
rclb
loope
dec
cmpsb
lahf
add
lods
xorb
add
mov
add
sar
xor
xor
into
ja
dec
pop
bound
pop
jnp
idivl
mov
dec
cld
popf
mov
pop
sbb
leave
pop
adc
mov
add
ds
sub
sbb
data16
xor
addr16
lcall
dec
leave
mov
aam
in
cmp
pop
jb
test
and
add
add
in
lods
add
or
pusha
xor
outsb
orb
fs
hlt
mov
mov
inc
clc
test
andb
cltd
add
push
repnz
mov
sbb
test
ljmp
pushf
mov
mov
dec
testl
aad
xchg
loop
fisubs
jge
testl
test
sbb
stos
in
leave
add
add
cmp
jbe
int
sbb
fwait
dec
std
pop
push
fs
inc
inc
push
and
push
mov
or
pop
sub
pop
dec
add
cli
cmp
pop
mov
int
leave
in
add
cmovl
adc
and
xor
loope
add
les
imul
adc
stos
pop
or
push
inc
push
stc
mov
push
jmp
movb
mov
lahf
or
mov
xor
or
popa
add
adc
push
and
or
sbb
dec
rorb
repnz
add
push
movsl
cmpsb
int3
arpl
pop
inc
sbb
mov
pop
dec
mov
jmp
aad
sbb
or
add
add
loop
push
mov
enter
push
sub
clc
push
adc
mov
lods
push
pop
pusha
addb
xor
movsb
add
ljmp
pop
outsl
aaa
in
lea
aad
add
pop
gs
nop
mov
enter
iret
mov
insl
or
inc
add
bnd
pop
add
lds
pop
imul
rcrb
ds
adcb
repz
add
jge
xchg
xchg
jbe
orl
leave
inc
aam
xchg
push
rolb
dec
scas
jg
insl
add
mov
imul
shlb
pushf
nop
mov
mov
mov
cwtl
sub
push
std
test
lock
jno
cs
or
xor
push
lcall
out
aas
dec
in
or
add
stc
sub
pop
movsb
adc
test
rorl
jl
hlt
xlat
cmc
add
pop
sub
adc
lock
or
daa
lret
mov
adc
out
into
pushf
adc
inc
mov
jge
pop
sbb
idivb
shl
mov
lret
test
loop
add
das
add
mov
push
jo
and
mov
xor
add
add
mov
adc
or
add
js
es
or
and
cmp
sbb
add
or
scas
add
sahf
xor
sub
repz
loopne
or
rclb
xchg
mov
sbb
ljmp
or
jnp
inc
hlt
jnp,pn
pmaxub
cmp
inc
out
sbb
add
andb
sub
mov
aas
push
mov
xor
push
pop
mov
hlt
sbb
fisttps
sbb
mov
mov
add
lret
jb
dec
dec
xorb
shlb
jl
je,pt
adc
or
fwait
xor
lock
repnz
sub
xor
out
push
dec
sbb
in
adc
jbe
imul
pop
sbb
mov
jnp,pt
jne
add
sub
mov
add
int3
fidivrs
push
aam
jbe
rcrl
add
pop
and
cmp
in
or
popl
fisubrl
pop
cmp
ja
jno
add
stos
in
repz
or
push
lret
fadd
pop
or
adc
mov
dec
loopne
test
adc
in
cltd
add
imulb
out
sbb
xchg
incl
xchg
jo
jp
cmpsb
sbbl
cs
jecxz
fsubl
test
add
or
nop
push
mov
pop
mov
add
mov
push
cli
clc
inc
clc
bound
ss
sub
adc
fs
xchg
daa
loope
add
test
and
add
jb
iret
pushf
mov
add
cmp
mull
or
movsl
add
aam
cltd
sub
imul
adc
inc
add
or
sarb
xchg
xchg
mov
das
lods
adc
or
adc
int3
movsb
mov
push
jae
lods
add
sar
cmpsl
xchg
xor
add
shlb
push
add
jg
ja
dec
jle
cmpsb
lret
mov
subb
in
pop
inc
cmp
call
cmp
aam
lds
xor
cmp
movsl
mov
jge
add
cmp
push
rcr
push
mov
dec
add
dec
cli
push
add
insl
fs
mov
add
ja
and
loop
mov
mov
test
in
jno
arpl
cmp
push
add
inc
push
mov
pop
jp
add
push
xchg
dec
add
lea
inc
sbb
add
dec
dec
push
rol
jae
pop
pop
repnz
mov
int3
and
imul
push
inc
push
adc
or
xchg
out
xchg
add
mov
cmp
push
adc
ficompl
mov
jmp
add
jbe
pop
icebp
sbb
aas
push
mov
in
or
int3
dec
jge
push
mov
sub
cmp
sbbb
xchg
push
mov
divb
mov
scas
mov
push
add
xchg
imul
call
scas
cmp
and
push
push
jmp
ljmp
push
sbb
or
jb
stos
movsb
rolb
adc
movsl
outsl
fiaddl
dec
mov
lahf
movb
es
push
add
cmp
adcl
sbb
hlt
les
gs
add
push
shrb
icebp
push
movsb
inc
cmc
xchg
idivl
add
das
or
push
jne
leave
push
sbb
push
les
insb
add
je
lret
sbb
out
adc
sbb
cwtl
das
jo
jbe
xchg
lods
popf
add
dec
loopne
ds
inc
cmp
sbb
into
add
mov
xchg
sahf
add
add
dec
dec
fcomps
adc
xor
add
aad
pop
xchg
dec
lahf
add
pop
test
nop
add
clc
les
add
setns
stos
push
add
dec
jne
and
ret
xor
or
xchg
cmpsl
rcrl
into
shrl
dec
sub
adc
lret
inc
cmp
pop
mov
enter
fists
jbe
push
pop
add
mulb
push
sub
fcoml
pop
and
mov
xchg
call
push
jl
arpl
add
cmp
xor
xchg
iret
add
mov
add
xchg
inc
roll
push
pop
fadds
mov
addr16
ja
popw
faddl
lods
lahf
cltd
popf
out
test
outsl
add
shrb
jns
js
jnp
aaa
adc
std
aad
jge
loopne
add
mov
roll
jecxz
pop
repz
js
add
test
add
push
in
subb
add
pop
mov
mov
xchg
call
xchg
mov
add
out
mov
jo
rorb
xlat
cmp
pop
and
adcl
xchg
addb
pop
clc
inc
jmp
sbb
pushf
mov
add
aad
imul
int
clc
sbb
outsl
shlb
mov
lret
into
pop
add
cmpsb
mov
dec
inc
les
or
imul
iret
add
jle
inc
pop
cmpsb
add
dec
or
inc
push
mov
push
push
call
sbb
dec
mov
add
popl
cmovne
imul
add
dec
jb,pn
push
iret
roll
arpl
inc
or
sti
pop
andb
cmc
add
mov
lahf
sbb
xchg
cmp
sbb
mov
cmp
adc
daa
cmp
adcl
movb
dec
mov
adc
or
mov
sbb
insb
loop
in
andb
pop
cwtl
pop
std
and
loopne
test
cli
xor
fisubrl
or
push
nop
dec
mov
cmp
cmp
nop
jle
movsl
or
adcb
cmp
movsb
sub
jg
imul
icebp
test
repnz
push
out
mov
xchg
sti
mov
mov
test
push
xchg
xor
add
into
or
fnstsw
push
pop
ret
push
dec
mov
adc
cwtl
add
stc
dec
shlb
loopne
jo
jp
imul
sub
ret
jl
jbe
dec
pop
and
stos
call
jo
add
inc
icebp
xor
and
je
subb
add
push
test
add
lret
cs
hlt
or
popa
dec
inc
xor
mov
lcall
xchg
add
pushf
jge
jmp
rolb
lahf
mov
mov
add
nop
pop
inc
movsl
push
fs
mov
sub
jno
add
or
in
fidivrl
adc
out
dec
and
add
gs
add
adc
and
jno
aam
faddl
bound
arpl
add
and
popl
repnz
lds
push
rclb
pop
fidivrl
xor
add
jecxz
sbb
orl
cld
push
repz
lahf
pop
push
adc
sub
and
and
mov
aad
jb
add
push
jns
jl
dec
pop
add
test
mov
aas
adc
jge
add
dec
gs
xchg
repnz
test
scas
adc
add
or
cmp
ret
sub
dec
je
jecxz
jae
sbb
xlat
pop
repz
xchg
push
jns
jne
push
and
stc
xor
and
mov
lret
xchg
dec
xor
jbe
adc
das
push
jns
mov
andb
aas
jne
lds
jnp
adc
test
adc
cmp
mov
push
mov
negl
push
jbe
adc
push
jne,pn
push
add
xor
shlb
push
lock
ss
push
mov
cld
xchg
dec
call
add
inc
fcmovnb
sub
adc
add
dec
imul
cmp
add
xorb
adc
arpl
push
inc
add
mov
pop
add
xor
mov
insb
add
inc
or
std
jno
mov
scas
das
sub
aaa
fwait
cmp
fcoml
and
mov
test
out
adc
addl
add
in
push
pusha
add
push
and
mov
fbstp
pop
mov
sbb
hlt
inc
xor
or
and
mov
mov
jl
aas
jg
mov
adcl
xchg
hlt
das
push
sar
dec
or
imul
push
lock
loop
sub
push
mov
insl
xor
fcompl
lcall
in
movsl
and
pusha
js
or
test
shrb
xor
pop
mov
pop
imul
xor
adc
bound
sidtl
aad
fisttpll
imul
dec
popf
mov
jmp
cli
into
cwtl
data16
repz
subb
fwait
lret
cmp
pop
inc
lds
add
jg
sbb
add
jp
cmp
cmp
cmp
das
mov
push
push
xchg
shrb
xchg
aam
test
lcall
das
add
stos
ds
jae
mov
and
adc
aaa
test
add
sarb
stc
shrb
add
mov
adc
sbb
pusha
sbb
ret
pop
jne
push
push
add
hlt
stc
dec
clc
popf
pusha
mov
xchg
lret
sarb
sbb
cmp
loop
add
cltd
mov
pop
add
cmc
hlt
cmp
cmp
sub
in
add
js
call
xchg
sbb
or
clc
loope
jg
mov
ss
adc
cmp
add
xlat
adc
cmpsb
xor
pop
movb
cmp
and
add
dec
sub
sarb
push
scas
lds
adc
jg
fs
mov
and
adc
outsl
add
push
ror
add
cmpsb
mov
cmp
nop
add
ds
das
pusha
mov
bound
ret
or
pop
add
jp
sbb
xor
out
or
jecxz
sbb
roll
pop
pop
sub
add
daa
lret
and
ss
push
pop
in
imul
add
cmp
or
and
cmpsl
dec
mov
add
add
in
and
aas
jg
push
je
mov
pop
sub
test
ss
out
fmuls
jg
ljmp
add
pop
xchg
fisubl
cld
and
cli
and
test
out
dec
sub
ja
out
clc
dec
inc
add
movsb
loop
add
inc
lods
fidivl
rcrb
jae
lcall
cmp
aam
jo
jge
jl
sarb
sub
add
mov
push
add
enter
push
jo
pop
adc
jle
scas
mov
mov
pop
daa
mov
push
sahf
sbb
push
addb
xchg
or
xchg
mov
hlt
pop
out
add
cmc
inc
xchg
add
pop
add
cmp
add
jp
mov
xchg
add
sbb
push
inc
daa
jle
xor
sub
and
add
ds
out
movsb
clc
mov
fistl
inc
or
mov
aad
add
shlb
xorb
xchg
push
sbb
cltd
rcl
mov
cmpsl
mov
std
in
add
lock
cmpsb
cmp
dec
movsb
mov
test
inc
jmp
xor
and
mov
pop
push
sbb
leave
testb
cli
enter
bound
push
outsl
xchg
cmp
mov
mov
push
push
sbbl
mov
imul
inc
test
push
add
push
xchg
adc
mov
or
mov
push
fimuls
xor
scas
shlb
add
push
push
sti
jno
ficoms
cmp
push
mov
add
mov
dec
mov
mov
add
rcl
mov
jo
movb
mov
scas
push
cwtl
rclb
sbbb
arpl
xor
stos
sahf
ja
shll
mov
jge
dec
daa
loope
jo
mov
inc
mov
testl
push
xchg
mov
imul
adc
call
pop
mov
add
mov
cmp
aad
test
pop
aaa
clc
mov
push
sbbb
jno
add
js
mov
lock
push
imul
cwtl
popf
mov
loopne
and
mov
sub
lock
push
ret
add
je,pt
push
mov
push
and
pop
xchg
and
pushf
pop
push
dec
call
xlat
daa
aas
dec
rclb
push
fbstp
sbb
pop
lahf
sbbb
mov
out
out
sbb
jbe
xchg
shrb
mov
loopne
mov
ds
add
jne
and
aad
jbe,pn
addb
lock
rclb
clc
jg
jmp
jns
sub
in
roll
fucomip
clc
cmp
jno
pop
xchg
fwait
jb
mov
add
lahf
inc
push
loope
xchg
cmp
outsb
in
xchg
fldlg2
or
add
lcall
idivl
call
lret
cmpsl
pushf
ljmp
idivl
rcll
pop
add
and
xor
or
cwtl
cmp
add
mov
xor
push
sub
pop
or
xor
push
fwait
pop
fildll
push
loopne
arpl
cmc
push
addl
shrl
mov
cmp
jp
xchg
cwtl
cmpsb
clc
fimuls
mov
jne
push
sub
or
mov
outsl
sbbl
movsl
hlt
mov
cmp
lods
les
cmp
in
dec
or
scas
jl
pusha
imul
hlt
xchg
cltd
push
pop
mov
xchg
add
xor
jne
xlat
adc
pusha
push
enter
mov
popl
rcll
shr
mov
dec
loopne
xchg
add
fidivs
push
lret
inc
lahf
nop
and
mov
fildll
fs
mov
jl
pusha
movsl
add
loopne
xchg
add
fadds
in
adc
arpl
dec
push
ss
pusha
loop
add
pop
in
add
mov
lds
jmp
cmp
loope
aam
imul
xchg
push
xlat
popa
stos
pusha
clc
fdivs
jl
movsb
cmc
andb
pop
jmp
sbb
filds
sbb
enter
test
inc
mov
ret
loop
daa
add
loopne
jg
xchg
clc
pop
xchg
add
lret
xor
mov
js
jns
test
or
xor
pusha
add
inc
ficoml
dec
sub
mov
movsl
mov
adc
add
bound
inc
cmp
aaa
cwtl
add
bound
add
push
pushf
shr
dec
jp
pusha
pop
dec
lds
aam
test
ret
sbb
lods
and
mov
pop
stos
xor
dec
inc
cmpsb
or
loope
xor
add
insl
jns
dec
jge
in
lahf
jne
xchg
sub
dec
add
adc
add
insb
jl
push
push
pop
testb
xchg
scas
dec
rorb
xlat
or
jns
das
mov
ret
filds
add
cmp
test
and
inc
inc
pop
ljmp
fmul
sbb
xchg
xchg
add
pop
sti
add
jg
adc
outsb
aas
add
int3
int
call
pop
ret
das
cmp
inc
rclb
sahf
sbb
aaa
lods
mov
add
lret
mov
out
shrl
xchg
push
sti
icebp
fld1
jmp
call
loop
pop
add
lret
mov
inc
mov
add
push
cmp
imul
out
jns
rorl
dec
pusha
sbb
cmpsb
add
fcompl
dec
rclb
jo
cmp
aaa
pop
add
add
sub
add
and
lock
jbe
cmp
push
mov
inc
test
mov
int
sbb
int3
subl
mov
aas
jle
fidivs
mov
lret
cmp
pushf
adc
add
adc
sbb
add
jo
mov
dec
push
mov
xor
les
inc
js
jb
fdivrl
xor
sbbl
lock
pop
push
cmp
in
sub
cwtl
push
popf
orl
insl
add
sbb
cli
data16
and
add
rcl
in
push
jae
bound
push
jo
add
add
cli
xchg
push
sahf
mov
rcrb
lahf
push
in
mov
sbb
cmpsl
orb
cmp
dec
cld
mov
ror
loop
std
add
or
xchg
shll
inc
movsl
jg
push
jnp
fstl
jbe
sbb
stos
push
add
sbb
dec
xor
rcrb
add
sbb
mov
pop
into
shll
adc
insl
fisubs
stc
pop
pop
push
inc
mov
jae
andb
push
aad
add
iret
outsw
add
jp
shl
lods
add
xchg
sarb
sbb
test
divb
sarl
sbb
xor
clc
negl
in
les
fiadds
mov
cmp
fisubrl
push
test
fwait
xor
jge
xor
jmp
jmp
clc
addl
xchg
sbb
or
scas
outsb
sbb
mulb
pop
jecxz
mov
add
mov
cmp
test
cmp
addb
ja
jl
jl
add
mov
add
mov
mov
sbb
mov
shrb
iret
mov
add
push
mov
lea
xchg
pop
stos
fwait
adc
mov
mov
or
add
push
lret
push
inc
clc
adc
jb
sti
mov
cli
sub
pcmpgtw
pop
add
js
pop
cmp
cmp
inc
adc
push
ds
daa
cmp
ljmp
js
jmp
fs
repz
jno
add
or
push
pushf
mov
mov
test
subb
in
cmp
xchg
sbb
mov
cwtl
arpl
daa
sub
mov
mov
ss
adc
orb
or
xchg
jp
mov
add
cli
adc
cmp
scas
xorb
outsl
out
test
shrb
push
stc
clc
lock
pusha
xorb
add
cs
les
ss
aam
jecxz
add
sti
fldl
pusha
test
into
xor
mov
xchg
clc
ss
xchg
or
out
rolb
xor
out
in
mov
sbb
inc
mov
in
xor
jp
fistpl
nop
xorl
shrb
xchg
mov
lds
repnz
sbb
frstor
orb
adc
mov
add
leave
cmp
xor
mov
fisubl
jbe
mov
add
xor
repnz
nop
inc
push
cmp
push
sbb
inc
ret
add
cmp
xor
push
iret
lahf
je
ret
test
push
mov
movsb
popf
out
ret
and
xchg
rcrb
push
lds
call
mov
fs
setl
xor
xor
jmp
xor
xlat
push
imul
push
test
push
lds
test
and
lods
xor
nop
mov
cmpsb
cli
add
pop
adc
daa
sti
xchg
sbb
incb
sub
scas
cmc
fists
add
rcrb
arpl
aad
sub
mov
or
push
out
shrb
cmp
push
add
fcoms
rolb
sti
cmovp
sub
data16
jmp
outsw
or
sbb
cmp
leave
cmp
sbb
pop
sub
int3
popa
lods
jns
outsb
inc
int3
popf
pop
cmpsb
push
das
xchg
mov
add
inc
rcrl
adc
adc
ficompl
add
idiv
mov
inc
stos
push
loope
or
jne
mov
adc
fucom
sahf
xor
mov
call
lds
cmp
push
insb
push
and
lret
cmc
xor
cmp
stos
jbe
fcmovne
les
or
or
xor
leave
dec
mov
pop
lods
push
add
dec
dec
adc
lahf
add
into
push
xchg
push
xchg
loop
movb
pop
popf
inc
cwtl
loopne
jmp
sub
push
inc
jge
fmull
adc
add
push
xor
jle
push
dec
add
addl
push
mov
fisubs
sub
add
xchg
sbb
mov
mov
stos
loop
insb
sbb
scas
cli
ljmp
mov
mov
add
cmpsl
mov
fs
pop
int3
push
dec
std
jge
jge
add
pop
shl
bound
add
sbb
ss
push
jle
arpl
scas
jbe
sub
mov
sub
out
stc
jle
push
and
idivb
cs
incl
jae
cld
nop
add
jge
xor
daa
or
add
xor
push
add
test
enter
sbb
or
ret
in
cmp
lahf
pop
pop
cld
test
pop
fwait
mov
in
lcall
aaa
addr16
add
hlt
stos
sub
add
mov
add
das
inc
xchg
aam
jl
pop
jl
test
jns
cmp
stos
popa
add
sbb
jno
add
or
scas
leave
nop
aaa
xorb
sbb
cld
ret
sbb
pop
xor
mov
add
push
jp
cmp
adc
sbb
test
adc
sub
mov
sahf
in
and
fistps
insb
dec
xor
inc
sbb
ljmp
jae
cmpsl
bound
mov
sub
pop
int
hlt
fwait
inc
and
out
add
fistpll
jae
add
dec
loop
pop
and
add
cltd
lret
cmp
jmp
jmp
ficomps
add
lock
jno
rep
lcall
inc
into
pusha
loopne
add
insb
imul
adc
repz
jbe
lret
or
lods
and
inc
pop
jecxz
in
andb
jmp
and
fs
pop
jae
adcb
inc
cmp
sbb
add
pop
pusha
subb
dec
xor
clc
add
adc
bound
add
mov
shlb
sbb
mov
mov
cmp
add
leave
cmp
add
clc
out
cltd
test
push
mov
sbb
jecxz
lcall
cmc
punpckhbw
inc
and
jbe
loopne
pop
mov
or
cmp
add
inc
xor
pushf
and
ja
jo
jmp
enter
dec
mov
getsec
mov
loop
pusha
jb
outsb
enter
push
mov
in
sbb
sti
imul
jp
ds
pop
add
rcll
mov
mov
add
dec
and
cmp
shlb
and
pusha
mov
jb
mov
xchg
loop
add
push
stos
orb
add
adc
dec
inc
xchg
add
mov
das
bound
cmp
psrlq
xor
gs
rorb
insb
inc
test
jge
cwtl
add
out
enter
cmpsl
rcr
dec
xchg
add
filds
ljmp
std
sub
shrb
int
inc
je
sub
rorb
sub
add
cld
sti
leave
add
movsl
xchg
jg
xor
dec
add
shl
jns
add
arpl
sub
leave
inc
dec
xchg
movzbl
lock
xchg
sti
cmpsb
sbb
cmpsl
push
ret
add
orb
loopne
adc
in
mov
rolb
or
xlat
rol
add
dec
lods
xchg
fnstsw
push
add
push
push
and
outsl
and
add
push
adc
repnz
pop
add
sbb
nop
and
cs
or
xor
inc
add
push
cmpsb
aas
pop
xor
fsubs
fmuls
or
add
int3
inc
nop
in
sbb
notl
sub
incb
das
add
pop
fadds
add
push
sbbb
sbb
fiadds
mov
inc
sbb
or
sbb
jnp
mov
in
shr
stc
icebp
cmp
scas
lahf
cld
push
ror
fiaddl
ds
fistpl
fsub
lods
add
fst
out
jns
cmpsl
sbbl
push
add
pop
ret
and
into
add
test
lret
adcl
pusha
cmpsl
xchg
push
mov
or
inc
cmpsb
add
test
je
out
add
loope
xchg
pop
notl
add
cmpsb
cltd
inc
jp
addb
pusha
or
fwait
add
cmp
mov
push
mov
mov
jle
shlb
xchg
push
xchg
lods
xchg
pushf
lods
dec
adc
pop
jb
add
mov
daa
loop
ljmp
call
or
into
inc
push
sbb
add
imul
mov
mov
push
adc
dec
dec
das
sti
loopne
in
cmp
dec
add
xchg
bnd
add
jnp
loopne
xchg
in
adc
test
add
in
pop
xchg
orl
cltd
push
xor
add
add
push
cmp
ja
movsb
inc
mov
dec
mov
lock
je
ljmp
jno
xchg
mov
pop
lock
mov
mov
dec
or
imul
xchg
in
add
mov
mov
fscale
in
push
pop
divl
xor
xor
jp
repnz
add
mov
add
out
and
adc
je
add
cmp
stos
or
test
mov
mov
scas
add
jg
ss
cmpsl
repnz
pop
dec
dec
dec
add
add
adc
in
xchg
cvttps2pi
inc
mov
xor
aam
arpl
sub
lock
test
imul
mov
push
lret
push
or
xor
push
jns
xchg
ret
inc
cmp
outsl
mov
enter
jno
jne
imul
jmp
aas
add
adc
pop
add
mov
jno
and
arpl
sub
arpl
xchg
icebp
aam
faddp
add
insb
cmp
pop
ss
add
out
fdivs
insl
push
in
pop
lds
and
xchg
mov
pop
and
jno
push
adc
jl
or
pop
shrl
lods
sub
push
bound
or
push
cmp
jmp
push
xlat
fwait
insl
ds
jmp
ja
int3
add
lock
in
add
jo
repnz
add
aad
jecxz
in
cld
daa
inc
repnz
xor
popa
jnp
pop
xchg
ror
add
xor
std
je
shlb
ja
add
mov
pop
mov
ds
pop
out
xor
lcall
out
mov
pop
inc
sbb
nop
cmp
mov
cmpsb
out
jb
jbe
call
xchg
addb
add
sub
nop
ss
in
sub
lcall
cs
imul
in
mov
cli
popa
stos
addb
insb
in
nop
pop
dec
mov
repz
push
inc
push
jnp
xchg
jecxz
mov
lock
cmp
outsb
add
scas
add
dec
sub
xchg
loop
mov
add
shl
sub
add
arpl
lahf
push
mov
jo
xchg
and
and
cmp
into
dec
inc
xchg
les
out
xchg
das
stc
xchg
mov
mov
mov
add
cmp
sahf
xor
add
sti
jbe
mov
xchg
xor
sahf
adc
mov
add
push
int
add
mov
lcall
in
cltd
jl
inc
je
pushf
shlb
add
pop
dec
sub
mov
xorb
add
out
xor
jns
push
and
pop
inc
mov
out
scas
sbb
nop
xor
sbb
inc
pop
ja
nop
int
add
dec
fstp
scas
test
or
js
push
fnstenv
sarb
adc
sbb
add
cmp
cmp
dec
data16
push
mov
stos
lods
nop
in
iret
cmp
cld
repnz
adc
push
cmp
aaa
fldl
inc
mov
jp
lea
pop
xor
mov
xchg
dec
js
add
cli
xor
mov
or
data16
out
cmp
hlt
faddl
dec
inc
pop
fstpl
mov
add
aad
add
fists
dec
add
xchg
sbb
fstpt
add
sbb
and
sbb
movl
cmp
loopne
mov
add
or
fistpl
jle
cwtl
jae
add
aaa
in
push
outsb
dec
sub
data16
pop
push
push
sub
cmc
in
adc
sub
sbb
adc
xor
xor
ljmp
push
andl
xor
es
lret
shll
xchg
mov
sub
dec
enter
pop
pop
jnp
or
pop
xorl
scas
in
or
out
incb
mov
outsb
fnstsw
andl
jne
test
xor
sti
popf
add
call
jle
jl
add
ja
push
imulb
bound
push
dec
inc
push
jbe
in
ss
popa
stc
in
imull
test
clc
jnp
test
repz
xor
push
cltd
incl
fmul
push
push
and
cli
add
ss
out
andb
ret
xor
add
cmc
pop
add
dec
add
in
aaa
fldcw
mov
add
or
lock
lret
push
inc
hlt
inc
dec
sub
pop
fs
and
xor
xchg
ss
jge
scas
mov
jmp
sbb
out
adc
add
xor
int
je
add
cltd
in
lock
jo
ja
repz
aaa
inc
jl
lods
add
add
int3
js
lock
add
cmp
add
aas
cmp
add
inc
xchg
jne
pop
lds
adc
add
mov
sub
hlt
push
pop
jns
dec
jae
inc
fldl
outsl
xchg
loope
adc
cli
loop
push
loop
pusha
jle
and
stos
outsb
jno
jne
cmp
cmp
fwait
repnz
xor
sub
in
icebp
adc
fists
inc
sbb
inc
enter
sahf
xchg
push
push
mov
loopne
cwtl
pop
add
jge
out
cwtl
sub
add
cld
arpl
pop
jmp
push
lahf
out
cmp
push
mov
adc
rcl
and
cmp
or
add
jecxz
and
ret
xchg
xor
add
push
jnp
repnz
xor
cmpsl
push
mov
mov
lret
test
scas
fldl
syscall
pop
push
loopne
shlb
cld
icebp
jmp
aad
mov
ret
mov
fildl
cmpsl
in
mov
lea
add
xchg
jmp
mov
imul
shrb
test
xchg
mov
outsl
pop
add
sub
out
repnz
aaa
adc
out
sub
pop
and
pop
xchg
aas
xor
sbbb
mov
jb
dec
test
cmp
add
add
inc
mov
lods
sub
cwtl
add
cltd
inc
in
push
data16
inc
rclb
add
jae
mov
insl
mov
add
lahf
and
movl
lock
sbb
and
push
lahf
mov
enter
xchg
jne
add
aad
add
push
int3
andl
mov
push
mov
xchg
jp
loopne
push
repnz
subb
out
add
iret
rol
cs
pop
xor
test
rorl
je
movlps
xchg
fadd
push
lahf
cmpsb
pop
movsb
add
enter
imul
testl
xor
dec
xchg
out
and
sbb
ret
jmp
push
call
cld
jo
addl
jns
pop
mov
nop
in
pop
les
mov
mov
add
std
dec
xchg
or
push
and
loop
hlt
out
ret
in
fnstcw
push
dec
pop
cmpsb
imul
or
inc
cld
incb
push
xchg
pop
mov
sti
sarb
push
inc
ljmp
lds
subb
rcrb
sbb
ret
in
jecxz
scas
add
orb
add
jg
mov
inc
out
jns
pop
add
loopne
jo
ds
lea
xor
lds
adc
pop
test
arpl
mov
xchg
addl
iret
jp
loopne
ja
inc
mov
ljmp
inc
cmp
sbb
fwait
sub
testb
roll
mov
pusha
or
fcmovnu
pop
sbbb
dec
add
in
or
sub
dec
xchg
jl
add
xchg
shll
cli
jns
call
pop
mov
sbb
lea
jp
loopne
sbb
loope
xchg
fucom
jne
push
xchg
cmpsb
add
fimull
pop
sub
mov
dec
imul
aam
mov
xorb
lahf
loope
cmp
das
rclb
loop
xor
aad
les
mov
add
push
outsl
pop
fldlg2
jp
add
call
pop
jl
cmpl
add
bound
test
add
add
in
rcll
flds
cmp
test
mov
sbb
ljmp
imul
xor
jle
add
xchg
out
add
stos
adc
dec
push
rcr
lret
push
mov
push
jge
aam
int
add
mov
pop
push
dec
inc
out
sahf
sbb
xor
xlat
or
shl
add
mov
adc
dec
dec
mov
mov
mulb
add
fdivs
sbb
push
out
int3
add
dec
icebp
addl
mov
mov
xchg
daa
push
test
flds
mov
xor
ljmp
into
add
inc
and
add
insl
push
or
loope
jnp
sub
lock
test
push
add
mov
cmp
aad
cmp
and
mov
xor
adc
incl
fists
cmc
inc
mov
dec
lods
add
dec
cmp
mov
mov
sub
and
ret
shlb
into
sarb
pop
sbb
fdivl
xchg
stc
ds
stos
in
fs
aad
fsubs
add
icebp
je
mov
ja
inc
push
add
mov
adc
call
stos
mov
into
inc
xchg
scas
jmp
fwait
les
sbb
nop
imul
push
data16
and
pop
mov
xor
leave
mov
ret
insb
push
mov
lods
jb
add
lret
xchg
call
and
pop
rolb
data16
mov
jp
add
outsb
insl
dec
mov
js
pop
scas
push
scas
lods
mov
aad
dec
xchg
add
in
jge
add
xchg
xchg
mov
imul
mov
addb
pop
lds
cmp
xchg
stos
jg
mov
pop
push
dec
nop
cmp
in
pop
add
cli
xor
loopne
inc
fwait
test
push
leave
sub
cmp
dec
mov
sub
int3
jae
dec
xchg
scas
arpl
pop
add
or
lock
jno
jecxz
adc
ja
sbb
repz
addr16
add
in
push
cwtl
push
sbb
sahf
inc
cmpb
in
and
pop
mov
pushf
add
xchg
jo
sbb
dec
imul
push
hlt
dec
ljmp
orb
loopne
or
mov
mov
pop
roll
mov
insb
push
add
lret
je
adc
mov
cmp
mov
lock
or
cmp
jl
loop
fstpt
sarl
add
stos
xchg
aas
add
sbb
sub
dec
cwtl
leave
mov
clc
xor
ret
add
xor
cli
in
clc
aam
xchg
and
lock
popf
stc
mov
lcall
cmp
cmpb
mov
rcrb
or
dec
adc
jle
clc
in
cmp
sub
shlb
jle
push
push
cld
add
cli
ret
inc
jg
sub
sbb
movl
mov
xor
mov
sub
add
push
or
clc
mov
mov
fldl
addr16
jae
bnd
xor
fmuls
mov
repz
test
cwtl
cmpsb
xor
pusha
add
cmpsl
or
and
adc
std
scas
add
xchg
and
add
out
fmuls
shlb
cs
bound
mov
add
ret
test
pop
sbb
push
imul
and
out
pusha
out
test
js
jecxz
jle
bound
inc
mov
sarb
add
insl
out
add
aaa
into
inc
mov
jno
or
push
mov
das
out
pop
jl
popa
lock
stos
cmp
xchg
insl
adc
lahf
rolb
add
mov
sbb
add
sbb
iret
jns
es
jg
add
or
stos
leave
lret
adc
aaa
push
mov
les
std
loope
jns
cmp
fmulp
gs
xchg
xchg
sub
insl
or
push
mov
movsl
cmp
dec
add
jp
or
addr16
add
mov
lock
add
sarl
mov
cmpsb
pop
out
scas
add
dec
and
popf
push
push
dec
mov
adcb
stc
addb
imul
push
fists
popf
or
sub
push
sub
cmp
jl
lcall
sbb
mov
xor
mov
bound
inc
fldenv
sbb
add
in
scas
push
bound
mov
insl
add
pop
mov
add
jmp
add
hlt
adc
inc
mov
jecxz
test
fcomi
aas
push
cmp
jp
inc
cmp
push
cmp
xchg
mov
insl
stc
cmpb
pop
cwtl
rorb
adc
push
pushf
lahf
test
and
add
or
popa
das
aas
and
adc
test
dec
ja
lds
cli
fcomps
call
lods
jns
add
or
and
movq
cld
fisttps
out
add
out
shr
sub
add
leave
enter
rolb
test
mov
push
inc
mov
or
push
dec
cli
das
fisttpl
jb
add
add
lods
les
add
in
fldenv
mov
pop
into
mov
adc
faddp
add
lahf
mov
in
dec
ret
or
mov
pop
rcrl
push
pop
dec
xchg
outsb
mov
cs
mov
xor
push
or
popf
lock
or
adc
sbb
fsubl
iret
jne
loopne
pop
cmpsb
jbe
add
sub
jae
xor
xor
add
adc
lods
loopne
cmp
sti
push
sbb
out
out
add
bound
jg
jmp
popf
es
inc
arpl
mov
jo
mov
loope
sbb
dec
mov
scas
pop
xor
adc
xchg
cld
mov
cmp
je
enter
or
inc
scas
out
pop
add
str
dec
push
inc
andl
mov
das
lahf
jg
add
outsb
adc
add
cmovbe
jl
loope
push
add
sbb
add
add
mov
add
addr16
loopne
and
out
sar
test
pop
push
lods
leave
xchg
add
sti
ja
add
and
aas
mov
dec
jns
and
or
nop
xor
or
mov
stos
mov
or
clc
ss
das
or
test
mov
or
and
inc
xor
inc
pop
xor
cmp
arpl
adc
inc
xchg
mov
sbbl
pop
add
sbb
adc
sub
or
fs
adc
adc
call
aas
addr16
cwtl
or
adc
mov
xchg
or
mov
jno
mov
inc
and
dec
jmp
inc
sub
and
ret
cmp
dec
xor
xor
push
mov
adc
adc
jbe
test
cmp
xor
or
mov
adc
xchg
jnp
sbb
inc
mov
and
push
shll
jp
js
mov
dec
adc
mov
jae
fimull
xchg
andb
inc
sub
adc
jg
jno
jo
bound
push
mov
mov
push
xor
and
inc
inc
push
loopne
sti
adc
xor
xor
or
xchg
je
cli
inc
jge
mov
lret
xchg
adc
and
jo
pop
dec
iret
stc
mov
sbb
lods
jb
loop
inc
pop
adc
mov
and
stc
rorb
enter
repnz
nop
adc
ret
xor
and
push
inc
xchg
add
xor
jb
fsubs
aas
and
mov
enter
shl
sbbb
repnz
and
adc
push
inc
sbb
bound
in
push
inc
inc
loop
popf
xor
inc
loop
pop
nop
inc
cld
mov
in
aas
and
stc
orb
repnz
xchg
pop
aaa
sbb
adc
sbb
push
adc
push
inc
iret
icebp
out
jp
lahf
sbb
mov
sbb
dec
pop
and
inc
jg
outsl
pop
nop
pop
cld
ja
das
stc
fists
ja
sbb
arpl
and
jmp
fbstp
adc
push
adc
mov
fisttpl
or
mov
lods
adc
mov
pop
inc
daa
test
js
inc
test
test
fisttpll
mov
aaa
rorb
ja
lods
inc
adc
rcrb
adc
loope
rcrl
and
call
xor
sbb
inc
aam
outsl
in
insl
rorb
push
out
popa
inc
sbb
and
mov
ret
add
cmp
inc
inc
cli
push
cli
inc
adcb
pop
push
mov
dec
add
lock
aam
and
push
push
cmpb
jo
jb
movsl
adc
icebp
push
jnp
sub
push
and
js
test
pop
mov
out
enter
gs
and
sub
mov
icebp
pop
ljmp
xchg
push
stc
push
and
rclb
mov
and
test
js
mov
adc
and
rcll
es
adc
push
pop
and
popa
adc
sub
lahf
nopl
sbb
sub
mov
repz
cmp
and
adc
and
and
cltd
sub
push
pop
inc
xor
imul
fnstcw
mov
sub
int3
sub
sub
mov
mov
dec
xchg
adc
push
inc
mov
outsb
sub
or
mov
test
and
jl
push
sbb
jle
clc
int
mov
lods
cltd
and
sub
mov
fadds
mov
push
mov
lea
xchg
pusha
daa
in
adc
or
push
adc
je
adc
push
jo
mov
and
loopne
adc
adc
sbb
nop
cwtl
jns
stos
loopne
push
add
xchg
shll
sbb
imul
sbb
addr16
aad
test
add
push
ficomps
in
cld
dec
hlt
mov
xor
loop
mov
cmp
jo
ret
sbb
pushw
enter
in
mov
pop
cwtl
mov
push
and
data16
add
xchg
loope
inc
in
push
add
hlt
test
incl
mov
jno
add
aas
mov
fldl
inc
loopne
in
adc
mov
push
pop
xor
int
jo
xor
clc
adc
arpl
mov
or
lock
mov
lret
inc
in
sarb
sarl
jb
add
cmp
push
dec
mov
pusha
test
pushf
lock
out
clc
adc
or
mov
into
jp
mov
cwtl
add
add
add
fdivp
sbb
imul
mov
jne
xor
add
pop
mov
add
out
dec
mov
mov
fwait
jae
fsubp
and
out
cltd
cmp
add
leave
mov
pop
loopne
roll
xor
cmp
loope
pop
call
inc
inc
repz
add
xor
in
sub
or
push
or
add
into
and
mov
cld
mov
loop
inc
sub
sldt
sub
sub
lods
lea
mov
xchg
xor
mov
cmpl
add
cmc
add
adc
xor
push
imul
sbb
xchg
sbb
in
push
add
into
jmp
js
ret
or
test
and
int3
push
popa
aas
pop
jo
and
mov
sbb
js
sbb
cmpsl
mov
push
jp
mov
add
cltd
fidivs
and
dec
dec
fwait
and
rcr
cmc
fs
lcall
lahf
push
sbb
dec
int3
pusha
or
icebp
nop
lds
mov
lock
rcrb
push
jecxz
sub
stos
jmp
mov
movsb
ja
fnstsw
js
mov
and
xorl
dec
sbb
pusha
push
jl
and
js
jno
sbbb
ja
in
int3
into
lock
mov
jns
jl
add
frstor
aaa
stc
test
pushf
imul
enter
jno
loopne
shrl
lock
loop
cmp
cmp
sbb
cmpsl
and
popl
rcll
ljmp
push
in
test
inc
xchg
jg
xchg
fcmovnu
imul
cmp
int3
jb
cmp
sbb
test
pop
dec
aaa
cmp
push
sub
loopne
mov
or
add
mov
loopne
jg
pop
xor
jns
dec
sub
int3
sub
and
or
pop
aaa
xchg
sub
adc
nop
add
dec
sbb
cmc
mov
add
shrb
jge
popf
dec
jp
leave
xor
data16
pop
xchg
push
mov
mov
fdivs
xor
scas
xor
pop
fldl2t
ret
dec
popa
addl
jbe
pop
test
dec
std
leave
fstl
push
addb
or
stos
int3
addl
insb
mov
add
hlt
mov
outsb
mov
mov
repnz
arpl
or
xor
cltd
mov
leave
fnstcw
out
pop
sti
aaa
or
les
dec
xchg
sbb
mov
mov
jne
pop
stos
and
andl
xchg
dec
and
mov
popa
xchg
push
jecxz
fstps
mov
mov
add
inc
mov
push
jp
clc
mov
mov
or
insl
outsb
cmp
push
shlb
aas
sbb
loope
or
jl
add
add
xchg
inc
movsl
sub
push
push
mov
pushf
push
and
pop
fistpll
add
movsl
sub
adc
push
adc
dec
add
stc
sbb
xchg
add
lods
mov
mov
cwtl
lahf
cmovge
arpl
adc
pop
ja
sarl
sarb
mov
and
mov
pop
push
add
pop
cmp
sbb
enter
mov
data16
pop
clc
jp
das
xchg
mov
ss
cltd
js
lret
stc
ret
or
lds
mov
add
adc
fdivr
mov
sub
mov
lret
mov
into
pop
adc
movsl
add
rclb
mov
shl
push
pop
int3
fldenv
xchg
subl
add
inc
mov
lods
adc
cmp
add
aad
xchg
movsl
cmpsl
stc
push
add
notl
xchg
ds
and
loope
inc
scas
dec
and
nop
add
push
add
mov
mov
es
push
aad
xor
nop
mov
movb
stos
fisubs
ds
jno
inc
into
addr16
add
insl
add
xchg
jge
pop
cld
inc
mov
je
add
loopne
sahf
call
lods
add
pop
or
movsl
pop
or
jae
inc
aas
fcomi
add
test
adc
nop
xchg
out
iret
add
jnp
or
orl
pop
inc
mov
in
and
icebp
ret
sub
inc
arpl
pusha
pop
lods
cwtl
in
jl
cmp
push
mov
push
in
jmp
scas
add
in
inc
push
add
test
add
and
pushf
and
and
negb
int3
mov
or
shlb
mov
jmp
push
sti
das
or
add
push
xorl
sub
add
adc
sbbl
mov
or
shlb
movsl
pop
subb
les
divl
mov
and
jne
leave
mov
mov
mov
lds
dec
dec
or
push
mov
lock
stc
or
pop
in
xor
das
cs
in
fsubs
out
test
jbe
add
or
xor
test
lcall
out
pop
push
int
jmp
paddsb
inc
aaa
sub
jle
jae
and
push
mov
clc
dec
in
orl
cmpsb
repnz
ret
stc
add
mov
jecxz
dec
out
and
cli
xchg
repz
xor
mov
dec
fisttpll
test
roll
push
pop
mov
pop
mov
into
dec
nop
nop
scas
or
lods
stos
inc
jns
add
pop
fmuls
adc
and
and
sahf
add
mov
dec
addb
xchg
xor
sbb
mov
js
xor
cltd
mov
push
add
call
nop
lock
inc
test
adc
sbb
sbb
xor
dec
and
cmp
or
aas
testl
and
add
sbb
jnp
out
or
lret
and
mov
mov
dec
xor
inc
and
jl
jmp
or
push
xor
lds
mov
mov
cmp
arpl
mov
out
mov
or
sub
jne
rol
repnz
stos
jp
add
daa
cwtl
xchg
scas
enter
add
subl
dec
out
imul
pop
mov
sbb
addr16
dec
and
cmpsl
add
jp
xchg
pop
ret
into
fdivrl
jbe
cmpb
mov
es
bound
ja
sahf
addb
hlt
push
add
je
dec
es
rcrl
in
push
or
clc
xor
leave
adc
sbb
or
push
xor
mov
sbb
out
push
popf
mov
mov
cmp
lahf
adc
xor
sbb
movsl
adc
enter
xor
inc
mov
or
loopne
les
push
nop
test
adc
mov
pop
xchg
mov
and
xchg
outsb
xchg
jl
cmpsl
mov
or
aas
cmp
and
enter
cmpl
in
xlat
rcrl
pushf
stc
incb
add
ror
sub
or
icebp
push
adc
cltd
and
pop
rcrb
push
cwtl
dec
push
wrmsr
adc
aam
mov
sub
in
rcrl
add
enter
sub
mov
mov
add
mov
mov
mov
fiadds
pop
js
fcomps
and
gs
data16
inc
lcall
gs
and
sub
jg
ret
cltd
add
xchg
sbb
push
int
xchg
lods
subb
sub
aad
push
jnp
adcb
cmp
xor
mov
add
clc
pop
mov
mov
jo
mov
js
insl
fisubs
pop
dec
ret
ja
into
sub
inc
inc
je
or
hlt
mov
les
outsb
inc
dec
rorb
push
pop
dec
pop
pop
push
lods
repz
pusha
add
dec
xor
aaa
lea
cmp
pop
loope
xchg
push
dec
add
mov
ljmp
out
push
in
and
shll
cmp
xor
mov
jbe
add
mov
scas
clc
lret
mov
sbb
jno
sarb
sub
orb
aas
or
shrl
or
sub
xchg
ret
iret
dec
aam
lret
inc
stos
adc
inc
sub
push
cltd
add
scas
aam
pop
add
pop
or
mov
sub
pop
scas
mov
leave
mov
faddl
aad
stc
xorb
push
ss
mov
xor
lods
lret
testb
mov
lret
mov
mov
leave
xchg
pop
insb
jnp
shll
fs
icebp
in
in
aam
sub
push
mov
pop
icebp
push
std
push
pop
rolb
orb
or
and
dec
testb
and
cmc
repz
jge
mov
jl
stc
stos
xchg
out
jns
or
push
loope
mov
pop
fmuls
and
mov
cld
scas
push
lahf
out
push
dec
enter
hlt
addb
mov
sub
push
and
inc
dec
dec
cwtl
arpl
rcll
xor
fdivl
adc
icebp
mov
jecxz
mov
imul
loope
int3
push
jnp
jmp
js
cld
or
jge
movsb
enter
test
jo
push
cmpsb
shll
pushf
ret
addl
inc
fdivl
and
sbbl
out
push
rolb
ret
inc
add
lods
and
test
rolb
add
and
add
and
xor
cmp
flds
cmp
jp
sub
add
jo
cli
add
cwtl
lds
ds
xor
icebp
stos
addr16
fistpl
jl
dec
xor
cmp
xorl
pop
jl
scas
xor
cmp
std
icebp
push
adc
insb
fmull
in
mov
or
sbb
push
scas
sbb
and
pop
sbb
mov
sub
inc
push
sub
or
dec
adc
mov
gs
dec
jp
push
pop
sbb
inc
or
ss
lods
dec
or
sbb
dec
or
xor
test
bound
and
adc
loop
cltd
and
mov
or
xor
sub
scas
cmp
out
pusha
nop
mov
mov
rcrl
repnz
leave
and
jl
stc
ret
xor
adc
test
xorl
push
ja
sbb
lcall
add
mov
and
test
dec
imul
mov
test
jp
mov
mov
mov
xchg
ds
jbe
add
mov
imul
adc
push
mov
cmp
aam
jo
repnz
or
fmul
adc
add
jl
xor
inc
dec
adc
bound
push
mov
mov
fcmovnb
pop
ljmp
movsb
daa
les
push
inc
mov
scas
pop
pop
and
cmpsl
sbb
sarb
adc
cltd
mov
sub
dec
pusha
adc
sarl
push
xchg
lea
jecxz
sub
jns
xor
push
add
jbe
inc
jae
inc
enter
add
pushf
xlat
xor
stos
les
sarb
cwtl
mov
js
popa
push
andb
jae
sub
adcl
inc
mull
stc
ljmp
loop
cwtl
add
nop
xor
pop
leave
xor
pop
test
add
jmp
cmp
rcrb
shlb
test
xor
push
loopne
leave
push
daa
sbb
and
xchg
call
push
rcrl
pop
sbb
mov
xor
stc
sub
pop
test
iret
inc
push
cmp
imul
daa
testb
pop
add
stc
shlb
lods
std
loop
jle
inc
adc
sbb
mov
push
mov
push
pop
xor
adc
xor
test
mov
dec
xchg
pop
mov
pushf
mov
sub
aaa
enter
test
lods
lods
lock
arpl
jmp
mov
and
ret
inc
push
fadds
inc
es
movsl
adc
or
dec
je
into
and
inc
lret
js
mov
aad
imul
stc
fadd
std
je
dec
mov
mov
hlt
push
xchg
xorl
add
xor
inc
mov
nop
pop
cs
gs
push
mov
addr16
negb
cmp
fwait
adc
sbb
adc
dec
and
push
adc
mov
mov
add
dec
cmpl
and
test
jo
sahf
adc
add
cld
cmp
adc
pop
fildl
push
int3
adc
imul
test
rcl
pushf
jne
jmp
mov
inc
add
jg
inc
std
lea
lock
cmp
test
add
cltd
or
sahf
dec
push
push
cmovle
and
dec
or
aas
jmp
rclb
mov
push
int
out
mov
cmp
xor
and
push
pop
or
adcb
inc
xchg
or
adcb
cwtl
shlb
jno
clc
xchg
roll
fsubrl
enter
add
mov
addb
mov
push
sub
cwtl
test
sbb
adc
mov
loope
xchg
mov
lea
andb
push
jns
test
push
loope
dec
and
pop
enter
add
add
rcr
lods
pusha
xchg
adc
or
popa
sub
insb
stos
mov
push
fdivrl
int
and
pushf
inc
or
jo
cmp
xchg
loope,pn
and
mov
xor
jle
repz
xchg
out
cmp
xchg
xchg
cmp
in
gs
pop
and
test
rcrl
or
or
rorl
fistps
jns
jge
clc
aaa
lea
xor
pop
daa
fs
loopne
ret
jge
cld
add
mov
pop
lods
pop
iret
cwtl
aad
lcall
sbbb
cmpsb
into
add
mov
push
inc
sub
or
aaa
xchg
pop
sbb
aad
je
mov
add
pop
loope
add
loopne
popa
push
xchg
sub
adc
inc
add
mov
sti
mov
imul
add
insl
mov
add
lret
int
add
mov
inc
and
sbb
xchg
add
shrb
std
insl
push
popf
push
cltd
sti
pushf
mov
mov
imul
fisubl
fldl
push
cltd
dec
jns
mov
cmp
roll
mov
pushf
lret
sbb
clc
cwtl
xchg
and
xchg
ret
push
sbb
rolb
inc
aas
and
jo
push
inc
adc
imul
xor
mov
push
hlt
ljmp
std
andl
mov
nop
les
sub
and
or
inc
push
sub
cmp
jl
adc
popa
or
mov
sbb
rcrb
mov
into
or
insb
in
sub
int3
add
imul
enter
jg
mov
xchg
add
ljmp
pop
dec
fmul
fs
or
adc
lret
inc
xor
push
pop
in
imul
sbb
mov
push
fwait
nop
subb
addb
loopne
xchg
sbb
ja
add
sub
sbb
sarl
jae
lods
fisttpl
jo
and
xor
mov
shll
pop
mov
addr16
inc
fdivrs
lods
mov
and
jne
add
add
test
cwtl
cmp
inc
dec
add
cs
repnz
add
mov
and
add
ror
leave
es
push
push
je
icebp
and
mov
loop
sbb
dec
sbb
in
out
shlb
lret
test
adc
loopne
dec
push
insb
push
inc
pushf
and
popf
ret
xchg
push
in
push
xor
les
dec
mov
or
call
or
add
mov
inc
lock
add
mov
push
cli
int3
lret
ror
aaa
mov
adc
fstps
sbb
inc
jno
mov
mov
outsl
or
mov
in
inc
push
pop
cmp
cmp
les
fiaddl
pop
sbb
mov
xor
dec
std
cmp
mov
cwtl
in
or
push
and
dec
fwait
sbb
mov
outsl
adc
icebp
mov
test
out
jge
inc
addb
js
sub
adcl
aad
fadds
add
mov
mull
xor
lds
aad
jp
pop
es
aas
clc
add
xor
adc
stos
or
cmpl
mov
sahf
jo
punpckhwd
jnp
shrl
add
cmp
and
rcrl
loopne
rolb
pop
push
sahf
push
pop
add
mov
aam
in
add
in
xchg
pop
xchg
into
push
or
fisubrs
outsl
push
jae
pushw
jmp
push
rcrl
dec
sub
data16
jle
cmc
cmc
xor
movsl
js
add
inc
cmc
movsb
inc
mov
inc
jnp
inc
aam
or
test
adc
pop
push
sub
cwtl
or
dec
lea
push
mov
cld
pop
sbb
aas
fadd
adc
xlat
add
sbb
xchg
je
mov
add
movsl
mov
add
cmc
out
addr16
mov
shlb
test
add
push
jno
andl
cmp
pop
pop
out
cwtl
or
and
add
xor
cmp
sbb
cwtl
fs
adc
clc
add
xchg
adc
hlt
lods
xchg
adc
test
jp
inc
fldl
aad
lea
mov
adc
sbb
sub
test
xchg
mull
mov
pushf
dec
nop
add
adc
rcrl
sbb
mov
add
sbb
dec
test
dec
and
pop
lds
and
sub
inc
pop
add
jg
hlt
iret
cwtl
adc
dec
cmpb
pop
push
jle
mov
jecxz
sub
data16
push
jg
or
les
and
add
sub
cmpl
push
shl
or
lds
add
jmp
gs
xchg
xchg
loopw
in
or
aad
aam
fcoms
jb
cmp
lret
bound
pop
lods
idivl
pop
fcompl
inc
inc
xor
fistps
add
cwtl
inc
mov
dec
jle
addb
clc
adc
add
push
pop
aas
add
mov
cltd
add
mov
lds
and
ja
clc
xchg
enter
les
pop
add
mov
fadd
cmp
adc
add
cmp
add
or
lods
int3
subb
dec
inc
or
fnstcw
rcrb
add
sbb
pop
mov
jnp
cmp
sbb
mov
cmpsl
add
dec
mov
add
lahf
xchg
outsb
mov
push
lock
dec
mov
sbb
lahf
ljmp
gs
push
in
add
pop
cld
dec
inc
hlt
bound
adc
loopne
add
xchg
rolb
int3
shrb
ja
fcoml
push
iret
pusha
mov
lcall
cwtl
sbb
xchg
xlat
mov
jp
push
out
dec
test
xchg
cld
inc
sbb
dec
int3
mov
cmp
pop
and
and
js
xchg
hlt
inc
faddl
lea
stos
add
and
pop
sahf
into
subb
sbb
enter
scas
hlt
pop
inc
mov
pop
shlb
rolb
pusha
sbb
inc
sbbb
xchg
sbb
push
loop
push
and
in
push
xor
mov
or
add
or
add
movsb
fiadds
lds
and
mov
aaa
call
fildl
adc
add
push
jl
pop
adc
popf
cmp
sub
ret
add
xlat
fbstp
jno
into
cmp
jne
cmp
push
add
in
les
shlb
and
mov
sub
out
add
xchg
and
or
cmp
lcall
in
jle
sub
jge
dec
sub
pop
loopne
mov
add
js
jb
push
adc
stos
je
pop
add
lock
sub
add
xor
or
insb
mov
mov
xor
mov
lret
int
mov
test
and
rol
pop
push
loopne
push
push
sbb
test
mov
cwtl
das
add
sarl
add
mov
scas
sbb
cmc
and
div
movaps
leave
xorb
xchg
add
sbb
mov
stos
rcll
es
cmp
aam
cmpl
lods
mov
mulb
jmp
push
repnz
jecxz
xor
lock
cmpb
jne
lock
jle
add
xchg
cmp
insl
xchg
fs
cmp
xor
xor
and
mov
in
sbb
clc
adc
lahf
std
or
push
addr16
and
pop
add
movsb
jb
ds
fisttpll
fdivrs
jnp
add
dec
jmp
ljmp
xchg
sub
sahf
mov
jp
add
out
pop
jnp
push
lcall
adc
add
add
mov
adc
cmp
inc
inc
out
and
sub
xchg
ret
mov
dec
imul
movsb
mov
stc
scas
mov
add
xchg
adc
test
mov
cmpsl
add
lods
cmp
jg
out
mov
pop
fimull
jle
xor
aam
add
mov
jae
push
push
add
decl
add
leave
lods
xor
sbb
int
and
mov
mov
imul
sti
push
xchg
addb
inc
sub
push
mov
inc
cmpsb
rcrl
sub
jns
add
jle
scas
sbb
push
sbb
dec
popa
shlb
push
adc
push
dec
loop
mov
mov
lcall
add
cmp
add
psadbw
addr16
sbb
xor
loop
pop
mov
add
notb
ljmp
xor
push
pusha
cmp
addr16
xchg
popf
lahf
xor
pop
lret
pusha
pusha
inc
enter
jle
xchg
int
add
in
mov
pop
and
popa
or
xor
adcb
filds
lds
stos
mov
imul
and
jnp
adc
cli
lea
stos
adc
inc
fucom
clc
daa
inc
pop
stos
hlt
out
add
sub
test
jmp
cltd
push
or
add
mov
imul
pop
and
push
jp
jp
add
jmp
dec
sub
es
sbbl
fists
adc
sbb
add
sti
push
or
pop
inc
add
fiaddl
inc
lock
push
orl
hlt
jb
mov
dec
cs
cmp
add
inc
xchg
lods
in
sbb
jne
xor
pop
movsb
int
js
jae
add
dec
out
call
add
push
pop
inc
lods
ret
inc
outsb
cmp
insb
rcrb
adc
or
icebp
mov
adc
or
xchg
add
dec
outsb
add
inc
jno
mov
cwtl
in
push
add
xor
std
gs
pushf
out
jecxz
mov
mov
adc
jmp
shlb
out
je
arpl
mov
push
mov
mov
imulb
sub
jo
jo
mov
adc
leave
mov
add
push
movsl
add
ja
xor
push
and
add
pushf
xorb
loop
cmpl
jge
and
stos
imul
outsb
lahf
aaa
inc
and
mov
mov
imul
add
jbe
inc
add
xchg
push
mov
xor
std
inc
pushf
pusha
cmpl
adc
add
clc
mov
cli
js
adc
aam
add
lods
bound
mov
adc
insl
pop
jns
sbb
filds
fidivs
loopne
inc
aad
jnp
cmpsl
and
add
mov
aas
sub
scas
into
xchg
adc
and
test
call
push
push
and
lfs
lds
add
outsl
push
push
sub
clc
xchg
sbb
cmp
aad
adc
push
dec
pop
xchg
mov
and
xchg
aas
rcrl
pushf
add
leave
les
jae
sbbb
lcall
fadd
and
dec
enter
mov
adc
add
jbe
test
xor
shlb
sub
mov
add
and
mov
bound
pop
add
cli
call
add
jecxz
sbb
out
mov
dec
stos
sbb
pop
push
nop
dec
xor
pop
add
cs
jbe
adc
pop
sub
imul
pop
fimull
cmp
das
in
push
stc
xor
mov
popa
jge
pusha
pop
icebp
ficoms
scas
in
sbb
jno
sub
or
enter
xchg
adcl
add
in
fcomip
les
mov
fsub
and
mov
xor
and
insl
xor
mov
or
ds
mov
dec
add
leave
xchg
in
ret
movsb
orb
add
sbb
aas
je
adc
mov
mov
add
mov
jle
clc
jmp
mov
cmpsl
or
lds
pop
movsb
fwait
pop
shlb
add
js
mov
adc
nop
addb
psrlw
rorb
cmpsl
xor
pusha
addr16
dec
or
inc
punpckhbw
add
or
sub
in
aad
daa
add
repz
pop
stc
jge
lcall
inc
sbb
jo
pop
clc
inc
add
fcomps
adc
mov
or
or
in
ret
mov
cmp
andl
add
jl
sbb
or
test
addr16
or
aaa
cmp
cltd
add
fistpl
or
pop
add
push
adc
mov
or
inc
call
je
mov
pusha
pop
push
jge
repz
bound
addl
aas
outsb
adc
pop
or
dec
push
orb
mov
add
pop
cmpsl
dec
lock
in
cmp
int3
std
es
out
mov
sub
insb
adc
and
pop
lea
pusha
pop
je
jne
add
sarb
xor
inc
loopne
in
les
cld
out
xor
or
aas
insl
cmp
jge
adc
fnstcw
jl
pop
cwtl
jp
inc
test
cmp
sbb
sbb
xor
in
add
lret
cmpsl
nop
cli
add
int3
nop
std
lock
add
pusha
xchg
shrl
idivl
dec
xchg
movsl
pop
push
pop
lock
add
sub
inc
push
jmp
add
into
xor
mov
fsubrs
aas
lock
dec
add
adc
or
mov
jge
jmp
in
inc
xchg
or
ret
popf
inc
subl
xchg
add
mov
mov
cmp
cli
jnp
in
mov
arpl
pop
iret
or
stc
push
cmpsb
into
adc
loope
lcall
cmp
nop
mov
scas
mov
xor
lret
mov
pusha
andl
movsb
jo
cwtl
loop
sbb
mov
repz
push
sub
push
sbb
add
inc
xor
fstpl
or
add
add
int
leave
adc
xor
mov
cmp
je
add
xor
cmc
sub
or
mov
xor
add
push
cmp
add
pop
add
movsl
lret
int
cwtl
mov
jecxz
lahf
popf
adc
sub
pop
mov
or
jge
mov
clc
dec
movsb
or
cmc
mov
sub
test
cmpsl
scas
dec
sub
jo
ss
mov
popa
pop
out
xchg
lret
pop
mov
shrb
add
lahf
lds
aam
add
pushl
lea
cltd
sbb
xor
pusha
jmp
cmp
mov
aam
push
jns
push
outsb
mov
popf
pop
sbb
mov
add
and
add
mov
add
lcall
add
in
mov
add
ret
and
inc
mov
lock
call
jne
filds
pushf
in
and
fidivrs
outsl
loopne
int
out
push
lods
xor
xchg
pop
std
insb
cmp
faddl
fimuls
addr16
push
push
add
sti
leave
andb
sbb
add
orl
add
mov
pop
mov
ret
inc
adc
and
xchg
jo
pop
jmp
mov
or
jl
jl
xchg
add
and
cmp
jo
pop
das
rcrl
add
jb
clc
fiadds
mov
xchg
cli
xorb
add
das
mulb
adc
scas
xor
and
xchg
loope
dec
scas
sbb
cmpsl
add
fdivrl
sub
ror
inc
call
shl
and
xchg
cmp
daa
add
mov
les
and
repz
dec
cmp
adc
adc
push
repnz
neg
push
add
adcb
ret
mov
jle
mov
pop
pop
add
fcmovb
dec
and
jo
in
testb
lret
xchg
icebp
add
aad
daa
mov
jmp
roll
jmp
rolb
dec
push
sbb
add
adc
outsb
enter
lfs
aaa
xor
add
cmp
lock
rcrb
ret
xor
xchg
xorb
ds
inc
out
imul
imul
dec
jp
mov
shl
xchg
pop
sbb
adc
pop
mov
sub
aad
add
and
lcall
gs
inc
sbb
add
mov
mov
call
jmp
sahf
out
sub
xchg
imul
fwait
mov
add
mov
call
add
in
xchg
scas
stos
add
es
gs
fmuls
sbb
cmp
mov
enter
popa
loopne
les
push
mov
mov
xchg
cld
add
movsl
ret
les
pop
js
jne
incb
insb
add
repnz
iret
push
mov
add
jge
out
movsb
imul
arpl
dec
inc
xchg
xor
adc
sbb
or
mov
leave
xor
shll
pop
add
data16
add
inc
jae
scas
int3
mov
fidivs
ds
and
arpl
pop
fcmovnb
pusha
movl
mov
aam
sbb
push
lahf
cwtl
adc
sbb
arpl
add
cs
cld
test
add
lret
icebp
mov
pop
inc
jae
push
dec
mov
ret
pshufw
into
and
cmp
or
mov
mov
loopne
movntq
out
mov
in
inc
lods
pop
push
jge
adc
pop
mov
out
pop
lret
fstpt
jbe
xorl
mov
push
aam
push
mov
sbbl
sarl
insb
ljmp
popf
jp
stc
mov
iret
and
dec
xorl
dec
test
lock
mov
mov
lock
sbb
mov
add
xchg
aaa
adc
pushl
xchg
fucomip
ja
lods
dec
xor
js
add
je
popl
mov
mov
jae
adc
cld
sti
sbb
add
inc
cmpl
out
xchg
cmp
dec
idiv
or
fisubs
and
add
aas
jmp
add
mov
sbb
pop
mov
sahf
xor
jne
fsubr
add
lcall
push
cmp
push
nop
std
add
adc
mov
adc
adc
mov
fs
cmp
repz
adc
sbb
incl
mov
add
xor
mov
outsl
xor
mov
cmp
inc
orl
in
loope
rcrb
xor
fnstenv
out
xlat
add
test
push
xchg
cmp
sub
xchg
bound
addr16
dec
cmp
jbe
mov
jae
xchg
add
jmp
in
add
cltd
fidivrl
add
cwtl
pusha
rorl
adc
sbb
add
pop
pushf
mov
add
repnz
call
addl
inc
pop
or
jp
add
fldcw
xlat
rol
mov
add
cmp
int3
test
jb
add
mov
push
enter
daa
push
mov
xchg
fsubp
mov
mov
stc
and
ljmp
or
divb
loop
adc
dec
fwait
stc
jo
mov
test
xchg
push
popa
subb
mov
and
add
pop
xchg
icebp
pop
cmpsb
sbb
cmp
add
inc
mov
leave
adc
mov
loope
add
inc
dec
mov
add
js
je
mov
inc
in
adc
aam
jb
mov
add
lret
add
test
push
cmpsb
adc
mov
es
lcall
mov
pop
lock
rorb
jmp
fcoms
add
adc
pop
lret
je
imul
mov
popa
jne
xor
mov
ja
ror
hlt
mov
test
cmp
aam
aad
pop
pusha
jecxz
loopne
movl
xor
push
jb
fcoms
fistpll
mov
fsubl
insb
popf
daa
je
mov
jne
lcall
add
out
lea
xchg
pop
add
cmp
js
std
push
mov
add
arpl
rcll
jmp
pop
int
subb
aad
and
pusha
divl
mov
incb
add
fcoms
xchg
mov
xchg
cld
popl
pop
iret
jns
stos
xchg
sub
es
inc
mov
add
cwtl
sub
add
sbb
pop
es
loop
xchg
lock
add
out
cmp
add
push
xor
repnz
iret
out
mov
std
idivl
inc
icebp
mov
je
pop
lods
lock
rcll
or
aas
inc
outsb
inc
andb
mov
add
add
fs
mov
add
dec
pop
negb
cmp
push
subb
sub
fdivp
mov
jnp
xor
jo
imulb
out
into
sbb
xchg
negb
add
rclb
lock
jae
mov
test
mov
aam
lcall
lahf
imul
cwtl
adc
movsb
mov
jnp
pop
loope
mov
leave
cmpsb
test
add
jns
in
sbb
add
test
gs
stos
mov
lods
add
xchg
xor
mov
mov
sub
scas
fwait
mov
divl
rcrl
in
sub
rcrl
scas
xor
add
sub
lea
dec
ret
sti
inc
cmp
jae
loopne
arpl
dec
fbld
xchg
adc
in
sbb
sbbb
lods
mov
mov
jbe
mov
popf
add
test
cmp
mov
addb
stc
mov
mov
sbb
adc
data16
push
daa
lock
and
push
mov
mov
sub
add
mov
adc
sbb
inc
jmp
mov
add
fdivrs
dec
in
lahf
add
jl
cmp
adcb
sub
sti
or
lock
aas
inc
xor
pop
add
dec
xor
mov
aas
mov
ljmp
pop
mov
sub
push
notl
out
xor
movsb
add
push
adc
add
enter
mov
fbstp
xor
dec
negl
nop
pop
fdivr
add
test
sbb
call
ficomps
push
jb
mov
mov
dec
mov
mov
pop
leave
pop
add
movsw
mov
inc
testl
mov
jns
jbe
add
js
push
jb
add
push
clc
mov
pop
mov
mov
add
test
sbb
inc
or
add
ret
add
or
xor
jge
aam
hlt
cmc
ds
dec
xor
add
in
add
pop
fxch
cmp
cltd
fdivr
add
dec
fcomps
ja
push
in
inc
adc
test
bound
add
cltd
je
add
xor
shlb
sbb
add
data16
scas
dec
imul
test
inc
sub
inc
sub
inc
mov
aas
adc
js
loopne
sbb
fidivrs
push
and
leave
mov
mov
dec
lret
mov
cs
fnstenv
popa
nop
lods
stos
enter
sbb
je
or
or
add
xor
sbb
scas
insb
and
dec
push
push
icebp
insl
sub
rorb
mov
add
or
sub
add
aad
jecxz
mov
loopne
adc
call
rcrl
jne
fadds
lock
jo
sbb
mov
jbe
xchg
push
adc
je
jb
sbb
adc
sbb
cs
push
cmp
popf
loope
fwait
and
sub
mov
pop
es
xor
pop
cmpsl
sbb
xlat
ucomiss
loope
push
add
clc
outsl
rolb
inc
xchg
flds
adc
push
imul
insl
lods
mov
add
cmpl
je
lea
sbb
or
sbb
shrl
imul
out
add
std
jne
mov
push
sarl
sub
push
fiaddl
ss
and
sbb
mov
leave
xchg
fwait
es
add
arpl
lcall
push
xchg
popa
add
aaa
pusha
stc
orl
pop
mov
sahf
xchg
or
adcl
add
inc
add
test
std
aam
mov
add
int3
sub
scas
inc
pop
sahf
movb
dec
sarl
xor
rcrl
cmp
cmp
call
outsb
daa
mov
das
dec
js,pn
add
cmpsl
mov
aaa
mov
mov
cmp
jle
call
inc
rolb
cmpsl
sub
add
or
pusha
fimuls
jns
repz
xchg
xlat
loopne
int3
add
or
hlt
mov
sub
add
mov
mov
cld
fcompl
mov
push
xor
lret
jecxz
testl
cli
adcb
jne
and
into
sub
mov
xchg
out
fwait
or
push
ud0
shl
sbb
loopne
stos
pop
jg
mov
je
test
sarl
and
pop
femms
nop
dec
gs
push
sbb
pushf
xor
push
add
out
mov
icebp
pop
cltd
cmc
lods
or
inc
insl
aaa
mov
pop
scas
dec
cli
adc
sbb
dec
sub
add
dec
mov
es
inc
pop
xchg
loopne
or
push
add
mov
and
out
fnstenv
cli
ficompl
xchg
shlb
and
adc
add
test
push
cmp
xor
in
push
inc
add
cmp
mov
add
negl
sbbl
push
fadds
adc
cmp
stos
lods
dec
lods
sub
add
int
mov
into
fcoms
rorl
mov
call
ret
jle
test
loopne
jnp
pop
add
mov
imul
inc
out
add
stos
lock
testb
mov
stos
rcl
pop
mov
mov
push
fxtract
pop
add
test
lahf
jge
cld
push
insb
out
pop
sbb
dec
jp
jo
sub
xor
shrb
sub
or
rorb
loopne,pt
adc
jb
test
mov
cltd
add
mov
lcall
and
fcomps
loopne
push
clc
push
movsb
rolb
mov
jmp
ret
and
mov
dec
js
mov
jmp
adc
inc
test
leave
push
xlat
and
mov
pop
in
fisubrl
pop
int3
insb
dec
add
xchg
lds
jge
sub
mov
lret
and
les
xor
inc
rclb
add
xchg
cwtl
add
adc
and
or
add
stc
inc
mov
push
add
and
sahf
add
ljmp
dec
push
jb
cltd
push
je
and
cld
ljmp
pop
mov
nop
mov
jecxz
sti
out
movsb
lds
push
pop
mov
xchg
popa
negb
cmp
adcb
lret
inc
mov
pusha
std
sbb
test
ja
cmovnp
out
xchg
sarb
fadd
sbb
add
xchg
push
flds
lahf
push
jb
rcrb
mov
push
bound
pushl
mov
inc
outsl
mov
pop
fimuls
add
dec
adc
pop
add
dec
scas
push
rorb
xor
adc
shr
add
outsb
insl
pop
test
add
add
leave
xor
jg
and
pop
cmpsb
or
addl
or
pop
and
das
add
fs
jno
add
cld
pop
dec
mov
sbbl
nop
fnstsw
aam
mov
sub
hlt
out
add
clc
pop
xchg
psubq
out
and
pop
decl
jecxz
xor
pop
cmp
shlb
call
xchg
or
add
cmc
ret
or
inc
add
sbb
jecxz
insb
ror
sub
test
xor
testl
xor
testb
push
js
jmp
mov
inc
adcb
jp
pop
adc
add
icebp
fs
sarl
loopne
mov
jg
push
sbb
push
add
dec
incb
pusha
cmp
add
into
or
popw
hlt
rorb
cmp
jg
and
loope
jl
addb
add
arpl
xchg
pop
faddp
hlt
nop
xchg
cmp
pop
out
cmp
pop
inc
sub
sub
mov
and
lock
mov
push
xchg
sub
pushl
lcall
pop
mov
insb
or
xchg
xchg
inc
jno
pop
jge
add
or
inc
and
je
pusha
lods
inc
out
fadds
mov
add
pop
pushf
pop
movsb
and
or
and
fcompl
int
movq
jb
add
call
shrb
push
mov
fyl2x
popf
mov
mov
mov
ret
mov
js
mov
icebp
ljmp
cmp
fistpll
or
cld
mov
mov
arpl
add
std
popa
sub
lock
incl
je
and
leave
and
sbb
icebp
and
xchg
sub
or
add
add
popf
mov
nop
rorl
pop
or
push
add
xchg
cmp
sub
int
data16
inc
add
sti
ret
loop
sbb
aam
lahf
fdivrs
jae
in
sub
cwtl
jl
push
inc
adc
insl
xor
inc
out
loopne
adc
cmp
fcmovnbe
or
jb
mov
mov
addl
push
imul
xor
push
je
add
add
nop
orb
inc
add
lock
loopne
mov
cmp
inc
mov
push
shlb
mov
fst
add
ds
sarl
cmp
jge
pop
push
outsb
mov
cli
test
and
rclb
fld1
cmp
in
sti
mov
or
filds
fs
or
or
std
add
mov
adc
outsb
xchg
mov
add
dec
hlt
inc
pop
dec
sub
sbb
xchg
mov
pop
dec
sbb
add
pop
add
inc
loopne
add
ret
lods
data16
aaa
mov
xor
ror
test
add
sbb
fld
mov
repz
push
roll
inc
in
or
xor
bound
int3
and
lock
add
sub
shlb
adc
mov
mov
or
jne
dec
push
in
pop
imul
scas
aas
filds
mov
sbb
out
xchg
sub
dec
loope
pusha
push
adc
push
pop
arpl
jb
rclb
repnz
pop
out
insl
push
lcall
das
pop
xor
pushf
incb
sbb
jp
mov
shrb
dec
stos
mov
fwait
popa
imul
out
add
jle
cmp
outsl
push
fcoml
pushf
add
mov
int
leave
clc
add
add
pop
fldl
dec
dec
jl
mov
in
pop
mov
sub
mov
xchg
int
add
pop
daa
lret
jmp
sub
outsl
push
add
mov
add
sarl
sub
mov
jb
sarb
sbbb
in
add
pop
pop
fildl
xlat
rolb
daa
adc
add
stos
js
jno
mov
xchg
pop
and
add
add
push
push
cmp
push
mov
rolb
inc
pop
mov
push
frstor
lock
jb
inc
inc
ds
repz
mov
inc
or
cmp
push
push
dec
add
ljmp
cmp
outsl
sbb
adc
cld
repz
fs
xlat
repnz
mov
ret
sti
adc
sbb
cmp
jne
addr16
int
dec
sar
ds
add
cmp
sub
xor
add
pop
adc
add
in
jns
push
cmpsb
xchg
cmp
imul
lcall
sub
jecxz
add
loope
pop
add
data16
add
sbb
lret
xlat
mov
push
push
fidivrs
icebp
hlt
popf
ljmp
shlb
and
insb
call
xchg
cmp
cmp
add
pop
in
popf
in
das
push
mov
mov
call
int
fnstenv
call
in
loop
push
sub
lahf
test
movsb
sbb
cltd
xchg
xchg
inc
add
lods
add
icebp
or
sub
add
rorl
mov
mov
xor
pusha
xchg
sarb
add
roll
mov
add
in
xchg
cli
cld
lock
sbb
int
lahf
add
jmp
mov
das
mov
shll
cld
out
xor
sub
mov
loope
lds
jmp
insb
push
or
in
mov
push
add
jae
sbb
lahf
orl
aaa
xchg
pop
shll
sarl
subb
testl
push
cwtl
mov
mov
loope
pop
cmc
adc
es
outsb
in
subl
add
ss
rorb
jmp
add
xchg
movsl
mov
test
sti
mov
and
inc
push
fidivs
xchg
int
add
mov
and
mov
mov
jns
aas
movsb
loopne
add
push
xchg
jo
scas
popa
xchg
add
mov
movaps
mov
insb
pop
adc
clc
out
add
shrb
lcall
lods
dec
add
pop
jo
jnp
push
popl
lods
xor
das
or
jno
ds
pop
inc
push
add
mov
sub
out
fdivl
mul
js
mov
add
nop
jno
ja
nop
incl
mov
gs
xchg
mov
xchg
sub
fisttps
push
popl
test
fwait
pop
mov
xchg
loop
adc
sbb
int3
es
pop
jecxz
mov
popa
add
cmp
inc
addr16
and
or
mov
jecxz
sti
xchg
lock
ss
shlb
xrelease
sbb
xor
pop
data16
out
es
sbb
int3
sbb
xchg
daa
jmp
add
inc
inc
cmp
sti
add
iret
imul
fbstp
fcoml
call
xor
jle
stos
hlt
shlb
incl
xor
fs
inc
movsb
loop
xor
xor
mov
pop
repz
mov
in
fldcw
nop
mov
sbb
mov
adcb
fadds
loopne
sbb
xor
add
lcall
mov
dec
das
adc
lahf
test
xor
js
or
xor
and
stos
mov
movl
cmp
mov
add
xor
insb
dec
xchg
adc
sbb
int3
sub
push
ds
or
jecxz
movsb
jno
inc
add
outsb
jmp
or
xor
push
repz
enter
mov
pop
jo,pt
cmpsl
pop
inc
add
fldl
push
dec
fsub
sbb
cvtdq2ps
jle
jno
call
loopne
add
pop
in
filds
xchg
lret
push
es
addr16
jo
dec
sbb
std
inc
shrb
mov
sbb
add
adc
jp
add
pop
fnstcw
add
sub
add
ds
pop
mov
add
xchg
add
add
fwait
lret
xlat
sbb
sub
fdivs
add
xchg
jnp
push
add
loop
inc
and
ljmp
push
add
out
fildl
dec
dec
aam
inc
dec
shrb
add
int
clc
mov
inc
or
adc
movsl
jbe
lcall
and
bound
push
rorb
ja
xor
xor
cwtl
mov
push
gs
in
in
add
outsl
icebp
add
lret
in
add
loop
test
pop
xchg
adcl
pop
pop
test
jmp
dec
xchg
xor
dec
push
cmc
add
es
scas
das
xor
enter
add
pop
mov
out
aad
fadds
and
cmovae
aaa
pop
shll
cmp
inc
push
cmp
dec
lea
adc
out
jnp
call
out
add
ds
fstpl
mov
insl
arpl
cs
pop
xor
cmove
in
das
iret
call
test
roll
jae
pop
push
ret
dec
addr16
call
dec
add
jecxz
lods
jns
cmp
adc
push
sub
mov
mov
inc
xor
jo
repz
mov
clc
into
movsl
xor
cmp
pop
mov
add
jae
inc
movsb
cmpsb
loopne
adc
sub
sbb
out
mov
ljmp
fmull
incb
xor
mov
nop
rolb
outsb
jg
dec
jnp
sbbb
pop
xchg
lods
or
jmp
xchg
xor
mov
scas
mov
inc
jns
add
imulb
mov
imul
xchg
jp
pop
test
dec
mov
push
lods
inc
loopne
inc
adc
pop
xchg
inc
fsubl
add
fdivl
imul
iret
fstpl
mov
inc
dec
adc
aad
jo
mov
xchg
push
pop
cmp
xchg
mov
push
push
in
in
cmp
outsb
dec
add
cmovb
je
test
and
jae
or
fsubs
or
sub
cwtl
bound
mov
or
filds
int
inc
int3
xor
cwtl
add
mov
xchg
push
mov
lods
add
repz
ds
cmc
add
pushf
loopne
cmpsl
out
xlat
inc
pop
mov
jo
adc
cmovl
add
cmp
sar
or
or
sbb
xor
pop
mov
mov
jp
adc
jg
adc
or
adc
mov
movsb
mov
dec
push
adc
mov
add
inc
fucomp
xor
add
jns
cmp
cmc
aas
xchg
rorb
stc
and
and
mov
sbb
add
mov
je
mov
pop
popf
and
pop
lea
out
addr16
xor
push
adc
add
in
jge
arpl
shlb
out
xor
std
je
cmp
mov
sahf
and
cmp
faddl
fsts
ljmp
incb
add
add
popa
loope
lods
pop
mov
cs
pop
add
in
or
add
jbe
popf
or
xlat
sbbb
fs
cmp
pop
inc
addb
inc
test
nop
push
inc
popf
sbb
and
cli
lock
leave
dec
ret
aam
dec
ror
je
mov
dec
adcl
or
inc
sbb
popl
stos
iret
adc
movsb
lahf
lods
lock
cmp
push
rolb
xchg
pop
xchg
mov
out
lods
xor
jno
cmp
iret
and
add
out
mov
mull
scas
add
fstps
iret
cld
std
repz
repnz
fs
jae
add
inc
sarl
rorl
push
xchg
fwait
int
in
dec
imul
sub
mov
fnsave
pop
aam
mov
icebp
mov
ljmp
xor
lods
or
sarb
enter
dec
mov
or
mov
sub
repz
into
stos
jns
je
add
sbb
mov
jo
lret
lock
les
xor
or
xlat
sub
mov
and
repnz
faddl
sbb
mov
mov
add
aas
push
pop
int3
mov
clc
sub
movsl
jne
dec
xchg
scas
pop
les
and
or
pop
xor
sbb
pop
call
xchg
adc
inc
inc
add
rcll
cmp
and
mov
xchg
add
mov
lea
xchg
adc
and
imul
push
cs
inc
jnp
ds
add
pop
pop
mov
push
js
and
add
cld
nop
inc
sbb
lods
sbb
add
popa
mov
cmp
fdivrs
outsl
adc
movsl
addb
jno
into
incl
and
and
outsb
and
push
data16
mov
sub
jae
jb
mov
pop
je
in
dec
cmpsl
and
add
xor
lock
cmp
mov
adc
push
jne
inc
das
rolb
cli
test
sub
pop
mov
sub
inc
mov
push
xchg
push
xor
or
jnp
mov
int
xchg
adc
sbb
ja
lea
sbb
mov
loope
add
add
cwtl
push
xor
push
mov
lods
pusha
cmpl
rcll
sahf
jmp
jns
mov
jae
push
or
je
adc
ljmp
sbb
xor
jae
lock
adc
mov
nop
stos
cmp
dec
aad
enter
dec
xor
push
xor
sub
icebp
cmp
xor
push
clc
sbb
les
lcall
mov
lods
pop
pop
mov
or
cmp
test
aam
cmpl
pop
jle
mov
pop
ds
movsb
dec
shrb
fdivr
ficoms
popf
imul
lock
divl
aad
rclb
rclb
adc
lods
dec
mov
mov
sub
pop
inc
popa
aam
pop
dec
sbb
sub
mov
stos
adc
jp
xchg
push
cwtl
push
push
in
jge
clc
add
in
cmp
shlb
mov
xor
mov
or
dec
orb
sub
loop
mov
cli
xor
push
enter
add
push
cmp
mov
je
pop
xor
enter
popf
add
cwtl
or
orb
popa
xor
ss
sub
call
xor
jmp
ds
jmp
mov
aam
pusha
add
xchg
mov
pusha
mov
jecxz
push
repnz
xchg
push
xor
das
into
xor
je
pusha
pusha
mov
add
cmp
mov
popa
xor
cmp
lods
pop
jge
jne
sar
add
xor
and
jl
jmp
cmp
or
pop
jecxz
mov
ja
mov
rcll
jle
addl
ds
mov
cld
xor
pusha
push
sbb
imul
scas
or
clc
popf
pop
adc
lods
mov
or
ret
adc
mov
lret
ret
cmp
es
mov
enter
std
pop
pusha
add
addr16
jb
push
std
ds
ljmp
pusha
aas
xor
adc
loopne
test
xchg
hlt
inc
xor
rorb
sub
xchg
xchg
aam
loopne
shlb
loopne
daa
out
inc
mov
dec
inc
dec
outsb
adc
add
test
ret
mov
jbe
push
and
push
fcomps
xor
push
loopne
lock
cmpb
xchg
in
and
jnp
mov
stos
enter
add
inc
jl
jb
bound
xchg
dec
mov
or
xor
dec
pop
pusha
push
rorb
cmp
or
mov
rolb
ficoml
cmp
jbe
subl
jbe
add
pop
or
and
add
mov
ja
add
xchg
cmp
cld
sti
mov
push
rcr
jle
adc
outsb
pop
and
xchg
sbb
adc
lock
fnstcw
inc
xchg
scas
mov
loope
mov
push
mov
mov
sbb
inc
pusha
ret
push
sub
mov
je
mov
out
mov
and
dec
lock
and
mov
xor
adc
scas
add
pusha
pop
adc
adc
jge
xor
mov
sub
inc
dec
and
push
xor
cmp
xchg
or
cs
pusha
push
xchg
cli
lods
xor
dec
dec
and
cmpsb
jl
bound
add
push
pushf
adc
clc
loop
adc
in
add
dec
inc
scas
movsl
inc
adc
popl
in
das
ds
push
shll
imul
ror
mov
push
dec
jl
jns
or
and
cmpsb
xor
pop
pusha
add
inc
nop
scas
xor
js
or
imul
pusha
xor
adc
and
dec
rcrb
dec
enter
pusha
loopne
repz
lret
pusha
lock
and
dec
cli
test
or
mov
call
loopne
adc
push
inc
fisttpl
xor
or
subb
xlat
push
mov
mov
dec
gs
xor
inc
pusha
filds
and
push
jo
fmull
push
mov
adc
dec
mov
bound
dec
add
ja
test
jl
mov
test
mov
andl
roll
mov
pusha
add
push
xor
out
or
add
sub
cli
dec
cmp
jae
cltd
adc
cs
dec
loopne
push
dec
inc
in
dec
and
dec
shl
dec
in
call
lock
out
xor
enter
pop
shl
inc
inc
stos
bndldx
add
mov
enter
or
lock
fstps
or
xlat
xchg
and
or
fcmovnbe
je
lret
xor
pusha
add
test
xchg
enter
call
cmc
pop
add
and
ja
xchg
test
sti
adc
pusha
rcrb
cli
mov
pusha
cmp
push
push
mov
outsl
cmp
dec
add
mov
jmp
pop
jle
lahf
adc
cld
leave
lock
pusha
mov
stos
adc
push
outsl
cmp
sub
xor
in
out
sub
jle
adc
pop
mov
mov
xor
mov
andl
addr16
add
mov
pusha
or
mov
jl
out
shll
scas
sahf
inc
add
inc
cmp
pop
add
and
jl
or
sbb
mov
cmpl
insb
lahf
mov
xchg
adc
push
popl
pushf
adc
ds
lods
pushf
cld
call
out
adc
dec
popf
and
loopne
push
fwait
test
ret
lret
lcall
push
and
and
mov
xchg
dec
sbb
loope
jp
adc
mov
pop
add
and
lea
dec
or
dec
jl
or
dec
lock
and
pushf
inc
dec
roll
les
adc
cmp
or
lock
inc
inc
pushf
or
andb
or
add
fildl
sbb
cmp
pop
and
out
dec
popl
xlat
mov
sbb
add
push
adc
add
test
dec
clc
cmpsl
xor
dec
imul
fistps
andl
dec
ds
add
sbb
dec
pop
stc
pop
xchg
pusha
xchg
nop
and
and
aaa
jns
xor
mov
in
dec
rcrb
xor
mov
loopne
adc
mov
and
jne
push
loopne
adc
jl
jl
lods
jle
rolb
mov
fdivs
scas
mov
pusha
or
xor
pop
pop
add
nopl
loopne
or
addl
mov
sbb
loopne
shrb
popa
inc
stos
dec
inc
lret
iret
sub
add
mov
or
add
xchg
mov
insb
cld
pop
ficoms
add
cmp
jl
cmpsl
cmp
xchg
push
lock
testb
pop
xor
imul
mov
nop
les
cmp
dec
loope
inc
insb
lea
dec
scas
or
dec
lock
dec
fucomi
xchg
xchg
xorl
and
ret
mov
or
roll
and
repz
out
andb
popl
and
adc
sub
rclb
inc
inc
je
stc
xor
mov
and
lock
add
add
fidivrs
cmp
enter
rol
xchg
sbb
jp
scas
cmpsl
push
lock
cli
in
xchg
inc
add
cmpsb
popa
popa
jns
rorb
pop
sarl
insl
adc
bound
dec
xorl
ljmp
adc
cmp
add
popf
ds
and
and
pop
adc
sub
shrb
stos
les
movsb
jl
sbb
xor
lret
and
adc
bound
rorb
push
mov
lock
mov
popl
dec
cmp
xor
std
test
ds
in
xor
mov
mov
adcl
sbbb
pushf
imul
fwait
popa
xor
sti
pop
js
test
dec
loopne
arpl
and
adcl
addb
repnz
insb
mov
shlb
notb
stos
sarb
mov
and
mov
or
rorb
and
dec
mov
add
xchg
jno
popa
js
aam
stc
cld
aas
adc
lock
orl
rcrb
leave
addl
loope
mov
add
or
int
inc
and
cmp
add
ret
jb
mov
sbb
inc
test
jb
sub
mov
and
mov
shl
cmp
jmp
movsb
mov
shll
pop
adc
leave
adc
push
cmpsl
cmp
xchg
xchg
imul
push
movsb
and
jl
pop
iret
fadds
sarl
cmp
push
mov
sbb
or
mov
popl
fs
push
jnp
jnp
dec
rorb
push
and
dec
rcl
aaa
jmp
negl
mov
adc
inc
popa
bound
dec
mov
pusha
add
sbb
mov
sub
mov
mov
add
and
mov
add
xor
mov
fwait
ret
stos
scas
and
loopne
insl
jg
scas
loope
mov
scas
push
pusha
jecxz
mov
orb
sbb
xor
sbbl
add
add
mov
cmp
adc
ret
jl
lret
fisttps
jo
adc
ds
pop
mov
mov
mov
iret
adc
pop
add
addb
outsb
loope
or
inc
int3
mov
loopne
jl
sbb
loopne
pusha
mov
mov
mov
out
lods
pop
push
mov
sub
lods
shl
aas
inc
jo
lods
push
pusha
add
cmpb
add
sub
shrb
stc
mov
mov
adc
push
and
in
inc
cmp
in
popa
lds
pusha
add
lods
jp
add
jnp
or
pop
in
je
push
push
andl
mov
cs
fwait
cmp
test
add
rolb
addb
jbe
repz
xor
mov
add
aaa
test
std
and
jl
or
mov
and
mov
stos
add
stos
in
outsl
add
lods
jl
adc
fsubl
subb
push
add
adc
mov
add
dec
popf
idiv
dec
sub
loopne
sbb
stos
adc
dec
loopne
add
push
mull
outsb
mov
loopne
icebp
push
pop
pusha
fdivr
pusha
xor
lret
xor
mov
hlt
push
incb
sub
ljmp
loopne
jnp
xchg
inc
push
clc
popl
adc
mov
rcr
and
dec
cli
clc
popl
xor
out
and
pop
insl
xor
punpcklbw
jp
stos
mov
andl
icebp
dec
stc
pusha
fdivrs
mov
pusha
cmp
dec
inc
inc
clc
pusha
and
push
push
pop
and
mov
icebp
pop
or
inc
ds
adc
stc
xchg
les
inc
add
scas
rolb
out
jno
jbe
fisubs
cmc
mov
sbb
cmc
sbb
imulb
popl
pop
dec
inc
clc
mov
push
inc
popl
inc
adcb
add
loope
mov
inc
add
test
das
lock
mov
jae
mov
mov
addb
cld
lret
or
add
xchg
ret
icebp
inc
cmp
imul
mov
ret
xchg
adc
mov
aad
fs
in
pusha
lock
sbb
addl
movsb
into
add
test
movsl
mov
fadd
insl
and
fldenv
fs
loopne
pop
fdivl
pusha
push
shlb
lods
pusha
cmpl
lret
pop
push
test
in
pusha
add
mov
stc
add
jecxz
outsb
mov
pop
push
movsl
xor
inc
int
popa
sub
push
int3
pop
push
sub
popa
sub
push
mov
pusha
jb
xor
sub
rcrl
ljmp
mov
sbb
fxch
xor
icebp
hlt
pusha
cmp
jne
sub
add
jle
shl
and
imul
xchg
test
mov
mov
mov
out
pop
fbld
lea
or
popf
jno
xor
inc
mov
sub
hlt
jl
or
pushf
or
mov
jne
andb
popl
and
ds
add
mov
test
sbb
inc
xchg
insb
mov
xor
out
bts
cltd
push
add
mov
out
je
paddq
sahf
add
jg
notb
add
andnps
test
sbb
popl
and
sub
push
mov
data16
cltd
fstl
popa
and
aas
out
loope
test
add
xchg
pop
pop
cmp
add
sti
rorb
inc
inc
sarl
inc
test
adc
fcmovnb
adc
xchg
gs
sbb
or
and
adc
pop
jo
inc
out
movb
leave
popf
mov
xchg
and
dec
loopne
arpl
xchg
std
mov
rorl
dec
xor
xor
aas
mov
cmpsb
mov
rol
adc
mov
mov
adc
out
xor
add
mov
add
push
ljmp
outsb
inc
mov
pop
adcb
and
or
dec
dec
sbb
prefetch
or
push
pop
je
xor
lock
push
imul
int
cli
jl
and
decl
test
add
jb
jae
xchg
bound
and
rcll
testl
cli
mov
mov
out
hlt
repz
inc
push
sahf
in
sub
add
aaa
imul
add
arpl
pop
popf
push
pop
jae
and
enter
push
lods
sbb
pop
addb
sarl
in
cltd
dec
sbb
int3
mov
or
pop
sub
fcoms
xchg
rcrb
imul
cmp
sbb
xor
imul
nop
add
out
push
pop
mov
fdivrs
jnp
pop
pusha
lods
inc
lret
shll
mov
ret
icebp
pop
mov
lcall
and
inc
in
add
pop
call
add
cmp
out
inc
je
sbb
inc
cli
cmp
add
pop
in
loope
test
arpl
cmp
js
jnp
pop
insb
test
inc
or
test
popa
adc
bound
add
xchg
push
sbb
or
and
inc
repz
mov
add
xchg
call
daa
lcall
and
nop
test
es
mov
mov
mov
jns
xor
ret
adc
lock
addr16
stos
iret
push
inc
add
inc
xlat
sbb
add
adc
xchg
dec
rolb
sub
out
and
dec
fmuls
or
rcll
jle
add
rcrb
loopne
add
icebp
jp
cmp
push
add
loopne
jno
pop
dec
out
and
dec
cmc
push
fistpll
jmp
clc
stos
jo
sub
xchg
fs
dec
test
idivb
js
sbbb
cmp
daa
push
xor
add
dec
cmpl
jle
sbb
in
subb
push
adc
jae
nop
aam
add
and
add
sub
fcmovnbe
addr16
add
test
out
mov
add
mov
idivl
lds
jne
add
pusha
sub
int3
popa
sbb
mov
or
add
out
inc
rclb
addr16
sub
bound
add
pusha
cltd
xlat
push
add
sbb
call
movsb
mov
pop
pushf
ja
jl
and
jb
stos
int3
arpl
insb
and
addr16
and
push
add
dec
jge
add
subb
lods
cld
fstps
lret
idivb
rol
or
pop
sbb
xor
nop
add
pushf
xchg
xchg
adc
hlt
xchg
jbe
add
out
lods
iret
outsb
pop
mov
add
dec
xor
loope
xor
pushf
test
rcrb
or
add
xor
pusha
push
or
jns
mov
lret
pop
mov
push
add
cmp
add
push
add
fnsave
adc
pusha
call
mov
push
loope
and
add
sbb
mov
xor
sbb
add
xorb
add
test
sarb
pop
ljmp
push
fsubr
jle
add
ds
inc
adc
popf
add
sub
mov
outsb
insl
bound
pop
ret
loop
sbb
pop
mov
sarb
sbb
jo
inc
dec
or
adc
rorb
insb
das
pop
push
dec
mov
pop
inc
xchg
mov
bound
out
test
add
test
jae
mov
lods
jle
add
dec
xchg
stos
add
in
roll
add
std
bswap
jo
and
dec
mov
inc
pop
in
xchg
aas
jnp
add
in
sbb
cli
add
xchg
ds
add
out
inc
push
push
jg
mov
lods
lcall
xchg
push
add
out
sub
jbe
dec
add
fildll
leave
ret
push
push
in
mov
jg
ret
pop
and
cli
rolb
sub
push
cmpsb
mov
nop
add
movsb
test
stos
or
adc
leave
lea
fbstp
add
mov
mov
leave
xor
add
shll
jbe
lcall
mov
jo
or
jl
cltd
out
je
insb
aam
pop
add
pop
add
add
pop
mov
push
fnstcw
add
sub
add
inc
sahf
sub
lock
imul
pusha
sti
push
cmp
xchg
mov
add
imul
cwtl
test
aam
test
div
mov
mov
push
fmulp
add
sub
mov
push
jmp
test
mov
fisttpll
lea
mov
in
pusha
pop
pop
add
inc
cs
xor
cmp
add
orl
ja
or
add
adc
jbe
movq
pusha
inc
jnp
cmp
push
movsb
jns
loope
cmp
xor
add
pusha
in
push
in
fdiv
xchg
add
sub
inc
insb
add
imul
inc
sbb
sbb
add
subl
mov
mov
inc
xlat
mov
xor
les
loope
test
adc
mov
jg
inc
scas
sti
daa
mov
add
jb
mov
inc
jp
js
pop
stc
int3
pop
or
sarb
or
mov
lods
out
sub
roll
mov
movsb
xor
add
lock
fwait
pop
loope
dec
add
or
push
mov
add
cli
mov
jbe
pop
les
rclb
and
testb
popf
cmp
cmp
pop
mov
aam
jecxz
js
pop
sub
repz
push
pop
fists
add
or
pop
out
popf
in
dec
push
mov
xlat
push
lds
cmpl
cwtl
movsb
and
out
shlb
leave
data16
xlat
lods
cli
xchg
adc
add
pop
fdivrs
mov
xchg
leave
xchg
dec
loop
sbb
pop
js
or
and
add
enter
adc
imul
jmp
rcrl
fdivrl
dec
adc
xor
test
add
mov
pop
mov
inc
push
jb
jo
adcb
jnp
inc
and
mov
mov
fstpl
lcall
xor
cltd
add
ljmp
je
pushl
jecxz
imul
pop
add
mov
sarl
je
gs
pop
dec
add
ret
add
inc
push
adc
scas
add
dec
mov
arpl
lods
in
rcrl
add
mov
mov
popa
mov
aam
mov
or
orb
add
ljmp
add
lds
nop
fdivr
sub
jge
sbb
push
clc
out
adc
adc
nop
into
push
mov
cs
xchg
aad
mov
xchg
pop
ret
or
mov
neg
inc
lea
out
rcrl
divb
movb
repnz
lods
ds
or
inc
mov
mov
sub
add
test
cwtl
jae
inc
mov
out
jp
pusha
mov
jl,pt
push
mov
nop
and
popf
mov
mov
add
add
mov
lcall
dec
mov
xchg
fsubr
and
addb
daa
insl
adc
pop
push
sarl
cmp
mov
xchg
pop
inc
out
jns
rolb
adc
rol
jl
stc
push
add
ljmp
add
pop
dec
es
repz
stos
add
lret
xor
int3
xor
iret
aad
rclb
fcmovnu
xor
decl
pusha
aas
ret
sbb
mov
andl
scas
cwtl
inc
cmp
jo
stos
jecxz
xchg
add
pop
push
pop
les
js
push
loopne
jmp
mov
pop
divl
lret
lret
add
ret
pop
mov
test
dec
faddl
cmp
mov
mov
cmc
je
ja
push
dec
mov
add
mov
push
jmp
mov
inc
pop
add
mov
mov
inc
jl
add
pop
mov
fwait
les
jg
into
mov
and
adc
or
ss
nop
in
xchg
mov
loopne
cmp
sub
add
mov
push
cs
les
add
loop
arpl
in
pop
and
add
imul
mov
enter
adc
out
xlat
add
jbe
cmc
jmp
sbb
dec
fwait
lahf
loop
in
in
push
in
nop
add
imul
dec
push
leavew
add
lret
add
xor
cmpsl
or
jo
cmpb
arpl
add
mov
call
popa
xchg
or
add
mov
notl
add
lods
mov
out
nop
jmp
xchg
ljmp
adc
enter
leave
mov
add
jns
fldl
pop
aas
repz
stos
inc
xor
cmp
insb
lcall
push
int3
repnz
icebp
push
imul
dec
mov
add
inc
sbb
lahf
sub
clc
sub
or
bound
push
cmp
out
pop
add
and
sub
add
in
outsl
mov
imul
add
inc
decb
push
add
dec
enter
adc
popf
filds
fldcw
cli
add
lcall
es
add
ret
ds
xchg
mov
adc
out
cmpsb
mov
or
push
insl
lock
shrl
mov
out
push
mov
into
push
rorb
and
inc
add
push
movb
cld
test
in
add
test
add
and
dec
sbb
rclb
negb
lahf
js
cmp
mov
into
jmp
lret
hlt
inc
add
cmpsb
adc
mov
outsl
cmc
mov
fildl
jb
stos
push
lret
or
pop
mov
movsb
sub
push
pop
add
jnp
inc
add
js
adc
sub
adc
addl
add
pop
add
xchg
lods
pusha
xor
ss
sbbb
push
in
inc
mov
and
cmp
mov
add
scas
repnz
pusha
push
test
cmp
and
inc
xlat
popf
insb
in
bound
add
fst
mov
cmpsl
add
jno
loopne
mov
repnz
pop
stos
mov
lods
pop
add
mov
icebp
cmp
xchg
pushf
jns
push
aam
mov
stc
mov
add
out
popf
push
pop
ds
loope
addb
insb
and
cli
mov
mov
mov
mov
clc
and
xchg
pop
add
fwait
sbbb
ljmp
icebp
dec
clc
ja
lock
jge
repz
xchg
add
push
je
or
jae
add
jp
cld
add
pop
int3
jl
aaa
sti
sbb
jnp
cmpsb
cmp
dec
iret
sbb
shlb
loop
mov
sti
mov
loope
mov
sbb
xchg
or
and
hlt
pcmpeqd
pusha
sub
adc
imul
mov
int
pushf
jl
mov
cmp
das
add
iret
stos
cmp
cwtl
aas
int3
push
rorl
scas
add
jb
es
call
or
cs
call
pop
pop
jg
mov
icebp
mov
mov
push
mov
adc
or
fsubrs
dec
add
mov
in
insl
roll
xchg
mov
adc
jmp
mov
jge
nop
xchg
push
ss
xchg
enter
leave
add
jmp
push
or
jo
loope
pop
icebp
in
and
inc
add
mov
push
push
add
pop
inc
pop
dec
pop
cmp
xchg
add
and
pop
inc
mov
fmuls
std
add
adc
xchg
mov
xorb
xchg
sub
push
clc
add
stos
pusha
out
and
add
clc
lahf
mov
mov
not
fdivrl
add
nop
dec
test
hlt
push
fwait
dec
lcall
adcb
in
mov
fsts
icebp
mov
add
in
ror
adc
jo
test
adc
xor
add
iret
mov
dec
mov
fiadds
xor
adc
into
add
and
loop
inc
cs
sub
in
pop
inc
push
jns
mov
add
dec
adc
sub
xor
xor
ucomiss
icebp
mov
scas
dec
fnstenv
add
lea
roll
sub
icebp
cmpsl
sbb
xor
add
cli
imul
pushf
ret
pop
jp
add
nop
lds
fsub
jo
daa
and
mov
les
add
enter
cmp
cmpsl
jmp
sbb
stc
jo
scas
push
loope
push
loopne
sub
jns
xchg
sbb
mov
xchg
jb
xor
and
adc
add
cld
mov
out
std
lret
mov
pushf
jno
lock
and
pop
push
and
outsb
inc
add
repz
add
out
popa
sbb
rdpmc
call
cmp
xor
cmp
adc
lahf
mov
pop
packssdw
mov
out
adc
push
xor
leave
cwtl
pop
dec
adc
sarl
xor
scas
push
push
inc
xor
pop
ds
cmp
jae
inc
mov
and
repnz
clc
xor
mov
test
fs
popa
dec
sub
cmp
mov
add
pop
xor
fcoms
cltd
inc
cmpsl
and
inc
test
shlb
and
sbb
adc
xchg
into
add
les
and
add
and
mov
mov
inc
cltd
sbb
xchg
and
jg
jo
mov
jecxz
lods
mov
mov
lds
adc
xor
mov
mov
outsb
lcall
js
bound
pop
pop
sbb
add
cltd
fwait
pop
jb
enter
idiv
std
push
push
pushf
and
pop
jnp
lea
pusha
pop
adc
sbbb
jecxz
add
fisttpll
adc
jnp
add
cmp
add
out
sqrtps
test
aas
push
movl
popa
cmp
int3
add
outsl
test
cmp
or
sub
sarl
add
add
jmp
cs
add
jb
push
mov
adc
lret
inc
cmpsb
andb
pop
add
add
clc
mov
repz
add
cmp
es
pop
outsb
mov
addl
xor
push
cs
jb
js
xor
dec
cltd
shl
add
pop
pop
pushf
push
dec
jnp
add
dec
mov
js
add
outsb
jge
out
inc
inc
in
mov
xorb
cmpsb
and
pop
push
mov
mov
std
jno
lds
xchg
mov
call
and
push
pusha
outsb
xor
out
sub
and
cltd
adc
pop
push
cmp
dec
inc
inc
xorb
xchg
sahf
clc
pusha
add
leave
push
subb
in
inc
cmp
mov
cmp
lods
int
scas
fwait
dec
jecxz
mov
xor
cwtl
or
add
add
test
add
mov
push
jnp
or
cmp
scas
sbb
xchg
idivb
fiadds
dec
add
in
sti
add
lock
add
or
lret
aam
mov
addr16
add
into
inc
mov
mov
int
lahf
mov
and
add
pop
cmpsl
outsb
push
aas
lock
push
lods
stos
mov
xchg
rolb
fwait
cmp
jae
roll
cwtl
add
iret
jnp
add
les
sub
cltd
add
std
and
jo
adc
xchg
push
mull
push
push
add
lods
adc
in
pop
inc
sub
push
push
cld
cmp
mov
mov
movsb
hlt
std
add
fldt
fwait
inc
inc
mov
xchg
cli
stos
lods
inc
add
mov
and
jns
rolb
lret
cwtl
push
add
lds
mov
cmp
push
add
xchg
xorb
mov
mov
in
dec
and
add
lret
dec
test
pop
add
inc
mov
mov
fwait
data16
insb
cmp
push
xchg
movsl
dec
mov
repnz
std
inc
andb
hlt
add
pop
into
add
fcompl
es
icebp
xor
mov
imul
xchg
xchg
add
pop
and
and
js
fistpll
add
in
sub
or
mov
imul
dec
shr
rclb
mov
add
dec
or
add
inc
rorb
and
fadd
mov
or
or
leave
mov
add
clc
mov
add
in
ljmp
push
test
pop
dec
lock
andb
pop
cmpb
cmpsl
add
and
movsb
add
pushf
je
push
xchg
adc
movsl
ja
add
mov
cltd
push
adc
cmp
mov
and
inc
movsl
and
add
sub
sbb
push
fsubs
cmp
sub
and
aam
add
add
ret
nop
cmp
add
cmp
and
add
repnz
popa
push
cmp
mov
jl
add
push
punpckldq
outsl
sahf
and
push
insl
xor
ljmp
inc
or
and
in
mov
sbb
adc
pop
cmp
jae
jo
add
adc
jne
add
push
mov
jno
movsl
mov
cmc
or
js
roll
popa
gs
sub
mov
ret
sub
dec
shll
jg
or
add
lret
jns
sbb
mov
aaa
mov
cmp
add
movb
push
inc
filds
mov
stos
std
es
fsubl
fs
repnz
cmp
sub
mov
or
aad
adc
fisubs
cltd
pusha
inc
pushf
enter
add
mov
into
cmpb
xchg
in
lock
shll
dec
icebp
data16
divl
add
or
xchg
ret
and
lcall
in
movsb
or
push
pop
scas
imul
and
inc
int3
sub
add
loop
aam
ljmp
mov
jecxz
dec
jb
push
addb
sub
adc
adc
pop
pop
aas
out
aam
out
in
and
lret
hlt
mov
int3
mov
sub
or
push
and
hlt
pop
add
jg,pn
stos
ret
pop
fimull
inc
sbb
cs
int3
loope
hlt
cmpb
jo
add
xchg
inc
sbb
popl
cmp
jbe
nop
std
pushf
xor
jno
in
out
pop
movsb
xor
mov
add
outsb
sub
cmp
inc
add
nop
pusha
inc
cmp
or
mov
scas
and
jo
dec
sub
rolb
xor
arpl
add
dec
inc
dec
mov
js
and
arpl
cwtl
jo
aas
mov
icebp
cld
dec
mov
lods
popa
iret
and
int3
xor
add
add
mov
xor
mov
push
data16
sub
mov
cmp
jge
je
cld
dec
xor
test
in
cltd
add
into
iret
stos
sub
scas
call
cmpsl
cld
jl
lods
push
push
fldl
je
push
mov
das
lcall
add
ret
mov
rorl
add
cmp
xor
orb
jne
jo
fisubs
inc
mov
out
push
imul
add
or
fadds
dec
ret
mov
push
pop
ret
adcb
loopne
jp
in
sahf
movsl
mov
jl
jns
pop
add
jg
out
adc
rorb
lcall
or
aam
and
loop
add
arpl
pusha
in
xchg
add
rclb
sbb
adc
in
and
mov
push
sbb
xchg
aaa
cmc
sbb
pop
add
sub
sub
mov
bound
xlat
mov
aam
mov
xor
add
jno
lock
pop
add
call
shl
dec
add
dec
add
mov
insl
dec
jne
add
sahf
subb
pop
push
imul
in
je
xor
mov
cmp
ret
adc
les
cmp
add
cmc
ljmp
add
cmp
insl
cmpsl
inc
call
xchg
int3
aad
icebp
in
je
cmp
add
fdiv
data16
mov
mov
pushf
mov
shrb
jmp
adc
div
stos
adcl
jo
push
dec
hlt
dec
shlb
pusha
xchg
movsl
imul
ja
mov
fsubrs
xchg
cwtl
push
sbb
mov
hlt
jecxz
and
or
clc
call
jnp
jmp
push
mov
popa
bsr
xchg
and
cli
dec
add
or
mov
fwait
outsb
arpl
les
shrb
stos
lret
add
addr16
clc
in
add
cmp
enter
rolb
dec
mov
bnd
inc
and
nop
adc
loopne
addb
cmp
rorl
mov
inc
rorb
xor
inc
dec
mul
add
sti
ja
test
xchg
movsb
and
scas
jl
mov
inc
pop
js
mov
push
push
pop
mov
adc
add
andb
xor
add
test
stos
add
pop
js
mov
data16
push
lock
lods
loope
cs
enter
add
mov
js
add
jle
jo
pop
pusha
adc
call
push
inc
push
fs
add
scas
repnz
loope
pop
jo
sahf
pop
jns
pop
adc
into
jge
adc
call
sti
xor
sub
lods
jae
mov
mov
cmp
or
mov
shl
ja
cwtl
add
data16
jne
hlt
pusha
incb
out
mov
push
add
scas
fisttpl
xchg
enter
push
jg
sbb
xor
cltd
bound
pop
cmp
adc
ficoms
sbb
pop
push
mov
add
and
push
sub
ds
scas
sbb
or
imul
std
add
addr16
popf
in
pop
mov
lock
dec
mull
mov
xchg
sahf
adc
imul
mov
js
push
lcall
cmp
out
rcr
jo
and
je
sub
push
int
out
push
push
adc
add
jns
rcr
add
pop
and
frstor
jbe
add
cmp
fimuls
in
cwtl
mov
icebp
jo
jmp
test
xorb
mov
fs
push
pushf
popa
jg
add
mov
add
mov
mov
sub
popa
add
arpl
cmpsb
mov
mov
sub
pop
pop
add
ss
subl
lea
or
mov
pushf
adc
xor
add
jnp
sbb
dec
rcr
or
pusha
cmpb
pop
aaa
lahf
and
mov
je
add
mov
mov
adc
add
adc
xor
xor
rcrb
pushf
xchg
pop
push
int3
ret
jle
in
add
fcmove
rcl
roll
sbb
sbb
cld
xor
xchg
add
imul
lea
mov
movsl
push
cmpsl
add
sub
add
adc
sti
xor
iret
add
in
sub
push
in
scas
sbb
cltd
js
sbb
mov
pop
add
mov
pusha
add
outsl
sbb
xor
jle
les
xchg
into
and
rorl
add
rcll
mov
add
lock
inc
add
loope
mov
add
sbb
sbb
shl
je
add
pop
ljmp
in
int3
sub
fistps
movl
cmp
test
dec
mov
out
fisubrs
jo
in
or
lds
fs
in
and
jmp
inc
clc
add
jge
sbb
cmc
jo
in
test
add
repz
xchg
or
inc
pushf
adc
cmpsl
sti
popa
pop
pop
push
leave
jecxz
shlb
test
and
pop
or
inc
jecxz
mov
add
fisttpl
push
mov
and
mov
sbb
test
xchg
push
popf
cmp
add
push
dec
add
jp
roll
orb
push
jl
test
dec
pusha
push
jo
shl
lods
je
ds
or
mov
fidivl
lock
add
xchg
add
jle
adc
or
test
inc
cmpsl
rcll
xor
push
add
loopne
pop
pusha
js
inc
sti
je
xor
jne
test
dec
in
and
pop
sub
add
test
jnp
bound
jp
rcll
movsb
out
mov
popl
mov
dec
aas
jl
mov
push
frstor
rol
mov
es
adc
lcall
repnz
ja
cmpb
cmc
push
int
jns
loopne
fimull
xchg
lods
push
add
inc
pushf
sbb
pop
inc
fdiv
and
in
mov
mov
push
test
jp
cmp
sbb
mov
bound
push
nop
sub
adc
inc
inc
clc
imul
mov
mov
jbe
lock
sub
add
mov
jno
inc
add
clc
or
test
popf
inc
shrb
push
loope
scas
adc
mov
push
cwtl
orb
rorb
sbb
adc
xorl
or
mov
testb
orb
and
addr16
loope
jb
pushf
push
in
arpl
aaa
mov
inc
xchg
or
rcr
test
in
add
adc
add
adc
xchg
and
sarb
repnz
add
add
mov
cwtl
inc
sbb
xor
pop
xchg
mov
push
filds
add
inc
pop
sbb
mov
aad
xchg
outsl
push
jb
insl
nop
iret
fcomp
cwtl
add
rcll
adc
daa
inc
movsb
repnz
out
int3
repz
push
and
inc
adc
jo
cmp
push
and
inc
cmp
mov
mov
pop
fwait
mov
lret
stc
add
scas
mov
and
pusha
and
cmc
add
jo
fidivs
repnz
push
and
sbb
sbb
negb
mov
jno
adc
push
push
in
adc
sahf
and
dec
in
push
negl
fidivl
pop
inc
or
adc
ret
add
es
mov
jge
dec
fs
test
xor
adc
dec
js
dec
les
mov
cld
jne
cltd
daa
enter
idiv
inc
fs
xchg
adcl
push
jl
push
imul
sbb
inc
mov
cmp
cwtl
sbb
and
orb
repnz
add
testb
and
push
or
loopne
icebp
pop
adc
incl
mov
and
fistpll
jo
pop
and
push
adc
sub
outsb
cmpsb
lcall
xor
push
sbb
sbb
jmp
shr
or
inc
repnz
je
add
push
and
jg
sbb
add
pop
je
shlb
xor
push
add
dec
dec
xchg
jo
lret
js
xchg
add
inc
adc
pop
push
and
es
or
xchg
addb
pusha
test
mov
clc
add
dec
add
ret
mov
xor
jge
cmpsl
inc
fsubr
fsubrs
daa
add
pop
inc
outsb
bound
or
xchg
and
cmp
lods
cmp
lcall
popf
mov
aas
push
and
out
call
or
out
pop
jl
sbb
mov
pusha
sbb
add
inc
jp
in
test
adc
xchg
fidivrl
stos
shlb
sbb
aad
inc
jo
js
fs
push
mov
inc
mov
push
inc
sar
adc
cmc
mov
cwtl
jp
adc
cs
enter
add
jecxz
sbb
mov
or
mov
pop
and
test
lea
sub
xchg
outsl
add
cwtl
sbb
xchg
nop
aam
hlt
or
xchg
jo
test
je
cltd
inc
cmp
inc
stos
add
dec
xchg
hlt
jnp
cwtl
jb
add
mov
add
mov
enter
es
mov
fwait
sarb
sahf
mov
rcrl
add
xchg
or
pop
and
xor
std
testb
mov
sub
push
adc
bound
adc
mov
addr16
cmpsl
pusha
imul
cli
push
sub
mov
inc
loop
data16
add
test
stc
sbb
test
loopne
js
cwtl
mov
popa
ds
mov
push
push
push
or
mov
sbb
xchg
push
lret
cwtl
cltd
in
xorb
mov
arpl
movsb
dec
fstp
and
and
sbb
mov
lock
mov
lods
pop
int3
in
adc
adc
inc
arpl
add
jp
pop
sub
lods
jle
sbb
mov
shlb
dec
shl
add
mov
loopne
adc
aad
sub
pop
lret
aaa
lods
clc
inc
inc
sahf
sbb
pop
arpl
or
cmp
cld
add
mov
push
mov
cmp
adc
sub
aas
dec
dec
add
xchg
out
mov
movsl
subb
aas
jae
sbbl
fsubrs
addr16
push
lds
add
jecxz
clc
sub
sub
out
int3
ja
test
popa
rcr
test
xchg
xor
push
out
mov
dec
inc
cwtl
lock
adc
int3
jns
mov
mov
sbb
inc
arpl
push
cmp
push
xchg
or
adc
pop
mov
mov
addb
xchg
add
dec
mov
sbb
ret
xchg
test
icebp
insl
jne
add
je
adc
mov
pop
adc
rcll
xorb
mov
and
and
pop
xor
leave
dec
out
pop
gs
xchg
adc
nop
test
mov
or
out
xchg
jp
and
add
icebp
and
inc
aaa
mov
or
in
push
or
int3
xchg
pop
test
push
sti
inc
mov
add
test
in
jl
and
mov
xor
inc
pop
call
lret
je
aaa
add
xor
mov
sub
sub
add
jbe
dec
arpl
aaa
add
pop
mov
std
jno
adc
hlt
push
and
pop
cmp
inc
in
cmp
pextrw
add
dec
xor
cmc
xor
dec
cmp
dec
xchg
leave
stos
dec
fnsave
sbb
push
cmp
cmp
inc
mov
frstor
mov
add
dec
mov
rorb
cld
or
les
es
mov
sub
xlat
loope
cmp
inc
movsb
and
les
adc
ja
pop
xchg
pop
outsl
arpl
cld
pop
push
mov
inc
sub
add
dec
add
sbb
mov
rclb
bound
test
cmp
xlat
cld
push
or
gs
cmp
int3
mov
add
andb
enter
or
add
mov
dec
inc
xchg
cwtl
cwtl
mov
sbbb
push
dec
push
imul
jo
push
repz
int3
stc
or
or
push
enter
add
outsl
pop
gs
mov
ficoml
mov
enter
data16
or
push
push
xlat
mov
dec
lahf
pop
add
jmp
add
add
lds
or
dec
and
push
xchg
fisubl
mov
xchg
pop
rorb
add
dec
xlat
cmp
push
data16
cmp
stos
in
pop
jnp
mov
mov
mov
or
xchg
lret
pop
push
dec
outsl
mov
popf
gs
add
push
push
shrl
push
jmp
popf
test
clc
orb
mov
loopne
or
xchg
aas
pop
lods
xchg
or
adc
loopne
movd
sub
xor
movsl
in
jl
ficompl
xor
pcmpgtb
inc
insl
jbe
pop
rorb
xchg
xor
cmp
pushf
add
xor
cmpsl
mov
mul
jg
add
sti
or
lea
shlb
mov
sub
sbb
sub
and
sbb
adc
fldcw
xchg
inc
pusha
leave
push
in
add
into
dec
add
rorb
loop
popa
xchg
mov
mov
test
sub
mov
mov
inc
lods
std
mov
jge
add
jne
push
inc
or
scas
xchg
stc
mov
sahf
add
pop
or
mov
jno
add
or
mov
int3
lock
or
repz
jl
pop
lcall
bound
sti
mov
sbb
outsl
cmp
lods
and
pusha
mov
pop
pop
dec
call
bound
add
inc
mov
mov
xchg
mov
inc
daa
cmp
jne
pop
push
jg
mov
sbb
roll
push
leave
sbb
std
cmp
push
add
or
arpl
add
jg
jp
cli
pop
add
jbe
jb
or
adc
outsl
xor
sbb
jb
mov
cs
hlt
inc
pop
mov
cmpsl
mov
xchg
mov
cli
pusha
sbb
filds
orb
jnp
xchg
dec
addb
ja
sbb
adc
mov
fldl
movsl
mov
nop
add
xor
es
pop
or
lea
cmpb
sub
xchg
hlt
pusha
sub
jle
add
pushf
rcl
stos
or
pushf
sbb
mov
and
and
mov
test
inc
pushf
jno
add
mov
mov
pop
xorb
cld
pop
aas
sbb
jl
gs
ret
sub
push
test
into
jecxz
jo
popf
sahf
add
rorl
mov
adc
sarl
sbb
and
and
sti
jno
xor
fisubrl
movsb
test
scas
nop
gs
xchg
push
dec
sub
inc
jo
add
mov
enter
or
lret
in
add
push
dec
mov
sahf
and
test
jno
and
call
sbb
popl
sub
or
add
mov
clc
pop
or
call
rcl
xor
loopne
dec
pop
mov
dec
cmp
mov
mov
adc
and
add
xlat
push
mov
ljmp
push
pushf
push
lds
test
pop
push
fwait
mov
imul
cmp
add
jo
ror
mov
pop
cmc
add
sbb
add
jne
add
leave
xor
sub
add
pop
or
add
imul
jns
xchg
and
push
movsb
cmp
inc
aas
pop
and
push
xor
cld
mov
xchg
das
add
and
je
dec
cmp
fwait
movsb
mov
sti
or
rcr
pop
orb
mov
sbb
es
add
mov
movl
inc
jnp
loopne
addb
pusha
xchg
cmpsl
dec
cmpb
add
mov
cmp
stc
sahf
clc
stos
add
jp
fsubl
pop
fwait
es
dec
jnp,pt
pop
sub
sarl
stos
ljmp
mov
icebp
rcr
push
cld
sbb
and
repz
and
and
movsb
mov
xchg
inc
pop
pushf
test
fsts
into
pop
and
sbb
or
test
push
dec
js
xchg
jp
popa
cmpsl
movsb
negb
push
jno
push
and
add
jecxz
mov
aas
in
test
hlt
inc
mov
xorl
cmpsl
add
mov
mov
in
fmul
pop
xor
pop
add
inc
scas
or
add
movd
add
push
inc
lock
lahf
inc
lret
mov
mov
leave
outsl
out
and
test
ret
jae
add
adc
fimull
xchg
cmp
icebp
movsl
popa
in
rcl
rclb
jno
or
dec
jnp
outsb
jae
cmp
push
sarb
or
push
std
push
jns
nop
mov
xor
mov
jne
rcr
ja
cmpsb
add
jmp
es
jl
ljmp
outsb
push
xor
jge
dec
jl
add
sbb
cltd
inc
or
mov
sub
push
adc
ret
xor
mov
shrl
and
ss
add
xor
fnsave
movsb
xchg
and
jns
fs
loop
sbb
adcb
aas
lds
add
jl
test
fildl
fidivs
add
dec
or
aaa
mov
mov
cmp
shl
ljmp
andb
les
fnstenv
mov
mov
add
and
push
mov
addl
cmpl
adc
sbb
mov
mov
jp
roll
inc
mov
popf
jns
lea
fcompl
jb
push
cwtl
adc
xor
sub
jl
add
or
mov
xchg
std
stc
add
lcall
scas
jo
setnp
ret
mov
add
out
sti
or
inc
jmp
stc
cli
sub
xor
pop
outsb
cltd
dec
add
les
add
test
pop
mov
add
push
xor
mov
add
adc
lea
mov
xchg
push
in
lods
mov
add
add
push
andb
add
cmp
or
push
pop
lahf
sti
pushf
cld
mov
pop
dec
shrl
jo
sub
frstor
adc
add
out
dec
add
sti
xor
lcall
and
adc
cmp
test
or
push
sub
add
cltd
add
pop
xchg
sbb
push
shrl
or
hlt
jl
es
or
mov
lock
in
sbb
pop
ficomps
lock
cltd
cmp
mov
pop
mov
add
and
or
pusha
dec
arpl
mov
sbb
pop
mov
fdivs
pop
xor
fistpl
xlat
or
xor
iret
cmp
mov
pop
fisubs
int
jbe
fwait
mov
add
outsl
andl
test
sti
mov
jl
mov
and
adc
daa
add
or
or
xorb
notl
add
dec
dec
hlt
inc
inc
push
lock
and
pushf
dec
inc
add
pop
inc
push
pusha
jae
int
in
shrl
add
mov
lods
addl
mov
pop
pop
add
push
aaa
xor
shlb
loop
js
cmpsb
pushf
or
xorb
movsl
pop
lock
scas
scas
imul
cmp
sbb
movsl
mov
or
je
sub
sbb
and
lods
pop
daa
aas
or
xor
push
imul
and
sbb
add
popa
pushf
aad
xor
cli
mov
test
shll
sub
sub
addb
lret
jnp
punpckhbw
testl
push
lock
fldl
mov
xchg
in
cmpsb
pop
add
push
pop
push
out
push
dec
add
xchg
and
pushf
push
xor
stc
imul
and
pop
xor
sbb
jp
fadds
insb
aam
jle
fsubrl
add
fsubrp
pop
inc
sub
movsb
les
ret
outsb
orb
mov
mov
fidivrl
add
dec
lea
cld
inc
aaa
bound
pusha
rcl
das
jecxz
movb
inc
mov
rolb
lret
jg
xchg
faddl
fcom
addl
inc
inc
icebp
and
cmp
icebp
xchg
pusha
inc
stos
pop
fidivrl
inc
xchg
xor
adc
dec
or
mov
sbb
pop
add
xor
and
jge
incl
add
mov
pop
xchg
dec
inc
mov
or
mov
or
push
stos
dec
xchg
add
push
pop
add
adc
and
and
fisubl
sub
bound
sbb
les
mov
stos
jl
movsl
stc
inc
mov
cmc
and
add
in
stc
fmulp
or
fs
cld
test
xor
int
test
decb
inc
int
pusha
adc
mov
and
in
std
inc
clc
jno
sbb
int3
dec
or
mov
stos
push
mov
cmp
xor
inc
ja
cmp
pop
sub
pop
dec
lock
and
add
pushf
testb
shrl
sub
and
push
sbb
push
xor
inc
fldt
not
ret
hlt
xchg
pop
sbb
rorb
add
nop
and
add
leave
test
aaa
add
lods
in
mov
inc
inc
imul
xchg
insb
bound
xor
mov
cltd
rolb
sarb
lret
xor
adc
add
mov
cwtl
add
sbb
jbe
dec
cmp
adc
into
and
pop
rcrl
dec
shr
or
xchg
nop
lods
mov
mov
das
or
js
orb
sbb
mov
jno
je
test
sbb
fcoms
inc
mov
push
xor
mov
add
fsubrs
lahf
and
ljmp
mov
sub
ss
mov
jnp
pushf
jno
call
dec
data16
push
xchg
jmp
in
add
stos
jmp
xor
arpl
add
add
or
inc
or
fcomps
aas
mov
mov
pop
dec
out
cmp
xchg
dec
pop
lods
daa
jle
in
add
out
sti
jg
out
mov
cmp
movsb
fnstsw
aad
insl
jg
jno
jno
add
inc
and
mov
adc
push
clc
lods
sub
mov
push
insl
add
repnz
test
jmp
push
shrl
xor
mov
or
icebp
jns
orl
mov
test
mov
jne
idivl
data16
test
sbbb
cmp
jp
ja
fldenv
add
push
xchg
daa
push
add
and
mov
int3
and
hlt
push
sti
loope
or
jle
sub
aam
xchg
mov
into
cld
jg
push
mov
push
xchg
xor
jne
test
inc
gs
xchg
addr16
or
add
and
ficoms
pop
adc
pop
test
rclb
add
ret
test
pop
dec
fldenv
insl
shlb
movsl
into
cmp
and
push
std
xlat
pop
sub
in
xchg
xorb
add
ret
dec
nop
popa
sbb
das
repz
sbb
add
test
and
xor
pop
test
data16
xor
cs
xor
xor
push
js
mov
jns
clc
xchg
xor
xchg
jl
les
mov
aaa
mov
int3
xchg
dec
adc
add
scas
dec
hlt
pusha
and
cwtl
xorb
addb
push
lock
fs
mov
andl
in
std
jmp
xor
xchg
test
push
repnz
imul
test
stc
sub
pop
cltd
mov
add
or
add
popa
jl
push
mov
mov
outsb
mov
pop
push
and
imul
jg
pop
jl
and
cmp
ja
add
inc
pop
jl
jne
pop
or
test
mov
or
shlb
sbb
jg
cwtl
jge
negl
and
jns
mov
mov
sbb
inc
add
xchg
and
xor
dec
sub
sub
or
call
dec
std
inc
push
adc
mov
and
cltd
add
adc
loopne
rolb
sti
hlt
mov
testb
hlt
jge
imul
mov
rclb
jl
pop
push
cmp
and
add
dec
xchg
loope
leave
movsb
sbb
inc
or
sub
iret
add
dec
inc
mov
xor
cmp
jae
pcmpeqb
test
addr16
cmp
add
roll
push
jmp
movb
mov
push
xchg
fmuls
push
ss
hlt
or
lret
mov
add
add
addl
je
inc
sti
xor
dec
add
pop
jne
ret
push
jnp
push
push
decl
orl
inc
int3
pop
fucomi
pop
mov
shlb
or
test
sub
jmp
movsl
shlb
shl
decl
and
mov
pop
mov
xchg
mov
rcrb
xchg
mov
push
or
leave
jg
jae
adcl
sub
add
cld
mov
ja
cmp
pop
ficomps
andb
xor
jo
inc
or
dec
mov
sahf
mov
cld
fldl
nop
or
imul
push
dec
mov
cwtl
nop
jb
in
cmp
clc
loopne
add
aaa
jae
mov
push
mov
dec
add
das
iret
mov
jmp
nop
add
add
xchg
cltd
and
jbe
popf
rcrb
nop
fildll
add
mov
xor
addr16
add
cmpsl
pop
and
xor
mov
ss
ljmp
int3
mov
in
fwait
pminsw
xor
xchg
add
test
rcr
add
stos
cwtl
add
sahf
cmp
je
outsb
cmp
mov
add
adc
adc
in
lods
fadds
mov
daa
lcall
jnp
add
sbb
cltd
loope
pop
test
and
xor
mov
js
lock
mov
test
adc
push
movsb
icebp
and
add
shlb
sti
mov
adc
bound
pop
xor
ret
inc
jg
sub
les
fistl
mov
stos
cwtl
insb
pop
and
and
cmpl
loopne
xchg
movsb
add
jns
dec
lcall
shr
dec
push
mov
mov
test
add
sbb
sti
mov
add
icebp
adc
cmp
mov
hlt
aad
setae
adc
or
leave
sbb
aas
lret
sbb
dec
rorb
and
pop
ds
inc
adc
fadd
enter
mov
add
test
rolb
xorb
enter
ldmxcsr
mov
push
enter
sbb
inc
cmp
pop
in
mov
shll
enter
pop
mov
xchg
jne
add
and
jno
andl
inc
cwtl
inc
xchg
gs
rol
jnp
add
testb
push
lods
adc
enter
cmp
cs
dec
add
push
xchg
loope,pn
fists
lods
fs
xor
stos
movsl
push
jne
and
pop
in
out
pop
out
and
xchg
call
enter
je
adc
and
cmp
adc
mov
pop
insl
pop
mov
jo
pushf
jno
xchg
mov
sbb
fisttpll
pop
inc
adc
sbb
pop
cmpsl
fwait
or
stc
movsl
test
shrl
xchg
add
pop
push
test
push
add
pop
ficomps
je
mov
cmpsb
jo
add
jl
loope
or
out
pop
lcall
mov
stc
add
jne
hlt
ret
mov
jb
inc
rcr
bound
lock
cmp
pop
hlt
in
or
mov
sub
insb
add
seto
es
xchg
aas
insb
fsubrl
mov
ds
test
pusha
push
add
mov
add
mov
adcb
sbb
or
cwtl
push
cmp
ds
repz
fwait
push
aad
fsubrs
mov
out
jae
movsl
sub
das
xchg
mov
js
outsb
daa
xor
lret
jl
mov
sub
jp
and
mov
jmp
adc
mov
add
xor
xchg
push
pop
push
outsl
test
push
sub
add
or
and
jg
xchg
clc
sbb
pushf
cwtl
inc
ja
rcrl
movsb
add
add
cmpsb
pusha
subb
and
orb
pop
jl
cld
dec
add
ret
add
pop
stc
push
jno
lret
fcompl
inc
and
sbb
popa
sbb
mov
jns
lahf
add
inc
ret
test
push
xchg
mov
cmp
repnz
add
repnz
xchg
mov
mov
fdivs
icebp
imul
dec
mov
stos
xchg
xchg
cmp
rorb
pop
xchg
dec
add
adc
xor
stos
dec
sbb
stos
add
dec
fs
add
cli
xchg
pop
mov
push
test
push
int3
add
add
into
inc
mov
xchg
cmp
xchg
andl
jae
pop
sti
adc
rolb
sahf
fadds
fmul
add
xor
mov
std
add
xchg
loopne
inc
jmp
negl
mov
push
add
adc
sub
test
sub
in
mov
cwtl
pushf
arpl
push
sub
mov
mov
push
inc
xor
xor
pop
sub
inc
hlt
pusha
mov
lcall
mov
movsb
push
pop
mov
add
inc
jmp
mov
push
xchg
in
or
jg
and
add
inc
cltd
and
push
stos
jns
idivl
pop
rcrb
js
cld
xchg
jae
popa
xchg
and
adc
add
cmc
in
mov
lock
rolb
pop
inc
mulb
add
aaa
add
mov
add
and
scas
push
push
and
mov
shlb
sub
mov
add
mov
push
jp
or
adc
or
je
aam
push
adc
flds
push
pop
inc
repz
addl
or
nop
fwait
jle
jno
mov
add
push
pusha
mov
add
and
pop
add
mov
add
cmpsb
dec
clc
cmp
call
mov
loop
nop
add
adc
or
cmp
inc
es
mov
xchg
xchg
pop
incb
test
cltd
ficomps
repz
add
stc
sub
add
dec
jp
or
arpl
fwait
xor
push
addb
test
push
xor
sub
or
call
pop
sub
inc
popa
iret
pusha
dec
adc
mov
int3
pop
sbb
addr16
sbb
jge
jb
add
int
xchg
inc
add
rcr
dec
stos
cmp
out
mov
sbb
in
dec
in
xchg
addb
push
jne
xor
xor
nop
movsl
cltd
cmp
pop
jns
inc
or
ret
xor
add
mov
mov
add
sub
cs
loop
jl
jl
cmp
shll
or
inc
xchg
pop
pusha
push
and
int
add
jge
pop
rcl
add
pop
add
and
js
xor
insl
adc
je
sub
test
bound
scas
ds
imul
popa
adc
push
add
out
inc
int3
test
and
xor
sbb
sti
in
mov
add
aad
std
or
lods
enter
mov
aam
add
push
ja
dec
pop
mov
inc
insb
ret
add
in
jl
out
cmp
bound
addl
cmc
mov
push
test
test
xor
sbb
mov
mov
hlt
jl
stos
stos
scas
das
sbb
mov
dec
lods
xchg
xor
dec
inc
fadds
ja
add
mov
mov
fdiv
sbb
xorb
xor
dec
lods
cmp
cli
adc
sub
add
sub
lock
mov
cmp
inc
roll
ljmp
add
push
add
fstpl
punpcklwd
add
testl
push
inc
sarb
add
mov
push
das
add
mov
addl
cmpsl
or
dec
xadd
push
sbb
lock
mov
nop
xlat
cmp
push
push
xor
sbb
enter
push
sbb
int3
jne
sti
nop
sbb
inc
stc
or
add
jb
lcall
mov
pop
jo
pop
adc
leave
and
ljmp
jb
mov
js
hlt
in
jb
clc
in
arpl
sbb
or
cli
pop
adc
cld
jmp
mov
jle
es
sub
roll
mov
and
mov
xchg
push
inc
xor
fs
add
jns
icebp
and
sub
mov
in
and
mov
testl
sahf
cmp
call
mov
ja
cld
bound
cwtl
jo
fldl
xchg
mov
dec
inc
fistps
add
rcrb
int
sti
mov
movsl
add
das
jbe
shrl
leave
cwtl
stc
jns
jge
add
and
cmp
frstor
push
fists
lret
xor
cmp
push
add
sbb
into
cmpsl
or
inc
xchg
sub
test
xor
pop
out
mov
xor
mov
xor
dec
daa
lret
mov
jecxz
sbb
loope
into
ss
pusha
sarl
lock
xchg
lahf
jo
cli
mov
dec
xchg
mov
repz
es
jp
xchg
cmp
loop
jle
fs
stos
add
ljmp
int3
jnp
xor
lods
jg
in
fnstcw
add
lret
jne
subl
pop
pusha
push
in
pop
shll
outsl
sahf
testb
lret
add
bound
stos
or
into
push
add
nop
daa
cmp
sar
cmc
xor
mov
in
lahf
mov
jb
bound
inc
lods
push
rorb
aad
cmp
je
inc
push
lss
sub
cwtl
fs
popa
ljmp
pusha
xor
add
lret
shll
xchg
test
hlt
cmpb
mov
dec
add
cmp
mov
movl
dec
xor
cmp
push
subb
jne
jns
orb
cmp
js
xor
add
add
sldt
lds
add
loop
and
stc
data16
inc
rorb
fcoms
jl
lea
add
push
pushf
add
sub
movsb
xchg
in
fisubl
and
into
inc
mov
add
xor
cwtl
pop
cli
ljmp
and
jnp
sbb
in
push
std
inc
pop
add
les
add
insl
dec
mov
mov
hlt
jp
in
cmp
jns
inc
jg
negl
jne
dec
dec
add
call
addr16
inc
popa
cs
xor
ja
cltd
stos
icebp
push
xchg
outsl
push
ret
cwtl
js
nop
pop
adc
add
shl
sbb
push
shrb
sbb
mov
add
icebp
jl
sbb
idivl
loop
cmpl
mov
add
call
inc
ret
mov
loop
add
in
cmp
dec
cwtl
add
jae
sbb
lret
lock
dec
xor
push
int
and
or
xchg
iret
imul
push
outsl
js
adc
xor
lock
fcomps
nop
mov
cli
pushf
sub
popa
sbb
mov
jns
xor
sbb
push
xchg
int3
jbe
test
and
lods
cmp
sti
sbb
and
add
test
jbe
movsb
sbb
movsb
hlt
add
adc
dec
xchg
or
pause
cld
sub
cwtl
popf
test
mov
dec
daa
mov
xlat
add
into
sub
xor
popa
sarb
adc
dec
jne
cvtpi2ps
mov
adc
add
aad
in
mov
divl
pusha
test
les
cmp
inc
or
fldenv
dec
add
int
sbb
movsl
cli
jl
pop
shlb
int3
jp
cwtl
ret
cmpl
cld
adc
mov
and
jno
shl
fs
add
add
out
js
pop
and
and
out
push
add
mov
mov
fnstsw
jl
add
push
cli
pusha
pop
nopl
pop
stos
sub
push
mov
mov
adc
pop
cli
mov
push
stos
and
adc
mov
out
push
lods
cmp
aaa
xor
pop
sbb
sub
pop
ljmp
iret
or
out
push
sahf
out
ret
nop
mov
clc
cmp
clc
pop
and
bound
dec
fnstenv
ljmp
xchg
mov
pop
imul
pop
adc
jl
jo
xchg
pusha
mov
ljmp
es
clc
sub
test
cmp
lret
dec
add
decl
dec
lret
negl
cmp
ret
negl
mov
inc
inc
popa
pop
out
xor
add
jle
dec
add
sub
inc
push
popa
jmp
int
cmp
aad
mov
add
mov
adc
leave
wrmsr
outsb
mov
pop
shrb
xchg
sub
test
in
and
jae
sub
cmp
mov
addb
shll
xor
cmp
lahf
sbb
clc
pusha
cmp
in
push
push
xor
lahf
add
or
cmp
out
nop
adc
notl
mov
les
inc
loop
orl
loope
loope
and
enter
xor
adc
sti
add
inc
xchg
sub
jl
fdivr
or
xor
inc
pop
sbb
and
loopne
cmpsl
cs
andb
pop
cmp
cld
pop
loope
xor
sarb
add
xchg
add
or
add
push
rcpps
mov
gs
jne
fs
and
sbb
jno
sarl
add
xor
cmp
lods
cs
xor
dec
cs
aad
inc
stos
push
jle
in
add
outsb
lods
les
je
gs
les
sarb
mov
dec
negl
mov
hlt
sub
pushf
lods
inc
inc
xchg
cltd
add
lds
mov
sub
loope
sbbb
insb
and
inc
inc
adc
dec
stos
les
xchg
movd
je
movsl
into
mov
pop
cwtl
adc
data16
ret
adc
sti
cmp
sbb
aaa
mov
repz
or
leave
xor
dec
cmp
add
popf
adc
aad
clc
add
std
das
sub
pop
or
mov
or
inc
or
enter
adc
jecxz
cli
fistpll
add
push
int
mov
add
mov
fidivl
xchg
mov
add
sar
push
mov
xor
test
pushf
add
push
lods
cld
and
cmpsl
mov
and
sbb
std
add
cmp
pop
xchg
lods
add
or
pusha
scas
adc
sbb
mov
data16
and
sub
sub
bound
inc
jo
aam
iret
arpl
or
add
loope
rep
add
jge
das
pusha
add
stc
stos
add
cmpsb
mov
adc
adc
cli
cld
push
sti
sub
addl
inc
inc
adc
pop
or
test
ret
sbb
sub
cld
imul
and
mov
fsts
leave
pop
fs
data16
add
add
xor
subl
add
and
stos
xor
fstps
and
inc
dec
sbb
cmc
add
sbb
test
ljmp
mul
jno
pop
xchg
inc
sbb
bound
pop
iret
pop
testb
xlat
sbb
pop
loopne
add
je
and
fiaddl
xchg
mov
mov
inc
dec
nop
adc
mov
pushf
cmc
repz
push
lods
sbb
cmpsl
daa
xchg
out
test
dec
int3
sbb
adc
nop
nop
call
xor
fucom
push
cmovo
xor
xor
call
sbb
dec
outsl
jp
inc
xor
cmp
in
xchg
pop
adc
push
in
sub
dec
add
test
movsl
lahf
xor
mov
xor
cltd
gs
xor
shlb
xchg
movb
out
jae
cmp
dec
mov
ret
bound
sbb
enter
push
push
push
xor
adc
insb
push
add
pop
mov
adc
ret
adc
and
push
je
clc
and
xor
loopne
add
mov
test
cwtl
jno
inc
shll
xchg
sahf
mov
fldcw
or
popa
mov
lds
jecxz
pop
jbe
enter
pusha
sub
rol
outsb
loope
sbb
dec
js
mov
mov
call
test
pop
jg
sub
sub
call
jp
bound
sbb
lock
jns
xor
inc
cmp
sbb
nop
xor
loopne
pop
cmp
sub
push
dec
mov
out
mov
and
cs
in
test
mov
icebp
jns
sub
inc
mov
enter
push
ret
outsb
scas
out
aam
fs
movsb
inc
mov
push
test
mov
add
lret
leave
sahf
add
mov
in
in
and
in
sbbb
fisubl
cwtl
leave
and
jae
insb
add
or
mov
push
add
push
dec
popa
adc
dec
jecxz
pop
das
inc
sbb
mov
sarl
addl
out
stos
xchg
or
inc
sbbb
js
mov
xor
cmp
jno
mov
jle
pop
push
xchg
adc
fstps
sbb
and
or
nop
fadds
mov
das
sub
jmp
xor
loopne
imul
lret
inc
fnstenv
fadds
lea
mov
mov
add
incl
mov
les
mov
adcb
pop
in
addr16
rolb
dec
andl
and
lcall
in
mov
mov
in
adc
lret
mov
add
insb
and
add
fwait
xchg
adc
lock
adc
fs
scas
add
jmp
pushf
shl
adc
cmp
xorl
mov
mov
pop
or
addr16
notb
dec
adc
movsb
pushf
aad
xor
mov
jl
nop
inc
add
pop
std
cmc
inc
loop
add
xchg
ljmp
or
out
call
scas
sahf
fldt
icebp
or
cmp
add
ljmp
pop
divb
add
out
jo
jge
or
cmp
xchg
sbb
shll
push
pop
sbb
mov
xchg
sub
nop
dec
iret
and
sti
xor
les
nop
sbb
aad
mov
xor
sahf
inc
jo
pop
mov
out
dec
aad
adc
mov
dec
js
and
cmp
cmp
adc
popf
nop
push
pop
jbe
loope
mov
sbb
fdivrl
mov
adc
jg
test
pop
sub
aam
sbb
inc
and
loope
inc
jo
mov
jbe
mov
mov
les
jae
xor
xchg
in
fcoms
shlb
pop
fsub
out
jle
pop
sub
xchg
cli
mov
dec
cmp
jbe
rcr
mov
adc
fs
mov
mov
dec
ret
cmp
insl
and
hlt
pop
and
mov
call
pusha
sub
sub
pushf
shlb
push
add
add
lcall
int3
push
xchg
inc
mov
jge,pn
insb
outsb
fs
lahf
popf
fdivr
testb
add
loopne
mov
ds
imul
loopne
test
ja
and
jnp
loop
das
sbbl
fs
leave
les
sub
xchg
pop
xor
fadds
inc
stc
push
or
lret
fs
bswap
rolb
mov
add
les
clc
into
dec
cmp
in
mov
xchg
adc
das
std
movsb
mov
test
out
addr16
call
loopne
lods
or
dec
sub
ljmp
xor
mov
pop
cltd
adc
cmp
push
int
jmp
add
pop
pushf
pop
push
clc
roll
add
mov
xchg
dec
jns
xlat
ja
sbb
jbe
add
sub
jmp
loopne
xor
add
push
iret
add
ret
xor
cmc
movsb
enter
loopne
pop
mov
sahf
int3
divb
inc
push
bound
adc
test
add
imul
add
rclb
mov
and
std
icebp
cmpsl
adc
pusha
lea
add
xlat
rol
addb
xchg
adc
jo
inc
jg
sbb
lock
or
cld
add
jbe
mov
test
jl
mov
add
sbb
cmc
sub
in
je
sbb
add
nop
popa
or
iret
out
push
cli
movsb
add
mov
inc
pop
testb
sbb
shrb
pop
outsb
in
test
add
in
cwtl
mov
add
jnp
imul
fsubs
pop
clc
pop
aaa
lods
pusha
shll
xchg
adc
nop
sbb
add
in
add
cmpsl
lahf
addb
lret
sbb
aam
jae
adc
cmp
fisubrl
fs
cmpb
lcall
jne
sub
lods
sbb
adc
xor
push
pop
add
mov
sub
mov
lock
shll
sub
es
push
je
cli
or
or
cmp
adc
enter
sbb
aas
dec
push
and
inc
fsts
ljmp
and
adcb
jecxz,pn
mov
lret
cmp
js
jae
xchg
dec
inc
leave
fildll
sbb
sbb
add
fldenv
dec
sbb
fdivs
inc
jbe
jnp
add
jp
mov
out
mov
jmp
pop
mov
lock
cltd
cmp
fsub
aas
xchg
testl
in
loop
and
aam
ret
mov
js
call
xor
flds
gs
xor
cmp
nop
loop
divl
push
mov
call
mov
idivl
outsb
cmp
in
add
cli
xchg
out
push
cmp
pop
clc
loopne
xlat
lock
lret
rclb
jne
sar
cmp
sub
in
add
je
mov
sbb
jle
dec
adc
push
ds
jo
rorb
iret
sbb
setns
aaa
add
add
jl
xor
pop
mov
popa
and
xchg
lahf
add
add
or
inc
add
sub
stc
adc
je
xlat
and
dec
mov
add
int3
aas
loopne
cmp
push
sub
adc
lds
jl
add
lods
hlt
incb
and
inc
add
cli
outsb
icebp
jae
int3
pop
sbb
xchg
cs
add
rolb
test
aad
loopne
sub
shlb
idivb
jp
fiaddl
into
iret
sahf
addr16
sbb
mov
in
inc
push
lock
out
pusha
jns
enter
sti
test
fildl
jecxz
mov
cltd
push
sbb
in
inc
xchg
and
inc
push
or
out
pusha
adc
push
stc
adc
sahf
jl
add
and
pop
or
cltd
gs
and
cmp
fsts
in
or
lret
sub
ja
fsubl
pop
loopne
jbe
lods
ret
ror
pusha
stos
xorb
icebp
data16
add
lret
push
outsb
aaa
cwtl
mov
adc
inc
nop
or
out
mov
adc
mov
add
or
pop
mov
ret
sbbl
shrb
add
and
mov
cmp
jne
loopne
and
mov
xor
jp
inc
sub
ret
sub
nop
stc
ds
lock
cmp
bound
pusha
test
xor
cld
sahf
sbb
add
outsb
push
scas
sbb
lea
clc
jae
adc
iret
cld
popf
nop
mov
negb
mov
cmp
jbe
outsb
mov
dec
fs
test
and
enter
sub
mov
outsb
data16
jl
in
rorb
sti
testl
fldl
xchg
mov
idivb
stos
mov
pop
mov
mov
adc
dec
pop
cmp
and
popf
nop
mov
movb
cwtl
pop
mov
mov
rolb
mov
adc
call
fs
add
xchg
adc
push
pop
and
sbbl
xor
lods
xchg
iret
jbe
sub
lock
sbb
in
push
mov
and
jge
push
adc
jno
add
sub
jne
fmull
cmp
or
in
cmp
dec
cmpsl
clc
pop
add
lock
ljmp
push
cli
test
cs
bound
ret
nop
outsl
xor
je
lcall
inc
fsts
and
mov
sbb
ljmp
sbb
lahf
add
dec
mov
cmpsl
dec
sub
adc
push
add
lock
js
and
int
nop
je
movsb
or
pushf
sub
cltd
add
fisubs
test
push
add
hlt
adc
adc
or
les
hlt
fs
inc
loope
int
popa
xchg
pushf
or
jg
nop
enter
es
test
out
pop
add
cmp
mov
pop
sub
dec
xchg
loop
and
push
add
sub
pusha
add
dec
xchg
mov
jae
cmpsl
cmp
jmp
sbb
gs
pop
add
jmp
or
push
addr16
add
lock
inc
adc
push
push
add
mov
dec
add
pop
push
int
vandps
pop
in
adc
sub
dec
cli
les
add
inc
mov
sbb
les
out
sbb
adcb
cmc
or
push
ds
test
mov
mov
cmpsb
test
out
dec
call
movsl
les
outsl
repnz
inc
jle
jp
dec
lahf
add
mov
test
push
sti
fmuls
lcall
call
movsl
mov
outsb
mov
in
xchg
in
movsb
sub
shll
or
imul
push
inc
lcall
cmpsb
inc
dec
scas
xchg
sbb
lock
nop
adc
lret
nop
or
pop
add
push
cld
popa
push
push
sbb
inc
cmp
sbb
pop
imul
addr16
inc
and
lret
pop
call
popa
mov
pop
push
cmp
add
xor
add
loop
add
mov
adc
mov
sub
sbb
pop
adc
dec
aas
lret
sarb
add
leave
add
in
enter
fnstenv
popf
leave
icebp
lret
mov
cmpb
add
movsb
add
xlat
daa
nop
popa
loop
dec
cmp
sbb
inc
mov
loope
enter
add
lods
xchg
mov
idiv
shll
and
adc
lods
cltd
xlat
cmp
adc
sub
push
jp
sub
loopne
ss
nop
jecxz
or
add
sti
repz
gs
adc
test
or
or
arpl
push
xchg
jno
bound
addr16
pop
enter
movsb
adc
jl
sbb
cwtl
lods
fs
inc
mov
jae
insb
jg
add
movsb
loopne
ss
wbinvd
iret
lock
int3
add
push
popf
mov
sbb
jle
rolb
add
rorl
icebp
repz
hlt
enter
enter
pop
xchg
int
xor
xchg
jo
pop
sub
cmpsl
aam
jns
pop
gs
sub
sub
not
rorb
sti
es
cmp
xor
sbb
inc
inc
nop
and
outsb
popf
xor
mov
dec
jo
ret
mov
xor
lds
imul
out
add
arpl
ljmp
add
sbb
rcll
cmp
jge
add
cmp
popf
mov
inc
and
cli
add
sub
mov
mov
jnp
mov
cmpsb
or
out
ljmp
clc
or
movsl
push
mov
in
fstps
int
nop
or
in
test
roll
mov
pmullw
jo
pop
out
lret
test
clc
stos
sbb
rolb
jne
arpl
shlb
lret
xor
xchg
clc
sbbb
dec
inc
or
cmp
cmp
xor
sub
push
xchg
dec
fadd
cwtl
inc
imull
sbb
xchg
xor
test
push
adc
pop
mov
jno
pop
cmp
rcrl
sbb
cli
xchg
jl
sbb
push
in
mov
cld
sub
mov
push
inc
dec
and
and
dec
add
shll
aad
sub
les
ret
test
mov
jle
mov
les
cmp
ss
data16
nop
and
outsl
mov
sbb
sahf
dec
xlat
jb
pop
fdiv
adc
and
test
sbb
imul
adc
rcl
add
clc
push
add
mov
or
xchg
insb
or
xchg
jo
sub
insb
sbb
xchg
sub
nop
mov
mov
mov
xorb
andb
mov
pusha
cmpsl
popl
and
inc
movsl
or
jno
imul
xchg
jl
mov
stos
rcrb
mov
jns
aam
and
jne
add
jbe
add
loop
pop
pop
push
inc
cli
stos
add
inc
sbb
push
imul
mov
dec
jmp
or
mov
push
leave
sub
ret
rcr
cmp
int
insb
sbb
loope
mov
mov
cli
xchg
jl
mov
adc
pop
fsubrs
pop
inc
inc
aaa
mov
rcll
sub
add
sbb
push
loop
stc
mov
pop
loop
mov
aaa
add
mov
mov
not
add
ret
xchg
flds
jp
push
movb
js
jno
add
push
daa
adcb
repnz
sbb
lea
cmp
xchg
and
xchg
nop
or
insb
rolb
stc
fmul
push
lret
push
or
insl
pop
push
cmp
shll
and
mov
aam
addb
outsl
dec
or
cmp
test
mov
sbb
pop
adc
fidivrl
dec
inc
cmp
incl
jp
xchg
and
mov
xchg
sahf
or
mov
xor
push
fmull
fldenv
xor
les
add
orl
popf
pushf
loope
into
push
push
sbb
add
inc
int3
movsl
or
sub
nop
and
sub
imul
adc
imul
gs
xor
pop
cli
mov
scas
adc
divl
nop
inc
add
push
pusha
xor
ret
mov
add
ret
inc
sbb
pop
xor
sbb
ljmp
dec
add
add
sbb
inc
push
adc
fdivs
mov
xchg
sbb
push
add
xorb
nop
inc
sti
rcrb
adc
cmpb
or
adc
test
sbb
xchg
add
cmp
mov
std
push
cmp
lods
add
lahf
mov
sub
int3
rolb
out
add
pushf
add
gs
add
or
dec
pushf
dec
ret
pminsw
ss
lret
and
fisubrl
xchg
out
xchg
cwtl
std
imul
sbb
jmp
int3
sub
lock
jge
or
push
bound
add
sarb
lret
popa
pop
jo
pop
or
dec
sub
xor
mov
push
fmuls
add
call
xchg
movsb
add
nop
adc
pop
dec
subb
mov
dec
or
loope
sbb
mov
pop
repz
in
or
dec
cmp
mov
jle
int3
cmp
add
cmpsl
and
cmp
jno
shlb
inc
xor
jg
pusha
inc
mov
mov
arpl
xor
pop
cmp
and
pop
dec
add
inc
movsb
rorb
cwtl
pop
xor
in
int
rolb
scas
pop
mov
add
xchg
movsb
sar
ljmp
ja
xor
mov
add
mov
dec
and
or
jb
test
int3
dec
dec
pusha
int3
inc
dec
cmpb
sub
add
aam
outsb
in
psubusb
lret
or
lods
sub
xchg
sahf
ret
aad
out
cld
fwait
xor
out
adc
fadds
pusha
sbb
add
mov
dec
xlat
sub
fistpl
hlt
es
adc
je
adc
sbb
mov
lock
dec
test
jmp
nop
jl
and
xorb
fstps
inc
jecxz
mov
mov
xlat
xchg
mov
jb
jl
jg
or
push
in
pusha
andb
xchg
inc
loope
add
jl
push
aas
jle
lock
xchg
add
push
shlb
shrd
mov
and
mov
inc
cmpsl
clc
mov
rolb
xor
test
dec
inc
dec
xor
xchg
add
or
popa
xchg
xor
pop
fsubr
fcoml
orb
test
xchg
lds
fadds
out
add
inc
movsb
mov
call
aas
mov
pop
movsb
sub
and
ss
lods
jo
cmp
scas
xor
data16
lods
xor
test
push
pop
xchg
insb
push
loopne
ret
pop
push
mov
inc
pop
nop
sub
imul
add
mov
mov
add
icebp
lods
xor
jno
notl
add
xor
out
cwtl
stos
jl
xor
and
loopne
test
bound
test
add
movsb
loopne
add
add
pop
mov
int3
out
stc
push
add
dec
popa
push
lock
mov
out
rclb
jl
add
mov
roll
mov
pusha
add
cmp
mov
ds
jns
add
jle
and
cmp
cmp
xchg
fld
aam
push
push
inc
pusha
mov
push
sub
mov
repnz
push
push
push
jp
hlt
dec
add
pusha
fs
addr16
sub
or
inc
jl
loopne
mov
popa
adc
add
mov
xchg
out
nop
fcmove
cltd
inc
adcb
add
dec
cmpsb
add
cltd
test
sub
lods
aaa
ds
mov
ficoml
mov
fsubs
push
nop
jl
cld
push
stos
cwtl
mov
add
les
pop
testb
jnp
fildll
xlat
xor
sti
int3
gs
adc
and
mov
pop
push
jecxz
xchg
add
sub
int3
sub
nop
xchg
inc
or
pop
shll
sub
cmp
mov
pop
cmpsb
js
scas
lret
xchg
mov
out
inc
xchg
add
mov
and
cmc
push
xor
nop
cmp
lock
push
mov
pop
shrb
das
push
scas
pop
cmp
pop
enter
sub
les
push
and
fdivl
in
mov
mov
movsb
ljmp
ss
mov
dec
cmp
mov
in
loopne
push
add
xor
fwait
pop
xchg
or
cmpsb
loopne
les
dec
sbb
out
adc
cmpb
insb
daa
int
adc
inc
mov
jbe
mov
adc
sbb
repz
ds
dec
mov
and
fucomi
shl
es
pop
sbb
loope
xchg
fbld
jl
add
xchg
in
push
js
add
mov
cs
push
add
inc
fmuls
xchg
nop
and
and
jle
jl
mov
cmp
or
dec
arpl
push
loopne
push
cmp
xor
test
xchg
push
cmp
xor
out
popa
shrb
add
push
leave
fcos
cmpsb
cmp
insb
cmp
lret
and
pop
push
pop
std
mov
and
int3
pop
adc
enter
xchg
fadds
arpl
add
pop
data16
js
stos
jo
ficomps
pusha
or
cwtl
sbb
rcr
push
ret
sbb
xchg
mov
or
adc
cli
inc
ja
aaa
add
push
stc
push
mov
pushf
ret
lret
scas
pop
cmp
int3
lods
out
mov
stos
xchg
addr16
push
jb
push
mov
sbb
lret
sub
movsl
mov
das
pop
stos
cwtl
addl
pop
jecxz
jns
es
jae
dec
pop
ret
pop
xor
mov
jae
loop
ja
xor
push
jno
add
jb
cmp
mull
test
pop
pusha
fcoml
or
pop
xchg
mov
arpl
sbb
dec
pop
and
pop
mov
in
popf
aad
jecxz
add
cwtl
jno
pop
cmpps
push
bound
jns
fs
inc
sbb
add
xchg
mov
les
in
inc
pusha
in
and
adc
push
and
add
imul
enter
mov
push
fs
mov
repz
sub
cli
push
mov
sub
nop
add
mov
ret
int3
mov
pop
sbb
or
out
stc
jb
push
mov
and
rcrl
lock
ja
jecxz
add
addb
xchg
stos
mov
mov
fistpll
xor
mov
pop
xor
xor
sbbb
dec
clc
inc
dec
and
out
pop
xor
dec
fnstcw
mov
inc
and
arpl
adc
pop
pusha
test
sub
ds
loopne
mov
jge
add
lea
enter
lock
dec
lret
fcom
jmp
insb
fmull
push
clc
adc
pop
sbb
mov
test
loop
sbb
ret
push
dec
les
adc
inc
adc
add
mov
out
inc
or
test
pop
stos
or
adc
xchg
test
ret
and
cld
faddl
shrb
push
add
loop
call
icebp
add
jb
push
inc
jo
add
sbb
or
bound
jnp
mov
add
sbb
shlb
xchg
dec
push
push
push
xor
cmp
add
ret
jmp
or
lods
mov
mov
int3
push
jle
lock
adc
mov
pop
push
xor
inc
push
or
clc
xchg
jo
arpl
jle
add
test
into
lds
les
ja
dec
push
movsb
subb
mov
insb
and
ret
pop
sub
call
stos
fiaddl
pusha
jnp
mov
dec
sbb
mov
sbb
in
and
pop
adc
or
gs
mov
push
adc
cmp
pop
xlat
pop
inc
rcr
shlb
push
xor
jo
xchg
push
add
ret
je
dec
add
data16
ds
loopne
mov
in
add
jne
xchg
push
adcl
sub
add
lret
aad
xchg
pop
add
fisttpll
out
fimuls
dec
jle
pushf
push
or
and
loope
fdivs
and
mov
cmp
lea
int3
sbb
and
das
xor
push
xadd
push
mov
and
fbld
mov
xchg
es
inc
inc
xchg
flds
pop
cli
and
xchg
int3
xchg
pushf
sbb
lcall
hlt
stc
add
orb
fs
inc
loopne
pop
ds
call
xchg
faddl
push
jl
or
add
add
lret
out
xchg
adc
xchg
arpl
xor
in
lahf
gs
pop
ret
pop
add
and
xchg
loopne
xchg
fiaddl
pop
cld
test
push
loopne
push
jnp
sti
push
dec
shlb
in
sub
daa
jg
pushf
sub
sbb
jo
cmc
adc
dec
jne
or
in
es
push
add
lock
push
sbb
inc
adc
pop
int3
add
dec
and
mov
push
mov
testl
jp
xchg
push
push
ror
cmp
rolb
jnp
push
xor
inc
jl
adc
rorl
push
subb
cmp
jp
test
pop
movsl
lds
and
pop
js
push
arpl
push
inc
out
pop
sbb
and
movsb
and
aas
or
lock
aaa
xor
xchg
inc
les
test
push
sbb
sbb
adc
sbb
sahf
shr
cld
push
mov
pop
and
add
inc
test
addb
fidivl
or
mov
invlpg
loope
adc
xchg
loopne
rcr
fmull
in
std
imul
mov
addb
arpl
push
or
scas
add
dec
pop
jbe
ret
jnp
cmp
lret
add
and
mov
pop
popa
cltd
out
pop
arpl
mov
sub
sub
sub
cmp
ficoms
xchg
mov
xor
nop
add
fldl
xchg
push
inc
sbb
lock
mov
inc
xchg
adc
int3
xor
or
lods
mov
or
lret
test
sbb
add
and
iret
ljmp
addr16
xchg
mov
movsb
push
outsl
sbb
out
ds
stos
mov
les
insb
mov
jno
and
mov
fbstp
jecxz
mov
and
dec
xor
push
mov
adc
sbb
cmp
mov
and
pop
addl
scas
pop
adc
cmpsb
cmp
mov
lret
lea
cmp
out
cmp
loopne
add
fisubrl
ret
call
leave
push
mov
xor
repnz
inc
inc
cmp
in
inc
rol
mov
push
add
sbb
push
pop
adc
xor
mov
popf
add
adc
push
cwtl
mov
push
cld
sub
adc
clc
inc
incb
pusha
in
jp
cmpsl
cltd
xor
or
out
xchg
xor
testb
and
es
subl
rclb
adc
js
dec
or
inc
out
add
dec
pushf
leave
lahf
push
ret
fisttpl
test
xchg
fistpll
mov
inc
shlb
and
es
and
subl
mov
sti
add
add
cmp
fidivrl
loop
adc
int
mov
adc
jnp
inc
add
mov
aas
inc
lret
mov
addl
mov
rcl
adc
mull
test
mov
add
int
jno
clc
clc
data16
push
adc
fbstp
fiadds
cmp
outsb
adc
adcl
icebp
add
mov
push
fdivs
nopl
shlb
add
cmpsb
pop
bound
add
xor
xor
inc
mov
push
push
inc
arpl
fisubrs
xchg
inc
shll
add
test
adc
mov
add
cltd
jne
ffreep
jl
dec
and
pop
sti
lcall
mov
pop
in
cld
lds
cmp
iret
adcl
xchg
ret
adc
in
aam
add
es
mov
mov
fs
mov
xor
cltd
rorb
pop
add
xor
inc
xor
push
aad
fnstcw
mov
mov
fbld
jae
ret
or
lods
in
enter
add
push
ljmp
incb
out
jg
imul
jl
mov
mov
pop
dec
jecxz
shrb
test
rol
mov
aad
or
in
sbbb
sbb
lock
jp
repnz
and
jbe
and
or
jmp
xchg
add
lcall
dec
dec
dec
dec
mov
les
xchg
xchg
or
dec
insl
inc
pop
inc
dec
sub
data16
repnz
jge
fs
enter
mov
push
inc
inc
scas
mov
push
push
cmp
add
lahf
aam
mov
add
test
push
dec
out
arpl
push
jmp
push
cmpsb
in
mov
push
rorl
repz
pusha
pop
xor
negb
jg
push
jp
aam
js
pop
or
sub
pushf
insl
pop
inc
pop
xor
sbb
mov
mov
shll
add
xor
adc
and
dec
add
add
icebp
int3
xorb
xor
mov
adc
adc
enter
mov
test
cmp
fmull
std
push
lret
arpl
fsubrs
xor
add
adc
push
test
in
push
loop
inc
and
sub
xor
jae
and
aam
js
add
clc
mov
and
mov
mov
insb
add
inc
ror
pop
mov
idivb
adc
pop
dec
imull
xor
add
subb
roll
dec
ja
inc
or
sub
sbb
out
addr16
add
cmp
or
push
dec
xor
inc
dec
mov
or
out
mov
inc
inc
or
jns
test
cwtl
fcmovb
pop
pop
not
mov
inc
hlt
mov
pop
arpl
sub
adc
cmp
pop
daa
lock
jp
out
lods
push
cli
xchg
inc
jb
dec
adcb
push
xchg
cmpsb
add
push
pop
test
sarl
dec
and
push
lahf
inc
aad
shrb
and
fwait
cld
add
addr16
push
cmc
dec
enter
pushf
outsb
pop
fs
sbb
adc
andb
cwtl
data16
imul
adc
clc
js
dec
and
cmpl
pop
int3
je
mov
jne
mov
ss
fsubl
les
add
fcmovnb
mov
cmp
aam
decb
cltd
sub
repnz
aad
xor
mov
sbb
xor
mov
and
add
lahf
fistpl
call
enter
dec
in
pop
xor
cli
mov
mov
jno
rolb
and
xchg
pop
push
dec
pushf
je
add
jno
mov
or
std
fdivrs
jo
cmpsb
pusha
addb
dec
add
sahf
mov
add
pop
mov
and
adc
xchg
ljmp
or
push
mov
js
daa
sub
cmp
mov
lret
jmp
icebp
jg
inc
popf
jg
mov
outsb
xor
or
pop
lret
push
add
pop
andb
adc
inc
push
sbb
loope
dec
arpl
pusha
mov
jne
stos
mov
inc
in
out
emms
push
jmp
mov
lret
in
cli
loopne
popa
aaa
icebp
arpl
into
jge
add
ret
mov
rclb
cmp
ds
insb
pusha
dec
add
xchg
pop
inc
jmp
fnsave
mov
pusha
mov
and
add
or
lcall
das
dec
pop
add
sbb
mov
mov
stos
inc
cld
in
pop
popa
insb
mulb
adc
in
add
dec
es
jae
faddl
js
dec
fsubrl
aam
add
sbb
into
fcomps
fldln2
adc
cmp
add
or
add
out
inc
jne
mulb
scas
add
test
je
sbb
sbb
jbe
leave
pop
jbe
add
pmulhuw
sub
jg
fadds
jo
add
inc
out
outsb
test
push
add
movsl
rorl
js
cmp
mov
pop
shrb
lret
push
rclb
dec
sbb
cli
xor
cmp
push
les
push
divl
xchg
mov
sbb
leave
test
test
loopne
pop
pushf
add
inc
mov
pop
out
cmp
mov
hlt
repz
cmpb
shl
cmp
sbb
lahf
shr
sbb
add
add
test
and
or
add
pop
imul
push
int3
data16
popa
cltd
call
sbb
or
fidivs
enter
and
sub
pop
adc
aaa
fs
lods
sub
adc
addb
test
inc
cmp
add
mov
xor
xchg
cmpl
daa
adc
orb
hlt
out
mov
pop
jle
xchg
sbb
pop
adc
and
cmp
sahf
fdivs
inc
enter
jle
sub
adcb
push
loopne
jo
and
hlt
ficomps
or
fs
pop
rorb
push
loope
add
mov
leave
mov
lret
data16
loop
stos
push
in
std
lock
pop
adc
mov
outsb
mov
and
hlt
inc
sbb
inc
in
popa
jno
call
cli
test
or
pusha
push
mov
rcll
cmpb
cli
xor
sub
aad
data16
js
push
mov
adc
xchg
hlt
inc
jns
cwtl
adc
stc
das
inc
jecxz
lock
push
dec
inc
add
lret
mov
add
sarl
push
or
xlat
jo
popa
mov
icebp
repnz
push
imul
add
add
orl
inc
cmp
icebp
outsl
mov
adc
std
rol
sub
inc
clc
xchg
insb
dec
pop
mov
imul
hlt
pop
xchg
push
aad
fwait
test
repz
add
fidivrs
lods
adc
flds
add
xchg
fisubs
mov
outsb
movsl
js
sub
aas
js
jge
mov
loopne
in
pushf
insl
add
incb
dec
addl
adc
push
or
mov
and
mov
sarl
xor
clc
dec
push
pop
lock
nop
mov
movsb
inc
pop
mov
add
add
bound
add
addr16
adc
mov
and
dec
subl
or
insl
push
rorl
fcompl
or
les
add
icebp
mov
popa
sbb
jmp
call
jbe
mov
add
hlt
cmc
jno
or
insl
out
dec
and
js
sbb
adc
mov
movsb
cs
insl
push
shrb
push
ja
add
dec
pop
jbe
repnz
js
sbb
clc
iret
pop
mulb
jns
das
xchg
in
adc
das
and
int
pusha
mov
adc
mov
add
int3
push
jl
sbb
int
inc
clc
fs
push
rcrb
ror
adc
out
or
or
sbb
sub
mov
jecxz
insl
push
dec
shl
mov
adc
add
dec
lock
sub
ficoms
mov
sahf
dec
or
add
test
lods
add
adc
mov
sbb
jnp
ret
push
mov
aam
int3
dec
pop
hlt
mov
push
mov
inc
pop
icebp
adcb
and
cmp
rolb
jl
dec
cmpsb
push
add
jp
cmpb
jp
lock
mov
or
and
ficoms
xor
xor
mov
rolb
clc
test
imul
jge
add
or
mov
pop
rorl
xchg
sbb
ds
cmp
movsb
call
adc
add
mov
inc
push
pop
loopne
aam
scas
dec
addr16
add
repz
imul
fsin
mov
out
xchg
sbb
std
loopne
lds
sbb
in
push
loop
xor
pop
or
cmpb
add
js
mov
mov
paddsb
dec
fcomps
sub
gs
mov
enter
in
mov
xchg
add
push
mov
pop
mov
rol
add
dec
les
mov
aas
jne
out
inc
xchg
std
cmpsl
clc
test
loope
and
mov
mov
int3
cmp
test
enter
ds
cltd
flds
scas
rorl
dec
leave
out
clc
fstl
or
cmp
cs
shlb
mov
sti
and
out
or
or
incl
sub
and
mov
xor
jb
dec
ffree
cmp
ljmp
jns
push
pop
incl
cwtl
or
outsb
or
add
inc
sub
out
imul
lret
xor
mov
mov
icebp
mov
xchg
sub
add
jbe
mov
add
pop
dec
sti
lock
pop
and
fs
sbb
cmc
push
shlb
scas
jo
decl
filds
dec
ja
and
mov
push
mov
xor
jns
rcl
xchg
and
pusha
xchg
sub
add
data16
out
shlb
add
mov
or
bound
repnz
push
iret
jmp
pop
adc
stc
cld
out
clc
add
inc
addr16
mov
jno
inc
dec
push
fists
adc
push
rolb
push
jnp
add
rolb
adc
inc
xor
dec
or
fs
sbb
inc
cld
xchg
add
cmpsb
inc
loope
or
push
in
movsl
add
hlt
xor
inc
fcoml
testb
add
fisubrs
push
arpl
push
inc
and
push
pop
es
je
aam
pslld
inc
xchg
pop
sbb
pusha
and
lcall
cld
add
test
loop
out
and
enter
mov
cld
insb
sub
nop
fwait
pop
cs
and
in
hlt
mov
dec
int3
sbbb
mov
pop
push
jmp
or
mov
sub
sub
add
ja
lahf
sub
add
gs
xor
lea
arpl
mov
sub
aaa
mov
cwtl
cltd
inc
addb
imul
cmp
pop
or
mov
ds
out
pop
pushf
xchg
and
lods
xchg
xchg
mov
jg
dec
push
dec
or
ror
jne
add
dec
push
adc
int
xchg
add
or
rorb
or
ret
fistpl
outsl
dec
mov
popf
fiaddl
inc
cmpsl
les
mov
jmp
xor
jecxz
push
mov
outsb
test
call
jg
mov
add
test
or
add
cmp
lods
ret
sbbb
jp
mov
push
pop
jge
dec
jmp
cwtl
mov
inc
sbb
fiaddl
data16
dec
lods
clc
call
mov
lds
testb
loope
scas
sbb
mov
sti
insb
insb
adc
jbe
or
mov
push
and
int
or
sbbl
adc
mov
ds
sbbb
push
and
in
or
imul
or
mov
inc
inc
insl
inc
dec
pop
hlt
jo
sub
pop
push
clc
adc
pop
leave
movsb
cmp
push
sbb
pop
jns
out
jmpw
push
dec
mov
jmp
les
xchg
in
sahf
and
fsub
push
adc
rolb
int3
pop
or
inc
add
pop
sub
sub
adc
movsb
lret
pop
sbb
not
scas
mov
imul
push
clc
mov
ss
shrb
test
add
in
dec
adc
xchg
push
and
andl
or
mov
jp
fisubrs
add
pop
or
ret
jns
adc
rorb
incl
dec
mov
test
xor
and
clc
dec
sbbb
outsl
add
std
mov
cli
adc
push
loopne
iret
mov
shll
xor
inc
nop
mov
adc
sbb
push
xchg
jmp
enter
add
add
pop
and
sti
test
inc
int3
stc
and
cmp
movsb
enter
add
pop
mov
add
in
loop
nop
sti
int3
out
pop
add
stos
fcmovne
adc
xor
in
cli
outsb
and
sub
xor
push
fidivrl
mov
push
add
mov
adc
adc
xchg
in
sub
jg
add
es
and
mov
arpl
sub
xchg
mov
popa
mov
cmp
pop
fisubrl
movsb
inc
sbb
push
inc
mov
jl
scas
add
stos
cmpsl
lods
insl
test
mov
adc
loopne
ja
mov
add
sbb
pop
shl
add
out
addr16
out
repnz
mov
enter
nop
push
jns
in
das
leave
pop
in
push
pop
sub
adc
out
mov
loopne
lea
mov
dec
test
loopne
dec
jl
test
pop
inc
ret
insb
mov
imul
xchg
push
and
hlt
adc
cmpsl
nop
mov
add
mov
sub
repz
arpl
aam
pop
xlat
mov
les
bound
lret
cwtl
jg,pt
aam
repnz
pop
dec
jle
jo
push
add
mov
mov
lea
and
fcomip
sbb
shll
or
nop
dec
hlt
cmp
adc
cmc
push
mov
out
lret
mov
xor
rcll
adc
dec
movsl
test
add
je
dec
and
add
inc
mov
xor
pusha
pop
push
out
je
mov
jge
mov
sub
pop
dec
lock
mov
cmp
dec
add
mov
pop
jle
lock
and
lds
mov
mov
pop
roll
sub
test
jo
fsubr
push
adc
mov
mov
pop
and
and
sbb
into
loop
push
lods
aam
push
add
jmp
addl
aad
lea
test
mov
lock
add
sbb
fadds
nop
insl
adc
add
jo
rcr
sbb
dec
and
add
cmp
cmp
pshufd
cmp
imul
data16
adcb
mov
cmp
xchg
lods
add
fs
shll
push
cld
sub
out
xchg
pop
push
cwtl
adc
add
pop
setl
and
ficompl
push
aad
lods
add
out
mov
ljmp
ret
hlt
pusha
jmp
cmp
mov
in
push
ja
scas
sbb
push
cmp
sub
fs
aam
sbb
add
xchg
adc
ffreep
add
inc
mov
enter
notb
in
xchg
push
push
dec
ja
lods
and
dec
in
mov
insb
inc
add
mov
inc
daa
mov
test
mov
adc
push
mov
add
xor
push
addb
cld
sbb
roll
xor
incb
in
in
jo
adc
andl
add
stos
push
les
inc
mov
idivb
out
push
cli
mov
orb
pop
fs
inc
add
fldl
inc
jno
pusha
sbb
ret
xchg
out
dec
add
stos
jp
rorl
add
pop
mov
inc
sbb
das
add
jns
push
not
push
mov
or
mov
sbb
enter
inc
adc
cs
push
ret
push
cmp
mov
xchg
cmp
xchg
xor
les
movb
and
sarb
mov
fbstp
int3
fsub
push
nop
or
add
aaa
xchg
mov
push
shll
mov
push
xor
cmp
dec
bound
pop
lock
and
cs
adc
push
stos
rolb
or
cmc
std
sahf
adc
push
jo
xchg
fisubrl
push
inc
loopne
aas
cmp
sbb
push
or
sub
push
xor
call
jl
or
jg
lock
adc
inc
cmpsb
sbb
cmp
and
fisttps
add
rorb
cmpw
add
rorl
adc
push
leave
sub
imul
inc
popf
mov
cmp
dec
add
scas
mov
pop
out
rolb
in
fcmovb
inc
mov
xor
js
popa
dec
cltd
push
xor
push
aam
pop
cli
or
and
mov
icebp
data16
inc
cmp
cmp
sbb
cltd
mov
lock
add
movsb
in
adc
jae
insb
sub
adc
andb
cld
xor
jl
sbb
lret
add
cmp
xor
xor
and
ret
add
add
mov
xor
add
and
sti
das
loope
ret
cwtl
outsl
mov
add
popa
jecxz
loope
shll
add
inc
or
sysenter
or
fdivs
les
nop
insl
xchg
sub
lds
test
xchg
dec
rorb
inc
int3
inc
mov
fsubrs
les
fcoml
xchg
pop
inc
add
hlt
stc
mov
mov
mov
pop
mov
inc
stos
mov
or
push
icebp
dec
cmp
jmp
sbb
roll
push
arpl
lock
mov
push
cmp
inc
xchg
arpl
std
adc
movsb
sub
mov
pop
push
push
aad
adc
or
roll
inc
add
stc
cli
out
cltd
sub
add
mov
xorb
imul
push
roll
cmp
popf
pushl
add
popa
sahf
xchg
into
nop
pop
mov
sbb
cmpl
imul
push
aaa
cmp
and
and
jmp
add
push
aas
sbb
mov
cmp
test
adc
addb
or
cs
cmpsb
adc
mov
in
mov
mov
mov
add
fwait
mull
lods
mov
push
push
or
push
sub
pop
clc
jae
ja
adc
mov
enter
loopne
shlb
pop
sub
inc
cmp
addr16
mov
aaa
dec
shrl
push
and
push
add
icebp
rep
cwtl
mov
add
in
cmp
add
test
enter
xchg
int3
test
cld
test
mov
fcom
xchg
xchg
push
pop
mov
cmpl
jle
fcompl
add
inc
add
add
push
xor
mov
xchg
pusha
aad
adc
xor
mov
inc
imul
int
push
ret
pusha
cmp
add
jle
or
les
shll
and
lret
add
jg
cs
lock
fildl
mov
rolb
rorl
insl
push
push
movsb
stos
xchg
add
pusha
mov
das
scas
or
or
out
int3
or
sub
lds
jno
mov
stos
push
push
loopne
adc
das
add
and
filds
mov
sub
into
fildll
int3
mov
or
mov
inc
dec
pop
or
or
testl
rclb
pusha
fldt
and
adc
add
dec
mov
adc
add
fsubr
jb
push
xor
daa
or
dec
adc
andb
xchg
sub
sub
inc
add
adc
movsb
xchg
lret
cltd
out
mulb
jne
jnp
or
sub
pop
xchg
popf
pop
ret
and
or
xchg
pop
add
inc
bound
adc
test
sbb
add
push
popa
push
lea
mov
sbb
sub
dec
js
add
cwtl
addr16
les
getsec
fwait
ret
stos
out
cmp
cmp
push
mov
inc
mov
mov
scas
inc
movsl
mov
scas
inc
idiv
dec
mov
or
adc
mov
inc
push
push
nop
mov
aam
sbb
inc
mov
mov
mov
stos
lcall
add
xchg
sub
mov
pop
mov
or
pop
dec
cmp
nopl
iret
lods
popa
movsb
pop
and
add
xor
add
sbb
sarb
mov
adc
add
mov
dec
xchg
jb
add
push
adc
cmp
pushf
xchg
add
and
cmpsb
dec
push
inc
and
sub
insl
loop
movsb
pop
and
cmp
mov
scas
push
mov
add
and
add
mov
int3
push
add
cs
xor
xor
popf
imul
nop
pusha
cmp
dec
lods
inc
cwtl
xchg
cmc
cltd
mov
pop
dec
or
outsb
add
xor
nop
add
mov
lods
leave
adc
jo
sarb
iret
add
icebp
pop
mov
les
aaa
add
inc
sub
adc
push
test
and
or
enter
inc
dec
arpl
dec
mov
or
rcll
dec
inc
push
das
mov
sbb
ret
inc
outsl
pop
or
mov
mov
add
dec
dec
lods
add
dec
adc
scas
pop
aaa
cld
sbb
loope
lret
stc
ljmp
jno
add
cmp
mov
inc
or
dec
sub
pop
lahf
cmp
cmpb
inc
ss
inc
ds
fdivrs
push
push
xchg
rolb
imul
out
pop
mov
jmp
push
and
cmp
dec
loopne
xor
adc
shlb
je
jmp
lret
cmp
into
add
out
in
sbb
xchg
addl
les
and
pop
or
jmp
lea
mov
lahf
pop
add
cld
add
pop
sbb
or
push
pop
iret
sbb
mov
dec
and
push
jl
add
jmp
out
dec
inc
add
dec
adc
les
lret
pop
lret
arpl
add
add
insb
scas
add
pop
lea
stc
add
jge
push
jp
add
sub
add
xor
pop
in
iret
dec
add
daa
dec
or
pop
test
jge
mulb
cmc
fwait
sbb
and
dec
and
enter
push
int3
and
int
dec
movsb
or
mov
add
xchg
push
and
pop
insb
push
test
movsl
inc
mov
jle
cmp
fs
lret
and
ja
xchg
rclb
mov
int
and
aaa
jno
inc
outsl
xchg
mov
cli
roll
push
add
out
jne
je
push
rolb
lods
push
sub
add
scas
stos
xchg
sub
inc
add
or
inc
outsl
rorb
xchg
inc
or
add
arpl
and
shr
stc
jle
adc
fisttps
jbe
adc
call
or
cmc
cmp
inc
stc
sub
add
pop
ja
or
sub
jns
adc
cmp
movsb
les
or
out
outsb
mov
add
sub
add
sbb
std
and
ss
test
das
sbb
mov
popf
repnz
inc
cmp
xchg
sub
dec
clc
into
clc
and
xchg
fistps
test
jns
mov
addl
xor
or
mov
test
stc
out
sub
inc
push
adc
lcall
or
inc
sbb
sti
add
imul
pop
rcl
cmp
call
dec
push
sub
in
xchg
sbb
stos
add
inc
jbe
sbb
cli
hlt
cwtl
adc
lods
xchg
mov
aaa
jmp
mov
and
fdiv
mov
jno
cmp
xlat
sbb
sbb
nop
fsubrl
add
sub
pop
aad
push
clc
outsl
and
and
or
aaa
sub
cmp
lock
add
cli
out
lods
sub
les
icebp
xorb
dec
and
and
push
shlb
push
add
jns
add
mov
into
xor
sub
popa
cmp
inc
add
sbbb
shll
enter
mov
lock
add
lahf
mov
out
cmp
and
cmp
lods
xchg
mov
mov
sti
test
inc
mov
pop
push
nop
mov
divl
add
push
dec
scas
fistpl
xchg
pusha
and
xchg
cmp
inc
sub
pop
cmp
into
add
mov
movsb
pop
sub
and
push
iret
mov
lock
incb
and
das
mov
stos
cmp
pop
sub
xor
ss
jb
aad
loop
inc
inc
aam
sub
add
call
testl
je
add
cmp
mov
jo
cmp
mov
sbb
push
sar
rcl
inc
mov
add
and
add
subl
push
sub
add
loopne
or
cs
or
gs
add
out
pop
push
dec
lods
sub
xchg
sbb
add
in
pop
scas
add
lods
mov
je
cmpsb
stos
movsb
mov
mov
in
loop
aaa
add
outsl
jo
test
cmp
sub
add
test
sbb
sub
pop
enter
pop
inc
sub
sbb
imul
add
cmp
icebp
inc
add
sub
mov
cmp
inc
jno
mov
add
and
nop
push
cld
add
mov
cs
insb
sub
xlat
loopne
push
movsl
mov
add
pop
lret
sbb
or
pop
int3
add
movb
enter
pop
xchg
pop
jmp
jne
or
jo
ss
push
test
adc
in
les
add
inc
cmc
inc
xor
fcomps
sub
cmp
test
inc
and
adc
xor
mov
pusha
je
and
clc
push
jmp
shl
dec
sbb
cmpsb
ds
and
mov
and
repnz
cld
loopne
int
inc
inc
and
add
add
xchg
fsubrs
shrb
movsl
imul
inc
js
inc
adc
mov
movl
movsb
or
imul
ror
pop
sub
xor
lea
fs
sub
imul
test
repz
inc
jno
pushf
dec
std
add
jae
sbb
incb
lods
inc
adc
mov
jg
or
mov
dec
pusha
lock
xor
push
mov
and
push
or
add
lds
call
add
inc
and
or
jl
pop
rolb
mov
fwait
cli
add
fcomi
sub
cmpsl
or
and
xchg
clc
mov
add
and
enter
je
js
sbb
add
nop
jl
es
mov
lahf
push
add
mov
loop
fimull
pusha
adc
sub
les
ds
fisttpl
adc
mov
enter
aam
and
pop
sub
stos
push
add
xchg
sub
pusha
cltd
js
inc
sarb
call
fcompl
mov
dec
dec
sbb
push
inc
imul
adc
mov
inc
inc
mov
test
mov
loope
int3
ljmp
add
test
add
push
loope
lods
insl
or
outsb
xor
arpl
fistps
repz
data16
popf
mov
pop
sbbb
movsb
pop
pop
push
popa
in
jle
scas
ffree
loopne
xchg
jle
push
adc
popf
js
inc
mov
or
mov
dec
mov
stc
ror
adc
add
dec
and
cmp
test
out
mov
xchg
and
fisttpll
mov
cmp
mov
xor
push
loopne
rol
and
sbb
xchg
outsb
or
repnz
xorb
insl
pop
sti
rorb
movsl
shrl
or
dec
add
xchg
push
cmp
adcb
hlt
sub
mov
iret
adc
popf
cmp
leave
fmuls
cltd
push
add
lods
in
cli
mov
or
sbb
inc
push
add
ret
enter
fmull
test
adc
pop
fs
or
push
sbb
mov
pushf
xchg
fistpll
std
int3
push
es
pop
into
call
and
xchg
movsb
loopne
jge
add
sbb
mov
add
mov
shrb
xor
sub
inc
add
jno
iret
mov
pop
cmpsl
add
xorl
push
mov
shrl
sub
add
mov
sti
and
dec
orl
ja
dec
outsl
mov
sbb
shrb
aaa
cmp
pop
stos
testb
add
inc
cli
in
or
add
enter
jg
cmp
stos
and
rorb
xchg
add
ljmp
clc
add
push
push
or
into
cmp
cmp
push
int
xor
ja
sbbl
add
mov
out
movsb
les
fadds
xlat
add
cmp
mov
add
mov
inc
add
sbb
xchg
andl
pop
movsb
inc
les
into
jo
pop
add
cmp
add
sbb
add
add
sti
cmp
push
jnp
out
and
push
jle
lock
and
mov
mov
jns
or
jecxz
xor
scas
adc
enter
loope
push
xlat
out
jle
push
fdivs
or
or
mov
add
mov
mov
and
mov
push
sub
mov
scas
mov
adc
mov
sub
add
loope
sti
je
cmp
rolb
loopne
push
test
paddd
lcall
dec
mov
aaa
mov
and
inc
mov
rorl
pop
cmc
pop
pop
cwtl
faddl
jl
mov
aam
add
ret
mov
and
cli
les
das
adc
mov
ret
or
int3
test
std
cwtl
jge
push
xchg
xchg
xor
sbb
xchg
adc
cmp
in
add
inc
repz
lock
aam
or
daa
pop
into
fs
cmc
or
add
dec
fisttpll
aam
into
add
and
div
inc
int3
lods
shl
push
inc
mov
sub
outsb
les
in
pop
lds
adc
popa
and
enter
pop
fistpl
inc
sub
inc
push
sarb
cmp
or
lods
sbb
inc
jae
and
cwtl
out
dec
mov
mov
dec
or
mov
xchg
pop
movsl
xchg
adc
aad
xchg
add
mov
icebp
lods
xor
cmp
mov
cmp
mov
fcomps
inc
mul
or
dec
inc
pop
mov
pop
hlt
ret
fadds
jno
jl
adc
xchg
nop
insb
cs
mov
add
mov
clc
popa
test
mov
daa
roll
or
inc
dec
ja
inc
or
push
outsl
adc
pop
pop
sti
test
lcall
lea
push
mov
lods
cmp
add
mov
pop
scas
and
jle
jo
fcmovbe
xor
add
sub
mov
lret
lods
bound
push
into
push
and
loope
movsl
sub
into
shl
and
sub
sbb
xor
adc
test
rolb
sub
sub
fmul
rcrb
in
int3
add
psubq
sbbb
dec
imul
in
rolb
push
mov
jmp
xchg
push
repnz
and
dec
test
es
and
xchg
mov
xchg
nop
aam
sub
cmp
popa
call
and
adc
mov
repz
and
pushf
push
aad
pusha
xor
out
test
mov
mov
bound
jo
sbb
inc
shlb
lds
xchg
mov
xchg
les
in
cmp
mov
inc
mov
shlb
lock
cltd
xchg
push
sarl
hlt
fdivr
mov
loopne
mov
cwtl
cmp
dec
lret
cmp
mov
movsb
pushl
sub
mov
xchg
and
pop
mov
out
stos
test
jmp
mov
fwait
sub
scas
lret
je
and
or
xchg
mov
lret
and
rorb
jno
jg
or
and
jle
fs
xchg
lods
lds
add
movsb
cmpsl
mov
in
add
push
pop
sub
scas
sub
xchg
dec
sarb
lret
xchg
insb
clc
dec
xor
aam
pusha
adc
mov
loop
add
leave
mov
gs
and
add
push
ja
or
mov
sbb
add
jl
xor
dec
push
bound
cmpsl
shlb
sbb
loope
mov
aam
in
lret
pop
loop
lahf
arpl
mov
or
jl
push
clc
adc
mov
add
test
sub
push
inc
ljmp
fwait
cmp
push
fisubrs
nop
inc
rcrl
add
xor
in
xor
mov
add
cmp
in
add
push
xrelease
jp
ljmp
lahf
add
lret
movsl
rorl
sbb
scas
add
dec
shll
pop
and
add
add
sbb
pop
repz
mov
jecxz
xor
inc
testb
fwait
nop
hlt
fstp
je
jp
pop
cli
outsl
mov
jno
push
or
or
rol
cmp
jge
push
lea
add
sar
mov
and
mov
dec
mov
sbb
push
aam
mov
mov
push
sbb
enter
les
pop
int3
movl
jl
sub
xchg
loopne
int3
cmp
pop
aas
cmpsb
mov
pop
negl
sub
cltd
xor
pop
sub
push
add
ljmp
int3
xchg
inc
cs
lods
pusha
shl
mov
mov
sub
in
sub
pop
lock
cmp
int3
jno
and
or
xor
sub
inc
add
out
mov
movsb
nop
mov
lcall
mov
add
and
mov
xor
je
mov
push
cs
lock
dec
fistps
cwtl
cmp
pop
sub
xor
loopne
add
adc
inc
cmp
mov
add
push
das
jle
sbb
dec
mov
xchg
pop
adc
arpl
cmp
in
stc
roll
fistps
insb
pop
popa
and
sub
mov
popf
in
xchg
movsb
je
es
nop
fidivs
sub
loop
push
daa
and
add
xor
into
scas
add
add
aas
add
xor
xlat
das
mov
jb
cmp
hlt
cmp
imull
sbb
sub
xor
dec
pop
adc
add
movsl
jb
call
mov
lds
and
sbb
iret
xor
repnz
dec
xor
and
or
xlat
xchg
or
lods
jne
sub
add
rcll
lea
add
lock
std
dec
mov
xchg
xor
and
rclb
daa
jp
push
push
cmp
xchg
push
push
xor
mov
add
mov
pop
pusha
lcall
jo
xor
enter
cltd
shlb
sub
push
add
xchg
pusha
cmp
xor
das
sahf
call
xchg
ficompl
push
jnp
cmp
aam
test
pop
push
pop
sbb
lds
mov
inc
add
adc
sbb
or
insb
dec
xor
inc
fsubrs
mov
add
sbb
and
jo
push
jno
in
hlt
in
out
xchg
inc
sbbb
mov
ret
insb
mov
jnp
ror
adcl
and
push
jnp
or
dec
pop
add
mov
jg
leave
add
shlb
pop
popf
sub
das
daa
dec
nop
add
mov
sub
push
mov
or
push
xor
sbb
rorb
adc
push
pop
push
sbb
ror
dec
shrl
pop
stc
outsl
adc
add
cmp
push
mov
daa
or
imul
add
push
adc
lea
mov
adc
scas
scas
push
into
addb
xchg
fimuls
int3
inc
or
pop
jno
cmp
insl
mov
shrb
adc
ret
xchg
cmp
mov
fistl
add
push
xchg
jo
cli
inc
faddl
adc
xchg
into
enter
or
adc
add
into
sahf
je
dec
cmp
imul
push
xchg
es
mov
xor
or
dec
xchg
data16
push
pop
and
and
add
addb
inc
and
int3
xchg
inc
dec
int
lret
jno
in
rorb
push
movsl
lods
rclb
lahf
das
inc
hlt
sub
cs
test
xchg
aam
outsl
shll
mov
or
or
imul
or
popf
popa
scas
inc
fbld
push
movsl
sub
or
sbb
je
loopne
les
inc
icebp
jo
leave
cmp
mov
or
or
les
cmp
lahf
lcall
pop
push
or
mov
fsubr
or
leave
inc
adc
or
outsl
xlat
push
nop
mov
xor
rorl
loopne
cmc
jp
ljmp
xchg
das
or
pop
and
mov
lret
add
or
pop
mov
cmc
iret
je
or
and
add
pop
add
out
enter
add
jge
pop
int
mov
mov
mov
and
inc
xchg
and
add
out
int3
and
test
sbb
mov
or
push
pushf
add
jge
bound
dec
stos
adc
jbe
test
add
int
or
or
int3
sub
mov
cmp
lds
add
mov
jge
sub
lea
sub
icebp
push
mov
mov
sub
xchg
sbbb
hlt
mov
sbbl
leave
mov
clc
mov
and
shlb
pop
sub
and
or
cmp
shrl
inc
cmpsb
ds
sarb
add
xchg
outsb
or
jecxz
fdivrl
cmp
cli
or
movsl
inc
add
les
mov
outsl
add
test
inc
repz
mov
dec
and
mov
cli
leave
add
mov
lcall
or
dec
fnsetpm(287
push
add
test
xor
ja
sub
mov
mov
pushl
inc
jo
adc
test
cmp
add
ss
movsb
cmp
add
add
dec
adc
mov
sarb
mov
add
sub
cmpsl
add
jbe
rorb
arpl
int3
inc
sub
or
push
xor
loopne
xchg
mov
fists
mov
push
push
aam
popf
add
jl
add
and
push
bound
xor
xor
or
mov
pop
cmp
insb
ja
xor
sub
push
rcll
test
add
adc
nop
clc
dec
aas
add
js
xchg
add
and
mov
add
fmulp
inc
xor
add
xchg
lahf
cmp
and
dec
cmpsl
nop
xchg
mov
lods
out
cmp
xor
lahf
cltd
test
and
loop
fistpll
adc
stos
sub
sahf
movsl
dec
shll
or
and
fisttpl
mov
xor
pop
inc
cld
cmpsb
jb
pop
dec
out
in
add
ret
mov
add
mov
pop
mov
insl
mov
aaa
mov
sub
or
xorb
mov
aam
ret
xlat
mov
jle
xlat
mov
cmc
add
push
mov
mov
out
test
mov
pop
ficoml
or
imul
je
movsb
sub
test
fcmovnb
pop
lahf
sub
cs
repz
aam
dec
outsb
shrb
gs
add
xor
lock
into
jb
clc
lcall
mov
mov
add
xor
pop
add
bound
stos
xchg
movsl
and
push
add
int
testl
test
xchg
insb
adc
sarb
mov
pop
sub
add
cmp
or
shll
cmpsb
pusha
mov
clc
dec
mov
push
inc
and
push
ljmp
adc
test
xchg
jmp
sub
mov
mov
xchg
enter
rorb
int3
lret
das
loope
stos
inc
addb
pop
ficompl
fs
mov
cmp
into
mov
xchg
or
inc
lds
mov
adc
jle
or
cmp
xchg
pop
leave
lds
xchg
add
cld
add
or
sarb
mov
add
mov
add
cmp
sub
sub
loopne
add
fnstenv
cmp
add
fsubs
push
mov
add
stc
daa
xchg
sub
test
mov
leave
add
inc
popa
nop
and
ss
rcrl
adc
add
mov
aam
call
pop
ljmp
inc
push
jo
cwtl
sub
lock
push
xor
iret
pushf
aas
popa
pop
push
xchg
add
mov
pop
cmp
fnstcw
xor
aad
add
xchg
call
add
jg
or
dec
jo
sub
sbb
fcoms
pusha
cmp
mov
add
adc
icebp
enter
test
mov
je
aas
sbb
in
pushf
or
dec
cmp
gs
cmp
in
adc
mov
fwait
aad
and
stc
insb
add
push
sub
subl
xchg
or
inc
or
stos
das
jg
in
pushf
dec
pusha
mov
inc
push
xchg
nop
xor
imul
or
clc
cmc
add
fstl
imul
jae
pop
shlb
mov
xor
aaa
enter
lahf
hlt
mov
shlb
push
xchg
outsb
mov
and
in
gs
mov
mov
sbb
dec
ljmp
xorl
pop
xor
push
or
imul
dec
dec
and
inc
movsb
adc
jl
push
xchg
add
std
sarl
cmpsb
add
xor
les
dec
cwtl
sbb
push
ss
mov
dec
pusha
movsb
pop
or
pop
add
cvttps2pi
jl
pop
hlt
xor
add
sbb
std
rclb
inc
push
add
push
sub
sbb
push
xchg
cmc
sub
sbb
dec
add
dec
cmp
adc
nop
or
inc
add
mov
push
xor
add
inc
dec
test
nop
xor
add
push
les
mov
insb
jg
dec
sbb
enter
enter
mov
test
sbbl
push
pusha
and
loopne
jecxz
mov
aas
mov
add
shl
adc
mov
inc
rcr
push
cmp
and
inc
or
sub
push
mov
test
add
add
mov
scas
inc
notb
xchg
or
call
adc
cmc
and
sti
movsl
add
xor
sbb
gs
dec
lods
inc
sub
enter
mov
mov
pusha
mov
pop
xchg
aam
sbb
xchg
xor
std
outsb
aad
movsb
xchg
jae
cmc
loop
mov
adc
movsb
jge
add
stos
call
movsb
xchg
dec
enter
adc
lret
mov
and
mov
or
add
mov
loope
inc
inc
xor
lea
mov
call
dec
sub
push
dec
jno
lock
lahf
stc
lock
fistps
mov
mov
add
fnstenv
sbb
cmp
sbb
inc
cli
mov
add
push
xor
or
or
and
jbe
jo
or
rorb
inc
movaps
cld
pop
mov
cmp
fdivrl
jno
adc
test
xchg
mov
aam
enter
into
mov
add
xchg
lea
mov
add
push
lahf
mov
roll
outsl
jmp
or
sub
in
add
cmp
add
leave
test
adc
pop
xor
adcb
xchg
shr
pop
and
lods
scas
dec
sub
inc
lret
or
arpl
mov
or
jecxz
xchg
in
adc
imul
jle
negl
or
and
loopne
lods
sub
or
movsl
rorl
aam
mov
mov
nop
cmp
out
adcb
jge
lock
or
arpl
sbbb
test
stos
jo
jo
inc
aad
sub
mov
test
sbb
outsb
std
cwtl
jle
cli
jp
pop
imul
add
je
out
sahf
pop
mov
in
nop
mov
adc
add
into
rcrb
jno
shr
sbb
jo
cmp
push
je
sbb
push
pushf
add
sub
movsl
add
and
into
ds
ficoml
les
adc
or
cmp
jnp
add
xor
repnz
subb
mov
pop
or
orl
xchg
cmp
or
dec
xchg
sub
hlt
mov
add
fcoms
pop
or
fisttpl
jmp
das
inc
or
jbe
shlb
and
mov
add
mov
call
shl
ret
xchg
pop
sub
jnp
xchg
pop
and
pushf
dec
mov
sbb
ss
insl
push
dec
popa
ja
mov
std
loop
jmp
or
pop
or
mov
add
xor
sub
mov
mov
xchg
dec
push
inc
std
sub
dec
icebp
incb
pusha
add
enter
inc
into
dec
cmc
aam
insl
or
or
les
test
and
lea
dec
in
jl
xor
les
lods
rclb
add
out
into
cmpb
pmaddwd
adc
js
add
add
add
mov
mov
push
dec
leave
mov
add
aam
fstps
mov
xor
or
lods
jns
pop
xchg
dec
jo
cmp
cmovo
mov
add
sbb
mov
pop
cmp
cli
pop
mov
mov
rcr
and
xchg
call
leave
adc
mov
sbbb
rcrb
or
loop
mov
push
add
add
cmp
or
pop
dec
inc
mov
int3
popa
test
mov
mov
cmpsb
mov
add
sub
add
inc
in
cli
xchg
test
je
push
pop
arpl
vmwrite
shlb
lahf
jo
or
and
mov
sub
fs
mov
outsb
fwait
add
cld
cltd
mov
inc
mov
mov
or
addl
and
mov
or
or
xor
das
xor
rorl
test
dec
lret
push
pop
mov
adc
cmp
xchg
outsb
push
sub
aas
pop
and
mov
lret
lahf
fisubrs
or
fdivs
xor
leave
mov
jmp
xor
mov
iret
rorb
enter
inc
sub
or
outsb
inc
test
movsb
call
rorl
sub
in
mov
sbb
in
sbb
test
jne
out
cwtl
loopne
sti
pop
add
adc
ds
sbb
imul
pop
add
int3
push
clc
mov
jb
cld
outsb
lcall
push
fsubl
and
out
subl
adc
jp
clc
fldl
mov
jg
fldenv
pop
push
push
mov
repz
outsb
xorb
jmp
aad
xor
pop
sbbb
adc
sbb
inc
or
adcl
inc
sbb
inc
repnz
or
and
out
jle
pusha
jg
nop
and
dec
mov
sub
aas
push
mov
mov
or
ja
push
roll
push
push
adc
mov
fs
mov
cmpsl
jecxz
adc
or
and
mov
xchg
xor
or
cwtl
cmp
jmp
test
mov
push
rclb
pushf
add
inc
int
ds
hlt
xchg
sbb
mov
dec
sbb
mov
and
adc
negb
mov
and
shrl
notb
add
jnp
in
rorb
lcall
xor
mov
add
hlt
or
je
or
fwait
mov
mov
pop
inc
into
push
mov
cmp
push
scas
jbe
out
mov
pusha
add
sub
sub
inc
sub
dec
inc
add
outsl
or
in
cmp
mov
sub
push
add
ss
pusha
push
arpl
xchg
push
sarb
mov
dec
add
outsb
stos
lret
int3
mov
int
add
movsl
rolb
mov
jbe
xor
shlb
or
mov
push
rolb
add
enter
test
lods
push
or
xchg
rolb
aas
or
sub
cmp
mov
adc
movsb
rorb
fs
xchg
adc
xor
jmp
mov
nop
jle
mov
or
rcrb
and
mov
mov
imul
test
xchg
xchg
js
adcb
pop
push
fwait
add
addr16
flds
adc
out
inc
and
mov
fnstsw
insb
add
sbb
cmp
mov
dec
popa
cltd
pop
cmp
neg
nop
enter
fs
inc
or
rcr
cmp
xor
mov
add
mov
jge
adc
or
add
out
or
mov
add
movsb
andb
sub
imul
dec
inc
shlb
lock
sbb
inc
mov
and
or
or
xchg
dec
js
add
dec
repnz
sbb
pusha
xor
pop
aas
and
adcb
xchg
cmpsb
cli
flds
push
inc
scas
add
aas
call
movsl
and
inc
add
out
dec
or
or
psubusw
cmp
rcll
fwait
pop
add
jo
test
addr16
pop
sub
int
add
pusha
outsb
add
ja
xchg
adc
outsl
pusha
inc
aaa
add
movsb
cmp
andl
sahf
mov
in
cmp
xor
nop
int3
inc
adc
icebp
bound
mov
lock
dec
jns
xor
cmpsl
sub
sbb
inc
mov
cwtl
lods
pop
out
xchg
push
je
bound
mov
and
lods
or
cwtl
push
push
push
iret
mov
pushf
call
sahf
daa
cmp
nop
push
mov
out
test
or
sub
jl
cmc
mov
add
or
xchg
nop
fs
sbb
popf
fimull
sub
mov
in
add
or
add
cmp
fisttpll
loopne
incb
daa
sarl
cmp
push
cmp
push
mov
daa
lods
xchg
in
add
and
add
mov
inc
sub
call
push
rorb
pop
lahf
mov
push
clc
sbb
xchg
dec
or
loope
mov
xorl
adc
xacquire
mov
mov
sbb
xor
mov
addr16
mov
push
daa
rcll
das
lods
bound
nop
mov
push
push
imul
sbb
inc
mov
xchg
test
rolb
push
int3
stc
push
enter
aas
xor
push
inc
jno
pop
push
push
add
enter
stos
sbb
xlat
cltd
sub
sub
movsb
or
push
iret
mov
loope
push
adc
add
cmp
add
bound
testl
in
subb
add
push
shlb
clc
push
pusha
mov
cmc
xchg
shlb
inc
add
inc
int3
jnp
or
lret
adc
movsb
out
inc
leave
pushf
ds
add
cmc
mov
fwait
pop
add
cmp
jg
jns
add
subl
add
or
xchg
cmc
and
mov
pop
nop
lods
js
push
jae
mov
rorb
loopne
xchg
cltd
cmp
sbb
push
cmp
rolb
cli
out
fildl
push
cmp
rol
mov
mov
add
push
mov
and
pop
or
mov
sbb
xchg
mov
mov
test
xchg
outsb
xor
sti
push
xor
sub
hlt
pop
push
adc
iret
sub
incb
xchg
das
or
xchg
jno
add
rolb
xchg
pop
enter
inc
sbb
jg
fwait
or
pop
inc
mov
mov
cwtl
mov
rcll
adc
insb
or
leave
or
xor
push
jl
das
or
mov
adc
pop
into
insb
xlat
sbb
add
mov
xor
push
push
or
and
rclb
aaa
pop
adc
jnp
loope
add
pop
dec
into
mov
mov
pop
call
lods
and
test
push
mov
push
mov
push
sbb
xor
push
call
mov
outsl
xchg
scas
imull
xchg
jl
cmp
cwtl
arpl
mov
loopne
clc
xor
cmpsl
sub
jae
mov
mov
xchg
xor
add
inc
clc
cmpsl
or
adcb
cs
pop
jmp
add
outsb
dec
out
clc
sub
mov
xorb
rcll
aam
lods
add
rol
xor
add
xlat
and
ret
iret
pushf
pop
in
loopne
add
leave
pop
adc
add
xchg
lds
test
stos
test
adc
sbb
inc
mov
pusha
push
int3
arpl
std
pop
rolb
data16
xchg
and
add
mov
int
mov
pop
stc
insb
add
mov
jo
push
pop
ljmp
and
jne
pop
mov
cld
add
pop
dec
add
stos
test
lds
testb
sbb
insb
in
xorb
in
nop
bound
or
outsl
incl
ret
clc
add
pop
push
pop
mov
push
dec
test
cli
rorl
xchg
and
and
clc
stos
mov
pop
mov
jns
insb
pusha
sahf
popa
imul
ficomps
je
fsubr
aaa
add
movsl
xchg
xor
mov
jge
nop
arpl
push
xchg
and
cmpsl
push
add
lods
add
test
out
inc
pop
hlt
dec
mov
and
sub
scas
sub
xchg
loopne
stos
fwait
enter
add
test
lahf
iret
sbb
imul
out
enter
insl
clc
cmpb
out
push
pcmpeqb
dec
and
add
xchg
and
popa
sub
fwait
add
aad
add
lock
lods
jnp
sub
mov
push
add
jmp
sbb
call
in
sbb
pop
mov
js
pop
shrb
and
cld
jp
push
mov
push
and
add
iret
and
push
or
xchg
aam
mov
cwtl
call
xor
insb
pop
and
xchg
add
stc
sbbb
ljmp
js
sub
pop
xchg
add
icebp
in
mov
push
addl
xor
sbb
shl
andb
jge
jae
and
adc
inc
sbb
adc
aaa
sub
lcall
push
pop
cmpsl
cwtl
loope
adc
add
xchg
sub
add
pushf
jp
jne
mov
adc
test
xchg
stc
sbbb
fildl
bound
push
mov
mov
xor
xchg
outsb
xchg
inc
adc
inc
or
mov
xchg
pop
in
mov
pusha
repz
mov
repnz
adc
xchg
sub
mov
stos
push
jb
inc
pop
nop
mov
pop
in
add
or
in
inc
xchg
xchg
mov
or
mov
inc
aas
aam
stos
repnz
loopne
cs
xor
cmp
inc
add
cmp
xor
shrb
lock
push
pusha
and
jl
pop
ret
sbb
mov
dec
data16
inc
hlt
out
in
sub
cmp
jmp
pop
neg
jb
and
cs
jo
sub
imulb
or
into
sar
lock
lcall
push
xor
idiv
adc
ret
push
add
sbb
and
cmp
and
cmp
mov
cmpnleps
fiaddl
ss
mov
jae
jmp
and
clc
movl
in
loopne
cld
or
pop
je
push
and
sbb
mov
inc
mov
in
mov
add
insl
mov
loop,pt
cmp
fs
lahf
fadds
lret
aam
push
mov
and
pop
enter
pop
or
loopne
mov
bound
inc
cmpsl
adc
sub
divl
and
daa
sbb
gs
pop
jle
pusha
push
js
cli
adc
movsb
enter
hlt
push
add
mulb
aaa
filds
movsl
nop
mov
andb
and
mov
in
pop
and
aaa
imul
dec
jae
aad
mov
add
and
cmpb
mov
repnz
iret
nop
push
rcrb
imul
add
and
inc
xchg
xchg
mov
add
cwtl
movl
add
call
imul
adc
or
adc
push
mov
cmp
mov
fildl
add
gs
pop
dec
add
imul
fs
sbb
inc
mov
xor
or
imul
leave
xor
inc
adc
cmpsl
aaa
jp
add
xchg
or
sub
xor
lods
sbb
pop
sahf
mov
adcl
adc
orb
push
call
sub
push
jp
or
push
repnz
ss
dec
pop
push
jae
jbe
add
sbb
test
push
into
cmc
adc
jg
cmp
sub
pushf
jbe
das
inc
int3
verr
jns
iret
add
sub
xor
loopne
mov
inc
mov
push
rcrl
les
jne
stc
jmp
fsubrp
push
sub
repnz
syscall
cmpsl
xchg
pop
iret
mov
mov
push
mov
dec
enter
mov
out
mov
push
outsb
jle
xor
mov
inc
or
and
fbld
js
sub
mov
xor
arpl
int3
or
cmp
and
orl
lea
out
jp
rolb
test
sti
jo
jmp
fistpl
add
cmpsb
dec
dec
mov
out
jns
adc
or
xchg
test
fsubp
push
or
push
pusha
add
test
roll
adc
fwait
mov
add
sub
adc
mov
pop
pushf
into
outsl
mov
mov
cli
add
pop
push
mov
or
enter
mov
mov
inc
popf
adc
cld
loopne
push
frstor
adcb
push
addl
cmp
enter
lret
scas
cmp
pop
ja
jge
lock
mov
sbb
loope
jo
test
inc
add
adc
pop
pusha
or
pop
add
add
mov
lret
cmp
push
shlb
sahf
and
stos
jnp
pop
lods
ret
stos
in
pop
shlb
push
push
repz
push
xor
add
lcall
xor
jns
xor
in
cmp
lret
loop
push
lock
icebp
add
les
sub
scas
mov
lods
mov
cmp
pushf
add
aas
dec
repz
add
inc
xchg
lods
add
push
mov
cmp
and
scas
out
mov
pop
sahf
sub
add
jbe
fwait
mov
ja
sub
push
ds
and
daa
mov
iret
insl
mov
push
nop
xchg
inc
or
bound
inc
cmp
dec
sub
mov
stos
rolb
inc
add
pop
fs
push
push
add
xchg
push
sbb
add
jmp
inc
out
jns
ret
iret
add
push
ds
cmp
cmpl
add
xor
ljmp
mov
stos
jo
repz
jne
dec
lock
jge
add
sbb
and
stos
inc
lea
add
jne
push
nop
rorb
int
ds
and
test
mov
sub
sbbb
pop
pop
adc
dec
mov
jae
sub
fcomip
inc
nop
fsts
mov
push
dec
jae
in
dec
rclb
push
mov
sub
xchg
das
or
sbb
xor
shrb
lcall
mov
enter
pop
pop
sti
sbb
add
mov
sahf
cmp
insl
popa
rcrb
ret
lcall
xchg
or
pop
adc
data16
mov
int3
jp
mov
int3
jecxz
add
in
inc
shl
xchg
jo
xor
les
mov
hlt
add
sub
js
xchg
stos
xchg
and
test
sbb
and
bound
nop
xorl
dec
cmp
ror
cmp
call
stos
push
jb
push
adcb
icebp
jo
loopne
fld
add
push
xchg
adcb
sub
adc
xor
mov
stc
loope
pop
fs
sub
fcompl
add
cmpsl
pop
cmpsb
push
mov
dec
lods
push
mov
ror
adc
icebp
loope
cwtl
mov
pop
cmpsb
cmp
mov
mov
popf
sub
xchg
icebp
leave
pop
aas
push
sub
and
add
jl
sub
fstpl
pop
mov
add
call
add
pop
lock
cmpsl
data16
les
fidivl
add
hlt
jne
mov
cld
popf
or
in
out
dec
mov
sbb
sbbb
cmpsb
pop
dec
xorl
inc
mov
mov
orl
int3
movl
and
pop
sub
jae
enter
sbb
add
shl
ror
cmp
sbb
mov
loopne
int3
scas
mov
add
dec
add
mov
out
sbb
and
add
call
add
push
xchg
mov
cmp
dec
leave
push
dec
add
push
xchg
ret
or
mov
xchg
cld
mov
loopne
mov
stos
xchg
and
dec
lock
repnz
bound
or
leave
cltd
sub
cmpsl
sbb
shll
add
int
imul
in
mov
pop
ljmp
jo
push
jg
sbb
xor
mov
shlb
add
push
repnz
loopne
jmp
call
jae
outsl
test
dec
in
and
xchg
psrlq
mov
sbb
add
data16
jne
and
add
add
sbb
push
not
add
pop
inc
inc
in
cld
je
sbb
push
out
xor
out
pusha
ret
into
cmpsl
daa
mov
subb
xchg
push
jb
ljmp
cmp
or
push
dec
test
add
mov
dec
sbb
jmp
xchg
adcl
pop
nop
jle
int3
or
dec
pushf
aad
jbe
add
jne
sbb
or
clc
adc
xchg
test
inc
add
in
lock
lea
cmp
addr16
or
jp
pop
cmpsb
mov
xor
sbb
repnz
mov
mov
fiaddl
adc
pushf
popl
addb
clc
add
mov
nop
inc
nop
imul
mov
pop
pop
or
sub
ja
rcr
push
add
lcall
jae
repnz
push
jp
cmpsb
call
addr16
sbb
jbe
push
ret
inc
shrl
loopne
dec
rclb
das
mov
sbb
push
hlt
adc
jp
and
sar
ret
sub
jae
add
mov
jae
pop
jo
sbb
dec
sbb
in
jae
cwtl
jge
cmpsb
mov
adc
push
add
outsb
sbb
dec
orb
stos
in
comiss
mov
out
mov
pop
push
mov
jae
xor
mov
xor
push
cmp
ret
cmp
shrb
int
xor
or
add
and
inc
das
mov
imul
arpl
add
pop
insb
mov
add
adc
test
dec
out
inc
cwtl
sub
inc
jb
add
sub
mov
leave
out
mov
or
cmp
xlat
adc
mov
js
dec
or
call
xchg
cmp
mov
xor
pshufw
mov
je
xchg
adc
in
jbe
rorl
andb
leave
xchg
adc
mov
inc
or
jae
sbb
mov
xchg
addr16
mov
jge
adc
xchg
push
ljmp
icebp
repz
jle
enter
mov
pop
cmp
mov
fisubl
add
scas
xchg
sarl
cmp
push
xor
inc
fdivrs
pop
mov
ret
fcomip
or
add
hlt
test
mov
inc
and
scas
jge
xchg
inc
shll
stos
inc
or
pop
xchg
subb
loope
add
out
push
sbb
or
call
jnp
add
add
cmp
xor
pusha
paddq
xor
jl
imul
repnz
pop
push
jmp
popa
shr
loopne
pop
enter
ljmp
sub
adc
inc
xor
dec
or
test
sbb
adc
js
in
sub
cmp
and
xor
and
adc
call
out
push
lcall
or
scas
lods
fcoms
add
data16
adcb
add
out
stos
lahf
in
add
popf
rcrl
lock
stos
mov
push
fldenv
movsb
mov
inc
insb
mov
mov
xchg
add
xchg
dec
lcall
sbb
mov
xchg
sbb
sub
add
movsl
repz
cwtl
mov
out
lock
hlt
shrb
add
pop
and
and
imul
xor
mov
push
popa
scas
in
add
ret
jns
cld
outsl
call
in
mov
xchg
mov
pusha
lret
jmp
mov
lahf
mov
rcrl
loope
inc
jp
or
pop
add
or
stc
xor
push
add
mov
roll
mov
jl
outsl
sbb
add
cmp
clc
push
pop
and
pop
push
and
add
je
sbb
pop
aam
lret
lock
pop
fnstsw
mov
push
scas
add
aam
pusha
dec
push
out
add
into
dec
and
stos
sarl
aad
repz
mov
scas
add
xor
sub
js
adc
movsb
or
or
xor
popf
add
push
xor
sbb
jo
hlt
xchg
cmp
in
add
sbb
add
sbb
inc
add
inc
lock
push
je
push
movsl
je
psrlq
dec
and
loop
or
out
dec
pop
movsb
xchg
addr16
in
fcompl
sbbb
mov
fldcw
pop
les
or
dec
fadds
pop
cmpsb
jmp
sbb
mov
sbb
ret
sbb
inc
clc
pushf
mov
stos
sub
push
fldt
lea
iret
xchg
xlat
pop
test
add
mov
lds
sub
test
imul
div
dec
loopne
and
fsts
imul
cmpsl
cmpsb
scas
psrlq
sbb
xlat
mov
fwait
pop
cwtl
icebp
xchg
nop
jle
shr
cmp
jae
test
dec
add
iret
cli
cmp
and
jecxz
shrb
add
dec
repnz
inc
lret
cmp
gs
mov
lcall
test
xor
jmp
idiv
int3
adc
sub
cmc
sbb
add
pop
mov
push
xchg
or
cs
dec
xor
jnp
add
outsb
inc
out
xor
fcmovnbe
and
or
pushf
mov
dec
test
orl
scas
mov
loopne
aaa
sub
nop
add
cmc
cmpsl
pusha
inc
cld
lea
sbb
mov
sbb
xor
mov
add
or
fwait
gs
les
push
xchg
or
cmp
loop
dec
outsb
aam
cld
xor
xchg
inc
movsl
loopne
test
int3
dec
icebp
adc
inc
xchg
js
push
jge
jp
insl
mov
lods
cmp
div
icebp
sub
pop
rolb
and
repz
dec
imul
push
mull
cmc
in
lret
jns
jae
hlt
xor
inc
dec
and
mov
daa
xchg
push
add
adc
inc
add
and
mov
push
ret
xor
push
xchg
mov
insb
in
notl
fisubrl
add
das
xchg
fstpl
aam
mov
pop
sbb
add
and
fcoml
mov
outsl
in
cmp
add
inc
leave
sbb
scas
cmp
test
test
popa
lcall
loop
data16
adc
dec
dec
lahf
inc
add
sbb
cmc
movsb
inc
fmuls
shl
insb
cs
pop
sub
pusha
and
sbb
movsl
and
mov
stos
inc
in
add
dec
dec
sub
and
add
lahf
mov
sbb
or
imul
adc
aaa
mov
jo
arpl
push
sbb
add
outsl
loop
call
inc
jl
push
aas
andb
ret
sub
hlt
stc
dec
add
xor
sbb
cmp
pusha
mov
lock
movsl
adcb
add
adc
inc
enter
cld
mov
loopne
push
aad
cwtl
or
mov
xchg
dec
add
cmpl
enter
cmpsl
mov
rol
mov
sbb
and
add
sarl
cwtl
insb
hlt
rorl
jmp
frstor
add
jae
cmc
push
loop
cwtl
ljmp
jb
push
cmp
mov
fisubrs
adc
mov
fstl
popf
stos
add
aas
jecxz
sbb
aam
and
and
arpl
ja
jle
data16
xchg
mov
push
jl
js
std
jg
repnz
insb
xor
test
pop
sbb
cmpsb
cld
push
std
sbb
or
enter
sub
add
dec
xchg
lret
out
xchg
pusha
aas
movntps
nop
pop
mov
mov
jnp
dec
lock
sbb
cld
jle
in
jbe
divl
mov
fnstenv
test
adc
or
mov
mov
enter
mov
xchg
pop
cmpsl
sbb
mov
push
aam
jge
orb
gs
cld
out
enter
add
jge
xor
pop
adc
inc
les
cld
add
loop
insl
xor
mov
adc
xchg
clc
or
mov
fisubs
pop
pop
in
dec
add
push
add
shll
scas
jns
sbb
out
push
div
call
roll
jae
mov
pop
xor
add
loop
xor
xchg
mov
pop
mov
adc
lods
sub
push
sarl
lret
mov
leave
dec
scas
mov
lahf
jo
add
das
popa
adc
fs
or
add
jb
mov
pop
call
pop
sub
lret
mov
add
lcall
add
mov
xchg
movsb
movl
mov
adc
sbb
je
loopne
or
cmp
sub
mov
icebp
add
pop
call
das
pop
add
xor
add
sub
push
add
dec
jo
jle
pop
enter
pop
pop
push
arpl
rol
mov
push
xor
ja
xor
js
gs
jnp
mov
lcall
xchg
cli
fnclex
and
and
lock
scas
add
int3
push
inc
jge
jno
sti
mov
test
sbb
movsb
push
je
jg
xlat
and
xor
add
or
andb
ret
call
pop
rcl
and
sbb
add
pushl
jecxz
add
pop
pushf
sbb
add
ror
xchg
sbb
jae
and
lods
in
cmp
add
aas
xchg
dec
test
pop
jo
push
jge
or
jl
lock
add
xor
pop
mov
inc
repz
add
pop
and
out
movsl
hlt
test
cmp
repz
mov
xchg
add
lods
or
push
push
push
push
int
adc
ljmp
pop
push
jle
ds
pop
mov
xor
mov
mov
add
xchg
in
or
mov
insb
mov
fidivrs
jo
mov
add
fwait
aas
mov
push
add
or
cld
sub
mov
ltr
movsl
xor
pop
pop
jecxz
jp
xor
imul
mov
adc
jle
adc
add
insb
notb
cmp
add
jne
pop
outsb
cld
stos
pusha
lea
stc
aam
push
testb
inc
in
dec
jno
cli
add
imul
iret
rclb
mov
cmp
call
cmpsl
sub
push
adc
xchg
lret
add
incl
mov
sar
xor
xchg
jge
and
lahf
rolb
jne
inc
mov
inc
mov
pop
mov
insb
and
aad
nop
je
add
jecxz
mov
divb
jno
and
fildl
jl
sti
ss
sbb
pop
add
adc
lock
jae
add
dec
dec
sub
sub
inc
and
icebp
fwait
xlat
mov
inc
repz
shlb
push
nop
or
pop
ljmp
ret
test
addb
into
mov
sub
mov
sbb
xor
pop
add
pop
notb
cmp
or
jb
dec
loop
inc
jbe
add
out
sub
adc
and
pop
in
iret
xor
test
clc
jns
dec
cmp
sub
sbb
xchg
inc
cmp
out
mov
add
ret
add
lock
pushf
and
sub
test
adc
inc
movl
aas
outsl
push
stc
xchg
dec
add
insb
dec
add
jae
add
inc
insl
mov
cli
push
test
adc
js
rcrl
out
add
sub
inc
shlb
mov
hlt
or
xor
imul
add
leave
sti
je
add
pop
nop
or
cmc
cwtl
xrelease
add
add
sub
xor
pop
int
jg
test
fdivs
xorl
nop
sbb
divb
xchg
in
cwtl
fstpl
inc
arpl
addr16
lahf
push
xlat
adc
push
inc
insb
push
or
add
inc
into
idivl
les
inc
clc
fisubl
adc
sub
faddl
sarb
cmp
adc
aam
push
xchg
dec
rcl
push
pop
mov
rcl
aad
jge
adc
add
adc
jo
inc
out
jb
rcll
adc
cwtl
addr16
and
jge
ja
adc
adc
mov
sti
in
inc
push
mov
ljmp
jl
scas
cs
faddl
sub
xchg
testb
xor
enter
cld
clc
lods
mov
lret
jp
jno
add
inc
hlt
lods
popf
lea
ja
add
fucomp
out
or
fwait
cmc
adc
xor
add
in
xchg
fldenv
jle
je
add
cmp
orl
sub
test
mov
rclb
nop
cmp
popf
and
lods
mov
arpl
enter
je
rcr
icebp
xor
sub
jp
int3
push
sub
cmp
pop
mov
jmp
lahf
pop
stc
das
shrl
jo
sub
adc
fwait
pop
mov
and
subl
and
mov
test
mov
enter
lea
push
ficoms
test
inc
dec
in
xchg
add
sbbl
int3
sbb
inc
ljmp
mov
push
fwait
dec
and
or
push
pop
mov
jns
pushl
mov
hlt
add
stc
jmp
xor
call
pushl
add
test
lea
sub
jmp
or
clc
outsb
add
stc
adc
cwtl
add
std
inc
ljmp
push
jl
dec
loope
shlb
lea
ljmp
stos
or
scas
push
out
into
inc
adcb
cmpsl
lock
pop
in
fimuls
pusha
mov
xor
jmp
arpl
ror
pop
xchg
mov
les
mov
repz
jmp
or
push
jb
test
pop
add
xchg
add
xchg
add
lds
push
pop
add
arpl
push
fwait
int
xchg
add
jg
push
add
sti
mov
out
dec
adc
mov
arpl
in
insb
out
sbb
ss
add
rcrb
jecxz
xchg
xlat
inc
or
push
xchg
push
jg
jne
push
xchg
mov
iret
and
push
hlt
lea
add
int3
cmp
inc
stos
xlat
inc
pusha
mov
pop
add
mov
jno
xchg
icebp
leave
cmp
stc
sahf
jae
jo
add
xchg
mov
nop
jnp
pop
ja
cmp
test
shll
cld
cmp
xor
cld
dec
aas
and
mov
or
fiaddl
mov
clc
pop
or
ret
ret
js
shrl
aam
fwait
add
ljmp
ds
or
out
jnp
pinsrw
ja
xor
adc
rolb
push
test
inc
push
xor
add
cld
jp
sbb
fisubs
hlt
das
movsb
add
lea
add
xor
pop
stc
pcmpgtw
xorl
xor
mov
cmpb
test
pop
das
mov
cmpsb
or
mov
jp
xchg
adc
add
lods
mov
in
add
sbb
sbb
loopne
rcl
mov
mov
je
xorb
add
jle
gs
in
pusha
jo
mov
bound
sub
ljmp
hlt
movsb
mov
sub
add
lods
mov
jae
pop
decl
cmpsl
push
out
push
test
pop
mov
call
or
adc
pop
stc
pop
add
sahf
scas
push
mov
mov
cmp
mov
pop
jp
mov
je
mov
adc
xchg
or
scas
and
imul
fwait
test
add
xchg
and
cltd
pop
cmp
mov
dec
jg
jno
add
shlb
iret
lods
mov
push
sub
imul
add
jge
aas
out
in
add
ss
add
mov
sub
rcl
add
rcll
aad
std
in
pop
movsb
push
sahf
push
mov
add
add
push
shl
jmp
outsl
or
das
cmpsb
mov
add
mov
or
inc
jnp
push
dec
add
imul
dec
add
icebp
mov
sub
pusha
add
pop
and
stc
cmp
dec
or
pop
fwait
sar
int
fiadds
loope
mov
pop
pop
leave
mov
sub
add
in
das
stos
cmp
mov
fisubl
fimuls
sbbb
and
fwait
inc
jle
in
pop
pop
add
lahf
popf
fildl
out
loope
icebp
pop
lock
sarl
add
mov
adc
lea
mov
add
repz
divl
orb
repnz
or
xor
and
or
xor
mov
loopne
enter
repnz
mov
outsl
aad
clc
add
addr16
and
inc
mov
mov
mov
fisttps
int3
and
subb
add
sub
adc
add
icebp
iret
ret
popa
mov
fsubl
push
es
loope
add
aas
add
mov
mov
pop
ds
dec
mov
cltd
add
push
xor
dec
lods
aam
sub
sbb
leave
add
fnstcw
cmp
inc
dec
imul
add
mov
mov
repz
test
cmp
push
cmp
mov
jl
add
aaa
sbb
insb
scas
dec
add
sub
or
mov
xchg
dec
add
arpl
mov
scas
and
cli
aam
add
lock
mov
xor
mov
hlt
pop
rcr
mov
add
xchg
fs
adc
add
cmp
ljmp
shl
pusha
mov
xorb
mov
add
xor
or
inc
test
push
push
rcl
mov
lods
add
loopne
xor
add
out
mov
push
cltd
scas
mov
add
sbb
sub
out
pop
cmp
es
push
jnp
loopne
xchg
push
add
les
cmp
add
scas
fisubl
dec
mov
jg
xor
inc
inc
mov
jl
inc
nop
jge
hlt
in
mov
xchg
movsb
fistpll
add
jp
test
mov
sbb
or
cmp
fdivrp
shlb
sbb
dec
push
daa
cmp
cwtl
loop
ja
cli
test
sub
movsl
leave
add
push
in
data16
shll
imul
std
adc
jle
rcrb
mov
and
adc
repz
xchg
pop
push
cmp
pushf
xchg
enter
cli
xor
fidivrl
popf
rorb
sbb
lret
lahf
push
cmp
mov
es
jne
or
rolb
bound
adc
scas
or
aaa
cmp
out
and
hlt
jecxz
daa
jle
pusha
push
sbb
inc
jg
mov
in
dec
push
mov
cltd
enter
sbb
mov
ret
add
jns
repnz
rclb
push
stc
push
jo
xor
scas
insl
sbb
into
or
das
xchg
mov
sbb
mov
inc
rcrb
add
popf
loope
add
push
jmp
or
jg
pusha
daa
cmp
pop
sbb
jg
inc
add
dec
add
mov
add
push
cmpsb
mov
dec
std
mov
sbb
ret
or
testl
push
sub
addr16
push
cmp
inc
xlat
or
sarl
push
add
mov
data16
fstpl
rolb
je
jl
jecxz
jge
pop
mov
cmpb
pusha
in
out
leave
or
mov
xor
push
add
movsb
rolb
jno
ds
mov
add
aam
jb
dec
iret
test
fiaddl
pop
sti
addb
jb
aas
add
rcr
js
push
add
aam
or
aad
add
inc
cwtl
xchg
test
pop
adc
push
or
dec
mov
lahf
pop
sbb
mov
sub
mov
add
jmp
subb
loopne
rorl
mov
add
mov
mov
push
sub
sahf
cltd
and
iret
push
lahf
loopne
lret
jge
add
xchg
push
xchg
andb
loopne
shrl
nop
jo
sti
jg
arpl
lcall
dec
adc
inc
xchg
pop
nop
jnp
mov
gs
push
mov
cmc
add
and
cmp
pusha
out
call
fistl
dec
dec
es
add
sub
pop
and
jp
xchg
mov
push
push
adc
jbe
lds
sbbl
or
add
push
lock
inc
jb
jl
pop
repz
mov
push
ret
push
sub
xor
rolb
adc
mov
test
xor
add
fistl
xor
movsl
test
flds
add
xor
js
sti
add
xchg
int3
shrb
dec
ret
and
mov
aam
jle
add
xor
fwait
add
inc
insl
dec
dec
stc
pusha
pop
and
cmpl
nop
rclb
xor
inc
das
jbe
xchg
inc
or
sub
add
xchg
sub
jecxz
rclb
imul
mov
fs
in
adc
rorb
ret
pop
add
incl
xchg
pop
pop
cli
mov
data16
adc
mov
inc
add
jmp
mov
testl
pushf
add
inc
rorl
nop
outsb
loopne
add
mov
jge
dec
adc
insl
mov
nop
sub
sub
add
jno
ds
loopne
mov
add
inc
vpmulhw
fisubs
pop
add
cmp
fdivrs
adc
test
and
add
imul
add
test
sub
adc
add
sub
pop
and
push
add
jmp
dec
lods
ret
jg
pusha
sub
and
cmpsl
cmc
in
adc
cmp
ljmp
push
rolb
add
or
cld
cmp
mov
adc
nop
add
pop
cltd
inc
mov
sbb
popa
and
push
nop
outsl
add
roll
outsb
push
jecxz
and
inc
inc
les
stos
add
push
call
mov
inc
inc
ss
ret
repnz
add
insb
fldt
mov
into
cltd
add
adc
jae
cmp
add
or
sbb
paddd
pop
adc
orb
xlat
xchg
sub
adc
fidivs
test
sbbb
jo
cmpl
xor
pusha
repz
inc
jae
loopne
scas
pop
iret
jne
pusha
in
jo
ficoml
inc
lcall
adc
cmp
adc
insb
xor
xchg
out
sbb
pop
inc
lret
rclb
mov
fs
js
add
out
mov
je
pusha
mov
mov
out
add
leave
add
lock
adc
add
popf
lea
sbb
jns
sbb
out
fcomip
data16
ja
pop
add
mov
je,pn
push
mov
fnsave
push
dec
cmc
sbb
xchg
and
sub
outsl
loop
pop
aad
inc
std
pusha
subb
xchg
add
mov
push
into
sbbb
and
pop
outsl
jnp
add
pop
lods
push
shl
xchg
dec
orb
xlat
lock
cmp
cmp
imul
mov
cld
jae
insl
or
pop
sbb
cmp
loopne
or
outsl
or
jo
pushf
lcall
insb
or
mov
cld
sbb
xor
push
loopne
jl
sar
adc
cs
mov
mov
cmpl
filds
mov
enter
add
ja
push
jl
add
aam
test
pusha
push
pop
pop
mov
push
sbb
repz
in
pop
and
pop
aas
sbb
add
int3
test
ljmp
or
push
nop
xorl
cltd
jbe
mov
ret
adc
les
mov
adcl
ja
adc
dec
cmp
inc
add
xor
add
cmp
dec
pop
mov
aam
shlb
jecxz
rorl
mov
push
mov
xchg
js
push
push
scas
inc
sti
fsubl
xor
test
pop
push
aas
xor
xlat
aad
xchg
add
ja
fstpl
add
jecxz
add
jbe
sti
dec
loop
test
test
adc
addl
movsb
or
push
adc
je
jp
add
mov
xor
movsb
add
pop
loopne
dec
jb
jge
push
sahf
add
inc
pop
adc
push
shll
xor
mov
or
push
subb
fmull
or
lods
outsb
xchg
jg
test
push
adc
popf
xor
xor
add
por
inc
jle
scas
inc
flds
and
aad
rcll
add
mov
sbb
adc
inc
sbb
outsb
test
fcoms
adc
xor
sub
jge
add
and
pop
mov
sub
fmull
out
dec
or
fs
push
rolb
xchg
lods
inc
dec
or
clc
xor
add
mov
pop
push
pop
mov
xchg
and
std
add
push
mov
int3
sbb
add
popa
ret
jo
mov
clc
insl
das
push
lock
jecxz
xlat
aas
call
jg
in
add
mov
jmp
cmpsl
js
xchg
daa
sbb
inc
pop
out
fwait
jae
cltd
std
sbb
dec
jecxz
enter
jmp
lret
pop
into
daa
nop
push
popa
sub
and
push
push
cmovg
mov
in
aas
sbb
lcall
fs
icebp
adc
rcr
add
push
dec
dec
scas
fnstenv
pop
add
adc
mov
push
pop
fisubs
xor
sub
cmpsl
jns
add
das
hlt
push
or
add
fst
add
push
das
fildl
sbb
and
adc
out
stos
inc
fcomip
loopne
lret
pop
fs
les
add
mov
cmp
push
inc
add
dec
dec
push
and
popa
pop
cmp
loope
push
adc
xchg
aaa
lret
std
sub
test
add
mov
out
add
inc
lahf
add
xchg
scas
out
ja
add
cmp
add
sbb
add
fisubrl
mov
inc
xchg
mov
icebp
in
add
repz
js
pop
loopne
rorb
push
popf
sub
loope
xchg
and
xchg
mov
pushf
mov
mov
pop
pop
in
mov
cmp
sbb
jecxz
add
jge
ret
push
add
dec
inc
pop
sahf
fwait
ljmp
xor
loop
inc
dec
decl
push
dec
add
xchg
sub
es
out
cmc
clc
dec
cmp
enter
int
mov
cs
andb
xor
mov
aam
mulb
fdivrs
pop
pop
push
fldenv
mov
andb
mov
pusha
dec
and
mov
ss
push
test
fnstcw
push
js
add
push
jb
popf
mov
mov
add
xchg
stc
out
dec
loope
push
test
f2xm1
loopne
pop
mov
sub
jnp
lds
cmp
or
into
jp
add
arpl
sete
xchg
imul
aaa
in
add
push
jg
popa
std
add
je
orb
push
inc
data16
inc
pop
and
ret
std
pop
add
xchg
fnsave
pushf
mov
test
add
sbb
jecxz
stos
sbb
add
cmp
js
inc
stos
flds
notb
aas
push
sub
cmpsl
mov
fcmovbe
cmp
test
pop
mov
or
pusha
push
cwtl
mov
ja
add
mov
daa
push
je
sbb
popf
dec
std
push
cli
jae
repz
push
push
lret
xor
pop
lds
cli
hlt
xorl
aas
xchg
add
dec
js
push
cmp
add
out
lcall
jcxz
adc
add
orl
adc
mov
scas
push
adc
add
adcl
adc
jne
nop
add
push
lock
add
jnp
dec
imulb
add
mov
idivb
cmp
add
or
jp
pop
or
rclb
ficoms
adc
cwtl
cmp
imul
add
inc
push
sarb
sbb
cld
sbb
sar
ret
lcall
popa
jb
js
or
in
add
pop
ja
orb
pop
flds
push
insl
inc
lahf
decl
sbb
cwtl
or
sbb
mov
std
add
push
dec
jmp
xchg
lcallw
hlt
jb
aad
push
sub
add
or
sbb
adcb
ret
sub
movsl
xrelease
add
sahf
sub
bound
mov
lidtl
pop
mov
pop
dec
add
mov
aam
rorb
pop
test
clc
and
inc
and
arpl
lock
xchg
lock
cli
xchg
mov
xor
mov
jne
jge,pt
add
jp
idivb
sub
movsl
sbb
int3
out
add
and
lahf
pusha
cmp
dec
sbb
jne
inc
test
push
pop
push
int
mov
enter
cmp
and
movsl
adc
icebp
es
mov
movsb
jnp
orl
scas
dec
mov
ficompl
sbb
push
dec
xor
rolb
ficoms
adc
and
test
mov
in
or
adc
ret
add
in
cmp
dec
int3
arpl
add
adc
or
push
adc
dec
mov
insb
or
jp
in
or
leave
push
sbbl
in
xor
les
stc
das
add
xor
imul
out
lahf
adc
inc
lock
sub
cmp
sbb
incl
in
sti
add
loop
cmp
and
lahf
lea
test
add
stc
dec
mov
mov
xchg
add
mov
mov
inc
sub
in
loopne
and
pop
aaa
xor
push
or
and
dec
add
pop
and
pop
sbb
xchg
repz
les
dec
cmp
scas
cmp
or
xchg
stos
jl
mov
or
aam
or
das
je
addb
mov
ficompl
aam
ret
divb
das
xchg
test
xor
adc
pusha
out
push
xchg
jp
add
repz
loop
rcrl
push
add
jae
lods
sbb
jbe
jl
je
adc
add
jne
push
and
add
adc
pop
xor
inc
pop
inc
fadds
popa
cmpsl
and
push
popf
cmc
or
fnstenv
xor
mov
test
lods
sbb
iret
push
pop
pop
aad
pusha
xorb
sbb
xchg
std
mov
das
push
add
cmp
push
ljmp
stc
loopne
mov
push
inc
add
cmpsl
repz
fistpll
sbb
in
jo
out
fstps
ret
js
add
inc
test
push
nop
adc
movsb
insb
jne
cld
shlb
ret
imul
loope
aad
notb
adc
sbb
push
adc
fsubrs
dec
add
test
mov
sub
mov
inc
rorb
add
and
je
imul
cmp
inc
iret
test
cld
cmp
cwtl
add
sbb
test
bswap
dec
dec
adc
test
mov
cli
sub
mov
add
fadds
mov
outsb
mov
mov
ljmp
sbb
in
and
cmp
adc
mov
fsubs
fsubl
jl
je
pop
inc
add
out
lock
cmp
into
pop
idivl
outsb
push
push
jo
dec
or
add
jnp
or
cmpsb
pusha
mov
add
jg
and
or
xchg
add
dec
jae
jnp
and
nop/reserved
mov
sub
out
add
xchg
mov
es
jno
pop
pop
in
jg
adc
data16
in
mov
or
xor
push
les
in
ja
add
aaa
data16
xchg
adc
add
cmp
jns
mov
or
lcall
pop
and
cmp
mov
out
cwtl
add
xor
adc
fwait
push
or
data16
mov
notl
testb
int3
pop
and
and
pop
nop
mov
rolb
mov
ret
adc
xchg
or
jg
into
fldt
mov
xchg
cltd
inc
xchg
xlat
or
jge
fwait
test
cmp
cmpb
leave
add
fsts
test
insb
xor
push
addr16
add
leave
push
inc
and
push
inc
iret
push
mov
xchg
out
in
aas
shlb
shrl
sub
out
push
add
icebp
pop
outsb
add
scas
mov
mov
mov
mov
sar
xchg
push
jno
and
xor
jge
and
shr
aaa
ret
push
rcrb
adc
sbb
js
add
std
movsb
aam
xor
pop
cmp
mulps
lret
in
rol
mov
pop
lcall
adcl
jo
add
push
stos
pop
mov
lret
nop
mov
push
orb
pop
push
addl
sub
out
mov
fiadds
les
or
mov
ret
insl
push
xchg
roll
xor
add
icebp
rcr
xor
or
mov
int
cmpsl
pop
movsb
enter
cmp
test
fcoml
mov
les
xchg
cmp
pop
gs
inc
loopne
push
dec
dec
push
or
dec
rcll
lock
jl
inc
sbb
cli
xor
jae
push
jmp
sub
jge
or
add
or
inc
xchg
rorb
mov
or
inc
das
add
fwait
or
shll
add
mov
push
rolb
jo
pop
and
in
jl
fwait
scas
add
scas
inc
xor
pop
add
pop
aaa
sub
iret
and
lahf
mov
ret
add
xor
xchg
fsubl
stos
or
js
inc
lods
ja
adc
test
test
sbb
nop
xchg
sub
ds
pushf
pmaddwd
xchg
lds
mov
push
or
and
xchg
add
and
mov
inc
stc
add
jmp
mov
cltd
sub
cmp
add
add
inc
in
in
mov
add
cmpsb
arpl
fdivrp
pop
pop
jle
or
inc
xor
mov
stc
cmp
adc
arpl
mov
cmpsl
cld
and
xchg
inc
sub
data16
loope
lret
dec
outsb
mov
inc
mov
sub
or
add
mov
push
leave
loopne
jecxz
pop
cwtl
lds
dec
cwtl
cltd
leave
inc
mov
and
xor
and
inc
cld
inc
cmp
sub
mov
shlb
push
add
testb
clc
add
fidivs
imull
lock
shl
adc
mov
add
push
in
mov
xor
rorl
test
and
cmpb
movsb
mov
pop
int
lret
add
add
or
sbb
mov
pop
dec
adc
cld
lcall
pop
pusha
mov
mov
dec
push
call
lea
add
cmp
lock
jl
and
add
xchg
dec
ret
lret
mov
mov
or
aaa
sbb
out
adc
pop
xor
orb
dec
pop
xchg
pusha
incb
shlb
push
call
dec
push
xor
sbb
jbe
jmp
xor
push
xchg
in
nop
push
ds
das
subb
sbb
inc
out
add
sbb
xor
outsb
dec
test
stos
sbb
jbe
inc
fistpll
xchg
cmp
mov
addr16
mov
pop
add
lds
dec
push
addr16
lahf
cmp
sub
pusha
loopne
scas
sub
add
insb
sbb
adc
push
scas
jle
mov
test
aas
or
loopne
popf
pop
xchg
add
jns
inc
imul
xor
push
add
cltd
inc
adc
lahf
lods
mov
movsl
jmp
int3
adc
cmp
or
sub
inc
shl
sbb
sbb
mov
das
cmp
dec
test
or
pusha
mov
mov
xchg
cmp
ffree
loopne
pop
loope
int
cmp
and
sbb
test
lcall
inc
pop
add
mov
cmp
ljmp
mov
stc
js
int3
add
mov
scas
je
daa
pop
xchg
into
cmp
sbb
stos
or
andl
ja
or
add
inc
addl
xchg
push
sbb
mov
je
dec
dec
xchg
subl
cs
jp
dec
fsubl
lock
and
xor
push
cmpsl
cmc
mov
adc
inc
cmp
pusha
sub
lcall
lods
sub
inc
push
jbe
jo
xchg
inc
aaa
stos
adcl
mov
lods
mov
jmp
pop
mov
push
insl
sub
aam
aad
out
lcall
sub
dec
iret
push
sub
mov
cmp
fsubrl
popa
lsl
jge
or
cld
jb
add
and
inc
addb
and
add
inc
test
bound
cltd
add
sbb
inc
mov
add
push
cmc
mov
sbb
pusha
cmp
sbb
add
pop
stos
into
dec
adc
icebp
jbe
and
push
cmp
mov
mov
les
inc
addr16
loopne
fwait
orb
and
rorl
icebp
loopne
jmp
pusha
pop
inc
mov
popf
lods
sbb
shll
in
scas
rcrb
sbb
test
rcrb
sub
add
int3
or
and
add
xorl
enter
add
sbb
cmpb
sbb
loopne
insb
in
loope
push
shr
lods
jb
push
lea
outsl
mov
clc
inc
inc
inc
ret
sbb
inc
fsubrs
orb
mov
dec
and
push
pop
cmp
pusha
inc
cmc
ret
cmp
add
mov
and
ret
shlb
les
cmp
ja
xor
stos
jp
jbe
adc
outsl
leave
sbb
cmovb
push
and
int3
into
or
add
pushf
and
test
cmp
cmpsl
lock
stos
xchg
cmp
dec
adc
jb
add
call
divb
dec
orb
add
pop
stos
dec
jmp
sbb
add
outsl
pushf
adc
in
xorl
clc
sub
inc
in
ret
aaa
dec
ucomiss
cwtl
mov
movsb
int3
or
lock
sub
nop
adc
jp
add
dec
dec
mov
test
subl
sti
daa
pop
dec
push
pop
mov
out
rorb
imull
iret
add
inc
mov
fiadds
outsb
and
enter
and
or
lea
loopne
imul
les
aas
shll
adc
insb
aam
or
sti
jmp
insl
loopne
pop
mov
dec
push
mov
shr
dec
lcall
sbb
cmp
adcb
call
xor
insl
and
push
and
or
ret
fsubs
dec
lret
mov
lods
jbe
loope
js
mov
js
inc
xor
and
lahf
lcall
fs
xchg
mov
mov
mov
sbb
mov
inc
lock
orb
xor
fldl
inc
test
das
je,pt
movsb
int3
lock
xchg
dec
or
rcrl
jbe
out
out
and
dec
insl
mov
push
dec
push
push
and
mov
fmuls
mov
stos
test
subb
mov
jnp
ja
push
and
das
popa
xchg
int3
jae
xor
in
xor
xor
add
cwtl
pop
sbb
mov
sarb
pop
xor
inc
jae
add
ret
insb
lock
jae
leave
jge
jns
popf
mov
mov
pop
adc
mov
mov
jno
call
shll
jne
mov
mov
sub
jbe
call
and
pushf
push
add
aam
add
add
insl
xchg
push
cmp
pop
insl
pop
sbb
add
mov
jae
cmpsb
push
inc
lcall
cs
and
or
subb
movsb
fcom
loopne
xor
cmp
daa
sbb
aam
inc
leave
push
gs
out
cmpsl
xor
push
or
call
or
xchg
pop
lods
and
sbb
jbe
int3
ja
dec
sahf
mov
stos
mov
js
inc
shll
and
sub
sbb
loopne
int3
add
sub
adc
xlat
inc
mov
ja
push
add
mov
lock
lock
jp
lret
in
fmuls
sub
int3
inc
dec
inc
mov
clc
lock
call
mov
sti
imul
sbb
inc
dec
cmpl
cmpsb
mov
xor
lods
and
subl
enter
subb
cmp
sbb
test
ss
jbe
cmp
mov
jo
roll
pop
movups
call
jns
inc
push
fsubr
xorb
add
shl
aaa
xchg
or
add
xchg
push
adc
cmp
pop
stos
lret
xchg
mov
pop
ljmp
mov
fs
movsb
and
add
ffree
and
arpl
andb
dec
cs
frstor
lcall
pop
cli
mov
add
sbb
add
jge
xor
int
in
icebp
dec
push
jo
les
sbb
clc
xchg
js
sub
test
inc
pop
outsl
pusha
inc
sbb
loope
je
add
adc
or
cmp
lock
mov
stos
and
pop
enter
call
mov
mov
cmp
lcall
adc
in
outsb
lods
xor
loopne
ret
int
jecxz
inc
rorb
mov
sahf
push
icebp
adc
adc
mov
xchg
jns
in
psubusb
adc
pop
or
cmp
add
stc
sbb
and
inc
inc
or
loop
sbb
es
fnstenv
jo
and
jg
jbe
mov
fs
add
push
adc
dec
das
fsubl
push
add
xor
push
or
add
dec
nop
and
and
mov
or
out
stos
leave
add
inc
arpl
sbb
mov
and
sbb
in
inc
dec
aad
les
sbb
fnstenv
jno
popa
rorb
iret
iret
insb
inc
out
mov
loopne
in
sbb
jl
inc
inc
mov
jnp
mov
sub
push
test
mul
sub
mov
cmp
int3
movsb
xchg
enter
in
jns
add
out
adc
dec
push
pop
pusha
stos
rolb
rcl
jne
xor
add
xchg
and
add
jg
pop
lock
add
xor
dec
add
sahf
les
outsl
pop
add
add
and
loop
dec
in
jge
sbb
fwait
jle
jp
adcl
loopne
das
pop
jmp
imul
jae
add
test
mov
arpl
stc
addb
int
add
xor
or
jbe
mov
pop
add
mov
lcall
mov
fstpl
hlt
xlat
add
lret
push
jp
roll
nop
sbb
inc
sbb
sub
aaa
loope
push
xchg
mov
aas
sbb
and
add
ret
sub
add
sahf
mov
mov
push
add
inc
stc
cmp
je
add
popa
and
jl
add
jecxz
pop
shrb
andb
add
dec
sbb
xchg
fisttps
into
add
cmovg
fs
adc
fidivl
mov
mov
jo
add
jp
sbb
insb
add
leave
out
xor
das
imul
stos
pop
push
pop
jmp
add
cmp
sub
ds
fwait
cmp
xchg
xor
xchg
data16
jno
push
inc
inc
and
push
stos
mov
cld
add
or
add
sbb
hlt
add
cld
adc
out
sub
sub
jnp
xchg
xor
push
and
xor
adc
ljmp
sahf
lock
push
add
inc
subb
fwait
pop
xor
addb
dec
clc
push
add
ds
in
and
add
cmp
jno
ja
ret
adc
cmpsl
lods
in
aas
add
es
out
stos
xor
js
cmpsb
pop
ss
xchg
add
mov
lock
push
push
add
daa
stc
rclb
mov
or
jle
scas
mov
push
or
les
and
jno
add
push
mov
movl
mov
mov
imul
adc
adc
out
mov
pop
push
jb
jne
orb
inc
jno
mov
or
push
xchg
popf
sbb
repnz
mov
and
push
pop
outsl
jg
rcrb
shlb
sahf
and
cmpsl
mov
or
addb
xor
les
inc
push
or
aam
mov
inc
mov
pop
push
and
clc
xchg
add
jnp
xchg
nop
pop
leave
add
mov
aad
test
jae
add
adc
dec
add
mov
icebp
notb
je
in
scas
ds
jmp
daa
insl
hlt
imul
movl
add
lods
inc
daa
mov
movsl
fldlg2
out
mov
jno
or
jo
lea
xor
faddl
sub
pushf
les
js
nop
dec
add
jle
xor
out
mov
add
cmpsb
cwtl
fsubr
jno
daa
jns
push
jnp
jp
shlb
icebp
mov
lods
out
xchg
dec
and
mov
cmp
loopne
mov
sbb
inc
lcall
jcxz
and
jae
imul
jle
cmp
es
loop
add
and
loope
ficoml
pop
add
mov
pop
add
jmp
sbb
add
inc
addb
xchg
sbb
add
and
add
into
inc
ffree
jno
and
int3
pushf
pop
ror
jne
sub
mov
pop
sahf
out
in
fldl
loope
dec
add
xchg
inc
addr16
sbb
add
or
cmp
xor
cli
test
or
xchg
movl
push
repz
push
pop
lret
or
fidivrl
sar
pop
inc
push
adc
icebp
enter
add
or
pop
frstor
add
mov
sbb
pop
mov
out
adc
outsl
dec
sbb
movb
ret
sbb
push
sbb
clc
add
add
cmp
and
mov
mov
lahf
test
aas
xor
js
iret
xor
dec
fs
bound
incl
clc
aas
test
repz
inc
cmp
xchg
dec
jae
adc
lods
pop
add
insl
jp
inc
dec
fistpll
fadd
sti
pop
outsb
mov
aaa
jp
adc
push
je
xchg
sbb
sub
add
in
sub
mov
or
mov
jle
lods
cmp
lahf
popa
into
mov
inc
cmc
xchg
mov
inc
mov
aas
imul
adc
sbb
xchg
je
mov
das
lods
mov
dec
out
or
in
lret
lock
aaa
jae
cmpxchg
adc
clc
lock
fimull
push
and
hlt
lds
cld
inc
data16
pop
push
addb
adc
mov
pop
add
fisubrl
ja
and
aam
xor
fsubrs
popf
add
xchg
adc
inc
sbb
sub
aam
pop
fidivl
add
cmpsl
mov
cmpb
or
sbbl
test
ss
std
push
nop
adc
mov
jne
sub
sub
insb
pop
sbbl
addr16
ljmp
lcall
std
cltd
push
cmp
fucom
das
adc
scas
mov
jle
mov
cmp
std
pusha
pop
sarb
add
push
stos
xchg
pop
mov
xor
cltd
divb
pop
ljmp
cli
fdiv
mov
div
inc
xor
push
pop
jp
cmp
mov
mov
jnp
nop
jbe
add
sbb
xor
push
adc
lret
cli
aas
popf
insl
es
pusha
pop
cmc
pop
pop
lock
aam
dec
add
adc
ja
add
pushf
push
and
gs
in
hlt
lret
adc
mov
int3
popf
addl
jae
rcrb
add
xor
in
insb
test
rolb
mov
and
add
int
cmc
pop
xchg
scas
add
dec
xchg
jg
xchg
pushf
mov
mov
lds
add
add
mov
ds
test
out
adc
add
pop
rcl
movsb
movsl
xor
sub
add
mull
cli
or
adc
ss
adc
pop
addps
jmp
mov
pushf
mov
push
add
gs
outsb
or
inc
faddl
das
ja
jb
pop
inc
pop
test
add
adc
and
lret
pop
jno
inc
out
leave
sub
dec
nop
add
fs
loope
ror
add
xchg
inc
add
xor
push
add
adc
loope
xlat
mov
xchg
add
pushf
jp
dec
sbb
adcl
leave
iret
mov
add
les
sbb
inc
in
sbb
sub
test
cld
mov
gs
mov
sbbl
mov
add
pop
ds
and
call
jge
jo
push
and
add
loop
out
adc
inc
nop
add
pop
add
mov
jl
dec
cmp
adc
subb
test
cli
add
mov
mov
pushf
aas
arpl
mov
fiadds
pop
dec
lcall
lret
cmpsl
outsl
int3
xor
dec
or
push
adc
out
push
push
jg
aam
xor
orl
mov
cmpsb
mov
inc
jne
push
out
push
add
jmp
iret
mov
dec
xchg
add
int
lahf
sbb
xchg
jp
dec
shll
add
test
or
dec
orb
jbe
push
or
pop
jg
in
dec
mov
jle
and
inc
add
es
adcb
xchg
in
cmp
add
dec
test
xchg
and
and
fwait
clc
adc
mov
cs
or
aam
loop
adc
outsl
scas
adc
nop
cld
insb
ja
add
xchg
subl
add
outsl
jns
and
add
mov
das
sub
inc
leave
dec
mov
adc
xchg
jmp
push
cltd
add
mov
xchg
gs
out
pop
pop
sahf
jp
lret
xchg
pusha
sar
dec
pop
or
shl
daa
and
mov
add
xchg
xor
out
cli
rorl
aam
jne
add
mov
and
pop
lods
fnstcw
cmpl
mov
add
fidivrl
cmpsl
adc
sbb
sub
inc
clc
dec
pop
loopne
push
jp
out
lods
add
aam
jecxz
fld
cmpb
mov
stc
jo
xor
add
sbb
faddl
jl
ja
and
lock
mov
mov
fsub
jnp
out
fldcw
inc
xor
repz
sub
adc
out
mov
rolb
and
push
sbb
or
add
adc
cmp
add
in
loopne
or
fwait
add
fisubrl
xchg
test
cwtl
call
int
roll
add
fisubs
inc
pushf
inc
popf
test
lods
jbe
fadd
mov
pusha
js
add
xor
or
frstor
scas
add
xchg
or
pop
arpl
cmp
pop
push
pushf
into
scas
pop
mov
xor
in
push
and
add
repnz
jne
rcl
xor
inc
jno
fistps
add
std
mov
sbb
jno
jecxz
in
push
mov
pusha
fcompl
fisubrs
mov
pop
stos
add
cmp
sarb
or
and
iret
jle
mov
adc
inc
xor
add
dec
push
push
dec
mov
inc
ret
mov
xlat
test
mov
mov
adc
push
movsl
pusha
sub
push
add
or
jge
stc
xor
cltd
shrl
sahf
xchg
add
mov
xor
notb
and
xor
add
mov
sbb
add
adc
in
mov
mov
or
xchg
cmpb
mov
es
push
mov
mov
pusha
outsl
nop
jl
adc
push
adc
pop
pop
fildll
insb
inc
xchg
orb
call
jmp
repz
cmp
cmp
jmp
xchg
movsl
inc
popa
add
loope,pn
push
add
pop
adc
mov
shll
shr
push
adc
ljmp
insb
lret
cmpsl
add
mov
pop
or
mov
aas
daa
std
add
push
fs
loopne
repnz
shlb
jge
xchg
or
inc
fsubs
and
outsb
xchg
test
pusha
iret
cmp
inc
xchg
int
fldt
shld
call
mov
test
pop
fs
xor
adc
mov
test
push
aas
xchg
lahf
mov
xor
ret
into
cwtl
jns
out
imul
cmpb
add
sub
push
mov
jb
add
imul
mov
lret
push
in
add
fildll
clc
xchg
add
fisubrs
out
int
mov
shl
movsb
push
lret
push
push
movsl
add
in
sbb
add
loopne
or
movsb
and
pop
adc
xor
loop
ds
xchg
adc
sbb
cltd
mov
popf
sbb
ret
mov
mov
rclb
and
sarb
mov
mov
add
les
lods
fdivs
jp
in
sbb
in
or
sbb
mov
inc
arpl
sbb
mov
dec
ret
loop
cmp
pop
add
fidivs
lcall
cmp
sub
sub
add
xlat
loope
jmp
ret
mov
jae
mov
adc
mov
test
mov
xchg
lods
mov
daa
ror
fidivl
scas
psubusw
fistpl
cld
in
loope
adc
push
call
mov
mov
iret
jp
push
outsb
or
adc
cmp
lret
adc
pop
outsb
pop
fcompl
pop
push
xor
cld
scas
sub
mov
sub
xchg
add
and
cmpsl
imul
cmp
out
movsl
sbb
pop
add
jmp
daa
jo
iret
fnstsw
fiaddl
ljmp
aas
add
mov
cmp
repnz
mov
xor
mov
add
pop
sbb
jl
xor
jg
jo
fdivl
test
mov
jmp
and
pop
add
add
shll
addl
loop
jno
jae
add
sub
cmpsl
incl
cmpl
pop
add
in
mov
jbe
or
lcall
mov
push
mov
push
xor
inc
mov
mov
sub
add
xorl
stc
fcompl
out
or
outsl
fwait
sbb
popl
movsb
inc
cmc
cmpsb
pop
test
inc
push
fwait
xlat
loopne
or
mov
cmp
sub
xchg
aad
ret
jb
in
sub
add
xor
add
fistpl
sub
idivl
jmp
xor
hlt
sub
test
sbb
add
jo
ret
insl
cld
add
je
inc
fnstcw
jne
pop
push
mov
popf
lock
push
faddl
push
fmuls
out
adc
add
icebp
sub
jle,pt
mov
shll
add
scas
incl
push
lods
lock
cmpsl
inc
in
mov
xor
into
adc
popa
cld
ret
cltd
push
or
loope
xor
cmp
call
pop
jmp
add
cwtl
mov
push
in
and
outsl
push
inc
xorb
sub
xchg
sub
pop
add
mov
inc
into
add
sbb
push
add
rorl
xorl
mov
add
xor
and
mov
in
repz
or
out
add
pop
jp
out
or
add
jecxz
mov
sub
testb
movsb
rorl
add
xorb
mov
jecxz
in
rcr
add
dec
push
jle
mov
jg
push
sbb
mov
mov
sahf
add
adc
aas
call
call
sub
pop
cmpsl
icebp
push
shl
push
stos
out
push
jno
daa
add
stos
aas
dec
outsb
add
mov
add
fstpt
aaa
inc
add
cwtl
sub
pop
or
jo
clc
xchg
push
push
das
stc
jb
adc
add
stos
outsb
imul
push
hlt
gs
mov
mov
in
push
add
xchg
out
cmpsb
or
andb
aad
dec
fnstcw
xchg
push
or
pop
jb
inc
data16
movsb
adc
neg
sti
inc
in
xchg
push
add
filds
enter
mov
cld
pop
icebp
add
and
adc
mov
jns
push
rclb
test
pop
pop
dec
insb
adc
lock
dec
in
iret
in
loopne
pop
add
pop
push
fdiv
mov
xor
popf
lcall
in
add
cli
out
les
pop
add
add
loopne
dec
es
ret
pop
mov
sahf
shrb
add
into
xor
lahf
in
adc
adc
push
xchg
rcrb
stos
add
xor
in
mov
sti
pushf
in
xchg
jns
rolb
stc
movsl
add
outsb
mov
push
or
rcll
inc
fdivrs
out
ja
add
dec
minps
rcr
adc
cmp
xor
aam
flds
sub
je
or
scas
xor
add
mov
xor
push
loop
dec
lods
orb
sub
pusha
add
pop
dec
insb
add
stc
xchg
aam
jo
shrb
adc
pop
loopne
inc
and
jge
add
aam
mov
testb
adc
pop
add
je
inc
add
mov
jnp
vmptrst
daa
sbb
push
loopne
push
ret
xchg
jae
andb
or
pop
xor
push
incl
push
std
push
test
mov
sti
lock
adc
mov
pop
lds
mov
push
cltd
inc
cmp
push
mov
std
inc
addb
xchg
push
jae
cmp
les
xchg
sbb
fnstenv
mov
add
mov
sbb
ja
push
loop
dec
mov
mov
clc
adcb
ret
add
add
jl
or
mov
jp
mov
push
mov
pop
xchg
leave
xor
add
cmp
push
add
fists
push
roll
mul
cmp
add
mov
adc
xlat
mov
pop
cmp
adc
pop
mov
xor
mov
test
nop
leave
add
sbb
xchg
jp
add
icebp
or
addb
cmp
push
adc
or
lods
jnp
sbb
push
fwait
or
jg
adc
out
add
ja
xor
test
std
or
cli
call
inc
sbb
ret
loopne
pop
xor
add
jae
addr16
lock
aam
add
pusha
inc
cwtl
hlt
push
ljmp
pushf
ret
mov
sbb
or
xchg
push
push
xchg
adc
in
cli
mov
aaa
cmpsb
mov
xor
jno
imul
and
pop
add
push
xor
test
into
fwait
cmp
sahf
add
and
je
jb
push
add
addr16
test
mov
sbb
mull
lods
pop
add
or
cmp
sub
je
add
sbb
or
add
jp
enter
cmp
mov
jbe
in
xchg
add
dec
jmp
push
add
orb
push
je
icebp
add
js
adcb
mov
push
in
and
mov
call
inc
jnp
in
or
icebp
sbb
mov
out
add
add
adc
add
cmp
pusha
lea
inc
add
mov
inc
iret
xor
or
mov
add
insl
repnz
add
mov
or
out
mov
add
nop
jl
add
rolb
add
dec
xchg
sub
pop
fadd
cwtl
mov
cwtl
pop
add
mov
add
adc
hlt
cmp
xor
xchg
push
add
je
shl
lods
jns
pxor
mov
add
cld
in
sbb
add
rorb
sub
hlt
mov
inc
stc
insb
paddq
rep
add
push
or
sbb
sahf
fiaddl
mov
cld
out
add
ja
or
clc
rcr
add
insl
pop
add
xor
fs
imul
cmpsl
lcall
pop
or
push
push
pop
mov
shrl
xchg
data16
jae
orl
lods
add
dec
cld
add
in
jmp
add
addb
sbbl
shlb
sub
jl
mov
shl
dec
call
add
sub
cmp
das
js
xchg
or
iret
xor
add
mov
jle
cli
cmp
cmc
popf
sbb
fwait
add
dec
inc
int3
out
or
fsubs
dec
mov
mov
bndldx
push
cmp
adc
adc
out
dec
add
stc
push
adc
aam
fildl
ror
test
add
xchg
push
jb
xor
or
inc
fcoms
in
arpl
fadds
and
mov
repnz
sub
in
add
or
add
pop
jne
dec
fs
pop
xchg
stos
cli
cmp
aam
push
movsl
fcom
xor
mov
and
or
xchg
cmp
push
mov
and
push
dec
jmp
xlat
push
roll
aad
lret
shrb
cmp
cwtl
or
mov
mov
sub
out
es
or
pop
pop
cmp
je
repz
cmp
les
adc
dec
adc
inc
xor
scas
sahf
mov
cmp
fmuls
in
or
les
inc
push
or
int3
add
cwtl
mov
dec
add
daa
ds
je
addl
mov
data16
sbb
add
sub
adc
push
pop
xchg
shll
and
add
add
and
push
fstp
adc
cmpsb
mov
in
lods
das
add
jns
cmpl
push
and
sub
stos
nop
fucomp
repz
push
or
out
call
shll
sub
add
test
sbbl
cwtl
mul
inc
incl
push
and
mov
lret
ja
add
push
sub
fldcw
jno
jp
dec
mov
jle
or
add
jnp
mov
inc
sbbb
fsubrl
mov
jle
xorl
push
add
out
mov
or
in
add
pop
sbb
test
call
dec
push
adc
add
sbbb
pop
push
pop
add
jae
fildl
push
ret
mov
mov
xchg
add
enter
and
add
and
fwait
and
sbb
dec
cmpb
xchg
pop
add
cmp
inc
cmp
adc
shr
add
sti
jns
xor
add
pop
inc
jl
xlat
cmp
add
add
aam
ret
cmpsb
in
popa
scas
add
pushf
xchg
mov
add
mov
pop
ret
lods
rolb
lock
xchg
xchg
sbb
cs
add
pusha
js
add
cltd
dec
sbbb
cld
out
lock
movsl
add
jecxz
les
xchg
and
in
hlt
sub
test
loop
xchg
jmp
loopne
adc
dec
sub
rorb
int3
mov
out
outsl
add
add
jne
jnp
leave
int3
dec
mov
insl
add
sbb
pop
ret
mov
insb
movsl
cmp
adc
pop
lret
lret
dec
lahf
adcb
adc
xchg
or
adc
pushf
dec
add
jge
or
add
cmp
inc
dec
inc
cli
sub
mov
adcb
adc
fidivl
jl
insb
inc
jo
repnz
in
pusha
ja
jge
push
inc
xchg
mov
lahf
add
aam
fsubrs
push
outsl
inc
cwtl
adc
mov
adcl
xchg
ss
aam
sub
sbb
cwtl
adc
loopne
add
ret
jno
mov
pop
sahf
xor
xchg
or
xchg
pop
loope
add
xor
inc
add
push
mull
xchg
fsubl
enter
cmp
mov
jo
dec
and
iret
add
and
add
les
popa
mov
add
mov
mov
pushl
ss
cmpb
data16
pop
adc
loopne
xor
rcrb
push
pop
mov
xor
xor
icebp
insl
xchg
aas
sbb
mov
push
hlt
cmp
mov
pop
test
push
jnp
add
in
sarl
and
xchg
xor
push
mov
pop
push
push
push
daa
in
cmp
test
das
cltd
lods
add
aad
jge
xchg
xchg
add
aaa
clc
js
push
mov
xor
sbb
mov
add
mov
and
sub
mov
mov
ss
adcl
nop
andb
cld
cmp
adc
dec
cli
pusha
popa
xchg
shl
aas
push
pop
lret
add
mov
pop
cld
movsl
cli
add
mov
xor
pusha
inc
pop
rcr
pop
dec
add
push
adc
mov
das
add
and
int3
inc
aad
cld
loop
sub
mov
call
popa
jecxz
cmp
ljmp
add
cmp
aam
pushf
cli
mov
add
les
scas
adc
sub
cmpb
and
sbb
je
add
xor
jo
xchg
add
lock
lds
pop
shrl
and
clc
stos
cli
inc
mov
sub
push
mov
jns
pop
out
xchg
add
int
dec
iret
push
xchg
or
xor
pop
mov
xchg
test
ret
add
and
sub
mov
cmpl
dec
ret
sub
test
rcrl
jmp
int
jp
and
jbe
add
enter
add
xor
add
movsb
sbbb
and
lea
add
loopne
cmp
stos
jmp
mov
xchg
jb
mov
mov
pop
shlb
mov
cli
inc
mov
and
jp
ja
add
mov
addb
or
and
add
daa
int3
xor
xor
mov
fiadds
dec
sub
jp
or
andps
and
enter
add
sbb
xor
xor
xchg
mov
xor
adc
stc
sbb
xor
and
jno
push
dec
add
inc
rcrl
cmpsb
mov
mov
push
adc
sbbb
jb
es
enter
pusha
and
dec
sub
sti
aad
xchg
test
cmp
xor
clc
cli
jmp
cld
mov
pop
outsb
mov
push
movsb
inc
int3
cmc
and
xchg
or
imul
test
mov
rol
cmp
push
or
test
fs
fwait
xor
in
ljmp
mov
rolb
dec
sub
xor
popf
hlt
or
orb
in
clc
pop
adc
shrb
inc
dec
sbb
imul
in
sbb
les
add
and
mov
call
scas
cmp
test
sub
clc
mov
je
enter
std
jae
xchg
xlat
shll
dec
push
dec
push
imul
sub
test
int3
mov
xor
cs
fadds
add
stos
mov
jno
les
loop
cmpsl
xor
into
stos
inc
rcrb
sbb
shrl
and
adc
ret
test
or
dec
cmp
mov
and
sub
sbb
pop
or
add
cltd
int3
jecxz
cltd
js
dec
add
push
push
stos
addl
sub
xchg
adc
sub
sub
lock
mov
sub
fistl
lock
add
jl
lahf
or
bnd
push
mov
stc
fstps
adc
jnp
push
lea
inc
and
push
mov
push
lahf
popl
push
mov
add
mov
mov
scas
rorl
dec
adc
inc
mov
cmp
add
imulb
es
mov
xor
adc
cmp
add
add
jmp
and
dec
jg
mov
pop
aaa
cmp
add
adc
repz
sub
inc
insb
xchg
leave
loopne
cmp
lret
ss
pusha
mov
mov
outsb
add
vshufps
add
in
std
mov
loop
bound
sbb
jmp
dec
push
add
lahf
push
test
inc
jae
sbb
negb
cmpb
mov
inc
andl
push
call
and
pusha
int3
inc
cmp
mov
aad
lds
lcall
mov
aam
mov
jns
adc
xor
dec
mov
out
add
out
cltd
xlat
mov
fisttpl
testl
sub
out
inc
je
add
cmp
mov
sbb
xchg
test
inc
add
push
sbb
push
and
add
xor
add
push
cmc
xor
out
cmp
ret
les
or
int
pop
in
push
test
mov
and
ljmp
les
insb
movsb
mov
push
lock
test
inc
sub
mov
sub
sub
adc
cmpb
loopne
test
push
lods
cmpsb
jno
pop
and
lahf
aam
add
movsl
cmp
adc
push
pop
in
jne
in
push
sbb
and
clc
add
mov
and
movsb
inc
or
fisttpl
inc
orb
add
inc
xor
push
mov
dec
out
rcrb
push
sti
rcrl
std
push
sbb
lcall
scas
testl
incl
sbb
jns
dec
roll
pusha
popa
cs
sbb
or
lahf
jge
add
mov
imul
sub
sub
or
or
fiadds
scas
adc
or
add
je
ret
hlt
orb
mov
jg
roll
mov
lcall
or
fiaddl
mov
dec
add
lds
fistl
or
mov
sbb
shl
jno
gs
mov
push
xor
pusha
fisubrl
inc
fistpll
daa
sub
lods
jns
lret
or
lock
push
inc
dec
jnp
add
push
imul
dec
fstpt
dec
rcl
add
fldenv
jae
out
sti
push
ror
movsb
sarb
cmpsl
insb
in
inc
xchg
loopne
add
movsl
and
jbe
push
add
xor
jnp
ret
data16
mov
sti
cld
mov
shll
testl
lods
repz
push
mov
mov
adc
jmp
mov
popf
and
or
push
mov
lahf
adc
ficoml
out
ljmp
enter
test
sub
add
jge,pt
mov
jp
pop
push
mov
sub
icebp
mov
imul
dec
and
mov
sbb
dec
mov
sti
add
nop
xor
mov
clc
cmp
pusha
push
es
jg
fnstenv
cltd
push
fs
pop
scas
shlb
adcb
dec
leave
push
cmp
arpl
fsubp
pop
sbb
pop
jg
out
pushf
movsl
adc
mov
and
test
mov
add
int
in
jns
in
add
call
adc
inc
mov
add
clc
xchg
mov
xor
ret
mov
cwtl
inc
pop
pusha
sub
cmp
arpl
mov
add
and
in
mov
pop
ret
and
mov
mov
push
stos
and
pusha
jl
loopne
in
xchg
daa
add
sar
xor
dec
adc
std
repnz
in
pusha
mov
sub
nop
cld
jmp
add
cmp
pop
or
shl
add
mov
add
js
adc
xchg
mov
pusha
mov
rorb
dec
mov
push
adc
loopne
scas
lret
es
cmovl
cmp
je
xorb
jno
hlt
add
js
ljmp
lret
pop
les
mov
add
daa
mov
sub
fcoms
xchg
insl
lds
rcl
xor
or
enter
sbb
jne
sub
cmp
clc
nop
adc
ret
jno
mov
divl
cmp
lea
mov
test
rcrb
popf
jno
mov
es
xchg
add
test
fistps
jo
in
lea
loop
cwtl
sub
dec
mov
sub
cwtl
and
push
inc
add
fst
or
xor
divb
lret
xchg
mov
mov
push
add
arpl
aam
push
jecxz
mov
jno
or
dec
jne
lods
lock
push
jmp
cmp
fdivrs
add
mov
push
add
cmp
shr
or
data16
xor
or
push
gs
inc
mov
arpl
sub
cmp
test
enter
add
scas
aam
aad
insl
and
loopne
scas
or
jno
sbb
adc
inc
dec
jge
addl
mov
cmp
xor
in
dec
hlt
shll
or
ss
adc
jne
jmp
lret
push
xor
add
call
dec
adc
imul
xor
ss
jg
sub
lods
push
add
lcall
push
xorl
and
jae
dec
adc
and
push
xchg
flds
add
aas
mov
aad
push
fmull
ret
rcll
add
clc
popf
lret
mov
jge
movsb
adc
loopne
jae
mov
dec
sub
stc
pop
ret
pop
sbb
and
stos
dec
xchg
ret
mov
cld
mov
inc
aas
enter
dec
xchg
aas
sub
mov
sub
nop
leave
and
cmp
cmp
and
add
jnp
arpl
xor
enter
nop
add
xor
test
inc
loopne
pusha
sub
addr16
add
movsl
rolb
or
shl
xorb
inc
xchg
push
pop
cmp
inc
mov
fildl
cvtps2pd
add
in
add
push
idivl
nop
pop
add
add
shr
add
jmp
pop
stc
mov
xor
rcrl
mov
jae
inc
daa
xor
and
aad
mov
adc
rorl
cmp
cmp
add
addl
cmp
fwait
arpl
pop
add
in
pop
adc
loopne
inc
pusha
movsl
loopne
js
fmull
sbb
dec
push
nop
test
aas
add
sub
inc
xchg
iret
lahf
sub
jecxz
xchg
cmp
cs
and
nop
jnp
mov
add
aaa
movsl
xorl
clc
push
or
push
dec
inc
mov
pop
or
call
and
dec
fisubrl
push
arpl
or
loopne
loopne
or
nop
mov
outsl
popf
dec
iret
sub
mov
arpl
js
lcall
add
pop
pop
and
popa
jb
jp
stos
js
inc
dec
aas
or
push
addr16
mov
cmp
movsl
fstps
in
shr
mov
rcll
inc
aam
lcall
mov
inc
and
and
adc
fidivs
inc
add
cs
ds
add
mov
add
test
mov
inc
imul
mov
push
mov
enter
add
xor
jle
or
add
lea
add
jecxz
and
add
cmp
jo
inc
xor
mov
or
sarb
adcb
add
jnp
add
stos
in
xchg
loope
sbb
cmp
das
or
je
and
xor
adc
int3
or
xor
sahf
jb
notl
or
push
xor
cmp
outsl
pop
cmp
mov
jns
sub
loope
mov
xchg
scas
cwtl
cmp
mov
flds
pop
adc
mov
xor
fildll
mov
andb
mov
inc
inc
xor
xor
ss
jp
add
push
sahf
sbb
mov
mov
sbb
jo
mov
add
pushl
cmp
shlb
push
jns
cmp
xchg
std
pusha
nop
nop
mov
or
inc
or
xor
lods
pop
lret
and
popa
dec
ret
pop
je
repnz
popl
push
inc
cwtl
fisttpll
lahf
or
sbb
mov
lock
add
jns
fcompl
push
xor
add
push
loopne
adc
pushf
sbb
or
mov
mov
mov
and
xchg
mov
sbb
inc
add
int
lock
mov
adc
jo
dec
int3
pop
aam
or
scas
cli
pop
mov
adc
enter
push
or
xor
cmp
lods
sbbl
shrb
add
test
add
out
movsb
pushf
add
inc
mov
out
sub
mov
mov
xchg
clc
ret
popa
sbb
sub
sbb
sbb
loopne
or
and
sub
push
aam
or
cmpsl
mov
cmp
movsl
adc
rcr
cld
push
mov
jecxz
cmp
aad
jb
les
out
add
iret
lods
sbb
arpl
clc
or
push
mov
add
mov
js
inc
mov
aad
mov
cs
lahf
je
mov
mov
les
add
bnd
inc
or
xor
jle,pn
jae
add
shll
inc
dec
mov
push
xor
xorb
dec
stc
jge
sub
push
add
mov
adc
mov
mov
or
push
xchg
cmp
xchg
jmp
cmp
add
mov
int3
or
add
mov
mov
lods
or
sub
test
scas
cmp
repnz
stos
fidivl
add
cld
inc
inc
push
pop
add
stc
xor
jp
sub
jl
dec
push
aam
popf
lret
and
jnp
shll
or
mov
push
dec
jb
xor
cs
sarb
dec
jno
xchg
cwtl
fcmovb
pop
lret
call
les
sarb
jle
and
mov
mov
ss
mov
inc
push
cs
clc
adc
xor
aad
gs
jae
repz
cmp
add
out
adc
xor
mov
aam
arpl
add
adc
mov
es
pop
jmp
mov
xorl
pop
pop
add
mov
imul
dec
push
nop
xor
and
loopne
repnz
jns
or
or
pusha
dec
je
hlt
mov
cmpsb
ljmp
jo
adc
subb
bound
fistpll
movsl
add
mov
icebp
xchg
push
sbb
xchg
mov
inc
fs
jge
pop
mov
mov
pop
fildl
stos
test
or
fsubs
mov
mov
push
mov
mov
push
xchg
cmp
les
mov
push
lods
mov
add
push
mov
jo
xor
aas
enter
sbb
mov
mov
aaa
lods
test
adc
mov
or
movsl
cwtl
mov
fistpll
jb
xor
xor
add
jns
jo
add
imul
ficompl
mov
call
add
out
leave
dec
xchg
mov
add
jbe
dec
pop
add
mov
sbb
mov
cltd
inc
lea
inc
add
push
mov
cmp
lret
and
pop
lods
sub
movsl
adc
sub
call
cwtl
stos
cwtl
fmuls
pop
mov
dec
or
js
stos
cmpsl
inc
inc
cmp
cmp
sbb
sbb
xor
or
add
adc
add
inc
jo
cmp
pusha
idivb
call
dec
mov
shlb
enter
cmp
mov
jno
call
jl
and
push
xor
xchg
push
dec
loope
cld
sub
xchg
inc
mov
stc
scas
sub
addr16
in
mov
jecxz
mov
cmpsb
sbb
add
in
jl
outsb
dec
dec
cmove
hlt
pushf
aas
add
movsl
inc
dec
gs
mov
mov
jbe
xor
sub
dec
jmp
cmpsb
pop
jl
dec
test
or
ret
shl
and
dec
cmp
sub
das
repnz
out
cmp
mov
lods
pop
xor
inc
dec
cmp
cmp
orl
mov
jb
add
popa
add
das
cmp
and
and
ljmp
jle
cmc
xchg
jmp
addl
mov
add
cmp
ljmp
jne
mov
xchg
and
push
insl
mov
xchg
cmp
jnp
adc
xor
mov
xorl
sub
fadds
jl
lods
hlt
roll
xor
fwait
sub
movsl
fs
filds
fwait
clc
cltd
cmp
lahf
or
shrl
nop
nop
mov
jno
pusha
pusha
int
je
cmp
xorb
mov
bound
and
push
das
mov
ret
add
pop
jg
mov
mov
and
clc
stos
in
and
aas
dec
imull
add
pop
xchg
fisttpl
jb
dec
mov
xacquire
dec
sub
jp
xchg
add
fnstcw
lds
jns
icebp
sub
mov
dec
pop
inc
add
or
mov
cs
jmp
movsl
lds
mov
cwtl
ss
push
jo
add
pop
out
inc
stc
sbb
push
xchg
je
popa
jge
xchg
repz
xchg
jno
dec
pop
loope
rolb
insl
jge
inc
sbb
sbb
add
or
mov
mov
sub
sub
pushf
loope
enter
push
add
cmp
fisttps
enter
daa
adc
and
das
dec
adc
add
stos
imull
lret
add
cmp
dec
nop
add
dec
adc
sub
add
adc
pop
cmpsl
rclb
loopne
jp
xor
mov
push
push
popl
mov
ret
inc
fdivr
mov
int3
push
test
sub
pushf
push
movsb
int3
add
jne
cli
push
push
add
addr16
adc
fwait
jl
inc
cmp
add
outsb
ss
enter
add
pop
call
push
and
movsl
xor
push
xor
push
cmp
mov
cmp
add
dec
lods
insb
jno
pop
out
push
or
xlat
pop
sbb
push
mov
jecxz
push
pop
xchg
loope
js
insb
jl
mov
dec
dec
add
cltd
add
shlb
out
xor
sub
lods
mov
imul
pop
jg
add
sub
push
add
mov
pusha
int
or
ljmp
mov
pop
int3
test
dec
add
dec
popl
jo
xchg
add
loopne
lahf
xor
jle
add
mov
fidivl
incb
mov
sbb
sbb
and
add
sahf
mov
xor
leave
out
out
repz
or
imul
pop
or
pop
pop
scas
xchg
adc
stc
add
movb
clc
outsl
mov
push
mov
out
addl
sub
mov
sarl
jle
fdivr
sahf
mov
cmp
dec
inc
mov
addl
inc
arpl
scas
xlat
push
inc
stc
push
loop
cli
cmp
test
dec
add
inc
insl
or
cld
xchg
cmpb
leave
in
add
rorl
mul
sub
ja
cmp
mov
lea
xchg
pop
xlat
rorb
push
bound
or
insb
push
or
add
arpl
shl
cmp
movsl
lock
add
mov
add
loop
and
bound
cwtl
aam
inc
adc
aam
add
and
or
stc
outsb
push
call
addr16
xchg
testl
cmp
sti
jae
inc
cmpsl
sbb
dec
mov
mov
sbb
and
push
test
cmp
dec
icebp
and
ljmp
test
mov
mov
xor
adcb
add
sub
andb
sbb
and
inc
jns
imul
push
cli
pop
adc
push
and
inc
test
adc
ror
cmp
lret
aaa
fldl
mov
add
xchg
popf
or
lods
out
sti
dec
xor
inc
or
pop
aas
sbb
add
ret
push
sbb
loope
xor
cmp
xchg
out
xor
js
mov
int
fldl
dec
pusha
aas
push
cmp
push
cmp
repz
push
xor
and
jb
inc
adc
addr16
push
jge
push
jno
adc
rclb
jge
cmp
fnsave
test
std
xchg
out
pop
add
mov
sub
add
mov
xchg
jb
repnz
jecxz
orb
push
out
push
cld
loopne
add
imul
inc
inc
arpl
jle
test
pop
lcall
lods
jo
pusha
fdivrs
and
mov
int3
add
xlat
sub
nop
cmpsb
add
mov
jo
push
and
and
or
add
mov
lods
inc
lea
xor
pop
sarb
dec
mov
add
fnop
clc
push
add
movsl
xchg
mov
ret
and
mov
xchg
loop
fwait
mov
mov
cmpsl
aaa
inc
stc
jne
scas
pop
repnz
add
push
lahf
jb
push
fst
add
popf
int3
mov
add
dec
repnz
jp
adc
xlat
xchg
cld
clc
add
xor
imul
or
mov
push
jle
lods
ds
mov
shr
add
push
nop
lods
and
nopl
sbb
dec
pushf
inc
nop
add
inc
mov
sbb
push
push
loopne
or
mov
lock
hlt
popf
addb
mov
add
outsb
adc
mov
sub
in
in
and
add
iret
push
add
lock
mov
xlat
jge
or
cs
lahf
inc
out
xor
push
xlat
dec
gs
push
pop
test
fsubs
pop
push
int3
out
ja
lea
mov
jns
and
das
mov
xchg
mov
aad
mov
hlt
lret
cmpsb
add
fsub
mov
mov
arpl
push
inc
lods
fldcw
loopne
xchg
jb
out
add
add
inc
les
repnz
aas
xchg
fstpt
add
or
pop
xchg
jnp
mov
pop
lahf
ret
mov
das
insb
and
rolb
mov
ret
cmpsb
ja
add
inc
dec
fimuls
cmp
iret
adc
add
jo
je
stos
cmovno
adc
out
ds
test
enter
bound
insl
adc
jecxz
adc
icebp
sub
popa
insb
and
adc
lock
push
push
test
rorb
les
adc
jnp
push
cmpsb
xor
je
test
sbb
mov
rcrb
jp
inc
jl
ljmp
lahf
mov
push
pop
push
inc
scas
cld
es
mov
dec
aaa
pusha
jns
push
iret
cwtl
push
imul
loop
fsubl
add
ror
js
sub
xchg
xorb
lods
jbe
add
add
xchg
mov
iret
xchg
add
mov
mov
add
cmp
add
add
mov
xor
fnsave
add
mov
bound
subb
dec
rorb
cmp
icebp
jo
lea
inc
shll
cmp
mov
insl
sub
push
lds
mov
in
add
fidivrl
and
add
or
lret
cmp
loopne
adc
pop
scas
adc
clc
xor
jmp
int
sub
adcl
movsb
pop
inc
mov
sub
sbb
adc
xchg
adc
cmp
mov
call
add
inc
sub
outsl
sarb
dec
mov
cmp
mov
pop
add
call
shrl
xchg
and
add
adcb
hlt
add
xchg
mov
add
pop
lods
cmp
test
jno
je
push
loope
js
add
inc
sub
push
cmp
jmp
add
in
fs
cltd
cmp
adc
testl
rolb
iret
jbe
sidtl
aas
test
bound
cld
or
out
add
jg
es
lret
ffree
push
xchg
add
imul
movsb
test
ret
in
or
add
nop
lret
js
push
stos
inc
daa
iret
sub
jmp
arpl
push
fmuls
jge
mov
adc
sub
mov
pop
add
cmp
jo
add
std
iret
adc
inc
shrl
mov
push
push
jb
jnp
mov
add
lea
scas
in
push
add
add
arpl
sbb
and
push
gs
mov
add
inc
das
bound
fs
inc
or
jmp
pop
shll
sbb
or
sub
jmp
or
xor
insb
loop
bound
inc
pusha
push
pushl
lret
clc
xor
push
call
mov
pop
popa
xlat
aas
std
cli
loop
out
shlb
mov
aad
sbb
insb
add
cmp
outsl
clc
addl
jl
sbb
mov
clc
push
jnp
add
pop
inc
aas
insb
sbb
pushf
xchg
sub
inc
cmp
inc
push
lea
leave
rclb
xchg
mov
popa
lds
loop
sbb
xchg
pop
leave
sub
and
mov
add
jne
push
nop
add
cmp
enter
mov
jmp
add
jecxz
jno
leave
jmp
outsl
cmp
xor
ret
aas
scas
in
xor
rcl
pusha
jl
enter
daa
mov
icebp
hlt
sub
pusha
aad
mov
or
test
mov
loopne
insl
ror
pushf
je
dec
aam
add
pop
dec
sbb
and
lret
mov
add
test
adc
out
push
sbb
xor
aaa
mov
clc
ds
mov
mov
push
push
sbb
pop
pextrw
add
outsb
add
fwait
cmpsb
add
movb
xorb
faddl
push
lret
popa
stos
mov
call
or
insb
adc
daa
jne
push
mov
test
cmp
cld
andb
dec
popa
jns
test
mov
add
add
call
cmp
mov
inc
adc
icebp
and
mov
outsb
push
lea
loopne
std
push
pop
arpl
add
fcmovb
xor
push
insb
inc
jne
test
push
xor
or
notl
xor
ret
pop
mov
and
test
push
cmp
out
sub
in
loope
or
cmp
mov
add
mov
sbbb
adcb
sbb
pusha
flds
jp
push
add
movsl
cwtl
repnz
fisubrs
cmp
cltd
ss
out
pusha
push
add
jae
test
mov
je
xor
out
sbb
call
jno
lahf
lret
lret
shrl
cltd
test
cmp
pop
sbb
xlat
in
add
inc
orb
push
je
cli
loop
jmp
add
mov
jl
mov
mov
mov
fwait
sub
pop
dec
sarb
or
lahf
out
cmc
out
add
cmp
test
add
xchg
push
xchg
shrb
repz
mov
sbb
and
cli
add
jecxz
rolb
pushf
cwtl
inc
aas
nop
jmp
std
push
pop
xor
stos
jo
add
lods
jb
ret
leave
sbb
jp
pop
cmpsb
mov
cld
cmp
push
ljmp
sub
clc
adc
adc
and
cwtl
jo
xchg
out
pop
and
add
dec
test
std
mov
fidivl
push
jno
xor
mov
and
cltd
scas
xor
in
roll
mov
in
nop
aam
fnstsw
add
and
sub
in
mov
or
xchg
aad
add
dec
pop
jge
pop
pop
jb
sbb
add
jnp
push
inc
cwtl
add
cmpsl
sub
adc
addr16
fcomps
fadds
mov
in
cld
jo
add
mov
test
sbb
fimuls
sar
jecxz
mov
xor
and
jge
xor
jg
add
sbb
sub
out
sub
xorb
add
lock
adc
inc
sbb
dec
pop
lock
pop
dec
cli
inc
sbb
ljmp
mov
or
cmp
in
out
jge
or
sub
mov
add
fisttps
aam
push
dec
sub
add
mov
subb
xor
or
insl
clc
dec
dec
xor
adc
addb
adc
push
jo
and
std
rclb
or
js
add
xchg
movsb
scas
jns
push
inc
or
repz
jl
cmp
xchg
lret
adc
rcrb
sbb
adc
int3
inc
inc
loopne
sbb
push
std
adc
add
push
lcall
ds
sbb
pop
pop
or
pop
cmp
push
cs
mov
inc
bound
push
cmpb
pop
add
add
push
pop
into
xchg
push
pop
pop
cwtl
push
pushf
lds
mov
test
testb
mov
pop
cmp
lea
jecxz
adc
subb
and
add
lea
xlat
mov
mov
in
xchg
push
sarb
call
mov
sahf
addr16
xchg
push
int3
sbb
xor
pop
xchg
aas
test
mov
pop
stos
cmp
add
push
xchg
xor
test
sub
divb
enter
mov
push
sub
fsts
out
and
fs
loop
push
add
mov
lods
xlat
leave
mov
jp
int3
shlb
add
add
adc
mov
ret
sub
pop
add
and
cmpsl
mov
fcompl
mov
ljmp
shll
jbe
pop
pusha
scas
es
stos
icebp
cwtl
mov
push
popa
out
aas
shll
push
out
inc
fs
outsl
mov
jns
into
inc
sbb
jns
sbb
int
push
inc
dec
jae
ffree
ss
or
dec
or
add
rcll
aaa
pusha
jnp
add
in
imul
inc
push
lods
inc
or
aas
pop
jg
and
cmp
movd
inc
bound
dec
imul
mov
stc
adc
rclb
shlb
cwtl
push
and
cmp
out
mov
je
ss
hlt
cmp
clc
pop
fnstcw
mov
cltd
js
lret
les
popa
mov
int3
jno
sub
pop
ljmp
sbb
xchg
add
sbb
scas
fiadds
cmp
je
push
adc
popf
add
insb
stc
stos
leave
push
sahf
imul
into
cwtl
jb
and
adc
or
push
jl
pop
repnz
dec
ret
push
cltd
jmp
in
cmp
cli
add
jg
out
out
aaa
outsl
pusha
jbe
mov
jns
flds
jno
es
bswap
jmp
xor
scas
lahf
mov
pusha
jle
dec
repnz
cmpsl
dec
mov
push
in
test
add
clc
pop
lods
or
shl
sub
lods
jmp
test
mov
mov
rolb
and
imul
inc
in
add
fcomps
add
int3
lret
hlt
pusha
bound
ret
loopne
leave
mov
lock
push
test
inc
sbb
arpl
or
adc
enter
mov
cmp
jnp
mov
mov
insb
push
ror
fbld
rcrb
test
call
inc
pusha
js
dec
mov
push
in
pop
outsl
loopne
or
aas
sub
les
pop
popa
and
xor
subl
sar
in
lea
adc
mov
je
add
fldcw
xor
add
test
add
pop
lods
inc
cwtl
push
lock
pop
mov
andb
ljmp
rol
add
pop
jg
pushf
loope
xchg
cmp
popa
jns
push
add
pop
xor
ljmp
dec
mov
add
arpl
adc
mov
in
inc
xor
mov
arpl
rcl
or
or
push
bound
add
inc
adc
in
call
nop
sub
jg
mov
lret
and
data16
fiadds
fs
adc
add
add
packsswb
sahf
mov
mov
pop
leave
inc
add
out
ja
sub
push
adc
cmpsb
nop
mov
cli
dec
push
dec
push
cs
cmp
mov
adc
ljmp
subb
dec
pop
inc
test
push
xor
pop
sub
and
or
mov
add
movsl
mov
sub
jnp
insb
mov
xor
xchg
test
ljmp
test
add
mov
lds
lods
jnp
mov
pop
xor
ficoms
stc
roll
mov
push
rolb
mov
adc
add
decb
cmp
jge
add
insl
std
push
mov
pop
movsb
mov
in
mov
leave
repnz
shlb
lret
mov
or
std
jno
jl
sub
add
dec
aaa
addb
add
or
push
mov
imul
sub
jae
cltd
or
addb
insl
push
mov
and
in
add
cmpsb
mov
pop
inc
sub
loop
add
add
pop
pop
nop
sahf
test
js
rcrb
andl
adc
and
push
mov
outsl
cmpsb
mov
jmp
push
cmp
mov
cmpsl
int
lea
mov
adc
jns
icebp
xchg
je
fs
sub
nop
cmp
dec
add
outsb
test
inc
cwtl
jl
sti
pop
clc
mov
add
bound
and
add
das
js
fnstcw
pop
cltd
add
or
jp
cld
inc
sub
std
or
dec
sbbl
sbb
movl
xchg
push
sub
loop
leave
rolb
cli
ficompl
mov
jne
popa
repz
mov
lahf
sub
ds
rol
add
cmp
test
lahf
cli
push
mov
jmp
addr16
adc
push
sbb
cwtl
mov
pop
or
sti
push
bound
add
repz
int3
in
ja
lea
cmpsl
push
jg
cld
cld
clc
orb
outsl
sub
adc
rcll
push
inc
sub
je
stos
mov
sub
and
aas
mov
pop
dec
add
add
sub
mov
enter
mov
jg
pop
cltd
add
xchg
scas
mov
push
jae
lods
and
imul
mov
xchg
inc
lods
push
nop
orb
pop
adc
out
enter
sbb
ret
add
adc
inc
stos
cmp
add
mov
jbe
std
and
mov
cmpsl
inc
repnz
adc
aas
add
sarb
or
dec
sub
in
pusha
lcall
push
nop
xor
cmp
cs
xchg
fcomps
imul
or
test
rorb
add
dec
cmp
xor
add
sbb
mov
shl
push
outsb
jecxz
mov
push
rorl
sub
sahf
cwtl
adc
or
xor
mov
in
sbb
push
adc
inc
pop
push
add
je
hlt
jns
addl
ljmp
pop
pop
push
aam
add
add
outsb
inc
mov
push
adc
pop
push
adc
mov
std
add
push
fisubs
pop
mov
add
jb
mov
xchg
xor
push
ss
sti
aam
repnz
cmp
add
in
fmuls
xor
dec
fldenv
jle
nop
cmp
lds
movsb
inc
les
cmp
rclb
cltd
les
cmc
xor
iret
cmp
aam
jmp
cmc
int
add
mov
call
cmp
ds
mov
sbb
movsl
xchg
sub
loopne
jns
jl
or
or
or
or
xchg
pop
mov
nop
add
aad
call
insl
jecxz
testb
jmp
lods
sti
add
pop
pop
cwtl
outsl
pushfw
cmp
mov
rol
filds
jmp
or
mov
out
jno
add
inc
shlb
push
stos
mov
mov
call
pushf
mov
sbb
jp
loopne
addb
jne
fs
test
jbe
orb
fistpl
dec
movsb
ret
shll
or
aaa
inc
jbe
aam
mov
pop
adc
sahf
pop
cmp
add
mov
mov
loope
cmc
sub
bound
repnz
push
xchg
mov
mov
inc
loopne
fiaddl
mov
loope
mov
sti
jae
adc
dec
rol
enter
movsl
ljmp
fs
or
cltd
pushf
sub
mov
add
inc
mov
cwtl
add
mov
pcmpgtw
es
jnp
push
cld
or
mov
jno
cmpsl
js
inc
xorb
xorl
add
xor
mov
mov
es
test
sbb
imull
arpl
shll
push
rcrl
inc
inc
inc
add
shll
add
sti
pusha
pop
sub
leave
test
dec
fnstcw
inc
int
jb
cs
mov
pop
repnz
fisubl
sti
lret
sarb
loopne
and
sub
add
fidivl
notb
sub
hlt
add
aad
lds
hlt
icebp
jg
mov
push
sbb
xlat
stc
add
out
cld
lds
and
out
add
jmp
subb
fidivl
aaa
add
mov
in
test
aaa
dec
jns
add
ficoml
push
enter
add
std
das
insl
xor
imul
test
sbb
adc
dec
sahf
push
in
add
xlat
xchg
punpcklqdq
push
cld
inc
jb
lcall
adc
or
push
lea
fsubrs
add
add
in
push
fadds
xor
add
inc
insb
pushf
aam
inc
jg
dec
test
or
xchg
call
scas
jle
inc
mov
lods
stos
sub
sub
fcoms
dec
push
icebp
xor
sti
enter
add
adcl
into
shlb
fbld
je
lea
pop
bound
sub
shrb
xor
xchg
std
xor
int
xorl
mov
add
loope
movsb
jmp
mov
jb
addb
xchg
mov
sub
popf
fadds
jmp
movsb
dec
mov
loopne
pushf
in
and
je
add
pop
sub
roll
nop
in
mov
nop
push
push
add
stc
outsl
scas
and
xchg
add
adc
dec
fdivrl
popf
enter
sub
je
int
or
cmp
stos
shl
mov
xor
add
or
or
add
inc
scas
outsl
push
repnz
sub
pop
aas
test
cwtl
roll
sub
incb
push
sti
out
ss
xchg
add
into
mov
movsb
aaa
inc
jae
push
push
or
fstpl
or
and
add
loopne
adc
push
es
add
outsb
addb
int3
sub
jecxz
jl
out
in
inc
pop
add
mov
mov
add
fnstenv
shll
mov
int3
movsl
addb
lds
mov
clc
das
xchg
iret
dec
mov
stc
aaa
inc
js
pop
fstp
and
rcl
int3
imul
cmpsb
test
out
pop
or
rclb
mov
iret
cld
xchg
pop
idivb
dec
xor
inc
cmc
clc
jb
sahf
cs
das
inc
pusha
mov
adc
push
xchg
push
scas
or
pusha
data16
mov
mov
sub
gs
mov
inc
or
cwtl
add
lahf
shll
xor
sbbl
push
mov
shrb
iret
clc
adc
mov
xor
nop
outsb
daa
shll
div
add
add
pusha
dec
daa
push
or
popa
pop
sub
jmp
fsubs
add
aas
xchg
hlt
cmp
cmp
scas
dec
xor
or
adc
mov
cmp
jmp
add
out
aaa
dec
jno
sbb
inc
bound
add
daa
adc
add
inc
das
std
pushf
jbe
add
add
loopne
xchg
add
out
sbb
fsubp
adc
fisttpll
aas
inc
adcl
fdivl
cwtl
das
popa
sbb
cmp
ret
inc
cwtl
arpl
jecxz
insb
ffreep
pop
fs
dec
xchg
roll
shlb
dec
cwtl
add
or
push
push
mov
aam
repnz
bound
add
jmp
cwtl
add
repz
cmp
inc
cli
pop
push
cmc
iret
xor
add
pop
test
repz
fwait
xor
pop
push
cmp
incb
jno
andl
add
pop
lea
clc
inc
arpl
loopne
and
pop
add
lods
cmp
inc
mov
pop
cmp
sbbb
lahf
pop
push
call
loope
subl
mov
fstpt
out
dec
mov
dec
movsb
call
in
loopne
cmp
lret
mov
adc
out
stos
mov
and
mov
pushf
xorl
push
push
jge
and
mov
pusha
push
sub
lods
or
push
subb
jb
xor
adc
xor
aas
xchg
mov
inc
mov
add
sti
xchg
aas
cli
inc
sbb
pop
mov
pop
or
lcall
add
push
add
sub
frndint
sbb
roll
mov
adc
stos
subb
or
inc
dec
out
inc
dec
dec
stos
enter
data16
adc
dec
and
out
test
daa
rorb
movsb
prefetcht1
and
aaa
inc
jno
push
and
cmp
cmp
dec
ss
xor
ds
jl
jb
push
cli
and
inc
lea
arpl
scas
loop
testb
ret
int
enter
sub
cld
add
and
pusha
push
sbb
cmp
mulb
add
popa
cld
jg
test
add
inc
dec
lea
push
dec
call
gs
jne,pt
mov
cmp
hlt
fisubrl
mov
popa
mov
push
push
cltd
out
jno
and
sub
mov
jb
loop,pt
xchg
xlat
adc
fiaddl
pop
stos
idivl
mov
xchg
mov
daa
aaa
sub
sbb
add
fwait
loopne
fmull
and
mov
or
sbb
subl
jg
lahf
xchg
cli
loopne
sahf
inc
leave
outsb
push
aad
adc
stc
add
stos
cs
and
adc
dec
bound
adc
popa
enter
out
add
lds
push
lret
imul
shlb
ljmp
sahf
mov
push
out
cli
xor
mov
xchg
cmpsb
sbbb
xlat
mov
lods
add
add
mov
popf
clc
rcrb
mov
dec
adc
cmpb
jle
pop
cmpsb
jne
es
mov
in
adc
jl
mov
jne
add
lods
loopne
jo
add
aam
bound
cmpl
fcompl
call
daa
cmp
imulb
pop
add
ss
pop
push
xchg
lcall
or
inc
or
add
aaa
outsb
sub
mov
add
xor
mov
xchg
mov
adc
fsubs
inc
andl
pusha
dec
inc
lds
mov
je
enter
out
mov
mov
fadds
leave
add
dec
into
pop
loopne
mov
adc
xor
mov
fisttpl
jge
pop
and
clc
xchg
push
aad
lods
in
pop
dec
push
sti
call
adc
add
clc
pusha
jecxz
pusha
sarb
push
dec
es
mov
or
push
push
add
mov
in
add
popf
xchg
fcmovnu
mov
jge
jmp
stos
add
xor
hlt
pop
mov
lock
popa
add
push
dec
test
aaa
inc
or
sbb
pop
add
out
icebp
pop
mov
addb
or
fidivrs
mov
loopne
je
jmp
mov
jmp
ja
pushf
fwait
mov
add
add
or
xchg
out
and
adc
adc
orl
xchg
cmp
mov
dec
add
xlat
stos
xor
jmp
lea
mov
pop
jp
fisubrs
test
mov
pop
shrb
arpl
push
sub
dec
dec
cmp
mov
sub
mov
sub
inc
std
outsb
daa
sub
and
push
dec
in
nop
pop
sbb
xchg
pusha
fldl
popa
cmp
lods
pop
nop
adc
bound
test
xor
jno
ret
dec
push
push
adc
xor
jb
add
lahf
ret
fucom
xchg
inc
movl
xor
and
ds
add
or
sbb
add
aam
adc
loop
mov
stos
dec
or
add
ds
adc
int
inc
clc
inc
add
repz
inc
or
pop
test
adc
or
nopl
mov
movsb
jae
add
aam
jecxz
fucomi
fcmovnb
jo
xchg
stos
enter
int3
imul
jp
cli
add
inc
or
test
add
push
in
add
pushf
sbb
add
aaa
ret
inc
mov
mov
shrl
movsb
xorps
inc
sub
ljmp
jmp
cld
arpl
sbb
lods
lock
dec
es
pop
adc
pop
cmp
sti
add
adc
jmp
fnstsw
push
sbb
mov
add
imul
add
push
nop
push
adc
movsl
pop
imul
or
or
into
cld
adcl
sahf
jp
jno
shl
sub
push
stos
inc
mov
subb
lret
pop
enter
sbb
jb
add
mov
call
pop
jecxz
outsb
add
jae
cmp
mov
and
jmp
sbb
repz
push
hlt
jb
scas
dec
pop
jno
push
add
push
push
xchg
cld
xchg
sub
dec
add
jp
push
push
mov
and
mov
sub
mov
ds
xchg
stc
add
loop
cmp
and
adcb
mov
push
jae
sub
cmpb
cltd
sub
sar
add
lds
stc
call
mov
pop
pop
addb
mov
aas
xchg
add
jae
sbb
rclb
or
xchg
or
mov
icebp
test
add
inc
mov
sarb
pop
jno
in
repnz
divw
sbb
fcmovu
cmpl
stc
jno
adc
cltd
xchg
ja
int3
push
pusha
inc
arpl
inc
rol
sub
add
mov
and
adc
jae
insl
out
scas
push
popa
jle
inc
xchg
out
pop
pop
jb
ret
cwtl
xlat
xchg
jecxz
add
jp
dec
std
mov
bound
inc
ftst
xor
mov
cmp
add
add
dec
test
inc
and
pop
mov
inc
cmp
hlt
pop
mov
dec
or
xorl
and
add
insb
mov
pop
cld
movsb
stc
in
inc
iret
js
dec
jl
add
cmp
mov
repnz
out
icebp
dec
add
ret
jno
add
fadds
xchg
pop
dec
lock
xor
sbb
aad
rcl
movsb
cmc
add
adc
mov
fistl
insl
add
test
sub
push
or
adc
out
and
mov
rsqrtps
mov
jge
jo
loop
in
push
sub
add
add
enter
push
sbb
dec
lret
imul
mov
movl
sbb
insb
test
or
adc
shl
std
dec
add
shr
sarb
repnz
and
or
pop
sbb
jg
jecxz
ficompl
rolb
pop
cs
sarb
aam
jge
jno
scas
cmpsb
xor
in
cld
adc
pusha
fldcw
dec
sbb
and
cwtl
sbb
push
and
clc
fdivrl
add
xor
adc
outsl
subb
hlt
pop
movsb
pusha
bound
pmullw
dec
rorb
push
add
dec
subb
dec
imul
enter
sbbl
out
add
add
mov
or
xchg
in
pop
cltd
insl
sbb
nop
mov
dec
push
test
sbb
repz
mov
adc
loopne
pop
test
adcl
je
test
jae
int
pushf
pop
test
pop
orl
orb
fmul
sbb
mov
lock
mov
add
scas
sbb
sub
out
add
push
in
add
outsb
call
fistl
push
or
mov
jl
cmpl
sub
fwait
stos
aad
pop
and
cmp
pop
sti
cmp
push
adc
push
mov
adc
sbb
aas
mov
and
mov
or
daa
adc
pop
jecxz
or
popa
xchg
pop
lods
call
push
cmp
mov
cltd
cmp
pusha
dec
or
and
out
push
jb
add
pop
lahf
pop
movl
rclb
sbb
aam
push
ds
in
out
sub
imulb
and
xchg
rclb
add
add
and
dec
es
enter
mov
pop
add
mov
push
fbstp
add
and
cld
xor
test
add
cmp
ljmp
call
add
adc
inc
mov
jge
dec
pop
pushaw
and
adc
fsubr
or
filds
int3
push
mov
pusha
js
adc
adc
pop
cwtl
add
lea
jnp
xchg
in
cltd
inc
sub
call
insb
das
or
shlb
out
cmp
xor
xor
cs
repnz
rolb
push
dec
add
push
dec
add
dec
