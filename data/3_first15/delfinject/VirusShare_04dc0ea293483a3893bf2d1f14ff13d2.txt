cs
incl
add
add
inc
outsl
outsl
insb
gs
outsb
add
add
fwait
out
incl
gs
jb
gs
push
jns
je
insl
add
xor
or
outsb
jae
inc
push
add
sbb
sbb
or
add
push
add
push
insl
dec
insb
dec
outsb
je
sbbb
jg
fistpll
push
gs
adc
lret
sbb
int
jge
mov
push
outsl
jb
arpl
adc
out
insb
testl
jb
sub
popa
aaa
repnz
imul
cld
sbb
cmpl
push
jle
sbb
std
ja
imul
or
fs
je
cmp
sub
adc
push
out
mov
fs
push
xor
or
dec
jbe
and
rolb
test
adc
jae
inc
test
push
in
jg
push
push
inc
insb
popa
jae
mov
adc
inc
push
push
fcmovnu
or
pop
push
add
jle
mov
fmull
in
jae
or
jb
in
xor
adc
negb
jbe
xorb
arpl
or
sbb
mov
mov
andps
imul
lods
adc
dec
xchg
insb
enter
lahf
adc
push
push
popa
bound
adcb
js
loop
data16
clc
pushf
mov
dec
insl
jo
inc
pop
mov
inc
test
lods
outsl
ret
sbb
inc
test
push
arpl
or
test
adcb
push
adc
rorb
sarb
mov
lret
or
dec
add
aas
imul
inc
out
adc
fwait
mov
cmp
cmp
inc
add
jp
inc
sahf
cmovae
dec
rcrl
inc
push
mov
in
and
pop
cwtl
shll
fcomp
inc
sbb
dec
push
pop
in
rorl
inc
adc
inc
xchg
inc
mov
cmc
ljmp
ds
push
sbb
jmp
call
ret
sbb
lret
lahf
aas
sti
cld
sbb
cmp
dec
add
jmp
pushl
jne
incb
dec
cmp
push
dec
bound
arpl
pop
mov
inc
jb
lods
add
mov
push
gs
sub
mov
fiaddl
or
imul
mov
fiaddl
jnp
inc
es
jle
cmp
inc
fidivl
inc
dec
scas
punpcklwd
js
rorb
jns
imul
xchg
inc
insl
xchg
jo
xor
mov
inc
adc
cmp
cwtl
or
sarb
xor
cmp
cmp
add
fdivrs
lds
jbe
in
in
outsw
sub
adc
mov
push
fildl
jnp
adc
jp
sub
push
bnd
test
jb
mov
add
fistl
cmp
addb
jecxz
mov
inc
fs
mov
cmp
adc
cmp
adc
inc
add
or
xorl
push
and
pop
pop
mov
sub
lods
cmp
or
imul
sbb
mov
push
mov
mov
xor
out
add
inc
jbe
jae
jbe
cltd
dec
loopne
add
jge
and
and
aas
inc
adc
test
jns
cmp
xor
adc
xorl
mov
or
push
push
inc
jno
pop
dec
cwtl
cltd
and
sbb
add
push
orl
push
dec
sahf
push
jnp
clc
insb
nop
hlt
push
outsl
mov
popa
sub
jbe
loop
popa
frstors
dec
ss
mov
aam
xchg
xor
sbbl
push
or
fdivrs
inc
inc
dec
mov
movsl
mov
push
push
arpl
in
inc
jmp
sarb
xor
stos
pop
mov
jo
gs
outsl
arpl
out
push
arpl
inc
fildl
dec
mov
outsb
xacquire
in
cmpl
push
mov
pusha
in
outsb
fs
mov
lea
dec
gs
jo
cmp
xchg
fcoms
cmpsl
daa
add
stc
outsl
jns
sbb
sub
dec
shrb
rorl
jmp
rolb
nop
inc
push
sbb
inc
push
sbb
pop
and
fs
push
push
dec
cmp
nop
dec
lock
inc
cmc
inc
fs
inc
push
cmp
xor
inc
push
sbb
sub
sbbl
and
fs
xchg
cmc
sbb
adc
out
fstpl
push
add
mov
and
push
push
call
testb
call
movzwl
mov
and
lea
roll
adc
or
or
in
add
pop
aas
mov
inc
dec
dec
enter
and
incl
inc
inc
andl
arpl
and
xor
xor
sub
cmc
cmp
push
in
aam
insb
add
jae
mov
jp
das
adc
in
xchg
dec
and
je
popa
and
jbe
int
or
pop
inc
inc
fistpl
or
gs
adc
imulb
inc
popa
imul
jne
outsl
arpl
push
fs
add
push
push
sub
inc
scas
lds
imul
pop
pop
out
in
cmp
aas
data16
shlb
lret
lods
mov
jb
inc
cmp
push
push
or
imul
fwait
aad
ja
cmpsl
push
inc
adc
cltd
jae
mov
adc
push
aaa
jae
dec
dec
pop
lock
in
mov
xchg
or
mov
dec
add
inc
or
mov
int
adc
test
adc
sbb
lret
mov
sub
adc
adc
mov
mov
fildll
fildll
add
sbb
and
push
mov
pop
and
jp
add
adc
pop
push
xchg
or
and
sub
nop
and
sub
xchg
enter
sub
jnp
pop
ss
cmp
pop
fstps
xor
inc
ljmp
xchg
inc
xor
add
add
idivl
mov
fistpll
jl
add
add
jbe
dec
arpl
adc
mov
inc
sti
mull
addr16
add
and
adc
cld
inc
jnp
add
cmpl
rorl
mov
jmp
lret
add
mov
mov
sbb
add
sub
jne
jns
push
mov
sub
ret
sbb
shr
mov
incl
sbb
and
add
dec
mov
test
add
lret
push
mov
mov
add
or
or
popa
loopne
cmpl
mov
and
testb
jne
orl
adc
testb
push
add
cmp
movsl
das
fcomi
in
outsb
mov
cld
push
jb
repnz
faddl
push
push
sbb
mov
xor
fsubs
push
push
cli
jmp
xor
sub
test
in
outsl
jae
out
fists
ror
movl
mov
adc
add
ja
shrl
roll
jp
loopne
mov
rorl
shll
add
mov
std
ficomps
xor
mov
cmpb
fsubp
je
jmp
or
mov
add
xlat
outsb
push
mov
test
or
pop
out
add
lds
call
mov
or
add
and
sti
sbb
leave
jecxz
mov
or
mov
or
adc
mov
pop
lods
add
sbb
in
inc
sbb
movb
pop
pop
sti
or
pop
pop
out
arpl
fmull
cmp
mov
and
loopne
and
push
or
out
loope
ret
sbb
add
push
cmp
lock
incb
jmp
or
cmp
in
punpckhdq
jge
push
push
and
out
jne
sub
mov
cmp
jbe
sub
add
jmp
test
jne
jo
fistpl
mov
enter
movsb
mov
add
nop
mov
loopne
repnz
adc
and
jmp
insb
fcomp
dec
ficomps
lahf
mov
mov
add
mov
jbe
ljmp
adc
jnp
mov
push
mov
fbstp
jo
fs
mov
or
shlb
mov
repz
mov
and
jae,pn
xor
shlb
out
ret
out
sub
inc
lods
aam
jo
rolb
pop
or
xor
mov
jmp
mov
mov
cld
push
std
sub
add
jbe
repnz
mov
iret
xchg
mov
nop
adc
push
subb
cmp
jb
test
or
out
sub
jmp
movsl
inc
divl
or
and
mov
inc
inc
js
enter
dec
lea
in
fiaddl
xor
xchg
movsl
sbb
or
lea
or
push
mov
ret
mov
insl
cmp
rolb
dec
sti
imul
jp
je
adc
div
jg
dec
add
sarl
or
jbe
mov
sbb
subl
pop
or
adc
mov
push
xor
je
xchg
or
xchg
sbb
pause
cmp
fs
push
lret
pop
je
sbb
cmp
lods
push
jno
fcomi
mov
and
inc
out
fcomps
and
inc
movsbl
jecxz
fstp
xor
mov
add
test
lock
in
les
leave
mov
cmp
add
mov
aam
add
cmp
jne
mov
pop
ret
test
btr
mov
stos
jle
pusha
or
insb
mov
es
ret
pop
lret
cli
sub
lea
fistps
jmp
inc
add
pop
cmp
jb
mov
fstl
sbb
mov
ss
sub
mov
sbb
std
inc
call
mov
andb
fdivr
cld
testl
mov
mov
movl
sbb
inc
and
test
incb
imull
iret
mov
mov
cld
outsl
inc
and
dec
cs
sub
cmp
lea
cmp
popa
jne
lea
shl
jo
or
xchg
or
je
xor
ret
imul
daa
cltd
iret
and
xchg
pop
rorb
adc
cld
enter
loopne
xor
sbb
sub
cltd
mov
popf
mov
jmp
mov
daa
pop
scas
or
or
inc
and
cmp
sbb
lret
sub
lock
shlb
jb
int3
cmp
popf
enter
dec
add
das
cmp
mov
push
pop
mov
dec
imul
push
cld
xchg
roll
test
add
mov
jne
subl
xor
cs
mov
fadds
push
pop
xchg
dec
dec
pop
push
push
push
mov
push
cmp
push
outsl
adc
imul
adc
cmp
mov
xchg
sub
das
loope
outsb
movsb
pop
andl
and
pop
outsl
fs
jmp
sbb
enter
and
lea
out
loop
out
mov
push
mov
jne
testl
xor
fdivs
push
jne
cmp
jbe
lea
inc
pop
xor
mov
mov
imul
mov
cmp
add
cmp
xor
jmp
das
dec
clc
sub
push
mov
cmp
test
dec
pop
jne
in
lds
testb
ds
adc
cmp
sbb
pop
cmp
outsl
lea
cld
pop
fsubs
gs
lret
sbb
pop
add
clc
jo
or
jmp
push
test
jmp
sbb
pop
scas
jb
sbb
inc
adc
lret
jb
cmp
inc
mov
fcoml
mov
xchg
mov
mov
mov
mov
lea
push
mov
jno
lods
sar
mov
stc
xor
les
cmp
addr16
push
push
xchg
clc
lcall
popf
mov
inc
sbb
movsl
test
call
icebp
lahf
cvttps2pi
cmp
jb
lea
ficompl
cmc
sub
adc
les
jbe
lea
lea
sub
sahf
arpl
mov
das
push
ds
push
pop
and
inc
outsb
in
ja
jge
mulps
pop
cld
or
mov
mov
sbb
lret
jmp
sbb
add
add
xchg
add
out
mov
inc
inc
cs
dec
push
adc
das
cs
push
int
push
mov
inc
jae
lock
or
mov
call
add
test
in
lea
add
ljmp
or
sub
imul
imul
addr16
ret
or
xchg
clc
push
imul
sub
or
ret
lods
jno
cmp
add
and
push
ret
andl
jo
push
js
jmp
mov
test
mov
cld
in
pop
add
adc
test
or
mov
icebp
bndstx
and
push
push
jb
or
pop
jno
cmp
cmp
ds
sbb
sbb
testb
mov
test
cld
inc
outsb
insb
adc
add
mov
dec
jae
neg
fldz
fstl
inc
jp
pop
stos
in
or
rcr
mov
loope
xchg
movsb
sahf
mov
repnz
mov
sub
rorl
shlb
inc
xchg
jp
pop
daa
imul
test
fcoms
cmp
jae
rorb
stos
xchg
push
imul
aas
xchg
mov
rcl
cmp
push
pop
or
sub
jbe
adc
jecxz
lock
das
pop
inc
add
fmuls
mov
loope
cltd
pop
outsl
push
add
mul
xor
sbb
mov
push
mov
fsts
enter
mov
mov
stc
imul
bswap
insl
les
rclb
sahf
xchg
sbb
cmp
pop
sbb
sbb
cltd
inc
inc
sbb
pop
inc
sahf
or
jg
aas
dec
mov
mov
push
or
push
push
icebp
push
aas
jb
dec
mov
sub
add
adc
mov
sub
test
sbb
into
shll
mov
imul
sbb
sar
lret
pop
faddp
push
push
cmpsb
push
in
cmp
ja
scas
mov
add
push
lock
pop
mov
xor
cmp
ret
sahf
aad
push
or
inc
or
lock
push
or
test
or
inc
clc
mulb
push
push
mov
leave
lock
add
pop
jmp
push
or
call
add
push
shrb
fcmovnb
cmp
sarb
push
mov
mulb
cmp
jne
test
es
and
jge
push
inc
shl
sub
jge
cwtl
inc
pop
outsl
fistl
das
jg
in
sbb
mov
fidivs
rclb
and
in
add
lock
mov
fbld
rcr
sbb
sbb
andb
lock
negl
sub
aas
icebp
push
and
and
mov
les
iret
addb
pop
inc
scas
gs
pop
lock
adc
dec
mov
mov
push
rorb
jl
inc
mov
cmp
jne
mov
jnp
add
or
push
push
decl
stos
adc
mov
dec
add
dec
jne
push
or
inc
rorl
jecxz
push
scas
push
add
out
fsubrs
dec
or
lea
out
js
dec
aam
fsubs
jbe
sub
insb
xor
testb
mov
add
fstpl
mov
mov
out
cmp
aaa
add
adc
clc
add
incb
int3
dec
cmp
push
add
pmulhuw
jb
push
and
insb
ffree
mov
call
add
stc
stc
in
lock
imull
rorb
in
lock
mov
outsl
dec
lock
mov
sbb
ja
movb
aas
jne
dec
xor
lods
lock
xchg
dec
jle
or
cmpb
fcmovnu
xchg
outsl
adc
add
out
jle
dec
shlb
push
pop
test
pop
loopne
mov
loopne
jnp
in
or
orw
sti
mov
adc
dec
fbld
ds
sti
in
div
xor
add
fildll
cmp
insb
pop
push
loopne
fcmovu
jle
pop
ja
add
jg
fldenv
add
incl
xor
filds
cmp
jbe
pusha
lcall
outsb
out
lret
pop
les
push
dec
jne
xor
idivl
lea
jns
sti
shr
mov
pop
inc
add
insb
fdivs
test
push
std
ljmp
xor
call
je
jge
xor
adc
je
push
jmp
pop
clc
test
mov
cmp
jge
and
sub
mov
lods
in
outsb
arpl
jo
mov
fisttps
xchg
call
ret
jno
ret
adc
jg
push
vpmacssdql
mov
das
int
jb
adc
jae
jb
enter
dec
push
mov
test
lods
fiaddl
jl
cmpb
fwait
popl
dec
testl
call
xchg
faddl
sub
lock
add
xor
sbb
dec
ja
inc
in
xor
add
mov
negb
out
lea
xor
push
cmp
enter
xchg
push
add
clc
jne
mov
outsl
aas
mov
lods
add
notb
add
mov
xor
daa
pop
and
loopne
sub
sbb
test
imulb
or
sub
add
clc
lods
or
ret
cmp
push
xchg
lea
jmp
mov
cltd
nop
pop
sub
lods
aad
mov
mov
xchg
js
or
ficompl
sbb
inc
inc
adc
orl
mov
sub
and
daa
out
jle
push
je
sub
mov
cli
test
mov
inc
inc
xor
cmp
adc
fidivs
int3
inc
inc
dec
jbe
test
push
inc
sbbl
dec
jne
mov
ja
push
push
push
push
pusha
xor
or
gs
dec
inc
loop
mov
xchg
xor
mov
aaa
ret
add
pop
loop
mov
cmp
out
add
add
add
clc
jbe
mov
mov
or
mov
and
arpl
cmp
jne
dec
fstpt
sbb
xor
movl
sbb
mov
add
movl
loopne
out
rolb
inc
push
test
inc
jb
add
std
push
add
cmpsl
or
jbe
pop
xlat
enter
loop
push
in
insl
and
and
cld
jmp
add
push
sti
mov
sbb
loope
lea
xorl
xor
or
mov
into
sub
push
mov
jae
std
and
lret
icebp
imul
data16
adc
xchg
dec
jecxz
mov
shlb
add
andb
mov
fisubrs
inc
sbb
push
mov
and
add
mov
sbb
pop
mov
pop
mov
and
cld
iret
dec
jo
add
push
mov
cmp
jne
mov
dec
mov
adc
add
mov
call
dec
or
and
insl
pop
sub
sbb
in
jl
rol
dec
mov
jnp
pop
cmp
cmp
mov
mov
and
outsb
adc
lock
pop
movsl
or
pop
or
rclb
jbe
mov
mov
dec
dec
das
or
loopne
fnsave
or
daa
rcrl
out
les
call
add
ret
rcrl
mov
jg
repnz
or
inc
jne
ljmp
leave
je
outsb
je
push
xchg
mov
inc
pop
or
xchg
out
cmp
adc
cmp
jmp
mov
ret
push
xor
shrb
imul
cltd
out
in
push
mov
jne
das
mov
out
push
or
sbb
adc
xor
jmp
xor
adc
fisubs
fistl
jg
or
mov
xor
into
ss
or
cmp
mov
jmp
cmp
ja
dec
ret
add
es
lcall
fsub
jbe
push
mov
jg
incl
jg
push
pop
pop
sti
cli
push
sbb
dec
mov
cmp
je
sub
ja
sub
jg
xor
nop
cmp
test
mov
adc
pop
xor
jle
std
fnstcw
cmp
out
add
xor
mov
sti
or
or
pop
shll
push
inc
lea
dec
or
or
neg
and
or
jl
fidivl
sub
xchg
sub
add
js
jbe
mov
add
and
sub
jbe
sti
int
mov
mov
bound
fldl
iretw
mov
jo
push
or
adc
in
xor
or
or
mov
add
add
pop
ja
cmp
sbb
xor
imul
or
loop
ja
push
in
mov
fldcw
mov
and
mov
jge
mov
cmp
jb
add
stos
loope
cs
mov
or
jne
mov
aam
pop
testb
adc
or
and
mov
add
jg
mov
adc
cmp
mov
jl
stos
dec
add
fidivrl
lcall
adc
fstl
mov
loope
or
add
neg
popa
adcb
push
in
jl
inc
mov
movsl
jle
mov
in
ret
and
pop
cmp
dec
shll
sbb
sbb
push
adc
xor
rcll
adc
or
xchg
dec
jg,pt
xchg
ret
stos
and
push
fstl
pop
fistpll
int3
add
mov
add
cmp
je
out
out
hlt
mov
pop
sub
je
and
je
in
out
js
outsb
pop
je
xor
xor
sti
outsb
call
xchg
daa
jmp
push
xor
ja
xor
clc
daa
mov
or
rolb
xor
dec
jg
lods
movsl
test
jmp
adc
push
neg
jle
js
pop
sub
jmp
inc
daa
xor
addr16
mov
mov
popa
jb
pop
and
push
or
sub
ja
ret
or
in
mov
lret
pop
xor
shr
mov
xor
jecxz
or
mov
push
pusha
sub
leave
ret
mov
jmp
adc
mov
xchg
dec
dec
or
sbb
sbb
pop
mov
pushl
mov
and
xor
cld
and
sbb
fwait
aad
inc
sub
push
mov
fimuls
adc
mov
outsl
rclb
mov
pop
pop
ja
jne
inc
adc
push
lea
cmp
ret
xchg
xor
test
out
in
rcrb
add
adc
mov
in
cmp
mov
or
pop
mov
adc
mov
sbb
imulb
mov
pushf
fs
popw
or
out
or
sbb
jle
xchg
jae
cmp
hlt
pop
mov
push
xor
stos
mov
xor
jmp
pop
rolb
stos
inc
sbb
cs
mov
adc
into
lds
ret
shlb
aam
sbb
sub
ret
or
push
in
fidivrs
adc
xor
nopl
sbb
jecxz
mov
mov
mov
xchg
pop
mov
mov
jno
add
add
popl
jae
pop
decb
movswl
and
loope
popa
mov
inc
sub
roll
sbb
clc
mov
in
cmp
pop
out
sub
lock
mov
pop
repnz
mov
out
mov
jge
push
cmp
das
out
je
cli
adc
fdivrs
cmp
mov
push
sbb
lea
push
sbb
push
clc
push
jmp
mov
sbb
das
push
out
sub
mov
jne,pn
cmp
pop
pop
jne
adc
jnp
mov
xor
pop
mov
out
add
push
or
jnp
pop
aas
clc
push
int3
or
jle
xor
pop
or
mov
pushf
sub
fsubl
cmp
pop
cmp
adc
or
jne
mov
or
and
cltd
out
subl
stc
adc
repnz
loopne
sbb
push
push
rolb
xchg
pop
add
or
and
mov
xchg
roll
xchg
cld
mov
les
clc
das
shrb
cmp
push
add
repnz
add
push
ret
ret
pop
jmp
mov
je
inc
cld
pop
arpl
popa
in
les
xchg
mov
push
lods
addb
sbb
sarl
jg
or
add
push
mov
ss
add
pop
cmpsb
popa
lock
push
loopne
mov
movq
adcb
rcl
out
push
std
adc
f2xm1
sbb
fmuls
fcoms
push
movsb
adc
xor
sub
xor
inc
shrb
mov
ret
xor
leave
xor
sbb
mov
push
xor
lods
lock
or
dec
push
cmp
rcll
frstor
cld
push
add
dec
jne
sbb
jmp
cs
push
lea
xor
cmp
adc
ljmp
xchg
mov
test
jne
xor
pop
fldenv
fcomps
fbstp
fsub
test
adc
xor
mov
mov
inc
or
adc
lods
add
iret
xchg
mov
xchg
pop
xchg
insl
mov
cmp
dec
cmp
sub
pop
repz
in
pop
mov
pop
pop
push
xor
insl
jmp
into
bound
push
loop
sbb
addr16
adc
loop
lea
notb
cmp
iret
and
jecxz
fcmovne
mov
and
xor
mov
test
push
push
int
add
movsl
sub
shrb
rorb
fistps
imul
or
and
rcl
or
pusha
xor
xlat
dec
rcl
xchg
mov
adcl
pop
or
dec
pop
les
mov
clc
fistl
outsb
xchg
bound
xor
jo
imul
push
imul
insl
or
pop
inc
adc
in
add
into
pop
xchg
mov
xor
adc
call
insb
popf
sbb
mov
or
mov
sub
and
stos
mov
push
mov
jnp
lea
xor
adc
push
add
mov
sti
adc
int3
add
pop
sbb
imul
adc
cltd
fld1
mov
in
push
xchg
adc
xchg
je
mov
push
push
sbb
jmp
pop
sti
pop
add
mov
mov
add
pop
push
push
out
nop
mov
pop
and
leave
inc
inc
add
jmp
scas
rolb
movsbl
inc
inc
jmp
and
jle
popa
xor
push
pop
loope
sbb
daa
adc
pop
loop
cs
adc
cmp
mov
adc
add
cmp
and
xchg
adc
mov
mov
test
addr16
pop
rcl
or
sti
in
mov
inc
cmpl
je
movsb
insb
and
jl
sub
ja
and
mov
xlat
push
push
nopl
pop
cmp
mov
cmp
mov
or
add
adc
adc
std
push
cmp
je
rclb
orl
jmp
test
sub
push
push
mov
sbb
mov
movb
pushl
outsl
and
sub
movl
scas
test
jecxz
in
lods
ss
ss
mov
adc
fcomps
test
sub
popl
lock
xor
nop
cmp
xorl
xchg
jns
fdivr
sarl
enter
adc
out
lods
popa
adc
cmpsl
adc
stos
mov
mov
inc
inc
cmpb
ja
aaa
xor
xor
aas
imul
inc
or
pusha
add
pop
in
jnp
aad
and
je
push
cmpsl
fldenv
push
iret
adc
pop
mov
and
fistpll
pop
adc
fsubr
push
push
or
mov
sbb
mov
mov
sbb
add
je
cmp
int
adc
cvtps2pi
dec
jmp
add
mov
jb
je
jmp
cmp
cmp
insl
jnp
and
add
jg
fldt
daa
cmp
mov
jmp
mov
es
jmp
mov
mov
push
bndldx
mov
fsubr
push
mov
jmp
mov
mov
ret
mov
push
or
pop
ret
movsb
add
inc
mov
ret
sbb
lahf
mov
mov
rolb
cmp
pop
dec
cmp
sub
and
or
jae
adc
and
lahf
or
mull
mov
mov
push
arpl
and
cmp
xor
xor
pop
push
fiaddl
mov
sbb
in
jne
push
mov
and
sbb
cmp
adc
lds
ja
cmp
cmp
jne
hlt
pop
fdivl
mov
aam
jl
or
fsubs
add
fsts
sbb
ret
jle
dec
mov
mov
filds
adc
fstpl
jg
mov
and
jo
mov
push
jbe
pop
mov
shlb
cmp
jle
dec
xor
inc
outsl
imul
xchg
jl
sti
jg
pop
movl
or
mov
js
push
mov
fistpl
mov
or
sub
add
mov
mov
mov
mov
xor
notb
cld
push
aad
idiv
add
mov
adc
adc
adc
dec
add
in
xchg
in
fdivl
loopne
and
enter
mov
mov
jmp
or
mov
std
outsl
adc
ja
add
aaa
mov
sbb
test
xchg
rolb
nop
push
in
lea
push
or
adc
or
cs
test
sbb
sahf
shll
out
or
add
movsb
push
push
mov
addl
lods
dec
add
iret
inc
jecxz
jne
push
jo
mov
sbb
xchg
add
aad
loop
mov
cmp
or
mov
sbb
adc
cmc
cmp
and
std
sub
aas
insb
adc
mov
cmp
cmpb
test
push
setb
mov
pop
call
push
es
aaa
out
sbb
jne
dec
mov
lea
and
test
pop
mov
xor
mov
sub
lds
pop
cmp
mov
mov
clc
dec
dec
mov
push
fists
pop
and
je
mov
mov
jae
push
outsb
sub
sti
or
shll
xchg
fcmovu
lds
loope
jge
sbb
mov
jno
mov
jl
stos
dec
sti
cmp
jo
rorb
sub
test
xlat
fcompl
clc
push
mov
data16
sahf
or
inc
divb
mov
in
mov
sub
aas
inc
push
cmp
outsb
movsl
fcomps
outsl
push
push
inc
and
inc
add
out
test
subb
jne
pop
mov
push
inc
pop
nop
lods
mov
add
mov
notb
in
push
lcall
dec
enter
jl
lock
jne
aam
and
cmpb
push
push
pushfw
insl
jne
or
dec
adc
xchg
faddl
movl
sub
cmp
xchg
das
add
or
push
jl
pop
xor
and
jmp
push
das
popa
outsl
icebp
clc
inc
jle
ss
fimull
dec
mov
pop
cld
sub
xor
dec
in
scas
scas
dec
int3
cmc
sbb
ret
sub
dec
inc
aad
daa
xor
loopne
push
cmp
sbb
pop
add
xchg
ss
xor
addr16
fwait
mov
cmp
cmp
mov
lea
adc
cmp
or
cltd
or
mov
pop
adc
and
jecxz
lret
data16
mov
movzwl
mov
imul
or
lods
jb
stos
aaa
mov
add
and
xor
sarl
cmp
jmp
mov
das
loopne
pop
jge
push
push
test
out
sti
shl
out
mov
cmc
fadds
sbb
mov
loope
adc
jmp
lea
or
mov
je
in
adc
xor
popf
xor
and
xchg
push
ds
xchg
dec
mov
push
repnz
inc
sbb
sbb
jge
xchg
imul
adc
or
shr
add
cmpsb
xchg
pop
mov
sbb
or
pop
or
mov
mov
sub
sub
pop
shl
js
int3
jle
and
adc
fmuls
push
push
lds
sbb
cmp
inc
jg
gs
cld
dec
ret
sub
mov
fildl
jmp
dec
dec
aaa
aaa
inc
clc
xchg
rcrl
sub
cmc
sbbb
lods
sarl
xchg
leave
cmp
je
cmp
or
in
mov
add
rolb
inc
add
enter
notl
push
mov
sti
xchg
push
stos
pop
or
pop
out
movsl
leave
inc
in
pop
mov
ja
inc
ret
and
pop
sbb
lret
jbe
mov
mov
inc
inc
or
xchg
cmp
mov
hlt
add
mov
and
jns
out
push
cmp
lcall
out
mov
add
push
ds
ret
xor
xor
add
pop
add
int
mov
in
add
cmp
pop
aas
aas
mov
fdivrs
scas
adc
add
pop
pop
pop
pop
mov
popa
xchg
aaa
call
pop
gs
sbbb
ret
pop
mov
call
push
mov
jno
js
jne
pop
js
jo
mov
loopne
sub
sbb
sub
mov
inc
add
cmpsl
ljmp
ds
cli
fs
jl
dec
mov
lods
icebp
add
mov
int3
sbbl
push
mov
and
sub
dec
hlt
jmp
jcxz
adc
pop
sti
or
add
bound
sqrtps
xchg
mov
cwtl
test
pop
or
and
test
push
stos
ja
outsl
inc
xor
add
and
and
inc
pushf
pop
pop
popf
clc
and
loop
sub
and
mov
pavgw
jecxz
scas
add
nop
cld
adc
adc
xchg
mov
js
dec
mov
shll
insl
es
adc
aam
mov
push
es
fnstsw
or
cmp
popf
lea
add
mov
inc
jo
and
xchg
bound
sbb
cmp
sub
sbb
pusha
fcompl
push
fs
cmc
ss
mov
push
sbb
es
outsl
sbb
nop
adc
xchg
pop
sub
mov
or
cmp
xor
lods
orl
add
test
or
sub
into
je
push
mov
das
pop
jnp
shl
sbb
sbb
push
push
add
mov
in
cmp
je
cmp
add
and
arpl
rorl
add
test
ret
mov
dec
lea
imul
loop
mov
mov
push
int
push
int
mov
mov
pop
lcall
push
insb
mov
rclb
pusha
lea
dec
jmp
and
adc
inc
xchg
ficomps
cmp
xor
fs
inc
ja
test
cld
out
or
repz
add
dec
jmp
mov
and
mov
adcl
mov
lods
sbb
adc
inc
adc
aad
mov
mov
test
lea
jmp
mov
cli
or
test
and
cld
jne
add
shrl
mov
xchg
cmp
dec
shrb
repz
aas
xor
js
inc
sub
je
cli
add
fimull
rcr
push
imulb
cmp
adc
mov
rolb
shlb
mov
nop
out
mov
test
push
in
fcomip
idivb
xor
ss
jl
iret
jle
dec
lret
es
ret
sub
sub
mov
push
loope
cli
lea
mov
testb
pop
add
into
loopne
ficomps
dec
cmp
stos
inc
jecxz
stos
sbb
adc
outsb
test
js
insb
or
rcr
std
je
push
mov
mov
and
repz
ss
mov
ljmp
mov
pop
clc
sub
addr16
dec
push
mov
lea
jl
push
lea
jl
add
mov
dec
add
or
out
bound
jnp
adc
ljmp
and
inc
insb
jg
stc
popl
rorb
rorb
test
cmp
mov
idiv
je
cmp
je
cmp
je
cmp
sub
popa
cmp
pop
mov
adc
inc
mov
or
push
sbb
sub
push
in
sbb
pop
test
cmp
jmp
adc
pushl
pop
push
mov
mov
adc
dec
out
push
out
jmp
inc
sbb
arpl
fbld
loope
sbb
sbb
adc
icebp
jmp
lods
outsb
mov
mov
xchg
inc
sub
loope
push
push
adc
mov
leave
cmp
insb
push
stos
dec
cs
call
loopne
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
xor
mov
decl
nop
data16
das
test
fwait
inc
or
push
repnz
lds
incl
cmp
ljmp
pop
jp
fsubs
rolb
mov
pop
fdivrs
mov
lret
testb
add
lea
popa
sub
gs
loop
roll
xlat
mov
cmp
jl
out
inc
or
loop
push
cmp
push
dec
std
push
das
mov
inc
shll
xchg
push
xchg
repnz
icebp
inc
dec
outsl
inc
cltd
andl
out
pop
pop
jge
neg
xchg
neg
fwait
jge
fdivr
lahf
or
xchg
ret
setl
push
mov
mov
cmp
stos
add
mov
pop
sbb
mov
adc
inc
shll
push
test
jge
dec
and
and
pusha
imul
loopne
cmp
sbb
in
add
std
fisttps
jnp
and
setae
outsl
mov
fisttpl
js
adc
testl
insb
mov
sbb
inc
sahf
add
aam
jo
mov
push
and
clc
aaa
inc
fs
dec
dec
popa
outsb
addr16
jae
aaa
add
add
outsb
add
push
ss
add
xchg
cmp
mov
push
add
cld
scas
and
pusha
aaa
clc
push
mov
daa
adc
das
pop
inc
sub
orl
mov
add
or
jo
imulb
into
cmp
ds
adc
sahf
push
adc
push
mov
lock
adc
into
sbb
add
in
add
inc
jno
push
stos
add
mov
xor
lea
popf
add
xchg
ljmp
jg
mov
call
call
jno
push
adc
pop
insb
xor
cmp
fisttpll
dec
adc
xorb
add
loope
clc
or
andl
adc
mov
mov
les
sbb
out
lcall
jl
dec
dec
adc
jmp
sti
into
inc
lea
xchg
adc
pop
testb
push
arpl
rolb
in
and
push
inc
sbb
mov
stos
lahf
cmp
outsl
out
fnstsw
popf
push
test
and
fwait
inc
push
lods
push
hlt
movsl
fdivs
lcall
mov
jg
adc
xchg
push
cmpw
or
mov
jns
add
fsts
dec
mov
xlat
cli
cmp
test
xchg
pop
push
fldcw
dec
adc
inc
xchg
mov
add
xorb
popa
addl
es
add
pusha
push
cmpsl
lahf
or
lea
lea
push
mov
or
dec
es
or
push
je
leave
inc
or
add
add
nop
push
dec
js
jbe
popa
mov
lea
fnsave
sbb
sub
je
adc
pop
jl
add
xor
push
push
adc
adc
jo
lea
push
or
add
xchg
jbe
pushf
mov
mov
in
daa
dec
mov
hlt
dec
addr16
in
jmp
dec
inc
mov
sete
cs
dec
or
adc
rcrb
inc
imul
leave
dec
pop
loopne
lahf
mov
push
add
sti
rclb
loop
test
xor
imul
test
sbb
cmp
sub
mov
int
or
daa
jno
mov
jle
test
jns
rolb
clc
add
sub
cmpsb
inc
adc
imul
divl
add
pop
push
inc
push
jae
shl
push
adcl
push
or
testb
or
xchg
adc
mov
jg
mov
daa
jmp
pop
popl
push
dec
call
in
push
divb
lahf
bnd
cs
fmull
jo
pop
test
rcrl
and
mov
add
sub
xchg
xchg
das
loopne
imulb
in
dec
push
dec
dec
in
jnp
pusha
mov
jne
adc
push
cwtl
jnp
jns
aam
jne
and
jg
lea
push
push
mov
cmpl
pop
pop
nop
lods
adc
xor
pop
add
jo
insb
xor
and
xchg
insl
inc
inc
mov
jle
in
bound
sbb
jae
push
pop
mov
push
pop
cld
pop
mov
jmp
push
mov
and
mov
popf
sub
inc
adc
inc
add
sbb
cmpsl
mov
cmpl
out
push
sbb
push
btcl
sbb
and
ror
or
ret
pushl
mov
mov
or
cmp
jmp
dec
in
insb
add
ds
leave
leave
xor
and
out
hlt
jg
dec
clc
xor
mov
jp
jg
outsb
push
push
lock
push
push
mov
mov
jecxz
jecxz
mov
js
aaa
sub
mov
test
icebp
or
add
ss
bound
dec
xchg
in
dec
mov
pop
rcr
pop
sbb
jo
cmp
adc
mov
pop
jne
dec
add
adc
add
mov
jo
or
test
mov
das
adc
js
lret
cmp
adc
in
push
cmp
les
aaa
inc
jge
mov
jp
enter
mov
in
into
mov
mov
inc
rorb
inc
push
cmp
and
clc
push
orl
xor
sub
mov
mov
sti
insb
mov
mov
mov
out
xchg
xor
or
jmp
push
mov
mov
mov
push
xchg
add
jnp
arpl
cmpb
push
jns
cmp
mov
ret
pop
subb
dec
sbb
or
push
inc
mov
mov
adc
sbb
jge
inc
or
mov
adc
pop
pop
mov
loop
dec
inc
jae
pop
push
adc
jg
je
inc
dec
push
dec
inc
push
dec
dec
inc
dec
dec
inc
inc
inc
inc
push
sub
push
sub
or
bound
out
imul
inc
xorb
or
insb
jg
imul
push
pushf
xor
adc
mov
bound
imul
adc
jb
ficoml
jnp
dec
insl
lods
mov
mov
addps
insb
jae
jb
lods
xchg
and
sbb
jl
sbb
and
repnz
xor
jae
adc
push
mov
jo
popa
xchg
and
mov
jge
or
jbe
rcrb
shlb
and
adc
stc
sbb
ds
add
or
idivl
sub
insb
data16
cmp
imull
inc
movsb
mov
push
cwtl
xchg
nop
nop
inc
push
sbb
cmpb
sbb
insb
push
inc
pusha
les
sbb
add
rolb
jg
jge
push
in
rorl
negl
nop
inc
push
sbb
inc
push
sbb
inc
inc
push
sbb
cmp
sbb
sub
and
nop
inc
push
and
nop
inc
push
sbb
or
push
sbb
add
je
enter
cs
cld
fldt
fwait
scas
mov
push
movsb
or
pop
jmp
cmp
xor
mov
push
ljmp
and
test
mov
sub
pop
inc
push
sbb
in
push
sbb
in
fcompl
fs
inc
fcom
shlb
push
int3
enter
push
sbb
mov
fs
lods
push
sbb
movsb
mov
inc
cwtl
xchg
nop
fs
inc
push
mov
sbb
sbb
insb
push
sbb
fs
push
sbb
push
dec
dec
fs
inc
push
inc
inc
cmp
inc
push
sbb
xor
inc
push
sbb
and
sbb
sbb
adc
fs
inc
adc
jb
inc
push
add
cld
cmc
and
lock
in
call
enter
aam
enter
int3
enter
or
sarb
mov
or
enter
mov
pushf
cwtl
xchg
pop
cmp
xchg
or
sub
data16
add
adc
xchg
imul
hlt
rcll
pop
test
pop
cmp
and
add
mov
pop
sbbl
mov
leave
fisttpl
add
lock
loopne
les
sub
js
out
xchg
jl
or
mov
insb
insb
ret
add
nop
out
mov
add
leave
and
add
pop
bound
add
add
sbb
enter
enter
ret
pop
inc
and
orb
rorb
xor
arpl
sbb
and
arpl
add
repnz
cmp
imul
popa
or
jnp
jecxz
pop
pop
leave
les
xor
xchg
or
insl
ja
out
sub
les
jae
sti
pop
adc
adc
out
and
push
sbb
xchg
or
or
addb
adc
inc
mov
add
adc
or
shrb
testl
inc
fcom
shlb
push
int3
enter
push
sbb
mov
adc
and
push
icebp
mov
push
ret
sub
jne
pop
pop
xchg
sub
int
xchg
add
mov
cmpb
out
add
add
hlt
jmp
movl
push
cmp
aaa
sub
pusha
cmpl
mov
and
repz
repz
xor
negl
add
jne
neg
sbb
pop
or
lea
ret
mov
in
xchg
and
sbb
jbe
ss
insb
xchg
in
adc
loopne
add
movsl
cwtl
lahf
mov
xchg
inc
scas
clc
cmc
mov
test
push
dec
adc
pop
aad
adcb
jnp
jo
mov
push
sti
cmp
adc
pop
mov
pop
sub
adc
or
push
and
addr16
xor
push
test
sbb
push
or
outsb
inc
sub
enter
popa
lock
enter
and
and
je
sbb
mov
aas
jno
cmovb
inc
push
imul
or
enter
or
outsl
hlt
push
push
inc
push
xchg
imul
mov
lods
jl
sub
jae
inc
add
mov
push
in
call
in
pop
adc
sub
dec
out
mov
jb
cmpsb
push
push
mov
repnz
in
je
out
stos
loope
pop
outsb
inc
add
push
popa
or
adc
jne
push
addr16
sbb
or
sub
outsb
inc
inc
add
test
addr16
xchg
jne
inc
js
mov
testb
ja
or
mov
push
mov
repz
pop
sub
mov
clc
push
pop
push
inc
loope
sbb
aas
adc
xor
add
lods
sbb
stc
sbb
aam
pop
out
or
jne
hlt
jle
clc
xchg
arpl
insb
fstpl
test
mov
add
insw
testb
lcall
lret
lock
push
and
push
or
sbb
or
or
or
push
scas
sbb
or
imul
in
or
into
cmp
dec
scas
in
mov
fcomps
inc
xchg
enter
add
mov
loop
aas
adc
ror
jl
shll
push
leave
cmp
xchg
sbb
es
lods
lock
clc
pusha
cmc
into
jae
je
jnp
or
pop
push
xor
js
loop
jne
push
pusha
or
mov
mov
adc
data16
cmpsl
dec
pop
and
sahf
fdivp
arpl
inc
inc
pop
and
cmpsb
jmp
testb
bswap
in
jb
xor
call
out
or
pop
push
sub
call
insb
imul
sub
xor
xchg
jb
lret
jne
nopl
mov
aad
dec
add
or
arpl
jno
xchg
xchg
xchg
popa
add
add
loop
nop
add
push
mov
cld
or
pop
cmpsb
decb
ljmp
adc
push
dec
popl
andb
adc
pop
fmulp
adc
adc
or
test
jb
outsb
test
jl
inc
jne
add
mov
cmp
mov
push
or
mov
cmp
sbb
jmp
lcall
xchg
lock
decl
jne
stos
inc
sub
sarb
lret
push
mov
inc
outsb
in
sti
push
outsl
mov
mov
outsl
mov
aam
or
pop
insl
add
dec
stos
and
outsl
in
repz
sub
xchg
mov
lds
or
or
and
jecxz
ficoms
push
clc
shr
out
xchg
pop
fwait
or
fs
xchg
ficomps
cs
pop
xchg
inc
dec
and
mov
jge
cmp
iret
gs
mov
xchg
jb
push
add
add
rorb
and
or
push
add
add
add
enter
or
and
xchg
jae
cltd
sub
sbb
out
mov
inc
sbb
hlt
mov
rcrl
jo
addr16
xlat
fstl
cli
dec
jns
shl
or
push
mov
int3
xchg
loopnew
xor
int3
loopne
enter
lea
cld
sub
push
or
xchg
test
movsl
mov
fcoms
adc
xchg
adc
sub
stc
test
adc
or
loopne
jl
lahf
add
xchg
popa
pop
fdiv
jge
negb
sub
jno
add
or
stos
inc
popa
xor
mov
out
xchg
test
jne
cmp
cli
add
push
cmp
sub
cmp
inc
cmp
cmp
ja
mov
dec
and
sub
fcmovnu
sub
and
jno
sub
inc
sub
mov
sub
push
sub
sub
inc
in
mov
clc
cmp
mov
jmp
push
push
or
and
call
leave
lock
shr
enter
or
xchg
push
addr16
pop
lock
insb
mov
add
loope
pop
mov
xor
or
add
or
mov
insb
aam
add
inc
pop
aam
fldl
flds
sub
mov
negb
das
xor
lret
jb
adc
test
jbe
adc
mov
ja
jecxz
push
js
dec
jbe
mov
cmp
je
push
in
xchg
jge
jb
sbb
js
lret
push
jne
popa
or
jmp
insb
sbb
mov
sbb
or
add
insb
stos
ficompl
popa
mov
inc
cmp
shll
ds
out
push
sbb
mov
fisubs
pop
cmp
add
add
pop
or
jmp
fildll
adc
cmpb
sbb
sub
and
adc
adc
sti
gs
adc
out
mov
sub
pop
loopne
inc
aaa
call
sbb
ss
inc
xchg
in
or
xchg
xchg
gs
mov
or
enter
lahf
int
in
stc
ja
dec
fisttps
push
into
dec
mov
lock
shl
or
mov
inc
cmp
add
orl
xor
das
inc
adc
and
movb
cmp
lds
mov
dec
and
shll
adc
mov
push
mov
cmp
cld
cmpb
popa
jmp
sub
push
lods
shrb
or
cmp
and
adc
or
insb
das
xor
sbb
push
pop
out
test
dec
dec
push
mov
and
add
push
or
out
xor
mov
rcrb
mov
sub
add
mov
jmp
test
sbb
jmp
jae
adc
push
or
shll
adc
sbb
jg
dec
pop
iret
sub
mov
cmp
xor
loop
outsb
rolb
inc
pop
outsb
fstpt
clc
cs
or
sbb
ret
enter
sbb
xchg
push
pop
and
add
lret
pop
pop
jbe
lret
cvttps2pi
imull
cwtl
notl
adc
add
mov
imul
pop
jmp
loope
scas
or
add
mov
mov
cmp
jbe
adc
ret
pusha
jp
add
mov
mov
sbb
in
sti
lahf
sbb
mov
shlb
jmp
add
sbb
cmc
test
je
or
add
roll
testl
dec
je
dec
mov
and
icebp
pop
jae
ret
xchg
pop
repnz
jbe
or
add
cmp
sub
aaa
idivl
shl
push
mov
inc
inc
add
inc
cmpsb
jno
das
inc
jb
lea
sbb
pop
push
rcll
rolb
jl
insl
jecxz
add
inc
inc
add
popa
or
mov
into
inc
movzwl
sti
add
imul
or
or
lret
pop
pop
push
jb
pusha
cmp
scas
and
fistl
sti
xchg
jmp
pop
int
jmp
push
daa
cld
push
xlat
jb
inc
fildll
jl
mov
xor
sahf
test
and
pop
inc
adc
fistl
dec
push
scas
add
ds
rcrb
popa
or
xchg
adc
jne
out
mov
jo
mov
mov
inc
outsl
arpl
pop
jbe
mov
lds
xchg
shll
pop
push
inc
ret
adc
pop
xor
shrl
mov
mov
cmp
mov
mov
lock
orb
movl
stc
faddl
add
mov
sarb
push
cmp
sbbb
scas
mov
inc
dec
popf
jae
cmp
push
aad
cmp
shrl
sub
divb
rcll
fsubs
lret
inc
jno
add
jnp
jnp
je
jecxz
sbb
in
imul
sbb
cltd
jns
jmp
repnz
mov
or
xor
adc
sub
mov
gs
cmp
adc
push
sbb
add
push
loopne
in
or
add
nop
in
loop
lea
repz
lods
mov
loop
inc
jbe
rcll
and
dec
inc
push
lea
stc
int3
testb
sbb
dec
sbb
add
inc
clc
dec
and
cmp
add
add
test
outsb
xlat
sbbb
mov
shlb
fldenv
pop
enter
lret
shlb
xor
pop
inc
sub
out
inc
jp
insb
xchg
cmp
push
add
add
cmp
das
loope
jmp
and
add
rclb
mov
xor
ficomps
test
inc
shll
xchg
or
xchg
add
mov
inc
inc
adc
sub
cmp
decb
inc
jmp
sub
test
or
or
in
xor
shrl
fwait
cmpl
shl
cld
xchg
stc
mov
cmpsb
push
enter
shlb
inc
rolb
ret
cmp
outsl
jbe
xor
sub
and
or
cli
testb
mov
and
push
jecxz
jbe
addb
loop
adc
jo
or
in
je
or
jbe
add
and
cwtl
int
jb
mov
push
add
mov
clc
or
mov
fildl
xor
jmp
mov
or
and
sub
jbe
das
sbb
in
out
rolb
xor
or
test
fwait
add
clc
sbb
push
lock
mov
mov
inc
cmp
add
mov
dec
jbe
sbb
sbb
xlat
or
add
inc
jb
pop
sbb
push
ljmp
aam
jns
inc
or
adc
jg
es
decb
idivl
mov
pop
inc
nop
faddl
inc
jno
push
inc
push
ja
ret
inc
pop
lds
mov
insl
cmpb
add
adc
fsubr
or
xor
in
das
or
call
and
inc
insb
pop
push
or
popa
test
in
sbb
xchg
sub
add
add
call
hlt
mov
add
or
hlt
mov
xor
mov
hlt
in
mov
and
fsubp
in
jg
xor
movd
cmp
and
cmp
loopne
out
sbb
les
cli
xor
pop
xor
or
data16
or
mov
aas
or
xchg
shll
test
cmpsl
jne
jns
jne
inc
pusha
xchg
or
pop
push
cmp
enter
sbb
sbb
adc
or
nop
inc
push
or
out
clc
sbb
testl
push
inc
push
push
inc
cmp
rorl
adc
pushf
std
xchg
popa
addr16
or
enter
push
data16
out
adc
sub
es
jmp
into
cwtl
pop
insb
jo
imul
mov
js
adc
cltd
insb
sub
lcall
in
mov
and
adc
add
cmp
push
pop
xor
insb
push
xor
bound
sti
data16
cmp
lcall
bound
cmp
pushw
add
js
lods
or
je
mov
sub
dec
outsl
xor
les
mov
or
jle
sub
add
lds
sti
dec
je
sub
lahf
lock
pop
mov
das
sbbl
xchg
pop
mov
adc
xchg
int
fcomps
pusha
lret
test
pop
cltd
insb
xchg
dec
aas
mov
inc
fsubs
sbb
inc
stos
add
adc
insb
add
fs
jg
nop
inc
push
fwait
pop
sub
sbb
inc
push
sbb
cmp
out
aam
mov
enter
push
cld
cmp
adc
enter
flds
into
add
sbb
enter
mov
add
incl
sbb
push
and
test
jle
jg
pop
call
insl
cld
inc
cmp
and
scas
mov
in
mov
mov
fwait
jns
mov
xchg
gs
add
loopne
daa
andl
sub
push
inc
mov
js
fdivrl
lods
mov
movsl
insl
imul
icebp
pop
mov
add
lock
das
pusha
rsqrtps
cmp
push
out
icebp
jo
mov
hlt
fcoml
push
or
push
scas
push
rolb
iret
rclb
mov
sbb
out
lea
sub
mov
mov
inc
fnstcw
and
sub
dec
ss
push
clc
mov
pop
aad
icebp
pop
push
hlt
adc
pushf
push
or
test
xchg
and
mov
dec
jg
mov
sub
int3
cwtl
or
push
mov
adc
or
sbb
push
fcoms
inc
lds
add
fsubr
add
pusha
push
push
xor
sub
mov
adc
cli
cmp
inc
fstpt
push
ss
pop
sub
shr
sub
dec
jbe
add
sub
cmp
add
inc
or
dec
add
push
ret
sahf
adc
lods
adc
mov
sub
mov
sub
pop
jns
dec
mov
mov
fcompl
test
out
or
dec
dec
shlb
es
aaa
aaa
daa
or
sub
or
push
sti
xor
test
cmc
lret
jmp
into
or
lret
mov
or
jbe
xchg
jmp
and
or
dec
sbb
mov
push
in
push
xchg
push
jmp
outsb
movsb
in
add
fs
and
ss
leave
xchg
js
pop
dec
insl
xchg
in
xor
adc
lock
cmp
nop
xchg
sarb
xor
push
adc
out
xchg
int3
fstps
add
fcomp
add
aam
int3
outsl
jge
movsl
movsl
ficoml
pushf
add
lock
xor
and
adc
in
jmp
in
sbb
sbb
in
inc
fdivl
dec
sahf
in
fsubrs
in
aam
in
dec
aam
cmp
rorb
push
cltd
shl
int3
cmp
hlt
mov
das
movsb
pop
pop
sbb
xchg
int3
jmp
push
and
mov
sub
cmp
ret
pop
ret
lds
popa
add
jge
and
push
xchg
je
xor
sub
inc
sub
hlt
adc
jge
xor
add
mov
daa
mov
or
add
in
add
jle
fnstsw
mov
sbb
fnsave
mov
cmp
mov
jl
ret
adc
pop
inc
or
negl
fwait
imul
xchg
xor
leave
pusha
sbb
loopne
adc
xchg
loopne
mov
mov
xchg
dec
pop
pop
cwtl
mov
inc
push
add
arpl
xchg
gs
imul
or
xchg
adcb
out
aad
mov
add
mov
aad
xchg
int
rcr
push
push
aam
rolb
xchg
cld
xchg
nopl
mov
and
fwait
insb
push
in
test
xor
rorl
jnp
roll
push
pushf
sahf
ja
sbbb
cmp
jp
push
popf
inc
xor
dec
leave
test
push
pop
aas
fisubrl
lret
out
jo
pop
in
shrb
jae
push
mov
popf
cmp
jne
dec
add
add
sub
xorb
cmovl
push
sub
cmpl
xor
lea
xchg
xchg
xchg
cmpb
cltd
xchg
xchg
mov
xor
xchg
or
mov
mov
into
cmp
xor
in
xchg
inc
jno
hlt
pushf
call
dec
jbe
rcr
pusha
push
ja
xor
adc
mov
xor
xor
fs
sahf
int3
add
jb
pop
fwait
test
pop
leave
push
xor
mov
push
insl
xchg
es
adc
cwtl
or
setae
sar
in
and
lock
dec
cs
inc
mov
dec
cmp
cmp
cmp
and
mov
repz
push
adc
sbb
or
mov
pop
cmp
dec
sub
cmpsb
add
cwtl
cmp
cwtl
mov
test
jmp
loope
fidivs
scas
pop
lods
add
faddl
xlat
in
cs
adc
add
and
pop
jl
xchg
xor
inc
xchg
iret
lea
rolb
inc
repnz
xchg
pushf
fcompl
cmpsl
jecxz
xchg
movsb
je
sarb
sbb
je
ret
lcall
mov
js
fwait
addb
movsb
and
mov
je
cmpsb
lcall
lcall
inc
mov
nop
pusha
pusha
push
popa
fs
mov
je
rorb
jl
popf
in
add
test
aaa
jne
mov
and
sub
add
sub
rorb
cmp
rcrb
mov
repnz
insb
out
xor
push
fmul
repnz
daa
loopne
in
ss
push
cmp
mov
dec
mov
cmpl
cmp
in
or
mov
and
js
cmpsb
in
insb
or
inc
ret
repnz
imul
aad
mov
insb
addr16
les
pop
add
xor
rcll
adc
cmpsb
sti
inc
pop
jne
fcomip
hlt
jae
test
loopne
sbb
push
fld
nop
movsl
sub
jecxz
inc
sahf
in
push
mov
cs
xchg
dec
test
mov
movl
bound
and
pusha
or
das
into
test
jae
arpl
xor
sahf
or
push
fidivs
mov
xor
dec
aam
loop
push
adc
je
add
xor
jae
clc
clc
push
cmp
aam
xor
push
or
sbb
pop
insb
sbb
shlb
fiaddl
pop
repnz
clc
sarb
mov
out
xor
leave
xchg
hlt
jecxz
add
cmpsl
mov
mov
cld
or
xchg
pop
and
dec
mov
xor
mov
xchg
jno
and
loopne,pt
pop
pause
pop
jmp
cmp
sar
ret
and
addb
outsb
jecxz
leave
jae
mov
jnp
dec
inc
cmp
xor
cmpsb
in
sub
cmpsl
xor
mov
cs
int3
mov
fs
add
dec
dec
aaa
mov
add
add
cmpl
or
jae
inc
cmp
loopne
in
data16
call
je
or
push
jbe
cmp
flds
jecxz
enter
add
jo
sahf
xor
into
les
mov
test
pop
cmp
cmpb
rorb
fists
call
mov
jb
adc
in
or
fidivl
jmp
jle
dec
cmpsl
jb
inc
das
jbe
mov
jp
fistl
ret
add
mov
lret
ss
lock
push
jne
insb
fs
loopne
or
movsl
xchg
mov
pushf
mov
outsb
or
cmpl
lret
movsl
imul
pusha
leave
nop
or
shll
mov
pop
ret
lods
lods
inc
test
fstps
mov
rorl
es
dec
xchg
dec
pushf
pushf
hlt
mov
xchg
dec
xor
dec
mov
or
dec
push
repnz
xchg
sub
in
push
jns
push
add
sbb
adc
das
js
and
fcoms
push
jmp
jg
cmpsb
pop
cmp
xchg
test
dec
fisttpl
sub
mov
pop
ret
out
decb
or
loopne
aam
stc
movsl
xchg
add
in
dec
ds
mov
sub
loopne
lods
decl
je
dec
sub
add
lea
adc
or
sar
cmp
rolb
sub
addr16
mov
fadds
cltd
data16
or
mov
inc
mov
test
jmp
loopne
sbb
out
sub
cmp
mov
sti
xor
jmp
movb
imul
add
hlt
xchg
mov
xor
lcall
add
add
inc
mov
jne
xor
ror
nop
out
movsb
scas
xchg
push
mov
xchg
inc
push
daa
add
and
and
std
or
inc
enter
jne
fstpl
sbb
mov
in
or
shl
dec
lret
sarb
lcall
sahf
lods
dec
sbb
add
xchg
mov
sbb
lock
adc
daa
rclb
das
ja
inc
or
xor
sbb
and
inc
cs
pop
mov
jne
nop
test
and
dec
and
sahf
cmpsl
notl
xchg
nop
daa
cmpsl
fiadds
lods
test
nop
xor
inc
cs
ja
mov
loopne
pusha
scas
dec
enter
xor
dec
rcrb
mov
jnp
or
test
sbb
sbb
inc
mov
mov
sbb
and
add
nop
pop
add
into
test
sbb
xor
cmp
call
xor
fxch
sbb
sbb
in
sbb
and
dec
jbe
xchg
call
cld
cmp
or
sbb
cmp
push
add
xor
jns
push
negl
or
add
pop
add
jecxz
and
pop
data16
cld
sbb
sub
pop
shlb
pop
xchg
jne
sbb
push
push
mov
out
xchg
icebp
mov
mov
sub
int3
mov
mov
pop
push
mov
sub
xchg
rclb
pop
aam
lock
push
stc
pop
push
add
push
and
dec
add
arpl
outsl
popa
out
imul
outsb
add
sbb
and
gs
pop
push
pop
jb
imul
mov
call
xor
stos
and
add
movsl
cmp
aas
cmp
subb
cwtl
push
sbb
cmp
xchg
ja
push
in
rcrb
sub
push
xchg
inc
add
xlat
xor
jb
jbe
insb
adc
fcmovnu
jae
add
add
je
cwtl
inc
add
outsb
sub
pop
and
sbb
movl
sub
mov
test
lock
adc
rorb
or
nop
in
decl
jl
clc
sbb
xchg
clc
add
mov
mov
and
das
xor
jg
dec
jg
leave
xor
popa
dec
push
jne
cmpl
and
cli
add
es
dec
repnz
cmp
pushf
sub
jne
enter
mov
push
int3
repnz
cmp
xor
add
cmpl
add
cmpb
add
or
inc
aaa
push
add
insb
xchg
add
aaa
cmp
add
das
mov
pop
mov
xchg
sbb
xlat
xor
add
scas
addl
xchg
gs
movsb
add
xchg
cmp
scas
lock
clc
cwtl
jb
cmp
push
outsb
add
ss
scas
inc
lock
dec
mov
orb
movsl
leave
call
lods
add
fistpl
mov
lods
mov
sub
lods
xor
cmp
add
data16
jge
jbe
ds
and
lock
jl
movsb
addl
je
xor
or
lahf
movsb
mov
test
dec
adc
ljmp
xchg
scas
sbb
xor
lods
sbb
decb
jne
push
add
jns
into
jp
sbbb
jb
xorl
jae
jbe
sbb
sub
rcrb
xchg
enter
filds
and
adc
xor
jp,pn
jns
sub
loopne
cmp
in
nop
or
mov
sbb
push
xchg
xchg
add
add
in
push
dec
add
mov
adc
push
ret
push
mov
leave
das
and
push
pop
push
jg
test
enter
dec
push
je
sub
ja
sub
xchg
mov
add
xchg
xchg
xchg
xchg
nop
pushf
mov
jbe
mov
sti
xchg
es
cs
mov
add
inc
in
xchg
sbb
xorl
sti
hlt
sti
adc
and
add
fs
rcr
notb
pop
push
xchg
xor
push
mov
add
adc
inc
jge
scas
jmp
sub
cmpsb
lods
xor
mov
cmpsb
pop
xlat
pop
mov
filds
jp
mov
cmpsb
and
and
sti
incl
mov
xchg
insb
aam
test
sbb
hlt
stos
fistps
std
incb
shr
or
in
xchg
lcall
sbb
imul
das
fdivl
mov
inc
pop
jo
imul
mov
enter
test
xor
pop
xor
pop
xlat
add
dec
pop
dec
jns
mov
popa
outsl
or
and
mov
arpl
and
push
and
mov
int
dec
call
mov
mov
xchg
pop
stos
mov
fsts
aam
xor
stos
and
jle
pop
cwtl
rorl
mov
rorb
xlat
in
add
add
dec
mov
add
repz
push
aam
mov
rcr
xchg
add
inc
leave
enter
xorl
mov
mov
add
js
or
js
dec
leave
enter
pushf
hlt
mov
xchg
idivl
rclb
mov
cwtl
adc
adc
and
mov
dec
ds
cwtl
mov
jb
inc
sarb
out
and
ss
xlat
pop
outsl
xchg
mulb
jne
push
sbbl
mov
sub
mov
jle
aas
pop
je
mov
push
outsl
xor
lods
movsl
jnp
jge
adc
fsubrl
shlb
dec
enter
or
or
xor
push
mov
repnz
js
xchg
repnz
leave
add
add
mov
ljmp
aas
push
xlat
add
mov
dec
mov
adcb
add
js
data16
push
adc
adc
adc
mov
pop
and
xchg
pop
sbb
adc
imul
push
xor
out
lahf
js
das
ljmp
adc
push
hlt
adc
and
inc
jmp
sub
and
cmp
mov
test
sbb
add
or
test
sbb
leave
inc
mov
dec
enter
pop
mov
mov
dec
mov
push
sbb
mov
fstp
xchg
lods
mov
iret
lods
dec
mov
sbb
adc
sub
and
add
mov
dec
xor
pop
daa
or
std
les
xor
lock
or
cmp
or
out
mov
loop
cmp
ret
cmc
inc
jb
mov
jge
xchg
or
sbb
fcomp
loopne
movsb
out
adc
mov
stos
dec
xorl
ja
sbb
pusha
xchg
insl
mov
push
xor
clc
stos
sub
lds
ret
lods
jge
add
in
xor
sbb
xor
and
push
push
and
and
and
adc
fs
add
pslld
pop
cmc
mov
xor
adc
jmp
jecxz
stos
pusha
mov
sbbb
sbb
call
push
ret
cmpsl
popa
leave
mov
es
sbbb
or
jno
stos
pop
cmp
add
add
addb
fidivrs
push
in
sbb
mov
cmp
repnz
xchg
cmp
adc
lret
mov
sub
cld
and
jno
adc
push
pushf
je
pop
xchg
cmp
and
adc
jle
addb
xor
imul
sbb
and
add
mov
adc
aaa
pop
mov
mov
mov
ja
inc
mov
cltd
fs
dec
push
push
pop
fs
dec
es
insb
js
dec
es
jl
mov
cltd
mov
xchg
mov
sbb
leave
add
dec
and
push
mov
cmpsl
mov
call
insl
ret
scas
mov
jbe
das
jns
loopne
sbb
sub
adc
cmp
leave
adc
inc
test
repnz
dec
inc
test
int3
insb
aas
dec
in
jmp
cltd
push
pusha
add
aam
call
adc
adc
ror
ret
mov
out
insl
sub
roll
jne
pop
in
pop
jne
push
xor
data16
sti
flds
jmp
lea
and
adc
ljmp
jp
addb
inc
icebp
std
inc
aam
gs
sub
add
ljmp
hlt
xchg
in
jp
mov
imul
addl
cmpsl
shlb
scas
cli
add
addb
xor
sti
les
lret
jbe
lock
aam
insb
sbb
push
test
outsl
or
push
repz
stos
fcoml
maskmovq
mov
and
sub
mov
inc
cmp
mov
mov
inc
jae
mov
cmc
stos
fcoms
add
mov
ret
inc
ret
xchg
cmp
int3
push
fcoml
out
dec
and
add
sub
pop
pop
movl
xchg
push
inc
ud1
mov
frstor
in
inc
rcrl
in
sbb
sbb
in
insb
sbb
or
data16
sbb
out
adc
jb
push
subl
add
xor
dec
fsubl
scas
inc
imul
adcl
dec
mov
sub
xor
gs
cld
add
or
adc
cld
mov
cmpsl
incb
clc
cld
or
cmp
dec
out
cmp
enter
shll
cs
sub
ljmp
mov
and
and
add
mov
jo
mov
gs
inc
out
lahf
mov
fcomps
inc
fdivs
in
push
ja
cmpb
aam
cmp
imul
enter
xchg
cmpsb
rcl
inc
pop
loopne
addb
pop
pop
shrb
rcll
mov
lods
mov
movsl
mov
adcb
adc
dec
pop
aas
inc
leave
stc
add
mov
and
orl
xor
mov
push
mov
arpl
mov
aam
push
and
das
pusha
hlt
dec
mov
pusha
mov
inc
je
push
incb
lods
add
push
insl
jp
mov
jg
shrb
mov
out
or
xor
mov
or
mov
dec
jp
ret
mov
xchg
or
cmp
out
test
push
mov
addb
in
adc
sbb
cs
insb
adc
aam
shlb
test
mov
mov
mov
mov
mov
adc
cmp
out
cmp
cs
sarb
in
mov
xchg
push
pop
cmpsl
pop
add
add
adc
mov
xor
adc
or
add
mov
jle
cs
imul
pop
out
push
rolb
mov
push
sbb
pop
lds
mov
imul
push
movsb
daa
adc
inc
mov
lcall
pop
mov
jo
aam
pop
jg
les
jg
or
add
adc
out
mov
mov
fsubrs
sub
rorl
sbb
add
jnp
jg
mov
fsubrs
pop
mov
and
sbb
pop
cwtl
loope
cmp
xor
pushf
jge
xchg
shlb
xchg
dec
xor
jae
inc
xor
xor
and
jecxz
mov
or
sbb
fisubs
gs
sub
pop
mov
mov
popa
adc
leave
xchg
inc
inc
pop
test
xchg
or
or
fbld
lcall
pop
callw
je
jmp
and
sahf
adc
push
mov
das
jle
and
das
xor
scas
jnp
loopne
sbb
shr
fs
in
cmp
mov
jmp
jno
adc
mov
cmp
sub
push
mov
push
inc
xchg
outsb
cmpsl
ljmp
cmp
rcll
push
sti
push
pop
call
push
in
xchg
inc
mov
pop
sbb
test
mov
sbb
subb
xchg
push
jge
pop
push
aas
das
mov
pusha
out
mov
adc
or
inc
mov
add
and
jle
mov
sub
imul
mov
or
aas
xor
dec
mov
push
jo
adc
clc
mov
or
and
mov
fdivrl
imul
loop
pop
scas
xchg
mov
sbb
xchg
cmp
cmp
cmpsb
pop
mov
sbb
or
enter
daa
stos
sbb
sbb
js
inc
lds
pusha
mov
inc
fildl
dec
inc
addr16
and
cmc
or
pop
aaa
pop
popa
or
pop
dec
mov
popa
stc
pop
xchg
push
add
jo
inc
inc
adc
adc
push
push
les
xchg
jg
jmp
nopl
arpl
or
cmp
popa
push
ja
add
mov
jge
push
pushf
fstps
daa
cmp
jne
xlat
adc
sahf
xchg
jne
lret
clc
adc
sbb
mov
and
add
pmuludq
xor
or
inc
xchg
bound
test
pop
or
mov
out
es
push
push
pop
call
cs
mov
stos
pop
je
mov
add
ficoms
test
subl
int3
add
cwtl
mov
das
lret
int
hlt
mov
mov
lea
enter
in
lret
sbb
and
cltd
je
mov
fisubs
add
xlat
adc
enter
push
mov
loopne
sub
mov
jle
push
adc
pusha
xor
pop
scas
roll
mov
enter
in
mov
int
add
ja
ret
adc
clc
jg
dec
xchg
pop
pop
push
xchg
gs
or
push
out
jp
popa
cld
lahf
mov
pop
iret
jle
push
test
out
xchg
inc
xor
call
fsub
xor
stc
int
jne
jns
xchg
sbbl
add
dec
fiadds
into
ja
sub
xchg
and
sub
sub
inc
mov
xchg
jne
push
adc
xchg
jp
nop
fcomip
shrl
out
das
jne
mov
mov
mov
xchg
add
add
adc
add
sbb
cmp
iret
pop
mov
pusha
jne
test
sbb
mov
int3
pusha
sbb
pop
mov
in
push
cwtl
and
or
xchg
fadds
add
mov
shlb
dec
mov
sti
outsb
xchg
xor
iret
rcl
add
fidivl
dec
adc
cwtl
rcl
je
add
rcrb
mov
pop
pop
rcrl
sub
xor
shlb
push
sbb
pusha
cmpl
inc
xorb
and
add
nop
or
loopne
or
enter
and
inc
xor
inc
add
cli
sub
movhps
test
jb
outsl
and
aas
enter
xor
dec
ja
sub
or
inc
rclb
fs
push
arpl
or
xchg
push
cmp
aam
loop
or
xor
insl
adc
add
jl
mov
or
jbe
adc
sbb
rorb
pusha
sub
insb
jmp
lock
xor
mov
and
popa
adc
cmp
sbb
sti
rol
bound
loope
call
cld
pop
pop
xchg
cmpsl
arpl
push
inc
addr16
xchg
cmp
sbb
sbb
dec
pop
mov
pop
push
pop
in
or
inc
push
sbb
aas
enter
xor
fstps
pusha
pop
jne
pop
dec
pop
pusha
sub
mov
and
aas
pop
aas
mov
repnz
mov
dec
ret
pop
pop
ss
fdivrs
popf
aas
pop
fdivs
or
sbbl
std
sbbb
cmp
call
dec
adc
dec
dec
fbld
iret
push
mov
xchg
add
nop
mov
cmp
add
js
inc
inc
or
adc
mov
add
lea
arpl
push
inc
push
and
leave
into
cmpb
add
mov
ja
add
mov
addr16
rcll
dec
adc
in
mov
jg
mov
mov
mov
popl
incl
in
or
push
push
or
hlt
jbe
dec
jge
popf
or
aaa
sbb
mov
or
int
popa
adc
insb
nop
mov
add
mov
lret
je
cmp
scas
insb
test
aam
push
jl
int3
inc
lret
push
lods
js
sub
cmp
pusha
subb
dec
mov
scas
or
ds
out
pop
and
adc
lret
cmp
leave
jae
add
movsb
push
jae
pushf
add
scas
jl
popa
stos
lock
sub
cmp
cwtl
enter
dec
mov
push
xchg
fbld
rsqrtps
or
ljmp
pop
pop
cmp
xlat
frstor
iret
add
mov
add
sub
cltd
nop
sbb
ljmp
std
mov
pop
cmc
add
xchg
push
daa
add
adc
sti
fcoml
jae
or
ss
push
test
mov
test
and
and
mov
jbe
push
daa
popa
punpcklbw
sbb
pop
popf
addb
add
rorb
add
jmp
adc
lds
movb
mov
dec
mov
in
mov
inc
pop
jg
pop
orl
ljmp
loopne
sbb
adc
imul
mov
gs
js
lock
dec
out
nop
daa
in
add
lods
loope
sub
add
add
or
sbb
adc
xchg
dec
xchg
mov
mov
fs
in
mov
inc
test
mov
enter
scas
movsl
push
mov
or
es
jnp
sbb
mov
and
inc
xchg
or
mov
add
xorl
and
arpl
fiaddl
xchg
add
lcall
sub
mov
dec
inc
cmp
pushf
adc
adcb
pushf
in
sahf
xlat
in
call
sbb
repz
mov
or
aad
mov
inc
mov
xchg
pop
call
push
mov
cmpl
sbb
ror
int3
mov
pop
push
cli
cmp
mov
lock
adc
test
xchg
arpl
sti
in
es
push
cmp
mov
call
mov
daa
mov
inc
cmc
out
or
cli
repnz
bound
fs
sti
xchg
or
popa
pop
sub
pusha
je
sti
incb
cmovo
cmp
inc
nop
faddl
enter
cmp
inc
fdiv
shrl
adc
or
lock
in
call
stc
mov
xchg
push
or
xchg
loopne
xchg
xchg
sbb
sbb
adc
cmpsb
bswap
and
mov
movsb
imul
add
mov
adc
mov
or
aas
in
nop
in
inc
dec
sti
in
and
mov
pop
add
nop
xchg
clc
in
push
xchg
pop
xor
push
loopne
pop
sbb
into
call
fstps
in
psubw
inc
mov
frstor
fmull
in
mov
daa
pop
add
sub
jne
mov
adc
push
cmpb
adc
sbb
mov
sub
sbb
mov
jl
test
mov
adc
cwtl
or
test
in
or
shl
fisttps
jns
or
sahf
mov
or
xchg
pop
mov
lret
or
leave
mov
movsb
loop
scas
inc
ds
scas
add
jg
inc
adc
mov
mov
clc
ror
xchg
and
cmpsl
add
jg
sbb
les
cmp
mov
ficoms
cld
insb
lcall
shlb
mov
push
dec
es
loopne
and
rorb
add
enter
les
add
testb
dec
call
insb
les
or
mov
xchg
and
mov
pop
push
push
loop
mov
lods
shl
aaa
or
lret
jns
mov
or
add
add
push
loope
push
mov
test
add
mov
fwait
sbb
sbb
sbb
nop
mov
mov
cmp
sbb
fsubrs
imul
cwtl
sbb
fcmovnu
mov
sbb
adc
fsubrs
push
push
and
iret
test
jecxz
mov
das
rdtsc
mov
subb
in
movsb
mov
cld
sbbl
movsb
add
pushf
lds
lods
cmp
or
loopne
push
std
xchg
mov
hlt
sbb
inc
adc
or
add
push
add
mov
and
add
mov
inc
lret
leave
inc
ret
outsl
outsl
push
lret
divb
pop
jb
arpl
stos
adc
mov
roll
xor
inc
inc
cmp
mov
pop
int3
mov
xlat
add
xor
add
lock
je
xchg
in
paddusw
fldenv
add
fwait
mov
jns
or
enter
enter
cs
push
push
in
pop
shl
repz
adc
pop
cmp
cmp
push
pop
inc
xor
loopne
xchg
push
xor
add
jno
and
xchg
jns
push
push
int3
and
jnp
cmp
negl
test
and
and
and
out
push
xor
mov
mov
mov
mov
fmuls
aas
push
lods
or
or
movsb
or
or
mov
add
popf
sub
add
add
bound
aaa
push
test
int3
test
fmull
cmp
inc
xor
add
insb
add
scas
xor
dec
pop
pop
sarb
out
std
rcr
and
xor
sar
lret
xor
pop
add
mov
jbe
insb
fdivs
js
roll
pop
std
clc
jae
push
pop
jmp
and
pop
clc
or
cwtl
arpl
jnp
xchg
inc
les
fs
addb
add
in
add
inc
sbb
push
xchg
out
adc
dec
cwtl
out
jbe
cwtl
cltd
xchg
in
orl
jnp
xlat
dec
shll
bound
push
in
push
inc
xchg
aam
push
subl
and
loopne
test
mov
lds
or
mov
adc
out
push
or
mov
adc
push
xchg
mov
inc
mov
stos
pop
jbe
inc
add
pop
das
jo
mov
pop
or
adc
outsl
sbbl
adc
and
aaa
sub
rolb
add
sub
lds
ret
xchg
add
jmp
cmp
or
cmp
mov
mov
adc
push
das
in
pop
jns,pn
je
sbb
nop
and
mov
fs
ret
pop
in
mov
in
and
pop
inc
bnd
orb
push
pop
or
enter
sti
sti
add
jmp
and
sbbb
leave
gs
nop
test
or
adc
js
out
jecxz
jb
shll
or
cmp
jb
or
lret
xlat
cmp
mov
pop
add
shrl
cmp
lock
test
or
or
xchg
bound
inc
jo
or
je
xchg
daa
xchg
add
jmp
xchg
je
push
jo
in
add
cwtl
test
inc
pop
push
inc
push
or
push
xor
insb
insb
add
dec
pop
inc
hlt
inc
lcall
jmp
sub
sbb
xchg
mov
mov
cmpsl
bound
push
or
arpl
push
add
shr
add
push
stos
pusha
add
test
xchg
outsl
ss
sbb
popa
lret
dec
push
mov
sbb
js
cmp
or
ret
mov
js
and
mov
pop
stc
mov
pop
nop
or
add
stos
add
dec
adc
add
and
cld
add
clc
ficompl
pop
rcrb
sbb
je
or
decl
jb
mov
jmp
lret
out
or
push
lahf
rorb
js
sbb
sbb
out
arpl
xor
adc
adc
jp
sbb
mov
fs
inc
imul
mov
xlat
es
mov
jecxz
fmuls
aad
fistl
and
in
dec
subb
out
jo
inc
xchg
xchg
cmpsl
mov
or
aaa
inc
out
sub
xor
pop
in
sub
or
and
dec
pushf
test
pop
movsb
mov
or
incb
jecxz
enter
mov
mov
scas
sub
popa
xor
call
pop
inc
insb
pop
call
nop
nop
mov
cmovno
mov
jg
lret
add
adc
inc
adc
sub
sub
add
test
add
or
sbb
xchg
xchg
inc
lods
out
xchg
ljmp
fs
push
ficomps
scas
cmp
sub
push
lahf
mov
je
dec
shl
jno
dec
das
int
cld
xchg
fmull
pop
dec
mov
scas
data16
add
pop
pushf
mov
sub
mov
mov
mov
jmp
xchg
sbb
jb
or
add
adc
in
mov
nop
int3
adc
or
or
loope
or
pop
push
cltd
nop
movsl
lock
xor
and
push
push
testb
adc
push
push
add
filds
and
nop
icebp
add
inc
adc
cs
cmp
add
sbbb
sbbl
adc
in
sbb
out
xchg
push
andl
popa
arpl
mov
andl
sub
xchg
stc
aad
xchg
bound
inc
jmp
popa
loopne
scas
push
or
cmp
lods
adc
sbb
mov
fwait
js
jmp
pop
cmp
pop
or
fsubl
ja
jne
adc
pop
jb
outsb
pop
pop
xchg
sub
xor
pop
push
sahf
mov
andb
push
fstps
jmp
push
dec
sub
push
and
test
dec
call
push
fs
lcall
push
cwtl
leave
leave
in
push
lds
jb
jo
cmp
sub
je
lret
xchg
cmc
mov
lds
nop
add
inc
push
mov
dec
nop
loop
mov
dec
add
pop
ljmp
pop
mov
lcall
cmc
mov
ja
xchg
test
add
nop
and
cmpsb
cmp
cmpsb
fs
push
sbb
inc
es
hlt
jmp
es
dec
and
negl
enter
xchg
mul
xor
and
pop
bound
popa
jnp
loopne
mov
leave
test
sub
jno
jg
test
fnstcw
mov
inc
loope
sub
sti
jne
enter
bnd
stos
out
jno
sbbl
notl
mul
hlt
int3
add
and
dec
jae
movsb
add
inc
dec
dec
or
add
movsb
js
jo
push
mov
jns
or
and
inc
dec
je
sub
sbb
test
in
xchg
or
imul
xchg
or
call
cmpw
es
cmp
or
inc
or
mov
xorl
sub
mov
push
fisubrl
sbbb
jbe
ret
cmp
push
sbb
sbb
movsb
sbb
and
dec
outsb
xchg
adc
cwtl
shll
popa
in
mov
jmp
pop
in
fs
push
jnp
sub
in
in
shll
cli
andb
repnz
testl
adc
popf
pop
xchg
pop
les
xorb
pop
fs
add
dec
push
scas
mov
push
add
inc
lea
out
pop
push
mov
mov
mov
inc
aam
aas
adc
push
or
inc
inc
insl
jo
cmpb
jl
rcll
imul
push
inc
adc
xor
jge
insb
push
mov
inc
imul
divl
push
inc
inc
xor
or
pop
cmp
insl
lcall
sbb
fcompl
cli
imul
in
enter
adc
or
pop
mov
call
popa
insb
adc
and
arpl
test
shrb
roll
mov
arpl
jbe
clc
mov
js
add
or
inc
sbb
push
fildl
mov
sub
pop
lret
push
pop
stos
add
push
mov
adc
push
push
popa
mov
testl
cltd
mov
mov
mov
pop
dec
mov
dec
arpl
xchg
mov
clc
sbb
mov
gs
into
or
in
sti
and
mov
xchg
push
lock
mov
push
mov
inc
mov
call
and
clc
loopne
enter
in
cld
fdivrl
leave
popa
and
add
fdivrs
dec
fadds
mov
dec
aam
sarb
dec
rorb
mov
dec
int3
adc
mov
dec
enter
dec
add
fmul
mov
jns
jmp
mov
or
inc
or
pop
pop
or
or
or
or
inc
add
fistps
push
push
insb
mov
add
adc
and
mov
or
or
cmp
je
dec
and
or
pop
in
adc
push
pusha
cmp
ljmp
sbb
adc
mov
jb
inc
cmp
pop
ss
jge
xlat
jl
pop
js
sbb
pop
xlat
jne
jp
dec
or
insb
pop
jge
jnp
inc
jae,pn
cmp
adc
aaa
adc
cmp
push
ret
xor
inc
dec
es
jae
sbb
pop
orb
aas
jp
fwait
or
mov
addr16
outsb
inc
mov
std
pop
push
dec
leave
addr16
sti
add
cli
cmp
adc
or
push
inc
cmp
sarb
test
jl
inc
ja
mov
mov
adc
pushf
aad
add
inc
int
lods
fmulp
cmpl
add
and
add
jbe
sbb
mov
insl
hlt
testl
add
mov
mov
xor
push
orl
push
fs
pop
pushf
xchg
nop
adc
das
dec
push
and
cmc
scas
add
pop
fldcw
inc
insb
lahf
mov
loope
dec
mov
ja
js
pop
pop
adc
ljmp
cli
jnp
push
je
add
pop
inc
stos
cmp
repnz
out
pushl
add
dec
les
lods
cmpb
sub
sti
add
jo
push
negb
xor
lock
jp
int
andl
lock
inc
sbb
inc
js
jne
push
and
je
inc
je
leave
lock
imull
rcrb
and
mov
jns
pop
rcrb
adc
mov
and
fisttpl
fsubl
jmp
orl
jmp
cmp
adc
call
mov
cmpsl
pop
fldenv
fimull
int3
jbe
adc
out
div
ljmp
add
rolb
or
pop
imulb
push
push
adc
enter
loopne
cli
faddl
xchg
out
inc
or
testb
aad
test
decl
sub
xlat
mov
add
lea
in
jge
or
pop
imul
mov
fcmovne
fildll
shrb
aad
enter
mov
test
arpl
imul
ds
scas
stos
xor
xlat
sub
sti
push
inc
popa
jnp
lock
stos
shrb
sbbb
add
pop
leave
test
and
cmp
add
lret
push
jno
add
push
xor
insl
pop
xorl
loopne
sub
or
add
xchg
push
pop
xchg
int
nop
leave
pop
in
inc
xor
adc
shl
mov
push
sub
or
add
mov
push
pop
dec
push
outsl
add
fldt
hlt
sub
sar
rorb
sbb
xchg
push
adc
push
add
or
addl
jge
dec
add
das
std
mov
and
inc
scas
subb
add
inc
jl
dec
das
sbb
jmp
mov
lret
pop
test
lods
inc
cmp
mov
and
adc
adc
and
stos
xorb
adc
pushf
or
data16
dec
mov
hlt
pop
mov
dec
mov
pop
mov
sbb
add
rcrb
sbbl
add
ret
push
or
setp
push
adc
enter
sbbb
sbb
sbb
fcompl
andl
mov
and
test
sbb
ret
mov
lock
push
pop
inc
pop
xor
ficoml
stos
mov
xchg
push
mov
sti
pusha
jmp
jnp
xor
pushf
push
dec
mov
xor
orb
shlb
sbb
sub
test
mov
test
xchg
daa
arpl
add
adc
bswap
xchg
cmpl
mov
int3
and
arpl
cmp
mov
divl
mov
nop
mov
sbb
xchg
nop
nop
or
jmp
and
cmp
test
mov
push
xchg
mov
sahf
test
jmp
std
xchg
imul
cmpxchg
jae
dec
or
mov
or
add
inc
adc
cmp
sbb
test
rorb
add
xchg
xor
lahf
adc
imul
test
leave
clc
and
inc
jmp
adc
sbb
adc
and
fiadds
adc
cmp
or
and
dec
lcall
jbe
and
jne
push
push
sbb
mov
sbb
data16
rorb
jl
push
incl
dec
cmp
insl
test
jne
push
add
ljmp
lcall
ret
mov
dec
xor
out
add
nop
and
iret
daa
cltd
int3
add
das
sti
push
adc
add
or
jno
or
fadds
or
nop
xchg
adc
ja
sbb
adc
add
cmpsl
cmp
add
lods
popa
ret
mov
add
adcb
or
push
jp
sbb
sub
sar
les
lcall
lahf
in
pusha
fmuls
add
clc
or
adc
testl
pop
in
or
sbb
cmpb
push
ja
pushf
dec
fwait
jnp
jle
push
add
mov
adc
dec
fstpl
lods
lods
je
inc
add
hlt
xchg
dec
je
or
lahf
add
lcall
sub
aam
addr16
pop
sub
bound
jno
insb
jmp
pop
aas
add
mov
mov
pop
lahf
aam
add
fsubr
dec
sbb
adc
adc
and
mov
sub
or
or
aad
xor
scas
cmp
fmull
cmpb
fcomp
mov
call
and
mov
add
aam
in
pusha
insb
push
sub
or
ret
rorb
pop
jecxz
iret
outsb
lods
cmp
push
out
cld
mov
enter
sbb
fwait
psubd
push
sbb
subl
shr
aad
cli
adc
mov
mov
add
push
pop
mov
jl
cmp
iret
adc
clc
push
or
iret
xor
and
lock
int3
or
sub
aaa
inc
or
push
add
dec
push
mov
in
push
push
fwait
icebp
xor
sub
lods
pop
mov
loop
mov
data16
lods
mov
shlb
test
pusha
scas
mov
pop
movb
mov
mov
cmpb
pop
fucom
mov
mov
push
jns
add
negb
mov
fsubs
test
movsb
sub
les
push
lea
add
cmp
add
adc
shlb
push
cwtl
ret
jne
dec
add
mov
and
cld
mov
dec
add
mov
pop
push
scas
inc
push
rorb
lret
or
stc
sub
add
les
outsb
sbb
call
or
pop
sub
adc
lock
push
adc
inc
loope
pusha
in
out
push
xor
daa
inc
xor
sub
or
jp
sarb
and
sbb
roll
cmp
add
xchg
sub
bound
pushf
aam
push
add
sub
adcb
adc
mov
mov
push
add
or
mov
testl
sub
mov
add
mov
inc
or
pop
and
mov
and
cmp
and
jb
jmp
lsl
sub
mov
in
insl
loopne
mov
sub
mov
mov
mov
jnp
clc
loop
mov
lods
cmp
bound
push
or
push
loope
mov
mov
decl
jne
fcompl
cs
mov
dec
insb
lea
jno
pop
loopne
adc
push
or
inc
or
mov
adcl
loopne
xchg
fwait
insl
inc
movb
sbb
loope
add
cmp
adc
in
add
in
or
add
adc
add
jnp
push
add
cmpl
push
dec
push
call
cmp
dec
dec
adc
mov
add
adc
inc
mov
add
setle
in
fadds
or
fsubs
add
inc
fcoms
ljmp
loopne
xchg
pop
roll
cld
dec
mov
jg
mov
test
or
inc
sub
sbbb
xor
mov
pop
xor
rclb
pop
cwtl
sub
push
cwtl
adc
js
mov
push
xor
dec
mov
ljmp
enter
in
mov
pop
pop
mov
push
dec
push
fisttpl
add
sbb
enter
cmp
add
and
xchg
inc
js
mov
add
fxch
jl
lods
and
andb
test
or
sbb
in
repnz
sbb
mov
cmp
or
sbb
mov
pusha
sbb
or
in
xchg
pushf
sbb
pop
nop
or
or
sbb
cmpsb
cwtl
fcomps
pushf
push
fwait
inc
sahf
add
mov
lea
xchg
mov
shlb
mov
test
mov
and
mov
sub
iret
sysexit
push
mov
jnp
dec
hlt
inc
mov
imul
or
sub
pop
in
mov
loope
push
pop
jp
mov
cmpsb
mov
insb
inc
dec
or
adc
jne
jnp
imul
cmp
leave
test
adc
inc
add
inc
ss
push
fs
mov
leave
add
push
pop
mov
xchg
jl
adc
xlat
jnp
add
pop
cmp
lea
pop
add
add
or
pop
mov
inc
popa
inc
xchg
push
pop
adc
and
pop
jp
jno
inc
mov
push
mov
adc
and
inc
rolb
xor
and
mov
in
shrb
cmp
repnz
xor
inc
add
cmpb
orb
xor
push
adcb
repnz
xor
iret
pop
test
cmp
repnz
mov
xor
iret
subb
enter
je
and
pop
jp
dec
add
push
inc
xchg
or
pop
push
shl
mov
pop
sbb
mov
fidivrs
cmpl
add
dec
mov
xlat
or
mov
jmp
adc
repnz
mov
and
fsub
or
iret
pop
pop
in
push
push
inc
jle
mov
push
sub
push
push
or
mov
lret
or
xchg
pop
nop
repz
mov
adc
sbb
in
xchg
dec
push
nop
in
mov
sub
iret
and
adc
or
and
sbb
add
sub
adc
fsubl
loopne
or
call
fcoms
push
add
fs
xchg
fucomp
xor
or
pop
or
sub
in
and
inc
mov
pusha
push
jmp
inc
sub
fs
pusha
insb
mov
mov
call
add
dec
testb
ja
or
inc
insl
xadd
xor
mov
push
pusha
xor
movsl
in
or
sub
add
es
mov
or
lret
adc
push
push
clc
mov
pop
push
int
sahf
jbe
aas
std
jne
pop
or
add
add
out
cmpsb
xchg
cmp
je
mov
mov
or
cmp
dec
push
loop
ss
sti
mov
ja
xor
testb
ja
orl
int
add
jmp
divl
jge
mov
xchg
or
lret
in
rcrb
mov
mov
xor
fdivrs
xor
and
int3
inc
push
add
mov
mov
sub
in
and
mov
js
sbb
lcall
xor
insl
jg
negl
inc
sti
in
add
sbb
mov
push
sbb
push
push
jp
xchg
sbb
adc
cli
sbb
ret
add
mov
lret
sbb
push
test
jmp
dec
sbb
jb
fwait
sbb
or
dec
fbld
mov
xchg
inc
pop
sbb
fmul
cmp
cmp
add
sbb
inc
dec
pop
pushf
lea
add
sbb
push
adc
jns
call
mov
lea
mov
pop
insb
adc
movsb
sub
jb
mov
mov
xor
movsb
fadds
lods
movsb
add
dec
jne
jae,pt
cmc
and
idivb
cmpb
sbb
or
nop
bound
mov
add
les
pop
fistl
jb
mov
mov
sub
insb
cmpsb
or
inc
mov
orl
inc
add
push
cltd
mov
inc
sub
jl
push
int3
adc
insb
fadds
mov
das
mov
outsl
push
or
xchg
pusha
xor
scas
jo
xchg
or
mov
decl
imul
add
and
adc
ret
cli
add
ljmp
ds
mov
inc
xchg
insb
add
sahf
push
push
push
lods
daa
ficoml
mov
or
mov
cld
jb
mov
idivl
dec
aaa
cmpsb
push
stc
in
xorb
hlt
cwtl
xor
add
add
lcall
push
leave
push
scas
aaa
or
dec
or
push
pop
dec
xor
popa
in
aam
test
scas
ror
aaa
xor
sbbb
sbb
fs
dec
rolb
dec
cs
rcrb
nop
nop
xchg
jmp
mov
rorl
mov
repz
mov
shl
sub
fistpll
xor
jbe
add
ss
push
je
pop
adc
xor
repnz
sbb
add
add
arpl
ror
dec
pusha
loop
imul
fdivs
sbb
outsb
mov
enter
or
cld
sbb
roll
add
push
xchg
pop
mov
pop
iret
inc
add
xorb
or
and
xor
outsl
add
mov
mov
std
pushf
mov
xchg
mov
add
and
cmp
ret
in
add
ds
ret
xor
mov
add
fldenv
pusha
or
out
sub
div
adc
fadds
adc
mov
jle
insl
lret
lahf
add
sub
insl
lods
add
inc
xor
cmp
cmp
push
add
movzwl
inc
subb
pop
xchg
dec
lods
test
adc
xchg
js
fcmovnbe
push
fwait
sbb
lods
call
push
aas
push
lock
in
fwait
insb
addr16
xor
dec
mov
or
movsb
das
push
cmp
jle
push
sub
or
repz
cmp
ss
inc
mov
rcrb
mov
loopne
mov
push
test
adc
jno
push
add
subl
jne
out
mov
test
dec
test
test
mov
mov
insl
jae
sub
filds
movsb
inc
cs
data16
pop
sbb
mov
inc
and
dec
decl
lods
sub
repnz
jne
fldenv
adc
ret
repnz
lea
jmp
push
or
fldl
jnp
push
push
add
adc
cmp
dec
adc
xor
pop
lahf
mov
out
jne
pop
rcll
xchg
mov
sbb
add
sbb
mov
aas
sub
aad
sub
mov
jbe
pop
sbb
movsb
add
addr16
cld
and
xchg
aad
inc
mov
mov
sub
dec
xlat
fldt
xor
hlt
je
adc
pop
orl
out
out
out
cmp
je
pop
mov
add
cltd
test
and
xorb
xor
fs
pop
fcomp
shll
outsb
loopne
xchg
cwtl
sbb
xchg
adcb
adc
lahf
mov
push
adc
cmp
das
cmpsb
add
push
mov
push
rolb
cmp
cmp
dec
sbb
pop
or
sbb
or
sbb
int3
ret
jb
sub
jb
rolb
mov
add
ret
fldenv
adc
xchg
sbb
push
adc
push
sbb
push
push
inc
cmpsb
or
dec
in
xchg
jl
cmp
inc
push
add
dec
mov
jb
in
nop
and
test
jl
push
fs
or
add
ljmpw
int3
mov
or
sbb
mov
push
movsb
scas
inc
xchg
lods
inc
push
orl
and
nop
xchg
mov
inc
shrb
nop
cmp
mov
enter
lods
popf
cli
and
adc
or
xorb
dec
subb
stos
les
shl
jb
rol
jb
add
les
nop
mov
cs
and
push
xchg
cld
test
aad
stos
lcall
pushf
je
gs
mov
push
and
enter
lods
xor
test
dec
mov
jb
test
fwait
pop
iret
inc
xor
stos
or
cmp
test
mov
shll
cmp
fs
add
in
ror
fisubs
add
das
and
ret
ret
cmp
mov
add
sbb
in
cmp
mov
mov
mov
cld
test
lods
jecxz
bswap
nop
cmpsl
data16
stc
sbb
ss
adc
loope
and
mov
jne
loope
add
mov
and
lods
aam
sbb
loope
out
add
fwait
mov
xchg
push
stc
push
aam
push
jnp
pop
inc
sbb
mov
mov
lods
push
aam
push
cmp
xchg
lcall
or
xor
imul
pop
jge
sub
enter
sub
and
or
daa
jge
imul
mov
pop
flds
xchg
mov
dec
add
jmp
xor
push
lds
lret
xor
adcb
stos
arpl
test
setbe
shr
scas
je
xchg
xchg
mov
nop
adc
pushf
pushf
and
push
add
add
cmp
push
lods
xorl
repnz
add
subl
add
lret
rorb
pop
cmp
rolb
mov
mov
push
adc
jb
adc
imulb
and
in
stos
push
mulb
les
xchg
imul
aaa
pop
fcompl
push
pop
push
xchg
push
in
adc
outsb
xor
icebp
aad
sbbb
add
shl
cmp
loop
xchg
cld
mov
lea
fldenv
or
fistl
inc
mov
pop
mov
mov
lock
insb
in
pop
mov
js
xchg
insb
and
mov
pop
in
loopne
stc
xchg
sbb
loopne
xor
lret
mov
cs
fsubs
mov
sarb
shlb
sti
shrl
sub
push
push
or
inc
js
lret
or
lret
clc
adc
js
sbb
mov
add
sbbb
enter
or
or
daa
add
add
iret
cli
cmp
mov
and
push
jg
cmp
in
adcb
mov
sbb
flds
mov
adc
jb
aam
and
rolb
hlt
xor
add
mov
insl
divl
rorb
inc
adc
jo
lds
adc
js
add
dec
dec
pop
sbb
inc
insb
push
cmp
mov
ret
xor
sbbl
mov
fcmovnu
fdivs
popa
push
stos
sti
jns
add
cmp
adc
xor
or
adc
jmp
sbb
dec
enter
xor
fs
cmp
insl
or
xchg
es
shrl
mov
cmp
sub
js
sbb
bound
sbb
push
idivb
push
dec
add
out
adcb
pop
cmp
es
pop
sbb
and
or
test
dec
mov
push
inc
mov
add
repnz
pop
jbe
pop
xchg
out
fsubs
aam
inc
mov
push
fwait
in
aam
popf
fmull
rolb
xor
adc
adc
int3
sbb
add
cs
xchg
addr16
fwait
enter
enter
xchg
or
imul
sar
xchg
in
inc
rorb
lods
adc
mov
mov
hlt
test
xchg
ret
and
inc
or
aad
and
add
xchg
pop
xor
pop
xor
xor
pop
xor
xchg
push
flds
mov
fs
fdivrp
mov
fildl
mov
and
xchg
popl
stos
mov
scas
dec
push
sub
pop
inc
inc
fsts
sub
lret
jo
push
or
loop
jmp
bound
pop
mov
nop
jb
andw
out
pusha
data16
adc
shrb
pop
jns
jbe
frstor
or
clc
or
or
xchg
adc
imulb
push
inc
cltd
sub
fldenv
faddl
or
dec
or
adc
pop
dec
push
and
lods
fdivr
or
add
add
add
adc
xor
sbb
insl
add
call
jns
mov
add
pop
add
cli
add
add
in
and
lahf
dec
in
enter
add
or
scas
lock
dec
inc
cs
sbb
inc
adc
dec
or
imul
std
cmp
mov
repnz
hlt
and
lea
mov
xchg
add
sub
mov
xchg
push
mov
sbb
jl
add
jmp
mov
sub
je
rorb
adc
pop
jmp
subl
jge
add
in
xchg
add
push
xor
inc
jb
test
mov
popf
and
cmpps
dec
pop
fcoms
mov
dec
add
mov
pop
or
fisubs
xchg
mov
or
mov
cltd
pop
lret
jmp
or
cmp
mov
aam
insb
jg
aam
jl
pop
or
mov
scas
inc
hlt
mov
pop
test
or
fidivs
sbb
or
rcl
dec
mov
add
adc
jmp
ss
loop
movsl
das
push
out
loopne
popa
push
sbb
sbb
push
add
movsl
imul
insb
pop
push
add
sbb
ljmp
out
mov
cmpsl
inc
into
xchg
inc
push
lcall
mov
imul
inc
ret
adc
adc
dec
dec
cmpsb
cltd
cmpl
xchg
xchg
pop
jge
push
sbbl
int3
jns
jnp
push
rorb
or
adc
rorl
adc
inc
dec
push
nop
movups
in
test
hlt
sbb
or
dec
popf
pop
cs
and
mov
data16
xchg
dec
add
xchg
mov
imul
or
loopne
fstps
and
jns
add
or
inc
sbb
cs
sub
stos
xchg
pop
xor
xor
inc
in
add
jo
movsl
jbe
stc
inc
mov
or
fsubp
add
mov
add
and
sbb
xchg
adc
sub
jmp
cwtl
fildl
movzbl
pop
sub
and
insb
dec
dec
call
add
push
int3
lret
adc
imul
nop
into
lret
sub
mov
dec
fxch
sbb
add
movsb
add
andl
xchg
ret
outsl
mov
or
mov
out
dec
add
mov
inc
out
mov
shll
add
ret
add
sbb
xchg
test
scas
mov
ret
add
sahf
mov
mov
dec
pop
sbb
lea
std
test
push
lea
and
mov
orb
push
add
inc
clc
sbb
push
add
push
or
nop
rolb
fs
push
inc
in
ss
jb
in
fdivrl
cmc
lods
add
test
test
jg
xor
xor
xchg
lock
xor
inc
xchg
add
sub
dec
push
loope
into
xchg
sub
add
xor
add
movsb
add
add
or
adc
test
adc
cs
sar
aam
jl
sub
inc
add
xchg
js
orl
xchg
or
push
imul
pop
push
movsb
insb
test
outsl
adc
dec
add
pop
jg
add
enter
int
cmp
sbb
mov
xchg
daa
fistl
movsb
jo
xchg
adc
insb
std
fisttps
xor
cltd
and
out
and
pop
add
push
in
fs
cmp
addr16
test
pusha
outsb
arpl
pop
and
and
dec
icebp
sbb
sbb
adc
add
push
sub
or
je
imul
or
pop
out
push
test
fadds
nop
push
push
js
cmp
push
fs
sbb
dec
es
or
cmp
cmp
push
insb
xor
add
jb
lea
and
arpl
or
mov
xchg
dec
inc
mov
outsl
or
movsl
leave
enter
jl
cmp
or
je
call
xchg
sub
pop
out
stc
inc
mov
fs
cmp
movsb
fsubl
push
pop
jp
mov
test
nop
out
js
or
xor
in
popa
dec
xor
inc
add
leave
adc
test
or
push
das
popa
movsb
xor
daa
insb
orb
jb
lds
pusha
into
bound
cmp
add
and
jecxz
inc
jge
sub
roll
lcall
jge
sbb
adc
cmp
mov
rolb
int
aad
push
xor
sbb
lcall
out
push
adc
inc
xor
dec
jne
lret
pop
inc
icebp
adc
gs
add
add
or
push
int
mov
gs
push
arpl
sub
mov
xor
xlat
jne
orb
and
mov
push
popl
add
mov
cmc
xchg
and
pop
or
push
movsl
xchg
mov
out
inc
push
dec
pop
cmovne
popa
add
js
jae
push
add
jle
adc
sub
or
add
pop
call
add
mov
jecxz
jnp
int
dec
adc
or
movsb
stos
push
cmp
in
outsb
or
push
cmc
mov
fadds
daa
push
rolb
adc
dec
bound
adc
sub
addr16
dec
je
xor
inc
mov
inc
or
adc
mov
add
dec
insb
fiadds
addb
add
inc
in
jbe
mov
xorl
and
sbbl
push
jle
lds
fs
and
mov
adc
and
je
popa
dec
add
ds
and
nop
leave
aas
js
inc
outsl
or
jno
cmp
add
addb
mov
dec
addr16
add
mov
mov
push
btl
mov
add
cmp
dec
or
inc
inc
cld
dec
push
rclb
adc
lcall
inc
pop
mov
or
dec
fidivrl
pop
push
shll
pop
je
xchg
nop
xorb
sar
add
sbb
add
repnz
loopne
sbb
std
or
inc
adc
mov
push
movzbl
mov
or
mov
mov
fsub
xor
pop
repnz
and
les
push
mov
mov
cmpsl
lock
int3
jne
dec
into
cmpsl
xor
lods
ljmp
hlt
cld
mov
jb
adc
or
fldt
jge
add
jg
imul
iret
int3
notb
adc
pop
imul
outsb
push
jo
adc
push
clc
push
jg
outsb
gs
sub
add
data16
and
sub
inc
jb
mov
adc
add
mov
or
jb
ret
dec
test
and
repnz
mov
or
xchg
or
fnstsw
ficompl
shll
pop
inc
fldcw
dec
pusha
adc
mov
jne
add
add
daa
movsb
mov
and
insb
pop
insb
pusha
mov
fldenv
add
aam
outsb
ss
mov
sbb
lds
mov
dec
pop
push
stos
adc
lock
stos
int3
adc
lods
dec
pop
push
int3
pushf
pop
cld
sbb
test
hlt
cwtl
dec
push
pop
xchg
cmp
movsb
nop
inc
test
cmp
dec
adc
push
and
or
and
lods
add
xor
shll
jecxz
adc
mov
mov
adc
mov
nop
das
and
and
adc
cmp
das
clc
aam
roll
mov
das
test
popa
xchg
pusha
push
es
inc
es
leave
insb
pushf
or
mov
mov
adc
lock
in
orb
leave
and
inc
pushf
lock
jg
ljmp
cld
inc
push
dec
xlat
psubw
sub
cwtl
mov
push
adc
or
in
lret
setbe
push
movsb
sldt
movsb
add
push
sahf
push
push
in
shr
fs
pop
enter
pop
and
dec
stos
adc
notl
nop
movsl
in
sahf
nop
sub
mov
xchg
loope
push
or
cld
jno
sub
dec
xchg
cld
shrb
inc
mov
push
ret
mov
nop
add
fadds
mov
or
mov
xchg
inc
xchg
xchg
and
daa
mov
xorb
das
and
cld
adcb
insb
and
pop
cltd
inc
mov
cmp
nop
xor
cmp
pop
mov
sub
sbb
adc
loopne
or
mov
add
mov
lea
loop
cs
ss
out
xchg
adc
fdivs
or
sti
dec
fsubs
mov
or
pmulhw
call
fstps
inc
add
add
jecxz
cld
add
xor
stc
mov
addr16
and
fwait
add
add
fwait
or
pop
sbb
pop
loopne
test
lock
test
mov
nop
xchg
rdpmc
push
sbb
sbb
adc
test
or
and
adc
sub
adc
inc
inc
push
pop
stos
adcb
in
xor
insb
sbb
adc
push
xor
xor
xor
gs
add
test
and
jl
jl
adc
in
jl
cld
cmp
imul
cld
je
js
xorl
mov
in
aam
jae
xor
hlt
inc
mov
fldt
xor
rcrb
dec
sbb
leave
push
or
adc
and
mov
sbb
pop
lock
cmp
inc
push
sbb
add
popf
mov
sub
xchg
or
inc
mov
and
dec
nop
add
jle
insb
sbb
pop
inc
xor
adc
sub
xor
or
lods
add
repz
inc
adc
insb
fistl
adc
sub
add
xlat
add
inc
xorb
xchg
fstpt
jmp
pop
push
add
out
stos
push
cmp
es
das
es
mov
dec
cmp
hlt
pop
mov
xor
repz
imul
bound
sbb
or
or
and
dec
mov
cmp
imul
push
dec
sti
dec
or
or
in
lods
xor
push
repnz
lods
out
mov
adc
lcall
mov
clc
mov
sbb
sbb
mov
scas
call
xor
addl
stc
mov
cmp
or
or
fldt
adc
push
rclb
adc
lret
adc
ret
adc
enter
and
rolb
inc
adc
pushf
in
add
imul
or
adc
daa
adc
fidivrs
mov
adc
add
fiadds
jb
jne
out
add
xchg
mov
cmp
rcl
push
test
sbb
call
cwtl
int3
adc
fwait
sbb
cmpsl
loopne
fnsave
and
adc
cmp
adc
mov
dec
mov
enter
jle
sub
cmp
lahf
pushf
lods
fadds
add
shrb
dec
loop
insl
addr16
or
pushf
popa
enter
adc
xchg
push
rcrb
in
cmp
int3
push
pop
ret
push
das
bnd
inc
sbb
fwait
pushf
xchg
sub
cld
push
mov
xchg
int3
in
push
sub
dec
mov
add
es
movl
add
outsl
lock
faddl
dec
inc
cmp
add
push
test
sbb
jge
sbb
in
cmp
rcrb
pop
pop
pop
pop
fstps
sbb
pop
pop
xor
loopne
lsl
gs
rol
sbbb
nop
fdiv
hlt
sbb
add
js
push
add
rorb
pop
xor
ret
sbb
add
cltd
jmp
outsb
add
push
or
stc
cs
inc
inc
xchg
movsb
stos
ret
call
hlt
add
cmp
aaa
daa
stos
jp
or
push
dec
adc
ja
or
xchg
mov
pop
fsubrl
add
ud2
nop
fmull
shrd
mov
cld
mov
aaa
int
mov
mov
scas
nop
int
pop
aam
fldz
xchg
fstp
pop
add
in
les
xchg
pop
imul
add
inc
sub
lcall
add
fldenv
pop
repnz
adc
or
jnp
inc
jo
xchg
andb
add
xchg
popf
adc
mov
mov
sbb
test
cmp
fadds
inc
push
mov
lcall
sysenter
jae
mov
push
insl
inc
repnz
sub
pop
shrb
test
cmp
push
gs
aaa
arpl
sub
arpl
mov
push
and
xor
or
adc
adc
and
dec
pop
xor
orl
adc
sbb
and
adc
jne
push
arpl
add
jae
push
stos
sub
insl
fistpl
dec
pop
dec
push
and
lock
jns
push
inc
outsl
outsb
fs
je
jo
loopne
nop
invd
pop
adc
sbb
pop
push
add
or
popa
push
inc
jne
jae
push
xor
xor
push
outsl
jae
sub
push
adc
in
scas
stc
out
jae
push
popa
jo
arpl
adc
dec
je
adc
in
mov
cltd
push
cmp
fucomi
jle
sbb
jg
dec
mov
insb
gs
or
gs
insb
add
ja
push
insb
inc
test
push
lock
out
dec
add
inc
jle
dec
jb
jo
in
out
in
add
inc
insl
fs
fcmovnu
jb
orb
push
jbe
xor
jo
test
rorl
adcb
pop
and
inc
js
add
loope
addb
adc
dec
roll
mov
sti
int
call
or
sbb
popf
mov
cmp
insb
out
mov
pop
frstor
and
xlat
or
mov
mov
or
sbb
or
mov
push
cwtl
fwait
and
mov
lock
mov
stos
js
sbb
xor
adc
jns
cltd
orl
mov
pushf
sbb
nop
int3
dec
loop
jo
call
lods
out
daa
sub
fcoms
push
add
in
mov
ret
cwtl
scas
pop
jo
orl
call
xor
aam
or
enter
les
enter
mov
or
mov
and
mov
pushf
cwtl
xchg
nop
or
enter
test
aas
jb
and
jo
and
fs
pop
pop
xchg
pop
jb
push
push
dec
dec
pop
jb
and
leave
and
leave
and
and
xchg
pop
jb
sbb
xchg
pop
jb
adc
or
pop
jb
and
mov
hlt
lock
cs
add
sub
inc
lods
sbb
mov
dec
cmpb
add
hlt
mov
hlt
test
cltd
mov
or
cmp
movsb
cmp
xchg
and
sbbb
xchg
mov
lock
sbb
sub
hlt
sbb
jp
adc
je
sahf
in
jbe
xchg
add
adc
adc
into
notb
push
sbb
lods
push
xor
out
cmp
xor
das
testb
add
cwtl
insl
push
sbb
popa
push
mov
add
push
fbstp
adc
and
in
fwait
ljmp
push
cvtps2pi
mov
out
sarb
popf
and
mov
jne
push
jg
mov
mov
clc
pop
clc
xchg
jnp
mov
insl
pop
xor
fwait
push
xchg
cmp
lahf
movsb
test
inc
xor
lret
xchg
xchg
adc
mov
addl
push
push
inc
add
and
test
std
repz
mov
test
test
fdivr
mov
jp
test
mov
inc
xor
push
rcrl
subl
pushf
repz
push
push
or
mov
jb
or
xchg
call
hlt
addb
push
leave
xchg
and
sar
sar
mov
xor
stos
mov
cmc
fstps
adc
dec
popf
sahf
add
xchg
mulps
fnsave
fwait
add
xchg
pop
push
jge
enter
cmpsl
sbb
jmp
mov
adc
or
adc
adc
mov
fcoms
popf
fdivr
fcompl
inc
stos
and
test
adc
imul
popf
and
sbb
mov
enter
pop
adc
nop
push
fbstp
mov
adc
xor
lahf
xor
ss
or
mulb
adcb
adc
repnz
xchg
push
sti
jl
adcb
fistpll
dec
add
sub
jge
adc
mov
adc
jg
sub
outsl
notb
and
jae
push
pop
out
mov
std
push
add
dec
and
and
push
xchg
loopne
lods
das
sub
sbb
arpl
push
xor
dec
push
inc
arpl
adc
xor
mov
rcr
sbb
mov
add
xor
mov
add
xchg
dec
jnp
add
pop
imul
mov
mov
mov
sti
jbe
adc
sbb
xchg
mov
sub
pop
or
fst
cmp
and
shlb
jns
icebp
out
in
jle
imull
sbb
arpl
stos
dec
adc
es
fistpll
mov
idivl
adc
xor
nop
sub
xchg
fmuls
xchg
and
mov
popa
fisttpll
adc
int
adc
in
or
jno
jg
xor
dec
cmpsl
dec
sti
dec
push
mov
push
push
push
pop
push
mov
sbb
sti
push
lahf
shlb
push
sbb
xchg
icebp
push
cmpsl
aaa
push
mov
mov
mov
fwait
btr
add
mov
cltd
adc
push
xchg
adc
xor
loope
jnp
mov
jl
das
shll
or
push
adc
rcrl
pop
incl
movb
xor
fisubs
into
movsb
subb
jge
mov
xchg
sbb
add
sub
cmpsb
mov
sbb
aam
dec
sub
cmp
mov
pop
pop
sbb
dec
and
and
test
fdivrl
add
inc
adc
push
fisttps
inc
dec
iret
push
push
mov
pop
push
xor
inc
leave
jo
or
xor
inc
cwtl
mov
mov
shlb
xchg
or
loopne
xchg
mov
push
add
adc
sbb
and
xchg
andb
mov
xchg
mov
sub
pop
jo
lret
mov
xchg
mov
xchg
pop
and
and
mov
pusha
add
gs
jo
call
pop
leave
mov
or
das
xchg
pop
push
or
or
mov
inc
and
test
add
sub
jg
pop
fs
movsb
add
int3
enter
enter
fcomp
fxch
push
test
loopne
jecxz
in
jmp
in
inc
jb
outsl
ror
mov
imul
add
and
add
ljmp
xor
ss
cmp
inc
inc
inc
inc
inc
inc
dec
es
xchg
arpl
dec
fsubs
xor
or
stos
xchg
sub
and
xor
ljmp
dec
dec
add
or
cmpb
add
pop
or
sub
ret
sbb
jmp
out
scas
or
shll
adc
pusha
pop
inc
add
lods
pop
jo
les
xor
in
xor
ss
dec
rorl
shlb
or
rcr
pop
xor
inc
daa
mov
je
pop
pcmpgtb
and
jl
dec
xlat
xor
aaa
movsb
push
lcall
mov
cs
push
dec
cmovs
dec
cltd
cmpsb
cmp
sub
sahf
add
and
inc
add
fs
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
add
add
push
adc
adc
add
test
mov
xchg
and
mov
add
inc
add
or
push
add
int
pop
or
scas
pop
ja
add
add
push
add
inc
adc
pusha
aaa
or
add
push
insl
cmpsb
jmp
and
imul
add
and
pop
add
data16
push
sti
pop
adc
sbbl
mov
dec
jno
jno
inc
fcoms
jnp
lahf
pushl
fadds
outsl
cmp
ret
mov
xchg
or
fwait
pop
or
sbb
add
loop
enter
cmp
inc
and
mov
mov
stos
push
adc
sbb
adc
daa
xor
sub
cmp
repz
add
add
in
xchg
dec
outsl
adc
jg
or
fstps
add
jno
in
cmp
leave
xchg
jb
cmp
in
daa
out
repz
out
sub
lret
in
repz
clc
add
add
frndint
jg
jg
call
es
aaa
mov
pop
fwait
cmp
add
lods
inc
fs
lcall
mov
or
jge
push
jae
or
test
addb
lds
dec
xchg
ret
dec
add
push
cmp
sub
push
notb
loop,pt
inc
aad
or
sub
inc
aad
mov
stos
mov
jle
push
inc
add
adc
pop
jb,pt
push
inc
push
push
and
jns
fistpl
insb
or
xor
subb
test
xchg
adc
adcl
and
dec
add
cs
jmp
mov
mov
in
and
inc
push
sub
adc
adc
insb
add
or
data16
nop
inc
push
mov
je
pop
jbe
inc
js
xchg
push
jae
out
push
insl
inc
or
mov
sbb
ficoml
fnsave
int
addr16
jg
and
inc
push
js
or
or
fwait
jmp
or
cmp
or
add
lsl
mov
xor
mov
mov
fildll
cmp
ds
lcall
jl
xor
sub
inc
cwtl
das
cmp
adc
cmp
cmp
aas
jp
jo
mov
jo
jmp
ja
push
or
arpl
add
jbe
mov
das
pop
adc
pop
cmp
push
test
cmp
sbb
cli
jbe
enter
add
adc
sbb
push
pop
mov
aad
mov
and
or
dec
mov
add
add
push
gs
popa
insb
jne
in
in
dec
inc
inc
dec
outsl
arpl
inc
insb
insb
push
add
imul
dec
outsl
fs
gs
fcompl
push
inc
clc
in
je
arpl
imul
bound
jb
or
or
push
ds
push
imul
int
or
inc
inc
push
pop
or
and
adc
push
push
gs
and
sbb
or
andb
sub
inc
push
mov
or
mov
outsl
dec
mov
imul
adc
iret
data16
cmp
inc
adc
adc
mov
pop
sar
dec
popa
out
cmp
outsl
insl
insl
sbb
mov
push
aam
mov
imul
daa
jo
pop
jmp
add
mov
fcomps
outsb
push
push
push
test
sbb
scas
fsubr
pop
push
je
sbb
imul
and
testl
inc
inc
gs
xor
imul
insb
loope
and
inc
outsb
pop
adc
mov
xor
lods
adc
push
sarl
outsb
push
or
insb
fsubs
aad
mov
mov
adc
popa
sbb
popa
and
mov
fcmovnbe
xor
inc
cmp
pop
and
push
inc
ljmp
scas
shrl
sub
adc
xor
outsb
jecxz
adcl
adc
popf
insb
inc
cmp
inc
je
bound
popa
out
jbe
push
adc
fs
xchg
fnstsw
or
je
iret
xor
gs
pop
or
adc
adc
sub
add
fwait
test
push
dec
add
test
or
js
jbe
mov
cmp
outsl
out
xor
ss
mov
and
mov
mov
cwtl
in
inc
jae
out
dec
lcall
insb
loopne
cli
push
dec
cmovg
push
jg
mov
ret
push
arpl
loope
stos
test
pop
imull
dec
mov
int
sbb
and
push
push
push
cwtl
dec
add
adc
dec
cmp
adc
or
dec
jp
sti
jbe
sbbl
jae
sbb
dec
popa
bound
or
sub
and
rorl
imul
mov
mov
xlat
popf
cmc
js
loope
push
idivb
adc
mov
pop
lods
jb
inc
mov
and
push
inc
mov
add
popf
push
push
js
mov
subl
addl
cmp
gs
or
in
push
bswap
or
push
mov
insb
sbb
inc
cmp
or
xchg
adc
jns
push
mov
imul
or
pmuludq
test
dec
or
gs
out
leave
xchg
lds
int
push
sbb
sbb
mov
mov
xchg
or
mov
pop
frstor
addr16
fimull
mov
push
jae
aam
pushf
dec
push
pop
jge
xor
jae
cld
cwtl
es
in
lret
imul
jae
add
ss
fwait
sbb
and
push
adc
push
adc
stc
fldt
mov
mov
mov
test
popw
test
insb
adc
cld
dec
jo
cmpsb
or
and
mov
push
insl
psubsw
push
call
pop
add
add
and
sub
jae
inc
xchg
popa
jne
roll
push
dec
cmp
jb
out
lock
insb
pop
mov
pop
pop
dec
outsl
sbb
and
shr
cwtl
dec
jae
cmp
push
aas
mov
shll
imulb
adc
insb
xchg
fsubl
leave
cmpsb
loope
adc
pop
or
int
in
mov
xor
push
pop
or
fs
adc
pop
sub
pushf
insb
popa
addr16
add
lcall
bound
lret
adc
aaa
imul
into
push
pop
mov
or
sub
stc
jmp
xor
mov
fs
xor
imul
jae
pusha
or
mov
push
ljmp
int
inc
and
inc
je
jle
mov
int3
inc
pop
lea
sub
or
insb
inc
bound
jb
stc
xchg
loop
sbb
ss
outsl
adc
ret
inc
decb
pop
insb
or
add
dec
test
test
push
mov
sbb
sub
sbb
inc
pusha
ret
fimuls
adc
adc
or
inc
rcll
sbb
or
cmp
and
adc
cmp
ret
inc
pop
xor
or
out
xor
ds
pop
xchg
mov
push
sbb
pop
and
xchg
mov
shrl
or
cltd
or
ja
pop
xor
or
hlt
imul
xor
adc
sbb
sbb
lcall
cwtl
add
xor
sti
gs
xor
adc
adc
adc
add
jp
push
add
jo
lahf
cmpsb
jmp
ljmp
bound
js
out
int
lret
das
pushl
sbb
bound
pusha
push
adc
push
imul
adc
gs
add
sahf
fwait
xor
xchg
ds
jg
push
xchg
push
inc
add
dec
add
add
dec
mov
jg
dec
popl
add
push
nop
or
xchg
int
fcmovnu
adc
add
add
repz
mov
inc
pop
adc
test
push
jb
mov
fistl
mov
pop
sbb
pusha
gs
ss
cs
or
jl
pop
xchg
imul
lods
or
rcll
je
or
or
mov
faddl
shrb
orb
aaa
pushf
mov
xor
in
cwtl
daa
add
add
fsub
sbb
in
dec
je
insb
test
dec
mov
mov
daa
and
cmp
daa
gs
cmpsb
movsb
jmp
and
inc
cmpsb
cmp
pop
jae
es
dec
adc
mov
jo
je
pop
mov
add
add
addb
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
lods
add
adc
cmpsl
add
