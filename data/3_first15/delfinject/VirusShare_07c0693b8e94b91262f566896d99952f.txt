jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
mov
push
call
ret
nop
push
mov
push
mov
and
push
mov
push
call
cmp
sbb
neg
and
pop
ret
push
push
mov
and
push
mov
push
call
ret
nop
test
je
call
or
je
ret
mov
jmp
ret
nop
test
je
call
or
jne
ret
mov
jmp
ret
nop
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
cmp
jge
jcxz
cmp
je
push
push
mov
mov
ja
lea
lea
std
rep
jmp
cmp
je
push
push
mov
mov
mov
ja
and
lea
lea
std
rep
sar
mov
mov
sub
sub
rep
cld
dec
sar
js
rep
and
mov
rep
pop
pop
ret
push
push
push
push
mov
mov
jmp
push
call
mov
mov
test
je
cmp
jbe
cmpb
jne
cmpb
jne
add
jmp
xor
mov
jmp
cmp
jne
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
mov
sub
add
mov
mov
cmp
ja
mov
mov
call
mov
mov
xor
jmp
cmp
jne
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
test
je
cmp
jne
cmpb
je
push
call
mov
jmp
push
call
cmp
jbe
mov
mov
inc
inc
cmp
ja
mov
cmp
ja
mov
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
call
lea
call
mov
lea
mov
call
mov
cmpl
je
inc
jmp
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
mov
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
pop
ret
mov
push
mov
add
lea
push
call
movzwl
imul
add
imul
xor
mov
add
imul
mov
add
mov
mov
pop
ret
mov
mov
fnclex
fldcw
ret
nop
push
fnstcw
pop
ret
nop
sub
fistpll
fwait
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
push
push
push
push
mov
mov
test
je
mov
mov
test
jle
dec
mov
mov
test
je
mov
call
test
jg
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmp
sete
cmp
jle
mov
inc
mov
test
je
call
test
je
mov
cmp
je
mov
mov
mov
call
jmp
cmp
jg
pop
pop
pop
pop
ret
mov
test
je
mov
xor
mov
xchg
call
ret
lea
movl
movl
mov
xor
mov
mov
mov
mov
movb
call
ret
nop
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
decl
jne
push
lea
call
pop
ret
mov
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
decl
jne
lea
call
add
dec
jne
pop
pop
ret
mov
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
lea
test
je
mov
inc
jle
incl
xchg
test
je
mov
dec
jl
decl
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
push
push
push
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
mov
call
push
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
lea
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
incl
ret
mov
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
decl
jne
lea
call
mov
pop
mov
ret
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
mov
jmp
ret
nop
test
je
ret
nop
add
mov
ret
mov
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
lea
ret
lea
mov
jmp
ret
mov
sub
jb
sub
je
call
ret
lea
mov
xor
movl
inc
cmp
jne
mov
mov
ret
nop
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
mov
mov
mov
ret
mov
push
push
mov
mov
test
je
mov
call
mov
test
jne
pop
pop
ret
lea
push
mov
mov
test
jne
xor
pop
ret
call
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
jne
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
subl
jae
call
mov
movl
movw
movw
movw
call
call
mov
ret
ljmp
add
add
jb
imul
jo
jb
addr16
sub
xor
cmp
sub
xor
xor
inc
jbe
outsb
addr16
bound
dec
push
inc
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
push
push
push
sub
mov
cld
mov
mov
mov
mov
add
jb
mov
mov
add
jb
mov
or
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
jae
cmp
jae
mov
inc
mov
inc
add
jae
jne
cmp
jae
mov
inc
adc
jb
mov
add
jne
cmp
jae
mov
inc
adc
adc
js
add
jae
jne
cmp
jae
mov
inc
adc
jb
dec
add
jne
cmp
jae
mov
inc
adc
adc
js
jmp
cmp
ja
sub
jb
shl
cmp
jae
mov
inc
xor
je
jns
sar
mov
jae
add
jne
cmp
jae
mov
inc
adc
adc
jmp
add
jne
cmp
jae
mov
inc
adc
jb
inc
add
jne
cmp
jae
mov
inc
adc
jb
add
jne
cmp
jae
mov
inc
adc
adc
js
add
jae
jne
cmp
jae
mov
inc
adc
jae
add
cmp
adc
mov
add
jb
cmp
ja
mov
add
jae
cmp
jb
mov
inc
mov
inc
dec
jne
jmp
cmp
ja
cmp
jbe
mov
jmp
je
dec
mov
sub
mov
mov
add
pop
pop
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
or
jmp
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
mov
mov
cmpl
je
mov
sub
mov
mov
cmpl
jb
mov
mov
mov
cmpl
je
mov
mov
xor
call
push
lea
push
mov
mov
push
mov
sub
push
mov
add
push
call
add
test
jne
jmp
subl
mov
mov
xor
call
mov
mov
mov
add
mov
call
jmp
mov
call
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
test
jle
mov
movl
cmpl
jne
mov
mov
lea
call
mov
mov
mov
movzbl
xor
mov
nop
incl
incl
decl
jne
pusha
inc
mov
rol
nop
nop
mov
nop
sub
add
mov
rol
nop
sub
inc
add
dec
inc
inc
rol
nop
xor
mov
sub
nop
mov
nop
mov
dec
xor
add
mov
ror
nop
mov
xor
ror
xor
mov
mov
dec
mov
xor
popa
pusha
xor
sub
nop
dec
nop
ror
mov
add
xor
nop
ror
xor
xor
ror
xor
rol
mov
rol
nop
xor
sub
mov
inc
xor
mov
add
nop
dec
ror
rol
add
inc
inc
mov
nop
rol
dec
add
mov
sub
add
inc
rol
mov
add
nop
sub
nop
mov
popa
mov
mov
call
jmp
pop
iret
sub
cmp
add
push
mov
loopne
inc
addb
add
pop
jmp
add
add
add
add
in
push
push
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
push
push
rdtsc
xor
pop
xor
pop
stc
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
jmp
lret
stc
stc
jb
add
out
sbb
or
add
addb
pop
imul
not
stc
jb
add
in
icebp
mov
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
xadd
stc
jmp
icebp
xor
rol
stc
jb
add
push
cmp
jmp
insb
lock
stc
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
stc
jb
add
push
inc
pop
jmp
fnstsw
jb
jmp
jne
sub
roll
add
jns
and
add
or
jmp
jg
mov
sub
and
add
jge
mov
jnp
es
call
cli
dec
cmp
xor
add
dec
pop
jmp
adc
mov
int3
push
add
pop
jmp
jb
mov
mov
or
lock
add
jmp
ds
mov
adc
ja
jmp
shlb
addb
add
add
fimuls
loope
or
fdiv
push
rclb
mov
inc
jmp
stos
repnz
sbb
add
in
mov
push
cltd
dec
mov
add
hlt
add
dec
pop
loopne
pusha
mov
dec
add
add
jmp
popa
or
rdtsc
sub
not
cmp
jg
jmp
cmp
pop
jmp
ret
cld
shlb
call
aad
je
xor
loopne
inc
add
cltd
add
add
aam
ret
dec
xchg
pop
nop
push
add
inc
jmp
std
jmp
ret
sti
push
clc
push
push
rdtsc
xor
pop
xor
pop
mov
jmp
fadd
mov
push
scas
rolb
bswap
jmp
and
mov
aaa
aam
sub
add
iret
bswap
xadd
jmp
out
loope
ret
cmp
push
pop
jmp
push
int
ret
jecxz
sbb
jmp
aaa
in
in
and
add
add
add
add
ljmp
out
repz
add
pop
jmp
lret
fmuls
push
push
push
rdtsc
xor
pop
xor
pop
jmp
cmp
jmp
ret
mov
fstl
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
xor
push
push
pushl
mov
movl
mov
call
mov
pusha
add
ror
nop
inc
dec
nop
xor
nop
add
dec
xor
nop
sub
nop
dec
xor
nop
sub
nop
inc
rol
add
nop
inc
ror
mov
xor
add
nop
add
xor
add
dec
rol
mov
xor
nop
dec
nop
nop
inc
inc
rol
rol
nop
mov
mov
mov
xor
popa
pusha
inc
nop
ror
ror
rol
rol
ror
mov
mov
xor
inc
sub
ror
add
rol
ror
mov
xor
xor
nop
mov
mov
popa
cmpl
je
cmpl
je
jmp
cmpl
jl
decl
mov
mov
mov
cmp
jne
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
mov
pop
ret
push
mov
add
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
mov
call
inc
je
mov
push
mov
mov
call
inc
push
mov
call
mov
mov
pop
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
rep
mov
xor
mov
mov
mov
push
mov
call
mov
mov
mov
cmpl
jge
mov
incl
mov
mov
mov
mov
cmp
jne
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
pop
pop
pop
pop
pop
ret
mov
ret
lea
push
mov
add
push
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
mov
mov
mov
push
call
add
mov
movw
push
push
call
push
call
mov
push
push
movzwl
push
push
mov
push
call
mov
lea
push
movzwl
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
call
add
push
push
mov
push
call
mov
lea
push
mov
push
call
add
push
mov
push
mov
push
mov
push
call
mov
mov
pusha
mov
inc
dec
xor
mov
xor
xor
mov
inc
mov
add
inc
nop
xor
xor
rol
mov
xor
xor
add
xor
nop
add
dec
inc
mov
sub
popa
pusha
mov
nop
inc
mov
xor
xor
mov
add
mov
mov
mov
sub
ror
mov
ror
nop
dec
add
nop
nop
add
dec
sub
popa
push
push
push
push
mov
push
call
mov
lea
push
push
lea
push
mov
push
mov
push
call
push
push
mov
sub
push
push
mov
push
call
mov
lea
push
mov
sub
push
push
mov
push
mov
push
call
lea
push
push
mov
push
mov
push
push
push
mov
push
call
test
jbe
movb
pusha
nop
rol
mov
xor
inc
rol
dec
nop
xor
dec
xor
xor
sub
add
mov
ror
add
mov
add
add
popa
pusha
mov
mov
mov
xor
inc
rol
mov
sub
ror
mov
add
ror
dec
xor
ror
mov
nop
inc
sub
dec
dec
mov
dec
xor
xor
sub
dec
mov
nop
xor
ror
mov
sub
mov
xor
nop
xor
ror
inc
mov
xor
mov
popa
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
add
call
add
add
bndstx
hlt
in
out
ljmp
in
jmp
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
imul
gs
xor
cs
insb
add
add
push
mov
mov
push
push
dec
jne
push
mov
mov
mov
call
xor
push
push
pushl
mov
lea
xor
call
mov
mov
call
je
lea
mov
call
cmpl
je
cmpl
je
lea
mov
call
mov
lea
call
lea
xor
call
mov
lea
call
mov
push
push
push
call
mov
mov
call
push
mov
call
mov
mov
pop
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
ret
push
mov
add
mov
mov
add
mov
movzwl
add
mov
mov
pop
pop
pop
ret
mov
push
mov
add
mov
mov
shr
mov
mov
mov
pop
pop
pop
ret
push
mov
add
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
nop
ror
add
ror
dec
nop
mov
dec
ror
mov
sub
dec
rol
ror
mov
mov
nop
sub
dec
nop
sub
ror
xor
nop
popa
pusha
xor
ror
xor
xor
xor
ror
nop
mov
dec
rol
mov
xor
nop
xor
nop
sub
xor
sub
mov
rol
nop
xor
mov
rol
nop
inc
inc
sub
inc
mov
xor
xor
xor
mov
mov
add
mov
mov
inc
nop
mov
sub
dec
inc
mov
xor
rol
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
lea
xor
mov
call
lea
xor
mov
call
pusha
rol
mov
mov
inc
mov
nop
ror
inc
dec
ror
xor
inc
add
inc
inc
ror
nop
xor
mov
rol
rol
mov
xor
rol
nop
xor
inc
xor
sub
nop
nop
add
dec
xor
nop
mov
inc
dec
add
xor
nop
rol
popa
pusha
nop
rol
xor
xor
ror
mov
sub
mov
mov
add
ror
inc
xor
xor
ror
mov
sub
mov
inc
popa
movl
cmpb
jne
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
xor
push
push
pushl
mov
pusha
xor
dec
mov
add
xor
xor
add
nop
sub
ror
mov
xor
ror
mov
mov
mov
rol
add
dec
xor
add
popa
pusha
sub
add
ror
nop
ror
xor
rol
mov
inc
rol
inc
dec
xor
rol
mov
sub
add
inc
sub
nop
xor
mov
sub
rol
add
nop
dec
inc
nop
nop
mov
inc
xor
xor
ror
inc
add
mov
mov
xor
sub
popa
movl
lea
push
mov
push
call
test
je
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
push
mov
push
call
test
jl
cmpl
je
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
test
je
mov
call
mov
pusha
dec
xor
xor
rol
ror
mov
xor
add
mov
sub
ror
mov
mov
nop
xor
sub
nop
nop
ror
inc
xor
popa
pusha
dec
mov
xor
xor
rol
ror
inc
mov
inc
nop
nop
nop
xor
inc
sub
mov
inc
nop
ror
xor
xor
mov
inc
mov
dec
dec
popa
mov
movzwl
dec
test
jb
inc
mov
movl
lea
push
mov
lea
mov
mov
push
mov
lea
mov
mov
add
push
mov
lea
mov
mov
add
push
mov
push
call
test
je
lea
push
mov
lea
mov
mov
call
push
mov
lea
mov
mov
push
mov
lea
mov
mov
add
push
mov
push
call
incl
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
mov
call
mov
push
call
mov
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
call
add
or
adc
loopne
aad
loopne
enter
call
add
add
call
add
add
adc
or
loopne
shl
ljmp
add
add
push
mov
add
mov
mov
mov
xor
divl
test
jne
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
divl
test
jne
mov
mov
mov
jmp
mov
mov
xor
divl
inc
imull
mov
mov
add
mov
movzwl
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
xor
divl
test
jne
mov
lea
mov
mov
add
jmp
mov
lea
mov
mov
xor
divl
inc
imull
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
movb
mov
mov
add
mov
mov
call
mov
pusha
mov
ror
nop
sub
xor
sub
dec
nop
mov
rol
add
popa
pusha
sub
mov
nop
dec
mov
ror
mov
xor
xor
add
mov
nop
inc
dec
mov
xor
nop
mov
mov
sub
ror
nop
nop
mov
mov
sub
nop
nop
ror
dec
ror
ror
dec
rol
popa
mov
call
mov
xor
push
push
pushl
mov
mov
mov
mov
mov
mov
mov
add
mov
movzwl
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
call
mov
mov
mov
mov
call
add
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
cmpl
jbe
mov
lea
mov
mov
mov
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
mov
lea
mov
mov
add
mov
mov
call
mov
lea
mov
mov
mov
mov
call
add
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
mov
call
add
mov
incl
decl
jne
lea
mov
call
lea
mov
call
cmpb
jne
jmp
xchg
enter
cli
loopne
rdtsc
mov
rdtsc
sub
not
cmp
jg
mov
inc
jmp
ror
int3
ret
pop
sub
call
adc
rolb
add
add
add
sti
int3
ret
mov
iret
bswap
jmp
rorb
iret
bswap
jmp
sti
mov
jmp
ret
ret
out
pop
jae
push
push
rdtsc
xor
pop
xor
pop
mov
jmp
mov
fsubr
add
loopne
add
add
int3
ret
or
xor
enter
pop
inc
jmp
cmp
int3
ret
or
leave
pop
xadd
jmp
dec
ror
ret
sub
rdtsc
xor
pop
xor
pop
jmp
fnstenv
add
fucomi
int3
ret
insl
pushf
and
or
movsb
mov
aam
lock
or
xor
int3
ret
les
lret
test
pusha
inc
jmp
sahf
test
decl
iret
bswap
mov
jmp
cltd
test
call
sbb
add
fdivrl
out
jmp
cmpsb
in
int3
ret
push
rcrl
add
add
ja
fsubp
int3
ret
jb
pop
and
add
adc
pop
jmp
adc
int3
ret
int3
addl
add
mov
add
add
pop
push
pop
jmp
xor
int3
ret
push
xchg
and
push
push
rdtsc
xor
pop
xor
pop
mov
jmp
cwtl
loop
ret
test
push
sub
push
xchg
dec
add
add
int
or
ret
rdtsc
xor
pop
xor
pop
inc
jmp
xor
int3
ret
push
inc
jnp
jmp
and
test
fxch
ret
add
inc
jmp
xchg
sub
add
add
add
jmp
adc
int3
ret
push
ljmp
jbe
scas
pop
sbb
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
not
stc
jb
add
movsb
ficoml
jmp
imul
inc
rcr
insb
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
bt
stc
stc
jb
add
and
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
jmp
push
stc
jb
add
jmp
lods
fs
stc
jb
add
pop
out
jo
xor
enter
stc
add
add
jl
jmp
jmp
xchg
mov
stc
jb
add
outsb
mov
rdtsc
sub
not
cmp
jl
jmp
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
bt
stc
stc
jb
add
xchg
sub
test
add
add
test
incl
add
add
test
incl
add
call
test
push
push
push
push
push
push
mov
call
push
mov
call
push
call
test
je
movb
movl
lea
push
mov
push
call
pusha
nop
sub
mov
xor
add
mov
xor
dec
dec
mov
nop
mov
add
sub
nop
xor
mov
sub
xor
nop
xor
xor
inc
rol
nop
ror
ror
dec
mov
add
xor
add
dec
nop
xor
add
dec
add
add
mov
sub
ror
mov
popa
pusha
sub
xor
mov
nop
rol
rol
nop
inc
nop
mov
rol
mov
nop
sub
inc
inc
nop
popa
lea
push
push
lea
push
mov
add
push
mov
push
call
push
push
mov
push
mov
mov
push
mov
push
call
lea
push
mov
push
mov
push
mov
mov
push
mov
push
call
pusha
add
dec
xor
inc
nop
mov
mov
xor
nop
ror
xor
xor
xor
ror
mov
sub
nop
sub
xor
sub
rol
ror
nop
nop
rol
inc
xor
ror
sub
dec
dec
add
sub
nop
mov
xor
sub
dec
ror
add
nop
mov
mov
mov
dec
xor
nop
sub
popa
pusha
nop
xor
inc
inc
xor
mov
add
add
nop
sub
xor
sub
nop
ror
xor
nop
nop
ror
nop
rol
nop
mov
nop
add
xor
rol
mov
sub
mov
rol
mov
inc
add
mov
xor
mov
ror
nop
inc
xor
popa
lea
push
push
mov
add
push
mov
add
push
mov
push
call
mov
mov
mov
add
mov
lea
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
mov
push
call
pop
cmpb
jne
push
mov
push
call
jmp
mov
mov
call
mov
push
call
mov
mov
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
mov
mov
mov
call
pusha
mov
add
mov
inc
xor
rol
nop
add
mov
sub
nop
nop
ror
dec
xor
ror
inc
nop
dec
nop
rol
add
xor
sub
nop
nop
sub
inc
xor
mov
sub
add
mov
sub
mov
inc
ror
xor
nop
sub
mov
rol
nop
popa
pusha
mov
nop
xor
mov
nop
inc
mov
sub
xor
inc
inc
ror
ror
xor
xor
sub
nop
nop
xor
sub
inc
xor
xor
xor
xor
popa
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
cmpb
jb
cmpb
ja
addb
mov
mov
mov
incl
incl
decl
cmpl
jne
mov
pop
ret
mov
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
call
lea
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
lea
push
push
lea
push
push
push
mov
push
call
test
jne
mov
call
mov
lea
push
mov
push
lea
push
push
push
mov
push
call
test
jne
mov
mov
call
mov
mov
cmpb
jne
mov
push
lea
mov
mov
call
mov
mov
call
mov
inc
mov
mov
mov
call
jmp
mov
push
lea
mov
mov
call
mov
mov
call
mov
add
mov
mov
mov
call
mov
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
call
add
add
sub
fdiv
ljmp
in
in
out
loop
loop
push
add
add
add
incl
add
add
add
in
add
pusha
mov
dec
mov
nop
mov
mov
inc
xor
mov
nop
xor
mov
sub
sub
nop
mov
xor
nop
nop
nop
inc
mov
inc
nop
rol
ror
inc
add
mov
rol
dec
xor
add
nop
xor
inc
rol
nop
dec
mov
popa
pusha
ror
inc
mov
ror
mov
inc
add
inc
mov
mov
sub
inc
nop
sub
nop
mov
inc
sub
mov
sub
ror
mov
dec
mov
ror
inc
add
inc
popa
sidtl
mov
sub
je
sub
jne
movb
jmp
movb
mov
pop
pop
pop
ret
nop
sub
sidtl
mov
add
ret
nop
push
mov
push
movb
call
cmp
je
call
cmp
je
call
cmp
jne
movb
pusha
nop
add
ror
nop
sub
nop
mov
xor
nop
dec
nop
rol
ror
inc
xor
add
mov
xor
mov
dec
add
mov
mov
mov
dec
mov
xor
rol
dec
nop
sub
ror
xor
nop
mov
mov
rol
nop
popa
pusha
nop
nop
ror
add
xor
rol
mov
xor
mov
nop
xor
mov
xor
mov
mov
dec
ror
ror
xor
nop
inc
nop
dec
rol
mov
rol
dec
mov
nop
dec
nop
mov
mov
inc
nop
mov
sub
mov
sub
mov
mov
nop
sub
add
xor
xor
add
inc
popa
mov
pop
pop
ret
mov
push
mov
mov
push
push
dec
jne
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
call
mov
pusha
add
ror
dec
sub
rol
dec
xor
dec
nop
mov
xor
mov
dec
sub
mov
rol
nop
xor
xor
nop
mov
nop
mov
xor
add
popa
pusha
xor
mov
nop
ror
add
xor
xor
sub
nop
add
xor
xor
rol
mov
rol
mov
rol
popa
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
sub
xor
dec
mov
inc
xor
xor
rol
nop
nop
xor
mov
sub
inc
mov
ror
ror
dec
nop
xor
sub
add
xor
sub
nop
dec
sub
nop
rol
add
mov
dec
ror
nop
dec
nop
rol
nop
mov
dec
sub
add
xor
xor
mov
add
popa
pusha
rol
inc
xor
dec
nop
dec
nop
rol
ror
xor
nop
add
dec
rol
nop
add
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
sub
mov
dec
sub
ror
mov
rol
nop
xor
nop
ror
inc
ror
nop
xor
xor
mov
mov
inc
nop
xor
mov
xor
popa
pusha
inc
dec
add
sub
xor
dec
mov
add
xor
rol
mov
xor
ror
nop
xor
inc
sub
xor
nop
mov
xor
add
sub
mov
rol
ror
xor
add
nop
inc
add
nop
dec
nop
mov
nop
rol
dec
popa
pusha
mov
inc
sub
sub
xor
inc
mov
ror
nop
mov
nop
nop
xor
xor
ror
xor
xor
xor
inc
inc
mov
add
mov
mov
inc
nop
dec
add
nop
sub
dec
rol
nop
mov
inc
dec
inc
add
nop
xor
sub
popa
pusha
xor
nop
xor
nop
sub
add
xor
ror
nop
inc
xor
mov
xor
ror
mov
mov
ror
xor
nop
nop
add
dec
add
dec
inc
mov
rol
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
call
mov
push
call
call
mov
jmp
xchg
cmp
mov
add
add
std
call
movsb
addl
addl
ret
lods
push
add
jmp
rolb
pop
add
call
js
ds
push
pop
add
call
or
dec
aam
add
add
xchg
call
insb
addl
addl
ret
xchg
push
pop
add
call
or
cmp
sub
add
add
shr
add
add
and
adc
push
sub
loopne
add
add
add
add
call
loopne
inc
and
shr
pop
and
les
mov
add
das
and
pop
and
add
add
enter
add
mov
adc
mov
les
hlt
or
add
cmp
and
stos
call
ret
add
add
addl
addl
ret
shr
fstpt
clc
enter
inc
rolb
rol
les
or
add
push
push
cmp
movsb
push
push
rdtsc
xor
pop
xor
pop
repz
call
cli
mov
mov
call
outsl
call
dec
addl
addl
ret
fsubrl
pop
repz
call
add
cmp
mov
add
call
sbb
addl
ret
mov
or
add
repz
addb
add
les
mov
call
cmp
cmc
jmp
mov
ret
add
les
hlt
pop
add
cmp
pushf
jnp
pop
call
jg
add
add
mov
addl
ret
or
rdtsc
xor
pop
xor
pop
repz
call
push
enter
add
add
lahf
call
or
inc
and
adc
sub
or
add
dec
adc
cmp
xor
je
addb
repz
call
fwait
repnz
lods
ds
push
push
rdtsc
xor
pop
xor
pop
jmp
in
les
jnp
add
sti
push
cmp
dec
arpl
fwait
call
or
add
add
jo
inc
and
adc
adc
rdtsc
xor
pop
xor
pop
push
pop
add
call
cmpsb
aas
es
adc
or
add
add
mov
add
add
jo
inc
and
adc
xor
add
add
out
add
add
lods
addl
addl
ret
je
pop
add
call
ds
inc
adc
daa
cmpsl
jmp
fdivl
add
add
add
add
call
xor
cmp
push
out
or
call
pop
call
enter
add
addl
ret
pusha
push
push
rdtsc
xor
pop
xor
pop
jmp
add
pop
add
pop
sbb
es
jge
dec
call
bnd
test
inc
and
adc
mov
add
call
xchg
addl
addl
ret
js
add
les
mov
fnstsw
es
pop
inc
shr
or
add
or
add
je
es
test
add
add
jecxz
add
add
faddl
addl
ret
xchg
push
add
jmp
add
push
pop
add
call
pop
jne
repnz
call
sbb
fnstsw
add
add
add
les
sub
add
xchg
mov
pushf
jmp
add
add
sbb
add
add
mov
inc
and
adc
loopne
or
addb
add
add
add
add
call
fildll
jb
repz
call
ljmp
xor
add
add
mov
add
addl
addl
ret
hlt
add
call
xor
sub
call
addr16
lods
addl
addl
ret
shr
or
add
mov
add
add
add
pop
push
pop
push
pop
repz
call
inc
ja
outsb
iret
push
push
push
pop
add
call
imul
call
add
add
and
adc
sub
add
call
pop
lock
es
jp
cmp
add
add
add
or
inc
and
adc
hlt
call
aad
add
add
test
addl
ret
or
add
add
inc
jp
imul
add
call
push
clc
cmp
jp
inc
push
call
pusha
call
addb
add
or
add
add
call
xchg
add
mov
add
mov
add
add
cld
addl
addl
ret
sub
add
add
clc
call
pusha
addl
addl
ret
add
add
call
pop
ss
es
pop
loope
add
push
pop
add
call
test
cmp
fsubl
cmp
add
add
pop
call
loopne
inc
and
adc
mov
les
pop
ljmp
inc
es
out
popf
call
sub
add
add
and
addl
ret
and
add
add
push
add
addl
addl
ret
pusha
push
pop
add
call
xchg
jnp
es
bound
movsl
les
add
repz
call
sahf
mov
add
add
and
add
add
push
addl
addl
ret
shr
js
push
pop
repz
xchg
add
call
daa
pop
inc
es
int
das
call
lock
rolb
add
or
inc
call
push
call
adc
addl
ret
xchg
jmp
sbb
sti
incl
push
inc
es
adc
cmp
add
shl
les
xchg
or
add
cltd
or
add
call
pusha
addl
addl
ret
inc
jmp
xor
pusha
bswap
bswap
repz
call
ror
aas
es
lods
jne
add
call
pop
inc
es
pop
data16
hlt
xchg
aam
inc
add
add
add
add
call
cwtl
cltd
inc
es
andl
add
add
inc
and
adc
rclb
xor
enter
pop
push
pop
add
call
xchg
add
push
je
xchg
rol
ror
repz
call
addb
mov
jmp
mov
clc
cmp
inc
inc
add
add
repz
call
ret
es
pop
cwtl
pop
call
insb
call
lock
addl
ret
inc
push
push
rdtsc
xor
pop
xor
pop
push
pop
repz
call
sbb
xchg
push
push
add
add
call
lods
cld
inc
es
xor
pop
call
aaa
in
sbb
les
fdivrs
add
add
call
and
jb
call
pop
call
sub
inc
and
adc
or
push
rdtsc
xor
pop
xor
pop
jmp
enter
add
aam
add
xor
inc
lods
mov
shrl
add
add
repz
call
add
es
xchg
lods
push
call
mov
add
add
add
pop
jmp
pop
mov
add
call
scas
pop
cmp
push
call
pushf
call
mov
inc
and
adc
and
or
add
fsts
clc
call
add
iret
bswap
add
call
pop
xchg
inc
es
push
inc
inc
jmp
loop
sub
jmp
in
fs
call
sub
cmp
pop
call
imul
add
add
js
inc
and
adc
cmp
sti
ljmp
aas
es
add
add
fucomip
add
add
or
inc
and
adc
inc
push
push
rdtsc
xor
pop
xor
pop
push
add
jmp
or
add
call
aam
inc
es
or
push
push
rdtsc
xor
pop
xor
pop
repz
call
ds
aad
add
add
pop
call
cwtl
addl
addl
ret
pop
repz
call
sti
dec
aas
es
test
call
call
sbb
addl
ret
add
add
add
push
call
inc
addl
addl
ret
addb
jmp
sbb
jmp
in
cwtl
mov
addb
add
jmp
mov
add
stos
add
add
dec
es
add
add
hlt
call
xchg
addl
addl
ret
loope
pop
add
call
call
mov
push
call
dec
call
mov
adc
add
add
add
lcall
addl
addl
ret
shl
add
call
add
mov
rdtsc
mov
rdtsc
sub
not
cmp
jg
repz
call
or
divps
jl
add
add
in
add
add
les
addl
ret
in
push
add
repz
call
mov
pop
loop
call
sbb
add
add
enter
add
addl
ret
lock
push
call
mov
inc
and
adc
rclb
les
sub
add
adc
inc
es
mov
fwait
jmp
ret
fdivr
push
loopne
inc
rolb
add
add
call
roll
out
jp
add
add
aam
add
add
adc
addl
ret
xchg
push
push
rdtsc
xor
pop
xor
pop
add
call
shll
es
lds
push
pop
push
pop
add
call
dec
fdivrs
sub
icebp
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
jge
es
add
add
adc
add
add
pushf
addl
addl
ret
sbb
rdtsc
xor
pop
xor
pop
repz
call
je
ds
bound
push
jmp
xchg
rol
les
xor
pushl
sub
sbb
or
add
add
lock
shl
les
mov
out
es
orb
add
add
lods
call
addl
addl
ret
xchg
push
push
rdtsc
xor
pop
xor
pop
push
pop
add
call
inc
shrb
inc
xadd
xadd
repz
call
jno
cmp
fildll
ds
xchg
call
mov
inc
and
adc
cwtl
push
pop
imul
add
call
jg
inc
sub
add
add
call
aam
inc
and
adc
cld
jmp
push
inc
addb
add
add
call
sbb
and
add
addb
add
loopne
dec
jmp
sbb
call
pusha
call
addb
add
or
adcb
pop
push
pop
repz
call
xor
aas
lods
fcoms
call
adc
add
add
sub
addl
ret
pop
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
add
call
pop
jle
es
add
inc
rclb
jmp
pushf
mov
adc
imul
jmp
cmp
mov
add
add
out
call
fadds
addl
ret
fsubrs
sub
add
add
mov
add
out
adc
cmp
add
add
call
call
adc
clc
jmp
jp
fadds
add
add
add
push
add
add
call
add
add
rdtsc
xor
pop
xor
pop
add
call
xchg
jmp
es
daa
stos
sahf
call
xchg
call
adc
addl
ret
loopne
add
and
add
add
call
pop
and
es
xor
add
adc
add
add
adc
addl
ret
shr
cmp
mov
add
add
xadd
push
pop
add
call
data16
stos
fmuls
push
add
jmp
rclb
push
pop
repz
call
test
test
sub
add
add
sub
add
add
jl
inc
and
adc
cwtl
push
push
rdtsc
xor
pop
xor
pop
add
call
xlat
lret
cmp
adc
add
add
add
add
addb
add
or
add
add
add
jae
add
add
sbb
inc
and
adc
rolb
repnz
fidivrs
pop
ljmp
sub
not
cmp
jg
add
call
mov
xchg
mov
add
push
call
mov
adc
add
or
add
add
call
int
inc
es
inc
and
call
test
add
add
inc
addl
addl
ret
sbb
add
add
mov
add
addl
addl
ret
xor
les
sub
jmp
and
es
add
mov
inc
addb
add
add
pop
push
pop
add
call
xchg
ds
add
add
xor
addl
ret
mov
add
fdiv
pop
enter
add
pop
repz
call
rolb
dec
lret
push
in
pop
push
pop
add
call
jmp
ret
push
push
rdtsc
xor
pop
xor
pop
push
add
push
pop
add
call
push
cmp
jp
jle
call
ja
add
add
in
addl
addl
ret
test
xor
enter
stc
add
add
jg
repz
call
out
addl
mov
les
out
incl
push
add
xor
enter
stc
add
add
jg
push
pop
add
call
mov
sbb
add
xchg
call
insb
addl
addl
ret
mov
add
push
add
add
add
add
les
and
inc
push
ds
add
mov
xchg
add
call
cmp
inc
es
test
add
add
sbb
add
add
mov
inc
and
adc
lock
push
pop
add
call
jae
cmp
adc
add
add
stos
call
or
addl
ret
push
fs
rolb
add
add
add
iret
bswap
push
pop
add
call
ds
inc
adc
sub
scas
rorb
shl
les
push
decl
inc
es
lea
add
sub
add
add
and
adc
in
add
hlt
pop
lock
call
jmp
inc
es
dec
push
call
fidivl
es
mov
xchg
push
add
add
call
cs
call
xor
add
add
sbb
inc
and
adc
add
add
add
call
fs
inc
es
xchg
pop
movsb
push
pop
add
jmp
idiv
inc
es
jmp
out
jmp
hlt
add
call
jmp
xchg
jle
call
jnp
add
add
mov
adc
push
jmp
xchg
adc
add
call
pop
in
inc
es
mov
rolb
add
lea
es
leave
add
or
addb
add
add
add
repz
call
push
mov
xor
add
add
sub
add
add
and
adc
xchg
push
add
repz
call
mov
loop
mov
pop
push
pop
add
call
push
mov
ret
cmpsl
jmp
sub
test
fmuls
rolb
rolb
std
call
jge
es
xchg
pop
call
out
call
fadds
addl
ret
mov
xor
pop
xor
pop
bswap
bswap
push
pop
add
call
leave
xchg
es
adc
shr
add
call
cmpsl
or
shrl
xor
enter
stc
add
add
jg
add
call
adc
ds
push
push
mov
add
add
add
or
addl
ret
jo
or
adc
loopne
rolb
call
cltd
das
inc
pushl
jl
addb
les
xor
decl
das
inc
es
pop
call
xor
mov
add
add
pop
add
call
daa
add
inc
mov
call
jne
add
add
add
inc
and
adc
mov
xor
enter
stc
add
add
jg
add
call
mulb
es
enter
sti
add
adc
enter
call
dec
push
aas
es
in
cmc
sahf
call
jge
mov
add
add
add
pop
jmp
jmp
outsb
idiv
jmp
cmp
imull
add
ss
js
inc
and
adc
cwtl
rdtsc
mov
rdtsc
sub
not
cmp
jg
repz
call
sbb
es
xchg
dec
jmp
jns
ss
pop
loopne
addr16
add
jmp
dec
in
fdivr
jb
add
or
enter
enter
stc
add
add
jl
jmp
jmp
cmpsl
jmp
lods
rol
ror
stc
stc
jb
add
loop
sbb
push
add
stc
jb
add
ficoms
rdtsc
mov
rdtsc
sub
not
cmp
jg
push
pop
stc
jb
add
rdtsc
mov
rdtsc
sub
not
cmp
jl
jmp
jmp
out
dec
and
jmp
movsb
push
pop
not
stc
jb
add
scas
lahf
inc
jp
fsts
add
stc
stc
jb
add
mov
call
xor
addb
add
add
add
add
cmpb
incl
leave
dec
lea
dec
mov
in
mov
mov
sub
cmp
jge
mov
sub
cmp
jge
movb
pusha
dec
rol
mov
mov
dec
add
xor
add
mov
sub
mov
xor
nop
xor
dec
add
nop
rol
inc
xor
inc
popa
pusha
inc
xor
xor
dec
nop
ror
mov
rol
ror
dec
nop
mov
popa
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
decl
add
pop
sbb
in
mov
stos
loope
jmp
add
add
decl
add
add
or
adc
scas
out
call
decl
add
sbb
call
ljmp
decl
add
add
aas
das
leave
scas
out
call
decl
add
add
push
sbb
call
decl
add
add
adc
mov
loopne
ljmp
add
add
sbb
das
repnz
loope
loopne
hlt
loop
cli
add
decl
add
cmp
or
jmp
lock
add
incl
adc
sbb
add
add
decl
add
add
bndstx
hlt
in
icebp
jmp
jecxz
sti
enter
call
add
add
sbb
sub
repz
loopne
jmp
incl
add
add
call
add
add
sbb
sbb
repz
loopne
div
lret
in
cmc
add
add
call
add
add
movhps
in
lock
out
cmc
hlt
in
hlt
add
call
add
add
sbb
sub
repz
loopne
jmp
incl
add
add
decl
add
sbb
jmp
loopne
jecxz
add
add
decl
add
add
adc
or
loopne
ret
jmp
add
decl
add
add
adc
or
leave
jecxz
loopne
jecxz
lcall
add
add
bndstx
hlt
in
in
jmp
out
loop
stc
mov
jmp
stc
std
out
add
add
decl
add
add
or
in
loopne
div
add
decl
add
add
adc
ret
out
cmc
sti
std
add
decl
movups
lret
jecxz
cld
add
add
call
add
cmp
or
out
in
out
loope
out
jmp
jmp
jmp
add
add
call
add
add
sbb
cmp
repz
icebp
cmc
out
out
clc
inc
ljmp
add
add
add
in
loopne
div
add
decl
sbb
xor
in
enter
dec
add
add
call
add
add
sbb
cs
in
cli
shl
ljmp
add
add
decl
add
add
sbb
cmp
out
icebp
out
loopne
add
call
add
add
sbb
jmp
aad
call
add
add
decl
add
add
bndstx
hlt
in
ljmp
lret
add
in
add
xor
mov
mov
mov
call
xor
push
push
pushl
mov
pusha
xor
mov
nop
inc
mov
ror
rol
dec
mov
nop
mov
xor
rol
popa
pusha
rol
mov
xor
rol
add
mov
sub
ror
xor
ror
nop
dec
xor
inc
sub
add
mov
sub
dec
xor
nop
mov
inc
sub
xor
nop
dec
ror
sub
dec
nop
sub
ror
xor
ror
nop
nop
xor
sub
add
mov
dec
mov
nop
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
call
push
call
mov
cmpl
je
testb
jne
xor
jmp
mov
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
mov
pop
ret
add
call
add
add
sbb
cmp
in
out
lock
hlt
out
ljmp
add
in
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
movb
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
call
mov
movl
pusha
inc
xor
mov
ror
rol
mov
mov
rol
sub
nop
xor
mov
xor
nop
rol
mov
sub
ror
xor
sub
popa
pusha
mov
mov
inc
nop
xor
sub
dec
xor
nop
sub
add
mov
mov
dec
ror
sub
dec
rol
mov
xor
add
mov
rol
nop
xor
nop
mov
xor
xor
add
inc
nop
add
xor
nop
nop
popa
lea
push
mov
push
call
lea
mov
call
lea
mov
call
lea
mov
mov
call
mov
call
test
je
lea
mov
mov
call
mov
mov
call
jne
movb
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
add
cmp
or
repz
int
call
add
decl
add
add
inc
and
out
icebp
div
out
in
ljmp
incl
add
sbb
add
add
in
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
call
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
jmp
lea
lea
mov
call
mov
push
lea
mov
mov
call
mov
pop
call
jne
pusha
ror
dec
rol
sub
ror
nop
xor
nop
ror
dec
add
dec
add
add
dec
nop
mov
rol
ror
xor
xor
xor
nop
mov
nop
mov
rol
dec
xor
add
mov
xor
dec
xor
xor
popa
pusha
rol
xor
sub
nop
xor
nop
inc
dec
inc
sub
ror
mov
nop
inc
mov
xor
nop
dec
mov
nop
nop
sub
inc
dec
add
add
inc
dec
nop
mov
sub
nop
add
inc
ror
mov
nop
sub
add
mov
nop
popa
movb
jmp
lea
push
mov
push
call
test
jne
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
decl
adc
or
in
mov
in
hlt
hlt
cld
add
add
decl
add
xor
sbb
in
in
mov
loopne
repz
add
decl
add
add
pop
pop
sbb
in
out
lods
loopne
ljmp
jl
pushl
rorb
decl
decl
decl
cld
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
push
push
call
mov
cmpl
je
pusha
add
sub
sub
nop
mov
ror
mov
xor
mov
mov
sub
add
add
popa
pusha
xor
inc
xor
add
mov
sub
dec
mov
mov
sub
inc
nop
sub
nop
ror
xor
add
mov
nop
inc
ror
xor
nop
rol
dec
nop
rol
mov
xor
popa
movl
lea
push
mov
push
call
test
je
pusha
xor
dec
nop
xor
sub
dec
mov
add
dec
xor
dec
nop
sub
ror
mov
ror
dec
add
nop
mov
inc
sub
xor
sub
mov
rol
add
popa
pusha
rol
sub
nop
add
mov
mov
nop
rol
nop
dec
sub
add
mov
xor
sub
dec
xor
mov
mov
rol
mov
rol
nop
sub
inc
add
inc
mov
nop
add
mov
popa
call
mov
pusha
sub
ror
nop
rol
dec
rol
mov
xor
rol
dec
ror
mov
xor
rol
nop
add
inc
nop
add
mov
rol
popa
pusha
mov
inc
inc
xor
sub
inc
dec
mov
dec
ror
mov
sub
nop
sub
nop
mov
inc
dec
ror
add
nop
inc
rol
nop
xor
xor
ror
dec
sub
ror
xor
add
mov
sub
popa
mov
cmp
jne
lea
push
lea
push
lea
push
lea
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
cmpl
je
lea
push
lea
push
lea
push
lea
push
mov
push
call
test
je
lea
push
lea
push
call
test
setl
lea
mov
call
pusha
nop
xor
inc
xor
mov
nop
xor
nop
ror
nop
nop
inc
rol
ror
nop
mov
rol
add
inc
rol
inc
sub
dec
rol
nop
nop
dec
dec
mov
inc
rol
nop
nop
xor
rol
xor
nop
rol
mov
xor
popa
pusha
mov
inc
sub
nop
add
mov
mov
dec
inc
mov
mov
nop
ror
ror
inc
inc
nop
dec
inc
dec
nop
mov
ror
add
xor
rol
mov
xor
rol
mov
mov
xor
ror
nop
add
xor
nop
mov
nop
ror
mov
sub
ror
mov
ror
sub
nop
xor
popa
push
mov
call
push
push
mov
push
call
pusha
mov
xor
inc
nop
xor
inc
add
xor
sub
nop
ror
nop
popa
pusha
xor
xor
mov
nop
mov
xor
xor
inc
xor
nop
inc
dec
ror
mov
xor
mov
inc
rol
inc
nop
ror
inc
nop
rol
mov
inc
nop
nop
add
dec
rol
dec
dec
add
mov
nop
xor
add
dec
nop
xor
dec
mov
xor
nop
inc
xor
popa
mov
call
mov
lea
call
mov
push
call
jmp
lea
push
mov
push
call
test
jne
mov
push
call
cmpb
je
mov
mov
call
jmp
mov
call
cmpb
jne
mov
cmpl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
ret
add
add
decl
add
add
sbb
das
repnz
loope
div
shr
in
stc
add
call
add
add
sbb
cmp
repz
icebp
cmc
out
out
clc
incl
add
decl
add
add
adc
psraw
out
in
jmp
out
add
incl
add
add
add
add
in
add
xor
mov
mov
xor
push
push
pushl
mov
movb
lea
mov
mov
call
mov
call
push
call
mov
cmpl
je
lea
mov
mov
call
mov
call
push
mov
push
call
mov
cmpl
je
call
mov
pusha
add
xor
nop
sub
sub
mov
xor
add
mov
sub
nop
rol
dec
ror
dec
mov
add
popa
pusha
mov
dec
inc
mov
mov
ror
add
nop
nop
add
mov
sub
add
mov
nop
mov
inc
nop
add
mov
mov
add
ror
mov
mov
dec
xor
add
add
inc
inc
rol
popa
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
add
decl
add
pop
sbb
in
mov
stos
loope
jmp
add
add
call
add
add
hlt
in
loope
cmc
in
cli
out
in
add
add
in
add
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
xor
xor
sub
nop
ror
add
xor
sub
nop
mov
dec
add
nop
ror
nop
xor
xor
xor
rol
inc
xor
mov
sub
sub
dec
xor
add
inc
add
mov
sub
mov
inc
nop
add
xor
sub
mov
rol
mov
popa
pusha
xor
dec
mov
sub
rol
ror
nop
rol
inc
nop
rol
mov
inc
mov
nop
dec
dec
xor
xor
mov
xor
rol
nop
nop
add
inc
inc
rol
xor
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
push
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
mov
push
mov
push
call
mov
mov
push
call
mov
cmpl
je
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
add
decl
adc
sbb
in
in
icebp
mul
loop
add
add
decl
add
add
adc
sbb
out
out
ljmp
decl
add
xor
pop
sbb
in
in
icebp
mul
loop
add
add
decl
add
xor
sbb
in
icebp
mul
loop
add
add
decl
add
cmp
sbb
shl
icebp
in
icebp
mul
loop
add
add
in
add
xor
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
push
push
call
mov
cmpl
je
movl
lea
push
mov
push
call
test
je
pusha
xor
dec
nop
xor
xor
ror
nop
mov
sub
inc
dec
sub
sub
add
popa
pusha
add
add
dec
sub
nop
mov
mov
xor
xor
add
inc
nop
nop
xor
mov
inc
mov
nop
mov
rol
add
mov
rol
add
xor
ror
nop
inc
xor
ror
inc
mov
nop
nop
nop
ror
mov
rol
ror
xor
popa
jmp
lea
lea
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
jne
mov
push
push
push
call
mov
cmpl
je
xor
push
push
pushl
mov
lea
mov
call
push
mov
call
push
push
mov
push
call
test
jbe
mov
call
mov
mov
call
pusha
add
sub
rol
dec
add
rol
ror
mov
mov
nop
nop
rol
ror
mov
ror
add
dec
mov
nop
rol
mov
dec
ror
inc
xor
xor
xor
nop
nop
sub
mov
ror
dec
xor
mov
popa
pusha
xor
xor
mov
mov
ror
mov
sub
ror
nop
sub
inc
mov
mov
mov
ror
nop
nop
mov
mov
popa
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
pusha
ror
xor
sub
ror
mov
xor
xor
dec
mov
mov
dec
ror
xor
sub
dec
rol
mov
xor
nop
sub
dec
inc
mov
sub
dec
ror
add
inc
nop
rol
mov
xor
mov
dec
dec
add
popa
pusha
rol
xor
nop
mov
rol
add
nop
nop
xor
xor
nop
mov
inc
rol
mov
inc
ror
mov
sub
mov
rol
nop
add
xor
rol
nop
inc
xor
ror
nop
nop
add
rol
add
mov
popa
mov
cmpl
jne
lea
push
mov
push
call
test
jne
pusha
xor
sub
nop
xor
mov
nop
add
nop
ror
inc
inc
mov
dec
nop
rol
mov
mov
rol
nop
nop
add
inc
xor
popa
pusha
sub
rol
sub
dec
xor
add
add
mov
ror
rol
mov
sub
ror
xor
rol
dec
mov
dec
ror
mov
inc
dec
add
nop
xor
popa
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
call
ret
jmp
jmp
mov
pop
ret
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
movb
movb
lea
push
lea
push
push
push
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
movl
lea
push
lea
push
lea
push
push
mov
call
push
mov
push
call
test
jne
lea
lea
call
mov
mov
call
jne
movb
mov
push
call
jmp
mov
call
push
mov
call
push
push
push
mov
call
push
mov
push
call
test
jne
movb
pusha
ror
nop
ror
mov
add
sub
nop
inc
xor
sub
ror
mov
mov
nop
inc
nop
ror
inc
dec
mov
mov
sub
nop
mov
nop
nop
rol
mov
xor
xor
xor
mov
rol
add
xor
add
dec
sub
dec
nop
sub
nop
inc
sub
add
dec
inc
sub
xor
popa
pusha
dec
mov
mov
ror
rol
ror
xor
rol
ror
xor
rol
mov
xor
sub
dec
nop
xor
add
xor
ror
dec
nop
sub
dec
nop
inc
dec
dec
sub
nop
nop
inc
mov
rol
add
inc
mov
sub
inc
sub
nop
inc
nop
xor
ror
mov
xor
popa
mov
push
call
cmpb
jne
lea
push
lea
push
push
push
push
push
push
lea
mov
mov
call
mov
call
push
push
call
test
jne
movl
pusha
xor
inc
add
xor
inc
xor
dec
add
sub
nop
xor
nop
ror
mov
xor
nop
sub
mov
rol
add
mov
inc
mov
mov
nop
nop
mov
dec
xor
nop
sub
nop
add
mov
rol
nop
dec
mov
nop
xor
add
xor
sub
dec
nop
popa
pusha
sub
mov
mov
sub
add
dec
ror
nop
mov
add
dec
rol
ror
xor
ror
dec
rol
nop
nop
inc
dec
nop
sub
mov
inc
inc
nop
xor
mov
ror
ror
inc
mov
mov
rol
mov
mov
dec
xor
sub
ror
mov
inc
rol
inc
mov
dec
popa
lea
push
lea
push
lea
push
push
mov
call
push
mov
push
call
test
jne
lea
lea
call
mov
mov
call
jne
movb
mov
push
call
jmp
mov
call
push
mov
call
push
push
push
mov
call
push
mov
push
call
mov
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
mov
pop
ret
add
add
decl
add
add
sbb
cmp
in
mul
into
jecxz
int
lret
add
decl
add
add
sbb
sub
cmc
aam
call
enter
call
add
add
xor
sub
rcl
fcom
hlt
call
lods
lret
in
loope
push
mov
add
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
sub
ror
nop
add
mov
mov
nop
rol
inc
inc
nop
mov
sub
mov
mov
add
sub
ror
mov
mov
dec
mov
add
nop
mov
sub
dec
xor
xor
add
dec
dec
inc
xor
add
dec
sub
add
nop
mov
mov
mov
sub
popa
pusha
xor
mov
mov
inc
inc
xor
mov
mov
mov
add
xor
xor
nop
xor
rol
mov
xor
inc
xor
add
add
ror
mov
xor
rol
add
nop
xor
nop
mov
nop
xor
rol
mov
add
nop
inc
inc
dec
ror
dec
dec
nop
sub
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
sub
je
sub
jne
mov
and
cmp
jne
push
push
mov
push
call
push
push
push
mov
push
call
jmp
push
call
mov
push
mov
push
mov
push
mov
push
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
mov
pop
ret
decl
add
add
sbb
sub
out
out
repz
cld
enter
decl
add
sub
or
lock
jecxz
add
add
decl
add
add
or
test
out
out
add
decl
add
add
sbb
sub
out
out
repz
call
push
mov
add
mov
mov
mov
call
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
call
mov
mov
pop
ret
lea
push
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
ror
dec
xor
add
nop
mov
add
rol
ror
inc
add
nop
add
mov
mov
dec
mov
inc
rol
xor
ror
mov
sub
nop
xor
nop
dec
ror
add
inc
inc
mov
inc
rol
xor
ror
mov
sub
nop
mov
mov
dec
ror
mov
mov
inc
popa
pusha
ror
ror
mov
inc
dec
ror
sub
add
dec
mov
nop
xor
dec
add
dec
add
nop
dec
xor
ror
nop
mov
inc
mov
add
dec
popa
pusha
nop
nop
xor
add
add
ror
dec
rol
mov
nop
mov
mov
mov
mov
nop
sub
sub
inc
xor
mov
mov
inc
dec
nop
nop
sub
mov
popa
pusha
dec
nop
xor
mov
sub
add
inc
ror
nop
nop
nop
xor
mov
xor
rol
ror
xor
sub
dec
sub
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
push
call
sub
mov
fildl
fdivs
call
mov
push
call
sub
mov
fildl
fdivs
call
mov
xor
mov
movl
xor
mov
xor
mov
mov
mov
push
push
call
mov
movl
xor
mov
mov
mov
push
call
mov
push
mov
push
push
push
push
push
mov
push
push
mov
mov
mov
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
mov
push
call
push
push
push
push
push
push
push
mov
push
push
mov
push
push
mov
mov
mov
call
push
call
jmp
push
call
push
call
push
push
push
push
call
test
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
ret
add
call
add
add
sbb
sub
repnz
jmp
loopne
clc
add
add
decl
add
add
sbb
push
repz
out
jmp
add
decl
add
das
sbb
sbb
in
lock
jecxz
add
add
decl
add
add
sbb
xor
repnz
loop
loopne
add
call
add
add
nopl
repz
jecxz
loope
jecxz
sti
call
add
call
add
add
adc
psraw
loope
leave
loopne
hlt
jmp
add
add
decl
add
add
adc
sbb
hlt
lock
movl
push
inc
xor
push
insb
gs
jae
and
je
jb
je
and
jb
arpl
popa
jae
ja
jb
and
outsl
jo
outsb
and
and
insb
add
add
add
inc
inc
dec
push
add
add
dec
dec
add
inc
push
push
push
dec
dec
add
push
mov
add
mov
mov
call
xor
push
push
pushl
mov
movl
movl
pusha
ror
xor
xor
add
ror
xor
sub
ror
xor
rol
add
mov
dec
ror
xor
xor
xor
dec
ror
add
mov
sub
mov
xor
ror
mov
mov
ror
dec
add
dec
xor
nop
sub
inc
xor
nop
nop
sub
nop
add
inc
popa
pusha
rol
add
nop
sub
dec
nop
rol
dec
ror
xor
nop
nop
add
nop
dec
mov
add
xor
rol
nop
xor
rol
add
mov
add
add
inc
xor
add
inc
xor
mov
mov
ror
xor
xor
popa
call
cmpl
je
mov
mov
call
je
mov
call
test
jle
mov
movl
mov
mov
mov
and
xor
add
adc
incl
decl
jne
jmp
push
push
mov
mov
call
mov
mov
cmpl
jne
cmpl
jb
jmp
jl
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
mov
mov
pop
ret
add
incl
add
add
add
add
in
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
pop
add
add
pop
add
add
add
cwtl
sbb
add
je
add
inc
pop
add
fcompl
add
lods
pop
add
loopne
add
mov
add
mov
add
andb
adc
add
add
mov
mov
push
push
dec
jne
mov
call
xor
push
push
pushl
mov
call
test
je
push
call
call
test
je
push
call
call
test
je
push
call
lea
call
cmpl
jne
push
call
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
lea
mov
mov
call
mov
call
push
mov
push
call
mov
pusha
add
add
ror
dec
add
xor
dec
xor
inc
nop
nop
mov
add
popa
pusha
add
xor
mov
xor
xor
xor
dec
add
mov
xor
nop
sub
add
xor
rol
mov
xor
xor
mov
add
rol
popa
lea
mov
mov
call
mov
call
push
mov
push
call
mov
mov
mov
call
mov
pusha
nop
add
rol
add
nop
mov
dec
mov
xor
nop
popa
pusha
nop
inc
xor
xor
mov
add
mov
xor
inc
rol
rol
dec
ror
ror
inc
nop
nop
xor
xor
ror
inc
inc
mov
ror
mov
nop
inc
dec
mov
nop
inc
xor
ror
xor
nop
ror
xor
rol
nop
mov
popa
cmpl
jne
push
call
mov
mov
mov
call
lea
mov
mov
call
cmpl
je
pusha
nop
ror
add
dec
add
ror
inc
nop
rol
xor
ror
mov
nop
mov
mov
inc
ror
sub
add
nop
add
sub
mov
popa
pusha
mov
mov
inc
mov
nop
rol
inc
xor
nop
ror
xor
add
dec
inc
mov
xor
add
dec
xor
mov
rol
add
mov
dec
mov
nop
inc
mov
ror
nop
rol
dec
rol
nop
nop
nop
xor
nop
mov
mov
inc
dec
xor
popa
call
lea
mov
mov
call
mov
push
lea
mov
mov
call
mov
lea
mov
call
mov
pop
call
je
push
push
lea
mov
mov
call
mov
call
push
push
call
push
call
movb
pusha
nop
nop
nop
mov
dec
inc
rol
mov
mov
xor
mov
add
ror
mov
sub
ror
mov
xor
xor
nop
mov
mov
rol
nop
rol
nop
mov
add
popa
pusha
nop
add
inc
mov
dec
nop
rol
ror
sub
mov
rol
mov
inc
xor
rol
add
add
dec
rol
xor
ror
nop
sub
dec
inc
nop
mov
mov
inc
nop
mov
sub
nop
sub
inc
mov
popa
cmpb
je
cmpb
je
cmpb
jne
lea
mov
mov
call
mov
call
test
je
movb
jmp
movb
cmpb
jne
call
cmp
je
call
cmp
je
call
cmp
jne
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
pusha
dec
sub
ror
mov
mov
xor
nop
add
dec
nop
sub
add
dec
dec
add
rol
mov
inc
nop
nop
sub
dec
ror
dec
nop
xor
nop
xor
mov
dec
mov
dec
ror
xor
popa
pusha
inc
ror
ror
dec
mov
dec
nop
nop
add
ror
xor
xor
ror
nop
nop
dec
inc
mov
xor
nop
mov
mov
rol
mov
xor
rol
mov
rol
add
mov
popa
cmpb
jne
call
test
jne
call
test
jne
call
test
jne
cmpb
jne
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
jmp
cmpb
je
mov
add
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
lea
mov
call
mov
call
push
push
call
call
cmp
jne
cmpb
jne
push
call
call
cmp
jne
cmpb
jne
push
call
call
cmp
jne
cmpb
jne
push
call
cmpl
jne
cmpl
je
cmpb
jne
cmpb
je
imul
push
call
jmp
imul
push
call
movb
cmpb
je
push
call
mov
xor
mov
call
movw
pusha
add
ror
nop
xor
dec
mov
add
dec
inc
rol
mov
rol
ror
mov
sub
mov
inc
inc
rol
xor
nop
add
nop
xor
xor
ror
dec
dec
mov
add
xor
dec
nop
nop
inc
mov
ror
dec
mov
mov
rol
xor
xor
mov
dec
xor
rol
mov
rol
popa
pusha
nop
nop
add
add
nop
add
xor
xor
mov
add
xor
xor
ror
dec
nop
rol
dec
rol
add
xor
ror
nop
add
rol
add
inc
nop
add
nop
mov
nop
nop
rol
xor
ror
mov
mov
dec
ror
xor
sub
mov
rol
popa
movw
movw
push
call
test
je
movb
push
call
mov
call
call
test
jle
mov
movl
pushl
push
lea
mov
call
pushl
mov
mov
call
incl
decl
jne
call
test
jne
lea
mov
mov
call
cmpl
je
mov
mov
call
lea
mov
mov
call
mov
lea
mov
call
mov
mov
call
mov
call
cmpb
je
lea
mov
mov
call
cmpl
je
lea
mov
mov
call
mov
lea
mov
call
mov
lea
call
cmpl
je
lea
mov
mov
call
mov
lea
mov
call
mov
lea
call
mov
mov
call
jmp
lea
call
cmpl
je
lea
call
mov
mov
call
cmpl
jne
mov
xor
call
jmp
mov
xor
call
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
lea
mov
mov
call
cmpl
jne
cmpb
je
lea
mov
mov
call
mov
lea
call
mov
mov
call
jmp
lea
mov
mov
call
mov
mov
call
jmp
cmpb
je
lea
mov
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
call
mov
lea
call
mov
mov
call
jmp
lea
mov
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
call
mov
mov
call
cmpb
je
mov
push
mov
call
mov
mov
call
test
jne
mov
push
lea
xor
call
mov
push
mov
call
mov
pop
call
jmp
mov
push
mov
call
mov
mov
call
test
jne
mov
push
lea
xor
call
mov
push
mov
call
mov
pop
call
cmpb
jne
cmpb
jne
push
call
cmpb
jne
cmpb
jne
push
call
push
push
lea
mov
mov
call
pushl
lea
xor
call
pushl
push
lea
mov
call
mov
call
push
lea
mov
mov
call
mov
call
push
push
push
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
call
add
add
decl
adc
cli
out
lock
add
add
decl
sbb
sub
repnz
jmp
add
add
decl
sbb
sub
repnz
jmp
add
add
decl
add
add
sbb
shr
movl
add
add
inc
jb
outsl
jb
add
aas
add
add
adc
mul
mul
loop
clc
call
cld
jmp
out
loopne
cld
clc
hlt
imul
call
mov
aam
leave
rcr
mov
les
xchg
add
incl
add
add
add
add
pop
add
jmp
add
push
push
pop
sbb
repz
out
cli
test
out
mov
mov
lock
in
mov
icebp
mov
add
incl
add
add
add
add
incl
add
add
adc
push
in
out
dec
push
inc
dec
