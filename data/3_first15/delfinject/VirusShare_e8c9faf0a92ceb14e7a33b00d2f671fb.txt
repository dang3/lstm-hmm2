push
mov
mov
push
test
je
mov
test
je
jmp
pushl
pushl
pushl
call
add
mov
test
jne
jmp
mov
movb
mov
mov
mov
mov
mov
pop
pop
ret
pusha
cld
movzbl
test
jne
mov
sub
mov
mov
add
mov
call
mov
movb
cmpl
jne
popa
jmp
popa
pushl
push
call
push
call
ret
pushl
push
call
push
call
ret
mov
push
mov
push
test
mov
je
mov
mov
mov
inc
inc
dec
jne
mov
pop
pop
ret
mov
test
je
mov
push
mov
mov
mov
push
mov
mov
shl
mov
shr
rep
mov
and
rep
pop
pop
mov
ret
push
mov
sub
lea
push
call
test
pop
jne
lea
push
call
pop
leave
ret
push
mov
sub
mov
mov
push
push
pushl
add
push
lea
call
lea
mov
push
push
pushl
lea
call
test
je
cmp
jne
lea
lea
push
lea
push
push
call
test
je
cmpl
jne
mov
xor
mov
lea
push
lea
pushl
mov
mov
mov
call
cmp
jbe
mov
lea
lea
lea
push
push
push
call
test
je
cmpl
jne
mov
test
je
mov
lea
add
push
push
lea
push
call
test
je
mov
cmp
jne
inc
cmp
jb
lea
call
xor
jmp
lea
call
push
pop
lea
call
mov
pop
pop
leave
ret
push
mov
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
pop
pop
ret
push
mov
push
mov
push
mov
push
push
mov
andl
andl
mov
mov
test
jne
xor
jmp
mov
sub
mov
sub
jne
mov
call
test
jne
jmp
mov
cmp
jb
mov
mov
push
add
mov
push
mov
add
push
call
add
add
sub
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
andb
push
mov
mov
lea
mov
add
mov
lea
push
mov
pushl
call
mov
test
jne
and
jmp
mov
sub
mov
mov
lea
push
push
push
mov
add
push
push
call
add
test
je
xor
jmp
andb
lea
push
mov
pushl
call
andl
add
mov
pop
pop
pop
leave
ret
push
mov
push
call
test
pop
jne
push
call
test
pop
jne
push
call
test
pop
jne
mov
test
je
mov
push
mov
add
push
mov
mov
add
push
call
add
xor
pop
ret
push
mov
push
push
mov
push
push
mov
test
je
mov
mov
mov
sub
mov
je
mov
add
push
add
jmp
mov
test
mov
je
mov
andl
sub
shr
test
jle
mov
mov
mov
and
cmp
jne
and
add
mov
add
add
mov
incl
cmp
jl
add
cmp
jb
pop
pop
xor
pop
leave
ret
push
mov
mov
push
push
push
mov
test
je
mov
lea
jmp
add
push
call
test
mov
je
mov
mov
mov
add
test
mov
je
lea
cmpl
je
mov
mov
sub
mov
test
jns
and
jmp
lea
push
pushl
call
test
je
mov
mov
add
mov
cmpl
jne
add
mov
test
jne
xor
pop
pop
pop
pop
ret
push
pop
jmp
push
mov
mov
mov
test
je
mov
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
push
pushl
call
mov
pushl
push
push
call
add
pop
cmpb
je
pushl
pushl
pushl
call
xor
pop
ret
push
mov
pushl
call
xor
pop
mov
mov
mov
pop
ret
mov
test
jne
xor
jmp
mov
sub
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
cmp
jae
add
push
push
call
pop
pop
ret
mov
test
jne
xor
jmp
mov
sub
sar
push
mov
cmp
push
jae
test
jne
xor
jmp
mov
sub
sar
pushl
sub
push
pushl
call
jmp
test
je
mov
mov
sub
sar
cmp
jae
lea
push
push
call
pop
pop
ret
push
mov
push
push
mov
push
mov
push
mov
mov
sub
cmp
jae
mov
test
je
mov
sub
cmp
jb
mov
test
jne
xor
jmp
sub
lea
test
mov
jge
xor
push
call
pop
mov
mov
mov
jmp
test
je
mov
mov
inc
inc
cmp
jne
test
mov
jbe
mov
test
je
mov
mov
mov
inc
dec
jne
mov
lea
cmp
je
mov
sub
sub
add
test
je
mov
mov
inc
inc
cmp
jne
pushl
call
mov
mov
pop
add
mov
mov
test
jne
xor
jmp
mov
sub
add
mov
add
mov
jmp
mov
mov
sub
cmp
jae
cmp
lea
je
mov
sub
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
mov
sub
add
je
mov
test
je
mov
mov
inc
decl
jne
mov
jmp
mov
mov
inc
cmp
jne
jmp
test
jbe
mov
mov
sub
jmp
test
je
mov
mov
mov
inc
inc
cmp
jne
mov
mov
sub
cmp
je
dec
dec
cmp
mov
mov
jne
lea
jmp
mov
mov
mov
inc
cmp
jne
add
pop
pop
pop
leave
ret
mov
push
mov
push
mov
jmp
mov
mov
inc
inc
cmp
jne
mov
mov
pop
pop
ret
push
mov
push
push
push
push
mov
push
mov
mov
mov
sub
sar
cmp
jae
mov
test
je
mov
sub
sar
cmp
jb
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
shl
push
call
mov
mov
pop
mov
jmp
test
je
mov
mov
mov
mov
add
add
cmp
jne
test
mov
jbe
mov
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
mov
shl
cmp
mov
lea
je
mov
sub
sub
add
test
je
mov
mov
mov
mov
add
add
cmp
jne
pushl
call
mov
mov
pop
mov
test
lea
mov
jne
xor
jmp
mov
sub
sar
add
mov
lea
mov
jmp
mov
mov
sub
sar
cmp
jae
mov
shl
cmp
mov
lea
je
mov
sub
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
sub
sar
sub
mov
je
mov
test
je
mov
mov
mov
mov
add
decl
jne
mov
jmp
mov
mov
mov
mov
add
cmp
jne
add
jmp
test
jbe
shl
mov
mov
mov
sub
jmp
test
je
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
sub
cmp
je
sub
sub
cmp
mov
mov
mov
mov
jne
lea
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
add
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
je
push
mov
add
mov
mov
mov
add
cmp
jne
pop
mov
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
xor
xor
movl
mov
mov
test
je
add
jmp
movzbl
inc
lea
test
je
mov
mov
inc
inc
jmp
xor
mov
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
cmp
jne
mov
jmp
movzbl
add
shl
add
inc
cmp
je
inc
mov
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
lea
test
jne
inc
test
je
add
jmp
movzbl
inc
lea
mov
shr
and
test
lea
je
add
jmp
movzbl
inc
lea
test
je
inc
inc
mov
mov
cmp
sbb
neg
add
mov
mov
sub
mov
add
mov
mov
inc
inc
mov
mov
inc
inc
decl
jne
jmp
mov
pop
mov
mov
sub
cmp
pop
pop
sbb
and
add
neg
sbb
and
leave
ret
add
in
add
push
inc
add
push
incb
add
add
add
loopne
add
loopne
add
inc
add
add
inc
inc
add
dec
add
movsb
dec
add
inc
dec
add
pop
dec
add
fs
add
jbe
add
orb
xchg
dec
add
add
add
pop
dec
add
fs
add
jbe
add
orb
xchg
dec
add
add
add
cltd
add
popa
jo
insb
insb
outsl
arpl
inc
add
je
jb
arpl
jae
gs
jo
add
jo
jb
add
add
je
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
add
add
xor
aaa
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
addr16
xor
xor
xor
xor
xor
xor
and
pop
xor
adc
sbb
cmp
cmp
cmp
add
cmp
add
nop
add
rolb
inc
pop
decl
add
push
adc
pop
jb
sbb
mov
in
lock
fcomps
add
push
fisttps
add
jne
jl
aas
add
inc
add
std
add
jns
gs
adc
sbb
decl
push
push
je
imul
dec
mov
add
or
xchg
das
inc
jmp
fwait
inc
in
jne
cs
cmp
pop
push
dec
bound
arpl
je
and
mov
nop
sub
sub
and
dec
inc
nop
and
sbb
sbb
adc
adc
or
or
add
add
rcrl
xor
push
inc
ret
shll
and
pop
ret
sbb
loopne
daa
fs
ret
jb
shll
push
add
mov
push
call
testb
je
decb
mov
and
mov
ficomps
inc
pop
ret
sti
sub
xor
rol
pop
nop
int3
fs
rolb
insb
mov
loopne
mov
jne
in
push
push
call
enter
add
mov
add
mov
mov
add
lea
add
push
mov
mov
inc
incl
mov
mov
adc
mov
inc
filds
push
mov
repnz
call
rorb
push
mov
push
or
or
adc
fildl
add
mov
sbb
push
or
push
adc
mov
push
push
call
icebp
mov
mov
fisttpl
and
sub
cmp
push
or
push
or
ret
adc
fucomip
mov
inc
imul
inc
or
inc
add
fistl
pcmpeqw
push
std
mov
cmp
jne
jo
mov
call
mov
add
xor
mov
pop
insl
clc
mov
xor
cmp
jb
mov
add
mov
addr16
mov
adc
mov
mov
xlat
sbb
ret
cmp
dec
popa
cmp
jmp
fildll
jp
add
sub
jmp
mov
insl
mov
ljmp
stc
mov
sub
ret
pop
fst
cmp
mov
test
jmp
mov
jmp
std
sbb
sti
jne
mov
pop
xchg
ja
xchg
jle
fimull
lea
mov
add
cmpsb
out
mov
dec
add
add
mov
push
sbb
clc
mov
incl
sarl
mov
arpl
jecxz
add
push
call
add
fnstenv
add
imulb
dec
aaa
push
movsl
push
dec
jne
enter
xor
cmpl
jbe
cmc
std
and
and
outsl
in
mov
sbb
ss
sbb
pop
rorb
icebp
pop
out
add
mov
adc
mov
or
out
clc
ja
mov
add
cmp
mov
lods
xor
mov
or
jbe
xor
pusha
je
push
call
or
faddl
xor
filds
cmpsl
mov
adc
je
push
mov
subb
rorl
pop
xchg
loope
in
scas
stos
mov
push
hlt
shll
and
add
add
loop
push
mov
ja
or
lds
in
mov
pop
sbb
sti
outsl
nop
jbe
mov
fnstsw
jnp
insl
mov
jo
push
loopne
outsl
jl
sti
push
push
fsubr
shrb
push
pop
mov
bound
fidivrs
and
jmp
sbbb
sub
fcomi
sub
lods
inc
test
cmp
sbb
in
jae
mov
mov
addb
sti
or
add
cmpb
into
movsl
aam
xchg
aaa
inc
clc
mov
aas
xchg
push
mov
jmp
cmp
sti
jg
sub
cmpsb
xlat
pop
call
hlt
je
mov
dec
inc
xchg
ds
jmp
fwait
or
jne
leave
stos
test
idiv
jge,pn
mov
and
cmp
insl
sub
mov
pop
push
pop
test
add
pop
push
cli
push
ds
add
add
push
lea
push
fbstp
add
ja
jle
xor
test
sub
stos
cmp
fstpt
data16
fnsave
sbb
enter
jecxz
divl
adc
call
xchg
and
dec
xor
enter
test
decb
leave
xor
mov
cmc
sub
xlat
mov
imul
pop
inc
or
or
push
jae
lcallw
inc
sbb
fsubs
mov
in
les
and
xor
out
cmp
fidivs
mov
fildl
popf
pop
lret
inc
mov
push
mov
test
je
xchg
mov
sbb
inc
dec
movsb
jmp
or
cmp
fnstcw
ficoms
pop
jmp
subb
icebp
push
push
pushl
fs
and
daa
lret
cmp
sub
inc
mov
insl
or
mov
out
lahf
andb
xor
fsubrl
lret
in
fdivr
or
mov
cmp
mov
cli
or
xor
cmp
out
mov
add
ja
adc
jne
add
in
pop
pop
pop
mov
adc
xchg
xchg
scas
pop
je
jmp
in
jge
pop
test
and
test
out
ror
sub
xchg
addr16
mov
xor
xor
repz
push
and
mov
popa
out
cmp
clc
xchg
clc
out
jne
adc
pop
xor
ds
notl
cmp
fldenv
add
sub
or
in
fistpl
loope
cmp
cmp
jg
dec
or
mov
mov
aaa
add
stc
add
inc
dec
mov
jmp
lret
push
imul
fistl
add
pop
ret
or
ret
jmp
mov
fsubrp
shll
cmp
adc
cmp
test
mov
lret
add
sbb
add
movl
mov
shr
int
dec
outsb
adc
aaa
xchg
lret
leave
add
or
faddl
out
sub
push
mov
stos
mov
mov
push
out
ss
or
push
or
xchg
sub
subl
cwtl
dec
leave
or
ret
incb
pop
xor
sbb
cmp
add
repnz
sub
test
pop
add
aad
and
cmpsb
jb
and
cmp
or
mov
push
add
nop
sub
xor
add
and
add
outsb
adc
sti
scas
arpl
or
andl
add
subl
add
add
mov
pop
lods
dec
pop
out
xchg
sar
jg
aam
sub
cmp
sarl
fstl
add
outsb
xchg
jae
adc
aaa
xlat
incb
mov
mov
insb
adc
test
fidivrl
aad
shll
mov
sub
jle
or
xor
lcall
outsl
xchg
add
or
adc
jp
movb
cmp
mov
mov
lcall
rcll
mov
pop
pop
mov
sahf
sbb
cmp
adc
cmp
int
or
adc
pop
mov
mov
sub
ss
adc
inc
data16
or
lcall
jle
or
rclb
pop
push
cmp
push
daa
cltd
out
push
push
js
xor
orb
lock
call
dec
mov
cmc
add
test
or
loope
cmp
xor
clc
sub
add
scas
or
dec
popa
push
ja
lock
push
rcl
xchg
adc
jo
jmp
outsl
mov
mov
jle
adc
addr16
mov
lock
xor
push
movsb
adc
mov
aad
cs
lea
imul
pop
xchg
cltd
sub
clc
add
or
and
jno
jo
or
jne
ljmp
cmp
push
outsb
or
arpl
jle
push
or
rclb
lods
inc
adc
pop
je
icebp
pop
jmp
adcb
pushl
aam
jne
or
addr16
pop
cs
jne
and
ret
mov
push
jp
inc
add
daa
nop
lock
and
out
add
sbb
jmp
hlt
inc
add
push
push
mov
roll
xchg
call
mov
sub
cmpsb
pop
mov
sbb
or
shr
push
xchg
int
or
push
call
je
out
or
or
mov
xor
sbb
sahf
and
add
and
and
mov
inc
gs
sti
fincstp
add
inc
aas
adc
xchg
inc
in
and
je
gs
xor
lock
inc
mov
test
rorb
addl
lret
and
rorl
mov
mov
push
dec
in
aaa
orb
mov
sbb
adc
cmp
sub
sub
or
xor
cltd
sbb
sbb
jmp
aad
mov
jg
inc
xchg
xlat
rcll
pop
int
mov
mov
mov
or
fsubrs
pop
lock
rorb
jl
fists
testl
mov
push
jmp
jb
adc
xchg
jb
fdivrp
mov
test
popf
mov
inc
mov
inc
mov
add
push
mov
push
mov
and
loopne
fdivs
add
cmp
cmp
pop
lcall
mov
sub
mov
jbe
loope
mov
inc
jne
sub
lods
sbb
add
bound
and
jmp
test
les
and
or
aaa
orl
jmp
add
aam
or
push
mov
or
call
rcll
sbb
xchg
and
add
mov
pop
cmpsl
mov
in
test
xlat
lock
mov
mov
clc
mov
mov
andl
into
inc
out
cmp
cmp
cwtl
or
jno
pop
sbb
or
or
push
enter
notl
sbb
fdiv
add
mov
dec
call
adc
test
movb
clc
mov
mov
ds
xchg
in
cli
jmp
test
mov
jbe
orl
inc
fnstsw
adc
in
fsubs
or
nop
sbb
sbb
pop
adc
add
add
pop
daa
add
lock
clc
inc
mov
data16
mov
or
add
add
cmp
les
or
jno
push
call
cs
jl
push
xor
shl
inc
outsb
dec
or
xor
loope
fcoms
cs
in
ret
fdivs
imul
jbe
orb
test
jg
repnz
jo
insl
repz
pop
sbb
and
mov
std
and
jmp
ljmp
xchg
arpl
mov
inc
sub
adc
inc
clc
lret
xchg
call
shl
pop
arpl
and
repnz
daa
push
add
jle
call
jge
or
pop
add
fcmovnbe
pop
xor
cmp
mov
les
xor
mov
daa
fwait
cmp
or
sbb
jmp
negl
inc
mov
jne
push
adc
rcrb
jb
xchg
lahf
add
adc
or
popl
or
mov
or
cwtl
add
mov
cmp
xchg
sti
mov
mov
fsubrl
inc
stos
and
jg
aam
test
push
call
mov
in
pop
jne
mov
jo
fcomps
adc
add
hlt
sub
pop
mov
sbb
out
mov
call
imul
xchg
aad
nop
and
ret
mov
cmp
add
call
fildl
ss
es
mov
das
or
divl
adc
nop
js
rep
decb
rep
adc
xor
lea
cld
sbb
mov
sbb
mov
loopne
fildll
push
std
cmp
ja
sub
mov
fbstp
ljmp
sub
sbb
push
push
mov
push
ljmp
dec
cmp
sub
pop
outsl
dec
push
outsb
lds
cs
fsubr
test
mov
cmp
add
or
in
adc
shll
repz
xchg
outsb
neg
pop
inc
insl
cmp
add
sub
mov
or
fnsave
inc
push
sbb
lret
test
or
and
je
xlat
iret
cmpsl
dec
or
loop
movsl
add
call
push
idivl
mov
cmp
and
lret
mov
inc
inc
lods
xchg
mov
movl
out
sub
xchg
rorl
sbb
cmp
jne
dec
xlat
xchg
ficoml
scas
icebp
or
cmp
or
loop
push
pop
mov
or
outsl
mov
cmp
jne
fildll
adc
dec
add
or
xchg
add
sub
je
pop
cmp
adc
std
jne
shr
adc
jmp
or
outsl
pop
stos
mov
pop
shl
data16
add
or
mov
or
lods
stos
pop
out
xor
imul
mov
or
mul
int3
mov
push
pop
lahf
adc
test
out
cld
cltd
xor
sub
mov
xor
div
outsl
cltd
xor
adc
add
sub
inc
mov
notl
stc
lock
mov
jle
test
outsl
insb
mov
decl
testb
mov
xchg
mov
xor
fstpt
mov
inc
or
je
mov
sti
sub
sub
and
js
pop
pop
pop
je
pop
xor
cmpsb
daa
sub
xchg
dec
je
push
cltd
mov
jmp
adc
pushl
cmp
ja
lea
addb
add
sub
int
push
imul
pop
neg
jle
js
pop
sub
jmp
inc
inc
and
jmp
in
cvtpi2ps
je
inc
sbb
sahf
dec
jbe
flds
adc
ja
add
je
leave
sub
aad
push
jae
std
pop
xor
mov
dec
jecxz
daa
xor
sbb
iret
in
std
jl
je
mov
sbbl
pop
lea
fldt
fisubrs
call
adc
pop
mov
je
xlat
outsl
adc
sub
jmp
jge
cmp
inc
and
stc
nop
sbb
stc
jmp
fcomp
stos
jns
add
out
fcmovnb
add
cmp
aas
and
mov
add
cmp
pushf
or
push
enter
and
adc
push
repnz
out
sbb
outsb
mov
inc
mov
inc
mov
aam
call
test
xchg
sub
mov
jmp
xor
add
leave
out
mov
lds
mov
inc
jbe
imul
fidivrs
call
mov
fbld
shrl
mov
xlat
fcmovnu
inc
or
js
xchg
mov
or
repnz
push
in
int3
into
sbb
sar
dec
inc
mov
push
lcall
push
inc
enter
mov
inc
cmp
jmp
hlt
daa
lret
into
pop
inc
incl
aas
cmp
mov
mov
addr16
int
repnz
bound
and
addl
inc
lcall
lods
lds
cmpsb
iret
decl
mov
pop
inc
sub
push
stos
mov
cmp
jmp
xchg
ljmp
jg
mov
inc
imul
decl
inc
xor
cmp
call
test
jmp
stos
push
inc
mov
das
push
sbb
sarb
int3
repnz
test
andl
fildl
jmp
movsb
lahf
nop
inc
pop
stos
clc
ljmp
cli
inc
pop
lcall
repnz
repz
loope
jp
xchg
iret
inc
bound
fdivrs
mov
push
jmp
mov
jne
xchg
leave
dec
decl
cmpsl
xchg
cmp
xor
push
in
cmp
mov
mov
movsl
mov
popa
mov
or
and
repz
mov
subb
xchg
and
and
aad
bound
xor
pop
xor
push
mov
fwait
push
cmp
pop
jne
push
xchg
loop
or
or
in
mov
movsl
nop
add
add
jns
mov
outsb
inc
push
and
mov
jns
pop
sub
and
outsb
das
hlt
push
fildl
clc
xor
mov
inc
call
pop
push
ss
dec
cmpsb
ss
loopne
pop
inc
aaa
out
mov
clc
fs
aas
or
mov
mov
dec
inc
call
push
inc
pop
inc
outsl
pushl
popa
outsb
fs
inc
ljmp
imul
push
push
dec
popa
jae
clc
push
popa
insb
jne
jmp
mov
mov
aad
daa
pop
cvtps2pi
jo
xor
mov
inc
and
fldl
add
or
not
je
pop
dec
mov
sbb
cmpsb
adc
mov
ss
aaa
test
les
push
call
add
ret
bound
aad
jne
jp
or
jbe
pop
mov
push
inc
push
cld
ss
mov
fists
add
push
mov
sbb
mov
push
push
mov
movsl
adc
sbb
aam
sbb
fcmovnb
or
mov
and
outsl
nopl
jbe
jne
mov
add
sub
jbe
mov
pop
sub
mov
push
inc
push
inc
or
add
inc
stos
push
test
stos
lock
ficomps
push
xchg
jmp
in
inc
jle
sbb
jnp
repnz
dec
jno
jge
neg
push
pop
pop
sub
sti
mov
pop
jae
sub
or
ss
test
jnp
add
push
pop
fidivs
data16
mov
sbb
rol
outsb
ss
lea
loope
insl
sbb
test
pop
pop
push
pop
xor
xor
inc
outsb
daa
adc
mov
or
inc
add
add
xor
or
mov
mov
or
pop
push
outsl
aas
mov
push
or
or
imulb
mov
call
or
outsl
or
in
adc
mov
pop
adc
inc
mov
and
adc
mov
hlt
in
push
sub
adc
insb
ret
sbb
pop
mov
xor
add
or
sub
loopne
sbb
push
pop
pop
push
push
inc
pop
dec
fisubrs
inc
add
sbb
jmp
jg
mov
add
ror
xor
sbb
xor
pop
cmp
and
fsts
push
pop
leave
loop
pop
fidivl
sbb
jecxz
mov
repnz
test
aaa
dec
cmpl
stos
sbb
outsb
cld
call
adc
and
mov
out
push
pop
test
dec
jg
cmp
cli
out
push
shll
shll
outsl
ret
and
loope
sub
pop
ja
mov
roll
test
pop
fdivrs
stos
xchg
insb
push
clc
addr16
or
fstl
stos
push
cmp
cmp
add
aaa
out
je
jo
sub
add
adc
loope
push
sbb
xchg
outsl
ficoml
mov
xor
fcompl
in
pop
dec
sub
call
gs
mov
outsl
lahf
pop
add
out
inc
add
sub
xchg
xchg
orw
sub
mov
mov
cmp
pop
inc
or
mov
push
aaa
pusha
add
adc
mov
cmc
inc
add
xor
lock
fstpt
rcrl
fiaddl
test
fsubs
pop
pop
pop
notl
push
mov
mov
insb
mov
and
xor
pop
mov
mov
or
lock
lcall
fwait
add
lock
mov
adc
pop
in
arpl
jae
dec
sub
dec
fs
xor
fidivrs
inc
jmp
pop
mov
jnp
lret
fwait
sbb
outsb
leave
ret
ret
jo
adc
cmp
jg
je
cmp
je
push
sub
xchg
adc
jmp
add
sub
jb
ss
jmp
cmp
sbb
xchg
sub
and
outsl
add
cmp
sub
daa
cmp
sub
enter
or
pushl
iret
jmp
ja
sbb
mov
sub
push
std
mov
jmp
mov
sbb
mov
lret
mov
dec
std
push
or
adc
mov
pop
sub
add
mov
add
xor
cmovno
fmull
sub
lret
leave
ljmp
mov
push
adc
fwait
sbbl
cli
xor
adc
addr16
out
push
jo
push
jge
dec
sbb
mov
fs
or
fstps
sbb
xchg
inc
jno
xor
sub
test
push
subb
mov
std
or
popf
pop
mov
sbb
loope
enter
add
or
mov
stos
or
push
ja
cmc
aad
add
aaa
imul
cs
dec
shll
jbe
shlb
add
sti
jle
dec
mov
mov
loop
shrb
jg
and
aas
jmp
jmp
mov
call
add
xor
pop
in
mov
mov
and
enter
cmp
jle
sbb
nop
inc
mov
pop
adc
jg
pop
push
movsl
ds
push
stc
pop
daa
in
pushf
movl
jno
test
mov
decb
adc
push
mov
movb
popa
je
leave
idivl
lea
mov
add
mov
call
add
dec
jne
jmp
pop
xchg
aas
pusha
daa
lsl
inc
xchg
sbb
or
in
out
call
inc
mov
bound
pop
push
gs
and
test
adc
adc
sti
fdivrs
dec
sub
sbb
add
ljmp
nop
ja
fisttpl
dec
iret
aam
mov
out
adcl
xchg
sbb
test
loopne
pop
push
outsl
adc
ja
sbb
and
and
movsl
fisubrl
dec
pop
push
ss
inc
or
cmp
pop
add
subl
cmpb
sbb
mov
shrb
push
call
fistpll
add
push
mov
roll
sub
pcmpeqw
push
add
pop
push
lret
sbb
add
xchg
pop
or
sti
mov
shl
inc
xchg
jbe
jnp
cmp
push
cmpl
rcll
insb
jle
push
lods
std
pop
mov
call
fistl
jne
movsl
inc
adc
lods
call
mov
pop
cli
and
je
mov
pop
adc
loope
add
adc
adc
js
adc
push
clc
imul
push
mov
push
cwtl
call
mov
ja
and
mov
jo
mov
push
pop
insb
js
push
mov
or
mov
cmc
pop
test
mov
inc
popa
out
pop
jmp
imul
cld
mov
sbb
dec
jne
mov
call
fbstp
dec
mov
loopne
cltd
sub
movl
clc
dec
mov
pop
fmuls
call
addl
pop
dec
adc
mov
push
inc
or
sub
in
pop
test
fisubl
jg
daa
and
and
sbb
inc
mov
pop
pop
mov
dec
fcompl
orb
xchg
adc
scas
in
jnp
sbb
sub
test
imul
and
push
mov
mov
loopne
and
pop
movw
rorb
jmp
push
cld
xchg
pusha
clc
lds
jne
nop
sbb
aas
popa
les
xchg
mov
insl
or
lahf
mov
call
push
call
cmp
mov
mov
out
or
adc
es
movsb
mov
cmpsb
cld
push
shlb
clc
push
ljmp
into
mov
xorl
icebp
push
inc
mov
daa
stos
sarl
sti
mov
call
mov
fisttpll
shr
mov
lock
divl
or
jge
xor
adc
arpl
push
pop
fistpll
sub
nop
pop
adc
xor
or
ret
test
add
subl
call
rcrl
sub
jmp
das
imulb
fisubl
add
sub
add
add
jmp
insl
add
fwait
add
push
cmp
jmp
or
mov
or
movsl
stc
or
scas
fidivrl
pop
out
pop
jmp
add
aaa
les
mov
dec
mov
in
cmp
jl
pop
outsb
or
inc
xchg
call
mov
dec
xor
push
add
inc
rorb
xor
leave
ret
jne
push
cld
add
adc
pop
loopne
mov
insl
adc
fsubr
lods
inc
pop
pop
call
cmp
popa
repz
pop
bound
adc
cmp
test
imul
jmp
rorl
cld
add
push
sarl
push
pop
pop
dec
or
cli
in
add
lcall
pop
ret
dec
fstl
std
lahf
jo
lret
clc
fdivl
dec
and
push
test
mov
outsb
dec
or
or
push
push
cmp
aas
add
adc
iret
sub
es
dec
push
ret
mov
frstor
add
mov
add
aaa
dec
jmp
fisttps
push
clc
pushf
sbb
outsl
push
add
call
dec
jne
jmp
or
ss
dec
pop
jno
scas
pop
xchg
cld
pop
lea
jmp
push
invd
push
popf
push
scas
enter
jbe
imul
sub
shlb
add
push
shr
ret
es
lods
cmp
pop
dec
insb
inc
dec
outsb
jge
add
or
cmp
dec
jle
movb
add
sbb
ss
and
sub
push
insl
inc
sub
popa
je
sub
xchg
jge
add
jmp
mov
sbb
push
bound
es
rcll
cmpsl
inc
sti
dec
mov
sub
mov
push
scas
xor
xor
cli
pop
std
flds
push
popa
xlat
mov
pop
pop
or
inc
mov
call
sub
cmpsl
sub
scas
adc
sub
es
jl
cld
cmp
jge
sub
cs
jl
aam
sub
push
loope
sub
sbb
mov
mov
lods
ret
push
popf
call
daa
xor
in
jl
sub
jle
sub
pop
fnstcw
fcmovne
sub
add
repnz
ja
jmp
push
or
cmpsl
test
mov
stc
xchg
dec
mov
inc
out
ret
push
lds
adc
mov
imul
call
xor
cmp
mov
sbb
sub
cltd
mov
pop
push
mov
add
testl
jnp
ss
dec
js
mov
inc
mov
lods
adc
pop
push
xor
pop
rcrl
sub
clc
sub
sahf
outsb
dec
jle
adc
cmpl
jne
sbb
or
insb
lahf
out
sbbb
mov
xchg
jo
sbb
sub
call
mov
insl
push
icebp
outsb
in
icebp
call
je
stc
jae
push
fdivl
adc
orl
xor
call
mov
dec
clc
mov
sarb
insb
call
mov
or
push
scas
addr16
in
cltd
stc
lods
pop
push
mov
adc
jl
push
xor
mov
cmp
daa
add
xorb
loop
adc
and
mov
inc
mov
leave
add
push
loopne
or
pop
mov
cmp
dec
jmp
cmp
je
push
cmp
jno
cmp
loopne
cmp
fldcw
mov
adc
rorl
imul
call
adc
aas
fucomip
orl
pop
mov
testl
hlt
subl
sbb
cmp
movsl
stc
fldt
or
sbb
dec
cs
adc
bound
mov
cltd
sbb
adc
inc
add
iret
or
sbb
imul
xchg
cmp
in
fildl
push
mov
and
enter
in
out
mov
lock
outsl
cld
loopne
sub
add
sarl
movsl
add
mov
xor
mov
fdivl
stc
sub
and
add
and
add
and
inc
and
jo
sbb
scas
in
xchg
and
pop
lret
jmp
adc
xor
scas
lahf
fldpi
jge
in
cmp
lea
loopne
loopne
stos
in
mov
add
add
or
je
sti
dec
jmp
pop
pop
pop
inc
add
sub
mov
fiaddl
and
pop
adc
push
push
add
int3
aaa
push
dec
jne
jmp
or
sbb
clc
call
mov
std
insb
and
mov
xchg
testb
repz
enter
jb
pop
pop
in
fsub
call
aaa
orb
jmp
or
and
jmp
je
insl
addr16
repnz
iret
adc
loop
ss
cmp
lock
xchg
or
lods
pop
out
mov
add
imul
ljmp
call
arpl
sub
cmp
sub
add
in
jmp
roll
jns
mov
xor
adc
aas
push
nop
mov
shr
test
push
mov
mov
add
lret
or
rorb
imul
push
lret
sub
xor
lcall
sbb
or
mov
or
xchg
pop
filds
jns
neg
push
imul
fisubl
iret
add
out
or
xchg
fincstp
xchg
adc
mov
cmp
not
loopne
lock
shrl
out
jb
outsl
xlat
cmp
jb
add
inc
loop
jmp
scas
mov
inc
xor
int
adc
and
lcall
js
and
lods
call
jge
orb
outsl
lock
dec
sub
aam
pop
or
ficoml
sub
out
and
jmp
mov
jbe
sub
inc
sti
jmp
cmp
jne
ja
add
mull
sub
adc
fbstp
xor
mov
add
fsubr
rclb
mov
lret
out
sbb
mov
fildl
or
pop
xchg
stc
push
jb
pop
out
sbb
push
outsb
flds
sub
jmp
lret
or
aaa
jmp
mov
or
fwait
lds
inc
loopne
jl
adcl
cmp
xor
jg
mov
cltd
cwtl
pop
sub
movsb
xor
add
lods
outsl
xchg
inc
sbb
jmp
mov
push
jnp
xchg
mov
or
test
inc
mov
sub
scas
aam
pusha
sarb
bound
dec
dec
inc
stos
or
lcall
sub
xchg
aam
and
movsl
stos
cltd
add
jmp
xchg
jbe
pop
xchg
adc
or
or
xchg
adc
add
pushf
sarb
push
adcb
xchg
faddp
fdivs
jmp
pop
rorb
xlat
push
or
inc
push
cmc
call
icebp
jmp
mov
pusha
loopne
mov
enter
inc
fisubrs
add
cmp
jg
fiadds
jge
mov
cld
or
add
sbb
add
jmp
incl
pop
shrb
jo
orl
call
jno
push
cmp
push
call
fwait
sbb
imulb
sbb
insl
call
inc
in
pop
cmp
inc
call
out
adc
or
cmp
pop
loopne
jge
jge
mov
sbb
imul
add
dec
lock
je
cmp
xor
loopne
push
in
call
sti
loopne
pop
decl
push
mov
jge
fcmovu
or
inc
in
jge
xchg
add
inc
sub
sub
inc
fmuls
xor
call
in
mov
push
iret
fsts
bound
and
dec
sub
out
push
mov
popf
outsl
jo
mov
pop
jne
xlat
sub
dec
push
ret
mov
cmpsb
push
lds
cs
js
add
pop
dec
dec
pop
cmp
mov
or
or
addl
out
maskmovq
testl
sbb
pushf
ret
int3
test
subb
inc
or
xor
pop
daa
and
inc
sahf
jp
adc
push
push
xchg
jo
roll
cs
call
pop
clc
mov
mov
adc
adc
insl
dec
ds
mov
incl
mull
mov
pop
or
add
cmpl
jne
push
xorb
cmc
mov
call
lods
push
outsb
jne
and
in
outsl
add
adc
adc
inc
sbb
or
xor
push
cmp
adc
ljmp
push
mov
cmp
jne
lahf
mov
mov
cmpsb
cmp
clc
js
pusha
adc
add
or
cld
orps
mov
aad
lods
cmp
js
push
call
loope
stos
xor
and
jmp
idiv
cmpb
fistpll
pop
js
add
or
add
jmp
cmpb
test
call
in
lret
neg
jne
movb
fisubrs
push
jnp
inc
add
push
call
cmp
sbb
in
sub
rolb
roll
cmp
lahf
sbb
xor
xor
xor
jbe
test
pop
mov
adc
call
out
call
fs
inc
cmp
movb
push
sub
dec
push
shrl
pop
mov
call
insb
or
sbb
idivl
test
mov
jp
je
mov
ljmp
jb
gs
xor
icebp
cs
insb
jg
gs
outsl
ljmp
push
popa
je
dec
popa
out
insl
gs
adc
mov
loopne
or
adc
dec
mov
inc
out
add
jae
ja
inc
dec
inc
imul
xchg
in
sbb
jns
cmp
add
sbb
insb
jnp
dec
xchg
push
mov
ret
test
scas
std
sub
jb
add
add
or
leave
gs
out
push
push
daa
add
les
jo
add
mov
sbb
shll
and
and
jmp
std
inc
adc
call
mov
push
repz
add
into
lds
mov
cmpb
jl
jge
or
fadds
cmp
xchg
or
jmp
hlt
dec
cmpb
lods
push
paddw
fdivs
xchg
fnstenv
inc
das
clc
shrl
rcrb
push
fadd
iret
notl
outsb
test
add
cmp
dec
push
rcrl
jle
je
int
test
int
ss
push
sbb
cs
add
xor
loopne
mov
outsl
data16
ja
jb
push
mov
popa
insb
gs
jae
add
add
data16
shlb
add
xor
insl
mov
xor
arpl
push
repnz
clc
sbb
mov
or
sbb
adc
mul
testb
xchg
cld
mov
mov
push
mov
rcrb
mov
xadd
popf
je
or
das
push
dec
cmp
xor
arpl
pop
mov
outsb
push
adc
or
mov
lods
push
and
ljmp
jg
pusha
mov
add
adc
add
loopne
pop
ficoml
popl
mov
push
jo
mov
dec
je
push
xor
adc
notb
outsb
push
or
movhps
and
xor
cmpl
lock
add
cld
and
jbe
and
push
leave
push
aad
push
or
lea
mov
fimuls
pop
call
dec
cmp
decl
or
bound
mov
sbb
xchg
pop
lea
push
push
cltd
ret
lock
mov
stc
inc
scas
mov
cmp
mov
or
sub
into
dec
xor
call
jge
orl
cld
fimuls
clc
incl
and
decl
jnp
xor
call
lcall
lret
sbb
cmp
clc
inc
fwait
out
subl
lds
aad
add
scas
add
sbb
lea
ret
push
mov
frstor
or
call
sbb
xlat
or
mov
out
mov
call
mov
adc
aad
dec
mov
jp
sub
jg
cmp
cmp
inc
addr16
out
and
ja
shr
xchg
mov
call
imul
scas
pusha
shlb
mov
inc
js
into
pop
je
pop
nop
jo
insb
push
movsl
rolb
adcb
pop
call
clc
je
cmpl
or
adc
movb
or
out
imul
or
mov
adc
addr16
adc
test
nop
sti
or
popf
and
fsubrs
mov
push
call
ret
mov
pop
sbb
mov
cmp
sbb
mov
loop
pushf
mov
fisubs
add
jecxz
das
jmp
mov
xchg
fdiv
jo
fmull
sbb
cwtl
sub
add
mulb
push
aaa
pop
insb
and
loopne
insb
and
daa
pusha
les
das
cmp
ss
or
and
enter
or
adc
enter
or
add
enter
or
xorl
andl
jp
or
sbb
inc
push
test
mov
pop
xor
daa
insb
mov
push
cwtl
inc
nop
xchg
fs
sbb
sbbb
push
js
nop
je
jo
insb
push
push
pusha
sbb
inc
nop
push
fs
sbb
inc
nop
inc
fs
sbb
cmp
xor
xor
sub
sub
and
and
sbb
sbb
adc
adc
or
or
add
add
ret
add
dec
ret
roll
lock
sbb
push
in
nop
loopne
fcompl
fadds
aam
nop
shlb
enter
nop
shlb
push
mov
nop
mov
lods
sbb
mov
push
xchg
inc
nop
mov
test
addb
fs
je
jo
nop
insb
fs
inc
nop
pop
fs
sbb
inc
nop
dec
fs
sbb
inc
nop
cmp
cmp
xor
xor
sub
and
and
sbb
nop
sbb
adc
or
nop
or
add
cld
add
sbb
pop
push
hlt
inc
nop
lock
ret
ret
ret
or
add
enter
or
add
enter
or
add
enter
or
add
enter
or
add
mov
fs
sbb
addb
pop
xchg
push
in
punpcklbw
stos
fisttpl
jo
aam
lock
testb
icebp
fs
push
hlt
inc
nop
cmc
negb
testl
fs
sbb
push
cld
inc
nop
std
fs
sbb
push
loopne
nop
loope
loop
jecxz
in
nop
in
out
out
call
ljmp
in
fs
sbb
push
rolb
shll
roll
aam
nop
aad
sbb
push
fadds
fldenv
fildl
faddl
frstor
filds
rolb
fs
push
les
lds
movl
fs
push
int3
inc
nop
int
into
sbb
push
mov
nop
mov
mov
mov
mov
nop
mov
mov
mov
mov
mov
inc
nop
mov
xchg
nop
je
sbb
repnz
je
jo
add
pop
inc
xchg
faddl
and
inc
sub
cmp
xor
add
mov
or
arpl
gs
imul
imul
pop
pop
lret
and
pop
scas
in
jns
std
inc
dec
gs
jo
pop
nop
fnstenv
pop
pop
xor
pop
nop
mov
decl
dec
cli
gs
outsl
jb
sbb
lret
nop
pop
and
or
push
or
inc
dec
outsb
pop
in
inc
jb
pop
mov
push
xchg
inc
add
gs
or
ret
xlat
in
inc
pop
push
mov
inc
pop
in
pop
stos
xchg
adc
pop
mov
adc
or
push
xor
push
push
pop
dec
mov
divb
jns
mov
pop
push
and
push
pop
add
popa
outsb
addr16
mov
lret
test
sbb
scas
data16
outsl
ja
jae
pop
fs
pop
add
adc
or
dec
adc
add
push
enter
pop
add
mov
jbe
imul
sbb
ret
mov
mov
push
das
or
and
imul
lea
fs
xchg
das
pop
push
outsb
fs
nop
mov
push
xchg
maxps
push
outsl
imul
pop
or
das
xchg
pop
icebp
inc
popa
jae
outsl
je
push
enter
or
pop
scas
nop
xlat
in
rcrb
rcrb
add
arpl
push
mov
insb
popa
lea
pop
pop
xor
sub
imul
push
enter
scas
jle
je
arpl
xor
in
push
enter
or
je
loope
inc
imul
push
inc
loope
popa
or
popa
sub
popa
or
enter
or
cmp
roll
outsb
fs
clc
lret
clc
or
push
arpl
popa
jb
pop
mov
pop
inc
in
bound
rcl
data16
cmp
mov
nop
mov
adc
push
popa
gs
outsl
add
ja
adc
cs
push
mov
pop
jle
push
jns
push
fsubl
insb
jae
fwait
in
pushf
and
nop
ja
add
xchg
sar
xor
lret
mov
mov
daa
mov
je
or
adc
sub
jne
or
jns
div
fsubr
pop
sub
ret
test
int
push
aam
add
cmp
inc
jmp
push
and
jg
pop
pop
sub
sub
lret
add
mov
sub
jmp
mov
dec
jne
cli
xor
cmp
inc
mov
pushl
inc
movsb
decb
addl
jns
mov
and
inc
ljmp
mov
call
in
add
jl
add
fnstcw
orw
mov
fld1
inc
cmp
pop
andl
ret
add
fildll
fistpll
rorl
cmp
add
fildll
filds
std
rorl
fistpll
add
xor
cmp
mov
add
insl
push
push
fcom
fstsw
sahf
jae
mov
xor
ffree
ffree
sti
ffree
ffree
pop
lret
mov
lods
into
lret
push
adcb
lock
add
mov
loope
pop
ret
pop
das
xor
mov
sub
subl
sub
ret
scas
adc
or
sahf
call
jmp
rorb
push
jg
sub
sub
sbb
outsl
inc
call
and
xlat
sub
xor
js
jne
dec
add
sub
push
cli
out
dec
sarl
popf
push
decl
push
lea
mov
and
adc
pusha
lahf
cmp
mov
ja
add
push
flds
hlt
cmpsb
clc
mov
aaa
push
push
in
add
cld
call
sub
lds
mov
call
clc
fsubl
dec
mov
inc
mov
sbb
ficomps
adc
add
pop
fcoms
clc
xchg
pushl
test
or
enter
jmp
mov
loopne
rol
add
aam
lret
push
adcb
mov
daa
add
incl
inc
sub
mov
mov
jmp
flds
popf
inc
inc
mov
xchg
xlat
ja
lret
xor
mov
xor
push
xor
dec
mov
clc
repz
je
mov
pop
add
inc
mov
push
mov
add
std
ljmp
inc
and
cli
add
inc
add
shll
or
daa
inc
add
clc
cmp
jbe
mov
rorl
xchg
rcrb
add
dec
and
add
fstpl
movb
mov
mov
add
cld
sbb
leave
call
pusha
les
mov
xor
inc
mov
cmp
decl
mov
call
pop
adc
dec
mov
inc
cs
push
lea
mov
lock
into
push
test
xchg
fistpll
or
orb
or
lods
cmp
fdivrs
stos
fistpll
sti
inc
clc
jmp
push
repnz
jmp
inc
call
dec
addr16
call
cmp
pop
outsb
hlt
adc
lret
lods
jmp
push
ffree
mov
adc
mov
xchg
pop
fdivr
mov
push
push
call
mov
add
fildl
or
sbb
xchg
into
xor
jge
push
pop
lea
mov
sbb
fisubrs
mov
jmp
cmp
outsl
and
jb
cmp
imul
sti
movzbl
add
jle
add
xor
pavgw
cmp
pop
pop
jle
lock
cmp
je
test
jle
and
mov
mov
sub
pop
pushl
lea
mov
xor
push
imul
xor
fldcw
cs
cvtdq2ps
cmpsb
mov
adc
or
call
and
dec
fsubrs
rcll
mov
mov
mov
std
faddl
xchg
cmp
sub
je
mov
jns
or
push
aam
pop
pop
mov
cmpsl
xor
inc
push
sbb
test
pusha
dec
push
fmuls
mov
jno
or
fadd
push
int
data16
mov
pop
push
std
or
jmp
xor
and
inc
or
mov
lods
mov
mov
jmp
add
add
pop
and
xlat
insb
aad
call
ret
in
mov
insb
or
insb
add
mov
outsl
xor
dec
fsubrl
mov
fsubrp
sbb
lahf
sub
push
dec
mov
add
push
pop
leave
add
scas
or
jmp
mov
or
je
or
stc
sti
inc
je
mov
push
jle
je
mov
pop
dec
je
jp
ds
mov
add
adc
ret
cmp
jbe
mov
jne
lret
loop
cmpb
adc
and
mov
jae
pop
scas
mov
sbb
repnz
shld
mov
xchg
loop
loopne
int
popl
push
jmp
fistpl
pop
pop
andl
pop
daa
mov
cmc
and
cmp
mov
jmp
fidivrl
or
sbb
cwtl
adc
lahf
orb
or
rcrl
hlt
popl
pusha
or
push
pop
cld
add
rcr
call
das
cmp
shll
or
fsubrs
dec
cld
lea
adc
outsb
in
ret
and
lcall
xor
mov
add
pop
push
sbb
adc
adc
push
leave
lock
call
cmp
mov
jmp
push
out
push
lea
call
inc
clc
push
ja
xor
stos
mov
add
or
jge
sub
jmp
or
das
movsb
mov
stos
icebp
xchg
push
mov
ja
mov
xchg
test
add
stc
adc
inc
dec
shlb
dec
decl
jne
pop
sbbb
loopne
jbe
xchg
loope
jg
xchg
idiv
mov
mov
mov
mov
mov
adc
test
icebp
push
pop
push
sbb
pop
add
jle
sbb
mov
sub
mov
adc
imul
jo
add
pop
jge
movzwl
or
add
aaa
push
call
jecxz
xchg
insb
std
icebp
in
mov
jmp
mov
xlat
mov
imul
filds
ja
movswl
cmp
movsl
lea
mov
mov
add
mov
inc
jmp
sbb
mov
xor
outsl
loopne
lods
or
or
push
pop
rorb
loopne
push
add
jno
icebp
cs
loope
dec
aam
push
dec
decl
sbb
xchg
sub
or
je
mov
sbb
or
movsb
sbb
outsb
inc
inc
sti
je
stos
loop
pop
sti
adc
stos
or
pop
and
js
cmp
sub
pop
xchg
mov
fldl
mov
dec
fsubr
jns
in
cmp
add
mov
pop
fucomip
mov
call
sbbl
jl
jb
mov
xchg
add
in
or
ret
jmp
jg
repz
inc
call
je
cmovnp
in
cli
test
jmp
call
add
dec
fucomip
inc
jne
call
lcall
xrelease
adc
fimuls
out
cmp
xchg
mov
pushf
fwait
or
pushf
cmp
je
push
push
push
push
sub
sub
or
loopne
call
pop
inc
loop
inc
lods
dec
test
add
outsl
imul
and
add
mov
mov
and
adc
filds
sbb
sub
adc
pop
adc
sub
adc
jne
sub
xor
pop
sbb
jbe
sub
ljmp
loopne
add
packsswb
cmpsl
cmpsl
lods
cs
jg
add
jmp
cmc
add
and
incl
jne
not
inc
push
aad
adc
xorl
lea
ret
and
jmp
cs
imul
sar
jmp
and
loope
stos
call
frndint
jmp
filds
fcomi
fwait
pop
inc
loop
add
pop
fidivl
fbstp
adc
or
icebp
mov
mov
and
icebp
add
mov
pop
shrl
or
add
pusha
cmp
jge
dec
aaa
add
jmp
adc
pop
jns
add
pop
push
add
dec
js
incb
cmp
dec
mov
data16
mov
xor
adc
popf
shll
and
je
icebp
sti
push
or
data16
ljmp
add
dec
inc
out
hlt
fldenv
cmp
adc
add
rorl
or
stos
mov
pop
jo
mov
test
rorl
lcall
fisttps
movaps
sub
fidivl
repnz
mov
or
loopne
pusha
in
fildll
cli
mov
or
xchg
cmp
mov
sub
jne
mov
pop
dec
pop
adc
ljmp
pop
or
and
push
fisubl
ljmp
inc
iret
in
movb
fildl
mov
int
fildl
scas
and
mov
adcl
test
scas
inc
mov
es
fimuls
sar
or
push
pop
add
scas
xchg
or
enter
mov
call
mov
xchg
push
sahf
mov
adc
inc
ljmp
inc
daa
push
adc
inc
scas
pop
je
incb
dec
js
mov
push
and
xchg
popa
sbb
or
pop
scas
enter
addr16
out
call
and
cli
add
rolb
pop
mov
mov
bound
icebp
push
sbbl
or
inc
xchg
cmp
mov
scas
mov
xchg
inc
ficoms
iret
pusha
add
addb
stc
adc
xor
dec
fs
pop
inc
cmpl
or
in
jo
cmp
mov
add
in
jecxz
outsb
call
or
mov
out
cmp
lods
mov
mov
cs
jmp
pop
mov
xor
dec
sti
pop
je
pop
dec
cmp
mov
lock
or
push
ret
call
mov
ret
stos
sbb
mov
jae
dec
or
decl
mov
lods
shrb
inc
mov
push
pop
push
mov
and
mov
lock
cmp
mov
push
mov
xchg
or
inc
call
mov
or
in
icebp
dec
std
mov
add
out
lock
mov
pop
cmp
subl
jae
push
add
call
push
mov
cwtl
idivl
js
sub
mov
mov
push
mov
ja
test
fs
jl
pop
pop
ret
push
mov
ja
xor
xor
mov
and
ret
push
mov
fidivs
mov
test
adc
cltd
sub
jbe
mov
mov
shl
push
or
rcr
xor
push
ljmp
pushf
cld
sbb
je
jbe
mov
sub
jo
xor
mov
pop
cmp
sti
jle
jmp
pop
pop
ret
lods
hlt
cmp
add
jl
mov
loop
and
mov
jge
cld
cmp
adc
stc
push
lock
frstor
std
idiv
jmp
rol
lea
jl
or
repnz
mov
pop
sub
shlb
lock
dec
loopne
ss
fwait
in
push
mov
lock
hlt
daa
arpl
arpl
pop
push
dec
mov
jne
jbe
add
dec
mov
ja
les
lds
out
and
adc
icebp
mov
or
push
lods
jne
in
dec
jg,pt
psrad
mov
js
addr16
repz
or
add
adc
aas
gs
jns
pop
sarl
gs
daa
js
test
hlt
add
aaa
or
imul
or
outsb
xor
mov
or
or
cmpl
pop
vmaxss
mov
test
sbb
inc
in
iret
sbb
pop
fmull
out
mov
sti
mov
es
mov
call
fcmovnbe
inc
psllq
xchg
add
add
cmpsb
pop
loope
nop
ja
outsl
mov
adc
mov
inc
mov
dec
iret
mov
out
punpckldq
mov
mov
sbbl
cmp
add
nop
call
lods
jo
xor
fnsave
or
mov
lods
add
adc
push
sbb
inc
mov
popf
shlb
jg
mov
cmp
sub
xor
imul
gs
mov
sub
add
mov
ret
mov
jmp
lock
pop
daa
sub
xchg
pop
xlat
or
mov
scas
mov
enter
add
dec
int3
sbb
add
sub
loop
call
or
sti
hlt
call
adc
in
js
sbb
mov
adc
mov
push
add
pop
and
lahf
and
out
or
pop
push
aas
or
sub
jp
pop
les
nop
cmp
adc
fldl
push
adc
in
ja
mov
ret
inc
jo
sub
pop
rorb
add
les
js
andl
movsl
movsb
dec
push
mov
icebp
popa
mov
movsb
mov
add
ja
adc
dec
rorb
les
jp
dec
and
lea
gs
aam
pushf
xchg
push
inc
jb
jns
sub
push
cmp
inc
clc
int3
lret
lock
enter
sbb
jns
clc
dec
lret
call
aas
dec
or
mov
jbe
mov
push
sub
clc
cmpb
in
arpl
mov
xor
inc
je
or
push
loopne
arpl
sub
sub
arpl
xor
fucomi
xor
push
sti
push
jg
cmp
jne
or
fnsave
pop
fwait
xchg
adc
jne
sbb
jo
sub
sub
cmp
ljmp
pop
pop
sbb
or
ret
push
sub
lret
add
adc
ljmp
adc
jmp
pop
sahf
nop
and
inc
mov
mov
test
aaa
dec
call
mov
jne
pop
inc
adcb
in
outsb
loopne
cld
mov
adc
mov
lds
xor
jns
aam
or
loopne
rcrb
ljmp
imul
gs
jge
clc
or
fildll
loopne
add
xor
sti
dec
loopne
mov
popa
pop
xor
fmuls
sarb
jnp
loopne
cmpl
jnp
push
jmp
int3
and
jne
insl
pop
leave
fwait
jae
mov
loopne
sbb
shlb
test
and
lods
insl
inc
or
xchg
gs
xor
fs
sbb
push
pop
cmp
je
enter
xor
inc
and
xor
jmp
int
sbb
add
mov
flds
add
or
or
bound
cmpsl
fildl
xchg
bound
lods
in
loope
test
and
sub
mov
arpl
insl
fiadds
sbb
cld
pop
cwtl
das
jle
popa
add
jecxz
jnp
jle
sete
dec
imul
int3
ds
sbb
sbb
mov
pop
inc
insl
out
or
scas
adc
rcl
subl
test
mov
mov
xor
xchg
mov
incb
imul
call
and
mov
cmpsl
out
into
mov
call
test
mov
int3
std
mov
fwait
push
arpl
sbb
lock
mov
lock
test
cld
cli
sti
aaa
jmp
xchg
sbb
fcomps
movsb
or
test
enter
nop
cmp
stc
fmulp
in
push
mov
ss
mov
fiadds
decb
mov
xchg
ret
movsl
xor
pop
adc
mov
sti
add
inc
call
aas
ljmp
outsl
pop
or
dec
mov
out
cmp
pop
ljmp
inc
andl
push
lea
rcrb
lock
hlt
lcall
out
adc
scas
mov
cmp
add
push
lret
or
or
clc
orb
mov
adc
loop
sti
jo
popa
stos
mov
daa
jo
pop
xlat
jns
mov
fcoms
fdivrs
repz
inc
add
inc
lds
pop
sbb
jl
dec
or
inc
fisubrl
mov
ffree
adc
or
int3
sahf
andb
jp
pop
stos
sbb
or
les
inc
ds
lds
nop
xchg
or
insl
pop
sbb
mov
fwait
aad
dec
lds
inc
and
dec
jb
or
test
fidivrs
mov
push
aas
je
jle
mov
rcr
mov
mov
pop
add
jo
mov
in
inc
xlat
lods
or
mov
fdivrl
js
mov
data16
pop
lret
test
rcr
bound
cmp
jmp
adc
mov
test
ret
mov
dec
mov
jl
sti
mov
and
jb
mov
sub
push
adcl
add
mov
mov
add
adc
les
inc
lods
and
aaa
adc
adcb
scas
mov
outsb
cmpsl
dec
call
xor
sbb
inc
ds
mov
mov
or
mov
push
ja
lcall
mov
lret
cli
mov
lods
rolb
orb
mov
dec
jo
or
sbb
ljmp
push
xchg
scas
dec
ja
inc
cmp
int3
shl
leave
mov
mov
mov
pop
cs
cs
mov
mov
mov
imul
pop
iret
push
aam
mov
pop
xor
lret
pop
dec
or
jo,pn
jae
push
adc
sub
and
mov
xor
das
rolb
sbb
ja
add
jge
inc
adc
repnz
add
stos
enter
push
outsb
shlb
mov
adc
jb
xchg
test
and
call
cwtl
fisubl
add
mov
jg
nop
stc
jne
iret
mull
mov
sub
push
es
pop
ret
imul
or
call
ljmp
mov
jge
in
in
push
das
cmpsl
dec
xchg
sub
mov
das
cltd
aaa
push
mov
pop
aaa
pop
sub
jb
inc
clc
mov
mov
test
stos
mov
push
dec
aad
ljmp
cld
sub
enter
adc
ds
pop
ja
sbb
xchg
xchg
push
or
movsl
pop
mov
push
push
movl
iret
add
lahf
push
loopne
or
data16
or
in
and
movzwl
adc
test
lock
cli
cwtl
mov
dec
mov
cmpsl
dec
loopne
incl
adc
movl
pop
inc
call
sti
cmp
call
jge
ret
mov
or
adc
hlt
mov
pushl
mov
inc
inc
cmp
or
outsb
push
or
inc
push
das
push
outsl
into
pushl
data16
rorl
ss
imul
jmp
jno
shlb
test
sbb
in
sub
ret
adc
mov
mov
mov
add
aas
lods
dec
jne
adcl
lret
xchg
jno
adc
xchg
xchg
aam
ds
adc
adc
mov
inc
cmp
mov
clc
mov
mov
loopne
mov
sbb
mov
call
jl
sub
daa
mov
xor
ljmp
nop
mov
mov
jg
dec
in
mov
sbb
in
imul
imulb
mov
insb
mov
sahf
in
pop
into
sbb
int3
out
call
loopne
test
cld
jns
cmp
aam
fdivs
arpl
iret
mov
or
cmp
mov
insb
mov
rclb
pop
sub
fbld
aas
push
rorb
and
cmp
jmp
repnz
pop
adc
mov
testl
jae
and
sub
push
call
or
xchg
ds
les
push
ds
dec
xor
aas
and
and
add
shlb
inc
push
in
inc
popa
push
clc
mov
mov
clc
jne
fiadds
cld
push
hlt
hlt
mov
outsl
mov
sbb
jo
pushf
cltd
movl
rolb
sbb
mov
pop
mov
cmp
xor
inc
push
ja
insl
das
mov
roll
push
insl
fiadds
and
and
add
fistl
insl
or
jo
jge
push
push
and
in
push
dec
add
mov
fsubs
movaps
inc
cmp
subl
sarl
cli
pop
and
push
mov
insl
adc
adc
std
in
call
sub
push
lret
insl
clc
mov
sub
mov
add
inc
or
adc
jo
add
jae
inc
sbb
arpl
js
inc
mov
int3
inc
movsl
add
sbb
nop
les
lcall
pop
js
into
outsb
pop
inc
outsl
fdivrl
add
scas
jo
lcall
lcall
push
pop
mov
pop
xchg
cmpsb
inc
lcall
fcompl
mov
xsave
pop
mov
pop
mov
lcall
add
fwait
sub
xchg
jae
pop
scas
lock
stos
sbb
fldl
and
mov
jg
pop
scas
movsb
enter
shrb
adc
das
dec
mov
jb
jnp
test
scas
or
jne
movsb
aam
cmp
lahf
or
les
lahf
int
clc
xchg
sahf
mov
mov
pusha
lahf
dec
mov
push
test
pushf
sbb
lahf
cmp
or
js
call
xor
push
xor
xor
rcrb
int
mov
int
xor
rcrb
rorl
push
lods
inc
lcall
inc
mov
inc
jbe
je
dec
inc
insb
and
pushf
cmp
or
fstps
sbb
mov
sahf
jo
in
inc
das
sbb
xlat
fmuls
xor
loopne
out
nop
mov
sbb
adc
lahf
mov
add
insb
lahf
dec
inc
cmp
out
cmp
lea
test
andb
imul
add
xchg
repz
jp
aam
push
push
inc
aad
rol
repz
cmpsl
lods
xchg
pop
clc
jns
out
repz
nop
dec
add
mov
adc
nop
fistl
stos
or
call
mov
les
rorl
mov
in
sbb
xchg
xchg
shlb
cmp
nop
into
imul
xchg
cwtl
jl
or
or
ja
stos
or
out
cmp
repz
js
cmp
or
mov
lcall
cltd
pop
pop
add
jmp
aas
test
les
subl
mov
or
inc
clc
jl
sub
fisubl
mov
enter
mov
mov
ja
jne
add
je
sub
mov
dec
imull
or
arpl
and
js
arpl
mov
pshufw
and
cwtl
mov
adc
aam
adc
push
loop
nop
movsl
out
xchg
sub
mov
xchg
je
fcos
mov
fstpl
and
pop
add
push
or
push
pop
call
mov
add
xorb
and
or
add
out
push
push
je
fldcw
imul
and
fmull
xchg
cmp
xchg
lahf
adc
jne
outsl
insl
push
and
ja
nop
and
sub
pop
std
lahf
dec
xchg
ja
enter
xchg
ja
les
or
dec
inc
call
xchg
sbb
or
jle
add
fsubrl
add
xor
sub
jne
add
shll
outsb
stos
inc
or
add
and
sbb
xchg
shrl
or
adc
add
or
fbld
inc
mov
cs
inc
cmp
dec
jge
adc
call
push
pop
inc
jge
sbb
test
out
shl
out
lea
add
subb
add
test
jl
cmp
dec
fwait
insl
inc
orb
or
jg
push
or
cli
inc
cmc
jle
mov
adc
adc
rcr
adc
daa
add
push
sbb
push
dec
jmp
add
dec
inc
mov
popf
add
adc
fnsave
or
insb
cmp
mov
mov
mov
pop
pop
out
jl
cmp
adc
outsl
es
push
dec
les
mov
or
fcoms
xor
jle
shlb
push
sbb
orb
shl
fbld
dec
aad
aaa
xlat
dec
mov
sub
jg
dec
mov
ret
ja
mov
imulb
and
add
push
mov
push
popf
adc
or
pop
fldln2
fwait
push
sub
loop
sarl
fdivs
mov
rol
inc
lods
lock
jg
popf
add
out
xchg
pop
sbb
rcll
push
cmp
lret
and
lret
xchg
xor
sbb
es
loop
xchg
fwait
shl
shrl
jle
repz
adc
jne
inc
inc
rol
cmp
jmp
cmpb
jle
or
in
inc
add
or
pusha
je
push
cmp
add
cmpb
je
cwtl
jge
ret
sbb
inc
jne
setge
std
addb
add
jmp
mov
push
mov
popa
les
ss
fidivrl
mov
inc
in
sbb
sbb
mov
arpl
mov
adc
adc
ljmp
pop
je
mov
sbb
int
fcmovnb
les
inc
pusha
mov
add
adc
mov
add
rclb
add
jo
cmp
adc
ja
jge
jne
cmpl
adc
push
je
add
cmp
or
rcrb
jo
inc
adc
mul
sbb
call
adc
and
in
jns
cmc
pop
andl
cltd
inc
mov
call
or
cmp
call
iret
sti
mov
mov
aaa
push
loop
cmp
xlat
add
in
adc
ss
ljmp
clc
jle
lock
adc
xor
xchg
repnz
sub
cmp
cmp
mov
mov
fs
inc
sti
jbe
mov
pushl
call
cmp
push
mov
test
decl
fmull
or
push
stos
pop
xor
push
sti
mov
int3
jle
cmp
test
mov
xor
loopne
loopne
cmc
nop
adc
jo
and
mov
std
or
dec
mov
push
pop
or
fiaddl
add
mov
or
pop
insb
fistpl
sbb
ja
ds
push
sbb
or
and
or
xor
fstl
push
push
lret
cmp
inc
jo
ror
pop
ret
ja
mov
ljmp
jmp
js
lds
aaa
out
jge
loopne
mov
cs
in
push
xchg
add
adc
and
inc
addr16
mov
or
loope
mov
lret
sub
add
adcl
push
out
jge
mov
xchg
mov
xor
movb
cmp
and
mov
es
cmp
mov
sbb
ficoml
push
and
add
lds
adc
stos
mov
movsb
cmp
pop
inc
lahf
xchg
lret
enter
xchg
dec
mov
shrb
cwtl
outsb
add
cltd
das
pop
aam
popa
pop
test
lock
test
pop
jo
add
xor
std
imul
gs
lret
dec
cwtl
xchg
pop
jp
cwtl
adc
or
sbb
mov
and
push
push
dec
leave
mov
div
scas
or
ret
nop
xchg
pop
repnz
xchg
sbb
xchg
testb
enter
shrl
popa
mov
mov
adc
cmpsb
add
or
cwtl
pop
lock
mov
push
sbb
cmp
pop
cmpl
int3
cmp
mov
and
ja
xchg
outsb
lea
shr
mov
outsb
add
addr16
jl
dec
sub
mov
js
int3
aad
pushf
pop
popa
add
scas
cmove
sub
dec
mov
shlb
xchg
mov
shlb
test
sbb
xor
cmp
mov
repnz
cmp
mov
add
lds
sub
adc
xor
mov
fists
andb
jbe
pop
adcb
mov
lds
pop
xchg
pop
or
shll
sbb
and
cmp
inc
cli
cmp
je
mov
out
adc
sbb
jae
dec
imul
das
es
and
pop
shrl
test
inc
jbe
call
aaa
sub
dec
fdivrl
adc
mov
cmovb
jge
dec
jns
sub
or
xlat
adc
mov
adc
adc
jecxz
jnp
mov
stos
jmp
mov
or
out
ret
add
adc
insb
jne
sub
insb
and
sbb
add
and
cmpb
add
and
repnz
popf
int3
pop
inc
xchg
adc
stos
lods
and
sbb
push
scas
jae
push
cpuid
test
cmp
jl
sbb
jb
dec
sti
lea
movsl
jge
sbb
and
in
lods
aam
movl
push
sub
lsl
xchg
lea
mov
dec
add
incl
adc
in
mov
push
jle
xlat
cld
or
or
push
cmp
adc
insb
and
data16
sbb
and
aad
add
add
and
mov
push
insl
fidivrl
decb
xor
ljmp
ret
enter
outsb
push
pop
test
fsubrs
jp
fiaddl
and
out
fimuls
fnstenv
mov
add
add
xchg
mov
push
push
jle
shl
mov
sub
mov
push
and
ret
popa
jne
stos
sub
pushf
xor
sub
pop
xchg
pop
inc
pop
pusha
mov
add
push
outsl
lods
aas
rcrb
push
add
push
gs
cmpsl
push
push
dec
stos
sbb
je
subl
mov
and
sub
stos
xchg
shll
xor
sub
es
out
push
jae
add
jae
xchg
push
out
cmp
xchg
and
xor
daa
shll
jns
jl
lods
or
and
or
dec
sti
jl
cmp
sub
jge
jg
mov
cli
call
in
and
sub
rorl
mov
mov
jmp
xor
punpckhdq
fs
aad
xlat
sahf
mov
pop
les
pop
sti
adc
push
cmc
sbb
sahf
dec
sbb
daa
mov
filds
dec
mov
sbb
in
lahf
daa
sub
fadds
pop
in
sbb
sbb
mov
sbbl
scas
or
and
mov
inc
sub
je
fistl
adc
xlat
fldt
pushl
jecxz
cs
xor
cmp
cmp
repz
pop
lahf
out
cli
xchg
add
out
repnz
push
pop
sub
xchg
add
adcb
pop
xor
xorb
cmp
insb
iret
movsl
nop
addl
imul
fisubrs
pop
push
xor
xor
or
inc
dec
out
loopne
mov
jae
mov
dec
inc
nop
or
xchg
iret
mov
adc
lods
sti
jp
mov
inc
mov
gs
cld
or
mov
and
clc
or
or
adc
adc
sub
loopne
es
cli
adc
pop
movl
inc
inc
loopne
cli
push
dec
xchg
fucomp
sbb
iret
jne
add
incl
aas
or
adc
dec
hlt
shrb
cmp
js
or
or
sbb
popa
adc
xor
xchg
and
sti
int
add
push
or
pop
test
lahf
push
nop
dec
xlat
notl
lea
push
cmpl
lods
lret
push
push
mov
mov
in
or
imul
jne
or
hlt
inc
mov
push
push
cmc
or
rcr
add
sub
sbb
jle
push
push
dec
adc
arpl
sti
jmp
sbb
arpl
pusha
push
int
mov
clc
mov
ja
mov
sbb
pop
js
or
mov
mov
and
pop
add
push
push
es
fsubs
jb
lea
imul
mov
dec
stc
or
sbb
push
pop
or
fadds
insb
fsubrl
and
push
mov
mov
pop
or
adc
pop
dec
cmc
add
shlb
hlt
imul
insl
inc
insb
outsb
pop
mov
adc
mov
sbb
stos
int3
bound
fucomi
sbb
pop
fnstenv
lds
dec
push
add
mov
adc
push
push
dec
shll
mov
lret
push
mov
addr16
ss
adc
adc
fimull
mov
loope
les
fisttps
call
data16
jecxz
inc
inc
ljmp
clc
sti
inc
fcoms
xor
mov
adc
push
dec
jge
test
pop
dec
xchg
cld
cmp
jne
and
jbe
cmp
aaa
pop
push
sub
mov
mov
dec
mov
xlat
addl
push
pop
lock
pop
mov
add
cmc
movsb
xchg
fisubs
int3
xor
adc
into
cmp
inc
int3
or
addr16
xchg
or
adc
arpl
adc
je
push
rolb
sub
xchg
mov
and
push
fadd
push
sbb
cmp
mov
out
loopne
xchg
test
inc
inc
mov
clc
cltd
hlt
testb
jae
fcomp
or
pop
or
add
push
jp
mulb
xor
xor
push
or
and
pushf
mov
out
adc
bound
sub
xchg
xchg
sbb
sbb
fsubs
sub
jns
es
les
jns
shlb
push
jmp
pop
dec
jle
jmp
scas
push
push
pop
scas
sbb
dec
out
push
call
jnp
movsl
inc
mov
cs
xchg
test
sub
inc
or
cs
mov
pop
int
mov
jb
add
xor
and
xor
pusha
mov
mov
xor
lods
mov
sub
sbb
push
xorb
shl
or
scas
sarb
adc
push
and
insb
pop
cltd
mov
call
movsl
dec
xor
sub
sub
mov
loop
mov
mov
cwtl
inc
mov
mov
outsl
push
inc
inc
je,pn
clc
or
mov
mov
movsb
pop
sub
jmp
mov
stos
sbb
and
adc
adc
fisubs
add
xor
mov
jmp
or
sub
psubb
jecxz
push
dec
pop
sbbb
mov
adc
push
push
es
clc
xchg
pop
rorl
pop
push
sbb
imul
mov
and
mov
call
jle
dec
pushf
sbb
lock
jb
cltd
mov
shrb
pop
xchg
clc
push
inc
mov
mov
add
push
adc
pop
dec
movsb
sub
add
or
sub
push
mov
mov
or
rcll
je
or
or
test
sarb
shlb
sbb
fisttpl
stc
mov
xchg
cmpsb
daa
dec
add
lds
loop
add
cmpsb
mov
push
sbb
je
jmp
mov
push
jmp
lea
sub
xchg
mov
pop
lea
loop
sbb
jp
or
add
adc
cmp
push
dec
sub
add
pop
push
add
push
add
ja
pop
sbb
xorl
xor
dec
aad
jp
mov
jo
xchg
mov
imul
add
sub
pop
pop
pop
pusha
iret
loop
add
in
lods
shrb
xchg
xor
loopne
sbb
jb
in
push
lea
jb
in
sbb
push
and
dec
outsb
xor
sub
inc
rcrb
cs
adc
cmp
adc
jo
push
stos
jae
in
mov
or
inc
xchg
ret
dec
negl
dec
js
mov
stos
dec
inc
xchg
rolb
test
cmpb
cmp
add
sbbl
gs
repz
mov
addr16
lcall
inc
inc
or
pop
mov
pop
add
and
test
scas
push
cmp
test
cmp
rol
pop
pop
sbbb
lea
dec
pop
sub
pop
sarb
fistps
pop
inc
js
xchg
push
adc
jl
jmp
ficompl
mov
subl
pop
imul
sbb
popa
sarl
cmc
and
pop
jae
insl
or
or
aas
test
outsb
jmp
aaa
ret
pop
mov
subb
roll
pop
out
cmp
lahf
into
setle
push
jg
and
add
addb
mov
inc
ret
loopne
movsb
es
cli
mov
sub
cmp
inc
or
mov
add
fsubs
test
ret
push
aam
sti
cmp
sti
mov
mov
inc
lds
das
out
mov
lea
js
and
inc
xor
outsl
cmpb
add
sub
adc
mov
push
mov
int
mov
adc
rcl
pop
xor
pop
sub
add
jg
add
jnp
je
jbe
mov
jns
es
or
inc
and
push
stos
out
pop
sti
dec
push
pop
call
adc
leave
sub
or
push
mov
or
xor
pop
loopne
mov
push
lahf
pop
mov
push
jo
pop
cmp
insb
movb
fwait
xchg
push
mov
push
sbb
mov
push
scas
add
add
mov
lahf
mov
int
icebp
jbe
sub
pop
repz
fbstp
sub
jmp
mov
jmp
in
rcll
sub
push
inc
test
dec
cs
fldl
push
push
les
jmp
fstl
add
xor
out
cmp
inc
inc
out
cmp
fidivl
adc
les
paddd
sub
cmpsl
jle
mov
and
xor
inc
cld
or
add
xchg
mov
mov
ljmp
push
sub
addb
ljmp
imul
addl
xchg
inc
adc
jnp
repz
inc
dec
jmp
fisubrl
shrb
pop
or
adc
lret
push
arpl
ficoml
mov
daa
pusha
sbb
pop
sub
sbb
adc
inc
push
mov
push
cmp
jbe
mov
xorl
daa
cwtl
stos
push
dec
lods
add
insb
clc
mov
pop
lea
sub
sub
inc
imul
add
ljmp
or
push
and
mov
loopne
aam
pop
sbb
add
testl
jb
mov
popf
jnp
mov
cltd
jl
adc
jo
ficomps
pop
mov
or
or
scas
iret
mov
adc
push
aaa
jns
inc
je
fadd
xchg
outsb
and
add
in
call
out
push
scas
mov
movsb
daa
incl
jg
jmp
int
js
lock
rolb
and
incl
sahf
scas
addl
pop
jbe
xor
inc
movsb
xchg
ja
push
call
xorl
repz
mov
cmp
fistpll
and
add
rclb
sub
dec
mov
or
aam
mov
add
data16
mov
cmp
ljmp
pop
add
lahf
add
daa
mov
sub
push
add
push
call
repnz
mov
mov
and
push
xor
aam
sub
xchg
incl
adc
and
std
push
sete
shl
sbb
xchg
hlt
ds
jne
xchg
push
in
stos
mov
or
cmp
sarb
ret
pop
jg
cmp
adc
dec
out
xor
push
pop
pop
push
add
repnz
into
fsubrs
rcr
sub
jecxz
rol
mov
cmpl
lret
push
fimuls
mov
mov
ret
cmpb
xor
push
call
add
push
incl
inc
cmp
jl
cmpb
add
hlt
or
addb
or
jl
aaa
adc
fbstp
inc
jge
mov
jo
outsl
and
in
out
xchg
or
das
arpl
add
call
lods
pop
adc
jecxz
clc
fdivs
popa
xchg
in
adc
mov
loop
aaa
mov
push
ret
outsb
hlt
and
add
xchg
aaa
mov
pop
jg
add
push
into
push
mov
xchg
mov
push
loop
xchg
sub
and
data16
jbe
or
cli
or
lfs
in
inc
add
or
shll
xorb
dec
hlt
push
xchg
cmp
std
add
mov
ret
add
in
data16
cmp
into
jne
fucomip
jg
sub
shll
add
arpl
pop
xor
push
xor
rolb
rorb
pop
cs
call
jb
push
mov
mov
or
mov
mov
dec
fcomi
addb
addb
xorb
add
add
mov
sub
add
rcrb
inc
adc
popa
add
xchg
pop
push
or
pop
in
adc
mov
xor
dec
mov
lahf
adc
out
adc
mov
add
jo
xchg
inc
fbld
and
fwait
in
pop
dec
pop
sbbb
sarb
sub
fistps
cld
jbe
lea
xchg
push
add
sub
jle
add
adc
mov
adc
push
push
aam
scas
sub
push
outsl
movsl
xor
gs
bound
inc
popa
adc
mov
lock
and
aas
or
les
leave
add
mov
xor
xorl
dec
sbb
jecxz
ret
mov
or
inc
xor
or
cld
add
mov
in
mov
clc
jmp
jmp
push
inc
ss
test
inc
and
in
add
out
int
pushf
jle
xchg
movsb
cmpsb
in
dec
insb
pop
pop
fisttpl
insb
fstpt
dec
and
daa
mov
call
lock
cmp
scas
mov
faddl
nop
sub
or
ret
add
sub
icebp
jmp
xchg
push
mov
insb
jns
jp
push
filds
popf
mov
inc
in
rcrb
xchg
jmp
call
dec
dec
dec
dec
cs
les
andl
inc
inc
xor
jge
xor
xor
cmp
xor
xor
add
movsl
loop
mov
inc
cmp
xor
inc
inc
xor
in
xor
inc
das
divb
inc
inc
inc
pop
jae
repz
ss
insl
inc
cmp
in
xor
jne
inc
scas
verw
xor
xor
outsb
je
rcll
xchg
xor
push
dec
in
inc
xor
ss
inc
lods
or
xor
pop
jle
aaa
xor
xlat
pop
aas
adcb
ds
adc
sub
sbbl
gs
sbb
or
dec
lods
ljmp
cmp
jo
xlat
imul
scas
or
mov
push
pop
dec
loopnew
add
mov
push
add
adc
inc
add
rol
test
ja
xchg
sub
sub
adc
cltd
lea
pop
popa
sub
test
inc
or
rcrb
or
lahf
inc
xor
popf
jp
add
lcall
push
push
mov
inc
xlat
mov
xor
ja
add
push
push
mov
shrb
call
or
stos
jb
push
inc
jne
aaa
lea
outsl
inc
adc
add
add
cmp
lret
inc
mov
lret
mov
mov
loop
or
test
int
inc
sti
decl
jne
dec
fdiv
adc
xchg
addb
shll
shrb
jg
cmc
add
or
jle
mov
mov
add
in
jge
xchg
add
sbb
inc
cmpl
and
add
icebp
pop
pop
cltd
add
mov
mov
or
xchg
push
adcl
dec
lret
dec
lret
jns
std
inc
in
cld
ljmp
out
insl
imul
sbb
inc
mov
xchg
das
jl
out
xor
jnp
mov
mov
ja
fs
push
push
popf
arpl
dec
and
inc
xor
cmp
cmp
enter
or
subl
enter
or
sbbl
lds
rorl
or
in
mov
or
loopne
mov
mov
adc
pusha
ret
rorl
stc
or
imul
imul
jp
loopne
mov
ret
stos
dec
loope
sbb
int3
or
mov
xchg
lock
jl
cld
xor
rorb
add
aad
sbb
pop
aas
inc
cmp
jle
adc
or
push
adc
lea
adcb
mov
mov
cmp
roll
stos
and
xchg
push
frstor
ja
loope
nop
jnp
cs
dec
pop
shll
cs
push
insb
scas
cmp
mov
cmc
popf
adc
or
adc
and
ret
mov
adc
in
mov
bound
xor
add
gs
xor
push
leave
mov
mov
in
push
rorb
jmp
push
rol
mov
pop
fbstp
adc
ljmp
rcrl
mov
test
shlb
mov
test
and
cmp
sub
clc
add
pop
xchg
insl
cmp
loop
xor
cltd
xor
mov
movsb
call
data16
insb
cmp
repnz
adc
sbb
aas
mov
das
adc
xchg
xor
pop
jecxz
imul
sub
push
bound
fdivl
push
mov
push
xchg
add
pop
lds
sbb
sub
sbb
pop
sub
or
fsts
cmp
adc
push
or
out
testl
ljmp
stos
jbe
movl
fsts
les
and
fadds
push
addr16
mov
lahf
pop
cmp
adc
enter
inc
or
ret
add
ja
or
jo
adc
add
flds
push
sbb
jge
pop
sub
cmp
rclb
vmread
incl
push
lock
jnp
ds
in
or
inc
pop
or
push
into
out
xchg
fildl
mov
xlat
cli
push
mov
out
push
xor
pop
imul
mov
or
in
dec
cmp
sahf
cmp
std
pop
loope
fwait
jp
jl
push
push
daa
xor
xlat
jl
in
cli
push
mov
mov
dec
mov
xor
es
sbb
stos
sub
cmpxchg
fcompl
das
fsubl
push
xchg
push
psubsb
jbe
inc
decb
push
popa
sbb
xchg
add
ja
xor
mov
test
inc
xchg
inc
sub
mull
les
cli
sbb
cmp
rcrl
or
stc
andl
popa
mov
icebp
pop
icebp
add
lds
test
sub
push
pop
mov
inc
jmp
push
mov
adc
sbb
jge
adc
or
pop
pop
add
call
xor
dec
aam
cs
push
test
jo
mov
mov
mov
pop
add
out
or
pop
cs
inc
jnp
jp
shll
scas
dec
adc
dec
sub
rorb
mov
loop
cmp
jg
sub
cmc
push
mov
mov
icebp
mov
mov
jno
cmp
adc
jbe
push
out
inc
addb
out
sub
xorb
rcrb
dec
iret
dec
subb
outsl
sbbb
lahf
mov
mov
nop
mov
repnz
mov
mov
in
call
inc
sub
cmp
insl
aam
insl
fadds
lcall
sub
mov
xchg
leave
jge
sbb
daa
in
jne
sbb
and
addr16
push
imull
push
in
cmpl
je
aas
mov
fwait
stos
imul
rcrl
dec
sub
push
or
xchg
mov
repnz
jnp
inc
sbb
sub
jns
xchg
shl
dec
jp
fcmovnb
in
sub
add
sbb
sub
divb
loopne
test
mov
movsb
mov
cs
dec
notl
inc
aas
icebp
pushl
xor
mov
sbb
fdivl
call
cmc
mov
inc
mov
fcoms
jbe
dec
inc
sub
jae
mov
sbb
aas
insb
je
gs
lea
sbb
repz
sbb
aaa
add
add
sbb
and
adc
adc
mov
fs
call
je
or
subb
bound
lret
sbb
push
inc
pop
sub
outsb
cmpl
insb
mov
cmp
jl
loope
inc
dec
mov
add
addb
outsl
in
clc
jle
test
js
cmp
js
cmp
mov
sub
lods
pop
sbb
or
cs
in
push
je
push
in
add
jmp
push
sarl
sbb
cmpsl
add
ficoml
sub
arpl
pusha
jnp
sub
ss
or
lahf
test
mov
mov
add
inc
cmp
fwait
arpl
add
in
jl
fwait
sbb
push
stos
push
jno
cld
pushf
rorb
test
inc
addr16
add
scas
adc
adc
aas
xor
test
jbe
sbb
movsl
cmpl
adc
insl
stos
push
test
mov
push
js
ficompl
ja
push
lds
sbb
xor
fs
xor
mov
inc
or
mov
push
sbb
ds
adc
cmp
faddl
sub
sbbb
cmp
jle
pop
mov
inc
cmp
rcr
jae
adc
push
icebp
cld
enter
lahf
add
mov
ja
outsb
push
leave
xchg
ret
mov
adc
add
test
insl
sub
roll
and
xor
roll
enter
loop
adc
out
jmp
or
add
and
rcrl
int
adc
roll
test
adc
pop
leave
and
cmp
push
xchg
mov
jl
xchg
js
outsl
jecxz
add
rolb
ljmp
cmp
stc
pop
imul
jg
dec
push
add
test
cltd
hlt
cli
gs
push
out
mov
sbb
out
adcl
dec
repz
hlt
leave
in
or
jnp
in
push
or
pusha
inc
cmpl
mov
das
jno
sbb
jp
mov
je
sub
mov
dec
adc
push
or
mov
loope
jmp
cmp
jbe
es
dec
dec
push
fucomp
bound
jnp
or
inc
imul
jns
in
sub
or
pop
add
dec
and
mov
mov
idivl
or
dec
mov
daa
cmp
nop
imul
jg
imul
xor
scas
pop
adc
pop
nop
push
mov
daa
push
push
cs
popa
add
and
cmp
movhps
or
loopne
ss
mov
cmp
call
adc
push
push
loopne
cmp
cpuid
inc
jo
adc
test
js
xchg
stos
adc
push
mov
pop
mov
adc
in
pop
xor
sub
add
dec
cmp
lahf
add
push
or
or
outsl
je
inc
mov
sub
cld
xor
lahf
fucomp
jne
addl
jb
mov
adc
out
inc
push
add
and
repnz
jb
or
add
and
xor
repnz
xlat
pop
add
and
xchg
fisubl
or
int
test
mov
stos
mov
and
mov
lea
and
jo
push
test
mov
je
mov
jne
mov
sub
shlb
push
sti
sti
call
and
insb
daa
or
push
ret
rdtsc
hlt
push
cli
cmpsl
push
adc
sub
fsts
pop
mov
sti
xchg
and
out
sbb
mov
jl
push
popa
push
fildll
fdivs
lds
inc
frstor
lods
and
stos
dec
das
rorb
or
mov
add
xchg
xchg
or
add
fwait
inc
call
mov
iret
xor
mov
inc
je
xchg
inc
dec
cld
sbb
pushf
cmp
pushf
cmp
jo
or
or
inc
mov
jnp
push
pop
js
call
lds
sbb
ror
scas
loope
pop
ja
sbb
mov
mov
insl
jmp
mov
fstl
add
sbb
repz
cmpsl
fistpll
inc
push
and
clc
int
int
mov
fimull
pop
mov
cli
shr
into
mov
stos
add
pop
daa
clc
push
xchg
out
adc
pop
mov
sub
push
inc
fscale
xchg
add
push
add
add
in
mov
xor
or
cmp
adc
jb
testb
daa
popa
fbld
shrl
inc
and
mov
pop
inc
inc
xor
xor
and
lcall
adc
insl
cmpb
adc
adc
mov
adc
dec
jo
shll
andb
mov
insl
ret
fiadds
cmp
fnstsw
call
rolb
mov
dec
sahf
std
imulb
call
mov
mov
scas
rorl
sbb
lock
mov
sbb
pusha
jge
mov
clc
add
sbbb
stos
dec
shll
fistl
stc
pop
insl
sbb
sbb
xor
sbb
aaa
adc
add
call
test
or
and
lods
inc
cmpsl
dec
inc
data16
lea
shlb
xchg
es
in
or
add
rcrl
dec
sub
xor
roll
dec
push
xor
into
lods
out
sub
push
aaa
ja
and
add
cld
add
jmp
ljmp
pop
jmp
iret
ds
dec
sub
fwait
mov
jmp
inc
jne
sbb
or
adc
mov
jmp
pop
or
sbb
and
add
push
shrb
in
pop
ljmp
imul
adc
call
dec
add
push
xchg
cs
add
mov
dec
flds
and
outsb
sbb
mov
mov
adc
lahf
or
in
cli
add
jmp
add
mov
pop
fucomip
adc
arpl
push
add
add
add
push
pop
add
push
or
or
andb
rcrl
aas
in
add
inc
push
xor
roll
sub
jmp
jmp
adc
adc
adc
stc
cmp
cmp
jl
jmp
sbb
dec
insl
out
add
pop
fs
add
jle
jecxz
in
jmp
int
pop
jmp
jmp
stos
dec
jge
xchg
mov
aas
and
mov
or
imul
arpl
repnz
cmp
rol
adc
add
push
add
ja
inc
pop
testl
shll
add
imul
imul
or
mov
sub
ja
call
and
fstl
xor
repnz
repz
enter
iret
xor
and
pusha
and
xorl
repnz
or
clc
data16
idivb
repz
outsl
jmp
push
sahf
test
jns
out
sahf
into
pop
jns
out
sahf
dec
fdivrs
out
sahf
call
clc
sahf
xchg
sbb
or
roll
je
pop
mov
cs
call
sub
je
push
popf
pop
in
inc
pop
add
outsb
cmp
pop
inc
mov
cmp
xor
in
inc
push
xchg
sbb
add
mov
mov
fisubrs
sbb
pop
push
lock
push
push
cmp
mov
loop
push
mov
stos
push
adc
out
call
clc
inc
cmp
pop
les
cli
push
xor
lock
inc
and
rol
push
es
cld
pop
call
ss
int
mov
das
pop
push
in
inc
inc
pop
pop
adc
jecxz
inc
mov
jns
das
das
inc
je
jb
pop
inc
jae
and
dec
das
lret
push
dec
xchg
jo
xchg
inc
outsl
ja
inc
or
outsb
fs
dec
outsl
insl
les
xchg
xlat
pop
loop
sti
pop
inc
out
paddb
cli
inc
std
and
or
outsb
xchg
popa
adc
inc
jle
je
pop
add
nop
shll
stc
aam
mov
mov
int3
loop
push
dec
inc
cmp
cmp
sub
add
mov
mov
add
callw
das
add
lods
pop
sub
test
in
imul
stc
mov
mov
or
ljmp
push
dec
inc
insb
jg
inc
ds
push
or
jge
adc
and
lods
imul
mov
push
adc
loope
push
pop
jecxz
data16
mov
sbb
jecxz
arpl
lock
inc
adc
sbb
in
and
fwait
jle
mov
sti
pusha
mov
ficoml
lahf
ficompl
fs
call
cmp
inc
notl
ss
das
push
movsb
nop
jnp
movsb
add
pop
sub
sub
mov
inc
loopne
mov
xchg
sti
das
push
inc
outsl
fdivrl
and
inc
ret
jnp
push
xchg
mov
inc
add
mov
ljmp
loope
or
ss
sub
mov
clc
adc
fisttps
insb
pop
push
jb
popa
jns
outsb
nop
mov
cmp
pop
aaa
inc
push
mov
out
pop
shr
sbb
inc
outsb
aam
sti
xor
push
das
cs
and
mov
pop
jae
pop
mov
outsl
loopne
outsb
add
sbb
inc
sahf
mov
sub
xor
xor
or
mov
add
sti
mov
push
jnp
xchg
add
sbb
xlat
add
add
xchg
add
xor
pop
xlat
test
inc
movl
fcoml
xor
mov
aam
mov
clc
add
adc
or
cmc
jns
cmp
fisttpll
push
pop
jmp
push
xor
je
pusha
enter
mov
adc
or
adc
push
ja
cmp
fmull
in
lock
pop
call
pop
push
stos
or
ret
lahf
mov
aas
xchg
daa
call
mov
xchg
xlat
orl
jp
dec
push
push
shrb
leave
inc
inc
push
dec
or
inc
stos
addl
js
mov
and
adc
adc
das
outsl
sub
sub
sub
dec
aaa
ret
in
jo
jae
push
xchg
mov
pop
test
mov
cmp
add
out
pusha
jmp
mov
xchg
mov
mov
pop
mov
and
sbb
das
adc
jb
add
mov
sub
in
or
push
sarb
iret
add
cmp
and
jns
mov
inc
addr16
stos
popf
rorl
mov
inc
and
jmp
adc
cmp
fsts
xor
pop
call
adc
loopne
jns
out
sahf
enter
mov
pop
inc
repz
push
incl
ret
outsb
gs
and
inc
rorl
sub
and
nop
cmpl
xor
into
or
push
mov
out
jne
data16
add
mov
fiaddl
out
push
mov
arpl
fs
jo
push
bound
cld
jae
jae
lcall
ret
call
aaa
inc
fs
or
jp
dec
or
fcmovbe
mov
fstpl
clc
adc
rolb
mov
sbb
push
mov
push
inc
inc
das
jg
xor
xor
pop
mov
push
push
sub
dec
xorl
pop
and
dec
leave
mov
lds
jb
mov
or
movsbl
dec
mov
loopne
mov
inc
push
ja
cmp
push
inc
jne
popa
call
push
lods
and
or
adc
int3
arpl
add
sub
sbb
mov
stos
sbb
ret
push
stos
fdivrs
pusha
add
lahf
push
add
lea
or
pop
adc
movb
cwtl
pop
push
adc
mov
mov
pop
pop
or
adc
lods
les
push
out
cli
push
add
sti
push
shr
mov
rolb
jecxz
lock
mov
clts
add
sbb
out
push
sub
cmp
pop
push
inc
rclb
or
pop
test
jne
insl
jmp
std
inc
adc
adc
push
add
mov
aaa
mov
loop
inc
insb
out
push
cs
mov
jne
std
mov
das
lods
jb
jle
mov
in
dec
dec
sbb
add
or
push
add
adc
add
pop
in
cmp
push
or
or
or
or
unpckhps
add
in
insb
rcl
and
ss
mov
aad
adc
or
adc
pushf
pop
add
test
rclb
jmp
inc
nop
or
or
rolb
sbb
or
psrlq
ljmp
mov
lods
and
add
jae
add
pop
shll
sub
gs
jecxz
scas
rep
pop
sbb
add
sub
shr
rolb
sarl
in
add
ljmp
testl
dec
jb
or
add
or
rcrl
out
mov
test
pop
test
push
push
xlat
test
cmp
call
stos
int
inc
popa
xor
push
scas
mov
je
mov
mov
sub
jne
ds
or
je
std
in
outsb
xor
add
mov
mov
mov
cmpl
mov
cmp
mov
sub
adc
add
decl
or
sbb
push
adc
cmp
adc
jl
in
add
arpl
or
and
or
add
cld
add
add
jge
outsb
jl
in
adc
jle
push
add
sbb
mov
decb
and
mov
cmc
daa
inc
fisubrs
adcb
or
into
cmp
mov
outsl
test
loop
adc
dec
fildl
xor
test
dec
push
push
lods
dec
or
rol
dec
sarb
push
mov
push
in
push
xchg
xor
push
inc
dec
cmp
nop
dec
loope
sbbl
addb
xor
mov
jg
shlb
pusha
fisttpl
xchg
adc
je
inc
xor
or
rorb
inc
add
leave
xchg
sbb
pop
popa
mov
inc
ret
jge
push
add
mov
jmp
iret
inc
shr
testb
add
frstor
adc
mov
call
mov
lea
or
dec
fisubrl
or
push
adc
xor
rorb
insl
divl
adc
adc
cmpl
mov
push
out
mov
inc
sbb
pop
push
or
rcl
add
inc
popf
mov
push
test
and
xor
inc
push
adcl
jae
mov
call
out
scas
lock
cmp
call
xor
add
mov
jae
add
mov
add
mov
mov
inc
sbb
andps
inc
movzbl
and
lret
xor
inc
scas
mov
outsl
sbb
loope
shll
mov
dec
inc
movsl
orw
xor
mov
mov
dec
daa
or
add
outsb
pop
adcl
cmp
movsl
jbe
movsb
shlb
pop
xchg
sub
jl
jle
into
jle
rorb
and
mov
or
orb
jmp
popa
aam
adc
jbe
je
add
inc
inc
mov
mov
or
add
xor
mov
imul
dec
ss
add
movsl
adc
mov
mov
push
sub
mov
jg
mov
mov
sub
mov
mov
mov
push
mov
xor
pop
inc
es
mov
rolb
lahf
or
mov
add
imul
adc
addb
pop
sub
jmp
mov
pop
loopne
mov
jbe
xor
cmp
and
lret
inc
add
sarb
mov
mov
pop
clc
movzwl
or
filds
mov
sbb
or
sbb
or
mov
leave
mov
push
mov
fisttpl
or
bound
mov
adc
shrl
lea
sar
add
outsl
bswap
add
dec
jg
fs
mov
lcall
fcoml
dec
pcmpeqb
adc
or
dec
adc
inc
or
pop
mov
sti
or
dec
lret
or
or
lock
or
or
ja
movsl
inc
adc
aaa
cmc
jo
cmp
cmp
aaa
fcoms
inc
test
enter
jo
and
jbe
inc
add
push
sbb
inc
adc
jae
adc
jae
sti
dec
sbb
jno
cmp
addb
adc
arpl
arpl
xchg
jg
add
pushf
inc
ret
jae
sbb
jne
je
add
add
sbb
pushf
jne
sub
adc
mov
sti
cmp
ret
jo
sbb
jnp
push
lods
pop
dec
dec
sub
xor
loope
add
ja
or
mov
mov
dec
jbe
lods
mov
clc
push
jge
mov
fucomp
adc
jne
jno
mov
mov
push
or
mov
or
cwtl
loop
push
insb
sbb
add
mov
ret
cltd
ret
in
loop
sub
dec
jmp
pop
out
xor
cltd
cmp
sub
icebp
call
inc
repnz
pushf
xor
mul
xor
and
xchg
loopne
push
cld
sbb
out
jl
cmp
dec
add
inc
jo
cmpl
sub
sub
sbb
jo
add
pop
push
xor
mov
std
lea
mov
ljmp
dec
add
fiadds
lds
add
add
mov
pop
mov
jne
lods
lods
add
or
jae
and
add
push
add
push
lods
sbb
int
dec
sub
cli
push
dec
dec
lea
lods
xchg
repz
push
std
inc
adc
jmp
loope
jmp
mov
aas
adc
cld
pop
jmp
invd
push
sbb
fbld
inc
add
daa
push
sub
es
xchg
sub
push
decb
inc
je
and
je
pop
pop
je
sbb
xchg
adc
xchg
sbb
inc
and
xor
iret
pop
adc
xchg
xor
or
inc
pop
mov
ljmp
rclb
inc
fwait
or
sarb
inc
dec
fisttpll
push
and
push
call
sub
adcl
sbb
xor
dec
add
bound
andb
lds
test
xor
aad
jae
add
test
fwait
dec
xor
pop
aad
adc
adc
fs
cmp
inc
movsl
inc
nop
dec
out
or
cwtl
or
jecxz
icebp
or
js
push
or
xor
icebp
lea
rcl
or
jmp
or
stos
mov
std
lea
add
sub
js
aaa
mov
or
pop
or
mov
and
pop
sub
add
jno
push
shlb
sub
fisubrl
sub
xor
or
jp
orb
lret
sub
mov
pop
adc
push
call
ret
mov
data16
or
ret
push
insb
in
shrb
inc
lock
loopne
je
lea
jmp
shl
mov
xor
fisttps
push
fcoms
repz
dec
rcll
ss
or
mov
jecxz
push
dec
pop
mov
loop
insl
push
je
mov
pcmpgtb
push
mov
inc
mov
xor
push
push
loope
je
pop
pop
mov
jne
sub
adc
shll
push
push
or
ljmp
push
addr16
or
adc
xor
push
adc
xor
pop
cmp
lods
outsl
sbb
mov
cmp
or
mov
dec
jb
shrl
push
jo
push
mov
xor
sub
das
ja
cmp
add
push
imul
sbb
pop
ds
call
jl
cmp
inc
mov
or
cmp
push
jne
pop
sbb
sub
nop
and
sbb
adc
or
or
rol
ja
mov
mov
js
mov
cmpb
mov
mov
insb
mov
mov
rcl
lret
sbb
and
pop
in
mov
clc
das
jns
pop
mov
sbb
es
jbe
call
pop
xchg
jo
iret
pop
bound
cli
jmp
mov
jecxz
stc
xor
out
pop
inc
add
jne
sti
mov
mov
mov
add
je
in
outsb
jecxz
push
iret
mov
test
mov
testb
cvtdq2ps
jae
movsl
jo
add
mov
and
cmp
lea
loop
jmp
aad
xor
push
lahf
sub
repnz
adc
dec
push
popw
add
cmp
inc
push
fildl
adc
add
push
mov
and
insb
outsl
add
imul
pop
lret
sbb
push
aaa
or
ljmp
sub
cmp
lea
or
loope
pushf
daa
cmp
aas
add
mov
orl
outsb
pop
xor
ret
add
call
adc
stos
add
jnp
sbb
add
popf
loop
fbld
or
es
xchg
add
cmp
and
mov
add
push
mov
lock
bound
ja
test
mov
mov
inc
scas
test
mov
mov
sbb
mov
test
out
inc
pop
push
push
push
push
cli
ja
sub
pop
lcall
xchg
sub
fists
add
mov
adc
sbb
mov
lret
cwtl
insb
adc
mov
imul
mov
rorl
andb
xchg
mov
push
sbb
xchg
xchg
pop
imull
adc
jl
jmp
lret
xchg
inc
push
imul
mov
dec
cmp
cs
cmp
lods
fstl
push
adc
rolb
cwtl
mov
bound
and
std
push
insb
cmp
into
add
das
jecxz
fiadds
gs
daa
inc
sbb
scas
adcl
push
lahf
fcompl
and
adc
fadds
or
mov
lock
inc
loopne
or
xchg
cmp
pusha
fsub
sub
xchg
mov
push
sub
aam
push
cmp
leave
pop
gs
pop
jmp
xor
pop
sub
cmp
insb
or
jb
cld
sub
jg
cmp
cmp
insl
mov
imul
mov
test
ljmp
scas
pushw
push
testl
gs
arpl
incw
je
add
jge
adc
enter
fwait
adc
outsl
clc
pop
mov
nop
arpl
fwait
mov
dec
cmp
pusha
adc
pop
movsl
and
pop
sub
cmp
ja
pop
cmp
decl
sbb
imul
xor
loope
mov
dec
sub
jae
loop
dec
jae
add
adc
dec
inc
outsb
jne
inc
sub
push
mov
sbb
fcoms
dec
fcoml
inc
pop
cmp
popa
popa
jmp
mov
push
mov
fmuls
mov
or
push
mov
adc
inc
ret
cs
repnz
fnstcw
sub
mov
lods
std
jmp
sbb
add
std
or
and
pop
mov
aam
imulb
pop
imul
add
add
fimull
and
xchg
pusha
imul
testb
scas
je
ss
xchg
sub
notl
idiv
ds
sbb
adc
aaa
lods
sti
or
insb
push
mov
jbe
rorl
push
push
jne
cmp
add
and
or
mov
lcall
je
das
je
dec
insb
sub
je
pop
sbb
mov
mov
jg
mov
imul
mov
icebp
xchg
push
je
lods
pop
je
fs
or
jmp
push
sbb
jmp
jl
fiaddl
in
loopne
fs
lahf
xchg
jg
mov
call
sub
mov
data16
fldenv
test
jmp
inc
roll
xor
leave
add
cld
mov
adc
hlt
aam
xor
vmovmskps
sub
popa
add
pop
adc
scas
mov
call
xchg
adc
stos
add
mov
movl
icebp
rcrb
cmpl
mov
add
testl
paddusb
jnp
mov
mov
aad
inc
push
mov
mov
test
add
adc
adc
or
cli
and
inc
xor
nop
test
jp
movsb
jle
mov
jecxz
mov
pop
add
test
and
lea
or
mov
mov
push
or
cmp
das
cmpsb
pushf
mov
mov
jp
pop
adc
cmp
sbb
jb
pop
add
mov
mov
in
inc
mov
inc
aas
out
mov
insl
stc
mov
subl
test
cmp
push
mov
fwait
cmc
jle
and
mov
mov
sub
add
mov
or
arpl
dec
mov
dec
jl
adc
pop
sbb
jl
sarl
and
fidivrs
pusha
sbb
xchg
push
jo
fcmovnb
xchg
lods
pop
movl
xchg
addb
cmpl
xchg
sbb
lea
notl
add
aaa
inc
or
jbe
inc
jae
mov
les
jg
cmpsb
cmp
xor
mov
push
mov
test
jl
mov
mov
jbe
sahf
aaa
subb
add
scas
mov
push
cli
sub
adc
insb
lcall
popa
scas
rorl
add
adc
pusha
mov
jl
mov
add
testb
shr
lds
inc
xchg
push
div
or
push
outsl
or
mov
push
cmp
mov
inc
fildl
dec
aad
mov
inc
mov
or
pop
sub
sbb
inc
pop
dec
jge
mov
out
push
add
adc
lgs
mov
sbb
leave
or
mov
sub
pop
cmp
mov
out
add
sbb
cmp
lahf
jne
incb
sub
mov
mov
mov
sub
add
adc
or
push
ret
fildl
loop
outsl
inc
cmp
mov
stc
call
lea
mov
jg
insl
imul
mov
mov
fld
add
xchg
out
sbbb
loop
incb
push
inc
daa
pusha
jle
mov
sub
imul
sbb
pop
sub
xchg
jle
mov
loope
ret
loope
dec
mov
and
mov
mov
js
jl
cmp
lea
shlb
pop
ja
mov
and
mov
mov
mov
sub
push
adc
sub
xor
cmpsl
rolb
jl
jmp
sub
js
add
fbstp
popw
cmp
aas
test
inc
adc
movb
cmp
or
xchg
addb
cmp
mov
mov
cld
aaa
add
in
sbbb
lock
roll
push
bound
sti
rorl
adc
movsl
jmp
mov
mov
or
out
xchg
cmpl
adc
add
aam
sbb
decl
add
adc
mov
das
xchg
push
test
or
push
lock
push
pop
mov
dec
lret
xchg
add
or
jmp
add
mov
push
jo
ds
add
mov
or
int3
jmp
addb
ja
adcl
push
mov
sbb
loop
call
adc
xchg
or
jg
push
inc
out
or
mov
mov
inc
add
mov
lock
jle
mov
push
xor
jno
push
adc
jae
jecxz
lret
xchg
inc
popl
movsl
lds
inc
outsl
dec
sbb
into
mov
pop
fidivl
add
jg
dec
cmp
jle
or
mov
cld
es
push
pop
leave
in
xchg
je
and
std
and
cmpb
or
mov
cmpl
cmp
rcrb
push
leave
push
ss
pop
ljmp
xchg
test
rol
adc
push
xchg
sbb
mov
bound
adc
ret
dec
aaa
shlb
ret
prefetch
mov
sbb
xchg
pop
sub
cmp
outsb
repz
fbstp
ss
jle
push
cmp
cmp
jmp
mov
insl
add
nop
jp
or
ret
iret
cmp
sbbb
mov
pushl
dec
insb
sbb
sbb
shl
loop
or
ljmp
lea
push
out
pop
mov
decl
dec
sbb
sar
pop
fmuls
out
mov
sar
fs
sti
sub
add
jbe
push
jne
lods
xorl
ds
add
fildll
loope
xchg
nop
add
jmp
nop
adc
in
mov
mov
mov
sbb
add
outsb
jne
mov
add
enter
ja
push
std
sahf
sub
jmp
cmpsb
mov
fcmovnbe
sti
movsb
nop
cwtl
pop
jmp
sbb
jecxz
jbe
movsl
sub
incl
fidivl
sti
or
arpl
clc
dec
mov
mov
and
sub
add
ret
shlb
and
and
push
pop
and
adc
jmp
imul
arpl
xor
or
or
or
add
adc
fcoms
leave
sbb
cmp
push
test
add
in
insb
sub
loopne
or
loopne
bound
push
mov
or
jns
or
mov
ror
insl
mov
inc
add
push
push
push
and
fdivrs
or
or
in
jge
mov
add
loopne
mov
mul
sub
and
or
sub
add
pop
mov
sbb
push
dec
mov
push
addr16
mov
rcl
cli
inc
js,pn
call
sbbl
mov
lea
aaa
data16
cmp
sub
lds
andl
sbb
xchg
jmp
outsl
inc
fisttpl
push
or
cld
xchg
push
dec
push
sub
and
add
jnp
cmp
sbb
jg
inc
mov
add
pop
fcoml
hlt
adc
out
mov
cmpsl
in
sqrtps
mov
rcr
sbb
rcrb
mov
sarl
mov
and
mov
pusha
outsb
std
mov
fadds
and
inc
inc
mov
inc
adc
xor
mov
mov
enter
and
push
and
shl
jne
mov
nop
adc
mov
adc
and
arpl
push
pop
aas
fisttpl
adc
adc
pop
or
lcall
pop
mov
push
or
xorl
inc
push
mov
adc
inc
cmp
call
cmp
jnp
mov
add
adc
pop
cli
mov
pusha
pop
adc
mov
mov
xchg
cltd
mov
lahf
popfw
xlat
inc
test
mov
sbb
pop
push
fwait
mov
adc
add
mov
aad
mov
xchg
adc
stc
or
adc
push
imul
sarl
test
decb
push
push
xor
mov
adc
mov
xor
mov
sub
adc
pop
iret
test
xchg
sub
cltd
mov
sbb
and
xor
stc
jle
test
jbe
inc
fsubs
sub
and
sub
lea
aaa
out
idiv
and
sub
fiaddl
xor
movsb
jne
adc
push
and
add
or
mov
jmp
lea
outsl
push
lea
push
push
in
lahf
call
mov
sub
push
jp
sub
jnp
je
xor
mov
mov
dec
sub
cmp
and
push
add
test
adc
pop
adc
scas
sbb
insb
pop
xchg
and
fs
mov
xor
mov
int
push
add
adc
add
push
push
lods
inc
adcb
ljmp
jo
sbb
or
ss
jo
adc
outsl
mov
or
add
pop
or
or
pushf
push
loopne
pop
dec
in
mov
or
adcb
das
fstpl
push
adc
inc
jne
sbb
filds
and
mov
fsubl
mov
outsb
pop
or
rorb
arpl
mov
inc
xchg
ret
sub
scas
lock
jmp
and
adc
nop
pop
adc
mov
pop
or
cmp
mov
pop
jne
pop
movsl
cli
push
xchg
or
rep
jp
mov
jg
sbb
adc
sub
mov
lahf
add
mov
xor
or
or
dec
mov
inc
push
mov
sahf
int
lret
addb
add
and
push
or
mov
addb
add
cmc
mov
add
pop
or
popf
clc
or
test
cmp
popf
sub
or
inc
incl
lds
mov
orl
jmp
and
push
cmp
cltd
add
lods
mov
or
and
and
and
sbbb
insb
xchg
out
cltd
push
loope
popf
pushf
mov
mov
and
cmp
shrb
pusha
lcall
rcrb
mov
iret
and
push
inc
test
cmp
les
mov
cld
cmpl
add
enter
pop
mov
jp
lods
or
pop
mov
xor
push
mov
fstpt
xchg
movsb
shll
stos
lret
add
inc
aad
or
rorl
jl
add
mov
push
enter
and
movsl
mov
push
push
sub
or
and
shr
or
loopne
leave
dec
pop
cmpb
shrl
iret
sbb
test
cwtl
arpl
jecxz
sbb
leave
adc
movsl
adc
gs
inc
stos
mov
adc
pop
ret
inc
jge
jl
dec
mov
fisubrl
dec
push
add
test
in
pop
ret
jae
or
inc
pop
jmp
addr16
or
stos
or
lods
stos
push
daa
add
test
sub
adc
retw
enter
xchg
test
xchg
fwait
dec
sub
not
ja
and
push
push
mov
inc
shrl
dec
data16
shrl
leave
sbb
add
prefetcht0
push
in
cmovbe
rcll
adc
iret
mov
les
add
add
add
adc
faddp
add
pop
cmp
shlb
jp
mov
in
mov
call
sbb
add
inc
lea
adc
mov
jb
mov
push
arpl
add
je
adc
xchg
lods
mov
fwait
iret
push
mov
loop
push
rolb
aad
adc
inc
adc
fldcw
sub
add
pop
rclb
sub
add
call
loopne
adc
adc
lock
sbb
stos
into
lock
sarl
orb
mov
in
popf
push
mov
push
adc
jg
nop
inc
sbb
sub
pop
pusha
cmp
stos
out
sub
and
or
fwait
push
imul
stc
pop
mov
or
add
bound
mov
mov
pop
pop
movb
push
xchg
incb
insb
xor
stos
decl
out
sub
push
pop
lods
jp
sub
jnp
mov
inc
adc
aam
inc
add
sbb
hlt
call
mov
or
mov
lods
aaa
push
sbb
je
pop
insb
push
cwtl
adc
cmp
sbb
mov
or
inc
xchg
ja
push
jbe
push
ret
outsl
rcrl
outsb
fdivrl
scas
adc
fsubrl
aaa
mov
mov
mov
dec
fdivr
and
fsubrs
arpl
aam
dec
jbe
aaa
aam
dec
sarb
test
push
jmp
inc
inc
int3
imul
inc
cs
enter
jnp
adc
les
cwtl
syscall
insl
mov
pop
mov
push
outsb
test
addr16
sbbb
jecxz
xchg
dec
lret
aaa
xchg
xchg
fcompl
and
dec
dec
ss
add
xor
xlat
jno
test
mov
negl
rclb
pop
push
xlat
cmp
lcall
out
inc
cwtl
aam
in
push
call
pop
adc
call
call
rcrb
adc
clc
call
int3
sbb
lock
mov
iret
out
and
and
ret
lsl
popl
orb
sbb
pop
sub
or
add
add
adc
push
mov
lea
dec
enter
and
aas
pop
mov
jle
and
push
lea
rclb
hlt
shll
mov
dec
fwait
clc
movsb
cmp
cmp
push
lcall
pop
enter
daa
cmpb
cs
sub
xor
scas
inc
les
adc
lods
pop
sbb
push
int
sub
sahf
mov
mov
loope
pop
aaa
test
pop
mov
fadds
mov
imull
push
jne
xchg
movsb
add
je
xchg
stc
pop
movsb
mov
es
out
invd
mov
shr
add
pop
pushf
inc
in
insb
pushf
inc
mov
and
mov
fists
nop
js
dec
xor
cs
push
adc
outsb
sahf
aaa
and
and
sub
push
mov
jb
or
mov
pop
inc
clc
int
and
push
or
jl
cmp
data16
push
inc
addb
ret
rcll
push
dec
sti
xchg
test
shl
xchg
sub
ds
lahf
mov
sub
add
fcoml
add
adc
mov
out
xchg
das
fiadds
ds
push
mov
call
pop
js
jo
fnsave
mov
adc
lods
loop
ret
and
add
fstpt
mov
adc
ljmp
pop
push
dec
test
adc
push
test
mov
pushf
cmp
push
pushf
pop
cwtl
jmp
push
or
out
xchg
add
ja
pop
mov
jg
adc
lret
dec
mov
test
hlt
pop
int3
lahf
sbb
adc
das
adc
in
or
cld
nop
adc
stos
xchg
or
sub
shl
test
scas
xchg
and
xor
lds
imull
inc
pop
jne
mov
popf
cld
jo
sti
pusha
xor
xchg
push
cmp
jl
clc
mull
jbe
lea
mov
sub
mov
mov
fdivs
adc
or
je
pop
push
lock
mov
inc
cmp
cmp
lret
and
pushf
inc
pop
sbb
mov
jge
sbb
adcb
or
sbb
sbb
or
ss
adc
cmc
or
insl
or
and
push
add
andps
roll
pop
daa
or
sbb
mov
sbb
dec
add
sbb
jp
pop
scas
dec
sbb
mov
pop
pop
cmp
add
lds
leave
and
ds
adc
push
xor
push
and
lock
fdivs
rorl
leave
add
add
jns
lret
cmpsl
cmp
add
addb
call
xor
mov
je
sbb
aas
lret
les
and
or
add
movsb
and
sbb
mov
pushf
and
cmp
call
adc
enter
pop
sub
out
outsb
shll
xor
data16
call
loope
and
rclb
pop
sbb
sub
dec
jae
add
ss
test
icebp
out
out
lahf
adc
inc
mov
mov
call
push
sbb
sbb
mov
mov
xor
inc
mov
sbb
jecxz
jnp
cmp
cld
xchg
test
std
inc
sbb
xchg
sbb
scas
das
adc
sahf
add
xchg
mov
int3
push
adc
sarl
test
cmp
xor
xor
xorl
mov
call
add
aas
add
pop
adc
pop
sbb
pusha
mov
mov
mov
add
mov
lods
pop
rorb
inc
xchg
call
leave
push
sbb
add
mov
sbb
pop
decl
sbb
jns
mov
mov
pop
fs
sbb
nop
mov
mov
test
andb
fld
xchg
loopne
sub
or
mov
push
lods
inc
loopne
mov
or
and
jmp
les
shlb
xchg
inc
into
movsb
and
push
cmpsb
adc
ss
shlb
hlt
sub
push
xchg
cmp
cltd
mov
test
aam
dec
add
push
orb
outsl
dec
popf
push
sbb
fmuls
push
adc
xchg
shr
out
push
scas
jecxz
dec
insb
xorb
or
xor
jnp
ss
mov
loopne
xchg
adc
adc
in
and
sbb
push
add
ret
sbb
ror
lock
call
inc
or
daa
mov
sbb
aaa
or
xor
and
pop
pop
adc
xchg
add
add
lods
cmp
add
sub
adc
jmp
add
xchg
mov
xchg
adc
mov
pop
add
xchg
lods
inc
jo
cmp
xorb
mov
jne
add
in
mov
les
mov
adc
es
xchg
inc
in
mov
decl
sbbb
lret
xor
cwtl
mov
sbb
jmp
daa
movsl
xor
and
mov
or
popl
mov
adc
adc
arpl
or
aaa
or
and
test
xor
jbe
mov
enter
imul
test
mov
shlb
and
jp
xor
and
mull
js
mov
pop
jbe
and
mov
adc
or
push
push
mov
inc
inc
imul
adc
daa
imul
call
add
jo
into
push
xchg
por
push
adc
imul
mov
sub
fstps
cmp
sbb
ljmp
adc
or
sbb
das
in
xchg
or
push
insb
and
push
jl
lock
or
adc
lods
js
or
cs
cmc
or
orb
cmp
orl
rorb
mov
pop
bound
sbb
mov
loope
dec
js
dec
jmp
inc
ds
mov
xor
pop
add
jbe
cli
add
ja
and
jb
mov
pop
xor
adc
out
test
add
xchg
mov
xor
cmpsb
xor
jb
push
str
mov
jmp
add
leave
dec
in
jmp
adc
xor
adc
loop
cli
and
pop
cli
adc
inc
push
push
inc
sarl
xor
push
add
mov
popf
and
and
dec
and
les
inc
dec
jnp
stc
popw
mov
packssdw
or
xchg
adc
cmp
sbb
sbb
or
paddb
ds
or
sbb
jne
out
enter
mov
push
adc
add
add
push
push
cmp
shl
sub
inc
and
or
and
arpl
mov
and
push
test
aas
xchg
mov
xor
call
loop
sub
popa
fadds
addr16
stos
daa
sbb
mov
divb
sti
xchg
cmp
jmp
xchg
ljmp
sti
or
insb
add
mov
lret
int3
in
adc
pusha
dec
cld
xor
jo
sub
out
jne
ret
les
push
sub
inc
adcb
inc
das
xchg
adc
xor
push
fstl
sub
xchg
jnp
rcll
je
dec
jno
es
lea
jle
sub
neg
lock
sti
cs
sub
lock
aam
add
es
xlat
and
fdivl
rolb
mov
shr
add
mov
icebp
dec
rorb
sbb
push
ljmp
adc
int3
push
xorb
adc
xor
in
mov
adc
pop
add
pop
fdivl
add
aam
mov
in
insb
lods
inc
add
in
mov
jno
add
test
pop
adc
mov
aad
jmp
jns
mov
dec
fdivrs
or
mov
test
pop
and
or
or
cmp
std
xchg
add
or
icebp
adcb
push
ror
fsubrl
sub
push
fdivr
dec
and
sub
push
adc
adc
ret
push
out
xor
inc
loop
fwait
icebp
sbb
adc
add
arpl
xor
popa
jge
sbb
and
je
movsb
xchg
cmc
pusha
xchg
mov
les
sbb
add
ja
adc
xlat
sbb
pop
and
sbb
mov
movsb
mov
into
stos
shl
add
mov
mov
mov
sub
xor
sub
les
pop
push
pop
add
push
daa
aas
pop
xor
mov
dec
into
mov
leave
repz
loopne
add
xorb
scas
adc
add
aas
jne
push
gs
or
push
mov
push
add
shrl
and
add
out
and
shl
add
and
cld
add
add
ffree
jge
jne
loop
pop
arpl
cs
jl
adc
add
xor
cmpsb
inc
xchg
mov
mov
mov
adc
lcall
subl
xor
push
dec
cs
call
sti
or
out
inc
pop
in
call
mov
mov
pop
dec
mov
adc
sub
xor
xchg
movsl
push
cld
jle
call
lods
xor
clc
jle,pt
sbb
movsl
outsl
hlt
sbb
pop
jne
jne
subl
cmp
xor
inc
and
outsl
inc
cmp
jle
arpl
cwtl
push
sbb
or
setbe
daa
dec
jb
mov
add
dec
pop
xor
mov
jg
jmp
xor
dec
cmp
in
pop
xor
push
cltd
dec
or
xor
and
mov
mov
aad
data16
push
subl
sbb
pop
inc
or
fdivl
adc
sub
push
test
or
mov
add
mov
mov
mov
jb
adc
test
clc
push
lods
ss
daa
cmp
jl
int
push
int3
mov
mov
xchg
xchg
fcoms
inc
sub
or
add
adc
loope
and
add
add
sbb
adc
popa
fwait
cmc
and
inc
inc
addl
adc
mov
push
mov
xorb
xor
test
jge
loope
push
and
stos
inc
outsl
adc
push
ret
mov
nop
and
add
ret
push
dec
cmp
insb
sbb
inc
add
vmovaps
cpuid
movaps
out
pop
call
mov
xchg
or
fimuls
stos
arpl
pop
lahf
in
js
xor
sub
sub
lds
jne
cmpsb
mov
push
xor
orl
mov
repz
ficoml
les
mov
mov
jae
adc
mov
mov
and
pop
aas
mov
push
and
jg
xor
xchg
mov
mov
jmp
xor
rolb
in
lfs
aas
push
and
adc
shr
cld
aas
cli
leave
mov
insb
call
jmp
loopne
xor
add
or
xchg
adc
add
fisubrl
sub
xor
nop
or
adc
je
adc
sub
cltd
xchg
lahf
outsl
incl
test
or
call
into
or
push
nop
aam
adcl
add
mov
mov
cmp
adc
mov
jnp
stc
cwtl
jne
test
sbb
sub
push
push
inc
add
adc
cmp
inc
out
xor
jne
fcomps
pop
shl
std
cmpb
mov
mov
or
in
jbe
sbb
xor
es
and
pusha
xor
xorps
dec
sti
sbb
ss
jmp
mov
xchg
and
push
or
loopne
sbb
ja
cmp
mov
scas
push
mov
test
add
insl
mov
sbb
sbb
pushf
int3
int
aas
jno
xor
push
cmpsb
fsubrl
std
jne
out
sub
sahf
xor
nop
add
xor
sti
arpl
and
das
arpl
ret
jae
imul
lcall
inc
add
add
insb
add
ficoml
mov
or
cmpl
inc
test
adc
or
push
push
arpl
fucomip
outsb
push
jo
add
xor
loop
push
xlat
jp
or
cmpsl
xor
jne
add
pop
adc
mov
sub
pop
push
stc
add
adc
stos
or
ss
lock
sbb
fisubrl
or
sbb
inc
adc
pop
in
or
sbb
sbb
mov
sbb
xorb
arpl
mov
pop
jbe
dec
dec
in
call
push
xchg
and
es
decb
idivl
mov
mov
mov
cmpl
jno
inc
adcb
call
inc
cmpw
out
stc
loop
sti
decb
lret
je
pop
testl
add
outsl
sub
leave
scas
sub
ja
inc
das
hlt
adcb
add
ss
lea
imul
adc
cmp
sub
pop
mov
pop
cmp
jbe
fs
or
daa
popa
and
xchg
incl
add
sti
pop
or
pop
ja
add
ret
adc
les
dec
or
cmp
jle
cs
lcall
and
or
into
push
push
sti
test
daa
call
jg
push
data16
filds
in
cmp
add
mov
out
push
mov
testb
in
cmp
mov
cmp
cmp
push
pop
or
and
int
fbld
sbb
push
dec
lea
xchg
iret
or
mov
rcr
add
out
xor
or
in
sbb
mov
adc
jmp
push
call
adc
mov
or
or
stos
sbb
not
pop
fildll
sbb
pop
sbb
repz
ds
lods
dec
mov
stos
arpl
std
adc
jg
push
stc
decb
mov
xor
xor
jp
das
xor
decb
mov
pop
lret
out
xorb
inc
nop
push
xchg
out
cmp
mov
xchg
in
mov
sbb
not
nop
lcall
add
inc
sbb
fcmovnbe
cmp
mov
mov
mov
sbb
pop
sub
ret
cmp
adc
sbb
insb
mov
ja
xchg
lods
or
adc
cmp
sar
add
inc
inc
cmp
sbb
pop
insl
inc
fstp
int
js
mov
or
dec
xchg
mov
out
add
add
cmp
popw
lcall
add
stos
inc
aas
mov
xchg
call
imull
jne
jmp
cmp
out
pop
and
mov
or
dec
adc
and
sbb
jg
in
in
mov
mov
or
inc
xorl
insl
stos
jecxz
jge
pop
inc
sub
add
lock
mov
inc
or
add
jbe
orl
repnz
imul
xlat
test
fwait
or
daa
mov
or
int3
leave
or
xchg
inc
ss
push
leave
cmp
cmp
pop
push
out
mov
pop
out
sbb
or
pop
call
fsubr
or
pop
iret
das
inc
pop
jge
xor
sbb
dec
stc
add
add
out
and
dec
cmp
lock
imul
nop
js
stos
inc
xor
bound
inc
mov
jnp
gs
inc
mov
inc
mov
popf
pop
imul
pop
mov
jge
dec
negl
aam
mov
repnz
adcb
push
sahf
pusha
insl
push
outsb
outsl
pop
pushf
lock
push
movsl
lea
push
push
pop
dec
call
int3
or
xlat
cmpl
rorb
loopne
push
push
push
call
fcomps
enter
cmp
enter
idivl
add
or
bound
ljmp
fstpt
pusha
lock
or
lock
iret
out
test
std
add
push
aad
adc
push
adc
push
push
xor
inc
pop
add
inc
sub
xor
inc
xchg
adc
repz
add
push
sub
and
imul
test
jle
sbb
dec
jp
fwait
or
cmpsb
pusha
cmp
in
push
out
mov
push
sti
sub
lds
adc
jge
outsb
nop
mov
xor
or
push
xchg
call
test
or
cmpl
test
pop
jno
push
scas
cmpsb
or
lea
mov
mov
xorl
dec
pop
dec
cmp
lock
dec
jle
in
push
sbb
pop
and
jge
sbb
add
push
enter
adc
ret
imul
scas
pop
mov
std
mov
cmpsl
pop
jbe
dec
mov
dec
stos
cli
mov
add
jbe
jmp
jle
or
push
clc
stos
les
mov
jnp
dec
cmpsl
clc
clc
push
cmp
jbe
xchg
loopne
sbb
and
xchg
cli
adcl
sbb
adc
cltd
and
xor
fsub
mov
lea
mul
orl
addb
pop
pop
aaa
cld
push
add
and
or
lahf
out
fsts
nop
mov
sti
sarl
cmp
push
mov
or
add
outsb
dec
dec
and
jnp
cmpb
push
mov
enter
inc
jl
lock
lock
pop
fisttps
fcom
pop
rcll
call
adc
movsb
inc
jecxz
mov
or
jae
call
adc
mulb
or
xor
push
pop
inc
arpl
mov
fmuls
sbb
scas
add
mov
add
sub
ds
mov
push
xor
cs
fld1
jo
fcoms
ss
outsl
insb
adc
inc
sbb
xchg
inc
mov
xchg
push
inc
sbb
ret
inc
pop
sbb
adc
mov
jle
loop
or
mov
adc
sub
mov
hlt
push
mov
and
call
rclb
jne
orps
inc
inc
mov
mov
movl
inc
sub
lds
pushf
lds
mov
negl
out
inc
leave
push
out
jb
adc
enter
loopne
add
inc
cmpsl
nop
dec
inc
push
addr16
or
adc
decl
popa
or
dec
add
sbb
inc
inc
inc
pop
mov
clc
mov
cld
in
add
pop
pusha
push
add
lea
sarb
jmp
mov
aam
fimuls
push
clc
sub
mov
mov
inc
jg
mov
mov
pop
js
jne
dec
adc
fnstsw
arpl
jo
pop
and
in
adc
and
adc
jno
in
add
inc
sub
pop
out
adc
dec
push
sbb
adc
xchg
adc
in
mov
inc
sbb
adc
xor
inc
xorb
and
pop
sub
inc
in
das
push
mov
cld
mov
mov
mov
sbb
inc
pop
das
fcoml
sub
sub
dec
push
and
jnp
xlat
jne
sbb
xor
test
daa
add
add
push
dec
add
es
mov
movsb
pop
adc
push
adc
popa
ds
call
fstps
add
cmp
pop
dec
std
call
push
sbb
fisubrs
in
push
dec
das
sti
xor
insb
wrmsr
rorb
lahf
sbb
mov
pop
cmp
add
adc
int
sbb
add
pop
cmp
hlt
pop
adc
add
fiaddl
add
std
fs
notl
xorl
jns
mov
jne
xchg
xor
adc
out
or
pop
loope
mov
sbb
and
adc
adcb
adc
lret
fwait
jmp
ljmp
push
mov
js
jge
rcrb
mov
clc
adcb
shll
jmp
mov
call
shl
call
das
add
mov
dec
jne
test
push
or
addb
jecxz
daa
std
push
call
sub
loop
xorb
ja
or
inc
inc
xchg
es
or
push
aaa
mov
subb
mov
daa
push
loope
sbb
sub
fidivrl
mov
flds
xor
mov
mov
cmp
sbb
mov
test
and
les
repnz
shl
stc
mov
jae
in
js
inc
xor
add
pusha
insl
inc
pusha
xchg
and
je
inc
icebp
les
dec
lahf
sub
stos
jmp
insb
or
test
xchg
inc
cwtl
cld
or
jl
ret
add
mov
mov
cmp
out
in
dec
daa
push
sbb
cwtl
loopne
xor
adc
or
popa
mov
neg
pushw
sbb
daa
inc
or
pop
add
out
jmp
push
out
xchg
add
ds
or
lcall
pop
loope
dec
aam
aaa
jnp
test
testb
shr
fwait
xchg
xor
out
int
sub
int
test
dec
je
add
lret
sub
jmp
andl
jbe
or
add
hlt
xor
daa
jnp
notl
jo,pt
xor
dec
and
in
push
je
and
fcomp
insb
xor
or
mul
dec
add
ds
stos
add
in
in
jno
push
outsl
cmp
cli
inc
mov
lcall
jnp
sbb
lea
dec
cs
jbe
push
jae
in
movb
fwait
ja
pop
and
cmp
cmc
faddl
or
push
push
jne
or
adc
inc
sub
mov
adc
addl
packsswb
jbe
mov
xchg
dec
mov
loope
jmp
ficompl
xor
daa
cmpl
mov
shll
and
lret
jmp
inc
pusha
sub
mov
in
jb
dec
pop
push
dec
inc
and
pop
sub
inc
mov
or
sub
sbb
mov
inc
mov
out
mov
ljmp
pop
rcrl
sbbb
mov
inc
sbb
push
pop
or
andl
inc
fistl
or
adc
add
decb
adc
or
jg
mov
push
inc
loope
and
ret
adc
xchg
and
dec
inc
jl
push
push
dec
sub
jne
and
add
sbb
loop
xor
cmpb
jne
andl
jnp
notb
adc
add
mov
fstpt
push
sbb
pusha
mov
pop
fs
in
and
jmp
out
pusha
pop
rep
loopne
dec
and
sbb
out
insb
ret
int
and
addr16
shlb
cld
cmpsb
push
pop
cmp
sub
ja
ss
add
and
ret
sbb
jbe
insl
add
and
and
add
enter
dec
jmp
test
jg
movl
mov
adc
or
add
roll
push
jle
push
nop
sub
data16
mov
mov
mov
xor
xor
call
adc
adcb
pop
inc
push
add
mov
mov
push
sbb
mov
add
call
add
or
or
ret
and
fistpl
push
les
or
fwait
adc
add
mov
fwait
push
jg
push
and
pop
cmp
inc
and
dec
pop
adc
icebp
or
inc
mov
imul
lds
push
or
insb
add
add
flds
insb
sub
test
push
jne
mov
pop
jmp
movsl
add
mov
jmp
mov
arpl
and
mov
pop
fstpl
pop
push
addr16
inc
pusha
add
aad
add
arpl
add
mov
jmp
sbb
dec
jp
and
imul
lods
ljmp
lods
and
jmp
ja
dec
jp
jo
mov
dec
cmp
mov
mov
cld
sbb
mov
imul
jae
jmp
cmp
jg
in
dec
pop
ret
add
out
add
inc
mov
sub
jbe
xor
adc
lds
in
add
jmp
ret
dec
inc
cmp
push
fbstp
lea
pop
shll
in
mov
loope
call
movsl
add
cmpsl
add
incl
mov
insb
test
cmpb
or
sbb
push
cmp
fwait
jno
cld
add
int3
jno
push
push
and
xor
sub
sub
xchg
sub
cmp
add
sub
cli
bound
xor
in
int3
es
mov
push
repnz
ficomps
testl
and
pushl
xor
mov
mov
insl
addb
mov
jb
jae
or
stos
mov
jae
in
inc
jne
pop
ljmp
pop
inc
js
fldt
jb
pop
add
and
insb
fs
adc
sbb
push
push
std
outsl
outsl
je
pop
jae
or
xor
inc
dec
inc
cs
fcomps
daa
aaa
pop
jae
and
gs
inc
inc
in
pushl
and
je
shlb
mov
push
push
add
inc
inc
fwait
mov
int
loop
xor
add
xor
inc
inc
inc
inc
sub
inc
sub
jge
xor
mov
xor
rolb
xchg
push
insb
dec
bound
inc
hlt
xor
inc
inc
adcb
add
dec
xor
or
inc
xchg
inc
push
pusha
and
inc
pop
mov
fs
or
push
dec
xchg
js
ret
add
add
adc
inc
movsb
push
mov
push
add
cmpsl
fnstenv
cmp
call
add
fcoml
or
sbb
je
addr16
call
mov
pop
inc
or
fisubs
ret
ds
cld
out
hlt
dec
add
mov
mov
ret
or
and
pop
ds
rclb
jbe
mov
fsubrl
ljmp
fidivrl
fcoml
das
push
add
sub
incb
pop
jne
mov
shlb
mov
outsl
add
mov
add
and
inc
adc
inc
or
roll
jo
xor
push
movsb
insl
mov
jbe
lret
jb
jge
outsb
incl
stos
xchg
in
mov
adc
rcl
decb
cmp
push
lcall
xor
cli
dec
pop
add
call
xchg
and
cmp
xchg
mov
add
push
call
xor
pop
cltd
and
es
iret
sub
cmp
mov
add
in
or
add
inc
ret
in
loope
jmp
dec
mov
or
inc
mov
mov
sbb
lahf
adc
push
das
jo
and
push
dec
fstpt
and
mov
push
shrl
nop
or
xchg
stc
mov
push
aam
or
mov
out
stos
or
pop
fistpll
add
xor
inc
xor
and
adc
filds
push
adc
loopne
clc
adc
iret
dec
jge
sbb
stos
ss
push
and
lret
in
jns
sbb
push
cld
dec
dec
pusha
xchg
lods
jge
mov
jecxz
add
add
je
mov
pop
lahf
cli
add
inc
mov
pop
test
addl
push
insb
xor
adc
lahf
clc
nop
and
xor
inc
xlat
add
sbb
jnp
add
or
fcomps
dec
add
ficoms
add
mov
pop
mov
sbb
loopne
pop
xchg
jo
add
cs
js
add
or
pushf
or
jae
inc
mov
mov
lret
movsb
mov
andl
mov
cli
inc
dec
shll
popa
or
cmc
rcr
pop
mov
js
and
movb
popf
add
dec
cmp
mov
ds
rep
fists
mov
push
insb
lfs
mov
mov
push
repnz
lea
mov
repnz
and
call
push
add
cmpsl
fmuls
mull
fcomps
pusha
mov
movsb
in
xor
jns
push
pushf
call
pushf
pushl
fisttpll
js
std
and
add
ljmp
jge
cmp
dec
mov
mov
push
adc
and
pop
mov
jmp
mov
jl
or
pop
add
dec
jp
sub
add
dec
or
inc
push
and
pop
cltd
leave
jl
jns
mov
lds
imul
jbe
and
mov
js
js
iret
mov
cmp
js
mov
or
add
jno
xchg
imul
out
add
sbb
add
addr16
xor
call
and
lock
inc
call
xchg
push
test
mov
ja
ficomps
and
stc
sarl
aam
ja
outsb
nop
leave
jl
je
mov
ja
sti
push
mov
shr
imul
mov
jnp
pop
cmp
fstpl
adc
add
inc
or
call
lock
mov
push
fimull
or
mov
or
mov
pusha
or
mov
lods
mov
xchg
pop
ss
jnp
lock
inc
fwait
inc
call
mov
or
ja
call
or
or
push
mov
push
ja
jp
sbb
jnp
inc
inc
pop
pop
sub
inc
push
popa
mov
scas
insb
mov
popa
mov
stos
jno
sub
shll
jne
or
add
mov
adc
mov
mov
add
punpcklbw
xchg
rcr
lea
and
bound
arpl
pop
fs
fwait
addb
call
mov
orl
sbb
loop
addb
mov
mov
mov
add
jne
adc
sti
mov
or
mov
enter
pop
movsb
or
add
cmpsb
push
jno
int3
je
testl
jo
fstpt
pop
xor
mov
mov
xor
and
bound
fstps
xlat
xor
inc
fnstenv
push
pop
ja
sub
enter
adc
cmp
cmpsl
cs
sarl
sub
test
leave
fisttpll
jb
faddl
in
fdivrl
dec
mov
dec
stc
mov
outsb
push
dec
add
xor
sahf
add
push
or
xchg
sbb
pavgw
lret
icebp
and
fldt
mov
pusha
iret
mov
loopne
mov
sbb
add
and
adc
js
pusha
lds
push
mov
enter
fbld
iret
xor
fidivrl
xchg
iret
mov
xchg
pusha
fdivrs
sti
ret
and
jb
pop
sbb
fadd
roll
xor
push
mov
dec
arpl
add
enter
repnz
sbb
test
push
sahf
inc
inc
sbb
xchg
enter
stos
fidivl
int3
out
loopne
and
scas
out
push
mov
iret
sbb
repz
jb
mov
xchg
fistl
imul
hlt
ret
mov
and
sbb
daa
fsubrs
and
and
imul
jo
dec
lahf
cmp
loope
fsin
push
push
int3
icebp
or
out
adc
sbb
mov
shl
push
enter
test
testb
in
mov
sub
jle
les
test
lods
lcallw
ds
xor
in
xchg
out
cmp
aas
cmpsl
daa
fsubrs
cwtl
sbb
out
mov
cwtl
sbb
and
xchg
cmpsb
mov
sbb
sarb
sahf
pop
lahf
fdivr
xchg
cltd
cltd
cmpxchg8b
and
test
xlat
aad
mov
jno
add
cmp
mov
or
jno
pop
pusha
mov
push
sahf
pop
mov
mov
mov
xor
push
push
cmp
ret
push
add
nop
mov
fadds
insl
or
adc
sub
fcom
cmp
xlat
and
fisubrs
sbb
or
jp
icebp
mov
push
xchg
push
stc
push
mov
rclb
add
jp
ret
inc
sbb
fwait
shrl
rcl
loope
lock
cmpsb
xor
push
test
or
scas
mov
jge
add
push
fstpl
mov
and
push
xchg
push
fdivrl
inc
push
in
fldl
mov
dec
iret
imulb
push
dec
leave
hlt
in
lea
out
sbb
in
adc
call
iret
or
xor
cmp
in
fisttpll
cltd
dec
out
lahf
les
push
push
clc
sbb
jg
cmp
mov
sbbb
dec
jle
je
jmp
inc
int3
icebp
cmp
in
add
jg
inc
mov
and
adc
pusha
xchg
mov
push
std
out
inc
outsl
inc
xor
enter
jns
add
adc
jge
call
enter
emms
xor
test
push
enter
and
adc
jg
xor
add
add
frstor
mov
pop
pop
imul
adc
cmc
mov
pop
jns
xchg
sub
rcl
loope,pt
pusha
cmpsb
push
jb
push
popa
imul
insb
test
mov
fcomps
xchg
inc
loopne
inc
lods
outsb
xchg
stos
adc
leave
mov
adc
pop
sbb
or
or
adc
add
mov
push
sub
daa
aaa
sahf
mov
sbb
popf
mov
or
fs
cltd
sarl
cmc
cld
adc
popa
xlat
and
mov
pop
dec
out
repz
adc
add
mov
and
cmp
cmp
and
add
out
fsubrp
rcrb
adc
bound
add
cmpsb
mov
and
movsl
in
jmp
adc
mov
mov
aam
call
jp
inc
lahf
icebp
popf
aam
dec
pusha
push
in
add
mov
rol
dec
sbb
leave
push
xor
ss
inc
add
jge
ret
and
pop
pusha
xchg
fsubrp
movsl
les
insb
addl
mov
mov
push
sahf
mov
adc
mov
bound
insb
jp
inc
ret
mov
add
jnp
or
loopne
out
or
push
sub
pusha
arpl
mov
sub
out
int
jb
sahf
jecxz
rcll
sub
mov
mov
mov
mov
inc
mov
sub
fs
add
sub
pushf
shlb
ror
or
in
mov
les
fwait
add
ss
adc
mov
lea
pushf
iret
pop
out
dec
push
movsl
lds
push
or
mov
and
into
push
repnz
out
imul
into
pop
mov
arpl
pusha
les
ss
ljmp
scas
mov
je
lea
pushf
mov
mov
mov
dec
jg
or
add
int3
outsb
jo
test
xor
xor
aad
mov
fcoms
test
es
inc
mov
loope
cmc
pop
test
fucomp
dec
pop
xor
inc
gs
testl
pushf
mov
add
syscall
addl
add
fwait
push
adc
scas
mov
lock
add
out
call
lea
add
aad
or
sbb
out
mov
mov
jmp
call
pop
push
and
push
push
in
sarl
add
out
jmp
cmp
jmp
xor
and
or
and
rorb
add
fisttps
jl
dec
inc
sti
xor
jae
fucom
sbb
icebp
push
sub
and
add
jl
push
sub
in
push
lcall
cmp
or
fdivl
fsubr
mov
adc
adc
mov
call
sbb
push
mov
adc
fwait
inc
or
js
pop
sti
mov
je
movsb
xchg
les
add
jne
sar
je
es
sti
push
xchg
pxor
adc
add
std
loopne
or
sub
outsl
dec
pop
insb
sub
or
push
adc
or
jns
jg
rcrb
dec
cltd
jno
push
jecxz
out
orb
fmull
cwtl
js
sbb
jo
fwait
or
mov
xchg
jecxz
imul
jo
test
out
lea
jbe
or
mov
mov
mov
cmc
mov
in
int
insb
or
or
mov
inc
pop
adc
or
mov
inc
add
int3
or
cs
nop
push
jge
aas
xchg
loopne
andb
cs
jbe
dec
rorb
xchg
gs
jmp
push
popa
jp
or
lret
adc
loope
pop
cmp
stc
or
jb
loop
inc
mov
fs
push
sahf
leave
fs
jb
fildl
pop
loop
and
insl
xchg
loopne
push
xchg
dec
je
or
inc
mov
sahf
dec
in
out
test
or
scas
sub
lock
dec
test
inc
push
jb
das
xor
jmp
ds
jnp
call
mov
orl
inc
es
or
xchg
lcall
rol
or
mov
xor
sub
std
bound
rcrl
fsts
leave
pop
jae
out
popa
nop
push
out
push
sbb
mov
cld
add
into
mov
ss
dec
dec
xchg
inc
ss
mov
mov
sbb
push
inc
cmp
add
test
or
rdpmc
fists
enter
or
mov
cmp
shlb
inc
das
sbb
jp
das
add
std
faddp
pusha
addb
call
pusha
push
xor
dec
lods
jne
xor
fnstenv
pop
popf
mov
fbld
sbb
sub
sahf
in
call
ss
in
mov
xorl
arpl
xchg
mov
lret
shrl
mov
dec
pop
or
mov
add
xchg
cmpsb
mov
les
subl
sub
sub
push
push
or
xor
outsb
js
xorl
imul
sub
or
pop
or
or
adc
jmp
out
xchg
pushl
jmp
stc
or
adc
repz
add
out
adcb
iret
push
add
paddw
insl
push
adc
call
lods
add
jmp
push
pusha
push
in
js
pusha
stos
jnp
filds
add
jmp
iret
mov
xor
and
or
push
jbe
cmp
add
cmpsb
ds
jae
fwait
jns
inc
mov
fs
sub
rclb
ljmp
pushl
add
movl
hlt
loope
scas
add
and
cmp
rclb
sbb
add
pop
dec
fdivs
and
ret
mov
rol
xchg
mov
xor
fst
push
pop
mov
cmp
sbb
ja
sbb
lods
cld
ja
push
add
mov
push
jle
or
inc
mov
mov
cmp
inc
loopne
int
das
xor
pop
mov
xchg
lock
add
std
push
or
imul
or
in
or
je
xor
stc
inc
mov
mov
mov
add
lock
cwtl
int3
subl
cmc
mov
xchg
sub
xor
cmp
mov
das
fstl
jl
add
pop
addr16
rol
and
in
punpckhdq
sbb
loope
pop
inc
lods
mov
gs
sbb
out
pusha
inc
xor
sbb
adc
cld
jg
call
lds
push
leave
les
or
ret
ret
cmp
repz
push
roll
stos
fbstp
push
mull
mov
bound
fs
js
cmpb
sub
cmp
mov
inc
fdivs
add
js
mov
jg
or
or
loope
mov
pop
in
and
mov
dec
add
jmp
inc
aaa
jecxz
mov
popf
xor
cltd
lret
movsb
and
adc
cmpsl
dec
test
out
mov
test
popa
mov
xchg
or
scas
cmp
or
mov
mov
sahf
popa
mov
adc
outsl
or
je
dec
and
dec
mov
pop
add
xor
dec
or
clc
aaa
mov
adc
cs
mov
mov
inc
cmp
push
cmpsl
ja
mov
cmp
dec
push
add
sbb
es
cmp
in
test
add
xchg
cmpsb
divb
aam
dec
jne
data16
movups
mov
scas
push
insl
aad
jnp
cmpb
sysret
or
jo
test
or
inc
stos
cmpsl
in
sahf
or
jmp
lret
mov
je
test
ret
jo
or
jge
mov
lahf
or
je
push
sahf
jne
cmp
ljmp
testb
bound
mov
xchg
cmpsb
punpckldq
inc
orb
mov
loope
sub
filds
scas
cs
sbb
mov
xchg
int3
shlb
pop
aaa
subb
cmpb
movsb
sub
inc
sub
or
scas
adc
or
and
add
loop
sub
or
pusha
sti
pop
inc
jo
mov
mov
push
xor
and
and
add
lret
inc
add
or
dec
inc
dec
push
inc
xchg
outsl
inc
mulb
imul
out
push
adcl
mov
or
jmp
outsl
jb
je
gs
fidivrs
cli
inc
jne
outsb
and
sub
push
jb
lods
sbb
mov
mov
and
in
imul
mov
cld
pop
data16
jns
push
inc
push
mov
inc
pop
mov
sbb
and
push
push
ret
daa
sbb
add
in
push
popa
mov
or
push
fs
insl
imul
mov
mov
call
mov
and
mov
daa
dec
push
dec
dec
addb
xchg
mov
pop
ret
push
push
inc
and
push
jb
add
iret
pop
dec
mov
sub
sub
mov
sub
arpl
inc
test
mov
ret
push
push
cmp
mov
mov
test
mov
mov
adc
mov
incb
cmp
lahf
adc
or
push
jns
addb
or
cmpsb
ds
sub
pop
out
sbb
insb
subb
and
lds
add
cmp
mov
ss
or
and
mov
call
mov
xchg
ret
push
arpl
jae
inc
testb
clc
imul
rclb
cmpsl
inc
outsl
dec
pusha
push
fdivs
pusha
scas
sti
mov
mov
sub
cld
mov
mov
push
sahf
das
cmc
fistpll
or
sbb
cs
jl
and
pop
call
push
mov
or
pop
sub
inc
mov
cmpb
mov
hlt
mov
adc
push
and
js
mov
push
lcall
jl
inc
in
stos
jecxz
push
std
sbb
outsl
mov
adc
push
flds
jg
loopne
mov
push
ret
fdivl
sub
je
stos
aam
imul
fwait
sahf
out
cld
and
add
xor
jns
mov
cmp
cmp
test
inc
fsubr
sbb
ffree
es
arpl
push
add
jecxz
push
loop
mov
xchg
push
push
mov
repz
pop
push
pushf
and
add
imull
inc
call
add
mov
add
or
xor
pop
inc
mov
mov
scas
lea
test
movb
rcr
push
mov
sahf
mov
fsubr
cmp
and
arpl
fidivrs
mov
mov
sbb
dec
pusha
pusha
ret
cs
iret
icebp
mov
xor
nop
enter
add
outsl
and
dec
test
enter
inc
jne
mov
dec
or
daa
mov
ds
movsb
push
test
scas
shrb
orb
cmp
sub
insb
dec
idivb
mov
add
scas
scas
nop
fistps
lea
mov
fldt
shlb
add
inc
xchg
push
mov
cmpsb
sub
lock
cmp
jecxz
mov
fwait
dec
mov
and
dec
push
add
lret
adc
clc
dec
popa
and
ss
push
mov
xchg
adc
xor
fnstcw
or
hlt
ret
pop
pop
inc
adcb
or
idiv
add
call
loope
stos
pop
or
iret
frstor
iret
leave
xchg
cmp
pause
iret
mov
cmp
lock
lret
sti
or
out
xchg
or
aaa
lea
movsb
push
insb
addl
jns
inc
stc
or
mov
aas
or
jl
push
arpl
js
or
pop
adc
fs
sti
jl
pusha
repz
iret
pop
adc
xchg
addb
popf
scas
or
xor
pop
daa
les
mov
dec
int
sub
push
sbb
inc
or
or
iret
outsb
xor
sbbb
in
pop
mov
pop
lret
push
jns
jle
stos
adc
mov
test
and
fists
cmp
lcall
sbb
fsubrl
push
sbb
and
test
mov
outsb
mov
pop
mov
push
hlt
cmp
in
mov
add
and
xor
lods
add
dec
outsb
inc
add
les
cmpsl
jne
mov
add
mov
inc
jmp
enter
loopne
inc
test
xorl
test
add
stos
adc
mov
jle
sarl
rorl
or
sub
daa
shlb
out
xchg
xchg
subb
stos
cmp
imul
fsubs
loopne,pt
sub
jne
adc
stos
xor
pusha
sub
shll
adc
mov
mov
mov
and
fldl
add
ficompl
popf
cmp
sti
or
fsubp
mov
add
mov
cmp
sub
cltd
xor
shll
loop
sbb
pop
xchg
fwait
daa
and
in
sub
sub
iret
sbb
arpl
fistpll
int3
adc
leave
adc
sbb
out
mov
sub
add
mov
cmp
lods
pop
lret
xor
imul
lock
nop
add
sbb
sbb
adc
cmp
push
ds
pushf
sbb
pop
and
xchg
dec
and
icebp
enter
lods
repnz
fisttpll
push
jmp
push
sbb
lret
cmc
je
call
or
inc
insl
lds
dec
or
jmp
push
call
add
adc
call
popf
in
or
push
pop
enter
sub
cwtl
inc
test
mov
or
lods
push
aas
and
push
add
inc
pop
push
add
clc
pushl
leave
mov
and
push
sbb
inc
ja
fs
outsl
push
inc
and
gs
testb
add
xlat
nop
cmp
adc
lea
adc
and
notb
add
sub
sbb
add
inc
mov
mov
xlat
iret
dec
int
fcmovnu
fcmovu
lret
fstp
fnstsw
loope
add
add
orb
imul
add
int
pusha
add
xor
xor
ss
cmp
lock
inc
inc
inc
inc
xchg
insb
push
and
je
mov
xor
test
mov
inc
aam
mov
jle
mov
int3
rcl
dec
fsub
xor
shl
dec
cld
add
minps
adc
sbb
and
sub
xor
roll
push
adc
mov
cmpsb
je
jl
imul
lcall
lcall
add
or
add
and
filds
gs
add
add
and
adc
rorl
sub
adc
xor
mov
and
addb
das
or
addl
out
sub
push
pop
adc
push
inc
pop
dec
push
bound
mov
clc
rcrl
and
incl
add
adc
sbb
nop
testl
sbb
out
loopnew
and
and
mov
pop
sbb
outsb
lret
cli
lea
and
outsb
jne
outsb
andb
insb
inc
jne
push
inc
dec
inc
cld
xlat
sbb
fadds
inc
add
push
jmp
lcall
fcmovbe
repz
insl
mov
out
in
outsl
insl
add
fildl
or
or
add
outsb
push
cmpsl
mov
or
pop
outsl
add
inc
jne
adc
add
jae
or
or
mov
xor
or
pop
or
cmp
imul
push
push
das
push
jo
jb
imul
cmp
and
gs
outsb
sub
shlb
inc
das
enter
dec
sub
add
add
and
add
add
fs
insb
inc
mov
roll
pop
or
or
or
or
or
fwait
or
pop
mov
dec
xor
shrl
rcrl
sarl
roll
dec
addb
shll
dec
mov
adc
push
xor
shll
dec
mov
xor
rorl
dec
mov
lret
dec
stos
push
ljmp
fcmovbe
cmp
jp
cli
roll
dec
xchg
shll
dec
cmpsb
data16
rcll
dec
xchg
push
xor
shll
dec
mov
xor
rorl
dec
mov
into
shrl
dec
scas
outsb
xor
rcrl
dec
sahf
pop
xor
sarl
dec
mov
add
inc
xor
shll
dec
mov
adc
push
xor
shll
dec
mov
xor
rorl
dec
mov
leave
shrl
dec
test
sbb
pop
xor
sarl
dec
mov
add
dec
movsl
gs
rcll
aad
xor
cmc
rorl
int
sub
in
rcrl
fst
cmp
std
xlat
adc
insl
adc
add
xchg
add
pop
push
cmpsb
push
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
add
pusha
xor
rcll
xor
or
dec
dec
sub
sbb
pop
dec
cmp
add
inc
dec
and
xor
rcll
je
add
inc
addl
inc
ret
xor
shll
cmc
adcl
fldl
aaa
adc
dec
or
xor
rcll
dec
or
xor
rcll
dec
push
push
xor
rcll
dec
or
xor
out
adc
imul
sbb
mov
add
add
xchg
sbb
or
push
and
add
add
mov
loop
inc
mov
mov
add
ret
mov
iret
or
loopne
enter
sbb
pusha
arpl
sbb
xor
pusha
orl
cmp
addb
mov
popf
add
or
mov
std
insb
xchg
mov
xchg
fstps
add
mov
adc
pop
loopne
adc
pop
or
or
add
or
sub
add
or
or
or
or
xchg
or
cmovp
adc
lcall
sbb
mov
dec
xchg
sbb
icebp
ret
fldl
pusha
add
adc
adc
adcl
adc
pop
inc
sbb
jg
sbb
nop
out
jo
mov
out
nop
fldl
or
fucomip
sbbb
push
nop
pop
lods
hlt
or
or
pop
push
and
cmpsb
sub
cmp
popl
mov
jae
fs
shlb
test
in
test
das
or
mov
add
mov
aaa
mov
mov
push
or
pushf
daa
addr16
sub
pop
sub
mov
push
or
loopne
push
xor
mov
add
imul
mov
inc
add
scas
or
add
testl
js
push
pop
jne
adc
cmp
inc
les
mov
push
add
sbb
fsubs
je
or
inc
jne
sbb
arpl
rolb
mov
or
push
xor
shl
arpl
jne
pushf
xlat
sub
fcmovnu
or
jnp
or
outsl
enter
xchg
sarl
push
or
popa
in
fisttpll
test
mov
jecxz
sub
int3
negl
push
adc
cmp
lock
aam
pop
call
add
add
pop
shrb
or
loopne
adc
es
ret
int
push
and
lods
dec
pusha
or
shrb
mov
jo
lret
paddsb
adc
mov
insl
sete
psubusb
fisttpl
clc
adc
fnsave
adc
dec
or
enter
adc
rcrb
lock
nop
in
or
lss
sbb
movsb
jo
js
andb
inc
shrd
dec
mov
lds
and
dec
out
fistl
push
movb
push
lcall
lcall
lcall
lret
add
adc
sarl
dec
dec
pusha
xor
roll
scas
rol
dec
rcr
xor
flds
pushw
adc
inc
add
sti
adcl
jne
mov
add
pop
lret
out
xlat
pop
cld
add
add
adc
cmp
mov
push
lcall
shrb
cmpsb
in
fwait
cld
or
sub
shrl
dec
cmp
xor
sarl
nop
movsb
xor
rol
dec
shl
xor
roll
xlat
imul
dec
cmp
rcrl
push
cwtl
dec
lods
mov
or
pop
pop
cld
jbe
or
pop
and
imul
imul
lcall
add
cmpsb
ds
addr16
xlat
pop
lods
add
ret
shr
dec
cld
push
mov
xor
cmp
xor
sarl
mov
dec
shl
xor
rclb
sbb
imul
jle
xchg
cmpsb
mov
cmpsb
call
jae
add
imul
imul
into
jecxz
lcall
lcall
lcall
lcall
add
cmp
dec
pop
imul
add
enter
out
testb
jmp
je
sub
cmp
pop
xor
fildl
push
mov
out
roll
or
mov
cmp
inc
scas
push
add
shll
jp
xor
rcrl
aam
inc
aam
pop
nop
cld
jb
aad
cmp
dec
add
fldl
lods
sarl
aam
xlat
lcall
add
sub
push
pop
mov
or
pop
mov
fsubs
je
xlat
fstp
xlat
add
push
or
mov
bound
cmp
push
adc
fsubs
push
add
inc
pop
divb
jo
addb
push
imul
add
or
outsl
arpl
imul
or
sbb
and
pusha
or
inc
mov
dec
fs
adc
jno
popa
jb
imulb
jne
outsl
mov
xchg
mov
outsb
inc
add
packsswb
bound
pop
adc
and
jb
inc
jnp
js
push
add
push
cmp
mov
mov
push
in
pop
inc
adc
jae
jae
jnp
outsl
fs
gs
popa
outsb
cs
gs
ret
pop
mov
test
imul
inc
push
and
xlat
movq
insl
dec
mov
outsb
xor
or
movsl
das
or
add
jnp
inc
imul
and
faddl
fcomi
inc
pop
inc
insl
pop
outsl
das
lds
mov
imul
and
xor
inc
outsb
sbb
je
xchg
push
je
push
fdivl
std
or
lods
pop
and
fs
xor
shll
adcb
aas
dec
gs
or
lock
jns
cwtl
push
push
adc
inc
mov
inc
outsb
flds
adc
lods
dec
shll
sbb
fbld
jbe
jo
gs
stos
test
fistl
pop
jns
inc
loope
lahf
add
pop
leave
dec
and
adc
popa
jne
aas
pop
mov
push
push
out
js
ucomiss
sub
rol
outsb
call
sbb
push
sbb
sub
inc
arpl
inc
add
jno
gs
mov
fs
outsb
jae
movsb
orb
lods
sbb
outsl
dec
xor
cmpsb
mov
sbb
imul
push
inc
sub
adc
fsubs
or
push
int3
repnz
pop
inc
jae
ret
mov
imul
and
es
gs
adc
xchg
and
pop
inc
mov
jo
mov
mov
gs
pop
and
jnp
jae
cmp
sub
bound
rclb
loope
xor
add
imul
inc
add
movsb
jns
stos
push
dec
fs
cmc
arpl
push
aaa
mov
fstpt
jae
and
outsb
jne
or
sub
lcall
outsl
jne
push
dec
pop
add
ret
push
inc
jno
adc
inc
imul
je
adc
inc
jae
push
arpl
sub
minps
xchg
mov
dec
or
rorl
or
mov
sti
fimuls
orb
jo
push
inc
rolb
jnp
mov
pop
or
jbe
addr16
jbe
push
sub
insb
aas
fisttpll
inc
fmuls
push
loope
popa
loop
adc
inc
imul
or
test
fidivs
push
test
in
data16
adc
arpl
insb
je
dec
pop
stc
imul
andl
in
gs
fldenv
mov
xor
repz
push
push
or
or
lret
jae
push
jmp
cmove
or
cmpsb
mov
jb
shll
xor
xchg
mov
or
je
pop
add
adc
test
cmp
pusha
and
jecxz
sbb
lcall
inc
sub
push
mov
loope
lods
push
mov
popa
imul
cltd
lock
add
outsb
push
mov
mov
fwait
and
orb
and
bound
gs
or
or
jmp
jns
add
js
inc
add
popa
roll
loope
adc
shll
jnp
bound
mov
adc
jne
insl
sahf
out
sbb
imul
and
mov
xchg
dec
imul
mov
imul
pop
insl
mov
jbe
adc
cmp
imul
mov
or
mov
inc
add
inc
add
or
push
adc
xchg
adc
imul
ret
inc
popa
imul
outsb
je
rcll
add
push
add
xchg
push
cmp
inc
mov
rclb
or
and
push
imul
mov
xor
sbb
outsb
fwait
shll
popa
bound
pop
ret
mov
adc
mov
test
data16
subl
fildl
add
or
sub
sbb
mov
add
shlb
or
pop
jno
inc
pop
xor
or
sbb
and
xor
inc
or
orb
rcll
test
sub
sbb
gs
sub
adc
cmp
fmuls
sub
adc
push
xor
or
and
adc
fwait
add
popa
jnp
cs
imul
sbb
aad
push
sub
adc
mov
jae
push
movsl
dec
ret
mov
fs
jae
adc
gs
lret
adc
push
or
je
ret
push
dec
arpl
mov
aaa
das
insb
ja
dec
shrl
jae
and
sub
or
sub
dec
loopne
push
inc
adc
mov
or
xchg
cmp
push
or
lea
adc
imul
ret
sbb
mov
jae
insb
dec
mov
ljmp
outsl
push
pop
insb
dec
dec
insl
push
je
sbb
sbb
push
fs
push
arpl
mov
add
or
inc
add
or
test
scas
mov
cmp
je
mov
inc
mov
push
inc
test
call
rorb
inc
das
sbb
insb
push
push
sub
jo
sub
add
jecxz
inc
jbe
aad
imul
imul
and
pop
inc
mov
push
push
cltd
jb
or
int3
aam
sbb
dec
dec
iret
insb
pop
push
xchg
dec
dec
add
mov
insb
movups
outsb
addr16
and
mov
cmp
push
push
inc
push
adc
jno
sbbl
mov
adc
fs
adc
addb
cmp
dec
jne
outsb
or
lret
mov
ljmp
cmp
jb
dec
lret
jo
xor
jb
inc
arpl
imul
shl
addr16
lock
add
shld
test
add
push
push
roll
enter
cmp
and
or
addb
push
adc
pop
xor
push
lret
add
or
pop
in
test
jne
add
and
sarb
add
cwtl
sti
jae
aas
push
inc
fadds
add
pop
add
cmp
std
fwait
adc
sbb
jo
add
lock
fwait
or
mov
cmp
or
inc
aas
insb
add
outsb
add
dec
add
pop
sub
mov
shll
jnp
inc
inc
incl
xor
das
add
adc
jo
aaa
pushf
push
das
aad
inc
inc
inc
pop
in
aaa
aaa
add
cmp
xor
add
inc
movsl
test
jmp
cmc
repnz
add
fstp
add
mov
sbb
in
add
jl
pop
jb
push
or
inc
xchg
xchg
add
test
aas
leave
mov
ja
pop
mov
sub
aas
push
fiadds
arpl
ja
fldl
call
cli
add
stc
mov
pop
dec
mov
add
jp
addr16
jg
jp
add
lods
mov
pop
mov
dec
shrb
fcmovnu
pop
loope
mov
inc
outsl
add
stos
stos
daa
inc
inc
sbb
or
jnp
jmp
add
outsl
push
loop
fdecstp
in
add
jnp
std
std
add
out
loopne
insl
js
popl
les
mov
mov
int3
pop
aam
fwait
xchg
loope
xchg
fadds
ja
add
sub
ffree
ja
loop
mov
pop
or
js
mov
les
add
rcrl
jle
pushf
mov
add
xchg
mov
les
out
pop
mov
push
cmp
ljmp
jnp
sti
mov
mov
or
leave
fidivs
ret
das
lcall
cld
cmpsl
pop
out
sahf
or
subl
lret
mov
loope
adc
jg
ja
xlat
fcomp
jecxz
inc
mov
aad
imul
scas
outsl
negb
mov
incb
sub
in
popf
adc
cmpsl
cmpsb
sbbl
lret
add
stc
imul
mov
jae
test
lret
add
xchg
loop
fcmovu
fcmovnu
jg
sti
ljmp
jnp
fadd
inc
pop
mov
push
out
arpl
imul
jbe
std
fidivrs
add
jecxz
adc
xchg
add
jg
mov
lahf
jg
out
and
jnp
aad
leave
jg
sti
push
pop
into
lret
sarl
out
jnp
mov
add
or
push
arpl
cld
cld
add
lcall
imul
out
sub
or
jae
xchg
les
sbbw
mov
cmpsl
mov
das
add
aad
lret
lock
clc
mov
dec
out
in
xchg
add
shl
notb
sub
jg
loope
in
stc
ficoms
fsub
lods
jnp
add
xchg
test
pop
jg
int3
andl
xchg
add
jle
mov
js
test
push
lock
mov
jnp
jmp
pop
pop
icebp
loopne
fucomip
fnsave
xchg
add
xor
mov
adc
xlat
jmp
sti
pop
aas
loope
lods
add
jecxz
pop
lock
mov
ret
lret
clc
fcomip
aad
scas
jg
mov
jmp
ja
out
call
iret
mov
lods
stc
add
mov
add
lcall
aas
pop
mov
jno
add
xchg
cwtl
adc
sahf
pop
cmpsl
cmpsb
xchg
fdivl
mulb
stos
in
out
test
and
mov
mov
pcmpeqd
mov
lret
ret
hlt
test
jecxz
cld
pushl
leave
sti
pop
fmuls
mov
mov
scas
lret
or
dec
jg
xlat
sarl
add
fnstcw
aaa
repnz
int3
cmpsb
xchg
cmp
add
inc
mov
jbe
icebp
orl
pushf
popf
popa
mov
fwait
jmp
sti
pop
pop
xrelease
pop
or
jg
dec
out
int
pop
sub
ds
lahf
mov
sbb
jg
ds
xchg
pop
cmc
mov
xchg
mov
add
fdivrs
loop
ds
mov
add
jnp
setg
fcmovnu
or
lret
fiadds
sbb
cmpb
stos
jno
mov
js
jnp
jbe
lods
jnp
scas
les
ret
mov
dec
xchg
and
out
xlat
mov
subl
stos
arpl
mov
xchg
out
mov
mov
add
mov
jbe
push
dec
add
fiadds
sahf
jg
call
int3
sahf
mov
lret
inc
hlt
jg
jg
cli
leave
int3
roll
mov
dec
arpl
test
ds
sbb
stos
mov
mov
test
mov
div
loopne
sbbl
sti
jg
jmp
mov
adc
imul
aaa
repz
jg
jg
lret
sti
mov
xor
jge
lret
pop
mov
mov
lahf
add
popf
pop
dec
enter
por
jae
out
nop
ja
jg
cmp
aas
jg
stc
mov
incl
decl
sub
clc
cli
cld
fiaddl
repz
movl
cmpsl
adc
mov
in
mov
xchg
jnp
mov
dec
mov
add
xchg
leave
addl
jg
push
jnp
add
add
push
add
fcmovb
bound
daa
xor
jne
jmp
cmpsl
sbb
in
or
subl
lahf
xor
fsubp
bound
lock
aas
aaa
mov
push
iret
sub
push
add
div
jmp
pop
ret
cmp
ret
push
sbbl
fwait
add
aaa
idivl
inc
mov
mov
rcll
xorl
aas
lret
mov
inc
fdivrs
add
fildl
aam
outsl
xchg
xchg
aas
push
nopl
cmp
lahf
js
dec
ja
pusha
sti
insb
cmp
add
lret
jecxz
cli
test
inc
xchg
cld
add
test
pop
daa
pushf
mov
add
lret
call
cmpl
not
xchg
out
add
int3
lret
test
repz
ja
jmp
pop
pusha
dec
jae
roll
movsl
into
stos
daa
int
mov
clc
lds
icebp
ror
data16
movsb
sti
aaa
jg
xor
add
jg
ja
repz
mov
mov
es
pop
mov
sti
fcmovu
sti
cmp
and
add
jg
mov
cmpsl
dec
pop
testl
pop
jecxz
fcmovne
iret
and
mov
or
fadds
in
lds
mov
scas
add
jmp
mov
lock
out
ret
sbb
jp
ja
bt
ror
lret
and
add
inc
mov
cmp
scas
lahf
pop
rcr
into
into
and
add
clc
jg
in
testb
jg
or
pop
insl
ja
roll
xchg
jecxz
icebp
add
add
addb
add
inc
add
loopne
and
outsb
pop
pop
mov
jg
aas
nop
xor
outsl
incl
je
jg
lahf
mov
jns
shlb
inc
xor
cmp
xor
xor
divb
inc
inc
xor
sti
ss
ss
jg
inc
inc
cmp
xor
inc
inc
sbb
pop
inc
inc
inc
cs
xor
add
aaa
xor
cmp
loopne
xor
xchg
dec
xor
outsb
xor
inc
cvtps2pd
fbstp
xor
inc
in
inc
inc
xor
push
xor
xor
or
or
jge
xor
mov
movsl
fwait
mov
xor
xor
or
cmp
insb
insl
inc
or
inc
inc
in
adc
cmp
add
or
cmp
and
jne
add
enter
xor
adc
adc
and
inc
xor
dec
xor
push
xor
lcall
xor
xor
jbe
jle
xchg
mov
call
xor
mov
xor
xor
xor
xor
xor
divb
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
outsb
xor
stos
xor
hlt
xor
xor
inc
pop
sbb
xor
xor
xorl
xor
xor
pushl
ss
adc
dec
cmp
imul
cmp
xchg
cmp
cmp
ret
cmp
cmp
cmp
cmp
hlt
cmp
cmp
cmp
cmp
and
cmp
push
cmp
cmp
pushl
cmp
stos
cmp
fdivrl
loop
ljmp
push
cmp
cmp
ljmp
xchg
mov
into
cmp
in
xor
push
cmp
lcall
cmp
cmp
cli
cmp
cmp
std
and
mov
cmp
arpl
push
fidivrl
loopne
lock
ds
inc
aas
pop
aas
cmp
aas
xchg
aas
lret
mov
loopne
adc
sbb
xor
push
xor
pop
outsl
sub
je
out
xor
xor
xor
xor
repnz
sbb
sub
loope
xor
orb
add
xor
xor
dec
xor
xor
push
std
xor
xor
xor
das
inc
xor
lcall
push
xor
xorb
xor
xor
xor
xor
xchg
xor
xor
xor
xor
pop
xor
jae
decl
lret
xor
xor
jmp
aaa
daa
aaa
xchg
aaa
pop
cmp
push
sbb
cmp
push
cmp
ljmp
mov
cmc
cmp
cmp
cmp
jnp
mov
cmp
xor
or
divl
mov
xor
shll
add
xor
xor
xor
outsl
xor
out
xor
xor
push
xor
xor
xor
xor
test
repz
xor
xor
pop
xor
xor
incl
xor
ss
lods
push
jmp
jno
jnp
xorl
mov
xchg
ss
ss
ss
ss
ss
ss
pushl
and
xor
mov
aaa
jecxz
aaa
je
cli
cmp
aas
cmp
add
outsb
je
sbb
aas
icebp
xor
cmp
or
jge
cmp
cmp
fidivrs
adc
cmp
mov
xor
jns
fwait
cmpsl
mov
ds
ds
ljmp
aas
decl
aas
or
adc
sbb
lcall
aas
dec
aas
call
pop
aas
xchg
fwait
aas
ljmp
aas
sti
into
aas
aas
jae
push
xlat
xchg
sub
sub
xor
cwtl
add
sti
xchg
xor
mov
lret
xor
xor
repz
sbb
add
xor
in
xor
ljmp
xor
xor
xor
xor
xor
xor
push
xor
xor
pop
dec
xor
pushl
inc
xor
push
xor
xor
outsb
xor
jle
xor
xor
scas
xor
xor
xor
xor
pushl
out
out
xor
xor
pushl
push
xor
xor
xor
lock
xor
das
ret
xor
fcos
dec
xor
pop
xor
xor
jbe
jle
sub
xor
xor
xor
xor
ret
xor
mov
out
xor
fbstp
push
xor
xor
xor
xor
inc
ds
xor
xor
xor
pop
xor
xor
xor
xor
jle
xchg
xor
xor
sahf
xor
xor
xor
xor
mov
xor
xor
fidivs
xor
xor
xor
out
push
xor
es
xor
cmc
push
xor
icebp
pop
jle
xchg
xor
mov
xor
ficomps
divb
ss
ss
ss
ss
cs
inc
ss
pushl
data16
ss
jl
test
mov
xchg
ss
pushl
movsb
lods
ss
mov
int3
ss
fdivr
ss
in
ss
ss
pushl
add
or
adc
sbb
aaa
and
sub
xor
cmp
pushl
dec
aaa
push
aaa
pop
aaa
jmp
aaa
je
jl
incl
pushf
aaa
jmp
mov
int3
aaa
aam
fdivl
jmp
aaa
in
aaa
hlt
aaa
cld
aaa
incl
or
adc
sbb
icebp
and
sub
sub
or
push
cmp
cmp
insb
cmp
cmp
cmp
cmp
cli
int3
cmp
cmp
out
jno
cmp
fistpll
cmp
cmp
dec
cmp
cmp
jmp
cmp
mov
push
jp
mov
lods
outsb
mov
les
dec
cmp
cmp
cmp
cmp
adc
adc
sbb
xchg
cmp
cmp
cmp
xor
inc
cmp
cmp
je
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmpsl
hlt
outsl
cmp
and
and
sub
sub
mov
xor
cmp
cmp
push
cmp
jl
cmpb
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
xor
cmp
lock
add
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
cmp
incl
cmp
call
cmp
call
cmp
cmp
cmp
cmp
cmp
clc
cmp
ds
or
lcall
cmp
inc
ds
decl
dec
ds
ds
lcall
pop
ds
jo,pt
call
mov
test
lods
ds
cmpsb
mov
dec
ds
ds
ds
ds
ds
add
mov
aas
adc
aas
sub
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
aas
push
aas
test
aas
movsb
mov
aas
mov
sarb
aas
enter
aas
in
stos
xchg
out
sbb
iret
clc
add
or
adc
rcrl
xor
xor
ret
adc
cld
shrl
or
jl
xorb
xor
jg
xor
xor
xor
pushl
aam
fdivs
fdivl
loopne
xor
cmp
loopne
xor
shrl
xor
clc
cmp
dec
xor
js
jl
xorb
xor
nop
xor
xor
xor
xor
xor
loopne
in
call
lock
push
sub
sbb
test
lods
xor
incl
inc
xor
dec
xor
push
xor
xor
xor
mov
xor
xor
xor
xor
cmc
xor
xor
xchg
cmpsl
outsl
sub
cmp
sub
mov
add
cmp
dec
cmp
push
cmp
add
sbb
cmp
cmp
test
mov
mov
leave
cmp
pop
jl
gs
and
cld
int
or
pop
cmp
and
sub
scas
mov
imul
and
push
xor
mov
xor
jnp
mov
movsb
ja
icebp
xor
inc
dec
xor
xor
xor
mov
aas
xor
addr16
dec
stos
fiadds
ja
clc
lods
aaa
mov
add
lods
mov
js
mov
clc
cmp
cmp
xor
aas
cmp
pop
cmp
cmp
push
mov
cmp
jae
clc
cmp
cmp
jnp
cmp
cmp
test
repz
jg,pt
or
sarb
out
ds
aas
and
aas
cmp
inc
cld
aas
dec
aas
push
aas
push
ja
popa
aas
addr16
aas
outsb
aas
je
jns
jg
add
xchg
mov
cld
aas
mov
or
out
lock
stc
stos
icebp
insb
inc
mov
pop
fisttps
sbb
pop
stc
inc
xor
stc
xorb
xor
or
test
mov
xchg
xor
cmpsb
and
jne
xorl
inc
shlb
xor
pushl
in
ljmp
adc
aaa
sub
jnp
sbbl
push
ja
jl
test
xor
out
iret
xor
out
or
call
push
jae
xchg
loopne
ss
and
decl
pop
aaa
push
jb
jmp
aaa
stos
mov
cmpb
mov
lret
cmp
sarb
mov
cmp
cmp
jno
sub
sub
jne
fstp
cmp
inc
jne
dec
pusha
jg
jo
je
cmp
jl
cmpb
cmp
cli
xchg
cmp
movsb
cmp
fwait
add
cmp
out
mov
and
cld
cmp
cmp
xlat
test
lods
mov
cmp
pusha
cmp
xchg
mov
mov
mov
scas
cwtl
mov
movsb
cmp
mov
mov
lock
clc
cmp
cmp
or
adc
lds
xlat
sar
cmp
ja
pop
cmp
cmp
jo
iret
scas
int
lret
mov
jg
cmp
cmc
cmp
cmp
jecxz
out
cmp
cmp
cmp
cmp
cmp
pop
lret
inc
cmp
cmp
cmp
cmp
cld
cmp
cmp
cmp
ja
xchg
cmp
loop
lods
cmp
out
cmp
cmp
scas
ljmp
adc
ret
scas
cmp
cmp
scas
mov
cmp
jno
test
sbb
jmp
ds
lahf
or
movsl
mov
test
lods
movsb
mov
ds
ds
movsl
xchg
mov
cmc
aas
and
and
stos
sub
lods
aas
xor
mov
mov
dec
test
js
jl
sub
mov
mov
call
aas
pushf
aas
scas
mov
clc
loopne
call
outsl
push
clc
aas
cld
dec
mov
mov
or
test
mov
lahf
xor
jmp
in
xor
sbb
test
sahf
add
add
mov
nop
lcall
dec
pop
fcoms
or
or
aaa
or
cmp
roll
inc
dec
les
or
or
cld
cmp
dec
sub
and
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmc
cmp
cmp
sbbb
fistpll
cmp
cmp
cmp
dec
cli
loope,pt
repz
adc
mov
sahf
xor
ljmp
movsl
xor
mov
xor
pop
mov
pop
cmp
cmpl
cmp
loopne
ds
out
pop
mov
mov
sbb
push
or
pop
ss
test
sub
push
test
xor
xor
enter
xor
pop
mov
iret
xor
shll
fbld
mov
mov
std
xor
xor
xor
or
xor
dec
mov
xor
cmpsb
mov
lds
xor
sub
cmpsl
aaa
push
aaa
cmpsl
loop
out
aaa
pop
ljmp
xchg
in
stos
xor
bound
lretw
add
inc
cmp
push
cmp
cmp
push
jb
jp
cmp
cmp
stos
cmp
cmp
aam
repnz
pop
add
push
add
add
cmp
icebp
cmp
cmp
xor
divb
fisubs
or
cmp
sub
cmpsl
or
xor
jb
aaa
adc
out
mov
xor
ss
adcb
cmp
push
pop
inc
mov
mov
fdivs
loope
cmp
ss
aaa
push
aaa
jne
incl
aaa
mov
mov
cmp
inc
cmp
inc
popf
cmp
cmp
jae
cmp
cmp
stc
cmp
add
push
idivb
cli
movsb
inc
inc
ja
ja
jnp
jnp
aas
xchg
aas
mov
xchg
or
movsl
inc
in
lahf
aas
mov
out
stos
xor
loope
in
jmp
icebp
cltd
ret
xor
lahf
jg
xor
pushl
adc
adc
lock
pop
xor
xor
xchg
xor
mov
xor
xor
or
sbb
arpl
mov
mov
shll
cmc
xor
pushl
dec
ss
aad
arpl
push
fistpll
lcall
mov
add
lcall
ret
aaa
fucomi
repz
addl
cmp
mov
in
ljmp
cmp
push
cmp
cmp
cmp
loopne
cmp
push
jb
dec
xchg
inc
std
stos
cmp
sarl
test
fstp
sub
popf
sub
jns
fs
movsl
lds
add
inc
adc
es
cmp
cmp
push
daa
xor
mov
xor
mov
inc
xor
inc
pop
xchg
gs
movsl
cmp
jne,pn
and
lds
and
aam
cmp
repz
fisubs
or
sbb
pop
in
sub
insl
pop
xorb
stos
and
sub
lahf
pop
and
ss
ss
aaa
xor
aaa
inc
add
cmp
cmp
cmp
jp
insl
cld
cmp
sbb
pop
mov
sbb
mov
sbb
cmp
cmp
cmp
icebp
cmp
cmp
and
add
cmpsl
cmp
cmp
cmp
lock
cmp
or
mov
ja
aaa
ds
ds
ds
ds
aas
pop
xlat
aas
fnstcw
aas
mov
xchg
aas
sahf
adc
add
test
add
mov
mov
mov
outsl
aas
xor
xor
xor
movsl
xor
jle
xor
xor
lods
in
dec
xor
mov
add
and
and
mov
loopne
scas
gs
xor
in
jle
ss
mull
aaa
mov
push
fldl
dec
inc
jecxz
inc
add
sbb
das
xor
cmp
andl
cmp
test
mov
cmpsb
ret
lret
cmp
xlat
outsl
pop
cs
add
jge
ds
cmpsb
sbb
add
jae
aam
add
stos
ljmp
fwait
sbb
push
mov
jmp
call
ljmp
std
mov
xor
mov
xor
mov
les
ret
fildll
addl
push
movsl
cmp
std
cmp
cmp
xchg
xor
add
test
fisttpl
cmp
inc
push
add
shlb
push
cmpsl
shlb
inc
add
add
pop
lahf
shlb
das
in
xor
pushl
in
xor
xor
xor
clc
xor
xor
xor
cmp
xor
cmpsl
incb
xor
movsl
imul
aaa
jge
mov
jae
cmp
sbb
lods
cmc
fmull
cmp
xchg
lock
cmp
cmp
pop
sub
cmp
movsl
cmp
gs
fadds
ds
push
push
fwait
arpl
data16
mov
xor
add
fistpl
xor
xor
sbbb
xchg
outsl
int3
xor
and
dec
ss
xchg
add
shl
push
sub
xchg
stos
imul
test
aaa
leave
and
pop
xchg
inc
test
in
mov
jo
cmp
ret
std
add
insl
cmp
lea
jnp
lds
jno
aad
fnstsw
cli
sbb
cmp
pop
push
cmp
dec
les
dec
das
cmp
cmp
ret
decl
push
cmp
cmp
cmp
fwait
cmp
fldenv
sbb
cmp
dec
cmp
cmp
popf
cmp
mov
aam
stos
idiv
jno
sbb
out
push
ds
inc
pop
pushl
jbe
jp
jle
fwait
incl
ds
loopne,pt
ds
stos
push
insl
lock
lds
sub
ds
ds
scas
fnsave
add
ds
icebp
ds
pop
pop
cs
dec
aas
push
aaa
aas
gs
mov
cmpb
stos
inc
lods
jl
aas
jmp
pusha
push
test
out
cmpsl
adc
push
es
xor
xor
aad
arpl
mov
mov
xor
out
in
sbb
mov
push
incb
pop
xor
jns
imul
xor
pop
xor
xor
dec
clc
pop
xor
movsl
pop
clc
jb
jg
mov
mov
call
mov
xor
xor
xor
mov
pop
stos
xor
fisubrs
pusha
xor
push
xor
ret
xor
xor
xor
in
xorb
xor
push
inc
fld
pusha
in
jl
xor
stos
fcmovu
shll
sbb
pushl
and
xor
cmp
xorl
mov
scas
icebp
pop
aaa
and
fbstp
mov
int
shll
aad
loopne
aaa
add
pop
fnstcw
push
cmp
cmp
lahf
sarb
fdivrs
test
sbb
inc
fs
je
fisttpll
sahf
cmp
cmp
aad
shl
mov
cmp
cmp
cmp
push
cmp
mov
jl
fnsave
and
xchg
mov
cmp
inc
cltd
push
fmulp
xchg
jno
add
cmp
cmp
ds
dec
cmp
jge
cmp
decl
cmp
idivl
add
mov
sti
pop
cmp
cmp
cmp
cmp
sbb
sub
push
sti
cmp
cmp
lds
sub
or
lods
sub
cmp
inc
push
sbb
cmp
jle
cmp
inc
sarl
cmp
ljmp
xor
cmp
push
sbb
inc
and
pcmpeqw
sbb
jo
aas
mov
fidivrs
clc
out
repnz
not
pop
adc
add
push
xor
std
xor
xor
dec
add
fcoml
pop
test
iret
inc
jecxz
sbb
xor
xchg
push
mov
mov
jns
xor
xor
int
xlat
xor
or
or
sbb
bound
js
subl
jecxz
out
or
adc
pop
fdivrs
inc
xor
mov
xchg
xor
loopne
xor
sbb
add
hlt
das
xor
push
in
outsl
in
inc
xor
pushl
xor
xor
xor
inc
jno
pop
xor
sbb
pushl
xorl
mov
lds
xor
and
xor
inc
repnz
push
ss
pop
ss
aad
daa
add
pop
and
jp
mov
shll
fldenv
add
aaa
adc
shll
lret
out
bound
mov
aaa
icebp
in
inc
adc
add
das
das
push
cmp
dec
cmp
pop
cmp
pop
jne
pop
mov
cmp
aaa
mov
popa
loop
cmp
push
push
add
sub
repz
cmp
jbe
mov
push
inc
mov
cmp
cmp
cmp
loope
icebp
cmp
cmp
and
arpl
jae
ss
add
pop
cmp
adc
cmp
cmp
std
cmp
mov
iret
pop
lret
mov
cmp
jbe
adc
sub
xchg
xorb
push
adc
sub
lret
pop
mov
ret
fstpt
add
mov
push
or
push
filds
ss
xor
mov
xor
push
cli
mov
out
add
xor
sub
sti
shll
add
adc
ret
flds
insb
aas
or
xor
insl
push
imul
xor
mov
push
stc
call
xor
xor
xor
adc
fists
or
and
mov
xor
push
je
mov
push
mov
jno
mov
hlt
xor
sbb
sbb
and
ss
das
sub
mov
pop
dec
inc
inc
adc
shll
ss
lds
pusha
sar
push
mov
js
mov
xlat
test
mov
mov
cwtl
movsl
stc
mov
mov
mov
push
push
mov
sbb
add
lret
loopne
loope
ss
mov
aas
scas
icebp
cli
push
aaa
pop
aaa
jnp
out
pop
in
int
scas
xlat
pop
push
cli
adc
or
adc
sbb
and
cmp
cmp
sub
pop
fadds
jo
std
mov
pop
xchg
cmc
hlt
cmc
cmp
cmp
cmp
and
inc
ljmp
scas
cmp
sbb
sbb
xor
dec
or
shll
outsl
and
xor
inc
xor
adc
xor
jno
les
fdivl
and
inc
ret
clc
xor
mov
ficompl
out
adc
sbb
and
pop
les
push
les
pop
push
xor
pop
or
or
mov
insl
jae
xor
and
sub
sub
xor
jl
xor
inc
jo
dec
enter
jo
jl
clc
mov
xchg
xor
sub
mov
mov
xchg
dec
shlb
ds
fadds
int
loopne
in
mov
mov
fldl
inc
sarl
rcl
dec
dec
cltd
pop
or
adcl
aam
fdivrs
fcompl
or
mov
lds
lret
add
jl
xor
mov
fcoms
or
add
add
incl
