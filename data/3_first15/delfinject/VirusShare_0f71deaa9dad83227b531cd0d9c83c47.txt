add
inc
add
add
jns
add
add
add
add
add
or
push
je
imul
or
push
imul
jmp
xor
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
popa
dec
add
pusha
dec
add
mov
add
push
inc
and
add
mov
and
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
mov
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
xor
test
je
mov
shr
jmp
ret
lea
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
mov
jmp
ret
nop
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
mov
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
nop
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
cmpl
je
call
ret
mov
call
ret
push
push
push
push
mov
mov
xor
mov
lea
mov
xor
mov
push
mov
sub
jle
mov
add
add
call
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
lea
add
call
mov
jmp
xor
mov
pushl
pushl
mov
mov
lea
add
call
pop
jmp
xor
mov
mov
push
mov
lea
add
call
pop
jmp
mov
add
call
mov
jmp
mov
mov
add
call
mov
add
add
dec
jne
pop
sub
jle
lea
add
call
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
xor
mov
lea
mov
mov
mov
pushl
call
add
add
dec
jne
jmp
mov
mov
mov
call
xor
mov
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
mov
call
add
add
dec
jne
pop
pop
pop
pop
ret
ret
nop
mov
jmp
ret
push
mov
pushl
call
pop
ret
nop
jmp
ret
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
jg
test
jge
mov
call
mov
mov
call
jmp
xor
cmpl
je
subl
mov
mov
subl
mov
movzbl
add
mov
mov
mov
test
je
mov
mov
jmp
xor
mov
mov
imul
mov
mov
cltd
idiv
cmp
je
mov
call
addl
cmpl
je
mov
cmpl
jne
mov
mov
cmp
jle
cmpl
je
mov
add
mov
imul
add
mov
sub
mov
call
lea
mov
call
mov
mov
jmp
mov
decl
mov
call
mov
mov
cmp
jge
mov
cmpl
je
mov
imul
mov
add
xor
call
mov
push
mov
mov
mov
add
mov
call
jmp
mov
imul
mov
add
mov
mov
call
mov
movl
addl
mov
mov
addl
mov
sub
imul
mov
imul
add
xor
call
cmpl
jle
addl
decl
dec
test
jl
inc
xor
mov
push
mov
lea
mov
mov
call
inc
dec
jne
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
addl
call
ret
nop
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
test
je
lock
test
je
lock
jne
push
push
mov
incl
call
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
test
je
push
push
mov
push
call
pop
mov
popl
test
jne
ret
mov
push
call
ret
mov
test
mov
je
mov
push
call
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
push
push
call
mov
mov
pop
pop
ret
lea
mov
ret
mov
push
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
mov
cmpl
jne
mov
call
jmp
mov
push
mov
push
call
pop
pop
ret
mov
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
clc
inc
inc
add
or
je
inc
jb
popa
jns
add
add
add
add
add
add
adc
or
jne
arpl
outsb
jae
push
push
push
mov
mov
mov
call
mov
mov
mov
mov
call
push
push
push
push
push
call
push
call
movb
call
mov
call
mov
push
call
mov
sub
xor
push
push
mov
cltd
cmp
jne
cmp
pop
pop
ja
jmp
pop
pop
jg
mov
sub
xor
push
push
mov
cltd
cmp
jne
cmp
pop
pop
ja
jmp
pop
pop
jg
movb
pop
pop
pop
ret
add
insb
add
add
pop
add
sub
insl
add
push
and
jns
add
add
jge
jo
sub
add
sub
je
jl
imul
add
add
cmp
jbe
jnp
jo
and
jns
and
imul
add
sub
jns
sub
outsb
add
push
add
add
jnp
data16
add
add
outsl
add
add
xor
add
add
xor
outsl
add
add
xor
outsl
add
add
aaa
add
xor
add
add
xor
popa
add
popa
add
add
xor
add
xor
add
add
xor
popa
add
add
xor
popa
add
add
xor
outsl
add
add
cmp
imul
aaa
add
cmp
imul
xor
outsl
add
add
xor
add
add
xor
imul
xor
outsl
add
add
cmp
imul
xor
add
add
add
aaa
add
xor
popa
add
add
add
push
push
push
mov
mov
mov
mov
call
mov
mov
call
mov
mov
push
call
push
push
push
call
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
jmp
inc
cmp
jne
mov
pop
pop
pop
pop
pop
ret
add
add
cmp
jb
aas
add
add
cmp
push
add
arpl
and
outsb
add
add
and
jo
jle
arpl
pop
add
jge
add
jo
and
add
sub
je
add
pop
add
add
sub
bound
pop
add
sub
add
add
add
sub
add
add
sub
add
add
incl
add
add
xor
xor
cmp
add
push
push
push
push
push
mov
mov
push
mov
mov
movsl
movsl
pop
mov
mov
call
mov
mov
call
push
push
push
push
call
push
push
push
push
call
mov
call
mov
push
mov
mov
mov
rep
pop
mov
mov
call
mov
mov
call
push
call
push
push
push
call
push
push
mov
push
call
mov
test
je
mov
mov
call
push
push
mov
mov
mov
rep
pop
pop
mov
call
push
push
call
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
mov
mov
call
mov
call
push
mov
call
mov
mov
pop
call
jmp
mov
call
inc
cmp
jne
pop
pop
pop
pop
pop
ret
add
pop
pusha
pop
pop
and
and
ljmp
add
add
popa
cmp
imul
gs
xor
imul
outsl
xor
imul
outsl
xor
xor
add
pushl
add
add
xor
cmp
aaa
xor
xor
cmp
aaa
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
popa
add
add
add
xor
popa
add
add
xor
add
xor
outsl
add
add
xor
add
cmp
outsl
add
add
add
ljmp
add
add
arpl
ja
outsb
pop
outsb
sub
jns
imul
insl
jl
cmp
js
bound
jb
insl
and
pop
outsb
cmp
inc
jb
bound
add
jo
xor
outsl
add
bound
cmp
add
add
xor
popa
add
add
cmp
outsl
add
add
das
add
add
add
gs
xor
xor
xor
cmp
xor
jnp
gs
outsl
cmp
cmp
popa
cmp
imul
xor
sub
popa
cmp
imul
xor
cmp
aaa
popa
sub
gs
imul
and
cmp
jge
imul
pop
xor
xor
jle
outsl
sub
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
push
mov
sub
xor
push
xor
call
mov
pop
call
add
pop
ret
lea
test
je
sub
mov
ret
lea
push
mov
add
push
push
xor
mov
mov
call
xor
push
push
pushl
mov
mov
mov
mov
mov
call
mov
mov
push
push
call
push
push
call
mov
call
mov
lea
call
mov
mov
mov
lea
call
mov
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
mov
push
lea
call
push
push
call
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
xor
cmp
xor
ss
aaa
cmp
cmp
xor
xor
xor
xor
aaa
xor
xor
add
incl
add
cmp
and
add
add
jle
and
add
in
add
mov
mov
call
mov
mov
call
mov
mov
push
call
push
push
push
call
xor
sidtl
mov
cmp
je
cmp
jne
mov
mov
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
ss
aas
xor
pusha
xor
and
imul
xor
aaa
gs
xor
cmp
xor
pop
xor
cmp
sub
cmp
popa
and
outsl
jle
outsl
and
popa
and
gs
outsl
sub
outsl
ds
das
ss
cs
popa
pop
xor
xor
add
xor
xor
xor
outsl
ss
mov
mov
call
movb
mov
mov
call
push
push
push
call
push
push
call
call
ret
jle
add
xor
add
add
and
xor
add
add
sub
xor
outsl
add
add
add
add
sub
cmp
add
add
pop
add
popa
add
add
add
jnp
xor
popa
add
add
cmp
popa
add
add
jnp
xor
popa
add
aaa
add
cmp
cmp
popa
add
add
add
pop
add
outsl
add
add
jnp
add
inc
add
add
outsl
and
je
outsl
and
cmp
push
imul
aaa
imul
ss
pop
arpl
gs
jae
sub
gs
cmp
jbe
imul
push
cmp
je
popa
sub
xor
data16
jae
gs
cmp
insb
xor
outsl
pop
push
aaa
outsl
pop
ja
imul
outsl
jge
xor
push
gs
aaa
gs
fs
outsl
sub
gs
ja
gs
jbe
gs
je
outsl
cmp
jbe
gs
insb
xor
cmp
jo
popa
add
add
push
push
push
mov
mov
mov
rep
movsb
mov
mov
call
mov
mov
call
call
push
push
call
xor
push
push
push
push
call
test
je
mov
mov
pop
pop
pop
ret
sbb
popa
xor
popa
outsl
xor
imul
outsl
xor
xor
add
lcall
add
add
je
insl
jle
sub
je
jae
bound
jb
push
aas
insb
and
add
cmp
jb
xor
js
xor
add
add
cmp
add
add
cmp
jo
xor
jbe
cmp
insb
add
add
cmp
data16
add
xor
outsb
add
arpl
xor
ja
xor
jo
xor
bound
xor
imul
add
cmp
insl
add
add
aaa
add
add
xor
push
add
add
aaa
add
cmp
je
cmp
js
cmp
add
add
xor
insl
add
add
add
xor
ja
xor
outsb
add
add
aaa
add
cmp
insb
add
add
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
mov
mov
call
mov
mov
movsl
movsl
movsl
push
push
call
push
push
push
call
mov
call
push
call
mov
mov
add
add
mov
add
mov
xor
mov
mov
mov
mov
call
mov
mov
call
push
call
push
call
mov
mov
add
mov
shl
add
mov
add
mov
lea
mov
call
mov
mov
call
jne
mov
mov
mov
mov
push
mov
mov
mov
rep
movsw
movsb
pop
push
push
push
call
push
push
push
push
push
call
mov
mov
add
mov
add
add
movzwl
mov
mov
shl
mov
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
add
mov
mov
jmp
inc
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
bound
push
cmp
jns
push
xor
cmp
push
js
jae
xor
cmp
jbe
outsb
aaa
js
xor
jbe
add
decl
add
add
xor
aaa
xor
xor
or
fs
fs
outsb
insl
xor
ja
imul
xor
inc
insl
xor
js,pt
outsl
pop
imul
sub
outsl
sub
ss
outsl
pusha
js
popa
sub
pusha
jb
popa
cs
outsl
pusha
cmp
arpl
imul
xor
ds
cmp
outsl
sub
popa
and
jb
gs
add
add
jmp
add
outsl
ss
cmp
outsl
xor
gs
popa
xor
popa
ss
xor
popa
xor
cmp
cmp
imul
outsl
xor
cmp
imul
popa
xor
cmp
popa
xor
imul
cmp
outsl
xor
popa
cmp
outsl
outsl
aaa
popa
xor
add
add
das
add
sub
ja
add
jnp
jae
sub
outsb
add
add
insb
add
insb
add
add
imul
add
inc
add
das
add
cmp
jo
and
data16
jb
sub
push
add
add
add
and
add
pop
add
add
add
xor
aaa
cmp
xor
ss
cmp
cmp
xor
ss
pop
xor
add
add
sbb
xor
cmp
xor
ss
cmp
xor
aaa
ss
cmp
xor
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
mov
mov
call
push
push
push
push
push
call
push
push
push
push
call
mov
call
cmp
jle
mov
mov
movsl
movsl
movsl
movsl
mov
mov
call
mov
mov
call
push
call
push
push
push
push
call
push
lea
mov
mov
call
add
lea
call
mov
mov
mov
call
jmp
mov
mov
call
mov
call
mov
mov
mov
rep
movsw
push
push
push
push
push
push
call
push
push
push
call
mov
call
push
lea
mov
mov
call
add
mov
call
push
lea
call
mov
mov
pop
call
xor
lea
mov
inc
add
cmp
jne
xor
xor
cmp
jge
movb
mov
mov
call
push
mov
mov
movsl
movsl
movsb
pop
call
push
push
push
call
mov
call
push
mov
pop
mov
cltd
idiv
mov
movzbl
add
add
and
jns
dec
or
inc
mov
mov
mov
mov
mov
xor
mov
mov
inc
cmp
jl
xor
xor
mov
call
push
lea
mov
mov
call
add
mov
call
push
lea
call
mov
mov
pop
call
mov
call
dec
test
jl
inc
mov
xor
mov
mov
call
push
push
mov
mov
mov
rep
movsw
movsb
pop
pop
push
push
push
push
push
call
push
push
push
call
inc
and
jns
dec
or
inc
add
and
jns
dec
or
inc
mov
mov
mov
mov
xor
mov
mov
mov
add
and
jns
dec
or
inc
mov
mov
xor
inc
decl
jne
mov
call
mov
mov
call
mov
call
push
mov
call
mov
pop
call
xor
pop
pop
pop
mov
push
lea
mov
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
add
add
add
pop
add
xor
add
add
add
sub
jbe
cmp
popa
add
add
xor
imul
aaa
add
sub
bound
aaa
add
sub
add
add
add
sub
jns
xor
popa
add
add
das
add
cmp
popa
add
insl
add
add
add
add
ljmp
add
je
imul
jo
popa
cmp
jge
xor
imul
cmp
ja
imul
push
outsl
add
add
pushl
add
add
imul
jb
insb
jbe
addr16
js
ja
jbe
jo
jae
jae
arpl
je
arpl
fs
push
je
imul
add
xor
aaa
cmp
cmp
xor
aaa
cmp
lcall
add
add
outsl
pop
xor
sub
popa
sub
outsl
jl
gs
outsl
sub
cs
gs
and
add
jmp
imul
jo
ja
jb
addr16
jbe
bound
jo
insb
ja
jns
insl
push
imul
push
add
mov
add
add
inc
add
cmp
outsl
add
push
add
add
xor
popa
add
arpl
xor
add
add
cmp
add
imul
add
add
xor
add
add
xor
add
cmp
add
add
xor
popa
add
add
cmp
add
add
add
and
add
and
outsb
add
add
cmp
je
cmp
imul
xor
imul
xor
add
add
and
jae
xor
add
add
add
add
ss
xor
cmp
xor
xor
xor
cmp
xor
xor
aaa
cmp
xor
xor
jmp
add
add
pop
aaa
popa
sub
gs
popa
cs
sub
popa
jl
cmp
gs
xor
popa
xor
xor
push
add
add
add
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
cmp
outsb
jge
aas
data16
pop
jae
insb
pop
pushaw
push
cmp
add
in
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
push
push
push
call
push
push
push
call
mov
call
lea
mov
call
xor
xor
mov
mov
call
mov
test
jle
movl
push
push
mov
mov
mov
rep
pop
pop
mov
mov
call
push
push
push
push
push
call
push
push
push
call
lea
mov
mov
mov
call
mov
mov
call
mov
dec
test
jl
mov
mov
call
mov
call
push
call
push
push
push
call
mov
shl
add
mov
add
cmp
jl
push
push
mov
mov
mov
rep
movsb
pop
pop
mov
mov
call
push
call
push
push
push
push
push
call
sub
mov
mov
shr
mov
mov
shl
push
mov
pop
mov
cltd
idiv
mov
and
jns
dec
or
inc
lea
mov
call
mov
mov
call
mov
incl
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
jmp
add
add
cmp
imul
popa
xor
gs
xor
cmp
add
add
incl
xor
xor
incl
add
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
das
add
add
pop
xor
cmp
xor
xor
cmp
xor
cmp
cmp
ljmp
add
add
push
js
outsb
bound
jns
bound
ja
jns
outsb
insl
outsb
push
push
jo
jbe
je
insb
jae
jns
insb
addr16
add
add
xor
add
add
xor
add
xor
popa
add
add
xor
imul
and
jae
js
jb
insl
jae
push
ja
jns
js
jbe
imul
bound
arpl
push
add
lcall
add
add
cmp
ss
xor
ss
xor
xor
xor
xor
add
mov
mov
mov
call
mov
call
push
call
push
push
call
lea
movzwl
add
mov
mov
pop
pop
ret
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
push
push
push
push
push
push
push
push
call
push
push
call
mov
xor
mov
call
mov
xor
mov
call
xor
mov
mov
call
call
mov
mov
call
push
lea
call
mov
pop
call
push
lea
push
push
call
push
push
push
push
push
push
push
push
call
push
lea
push
call
movl
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
push
push
mov
mov
push
mov
push
mov
push
call
mov
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
mov
call
mov
mov
movzwl
dec
test
jb
inc
xor
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
call
test
je
lea
push
push
mov
mov
push
mov
mov
add
push
mov
push
call
inc
dec
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
mov
add
mov
push
mov
push
call
cmp
sbb
inc
test
je
mov
push
call
jmp
push
mov
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
add
add
add
add
xor
xor
xor
xor
cmp
cmp
aaa
add
add
add
add
add
add
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
pop
add
add
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
add
inc
add
add
add
add
in
mov
push
push
dec
jne
push
push
push
mov
call
mov
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
mov
cmpb
je
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
mov
call
push
mov
mov
call
mov
dec
mov
xor
call
mov
call
push
mov
call
pop
sub
cmp
jle
mov
mov
call
mov
mov
mov
call
cmpl
je
mov
mov
call
add
dec
jne
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
cmpb
je
push
push
push
mov
mov
call
test
jne
call
test
jne
cmpb
je
call
test
jne
cmpb
je
call
test
jne
xor
lea
mov
call
lea
push
lea
mov
call
mov
pop
call
mov
call
lea
call
mov
mov
call
cmpl
je
mov
mov
call
inc
cmp
jne
lea
mov
call
mov
lea
mov
call
mov
mov
call
cmpb
je
mov
push
lea
push
call
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
add
jmp
add
add
push
jns
outsl
cmp
push
outsb
dec
xor
gs
insl
push
inc
dec
dec
insb
aaa
sub
push
jbe
inc
je
pop
xor
ss
push
xor
cmp
inc
dec
gs
aaa
jae
pop
push
inc
push
inc
arpl
dec
pop
dec
insb
push
xor
pop
outsb
xor
aaa
dec
push
push
aaa
sub
ss
js
jno
pop
popa
jns
js
dec
dec
das
push
xor
data16
push
outsb
dec
jo
inc
outsb
inc
dec
js
inc
dec
jae
dec
push
ja
outsb
dec
jns
jb
jns
insl
xor
push
cmp
imul
inc
cmp
outsl
arpl
dec
dec
inc
xor
outsl
jo
fs
bound
inc
jns
dec
ss
ss
dec
dec
addr16
dec
dec
dec
data16
inc
jne
push
push
inc
pop
push
bound
dec
imul
addr16
xor
dec
je
push
popa
push
dec
push
push
push
push
dec
xor
dec
gs
jb
dec
js
push
gs
push
jp
imul
insb
data16
je
pop
dec
pop
jp
je
xor
push
outsl
outsl
pop
xor
inc
push
je
xor
insl
push
dec
xor
outsb
ja
dec
je
pop
popa
xor
push
aaa
push
jae
ja
inc
inc
xor
je
insb
push
push
imul
sub
jae
insl
aaa
inc
inc
push
insl
ja
cmp
push
pop
xor
cmp
push
inc
xor
je
ja
cmp
xor
jno
pop
gs
dec
cmp
push
sub
pop
jno
jo
popa
xor
push
xor
imul
push
xor
xor
imul
popa
pop
imul
xor
jp
fs
inc
push
inc
outsl
jbe
push
outsb
dec
insb
xor
xor
dec
jne
dec
pop
outsl
push
xor
xor
ss
xor
inc
ja
sub
imul
arpl
dec
push
js
dec
data16
add
decl
add
add
imul
jae
incl
add
add
add
push
add
add
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
loopne
add
add
add
sub
or
or
add
loopne
add
clc
add
cmp
add
or
add
adc
add
sbb
add
or
xorb
xorb
add
cmp
add
inc
or
cmpb
add
pop
or
sub
add
add
add
sbb
add
xor
add
dec
add
orb
add
js
add
nop
add
andb
add
rolb
cmpb
add
lock
or
add
or
andb
add
cmp
sub
add
hlt
or
subb
cmp
add
or
add
adc
add
sbb
add
or
and
add
clc
add
cmpb
add
inc
or
subb
add
inc
add
add
pusha
or
xorb
subb
orb
add
jp
add
orb
adc
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
pusha
push
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
pop
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
pusha
pop
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
xchg
stos
or
add
add
in
add
add
add
cwtl
lods
or
mov
add
in
add
add
add
dec
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
pop
ret
or
mov
add
in
add
add
add
or
or
mov
add
in
add
add
add
mov
add
add
add
add
push
add
add
add
add
sbb
or
mov
add
in
add
add
add
enter
mov
add
in
add
add
add
js
or
mov
add
in
add
add
add
sub
or
mov
add
in
add
add
add
fdiv
or
mov
add
in
add
add
add
mov
or
mov
add
in
add
add
add
cmp
or
mov
add
in
add
add
add
call
add
add
add
add
cwtl
pop
or
mov
add
in
add
add
add
dec
or
add
in
add
add
add
clc
adc
add
add
add
add
add
add
add
add
add
pop
push
or
mov
add
in
add
add
add
or
add
add
add
add
add
add
add
add
add
push
add
add
add
add
sbb
add
in
add
add
add
enter
mov
add
in
add
add
add
js
or
mov
add
in
add
add
add
sub
add
add
add
add
add
dec
or
mov
add
in
add
add
add
mov
add
add
add
add
add
push
or
mov
add
in
add
add
add
call
add
add
add
add
cwtl
bound
add
add
add
add
add
or
mov
add
in
add
add
add
clc
insl
or
mov
add
in
add
add
add
test
or
mov
add
in
add
add
add
pop
jns
add
add
add
add
add
jg
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
in
add
add
add
fcoml
add
in
add
add
add
mov
add
in
add
add
add
cmp
or
mov
add
in
add
add
add
add
push
add
add
push
add
add
add
push
add
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
xor
add
dec
add
xor
aaa
add
dec
add
xor
cmp
add
dec
add
xor
cmp
add
dec
add
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
xor
add
dec
add
xor
aaa
add
dec
add
xor
cmp
add
dec
add
xor
cmp
add
dec
add
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
xor
add
dec
add
xor
aaa
add
dec
add
xor
cmp
add
dec
add
xor
cmp
add
dec
add
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
xor
add
dec
add
xor
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
data16
jo
imul
outsb
add
add
mov
push
or
cmc
stos
pop
mov
pusha
sbb
imul
push
and
sub
cmp
mov
sbb
ficompl
jp
mov
data16
pop
movsl
into
adc
mov
jo
aad
sbb
lods
int3
jecxz
push
aad
leave
sbbl
or
push
add
dec
ds
and
add
mov
lret
pop
test
and
push
std
add
addr16
adc
lods
sub
pop
xor
mov
test
mov
push
xchg
pop
outsb
lcall
adc
pop
mov
aaa
xchg
scas
mov
adc
xchg
sub
xchg
cmp
mov
out
loope
push
or
and
or
inc
repz
rep
and
scas
popa
dec
or
fwait
sub
mov
cltd
xlat
mov
clc
xorb
xchg
jne
inc
mov
xchg
les
cwtl
mov
imul
arpl
daa
or
aam
xor
pop
rorb
pushf
lea
mov
xor
sub
mov
or
jecxz
pop
adc
add
xor
push
repz
int
cmp
repz
pop
insb
cld
mov
mov
push
jnp
xchg
push
ja
test
xor
jmp
andb
not
adc
repnz
rorb
mov
adc
iret
mov
aad
mov
or
jg
xorb
mov
xorl
sub
cmp
dec
lret
stos
bound
mov
push
jp
xor
dec
jge
bound
xchg
dec
inc
insb
jns
mov
or
inc
xchg
mov
or
or
sarl
movsl
jne
outsb
mov
cmpsl
aas
add
xchg
add
imul
ss
sti
cli
ja
mov
sub
xor
sahf
int3
mov
push
icebp
rolb
push
fwait
lcall
xchg
and
mov
nop
repz
jge
or
pop
xchg
mov
cli
jg
in
or
add
mov
pop
es
push
bound
sub
adc
das
and
mov
and
xor
movsl
data16
mov
mull
out
or
jp
jbe
leave
cmp
test
jle
sub
sub
push
mov
push
into
popa
pusha
mov
testb
sarb
addr16
sbbb
les
pushf
out
in
dec
adc
and
push
xchg
movsb
call
ror
inc
xor
or
aaa
sub
xor
lcall
xorb
adc
dec
xchg
mov
jl
xor
mov
pop
cmpsb
push
jae
xchg
popl
sbb
icebp
lcall
cmpsb
xor
dec
and
jle
push
pop
lds
stc
popa
insb
repnz
cmpsl
insb
mov
pop
in
pop
push
mov
and
jnp
roll
aam
cmp
imul
adc
cmp
lret
mov
jnp
lods
fidivl
pop
and
add
lcall
fbstp
xorb
and
push
cs
push
xchg
fs
xchg
mov
scas
xchg
and
outsb
arpl
inc
push
mov
xor
pop
inc
push
mov
and
std
mov
dec
mov
out
push
repnz
add
sahf
aaa
and
or
xor
add
test
adc
insb
cmp
and
int3
daa
sub
testl
out
mov
mov
shr
sbb
call
mov
dec
dec
iret
mov
or
aam
xor
sub
sbb
fdiv
fs
mov
test
fbld
dec
push
xor
stos
popf
jne
jo
push
adc
push
cld
cmp
mov
pop
adc
loop
inc
call
neg
popa
xor
repnz
subb
xchg
mov
sub
mov
inc
aam
and
adcb
inc
imul
mov
adc
aaa
jmp
mov
mov
jecxz
add
shlb
xchg
pop
shl
jns
icebp
sub
ret
mov
inc
scas
jl
xchg
gs
mov
addr16
mov
into
xchg
mov
gs
mov
jae
sbb
xchg
notl
pop
int3
jno
add
fnstenv
xor
stos
out
xor
lret
xor
fsincos
push
lods
mov
nop
mov
ljmp
inc
stos
sub
cmp
out
push
mulb
push
push
mov
lahf
out
aas
push
cmp
jmp
mov
rclb
mov
adc
lret
std
jae
fwait
cmpsb
add
pop
incb
push
sub
daa
out
fidivs
fsts
add
jns
int3
negl
shlb
ss
cmp
fisttps
mov
xor
int3
je
addr16
mov
mov
cmpsb
jae
fstl
and
sub
mov
jno
lods
cltd
xlat
or
push
test
int3
decl
xchg
mov
roll
pop
mov
or
and
add
fdivr
loop
cmp
jbe
push
imul
sbb
pushf
ficomps
xor
popa
scas
aaa
adc
mov
incb
iret
xchg
pop
mov
jno
popa
push
mov
sti
popf
fcoms
ljmp
pop
xchg
mov
mov
das
cmpsb
sbb
mov
sbb
loop
std
loop
pop
dec
xor
outsb
je
cmp
xchg
pop
mov
mov
icebp
iret
adc
cmc
mov
std
inc
cltd
xchg
clc
adc
out
repz
lock
dec
push
xlat
icebp
mov
mov
sbb
fiadds
notl
js
push
push
dec
and
and
cwtl
pop
dec
inc
dec
dec
inc
jg
xchg
loopne
push
in
push
dec
adc
add
lret
scas
pushf
xor
out
bound
push
inc
test
push
stos
hlt
mov
cmp
iret
lock
hlt
mov
xchg
ret
int
notl
or
and
inc
test
repz
adc
cld
jge
xchg
cmp
jge
mov
sbbb
imul
push
mov
rcr
nop
ljmp
in
xchg
mov
xchg
aam
cwtl
sbb
mov
or
push
shlb
sub
or
pop
filds
addr16
pop
lock
in
addb
dec
in
cmp
imul
push
out
mov
push
ret
fistpl
xor
insl
mov
jns
js
inc
mov
lods
pop
pushl
sub
pop
pusha
push
lds
jp
pusha
mov
aas
loopne
mov
mov
cld
and
sub
aam
pop
mov
ret
mov
movsl
fdivl
daa
js
push
je
adc
shll
pushf
pop
push
pop
mov
inc
stos
cmpsl
inc
aad
pop
in
shlb
push
cld
cltd
aam
push
pop
mov
mov
dec
dec
add
push
dec
xlat
dec
int3
jne
das
jmp
and
fsub
inc
clc
jnp
std
mov
cmc
adcl
mov
mov
cmp
stos
fadd
cs
mov
ret
or
push
sbb
mov
mov
das
cs
mov
add
jne,pt
lret
jge
fs
dec
sub
inc
pop
in
hlt
pop
popa
lods
ficomps
lea
popa
mov
push
aas
xchg
repz
adc
mov
lret
xchg
insl
and
inc
popa
inc
je
lds
jge
iret
lahf
lret
loope,pn
scas
imul
popa
dec
mov
jmp
ficompl
clc
cmpsb
and
mov
cmp
add
sbb
mov
xor
fwait
aaa
jecxz
xor
xchg
scas
pusha
push
pop
sub
adc
cmp
mov
inc
mov
and
test
xchg
or
mov
xlat
cmp
xor
pop
sub
sbb
and
xchg
xchg
test
dec
out
push
sahf
xchg
adc
jg
push
jge
das
push
jmp
flds
rolb
lods
imul
sbb
or
cmpsb
dec
in
cltd
cs
cmp
sbb
push
scas
xor
cmp
das
jns
lods
out
sbb
jmp
cmp
push
mov
mov
jg
jl
jo
in
negl
pop
xlat
es
mov
pop
call
cmp
mov
mov
nop
inc
das
lea
sbb
insb
pop
ret
adc
shll
mov
cmpb
fnstsw
xor
mov
pop
mov
push
out
adc
into
mov
xor
push
fxch
inc
pop
mov
push
add
in
jl
dec
xor
fistpll
icebp
jmp
pop
pop
hlt
and
push
lret
fimuls
test
inc
imul
rolb
mov
ljmp
gs
add
loope
js
test
rol
adc
into
mov
jl
pop
cli
add
sub
mov
fwait
incl
clc
cmp
xor
repnz
adc
int
xchg
inc
andps
add
stos
mov
or
cmp
pop
or
or
mov
sbb
or
lahf
popa
mov
fwait
hlt
pop
arpl
pop
sahf
and
or
mov
lods
aad
icebp
in
inc
imul
mov
or
lahf
mov
inc
enter
imul
mov
mov
test
dec
mov
and
je
mov
into
sbb
rcl
jl
test
cmp
mov
fmuls
jo
xchg
mov
popa
and
sbb
call
dec
out
insl
loop
fwait
jl
or
shl
xlat
xchg
jmp
jnp
call
add
test
out
cltd
sub
mov
dec
rorb
enter
inc
imul
ss
push
pop
push
or
or
jno
lea
insl
loopne
out
repz
rcr
and
lods
cmp
dec
adc
sub
lods
mov
mov
sub
aad
mov
movq
int3
or
adc
jecxz
lret
gs
pop
nop
cmp
movsl
popf
pop
cmp
hlt
pusha
jo
push
and
aas
jl
cmpb
dec
pop
iret
xchg
mov
out
or
dec
lret
adc
fidivrl
sahf
adc
iret
mov
lret
popf
imul
mov
pop
repz
lods
test
xchg
jae
inc
dec
jge
xor
pop
xor
mov
cs
popa
sbb
jo
aad
jle
lret
loop
out
mov
xor
loop
shlb
scas
in
lcall
jle
mov
push
fdivr
or
inc
bound
insb
mov
xor
mov
loope
mov
insb
or
arpl
sbb
xchg
dec
inc
and
popa
xchg
adc
xor
mov
push
dec
sahf
sub
popa
inc
or
insb
add
jl
push
jns
dec
lods
and
leave
gs
cmp
xor
push
xor
fcom
in
mov
shlb
fildll
jbe
negb
lcall
aas
inc
outsl
and
stc
stos
xchg
data16
cmp
clc
push
sbb
xchg
sub
or
daa
jne
lods
iret
sbb
sbb
cmp
mov
dec
aam
in
test
enter
mov
jb
mov
mov
jle
fwait
and
push
cltd
or
les
sub
and
inc
or
in
shrb
lret
jp
push
lods
adc
push
jnp
lcall
dec
jne
outsb
pop
and
test
test
jl
sub
ret
push
xchg
test
mov
mov
cld
pop
xchg
or
scas
xlat
int3
cmp
dec
and
in
fsts
dec
hlt
out
faddl
push
sub
push
dec
xchg
jg
test
cmc
dec
lret
mov
fs
sub
dec
sbb
xchg
and
lock
rclb
sbb
cmp
fbstp
cmp
sub
call
out
shrb
sbb
pop
lock
psllq
xorl
sti
es
loopne
inc
lcall
sbb
mov
pop
fstl
cmp
pop
and
fidivrl
push
sti
stos
add
inc
in
nop
inc
out
mov
xchg
xchg
cltd
sub
jns
testl
lods
inc
inc
mov
xchg
xor
dec
lds
adc
in
sbb
push
mov
dec
addr16
cmp
push
test
sbb
fisubl
add
js
fcmovu
popf
pushf
push
into
sahf
xchg
add
test
mov
in
js
pop
mov
sahf
jne
sbb
outsb
leave
scas
cmp
sub
fldenv
and
rcrl
call
sub
jg
add
shl
cld
dec
fidivs
mov
outsb
inc
xor
clc
loopne
rcr
push
sub
dec
and
in
das
mov
adc
push
int
mov
ret
lods
mov
adc
aas
pop
cmp
or
mov
fdivr
jecxz
lret
jne
insl
test
rcr
out
pop
addr16
aad
push
cmp
call
xchg
xor
or
mov
mov
es
into
mov
stos
insl
popf
sbb
mov
fwait
push
subb
and
push
fsubr
xor
rcll
adc
and
insl
sub
lret
lcall
mov
adc
mov
cmp
insb
fsubrs
imul
push
sbb
fbld
jo
lods
bound
insl
nop
fildll
sbb
add
push
mov
mov
or
jb
push
mov
in
pushf
mov
jg
pop
jo
xor
imul
adc
mov
pusha
push
mov
movsb
mov
inc
push
push
pop
popf
clc
pop
cmp
repz
mov
je
shrl
or
push
push
fincstp
lret
or
xchg
dec
mov
xor
adc
test
or
and
inc
adc
imull
and
dec
cwtl
push
in
sub
cltd
pop
fs
add
pop
popl
jge
pop
in
addl
push
jbe
sbb
test
mov
jge
icebp
mov
inc
scas
out
out
cmpsl
sub
mov
sbb
push
xchg
adcb
push
mov
clc
mov
nop
ljmp
aam
pop
les
mov
jae
icebp
xlat
adc
in
jp
les
xor
fbld
in
scas
adc
test
jb
and
int3
inc
mov
pop
pushf
jne
mov
ret
push
cmp
mov
pop
das
mov
and
cwtl
dec
dec
pop
pop
shlb
sub
jae
add
fld
dec
daa
fs
add
imul
sbb
and
subb
sbb
enter
sub
xchg
mov
das
pop
cmc
mov
xchg
sahf
xchg
stos
pop
je
mov
pause
add
clc
pop
mov
cmp
mov
lahf
mov
pop
das
mov
mov
jecxz
in
mov
icebp
dec
adcb
fistps
loope
in
data16
adc
mov
adcb
outsb
andl
pop
cmp
js
or
inc
pop
mov
iret
hlt
dec
add
mov
leave
dec
ret
unpckhps
push
nop
in
loop
gs
fdiv
mov
push
mov
mov
dec
test
mov
sub
inc
pop
cmp
lret
dec
inc
fstl
aad
pop
ds
jae
or
push
cltd
into
mov
cli
or
cwtl
imul
ljmp
jg
adc
xor
dec
lods
addr16
in
add
dec
scas
nop
rorl
pop
fnstcw
pop
imul
ret
pop
inc
ja
dec
stos
inc
pop
cmp
mov
pop
mov
fwait
nop
mov
clc
stos
dec
stc
mov
lea
cs
test
cmc
adcl
popa
cmc
jl
iret
in
movl
in
popa
push
ljmp
adc
cmpsl
pop
mov
or
into
inc
sbb
movsl
inc
inc
dec
or
pop
rcrb
mov
mov
jne
test
in
adc
idivb
mov
loop
or
xlat
pop
fmul
jns
push
pop
xor
lcall
iret
ljmp
lcall
xchg
or
fsubp
arpl
fnstsw
push
cmp
insl
dec
sarb
xchg
xchg
popa
pushf
fisubs
sub
xor
inc
in
popf
nop
stc
jb
test
push
ljmp
jnp
loop
outsl
stc
ljmp
nop
jae
or
cmpsl
icebp
pop
lds
mov
mov
push
add
testl
movsb
cmp
fidivrs
jnp
inc
int
mov
popf
dec
movsl
inc
leave
cmpsl
popf
lea
inc
dec
xchg
jno
testb
ret
xchg
sbb
stos
or
incb
add
pop
int3
lock
leave
cmp
jb
lods
rclb
cld
xor
xor
jns
scas
mov
jmp
mov
popf
or
insl
cmp
cmpb
mov
dec
pushf
ljmp
aad
mov
jae
jl
or
and
mov
sub
cmp
xchg
stos
push
add
and
jmp
hlt
cmpsl
adc
movsl
mov
ficoml
pop
shr
xchg
lcall
stc
and
into
xchg
loopne
loopne
or
dec
cmp
mov
cmpb
mov
mov
enter
and
or
imul
jb
inc
xchg
jne
daa
xlat
scas
andl
cmp
sahf
mov
addr16
mov
outsl
cmp
inc
scas
inc
loopne
cmp
cmp
ljmp
sbbb
mov
add
lret
cs
dec
cwtl
popa
int3
jp
jg
js
clc
out
mov
test
bound
mov
fwait
cmp
lcall
jnp
cmc
mov
fsubrl
push
cmp
lods
repz
scas
fcmovne
xor
dec
aam
mov
lods
or
mov
push
jb
pop
push
pop
call
aad
insb
dec
iret
js
cld
jne
movsb
jmp
cmp
fdivs
vaddsubpd
shl
and
cmp
dec
imul
inc
mov
cld
and
popf
lods
sbb
dec
xchg
dec
das
jecxz
and
mov
nop
add
pop
cmp
idivl
mov
dec
stos
stc
pop
out
mov
mov
mov
push
adc
mov
jp
out
mov
std
arpl
mov
mov
jecxz
sbb
loope
cmc
mov
mov
sarl
stos
lock
leave
in
push
or
pop
imul
popf
ret
jne
mov
out
call
hlt
scas
shrl
in
lods
mov
jno
int3
push
sarb
or
xor
push
test
add
orl
dec
inc
lods
loop
repz
outsb
movsb
nop
xor
push
inc
in
or
outsl
push
cmc
in
mov
cltd
int
pop
fidivl
and
or
gs
jp
das
and
mov
clc
xchg
bound
cmp
out
adcl
cwtl
fildll
mov
loop
jbe
jae
push
pop
push
inc
shll
lret
inc
mov
out
shrb
movsl
pop
push
jecxz
xor
xor
dec
xchg
sub
push
cmp
push
cld
xchg
addps
mov
inc
js
je
out
xor
ret
xor
push
shrb
jmp
and
rorb
sub
sub
xor
jae
ja
std
sbb
and
decb
rcrb
push
cmpb
sub
clc
fwait
inc
lea
fstp
and
loop
popf
mov
push
mov
inc
and
in
inc
lret
xor
push
rcr
mov
jns
adc
iret
inc
in
mov
or
push
fwait
scas
stc
add
aad
in
stos
scas
bound
jmp
repnz
inc
or
in
mov
into
mov
jmp
int3
fildll
dec
mov
lret
lock
lret
and
in
pop
sarb
call
inc
sti
xchg
inc
pop
mov
repnz
int3
stc
aam
je
inc
data16
sbb
jnp
sbb
inc
push
mov
sbb
aam
popf
pop
loope
adc
push
ret
push
out
mov
jge
addl
pop
jge
fistpl
dec
pop
dec
push
xor
ret
and
pop
cmpsb
xchg
out
lods
mov
insb
push
xchg
push
inc
gs
js
daa
jg
into
outsl
jae
mov
aam
int3
loopne
enter
pop
aam
imul
jmp
lcall
popa
and
shlb
cmpsl
fildll
dec
iret
pop
push
and
or
int3
lods
pop
jge
dec
jo
outsb
fucom
and
mov
sub
shll
arpl
iret
test
das
mov
push
cmp
aaa
pop
mov
rorb
push
xorb
jns
stos
and
stos
test
sub
xor
lcall
sub
les
int3
pop
rcrb
orl
pop
daa
std
hlt
movsb
and
add
scas
jo
pop
add
dec
stc
in
xchg
inc
cmp
sbb
aad
mov
sub
mov
dec
dec
mov
cmp
and
out
xor
pop
mov
add
xchg
imul
cli
and
and
or
roll
cmp
mov
popf
cmp
mov
popf
add
clc
mov
in
arpl
mov
dec
fwait
mov
shlb
sbbb
sbb
cmpb
insl
adc
pop
aad
push
xor
add
lahf
and
fimull
enter
out
cmpsb
outsl
mov
dec
add
push
mov
sahf
and
or
xchg
outsb
cli
dec
pop
loop
in
ljmp
push
mov
xor
sub
push
pop
sbb
shl
mov
rorl
pushf
add
sub
rorb
nop
xchg
cltd
xor
lahf
cltd
pop
jmp
pop
and
and
adc
fcompl
in
sbb
pop
xchg
ja
push
fnclex
inc
shll
sub
cmp
xchg
out
and
and
pop
mov
cmp
inc
insb
loop
in
jmp
fidivl
cmp
mov
jno
lcall
iret
je
inc
subl
or
sub
inc
fldl
test
fsubrl
or
pusha
arpl
dec
push
aaa
sarb
xchg
push
mov
dec
push
movl
std
fs
sbb
stc
ss
mov
ja
es
mov
cmp
in
dec
lods
push
sub
jbe
sysenter
inc
xchg
orb
inc
and
loopne
rcll
sbb
dec
xchg
cmp
jns
je
movsl
inc
xchg
dec
outsl
cmp
or
jo
adc
and
cmp
push
jb
push
sub
cmp
jge
mov
jp
inc
leave
mov
jecxz
dec
xor
ljmp
movsb
clc
add
fadds
or
sbb
pop
jo
pushf
cmpb
cmp
cmp
and
pusha
jle
int3
pop
int3
cmpsb
fs
test
gs
pop
outsb
mov
dec
mov
out
jne
pop
test
dec
ret
mov
push
enter
push
movsb
adc
mov
arpl
pop
xchg
mulb
jmp
in
cmp
test
mov
dec
aaa
shll
cld
cwtl
decl
jg
mov
pusha
jnp
cmpsb
imul
push
add
mov
lahf
add
sbb
and
jo
inc
cli
js
clc
clc
aas
mov
aaa
xchg
fs
rol
imul
fistps
jns
subb
fdivrs
cmp
push
rcr
sub
pop
inc
xor
pop
lds
cli
stos
xchg
push
cmc
mov
mov
xor
aas
dec
daa
fsub
dec
sbb
fnstsw
jae
jnp
fcompl
fs
xor
arpl
inc
inc
arpl
stos
adc
insl
mov
jo
jl
cmp
xor
push
mov
and
icebp
or
sub
mov
fwait
xchg
pop
aas
pop
dec
ja
push
je
pop
xchg
mov
frstor
mov
repnz
in
call
fcoml
xor
das
movsl
dec
inc
out
sbb
cmp
movsb
mov
sbb
sub
shrb
xor
sbb
shll
in
outsb
pop
lods
fwait
mulb
or
or
jmp
rorb
hlt
gs
add
rorl
mov
pop
pop
xchg
and
jmp
aas
add
mov
adc
mov
push
mov
sub
sub
mov
add
in
movsl
sbb
mov
loopne
xchg
ss
mov
push
rcrl
jp
mov
rolb
jl
inc
outsl
dec
mov
ds
aaa
std
xor
sbbb
mov
push
insb
mov
sbb
mov
js
movsb
mov
cld
xchg
jg
addr16
jle
mov
arpl
aad
shl
nop
push
push
inc
popf
mov
sbb
push
pop
mov
stc
sub
xchg
cmp
pusha
or
addb
pushf
mov
jno
dec
xadd
xchg
mov
insb
xor
mov
dec
sbb
sub
lret
js
pop
fildl
mov
sbb
daa
mov
jbe
jno
ss
xchg
sub
mov
pop
frstor
xor
cmp
inc
call
push
popf
dec
mov
jp
cli
in
inc
jle
popf
pop
popa
inc
jno
dec
pop
std
ja
mov
jns
dec
in
test
adc
add
push
jl
mov
int
clc
and
out
mov
add
dec
dec
out
mov
cmpsb
cmpsb
inc
sets
mov
adc
cmp
das
scas
push
daa
cmp
xchg
mov
and
sbb
or
pop
outsl
push
fisubrs
push
adc
adc
dec
pop
xchg
xchg
rcrl
frstor
jecxz
and
inc
inc
out
cmp
mov
insb
xlat
cmpsb
imul
add
xor
pop
pop
fwait
xorl
popa
xor
leave
sbb
out
cmp
or
daa
lret
das
dec
fsubrs
outsb
pop
and
gs
out
imul
pop
pop
dec
cmp
inc
repnz
add
mov
push
clc
mov
fisubs
jnp
xor
dec
inc
mov
iret
daa
hlt
scas
xchg
insb
xor
or
icebp
mov
push
xor
and
je
daa
jno
int
jge
lea
add
test
xchg
mov
jne
jb
outsl
cmp
pushf
pop
pushf
fdivr
je
xor
out
xchg
mov
push
in
xor
xchg
cli
push
fidivrl
hlt
fwait
sub
xchg
or
xchg
pop
xchg
cmpb
or
mov
sbb
adc
cwtl
pop
shrb
in
pop
inc
sarb
movsb
push
loope
and
sub
add
sbb
subb
fdivrs
xor
ret
addr16
mov
cmpsl
xor
stc
mov
jbe
jmp
ficoml
mov
ds
aam
shl
test
jns
xor
int
into
mov
sbb
sub
dec
cmc
test
pop
and
cmp
sub
pop
enter
adc
gs
loop
mov
lcall
stos
mov
dec
mov
notb
jl
mov
and
js
push
xchg
lea
cli
inc
sbb
inc
lds
outsb
scas
fldt
ss
add
cmp
mov
stc
xchg
jmp
aam
flds
out
or
sti
aam
popa
das
xchg
mov
xchg
rol
pop
in
fiaddl
xchg
lahf
icebp
mov
test
lock
jl
stos
dec
fcomps
cmpl
sbb
adc
pushl
sbb
jno
push
mov
dec
sub
int3
call
mov
fmull
sti
int3
data16
mov
xor
fstpl
lahf
jns
and
repz
jg
and
cltd
mov
adc
shlb
jg
jmp
pusha
fstpl
jecxz
lea
dec
pop
in
clc
daa
daa
xor
adc
testb
fwait
dec
loop
es
and
push
loope
movsb
or
sub
movsl
aas
xor
int
inc
lock
imul
cltd
sub
push
rcl
iret
popf
sbb
lcall
mov
ret
mov
dec
push
adc
push
push
leave
test
cmp
inc
aad
shlb
inc
dec
jge
pop
dec
mov
iret
arpl
mov
mov
ficomps
push
sbb
bound
dec
inc
mov
pop
push
sahf
inc
pop
inc
movsb
add
or
stos
ja
popa
sub
in
xchg
pop
and
cld
addl
lret
jecxz
sarb
rclb
test
fistpl
pop
scas
lods
mov
les
test
mov
dec
insl
xor
mov
setne
mov
mov
test
push
inc
xor
das
cli
mov
in
add
jg
std
fistpl
mov
pusha
iret
fdivrl
cmpsl
and
iret
pop
dec
xor
mov
mov
cmp
es
outsb
jno
xchg
or
cmpsb
js
stos
cs
das
jae
arpl
jb
push
cwtl
mov
pop
pusha
fs
mov
push
outsb
aad
cld
sub
fs
sub
and
or
and
cmp
mov
pushf
imul
adc
jne
jb
dec
hlt
leave
pop
add
inc
inc
cmpsb
sbb
mov
xorb
or
cld
pop
pop
inc
cwtl
push
mov
pop
cwtl
xor
lahf
push
adc
or
xchg
je
lods
fisubrl
or
inc
mov
rclb
aaa
inc
jbe
scas
imul
aaa
push
sbb
fs
clc
cmpsl
xchg
cmc
push
cmc
mov
mov
rcll
cmpsb
stos
test
mov
test
pop
dec
std
not
sub
xor
ret
arpl
xchg
push
loop
insb
stc
add
loop
loope
mov
imul
decb
xor
ljmp
stc
lock
and
dec
sub
cmp
or
mov
mov
aas
mov
add
dec
dec
ret
mov
arpl
pop
mov
inc
sub
push
pop
cld
mov
mov
mov
mov
int3
cmp
dec
ret
ret
rcrl
dec
xor
fbstp
insl
cmpsb
stos
fistl
xchg
inc
fstps
shlb
scas
jns
push
sub
popa
xchg
leave
add
aas
jne
lea
cmp
in
adc
add
xchg
or
xor
pusha
jae
adc
int
mov
test
popa
mov
in
sub
neg
pop
aad
push
fdivrs
bound
rorb
jle
fisttpl
int3
dec
fucomip
sahf
add
inc
add
inc
sbb
loope
xor
ss
loopne
insb
push
in
andl
scas
mov
mov
dec
inc
mov
ret
xchg
mov
jecxz
lcall
mov
inc
popf
inc
shll
sbb
sarl
aad
add
push
mov
mov
push
pop
push
bound
and
stos
xchg
inc
test
mov
leave
popf
lods
jmp
inc
jmp
dec
inc
pop
xchg
cs
mov
ljmp
pusha
dec
xlat
jg
sbb
xor
mov
fists
sbb
push
mov
mov
and
fnstcw
bound
mov
ja
sbb
push
dec
les
or
xchg
lods
push
jl
pop
mov
mov
dec
cltd
out
jp
mov
hlt
enter
in
insb
pop
aam
sahf
imul
dec
jle
pop
sbb
shll
xor
jp
les
pop
das
ret
and
sbb
movsl
pop
into
push
mov
outsl
xchg
push
jle
push
jae
sbb
sbb
lods
test
stos
frstor
aam
inc
ucomiss
stc
int
ljmp
fs
lods
lret
jl
andb
int
cltd
and
mov
repz
push
xchg
mov
stc
decb
cmpsb
sub
int
cmpb
xchg
stos
pop
push
mov
or
bound
out
test
lcall
int3
cmpsb
push
shll
outsb
stc
addr16
jb
das
add
xchg
xor
std
xchg
xchg
call
xor
pop
dec
lahf
mov
add
scas
mov
mov
sbb
or
sub
and
sub
lret
add
inc
jecxz
test
xor
lret
xchg
lret
hlt
test
stc
pop
pop
mov
or
sub
lods
test
mov
inc
cmp
sbb
cld
loopne
icebp
lods
cmp
sub
push
jmp
rclb
jmp
or
jae
adc
dec
cli
jnp
pushf
pop
out
out
inc
out
cmp
mov
stos
xchg
add
sbb
pop
and
cmp
cmp
repz
icebp
mov
test
rorb
sahf
xchg
mov
shll
xchg
fwait
push
mov
in
out
subb
push
push
push
cmp
mov
xchg
inc
clc
ss
stos
loopne
iret
cltd
shll
inc
xchg
jno
mov
dec
call
mov
sub
push
and
scas
das
test
mov
pop
or
rcrl
cmp
and
push
rcrl
outsb
iret
stos
nop
aam
pop
and
jnp
fimull
or
cmc
push
lret
sbb
outsl
or
or
cltd
scas
lret
or
and
mov
pop
pushf
cmp
insl
jb
push
ds
test
cmp
ret
or
cmp
and
daa
add
pusha
xchg
movl
push
mov
les
std
lret
cmp
dec
cltd
adc
out
adc
aam
sbb
mov
pop
pushf
mov
push
dec
fucom
shrb
sbb
jge
scas
xchg
ret
aas
push
out
ljmp
jmp
inc
rorl
stos
or
outsb
ret
punpckldq
es
ljmp
mov
enter
mov
scas
inc
int
adc
repz
adc
aad
cmp
xor
and
and
or
bound
fsubl
mov
sarb
dec
mov
push
push
stos
test
push
outsl
sbb
negb
dec
add
pushf
adc
pop
adc
pop
push
insb
push
sub
pop
mov
movsb
jno
outsl
lret
lock
cmp
push
ljmp
out
ljmp
pop
jecxz
pop
popf
sub
outsl
lret
in
cmp
mov
fnsave
push
mov
jmp
out
jl
scas
xchg
cltd
test
mov
jg
rcrl
movsb
xchg
add
call
andb
pop
dec
test
movsb
cmp
data16
adc
hlt
jp
pushf
mov
inc
inc
mov
jne
push
dec
ljmp
es
mov
mov
cmpl
out
out
mov
addr16
je
popf
test
jl
popf
jbe
imul
mov
sub
aas
lods
into
loopne
jns
mov
mov
dec
add
add
sbb
pop
int3
mov
cmp
and
inc
mov
dec
lahf
xor
das
jae
cmc
inc
subb
dec
ja
sub
jae
pop
in
mov
leave
add
js
cmpsb
add
mov
inc
cld
mov
scas
or
mov
cltd
lods
mov
xlat
fcmovnbe
mov
mov
add
jo
ret
pop
mov
sub
fwait
pop
push
inc
cmp
lret
pop
xor
mov
pop
insl
loope
xchg
in
imul
fcomps
or
mov
add
mov
xor
mov
iret
inc
into
cmpb
push
test
add
xchg
mov
dec
out
jnp
sbb
xor
jne
std
cmp
lods
jmp
cmp
bound
leave
decb
stos
daa
loopne
xor
clc
pop
ficompl
inc
or
fnstsw
inc
fwait
sbb
das
lret
std
lret
push
dec
push
add
jle
push
mov
sub
and
xor
sub
das
mov
mov
jp
mov
loop
cmpb
mov
cwtl
pop
loope
cmc
and
xchg
mov
pop
push
dec
sbb
mov
mov
in
into
add
dec
dec
adc
jle
inc
ret
dec
cwtl
pushf
std
enter
or
int
out
mov
mov
fcomi
dec
push
test
subl
jmp
iret
xchg
in
jb
adcb
cli
out
fidivrs
js
dec
sub
out
pop
in
mov
jb
ss
xor
xchg
fnstenv
xchg
cmp
popf
xchg
jg
out
loop
lahf
test
testb
sbb
xor
cs
inc
loop
jmp
mov
mov
push
imul
xor
xorl
in
xor
lcall
and
ss
sub
pop
push
pop
enter
nop
dec
shlb
rorl
cs
add
fwait
or
cs
cmp
dec
adc
xchg
cmp
outsb
rcrl
fdivrp
outsb
adc
jnp
jmp
fadd
sti
sbb
stos
or
sbb
adc
adc
xor
loopne
movsb
mov
out
stos
sarb
arpl
jne
add
adc
mov
sarb
pop
in
es
and
dec
lret
jle
xor
pusha
mov
mov
mov
mov
jecxz
outsl
xchg
mov
out
inc
dec
scas
ljmp
push
inc
mov
mov
aaa
das
in
mov
shlb
fdivrp
loop
xor
xchg
scas
shll
and
inc
add
adc
shlb
lret
xchg
sbb
pushf
shll
int
int
mov
push
mov
xor
or
jnp
pop
mov
pop
lock
sbb
mov
push
sub
daa
mov
out
sbb
mov
in
arpl
dec
mov
xchg
addb
mov
inc
test
jmp
jp
out
rol
data16
jbe
jl
outsb
push
popf
dec
or
fimuls
dec
pop
icebp
into
xorb
mov
pop
aad
insb
jmp
arpl
lods
mov
cmp
xorl
mov
dec
daa
jmp
add
fucom
xchg
add
adc
hlt
xor
cmp
loopne
jmp
adc
rcr
cwtl
mov
jecxz
dec
aaa
jecxz
pop
pop
push
mov
icebp
pop
xor
and
xchg
or
push
jne
pop
stos
cmpsb
fists
popa
test
xor
adc
mov
clc
sub
inc
mov
test
jmp
sbb
add
xor
push
enter
cltd
popa
pop
enter
add
pop
dec
xchg
cmp
or
data16
mov
jne
aas
pushf
jnp
pop
movl
jecxz
pop
in
cmpsl
sbb
dec
inc
mov
std
mov
or
jbe
dec
in
sbb
loope
mov
decb
mov
push
pop
sub
xchg
dec
les
adc
or
sbb
iret
pop
arpl
sbb
dec
lea
out
fcmovbe
jge
add
ret
mov
shl
frstor
push
jge
pushf
mov
addr16
mov
pop
pop
jb
fdivrl
ljmp
fcom
adc
push
cmp
aad
mov
dec
cmp
frstor
out
adc
cmpl
jl
inc
inc
pop
xor
aas
dec
mov
mov
outsl
nop
dec
imul
sbb
xchg
add
fcomi
pop
cld
sbb
sub
sub
lea
inc
mov
or
ds
cs
dec
aad
ror
adc
pop
hlt
sbb
lahf
aas
bnd
daa
sub
mov
andl
or
jne
imul
push
push
push
xchg
jp
enter
cltd
aad
imul
orl
push
test
mov
clc
adc
xor
or
mov
loop
xchg
cmpsl
sub
out
and
fcmove
fidivs
int
inc
or
call
out
mov
hlt
cmp
int3
out
test
pop
sub
repnz
push
in
push
mov
mov
scas
cwtl
ret
mov
push
xor
jnp
jb
push
jo
sbb
mov
add
repz
push
cmp
xchg
sbb
push
or
stos
cmpsl
mov
dec
mov
xor
cmp
gs
andb
dec
cli
out
and
fsubr
out
xchg
dec
aas
cmp
adc
inc
jae
lds
jl
popa
ret
pop
and
xchg
stc
fisttpl
inc
mov
stc
lods
dec
or
push
mov
xchg
push
dec
fmuls
mov
lret
lahf
add
sti
mov
or
jns
push
cs
stc
int
loop
lcall
ret
imul
pushf
pop
fsubs
in
int
inc
andb
and
jl
pop
divb
ljmp
loope
les
loop
ja
add
cmc
mov
mov
adc
mov
dec
cmp
inc
sbb
es
inc
or
mulb
push
rcrb
jmp
sbb
loop
ljmp
mov
hlt
sub
lds
repnz
mov
shrb
push
sub
aas
inc
movsl
pushf
or
jo
jl
push
add
cmpsb
bound
xor
fnstcw
dec
gs
cmpsb
adc
pop
loope
fsubrs
push
mov
shrl
add
and
xchg
xchg
ret
or
nop
stc
jns
pop
outsl
rolb
add
sub
test
fsubrl
mov
inc
sarl
test
inc
fisubrl
jge
hlt
sub
scas
andb
push
cmp
shrb
stc
inc
iret
fildll
fildll
clc
cmp
arpl
andl
rol
sar
leave
jnp
cmp
add
sub
imull
rclb
push
adc
mov
loopne
imul
xor
mov
xchg
js
jno
cld
jp
rcrb
and
mov
jecxz
rclb
ret
test
stc
inc
sti
out
mov
dec
cli
sub
xor
scas
jo
mov
lock
dec
lods
push
int3
outsb
mov
arpl
mull
xchg
dec
jp
xchg
push
test
ret
popf
inc
mov
adc
fiaddl
xor
les
mov
or
mov
and
add
cmc
rorb
subl
mov
lods
sub
ja
movsl
dec
into
int3
and
cs
test
in
cltd
movsb
loop
lret
notl
in
lea
xor
mov
insl
jecxz
leave
inc
inc
adc
xor
jns
mov
iret
scas
cld
jns
mov
push
jns
adc
fbstp
dec
ret
in
fstl
sbb
sbb
scas
adc
jbe
adc
lods
sbb
lret
pop
mov
xchg
mov
or
or
jmp
fdivrs
aaa
mov
mov
jle
add
adc
cmp
in
xor
int
cmp
xor
in
hlt
cwtl
add
sbb
xor
mov
imulb
cmpb
mov
stc
mov
mov
jge
xor
add
push
fs
aad
test
aas
shr
scas
shll
mov
cmova
sbb
rol
fadds
rcll
mov
das
mov
test
dec
lcall
ret
xlat
sub
fimuls
jne
sbb
outsb
mov
lods
hlt
xor
mov
mov
ljmp
repnz
adc
sbb
lret
pusha
or
xchg
mov
out
mov
out
jmp
mov
imul
xchg
mov
in
sub
iret
lcall
sbb
adc
movl
and
push
insl
dec
js
mov
mov
in
mov
xchg
mov
adc
mov
dec
pop
pop
dec
mov
push
jae
dec
popl
xor
adc
fucomip
xchg
inc
lcall
scas
aas
sbb
cld
lcall
inc
aam
enter
ret
sti
push
cmc
adc
jno
test
jns
push
add
or
push
pop
jns
sub
sub
sub
push
cmp
sub
sub
or
shll
add
adc
pop
pop
mov
nop
sub
xor
dec
cmc
sub
xchg
push
insb
adc
mov
pop
imul
arpl
psrlq
inc
adc
fldenv
adc
jae
fdivl
jmp
fcmove
repz
pop
add
rcrb
leave
fs
xlat
out
negb
pop
cmp
fadd
mov
ja
pop
mov
popa
sub
in
add
pop
push
sbb
mov
or
popa
push
cmp
xchg
jl
testl
and
dec
and
inc
inc
xchg
ds
xor
dec
adc
sub
jne
loopne
daa
xchg
add
mov
out
lret
aaa
fsts
mov
fsubrs
fidivrs
shl
testb
faddp
stc
int3
mov
mov
xor
cwtl
sbb
lahf
and
in
inc
jno
add
adc
fwait
mov
xlat
add
cmp
shll
fstps
in
repz
out
icebp
lds
outsl
mov
subl
mov
test
add
dec
lods
ret
xlat
jmp
test
inc
fsubrl
mov
daa
in
lods
movsb
pop
push
enter
jmp
sub
sbb
stos
fiadds
sbb
cwtl
mov
scas
sub
cmpsl
scas
or
jmp
mov
cmp
outsb
aam
iret
add
std
mov
loopne
pop
xlat
sbb
jmp
sbb
jno
inc
jno
test
adc
adc
call
pop
sarl
aad
in
cld
sbb
mov
jae
xor
aad
stos
pop
mov
sub
xor
testb
inc
insb
pop
icebp
std
mov
daa
mov
push
lahf
mov
orl
ds
xor
ljmp
movsl
lds
sub
sub
rol
adc
adcl
mov
out
sub
push
ret
adcb
push
cmp
adc
fldenv
xchg
sbb
std
cmp
out
sbb
cwtl
ja
and
fwait
jecxz
fs
inc
mov
xor
ljmp
int
popf
push
out
mov
call
mulb
ret
ljmp
test
fisttpl
pushf
push
arpl
fsubrs
adc
test
cwtl
mov
mov
sub
cmp
stos
lea
adc
dec
lods
push
jl
in
xchg
or
cld
dec
mov
jecxz
fwait
testl
adc
xor
xchg
mov
adc
movsb
movsl
hlt
outsb
push
inc
push
adc
mov
xchg
xchg
or
or
inc
aaa
xchg
jbe
add
mov
fmull
sub
sbb
inc
and
sub
in
int3
fists
fadds
cmpsb
mov
xchg
xor
cmpb
aam
and
cmp
cmp
shll
jmp
shlb
rcrb
inc
loope
out
lret
call
push
push
fsubrl
loopne
inc
aam
push
push
pop
arpl
scas
std
mov
pop
stos
or
or
mov
movsb
pop
cmp
dec
in
jmp
bound
sbb
bound
push
ja
or
jb
cmp
mov
mov
sub
sbb
clc
loopne
sbb
orps
in
sub
arpl
rorb
adc
cld
sbb
arpl
call
inc
push
lods
cltd
repnz
sub
fisubs
add
pushf
sbb
and
incb
scas
jae
andl
cld
lahf
out
cmpsb
adc
loop
dec
push
popf
xchg
out
loope
rcll
pop
mov
add
inc
adc
aas
xorb
jne
push
sbb
movsl
push
push
or
sbb
dec
xchg
fiadds
aaa
sub
pop
xor
int3
and
and
movsl
sub
cmp
xchg
leave
addr16
adc
add
fsubrl
push
xor
push
mov
and
push
mov
dec
cmpsb
test
mov
lods
xor
ds
mov
repz
dec
and
fs
add
fdivs
jb
push
dec
pop
icebp
lea
adc
nop
mov
pop
call
sti
sub
js
movsl
mov
stos
pop
cmc
sbb
js
test
pusha
xor
iret
cmp
xchg
jo
ljmp
hlt
jb
mov
pop
mov
mov
xchg
sub
rcr
mov
mov
mov
movsl
adc
cmp
sbb
mov
and
or
adc
rcll
jnp
adc
mov
cmp
mov
lods
pop
xor
test
int3
or
xor
dec
and
int3
jo
sub
xor
mov
outsb
lret
loop
je
pop
cmpsb
cmp
in
in
inc
out
in
push
dec
xorl
mov
lahf
loop
out
inc
pop
std
fsubrl
in
fwait
mov
sub
pop
mov
sub
lret
sub
out
lods
mov
mov
scas
inc
cs
push
sbb
test
dec
or
sub
daa
js
cmp
popa
xchg
push
push
push
lock
cli
in
xlat
pusha
fstpl
mov
aad
lock
dec
das
test
in
lea
mov
inc
insl
sub
iret
add
ljmp
inc
sbb
test
enter
sub
imulb
inc
mov
imull
outsl
or
out
and
sub
adc
mov
inc
mov
mov
mov
mov
add
out
jno
jp
std
push
jmp
icebp
mov
sub
cmp
add
out
les
pop
lds
je
lock
jnp
sbb
adc
mov
push
dec
out
mov
sub
ret
lods
sub
insl
pop
mov
fimuls
mov
or
cld
inc
jae
in
xor
lods
pop
add
sbb
pop
and
inc
mov
adc
stc
pop
or
and
in
test
xchg
adc
push
inc
adc
add
pop
pop
test
fiaddl
addb
mov
das
sbb
jbe
out
test
icebp
xchg
out
mov
inc
in
rcr
cmp
or
adc
stos
into
inc
mov
repz
adc
int3
push
mov
pop
dec
mov
xchg
and
loop
dec
xchg
add
fcompl
sub
jne
icebp
inc
and
or
pushf
adc
cmpsb
in
aas
arpl
jl
inc
repz
add
jnp
xchg
stos
pop
cs
sbb
mov
aaa
cld
or
lea
jb
push
mov
inc
outsb
pop
xchg
sbb
push
jge
rcl
leave
dec
pusha
xchg
sbb
addr16
mov
in
iret
mov
push
pop
data16
pop
aaa
push
js
andl
jbe
dec
or
pop
daa
jp
lods
push
jecxz
dec
cli
xor
add
xchg
cmc
mov
int
adc
nop
xchg
ja
xchg
in
popf
fs
sub
mov
cmp
std
pop
sbb
inc
cmp
sarb
out
divb
mov
into
jne
divb
aaa
dec
in
sbb
jb
jge
pop
lock
std
int3
stc
or
add
and
push
les
xor
sti
ret
mov
das
pop
push
in
push
add
pop
adc
arpl
adc
lock
jge
fldenv
sub
pop
jnp
add
add
fnstenv
repz
dec
in
sub
xchg
sub
insl
and
data16
cs
enter
mov
xchg
fistpll
cmpsb
dec
aas
sub
enter
cs
rorl
push
lret
and
add
frstor
cwtl
lock
mov
sub
inc
push
or
sub
or
xor
dec
mov
xchg
cmpl
xlat
xchg
fwait
das
fldcw
push
mov
sub
pop
insl
decl
imul
addr16
cmp
sub
push
xor
push
mov
shll
xchg
cld
jmp
xor
mov
push
adc
push
sub
mov
nop
xchg
movsl
daa
jnp
ja
xorl
jo
repnz
cmpsb
lcall
dec
xlat
addr16
inc
hlt
xchg
jg
insl
call
les
iret
xchg
lahf
mov
aaa
lahf
jl
cld
arpl
iret
sub
mov
lods
dec
shrl
cmp
inc
out
push
rorl
das
jmp
push
iret
insl
hlt
lods
xor
inc
xor
pop
sbb
push
lret
fstp
mov
add
stc
and
mov
les
pop
mov
into
cmc
push
mov
hlt
aad
stc
push
lret
push
sub
cmp
sub
lcall
mov
jg
sbb
mov
mov
dec
clc
dec
push
add
call
inc
mov
test
inc
mov
jle
mov
push
out
je
mov
adc
adc
popf
rol
fnstcw
leave
push
out
mov
push
stc
cmpsb
fcmove
movsb
es
and
push
jns
fdivs
repnz
cli
push
or
mov
adc
mov
in
mov
andb
lahf
daa
mov
out
push
or
fs
sbb
dec
icebp
hlt
neg
xchg
inc
pop
fisubrl
cmpsl
scas
test
or
add
push
jle
pop
sub
or
mov
pop
mov
in
ljmp
idivb
xchg
xor
jp
cwtl
adc
in
fcomi
and
cmp
or
xchg
outsb
mov
sti
outsb
cmpsl
jnp
dec
mov
mov
rolb
out
mov
mov
sbb
popf
push
imul
out
dec
movl
shll
orl
fiadds
lds
mov
jbe
adc
or
js
dec
adc
jle
mov
dec
cmp
lea
jle
mov
js
ja
dec
gs
xchg
pushf
lret
push
ja
orb
push
loopne
imul
and
testb
inc
sub
jecxz
fcomps
push
lock
test
frstor
pop
out
int3
subl
cmovle
dec
pop
push
rcr
popf
pop
fimuls
les
jae
xchg
lahf
sub
ret
dec
xor
fisubrl
xchg
mov
in
lret
jb
jae
mov
out
mov
cmp
out
das
sbb
add
jecxz
pop
in
adc
adc
test
and
das
sub
mov
xor
sbb
iret
xor
data16
aad
rcll
xchg
pusha
adc
mov
xor
xor
cmpsb
dec
lea
jne
aad
jmp
call
mov
lods
mov
mov
cwtl
sbb
loopne
outsb
rcll
or
or
out
loopne
fstps
sbb
cmc
mov
jb
out
cli
push
lock
in
jo
shr
mov
push
mov
mov
gs
xor
test
or
out
jp
sub
pop
sub
xchg
pop
xchg
in
jne
ss
and
or
dec
push
mov
sbb
pop
mov
mov
call
imul
sbb
mov
mov
out
mov
loop
mov
push
jmp
xchg
pop
and
arpl
inc
push
mov
sub
data16
iret
sub
xlat
and
imul
adc
mov
xchg
jbe
rorb
mov
repnz
inc
jo
sub
mov
sbb
mov
les
mov
and
and
fstps
andl
sti
je
xchg
and
cmp
aas
inc
cld
push
sar
inc
je
xchg
xorb
fcomip
enter
jb
dec
aad
mov
mov
adc
sysret
sti
test
jnp
pop
push
sub
inc
hlt
mov
and
aad
lret
adc
or
aaa
mov
pushf
cs
sub
repnz
fstl
jae
ljmp
sti
orl
mov
enter
cmp
fistpll
mov
movsb
movsb
out
dec
addr16
adc
insb
lods
cmp
adc
pop
lcall
push
in
out
jnp
fs
jo
out
ret
sub
and
xchg
icebp
out
jp
fsubrs
mov
cmp
dec
fwait
test
mov
repz
mov
push
or
cli
push
popa
push
mov
mov
call
lods
pusha
cmp
pop
insb
jge
lret
mov
call
mov
lret
mov
lods
mov
mov
icebp
ret
cld
fadd
pop
push
dec
jo
addr16
repz
and
mov
push
pop
addr16
jne
out
mov
push
or
lahf
call
das
jmp
out
or
imul
pop
mov
daa
sub
mov
and
lods
xchg
cmpsb
out
aad
cmpsb
ja
ror
andl
pusha
mov
stos
push
cld
jo
mov
adc
adcl
push
sti
enter
out
dec
ret
pop
or
pop
setne
xor
mov
mov
fsubrs
mov
adc
or
ja
daa
int
mov
mov
inc
insb
out
jmp
pop
fcomip
sub
stos
mov
std
and
cmp
movsl
xchg
dec
lahf
stos
lret
cmp
xchg
lret
shll
into
inc
inc
jg
mov
insl
sub
mov
rcrl
loop
data16
sbb
subb
jp
inc
pop
scas
and
add
aas
push
dec
mov
std
sbb
movsl
mov
push
mov
loopne
ret
and
dec
test
sub
push
mov
inc
sbb
addr16
add
and
xchg
scas
mov
or
mov
clc
inc
out
or
and
adc
arpl
bound
xchg
fbld
movsl
and
mov
push
daa
add
or
and
pop
sti
and
add
sub
cmpsl
fs
xchg
imul
dec
loopne
cmp
inc
mov
and
jb
pop
pusha
fistpll
loopne
push
or
xor
sbb
stc
jmp
pop
dec
and
jge
loop
xor
inc
sub
and
mov
adc
js
jo
cmp
aaa
pcmpgtw
repz
int
push
fbld
cmp
lcall
pushf
fdivs
lds
mov
loope
sub
jae
mov
jns
out
mov
pop
sahf
or
mov
cmp
mov
ljmp
faddl
mov
inc
imul
jno
mov
fcmovb
int3
sbb
adc
bound
gs
roll
cmp
xchg
repnz
cwtl
fadd
lahf
adc
gs
rorb
pop
dec
and
shr
mov
xor
push
dec
cs
loope
orb
jne
cld
roll
dec
inc
cmc
test
call
lret
xchg
mov
jae
jge
or
loope
dec
dec
leave
xchg
add
pop
mov
aam
frstor
es
cmc
fwait
popa
jmp
or
insb
cmp
xor
cmpsl
imul
test
pop
mov
push
pop
push
sbb
xchg
adc
scas
mov
jl
pop
add
lods
popa
lock
enter
mov
add
fcompl
adc
xor
iret
daa
fwait
sub
adc
pop
pushf
dec
repnz
jo
cmp
scas
jp
dec
shll
mov
shrb
cmpsb
cmp
add
iret
sbb
and
std
aas
or
stos
jl
and
xor
mov
rcll
aam
sbbb
lock
aaa
pop
std
push
xchg
sub
popa
lods
pop
add
xchg
or
loop
mov
lahf
add
dec
hlt
push
je
aad
cmp
lods
loope
lret
rorl
in
popa
and
dec
rorb
cwtl
shrl
xchg
pop
pop
sbb
gs
scas
sbb
lock
nop
stc
mov
shrl
fisttpll
cmp
lock
dec
pushl
mov
cs
dec
cwtl
lahf
mov
lcall
jle
mov
test
add
lods
and
jp
sbb
aam
outsb
xchg
push
add
xchg
adc
sub
cmp
lahf
sub
push
pop
fiadds
pop
shlb
xor
fbld
bound
lcall
addb
sar
scas
arpl
ljmp
ficoms
push
sub
jge
movsb
into
aaa
sahf
sbb
push
and
movsl
push
sbb
iret
fsubrs
cmpsb
dec
sub
push
mov
xchg
rcrb
pop
jecxz
pusha
push
aad
fidivs
xor
imul
adc
outsb
pop
inc
data16
mov
sbb
cmp
shrb
push
jp
inc
jp
cmpsb
dec
out
mov
mov
xorb
push
not
cmp
adc
movsl
sbb
dec
jae
push
scas
bound
push
cmp
xor
movsl
mov
fld
or
mov
and
sarb
pop
jl
fwait
in
lods
mov
aaa
int3
mov
mov
loop
dec
jno
and
call
jmp
out
mov
scas
xchg
or
mov
mov
rclb
lret
mov
jns
jmp
jae
js
addr16
mov
cmp
sarb
jbe
xor
test
cltd
arpl
xor
inc
fcomps
adc
adc
scas
push
sbb
cmp
in
int3
xor
pop
es
repz
je
pop
outsl
mov
sahf
maskmovq
testl
mov
cmp
outsl
xchg
pop
out
xor
inc
pop
sub
pop
imul
pop
xor
mov
rcrl
pop
pop
loop
push
scas
arpl
repnz
hlt
std
fcmovnb
pop
sbb
lcall
js
leave
mov
xchg
loop
cmc
jg
fldenv
test
dec
nop
test
or
or
push
xchg
mov
dec
shlb
in
pop
dec
push
and
push
imul
rcll
xor
in
iret
rclb
pushf
fwait
mov
inc
jle
mov
lock
add
test
pop
mov
pop
insb
push
push
sbb
addr16
dec
sahf
mov
cmpb
fadd
inc
xchg
call
mov
out
scas
aas
jae
test
add
lret
sahf
mov
push
mov
sub
loop
sub
push
inc
or
cmp
push
out
stos
inc
enter
lret
mov
fs
fdivl
out
cmp
pop
xor
iret
sbb
or
loop
add
stc
and
xchg
daa
daa
fadds
pcmpgtd
mov
imul
ss
pop
hlt
cmc
sbb
mov
xchg
or
comiss
nop
ljmp
test
cs
mov
add
add
repz
movsb
ss
in
pop
std
xchg
pusha
nop
popw
cmp
inc
mov
enter
test
pop
mov
jno
pop
mov
pop
movsl
pop
lock
mov
cmp
mov
aaa
or
and
cwtl
inc
ret
pop
int
insb
fists
dec
popa
mov
test
push
push
xor
shll
dec
mov
mov
ret
aam
mov
pop
lock
sub
cmp
iret
mov
sbb
fistl
adc
add
jmp
mov
dec
ljmp
cli
test
repnz
shlb
clc
mov
pop
or
add
xchg
mov
push
in
testb
dec
test
int3
add
mov
and
aam
rcrl
cmpsb
mov
xchg
fwait
mov
into
pop
lret
out
enter
scas
mov
add
fadds
mov
inc
inc
push
je
and
inc
lea
flds
aad
jno
jge
cmpsl
adc
in
xchg
dec
mov
pop
and
adc
inc
xchg
aam
xchg
dec
inc
stos
sub
mov
jne
mov
xlat
or
jge
icebp
mov
mov
inc
lahf
frstor
mov
or
push
fnstenv
cli
in
mov
lret
mov
xchg
cwtl
push
jno
mov
ds
mov
push
jns
jecxz
xor
sbb
add
and
cmp
js
outsl
mov
insl
repz
pop
lods
jns
in
lea
jo
dec
push
inc
fidivrl
sbbb
les
mov
add
mov
es
outsl
insl
dec
mov
out
or
mov
sbb
cmp
rcl
bts
cld
mov
add
mov
xor
lds
in
scas
iret
fsincos
mov
out
mov
in
mov
jne
or
insb
adc
jns
notl
or
pop
add
or
sbb
dec
aam
mov
jmp
add
inc
or
cmp
cli
fists
icebp
cmp
leave
xchg
outsl
lcall
sti
pop
fwait
lock
push
pop
pusha
mov
push
dec
int3
popl
clc
add
std
in
push
sbb
sub
pop
dec
data16
mov
xchg
push
sub
push
or
test
push
sub
outsl
sbb
fbstp
add
jo
dec
mov
jo
mov
xchg
xor
es
outsb
or
or
fildl
bound
cmp
pusha
and
sbb
lcall
push
xor
mov
bound
fisttpll
pop
jnp
inc
pusha
lret
push
cmpsb
adc
and
mov
out
aad
cs
xor
pushf
and
enter
out
xchg
js
lods
push
test
jecxz
sbb
cmp
outsb
add
imul
sbb
add
sarl
cmp
push
pop
adc
xor
out
out
push
fucompp
xlat
pop
test
mov
cmpsl
pop
mov
pushl
cmpsb
sarb
adc
sub
call
addl
xchg
mov
arpl
adc
sub
jmp
sbb
pop
call
out
xor
sti
adc
pop
cmp
movsl
inc
and
push
xor
loopne
mov
dec
into
adc
pop
pmaddwd
int
lods
jl
repz
lds
or
aaa
adc
mov
js
test
rcrb
sarl
loopne
jns
std
mov
mov
mov
fidivrl
movsl
sub
bound
lcall
jne
and
daa
xchg
out
outsb
push
mov
xchg
aam
repz
lahf
repz
imul
scas
popa
adc
or
jg
out
and
fdiv
shll
or
shlb
lods
les
mov
xchg
inc
xlat
arpl
je
jmp
xor
ljmp
in
mov
stos
enter
into
ficomps
mov
inc
and
pop
aas
arpl
gs
test
clc
and
andl
fstpl
push
pusha
popa
int3
and
ljmp
int3
test
cs
mov
inc
pop
fiadds
in
nop
lahf
cmpl
sbb
and
nop
mov
rol
mov
sti
sti
add
add
pop
icebp
cmp
inc
sub
flds
fs
das
fwait
mov
insb
jecxz
mov
and
clc
lock
lods
ss
sub
in
repnz
xor
std
fidivrs
and
xor
lea
mov
mov
xor
cwtl
mov
adc
stos
mov
dec
repz
jo
pusha
or
stos
dec
and
push
mov
pop
sbbb
and
mov
mov
sub
loope
jb
sub
lcall
push
cmp
rclb
and
subps
and
int3
sub
pusha
mov
inc
lods
pop
cmpsb
int3
mov
cmp
push
pusha
and
les
xlat
dec
pop
pushf
cltd
ret
lods
cmp
xor
mov
mov
lret
mov
rcrb
jns
dec
jecxz
pop
je
mov
xchg
movsl
dec
mov
mov
jecxz
sub
mov
mov
cmp
std
scas
jecxz
cmp
push
pusha
adc
lcall
push
test
ja
sub
add
outsb
xchg
scas
sarb
lods
inc
inc
mov
les
loope
dec
mov
jo
movsl
xchg
sub
lret
icebp
aam
inc
xchg
cmp
mov
pop
in
mov
jno
fistps
lock
imul
jo
test
ds
adc
add
xor
dec
and
xchg
je
jmp
scas
sti
out
mov
cli
xorb
mov
int3
cmp
jo
les
jg
pop
dec
sub
ljmp
xor
imul
test
mov
jmp
mov
jae
mov
mov
stc
lret
enter
aam
out
clc
add
mul
dec
xchg
push
sub
ret
inc
push
jp
int
xchg
int
xor
or
cmp
shrl
in
fistl
jl
dec
jecxz
sub
decl
inc
popf
push
imul
xor
subb
mov
xor
and
or
pop
sbb
sub
in
outsb
inc
mov
lret
push
call
movsl
incl
aaa
orl
push
sub
and
mov
andb
mov
add
xchg
pop
subl
cmpsl
imul
enter
jp
loopne
int3
and
mov
loope
bsf
sub
int
or
in
and
in
lret
jp
mov
mov
adc
lret
out
scas
scas
push
sahf
inc
pop
push
mov
andb
adc
lret
rorb
fsubrl
sti
pusha
jo
test
pop
mov
mov
mov
int
add
ficomps
std
jo
dec
les
ret
aaa
inc
addl
setb
divl
xor
xor
cmp
out
xor
push
and
icebp
or
mov
testb
pop
adc
pushf
pushf
xchg
scas
clc
mov
jne
push
dec
gs
in
lahf
fdivrs
insl
pusha
push
mov
and
xchg
out
pop
aad
imul
mov
movsl
loopne
push
les
cltd
shrb
adc
in
push
lret
call
cmc
cmp
inc
ret
cmpsl
pop
ljmp
push
mov
loop
sbb
xor
add
push
adc
aas
push
mov
xchg
xchg
aaa
mov
xchg
ds
sbb
mov
cmp
mov
xchg
jecxz
pop
flds
or
into
mov
into
cmp
hlt
shrb
cld
xchg
jns
test
int
aad
push
sub
or
adc
lods
test
popf
lea
fsubl
cmp
mov
fwait
lahf
sub
jecxz
sti
je
icebp
int3
inc
xchg
or
sbb
sub
push
push
pop
andnps
xchg
in
push
sbb
mov
dec
insl
daa
aas
add
push
pop
das
and
push
mov
mov
add
jecxz
sbb
loope
in
in
mov
clc
js
push
dec
popa
stc
jecxz
jge
outsb
scas
scas
pop
out
sub
lds
popa
xor
enter
xchg
lcall
xchg
js
xor
push
iret
bound
int3
adcl
mov
push
lods
repz
jmp
jno
in
test
cwtl
pop
mov
xchg
add
out
pushf
push
and
jnp
lahf
outsl
sub
shlb
adc
pop
inc
je
jecxz
cs
scas
jmp
loop
lea
add
mov
pop
call
stos
iret
sub
add
jno
cmovl
rclb
dec
mov
sbbb
ja
xor
lcall
mov
or
cmp
sbb
jmp
pop
js
sbb
xlat
int
fstpl
dec
xchg
adc
jo
test
mov
dec
sarb
xchg
clc
fiaddl
mov
mov
xor
add
fisubrs
pop
and
mov
push
addr16
idivb
mov
fsub
jae
jle
jnp,pn
mov
movsl
push
mov
pop
add
imul
adc
or
movsb
mov
ss
mov
mov
leave
xchg
fst
xlat
mov
or
in
xorl
push
fnstcw
and
add
sub
add
mov
enter
fcmovu
jo
test
xchg
ljmp
dec
xchg
xor
fldlg2
or
mov
std
lcall
cwtl
jmp
jb
push
fstps
sbb
dec
aam
mov
xchg
mov
xor
adc
xchg
into
call
loope
mov
sub
ds
dec
and
movsb
add
lcall
jne
fs
inc
sti
fadds
adc
or
cmp
xchg
pop
stc
cwtl
lcall
sbb
cmpsl
aad
push
bound
pusha
mov
push
push
lds
jle
iret
xor
push
mov
add
xchg
cmp
fcoml
and
sbb
jns
sbb
xlat
cmpsl
mov
enter
or
dec
sahf
xchg
jo
popa
lods
adc
push
scas
adc
and
mov
mov
and
pushf
int3
fs
fstps
push
faddl
mov
jge
fprem1
dec
movsb
ja
fdivrl
sbb
adc
add
mov
into
rcll
and
sti
cmc
sarb
pop
shrb
mov
pop
incl
aam
pop
insb
stc
mov
sti
mov
jmp
dec
fsub
rorb
push
leave
cwtl
xchg
sahf
pop
sub
inc
sbb
mov
add
lret
push
dec
push
xchg
int
sti
lods
or
sbb
adc
in
fstps
imul
sbb
xchg
aad
ja
and
sub
rorb
test
mov
sbb
xchg
xchg
stos
xchg
add
loop
cmp
mov
pop
lods
dec
push
push
jle
shll
cmp
xor
addr16
addr16
icebp
add
mov
jge
jle
scas
ja
hlt
and
adc
or
mov
lea
imul
stos
xchg
icebp
cltd
lret
insl
jl
stos
mov
cs
lret
pop
xorb
test
mov
mov
cmc
add
cmp
mov
and
inc
fistl
mov
lods
cli
jle
dec
push
mov
mov
mov
pop
inc
jmp
sbb
inc
or
loope
scas
inc
jle
push
test
xchg
pop
push
mulb
out
jl
xchg
adc
pop
loope
sbb
mov
and
xchg
insb
mov
sbb
popa
pop
test
jo
jnp
popa
notl
cmp
adc
mov
mov
mov
inc
mov
in
adc
stc
cmp
int3
imul
inc
inc
xchg
pop
into
bnd
bnd
cwtl
lret
rcrl
shll
jae
xor
repz
cld
push
add
stos
test
cli
outsb
jnp
mov
arpl
push
aam
ret
mov
inc
or
out
daa
pop
cmp
jge
xor
push
lret
mov
lods
cmp
aam
add
pop
js
cld
dec
lcall
popa
mov
hlt
mov
mov
and
mov
sti
sub
fidivl
repnz
jnp
jecxz
repz
inc
ljmp
inc
mov
jno
sub
add
adc
aad
add
test
cmp
pop
out
and
inc
and
or
jbe
subl
push
mov
stos
or
add
mov
dec
enter
repz
or
inc
and
xlat
mov
mov
push
xchg
xchg
rorl
mov
lods
push
pop
daa
push
lods
xchg
inc
inc
push
addr16
mov
push
test
mov
pop
or
jne
push
mov
out
clc
lods
test
aaa
pop
and
inc
frstor
movl
insl
call
es
rcrl
out
pop
dec
pop
aam
shlb
push
leave
mov
mov
clc
and
int
stc
daa
fimuls
xchg
fldt
push
sarb
into
inc
jno
mov
aas
xchg
push
rorb
mov
pop
fldenv
cmpsl
push
jg
push
add
cmp
fwait
in
pop
adc
fsub
lcall
nop
lret
mov
adc
popf
mov
or
faddl
movb
test
sub
mov
fwait
mov
cmpsl
stc
sub
aad
gs
mov
jae
shlb
lahf
mov
mov
xor
insb
stos
jae
sub
inc
mov
stc
sbb
mov
imul
push
shl
push
push
and
mov
adc
in
test
lods
mov
and
repz
lcall
rcrl
mov
test
lods
in
ja
pop
dec
push
insb
or
mov
jae
jnp
enter
in
cmp
sub
les
jno
or
pop
fstp
mov
lea
int
ljmp
mov
lret
push
rcll
addr16
call
push
cld
push
ficomps
mov
and
add
push
mov
jmp
sbbl
lret
stos
push
xchg
xchg
cmp
add
pop
mov
mov
rcll
dec
mov
adc
sbb
pushf
dec
pop
mov
repnz
xor
jb
lock
mov
mov
mov
fwait
push
sar
mov
sbb
fwait
std
push
enter
jb
shll
dec
sbb
daa
cltd
ljmp
cltd
xchg
fsubrp
mov
pop
je
loope
pop
je
push
dec
inc
jge
hlt
push
mov
jle
pushf
fs
dec
scas
cli
cmpsb
mov
aaa
mov
icebp
or
push
lret
je
pop
mov
int
repnz
add
pop
test
dec
popf
fwait
mov
into
shl
inc
insb
push
mov
sbb
addr16
loop
je
and
in
fldt
inc
xchg
and
mov
pop
mov
fstps
cmp
subb
fdivl
scas
or
lahf
sub
mov
xor
xchg
push
mov
test
cmp
adc
sbb
mov
add
push
xor
adc
das
sub
lds
dec
pop
jo
iret
sbb
movsb
mov
xchg
cli
stos
jge
into
insl
scas
jg
test
das
stos
or
jb
bswap
sub
cmp
cmp
fwait
mov
sub
add
sbb
imul
pusha
nop
into
outsb
ja
cs
das
inc
xchg
sbb
add
xor
or
lret
push
nop
imul
jb
mov
scas
sbb
cmpsl
cmp
scas
dec
add
out
push
pop
inc
scas
mov
rorb
xchg
ret
adc
sbb
mov
xor
aas
sahf
pop
sbb
adc
jg
stc
inc
ret
mov
push
add
cltd
push
fs
mov
mov
cmp
dec
sbb
fsts
orb
dec
mov
mulb
aas
lahf
pop
stos
shll
add
cld
cmpsb
inc
les
dec
jns
sbb
jg
rorl
jg
push
adc
data16
cli
ret
scas
cmp
cmpsl
cltd
inc
mov
es
pusha
ljmp
cld
enter
js
adc
cmp
dec
push
movsb
aas
push
imul
add
mov
popf
lds
mov
mov
clc
mov
addr16
dec
lds
push
xchg
jecxz
push
sbb
sbb
je
imul
sub
movl
sbb
pop
push
jb
aad
cmpsb
insb
push
adc
fsubp
js
test
shl
jg
shl
test
inc
call
sbb
xlat
outsl
dec
shll
test
dec
fbld
mov
std
test
and
sti
cltd
adc
inc
pop
stos
lea
incb
test
mov
mov
sbb
adc
and
mov
xchg
fstpt
xor
out
rcl
xchg
xchg
pop
push
inc
lret
mov
movsl
divb
stos
push
jo
loopne
jne
pop
xlat
xchg
sub
outsb
pop
int
push
adc
dec
ja
xchg
nop
sahf
cwtl
jnp
test
mov
js
pop
es
mov
jbe
fldl
cmp
lcall
xor
lahf
shlb
cmp
das
enter
pop
jne
js
mov
push
pusha
loop
xor
mov
jnp
xor
mov
push
add
flds
lock
add
and
leave
jo
jmp
inc
movsb
test
pop
mov
cmp
adc
jp
sub
add
xchg
mov
mov
pop
insl
mov
xchg
pop
jmp
cmp
in
int
arpl
aam
xchg
and
lock
std
clc
inc
out
mov
or
testl
mov
push
push
fsts
imul
xlat
xor
cmp
push
sbb
aaa
test
push
aas
mov
int
divb
std
test
push
lock
in
adc
push
ret
inc
jb
mov
sti
jge
sbb
clc
xor
ss
ds
icebp
nop
and
jl
or
push
or
mov
incb
outsb
hlt
cmp
aas
fcoml
aaa
sub
lea
mov
adc
add
notb
cmpsl
es
inc
jg
sbb
pop
xlat
mov
push
getsec
push
aad
and
into
es
shll
loopne
pushf
je
jbe
imul
lock
mov
lret
fsubrs
xlat
movsb
push
stos
push
xchg
add
push
lcall
in
scas
add
in
aam
test
pushf
xchg
imul
inc
mov
pop
push
push
addr16
ds
cmp
daa
mov
mov
movsl
push
fcmovnu
mov
in
lds
xchg
rclb
and
cmp
xlat
fmuls
fnstsw
pop
jg
ds
mov
lret
or
fldenv
mov
mov
xor
sti
sbb
cmp
movsb
in
jle
clc
aam
push
adc
cld
imul
mov
out
cmp
sbb
mov
icebp
and
shll
lea
mov
jp
jae
or
sbb
or
xor
mov
shlb
in
mov
mov
pop
pushf
fs
faddp
mov
daa
pop
push
or
dec
popf
stos
dec
xorl
and
aas
call
pop
push
xor
fdivrl
jnp
loope
jmp
xorl
xor
inc
mov
in
bound
nop
into
xor
inc
popa
jb
pop
xchg
pushf
ja
in
insl
jbe
cmp
aas
pop
roll
sahf
pushf
mov
aaa
adc
mov
or
jle
sbb
jg
clc
orb
xor
shll
lret
or
sbb
out
stos
dec
out
cmc
subb
rcll
and
sbb
sbb
cmp
sbb
add
xchg
repnz
test
imull
mov
test
push
push
sbb
mov
xchg
xlat
mov
sahf
repnz
pop
fldenv
flds
lret
xchg
push
subb
lahf
sub
adc
jge
dec
pop
add
jns
cmp
mov
mov
mov
dec
pop
push
cmp
fs
sbb
add
js
cli
xlat
aas
cwtl
ret
and
cmp
push
data16
ja
push
imul
xcrypt-cbc
cmpsl
push
cmp
sbb
or
push
movntq
inc
test
fnstenv
fcomps
sahf
data16
leave
mov
mov
call
sahf
and
cmpsl
cmp
fidivrs
inc
leave
mov
mov
jg
cs
iret
push
adc
pop
out
mov
and
das
push
cmp
ja
std
mov
pop
ljmp
adc
sbb
push
push
mov
mov
sub
cvttps2pi
push
pop
out
fidivl
cltd
dec
jae
mov
fcmove
addb
ja
data16
push
xorl
xchg
adc
cmp
lods
cwtl
fwait
mov
sub
mov
arpl
out
xchg
pop
fwait
int
mov
loope
repz
lds
xlat
sbb
std
mov
push
pop
imul
cmp
test
pop
pop
aam
add
je
dec
mov
dec
mov
icebp
mov
nop
iret
in
push
andb
stc
mov
popa
jne
stc
push
pop
mov
or
xchg
mov
mov
ljmp
clc
psrld
testb
push
mov
imul
es
sbb
cmpsl
and
jns
lret
add
adc
adc
mov
xorb
or
dec
das
push
mov
arpl
out
mov
xchg
lret
and
pop
cmc
shlb
push
jno
or
shlb
ljmp
lret
test
ret
mov
dec
push
lret
jns
xchg
adc
inc
pop
aam
xchg
cmp
dec
test
mov
xchg
mov
enter
lock
dec
jl
mov
test
negl
loop
adc
cld
adc
into
das
add
cwtl
or
mov
mov
cmp
pop
into
lods
mov
lods
pop
andl
cltd
mov
sub
in
lods
sti
addr16
dec
dec
rorl
lods
pop
lcall
shlb
ret
lock
arpl
insl
mov
mov
popa
inc
push
add
cwtl
or
jmp
mov
fldcw
sub
sti
sbb
jno
out
aaa
gs
in
mov
pop
lods
dec
dec
and
scas
mov
in
adc
jnp
scas
push
pop
add
movsl
daa
xchg
add
pushf
xchg
nop
shll
xchg
mov
int3
mov
int3
pop
out
add
arpl
dec
cmp
loope
stos
mov
cli
add
fwait
lcall
lods
roll
push
xchg
jp
jp
out
xchg
pop
dec
mov
mov
lret
jno
pop
jb
aas
mov
or
pop
aam
daa
push
pop
jg
ror
xor
mov
sub
sub
add
js
popa
push
xchg
mov
sub
out
ret
push
or
push
pop
pusha
inc
aaa
je
dec
subl
insb
and
adc
fyl2x
ss
xchg
mov
mov
in
aad
mov
jns
hlt
pop
and
lret
xchg
push
insl
cmpsl
leave
outsb
inc
data16
insl
mov
mov
and
adc
ljmp
pop
repz
sahf
mov
mov
push
nop
xchg
inc
inc
jns
outsb
dec
push
dec
loop
lcall
in
fs
sarb
shlb
sbb
mov
pop
xchg
repnz
adcl
pop
adc
cltd
inc
push
lcall
in
jp
jno
jne
aad
pop
stc
mov
inc
fs
cmpsl
pop
inc
cmp
sub
roll
enter
insl
xlat
push
mov
xor
and
mov
xor
xlat
data16
mov
xchg
jb
jmp
test
push
dec
sbb
out
cmp
xlat
mov
daa
in
sahf
push
xchg
mov
fstl
push
push
dec
shrb
pusha
ljmp
rolb
or
inc
shrb
inc
cli
pushf
mov
push
arpl
cld
xor
in
sub
mov
sub
jge
add
cmc
cmp
xchg
movsl
inc
pop
js
je
dec
imul
xchg
orb
mov
mov
sub
loope
and
jp
pop
nop
xor
lahf
mov
setne
sub
inc
les
dec
sbb
cwtl
rolb
ret
inc
mov
aas
sbb
xchg
or
sub
xchg
or
jno
mov
xchg
cmpsl
ja
fwait
and
adc
mov
nop
in
test
repnz
adc
int3
inc
sub
or
jmp
inc
idiv
aaa
pop
in
push
add
xor
dec
adc
jns
in
mov
jae
fdivrs
lds
xor
adc
mov
lods
push
xchg
and
stc
sub
dec
in
lcall
cmpsl
nop
jmp
mov
pusha
or
jae
lods
push
and
xor
dec
jecxz
xchg
sar
add
cwtl
aaa
lea
ss
jb
in
jl
mov
shll
push
test
or
and
rorb
xchg
push
xor
lods
add
sub
loopne
cld
cmp
mov
or
push
cmp
rorl
or
dec
mov
adc
cmp
cli
sbb
add
push
push
sub
xchg
push
ret
jle
popa
daa
imul
or
sbb
sub
xor
push
mov
test
sub
lea
pop
xlat
jo
shr
ljmp
rorb
loopne
repz
scas
jne
sti
inc
fsubrl
gs
push
or
push
add
stos
das
adc
mov
and
les
jb
sti
cmp
sub
adc
lahf
fstps
jl
adc
xor
mov
adc
insl
cmpsb
aaa
fimuls
stc
shll
adc
loop
mov
pop
and
lcall
cmpsl
lds
negl
popl
int3
rolb
insb
popa
push
mov
push
pop
mov
repnz
xchg
xor
mov
in
in
fsubr
pop
mov
xchg
into
push
loope
pop
or
sti
mov
fisttps
sahf
fs
divl
enter
and
mov
aaa
test
add
leave
ds
das
pop
les
ljmp
or
or
fdivl
jnp
shlb
push
mov
sahf
mov
pop
xchg
mov
add
nop
sub
push
sti
sti
enter
test
mov
imul
xorl
mov
dec
sahf
sbb
jnp
xchg
mov
add
cmp
repnz
loopne
fsubr
or
outsb
lock
cli
xor
pop
add
popf
outsl
test
sbb
loopne
cmp
rclb
nop
cwtl
stos
adc
ss
add
mov
sbb
popf
addr16
lds
js
push
out
or
jo
mov
in
add
insl
es
jne
addr16
into
dec
xor
lea
pop
jmp
mov
ds
icebp
mov
sahf
sbb
cltd
ficoms
lds
pusha
mov
mov
loop
into
xchg
jmp
mov
add
loopne
ds
jno
ret
inc
push
dec
int3
ret
rcrb
popf
in
lock
sbb
push
mov
jmp
fsts
fucom
mov
pop
fdivrs
cmc
sub
pop
das
icebp
fsubs
push
pop
cmp
xchg
add
sbb
enter
jbe
rclb
mov
mov
jmp
je
lret
jbe
xchg
iret
inc
std
or
repz
mov
mov
test
hlt
sub
shl
jecxz
pop
daa
stos
xchg
jae,pn
push
mov
sbb
cmp
add
cmpsb
jbe
inc
add
pop
dec
jl
clc
xchg
fmuls
in
insl
push
push
testl
push
jl
mov
or
dec
daa
gs
jns
inc
pop
and
fld1
and
mov
sub
or
inc
jne
test
idivb
jle
loop
js
daa
cmpsb
push
cli
dec
lret
xchg
or
cmp
cmp
hlt
pusha
lret
push
and
jl
lcall
sub
pop
mov
mov
rcr
loop
mov
mov
nop
popa
out
cmp
sbb
fs
stos
mov
cmp
inc
fs
adc
loop
pop
shlb
cwtl
push
cmp
popf
jns
enter
shl
mov
push
call
mov
pop
jp
movsl
imul
ja
xchg
xchg
fisubl
push
clc
mov
push
lahf
rclb
mov
mov
int
mov
test
loope
stos
scas
fmuls
mov
sbb
outsb
adc
xchg
push
jle
ljmp
xor
push
out
ret
or
into
ss
inc
clc
cmp
sub
push
in
sbb
mov
jecxz
jle
jae
jmp
rorb
imul
add
mov
ja
aas
mov
mov
and
add
or
xchg
imul
outsl
xchg
ret
call
sbb
xchg
scas
loopne
popf
hlt
push
rclb
push
jb
xorl
lcall
jbe
sbb
sbb
enter
lret
flds
sbb
cltd
mov
add
outsl
add
and
inc
int3
test
jmp
push
sub
fnstcw
mov
cmp
pop
idivl
pop
lock
mov
adc
inc
mov
popa
imul
jbe
iret
call
pop
dec
cmpsb
shll
test
ljmp
adc
mov
jnp
loop
lahf
sbb
cmp
dec
adc
pop
hlt
mov
out
insb
xchg
dec
mov
fisubs
mov
mov
fsubrs
pop
mov
lea
cmp
loope
pop
cltd
incl
data16
cmp
adc
daa
test
test
inc
cmpsb
lahf
inc
or
and
adc
pop
jnp
push
fcmovu
mov
push
sbb
nop
insl
sub
xlat
aas
in
xchg
dec
data16
push
rcrl
pusha
mov
insb
mov
stc
pushf
ja
iret
jl
test
test
rcrl
int3
sbb
xchg
lahf
push
jae
dec
or
xchg
aam
xlat
push
sbb
mov
lahf
aam
data16
and
or
or
xor
dec
xchg
jmp
sub
or
cmp
jo
stos
and
enter
mov
push
stc
xchg
dec
pop
call
mov
and
mov
xor
jge
cltd
mov
adc
stos
fxch
mov
pop
repz
jge
popa
mov
add
sbb
inc
ljmp
test
pop
pusha
adc
lcall
fwait
movb
lea
ja
or
into
in
or
cmp
mov
inc
push
mov
cmp
and
stc
in
rolb
adc
sti
push
fistpl
gs
or
imul
jae
jl
add
mov
cmp
mov
dec
mov
mov
cmp
insl
lahf
cmpsl
daa
sub
mov
inc
lcall
sbbb
dec
xchg
cmp
mov
mov
lods
andl
int3
and
outsb
lea
push
mov
addb
int3
rol
icebp
push
dec
inc
inc
inc
test
xchg
cld
sahf
enter
xchg
fmul
sbb
and
out
mov
bnd
jp
movsl
das
dec
fdivrl
fcoms
outsb
mov
sbb
mov
ljmp
sbb
mov
cmpsl
data16
pop
gs
jns
notl
inc
or
icebp
in
out
adc
add
and
movsb
lcall
cmpsb
jnp
scas
shlb
add
jbe
lock
adc
and
adc
jns
mov
addr16
std
and
das
outsb
shll
jae
test
and
and
mov
pusha
shlb
mov
jmp
in
outsb
and
push
fs
mov
sti
lahf
add
inc
sub
cmpsl
pop
push
adc
and
lock
add
add
lods
adc
pusha
jb
in
leave
les
test
sbb
xchg
adc
xor
out
gs
sbb
mov
insb
into
xlat
sti
mov
push
addr16
js
fidivrs
inc
movsl
roll
mov
mov
insl
int3
xor
icebp
xor
jmp
cwtl
dec
scas
jg
sbb
push
jo
push
adc
xlat
adc
add
shll
int
mov
pmovmskb
nop
pushf
jns
outsl
cmc
jns
call
cmp
xchg
lcall
xor
mov
outsl
jb
or
shll
popf
loope
fiaddl
fwait
aas
hlt
xchg
pop
xchg
and
mov
ljmp
sub
inc
dec
arpl
divb
imul
or
pop
jb
pop
shll
jb
cmp
mov
sub
pop
fstl
inc
int
mov
inc
inc
adc
pop
pop
dec
test
sbb
pop
lock
ljmp
mov
jno,pn
cmp
mov
js
shr
jl
data16
sub
test
int3
inc
xchg
pop
sub
jnp
jg
mov
je
mov
loope
stos
pusha
xchg
inc
js
and
xchg
sbb
cmp
scas
es
lock
bound
xor
movsb
dec
loop
jp
add
add
mov
push
jns
outsl
inc
dec
rol
xchg
mov
aaa
je
jae
ss
mov
push
cwtl
or
lods
jne
inc
cli
pop
out
jecxz
loop
out
jmp
push
enter
in
dec
mov
pop
push
mov
out
and
push
aas
fs
xchg
adc
and
std
pop
push
scas
mov
jo
cmc
call
inc
or
dec
fisttpl
and
rcll
or
daa
nop
repnz
or
xchg
push
cmpsb
nop
xchg
pushf
sub
aas
das
adc
xchg
adc
dec
hlt
jo
mov
fidivl
fildll
loopne
adc
rcll
fsubrs
push
xchg
mov
inc
fs
xchg
aad
stc
shll
mov
pop
les
mov
or
ss
cmp
adc
inc
hlt
dec
or
ret
push
ficompl
jnp
jbe
jbe
loope
xchg
mov
add
sub
cs
xchg
adc
lods
subb
mov
adc
js
js
inc
mov
mov
iret
addr16
loop
ret
fwait
testl
adc
fdiv
rclb
jbe
mov
fistps
pusha
stos
rclb
mov
jo
js
or
jecxz
icebp
xchg
cmp
xchg
addr16
sbb
push
adc
jbe
push
lods
push
mov
jle
sub
sub
out
xchg
xchg
adc
and
xorl
mov
lods
xchg
orl
cmp
shufps
inc
jo
fcoml
cmp
mov
js
leave
sub
out
jge
loopne
stos
lahf
cmp
test
adc
int
mov
ja
inc
dec
dec
mov
and
mov
pop
hlt
mov
jae
xor
or
or
mov
inc
sub
cli
cld
jmp
icebp
push
mov
xor
mov
mov
or
jp
data16
inc
inc
int
add
xchg
pop
sbb
push
and
es
and
mov
or
gs
inc
xlat
in
pop
pop
add
push
push
inc
mov
fwait
xchg
or
or
mov
out
pop
jne
jne
xlat
repz
scas
or
int3
aaa
xchg
jnp
aaa
daa
ficoml
or
inc
hlt
movsl
mov
mov
ja
aas
popf
dec
jmp
ror
sahf
jb
imull
shll
mov
sub
mov
divb
std
pusha
fwait
imul
sahf
mov
xchg
push
jno
rorl
jle
inc
mov
outsb
lock
jno
in
sub
inc
xchg
int
inc
adc
push
cwtl
popa
mov
fists
sbbl
dec
add
sti
cmp
pusha
int3
push
fcom
dec
sub
xchg
fists
push
in
sbb
out
inc
stos
pop
mov
mov
and
orl
add
lahf
popa
adc
pop
in
or
cmpb
xorl
sbb
jbe
lods
in
add
sahf
inc
push
addr16
test
dec
pop
xor
scas
loope
add
inc
inc
mov
or
les
push
mov
mov
stos
pop
mov
and
xor
xor
mov
dec
hlt
xchg
pop
adc
sub
jmp
push
xor
aad
in
mov
scas
cwtl
enter
fidivrl
jl
push
mov
mov
pop
popf
push
cwtl
push
loop
mov
out
adc
hlt
mulb
mov
les
inc
movsl
in
cmp
stos
sti
hlt
xchg
shlb
in
dec
imul
jecxz
push
mov
nop
mov
jnp
gs
jecxz
imul
mov
outsl
xchg
inc
cmc
adc
pop
out
inc
jne
mov
fnsave
sti
sbb
loop
cmp
or
test
ds
fs
ds
push
jne
inc
pop
dec
std
or
cmp
cmp
mov
movsb
sub
add
jg
aas
sub
clc
or
andps
or
mov
lahf
cmp
xor
filds
mov
mov
push
xorl
lcall
mov
sub
lods
xchg
loopne
insb
sub
push
mov
inc
cmc
sbb
das
popf
xchg
loopne
fldcw
inc
ljmp
stos
fstps
cmp
xlat
jecxz
arpl
pop
pop
iret
in
jbe
test
hlt
popa
outsb
cmpl
imul
pop
jmp
jg
and
and
mov
outsl
cli
out
sahf
or
stos
dec
mov
add
lret
fcmove
sahf
leave
mov
xor
mov
cmp
pop
aaa
inc
push
sahf
clc
sbb
aaa
outsl
mov
mov
xchg
sub
sub
adc
mov
push
jecxz
cli
lret
les
dec
fisttpll
dec
ljmp
add
loope
inc
mov
arpl
mov
ja
ljmp
aam
int
add
scas
ss
mov
pushf
push
adc
dec
or
push
sbb
rorl
xchg
add
pop
jecxz
sub
outsl
into
lahf
sti
mov
sbb
bound
adc
gs
lods
dec
and
jnp
ret
add
cmp
imull
inc
pandn
xchg
scas
popa
lods
mov
and
addr16
repnz
and
mov
mov
ss
lods
adc
dec
test
popf
xchg
jae
dec
mov
inc
pop
xor
or
push
xor
cmp
cs
adc
test
aad
push
jge
cld
gs
or
mov
mov
insb
jecxz
add
iret
sub
test
inc
add
mov
xchg
inc
gs
cwtl
loop
jno
js
add
mov
jb
hlt
mov
pop
adc
rcrl
into
cmpsb
dec
test
sbb
adc
adc
ret
adc
mov
pop
pop
cld
test
aam
or
mov
nop
shlb
int3
xchg
lret
lahf
subb
movsl
jle
in
lret
in
cmpl
pop
push
in
out
daa
mov
cmpl
jbe
out
mov
dec
and
movsl
mov
clc
fiaddl
mov
jo
nop
cmp
mov
pop
or
mov
lods
pop
cmc
mov
stos
xchg
sub
inc
rcrb
mov
mov
cmpl
cmpsb
in
repz
xor
push
xor
loopne
inc
cmp
mov
jb
jecxz
gs
pop
not
mov
je
add
dec
xor
roll
jae
jmp
int
add
xchg
addr16
cltd
gs
mov
push
mov
sub
sahf
loopne
pusha
addr16
es
out
sahf
mov
dec
out
imul
xorl
mov
push
and
push
inc
iret
jbe
ja
into
cmp
inc
xchg
es
and
push
push
inc
ret
scas
or
in
sahf
subl
cltd
loope
and
inc
ss
shr
test
pop
cmpsl
shll
in
push
loope
jmp
ret
dec
sarl
rclb
xchg
jmp
in
les
les
daa
mov
call
xchg
xchg
inc
mov
ret
scas
mov
mov
mov
jg
cwtl
sbb
pushf
mov
mov
test
or
fsin
ljmp
dec
in
fsubrl
push
or
and
out
sub
sbb
cltd
and
std
sbb
sub
daa
rcl
dec
jb
mov
jecxz
sarl
in
mov
mov
lock
xor
shrl
movsl
cli
pushl
xchg
test
pop
push
in
out
mov
pop
lods
mov
into
mov
jne
add
outsb
pop
stc
lret
adc
jge
mov
rcll
ffreep
iret
lcall
add
xchg
cltd
xor
andl
xchg
push
sbb
jb
or
rcrb
sbb
adc
xchg
addr16
repnz
jmp
lods
cmp
adc
xchg
add
xor
out
js
jle
iret
xor
push
cwtl
jmp
sub
push
aaa
jg
fists
movsb
inc
inc
and
ds
les
mov
les
lret
int3
das
mov
add
es
pop
add
xchg
sbb
inc
xchg
out
aad
mull
mov
jbe
push
in
add
nop
xchg
mov
add
mov
sbb
and
subb
or
jb
loope
fidivrl
addr16
pop
shr
and
mov
jb
pminsw
loop
les
and
dec
fcmove
add
push
sbb
jbe
ficompl
cmp
inc
push
outsb
rcrb
les
scas
cmpsl
data16
mov
fdivrp
test
divb
add
or
into
cmp
pop
mov
mov
fistps
mov
ja
cmp
pop
xchg
ljmp
arpl
test
das
pop
test
insb
xchg
movsb
or
xchg
adc
sub
pop
jno
jns
scas
xchg
xchg
shll
roll
aad
jmp
mov
scas
loopne
and
pusha
incl
out
mov
push
push
xchg
into
mov
jp
and
adc
mov
cmp
lcall
popa
xor
mov
dec
mov
xchg
nop
cmp
mov
xorb
lods
ja
ret
cmpsb
out
jno
ret
adc
mov
pop
es
xchg
dec
cmpsb
inc
sub
repnz
test
dec
fistps
inc
pop
gs
and
mov
and
pop
jnp,pt
and
xchg
pusha
xchg
neg
sub
sub
or
pop
outsb
arpl
dec
cmp
mov
scas
dec
out
xchg
dec
data16
dec
cmp
cwtl
cs
test
sub
aas
iret
add
xchg
xor
dec
daa
sahf
or
addb
xchg
lcall
sub
popf
aad
adc
mov
dec
and
jb
xor
ffree
push
lret
and
xchg
data16
arpl
adc
add
cmp
stc
push
sbb
mull
loopne
cmp
js
icebp
aad
fs
rclb
test
jns
fimull
adc
cltd
push
sub
das
loop
xlat
enter
aad
xchg
stos
int3
xor
in
fimull
in
cltd
and
sbb
adc
pop
loop
cltd
sti
jp
inc
xor
loopne
mov
mov
mov
xor
enter
outsb
inc
sbb
scas
mov
stos
aam
and
shrl
mov
fcomip
popa
fisubrl
popa
mov
bnd
decb
cltd
shrl
aam
and
xchg
pushf
ja
call
sub
nop
fwait
js
out
sarl
inc
test
jg
movsl
sbb
popa
cli
mov
in
addb
sahf
ljmp
jle
and
ficompl
adc
cwtl
cmp
out
insb
xchg
lds
clc
xor
jmp
jge
cmp
imul
push
and
pop
stc
add
cmp
xchg
or
adc
dec
inc
shl
add
fstps
sahf
fs
dec
sbb
xchg
push
outsb
pop
jle
dec
push
sbb
add
test
mov
fwait
cs
sbb
jns
or
in
cs
pusha
jns
pop
jl
jo
or
test
lods
mov
sub
inc
push
add
push
test
add
mov
js
xor
push
test
out
pop
or
popa
jae
popf
xchg
cmp
adc
mov
addr16
mov
je
jg
xchg
xor
or
lds
jne
loopne
pop
arpl
sub
clc
jb
imul
dec
lods
fwait
adc
in
lahf
and
xchg
rorb
cmp
movsl
mov
add
sbb
testb
lcall
xor
xchg
out
xchg
rcrb
mov
cltd
dec
int
cwtl
stc
pop
sbbl
xchg
push
jno
rcll
inc
jno
mov
adc
adc
jb
jnp
add
scas
notl
jns
inc
pop
cmp
daa
dec
push
mov
pusha
xor
and
sarl
pop
jne
cli
sub
adc
mov
fdivp
jae
je
add
lcall
jne
cmp
outsb
nop
and
lret
shll
dec
enter
mov
call
and
daa
ss
aas
push
xlat
mov
xor
or
inc
cmp
jg
sub
add
nop
in
movsb
sbb
or
add
pop
fsubrl
add
mov
cltd
mov
xor
cmp
sahf
sub
xchg
mov
test
mov
xchg
ficomps
daa
sbb
lret
insb
pusha
dec
or
rclb
jne
clc
repnz
inc
pushf
push
insb
stos
cld
jb
dec
jecxz
sub
xor
cli
stos
ja
inc
aam
mov
add
test
xor
push
sub
and
xchg
add
mov
mov
in
xor
arpl
jne
push
mov
xchg
cmp
jmp
sarb
in
dec
movsb
sbb
orl
insb
mov
fisubs
repz
cld
stos
mov
mov
out
stc
cltd
push
xor
out
mov
pop
mov
leave
or
and
fs
out
jl
inc
int
addr16
jb
xor
pop
mov
push
lock
addr16
add
mov
adc
mov
mov
adc
lret
jno
xchg
adc
push
mov
jns
insl
testl
ja
push
push
fcoms
loope
loopne
dec
and
add
arpl
ret
icebp
rcrb
test
sub
jae
pop
outsb
cmp
lods
dec
inc
je
xor
add
das
sub
push
andb
cmp
sub
adc
iret
jecxz
mov
insb
add
inc
inc
scas
arpl
inc
jo
rorb
xor
gs
stc
ja
lods
aas
jnp
rcrb
js
push
outsb
fdivrs
xor
std
sub
dec
mov
sub
jecxz
xchg
and
iret
and
lea
sbb
cmp
rcrl
jo
pop
and
adc
inc
adc
insl
insl
jbe
mov
pop
xor
push
and
rcrb
aaa
jae
pop
sub
lods
mov
sbb
das
fucom
shr
sbb
test
and
mov
hlt
jecxz
lahf
jge
jns
addr16
push
sti
nop
or
das
dec
testl
lock
int3
scas
mov
and
aad
ficomps
dec
inc
sub
xchg
and
or
dec
sub
in
pop
fdivp
mov
mov
dec
popa
mov
cmp
ret
adc
mov
les
push
or
leave
insb
hlt
test
pusha
gs
int
add
lods
add
outsl
push
in
xor
mov
cltd
sub
fwait
hlt
xchg
sub
in
mov
or
xchg
fwait
or
and
jmp
movsl
ds
or
push
std
sub
insl
inc
insb
push
cmpsb
adc
xor
lea
ffree
jns
shrb
into
mov
es
rorb
cmpsb
mov
mov
inc
or
and
pop
mov
rclb
inc
fldt
mov
addl
lret
cmc
sub
xchg
sub
fidivs
sbb
mov
mov
ja
loope
insl
insl
mov
mov
stc
push
repz
inc
pop
mov
adc
sti
add
cli
or
mov
pop
daa
nop
push
add
lret
adc
stc
sbb
inc
int
push
sti
jb
mov
mov
test
push
mov
jl
ret
xor
and
lahf
clc
xchg
ret
and
dec
xor
popf
mov
cmpsl
loopne
shlb
cmp
mov
lods
add
xchg
jno
add
push
pop
push
int
sub
mov
outsb
push
jl
adc
clc
add
cmp
sbb
add
fld
shll
in
cltd
dec
sub
lcall
mov
into
xor
test
loope
pop
mov
mov
push
loopne
add
xchg
adc
cld
loop
push
lahf
fnstenv
or
and
sub
cmp
fs
pop
pusha
sub
adc
aam
cmp
xor
pop
out
jno
pop
jns
ss
shlb
mov
add
xchg
rorb
lret
cmc
das
jecxz
jne
jmp
dec
pop
jne
push
inc
out
xchg
call
cli
dec
push
mov
or
pushf
mov
mov
mov
push
fstl
mov
aam
mov
idiv
aam
int3
enter
mov
add
sarb
int
jmp
outsb
dec
cmp
mov
mov
sub
fisubrl
data16
pop
mov
addr16
je
int3
inc
xchg
push
push
lock
cmpl
push
xchg
mov
xchg
pop
lods
sbb
scas
xor
inc
cmp
sbb
mov
fsubrs
notb
push
fistps
add
and
cmp
rolb
sbb
sub
sahf
xchg
insl
int
xchg
repz
cs
jae
and
mov
jle
aad
mov
add
and
test
push
jge
fldcw
mov
inc
mov
push
bound
loopne
lods
xor
push
iret
xor
loopne
xchg
out
mov
fistps
push
fwait
daa
arpl
cmpsb
xchg
jle
xor
shlb
imul
jns
ljmp
es
ror
test
iret
and
hlt
cmpsb
cld
pop
fiadds
xor
enter
mov
or
mov
leave
fstpt
push
in
sahf
cmpsl
mov
xchg
stos
and
xchg
inc
test
lods
outsl
iret
in
adc
out
scas
mov
push
adc
sarl
sub
fldpi
cwtl
mov
inc
in
idivb
mov
cmp
jmp
sub
movsb
shll
sbb
push
pop
insl
mov
testl
mov
fs
add
ja
dec
xchg
rcll
addr16
lods
repz
sub
push
insl
scas
xor
xchg
les
in
mov
das
jno
sub
pushf
pop
addr16
lods
adc
xchg
rcll
xchg
popf
iret
por
mov
fisubrs
pop
imul
pop
pop
ss
push
cmp
inc
mov
outsb
je
dec
ljmp
jp
out
frstor
or
test
or
mov
push
and
and
mov
pop
jnp
jnp
mov
icebp
das
in
jne
pop
add
pop
sub
pop
xchg
in
nop
cmp
or
jo
sub
sub
rol
add
in
jg
mov
scas
cs
cmp
aas
jmp
enter
mov
fimull
shr
dec
hlt
inc
jmp
mov
xchg
sbb
call
in
movsl
mov
jecxz
jl
mul
icebp
decb
loope
adc
in
mov
mov
dec
lock
imul
call
les
aad
sbb
pusha
imulb
or
or
dec
inc
xlat
sbb
xchg
mov
pop
adc
lods
out
scas
add
repz
adc
pushf
aam
fisubs
ret
inc
xchg
shrb
xlat
hlt
jle
xor
xorb
or
add
sub
sub
and
or
cmpsl
jno
dec
ljmp
scas
out
mov
call
idivb
inc
imul
pop
outsl
pop
outsb
in
fmul
into
sbb
ss
sbb
movsb
aaa
ljmp
test
mov
rorb
dec
iret
pop
add
xor
pop
sbb
ds
inc
jp
cmpsl
movsl
xchg
mov
cmp
jecxz
or
dec
mov
push
outsb
test
pop
push
les
mov
pop
out
push
adcl
xchg
jne
stc
ret
outsl
xchg
jae
aas
xchg
mov
into
cltd
sub
jmp
xchg
mov
jl
sub
test
mov
lock
orl
js
mov
fsub
mov
push
shll
adc
jle
jmp
cmp
mov
aam
in
xchg
aas
push
int3
sahf
xorl
in
in
sub
scas
mov
js
jle
mov
stos
movsb
movsl
xchg
pushf
mov
xchg
decb
push
dec
mov
arpl
pop
sbb
inc
dec
lock
adc
subb
lds
imul
insb
test
sbb
lods
outsl
jns
lea
push
in
lcall
iret
fsubrs
ret
xchg
stc
cltd
mov
cmpsl
xchg
push
loope
push
sub
mov
add
das
imul
add
sahf
stos
scas
fisubrl
xchg
shrl
icebp
pop
xor
jo
aam
fbstp
push
xor
jge
sub
shl
in
mov
movsl
cmc
jnp
or
cltd
mov
popa
xlat
cmp
xchg
fidivrl
test
xchg
inc
jb
fwait
aad
aas
or
outsb
mov
jb
sub
xchg
scas
sbbb
adc
cld
xor
insb
jmp
out
andps
imul
push
add
mov
cmp
adc
jbe
xchg
hlt
mov
stos
mov
ja
push
cmc
add
and
mov
ja
cs
sub
and
and
sti
push
mov
in
cld
jo
into
orl
mov
rcrb
mov
daa
mov
cmp
stos
cwtl
out
hlt
add
aam
push
gs
shl
push
lds
and
add
fmuls
sbb
and
cmp
lea
mov
hlt
fwait
jp
mov
pop
push
push
sub
jg
aas
xor
cmp
lods
inc
pop
shll
cs
stos
xchg
jns
mov
in
hlt
cmpsb
pop
mov
test
jns
inc
out
xor
fstpt
stc
sub
fbstp
push
repnz
mov
and
test
sahf
or
int
rclb
or
or
inc
cmovs
out
mov
je
adc
or
dec
mov
fsubrl
scas
jbe
mov
lods
loope
mov
xor
int3
pushl
int3
clc
pop
push
inc
xchg
jbe
fwait
push
stc
jb
push
dec
les
pop
sahf
jne
out
cmc
fdivl
out
or
addr16
push
ret
mov
bound
cld
inc
dec
inc
push
jbe
lret
mov
insl
or
mov
add
sbb
push
je
mov
das
leave
jle
pop
cli
imul
faddl
and
fidivl
inc
push
fwait
out
ljmp
adc
dec
sub
faddl
push
sbb
decb
pop
xor
mov
xchg
jno
pop
push
cli
popa
sub
pop
fsub
ficoml
pop
mov
sub
js
in
imul
dec
mov
xor
pop
pop
mov
or
cld
stos
daa
cmp
mov
mov
add
mov
sbb
fcoms
fdivl
int3
stos
sub
pop
mov
xorb
aaa
dec
ja
sbb
out
jmp
cmp
repz
mov
icebp
daa
push
dec
dec
lcall
jmp
or
mov
mov
leave
dec
jp
lea
push
pop
jge
sbb
lahf
cmpsb
roll
inc
loop
and
icebp
out
push
add
dec
jecxz
or
ljmp
pushf
and
andb
pop
push
cmpsb
test
subl
scas
insl
test
and
rcrb
das
mov
pop
xchg
xor
out
into
or
bound
dec
jnp
jmp
xchg
int3
out
outsl
arpl
and
lret
jo
xor
inc
out
cmp
mov
enter
pop
fldcw
fistl
popl
loopne
ja
cmp
out
mov
cs
dec
orb
and
cmp
in
shrb
pusha
xor
mov
xor
sbb
lahf
xor
sub
dec
rcrb
fisttpll
cmpsl
and
fnsetpm(287
mov
push
shll
loop
ret
dec
mov
fdiv
loopne
movsl
clc
sub
dec
jae
call
pop
arpl
movsl
sbb
pusha
cmpsl
mov
or
sbb
fcomps
xor
pop
push
pmullw
cld
lock
mov
lret
aaa
imul
pop
in
adc
out
push
jb
daa
adc
adc
cld
push
pop
std
movsb
jge
dec
lret
sub
add
pop
loope
ss
jmp
sub
pop
mov
push
cmp
push
imul
mov
stos
shrl
push
aad
and
popa
out
orl
sbb
movsl
stos
xor
call
dec
fidivrl
psubsb
repz
sarl
cmp
xchg
ja
mov
out
js
add
jl
lods
sub
mov
pop
shll
pushf
pop
enter
sub
inc
xor
mov
ja
pop
jmp
in
enter
clc
dec
inc
icebp
mov
push
rolb
mov
mov
loope
push
cmp
push
loop
add
push
jle
test
outsl
sbb
add
popa
rclb
xor
pop
and
jno
and
vcvtps2pd
xchg
lcall
roll
repnz
mov
fdiv
dec
mov
ljmp
fimuls
jnp
call
jl
jmp
mov
pop
aaa
fdivrp
aam
push
cltd
out
mov
pop
orl
xchg
sub
loope
mov
adc
sub
inc
jle
ja
add
stc
jns
mov
lahf
jo
push
addr16
jl
cmc
jl
test
out
bound
out
out
sbb
pop
cmp
mov
cltd
xor
loope
es
fbld
lea
ljmp
and
movsb
in
cwtl
call
test
fldenv
cmp
jnp
push
adc
mov
fbld
mov
xchg
push
mov
fisttpll
jns
clc
push
cmp
push
xor
in
das
dec
fcom
and
fcompl
iret
int
add
loop
dec
mov
cmp
insl
cmpsb
mov
adc
dec
sbb
xor
movsb
mov
and
sti
push
lock
push
and
test
or
jae
mov
jecxz
mov
mov
inc
lahf
mov
pop
mov
mov
loopne
testb
mov
xor
in
enter
aam
push
aas
jge
jle
push
push
or
xor
icebp
jg
mov
test
push
mov
rcrb
hlt
jno
aas
cmp
push
ss
xlat
insl
sarb
add
inc
mov
fbstp
inc
into
push
xchg
or
cmpsb
lahf
stos
ror
pop
xor
divl
mov
pop
and
cmc
push
mov
jl
test
pop
sub
mov
cld
cwtl
add
jno
hlt
subl
pop
pop
jo
cmpsb
aas
xchg
pop
pop
jle
and
push
inc
mov
outsl
lahf
out
outsl
mov
lods
clc
fcmovu
dec
int
dec
mov
call
shlb
fsubrs
daa
les
xlat
add
dec
fists
mov
in
mov
cmpsl
testb
sbb
cmpsl
jnp
in
mov
dec
daa
mov
popa
pop
pop
mov
into
movl
add
sub
and
pop
cs
jbe
sub
sbb
pop
out
fnstsw
inc
sbb
inc
inc
scas
push
mov
ret
cmp
lods
sbb
dec
mov
xor
cmp
mov
call
bnd
pop
push
add
and
adc
dec
add
xchg
adc
arpl
or
mov
cmpl
sbb
ja
das
scas
sbb
ror
add
xor
nop
cwtl
sub
add
push
add
adc
movb
jg
pop
adc
xchg
int
xchg
enter
lods
pop
sub
lret
cmp
movsl
fs
insb
mov
mov
push
sub
adc
cld
imul
jmp
repnz
jmp
fs
sbb
xchg
or
fbstp
cmpsb
and
pop
add
fimull
cmpb
jne
pop
mov
repnz
cmpsb
lods
dec
push
mov
jns
int
or
adc
add
push
adc
lock
mov
lcall
mov
lock
mov
stos
loope
lods
ljmp
cmpsb
imul
int
aad
gs
cmc
push
lock
adc
mov
add
add
adc
scas
mov
in
sbb
gs
aam
hlt
int3
push
stc
pop
push
adc
out
mov
aad
mov
push
mov
loop
lds
xchg
mov
inc
fisubs
add
and
adc
jb,pt
sbb
dec
sub
lahf
push
das
xor
sti
xor
test
mov
mov
xchg
mov
mov
xor
jnp
pop
push
lret
fidivrl
jno
ret
fmul
xchg
in
popf
icebp
roll
and
dec
fwait
sahf
stc
es
pop
add
jae
aad
pop
cmc
or
sbb
aaa
pop
dec
not
insb
int
cmp
sbbl
in
pop
adcl
cmp
jmp
roll
add
insl
lcall
jp
int3
cld
dec
hlt
jl
repz
cld
adc
pop
jl
push
es
push
or
pop
jecxz
pop
notb
imul
cwtl
inc
and
pop
aam
mov
icebp
mov
out
shr
pop
push
int3
pusha
jmp
mov
mov
add
shlb
pop
std
add
stos
int3
mov
push
out
and
xor
scas
inc
psubsb
xchg
mov
stc
insb
sub
sti
mov
test
loop
cwtl
ja
add
dec
and
out
add
xchg
jmp
inc
mov
xor
add
jl
mov
fldt
pushf
sbb
sbbl
mov
cmc
lods
es
mov
push
dec
cli
iret
loope
or
dec
add
dec
xorl
sub
subb
add
cmp
loop
xchg
aad
adc
daa
push
jae
push
cmp
mov
fldl
mov
insb
adc
push
icebp
sub
mov
icebp
jecxz
pop
xchg
mov
out
mov
sub
in
sti
out
lds
inc
xchg
sub
cmp
neg
push
jle
sub
cs
sbb
cs
cmc
push
repnz
xchg
push
pushf
stos
add
push
add
or
jbe
loope
or
lds
and
rcrb
sbb
dec
adc
sti
inc
aas
and
ljmp
lret
scas
cltd
rol
cmp
cltd
sbbb
fucomp
lahf
loopne
add
pop
mov
lods
cltd
mov
rcl
repnz
movsb
out
rclb
mov
xor
fidivl
decb
jnp
test
mov
dec
aas
aaa
testb
dec
test
cld
js
out
int3
fnsave
push
adc
mov
popa
lret
fsts
xchg
sbb
pop
mov
sbb
call
cmp
lods
jge
sub
and
pop
insl
sbb
outsb
sbb
push
jg
test
sub
ljmp
mov
in
add
cmpsl
xor
mov
out
rolb
adc
lds
and
into
aam
mov
lcall
lods
pop
inc
into
mov
test
cli
dec
stos
xor
adc
or
lcall
inc
adc
cmpl
mov
cli
fisttpll
dec
jbe
mov
adc
mov
jae
jmp
pop
cmpsl
cltd
addr16
jle
shlb
je
and
xchg
lock
gs
fistl
dec
setp
shl
daa
rdpmc
cwtl
xor
aad
test
dec
lahf
or
pop
sbb
jns
push
adc
mov
int
mov
mov
pop
dec
pop
adc
arpl
leave
imul
aas
jno
insb
js
jg
fldl
in
sarb
mull
fld
in
or
mov
pop
push
mov
or
adc
popa
fdivrs
jns
ja
es
add
push
dec
test
mov
push
add
push
aas
sub
pop
jns
lcall
lahf
jns
push
fidivrl
mov
mov
xchg
mov
shlb
and
and
movsl
or
das
out
enter
jbe
push
inc
jmp
or
and
pop
jns
xlat
inc
popa
fcompl
or
out
fs
call
sbbl
imul
jnp
mov
fildll
sbb
sbbb
addb
inc
inc
push
out
xlat
add
mov
je
es
sahf
pop
cmp
jne
fistps
popl
test
lods
cmpsl
xchg
stc
jbe
xchg
mov
inc
add
xchg
jb
outsl
pop
in
jecxz
subl
test
stc
jnp
and
subl
insl
lret
and
and
js,pn
xchg
fists
or
repz
clc
cld
adc
loop
pop
lcall
or
jnp
aam
jge
in
jmp
pop
cmc
daa
fidivl
inc
cmp
cmp
and
movsl
lcall
and
push
mov
push
clc
movsl
mov
icebp
xor
jne
lcall
insb
push
ja
mov
call
xchg
bound
mov
mov
call
xchg
mov
jno
pop
sti
dec
xor
push
adc
outsb
aad
inc
dec
fisubs
and
xor
outsb
and
fnstcw
jecxz
xor
fcmovne
rorl
pusha
loope
dec
flds
in
test
pop
andl
fistps
jne
pusha
addb
jecxz
mov
cltd
push
inc
dec
add
mov
test
jge
stos
rclb
push
adc
ljmp
pop
add
push
testl
dec
add
adc
aaa
xlat
int3
inc
or
mov
dec
sbbl
loopne
in
ljmp
add
shll
loopne
out
arpl
xor
ret
clc
popaw
loopne
sub
adc
dec
jno
leave
inc
push
xchg
jl
jmp
dec
sahf
or
mov
les
xor
cmp
neg
adc
sbb
imul
js
pushf
push
mov
ds
mov
and
loopne
rorl
stc
dec
orb
mov
xor
inc
inc
cmp
sub
dec
push
and
sub
shrb
loopne
sbb
xchg
lods
mov
pushf
insb
xchg
adc
inc
std
int
jl
mov
cwtl
je
cmpsb
pop
stc
scas
mov
clc
push
mov
pop
shl
push
push
fisttpll
movsb
stc
inc
inc
push
or
mov
scas
je
insl
idivb
cmp
push
js
clc
into
test
pop
rol
cwtl
ret
in
mov
or
fwait
adc
test
rorl
push
mov
add
pop
in
std
pop
mov
sub
xlat
out
int3
push
jecxz
mov
movsb
add
fwait
pusha
imul
pop
es
stos
and
notb
push
sub
and
add
mov
mov
adc
in
sub
movsl
mov
cmc
cmp
into
fbld
cmp
ljmp
adc
jb
lds
jne
push
cmp
xorb
popl
out
mov
repz
enterw
hlt
jns
add
adc
fistpll
or
ficompl
sub
push
addr16
jnp
mov
aam
iret
push
stos
notb
loope
int3
push
cmpsl
outsb
pop
dec
stc
out
aas
repnz
clc
testb
in
dec
test
lret
adc
loop
push
lods
xchg
xchg
test
les
insl
lahf
iret
push
repnz
push
mov
cs
and
and
inc
faddl
rcll
mov
int
lock
cmpl
fs
push
iret
lret
xor
lahf
aad
and
mov
out
movsb
lcall
mov
adc
popa
cmp
mov
shll
movsbl
lret
xchg
xor
and
mov
mov
dec
xchg
xchg
sbb
or
xor
jns
add
push
add
pop
xchg
xchg
sti
xor
dec
fadds
out
loop
adc
sbb
cli
jne
adc
clc
push
dec
fwait
stos
aam
testl
insb
test
pop
aaa
dec
push
sub
rolb
lahf
push
call
mov
addr16
jo
fidivs
es
push
repnz
pop
mov
es
out
out
sarl
clc
mov
adc
out
pop
or
and
je
push
mov
add
aas
dec
mov
cmp
lock
stc
sub
loopne
or
movsb
icebp
lcall
fisubl
sbbb
ss
bound
add
mov
and
mov
and
add
jb
mov
jecxz
out
sbb
ja
adc
clc
jns
and
sar
xchg
insb
pusha
dec
and
jo
lcall
aam
scas
dec
xchg
inc
pop
push
and
bound
and
sbb
pop
mov
shlb
fs
pusha
xchg
sub
shll
lods
cmp
icebp
xor
xlat
and
xchg
xchg
push
jne
stos
push
sub
xchg
negl
cmpsl
jg
idivb
dec
add
into
ss
sub
call
xchg
jnp
hlt
jae
insb
cmp
outsb
pop
fadds
xchg
stc
out
rorb
mov
sti
inc
jb
dec
in
jno
adc
push
xor
jo
orb
cmp
out
das
lahf
inc
mov
into
xchg
pop
xor
call
inc
or
mov
cltd
movsl
dec
inc
push
adc
lods
sbb
bound
iret
es
lods
mov
das
mov
push
cmp
getsec
psubb
dec
roll
xchg
out
sub
ss
jbe
add
icebp
jecxz
xor
or
sub
mov
push
cld
dec
sub
or
into
mov
add
loop
add
push
push
rcrl
dec
add
mov
cmpl
lods
and
jecxz
adc
pop
mov
sti
fdivs
arpl
lahf
lds
shll
dec
mov
pushf
jmp
push
mov
call
lods
lret
sub
hlt
int
or
lret
std
scas
movsb
les
push
xor
cltd
sub
cs
dec
fbld
push
das
insb
lock
fisubs
sub
sahf
hlt
dec
std
mov
sahf
or
cs
ret
rcrb
add
aam
sti
jge
int
xor
mov
push
push
pop
iret
ret
xchg
and
dec
scas
cmp
out
mov
pop
movsb
pushf
cmc
lock
ss
sub
pop
pop
push
test
sbb
addr16
xchg
arpl
adc
stos
dec
nop
daa
cmp
xor
mov
cmp
inc
daa
add
stos
bnd
pushf
leave
rcrl
lds
xchg
add
stos
xchg
cmp
and
push
or
add
cmpsl
jne
and
daa
imul
jne
mov
add
cld
jns
shll
stc
mov
push
mov
mov
pop
shrb
or
push
inc
fcomp
jge
mov
xorb
pop
in
add
mov
je
or
mov
rolb
dec
push
addr16
insl
cmpsb
js
mov
dec
adc
mov
sbb
aas
add
mov
scas
test
pop
movsb
mov
cmc
and
enter
outsl
mov
mov
inc
loop
ret
cmpb
cmpsb
dec
push
ret
popf
lods
popf
popa
repz
test
pop
dec
ljmp
not
mov
xchg
cmp
lds
mov
adc
hlt
orb
inc
dec
dec
sbb
test
mov
push
ret
add
inc
outsl
mov
lret
lods
je
into
add
inc
sbb
insl
fwait
addr16
mov
enter
push
push
push
insb
outsb
mov
push
jne
popa
repz
mov
mov
clc
or
lea
mov
mov
adc
lea
cmovle
fidivs
pop
cmp
ljmp
dec
leave
les
pop
adc
or
test
stc
add
imul
iret
mov
in
cmp
inc
lods
pop
enter
scas
jns
les
mov
ljmp
mov
out
notl
sub
and
mov
stc
rcl
std
mov
adcb
jne
jb
xor
subb
jns
mov
ret
pop
ljmp
adc
mov
cli
adc
repz
cltd
push
test
xlat
cld
pop
es
jae
nop
push
mov
std
jne
loope
mov
inc
dec
cmpsb
inc
jp
jecxz
shlb
inc
inc
test
fldenv
iret
jbe
fwait
sbbl
and
mov
add
in
pop
int
scas
js
shrl
sbb
add
movl
add
lret
or
je
cmp
lods
cmp
mov
sub
sbb
and
adc
sub
push
lea
in
icebp
lds
sgdtl
add
lcall
or
andb
dec
push
jmp
sbb
sahf
out
mov
push
sahf
pop
pop
aam
and
cmpb
sbb
aam
pop
shlb
test
mov
pop
fidivrs
fwait
sub
and
mov
jns
scas
cltd
add
repz
sbb
push
ss
sbb
jne
sarb
sbb
mov
lcall
jne
cmpsb
cmpsl
xor
mov
repz
fsubr
jo
cmpsl
dec
addl
jecxz
lahf
sti
frstor
xor
jl
or
sub
sub
jmp
into
leave
lds
pushf
cwtl
add
repnz
push
lahf
xchg
out
jnp
xor
dec
mov
mov
xchg
out
std
push
out
mov
lea
jle
xchg
ss
xchg
in
jnp
loope
mov
mov
xor
pop
adc
sub
or
shl
lock
cmp
adc
xor
mov
rcrb
test
daa
clc
pop
rorl
add
cmc
or
jle
mov
cmp
nop
mov
repz
adc
cmpsl
inc
cmpsl
mov
jnp
xchg
stos
push
dec
movsl
das
rol
push
or
jne
cmp
or
mov
sub
jns
ja
adc
aas
sti
adc
push
popa
cmp
mov
nopl
xchg
pusha
pop
stos
cs
sbb
inc
mov
movsl
stos
cmp
call
cmp
sbb
ss
inc
outsb
mov
cs
xor
sbb
xor
fs
dec
and
push
icebp
cld
mov
jae
cli
pop
gs
push
adc
pop
jg
jg
imul
dec
jb
inc
addr16
mov
scas
std
shrl
dec
stc
int
cmp
jp
loopne
imull
mov
sbb
fwait
jne
or
es
movb
cmp
rolb
push
clc
mov
or
inc
int3
js
lret
shrb
mov
sbb
mov
fwait
lret
loope
pop
int3
xchg
bound
sbb
jno
push
push
push
adc
jnp
xlat
jb
pusha
pop
jg
jno
mov
mov
aad
fnstenv
pop
pop
sarl
aam
pop
cmp
xchg
push
or
mov
fmulp
jae
xchg
sub
repz
popf
add
push
sub
push
sbb
cmp
xchg
shll
aad
inc
sbbl
push
leave
inc
jne
cwtl
xor
aad
cli
lock
scas
and
iret
lock
jbe
or
adc
cmp
dec
push
mov
mull
inc
cmp
popa
je
mov
ja
test
xchg
push
insl
ljmp
xchg
sbb
dec
dec
pop
mov
in
dec
subb
mov
sbb
adc
fldl
cs
fnsave
addb
xchg
popa
ljmp
fisubl
xorl
out
subl
and
xchg
fiadds
pop
jno
movsl
or
xor
test
push
test
dec
mov
fsubl
push
ja
cs
jo
adc
push
cmp
lcall
cmpsl
xor
or
cli
rcrb
fwait
pop
or
xor
dec
sti
outsb
and
cwtl
mov
and
push
dec
xlat
inc
in
add
mov
mov
or
push
mov
stc
dec
lods
dec
in
inc
lods
jg
lds
lret
sub
xchg
sbb
insb
xchg
arpl
addr16
xor
jg
test
jae
ss
repz
adc
shll
mov
mov
out
loopne
and
stos
mov
ret
int3
hlt
enter
pop
push
loope
pop
stos
xor
lea
leave
jb
frstor
in
outsb
mov
leave
aas
incl
cmp
loope
aaa
xor
fbld
inc
push
add
or
insb
xchg
jp
jns
cmpsl
movb
push
dec
mov
pop
arpl
push
repz
int
sbb
xchg
add
sbb
jns
sub
fcomps
je
inc
call
cmp
push
lahf
cld
outsl
jle
jbe
cs
lds
sbb
roll
jbe
imull
lock
stos
sbb
pop
call
loop
int
and
ds
lock
cmp
in
xchg
ljmp
xchg
les
and
xchg
sbb
cs
clc
mov
or
dec
adc
xlat
in
in
add
hlt
mov
xlat
xor
test
xchg
mov
dec
xchg
testl
loope
mov
shll
xor
stc
mov
and
test
addl
sahf
mov
push
and
sahf
sub
mov
jb
xchg
hlt
es
jo
adc
cmp
inc
rcr
mov
xchg
shrb
test
int3
shll
lahf
movsl
xor
sub
mov
pop
das
inc
cltd
mov
lods
outsl
mov
daa
iret
cld
mov
adc
pusha
xor
mov
mov
or
jmp
lcall
lahf
pop
jne
bound
xchg
outsl
xor
pop
stc
add
les
mov
mov
mov
jp
ret
adc
jge
xchg
test
std
sahf
ja
and
pop
subb
rol
shl
xor
and
popa
stos
mov
adc
test
push
in
lock
ds
pop
xchg
mov
fdivrs
sub
into
into
mov
xchg
mov
mov
dec
jmp
rolb
add
clc
pushf
mov
xor
fwait
push
push
cmp
ret
addr16
xor
xor
mov
sbb
lahf
dec
jmp
sbb
or
xchg
xchg
or
pop
pop
mov
cmp
mul
xchg
push
cmp
fadds
fsts
out
imul
daa
xchg
pop
cltd
arpl
inc
xchg
xor
push
clc
fpatan
push
sarb
cld
xchg
push
out
add
test
leave
dec
mov
pushf
or
mov
jbe
pop
push
mov
out
jp
mov
iret
pop
out
in
ds
fwait
fwait
addr16
dec
xor
shl
cmp
iret
mov
lret
insb
mov
jp,pt
and
sti
jbe
mov
mov
dec
cmp
add
in
imul
inc
mov
or
ficoml
xchg
xchg
popf
ljmp
fisubrl
adc
iret
sbb
ss
sub
into
insb
je
enter
imul
sbb
incb
cmp
lahf
xchg
jo
ljmp
push
test
mov
xchg
or
jbe
mov
jns
jecxz
sub
xlat
shlb
ret
idiv
js
xchg
cmp
add
push
add
sbbb
jb
mov
xchg
popw
mov
lcall
cmp
pop
lea
or
add
inc
xor
movsb
jmp
add
lods
xchg
lret
mov
inc
inc
insb
jno
clc
lcall
xchg
cmp
mov
push
and
cwtl
jnp
or
lock
inc
shrl
mov
inc
pusha
xor
in
nop
leave
pop
mov
dec
dec
sub
xchg
stos
fnstenv
push
lcall
or
mov
sti
add
push
jg
out
mul
xor
sub
lcall
ror
fsqrt
mov
mov
jge
push
and
sbb
add
jae
ret
or
lds
sub
mov
xchg
js
je
pop
imul
xor
jmp
cmp
lods
sub
stc
mov
and
sbbb
ret
aam
lea
mov
dec
mov
aas
pop
in
xor
push
aas
add
sub
jge
and
push
out
test
insl
jle
push
gs
push
ljmp
dec
in
mov
mov
push
mov
sub
pop
rcl
jmp
pop
push
test
xchg
mov
lret
push
push
loop
pop
daa
rclb
mov
push
adc
stos
pop
push
daa
push
jle
jge
xor
das
add
add
xor
not
add
std
jbe
cwtl
mov
fs
cmp
pop
sub
enter
xchg
lds
jns
and
int
push
test
adc
pop
fidivs
xchg
loopne
dec
jge
mov
lcall
rcll
int
mov
lcall
xlat
add
pop
in
xchg
or
lock
dec
push
sbb
shl
mov
in
xor
repz
jno
sub
shrl
cmp
cmp
dec
stc
sahf
pop
xor
cmp
test
dec
pushf
std
cmpsl
jle
es
mov
jg
xor
mov
mov
push
adc
or
inc
inc
sar
dec
jmp
idivl
xor
mov
inc
in
imul
mov
int
lret
movsl
daa
out
or
test
cmpsb
out
xor
sub
inc
cmp
add
repz
mov
dec
mov
gs
push
and
decb
pop
add
xchg
xchg
and
dec
cmp
jno
mov
fbstp
and
outsl
wbinvd
xchg
ljmp
mov
cmpsb
arpl
cmc
push
or
push
jmp
lds
jb
lock
outsb
or
xchg
loop
roll
sbb
dec
popa
or
inc
cmp
aas
inc
leave
orl
jno
out
clc
mov
xor
shrl
jns
mov
addb
adc
out
ret
fidivrl
or
imul
in
das
push
les
fbstp
mov
cmp
iret
cmp
adc
cld
sbb
push
dec
inc
push
stos
and
xchg
push
dec
stos
shrl
sbb
scas
adc
dec
test
lods
outsl
jmp
sub
push
mov
test
out
and
aam
xor
mov
iret
cmp
imul
cltd
sub
push
arpl
inc
adc
or
jge
fs
sti
cmpsb
jae
cmpsb
cmc
rcrb
pop
jmp
sub
enter
sbb
xor
xchg
hlt
mov
int3
cmc
jl
ret
xchg
mov
mov
xor
inc
mov
jmp
cmc
jnp
jle
sbb
xor
dec
stos
insb
in
in
imul
lret
dec
in
and
sbb
push
push
push
push
pop
mov
mov
add
or
cmp
pop
lods
adc
cwtl
movsb
lock
mov
andl
pushl
push
movsl
loop
out
adc
fucomip
add
pop
xchg
push
mov
or
cltd
inc
into
push
fidivrs
and
ljmp
out
mov
icebp
pop
sbb
sub
mov
lahf
mov
sbb
add
push
shlb
cmp
lahf
loopne
mov
popa
sbb
loope
aad
push
jno
xchg
jo
dec
ss
dec
mov
enter
les
test
jmp
adc
testl
lods
jne
ret
icebp
inc
orb
loopne
mov
insl
inc
mov
lahf
pop
cs
mov
xor
dec
adc
pop
push
iret
pop
sub
xor
and
mov
sub
mov
lods
adc
add
ret
mov
xchg
xchg
mov
daa
les
push
test
xlat
shrb
dec
repz
or
shrb
add
ja
insb
fwait
pusha
jne
fwait
mov
push
aaa
and
icebp
jb
cltd
insb
scas
mov
out
mov
mov
icebp
call
jecxz
int3
sub
push
clc
push
pusha
movb
push
mov
push
sbb
mov
push
mov
or
mov
pop
out
cwtl
jge
adc
call
stos
ret
dec
in
out
lahf
rorb
outsb
daa
mov
jp
jl
aad
xor
inc
das
in
pandn
cli
imul
dec
mov
or
scas
loop
add
mov
mov
inc
pop
pop
cmp
sub
push
fiadds
sub
inc
mov
mov
cmc
jbe
add
xchg
or
adc
xchg
jno
xor
cmp
rorl
out
dec
cld
adc
out
pop
lahf
push
push
fmuls
aam
xchg
sub
xchg
test
ret
lret
adc
xor
sbb
repnz
in
lods
push
mov
adc
or
sub
pop
mov
jge
in
inc
dec
push
popf
or
cmp
push
sbb
in
xchg
cmp
push
lret
outsb
adc
push
adc
mov
out
ds
addr16
xchg
sti
push
push
negb
pop
rcll
addr16
fs
ljmp
ja
out
cltd
mov
sarl
xor
add
icebp
lods
adc
mov
cmp
out
fists
lret
out
subl
xchg
pop
cmc
mov
rorb
adc
dec
mov
and
and
int3
jb
mov
fistpll
imul
push
sarb
or
dec
iret
filds
repz
inc
cmp
cli
imulb
dec
aaa
push
xlat
int
test
sub
jne
rcl
test
lods
sarl
rcll
daa
out
xchg
ret
mov
jae
jg
cmpsl
lret
mulb
ja
fwait
adc
lods
leave
jnp
iret
ss
cwtl
lock
flds
xchg
filds
adc
mov
cmp
subl
cltd
inc
cmp
scas
int
leave
daa
push
lds
sbb
das
add
fldt
pop
mov
gs
sub
xchg
stc
cli
add
pop
and
xchg
dec
repz
mov
fdiv
sbb
and
arpl
sti
xchg
movsl
cwtl
outsl
cmp
std
data16
jno
mov
insb
sub
lods
gs
hlt
out
imul
mov
bound
xchg
cmp
cwtl
push
mov
mov
movsl
les
scas
dec
xchg
add
int3
dec
hlt
pusha
out
call
lcall
lods
sbb
lods
jbe
inc
xchg
jge
and
jnp
mov
clc
fsts
ss
repz
jbe
fs
adcl
bound
pop
stc
push
add
mov
fmull
xchg
lods
lret
dec
or
mov
sti
dec
mov
stos
jb
loop
adc
dec
inc
popa
bound
jecxz
loop
sub
popf
fists
mov
test
jo
mov
outsl
aas
pop
mov
mov
fucom
cltd
xchg
sub
jo
cmpxchg8b
leave
dec
movl
shll
idiv
int
pop
sbb
or
mov
insb
jmp
jmp
in
repz
inc
mov
xchg
pop
scas
cmp
sbb
repz
jle
out
test
pop
sub
gs
inc
fbld
loope
inc
mov
out
xchg
enter
fwait
pop
sub
pushf
xchg
sti
ljmp
and
loope
xor
loope
enter
jns
push
test
iret
mov
rclb
fdivp
mov
xchg
mov
pop
and
testb
shl
mov
imul
pop
sbb
clc
or
icebp
fst
mov
jns
call
pusha
movsb
aam
fsts
xchg
iret
rorb
cmp
xchg
outsb
jno
fcoml
and
or
nop
adc
inc
stos
or
or
decl
dec
xchg
push
loope
push
jl
xchg
test
dec
test
ja
jge
cmp
testl
popa
and
cmp
in
pop
fldl
leave
pusha
popl
orl
add
jo
pop
sbb
hlt
inc
adc
inc
cmp
rorb
inc
mov
inc
hlt
test
mov
loopne
xor
mov
in
sub
adc
sbb
rcr
orb
shlb
or
scas
xchg
inc
pop
out
loopne
jecxz
je
pop
das
insb
xchg
jge
repnz
movsl
adc
inc
sub
fadds
mov
jbe
adc
shlb
out
sub
adc
mov
repz
aad
repnz
sub
jecxz
push
rcrb
shlb
and
aam
test
cmp
inc
pop
push
jae
lea
jl
sub
repnz
movsb
fldcw
out
lret
push
xchg
push
call
xchg
sub
mov
pop
and
out
push
movsb
test
bound
inc
ds
fs
ss
push
addr16
add
mov
xchg
jbe
test
addl
movsl
popa
jle
mov
insl
lret
decb
adc
mov
mov
insb
imul
mulps
movsb
dec
xchg
cmc
inc
popf
push
push
inc
lods
fs
mov
dec
inc
je
sti
or
out
orl
xchg
notb
push
dec
push
fcmovne
mov
ret
std
mov
xchg
dec
cmp
out
dec
or
inc
pop
sub
mov
cld
push
out
sub
xlat
cwtl
and
mov
or
bound
inc
arpl
ljmp
add
scas
add
mov
sti
mov
loop
adc
ret
xchg
daa
pop
jae
sbb
insb
cld
push
dec
out
lods
xchg
cld
xchg
cmpsb
push
xor
ja
ficoml
or
jp
loope
outsl
sbb
push
dec
jns
pop
and
xor
jo
fcoms
leave
mov
ja
lods
push
test
popa
inc
inc
sub
xchg
jne
out
loopne
sub
cmp
dec
or
lea
xor
xor
fisubrl
or
mov
loop
push
aam
mov
fbstp
adc
iret
mov
aas
aas
loope
ror
clc
fs
add
and
movsl
xchg
ret
and
xchg
stos
mov
mov
or
and
or
pop
or
inc
mov
lods
cmp
mov
insl
pop
xchg
sub
adc
adc
mov
add
push
xchg
pushf
inc
test
mov
xor
ljmp
ffreep
out
fwait
and
adc
or
nop
cmpl
pushf
bound
sbb
or
adc
repz
sub
cmpsl
or
fwait
ja
xor
movsl
jmp
stos
popa
add
inc
and
jno
xchg
sub
xor
fcmove
sub
mov
jnp
aaa
aad
mov
mov
outsl
arpl
in
test
push
es
scas
fadds
inc
or
mov
cmp
fwait
xlat
mov
or
pop
ficoms
dec
std
adc
mov
inc
insb
jmp
sub
out
jp
inc
jp
fnsave
les
cmp
adc
adc
cmp
insl
je
imul
test
dec
jl
mov
in
das
jb
or
sbb
int3
push
jo
sbb
cmp
xor
pushf
in
inc
out
xor
xor
ja
mov
imul
fwait
xchg
in
scas
orl
or
pop
data16
sbb
mov
inc
mov
stos
xchg
mov
xor
or
adc
call
xchg
das
sbb
xchg
fcomi
lock
popa
shrb
int3
sub
pop
and
mov
push
imul
or
daa
push
inc
sub
add
xchg
popl
mov
rclb
je
mov
mov
gs
rorl
mov
fistpll
notl
mov
gs
xor
or
adc
mov
push
lds
pusha
ds
adc
aas
sub
insl
test
inc
cli
les
push
lds
fisubs
leave
dec
int
aaa
lods
mov
adc
loop
pop
data16
dec
mov
je
call
mov
pop
xchg
repnz
ret
xchg
xchg
dec
push
pushf
jle
push
fcompl
idiv
cmc
sub
push
add
test
imul
sbb
popf
mov
fiadds
or
mov
mov
push
xchg
test
test
add
mov
std
jae
fidivs
cmpsl
sti
xlat
lock
std
insl
sbb
lcall
mov
dec
clc
pop
imul
fmul
into
mov
xor
movsl
lods
mov
imul
add
or
rorb
scas
cmp
fldln2
sbb
in
lods
or
mov
jecxz
pop
push
insl
pusha
push
imul
sub
mov
ds
cmpsb
lret
or
xchg
xchg
mov
bound
mov
in
jne
scas
sbb
pop
leave
in
pop
notl
out
cld
push
and
add
cmp
pop
arpl
dec
mov
aam
add
pop
dec
xchg
add
xchg
fistps
cmc
xor
xor
imul
xlat
pop
popa
ja
pop
andl
out
jmp
cmpsb
loopne
mov
inc
fsubs
test
fcmovne
lods
roll
je
push
fwait
xor
jo
loope
mov
movsl
or
lods
mov
adc
xor
sbb
push
nop
pusha
ja
fcoml
add
gs
sbb
jno
lret
sub
mov
mov
sub
push
pop
idivb
mov
sbb
or
call
cld
inc
int
push
add
rorl
mull
aam
int3
xchg
aas
rcrb
scas
cmpsl
lds
inc
lock
cmp
outsb
outsl
push
push
jb
push
shll
jmp
pop
xchg
sub
jle
jl
leave
sub
cmc
ret
rcr
jg
bound
rcrl
push
in
inc
jbe
xchg
int
sti
popf
aad
lods
ret
xorb
insb
popf
sbb
mov
xchg
and
mov
mov
sbb
sub
jae
ret
inc
jo
stc
cltd
shr
cli
cmpsl
shlb
movups
jle
fstpl
sbb
cmova
pop
inc
inc
lods
cmpsl
cmc
push
mov
adc
sbb
push
pop
sub
out
aam
pop
adc
xor
push
push
shr
enter
cmp
fsubl
fnsave
dec
sub
cmpsb
adc
stc
clc
mov
daa
in
das
stos
test
nop
mov
mov
jp
outsb
pop
mov
test
or
jge
nop
xchg
fidivrl
add
mov
sti
pop
sub
add
bound
out
add
pop
and
lods
data16
sub
cmp
stos
out
pusha
add
inc
jecxz
notb
test
imul
ret
xchg
out
mov
scas
mov
jmp
ss
or
jmp
mov
sbb
jne
xor
cmp
aas
xor
inc
das
fcompl
mov
pop
decl
sar
and
jg
imul
pop
jb
dec
movsl
hlt
in
fstps
stos
lcall
cmp
fidivs
dec
popa
cmpsb
ss
outsb
stos
inc
mov
call
jge
cmpsb
les
or
push
out
jle
out
or
sub
out
int
dec
sbbl
fidivs
mov
test
pop
clc
sub
imul
btc
ret
xor
pop
push
mov
arpl
jmp
jb
push
sbb
pop
mov
xor
mov
stc
inc
daa
fldl
sbb
sbb
pop
cltd
jg
test
sub
mov
and
stc
ds
mov
pop
push
ret
sub
sbb
or
jne
xchg
sbb
ficomps
xchg
out
div
xor
cmp
pop
and
out
adc
jo
out
adc
fstl
shl
adc
xor
xchg
frstor
mov
sbb
push
pop
sbb
leave
rcr
inc
xchg
mov
sbb
add
ror
in
ret
sub
add
push
sti
out
pop
push
dec
mov
aad
mov
les
fildl
mov
inc
push
pusha
arpl
dec
pop
push
add
not
sbb
xchg
shr
xor
bound
les
push
and
pushf
ss
add
pop
leave
mov
inc
rclb
test
popa
in
out
cmp
sbb
sub
add
idiv
roll
repz
sub
sub
push
call
iret
scas
xor
pop
push
mov
mov
int
dec
stos
in
iret
mov
shll
out
aad
fldt
and
dec
sbb
mov
mov
call
imul
mov
xchg
jecxz
std
data16
mov
sbbb
fnsave
push
push
jmp
or
push
mov
xchg
lret
lahf
scas
dec
mov
lods
add
mov
sub
sbb
cmpsb
cmp
dec
pop
lret
xor
pop
fnsave
push
pushf
sbb
mov
dec
pop
fisubrs
pop
fs
xchg
xchg
jl
sub
out
mov
push
add
dec
cmp
rol
movsl
lods
shl
sub
mov
jb
add
out
jno
pop
lea
rcrl
sbb
push
test
test
xorl
mov
roll
outsl
xchg
mov
faddl
stc
ljmp
out
fildll
jmp
js
les
mov
jo
xchg
lock
cwtl
mov
in
fidivrl
out
mov
jl
es
pop
push
out
icebp
out
pop
in
pop
sub
pop
das
ljmp
cmp
lods
lock
dec
imul
jno
popf
gs
leave
cmp
ljmp
xor
add
iret
stos
jne
lds
fdivrl
cmp
das
cmpsl
lahf
divl
pop
pop
aam
mov
mov
mov
inc
add
cld
mov
addr16
mov
stc
push
mov
shlb
lcall
jb
out
std
lcall
popa
stos
jae
dec
lea
push
adc
inc
arpl
dec
xlat
jp
push
popf
fdivrp
test
push
add
int3
lcall
dec
fwait
push
mov
mov
and
push
enter
dec
std
sarb
push
lods
mov
orb
and
xor
cld
cli
std
xor
data16
add
pop
sub
fisttpll
inc
rclw
into
or
cmp
mov
xor
cmp
push
js
fs
mov
pushf
stc
lcall
rcl
cltd
mov
mov
sbbl
pop
icebp
ret
pop
sbb
xor
mov
dec
cwtl
jge
jmp
ljmp
mov
call
test
jle
stos
jo
sub
cmp
jbe
addr16
stc
aas
adc
jecxz
cmp
add
in
and
bound
adc
negb
data16
dec
or
fcmovb
shrb
loop
insl
xor
hlt
stos
push
jecxz
lahf
cmp
and
add
or
ja
enter
jmp
dec
jbe
push
negl
cmc
or
call
in
adc
ficompl
push
cmp
ljmp
pop
outsl
push
lock
xchg
rorl
cwtl
aas
mov
mov
dec
into
enter
scas
push
sbb
pop
xchg
jl
jg
ret
notb
and
and
rorl
or
lods
sti
mov
sub
icebp
xchg
popa
out
call
fneni(8087
out
push
loop
cmc
jbe
mov
leave
sbb
fiaddl
sub
jp
lret
int
lret
btc
shl
jmp
lock
ret
sbb
cmp
xor
imull
lds
cmpsb
hlt
and
out
jecxz
out
push
cmp
pop
jns
mov
mov
adc
scas
sbb
add
push
mov
push
rcrl
arpl
arpl
mov
cwtl
lds
xchg
inc
mov
roll
pop
pop
int3
sahf
addw
cmpsl
mov
xlat
mov
xorl
fcmovne
bound
ljmp
xchg
xor
lret
or
dec
push
aaa
mov
sbb
lods
sub
inc
dec
sub
fwait
mov
inc
scas
ret
jl
mov
aas
int3
imul
stos
jecxz
pusha
aam
je
jbe
xchg
sbb
push
adcl
or
mov
cmp
lcall
pop
cmpsl
fdivrp
outsl
jne
jl
cmp
sub
adc
loopne
mov
jle
insl
cli
lock
xchg
adc
mov
vmovups
loopne
aas
aaa
cmp
dec
pop
call
and
movsb
ljmp
daa
add
into
mov
fs
pushf
push
adc
popa
out
jp
dec
loope
ss
aaa
mov
les
mov
inc
sbbb
adc
hlt
fldenv
mov
mov
push
dec
andl
lea
push
ds
xchg
repnz
out
stos
popf
sbb
lods
mov
lods
cs
pop
in
das
aas
pop
ds
mov
ljmp
pushf
testb
fiaddl
ljmp
mov
mov
lds
mov
out
popa
add
je
into
insb
pushl
jns
mov
dec
imul
or
xchg
adc
push
cwtl
cs
sub
and
adc
jecxz
scas
cld
cmp
dec
or
adc
and
repnz
xor
int
fs
adc
andl
and
imul
add
cmp
daa
jns
out
inc
imul
shl
in
inc
into
mov
sub
inc
mov
or
mov
xor
in
icebp
dec
xchg
lods
push
jp
in
sub
vmread
call
lret
mov
jl
stos
mov
add
inc
cmp
adc
fwait
nop
js
outsb
mov
inc
data16
dec
mov
sahf
mov
mov
flds
ss
push
cmp
push
lret
fstps
add
sub
stos
orl
jle
iret
xor
ret
jb
push
fisubrl
and
ds
pop
dec
in
fldcw
pop
adc
mov
pop
push
lret
xor
dec
gs
xchg
fstpl
xchg
leave
lahf
rcrl
jmp
cmp
add
push
sbb
lock
pop
adc
xorb
inc
jo
test
test
mov
dec
or
notl
cmp
inc
mov
push
iret
cmpsb
push
inc
test
enter
ljmp
mov
xlat
jle
call
push
jge
or
aad
mov
sarl
xchg
das
cld
notb
adc
push
pushf
pop
int3
push
mov
insl
aaa
icebp
cmpsb
pop
sbb
fildll
jae
dec
mov
jnp
neg
jmp
cli
xlat
daa
out
mov
and
mov
icebp
pop
es
adc
lock
and
dec
push
or
inc
and
dec
or
dec
mov
aam
popf
xchg
je
popf
aaa
faddp
enter
mov
push
inc
ret
cld
push
xchg
mov
push
or
add
push
jo
stos
fdivrl
jns
in
les
adc
insl
push
jge
sahf
or
mov
enter
int3
aad
mov
mov
andb
push
push
imul
int
mov
cld
mov
and
cmc
jb
ds
ror
ret
xchg
adc
mov
in
int3
pop
sbb
ss
testl
mov
scas
dec
rclb
cwtl
sub
cmc
lock
cmc
or
popf
pushf
in
ret
xor
push
pushf
enter
mov
add
cltd
pop
enter
mul
pop
mov
aaa
mov
ljmp
shll
sub
stc
repz
fidivrs
cmpsl
push
or
andb
gs
add
pop
iret
into
shrl
sbbb
popa
jmp
and
push
fcoml
popa
jbe
cmc
fstps
dec
scas
pop
sbb
xchg
pusha
test
or
pop
stos
std
and
fisubl
mov
push
les
aam
jo
mov
scas
or
mov
mov
mov
xlat
fbld
rorb
cmp
and
cli
cs
jge
loope
in
pop
push
test
pop
inc
inc
adc
stc
das
mov
ljmp
out
and
test
mov
lock
mov
push
arpl
lods
loopne
jg
and
andb
adc
and
loope
xchg
popf
dec
mov
xchg
xlat
xor
int
add
jg
jp
test
out
inc
add
mov
inc
add
mov
xchg
push
mov
mov
imul
icebp
push
jbe
lock
aaa
push
shl
fcmovbe
mov
adc
or
adc
popf
paddsw
xor
fsubs
inc
jg
fs
push
and
stc
loopne
arpl
add
testl
sub
xchg
rolb
jns
mov
push
xchg
xchg
test
ret
into
rolb
das
mov
push
jge
pop
push
add
jecxz
aas
les
icebp
dec
out
push
cmp
adc
pop
sar
sub
jle
mov
mov
add
mov
ss
popa
imul
aas
mov
iret
fmul
dec
imul
aas
mov
jbe
hlt
repnz
andl
inc
cltd
lret
fmuls
inc
push
dec
popf
fldenv
dec
insb
sarl
int
out
adc
dec
std
out
shrb
adc
adc
hlt
mov
roll
andb
pop
push
hlt
dec
sub
mov
les
adc
scas
sbb
jbe
enter
pushf
ja
push
jmp
sti
add
push
push
insl
push
shlb
sti
mov
and
mov
sbb
mov
test
pop
push
scas
shrb
push
jg
arpl
sbb
notl
enter
je
nop
mov
loop
and
inc
cmc
add
mov
mov
jnp
push
cwtl
jno
repz
int3
xor
lods
scas
sti
jge
or
or
ret
pop
cmp
loopne
arpl
cmp
push
mov
push
sbb
add
imull
xchg
inc
dec
inc
loopne
stos
cwtl
addl
cltd
sub
out
inc
sbb
fs
cmpsl
jo
mov
hlt
loopne
sbb
pushf
stc
outsl
cwtl
stos
cmp
pop
adc
adc
in
pushf
inc
idivb
test
mov
shl
xchg
mov
fsubl
jmp
xor
nop
lret
xchg
addr16
jne
jl
mov
or
lret
sub
popf
lret
jg
dec
and
lahf
flds
jbe
sub
cmpsl
and
push
jle
pop
or
push
pop
xor
sbb
adc
or
fstp
mov
outsl
cwtl
dec
or
jg
pop
pushf
mov
mov
push
inc
mov
stc
pop
in
ljmp
cli
leave
mov
and
xchg
and
pop
pop
inc
add
lods
jo
nop
mov
ds
cmp
in
and
ljmp
lods
cltd
mov
mov
jno
in
pop
adc
ret
pop
sub
loop
ljmp
push
out
inc
hlt
popa
nop
mov
jns
cmpsl
loopne
sbbl
and
fistps
inc
xlat
or
test
scas
cmp
adc
dec
loope
push
loopne
pusha
sbb
out
bound
sbb
mov
jb
jmp
add
dec
inc
and
lods
hlt
enter
test
outsl
lret
mov
mov
loopne
dec
insb
or
sub
arpl
mov
repnz
rcll
cmp
cmp
xor
fidivrs
lods
fsts
loop
dec
sti
push
mov
lcall
dec
push
mov
adc
xor
push
xchg
cmp
subb
mov
jbe
dec
sbb
fmulp
lret
pop
stos
lret
in
inc
js
mov
inc
out
mov
pop
cmp
cmp
pusha
mov
jae
jecxz
popf
push
dec
lods
add
lods
dec
outsb
hlt
pop
cmpsb
pop
pop
adc
popa
movsl
xchg
push
xchg
xchg
or
mov
push
cmp
mov
repz
jl
sub
outsl
mov
cmc
pop
xor
push
adc
sti
inc
jbe
repnz
lret
movsb
push
cmc
jo
mov
sbb
sub
pop
or
jnp
pop
ja
push
scas
jg
push
insl
mov
add
sbb
cmc
add
sbb
xor
je
out
add
push
push
pop
and
cltd
jl
dec
or
add
sub
xor
xchg
or
push
and
add
lret
sbb
jnp
mov
rcrl
jo
dec
fwait
add
mov
sbb
xor
sub
je
mov
pop
movsl
into
sbb
xchg
loope
gs
adc
sarl
push
insb
inc
je
push
aas
xor
rorl
fsts
test
adc
cmp
adc
addb
les
dec
and
fistl
mov
xor
pop
xchg
sarl
loopne
push
add
lods
lods
mov
cmpl
movsb
inc
pop
stos
insb
or
mov
mov
sbb
es
ljmp
cmp
lock
push
or
cmpb
mov
pop
cmp
mov
xor
out
add
push
mov
mov
das
sbb
mov
xchg
jns
and
sbb
push
or
sub
xor
pop
push
popf
sti
inc
in
xor
push
mov
enter
into
and
inc
dec
push
insb
and
cmp
xchg
push
add
push
in
into
pop
roll
sub
xchg
das
jne
daa
mov
xor
js
add
jne
test
xchg
mov
ja
outsb
inc
cmp
in
jae
clc
scas
and
pushf
cwtl
sub
mov
call
adc
into
jo
cli
push
movsb
test
jecxz
jae
fs
data16
cmp
adc
dec
xchg
into
std
fdivrs
dec
loop
repz
out
movsb
fcomps
cli
shlb
sub
adcl
or
stos
adc
xchg
je
stos
xchg
jmp
or
push
cwtl
push
mov
psllq
cmp
imul
outsl
xor
xorb
cmp
mov
inc
add
mov
and
inc
call
lret
cmp
in
es
mov
mov
or
sub
popf
add
inc
pop
daa
mov
jne
addr16
dec
pop
cwtl
pop
insl
or
adc
add
outsl
add
mov
mov
xchg
adc
sbb
sbb
pop
or
mov
mov
xchg
sbb
jnp
add
push
into
ret
sbb
lret
fnsave
mov
aam
orl
or
push
stos
sub
jns
enter
lret
icebp
dec
jns
sub
ret
lret
adc
test
jae
pop
or
lock
xchg
sahf
cmp
sbb
fwait
notl
pop
xor
ret
pop
fs
dec
or
push
dec
jno
add
cld
push
ja
xorl
cmc
sub
xchg
ret
leave
in
negl
popf
mov
mov
imul
test
pop
lock
lods
rorb
je
sar
xorb
mov
dec
sar
mov
inc
mov
jg
add
jbe
jmp
ret
pop
push
pop
cmp
dec
jle
adc
insb
mul
cs
fs
jno
out
cmpb
push
sub
test
arpl
sub
add
ja
add
adc
ss
int
mov
in
in
dec
out
push
xor
cmp
jbe
clc
pop
mov
mov
loop
js
es
dec
cmp
mov
or
lea
mov
jle
push
hlt
enter
test
xor
sub
mov
sub
cmpsb
arpl
inc
cmc
shl
sub
fildll
pop
push
lret
or
in
mov
test
cld
lret
dec
and
pop
jnp
movsl
es
and
mov
push
mov
cwtl
enter
fimull
or
or
pushf
xchg
jbe
pop
or
icebp
fmull
in
mov
push
insl
xlat
test
stos
jbe
scas
cmp
icebp
mov
cmp
test
hlt
out
xor
mov
jle
adc
mov
lods
jb
fisubs
pop
movsl
cmp
das
pop
inc
pushl
mov
cmpsl
and
sbb
stc
inc
insb
xchg
pop
push
sub
mov
dec
push
test
ja
adc
push
outsb
jne
mov
jp
bnd
out
clc
gs
push
test
pop
push
sub
jnp
sahf
popa
jo
jbe
push
sarb
repz
jmp
cmp
ja
mov
out
out
fimuls
jp
movsl
andb
jp
push
in
hlt
push
push
nop
jp
mov
lret
mov
xchg
dec
jmp
jecxz
inc
or
adc
cltd
push
sub
jl
and
out
dec
aad
shlb
and
sbb
aam
cs
cmp
loopne
rcrl
fsubrl
loope
push
push
sub
out
push
push
sub
stc
xor
dec
and
sahf
or
sub
jg
loopne
roll
lock
lods
fidivrs
stc
dec
outsl
mov
out
ja
mov
pop
sbb
repnz
clc
mov
sahf
push
fsubl
pop
add
sbb
lods
sahf
and
dec
jns
dec
mov
mov
cmp
jle
dec
enter
adc
jbe
lods
add
daa
mov
cmc
adc
nop
inc
mov
cmp
jb
aas
xchg
mov
jae
out
mov
cld
and
or
std
push
mov
lret
gs
sbb
rorb
push
aas
outsl
push
divb
addr16
in
dec
shl
inc
fcomps
rcl
lock
outsl
outsl
repnz
add
pop
test
or
out
xchg
lahf
inc
mov
inc
lret
add
dec
mov
mov
dec
mov
rcrl
pop
in
loop
cmp
jmp
and
lea
jo
scas
call
test
pop
aas
pushf
imul
pop
es
sti
mov
cmpsl
cmpsl
je
mov
jmp
and
gs
push
mov
cmp
push
push
std
push
ret
mov
add
nop
out
adc
rclb
sbb
ljmp
mov
or
leave
test
addl
ljmp
sbb
int3
insb
lahf
data16
test
daa
mov
jmp
cmc
inc
int
enter
out
lock
xchg
xor
loopne
inc
int3
inc
or
sahf
popa
stos
sub
jl
out
push
pop
pop
jo
fwait
daa
and
icebp
pop
shrb
mov
mov
outsb
or
mov
dec
enter
mov
adc
aad
xor
and
mov
or
lret
shrl
xchg
out
mov
add
fbstp
out
call
and
xor
push
ja
cmp
iret
orb
adc
dec
test
inc
dec
dec
xor
out
and
clc
int3
mov
mov
mov
pop
aam
cmp
adc
scas
and
hlt
xchg
cmp
ss
pop
push
xor
or
xor
mov
dec
imul
inc
sahf
push
inc
movsl
enter
jge
mov
sti
cwtl
pop
loopne
or
xchg
inc
mov
pusha
mov
incb
adc
test
inc
jmp
mov
cmp
push
pop
lret
inc
aam
jl
jbe
ds
vunpcklps
jle
cs
std
imul
mov
ds
stos
pop
ret
adc
fldenv
jnp
lea
cmp
push
adc
fnstcw
popf
cmc
inc
mov
mov
repnz
xor
pop
and
popf
pop
stos
pmulhw
loop
in
stc
push
jge
cmp
xor
jecxz
push
jbe
adc
inc
or
dec
call
popf
pop
sarb
enter
in
cld
loope
std
jbe
ljmp
inc
popf
fsubrs
mov
sub
enter
push
cmp
loop
mov
mov
xchg
push
dec
sbb
lret
jb
lock
mov
scas
push
push
mov
outsl
dec
aas
shlb
dec
aam
rcr
insl
or
int3
push
movsb
mov
rcrl
je
je
test
mov
add
popw
cmp
add
sbb
push
adc
movb
mov
cmpsl
xchg
jae
sbb
ret
sbb
test
scas
xchg
stc
mov
push
leave
in
hlt
mov
cmova
mov
dec
and
inc
adcl
adc
mov
cmc
imul
shr
hlt
das
and
pop
faddl
in
pop
mov
clc
dec
pushl
sti
jmp
or
sbb
inc
pop
scas
icebp
pop
xor
push
and
mov
xchg
mov
addl
in
fbld
outsb
repnz
mov
test
cmp
dec
mov
xor
sbb
pop
inc
mov
xor
or
daa
inc
push
dec
jg
pop
adc
mov
out
cmp
sub
cld
lods
mov
shr
dec
mov
repz
sub
lret
push
mov
xor
fldcw
mov
xchg
push
inc
faddl
sub
xor
pop
sbb
insb
xchg
xor
mov
mov
dec
nop
cmc
out
das
dec
sub
dec
adc
hlt
insl
add
and
xor
addb
in
push
hlt
cmpsb
loope
loop
lods
inc
sub
pop
je
in
sub
arpl
add
mov
mov
inc
mov
adc
popa
loopne
into
fwait
sbb
jne
out
dec
insb
iret
fiaddl
push
cmp
cmpsl
aad
ds
pop
sarb
cmp
xor
lock
negl
cmp
test
dec
push
je
inc
sbb
hlt
imul
popf
dec
rolb
loope
pop
pop
mov
movsb
add
ret
jns
lock
and
jb
push
jne
das
sbb
and
or
jp
int
push
mov
add
push
lret
xor
pop
fstpt
shrb
je
lret
xor
inc
test
cmp
lods
dec
add
pop
jnp
push
pop
jmp
pop
movsl
cmp
fs
push
inc
push
dec
das
inc
mov
dec
or
mov
mov
inc
addr16
mov
adc
cmpsl
pop
nop
push
adc
punpckhbw
sbb
scas
fmulp
in
inc
cmp
clc
mov
mov
mov
fstpl
and
dec
and
scas
loope,pt
pop
ljmp
daa
mov
cmpsb
mov
mov
add
sub
xchg
cmp
gs
daa
mov
push
pop
stos
movsb
mov
loopne
subl
xor
jb
imul
bound
ss
or
xor
call
sub
adc
cmc
xor
imul
and
pop
mov
das
push
dec
adcb
mov
lods
mov
hlt
add
jle
dec
sbb
sub
mov
loope
shll
cmpsb
lcall
gs
and
jl
cld
cmp
inc
sbb
sbb
mov
repz
mov
xor
mov
bound
lods
and
mov
xor
jg
je
popf
dec
add
cmp
lea
push
push
mov
and
mov
js
dec
xchg
das
int3
push
cmc
orb
ss
clc
mov
ja
xor
push
int
mov
test
mov
icebp
inc
or
adc
pop
lret
cltd
and
inc
cmc
mov
mov
adc
lods
adc
add
in
je
rolb
testl
aas
fcomps
cmp
mov
xchg
pop
cmp
outsb
dec
push
jl
sub
iret
jns
push
or
xorl
xchg
xchg
jne
les
add
and
mov
pusha
lret
mov
mov
mov
lock
push
ret
dec
imul
inc
pusha
leave
xor
jb
in
in
or
dec
adc
pop
loope
mov
mov
cmp
mov
shlb
rolb
and
jnp
scas
in
inc
es
xor
and
outsl
mov
into
scas
inc
outsl
insb
ret
lret
jb
push
mov
aaa
or
and
in
loope
notb
fiadds
out
jg
lret
push
jbe
mov
insl
stos
insb
pushf
cltd
jae
cld
lods
lahf
push
cwtl
cmp
sub
mov
jl
sbb
mov
pop
mov
push
fnstcw
add
mov
pop
push
xchg
xchg
mov
ljmp
add
ret
push
push
sub
push
sbb
jne
inc
dec
xor
orb
ljmp
insl
in
in
ret
loopne
add
mov
orb
in
adc
sahf
js
cltd
jo
rol
adc
mov
in
hlt
jmp
pop
sub
dec
into
jmp
add
iret
leave
outsb
or
mov
scas
fldenv
sti
cmc
adc
enter
outsl
jmp
imul
idivl
enter
test
or
xchg
test
inc
jbe
or
sbb
sub
or
addb
sub
mov
repz
ficomps
scas
mov
imul
sarb
xor
inc
mov
and
or
mov
xchg
loopne
cmp
jle
fucomip
jnp
xor
cmc
xchg
jnp
xchg
jecxz
js
daa
lods
nop
jg
popf
std
push
cmpsl
dec
fwait
into
negl
int3
jp
incl
nop
cmp
adc
lret
push
or
or
sub
in
jge
add
push
lcall
fcompl
mov
cmc
xchg
push
loopne
sub
shlb
mov
xor
out
lret
sbb
sub
aaa
mov
sarb
jl
mov
pop
and
and
lods
jo
pop
inc
push
aad
cmc
jmp
jbe
repz
movsl
inc
out
pop
mov
cld
es
and
orl
bnd
push
cmp
ret
ror
fcomip
in
hlt
rcll
sbb
sbb
mov
xchg
pop
imul
test
aaa
imul
push
fcmovb
and
and
mov
xchg
mov
fwait
les
push
push
filds
outsb
dec
jo
jno
mov
mov
cltd
xchg
xchg
xor
pop
lock
pop
xor
rorl
inc
stos
add
dec
rcrl
aad
movsb
jecxz
mov
or
loopne
out
sub
and
outsb
adc
or
dec
lock
or
into
sbb
push
sbb
fsubrs
sbb
add
or
push
arpl
adc
rcl
xor
jecxz
xlat
sahf
mov
inc
inc
fimull
xchg
stos
jne
sub
xor
mov
sub
push
or
mov
jecxz
fcmovu
sub
lea
add
or
fcom
ss
mov
popl
stos
vorps
pop
push
leave
pop
mov
je
scas
bound
push
rcrl
je
lea
sbb
cld
test
mov
jne
push
lret
rcll
sbb
mov
jge
es
addr16
pop
sbb
add
fdivr
xor
xchg
cs
addr16
aas
jbe
pop
in
repz
mov
loopne
fs
out
adc
xlat
xor
subl
push
xlat
hlt
js
push
push
xchg
orl
shrb
inc
add
push
jl
jp
and
int
ret
fcoms
push
xchg
xchg
push
ljmp
jg
mov
mov
dec
add
or
pop
lret
cmp
mov
es
sub
pop
movsl
add
loop
call
jbe
and
pop
lods
jmp
xor
jae
cwtl
les
inc
push
add
test
je
or
pop
scas
loopne
shll
cli
leave
push
xchg
dec
or
add
xor
enter
test
jmp
pop
mov
shll
jge
cld
sbb
jecxz
dec
out
jp
jb
xchg
fs
jp
xor
xchg
bndldx
fwait
mov
aam
les
cld
jne
push
mov
cmp
mov
stc
adcb
fs
div
repz
adc
mov
mov
push
add
je
out
cmovb
aam
push
aad
loopne
and
lods
iret
leave
mov
test
add
pop
or
and
cmpsb
popf
fwait
sub
mov
mov
cli
push
je
popf
pop
push
pop
push
out
dec
cltd
je
imul
or
mov
sahf
and
sub
daa
test
mov
nop
arpl
jne
and
frstor
xor
push
das
jge,pn
aas
inc
mov
inc
clc
imul
imul
or
subl
mov
push
cmc
daa
clc
mov
lods
dec
or
fchs
dec
lret
cltd
in
cmpsl
adc
mov
pop
stos
mov
xor
add
mov
cs
jno
outsb
xor
cmc
mov
mov
push
test
mov
out
addb
fisttps
fldcw
roll
aam
inc
pop
fadd
adc
push
test
add
sub
ja
adc
xchg
cmp
mov
rorb
lds
inc
ficoms
inc
pop
adc
jbe
out
mov
inc
adc
pop
mov
stos
and
jnp
add
fiadds
inc
sbb
sub
mov
lret
mov
rolb
sub
icebp
scas
hlt
jecxz
adc
fstpt
in
popf
sbb
stc
mov
mov
nop
push
icebp
push
mov
adc
cmpb
out
in
fisubrs
pusha
lret
sbb
sbb
ret
inc
pop
cli
xchg
cmp
clc
or
repnz
jge
arpl
or
out
stos
mov
addr16
ja
lret
mov
mov
mov
repz
jne
and
push
outsl
push
pop
test
pop
push
popf
xchg
cld
aaa
out
aas
out
test
add
ror
add
daa
push
push
movsl
dec
push
sub
je
mov
cs
ss
hlt
ds
das
dec
jmp
jb
stc
flds
inc
inc
dec
dec
dec
fxch
xor
ret
daa
mov
fstl
loopne
lock
cmp
jnp
sbb
push
out
rolb
sarb
xor
sysexit
jle
into
and
outsl
sub
aad
and
sub
pop
xor
mov
sbb
fisttpll
daa
fstl
shrb
cmp
sub
lret
ss
idivb
enter
inc
pop
cmp
lret
jbe
cmp
xor
stos
adc
push
inc
sub
das
jp
sbb
adc
aaa
jbe
arpl
in
push
push
mov
adc
ja
inc
mov
lret
inc
or
xchg
lods
inc
adc
dec
mov
xor
cmp
sbb
and
cmp
sub
or
repnz
sahf
inc
jae
or
fwait
xor
je
mov
fadds
stc
mov
bound
mov
or
inc
push
outsb
or
dec
lods
sbb
test
mov
mov
aam
mov
dec
and
xchg
dec
push
add
pop
jbe
jns
push
hlt
pusha
in
rcll
rolb
sbb
lahf
test
inc
aam
cmp
aad
jmp
and
mov
xor
pop
mov
xchg
out
sub
aas
movsb
pop
and
pop
insb
push
mov
inc
scas
ja
es
jecxz
aad
mov
adc
or
out
cs
dec
fiaddl
mov
jl
cmp
inc
cmove
pop
jecxz
sub
sub
xor
imul
rcll
cmp
fmul
faddp
xchg
es
pop
mov
movsb
mov
xchg
movsl
or
fsubrl
loopne
ljmp
pop
mov
and
add
cmpsl
push
xor
and
jecxz
iret
ret
ljmp
out
and
sbb
push
sub
cltd
add
in
push
jnp
mov
pop
and
loopne
cli
stc
aad
shrb
push
mov
mov
or
lea
std
stos
sbb
gs
xchg
js
jbe
push
add
or
adc
rcrb
push
lods
pop
add
mov
ljmp
cli
sub
mov
and
test
pop
imul
adc
pop
and
sub
pushf
aaa
into
xchg
add
pushf
xlat
mov
xchg
aad
mov
and
push
frstor
arpl
dec
scas
mov
out
cmp
push
mov
out
adc
sbb
fnstsw
dec
xor
mov
lock
fs
xlat
push
out
xlat
out
mov
push
cmp
in
add
jns
push
sbb
sub
add
mov
inc
mov
dec
inc
cmp
or
sbb
inc
aad
jle
and
mov
fdivrl
out
call
mov
mov
aas
filds
and
popa
lods
cmp
cmp
es
test
roll
jmp
inc
mov
push
add
repz
jb
jmp
and
addl
jg
out
cmc
aad
sbb
fisttpll
xorl
xlat
inc
inc
inc
dec
scas
cmc
shl
das
xchg
mov
mov
outsl
push
cli
loope
mov
js
imull
xor
pusha
loop
sub
sub
outsb
mov
into
or
loope
inc
sbb
ljmp
stos
sub
imul
inc
nop
cmp
out
loopne
dec
outsl
not
lock
mov
lods
and
dec
aas
cmp
fistpl
xor
fadds
outsl
popf
verw
out
xchg
push
daa
add
xchg
sarb
sti
aas
jecxz
push
mov
int3
scas
sbbl
and
add
loope
add
or
inc
fmuls
push
lahf
dec
cmpsb
sbb
jno
iret
cli
sub
sahf
and
or
sub
fwait
xchg
ss
lock
fldl
cmp
out
fsts
adc
pop
mov
test
add
dec
xor
data16
sbb
cmpsl
fstp
ss
jl
cltd
aas
dec
jns
add
jmp
mov
jns
mov
lods
popa
pusha
mov
out
cmpsl
inc
push
dec
and
test
stc
insl
mov
xlat
mov
xchg
xor
movsb
das
mov
sub
sahf
loop
adc
or
scas
jne
negb
std
dec
push
xor
movl
xchg
mov
stos
mov
xchg
sub
scas
pop
mov
loope
push
ljmp
fiaddl
in
push
insb
shll
enter
xadd
mov
adcl
adc
jmp
movl
das
dec
dec
cmp
mov
pop
or
in
mov
push
mov
sbb
clc
movsl
scas
cmpw
je
mov
ret
test
in
adc
or
loopne
inc
inc
ficoml
add
cmp
imul
sub
sbb
jecxz
sub
add
cltd
pop
pusha
pop
ljmp
jne
andl
jbe
jecxz
cmp
xor
pop
mov
xchg
rcl
and
sbb
adc
pusha
jecxz
aaa
sarb
xor
in
and
lds
sub
es
lahf
inc
pop
xchg
pop
cmpsl
call
sub
mov
or
jmp
pop
xor
ja
bound
ss
push
sbb
pop
sbb
sbb
out
adc
cltd
je
mov
fistl
leave
sbb
fbstp
filds
push
pop
test
pusha
dec
aas
mov
and
fs
pop
mov
and
sub
mov
sub
cltd
mov
jne
in
jecxz
fnstcw
nop
push
push
stc
mov
test
cwtl
lods
and
gs
std
lods
cmp
pop
mov
xor
out
testb
daa
rol
sub
sbb
jp
daa
rolb
dec
sbb
jne
fbstp
sbb
or
pusha
aas
mov
xor
aad
out
in
pushl
shll
cmp
jecxz
ds
sbb
mov
repz
cltd
mov
iret
orl
mov
xchg
add
jge
mov
mov
mov
shr
jae
mov
or
pop
daa
lret
mov
lret
or
in
cmpsb
test
mov
iret
lahf
mov
outsl
sub
test
or
sbb
stos
push
push
lds
dec
push
lds
sub
add
ret
rcll
push
cmp
insb
std
sbb
popa
cli
mov
pop
jle
gs
mov
ljmp
je
inc
fwait
xor
call
pushl
dec
int
out
rcl
mov
jle
pop
in
jl
jl
fstl
push
sbb
adc
das
je
cmp
jbe
dec
dec
and
inc
adc
cmp
jl
or
clc
lock
je
dec
int3
int
scas
xor
add
jl
xchg
rcl
testb
sbb
inc
sub
jl
push
mov
popf
push
dec
lahf
mov
jge
das
dec
mov
sbb
sbb
lds
xor
into
lea
push
pop
adcl
ljmp
push
in
jg
outsl
mov
sar
xchg
jnp
pop
inc
imul
mov
inc
in
pop
sbb
push
jg
popa
icebp
sub
stos
mov
lods
adc
loopne
aaa
test
pop
sub
test
mov
inc
pop
cmp
or
dec
and
xlat
mov
xchg
loope
dec
or
xor
outsl
xchg
fcomi
pop
or
pop
stos
add
enter
mov
xchg
sarb
add
jl
jnp
and
loope
fsub
addb
jo
sub
pop
adc
std
ds
cmc
sub
out
dec
sti
jb
sub
cwtl
mov
pop
jmp
lds
jg
jle
fsubr
shrb
std
pop
or
cwtl
iret
pushf
icebp
mov
mov
call
jo
enter
rcrb
test
scas
ret
pushf
cmp
ret
lods
ja
bound
mov
pop
sbb
shlb
push
movsl
mov
mov
jg
sahf
xor
arpl
pop
add
pop
push
adc
jge
and
enter
mov
push
test
ss
fsubr
inc
ja
push
mov
xchg
shll
insb
out
icebp
push
inc
xchg
rorb
push
jmp
sahf
xchg
es
lahf
sbb
add
jle
je
cmp
ja
mov
rcrl
mov
push
test
mov
mov
into
shlb
pop
jge
int
cmovb
movsb
jge
lods
xchg
mov
movsb
dec
fnsave
jno
push
adc
cli
jecxz
xchg
popf
add
orl
sbb
xor
mov
xor
lcall
testl
out
scas
jns
add
push
orl
or
popf
and
dec
dec
jbe
or
orb
or
cmp
mov
sbb
and
loope
fistpl
test
mov
inc
xor
or
and
jbe
fnsave
loope
movsl
paddsw
adc
push
es
pop
addb
push
pop
lods
pcmpgtd
fstps
stos
imul
andb
sbb
rol
idivl
sub
cmp
stos
inc
testl
cmp
cmp
inc
push
push
xor
jbe
mul
int
sbb
add
test
stc
insb
and
stos
push
xor
rcll
ds
cwtl
lahf
cmp
mov
ret
clc
std
mov
popa
sub
jg
mov
popaw
push
inc
and
jo
test
addr16
jl
cs
shlb
enter
sbb
mov
hlt
addl
and
push
es
and
out
lods
push
sti
fdivs
ljmp
call
je
push
call
or
jns
mov
daa
insl
nop
push
sbb
lea
in
jl
movsl
mov
popl
jnp
dec
mov
pop
out
cwtl
stc
push
and
movsl
pop
repz
fwait
push
lret
ljmp
push
pop
cmc
test
fmull
sarb
mov
mov
sub
imul
imul
dec
mov
shrb
mov
pop
mov
dec
jmp
add
xor
mov
push
xchg
adc
xchg
jno
stc
call
or
push
arpl
rorl
sub
push
jbe
aam
add
inc
repnz
not
cmp
pop
pop
outsl
int3
popf
out
lret
ret
sti
add
mov
es
outsb
into
add
lret
in
push
scas
push
xchg
dec
mov
outsb
adc
mov
stos
jg
pop
std
out
int3
test
cmpsl
or
je
jmp
out
add
clc
xor
xor
dec
out
data16
mov
dec
xorl
stos
xchg
loopne
fucomi
xchg
lahf
mov
arpl
cmp
jns
mov
xlat
inc
lods
outsl
cltd
ret
scas
movsl
fistl
jno
test
data16
stc
xor
aas
jo
mov
lahf
pop
adc
push
xchg
mov
pop
push
inc
loopne
inc
leave
inc
das
mov
jmp
jg
sub
or
out
call
ljmp
sbbb
mov
test
xor
iret
add
adc
call
mov
dec
test
adc
mov
jle
jmp
xchg
and
mov
or
pop
shlb
test
orl
jae
and
mov
xchg
lods
sub
out
jo
adc
dec
sahf
cmp
mov
jb
cmp
inc
mov
insb
cmovns
or
fucom
stos
jno
test
out
sub
mov
call
jp
out
cmp
add
cmp
cmp
adc
mov
sub
test
mov
inc
aad
repnz
clc
arpl
outsb
pop
lods
mov
sbb
stos
roll
daa
or
imul
les
add
mov
inc
bound
jne
movsb
repnz
xchg
loope
sbb
jp
out
push
cmp
xor
inc
in
rcrl
lods
inc
lods
push
mov
rclb
mov
std
add
aas
and
pop
ror
sbb
mov
fwait
cmp
pop
aaa
jo
pop
jns
add
repnz
iret
push
imul
mov
sbb
popf
inc
shl
xchg
xor
and
aam
and
inc
mov
adc
out
fs
nop
jns
sub
aas
pushf
dec
sarl
stc
or
roll
xorl
stos
mov
inc
pop
aas
xor
jnp
sbb
ja
and
sti
fwait
iret
mov
sahf
cmp
add
jo
or
test
add
pop
imul
mov
adc
shrl
pop
in
bound
popa
hlt
and
js
stos
add
scas
cmp
std
sub
int
loopne
int
push
mov
aaa
pop
mov
fwait
add
jp
pop
push
in
dec
es
push
dec
xchg
mov
dec
scas
lea
scas
mov
jbe
mov
inc
inc
sbb
sarb
cmp
mov
std
shll
sub
cli
sub
fwait
mov
repz
dec
repnz
and
dec
xchg
shlb
cs
jge
pop
ret
pop
into
outsl
mov
out
xchg
push
lret
add
push
pop
mov
jae
js
mov
cmpsl
xchg
and
pop
cmp
jno
in
inc
mov
mov
jae
repnz
std
cmp
or
add
cld
xchg
scas
xchg
outsl
add
cmp
push
dec
out
fnsave
scas
loop
dec
or
xchg
mov
gs
arpl
sarl
mov
fwait
add
pop
inc
cmc
mov
call
push
xorl
sub
dec
fdivrl
cmp
gs
ds
arpl
xchg
insb
push
mov
ret
ficomps
nop
popf
xchg
gs
popa
mul
jecxz
cmpsl
cmpsl
jg
mov
mov
jge
mov
lods
mov
movsl
mov
shr
mov
adc
pop
push
mov
or
into
int
pop
jmp
int
jle
jmp
cmp
push
pop
hlt
es
pushf
fisubrl
dec
or
or
int3
dec
xchg
add
stos
and
sbb
shrl
pop
and
movsb
xchg
mov
push
rorb
dec
sub
fwait
int
call
or
cmpsb
aas
mov
lea
js
mov
jae
sbb
rcrb
mov
xor
pop
insb
mov
ret
mov
dec
je
xchg
fistps
flds
sbb
lods
fdivl
fs
fmull
mov
and
xor
xchg
jg
sbb
inc
add
les
pushf
insb
fwait
adc
fwait
data16
sbb
push
xor
idivb
enter
or
test
jbe
sub
scas
mov
mov
popf
cltd
mov
jle
inc
sub
dec
daa
in
pop
xchg
jle
je
rcr
xor
sbb
sub
out
fs
repz
mov
leave
sub
int3
inc
mov
enter
or
pushl
and
pushf
xor
arpl
cltd
and
aam
mov
arpl
cmp
jecxz
or
pushf
out
lock
cmp
arpl
outsb
push
add
mov
addr16
out
cmp
push
pusha
sub
test
pop
sub
push
xchg
sahf
fmulp
jmp
pop
mov
inc
mov
adc
sahf
mov
adc
push
xchg
mov
out
xchg
add
shrb
ret
xchg
jmp
pop
jmp
dec
xor
pop
aaa
xor
out
mov
jbe
mov
dec
xor
addr16
pop
stc
and
gs
inc
fmulp
cs
or
push
out
pop
mov
inc
xchg
jp
mov
aam
js
fldcw
mov
adc
shlb
addr16
cld
jecxz
gs
inc
sub
fwait
aad
and
adc
push
fidivl
inc
std
push
xor
enter
les
insb
mov
rcll
scas
jp
adc
add
add
inc
sbb
icebp
mov
adc
inc
and
mov
outsb
adc
xchg
cld
sahf
adc
lds
adc
cmc
imul
sbb
and
mov
sti
cmpl
out
mov
and
xor
xchg
jle
pop
ret
jg
mov
mov
or
sti
push
jnp
jnp
bound
xchg
pushf
fisttps
fnstsw
or
hlt
ss
jnp
nop
mov
aas
test
lret
out
cs
inc
push
je
je
aam
iret
insb
scas
pop
add
daa
sarb
mov
sub
idivl
es
pop
mov
shlb
pusha
push
xor
jp
enter
push
lret
out
push
xchg
ja
movsb
fnstenv
cmpsb
mov
and
repz
callw
pextrw
in
nop
xor
cmp
movsl
pop
pop
scas
mov
mov
push
sarl
or
mov
gs
push
call
jle
pop
or
nop
add
jg
scas
push
fwait
movsb
pop
or
cmp
xchg
inc
lods
push
fcomps
bound
fdivs
push
fstps
mov
lock
dec
push
sbb
xor
icebp
or
inc
cmp
mov
mov
pusha
lret
pop
xor
or
arpl
mov
pusha
push
ret
fs
dec
xor
pop
inc
mov
xchg
roll
mov
sbb
pusha
lods
aaa
cltd
rclb
popf
out
les
imulb
push
mov
pop
adc
es
adc
adc
ja
mov
mov
push
dec
and
hlt
dec
jp
addr16
lods
sbb
push
leave
cltd
stos
xchg
xor
pop
shlb
fdiv
ret
movsb
aam
mov
cmp
inc
inc
cli
jg
fildll
out
scas
jg
xchg
xor
jns
pop
sub
imul
mov
xchg
xchg
pop
cwtl
jo
mov
test
aaa
add
sahf
ja
stos
fwait
inc
test
std
pop
vcvtsi2sdl
mov
jle
add
xor
leave
or
mov
sub
and
lea
adc
dec
cli
inc
gs
jns
cmp
jne
xchg
sbb
sbbl
test
or
add
push
fs
imul
mov
cwtl
cmpsb
and
icebp
iret
pop
lret
mov
add
pop
adc
jp
or
lock
fldt
mov
mov
ss
sahf
adc
xor
xor
in
cmc
jae
or
pop
stos
fdivrl
in
call
and
mov
aaa
fisubs
jae
es
push
cmp
jmp
pop
hlt
adc
jnp
fimull
xchg
sbb
xor
adc
sbb
imulb
in
mov
sbb
scas
pop
fdivs
fcoms
dec
xchg
lds
jbe
pop
sub
mov
orl
sarb
outsl
xor
or
hlt
addb
nop
mov
xor
test
pop
push
jo
lods
xor
cmp
fdivrl
xchg
sbb
mov
mov
ja
jnp
mov
cltd
std
les
jecxz
ror
div
jno
jnp
cmp
fistl
and
lock
xor
mov
jmp
std
stc
out
sub
mov
hlt
sbb
jns
sbb
dec
daa
dec
fldcw
mov
pop
rcll
f2xm1
pop
mov
cltd
pop
cmp
mov
mov
dec
loopne
aaa
cmp
repnz
mov
ss
faddl
cwtl
xchg
fcmovnbe
cmp
mov
or
and
stos
sti
push
inc
mov
out
mov
xchg
jmp
rclb
sbb
mov
scas
rolb
push
inc
cmp
loop
add
lds
aad
cmpsb
and
mov
adc
pop
pop
xchg
inc
xchg
adc
inc
loopne
push
dec
inc
adc
xorb
dec
adc
cli
das
pusha
leave
loope
mov
lds
xchg
and
lret
mov
js,pn
sbb
jle
lods
imul
stos
imul
cmpsl
hlt
xchg
adc
mov
gs
pop
mov
and
cmp
push
movsl
mov
push
iret
xlat
mov
mov
sub
pop
fdivrl
fcomip
divb
jns
dec
aas
xlat
add
fwait
mulb
cmp
xchg
cltd
mov
and
sub
pushf
imul
cltd
jbe
mov
inc
xor
nop
cmp
leave
jae
pop
clc
sbbb
mov
lret
and
mov
bound
mov
xchg
xchg
sbb
and
inc
js
leave
pop
jno
cltd
addl
mul
fnstcw
mov
bound
mov
mov
push
roll
gs
mov
sub
adc
js
xchg
mov
push
int3
push
in
add
jge
and
lahf
subl
sub
imul
dec
pop
call
imul
cmp
movsb
divl
scas
or
movsl
or
xchg
ror
in
rcrb
xor
fwait
pop
xor
repz
adc
push
mov
dec
imul
push
jg
or
lea
mov
push
jl
mov
in
sbb
orl
testb
and
push
vpsrld
and
pop
sbb
adc
fldl
lcall
mov
pop
push
and
hlt
outsb
out
gs
test
cmpl
mov
nop
jo
cli
xor
sarb
dec
filds
imul
dec
inc
fildl
push
cmp
lods
jg
inc
cmpsb
xor
scas
mov
arpl
cmp
mov
pop
sub
daa
lea
jb
jbe
movsb
shll
cmp
loop
xchg
adc
sbb
mov
push
sub
cwtl
jp
dec
xchg
inc
aam
dec
sbb
push
sub
fimull
sbb
and
push
cwtl
lods
shlb
push
cld
and
dec
fs
and
fildll
test
xchg
push
adc
push
lahf
jbe
rep
ret
mov
scas
lret
shlb
cmc
mov
in
push
stos
mov
mov
addb
inc
and
nop
jae
fisttps
ficomps
inc
push
mov
lahf
or
xor
aam
mov
push
mov
mov
mov
mov
dec
das
cvtps2pd
jne
daa
add
idivb
push
xchg
cmp
jecxz
jmp
in
cmp
pop
pop
jp
pop
loopne
lret
mov
cli
fucom
add
nop
inc
or
xor
push
cltd
test
push
xchg
bound
pop
and
adc
pop
sbb
ret
fcomps
shrb
sub
mov
addr16
jl
rorb
cwtl
push
je
cmpsb
ja
dec
xchg
dec
data16
shl
xlat
sub
pop
cmpl
sbb
xor
mov
test
dec
fidivrs
in
outsl
ds
repnz
mov
inc
gs
aam
int3
xor
int
int3
pop
stos
jmp
sbb
imul
and
bound
cmp
imul
loop
push
insb
mov
int3
add
ss
push
js
das
leave
lock
in
incl
sbb
out
ret
rclb
add
mov
enter
imul
pop
test
jo
mov
lds
push
push
pop
stos
mov
bound
dec
cmp
iret
bound
cmp
jae
adc
or
xchg
clc
jl
mulb
lods
aaa
sbb
enter
inc
data16
scas
cmp
aad
jae
and
xchg
xchg
jns
lock
lret
testb
cmp
jg
rclb
sbb
insb
dec
push
mov
pop
cmp
push
int3
pop
cmpsl
das
sub
jmp
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
